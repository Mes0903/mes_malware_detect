
6adaf93fda108331512c279e967f55379586948ebbc3dab4746e3d13d4736d97.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	lea    rcx,[rip+0x30749]        # 0x140031750
   140001007:	jmp    0x14002de94
   14000100c:	int3   
   14000100d:	int3   
   14000100e:	int3   
   14000100f:	int3   
   140001010:	lea    rcx,[rip+0x30719]        # 0x140031730
   140001017:	jmp    0x14002de94
   14000101c:	int3   
   14000101d:	int3   
   14000101e:	int3   
   14000101f:	int3   
   140001020:	lea    rcx,[rip+0x306e9]        # 0x140031710
   140001027:	jmp    0x14002de94
   14000102c:	int3   
   14000102d:	int3   
   14000102e:	int3   
   14000102f:	int3   
   140001030:	sub    rsp,0x28
   140001034:	xor    r8d,r8d
   140001037:	xor    edx,edx
   140001039:	xor    ecx,ecx
   14000103b:	call   QWORD PTR [rip+0x31257]        # 0x140032298
   140001041:	mov    QWORD PTR [rip+0x4f090],rax        # 0x1400500d8
   140001048:	test   rax,rax
   14000104b:	je     0x14000106d
   14000104d:	mov    r9d,0x4
   140001053:	mov    DWORD PTR [rsp+0x30],0x2
   14000105b:	lea    r8,[rsp+0x30]
   140001060:	xor    edx,edx
   140001062:	mov    rcx,rax
   140001065:	call   QWORD PTR [rip+0x31225]        # 0x140032290
   14000106b:	jmp    0x1400010ab
   14000106d:	mov    rax,QWORD PTR [rip+0x4a004]        # 0x14004b078
   140001074:	lea    rcx,[rip+0x49ffd]        # 0x14004b078
   14000107b:	cmp    rax,rcx
   14000107e:	je     0x1400010ab
   140001080:	test   BYTE PTR [rax+0x1c],0x1
   140001084:	je     0x1400010ab
   140001086:	call   QWORD PTR [rip+0x311fc]        # 0x140032288
   14000108c:	mov    rcx,QWORD PTR [rip+0x49fe5]        # 0x14004b078
   140001093:	lea    r8,[rip+0x33dae]        # 0x140034e48
   14000109a:	mov    r9d,eax
   14000109d:	mov    edx,0xa
   1400010a2:	mov    rcx,QWORD PTR [rcx+0x10]
   1400010a6:	call   0x140001f70
   1400010ab:	lea    rcx,[rip+0x306be]        # 0x140031770
   1400010b2:	add    rsp,0x28
   1400010b6:	jmp    0x14002de94
   1400010bb:	int3   
   1400010bc:	int3   
   1400010bd:	int3   
   1400010be:	int3   
   1400010bf:	int3   
   1400010c0:	lea    rcx,[rip+0x306d9]        # 0x1400317a0
   1400010c7:	jmp    0x14002de94
   1400010cc:	int3   
   1400010cd:	int3   
   1400010ce:	int3   
   1400010cf:	int3   
   1400010d0:	lea    rax,[rip+0x33519]        # 0x1400345f0
   1400010d7:	lea    rcx,[rip+0x30722]        # 0x140031800
   1400010de:	mov    QWORD PTR [rip+0x4d50b],rax        # 0x14004e5f0
   1400010e5:	jmp    0x14002de94
   1400010ea:	int3   
   1400010eb:	int3   
   1400010ec:	int3   
   1400010ed:	int3   
   1400010ee:	int3   
   1400010ef:	int3   
   1400010f0:	rex push rdi
   1400010f2:	sub    rsp,0x20
   1400010f6:	xor    edx,edx
   1400010f8:	lea    rcx,[rip+0x4eff9]        # 0x1400500f8
   1400010ff:	lea    r8d,[rdx+0x28]
   140001103:	call   0x14002e2ce
   140001108:	and    DWORD PTR [rip+0x4efd9],0x0        # 0x1400500e8
   14000110f:	lea    rax,[rip+0x33412]        # 0x140034528
   140001116:	and    QWORD PTR [rip+0x4efd2],0x0        # 0x1400500f0
   14000111e:	lea    rdi,[rip+0x4efbb]        # 0x1400500e0
   140001125:	and    DWORD PTR [rip+0x4efc0],0x0        # 0x1400500ec
   14000112c:	lea    rcx,[rip+0x4efc5]        # 0x1400500f8
   140001133:	and    QWORD PTR [rip+0x4efe5],0x0        # 0x140050120
   14000113b:	mov    QWORD PTR [rip+0x4ef9e],rax        # 0x1400500e0
   140001142:	mov    QWORD PTR [rip+0x4ee8f],rdi        # 0x14004ffd8
   140001149:	call   0x140004ee4
   14000114e:	test   eax,eax
   140001150:	jns    0x14000115b
   140001152:	mov    BYTE PTR [rip+0x4ee77],0x1        # 0x14004ffd0
   140001159:	jmp    0x140001165
   14000115b:	mov    DWORD PTR [rip+0x4ef83],0x38        # 0x1400500e8
   140001165:	lea    rax,[rip+0x3342c]        # 0x140034598
   14000116c:	mov    QWORD PTR [rip+0x4ee6d],rdi        # 0x14004ffe0
   140001173:	lea    rcx,[rip+0x306d6]        # 0x140031850
   14000117a:	mov    QWORD PTR [rip+0x4ef5f],rax        # 0x1400500e0
   140001181:	add    rsp,0x20
   140001185:	pop    rdi
   140001186:	jmp    0x14002de94
   14000118b:	int3   
   14000118c:	int3   
   14000118d:	int3   
   14000118e:	int3   
   14000118f:	int3   
   140001190:	rex push rbx
   140001192:	sub    rsp,0x20
   140001196:	xor    edx,edx
   140001198:	lea    rcx,[rip+0x4efb9]        # 0x140050158
   14000119f:	lea    r8d,[rdx+0x28]
   1400011a3:	call   0x14002e2ce
   1400011a8:	and    QWORD PTR [rip+0x4efd0],0x0        # 0x140050180
   1400011b0:	lea    rax,[rip+0xffffffffffffee49]        # 0x140000000
   1400011b7:	and    DWORD PTR [rip+0x4efca],0x0        # 0x140050188
   1400011be:	lea    rcx,[rip+0x4ef93]        # 0x140050158
   1400011c5:	and    DWORD PTR [rip+0x4efc0],0x0        # 0x14005018c
   1400011cc:	mov    ebx,0x1
   1400011d1:	mov    QWORD PTR [rip+0x4ef68],rax        # 0x140050140
   1400011d8:	mov    QWORD PTR [rip+0x4ef59],rax        # 0x140050138
   1400011df:	lea    rax,[rip+0x3762a]        # 0x140038810
   1400011e6:	mov    QWORD PTR [rip+0x4ef63],rax        # 0x140050150
   1400011ed:	mov    DWORD PTR [rip+0x4ef39],0x60        # 0x140050130
   1400011f7:	mov    BYTE PTR [rip+0x4ef4b],bl        # 0x140050148
   1400011fd:	mov    DWORD PTR [rip+0x4ef45],0x800        # 0x14005014c
   140001207:	call   0x140004ee4
   14000120c:	movzx  ecx,BYTE PTR [rip+0x4edbd]        # 0x14004ffd0
   140001213:	test   eax,eax
   140001215:	cmovs  ecx,ebx
   140001218:	mov    BYTE PTR [rip+0x4edb2],cl        # 0x14004ffd0
   14000121e:	lea    rcx,[rip+0x306fb]        # 0x140031920
   140001225:	add    rsp,0x20
   140001229:	pop    rbx
   14000122a:	jmp    0x14002de94
   14000122f:	int3   
   140001230:	sub    rsp,0x28
   140001234:	xor    edx,edx
   140001236:	lea    rcx,[rip+0x4ef5b]        # 0x140050198
   14000123d:	lea    r8d,[rdx+0x28]
   140001241:	call   0x14002e2ce
   140001246:	and    QWORD PTR [rip+0x4ef7a],0x0        # 0x1400501c8
   14000124e:	lea    rcx,[rip+0x4ef43]        # 0x140050198
   140001255:	and    DWORD PTR [rip+0x4ef74],0x0        # 0x1400501d0
   14000125c:	and    DWORD PTR [rip+0x4ef71],0x0        # 0x1400501d4
   140001263:	and    QWORD PTR [rip+0x4ef55],0x0        # 0x1400501c0
   14000126b:	mov    DWORD PTR [rip+0x4ef1b],0x48        # 0x140050190
   140001275:	call   0x140004ee4
   14000127a:	test   eax,eax
   14000127c:	jns    0x14000128c
   14000127e:	and    DWORD PTR [rip+0x4ef0b],0x0        # 0x140050190
   140001285:	mov    BYTE PTR [rip+0x4ed44],0x1        # 0x14004ffd0
   14000128c:	lea    rcx,[rip+0x306dd]        # 0x140031970
   140001293:	add    rsp,0x28
   140001297:	jmp    0x14002de94
   14000129c:	int3   
   14000129d:	int3   
   14000129e:	int3   
   14000129f:	int3   
   1400012a0:	xor    eax,eax
   1400012a2:	mov    WORD PTR [rip+0x4d3e5],0x201        # 0x14004e690
   1400012ab:	and    QWORD PTR [rip+0x4d3be],rax        # 0x14004e670
   1400012b2:	mov    QWORD PTR [rip+0x4d3a9],rax        # 0x14004e662
   1400012b9:	mov    DWORD PTR [rip+0x4d3ab],eax        # 0x14004e66a
   1400012bf:	mov    WORD PTR [rip+0x4d3a8],ax        # 0x14004e66e
   1400012c6:	lea    rax,[rip+0x37b03]        # 0x140038dd0
   1400012cd:	mov    QWORD PTR [rip+0x4d3a4],rax        # 0x14004e678
   1400012d4:	lea    rax,[rip+0x366cd]        # 0x1400379a8
   1400012db:	mov    QWORD PTR [rip+0x4d39e],rax        # 0x14004e680
   1400012e2:	lea    rax,[rip+0x37a57]        # 0x140038d40
   1400012e9:	mov    QWORD PTR [rip+0x4d398],rax        # 0x14004e688
   1400012f0:	xor    eax,eax
   1400012f2:	mov    QWORD PTR [rip+0x4d399],rax        # 0x14004e692
   1400012f9:	mov    DWORD PTR [rip+0x4d39b],eax        # 0x14004e69a
   1400012ff:	mov    WORD PTR [rip+0x4d398],ax        # 0x14004e69e
   140001306:	ret    
   140001307:	int3   
   140001308:	int3   
   140001309:	int3   
   14000130a:	int3   
   14000130b:	int3   
   14000130c:	int3   
   14000130d:	int3   
   14000130e:	int3   
   14000130f:	int3   
   140001310:	lea    rcx,[rip+0x30749]        # 0x140031a60
   140001317:	jmp    0x14002de94
   14000131c:	int3   
   14000131d:	int3   
   14000131e:	int3   
   14000131f:	int3   
   140001320:	lea    rcx,[rip+0x30749]        # 0x140031a70
   140001327:	jmp    0x14002de94
   14000132c:	int3   
   14000132d:	int3   
   14000132e:	int3   
   14000132f:	int3   
   140001330:	sub    rsp,0x28
   140001334:	lea    rcx,[rip+0x4e5e5]        # 0x14004f920
   14000133b:	call   0x14002d850
   140001340:	lea    rcx,[rip+0x30739]        # 0x140031a80
   140001347:	add    rsp,0x28
   14000134b:	jmp    0x14002de94
   140001350:	int3   
   140001351:	int3   
   140001352:	int3   
   140001353:	int3   
   140001354:	int3   
   140001355:	int3   
   140001356:	int3   
   140001357:	int3   
   140001358:	int3   
   140001359:	int3   
   14000135a:	int3   
   14000135b:	int3   
   14000135c:	int3   
   14000135d:	int3   
   14000135e:	int3   
   14000135f:	int3   
   140001360:	ret    0x0
   140001363:	int3   
   140001364:	int3   
   140001365:	int3   
   140001366:	int3   
   140001367:	int3   
   140001368:	int3   
   140001369:	int3   
   14000136a:	int3   
   14000136b:	int3   
   14000136c:	mov    rcx,QWORD PTR [rcx]
   14000136f:	rex.W jmp QWORD PTR [rip+0x30fda]        # 0x140032350
   140001376:	int3   
   140001377:	int3   
   140001378:	int3   
   140001379:	int3   
   14000137a:	int3   
   14000137b:	int3   
   14000137c:	int3   
   14000137d:	int3   
   14000137e:	int3   
   14000137f:	int3   
   140001380:	rex push rbx
   140001382:	sub    rsp,0x20
   140001386:	lea    rax,[rip+0x32ed3]        # 0x140034260
   14000138d:	mov    rbx,rcx
   140001390:	mov    QWORD PTR [rcx],rax
   140001393:	test   dl,0x1
   140001396:	je     0x14000139e
   140001398:	call   QWORD PTR [rip+0x3122a]        # 0x1400325c8
   14000139e:	mov    rax,rbx
   1400013a1:	add    rsp,0x20
   1400013a5:	pop    rbx
   1400013a6:	ret    
   1400013a7:	int3   
   1400013a8:	int3   
   1400013a9:	int3   
   1400013aa:	int3   
   1400013ab:	int3   
   1400013ac:	int3   
   1400013ad:	int3   
   1400013ae:	int3   
   1400013af:	int3   
   1400013b0:	mov    DWORD PTR [rdx],r8d
   1400013b3:	mov    rax,rdx
   1400013b6:	mov    QWORD PTR [rdx+0x8],rcx
   1400013ba:	ret    
   1400013bb:	int3   
   1400013bc:	int3   
   1400013bd:	int3   
   1400013be:	int3   
   1400013bf:	int3   
   1400013c0:	int3   
   1400013c1:	int3   
   1400013c2:	int3   
   1400013c3:	int3   
   1400013c4:	int3   
   1400013c5:	int3   
   1400013c6:	int3   
   1400013c7:	int3   
   1400013c8:	int3   
   1400013c9:	int3   
   1400013ca:	int3   
   1400013cb:	int3   
   1400013cc:	int3   
   1400013cd:	int3   
   1400013ce:	int3   
   1400013cf:	int3   
   1400013d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400013d5:	mov    QWORD PTR [rsp+0x10],rsi
   1400013da:	mov    QWORD PTR [rsp+0x18],rdi
   1400013df:	push   r14
   1400013e1:	sub    rsp,0x30
   1400013e5:	mov    rax,QWORD PTR [rcx]
   1400013e8:	mov    rsi,rcx
   1400013eb:	mov    r14,r8
   1400013ee:	mov    edi,edx
   1400013f0:	mov    rbx,QWORD PTR [rax+0x18]
   1400013f4:	mov    rcx,rbx
   1400013f7:	call   QWORD PTR [rip+0x312ab]        # 0x1400326a8
   1400013fd:	mov    r8d,edi
   140001400:	lea    rdx,[rsp+0x20]
   140001405:	mov    rcx,rsi
   140001408:	call   rbx
   14000140a:	mov    rcx,QWORD PTR [r14+0x8]
   14000140e:	cmp    QWORD PTR [rax+0x8],rcx
   140001412:	jne    0x140001422
   140001414:	mov    ecx,DWORD PTR [r14]
   140001417:	cmp    DWORD PTR [rax],ecx
   140001419:	jne    0x140001422
   14000141b:	mov    eax,0x1
   140001420:	jmp    0x140001424
   140001422:	xor    eax,eax
   140001424:	mov    rbx,QWORD PTR [rsp+0x40]
   140001429:	mov    rsi,QWORD PTR [rsp+0x48]
   14000142e:	mov    rdi,QWORD PTR [rsp+0x50]
   140001433:	add    rsp,0x30
   140001437:	pop    r14
   140001439:	ret    
   14000143a:	int3   
   14000143b:	int3   
   14000143c:	int3   
   14000143d:	int3   
   14000143e:	int3   
   14000143f:	int3   
   140001440:	cmp    rcx,QWORD PTR [rdx+0x8]
   140001444:	jne    0x140001451
   140001446:	cmp    DWORD PTR [rdx],r8d
   140001449:	jne    0x140001451
   14000144b:	mov    eax,0x1
   140001450:	ret    
   140001451:	xor    eax,eax
   140001453:	ret    
   140001454:	int3   
   140001455:	int3   
   140001456:	int3   
   140001457:	int3   
   140001458:	int3   
   140001459:	int3   
   14000145a:	int3   
   14000145b:	int3   
   14000145c:	int3   
   14000145d:	int3   
   14000145e:	int3   
   14000145f:	int3   
   140001460:	lea    rax,[rip+0x32c29]        # 0x140034090
   140001467:	ret    
   140001468:	int3   
   140001469:	int3   
   14000146a:	int3   
   14000146b:	int3   
   14000146c:	int3   
   14000146d:	int3   
   14000146e:	int3   
   14000146f:	int3   
   140001470:	mov    QWORD PTR [rsp+0x8],rbx
   140001475:	push   rdi
   140001476:	sub    rsp,0x30
   14000147a:	xor    ebx,ebx
   14000147c:	mov    ecx,r8d
   14000147f:	mov    DWORD PTR [rsp+0x20],ebx
   140001483:	mov    rdi,rdx
   140001486:	call   0x14002d6ec
   14000148b:	test   rax,rax
   14000148e:	mov    QWORD PTR [rdi+0x18],0xf
   140001496:	mov    QWORD PTR [rdi+0x10],rbx
   14000149a:	lea    rdx,[rip+0x32bf7]        # 0x140034098
   1400014a1:	cmovne rdx,rax
   1400014a5:	mov    BYTE PTR [rdi],bl
   1400014a7:	cmp    BYTE PTR [rdx],bl
   1400014a9:	je     0x1400014ba
   1400014ab:	or     rax,0xffffffffffffffff
   1400014af:	inc    rax
   1400014b2:	cmp    BYTE PTR [rdx+rax*1],bl
   1400014b5:	jne    0x1400014af
   1400014b7:	mov    rbx,rax
   1400014ba:	mov    r8,rbx
   1400014bd:	mov    rcx,rdi
   1400014c0:	call   0x140001b1c
   1400014c5:	mov    rbx,QWORD PTR [rsp+0x40]
   1400014ca:	mov    rax,rdi
   1400014cd:	add    rsp,0x30
   1400014d1:	pop    rdi
   1400014d2:	ret    
   1400014d3:	int3   
   1400014d4:	int3   
   1400014d5:	int3   
   1400014d6:	int3   
   1400014d7:	int3   
   1400014d8:	int3   
   1400014d9:	int3   
   1400014da:	int3   
   1400014db:	int3   
   1400014dc:	int3   
   1400014dd:	int3   
   1400014de:	int3   
   1400014df:	int3   
   1400014e0:	lea    rax,[rip+0x32bc1]        # 0x1400340a8
   1400014e7:	ret    
   1400014e8:	int3   
   1400014e9:	int3   
   1400014ea:	int3   
   1400014eb:	int3   
   1400014ec:	int3   
   1400014ed:	int3   
   1400014ee:	int3   
   1400014ef:	int3   
   1400014f0:	rex push rbx
   1400014f2:	sub    rsp,0x30
   1400014f6:	xor    eax,eax
   1400014f8:	mov    rbx,rdx
   1400014fb:	mov    DWORD PTR [rsp+0x20],eax
   1400014ff:	cmp    r8d,0x1
   140001503:	jne    0x140001528
   140001505:	mov    QWORD PTR [rdx+0x18],0xf
   14000150d:	lea    r8d,[rax+0x15]
   140001511:	mov    QWORD PTR [rdx+0x10],rax
   140001515:	mov    rcx,rbx
   140001518:	mov    BYTE PTR [rdx],al
   14000151a:	lea    rdx,[rip+0x32b97]        # 0x1400340b8
   140001521:	call   0x140001b1c
   140001526:	jmp    0x14000152d
   140001528:	call   0x140001470
   14000152d:	mov    rax,rbx
   140001530:	add    rsp,0x30
   140001534:	pop    rbx
   140001535:	ret    
   140001536:	int3   
   140001537:	int3   
   140001538:	int3   
   140001539:	int3   
   14000153a:	int3   
   14000153b:	int3   
   14000153c:	int3   
   14000153d:	int3   
   14000153e:	int3   
   14000153f:	int3   
   140001540:	lea    rax,[rip+0x32b89]        # 0x1400340d0
   140001547:	ret    
   140001548:	int3   
   140001549:	int3   
   14000154a:	int3   
   14000154b:	int3   
   14000154c:	int3   
   14000154d:	int3   
   14000154e:	int3   
   14000154f:	int3   
   140001550:	mov    QWORD PTR [rsp+0x8],rbx
   140001555:	push   rdi
   140001556:	sub    rsp,0x30
   14000155a:	xor    ebx,ebx
   14000155c:	mov    ecx,r8d
   14000155f:	mov    DWORD PTR [rsp+0x20],ebx
   140001563:	mov    rdi,rdx
   140001566:	call   0x14002d71c
   14000156b:	test   rax,rax
   14000156e:	mov    QWORD PTR [rdi+0x18],0xf
   140001576:	mov    QWORD PTR [rdi+0x10],rbx
   14000157a:	lea    rdx,[rip+0x32b17]        # 0x140034098
   140001581:	cmovne rdx,rax
   140001585:	mov    BYTE PTR [rdi],bl
   140001587:	cmp    BYTE PTR [rdx],bl
   140001589:	je     0x14000159a
   14000158b:	or     rax,0xffffffffffffffff
   14000158f:	inc    rax
   140001592:	cmp    BYTE PTR [rdx+rax*1],bl
   140001595:	jne    0x14000158f
   140001597:	mov    rbx,rax
   14000159a:	mov    r8,rbx
   14000159d:	mov    rcx,rdi
   1400015a0:	call   0x140001b1c
   1400015a5:	mov    rbx,QWORD PTR [rsp+0x40]
   1400015aa:	mov    rax,rdi
   1400015ad:	add    rsp,0x30
   1400015b1:	pop    rdi
   1400015b2:	ret    
   1400015b3:	int3   
   1400015b4:	int3   
   1400015b5:	int3   
   1400015b6:	int3   
   1400015b7:	int3   
   1400015b8:	int3   
   1400015b9:	int3   
   1400015ba:	int3   
   1400015bb:	int3   
   1400015bc:	int3   
   1400015bd:	int3   
   1400015be:	int3   
   1400015bf:	int3   
   1400015c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400015c5:	push   rdi
   1400015c6:	sub    rsp,0x20
   1400015ca:	mov    ecx,r8d
   1400015cd:	mov    edi,r8d
   1400015d0:	mov    rbx,rdx
   1400015d3:	call   0x14002d6ec
   1400015d8:	test   rax,rax
   1400015db:	mov    DWORD PTR [rbx],edi
   1400015dd:	lea    rax,[rip+0x4cffc]        # 0x14004e5e0
   1400015e4:	jne    0x1400015ed
   1400015e6:	lea    rax,[rip+0x4cfe3]        # 0x14004e5d0
   1400015ed:	mov    QWORD PTR [rbx+0x8],rax
   1400015f1:	mov    rax,rbx
   1400015f4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400015f9:	add    rsp,0x20
   1400015fd:	pop    rdi
   1400015fe:	ret    
   1400015ff:	int3   
   140001600:	int3   
   140001601:	int3   
   140001602:	int3   
   140001603:	int3   
   140001604:	int3   
   140001605:	int3   
   140001606:	int3   
   140001607:	int3   
   140001608:	int3   
   140001609:	int3   
   14000160a:	int3   
   14000160b:	int3   
   14000160c:	int3   
   14000160d:	int3   
   14000160e:	int3   
   14000160f:	int3   
   140001610:	mov    QWORD PTR [rsp+0x8],rbx
   140001615:	mov    QWORD PTR [rsp+0x10],rbp
   14000161a:	mov    QWORD PTR [rsp+0x18],rsi
   14000161f:	push   rdi
   140001620:	push   r14
   140001622:	push   r15
   140001624:	sub    rsp,0x20
   140001628:	xor    r15d,r15d
   14000162b:	mov    rbx,rdx
   14000162e:	mov    DWORD PTR [r8],r15d
   140001631:	mov    r14d,r15d
   140001634:	sub    ecx,0x4
   140001637:	je     0x14000167c
   140001639:	cmp    ecx,0x1
   14000163c:	je     0x140001647
   14000163e:	lea    eax,[r15+0x57]
   140001642:	jmp    0x14000171d
   140001647:	mov    rsi,r15
   14000164a:	mov    edi,r15d
   14000164d:	mov    bpl,r15b
   140001650:	cmp    WORD PTR [rdx+0x2a],r15w
   140001655:	jbe    0x1400016ad
   140001657:	movzx  eax,WORD PTR [rdx+0x2a]
   14000165b:	mov    rcx,QWORD PTR [rbx+0x30]
   14000165f:	dec    eax
   140001661:	cdq    
   140001662:	and    edx,0x1f
   140001665:	add    eax,edx
   140001667:	xor    edx,edx
   140001669:	sar    eax,0x5
   14000166c:	inc    eax
   14000166e:	movsxd r8,eax
   140001671:	shl    r8,0x2
   140001675:	call   0x14002e2ce
   14000167a:	jmp    0x1400016ad
   14000167c:	mov    rcx,r9
   14000167f:	call   QWORD PTR [rip+0x30983]        # 0x140032008
   140001685:	mov    rcx,rax
   140001688:	mov    rsi,rax
   14000168b:	call   QWORD PTR [rip+0x3097f]        # 0x140032010
   140001691:	mov    rcx,rsi
   140001694:	mov    bpl,al
   140001697:	call   QWORD PTR [rip+0x30963]        # 0x140032000
   14000169d:	mov    edi,eax
   14000169f:	mov    r14d,0x1
   1400016a5:	or     eax,0xffffffff
   1400016a8:	test   edi,edi
   1400016aa:	cmove  edi,eax
   1400016ad:	mov    r9d,r15d
   1400016b0:	mov    QWORD PTR [rbx+0x8],rsi
   1400016b4:	mov    BYTE PTR [rbx+0x28],bpl
   1400016b8:	mov    DWORD PTR [rbx+0x20],edi
   1400016bb:	mov    DWORD PTR [rbx+0x24],r14d
   1400016bf:	cmp    r15w,WORD PTR [rbx+0x2a]
   1400016c4:	jae    0x14000171b
   1400016c6:	cmp    BYTE PTR [rip+0x4e8c3],r15b        # 0x14004ff90
   1400016cd:	mov    rax,QWORD PTR [rbx+0x38]
   1400016d1:	mov    r10d,r9d
   1400016d4:	mov    rcx,QWORD PTR [rax+r10*8]
   1400016d8:	mov    rax,QWORD PTR [rbx+0x40]
   1400016dc:	mov    dl,BYTE PTR [r10+rax*1]
   1400016e0:	mov    al,BYTE PTR [rbx+0x28]
   1400016e3:	je     0x140001736
   1400016e5:	cmp    dl,al
   1400016e7:	jbe    0x1400016ed
   1400016e9:	test   al,al
   1400016eb:	jne    0x140001756
   1400016ed:	test   ecx,ecx
   1400016ef:	je     0x1400016f6
   1400016f1:	test   DWORD PTR [rbx+0x20],ecx
   1400016f4:	je     0x140001756
   1400016f6:	mov    r8,QWORD PTR [rbx+0x30]
   1400016fa:	mov    ecx,r9d
   1400016fd:	and    ecx,0x1f
   140001700:	shr    r10,0x5
   140001704:	mov    edx,0x1
   140001709:	shl    edx,cl
   14000170b:	or     DWORD PTR [r8+r10*4],edx
   14000170f:	movzx  eax,WORD PTR [rbx+0x2a]
   140001713:	inc    r9d
   140001716:	cmp    r9d,eax
   140001719:	jb     0x1400016c6
   14000171b:	xor    eax,eax
   14000171d:	mov    rbx,QWORD PTR [rsp+0x40]
   140001722:	mov    rbp,QWORD PTR [rsp+0x48]
   140001727:	mov    rsi,QWORD PTR [rsp+0x50]
   14000172c:	add    rsp,0x20
   140001730:	pop    r15
   140001732:	pop    r14
   140001734:	pop    rdi
   140001735:	ret    
   140001736:	cmp    dl,al
   140001738:	jbe    0x14000173e
   14000173a:	test   al,al
   14000173c:	jne    0x140001756
   14000173e:	test   rcx,rcx
   140001741:	je     0x1400016f6
   140001743:	test   QWORD PTR [rbx+0x10],rcx
   140001747:	je     0x140001756
   140001749:	mov    rax,QWORD PTR [rbx+0x18]
   14000174d:	and    rax,rcx
   140001750:	cmp    rax,QWORD PTR [rbx+0x18]
   140001754:	je     0x1400016f6
   140001756:	mov    r8,QWORD PTR [rbx+0x30]
   14000175a:	mov    ecx,r9d
   14000175d:	and    ecx,0x1f
   140001760:	shr    r10,0x5
   140001764:	mov    edx,0x1
   140001769:	shl    edx,cl
   14000176b:	not    edx
   14000176d:	and    DWORD PTR [r8+r10*4],edx
   140001771:	jmp    0x14000170f
   140001773:	int3   
   140001774:	int3   
   140001775:	int3   
   140001776:	int3   
   140001777:	int3   
   140001778:	int3   
   140001779:	int3   
   14000177a:	int3   
   14000177b:	int3   
   14000177c:	int3   
   14000177d:	int3   
   14000177e:	int3   
   14000177f:	int3   
   140001780:	mov    QWORD PTR [rsp+0x8],rbx
   140001785:	push   rdi
   140001786:	sub    rsp,0x20
   14000178a:	mov    r10,QWORD PTR [rsp+0x60]
   14000178f:	xor    edi,edi
   140001791:	test   r10,r10
   140001794:	je     0x1400018a7
   14000179a:	test   edx,edx
   14000179c:	je     0x140001864
   1400017a2:	sub    edx,0x1
   1400017a5:	jne    0x1400018a7
   1400017ab:	mov    r11d,edi
   1400017ae:	mov    rax,QWORD PTR [rsp+0x50]
   1400017b3:	mov    QWORD PTR [r10+0x10],r9
   1400017b7:	lea    r9d,[rdi+0x1]
   1400017bb:	mov    DWORD PTR [r10+0x24],r9d
   1400017bf:	mov    BYTE PTR [r10+0x28],r8b
   1400017c3:	mov    QWORD PTR [r10+0x18],rax
   1400017c7:	cmp    di,WORD PTR [r10+0x2a]
   1400017cc:	jae    0x1400018a7
   1400017d2:	cmp    BYTE PTR [rip+0x4e7b7],dil        # 0x14004ff90
   1400017d9:	mov    rax,QWORD PTR [r10+0x38]
   1400017dd:	mov    ebx,r11d
   1400017e0:	mov    rcx,QWORD PTR [rax+rbx*8]
   1400017e4:	mov    rax,QWORD PTR [r10+0x40]
   1400017e8:	mov    dl,BYTE PTR [rbx+rax*1]
   1400017eb:	mov    al,BYTE PTR [r10+0x28]
   1400017ef:	je     0x140001829
   1400017f1:	cmp    dl,al
   1400017f3:	jbe    0x1400017f9
   1400017f5:	test   al,al
   1400017f7:	jne    0x140001849
   1400017f9:	test   ecx,ecx
   1400017fb:	je     0x140001803
   1400017fd:	test   DWORD PTR [r10+0x20],ecx
   140001801:	je     0x140001849
   140001803:	mov    r8,QWORD PTR [r10+0x30]
   140001807:	mov    ecx,r11d
   14000180a:	and    ecx,0x1f
   14000180d:	shr    rbx,0x5
   140001811:	mov    edx,r9d
   140001814:	shl    edx,cl
   140001816:	or     DWORD PTR [r8+rbx*4],edx
   14000181a:	movzx  eax,WORD PTR [r10+0x2a]
   14000181f:	add    r11d,r9d
   140001822:	cmp    r11d,eax
   140001825:	jb     0x1400017d2
   140001827:	jmp    0x1400018a7
   140001829:	cmp    dl,al
   14000182b:	jbe    0x140001831
   14000182d:	test   al,al
   14000182f:	jne    0x140001849
   140001831:	test   rcx,rcx
   140001834:	je     0x140001803
   140001836:	test   QWORD PTR [r10+0x10],rcx
   14000183a:	je     0x140001849
   14000183c:	mov    rax,QWORD PTR [r10+0x18]
   140001840:	and    rax,rcx
   140001843:	cmp    rax,QWORD PTR [r10+0x18]
   140001847:	je     0x140001803
   140001849:	mov    r8,QWORD PTR [r10+0x30]
   14000184d:	mov    ecx,r11d
   140001850:	and    ecx,0x1f
   140001853:	shr    rbx,0x5
   140001857:	mov    edx,r9d
   14000185a:	shl    edx,cl
   14000185c:	not    edx
   14000185e:	and    DWORD PTR [r8+rbx*4],edx
   140001862:	jmp    0x14000181a
   140001864:	mov    DWORD PTR [r10+0x24],edi
   140001868:	mov    BYTE PTR [r10+0x28],dil
   14000186c:	mov    QWORD PTR [r10+0x10],rdi
   140001870:	mov    QWORD PTR [r10+0x18],rdi
   140001874:	cmp    WORD PTR [r10+0x2a],di
   140001879:	jbe    0x1400018a7
   14000187b:	movzx  eax,WORD PTR [r10+0x2a]
   140001880:	mov    r9d,0x1
   140001886:	mov    rcx,QWORD PTR [r10+0x30]
   14000188a:	sub    eax,r9d
   14000188d:	cdq    
   14000188e:	and    edx,0x1f
   140001891:	add    eax,edx
   140001893:	xor    edx,edx
   140001895:	sar    eax,0x5
   140001898:	add    eax,r9d
   14000189b:	movsxd r8,eax
   14000189e:	shl    r8,0x2
   1400018a2:	call   0x14002e2ce
   1400018a7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400018ac:	add    rsp,0x20
   1400018b0:	pop    rdi
   1400018b1:	ret    
   1400018b2:	int3   
   1400018b3:	int3   
   1400018b4:	int3   
   1400018b5:	int3   
   1400018b6:	int3   
   1400018b7:	int3   
   1400018b8:	int3   
   1400018b9:	int3   
   1400018ba:	int3   
   1400018bb:	int3   
   1400018bc:	int3   
   1400018bd:	int3   
   1400018be:	int3   
   1400018bf:	int3   
   1400018c0:	rex push rbx
   1400018c2:	push   rbp
   1400018c3:	push   rsi
   1400018c4:	push   rdi
   1400018c5:	push   r12
   1400018c7:	push   r14
   1400018c9:	push   r15
   1400018cb:	sub    rsp,0x180
   1400018d2:	mov    rax,QWORD PTR [rip+0x49747]        # 0x14004b020
   1400018d9:	xor    rax,rsp
   1400018dc:	mov    QWORD PTR [rsp+0x170],rax
   1400018e4:	xor    ebx,ebx
   1400018e6:	mov    r15,r9
   1400018e9:	mov    r14,r8
   1400018ec:	mov    rbp,rdx
   1400018ef:	mov    r12,rcx
   1400018f2:	test   r9,r9
   1400018f5:	jne    0x1400018ff
   1400018f7:	lea    eax,[rbx+0x57]
   1400018fa:	jmp    0x140001a91
   1400018ff:	cmp    QWORD PTR [r9],rbx
   140001902:	jne    0x140001a8f
   140001908:	cmp    BYTE PTR [rip+0x4e676],bl        # 0x14004ff84
   14000190e:	mov    esi,ebx
   140001910:	jne    0x140001a01
   140001916:	lea    rcx,[rsp+0x50]
   14000191b:	mov    DWORD PTR [rsp+0x50],0x114
   140001923:	call   QWORD PTR [rip+0x3097f]        # 0x1400322a8
   140001929:	test   eax,eax
   14000192b:	je     0x140001958
   14000192d:	mov    ecx,DWORD PTR [rsp+0x54]
   140001931:	cmp    ecx,0x6
   140001934:	setb   al
   140001937:	mov    BYTE PTR [rip+0x4e653],al        # 0x14004ff90
   14000193d:	cmp    ecx,0x6
   140001940:	ja     0x14000194b
   140001942:	jne    0x140001950
   140001944:	cmp    DWORD PTR [rsp+0x58],0x1
   140001949:	jbe    0x140001950
   14000194b:	mov    esi,0x1
   140001950:	test   al,al
   140001952:	jne    0x1400019f8
   140001958:	lea    rcx,[rip+0x325b9]        # 0x140033f18
   14000195f:	call   QWORD PTR [rip+0x3094b]        # 0x1400322b0
   140001965:	mov    rdi,rax
   140001968:	test   rax,rax
   14000196b:	jne    0x140001986
   14000196d:	test   esi,esi
   14000196f:	je     0x1400019cc
   140001971:	lea    rcx,[rip+0x32768]        # 0x1400340e0
   140001978:	call   QWORD PTR [rip+0x30932]        # 0x1400322b0
   14000197e:	mov    rdi,rax
   140001981:	test   rax,rax
   140001984:	je     0x1400019cc
   140001986:	lea    rdx,[rip+0x327a3]        # 0x140034130
   14000198d:	mov    rcx,rdi
   140001990:	call   QWORD PTR [rip+0x3090a]        # 0x1400322a0
   140001996:	mov    QWORD PTR [rip+0x4e5eb],rax        # 0x14004ff88
   14000199d:	test   rax,rax
   1400019a0:	je     0x1400019cc
   1400019a2:	lea    rdx,[rip+0x32797]        # 0x140034140
   1400019a9:	mov    rcx,rdi
   1400019ac:	call   QWORD PTR [rip+0x308ee]        # 0x1400322a0
   1400019b2:	mov    QWORD PTR [rip+0x496c7],rax        # 0x14004b080
   1400019b9:	test   rax,rax
   1400019bc:	jne    0x1400019d6
   1400019be:	lea    rax,[rip+0xfffffffffffffefb]        # 0x1400018c0
   1400019c5:	mov    QWORD PTR [rip+0x496b4],rax        # 0x14004b080
   1400019cc:	mov    al,0x1
   1400019ce:	mov    BYTE PTR [rip+0x4e5bc],al        # 0x14004ff90
   1400019d4:	jmp    0x1400019f8
   1400019d6:	lea    rdx,[rip+0x32773]        # 0x140034150
   1400019dd:	mov    rcx,rdi
   1400019e0:	call   QWORD PTR [rip+0x308ba]        # 0x1400322a0
   1400019e6:	mov    QWORD PTR [rip+0x4e5fb],rax        # 0x14004ffe8
   1400019ed:	test   rax,rax
   1400019f0:	je     0x1400019be
   1400019f2:	mov    al,BYTE PTR [rip+0x4e598]        # 0x14004ff90
   1400019f8:	mov    BYTE PTR [rip+0x4e585],0x1        # 0x14004ff84
   1400019ff:	jmp    0x140001a07
   140001a01:	mov    al,BYTE PTR [rip+0x4e589]        # 0x14004ff90
   140001a07:	test   al,al
   140001a09:	jne    0x140001a39
   140001a0b:	mov    rbx,QWORD PTR [rip+0x4966e]        # 0x14004b080
   140001a12:	lea    rax,[rip+0xfffffffffffffd67]        # 0x140001780
   140001a19:	test   rbp,rbp
   140001a1c:	mov    rcx,rbx
   140001a1f:	cmove  rbp,rax
   140001a23:	call   QWORD PTR [rip+0x30c7f]        # 0x1400326a8
   140001a29:	mov    r9,r15
   140001a2c:	mov    r8,r14
   140001a2f:	mov    rdx,rbp
   140001a32:	mov    rcx,r12
   140001a35:	call   rbx
   140001a37:	jmp    0x140001a8d
   140001a39:	test   r14,r14
   140001a3c:	jne    0x140001a44
   140001a3e:	lea    ebx,[r14+0x57]
   140001a42:	jmp    0x140001a8f
   140001a44:	mov    QWORD PTR [rsp+0x38],r14
   140001a49:	lea    rax,[rip+0xfffffffffffffbc0]        # 0x140001610
   140001a50:	test   rbp,rbp
   140001a53:	mov    QWORD PTR [rsp+0x30],rbx
   140001a58:	mov    QWORD PTR [rsp+0x28],rbx
   140001a5d:	mov    r9d,0x1
   140001a63:	cmove  rbp,rax
   140001a67:	mov    QWORD PTR [r15],r14
   140001a6a:	lea    rax,[rsp+0x40]
   140001a6f:	mov    QWORD PTR [rsp+0x40],r12
   140001a74:	mov    rcx,rbp
   140001a77:	mov    QWORD PTR [rsp+0x20],rax
   140001a7c:	mov    r8,r12
   140001a7f:	mov    QWORD PTR [rsp+0x48],rbx
   140001a84:	mov    rdx,r14
   140001a87:	call   QWORD PTR [rip+0x3058b]        # 0x140032018
   140001a8d:	mov    ebx,eax
   140001a8f:	mov    eax,ebx
   140001a91:	mov    rcx,QWORD PTR [rsp+0x170]
   140001a99:	xor    rcx,rsp
   140001a9c:	call   0x14002dd00
   140001aa1:	add    rsp,0x180
   140001aa8:	pop    r15
   140001aaa:	pop    r14
   140001aac:	pop    r12
   140001aae:	pop    rdi
   140001aaf:	pop    rsi
   140001ab0:	pop    rbp
   140001ab1:	pop    rbx
   140001ab2:	ret    
   140001ab3:	int3   
   140001ab4:	int3   
   140001ab5:	int3   
   140001ab6:	int3   
   140001ab7:	int3   
   140001ab8:	int3   
   140001ab9:	int3   
   140001aba:	int3   
   140001abb:	int3   
   140001abc:	mov    QWORD PTR [rsp+0x8],rbx
   140001ac1:	mov    QWORD PTR [rsp+0x10],rsi
   140001ac6:	push   rdi
   140001ac7:	sub    rsp,0x20
   140001acb:	mov    rdi,r8
   140001ace:	mov    rbx,rcx
   140001ad1:	test   dl,dl
   140001ad3:	je     0x140001af5
   140001ad5:	cmp    QWORD PTR [rcx+0x18],0x10
   140001ada:	jb     0x140001af5
   140001adc:	mov    rsi,QWORD PTR [rcx]
   140001adf:	test   r8,r8
   140001ae2:	je     0x140001aec
   140001ae4:	mov    rdx,rsi
   140001ae7:	call   0x14002e2f2
   140001aec:	mov    rcx,rsi
   140001aef:	call   QWORD PTR [rip+0x30ad3]        # 0x1400325c8
   140001af5:	mov    rsi,QWORD PTR [rsp+0x38]
   140001afa:	mov    QWORD PTR [rbx+0x18],0xf
   140001b02:	mov    QWORD PTR [rbx+0x10],rdi
   140001b06:	mov    BYTE PTR [rdi+rbx*1],0x0
   140001b0a:	mov    rbx,QWORD PTR [rsp+0x30]
   140001b0f:	add    rsp,0x20
   140001b13:	pop    rdi
   140001b14:	ret    
   140001b15:	int3   
   140001b16:	int3   
   140001b17:	int3   
   140001b18:	int3   
   140001b19:	int3   
   140001b1a:	int3   
   140001b1b:	int3   
   140001b1c:	mov    QWORD PTR [rsp+0x8],rbx
   140001b21:	mov    QWORD PTR [rsp+0x10],rsi
   140001b26:	push   rdi
   140001b27:	sub    rsp,0x20
   140001b2b:	mov    rdi,r8
   140001b2e:	mov    rsi,rdx
   140001b31:	mov    rbx,rcx
   140001b34:	test   rdx,rdx
   140001b37:	je     0x140001b85
   140001b39:	cmp    QWORD PTR [rcx+0x18],0x10
   140001b3e:	jb     0x140001b45
   140001b40:	mov    rax,QWORD PTR [rcx]
   140001b43:	jmp    0x140001b48
   140001b45:	mov    rax,rcx
   140001b48:	cmp    rdx,rax
   140001b4b:	jb     0x140001b85
   140001b4d:	cmp    QWORD PTR [rcx+0x18],0x10
   140001b52:	jb     0x140001b57
   140001b54:	mov    rcx,QWORD PTR [rcx]
   140001b57:	add    rcx,QWORD PTR [rbx+0x10]
   140001b5b:	cmp    rcx,rdx
   140001b5e:	jbe    0x140001b85
   140001b60:	cmp    QWORD PTR [rbx+0x18],0x10
   140001b65:	jb     0x140001b6c
   140001b67:	mov    rax,QWORD PTR [rbx]
   140001b6a:	jmp    0x140001b6f
   140001b6c:	mov    rax,rbx
   140001b6f:	sub    rsi,rax
   140001b72:	mov    r9,r8
   140001b75:	mov    r8,rsi
   140001b78:	mov    rdx,rbx
   140001b7b:	mov    rcx,rbx
   140001b7e:	call   0x140001c38
   140001b83:	jmp    0x140001bff
   140001b85:	cmp    r8,0xfffffffffffffffe
   140001b89:	ja     0x140001c0f
   140001b8f:	cmp    QWORD PTR [rbx+0x18],r8
   140001b93:	jae    0x140001ba6
   140001b95:	mov    r8,QWORD PTR [rbx+0x10]
   140001b99:	mov    rdx,rdi
   140001b9c:	mov    rcx,rbx
   140001b9f:	call   0x140001e00
   140001ba4:	jmp    0x140001bc1
   140001ba6:	test   r8,r8
   140001ba9:	jne    0x140001bc1
   140001bab:	and    QWORD PTR [rbx+0x10],r8
   140001baf:	cmp    QWORD PTR [rbx+0x18],0x10
   140001bb4:	jb     0x140001bbb
   140001bb6:	mov    rax,QWORD PTR [rbx]
   140001bb9:	jmp    0x140001bbe
   140001bbb:	mov    rax,rbx
   140001bbe:	mov    BYTE PTR [rax],0x0
   140001bc1:	test   rdi,rdi
   140001bc4:	je     0x140001bfc
   140001bc6:	cmp    QWORD PTR [rbx+0x18],0x10
   140001bcb:	jb     0x140001bd2
   140001bcd:	mov    rcx,QWORD PTR [rbx]
   140001bd0:	jmp    0x140001bd5
   140001bd2:	mov    rcx,rbx
   140001bd5:	test   rdi,rdi
   140001bd8:	je     0x140001be5
   140001bda:	mov    r8,rdi
   140001bdd:	mov    rdx,rsi
   140001be0:	call   0x14002e2f2
   140001be5:	cmp    QWORD PTR [rbx+0x18],0x10
   140001bea:	mov    QWORD PTR [rbx+0x10],rdi
   140001bee:	jb     0x140001bf5
   140001bf0:	mov    rax,QWORD PTR [rbx]
   140001bf3:	jmp    0x140001bf8
   140001bf5:	mov    rax,rbx
   140001bf8:	mov    BYTE PTR [rax+rdi*1],0x0
   140001bfc:	mov    rax,rbx
   140001bff:	mov    rbx,QWORD PTR [rsp+0x30]
   140001c04:	mov    rsi,QWORD PTR [rsp+0x38]
   140001c09:	add    rsp,0x20
   140001c0d:	pop    rdi
   140001c0e:	ret    
   140001c0f:	mov    rcx,rbx
   140001c12:	call   0x140001d4c
   140001c17:	int3   
   140001c18:	int3   
   140001c19:	int3   
   140001c1a:	int3   
   140001c1b:	int3   
   140001c1c:	int3   
   140001c1d:	int3   
   140001c1e:	int3   
   140001c1f:	int3   
   140001c20:	sub    rsp,0x28
   140001c24:	lea    rcx,[rip+0x32535]        # 0x140034160
   140001c2b:	call   0x14002d824
   140001c30:	int3   
   140001c31:	int3   
   140001c32:	int3   
   140001c33:	int3   
   140001c34:	int3   
   140001c35:	int3   
   140001c36:	int3   
   140001c37:	int3   
   140001c38:	mov    QWORD PTR [rsp+0x8],rbx
   140001c3d:	mov    QWORD PTR [rsp+0x10],rbp
   140001c42:	mov    QWORD PTR [rsp+0x18],rsi
   140001c47:	push   rdi
   140001c48:	sub    rsp,0x20
   140001c4c:	mov    rdi,QWORD PTR [rdx+0x10]
   140001c50:	mov    rbp,r8
   140001c53:	mov    rsi,rdx
   140001c56:	mov    rbx,rcx
   140001c59:	cmp    rdi,r8
   140001c5c:	jb     0x140001d34
   140001c62:	sub    rdi,r8
   140001c65:	cmp    r9,rdi
   140001c68:	cmovb  rdi,r9
   140001c6c:	cmp    rcx,rdx
   140001c6f:	jne    0x140001c9d
   140001c71:	lea    rax,[rdi+r8*1]
   140001c75:	cmp    QWORD PTR [rcx+0x10],rax
   140001c79:	jb     0x140001d3a
   140001c7f:	cmp    QWORD PTR [rcx+0x18],0x10
   140001c84:	mov    QWORD PTR [rcx+0x10],rax
   140001c88:	jb     0x140001c8d
   140001c8a:	mov    rcx,QWORD PTR [rcx]
   140001c8d:	mov    BYTE PTR [rcx+rax*1],0x0
   140001c91:	xor    edx,edx
   140001c93:	mov    rcx,rbx
   140001c96:	call   0x140001d64
   140001c9b:	jmp    0x140001d1c
   140001c9d:	cmp    rdi,0xfffffffffffffffe
   140001ca1:	ja     0x140001d40
   140001ca7:	cmp    QWORD PTR [rcx+0x18],rdi
   140001cab:	jae    0x140001cbb
   140001cad:	mov    r8,QWORD PTR [rcx+0x10]
   140001cb1:	mov    rdx,rdi
   140001cb4:	call   0x140001e00
   140001cb9:	jmp    0x140001cd6
   140001cbb:	test   rdi,rdi
   140001cbe:	jne    0x140001cdb
   140001cc0:	and    QWORD PTR [rcx+0x10],rdi
   140001cc4:	cmp    QWORD PTR [rcx+0x18],0x10
   140001cc9:	jb     0x140001cd0
   140001ccb:	mov    rax,QWORD PTR [rcx]
   140001cce:	jmp    0x140001cd3
   140001cd0:	mov    rax,rcx
   140001cd3:	mov    BYTE PTR [rax],0x0
   140001cd6:	test   rdi,rdi
   140001cd9:	je     0x140001d1c
   140001cdb:	cmp    QWORD PTR [rsi+0x18],0x10
   140001ce0:	jb     0x140001ce5
   140001ce2:	mov    rsi,QWORD PTR [rsi]
   140001ce5:	cmp    QWORD PTR [rbx+0x18],0x10
   140001cea:	jb     0x140001cf1
   140001cec:	mov    rcx,QWORD PTR [rbx]
   140001cef:	jmp    0x140001cf4
   140001cf1:	mov    rcx,rbx
   140001cf4:	test   rdi,rdi
   140001cf7:	je     0x140001d05
   140001cf9:	lea    rdx,[rsi+rbp*1]
   140001cfd:	mov    r8,rdi
   140001d00:	call   0x14002e2f2
   140001d05:	cmp    QWORD PTR [rbx+0x18],0x10
   140001d0a:	mov    QWORD PTR [rbx+0x10],rdi
   140001d0e:	jb     0x140001d15
   140001d10:	mov    rax,QWORD PTR [rbx]
   140001d13:	jmp    0x140001d18
   140001d15:	mov    rax,rbx
   140001d18:	mov    BYTE PTR [rax+rdi*1],0x0
   140001d1c:	mov    rbp,QWORD PTR [rsp+0x38]
   140001d21:	mov    rax,rbx
   140001d24:	mov    rbx,QWORD PTR [rsp+0x30]
   140001d29:	mov    rsi,QWORD PTR [rsp+0x40]
   140001d2e:	add    rsp,0x20
   140001d32:	pop    rdi
   140001d33:	ret    
   140001d34:	call   0x140001c20
   140001d39:	int3   
   140001d3a:	call   0x140001c20
   140001d3f:	int3   
   140001d40:	call   0x140001d4c
   140001d45:	int3   
   140001d46:	int3   
   140001d47:	int3   
   140001d48:	int3   
   140001d49:	int3   
   140001d4a:	int3   
   140001d4b:	int3   
   140001d4c:	sub    rsp,0x28
   140001d50:	lea    rcx,[rip+0x32421]        # 0x140034178
   140001d57:	call   0x14002d7f8
   140001d5c:	int3   
   140001d5d:	int3   
   140001d5e:	int3   
   140001d5f:	int3   
   140001d60:	int3   
   140001d61:	int3   
   140001d62:	int3   
   140001d63:	int3   
   140001d64:	mov    QWORD PTR [rsp+0x8],rbx
   140001d69:	push   rdi
   140001d6a:	sub    rsp,0x20
   140001d6e:	mov    rdi,QWORD PTR [rcx+0x10]
   140001d72:	mov    rbx,rcx
   140001d75:	cmp    rdi,rdx
   140001d78:	jb     0x140001df3
   140001d7a:	mov    rax,rdi
   140001d7d:	sub    rax,rdx
   140001d80:	cmp    rax,r8
   140001d83:	ja     0x140001d9e
   140001d85:	cmp    QWORD PTR [rcx+0x18],0x10
   140001d8a:	mov    QWORD PTR [rcx+0x10],rdx
   140001d8e:	jb     0x140001d95
   140001d90:	mov    rax,QWORD PTR [rcx]
   140001d93:	jmp    0x140001d98
   140001d95:	mov    rax,rcx
   140001d98:	mov    BYTE PTR [rax+rdx*1],0x0
   140001d9c:	jmp    0x140001de5
   140001d9e:	test   r8,r8
   140001da1:	je     0x140001de5
   140001da3:	cmp    QWORD PTR [rcx+0x18],0x10
   140001da8:	jb     0x140001daf
   140001daa:	mov    rax,QWORD PTR [rcx]
   140001dad:	jmp    0x140001db2
   140001daf:	mov    rax,rcx
   140001db2:	sub    rdi,r8
   140001db5:	lea    rcx,[rax+rdx*1]
   140001db9:	mov    rax,rdi
   140001dbc:	sub    rax,rdx
   140001dbf:	je     0x140001dce
   140001dc1:	lea    rdx,[rcx+r8*1]
   140001dc5:	mov    r8,rax
   140001dc8:	call   QWORD PTR [rip+0x306d2]        # 0x1400324a0
   140001dce:	cmp    QWORD PTR [rbx+0x18],0x10
   140001dd3:	mov    QWORD PTR [rbx+0x10],rdi
   140001dd7:	jb     0x140001dde
   140001dd9:	mov    rax,QWORD PTR [rbx]
   140001ddc:	jmp    0x140001de1
   140001dde:	mov    rax,rbx
   140001de1:	mov    BYTE PTR [rax+rdi*1],0x0
   140001de5:	mov    rax,rbx
   140001de8:	mov    rbx,QWORD PTR [rsp+0x30]
   140001ded:	add    rsp,0x20
   140001df1:	pop    rdi
   140001df2:	ret    
   140001df3:	call   0x140001c20
   140001df8:	int3   
   140001df9:	int3   
   140001dfa:	int3   
   140001dfb:	int3   
   140001dfc:	int3   
   140001dfd:	int3   
   140001dfe:	int3   
   140001dff:	int3   
   140001e00:	mov    rax,rsp
   140001e03:	mov    QWORD PTR [rax+0x18],r8
   140001e07:	mov    QWORD PTR [rax+0x10],rdx
   140001e0b:	mov    QWORD PTR [rax+0x8],rcx
   140001e0f:	push   rbx
   140001e10:	push   rsi
   140001e11:	push   rdi
   140001e12:	push   r14
   140001e14:	sub    rsp,0x38
   140001e18:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   140001e20:	mov    rsi,r8
   140001e23:	mov    rbx,rcx
   140001e26:	mov    rdi,rdx
   140001e29:	or     rdi,0xf
   140001e2d:	mov    r9,0xfffffffffffffffe
   140001e34:	cmp    rdi,r9
   140001e37:	jbe    0x140001e3e
   140001e39:	mov    rdi,rdx
   140001e3c:	jmp    0x140001e6f
   140001e3e:	mov    r8,QWORD PTR [rcx+0x18]
   140001e42:	mov    rcx,r8
   140001e45:	shr    rcx,1
   140001e48:	movabs rax,0xaaaaaaaaaaaaaaab
   140001e52:	mul    rdi
   140001e55:	shr    rdx,1
   140001e58:	cmp    rcx,rdx
   140001e5b:	jbe    0x140001e6f
   140001e5d:	mov    rax,r9
   140001e60:	sub    rax,rcx
   140001e63:	cmp    r8,rax
   140001e66:	lea    rdi,[rcx+r8*1]
   140001e6a:	jbe    0x140001e6f
   140001e6c:	mov    rdi,r9
   140001e6f:	lea    rcx,[rdi+0x1]
   140001e73:	xor    r14d,r14d
   140001e76:	test   rcx,rcx
   140001e79:	je     0x140001e91
   140001e7b:	cmp    rcx,0xffffffffffffffff
   140001e7f:	ja     0x140001e8b
   140001e81:	call   0x140023f10
   140001e86:	mov    r14,rax
   140001e89:	jmp    0x140001e91
   140001e8b:	call   0x14000203c
   140001e90:	nop
   140001e91:	jmp    0x140001ea7
   140001e93:	mov    rbx,QWORD PTR [rsp+0x60]
   140001e98:	mov    rsi,QWORD PTR [rsp+0x70]
   140001e9d:	mov    rdi,QWORD PTR [rsp+0x68]
   140001ea2:	mov    r14,QWORD PTR [rsp+0x78]
   140001ea7:	test   rsi,rsi
   140001eaa:	je     0x140001ecb
   140001eac:	cmp    QWORD PTR [rbx+0x18],0x10
   140001eb1:	jb     0x140001eb8
   140001eb3:	mov    rdx,QWORD PTR [rbx]
   140001eb6:	jmp    0x140001ebb
   140001eb8:	mov    rdx,rbx
   140001ebb:	test   rsi,rsi
   140001ebe:	je     0x140001ecb
   140001ec0:	mov    r8,rsi
   140001ec3:	mov    rcx,r14
   140001ec6:	call   0x14002e2f2
   140001ecb:	cmp    QWORD PTR [rbx+0x18],0x10
   140001ed0:	jb     0x140001edb
   140001ed2:	mov    rcx,QWORD PTR [rbx]
   140001ed5:	call   QWORD PTR [rip+0x306ed]        # 0x1400325c8
   140001edb:	mov    BYTE PTR [rbx],0x0
   140001ede:	mov    QWORD PTR [rbx],r14
   140001ee1:	mov    QWORD PTR [rbx+0x18],rdi
   140001ee5:	mov    QWORD PTR [rbx+0x10],rsi
   140001ee9:	cmp    rdi,0x10
   140001eed:	jb     0x140001ef2
   140001eef:	mov    rbx,r14
   140001ef2:	mov    BYTE PTR [rbx+rsi*1],0x0
   140001ef6:	add    rsp,0x38
   140001efa:	pop    r14
   140001efc:	pop    rdi
   140001efd:	pop    rsi
   140001efe:	pop    rbx
   140001eff:	ret    
   140001f00:	int3   
   140001f01:	int3   
   140001f02:	int3   
   140001f03:	int3   
   140001f04:	int3   
   140001f05:	int3   
   140001f06:	int3   
   140001f07:	int3   
   140001f08:	sub    rsp,0x38
   140001f0c:	and    QWORD PTR [rsp+0x20],0x0
   140001f12:	movzx  r9d,dx
   140001f16:	mov    edx,0x2b
   140001f1b:	call   QWORD PTR [rip+0x300ff]        # 0x140032020
   140001f21:	add    rsp,0x38
   140001f25:	ret    
   140001f26:	int3   
   140001f27:	int3   
   140001f28:	int3   
   140001f29:	int3   
   140001f2a:	int3   
   140001f2b:	int3   
   140001f2c:	mov    r11,rsp
   140001f2f:	mov    QWORD PTR [r11+0x20],r9
   140001f33:	sub    rsp,0x48
   140001f37:	and    QWORD PTR [r11-0x18],0x0
   140001f3c:	lea    rax,[r11+0x20]
   140001f40:	movzx  r9d,dx
   140001f44:	lea    r8,[rip+0x35a4d]        # 0x140037998
   140001f4b:	mov    QWORD PTR [r11-0x20],0x8
   140001f53:	mov    edx,0x2b
   140001f58:	mov    QWORD PTR [r11-0x28],rax
   140001f5c:	call   QWORD PTR [rip+0x300be]        # 0x140032020
   140001f62:	add    rsp,0x48
   140001f66:	ret    
   140001f67:	int3   
   140001f68:	int3   
   140001f69:	int3   
   140001f6a:	int3   
   140001f6b:	int3   
   140001f6c:	int3   
   140001f6d:	int3   
   140001f6e:	int3   
   140001f6f:	int3   
   140001f70:	mov    r11,rsp
   140001f73:	mov    DWORD PTR [r11+0x20],r9d
   140001f77:	sub    rsp,0x48
   140001f7b:	and    QWORD PTR [r11-0x18],0x0
   140001f80:	lea    rax,[r11+0x20]
   140001f84:	movzx  r9d,dx
   140001f88:	mov    edx,0x2b
   140001f8d:	mov    QWORD PTR [r11-0x20],0x4
   140001f95:	mov    QWORD PTR [r11-0x28],rax
   140001f99:	call   QWORD PTR [rip+0x30081]        # 0x140032020
   140001f9f:	add    rsp,0x48
   140001fa3:	ret    
   140001fa4:	int3   
   140001fa5:	int3   
   140001fa6:	int3   
   140001fa7:	int3   
   140001fa8:	int3   
   140001fa9:	int3   
   140001faa:	int3   
   140001fab:	int3   
   140001fac:	rex push rbx
   140001fae:	sub    rsp,0x20
   140001fb2:	mov    rbx,rcx
   140001fb5:	call   QWORD PTR [rip+0x3050d]        # 0x1400324c8
   140001fbb:	lea    rax,[rip+0x3247e]        # 0x140034440
   140001fc2:	mov    QWORD PTR [rbx],rax
   140001fc5:	mov    rax,rbx
   140001fc8:	add    rsp,0x20
   140001fcc:	pop    rbx
   140001fcd:	ret    
   140001fce:	int3   
   140001fcf:	int3   
   140001fd0:	int3   
   140001fd1:	int3   
   140001fd2:	int3   
   140001fd3:	int3   
   140001fd4:	rex push rbx
   140001fd6:	sub    rsp,0x30
   140001fda:	and    DWORD PTR [rsp+0x20],0x0
   140001fdf:	lea    r9,[rip+0x4c822]        # 0x14004e808
   140001fe6:	lea    r8,[rip+0x4c863]        # 0x14004e850
   140001fed:	xor    edx,edx
   140001fef:	mov    rbx,rcx
   140001ff2:	call   0x14002e862
   140001ff7:	test   rax,rax
   140001ffa:	je     0x140002001
   140001ffc:	mov    eax,DWORD PTR [rax+0x18]
   140001fff:	jmp    0x14000202d
   140002001:	and    DWORD PTR [rsp+0x20],0x0
   140002006:	lea    r9,[rip+0x4c81b]        # 0x14004e828
   14000200d:	lea    r8,[rip+0x4c83c]        # 0x14004e850
   140002014:	xor    edx,edx
   140002016:	mov    rcx,rbx
   140002019:	call   0x14002e862
   14000201e:	neg    rax
   140002021:	sbb    eax,eax
   140002023:	and    eax,0x6c009
   140002028:	add    eax,0x80004005
   14000202d:	add    rsp,0x30
   140002031:	pop    rbx
   140002032:	ret    
   140002033:	int3   
   140002034:	int3   
   140002035:	int3   
   140002036:	int3   
   140002037:	int3   
   140002038:	int3   
   140002039:	int3   
   14000203a:	int3   
   14000203b:	int3   
   14000203c:	sub    rsp,0x48
   140002040:	lea    rcx,[rsp+0x20]
   140002045:	call   0x1400022d4
   14000204a:	lea    rdx,[rip+0x471bf]        # 0x140049210
   140002051:	lea    rcx,[rsp+0x20]
   140002056:	call   0x14002e2da
   14000205b:	int3   
   14000205c:	int3   
   14000205d:	int3   
   14000205e:	int3   
   14000205f:	int3   
   140002060:	int3   
   140002061:	int3   
   140002062:	int3   
   140002063:	int3   
   140002064:	mov    QWORD PTR [rsp+0x8],rbx
   140002069:	push   rdi
   14000206a:	sub    rsp,0x20
   14000206e:	mov    edi,edx
   140002070:	mov    rbx,rcx
   140002073:	call   QWORD PTR [rip+0x3056f]        # 0x1400325e8
   140002079:	lea    rax,[rip+0x323a8]        # 0x140034428
   140002080:	mov    DWORD PTR [rbx+0x18],edi
   140002083:	mov    QWORD PTR [rbx],rax
   140002086:	mov    BYTE PTR [rbx+0x1c],0x0
   14000208a:	mov    rcx,QWORD PTR [rip+0x48fe7]        # 0x14004b078
   140002091:	lea    rax,[rip+0x48fe0]        # 0x14004b078
   140002098:	cmp    rcx,rax
   14000209b:	je     0x1400020bb
   14000209d:	test   BYTE PTR [rcx+0x1c],0x1
   1400020a1:	je     0x1400020bb
   1400020a3:	mov    rcx,QWORD PTR [rcx+0x10]
   1400020a7:	lea    r8,[rip+0x32d9a]        # 0x140034e48
   1400020ae:	mov    edx,0xf
   1400020b3:	mov    r9d,edi
   1400020b6:	call   0x140001f70
   1400020bb:	mov    rax,rbx
   1400020be:	mov    rbx,QWORD PTR [rsp+0x30]
   1400020c3:	add    rsp,0x20
   1400020c7:	pop    rdi
   1400020c8:	ret    
   1400020c9:	int3   
   1400020ca:	int3   
   1400020cb:	int3   
   1400020cc:	int3   
   1400020cd:	int3   
   1400020ce:	int3   
   1400020cf:	int3   
   1400020d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400020d5:	push   rdi
   1400020d6:	sub    rsp,0x20
   1400020da:	mov    ebx,edx
   1400020dc:	mov    rdi,rcx
   1400020df:	call   QWORD PTR [rip+0x303d3]        # 0x1400324b8
   1400020e5:	test   bl,0x1
   1400020e8:	je     0x1400020f3
   1400020ea:	mov    rcx,rdi
   1400020ed:	call   QWORD PTR [rip+0x304d5]        # 0x1400325c8
   1400020f3:	mov    rax,rdi
   1400020f6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400020fb:	add    rsp,0x20
   1400020ff:	pop    rdi
   140002100:	ret    
   140002101:	int3   
   140002102:	int3   
   140002103:	int3   
   140002104:	int3   
   140002105:	int3   
   140002106:	int3   
   140002107:	int3   
   140002108:	mov    QWORD PTR [rsp+0x8],rbx
   14000210d:	push   rdi
   14000210e:	sub    rsp,0x20
   140002112:	mov    rbx,rdx
   140002115:	mov    rdi,rcx
   140002118:	call   QWORD PTR [rip+0x304ca]        # 0x1400325e8
   14000211e:	lea    rax,[rip+0x32303]        # 0x140034428
   140002125:	mov    QWORD PTR [rdi],rax
   140002128:	mov    eax,DWORD PTR [rbx+0x18]
   14000212b:	mov    rbx,QWORD PTR [rsp+0x30]
   140002130:	mov    DWORD PTR [rdi+0x18],eax
   140002133:	mov    rax,rdi
   140002136:	mov    BYTE PTR [rdi+0x1c],0x0
   14000213a:	add    rsp,0x20
   14000213e:	pop    rdi
   14000213f:	ret    
   140002140:	int3   
   140002141:	int3   
   140002142:	int3   
   140002143:	int3   
   140002144:	int3   
   140002145:	int3   
   140002146:	int3   
   140002147:	int3   
   140002148:	int3   
   140002149:	int3   
   14000214a:	int3   
   14000214b:	int3   
   14000214c:	int3   
   14000214d:	int3   
   14000214e:	int3   
   14000214f:	int3   
   140002150:	rex push rbx
   140002152:	sub    rsp,0x20
   140002156:	cmp    BYTE PTR [rcx+0x1c],0x0
   14000215a:	mov    rbx,rcx
   14000215d:	jne    0x14000217c
   14000215f:	mov    r9d,DWORD PTR [rbx+0x18]
   140002163:	lea    r8,[rip+0x32cc6]        # 0x140034e30
   14000216a:	add    rcx,0x1d
   14000216e:	mov    edx,0xb
   140002173:	call   0x1400021ec
   140002178:	mov    BYTE PTR [rbx+0x1c],0x1
   14000217c:	lea    rax,[rbx+0x1d]
   140002180:	add    rsp,0x20
   140002184:	pop    rbx
   140002185:	ret    
   140002186:	int3   
   140002187:	int3   
   140002188:	int3   
   140002189:	int3   
   14000218a:	int3   
   14000218b:	int3   
   14000218c:	sub    rsp,0x58
   140002190:	test   ecx,ecx
   140002192:	js     0x1400021c7
   140002194:	mov    rcx,QWORD PTR [rip+0x48edd]        # 0x14004b078
   14000219b:	lea    rax,[rip+0x48ed6]        # 0x14004b078
   1400021a2:	cmp    rcx,rax
   1400021a5:	je     0x1400021c2
   1400021a7:	test   BYTE PTR [rcx+0x1c],0x1
   1400021ab:	je     0x1400021c2
   1400021ad:	mov    rcx,QWORD PTR [rcx+0x10]
   1400021b1:	lea    r8,[rip+0x32c90]        # 0x140034e48
   1400021b8:	mov    edx,0x10
   1400021bd:	call   0x140001f08
   1400021c2:	mov    ecx,0x8000ffff
   1400021c7:	mov    edx,ecx
   1400021c9:	lea    rcx,[rsp+0x20]
   1400021ce:	call   0x140002064
   1400021d3:	lea    rdx,[rip+0x46fae]        # 0x140049188
   1400021da:	lea    rcx,[rsp+0x20]
   1400021df:	call   0x14002e2da
   1400021e4:	int3   
   1400021e5:	int3   
   1400021e6:	int3   
   1400021e7:	int3   
   1400021e8:	int3   
   1400021e9:	int3   
   1400021ea:	int3   
   1400021eb:	int3   
   1400021ec:	mov    QWORD PTR [rsp+0x18],r8
   1400021f1:	mov    QWORD PTR [rsp+0x20],r9
   1400021f6:	push   rbx
   1400021f7:	push   rsi
   1400021f8:	push   rdi
   1400021f9:	sub    rsp,0x20
   1400021fd:	xor    edi,edi
   1400021ff:	lea    rax,[rdx-0x1]
   140002203:	cmp    rax,0x7ffffffe
   140002209:	mov    rsi,rcx
   14000220c:	mov    ecx,0x80070057
   140002211:	cmova  edi,ecx
   140002214:	test   edi,edi
   140002216:	js     0x14000224d
   140002218:	lea    rbx,[rdx-0x1]
   14000221c:	mov    rcx,rsi
   14000221f:	mov    rdx,rbx
   140002222:	lea    r9,[rsp+0x58]
   140002227:	xor    edi,edi
   140002229:	call   QWORD PTR [rip+0x303b1]        # 0x1400325e0
   14000222f:	test   eax,eax
   140002231:	js     0x140002242
   140002233:	cdqe   
   140002235:	cmp    rax,rbx
   140002238:	ja     0x140002242
   14000223a:	jne    0x140002255
   14000223c:	mov    BYTE PTR [rbx+rsi*1],dil
   140002240:	jmp    0x140002255
   140002242:	mov    BYTE PTR [rbx+rsi*1],dil
   140002246:	mov    edi,0x8007007a
   14000224b:	jmp    0x140002255
   14000224d:	test   rdx,rdx
   140002250:	je     0x140002255
   140002252:	mov    BYTE PTR [rsi],0x0
   140002255:	mov    eax,edi
   140002257:	add    rsp,0x20
   14000225b:	pop    rdi
   14000225c:	pop    rsi
   14000225d:	pop    rbx
   14000225e:	ret    
   14000225f:	int3   
   140002260:	int3   
   140002261:	int3   
   140002262:	int3   
   140002263:	int3   
   140002264:	int3   
   140002265:	int3   
   140002266:	int3   
   140002267:	int3   
   140002268:	rex.W jmp QWORD PTR [rip+0x30249]        # 0x1400324b8
   14000226f:	int3   
   140002270:	int3   
   140002271:	int3   
   140002272:	int3   
   140002273:	int3   
   140002274:	int3   
   140002275:	int3   
   140002276:	int3   
   140002277:	int3   
   140002278:	lea    rax,[rip+0x321c1]        # 0x140034440
   14000227f:	mov    QWORD PTR [rcx],rax
   140002282:	rex.W jmp QWORD PTR [rip+0x3022f]        # 0x1400324b8
   140002289:	int3   
   14000228a:	int3   
   14000228b:	int3   
   14000228c:	int3   
   14000228d:	int3   
   14000228e:	int3   
   14000228f:	int3   
   140002290:	mov    QWORD PTR [rsp+0x8],rbx
   140002295:	push   rdi
   140002296:	sub    rsp,0x20
   14000229a:	lea    rax,[rip+0x3219f]        # 0x140034440
   1400022a1:	mov    ebx,edx
   1400022a3:	mov    QWORD PTR [rcx],rax
   1400022a6:	mov    rdi,rcx
   1400022a9:	call   QWORD PTR [rip+0x30209]        # 0x1400324b8
   1400022af:	test   bl,0x1
   1400022b2:	je     0x1400022bd
   1400022b4:	mov    rcx,rdi
   1400022b7:	call   QWORD PTR [rip+0x3030b]        # 0x1400325c8
   1400022bd:	mov    rax,rdi
   1400022c0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400022c5:	add    rsp,0x20
   1400022c9:	pop    rdi
   1400022ca:	ret    
   1400022cb:	int3   
   1400022cc:	int3   
   1400022cd:	int3   
   1400022ce:	int3   
   1400022cf:	int3   
   1400022d0:	int3   
   1400022d1:	int3   
   1400022d2:	int3   
   1400022d3:	int3   
   1400022d4:	rex push rbx
   1400022d6:	sub    rsp,0x20
   1400022da:	lea    rax,[rip+0x32b57]        # 0x140034e38
   1400022e1:	mov    r8d,0x1
   1400022e7:	lea    rdx,[rsp+0x30]
   1400022ec:	mov    QWORD PTR [rsp+0x30],rax
   1400022f1:	mov    rbx,rcx
   1400022f4:	call   QWORD PTR [rip+0x301c6]        # 0x1400324c0
   1400022fa:	lea    rax,[rip+0x3213f]        # 0x140034440
   140002301:	mov    QWORD PTR [rbx],rax
   140002304:	mov    rax,rbx
   140002307:	add    rsp,0x20
   14000230b:	pop    rbx
   14000230c:	ret    
   14000230d:	int3   
   14000230e:	int3   
   14000230f:	int3   
   140002310:	int3   
   140002311:	int3   
   140002312:	int3   
   140002313:	int3   
   140002314:	mov    DWORD PTR [rsp+0x20],r9d
   140002319:	sub    rsp,0x68
   14000231d:	mov    rax,QWORD PTR [rsp+0x98]
   140002325:	xor    r8d,r8d
   140002328:	mov    r10,rcx
   14000232b:	test   rax,rax
   14000232e:	je     0x140002354
   140002330:	cmp    WORD PTR [rax],r8w
   140002334:	jne    0x14000233c
   140002336:	lea    ecx,[r8+0xe]
   14000233a:	jmp    0x140002359
   14000233c:	or     rcx,0xffffffffffffffff
   140002340:	inc    rcx
   140002343:	cmp    WORD PTR [rax+rcx*2],r8w
   140002348:	jne    0x140002340
   14000234a:	lea    rcx,[rcx*2+0x2]
   140002352:	jmp    0x140002359
   140002354:	mov    ecx,0xa
   140002359:	test   rax,rax
   14000235c:	je     0x14000236f
   14000235e:	cmp    WORD PTR [rax],r8w
   140002362:	lea    rdx,[rip+0x32aef]        # 0x140034e58
   140002369:	cmove  rax,rdx
   14000236d:	jmp    0x140002376
   14000236f:	lea    rax,[rip+0x3312a]        # 0x1400354a0
   140002376:	mov    QWORD PTR [rsp+0x50],r8
   14000237b:	mov    edx,0x13
   140002380:	mov    QWORD PTR [rsp+0x48],rcx
   140002385:	lea    r8,[rip+0x33124]        # 0x1400354b0
   14000238c:	mov    QWORD PTR [rsp+0x40],rax
   140002391:	lea    rax,[rsp+0x90]
   140002399:	movzx  r9d,dx
   14000239d:	lea    ecx,[rdx-0xf]
   1400023a0:	mov    QWORD PTR [rsp+0x38],rcx
   1400023a5:	lea    edx,[rcx+0x27]
   1400023a8:	mov    QWORD PTR [rsp+0x30],rax
   1400023ad:	lea    rax,[rsp+0x88]
   1400023b5:	mov    QWORD PTR [rsp+0x28],rcx
   1400023ba:	mov    rcx,r10
   1400023bd:	mov    QWORD PTR [rsp+0x20],rax
   1400023c2:	call   QWORD PTR [rip+0x2fc58]        # 0x140032020
   1400023c8:	add    rsp,0x68
   1400023cc:	ret    
   1400023cd:	int3   
   1400023ce:	int3   
   1400023cf:	int3   
   1400023d0:	int3   
   1400023d1:	int3   
   1400023d2:	int3   
   1400023d3:	int3   
   1400023d4:	int3   
   1400023d5:	int3   
   1400023d6:	int3   
   1400023d7:	int3   
   1400023d8:	int3   
   1400023d9:	int3   
   1400023da:	int3   
   1400023db:	int3   
   1400023dc:	int3   
   1400023dd:	int3   
   1400023de:	int3   
   1400023df:	int3   
   1400023e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400023e5:	push   rdi
   1400023e6:	sub    rsp,0x20
   1400023ea:	mov    ebx,edx
   1400023ec:	mov    rdi,rcx
   1400023ef:	call   0x140002418
   1400023f4:	test   bl,0x1
   1400023f7:	je     0x140002402
   1400023f9:	mov    rcx,rdi
   1400023fc:	call   QWORD PTR [rip+0x301c6]        # 0x1400325c8
   140002402:	mov    rax,rdi
   140002405:	mov    rbx,QWORD PTR [rsp+0x30]
   14000240a:	add    rsp,0x20
   14000240e:	pop    rdi
   14000240f:	ret    
   140002410:	int3   
   140002411:	int3   
   140002412:	int3   
   140002413:	int3   
   140002414:	int3   
   140002415:	int3   
   140002416:	int3   
   140002417:	int3   
   140002418:	mov    QWORD PTR [rsp+0x8],rbx
   14000241d:	mov    QWORD PTR [rsp+0x10],rsi
   140002422:	mov    QWORD PTR [rsp+0x18],rdi
   140002427:	push   r14
   140002429:	sub    rsp,0x20
   14000242d:	lea    rax,[rip+0x32024]        # 0x140034458
   140002434:	mov    rdi,rcx
   140002437:	mov    QWORD PTR [rcx],rax
   14000243a:	lea    rsi,[rcx+0x98]
   140002441:	mov    rcx,rsi
   140002444:	call   0x140029ab0
   140002449:	mov    ebx,eax
   14000244b:	test   eax,eax
   14000244d:	js     0x14000249a
   14000244f:	or     ecx,0xffffffff
   140002452:	lock xadd DWORD PTR [rsi+0x8],ecx
   140002457:	dec    ecx
   140002459:	cmp    ecx,0x80000000
   14000245f:	jne    0x140002469
   140002461:	mov    rcx,rsi
   140002464:	call   0x140029c90
   140002469:	mov    rcx,QWORD PTR [rip+0x48c08]        # 0x14004b078
   140002470:	lea    rax,[rip+0x48c01]        # 0x14004b078
   140002477:	cmp    rcx,rax
   14000247a:	je     0x14000249a
   14000247c:	test   BYTE PTR [rcx+0x1c],0x1
   140002480:	je     0x14000249a
   140002482:	mov    rcx,QWORD PTR [rcx+0x10]
   140002486:	lea    r8,[rip+0x33023]        # 0x1400354b0
   14000248d:	mov    edx,0xa
   140002492:	mov    r9d,ebx
   140002495:	call   0x140001f70
   14000249a:	mov    rcx,rsi
   14000249d:	call   0x140029b84
   1400024a2:	mov    r14,QWORD PTR [rdi+0xd0]
   1400024a9:	test   r14,r14
   1400024ac:	je     0x1400024c3
   1400024ae:	mov    rax,QWORD PTR [r14]
   1400024b1:	mov    rbx,QWORD PTR [rax+0x8]
   1400024b5:	mov    rcx,rbx
   1400024b8:	call   QWORD PTR [rip+0x301ea]        # 0x1400326a8
   1400024be:	mov    rcx,r14
   1400024c1:	call   rbx
   1400024c3:	lea    rcx,[rdi+0xc0]
   1400024ca:	call   0x1400246d8
   1400024cf:	mov    rcx,rsi
   1400024d2:	call   0x140029b48
   1400024d7:	lea    rcx,[rdi+0x78]
   1400024db:	call   0x140029b48
   1400024e0:	lea    rcx,[rdi+0x50]
   1400024e4:	call   QWORD PTR [rip+0x2fd8e]        # 0x140032278
   1400024ea:	mov    rsi,QWORD PTR [rdi+0x48]
   1400024ee:	test   rsi,rsi
   1400024f1:	je     0x140002508
   1400024f3:	mov    rax,QWORD PTR [rsi]
   1400024f6:	mov    rbx,QWORD PTR [rax+0x8]
   1400024fa:	mov    rcx,rbx
   1400024fd:	call   QWORD PTR [rip+0x301a5]        # 0x1400326a8
   140002503:	mov    rcx,rsi
   140002506:	call   rbx
   140002508:	mov    rsi,QWORD PTR [rdi+0x40]
   14000250c:	test   rsi,rsi
   14000250f:	je     0x140002526
   140002511:	mov    rax,QWORD PTR [rsi]
   140002514:	mov    rbx,QWORD PTR [rax+0x8]
   140002518:	mov    rcx,rbx
   14000251b:	call   QWORD PTR [rip+0x30187]        # 0x1400326a8
   140002521:	mov    rcx,rsi
   140002524:	call   rbx
   140002526:	lea    rcx,[rdi+0x10]
   14000252a:	cmp    BYTE PTR [rcx+0x28],0x0
   14000252e:	je     0x14000253a
   140002530:	mov    BYTE PTR [rcx+0x28],0x0
   140002534:	call   QWORD PTR [rip+0x2fd3e]        # 0x140032278
   14000253a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000253f:	mov    rsi,QWORD PTR [rsp+0x38]
   140002544:	mov    rdi,QWORD PTR [rsp+0x40]
   140002549:	add    rsp,0x20
   14000254d:	pop    r14
   14000254f:	ret    
   140002550:	int3   
   140002551:	int3   
   140002552:	int3   
   140002553:	int3   
   140002554:	int3   
   140002555:	int3   
   140002556:	int3   
   140002557:	int3   
   140002558:	mov    r11,rsp
   14000255b:	push   rdi
   14000255c:	push   r14
   14000255e:	push   r15
   140002560:	sub    rsp,0xb0
   140002567:	mov    QWORD PTR [r11-0x68],0xfffffffffffffffe
   14000256f:	mov    QWORD PTR [r11+0x18],rbx
   140002573:	mov    QWORD PTR [r11+0x20],rsi
   140002577:	mov    rax,QWORD PTR [rip+0x48aa2]        # 0x14004b020
   14000257e:	xor    rax,rsp
   140002581:	mov    QWORD PTR [rsp+0xa0],rax
   140002589:	mov    r15b,dl
   14000258c:	mov    r14,rcx
   14000258f:	mov    QWORD PTR [rsp+0x50],rcx
   140002594:	xor    esi,esi
   140002596:	mov    QWORD PTR [r11-0x80],rsi
   14000259a:	mov    rdi,QWORD PTR [rcx+0x48]
   14000259e:	test   rdi,rdi
   1400025a1:	je     0x1400025bc
   1400025a3:	mov    rax,QWORD PTR [rdi]
   1400025a6:	mov    rbx,QWORD PTR [rax+0x8]
   1400025aa:	mov    rcx,rbx
   1400025ad:	call   QWORD PTR [rip+0x300f5]        # 0x1400326a8
   1400025b3:	mov    rcx,rdi
   1400025b6:	call   rbx
   1400025b8:	mov    QWORD PTR [r14+0x48],rsi
   1400025bc:	test   r14,r14
   1400025bf:	je     0x140002930
   1400025c5:	mov    QWORD PTR [r14+0x48],rsi
   1400025c9:	mov    QWORD PTR [rsp+0x38],rsi
   1400025ce:	lea    rcx,[rsp+0x38]
   1400025d3:	call   0x14000d490
   1400025d8:	test   eax,eax
   1400025da:	jns    0x1400025e4
   1400025dc:	mov    ecx,eax
   1400025de:	call   0x140029d64
   1400025e3:	int3   
   1400025e4:	mov    rdi,QWORD PTR [rsp+0x38]
   1400025e9:	test   rdi,rdi
   1400025ec:	je     0x140002602
   1400025ee:	mov    rax,QWORD PTR [rdi]
   1400025f1:	mov    rbx,QWORD PTR [rax]
   1400025f4:	mov    rcx,rbx
   1400025f7:	call   QWORD PTR [rip+0x300ab]        # 0x1400326a8
   1400025fd:	mov    rcx,rdi
   140002600:	call   rbx
   140002602:	mov    QWORD PTR [rsp+0x70],rdi
   140002607:	mov    QWORD PTR [rdi+0x88],r14
   14000260e:	call   0x140017164
   140002613:	mov    edx,eax
   140002615:	lea    rcx,[rdi+0x190]
   14000261c:	call   0x140015338
   140002621:	mov    QWORD PTR [rsp+0x58],rsi
   140002626:	mov    QWORD PTR [rsp+0x38],rsi
   14000262b:	lea    rdx,[rsp+0x38]
   140002630:	lea    rcx,[rip+0x35371]        # 0x1400379a8
   140002637:	call   QWORD PTR [rip+0x2fdf3]        # 0x140032430
   14000263d:	test   eax,eax
   14000263f:	jns    0x140002649
   140002641:	mov    ecx,eax
   140002643:	call   0x140029d64
   140002648:	int3   
   140002649:	mov    DWORD PTR [rsp+0x40],esi
   14000264d:	mov    DWORD PTR [rsp+0x34],esi
   140002651:	mov    DWORD PTR [rsp+0x30],0x4
   140002659:	mov    QWORD PTR [rsp+0x28],rsi
   14000265e:	lea    rax,[rsp+0x34]
   140002663:	mov    QWORD PTR [rsp+0x20],rax
   140002668:	lea    r9,[rsp+0x30]
   14000266d:	lea    r8,[rsp+0x40]
   140002672:	lea    rdx,[rip+0x35747]        # 0x140037dc0
   140002679:	mov    rcx,QWORD PTR [rsp+0x38]
   14000267e:	call   QWORD PTR [rip+0x2fda4]        # 0x140032428
   140002684:	test   eax,eax
   140002686:	js     0x140002928
   14000268c:	cmp    DWORD PTR [rsp+0x40],0x1
   140002691:	jbe    0x14000269d
   140002693:	mov    eax,0x8007065d
   140002698:	jmp    0x140002928
   14000269d:	cmp    DWORD PTR [rsp+0x30],esi
   1400026a1:	jne    0x1400026ab
   1400026a3:	mov    ebx,esi
   1400026a5:	mov    DWORD PTR [rsp+0x34],ebx
   1400026a9:	jmp    0x1400026af
   1400026ab:	mov    ebx,DWORD PTR [rsp+0x34]
   1400026af:	mov    rcx,QWORD PTR [rsp+0x38]
   1400026b4:	test   rcx,rcx
   1400026b7:	je     0x1400026bf
   1400026b9:	call   QWORD PTR [rip+0x2fd31]        # 0x1400323f0
   1400026bf:	mov    DWORD PTR [rdi+0x160],ebx
   1400026c5:	mov    QWORD PTR [rdi+0x158],rsi
   1400026cc:	mov    QWORD PTR [rdi+0xf8],rsi
   1400026d3:	mov    BYTE PTR [rdi+0x100],sil
   1400026da:	mov    BYTE PTR [rdi+0xf0],sil
   1400026e1:	mov    QWORD PTR [r14+0x48],rdi
   1400026e5:	mov    edi,esi
   1400026e7:	mov    rdx,r14
   1400026ea:	lea    rcx,[rsp+0x48]
   1400026ef:	call   0x140021680
   1400026f4:	test   eax,eax
   1400026f6:	jns    0x140002700
   1400026f8:	mov    ecx,eax
   1400026fa:	call   0x140029d64
   1400026ff:	nop
   140002700:	call   0x140025df8
   140002705:	test   al,al
   140002707:	jne    0x140002750
   140002709:	call   QWORD PTR [rip+0x2fc11]        # 0x140032320
   14000270f:	mov    edi,eax
   140002711:	test   eax,eax
   140002713:	jns    0x140002748
   140002715:	lea    rbx,[rip+0x4895c]        # 0x14004b078
   14000271c:	mov    rcx,QWORD PTR [rip+0x48955]        # 0x14004b078
   140002723:	cmp    rcx,rbx
   140002726:	je     0x140002757
   140002728:	test   BYTE PTR [rcx+0x1c],0x2
   14000272c:	je     0x140002757
   14000272e:	mov    edx,0xb
   140002733:	mov    r9d,eax
   140002736:	lea    r8,[rip+0x32d73]        # 0x1400354b0
   14000273d:	mov    rcx,QWORD PTR [rcx+0x10]
   140002741:	call   0x140001f70
   140002746:	jmp    0x140002757
   140002748:	mov    BYTE PTR [r14+0xda],0x1
   140002750:	lea    rbx,[rip+0x48921]        # 0x14004b078
   140002757:	call   QWORD PTR [rip+0x2fbcb]        # 0x140032328
   14000275d:	mov    rcx,QWORD PTR [rip+0x48914]        # 0x14004b078
   140002764:	cmp    rcx,rbx
   140002767:	je     0x140002799
   140002769:	test   BYTE PTR [rcx+0x1c],0x4
   14000276d:	je     0x140002799
   14000276f:	lea    rax,[rip+0x326f2]        # 0x140034e68
   140002776:	lea    r9,[rip+0x326fb]        # 0x140034e78
   14000277d:	test   r15b,r15b
   140002780:	cmovne r9,rax
   140002784:	mov    edx,0xc
   140002789:	lea    r8,[rip+0x32d20]        # 0x1400354b0
   140002790:	mov    rcx,QWORD PTR [rcx+0x10]
   140002794:	call   0x1400038e0
   140002799:	lea    rax,[rip+0x32700]        # 0x140034ea0
   1400027a0:	lea    rdx,[rip+0x32719]        # 0x140034ec0
   1400027a7:	test   r15b,r15b
   1400027aa:	cmovne rdx,rax
   1400027ae:	lea    rcx,[rip+0x32753]        # 0x140034f08
   1400027b5:	call   QWORD PTR [rip+0x2fb75]        # 0x140032330
   1400027bb:	call   0x140023548
   1400027c0:	call   0x140025df8
   1400027c5:	test   al,al
   1400027c7:	jne    0x14000287d
   1400027cd:	call   QWORD PTR [rip+0x2fcad]        # 0x140032480
   1400027d3:	mov    edi,eax
   1400027d5:	test   eax,eax
   1400027d7:	jns    0x140002820
   1400027d9:	mov    rcx,QWORD PTR [rip+0x48898]        # 0x14004b078
   1400027e0:	cmp    rcx,rbx
   1400027e3:	je     0x140002803
   1400027e5:	test   BYTE PTR [rcx+0x1c],0x1
   1400027e9:	je     0x140002803
   1400027eb:	mov    edx,0xd
   1400027f0:	mov    r9d,eax
   1400027f3:	lea    r8,[rip+0x32cb6]        # 0x1400354b0
   1400027fa:	mov    rcx,QWORD PTR [rcx+0x10]
   1400027fe:	call   0x140001f70
   140002803:	mov    edx,edi
   140002805:	lea    rcx,[rsp+0x78]
   14000280a:	call   0x140002064
   14000280f:	lea    rdx,[rip+0x46972]        # 0x140049188
   140002816:	lea    rcx,[rsp+0x78]
   14000281b:	call   0x14002e2da
   140002820:	mov    BYTE PTR [r14+0xd8],0x1
   140002828:	mov    ecx,0x12f
   14000282d:	call   QWORD PTR [rip+0x2fc3d]        # 0x140032470
   140002833:	mov    edi,eax
   140002835:	test   eax,eax
   140002837:	jns    0x140002865
   140002839:	mov    rcx,QWORD PTR [rip+0x48838]        # 0x14004b078
   140002840:	cmp    rcx,rbx
   140002843:	je     0x14000287d
   140002845:	test   BYTE PTR [rcx+0x1c],0x2
   140002849:	je     0x14000287d
   14000284b:	mov    edx,0xe
   140002850:	mov    r9d,eax
   140002853:	lea    r8,[rip+0x32c56]        # 0x1400354b0
   14000285a:	mov    rcx,QWORD PTR [rcx+0x10]
   14000285e:	call   0x140001f70
   140002863:	jmp    0x14000287d
   140002865:	mov    BYTE PTR [r14+0xd9],0x1
   14000286d:	mov    edx,0x1
   140002872:	mov    ecx,0x13d
   140002877:	call   QWORD PTR [rip+0x2fbeb]        # 0x140032468
   14000287d:	mov    rbx,QWORD PTR [rsp+0x48]
   140002882:	mov    rdx,rbx
   140002885:	mov    rcx,QWORD PTR [r14+0x48]
   140002889:	call   0x140007ecc
   14000288e:	lea    rcx,[r14+0xc0]
   140002895:	call   0x140024774
   14000289a:	test   eax,eax
   14000289c:	jns    0x1400028a5
   14000289e:	mov    ecx,eax
   1400028a0:	call   0x140029d64
   1400028a5:	lea    rcx,[r14+0x98]
   1400028ac:	call   0x140029ab0
   1400028b1:	test   eax,eax
   1400028b3:	jns    0x1400028bc
   1400028b5:	mov    ecx,eax
   1400028b7:	call   0x140029d64
   1400028bc:	lea    rcx,[rip+0x3266d]        # 0x140034f30
   1400028c3:	call   QWORD PTR [rip+0x2fa6f]        # 0x140032338
   1400028c9:	nop
   1400028ca:	jmp    0x1400028dc
   1400028cc:	xor    esi,esi
   1400028ce:	mov    rbx,QWORD PTR [rsp+0x48]
   1400028d3:	mov    edi,DWORD PTR [rsp+0x30]
   1400028d7:	mov    r14,QWORD PTR [rsp+0x50]
   1400028dc:	test   edi,edi
   1400028de:	jns    0x1400028f7
   1400028e0:	mov    edx,edi
   1400028e2:	lea    rcx,[rip+0x32667]        # 0x140034f50
   1400028e9:	call   QWORD PTR [rip+0x2fa41]        # 0x140032330
   1400028ef:	mov    ecx,edi
   1400028f1:	call   0x14000218c
   1400028f6:	int3   
   1400028f7:	mov    r15,QWORD PTR [r14+0xd0]
   1400028fe:	test   r15,r15
   140002901:	je     0x14000291f
   140002903:	mov    rax,QWORD PTR [r15]
   140002906:	mov    rdi,QWORD PTR [rax+0x8]
   14000290a:	mov    rcx,rdi
   14000290d:	call   QWORD PTR [rip+0x2fd95]        # 0x1400326a8
   140002913:	mov    rcx,r15
   140002916:	call   rdi
   140002918:	mov    QWORD PTR [r14+0xd0],rsi
   14000291f:	mov    QWORD PTR [r14+0xd0],rbx
   140002926:	jmp    0x140002970
   140002928:	mov    ecx,eax
   14000292a:	call   0x140029d64
   14000292f:	nop
   140002930:	lea    rbx,[rip+0x48741]        # 0x14004b078
   140002937:	mov    rcx,QWORD PTR [rip+0x4873a]        # 0x14004b078
   14000293e:	cmp    rcx,rbx
   140002941:	je     0x140002965
   140002943:	test   BYTE PTR [rcx+0x1c],0x1
   140002947:	je     0x140002965
   140002949:	mov    edx,0xa
   14000294e:	lea    r9,[rip+0x32fdb]        # 0x140035930
   140002955:	lea    r8,[rip+0x31a74]        # 0x1400343d0
   14000295c:	mov    rcx,QWORD PTR [rcx+0x10]
   140002960:	call   0x1400038e0
   140002965:	mov    ecx,0x80070057
   14000296a:	call   0x140029d64
   14000296f:	nop
   140002970:	mov    rcx,QWORD PTR [rsp+0xa0]
   140002978:	xor    rcx,rsp
   14000297b:	call   0x14002dd00
   140002980:	lea    r11,[rsp+0xb0]
   140002988:	mov    rbx,QWORD PTR [r11+0x30]
   14000298c:	mov    rsi,QWORD PTR [r11+0x38]
   140002990:	mov    rsp,r11
   140002993:	pop    r15
   140002995:	pop    r14
   140002997:	pop    rdi
   140002998:	ret    
   140002999:	int3   
   14000299a:	int3   
   14000299b:	int3   
   14000299c:	int3   
   14000299d:	int3   
   14000299e:	int3   
   14000299f:	int3   
   1400029a0:	mov    rax,rsp
   1400029a3:	mov    QWORD PTR [rax+0x8],rcx
   1400029a7:	push   r14
   1400029a9:	sub    rsp,0x30
   1400029ad:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   1400029b5:	mov    QWORD PTR [rax+0x18],rbx
   1400029b9:	mov    QWORD PTR [rax+0x20],rdi
   1400029bd:	mov    r14,rcx
   1400029c0:	add    rcx,0x78
   1400029c4:	call   0x140029b84
   1400029c9:	nop
   1400029ca:	lea    rcx,[rip+0x325c7]        # 0x140034f98
   1400029d1:	call   QWORD PTR [rip+0x2f961]        # 0x140032338
   1400029d7:	mov    rcx,QWORD PTR [r14+0xb8]
   1400029de:	test   rcx,rcx
   1400029e1:	je     0x1400029f0
   1400029e3:	call   0x140025eb8
   1400029e8:	and    QWORD PTR [r14+0xb8],0x0
   1400029f0:	mov    rdi,QWORD PTR [r14+0xd0]
   1400029f7:	test   rdi,rdi
   1400029fa:	je     0x140002a3a
   1400029fc:	mov    rax,QWORD PTR [rdi]
   1400029ff:	mov    rbx,QWORD PTR [rax+0x30]
   140002a03:	mov    rcx,rbx
   140002a06:	call   QWORD PTR [rip+0x2fc9c]        # 0x1400326a8
   140002a0c:	mov    rcx,rdi
   140002a0f:	call   rbx
   140002a11:	mov    rdi,QWORD PTR [r14+0xd0]
   140002a18:	test   rdi,rdi
   140002a1b:	je     0x140002a3a
   140002a1d:	mov    rax,QWORD PTR [rdi]
   140002a20:	mov    rbx,QWORD PTR [rax+0x8]
   140002a24:	mov    rcx,rbx
   140002a27:	call   QWORD PTR [rip+0x2fc7b]        # 0x1400326a8
   140002a2d:	mov    rcx,rdi
   140002a30:	call   rbx
   140002a32:	and    QWORD PTR [r14+0xd0],0x0
   140002a3a:	mov    rcx,QWORD PTR [r14+0x48]
   140002a3e:	test   rcx,rcx
   140002a41:	je     0x140002a73
   140002a43:	add    rcx,0x90
   140002a4a:	jmp    0x140002a60
   140002a4c:	lea    edx,[r8-0x80000000]
   140002a53:	mov    eax,r8d
   140002a56:	lock cmpxchg DWORD PTR [rcx+0x8],edx
   140002a5b:	cmp    r8d,eax
   140002a5e:	je     0x140002a69
   140002a60:	mov    r8d,DWORD PTR [rcx+0x8]
   140002a64:	test   r8d,r8d
   140002a67:	jns    0x140002a4c
   140002a69:	test   r8d,r8d
   140002a6c:	jne    0x140002a73
   140002a6e:	call   0x140029c90
   140002a73:	cmp    QWORD PTR [r14+0x40],0x0
   140002a78:	je     0x140002ac3
   140002a7a:	lea    rcx,[rip+0x3253f]        # 0x140034fc0
   140002a81:	call   QWORD PTR [rip+0x2f8a9]        # 0x140032330
   140002a87:	mov    rdi,QWORD PTR [r14+0x40]
   140002a8b:	mov    rax,QWORD PTR [rdi]
   140002a8e:	mov    rbx,QWORD PTR [rax+0x10]
   140002a92:	mov    rcx,rbx
   140002a95:	call   QWORD PTR [rip+0x2fc0d]        # 0x1400326a8
   140002a9b:	mov    rcx,rdi
   140002a9e:	call   rbx
   140002aa0:	mov    rdi,QWORD PTR [r14+0x40]
   140002aa4:	test   rdi,rdi
   140002aa7:	je     0x140002ac3
   140002aa9:	mov    rax,QWORD PTR [rdi]
   140002aac:	mov    rbx,QWORD PTR [rax+0x8]
   140002ab0:	mov    rcx,rbx
   140002ab3:	call   QWORD PTR [rip+0x2fbef]        # 0x1400326a8
   140002ab9:	mov    rcx,rdi
   140002abc:	call   rbx
   140002abe:	and    QWORD PTR [r14+0x40],0x0
   140002ac3:	mov    rcx,QWORD PTR [r14+0x48]
   140002ac7:	test   rcx,rcx
   140002aca:	je     0x140002af4
   140002acc:	call   0x14000ae50
   140002ad1:	mov    rdi,QWORD PTR [r14+0x48]
   140002ad5:	test   rdi,rdi
   140002ad8:	je     0x140002af4
   140002ada:	mov    rax,QWORD PTR [rdi]
   140002add:	mov    rbx,QWORD PTR [rax+0x8]
   140002ae1:	mov    rcx,rbx
   140002ae4:	call   QWORD PTR [rip+0x2fbbe]        # 0x1400326a8
   140002aea:	mov    rcx,rdi
   140002aed:	call   rbx
   140002aef:	and    QWORD PTR [r14+0x48],0x0
   140002af4:	jmp    0x140002b4a
   140002af6:	mov    edi,DWORD PTR [rsp+0x48]
   140002afa:	test   edi,edi
   140002afc:	jns    0x140002b45
   140002afe:	mov    edx,edi
   140002b00:	lea    rcx,[rip+0x324e9]        # 0x140034ff0
   140002b07:	call   QWORD PTR [rip+0x2f823]        # 0x140032330
   140002b0d:	lea    rbx,[rip+0x48564]        # 0x14004b078
   140002b14:	mov    rcx,QWORD PTR [rip+0x4855d]        # 0x14004b078
   140002b1b:	cmp    rcx,rbx
   140002b1e:	je     0x140002b3e
   140002b20:	test   BYTE PTR [rcx+0x1c],0x1
   140002b24:	je     0x140002b3e
   140002b26:	mov    edx,0xf
   140002b2b:	mov    r9d,edi
   140002b2e:	lea    r8,[rip+0x3297b]        # 0x1400354b0
   140002b35:	mov    rcx,QWORD PTR [rcx+0x10]
   140002b39:	call   0x140001f70
   140002b3e:	mov    r14,QWORD PTR [rsp+0x40]
   140002b43:	jmp    0x140002b51
   140002b45:	mov    r14,QWORD PTR [rsp+0x40]
   140002b4a:	lea    rbx,[rip+0x48527]        # 0x14004b078
   140002b51:	cmp    BYTE PTR [r14+0xd9],0x0
   140002b59:	je     0x140002b97
   140002b5b:	call   QWORD PTR [rip+0x2f8ff]        # 0x140032460
   140002b61:	test   eax,eax
   140002b63:	jns    0x140002b97
   140002b65:	mov    rcx,QWORD PTR [rip+0x4850c]        # 0x14004b078
   140002b6c:	cmp    rcx,rbx
   140002b6f:	je     0x140002b8f
   140002b71:	test   BYTE PTR [rcx+0x1c],0x2
   140002b75:	je     0x140002b8f
   140002b77:	mov    edx,0x10
   140002b7c:	mov    r9d,eax
   140002b7f:	lea    r8,[rip+0x3292a]        # 0x1400354b0
   140002b86:	mov    rcx,QWORD PTR [rcx+0x10]
   140002b8a:	call   0x140001f70
   140002b8f:	mov    BYTE PTR [r14+0xd9],0x0
   140002b97:	cmp    BYTE PTR [r14+0xd8],0x0
   140002b9f:	je     0x140002baf
   140002ba1:	call   QWORD PTR [rip+0x2f8b1]        # 0x140032458
   140002ba7:	mov    BYTE PTR [r14+0xd8],0x0
   140002baf:	lea    rcx,[rip+0x3248a]        # 0x140035040
   140002bb6:	call   QWORD PTR [rip+0x2f77c]        # 0x140032338
   140002bbc:	cmp    BYTE PTR [r14+0xda],0x0
   140002bc4:	je     0x140002bd4
   140002bc6:	call   QWORD PTR [rip+0x2f774]        # 0x140032340
   140002bcc:	mov    BYTE PTR [r14+0xda],0x0
   140002bd4:	add    r14,0x98
   140002bdb:	jmp    0x140002bef
   140002bdd:	lea    ecx,[rdx-0x80000000]
   140002be3:	mov    eax,edx
   140002be5:	lock cmpxchg DWORD PTR [r14+0x8],ecx
   140002beb:	cmp    edx,eax
   140002bed:	je     0x140002bf7
   140002bef:	mov    edx,DWORD PTR [r14+0x8]
   140002bf3:	test   edx,edx
   140002bf5:	jns    0x140002bdd
   140002bf7:	test   edx,edx
   140002bf9:	jne    0x140002c03
   140002bfb:	mov    rcx,r14
   140002bfe:	call   0x140029c90
   140002c03:	or     eax,0xffffffff
   140002c06:	lock xadd DWORD PTR [r14+0x8],eax
   140002c0c:	dec    eax
   140002c0e:	cmp    eax,0x80000000
   140002c13:	jne    0x140002c1d
   140002c15:	mov    rcx,r14
   140002c18:	call   0x140029c90
   140002c1d:	mov    rbx,QWORD PTR [rsp+0x50]
   140002c22:	mov    rdi,QWORD PTR [rsp+0x58]
   140002c27:	add    rsp,0x30
   140002c2b:	pop    r14
   140002c2d:	ret    
   140002c2e:	int3   
   140002c2f:	int3   
   140002c30:	int3   
   140002c31:	int3   
   140002c32:	int3   
   140002c33:	int3   
   140002c34:	int3   
   140002c35:	int3   
   140002c36:	int3   
   140002c37:	int3   
   140002c38:	int3   
   140002c39:	int3   
   140002c3a:	int3   
   140002c3b:	int3   
   140002c3c:	int3   
   140002c3d:	int3   
   140002c3e:	int3   
   140002c3f:	int3   
   140002c40:	mov    QWORD PTR [rsp+0x18],rbx
   140002c45:	mov    QWORD PTR [rsp+0x20],rbp
   140002c4a:	push   rsi
   140002c4b:	push   rdi
   140002c4c:	push   r14
   140002c4e:	sub    rsp,0x50
   140002c52:	and    QWORD PTR [rsp+0x78],0x0
   140002c58:	or     rbp,0xffffffffffffffff
   140002c5c:	mov    QWORD PTR [r8],rbp
   140002c5f:	mov    r14,r8
   140002c62:	mov    rbx,QWORD PTR [rcx+0xc8]
   140002c69:	mov    rdi,rdx
   140002c6c:	call   QWORD PTR [rip+0x2f466]        # 0x1400320d8
   140002c72:	and    DWORD PTR [rsp+0x30],0x0
   140002c77:	lea    r9,[rsp+0x78]
   140002c7c:	and    DWORD PTR [rsp+0x28],0x0
   140002c81:	mov    rcx,rax
   140002c84:	mov    r8,rdi
   140002c87:	mov    DWORD PTR [rsp+0x20],0x4
   140002c8f:	mov    rdx,rbx
   140002c92:	call   QWORD PTR [rip+0x2f640]        # 0x1400322d8
   140002c98:	test   eax,eax
   140002c9a:	jne    0x140002d35
   140002ca0:	call   QWORD PTR [rip+0x2f5e2]        # 0x140032288
   140002ca6:	mov    esi,eax
   140002ca8:	test   BYTE PTR [rip+0x4b9dd],0x1        # 0x14004e68c
   140002caf:	je     0x140002d01
   140002cb1:	and    QWORD PTR [rsp+0x40],0x0
   140002cb7:	lea    ecx,[rbp+0xe]
   140002cba:	mov    DWORD PTR [rsp+0x70],eax
   140002cbe:	lea    r8,[rip+0x360fb]        # 0x140038dc0
   140002cc5:	mov    QWORD PTR [rsp+0x38],0x4
   140002cce:	lea    rax,[rsp+0x70]
   140002cd3:	mov    QWORD PTR [rsp+0x30],rax
   140002cd8:	lea    edx,[rbp+0x2c]
   140002cdb:	lea    rax,[rip+0x360da]        # 0x140038dbc
   140002ce2:	movzx  r9d,cx
   140002ce6:	mov    rcx,QWORD PTR [rip+0x4b993]        # 0x14004e680
   140002ced:	mov    QWORD PTR [rsp+0x28],0x4
   140002cf6:	mov    QWORD PTR [rsp+0x20],rax
   140002cfb:	call   QWORD PTR [rip+0x2f31f]        # 0x140032020
   140002d01:	mov    rcx,QWORD PTR [rsp+0x78]
   140002d06:	movzx  ebx,si
   140002d09:	or     ebx,0x80070000
   140002d0f:	test   esi,esi
   140002d11:	cmovle ebx,esi
   140002d14:	test   rcx,rcx
   140002d17:	je     0x140002d25
   140002d19:	call   QWORD PTR [rip+0x2f439]        # 0x140032158
   140002d1f:	and    QWORD PTR [rsp+0x78],0x0
   140002d25:	test   rdi,rdi
   140002d28:	je     0x140002d50
   140002d2a:	mov    rcx,rdi
   140002d2d:	call   QWORD PTR [rip+0x2f425]        # 0x140032158
   140002d33:	jmp    0x140002d50
   140002d35:	mov    rbp,QWORD PTR [rsp+0x78]
   140002d3a:	and    QWORD PTR [rsp+0x78],0x0
   140002d40:	test   rdi,rdi
   140002d43:	je     0x140002d4e
   140002d45:	mov    rcx,rdi
   140002d48:	call   QWORD PTR [rip+0x2f40a]        # 0x140032158
   140002d4e:	xor    ebx,ebx
   140002d50:	test   ebx,ebx
   140002d52:	jns    0x140002d87
   140002d54:	mov    rcx,QWORD PTR [rip+0x4831d]        # 0x14004b078
   140002d5b:	lea    rax,[rip+0x48316]        # 0x14004b078
   140002d62:	cmp    rcx,rax
   140002d65:	je     0x140002d8a
   140002d67:	test   BYTE PTR [rcx+0x1c],0x1
   140002d6b:	je     0x140002d8a
   140002d6d:	mov    rcx,QWORD PTR [rcx+0x10]
   140002d71:	lea    r8,[rip+0x32738]        # 0x1400354b0
   140002d78:	mov    edx,0x11
   140002d7d:	mov    r9d,ebx
   140002d80:	call   0x140001f70
   140002d85:	jmp    0x140002d8a
   140002d87:	mov    QWORD PTR [r14],rbp
   140002d8a:	lea    r11,[rsp+0x50]
   140002d8f:	mov    eax,ebx
   140002d91:	mov    rbx,QWORD PTR [r11+0x30]
   140002d95:	mov    rbp,QWORD PTR [r11+0x38]
   140002d99:	mov    rsp,r11
   140002d9c:	pop    r14
   140002d9e:	pop    rdi
   140002d9f:	pop    rsi
   140002da0:	ret    
   140002da1:	int3   
   140002da2:	int3   
   140002da3:	int3   
   140002da4:	int3   
   140002da5:	int3   
   140002da6:	int3   
   140002da7:	int3   
   140002da8:	int3   
   140002da9:	int3   
   140002daa:	int3   
   140002dab:	int3   
   140002dac:	int3   
   140002dad:	int3   
   140002dae:	int3   
   140002daf:	int3   
   140002db0:	rex push rbx
   140002db2:	sub    rsp,0x20
   140002db6:	and    DWORD PTR [rdx],0x0
   140002db9:	mov    rbx,rdx
   140002dbc:	call   QWORD PTR [rip+0x2f316]        # 0x1400320d8
   140002dc2:	mov    rcx,rax
   140002dc5:	call   QWORD PTR [rip+0x2f425]        # 0x1400321f0
   140002dcb:	test   eax,eax
   140002dcd:	jne    0x140002e17
   140002dcf:	call   QWORD PTR [rip+0x2f4b3]        # 0x140032288
   140002dd5:	mov    ebx,eax
   140002dd7:	mov    rcx,QWORD PTR [rip+0x4829a]        # 0x14004b078
   140002dde:	lea    rax,[rip+0x48293]        # 0x14004b078
   140002de5:	cmp    rcx,rax
   140002de8:	je     0x140002e08
   140002dea:	test   BYTE PTR [rcx+0x1c],0x1
   140002dee:	je     0x140002e08
   140002df0:	mov    rcx,QWORD PTR [rcx+0x10]
   140002df4:	lea    r8,[rip+0x326b5]        # 0x1400354b0
   140002dfb:	mov    edx,0x12
   140002e00:	mov    r9d,ebx
   140002e03:	call   0x140001f70
   140002e08:	movzx  eax,bx
   140002e0b:	or     eax,0x80070000
   140002e10:	test   ebx,ebx
   140002e12:	cmovle eax,ebx
   140002e15:	jmp    0x140002e1b
   140002e17:	mov    DWORD PTR [rbx],eax
   140002e19:	xor    eax,eax
   140002e1b:	add    rsp,0x20
   140002e1f:	pop    rbx
   140002e20:	ret    
   140002e21:	int3   
   140002e22:	int3   
   140002e23:	int3   
   140002e24:	int3   
   140002e25:	int3   
   140002e26:	int3   
   140002e27:	int3   
   140002e28:	int3   
   140002e29:	int3   
   140002e2a:	int3   
   140002e2b:	int3   
   140002e2c:	int3   
   140002e2d:	int3   
   140002e2e:	int3   
   140002e2f:	int3   
   140002e30:	mov    rax,QWORD PTR [rcx+0x48]
   140002e34:	ret    
   140002e35:	int3   
   140002e36:	int3   
   140002e37:	int3   
   140002e38:	int3   
   140002e39:	int3   
   140002e3a:	int3   
   140002e3b:	int3   
   140002e3c:	int3   
   140002e3d:	int3   
   140002e3e:	int3   
   140002e3f:	int3   
   140002e40:	mov    rax,rsp
   140002e43:	push   rdi
   140002e44:	sub    rsp,0x30
   140002e48:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140002e50:	mov    QWORD PTR [rax+0x10],rbx
   140002e54:	mov    QWORD PTR [rax+0x18],rsi
   140002e58:	mov    rsi,rcx
   140002e5b:	xor    ebx,ebx
   140002e5d:	mov    QWORD PTR [rax+0x8],rbx
   140002e61:	add    rcx,0x78
   140002e65:	call   0x140029ab0
   140002e6a:	test   eax,eax
   140002e6c:	js     0x140002e7c
   140002e6e:	mov    rbx,rcx
   140002e71:	mov    QWORD PTR [rsp+0x40],rcx
   140002e76:	xor    eax,eax
   140002e78:	test   eax,eax
   140002e7a:	jns    0x140002e84
   140002e7c:	mov    ecx,eax
   140002e7e:	call   0x140029d64
   140002e83:	int3   
   140002e84:	mov    rsi,QWORD PTR [rsi+0x40]
   140002e88:	test   rsi,rsi
   140002e8b:	je     0x140002ea3
   140002e8d:	mov    rax,QWORD PTR [rsi]
   140002e90:	mov    rdi,QWORD PTR [rax+0x28]
   140002e94:	mov    rcx,rdi
   140002e97:	call   QWORD PTR [rip+0x2f80b]        # 0x1400326a8
   140002e9d:	mov    rcx,rsi
   140002ea0:	call   rdi
   140002ea2:	nop
   140002ea3:	test   rbx,rbx
   140002ea6:	je     0x140002ec3
   140002ea8:	or     eax,0xffffffff
   140002eab:	lock xadd DWORD PTR [rbx+0x8],eax
   140002eb0:	dec    eax
   140002eb2:	cmp    eax,0x80000000
   140002eb7:	jne    0x140002ec3
   140002eb9:	mov    rcx,QWORD PTR [rsp+0x40]
   140002ebe:	call   0x140029c90
   140002ec3:	mov    rbx,QWORD PTR [rsp+0x48]
   140002ec8:	mov    rsi,QWORD PTR [rsp+0x50]
   140002ecd:	add    rsp,0x30
   140002ed1:	pop    rdi
   140002ed2:	ret    
   140002ed3:	int3   
   140002ed4:	int3   
   140002ed5:	int3   
   140002ed6:	int3   
   140002ed7:	int3   
   140002ed8:	int3   
   140002ed9:	int3   
   140002eda:	int3   
   140002edb:	int3   
   140002edc:	int3   
   140002edd:	int3   
   140002ede:	int3   
   140002edf:	int3   
   140002ee0:	mov    rax,rsp
   140002ee3:	push   rsi
   140002ee4:	push   rdi
   140002ee5:	push   r12
   140002ee7:	push   r13
   140002ee9:	push   r14
   140002eeb:	sub    rsp,0x180
   140002ef2:	mov    QWORD PTR [rax-0x98],0xfffffffffffffffe
   140002efd:	mov    QWORD PTR [rax+0x18],rbx
   140002f01:	mov    rax,QWORD PTR [rip+0x48118]        # 0x14004b020
   140002f08:	xor    rax,rsp
   140002f0b:	mov    QWORD PTR [rsp+0x170],rax
   140002f13:	mov    r13,rdx
   140002f16:	mov    rax,rcx
   140002f19:	mov    QWORD PTR [rsp+0x80],rcx
   140002f21:	mov    r8,QWORD PTR [rsp+0x1e0]
   140002f29:	mov    QWORD PTR [rsp+0xa8],r8
   140002f31:	mov    r9,QWORD PTR [rsp+0x1e8]
   140002f39:	mov    QWORD PTR [rsp+0xb0],r9
   140002f41:	mov    rcx,QWORD PTR [rsp+0x1f0]
   140002f49:	mov    QWORD PTR [rsp+0xf0],rcx
   140002f51:	mov    rdx,QWORD PTR [rsp+0x1f8]
   140002f59:	mov    QWORD PTR [rsp+0xe8],rdx
   140002f61:	test   r13,r13
   140002f64:	je     0x1400035fc
   140002f6a:	test   r8,r8
   140002f6d:	je     0x1400035fc
   140002f73:	test   r9,r9
   140002f76:	je     0x1400035fc
   140002f7c:	test   rcx,rcx
   140002f7f:	je     0x1400035fc
   140002f85:	test   rdx,rdx
   140002f88:	je     0x1400035fc
   140002f8e:	xor    ebx,ebx
   140002f90:	mov    QWORD PTR [rsp+0x78],rbx
   140002f95:	lea    rcx,[rax+0x78]
   140002f99:	call   0x140029ab0
   140002f9e:	mov    edi,eax
   140002fa0:	test   eax,eax
   140002fa2:	js     0x140002fae
   140002fa4:	mov    rbx,rcx
   140002fa7:	mov    QWORD PTR [rsp+0x78],rcx
   140002fac:	xor    edi,edi
   140002fae:	test   edi,edi
   140002fb0:	jns    0x140002fda
   140002fb2:	test   rbx,rbx
   140002fb5:	je     0x140002fd3
   140002fb7:	or     ecx,0xffffffff
   140002fba:	lock xadd DWORD PTR [rbx+0x8],ecx
   140002fbf:	dec    ecx
   140002fc1:	cmp    ecx,0x80000000
   140002fc7:	jne    0x140002fd3
   140002fc9:	mov    rcx,QWORD PTR [rsp+0x78]
   140002fce:	call   0x140029c90
   140002fd3:	mov    eax,edi
   140002fd5:	jmp    0x140003601
   140002fda:	lea    r12,[rip+0x48097]        # 0x14004b078
   140002fe1:	mov    rcx,QWORD PTR [rip+0x48090]        # 0x14004b078
   140002fe8:	cmp    rcx,r12
   140002feb:	je     0x14000301c
   140002fed:	test   BYTE PTR [rcx+0x1c],0x2
   140002ff1:	je     0x14000301c
   140002ff3:	movzx  r14d,BYTE PTR [rsp+0x1d8]
   140002ffc:	movzx  esi,BYTE PTR [rsp+0x1d0]
   140003004:	mov    r9d,esi
   140003007:	mov    QWORD PTR [rsp+0x28],r13
   14000300c:	mov    DWORD PTR [rsp+0x20],r14d
   140003011:	mov    rcx,QWORD PTR [rcx+0x10]
   140003015:	call   0x140002314
   14000301a:	jmp    0x14000302c
   14000301c:	mov    sil,BYTE PTR [rsp+0x1d0]
   140003024:	mov    r14b,BYTE PTR [rsp+0x1d8]
   14000302c:	movzx  r8d,r14b
   140003030:	movzx  edx,sil
   140003034:	mov    r9,r13
   140003037:	lea    rcx,[rip+0x32022]        # 0x140035060
   14000303e:	call   QWORD PTR [rip+0x2f2ec]        # 0x140032330
   140003044:	and    DWORD PTR [rsp+0x88],0x0
   14000304c:	call   QWORD PTR [rip+0x2f3fe]        # 0x140032450
   140003052:	mov    rdi,QWORD PTR [rax+0xa0]
   140003059:	mov    rcx,rdi
   14000305c:	call   QWORD PTR [rip+0x2f646]        # 0x1400326a8
   140003062:	lea    r8,[rsp+0x88]
   14000306a:	xor    edx,edx
   14000306c:	lea    rcx,[rip+0x32075]        # 0x1400350e8
   140003073:	call   rdi
   140003075:	cmp    DWORD PTR [rsp+0x88],0x0
   14000307d:	jne    0x1400030b8
   14000307f:	mov    rcx,QWORD PTR [rip+0x47ff2]        # 0x14004b078
   140003086:	cmp    rcx,r12
   140003089:	je     0x1400030a6
   14000308b:	test   BYTE PTR [rcx+0x1c],0x2
   14000308f:	je     0x1400030a6
   140003091:	mov    edx,0x14
   140003096:	lea    r8,[rip+0x32413]        # 0x1400354b0
   14000309d:	mov    rcx,QWORD PTR [rcx+0x10]
   1400030a1:	call   0x140001f08
   1400030a6:	lea    rcx,[rip+0x32053]        # 0x140035100
   1400030ad:	call   QWORD PTR [rip+0x2f27d]        # 0x140032330
   1400030b3:	xor    sil,sil
   1400030b6:	jmp    0x1400030ec
   1400030b8:	mov    rcx,QWORD PTR [rip+0x47fb9]        # 0x14004b078
   1400030bf:	cmp    rcx,r12
   1400030c2:	je     0x1400030df
   1400030c4:	test   BYTE PTR [rcx+0x1c],0x2
   1400030c8:	je     0x1400030df
   1400030ca:	mov    edx,0x16
   1400030cf:	lea    r8,[rip+0x323da]        # 0x1400354b0
   1400030d6:	mov    rcx,QWORD PTR [rcx+0x10]
   1400030da:	call   0x140001f08
   1400030df:	lea    rcx,[rip+0x3207a]        # 0x140035160
   1400030e6:	call   QWORD PTR [rip+0x2f244]        # 0x140032330
   1400030ec:	mov    BYTE PTR [rsp+0x71],0x0
   1400030f1:	mov    BYTE PTR [rsp+0x70],0x0
   1400030f6:	xorps  xmm0,xmm0
   1400030f9:	movdqu XMMWORD PTR [rsp+0xb8],xmm0
   140003102:	and    QWORD PTR [rsp+0xc8],0x0
   14000310b:	movdqu XMMWORD PTR [rsp+0x90],xmm0
   140003114:	and    QWORD PTR [rsp+0xa0],0x0
   14000311d:	movdqu XMMWORD PTR [rsp+0xd0],xmm0
   140003126:	and    QWORD PTR [rsp+0xe0],0x0
   14000312f:	and    DWORD PTR [rsp+0x120],0x0
   140003137:	xor    edx,edx
   140003139:	lea    r8d,[rdx+0x40]
   14000313d:	lea    rcx,[rsp+0x124]
   140003145:	call   0x14002e2ce
   14000314a:	nop
   14000314b:	test   sil,sil
   14000314e:	jne    0x140003167
   140003150:	mov    r8b,r14b
   140003153:	mov    rdx,r13
   140003156:	mov    rcx,QWORD PTR [rsp+0x80]
   14000315e:	mov    rcx,QWORD PTR [rcx+0x48]
   140003162:	call   0x140007b44
   140003167:	lea    rax,[rsp+0xd0]
   14000316f:	mov    QWORD PTR [rsp+0x58],rax
   140003174:	lea    rax,[rsp+0x90]
   14000317c:	mov    QWORD PTR [rsp+0x50],rax
   140003181:	lea    rax,[rsp+0xb8]
   140003189:	mov    QWORD PTR [rsp+0x48],rax
   14000318e:	lea    rax,[rsp+0x120]
   140003196:	mov    QWORD PTR [rsp+0x40],rax
   14000319b:	lea    rax,[rsp+0x70]
   1400031a0:	mov    QWORD PTR [rsp+0x38],rax
   1400031a5:	lea    rax,[rsp+0x71]
   1400031aa:	mov    QWORD PTR [rsp+0x30],rax
   1400031af:	mov    rax,QWORD PTR [rsp+0xb0]
   1400031b7:	mov    QWORD PTR [rsp+0x28],rax
   1400031bc:	mov    rax,QWORD PTR [rsp+0xa8]
   1400031c4:	mov    QWORD PTR [rsp+0x20],rax
   1400031c9:	mov    r9b,r14b
   1400031cc:	mov    r8b,sil
   1400031cf:	mov    rdx,r13
   1400031d2:	mov    rsi,QWORD PTR [rsp+0x80]
   1400031da:	mov    rcx,QWORD PTR [rsi+0x48]
   1400031de:	call   0x14000869c
   1400031e3:	nop
   1400031e4:	movzx  edi,BYTE PTR [rsp+0x70]
   1400031e9:	mov    r8d,edi
   1400031ec:	movzx  r13d,BYTE PTR [rsp+0x71]
   1400031f2:	mov    edx,r13d
   1400031f5:	lea    rcx,[rip+0x32034]        # 0x140035230
   1400031fc:	call   QWORD PTR [rip+0x2f12e]        # 0x140032330
   140003202:	xor    eax,eax
   140003204:	test   r13b,r13b
   140003207:	setne  al
   14000320a:	mov    rcx,QWORD PTR [rsp+0xf0]
   140003212:	mov    QWORD PTR [rcx],rax
   140003215:	xor    eax,eax
   140003217:	test   dil,dil
   14000321a:	setne  al
   14000321d:	mov    rcx,QWORD PTR [rsp+0xe8]
   140003225:	mov    QWORD PTR [rcx],rax
   140003228:	test   r13b,r13b
   14000322b:	jne    0x140003236
   14000322d:	test   dil,dil
   140003230:	je     0x1400034ab
   140003236:	mov    rcx,QWORD PTR [rip+0x47e3b]        # 0x14004b078
   14000323d:	cmp    rcx,r12
   140003240:	je     0x14000325d
   140003242:	test   BYTE PTR [rcx+0x1c],0x4
   140003246:	je     0x14000325d
   140003248:	mov    edx,0x18
   14000324d:	lea    r8,[rip+0x3225c]        # 0x1400354b0
   140003254:	mov    rcx,QWORD PTR [rcx+0x10]
   140003258:	call   0x140001f08
   14000325d:	lea    rcx,[rip+0x3207c]        # 0x1400352e0
   140003264:	call   QWORD PTR [rip+0x2f0c6]        # 0x140032330
   14000326a:	lea    r13,[rsi+0x40]
   14000326e:	cmp    QWORD PTR [r13+0x0],0x0
   140003273:	jne    0x140003372
   140003279:	mov    rcx,QWORD PTR [rip+0x47df8]        # 0x14004b078
   140003280:	cmp    rcx,r12
   140003283:	je     0x1400032a0
   140003285:	test   BYTE PTR [rcx+0x1c],0x4
   140003289:	je     0x1400032a0
   14000328b:	mov    edx,0x19
   140003290:	lea    r8,[rip+0x32219]        # 0x1400354b0
   140003297:	mov    rcx,QWORD PTR [rcx+0x10]
   14000329b:	call   0x140001f08
   1400032a0:	lea    rcx,[rip+0x32081]        # 0x140035328
   1400032a7:	call   QWORD PTR [rip+0x2f083]        # 0x140032330
   1400032ad:	mov    rax,QWORD PTR [rsi+0x48]
   1400032b1:	test   rax,rax
   1400032b4:	je     0x1400032bc
   1400032b6:	lea    r14,[rax+0x8]
   1400032ba:	jmp    0x1400032bf
   1400032bc:	xor    r14d,r14d
   1400032bf:	mov    rsi,QWORD PTR [r13+0x0]
   1400032c3:	test   rsi,rsi
   1400032c6:	je     0x1400032e2
   1400032c8:	mov    rax,QWORD PTR [rsi]
   1400032cb:	mov    rdi,QWORD PTR [rax+0x8]
   1400032cf:	mov    rcx,rdi
   1400032d2:	call   QWORD PTR [rip+0x2f3d0]        # 0x1400326a8
   1400032d8:	mov    rcx,rsi
   1400032db:	call   rdi
   1400032dd:	and    QWORD PTR [r13+0x0],0x0
   1400032e2:	mov    rdx,r13
   1400032e5:	mov    rcx,r14
   1400032e8:	call   0x14001ae38
   1400032ed:	mov    edi,eax
   1400032ef:	test   eax,eax
   1400032f1:	jns    0x140003354
   1400032f3:	lea    rcx,[rsp+0xd0]
   1400032fb:	call   0x1400036e0
   140003300:	nop
   140003301:	mov    rcx,QWORD PTR [rsp+0x90]
   140003309:	test   rcx,rcx
   14000330c:	je     0x140003329
   14000330e:	call   QWORD PTR [rip+0x2f2b4]        # 0x1400325c8
   140003314:	xorps  xmm0,xmm0
   140003317:	movdqu XMMWORD PTR [rsp+0x90],xmm0
   140003320:	and    QWORD PTR [rsp+0xa0],0x0
   140003329:	lea    rcx,[rsp+0xb8]
   140003331:	call   0x1400036e0
   140003336:	nop
   140003337:	test   rbx,rbx
   14000333a:	je     0x140002fd3
   140003340:	or     eax,0xffffffff
   140003343:	lock xadd DWORD PTR [rbx+0x8],eax
   140003348:	dec    eax
   14000334a:	cmp    eax,0x80000000
   14000334f:	jmp    0x140002fc7
   140003354:	test   BYTE PTR [rip+0x4cc65],0x1        # 0x14004ffc0
   14000335b:	je     0x1400033a7
   14000335d:	lea    r8,[rip+0x30e54]        # 0x1400341b8
   140003364:	lea    rdx,[rip+0x30b8d]        # 0x140033ef8
   14000336b:	call   0x140003818
   140003370:	jmp    0x1400033a7
   140003372:	mov    rcx,QWORD PTR [rip+0x47cff]        # 0x14004b078
   140003379:	cmp    rcx,r12
   14000337c:	je     0x140003399
   14000337e:	test   BYTE PTR [rcx+0x1c],0x4
   140003382:	je     0x140003399
   140003384:	mov    edx,0x1a
   140003389:	lea    r8,[rip+0x32120]        # 0x1400354b0
   140003390:	mov    rcx,QWORD PTR [rcx+0x10]
   140003394:	call   0x140001f08
   140003399:	lea    rcx,[rip+0x31fc0]        # 0x140035360
   1400033a0:	call   QWORD PTR [rip+0x2ef8a]        # 0x140032330
   1400033a6:	nop
   1400033a7:	mov    rsi,QWORD PTR [r13+0x0]
   1400033ab:	mov    rax,QWORD PTR [rsi]
   1400033ae:	mov    rdi,QWORD PTR [rax+0x18]
   1400033b2:	mov    rcx,rdi
   1400033b5:	call   QWORD PTR [rip+0x2f2ed]        # 0x1400326a8
   1400033bb:	mov    eax,DWORD PTR [rsp+0x158]
   1400033c2:	mov    DWORD PTR [rsp+0x68],eax
   1400033c6:	mov    eax,DWORD PTR [rsp+0x154]
   1400033cd:	mov    DWORD PTR [rsp+0x60],eax
   1400033d1:	mov    eax,DWORD PTR [rsp+0x150]
   1400033d8:	mov    DWORD PTR [rsp+0x58],eax
   1400033dc:	mov    eax,DWORD PTR [rsp+0x130]
   1400033e3:	mov    DWORD PTR [rsp+0x50],eax
   1400033e7:	mov    eax,DWORD PTR [rsp+0x14c]
   1400033ee:	mov    DWORD PTR [rsp+0x48],eax
   1400033f2:	mov    eax,DWORD PTR [rsp+0x148]
   1400033f9:	mov    DWORD PTR [rsp+0x40],eax
   1400033fd:	mov    eax,DWORD PTR [rsp+0x134]
   140003404:	mov    DWORD PTR [rsp+0x38],eax
   140003408:	mov    eax,DWORD PTR [rsp+0x144]
   14000340f:	mov    DWORD PTR [rsp+0x30],eax
   140003413:	mov    eax,DWORD PTR [rsp+0x140]
   14000341a:	mov    DWORD PTR [rsp+0x28],eax
   14000341e:	mov    eax,DWORD PTR [rsp+0x13c]
   140003425:	mov    DWORD PTR [rsp+0x20],eax
   140003429:	mov    r9d,DWORD PTR [rsp+0x138]
   140003431:	mov    r8b,BYTE PTR [rsp+0x70]
   140003436:	mov    dl,BYTE PTR [rsp+0x71]
   14000343a:	mov    rcx,rsi
   14000343d:	call   rdi
   14000343f:	mov    r14,QWORD PTR [r13+0x0]
   140003443:	mov    rax,QWORD PTR [r14]
   140003446:	movzx  edi,BYTE PTR [rsp+0x160]
   14000344e:	mov    rsi,QWORD PTR [rax+0x20]
   140003452:	mov    rcx,rsi
   140003455:	call   QWORD PTR [rip+0x2f24d]        # 0x1400326a8
   14000345b:	mov    r9d,DWORD PTR [rsp+0x128]
   140003463:	mov    r8d,DWORD PTR [rsp+0x12c]
   14000346b:	mov    edx,edi
   14000346d:	mov    rcx,r14
   140003470:	call   rsi
   140003472:	mov    rsi,QWORD PTR [r13+0x0]
   140003476:	mov    rax,QWORD PTR [rsi]
   140003479:	mov    rdi,QWORD PTR [rax+0x30]
   14000347d:	mov    rcx,rdi
   140003480:	call   QWORD PTR [rip+0x2f222]        # 0x1400326a8
   140003486:	lea    r9,[rsp+0xd0]
   14000348e:	lea    r8,[rsp+0x90]
   140003496:	lea    rdx,[rsp+0xb8]
   14000349e:	mov    rcx,rsi
   1400034a1:	call   rdi
   1400034a3:	mov    rsi,QWORD PTR [rsp+0x80]
   1400034ab:	mov    rsi,QWORD PTR [rsi+0xd0]
   1400034b2:	mov    rax,QWORD PTR [rsi]
   1400034b5:	mov    rdi,QWORD PTR [rax+0x20]
   1400034b9:	mov    rcx,rdi
   1400034bc:	call   QWORD PTR [rip+0x2f1e6]        # 0x1400326a8
   1400034c2:	mov    rax,QWORD PTR [rsp+0xb0]
   1400034ca:	mov    r8,QWORD PTR [rax]
   1400034cd:	mov    rax,QWORD PTR [rsp+0xa8]
   1400034d5:	mov    rdx,QWORD PTR [rax]
   1400034d8:	mov    rcx,rsi
   1400034db:	call   rdi
   1400034dd:	nop
   1400034de:	jmp    0x1400034ec
   1400034e0:	lea    r12,[rip+0x47b91]        # 0x14004b078
   1400034e7:	mov    rbx,QWORD PTR [rsp+0x78]
   1400034ec:	mov    rcx,QWORD PTR [rip+0x47b85]        # 0x14004b078
   1400034f3:	cmp    rcx,r12
   1400034f6:	je     0x140003513
   1400034f8:	test   BYTE PTR [rcx+0x1c],0x4
   1400034fc:	je     0x140003513
   1400034fe:	mov    edx,0x1d
   140003503:	lea    r8,[rip+0x31fa6]        # 0x1400354b0
   14000350a:	mov    rcx,QWORD PTR [rcx+0x10]
   14000350e:	call   0x140001f08
   140003513:	lea    rcx,[rip+0x31f26]        # 0x140035440
   14000351a:	call   QWORD PTR [rip+0x2ee18]        # 0x140032338
   140003520:	nop
   140003521:	lea    rcx,[rsp+0xd0]
   140003529:	call   0x1400036e0
   14000352e:	nop
   14000352f:	mov    rcx,QWORD PTR [rsp+0x90]
   140003537:	test   rcx,rcx
   14000353a:	je     0x140003557
   14000353c:	call   QWORD PTR [rip+0x2f086]        # 0x1400325c8
   140003542:	xorps  xmm0,xmm0
   140003545:	movdqu XMMWORD PTR [rsp+0x90],xmm0
   14000354e:	and    QWORD PTR [rsp+0xa0],0x0
   140003557:	lea    rcx,[rsp+0xb8]
   14000355f:	call   0x1400036e0
   140003564:	nop
   140003565:	test   rbx,rbx
   140003568:	je     0x140003585
   14000356a:	or     eax,0xffffffff
   14000356d:	lock xadd DWORD PTR [rbx+0x8],eax
   140003572:	dec    eax
   140003574:	cmp    eax,0x80000000
   140003579:	jne    0x140003585
   14000357b:	mov    rcx,QWORD PTR [rsp+0x78]
   140003580:	call   0x140029c90
   140003585:	xor    eax,eax
   140003587:	jmp    0x140003601
   140003589:	lea    rcx,[rsp+0xd0]
   140003591:	call   0x1400036e0
   140003596:	nop
   140003597:	mov    rcx,QWORD PTR [rsp+0x90]
   14000359f:	test   rcx,rcx
   1400035a2:	je     0x1400035bf
   1400035a4:	call   QWORD PTR [rip+0x2f01e]        # 0x1400325c8
   1400035aa:	xorps  xmm0,xmm0
   1400035ad:	movdqu XMMWORD PTR [rsp+0x90],xmm0
   1400035b6:	and    QWORD PTR [rsp+0xa0],0x0
   1400035bf:	lea    rcx,[rsp+0xb8]
   1400035c7:	call   0x1400036e0
   1400035cc:	nop
   1400035cd:	mov    rax,QWORD PTR [rsp+0x78]
   1400035d2:	test   rax,rax
   1400035d5:	je     0x1400035f3
   1400035d7:	or     ecx,0xffffffff
   1400035da:	lock xadd DWORD PTR [rax+0x8],ecx
   1400035df:	dec    ecx
   1400035e1:	cmp    ecx,0x80000000
   1400035e7:	jne    0x1400035f3
   1400035e9:	mov    rcx,QWORD PTR [rsp+0x78]
   1400035ee:	call   0x140029c90
   1400035f3:	mov    eax,DWORD PTR [rsp+0x80]
   1400035fa:	jmp    0x140003601
   1400035fc:	mov    eax,0x80070057
   140003601:	mov    rcx,QWORD PTR [rsp+0x170]
   140003609:	xor    rcx,rsp
   14000360c:	call   0x14002dd00
   140003611:	mov    rbx,QWORD PTR [rsp+0x1c0]
   140003619:	add    rsp,0x180
   140003620:	pop    r14
   140003622:	pop    r13
   140003624:	pop    r12
   140003626:	pop    rdi
   140003627:	pop    rsi
   140003628:	ret    
   140003629:	int3   
   14000362a:	int3   
   14000362b:	int3   
   14000362c:	int3   
   14000362d:	int3   
   14000362e:	int3   
   14000362f:	int3   
   140003630:	sub    rsp,0x28
   140003634:	mov    rcx,QWORD PTR [rip+0x47a3d]        # 0x14004b078
   14000363b:	lea    rax,[rip+0x47a36]        # 0x14004b078
   140003642:	cmp    rcx,rax
   140003645:	je     0x140003666
   140003647:	test   BYTE PTR [rcx+0x1c],0x2
   14000364b:	je     0x140003666
   14000364d:	mov    rcx,QWORD PTR [rcx+0x10]
   140003651:	lea    r8,[rip+0x31e58]        # 0x1400354b0
   140003658:	movzx  r9d,dl
   14000365c:	mov    edx,0x1e
   140003661:	call   0x140001f70
   140003666:	add    rsp,0x28
   14000366a:	ret    
   14000366b:	int3   
   14000366c:	int3   
   14000366d:	int3   
   14000366e:	int3   
   14000366f:	int3   
   140003670:	int3   
   140003671:	int3   
   140003672:	int3   
   140003673:	int3   
   140003674:	rex push rbx
   140003676:	sub    rsp,0x20
   14000367a:	mov    rbx,rcx
   14000367d:	mov    rcx,QWORD PTR [rcx]
   140003680:	test   rcx,rcx
   140003683:	je     0x140003699
   140003685:	call   QWORD PTR [rip+0x2ef3d]        # 0x1400325c8
   14000368b:	and    QWORD PTR [rbx],0x0
   14000368f:	and    QWORD PTR [rbx+0x8],0x0
   140003694:	and    QWORD PTR [rbx+0x10],0x0
   140003699:	add    rsp,0x20
   14000369d:	pop    rbx
   14000369e:	ret    
   14000369f:	int3   
   1400036a0:	int3   
   1400036a1:	int3   
   1400036a2:	int3   
   1400036a3:	int3   
   1400036a4:	int3   
   1400036a5:	int3   
   1400036a6:	int3   
   1400036a7:	int3   
   1400036a8:	mov    QWORD PTR [rsp+0x8],rbx
   1400036ad:	push   rdi
   1400036ae:	sub    rsp,0x20
   1400036b2:	mov    rdi,QWORD PTR [rcx]
   1400036b5:	test   rdi,rdi
   1400036b8:	je     0x1400036cf
   1400036ba:	mov    rax,QWORD PTR [rdi]
   1400036bd:	mov    rbx,QWORD PTR [rax+0x8]
   1400036c1:	mov    rcx,rbx
   1400036c4:	call   QWORD PTR [rip+0x2efde]        # 0x1400326a8
   1400036ca:	mov    rcx,rdi
   1400036cd:	call   rbx
   1400036cf:	mov    rbx,QWORD PTR [rsp+0x30]
   1400036d4:	add    rsp,0x20
   1400036d8:	pop    rdi
   1400036d9:	ret    
   1400036da:	int3   
   1400036db:	int3   
   1400036dc:	int3   
   1400036dd:	int3   
   1400036de:	int3   
   1400036df:	int3   
   1400036e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400036e5:	mov    QWORD PTR [rsp+0x10],rbp
   1400036ea:	mov    QWORD PTR [rsp+0x18],rsi
   1400036ef:	push   rdi
   1400036f0:	sub    rsp,0x20
   1400036f4:	mov    rbx,QWORD PTR [rcx]
   1400036f7:	xor    ebp,ebp
   1400036f9:	mov    rdi,rcx
   1400036fc:	test   rbx,rbx
   1400036ff:	je     0x140003743
   140003701:	mov    rsi,QWORD PTR [rcx+0x8]
   140003705:	jmp    0x14000372a
   140003707:	cmp    QWORD PTR [rbx+0x18],0x8
   14000370c:	jb     0x140003717
   14000370e:	mov    rcx,QWORD PTR [rbx]
   140003711:	call   QWORD PTR [rip+0x2eeb1]        # 0x1400325c8
   140003717:	mov    QWORD PTR [rbx+0x18],0x7
   14000371f:	mov    QWORD PTR [rbx+0x10],rbp
   140003723:	mov    WORD PTR [rbx],bp
   140003726:	add    rbx,0x20
   14000372a:	cmp    rbx,rsi
   14000372d:	jne    0x140003707
   14000372f:	mov    rcx,QWORD PTR [rdi]
   140003732:	call   QWORD PTR [rip+0x2ee90]        # 0x1400325c8
   140003738:	mov    QWORD PTR [rdi],rbp
   14000373b:	mov    QWORD PTR [rdi+0x8],rbp
   14000373f:	mov    QWORD PTR [rdi+0x10],rbp
   140003743:	mov    rbx,QWORD PTR [rsp+0x30]
   140003748:	mov    rbp,QWORD PTR [rsp+0x38]
   14000374d:	mov    rsi,QWORD PTR [rsp+0x40]
   140003752:	add    rsp,0x20
   140003756:	pop    rdi
   140003757:	ret    
   140003758:	int3   
   140003759:	int3   
   14000375a:	int3   
   14000375b:	int3   
   14000375c:	int3   
   14000375d:	int3   
   14000375e:	int3   
   14000375f:	int3   
   140003760:	mov    rcx,rdx
   140003763:	rex.W jmp QWORD PTR [rip+0x2ee5e]        # 0x1400325c8
   14000376a:	int3   
   14000376b:	int3   
   14000376c:	int3   
   14000376d:	int3   
   14000376e:	int3   
   14000376f:	int3   
   140003770:	mov    QWORD PTR [rsp+0x8],rbx
   140003775:	mov    QWORD PTR [rsp+0x10],rbp
   14000377a:	mov    QWORD PTR [rsp+0x18],rsi
   14000377f:	push   rdi
   140003780:	sub    rsp,0x20
   140003784:	xor    ebp,ebp
   140003786:	mov    rdi,r8
   140003789:	mov    rbx,rcx
   14000378c:	test   dl,dl
   14000378e:	je     0x1400037b3
   140003790:	cmp    QWORD PTR [rcx+0x18],0x8
   140003795:	jb     0x1400037b3
   140003797:	mov    rsi,QWORD PTR [rcx]
   14000379a:	test   r8,r8
   14000379d:	je     0x1400037aa
   14000379f:	add    r8,r8
   1400037a2:	mov    rdx,rsi
   1400037a5:	call   0x14002e2f2
   1400037aa:	mov    rcx,rsi
   1400037ad:	call   QWORD PTR [rip+0x2ee15]        # 0x1400325c8
   1400037b3:	mov    rsi,QWORD PTR [rsp+0x40]
   1400037b8:	mov    QWORD PTR [rbx+0x18],0x7
   1400037c0:	mov    QWORD PTR [rbx+0x10],rdi
   1400037c4:	mov    WORD PTR [rbx+rdi*2],bp
   1400037c8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400037cd:	mov    rbp,QWORD PTR [rsp+0x38]
   1400037d2:	add    rsp,0x20
   1400037d6:	pop    rdi
   1400037d7:	ret    
   1400037d8:	int3   
   1400037d9:	int3   
   1400037da:	int3   
   1400037db:	int3   
   1400037dc:	int3   
   1400037dd:	int3   
   1400037de:	int3   
   1400037df:	int3   
   1400037e0:	rex push rbx
   1400037e2:	sub    rsp,0x20
   1400037e6:	cmp    QWORD PTR [rcx+0x18],0x8
   1400037eb:	mov    rbx,rcx
   1400037ee:	jb     0x1400037f9
   1400037f0:	mov    rcx,QWORD PTR [rcx]
   1400037f3:	call   QWORD PTR [rip+0x2edcf]        # 0x1400325c8
   1400037f9:	xor    eax,eax
   1400037fb:	mov    QWORD PTR [rbx+0x18],0x7
   140003803:	mov    QWORD PTR [rbx+0x10],rax
   140003807:	mov    WORD PTR [rbx],ax
   14000380a:	add    rsp,0x20
   14000380e:	pop    rbx
   14000380f:	ret    
   140003810:	int3   
   140003811:	int3   
   140003812:	int3   
   140003813:	int3   
   140003814:	int3   
   140003815:	int3   
   140003816:	int3   
   140003817:	int3   
   140003818:	mov    QWORD PTR [rsp+0x8],rbx
   14000381d:	mov    QWORD PTR [rsp+0x10],rsi
   140003822:	push   rdi
   140003823:	sub    rsp,0x50
   140003827:	cmp    BYTE PTR [rip+0x4c762],0x0        # 0x14004ff90
   14000382e:	mov    rdi,rdx
   140003831:	mov    rsi,QWORD PTR [rip+0x4c790]        # 0x14004ffc8
   140003838:	jne    0x14000385a
   14000383a:	mov    rbx,QWORD PTR [rip+0x4c747]        # 0x14004ff88
   140003841:	mov    rcx,rbx
   140003844:	call   QWORD PTR [rip+0x2ee5e]        # 0x1400326a8
   14000384a:	xor    r9d,r9d
   14000384d:	xor    r8d,r8d
   140003850:	mov    rdx,rdi
   140003853:	mov    rcx,rsi
   140003856:	call   rbx
   140003858:	jmp    0x140003897
   14000385a:	movzx  eax,BYTE PTR [rdx+0x2]
   14000385e:	mov    rcx,QWORD PTR [rsi+0x8]
   140003862:	mov    WORD PTR [rsp+0x26],ax
   140003867:	mov    al,BYTE PTR [rdx+0x4]
   14000386a:	mov    BYTE PTR [rsp+0x25],al
   14000386e:	mov    al,BYTE PTR [rdx+0x5]
   140003871:	lea    rdx,[rsp+0x20]
   140003876:	mov    BYTE PTR [rsp+0x24],al
   14000387a:	mov    eax,0x30
   14000387f:	mov    WORD PTR [rsp+0x20],ax
   140003884:	mov    QWORD PTR [rsp+0x38],r8
   140003889:	mov    DWORD PTR [rsp+0x4c],0x1a0000
   140003891:	call   QWORD PTR [rip+0x2e791]        # 0x140032028
   140003897:	mov    rbx,QWORD PTR [rsp+0x60]
   14000389c:	mov    rsi,QWORD PTR [rsp+0x68]
   1400038a1:	add    rsp,0x50
   1400038a5:	pop    rdi
   1400038a6:	ret    
   1400038a7:	int3   
   1400038a8:	int3   
   1400038a9:	int3   
   1400038aa:	int3   
   1400038ab:	int3   
   1400038ac:	int3   
   1400038ad:	int3   
   1400038ae:	int3   
   1400038af:	int3   
   1400038b0:	sub    rsp,0x28
   1400038b4:	mov    rcx,QWORD PTR [rcx]
   1400038b7:	test   rcx,rcx
   1400038ba:	je     0x1400038d2
   1400038bc:	or     eax,0xffffffff
   1400038bf:	lock xadd DWORD PTR [rcx+0x8],eax
   1400038c4:	dec    eax
   1400038c6:	cmp    eax,0x80000000
   1400038cb:	jne    0x1400038d2
   1400038cd:	call   0x140029c90
   1400038d2:	add    rsp,0x28
   1400038d6:	ret    
   1400038d7:	int3   
   1400038d8:	int3   
   1400038d9:	int3   
   1400038da:	int3   
   1400038db:	int3   
   1400038dc:	int3   
   1400038dd:	int3   
   1400038de:	int3   
   1400038df:	int3   
   1400038e0:	sub    rsp,0x48
   1400038e4:	test   r9,r9
   1400038e7:	je     0x1400038fc
   1400038e9:	or     r10,0xffffffffffffffff
   1400038ed:	inc    r10
   1400038f0:	cmp    BYTE PTR [r9+r10*1],0x0
   1400038f5:	jne    0x1400038ed
   1400038f7:	inc    r10
   1400038fa:	jmp    0x140003902
   1400038fc:	mov    r10d,0x5
   140003902:	test   r9,r9
   140003905:	lea    rax,[rip+0x31b88]        # 0x140035494
   14000390c:	cmovne rax,r9
   140003910:	and    QWORD PTR [rsp+0x30],0x0
   140003916:	movzx  r9d,dx
   14000391a:	mov    edx,0x2b
   14000391f:	mov    QWORD PTR [rsp+0x28],r10
   140003924:	mov    QWORD PTR [rsp+0x20],rax
   140003929:	call   QWORD PTR [rip+0x2e6f1]        # 0x140032020
   14000392f:	add    rsp,0x48
   140003933:	ret    
   140003934:	int3   
   140003935:	int3   
   140003936:	int3   
   140003937:	int3   
   140003938:	int3   
   140003939:	int3   
   14000393a:	int3   
   14000393b:	int3   
   14000393c:	int3   
   14000393d:	int3   
   14000393e:	int3   
   14000393f:	int3   
   140003940:	rex.W jmp QWORD PTR [rip+0x2e931]        # 0x140032278
   140003947:	int3   
   140003948:	int3   
   140003949:	int3   
   14000394a:	int3   
   14000394b:	int3   
   14000394c:	int3   
   14000394d:	int3   
   14000394e:	int3   
   14000394f:	int3   
   140003950:	rex push rbx
   140003952:	sub    rsp,0x50
   140003956:	mov    rax,QWORD PTR [rip+0x476c3]        # 0x14004b020
   14000395d:	xor    rax,rsp
   140003960:	mov    QWORD PTR [rsp+0x48],rax
   140003965:	xor    edx,edx
   140003967:	mov    rbx,rcx
   14000396a:	call   QWORD PTR [rip+0x2e900]        # 0x140032270
   140003970:	test   eax,eax
   140003972:	je     0x14000398a
   140003974:	mov    rax,rbx
   140003977:	mov    rcx,QWORD PTR [rsp+0x48]
   14000397c:	xor    rcx,rsp
   14000397f:	call   0x14002dd00
   140003984:	add    rsp,0x50
   140003988:	pop    rbx
   140003989:	ret    
   14000398a:	call   QWORD PTR [rip+0x2e8f8]        # 0x140032288
   140003990:	movzx  edx,ax
   140003993:	lea    rcx,[rsp+0x20]
   140003998:	or     edx,0x80070000
   14000399e:	test   eax,eax
   1400039a0:	cmovle edx,eax
   1400039a3:	call   0x140002064
   1400039a8:	lea    rdx,[rip+0x457d9]        # 0x140049188
   1400039af:	lea    rcx,[rsp+0x20]
   1400039b4:	call   0x14002e2da
   1400039b9:	int3   
   1400039ba:	int3   
   1400039bb:	int3   
   1400039bc:	int3   
   1400039bd:	int3   
   1400039be:	int3   
   1400039bf:	int3   
   1400039c0:	sub    rsp,0x28
   1400039c4:	add    rcx,0x8
   1400039c8:	cmp    BYTE PTR [rcx+0x28],0x0
   1400039cc:	je     0x1400039d8
   1400039ce:	mov    BYTE PTR [rcx+0x28],0x0
   1400039d2:	call   QWORD PTR [rip+0x2e8a0]        # 0x140032278
   1400039d8:	add    rsp,0x28
   1400039dc:	ret    
   1400039dd:	int3   
   1400039de:	int3   
   1400039df:	int3   
   1400039e0:	int3   
   1400039e1:	int3   
   1400039e2:	int3   
   1400039e3:	int3   
   1400039e4:	int3   
   1400039e5:	int3   
   1400039e6:	int3   
   1400039e7:	int3   
   1400039e8:	int3   
   1400039e9:	int3   
   1400039ea:	int3   
   1400039eb:	int3   
   1400039ec:	int3   
   1400039ed:	int3   
   1400039ee:	int3   
   1400039ef:	int3   
   1400039f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400039f5:	mov    QWORD PTR [rsp+0x10],rsi
   1400039fa:	push   rdi
   1400039fb:	sub    rsp,0x20
   1400039ff:	and    DWORD PTR [r8],0x0
   140003a03:	mov    rbx,rdx
   140003a06:	sub    ecx,0x4
   140003a09:	je     0x140003a20
   140003a0b:	cmp    ecx,0x1
   140003a0e:	je     0x140003a17
   140003a10:	mov    eax,0x57
   140003a15:	jmp    0x140003a5f
   140003a17:	xor    edi,edi
   140003a19:	xor    eax,eax
   140003a1b:	xor    sil,sil
   140003a1e:	jmp    0x140003a41
   140003a20:	mov    rcx,r9
   140003a23:	call   QWORD PTR [rip+0x2e5df]        # 0x140032008
   140003a29:	mov    rcx,rax
   140003a2c:	mov    rdi,rax
   140003a2f:	call   QWORD PTR [rip+0x2e5db]        # 0x140032010
   140003a35:	mov    rcx,rdi
   140003a38:	mov    sil,al
   140003a3b:	call   QWORD PTR [rip+0x2e5bf]        # 0x140032000
   140003a41:	test   BYTE PTR [rbx+0x1a],0x2
   140003a45:	je     0x140003a52
   140003a47:	mov    rcx,QWORD PTR [rbx+0x10]
   140003a4b:	test   rcx,rcx
   140003a4e:	cmovne rbx,rcx
   140003a52:	mov    QWORD PTR [rbx+0x10],rdi
   140003a56:	mov    BYTE PTR [rbx+0x19],sil
   140003a5a:	mov    DWORD PTR [rbx+0x1c],eax
   140003a5d:	xor    eax,eax
   140003a5f:	mov    rbx,QWORD PTR [rsp+0x30]
   140003a64:	mov    rsi,QWORD PTR [rsp+0x38]
   140003a69:	add    rsp,0x20
   140003a6d:	pop    rdi
   140003a6e:	ret    
   140003a6f:	int3   
   140003a70:	int3   
   140003a71:	int3   
   140003a72:	int3   
   140003a73:	int3   
   140003a74:	int3   
   140003a75:	int3   
   140003a76:	int3   
   140003a77:	int3   
   140003a78:	int3   
   140003a79:	int3   
   140003a7a:	int3   
   140003a7b:	int3   
   140003a7c:	int3   
   140003a7d:	int3   
   140003a7e:	int3   
   140003a7f:	int3   
   140003a80:	mov    QWORD PTR [rsp+0x8],rbx
   140003a85:	mov    QWORD PTR [rsp+0x10],rbp
   140003a8a:	mov    QWORD PTR [rsp+0x18],rsi
   140003a8f:	push   rdi
   140003a90:	sub    rsp,0x20
   140003a94:	mov    rsi,QWORD PTR [rcx+0x48]
   140003a98:	mov    ebp,edx
   140003a9a:	mov    rdi,rcx
   140003a9d:	test   rsi,rsi
   140003aa0:	je     0x140003ab7
   140003aa2:	mov    rax,QWORD PTR [rsi]
   140003aa5:	mov    rbx,QWORD PTR [rax+0x8]
   140003aa9:	mov    rcx,rbx
   140003aac:	call   QWORD PTR [rip+0x2ebf6]        # 0x1400326a8
   140003ab2:	mov    rcx,rsi
   140003ab5:	call   rbx
   140003ab7:	lea    rax,[rip+0x30b6a]        # 0x140034628
   140003abe:	mov    QWORD PTR [rdi],rax
   140003ac1:	test   bpl,0x1
   140003ac5:	je     0x140003ad0
   140003ac7:	mov    rcx,rdi
   140003aca:	call   QWORD PTR [rip+0x2eaf8]        # 0x1400325c8
   140003ad0:	mov    rbx,QWORD PTR [rsp+0x30]
   140003ad5:	mov    rax,rdi
   140003ad8:	mov    rbp,QWORD PTR [rsp+0x38]
   140003add:	mov    rsi,QWORD PTR [rsp+0x40]
   140003ae2:	add    rsp,0x20
   140003ae6:	pop    rdi
   140003ae7:	ret    
   140003ae8:	int3   
   140003ae9:	int3   
   140003aea:	int3   
   140003aeb:	int3   
   140003aec:	int3   
   140003aed:	int3   
   140003aee:	int3   
   140003aef:	int3   
   140003af0:	mov    rax,rsp
   140003af3:	mov    QWORD PTR [rax+0x8],rbx
   140003af7:	mov    QWORD PTR [rax+0x18],rbp
   140003afb:	mov    QWORD PTR [rax+0x20],rsi
   140003aff:	mov    QWORD PTR [rax+0x10],rdx
   140003b03:	push   rdi
   140003b04:	push   r12
   140003b06:	push   r13
   140003b08:	push   r14
   140003b0a:	push   r15
   140003b0c:	sub    rsp,0x70
   140003b10:	xor    r9d,r9d
   140003b13:	xor    r8d,r8d
   140003b16:	xor    ecx,ecx
   140003b18:	lea    r14d,[r9+0x1]
   140003b1c:	mov    edx,r14d
   140003b1f:	call   QWORD PTR [rip+0x2e76b]        # 0x140032290
   140003b25:	xor    r13d,r13d
   140003b28:	mov    sil,r13b
   140003b2b:	lea    rax,[rip+0x3076e]        # 0x1400342a0
   140003b32:	mov    QWORD PTR [rip+0x4c527],r13        # 0x140050060
   140003b39:	lea    rbx,[rip+0x4c510]        # 0x140050050
   140003b40:	mov    QWORD PTR [rip+0x4c531],rax        # 0x140050078
   140003b47:	mov    QWORD PTR [rip+0x4752a],rbx        # 0x14004b078
   140003b4e:	lea    rdi,[rip+0x4c523]        # 0x140050078
   140003b55:	mov    QWORD PTR [rip+0x4c4f4],r13        # 0x140050050
   140003b5c:	mov    QWORD PTR [rip+0x4c505],r14        # 0x140050068
   140003b63:	mov    r8,QWORD PTR [rdi]
   140003b66:	lea    rax,[rbx+0x8]
   140003b6a:	mov    QWORD PTR [rsp+0x38],rax
   140003b6f:	lea    rcx,[rip+0xfffffffffffffe7a]        # 0x1400039f0
   140003b76:	mov    QWORD PTR [rsp+0x30],r13
   140003b7b:	lea    rax,[rsp+0x40]
   140003b80:	mov    QWORD PTR [rsp+0x40],r8
   140003b85:	lea    rdi,[rdi+0x8]
   140003b89:	mov    QWORD PTR [rsp+0x48],r13
   140003b8e:	mov    r9d,r14d
   140003b91:	mov    QWORD PTR [rsp+0x28],r13
   140003b96:	mov    rdx,rbx
   140003b99:	mov    QWORD PTR [rsp+0x20],rax
   140003b9e:	mov    QWORD PTR [rbx+0x20],r8
   140003ba2:	call   QWORD PTR [rip+0x2e470]        # 0x140032018
   140003ba8:	mov    rbx,QWORD PTR [rbx]
   140003bab:	test   rbx,rbx
   140003bae:	jne    0x140003b63
   140003bb0:	xor    ecx,ecx
   140003bb2:	call   QWORD PTR [rip+0x2e6f8]        # 0x1400322b0
   140003bb8:	mov    rbx,rax
   140003bbb:	test   rax,rax
   140003bbe:	jne    0x140003bcb
   140003bc0:	xor    ecx,ecx
   140003bc2:	call   0x14002a520
   140003bc7:	mov    ebp,eax
   140003bc9:	jmp    0x140003bce
   140003bcb:	mov    ebp,r13d
   140003bce:	lea    r15,[rip+0x474a3]        # 0x14004b078
   140003bd5:	lea    r12,[rip+0x31c7c]        # 0x140035858
   140003bdc:	test   ebp,ebp
   140003bde:	jns    0x140003c09
   140003be0:	mov    r14,QWORD PTR [rip+0x47491]        # 0x14004b078
   140003be7:	cmp    r14,r15
   140003bea:	je     0x140003c67
   140003bec:	test   BYTE PTR [r14+0x1c],0x1
   140003bf1:	je     0x140003c67
   140003bf3:	mov    rcx,QWORD PTR [r14+0x10]
   140003bf7:	mov    edx,0xa
   140003bfc:	mov    r9d,ebp
   140003bff:	mov    r8,r12
   140003c02:	call   0x140001f70
   140003c07:	jmp    0x140003c60
   140003c09:	mov    rcx,rbx
   140003c0c:	call   0x140024d8c
   140003c11:	test   eax,eax
   140003c13:	jne    0x140003c5a
   140003c15:	mov    r14,QWORD PTR [rip+0x4745c]        # 0x14004b078
   140003c1c:	lea    r15,[rip+0x47455]        # 0x14004b078
   140003c23:	lea    r12,[rip+0x31c2e]        # 0x140035858
   140003c2a:	mov    ebp,0x80004005
   140003c2f:	cmp    r14,r15
   140003c32:	je     0x140003e3d
   140003c38:	test   BYTE PTR [r14+0x1c],0x1
   140003c3d:	je     0x140003c6b
   140003c3f:	mov    rcx,QWORD PTR [r14+0x10]
   140003c43:	lea    edx,[rax+0xb]
   140003c46:	mov    r9d,ebp
   140003c49:	mov    r8,r12
   140003c4c:	call   0x140001f70
   140003c51:	mov    r14,QWORD PTR [rip+0x47420]        # 0x14004b078
   140003c58:	jmp    0x140003c6b
   140003c5a:	mov    sil,r14b
   140003c5d:	mov    ebp,r13d
   140003c60:	mov    r14,QWORD PTR [rip+0x47411]        # 0x14004b078
   140003c67:	test   ebp,ebp
   140003c69:	jns    0x140003c98
   140003c6b:	cmp    r14,r15
   140003c6e:	je     0x140003e3d
   140003c74:	test   BYTE PTR [r14+0x1c],0x1
   140003c79:	je     0x140003e3d
   140003c7f:	mov    rcx,QWORD PTR [r14+0x10]
   140003c83:	mov    edx,0xd
   140003c88:	mov    r9d,ebp
   140003c8b:	mov    r8,r12
   140003c8e:	call   0x140001f70
   140003c93:	jmp    0x140003e36
   140003c98:	lea    rcx,[rsp+0xa8]
   140003ca0:	mov    QWORD PTR [rsp+0xa8],r13
   140003ca8:	call   0x14002ae7c
   140003cad:	mov    ebp,eax
   140003caf:	test   eax,eax
   140003cb1:	jns    0x140003ce7
   140003cb3:	mov    r14,QWORD PTR [rip+0x473be]        # 0x14004b078
   140003cba:	cmp    r14,r15
   140003cbd:	je     0x140003e26
   140003cc3:	test   BYTE PTR [r14+0x1c],0x1
   140003cc8:	je     0x140003e26
   140003cce:	mov    rcx,QWORD PTR [r14+0x10]
   140003cd2:	mov    edx,0xe
   140003cd7:	mov    r9d,eax
   140003cda:	mov    r8,r12
   140003cdd:	call   0x140001f70
   140003ce2:	jmp    0x140003e1f
   140003ce7:	mov    rdi,r13
   140003cea:	call   QWORD PTR [rip+0x2e760]        # 0x140032450
   140003cf0:	mov    rbx,QWORD PTR [rax+0x58]
   140003cf4:	mov    rcx,rbx
   140003cf7:	call   QWORD PTR [rip+0x2e9ab]        # 0x1400326a8
   140003cfd:	call   rbx
   140003cff:	mov    ebp,eax
   140003d01:	mov    r14d,0x12345678
   140003d07:	test   eax,eax
   140003d09:	js     0x140003d11
   140003d0b:	mov    edi,r14d
   140003d0e:	mov    ebp,r13d
   140003d11:	test   ebp,ebp
   140003d13:	jns    0x140003d49
   140003d15:	mov    r14,QWORD PTR [rip+0x4735c]        # 0x14004b078
   140003d1c:	cmp    r14,r15
   140003d1f:	je     0x140003e05
   140003d25:	test   BYTE PTR [r14+0x1c],0x1
   140003d2a:	je     0x140003e05
   140003d30:	mov    rcx,QWORD PTR [r14+0x10]
   140003d34:	mov    edx,0xf
   140003d39:	mov    r9d,ebp
   140003d3c:	mov    r8,r12
   140003d3f:	call   0x140001f70
   140003d44:	jmp    0x140003dfe
   140003d49:	mov    rbx,r13
   140003d4c:	call   0x140025df8
   140003d51:	test   al,al
   140003d53:	jne    0x140003d94
   140003d55:	call   QWORD PTR [rip+0x2e725]        # 0x140032480
   140003d5b:	mov    ebp,eax
   140003d5d:	test   eax,eax
   140003d5f:	js     0x140003d67
   140003d61:	mov    rbx,r14
   140003d64:	mov    ebp,r13d
   140003d67:	test   ebp,ebp
   140003d69:	jns    0x140003d94
   140003d6b:	mov    r14,QWORD PTR [rip+0x47306]        # 0x14004b078
   140003d72:	cmp    r14,r15
   140003d75:	je     0x140003df3
   140003d77:	test   BYTE PTR [r14+0x1c],0x1
   140003d7c:	je     0x140003df3
   140003d7e:	mov    edx,0x10
   140003d83:	mov    r9d,ebp
   140003d86:	mov    rcx,QWORD PTR [r14+0x10]
   140003d8a:	mov    r8,r12
   140003d8d:	call   0x140001f70
   140003d92:	jmp    0x140003dec
   140003d94:	lea    rax,[rip+0x3179d]        # 0x140035538
   140003d9b:	mov    QWORD PTR [rsp+0x60],r13
   140003da0:	mov    QWORD PTR [rsp+0x50],rax
   140003da5:	lea    rcx,[rsp+0x50]
   140003daa:	lea    rax,[rip+0x11f]        # 0x140003ed0
   140003db1:	mov    QWORD PTR [rsp+0x68],r13
   140003db6:	mov    QWORD PTR [rsp+0x58],rax
   140003dbb:	call   QWORD PTR [rip+0x2e2af]        # 0x140032070
   140003dc1:	test   eax,eax
   140003dc3:	jne    0x140003de9
   140003dc5:	call   0x14002b128
   140003dca:	mov    ebp,eax
   140003dcc:	mov    r14,QWORD PTR [rip+0x472a5]        # 0x14004b078
   140003dd3:	cmp    r14,r15
   140003dd6:	je     0x140003df3
   140003dd8:	test   BYTE PTR [r14+0x1c],0x1
   140003ddd:	je     0x140003df3
   140003ddf:	mov    edx,0x11
   140003de4:	mov    r9d,eax
   140003de7:	jmp    0x140003d86
   140003de9:	mov    ebp,r13d
   140003dec:	mov    r14,QWORD PTR [rip+0x47285]        # 0x14004b078
   140003df3:	test   rbx,rbx
   140003df6:	je     0x140003e05
   140003df8:	call   QWORD PTR [rip+0x2e65a]        # 0x140032458
   140003dfe:	mov    r14,QWORD PTR [rip+0x47273]        # 0x14004b078
   140003e05:	test   rdi,rdi
   140003e08:	je     0x140003e26
   140003e0a:	call   QWORD PTR [rip+0x2e640]        # 0x140032450
   140003e10:	mov    rbx,QWORD PTR [rax+0x60]
   140003e14:	mov    rcx,rbx
   140003e17:	call   QWORD PTR [rip+0x2e88b]        # 0x1400326a8
   140003e1d:	call   rbx
   140003e1f:	mov    r14,QWORD PTR [rip+0x47252]        # 0x14004b078
   140003e26:	cmp    QWORD PTR [rsp+0xa8],r13
   140003e2e:	je     0x140003e3d
   140003e30:	call   QWORD PTR [rip+0x2e852]        # 0x140032688
   140003e36:	mov    r14,QWORD PTR [rip+0x4723b]        # 0x14004b078
   140003e3d:	test   sil,sil
   140003e40:	je     0x140003e4e
   140003e42:	call   0x140024f50
   140003e47:	mov    r14,QWORD PTR [rip+0x4722a]        # 0x14004b078
   140003e4e:	cmp    r14,r15
   140003e51:	je     0x140003e77
   140003e53:	jmp    0x140003e6b
   140003e55:	mov    rcx,QWORD PTR [r14+0x8]
   140003e59:	test   rcx,rcx
   140003e5c:	je     0x140003e68
   140003e5e:	call   QWORD PTR [rip+0x2e1cc]        # 0x140032030
   140003e64:	mov    QWORD PTR [r14+0x8],r13
   140003e68:	mov    r14,QWORD PTR [r14]
   140003e6b:	test   r14,r14
   140003e6e:	jne    0x140003e55
   140003e70:	mov    QWORD PTR [rip+0x47201],r15        # 0x14004b078
   140003e77:	lea    r11,[rsp+0x70]
   140003e7c:	mov    eax,ebp
   140003e7e:	mov    rbx,QWORD PTR [r11+0x30]
   140003e82:	mov    rbp,QWORD PTR [r11+0x40]
   140003e86:	mov    rsi,QWORD PTR [r11+0x48]
   140003e8a:	mov    rsp,r11
   140003e8d:	pop    r15
   140003e8f:	pop    r14
   140003e91:	pop    r13
   140003e93:	pop    r12
   140003e95:	pop    rdi
   140003e96:	ret    
   140003e97:	int3   
   140003e98:	int3   
   140003e99:	int3   
   140003e9a:	int3   
   140003e9b:	int3   
   140003e9c:	int3   
   140003e9d:	int3   
   140003e9e:	int3   
   140003e9f:	int3   
   140003ea0:	sub    rsp,0x28
   140003ea4:	mov    edx,ecx
   140003ea6:	call   0x1400254fc
   140003eab:	test   eax,eax
   140003ead:	jne    0x140003eba
   140003eaf:	add    rsp,0x28
   140003eb3:	rex.W jmp QWORD PTR [rip+0x2e3ce]        # 0x140032288
   140003eba:	xor    eax,eax
   140003ebc:	add    rsp,0x28
   140003ec0:	ret    
   140003ec1:	int3   
   140003ec2:	int3   
   140003ec3:	int3   
   140003ec4:	int3   
   140003ec5:	int3   
   140003ec6:	int3   
   140003ec7:	int3   
   140003ec8:	int3   
   140003ec9:	int3   
   140003eca:	int3   
   140003ecb:	int3   
   140003ecc:	int3   
   140003ecd:	int3   
   140003ece:	int3   
   140003ecf:	int3   
   140003ed0:	rex push rbx
   140003ed2:	sub    rsp,0x50
   140003ed6:	mov    rax,rdx
   140003ed9:	test   rdx,rdx
   140003edc:	je     0x140003f21
   140003ede:	cmp    ecx,0x2
   140003ee1:	jne    0x140003f21
   140003ee3:	mov    rcx,QWORD PTR [rax+0x8]
   140003ee7:	lea    rdx,[rip+0x315d2]        # 0x1400354c0
   140003eee:	call   0x14002e882
   140003ef3:	test   eax,eax
   140003ef5:	jne    0x140003f21
   140003ef7:	mov    DWORD PTR [rip+0x4c13f],0x1        # 0x140050040
   140003f01:	mov    rcx,QWORD PTR [rip+0x47170]        # 0x14004b078
   140003f08:	lea    rax,[rip+0x47169]        # 0x14004b078
   140003f0f:	cmp    rcx,rax
   140003f12:	je     0x140003f56
   140003f14:	test   BYTE PTR [rcx+0x1c],0x4
   140003f18:	je     0x140003f56
   140003f1a:	mov    edx,0x12
   140003f1f:	jmp    0x140003f46
   140003f21:	and    DWORD PTR [rip+0x4c118],0x0        # 0x140050040
   140003f28:	mov    rcx,QWORD PTR [rip+0x47149]        # 0x14004b078
   140003f2f:	lea    rax,[rip+0x47142]        # 0x14004b078
   140003f36:	cmp    rcx,rax
   140003f39:	je     0x140003f56
   140003f3b:	test   BYTE PTR [rcx+0x1c],0x4
   140003f3f:	je     0x140003f56
   140003f41:	mov    edx,0x13
   140003f46:	mov    rcx,QWORD PTR [rcx+0x10]
   140003f4a:	lea    r8,[rip+0x31907]        # 0x140035858
   140003f51:	call   0x140001f08
   140003f56:	and    DWORD PTR [rsp+0x68],0x0
   140003f5b:	call   QWORD PTR [rip+0x2e4ef]        # 0x140032450
   140003f61:	mov    rbx,QWORD PTR [rax+0x30]
   140003f65:	mov    rcx,rbx
   140003f68:	call   QWORD PTR [rip+0x2e73a]        # 0x1400326a8
   140003f6e:	lea    rcx,[rsp+0x68]
   140003f73:	call   rbx
   140003f75:	test   eax,eax
   140003f77:	jns    0x140003fdd
   140003f79:	test   BYTE PTR [rip+0x4a70c],0x1        # 0x14004e68c
   140003f80:	je     0x140003fd4
   140003f82:	and    QWORD PTR [rsp+0x40],0x0
   140003f88:	lea    r8,[rip+0x38fe1]        # 0x14003cf70
   140003f8f:	mov    ecx,0xa
   140003f94:	mov    DWORD PTR [rsp+0x70],eax
   140003f98:	mov    QWORD PTR [rsp+0x38],0x4
   140003fa1:	lea    rax,[rsp+0x70]
   140003fa6:	mov    QWORD PTR [rsp+0x30],rax
   140003fab:	lea    rax,[rip+0x34e0a]        # 0x140038dbc
   140003fb2:	movzx  r9d,cx
   140003fb6:	lea    edx,[rcx+0x21]
   140003fb9:	mov    QWORD PTR [rsp+0x28],0x4
   140003fc2:	mov    rcx,QWORD PTR [rip+0x4a6b7]        # 0x14004e680
   140003fc9:	mov    QWORD PTR [rsp+0x20],rax
   140003fce:	call   QWORD PTR [rip+0x2e04c]        # 0x140032020
   140003fd4:	lea    rdx,[rip+0x38e85]        # 0x14003ce60
   140003fdb:	jmp    0x140003ff8
   140003fdd:	mov    eax,DWORD PTR [rsp+0x68]
   140003fe1:	lea    rdx,[rip+0x38e78]        # 0x14003ce60
   140003fe8:	dec    eax
   140003fea:	lea    rcx,[rip+0x38e7f]        # 0x14003ce70
   140003ff1:	cmp    eax,0x1
   140003ff4:	cmovbe rdx,rcx
   140003ff8:	call   0x140025abc
   140003ffd:	add    rsp,0x50
   140004001:	pop    rbx
   140004002:	ret    
   140004003:	int3   
   140004004:	int3   
   140004005:	int3   
   140004006:	int3   
   140004007:	int3   
   140004008:	int3   
   140004009:	int3   
   14000400a:	int3   
   14000400b:	int3   
   14000400c:	int3   
   14000400d:	int3   
   14000400e:	int3   
   14000400f:	int3   
   140004010:	mov    rax,rsp
   140004013:	push   r14
   140004015:	sub    rsp,0x190
   14000401c:	mov    QWORD PTR [rsp+0x58],0xfffffffffffffffe
   140004025:	mov    QWORD PTR [rax+0x10],rbx
   140004029:	mov    QWORD PTR [rax+0x18],rsi
   14000402d:	mov    QWORD PTR [rax+0x20],rdi
   140004031:	mov    rax,QWORD PTR [rip+0x46fe8]        # 0x14004b020
   140004038:	xor    rax,rsp
   14000403b:	mov    QWORD PTR [rsp+0x180],rax
   140004043:	mov    rsi,rcx
   140004046:	cmp    DWORD PTR [rip+0x4bff3],0x0        # 0x140050040
   14000404d:	jne    0x1400040e2
   140004053:	call   0x140027f78
   140004058:	mov    r9d,eax
   14000405b:	mov    edi,0x1
   140004060:	cmp    eax,edi
   140004062:	jne    0x1400040a3
   140004064:	lea    rax,[rip+0x4700d]        # 0x14004b078
   14000406b:	mov    rcx,QWORD PTR [rip+0x47006]        # 0x14004b078
   140004072:	cmp    rcx,rax
   140004075:	je     0x140004090
   140004077:	test   BYTE PTR [rcx+0x1c],dil
   14000407b:	je     0x140004090
   14000407d:	lea    edx,[rdi+0x13]
   140004080:	lea    r8,[rip+0x317d1]        # 0x140035858
   140004087:	mov    rcx,QWORD PTR [rcx+0x10]
   14000408b:	call   0x140001f08
   140004090:	mov    DWORD PTR [rsi+0x24],0x42a
   140004097:	mov    DWORD PTR [rsi+0x28],0x42c
   14000409e:	jmp    0x140004303
   1400040a3:	test   eax,eax
   1400040a5:	jns    0x1400040e7
   1400040a7:	lea    rax,[rip+0x46fca]        # 0x14004b078
   1400040ae:	mov    rcx,QWORD PTR [rip+0x46fc3]        # 0x14004b078
   1400040b5:	cmp    rcx,rax
   1400040b8:	je     0x140004303
   1400040be:	test   BYTE PTR [rcx+0x1c],dil
   1400040c2:	je     0x140004303
   1400040c8:	mov    edx,0x15
   1400040cd:	lea    r8,[rip+0x31784]        # 0x140035858
   1400040d4:	mov    rcx,QWORD PTR [rcx+0x10]
   1400040d8:	call   0x140001f70
   1400040dd:	jmp    0x140004303
   1400040e2:	mov    edi,0x1
   1400040e7:	cmp    QWORD PTR [rip+0x4bed9],0x0        # 0x14004ffc8
   1400040ef:	jne    0x140004277
   1400040f5:	xor    r14d,r14d
   1400040f8:	cmp    BYTE PTR [rip+0x4be85],r14b        # 0x14004ff84
   1400040ff:	jne    0x1400041ef
   140004105:	mov    DWORD PTR [rsp+0x60],0x114
   14000410d:	lea    rcx,[rsp+0x60]
   140004112:	call   QWORD PTR [rip+0x2e190]        # 0x1400322a8
   140004118:	test   eax,eax
   14000411a:	je     0x140004144
   14000411c:	mov    ecx,DWORD PTR [rsp+0x64]
   140004120:	cmp    ecx,0x6
   140004123:	setb   al
   140004126:	mov    BYTE PTR [rip+0x4be64],al        # 0x14004ff90
   14000412c:	cmp    ecx,0x6
   14000412f:	ja     0x140004139
   140004131:	jne    0x14000413c
   140004133:	cmp    DWORD PTR [rsp+0x68],edi
   140004137:	jbe    0x14000413c
   140004139:	mov    r14d,edi
   14000413c:	test   al,al
   14000413e:	jne    0x1400041e6
   140004144:	lea    rcx,[rip+0x2fdcd]        # 0x140033f18
   14000414b:	call   QWORD PTR [rip+0x2e15f]        # 0x1400322b0
   140004151:	mov    rbx,rax
   140004154:	test   rax,rax
   140004157:	jne    0x140004173
   140004159:	test   r14d,r14d
   14000415c:	je     0x1400041b9
   14000415e:	lea    rcx,[rip+0x2ff7b]        # 0x1400340e0
   140004165:	call   QWORD PTR [rip+0x2e145]        # 0x1400322b0
   14000416b:	mov    rbx,rax
   14000416e:	test   rax,rax
   140004171:	je     0x1400041b9
   140004173:	lea    rdx,[rip+0x2ffb6]        # 0x140034130
   14000417a:	mov    rcx,rbx
   14000417d:	call   QWORD PTR [rip+0x2e11d]        # 0x1400322a0
   140004183:	mov    QWORD PTR [rip+0x4bdfe],rax        # 0x14004ff88
   14000418a:	test   rax,rax
   14000418d:	je     0x1400041b9
   14000418f:	lea    rdx,[rip+0x2ffaa]        # 0x140034140
   140004196:	mov    rcx,rbx
   140004199:	call   QWORD PTR [rip+0x2e101]        # 0x1400322a0
   14000419f:	mov    QWORD PTR [rip+0x46eda],rax        # 0x14004b080
   1400041a6:	test   rax,rax
   1400041a9:	jne    0x1400041c4
   1400041ab:	lea    rax,[rip+0xffffffffffffd70e]        # 0x1400018c0
   1400041b2:	mov    QWORD PTR [rip+0x46ec7],rax        # 0x14004b080
   1400041b9:	mov    al,dil
   1400041bc:	mov    BYTE PTR [rip+0x4bdce],al        # 0x14004ff90
   1400041c2:	jmp    0x1400041e6
   1400041c4:	lea    rdx,[rip+0x2ff85]        # 0x140034150
   1400041cb:	mov    rcx,rbx
   1400041ce:	call   QWORD PTR [rip+0x2e0cc]        # 0x1400322a0
   1400041d4:	mov    QWORD PTR [rip+0x4be0d],rax        # 0x14004ffe8
   1400041db:	test   rax,rax
   1400041de:	je     0x1400041ab
   1400041e0:	mov    al,BYTE PTR [rip+0x4bdaa]        # 0x14004ff90
   1400041e6:	mov    BYTE PTR [rip+0x4bd97],dil        # 0x14004ff84
   1400041ed:	jmp    0x1400041f5
   1400041ef:	mov    al,BYTE PTR [rip+0x4bd9b]        # 0x14004ff90
   1400041f5:	test   al,al
   1400041f7:	jne    0x140004229
   1400041f9:	mov    rbx,QWORD PTR [rip+0x46e80]        # 0x14004b080
   140004200:	mov    rcx,rbx
   140004203:	call   QWORD PTR [rip+0x2e49f]        # 0x1400326a8
   140004209:	lea    r9,[rip+0x4bdb8]        # 0x14004ffc8
   140004210:	lea    r8,[rip+0x46e19]        # 0x14004b030
   140004217:	lea    rdx,[rip+0xffffffffffffd562]        # 0x140001780
   14000421e:	lea    rcx,[rip+0x2fcb3]        # 0x140033ed8
   140004225:	call   rbx
   140004227:	jmp    0x140004277
   140004229:	lea    rdx,[rip+0x46e00]        # 0x14004b030
   140004230:	mov    QWORD PTR [rip+0x4bd91],rdx        # 0x14004ffc8
   140004237:	lea    rax,[rip+0x2fc9a]        # 0x140033ed8
   14000423e:	mov    QWORD PTR [rsp+0x40],rax
   140004243:	and    QWORD PTR [rsp+0x48],0x0
   140004249:	mov    QWORD PTR [rsp+0x38],rdx
   14000424e:	and    QWORD PTR [rsp+0x30],0x0
   140004254:	and    QWORD PTR [rsp+0x28],0x0
   14000425a:	lea    rcx,[rsp+0x40]
   14000425f:	mov    QWORD PTR [rsp+0x20],rcx
   140004264:	mov    r9d,edi
   140004267:	mov    r8,rax
   14000426a:	lea    rcx,[rip+0xffffffffffffd39f]        # 0x140001610
   140004271:	call   QWORD PTR [rip+0x2dda1]        # 0x140032018
   140004277:	test   BYTE PTR [rip+0x4bd42],dil        # 0x14004ffc0
   14000427e:	je     0x140004293
   140004280:	lea    r8,[rip+0x2fc61]        # 0x140033ee8
   140004287:	lea    rdx,[rip+0x2fc7a]        # 0x140033f08
   14000428e:	call   0x140003818
   140004293:	mov    ecx,0xe0
   140004298:	call   0x140023f10
   14000429d:	mov    QWORD PTR [rsp+0x40],rax
   1400042a2:	mov    rcx,rax
   1400042a5:	call   0x140004460
   1400042aa:	mov    rdi,rax
   1400042ad:	test   rax,rax
   1400042b0:	je     0x1400042c6
   1400042b2:	mov    rcx,QWORD PTR [rax]
   1400042b5:	mov    rbx,QWORD PTR [rcx]
   1400042b8:	mov    rcx,rbx
   1400042bb:	call   QWORD PTR [rip+0x2e3e7]        # 0x1400326a8
   1400042c1:	mov    rcx,rdi
   1400042c4:	call   rbx
   1400042c6:	mov    r14,QWORD PTR [rsi+0x48]
   1400042ca:	mov    QWORD PTR [rsi+0x48],rdi
   1400042ce:	test   r14,r14
   1400042d1:	je     0x1400042e8
   1400042d3:	mov    rax,QWORD PTR [r14]
   1400042d6:	mov    rbx,QWORD PTR [rax+0x8]
   1400042da:	mov    rcx,rbx
   1400042dd:	call   QWORD PTR [rip+0x2e3c5]        # 0x1400326a8
   1400042e3:	mov    rcx,r14
   1400042e6:	call   rbx
   1400042e8:	cmp    DWORD PTR [rip+0x4bd51],0x0        # 0x140050040
   1400042ef:	setne  dl
   1400042f2:	mov    rcx,QWORD PTR [rsi+0x48]
   1400042f6:	call   0x140002558
   1400042fb:	nop
   1400042fc:	mov    eax,0x1
   140004301:	jmp    0x140004305
   140004303:	xor    eax,eax
   140004305:	mov    rcx,QWORD PTR [rsp+0x180]
   14000430d:	xor    rcx,rsp
   140004310:	call   0x14002dd00
   140004315:	lea    r11,[rsp+0x190]
   14000431d:	mov    rbx,QWORD PTR [r11+0x18]
   140004321:	mov    rsi,QWORD PTR [r11+0x20]
   140004325:	mov    rdi,QWORD PTR [r11+0x28]
   140004329:	mov    rsp,r11
   14000432c:	pop    r14
   14000432e:	ret    
   14000432f:	int3   
   140004330:	int3   
   140004331:	int3   
   140004332:	int3   
   140004333:	int3   
   140004334:	int3   
   140004335:	int3   
   140004336:	int3   
   140004337:	int3   
   140004338:	int3   
   140004339:	int3   
   14000433a:	int3   
   14000433b:	int3   
   14000433c:	int3   
   14000433d:	int3   
   14000433e:	int3   
   14000433f:	int3   
   140004340:	rex push rdi
   140004342:	sub    rsp,0x30
   140004346:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000434f:	mov    QWORD PTR [rsp+0x40],rbx
   140004354:	mov    QWORD PTR [rsp+0x48],rsi
   140004359:	mov    rcx,QWORD PTR [rcx+0x48]
   14000435d:	xor    esi,esi
   14000435f:	test   rcx,rcx
   140004362:	je     0x140004405
   140004368:	call   0x1400029a0
   14000436d:	test   BYTE PTR [rip+0x4bc4c],0x1        # 0x14004ffc0
   140004374:	je     0x140004389
   140004376:	lea    r8,[rip+0x2fb6b]        # 0x140033ee8
   14000437d:	lea    rdx,[rip+0x2fb0c]        # 0x140033e90
   140004384:	call   0x140003818
   140004389:	cmp    BYTE PTR [rip+0x4bbf4],sil        # 0x14004ff84
   140004390:	je     0x140004405
   140004392:	mov    rdi,QWORD PTR [rip+0x4bc2f]        # 0x14004ffc8
   140004399:	test   rdi,rdi
   14000439c:	je     0x140004405
   14000439e:	cmp    BYTE PTR [rip+0x4bbeb],sil        # 0x14004ff90
   1400043a5:	jne    0x1400043be
   1400043a7:	mov    rbx,QWORD PTR [rip+0x4bc3a]        # 0x14004ffe8
   1400043ae:	mov    rcx,rbx
   1400043b1:	call   QWORD PTR [rip+0x2e2f1]        # 0x1400326a8
   1400043b7:	mov    rcx,rdi
   1400043ba:	call   rbx
   1400043bc:	jmp    0x1400043fe
   1400043be:	mov    rcx,QWORD PTR [rdi]
   1400043c1:	call   QWORD PTR [rip+0x2dc69]        # 0x140032030
   1400043c7:	mov    DWORD PTR [rdi+0x20],esi
   1400043ca:	mov    BYTE PTR [rdi+0x28],sil
   1400043ce:	mov    QWORD PTR [rdi+0x8],rsi
   1400043d2:	cmp    WORD PTR [rdi+0x2a],si
   1400043d6:	jbe    0x1400043fb
   1400043d8:	movzx  eax,WORD PTR [rdi+0x2a]
   1400043dc:	dec    eax
   1400043de:	cdq    
   1400043df:	and    edx,0x1f
   1400043e2:	add    eax,edx
   1400043e4:	sar    eax,0x5
   1400043e7:	inc    eax
   1400043e9:	movsxd r8,eax
   1400043ec:	shl    r8,0x2
   1400043f0:	xor    edx,edx
   1400043f2:	mov    rcx,QWORD PTR [rdi+0x30]
   1400043f6:	call   0x14002e2ce
   1400043fb:	mov    QWORD PTR [rdi],rsi
   1400043fe:	mov    QWORD PTR [rip+0x4bbc3],rsi        # 0x14004ffc8
   140004405:	mov    eax,0x493e0
   14000440a:	mov    rbx,QWORD PTR [rsp+0x40]
   14000440f:	mov    rsi,QWORD PTR [rsp+0x48]
   140004414:	add    rsp,0x30
   140004418:	pop    rdi
   140004419:	ret    
   14000441a:	int3   
   14000441b:	int3   
   14000441c:	int3   
   14000441d:	int3   
   14000441e:	int3   
   14000441f:	int3   
   140004420:	mov    QWORD PTR [rsp+0x8],rbx
   140004425:	push   rdi
   140004426:	sub    rsp,0x20
   14000442a:	mov    rdi,QWORD PTR [rcx+0x48]
   14000442e:	and    QWORD PTR [rcx+0x48],0x0
   140004433:	test   rdi,rdi
   140004436:	je     0x14000444d
   140004438:	mov    rax,QWORD PTR [rdi]
   14000443b:	mov    rbx,QWORD PTR [rax+0x8]
   14000443f:	mov    rcx,rbx
   140004442:	call   QWORD PTR [rip+0x2e260]        # 0x1400326a8
   140004448:	mov    rcx,rdi
   14000444b:	call   rbx
   14000444d:	mov    rbx,QWORD PTR [rsp+0x30]
   140004452:	add    rsp,0x20
   140004456:	pop    rdi
   140004457:	ret    
   140004458:	int3   
   140004459:	int3   
   14000445a:	int3   
   14000445b:	int3   
   14000445c:	int3   
   14000445d:	int3   
   14000445e:	int3   
   14000445f:	int3   
   140004460:	mov    rax,rsp
   140004463:	mov    QWORD PTR [rax+0x8],rcx
   140004467:	push   rdi
   140004468:	sub    rsp,0x30
   14000446c:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140004474:	mov    QWORD PTR [rax+0x10],rbx
   140004478:	mov    QWORD PTR [rax+0x18],rsi
   14000447c:	mov    rdi,rcx
   14000447f:	xor    esi,esi
   140004481:	mov    DWORD PTR [rcx+0x8],esi
   140004484:	xor    edx,edx
   140004486:	lea    r8d,[rsi+0x28]
   14000448a:	add    rcx,0x10
   14000448e:	call   0x14002e2ce
   140004493:	mov    BYTE PTR [rdi+0x38],sil
   140004497:	lea    rax,[rip+0x2ffba]        # 0x140034458
   14000449e:	mov    QWORD PTR [rdi],rax
   1400044a1:	mov    QWORD PTR [rdi+0x40],rsi
   1400044a5:	mov    QWORD PTR [rdi+0x48],rsi
   1400044a9:	lea    rcx,[rdi+0x50]
   1400044ad:	call   0x140003950
   1400044b2:	mov    DWORD PTR [rdi+0x80],esi
   1400044b8:	lea    rax,[rip+0x30861]        # 0x140034d20
   1400044bf:	mov    QWORD PTR [rdi+0x78],rax
   1400044c3:	mov    QWORD PTR [rdi+0x88],rsi
   1400044ca:	mov    BYTE PTR [rdi+0x90],sil
   1400044d1:	mov    BYTE PTR [rdi+0x91],sil
   1400044d8:	mov    DWORD PTR [rdi+0xa0],esi
   1400044de:	mov    QWORD PTR [rdi+0x98],rax
   1400044e5:	mov    QWORD PTR [rdi+0xa8],rsi
   1400044ec:	mov    BYTE PTR [rdi+0xb0],sil
   1400044f3:	mov    BYTE PTR [rdi+0xb1],sil
   1400044fa:	mov    QWORD PTR [rdi+0xb8],rsi
   140004501:	mov    QWORD PTR [rdi+0xc0],rsi
   140004508:	mov    QWORD PTR [rdi+0xc8],rsi
   14000450f:	mov    QWORD PTR [rdi+0xd0],rsi
   140004516:	mov    DWORD PTR [rdi+0xd8],esi
   14000451c:	mov    WORD PTR [rdi+0xdc],si
   140004523:	lea    rax,[rip+0x2ff96]        # 0x1400344c0
   14000452a:	mov    QWORD PTR [rdi],rax
   14000452d:	mov    rax,QWORD PTR [rip+0x4baa4]        # 0x14004ffd8
   140004534:	lock inc DWORD PTR [rax+0xc]
   140004538:	mov    rax,rdi
   14000453b:	mov    rbx,QWORD PTR [rsp+0x48]
   140004540:	mov    rsi,QWORD PTR [rsp+0x50]
   140004545:	add    rsp,0x30
   140004549:	pop    rdi
   14000454a:	ret    
   14000454b:	int3   
   14000454c:	int3   
   14000454d:	int3   
   14000454e:	int3   
   14000454f:	int3   
   140004550:	int3   
   140004551:	int3   
   140004552:	int3   
   140004553:	int3   
   140004554:	int3   
   140004555:	int3   
   140004556:	int3   
   140004557:	int3   
   140004558:	int3   
   140004559:	int3   
   14000455a:	int3   
   14000455b:	int3   
   14000455c:	int3   
   14000455d:	int3   
   14000455e:	int3   
   14000455f:	int3   
   140004560:	mov    eax,0x1
   140004565:	lock xadd DWORD PTR [rcx+0x8],eax
   14000456a:	inc    eax
   14000456c:	ret    
   14000456d:	int3   
   14000456e:	int3   
   14000456f:	int3   
   140004570:	int3   
   140004571:	int3   
   140004572:	int3   
   140004573:	int3   
   140004574:	int3   
   140004575:	int3   
   140004576:	int3   
   140004577:	int3   
   140004578:	int3   
   140004579:	int3   
   14000457a:	int3   
   14000457b:	int3   
   14000457c:	int3   
   14000457d:	int3   
   14000457e:	int3   
   14000457f:	int3   
   140004580:	mov    QWORD PTR [rsp+0x8],rbx
   140004585:	mov    QWORD PTR [rsp+0x10],rsi
   14000458a:	push   rdi
   14000458b:	sub    rsp,0x20
   14000458f:	mov    rsi,rcx
   140004592:	or     edi,0xffffffff
   140004595:	lock xadd DWORD PTR [rcx+0x8],edi
   14000459a:	sub    edi,0x1
   14000459d:	jne    0x1400045d2
   14000459f:	mov    rax,QWORD PTR [rip+0x4ba32]        # 0x14004ffd8
   1400045a6:	lock inc DWORD PTR [rax+0xc]
   1400045aa:	test   rcx,rcx
   1400045ad:	je     0x1400045c7
   1400045af:	mov    rcx,QWORD PTR [rcx]
   1400045b2:	mov    rbx,QWORD PTR [rcx+0x38]
   1400045b6:	mov    rcx,rbx
   1400045b9:	call   QWORD PTR [rip+0x2e0e9]        # 0x1400326a8
   1400045bf:	lea    edx,[rdi+0x1]
   1400045c2:	mov    rcx,rsi
   1400045c5:	call   rbx
   1400045c7:	mov    rcx,QWORD PTR [rip+0x4ba0a]        # 0x14004ffd8
   1400045ce:	lock dec DWORD PTR [rcx+0xc]
   1400045d2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400045d7:	mov    eax,edi
   1400045d9:	mov    rsi,QWORD PTR [rsp+0x38]
   1400045de:	add    rsp,0x20
   1400045e2:	pop    rdi
   1400045e3:	ret    
   1400045e4:	int3   
   1400045e5:	int3   
   1400045e6:	int3   
   1400045e7:	int3   
   1400045e8:	int3   
   1400045e9:	int3   
   1400045ea:	int3   
   1400045eb:	int3   
   1400045ec:	int3   
   1400045ed:	int3   
   1400045ee:	int3   
   1400045ef:	int3   
   1400045f0:	mov    r9,r8
   1400045f3:	mov    r8,rdx
   1400045f6:	lea    rdx,[rip+0x30f13]        # 0x140035510
   1400045fd:	jmp    0x140004664
   140004602:	int3   
   140004603:	int3   
   140004604:	int3   
   140004605:	int3   
   140004606:	int3   
   140004607:	int3   
   140004608:	int3   
   140004609:	int3   
   14000460a:	int3   
   14000460b:	int3   
   14000460c:	int3   
   14000460d:	int3   
   14000460e:	int3   
   14000460f:	int3   
   140004610:	mov    QWORD PTR [rsp+0x8],rbx
   140004615:	push   rdi
   140004616:	sub    rsp,0x20
   14000461a:	lea    rax,[rip+0x2fe9f]        # 0x1400344c0
   140004621:	mov    DWORD PTR [rcx+0x8],0xc0000001
   140004628:	mov    QWORD PTR [rcx],rax
   14000462b:	mov    ebx,edx
   14000462d:	mov    rax,QWORD PTR [rip+0x4b9a4]        # 0x14004ffd8
   140004634:	mov    rdi,rcx
   140004637:	lock dec DWORD PTR [rax+0xc]
   14000463b:	call   0x140002418
   140004640:	test   bl,0x1
   140004643:	je     0x14000464e
   140004645:	mov    rcx,rdi
   140004648:	call   QWORD PTR [rip+0x2df7a]        # 0x1400325c8
   14000464e:	mov    rax,rdi
   140004651:	mov    rbx,QWORD PTR [rsp+0x30]
   140004656:	add    rsp,0x20
   14000465a:	pop    rdi
   14000465b:	ret    
   14000465c:	int3   
   14000465d:	int3   
   14000465e:	int3   
   14000465f:	int3   
   140004660:	int3   
   140004661:	int3   
   140004662:	int3   
   140004663:	int3   
   140004664:	mov    rax,rsp
   140004667:	mov    QWORD PTR [rax+0x8],rbx
   14000466b:	mov    QWORD PTR [rax+0x10],rbp
   14000466f:	mov    QWORD PTR [rax+0x18],rsi
   140004673:	mov    QWORD PTR [rax+0x20],rdi
   140004677:	push   r12
   140004679:	push   r14
   14000467b:	push   r15
   14000467d:	sub    rsp,0x20
   140004681:	xor    esi,esi
   140004683:	mov    r14,r9
   140004686:	mov    rdi,r8
   140004689:	mov    rbx,rdx
   14000468c:	mov    r12,rcx
   14000468f:	test   rcx,rcx
   140004692:	je     0x14000477a
   140004698:	test   rdx,rdx
   14000469b:	je     0x14000477a
   1400046a1:	test   r9,r9
   1400046a4:	jne    0x1400046b0
   1400046a6:	mov    esi,0x80004003
   1400046ab:	jmp    0x14000477f
   1400046b0:	mov    QWORD PTR [r9],rsi
   1400046b3:	cmp    DWORD PTR [r8],esi
   1400046b6:	jne    0x1400046f6
   1400046b8:	cmp    DWORD PTR [r8+0x4],esi
   1400046bc:	jne    0x1400046f6
   1400046be:	cmp    DWORD PTR [r8+0x8],0xc0
   1400046c6:	jne    0x1400046f6
   1400046c8:	cmp    DWORD PTR [r8+0xc],0x46000000
   1400046d0:	jne    0x1400046f6
   1400046d2:	mov    rdi,QWORD PTR [rdx+0x8]
   1400046d6:	add    rdi,rcx
   1400046d9:	mov    rax,QWORD PTR [rdi]
   1400046dc:	mov    rbx,QWORD PTR [rax+0x8]
   1400046e0:	mov    rcx,rbx
   1400046e3:	call   QWORD PTR [rip+0x2dfbf]        # 0x1400326a8
   1400046e9:	mov    rcx,rdi
   1400046ec:	call   rbx
   1400046ee:	mov    QWORD PTR [r14],rdi
   1400046f1:	jmp    0x14000477f
   1400046f6:	cmp    QWORD PTR [rdx+0x10],rsi
   1400046fa:	je     0x140004763
   1400046fc:	mov    rcx,QWORD PTR [rbx]
   1400046ff:	mov    ebp,esi
   140004701:	test   rcx,rcx
   140004704:	sete   bpl
   140004708:	test   ebp,ebp
   14000470a:	jne    0x14000472a
   14000470c:	mov    eax,DWORD PTR [rdi]
   14000470e:	cmp    DWORD PTR [rcx],eax
   140004710:	jne    0x140004759
   140004712:	mov    eax,DWORD PTR [rdi+0x4]
   140004715:	cmp    DWORD PTR [rcx+0x4],eax
   140004718:	jne    0x140004759
   14000471a:	mov    eax,DWORD PTR [rdi+0x8]
   14000471d:	cmp    DWORD PTR [rcx+0x8],eax
   140004720:	jne    0x140004759
   140004722:	mov    eax,DWORD PTR [rdi+0xc]
   140004725:	cmp    DWORD PTR [rcx+0xc],eax
   140004728:	jne    0x140004759
   14000472a:	mov    r15,QWORD PTR [rbx+0x10]
   14000472e:	cmp    r15,0x1
   140004732:	je     0x14000476e
   140004734:	mov    rcx,r15
   140004737:	call   QWORD PTR [rip+0x2df6b]        # 0x1400326a8
   14000473d:	mov    r9,QWORD PTR [rbx+0x8]
   140004741:	mov    r8,r14
   140004744:	mov    rdx,rdi
   140004747:	mov    rcx,r12
   14000474a:	call   r15
   14000474d:	test   eax,eax
   14000474f:	je     0x14000476a
   140004751:	test   ebp,ebp
   140004753:	jne    0x140004759
   140004755:	test   eax,eax
   140004757:	js     0x14000476a
   140004759:	add    rbx,0x18
   14000475d:	cmp    QWORD PTR [rbx+0x10],rsi
   140004761:	jne    0x1400046fc
   140004763:	mov    esi,0x80004002
   140004768:	jmp    0x14000477f
   14000476a:	mov    esi,eax
   14000476c:	jmp    0x14000477f
   14000476e:	mov    rdi,QWORD PTR [rbx+0x8]
   140004772:	add    rdi,r12
   140004775:	jmp    0x1400046d9
   14000477a:	mov    esi,0x80070057
   14000477f:	mov    rbx,QWORD PTR [rsp+0x40]
   140004784:	mov    eax,esi
   140004786:	mov    rsi,QWORD PTR [rsp+0x50]
   14000478b:	mov    rbp,QWORD PTR [rsp+0x48]
   140004790:	mov    rdi,QWORD PTR [rsp+0x58]
   140004795:	add    rsp,0x20
   140004799:	pop    r15
   14000479b:	pop    r14
   14000479d:	pop    r12
   14000479f:	ret    
   1400047a0:	int3   
   1400047a1:	int3   
   1400047a2:	int3   
   1400047a3:	int3   
   1400047a4:	int3   
   1400047a5:	int3   
   1400047a6:	int3   
   1400047a7:	int3   
   1400047a8:	int3   
   1400047a9:	int3   
   1400047aa:	int3   
   1400047ab:	int3   
   1400047ac:	int3   
   1400047ad:	int3   
   1400047ae:	int3   
   1400047af:	int3   
   1400047b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400047b5:	push   rdi
   1400047b6:	sub    rsp,0x20
   1400047ba:	mov    ebx,edx
   1400047bc:	mov    rdi,rcx
   1400047bf:	call   0x1400047e8
   1400047c4:	test   bl,0x1
   1400047c7:	je     0x1400047d2
   1400047c9:	mov    rcx,rdi
   1400047cc:	call   QWORD PTR [rip+0x2ddf6]        # 0x1400325c8
   1400047d2:	mov    rax,rdi
   1400047d5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400047da:	add    rsp,0x20
   1400047de:	pop    rdi
   1400047df:	ret    
   1400047e0:	int3   
   1400047e1:	int3   
   1400047e2:	int3   
   1400047e3:	int3   
   1400047e4:	int3   
   1400047e5:	int3   
   1400047e6:	int3   
   1400047e7:	int3   
   1400047e8:	mov    QWORD PTR [rsp+0x8],rbx
   1400047ed:	mov    QWORD PTR [rsp+0x10],rsi
   1400047f2:	mov    QWORD PTR [rsp+0x18],rdi
   1400047f7:	push   r14
   1400047f9:	sub    rsp,0x20
   1400047fd:	lea    rsi,[rcx+0x8]
   140004801:	mov    rdi,rcx
   140004804:	cmp    DWORD PTR [rsi],0x0
   140004807:	lea    rax,[rip+0x2fd1a]        # 0x140034528
   14000480e:	mov    QWORD PTR [rcx],rax
   140004811:	je     0x140004884
   140004813:	cmp    QWORD PTR [rcx+0x10],0x0
   140004818:	je     0x140004859
   14000481a:	test   rsi,rsi
   14000481d:	je     0x14000489a
   14000481f:	mov    r14,QWORD PTR [rsi+0x8]
   140004823:	test   r14,r14
   140004826:	je     0x14000484f
   140004828:	mov    rbx,QWORD PTR [r14]
   14000482b:	mov    rcx,rbx
   14000482e:	call   QWORD PTR [rip+0x2de74]        # 0x1400326a8
   140004834:	mov    rcx,QWORD PTR [r14+0x8]
   140004838:	call   rbx
   14000483a:	mov    rbx,QWORD PTR [r14+0x10]
   14000483e:	mov    rcx,r14
   140004841:	call   QWORD PTR [rip+0x2dd81]        # 0x1400325c8
   140004847:	mov    r14,rbx
   14000484a:	test   rbx,rbx
   14000484d:	jne    0x140004828
   14000484f:	and    QWORD PTR [rsi+0x8],0x0
   140004854:	and    QWORD PTR [rdi+0x10],0x0
   140004859:	mov    r14,QWORD PTR [rdi+0x40]
   14000485d:	test   r14,r14
   140004860:	je     0x140004877
   140004862:	mov    rax,QWORD PTR [r14]
   140004865:	mov    rbx,QWORD PTR [rax+0x10]
   140004869:	mov    rcx,rbx
   14000486c:	call   QWORD PTR [rip+0x2de36]        # 0x1400326a8
   140004872:	mov    rcx,r14
   140004875:	call   rbx
   140004877:	lea    rcx,[rdi+0x18]
   14000487b:	call   QWORD PTR [rip+0x2d9f7]        # 0x140032278
   140004881:	and    DWORD PTR [rsi],0x0
   140004884:	mov    rbx,QWORD PTR [rsp+0x30]
   140004889:	mov    rsi,QWORD PTR [rsp+0x38]
   14000488e:	mov    rdi,QWORD PTR [rsp+0x40]
   140004893:	add    rsp,0x20
   140004897:	pop    r14
   140004899:	ret    
   14000489a:	mov    ecx,0xc0000005
   14000489f:	call   0x1400052f4
   1400048a4:	int3   
   1400048a5:	int3   
   1400048a6:	int3   
   1400048a7:	int3   
   1400048a8:	int3   
   1400048a9:	int3   
   1400048aa:	int3   
   1400048ab:	int3   
   1400048ac:	int3   
   1400048ad:	int3   
   1400048ae:	int3   
   1400048af:	int3   
   1400048b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400048b5:	push   rdi
   1400048b6:	sub    rsp,0x20
   1400048ba:	lea    rax,[rip+0x2fcd7]        # 0x140034598
   1400048c1:	mov    ebx,edx
   1400048c3:	mov    QWORD PTR [rcx],rax
   1400048c6:	mov    rdi,rcx
   1400048c9:	call   0x1400047e8
   1400048ce:	test   bl,0x1
   1400048d1:	je     0x1400048dc
   1400048d3:	mov    rcx,rdi
   1400048d6:	call   QWORD PTR [rip+0x2dcec]        # 0x1400325c8
   1400048dc:	mov    rax,rdi
   1400048df:	mov    rbx,QWORD PTR [rsp+0x30]
   1400048e4:	add    rsp,0x20
   1400048e8:	pop    rdi
   1400048e9:	ret    
   1400048ea:	int3   
   1400048eb:	int3   
   1400048ec:	int3   
   1400048ed:	int3   
   1400048ee:	int3   
   1400048ef:	int3   
   1400048f0:	mov    eax,0x1
   1400048f5:	lock xadd DWORD PTR [rcx+0xc],eax
   1400048fa:	inc    eax
   1400048fc:	ret    
   1400048fd:	int3   
   1400048fe:	int3   
   1400048ff:	int3   
   140004900:	int3   
   140004901:	int3   
   140004902:	int3   
   140004903:	int3   
   140004904:	int3   
   140004905:	int3   
   140004906:	int3   
   140004907:	int3   
   140004908:	int3   
   140004909:	int3   
   14000490a:	int3   
   14000490b:	int3   
   14000490c:	int3   
   14000490d:	int3   
   14000490e:	int3   
   14000490f:	int3   
   140004910:	or     eax,0xffffffff
   140004913:	lock xadd DWORD PTR [rcx+0xc],eax
   140004918:	dec    eax
   14000491a:	ret    
   14000491b:	int3   
   14000491c:	int3   
   14000491d:	int3   
   14000491e:	int3   
   14000491f:	int3   
   140004920:	int3   
   140004921:	int3   
   140004922:	int3   
   140004923:	int3   
   140004924:	int3   
   140004925:	int3   
   140004926:	int3   
   140004927:	int3   
   140004928:	int3   
   140004929:	int3   
   14000492a:	int3   
   14000492b:	int3   
   14000492c:	int3   
   14000492d:	int3   
   14000492e:	int3   
   14000492f:	int3   
   140004930:	mov    eax,DWORD PTR [rcx+0xc]
   140004933:	ret    
   140004934:	int3   
   140004935:	int3   
   140004936:	int3   
   140004937:	int3   
   140004938:	int3   
   140004939:	int3   
   14000493a:	int3   
   14000493b:	int3   
   14000493c:	int3   
   14000493d:	int3   
   14000493e:	int3   
   14000493f:	int3   
   140004940:	mov    QWORD PTR [rsp+0x8],rbx
   140004945:	mov    QWORD PTR [rsp+0x10],rsi
   14000494a:	push   rdi
   14000494b:	sub    rsp,0x30
   14000494f:	mov    rbx,rdx
   140004952:	test   rdx,rdx
   140004955:	jne    0x14000495e
   140004957:	mov    eax,0x80004003
   14000495c:	jmp    0x1400049ae
   14000495e:	xor    esi,esi
   140004960:	lea    rdi,[rcx+0x40]
   140004964:	cmp    QWORD PTR [rdi],rsi
   140004967:	jne    0x14000498e
   140004969:	lea    r9,[rip+0x30bb8]        # 0x140035528
   140004970:	mov    QWORD PTR [rsp+0x20],rdi
   140004975:	xor    edx,edx
   140004977:	lea    r8d,[rsi+0x1]
   14000497b:	lea    rcx,[rip+0x2f956]        # 0x1400342d8
   140004982:	call   QWORD PTR [rip+0x2dcf8]        # 0x140032680
   140004988:	mov    esi,eax
   14000498a:	test   eax,eax
   14000498c:	js     0x1400049ac
   14000498e:	mov    rcx,QWORD PTR [rdi]
   140004991:	mov    QWORD PTR [rbx],rcx
   140004994:	mov    rdi,QWORD PTR [rdi]
   140004997:	mov    rdx,QWORD PTR [rdi]
   14000499a:	mov    rbx,QWORD PTR [rdx+0x8]
   14000499e:	mov    rcx,rbx
   1400049a1:	call   QWORD PTR [rip+0x2dd01]        # 0x1400326a8
   1400049a7:	mov    rcx,rdi
   1400049aa:	call   rbx
   1400049ac:	mov    eax,esi
   1400049ae:	mov    rbx,QWORD PTR [rsp+0x40]
   1400049b3:	mov    rsi,QWORD PTR [rsp+0x48]
   1400049b8:	add    rsp,0x30
   1400049bc:	pop    rdi
   1400049bd:	ret    
   1400049be:	int3   
   1400049bf:	int3   
   1400049c0:	int3   
   1400049c1:	int3   
   1400049c2:	int3   
   1400049c3:	int3   
   1400049c4:	int3   
   1400049c5:	int3   
   1400049c6:	int3   
   1400049c7:	int3   
   1400049c8:	int3   
   1400049c9:	int3   
   1400049ca:	int3   
   1400049cb:	int3   
   1400049cc:	int3   
   1400049cd:	int3   
   1400049ce:	int3   
   1400049cf:	int3   
   1400049d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400049d5:	push   rdi
   1400049d6:	sub    rsp,0x20
   1400049da:	mov    rax,QWORD PTR [rdx]
   1400049dd:	mov    rdi,rdx
   1400049e0:	mov    rbx,QWORD PTR [rax+0x18]
   1400049e4:	mov    rcx,rbx
   1400049e7:	call   QWORD PTR [rip+0x2dcbb]        # 0x1400326a8
   1400049ed:	lea    r8,[rip+0x30b44]        # 0x140035538
   1400049f4:	mov    rcx,rdi
   1400049f7:	lea    rdx,[rip+0x30b42]        # 0x140035540
   1400049fe:	mov    rax,rbx
   140004a01:	mov    rbx,QWORD PTR [rsp+0x30]
   140004a06:	add    rsp,0x20
   140004a0a:	pop    rdi
   140004a0b:	rex.W jmp rax
   140004a0e:	int3   
   140004a0f:	int3   
   140004a10:	int3   
   140004a11:	int3   
   140004a12:	int3   
   140004a13:	int3   
   140004a14:	int3   
   140004a15:	int3   
   140004a16:	int3   
   140004a17:	int3   
   140004a18:	int3   
   140004a19:	int3   
   140004a1a:	int3   
   140004a1b:	int3   
   140004a1c:	int3   
   140004a1d:	int3   
   140004a1e:	int3   
   140004a1f:	int3   
   140004a20:	mov    eax,0x80004005
   140004a25:	ret    
   140004a26:	int3   
   140004a27:	int3   
   140004a28:	int3   
   140004a29:	int3   
   140004a2a:	int3   
   140004a2b:	int3   
   140004a2c:	mov    QWORD PTR [rsp+0x8],rbx
   140004a31:	push   rbp
   140004a32:	push   rsi
   140004a33:	push   rdi
   140004a34:	push   r14
   140004a36:	push   r15
   140004a38:	lea    rbp,[rsp-0x9d0]
   140004a40:	sub    rsp,0xad0
   140004a47:	mov    rax,QWORD PTR [rip+0x465d2]        # 0x14004b020
   140004a4e:	xor    rax,rsp
   140004a51:	mov    QWORD PTR [rbp+0x9c0],rax
   140004a58:	xor    r14d,r14d
   140004a5b:	mov    edi,edx
   140004a5d:	mov    esi,r8d
   140004a60:	mov    QWORD PTR [rsp+0x38],r14
   140004a65:	lea    rax,[rip+0x2faf4]        # 0x140034560
   140004a6c:	mov    QWORD PTR [rsp+0x40],r14
   140004a71:	xor    edx,edx
   140004a73:	mov    QWORD PTR [rsp+0x30],rax
   140004a78:	lea    r8d,[r14+0x28]
   140004a7c:	mov    DWORD PTR [rsp+0x48],r14d
   140004a81:	lea    rcx,[rsp+0x50]
   140004a86:	mov    rbx,r9
   140004a89:	call   0x14002e2ce
   140004a8e:	lea    rcx,[rsp+0x50]
   140004a93:	mov    BYTE PTR [rsp+0x78],r14b
   140004a98:	call   0x140004ee4
   140004a9d:	test   eax,eax
   140004a9f:	js     0x140004b1d
   140004aa1:	mov    BYTE PTR [rsp+0x78],0x1
   140004aa6:	test   rbx,rbx
   140004aa9:	je     0x140004aca
   140004aab:	jmp    0x140004ac2
   140004aad:	mov    r8,QWORD PTR [rbx+0x8]
   140004ab1:	lea    rcx,[rsp+0x30]
   140004ab6:	mov    rdx,rax
   140004ab9:	call   0x1400051d0
   140004abe:	lea    rbx,[rbx+0x10]
   140004ac2:	mov    rax,QWORD PTR [rbx]
   140004ac5:	test   rax,rax
   140004ac8:	jne    0x140004aad
   140004aca:	mov    rax,QWORD PTR [rsp+0x30]
   140004acf:	mov    rbx,QWORD PTR [rax+0x18]
   140004ad3:	mov    rcx,rbx
   140004ad6:	call   QWORD PTR [rip+0x2dbcc]        # 0x1400326a8
   140004adc:	lea    r8,[rip+0x30a55]        # 0x140035538
   140004ae3:	lea    rdx,[rip+0x30a56]        # 0x140035540
   140004aea:	lea    rcx,[rsp+0x30]
   140004aef:	call   rbx
   140004af1:	mov    ebx,eax
   140004af3:	test   eax,eax
   140004af5:	js     0x140004b1f
   140004af7:	mov    rbx,QWORD PTR [rip+0x4b63a]        # 0x140050138
   140004afe:	lea    rdx,[rbp-0x80]
   140004b02:	mov    r15d,0x104
   140004b08:	mov    rcx,rbx
   140004b0b:	mov    r8d,r15d
   140004b0e:	call   QWORD PTR [rip+0x2d61c]        # 0x140032130
   140004b14:	test   eax,eax
   140004b16:	jne    0x140004b51
   140004b18:	call   0x1400052bc
   140004b1d:	mov    ebx,eax
   140004b1f:	lea    rcx,[rsp+0x30]
   140004b24:	call   0x140004e54
   140004b29:	mov    eax,ebx
   140004b2b:	mov    rcx,QWORD PTR [rbp+0x9c0]
   140004b32:	xor    rcx,rsp
   140004b35:	call   0x14002dd00
   140004b3a:	mov    rbx,QWORD PTR [rsp+0xb00]
   140004b42:	add    rsp,0xad0
   140004b49:	pop    r15
   140004b4b:	pop    r14
   140004b4d:	pop    rdi
   140004b4e:	pop    rsi
   140004b4f:	pop    rbp
   140004b50:	ret    
   140004b51:	cmp    eax,r15d
   140004b54:	jne    0x140004b5d
   140004b56:	mov    ebx,0x8007007a
   140004b5b:	jmp    0x140004b1f
   140004b5d:	lea    rdx,[rbp-0x80]
   140004b61:	mov    ecx,r14d
   140004b64:	mov    r9d,0x27
   140004b6a:	movzx  r8d,WORD PTR [rdx]
   140004b6e:	test   r8w,r8w
   140004b72:	je     0x140004ba6
   140004b74:	mov    eax,ecx
   140004b76:	mov    WORD PTR [rbp+rax*2+0x190],r8w
   140004b7f:	cmp    r8w,r9w
   140004b83:	jne    0x140004b98
   140004b85:	cmp    ecx,0x206
   140004b8b:	jae    0x140004b98
   140004b8d:	inc    ecx
   140004b8f:	mov    WORD PTR [rbp+rcx*2+0x190],r9w
   140004b98:	add    rdx,0x2
   140004b9c:	inc    ecx
   140004b9e:	cmp    ecx,0x207
   140004ba4:	jb     0x140004b6a
   140004ba6:	mov    eax,ecx
   140004ba8:	mov    WORD PTR [rbp+rax*2+0x190],r14w
   140004bb1:	test   rbx,rbx
   140004bb4:	je     0x140004bcf
   140004bb6:	xor    ecx,ecx
   140004bb8:	call   QWORD PTR [rip+0x2d6f2]        # 0x1400322b0
   140004bbe:	cmp    rbx,rax
   140004bc1:	je     0x140004bcf
   140004bc3:	lea    r8,[rbp+0x190]
   140004bca:	jmp    0x140004c61
   140004bcf:	mov    r15d,0x22
   140004bd5:	lea    rcx,[rbp+0x190]
   140004bdc:	or     rbx,0xffffffffffffffff
   140004be0:	mov    WORD PTR [rbp+0x5a0],r15w
   140004be8:	mov    rax,rbx
   140004beb:	inc    rax
   140004bee:	cmp    WORD PTR [rcx+rax*2],r14w
   140004bf3:	jne    0x140004beb
   140004bf5:	inc    eax
   140004bf7:	lea    r8,[rbp+0x190]
   140004bfe:	movsxd r9,eax
   140004c01:	lea    rcx,[rbp+0x5a2]
   140004c08:	add    r9,r9
   140004c0b:	mov    edx,0x416
   140004c10:	call   QWORD PTR [rip+0x2d9aa]        # 0x1400325c0
   140004c16:	test   eax,eax
   140004c18:	je     0x140004c24
   140004c1a:	mov    ebx,0x80004005
   140004c1f:	jmp    0x140004b1f
   140004c24:	lea    rax,[rbp+0x5a0]
   140004c2b:	inc    rbx
   140004c2e:	cmp    WORD PTR [rax+rbx*2],r14w
   140004c33:	jne    0x140004c2b
   140004c35:	movsxd rax,ebx
   140004c38:	mov    WORD PTR [rbp+rax*2+0x5a0],r15w
   140004c41:	lea    rax,[rax*2+0x2]
   140004c49:	cmp    rax,0x418
   140004c4f:	jae    0x140004ccb
   140004c51:	mov    WORD PTR [rbp+rax*1+0x5a0],r14w
   140004c5a:	lea    r8,[rbp+0x5a0]
   140004c61:	lea    rdx,[rip+0x308e8]        # 0x140035550
   140004c68:	lea    rcx,[rsp+0x30]
   140004c6d:	call   0x1400051d0
   140004c72:	test   eax,eax
   140004c74:	js     0x140004b1d
   140004c7a:	lea    r8,[rbp+0x190]
   140004c81:	lea    rdx,[rip+0x308d8]        # 0x140035560
   140004c88:	lea    rcx,[rsp+0x30]
   140004c8d:	call   0x1400051d0
   140004c92:	test   eax,eax
   140004c94:	js     0x140004b1d
   140004c9a:	movzx  r8d,di
   140004c9e:	lea    r9,[rip+0x308d3]        # 0x140035578
   140004ca5:	lea    rdx,[rbp-0x80]
   140004ca9:	lea    rcx,[rsp+0x30]
   140004cae:	test   esi,esi
   140004cb0:	je     0x140004cbc
   140004cb2:	mov    DWORD PTR [rsp+0x20],0x1
   140004cba:	jmp    0x140004cc1
   140004cbc:	mov    DWORD PTR [rsp+0x20],r14d
   140004cc1:	call   0x140006ba8
   140004cc6:	jmp    0x140004b1d
   140004ccb:	call   0x14002e158
   140004cd0:	int3   
   140004cd1:	int3   
   140004cd2:	int3   
   140004cd3:	int3   
   140004cd4:	int3   
   140004cd5:	int3   
   140004cd6:	int3   
   140004cd7:	int3   
   140004cd8:	int3   
   140004cd9:	int3   
   140004cda:	int3   
   140004cdb:	int3   
   140004cdc:	int3   
   140004cdd:	int3   
   140004cde:	int3   
   140004cdf:	int3   
   140004ce0:	jmp    0x140004a2c
   140004ce5:	int3   
   140004ce6:	int3   
   140004ce7:	int3   
   140004ce8:	int3   
   140004ce9:	int3   
   140004cea:	int3   
   140004ceb:	int3   
   140004cec:	int3   
   140004ced:	int3   
   140004cee:	int3   
   140004cef:	int3   
   140004cf0:	test   r8,r8
   140004cf3:	je     0x140004cf9
   140004cf5:	and    QWORD PTR [r8],0x0
   140004cf9:	mov    eax,0x80004001
   140004cfe:	ret    
   140004cff:	int3   
   140004d00:	int3   
   140004d01:	int3   
   140004d02:	int3   
   140004d03:	int3   
   140004d04:	int3   
   140004d05:	int3   
   140004d06:	int3   
   140004d07:	int3   
   140004d08:	int3   
   140004d09:	int3   
   140004d0a:	int3   
   140004d0b:	int3   
   140004d0c:	int3   
   140004d0d:	int3   
   140004d0e:	int3   
   140004d0f:	int3   
   140004d10:	mov    eax,0x1
   140004d15:	ret    
   140004d16:	int3   
   140004d17:	int3   
   140004d18:	int3   
   140004d19:	int3   
   140004d1a:	int3   
   140004d1b:	int3   
   140004d1c:	int3   
   140004d1d:	int3   
   140004d1e:	int3   
   140004d1f:	int3   
   140004d20:	xor    eax,eax
   140004d22:	ret    
   140004d23:	int3   
   140004d24:	int3   
   140004d25:	int3   
   140004d26:	int3   
   140004d27:	int3   
   140004d28:	int3   
   140004d29:	int3   
   140004d2a:	int3   
   140004d2b:	int3   
   140004d2c:	int3   
   140004d2d:	int3   
   140004d2e:	int3   
   140004d2f:	int3   
   140004d30:	mov    QWORD PTR [rsp+0x8],rbx
   140004d35:	push   rdi
   140004d36:	sub    rsp,0x20
   140004d3a:	mov    ebx,edx
   140004d3c:	mov    rdi,rcx
   140004d3f:	call   0x140004e54
   140004d44:	test   bl,0x1
   140004d47:	je     0x140004d52
   140004d49:	mov    rcx,rdi
   140004d4c:	call   QWORD PTR [rip+0x2d876]        # 0x1400325c8
   140004d52:	mov    rax,rdi
   140004d55:	mov    rbx,QWORD PTR [rsp+0x30]
   140004d5a:	add    rsp,0x20
   140004d5e:	pop    rdi
   140004d5f:	ret    
   140004d60:	int3   
   140004d61:	int3   
   140004d62:	int3   
   140004d63:	int3   
   140004d64:	int3   
   140004d65:	int3   
   140004d66:	int3   
   140004d67:	int3   
   140004d68:	mov    QWORD PTR [rsp+0x8],rbx
   140004d6d:	mov    QWORD PTR [rsp+0x10],rsi
   140004d72:	push   rdi
   140004d73:	sub    rsp,0x20
   140004d77:	xor    esi,esi
   140004d79:	mov    rbx,rcx
   140004d7c:	cmp    DWORD PTR [rcx+0x10],esi
   140004d7f:	jle    0x140004db8
   140004d81:	xor    edi,edi
   140004d83:	test   rdi,rdi
   140004d86:	js     0x140004dff
   140004d88:	cmp    esi,DWORD PTR [rbx+0x10]
   140004d8b:	jge    0x140004dff
   140004d8d:	mov    rcx,QWORD PTR [rbx]
   140004d90:	mov    rcx,QWORD PTR [rdi+rcx*1]
   140004d94:	call   QWORD PTR [rip+0x2d82e]        # 0x1400325c8
   140004d9a:	cmp    esi,DWORD PTR [rbx+0x10]
   140004d9d:	jge    0x140004df4
   140004d9f:	mov    rcx,QWORD PTR [rbx+0x8]
   140004da3:	mov    rcx,QWORD PTR [rcx+rdi*1]
   140004da7:	call   QWORD PTR [rip+0x2d81b]        # 0x1400325c8
   140004dad:	inc    esi
   140004daf:	add    rdi,0x8
   140004db3:	cmp    esi,DWORD PTR [rbx+0x10]
   140004db6:	jl     0x140004d83
   140004db8:	mov    rcx,QWORD PTR [rbx]
   140004dbb:	test   rcx,rcx
   140004dbe:	je     0x140004dca
   140004dc0:	call   QWORD PTR [rip+0x2d802]        # 0x1400325c8
   140004dc6:	and    QWORD PTR [rbx],0x0
   140004dca:	mov    rcx,QWORD PTR [rbx+0x8]
   140004dce:	test   rcx,rcx
   140004dd1:	je     0x140004dde
   140004dd3:	call   QWORD PTR [rip+0x2d7ef]        # 0x1400325c8
   140004dd9:	and    QWORD PTR [rbx+0x8],0x0
   140004dde:	and    DWORD PTR [rbx+0x10],0x0
   140004de2:	mov    rbx,QWORD PTR [rsp+0x30]
   140004de7:	xor    eax,eax
   140004de9:	mov    rsi,QWORD PTR [rsp+0x38]
   140004dee:	add    rsp,0x20
   140004df2:	pop    rdi
   140004df3:	ret    
   140004df4:	mov    ecx,0xc000008c
   140004df9:	call   0x1400052f4
   140004dfe:	int3   
   140004dff:	mov    ecx,0xc000008c
   140004e04:	call   0x1400052f4
   140004e09:	int3   
   140004e0a:	int3   
   140004e0b:	int3   
   140004e0c:	int3   
   140004e0d:	int3   
   140004e0e:	int3   
   140004e0f:	int3   
   140004e10:	mov    QWORD PTR [rsp+0x8],rbx
   140004e15:	push   rdi
   140004e16:	sub    rsp,0x20
   140004e1a:	lea    rdi,[rcx+0x20]
   140004e1e:	mov    rbx,rcx
   140004e21:	mov    rcx,rdi
   140004e24:	call   QWORD PTR [rip+0x2d2de]        # 0x140032108
   140004e2a:	lea    rcx,[rbx+0x8]
   140004e2e:	call   0x140004d68
   140004e33:	mov    rcx,rdi
   140004e36:	mov    ebx,eax
   140004e38:	call   QWORD PTR [rip+0x2d2ba]        # 0x1400320f8
   140004e3e:	mov    eax,ebx
   140004e40:	mov    rbx,QWORD PTR [rsp+0x30]
   140004e45:	add    rsp,0x20
   140004e49:	pop    rdi
   140004e4a:	ret    
   140004e4b:	int3   
   140004e4c:	int3   
   140004e4d:	int3   
   140004e4e:	int3   
   140004e4f:	int3   
   140004e50:	int3   
   140004e51:	int3   
   140004e52:	int3   
   140004e53:	int3   
   140004e54:	mov    QWORD PTR [rsp+0x8],rbx
   140004e59:	push   rdi
   140004e5a:	sub    rsp,0x20
   140004e5e:	lea    rax,[rip+0x2f6fb]        # 0x140034560
   140004e65:	mov    rbx,rcx
   140004e68:	lea    rdi,[rcx+0x20]
   140004e6c:	mov    QWORD PTR [rcx],rax
   140004e6f:	mov    rcx,rdi
   140004e72:	call   QWORD PTR [rip+0x2d290]        # 0x140032108
   140004e78:	lea    rcx,[rbx+0x8]
   140004e7c:	call   0x140004d68
   140004e81:	mov    rcx,rdi
   140004e84:	call   QWORD PTR [rip+0x2d26e]        # 0x1400320f8
   140004e8a:	cmp    BYTE PTR [rdi+0x28],0x0
   140004e8e:	je     0x140004e9d
   140004e90:	mov    rcx,rdi
   140004e93:	mov    BYTE PTR [rdi+0x28],0x0
   140004e97:	call   QWORD PTR [rip+0x2d3db]        # 0x140032278
   140004e9d:	lea    rcx,[rbx+0x8]
   140004ea1:	call   0x140004d68
   140004ea6:	mov    rcx,QWORD PTR [rbx+0x8]
   140004eaa:	test   rcx,rcx
   140004ead:	je     0x140004eba
   140004eaf:	call   QWORD PTR [rip+0x2d713]        # 0x1400325c8
   140004eb5:	and    QWORD PTR [rbx+0x8],0x0
   140004eba:	mov    rcx,QWORD PTR [rbx+0x10]
   140004ebe:	test   rcx,rcx
   140004ec1:	je     0x140004ece
   140004ec3:	call   QWORD PTR [rip+0x2d6ff]        # 0x1400325c8
   140004ec9:	and    QWORD PTR [rbx+0x10],0x0
   140004ece:	and    DWORD PTR [rbx+0x18],0x0
   140004ed2:	mov    rbx,QWORD PTR [rsp+0x30]
   140004ed7:	add    rsp,0x20
   140004edb:	pop    rdi
   140004edc:	ret    
   140004edd:	int3   
   140004ede:	int3   
   140004edf:	int3   
   140004ee0:	int3   
   140004ee1:	int3   
   140004ee2:	int3   
   140004ee3:	int3   
   140004ee4:	sub    rsp,0x38
   140004ee8:	call   QWORD PTR [rip+0x2d24a]        # 0x140032138
   140004eee:	xor    eax,eax
   140004ef0:	mov    DWORD PTR [rsp+0x20],eax
   140004ef4:	jmp    0x140004eff
   140004ef6:	mov    eax,0x8007000e
   140004efb:	mov    DWORD PTR [rsp+0x20],eax
   140004eff:	add    rsp,0x38
   140004f03:	ret    
   140004f04:	int3   
   140004f05:	int3   
   140004f06:	int3   
   140004f07:	int3   
   140004f08:	int3   
   140004f09:	int3   
   140004f0a:	int3   
   140004f0b:	int3   
   140004f0c:	rex push rbx
   140004f0e:	sub    rsp,0x20
   140004f12:	mov    rbx,rcx
   140004f15:	mov    rcx,QWORD PTR [rcx]
   140004f18:	call   QWORD PTR [rip+0x2d6aa]        # 0x1400325c8
   140004f1e:	and    QWORD PTR [rbx],0x0
   140004f22:	add    rsp,0x20
   140004f26:	pop    rbx
   140004f27:	ret    
   140004f28:	int3   
   140004f29:	int3   
   140004f2a:	int3   
   140004f2b:	int3   
   140004f2c:	int3   
   140004f2d:	int3   
   140004f2e:	int3   
   140004f2f:	int3   
   140004f30:	mov    rax,rsp
   140004f33:	mov    QWORD PTR [rax+0x18],r8
   140004f37:	mov    QWORD PTR [rax+0x10],rdx
   140004f3b:	mov    QWORD PTR [rax+0x8],rcx
   140004f3f:	push   rbx
   140004f40:	push   rsi
   140004f41:	push   rdi
   140004f42:	push   r12
   140004f44:	push   r13
   140004f46:	push   r14
   140004f48:	push   r15
   140004f4a:	sub    rsp,0x60
   140004f4e:	mov    QWORD PTR [rax-0x48],0xfffffffffffffffe
   140004f56:	mov    r13,r8
   140004f59:	mov    r12,rdx
   140004f5c:	mov    r15,rcx
   140004f5f:	xor    esi,esi
   140004f61:	test   rdx,rdx
   140004f64:	je     0x1400051ad
   140004f6a:	test   r8,r8
   140004f6d:	je     0x1400051ad
   140004f73:	mov    r14d,esi
   140004f76:	or     rbx,0xffffffffffffffff
   140004f7a:	mov    rax,rbx
   140004f7d:	inc    rax
   140004f80:	cmp    WORD PTR [rdx+rax*2],si
   140004f84:	jne    0x140004f7d
   140004f86:	lea    rcx,[rax*2+0x2]
   140004f8e:	mov    QWORD PTR [rsp+0x48],rcx
   140004f93:	mov    QWORD PTR [rsp+0x28],rsi
   140004f98:	mov    eax,0x2
   140004f9d:	mul    rcx
   140004fa0:	cmovo  rax,rbx
   140004fa4:	mov    rcx,rax
   140004fa7:	call   0x140023f10
   140004fac:	mov    QWORD PTR [rsp+0x20],rax
   140004fb1:	mov    QWORD PTR [rsp+0x28],rax
   140004fb6:	jmp    0x140004fe3
   140004fb8:	xor    esi,esi
   140004fba:	or     rbx,0xffffffffffffffff
   140004fbe:	mov    r15,QWORD PTR [rsp+0xa0]
   140004fc6:	mov    r13,QWORD PTR [rsp+0xb0]
   140004fce:	mov    r12,QWORD PTR [rsp+0xa8]
   140004fd6:	mov    r14d,esi
   140004fd9:	mov    rax,QWORD PTR [rsp+0x28]
   140004fde:	mov    QWORD PTR [rsp+0x20],rax
   140004fe3:	mov    rdi,rax
   140004fe6:	mov    QWORD PTR [rsp+0x40],rax
   140004feb:	mov    rax,rbx
   140004fee:	inc    rax
   140004ff1:	cmp    WORD PTR [r13+rax*2+0x0],si
   140004ff7:	jne    0x140004fee
   140004ff9:	inc    eax
   140004ffb:	movsxd rcx,eax
   140004ffe:	add    rcx,rcx
   140005001:	mov    QWORD PTR [rsp+0x38],rcx
   140005006:	mov    QWORD PTR [rsp+0x30],rsi
   14000500b:	mov    eax,0x2
   140005010:	mul    rcx
   140005013:	cmovo  rax,rbx
   140005017:	mov    rcx,rax
   14000501a:	call   0x140023f10
   14000501f:	mov    rbx,rax
   140005022:	mov    QWORD PTR [rsp+0x30],rax
   140005027:	mov    rax,QWORD PTR [rsp+0x20]
   14000502c:	jmp    0x14000505f
   14000502e:	xor    esi,esi
   140005030:	mov    r15,QWORD PTR [rsp+0xa0]
   140005038:	mov    r13,QWORD PTR [rsp+0xb0]
   140005040:	mov    r12,QWORD PTR [rsp+0xa8]
   140005048:	mov    r14d,esi
   14000504b:	mov    rax,QWORD PTR [rsp+0x28]
   140005050:	mov    QWORD PTR [rsp+0x20],rax
   140005055:	mov    rdi,QWORD PTR [rsp+0x40]
   14000505a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000505f:	mov    QWORD PTR [rsp+0xa8],rbx
   140005067:	test   rax,rax
   14000506a:	je     0x140005189
   140005070:	test   rbx,rbx
   140005073:	je     0x140005189
   140005079:	mov    rdx,QWORD PTR [rsp+0x48]
   14000507e:	mov    r9,rdx
   140005081:	mov    r8,r12
   140005084:	mov    rcx,rax
   140005087:	call   QWORD PTR [rip+0x2d533]        # 0x1400325c0
   14000508d:	test   eax,eax
   14000508f:	je     0x1400050c6
   140005091:	cmp    eax,0xc
   140005094:	je     0x1400050bb
   140005096:	cmp    eax,0x16
   140005099:	je     0x1400050b0
   14000509b:	cmp    eax,0x22
   14000509e:	je     0x1400050b0
   1400050a0:	cmp    eax,0x50
   1400050a3:	je     0x1400050c6
   1400050a5:	mov    ecx,0x80004005
   1400050aa:	call   0x140005d50
   1400050af:	int3   
   1400050b0:	mov    ecx,0x80070057
   1400050b5:	call   0x140005d50
   1400050ba:	int3   
   1400050bb:	mov    ecx,0x8007000e
   1400050c0:	call   0x140005d50
   1400050c5:	int3   
   1400050c6:	mov    r9,QWORD PTR [rsp+0x38]
   1400050cb:	mov    r8,r13
   1400050ce:	mov    rdx,r9
   1400050d1:	mov    rcx,rbx
   1400050d4:	call   QWORD PTR [rip+0x2d4e6]        # 0x1400325c0
   1400050da:	test   eax,eax
   1400050dc:	je     0x140005113
   1400050de:	cmp    eax,0xc
   1400050e1:	je     0x140005108
   1400050e3:	cmp    eax,0x16
   1400050e6:	je     0x1400050fd
   1400050e8:	cmp    eax,0x22
   1400050eb:	je     0x1400050fd
   1400050ed:	cmp    eax,0x50
   1400050f0:	je     0x140005113
   1400050f2:	mov    ecx,0x80004005
   1400050f7:	call   0x140005d50
   1400050fc:	int3   
   1400050fd:	mov    ecx,0x80070057
   140005102:	call   0x140005d50
   140005107:	int3   
   140005108:	mov    ecx,0x8007000e
   14000510d:	call   0x140005d50
   140005112:	int3   
   140005113:	mov    eax,DWORD PTR [r15+0x10]
   140005117:	inc    eax
   140005119:	movsxd rdx,eax
   14000511c:	mov    r12d,0x8
   140005122:	mov    r8d,r12d
   140005125:	mov    rcx,QWORD PTR [r15]
   140005128:	call   QWORD PTR [rip+0x45ee2]        # 0x14004b010
   14000512e:	test   rax,rax
   140005131:	je     0x140005189
   140005133:	mov    QWORD PTR [r15],rax
   140005136:	mov    eax,DWORD PTR [r15+0x10]
   14000513a:	inc    eax
   14000513c:	movsxd rdx,eax
   14000513f:	mov    r8d,r12d
   140005142:	mov    rcx,QWORD PTR [r15+0x8]
   140005146:	call   QWORD PTR [rip+0x45ec4]        # 0x14004b010
   14000514c:	test   rax,rax
   14000514f:	je     0x140005189
   140005151:	mov    QWORD PTR [r15+0x8],rax
   140005155:	movsxd rdx,DWORD PTR [r15+0x10]
   140005159:	mov    rax,QWORD PTR [r15]
   14000515c:	lea    rcx,[rax+rdx*8]
   140005160:	test   rcx,rcx
   140005163:	je     0x14000516d
   140005165:	mov    rax,QWORD PTR [rsp+0x20]
   14000516a:	mov    QWORD PTR [rcx],rax
   14000516d:	mov    rax,QWORD PTR [r15+0x8]
   140005171:	lea    rcx,[rax+rdx*8]
   140005175:	test   rcx,rcx
   140005178:	je     0x14000517d
   14000517a:	mov    QWORD PTR [rcx],rbx
   14000517d:	inc    DWORD PTR [r15+0x10]
   140005181:	mov    rdi,rsi
   140005184:	mov    rbx,rsi
   140005187:	jmp    0x14000518f
   140005189:	mov    r14d,0x8007000e
   14000518f:	test   r14d,r14d
   140005192:	setns  sil
   140005196:	mov    rcx,rbx
   140005199:	call   QWORD PTR [rip+0x2d429]        # 0x1400325c8
   14000519f:	nop
   1400051a0:	mov    rcx,rdi
   1400051a3:	call   QWORD PTR [rip+0x2d41f]        # 0x1400325c8
   1400051a9:	mov    eax,esi
   1400051ab:	jmp    0x1400051af
   1400051ad:	xor    eax,eax
   1400051af:	add    rsp,0x60
   1400051b3:	pop    r15
   1400051b5:	pop    r14
   1400051b7:	pop    r13
   1400051b9:	pop    r12
   1400051bb:	pop    rdi
   1400051bc:	pop    rsi
   1400051bd:	pop    rbx
   1400051be:	ret    
   1400051bf:	int3   
   1400051c0:	int3   
   1400051c1:	int3   
   1400051c2:	int3   
   1400051c3:	int3   
   1400051c4:	int3   
   1400051c5:	int3   
   1400051c6:	int3   
   1400051c7:	int3   
   1400051c8:	int3   
   1400051c9:	int3   
   1400051ca:	int3   
   1400051cb:	int3   
   1400051cc:	int3   
   1400051cd:	int3   
   1400051ce:	int3   
   1400051cf:	int3   
   1400051d0:	mov    rax,rsp
   1400051d3:	push   rdi
   1400051d4:	sub    rsp,0x30
   1400051d8:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   1400051e0:	mov    QWORD PTR [rax+0x8],rbx
   1400051e4:	mov    QWORD PTR [rax+0x18],rbp
   1400051e8:	mov    QWORD PTR [rax+0x20],rsi
   1400051ec:	mov    rbx,r8
   1400051ef:	mov    rsi,rdx
   1400051f2:	mov    rbp,rcx
   1400051f5:	test   rdx,rdx
   1400051f8:	je     0x140005237
   1400051fa:	test   rbx,rbx
   1400051fd:	je     0x140005237
   1400051ff:	add    rcx,0x20
   140005203:	call   QWORD PTR [rip+0x2ceff]        # 0x140032108
   140005209:	and    QWORD PTR [rsp+0x48],0x0
   14000520f:	lea    rcx,[rbp+0x8]
   140005213:	mov    r8,rbx
   140005216:	mov    rdx,rsi
   140005219:	call   0x140004f30
   14000521e:	mov    ebx,eax
   140005220:	lea    rcx,[rbp+0x20]
   140005224:	call   QWORD PTR [rip+0x2cece]        # 0x1400320f8
   14000522a:	neg    ebx
   14000522c:	sbb    eax,eax
   14000522e:	not    eax
   140005230:	and    eax,0x8007000e
   140005235:	jmp    0x14000523c
   140005237:	mov    eax,0x80070057
   14000523c:	mov    rbx,QWORD PTR [rsp+0x40]
   140005241:	mov    rbp,QWORD PTR [rsp+0x50]
   140005246:	mov    rsi,QWORD PTR [rsp+0x58]
   14000524b:	add    rsp,0x30
   14000524f:	pop    rdi
   140005250:	ret    
   140005251:	int3   
   140005252:	int3   
   140005253:	int3   
   140005254:	int3   
   140005255:	int3   
   140005256:	int3   
   140005257:	int3   
   140005258:	mov    rcx,QWORD PTR [rcx]
   14000525b:	rex.W jmp QWORD PTR [rip+0x2d366]        # 0x1400325c8
   140005262:	int3   
   140005263:	int3   
   140005264:	int3   
   140005265:	int3   
   140005266:	int3   
   140005267:	int3   
   140005268:	sub    rsp,0x28
   14000526c:	lea    rax,[rcx+0x8]
   140005270:	cmp    QWORD PTR [rcx],rax
   140005273:	je     0x14000527a
   140005275:	call   0x140005258
   14000527a:	add    rsp,0x28
   14000527e:	ret    
   14000527f:	int3   
   140005280:	int3   
   140005281:	int3   
   140005282:	int3   
   140005283:	int3   
   140005284:	int3   
   140005285:	int3   
   140005286:	int3   
   140005287:	int3   
   140005288:	rex push rbx
   14000528a:	sub    rsp,0x20
   14000528e:	mov    rbx,rcx
   140005291:	mov    rcx,rdx
   140005294:	call   QWORD PTR [rip+0x2d336]        # 0x1400325d0
   14000529a:	test   rax,rax
   14000529d:	je     0x1400052a8
   14000529f:	mov    QWORD PTR [rbx],rax
   1400052a2:	add    rsp,0x20
   1400052a6:	pop    rbx
   1400052a7:	ret    
   1400052a8:	mov    ecx,0x8007000e
   1400052ad:	call   0x140005d50
   1400052b2:	int3   
   1400052b3:	int3   
   1400052b4:	int3   
   1400052b5:	int3   
   1400052b6:	int3   
   1400052b7:	int3   
   1400052b8:	int3   
   1400052b9:	int3   
   1400052ba:	int3   
   1400052bb:	int3   
   1400052bc:	sub    rsp,0x28
   1400052c0:	call   QWORD PTR [rip+0x2cfc2]        # 0x140032288
   1400052c6:	mov    ecx,eax
   1400052c8:	movzx  eax,ax
   1400052cb:	or     eax,0x80070000
   1400052d0:	test   ecx,ecx
   1400052d2:	cmovle eax,ecx
   1400052d5:	add    rsp,0x28
   1400052d9:	ret    
   1400052da:	int3   
   1400052db:	int3   
   1400052dc:	int3   
   1400052dd:	int3   
   1400052de:	int3   
   1400052df:	int3   
   1400052e0:	mov    rcx,QWORD PTR [rcx+0x8]
   1400052e4:	rex.W jmp QWORD PTR [rip+0x2d375]        # 0x140032660
   1400052eb:	int3   
   1400052ec:	int3   
   1400052ed:	int3   
   1400052ee:	int3   
   1400052ef:	int3   
   1400052f0:	int3   
   1400052f1:	int3   
   1400052f2:	int3   
   1400052f3:	int3   
   1400052f4:	xor    r9d,r9d
   1400052f7:	xor    r8d,r8d
   1400052fa:	lea    edx,[r9+0x1]
   1400052fe:	rex.W jmp QWORD PTR [rip+0x2cdfb]        # 0x140032100
   140005305:	int3   
   140005306:	int3   
   140005307:	int3   
   140005308:	int3   
   140005309:	int3   
   14000530a:	int3   
   14000530b:	int3   
   14000530c:	mov    rax,rsp
   14000530f:	mov    QWORD PTR [rax+0x8],rbx
   140005313:	mov    QWORD PTR [rax+0x10],rbp
   140005317:	mov    QWORD PTR [rax+0x18],rsi
   14000531b:	mov    QWORD PTR [rax+0x20],rdi
   14000531f:	push   r14
   140005321:	sub    rsp,0x20
   140005325:	mov    rbx,rcx
   140005328:	mov    esi,r8d
   14000532b:	lea    ecx,[r8+0x1]
   14000532f:	mov    rbp,rdx
   140005332:	add    ecx,DWORD PTR [rbx]
   140005334:	cmp    ecx,DWORD PTR [rbx]
   140005336:	jle    0x1400053e9
   14000533c:	cmp    ecx,r8d
   14000533f:	jle    0x1400053e9
   140005345:	mov    edi,DWORD PTR [rbx+0x4]
   140005348:	xor    r14d,r14d
   14000534b:	cmp    ecx,edi
   14000534d:	jl     0x140005388
   14000534f:	cmp    edi,0x3fffffff
   140005355:	jg     0x1400053e9
   14000535b:	add    edi,edi
   14000535d:	cmp    ecx,edi
   14000535f:	jge    0x14000534f
   140005361:	mov    eax,edi
   140005363:	mov    ecx,0xffffffff
   140005368:	add    rax,rax
   14000536b:	cmp    rax,rcx
   14000536e:	ja     0x1400053e9
   140005370:	mov    rcx,QWORD PTR [rbx+0x8]
   140005374:	mov    edx,eax
   140005376:	call   QWORD PTR [rip+0x2d2ec]        # 0x140032668
   14000537c:	test   rax,rax
   14000537f:	je     0x1400053e9
   140005381:	mov    QWORD PTR [rbx+0x8],rax
   140005385:	mov    DWORD PTR [rbx+0x4],edi
   140005388:	cmp    DWORD PTR [rbx],r14d
   14000538b:	jl     0x1400053e9
   14000538d:	mov    ecx,DWORD PTR [rbx+0x4]
   140005390:	cmp    DWORD PTR [rbx],ecx
   140005392:	jge    0x1400053e9
   140005394:	mov    eax,ecx
   140005396:	sub    eax,DWORD PTR [rbx]
   140005398:	cmp    eax,ecx
   14000539a:	jg     0x1400053e9
   14000539c:	movsxd rcx,DWORD PTR [rbx]
   14000539f:	mov    r8,rbp
   1400053a2:	movsxd rdx,eax
   1400053a5:	mov    rax,QWORD PTR [rbx+0x8]
   1400053a9:	add    rdx,rdx
   1400053ac:	lea    rcx,[rax+rcx*2]
   1400053b0:	lea    eax,[rsi+rsi*1]
   1400053b3:	movsxd r9,eax
   1400053b6:	call   QWORD PTR [rip+0x2d204]        # 0x1400325c0
   1400053bc:	test   eax,eax
   1400053be:	je     0x1400053d4
   1400053c0:	cmp    eax,0xc
   1400053c3:	je     0x14000541c
   1400053c5:	cmp    eax,0x16
   1400053c8:	je     0x140005411
   1400053ca:	cmp    eax,0x22
   1400053cd:	je     0x140005411
   1400053cf:	cmp    eax,0x50
   1400053d2:	jne    0x140005406
   1400053d4:	add    DWORD PTR [rbx],esi
   1400053d6:	mov    rax,QWORD PTR [rbx+0x8]
   1400053da:	movsxd rcx,DWORD PTR [rbx]
   1400053dd:	mov    WORD PTR [rax+rcx*2],r14w
   1400053e2:	mov    eax,0x1
   1400053e7:	jmp    0x1400053eb
   1400053e9:	xor    eax,eax
   1400053eb:	mov    rbx,QWORD PTR [rsp+0x30]
   1400053f0:	mov    rbp,QWORD PTR [rsp+0x38]
   1400053f5:	mov    rsi,QWORD PTR [rsp+0x40]
   1400053fa:	mov    rdi,QWORD PTR [rsp+0x48]
   1400053ff:	add    rsp,0x20
   140005403:	pop    r14
   140005405:	ret    
   140005406:	mov    ecx,0x80004005
   14000540b:	call   0x140005d50
   140005410:	int3   
   140005411:	mov    ecx,0x80070057
   140005416:	call   0x140005d50
   14000541b:	int3   
   14000541c:	mov    ecx,0x8007000e
   140005421:	call   0x140005d50
   140005426:	int3   
   140005427:	int3   
   140005428:	int3   
   140005429:	int3   
   14000542a:	int3   
   14000542b:	int3   
   14000542c:	int3   
   14000542d:	int3   
   14000542e:	int3   
   14000542f:	int3   
   140005430:	mov    rax,rsp
   140005433:	push   rbp
   140005434:	push   rsi
   140005435:	push   rdi
   140005436:	push   r12
   140005438:	push   r13
   14000543a:	push   r14
   14000543c:	push   r15
   14000543e:	lea    rbp,[rax-0x5f]
   140005442:	sub    rsp,0xa0
   140005449:	mov    QWORD PTR [rbp-0x39],0xfffffffffffffffe
   140005451:	mov    QWORD PTR [rax+0x10],rbx
   140005455:	mov    rax,QWORD PTR [rip+0x45bc4]        # 0x14004b020
   14000545c:	xor    rax,rsp
   14000545f:	mov    QWORD PTR [rbp+0x17],rax
   140005463:	mov    QWORD PTR [rbp-0x49],r8
   140005467:	mov    rdi,rdx
   14000546a:	mov    rsi,rcx
   14000546d:	xor    ebx,ebx
   14000546f:	test   r8,r8
   140005472:	jne    0x14000547e
   140005474:	mov    eax,0x80004003
   140005479:	jmp    0x1400056d0
   14000547e:	mov    QWORD PTR [r8],rbx
   140005481:	or     rax,0xffffffffffffffff
   140005485:	inc    rax
   140005488:	cmp    WORD PTR [rdx+rax*2],bx
   14000548c:	jne    0x140005485
   14000548e:	add    eax,eax
   140005490:	mov    ecx,0x3e8
   140005495:	cmp    eax,0x64
   140005498:	cmovl  eax,ecx
   14000549b:	mov    DWORD PTR [rbp-0x59],ebx
   14000549e:	mov    DWORD PTR [rbp-0x55],eax
   1400054a1:	mov    ecx,eax
   1400054a3:	add    rcx,rcx
   1400054a6:	mov    eax,0xffffffff
   1400054ab:	cmp    rcx,rax
   1400054ae:	jbe    0x1400054b9
   1400054b0:	mov    rax,rbx
   1400054b3:	mov    QWORD PTR [rbp-0x51],rbx
   1400054b7:	jmp    0x1400054cd
   1400054b9:	mov    ecx,ecx
   1400054bb:	call   QWORD PTR [rip+0x2d1af]        # 0x140032670
   1400054c1:	mov    QWORD PTR [rbp-0x51],rax
   1400054c5:	test   rax,rax
   1400054c8:	je     0x1400054cd
   1400054ca:	mov    WORD PTR [rax],bx
   1400054cd:	test   rax,rax
   1400054d0:	jne    0x1400054dc
   1400054d2:	mov    ebx,0x8007000e
   1400054d7:	jmp    0x1400056c4
   1400054dc:	mov    QWORD PTR [rsi],rdi
   1400054df:	cmp    WORD PTR [rdi],bx
   1400054e2:	je     0x1400056b5
   1400054e8:	mov    rdx,QWORD PTR [rsi]
   1400054eb:	cmp    WORD PTR [rdx],0x25
   1400054ef:	jne    0x140005650
   1400054f5:	mov    rcx,rdx
   1400054f8:	call   QWORD PTR [rip+0x2ce9a]        # 0x140032398
   1400054fe:	mov    rdi,rax
   140005501:	mov    QWORD PTR [rsi],rax
   140005504:	cmp    WORD PTR [rax],0x25
   140005508:	jne    0x140005512
   14000550a:	mov    rdx,rax
   14000550d:	jmp    0x140005650
   140005512:	test   rax,rax
   140005515:	je     0x1400056ae
   14000551b:	movzx  eax,WORD PTR [rax]
   14000551e:	test   ax,ax
   140005521:	je     0x1400056ae
   140005527:	cmp    ax,0x25
   14000552b:	je     0x14000553b
   14000552d:	mov    rcx,rdi
   140005530:	call   QWORD PTR [rip+0x2ce62]        # 0x140032398
   140005536:	mov    rdi,rax
   140005539:	jmp    0x14000551b
   14000553b:	test   rdi,rdi
   14000553e:	je     0x1400056ae
   140005544:	mov    rax,rdi
   140005547:	sub    rax,QWORD PTR [rsi]
   14000554a:	sar    rax,1
   14000554d:	cmp    rax,0x1f
   140005551:	jg     0x1400056a7
   140005557:	movsxd r9,eax
   14000555a:	mov    r8,QWORD PTR [rsi]
   14000555d:	mov    edx,0x20
   140005562:	lea    rcx,[rbp-0x29]
   140005566:	call   QWORD PTR [rip+0x2d06c]        # 0x1400325d8
   14000556c:	test   eax,eax
   14000556e:	je     0x140005594
   140005570:	cmp    eax,0xc
   140005573:	je     0x140005691
   140005579:	cmp    eax,0x16
   14000557c:	je     0x140005686
   140005582:	cmp    eax,0x22
   140005585:	je     0x140005686
   14000558b:	cmp    eax,0x50
   14000558e:	jne    0x14000567b
   140005594:	mov    r13,QWORD PTR [rsi+0x8]
   140005598:	lea    rcx,[r13+0x20]
   14000559c:	call   QWORD PTR [rip+0x2cb66]        # 0x140032108
   1400055a2:	mov    r15d,ebx
   1400055a5:	mov    r14,rbx
   1400055a8:	cmp    DWORD PTR [r13+0x18],ebx
   1400055ac:	jle    0x1400055d0
   1400055ae:	mov    rax,QWORD PTR [r13+0x8]
   1400055b2:	lea    rdx,[rbp-0x29]
   1400055b6:	mov    rcx,QWORD PTR [rax+r14*8]
   1400055ba:	call   QWORD PTR [rip+0x2cb30]        # 0x1400320f0
   1400055c0:	test   eax,eax
   1400055c2:	je     0x1400055d8
   1400055c4:	inc    r15d
   1400055c7:	inc    r14
   1400055ca:	cmp    r15d,DWORD PTR [r13+0x18]
   1400055ce:	jl     0x1400055ae
   1400055d0:	or     r15d,0xffffffff
   1400055d4:	or     r14,0xffffffffffffffff
   1400055d8:	cmp    r14,0xffffffffffffffff
   1400055dc:	jne    0x1400055e3
   1400055de:	mov    r14,rbx
   1400055e1:	jmp    0x1400055fe
   1400055e3:	test   r14,r14
   1400055e6:	js     0x14000569c
   1400055ec:	cmp    r15d,DWORD PTR [r13+0x18]
   1400055f0:	jge    0x14000569c
   1400055f6:	mov    rax,QWORD PTR [r13+0x10]
   1400055fa:	mov    r14,QWORD PTR [rax+r14*8]
   1400055fe:	lea    rcx,[r13+0x20]
   140005602:	call   QWORD PTR [rip+0x2caf0]        # 0x1400320f8
   140005608:	test   r14,r14
   14000560b:	je     0x1400056ae
   140005611:	mov    QWORD PTR [rbp-0x41],rbx
   140005615:	or     r8,0xffffffffffffffff
   140005619:	inc    r8
   14000561c:	cmp    WORD PTR [r14+r8*2],bx
   140005621:	jne    0x140005619
   140005623:	mov    rdx,r14
   140005626:	lea    rcx,[rbp-0x59]
   14000562a:	call   0x14000530c
   14000562f:	nop
   140005630:	test   eax,eax
   140005632:	je     0x1400054d2
   140005638:	cmp    QWORD PTR [rsi],rdi
   14000563b:	je     0x140005667
   14000563d:	mov    rcx,QWORD PTR [rsi]
   140005640:	call   QWORD PTR [rip+0x2cd52]        # 0x140032398
   140005646:	mov    QWORD PTR [rsi],rax
   140005649:	cmp    rax,rdi
   14000564c:	jne    0x14000563d
   14000564e:	jmp    0x140005667
   140005650:	mov    r8d,0x1
   140005656:	lea    rcx,[rbp-0x59]
   14000565a:	call   0x14000530c
   14000565f:	test   eax,eax
   140005661:	je     0x1400054d2
   140005667:	mov    rcx,QWORD PTR [rsi]
   14000566a:	call   QWORD PTR [rip+0x2cd28]        # 0x140032398
   140005670:	mov    QWORD PTR [rsi],rax
   140005673:	cmp    WORD PTR [rax],bx
   140005676:	jmp    0x1400054e2
   14000567b:	mov    ecx,0x80004005
   140005680:	call   0x140005d50
   140005685:	int3   
   140005686:	mov    ecx,0x80070057
   14000568b:	call   0x140005d50
   140005690:	int3   
   140005691:	mov    ecx,0x8007000e
   140005696:	call   0x140005d50
   14000569b:	int3   
   14000569c:	mov    ecx,0xc000008c
   1400056a1:	call   0x1400052f4
   1400056a6:	int3   
   1400056a7:	mov    ebx,0x80004005
   1400056ac:	jmp    0x1400056c4
   1400056ae:	mov    ebx,0x80020009
   1400056b3:	jmp    0x1400056c4
   1400056b5:	mov    rcx,QWORD PTR [rbp-0x51]
   1400056b9:	mov    QWORD PTR [rbp-0x51],rbx
   1400056bd:	mov    rax,QWORD PTR [rbp-0x49]
   1400056c1:	mov    QWORD PTR [rax],rcx
   1400056c4:	mov    rcx,QWORD PTR [rbp-0x51]
   1400056c8:	call   QWORD PTR [rip+0x2cf92]        # 0x140032660
   1400056ce:	mov    eax,ebx
   1400056d0:	mov    rcx,QWORD PTR [rbp+0x17]
   1400056d4:	xor    rcx,rsp
   1400056d7:	call   0x14002dd00
   1400056dc:	mov    rbx,QWORD PTR [rsp+0xe8]
   1400056e4:	add    rsp,0xa0
   1400056eb:	pop    r15
   1400056ed:	pop    r14
   1400056ef:	pop    r13
   1400056f1:	pop    r12
   1400056f3:	pop    rdi
   1400056f4:	pop    rsi
   1400056f5:	pop    rbp
   1400056f6:	ret    
   1400056f7:	int3   
   1400056f8:	int3   
   1400056f9:	int3   
   1400056fa:	int3   
   1400056fb:	int3   
   1400056fc:	int3   
   1400056fd:	int3   
   1400056fe:	int3   
   1400056ff:	int3   
   140005700:	mov    rax,rsp
   140005703:	mov    QWORD PTR [rax+0x8],rbx
   140005707:	mov    QWORD PTR [rax+0x10],rbp
   14000570b:	mov    QWORD PTR [rax+0x18],rsi
   14000570f:	mov    QWORD PTR [rax+0x20],rdi
   140005713:	push   r15
   140005715:	sub    rsp,0x20
   140005719:	mov    eax,DWORD PTR [rip+0x4a8d5]        # 0x14004fff4
   14000571f:	mov    rsi,rdx
   140005722:	mov    rbp,rcx
   140005725:	test   al,0x1
   140005727:	jne    0x14000579a
   140005729:	or     eax,0x1
   14000572c:	mov    DWORD PTR [rip+0x4a8c2],eax        # 0x14004fff4
   140005732:	lea    rax,[rip+0x2e81b]        # 0x140033f54
   140005739:	mov    QWORD PTR [rip+0x4a8c0],rax        # 0x140050000
   140005740:	mov    eax,0x8
   140005745:	mov    WORD PTR [rip+0x4a8bc],ax        # 0x140050008
   14000574c:	lea    rax,[rip+0x2e805]        # 0x140033f58
   140005753:	mov    QWORD PTR [rip+0x4a8b6],rax        # 0x140050010
   14000575a:	mov    eax,0x4008
   14000575f:	mov    WORD PTR [rip+0x4a8b2],ax        # 0x140050018
   140005766:	lea    rax,[rip+0x2e7ef]        # 0x140033f5c
   14000576d:	mov    QWORD PTR [rip+0x4a8ac],rax        # 0x140050020
   140005774:	mov    eax,0x13
   140005779:	mov    WORD PTR [rip+0x4a8a8],ax        # 0x140050028
   140005780:	lea    rax,[rip+0x2e7d9]        # 0x140033f60
   140005787:	mov    QWORD PTR [rip+0x4a8a2],rax        # 0x140050030
   14000578e:	mov    eax,0x11
   140005793:	mov    WORD PTR [rip+0x4a89e],ax        # 0x140050038
   14000579a:	lea    r15,[rip+0x4a85f]        # 0x140050000
   1400057a1:	xor    ebx,ebx
   1400057a3:	mov    rdi,r15
   1400057a6:	mov    rdx,QWORD PTR [rdi]
   1400057a9:	mov    rcx,rbp
   1400057ac:	call   QWORD PTR [rip+0x2c93e]        # 0x1400320f0
   1400057b2:	test   eax,eax
   1400057b4:	je     0x1400057c9
   1400057b6:	inc    ebx
   1400057b8:	add    rdi,0x10
   1400057bc:	movsxd rax,ebx
   1400057bf:	cmp    rax,0x4
   1400057c3:	jb     0x1400057a6
   1400057c5:	xor    eax,eax
   1400057c7:	jmp    0x1400057dd
   1400057c9:	movsxd rcx,ebx
   1400057cc:	mov    eax,0x1
   1400057d1:	add    rcx,rcx
   1400057d4:	movzx  ecx,WORD PTR [r15+rcx*8+0x8]
   1400057da:	mov    WORD PTR [rsi],cx
   1400057dd:	mov    rbx,QWORD PTR [rsp+0x30]
   1400057e2:	mov    rbp,QWORD PTR [rsp+0x38]
   1400057e7:	mov    rsi,QWORD PTR [rsp+0x40]
   1400057ec:	mov    rdi,QWORD PTR [rsp+0x48]
   1400057f1:	add    rsp,0x20
   1400057f5:	pop    r15
   1400057f7:	ret    
   1400057f8:	int3   
   1400057f9:	int3   
   1400057fa:	int3   
   1400057fb:	int3   
   1400057fc:	int3   
   1400057fd:	int3   
   1400057fe:	int3   
   1400057ff:	int3   
   140005800:	rex push rbx
   140005802:	sub    rsp,0x20
   140005806:	cmp    QWORD PTR [rcx],0x0
   14000580a:	mov    rbx,rcx
   14000580d:	je     0x140005824
   14000580f:	mov    rcx,QWORD PTR [rbx]
   140005812:	mov    rax,QWORD PTR [rcx]
   140005815:	mov    QWORD PTR [rbx],rax
   140005818:	call   QWORD PTR [rip+0x2cdaa]        # 0x1400325c8
   14000581e:	cmp    QWORD PTR [rbx],0x0
   140005822:	jne    0x14000580f
   140005824:	add    rsp,0x20
   140005828:	pop    rbx
   140005829:	ret    
   14000582a:	int3   
   14000582b:	int3   
   14000582c:	int3   
   14000582d:	int3   
   14000582e:	int3   
   14000582f:	int3   
   140005830:	rex push rbx
   140005832:	push   rsi
   140005833:	push   rdi
   140005834:	push   r12
   140005836:	push   r13
   140005838:	push   r14
   14000583a:	push   r15
   14000583c:	mov    eax,0x21a0
   140005841:	call   0x14002e8c0
   140005846:	sub    rsp,rax
   140005849:	mov    QWORD PTR [rsp+0x78],0xfffffffffffffffe
   140005852:	mov    rax,QWORD PTR [rip+0x457c7]        # 0x14004b020
   140005859:	xor    rax,rsp
   14000585c:	mov    QWORD PTR [rsp+0x2190],rax
   140005864:	mov    r15,r8
   140005867:	mov    QWORD PTR [rsp+0x40],r8
   14000586c:	mov    r13,rdx
   14000586f:	mov    r12,rcx
   140005872:	mov    QWORD PTR [rsp+0x50],rcx
   140005877:	mov    QWORD PTR [rsp+0x48],rdx
   14000587c:	mov    QWORD PTR [rsp+0x60],r8
   140005881:	mov    QWORD PTR [rsp+0x70],r9
   140005886:	xor    ebx,ebx
   140005888:	mov    WORD PTR [rsp+0x30],bx
   14000588d:	lea    rdx,[rsp+0x190]
   140005895:	call   0x140006078
   14000589a:	test   eax,eax
   14000589c:	js     0x140005d1b
   1400058a2:	lea    rdx,[rsp+0x30]
   1400058a7:	lea    rcx,[rsp+0x190]
   1400058af:	call   0x140005700
   1400058b4:	test   eax,eax
   1400058b6:	jne    0x1400058c2
   1400058b8:	mov    eax,0x80020009
   1400058bd:	jmp    0x140005d1b
   1400058c2:	mov    rcx,QWORD PTR [r12]
   1400058c6:	movzx  eax,WORD PTR [rcx]
   1400058c9:	cmp    eax,0x20
   1400058cc:	ja     0x1400058ea
   1400058ce:	movabs rdx,0x100002600
   1400058d8:	bt     rdx,rax
   1400058dc:	jae    0x1400058ea
   1400058de:	call   QWORD PTR [rip+0x2cab4]        # 0x140032398
   1400058e4:	mov    QWORD PTR [r12],rax
   1400058e8:	jmp    0x1400058c2
   1400058ea:	lea    rdx,[rsp+0x190]
   1400058f2:	mov    rcx,r12
   1400058f5:	call   0x140006078
   1400058fa:	test   eax,eax
   1400058fc:	js     0x140005d1b
   140005902:	movzx  eax,WORD PTR [rsp+0x30]
   140005907:	cmp    eax,0x8
   14000590a:	je     0x140005cb5
   140005910:	cmp    eax,0x11
   140005913:	je     0x140005afa
   140005919:	cmp    eax,0x13
   14000591c:	je     0x140005ac2
   140005922:	cmp    eax,0x4008
   140005927:	jne    0x140005d07
   14000592d:	lea    rcx,[rsp+0x190]
   140005935:	or     rsi,0xffffffffffffffff
   140005939:	mov    rax,rsi
   14000593c:	inc    rax
   14000593f:	cmp    WORD PTR [rcx+rax*2],bx
   140005943:	jne    0x14000593c
   140005945:	add    eax,0x2
   140005948:	mov    QWORD PTR [rsp+0x80],rbx
   140005950:	movsxd rcx,eax
   140005953:	test   eax,eax
   140005955:	je     0x140005993
   140005957:	xor    edx,edx
   140005959:	mov    rax,rsi
   14000595c:	div    rcx
   14000595f:	cmp    rax,0x2
   140005963:	jb     0x140005989
   140005965:	lea    rdx,[rcx+rcx*1]
   140005969:	cmp    rdx,0x100
   140005970:	jbe    0x140005993
   140005972:	lea    rcx,[rsp+0x80]
   14000597a:	call   0x140005288
   14000597f:	mov    rdi,QWORD PTR [rsp+0x80]
   140005987:	jmp    0x1400059a3
   140005989:	mov    ecx,0x80070057
   14000598e:	call   0x140005d50
   140005993:	lea    rdi,[rsp+0x88]
   14000599b:	mov    QWORD PTR [rsp+0x80],rdi
   1400059a3:	jmp    0x1400059c7
   1400059a5:	xor    ebx,ebx
   1400059a7:	or     rsi,0xffffffffffffffff
   1400059ab:	mov    rdi,QWORD PTR [rsp+0x80]
   1400059b3:	mov    r12,QWORD PTR [rsp+0x50]
   1400059b8:	mov    r13,QWORD PTR [rsp+0x48]
   1400059bd:	mov    rax,QWORD PTR [rsp+0x60]
   1400059c2:	mov    QWORD PTR [rsp+0x40],rax
   1400059c7:	test   rdi,rdi
   1400059ca:	je     0x140005a9a
   1400059d0:	lea    r14,[rsp+0x190]
   1400059d8:	cmp    WORD PTR [rsp+0x190],bx
   1400059e0:	je     0x140005a27
   1400059e2:	mov    r15d,0x30
   1400059e8:	mov    rcx,r14
   1400059eb:	call   QWORD PTR [rip+0x2c9a7]        # 0x140032398
   1400059f1:	movzx  ecx,WORD PTR [r14]
   1400059f5:	cmp    cx,0x5c
   1400059f9:	jne    0x140005a16
   1400059fb:	cmp    WORD PTR [rax],r15w
   1400059ff:	jne    0x140005a16
   140005a01:	mov    WORD PTR [rdi],bx
   140005a04:	add    rdi,0x2
   140005a08:	mov    rcx,rax
   140005a0b:	call   QWORD PTR [rip+0x2c987]        # 0x140032398
   140005a11:	mov    r14,rax
   140005a14:	jmp    0x140005a21
   140005a16:	mov    WORD PTR [rdi],cx
   140005a19:	add    rdi,0x2
   140005a1d:	add    r14,0x2
   140005a21:	cmp    WORD PTR [r14],bx
   140005a25:	jne    0x1400059e8
   140005a27:	mov    DWORD PTR [rdi],0x0
   140005a2d:	mov    eax,ebx
   140005a2f:	mov    rdx,QWORD PTR [rsp+0x80]
   140005a37:	test   rdx,rdx
   140005a3a:	setne  al
   140005a3d:	test   eax,eax
   140005a3f:	jne    0x140005a4c
   140005a41:	mov    ecx,0x80004005
   140005a46:	call   0x140005d50
   140005a4b:	int3   
   140005a4c:	mov    r9d,ebx
   140005a4f:	mov    r8,rdx
   140005a52:	mov    rcx,rsi
   140005a55:	inc    rcx
   140005a58:	cmp    WORD PTR [r8+rcx*2],bx
   140005a5d:	jne    0x140005a55
   140005a5f:	inc    ecx
   140005a61:	lea    r8,[r8+rcx*2]
   140005a65:	lea    r9d,[r9+rcx*2]
   140005a69:	cmp    ecx,0x1
   140005a6c:	jne    0x140005a52
   140005a6e:	mov    DWORD PTR [rsp+0x28],r9d
   140005a73:	mov    QWORD PTR [rsp+0x20],rdx
   140005a78:	lea    r9d,[rcx+0x6]
   140005a7c:	xor    r8d,r8d
   140005a7f:	mov    rdx,QWORD PTR [rsp+0x40]
   140005a84:	mov    rcx,QWORD PTR [r13+0x0]
   140005a88:	call   QWORD PTR [rip+0x2c5ca]        # 0x140032058
   140005a8e:	mov    esi,eax
   140005a90:	mov    rdi,QWORD PTR [rsp+0x80]
   140005a98:	jmp    0x140005a9f
   140005a9a:	mov    esi,0xe
   140005a9f:	lea    rax,[rsp+0x88]
   140005aa7:	cmp    rdi,rax
   140005aaa:	je     0x140005cfa
   140005ab0:	lea    rcx,[rsp+0x80]
   140005ab8:	call   0x140005258
   140005abd:	jmp    0x140005cfa
   140005ac2:	lea    r9,[rsp+0x30]
   140005ac7:	xor    r8d,r8d
   140005aca:	xor    edx,edx
   140005acc:	lea    rcx,[rsp+0x190]
   140005ad4:	call   QWORD PTR [rip+0x2c87e]        # 0x140032358
   140005ada:	mov    eax,DWORD PTR [rsp+0x30]
   140005ade:	mov    DWORD PTR [rsp+0x38],eax
   140005ae2:	mov    DWORD PTR [rsp+0x28],0x4
   140005aea:	lea    rax,[rsp+0x38]
   140005aef:	mov    r9d,0x4
   140005af5:	jmp    0x140005ce3
   140005afa:	lea    rax,[rsp+0x190]
   140005b02:	or     rsi,0xffffffffffffffff
   140005b06:	mov    rdi,rsi
   140005b09:	inc    rdi
   140005b0c:	cmp    WORD PTR [rax+rdi*2],bx
   140005b10:	jne    0x140005b09
   140005b12:	mov    DWORD PTR [rsp+0x38],edi
   140005b16:	test   dil,0x1
   140005b1a:	je     0x140005b26
   140005b1c:	mov    eax,0x80004005
   140005b21:	jmp    0x140005d1b
   140005b26:	mov    eax,edi
   140005b28:	cdq    
   140005b29:	sub    eax,edx
   140005b2b:	sar    eax,1
   140005b2d:	movsxd r14,eax
   140005b30:	mov    DWORD PTR [rsp+0x30],r14d
   140005b35:	mov    QWORD PTR [rsp+0x80],rbx
   140005b3d:	mov    rcx,r14
   140005b40:	test   eax,eax
   140005b42:	je     0x140005b7f
   140005b44:	xor    edx,edx
   140005b46:	mov    rax,rsi
   140005b49:	div    rcx
   140005b4c:	cmp    rax,0x1
   140005b50:	jae    0x140005b5c
   140005b52:	mov    ecx,0x80070057
   140005b57:	call   0x140005d50
   140005b5c:	cmp    rcx,0x100
   140005b63:	jbe    0x140005b7f
   140005b65:	mov    rdx,rcx
   140005b68:	lea    rcx,[rsp+0x80]
   140005b70:	call   0x140005288
   140005b75:	mov    rcx,QWORD PTR [rsp+0x80]
   140005b7d:	jmp    0x140005b8f
   140005b7f:	lea    rcx,[rsp+0x88]
   140005b87:	mov    QWORD PTR [rsp+0x80],rcx
   140005b8f:	mov    rsi,QWORD PTR [rsp+0x40]
   140005b94:	jmp    0x140005bb8
   140005b96:	xor    ebx,ebx
   140005b98:	mov    edi,DWORD PTR [rsp+0x38]
   140005b9c:	mov    r14d,DWORD PTR [rsp+0x30]
   140005ba1:	mov    rcx,QWORD PTR [rsp+0x80]
   140005ba9:	mov    r12,QWORD PTR [rsp+0x50]
   140005bae:	mov    r13,QWORD PTR [rsp+0x48]
   140005bb3:	mov    rsi,QWORD PTR [rsp+0x60]
   140005bb8:	test   rcx,rcx
   140005bbb:	jne    0x140005be0
   140005bbd:	lea    rax,[rsp+0x88]
   140005bc5:	test   rax,rax
   140005bc8:	je     0x140005b1c
   140005bce:	lea    rcx,[rsp+0x80]
   140005bd6:	call   0x140005258
   140005bdb:	jmp    0x140005b1c
   140005be0:	movsxd r8,r14d
   140005be3:	xor    edx,edx
   140005be5:	call   0x14002e2ce
   140005bea:	mov    r8d,ebx
   140005bed:	mov    r9,rbx
   140005bf0:	movsxd r11,edi
   140005bf3:	test   edi,edi
   140005bf5:	jle    0x140005c6a
   140005bf7:	mov    r15d,0x30
   140005bfd:	mov    eax,r8d
   140005c00:	cdq    
   140005c01:	sub    eax,edx
   140005c03:	sar    eax,1
   140005c05:	movsxd r10,eax
   140005c08:	add    r10,QWORD PTR [rsp+0x80]
   140005c10:	movzx  edx,WORD PTR [rsp+r9*2+0x190]
   140005c19:	mov    eax,edx
   140005c1b:	cmp    edx,r15d
   140005c1e:	jl     0x140005c46
   140005c20:	cmp    eax,0x39
   140005c23:	jle    0x140005c41
   140005c25:	cmp    eax,0x40
   140005c28:	jle    0x140005c46
   140005c2a:	cmp    eax,0x46
   140005c2d:	jle    0x140005c3c
   140005c2f:	add    eax,0xffffff9f
   140005c32:	cmp    eax,0x5
   140005c35:	ja     0x140005c46
   140005c37:	sub    dl,0x57
   140005c3a:	jmp    0x140005c48
   140005c3c:	sub    dl,0x37
   140005c3f:	jmp    0x140005c48
   140005c41:	sub    dl,r15b
   140005c44:	jmp    0x140005c48
   140005c46:	mov    dl,bl
   140005c48:	mov    ecx,r8d
   140005c4b:	and    ecx,0x1
   140005c4e:	shl    ecx,0x2
   140005c51:	mov    eax,0x4
   140005c56:	sub    eax,ecx
   140005c58:	mov    cl,al
   140005c5a:	shl    dl,cl
   140005c5c:	or     BYTE PTR [r10],dl
   140005c5f:	inc    r8d
   140005c62:	inc    r9
   140005c65:	cmp    r9,r11
   140005c68:	jl     0x140005bfd
   140005c6a:	mov    DWORD PTR [rsp+0x28],r14d
   140005c6f:	mov    rax,QWORD PTR [rsp+0x80]
   140005c77:	mov    QWORD PTR [rsp+0x20],rax
   140005c7c:	mov    r9d,0x3
   140005c82:	xor    r8d,r8d
   140005c85:	mov    rdx,rsi
   140005c88:	mov    rcx,QWORD PTR [r13+0x0]
   140005c8c:	call   QWORD PTR [rip+0x2c3c6]        # 0x140032058
   140005c92:	mov    esi,eax
   140005c94:	lea    rax,[rsp+0x88]
   140005c9c:	cmp    QWORD PTR [rsp+0x80],rax
   140005ca4:	je     0x140005cfa
   140005ca6:	lea    rcx,[rsp+0x80]
   140005cae:	call   0x140005258
   140005cb3:	jmp    0x140005cfa
   140005cb5:	lea    rax,[rsp+0x190]
   140005cbd:	or     rsi,0xffffffffffffffff
   140005cc1:	inc    rsi
   140005cc4:	cmp    WORD PTR [rax+rsi*2],bx
   140005cc8:	jne    0x140005cc1
   140005cca:	lea    eax,[rsi*2+0x2]
   140005cd1:	mov    DWORD PTR [rsp+0x28],eax
   140005cd5:	lea    rax,[rsp+0x190]
   140005cdd:	mov    r9d,0x1
   140005ce3:	mov    QWORD PTR [rsp+0x20],rax
   140005ce8:	xor    r8d,r8d
   140005ceb:	mov    rdx,r15
   140005cee:	mov    rcx,QWORD PTR [r13+0x0]
   140005cf2:	call   QWORD PTR [rip+0x2c360]        # 0x140032058
   140005cf8:	mov    esi,eax
   140005cfa:	test   esi,esi
   140005cfc:	je     0x140005d07
   140005cfe:	mov    ecx,esi
   140005d00:	call   0x140006064
   140005d05:	jmp    0x140005d1b
   140005d07:	mov    rdx,QWORD PTR [rsp+0x70]
   140005d0c:	mov    rcx,r12
   140005d0f:	call   0x140006078
   140005d14:	test   eax,eax
   140005d16:	cmovs  ebx,eax
   140005d19:	mov    eax,ebx
   140005d1b:	mov    rcx,QWORD PTR [rsp+0x2190]
   140005d23:	xor    rcx,rsp
   140005d26:	call   0x14002dd00
   140005d2b:	add    rsp,0x21a0
   140005d32:	pop    r15
   140005d34:	pop    r14
   140005d36:	pop    r13
   140005d38:	pop    r12
   140005d3a:	pop    rdi
   140005d3b:	pop    rsi
   140005d3c:	pop    rbx
   140005d3d:	ret    
   140005d3e:	int3   
   140005d3f:	int3   
   140005d40:	int3   
   140005d41:	int3   
   140005d42:	int3   
   140005d43:	int3   
   140005d44:	mov    DWORD PTR [rcx],edx
   140005d46:	mov    rax,rcx
   140005d49:	ret    
   140005d4a:	int3   
   140005d4b:	int3   
   140005d4c:	int3   
   140005d4d:	int3   
   140005d4e:	int3   
   140005d4f:	int3   
   140005d50:	sub    rsp,0x28
   140005d54:	mov    edx,ecx
   140005d56:	lea    rcx,[rsp+0x40]
   140005d5b:	call   0x140005d44
   140005d60:	lea    rdx,[rip+0x43501]        # 0x140049268
   140005d67:	mov    ecx,DWORD PTR [rax]
   140005d69:	mov    DWORD PTR [rsp+0x38],ecx
   140005d6d:	lea    rcx,[rsp+0x38]
   140005d72:	call   0x14002e2da
   140005d77:	int3   
   140005d78:	int3   
   140005d79:	int3   
   140005d7a:	int3   
   140005d7b:	int3   
   140005d7c:	int3   
   140005d7d:	int3   
   140005d7e:	int3   
   140005d7f:	int3   
   140005d80:	mov    QWORD PTR [rsp+0x18],rbx
   140005d85:	push   rdi
   140005d86:	mov    eax,0x2030
   140005d8b:	call   0x14002e8c0
   140005d90:	sub    rsp,rax
   140005d93:	mov    rax,QWORD PTR [rip+0x45286]        # 0x14004b020
   140005d9a:	xor    rax,rsp
   140005d9d:	mov    QWORD PTR [rsp+0x2020],rax
   140005da5:	cmp    WORD PTR [rdx],0x3d
   140005da9:	mov    rdi,rdx
   140005dac:	mov    rbx,rcx
   140005daf:	jne    0x140005e00
   140005db1:	call   0x140006078
   140005db6:	test   eax,eax
   140005db8:	js     0x140005e02
   140005dba:	mov    rcx,QWORD PTR [rbx]
   140005dbd:	movzx  eax,WORD PTR [rcx]
   140005dc0:	cmp    eax,0x20
   140005dc3:	ja     0x140005de0
   140005dc5:	movabs rdx,0x100002600
   140005dcf:	bt     rdx,rax
   140005dd3:	jae    0x140005de0
   140005dd5:	call   QWORD PTR [rip+0x2c5bd]        # 0x140032398
   140005ddb:	mov    QWORD PTR [rbx],rax
   140005dde:	jmp    0x140005dba
   140005de0:	lea    rdx,[rsp+0x20]
   140005de5:	mov    rcx,rbx
   140005de8:	call   0x140006078
   140005ded:	test   eax,eax
   140005def:	js     0x140005e02
   140005df1:	mov    rdx,rdi
   140005df4:	mov    rcx,rbx
   140005df7:	call   0x140006078
   140005dfc:	test   eax,eax
   140005dfe:	js     0x140005e02
   140005e00:	xor    eax,eax
   140005e02:	mov    rcx,QWORD PTR [rsp+0x2020]
   140005e0a:	xor    rcx,rsp
   140005e0d:	call   0x14002dd00
   140005e12:	mov    rbx,QWORD PTR [rsp+0x2050]
   140005e1a:	add    rsp,0x2030
   140005e21:	pop    rdi
   140005e22:	ret    
   140005e23:	int3   
   140005e24:	int3   
   140005e25:	int3   
   140005e26:	int3   
   140005e27:	int3   
   140005e28:	int3   
   140005e29:	int3   
   140005e2a:	int3   
   140005e2b:	int3   
   140005e2c:	mov    QWORD PTR [rsp+0x18],rbx
   140005e31:	push   rbp
   140005e32:	push   rsi
   140005e33:	push   rdi
   140005e34:	lea    rbp,[rsp-0x180]
   140005e3c:	sub    rsp,0x280
   140005e43:	mov    rax,QWORD PTR [rip+0x451d6]        # 0x14004b020
   140005e4a:	xor    rax,rsp
   140005e4d:	mov    QWORD PTR [rbp+0x170],rax
   140005e54:	xor    eax,eax
   140005e56:	mov    rdi,rcx
   140005e59:	mov    rcx,QWORD PTR [rcx]
   140005e5c:	mov    r9d,0x2001f
   140005e62:	mov    QWORD PTR [rsp+0x48],rax
   140005e67:	xor    r8d,r8d
   140005e6a:	mov    QWORD PTR [rsp+0x50],rax
   140005e6f:	mov    rsi,rdx
   140005e72:	mov    QWORD PTR [rsp+0x58],rax
   140005e77:	mov    QWORD PTR [rsp+0x60],rax
   140005e7c:	lea    rax,[rsp+0x60]
   140005e81:	mov    QWORD PTR [rsp+0x20],rax
   140005e86:	call   QWORD PTR [rip+0x2c1c4]        # 0x140032050
   140005e8c:	mov    ebx,eax
   140005e8e:	test   eax,eax
   140005e90:	jne    0x140005f2f
   140005e96:	mov    rcx,QWORD PTR [rsp+0x48]
   140005e9b:	test   rcx,rcx
   140005e9e:	je     0x140005ea8
   140005ea0:	call   QWORD PTR [rip+0x2c192]        # 0x140032038
   140005ea6:	mov    ebx,eax
   140005ea8:	mov    rcx,QWORD PTR [rsp+0x60]
   140005ead:	mov    QWORD PTR [rsp+0x48],rcx
   140005eb2:	test   ebx,ebx
   140005eb4:	jne    0x140005f2f
   140005eb6:	jmp    0x140005ed2
   140005eb8:	lea    rdx,[rsp+0x70]
   140005ebd:	lea    rcx,[rsp+0x48]
   140005ec2:	call   0x140005e2c
   140005ec7:	mov    ebx,eax
   140005ec9:	test   eax,eax
   140005ecb:	jne    0x140005f2f
   140005ecd:	mov    rcx,QWORD PTR [rsp+0x48]
   140005ed2:	lea    rax,[rsp+0x68]
   140005ed7:	mov    DWORD PTR [rsp+0x40],0x100
   140005edf:	mov    QWORD PTR [rsp+0x38],rax
   140005ee4:	lea    r9,[rsp+0x40]
   140005ee9:	and    QWORD PTR [rsp+0x30],0x0
   140005eef:	lea    r8,[rsp+0x70]
   140005ef4:	and    QWORD PTR [rsp+0x28],0x0
   140005efa:	xor    edx,edx
   140005efc:	and    QWORD PTR [rsp+0x20],0x0
   140005f02:	call   QWORD PTR [rip+0x2c140]        # 0x140032048
   140005f08:	test   eax,eax
   140005f0a:	je     0x140005eb8
   140005f0c:	mov    rcx,QWORD PTR [rsp+0x48]
   140005f11:	test   rcx,rcx
   140005f14:	je     0x140005f22
   140005f16:	call   QWORD PTR [rip+0x2c11c]        # 0x140032038
   140005f1c:	and    QWORD PTR [rsp+0x48],0x0
   140005f22:	mov    rdx,rsi
   140005f25:	mov    rcx,rdi
   140005f28:	call   0x140005f94
   140005f2d:	mov    ebx,eax
   140005f2f:	mov    rcx,QWORD PTR [rsp+0x48]
   140005f34:	test   rcx,rcx
   140005f37:	je     0x140005f3f
   140005f39:	call   QWORD PTR [rip+0x2c0f9]        # 0x140032038
   140005f3f:	mov    eax,ebx
   140005f41:	mov    rcx,QWORD PTR [rbp+0x170]
   140005f48:	xor    rcx,rsp
   140005f4b:	call   0x14002dd00
   140005f50:	mov    rbx,QWORD PTR [rsp+0x2b0]
   140005f58:	add    rsp,0x280
   140005f5f:	pop    rdi
   140005f60:	pop    rsi
   140005f61:	pop    rbp
   140005f62:	ret    
   140005f63:	int3   
   140005f64:	int3   
   140005f65:	int3   
   140005f66:	int3   
   140005f67:	int3   
   140005f68:	int3   
   140005f69:	int3   
   140005f6a:	int3   
   140005f6b:	int3   
   140005f6c:	rex push rbx
   140005f6e:	sub    rsp,0x20
   140005f72:	mov    rbx,rcx
   140005f75:	mov    rcx,QWORD PTR [rcx]
   140005f78:	test   rcx,rcx
   140005f7b:	je     0x140005f87
   140005f7d:	call   QWORD PTR [rip+0x2c0b5]        # 0x140032038
   140005f83:	and    QWORD PTR [rbx],0x0
   140005f87:	add    rsp,0x20
   140005f8b:	pop    rbx
   140005f8c:	ret    
   140005f8d:	int3   
   140005f8e:	int3   
   140005f8f:	int3   
   140005f90:	int3   
   140005f91:	int3   
   140005f92:	int3   
   140005f93:	int3   
   140005f94:	mov    QWORD PTR [rsp+0x8],rbx
   140005f99:	mov    QWORD PTR [rsp+0x10],rsi
   140005f9e:	push   rdi
   140005f9f:	sub    rsp,0x20
   140005fa3:	cmp    QWORD PTR [rcx+0x8],0x0
   140005fa8:	mov    rsi,rdx
   140005fab:	mov    rbx,rcx
   140005fae:	jne    0x14000600a
   140005fb0:	cmp    QWORD PTR [rcx+0x10],0x0
   140005fb5:	jne    0x14000600a
   140005fb7:	lea    rcx,[rip+0x2f822]        # 0x1400357e0
   140005fbe:	call   QWORD PTR [rip+0x2c2ec]        # 0x1400322b0
   140005fc4:	test   rax,rax
   140005fc7:	je     0x140005fdf
   140005fc9:	lea    rdx,[rip+0x2f868]        # 0x140035838
   140005fd0:	mov    rcx,rax
   140005fd3:	call   QWORD PTR [rip+0x2c2c7]        # 0x1400322a0
   140005fd9:	mov    QWORD PTR [rbx+0x8],rax
   140005fdd:	jmp    0x14000600a
   140005fdf:	xor    r8d,r8d
   140005fe2:	lea    rcx,[rip+0x2df2f]        # 0x140033f18
   140005fe9:	xor    edx,edx
   140005feb:	call   QWORD PTR [rip+0x2c0f7]        # 0x1400320e8
   140005ff1:	test   rax,rax
   140005ff4:	je     0x14000600a
   140005ff6:	lea    rdx,[rip+0x2f84b]        # 0x140035848
   140005ffd:	mov    rcx,rax
   140006000:	call   QWORD PTR [rip+0x2c29a]        # 0x1400322a0
   140006006:	mov    QWORD PTR [rbx+0x10],rax
   14000600a:	mov    rdi,QWORD PTR [rbx+0x8]
   14000600e:	test   rdi,rdi
   140006011:	je     0x14000602c
   140006013:	mov    rcx,rdi
   140006016:	call   QWORD PTR [rip+0x2c68c]        # 0x1400326a8
   14000601c:	mov    rcx,QWORD PTR [rbx]
   14000601f:	xor    r9d,r9d
   140006022:	xor    r8d,r8d
   140006025:	mov    rdx,rsi
   140006028:	call   rdi
   14000602a:	jmp    0x14000604e
   14000602c:	mov    rdi,QWORD PTR [rbx+0x10]
   140006030:	test   rdi,rdi
   140006033:	je     0x140006048
   140006035:	mov    rcx,rdi
   140006038:	call   QWORD PTR [rip+0x2c66a]        # 0x1400326a8
   14000603e:	mov    rcx,QWORD PTR [rbx]
   140006041:	mov    rdx,rsi
   140006044:	call   rdi
   140006046:	jmp    0x14000604e
   140006048:	call   QWORD PTR [rip+0x2c23a]        # 0x140032288
   14000604e:	mov    rbx,QWORD PTR [rsp+0x30]
   140006053:	mov    rsi,QWORD PTR [rsp+0x38]
   140006058:	add    rsp,0x20
   14000605c:	pop    rdi
   14000605d:	ret    
   14000605e:	int3   
   14000605f:	int3   
   140006060:	int3   
   140006061:	int3   
   140006062:	int3   
   140006063:	int3   
   140006064:	movzx  eax,cx
   140006067:	or     eax,0x80070000
   14000606c:	test   ecx,ecx
   14000606e:	cmovle eax,ecx
   140006071:	ret    
   140006072:	int3   
   140006073:	int3   
   140006074:	int3   
   140006075:	int3   
   140006076:	int3   
   140006077:	int3   
   140006078:	mov    rax,rsp
   14000607b:	mov    QWORD PTR [rax+0x8],rbx
   14000607f:	mov    QWORD PTR [rax+0x10],rbp
   140006083:	mov    QWORD PTR [rax+0x18],rsi
   140006087:	mov    QWORD PTR [rax+0x20],rdi
   14000608b:	push   r12
   14000608d:	push   r14
   14000608f:	push   r15
   140006091:	sub    rsp,0x20
   140006095:	mov    rbx,rdx
   140006098:	mov    rdi,rcx
   14000609b:	movabs r12,0x100002600
   1400060a5:	mov    rcx,QWORD PTR [rdi]
   1400060a8:	movzx  eax,WORD PTR [rcx]
   1400060ab:	cmp    eax,0x20
   1400060ae:	ja     0x1400060c1
   1400060b0:	bt     r12,rax
   1400060b4:	jae    0x1400060c1
   1400060b6:	call   QWORD PTR [rip+0x2c2dc]        # 0x140032398
   1400060bc:	mov    QWORD PTR [rdi],rax
   1400060bf:	jmp    0x1400060a5
   1400060c1:	xor    r14d,r14d
   1400060c4:	cmp    r14w,WORD PTR [rcx]
   1400060c8:	je     0x1400061de
   1400060ce:	lea    r15d,[r14+0x27]
   1400060d2:	lea    rbp,[rbx+0x2000]
   1400060d9:	cmp    r15w,WORD PTR [rcx]
   1400060dd:	jne    0x14000617e
   1400060e3:	call   QWORD PTR [rip+0x2c2af]        # 0x140032398
   1400060e9:	mov    QWORD PTR [rdi],rax
   1400060ec:	cmp    r14w,WORD PTR [rax]
   1400060f0:	je     0x14000615e
   1400060f2:	mov    rcx,QWORD PTR [rdi]
   1400060f5:	cmp    r15w,WORD PTR [rcx]
   1400060f9:	jne    0x140006107
   1400060fb:	call   QWORD PTR [rip+0x2c297]        # 0x140032398
   140006101:	cmp    r15w,WORD PTR [rax]
   140006105:	jne    0x14000615e
   140006107:	mov    rcx,QWORD PTR [rdi]
   14000610a:	cmp    r15w,WORD PTR [rcx]
   14000610e:	jne    0x140006119
   140006110:	call   QWORD PTR [rip+0x2c282]        # 0x140032398
   140006116:	mov    QWORD PTR [rdi],rax
   140006119:	mov    rsi,QWORD PTR [rdi]
   14000611c:	mov    rcx,rsi
   14000611f:	call   QWORD PTR [rip+0x2c273]        # 0x140032398
   140006125:	mov    QWORD PTR [rdi],rax
   140006128:	sub    rax,rsi
   14000612b:	sar    rax,1
   14000612e:	lea    rcx,[rax+0x1]
   140006132:	lea    rcx,[rbx+rcx*2]
   140006136:	cmp    rcx,rbp
   140006139:	jae    0x1400061de
   14000613f:	test   eax,eax
   140006141:	jle    0x140006159
   140006143:	sub    rsi,rbx
   140006146:	mov    ecx,eax
   140006148:	movzx  eax,WORD PTR [rsi+rbx*1]
   14000614c:	mov    WORD PTR [rbx],ax
   14000614f:	add    rbx,0x2
   140006153:	sub    rcx,0x1
   140006157:	jne    0x140006148
   140006159:	mov    rax,QWORD PTR [rdi]
   14000615c:	jmp    0x1400060ec
   14000615e:	mov    rax,QWORD PTR [rdi]
   140006161:	cmp    r14w,WORD PTR [rax]
   140006165:	je     0x1400061de
   140006167:	cmp    rbx,rbp
   14000616a:	jae    0x1400061de
   14000616c:	mov    WORD PTR [rbx],r14w
   140006170:	mov    rcx,QWORD PTR [rdi]
   140006173:	call   QWORD PTR [rip+0x2c21f]        # 0x140032398
   140006179:	mov    QWORD PTR [rdi],rax
   14000617c:	jmp    0x1400061da
   14000617e:	mov    rsi,QWORD PTR [rdi]
   140006181:	movzx  eax,WORD PTR [rsi]
   140006184:	cmp    eax,0x20
   140006187:	ja     0x14000618f
   140006189:	bt     r12,rax
   14000618d:	jb     0x1400061d1
   14000618f:	mov    rcx,rsi
   140006192:	call   QWORD PTR [rip+0x2c200]        # 0x140032398
   140006198:	mov    QWORD PTR [rdi],rax
   14000619b:	sub    rax,rsi
   14000619e:	sar    rax,1
   1400061a1:	lea    rcx,[rax+0x1]
   1400061a5:	lea    rcx,[rbx+rcx*2]
   1400061a9:	cmp    rcx,rbp
   1400061ac:	jae    0x1400061de
   1400061ae:	test   eax,eax
   1400061b0:	jle    0x1400061c8
   1400061b2:	sub    rsi,rbx
   1400061b5:	mov    ecx,eax
   1400061b7:	movzx  eax,WORD PTR [rsi+rbx*1]
   1400061bb:	mov    WORD PTR [rbx],ax
   1400061be:	add    rbx,0x2
   1400061c2:	sub    rcx,0x1
   1400061c6:	jne    0x1400061b7
   1400061c8:	mov    rax,QWORD PTR [rdi]
   1400061cb:	cmp    r14w,WORD PTR [rax]
   1400061cf:	jne    0x14000617e
   1400061d1:	cmp    rbx,rbp
   1400061d4:	jae    0x1400061de
   1400061d6:	mov    WORD PTR [rbx],r14w
   1400061da:	xor    eax,eax
   1400061dc:	jmp    0x1400061e3
   1400061de:	mov    eax,0x80020009
   1400061e3:	mov    rbx,QWORD PTR [rsp+0x40]
   1400061e8:	mov    rbp,QWORD PTR [rsp+0x48]
   1400061ed:	mov    rsi,QWORD PTR [rsp+0x50]
   1400061f2:	mov    rdi,QWORD PTR [rsp+0x58]
   1400061f7:	add    rsp,0x20
   1400061fb:	pop    r15
   1400061fd:	pop    r14
   1400061ff:	pop    r12
   140006201:	ret    
   140006202:	int3   
   140006203:	int3   
   140006204:	int3   
   140006205:	int3   
   140006206:	int3   
   140006207:	int3   
   140006208:	rex push rbp
   14000620a:	push   rbx
   14000620b:	push   rsi
   14000620c:	push   rdi
   14000620d:	lea    rbp,[rsp-0x21f8]
   140006215:	mov    eax,0x22f8
   14000621a:	call   0x14002e8c0
   14000621f:	sub    rsp,rax
   140006222:	mov    QWORD PTR [rbp-0x38],0xfffffffffffffffe
   14000622a:	mov    rax,QWORD PTR [rip+0x44def]        # 0x14004b020
   140006231:	xor    rax,rsp
   140006234:	mov    QWORD PTR [rbp+0x21e0],rax
   14000623b:	mov    DWORD PTR [rsp+0x78],r9d
   140006240:	mov    QWORD PTR [rbp-0x78],r8
   140006244:	mov    rdi,rdx
   140006247:	mov    rax,rcx
   14000624a:	mov    QWORD PTR [rsp+0x70],rcx
   14000624f:	xor    ecx,ecx
   140006251:	mov    esi,ecx
   140006253:	mov    QWORD PTR [rbp-0x70],rcx
   140006257:	mov    QWORD PTR [rbp-0x68],rcx
   14000625b:	mov    QWORD PTR [rbp-0x60],rcx
   14000625f:	mov    ecx,DWORD PTR [rbp+0x2240]
   140006265:	mov    DWORD PTR [rbp-0x40],ecx
   140006268:	mov    rcx,rax
   14000626b:	call   0x140006078
   140006270:	test   eax,eax
   140006272:	mov    ebx,eax
   140006274:	js     0x1400069b4
   14000627a:	cmp    WORD PTR [rdi],0x7d
   14000627e:	je     0x1400069b4
   140006284:	mov    eax,0x1
   140006289:	mov    DWORD PTR [rsp+0x68],eax
   14000628d:	lea    rdx,[rip+0x2dd0c]        # 0x140033fa0
   140006294:	mov    rcx,rdi
   140006297:	call   QWORD PTR [rip+0x2be53]        # 0x1400320f0
   14000629d:	xor    ecx,ecx
   14000629f:	mov    ebx,ecx
   1400062a1:	test   eax,eax
   1400062a3:	sete   bl
   1400062a6:	mov    DWORD PTR [rsp+0x60],ebx
   1400062aa:	lea    rdx,[rip+0x2dcbf]        # 0x140033f70
   1400062b1:	mov    rcx,rdi
   1400062b4:	call   QWORD PTR [rip+0x2be36]        # 0x1400320f0
   1400062ba:	test   eax,eax
   1400062bc:	je     0x1400062c6
   1400062be:	test   ebx,ebx
   1400062c0:	je     0x14000638b
   1400062c6:	mov    rdx,rdi
   1400062c9:	mov    rcx,QWORD PTR [rsp+0x70]
   1400062ce:	call   0x140006078
   1400062d3:	mov    ebx,eax
   1400062d5:	xor    edx,edx
   1400062d7:	test   eax,eax
   1400062d9:	js     0x1400069b4
   1400062df:	cmp    DWORD PTR [rsp+0x78],edx
   1400062e3:	je     0x14000638b
   1400062e9:	mov    QWORD PTR [rbp-0x58],rdx
   1400062ed:	mov    QWORD PTR [rbp-0x50],rdx
   1400062f1:	mov    QWORD PTR [rbp-0x48],rdx
   1400062f5:	mov    rcx,rdi
   1400062f8:	movzx  eax,WORD PTR [rdi]
   1400062fb:	jmp    0x14000630f
   1400062fd:	cmp    ax,0x5c
   140006301:	je     0x140006316
   140006303:	call   QWORD PTR [rip+0x2c08f]        # 0x140032398
   140006309:	mov    rcx,rax
   14000630c:	movzx  eax,WORD PTR [rax]
   14000630f:	test   ax,ax
   140006312:	jne    0x1400062fd
   140006314:	jmp    0x14000631f
   140006316:	test   rcx,rcx
   140006319:	jne    0x140006983
   14000631f:	lea    rbx,[rip+0x2dffa]        # 0x140034320
   140006326:	mov    rdx,QWORD PTR [rbx]
   140006329:	mov    rcx,rdi
   14000632c:	call   QWORD PTR [rip+0x2bdbe]        # 0x1400320f0
   140006332:	test   eax,eax
   140006334:	je     0x14000635a
   140006336:	add    rbx,0x8
   14000633a:	lea    rax,[rip+0x2e03f]        # 0x140034380
   140006341:	cmp    rbx,rax
   140006344:	jl     0x140006326
   140006346:	mov    rax,QWORD PTR [rbp-0x78]
   14000634a:	mov    QWORD PTR [rbp-0x58],rax
   14000634e:	mov    rdx,rdi
   140006351:	lea    rcx,[rbp-0x58]
   140006355:	call   0x140005e2c
   14000635a:	xor    eax,eax
   14000635c:	cmp    DWORD PTR [rsp+0x60],eax
   140006360:	je     0x14000638b
   140006362:	mov    rdx,rdi
   140006365:	mov    rcx,QWORD PTR [rsp+0x70]
   14000636a:	call   0x140006078
   14000636f:	mov    ebx,eax
   140006371:	test   eax,eax
   140006373:	js     0x1400069b4
   140006379:	mov    rdx,rdi
   14000637c:	mov    rcx,QWORD PTR [rsp+0x70]
   140006381:	call   0x140005d80
   140006386:	jmp    0x140006634
   14000638b:	lea    rdx,[rip+0x2dbf6]        # 0x140033f88
   140006392:	mov    rcx,rdi
   140006395:	call   QWORD PTR [rip+0x2bd55]        # 0x1400320f0
   14000639b:	xor    ecx,ecx
   14000639d:	test   eax,eax
   14000639f:	jne    0x1400063bc
   1400063a1:	mov    DWORD PTR [rsp+0x68],ecx
   1400063a5:	mov    rdx,rdi
   1400063a8:	mov    rcx,QWORD PTR [rsp+0x70]
   1400063ad:	call   0x140006078
   1400063b2:	mov    ebx,eax
   1400063b4:	test   eax,eax
   1400063b6:	js     0x1400069b4
   1400063bc:	lea    rdx,[rip+0x2dba5]        # 0x140033f68
   1400063c3:	mov    rcx,rdi
   1400063c6:	call   QWORD PTR [rip+0x2bd24]        # 0x1400320f0
   1400063cc:	xor    edx,edx
   1400063ce:	test   eax,eax
   1400063d0:	jne    0x1400064c7
   1400063d6:	lea    rdx,[rbp+0x1e0]
   1400063dd:	mov    rcx,QWORD PTR [rsp+0x70]
   1400063e2:	call   0x140006078
   1400063e7:	mov    ebx,eax
   1400063e9:	test   eax,eax
   1400063eb:	js     0x1400069b4
   1400063f1:	mov    rdx,rdi
   1400063f4:	mov    rcx,QWORD PTR [rsp+0x70]
   1400063f9:	call   0x140006078
   1400063fe:	mov    ebx,eax
   140006400:	xor    edx,edx
   140006402:	test   eax,eax
   140006404:	js     0x1400069b4
   14000640a:	cmp    WORD PTR [rdi],0x3d
   14000640e:	jne    0x140006983
   140006414:	cmp    DWORD PTR [rsp+0x78],edx
   140006418:	je     0x14000644b
   14000641a:	mov    QWORD PTR [rbp-0x50],rdx
   14000641e:	mov    QWORD PTR [rbp-0x48],rdx
   140006422:	mov    rax,QWORD PTR [rbp-0x78]
   140006426:	mov    QWORD PTR [rbp-0x58],rax
   14000642a:	mov    r9,rdi
   14000642d:	lea    r8,[rbp+0x1e0]
   140006434:	lea    rdx,[rbp-0x58]
   140006438:	mov    rcx,QWORD PTR [rsp+0x70]
   14000643d:	call   0x140005830
   140006442:	mov    ebx,eax
   140006444:	xor    edx,edx
   140006446:	jmp    0x140006638
   14000644b:	cmp    DWORD PTR [rbp+0x2240],edx
   140006451:	jne    0x1400064b5
   140006453:	cmp    DWORD PTR [rsp+0x68],edx
   140006457:	je     0x1400064b5
   140006459:	mov    QWORD PTR [rsp+0x68],rdx
   14000645e:	lea    rax,[rsp+0x68]
   140006463:	mov    QWORD PTR [rsp+0x20],rax
   140006468:	mov    r9d,0x20006
   14000646e:	xor    r8d,r8d
   140006471:	mov    rcx,QWORD PTR [rbp-0x78]
   140006475:	call   QWORD PTR [rip+0x2bbd5]        # 0x140032050
   14000647b:	test   eax,eax
   14000647d:	jne    0x1400069ab
   140006483:	mov    rbx,QWORD PTR [rsp+0x68]
   140006488:	mov    QWORD PTR [rbp-0x80],rbx
   14000648c:	lea    rdx,[rbp+0x1e0]
   140006493:	mov    rcx,rbx
   140006496:	call   QWORD PTR [rip+0x2bbcc]        # 0x140032068
   14000649c:	test   eax,0xfffffffd
   1400064a1:	jne    0x140006969
   1400064a7:	test   rbx,rbx
   1400064aa:	je     0x1400064b5
   1400064ac:	mov    rcx,rbx
   1400064af:	call   QWORD PTR [rip+0x2bb83]        # 0x140032038
   1400064b5:	mov    rdx,rdi
   1400064b8:	mov    rcx,QWORD PTR [rsp+0x70]
   1400064bd:	call   0x140005d80
   1400064c2:	jmp    0x140006270
   1400064c7:	mov    rcx,rdi
   1400064ca:	movzx  eax,WORD PTR [rdi]
   1400064cd:	jmp    0x1400064e3
   1400064cf:	cmp    ax,0x5c
   1400064d3:	je     0x1400064ea
   1400064d5:	call   QWORD PTR [rip+0x2bebd]        # 0x140032398
   1400064db:	mov    rcx,rax
   1400064de:	movzx  eax,WORD PTR [rax]
   1400064e1:	xor    edx,edx
   1400064e3:	test   ax,ax
   1400064e6:	jne    0x1400064cf
   1400064e8:	jmp    0x1400064f3
   1400064ea:	test   rcx,rcx
   1400064ed:	jne    0x140006983
   1400064f3:	cmp    DWORD PTR [rsp+0x78],edx
   1400064f7:	je     0x140006695
   1400064fd:	mov    QWORD PTR [rsp+0x68],rdx
   140006502:	lea    rax,[rsp+0x68]
   140006507:	mov    QWORD PTR [rsp+0x20],rax
   14000650c:	mov    r9d,0x2001f
   140006512:	xor    r8d,r8d
   140006515:	mov    rdx,rdi
   140006518:	mov    rbx,QWORD PTR [rbp-0x78]
   14000651c:	mov    rcx,rbx
   14000651f:	call   QWORD PTR [rip+0x2bb2b]        # 0x140032050
   140006525:	xor    ecx,ecx
   140006527:	test   eax,eax
   140006529:	jne    0x14000654e
   14000652b:	mov    eax,ecx
   14000652d:	test   rsi,rsi
   140006530:	je     0x14000653d
   140006532:	mov    rcx,rsi
   140006535:	call   QWORD PTR [rip+0x2bafd]        # 0x140032038
   14000653b:	xor    ecx,ecx
   14000653d:	mov    rsi,QWORD PTR [rsp+0x68]
   140006542:	mov    QWORD PTR [rbp-0x70],rsi
   140006546:	test   eax,eax
   140006548:	je     0x1400065fd
   14000654e:	mov    QWORD PTR [rsp+0x68],rcx
   140006553:	lea    rax,[rsp+0x68]
   140006558:	mov    QWORD PTR [rsp+0x20],rax
   14000655d:	mov    r9d,0x20019
   140006563:	xor    r8d,r8d
   140006566:	mov    rdx,rdi
   140006569:	mov    rcx,rbx
   14000656c:	call   QWORD PTR [rip+0x2bade]        # 0x140032050
   140006572:	xor    ecx,ecx
   140006574:	test   eax,eax
   140006576:	jne    0x140006597
   140006578:	mov    eax,ecx
   14000657a:	test   rsi,rsi
   14000657d:	je     0x14000658a
   14000657f:	mov    rcx,rsi
   140006582:	call   QWORD PTR [rip+0x2bab0]        # 0x140032038
   140006588:	xor    ecx,ecx
   14000658a:	mov    rsi,QWORD PTR [rsp+0x68]
   14000658f:	mov    QWORD PTR [rbp-0x70],rsi
   140006593:	test   eax,eax
   140006595:	je     0x1400065fd
   140006597:	mov    QWORD PTR [rsp+0x68],rcx
   14000659c:	lea    rax,[rbp-0x3c]
   1400065a0:	mov    QWORD PTR [rsp+0x40],rax
   1400065a5:	lea    rax,[rsp+0x68]
   1400065aa:	mov    QWORD PTR [rsp+0x38],rax
   1400065af:	mov    QWORD PTR [rsp+0x30],rcx
   1400065b4:	mov    DWORD PTR [rsp+0x28],0x2001f
   1400065bc:	mov    DWORD PTR [rsp+0x20],ecx
   1400065c0:	xor    r9d,r9d
   1400065c3:	xor    r8d,r8d
   1400065c6:	mov    rdx,rdi
   1400065c9:	mov    rcx,rbx
   1400065cc:	call   QWORD PTR [rip+0x2ba8e]        # 0x140032060
   1400065d2:	xor    edx,edx
   1400065d4:	test   eax,eax
   1400065d6:	jne    0x1400069ab
   1400065dc:	mov    eax,edx
   1400065de:	test   rsi,rsi
   1400065e1:	je     0x1400065ec
   1400065e3:	mov    rcx,rsi
   1400065e6:	call   QWORD PTR [rip+0x2ba4c]        # 0x140032038
   1400065ec:	mov    rsi,QWORD PTR [rsp+0x68]
   1400065f1:	mov    QWORD PTR [rbp-0x70],rsi
   1400065f5:	test   eax,eax
   1400065f7:	jne    0x1400069ab
   1400065fd:	mov    rdx,rdi
   140006600:	mov    rcx,QWORD PTR [rsp+0x70]
   140006605:	call   0x140006078
   14000660a:	mov    ebx,eax
   14000660c:	xor    edx,edx
   14000660e:	test   eax,eax
   140006610:	js     0x1400069b4
   140006616:	cmp    WORD PTR [rdi],0x3d
   14000661a:	jne    0x140006640
   14000661c:	mov    r9,rdi
   14000661f:	xor    r8d,r8d
   140006622:	lea    rdx,[rbp-0x70]
   140006626:	mov    rcx,QWORD PTR [rsp+0x70]
   14000662b:	call   0x140005830
   140006630:	mov    rsi,QWORD PTR [rbp-0x70]
   140006634:	xor    edx,edx
   140006636:	mov    ebx,eax
   140006638:	test   eax,eax
   14000663a:	js     0x1400069b4
   140006640:	cmp    WORD PTR [rdi],0x7b
   140006644:	jne    0x14000627a
   14000664a:	or     rax,0xffffffffffffffff
   14000664e:	inc    rax
   140006651:	cmp    WORD PTR [rdi+rax*2],dx
   140006655:	jne    0x14000664e
   140006657:	mov    ecx,0x1
   14000665c:	cmp    rax,rcx
   14000665f:	jne    0x14000627a
   140006665:	mov    DWORD PTR [rsp+0x20],edx
   140006669:	mov    r9d,DWORD PTR [rsp+0x78]
   14000666e:	mov    r8,rsi
   140006671:	mov    rdx,rdi
   140006674:	mov    rcx,QWORD PTR [rsp+0x70]
   140006679:	call   0x140006208
   14000667e:	mov    ebx,eax
   140006680:	test   eax,eax
   140006682:	js     0x1400069b4
   140006688:	mov    rdx,rdi
   14000668b:	mov    rcx,QWORD PTR [rsp+0x70]
   140006690:	jmp    0x14000626b
   140006695:	mov    ebx,DWORD PTR [rbp+0x2240]
   14000669b:	test   ebx,ebx
   14000669d:	jne    0x1400066ee
   14000669f:	mov    QWORD PTR [rbp-0x80],rdx
   1400066a3:	lea    rax,[rbp-0x80]
   1400066a7:	mov    QWORD PTR [rsp+0x20],rax
   1400066ac:	mov    r9d,0x20019
   1400066b2:	xor    r8d,r8d
   1400066b5:	mov    rdx,rdi
   1400066b8:	mov    rcx,QWORD PTR [rbp-0x78]
   1400066bc:	call   QWORD PTR [rip+0x2b98e]        # 0x140032050
   1400066c2:	mov    DWORD PTR [rsp+0x60],eax
   1400066c6:	xor    edx,edx
   1400066c8:	test   eax,eax
   1400066ca:	jne    0x1400066f9
   1400066cc:	mov    eax,edx
   1400066ce:	mov    DWORD PTR [rsp+0x60],edx
   1400066d2:	test   rsi,rsi
   1400066d5:	je     0x1400066e4
   1400066d7:	mov    rcx,rsi
   1400066da:	call   QWORD PTR [rip+0x2b958]        # 0x140032038
   1400066e0:	mov    DWORD PTR [rsp+0x60],eax
   1400066e4:	mov    rsi,QWORD PTR [rbp-0x80]
   1400066e8:	mov    QWORD PTR [rbp-0x70],rsi
   1400066ec:	jmp    0x1400066f7
   1400066ee:	mov    eax,0x2
   1400066f3:	mov    DWORD PTR [rsp+0x60],eax
   1400066f7:	test   eax,eax
   1400066f9:	mov    eax,0x1
   1400066fe:	cmovne ebx,eax
   140006701:	mov    DWORD PTR [rbp+0x2240],ebx
   140006707:	or     r9,0xffffffffffffffff
   14000670b:	mov    r8,rdi
   14000670e:	mov    edx,0x104
   140006713:	lea    rcx,[rbp-0x30]
   140006717:	call   QWORD PTR [rip+0x2bebb]        # 0x1400325d8
   14000671d:	test   eax,eax
   14000671f:	je     0x140006745
   140006721:	cmp    eax,0xc
   140006724:	je     0x1400069a0
   14000672a:	cmp    eax,0x16
   14000672d:	je     0x140006995
   140006733:	cmp    eax,0x22
   140006736:	je     0x140006995
   14000673c:	cmp    eax,0x50
   14000673f:	jne    0x14000698a
   140006745:	mov    rdx,rdi
   140006748:	mov    rcx,QWORD PTR [rsp+0x70]
   14000674d:	call   0x140006078
   140006752:	mov    ebx,eax
   140006754:	test   eax,eax
   140006756:	js     0x1400069b4
   14000675c:	mov    rdx,rdi
   14000675f:	mov    rcx,QWORD PTR [rsp+0x70]
   140006764:	call   0x140005d80
   140006769:	mov    ebx,eax
   14000676b:	xor    edx,edx
   14000676d:	test   eax,eax
   14000676f:	js     0x1400069b4
   140006775:	cmp    WORD PTR [rdi],0x7b
   140006779:	jne    0x1400067dc
   14000677b:	or     rax,0xffffffffffffffff
   14000677f:	inc    rax
   140006782:	cmp    WORD PTR [rdi+rax*2],dx
   140006786:	jne    0x14000677f
   140006788:	mov    ecx,0x1
   14000678d:	cmp    rax,rcx
   140006790:	jne    0x1400067dc
   140006792:	mov    eax,DWORD PTR [rbp+0x2240]
   140006798:	mov    DWORD PTR [rsp+0x20],eax
   14000679c:	xor    r9d,r9d
   14000679f:	mov    r8,rsi
   1400067a2:	mov    rdx,rdi
   1400067a5:	mov    rcx,QWORD PTR [rsp+0x70]
   1400067aa:	call   0x140006208
   1400067af:	mov    ebx,eax
   1400067b1:	xor    edx,edx
   1400067b3:	test   eax,eax
   1400067b5:	jns    0x1400067c3
   1400067b7:	cmp    DWORD PTR [rbp+0x2240],edx
   1400067bd:	je     0x1400069b4
   1400067c3:	mov    rdx,rdi
   1400067c6:	mov    rcx,QWORD PTR [rsp+0x70]
   1400067cb:	call   0x140006078
   1400067d0:	mov    ebx,eax
   1400067d2:	xor    edx,edx
   1400067d4:	test   eax,eax
   1400067d6:	js     0x1400069b4
   1400067dc:	mov    eax,DWORD PTR [rbp-0x40]
   1400067df:	mov    DWORD PTR [rbp+0x2240],eax
   1400067e5:	mov    ecx,DWORD PTR [rsp+0x60]
   1400067e9:	cmp    ecx,0x2
   1400067ec:	je     0x14000627a
   1400067f2:	test   ecx,ecx
   1400067f4:	je     0x140006803
   1400067f6:	test   eax,eax
   1400067f8:	je     0x1400069ad
   1400067fe:	jmp    0x14000627a
   140006803:	test   eax,eax
   140006805:	je     0x1400068ba
   14000680b:	mov    DWORD PTR [rsp+0x60],edx
   14000680f:	mov    QWORD PTR [rsp+0x58],rdx
   140006814:	mov    QWORD PTR [rsp+0x50],rdx
   140006819:	mov    QWORD PTR [rsp+0x48],rdx
   14000681e:	mov    QWORD PTR [rsp+0x40],rdx
   140006823:	mov    QWORD PTR [rsp+0x38],rdx
   140006828:	mov    QWORD PTR [rsp+0x30],rdx
   14000682d:	mov    QWORD PTR [rsp+0x28],rdx
   140006832:	lea    rax,[rsp+0x60]
   140006837:	mov    QWORD PTR [rsp+0x20],rax
   14000683c:	xor    r9d,r9d
   14000683f:	xor    r8d,r8d
   140006842:	xor    edx,edx
   140006844:	mov    rcx,rsi
   140006847:	call   QWORD PTR [rip+0x2b7f3]        # 0x140032040
   14000684d:	xor    edx,edx
   14000684f:	test   eax,eax
   140006851:	jne    0x1400068ba
   140006853:	mov    eax,edx
   140006855:	cmp    DWORD PTR [rsp+0x60],edx
   140006859:	seta   al
   14000685c:	test   eax,eax
   14000685e:	je     0x1400068ba
   140006860:	lea    rax,[rip+0x2dab9]        # 0x140034320
   140006867:	mov    QWORD PTR [rbp-0x80],rax
   14000686b:	mov    rdx,QWORD PTR [rax]
   14000686e:	lea    rcx,[rbp-0x30]
   140006872:	call   QWORD PTR [rip+0x2b878]        # 0x1400320f0
   140006878:	xor    edx,edx
   14000687a:	test   eax,eax
   14000687c:	je     0x14000627a
   140006882:	mov    rax,QWORD PTR [rbp-0x80]
   140006886:	add    rax,0x8
   14000688a:	mov    QWORD PTR [rbp-0x80],rax
   14000688e:	lea    rcx,[rip+0x2daeb]        # 0x140034380
   140006895:	cmp    rax,rcx
   140006898:	jl     0x14000686b
   14000689a:	cmp    DWORD PTR [rsp+0x68],edx
   14000689e:	je     0x14000627a
   1400068a4:	lea    rdx,[rbp-0x30]
   1400068a8:	lea    rcx,[rbp-0x70]
   1400068ac:	call   0x140005e2c
   1400068b1:	mov    rsi,QWORD PTR [rbp-0x70]
   1400068b5:	jmp    0x14000627a
   1400068ba:	mov    DWORD PTR [rsp+0x60],edx
   1400068be:	mov    QWORD PTR [rsp+0x58],rdx
   1400068c3:	mov    QWORD PTR [rsp+0x50],rdx
   1400068c8:	mov    QWORD PTR [rsp+0x48],rdx
   1400068cd:	mov    QWORD PTR [rsp+0x40],rdx
   1400068d2:	mov    QWORD PTR [rsp+0x38],rdx
   1400068d7:	mov    QWORD PTR [rsp+0x30],rdx
   1400068dc:	mov    QWORD PTR [rsp+0x28],rdx
   1400068e1:	lea    rax,[rsp+0x60]
   1400068e6:	mov    QWORD PTR [rsp+0x20],rax
   1400068eb:	xor    r9d,r9d
   1400068ee:	xor    r8d,r8d
   1400068f1:	xor    edx,edx
   1400068f3:	mov    rcx,rsi
   1400068f6:	call   QWORD PTR [rip+0x2b744]        # 0x140032040
   1400068fc:	xor    edx,edx
   1400068fe:	test   eax,eax
   140006900:	je     0x140006908
   140006902:	mov    DWORD PTR [rsp+0x60],edx
   140006906:	jmp    0x140006915
   140006908:	mov    eax,edx
   14000690a:	cmp    DWORD PTR [rsp+0x60],edx
   14000690e:	seta   al
   140006911:	mov    DWORD PTR [rsp+0x60],eax
   140006915:	test   rsi,rsi
   140006918:	je     0x14000692f
   14000691a:	mov    rcx,rsi
   14000691d:	call   QWORD PTR [rip+0x2b715]        # 0x140032038
   140006923:	xor    edx,edx
   140006925:	mov    esi,edx
   140006927:	mov    QWORD PTR [rbp-0x70],rdx
   14000692b:	test   eax,eax
   14000692d:	jne    0x1400069ab
   14000692f:	cmp    DWORD PTR [rsp+0x68],edx
   140006933:	je     0x14000627a
   140006939:	cmp    DWORD PTR [rsp+0x60],edx
   14000693d:	jne    0x14000627a
   140006943:	mov    QWORD PTR [rbp-0x50],rdx
   140006947:	mov    QWORD PTR [rbp-0x48],rdx
   14000694b:	mov    rax,QWORD PTR [rbp-0x78]
   14000694f:	mov    QWORD PTR [rbp-0x58],rax
   140006953:	lea    rdx,[rbp-0x30]
   140006957:	lea    rcx,[rbp-0x58]
   14000695b:	call   0x140005f94
   140006960:	test   eax,eax
   140006962:	jne    0x1400069ab
   140006964:	jmp    0x14000627a
   140006969:	mov    ecx,eax
   14000696b:	call   0x140006064
   140006970:	mov    ebx,eax
   140006972:	mov    rcx,QWORD PTR [rbp-0x80]
   140006976:	test   rcx,rcx
   140006979:	je     0x1400069b4
   14000697b:	call   QWORD PTR [rip+0x2b6b7]        # 0x140032038
   140006981:	jmp    0x1400069b4
   140006983:	mov    ebx,0x80020009
   140006988:	jmp    0x1400069b4
   14000698a:	mov    ecx,0x80004005
   14000698f:	call   0x140005d50
   140006994:	int3   
   140006995:	mov    ecx,0x80070057
   14000699a:	call   0x140005d50
   14000699f:	int3   
   1400069a0:	mov    ecx,0x8007000e
   1400069a5:	call   0x140005d50
   1400069aa:	int3   
   1400069ab:	mov    ecx,eax
   1400069ad:	call   0x140006064
   1400069b2:	mov    ebx,eax
   1400069b4:	test   rsi,rsi
   1400069b7:	je     0x1400069c2
   1400069b9:	mov    rcx,rsi
   1400069bc:	call   QWORD PTR [rip+0x2b676]        # 0x140032038
   1400069c2:	mov    eax,ebx
   1400069c4:	mov    rcx,QWORD PTR [rbp+0x21e0]
   1400069cb:	xor    rcx,rsp
   1400069ce:	call   0x14002dd00
   1400069d3:	add    rsp,0x22f8
   1400069da:	pop    rdi
   1400069db:	pop    rsi
   1400069dc:	pop    rbx
   1400069dd:	pop    rbp
   1400069de:	ret    
   1400069df:	int3   
   1400069e0:	int3   
   1400069e1:	int3   
   1400069e2:	int3   
   1400069e3:	int3   
   1400069e4:	int3   
   1400069e5:	int3   
   1400069e6:	int3   
   1400069e7:	int3   
   1400069e8:	mov    QWORD PTR [rsp+0x20],rbx
   1400069ed:	push   rbp
   1400069ee:	push   rsi
   1400069ef:	push   rdi
   1400069f0:	push   r12
   1400069f2:	push   r13
   1400069f4:	push   r14
   1400069f6:	push   r15
   1400069f8:	mov    eax,0x2050
   1400069fd:	call   0x14002e8c0
   140006a02:	sub    rsp,rax
   140006a05:	mov    rax,QWORD PTR [rip+0x44614]        # 0x14004b020
   140006a0c:	xor    rax,rsp
   140006a0f:	mov    QWORD PTR [rsp+0x2040],rax
   140006a17:	xor    r12d,r12d
   140006a1a:	mov    r15d,r8d
   140006a1d:	mov    QWORD PTR [rsp+0x30],r12
   140006a22:	mov    rdi,rcx
   140006a25:	mov    ebp,r12d
   140006a28:	test   rdx,rdx
   140006a2b:	je     0x140006a40
   140006a2d:	lea    r8,[rsp+0x30]
   140006a32:	call   0x140005430
   140006a37:	mov    rbp,QWORD PTR [rsp+0x30]
   140006a3c:	mov    ebx,eax
   140006a3e:	jmp    0x140006a45
   140006a40:	mov    ebx,0x80004003
   140006a45:	test   ebx,ebx
   140006a47:	js     0x140006b73
   140006a4d:	mov    QWORD PTR [rdi],rbp
   140006a50:	cmp    r12w,WORD PTR [rbp+0x0]
   140006a55:	je     0x140006b6a
   140006a5b:	lea    r13,[rip+0x2ec9e]        # 0x140035700
   140006a62:	lea    rdx,[rsp+0x40]
   140006a67:	mov    rcx,rdi
   140006a6a:	call   0x140006078
   140006a6f:	mov    ebx,eax
   140006a71:	test   eax,eax
   140006a73:	js     0x140006b6a
   140006a79:	mov    esi,r12d
   140006a7c:	mov    rbx,r12
   140006a7f:	mov    r14,r13
   140006a82:	mov    rdx,QWORD PTR [r14]
   140006a85:	lea    rcx,[rsp+0x40]
   140006a8a:	call   QWORD PTR [rip+0x2b660]        # 0x1400320f0
   140006a90:	test   eax,eax
   140006a92:	je     0x140006aab
   140006a94:	inc    esi
   140006a96:	inc    rbx
   140006a99:	movsxd rax,esi
   140006a9c:	add    r14,0x10
   140006aa0:	cmp    rax,0xe
   140006aa4:	jb     0x140006a82
   140006aa6:	mov    rsi,r12
   140006aa9:	jmp    0x140006ab3
   140006aab:	add    rbx,rbx
   140006aae:	mov    rsi,QWORD PTR [r13+rbx*8+0x8]
   140006ab3:	test   rsi,rsi
   140006ab6:	je     0x140006b65
   140006abc:	lea    rdx,[rsp+0x40]
   140006ac1:	mov    rcx,rdi
   140006ac4:	call   0x140006078
   140006ac9:	mov    ebx,eax
   140006acb:	test   eax,eax
   140006acd:	js     0x140006b6a
   140006ad3:	mov    eax,0x7b
   140006ad8:	cmp    ax,WORD PTR [rsp+0x40]
   140006add:	jne    0x140006b65
   140006ae3:	mov    DWORD PTR [rsp+0x20],r12d
   140006ae8:	mov    r8,rsi
   140006aeb:	lea    rdx,[rsp+0x40]
   140006af0:	mov    rcx,rdi
   140006af3:	test   r15d,r15d
   140006af6:	je     0x140006b26
   140006af8:	mov    r14,QWORD PTR [rdi]
   140006afb:	mov    r9d,r15d
   140006afe:	call   0x140006208
   140006b03:	mov    ebx,eax
   140006b05:	test   eax,eax
   140006b07:	jns    0x140006b34
   140006b09:	xor    r9d,r9d
   140006b0c:	mov    QWORD PTR [rdi],r14
   140006b0f:	mov    r8,rsi
   140006b12:	mov    DWORD PTR [rsp+0x20],r12d
   140006b17:	lea    rdx,[rsp+0x40]
   140006b1c:	mov    rcx,rdi
   140006b1f:	call   0x140006208
   140006b24:	jmp    0x140006b6a
   140006b26:	xor    r9d,r9d
   140006b29:	call   0x140006208
   140006b2e:	mov    ebx,eax
   140006b30:	test   eax,eax
   140006b32:	js     0x140006b6a
   140006b34:	mov    rcx,QWORD PTR [rdi]
   140006b37:	movzx  eax,WORD PTR [rcx]
   140006b3a:	cmp    eax,0x20
   140006b3d:	ja     0x140006b5a
   140006b3f:	movabs rdx,0x100002600
   140006b49:	bt     rdx,rax
   140006b4d:	jae    0x140006b5a
   140006b4f:	call   QWORD PTR [rip+0x2b843]        # 0x140032398
   140006b55:	mov    QWORD PTR [rdi],rax
   140006b58:	jmp    0x140006b34
   140006b5a:	cmp    r12w,WORD PTR [rcx]
   140006b5e:	je     0x140006b6a
   140006b60:	jmp    0x140006a62
   140006b65:	mov    ebx,0x80020009
   140006b6a:	mov    rcx,rbp
   140006b6d:	call   QWORD PTR [rip+0x2baed]        # 0x140032660
   140006b73:	mov    eax,ebx
   140006b75:	mov    rcx,QWORD PTR [rsp+0x2040]
   140006b7d:	xor    rcx,rsp
   140006b80:	call   0x14002dd00
   140006b85:	mov    rbx,QWORD PTR [rsp+0x20a8]
   140006b8d:	add    rsp,0x2050
   140006b94:	pop    r15
   140006b96:	pop    r14
   140006b98:	pop    r13
   140006b9a:	pop    r12
   140006b9c:	pop    rdi
   140006b9d:	pop    rsi
   140006b9e:	pop    rbp
   140006b9f:	ret    
   140006ba0:	int3   
   140006ba1:	int3   
   140006ba2:	int3   
   140006ba3:	int3   
   140006ba4:	int3   
   140006ba5:	int3   
   140006ba6:	int3   
   140006ba7:	int3   
   140006ba8:	mov    rax,rsp
   140006bab:	push   rsi
   140006bac:	push   rdi
   140006bad:	push   r14
   140006baf:	sub    rsp,0x490
   140006bb6:	mov    QWORD PTR [rsp+0x58],0xfffffffffffffffe
   140006bbf:	mov    QWORD PTR [rax+0x8],rbx
   140006bc3:	mov    rax,QWORD PTR [rip+0x44456]        # 0x14004b020
   140006bca:	xor    rax,rsp
   140006bcd:	mov    QWORD PTR [rsp+0x480],rax
   140006bd5:	mov    r14,r9
   140006bd8:	mov    rdi,r8
   140006bdb:	mov    rax,rdx
   140006bde:	xor    ebx,ebx
   140006be0:	mov    QWORD PTR [rsp+0x60],rbx
   140006be5:	mov    QWORD PTR [rsp+0x50],rcx
   140006bea:	mov    QWORD PTR [rsp+0x48],rbx
   140006bef:	mov    QWORD PTR [rsp+0x70],rbx
   140006bf4:	xor    edx,edx
   140006bf6:	lea    r8d,[rbx+0x2]
   140006bfa:	mov    rcx,rax
   140006bfd:	call   QWORD PTR [rip+0x2b4e5]        # 0x1400320e8
   140006c03:	mov    rsi,rax
   140006c06:	mov    QWORD PTR [rsp+0x38],rax
   140006c0b:	test   rax,rax
   140006c0e:	jne    0x140006c1c
   140006c10:	call   0x1400052bc
   140006c15:	mov    ebx,eax
   140006c17:	jmp    0x140006d4c
   140006c1c:	xor    r9d,r9d
   140006c1f:	mov    r8,rdi
   140006c22:	mov    rdx,r14
   140006c25:	mov    rcx,rax
   140006c28:	call   QWORD PTR [rip+0x2b4fa]        # 0x140032128
   140006c2e:	mov    rdi,rax
   140006c31:	test   rax,rax
   140006c34:	jne    0x140006c40
   140006c36:	call   0x1400052bc
   140006c3b:	jmp    0x140006d40
   140006c40:	mov    rdx,rax
   140006c43:	mov    rcx,rsi
   140006c46:	call   QWORD PTR [rip+0x2b4d4]        # 0x140032120
   140006c4c:	mov    r14,rax
   140006c4f:	mov    QWORD PTR [rsp+0x40],rax
   140006c54:	test   rax,rax
   140006c57:	je     0x140006c36
   140006c59:	mov    rdx,rdi
   140006c5c:	mov    rcx,rsi
   140006c5f:	call   QWORD PTR [rip+0x2b4b3]        # 0x140032118
   140006c65:	mov    edi,eax
   140006c67:	mov    DWORD PTR [rsp+0x30],eax
   140006c6b:	inc    eax
   140006c6d:	cmp    eax,edi
   140006c6f:	jae    0x140006c92
   140006c71:	lea    rax,[rsp+0x78]
   140006c76:	cmp    QWORD PTR [rsp+0x70],rax
   140006c7b:	je     0x140006c88
   140006c7d:	lea    rcx,[rsp+0x70]
   140006c82:	call   0x140005258
   140006c87:	nop
   140006c88:	mov    eax,0x8007000e
   140006c8d:	jmp    0x140006d65
   140006c92:	mov    ecx,eax
   140006c94:	test   eax,eax
   140006c96:	je     0x140006ccf
   140006c98:	xor    edx,edx
   140006c9a:	or     rax,0xffffffffffffffff
   140006c9e:	div    rcx
   140006ca1:	cmp    rax,0x2
   140006ca5:	jb     0x140006cc5
   140006ca7:	lea    rdx,[rcx+rcx*1]
   140006cab:	cmp    rdx,0x400
   140006cb2:	jbe    0x140006ccf
   140006cb4:	lea    rcx,[rsp+0x70]
   140006cb9:	call   0x140005288
   140006cbe:	mov    rax,QWORD PTR [rsp+0x70]
   140006cc3:	jmp    0x140006cd9
   140006cc5:	mov    ecx,0x80070057
   140006cca:	call   0x140005d50
   140006ccf:	lea    rax,[rsp+0x78]
   140006cd4:	mov    QWORD PTR [rsp+0x70],rax
   140006cd9:	jmp    0x140006cf0
   140006cdb:	xor    ebx,ebx
   140006cdd:	mov    rax,QWORD PTR [rsp+0x70]
   140006ce2:	mov    rsi,QWORD PTR [rsp+0x38]
   140006ce7:	mov    r14,QWORD PTR [rsp+0x40]
   140006cec:	mov    edi,DWORD PTR [rsp+0x30]
   140006cf0:	test   rax,rax
   140006cf3:	jne    0x140006cfc
   140006cf5:	mov    ebx,0x8007000e
   140006cfa:	jmp    0x140006d42
   140006cfc:	mov    DWORD PTR [rsp+0x28],edi
   140006d00:	mov    QWORD PTR [rsp+0x20],rax
   140006d05:	mov    r9d,edi
   140006d08:	mov    r8,r14
   140006d0b:	xor    edx,edx
   140006d0d:	lea    ecx,[rdx+0x3]
   140006d10:	call   QWORD PTR [rip+0x2b3fa]        # 0x140032110
   140006d16:	test   eax,eax
   140006d18:	je     0x140006c36
   140006d1e:	mov    ecx,eax
   140006d20:	mov    rax,QWORD PTR [rsp+0x70]
   140006d25:	mov    WORD PTR [rax+rcx*2],bx
   140006d29:	mov    r8d,DWORD PTR [rsp+0x4d0]
   140006d31:	mov    rdx,QWORD PTR [rsp+0x70]
   140006d36:	lea    rcx,[rsp+0x48]
   140006d3b:	call   0x1400069e8
   140006d40:	mov    ebx,eax
   140006d42:	mov    rcx,rsi
   140006d45:	call   QWORD PTR [rip+0x2b395]        # 0x1400320e0
   140006d4b:	nop
   140006d4c:	lea    rax,[rsp+0x78]
   140006d51:	cmp    QWORD PTR [rsp+0x70],rax
   140006d56:	je     0x140006d63
   140006d58:	lea    rcx,[rsp+0x70]
   140006d5d:	call   0x140005258
   140006d62:	nop
   140006d63:	mov    eax,ebx
   140006d65:	mov    rcx,QWORD PTR [rsp+0x480]
   140006d6d:	xor    rcx,rsp
   140006d70:	call   0x14002dd00
   140006d75:	mov    rbx,QWORD PTR [rsp+0x4b0]
   140006d7d:	add    rsp,0x490
   140006d84:	pop    r14
   140006d86:	pop    rdi
   140006d87:	pop    rsi
   140006d88:	ret    
   140006d89:	int3   
   140006d8a:	int3   
   140006d8b:	int3   
   140006d8c:	int3   
   140006d8d:	int3   
   140006d8e:	int3   
   140006d8f:	int3   
   140006d90:	mov    QWORD PTR [rsp+0x8],rbx
   140006d95:	push   rbp
   140006d96:	push   rsi
   140006d97:	push   rdi
   140006d98:	push   r14
   140006d9a:	push   r15
   140006d9c:	lea    rbp,[rsp-0x9d0]
   140006da4:	sub    rsp,0xad0
   140006dab:	mov    rax,QWORD PTR [rip+0x4426e]        # 0x14004b020
   140006db2:	xor    rax,rsp
   140006db5:	mov    QWORD PTR [rbp+0x9c0],rax
   140006dbc:	xor    r14d,r14d
   140006dbf:	lea    rax,[rip+0x2d79a]        # 0x140034560
   140006dc6:	mov    esi,r8d
   140006dc9:	mov    QWORD PTR [rsp+0x30],rax
   140006dce:	mov    rdi,rdx
   140006dd1:	mov    QWORD PTR [rsp+0x38],r14
   140006dd6:	xor    edx,edx
   140006dd8:	mov    QWORD PTR [rsp+0x40],r14
   140006ddd:	lea    r8d,[r14+0x28]
   140006de1:	mov    DWORD PTR [rsp+0x48],r14d
   140006de6:	lea    rcx,[rsp+0x50]
   140006deb:	mov    rbx,r9
   140006dee:	call   0x14002e2ce
   140006df3:	lea    rcx,[rsp+0x50]
   140006df8:	mov    BYTE PTR [rsp+0x78],r14b
   140006dfd:	call   0x140004ee4
   140006e02:	test   eax,eax
   140006e04:	js     0x140006e82
   140006e06:	mov    BYTE PTR [rsp+0x78],0x1
   140006e0b:	test   rbx,rbx
   140006e0e:	je     0x140006e2f
   140006e10:	jmp    0x140006e27
   140006e12:	mov    r8,QWORD PTR [rbx+0x8]
   140006e16:	lea    rcx,[rsp+0x30]
   140006e1b:	mov    rdx,rax
   140006e1e:	call   0x1400051d0
   140006e23:	lea    rbx,[rbx+0x10]
   140006e27:	mov    rax,QWORD PTR [rbx]
   140006e2a:	test   rax,rax
   140006e2d:	jne    0x140006e12
   140006e2f:	mov    rax,QWORD PTR [rsp+0x30]
   140006e34:	mov    rbx,QWORD PTR [rax+0x18]
   140006e38:	mov    rcx,rbx
   140006e3b:	call   QWORD PTR [rip+0x2b867]        # 0x1400326a8
   140006e41:	lea    r8,[rip+0x2e6f0]        # 0x140035538
   140006e48:	lea    rdx,[rip+0x2e6f1]        # 0x140035540
   140006e4f:	lea    rcx,[rsp+0x30]
   140006e54:	call   rbx
   140006e56:	mov    ebx,eax
   140006e58:	test   eax,eax
   140006e5a:	js     0x140006e84
   140006e5c:	mov    rbx,QWORD PTR [rip+0x492d5]        # 0x140050138
   140006e63:	lea    rdx,[rbp-0x80]
   140006e67:	mov    r15d,0x104
   140006e6d:	mov    rcx,rbx
   140006e70:	mov    r8d,r15d
   140006e73:	call   QWORD PTR [rip+0x2b2b7]        # 0x140032130
   140006e79:	test   eax,eax
   140006e7b:	jne    0x140006eb6
   140006e7d:	call   0x1400052bc
   140006e82:	mov    ebx,eax
   140006e84:	lea    rcx,[rsp+0x30]
   140006e89:	call   0x140004e54
   140006e8e:	mov    eax,ebx
   140006e90:	mov    rcx,QWORD PTR [rbp+0x9c0]
   140006e97:	xor    rcx,rsp
   140006e9a:	call   0x14002dd00
   140006e9f:	mov    rbx,QWORD PTR [rsp+0xb00]
   140006ea7:	add    rsp,0xad0
   140006eae:	pop    r15
   140006eb0:	pop    r14
   140006eb2:	pop    rdi
   140006eb3:	pop    rsi
   140006eb4:	pop    rbp
   140006eb5:	ret    
   140006eb6:	cmp    eax,r15d
   140006eb9:	jne    0x140006ec2
   140006ebb:	mov    ebx,0x8007007a
   140006ec0:	jmp    0x140006e84
   140006ec2:	lea    rdx,[rbp-0x80]
   140006ec6:	mov    ecx,r14d
   140006ec9:	mov    r9d,0x27
   140006ecf:	movzx  r8d,WORD PTR [rdx]
   140006ed3:	test   r8w,r8w
   140006ed7:	je     0x140006f0b
   140006ed9:	mov    eax,ecx
   140006edb:	mov    WORD PTR [rbp+rax*2+0x190],r8w
   140006ee4:	cmp    r8w,r9w
   140006ee8:	jne    0x140006efd
   140006eea:	cmp    ecx,0x206
   140006ef0:	jae    0x140006efd
   140006ef2:	inc    ecx
   140006ef4:	mov    WORD PTR [rbp+rcx*2+0x190],r9w
   140006efd:	add    rdx,0x2
   140006f01:	inc    ecx
   140006f03:	cmp    ecx,0x207
   140006f09:	jb     0x140006ecf
   140006f0b:	mov    eax,ecx
   140006f0d:	mov    WORD PTR [rbp+rax*2+0x190],r14w
   140006f16:	test   rbx,rbx
   140006f19:	je     0x140006f34
   140006f1b:	xor    ecx,ecx
   140006f1d:	call   QWORD PTR [rip+0x2b38d]        # 0x1400322b0
   140006f23:	cmp    rbx,rax
   140006f26:	je     0x140006f34
   140006f28:	lea    r8,[rbp+0x190]
   140006f2f:	jmp    0x140006fca
   140006f34:	mov    r15d,0x22
   140006f3a:	lea    rcx,[rbp+0x190]
   140006f41:	or     rbx,0xffffffffffffffff
   140006f45:	mov    WORD PTR [rbp+0x5a0],r15w
   140006f4d:	mov    rax,rbx
   140006f50:	inc    rax
   140006f53:	cmp    WORD PTR [rcx+rax*2],r14w
   140006f58:	jne    0x140006f50
   140006f5a:	inc    eax
   140006f5c:	lea    r8,[rbp+0x190]
   140006f63:	movsxd r9,eax
   140006f66:	lea    rcx,[rbp+0x5a2]
   140006f6d:	add    r9,r9
   140006f70:	mov    edx,0x414
   140006f75:	call   QWORD PTR [rip+0x2b645]        # 0x1400325c0
   140006f7b:	test   eax,eax
   140006f7d:	je     0x140006f89
   140006f7f:	mov    ebx,0x80004005
   140006f84:	jmp    0x140006e84
   140006f89:	lea    rax,[rbp+0x5a0]
   140006f90:	inc    rbx
   140006f93:	cmp    WORD PTR [rax+rbx*2],r14w
   140006f98:	jne    0x140006f90
   140006f9a:	movsxd rax,ebx
   140006f9d:	mov    WORD PTR [rbp+rax*2+0x5a0],r15w
   140006fa6:	lea    rax,[rax*2+0x2]
   140006fae:	cmp    rax,0x418
   140006fb4:	jae    0x140007047
   140006fba:	mov    WORD PTR [rbp+rax*1+0x5a0],r14w
   140006fc3:	lea    r8,[rbp+0x5a0]
   140006fca:	lea    rdx,[rip+0x2e57f]        # 0x140035550
   140006fd1:	lea    rcx,[rsp+0x30]
   140006fd6:	call   0x1400051d0
   140006fdb:	test   eax,eax
   140006fdd:	js     0x140006e82
   140006fe3:	lea    r8,[rbp+0x190]
   140006fea:	lea    rdx,[rip+0x2e56f]        # 0x140035560
   140006ff1:	lea    rcx,[rsp+0x30]
   140006ff6:	call   0x1400051d0
   140006ffb:	test   eax,eax
   140006ffd:	js     0x140006e82
   140007003:	test   esi,esi
   140007005:	je     0x140007016
   140007007:	test   rdi,rdi
   14000700a:	je     0x14000703d
   14000700c:	mov    DWORD PTR [rsp+0x20],0x1
   140007014:	jmp    0x140007020
   140007016:	test   rdi,rdi
   140007019:	je     0x14000703d
   14000701b:	mov    DWORD PTR [rsp+0x20],r14d
   140007020:	lea    r9,[rip+0x2e551]        # 0x140035578
   140007027:	mov    r8,rdi
   14000702a:	lea    rdx,[rbp-0x80]
   14000702e:	lea    rcx,[rsp+0x30]
   140007033:	call   0x140006ba8
   140007038:	jmp    0x140006e82
   14000703d:	mov    ebx,0x80070057
   140007042:	jmp    0x140006e84
   140007047:	call   0x14002e158
   14000704c:	int3   
   14000704d:	int3   
   14000704e:	int3   
   14000704f:	int3   
   140007050:	int3   
   140007051:	int3   
   140007052:	int3   
   140007053:	int3   
   140007054:	int3   
   140007055:	int3   
   140007056:	int3   
   140007057:	int3   
   140007058:	int3   
   140007059:	int3   
   14000705a:	int3   
   14000705b:	int3   
   14000705c:	int3   
   14000705d:	int3   
   14000705e:	int3   
   14000705f:	int3   
   140007060:	jmp    0x140006d90
   140007065:	int3   
   140007066:	int3   
   140007067:	int3   
   140007068:	int3   
   140007069:	int3   
   14000706a:	int3   
   14000706b:	int3   
   14000706c:	int3   
   14000706d:	int3   
   14000706e:	int3   
   14000706f:	int3   
   140007070:	mov    eax,0x493e0
   140007075:	ret    
   140007076:	int3   
   140007077:	int3   
   140007078:	int3   
   140007079:	int3   
   14000707a:	int3   
   14000707b:	int3   
   14000707c:	int3   
   14000707d:	int3   
   14000707e:	int3   
   14000707f:	int3   
   140007080:	rex push rbx
   140007082:	sub    rsp,0x20
   140007086:	lea    rax,[rip+0x2d59b]        # 0x140034628
   14000708d:	mov    rbx,rcx
   140007090:	mov    QWORD PTR [rcx],rax
   140007093:	test   dl,0x1
   140007096:	je     0x14000709e
   140007098:	call   QWORD PTR [rip+0x2b52a]        # 0x1400325c8
   14000709e:	mov    rax,rbx
   1400070a1:	add    rsp,0x20
   1400070a5:	pop    rbx
   1400070a6:	ret    
   1400070a7:	int3   
   1400070a8:	int3   
   1400070a9:	int3   
   1400070aa:	int3   
   1400070ab:	int3   
   1400070ac:	int3   
   1400070ad:	int3   
   1400070ae:	int3   
   1400070af:	int3   
   1400070b0:	mov    r11,rsp
   1400070b3:	mov    DWORD PTR [r11+0x20],r9d
   1400070b7:	sub    rsp,0xb8
   1400070be:	and    QWORD PTR [r11-0x18],0x0
   1400070c3:	lea    rax,[r11+0x58]
   1400070c7:	mov    r8d,0x4
   1400070cd:	movzx  r9d,dx
   1400070d1:	mov    QWORD PTR [r11-0x20],r8
   1400070d5:	mov    edx,0x2b
   1400070da:	mov    QWORD PTR [r11-0x28],rax
   1400070de:	lea    rax,[r11+0x50]
   1400070e2:	mov    QWORD PTR [r11-0x30],r8
   1400070e6:	mov    QWORD PTR [r11-0x38],rax
   1400070ea:	lea    rax,[r11+0x48]
   1400070ee:	mov    QWORD PTR [r11-0x40],r8
   1400070f2:	mov    QWORD PTR [r11-0x48],rax
   1400070f6:	lea    rax,[r11+0x40]
   1400070fa:	mov    QWORD PTR [r11-0x50],r8
   1400070fe:	mov    QWORD PTR [r11-0x58],rax
   140007102:	lea    rax,[r11+0x38]
   140007106:	mov    QWORD PTR [r11-0x60],r8
   14000710a:	mov    QWORD PTR [r11-0x68],rax
   14000710e:	lea    rax,[r11+0x30]
   140007112:	mov    QWORD PTR [r11-0x70],r8
   140007116:	mov    QWORD PTR [r11-0x78],rax
   14000711a:	lea    rax,[r11+0x28]
   14000711e:	mov    QWORD PTR [r11-0x80],r8
   140007122:	mov    QWORD PTR [rsp+0x30],rax
   140007127:	lea    rax,[r11+0x20]
   14000712b:	mov    QWORD PTR [rsp+0x28],r8
   140007130:	lea    r8,[rip+0x2f9b1]        # 0x140036ae8
   140007137:	mov    QWORD PTR [rsp+0x20],rax
   14000713c:	call   QWORD PTR [rip+0x2aede]        # 0x140032020
   140007142:	add    rsp,0xb8
   140007149:	ret    
   14000714a:	int3   
   14000714b:	int3   
   14000714c:	int3   
   14000714d:	int3   
   14000714e:	int3   
   14000714f:	int3   
   140007150:	mov    r11,rsp
   140007153:	mov    DWORD PTR [r11+0x20],r9d
   140007157:	sub    rsp,0xa8
   14000715e:	and    QWORD PTR [r11-0x18],0x0
   140007163:	lea    rax,[r11+0x50]
   140007167:	mov    r8d,0x14
   14000716d:	movzx  r9d,r8w
   140007171:	lea    edx,[r8-0x10]
   140007175:	mov    QWORD PTR [r11-0x20],rdx
   140007179:	lea    r8,[rip+0x2f968]        # 0x140036ae8
   140007180:	mov    QWORD PTR [r11-0x28],rax
   140007184:	lea    rax,[r11+0x48]
   140007188:	mov    QWORD PTR [r11-0x30],rdx
   14000718c:	mov    QWORD PTR [r11-0x38],rax
   140007190:	lea    rax,[r11+0x40]
   140007194:	mov    QWORD PTR [r11-0x40],rdx
   140007198:	mov    QWORD PTR [r11-0x48],rax
   14000719c:	lea    rax,[r11+0x38]
   1400071a0:	mov    QWORD PTR [r11-0x50],rdx
   1400071a4:	mov    QWORD PTR [r11-0x58],rax
   1400071a8:	lea    rax,[r11+0x30]
   1400071ac:	mov    QWORD PTR [r11-0x60],rdx
   1400071b0:	mov    QWORD PTR [r11-0x68],rax
   1400071b4:	lea    rax,[r11+0x28]
   1400071b8:	mov    QWORD PTR [r11-0x70],rdx
   1400071bc:	mov    QWORD PTR [r11-0x78],rax
   1400071c0:	lea    rax,[r11+0x20]
   1400071c4:	mov    QWORD PTR [r11-0x80],rdx
   1400071c8:	mov    edx,0x2b
   1400071cd:	mov    QWORD PTR [rsp+0x20],rax
   1400071d2:	call   QWORD PTR [rip+0x2ae48]        # 0x140032020
   1400071d8:	add    rsp,0xa8
   1400071df:	ret    
   1400071e0:	int3   
   1400071e1:	int3   
   1400071e2:	int3   
   1400071e3:	int3   
   1400071e4:	int3   
   1400071e5:	int3   
   1400071e6:	int3   
   1400071e7:	int3   
   1400071e8:	sub    rsp,0x48
   1400071ec:	xor    r11d,r11d
   1400071ef:	test   r9,r9
   1400071f2:	je     0x140007218
   1400071f4:	cmp    WORD PTR [r9],r11w
   1400071f8:	jne    0x140007200
   1400071fa:	lea    eax,[r11+0xe]
   1400071fe:	jmp    0x14000721d
   140007200:	or     rax,0xffffffffffffffff
   140007204:	inc    rax
   140007207:	cmp    WORD PTR [r9+rax*2],r11w
   14000720c:	jne    0x140007204
   14000720e:	lea    rax,[rax*2+0x2]
   140007216:	jmp    0x14000721d
   140007218:	mov    eax,0xa
   14000721d:	test   r9,r9
   140007220:	je     0x140007233
   140007222:	cmp    WORD PTR [r9],r11w
   140007226:	lea    r10,[rip+0x2dc2b]        # 0x140034e58
   14000722d:	cmove  r9,r10
   140007231:	jmp    0x14000723a
   140007233:	lea    r9,[rip+0x2e266]        # 0x1400354a0
   14000723a:	mov    QWORD PTR [rsp+0x30],r11
   14000723f:	mov    QWORD PTR [rsp+0x28],rax
   140007244:	mov    QWORD PTR [rsp+0x20],r9
   140007249:	movzx  r9d,dx
   14000724d:	mov    edx,0x2b
   140007252:	call   QWORD PTR [rip+0x2adc8]        # 0x140032020
   140007258:	add    rsp,0x48
   14000725c:	ret    
   14000725d:	int3   
   14000725e:	int3   
   14000725f:	int3   
   140007260:	int3   
   140007261:	int3   
   140007262:	int3   
   140007263:	int3   
   140007264:	sub    rsp,0x58
   140007268:	xor    r11d,r11d
   14000726b:	test   r9,r9
   14000726e:	je     0x140007294
   140007270:	cmp    WORD PTR [r9],r11w
   140007274:	jne    0x14000727c
   140007276:	lea    eax,[r11+0xe]
   14000727a:	jmp    0x140007299
   14000727c:	or     rax,0xffffffffffffffff
   140007280:	inc    rax
   140007283:	cmp    WORD PTR [r9+rax*2],r11w
   140007288:	jne    0x140007280
   14000728a:	lea    rax,[rax*2+0x2]
   140007292:	jmp    0x140007299
   140007294:	mov    eax,0xa
   140007299:	test   r9,r9
   14000729c:	je     0x1400072af
   14000729e:	cmp    WORD PTR [r9],r11w
   1400072a2:	lea    r10,[rip+0x2dbaf]        # 0x140034e58
   1400072a9:	cmove  r9,r10
   1400072ad:	jmp    0x1400072b6
   1400072af:	lea    r9,[rip+0x2e1ea]        # 0x1400354a0
   1400072b6:	mov    QWORD PTR [rsp+0x40],r11
   1400072bb:	lea    r10,[rsp+0x80]
   1400072c3:	mov    QWORD PTR [rsp+0x38],0x4
   1400072cc:	mov    QWORD PTR [rsp+0x30],r10
   1400072d1:	mov    QWORD PTR [rsp+0x28],rax
   1400072d6:	mov    QWORD PTR [rsp+0x20],r9
   1400072db:	movzx  r9d,dx
   1400072df:	mov    edx,0x2b
   1400072e4:	call   QWORD PTR [rip+0x2ad36]        # 0x140032020
   1400072ea:	add    rsp,0x58
   1400072ee:	ret    
   1400072ef:	int3   
   1400072f0:	int3   
   1400072f1:	int3   
   1400072f2:	int3   
   1400072f3:	int3   
   1400072f4:	int3   
   1400072f5:	int3   
   1400072f6:	int3   
   1400072f7:	int3   
   1400072f8:	sub    rsp,0x88
   1400072ff:	xor    r8d,r8d
   140007302:	test   r9,r9
   140007305:	je     0x14000732b
   140007307:	cmp    WORD PTR [r9],r8w
   14000730b:	jne    0x140007313
   14000730d:	lea    eax,[r8+0xe]
   140007311:	jmp    0x140007330
   140007313:	or     rax,0xffffffffffffffff
   140007317:	inc    rax
   14000731a:	cmp    WORD PTR [r9+rax*2],r8w
   14000731f:	jne    0x140007317
   140007321:	lea    rax,[rax*2+0x2]
   140007329:	jmp    0x140007330
   14000732b:	mov    eax,0xa
   140007330:	test   r9,r9
   140007333:	je     0x140007346
   140007335:	cmp    WORD PTR [r9],r8w
   140007339:	lea    rdx,[rip+0x2db18]        # 0x140034e58
   140007340:	cmove  r9,rdx
   140007344:	jmp    0x14000734d
   140007346:	lea    r9,[rip+0x2e153]        # 0x1400354a0
   14000734d:	mov    QWORD PTR [rsp+0x70],r8
   140007352:	lea    rdx,[rsp+0xc8]
   14000735a:	mov    r10d,0x3d
   140007360:	lea    r8d,[r10-0x39]
   140007364:	mov    QWORD PTR [rsp+0x68],r8
   140007369:	mov    QWORD PTR [rsp+0x60],rdx
   14000736e:	lea    rdx,[rsp+0xc0]
   140007376:	mov    QWORD PTR [rsp+0x58],r8
   14000737b:	mov    QWORD PTR [rsp+0x50],rdx
   140007380:	lea    rdx,[rsp+0xb8]
   140007388:	mov    QWORD PTR [rsp+0x48],r8
   14000738d:	mov    QWORD PTR [rsp+0x40],rdx
   140007392:	lea    rdx,[rsp+0xb0]
   14000739a:	mov    QWORD PTR [rsp+0x38],r8
   14000739f:	lea    r8,[rip+0x2f742]        # 0x140036ae8
   1400073a6:	mov    QWORD PTR [rsp+0x30],rdx
   1400073ab:	lea    edx,[r10-0x12]
   1400073af:	mov    QWORD PTR [rsp+0x28],rax
   1400073b4:	mov    QWORD PTR [rsp+0x20],r9
   1400073b9:	movzx  r9d,r10w
   1400073bd:	call   QWORD PTR [rip+0x2ac5d]        # 0x140032020
   1400073c3:	add    rsp,0x88
   1400073ca:	ret    
   1400073cb:	int3   
   1400073cc:	int3   
   1400073cd:	int3   
   1400073ce:	int3   
   1400073cf:	int3   
   1400073d0:	int3   
   1400073d1:	int3   
   1400073d2:	int3   
   1400073d3:	int3   
   1400073d4:	mov    QWORD PTR [rsp+0x8],rbx
   1400073d9:	push   rsi
   1400073da:	sub    rsp,0x50
   1400073de:	mov    rax,QWORD PTR [rsp+0x80]
   1400073e6:	or     r8,0xffffffffffffffff
   1400073ea:	xor    ebx,ebx
   1400073ec:	mov    r11,rcx
   1400073ef:	mov    r10d,0xe
   1400073f5:	test   rax,rax
   1400073f8:	je     0x14000741a
   1400073fa:	cmp    WORD PTR [rax],bx
   1400073fd:	jne    0x140007404
   1400073ff:	mov    ecx,r10d
   140007402:	jmp    0x14000741f
   140007404:	mov    rcx,r8
   140007407:	inc    rcx
   14000740a:	cmp    WORD PTR [rax+rcx*2],bx
   14000740e:	jne    0x140007407
   140007410:	lea    rcx,[rcx*2+0x2]
   140007418:	jmp    0x14000741f
   14000741a:	mov    ecx,0xa
   14000741f:	lea    rsi,[rip+0x2da32]        # 0x140034e58
   140007426:	test   rax,rax
   140007429:	je     0x140007434
   14000742b:	cmp    WORD PTR [rax],bx
   14000742e:	cmove  rax,rsi
   140007432:	jmp    0x14000743b
   140007434:	lea    rax,[rip+0x2e065]        # 0x1400354a0
   14000743b:	test   r9,r9
   14000743e:	je     0x14000745a
   140007440:	cmp    WORD PTR [r9],bx
   140007444:	je     0x140007460
   140007446:	inc    r8
   140007449:	cmp    WORD PTR [r9+r8*2],bx
   14000744e:	jne    0x140007446
   140007450:	lea    r10,[r8*2+0x2]
   140007458:	jmp    0x140007460
   14000745a:	mov    r10d,0xa
   140007460:	test   r9,r9
   140007463:	je     0x14000746f
   140007465:	cmp    WORD PTR [r9],bx
   140007469:	cmove  r9,rsi
   14000746d:	jmp    0x140007476
   14000746f:	lea    r9,[rip+0x2e02a]        # 0x1400354a0
   140007476:	mov    QWORD PTR [rsp+0x40],rbx
   14000747b:	lea    r8,[rip+0x2f666]        # 0x140036ae8
   140007482:	mov    QWORD PTR [rsp+0x38],rcx
   140007487:	mov    rcx,r11
   14000748a:	mov    QWORD PTR [rsp+0x30],rax
   14000748f:	mov    QWORD PTR [rsp+0x28],r10
   140007494:	mov    QWORD PTR [rsp+0x20],r9
   140007499:	movzx  r9d,dx
   14000749d:	mov    edx,0x2b
   1400074a2:	call   QWORD PTR [rip+0x2ab78]        # 0x140032020
   1400074a8:	mov    rbx,QWORD PTR [rsp+0x60]
   1400074ad:	add    rsp,0x50
   1400074b1:	pop    rsi
   1400074b2:	ret    
   1400074b3:	int3   
   1400074b4:	int3   
   1400074b5:	int3   
   1400074b6:	int3   
   1400074b7:	int3   
   1400074b8:	int3   
   1400074b9:	int3   
   1400074ba:	int3   
   1400074bb:	int3   
   1400074bc:	sub    rsp,0x68
   1400074c0:	xor    r10d,r10d
   1400074c3:	test   r9,r9
   1400074c6:	je     0x1400074ec
   1400074c8:	cmp    WORD PTR [r9],r10w
   1400074cc:	jne    0x1400074d4
   1400074ce:	lea    eax,[r10+0xe]
   1400074d2:	jmp    0x1400074f1
   1400074d4:	or     rax,0xffffffffffffffff
   1400074d8:	inc    rax
   1400074db:	cmp    WORD PTR [r9+rax*2],r10w
   1400074e0:	jne    0x1400074d8
   1400074e2:	lea    rax,[rax*2+0x2]
   1400074ea:	jmp    0x1400074f1
   1400074ec:	mov    eax,0xa
   1400074f1:	test   r9,r9
   1400074f4:	je     0x140007507
   1400074f6:	cmp    WORD PTR [r9],r10w
   1400074fa:	lea    r8,[rip+0x2d957]        # 0x140034e58
   140007501:	cmove  r9,r8
   140007505:	jmp    0x14000750e
   140007507:	lea    r9,[rip+0x2df92]        # 0x1400354a0
   14000750e:	mov    QWORD PTR [rsp+0x50],r10
   140007513:	lea    r8,[rsp+0x98]
   14000751b:	mov    QWORD PTR [rsp+0x48],0x8
   140007524:	mov    QWORD PTR [rsp+0x40],r8
   140007529:	lea    r8,[rsp+0x90]
   140007531:	mov    QWORD PTR [rsp+0x38],0x4
   14000753a:	mov    QWORD PTR [rsp+0x30],r8
   14000753f:	lea    r8,[rip+0x2f5a2]        # 0x140036ae8
   140007546:	mov    QWORD PTR [rsp+0x28],rax
   14000754b:	mov    QWORD PTR [rsp+0x20],r9
   140007550:	movzx  r9d,dx
   140007554:	mov    edx,0x2b
   140007559:	call   QWORD PTR [rip+0x2aac1]        # 0x140032020
   14000755f:	add    rsp,0x68
   140007563:	ret    
   140007564:	int3   
   140007565:	int3   
   140007566:	int3   
   140007567:	int3   
   140007568:	int3   
   140007569:	int3   
   14000756a:	int3   
   14000756b:	int3   
   14000756c:	sub    rsp,0x48
   140007570:	and    QWORD PTR [rsp+0x30],0x0
   140007576:	mov    QWORD PTR [rsp+0x28],0x10
   14000757f:	mov    QWORD PTR [rsp+0x20],r9
   140007584:	movzx  r9d,dx
   140007588:	mov    edx,0x2b
   14000758d:	call   QWORD PTR [rip+0x2aa8d]        # 0x140032020
   140007593:	add    rsp,0x48
   140007597:	ret    
   140007598:	int3   
   140007599:	int3   
   14000759a:	int3   
   14000759b:	int3   
   14000759c:	int3   
   14000759d:	int3   
   14000759e:	int3   
   14000759f:	int3   
   1400075a0:	mov    r11,rsp
   1400075a3:	mov    DWORD PTR [r11+0x20],r9d
   1400075a7:	push   rbp
   1400075a8:	lea    rbp,[r11-0xf]
   1400075ac:	sub    rsp,0x100
   1400075b3:	and    QWORD PTR [r11-0x18],0x0
   1400075b8:	lea    rax,[rbp+0x8f]
   1400075bf:	mov    r8d,0x13
   1400075c5:	movzx  r9d,r8w
   1400075c9:	lea    edx,[r8-0xf]
   1400075cd:	mov    QWORD PTR [r11-0x20],rdx
   1400075d1:	lea    r8,[rip+0x2f510]        # 0x140036ae8
   1400075d8:	mov    QWORD PTR [r11-0x28],rax
   1400075dc:	lea    rax,[rbp+0x87]
   1400075e3:	mov    QWORD PTR [r11-0x30],rdx
   1400075e7:	mov    QWORD PTR [r11-0x38],rax
   1400075eb:	lea    rax,[rbp+0x7f]
   1400075ef:	mov    QWORD PTR [r11-0x40],rdx
   1400075f3:	mov    QWORD PTR [r11-0x48],rax
   1400075f7:	lea    rax,[rbp+0x77]
   1400075fb:	mov    QWORD PTR [r11-0x50],rdx
   1400075ff:	mov    QWORD PTR [r11-0x58],rax
   140007603:	lea    rax,[rbp+0x6f]
   140007607:	mov    QWORD PTR [r11-0x60],rdx
   14000760b:	mov    QWORD PTR [r11-0x68],rax
   14000760f:	lea    rax,[rbp+0x67]
   140007613:	mov    QWORD PTR [r11-0x70],rdx
   140007617:	mov    QWORD PTR [r11-0x78],rax
   14000761b:	lea    rax,[rbp+0x5f]
   14000761f:	mov    QWORD PTR [r11-0x80],rdx
   140007623:	mov    QWORD PTR [r11-0x88],rax
   14000762a:	lea    rax,[rbp+0x57]
   14000762e:	mov    QWORD PTR [rsp+0x78],rdx
   140007633:	mov    QWORD PTR [rsp+0x70],rax
   140007638:	lea    rax,[rbp+0x4f]
   14000763c:	mov    QWORD PTR [rsp+0x68],rdx
   140007641:	mov    QWORD PTR [rsp+0x60],rax
   140007646:	lea    rax,[rbp+0x47]
   14000764a:	mov    QWORD PTR [rsp+0x58],rdx
   14000764f:	mov    QWORD PTR [rsp+0x50],rax
   140007654:	lea    rax,[rbp+0x3f]
   140007658:	mov    QWORD PTR [rsp+0x48],rdx
   14000765d:	mov    QWORD PTR [rsp+0x40],rax
   140007662:	lea    rax,[rbp+0x37]
   140007666:	mov    QWORD PTR [rsp+0x38],rdx
   14000766b:	mov    QWORD PTR [rsp+0x30],rax
   140007670:	lea    rax,[rbp+0x2f]
   140007674:	mov    QWORD PTR [rsp+0x28],rdx
   140007679:	mov    edx,0x2b
   14000767e:	mov    QWORD PTR [rsp+0x20],rax
   140007683:	call   QWORD PTR [rip+0x2a997]        # 0x140032020
   140007689:	add    rsp,0x100
   140007690:	pop    rbp
   140007691:	ret    
   140007692:	int3   
   140007693:	int3   
   140007694:	int3   
   140007695:	int3   
   140007696:	int3   
   140007697:	int3   
   140007698:	mov    QWORD PTR [rsp+0x18],rbx
   14000769d:	mov    QWORD PTR [rsp+0x20],rbp
   1400076a2:	push   rdi
   1400076a3:	sub    rsp,0x30
   1400076a7:	xor    ebp,ebp
   1400076a9:	mov    rdi,rcx
   1400076ac:	mov    DWORD PTR [rcx+0x18],ebp
   1400076af:	xor    edx,edx
   1400076b1:	add    rcx,0x20
   1400076b5:	lea    r8d,[rbp+0x28]
   1400076b9:	call   0x14002e2ce
   1400076be:	mov    BYTE PTR [rdi+0x48],bpl
   1400076c2:	lea    rax,[rip+0x2d06f]        # 0x140034738
   1400076c9:	mov    QWORD PTR [rdi],rax
   1400076cc:	lea    rcx,[rdi+0x60]
   1400076d0:	lea    rax,[rip+0x2d041]        # 0x140034718
   1400076d7:	mov    QWORD PTR [rdi+0x8],rax
   1400076db:	lea    rax,[rip+0x2cffe]        # 0x1400346e0
   1400076e2:	mov    QWORD PTR [rdi+0x10],rax
   1400076e6:	mov    QWORD PTR [rdi+0x50],rbp
   1400076ea:	mov    DWORD PTR [rdi+0x58],ebp
   1400076ed:	call   0x140003950
   1400076f2:	mov    DWORD PTR [rdi+0x98],ebp
   1400076f8:	lea    rax,[rip+0x2d621]        # 0x140034d20
   1400076ff:	mov    QWORD PTR [rdi+0x90],rax
   140007706:	lea    rcx,[rdi+0x108]
   14000770d:	mov    QWORD PTR [rdi+0xa0],rbp
   140007714:	mov    BYTE PTR [rdi+0xa8],bpl
   14000771b:	mov    BYTE PTR [rdi+0xa9],bpl
   140007722:	mov    DWORD PTR [rdi+0xb8],ebp
   140007728:	mov    QWORD PTR [rdi+0xb0],rax
   14000772f:	lea    rax,[rdi+0xd0]
   140007736:	mov    QWORD PTR [rdi+0xc0],rbp
   14000773d:	mov    BYTE PTR [rdi+0xc8],bpl
   140007744:	mov    BYTE PTR [rdi+0xc9],bpl
   14000774b:	mov    QWORD PTR [rax+0x10],rbp
   14000774f:	mov    QWORD PTR [rax+0x8],rax
   140007753:	mov    QWORD PTR [rax],rax
   140007756:	call   0x140003950
   14000775b:	lea    rcx,[rdi+0x130]
   140007762:	call   0x140003950
   140007767:	lea    rcx,[rdi+0x168]
   14000776e:	call   0x140003950
   140007773:	xor    r8d,r8d
   140007776:	mov    QWORD PTR [rdi+0x190],rbp
   14000777d:	xor    edx,edx
   14000777f:	mov    QWORD PTR [rdi+0x198],rbp
   140007786:	call   0x14000ded0
   14000778b:	mov    QWORD PTR [rdi+0x190],rax
   140007792:	lea    r10,[rdi+0x1a0]
   140007799:	mov    QWORD PTR [r10],rbp
   14000779c:	mov    QWORD PTR [r10+0x8],rbp
   1400077a0:	mov    QWORD PTR [r10+0x10],rbp
   1400077a4:	mov    rax,QWORD PTR [rdi+0x190]
   1400077ab:	mov    DWORD PTR [rdi+0x1c8],0x40800000
   1400077b5:	mov    r8,QWORD PTR [r10]
   1400077b8:	mov    rcx,QWORD PTR [r10+0x8]
   1400077bc:	mov    QWORD PTR [rsp+0x40],rax
   1400077c1:	cmp    r8,r8
   1400077c4:	jne    0x1400077cb
   1400077c6:	cmp    rcx,rcx
   1400077c9:	je     0x140007803
   1400077cb:	cmp    r8,rcx
   1400077ce:	je     0x140007807
   1400077d0:	mov    rdx,rcx
   1400077d3:	mov    r9,rbp
   1400077d6:	sub    rdx,rcx
   1400077d9:	add    rdx,0x7
   1400077dd:	shr    rdx,0x3
   1400077e1:	cmp    rcx,rcx
   1400077e4:	cmova  rdx,rbp
   1400077e8:	test   rdx,rdx
   1400077eb:	je     0x140007803
   1400077ed:	sub    rcx,r8
   1400077f0:	mov    rax,QWORD PTR [rcx+r8*1]
   1400077f4:	inc    r9
   1400077f7:	mov    QWORD PTR [r8],rax
   1400077fa:	add    r8,0x8
   1400077fe:	cmp    r9,rdx
   140007801:	jne    0x1400077f0
   140007803:	mov    QWORD PTR [r10+0x8],r8
   140007807:	mov    r8,QWORD PTR [r10]
   14000780a:	lea    rax,[rsp+0x40]
   14000780f:	mov    r9d,0x10
   140007815:	mov    QWORD PTR [rsp+0x20],rax
   14000781a:	lea    rdx,[rsp+0x48]
   14000781f:	mov    rcx,r10
   140007822:	call   0x14000dfb4
   140007827:	lea    rcx,[rdi+0x1d0]
   14000782e:	mov    QWORD PTR [rdi+0x1b8],0x7
   140007839:	mov    QWORD PTR [rdi+0x1c0],0x8
   140007844:	call   0x140003950
   140007849:	mov    DWORD PTR [rdi+0x1f8],0x1
   140007853:	lea    rbx,[rdi+0x200]
   14000785a:	mov    ecx,0x10
   14000785f:	mov    QWORD PTR [rbx],rbp
   140007862:	mov    QWORD PTR [rbx+0x8],rbp
   140007866:	mov    QWORD PTR [rbx+0x10],rbp
   14000786a:	mov    QWORD PTR [rbx+0x18],rbp
   14000786e:	mov    QWORD PTR [rbx+0x20],rbp
   140007872:	call   0x140023f10
   140007877:	mov    QWORD PTR [rbx],rax
   14000787a:	xorps  xmm0,xmm0
   14000787d:	movdqu XMMWORD PTR [rax],xmm0
   140007881:	mov    rax,QWORD PTR [rbx]
   140007884:	mov    QWORD PTR [rax],rbx
   140007887:	mov    rax,rdi
   14000788a:	mov    DWORD PTR [rbx+0x34],0xf12192e
   140007891:	mov    QWORD PTR [rbx+0x50],rbp
   140007895:	mov    QWORD PTR [rbx+0x58],rbp
   140007899:	mov    WORD PTR [rbx+0x60],bp
   14000789d:	mov    QWORD PTR [rbx+0x70],rbp
   1400078a1:	mov    DWORD PTR [rbx+0x64],0xfa
   1400078a8:	mov    QWORD PTR [rbx+0x78],rbp
   1400078ac:	mov    rbx,QWORD PTR [rsp+0x50]
   1400078b1:	mov    QWORD PTR [rdi+0x280],rbp
   1400078b8:	mov    rbp,QWORD PTR [rsp+0x58]
   1400078bd:	add    rsp,0x30
   1400078c1:	pop    rdi
   1400078c2:	ret    
   1400078c3:	int3   
   1400078c4:	int3   
   1400078c5:	int3   
   1400078c6:	int3   
   1400078c7:	int3   
   1400078c8:	int3   
   1400078c9:	int3   
   1400078ca:	int3   
   1400078cb:	int3   
   1400078cc:	int3   
   1400078cd:	int3   
   1400078ce:	int3   
   1400078cf:	int3   
   1400078d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400078d5:	push   rdi
   1400078d6:	sub    rsp,0x20
   1400078da:	mov    ebx,edx
   1400078dc:	mov    rdi,rcx
   1400078df:	call   0x140007908
   1400078e4:	test   bl,0x1
   1400078e7:	je     0x1400078f2
   1400078e9:	mov    rcx,rdi
   1400078ec:	call   QWORD PTR [rip+0x2acd6]        # 0x1400325c8
   1400078f2:	mov    rax,rdi
   1400078f5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400078fa:	add    rsp,0x20
   1400078fe:	pop    rdi
   1400078ff:	ret    
   140007900:	int3   
   140007901:	int3   
   140007902:	int3   
   140007903:	int3   
   140007904:	int3   
   140007905:	int3   
   140007906:	int3   
   140007907:	int3   
   140007908:	mov    QWORD PTR [rsp+0x8],rbx
   14000790d:	mov    QWORD PTR [rsp+0x10],rsi
   140007912:	push   rdi
   140007913:	sub    rsp,0x20
   140007917:	lea    rax,[rip+0x2ce1a]        # 0x140034738
   14000791e:	mov    rdi,rcx
   140007921:	mov    QWORD PTR [rcx],rax
   140007924:	lea    rax,[rip+0x2cded]        # 0x140034718
   14000792b:	mov    QWORD PTR [rcx+0x8],rax
   14000792f:	lea    rax,[rip+0x2cdaa]        # 0x1400346e0
   140007936:	mov    QWORD PTR [rcx+0x10],rax
   14000793a:	mov    rsi,QWORD PTR [rcx+0x280]
   140007941:	test   rsi,rsi
   140007944:	je     0x14000795b
   140007946:	mov    rax,QWORD PTR [rsi]
   140007949:	mov    rbx,QWORD PTR [rax+0x8]
   14000794d:	mov    rcx,rbx
   140007950:	call   QWORD PTR [rip+0x2ad52]        # 0x1400326a8
   140007956:	mov    rcx,rsi
   140007959:	call   rbx
   14000795b:	lea    rcx,[rdi+0x200]
   140007962:	call   0x140015eec
   140007967:	lea    rbx,[rdi+0x190]
   14000796e:	lea    rcx,[rbx+0x40]
   140007972:	call   QWORD PTR [rip+0x2a900]        # 0x140032278
   140007978:	mov    rcx,rbx
   14000797b:	call   0x14000e280
   140007980:	lea    rcx,[rdi+0x168]
   140007987:	call   QWORD PTR [rip+0x2a8eb]        # 0x140032278
   14000798d:	lea    rcx,[rdi+0x130]
   140007994:	call   QWORD PTR [rip+0x2a8de]        # 0x140032278
   14000799a:	lea    rcx,[rdi+0x108]
   1400079a1:	call   QWORD PTR [rip+0x2a8d1]        # 0x140032278
   1400079a7:	lea    rsi,[rdi+0xd0]
   1400079ae:	cmp    QWORD PTR [rsi+0x10],0x0
   1400079b3:	je     0x1400079dd
   1400079b5:	mov    rbx,QWORD PTR [rsi]
   1400079b8:	jmp    0x1400079d8
   1400079ba:	mov    rcx,rbx
   1400079bd:	mov    rbx,QWORD PTR [rbx]
   1400079c0:	mov    rax,QWORD PTR [rcx+0x8]
   1400079c4:	mov    rdx,QWORD PTR [rcx]
   1400079c7:	mov    QWORD PTR [rax],rdx
   1400079ca:	mov    QWORD PTR [rdx+0x8],rax
   1400079ce:	call   QWORD PTR [rip+0x2abf4]        # 0x1400325c8
   1400079d4:	dec    QWORD PTR [rsi+0x10]
   1400079d8:	cmp    rbx,rsi
   1400079db:	jne    0x1400079ba
   1400079dd:	lea    rcx,[rdi+0xb0]
   1400079e4:	call   0x140029b48
   1400079e9:	lea    rcx,[rdi+0x90]
   1400079f0:	call   0x140029b48
   1400079f5:	lea    rcx,[rdi+0x60]
   1400079f9:	call   QWORD PTR [rip+0x2a879]        # 0x140032278
   1400079ff:	mov    rsi,QWORD PTR [rdi+0x50]
   140007a03:	test   rsi,rsi
   140007a06:	je     0x140007a44
   140007a08:	mov    eax,DWORD PTR [rsi+0x8]
   140007a0b:	cmp    eax,0x1
   140007a0e:	jne    0x140007a19
   140007a10:	mov    DWORD PTR [rsi+0x8],0x0
   140007a17:	jmp    0x140007a26
   140007a19:	or     eax,0xffffffff
   140007a1c:	lock xadd DWORD PTR [rsi+0x8],eax
   140007a21:	sub    eax,0x1
   140007a24:	jg     0x140007a44
   140007a26:	test   rsi,rsi
   140007a29:	je     0x140007a44
   140007a2b:	mov    rax,QWORD PTR [rsi]
   140007a2e:	mov    rbx,QWORD PTR [rax]
   140007a31:	mov    rcx,rbx
   140007a34:	call   QWORD PTR [rip+0x2ac6e]        # 0x1400326a8
   140007a3a:	mov    edx,0x1
   140007a3f:	mov    rcx,rsi
   140007a42:	call   rbx
   140007a44:	lea    rcx,[rdi+0x20]
   140007a48:	cmp    BYTE PTR [rcx+0x28],0x0
   140007a4c:	je     0x140007a58
   140007a4e:	mov    BYTE PTR [rcx+0x28],0x0
   140007a52:	call   QWORD PTR [rip+0x2a820]        # 0x140032278
   140007a58:	mov    rbx,QWORD PTR [rsp+0x30]
   140007a5d:	mov    rsi,QWORD PTR [rsp+0x38]
   140007a62:	add    rsp,0x20
   140007a66:	pop    rdi
   140007a67:	ret    
   140007a68:	int3   
   140007a69:	int3   
   140007a6a:	int3   
   140007a6b:	int3   
   140007a6c:	int3   
   140007a6d:	int3   
   140007a6e:	int3   
   140007a6f:	int3   
   140007a70:	mov    QWORD PTR [rsp+0x10],rbx
   140007a75:	mov    QWORD PTR [rsp+0x18],rsi
   140007a7a:	push   rdi
   140007a7b:	sub    rsp,0x50
   140007a7f:	mov    rax,QWORD PTR [rip+0x4359a]        # 0x14004b020
   140007a86:	xor    rax,rsp
   140007a89:	mov    QWORD PTR [rsp+0x48],rax
   140007a8e:	lea    rdi,[rcx+0x168]
   140007a95:	mov    rsi,rcx
   140007a98:	mov    rcx,rdi
   140007a9b:	call   QWORD PTR [rip+0x2a667]        # 0x140032108
   140007aa1:	mov    rbx,QWORD PTR [rsi+0xf8]
   140007aa8:	mov    rcx,rdi
   140007aab:	and    QWORD PTR [rsi+0x158],0x0
   140007ab3:	mov    BYTE PTR [rsi+0xf0],0x0
   140007aba:	call   QWORD PTR [rip+0x2a638]        # 0x1400320f8
   140007ac0:	test   rbx,rbx
   140007ac3:	jne    0x140007ae0
   140007ac5:	mov    rcx,QWORD PTR [rip+0x435ac]        # 0x14004b078
   140007acc:	lea    rax,[rip+0x435a5]        # 0x14004b078
   140007ad3:	cmp    rcx,rax
   140007ad6:	je     0x140007b1c
   140007ad8:	test   BYTE PTR [rcx+0x1c],0x1
   140007adc:	je     0x140007b1c
   140007ade:	jmp    0x140007b07
   140007ae0:	xor    edx,edx
   140007ae2:	mov    rcx,rsi
   140007ae5:	call   0x14000b71c
   140007aea:	mov    rcx,QWORD PTR [rsp+0x48]
   140007aef:	xor    rcx,rsp
   140007af2:	call   0x14002dd00
   140007af7:	mov    rbx,QWORD PTR [rsp+0x68]
   140007afc:	mov    rsi,QWORD PTR [rsp+0x70]
   140007b01:	add    rsp,0x50
   140007b05:	pop    rdi
   140007b06:	ret    
   140007b07:	mov    rcx,QWORD PTR [rcx+0x10]
   140007b0b:	lea    r8,[rip+0x2efd6]        # 0x140036ae8
   140007b12:	mov    edx,0xa
   140007b17:	call   0x140001f08
   140007b1c:	mov    edx,0x8000ffff
   140007b21:	lea    rcx,[rsp+0x20]
   140007b26:	call   0x140002064
   140007b2b:	lea    rdx,[rip+0x41656]        # 0x140049188
   140007b32:	lea    rcx,[rsp+0x20]
   140007b37:	call   0x14002e2da
   140007b3c:	int3   
   140007b3d:	int3   
   140007b3e:	int3   
   140007b3f:	int3   
   140007b40:	int3   
   140007b41:	int3   
   140007b42:	int3   
   140007b43:	int3   
   140007b44:	mov    QWORD PTR [rsp+0x8],rbx
   140007b49:	mov    QWORD PTR [rsp+0x10],rbp
   140007b4e:	mov    QWORD PTR [rsp+0x18],rsi
   140007b53:	push   rdi
   140007b54:	sub    rsp,0x20
   140007b58:	cmp    DWORD PTR [rcx+0x160],0x0
   140007b5f:	mov    bpl,r8b
   140007b62:	mov    rbx,rcx
   140007b65:	jne    0x140007b6e
   140007b67:	mov    eax,0x1
   140007b6c:	jmp    0x140007be9
   140007b6e:	mov    rcx,rdx
   140007b71:	call   QWORD PTR [rip+0x2a7e9]        # 0x140032360
   140007b77:	mov    rsi,rax
   140007b7a:	test   rax,rax
   140007b7d:	jne    0x140007baf
   140007b7f:	mov    rcx,QWORD PTR [rip+0x434f2]        # 0x14004b078
   140007b86:	lea    rax,[rip+0x434eb]        # 0x14004b078
   140007b8d:	cmp    rcx,rax
   140007b90:	je     0x140007bab
   140007b92:	test   BYTE PTR [rcx+0x1c],0x1
   140007b96:	je     0x140007bab
   140007b98:	mov    rcx,QWORD PTR [rcx+0x10]
   140007b9c:	lea    edx,[rsi+0xb]
   140007b9f:	lea    r8,[rip+0x2ef42]        # 0x140036ae8
   140007ba6:	call   0x140001f08
   140007bab:	xor    eax,eax
   140007bad:	jmp    0x140007be9
   140007baf:	lea    rdi,[rbx+0x168]
   140007bb6:	mov    rcx,rdi
   140007bb9:	call   QWORD PTR [rip+0x2a549]        # 0x140032108
   140007bbf:	mov    rcx,rbx
   140007bc2:	mov    BYTE PTR [rbx+0x100],bpl
   140007bc9:	mov    QWORD PTR [rbx+0xf8],rsi
   140007bd0:	mov    BYTE PTR [rbx+0xf0],0x1
   140007bd7:	call   0x140007c2c
   140007bdc:	mov    rcx,rdi
   140007bdf:	mov    ebx,eax
   140007be1:	call   QWORD PTR [rip+0x2a511]        # 0x1400320f8
   140007be7:	mov    eax,ebx
   140007be9:	mov    rbx,QWORD PTR [rsp+0x30]
   140007bee:	mov    rbp,QWORD PTR [rsp+0x38]
   140007bf3:	mov    rsi,QWORD PTR [rsp+0x40]
   140007bf8:	add    rsp,0x20
   140007bfc:	pop    rdi
   140007bfd:	ret    
   140007bfe:	int3   
   140007bff:	int3   
   140007c00:	int3   
   140007c01:	int3   
   140007c02:	int3   
   140007c03:	int3   
   140007c04:	int3   
   140007c05:	int3   
   140007c06:	int3   
   140007c07:	int3   
   140007c08:	int3   
   140007c09:	int3   
   140007c0a:	int3   
   140007c0b:	int3   
   140007c0c:	int3   
   140007c0d:	int3   
   140007c0e:	int3   
   140007c0f:	int3   
   140007c10:	sub    rsp,0x28
   140007c14:	test   rcx,rcx
   140007c17:	je     0x140007c1e
   140007c19:	call   0x140007a70
   140007c1e:	add    rsp,0x28
   140007c22:	ret    
   140007c23:	int3   
   140007c24:	int3   
   140007c25:	int3   
   140007c26:	int3   
   140007c27:	int3   
   140007c28:	int3   
   140007c29:	int3   
   140007c2a:	int3   
   140007c2b:	int3   
   140007c2c:	mov    QWORD PTR [rsp+0x8],rbx
   140007c31:	mov    QWORD PTR [rsp+0x10],rsi
   140007c36:	push   rdi
   140007c37:	sub    rsp,0x40
   140007c3b:	lea    rbx,[rcx+0x158]
   140007c42:	mov    rsi,rcx
   140007c45:	cmp    QWORD PTR [rbx],0x0
   140007c49:	je     0x140007c8a
   140007c4b:	mov    edi,0xa
   140007c50:	mov    rdx,QWORD PTR [rbx]
   140007c53:	xor    r8d,r8d
   140007c56:	xor    ecx,ecx
   140007c58:	call   QWORD PTR [rip+0x2a4e2]        # 0x140032140
   140007c5e:	test   eax,eax
   140007c60:	jne    0x140007c73
   140007c62:	call   QWORD PTR [rip+0x2a620]        # 0x140032288
   140007c68:	cmp    eax,0x3e5
   140007c6d:	je     0x140007c73
   140007c6f:	xor    eax,eax
   140007c71:	jmp    0x140007c78
   140007c73:	mov    eax,0x1
   140007c78:	dec    edi
   140007c7a:	test   eax,eax
   140007c7c:	jne    0x140007c82
   140007c7e:	test   edi,edi
   140007c80:	jg     0x140007c50
   140007c82:	and    QWORD PTR [rbx],0x0
   140007c86:	test   eax,eax
   140007c88:	je     0x140007cb6
   140007c8a:	mov    eax,DWORD PTR [rsi+0x160]
   140007c90:	lea    r8,[rip+0xffffffffffffff79]        # 0x140007c10
   140007c97:	mov    DWORD PTR [rsp+0x30],0x8
   140007c9f:	mov    r9,rsi
   140007ca2:	and    DWORD PTR [rsp+0x28],0x0
   140007ca7:	xor    edx,edx
   140007ca9:	mov    rcx,rbx
   140007cac:	mov    DWORD PTR [rsp+0x20],eax
   140007cb0:	call   QWORD PTR [rip+0x2a492]        # 0x140032148
   140007cb6:	mov    rbx,QWORD PTR [rsp+0x50]
   140007cbb:	mov    rsi,QWORD PTR [rsp+0x58]
   140007cc0:	add    rsp,0x40
   140007cc4:	pop    rdi
   140007cc5:	ret    
   140007cc6:	int3   
   140007cc7:	int3   
   140007cc8:	int3   
   140007cc9:	int3   
   140007cca:	int3   
   140007ccb:	int3   
   140007ccc:	mov    rax,rsp
   140007ccf:	push   rsi
   140007cd0:	push   rdi
   140007cd1:	push   r14
   140007cd3:	sub    rsp,0x150
   140007cda:	mov    QWORD PTR [rax-0x88],0xfffffffffffffffe
   140007ce5:	mov    QWORD PTR [rax+0x18],rbx
   140007ce9:	mov    rax,QWORD PTR [rip+0x43330]        # 0x14004b020
   140007cf0:	xor    rax,rsp
   140007cf3:	mov    QWORD PTR [rsp+0x140],rax
   140007cfb:	mov    r14,rdx
   140007cfe:	mov    rdi,rcx
   140007d01:	mov    QWORD PTR [rsp+0x68],rcx
   140007d06:	xor    ebx,ebx
   140007d08:	test   rdx,rdx
   140007d0b:	je     0x140007d0f
   140007d0d:	mov    BYTE PTR [rdx],bl
   140007d0f:	cmp    DWORD PTR [rcx+0x160],ebx
   140007d15:	je     0x140007e9f
   140007d1b:	lea    rsi,[rcx+0x168]
   140007d22:	mov    QWORD PTR [rsp+0x78],rsi
   140007d27:	mov    QWORD PTR [rsp+0xc8],rsi
   140007d2f:	mov    rcx,rsi
   140007d32:	call   QWORD PTR [rip+0x2a3d0]        # 0x140032108
   140007d38:	nop
   140007d39:	cmp    BYTE PTR [rdi+0xf0],bl
   140007d3f:	jne    0x140007e84
   140007d45:	cmp    QWORD PTR [rdi+0xf8],rbx
   140007d4c:	je     0x140007e96
   140007d52:	mov    BYTE PTR [rsp+0x61],bl
   140007d56:	mov    BYTE PTR [rsp+0x60],bl
   140007d5a:	xorps  xmm0,xmm0
   140007d5d:	movdqu XMMWORD PTR [rsp+0x80],xmm0
   140007d66:	mov    QWORD PTR [rsp+0x90],rbx
   140007d6e:	movdqu XMMWORD PTR [rsp+0xb0],xmm0
   140007d77:	mov    QWORD PTR [rsp+0xc0],rbx
   140007d7f:	movdqu XMMWORD PTR [rsp+0x98],xmm0
   140007d88:	mov    QWORD PTR [rsp+0xa8],rbx
   140007d90:	mov    DWORD PTR [rsp+0xf0],ebx
   140007d97:	xor    edx,edx
   140007d99:	lea    r8d,[rdx+0x40]
   140007d9d:	lea    rcx,[rsp+0xf4]
   140007da5:	call   0x14002e2ce
   140007daa:	nop
   140007dab:	lea    rax,[rsp+0x98]
   140007db3:	mov    QWORD PTR [rsp+0x58],rax
   140007db8:	lea    rax,[rsp+0xb0]
   140007dc0:	mov    QWORD PTR [rsp+0x50],rax
   140007dc5:	lea    rax,[rsp+0x80]
   140007dcd:	mov    QWORD PTR [rsp+0x48],rax
   140007dd2:	lea    rax,[rsp+0xf0]
   140007dda:	mov    QWORD PTR [rsp+0x40],rax
   140007ddf:	lea    rax,[rsp+0x60]
   140007de4:	mov    QWORD PTR [rsp+0x38],rax
   140007de9:	lea    rax,[rsp+0x61]
   140007dee:	mov    QWORD PTR [rsp+0x30],rax
   140007df3:	lea    rax,[rsp+0xd0]
   140007dfb:	mov    QWORD PTR [rsp+0x28],rax
   140007e00:	lea    rax,[rsp+0xd8]
   140007e08:	mov    QWORD PTR [rsp+0x20],rax
   140007e0d:	mov    r9b,BYTE PTR [rdi+0x100]
   140007e14:	xor    r8d,r8d
   140007e17:	mov    rdx,QWORD PTR [rdi+0xf8]
   140007e1e:	mov    rcx,rdi
   140007e21:	call   0x14000869c
   140007e26:	mov    BYTE PTR [rdi+0xf0],0x1
   140007e2d:	test   r14,r14
   140007e30:	je     0x140007e36
   140007e32:	mov    BYTE PTR [r14],0x1
   140007e36:	mov    edx,0x1
   140007e3b:	mov    ecx,0x13c
   140007e40:	call   QWORD PTR [rip+0x2a622]        # 0x140032468
   140007e46:	nop
   140007e47:	jmp    0x140007e55
   140007e49:	xor    ebx,ebx
   140007e4b:	mov    rdi,QWORD PTR [rsp+0x68]
   140007e50:	mov    rsi,QWORD PTR [rsp+0x78]
   140007e55:	lea    rcx,[rsp+0x98]
   140007e5d:	call   0x1400036e0
   140007e62:	nop
   140007e63:	mov    rcx,QWORD PTR [rsp+0xb0]
   140007e6b:	test   rcx,rcx
   140007e6e:	je     0x140007e77
   140007e70:	call   QWORD PTR [rip+0x2a752]        # 0x1400325c8
   140007e76:	nop
   140007e77:	lea    rcx,[rsp+0x80]
   140007e7f:	call   0x1400036e0
   140007e84:	cmp    QWORD PTR [rdi+0xf8],rbx
   140007e8b:	je     0x140007e96
   140007e8d:	mov    rcx,rdi
   140007e90:	call   0x140007c2c
   140007e95:	nop
   140007e96:	mov    rcx,rsi
   140007e99:	call   QWORD PTR [rip+0x2a259]        # 0x1400320f8
   140007e9f:	mov    rcx,QWORD PTR [rsp+0x140]
   140007ea7:	xor    rcx,rsp
   140007eaa:	call   0x14002dd00
   140007eaf:	mov    rbx,QWORD PTR [rsp+0x180]
   140007eb7:	add    rsp,0x150
   140007ebe:	pop    r14
   140007ec0:	pop    rdi
   140007ec1:	pop    rsi
   140007ec2:	ret    
   140007ec3:	int3   
   140007ec4:	int3   
   140007ec5:	int3   
   140007ec6:	int3   
   140007ec7:	int3   
   140007ec8:	int3   
   140007ec9:	int3   
   140007eca:	int3   
   140007ecb:	int3   
   140007ecc:	mov    QWORD PTR [rsp+0x18],rbx
   140007ed1:	push   rsi
   140007ed2:	push   rdi
   140007ed3:	push   r14
   140007ed5:	sub    rsp,0x50
   140007ed9:	mov    rax,QWORD PTR [rip+0x43140]        # 0x14004b020
   140007ee0:	xor    rax,rsp
   140007ee3:	mov    QWORD PTR [rsp+0x48],rax
   140007ee8:	mov    rsi,rdx
   140007eeb:	mov    rdi,rcx
   140007eee:	test   rdx,rdx
   140007ef1:	jne    0x140007f19
   140007ef3:	mov    rcx,QWORD PTR [rip+0x4317e]        # 0x14004b078
   140007efa:	lea    rax,[rip+0x43177]        # 0x14004b078
   140007f01:	cmp    rcx,rax
   140007f04:	je     0x140007ffd
   140007f0a:	test   BYTE PTR [rcx+0x1c],0x1
   140007f0e:	je     0x140007ffd
   140007f14:	jmp    0x140007fe1
   140007f19:	mov    rax,QWORD PTR [rdx]
   140007f1c:	mov    rbx,QWORD PTR [rax]
   140007f1f:	mov    rcx,rbx
   140007f22:	call   QWORD PTR [rip+0x2a780]        # 0x1400326a8
   140007f28:	mov    rcx,rsi
   140007f2b:	call   rbx
   140007f2d:	mov    r14,QWORD PTR [rdi+0x280]
   140007f34:	mov    QWORD PTR [rdi+0x280],rsi
   140007f3b:	test   r14,r14
   140007f3e:	je     0x140007f55
   140007f40:	mov    rax,QWORD PTR [r14]
   140007f43:	mov    rbx,QWORD PTR [rax+0x8]
   140007f47:	mov    rcx,rbx
   140007f4a:	call   QWORD PTR [rip+0x2a758]        # 0x1400326a8
   140007f50:	mov    rcx,r14
   140007f53:	call   rbx
   140007f55:	add    rdi,0x200
   140007f5c:	cmp    BYTE PTR [rdi+0x60],0x0
   140007f60:	jne    0x140008008
   140007f66:	mov    rax,QWORD PTR [rsi]
   140007f69:	mov    rbx,QWORD PTR [rax]
   140007f6c:	mov    rcx,rbx
   140007f6f:	call   QWORD PTR [rip+0x2a733]        # 0x1400326a8
   140007f75:	mov    rcx,rsi
   140007f78:	call   rbx
   140007f7a:	mov    r14,QWORD PTR [rdi+0x78]
   140007f7e:	mov    QWORD PTR [rdi+0x78],rsi
   140007f82:	test   r14,r14
   140007f85:	je     0x140007f9c
   140007f87:	mov    rax,QWORD PTR [r14]
   140007f8a:	mov    rbx,QWORD PTR [rax+0x8]
   140007f8e:	mov    rcx,rbx
   140007f91:	call   QWORD PTR [rip+0x2a711]        # 0x1400326a8
   140007f97:	mov    rcx,r14
   140007f9a:	call   rbx
   140007f9c:	lea    rcx,[rdi+0x28]
   140007fa0:	xor    edx,edx
   140007fa2:	and    DWORD PTR [rcx+0xc],0x0
   140007fa6:	call   QWORD PTR [rip+0x2a2c4]        # 0x140032270
   140007fac:	mov    edx,0x64
   140007fb1:	mov    BYTE PTR [rdi+0x60],0x1
   140007fb5:	mov    r8d,0x1388
   140007fbb:	mov    rcx,rdi
   140007fbe:	call   0x140015c4c
   140007fc3:	mov    rcx,QWORD PTR [rsp+0x48]
   140007fc8:	xor    rcx,rsp
   140007fcb:	call   0x14002dd00
   140007fd0:	mov    rbx,QWORD PTR [rsp+0x80]
   140007fd8:	add    rsp,0x50
   140007fdc:	pop    r14
   140007fde:	pop    rdi
   140007fdf:	pop    rsi
   140007fe0:	ret    
   140007fe1:	mov    rcx,QWORD PTR [rcx+0x10]
   140007fe5:	lea    r9,[rip+0x2d90c]        # 0x1400358f8
   140007fec:	mov    edx,0xa
   140007ff1:	lea    r8,[rip+0x2c3d8]        # 0x1400343d0
   140007ff8:	call   0x1400038e0
   140007ffd:	mov    ecx,0x80070057
   140008002:	call   0x140029d64
   140008007:	int3   
   140008008:	mov    edx,0x80070057
   14000800d:	lea    rcx,[rsp+0x20]
   140008012:	call   0x140002064
   140008017:	lea    rdx,[rip+0x4116a]        # 0x140049188
   14000801e:	lea    rcx,[rsp+0x20]
   140008023:	call   0x14002e2da
   140008028:	int3   
   140008029:	int3   
   14000802a:	int3   
   14000802b:	int3   
   14000802c:	int3   
   14000802d:	int3   
   14000802e:	int3   
   14000802f:	int3   
   140008030:	rex push rbx
   140008032:	sub    rsp,0x20
   140008036:	mov    r10,QWORD PTR [rsp+0x50]
   14000803b:	test   r10,r10
   14000803e:	jne    0x14000807b
   140008040:	mov    rcx,QWORD PTR [rip+0x43031]        # 0x14004b078
   140008047:	lea    rax,[rip+0x4302a]        # 0x14004b078
   14000804e:	cmp    rcx,rax
   140008051:	je     0x140008074
   140008053:	test   BYTE PTR [rcx+0x1c],0x1
   140008057:	je     0x140008074
   140008059:	mov    rcx,QWORD PTR [rcx+0x10]
   14000805d:	lea    edx,[r10+0xa]
   140008061:	lea    r9,[rip+0x2d910]        # 0x140035978
   140008068:	lea    r8,[rip+0x2c361]        # 0x1400343d0
   14000806f:	call   0x1400038e0
   140008074:	mov    eax,0x80070057
   140008079:	jmp    0x1400080c0
   14000807b:	sub    rcx,0xffffffffffffff80
   14000807f:	xor    r9d,r9d
   140008082:	call   0x140029ab0
   140008087:	mov    ebx,eax
   140008089:	test   eax,eax
   14000808b:	js     0x140008092
   14000808d:	mov    r9,rcx
   140008090:	xor    ebx,ebx
   140008092:	or     eax,0xffffffff
   140008095:	test   ebx,ebx
   140008097:	js     0x14000809f
   140008099:	mov    WORD PTR [r10],ax
   14000809d:	xor    ebx,ebx
   14000809f:	test   r9,r9
   1400080a2:	je     0x1400080be
   1400080a4:	mov    ecx,eax
   1400080a6:	lock xadd DWORD PTR [r9+0x8],ecx
   1400080ac:	add    ecx,eax
   1400080ae:	cmp    ecx,0x80000000
   1400080b4:	jne    0x1400080be
   1400080b6:	mov    rcx,r9
   1400080b9:	call   0x140029c90
   1400080be:	mov    eax,ebx
   1400080c0:	add    rsp,0x20
   1400080c4:	pop    rbx
   1400080c5:	ret    
   1400080c6:	int3   
   1400080c7:	int3   
   1400080c8:	int3   
   1400080c9:	int3   
   1400080ca:	int3   
   1400080cb:	int3   
   1400080cc:	int3   
   1400080cd:	int3   
   1400080ce:	int3   
   1400080cf:	int3   
   1400080d0:	mov    rax,rsp
   1400080d3:	mov    QWORD PTR [rax+0x8],rbx
   1400080d7:	mov    QWORD PTR [rax+0x10],rbp
   1400080db:	mov    QWORD PTR [rax+0x18],rsi
   1400080df:	mov    QWORD PTR [rax+0x20],rdi
   1400080e3:	push   r14
   1400080e5:	sub    rsp,0x20
   1400080e9:	xor    ebp,ebp
   1400080eb:	sub    rcx,0xffffffffffffff80
   1400080ef:	mov    ebx,ebp
   1400080f1:	mov    rsi,r8
   1400080f4:	mov    r14,rdx
   1400080f7:	call   0x140029ab0
   1400080fc:	mov    edi,eax
   1400080fe:	test   eax,eax
   140008100:	js     0x140008107
   140008102:	mov    rbx,rcx
   140008105:	mov    edi,ebp
   140008107:	test   edi,edi
   140008109:	js     0x140008189
   14000810b:	test   r14,r14
   14000810e:	je     0x14000814f
   140008110:	test   rsi,rsi
   140008113:	je     0x14000814f
   140008115:	test   r9,r9
   140008118:	je     0x14000814f
   14000811a:	mov    rdi,QWORD PTR [rsp+0x50]
   14000811f:	test   rdi,rdi
   140008122:	je     0x14000814f
   140008124:	movups xmm0,XMMWORD PTR [rip+0x2e94d]        # 0x140036a78
   14000812b:	movdqu XMMWORD PTR [r9],xmm0
   140008130:	call   0x140016e54
   140008135:	mov    DWORD PTR [r14],eax
   140008138:	mov    DWORD PTR [rsi],0x2
   14000813e:	mov    DWORD PTR [rdi],0x80004
   140008144:	mov    DWORD PTR [rdi+0x4],0x2800
   14000814b:	mov    edi,ebp
   14000814d:	jmp    0x140008189
   14000814f:	mov    rcx,QWORD PTR [rip+0x42f22]        # 0x14004b078
   140008156:	lea    rax,[rip+0x42f1b]        # 0x14004b078
   14000815d:	cmp    rcx,rax
   140008160:	je     0x140008184
   140008162:	test   BYTE PTR [rcx+0x1c],0x1
   140008166:	je     0x140008184
   140008168:	mov    rcx,QWORD PTR [rcx+0x10]
   14000816c:	lea    r9,[rip+0x2d84d]        # 0x1400359c0
   140008173:	mov    edx,0xa
   140008178:	lea    r8,[rip+0x2c251]        # 0x1400343d0
   14000817f:	call   0x1400038e0
   140008184:	mov    edi,0x80070057
   140008189:	test   rbx,rbx
   14000818c:	je     0x1400081a8
   14000818e:	or     ecx,0xffffffff
   140008191:	lock xadd DWORD PTR [rbx+0x8],ecx
   140008196:	dec    ecx
   140008198:	cmp    ecx,0x80000000
   14000819e:	jne    0x1400081a8
   1400081a0:	mov    rcx,rbx
   1400081a3:	call   0x140029c90
   1400081a8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400081ad:	mov    eax,edi
   1400081af:	mov    rdi,QWORD PTR [rsp+0x48]
   1400081b4:	mov    rbp,QWORD PTR [rsp+0x38]
   1400081b9:	mov    rsi,QWORD PTR [rsp+0x40]
   1400081be:	add    rsp,0x20
   1400081c2:	pop    r14
   1400081c4:	ret    
   1400081c5:	int3   
   1400081c6:	int3   
   1400081c7:	int3   
   1400081c8:	int3   
   1400081c9:	int3   
   1400081ca:	int3   
   1400081cb:	int3   
   1400081cc:	int3   
   1400081cd:	int3   
   1400081ce:	int3   
   1400081cf:	int3   
   1400081d0:	mov    QWORD PTR [rsp+0x10],rbx
   1400081d5:	mov    QWORD PTR [rsp+0x18],rsi
   1400081da:	push   rdi
   1400081db:	sub    rsp,0x20
   1400081df:	mov    r9,rcx
   1400081e2:	mov    rsi,r8
   1400081e5:	sub    rcx,0xffffffffffffff80
   1400081e9:	mov    r10,rdx
   1400081ec:	xor    ebx,ebx
   1400081ee:	call   0x140029ab0
   1400081f3:	mov    edi,eax
   1400081f5:	test   eax,eax
   1400081f7:	js     0x1400081fe
   1400081f9:	mov    rbx,rcx
   1400081fc:	xor    edi,edi
   1400081fe:	test   edi,edi
   140008200:	js     0x140008278
   140008202:	test   rsi,rsi
   140008205:	jne    0x140008241
   140008207:	mov    rcx,QWORD PTR [rip+0x42e6a]        # 0x14004b078
   14000820e:	lea    rax,[rip+0x42e63]        # 0x14004b078
   140008215:	cmp    rcx,rax
   140008218:	je     0x14000823a
   14000821a:	test   BYTE PTR [rcx+0x1c],0x1
   14000821e:	je     0x14000823a
   140008220:	mov    rcx,QWORD PTR [rcx+0x10]
   140008224:	lea    edx,[rsi+0xa]
   140008227:	lea    r9,[rip+0x2d802]        # 0x140035a30
   14000822e:	lea    r8,[rip+0x2c19b]        # 0x1400343d0
   140008235:	call   0x1400038e0
   14000823a:	mov    edi,0x80070057
   14000823f:	jmp    0x140008278
   140008241:	mov    rdi,QWORD PTR [r9+0x40]
   140008245:	test   rdi,rdi
   140008248:	jne    0x140008251
   14000824a:	mov    edi,0x80004005
   14000824f:	jmp    0x140008278
   140008251:	mov    r8,r10
   140008254:	lea    rdx,[rsp+0x30]
   140008259:	lea    rcx,[rdi+0x20]
   14000825d:	call   0x140014aa4
   140008262:	mov    rax,QWORD PTR [rdi+0x20]
   140008266:	cmp    QWORD PTR [rsp+0x30],rax
   14000826b:	setne  al
   14000826e:	neg    al
   140008270:	sbb    ax,ax
   140008273:	mov    WORD PTR [rsi],ax
   140008276:	xor    edi,edi
   140008278:	test   rbx,rbx
   14000827b:	je     0x140008297
   14000827d:	or     ecx,0xffffffff
   140008280:	lock xadd DWORD PTR [rbx+0x8],ecx
   140008285:	dec    ecx
   140008287:	cmp    ecx,0x80000000
   14000828d:	jne    0x140008297
   14000828f:	mov    rcx,rbx
   140008292:	call   0x140029c90
   140008297:	mov    rbx,QWORD PTR [rsp+0x38]
   14000829c:	mov    eax,edi
   14000829e:	mov    rsi,QWORD PTR [rsp+0x40]
   1400082a3:	add    rsp,0x20
   1400082a7:	pop    rdi
   1400082a8:	ret    
   1400082a9:	int3   
   1400082aa:	int3   
   1400082ab:	int3   
   1400082ac:	int3   
   1400082ad:	int3   
   1400082ae:	int3   
   1400082af:	int3   
   1400082b0:	mov    rax,rsp
   1400082b3:	push   rsi
   1400082b4:	push   rdi
   1400082b5:	push   r12
   1400082b7:	push   r14
   1400082b9:	push   r15
   1400082bb:	sub    rsp,0x60
   1400082bf:	mov    QWORD PTR [rax-0x40],0xfffffffffffffffe
   1400082c7:	mov    QWORD PTR [rax+0x10],rbx
   1400082cb:	mov    r14,r8
   1400082ce:	mov    r15,rdx
   1400082d1:	mov    r12,rcx
   1400082d4:	xor    ebx,ebx
   1400082d6:	mov    QWORD PTR [rax-0x58],rbx
   1400082da:	add    rcx,0x88
   1400082e1:	call   0x140029ab0
   1400082e6:	mov    edi,eax
   1400082e8:	test   eax,eax
   1400082ea:	js     0x1400082f6
   1400082ec:	mov    rbx,rcx
   1400082ef:	mov    QWORD PTR [rsp+0x30],rcx
   1400082f4:	xor    edi,edi
   1400082f6:	test   edi,edi
   1400082f8:	jns    0x140008322
   1400082fa:	test   rbx,rbx
   1400082fd:	je     0x14000831b
   1400082ff:	or     ecx,0xffffffff
   140008302:	lock xadd DWORD PTR [rbx+0x8],ecx
   140008307:	dec    ecx
   140008309:	cmp    ecx,0x80000000
   14000830f:	jne    0x14000831b
   140008311:	mov    rcx,QWORD PTR [rsp+0x30]
   140008316:	call   0x140029c90
   14000831b:	mov    eax,edi
   14000831d:	jmp    0x1400084eb
   140008322:	test   r15,r15
   140008325:	je     0x140008490
   14000832b:	test   r14,r14
   14000832e:	je     0x140008490
   140008334:	and    QWORD PTR [r14],0x0
   140008338:	and    QWORD PTR [rsp+0x38],0x0
   14000833e:	mov    rax,QWORD PTR [r15]
   140008341:	mov    rdi,QWORD PTR [rax+0x40]
   140008345:	mov    rcx,rdi
   140008348:	call   QWORD PTR [rip+0x2a35a]        # 0x1400326a8
   14000834e:	lea    rdx,[rsp+0x38]
   140008353:	mov    rcx,r15
   140008356:	call   rdi
   140008358:	test   eax,eax
   14000835a:	jns    0x140008363
   14000835c:	mov    ecx,eax
   14000835e:	call   0x140029d64
   140008363:	lea    r8,[rsp+0x90]
   14000836b:	mov    rdx,QWORD PTR [rsp+0x38]
   140008370:	lea    rcx,[r12-0x8]
   140008375:	call   0x140008508
   14000837a:	nop
   14000837b:	mov    rdi,QWORD PTR [rsp+0x38]
   140008380:	cmp    BYTE PTR [rsp+0x90],0x11
   140008388:	jne    0x1400083cc
   14000838a:	test   rdi,rdi
   14000838d:	je     0x1400083a5
   14000838f:	mov    rax,QWORD PTR [rdi]
   140008392:	mov    rsi,QWORD PTR [rax+0x8]
   140008396:	mov    rcx,rsi
   140008399:	call   QWORD PTR [rip+0x2a309]        # 0x1400326a8
   14000839f:	mov    rcx,rdi
   1400083a2:	call   rsi
   1400083a4:	nop
   1400083a5:	test   rbx,rbx
   1400083a8:	je     0x1400083c5
   1400083aa:	or     eax,0xffffffff
   1400083ad:	lock xadd DWORD PTR [rbx+0x8],eax
   1400083b2:	dec    eax
   1400083b4:	cmp    eax,0x80000000
   1400083b9:	jne    0x1400083c5
   1400083bb:	mov    rcx,QWORD PTR [rsp+0x30]
   1400083c0:	call   0x140029c90
   1400083c5:	xor    eax,eax
   1400083c7:	jmp    0x1400084eb
   1400083cc:	test   rdi,rdi
   1400083cf:	je     0x1400083e6
   1400083d1:	mov    rax,QWORD PTR [rdi]
   1400083d4:	mov    rsi,QWORD PTR [rax+0x8]
   1400083d8:	mov    rcx,rsi
   1400083db:	call   QWORD PTR [rip+0x2a2c7]        # 0x1400326a8
   1400083e1:	mov    rcx,rdi
   1400083e4:	call   rsi
   1400083e6:	and    QWORD PTR [rsp+0x40],0x0
   1400083ec:	lea    rax,[rsp+0x40]
   1400083f1:	mov    QWORD PTR [rsp+0x20],rax
   1400083f6:	mov    rdx,r15
   1400083f9:	lea    rcx,[r12-0x8]
   1400083fe:	call   0x1400209a0
   140008403:	mov    rax,QWORD PTR [rsp+0x40]
   140008408:	test   rax,rax
   14000840b:	jne    0x140008437
   14000840d:	test   rbx,rbx
   140008410:	je     0x14000842d
   140008412:	or     eax,0xffffffff
   140008415:	lock xadd DWORD PTR [rbx+0x8],eax
   14000841a:	dec    eax
   14000841c:	cmp    eax,0x80000000
   140008421:	jne    0x14000842d
   140008423:	mov    rcx,QWORD PTR [rsp+0x30]
   140008428:	call   0x140029c90
   14000842d:	mov    eax,0x1
   140008432:	jmp    0x1400084eb
   140008437:	mov    QWORD PTR [r14],rax
   14000843a:	test   rbx,rbx
   14000843d:	je     0x14000845a
   14000843f:	or     eax,0xffffffff
   140008442:	lock xadd DWORD PTR [rbx+0x8],eax
   140008447:	dec    eax
   140008449:	cmp    eax,0x80000000
   14000844e:	jne    0x14000845a
   140008450:	mov    rcx,QWORD PTR [rsp+0x30]
   140008455:	call   0x140029c90
   14000845a:	xor    eax,eax
   14000845c:	jmp    0x1400084eb
   140008461:	mov    rax,QWORD PTR [rsp+0x30]
   140008466:	test   rax,rax
   140008469:	je     0x140008487
   14000846b:	or     ecx,0xffffffff
   14000846e:	lock xadd DWORD PTR [rax+0x8],ecx
   140008473:	dec    ecx
   140008475:	cmp    ecx,0x80000000
   14000847b:	jne    0x140008487
   14000847d:	mov    rcx,QWORD PTR [rsp+0x30]
   140008482:	call   0x140029c90
   140008487:	mov    eax,DWORD PTR [rsp+0xa8]
   14000848e:	jmp    0x1400084eb
   140008490:	lea    rax,[rip+0x42be1]        # 0x14004b078
   140008497:	mov    rcx,QWORD PTR [rip+0x42bda]        # 0x14004b078
   14000849e:	cmp    rcx,rax
   1400084a1:	je     0x1400084c6
   1400084a3:	test   BYTE PTR [rcx+0x1c],0x1
   1400084a7:	je     0x1400084c6
   1400084a9:	mov    edx,0xa
   1400084ae:	lea    r9,[rip+0x2d5bb]        # 0x140035a70
   1400084b5:	lea    r8,[rip+0x2bf14]        # 0x1400343d0
   1400084bc:	mov    rcx,QWORD PTR [rcx+0x10]
   1400084c0:	call   0x1400038e0
   1400084c5:	nop
   1400084c6:	test   rbx,rbx
   1400084c9:	je     0x1400084e6
   1400084cb:	or     eax,0xffffffff
   1400084ce:	lock xadd DWORD PTR [rbx+0x8],eax
   1400084d3:	dec    eax
   1400084d5:	cmp    eax,0x80000000
   1400084da:	jne    0x1400084e6
   1400084dc:	mov    rcx,QWORD PTR [rsp+0x30]
   1400084e1:	call   0x140029c90
   1400084e6:	mov    eax,0x80070057
   1400084eb:	mov    rbx,QWORD PTR [rsp+0x98]
   1400084f3:	add    rsp,0x60
   1400084f7:	pop    r15
   1400084f9:	pop    r14
   1400084fb:	pop    r12
   1400084fd:	pop    rdi
   1400084fe:	pop    rsi
   1400084ff:	ret    
   140008500:	int3   
   140008501:	int3   
   140008502:	int3   
   140008503:	int3   
   140008504:	int3   
   140008505:	int3   
   140008506:	int3   
   140008507:	int3   
   140008508:	rex push rbp
   14000850a:	push   rbx
   14000850b:	push   rsi
   14000850c:	push   rdi
   14000850d:	push   r14
   14000850f:	mov    rbp,rsp
   140008512:	sub    rsp,0x80
   140008519:	mov    rax,QWORD PTR [rip+0x42b00]        # 0x14004b020
   140008520:	xor    rax,rsp
   140008523:	mov    QWORD PTR [rbp-0x10],rax
   140008527:	mov    rsi,r8
   14000852a:	mov    rdi,rdx
   14000852d:	mov    r14,rcx
   140008530:	test   r8,r8
   140008533:	je     0x140008539
   140008535:	mov    BYTE PTR [r8],0x6
   140008539:	mov    DWORD PTR [rbp-0x48],0x2d02
   140008540:	call   0x14002b158
   140008545:	mov    QWORD PTR [rbp-0x44],rax
   140008549:	mov    rax,QWORD PTR [rdi]
   14000854c:	mov    rbx,QWORD PTR [rax+0x38]
   140008550:	mov    rcx,rbx
   140008553:	call   QWORD PTR [rip+0x2a14f]        # 0x1400326a8
   140008559:	mov    r8d,0x10
   14000855f:	lea    rdx,[rbp-0x3c]
   140008563:	mov    rcx,rdi
   140008566:	call   rbx
   140008568:	test   eax,eax
   14000856a:	js     0x14000865d
   140008570:	mov    rax,QWORD PTR [rdi]
   140008573:	mov    rbx,QWORD PTR [rax+0x20]
   140008577:	mov    rcx,rbx
   14000857a:	call   QWORD PTR [rip+0x2a128]        # 0x1400326a8
   140008580:	mov    r8d,0x10
   140008586:	lea    rdx,[rbp-0x2c]
   14000858a:	mov    rcx,rdi
   14000858d:	call   rbx
   14000858f:	test   eax,eax
   140008591:	js     0x140008665
   140008597:	mov    rax,QWORD PTR [rdi]
   14000859a:	mov    rbx,QWORD PTR [rax+0x50]
   14000859e:	mov    rcx,rbx
   1400085a1:	call   QWORD PTR [rip+0x2a101]        # 0x1400326a8
   1400085a7:	lea    rdx,[rbp-0x18]
   1400085ab:	mov    rcx,rdi
   1400085ae:	call   rbx
   1400085b0:	test   eax,eax
   1400085b2:	js     0x14000866d
   1400085b8:	mov    rax,QWORD PTR [rdi]
   1400085bb:	mov    rbx,QWORD PTR [rax+0x40]
   1400085bf:	mov    rcx,rbx
   1400085c2:	call   QWORD PTR [rip+0x2a0e0]        # 0x1400326a8
   1400085c8:	lea    rdx,[rbp-0x1c]
   1400085cc:	mov    rcx,rdi
   1400085cf:	call   rbx
   1400085d1:	test   eax,eax
   1400085d3:	js     0x140008675
   1400085d9:	mov    rax,QWORD PTR [rdi]
   1400085dc:	mov    rbx,QWORD PTR [rax+0x28]
   1400085e0:	mov    rcx,rbx
   1400085e3:	call   QWORD PTR [rip+0x2a0bf]        # 0x1400326a8
   1400085e9:	lea    rdx,[rbp-0x1a]
   1400085ed:	mov    rcx,rdi
   1400085f0:	call   rbx
   1400085f2:	test   eax,eax
   1400085f4:	js     0x14000867d
   1400085fa:	test   rsi,rsi
   1400085fd:	je     0x140008604
   1400085ff:	mov    al,BYTE PTR [rbp-0x18]
   140008602:	mov    BYTE PTR [rsi],al
   140008604:	mov    rax,QWORD PTR [rdi]
   140008607:	and    DWORD PTR [rbp-0x50],0x0
   14000860b:	mov    rbx,QWORD PTR [rax+0x60]
   14000860f:	mov    rcx,rbx
   140008612:	call   QWORD PTR [rip+0x2a090]        # 0x1400326a8
   140008618:	lea    rdx,[rbp-0x50]
   14000861c:	mov    rcx,rdi
   14000861f:	call   rbx
   140008621:	test   eax,eax
   140008623:	js     0x140008685
   140008625:	mov    r8d,DWORD PTR [rbp-0x50]
   140008629:	lea    r9,[rbp-0x48]
   14000862d:	xor    edx,edx
   14000862f:	mov    DWORD PTR [rsp+0x20],0x31
   140008637:	mov    rcx,r14
   14000863a:	call   0x14000bf60
   14000863f:	test   eax,eax
   140008641:	js     0x14000868d
   140008643:	mov    rcx,QWORD PTR [rbp-0x10]
   140008647:	xor    rcx,rsp
   14000864a:	call   0x14002dd00
   14000864f:	add    rsp,0x80
   140008656:	pop    r14
   140008658:	pop    rdi
   140008659:	pop    rsi
   14000865a:	pop    rbx
   14000865b:	pop    rbp
   14000865c:	ret    
   14000865d:	mov    ecx,eax
   14000865f:	call   0x140029d64
   140008664:	int3   
   140008665:	mov    ecx,eax
   140008667:	call   0x140029d64
   14000866c:	int3   
   14000866d:	mov    ecx,eax
   14000866f:	call   0x140029d64
   140008674:	int3   
   140008675:	mov    ecx,eax
   140008677:	call   0x140029d64
   14000867c:	int3   
   14000867d:	mov    ecx,eax
   14000867f:	call   0x140029d64
   140008684:	int3   
   140008685:	mov    ecx,eax
   140008687:	call   0x140029d64
   14000868c:	int3   
   14000868d:	mov    ecx,eax
   14000868f:	call   0x140029d64
   140008694:	int3   
   140008695:	int3   
   140008696:	int3   
   140008697:	int3   
   140008698:	int3   
   140008699:	int3   
   14000869a:	int3   
   14000869b:	int3   
   14000869c:	rex push rbx
   14000869e:	push   rsi
   14000869f:	push   rdi
   1400086a0:	push   r13
   1400086a2:	push   r14
   1400086a4:	push   r15
   1400086a6:	sub    rsp,0x1b8
   1400086ad:	mov    QWORD PTR [rsp+0x128],0xfffffffffffffffe
   1400086b9:	mov    rax,QWORD PTR [rip+0x42960]        # 0x14004b020
   1400086c0:	xor    rax,rsp
   1400086c3:	mov    QWORD PTR [rsp+0x1a0],rax
   1400086cb:	mov    BYTE PTR [rsp+0x60],r9b
   1400086d0:	mov    BYTE PTR [rsp+0x61],r8b
   1400086d5:	mov    rbx,rdx
   1400086d8:	mov    rsi,rcx
   1400086db:	mov    QWORD PTR [rsp+0xb8],rcx
   1400086e3:	mov    r15,QWORD PTR [rsp+0x210]
   1400086eb:	mov    QWORD PTR [rsp+0xf8],r15
   1400086f3:	mov    r13,QWORD PTR [rsp+0x218]
   1400086fb:	mov    QWORD PTR [rsp+0xe8],r13
   140008703:	mov    r10,QWORD PTR [rsp+0x220]
   14000870b:	mov    QWORD PTR [rsp+0xc8],r10
   140008713:	mov    r9,QWORD PTR [rsp+0x228]
   14000871b:	mov    QWORD PTR [rsp+0xe0],r9
   140008723:	mov    rax,QWORD PTR [rsp+0x230]
   14000872b:	mov    QWORD PTR [rsp+0xd8],rax
   140008733:	mov    rax,QWORD PTR [rsp+0x238]
   14000873b:	mov    QWORD PTR [rsp+0x100],rax
   140008743:	mov    rax,QWORD PTR [rsp+0x240]
   14000874b:	mov    QWORD PTR [rsp+0x108],rax
   140008753:	mov    rax,QWORD PTR [rsp+0x248]
   14000875b:	mov    QWORD PTR [rsp+0xf0],rax
   140008763:	add    rcx,0x90
   14000876a:	mov    QWORD PTR [rsp+0x90],rcx
   140008772:	call   0x140029ab0
   140008777:	xor    r14d,r14d
   14000877a:	test   eax,eax
   14000877c:	jns    0x140008786
   14000877e:	mov    ecx,eax
   140008780:	call   0x140029d64
   140008785:	nop
   140008786:	test   rbx,rbx
   140008789:	je     0x140008e56
   14000878f:	test   r15,r15
   140008792:	je     0x140008e56
   140008798:	test   r13,r13
   14000879b:	je     0x140008e56
   1400087a1:	test   r10,r10
   1400087a4:	je     0x140008e56
   1400087aa:	test   r9,r9
   1400087ad:	je     0x140008e56
   1400087b3:	mov    QWORD PTR [r13+0x0],r14
   1400087b7:	mov    QWORD PTR [r15],r14
   1400087ba:	lea    rax,[rsi+0x130]
   1400087c1:	mov    QWORD PTR [rsp+0xc0],rax
   1400087c9:	mov    QWORD PTR [rsp+0x140],rax
   1400087d1:	mov    rcx,rax
   1400087d4:	call   QWORD PTR [rip+0x2992e]        # 0x140032108
   1400087da:	nop
   1400087db:	test   BYTE PTR [rip+0x477de],0x1        # 0x14004ffc0
   1400087e2:	je     0x1400087f7
   1400087e4:	lea    r8,[rip+0x2b9dd]        # 0x1400341c8
   1400087eb:	lea    rdx,[rip+0x2bb9e]        # 0x140034390
   1400087f2:	call   0x140003818
   1400087f7:	cmp    r14w,WORD PTR [rbx]
   1400087fb:	jne    0x140008852
   1400087fd:	lea    r13,[rip+0x42874]        # 0x14004b078
   140008804:	mov    rcx,QWORD PTR [rip+0x4286d]        # 0x14004b078
   14000880b:	cmp    rcx,r13
   14000880e:	je     0x14000882b
   140008810:	test   BYTE PTR [rcx+0x1c],0x1
   140008814:	je     0x14000882b
   140008816:	mov    edx,0xe
   14000881b:	lea    r8,[rip+0x2e2c6]        # 0x140036ae8
   140008822:	mov    rcx,QWORD PTR [rcx+0x10]
   140008826:	call   0x140001f08
   14000882b:	mov    edx,0x80070057
   140008830:	lea    rcx,[rsp+0x150]
   140008838:	call   0x140002064
   14000883d:	lea    rdx,[rip+0x40944]        # 0x140049188
   140008844:	lea    rcx,[rsp+0x150]
   14000884c:	call   0x14002e2da
   140008851:	int3   
   140008852:	mov    ecx,0x18
   140008857:	call   0x140023f10
   14000885c:	mov    rdi,rax
   14000885f:	mov    QWORD PTR [rsp+0xd0],rax
   140008867:	mov    QWORD PTR [rax+0x8],r14
   14000886b:	mov    DWORD PTR [rax+0x10],0x1
   140008872:	mov    rcx,rbx
   140008875:	call   QWORD PTR [rip+0x29ae5]        # 0x140032360
   14000887b:	mov    QWORD PTR [rdi],rax
   14000887e:	test   rax,rax
   140008881:	jne    0x140008889
   140008883:	call   0x14000203c
   140008888:	nop
   140008889:	mov    QWORD PTR [rsp+0x68],rdi
   14000888e:	call   0x140025df8
   140008893:	test   al,al
   140008895:	jne    0x140008979
   14000889b:	mov    QWORD PTR [rsp+0xd0],r14
   1400088a3:	lea    rax,[rsp+0xd0]
   1400088ab:	mov    QWORD PTR [rsp+0x110],rax
   1400088b3:	mov    QWORD PTR [rsp+0xa0],r14
   1400088bb:	lea    rdx,[rsp+0xa0]
   1400088c3:	lea    rcx,[rip+0x2d27e]        # 0x140035b48
   1400088ca:	call   0x140029890
   1400088cf:	mov    rbx,QWORD PTR [rsp+0xa0]
   1400088d7:	test   eax,eax
   1400088d9:	js     0x14000896b
   1400088df:	test   rbx,rbx
   1400088e2:	je     0x14000896b
   1400088e8:	or     eax,0xffffffff
   1400088eb:	lock xadd DWORD PTR [rdi+0x10],eax
   1400088f0:	cmp    eax,0x1
   1400088f3:	jne    0x140008922
   1400088f5:	mov    rcx,QWORD PTR [rdi]
   1400088f8:	test   rcx,rcx
   1400088fb:	je     0x140008906
   1400088fd:	call   QWORD PTR [rip+0x29a4d]        # 0x140032350
   140008903:	mov    QWORD PTR [rdi],r14
   140008906:	mov    rcx,QWORD PTR [rdi+0x8]
   14000890a:	test   rcx,rcx
   14000890d:	je     0x140008919
   14000890f:	call   QWORD PTR [rip+0x29cb3]        # 0x1400325c8
   140008915:	mov    QWORD PTR [rdi+0x8],r14
   140008919:	mov    rcx,rdi
   14000891c:	call   QWORD PTR [rip+0x29ca6]        # 0x1400325c8
   140008922:	mov    QWORD PTR [rsp+0x68],r14
   140008927:	mov    ecx,0x18
   14000892c:	call   0x140023f10
   140008931:	mov    rdi,rax
   140008934:	mov    QWORD PTR [rsp+0x80],rax
   14000893c:	mov    QWORD PTR [rax+0x8],r14
   140008940:	mov    DWORD PTR [rax+0x10],0x1
   140008947:	mov    rbx,QWORD PTR [rsp+0xa0]
   14000894f:	mov    rcx,rbx
   140008952:	call   QWORD PTR [rip+0x29a08]        # 0x140032360
   140008958:	mov    QWORD PTR [rdi],rax
   14000895b:	test   rax,rax
   14000895e:	jne    0x140008966
   140008960:	call   0x14000203c
   140008965:	nop
   140008966:	mov    QWORD PTR [rsp+0x68],rdi
   14000896b:	test   rbx,rbx
   14000896e:	je     0x140008979
   140008970:	mov    rcx,rbx
   140008973:	call   QWORD PTR [rip+0x29acf]        # 0x140032448
   140008979:	lea    rdx,[rsp+0x68]
   14000897e:	lea    rcx,[rsp+0x98]
   140008986:	call   0x14000bb34
   14000898b:	nop
   14000898c:	lea    rdx,[rsp+0x68]
   140008991:	lea    rcx,[rsp+0x70]
   140008996:	call   0x14000bbdc
   14000899b:	nop
   14000899c:	mov    QWORD PTR [rsp+0x78],r14
   1400089a1:	mov    QWORD PTR [rsp+0x80],r14
   1400089a9:	lea    rax,[rsp+0x80]
   1400089b1:	mov    QWORD PTR [rsp+0x20],rax
   1400089b6:	lea    r9,[rsp+0x78]
   1400089bb:	lea    r8,[rsp+0x70]
   1400089c0:	lea    rdx,[rsp+0x98]
   1400089c8:	mov    rcx,rsi
   1400089cb:	call   0x14000b39c
   1400089d0:	nop
   1400089d1:	or     QWORD PTR [rsp+0xa8],0xffffffffffffffff
   1400089da:	mov    rax,QWORD PTR [rsp+0x70]
   1400089df:	test   rax,rax
   1400089e2:	je     0x1400089e9
   1400089e4:	mov    rcx,QWORD PTR [rax]
   1400089e7:	jmp    0x1400089ec
   1400089e9:	mov    rcx,r14
   1400089ec:	lea    rdx,[rsp+0xa8]
   1400089f4:	call   0x140026154
   1400089f9:	mov    ebx,eax
   1400089fb:	test   eax,eax
   1400089fd:	jns    0x140008a63
   1400089ff:	lea    r13,[rip+0x42672]        # 0x14004b078
   140008a06:	mov    r10,QWORD PTR [rip+0x4266b]        # 0x14004b078
   140008a0d:	cmp    r10,r13
   140008a10:	je     0x140008a3f
   140008a12:	test   BYTE PTR [r10+0x1c],0x1
   140008a17:	je     0x140008a3f
   140008a19:	lea    rcx,[rsp+0x70]
   140008a1e:	call   0x14000de18
   140008a23:	mov    r9,rax
   140008a26:	mov    edx,0x10
   140008a2b:	mov    DWORD PTR [rsp+0x20],ebx
   140008a2f:	lea    r8,[rip+0x2e0b2]        # 0x140036ae8
   140008a36:	mov    rcx,QWORD PTR [r10+0x10]
   140008a3a:	call   0x140007264
   140008a3f:	mov    edx,ebx
   140008a41:	lea    rcx,[rsp+0x178]
   140008a49:	call   0x140002064
   140008a4e:	lea    rdx,[rip+0x40733]        # 0x140049188
   140008a55:	lea    rcx,[rsp+0x178]
   140008a5d:	call   0x14002e2da
   140008a62:	int3   
   140008a63:	mov    QWORD PTR [rsp+0x88],r14
   140008a6b:	mov    rax,QWORD PTR [rsp+0x98]
   140008a73:	test   rax,rax
   140008a76:	je     0x140008a7d
   140008a78:	mov    rdx,QWORD PTR [rax]
   140008a7b:	jmp    0x140008a80
   140008a7d:	mov    rdx,r14
   140008a80:	lea    r8,[rsp+0x88]
   140008a88:	mov    rcx,rsi
   140008a8b:	call   0x14000aa74
   140008a90:	mov    r14,QWORD PTR [rsp+0xa8]
   140008a98:	or     QWORD PTR [rsp+0xa8],0xffffffffffffffff
   140008aa1:	mov    rbx,QWORD PTR [rsp+0x88]
   140008aa9:	mov    rcx,QWORD PTR [rbx+0x118]
   140008ab0:	cmp    rcx,0xffffffffffffffff
   140008ab4:	je     0x140008ac4
   140008ab6:	call   QWORD PTR [rip+0x2969c]        # 0x140032158
   140008abc:	or     QWORD PTR [rbx+0x118],0xffffffffffffffff
   140008ac4:	mov    QWORD PTR [rbx+0x118],r14
   140008acb:	and    QWORD PTR [rsp+0xb0],0x0
   140008ad4:	test   rdi,rdi
   140008ad7:	je     0x140008ade
   140008ad9:	mov    r8,QWORD PTR [rdi]
   140008adc:	jmp    0x140008ae1
   140008ade:	xor    r8d,r8d
   140008ae1:	lea    r9,[rsp+0xb0]
   140008ae9:	mov    rdx,QWORD PTR [rbx+0x18]
   140008aed:	mov    rcx,rsi
   140008af0:	call   0x14000a83c
   140008af5:	mov    rax,QWORD PTR [rsp+0xf0]
   140008afd:	mov    QWORD PTR [rsp+0x50],rax
   140008b02:	mov    rax,QWORD PTR [rsp+0x108]
   140008b0a:	mov    QWORD PTR [rsp+0x48],rax
   140008b0f:	mov    rax,QWORD PTR [rsp+0x100]
   140008b17:	mov    QWORD PTR [rsp+0x40],rax
   140008b1c:	mov    rax,QWORD PTR [rsp+0xd8]
   140008b24:	mov    QWORD PTR [rsp+0x38],rax
   140008b29:	mov    rax,QWORD PTR [rsp+0xe0]
   140008b31:	mov    QWORD PTR [rsp+0x30],rax
   140008b36:	mov    rax,QWORD PTR [rsp+0xc8]
   140008b3e:	mov    QWORD PTR [rsp+0x28],rax
   140008b43:	mov    QWORD PTR [rsp+0x20],rbx
   140008b48:	mov    r9b,BYTE PTR [rsp+0x60]
   140008b4d:	mov    r8b,BYTE PTR [rsp+0x61]
   140008b52:	mov    rdi,QWORD PTR [rsp+0xb0]
   140008b5a:	mov    rdx,rdi
   140008b5d:	mov    rcx,rsi
   140008b60:	call   0x140009720
   140008b65:	mov    r8,QWORD PTR [rsp+0x78]
   140008b6a:	mov    QWORD PTR [r15],r8
   140008b6d:	mov    r14,QWORD PTR [rsp+0x80]
   140008b75:	mov    QWORD PTR [r13+0x0],r14
   140008b79:	lea    r13,[rip+0x424f8]        # 0x14004b078
   140008b80:	mov    rcx,QWORD PTR [rip+0x424f1]        # 0x14004b078
   140008b87:	cmp    rcx,r13
   140008b8a:	je     0x140008c09
   140008b8c:	test   BYTE PTR [rcx+0x1c],0x4
   140008b90:	je     0x140008c09
   140008b92:	mov    r15,r14
   140008b95:	shr    r15,0x20
   140008b99:	mov    r9,r8
   140008b9c:	shr    r9,0x20
   140008ba0:	movzx  esi,r14w
   140008ba4:	shr    r14d,0x10
   140008ba8:	movzx  r11d,r15w
   140008bac:	shr    r15d,0x10
   140008bb0:	movzx  r8d,r8w
   140008bb4:	mov    r10,QWORD PTR [rsp+0x78]
   140008bb9:	shr    r10d,0x10
   140008bbd:	movzx  eax,r9w
   140008bc1:	shr    r9d,0x10
   140008bc5:	mov    edx,0x11
   140008bca:	mov    DWORD PTR [rsp+0x50],esi
   140008bce:	mov    DWORD PTR [rsp+0x48],r14d
   140008bd3:	mov    DWORD PTR [rsp+0x40],r11d
   140008bd8:	mov    DWORD PTR [rsp+0x38],r15d
   140008bdd:	mov    DWORD PTR [rsp+0x30],r8d
   140008be2:	mov    DWORD PTR [rsp+0x28],r10d
   140008be7:	mov    DWORD PTR [rsp+0x20],eax
   140008beb:	mov    rcx,QWORD PTR [rcx+0x10]
   140008bef:	call   0x1400070b0
   140008bf4:	mov    rsi,QWORD PTR [rsp+0xb8]
   140008bfc:	mov    r8,QWORD PTR [rsp+0x78]
   140008c01:	mov    r14,QWORD PTR [rsp+0x80]
   140008c09:	mov    r10,r14
   140008c0c:	shr    r10,0x20
   140008c10:	mov    r11,r8
   140008c13:	shr    r11,0x20
   140008c17:	movzx  edx,r14w
   140008c1b:	shr    r14d,0x10
   140008c1f:	movzx  ecx,r10w
   140008c23:	shr    r10d,0x10
   140008c27:	movzx  eax,r8w
   140008c2b:	shr    r8d,0x10
   140008c2f:	mov    QWORD PTR [rsp+0xb8],r8
   140008c37:	movzx  r8d,r11w
   140008c3b:	shr    r11d,0x10
   140008c3f:	mov    DWORD PTR [rsp+0x40],edx
   140008c43:	mov    DWORD PTR [rsp+0x38],r14d
   140008c48:	mov    DWORD PTR [rsp+0x30],ecx
   140008c4c:	mov    DWORD PTR [rsp+0x28],r10d
   140008c51:	mov    DWORD PTR [rsp+0x20],eax
   140008c55:	mov    r9,QWORD PTR [rsp+0xb8]
   140008c5d:	mov    edx,r11d
   140008c60:	lea    rcx,[rip+0x2cfa9]        # 0x140035c10
   140008c67:	call   QWORD PTR [rip+0x296c3]        # 0x140032330
   140008c6d:	mov    rax,QWORD PTR [rsp+0xc8]
   140008c75:	cmp    BYTE PTR [rax],0x0
   140008c78:	jne    0x140008c8b
   140008c7a:	mov    rax,QWORD PTR [rsp+0xe0]
   140008c82:	cmp    BYTE PTR [rax],0x0
   140008c85:	je     0x140008d31
   140008c8b:	lea    r14,[rsi+0x60]
   140008c8f:	mov    QWORD PTR [rsp+0x148],r14
   140008c97:	mov    rcx,r14
   140008c9a:	call   QWORD PTR [rip+0x29468]        # 0x140032108
   140008ca0:	nop
   140008ca1:	lea    r15,[rsi+0x108]
   140008ca8:	mov    QWORD PTR [rsp+0x118],r15
   140008cb0:	mov    rcx,r15
   140008cb3:	call   QWORD PTR [rip+0x2944f]        # 0x140032108
   140008cb9:	nop
   140008cba:	lea    rdi,[rsi+0xd0]
   140008cc1:	lea    rax,[rdi+0x18]
   140008cc5:	mov    QWORD PTR [rsp+0x130],rax
   140008ccd:	mov    ecx,0x18
   140008cd2:	call   0x140023f10
   140008cd7:	mov    QWORD PTR [rax+0x10],rbx
   140008cdb:	and    QWORD PTR [rsp+0x138],0x0
   140008ce4:	mov    rcx,QWORD PTR [rdi+0x8]
   140008ce8:	mov    QWORD PTR [rax],rdi
   140008ceb:	mov    QWORD PTR [rax+0x8],rcx
   140008cef:	mov    QWORD PTR [rcx],rax
   140008cf2:	mov    QWORD PTR [rdi+0x8],rax
   140008cf6:	inc    QWORD PTR [rdi+0x10]
   140008cfa:	mov    eax,DWORD PTR [rbx+0x8]
   140008cfd:	test   eax,eax
   140008cff:	jne    0x140008d0a
   140008d01:	mov    DWORD PTR [rbx+0x8],0x1
   140008d08:	jmp    0x140008d0e
   140008d0a:	lock inc DWORD PTR [rbx+0x8]
   140008d0e:	mov    rcx,r15
   140008d11:	call   QWORD PTR [rip+0x293e1]        # 0x1400320f8
   140008d17:	nop
   140008d18:	mov    rcx,r14
   140008d1b:	call   QWORD PTR [rip+0x293d7]        # 0x1400320f8
   140008d21:	mov    rbx,QWORD PTR [rsp+0x88]
   140008d29:	mov    rdi,QWORD PTR [rsp+0xb0]
   140008d31:	lea    rcx,[rsi+0x200]
   140008d38:	mov    rax,QWORD PTR [rsp+0xd8]
   140008d40:	mov    r8d,DWORD PTR [rax]
   140008d43:	mov    edx,DWORD PTR [rax+0x4]
   140008d46:	call   0x140015c4c
   140008d4b:	call   0x140017164
   140008d50:	mov    edx,eax
   140008d52:	lea    rcx,[rsi+0x190]
   140008d59:	call   0x140015338
   140008d5e:	call   0x140016d98
   140008d63:	mov    rdx,rax
   140008d66:	mov    rcx,rsi
   140008d69:	call   0x14000b71c
   140008d6e:	mov    rcx,QWORD PTR [rip+0x42303]        # 0x14004b078
   140008d75:	cmp    rcx,r13
   140008d78:	je     0x140008d9d
   140008d7a:	test   BYTE PTR [rcx+0x1c],0x4
   140008d7e:	je     0x140008d9d
   140008d80:	mov    edx,0x12
   140008d85:	mov    r9d,DWORD PTR [rsi+0xe0]
   140008d8c:	lea    r8,[rip+0x2dd55]        # 0x140036ae8
   140008d93:	mov    rcx,QWORD PTR [rcx+0x10]
   140008d97:	call   0x140001f70
   140008d9c:	nop
   140008d9d:	test   rdi,rdi
   140008da0:	je     0x140008db8
   140008da2:	mov    rax,QWORD PTR [rdi]
   140008da5:	mov    rsi,QWORD PTR [rax+0x10]
   140008da9:	mov    rcx,rsi
   140008dac:	call   QWORD PTR [rip+0x298f6]        # 0x1400326a8
   140008db2:	mov    rcx,rdi
   140008db5:	call   rsi
   140008db7:	nop
   140008db8:	mov    eax,DWORD PTR [rbx+0x8]
   140008dbb:	cmp    eax,0x1
   140008dbe:	jne    0x140008dc9
   140008dc0:	mov    DWORD PTR [rbx+0x8],0x0
   140008dc7:	jmp    0x140008dd6
   140008dc9:	or     eax,0xffffffff
   140008dcc:	lock xadd DWORD PTR [rbx+0x8],eax
   140008dd1:	sub    eax,0x1
   140008dd4:	jg     0x140008df8
   140008dd6:	mov    rbx,QWORD PTR [rsp+0x88]
   140008dde:	mov    rax,QWORD PTR [rbx]
   140008de1:	mov    rdi,QWORD PTR [rax]
   140008de4:	mov    rcx,rdi
   140008de7:	call   QWORD PTR [rip+0x298bb]        # 0x1400326a8
   140008ded:	mov    edx,0x1
   140008df2:	mov    rcx,rbx
   140008df5:	call   rdi
   140008df7:	nop
   140008df8:	jmp    0x140008dfa
   140008dfa:	lea    rcx,[rsp+0x70]
   140008dff:	call   0x14000de2c
   140008e04:	nop
   140008e05:	lea    rcx,[rsp+0x98]
   140008e0d:	call   0x14000de2c
   140008e12:	nop
   140008e13:	lea    rcx,[rsp+0x68]
   140008e18:	call   0x14000de2c
   140008e1d:	nop
   140008e1e:	mov    rcx,QWORD PTR [rsp+0xc0]
   140008e26:	call   QWORD PTR [rip+0x292cc]        # 0x1400320f8
   140008e2c:	nop
   140008e2d:	mov    rax,QWORD PTR [rsp+0x90]
   140008e35:	or     ecx,0xffffffff
   140008e38:	lock xadd DWORD PTR [rax+0x8],ecx
   140008e3d:	dec    ecx
   140008e3f:	cmp    ecx,0x80000000
   140008e45:	jne    0x140008e96
   140008e47:	mov    rcx,QWORD PTR [rsp+0x90]
   140008e4f:	call   0x140029c90
   140008e54:	jmp    0x140008e96
   140008e56:	lea    r13,[rip+0x4221b]        # 0x14004b078
   140008e5d:	mov    rcx,QWORD PTR [rip+0x42214]        # 0x14004b078
   140008e64:	cmp    rcx,r13
   140008e67:	je     0x140008e8b
   140008e69:	test   BYTE PTR [rcx+0x1c],0x1
   140008e6d:	je     0x140008e8b
   140008e6f:	mov    edx,0xa
   140008e74:	lea    r9,[rip+0x2cc55]        # 0x140035ad0
   140008e7b:	lea    r8,[rip+0x2b54e]        # 0x1400343d0
   140008e82:	mov    rcx,QWORD PTR [rcx+0x10]
   140008e86:	call   0x1400038e0
   140008e8b:	mov    ecx,0x80070057
   140008e90:	call   0x140029d64
   140008e95:	nop
   140008e96:	mov    rcx,QWORD PTR [rsp+0x1a0]
   140008e9e:	xor    rcx,rsp
   140008ea1:	call   0x14002dd00
   140008ea6:	add    rsp,0x1b8
   140008ead:	pop    r15
   140008eaf:	pop    r14
   140008eb1:	pop    r13
   140008eb3:	pop    rdi
   140008eb4:	pop    rsi
   140008eb5:	pop    rbx
   140008eb6:	ret    
   140008eb7:	int3   
   140008eb8:	int3   
   140008eb9:	int3   
   140008eba:	int3   
   140008ebb:	int3   
   140008ebc:	int3   
   140008ebd:	int3   
   140008ebe:	int3   
   140008ebf:	int3   
   140008ec0:	mov    QWORD PTR [rsp+0x8],rbx
   140008ec5:	push   rdi
   140008ec6:	sub    rsp,0x80
   140008ecd:	mov    rbx,rdx
   140008ed0:	mov    rcx,QWORD PTR [rip+0x421a1]        # 0x14004b078
   140008ed7:	lea    rdi,[rip+0x4219a]        # 0x14004b078
   140008ede:	cmp    rcx,rdi
   140008ee1:	je     0x140008fa1
   140008ee7:	test   BYTE PTR [rcx+0x1c],0x2
   140008eeb:	je     0x140008f5f
   140008eed:	mov    eax,DWORD PTR [rbx+0x24]
   140008ef0:	movzx  edx,BYTE PTR [rdx+0x3f]
   140008ef4:	movzx  r8d,BYTE PTR [rbx+0x40]
   140008ef9:	movzx  r10d,BYTE PTR [rbx+0x3e]
   140008efe:	movzx  r11d,BYTE PTR [rbx+0x3d]
   140008f03:	movzx  r9d,BYTE PTR [rbx+0x3c]
   140008f08:	mov    rcx,QWORD PTR [rcx+0x10]
   140008f0c:	mov    DWORD PTR [rsp+0x78],eax
   140008f10:	mov    eax,DWORD PTR [rbx+0x20]
   140008f13:	mov    DWORD PTR [rsp+0x70],eax
   140008f17:	mov    eax,DWORD PTR [rbx+0x1c]
   140008f1a:	mov    DWORD PTR [rsp+0x68],eax
   140008f1e:	mov    eax,DWORD PTR [rbx+0x18]
   140008f21:	mov    DWORD PTR [rsp+0x60],eax
   140008f25:	mov    eax,DWORD PTR [rbx+0xc]
   140008f28:	mov    DWORD PTR [rsp+0x58],edx
   140008f2c:	mov    DWORD PTR [rsp+0x50],eax
   140008f30:	mov    eax,DWORD PTR [rbx+0x8]
   140008f33:	mov    DWORD PTR [rsp+0x48],eax
   140008f37:	mov    eax,DWORD PTR [rbx+0x4]
   140008f3a:	mov    DWORD PTR [rsp+0x40],r8d
   140008f3f:	mov    DWORD PTR [rsp+0x38],eax
   140008f43:	mov    eax,DWORD PTR [rbx]
   140008f45:	mov    DWORD PTR [rsp+0x30],eax
   140008f49:	mov    DWORD PTR [rsp+0x28],r10d
   140008f4e:	mov    DWORD PTR [rsp+0x20],r11d
   140008f53:	call   0x1400075a0
   140008f58:	mov    rcx,QWORD PTR [rip+0x42119]        # 0x14004b078
   140008f5f:	cmp    rcx,rdi
   140008f62:	je     0x140008fa1
   140008f64:	test   BYTE PTR [rcx+0x1c],0x2
   140008f68:	je     0x140008fa1
   140008f6a:	mov    eax,DWORD PTR [rbx+0x38]
   140008f6d:	mov    r9d,DWORD PTR [rbx+0x10]
   140008f71:	mov    rcx,QWORD PTR [rcx+0x10]
   140008f75:	mov    DWORD PTR [rsp+0x48],eax
   140008f79:	mov    eax,DWORD PTR [rbx+0x34]
   140008f7c:	mov    DWORD PTR [rsp+0x40],eax
   140008f80:	mov    eax,DWORD PTR [rbx+0x30]
   140008f83:	mov    DWORD PTR [rsp+0x38],eax
   140008f87:	mov    eax,DWORD PTR [rbx+0x2c]
   140008f8a:	mov    DWORD PTR [rsp+0x30],eax
   140008f8e:	mov    eax,DWORD PTR [rbx+0x28]
   140008f91:	mov    DWORD PTR [rsp+0x28],eax
   140008f95:	mov    eax,DWORD PTR [rbx+0x14]
   140008f98:	mov    DWORD PTR [rsp+0x20],eax
   140008f9c:	call   0x140007150
   140008fa1:	mov    rbx,QWORD PTR [rsp+0x90]
   140008fa9:	add    rsp,0x80
   140008fb0:	pop    rdi
   140008fb1:	ret    
   140008fb2:	int3   
   140008fb3:	int3   
   140008fb4:	int3   
   140008fb5:	int3   
   140008fb6:	int3   
   140008fb7:	int3   
   140008fb8:	mov    QWORD PTR [rsp+0x10],rbx
   140008fbd:	mov    QWORD PTR [rsp+0x8],rcx
   140008fc2:	push   rbp
   140008fc3:	push   rsi
   140008fc4:	push   rdi
   140008fc5:	push   r12
   140008fc7:	push   r13
   140008fc9:	push   r14
   140008fcb:	push   r15
   140008fcd:	mov    rbp,rsp
   140008fd0:	sub    rsp,0x20
   140008fd4:	xor    esi,esi
   140008fd6:	mov    rdi,rdx
   140008fd9:	mov    DWORD PTR [rbp+0x40],esi
   140008fdc:	mov    DWORD PTR [rbp+0x50],esi
   140008fdf:	call   QWORD PTR [rip+0x2946b]        # 0x140032450
   140008fe5:	mov    rbx,QWORD PTR [rax+0xa0]
   140008fec:	mov    rcx,rbx
   140008fef:	call   QWORD PTR [rip+0x296b3]        # 0x1400326a8
   140008ff5:	lea    r8,[rbp+0x50]
   140008ff9:	xor    edx,edx
   140008ffb:	lea    rcx,[rip+0x2cc9e]        # 0x140035ca0
   140009002:	call   rbx
   140009004:	cmp    DWORD PTR [rbp+0x50],esi
   140009007:	lea    r12,[rip+0x4206a]        # 0x14004b078
   14000900e:	mov    ebx,esi
   140009010:	lea    r13,[rip+0x2dad1]        # 0x140036ae8
   140009017:	setne  bl
   14000901a:	lea    r14d,[rsi+0x1]
   14000901e:	mov    r15b,0x2
   140009021:	test   eax,eax
   140009023:	js     0x140009054
   140009025:	cmp    eax,r14d
   140009028:	je     0x140009054
   14000902a:	mov    rcx,QWORD PTR [rip+0x42047]        # 0x14004b078
   140009031:	cmp    rcx,r12
   140009034:	je     0x14000904b
   140009036:	test   BYTE PTR [rcx+0x1c],r15b
   14000903a:	je     0x14000904b
   14000903c:	mov    rcx,QWORD PTR [rcx+0x10]
   140009040:	lea    edx,[rsi+0x15]
   140009043:	mov    r8,r13
   140009046:	call   0x140001f08
   14000904b:	cmp    ebx,r14d
   14000904e:	sete   al
   140009051:	mov    BYTE PTR [rdi+0x3c],al
   140009054:	mov    DWORD PTR [rbp+0x50],esi
   140009057:	call   QWORD PTR [rip+0x293f3]        # 0x140032450
   14000905d:	mov    rbx,QWORD PTR [rax+0xa0]
   140009064:	mov    rcx,rbx
   140009067:	call   QWORD PTR [rip+0x2963b]        # 0x1400326a8
   14000906d:	lea    r8,[rbp+0x50]
   140009071:	xor    edx,edx
   140009073:	lea    rcx,[rip+0x2cc76]        # 0x140035cf0
   14000907a:	call   rbx
   14000907c:	cmp    DWORD PTR [rbp+0x50],esi
   14000907f:	mov    ebx,esi
   140009081:	setne  bl
   140009084:	test   eax,eax
   140009086:	js     0x1400090b9
   140009088:	cmp    eax,r14d
   14000908b:	je     0x1400090b9
   14000908d:	mov    rcx,QWORD PTR [rip+0x41fe4]        # 0x14004b078
   140009094:	cmp    rcx,r12
   140009097:	je     0x1400090b0
   140009099:	test   BYTE PTR [rcx+0x1c],r15b
   14000909d:	je     0x1400090b0
   14000909f:	mov    rcx,QWORD PTR [rcx+0x10]
   1400090a3:	mov    edx,0x16
   1400090a8:	mov    r8,r13
   1400090ab:	call   0x140001f08
   1400090b0:	cmp    ebx,r14d
   1400090b3:	sete   al
   1400090b6:	mov    BYTE PTR [rdi+0x3d],al
   1400090b9:	mov    DWORD PTR [rbp+0x50],esi
   1400090bc:	call   QWORD PTR [rip+0x2938e]        # 0x140032450
   1400090c2:	mov    rbx,QWORD PTR [rax+0xa0]
   1400090c9:	mov    rcx,rbx
   1400090cc:	call   QWORD PTR [rip+0x295d6]        # 0x1400326a8
   1400090d2:	lea    r8,[rbp+0x50]
   1400090d6:	xor    edx,edx
   1400090d8:	lea    rcx,[rip+0x2cc81]        # 0x140035d60
   1400090df:	call   rbx
   1400090e1:	cmp    DWORD PTR [rbp+0x50],esi
   1400090e4:	mov    ebx,esi
   1400090e6:	setne  bl
   1400090e9:	test   eax,eax
   1400090eb:	js     0x14000911e
   1400090ed:	cmp    eax,r14d
   1400090f0:	je     0x14000911e
   1400090f2:	mov    rcx,QWORD PTR [rip+0x41f7f]        # 0x14004b078
   1400090f9:	cmp    rcx,r12
   1400090fc:	je     0x140009115
   1400090fe:	test   BYTE PTR [rcx+0x1c],r15b
   140009102:	je     0x140009115
   140009104:	mov    rcx,QWORD PTR [rcx+0x10]
   140009108:	mov    edx,0x17
   14000910d:	mov    r8,r13
   140009110:	call   0x140001f08
   140009115:	cmp    ebx,r14d
   140009118:	sete   al
   14000911b:	mov    BYTE PTR [rdi+0x3e],al
   14000911e:	call   QWORD PTR [rip+0x2932c]        # 0x140032450
   140009124:	mov    rbx,QWORD PTR [rax+0xa0]
   14000912b:	mov    rcx,rbx
   14000912e:	call   QWORD PTR [rip+0x29574]        # 0x1400326a8
   140009134:	lea    r8,[rbp+0x40]
   140009138:	xor    edx,edx
   14000913a:	lea    rcx,[rip+0x2cc9f]        # 0x140035de0
   140009141:	call   rbx
   140009143:	test   eax,eax
   140009145:	js     0x140009174
   140009147:	cmp    eax,r14d
   14000914a:	je     0x140009174
   14000914c:	mov    rcx,QWORD PTR [rip+0x41f25]        # 0x14004b078
   140009153:	cmp    rcx,r12
   140009156:	je     0x14000916f
   140009158:	test   BYTE PTR [rcx+0x1c],r15b
   14000915c:	je     0x14000916f
   14000915e:	mov    rcx,QWORD PTR [rcx+0x10]
   140009162:	mov    edx,0x18
   140009167:	mov    r8,r13
   14000916a:	call   0x140001f08
   14000916f:	mov    eax,DWORD PTR [rbp+0x40]
   140009172:	mov    DWORD PTR [rdi],eax
   140009174:	call   QWORD PTR [rip+0x292d6]        # 0x140032450
   14000917a:	mov    rbx,QWORD PTR [rax+0xa0]
   140009181:	mov    rcx,rbx
   140009184:	call   QWORD PTR [rip+0x2951e]        # 0x1400326a8
   14000918a:	lea    r8,[rbp+0x40]
   14000918e:	xor    edx,edx
   140009190:	lea    rcx,[rip+0x2ccb9]        # 0x140035e50
   140009197:	call   rbx
   140009199:	test   eax,eax
   14000919b:	js     0x1400091cb
   14000919d:	cmp    eax,r14d
   1400091a0:	je     0x1400091cb
   1400091a2:	mov    rcx,QWORD PTR [rip+0x41ecf]        # 0x14004b078
   1400091a9:	cmp    rcx,r12
   1400091ac:	je     0x1400091c5
   1400091ae:	test   BYTE PTR [rcx+0x1c],r15b
   1400091b2:	je     0x1400091c5
   1400091b4:	mov    rcx,QWORD PTR [rcx+0x10]
   1400091b8:	mov    edx,0x19
   1400091bd:	mov    r8,r13
   1400091c0:	call   0x140001f08
   1400091c5:	mov    eax,DWORD PTR [rbp+0x40]
   1400091c8:	mov    DWORD PTR [rdi+0x4],eax
   1400091cb:	call   QWORD PTR [rip+0x2927f]        # 0x140032450
   1400091d1:	mov    rbx,QWORD PTR [rax+0xa0]
   1400091d8:	mov    rcx,rbx
   1400091db:	call   QWORD PTR [rip+0x294c7]        # 0x1400326a8
   1400091e1:	lea    r8,[rbp+0x40]
   1400091e5:	xor    edx,edx
   1400091e7:	lea    rcx,[rip+0x2ccc2]        # 0x140035eb0
   1400091ee:	call   rbx
   1400091f0:	test   eax,eax
   1400091f2:	js     0x140009222
   1400091f4:	cmp    eax,r14d
   1400091f7:	je     0x140009222
   1400091f9:	mov    rcx,QWORD PTR [rip+0x41e78]        # 0x14004b078
   140009200:	cmp    rcx,r12
   140009203:	je     0x14000921c
   140009205:	test   BYTE PTR [rcx+0x1c],r15b
   140009209:	je     0x14000921c
   14000920b:	mov    rcx,QWORD PTR [rcx+0x10]
   14000920f:	mov    edx,0x1a
   140009214:	mov    r8,r13
   140009217:	call   0x140001f08
   14000921c:	mov    eax,DWORD PTR [rbp+0x40]
   14000921f:	mov    DWORD PTR [rdi+0x8],eax
   140009222:	call   QWORD PTR [rip+0x29228]        # 0x140032450
   140009228:	mov    rbx,QWORD PTR [rax+0xa0]
   14000922f:	mov    rcx,rbx
   140009232:	call   QWORD PTR [rip+0x29470]        # 0x1400326a8
   140009238:	lea    r8,[rbp+0x40]
   14000923c:	xor    edx,edx
   14000923e:	lea    rcx,[rip+0x2cccb]        # 0x140035f10
   140009245:	call   rbx
   140009247:	test   eax,eax
   140009249:	js     0x140009279
   14000924b:	cmp    eax,r14d
   14000924e:	je     0x140009279
   140009250:	mov    rcx,QWORD PTR [rip+0x41e21]        # 0x14004b078
   140009257:	cmp    rcx,r12
   14000925a:	je     0x140009273
   14000925c:	test   BYTE PTR [rcx+0x1c],r15b
   140009260:	je     0x140009273
   140009262:	mov    rcx,QWORD PTR [rcx+0x10]
   140009266:	mov    edx,0x1b
   14000926b:	mov    r8,r13
   14000926e:	call   0x140001f08
   140009273:	mov    eax,DWORD PTR [rbp+0x40]
   140009276:	mov    DWORD PTR [rdi+0xc],eax
   140009279:	mov    DWORD PTR [rbp+0x50],esi
   14000927c:	call   QWORD PTR [rip+0x291ce]        # 0x140032450
   140009282:	mov    rbx,QWORD PTR [rax+0xa0]
   140009289:	mov    rcx,rbx
   14000928c:	call   QWORD PTR [rip+0x29416]        # 0x1400326a8
   140009292:	lea    r8,[rbp+0x50]
   140009296:	xor    edx,edx
   140009298:	lea    rcx,[rip+0x2ccd1]        # 0x140035f70
   14000929f:	call   rbx
   1400092a1:	cmp    DWORD PTR [rbp+0x50],esi
   1400092a4:	mov    ebx,esi
   1400092a6:	setne  bl
   1400092a9:	test   eax,eax
   1400092ab:	js     0x1400092de
   1400092ad:	cmp    eax,r14d
   1400092b0:	je     0x1400092de
   1400092b2:	mov    rcx,QWORD PTR [rip+0x41dbf]        # 0x14004b078
   1400092b9:	cmp    rcx,r12
   1400092bc:	je     0x1400092d5
   1400092be:	test   BYTE PTR [rcx+0x1c],r15b
   1400092c2:	je     0x1400092d5
   1400092c4:	mov    rcx,QWORD PTR [rcx+0x10]
   1400092c8:	mov    edx,0x1c
   1400092cd:	mov    r8,r13
   1400092d0:	call   0x140001f08
   1400092d5:	cmp    ebx,r14d
   1400092d8:	sete   al
   1400092db:	mov    BYTE PTR [rdi+0x40],al
   1400092de:	mov    DWORD PTR [rbp+0x50],esi
   1400092e1:	call   QWORD PTR [rip+0x29169]        # 0x140032450
   1400092e7:	mov    rbx,QWORD PTR [rax+0xa0]
   1400092ee:	mov    rcx,rbx
   1400092f1:	call   QWORD PTR [rip+0x293b1]        # 0x1400326a8
   1400092f7:	lea    r8,[rbp+0x50]
   1400092fb:	xor    edx,edx
   1400092fd:	lea    rcx,[rip+0x2ccdc]        # 0x140035fe0
   140009304:	call   rbx
   140009306:	cmp    DWORD PTR [rbp+0x50],esi
   140009309:	setne  sil
   14000930d:	test   eax,eax
   14000930f:	js     0x140009342
   140009311:	cmp    eax,r14d
   140009314:	je     0x140009342
   140009316:	mov    rcx,QWORD PTR [rip+0x41d5b]        # 0x14004b078
   14000931d:	cmp    rcx,r12
   140009320:	je     0x140009339
   140009322:	test   BYTE PTR [rcx+0x1c],r15b
   140009326:	je     0x140009339
   140009328:	mov    rcx,QWORD PTR [rcx+0x10]
   14000932c:	mov    edx,0x1d
   140009331:	mov    r8,r13
   140009334:	call   0x140001f08
   140009339:	cmp    esi,r14d
   14000933c:	sete   al
   14000933f:	mov    BYTE PTR [rdi+0x3f],al
   140009342:	call   QWORD PTR [rip+0x29108]        # 0x140032450
   140009348:	mov    rbx,QWORD PTR [rax+0xa0]
   14000934f:	mov    rcx,rbx
   140009352:	call   QWORD PTR [rip+0x29350]        # 0x1400326a8
   140009358:	lea    r8,[rbp+0x40]
   14000935c:	xor    edx,edx
   14000935e:	lea    rcx,[rip+0x2cceb]        # 0x140036050
   140009365:	call   rbx
   140009367:	mov    esi,0x80000000
   14000936c:	test   esi,eax
   14000936e:	jne    0x14000939e
   140009370:	cmp    eax,r14d
   140009373:	je     0x14000939e
   140009375:	mov    rcx,QWORD PTR [rip+0x41cfc]        # 0x14004b078
   14000937c:	cmp    rcx,r12
   14000937f:	je     0x140009398
   140009381:	test   BYTE PTR [rcx+0x1c],r15b
   140009385:	je     0x140009398
   140009387:	mov    rcx,QWORD PTR [rcx+0x10]
   14000938b:	mov    edx,0x1e
   140009390:	mov    r8,r13
   140009393:	call   0x140001f08
   140009398:	mov    eax,DWORD PTR [rbp+0x40]
   14000939b:	mov    DWORD PTR [rdi+0x10],eax
   14000939e:	call   QWORD PTR [rip+0x290ac]        # 0x140032450
   1400093a4:	mov    rbx,QWORD PTR [rax+0xa0]
   1400093ab:	mov    rcx,rbx
   1400093ae:	call   QWORD PTR [rip+0x292f4]        # 0x1400326a8
   1400093b4:	lea    r8,[rbp+0x40]
   1400093b8:	xor    edx,edx
   1400093ba:	lea    rcx,[rip+0x2ccef]        # 0x1400360b0
   1400093c1:	call   rbx
   1400093c3:	test   esi,eax
   1400093c5:	jne    0x1400093f5
   1400093c7:	cmp    eax,r14d
   1400093ca:	je     0x1400093f5
   1400093cc:	mov    rcx,QWORD PTR [rip+0x41ca5]        # 0x14004b078
   1400093d3:	cmp    rcx,r12
   1400093d6:	je     0x1400093ef
   1400093d8:	test   BYTE PTR [rcx+0x1c],r15b
   1400093dc:	je     0x1400093ef
   1400093de:	mov    rcx,QWORD PTR [rcx+0x10]
   1400093e2:	mov    edx,0x1f
   1400093e7:	mov    r8,r13
   1400093ea:	call   0x140001f08
   1400093ef:	mov    eax,DWORD PTR [rbp+0x40]
   1400093f2:	mov    DWORD PTR [rdi+0x18],eax
   1400093f5:	call   QWORD PTR [rip+0x29055]        # 0x140032450
   1400093fb:	mov    rbx,QWORD PTR [rax+0xa0]
   140009402:	mov    rcx,rbx
   140009405:	call   QWORD PTR [rip+0x2929d]        # 0x1400326a8
   14000940b:	lea    r8,[rbp+0x40]
   14000940f:	xor    edx,edx
   140009411:	lea    rcx,[rip+0x2cce8]        # 0x140036100
   140009418:	call   rbx
   14000941a:	test   esi,eax
   14000941c:	jne    0x14000944c
   14000941e:	cmp    eax,r14d
   140009421:	je     0x14000944c
   140009423:	mov    rcx,QWORD PTR [rip+0x41c4e]        # 0x14004b078
   14000942a:	cmp    rcx,r12
   14000942d:	je     0x140009446
   14000942f:	test   BYTE PTR [rcx+0x1c],r15b
   140009433:	je     0x140009446
   140009435:	mov    rcx,QWORD PTR [rcx+0x10]
   140009439:	mov    edx,0x20
   14000943e:	mov    r8,r13
   140009441:	call   0x140001f08
   140009446:	mov    eax,DWORD PTR [rbp+0x40]
   140009449:	mov    DWORD PTR [rdi+0x1c],eax
   14000944c:	call   QWORD PTR [rip+0x28ffe]        # 0x140032450
   140009452:	mov    rbx,QWORD PTR [rax+0xa0]
   140009459:	mov    rcx,rbx
   14000945c:	call   QWORD PTR [rip+0x29246]        # 0x1400326a8
   140009462:	lea    r8,[rbp+0x40]
   140009466:	xor    edx,edx
   140009468:	lea    rcx,[rip+0x2cce1]        # 0x140036150
   14000946f:	call   rbx
   140009471:	test   esi,eax
   140009473:	jne    0x1400094a3
   140009475:	cmp    eax,r14d
   140009478:	je     0x1400094a3
   14000947a:	mov    rcx,QWORD PTR [rip+0x41bf7]        # 0x14004b078
   140009481:	cmp    rcx,r12
   140009484:	je     0x14000949d
   140009486:	test   BYTE PTR [rcx+0x1c],r15b
   14000948a:	je     0x14000949d
   14000948c:	mov    rcx,QWORD PTR [rcx+0x10]
   140009490:	mov    edx,0x21
   140009495:	mov    r8,r13
   140009498:	call   0x140001f08
   14000949d:	mov    eax,DWORD PTR [rbp+0x40]
   1400094a0:	mov    DWORD PTR [rdi+0x20],eax
   1400094a3:	call   QWORD PTR [rip+0x28fa7]        # 0x140032450
   1400094a9:	mov    rbx,QWORD PTR [rax+0xa0]
   1400094b0:	mov    rcx,rbx
   1400094b3:	call   QWORD PTR [rip+0x291ef]        # 0x1400326a8
   1400094b9:	lea    r8,[rbp+0x40]
   1400094bd:	xor    edx,edx
   1400094bf:	lea    rcx,[rip+0x2ccda]        # 0x1400361a0
   1400094c6:	call   rbx
   1400094c8:	test   esi,eax
   1400094ca:	jne    0x1400094fa
   1400094cc:	cmp    eax,r14d
   1400094cf:	je     0x1400094fa
   1400094d1:	mov    rcx,QWORD PTR [rip+0x41ba0]        # 0x14004b078
   1400094d8:	cmp    rcx,r12
   1400094db:	je     0x1400094f4
   1400094dd:	test   BYTE PTR [rcx+0x1c],r15b
   1400094e1:	je     0x1400094f4
   1400094e3:	mov    rcx,QWORD PTR [rcx+0x10]
   1400094e7:	mov    edx,0x22
   1400094ec:	mov    r8,r13
   1400094ef:	call   0x140001f08
   1400094f4:	mov    eax,DWORD PTR [rbp+0x40]
   1400094f7:	mov    DWORD PTR [rdi+0x24],eax
   1400094fa:	call   QWORD PTR [rip+0x28f50]        # 0x140032450
   140009500:	mov    rbx,QWORD PTR [rax+0xa0]
   140009507:	mov    rcx,rbx
   14000950a:	call   QWORD PTR [rip+0x29198]        # 0x1400326a8
   140009510:	lea    r8,[rbp+0x40]
   140009514:	xor    edx,edx
   140009516:	lea    rcx,[rip+0x2ccd3]        # 0x1400361f0
   14000951d:	call   rbx
   14000951f:	test   esi,eax
   140009521:	jne    0x140009551
   140009523:	cmp    eax,r14d
   140009526:	je     0x140009551
   140009528:	mov    rcx,QWORD PTR [rip+0x41b49]        # 0x14004b078
   14000952f:	cmp    rcx,r12
   140009532:	je     0x14000954b
   140009534:	test   BYTE PTR [rcx+0x1c],r15b
   140009538:	je     0x14000954b
   14000953a:	mov    rcx,QWORD PTR [rcx+0x10]
   14000953e:	mov    edx,0x23
   140009543:	mov    r8,r13
   140009546:	call   0x140001f08
   14000954b:	mov    eax,DWORD PTR [rbp+0x40]
   14000954e:	mov    DWORD PTR [rdi+0x14],eax
   140009551:	call   QWORD PTR [rip+0x28ef9]        # 0x140032450
   140009557:	mov    rbx,QWORD PTR [rax+0xa0]
   14000955e:	mov    rcx,rbx
   140009561:	call   QWORD PTR [rip+0x29141]        # 0x1400326a8
   140009567:	lea    r8,[rbp+0x40]
   14000956b:	xor    edx,edx
   14000956d:	lea    rcx,[rip+0x2ccdc]        # 0x140036250
   140009574:	call   rbx
   140009576:	test   esi,eax
   140009578:	jne    0x1400095a8
   14000957a:	cmp    eax,r14d
   14000957d:	je     0x1400095a8
   14000957f:	mov    rcx,QWORD PTR [rip+0x41af2]        # 0x14004b078
   140009586:	cmp    rcx,r12
   140009589:	je     0x1400095a2
   14000958b:	test   BYTE PTR [rcx+0x1c],r15b
   14000958f:	je     0x1400095a2
   140009591:	mov    rcx,QWORD PTR [rcx+0x10]
   140009595:	mov    edx,0x24
   14000959a:	mov    r8,r13
   14000959d:	call   0x140001f08
   1400095a2:	mov    eax,DWORD PTR [rbp+0x40]
   1400095a5:	mov    DWORD PTR [rdi+0x28],eax
   1400095a8:	call   QWORD PTR [rip+0x28ea2]        # 0x140032450
   1400095ae:	mov    rbx,QWORD PTR [rax+0xa0]
   1400095b5:	mov    rcx,rbx
   1400095b8:	call   QWORD PTR [rip+0x290ea]        # 0x1400326a8
   1400095be:	lea    r8,[rbp+0x40]
   1400095c2:	xor    edx,edx
   1400095c4:	lea    rcx,[rip+0x2cce5]        # 0x1400362b0
   1400095cb:	call   rbx
   1400095cd:	test   esi,eax
   1400095cf:	jne    0x1400095ff
   1400095d1:	cmp    eax,r14d
   1400095d4:	je     0x1400095ff
   1400095d6:	mov    rcx,QWORD PTR [rip+0x41a9b]        # 0x14004b078
   1400095dd:	cmp    rcx,r12
   1400095e0:	je     0x1400095f9
   1400095e2:	test   BYTE PTR [rcx+0x1c],r15b
   1400095e6:	je     0x1400095f9
   1400095e8:	mov    rcx,QWORD PTR [rcx+0x10]
   1400095ec:	mov    edx,0x25
   1400095f1:	mov    r8,r13
   1400095f4:	call   0x140001f08
   1400095f9:	mov    eax,DWORD PTR [rbp+0x40]
   1400095fc:	mov    DWORD PTR [rdi+0x2c],eax
   1400095ff:	call   QWORD PTR [rip+0x28e4b]        # 0x140032450
   140009605:	mov    rbx,QWORD PTR [rax+0xa0]
   14000960c:	mov    rcx,rbx
   14000960f:	call   QWORD PTR [rip+0x29093]        # 0x1400326a8
   140009615:	lea    r8,[rbp+0x40]
   140009619:	xor    edx,edx
   14000961b:	lea    rcx,[rip+0x2ccfe]        # 0x140036320
   140009622:	call   rbx
   140009624:	test   esi,eax
   140009626:	jne    0x140009656
   140009628:	cmp    eax,r14d
   14000962b:	je     0x140009656
   14000962d:	mov    rcx,QWORD PTR [rip+0x41a44]        # 0x14004b078
   140009634:	cmp    rcx,r12
   140009637:	je     0x140009650
   140009639:	test   BYTE PTR [rcx+0x1c],r15b
   14000963d:	je     0x140009650
   14000963f:	mov    rcx,QWORD PTR [rcx+0x10]
   140009643:	mov    edx,0x26
   140009648:	mov    r8,r13
   14000964b:	call   0x140001f08
   140009650:	mov    eax,DWORD PTR [rbp+0x40]
   140009653:	mov    DWORD PTR [rdi+0x30],eax
   140009656:	call   QWORD PTR [rip+0x28df4]        # 0x140032450
   14000965c:	mov    rbx,QWORD PTR [rax+0xa0]
   140009663:	mov    rcx,rbx
   140009666:	call   QWORD PTR [rip+0x2903c]        # 0x1400326a8
   14000966c:	lea    r8,[rbp+0x40]
   140009670:	xor    edx,edx
   140009672:	lea    rcx,[rip+0x2cd27]        # 0x1400363a0
   140009679:	call   rbx
   14000967b:	test   esi,eax
   14000967d:	jne    0x1400096ad
   14000967f:	cmp    eax,r14d
   140009682:	je     0x1400096ad
   140009684:	mov    rcx,QWORD PTR [rip+0x419ed]        # 0x14004b078
   14000968b:	cmp    rcx,r12
   14000968e:	je     0x1400096a7
   140009690:	test   BYTE PTR [rcx+0x1c],r15b
   140009694:	je     0x1400096a7
   140009696:	mov    rcx,QWORD PTR [rcx+0x10]
   14000969a:	mov    edx,0x27
   14000969f:	mov    r8,r13
   1400096a2:	call   0x140001f08
   1400096a7:	mov    eax,DWORD PTR [rbp+0x40]
   1400096aa:	mov    DWORD PTR [rdi+0x34],eax
   1400096ad:	call   QWORD PTR [rip+0x28d9d]        # 0x140032450
   1400096b3:	mov    rbx,QWORD PTR [rax+0xa0]
   1400096ba:	mov    rcx,rbx
   1400096bd:	call   QWORD PTR [rip+0x28fe5]        # 0x1400326a8
   1400096c3:	lea    r8,[rbp+0x40]
   1400096c7:	xor    edx,edx
   1400096c9:	lea    rcx,[rip+0x2cd50]        # 0x140036420
   1400096d0:	call   rbx
   1400096d2:	test   esi,eax
   1400096d4:	jne    0x140009704
   1400096d6:	cmp    eax,r14d
   1400096d9:	je     0x140009704
   1400096db:	mov    rcx,QWORD PTR [rip+0x41996]        # 0x14004b078
   1400096e2:	cmp    rcx,r12
   1400096e5:	je     0x1400096fe
   1400096e7:	test   BYTE PTR [rcx+0x1c],r15b
   1400096eb:	je     0x1400096fe
   1400096ed:	mov    rcx,QWORD PTR [rcx+0x10]
   1400096f1:	mov    edx,0x28
   1400096f6:	mov    r8,r13
   1400096f9:	call   0x140001f08
   1400096fe:	mov    eax,DWORD PTR [rbp+0x40]
   140009701:	mov    DWORD PTR [rdi+0x38],eax
   140009704:	mov    rbx,QWORD PTR [rsp+0x68]
   140009709:	add    rsp,0x20
   14000970d:	pop    r15
   14000970f:	pop    r14
   140009711:	pop    r13
   140009713:	pop    r12
   140009715:	pop    rdi
   140009716:	pop    rsi
   140009717:	pop    rbp
   140009718:	ret    
   140009719:	int3   
   14000971a:	int3   
   14000971b:	int3   
   14000971c:	int3   
   14000971d:	int3   
   14000971e:	int3   
   14000971f:	int3   
   140009720:	rex push rbx
   140009722:	push   rsi
   140009723:	push   rdi
   140009724:	push   r12
   140009726:	push   r13
   140009728:	push   r14
   14000972a:	push   r15
   14000972c:	sub    rsp,0x2c0
   140009733:	mov    QWORD PTR [rsp+0x1b0],0xfffffffffffffffe
   14000973f:	mov    rax,QWORD PTR [rip+0x418da]        # 0x14004b020
   140009746:	xor    rax,rsp
   140009749:	mov    QWORD PTR [rsp+0x2b8],rax
   140009751:	mov    BYTE PTR [rsp+0x38],r9b
   140009756:	mov    sil,r8b
   140009759:	mov    BYTE PTR [rsp+0x34],r8b
   14000975e:	mov    rdi,rdx
   140009761:	mov    QWORD PTR [rsp+0xf8],rdx
   140009769:	mov    rax,rcx
   14000976c:	mov    QWORD PTR [rsp+0x108],rcx
   140009774:	mov    QWORD PTR [rsp+0x168],rcx
   14000977c:	mov    r12,QWORD PTR [rsp+0x320]
   140009784:	mov    QWORD PTR [rsp+0x170],r12
   14000978c:	mov    r9,QWORD PTR [rsp+0x328]
   140009794:	mov    QWORD PTR [rsp+0x150],r9
   14000979c:	mov    r10,QWORD PTR [rsp+0x330]
   1400097a4:	mov    QWORD PTR [rsp+0x198],r10
   1400097ac:	mov    r13,QWORD PTR [rsp+0x338]
   1400097b4:	mov    QWORD PTR [rsp+0x130],r13
   1400097bc:	mov    rcx,QWORD PTR [rsp+0x340]
   1400097c4:	mov    QWORD PTR [rsp+0x178],rcx
   1400097cc:	mov    QWORD PTR [rsp+0x140],rcx
   1400097d4:	mov    rcx,QWORD PTR [rsp+0x348]
   1400097dc:	mov    QWORD PTR [rsp+0x120],rcx
   1400097e4:	mov    QWORD PTR [rsp+0x100],rcx
   1400097ec:	mov    rcx,QWORD PTR [rsp+0x350]
   1400097f4:	mov    QWORD PTR [rsp+0x188],rcx
   1400097fc:	mov    QWORD PTR [rsp+0x98],rcx
   140009804:	lea    rcx,[rax+0x90]
   14000980b:	mov    QWORD PTR [rsp+0xd0],rcx
   140009813:	call   0x140029ab0
   140009818:	xor    r15d,r15d
   14000981b:	test   eax,eax
   14000981d:	jns    0x140009827
   14000981f:	mov    ecx,eax
   140009821:	call   0x140029d64
   140009826:	nop
   140009827:	test   r12,r12
   14000982a:	je     0x14000a7cc
   140009830:	test   r9,r9
   140009833:	je     0x14000a7cc
   140009839:	test   r10,r10
   14000983c:	je     0x14000a7cc
   140009842:	movaps xmm0,XMMWORD PTR [rip+0x2d257]        # 0x140036aa0
   140009849:	movaps XMMWORD PTR [r13+0x0],xmm0
   14000984e:	movaps xmm1,XMMWORD PTR [rip+0x2d25b]        # 0x140036ab0
   140009855:	movaps XMMWORD PTR [r13+0x10],xmm1
   14000985a:	movaps xmm0,XMMWORD PTR [rip+0x2d25f]        # 0x140036ac0
   140009861:	movaps XMMWORD PTR [r13+0x20],xmm0
   140009866:	movaps xmm1,XMMWORD PTR [rip+0x2d263]        # 0x140036ad0
   14000986d:	movaps XMMWORD PTR [r13+0x30],xmm1
   140009872:	mov    eax,DWORD PTR [rip+0x2d268]        # 0x140036ae0
   140009878:	mov    DWORD PTR [r13+0x40],eax
   14000987c:	mov    QWORD PTR [rsp+0x88],r15
   140009884:	mov    rax,QWORD PTR [rdi]
   140009887:	mov    rbx,QWORD PTR [rax+0x20]
   14000988b:	mov    rcx,rbx
   14000988e:	call   QWORD PTR [rip+0x28e14]        # 0x1400326a8
   140009894:	lea    rdx,[rsp+0x88]
   14000989c:	mov    rcx,rdi
   14000989f:	call   rbx
   1400098a1:	test   eax,eax
   1400098a3:	jns    0x1400098ad
   1400098a5:	mov    ecx,eax
   1400098a7:	call   0x140029d64
   1400098ac:	int3   
   1400098ad:	mov    QWORD PTR [rsp+0x40],r15
   1400098b2:	mov    rax,QWORD PTR [rdi]
   1400098b5:	mov    rbx,QWORD PTR [rax+0x28]
   1400098b9:	mov    rcx,rbx
   1400098bc:	call   QWORD PTR [rip+0x28de6]        # 0x1400326a8
   1400098c2:	lea    rdx,[rsp+0x40]
   1400098c7:	mov    rcx,rdi
   1400098ca:	call   rbx
   1400098cc:	test   eax,eax
   1400098ce:	jns    0x1400098d8
   1400098d0:	mov    ecx,eax
   1400098d2:	call   0x140029d64
   1400098d7:	int3   
   1400098d8:	mov    QWORD PTR [rsp+0xa8],r15
   1400098e0:	mov    rbx,QWORD PTR [rsp+0x40]
   1400098e5:	mov    rax,QWORD PTR [rbx]
   1400098e8:	mov    rdi,QWORD PTR [rax]
   1400098eb:	mov    rcx,rdi
   1400098ee:	call   QWORD PTR [rip+0x28db4]        # 0x1400326a8
   1400098f4:	lea    r8,[rsp+0xa8]
   1400098fc:	lea    rdx,[rip+0x2d165]        # 0x140036a68
   140009903:	mov    rcx,rbx
   140009906:	call   rdi
   140009908:	test   eax,eax
   14000990a:	jns    0x140009914
   14000990c:	mov    ecx,eax
   14000990e:	call   0x140029d64
   140009913:	int3   
   140009914:	call   0x140025df8
   140009919:	test   al,al
   14000991b:	jne    0x1400099cf
   140009921:	mov    DWORD PTR [rsp+0xb4],r15d
   140009929:	call   QWORD PTR [rip+0x28b21]        # 0x140032450
   14000992f:	mov    rbx,QWORD PTR [rax+0xa0]
   140009936:	mov    rcx,rbx
   140009939:	call   QWORD PTR [rip+0x28d69]        # 0x1400326a8
   14000993f:	lea    r8,[rsp+0xb4]
   140009947:	xor    edx,edx
   140009949:	lea    rcx,[rip+0x2cb90]        # 0x1400364e0
   140009950:	call   rbx
   140009952:	cmp    DWORD PTR [rsp+0xb4],r15d
   14000995a:	je     0x1400099cf
   14000995c:	lea    rbx,[rip+0x41715]        # 0x14004b078
   140009963:	mov    rcx,QWORD PTR [rip+0x4170e]        # 0x14004b078
   14000996a:	cmp    rcx,rbx
   14000996d:	je     0x14000998a
   14000996f:	test   BYTE PTR [rcx+0x1c],0x2
   140009973:	je     0x14000998a
   140009975:	mov    edx,0x29
   14000997a:	lea    r8,[rip+0x2d167]        # 0x140036ae8
   140009981:	mov    rcx,QWORD PTR [rcx+0x10]
   140009985:	call   0x140001f08
   14000998a:	movaps xmm0,XMMWORD PTR [rip+0x2d10f]        # 0x140036aa0
   140009991:	movaps XMMWORD PTR [r13+0x0],xmm0
   140009996:	movaps xmm1,XMMWORD PTR [rip+0x2d113]        # 0x140036ab0
   14000999d:	movaps XMMWORD PTR [r13+0x10],xmm1
   1400099a2:	movaps xmm0,XMMWORD PTR [rip+0x2d117]        # 0x140036ac0
   1400099a9:	movaps XMMWORD PTR [r13+0x20],xmm0
   1400099ae:	movaps xmm1,XMMWORD PTR [rip+0x2d11b]        # 0x140036ad0
   1400099b5:	movaps XMMWORD PTR [r13+0x30],xmm1
   1400099ba:	mov    eax,DWORD PTR [rip+0x2d120]        # 0x140036ae0
   1400099c0:	mov    DWORD PTR [r13+0x40],eax
   1400099c4:	mov    r14d,0x1
   1400099ca:	jmp    0x140009c41
   1400099cf:	mov    rbx,QWORD PTR [rsp+0x40]
   1400099d4:	mov    rax,QWORD PTR [rbx]
   1400099d7:	mov    rdi,QWORD PTR [rax+0x18]
   1400099db:	mov    rcx,rdi
   1400099de:	call   QWORD PTR [rip+0x28cc4]        # 0x1400326a8
   1400099e4:	lea    rdx,[rsp+0x30]
   1400099e9:	mov    rcx,rbx
   1400099ec:	call   rdi
   1400099ee:	test   eax,eax
   1400099f0:	jns    0x1400099fa
   1400099f2:	mov    ecx,eax
   1400099f4:	call   0x140029d64
   1400099f9:	int3   
   1400099fa:	cmp    WORD PTR [rsp+0x30],r15w
   140009a00:	setne  al
   140009a03:	mov    BYTE PTR [r13+0x3c],al
   140009a07:	mov    rbx,QWORD PTR [rsp+0x40]
   140009a0c:	mov    rax,QWORD PTR [rbx]
   140009a0f:	mov    rdi,QWORD PTR [rax+0x28]
   140009a13:	mov    rcx,rdi
   140009a16:	call   QWORD PTR [rip+0x28c8c]        # 0x1400326a8
   140009a1c:	lea    rdx,[rsp+0x30]
   140009a21:	mov    rcx,rbx
   140009a24:	call   rdi
   140009a26:	test   eax,eax
   140009a28:	jns    0x140009a32
   140009a2a:	mov    ecx,eax
   140009a2c:	call   0x140029d64
   140009a31:	int3   
   140009a32:	cmp    WORD PTR [rsp+0x30],r15w
   140009a38:	sete   al
   140009a3b:	mov    BYTE PTR [r13+0x3d],al
   140009a3f:	mov    rbx,QWORD PTR [rsp+0x40]
   140009a44:	mov    rax,QWORD PTR [rbx]
   140009a47:	mov    rdi,QWORD PTR [rax+0x20]
   140009a4b:	mov    rcx,rdi
   140009a4e:	call   QWORD PTR [rip+0x28c54]        # 0x1400326a8
   140009a54:	lea    rdx,[rsp+0x30]
   140009a59:	mov    rcx,rbx
   140009a5c:	call   rdi
   140009a5e:	test   eax,eax
   140009a60:	jns    0x140009a6a
   140009a62:	mov    ecx,eax
   140009a64:	call   0x140029d64
   140009a69:	int3   
   140009a6a:	cmp    WORD PTR [rsp+0x30],r15w
   140009a70:	setne  al
   140009a73:	mov    BYTE PTR [r13+0x3e],al
   140009a77:	mov    rbx,QWORD PTR [rsp+0x40]
   140009a7c:	mov    rax,QWORD PTR [rbx]
   140009a7f:	mov    rdi,QWORD PTR [rax+0x30]
   140009a83:	mov    rcx,rdi
   140009a86:	call   QWORD PTR [rip+0x28c1c]        # 0x1400326a8
   140009a8c:	mov    rdx,r13
   140009a8f:	mov    rcx,rbx
   140009a92:	call   rdi
   140009a94:	test   eax,eax
   140009a96:	jns    0x140009aa0
   140009a98:	mov    ecx,eax
   140009a9a:	call   0x140029d64
   140009a9f:	int3   
   140009aa0:	mov    rbx,QWORD PTR [rsp+0x40]
   140009aa5:	mov    rax,QWORD PTR [rbx]
   140009aa8:	mov    rsi,QWORD PTR [rax+0x38]
   140009aac:	mov    rcx,rsi
   140009aaf:	call   QWORD PTR [rip+0x28bf3]        # 0x1400326a8
   140009ab5:	lea    rdx,[r13+0x4]
   140009ab9:	mov    rcx,rbx
   140009abc:	call   rsi
   140009abe:	test   eax,eax
   140009ac0:	jns    0x140009aca
   140009ac2:	mov    ecx,eax
   140009ac4:	call   0x140029d64
   140009ac9:	int3   
   140009aca:	mov    rbx,QWORD PTR [rsp+0x40]
   140009acf:	mov    rax,QWORD PTR [rbx]
   140009ad2:	mov    r14,QWORD PTR [rax+0x40]
   140009ad6:	mov    rcx,r14
   140009ad9:	call   QWORD PTR [rip+0x28bc9]        # 0x1400326a8
   140009adf:	lea    r9,[r13+0xc]
   140009ae3:	lea    r8,[r13+0x8]
   140009ae7:	lea    rdx,[rsp+0x30]
   140009aec:	mov    rcx,rbx
   140009aef:	call   r14
   140009af2:	test   eax,eax
   140009af4:	jns    0x140009afe
   140009af6:	mov    ecx,eax
   140009af8:	call   0x140029d64
   140009afd:	int3   
   140009afe:	cmp    WORD PTR [rsp+0x30],r15w
   140009b04:	setne  al
   140009b07:	mov    BYTE PTR [r13+0x40],al
   140009b0b:	mov    rbx,QWORD PTR [rsp+0x40]
   140009b10:	mov    rax,QWORD PTR [rbx]
   140009b13:	mov    rdi,QWORD PTR [rax+0x48]
   140009b17:	mov    rcx,rdi
   140009b1a:	call   QWORD PTR [rip+0x28b88]        # 0x1400326a8
   140009b20:	lea    rdx,[rsp+0x30]
   140009b25:	mov    rcx,rbx
   140009b28:	call   rdi
   140009b2a:	test   eax,eax
   140009b2c:	jns    0x140009b36
   140009b2e:	mov    ecx,eax
   140009b30:	call   0x140029d64
   140009b35:	int3   
   140009b36:	cmp    WORD PTR [rsp+0x30],r15w
   140009b3c:	setne  al
   140009b3f:	mov    BYTE PTR [r13+0x3f],al
   140009b43:	mov    DWORD PTR [rsp+0x6c],r15d
   140009b48:	mov    DWORD PTR [rsp+0xf0],r15d
   140009b50:	mov    rbx,QWORD PTR [rsp+0x40]
   140009b55:	mov    rax,QWORD PTR [rbx]
   140009b58:	mov    rdi,QWORD PTR [rax+0x50]
   140009b5c:	mov    rcx,rdi
   140009b5f:	call   QWORD PTR [rip+0x28b43]        # 0x1400326a8
   140009b65:	lea    r8,[rsp+0xf0]
   140009b6d:	lea    rdx,[rsp+0x6c]
   140009b72:	mov    rcx,rbx
   140009b75:	call   rdi
   140009b77:	test   eax,eax
   140009b79:	jns    0x140009b83
   140009b7b:	mov    ecx,eax
   140009b7d:	call   0x140029d64
   140009b82:	int3   
   140009b83:	mov    eax,0x5dc
   140009b88:	cmp    DWORD PTR [rsp+0x6c],0x7fffffff
   140009b90:	cmovb  eax,DWORD PTR [rsp+0x6c]
   140009b95:	mov    DWORD PTR [r13+0x10],eax
   140009b99:	mov    edi,r15d
   140009b9c:	mov    DWORD PTR [rsp+0x48],r15d
   140009ba1:	mov    r14d,0x1
   140009ba7:	movsxd rcx,edi
   140009baa:	mov    QWORD PTR [rsp+0xc0],rcx
   140009bb2:	mov    rbx,QWORD PTR [rsp+0xa8]
   140009bba:	mov    rax,QWORD PTR [rbx]
   140009bbd:	lea    rdi,[rcx*4+0x0]
   140009bc5:	mov    rsi,QWORD PTR [rax+0x28]
   140009bc9:	mov    rcx,rsi
   140009bcc:	call   QWORD PTR [rip+0x28ad6]        # 0x1400326a8
   140009bd2:	lea    r8,[r13+0x18]
   140009bd6:	add    r8,rdi
   140009bd9:	mov    edx,DWORD PTR [rsp+0x48]
   140009bdd:	mov    rcx,rbx
   140009be0:	call   rsi
   140009be2:	test   eax,eax
   140009be4:	js     0x14000a7c4
   140009bea:	mov    rbx,QWORD PTR [rsp+0xa8]
   140009bf2:	mov    rax,QWORD PTR [rbx]
   140009bf5:	mov    rcx,QWORD PTR [rsp+0xc0]
   140009bfd:	lea    rdi,[rcx*4+0x0]
   140009c05:	mov    rsi,QWORD PTR [rax+0x30]
   140009c09:	mov    rcx,rsi
   140009c0c:	call   QWORD PTR [rip+0x28a96]        # 0x1400326a8
   140009c12:	lea    r8,[r13+0x20]
   140009c16:	add    r8,rdi
   140009c19:	mov    edi,DWORD PTR [rsp+0x48]
   140009c1d:	mov    edx,edi
   140009c1f:	mov    rcx,rbx
   140009c22:	call   rsi
   140009c24:	test   eax,eax
   140009c26:	js     0x14000a7bc
   140009c2c:	add    edi,r14d
   140009c2f:	mov    DWORD PTR [rsp+0x48],edi
   140009c33:	cmp    edi,0x2
   140009c36:	jl     0x140009ba7
   140009c3c:	mov    sil,BYTE PTR [rsp+0x34]
   140009c41:	mov    rdx,r13
   140009c44:	call   0x140008ec0
   140009c49:	mov    rdx,r13
   140009c4c:	call   0x140008fb8
   140009c51:	mov    rdx,r13
   140009c54:	call   0x140008ec0
   140009c59:	nop
   140009c5a:	mov    rbx,r15
   140009c5d:	mov    QWORD PTR [rsp+0x60],rbx
   140009c62:	mov    QWORD PTR [rsp+0x78],r15
   140009c67:	lea    rcx,[rsp+0x78]
   140009c6c:	call   0x14000d608
   140009c71:	mov    ecx,eax
   140009c73:	mov    DWORD PTR [rsp+0x48],eax
   140009c77:	test   eax,eax
   140009c79:	jns    0x140009cd1
   140009c7b:	mov    rax,QWORD PTR [rsp+0x78]
   140009c80:	test   rax,rax
   140009c83:	je     0x140009db8
   140009c89:	mov    ecx,DWORD PTR [rax+0x8]
   140009c8c:	or     esi,0xffffffff
   140009c8f:	cmp    ecx,r14d
   140009c92:	jne    0x140009c9a
   140009c94:	mov    DWORD PTR [rax+0x8],r15d
   140009c98:	jmp    0x140009ca7
   140009c9a:	mov    ecx,esi
   140009c9c:	lock xadd DWORD PTR [rax+0x8],ecx
   140009ca1:	add    ecx,esi
   140009ca3:	test   ecx,ecx
   140009ca5:	jg     0x140009cc3
   140009ca7:	mov    rbx,QWORD PTR [rsp+0x78]
   140009cac:	mov    rax,QWORD PTR [rbx]
   140009caf:	mov    rdi,QWORD PTR [rax]
   140009cb2:	mov    rcx,rdi
   140009cb5:	call   QWORD PTR [rip+0x289ed]        # 0x1400326a8
   140009cbb:	mov    edx,r14d
   140009cbe:	mov    rcx,rbx
   140009cc1:	call   rdi
   140009cc3:	mov    rbx,QWORD PTR [rsp+0x60]
   140009cc8:	mov    ecx,DWORD PTR [rsp+0x48]
   140009ccc:	jmp    0x140009dbb
   140009cd1:	movups xmm0,XMMWORD PTR [r12+0x28]
   140009cd7:	movdqu XMMWORD PTR [rsp+0x1c0],xmm0
   140009ce0:	movups xmm0,XMMWORD PTR [r13+0x0]
   140009ce5:	movaps XMMWORD PTR [rsp+0x1f0],xmm0
   140009ced:	movups xmm1,XMMWORD PTR [r13+0x10]
   140009cf2:	movaps XMMWORD PTR [rsp+0x200],xmm1
   140009cfa:	movups xmm0,XMMWORD PTR [r13+0x20]
   140009cff:	movaps XMMWORD PTR [rsp+0x210],xmm0
   140009d07:	movups xmm1,XMMWORD PTR [r13+0x30]
   140009d0c:	movaps XMMWORD PTR [rsp+0x220],xmm1
   140009d14:	mov    eax,DWORD PTR [r13+0x40]
   140009d18:	mov    DWORD PTR [rsp+0x230],eax
   140009d1f:	lea    rax,[rsp+0x1c0]
   140009d27:	mov    QWORD PTR [rsp+0x28],rax
   140009d2c:	mov    al,BYTE PTR [rsp+0x38]
   140009d30:	mov    BYTE PTR [rsp+0x20],al
   140009d34:	mov    r9b,sil
   140009d37:	lea    r8,[rsp+0x1f0]
   140009d3f:	mov    rdx,QWORD PTR [rsp+0x88]
   140009d47:	mov    rdi,QWORD PTR [rsp+0x78]
   140009d4c:	mov    rcx,rdi
   140009d4f:	call   0x1400129e4
   140009d54:	mov    ecx,eax
   140009d56:	mov    DWORD PTR [rsp+0x48],eax
   140009d5a:	test   eax,eax
   140009d5c:	jns    0x140009da8
   140009d5e:	test   rdi,rdi
   140009d61:	je     0x140009db8
   140009d63:	mov    eax,DWORD PTR [rdi+0x8]
   140009d66:	or     esi,0xffffffff
   140009d69:	cmp    eax,r14d
   140009d6c:	jne    0x140009d74
   140009d6e:	mov    DWORD PTR [rdi+0x8],r15d
   140009d72:	jmp    0x140009d81
   140009d74:	mov    eax,esi
   140009d76:	lock xadd DWORD PTR [rdi+0x8],eax
   140009d7b:	add    eax,esi
   140009d7d:	test   eax,eax
   140009d7f:	jg     0x140009da1
   140009d81:	mov    rbx,QWORD PTR [rsp+0x78]
   140009d86:	mov    rax,QWORD PTR [rbx]
   140009d89:	mov    rdi,QWORD PTR [rax]
   140009d8c:	mov    rcx,rdi
   140009d8f:	call   QWORD PTR [rip+0x28913]        # 0x1400326a8
   140009d95:	mov    edx,r14d
   140009d98:	mov    rcx,rbx
   140009d9b:	call   rdi
   140009d9d:	mov    ecx,DWORD PTR [rsp+0x48]
   140009da1:	mov    rbx,QWORD PTR [rsp+0x60]
   140009da6:	jmp    0x140009dbb
   140009da8:	mov    rbx,rdi
   140009dab:	mov    QWORD PTR [rsp+0x78],r15
   140009db0:	mov    QWORD PTR [rsp+0x60],rbx
   140009db5:	mov    ecx,r15d
   140009db8:	or     esi,0xffffffff
   140009dbb:	test   ecx,ecx
   140009dbd:	jns    0x140009dc4
   140009dbf:	call   0x140029d64
   140009dc4:	cmp    QWORD PTR [rbx+0xc0],r15
   140009dcb:	seta   al
   140009dce:	mov    rcx,QWORD PTR [rsp+0x150]
   140009dd6:	mov    BYTE PTR [rcx],al
   140009dd8:	mov    rax,QWORD PTR [rbx+0xd0]
   140009ddf:	add    rax,QWORD PTR [rbx+0xc8]
   140009de6:	add    rax,QWORD PTR [rbx+0xb8]
   140009ded:	setne  al
   140009df0:	mov    rdx,QWORD PTR [rsp+0x198]
   140009df8:	mov    BYTE PTR [rdx],al
   140009dfa:	mov    al,BYTE PTR [rcx]
   140009dfc:	and    BYTE PTR [r13+0x3f],al
   140009e00:	cmp    BYTE PTR [rcx],r15b
   140009e03:	jne    0x140009f17
   140009e09:	cmp    BYTE PTR [rdx],r15b
   140009e0c:	jne    0x140009f17
   140009e12:	mov    rcx,QWORD PTR [rip+0x4125f]        # 0x14004b078
   140009e19:	lea    rax,[rip+0x41258]        # 0x14004b078
   140009e20:	cmp    rcx,rax
   140009e23:	je     0x140009e40
   140009e25:	test   BYTE PTR [rcx+0x1c],0x4
   140009e29:	je     0x140009e40
   140009e2b:	mov    edx,0x2a
   140009e30:	lea    r8,[rip+0x2ccb1]        # 0x140036ae8
   140009e37:	mov    rcx,QWORD PTR [rcx+0x10]
   140009e3b:	call   0x140001f08
   140009e40:	lea    rcx,[rip+0x2c6e9]        # 0x140036530
   140009e47:	call   QWORD PTR [rip+0x284e3]        # 0x140032330
   140009e4d:	nop
   140009e4e:	mov    eax,DWORD PTR [rbx+0x8]
   140009e51:	cmp    eax,r14d
   140009e54:	jne    0x140009e5c
   140009e56:	mov    DWORD PTR [rbx+0x8],r15d
   140009e5a:	jmp    0x140009e69
   140009e5c:	mov    eax,esi
   140009e5e:	lock xadd DWORD PTR [rbx+0x8],eax
   140009e63:	add    eax,esi
   140009e65:	test   eax,eax
   140009e67:	jg     0x140009e86
   140009e69:	mov    rbx,QWORD PTR [rsp+0x60]
   140009e6e:	mov    rax,QWORD PTR [rbx]
   140009e71:	mov    rdi,QWORD PTR [rax]
   140009e74:	mov    rcx,rdi
   140009e77:	call   QWORD PTR [rip+0x2882b]        # 0x1400326a8
   140009e7d:	mov    edx,r14d
   140009e80:	mov    rcx,rbx
   140009e83:	call   rdi
   140009e85:	nop
   140009e86:	mov    rbx,QWORD PTR [rsp+0xa8]
   140009e8e:	test   rbx,rbx
   140009e91:	je     0x140009ea9
   140009e93:	mov    rax,QWORD PTR [rbx]
   140009e96:	mov    rdi,QWORD PTR [rax+0x10]
   140009e9a:	mov    rcx,rdi
   140009e9d:	call   QWORD PTR [rip+0x28805]        # 0x1400326a8
   140009ea3:	mov    rcx,rbx
   140009ea6:	call   rdi
   140009ea8:	nop
   140009ea9:	mov    rbx,QWORD PTR [rsp+0x40]
   140009eae:	test   rbx,rbx
   140009eb1:	je     0x140009ec9
   140009eb3:	mov    rax,QWORD PTR [rbx]
   140009eb6:	mov    rdi,QWORD PTR [rax+0x10]
   140009eba:	mov    rcx,rdi
   140009ebd:	call   QWORD PTR [rip+0x287e5]        # 0x1400326a8
   140009ec3:	mov    rcx,rbx
   140009ec6:	call   rdi
   140009ec8:	nop
   140009ec9:	mov    rbx,QWORD PTR [rsp+0x88]
   140009ed1:	test   rbx,rbx
   140009ed4:	je     0x140009eec
   140009ed6:	mov    rax,QWORD PTR [rbx]
   140009ed9:	mov    rdi,QWORD PTR [rax+0x10]
   140009edd:	mov    rcx,rdi
   140009ee0:	call   QWORD PTR [rip+0x287c2]        # 0x1400326a8
   140009ee6:	mov    rcx,rbx
   140009ee9:	call   rdi
   140009eeb:	nop
   140009eec:	mov    rax,QWORD PTR [rsp+0xd0]
   140009ef4:	mov    ecx,esi
   140009ef6:	lock xadd DWORD PTR [rax+0x8],ecx
   140009efb:	add    ecx,esi
   140009efd:	cmp    ecx,0x80000000
   140009f03:	jne    0x140009f12
   140009f05:	mov    rcx,QWORD PTR [rsp+0xd0]
   140009f0d:	call   0x140029c90
   140009f12:	jmp    0x14000a811
   140009f17:	mov    QWORD PTR [rsp+0x80],r15
   140009f1f:	mov    rax,QWORD PTR [rsp+0x108]
   140009f27:	mov    rdi,QWORD PTR [rax+0x50]
   140009f2b:	mov    QWORD PTR [rsp+0x48],rdi
   140009f30:	mov    QWORD PTR [rax+0x50],rbx
   140009f34:	mov    QWORD PTR [rsp+0x60],rdi
   140009f39:	mov    rax,QWORD PTR [rsp+0xf8]
   140009f41:	mov    rax,QWORD PTR [rax]
   140009f44:	mov    rbx,QWORD PTR [rax+0x18]
   140009f48:	mov    rcx,rbx
   140009f4b:	call   QWORD PTR [rip+0x28757]        # 0x1400326a8
   140009f51:	lea    rdx,[rsp+0x80]
   140009f59:	mov    rcx,QWORD PTR [rsp+0xf8]
   140009f61:	call   rbx
   140009f63:	test   eax,eax
   140009f65:	jns    0x140009f6e
   140009f67:	mov    ecx,eax
   140009f69:	call   0x140029d64
   140009f6e:	mov    QWORD PTR [rsp+0x160],r15
   140009f76:	lea    rax,[rsp+0x160]
   140009f7e:	mov    QWORD PTR [rsp+0x1d8],rax
   140009f86:	mov    QWORD PTR [rsp+0x110],r15
   140009f8e:	lea    rdx,[rsp+0x110]
   140009f96:	lea    rcx,[rip+0x2da0b]        # 0x1400379a8
   140009f9d:	call   QWORD PTR [rip+0x2848d]        # 0x140032430
   140009fa3:	test   eax,eax
   140009fa5:	jns    0x140009fae
   140009fa7:	mov    ecx,eax
   140009fa9:	call   0x140029d64
   140009fae:	mov    DWORD PTR [rsp+0xa4],r15d
   140009fb6:	mov    DWORD PTR [rsp+0x70],r15d
   140009fbb:	mov    DWORD PTR [rsp+0xb8],0x4
   140009fc6:	mov    QWORD PTR [rsp+0x28],r15
   140009fcb:	lea    rax,[rsp+0x70]
   140009fd0:	mov    QWORD PTR [rsp+0x20],rax
   140009fd5:	lea    r9,[rsp+0xb8]
   140009fdd:	lea    r8,[rsp+0xa4]
   140009fe5:	lea    rdx,[rip+0x2d9fc]        # 0x1400379e8
   140009fec:	mov    rcx,QWORD PTR [rsp+0x110]
   140009ff4:	call   QWORD PTR [rip+0x2842e]        # 0x140032428
   140009ffa:	test   eax,eax
   140009ffc:	js     0x14000a7b4
   14000a002:	cmp    DWORD PTR [rsp+0xa4],r14d
   14000a00a:	jbe    0x14000a016
   14000a00c:	mov    eax,0x8007065d
   14000a011:	jmp    0x14000a7b4
   14000a016:	mov    eax,DWORD PTR [rsp+0xb8]
   14000a01d:	neg    eax
   14000a01f:	sbb    ecx,ecx
   14000a021:	and    ecx,DWORD PTR [rsp+0x70]
   14000a025:	mov    DWORD PTR [rsp+0x70],ecx
   14000a029:	mov    DWORD PTR [rsp+0x14c],ecx
   14000a030:	mov    eax,r15d
   14000a033:	setne  al
   14000a036:	mov    DWORD PTR [rsp+0x190],eax
   14000a03d:	test   eax,eax
   14000a03f:	sete   bl
   14000a042:	mov    rcx,QWORD PTR [rsp+0x110]
   14000a04a:	test   rcx,rcx
   14000a04d:	je     0x14000a055
   14000a04f:	call   QWORD PTR [rip+0x2839b]        # 0x1400323f0
   14000a055:	mov    BYTE PTR [r12+0x142],bl
   14000a05d:	mov    QWORD PTR [rsp+0x1a8],r15
   14000a065:	lea    rax,[rsp+0x1a8]
   14000a06d:	mov    QWORD PTR [rsp+0x1d0],rax
   14000a075:	mov    QWORD PTR [rsp+0xd8],r15
   14000a07d:	lea    rdx,[rsp+0xd8]
   14000a085:	lea    rcx,[rip+0x2d91c]        # 0x1400379a8
   14000a08c:	call   QWORD PTR [rip+0x2839e]        # 0x140032430
   14000a092:	test   eax,eax
   14000a094:	jns    0x14000a09d
   14000a096:	mov    ecx,eax
   14000a098:	call   0x140029d64
   14000a09d:	mov    DWORD PTR [rsp+0xb0],r15d
   14000a0a5:	mov    DWORD PTR [rsp+0x50],r15d
   14000a0aa:	mov    DWORD PTR [rsp+0x90],0x4
   14000a0b5:	mov    QWORD PTR [rsp+0x28],r15
   14000a0ba:	lea    rax,[rsp+0x50]
   14000a0bf:	mov    QWORD PTR [rsp+0x20],rax
   14000a0c4:	lea    r9,[rsp+0x90]
   14000a0cc:	lea    r8,[rsp+0xb0]
   14000a0d4:	lea    rdx,[rip+0x2d92d]        # 0x140037a08
   14000a0db:	mov    rcx,QWORD PTR [rsp+0xd8]
   14000a0e3:	call   QWORD PTR [rip+0x2833f]        # 0x140032428
   14000a0e9:	test   eax,eax
   14000a0eb:	js     0x14000a7ac
   14000a0f1:	cmp    DWORD PTR [rsp+0xb0],r14d
   14000a0f9:	jbe    0x14000a105
   14000a0fb:	mov    eax,0x8007065d
   14000a100:	jmp    0x14000a7ac
   14000a105:	mov    eax,DWORD PTR [rsp+0x90]
   14000a10c:	neg    eax
   14000a10e:	sbb    ecx,ecx
   14000a110:	and    ecx,DWORD PTR [rsp+0x50]
   14000a114:	mov    DWORD PTR [rsp+0x50],ecx
   14000a118:	mov    DWORD PTR [rsp+0x158],ecx
   14000a11f:	mov    eax,r15d
   14000a122:	setne  al
   14000a125:	mov    DWORD PTR [rsp+0x194],eax
   14000a12c:	test   eax,eax
   14000a12e:	setne  bl
   14000a131:	mov    rcx,QWORD PTR [rsp+0xd8]
   14000a139:	test   rcx,rcx
   14000a13c:	je     0x14000a144
   14000a13e:	call   QWORD PTR [rip+0x282ac]        # 0x1400323f0
   14000a144:	mov    BYTE PTR [r12+0x140],bl
   14000a14c:	mov    QWORD PTR [rsp+0x1a0],r15
   14000a154:	lea    rax,[rsp+0x1a0]
   14000a15c:	mov    QWORD PTR [rsp+0x1e0],rax
   14000a164:	mov    QWORD PTR [rsp+0xe0],r15
   14000a16c:	lea    rdx,[rsp+0xe0]
   14000a174:	lea    rcx,[rip+0x2d82d]        # 0x1400379a8
   14000a17b:	call   QWORD PTR [rip+0x282af]        # 0x140032430
   14000a181:	test   eax,eax
   14000a183:	jns    0x14000a18c
   14000a185:	mov    ecx,eax
   14000a187:	call   0x140029d64
   14000a18c:	mov    DWORD PTR [rsp+0xa0],r15d
   14000a194:	mov    DWORD PTR [rsp+0x68],r15d
   14000a199:	mov    DWORD PTR [rsp+0xc8],0x4
   14000a1a4:	mov    QWORD PTR [rsp+0x28],r15
   14000a1a9:	lea    rax,[rsp+0x68]
   14000a1ae:	mov    QWORD PTR [rsp+0x20],rax
   14000a1b3:	lea    r9,[rsp+0xc8]
   14000a1bb:	lea    r8,[rsp+0xa0]
   14000a1c3:	lea    rdx,[rip+0x2d7e6]        # 0x1400379b0
   14000a1ca:	mov    rcx,QWORD PTR [rsp+0xe0]
   14000a1d2:	call   QWORD PTR [rip+0x28250]        # 0x140032428
   14000a1d8:	test   eax,eax
   14000a1da:	js     0x14000a7a4
   14000a1e0:	cmp    DWORD PTR [rsp+0xa0],r14d
   14000a1e8:	jbe    0x14000a1f4
   14000a1ea:	mov    eax,0x8007065d
   14000a1ef:	jmp    0x14000a7a4
   14000a1f4:	mov    eax,DWORD PTR [rsp+0xc8]
   14000a1fb:	neg    eax
   14000a1fd:	sbb    ecx,ecx
   14000a1ff:	and    ecx,DWORD PTR [rsp+0x68]
   14000a203:	mov    DWORD PTR [rsp+0x68],ecx
   14000a207:	mov    DWORD PTR [rsp+0x180],ecx
   14000a20e:	mov    eax,r15d
   14000a211:	setne  al
   14000a214:	mov    DWORD PTR [rsp+0x148],eax
   14000a21b:	test   eax,eax
   14000a21d:	sete   bl
   14000a220:	mov    rcx,QWORD PTR [rsp+0xe0]
   14000a228:	test   rcx,rcx
   14000a22b:	je     0x14000a233
   14000a22d:	call   QWORD PTR [rip+0x281bd]        # 0x1400323f0
   14000a233:	mov    BYTE PTR [r12+0x141],bl
   14000a23b:	test   bl,bl
   14000a23d:	je     0x14000a2d4
   14000a243:	mov    QWORD PTR [rsp+0xe8],r15
   14000a24b:	mov    rbx,QWORD PTR [rsp+0x80]
   14000a253:	mov    rax,QWORD PTR [rbx]
   14000a256:	mov    rdi,QWORD PTR [rax]
   14000a259:	mov    rcx,rdi
   14000a25c:	call   QWORD PTR [rip+0x28446]        # 0x1400326a8
   14000a262:	lea    r8,[rsp+0xe8]
   14000a26a:	lea    rdx,[rip+0x2c7e7]        # 0x140036a58
   14000a271:	mov    rcx,rbx
   14000a274:	call   rdi
   14000a276:	test   eax,eax
   14000a278:	jns    0x14000a281
   14000a27a:	mov    ecx,eax
   14000a27c:	call   0x140029d64
   14000a281:	mov    rbx,QWORD PTR [rsp+0xe8]
   14000a289:	mov    rax,QWORD PTR [rbx]
   14000a28c:	mov    rdi,QWORD PTR [rax+0x18]
   14000a290:	mov    rcx,rdi
   14000a293:	call   QWORD PTR [rip+0x2840f]        # 0x1400326a8
   14000a299:	movzx  edx,si
   14000a29c:	mov    rcx,rbx
   14000a29f:	call   rdi
   14000a2a1:	test   eax,eax
   14000a2a3:	jns    0x14000a2ad
   14000a2a5:	mov    ecx,eax
   14000a2a7:	call   0x140029d64
   14000a2ac:	nop
   14000a2ad:	mov    rbx,QWORD PTR [rsp+0xe8]
   14000a2b5:	test   rbx,rbx
   14000a2b8:	je     0x14000a2cf
   14000a2ba:	mov    rax,QWORD PTR [rbx]
   14000a2bd:	mov    rdi,QWORD PTR [rax+0x10]
   14000a2c1:	mov    rcx,rdi
   14000a2c4:	call   QWORD PTR [rip+0x283de]        # 0x1400326a8
   14000a2ca:	mov    rcx,rbx
   14000a2cd:	call   rdi
   14000a2cf:	mov    rdi,QWORD PTR [rsp+0x48]
   14000a2d4:	mov    QWORD PTR [rsp+0xc0],r15
   14000a2dc:	lea    r8,[rsp+0xc0]
   14000a2e4:	mov    rdx,QWORD PTR [rsp+0xf8]
   14000a2ec:	mov    rcx,QWORD PTR [rsp+0x108]
   14000a2f4:	call   0x14000b1d0
   14000a2f9:	nop
   14000a2fa:	mov    rcx,QWORD PTR [rsp+0x108]
   14000a302:	mov    r9,QWORD PTR [rsp+0x178]
   14000a30a:	mov    rdx,QWORD PTR [rsp+0x120]
   14000a312:	mov    r8,QWORD PTR [rsp+0x188]
   14000a31a:	jmp    0x14000a35b
   14000a31c:	xor    r15d,r15d
   14000a31f:	lea    r14d,[r15+0x1]
   14000a323:	or     esi,0xffffffff
   14000a326:	mov    rdi,QWORD PTR [rsp+0x48]
   14000a32b:	mov    rcx,QWORD PTR [rsp+0x168]
   14000a333:	mov    r12,QWORD PTR [rsp+0x170]
   14000a33b:	mov    r13,QWORD PTR [rsp+0x130]
   14000a343:	mov    r9,QWORD PTR [rsp+0x140]
   14000a34b:	mov    rdx,QWORD PTR [rsp+0x100]
   14000a353:	mov    r8,QWORD PTR [rsp+0x98]
   14000a35b:	mov    rax,QWORD PTR [rcx+0x50]
   14000a35f:	mov    QWORD PTR [rsp+0x100],rax
   14000a367:	mov    QWORD PTR [rcx+0x50],rdi
   14000a36b:	mov    QWORD PTR [rsp+0x60],rax
   14000a370:	mov    QWORD PTR [rsp+0x28],r8
   14000a375:	mov    QWORD PTR [rsp+0x20],rdx
   14000a37a:	mov    r8,rax
   14000a37d:	mov    rdx,QWORD PTR [rsp+0x40]
   14000a382:	mov    rcx,QWORD PTR [rsp+0x88]
   14000a38a:	call   0x14000c05c
   14000a38f:	mov    rbx,QWORD PTR [rsp+0x80]
   14000a397:	mov    rax,rbx
   14000a39a:	mov    QWORD PTR [rsp+0x98],rbx
   14000a3a2:	test   rbx,rbx
   14000a3a5:	je     0x14000a3cc
   14000a3a7:	mov    rax,QWORD PTR [rbx]
   14000a3aa:	mov    rdi,QWORD PTR [rax+0x8]
   14000a3ae:	mov    rcx,rdi
   14000a3b1:	call   QWORD PTR [rip+0x282f1]        # 0x1400326a8
   14000a3b7:	mov    rcx,rbx
   14000a3ba:	call   rdi
   14000a3bc:	mov    rbx,QWORD PTR [rsp+0x80]
   14000a3c4:	mov    rax,QWORD PTR [rsp+0x98]
   14000a3cc:	mov    rdi,QWORD PTR [r12+0x98]
   14000a3d4:	mov    QWORD PTR [r12+0x98],rax
   14000a3dc:	test   rdi,rdi
   14000a3df:	je     0x14000a3fe
   14000a3e1:	mov    rax,QWORD PTR [rdi]
   14000a3e4:	mov    rbx,QWORD PTR [rax+0x10]
   14000a3e8:	mov    rcx,rbx
   14000a3eb:	call   QWORD PTR [rip+0x282b7]        # 0x1400326a8
   14000a3f1:	mov    rcx,rdi
   14000a3f4:	call   rbx
   14000a3f6:	mov    rbx,QWORD PTR [rsp+0x80]
   14000a3fe:	mov    QWORD PTR [rsp+0x118],r15
   14000a406:	mov    rax,QWORD PTR [rbx]
   14000a409:	mov    rdi,QWORD PTR [rax]
   14000a40c:	mov    rcx,rdi
   14000a40f:	call   QWORD PTR [rip+0x28293]        # 0x1400326a8
   14000a415:	lea    r8,[rsp+0x118]
   14000a41d:	lea    rdx,[rip+0x2c634]        # 0x140036a58
   14000a424:	mov    rcx,rbx
   14000a427:	call   rdi
   14000a429:	test   eax,eax
   14000a42b:	jns    0x14000a481
   14000a42d:	mov    rcx,QWORD PTR [rip+0x40c44]        # 0x14004b078
   14000a434:	lea    rax,[rip+0x40c3d]        # 0x14004b078
   14000a43b:	cmp    rcx,rax
   14000a43e:	je     0x14000a45b
   14000a440:	test   BYTE PTR [rcx+0x1c],r14b
   14000a444:	je     0x14000a45b
   14000a446:	mov    edx,0x3e
   14000a44b:	lea    r8,[rip+0x2c696]        # 0x140036ae8
   14000a452:	mov    rcx,QWORD PTR [rcx+0x10]
   14000a456:	call   0x140001f08
   14000a45b:	mov    edx,0x80004002
   14000a460:	lea    rcx,[rsp+0x240]
   14000a468:	call   0x140002064
   14000a46d:	lea    rdx,[rip+0x3ed14]        # 0x140049188
   14000a474:	lea    rcx,[rsp+0x240]
   14000a47c:	call   0x14002e2da
   14000a481:	mov    WORD PTR [rsp+0x58],r15w
   14000a487:	xor    eax,eax
   14000a489:	mov    DWORD PTR [rsp+0x5a],eax
   14000a48d:	mov    WORD PTR [rsp+0x5e],ax
   14000a492:	mov    rbx,QWORD PTR [rsp+0x118]
   14000a49a:	mov    rax,QWORD PTR [rbx]
   14000a49d:	mov    rdi,QWORD PTR [rax+0x20]
   14000a4a1:	mov    rcx,rdi
   14000a4a4:	call   QWORD PTR [rip+0x281fe]        # 0x1400326a8
   14000a4aa:	lea    rdx,[rsp+0x58]
   14000a4af:	mov    rcx,rbx
   14000a4b2:	call   rdi
   14000a4b4:	mov    ebx,eax
   14000a4b6:	test   eax,eax
   14000a4b8:	jns    0x14000a50e
   14000a4ba:	mov    rcx,QWORD PTR [rip+0x40bb7]        # 0x14004b078
   14000a4c1:	lea    rax,[rip+0x40bb0]        # 0x14004b078
   14000a4c8:	cmp    rcx,rax
   14000a4cb:	je     0x14000a4eb
   14000a4cd:	test   BYTE PTR [rcx+0x1c],0x2
   14000a4d1:	je     0x14000a4eb
   14000a4d3:	mov    edx,0x3f
   14000a4d8:	mov    r9d,ebx
   14000a4db:	lea    r8,[rip+0x2c606]        # 0x140036ae8
   14000a4e2:	mov    rcx,QWORD PTR [rcx+0x10]
   14000a4e6:	call   0x140001f70
   14000a4eb:	mov    edx,ebx
   14000a4ed:	lea    rcx,[rsp+0x290]
   14000a4f5:	call   0x140002064
   14000a4fa:	lea    rdx,[rip+0x3ec87]        # 0x140049188
   14000a501:	lea    rcx,[rsp+0x290]
   14000a509:	call   0x14002e2da
   14000a50e:	movzx  ecx,WORD PTR [rsp+0x58]
   14000a513:	shl    rcx,0x10
   14000a517:	movzx  eax,WORD PTR [rsp+0x5a]
   14000a51c:	add    rcx,rax
   14000a51f:	shl    rcx,0x10
   14000a523:	movzx  eax,WORD PTR [rsp+0x5c]
   14000a528:	add    rcx,rax
   14000a52b:	shl    rcx,0x10
   14000a52f:	movzx  eax,WORD PTR [rsp+0x5e]
   14000a534:	add    rax,rcx
   14000a537:	mov    QWORD PTR [rsp+0x98],rax
   14000a53f:	mov    rbx,QWORD PTR [rsp+0x118]
   14000a547:	test   rbx,rbx
   14000a54a:	je     0x14000a569
   14000a54c:	mov    rax,QWORD PTR [rbx]
   14000a54f:	mov    rdi,QWORD PTR [rax+0x10]
   14000a553:	mov    rcx,rdi
   14000a556:	call   QWORD PTR [rip+0x2814c]        # 0x1400326a8
   14000a55c:	mov    rcx,rbx
   14000a55f:	call   rdi
   14000a561:	mov    rax,QWORD PTR [rsp+0x98]
   14000a569:	mov    QWORD PTR [r12+0x38],rax
   14000a56e:	mov    WORD PTR [rsp+0x38],r15w
   14000a574:	mov    WORD PTR [rsp+0x34],r15w
   14000a57a:	mov    rbx,QWORD PTR [rsp+0x88]
   14000a582:	mov    rax,QWORD PTR [rbx]
   14000a585:	mov    rdi,QWORD PTR [rax+0x20]
   14000a589:	mov    rcx,rdi
   14000a58c:	call   QWORD PTR [rip+0x28116]        # 0x1400326a8
   14000a592:	lea    r8,[rsp+0x34]
   14000a597:	lea    rdx,[rsp+0x38]
   14000a59c:	mov    rcx,rbx
   14000a59f:	call   rdi
   14000a5a1:	mov    ebx,eax
   14000a5a3:	test   eax,eax
   14000a5a5:	jns    0x14000a5fb
   14000a5a7:	mov    rcx,QWORD PTR [rip+0x40aca]        # 0x14004b078
   14000a5ae:	lea    rax,[rip+0x40ac3]        # 0x14004b078
   14000a5b5:	cmp    rcx,rax
   14000a5b8:	je     0x14000a5d8
   14000a5ba:	test   BYTE PTR [rcx+0x1c],0x2
   14000a5be:	je     0x14000a5d8
   14000a5c0:	mov    edx,0x40
   14000a5c5:	mov    r9d,ebx
   14000a5c8:	lea    r8,[rip+0x2c519]        # 0x140036ae8
   14000a5cf:	mov    rcx,QWORD PTR [rcx+0x10]
   14000a5d3:	call   0x140001f70
   14000a5d8:	mov    edx,ebx
   14000a5da:	lea    rcx,[rsp+0x268]
   14000a5e2:	call   0x140002064
   14000a5e7:	lea    rdx,[rip+0x3eb9a]        # 0x140049188
   14000a5ee:	lea    rcx,[rsp+0x268]
   14000a5f6:	call   0x14002e2da
   14000a5fb:	movzx  ecx,WORD PTR [rsp+0x38]
   14000a600:	shl    rcx,0x10
   14000a604:	movzx  eax,WORD PTR [rsp+0x34]
   14000a609:	add    rcx,rax
   14000a60c:	shl    rcx,0x20
   14000a610:	mov    QWORD PTR [r12+0x40],rcx
   14000a615:	mov    rdi,QWORD PTR [r12+0xa0]
   14000a61d:	test   rdi,rdi
   14000a620:	je     0x14000a63f
   14000a622:	mov    rax,QWORD PTR [rdi]
   14000a625:	mov    rbx,QWORD PTR [rax+0x8]
   14000a629:	mov    rcx,rbx
   14000a62c:	call   QWORD PTR [rip+0x28076]        # 0x1400326a8
   14000a632:	mov    rcx,rdi
   14000a635:	call   rbx
   14000a637:	mov    QWORD PTR [r12+0xa0],r15
   14000a63f:	mov    rax,QWORD PTR [rsp+0xc0]
   14000a647:	mov    QWORD PTR [rsp+0xc0],r15
   14000a64f:	mov    QWORD PTR [r12+0xa0],rax
   14000a657:	mov    rdi,QWORD PTR [r12+0xa8]
   14000a65f:	test   rdi,rdi
   14000a662:	je     0x14000a6a3
   14000a664:	mov    eax,DWORD PTR [rdi+0x8]
   14000a667:	cmp    eax,r14d
   14000a66a:	jne    0x14000a672
   14000a66c:	mov    DWORD PTR [rdi+0x8],r15d
   14000a670:	jmp    0x14000a67f
   14000a672:	mov    eax,esi
   14000a674:	lock xadd DWORD PTR [rdi+0x8],eax
   14000a679:	add    eax,esi
   14000a67b:	test   eax,eax
   14000a67d:	jg     0x14000a69b
   14000a67f:	test   rdi,rdi
   14000a682:	je     0x14000a69b
   14000a684:	mov    rax,QWORD PTR [rdi]
   14000a687:	mov    rbx,QWORD PTR [rax]
   14000a68a:	mov    rcx,rbx
   14000a68d:	call   QWORD PTR [rip+0x28015]        # 0x1400326a8
   14000a693:	mov    edx,r14d
   14000a696:	mov    rcx,rdi
   14000a699:	call   rbx
   14000a69b:	mov    QWORD PTR [r12+0xa8],r15
   14000a6a3:	mov    QWORD PTR [rsp+0x60],r15
   14000a6a8:	mov    rax,QWORD PTR [rsp+0x100]
   14000a6b0:	mov    QWORD PTR [r12+0xa8],rax
   14000a6b8:	movaps xmm0,XMMWORD PTR [r13+0x0]
   14000a6bd:	movups XMMWORD PTR [r12+0x50],xmm0
   14000a6c3:	movaps xmm1,XMMWORD PTR [r13+0x10]
   14000a6c8:	movups XMMWORD PTR [r12+0x60],xmm1
   14000a6ce:	movaps xmm0,XMMWORD PTR [r13+0x20]
   14000a6d3:	movups XMMWORD PTR [r12+0x70],xmm0
   14000a6d9:	movaps xmm1,XMMWORD PTR [r13+0x30]
   14000a6de:	movups XMMWORD PTR [r12+0x80],xmm1
   14000a6e7:	mov    eax,DWORD PTR [r13+0x40]
   14000a6eb:	mov    DWORD PTR [r12+0x90],eax
   14000a6f3:	mov    rbx,QWORD PTR [rsp+0x80]
   14000a6fb:	test   rbx,rbx
   14000a6fe:	je     0x14000a716
   14000a700:	mov    rax,QWORD PTR [rbx]
   14000a703:	mov    rdi,QWORD PTR [rax+0x10]
   14000a707:	mov    rcx,rdi
   14000a70a:	call   QWORD PTR [rip+0x27f98]        # 0x1400326a8
   14000a710:	mov    rcx,rbx
   14000a713:	call   rdi
   14000a715:	nop
   14000a716:	mov    rbx,QWORD PTR [rsp+0xa8]
   14000a71e:	test   rbx,rbx
   14000a721:	je     0x14000a739
   14000a723:	mov    rax,QWORD PTR [rbx]
   14000a726:	mov    rdi,QWORD PTR [rax+0x10]
   14000a72a:	mov    rcx,rdi
   14000a72d:	call   QWORD PTR [rip+0x27f75]        # 0x1400326a8
   14000a733:	mov    rcx,rbx
   14000a736:	call   rdi
   14000a738:	nop
   14000a739:	mov    rbx,QWORD PTR [rsp+0x40]
   14000a73e:	test   rbx,rbx
   14000a741:	je     0x14000a759
   14000a743:	mov    rax,QWORD PTR [rbx]
   14000a746:	mov    rdi,QWORD PTR [rax+0x10]
   14000a74a:	mov    rcx,rdi
   14000a74d:	call   QWORD PTR [rip+0x27f55]        # 0x1400326a8
   14000a753:	mov    rcx,rbx
   14000a756:	call   rdi
   14000a758:	nop
   14000a759:	mov    rbx,QWORD PTR [rsp+0x88]
   14000a761:	test   rbx,rbx
   14000a764:	je     0x14000a77c
   14000a766:	mov    rax,QWORD PTR [rbx]
   14000a769:	mov    rdi,QWORD PTR [rax+0x10]
   14000a76d:	mov    rcx,rdi
   14000a770:	call   QWORD PTR [rip+0x27f32]        # 0x1400326a8
   14000a776:	mov    rcx,rbx
   14000a779:	call   rdi
   14000a77b:	nop
   14000a77c:	mov    rax,QWORD PTR [rsp+0xd0]
   14000a784:	mov    ecx,esi
   14000a786:	lock xadd DWORD PTR [rax+0x8],ecx
   14000a78b:	add    ecx,esi
   14000a78d:	cmp    ecx,0x80000000
   14000a793:	jne    0x14000a811
   14000a795:	mov    rcx,QWORD PTR [rsp+0xd0]
   14000a79d:	call   0x140029c90
   14000a7a2:	jmp    0x14000a811
   14000a7a4:	mov    ecx,eax
   14000a7a6:	call   0x140029d64
   14000a7ab:	nop
   14000a7ac:	mov    ecx,eax
   14000a7ae:	call   0x140029d64
   14000a7b3:	nop
   14000a7b4:	mov    ecx,eax
   14000a7b6:	call   0x140029d64
   14000a7bb:	nop
   14000a7bc:	mov    ecx,eax
   14000a7be:	call   0x140029d64
   14000a7c3:	int3   
   14000a7c4:	mov    ecx,eax
   14000a7c6:	call   0x140029d64
   14000a7cb:	nop
   14000a7cc:	lea    rax,[rip+0x408a5]        # 0x14004b078
   14000a7d3:	mov    rcx,QWORD PTR [rip+0x4089e]        # 0x14004b078
   14000a7da:	cmp    rcx,rax
   14000a7dd:	je     0x14000a806
   14000a7df:	mov    r14d,0x1
   14000a7e5:	test   BYTE PTR [rcx+0x1c],r14b
   14000a7e9:	je     0x14000a806
   14000a7eb:	lea    edx,[r14+0x9]
   14000a7ef:	lea    r9,[rip+0x2bc8a]        # 0x140036480
   14000a7f6:	lea    r8,[rip+0x29bd3]        # 0x1400343d0
   14000a7fd:	mov    rcx,QWORD PTR [rcx+0x10]
   14000a801:	call   0x1400038e0
   14000a806:	mov    ecx,0x80070057
   14000a80b:	call   0x140029d64
   14000a810:	nop
   14000a811:	mov    rcx,QWORD PTR [rsp+0x2b8]
   14000a819:	xor    rcx,rsp
   14000a81c:	call   0x14002dd00
   14000a821:	add    rsp,0x2c0
   14000a828:	pop    r15
   14000a82a:	pop    r14
   14000a82c:	pop    r13
   14000a82e:	pop    r12
   14000a830:	pop    rdi
   14000a831:	pop    rsi
   14000a832:	pop    rbx
   14000a833:	ret    
   14000a834:	int3   
   14000a835:	int3   
   14000a836:	int3   
   14000a837:	int3   
   14000a838:	int3   
   14000a839:	int3   
   14000a83a:	int3   
   14000a83b:	int3   
   14000a83c:	rex push rbp
   14000a83e:	push   rbx
   14000a83f:	push   rsi
   14000a840:	push   rdi
   14000a841:	push   r12
   14000a843:	push   r13
   14000a845:	push   r14
   14000a847:	push   r15
   14000a849:	lea    rbp,[rsp-0x1f]
   14000a84e:	sub    rsp,0xb8
   14000a855:	mov    QWORD PTR [rbp-0x51],0xfffffffffffffffe
   14000a85d:	mov    rax,QWORD PTR [rip+0x407bc]        # 0x14004b020
   14000a864:	xor    rax,rsp
   14000a867:	mov    QWORD PTR [rbp+0xf],rax
   14000a86b:	mov    r15,r9
   14000a86e:	mov    r13,r8
   14000a871:	mov    r12,rdx
   14000a874:	mov    rsi,rcx
   14000a877:	lea    rdi,[rcx+0x90]
   14000a87e:	mov    QWORD PTR [rbp-0x59],rdi
   14000a882:	mov    rcx,rdi
   14000a885:	call   0x140029ab0
   14000a88a:	xor    r14d,r14d
   14000a88d:	test   eax,eax
   14000a88f:	jns    0x14000a899
   14000a891:	mov    ecx,eax
   14000a893:	call   0x140029d64
   14000a898:	nop
   14000a899:	test   r9,r9
   14000a89c:	jne    0x14000a8dd
   14000a89e:	lea    r14,[rip+0x407d3]        # 0x14004b078
   14000a8a5:	mov    rcx,QWORD PTR [rip+0x407cc]        # 0x14004b078
   14000a8ac:	cmp    rcx,r14
   14000a8af:	je     0x14000a8d2
   14000a8b1:	test   BYTE PTR [rcx+0x1c],0x1
   14000a8b5:	je     0x14000a8d2
   14000a8b7:	lea    edx,[r9+0xa]
   14000a8bb:	lea    r9,[rip+0x2bd2e]        # 0x1400365f0
   14000a8c2:	lea    r8,[rip+0x29b07]        # 0x1400343d0
   14000a8c9:	mov    rcx,QWORD PTR [rcx+0x10]
   14000a8cd:	call   0x1400038e0
   14000a8d2:	mov    ecx,0x80070057
   14000a8d7:	call   0x140029d64
   14000a8dc:	int3   
   14000a8dd:	mov    QWORD PTR [r9],r14
   14000a8e0:	mov    QWORD PTR [rbp-0x61],r14
   14000a8e4:	mov    ebx,r14d
   14000a8e7:	call   0x140025df8
   14000a8ec:	test   al,al
   14000a8ee:	jne    0x14000a91c
   14000a8f0:	mov    DWORD PTR [rbp-0x69],r14d
   14000a8f4:	call   QWORD PTR [rip+0x27b56]        # 0x140032450
   14000a8fa:	mov    rbx,QWORD PTR [rax+0xa0]
   14000a901:	mov    rcx,rbx
   14000a904:	call   QWORD PTR [rip+0x27d9e]        # 0x1400326a8
   14000a90a:	lea    r8,[rbp-0x69]
   14000a90e:	xor    edx,edx
   14000a910:	lea    rcx,[rip+0x2bd21]        # 0x140036638
   14000a917:	call   rbx
   14000a919:	mov    ebx,DWORD PTR [rbp-0x69]
   14000a91c:	mov    r14d,0x30
   14000a922:	mov    r8d,r14d
   14000a925:	xor    edx,edx
   14000a927:	lea    rcx,[rbp-0x49]
   14000a92b:	call   0x14002e2ce
   14000a930:	mov    DWORD PTR [rbp-0x49],r14d
   14000a934:	mov    DWORD PTR [rbp-0x45],ebx
   14000a937:	mov    QWORD PTR [rbp-0x41],r13
   14000a93b:	mov    rax,QWORD PTR [rsi+0x10]
   14000a93f:	mov    rbx,QWORD PTR [rax+0x28]
   14000a943:	mov    rcx,rbx
   14000a946:	call   QWORD PTR [rip+0x27d5c]        # 0x1400326a8
   14000a94c:	lea    rax,[rbp-0x39]
   14000a950:	mov    QWORD PTR [rsp+0x20],rax
   14000a955:	lea    r9,[rbp-0x31]
   14000a959:	lea    r8,[rbp-0x1d]
   14000a95d:	lea    rdx,[rbp-0x21]
   14000a961:	lea    rcx,[rsi+0x10]
   14000a965:	call   rbx
   14000a967:	test   eax,eax
   14000a969:	jns    0x14000a973
   14000a96b:	mov    ecx,eax
   14000a96d:	call   0x140029d64
   14000a972:	int3   
   14000a973:	lea    r14,[rip+0x406fe]        # 0x14004b078
   14000a97a:	mov    rcx,QWORD PTR [rip+0x406f7]        # 0x14004b078
   14000a981:	cmp    rcx,r14
   14000a984:	je     0x14000a9a4
   14000a986:	test   BYTE PTR [rcx+0x1c],0x4
   14000a98a:	je     0x14000a9a4
   14000a98c:	mov    edx,0x2d
   14000a991:	mov    r9,r13
   14000a994:	lea    r8,[rip+0x2c14d]        # 0x140036ae8
   14000a99b:	mov    rcx,QWORD PTR [rcx+0x10]
   14000a99f:	call   0x1400071e8
   14000a9a4:	mov    rbx,QWORD PTR [rbp-0x61]
   14000a9a8:	test   rbx,rbx
   14000a9ab:	je     0x14000a9c7
   14000a9ad:	mov    rax,QWORD PTR [rbx]
   14000a9b0:	mov    rsi,QWORD PTR [rax+0x10]
   14000a9b4:	mov    rcx,rsi
   14000a9b7:	call   QWORD PTR [rip+0x27ceb]        # 0x1400326a8
   14000a9bd:	mov    rcx,rbx
   14000a9c0:	call   rsi
   14000a9c2:	and    QWORD PTR [rbp-0x61],0x0
   14000a9c7:	mov    rcx,r12
   14000a9ca:	call   QWORD PTR [rip+0x27cd8]        # 0x1400326a8
   14000a9d0:	lea    rdx,[rbp-0x61]
   14000a9d4:	lea    rcx,[rbp-0x49]
   14000a9d8:	call   r12
   14000a9db:	mov    ebx,eax
   14000a9dd:	test   eax,eax
   14000a9df:	jns    0x14000aa27
   14000a9e1:	mov    rcx,QWORD PTR [rip+0x40690]        # 0x14004b078
   14000a9e8:	cmp    rcx,r14
   14000a9eb:	je     0x14000aa0b
   14000a9ed:	test   BYTE PTR [rcx+0x1c],0x1
   14000a9f1:	je     0x14000aa0b
   14000a9f3:	mov    edx,0x2e
   14000a9f8:	mov    r9d,eax
   14000a9fb:	lea    r8,[rip+0x2c0e6]        # 0x140036ae8
   14000aa02:	mov    rcx,QWORD PTR [rcx+0x10]
   14000aa06:	call   0x140001f70
   14000aa0b:	mov    edx,ebx
   14000aa0d:	lea    rcx,[rbp-0x19]
   14000aa11:	call   0x140002064
   14000aa16:	lea    rdx,[rip+0x3e76b]        # 0x140049188
   14000aa1d:	lea    rcx,[rbp-0x19]
   14000aa21:	call   0x14002e2da
   14000aa26:	int3   
   14000aa27:	mov    rax,QWORD PTR [rbp-0x61]
   14000aa2b:	and    QWORD PTR [rbp-0x61],0x0
   14000aa30:	mov    QWORD PTR [r15],rax
   14000aa33:	or     eax,0xffffffff
   14000aa36:	lock xadd DWORD PTR [rdi+0x8],eax
   14000aa3b:	dec    eax
   14000aa3d:	cmp    eax,0x80000000
   14000aa42:	jne    0x14000aa4d
   14000aa44:	mov    rcx,QWORD PTR [rbp-0x59]
   14000aa48:	call   0x140029c90
   14000aa4d:	mov    rcx,QWORD PTR [rbp+0xf]
   14000aa51:	xor    rcx,rsp
   14000aa54:	call   0x14002dd00
   14000aa59:	add    rsp,0xb8
   14000aa60:	pop    r15
   14000aa62:	pop    r14
   14000aa64:	pop    r13
   14000aa66:	pop    r12
   14000aa68:	pop    rdi
   14000aa69:	pop    rsi
   14000aa6a:	pop    rbx
   14000aa6b:	pop    rbp
   14000aa6c:	ret    
   14000aa6d:	int3   
   14000aa6e:	int3   
   14000aa6f:	int3   
   14000aa70:	int3   
   14000aa71:	int3   
   14000aa72:	int3   
   14000aa73:	int3   
   14000aa74:	mov    rax,rsp
   14000aa77:	push   rbp
   14000aa78:	push   rsi
   14000aa79:	push   rdi
   14000aa7a:	push   r12
   14000aa7c:	push   r13
   14000aa7e:	push   r14
   14000aa80:	push   r15
   14000aa82:	sub    rsp,0x40
   14000aa86:	mov    QWORD PTR [rax-0x48],0xfffffffffffffffe
   14000aa8e:	mov    QWORD PTR [rax+0x10],rbx
   14000aa92:	mov    r13,r8
   14000aa95:	mov    r14,rdx
   14000aa98:	lea    rbx,[rcx+0x90]
   14000aa9f:	mov    QWORD PTR [rax+0x20],rbx
   14000aaa3:	mov    rcx,rbx
   14000aaa6:	call   0x140029ab0
   14000aaab:	test   eax,eax
   14000aaad:	jns    0x14000aab7
   14000aaaf:	mov    ecx,eax
   14000aab1:	call   0x140029d64
   14000aab6:	nop
   14000aab7:	test   r14,r14
   14000aaba:	je     0x14000adef
   14000aac0:	test   r13,r13
   14000aac3:	je     0x14000adef
   14000aac9:	and    QWORD PTR [r13+0x0],0x0
   14000aace:	mov    ecx,0x148
   14000aad3:	call   0x140023f10
   14000aad8:	mov    QWORD PTR [rsp+0x80],rax
   14000aae0:	mov    rcx,rax
   14000aae3:	call   0x140011538
   14000aae8:	mov    rdi,rax
   14000aaeb:	test   rax,rax
   14000aaee:	je     0x14000ab0c
   14000aaf0:	mov    ecx,DWORD PTR [rax+0x8]
   14000aaf3:	test   ecx,ecx
   14000aaf5:	jne    0x14000ab00
   14000aaf7:	mov    DWORD PTR [rax+0x8],0x1
   14000aafe:	jmp    0x14000ab04
   14000ab00:	lock inc DWORD PTR [rax+0x8]
   14000ab04:	mov    rbx,QWORD PTR [rsp+0x98]
   14000ab0c:	mov    QWORD PTR [rsp+0x38],rax
   14000ab11:	lea    rbp,[rip+0x40560]        # 0x14004b078
   14000ab18:	mov    r15b,0x4
   14000ab1b:	mov    rcx,QWORD PTR [rip+0x40556]        # 0x14004b078
   14000ab22:	cmp    rcx,rbp
   14000ab25:	je     0x14000ab4c
   14000ab27:	test   BYTE PTR [rcx+0x1c],r15b
   14000ab2b:	je     0x14000ab4c
   14000ab2d:	mov    edx,0x2f
   14000ab32:	mov    r9,r14
   14000ab35:	lea    r8,[rip+0x2bfac]        # 0x140036ae8
   14000ab3c:	mov    rcx,QWORD PTR [rcx+0x10]
   14000ab40:	call   0x1400071e8
   14000ab45:	mov    rcx,QWORD PTR [rip+0x4052c]        # 0x14004b078
   14000ab4c:	lea    r12,[rdi+0x10]
   14000ab50:	test   r12,r12
   14000ab53:	je     0x14000ac4c
   14000ab59:	and    QWORD PTR [r12],0x0
   14000ab5e:	or     QWORD PTR [rsp+0x80],0xffffffffffffffff
   14000ab67:	lea    rdx,[rsp+0x80]
   14000ab6f:	mov    rcx,r14
   14000ab72:	call   0x140026154
   14000ab77:	mov    esi,eax
   14000ab79:	test   eax,eax
   14000ab7b:	jns    0x14000abc0
   14000ab7d:	test   BYTE PTR [rip+0x43b08],0x1        # 0x14004e68c
   14000ab84:	je     0x14000aba0
   14000ab86:	mov    edx,0xe
   14000ab8b:	mov    DWORD PTR [rsp+0x28],eax
   14000ab8f:	mov    QWORD PTR [rsp+0x20],r14
   14000ab94:	mov    rcx,QWORD PTR [rip+0x43ae5]        # 0x14004e680
   14000ab9b:	call   0x140026098
   14000aba0:	mov    rcx,QWORD PTR [rsp+0x80]
   14000aba8:	cmp    rcx,0xffffffffffffffff
   14000abac:	je     0x14000abb4
   14000abae:	call   QWORD PTR [rip+0x275a4]        # 0x140032158
   14000abb4:	mov    rcx,QWORD PTR [rip+0x404bd]        # 0x14004b078
   14000abbb:	jmp    0x14000ac51
   14000abc0:	mov    rcx,r14
   14000abc3:	call   QWORD PTR [rip+0x27697]        # 0x140032260
   14000abc9:	test   rax,rax
   14000abcc:	jne    0x14000ac2b
   14000abce:	call   QWORD PTR [rip+0x276b4]        # 0x140032288
   14000abd4:	mov    r15d,eax
   14000abd7:	test   BYTE PTR [rip+0x43aae],0x1        # 0x14004e68c
   14000abde:	je     0x14000abfa
   14000abe0:	mov    edx,0xf
   14000abe5:	mov    DWORD PTR [rsp+0x28],eax
   14000abe9:	mov    QWORD PTR [rsp+0x20],r14
   14000abee:	mov    rcx,QWORD PTR [rip+0x43a8b]        # 0x14004e680
   14000abf5:	call   0x140026098
   14000abfa:	movzx  esi,r15w
   14000abfe:	or     esi,0x80070000
   14000ac04:	test   r15d,r15d
   14000ac07:	cmovle esi,r15d
   14000ac0b:	mov    rcx,QWORD PTR [rsp+0x80]
   14000ac13:	cmp    rcx,0xffffffffffffffff
   14000ac17:	je     0x14000ac1f
   14000ac19:	call   QWORD PTR [rip+0x27539]        # 0x140032158
   14000ac1f:	mov    rcx,QWORD PTR [rip+0x40452]        # 0x14004b078
   14000ac26:	mov    r15b,0x4
   14000ac29:	jmp    0x14000ac51
   14000ac2b:	mov    QWORD PTR [r12],rax
   14000ac2f:	mov    rcx,QWORD PTR [rsp+0x80]
   14000ac37:	cmp    rcx,0xffffffffffffffff
   14000ac3b:	je     0x14000ac43
   14000ac3d:	call   QWORD PTR [rip+0x27515]        # 0x140032158
   14000ac43:	mov    rcx,QWORD PTR [rip+0x4042e]        # 0x14004b078
   14000ac4a:	jmp    0x14000ac5d
   14000ac4c:	mov    esi,0x80004003
   14000ac51:	test   esi,esi
   14000ac53:	jns    0x14000ac5d
   14000ac55:	mov    ecx,esi
   14000ac57:	call   0x140029d64
   14000ac5c:	int3   
   14000ac5d:	cmp    rcx,rbp
   14000ac60:	je     0x14000ac7d
   14000ac62:	test   BYTE PTR [rcx+0x1c],r15b
   14000ac66:	je     0x14000ac7d
   14000ac68:	mov    edx,0x30
   14000ac6d:	lea    r8,[rip+0x2be74]        # 0x140036ae8
   14000ac74:	mov    rcx,QWORD PTR [rcx+0x10]
   14000ac78:	call   0x140001f08
   14000ac7d:	lea    rdx,[rip+0x2ba3c]        # 0x1400366c0
   14000ac84:	mov    rcx,QWORD PTR [r12]
   14000ac88:	call   QWORD PTR [rip+0x27612]        # 0x1400322a0
   14000ac8e:	mov    QWORD PTR [rdi+0x18],rax
   14000ac92:	test   rax,rax
   14000ac95:	jne    0x14000aca9
   14000ac97:	call   QWORD PTR [rip+0x275eb]        # 0x140032288
   14000ac9d:	test   eax,eax
   14000ac9f:	je     0x14000aca9
   14000aca1:	mov    ecx,eax
   14000aca3:	call   0x140029e64
   14000aca8:	int3   
   14000aca9:	mov    rcx,QWORD PTR [rip+0x403c8]        # 0x14004b078
   14000acb0:	cmp    rcx,rbp
   14000acb3:	je     0x14000acd0
   14000acb5:	test   BYTE PTR [rcx+0x1c],r15b
   14000acb9:	je     0x14000acd0
   14000acbb:	mov    edx,0x31
   14000acc0:	lea    r8,[rip+0x2be21]        # 0x140036ae8
   14000acc7:	mov    rcx,QWORD PTR [rcx+0x10]
   14000accb:	call   0x140001f08
   14000acd0:	lea    rdx,[rip+0x2ba09]        # 0x1400366e0
   14000acd7:	mov    rcx,QWORD PTR [r12]
   14000acdb:	call   QWORD PTR [rip+0x275bf]        # 0x1400322a0
   14000ace1:	mov    QWORD PTR [rdi+0x20],rax
   14000ace5:	test   rax,rax
   14000ace8:	jne    0x14000acfc
   14000acea:	call   QWORD PTR [rip+0x27598]        # 0x140032288
   14000acf0:	test   eax,eax
   14000acf2:	je     0x14000acfc
   14000acf4:	mov    ecx,eax
   14000acf6:	call   0x140029e64
   14000acfb:	int3   
   14000acfc:	mov    rcx,QWORD PTR [rip+0x40375]        # 0x14004b078
   14000ad03:	cmp    rcx,rbp
   14000ad06:	je     0x14000ad23
   14000ad08:	test   BYTE PTR [rcx+0x1c],r15b
   14000ad0c:	je     0x14000ad23
   14000ad0e:	mov    edx,0x32
   14000ad13:	lea    r8,[rip+0x2bdce]        # 0x140036ae8
   14000ad1a:	mov    rcx,QWORD PTR [rcx+0x10]
   14000ad1e:	call   0x140001f08
   14000ad23:	lea    rdx,[rip+0x2b9ce]        # 0x1400366f8
   14000ad2a:	mov    rcx,QWORD PTR [r12]
   14000ad2e:	call   QWORD PTR [rip+0x2756c]        # 0x1400322a0
   14000ad34:	mov    r14,rax
   14000ad37:	test   rax,rax
   14000ad3a:	jne    0x14000ad4e
   14000ad3c:	call   QWORD PTR [rip+0x27546]        # 0x140032288
   14000ad42:	test   eax,eax
   14000ad44:	je     0x14000ad4e
   14000ad46:	mov    ecx,eax
   14000ad48:	call   0x140029e64
   14000ad4d:	int3   
   14000ad4e:	mov    rcx,QWORD PTR [rip+0x40323]        # 0x14004b078
   14000ad55:	cmp    rcx,rbp
   14000ad58:	je     0x14000ad75
   14000ad5a:	test   BYTE PTR [rcx+0x1c],r15b
   14000ad5e:	je     0x14000ad75
   14000ad60:	mov    edx,0x33
   14000ad65:	lea    r8,[rip+0x2bd7c]        # 0x140036ae8
   14000ad6c:	mov    rcx,QWORD PTR [rcx+0x10]
   14000ad70:	call   0x140001f08
   14000ad75:	mov    rcx,r14
   14000ad78:	call   QWORD PTR [rip+0x2792a]        # 0x1400326a8
   14000ad7e:	lea    rcx,[rdi+0x28]
   14000ad82:	call   r14
   14000ad85:	cmp    eax,0x80070032
   14000ad8a:	jne    0x14000adbf
   14000ad8c:	mov    rcx,QWORD PTR [rip+0x402e5]        # 0x14004b078
   14000ad93:	cmp    rcx,rbp
   14000ad96:	je     0x14000adb3
   14000ad98:	test   BYTE PTR [rcx+0x1c],0x2
   14000ad9c:	je     0x14000adb3
   14000ad9e:	mov    edx,0x34
   14000ada3:	lea    r8,[rip+0x2bd3e]        # 0x140036ae8
   14000adaa:	mov    rcx,QWORD PTR [rcx+0x10]
   14000adae:	call   0x140001f08
   14000adb3:	xor    eax,eax
   14000adb5:	mov    QWORD PTR [rdi+0x28],rax
   14000adb9:	mov    QWORD PTR [rdi+0x30],rax
   14000adbd:	jmp    0x14000adcb
   14000adbf:	test   eax,eax
   14000adc1:	jns    0x14000adcb
   14000adc3:	mov    ecx,eax
   14000adc5:	call   0x140029d64
   14000adca:	int3   
   14000adcb:	mov    QWORD PTR [r13+0x0],rdi
   14000adcf:	or     eax,0xffffffff
   14000add2:	lock xadd DWORD PTR [rbx+0x8],eax
   14000add7:	dec    eax
   14000add9:	cmp    eax,0x80000000
   14000adde:	jne    0x14000ae2f
   14000ade0:	mov    rcx,QWORD PTR [rsp+0x98]
   14000ade8:	call   0x140029c90
   14000aded:	jmp    0x14000ae2f
   14000adef:	lea    rbp,[rip+0x40282]        # 0x14004b078
   14000adf6:	mov    rcx,QWORD PTR [rip+0x4027b]        # 0x14004b078
   14000adfd:	cmp    rcx,rbp
   14000ae00:	je     0x14000ae24
   14000ae02:	test   BYTE PTR [rcx+0x1c],0x1
   14000ae06:	je     0x14000ae24
   14000ae08:	mov    edx,0xa
   14000ae0d:	lea    r9,[rip+0x2b85c]        # 0x140036670
   14000ae14:	lea    r8,[rip+0x295b5]        # 0x1400343d0
   14000ae1b:	mov    rcx,QWORD PTR [rcx+0x10]
   14000ae1f:	call   0x1400038e0
   14000ae24:	mov    ecx,0x80070057
   14000ae29:	call   0x140029d64
   14000ae2e:	nop
   14000ae2f:	mov    rbx,QWORD PTR [rsp+0x88]
   14000ae37:	add    rsp,0x40
   14000ae3b:	pop    r15
   14000ae3d:	pop    r14
   14000ae3f:	pop    r13
   14000ae41:	pop    r12
   14000ae43:	pop    rdi
   14000ae44:	pop    rsi
   14000ae45:	pop    rbp
   14000ae46:	ret    
   14000ae47:	int3   
   14000ae48:	int3   
   14000ae49:	int3   
   14000ae4a:	int3   
   14000ae4b:	int3   
   14000ae4c:	int3   
   14000ae4d:	int3   
   14000ae4e:	int3   
   14000ae4f:	int3   
   14000ae50:	mov    rax,rsp
   14000ae53:	mov    QWORD PTR [rax+0x8],rbx
   14000ae57:	mov    QWORD PTR [rax+0x10],rbp
   14000ae5b:	mov    QWORD PTR [rax+0x18],rsi
   14000ae5f:	mov    QWORD PTR [rax+0x20],rdi
   14000ae63:	push   r14
   14000ae65:	sub    rsp,0x20
   14000ae69:	mov    rdx,QWORD PTR [rcx+0x158]
   14000ae70:	mov    rdi,rcx
   14000ae73:	test   rdx,rdx
   14000ae76:	je     0x14000aeb5
   14000ae78:	xor    r8d,r8d
   14000ae7b:	xor    ecx,ecx
   14000ae7d:	call   QWORD PTR [rip+0x272bd]        # 0x140032140
   14000ae83:	test   eax,eax
   14000ae85:	jne    0x14000aeb5
   14000ae87:	mov    rcx,QWORD PTR [rip+0x401ea]        # 0x14004b078
   14000ae8e:	lea    rax,[rip+0x401e3]        # 0x14004b078
   14000ae95:	cmp    rcx,rax
   14000ae98:	je     0x14000aeb5
   14000ae9a:	test   BYTE PTR [rcx+0x1c],0x1
   14000ae9e:	je     0x14000aeb5
   14000aea0:	mov    rcx,QWORD PTR [rcx+0x10]
   14000aea4:	lea    r8,[rip+0x2bc3d]        # 0x140036ae8
   14000aeab:	mov    edx,0x35
   14000aeb0:	call   0x140001f08
   14000aeb5:	lea    rcx,[rdi+0x90]
   14000aebc:	call   0x140029b84
   14000aec1:	xor    edx,edx
   14000aec3:	mov    rcx,rdi
   14000aec6:	call   0x14000b71c
   14000aecb:	lea    rbp,[rdi+0x108]
   14000aed2:	mov    rcx,rbp
   14000aed5:	call   QWORD PTR [rip+0x2722d]        # 0x140032108
   14000aedb:	cmp    QWORD PTR [rdi+0xe0],0x0
   14000aee3:	jbe    0x14000af6d
   14000aee9:	lea    r14,[rdi+0xd0]
   14000aef0:	mov    rax,QWORD PTR [r14]
   14000aef3:	mov    rsi,QWORD PTR [rax+0x10]
   14000aef7:	test   rsi,rsi
   14000aefa:	je     0x14000af10
   14000aefc:	mov    eax,DWORD PTR [rsi+0x8]
   14000aeff:	test   eax,eax
   14000af01:	jne    0x14000af0c
   14000af03:	mov    DWORD PTR [rsi+0x8],0x1
   14000af0a:	jmp    0x14000af10
   14000af0c:	lock inc DWORD PTR [rsi+0x8]
   14000af10:	mov    rcx,QWORD PTR [r14]
   14000af13:	mov    rax,QWORD PTR [rcx]
   14000af16:	mov    QWORD PTR [r14],rax
   14000af19:	mov    QWORD PTR [rax+0x8],r14
   14000af1d:	dec    QWORD PTR [r14+0x10]
   14000af21:	call   QWORD PTR [rip+0x276a1]        # 0x1400325c8
   14000af27:	test   rsi,rsi
   14000af2a:	je     0x14000af63
   14000af2c:	mov    eax,DWORD PTR [rsi+0x8]
   14000af2f:	cmp    eax,0x1
   14000af32:	jne    0x14000af3d
   14000af34:	mov    DWORD PTR [rsi+0x8],0x0
   14000af3b:	jmp    0x14000af4a
   14000af3d:	or     eax,0xffffffff
   14000af40:	lock xadd DWORD PTR [rsi+0x8],eax
   14000af45:	sub    eax,0x1
   14000af48:	jg     0x14000af63
   14000af4a:	mov    rax,QWORD PTR [rsi]
   14000af4d:	mov    rbx,QWORD PTR [rax]
   14000af50:	mov    rcx,rbx
   14000af53:	call   QWORD PTR [rip+0x2774f]        # 0x1400326a8
   14000af59:	mov    edx,0x1
   14000af5e:	mov    rcx,rsi
   14000af61:	call   rbx
   14000af63:	cmp    QWORD PTR [rdi+0xe0],0x0
   14000af6b:	ja     0x14000aef0
   14000af6d:	mov    rcx,rbp
   14000af70:	call   QWORD PTR [rip+0x27182]        # 0x1400320f8
   14000af76:	lea    rbx,[rdi+0x168]
   14000af7d:	mov    rcx,rbx
   14000af80:	call   QWORD PTR [rip+0x27182]        # 0x140032108
   14000af86:	mov    rcx,QWORD PTR [rdi+0xf8]
   14000af8d:	test   rcx,rcx
   14000af90:	je     0x14000afa7
   14000af92:	call   QWORD PTR [rip+0x273b8]        # 0x140032350
   14000af98:	and    QWORD PTR [rdi+0xf8],0x0
   14000afa0:	mov    BYTE PTR [rdi+0xf0],0x0
   14000afa7:	mov    rcx,rbx
   14000afaa:	call   QWORD PTR [rip+0x27148]        # 0x1400320f8
   14000afb0:	lea    rcx,[rdi+0x200]
   14000afb7:	mov    rbx,QWORD PTR [rsp+0x30]
   14000afbc:	mov    rbp,QWORD PTR [rsp+0x38]
   14000afc1:	mov    rsi,QWORD PTR [rsp+0x40]
   14000afc6:	mov    rdi,QWORD PTR [rsp+0x48]
   14000afcb:	add    rsp,0x20
   14000afcf:	pop    r14
   14000afd1:	jmp    0x140015e54
   14000afd6:	int3   
   14000afd7:	int3   
   14000afd8:	int3   
   14000afd9:	int3   
   14000afda:	int3   
   14000afdb:	int3   
   14000afdc:	int3   
   14000afdd:	int3   
   14000afde:	int3   
   14000afdf:	int3   
   14000afe0:	mov    rax,rsp
   14000afe3:	push   rbp
   14000afe4:	push   rdi
   14000afe5:	push   r12
   14000afe7:	push   r14
   14000afe9:	push   r15
   14000afeb:	mov    rbp,rsp
   14000afee:	sub    rsp,0x50
   14000aff2:	mov    QWORD PTR [rbp-0x10],0xfffffffffffffffe
   14000affa:	mov    QWORD PTR [rax+0x10],rbx
   14000affe:	mov    QWORD PTR [rax+0x18],rsi
   14000b002:	mov    r12b,r8b
   14000b005:	mov    rsi,rdx
   14000b008:	mov    rdi,rcx
   14000b00b:	add    rcx,0x90
   14000b012:	mov    QWORD PTR [rbp-0x18],rcx
   14000b016:	call   0x140029ab0
   14000b01b:	test   eax,eax
   14000b01d:	jns    0x14000b027
   14000b01f:	mov    ecx,eax
   14000b021:	call   0x140029d64
   14000b026:	nop
   14000b027:	test   rsi,rsi
   14000b02a:	jne    0x14000b06a
   14000b02c:	lea    rax,[rip+0x40045]        # 0x14004b078
   14000b033:	mov    rcx,QWORD PTR [rip+0x4003e]        # 0x14004b078
   14000b03a:	cmp    rcx,rax
   14000b03d:	je     0x14000b05f
   14000b03f:	test   BYTE PTR [rcx+0x1c],0x1
   14000b043:	je     0x14000b05f
   14000b045:	lea    edx,[rsi+0xa]
   14000b048:	lea    r9,[rip+0x2b6c9]        # 0x140036718
   14000b04f:	lea    r8,[rip+0x2937a]        # 0x1400343d0
   14000b056:	mov    rcx,QWORD PTR [rcx+0x10]
   14000b05a:	call   0x1400038e0
   14000b05f:	mov    ecx,0x80070057
   14000b064:	call   0x140029d64
   14000b069:	int3   
   14000b06a:	mov    BYTE PTR [rbp+0x30],0x0
   14000b06e:	lea    rdx,[rbp+0x30]
   14000b072:	mov    rcx,rdi
   14000b075:	call   0x140007ccc
   14000b07a:	nop
   14000b07b:	lea    rcx,[rdi+0x60]
   14000b07f:	call   QWORD PTR [rip+0x27083]        # 0x140032108
   14000b085:	xor    ebx,ebx
   14000b087:	mov    QWORD PTR [rbp+0x48],rbx
   14000b08b:	lea    r15,[rdi+0x108]
   14000b092:	mov    rcx,r15
   14000b095:	call   QWORD PTR [rip+0x2706d]        # 0x140032108
   14000b09b:	cmp    QWORD PTR [rdi+0xe0],rbx
   14000b0a2:	je     0x14000b0cb
   14000b0a4:	mov    rax,QWORD PTR [rdi+0xd8]
   14000b0ab:	mov    rax,QWORD PTR [rax+0x10]
   14000b0af:	mov    QWORD PTR [rbp+0x48],rax
   14000b0b3:	mov    ecx,DWORD PTR [rax+0x8]
   14000b0b6:	test   ecx,ecx
   14000b0b8:	jne    0x14000b0c3
   14000b0ba:	mov    DWORD PTR [rax+0x8],0x1
   14000b0c1:	jmp    0x14000b0c7
   14000b0c3:	lock inc DWORD PTR [rax+0x8]
   14000b0c7:	mov    rbx,QWORD PTR [rbp+0x48]
   14000b0cb:	mov    rcx,r15
   14000b0ce:	call   QWORD PTR [rip+0x27024]        # 0x1400320f8
   14000b0d4:	lea    rcx,[rdi+0x60]
   14000b0d8:	call   QWORD PTR [rip+0x2701a]        # 0x1400320f8
   14000b0de:	test   rbx,rbx
   14000b0e1:	jne    0x14000b119
   14000b0e3:	lea    rax,[rip+0x3ff8e]        # 0x14004b078
   14000b0ea:	mov    rcx,QWORD PTR [rip+0x3ff87]        # 0x14004b078
   14000b0f1:	cmp    rcx,rax
   14000b0f4:	je     0x14000b115
   14000b0f6:	test   BYTE PTR [rcx+0x1c],0x1
   14000b0fa:	je     0x14000b115
   14000b0fc:	lea    edx,[rbx+0x36]
   14000b0ff:	mov    r9d,0x8000ffff
   14000b105:	lea    r8,[rip+0x2b9dc]        # 0x140036ae8
   14000b10c:	mov    rcx,QWORD PTR [rcx+0x10]
   14000b110:	call   0x140001f70
   14000b115:	xor    esi,esi
   14000b117:	jmp    0x14000b145
   14000b119:	and    QWORD PTR [rbp-0x20],0x0
   14000b11e:	mov    al,BYTE PTR [rbp+0x30]
   14000b121:	mov    BYTE PTR [rsp+0x28],al
   14000b125:	mov    BYTE PTR [rsp+0x20],r12b
   14000b12a:	mov    r9,rbx
   14000b12d:	mov    r8,rsi
   14000b130:	mov    rdx,rdi
   14000b133:	lea    rcx,[rbp-0x20]
   14000b137:	call   0x14000eadc
   14000b13c:	mov    rsi,QWORD PTR [rbp-0x20]
   14000b140:	and    QWORD PTR [rbp-0x20],0x0
   14000b145:	or     r14d,0xffffffff
   14000b149:	test   rbx,rbx
   14000b14c:	je     0x14000b18c
   14000b14e:	mov    eax,DWORD PTR [rbx+0x8]
   14000b151:	cmp    eax,0x1
   14000b154:	jne    0x14000b15f
   14000b156:	mov    DWORD PTR [rbx+0x8],0x0
   14000b15d:	jmp    0x14000b16e
   14000b15f:	mov    eax,r14d
   14000b162:	lock xadd DWORD PTR [rbx+0x8],eax
   14000b167:	add    eax,r14d
   14000b16a:	test   eax,eax
   14000b16c:	jg     0x14000b18c
   14000b16e:	mov    rbx,QWORD PTR [rbp+0x48]
   14000b172:	mov    rax,QWORD PTR [rbx]
   14000b175:	mov    rdi,QWORD PTR [rax]
   14000b178:	mov    rcx,rdi
   14000b17b:	call   QWORD PTR [rip+0x27527]        # 0x1400326a8
   14000b181:	mov    edx,0x1
   14000b186:	mov    rcx,rbx
   14000b189:	call   rdi
   14000b18b:	nop
   14000b18c:	mov    rcx,QWORD PTR [rbp-0x18]
   14000b190:	mov    edx,r14d
   14000b193:	lock xadd DWORD PTR [rcx+0x8],edx
   14000b198:	add    edx,r14d
   14000b19b:	cmp    edx,0x80000000
   14000b1a1:	jne    0x14000b1ac
   14000b1a3:	mov    rcx,QWORD PTR [rbp-0x18]
   14000b1a7:	call   0x140029c90
   14000b1ac:	mov    rax,rsi
   14000b1af:	lea    r11,[rsp+0x50]
   14000b1b4:	mov    rbx,QWORD PTR [r11+0x38]
   14000b1b8:	mov    rsi,QWORD PTR [r11+0x40]
   14000b1bc:	mov    rsp,r11
   14000b1bf:	pop    r15
   14000b1c1:	pop    r14
   14000b1c3:	pop    r12
   14000b1c5:	pop    rdi
   14000b1c6:	pop    rbp
   14000b1c7:	ret    
   14000b1c8:	int3   
   14000b1c9:	int3   
   14000b1ca:	int3   
   14000b1cb:	int3   
   14000b1cc:	int3   
   14000b1cd:	int3   
   14000b1ce:	int3   
   14000b1cf:	int3   
   14000b1d0:	rex push rbp
   14000b1d2:	push   rbx
   14000b1d3:	push   rsi
   14000b1d4:	push   rdi
   14000b1d5:	push   r12
   14000b1d7:	push   r14
   14000b1d9:	push   r15
   14000b1db:	lea    rbp,[rsp-0x27]
   14000b1e0:	sub    rsp,0xc0
   14000b1e7:	mov    QWORD PTR [rbp-0x49],0xfffffffffffffffe
   14000b1ef:	mov    rax,QWORD PTR [rip+0x3fe2a]        # 0x14004b020
   14000b1f6:	xor    rax,rsp
   14000b1f9:	mov    QWORD PTR [rbp+0x17],rax
   14000b1fd:	mov    r15,r8
   14000b200:	mov    r14,rdx
   14000b203:	mov    rsi,rcx
   14000b206:	lea    rbx,[rcx+0x90]
   14000b20d:	mov    QWORD PTR [rbp-0x51],rbx
   14000b211:	mov    rcx,rbx
   14000b214:	call   0x140029ab0
   14000b219:	xor    r12d,r12d
   14000b21c:	test   eax,eax
   14000b21e:	jns    0x14000b228
   14000b220:	mov    ecx,eax
   14000b222:	call   0x140029d64
   14000b227:	nop
   14000b228:	test   r14,r14
   14000b22b:	je     0x14000b337
   14000b231:	test   r15,r15
   14000b234:	je     0x14000b337
   14000b23a:	mov    rax,QWORD PTR [rsi+0x10]
   14000b23e:	mov    rdi,QWORD PTR [rax+0x28]
   14000b242:	mov    rcx,rdi
   14000b245:	call   QWORD PTR [rip+0x2745d]        # 0x1400326a8
   14000b24b:	lea    rax,[rbp-0x41]
   14000b24f:	mov    QWORD PTR [rsp+0x20],rax
   14000b254:	lea    r9,[rbp+0x7]
   14000b258:	lea    r8,[rbp-0x59]
   14000b25c:	lea    rdx,[rbp-0x69]
   14000b260:	lea    rcx,[rsi+0x10]
   14000b264:	call   rdi
   14000b266:	test   eax,eax
   14000b268:	jns    0x14000b272
   14000b26a:	mov    ecx,eax
   14000b26c:	call   0x140029d64
   14000b271:	int3   
   14000b272:	mov    QWORD PTR [rbp-0x61],r12
   14000b276:	lea    rcx,[rbp-0x19]
   14000b27a:	call   0x140016f0c
   14000b27f:	mov    rdi,rax
   14000b282:	mov    esi,0x7
   14000b287:	mov    QWORD PTR [rbp-0x21],rsi
   14000b28b:	mov    QWORD PTR [rbp-0x29],r12
   14000b28f:	mov    WORD PTR [rbp-0x39],r12w
   14000b294:	lea    rax,[rbp-0x39]
   14000b298:	cmp    rax,rdi
   14000b29b:	je     0x14000b2c9
   14000b29d:	mov    rdx,rdi
   14000b2a0:	lea    rcx,[rbp-0x39]
   14000b2a4:	call   0x14000db60
   14000b2a9:	mov    rcx,QWORD PTR [rbp-0x29]
   14000b2ad:	mov    rax,QWORD PTR [rdi+0x10]
   14000b2b1:	mov    QWORD PTR [rbp-0x29],rax
   14000b2b5:	mov    QWORD PTR [rdi+0x10],rcx
   14000b2b9:	mov    rcx,QWORD PTR [rbp-0x21]
   14000b2bd:	mov    rax,QWORD PTR [rdi+0x18]
   14000b2c1:	mov    QWORD PTR [rbp-0x21],rax
   14000b2c5:	mov    QWORD PTR [rdi+0x18],rcx
   14000b2c9:	cmp    QWORD PTR [rbp-0x1],0x8
   14000b2ce:	jb     0x14000b2da
   14000b2d0:	mov    rcx,QWORD PTR [rbp-0x19]
   14000b2d4:	call   QWORD PTR [rip+0x272ee]        # 0x1400325c8
   14000b2da:	mov    QWORD PTR [rbp-0x1],rsi
   14000b2de:	mov    QWORD PTR [rbp-0x9],r12
   14000b2e2:	mov    WORD PTR [rbp-0x19],r12w
   14000b2e7:	lea    r9,[rbp-0x61]
   14000b2eb:	mov    r8,r14
   14000b2ee:	mov    ecx,DWORD PTR [rbp-0x69]
   14000b2f1:	call   0x140026300
   14000b2f6:	mov    rax,QWORD PTR [rbp-0x61]
   14000b2fa:	mov    QWORD PTR [r15],rax
   14000b2fd:	cmp    QWORD PTR [rbp-0x21],0x8
   14000b302:	jb     0x14000b30e
   14000b304:	mov    rcx,QWORD PTR [rbp-0x39]
   14000b308:	call   QWORD PTR [rip+0x272ba]        # 0x1400325c8
   14000b30e:	mov    QWORD PTR [rbp-0x21],rsi
   14000b312:	mov    QWORD PTR [rbp-0x29],r12
   14000b316:	mov    WORD PTR [rbp-0x39],r12w
   14000b31b:	or     eax,0xffffffff
   14000b31e:	lock xadd DWORD PTR [rbx+0x8],eax
   14000b323:	dec    eax
   14000b325:	cmp    eax,0x80000000
   14000b32a:	jne    0x14000b377
   14000b32c:	mov    rcx,QWORD PTR [rbp-0x51]
   14000b330:	call   0x140029c90
   14000b335:	jmp    0x14000b377
   14000b337:	lea    rax,[rip+0x3fd3a]        # 0x14004b078
   14000b33e:	mov    rcx,QWORD PTR [rip+0x3fd33]        # 0x14004b078
   14000b345:	cmp    rcx,rax
   14000b348:	je     0x14000b36c
   14000b34a:	test   BYTE PTR [rcx+0x1c],0x1
   14000b34e:	je     0x14000b36c
   14000b350:	mov    edx,0xa
   14000b355:	lea    r9,[rip+0x2b404]        # 0x140036760
   14000b35c:	lea    r8,[rip+0x2906d]        # 0x1400343d0
   14000b363:	mov    rcx,QWORD PTR [rcx+0x10]
   14000b367:	call   0x1400038e0
   14000b36c:	mov    ecx,0x80070057
   14000b371:	call   0x140029d64
   14000b376:	nop
   14000b377:	mov    rcx,QWORD PTR [rbp+0x17]
   14000b37b:	xor    rcx,rsp
   14000b37e:	call   0x14002dd00
   14000b383:	add    rsp,0xc0
   14000b38a:	pop    r15
   14000b38c:	pop    r14
   14000b38e:	pop    r12
   14000b390:	pop    rdi
   14000b391:	pop    rsi
   14000b392:	pop    rbx
   14000b393:	pop    rbp
   14000b394:	ret    
   14000b395:	int3   
   14000b396:	int3   
   14000b397:	int3   
   14000b398:	int3   
   14000b399:	int3   
   14000b39a:	int3   
   14000b39b:	int3   
   14000b39c:	mov    rax,rsp
   14000b39f:	push   rbp
   14000b3a0:	push   rsi
   14000b3a1:	push   rdi
   14000b3a2:	push   r12
   14000b3a4:	push   r13
   14000b3a6:	push   r14
   14000b3a8:	push   r15
   14000b3aa:	sub    rsp,0xb0
   14000b3b1:	mov    QWORD PTR [rax-0x70],0xfffffffffffffffe
   14000b3b9:	mov    QWORD PTR [rax+0x8],rbx
   14000b3bd:	mov    rax,QWORD PTR [rip+0x3fc5c]        # 0x14004b020
   14000b3c4:	xor    rax,rsp
   14000b3c7:	mov    QWORD PTR [rsp+0xa8],rax
   14000b3cf:	mov    rdi,r9
   14000b3d2:	mov    r14,r8
   14000b3d5:	mov    r9,rdx
   14000b3d8:	mov    rsi,QWORD PTR [rsp+0x110]
   14000b3e0:	lea    rbx,[rcx+0x90]
   14000b3e7:	mov    QWORD PTR [rsp+0x70],rbx
   14000b3ec:	mov    rcx,rbx
   14000b3ef:	call   0x140029ab0
   14000b3f4:	test   eax,eax
   14000b3f6:	jns    0x14000b400
   14000b3f8:	mov    ecx,eax
   14000b3fa:	call   0x140029d64
   14000b3ff:	nop
   14000b400:	test   rdi,rdi
   14000b403:	je     0x14000b6a6
   14000b409:	test   rsi,rsi
   14000b40c:	je     0x14000b6a6
   14000b412:	mov    rax,QWORD PTR [r9]
   14000b415:	test   rax,rax
   14000b418:	je     0x14000b41f
   14000b41a:	mov    rcx,QWORD PTR [rax]
   14000b41d:	jmp    0x14000b421
   14000b41f:	xor    ecx,ecx
   14000b421:	call   0x14000b91c
   14000b426:	mov    rbp,rax
   14000b429:	mov    QWORD PTR [rdi],rax
   14000b42c:	mov    rax,QWORD PTR [r14]
   14000b42f:	test   rax,rax
   14000b432:	je     0x14000b439
   14000b434:	mov    rcx,QWORD PTR [rax]
   14000b437:	jmp    0x14000b43b
   14000b439:	xor    ecx,ecx
   14000b43b:	call   0x14000b91c
   14000b440:	mov    rdi,rax
   14000b443:	mov    QWORD PTR [rsi],rax
   14000b446:	movzx  r13d,ax
   14000b44a:	mov    r15d,eax
   14000b44d:	shr    r15d,0x10
   14000b451:	shr    rdi,0x20
   14000b455:	movzx  eax,di
   14000b458:	mov    DWORD PTR [rsp+0x60],eax
   14000b45c:	shr    edi,0x10
   14000b45f:	movzx  ecx,bp
   14000b462:	mov    DWORD PTR [rsp+0x68],ecx
   14000b466:	mov    r12d,ebp
   14000b469:	shr    r12d,0x10
   14000b46d:	mov    r14,rbp
   14000b470:	shr    r14,0x20
   14000b474:	movzx  edx,r14w
   14000b478:	mov    DWORD PTR [rsp+0x64],edx
   14000b47c:	shr    r14d,0x10
   14000b480:	mov    DWORD PTR [rsp+0x40],r13d
   14000b485:	mov    DWORD PTR [rsp+0x38],r15d
   14000b48a:	mov    DWORD PTR [rsp+0x30],eax
   14000b48e:	mov    DWORD PTR [rsp+0x28],edi
   14000b492:	mov    DWORD PTR [rsp+0x20],ecx
   14000b496:	mov    r9d,r12d
   14000b499:	mov    r8d,edx
   14000b49c:	mov    edx,r14d
   14000b49f:	lea    rcx,[rip+0x2b36a]        # 0x140036810
   14000b4a6:	call   QWORD PTR [rip+0x26e84]        # 0x140032330
   14000b4ac:	lea    rsi,[rip+0x3fbc5]        # 0x14004b078
   14000b4b3:	mov    rcx,QWORD PTR [rip+0x3fbbe]        # 0x14004b078
   14000b4ba:	cmp    rcx,rsi
   14000b4bd:	je     0x14000b501
   14000b4bf:	test   BYTE PTR [rcx+0x1c],0x2
   14000b4c3:	je     0x14000b501
   14000b4c5:	mov    edx,0x37
   14000b4ca:	mov    DWORD PTR [rsp+0x50],r13d
   14000b4cf:	mov    DWORD PTR [rsp+0x48],r15d
   14000b4d4:	mov    eax,DWORD PTR [rsp+0x60]
   14000b4d8:	mov    DWORD PTR [rsp+0x40],eax
   14000b4dc:	mov    DWORD PTR [rsp+0x38],edi
   14000b4e0:	mov    eax,DWORD PTR [rsp+0x68]
   14000b4e4:	mov    DWORD PTR [rsp+0x30],eax
   14000b4e8:	mov    DWORD PTR [rsp+0x28],r12d
   14000b4ed:	mov    eax,DWORD PTR [rsp+0x64]
   14000b4f1:	mov    DWORD PTR [rsp+0x20],eax
   14000b4f5:	mov    r9d,r14d
   14000b4f8:	mov    rcx,QWORD PTR [rcx+0x10]
   14000b4fc:	call   0x1400070b0
   14000b501:	call   0x140025df8
   14000b506:	xor    r15d,r15d
   14000b509:	test   al,al
   14000b50b:	jne    0x14000b58a
   14000b50d:	mov    DWORD PTR [rsp+0x60],r15d
   14000b512:	call   QWORD PTR [rip+0x26f38]        # 0x140032450
   14000b518:	mov    rdi,QWORD PTR [rax+0xa0]
   14000b51f:	mov    rcx,rdi
   14000b522:	call   QWORD PTR [rip+0x27180]        # 0x1400326a8
   14000b528:	lea    r8,[rsp+0x60]
   14000b52d:	xor    edx,edx
   14000b52f:	lea    rcx,[rip+0x2b39a]        # 0x1400368d0
   14000b536:	call   rdi
   14000b538:	cmp    DWORD PTR [rsp+0x60],r15d
   14000b53d:	je     0x14000b58a
   14000b53f:	mov    rcx,QWORD PTR [rip+0x3fb32]        # 0x14004b078
   14000b546:	cmp    rcx,rsi
   14000b549:	je     0x14000b566
   14000b54b:	test   BYTE PTR [rcx+0x1c],0x2
   14000b54f:	je     0x14000b566
   14000b551:	lea    edx,[r15+0x38]
   14000b555:	lea    r8,[rip+0x2b58c]        # 0x140036ae8
   14000b55c:	mov    rcx,QWORD PTR [rcx+0x10]
   14000b560:	call   0x140001f08
   14000b565:	nop
   14000b566:	or     eax,0xffffffff
   14000b569:	lock xadd DWORD PTR [rbx+0x8],eax
   14000b56e:	dec    eax
   14000b570:	cmp    eax,0x80000000
   14000b575:	jne    0x14000b6e9
   14000b57b:	mov    rcx,QWORD PTR [rsp+0x70]
   14000b580:	call   0x140029c90
   14000b585:	jmp    0x14000b6e9
   14000b58a:	movabs rax,0x2000120f70000
   14000b594:	cmp    rbp,rax
   14000b597:	jae    0x14000b566
   14000b599:	mov    edi,0x1
   14000b59e:	mov    r12d,0x20f7
   14000b5a4:	mov    r14,QWORD PTR [rip+0x3facd]        # 0x14004b078
   14000b5ab:	cmp    r14,rsi
   14000b5ae:	je     0x14000b620
   14000b5b0:	test   BYTE PTR [r14+0x1c],dil
   14000b5b4:	je     0x14000b620
   14000b5b6:	mov    rcx,rbp
   14000b5b9:	call   0x14000de00
   14000b5be:	mov    edx,eax
   14000b5c0:	call   0x14000dde0
   14000b5c5:	mov    r8d,eax
   14000b5c8:	mov    ecx,edx
   14000b5ca:	call   0x14000de0c
   14000b5cf:	movzx  ebx,ax
   14000b5d2:	call   0x14000ddf0
   14000b5d7:	movzx  r11d,ax
   14000b5db:	mov    ecx,r8d
   14000b5de:	call   0x14000de0c
   14000b5e3:	movzx  r10d,ax
   14000b5e7:	call   0x14000ddf0
   14000b5ec:	movzx  r9d,ax
   14000b5f0:	lea    edx,[rdi+0x38]
   14000b5f3:	mov    DWORD PTR [rsp+0x50],r15d
   14000b5f8:	mov    DWORD PTR [rsp+0x48],r12d
   14000b5fd:	mov    DWORD PTR [rsp+0x40],edi
   14000b601:	mov    DWORD PTR [rsp+0x38],0x2
   14000b609:	mov    DWORD PTR [rsp+0x30],ebx
   14000b60d:	mov    DWORD PTR [rsp+0x28],r11d
   14000b612:	mov    DWORD PTR [rsp+0x20],r10d
   14000b617:	mov    rcx,QWORD PTR [r14+0x10]
   14000b61b:	call   0x1400070b0
   14000b620:	mov    rcx,rbp
   14000b623:	call   0x14000de00
   14000b628:	mov    edx,eax
   14000b62a:	call   0x14000dde0
   14000b62f:	mov    r10d,eax
   14000b632:	mov    ecx,edx
   14000b634:	call   0x14000de0c
   14000b639:	movzx  r11d,ax
   14000b63d:	call   0x14000ddf0
   14000b642:	movzx  r9d,ax
   14000b646:	mov    ecx,r10d
   14000b649:	call   0x14000de0c
   14000b64e:	movzx  r8d,ax
   14000b652:	call   0x14000ddf0
   14000b657:	movzx  edx,ax
   14000b65a:	mov    DWORD PTR [rsp+0x40],r15d
   14000b65f:	mov    DWORD PTR [rsp+0x38],r12d
   14000b664:	mov    DWORD PTR [rsp+0x30],edi
   14000b668:	mov    DWORD PTR [rsp+0x28],0x2
   14000b670:	mov    DWORD PTR [rsp+0x20],r11d
   14000b675:	lea    rcx,[rip+0x2b2b4]        # 0x140036930
   14000b67c:	call   QWORD PTR [rip+0x26cae]        # 0x140032330
   14000b682:	mov    edx,edi
   14000b684:	lea    rcx,[rsp+0x80]
   14000b68c:	call   0x140002064
   14000b691:	lea    rdx,[rip+0x3daf0]        # 0x140049188
   14000b698:	lea    rcx,[rsp+0x80]
   14000b6a0:	call   0x14002e2da
   14000b6a5:	int3   
   14000b6a6:	lea    rsi,[rip+0x3f9cb]        # 0x14004b078
   14000b6ad:	mov    rcx,QWORD PTR [rip+0x3f9c4]        # 0x14004b078
   14000b6b4:	cmp    rcx,rsi
   14000b6b7:	je     0x14000b6de
   14000b6b9:	mov    edi,0x1
   14000b6be:	test   BYTE PTR [rcx+0x1c],dil
   14000b6c2:	je     0x14000b6de
   14000b6c4:	lea    edx,[rdi+0x9]
   14000b6c7:	lea    r9,[rip+0x2b0f2]        # 0x1400367c0
   14000b6ce:	lea    r8,[rip+0x28cfb]        # 0x1400343d0
   14000b6d5:	mov    rcx,QWORD PTR [rcx+0x10]
   14000b6d9:	call   0x1400038e0
   14000b6de:	mov    ecx,0x80070057
   14000b6e3:	call   0x140029d64
   14000b6e8:	nop
   14000b6e9:	mov    rcx,QWORD PTR [rsp+0xa8]
   14000b6f1:	xor    rcx,rsp
   14000b6f4:	call   0x14002dd00
   14000b6f9:	mov    rbx,QWORD PTR [rsp+0xf0]
   14000b701:	add    rsp,0xb0
   14000b708:	pop    r15
   14000b70a:	pop    r14
   14000b70c:	pop    r13
   14000b70e:	pop    r12
   14000b710:	pop    rdi
   14000b711:	pop    rsi
   14000b712:	pop    rbp
   14000b713:	ret    
   14000b714:	int3   
   14000b715:	int3   
   14000b716:	int3   
   14000b717:	int3   
   14000b718:	int3   
   14000b719:	int3   
   14000b71a:	int3   
   14000b71b:	int3   
   14000b71c:	mov    rax,rsp
   14000b71f:	push   rbp
   14000b720:	push   r12
   14000b722:	push   r14
   14000b724:	mov    rbp,rsp
   14000b727:	sub    rsp,0x60
   14000b72b:	mov    QWORD PTR [rbp-0x40],0xfffffffffffffffe
   14000b733:	mov    QWORD PTR [rax+0x10],rbx
   14000b737:	mov    QWORD PTR [rax+0x18],rsi
   14000b73b:	mov    QWORD PTR [rax+0x20],rdi
   14000b73f:	mov    r14,rdx
   14000b742:	mov    rdi,rcx
   14000b745:	and    QWORD PTR [rbp-0x18],0x0
   14000b74a:	lea    rax,[rbp-0x28]
   14000b74e:	mov    QWORD PTR [rbp-0x20],rax
   14000b752:	lea    rax,[rbp-0x28]
   14000b756:	mov    QWORD PTR [rbp-0x28],rax
   14000b75a:	lea    rbx,[rcx+0x108]
   14000b761:	mov    QWORD PTR [rbp+0x20],rbx
   14000b765:	mov    rcx,rbx
   14000b768:	call   QWORD PTR [rip+0x2699a]        # 0x140032108
   14000b76e:	nop
   14000b76f:	or     r12,0xffffffffffffffff
   14000b773:	cmp    QWORD PTR [rdi+0xe0],r14
   14000b77a:	jbe    0x14000b800
   14000b780:	lea    rax,[rbp-0x10]
   14000b784:	mov    QWORD PTR [rbp-0x38],rax
   14000b788:	and    QWORD PTR [rbp-0x30],0x0
   14000b78d:	xor    esi,esi
   14000b78f:	mov    rcx,rbx
   14000b792:	call   QWORD PTR [rip+0x26970]        # 0x140032108
   14000b798:	cmp    QWORD PTR [rdi+0xe0],rsi
   14000b79f:	je     0x14000b7c6
   14000b7a1:	lea    rdx,[rdi+0xd0]
   14000b7a8:	mov    rax,QWORD PTR [rdx]
   14000b7ab:	mov    rsi,QWORD PTR [rax+0x10]
   14000b7af:	mov    rcx,rax
   14000b7b2:	mov    rax,QWORD PTR [rax]
   14000b7b5:	mov    QWORD PTR [rdx],rax
   14000b7b8:	mov    QWORD PTR [rax+0x8],rdx
   14000b7bc:	add    QWORD PTR [rdx+0x10],r12
   14000b7c0:	call   QWORD PTR [rip+0x26e02]        # 0x1400325c8
   14000b7c6:	mov    rcx,rbx
   14000b7c9:	call   QWORD PTR [rip+0x26929]        # 0x1400320f8
   14000b7cf:	mov    ecx,0x18
   14000b7d4:	call   0x140023f10
   14000b7d9:	mov    QWORD PTR [rax+0x10],rsi
   14000b7dd:	mov    rdx,QWORD PTR [rbp-0x20]
   14000b7e1:	lea    rcx,[rbp-0x28]
   14000b7e5:	mov    QWORD PTR [rax],rcx
   14000b7e8:	mov    QWORD PTR [rax+0x8],rdx
   14000b7ec:	mov    QWORD PTR [rdx],rax
   14000b7ef:	mov    QWORD PTR [rbp-0x20],rax
   14000b7f3:	inc    QWORD PTR [rbp-0x18]
   14000b7f7:	cmp    QWORD PTR [rdi+0xe0],r14
   14000b7fe:	ja     0x14000b78d
   14000b800:	mov    rcx,rbx
   14000b803:	call   QWORD PTR [rip+0x268ef]        # 0x1400320f8
   14000b809:	jmp    0x14000b8a4
   14000b80e:	mov    rcx,QWORD PTR [rbp-0x28]
   14000b812:	mov    rdi,QWORD PTR [rcx+0x10]
   14000b816:	mov    rax,QWORD PTR [rcx]
   14000b819:	mov    QWORD PTR [rbp-0x28],rax
   14000b81d:	lea    rdx,[rbp-0x28]
   14000b821:	mov    QWORD PTR [rax+0x8],rdx
   14000b825:	dec    QWORD PTR [rbp-0x18]
   14000b829:	call   QWORD PTR [rip+0x26d99]        # 0x1400325c8
   14000b82f:	test   rdi,rdi
   14000b832:	je     0x14000b8a4
   14000b834:	lea    r8,[rdi+0x120]
   14000b83b:	jmp    0x14000b84f
   14000b83d:	lea    ecx,[rdx-0x80000000]
   14000b843:	mov    eax,edx
   14000b845:	lock cmpxchg DWORD PTR [r8+0x8],ecx
   14000b84b:	cmp    edx,eax
   14000b84d:	je     0x14000b857
   14000b84f:	mov    edx,DWORD PTR [r8+0x8]
   14000b853:	test   edx,edx
   14000b855:	jns    0x14000b83d
   14000b857:	test   edx,edx
   14000b859:	jne    0x14000b863
   14000b85b:	mov    rcx,r8
   14000b85e:	call   0x140029c90
   14000b863:	mov    rcx,rdi
   14000b866:	call   0x140011ea8
   14000b86b:	mov    eax,DWORD PTR [rdi+0x8]
   14000b86e:	cmp    eax,0x1
   14000b871:	jne    0x14000b87c
   14000b873:	mov    DWORD PTR [rdi+0x8],0x0
   14000b87a:	jmp    0x14000b88b
   14000b87c:	mov    eax,r12d
   14000b87f:	lock xadd DWORD PTR [rdi+0x8],eax
   14000b884:	add    eax,r12d
   14000b887:	test   eax,eax
   14000b889:	jg     0x14000b8a4
   14000b88b:	mov    rax,QWORD PTR [rdi]
   14000b88e:	mov    rbx,QWORD PTR [rax]
   14000b891:	mov    rcx,rbx
   14000b894:	call   QWORD PTR [rip+0x26e0e]        # 0x1400326a8
   14000b89a:	mov    edx,0x1
   14000b89f:	mov    rcx,rdi
   14000b8a2:	call   rbx
   14000b8a4:	cmp    QWORD PTR [rbp-0x18],0x0
   14000b8a9:	ja     0x14000b80e
   14000b8af:	call   QWORD PTR [rip+0x26823]        # 0x1400320d8
   14000b8b5:	mov    rcx,rax
   14000b8b8:	mov    r8,r12
   14000b8bb:	mov    rdx,r12
   14000b8be:	call   QWORD PTR [rip+0x2688c]        # 0x140032150
   14000b8c4:	nop
   14000b8c5:	cmp    QWORD PTR [rbp-0x18],0x0
   14000b8ca:	je     0x14000b8f9
   14000b8cc:	mov    rbx,QWORD PTR [rbp-0x28]
   14000b8d0:	jmp    0x14000b8f0
   14000b8d2:	mov    rcx,rbx
   14000b8d5:	mov    rbx,QWORD PTR [rbx]
   14000b8d8:	mov    rdx,QWORD PTR [rcx]
   14000b8db:	mov    rax,QWORD PTR [rcx+0x8]
   14000b8df:	mov    QWORD PTR [rax],rdx
   14000b8e2:	mov    QWORD PTR [rdx+0x8],rax
   14000b8e6:	call   QWORD PTR [rip+0x26cdc]        # 0x1400325c8
   14000b8ec:	dec    QWORD PTR [rbp-0x18]
   14000b8f0:	lea    rax,[rbp-0x28]
   14000b8f4:	cmp    rbx,rax
   14000b8f7:	jne    0x14000b8d2
   14000b8f9:	lea    r11,[rsp+0x60]
   14000b8fe:	mov    rbx,QWORD PTR [r11+0x28]
   14000b902:	mov    rsi,QWORD PTR [r11+0x30]
   14000b906:	mov    rdi,QWORD PTR [r11+0x38]
   14000b90a:	mov    rsp,r11
   14000b90d:	pop    r14
   14000b90f:	pop    r12
   14000b911:	pop    rbp
   14000b912:	ret    
   14000b913:	int3   
   14000b914:	int3   
   14000b915:	int3   
   14000b916:	int3   
   14000b917:	int3   
   14000b918:	int3   
   14000b919:	int3   
   14000b91a:	int3   
   14000b91b:	int3   
   14000b91c:	mov    rax,rsp
   14000b91f:	push   rbp
   14000b920:	lea    rbp,[rax-0x5f]
   14000b924:	sub    rsp,0xa0
   14000b92b:	mov    QWORD PTR [rbp-0x1],0xfffffffffffffffe
   14000b933:	mov    QWORD PTR [rax+0x10],rbx
   14000b937:	mov    QWORD PTR [rax+0x18],rsi
   14000b93b:	mov    QWORD PTR [rax+0x20],rdi
   14000b93f:	mov    rax,QWORD PTR [rip+0x3f6da]        # 0x14004b020
   14000b946:	xor    rax,rsp
   14000b949:	mov    QWORD PTR [rbp+0x47],rax
   14000b94d:	mov    rdi,rcx
   14000b950:	mov    DWORD PTR [rbp-0x5],0x1
   14000b957:	and    DWORD PTR [rbp-0x9],0x0
   14000b95b:	lea    r9,[rbp-0x9]
   14000b95f:	lea    r8,[rbp-0x5]
   14000b963:	mov    rdx,rcx
   14000b966:	call   0x14002abf8
   14000b96b:	mov    ebx,eax
   14000b96d:	test   eax,eax
   14000b96f:	jns    0x14000b9c2
   14000b971:	lea    rdx,[rip+0x3f700]        # 0x14004b078
   14000b978:	mov    rcx,QWORD PTR [rip+0x3f6f9]        # 0x14004b078
   14000b97f:	cmp    rcx,rdx
   14000b982:	je     0x14000b9a6
   14000b984:	test   BYTE PTR [rcx+0x1c],0x1
   14000b988:	je     0x14000b9a6
   14000b98a:	mov    edx,0x3a
   14000b98f:	mov    DWORD PTR [rsp+0x20],eax
   14000b993:	mov    r9,rdi
   14000b996:	lea    r8,[rip+0x2b14b]        # 0x140036ae8
   14000b99d:	mov    rcx,QWORD PTR [rcx+0x10]
   14000b9a1:	call   0x140007264
   14000b9a6:	mov    edx,ebx
   14000b9a8:	lea    rcx,[rbp+0xf]
   14000b9ac:	call   0x140002064
   14000b9b1:	lea    rdx,[rip+0x3d7d0]        # 0x140049188
   14000b9b8:	lea    rcx,[rbp+0xf]
   14000b9bc:	call   0x14002e2da
   14000b9c1:	int3   
   14000b9c2:	mov    ecx,DWORD PTR [rbp-0x9]
   14000b9c5:	call   0x140023f10
   14000b9ca:	mov    rsi,rax
   14000b9cd:	mov    QWORD PTR [rbp+0x7],rax
   14000b9d1:	mov    QWORD PTR [rsp+0x20],rax
   14000b9d6:	mov    r9d,DWORD PTR [rbp-0x9]
   14000b9da:	mov    rdx,rdi
   14000b9dd:	call   0x14002ad08
   14000b9e2:	mov    ebx,eax
   14000b9e4:	test   eax,eax
   14000b9e6:	jns    0x14000ba39
   14000b9e8:	lea    rdx,[rip+0x3f689]        # 0x14004b078
   14000b9ef:	mov    rcx,QWORD PTR [rip+0x3f682]        # 0x14004b078
   14000b9f6:	cmp    rcx,rdx
   14000b9f9:	je     0x14000ba1d
   14000b9fb:	test   BYTE PTR [rcx+0x1c],0x1
   14000b9ff:	je     0x14000ba1d
   14000ba01:	mov    edx,0x3b
   14000ba06:	mov    DWORD PTR [rsp+0x20],eax
   14000ba0a:	mov    r9,rdi
   14000ba0d:	lea    r8,[rip+0x2b0d4]        # 0x140036ae8
   14000ba14:	mov    rcx,QWORD PTR [rcx+0x10]
   14000ba18:	call   0x140007264
   14000ba1d:	mov    edx,ebx
   14000ba1f:	lea    rcx,[rbp+0xf]
   14000ba23:	call   0x140002064
   14000ba28:	lea    rdx,[rip+0x3d759]        # 0x140049188
   14000ba2f:	lea    rcx,[rbp+0xf]
   14000ba33:	call   0x14002e2da
   14000ba38:	int3   
   14000ba39:	mov    rdx,rsi
   14000ba3c:	lea    rcx,[rbp+0xf]
   14000ba40:	call   0x14002b1c4
   14000ba45:	mov    ebx,eax
   14000ba47:	test   eax,eax
   14000ba49:	jns    0x14000ba9c
   14000ba4b:	lea    rdx,[rip+0x3f626]        # 0x14004b078
   14000ba52:	mov    rcx,QWORD PTR [rip+0x3f61f]        # 0x14004b078
   14000ba59:	cmp    rcx,rdx
   14000ba5c:	je     0x14000ba80
   14000ba5e:	test   BYTE PTR [rcx+0x1c],0x1
   14000ba62:	je     0x14000ba80
   14000ba64:	mov    edx,0x3c
   14000ba69:	mov    DWORD PTR [rsp+0x20],eax
   14000ba6d:	mov    r9,rdi
   14000ba70:	lea    r8,[rip+0x2b071]        # 0x140036ae8
   14000ba77:	mov    rcx,QWORD PTR [rcx+0x10]
   14000ba7b:	call   0x140007264
   14000ba80:	mov    edx,ebx
   14000ba82:	lea    rcx,[rbp+0xf]
   14000ba86:	call   0x140002064
   14000ba8b:	lea    rdx,[rip+0x3d6f6]        # 0x140049188
   14000ba92:	lea    rcx,[rbp+0xf]
   14000ba96:	call   0x14002e2da
   14000ba9b:	int3   
   14000ba9c:	mov    eax,DWORD PTR [rbp+0x17]
   14000ba9f:	shl    rax,0x20
   14000baa3:	mov    ebx,DWORD PTR [rbp+0x1b]
   14000baa6:	add    rbx,rax
   14000baa9:	lea    rdx,[rip+0x3f5c8]        # 0x14004b078
   14000bab0:	mov    rcx,QWORD PTR [rip+0x3f5c1]        # 0x14004b078
   14000bab7:	cmp    rcx,rdx
   14000baba:	je     0x14000bafc
   14000babc:	test   BYTE PTR [rcx+0x1c],0x4
   14000bac0:	je     0x14000bafc
   14000bac2:	mov    r10,rbx
   14000bac5:	shr    r10,0x20
   14000bac9:	movzx  r8d,bx
   14000bacd:	mov    r9d,ebx
   14000bad0:	shr    r9d,0x10
   14000bad4:	movzx  edx,r10w
   14000bad8:	shr    r10d,0x10
   14000badc:	mov    DWORD PTR [rsp+0x38],r8d
   14000bae1:	mov    DWORD PTR [rsp+0x30],r9d
   14000bae6:	mov    DWORD PTR [rsp+0x28],edx
   14000baea:	mov    DWORD PTR [rsp+0x20],r10d
   14000baef:	mov    r9,rdi
   14000baf2:	mov    rcx,QWORD PTR [rcx+0x10]
   14000baf6:	call   0x1400072f8
   14000bafb:	nop
   14000bafc:	mov    rcx,rsi
   14000baff:	call   QWORD PTR [rip+0x26ac3]        # 0x1400325c8
   14000bb05:	mov    rax,rbx
   14000bb08:	mov    rcx,QWORD PTR [rbp+0x47]
   14000bb0c:	xor    rcx,rsp
   14000bb0f:	call   0x14002dd00
   14000bb14:	lea    r11,[rsp+0xa0]
   14000bb1c:	mov    rbx,QWORD PTR [r11+0x18]
   14000bb20:	mov    rsi,QWORD PTR [r11+0x20]
   14000bb24:	mov    rdi,QWORD PTR [r11+0x28]
   14000bb28:	mov    rsp,r11
   14000bb2b:	pop    rbp
   14000bb2c:	ret    
   14000bb2d:	int3   
   14000bb2e:	int3   
   14000bb2f:	int3   
   14000bb30:	int3   
   14000bb31:	int3   
   14000bb32:	int3   
   14000bb33:	int3   
   14000bb34:	mov    rax,rsp
   14000bb37:	mov    QWORD PTR [rax+0x8],rcx
   14000bb3b:	push   rdi
   14000bb3c:	sub    rsp,0x30
   14000bb40:	mov    QWORD PTR [rax-0x10],0xfffffffffffffffe
   14000bb48:	mov    QWORD PTR [rax+0x18],rbx
   14000bb4c:	mov    rbx,rcx
   14000bb4f:	and    DWORD PTR [rax-0x18],0x0
   14000bb53:	mov    rax,QWORD PTR [rdx]
   14000bb56:	mov    QWORD PTR [rcx],rax
   14000bb59:	test   rax,rax
   14000bb5c:	je     0x14000bb62
   14000bb5e:	lock inc DWORD PTR [rax+0x10]
   14000bb62:	mov    DWORD PTR [rsp+0x20],0x1
   14000bb6a:	call   0x14000bc84
   14000bb6f:	mov    ecx,0x18
   14000bb74:	call   0x140023f10
   14000bb79:	mov    rdi,rax
   14000bb7c:	mov    QWORD PTR [rsp+0x48],rax
   14000bb81:	and    QWORD PTR [rax+0x8],0x0
   14000bb86:	mov    DWORD PTR [rax+0x10],0x1
   14000bb8d:	lea    rcx,[rip+0x29cd4]        # 0x140035868
   14000bb94:	call   QWORD PTR [rip+0x267c6]        # 0x140032360
   14000bb9a:	mov    QWORD PTR [rdi],rax
   14000bb9d:	test   rax,rax
   14000bba0:	jne    0x14000bba8
   14000bba2:	call   0x14000203c
   14000bba7:	nop
   14000bba8:	mov    QWORD PTR [rsp+0x48],rdi
   14000bbad:	lea    rdx,[rsp+0x48]
   14000bbb2:	mov    rcx,rbx
   14000bbb5:	call   0x14000dd38
   14000bbba:	nop
   14000bbbb:	lea    rcx,[rsp+0x48]
   14000bbc0:	call   0x14000de2c
   14000bbc5:	mov    rax,rbx
   14000bbc8:	mov    rbx,QWORD PTR [rsp+0x50]
   14000bbcd:	add    rsp,0x30
   14000bbd1:	pop    rdi
   14000bbd2:	ret    
   14000bbd3:	int3   
   14000bbd4:	int3   
   14000bbd5:	int3   
   14000bbd6:	int3   
   14000bbd7:	int3   
   14000bbd8:	int3   
   14000bbd9:	int3   
   14000bbda:	int3   
   14000bbdb:	int3   
   14000bbdc:	mov    rax,rsp
   14000bbdf:	mov    QWORD PTR [rax+0x8],rcx
   14000bbe3:	push   rdi
   14000bbe4:	sub    rsp,0x30
   14000bbe8:	mov    QWORD PTR [rax-0x10],0xfffffffffffffffe
   14000bbf0:	mov    QWORD PTR [rax+0x18],rbx
   14000bbf4:	mov    rbx,rcx
   14000bbf7:	and    DWORD PTR [rax-0x18],0x0
   14000bbfb:	mov    rax,QWORD PTR [rdx]
   14000bbfe:	mov    QWORD PTR [rcx],rax
   14000bc01:	test   rax,rax
   14000bc04:	je     0x14000bc0a
   14000bc06:	lock inc DWORD PTR [rax+0x10]
   14000bc0a:	mov    DWORD PTR [rsp+0x20],0x1
   14000bc12:	call   0x14000bc84
   14000bc17:	mov    ecx,0x18
   14000bc1c:	call   0x140023f10
   14000bc21:	mov    rdi,rax
   14000bc24:	mov    QWORD PTR [rsp+0x48],rax
   14000bc29:	and    QWORD PTR [rax+0x8],0x0
   14000bc2e:	mov    DWORD PTR [rax+0x10],0x1
   14000bc35:	lea    rcx,[rip+0x29c4c]        # 0x140035888
   14000bc3c:	call   QWORD PTR [rip+0x2671e]        # 0x140032360
   14000bc42:	mov    QWORD PTR [rdi],rax
   14000bc45:	test   rax,rax
   14000bc48:	jne    0x14000bc50
   14000bc4a:	call   0x14000203c
   14000bc4f:	nop
   14000bc50:	mov    QWORD PTR [rsp+0x48],rdi
   14000bc55:	lea    rdx,[rsp+0x48]
   14000bc5a:	mov    rcx,rbx
   14000bc5d:	call   0x14000dd38
   14000bc62:	nop
   14000bc63:	lea    rcx,[rsp+0x48]
   14000bc68:	call   0x14000de2c
   14000bc6d:	mov    rax,rbx
   14000bc70:	mov    rbx,QWORD PTR [rsp+0x50]
   14000bc75:	add    rsp,0x30
   14000bc79:	pop    rdi
   14000bc7a:	ret    
   14000bc7b:	int3   
   14000bc7c:	int3   
   14000bc7d:	int3   
   14000bc7e:	int3   
   14000bc7f:	int3   
   14000bc80:	int3   
   14000bc81:	int3   
   14000bc82:	int3   
   14000bc83:	int3   
   14000bc84:	rex push rdi
   14000bc86:	sub    rsp,0x30
   14000bc8a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000bc93:	mov    QWORD PTR [rsp+0x48],rbx
   14000bc98:	mov    rdi,rcx
   14000bc9b:	mov    rax,QWORD PTR [rcx]
   14000bc9e:	test   rax,rax
   14000bca1:	je     0x14000bcb3
   14000bca3:	mov    rcx,QWORD PTR [rax]
   14000bca6:	test   rcx,rcx
   14000bca9:	je     0x14000bcb3
   14000bcab:	call   QWORD PTR [rip+0x266bf]        # 0x140032370
   14000bcb1:	jmp    0x14000bcb5
   14000bcb3:	xor    eax,eax
   14000bcb5:	test   eax,eax
   14000bcb7:	je     0x14000bd42
   14000bcbd:	mov    rax,QWORD PTR [rdi]
   14000bcc0:	test   rax,rax
   14000bcc3:	je     0x14000bcca
   14000bcc5:	mov    rbx,QWORD PTR [rax]
   14000bcc8:	jmp    0x14000bccc
   14000bcca:	xor    ebx,ebx
   14000bccc:	test   rax,rax
   14000bccf:	je     0x14000bce1
   14000bcd1:	mov    rcx,QWORD PTR [rax]
   14000bcd4:	test   rcx,rcx
   14000bcd7:	je     0x14000bce1
   14000bcd9:	call   QWORD PTR [rip+0x26691]        # 0x140032370
   14000bcdf:	jmp    0x14000bce3
   14000bce1:	xor    eax,eax
   14000bce3:	dec    eax
   14000bce5:	cmp    WORD PTR [rbx+rax*2],0x5c
   14000bcea:	je     0x14000bd42
   14000bcec:	mov    ecx,0x18
   14000bcf1:	call   0x140023f10
   14000bcf6:	mov    rbx,rax
   14000bcf9:	mov    QWORD PTR [rsp+0x40],rax
   14000bcfe:	and    QWORD PTR [rax+0x8],0x0
   14000bd03:	mov    DWORD PTR [rax+0x10],0x1
   14000bd0a:	lea    rcx,[rip+0x2acc3]        # 0x1400369d4
   14000bd11:	call   QWORD PTR [rip+0x26649]        # 0x140032360
   14000bd17:	mov    QWORD PTR [rbx],rax
   14000bd1a:	test   rax,rax
   14000bd1d:	jne    0x14000bd25
   14000bd1f:	call   0x14000203c
   14000bd24:	nop
   14000bd25:	mov    QWORD PTR [rsp+0x40],rbx
   14000bd2a:	lea    rdx,[rsp+0x40]
   14000bd2f:	mov    rcx,rdi
   14000bd32:	call   0x14000dd38
   14000bd37:	nop
   14000bd38:	lea    rcx,[rsp+0x40]
   14000bd3d:	call   0x14000de2c
   14000bd42:	mov    rbx,QWORD PTR [rsp+0x48]
   14000bd47:	add    rsp,0x30
   14000bd4b:	pop    rdi
   14000bd4c:	ret    
   14000bd4d:	int3   
   14000bd4e:	int3   
   14000bd4f:	int3   
   14000bd50:	int3   
   14000bd51:	int3   
   14000bd52:	int3   
   14000bd53:	int3   
   14000bd54:	mov    rax,rsp
   14000bd57:	push   r12
   14000bd59:	push   r14
   14000bd5b:	push   r15
   14000bd5d:	sub    rsp,0xc0
   14000bd64:	mov    QWORD PTR [rax-0x30],0xfffffffffffffffe
   14000bd6c:	mov    QWORD PTR [rax+0x10],rbx
   14000bd70:	mov    QWORD PTR [rax+0x18],rsi
   14000bd74:	mov    QWORD PTR [rax+0x20],rdi
   14000bd78:	mov    r14d,r9d
   14000bd7b:	mov    r15,r8
   14000bd7e:	mov    r12d,edx
   14000bd81:	mov    rsi,rcx
   14000bd84:	xor    ebx,ebx
   14000bd86:	mov    QWORD PTR [rax-0x38],rbx
   14000bd8a:	add    rcx,0x90
   14000bd91:	call   0x140029ab0
   14000bd96:	mov    edi,eax
   14000bd98:	test   eax,eax
   14000bd9a:	js     0x14000bda9
   14000bd9c:	mov    rbx,rcx
   14000bd9f:	mov    QWORD PTR [rsp+0xa0],rcx
   14000bda7:	xor    edi,edi
   14000bda9:	test   edi,edi
   14000bdab:	jns    0x14000bdd8
   14000bdad:	test   rbx,rbx
   14000bdb0:	je     0x14000bdd1
   14000bdb2:	or     ecx,0xffffffff
   14000bdb5:	lock xadd DWORD PTR [rbx+0x8],ecx
   14000bdba:	dec    ecx
   14000bdbc:	cmp    ecx,0x80000000
   14000bdc2:	jne    0x14000bdd1
   14000bdc4:	mov    rcx,QWORD PTR [rsp+0xa0]
   14000bdcc:	call   0x140029c90
   14000bdd1:	mov    eax,edi
   14000bdd3:	jmp    0x14000bf3a
   14000bdd8:	mov    rsi,QWORD PTR [rsi+0x280]
   14000bddf:	mov    rax,QWORD PTR [rsi]
   14000bde2:	mov    rdi,QWORD PTR [rax+0x10]
   14000bde6:	mov    rcx,rdi
   14000bde9:	call   QWORD PTR [rip+0x268b9]        # 0x1400326a8
   14000bdef:	mov    eax,DWORD PTR [rsp+0x178]
   14000bdf6:	mov    DWORD PTR [rsp+0x98],eax
   14000bdfd:	mov    eax,DWORD PTR [rsp+0x170]
   14000be04:	mov    DWORD PTR [rsp+0x90],eax
   14000be0b:	mov    rax,QWORD PTR [rsp+0x168]
   14000be13:	mov    QWORD PTR [rsp+0x88],rax
   14000be1b:	mov    rax,QWORD PTR [rsp+0x160]
   14000be23:	mov    QWORD PTR [rsp+0x80],rax
   14000be2b:	mov    rax,QWORD PTR [rsp+0x158]
   14000be33:	mov    QWORD PTR [rsp+0x78],rax
   14000be38:	mov    eax,DWORD PTR [rsp+0x150]
   14000be3f:	mov    DWORD PTR [rsp+0x70],eax
   14000be43:	mov    rax,QWORD PTR [rsp+0x148]
   14000be4b:	mov    QWORD PTR [rsp+0x68],rax
   14000be50:	mov    rax,QWORD PTR [rsp+0x140]
   14000be58:	mov    QWORD PTR [rsp+0x60],rax
   14000be5d:	mov    eax,DWORD PTR [rsp+0x138]
   14000be64:	mov    DWORD PTR [rsp+0x58],eax
   14000be68:	mov    rax,QWORD PTR [rsp+0x130]
   14000be70:	mov    QWORD PTR [rsp+0x50],rax
   14000be75:	mov    rax,QWORD PTR [rsp+0x128]
   14000be7d:	mov    QWORD PTR [rsp+0x48],rax
   14000be82:	movzx  eax,WORD PTR [rsp+0x120]
   14000be8a:	mov    WORD PTR [rsp+0x40],ax
   14000be8f:	mov    rax,QWORD PTR [rsp+0x118]
   14000be97:	mov    QWORD PTR [rsp+0x38],rax
   14000be9c:	movzx  eax,WORD PTR [rsp+0x110]
   14000bea4:	mov    WORD PTR [rsp+0x30],ax
   14000bea9:	mov    rax,QWORD PTR [rsp+0x108]
   14000beb1:	mov    QWORD PTR [rsp+0x28],rax
   14000beb6:	mov    eax,DWORD PTR [rsp+0x100]
   14000bebd:	mov    DWORD PTR [rsp+0x20],eax
   14000bec1:	mov    r9d,r14d
   14000bec4:	mov    r8,r15
   14000bec7:	mov    edx,r12d
   14000beca:	mov    rcx,rsi
   14000becd:	call   rdi
   14000becf:	nop
   14000bed0:	jmp    0x14000bf15
   14000bed2:	mov    ebx,DWORD PTR [rsp+0xe0]
   14000bed9:	test   ebx,ebx
   14000bedb:	jns    0x14000bf0d
   14000bedd:	mov    rcx,QWORD PTR [rsp+0xa0]
   14000bee5:	test   rcx,rcx
   14000bee8:	je     0x14000bf09
   14000beea:	or     edx,0xffffffff
   14000beed:	lock xadd DWORD PTR [rcx+0x8],edx
   14000bef2:	dec    edx
   14000bef4:	cmp    edx,0x80000000
   14000befa:	jne    0x14000bf09
   14000befc:	mov    rcx,QWORD PTR [rsp+0xa0]
   14000bf04:	call   0x140029c90
   14000bf09:	mov    eax,ebx
   14000bf0b:	jmp    0x14000bf3a
   14000bf0d:	mov    rbx,QWORD PTR [rsp+0xa0]
   14000bf15:	test   rbx,rbx
   14000bf18:	je     0x14000bf38
   14000bf1a:	or     eax,0xffffffff
   14000bf1d:	lock xadd DWORD PTR [rbx+0x8],eax
   14000bf22:	dec    eax
   14000bf24:	cmp    eax,0x80000000
   14000bf29:	jne    0x14000bf38
   14000bf2b:	mov    rcx,QWORD PTR [rsp+0xa0]
   14000bf33:	call   0x140029c90
   14000bf38:	xor    eax,eax
   14000bf3a:	lea    r11,[rsp+0xc0]
   14000bf42:	mov    rbx,QWORD PTR [r11+0x28]
   14000bf46:	mov    rsi,QWORD PTR [r11+0x30]
   14000bf4a:	mov    rdi,QWORD PTR [r11+0x38]
   14000bf4e:	mov    rsp,r11
   14000bf51:	pop    r15
   14000bf53:	pop    r14
   14000bf55:	pop    r12
   14000bf57:	ret    
   14000bf58:	int3   
   14000bf59:	int3   
   14000bf5a:	int3   
   14000bf5b:	int3   
   14000bf5c:	int3   
   14000bf5d:	int3   
   14000bf5e:	int3   
   14000bf5f:	int3   
   14000bf60:	mov    rax,rsp
   14000bf63:	push   rdi
   14000bf64:	sub    rsp,0x50
   14000bf68:	mov    QWORD PTR [rax-0x20],0xfffffffffffffffe
   14000bf70:	mov    QWORD PTR [rax+0x10],rbx
   14000bf74:	mov    QWORD PTR [rax+0x18],rsi
   14000bf78:	mov    r11d,r8d
   14000bf7b:	mov    esi,edx
   14000bf7d:	mov    r10,rcx
   14000bf80:	xor    ebx,ebx
   14000bf82:	mov    QWORD PTR [rax-0x28],rbx
   14000bf86:	add    rcx,0x90
   14000bf8d:	call   0x140029ab0
   14000bf92:	mov    edi,eax
   14000bf94:	test   eax,eax
   14000bf96:	js     0x14000bfa2
   14000bf98:	mov    rbx,rcx
   14000bf9b:	mov    QWORD PTR [rsp+0x30],rcx
   14000bfa0:	xor    edi,edi
   14000bfa2:	test   edi,edi
   14000bfa4:	jns    0x14000bfcb
   14000bfa6:	test   rbx,rbx
   14000bfa9:	je     0x14000bfc7
   14000bfab:	or     ecx,0xffffffff
   14000bfae:	lock xadd DWORD PTR [rbx+0x8],ecx
   14000bfb3:	dec    ecx
   14000bfb5:	cmp    ecx,0x80000000
   14000bfbb:	jne    0x14000bfc7
   14000bfbd:	mov    rcx,QWORD PTR [rsp+0x30]
   14000bfc2:	call   0x140029c90
   14000bfc7:	mov    eax,edi
   14000bfc9:	jmp    0x14000c043
   14000bfcb:	lea    rcx,[r10+0x200]
   14000bfd2:	mov    eax,DWORD PTR [rsp+0x80]
   14000bfd9:	mov    DWORD PTR [rsp+0x20],eax
   14000bfdd:	mov    r8d,r11d
   14000bfe0:	mov    edx,esi
   14000bfe2:	call   0x140015f84
   14000bfe7:	nop
   14000bfe8:	jmp    0x14000c021
   14000bfea:	mov    ebx,DWORD PTR [rsp+0x60]
   14000bfee:	test   ebx,ebx
   14000bff0:	jns    0x14000c01c
   14000bff2:	mov    rcx,QWORD PTR [rsp+0x30]
   14000bff7:	test   rcx,rcx
   14000bffa:	je     0x14000c018
   14000bffc:	or     edx,0xffffffff
   14000bfff:	lock xadd DWORD PTR [rcx+0x8],edx
   14000c004:	dec    edx
   14000c006:	cmp    edx,0x80000000
   14000c00c:	jne    0x14000c018
   14000c00e:	mov    rcx,QWORD PTR [rsp+0x30]
   14000c013:	call   0x140029c90
   14000c018:	mov    eax,ebx
   14000c01a:	jmp    0x14000c043
   14000c01c:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c021:	test   rbx,rbx
   14000c024:	je     0x14000c041
   14000c026:	or     eax,0xffffffff
   14000c029:	lock xadd DWORD PTR [rbx+0x8],eax
   14000c02e:	dec    eax
   14000c030:	cmp    eax,0x80000000
   14000c035:	jne    0x14000c041
   14000c037:	mov    rcx,QWORD PTR [rsp+0x30]
   14000c03c:	call   0x140029c90
   14000c041:	xor    eax,eax
   14000c043:	mov    rbx,QWORD PTR [rsp+0x68]
   14000c048:	mov    rsi,QWORD PTR [rsp+0x70]
   14000c04d:	add    rsp,0x50
   14000c051:	pop    rdi
   14000c052:	ret    
   14000c053:	int3   
   14000c054:	int3   
   14000c055:	int3   
   14000c056:	int3   
   14000c057:	int3   
   14000c058:	int3   
   14000c059:	int3   
   14000c05a:	int3   
   14000c05b:	int3   
   14000c05c:	rex push rbp
   14000c05e:	push   rbx
   14000c05f:	push   rsi
   14000c060:	push   rdi
   14000c061:	push   r12
   14000c063:	push   r13
   14000c065:	push   r14
   14000c067:	push   r15
   14000c069:	lea    rbp,[rsp-0xf]
   14000c06e:	sub    rsp,0x88
   14000c075:	mov    QWORD PTR [rbp-0x19],0xfffffffffffffffe
   14000c07d:	mov    rax,QWORD PTR [rip+0x3ef9c]        # 0x14004b020
   14000c084:	xor    rax,rsp
   14000c087:	mov    QWORD PTR [rbp-0x1],rax
   14000c08b:	mov    r12,r9
   14000c08e:	mov    QWORD PTR [rbp-0x29],r8
   14000c092:	mov    QWORD PTR [rbp-0x31],rdx
   14000c096:	mov    rsi,rcx
   14000c099:	mov    r14,QWORD PTR [rbp+0x77]
   14000c09d:	mov    QWORD PTR [rbp-0x21],r14
   14000c0a1:	mov    r13,QWORD PTR [rbp+0x7f]
   14000c0a5:	mov    rdi,QWORD PTR [r9+0x8]
   14000c0a9:	mov    rbx,QWORD PTR [r9]
   14000c0ac:	xor    r15d,r15d
   14000c0af:	jmp    0x14000c0d5
   14000c0b1:	cmp    QWORD PTR [rbx+0x18],0x8
   14000c0b6:	jb     0x14000c0c1
   14000c0b8:	mov    rcx,QWORD PTR [rbx]
   14000c0bb:	call   QWORD PTR [rip+0x26507]        # 0x1400325c8
   14000c0c1:	mov    QWORD PTR [rbx+0x18],0x7
   14000c0c9:	mov    QWORD PTR [rbx+0x10],r15
   14000c0cd:	mov    WORD PTR [rbx],r15w
   14000c0d1:	add    rbx,0x20
   14000c0d5:	cmp    rbx,rdi
   14000c0d8:	jne    0x14000c0b1
   14000c0da:	mov    rax,QWORD PTR [r12]
   14000c0de:	mov    QWORD PTR [r12+0x8],rax
   14000c0e3:	mov    rax,QWORD PTR [r14]
   14000c0e6:	mov    QWORD PTR [r14+0x8],rax
   14000c0ea:	mov    rdi,QWORD PTR [r13+0x8]
   14000c0ee:	mov    rbx,QWORD PTR [r13+0x0]
   14000c0f2:	jmp    0x14000c118
   14000c0f4:	cmp    QWORD PTR [rbx+0x18],0x8
   14000c0f9:	jb     0x14000c104
   14000c0fb:	mov    rcx,QWORD PTR [rbx]
   14000c0fe:	call   QWORD PTR [rip+0x264c4]        # 0x1400325c8
   14000c104:	mov    QWORD PTR [rbx+0x18],0x7
   14000c10c:	mov    QWORD PTR [rbx+0x10],r15
   14000c110:	mov    WORD PTR [rbx],r15w
   14000c114:	add    rbx,0x20
   14000c118:	cmp    rbx,rdi
   14000c11b:	jne    0x14000c0f4
   14000c11d:	mov    rax,QWORD PTR [r13+0x0]
   14000c121:	mov    QWORD PTR [r13+0x8],rax
   14000c125:	mov    QWORD PTR [rbp-0x39],r15
   14000c129:	mov    rax,QWORD PTR [rsi]
   14000c12c:	mov    rbx,QWORD PTR [rax+0x18]
   14000c130:	mov    rcx,rbx
   14000c133:	call   QWORD PTR [rip+0x2656f]        # 0x1400326a8
   14000c139:	lea    rdx,[rbp-0x39]
   14000c13d:	mov    rcx,rsi
   14000c140:	call   rbx
   14000c142:	test   eax,eax
   14000c144:	jns    0x14000c14e
   14000c146:	mov    ecx,eax
   14000c148:	call   0x140029d64
   14000c14d:	int3   
   14000c14e:	mov    r14b,r15b
   14000c151:	and    DWORD PTR [rbp-0x59],0x0
   14000c155:	mov    rbx,QWORD PTR [rbp-0x39]
   14000c159:	mov    rax,QWORD PTR [rbx]
   14000c15c:	mov    rdi,QWORD PTR [rax+0x18]
   14000c160:	mov    rcx,rdi
   14000c163:	call   QWORD PTR [rip+0x2653f]        # 0x1400326a8
   14000c169:	lea    rdx,[rbp-0x59]
   14000c16d:	mov    rcx,rbx
   14000c170:	call   rdi
   14000c172:	xor    edi,edi
   14000c174:	test   eax,eax
   14000c176:	jns    0x14000c180
   14000c178:	mov    ecx,eax
   14000c17a:	call   0x140029d64
   14000c17f:	int3   
   14000c180:	mov    esi,edi
   14000c182:	cmp    DWORD PTR [rbp-0x59],edi
   14000c185:	jbe    0x14000c468
   14000c18b:	mov    QWORD PTR [rbp-0x49],rdi
   14000c18f:	mov    rbx,QWORD PTR [rbp-0x39]
   14000c193:	mov    rax,QWORD PTR [rbx]
   14000c196:	mov    rdi,QWORD PTR [rax+0x20]
   14000c19a:	mov    rcx,rdi
   14000c19d:	call   QWORD PTR [rip+0x26505]        # 0x1400326a8
   14000c1a3:	lea    r8,[rbp-0x49]
   14000c1a7:	mov    edx,esi
   14000c1a9:	mov    rcx,rbx
   14000c1ac:	call   rdi
   14000c1ae:	test   eax,eax
   14000c1b0:	js     0x14000c460
   14000c1b6:	and    DWORD PTR [rbp-0x11],0x0
   14000c1ba:	xor    eax,eax
   14000c1bc:	mov    QWORD PTR [rbp-0xd],rax
   14000c1c0:	mov    DWORD PTR [rbp-0x5],eax
   14000c1c3:	mov    DWORD PTR [rbp-0x41],0x4
   14000c1ca:	mov    rbx,QWORD PTR [rbp-0x49]
   14000c1ce:	mov    rax,QWORD PTR [rbx]
   14000c1d1:	mov    rdi,QWORD PTR [rax+0x18]
   14000c1d5:	mov    rcx,rdi
   14000c1d8:	call   QWORD PTR [rip+0x264ca]        # 0x1400326a8
   14000c1de:	lea    rdx,[rbp-0x11]
   14000c1e2:	mov    rcx,rbx
   14000c1e5:	call   rdi
   14000c1e7:	xor    edi,edi
   14000c1e9:	test   eax,eax
   14000c1eb:	js     0x14000c458
   14000c1f1:	lea    r8,[rbp-0x41]
   14000c1f5:	lea    rdx,[rbp-0x11]
   14000c1f9:	mov    rcx,QWORD PTR [rbp-0x29]
   14000c1fd:	call   0x1400144a8
   14000c202:	test   al,al
   14000c204:	je     0x14000c37c
   14000c20a:	cmp    DWORD PTR [rbp-0x41],0x1
   14000c20e:	ja     0x14000c37c
   14000c214:	mov    rcx,QWORD PTR [rip+0x3ee5d]        # 0x14004b078
   14000c21b:	lea    rax,[rip+0x3ee56]        # 0x14004b078
   14000c222:	cmp    rcx,rax
   14000c225:	je     0x14000c244
   14000c227:	test   BYTE PTR [rcx+0x1c],0x4
   14000c22b:	je     0x14000c244
   14000c22d:	lea    edx,[rdi+0x42]
   14000c230:	lea    r9,[rbp-0x11]
   14000c234:	lea    r8,[rip+0x2a8ad]        # 0x140036ae8
   14000c23b:	mov    rcx,QWORD PTR [rcx+0x10]
   14000c23f:	call   0x14000756c
   14000c244:	mov    QWORD PTR [rbp-0x51],rdi
   14000c248:	mov    rbx,QWORD PTR [rbp-0x49]
   14000c24c:	mov    rax,QWORD PTR [rbx]
   14000c24f:	mov    rdi,QWORD PTR [rax]
   14000c252:	mov    rcx,rdi
   14000c255:	call   QWORD PTR [rip+0x2644d]        # 0x1400326a8
   14000c25b:	lea    r8,[rbp-0x51]
   14000c25f:	lea    rdx,[rip+0x2a7e2]        # 0x140036a48
   14000c266:	mov    rcx,rbx
   14000c269:	call   rdi
   14000c26b:	xor    edi,edi
   14000c26d:	test   eax,eax
   14000c26f:	js     0x14000c450
   14000c275:	mov    rbx,QWORD PTR [rbp-0x51]
   14000c279:	test   rbx,rbx
   14000c27c:	je     0x14000c445
   14000c282:	test   r14b,r14b
   14000c285:	jne    0x14000c2e1
   14000c287:	mov    rdx,r12
   14000c28a:	mov    rcx,rbx
   14000c28d:	call   0x14000c4bc
   14000c292:	mov    rax,QWORD PTR [r12+0x8]
   14000c297:	cmp    QWORD PTR [r12],rax
   14000c29b:	jne    0x14000c2dd
   14000c29d:	mov    rcx,QWORD PTR [rip+0x3edd4]        # 0x14004b078
   14000c2a4:	lea    rax,[rip+0x3edcd]        # 0x14004b078
   14000c2ab:	cmp    rcx,rax
   14000c2ae:	je     0x14000c2d4
   14000c2b0:	test   BYTE PTR [rcx+0x1c],0x4
   14000c2b4:	je     0x14000c2d4
   14000c2b6:	lea    edx,[rdi+0x43]
   14000c2b9:	lea    r9,[rbp-0x11]
   14000c2bd:	lea    r8,[rip+0x2a824]        # 0x140036ae8
   14000c2c4:	mov    rcx,QWORD PTR [rcx+0x10]
   14000c2c8:	call   0x14000756c
   14000c2cd:	mov    rcx,QWORD PTR [rip+0x3eda4]        # 0x14004b078
   14000c2d4:	mov    r14b,0x1
   14000c2d7:	mov    rbx,QWORD PTR [rbp-0x51]
   14000c2db:	jmp    0x14000c2e8
   14000c2dd:	mov    rbx,QWORD PTR [rbp-0x51]
   14000c2e1:	mov    rcx,QWORD PTR [rip+0x3ed90]        # 0x14004b078
   14000c2e8:	test   r15b,r15b
   14000c2eb:	jne    0x14000c350
   14000c2ed:	mov    rdi,QWORD PTR [rbp-0x21]
   14000c2f1:	mov    rdx,rdi
   14000c2f4:	mov    rcx,rbx
   14000c2f7:	call   0x14000c848
   14000c2fc:	mov    rax,QWORD PTR [rdi+0x8]
   14000c300:	cmp    QWORD PTR [rdi],rax
   14000c303:	jne    0x14000c343
   14000c305:	mov    rcx,QWORD PTR [rip+0x3ed6c]        # 0x14004b078
   14000c30c:	lea    rax,[rip+0x3ed65]        # 0x14004b078
   14000c313:	cmp    rcx,rax
   14000c316:	je     0x14000c33e
   14000c318:	test   BYTE PTR [rcx+0x1c],0x4
   14000c31c:	je     0x14000c33e
   14000c31e:	mov    edx,0x44
   14000c323:	lea    r9,[rbp-0x11]
   14000c327:	lea    r8,[rip+0x2a7ba]        # 0x140036ae8
   14000c32e:	mov    rcx,QWORD PTR [rcx+0x10]
   14000c332:	call   0x14000756c
   14000c337:	mov    rcx,QWORD PTR [rip+0x3ed3a]        # 0x14004b078
   14000c33e:	mov    r15b,0x1
   14000c341:	jmp    0x14000c34a
   14000c343:	mov    rcx,QWORD PTR [rip+0x3ed2e]        # 0x14004b078
   14000c34a:	xor    edi,edi
   14000c34c:	mov    rbx,QWORD PTR [rbp-0x51]
   14000c350:	test   r14b,r14b
   14000c353:	je     0x14000c35e
   14000c355:	test   r15b,r15b
   14000c358:	jne    0x14000c3df
   14000c35e:	test   rbx,rbx
   14000c361:	je     0x14000c3af
   14000c363:	mov    rax,QWORD PTR [rbx]
   14000c366:	mov    rdi,QWORD PTR [rax+0x10]
   14000c36a:	mov    rcx,rdi
   14000c36d:	call   QWORD PTR [rip+0x26335]        # 0x1400326a8
   14000c373:	mov    rcx,rbx
   14000c376:	call   rdi
   14000c378:	xor    edi,edi
   14000c37a:	jmp    0x14000c3af
   14000c37c:	mov    rcx,QWORD PTR [rip+0x3ecf5]        # 0x14004b078
   14000c383:	lea    rax,[rip+0x3ecee]        # 0x14004b078
   14000c38a:	cmp    rcx,rax
   14000c38d:	je     0x14000c3af
   14000c38f:	test   BYTE PTR [rcx+0x1c],0x4
   14000c393:	je     0x14000c3af
   14000c395:	mov    edx,0x41
   14000c39a:	lea    r9,[rbp-0x11]
   14000c39e:	lea    r8,[rip+0x2a743]        # 0x140036ae8
   14000c3a5:	mov    rcx,QWORD PTR [rcx+0x10]
   14000c3a9:	call   0x14000756c
   14000c3ae:	nop
   14000c3af:	mov    rbx,QWORD PTR [rbp-0x49]
   14000c3b3:	test   rbx,rbx
   14000c3b6:	je     0x14000c3cf
   14000c3b8:	mov    rax,QWORD PTR [rbx]
   14000c3bb:	mov    rdi,QWORD PTR [rax+0x10]
   14000c3bf:	mov    rcx,rdi
   14000c3c2:	call   QWORD PTR [rip+0x262e0]        # 0x1400326a8
   14000c3c8:	mov    rcx,rbx
   14000c3cb:	call   rdi
   14000c3cd:	xor    edi,edi
   14000c3cf:	inc    esi
   14000c3d1:	cmp    esi,DWORD PTR [rbp-0x59]
   14000c3d4:	jae    0x14000c468
   14000c3da:	jmp    0x14000c18b
   14000c3df:	lea    rax,[rip+0x3ec92]        # 0x14004b078
   14000c3e6:	cmp    rcx,rax
   14000c3e9:	je     0x14000c40a
   14000c3eb:	test   BYTE PTR [rcx+0x1c],0x4
   14000c3ef:	je     0x14000c40a
   14000c3f1:	mov    edx,0x45
   14000c3f6:	lea    r8,[rip+0x2a6eb]        # 0x140036ae8
   14000c3fd:	mov    rcx,QWORD PTR [rcx+0x10]
   14000c401:	call   0x140001f08
   14000c406:	mov    rbx,QWORD PTR [rbp-0x51]
   14000c40a:	test   rbx,rbx
   14000c40d:	je     0x14000c425
   14000c40f:	mov    rax,QWORD PTR [rbx]
   14000c412:	mov    rdi,QWORD PTR [rax+0x10]
   14000c416:	mov    rcx,rdi
   14000c419:	call   QWORD PTR [rip+0x26289]        # 0x1400326a8
   14000c41f:	mov    rcx,rbx
   14000c422:	call   rdi
   14000c424:	nop
   14000c425:	mov    rbx,QWORD PTR [rbp-0x49]
   14000c429:	test   rbx,rbx
   14000c42c:	je     0x14000c468
   14000c42e:	mov    rax,QWORD PTR [rbx]
   14000c431:	mov    rdi,QWORD PTR [rax+0x10]
   14000c435:	mov    rcx,rdi
   14000c438:	call   QWORD PTR [rip+0x2626a]        # 0x1400326a8
   14000c43e:	mov    rcx,rbx
   14000c441:	call   rdi
   14000c443:	jmp    0x14000c468
   14000c445:	mov    ecx,0x80004002
   14000c44a:	call   0x140029d64
   14000c44f:	int3   
   14000c450:	mov    ecx,eax
   14000c452:	call   0x140029d64
   14000c457:	nop
   14000c458:	mov    ecx,eax
   14000c45a:	call   0x140029d64
   14000c45f:	int3   
   14000c460:	mov    ecx,eax
   14000c462:	call   0x140029d64
   14000c467:	nop
   14000c468:	mov    rdx,r13
   14000c46b:	mov    rcx,QWORD PTR [rbp-0x31]
   14000c46f:	call   0x14000c958
   14000c474:	nop
   14000c475:	mov    rbx,QWORD PTR [rbp-0x39]
   14000c479:	test   rbx,rbx
   14000c47c:	je     0x14000c493
   14000c47e:	mov    rax,QWORD PTR [rbx]
   14000c481:	mov    rdi,QWORD PTR [rax+0x10]
   14000c485:	mov    rcx,rdi
   14000c488:	call   QWORD PTR [rip+0x2621a]        # 0x1400326a8
   14000c48e:	mov    rcx,rbx
   14000c491:	call   rdi
   14000c493:	mov    rcx,QWORD PTR [rbp-0x1]
   14000c497:	xor    rcx,rsp
   14000c49a:	call   0x14002dd00
   14000c49f:	add    rsp,0x88
   14000c4a6:	pop    r15
   14000c4a8:	pop    r14
   14000c4aa:	pop    r13
   14000c4ac:	pop    r12
   14000c4ae:	pop    rdi
   14000c4af:	pop    rsi
   14000c4b0:	pop    rbx
   14000c4b1:	pop    rbp
   14000c4b2:	ret    
   14000c4b3:	int3   
   14000c4b4:	int3   
   14000c4b5:	int3   
   14000c4b6:	int3   
   14000c4b7:	int3   
   14000c4b8:	int3   
   14000c4b9:	int3   
   14000c4ba:	int3   
   14000c4bb:	int3   
   14000c4bc:	mov    rax,rsp
   14000c4bf:	push   rbp
   14000c4c0:	push   rdi
   14000c4c1:	push   r12
   14000c4c3:	push   r14
   14000c4c5:	push   r15
   14000c4c7:	lea    rbp,[rax-0x5f]
   14000c4cb:	sub    rsp,0xb0
   14000c4d2:	mov    QWORD PTR [rbp-0x1],0xfffffffffffffffe
   14000c4da:	mov    QWORD PTR [rax+0x18],rbx
   14000c4de:	mov    QWORD PTR [rax+0x20],rsi
   14000c4e2:	mov    rax,QWORD PTR [rip+0x3eb37]        # 0x14004b020
   14000c4e9:	xor    rax,rsp
   14000c4ec:	mov    QWORD PTR [rbp+0x27],rax
   14000c4f0:	mov    rdi,rdx
   14000c4f3:	mov    rsi,rcx
   14000c4f6:	xor    r15d,r15d
   14000c4f9:	test   rcx,rcx
   14000c4fc:	jne    0x14000c509
   14000c4fe:	mov    ecx,0x80004003
   14000c503:	call   0x140029d64
   14000c508:	int3   
   14000c509:	mov    DWORD PTR [rbp-0x49],r15d
   14000c50d:	mov    rax,QWORD PTR [rcx]
   14000c510:	mov    rbx,QWORD PTR [rax+0x28]
   14000c514:	mov    rcx,rbx
   14000c517:	call   QWORD PTR [rip+0x2618b]        # 0x1400326a8
   14000c51d:	lea    rdx,[rbp-0x49]
   14000c521:	mov    rcx,rsi
   14000c524:	call   rbx
   14000c526:	test   eax,eax
   14000c528:	jns    0x14000c532
   14000c52a:	mov    ecx,eax
   14000c52c:	call   0x140029d64
   14000c531:	int3   
   14000c532:	lea    r12,[rip+0x3eb3f]        # 0x14004b078
   14000c539:	mov    rcx,QWORD PTR [rip+0x3eb38]        # 0x14004b078
   14000c540:	cmp    rcx,r12
   14000c543:	je     0x14000c564
   14000c545:	test   BYTE PTR [rcx+0x1c],0x4
   14000c549:	je     0x14000c564
   14000c54b:	mov    edx,0x46
   14000c550:	mov    r9d,DWORD PTR [rbp-0x49]
   14000c554:	lea    r8,[rip+0x2a58d]        # 0x140036ae8
   14000c55b:	mov    rcx,QWORD PTR [rcx+0x10]
   14000c55f:	call   0x140001f70
   14000c564:	cmp    DWORD PTR [rbp-0x49],r15d
   14000c568:	jne    0x14000c5a8
   14000c56a:	mov    rsi,QWORD PTR [rdi+0x8]
   14000c56e:	mov    rbx,QWORD PTR [rdi]
   14000c571:	jmp    0x14000c597
   14000c573:	cmp    QWORD PTR [rbx+0x18],0x8
   14000c578:	jb     0x14000c583
   14000c57a:	mov    rcx,QWORD PTR [rbx]
   14000c57d:	call   QWORD PTR [rip+0x26045]        # 0x1400325c8
   14000c583:	mov    QWORD PTR [rbx+0x18],0x7
   14000c58b:	mov    QWORD PTR [rbx+0x10],r15
   14000c58f:	mov    WORD PTR [rbx],r15w
   14000c593:	add    rbx,0x20
   14000c597:	cmp    rbx,rsi
   14000c59a:	jne    0x14000c573
   14000c59c:	mov    rax,QWORD PTR [rdi]
   14000c59f:	mov    QWORD PTR [rdi+0x8],rax
   14000c5a3:	jmp    0x14000c7f7
   14000c5a8:	xorps  xmm0,xmm0
   14000c5ab:	movdqu XMMWORD PTR [rbp-0x39],xmm0
   14000c5b0:	mov    QWORD PTR [rbp-0x29],r15
   14000c5b4:	mov    ebx,0x104
   14000c5b9:	mov    edx,ebx
   14000c5bb:	lea    rcx,[rbp-0x39]
   14000c5bf:	call   0x14000d198
   14000c5c4:	nop
   14000c5c5:	xorps  xmm0,xmm0
   14000c5c8:	movdqu XMMWORD PTR [rbp-0x21],xmm0
   14000c5cd:	mov    QWORD PTR [rbp-0x11],r15
   14000c5d1:	mov    edx,ebx
   14000c5d3:	lea    rcx,[rbp-0x21]
   14000c5d7:	call   0x14000d198
   14000c5dc:	nop
   14000c5dd:	mov    r14d,r15d
   14000c5e0:	cmp    DWORD PTR [rbp-0x49],r15d
   14000c5e4:	jbe    0x14000c7cd
   14000c5ea:	mov    QWORD PTR [rbp-0x9],r15
   14000c5ee:	mov    QWORD PTR [rbp-0x41],r15
   14000c5f2:	mov    rax,QWORD PTR [rsi]
   14000c5f5:	mov    rbx,QWORD PTR [rax+0x30]
   14000c5f9:	mov    rcx,rbx
   14000c5fc:	call   QWORD PTR [rip+0x260a6]        # 0x1400326a8
   14000c602:	lea    r8,[rbp-0x41]
   14000c606:	mov    edx,r14d
   14000c609:	mov    rcx,rsi
   14000c60c:	call   rbx
   14000c60e:	test   eax,eax
   14000c610:	js     0x14000c7c5
   14000c616:	lea    rdx,[rbp-0x39]
   14000c61a:	mov    rcx,QWORD PTR [rbp-0x41]
   14000c61e:	call   0x140023124
   14000c623:	test   eax,eax
   14000c625:	jns    0x14000c66c
   14000c627:	mov    rcx,QWORD PTR [rip+0x3ea4a]        # 0x14004b078
   14000c62e:	cmp    rcx,r12
   14000c631:	je     0x14000c7a7
   14000c637:	test   BYTE PTR [rcx+0x1c],0x1
   14000c63b:	je     0x14000c7a7
   14000c641:	mov    r8,QWORD PTR [rbp-0x31]
   14000c645:	sub    r8,QWORD PTR [rbp-0x39]
   14000c649:	sar    r8,1
   14000c64c:	mov    edx,0x47
   14000c651:	mov    QWORD PTR [rsp+0x28],r8
   14000c656:	mov    DWORD PTR [rsp+0x20],eax
   14000c65a:	mov    r9,QWORD PTR [rbp-0x41]
   14000c65e:	mov    rcx,QWORD PTR [rcx+0x10]
   14000c662:	call   0x1400074bc
   14000c667:	jmp    0x14000c7a7
   14000c66c:	mov    rcx,QWORD PTR [rip+0x3ea05]        # 0x14004b078
   14000c673:	cmp    rcx,r12
   14000c676:	je     0x14000c6a5
   14000c678:	test   BYTE PTR [rcx+0x1c],0x4
   14000c67c:	je     0x14000c6a5
   14000c67e:	lea    r8,[rbp-0x39]
   14000c682:	mov    rax,QWORD PTR [rbp-0x39]
   14000c686:	cmp    rax,QWORD PTR [rbp-0x31]
   14000c68a:	cmovne r8,rax
   14000c68e:	mov    edx,0x48
   14000c693:	mov    QWORD PTR [rsp+0x20],r8
   14000c698:	mov    r9,QWORD PTR [rbp-0x41]
   14000c69c:	mov    rcx,QWORD PTR [rcx+0x10]
   14000c6a0:	call   0x1400073d4
   14000c6a5:	mov    rdx,QWORD PTR [rbp-0x31]
   14000c6a9:	mov    rax,QWORD PTR [rbp-0x39]
   14000c6ad:	sub    rdx,rax
   14000c6b0:	sar    rdx,1
   14000c6b3:	lea    rcx,[rbp-0x39]
   14000c6b7:	cmp    rax,QWORD PTR [rbp-0x31]
   14000c6bb:	cmovne rcx,rax
   14000c6bf:	lea    r8,[rbp-0x21]
   14000c6c3:	call   0x1400231bc
   14000c6c8:	mov    r8d,eax
   14000c6cb:	test   eax,eax
   14000c6cd:	jns    0x14000c718
   14000c6cf:	mov    rcx,QWORD PTR [rip+0x3e9a2]        # 0x14004b078
   14000c6d6:	cmp    rcx,r12
   14000c6d9:	je     0x14000c7a7
   14000c6df:	test   BYTE PTR [rcx+0x1c],0x1
   14000c6e3:	je     0x14000c7a7
   14000c6e9:	lea    r9,[rbp-0x39]
   14000c6ed:	mov    rax,QWORD PTR [rbp-0x39]
   14000c6f1:	cmp    rax,QWORD PTR [rbp-0x31]
   14000c6f5:	cmovne r9,rax
   14000c6f9:	mov    rax,QWORD PTR [rbp-0x19]
   14000c6fd:	sub    rax,QWORD PTR [rbp-0x21]
   14000c701:	sar    rax,1
   14000c704:	mov    edx,0x49
   14000c709:	mov    QWORD PTR [rsp+0x28],rax
   14000c70e:	mov    DWORD PTR [rsp+0x20],r8d
   14000c713:	jmp    0x14000c65e
   14000c718:	mov    rcx,QWORD PTR [rip+0x3e959]        # 0x14004b078
   14000c71f:	cmp    rcx,r12
   14000c722:	je     0x14000c75d
   14000c724:	test   BYTE PTR [rcx+0x1c],0x4
   14000c728:	je     0x14000c75d
   14000c72a:	lea    r8,[rbp-0x21]
   14000c72e:	mov    rax,QWORD PTR [rbp-0x21]
   14000c732:	cmp    rax,QWORD PTR [rbp-0x19]
   14000c736:	cmovne r8,rax
   14000c73a:	lea    r9,[rbp-0x39]
   14000c73e:	mov    rax,QWORD PTR [rbp-0x39]
   14000c742:	cmp    rax,QWORD PTR [rbp-0x31]
   14000c746:	cmovne r9,rax
   14000c74a:	mov    edx,0x4a
   14000c74f:	mov    QWORD PTR [rsp+0x20],r8
   14000c754:	mov    rcx,QWORD PTR [rcx+0x10]
   14000c758:	call   0x1400073d4
   14000c75d:	lea    rdx,[rbp-0x21]
   14000c761:	mov    rax,QWORD PTR [rbp-0x21]
   14000c765:	cmp    rax,QWORD PTR [rbp-0x19]
   14000c769:	cmovne rdx,rax
   14000c76d:	mov    QWORD PTR [rbp+0x1f],0x7
   14000c775:	mov    QWORD PTR [rbp+0x17],r15
   14000c779:	mov    WORD PTR [rbp+0x7],r15w
   14000c77e:	lea    rcx,[rbp+0x7]
   14000c782:	call   0x14000da34
   14000c787:	nop
   14000c788:	lea    rdx,[rbp+0x7]
   14000c78c:	mov    rcx,rdi
   14000c78f:	call   0x14000cee8
   14000c794:	nop
   14000c795:	cmp    QWORD PTR [rbp+0x1f],0x8
   14000c79a:	jb     0x14000c7a7
   14000c79c:	mov    rcx,QWORD PTR [rbp+0x7]
   14000c7a0:	call   QWORD PTR [rip+0x25e22]        # 0x1400325c8
   14000c7a6:	nop
   14000c7a7:	mov    rcx,QWORD PTR [rbp-0x41]
   14000c7ab:	test   rcx,rcx
   14000c7ae:	je     0x14000c7b6
   14000c7b0:	call   QWORD PTR [rip+0x25b9a]        # 0x140032350
   14000c7b6:	inc    r14d
   14000c7b9:	cmp    r14d,DWORD PTR [rbp-0x49]
   14000c7bd:	jb     0x14000c5ee
   14000c7c3:	jmp    0x14000c7cd
   14000c7c5:	mov    ecx,eax
   14000c7c7:	call   0x140029d64
   14000c7cc:	nop
   14000c7cd:	mov    rcx,QWORD PTR [rbp-0x21]
   14000c7d1:	test   rcx,rcx
   14000c7d4:	je     0x14000c7e8
   14000c7d6:	call   QWORD PTR [rip+0x25dec]        # 0x1400325c8
   14000c7dc:	xorps  xmm0,xmm0
   14000c7df:	movdqu XMMWORD PTR [rbp-0x21],xmm0
   14000c7e4:	mov    QWORD PTR [rbp-0x11],r15
   14000c7e8:	mov    rcx,QWORD PTR [rbp-0x39]
   14000c7ec:	test   rcx,rcx
   14000c7ef:	je     0x14000c7f7
   14000c7f1:	call   QWORD PTR [rip+0x25dd1]        # 0x1400325c8
   14000c7f7:	mov    rcx,QWORD PTR [rbp+0x27]
   14000c7fb:	xor    rcx,rsp
   14000c7fe:	call   0x14002dd00
   14000c803:	lea    r11,[rsp+0xb0]
   14000c80b:	mov    rbx,QWORD PTR [r11+0x40]
   14000c80f:	mov    rsi,QWORD PTR [r11+0x48]
   14000c813:	mov    rsp,r11
   14000c816:	pop    r15
   14000c818:	pop    r14
   14000c81a:	pop    r12
   14000c81c:	pop    rdi
   14000c81d:	pop    rbp
   14000c81e:	ret    
   14000c81f:	int3   
   14000c820:	int3   
   14000c821:	int3   
   14000c822:	int3   
   14000c823:	int3   
   14000c824:	int3   
   14000c825:	int3   
   14000c826:	int3   
   14000c827:	int3   
   14000c828:	sub    rsp,0x28
   14000c82c:	mov    rcx,QWORD PTR [rcx]
   14000c82f:	test   rcx,rcx
   14000c832:	je     0x14000c83a
   14000c834:	call   QWORD PTR [rip+0x25b16]        # 0x140032350
   14000c83a:	add    rsp,0x28
   14000c83e:	ret    
   14000c83f:	int3   
   14000c840:	int3   
   14000c841:	int3   
   14000c842:	int3   
   14000c843:	int3   
   14000c844:	int3   
   14000c845:	int3   
   14000c846:	int3   
   14000c847:	int3   
   14000c848:	rex push rbx
   14000c84a:	push   rbp
   14000c84b:	push   rsi
   14000c84c:	push   rdi
   14000c84d:	push   r14
   14000c84f:	sub    rsp,0x20
   14000c853:	xor    ebp,ebp
   14000c855:	mov    rdi,rdx
   14000c858:	mov    r14,rcx
   14000c85b:	test   rcx,rcx
   14000c85e:	je     0x14000c937
   14000c864:	mov    rax,QWORD PTR [rcx]
   14000c867:	mov    WORD PTR [rsp+0x50],bp
   14000c86c:	mov    rbx,QWORD PTR [rax+0x18]
   14000c870:	mov    rcx,rbx
   14000c873:	call   QWORD PTR [rip+0x25e2f]        # 0x1400326a8
   14000c879:	lea    rdx,[rsp+0x50]
   14000c87e:	mov    rcx,r14
   14000c881:	call   rbx
   14000c883:	test   eax,eax
   14000c885:	js     0x14000c942
   14000c88b:	mov    rcx,QWORD PTR [rip+0x3e7e6]        # 0x14004b078
   14000c892:	lea    rax,[rip+0x3e7df]        # 0x14004b078
   14000c899:	cmp    rcx,rax
   14000c89c:	je     0x14000c8bd
   14000c89e:	test   BYTE PTR [rcx+0x1c],0x4
   14000c8a2:	je     0x14000c8bd
   14000c8a4:	movzx  r9d,WORD PTR [rsp+0x50]
   14000c8aa:	lea    edx,[rbp+0x4b]
   14000c8ad:	mov    rcx,QWORD PTR [rcx+0x10]
   14000c8b1:	lea    r8,[rip+0x2a230]        # 0x140036ae8
   14000c8b8:	call   0x140001f70
   14000c8bd:	movzx  eax,WORD PTR [rsp+0x50]
   14000c8c2:	cmp    bp,ax
   14000c8c5:	jne    0x14000c8d9
   14000c8c7:	mov    rax,QWORD PTR [rdi]
   14000c8ca:	mov    QWORD PTR [rdi+0x8],rax
   14000c8ce:	add    rsp,0x20
   14000c8d2:	pop    r14
   14000c8d4:	pop    rdi
   14000c8d5:	pop    rsi
   14000c8d6:	pop    rbp
   14000c8d7:	pop    rbx
   14000c8d8:	ret    
   14000c8d9:	movzx  esi,bp
   14000c8dc:	cmp    bp,ax
   14000c8df:	jae    0x14000c8ce
   14000c8e1:	mov    rax,QWORD PTR [r14]
   14000c8e4:	mov    WORD PTR [rsp+0x60],bp
   14000c8e9:	mov    WORD PTR [rsp+0x68],bp
   14000c8ee:	mov    rbx,QWORD PTR [rax+0x20]
   14000c8f2:	mov    rcx,rbx
   14000c8f5:	call   QWORD PTR [rip+0x25dad]        # 0x1400326a8
   14000c8fb:	lea    r9,[rsp+0x68]
   14000c900:	movzx  edx,si
   14000c903:	lea    r8,[rsp+0x60]
   14000c908:	mov    rcx,r14
   14000c90b:	call   rbx
   14000c90d:	test   eax,eax
   14000c90f:	js     0x14000c94a
   14000c911:	lea    rdx,[rsp+0x60]
   14000c916:	mov    rcx,rdi
   14000c919:	call   0x14000cca0
   14000c91e:	lea    rdx,[rsp+0x68]
   14000c923:	mov    rcx,rdi
   14000c926:	call   0x14000cca0
   14000c92b:	inc    si
   14000c92e:	cmp    si,WORD PTR [rsp+0x50]
   14000c933:	jb     0x14000c8e1
   14000c935:	jmp    0x14000c8ce
   14000c937:	mov    ecx,0x80004003
   14000c93c:	call   0x140029d64
   14000c941:	int3   
   14000c942:	mov    ecx,eax
   14000c944:	call   0x140029d64
   14000c949:	int3   
   14000c94a:	mov    ecx,eax
   14000c94c:	call   0x140029d64
   14000c951:	int3   
   14000c952:	int3   
   14000c953:	int3   
   14000c954:	int3   
   14000c955:	int3   
   14000c956:	int3   
   14000c957:	int3   
   14000c958:	mov    rax,rsp
   14000c95b:	push   rbp
   14000c95c:	push   rdi
   14000c95d:	push   r12
   14000c95f:	push   r14
   14000c961:	push   r15
   14000c963:	lea    rbp,[rax-0x5f]
   14000c967:	sub    rsp,0xb0
   14000c96e:	mov    QWORD PTR [rbp-0x1],0xfffffffffffffffe
   14000c976:	mov    QWORD PTR [rax+0x18],rbx
   14000c97a:	mov    QWORD PTR [rax+0x20],rsi
   14000c97e:	mov    rax,QWORD PTR [rip+0x3e69b]        # 0x14004b020
   14000c985:	xor    rax,rsp
   14000c988:	mov    QWORD PTR [rbp+0x2f],rax
   14000c98c:	mov    r14,rdx
   14000c98f:	mov    rdi,rcx
   14000c992:	xor    r15d,r15d
   14000c995:	mov    QWORD PTR [rbp-0x21],r15
   14000c999:	mov    rax,QWORD PTR [rcx]
   14000c99c:	mov    rbx,QWORD PTR [rax]
   14000c99f:	mov    rcx,rbx
   14000c9a2:	call   QWORD PTR [rip+0x25d00]        # 0x1400326a8
   14000c9a8:	lea    r8,[rbp-0x21]
   14000c9ac:	lea    rdx,[rip+0x2a0b5]        # 0x140036a68
   14000c9b3:	mov    rcx,rdi
   14000c9b6:	call   rbx
   14000c9b8:	test   eax,eax
   14000c9ba:	jns    0x14000c9c4
   14000c9bc:	mov    ecx,eax
   14000c9be:	call   0x140029d64
   14000c9c3:	int3   
   14000c9c4:	mov    DWORD PTR [rbp-0x41],r15d
   14000c9c8:	mov    rbx,QWORD PTR [rbp-0x21]
   14000c9cc:	mov    rax,QWORD PTR [rbx]
   14000c9cf:	mov    rdi,QWORD PTR [rax+0x18]
   14000c9d3:	mov    rcx,rdi
   14000c9d6:	call   QWORD PTR [rip+0x25ccc]        # 0x1400326a8
   14000c9dc:	lea    rdx,[rbp-0x41]
   14000c9e0:	mov    rcx,rbx
   14000c9e3:	call   rdi
   14000c9e5:	test   eax,eax
   14000c9e7:	jns    0x14000c9f1
   14000c9e9:	mov    ecx,eax
   14000c9eb:	call   0x140029d64
   14000c9f0:	int3   
   14000c9f1:	xorps  xmm0,xmm0
   14000c9f4:	movdqu XMMWORD PTR [rbp-0x39],xmm0
   14000c9f9:	mov    QWORD PTR [rbp-0x29],r15
   14000c9fd:	mov    ebx,0x104
   14000ca02:	mov    edx,ebx
   14000ca04:	lea    rcx,[rbp-0x39]
   14000ca08:	call   0x14000d198
   14000ca0d:	nop
   14000ca0e:	xorps  xmm0,xmm0
   14000ca11:	movdqu XMMWORD PTR [rbp-0x19],xmm0
   14000ca16:	mov    QWORD PTR [rbp-0x9],r15
   14000ca1a:	mov    edx,ebx
   14000ca1c:	lea    rcx,[rbp-0x19]
   14000ca20:	call   0x14000d198
   14000ca25:	nop
   14000ca26:	mov    esi,r15d
   14000ca29:	cmp    DWORD PTR [rbp-0x41],r15d
   14000ca2d:	jbe    0x14000cc1e
   14000ca33:	mov    QWORD PTR [rbp+0x7],r15
   14000ca37:	lea    r12,[rip+0x3e63a]        # 0x14004b078
   14000ca3e:	mov    QWORD PTR [rbp-0x49],r15
   14000ca42:	mov    rbx,QWORD PTR [rbp-0x21]
   14000ca46:	mov    rax,QWORD PTR [rbx]
   14000ca49:	mov    rdi,QWORD PTR [rax+0x20]
   14000ca4d:	mov    rcx,rdi
   14000ca50:	call   QWORD PTR [rip+0x25c52]        # 0x1400326a8
   14000ca56:	lea    r8,[rbp-0x49]
   14000ca5a:	mov    edx,esi
   14000ca5c:	mov    rcx,rbx
   14000ca5f:	call   rdi
   14000ca61:	test   eax,eax
   14000ca63:	js     0x14000cc16
   14000ca69:	lea    rdx,[rbp-0x39]
   14000ca6d:	mov    rcx,QWORD PTR [rbp-0x49]
   14000ca71:	call   0x140023124
   14000ca76:	test   eax,eax
   14000ca78:	jns    0x14000cabf
   14000ca7a:	mov    rcx,QWORD PTR [rip+0x3e5f7]        # 0x14004b078
   14000ca81:	cmp    rcx,r12
   14000ca84:	je     0x14000cbfa
   14000ca8a:	test   BYTE PTR [rcx+0x1c],0x1
   14000ca8e:	je     0x14000cbfa
   14000ca94:	mov    r8,QWORD PTR [rbp-0x31]
   14000ca98:	sub    r8,QWORD PTR [rbp-0x39]
   14000ca9c:	sar    r8,1
   14000ca9f:	mov    edx,0x4c
   14000caa4:	mov    QWORD PTR [rsp+0x28],r8
   14000caa9:	mov    DWORD PTR [rsp+0x20],eax
   14000caad:	mov    r9,QWORD PTR [rbp-0x49]
   14000cab1:	mov    rcx,QWORD PTR [rcx+0x10]
   14000cab5:	call   0x1400074bc
   14000caba:	jmp    0x14000cbfa
   14000cabf:	mov    rcx,QWORD PTR [rip+0x3e5b2]        # 0x14004b078
   14000cac6:	cmp    rcx,r12
   14000cac9:	je     0x14000caf8
   14000cacb:	test   BYTE PTR [rcx+0x1c],0x4
   14000cacf:	je     0x14000caf8
   14000cad1:	lea    r8,[rbp-0x39]
   14000cad5:	mov    rax,QWORD PTR [rbp-0x39]
   14000cad9:	cmp    rax,QWORD PTR [rbp-0x31]
   14000cadd:	cmovne r8,rax
   14000cae1:	mov    edx,0x4d
   14000cae6:	mov    QWORD PTR [rsp+0x20],r8
   14000caeb:	mov    r9,QWORD PTR [rbp-0x49]
   14000caef:	mov    rcx,QWORD PTR [rcx+0x10]
   14000caf3:	call   0x1400073d4
   14000caf8:	mov    rdx,QWORD PTR [rbp-0x31]
   14000cafc:	mov    rax,QWORD PTR [rbp-0x39]
   14000cb00:	sub    rdx,rax
   14000cb03:	sar    rdx,1
   14000cb06:	lea    rcx,[rbp-0x39]
   14000cb0a:	cmp    rax,QWORD PTR [rbp-0x31]
   14000cb0e:	cmovne rcx,rax
   14000cb12:	lea    r8,[rbp-0x19]
   14000cb16:	call   0x1400231bc
   14000cb1b:	mov    r8d,eax
   14000cb1e:	test   eax,eax
   14000cb20:	jns    0x14000cb6b
   14000cb22:	mov    rcx,QWORD PTR [rip+0x3e54f]        # 0x14004b078
   14000cb29:	cmp    rcx,r12
   14000cb2c:	je     0x14000cbfa
   14000cb32:	test   BYTE PTR [rcx+0x1c],0x1
   14000cb36:	je     0x14000cbfa
   14000cb3c:	lea    r9,[rbp-0x39]
   14000cb40:	mov    rax,QWORD PTR [rbp-0x39]
   14000cb44:	cmp    rax,QWORD PTR [rbp-0x31]
   14000cb48:	cmovne r9,rax
   14000cb4c:	mov    rax,QWORD PTR [rbp-0x11]
   14000cb50:	sub    rax,QWORD PTR [rbp-0x19]
   14000cb54:	sar    rax,1
   14000cb57:	mov    edx,0x4e
   14000cb5c:	mov    QWORD PTR [rsp+0x28],rax
   14000cb61:	mov    DWORD PTR [rsp+0x20],r8d
   14000cb66:	jmp    0x14000cab1
   14000cb6b:	mov    rcx,QWORD PTR [rip+0x3e506]        # 0x14004b078
   14000cb72:	cmp    rcx,r12
   14000cb75:	je     0x14000cbb0
   14000cb77:	test   BYTE PTR [rcx+0x1c],0x4
   14000cb7b:	je     0x14000cbb0
   14000cb7d:	lea    r8,[rbp-0x19]
   14000cb81:	mov    rax,QWORD PTR [rbp-0x19]
   14000cb85:	cmp    rax,QWORD PTR [rbp-0x11]
   14000cb89:	cmovne r8,rax
   14000cb8d:	lea    r9,[rbp-0x39]
   14000cb91:	mov    rax,QWORD PTR [rbp-0x39]
   14000cb95:	cmp    rax,QWORD PTR [rbp-0x31]
   14000cb99:	cmovne r9,rax
   14000cb9d:	mov    edx,0x4f
   14000cba2:	mov    QWORD PTR [rsp+0x20],r8
   14000cba7:	mov    rcx,QWORD PTR [rcx+0x10]
   14000cbab:	call   0x1400073d4
   14000cbb0:	lea    rdx,[rbp-0x19]
   14000cbb4:	mov    rax,QWORD PTR [rbp-0x19]
   14000cbb8:	cmp    rax,QWORD PTR [rbp-0x11]
   14000cbbc:	cmovne rdx,rax
   14000cbc0:	mov    QWORD PTR [rbp+0x27],0x7
   14000cbc8:	mov    QWORD PTR [rbp+0x1f],r15
   14000cbcc:	mov    WORD PTR [rbp+0xf],r15w
   14000cbd1:	lea    rcx,[rbp+0xf]
   14000cbd5:	call   0x14000da34
   14000cbda:	nop
   14000cbdb:	lea    rdx,[rbp+0xf]
   14000cbdf:	mov    rcx,r14
   14000cbe2:	call   0x14000cee8
   14000cbe7:	nop
   14000cbe8:	cmp    QWORD PTR [rbp+0x27],0x8
   14000cbed:	jb     0x14000cbfa
   14000cbef:	mov    rcx,QWORD PTR [rbp+0xf]
   14000cbf3:	call   QWORD PTR [rip+0x259cf]        # 0x1400325c8
   14000cbf9:	nop
   14000cbfa:	mov    rcx,QWORD PTR [rbp-0x49]
   14000cbfe:	test   rcx,rcx
   14000cc01:	je     0x14000cc09
   14000cc03:	call   QWORD PTR [rip+0x25747]        # 0x140032350
   14000cc09:	inc    esi
   14000cc0b:	cmp    esi,DWORD PTR [rbp-0x41]
   14000cc0e:	jb     0x14000ca3e
   14000cc14:	jmp    0x14000cc1e
   14000cc16:	mov    ecx,eax
   14000cc18:	call   0x140029d64
   14000cc1d:	nop
   14000cc1e:	mov    rcx,QWORD PTR [rbp-0x19]
   14000cc22:	test   rcx,rcx
   14000cc25:	je     0x14000cc39
   14000cc27:	call   QWORD PTR [rip+0x2599b]        # 0x1400325c8
   14000cc2d:	xorps  xmm0,xmm0
   14000cc30:	movdqu XMMWORD PTR [rbp-0x19],xmm0
   14000cc35:	mov    QWORD PTR [rbp-0x9],r15
   14000cc39:	mov    rcx,QWORD PTR [rbp-0x39]
   14000cc3d:	test   rcx,rcx
   14000cc40:	je     0x14000cc54
   14000cc42:	call   QWORD PTR [rip+0x25980]        # 0x1400325c8
   14000cc48:	xorps  xmm0,xmm0
   14000cc4b:	movdqu XMMWORD PTR [rbp-0x39],xmm0
   14000cc50:	mov    QWORD PTR [rbp-0x29],r15
   14000cc54:	mov    rbx,QWORD PTR [rbp-0x21]
   14000cc58:	test   rbx,rbx
   14000cc5b:	je     0x14000cc72
   14000cc5d:	mov    rax,QWORD PTR [rbx]
   14000cc60:	mov    rdi,QWORD PTR [rax+0x10]
   14000cc64:	mov    rcx,rdi
   14000cc67:	call   QWORD PTR [rip+0x25a3b]        # 0x1400326a8
   14000cc6d:	mov    rcx,rbx
   14000cc70:	call   rdi
   14000cc72:	mov    rcx,QWORD PTR [rbp+0x2f]
   14000cc76:	xor    rcx,rsp
   14000cc79:	call   0x14002dd00
   14000cc7e:	lea    r11,[rsp+0xb0]
   14000cc86:	mov    rbx,QWORD PTR [r11+0x40]
   14000cc8a:	mov    rsi,QWORD PTR [r11+0x48]
   14000cc8e:	mov    rsp,r11
   14000cc91:	pop    r15
   14000cc93:	pop    r14
   14000cc95:	pop    r12
   14000cc97:	pop    rdi
   14000cc98:	pop    rbp
   14000cc99:	ret    
   14000cc9a:	int3   
   14000cc9b:	int3   
   14000cc9c:	int3   
   14000cc9d:	int3   
   14000cc9e:	int3   
   14000cc9f:	int3   
   14000cca0:	mov    QWORD PTR [rsp+0x8],rbx
   14000cca5:	push   rdi
   14000cca6:	sub    rsp,0x20
   14000ccaa:	mov    rbx,rcx
   14000ccad:	mov    rdi,rdx
   14000ccb0:	mov    rcx,QWORD PTR [rcx+0x8]
   14000ccb4:	cmp    rdx,rcx
   14000ccb7:	jae    0x14000cd46
   14000ccbd:	cmp    QWORD PTR [rbx],rdx
   14000ccc0:	ja     0x14000cd46
   14000ccc6:	sub    rdi,QWORD PTR [rbx]
   14000ccc9:	mov    rdx,QWORD PTR [rbx+0x10]
   14000cccd:	sar    rdi,1
   14000ccd0:	cmp    rcx,rdx
   14000ccd3:	jne    0x14000cd31
   14000ccd5:	mov    rax,rdx
   14000ccd8:	sub    rax,rcx
   14000ccdb:	sar    rax,1
   14000ccde:	cmp    rax,0x1
   14000cce2:	jae    0x14000cd31
   14000cce4:	sub    rcx,QWORD PTR [rbx]
   14000cce7:	movabs r8,0x7fffffffffffffff
   14000ccf1:	sar    rcx,1
   14000ccf4:	mov    rax,r8
   14000ccf7:	sub    rax,rcx
   14000ccfa:	cmp    rax,0x1
   14000ccfe:	jb     0x14000cdc6
   14000cd04:	sub    rdx,QWORD PTR [rbx]
   14000cd07:	inc    rcx
   14000cd0a:	sar    rdx,1
   14000cd0d:	mov    rax,rdx
   14000cd10:	shr    rax,1
   14000cd13:	sub    r8,rax
   14000cd16:	cmp    r8,rdx
   14000cd19:	jae    0x14000cd1f
   14000cd1b:	xor    edx,edx
   14000cd1d:	jmp    0x14000cd22
   14000cd1f:	add    rdx,rax
   14000cd22:	cmp    rdx,rcx
   14000cd25:	cmovb  rdx,rcx
   14000cd29:	mov    rcx,rbx
   14000cd2c:	call   0x14000d2d0
   14000cd31:	mov    rdx,QWORD PTR [rbx+0x8]
   14000cd35:	test   rdx,rdx
   14000cd38:	je     0x14000cdb6
   14000cd3a:	mov    rax,QWORD PTR [rbx]
   14000cd3d:	movzx  ecx,WORD PTR [rax+rdi*2]
   14000cd41:	mov    WORD PTR [rdx],cx
   14000cd44:	jmp    0x14000cdb6
   14000cd46:	mov    rdx,QWORD PTR [rbx+0x10]
   14000cd4a:	cmp    rcx,rdx
   14000cd4d:	jne    0x14000cda7
   14000cd4f:	mov    rax,rdx
   14000cd52:	sub    rax,rcx
   14000cd55:	sar    rax,1
   14000cd58:	cmp    rax,0x1
   14000cd5c:	jae    0x14000cda7
   14000cd5e:	sub    rcx,QWORD PTR [rbx]
   14000cd61:	movabs r8,0x7fffffffffffffff
   14000cd6b:	sar    rcx,1
   14000cd6e:	mov    rax,r8
   14000cd71:	sub    rax,rcx
   14000cd74:	cmp    rax,0x1
   14000cd78:	jb     0x14000cdcc
   14000cd7a:	sub    rdx,QWORD PTR [rbx]
   14000cd7d:	inc    rcx
   14000cd80:	sar    rdx,1
   14000cd83:	mov    rax,rdx
   14000cd86:	shr    rax,1
   14000cd89:	sub    r8,rax
   14000cd8c:	cmp    r8,rdx
   14000cd8f:	jae    0x14000cd95
   14000cd91:	xor    edx,edx
   14000cd93:	jmp    0x14000cd98
   14000cd95:	add    rdx,rax
   14000cd98:	cmp    rdx,rcx
   14000cd9b:	cmovb  rdx,rcx
   14000cd9f:	mov    rcx,rbx
   14000cda2:	call   0x14000d2d0
   14000cda7:	mov    rcx,QWORD PTR [rbx+0x8]
   14000cdab:	test   rcx,rcx
   14000cdae:	je     0x14000cdb6
   14000cdb0:	movzx  eax,WORD PTR [rdi]
   14000cdb3:	mov    WORD PTR [rcx],ax
   14000cdb6:	add    QWORD PTR [rbx+0x8],0x2
   14000cdbb:	mov    rbx,QWORD PTR [rsp+0x30]
   14000cdc0:	add    rsp,0x20
   14000cdc4:	pop    rdi
   14000cdc5:	ret    
   14000cdc6:	call   0x14000d388
   14000cdcb:	int3   
   14000cdcc:	call   0x14000d388
   14000cdd1:	int3   
   14000cdd2:	int3   
   14000cdd3:	int3   
   14000cdd4:	int3   
   14000cdd5:	int3   
   14000cdd6:	int3   
   14000cdd7:	int3   
   14000cdd8:	mov    QWORD PTR [rsp+0x8],rbx
   14000cddd:	push   rdi
   14000cdde:	sub    rsp,0x20
   14000cde2:	mov    rdi,QWORD PTR [rcx]
   14000cde5:	test   rdi,rdi
   14000cde8:	je     0x14000ce26
   14000cdea:	mov    eax,DWORD PTR [rdi+0x8]
   14000cded:	cmp    eax,0x1
   14000cdf0:	jne    0x14000cdfb
   14000cdf2:	mov    DWORD PTR [rdi+0x8],0x0
   14000cdf9:	jmp    0x14000ce08
   14000cdfb:	or     eax,0xffffffff
   14000cdfe:	lock xadd DWORD PTR [rdi+0x8],eax
   14000ce03:	sub    eax,0x1
   14000ce06:	jg     0x14000ce26
   14000ce08:	test   rdi,rdi
   14000ce0b:	je     0x14000ce26
   14000ce0d:	mov    rax,QWORD PTR [rdi]
   14000ce10:	mov    rbx,QWORD PTR [rax]
   14000ce13:	mov    rcx,rbx
   14000ce16:	call   QWORD PTR [rip+0x2588c]        # 0x1400326a8
   14000ce1c:	mov    edx,0x1
   14000ce21:	mov    rcx,rdi
   14000ce24:	call   rbx
   14000ce26:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ce2b:	add    rsp,0x20
   14000ce2f:	pop    rdi
   14000ce30:	ret    
   14000ce31:	int3   
   14000ce32:	int3   
   14000ce33:	int3   
   14000ce34:	int3   
   14000ce35:	int3   
   14000ce36:	int3   
   14000ce37:	int3   
   14000ce38:	mov    QWORD PTR [rsp+0x8],rbx
   14000ce3d:	push   rdi
   14000ce3e:	sub    rsp,0x20
   14000ce42:	cmp    QWORD PTR [rcx+0x10],0x0
   14000ce47:	mov    rdi,rcx
   14000ce4a:	je     0x14000ce77
   14000ce4c:	mov    rbx,QWORD PTR [rcx]
   14000ce4f:	cmp    rbx,rcx
   14000ce52:	je     0x14000ce77
   14000ce54:	mov    rcx,rbx
   14000ce57:	mov    rbx,QWORD PTR [rbx]
   14000ce5a:	mov    rax,QWORD PTR [rcx+0x8]
   14000ce5e:	mov    rdx,QWORD PTR [rcx]
   14000ce61:	mov    QWORD PTR [rax],rdx
   14000ce64:	mov    QWORD PTR [rdx+0x8],rax
   14000ce68:	call   QWORD PTR [rip+0x2575a]        # 0x1400325c8
   14000ce6e:	dec    QWORD PTR [rdi+0x10]
   14000ce72:	cmp    rbx,rdi
   14000ce75:	jne    0x14000ce54
   14000ce77:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ce7c:	add    rsp,0x20
   14000ce80:	pop    rdi
   14000ce81:	ret    
   14000ce82:	int3   
   14000ce83:	int3   
   14000ce84:	int3   
   14000ce85:	int3   
   14000ce86:	int3   
   14000ce87:	int3   
   14000ce88:	mov    QWORD PTR [rsp+0x8],rbx
   14000ce8d:	push   rdi
   14000ce8e:	sub    rsp,0x20
   14000ce92:	mov    rdi,QWORD PTR [rcx]
   14000ce95:	test   rdi,rdi
   14000ce98:	je     0x14000ceaf
   14000ce9a:	mov    rax,QWORD PTR [rdi]
   14000ce9d:	mov    rbx,QWORD PTR [rax+0x10]
   14000cea1:	mov    rcx,rbx
   14000cea4:	call   QWORD PTR [rip+0x257fe]        # 0x1400326a8
   14000ceaa:	mov    rcx,rdi
   14000cead:	call   rbx
   14000ceaf:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ceb4:	add    rsp,0x20
   14000ceb8:	pop    rdi
   14000ceb9:	ret    
   14000ceba:	int3   
   14000cebb:	int3   
   14000cebc:	int3   
   14000cebd:	int3   
   14000cebe:	int3   
   14000cebf:	int3   
   14000cec0:	rex push rbx
   14000cec2:	sub    rsp,0x20
   14000cec6:	cmp    QWORD PTR [rcx],0xffffffffffffffff
   14000ceca:	mov    rbx,rcx
   14000cecd:	je     0x14000cedc
   14000cecf:	mov    rcx,QWORD PTR [rcx]
   14000ced2:	call   QWORD PTR [rip+0x25280]        # 0x140032158
   14000ced8:	or     QWORD PTR [rbx],0xffffffffffffffff
   14000cedc:	add    rsp,0x20
   14000cee0:	pop    rbx
   14000cee1:	ret    
   14000cee2:	int3   
   14000cee3:	int3   
   14000cee4:	int3   
   14000cee5:	int3   
   14000cee6:	int3   
   14000cee7:	int3   
   14000cee8:	mov    QWORD PTR [rsp+0x8],rbx
   14000ceed:	push   rdi
   14000ceee:	sub    rsp,0x20
   14000cef2:	mov    rbx,rcx
   14000cef5:	mov    rdi,rdx
   14000cef8:	mov    rcx,QWORD PTR [rcx+0x8]
   14000cefc:	cmp    rdx,rcx
   14000ceff:	jae    0x14000cf7a
   14000cf01:	cmp    QWORD PTR [rbx],rdx
   14000cf04:	ja     0x14000cf7a
   14000cf06:	sub    rdi,QWORD PTR [rbx]
   14000cf09:	mov    rdx,QWORD PTR [rbx+0x10]
   14000cf0d:	cmp    rcx,rdx
   14000cf10:	jne    0x14000cf71
   14000cf12:	mov    rax,rdx
   14000cf15:	sub    rax,rcx
   14000cf18:	sar    rax,0x5
   14000cf1c:	cmp    rax,0x1
   14000cf20:	jae    0x14000cf71
   14000cf22:	sub    rcx,QWORD PTR [rbx]
   14000cf25:	movabs r8,0x7ffffffffffffff
   14000cf2f:	sar    rcx,0x5
   14000cf33:	mov    rax,r8
   14000cf36:	sub    rax,rcx
   14000cf39:	cmp    rax,0x1
   14000cf3d:	jb     0x14000cffa
   14000cf43:	sub    rdx,QWORD PTR [rbx]
   14000cf46:	inc    rcx
   14000cf49:	sar    rdx,0x5
   14000cf4d:	mov    rax,rdx
   14000cf50:	shr    rax,1
   14000cf53:	sub    r8,rax
   14000cf56:	cmp    r8,rdx
   14000cf59:	jae    0x14000cf5f
   14000cf5b:	xor    edx,edx
   14000cf5d:	jmp    0x14000cf62
   14000cf5f:	add    rdx,rax
   14000cf62:	cmp    rdx,rcx
   14000cf65:	cmovb  rdx,rcx
   14000cf69:	mov    rcx,rbx
   14000cf6c:	call   0x14000d3a0
   14000cf71:	and    rdi,0xffffffffffffffe0
   14000cf75:	add    rdi,QWORD PTR [rbx]
   14000cf78:	jmp    0x14000cfde
   14000cf7a:	mov    rdx,QWORD PTR [rbx+0x10]
   14000cf7e:	cmp    rcx,rdx
   14000cf81:	jne    0x14000cfde
   14000cf83:	mov    rax,rdx
   14000cf86:	sub    rax,rcx
   14000cf89:	sar    rax,0x5
   14000cf8d:	cmp    rax,0x1
   14000cf91:	jae    0x14000cfde
   14000cf93:	sub    rcx,QWORD PTR [rbx]
   14000cf96:	movabs r8,0x7ffffffffffffff
   14000cfa0:	sar    rcx,0x5
   14000cfa4:	mov    rax,r8
   14000cfa7:	sub    rax,rcx
   14000cfaa:	cmp    rax,0x1
   14000cfae:	jb     0x14000d000
   14000cfb0:	sub    rdx,QWORD PTR [rbx]
   14000cfb3:	inc    rcx
   14000cfb6:	sar    rdx,0x5
   14000cfba:	mov    rax,rdx
   14000cfbd:	shr    rax,1
   14000cfc0:	sub    r8,rax
   14000cfc3:	cmp    r8,rdx
   14000cfc6:	jae    0x14000cfcc
   14000cfc8:	xor    edx,edx
   14000cfca:	jmp    0x14000cfcf
   14000cfcc:	add    rdx,rax
   14000cfcf:	cmp    rdx,rcx
   14000cfd2:	cmovb  rdx,rcx
   14000cfd6:	mov    rcx,rbx
   14000cfd9:	call   0x14000d3a0
   14000cfde:	mov    rdx,QWORD PTR [rbx+0x8]
   14000cfe2:	mov    r8,rdi
   14000cfe5:	call   0x14000d57c
   14000cfea:	add    QWORD PTR [rbx+0x8],0x20
   14000cfef:	mov    rbx,QWORD PTR [rsp+0x30]
   14000cff4:	add    rsp,0x20
   14000cff8:	pop    rdi
   14000cff9:	ret    
   14000cffa:	call   0x14000d388
   14000cfff:	int3   
   14000d000:	call   0x14000d388
   14000d005:	int3   
   14000d006:	int3   
   14000d007:	int3   
   14000d008:	int3   
   14000d009:	int3   
   14000d00a:	int3   
   14000d00b:	int3   
   14000d00c:	int3   
   14000d00d:	int3   
   14000d00e:	int3   
   14000d00f:	int3   
   14000d010:	mov    eax,0x1
   14000d015:	lock xadd DWORD PTR [rcx+0x18],eax
   14000d01a:	inc    eax
   14000d01c:	ret    
   14000d01d:	int3   
   14000d01e:	int3   
   14000d01f:	int3   
   14000d020:	int3   
   14000d021:	int3   
   14000d022:	int3   
   14000d023:	int3   
   14000d024:	int3   
   14000d025:	int3   
   14000d026:	int3   
   14000d027:	int3   
   14000d028:	int3   
   14000d029:	int3   
   14000d02a:	int3   
   14000d02b:	int3   
   14000d02c:	int3   
   14000d02d:	int3   
   14000d02e:	int3   
   14000d02f:	int3   
   14000d030:	mov    QWORD PTR [rsp+0x8],rbx
   14000d035:	mov    QWORD PTR [rsp+0x10],rsi
   14000d03a:	push   rdi
   14000d03b:	sub    rsp,0x20
   14000d03f:	mov    rsi,rcx
   14000d042:	or     edi,0xffffffff
   14000d045:	lock xadd DWORD PTR [rcx+0x18],edi
   14000d04a:	sub    edi,0x1
   14000d04d:	jne    0x14000d082
   14000d04f:	mov    rax,QWORD PTR [rip+0x42f82]        # 0x14004ffd8
   14000d056:	lock inc DWORD PTR [rax+0xc]
   14000d05a:	test   rcx,rcx
   14000d05d:	je     0x14000d077
   14000d05f:	mov    rcx,QWORD PTR [rcx]
   14000d062:	mov    rbx,QWORD PTR [rcx+0x18]
   14000d066:	mov    rcx,rbx
   14000d069:	call   QWORD PTR [rip+0x25639]        # 0x1400326a8
   14000d06f:	lea    edx,[rdi+0x1]
   14000d072:	mov    rcx,rsi
   14000d075:	call   rbx
   14000d077:	mov    rcx,QWORD PTR [rip+0x42f5a]        # 0x14004ffd8
   14000d07e:	lock dec DWORD PTR [rcx+0xc]
   14000d082:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d087:	mov    eax,edi
   14000d089:	mov    rsi,QWORD PTR [rsp+0x38]
   14000d08e:	add    rsp,0x20
   14000d092:	pop    rdi
   14000d093:	ret    
   14000d094:	int3   
   14000d095:	int3   
   14000d096:	int3   
   14000d097:	int3   
   14000d098:	int3   
   14000d099:	int3   
   14000d09a:	int3   
   14000d09b:	int3   
   14000d09c:	int3   
   14000d09d:	int3   
   14000d09e:	int3   
   14000d09f:	int3   
   14000d0a0:	mov    r9,r8
   14000d0a3:	add    rcx,0xfffffffffffffff0
   14000d0a7:	mov    r8,rdx
   14000d0aa:	lea    rdx,[rip+0x2994f]        # 0x140036a00
   14000d0b1:	jmp    0x140004664
   14000d0b6:	int3   
   14000d0b7:	int3   
   14000d0b8:	int3   
   14000d0b9:	int3   
   14000d0ba:	int3   
   14000d0bb:	int3   
   14000d0bc:	mov    QWORD PTR [rsp+0x10],rbx
   14000d0c1:	push   rdi
   14000d0c2:	sub    rsp,0x20
   14000d0c6:	mov    rdi,QWORD PTR [rcx]
   14000d0c9:	test   rdi,rdi
   14000d0cc:	je     0x14000d0fa
   14000d0ce:	or     eax,0xffffffff
   14000d0d1:	lock xadd DWORD PTR [rdi+0x10],eax
   14000d0d6:	cmp    eax,0x1
   14000d0d9:	jne    0x14000d0fa
   14000d0db:	test   rdi,rdi
   14000d0de:	je     0x14000d0fa
   14000d0e0:	mov    rax,QWORD PTR [rdi]
   14000d0e3:	mov    rbx,QWORD PTR [rax+0x28]
   14000d0e7:	mov    rcx,rbx
   14000d0ea:	call   QWORD PTR [rip+0x255b8]        # 0x1400326a8
   14000d0f0:	mov    edx,0x1
   14000d0f5:	mov    rcx,rdi
   14000d0f8:	call   rbx
   14000d0fa:	mov    rbx,QWORD PTR [rsp+0x38]
   14000d0ff:	add    rsp,0x20
   14000d103:	pop    rdi
   14000d104:	ret    
   14000d105:	int3   
   14000d106:	int3   
   14000d107:	int3   
   14000d108:	int3   
   14000d109:	int3   
   14000d10a:	int3   
   14000d10b:	int3   
   14000d10c:	sub    rsp,0x28
   14000d110:	mov    rcx,QWORD PTR [rcx]
   14000d113:	test   rcx,rcx
   14000d116:	je     0x14000d11e
   14000d118:	call   QWORD PTR [rip+0x2532a]        # 0x140032448
   14000d11e:	add    rsp,0x28
   14000d122:	ret    
   14000d123:	int3   
   14000d124:	int3   
   14000d125:	int3   
   14000d126:	int3   
   14000d127:	int3   
   14000d128:	int3   
   14000d129:	int3   
   14000d12a:	int3   
   14000d12b:	int3   
   14000d12c:	int3   
   14000d12d:	int3   
   14000d12e:	int3   
   14000d12f:	int3   
   14000d130:	mov    QWORD PTR [rsp+0x8],rbx
   14000d135:	push   rdi
   14000d136:	sub    rsp,0x20
   14000d13a:	lea    rax,[rip+0x27577]        # 0x1400346b8
   14000d141:	mov    DWORD PTR [rcx+0x18],0xc0000001
   14000d148:	mov    QWORD PTR [rcx],rax
   14000d14b:	mov    ebx,edx
   14000d14d:	lea    rax,[rip+0x27544]        # 0x140034698
   14000d154:	mov    rdi,rcx
   14000d157:	mov    QWORD PTR [rcx+0x8],rax
   14000d15b:	lea    rax,[rip+0x274fe]        # 0x140034660
   14000d162:	mov    QWORD PTR [rcx+0x10],rax
   14000d166:	mov    rax,QWORD PTR [rip+0x42e6b]        # 0x14004ffd8
   14000d16d:	lock dec DWORD PTR [rax+0xc]
   14000d171:	call   0x140007908
   14000d176:	test   bl,0x1
   14000d179:	je     0x14000d184
   14000d17b:	mov    rcx,rdi
   14000d17e:	call   QWORD PTR [rip+0x25444]        # 0x1400325c8
   14000d184:	mov    rax,rdi
   14000d187:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d18c:	add    rsp,0x20
   14000d190:	pop    rdi
   14000d191:	ret    
   14000d192:	int3   
   14000d193:	int3   
   14000d194:	int3   
   14000d195:	int3   
   14000d196:	int3   
   14000d197:	int3   
   14000d198:	mov    rax,rsp
   14000d19b:	mov    QWORD PTR [rax+0x8],rcx
   14000d19f:	push   rdi
   14000d1a0:	sub    rsp,0x30
   14000d1a4:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14000d1ac:	mov    QWORD PTR [rax+0x10],rbx
   14000d1b0:	mov    QWORD PTR [rax+0x18],rsi
   14000d1b4:	mov    rbx,rdx
   14000d1b7:	mov    rsi,rcx
   14000d1ba:	mov    rax,QWORD PTR [rcx+0x8]
   14000d1be:	mov    r8,QWORD PTR [rcx]
   14000d1c1:	mov    rdi,rax
   14000d1c4:	sub    rdi,r8
   14000d1c7:	sar    rdi,1
   14000d1ca:	cmp    rdi,rdx
   14000d1cd:	jbe    0x14000d213
   14000d1cf:	lea    rdi,[r8+rdx*2]
   14000d1d3:	cmp    rdi,r8
   14000d1d6:	jne    0x14000d1e1
   14000d1d8:	mov    QWORD PTR [rcx+0x8],r8
   14000d1dc:	jmp    0x14000d2b7
   14000d1e1:	cmp    rdi,rax
   14000d1e4:	je     0x14000d2b7
   14000d1ea:	mov    rcx,rax
   14000d1ed:	sub    rcx,rax
   14000d1f0:	sar    rcx,1
   14000d1f3:	lea    rbx,[rcx+rcx*1]
   14000d1f7:	mov    r8,rbx
   14000d1fa:	mov    rdx,rax
   14000d1fd:	mov    rcx,rdi
   14000d200:	call   QWORD PTR [rip+0x2529a]        # 0x1400324a0
   14000d206:	lea    rax,[rbx+rdi*1]
   14000d20a:	mov    QWORD PTR [rsi+0x8],rax
   14000d20e:	jmp    0x14000d2b7
   14000d213:	jae    0x14000d2b7
   14000d219:	mov    r9,rdx
   14000d21c:	sub    r9,rdi
   14000d21f:	mov    rdx,QWORD PTR [rcx+0x10]
   14000d223:	mov    rcx,rdx
   14000d226:	sub    rcx,rax
   14000d229:	sar    rcx,1
   14000d22c:	cmp    rcx,r9
   14000d22f:	jae    0x14000d280
   14000d231:	movabs rcx,0x7fffffffffffffff
   14000d23b:	mov    rax,rcx
   14000d23e:	sub    rax,rdi
   14000d241:	cmp    rax,r9
   14000d244:	jae    0x14000d24c
   14000d246:	call   0x14000d388
   14000d24b:	int3   
   14000d24c:	lea    r10,[rdi+r9*1]
   14000d250:	sub    rdx,r8
   14000d253:	sar    rdx,1
   14000d256:	mov    rax,rdx
   14000d259:	shr    rax,1
   14000d25c:	sub    rcx,rax
   14000d25f:	cmp    rcx,rdx
   14000d262:	jae    0x14000d26a
   14000d264:	xor    edi,edi
   14000d266:	mov    edx,edi
   14000d268:	jmp    0x14000d26f
   14000d26a:	add    rdx,rax
   14000d26d:	xor    edi,edi
   14000d26f:	cmp    rdx,r10
   14000d272:	cmovb  rdx,r10
   14000d276:	mov    rcx,rsi
   14000d279:	call   0x14000d2d0
   14000d27e:	jmp    0x14000d282
   14000d280:	xor    edi,edi
   14000d282:	mov    rax,QWORD PTR [rsi+0x8]
   14000d286:	sub    rax,QWORD PTR [rsi]
   14000d289:	sar    rax,1
   14000d28c:	mov    rcx,rbx
   14000d28f:	sub    rcx,rax
   14000d292:	je     0x14000d29e
   14000d294:	movzx  eax,di
   14000d297:	mov    rdi,QWORD PTR [rsi+0x8]
   14000d29b:	rep stos WORD PTR es:[rdi],ax
   14000d29e:	mov    rcx,QWORD PTR [rsi+0x8]
   14000d2a2:	mov    rax,rcx
   14000d2a5:	sub    rax,QWORD PTR [rsi]
   14000d2a8:	sar    rax,1
   14000d2ab:	sub    rbx,rax
   14000d2ae:	lea    rax,[rcx+rbx*2]
   14000d2b2:	jmp    0x14000d20a
   14000d2b7:	mov    rbx,QWORD PTR [rsp+0x48]
   14000d2bc:	mov    rsi,QWORD PTR [rsp+0x50]
   14000d2c1:	add    rsp,0x30
   14000d2c5:	pop    rdi
   14000d2c6:	ret    
   14000d2c7:	int3   
   14000d2c8:	int3   
   14000d2c9:	int3   
   14000d2ca:	int3   
   14000d2cb:	int3   
   14000d2cc:	int3   
   14000d2cd:	int3   
   14000d2ce:	int3   
   14000d2cf:	int3   
   14000d2d0:	mov    rax,rsp
   14000d2d3:	push   r14
   14000d2d5:	sub    rsp,0x30
   14000d2d9:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14000d2e1:	mov    QWORD PTR [rax+0x8],rbx
   14000d2e5:	mov    QWORD PTR [rax+0x18],rsi
   14000d2e9:	mov    QWORD PTR [rax+0x20],rdi
   14000d2ed:	mov    rsi,rdx
   14000d2f0:	mov    rdi,rcx
   14000d2f3:	xor    ebx,ebx
   14000d2f5:	mov    QWORD PTR [rsp+0x48],rbx
   14000d2fa:	test   rdx,rdx
   14000d2fd:	je     0x14000d327
   14000d2ff:	movabs rax,0x7fffffffffffffff
   14000d309:	cmp    rdx,rax
   14000d30c:	ja     0x14000d321
   14000d30e:	lea    rcx,[rdx+rdx*1]
   14000d312:	call   0x140023f10
   14000d317:	mov    rbx,rax
   14000d31a:	mov    QWORD PTR [rsp+0x48],rax
   14000d31f:	jmp    0x14000d327
   14000d321:	call   0x14000203c
   14000d326:	nop
   14000d327:	mov    r8,QWORD PTR [rdi+0x8]
   14000d32b:	sub    r8,QWORD PTR [rdi]
   14000d32e:	sar    r8,1
   14000d331:	add    r8,r8
   14000d334:	mov    rdx,QWORD PTR [rdi]
   14000d337:	mov    rcx,rbx
   14000d33a:	call   QWORD PTR [rip+0x25160]        # 0x1400324a0
   14000d340:	nop
   14000d341:	mov    rcx,QWORD PTR [rdi]
   14000d344:	mov    r14,QWORD PTR [rdi+0x8]
   14000d348:	sub    r14,rcx
   14000d34b:	sar    r14,1
   14000d34e:	test   rcx,rcx
   14000d351:	je     0x14000d359
   14000d353:	call   QWORD PTR [rip+0x2526f]        # 0x1400325c8
   14000d359:	lea    rax,[rbx+rsi*2]
   14000d35d:	mov    QWORD PTR [rdi+0x10],rax
   14000d361:	lea    rax,[rbx+r14*2]
   14000d365:	mov    QWORD PTR [rdi+0x8],rax
   14000d369:	mov    QWORD PTR [rdi],rbx
   14000d36c:	mov    rbx,QWORD PTR [rsp+0x40]
   14000d371:	mov    rsi,QWORD PTR [rsp+0x50]
   14000d376:	mov    rdi,QWORD PTR [rsp+0x58]
   14000d37b:	add    rsp,0x30
   14000d37f:	pop    r14
   14000d381:	ret    
   14000d382:	int3   
   14000d383:	int3   
   14000d384:	int3   
   14000d385:	int3   
   14000d386:	int3   
   14000d387:	int3   
   14000d388:	sub    rsp,0x28
   14000d38c:	lea    rcx,[rip+0x296f5]        # 0x140036a88
   14000d393:	call   0x14002d7f8
   14000d398:	int3   
   14000d399:	int3   
   14000d39a:	int3   
   14000d39b:	int3   
   14000d39c:	int3   
   14000d39d:	int3   
   14000d39e:	int3   
   14000d39f:	int3   
   14000d3a0:	mov    rax,rsp
   14000d3a3:	push   rdi
   14000d3a4:	push   r12
   14000d3a6:	push   r13
   14000d3a8:	push   r14
   14000d3aa:	push   r15
   14000d3ac:	sub    rsp,0x40
   14000d3b0:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   14000d3b8:	mov    QWORD PTR [rax+0x8],rbx
   14000d3bc:	mov    QWORD PTR [rax+0x18],rsi
   14000d3c0:	mov    rdi,rdx
   14000d3c3:	mov    r14,rcx
   14000d3c6:	xor    r13d,r13d
   14000d3c9:	mov    esi,r13d
   14000d3cc:	mov    QWORD PTR [rsp+0x78],r13
   14000d3d1:	test   rdx,rdx
   14000d3d4:	je     0x14000d401
   14000d3d6:	movabs rax,0x7ffffffffffffff
   14000d3e0:	cmp    rdx,rax
   14000d3e3:	ja     0x14000d3fb
   14000d3e5:	mov    rcx,rdx
   14000d3e8:	shl    rcx,0x5
   14000d3ec:	call   0x140023f10
   14000d3f1:	mov    rsi,rax
   14000d3f4:	mov    QWORD PTR [rsp+0x78],rax
   14000d3f9:	jmp    0x14000d401
   14000d3fb:	call   0x14000203c
   14000d400:	nop
   14000d401:	mov    r8,rsi
   14000d404:	mov    rdx,QWORD PTR [r14+0x8]
   14000d408:	mov    rcx,QWORD PTR [r14]
   14000d40b:	call   0x14000d6f4
   14000d410:	nop
   14000d411:	mov    r12,QWORD PTR [r14+0x8]
   14000d415:	mov    rbx,QWORD PTR [r14]
   14000d418:	mov    r15,r12
   14000d41b:	sub    r15,rbx
   14000d41e:	test   rbx,rbx
   14000d421:	je     0x14000d457
   14000d423:	jmp    0x14000d449
   14000d425:	cmp    QWORD PTR [rbx+0x18],0x8
   14000d42a:	jb     0x14000d435
   14000d42c:	mov    rcx,QWORD PTR [rbx]
   14000d42f:	call   QWORD PTR [rip+0x25193]        # 0x1400325c8
   14000d435:	mov    QWORD PTR [rbx+0x18],0x7
   14000d43d:	mov    QWORD PTR [rbx+0x10],r13
   14000d441:	mov    WORD PTR [rbx],r13w
   14000d445:	add    rbx,0x20
   14000d449:	cmp    rbx,r12
   14000d44c:	jne    0x14000d425
   14000d44e:	mov    rcx,QWORD PTR [r14]
   14000d451:	call   QWORD PTR [rip+0x25171]        # 0x1400325c8
   14000d457:	shl    rdi,0x5
   14000d45b:	add    rdi,rsi
   14000d45e:	mov    QWORD PTR [r14+0x10],rdi
   14000d462:	and    r15,0xffffffffffffffe0
   14000d466:	add    r15,rsi
   14000d469:	mov    QWORD PTR [r14+0x8],r15
   14000d46d:	mov    QWORD PTR [r14],rsi
   14000d470:	lea    r11,[rsp+0x40]
   14000d475:	mov    rbx,QWORD PTR [r11+0x30]
   14000d479:	mov    rsi,QWORD PTR [r11+0x40]
   14000d47d:	mov    rsp,r11
   14000d480:	pop    r15
   14000d482:	pop    r14
   14000d484:	pop    r13
   14000d486:	pop    r12
   14000d488:	pop    rdi
   14000d489:	ret    
   14000d48a:	int3   
   14000d48b:	int3   
   14000d48c:	int3   
   14000d48d:	int3   
   14000d48e:	int3   
   14000d48f:	int3   
   14000d490:	mov    QWORD PTR [rsp+0x8],rcx
   14000d495:	push   rbx
   14000d496:	push   rsi
   14000d497:	push   rdi
   14000d498:	push   r14
   14000d49a:	push   r15
   14000d49c:	sub    rsp,0x30
   14000d4a0:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000d4a9:	mov    r15,rcx
   14000d4ac:	xor    edi,edi
   14000d4ae:	test   rcx,rcx
   14000d4b1:	jne    0x14000d4bd
   14000d4b3:	mov    eax,0x80004003
   14000d4b8:	jmp    0x14000d567
   14000d4bd:	mov    QWORD PTR [rcx],rdi
   14000d4c0:	mov    esi,0x8007000e
   14000d4c5:	mov    DWORD PTR [rsp+0x68],esi
   14000d4c9:	mov    QWORD PTR [rsp+0x70],rdi
   14000d4ce:	mov    ecx,0x288
   14000d4d3:	call   0x140023f10
   14000d4d8:	mov    r14,rax
   14000d4db:	mov    rcx,rax
   14000d4de:	call   0x140007698
   14000d4e3:	lea    rax,[rip+0x271ce]        # 0x1400346b8
   14000d4ea:	mov    QWORD PTR [r14],rax
   14000d4ed:	lea    rax,[rip+0x271a4]        # 0x140034698
   14000d4f4:	mov    QWORD PTR [r14+0x8],rax
   14000d4f8:	lea    rax,[rip+0x27161]        # 0x140034660
   14000d4ff:	mov    QWORD PTR [r14+0x10],rax
   14000d503:	mov    rax,QWORD PTR [rip+0x42ace]        # 0x14004ffd8
   14000d50a:	lock inc DWORD PTR [rax+0xc]
   14000d50e:	mov    QWORD PTR [rsp+0x70],r14
   14000d513:	jmp    0x14000d525
   14000d515:	xor    edi,edi
   14000d517:	mov    r15,QWORD PTR [rsp+0x60]
   14000d51c:	mov    esi,DWORD PTR [rsp+0x68]
   14000d520:	mov    r14,QWORD PTR [rsp+0x70]
   14000d525:	test   r14,r14
   14000d528:	je     0x14000d562
   14000d52a:	lea    rcx,[r14+0x20]
   14000d52e:	call   0x140004ee4
   14000d533:	mov    esi,eax
   14000d535:	test   eax,eax
   14000d537:	js     0x14000d53e
   14000d539:	mov    BYTE PTR [r14+0x48],0x1
   14000d53e:	cmovns esi,edi
   14000d541:	test   esi,esi
   14000d543:	je     0x14000d562
   14000d545:	mov    r8,QWORD PTR [r14]
   14000d548:	mov    rbx,QWORD PTR [r8+0x18]
   14000d54c:	mov    rcx,rbx
   14000d54f:	call   QWORD PTR [rip+0x25153]        # 0x1400326a8
   14000d555:	mov    edx,0x1
   14000d55a:	mov    rcx,r14
   14000d55d:	call   rbx
   14000d55f:	mov    r14,rdi
   14000d562:	mov    QWORD PTR [r15],r14
   14000d565:	mov    eax,esi
   14000d567:	add    rsp,0x30
   14000d56b:	pop    r15
   14000d56d:	pop    r14
   14000d56f:	pop    rdi
   14000d570:	pop    rsi
   14000d571:	pop    rbx
   14000d572:	ret    
   14000d573:	int3   
   14000d574:	int3   
   14000d575:	int3   
   14000d576:	int3   
   14000d577:	int3   
   14000d578:	int3   
   14000d579:	int3   
   14000d57a:	int3   
   14000d57b:	int3   
   14000d57c:	test   rdx,rdx
   14000d57f:	je     0x14000d600
   14000d581:	mov    QWORD PTR [rsp+0x8],rbx
   14000d586:	mov    QWORD PTR [rsp+0x10],rsi
   14000d58b:	push   rdi
   14000d58c:	sub    rsp,0x20
   14000d590:	xor    esi,esi
   14000d592:	mov    QWORD PTR [rdx+0x18],0x7
   14000d59a:	mov    QWORD PTR [rdx+0x10],rsi
   14000d59e:	mov    rbx,r8
   14000d5a1:	mov    WORD PTR [rdx],si
   14000d5a4:	mov    rdi,rdx
   14000d5a7:	cmp    QWORD PTR [r8+0x18],0x8
   14000d5ac:	jae    0x14000d5c9
   14000d5ae:	mov    r8,QWORD PTR [r8+0x10]
   14000d5b2:	add    r8,0x1
   14000d5b6:	je     0x14000d5d2
   14000d5b8:	add    r8,r8
   14000d5bb:	mov    rdx,rbx
   14000d5be:	mov    rcx,rdi
   14000d5c1:	call   QWORD PTR [rip+0x24ed9]        # 0x1400324a0
   14000d5c7:	jmp    0x14000d5d2
   14000d5c9:	mov    rax,QWORD PTR [r8]
   14000d5cc:	mov    QWORD PTR [rdx],rax
   14000d5cf:	mov    QWORD PTR [r8],rsi
   14000d5d2:	mov    rax,QWORD PTR [rbx+0x10]
   14000d5d6:	mov    QWORD PTR [rdi+0x10],rax
   14000d5da:	mov    rax,QWORD PTR [rbx+0x18]
   14000d5de:	mov    QWORD PTR [rdi+0x18],rax
   14000d5e2:	mov    QWORD PTR [rbx+0x10],rsi
   14000d5e6:	mov    QWORD PTR [rbx+0x18],0x7
   14000d5ee:	mov    WORD PTR [rbx],si
   14000d5f1:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d5f6:	mov    rsi,QWORD PTR [rsp+0x38]
   14000d5fb:	add    rsp,0x20
   14000d5ff:	pop    rdi
   14000d600:	ret    
   14000d601:	int3   
   14000d602:	int3   
   14000d603:	int3   
   14000d604:	int3   
   14000d605:	int3   
   14000d606:	int3   
   14000d607:	int3   
   14000d608:	rex push rsi
   14000d60a:	sub    rsp,0x30
   14000d60e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000d617:	mov    QWORD PTR [rsp+0x40],rbx
   14000d61c:	mov    rsi,rcx
   14000d61f:	mov    ecx,0xd8
   14000d624:	call   QWORD PTR [rip+0x24fa6]        # 0x1400325d0
   14000d62a:	mov    rbx,rax
   14000d62d:	mov    QWORD PTR [rsp+0x48],rax
   14000d632:	test   rax,rax
   14000d635:	je     0x14000d6af
   14000d637:	and    DWORD PTR [rax+0x8],0x0
   14000d63b:	lea    rax,[rip+0x27286]        # 0x1400348c8
   14000d642:	mov    QWORD PTR [rbx],rax
   14000d645:	lea    rcx,[rbx+0x20]
   14000d649:	call   0x1400149c4
   14000d64e:	and    QWORD PTR [rbx+0x60],0x0
   14000d653:	and    QWORD PTR [rbx+0x68],0x0
   14000d658:	and    QWORD PTR [rbx+0x70],0x0
   14000d65d:	and    QWORD PTR [rbx+0x78],0x0
   14000d662:	mov    DWORD PTR [rbx+0x90],0x0
   14000d66c:	or     DWORD PTR [rbx+0x9c],0xffffffff
   14000d673:	mov    BYTE PTR [rbx+0xa0],0x0
   14000d67a:	and    QWORD PTR [rbx+0xa8],0x0
   14000d682:	and    QWORD PTR [rbx+0xb0],0x0
   14000d68a:	xor    eax,eax
   14000d68c:	mov    QWORD PTR [rbx+0x80],rax
   14000d693:	mov    QWORD PTR [rbx+0x88],rax
   14000d69a:	lea    rcx,[rbx+0xb8]
   14000d6a1:	xor    edx,edx
   14000d6a3:	lea    r8d,[rax+0x20]
   14000d6a7:	call   0x14002e2ce
   14000d6ac:	nop
   14000d6ad:	jmp    0x14000d6b1
   14000d6af:	xor    ebx,ebx
   14000d6b1:	test   rbx,rbx
   14000d6b4:	je     0x14000d6cf
   14000d6b6:	mov    eax,DWORD PTR [rbx+0x8]
   14000d6b9:	test   eax,eax
   14000d6bb:	jne    0x14000d6c6
   14000d6bd:	mov    DWORD PTR [rbx+0x8],0x1
   14000d6c4:	jmp    0x14000d6ca
   14000d6c6:	lock inc DWORD PTR [rbx+0x8]
   14000d6ca:	mov    QWORD PTR [rsi],rbx
   14000d6cd:	jmp    0x14000d6de
   14000d6cf:	mov    eax,0x8007000e
   14000d6d4:	jmp    0x14000d6e0
   14000d6d6:	mov    eax,DWORD PTR [rsp+0x48]
   14000d6da:	test   eax,eax
   14000d6dc:	js     0x14000d6e0
   14000d6de:	xor    eax,eax
   14000d6e0:	mov    rbx,QWORD PTR [rsp+0x40]
   14000d6e5:	add    rsp,0x30
   14000d6e9:	pop    rsi
   14000d6ea:	ret    
   14000d6eb:	int3   
   14000d6ec:	int3   
   14000d6ed:	int3   
   14000d6ee:	int3   
   14000d6ef:	int3   
   14000d6f0:	int3   
   14000d6f1:	int3   
   14000d6f2:	int3   
   14000d6f3:	int3   
   14000d6f4:	mov    rax,rsp
   14000d6f7:	mov    QWORD PTR [rax+0x20],r9
   14000d6fb:	mov    QWORD PTR [rax+0x18],r8
   14000d6ff:	push   rdi
   14000d700:	sub    rsp,0x30
   14000d704:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14000d70c:	mov    QWORD PTR [rax+0x8],rbx
   14000d710:	mov    QWORD PTR [rax+0x10],rsi
   14000d714:	mov    rbx,r8
   14000d717:	mov    rsi,rdx
   14000d71a:	mov    rdi,rcx
   14000d71d:	mov    QWORD PTR [rsp+0x58],rbx
   14000d722:	cmp    rcx,rdx
   14000d725:	je     0x14000d744
   14000d727:	mov    r8,rdi
   14000d72a:	mov    rdx,rbx
   14000d72d:	call   0x14000d57c
   14000d732:	add    rbx,0x20
   14000d736:	mov    QWORD PTR [rsp+0x50],rbx
   14000d73b:	add    rdi,0x20
   14000d73f:	cmp    rdi,rsi
   14000d742:	jne    0x14000d727
   14000d744:	mov    rax,rbx
   14000d747:	mov    rbx,QWORD PTR [rsp+0x40]
   14000d74c:	mov    rsi,QWORD PTR [rsp+0x48]
   14000d751:	add    rsp,0x30
   14000d755:	pop    rdi
   14000d756:	ret    
   14000d757:	int3   
   14000d758:	int3   
   14000d759:	int3   
   14000d75a:	int3   
   14000d75b:	int3   
   14000d75c:	int3   
   14000d75d:	int3   
   14000d75e:	int3   
   14000d75f:	int3   
   14000d760:	sub    rcx,0x8
   14000d764:	jmp    0x14000d030
   14000d769:	int3   
   14000d76a:	int3   
   14000d76b:	int3   
   14000d76c:	int3   
   14000d76d:	int3   
   14000d76e:	int3   
   14000d76f:	int3   
   14000d770:	sub    rcx,0x10
   14000d774:	jmp    0x14000d030
   14000d779:	int3   
   14000d77a:	int3   
   14000d77b:	int3   
   14000d77c:	int3   
   14000d77d:	int3   
   14000d77e:	int3   
   14000d77f:	int3   
   14000d780:	sub    rcx,0x8
   14000d784:	jmp    0x14000d010
   14000d789:	int3   
   14000d78a:	int3   
   14000d78b:	int3   
   14000d78c:	int3   
   14000d78d:	int3   
   14000d78e:	int3   
   14000d78f:	int3   
   14000d790:	sub    rcx,0x10
   14000d794:	jmp    0x14000d010
   14000d799:	int3   
   14000d79a:	int3   
   14000d79b:	int3   
   14000d79c:	int3   
   14000d79d:	int3   
   14000d79e:	int3   
   14000d79f:	int3   
   14000d7a0:	mov    rax,rsp
   14000d7a3:	mov    QWORD PTR [rax+0x8],rbx
   14000d7a7:	mov    QWORD PTR [rax+0x10],rbp
   14000d7ab:	mov    QWORD PTR [rax+0x18],rsi
   14000d7af:	mov    QWORD PTR [rax+0x20],rdi
   14000d7b3:	push   r14
   14000d7b5:	sub    rsp,0x20
   14000d7b9:	mov    rdi,QWORD PTR [rdx+0x10]
   14000d7bd:	mov    rbp,r8
   14000d7c0:	mov    r14,rdx
   14000d7c3:	mov    rbx,rcx
   14000d7c6:	cmp    rdi,r8
   14000d7c9:	jb     0x14000d8fe
   14000d7cf:	sub    rdi,r8
   14000d7d2:	cmp    r9,rdi
   14000d7d5:	cmovb  rdi,r9
   14000d7d9:	cmp    rcx,rdx
   14000d7dc:	jne    0x14000d855
   14000d7de:	lea    rax,[rdi+r8*1]
   14000d7e2:	cmp    QWORD PTR [rcx+0x10],rax
   14000d7e6:	jb     0x14000d904
   14000d7ec:	cmp    QWORD PTR [rcx+0x18],0x8
   14000d7f1:	mov    QWORD PTR [rcx+0x10],rax
   14000d7f5:	jb     0x14000d7fa
   14000d7f7:	mov    rcx,QWORD PTR [rcx]
   14000d7fa:	xor    esi,esi
   14000d7fc:	mov    WORD PTR [rcx+rax*2],si
   14000d800:	mov    rdi,QWORD PTR [rbx+0x10]
   14000d804:	cmp    rdi,r8
   14000d807:	ja     0x14000d824
   14000d809:	cmp    QWORD PTR [rbx+0x18],0x8
   14000d80e:	mov    QWORD PTR [rbx+0x10],rsi
   14000d812:	jb     0x14000d819
   14000d814:	mov    rax,QWORD PTR [rbx]
   14000d817:	jmp    0x14000d81c
   14000d819:	mov    rax,rbx
   14000d81c:	mov    WORD PTR [rax],si
   14000d81f:	jmp    0x14000d8e0
   14000d824:	test   r8,r8
   14000d827:	je     0x14000d8e0
   14000d82d:	cmp    QWORD PTR [rbx+0x18],0x8
   14000d832:	jb     0x14000d839
   14000d834:	mov    rcx,QWORD PTR [rbx]
   14000d837:	jmp    0x14000d83c
   14000d839:	mov    rcx,rbx
   14000d83c:	sub    rdi,r8
   14000d83f:	je     0x14000d8c9
   14000d845:	lea    r8,[rdi+rdi*1]
   14000d849:	lea    rdx,[rcx+rbp*2]
   14000d84d:	call   QWORD PTR [rip+0x24c4d]        # 0x1400324a0
   14000d853:	jmp    0x14000d8c9
   14000d855:	movabs rax,0x7ffffffffffffffe
   14000d85f:	cmp    rdi,rax
   14000d862:	ja     0x14000d90a
   14000d868:	xor    esi,esi
   14000d86a:	cmp    QWORD PTR [rcx+0x18],rdi
   14000d86e:	jae    0x14000d87e
   14000d870:	mov    r8,QWORD PTR [rcx+0x10]
   14000d874:	mov    rdx,rdi
   14000d877:	call   0x14000d918
   14000d87c:	jmp    0x14000d899
   14000d87e:	test   rdi,rdi
   14000d881:	jne    0x14000d89e
   14000d883:	cmp    QWORD PTR [rcx+0x18],0x8
   14000d888:	mov    QWORD PTR [rcx+0x10],rsi
   14000d88c:	jb     0x14000d893
   14000d88e:	mov    rax,QWORD PTR [rcx]
   14000d891:	jmp    0x14000d896
   14000d893:	mov    rax,rcx
   14000d896:	mov    WORD PTR [rax],si
   14000d899:	test   rdi,rdi
   14000d89c:	je     0x14000d8e0
   14000d89e:	cmp    QWORD PTR [r14+0x18],0x8
   14000d8a3:	jb     0x14000d8a8
   14000d8a5:	mov    r14,QWORD PTR [r14]
   14000d8a8:	cmp    QWORD PTR [rbx+0x18],0x8
   14000d8ad:	jb     0x14000d8b4
   14000d8af:	mov    rcx,QWORD PTR [rbx]
   14000d8b2:	jmp    0x14000d8b7
   14000d8b4:	mov    rcx,rbx
   14000d8b7:	test   rdi,rdi
   14000d8ba:	je     0x14000d8c9
   14000d8bc:	lea    r8,[rdi+rdi*1]
   14000d8c0:	lea    rdx,[r14+rbp*2]
   14000d8c4:	call   0x14002e2f2
   14000d8c9:	cmp    QWORD PTR [rbx+0x18],0x8
   14000d8ce:	mov    QWORD PTR [rbx+0x10],rdi
   14000d8d2:	jb     0x14000d8d9
   14000d8d4:	mov    rax,QWORD PTR [rbx]
   14000d8d7:	jmp    0x14000d8dc
   14000d8d9:	mov    rax,rbx
   14000d8dc:	mov    WORD PTR [rax+rdi*2],si
   14000d8e0:	mov    rbp,QWORD PTR [rsp+0x38]
   14000d8e5:	mov    rax,rbx
   14000d8e8:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d8ed:	mov    rsi,QWORD PTR [rsp+0x40]
   14000d8f2:	mov    rdi,QWORD PTR [rsp+0x48]
   14000d8f7:	add    rsp,0x20
   14000d8fb:	pop    r14
   14000d8fd:	ret    
   14000d8fe:	call   0x140001c20
   14000d903:	int3   
   14000d904:	call   0x140001c20
   14000d909:	int3   
   14000d90a:	call   0x140001d4c
   14000d90f:	int3   
   14000d910:	int3   
   14000d911:	int3   
   14000d912:	int3   
   14000d913:	int3   
   14000d914:	int3   
   14000d915:	int3   
   14000d916:	int3   
   14000d917:	int3   
   14000d918:	mov    rax,rsp
   14000d91b:	mov    QWORD PTR [rax+0x18],r8
   14000d91f:	mov    QWORD PTR [rax+0x10],rdx
   14000d923:	mov    QWORD PTR [rax+0x8],rcx
   14000d927:	push   rbx
   14000d928:	push   rsi
   14000d929:	push   rdi
   14000d92a:	push   r14
   14000d92c:	push   r15
   14000d92e:	sub    rsp,0x30
   14000d932:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   14000d93a:	mov    r14,r8
   14000d93d:	mov    rbx,rcx
   14000d940:	mov    rdi,rdx
   14000d943:	or     rdi,0x7
   14000d947:	movabs r9,0x7ffffffffffffffe
   14000d951:	cmp    rdi,r9
   14000d954:	jbe    0x14000d95b
   14000d956:	mov    rdi,rdx
   14000d959:	jmp    0x14000d98c
   14000d95b:	mov    r8,QWORD PTR [rcx+0x18]
   14000d95f:	mov    rcx,r8
   14000d962:	shr    rcx,1
   14000d965:	movabs rax,0xaaaaaaaaaaaaaaab
   14000d96f:	mul    rdi
   14000d972:	shr    rdx,1
   14000d975:	cmp    rcx,rdx
   14000d978:	jbe    0x14000d98c
   14000d97a:	mov    rax,r9
   14000d97d:	sub    rax,rcx
   14000d980:	cmp    r8,rax
   14000d983:	lea    rdi,[rcx+r8*1]
   14000d987:	jbe    0x14000d98c
   14000d989:	mov    rdi,r9
   14000d98c:	lea    rcx,[rdi+0x1]
   14000d990:	xor    esi,esi
   14000d992:	mov    r15d,esi
   14000d995:	test   rcx,rcx
   14000d998:	je     0x14000d9bc
   14000d99a:	movabs rax,0x7fffffffffffffff
   14000d9a4:	cmp    rcx,rax
   14000d9a7:	ja     0x14000d9b6
   14000d9a9:	add    rcx,rcx
   14000d9ac:	call   0x140023f10
   14000d9b1:	mov    r15,rax
   14000d9b4:	jmp    0x14000d9bc
   14000d9b6:	call   0x14000203c
   14000d9bb:	nop
   14000d9bc:	jmp    0x14000d9d4
   14000d9be:	xor    esi,esi
   14000d9c0:	mov    rbx,QWORD PTR [rsp+0x60]
   14000d9c5:	mov    r14,QWORD PTR [rsp+0x70]
   14000d9ca:	mov    rdi,QWORD PTR [rsp+0x68]
   14000d9cf:	mov    r15,QWORD PTR [rsp+0x78]
   14000d9d4:	test   r14,r14
   14000d9d7:	je     0x14000d9f9
   14000d9d9:	cmp    QWORD PTR [rbx+0x18],0x8
   14000d9de:	jb     0x14000d9e5
   14000d9e0:	mov    rdx,QWORD PTR [rbx]
   14000d9e3:	jmp    0x14000d9e8
   14000d9e5:	mov    rdx,rbx
   14000d9e8:	test   r14,r14
   14000d9eb:	je     0x14000d9f9
   14000d9ed:	lea    r8,[r14+r14*1]
   14000d9f1:	mov    rcx,r15
   14000d9f4:	call   0x14002e2f2
   14000d9f9:	cmp    QWORD PTR [rbx+0x18],0x8
   14000d9fe:	jb     0x14000da09
   14000da00:	mov    rcx,QWORD PTR [rbx]
   14000da03:	call   QWORD PTR [rip+0x24bbf]        # 0x1400325c8
   14000da09:	mov    QWORD PTR [rbx],r15
   14000da0c:	mov    QWORD PTR [rbx+0x18],rdi
   14000da10:	mov    QWORD PTR [rbx+0x10],r14
   14000da14:	cmp    rdi,0x8
   14000da18:	jb     0x14000da1d
   14000da1a:	mov    rbx,r15
   14000da1d:	mov    WORD PTR [rbx+r14*2],si
   14000da22:	add    rsp,0x30
   14000da26:	pop    r15
   14000da28:	pop    r14
   14000da2a:	pop    rdi
   14000da2b:	pop    rsi
   14000da2c:	pop    rbx
   14000da2d:	ret    
   14000da2e:	int3   
   14000da2f:	int3   
   14000da30:	int3   
   14000da31:	int3   
   14000da32:	int3   
   14000da33:	int3   
   14000da34:	mov    QWORD PTR [rsp+0x8],rbx
   14000da39:	mov    QWORD PTR [rsp+0x10],rbp
   14000da3e:	mov    QWORD PTR [rsp+0x18],rsi
   14000da43:	push   rdi
   14000da44:	sub    rsp,0x20
   14000da48:	xor    ebp,ebp
   14000da4a:	mov    rsi,rdx
   14000da4d:	mov    rbx,rcx
   14000da50:	cmp    WORD PTR [rdx],bp
   14000da53:	jne    0x14000da59
   14000da55:	mov    edi,ebp
   14000da57:	jmp    0x14000da66
   14000da59:	or     rdi,0xffffffffffffffff
   14000da5d:	inc    rdi
   14000da60:	cmp    WORD PTR [rdx+rdi*2],bp
   14000da64:	jne    0x14000da5d
   14000da66:	mov    rdx,QWORD PTR [rcx+0x18]
   14000da6a:	cmp    rdx,0x8
   14000da6e:	jb     0x14000da75
   14000da70:	mov    rax,QWORD PTR [rcx]
   14000da73:	jmp    0x14000da78
   14000da75:	mov    rax,rcx
   14000da78:	cmp    rsi,rax
   14000da7b:	jb     0x14000dabd
   14000da7d:	cmp    rdx,0x8
   14000da81:	jb     0x14000da86
   14000da83:	mov    rcx,QWORD PTR [rcx]
   14000da86:	mov    rax,QWORD PTR [rbx+0x10]
   14000da8a:	lea    rcx,[rcx+rax*2]
   14000da8e:	cmp    rcx,rsi
   14000da91:	jbe    0x14000dabd
   14000da93:	cmp    rdx,0x8
   14000da97:	jb     0x14000da9e
   14000da99:	mov    rax,QWORD PTR [rbx]
   14000da9c:	jmp    0x14000daa1
   14000da9e:	mov    rax,rbx
   14000daa1:	sub    rsi,rax
   14000daa4:	mov    r9,rdi
   14000daa7:	sar    rsi,1
   14000daaa:	mov    rdx,rbx
   14000daad:	mov    r8,rsi
   14000dab0:	mov    rcx,rbx
   14000dab3:	call   0x14000d7a0
   14000dab8:	mov    rbx,rax
   14000dabb:	jmp    0x14000db3c
   14000dabd:	movabs rax,0x7ffffffffffffffe
   14000dac7:	cmp    rdi,rax
   14000daca:	ja     0x14000db54
   14000dad0:	cmp    rdx,rdi
   14000dad3:	jae    0x14000dae6
   14000dad5:	mov    r8,QWORD PTR [rbx+0x10]
   14000dad9:	mov    rdx,rdi
   14000dadc:	mov    rcx,rbx
   14000dadf:	call   0x14000d918
   14000dae4:	jmp    0x14000db00
   14000dae6:	test   rdi,rdi
   14000dae9:	jne    0x14000db05
   14000daeb:	mov    QWORD PTR [rbx+0x10],rbp
   14000daef:	cmp    rdx,0x8
   14000daf3:	jb     0x14000dafa
   14000daf5:	mov    rax,QWORD PTR [rbx]
   14000daf8:	jmp    0x14000dafd
   14000dafa:	mov    rax,rbx
   14000dafd:	mov    WORD PTR [rax],bp
   14000db00:	test   rdi,rdi
   14000db03:	je     0x14000db3c
   14000db05:	cmp    QWORD PTR [rbx+0x18],0x8
   14000db0a:	jb     0x14000db11
   14000db0c:	mov    rcx,QWORD PTR [rbx]
   14000db0f:	jmp    0x14000db14
   14000db11:	mov    rcx,rbx
   14000db14:	test   rdi,rdi
   14000db17:	je     0x14000db25
   14000db19:	lea    r8,[rdi+rdi*1]
   14000db1d:	mov    rdx,rsi
   14000db20:	call   0x14002e2f2
   14000db25:	cmp    QWORD PTR [rbx+0x18],0x8
   14000db2a:	mov    QWORD PTR [rbx+0x10],rdi
   14000db2e:	jb     0x14000db35
   14000db30:	mov    rax,QWORD PTR [rbx]
   14000db33:	jmp    0x14000db38
   14000db35:	mov    rax,rbx
   14000db38:	mov    WORD PTR [rax+rdi*2],bp
   14000db3c:	mov    rbp,QWORD PTR [rsp+0x38]
   14000db41:	mov    rax,rbx
   14000db44:	mov    rbx,QWORD PTR [rsp+0x30]
   14000db49:	mov    rsi,QWORD PTR [rsp+0x40]
   14000db4e:	add    rsp,0x20
   14000db52:	pop    rdi
   14000db53:	ret    
   14000db54:	call   0x140001d4c
   14000db59:	int3   
   14000db5a:	int3   
   14000db5b:	int3   
   14000db5c:	int3   
   14000db5d:	int3   
   14000db5e:	int3   
   14000db5f:	int3   
   14000db60:	mov    QWORD PTR [rsp+0x8],rbx
   14000db65:	mov    QWORD PTR [rsp+0x10],rsi
   14000db6a:	push   rdi
   14000db6b:	sub    rsp,0x20
   14000db6f:	cmp    QWORD PTR [rcx+0x18],0x8
   14000db74:	mov    rdi,rdx
   14000db77:	mov    rbx,rcx
   14000db7a:	jb     0x14000dbae
   14000db7c:	cmp    QWORD PTR [rdx+0x18],0x8
   14000db81:	jb     0x14000db94
   14000db83:	mov    rax,QWORD PTR [rdx]
   14000db86:	mov    r8,QWORD PTR [rcx]
   14000db89:	mov    QWORD PTR [rcx],rax
   14000db8c:	mov    QWORD PTR [rdx],r8
   14000db8f:	jmp    0x14000dc16
   14000db94:	mov    r8,QWORD PTR [rdx+0x10]
   14000db98:	mov    rsi,QWORD PTR [rcx]
   14000db9b:	add    r8,0x1
   14000db9f:	je     0x14000dba9
   14000dba1:	add    r8,r8
   14000dba4:	call   0x14002e2f2
   14000dba9:	mov    QWORD PTR [rdi],rsi
   14000dbac:	jmp    0x14000dc16
   14000dbae:	cmp    QWORD PTR [rdx+0x18],0x8
   14000dbb3:	jae    0x14000dbf8
   14000dbb5:	cmp    rcx,rdx
   14000dbb8:	je     0x14000dc16
   14000dbba:	xor    r8d,r8d
   14000dbbd:	lea    rax,[rcx+0x10]
   14000dbc1:	mov    rdx,rax
   14000dbc4:	sub    rdx,rcx
   14000dbc7:	inc    rdx
   14000dbca:	shr    rdx,1
   14000dbcd:	cmp    rcx,rax
   14000dbd0:	cmova  rdx,r8
   14000dbd4:	test   rdx,rdx
   14000dbd7:	je     0x14000dc16
   14000dbd9:	sub    rdi,rcx
   14000dbdc:	movzx  eax,WORD PTR [rdi+rbx*1]
   14000dbe0:	inc    r8
   14000dbe3:	movzx  ecx,WORD PTR [rbx]
   14000dbe6:	mov    WORD PTR [rbx],ax
   14000dbe9:	mov    WORD PTR [rdi+rbx*1],cx
   14000dbed:	lea    rbx,[rbx+0x2]
   14000dbf1:	cmp    r8,rdx
   14000dbf4:	jne    0x14000dbdc
   14000dbf6:	jmp    0x14000dc16
   14000dbf8:	mov    r8,QWORD PTR [rcx+0x10]
   14000dbfc:	mov    rsi,QWORD PTR [rdx]
   14000dbff:	add    r8,0x1
   14000dc03:	je     0x14000dc13
   14000dc05:	mov    rdx,rcx
   14000dc08:	add    r8,r8
   14000dc0b:	mov    rcx,rdi
   14000dc0e:	call   0x14002e2f2
   14000dc13:	mov    QWORD PTR [rbx],rsi
   14000dc16:	mov    rbx,QWORD PTR [rsp+0x30]
   14000dc1b:	mov    rsi,QWORD PTR [rsp+0x38]
   14000dc20:	add    rsp,0x20
   14000dc24:	pop    rdi
   14000dc25:	ret    
   14000dc26:	int3   
   14000dc27:	int3   
   14000dc28:	int3   
   14000dc29:	int3   
   14000dc2a:	int3   
   14000dc2b:	int3   
   14000dc2c:	mov    QWORD PTR [rsp+0x8],rbx
   14000dc31:	mov    QWORD PTR [rsp+0x10],rbp
   14000dc36:	mov    QWORD PTR [rsp+0x18],rsi
   14000dc3b:	push   rdi
   14000dc3c:	push   r14
   14000dc3e:	push   r15
   14000dc40:	sub    rsp,0x20
   14000dc44:	and    QWORD PTR [rcx+0x8],0x0
   14000dc49:	mov    r14,rcx
   14000dc4c:	mov    DWORD PTR [rcx+0x10],0x1
   14000dc53:	mov    rbp,r8
   14000dc56:	mov    rcx,QWORD PTR [rdx]
   14000dc59:	mov    r15,rdx
   14000dc5c:	test   rcx,rcx
   14000dc5f:	je     0x14000dc73
   14000dc61:	mov    rcx,QWORD PTR [rcx]
   14000dc64:	test   rcx,rcx
   14000dc67:	je     0x14000dc73
   14000dc69:	call   QWORD PTR [rip+0x24701]        # 0x140032370
   14000dc6f:	mov    ebx,eax
   14000dc71:	jmp    0x14000dc75
   14000dc73:	xor    ebx,ebx
   14000dc75:	mov    rax,QWORD PTR [rbp+0x0]
   14000dc79:	test   rax,rax
   14000dc7c:	je     0x14000dc90
   14000dc7e:	mov    rcx,QWORD PTR [rax]
   14000dc81:	test   rcx,rcx
   14000dc84:	je     0x14000dc90
   14000dc86:	call   QWORD PTR [rip+0x246e4]        # 0x140032370
   14000dc8c:	mov    esi,eax
   14000dc8e:	jmp    0x14000dc92
   14000dc90:	xor    esi,esi
   14000dc92:	lea    edi,[rsi+rbx*1]
   14000dc95:	cmp    edi,ebx
   14000dc97:	jb     0x14000dd2b
   14000dc9d:	mov    eax,edi
   14000dc9f:	mov    ecx,0xffffffff
   14000dca4:	add    rax,rax
   14000dca7:	cmp    rax,rcx
   14000dcaa:	ja     0x14000dd2b
   14000dcac:	mov    edx,eax
   14000dcae:	xor    ecx,ecx
   14000dcb0:	call   QWORD PTR [rip+0x246b2]        # 0x140032368
   14000dcb6:	mov    QWORD PTR [r14],rax
   14000dcb9:	mov    rcx,rax
   14000dcbc:	test   rax,rax
   14000dcbf:	jne    0x14000dcc7
   14000dcc1:	test   edi,edi
   14000dcc3:	je     0x14000dd09
   14000dcc5:	jmp    0x14000dd25
   14000dcc7:	mov    rdx,QWORD PTR [r15]
   14000dcca:	test   rdx,rdx
   14000dccd:	je     0x14000dcd2
   14000dccf:	mov    rdx,QWORD PTR [rdx]
   14000dcd2:	test   rdx,rdx
   14000dcd5:	je     0x14000dce3
   14000dcd7:	lea    r8d,[rbx+0x1]
   14000dcdb:	add    r8,r8
   14000dcde:	call   0x14002e2f2
   14000dce3:	mov    rdx,QWORD PTR [rbp+0x0]
   14000dce7:	test   rdx,rdx
   14000dcea:	je     0x14000dcef
   14000dcec:	mov    rdx,QWORD PTR [rdx]
   14000dcef:	test   rdx,rdx
   14000dcf2:	je     0x14000dd09
   14000dcf4:	mov    rax,QWORD PTR [r14]
   14000dcf7:	lea    r8d,[rsi+0x1]
   14000dcfb:	mov    ecx,ebx
   14000dcfd:	add    r8,r8
   14000dd00:	lea    rcx,[rax+rcx*2]
   14000dd04:	call   0x14002e2f2
   14000dd09:	mov    rbx,QWORD PTR [rsp+0x40]
   14000dd0e:	mov    rax,r14
   14000dd11:	mov    rbp,QWORD PTR [rsp+0x48]
   14000dd16:	mov    rsi,QWORD PTR [rsp+0x50]
   14000dd1b:	add    rsp,0x20
   14000dd1f:	pop    r15
   14000dd21:	pop    r14
   14000dd23:	pop    rdi
   14000dd24:	ret    
   14000dd25:	call   0x14000203c
   14000dd2a:	int3   
   14000dd2b:	call   0x14000203c
   14000dd30:	int3   
   14000dd31:	int3   
   14000dd32:	int3   
   14000dd33:	int3   
   14000dd34:	int3   
   14000dd35:	int3   
   14000dd36:	int3   
   14000dd37:	int3   
   14000dd38:	rex push rdi
   14000dd3a:	sub    rsp,0x30
   14000dd3e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000dd47:	mov    QWORD PTR [rsp+0x48],rbx
   14000dd4c:	mov    QWORD PTR [rsp+0x50],rsi
   14000dd51:	mov    rbx,rdx
   14000dd54:	mov    rdi,rcx
   14000dd57:	mov    ecx,0x18
   14000dd5c:	call   0x140023f10
   14000dd61:	mov    QWORD PTR [rsp+0x40],rax
   14000dd66:	mov    r8,rbx
   14000dd69:	mov    rdx,rdi
   14000dd6c:	mov    rcx,rax
   14000dd6f:	call   0x14000dc2c
   14000dd74:	mov    rsi,rax
   14000dd77:	mov    rbx,QWORD PTR [rdi]
   14000dd7a:	test   rbx,rbx
   14000dd7d:	je     0x14000ddc4
   14000dd7f:	or     ecx,0xffffffff
   14000dd82:	lock xadd DWORD PTR [rbx+0x10],ecx
   14000dd87:	cmp    ecx,0x1
   14000dd8a:	jne    0x14000ddc0
   14000dd8c:	test   rbx,rbx
   14000dd8f:	je     0x14000ddc0
   14000dd91:	mov    rcx,QWORD PTR [rbx]
   14000dd94:	test   rcx,rcx
   14000dd97:	je     0x14000dda3
   14000dd99:	call   QWORD PTR [rip+0x245b1]        # 0x140032350
   14000dd9f:	and    QWORD PTR [rbx],0x0
   14000dda3:	mov    rcx,QWORD PTR [rbx+0x8]
   14000dda7:	test   rcx,rcx
   14000ddaa:	je     0x14000ddb7
   14000ddac:	call   QWORD PTR [rip+0x24816]        # 0x1400325c8
   14000ddb2:	and    QWORD PTR [rbx+0x8],0x0
   14000ddb7:	mov    rcx,rbx
   14000ddba:	call   QWORD PTR [rip+0x24808]        # 0x1400325c8
   14000ddc0:	and    QWORD PTR [rdi],0x0
   14000ddc4:	mov    QWORD PTR [rdi],rsi
   14000ddc7:	mov    rax,rdi
   14000ddca:	mov    rbx,QWORD PTR [rsp+0x48]
   14000ddcf:	mov    rsi,QWORD PTR [rsp+0x50]
   14000ddd4:	add    rsp,0x30
   14000ddd8:	pop    rdi
   14000ddd9:	ret    
   14000ddda:	int3   
   14000dddb:	int3   
   14000dddc:	int3   
   14000dddd:	int3   
   14000ddde:	int3   
   14000dddf:	int3   
   14000dde0:	shr    rcx,0x20
   14000dde4:	mov    eax,ecx
   14000dde6:	ret    
   14000dde7:	int3   
   14000dde8:	int3   
   14000dde9:	int3   
   14000ddea:	int3   
   14000ddeb:	int3   
   14000ddec:	int3   
   14000dded:	int3   
   14000ddee:	int3   
   14000ddef:	int3   
   14000ddf0:	shr    ecx,0x10
   14000ddf3:	movzx  eax,cx
   14000ddf6:	ret    
   14000ddf7:	int3   
   14000ddf8:	int3   
   14000ddf9:	int3   
   14000ddfa:	int3   
   14000ddfb:	int3   
   14000ddfc:	int3   
   14000ddfd:	int3   
   14000ddfe:	int3   
   14000ddff:	int3   
   14000de00:	mov    eax,ecx
   14000de02:	ret    
   14000de03:	int3   
   14000de04:	int3   
   14000de05:	int3   
   14000de06:	int3   
   14000de07:	int3   
   14000de08:	int3   
   14000de09:	int3   
   14000de0a:	int3   
   14000de0b:	int3   
   14000de0c:	movzx  eax,cx
   14000de0f:	ret    
   14000de10:	int3   
   14000de11:	int3   
   14000de12:	int3   
   14000de13:	int3   
   14000de14:	int3   
   14000de15:	int3   
   14000de16:	int3   
   14000de17:	int3   
   14000de18:	mov    rdx,QWORD PTR [rcx]
   14000de1b:	xor    eax,eax
   14000de1d:	test   rdx,rdx
   14000de20:	je     0x14000de25
   14000de22:	mov    rax,QWORD PTR [rdx]
   14000de25:	ret    
   14000de26:	int3   
   14000de27:	int3   
   14000de28:	int3   
   14000de29:	int3   
   14000de2a:	int3   
   14000de2b:	int3   
   14000de2c:	mov    QWORD PTR [rsp+0x10],rbx
   14000de31:	push   rdi
   14000de32:	sub    rsp,0x20
   14000de36:	mov    rbx,QWORD PTR [rcx]
   14000de39:	mov    rdi,rcx
   14000de3c:	test   rbx,rbx
   14000de3f:	je     0x14000de86
   14000de41:	or     eax,0xffffffff
   14000de44:	lock xadd DWORD PTR [rbx+0x10],eax
   14000de49:	cmp    eax,0x1
   14000de4c:	jne    0x14000de82
   14000de4e:	test   rbx,rbx
   14000de51:	je     0x14000de82
   14000de53:	mov    rcx,QWORD PTR [rbx]
   14000de56:	test   rcx,rcx
   14000de59:	je     0x14000de65
   14000de5b:	call   QWORD PTR [rip+0x244ef]        # 0x140032350
   14000de61:	and    QWORD PTR [rbx],0x0
   14000de65:	mov    rcx,QWORD PTR [rbx+0x8]
   14000de69:	test   rcx,rcx
   14000de6c:	je     0x14000de79
   14000de6e:	call   QWORD PTR [rip+0x24754]        # 0x1400325c8
   14000de74:	and    QWORD PTR [rbx+0x8],0x0
   14000de79:	mov    rcx,rbx
   14000de7c:	call   QWORD PTR [rip+0x24746]        # 0x1400325c8
   14000de82:	and    QWORD PTR [rdi],0x0
   14000de86:	mov    rbx,QWORD PTR [rsp+0x38]
   14000de8b:	add    rsp,0x20
   14000de8f:	pop    rdi
   14000de90:	ret    
   14000de91:	int3   
   14000de92:	int3   
   14000de93:	int3   
   14000de94:	int3   
   14000de95:	int3   
   14000de96:	int3   
   14000de97:	int3   
   14000de98:	sub    rsp,0x28
   14000de9c:	mov    rcx,QWORD PTR [rcx]
   14000de9f:	or     eax,0xffffffff
   14000dea2:	lock xadd DWORD PTR [rcx+0x8],eax
   14000dea7:	dec    eax
   14000dea9:	cmp    eax,0x80000000
   14000deae:	jne    0x14000deb5
   14000deb0:	call   0x140029c90
   14000deb5:	add    rsp,0x28
   14000deb9:	ret    
   14000deba:	int3   
   14000debb:	int3   
   14000debc:	int3   
   14000debd:	int3   
   14000debe:	int3   
   14000debf:	int3   
   14000dec0:	mov    rcx,QWORD PTR [rcx]
   14000dec3:	rex.W jmp QWORD PTR [rip+0x2422e]        # 0x1400320f8
   14000deca:	int3   
   14000decb:	int3   
   14000decc:	int3   
   14000decd:	int3   
   14000dece:	int3   
   14000decf:	int3   
   14000ded0:	mov    QWORD PTR [rsp+0x8],rcx
   14000ded5:	push   rdi
   14000ded6:	sub    rsp,0x30
   14000deda:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000dee3:	mov    QWORD PTR [rsp+0x48],rbx
   14000dee8:	mov    rdi,r8
   14000deeb:	mov    rbx,rdx
   14000deee:	mov    ecx,0x28
   14000def3:	call   0x140023f10
   14000def8:	mov    QWORD PTR [rsp+0x40],rax
   14000defd:	test   rbx,rbx
   14000df00:	jne    0x14000df08
   14000df02:	mov    rbx,rax
   14000df05:	mov    rdi,rax
   14000df08:	mov    QWORD PTR [rax],rbx
   14000df0b:	lea    rcx,[rax+0x8]
   14000df0f:	test   rcx,rcx
   14000df12:	je     0x14000df17
   14000df14:	mov    QWORD PTR [rcx],rdi
   14000df17:	mov    rbx,QWORD PTR [rsp+0x48]
   14000df1c:	add    rsp,0x30
   14000df20:	pop    rdi
   14000df21:	ret    
   14000df22:	int3   
   14000df23:	int3   
   14000df24:	int3   
   14000df25:	int3   
   14000df26:	int3   
   14000df27:	int3   
   14000df28:	sub    rsp,0x38
   14000df2c:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000df35:	test   rdx,rdx
   14000df38:	je     0x14000df4f
   14000df3a:	test   rcx,rcx
   14000df3d:	je     0x14000df45
   14000df3f:	mov    rax,QWORD PTR [r8]
   14000df42:	mov    QWORD PTR [rcx],rax
   14000df45:	add    rcx,0x8
   14000df49:	sub    rdx,0x1
   14000df4d:	jne    0x14000df3a
   14000df4f:	add    rsp,0x38
   14000df53:	ret    
   14000df54:	int3   
   14000df55:	int3   
   14000df56:	int3   
   14000df57:	int3   
   14000df58:	int3   
   14000df59:	int3   
   14000df5a:	int3   
   14000df5b:	int3   
   14000df5c:	sub    rsp,0x38
   14000df60:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000df69:	xor    r11d,r11d
   14000df6c:	mov    r10d,r11d
   14000df6f:	mov    r9,rdx
   14000df72:	sub    r9,rcx
   14000df75:	add    r9,0x7
   14000df79:	shr    r9,0x3
   14000df7d:	cmp    rcx,rdx
   14000df80:	cmova  r9,r11
   14000df84:	test   r9,r9
   14000df87:	je     0x14000dfa4
   14000df89:	sub    rcx,r8
   14000df8c:	test   r8,r8
   14000df8f:	je     0x14000df98
   14000df91:	mov    rax,QWORD PTR [rcx+r8*1]
   14000df95:	mov    QWORD PTR [r8],rax
   14000df98:	add    r8,0x8
   14000df9c:	inc    r10
   14000df9f:	cmp    r10,r9
   14000dfa2:	jne    0x14000df8c
   14000dfa4:	mov    rax,r8
   14000dfa7:	add    rsp,0x38
   14000dfab:	ret    
   14000dfac:	int3   
   14000dfad:	int3   
   14000dfae:	int3   
   14000dfaf:	int3   
   14000dfb0:	int3   
   14000dfb1:	int3   
   14000dfb2:	int3   
   14000dfb3:	int3   
   14000dfb4:	mov    QWORD PTR [rsp+0x18],r8
   14000dfb9:	mov    QWORD PTR [rsp+0x10],rdx
   14000dfbe:	push   rbx
   14000dfbf:	push   rsi
   14000dfc0:	push   rdi
   14000dfc1:	push   r12
   14000dfc3:	push   r13
   14000dfc5:	push   r14
   14000dfc7:	push   r15
   14000dfc9:	sub    rsp,0x40
   14000dfcd:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14000dfd6:	mov    r14,r9
   14000dfd9:	mov    r15,r8
   14000dfdc:	mov    rdi,rcx
   14000dfdf:	mov    r13,r8
   14000dfe2:	sub    r13,QWORD PTR [rcx]
   14000dfe5:	sar    r13,0x3
   14000dfe9:	xor    r12d,r12d
   14000dfec:	test   r9,r9
   14000dfef:	je     0x14000e22a
   14000dff5:	mov    rbx,QWORD PTR [rcx+0x10]
   14000dff9:	mov    rsi,QWORD PTR [rcx+0x8]
   14000dffd:	mov    rax,rbx
   14000e000:	sub    rax,rsi
   14000e003:	sar    rax,0x3
   14000e007:	cmp    rax,r9
   14000e00a:	jae    0x14000e115
   14000e010:	sub    rsi,QWORD PTR [rcx]
   14000e013:	sar    rsi,0x3
   14000e017:	movabs r8,0x1fffffffffffffff
   14000e021:	mov    rax,r8
   14000e024:	sub    rax,rsi
   14000e027:	cmp    rax,r9
   14000e02a:	jae    0x14000e032
   14000e02c:	call   0x14000d388
   14000e031:	int3   
   14000e032:	lea    rdx,[rsi+r9*1]
   14000e036:	sub    rbx,QWORD PTR [rcx]
   14000e039:	sar    rbx,0x3
   14000e03d:	mov    rcx,rbx
   14000e040:	shr    rcx,1
   14000e043:	mov    rax,r8
   14000e046:	sub    rax,rcx
   14000e049:	cmp    rax,rbx
   14000e04c:	jae    0x14000e053
   14000e04e:	mov    rbx,r12
   14000e051:	jmp    0x14000e056
   14000e053:	add    rbx,rcx
   14000e056:	cmp    rbx,rdx
   14000e059:	cmovb  rbx,rdx
   14000e05d:	mov    rsi,r12
   14000e060:	mov    QWORD PTR [rsp+0x80],r12
   14000e068:	test   rbx,rbx
   14000e06b:	je     0x14000e099
   14000e06d:	cmp    rbx,r8
   14000e070:	ja     0x14000e093
   14000e072:	mov    rcx,rbx
   14000e075:	shl    rcx,0x3
   14000e079:	call   0x140023f10
   14000e07e:	mov    rsi,rax
   14000e081:	mov    QWORD PTR [rsp+0x80],rax
   14000e089:	mov    r15,QWORD PTR [rsp+0x90]
   14000e091:	jmp    0x14000e099
   14000e093:	call   0x14000203c
   14000e098:	int3   
   14000e099:	sub    r15,QWORD PTR [rdi]
   14000e09c:	sar    r15,0x3
   14000e0a0:	lea    rcx,[rsi+r15*8]
   14000e0a4:	mov    r8,QWORD PTR [rsp+0xa0]
   14000e0ac:	mov    rdx,r14
   14000e0af:	call   0x14000df28
   14000e0b4:	mov    r8,rsi
   14000e0b7:	mov    rdx,QWORD PTR [rsp+0x90]
   14000e0bf:	mov    rcx,QWORD PTR [rdi]
   14000e0c2:	call   0x14000df5c
   14000e0c7:	lea    rax,[r15+r14*1]
   14000e0cb:	lea    r8,[rsi+rax*8]
   14000e0cf:	mov    rdx,QWORD PTR [rdi+0x8]
   14000e0d3:	mov    rcx,QWORD PTR [rsp+0x90]
   14000e0db:	call   0x14000df5c
   14000e0e0:	nop
   14000e0e1:	mov    rax,QWORD PTR [rdi+0x8]
   14000e0e5:	sub    rax,QWORD PTR [rdi]
   14000e0e8:	sar    rax,0x3
   14000e0ec:	add    r14,rax
   14000e0ef:	cmp    QWORD PTR [rdi],r12
   14000e0f2:	je     0x14000e0fd
   14000e0f4:	mov    rcx,QWORD PTR [rdi]
   14000e0f7:	call   QWORD PTR [rip+0x244cb]        # 0x1400325c8
   14000e0fd:	lea    rax,[rsi+rbx*8]
   14000e101:	mov    QWORD PTR [rdi+0x10],rax
   14000e105:	lea    rax,[rsi+r14*8]
   14000e109:	mov    QWORD PTR [rdi+0x8],rax
   14000e10d:	mov    QWORD PTR [rdi],rsi
   14000e110:	jmp    0x14000e22a
   14000e115:	mov    rax,rsi
   14000e118:	sub    rax,r8
   14000e11b:	sar    rax,0x3
   14000e11f:	mov    rbx,QWORD PTR [rsp+0xa0]
   14000e127:	mov    rdx,rsi
   14000e12a:	mov    rbx,QWORD PTR [rbx]
   14000e12d:	cmp    rax,r9
   14000e130:	jae    0x14000e1c6
   14000e136:	mov    QWORD PTR [rsp+0x80],rbx
   14000e13e:	mov    rax,r9
   14000e141:	shl    rax,0x3
   14000e145:	mov    QWORD PTR [rsp+0x98],rax
   14000e14d:	add    r8,rax
   14000e150:	mov    rcx,r15
   14000e153:	call   0x14000df5c
   14000e158:	nop
   14000e159:	mov    rcx,QWORD PTR [rdi+0x8]
   14000e15d:	mov    rax,rcx
   14000e160:	sub    rax,QWORD PTR [rsp+0x90]
   14000e168:	sar    rax,0x3
   14000e16c:	sub    r14,rax
   14000e16f:	lea    r8,[rsp+0x80]
   14000e177:	mov    rdx,r14
   14000e17a:	call   0x14000df28
   14000e17f:	nop
   14000e180:	mov    rcx,QWORD PTR [rsp+0x98]
   14000e188:	add    QWORD PTR [rdi+0x8],rcx
   14000e18c:	mov    rax,QWORD PTR [rdi+0x8]
   14000e190:	sub    rax,rcx
   14000e193:	mov    rcx,QWORD PTR [rsp+0x90]
   14000e19b:	mov    rdx,rax
   14000e19e:	sub    rdx,rcx
   14000e1a1:	add    rdx,0x7
   14000e1a5:	shr    rdx,0x3
   14000e1a9:	cmp    rcx,rax
   14000e1ac:	cmova  rdx,r12
   14000e1b0:	test   rdx,rdx
   14000e1b3:	je     0x14000e22a
   14000e1b5:	mov    QWORD PTR [rcx],rbx
   14000e1b8:	lea    rcx,[rcx+0x8]
   14000e1bc:	inc    r12
   14000e1bf:	cmp    r12,rdx
   14000e1c2:	jne    0x14000e1b5
   14000e1c4:	jmp    0x14000e22a
   14000e1c6:	mov    r15,r9
   14000e1c9:	shl    r15,0x3
   14000e1cd:	mov    r14,rsi
   14000e1d0:	sub    r14,r15
   14000e1d3:	mov    r8,rsi
   14000e1d6:	mov    rcx,r14
   14000e1d9:	call   0x14000df5c
   14000e1de:	mov    QWORD PTR [rdi+0x8],rax
   14000e1e2:	mov    rdx,QWORD PTR [rsp+0x90]
   14000e1ea:	cmp    rdx,r14
   14000e1ed:	je     0x14000e20a
   14000e1ef:	sub    rsi,r14
   14000e1f2:	sub    r14,0x8
   14000e1f6:	mov    rax,QWORD PTR [r14]
   14000e1f9:	mov    QWORD PTR [r14+rsi*1],rax
   14000e1fd:	mov    rdx,QWORD PTR [rsp+0x90]
   14000e205:	cmp    rdx,r14
   14000e208:	jne    0x14000e1f2
   14000e20a:	lea    rax,[r15+rdx*1]
   14000e20e:	cmp    rdx,rax
   14000e211:	je     0x14000e22a
   14000e213:	mov    QWORD PTR [rdx],rbx
   14000e216:	add    rdx,0x8
   14000e21a:	mov    rcx,QWORD PTR [rsp+0x90]
   14000e222:	add    rcx,r15
   14000e225:	cmp    rdx,rcx
   14000e228:	jne    0x14000e213
   14000e22a:	mov    rax,QWORD PTR [rdi]
   14000e22d:	lea    rcx,[rax+r13*8]
   14000e231:	mov    rax,QWORD PTR [rsp+0x88]
   14000e239:	mov    QWORD PTR [rax],rcx
   14000e23c:	add    rsp,0x40
   14000e240:	pop    r15
   14000e242:	pop    r14
   14000e244:	pop    r13
   14000e246:	pop    r12
   14000e248:	pop    rdi
   14000e249:	pop    rsi
   14000e24a:	pop    rbx
   14000e24b:	ret    
   14000e24c:	int3   
   14000e24d:	int3   
   14000e24e:	int3   
   14000e24f:	int3   
   14000e250:	int3   
   14000e251:	int3   
   14000e252:	int3   
   14000e253:	int3   
   14000e254:	sub    rsp,0x28
   14000e258:	mov    rcx,QWORD PTR [rcx]
   14000e25b:	test   rcx,rcx
   14000e25e:	je     0x14000e272
   14000e260:	or     eax,0xffffffff
   14000e263:	lock xadd DWORD PTR [rcx],eax
   14000e267:	cmp    eax,0x1
   14000e26a:	jne    0x14000e272
   14000e26c:	call   QWORD PTR [rip+0x24356]        # 0x1400325c8
   14000e272:	add    rsp,0x28
   14000e276:	ret    
   14000e277:	int3   
   14000e278:	int3   
   14000e279:	int3   
   14000e27a:	int3   
   14000e27b:	int3   
   14000e27c:	int3   
   14000e27d:	int3   
   14000e27e:	int3   
   14000e27f:	int3   
   14000e280:	mov    QWORD PTR [rsp+0x10],rbx
   14000e285:	mov    QWORD PTR [rsp+0x18],rsi
   14000e28a:	push   rdi
   14000e28b:	sub    rsp,0x20
   14000e28f:	mov    rbx,rcx
   14000e292:	mov    rcx,QWORD PTR [rcx+0x10]
   14000e296:	test   rcx,rcx
   14000e299:	je     0x14000e2b0
   14000e29b:	call   QWORD PTR [rip+0x24327]        # 0x1400325c8
   14000e2a1:	and    QWORD PTR [rbx+0x10],0x0
   14000e2a6:	and    QWORD PTR [rbx+0x18],0x0
   14000e2ab:	and    QWORD PTR [rbx+0x20],0x0
   14000e2b0:	mov    rax,QWORD PTR [rbx]
   14000e2b3:	mov    rdi,QWORD PTR [rax]
   14000e2b6:	mov    QWORD PTR [rax],rax
   14000e2b9:	mov    rax,QWORD PTR [rbx]
   14000e2bc:	mov    QWORD PTR [rax+0x8],rax
   14000e2c0:	and    QWORD PTR [rbx+0x8],0x0
   14000e2c5:	cmp    rdi,QWORD PTR [rbx]
   14000e2c8:	je     0x14000e2f9
   14000e2ca:	mov    rcx,QWORD PTR [rdi+0x20]
   14000e2ce:	mov    rsi,QWORD PTR [rdi]
   14000e2d1:	test   rcx,rcx
   14000e2d4:	je     0x14000e2e8
   14000e2d6:	or     eax,0xffffffff
   14000e2d9:	lock xadd DWORD PTR [rcx],eax
   14000e2dd:	cmp    eax,0x1
   14000e2e0:	jne    0x14000e2e8
   14000e2e2:	call   QWORD PTR [rip+0x242e0]        # 0x1400325c8
   14000e2e8:	mov    rcx,rdi
   14000e2eb:	call   QWORD PTR [rip+0x242d7]        # 0x1400325c8
   14000e2f1:	mov    rdi,rsi
   14000e2f4:	cmp    rsi,QWORD PTR [rbx]
   14000e2f7:	jne    0x14000e2ca
   14000e2f9:	mov    rcx,QWORD PTR [rbx]
   14000e2fc:	mov    rbx,QWORD PTR [rsp+0x38]
   14000e301:	mov    rsi,QWORD PTR [rsp+0x40]
   14000e306:	add    rsp,0x20
   14000e30a:	pop    rdi
   14000e30b:	rex.W jmp QWORD PTR [rip+0x242b6]        # 0x1400325c8
   14000e312:	int3   
   14000e313:	int3   
   14000e314:	int3   
   14000e315:	int3   
   14000e316:	int3   
   14000e317:	int3   
   14000e318:	mov    r11,rsp
   14000e31b:	mov    QWORD PTR [r11+0x20],r9
   14000e31f:	sub    rsp,0x58
   14000e323:	and    QWORD PTR [r11-0x18],0x0
   14000e328:	lea    rax,[r11+0x28]
   14000e32c:	mov    QWORD PTR [r11-0x20],0x4
   14000e334:	lea    r8,[rip+0x28ddd]        # 0x140037118
   14000e33b:	mov    QWORD PTR [r11-0x28],rax
   14000e33f:	mov    edx,0xe
   14000e344:	lea    rax,[r11+0x20]
   14000e348:	movzx  r9d,dx
   14000e34c:	mov    QWORD PTR [r11-0x30],0x8
   14000e354:	mov    edx,0x2b
   14000e359:	mov    QWORD PTR [r11-0x38],rax
   14000e35d:	call   QWORD PTR [rip+0x23cbd]        # 0x140032020
   14000e363:	add    rsp,0x58
   14000e367:	ret    
   14000e368:	int3   
   14000e369:	int3   
   14000e36a:	int3   
   14000e36b:	int3   
   14000e36c:	int3   
   14000e36d:	int3   
   14000e36e:	int3   
   14000e36f:	int3   
   14000e370:	sub    rsp,0x58
   14000e374:	xor    r10d,r10d
   14000e377:	test   r9,r9
   14000e37a:	je     0x14000e3a0
   14000e37c:	cmp    WORD PTR [r9],r10w
   14000e380:	jne    0x14000e388
   14000e382:	lea    edx,[r10+0xe]
   14000e386:	jmp    0x14000e3a5
   14000e388:	or     rax,0xffffffffffffffff
   14000e38c:	inc    rax
   14000e38f:	cmp    WORD PTR [r9+rax*2],r10w
   14000e394:	jne    0x14000e38c
   14000e396:	lea    rdx,[rax*2+0x2]
   14000e39e:	jmp    0x14000e3a5
   14000e3a0:	mov    edx,0xa
   14000e3a5:	test   r9,r9
   14000e3a8:	je     0x14000e3bb
   14000e3aa:	cmp    WORD PTR [r9],r10w
   14000e3ae:	lea    rax,[rip+0x26aa3]        # 0x140034e58
   14000e3b5:	cmove  r9,rax
   14000e3b9:	jmp    0x14000e3c2
   14000e3bb:	lea    r9,[rip+0x270de]        # 0x1400354a0
   14000e3c2:	mov    rax,QWORD PTR [rsp+0x80]
   14000e3ca:	mov    r8d,0x1d
   14000e3d0:	mov    QWORD PTR [rsp+0x40],r10
   14000e3d5:	mov    QWORD PTR [rsp+0x38],0x10
   14000e3de:	mov    QWORD PTR [rsp+0x30],rax
   14000e3e3:	mov    QWORD PTR [rsp+0x28],rdx
   14000e3e8:	mov    edx,0x2b
   14000e3ed:	mov    QWORD PTR [rsp+0x20],r9
   14000e3f2:	movzx  r9d,r8w
   14000e3f6:	lea    r8,[rip+0x28d1b]        # 0x140037118
   14000e3fd:	call   QWORD PTR [rip+0x23c1d]        # 0x140032020
   14000e403:	add    rsp,0x58
   14000e407:	ret    
   14000e408:	int3   
   14000e409:	int3   
   14000e40a:	int3   
   14000e40b:	int3   
   14000e40c:	int3   
   14000e40d:	int3   
   14000e40e:	int3   
   14000e40f:	int3   
   14000e410:	mov    QWORD PTR [rsp+0x8],rbx
   14000e415:	mov    DWORD PTR [rsp+0x20],r9d
   14000e41a:	push   rsi
   14000e41b:	sub    rsp,0x80
   14000e422:	mov    r8,QWORD PTR [rsp+0xc0]
   14000e42a:	or     r9,0xffffffffffffffff
   14000e42e:	xor    ebx,ebx
   14000e430:	mov    r10d,0xe
   14000e436:	test   r8,r8
   14000e439:	je     0x14000e45d
   14000e43b:	cmp    WORD PTR [r8],bx
   14000e43f:	jne    0x14000e446
   14000e441:	mov    r11d,r10d
   14000e444:	jmp    0x14000e463
   14000e446:	mov    rax,r9
   14000e449:	inc    rax
   14000e44c:	cmp    WORD PTR [r8+rax*2],bx
   14000e451:	jne    0x14000e449
   14000e453:	lea    r11,[rax*2+0x2]
   14000e45b:	jmp    0x14000e463
   14000e45d:	mov    r11d,0xa
   14000e463:	lea    rsi,[rip+0x269ee]        # 0x140034e58
   14000e46a:	test   r8,r8
   14000e46d:	je     0x14000e479
   14000e46f:	cmp    WORD PTR [r8],bx
   14000e473:	cmove  r8,rsi
   14000e477:	jmp    0x14000e480
   14000e479:	lea    r8,[rip+0x27020]        # 0x1400354a0
   14000e480:	mov    rax,QWORD PTR [rsp+0xb0]
   14000e488:	test   rax,rax
   14000e48b:	je     0x14000e4a6
   14000e48d:	cmp    WORD PTR [rax],bx
   14000e490:	je     0x14000e4ac
   14000e492:	inc    r9
   14000e495:	cmp    WORD PTR [rax+r9*2],bx
   14000e49a:	jne    0x14000e492
   14000e49c:	lea    r10,[r9*2+0x2]
   14000e4a4:	jmp    0x14000e4ac
   14000e4a6:	mov    r10d,0xa
   14000e4ac:	test   rax,rax
   14000e4af:	je     0x14000e4ba
   14000e4b1:	cmp    WORD PTR [rax],bx
   14000e4b4:	cmove  rax,rsi
   14000e4b8:	jmp    0x14000e4c1
   14000e4ba:	lea    rax,[rip+0x26fdf]        # 0x1400354a0
   14000e4c1:	mov    QWORD PTR [rsp+0x70],rbx
   14000e4c6:	lea    r9,[rsp+0xc8]
   14000e4ce:	mov    ebx,0x4
   14000e4d3:	mov    QWORD PTR [rsp+0x68],rbx
   14000e4d8:	mov    QWORD PTR [rsp+0x60],r9
   14000e4dd:	mov    QWORD PTR [rsp+0x58],r11
   14000e4e2:	mov    QWORD PTR [rsp+0x50],r8
   14000e4e7:	lea    r8,[rsp+0xb8]
   14000e4ef:	mov    QWORD PTR [rsp+0x48],rbx
   14000e4f4:	mov    QWORD PTR [rsp+0x40],r8
   14000e4f9:	lea    r8,[rip+0x28c18]        # 0x140037118
   14000e500:	mov    QWORD PTR [rsp+0x38],r10
   14000e505:	mov    QWORD PTR [rsp+0x30],rax
   14000e50a:	lea    rax,[rsp+0xa8]
   14000e512:	movzx  r9d,dx
   14000e516:	lea    edx,[rbx+0x27]
   14000e519:	mov    QWORD PTR [rsp+0x28],rbx
   14000e51e:	mov    QWORD PTR [rsp+0x20],rax
   14000e523:	call   QWORD PTR [rip+0x23af7]        # 0x140032020
   14000e529:	mov    rbx,QWORD PTR [rsp+0x90]
   14000e531:	add    rsp,0x80
   14000e538:	pop    rsi
   14000e539:	ret    
   14000e53a:	int3   
   14000e53b:	int3   
   14000e53c:	int3   
   14000e53d:	int3   
   14000e53e:	int3   
   14000e53f:	int3   
   14000e540:	mov    QWORD PTR [rsp+0x8],rbx
   14000e545:	mov    DWORD PTR [rsp+0x20],r9d
   14000e54a:	push   rdi
   14000e54b:	sub    rsp,0xc0
   14000e552:	mov    rdx,QWORD PTR [rsp+0x100]
   14000e55a:	mov    ebx,0xa
   14000e55f:	or     r8,0xffffffffffffffff
   14000e563:	xor    r11d,r11d
   14000e566:	lea    r9d,[rbx+0x4]
   14000e56a:	test   rdx,rdx
   14000e56d:	je     0x14000e591
   14000e56f:	cmp    WORD PTR [rdx],r11w
   14000e573:	jne    0x14000e57a
   14000e575:	mov    r10d,r9d
   14000e578:	jmp    0x14000e594
   14000e57a:	mov    rax,r8
   14000e57d:	inc    rax
   14000e580:	cmp    WORD PTR [rdx+rax*2],r11w
   14000e585:	jne    0x14000e57d
   14000e587:	lea    r10,[rax*2+0x2]
   14000e58f:	jmp    0x14000e594
   14000e591:	mov    r10,rbx
   14000e594:	lea    rdi,[rip+0x268bd]        # 0x140034e58
   14000e59b:	test   rdx,rdx
   14000e59e:	je     0x14000e5aa
   14000e5a0:	cmp    WORD PTR [rdx],r11w
   14000e5a4:	cmove  rdx,rdi
   14000e5a8:	jmp    0x14000e5b1
   14000e5aa:	lea    rdx,[rip+0x26eef]        # 0x1400354a0
   14000e5b1:	mov    rax,QWORD PTR [rsp+0xf0]
   14000e5b9:	test   rax,rax
   14000e5bc:	je     0x14000e5d8
   14000e5be:	cmp    WORD PTR [rax],r11w
   14000e5c2:	je     0x14000e5db
   14000e5c4:	inc    r8
   14000e5c7:	cmp    WORD PTR [rax+r8*2],r11w
   14000e5cc:	jne    0x14000e5c4
   14000e5ce:	lea    r9,[r8*2+0x2]
   14000e5d6:	jmp    0x14000e5db
   14000e5d8:	mov    r9,rbx
   14000e5db:	test   rax,rax
   14000e5de:	je     0x14000e5ea
   14000e5e0:	cmp    WORD PTR [rax],r11w
   14000e5e4:	cmove  rax,rdi
   14000e5e8:	jmp    0x14000e5f1
   14000e5ea:	lea    rax,[rip+0x26eaf]        # 0x1400354a0
   14000e5f1:	mov    QWORD PTR [rsp+0xb0],r11
   14000e5f9:	lea    r8,[rsp+0x128]
   14000e601:	mov    edi,0x10
   14000e606:	lea    ebx,[rdi-0xc]
   14000e609:	lea    r11d,[rdi-0x8]
   14000e60d:	mov    QWORD PTR [rsp+0xa8],r11
   14000e615:	mov    QWORD PTR [rsp+0xa0],r8
   14000e61d:	lea    r8,[rsp+0x120]
   14000e625:	mov    QWORD PTR [rsp+0x98],rbx
   14000e62d:	mov    QWORD PTR [rsp+0x90],r8
   14000e635:	lea    r8,[rsp+0x118]
   14000e63d:	mov    QWORD PTR [rsp+0x88],r11
   14000e645:	mov    QWORD PTR [rsp+0x80],r8
   14000e64d:	lea    r8,[rsp+0x110]
   14000e655:	mov    QWORD PTR [rsp+0x78],rbx
   14000e65a:	mov    QWORD PTR [rsp+0x70],r8
   14000e65f:	lea    r8,[rsp+0x108]
   14000e667:	mov    QWORD PTR [rsp+0x68],rbx
   14000e66c:	mov    QWORD PTR [rsp+0x60],r8
   14000e671:	lea    r8,[rip+0x28aa0]        # 0x140037118
   14000e678:	mov    QWORD PTR [rsp+0x58],r10
   14000e67d:	mov    QWORD PTR [rsp+0x50],rdx
   14000e682:	lea    rdx,[rsp+0xf8]
   14000e68a:	mov    QWORD PTR [rsp+0x48],rbx
   14000e68f:	mov    QWORD PTR [rsp+0x40],rdx
   14000e694:	lea    edx,[rdi+0x1b]
   14000e697:	mov    QWORD PTR [rsp+0x38],r9
   14000e69c:	mov    QWORD PTR [rsp+0x30],rax
   14000e6a1:	lea    rax,[rsp+0xe8]
   14000e6a9:	mov    QWORD PTR [rsp+0x28],rbx
   14000e6ae:	movzx  r9d,di
   14000e6b2:	mov    QWORD PTR [rsp+0x20],rax
   14000e6b7:	call   QWORD PTR [rip+0x23963]        # 0x140032020
   14000e6bd:	mov    rbx,QWORD PTR [rsp+0xd0]
   14000e6c5:	add    rsp,0xc0
   14000e6cc:	pop    rdi
   14000e6cd:	ret    
   14000e6ce:	int3   
   14000e6cf:	int3   
   14000e6d0:	int3   
   14000e6d1:	int3   
   14000e6d2:	int3   
   14000e6d3:	int3   
   14000e6d4:	mov    r11,rsp
   14000e6d7:	mov    DWORD PTR [r11+0x20],r9d
   14000e6db:	sub    rsp,0x68
   14000e6df:	and    QWORD PTR [r11-0x18],0x0
   14000e6e4:	lea    rax,[r11+0x30]
   14000e6e8:	mov    r8d,0xa
   14000e6ee:	movzx  r9d,r8w
   14000e6f2:	lea    edx,[r8-0x6]
   14000e6f6:	mov    QWORD PTR [r11-0x20],rdx
   14000e6fa:	lea    r8,[rip+0x28a17]        # 0x140037118
   14000e701:	mov    QWORD PTR [r11-0x28],rax
   14000e705:	lea    rax,[r11+0x28]
   14000e709:	mov    QWORD PTR [r11-0x30],rdx
   14000e70d:	mov    QWORD PTR [r11-0x38],rax
   14000e711:	lea    rax,[r11+0x20]
   14000e715:	mov    QWORD PTR [r11-0x40],rdx
   14000e719:	mov    edx,0x2b
   14000e71e:	mov    QWORD PTR [r11-0x48],rax
   14000e722:	call   QWORD PTR [rip+0x238f8]        # 0x140032020
   14000e728:	add    rsp,0x68
   14000e72c:	ret    
   14000e72d:	int3   
   14000e72e:	int3   
   14000e72f:	int3   
   14000e730:	int3   
   14000e731:	int3   
   14000e732:	int3   
   14000e733:	int3   
   14000e734:	mov    QWORD PTR [rsp+0x8],rbx
   14000e739:	mov    QWORD PTR [rsp+0x20],r9
   14000e73e:	push   rdi
   14000e73f:	sub    rsp,0xc0
   14000e746:	mov    rdx,QWORD PTR [rsp+0x120]
   14000e74e:	mov    ebx,0xa
   14000e753:	or     r8,0xffffffffffffffff
   14000e757:	xor    r11d,r11d
   14000e75a:	lea    r9d,[rbx+0x4]
   14000e75e:	test   rdx,rdx
   14000e761:	je     0x14000e785
   14000e763:	cmp    WORD PTR [rdx],r11w
   14000e767:	jne    0x14000e76e
   14000e769:	mov    r10d,r9d
   14000e76c:	jmp    0x14000e788
   14000e76e:	mov    rax,r8
   14000e771:	inc    rax
   14000e774:	cmp    WORD PTR [rdx+rax*2],r11w
   14000e779:	jne    0x14000e771
   14000e77b:	lea    r10,[rax*2+0x2]
   14000e783:	jmp    0x14000e788
   14000e785:	mov    r10,rbx
   14000e788:	lea    rdi,[rip+0x266c9]        # 0x140034e58
   14000e78f:	test   rdx,rdx
   14000e792:	je     0x14000e79e
   14000e794:	cmp    WORD PTR [rdx],r11w
   14000e798:	cmove  rdx,rdi
   14000e79c:	jmp    0x14000e7a5
   14000e79e:	lea    rdx,[rip+0x26cfb]        # 0x1400354a0
   14000e7a5:	mov    rax,QWORD PTR [rsp+0x110]
   14000e7ad:	test   rax,rax
   14000e7b0:	je     0x14000e7cc
   14000e7b2:	cmp    WORD PTR [rax],r11w
   14000e7b6:	je     0x14000e7cf
   14000e7b8:	inc    r8
   14000e7bb:	cmp    WORD PTR [rax+r8*2],r11w
   14000e7c0:	jne    0x14000e7b8
   14000e7c2:	lea    r9,[r8*2+0x2]
   14000e7ca:	jmp    0x14000e7cf
   14000e7cc:	mov    r9,rbx
   14000e7cf:	test   rax,rax
   14000e7d2:	je     0x14000e7de
   14000e7d4:	cmp    WORD PTR [rax],r11w
   14000e7d8:	cmove  rax,rdi
   14000e7dc:	jmp    0x14000e7e5
   14000e7de:	lea    rax,[rip+0x26cbb]        # 0x1400354a0
   14000e7e5:	mov    QWORD PTR [rsp+0xb0],r11
   14000e7ed:	lea    r8,[rsp+0x128]
   14000e7f5:	mov    ebx,0x11
   14000e7fa:	lea    r11d,[rbx-0xd]
   14000e7fe:	mov    QWORD PTR [rsp+0xa8],r11
   14000e806:	mov    QWORD PTR [rsp+0xa0],r8
   14000e80e:	lea    r8,[rip+0x28903]        # 0x140037118
   14000e815:	mov    QWORD PTR [rsp+0x98],r10
   14000e81d:	mov    QWORD PTR [rsp+0x90],rdx
   14000e825:	lea    rdx,[rsp+0x118]
   14000e82d:	mov    QWORD PTR [rsp+0x88],r11
   14000e835:	mov    QWORD PTR [rsp+0x80],rdx
   14000e83d:	lea    edx,[rbx-0x9]
   14000e840:	mov    QWORD PTR [rsp+0x78],r9
   14000e845:	mov    QWORD PTR [rsp+0x70],rax
   14000e84a:	lea    rax,[rsp+0x108]
   14000e852:	mov    QWORD PTR [rsp+0x68],r11
   14000e857:	mov    QWORD PTR [rsp+0x60],rax
   14000e85c:	lea    rax,[rsp+0x100]
   14000e864:	mov    QWORD PTR [rsp+0x58],r11
   14000e869:	mov    QWORD PTR [rsp+0x50],rax
   14000e86e:	lea    rax,[rsp+0xf8]
   14000e876:	mov    QWORD PTR [rsp+0x48],rdx
   14000e87b:	mov    QWORD PTR [rsp+0x40],rax
   14000e880:	lea    rax,[rsp+0xf0]
   14000e888:	mov    QWORD PTR [rsp+0x38],r11
   14000e88d:	mov    QWORD PTR [rsp+0x30],rax
   14000e892:	lea    rax,[rsp+0xe8]
   14000e89a:	mov    QWORD PTR [rsp+0x28],rdx
   14000e89f:	lea    edx,[rbx+0x1a]
   14000e8a2:	movzx  r9d,bx
   14000e8a6:	mov    QWORD PTR [rsp+0x20],rax
   14000e8ab:	call   QWORD PTR [rip+0x2376f]        # 0x140032020
   14000e8b1:	mov    rbx,QWORD PTR [rsp+0xd0]
   14000e8b9:	add    rsp,0xc0
   14000e8c0:	pop    rdi
   14000e8c1:	ret    
   14000e8c2:	int3   
   14000e8c3:	int3   
   14000e8c4:	int3   
   14000e8c5:	int3   
   14000e8c6:	int3   
   14000e8c7:	int3   
   14000e8c8:	mov    QWORD PTR [rsp+0x8],rbx
   14000e8cd:	mov    QWORD PTR [rsp+0x10],rbp
   14000e8d2:	mov    QWORD PTR [rsp+0x18],rsi
   14000e8d7:	push   rdi
   14000e8d8:	push   r12
   14000e8da:	push   r13
   14000e8dc:	push   r14
   14000e8de:	push   r15
   14000e8e0:	sub    rsp,0xe0
   14000e8e7:	mov    rsi,QWORD PTR [rsp+0x150]
   14000e8ef:	mov    ebp,0xe
   14000e8f4:	or     rdi,0xffffffffffffffff
   14000e8f8:	xor    r13d,r13d
   14000e8fb:	mov    r12,rcx
   14000e8fe:	mov    r15,r9
   14000e901:	lea    ecx,[rbp-0x4]
   14000e904:	test   rsi,rsi
   14000e907:	je     0x14000e92b
   14000e909:	cmp    WORD PTR [rsi],r13w
   14000e90d:	jne    0x14000e914
   14000e90f:	mov    r14d,ebp
   14000e912:	jmp    0x14000e92e
   14000e914:	mov    rax,rdi
   14000e917:	inc    rax
   14000e91a:	cmp    WORD PTR [rsi+rax*2],r13w
   14000e91f:	jne    0x14000e917
   14000e921:	lea    r14,[rax*2+0x2]
   14000e929:	jmp    0x14000e92e
   14000e92b:	mov    r14,rcx
   14000e92e:	lea    rdx,[rip+0x26523]        # 0x140034e58
   14000e935:	test   rsi,rsi
   14000e938:	je     0x14000e944
   14000e93a:	cmp    WORD PTR [rsi],r13w
   14000e93e:	cmove  rsi,rdx
   14000e942:	jmp    0x14000e94b
   14000e944:	lea    rsi,[rip+0x26b55]        # 0x1400354a0
   14000e94b:	mov    rbx,QWORD PTR [rsp+0x140]
   14000e953:	test   rbx,rbx
   14000e956:	je     0x14000e975
   14000e958:	cmp    WORD PTR [rbx],r13w
   14000e95c:	je     0x14000e978
   14000e95e:	mov    rax,rdi
   14000e961:	inc    rax
   14000e964:	cmp    WORD PTR [rbx+rax*2],r13w
   14000e969:	jne    0x14000e961
   14000e96b:	lea    rbp,[rax*2+0x2]
   14000e973:	jmp    0x14000e978
   14000e975:	mov    rbp,rcx
   14000e978:	test   rbx,rbx
   14000e97b:	je     0x14000e987
   14000e97d:	cmp    WORD PTR [rbx],r13w
   14000e981:	cmove  rbx,rdx
   14000e985:	jmp    0x14000e98e
   14000e987:	lea    rbx,[rip+0x26b12]        # 0x1400354a0
   14000e98e:	test   r9,r9
   14000e991:	je     0x14000e9a1
   14000e993:	inc    rdi
   14000e996:	cmp    BYTE PTR [r9+rdi*1],r13b
   14000e99a:	jne    0x14000e993
   14000e99c:	inc    rdi
   14000e99f:	jmp    0x14000e9a6
   14000e9a1:	mov    edi,0x5
   14000e9a6:	mov    rcx,QWORD PTR [rsp+0x168]
   14000e9ae:	lea    r11,[rip+0x26adf]        # 0x140035494
   14000e9b5:	mov    r9,QWORD PTR [rsp+0x160]
   14000e9bd:	test   r15,r15
   14000e9c0:	mov    QWORD PTR [rsp+0xd0],r13
   14000e9c8:	cmovne r11,r15
   14000e9cc:	mov    r15d,0x13
   14000e9d2:	lea    r8,[rcx+0x8]
   14000e9d6:	movzx  eax,WORD PTR [r8]
   14000e9da:	lea    r10,[r9+0x8]
   14000e9de:	movzx  edx,WORD PTR [r10]
   14000e9e2:	mov    QWORD PTR [rsp+0xc8],rax
   14000e9ea:	mov    rax,QWORD PTR [rcx]
   14000e9ed:	lea    ecx,[r15-0x11]
   14000e9f1:	mov    QWORD PTR [rsp+0xc0],rax
   14000e9f9:	mov    rax,QWORD PTR [r9]
   14000e9fc:	mov    QWORD PTR [rsp+0xb8],rcx
   14000ea04:	mov    QWORD PTR [rsp+0xb0],r8
   14000ea0c:	lea    r8,[rip+0x28705]        # 0x140037118
   14000ea13:	mov    QWORD PTR [rsp+0xa8],rdx
   14000ea1b:	mov    QWORD PTR [rsp+0xa0],rax
   14000ea23:	lea    rax,[rsp+0x158]
   14000ea2b:	mov    QWORD PTR [rsp+0x98],rcx
   14000ea33:	lea    ecx,[r15-0xf]
   14000ea37:	mov    QWORD PTR [rsp+0x90],r10
   14000ea3f:	lea    edx,[rcx+0x27]
   14000ea42:	mov    QWORD PTR [rsp+0x88],rcx
   14000ea4a:	mov    QWORD PTR [rsp+0x80],rax
   14000ea52:	lea    rax,[rsp+0x148]
   14000ea5a:	mov    QWORD PTR [rsp+0x78],r14
   14000ea5f:	mov    QWORD PTR [rsp+0x70],rsi
   14000ea64:	mov    QWORD PTR [rsp+0x68],rcx
   14000ea69:	mov    QWORD PTR [rsp+0x60],rax
   14000ea6e:	lea    rax,[rsp+0x138]
   14000ea76:	mov    QWORD PTR [rsp+0x58],rbp
   14000ea7b:	mov    QWORD PTR [rsp+0x50],rbx
   14000ea80:	mov    QWORD PTR [rsp+0x48],rcx
   14000ea85:	mov    QWORD PTR [rsp+0x40],rax
   14000ea8a:	lea    rax,[rsp+0x130]
   14000ea92:	mov    QWORD PTR [rsp+0x38],rcx
   14000ea97:	mov    rcx,r12
   14000ea9a:	mov    QWORD PTR [rsp+0x30],rax
   14000ea9f:	mov    QWORD PTR [rsp+0x28],rdi
   14000eaa4:	movzx  r9d,r15w
   14000eaa8:	mov    QWORD PTR [rsp+0x20],r11
   14000eaad:	call   QWORD PTR [rip+0x2356d]        # 0x140032020
   14000eab3:	lea    r11,[rsp+0xe0]
   14000eabb:	mov    rbx,QWORD PTR [r11+0x30]
   14000eabf:	mov    rbp,QWORD PTR [r11+0x38]
   14000eac3:	mov    rsi,QWORD PTR [r11+0x40]
   14000eac7:	mov    rsp,r11
   14000eaca:	pop    r15
   14000eacc:	pop    r14
   14000eace:	pop    r13
   14000ead0:	pop    r12
   14000ead2:	pop    rdi
   14000ead3:	ret    
   14000ead4:	int3   
   14000ead5:	int3   
   14000ead6:	int3   
   14000ead7:	int3   
   14000ead8:	int3   
   14000ead9:	int3   
   14000eada:	int3   
   14000eadb:	int3   
   14000eadc:	mov    rax,rsp
   14000eadf:	push   rbp
   14000eae0:	push   rdi
   14000eae1:	push   r12
   14000eae3:	push   r14
   14000eae5:	push   r15
   14000eae7:	lea    rbp,[rax-0x4f]
   14000eaeb:	sub    rsp,0x90
   14000eaf2:	mov    QWORD PTR [rbp-0x29],0xfffffffffffffffe
   14000eafa:	mov    QWORD PTR [rax+0x10],rbx
   14000eafe:	mov    QWORD PTR [rax+0x18],rsi
   14000eb02:	mov    r15,r9
   14000eb05:	mov    rsi,r8
   14000eb08:	mov    r14,rdx
   14000eb0b:	mov    r12,rcx
   14000eb0e:	test   rcx,rcx
   14000eb11:	jne    0x14000eb53
   14000eb13:	lea    rax,[rip+0x3c55e]        # 0x14004b078
   14000eb1a:	mov    rcx,QWORD PTR [rip+0x3c557]        # 0x14004b078
   14000eb21:	cmp    rcx,rax
   14000eb24:	je     0x14000eb48
   14000eb26:	test   BYTE PTR [rcx+0x1c],0x1
   14000eb2a:	je     0x14000eb48
   14000eb2c:	lea    edx,[r12+0xa]
   14000eb31:	lea    r9,[rip+0x27fc0]        # 0x140036af8
   14000eb38:	lea    r8,[rip+0x25891]        # 0x1400343d0
   14000eb3f:	mov    rcx,QWORD PTR [rcx+0x10]
   14000eb43:	call   0x1400038e0
   14000eb48:	mov    ecx,0x80070057
   14000eb4d:	call   0x140029d64
   14000eb52:	int3   
   14000eb53:	and    QWORD PTR [rcx],0x0
   14000eb57:	xor    ebx,ebx
   14000eb59:	mov    QWORD PTR [rbp+0x57],rbx
   14000eb5d:	lea    rcx,[rbp-0x39]
   14000eb61:	call   0x14001121c
   14000eb66:	test   eax,eax
   14000eb68:	js     0x14000eb8c
   14000eb6a:	mov    rbx,QWORD PTR [rbp-0x39]
   14000eb6e:	mov    rax,QWORD PTR [rbx]
   14000eb71:	mov    rdi,QWORD PTR [rax]
   14000eb74:	mov    rcx,rdi
   14000eb77:	call   QWORD PTR [rip+0x23b2b]        # 0x1400326a8
   14000eb7d:	mov    rcx,rbx
   14000eb80:	call   rdi
   14000eb82:	mov    QWORD PTR [rbp+0x57],rbx
   14000eb86:	xor    eax,eax
   14000eb88:	test   eax,eax
   14000eb8a:	jns    0x14000eb94
   14000eb8c:	mov    ecx,eax
   14000eb8e:	call   0x140029d64
   14000eb93:	int3   
   14000eb94:	mov    al,BYTE PTR [rbp+0x7f]
   14000eb97:	mov    BYTE PTR [rsp+0x28],al
   14000eb9b:	mov    al,BYTE PTR [rbp+0x77]
   14000eb9e:	mov    BYTE PTR [rsp+0x20],al
   14000eba2:	mov    r9,r15
   14000eba5:	mov    r8,rsi
   14000eba8:	mov    rdx,r14
   14000ebab:	mov    rcx,rbx
   14000ebae:	call   0x14000ecd4
   14000ebb3:	lea    rdi,[r15+0x120]
   14000ebba:	mov    QWORD PTR [rbp-0x31],rdi
   14000ebbe:	mov    rcx,rdi
   14000ebc1:	call   0x140029ab0
   14000ebc6:	test   eax,eax
   14000ebc8:	jns    0x14000ebd2
   14000ebca:	mov    ecx,eax
   14000ebcc:	call   0x140029d64
   14000ebd1:	nop
   14000ebd2:	lea    r14,[r15+0xf0]
   14000ebd9:	mov    QWORD PTR [rbp+0x7],r14
   14000ebdd:	mov    rcx,r14
   14000ebe0:	call   QWORD PTR [rip+0x23522]        # 0x140032108
   14000ebe6:	mov    BYTE PTR [rbp+0xf],0x1
   14000ebea:	mov    BYTE PTR [rbp+0x17],0x1
   14000ebee:	mov    QWORD PTR [rbp-0x21],rbx
   14000ebf2:	test   rbx,rbx
   14000ebf5:	je     0x14000ec0c
   14000ebf7:	mov    rax,QWORD PTR [rbx]
   14000ebfa:	mov    rsi,QWORD PTR [rax]
   14000ebfd:	mov    rcx,rsi
   14000ec00:	call   QWORD PTR [rip+0x23aa2]        # 0x1400326a8
   14000ec06:	mov    rcx,rbx
   14000ec09:	call   rsi
   14000ec0b:	nop
   14000ec0c:	mov    QWORD PTR [rbp-0x19],rbx
   14000ec10:	test   rbx,rbx
   14000ec13:	je     0x14000ec29
   14000ec15:	mov    rax,QWORD PTR [rbx]
   14000ec18:	mov    rsi,QWORD PTR [rax]
   14000ec1b:	mov    rcx,rsi
   14000ec1e:	call   QWORD PTR [rip+0x23a84]        # 0x1400326a8
   14000ec24:	mov    rcx,rbx
   14000ec27:	call   rsi
   14000ec29:	mov    QWORD PTR [rbp-0x11],rbx
   14000ec2d:	lea    rcx,[r15+0xb0]
   14000ec34:	mov    r9b,BYTE PTR [rip+0x415c4]        # 0x1400501ff
   14000ec3b:	lea    r8,[rbp-0x19]
   14000ec3f:	lea    rdx,[rbp-0x9]
   14000ec43:	call   0x1400122ec
   14000ec48:	nop
   14000ec49:	mov    r15,QWORD PTR [rbp-0x11]
   14000ec4d:	test   r15,r15
   14000ec50:	je     0x14000ec68
   14000ec52:	mov    rax,QWORD PTR [r15]
   14000ec55:	mov    rsi,QWORD PTR [rax+0x8]
   14000ec59:	mov    rcx,rsi
   14000ec5c:	call   QWORD PTR [rip+0x23a46]        # 0x1400326a8
   14000ec62:	mov    rcx,r15
   14000ec65:	call   rsi
   14000ec67:	nop
   14000ec68:	test   rbx,rbx
   14000ec6b:	je     0x14000ec83
   14000ec6d:	mov    rax,QWORD PTR [rbx]
   14000ec70:	mov    rsi,QWORD PTR [rax+0x8]
   14000ec74:	mov    rcx,rsi
   14000ec77:	call   QWORD PTR [rip+0x23a2b]        # 0x1400326a8
   14000ec7d:	mov    rcx,rbx
   14000ec80:	call   rsi
   14000ec82:	nop
   14000ec83:	mov    rcx,r14
   14000ec86:	call   QWORD PTR [rip+0x2346c]        # 0x1400320f8
   14000ec8c:	nop
   14000ec8d:	or     eax,0xffffffff
   14000ec90:	lock xadd DWORD PTR [rdi+0x8],eax
   14000ec95:	dec    eax
   14000ec97:	cmp    eax,0x80000000
   14000ec9c:	jne    0x14000eca7
   14000ec9e:	mov    rcx,QWORD PTR [rbp-0x31]
   14000eca2:	call   0x140029c90
   14000eca7:	mov    rax,QWORD PTR [rbp+0x57]
   14000ecab:	mov    QWORD PTR [r12],rax
   14000ecaf:	lea    r11,[rsp+0x90]
   14000ecb7:	mov    rbx,QWORD PTR [r11+0x38]
   14000ecbb:	mov    rsi,QWORD PTR [r11+0x40]
   14000ecbf:	mov    rsp,r11
   14000ecc2:	pop    r15
   14000ecc4:	pop    r14
   14000ecc6:	pop    r12
   14000ecc8:	pop    rdi
   14000ecc9:	pop    rbp
   14000ecca:	ret    
   14000eccb:	int3   
   14000eccc:	int3   
   14000eccd:	int3   
   14000ecce:	int3   
   14000eccf:	int3   
   14000ecd0:	int3   
   14000ecd1:	int3   
   14000ecd2:	int3   
   14000ecd3:	int3   
   14000ecd4:	mov    rax,rsp
   14000ecd7:	push   rbp
   14000ecd8:	push   r14
   14000ecda:	push   r15
   14000ecdc:	mov    rbp,rsp
   14000ecdf:	sub    rsp,0x50
   14000ece3:	mov    QWORD PTR [rbp-0x8],0xfffffffffffffffe
   14000eceb:	mov    QWORD PTR [rax+0x8],rbx
   14000ecef:	mov    QWORD PTR [rax+0x18],rsi
   14000ecf3:	mov    QWORD PTR [rax+0x20],rdi
   14000ecf7:	mov    r14,r9
   14000ecfa:	mov    r15,r8
   14000ecfd:	mov    rbx,rdx
   14000ed00:	mov    rsi,rcx
   14000ed03:	test   rdx,rdx
   14000ed06:	je     0x14000ef97
   14000ed0c:	test   r8,r8
   14000ed0f:	je     0x14000ef97
   14000ed15:	test   r9,r9
   14000ed18:	je     0x14000ef97
   14000ed1e:	add    rcx,0x110
   14000ed25:	and    DWORD PTR [rcx+0xc],0x0
   14000ed29:	xor    edx,edx
   14000ed2b:	call   QWORD PTR [rip+0x2353f]        # 0x140032270
   14000ed31:	mov    al,BYTE PTR [r14+0x140]
   14000ed38:	mov    BYTE PTR [rsi+0x13d],al
   14000ed3e:	mov    al,BYTE PTR [r14+0x141]
   14000ed45:	mov    BYTE PTR [rsi+0x13e],al
   14000ed4b:	mov    al,BYTE PTR [r14+0x142]
   14000ed52:	mov    BYTE PTR [rsi+0x13c],al
   14000ed58:	mov    QWORD PTR [rsi+0x48],rbx
   14000ed5c:	mov    rax,QWORD PTR [r15]
   14000ed5f:	mov    rbx,QWORD PTR [rax]
   14000ed62:	mov    rcx,rbx
   14000ed65:	call   QWORD PTR [rip+0x2393d]        # 0x1400326a8
   14000ed6b:	mov    rcx,r15
   14000ed6e:	call   rbx
   14000ed70:	mov    rdi,QWORD PTR [rsi+0x50]
   14000ed74:	mov    QWORD PTR [rsi+0x50],r15
   14000ed78:	test   rdi,rdi
   14000ed7b:	je     0x14000ed92
   14000ed7d:	mov    rax,QWORD PTR [rdi]
   14000ed80:	mov    rbx,QWORD PTR [rax+0x8]
   14000ed84:	mov    rcx,rbx
   14000ed87:	call   QWORD PTR [rip+0x2391b]        # 0x1400326a8
   14000ed8d:	mov    rcx,rdi
   14000ed90:	call   rbx
   14000ed92:	and    QWORD PTR [rbp-0x18],0x0
   14000ed97:	mov    rax,QWORD PTR [r15]
   14000ed9a:	mov    rbx,QWORD PTR [rax+0x18]
   14000ed9e:	mov    rcx,rbx
   14000eda1:	call   QWORD PTR [rip+0x23901]        # 0x1400326a8
   14000eda7:	lea    rdx,[rbp-0x18]
   14000edab:	mov    rcx,r15
   14000edae:	call   rbx
   14000edb0:	test   eax,eax
   14000edb2:	jns    0x14000edbc
   14000edb4:	mov    ecx,eax
   14000edb6:	call   0x140029d64
   14000edbb:	int3   
   14000edbc:	mov    rbx,QWORD PTR [rbp-0x18]
   14000edc0:	mov    QWORD PTR [rsi+0x58],rbx
   14000edc4:	cmp    BYTE PTR [rbp+0x48],0x0
   14000edc8:	je     0x14000edff
   14000edca:	and    QWORD PTR [rbp-0x10],0x0
   14000edcf:	mov    rax,QWORD PTR [rbx]
   14000edd2:	mov    rdi,QWORD PTR [rax+0x58]
   14000edd6:	mov    rcx,rdi
   14000edd9:	call   QWORD PTR [rip+0x238c9]        # 0x1400326a8
   14000eddf:	mov    r8b,0x1
   14000ede2:	lea    rdx,[rbp-0x10]
   14000ede6:	mov    rcx,rbx
   14000ede9:	call   rdi
   14000edeb:	mov    rdx,QWORD PTR [rbp-0x10]
   14000edef:	test   rdx,rdx
   14000edf2:	je     0x14000edff
   14000edf4:	mov    ecx,0x13e
   14000edf9:	call   QWORD PTR [rip+0x23641]        # 0x140032440
   14000edff:	lea    rax,[r14+0x70]
   14000ee03:	mov    rcx,rsi
   14000ee06:	sub    rcx,r14
   14000ee09:	mov    r8d,0x2
   14000ee0f:	cmp    BYTE PTR [rbp+0x40],0x0
   14000ee13:	je     0x14000ee1a
   14000ee15:	mov    edx,DWORD PTR [rax-0x8]
   14000ee18:	jmp    0x14000ee1c
   14000ee1a:	mov    edx,DWORD PTR [rax]
   14000ee1c:	mov    DWORD PTR [rcx+rax*1+0x70],edx
   14000ee20:	add    rax,0x4
   14000ee24:	sub    r8,0x1
   14000ee28:	jne    0x14000ee0f
   14000ee2a:	mov    r8,r15
   14000ee2d:	mov    rdx,r14
   14000ee30:	mov    rcx,rsi
   14000ee33:	call   0x14000eff8
   14000ee38:	mov    eax,DWORD PTR [r14+0x8]
   14000ee3c:	test   eax,eax
   14000ee3e:	jne    0x14000ee4a
   14000ee40:	mov    DWORD PTR [r14+0x8],0x1
   14000ee48:	jmp    0x14000ee4f
   14000ee4a:	lock inc DWORD PTR [r14+0x8]
   14000ee4f:	mov    rdi,QWORD PTR [rsi+0xe8]
   14000ee56:	mov    QWORD PTR [rsi+0xe8],r14
   14000ee5d:	test   rdi,rdi
   14000ee60:	je     0x14000ee99
   14000ee62:	mov    eax,DWORD PTR [rdi+0x8]
   14000ee65:	cmp    eax,0x1
   14000ee68:	jne    0x14000ee73
   14000ee6a:	mov    DWORD PTR [rdi+0x8],0x0
   14000ee71:	jmp    0x14000ee80
   14000ee73:	or     eax,0xffffffff
   14000ee76:	lock xadd DWORD PTR [rdi+0x8],eax
   14000ee7b:	sub    eax,0x1
   14000ee7e:	jg     0x14000ee99
   14000ee80:	mov    rax,QWORD PTR [rdi]
   14000ee83:	mov    rbx,QWORD PTR [rax]
   14000ee86:	mov    rcx,rbx
   14000ee89:	call   QWORD PTR [rip+0x23819]        # 0x1400326a8
   14000ee8f:	mov    edx,0x1
   14000ee94:	mov    rcx,rdi
   14000ee97:	call   rbx
   14000ee99:	and    DWORD PTR [rbp+0x28],0x0
   14000ee9d:	call   QWORD PTR [rip+0x235ad]        # 0x140032450
   14000eea3:	mov    rbx,QWORD PTR [rax+0xa0]
   14000eeaa:	mov    rcx,rbx
   14000eead:	call   QWORD PTR [rip+0x237f5]        # 0x1400326a8
   14000eeb3:	lea    r8,[rbp+0x28]
   14000eeb7:	xor    edx,edx
   14000eeb9:	lea    rcx,[rip+0x27ce0]        # 0x140036ba0
   14000eec0:	call   rbx
   14000eec2:	mov    eax,DWORD PTR [rbp+0x28]
   14000eec5:	mov    DWORD PTR [rsi+0x138],eax
   14000eecb:	test   eax,eax
   14000eecd:	je     0x14000ef77
   14000eed3:	and    DWORD PTR [rbp-0x20],0x0
   14000eed7:	call   QWORD PTR [rip+0x23573]        # 0x140032450
   14000eedd:	mov    rbx,QWORD PTR [rax+0xa0]
   14000eee4:	mov    rcx,rbx
   14000eee7:	call   QWORD PTR [rip+0x237bb]        # 0x1400326a8
   14000eeed:	lea    r8,[rbp-0x20]
   14000eef1:	xor    edx,edx
   14000eef3:	lea    rcx,[rip+0x27ce6]        # 0x140036be0
   14000eefa:	call   rbx
   14000eefc:	and    DWORD PTR [rbp-0x1c],0x0
   14000ef00:	call   QWORD PTR [rip+0x2354a]        # 0x140032450
   14000ef06:	mov    rbx,QWORD PTR [rax+0xa0]
   14000ef0d:	mov    rcx,rbx
   14000ef10:	call   QWORD PTR [rip+0x23792]        # 0x1400326a8
   14000ef16:	lea    r8,[rbp-0x1c]
   14000ef1a:	xor    edx,edx
   14000ef1c:	lea    rcx,[rip+0x27cfd]        # 0x140036c20
   14000ef23:	call   rbx
   14000ef25:	movzx  eax,WORD PTR [rsi+0x88]
   14000ef2c:	mov    r8d,DWORD PTR [rbp-0x20]
   14000ef30:	cmp    eax,r8d
   14000ef33:	jb     0x14000ef70
   14000ef35:	mov    edx,DWORD PTR [rbp-0x1c]
   14000ef38:	cmp    eax,edx
   14000ef3a:	ja     0x14000ef70
   14000ef3c:	lea    rax,[rip+0x3c135]        # 0x14004b078
   14000ef43:	mov    rcx,QWORD PTR [rip+0x3c12e]        # 0x14004b078
   14000ef4a:	cmp    rcx,rax
   14000ef4d:	je     0x14000ef77
   14000ef4f:	test   BYTE PTR [rcx+0x1c],0x2
   14000ef53:	je     0x14000ef77
   14000ef55:	mov    DWORD PTR [rsp+0x28],edx
   14000ef59:	mov    DWORD PTR [rsp+0x20],r8d
   14000ef5e:	mov    r9d,DWORD PTR [rsi+0x138]
   14000ef65:	mov    rcx,QWORD PTR [rcx+0x10]
   14000ef69:	call   0x14000e6d4
   14000ef6e:	jmp    0x14000ef77
   14000ef70:	and    DWORD PTR [rsi+0x138],0x0
   14000ef77:	mov    rbx,QWORD PTR [rbp-0x18]
   14000ef7b:	test   rbx,rbx
   14000ef7e:	je     0x14000efd7
   14000ef80:	mov    rax,QWORD PTR [rbx]
   14000ef83:	mov    rdi,QWORD PTR [rax+0x8]
   14000ef87:	mov    rcx,rdi
   14000ef8a:	call   QWORD PTR [rip+0x23718]        # 0x1400326a8
   14000ef90:	mov    rcx,rbx
   14000ef93:	call   rdi
   14000ef95:	jmp    0x14000efd7
   14000ef97:	lea    rax,[rip+0x3c0da]        # 0x14004b078
   14000ef9e:	mov    rcx,QWORD PTR [rip+0x3c0d3]        # 0x14004b078
   14000efa5:	cmp    rcx,rax
   14000efa8:	je     0x14000efcc
   14000efaa:	test   BYTE PTR [rcx+0x1c],0x1
   14000efae:	je     0x14000efcc
   14000efb0:	mov    edx,0xa
   14000efb5:	lea    r9,[rip+0x27b84]        # 0x140036b40
   14000efbc:	lea    r8,[rip+0x2540d]        # 0x1400343d0
   14000efc3:	mov    rcx,QWORD PTR [rcx+0x10]
   14000efc7:	call   0x1400038e0
   14000efcc:	mov    ecx,0x80070057
   14000efd1:	call   0x140029d64
   14000efd6:	int3   
   14000efd7:	lea    r11,[rsp+0x50]
   14000efdc:	mov    rbx,QWORD PTR [r11+0x20]
   14000efe0:	mov    rsi,QWORD PTR [r11+0x30]
   14000efe4:	mov    rdi,QWORD PTR [r11+0x38]
   14000efe8:	mov    rsp,r11
   14000efeb:	pop    r15
   14000efed:	pop    r14
   14000efef:	pop    rbp
   14000eff0:	ret    
   14000eff1:	int3   
   14000eff2:	int3   
   14000eff3:	int3   
   14000eff4:	int3   
   14000eff5:	int3   
   14000eff6:	int3   
   14000eff7:	int3   
   14000eff8:	mov    r11,rsp
   14000effb:	push   rbp
   14000effc:	push   rsi
   14000effd:	push   rdi
   14000effe:	push   r12
   14000f000:	push   r13
   14000f002:	push   r14
   14000f004:	push   r15
   14000f006:	sub    rsp,0x90
   14000f00d:	mov    QWORD PTR [r11-0x80],0xfffffffffffffffe
   14000f015:	mov    QWORD PTR [r11+0x18],rbx
   14000f019:	mov    rax,QWORD PTR [rip+0x3c000]        # 0x14004b020
   14000f020:	xor    rax,rsp
   14000f023:	mov    QWORD PTR [rsp+0x80],rax
   14000f02b:	mov    r13,rdx
   14000f02e:	mov    rbp,rcx
   14000f031:	test   rdx,rdx
   14000f034:	je     0x14000f3a8
   14000f03a:	test   r8,r8
   14000f03d:	je     0x14000f3a8
   14000f043:	xor    edx,edx
   14000f045:	lea    r8d,[rdx+0x2c]
   14000f049:	lea    rcx,[r11-0x78]
   14000f04d:	call   0x14002e2ce
   14000f052:	mov    rdi,QWORD PTR [rbp+0x58]
   14000f056:	mov    rax,QWORD PTR [rdi]
   14000f059:	mov    rbx,QWORD PTR [rax+0x30]
   14000f05d:	mov    rcx,rbx
   14000f060:	call   QWORD PTR [rip+0x23642]        # 0x1400326a8
   14000f066:	lea    rdx,[rbp+0x70]
   14000f06a:	mov    rcx,rdi
   14000f06d:	call   rbx
   14000f06f:	test   eax,eax
   14000f071:	jns    0x14000f07b
   14000f073:	mov    ecx,eax
   14000f075:	call   0x140029d64
   14000f07a:	int3   
   14000f07b:	mov    rdi,QWORD PTR [rbp+0x58]
   14000f07f:	lea    r12,[rbp+0x78]
   14000f083:	mov    rax,QWORD PTR [rdi]
   14000f086:	mov    rbx,QWORD PTR [rax+0x40]
   14000f08a:	mov    rcx,rbx
   14000f08d:	call   QWORD PTR [rip+0x23615]        # 0x1400326a8
   14000f093:	mov    rdx,r12
   14000f096:	mov    rcx,rdi
   14000f099:	call   rbx
   14000f09b:	test   eax,eax
   14000f09d:	jns    0x14000f0a7
   14000f09f:	mov    ecx,eax
   14000f0a1:	call   0x140029d64
   14000f0a6:	int3   
   14000f0a7:	mov    rdi,QWORD PTR [rbp+0x58]
   14000f0ab:	mov    rax,QWORD PTR [rdi]
   14000f0ae:	mov    rbx,QWORD PTR [rax+0x18]
   14000f0b2:	mov    rcx,rbx
   14000f0b5:	call   QWORD PTR [rip+0x235ed]        # 0x1400326a8
   14000f0bb:	lea    rdx,[rbp+0x80]
   14000f0c2:	mov    rcx,rdi
   14000f0c5:	call   rbx
   14000f0c7:	test   eax,eax
   14000f0c9:	jns    0x14000f0d3
   14000f0cb:	mov    ecx,eax
   14000f0cd:	call   0x140029d64
   14000f0d2:	int3   
   14000f0d3:	mov    rdi,QWORD PTR [rbp+0x58]
   14000f0d7:	lea    rsi,[rbp+0x88]
   14000f0de:	mov    rax,QWORD PTR [rdi]
   14000f0e1:	mov    rbx,QWORD PTR [rax+0x28]
   14000f0e5:	mov    rcx,rbx
   14000f0e8:	call   QWORD PTR [rip+0x235ba]        # 0x1400326a8
   14000f0ee:	mov    rdx,rsi
   14000f0f1:	mov    rcx,rdi
   14000f0f4:	call   rbx
   14000f0f6:	test   eax,eax
   14000f0f8:	jns    0x14000f102
   14000f0fa:	mov    ecx,eax
   14000f0fc:	call   0x140029d64
   14000f101:	int3   
   14000f102:	mov    rdi,QWORD PTR [rbp+0x58]
   14000f106:	lea    r14,[rbp+0x68]
   14000f10a:	mov    rax,QWORD PTR [rdi]
   14000f10d:	mov    rbx,QWORD PTR [rax+0x50]
   14000f111:	mov    rcx,rbx
   14000f114:	call   QWORD PTR [rip+0x2358e]        # 0x1400326a8
   14000f11a:	mov    rdx,r14
   14000f11d:	mov    rcx,rdi
   14000f120:	call   rbx
   14000f122:	test   eax,eax
   14000f124:	jns    0x14000f12e
   14000f126:	mov    ecx,eax
   14000f128:	call   0x140029d64
   14000f12d:	int3   
   14000f12e:	and    DWORD PTR [rsp+0x50],0x0
   14000f133:	mov    al,BYTE PTR [r14]
   14000f136:	mov    BYTE PTR [rsp+0x78],al
   14000f13a:	movzx  eax,WORD PTR [r12]
   14000f13f:	mov    WORD PTR [rsp+0x76],ax
   14000f144:	movzx  eax,WORD PTR [rsi]
   14000f147:	mov    WORD PTR [rsp+0x74],ax
   14000f14c:	mov    rdi,QWORD PTR [rbp+0x58]
   14000f150:	mov    rax,QWORD PTR [rdi]
   14000f153:	mov    rbx,QWORD PTR [rax+0x38]
   14000f157:	mov    rcx,rbx
   14000f15a:	call   QWORD PTR [rip+0x23548]        # 0x1400326a8
   14000f160:	mov    r15d,0x10
   14000f166:	mov    r8d,r15d
   14000f169:	lea    rdx,[rsp+0x64]
   14000f16e:	mov    rcx,rdi
   14000f171:	call   rbx
   14000f173:	test   eax,eax
   14000f175:	jns    0x14000f17f
   14000f177:	mov    ecx,eax
   14000f179:	call   0x140029d64
   14000f17e:	int3   
   14000f17f:	mov    rdi,QWORD PTR [rbp+0x58]
   14000f183:	mov    rax,QWORD PTR [rdi]
   14000f186:	mov    rbx,QWORD PTR [rax+0x20]
   14000f18a:	mov    rcx,rbx
   14000f18d:	call   QWORD PTR [rip+0x23515]        # 0x1400326a8
   14000f193:	mov    r8d,r15d
   14000f196:	lea    rdx,[rsp+0x54]
   14000f19b:	mov    rcx,rdi
   14000f19e:	call   rbx
   14000f1a0:	test   eax,eax
   14000f1a2:	jns    0x14000f1ac
   14000f1a4:	mov    ecx,eax
   14000f1a6:	call   0x140029d64
   14000f1ab:	int3   
   14000f1ac:	lea    r15,[rip+0x3bec5]        # 0x14004b078
   14000f1b3:	mov    rcx,QWORD PTR [rip+0x3bebe]        # 0x14004b078
   14000f1ba:	cmp    rcx,r15
   14000f1bd:	je     0x14000f1fe
   14000f1bf:	test   BYTE PTR [rcx+0x1c],0x4
   14000f1c3:	je     0x14000f1fe
   14000f1c5:	mov    r10,QWORD PTR [rbp+0x70]
   14000f1c9:	mov    r11,QWORD PTR [rbp+0x80]
   14000f1d0:	movzx  eax,WORD PTR [r12]
   14000f1d5:	movzx  r8d,WORD PTR [rsi]
   14000f1d9:	movzx  r9d,BYTE PTR [r14]
   14000f1dd:	mov    edx,0xb
   14000f1e2:	mov    DWORD PTR [rsp+0x38],eax
   14000f1e6:	mov    QWORD PTR [rsp+0x30],r10
   14000f1eb:	mov    DWORD PTR [rsp+0x28],r8d
   14000f1f0:	mov    QWORD PTR [rsp+0x20],r11
   14000f1f5:	mov    rcx,QWORD PTR [rcx+0x10]
   14000f1f9:	call   0x14000e410
   14000f1fe:	lea    r12,[rbp+0x60]
   14000f202:	mov    rdi,QWORD PTR [r12]
   14000f206:	test   rdi,rdi
   14000f209:	je     0x14000f225
   14000f20b:	mov    rax,QWORD PTR [rdi]
   14000f20e:	mov    rbx,QWORD PTR [rax+0x10]
   14000f212:	mov    rcx,rbx
   14000f215:	call   QWORD PTR [rip+0x2348d]        # 0x1400326a8
   14000f21b:	mov    rcx,rdi
   14000f21e:	call   rbx
   14000f220:	and    QWORD PTR [r12],0x0
   14000f225:	lea    rbx,[r13+0x120]
   14000f22c:	mov    QWORD PTR [rsp+0x40],rbx
   14000f231:	mov    rcx,rbx
   14000f234:	call   0x140029ab0
   14000f239:	test   eax,eax
   14000f23b:	jns    0x14000f245
   14000f23d:	mov    ecx,eax
   14000f23f:	call   0x140029d64
   14000f244:	nop
   14000f245:	mov    rcx,rbx
   14000f248:	call   0x140029ab0
   14000f24d:	test   eax,eax
   14000f24f:	jns    0x14000f259
   14000f251:	mov    ecx,eax
   14000f253:	call   0x140029d64
   14000f258:	int3   
   14000f259:	mov    rsi,QWORD PTR [r13+0x98]
   14000f260:	mov    rax,QWORD PTR [rsi]
   14000f263:	mov    rdi,QWORD PTR [rax+0x28]
   14000f267:	mov    rcx,rdi
   14000f26a:	call   QWORD PTR [rip+0x23438]        # 0x1400326a8
   14000f270:	mov    r9,r12
   14000f273:	lea    r8,[rbp+0x8]
   14000f277:	lea    rdx,[rsp+0x50]
   14000f27c:	mov    rcx,rsi
   14000f27f:	call   rdi
   14000f281:	mov    edi,eax
   14000f283:	test   eax,eax
   14000f285:	jns    0x14000f297
   14000f287:	mov    rcx,rbx
   14000f28a:	call   0x140029ae8
   14000f28f:	mov    ecx,edi
   14000f291:	call   0x140029d64
   14000f296:	nop
   14000f297:	or     eax,0xffffffff
   14000f29a:	lock xadd DWORD PTR [rbx+0x8],eax
   14000f29f:	dec    eax
   14000f2a1:	cmp    eax,0x80000000
   14000f2a6:	jne    0x14000f2b2
   14000f2a8:	mov    rcx,QWORD PTR [rsp+0x40]
   14000f2ad:	call   0x140029c90
   14000f2b2:	cmp    BYTE PTR [rbp+0x13d],0x0
   14000f2b9:	je     0x14000f2d7
   14000f2bb:	mov    BYTE PTR [rbp+0x140],0x1
   14000f2c2:	call   0x140023548
   14000f2c7:	mov    rcx,rax
   14000f2ca:	mov    dl,BYTE PTR [r14]
   14000f2cd:	call   0x140023694
   14000f2d2:	jmp    0x14000f3e8
   14000f2d7:	cmp    BYTE PTR [rbp+0x13e],0x0
   14000f2de:	jne    0x14000f3e8
   14000f2e4:	mov    rdx,QWORD PTR [r12]
   14000f2e8:	mov    rcx,r13
   14000f2eb:	call   0x140011a5c
   14000f2f0:	test   al,al
   14000f2f2:	jne    0x14000f38f
   14000f2f8:	mov    rcx,QWORD PTR [rip+0x3bd79]        # 0x14004b078
   14000f2ff:	cmp    rcx,r15
   14000f302:	je     0x14000f346
   14000f304:	test   BYTE PTR [rcx+0x1c],0x4
   14000f308:	je     0x14000f346
   14000f30a:	movzx  eax,WORD PTR [rbp+0x78]
   14000f30e:	movzx  r8d,WORD PTR [rbp+0x88]
   14000f316:	movzx  r9d,BYTE PTR [r14]
   14000f31a:	mov    edx,0xc
   14000f31f:	mov    DWORD PTR [rsp+0x38],eax
   14000f323:	mov    rax,QWORD PTR [rbp+0x70]
   14000f327:	mov    QWORD PTR [rsp+0x30],rax
   14000f32c:	mov    DWORD PTR [rsp+0x28],r8d
   14000f331:	mov    rax,QWORD PTR [rbp+0x80]
   14000f338:	mov    QWORD PTR [rsp+0x20],rax
   14000f33d:	mov    rcx,QWORD PTR [rcx+0x10]
   14000f341:	call   0x14000e410
   14000f346:	mov    bl,BYTE PTR [r14]
   14000f349:	call   0x140023548
   14000f34e:	mov    dl,bl
   14000f350:	mov    rcx,rax
   14000f353:	call   0x1400235c0
   14000f358:	mov    edx,0x1
   14000f35d:	mov    ecx,0xbe
   14000f362:	call   QWORD PTR [rip+0x23100]        # 0x140032468
   14000f368:	xor    edx,edx
   14000f36a:	mov    ecx,0x107
   14000f36f:	call   QWORD PTR [rip+0x23063]        # 0x1400323d8
   14000f375:	mov    edx,0x64
   14000f37a:	mov    ecx,0x105
   14000f37f:	call   QWORD PTR [rip+0x23053]        # 0x1400323d8
   14000f385:	mov    rcx,rbp
   14000f388:	call   0x14000f41c
   14000f38d:	jmp    0x14000f39f
   14000f38f:	call   0x140023548
   14000f394:	mov    rcx,rax
   14000f397:	mov    dl,BYTE PTR [r14]
   14000f39a:	call   0x140023694
   14000f39f:	mov    BYTE PTR [rbp+0x140],0x1
   14000f3a6:	jmp    0x14000f3e8
   14000f3a8:	lea    r15,[rip+0x3bcc9]        # 0x14004b078
   14000f3af:	mov    rcx,QWORD PTR [rip+0x3bcc2]        # 0x14004b078
   14000f3b6:	cmp    rcx,r15
   14000f3b9:	je     0x14000f3dd
   14000f3bb:	test   BYTE PTR [rcx+0x1c],0x1
   14000f3bf:	je     0x14000f3dd
   14000f3c1:	mov    edx,0xa
   14000f3c6:	lea    r9,[rip+0x27893]        # 0x140036c60
   14000f3cd:	lea    r8,[rip+0x24ffc]        # 0x1400343d0
   14000f3d4:	mov    rcx,QWORD PTR [rcx+0x10]
   14000f3d8:	call   0x1400038e0
   14000f3dd:	mov    ecx,0x80070057
   14000f3e2:	call   0x140029d64
   14000f3e7:	int3   
   14000f3e8:	mov    rcx,QWORD PTR [rsp+0x80]
   14000f3f0:	xor    rcx,rsp
   14000f3f3:	call   0x14002dd00
   14000f3f8:	mov    rbx,QWORD PTR [rsp+0xe0]
   14000f400:	add    rsp,0x90
   14000f407:	pop    r15
   14000f409:	pop    r14
   14000f40b:	pop    r13
   14000f40d:	pop    r12
   14000f40f:	pop    rdi
   14000f410:	pop    rsi
   14000f411:	pop    rbp
   14000f412:	ret    
   14000f413:	int3   
   14000f414:	int3   
   14000f415:	int3   
   14000f416:	int3   
   14000f417:	int3   
   14000f418:	int3   
   14000f419:	int3   
   14000f41a:	int3   
   14000f41b:	int3   
   14000f41c:	mov    QWORD PTR [rsp+0x8],rbx
   14000f421:	mov    QWORD PTR [rsp+0x10],rsi
   14000f426:	push   rdi
   14000f427:	sub    rsp,0x20
   14000f42b:	mov    rsi,rcx
   14000f42e:	xor    ebx,ebx
   14000f430:	add    rcx,0xf0
   14000f437:	call   0x140029ab0
   14000f43c:	test   eax,eax
   14000f43e:	js     0x14000f49c
   14000f440:	xor    eax,eax
   14000f442:	mov    rbx,rcx
   14000f445:	test   eax,eax
   14000f447:	js     0x14000f49c
   14000f449:	mov    rsi,QWORD PTR [rsi+0x50]
   14000f44d:	test   rsi,rsi
   14000f450:	je     0x14000f49c
   14000f452:	mov    rax,QWORD PTR [rsi]
   14000f455:	mov    rdi,QWORD PTR [rax+0x20]
   14000f459:	mov    rcx,rdi
   14000f45c:	call   QWORD PTR [rip+0x23246]        # 0x1400326a8
   14000f462:	mov    rcx,rsi
   14000f465:	call   rdi
   14000f467:	test   eax,eax
   14000f469:	jns    0x14000f49c
   14000f46b:	mov    rcx,QWORD PTR [rip+0x3bc06]        # 0x14004b078
   14000f472:	lea    rdx,[rip+0x3bbff]        # 0x14004b078
   14000f479:	cmp    rcx,rdx
   14000f47c:	je     0x14000f49c
   14000f47e:	test   BYTE PTR [rcx+0x1c],0x2
   14000f482:	je     0x14000f49c
   14000f484:	mov    rcx,QWORD PTR [rcx+0x10]
   14000f488:	lea    r8,[rip+0x27c89]        # 0x140037118
   14000f48f:	mov    edx,0xd
   14000f494:	mov    r9d,eax
   14000f497:	call   0x140001f70
   14000f49c:	test   rbx,rbx
   14000f49f:	je     0x14000f4ba
   14000f4a1:	or     eax,0xffffffff
   14000f4a4:	lock xadd DWORD PTR [rbx+0x8],eax
   14000f4a9:	dec    eax
   14000f4ab:	cmp    eax,0x80000000
   14000f4b0:	jne    0x14000f4ba
   14000f4b2:	mov    rcx,rbx
   14000f4b5:	call   0x140029c90
   14000f4ba:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f4bf:	mov    rsi,QWORD PTR [rsp+0x38]
   14000f4c4:	add    rsp,0x20
   14000f4c8:	pop    rdi
   14000f4c9:	ret    
   14000f4ca:	int3   
   14000f4cb:	int3   
   14000f4cc:	int3   
   14000f4cd:	int3   
   14000f4ce:	int3   
   14000f4cf:	int3   
   14000f4d0:	mov    rax,rsp
   14000f4d3:	mov    QWORD PTR [rax+0x18],r8
   14000f4d7:	push   rbp
   14000f4d8:	push   rsi
   14000f4d9:	push   rdi
   14000f4da:	push   r12
   14000f4dc:	push   r13
   14000f4de:	push   r14
   14000f4e0:	push   r15
   14000f4e2:	lea    rbp,[rax-0x5f]
   14000f4e6:	sub    rsp,0xb0
   14000f4ed:	mov    QWORD PTR [rbp-0x1],0xfffffffffffffffe
   14000f4f5:	mov    QWORD PTR [rax+0x10],rbx
   14000f4f9:	mov    r15d,r9d
   14000f4fc:	movsxd r12,edx
   14000f4ff:	mov    r14,rcx
   14000f502:	add    rcx,0xf0
   14000f509:	mov    QWORD PTR [rbp-0x21],rcx
   14000f50d:	call   0x140029ab0
   14000f512:	xor    edi,edi
   14000f514:	test   eax,eax
   14000f516:	jns    0x14000f520
   14000f518:	mov    ecx,eax
   14000f51a:	call   0x140029d64
   14000f51f:	nop
   14000f520:	mov    eax,DWORD PTR [r14+0x138]
   14000f527:	mov    r13d,0x1
   14000f52d:	lea    rsi,[rip+0x3bb44]        # 0x14004b078
   14000f534:	test   eax,eax
   14000f536:	je     0x14000f5cc
   14000f53c:	mov    ecx,eax
   14000f53e:	mov    rax,r15
   14000f541:	mul    rcx
   14000f544:	mov    QWORD PTR [rbp+0x7],rdx
   14000f548:	mov    rbx,rdi
   14000f54b:	test   rdx,rdx
   14000f54e:	cmove  rbx,rax
   14000f552:	movabs rax,0x624dd2f1a9fbe77
   14000f55c:	mul    rbx
   14000f55f:	sub    rbx,rdx
   14000f562:	shr    rbx,1
   14000f565:	add    rbx,rdx
   14000f568:	shr    rbx,0x9
   14000f56c:	cmp    rbx,r13
   14000f56f:	cmovb  rbx,r13
   14000f573:	mov    rcx,QWORD PTR [rip+0x3bafe]        # 0x14004b078
   14000f57a:	cmp    rcx,rsi
   14000f57d:	je     0x14000f59d
   14000f57f:	test   BYTE PTR [rcx+0x1c],0x2
   14000f583:	je     0x14000f59d
   14000f585:	movzx  eax,WORD PTR [r14+0x88]
   14000f58d:	mov    DWORD PTR [rsp+0x20],eax
   14000f591:	mov    r9,rbx
   14000f594:	mov    rcx,QWORD PTR [rcx+0x10]
   14000f598:	call   0x14000e318
   14000f59d:	mov    ecx,0xffffffff
   14000f5a2:	cmp    rbx,rcx
   14000f5a5:	jae    0x14000f5b1
   14000f5a7:	mov    ecx,ebx
   14000f5a9:	call   QWORD PTR [rip+0x22bb1]        # 0x140032160
   14000f5af:	jmp    0x14000f5cc
   14000f5b1:	xor    edx,edx
   14000f5b3:	mov    rax,rbx
   14000f5b6:	div    rcx
   14000f5b9:	mov    rbx,rax
   14000f5bc:	mov    ecx,0xfffffffe
   14000f5c1:	call   QWORD PTR [rip+0x22b99]        # 0x140032160
   14000f5c7:	sub    rbx,r13
   14000f5ca:	jne    0x14000f5bc
   14000f5cc:	cmp    BYTE PTR [r14+0x13f],dil
   14000f5d3:	je     0x14000f632
   14000f5d5:	mov    rcx,QWORD PTR [rip+0x3ba9c]        # 0x14004b078
   14000f5dc:	cmp    rcx,rsi
   14000f5df:	je     0x14000fb09
   14000f5e5:	test   BYTE PTR [rcx+0x1c],0x4
   14000f5e9:	je     0x14000fb09
   14000f5ef:	mov    r10,QWORD PTR [r14+0x70]
   14000f5f3:	mov    r11,QWORD PTR [r14+0x80]
   14000f5fa:	movzx  eax,WORD PTR [r14+0x78]
   14000f5ff:	movzx  r8d,WORD PTR [r14+0x88]
   14000f607:	movzx  r9d,BYTE PTR [r14+0x68]
   14000f60c:	mov    edx,0xf
   14000f611:	mov    DWORD PTR [rsp+0x38],eax
   14000f615:	mov    QWORD PTR [rsp+0x30],r10
   14000f61a:	mov    DWORD PTR [rsp+0x28],r8d
   14000f61f:	mov    QWORD PTR [rsp+0x20],r11
   14000f624:	mov    rcx,QWORD PTR [rcx+0x10]
   14000f628:	call   0x14000e410
   14000f62d:	jmp    0x14000fb09
   14000f632:	mov    rcx,QWORD PTR [rip+0x3ba3f]        # 0x14004b078
   14000f639:	cmp    rcx,rsi
   14000f63c:	je     0x14000f6a2
   14000f63e:	test   BYTE PTR [rcx+0x1c],0x10
   14000f642:	je     0x14000f6a2
   14000f644:	mov    r11,QWORD PTR [r14+0x70]
   14000f648:	mov    rbx,QWORD PTR [r14+0x80]
   14000f64f:	mov    eax,DWORD PTR [r14+r12*4+0xe0]
   14000f657:	movzx  r8d,WORD PTR [r14+0x78]
   14000f65c:	movzx  r10d,WORD PTR [r14+0x88]
   14000f664:	movzx  r9d,BYTE PTR [r14+0x68]
   14000f669:	mov    QWORD PTR [rsp+0x58],rax
   14000f66e:	mov    DWORD PTR [rsp+0x50],r15d
   14000f673:	mov    rax,QWORD PTR [r14+r12*8+0x90]
   14000f67b:	mov    QWORD PTR [rsp+0x48],rax
   14000f680:	mov    DWORD PTR [rsp+0x40],r12d
   14000f685:	mov    DWORD PTR [rsp+0x38],r8d
   14000f68a:	mov    QWORD PTR [rsp+0x30],r11
   14000f68f:	mov    DWORD PTR [rsp+0x28],r10d
   14000f694:	mov    QWORD PTR [rsp+0x20],rbx
   14000f699:	mov    rcx,QWORD PTR [rcx+0x10]
   14000f69d:	call   0x14000e540
   14000f6a2:	mov    DWORD PTR [rbp-0x29],edi
   14000f6a5:	call   QWORD PTR [rip+0x22da5]        # 0x140032450
   14000f6ab:	mov    rbx,QWORD PTR [rax+0xa0]
   14000f6b2:	mov    rcx,rbx
   14000f6b5:	call   QWORD PTR [rip+0x22fed]        # 0x1400326a8
   14000f6bb:	lea    r8,[rbp-0x29]
   14000f6bf:	xor    edx,edx
   14000f6c1:	lea    rcx,[rip+0x275e8]        # 0x140036cb0
   14000f6c8:	call   rbx
   14000f6ca:	cmp    DWORD PTR [rbp-0x29],edi
   14000f6cd:	setne  bl
   14000f6d0:	mov    BYTE PTR [rbp+0x67],bl
   14000f6d3:	mov    eax,DWORD PTR [r14+r12*4+0xe0]
   14000f6db:	test   eax,eax
   14000f6dd:	je     0x14000f7d7
   14000f6e3:	mov    ecx,eax
   14000f6e5:	sub    rcx,QWORD PTR [r14+r12*8+0x90]
   14000f6ed:	cmp    r15,rcx
   14000f6f0:	jb     0x14000f7d7
   14000f6f6:	mov    BYTE PTR [r14+0x13f],r13b
   14000f6fd:	mov    rcx,QWORD PTR [rip+0x3b974]        # 0x14004b078
   14000f704:	cmp    rcx,rsi
   14000f707:	je     0x14000f76b
   14000f709:	test   BYTE PTR [rcx+0x1c],0x4
   14000f70d:	je     0x14000f76b
   14000f70f:	mov    r9,QWORD PTR [r14+0x70]
   14000f713:	mov    r11,QWORD PTR [r14+0x80]
   14000f71a:	movzx  eax,WORD PTR [r14+0x78]
   14000f71f:	movzx  edx,WORD PTR [r14+0x88]
   14000f727:	movzx  r8d,BYTE PTR [r14+0x68]
   14000f72c:	mov    r10d,DWORD PTR [r14+r12*4+0xe0]
   14000f734:	mov    DWORD PTR [rsp+0x58],eax
   14000f738:	mov    QWORD PTR [rsp+0x50],r9
   14000f73d:	mov    DWORD PTR [rsp+0x48],edx
   14000f741:	mov    QWORD PTR [rsp+0x40],r11
   14000f746:	mov    DWORD PTR [rsp+0x38],r8d
   14000f74b:	mov    DWORD PTR [rsp+0x30],r12d
   14000f750:	mov    QWORD PTR [rsp+0x28],r10
   14000f755:	mov    DWORD PTR [rsp+0x20],r15d
   14000f75a:	mov    r9,QWORD PTR [r14+r12*8+0x90]
   14000f762:	mov    rcx,QWORD PTR [rcx+0x10]
   14000f766:	call   0x14000e734
   14000f76b:	test   bl,bl
   14000f76d:	je     0x14000f7c7
   14000f76f:	movzx  eax,WORD PTR [r14+0x78]
   14000f774:	movzx  ecx,WORD PTR [r14+0x88]
   14000f77c:	movzx  edx,BYTE PTR [r14+0x68]
   14000f781:	mov    DWORD PTR [rsp+0x48],eax
   14000f785:	mov    rax,QWORD PTR [r14+0x70]
   14000f789:	mov    QWORD PTR [rsp+0x40],rax
   14000f78e:	mov    DWORD PTR [rsp+0x38],ecx
   14000f792:	mov    rax,QWORD PTR [r14+0x80]
   14000f799:	mov    QWORD PTR [rsp+0x30],rax
   14000f79e:	mov    DWORD PTR [rsp+0x28],edx
   14000f7a2:	mov    DWORD PTR [rsp+0x20],r12d
   14000f7a7:	mov    r9d,DWORD PTR [r14+r12*4+0xe0]
   14000f7af:	mov    r8d,r15d
   14000f7b2:	mov    rdx,QWORD PTR [r14+r12*8+0x90]
   14000f7ba:	lea    rcx,[rip+0x2751f]        # 0x140036ce0
   14000f7c1:	call   QWORD PTR [rip+0x22b69]        # 0x140032330
   14000f7c7:	mov    r15d,DWORD PTR [r14+r12*4+0xe0]
   14000f7cf:	sub    r15d,DWORD PTR [r14+r12*8+0x90]
   14000f7d7:	mov    r9,QWORD PTR [r14+0x60]
   14000f7db:	mov    QWORD PTR [rbp-0x19],r9
   14000f7df:	mov    rbx,QWORD PTR [r14+0xe8]
   14000f7e6:	add    rbx,0x120
   14000f7ed:	mov    QWORD PTR [rbp-0x9],rbx
   14000f7f1:	mov    rcx,rbx
   14000f7f4:	call   0x140029ab0
   14000f7f9:	test   eax,eax
   14000f7fb:	jns    0x14000f805
   14000f7fd:	mov    ecx,eax
   14000f7ff:	call   0x140029d64
   14000f804:	nop
   14000f805:	mov    rax,QWORD PTR [r9]
   14000f808:	mov    esi,edi
   14000f80a:	cmp    r12d,0x1
   14000f80e:	sete   sil
   14000f812:	mov    rdi,QWORD PTR [rax+0x28]
   14000f816:	mov    rcx,rdi
   14000f819:	call   QWORD PTR [rip+0x22e89]        # 0x1400326a8
   14000f81f:	mov    r9d,r15d
   14000f822:	mov    r8,QWORD PTR [rbp+0x77]
   14000f826:	mov    edx,esi
   14000f828:	mov    rcx,QWORD PTR [rbp-0x19]
   14000f82c:	call   rdi
   14000f82e:	xor    esi,esi
   14000f830:	test   eax,eax
   14000f832:	jns    0x14000f83c
   14000f834:	mov    ecx,eax
   14000f836:	call   0x140029d64
   14000f83b:	nop
   14000f83c:	or     eax,0xffffffff
   14000f83f:	lock xadd DWORD PTR [rbx+0x8],eax
   14000f844:	dec    eax
   14000f846:	cmp    eax,0x80000000
   14000f84b:	jne    0x14000f856
   14000f84d:	mov    rcx,QWORD PTR [rbp-0x9]
   14000f851:	call   0x140029c90
   14000f856:	mov    eax,r15d
   14000f859:	add    QWORD PTR [r14+r12*8+0x90],rax
   14000f861:	cmp    BYTE PTR [r14+0x13f],sil
   14000f868:	je     0x14000f90b
   14000f86e:	mov    rcx,QWORD PTR [rip+0x3b803]        # 0x14004b078
   14000f875:	lea    rax,[rip+0x3b7fc]        # 0x14004b078
   14000f87c:	cmp    rcx,rax
   14000f87f:	je     0x14000f8c5
   14000f881:	test   BYTE PTR [rcx+0x1c],0x4
   14000f885:	je     0x14000f8c5
   14000f887:	mov    r10,QWORD PTR [r14+0x70]
   14000f88b:	mov    r11,QWORD PTR [r14+0x80]
   14000f892:	movzx  eax,WORD PTR [r14+0x78]
   14000f897:	movzx  r8d,WORD PTR [r14+0x88]
   14000f89f:	movzx  r9d,BYTE PTR [r14+0x68]
   14000f8a4:	mov    edx,0x12
   14000f8a9:	mov    DWORD PTR [rsp+0x38],eax
   14000f8ad:	mov    QWORD PTR [rsp+0x30],r10
   14000f8b2:	mov    DWORD PTR [rsp+0x28],r8d
   14000f8b7:	mov    QWORD PTR [rsp+0x20],r11
   14000f8bc:	mov    rcx,QWORD PTR [rcx+0x10]
   14000f8c0:	call   0x14000e410
   14000f8c5:	cmp    BYTE PTR [rbp+0x67],sil
   14000f8c9:	je     0x14000f8fe
   14000f8cb:	movzx  eax,WORD PTR [r14+0x78]
   14000f8d0:	movzx  r9d,WORD PTR [r14+0x88]
   14000f8d8:	movzx  edx,BYTE PTR [r14+0x68]
   14000f8dd:	mov    DWORD PTR [rsp+0x28],eax
   14000f8e1:	mov    rax,QWORD PTR [r14+0x70]
   14000f8e5:	mov    QWORD PTR [rsp+0x20],rax
   14000f8ea:	mov    r8,QWORD PTR [r14+0x80]
   14000f8f1:	lea    rcx,[rip+0x274b8]        # 0x140036db0
   14000f8f8:	call   QWORD PTR [rip+0x22a32]        # 0x140032330
   14000f8fe:	mov    rcx,r14
   14000f901:	call   0x14000f41c
   14000f906:	jmp    0x14000fb09
   14000f90b:	cmp    BYTE PTR [r14+0x140],sil
   14000f912:	jne    0x14000fb09
   14000f918:	movzx  r9d,WORD PTR [r14+r12*8+0x90]
   14000f921:	sub    r9w,r15w
   14000f925:	mov    edi,0x20
   14000f92a:	cmp    r9w,di
   14000f92e:	jae    0x14000f969
   14000f930:	movzx  eax,r9w
   14000f934:	mov    edx,edi
   14000f936:	sub    edx,eax
   14000f938:	movzx  eax,r15w
   14000f93c:	mov    ecx,edi
   14000f93e:	sub    cx,r9w
   14000f942:	cmp    edx,eax
   14000f944:	cmovl  r15w,cx
   14000f949:	movzx  r8d,r15w
   14000f94d:	lea    rax,[r12+0x5]
   14000f952:	shl    rax,0x5
   14000f956:	movzx  ecx,r9w
   14000f95a:	add    rax,r14
   14000f95d:	add    rcx,rax
   14000f960:	mov    rdx,QWORD PTR [rbp+0x77]
   14000f964:	call   0x14002e2f2
   14000f969:	cmp    QWORD PTR [r14+0x90],rdi
   14000f970:	jae    0x14000f97f
   14000f972:	cmp    QWORD PTR [r14+0x98],rdi
   14000f979:	jb     0x14000fb09
   14000f97f:	mov    rdx,QWORD PTR [r14+0x60]
   14000f983:	mov    rcx,QWORD PTR [r14+0xe8]
   14000f98a:	call   0x140011a5c
   14000f98f:	test   al,al
   14000f991:	jne    0x14000f9eb
   14000f993:	lea    r15,[rip+0x274ce]        # 0x140036e68
   14000f99a:	lea    rsi,[rip+0x274df]        # 0x140036e80
   14000f9a1:	mov    bl,BYTE PTR [r14+0x68]
   14000f9a5:	call   0x140023548
   14000f9aa:	mov    dl,bl
   14000f9ac:	mov    rcx,rax
   14000f9af:	call   0x1400235c0
   14000f9b4:	mov    edx,0x1
   14000f9b9:	mov    ecx,0xbe
   14000f9be:	call   QWORD PTR [rip+0x22aa4]        # 0x140032468
   14000f9c4:	xor    edx,edx
   14000f9c6:	mov    ecx,0x107
   14000f9cb:	call   QWORD PTR [rip+0x22a07]        # 0x1400323d8
   14000f9d1:	mov    edx,0x64
   14000f9d6:	mov    ecx,0x105
   14000f9db:	call   QWORD PTR [rip+0x229f7]        # 0x1400323d8
   14000f9e1:	mov    rcx,r14
   14000f9e4:	call   0x14000f41c
   14000f9e9:	jmp    0x14000fa0a
   14000f9eb:	lea    r15,[rip+0x274de]        # 0x140036ed0
   14000f9f2:	lea    rsi,[rip+0x274e7]        # 0x140036ee0
   14000f9f9:	call   0x140023548
   14000f9fe:	mov    rcx,rax
   14000fa01:	mov    dl,BYTE PTR [r14+0x68]
   14000fa05:	call   0x140023694
   14000fa0a:	mov    BYTE PTR [r14+0x140],0x1
   14000fa12:	mov    rbx,QWORD PTR [rip+0x3b65f]        # 0x14004b078
   14000fa19:	lea    rax,[rip+0x3b658]        # 0x14004b078
   14000fa20:	cmp    rbx,rax
   14000fa23:	je     0x14000fac8
   14000fa29:	test   BYTE PTR [rbx+0x1c],0x10
   14000fa2d:	je     0x14000fac8
   14000fa33:	movzx  ecx,WORD PTR [r14+0x98]
   14000fa3b:	cmp    di,cx
   14000fa3e:	jae    0x14000fa43
   14000fa40:	movzx  ecx,di
   14000fa43:	movzx  eax,WORD PTR [r14+0x90]
   14000fa4b:	cmp    di,ax
   14000fa4e:	jb     0x14000fa53
   14000fa50:	movzx  edi,ax
   14000fa53:	lea    rax,[r14+0xc0]
   14000fa5a:	mov    QWORD PTR [rbp-0x19],rax
   14000fa5e:	mov    WORD PTR [rbp-0x11],cx
   14000fa62:	lea    rax,[r14+0xa0]
   14000fa69:	mov    QWORD PTR [rbp+0xf],rax
   14000fa6d:	mov    WORD PTR [rbp+0x17],di
   14000fa71:	mov    r10,QWORD PTR [r14+0x70]
   14000fa75:	mov    r11,QWORD PTR [r14+0x80]
   14000fa7c:	movzx  eax,WORD PTR [r14+0x78]
   14000fa81:	movzx  edx,WORD PTR [r14+0x88]
   14000fa89:	movzx  r8d,BYTE PTR [r14+0x68]
   14000fa8e:	lea    rcx,[rbp-0x19]
   14000fa92:	mov    QWORD PTR [rsp+0x58],rcx
   14000fa97:	lea    rcx,[rbp+0xf]
   14000fa9b:	mov    QWORD PTR [rsp+0x50],rcx
   14000faa0:	mov    DWORD PTR [rsp+0x48],eax
   14000faa4:	mov    QWORD PTR [rsp+0x40],r10
   14000faa9:	mov    DWORD PTR [rsp+0x38],edx
   14000faad:	mov    QWORD PTR [rsp+0x30],r11
   14000fab2:	mov    DWORD PTR [rsp+0x28],r8d
   14000fab7:	mov    DWORD PTR [rsp+0x20],r12d
   14000fabc:	mov    r9,r15
   14000fabf:	mov    rcx,QWORD PTR [rbx+0x10]
   14000fac3:	call   0x14000e8c8
   14000fac8:	cmp    BYTE PTR [rbp+0x67],0x0
   14000facc:	je     0x14000fb09
   14000face:	movzx  eax,WORD PTR [r14+0x78]
   14000fad3:	movzx  ecx,WORD PTR [r14+0x88]
   14000fadb:	movzx  r8d,BYTE PTR [r14+0x68]
   14000fae0:	mov    DWORD PTR [rsp+0x30],eax
   14000fae4:	mov    rax,QWORD PTR [r14+0x70]
   14000fae8:	mov    QWORD PTR [rsp+0x28],rax
   14000faed:	mov    DWORD PTR [rsp+0x20],ecx
   14000faf1:	mov    r9,QWORD PTR [r14+0x80]
   14000faf8:	mov    rdx,rsi
   14000fafb:	lea    rcx,[rip+0x2743e]        # 0x140036f40
   14000fb02:	call   QWORD PTR [rip+0x22828]        # 0x140032330
   14000fb08:	nop
   14000fb09:	mov    rax,QWORD PTR [rbp-0x21]
   14000fb0d:	or     ecx,0xffffffff
   14000fb10:	lock xadd DWORD PTR [rax+0x8],ecx
   14000fb15:	dec    ecx
   14000fb17:	cmp    ecx,0x80000000
   14000fb1d:	jne    0x14000fb28
   14000fb1f:	mov    rcx,QWORD PTR [rbp-0x21]
   14000fb23:	call   0x140029c90
   14000fb28:	mov    rbx,QWORD PTR [rsp+0xf8]
   14000fb30:	add    rsp,0xb0
   14000fb37:	pop    r15
   14000fb39:	pop    r14
   14000fb3b:	pop    r13
   14000fb3d:	pop    r12
   14000fb3f:	pop    rdi
   14000fb40:	pop    rsi
   14000fb41:	pop    rbp
   14000fb42:	ret    
   14000fb43:	int3   
   14000fb44:	int3   
   14000fb45:	int3   
   14000fb46:	int3   
   14000fb47:	int3   
   14000fb48:	int3   
   14000fb49:	int3   
   14000fb4a:	int3   
   14000fb4b:	int3   
   14000fb4c:	int3   
   14000fb4d:	int3   
   14000fb4e:	int3   
   14000fb4f:	int3   
   14000fb50:	rex push rdi
   14000fb52:	sub    rsp,0x30
   14000fb56:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000fb5f:	mov    QWORD PTR [rsp+0x48],rbx
   14000fb64:	mov    r10d,edx
   14000fb67:	mov    r9,rcx
   14000fb6a:	lea    rbx,[rcx+0xf0]
   14000fb71:	mov    QWORD PTR [rsp+0x40],rbx
   14000fb76:	mov    rcx,rbx
   14000fb79:	call   0x140029ab0
   14000fb7e:	xor    edi,edi
   14000fb80:	test   eax,eax
   14000fb82:	jns    0x14000fb8c
   14000fb84:	mov    ecx,eax
   14000fb86:	call   0x140029d64
   14000fb8b:	nop
   14000fb8c:	cmp    BYTE PTR [r9+0x13c],dil
   14000fb93:	je     0x14000fbb2
   14000fb95:	cmp    r10d,0x1
   14000fb99:	sete   dil
   14000fb9d:	mov    r8d,edi
   14000fba0:	mov    rdx,QWORD PTR [r9+0x60]
   14000fba4:	mov    rcx,QWORD PTR [r9+0xe8]
   14000fbab:	call   0x140011b00
   14000fbb0:	mov    edi,eax
   14000fbb2:	or     eax,0xffffffff
   14000fbb5:	lock xadd DWORD PTR [rbx+0x8],eax
   14000fbba:	dec    eax
   14000fbbc:	cmp    eax,0x80000000
   14000fbc1:	jne    0x14000fbcd
   14000fbc3:	mov    rcx,QWORD PTR [rsp+0x40]
   14000fbc8:	call   0x140029c90
   14000fbcd:	mov    eax,edi
   14000fbcf:	mov    rbx,QWORD PTR [rsp+0x48]
   14000fbd4:	add    rsp,0x30
   14000fbd8:	pop    rdi
   14000fbd9:	ret    
   14000fbda:	int3   
   14000fbdb:	int3   
   14000fbdc:	int3   
   14000fbdd:	int3   
   14000fbde:	int3   
   14000fbdf:	int3   
   14000fbe0:	rex push rbx
   14000fbe2:	sub    rsp,0x30
   14000fbe6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000fbef:	mov    r9d,r8d
   14000fbf2:	mov    r11d,edx
   14000fbf5:	mov    r10,rcx
   14000fbf8:	lea    rbx,[rcx+0xf0]
   14000fbff:	mov    QWORD PTR [rsp+0x40],rbx
   14000fc04:	mov    rcx,rbx
   14000fc07:	call   0x140029ab0
   14000fc0c:	xor    r8d,r8d
   14000fc0f:	test   eax,eax
   14000fc11:	jns    0x14000fc1b
   14000fc13:	mov    ecx,eax
   14000fc15:	call   0x140029d64
   14000fc1a:	nop
   14000fc1b:	test   r9d,r9d
   14000fc1e:	je     0x14000fc39
   14000fc20:	cmp    r11d,0x1
   14000fc24:	sete   r8b
   14000fc28:	mov    rdx,QWORD PTR [r10+0x60]
   14000fc2c:	mov    rcx,QWORD PTR [r10+0xe8]
   14000fc33:	call   0x140011c18
   14000fc38:	nop
   14000fc39:	or     eax,0xffffffff
   14000fc3c:	lock xadd DWORD PTR [rbx+0x8],eax
   14000fc41:	dec    eax
   14000fc43:	cmp    eax,0x80000000
   14000fc48:	jne    0x14000fc54
   14000fc4a:	mov    rcx,QWORD PTR [rsp+0x40]
   14000fc4f:	call   0x140029c90
   14000fc54:	add    rsp,0x30
   14000fc58:	pop    rbx
   14000fc59:	ret    
   14000fc5a:	int3   
   14000fc5b:	int3   
   14000fc5c:	int3   
   14000fc5d:	int3   
   14000fc5e:	int3   
   14000fc5f:	int3   
   14000fc60:	mov    rax,rsp
   14000fc63:	push   rdi
   14000fc64:	sub    rsp,0x30
   14000fc68:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14000fc70:	mov    QWORD PTR [rax+0x18],rbx
   14000fc74:	mov    QWORD PTR [rax+0x20],rsi
   14000fc78:	mov    rbx,rcx
   14000fc7b:	add    rcx,0xf0
   14000fc82:	mov    QWORD PTR [rax+0x8],rcx
   14000fc86:	call   0x140029ab0
   14000fc8b:	test   eax,eax
   14000fc8d:	jns    0x14000fc97
   14000fc8f:	mov    ecx,eax
   14000fc91:	call   0x140029d64
   14000fc96:	nop
   14000fc97:	mov    rdx,QWORD PTR [rbx+0x60]
   14000fc9b:	test   rdx,rdx
   14000fc9e:	je     0x14000fd1e
   14000fca0:	cmp    BYTE PTR [rbx+0x68],0x6
   14000fca4:	jne    0x14000fcb2
   14000fca6:	mov    rcx,QWORD PTR [rbx+0xe8]
   14000fcad:	call   0x140011d30
   14000fcb2:	mov    rsi,QWORD PTR [rbx+0x60]
   14000fcb6:	mov    rbx,QWORD PTR [rbx+0xe8]
   14000fcbd:	add    rbx,0x120
   14000fcc4:	mov    QWORD PTR [rsp+0x48],rbx
   14000fcc9:	mov    rcx,rbx
   14000fccc:	call   0x140029ab0
   14000fcd1:	test   eax,eax
   14000fcd3:	jns    0x14000fcdd
   14000fcd5:	mov    ecx,eax
   14000fcd7:	call   0x140029d64
   14000fcdc:	nop
   14000fcdd:	mov    rax,QWORD PTR [rsi]
   14000fce0:	mov    rdi,QWORD PTR [rax+0x38]
   14000fce4:	mov    rcx,rdi
   14000fce7:	call   QWORD PTR [rip+0x229bb]        # 0x1400326a8
   14000fced:	mov    rcx,rsi
   14000fcf0:	call   rdi
   14000fcf2:	test   eax,eax
   14000fcf4:	jns    0x14000fcfe
   14000fcf6:	mov    ecx,eax
   14000fcf8:	call   0x140029d64
   14000fcfd:	nop
   14000fcfe:	or     eax,0xffffffff
   14000fd01:	lock xadd DWORD PTR [rbx+0x8],eax
   14000fd06:	dec    eax
   14000fd08:	cmp    eax,0x80000000
   14000fd0d:	jne    0x14000fd19
   14000fd0f:	mov    rcx,QWORD PTR [rsp+0x48]
   14000fd14:	call   0x140029c90
   14000fd19:	mov    rcx,QWORD PTR [rsp+0x40]
   14000fd1e:	or     eax,0xffffffff
   14000fd21:	lock xadd DWORD PTR [rcx+0x8],eax
   14000fd26:	dec    eax
   14000fd28:	cmp    eax,0x80000000
   14000fd2d:	jne    0x14000fd39
   14000fd2f:	mov    rcx,QWORD PTR [rsp+0x40]
   14000fd34:	call   0x140029c90
   14000fd39:	mov    rbx,QWORD PTR [rsp+0x50]
   14000fd3e:	mov    rsi,QWORD PTR [rsp+0x58]
   14000fd43:	add    rsp,0x30
   14000fd47:	pop    rdi
   14000fd48:	ret    
   14000fd49:	int3   
   14000fd4a:	int3   
   14000fd4b:	int3   
   14000fd4c:	int3   
   14000fd4d:	int3   
   14000fd4e:	int3   
   14000fd4f:	int3   
   14000fd50:	mov    rax,rsp
   14000fd53:	mov    QWORD PTR [rax+0x8],rbx
   14000fd57:	mov    QWORD PTR [rax+0x10],rbp
   14000fd5b:	mov    QWORD PTR [rax+0x18],rsi
   14000fd5f:	mov    QWORD PTR [rax+0x20],rdi
   14000fd63:	push   r14
   14000fd65:	sub    rsp,0x30
   14000fd69:	mov    rax,QWORD PTR [rcx]
   14000fd6c:	mov    r14,rcx
   14000fd6f:	mov    rbx,r9
   14000fd72:	mov    rsi,r8
   14000fd75:	mov    rbp,rdx
   14000fd78:	mov    rdi,QWORD PTR [rax+0x40]
   14000fd7c:	mov    rcx,rdi
   14000fd7f:	call   QWORD PTR [rip+0x22923]        # 0x1400326a8
   14000fd85:	mov    QWORD PTR [rsp+0x28],rbx
   14000fd8a:	xor    r9d,r9d
   14000fd8d:	and    DWORD PTR [rsp+0x20],0x0
   14000fd92:	mov    r8,rsi
   14000fd95:	mov    rdx,rbp
   14000fd98:	mov    rcx,r14
   14000fd9b:	call   rdi
   14000fd9d:	mov    rbx,QWORD PTR [rsp+0x40]
   14000fda2:	mov    rbp,QWORD PTR [rsp+0x48]
   14000fda7:	mov    rsi,QWORD PTR [rsp+0x50]
   14000fdac:	mov    rdi,QWORD PTR [rsp+0x58]
   14000fdb1:	add    rsp,0x30
   14000fdb5:	pop    r14
   14000fdb7:	ret    
   14000fdb8:	int3   
   14000fdb9:	int3   
   14000fdba:	int3   
   14000fdbb:	int3   
   14000fdbc:	int3   
   14000fdbd:	int3   
   14000fdbe:	int3   
   14000fdbf:	int3   
   14000fdc0:	mov    rax,rsp
   14000fdc3:	mov    QWORD PTR [rax+0x20],r9
   14000fdc7:	mov    QWORD PTR [rax+0x18],r8
   14000fdcb:	mov    QWORD PTR [rax+0x10],rdx
   14000fdcf:	mov    QWORD PTR [rax+0x8],rcx
   14000fdd3:	push   rbx
   14000fdd4:	push   rsi
   14000fdd5:	push   rdi
   14000fdd6:	push   r12
   14000fdd8:	push   r13
   14000fdda:	push   r14
   14000fddc:	push   r15
   14000fdde:	sub    rsp,0x60
   14000fde2:	mov    QWORD PTR [rax-0x48],0xfffffffffffffffe
   14000fdea:	mov    r15,r8
   14000fded:	mov    r14,rdx
   14000fdf0:	mov    rdi,rcx
   14000fdf3:	xor    esi,esi
   14000fdf5:	mov    QWORD PTR [rax-0x70],rsi
   14000fdf9:	add    rcx,0xe8
   14000fe00:	call   0x140029ab0
   14000fe05:	mov    ebx,eax
   14000fe07:	test   eax,eax
   14000fe09:	js     0x14000fe12
   14000fe0b:	mov    QWORD PTR [rsp+0x28],rcx
   14000fe10:	mov    ebx,esi
   14000fe12:	test   ebx,ebx
   14000fe14:	jns    0x14000fe48
   14000fe16:	mov    rcx,QWORD PTR [rsp+0x28]
   14000fe1b:	test   rcx,rcx
   14000fe1e:	je     0x14000fe41
   14000fe20:	or     r14d,0xffffffff
   14000fe24:	mov    edx,r14d
   14000fe27:	lock xadd DWORD PTR [rcx+0x8],edx
   14000fe2c:	add    edx,r14d
   14000fe2f:	cmp    edx,0x80000000
   14000fe35:	jne    0x14000fe41
   14000fe37:	mov    rcx,QWORD PTR [rsp+0x28]
   14000fe3c:	call   0x140029c90
   14000fe41:	mov    eax,ebx
   14000fe43:	jmp    0x140010237
   14000fe48:	call   0x140025df8
   14000fe4d:	test   al,al
   14000fe4f:	jne    0x14000feda
   14000fe55:	mov    DWORD PTR [rsp+0x20],esi
   14000fe59:	call   QWORD PTR [rip+0x225f1]        # 0x140032450
   14000fe5f:	mov    rbx,QWORD PTR [rax+0xa0]
   14000fe66:	mov    rcx,rbx
   14000fe69:	call   QWORD PTR [rip+0x22839]        # 0x1400326a8
   14000fe6f:	lea    r8,[rsp+0x20]
   14000fe74:	xor    edx,edx
   14000fe76:	lea    rcx,[rip+0x270fb]        # 0x140036f78
   14000fe7d:	call   rbx
   14000fe7f:	cmp    DWORD PTR [rsp+0x20],esi
   14000fe83:	je     0x14000feda
   14000fe85:	lea    r13,[rip+0x3b1ec]        # 0x14004b078
   14000fe8c:	mov    rcx,QWORD PTR [rip+0x3b1e5]        # 0x14004b078
   14000fe93:	cmp    rcx,r13
   14000fe96:	je     0x14000feb3
   14000fe98:	test   BYTE PTR [rcx+0x1c],0x2
   14000fe9c:	je     0x14000feb3
   14000fe9e:	mov    edx,0x14
   14000fea3:	lea    r8,[rip+0x2726e]        # 0x140037118
   14000feaa:	mov    rcx,QWORD PTR [rcx+0x10]
   14000feae:	call   0x140001f08
   14000feb3:	mov    rax,QWORD PTR [rdi]
   14000feb6:	mov    rbx,QWORD PTR [rax+0x30]
   14000feba:	mov    rcx,rbx
   14000febd:	call   QWORD PTR [rip+0x227e5]        # 0x1400326a8
   14000fec3:	mov    r8,QWORD PTR [rsp+0xc8]
   14000fecb:	mov    rdx,r15
   14000fece:	mov    rcx,rdi
   14000fed1:	call   rbx
   14000fed3:	mov    ebx,eax
   14000fed5:	jmp    0x14000fe16
   14000feda:	mov    r15d,0x1
   14000fee0:	test   BYTE PTR [rip+0x400d9],r15b        # 0x14004ffc0
   14000fee7:	je     0x14000fefc
   14000fee9:	lea    r8,[rip+0x24320]        # 0x140034210
   14000fef0:	lea    rdx,[rip+0x24401]        # 0x1400342f8
   14000fef7:	call   0x140003818
   14000fefc:	lea    r13,[rip+0x3b175]        # 0x14004b078
   14000ff03:	mov    rcx,QWORD PTR [rip+0x3b16e]        # 0x14004b078
   14000ff0a:	cmp    rcx,r13
   14000ff0d:	je     0x14000ff2d
   14000ff0f:	test   BYTE PTR [rcx+0x1c],0x4
   14000ff13:	je     0x14000ff2d
   14000ff15:	mov    edx,0x15
   14000ff1a:	mov    r9,r14
   14000ff1d:	lea    r8,[rip+0x271f4]        # 0x140037118
   14000ff24:	mov    rcx,QWORD PTR [rcx+0x10]
   14000ff28:	call   0x14000756c
   14000ff2d:	mov    rbx,rsi
   14000ff30:	mov    QWORD PTR [rsp+0x30],rbx
   14000ff35:	mov    r10,QWORD PTR [rdi+0xe0]
   14000ff3c:	mov    r9,rsi
   14000ff3f:	lea    rcx,[r10+0x120]
   14000ff46:	call   0x140029ab0
   14000ff4b:	mov    r12d,eax
   14000ff4e:	test   eax,eax
   14000ff50:	js     0x14000ff58
   14000ff52:	mov    r9,rcx
   14000ff55:	mov    r12d,esi
   14000ff58:	test   r12d,r12d
   14000ff5b:	jns    0x14000ff88
   14000ff5d:	or     r14d,0xffffffff
   14000ff61:	test   r9,r9
   14000ff64:	je     0x14000ffd7
   14000ff66:	mov    eax,r14d
   14000ff69:	lock xadd DWORD PTR [r9+0x8],eax
   14000ff6f:	add    eax,r14d
   14000ff72:	cmp    eax,0x80000000
   14000ff77:	jne    0x14000ff81
   14000ff79:	mov    rcx,r9
   14000ff7c:	call   0x140029c90
   14000ff81:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ff86:	jmp    0x14000ffd7
   14000ff88:	mov    rbx,QWORD PTR [r10+0xa8]
   14000ff8f:	test   rbx,rbx
   14000ff92:	je     0x14000ffa6
   14000ff94:	mov    eax,DWORD PTR [rbx+0x8]
   14000ff97:	test   eax,eax
   14000ff99:	jne    0x14000ffa1
   14000ff9b:	mov    DWORD PTR [rbx+0x8],r15d
   14000ff9f:	jmp    0x14000ffa6
   14000ffa1:	lock add DWORD PTR [rbx+0x8],r15d
   14000ffa6:	mov    QWORD PTR [rsp+0x30],rbx
   14000ffab:	or     r14d,0xffffffff
   14000ffaf:	test   r9,r9
   14000ffb2:	je     0x14000ffd4
   14000ffb4:	mov    eax,r14d
   14000ffb7:	lock xadd DWORD PTR [r9+0x8],eax
   14000ffbd:	add    eax,r14d
   14000ffc0:	cmp    eax,0x80000000
   14000ffc5:	jne    0x14000ffcf
   14000ffc7:	mov    rcx,r9
   14000ffca:	call   0x140029c90
   14000ffcf:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ffd4:	mov    r12d,esi
   14000ffd7:	test   r12d,r12d
   14000ffda:	jns    0x140010049
   14000ffdc:	test   rbx,rbx
   14000ffdf:	je     0x14001001a
   14000ffe1:	mov    eax,DWORD PTR [rbx+0x8]
   14000ffe4:	cmp    eax,r15d
   14000ffe7:	jne    0x14000ffee
   14000ffe9:	mov    DWORD PTR [rbx+0x8],esi
   14000ffec:	jmp    0x14000fffd
   14000ffee:	mov    eax,r14d
   14000fff1:	lock xadd DWORD PTR [rbx+0x8],eax
   14000fff6:	add    eax,r14d
   14000fff9:	test   eax,eax
   14000fffb:	jg     0x14001001a
   14000fffd:	mov    rbx,QWORD PTR [rsp+0x30]
   140010002:	mov    rax,QWORD PTR [rbx]
   140010005:	mov    rdi,QWORD PTR [rax]
   140010008:	mov    rcx,rdi
   14001000b:	call   QWORD PTR [rip+0x22697]        # 0x1400326a8
   140010011:	mov    edx,r15d
   140010014:	mov    rcx,rbx
   140010017:	call   rdi
   140010019:	nop
   14001001a:	mov    rcx,QWORD PTR [rsp+0x28]
   14001001f:	test   rcx,rcx
   140010022:	je     0x140010041
   140010024:	mov    edx,r14d
   140010027:	lock xadd DWORD PTR [rcx+0x8],edx
   14001002c:	add    edx,r14d
   14001002f:	cmp    edx,0x80000000
   140010035:	jne    0x140010041
   140010037:	mov    rcx,QWORD PTR [rsp+0x28]
   14001003c:	call   0x140029c90
   140010041:	mov    eax,r12d
   140010044:	jmp    0x140010237
   140010049:	mov    QWORD PTR [rsp+0x40],rsi
   14001004e:	mov    r12,QWORD PTR [rsp+0xa8]
   140010056:	mov    r8,r12
   140010059:	lea    rdx,[rsp+0x38]
   14001005e:	lea    rcx,[rbx+0x20]
   140010062:	call   0x140014aa4
   140010067:	mov    rax,QWORD PTR [rsp+0x38]
   14001006c:	cmp    QWORD PTR [rbx+0x20],rax
   140010070:	je     0x14001019f
   140010076:	mov    rdi,QWORD PTR [rax+0x20]
   14001007a:	mov    QWORD PTR [rsp+0x48],rdi
   14001007f:	test   rdi,rdi
   140010082:	je     0x14001008e
   140010084:	lock add DWORD PTR [rdi+0x8],r15d
   140010089:	mov    rbx,QWORD PTR [rsp+0x30]
   14001008e:	mov    QWORD PTR [rsp+0x40],rdi
   140010093:	cmp    DWORD PTR [rdi+0x68],0x2
   140010097:	jne    0x140010113
   140010099:	mov    al,BYTE PTR [rbx+0x93]
   14001009f:	neg    al
   1400100a1:	sbb    cx,cx
   1400100a4:	mov    rbx,QWORD PTR [rsp+0xc8]
   1400100ac:	mov    WORD PTR [rbx],cx
   1400100af:	cmp    si,cx
   1400100b2:	jne    0x1400100e8
   1400100b4:	cmp    DWORD PTR [rdi+0x40],r15d
   1400100b8:	jne    0x1400100e8
   1400100ba:	mov    rcx,QWORD PTR [rip+0x3afb7]        # 0x14004b078
   1400100c1:	cmp    rcx,r13
   1400100c4:	je     0x1400100e4
   1400100c6:	test   BYTE PTR [rcx+0x1c],0x4
   1400100ca:	je     0x1400100e4
   1400100cc:	mov    edx,0x17
   1400100d1:	mov    r9,r12
   1400100d4:	lea    r8,[rip+0x2703d]        # 0x140037118
   1400100db:	mov    rcx,QWORD PTR [rcx+0x10]
   1400100df:	call   0x14000756c
   1400100e4:	mov    WORD PTR [rbx],r14w
   1400100e8:	mov    rcx,QWORD PTR [rsp+0xa0]
   1400100f0:	add    rcx,0xfffffffffffffff8
   1400100f4:	mov    r9d,DWORD PTR [rsp+0xc0]
   1400100fc:	mov    r8,QWORD PTR [rsp+0xb8]
   140010104:	mov    rdx,rdi
   140010107:	call   0x140010498
   14001010c:	mov    ecx,0x111
   140010111:	jmp    0x140010154
   140010113:	mov    rax,QWORD PTR [rsp+0xc8]
   14001011b:	mov    WORD PTR [rax],si
   14001011e:	mov    rcx,QWORD PTR [rsp+0xa0]
   140010126:	add    rcx,0xfffffffffffffff8
   14001012a:	mov    r9,QWORD PTR [rsp+0xb0]
   140010132:	mov    r8,rdi
   140010135:	mov    rdx,r12
   140010138:	call   0x1400105ec
   14001013d:	nop
   14001013e:	jmp    0x14001014f
   140010140:	xor    esi,esi
   140010142:	or     r14d,0xffffffff
   140010146:	lea    r15d,[rsi+0x1]
   14001014a:	mov    rdi,QWORD PTR [rsp+0x48]
   14001014f:	mov    ecx,0x112
   140010154:	mov    edx,r15d
   140010157:	call   QWORD PTR [rip+0x2230b]        # 0x140032468
   14001015d:	nop
   14001015e:	mov    eax,r14d
   140010161:	lock xadd DWORD PTR [rdi+0x8],eax
   140010166:	add    eax,r14d
   140010169:	jne    0x140010183
   14001016b:	mov    rax,QWORD PTR [rdi]
   14001016e:	mov    rbx,QWORD PTR [rax]
   140010171:	mov    rcx,rbx
   140010174:	call   QWORD PTR [rip+0x2252e]        # 0x1400326a8
   14001017a:	mov    edx,r15d
   14001017d:	mov    rcx,rdi
   140010180:	call   rbx
   140010182:	nop
   140010183:	mov    rcx,QWORD PTR [rsp+0x30]
   140010188:	mov    eax,DWORD PTR [rcx+0x8]
   14001018b:	cmp    eax,r15d
   14001018e:	jne    0x140010195
   140010190:	mov    DWORD PTR [rcx+0x8],esi
   140010193:	jmp    0x1400101f1
   140010195:	mov    eax,r14d
   140010198:	lock xadd DWORD PTR [rcx+0x8],eax
   14001019d:	jmp    0x1400101ea
   14001019f:	mov    rcx,QWORD PTR [rip+0x3aed2]        # 0x14004b078
   1400101a6:	cmp    rcx,r13
   1400101a9:	je     0x1400101c9
   1400101ab:	test   BYTE PTR [rcx+0x1c],0x2
   1400101af:	je     0x1400101c9
   1400101b1:	mov    edx,0x16
   1400101b6:	mov    r9,r12
   1400101b9:	lea    r8,[rip+0x26f58]        # 0x140037118
   1400101c0:	mov    rcx,QWORD PTR [rcx+0x10]
   1400101c4:	call   0x14000756c
   1400101c9:	mov    rax,QWORD PTR [rsp+0xc8]
   1400101d1:	mov    WORD PTR [rax],r14w
   1400101d5:	mov    eax,DWORD PTR [rbx+0x8]
   1400101d8:	cmp    eax,r15d
   1400101db:	jne    0x1400101e2
   1400101dd:	mov    DWORD PTR [rbx+0x8],esi
   1400101e0:	jmp    0x1400101f1
   1400101e2:	mov    eax,r14d
   1400101e5:	lock xadd DWORD PTR [rbx+0x8],eax
   1400101ea:	add    eax,r14d
   1400101ed:	test   eax,eax
   1400101ef:	jg     0x14001020e
   1400101f1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400101f6:	mov    rax,QWORD PTR [rbx]
   1400101f9:	mov    rdi,QWORD PTR [rax]
   1400101fc:	mov    rcx,rdi
   1400101ff:	call   QWORD PTR [rip+0x224a3]        # 0x1400326a8
   140010205:	mov    edx,r15d
   140010208:	mov    rcx,rbx
   14001020b:	call   rdi
   14001020d:	nop
   14001020e:	mov    rax,QWORD PTR [rsp+0x28]
   140010213:	test   rax,rax
   140010216:	je     0x140010235
   140010218:	mov    ecx,r14d
   14001021b:	lock xadd DWORD PTR [rax+0x8],ecx
   140010220:	add    ecx,r14d
   140010223:	cmp    ecx,0x80000000
   140010229:	jne    0x140010235
   14001022b:	mov    rcx,QWORD PTR [rsp+0x28]
   140010230:	call   0x140029c90
   140010235:	xor    eax,eax
   140010237:	add    rsp,0x60
   14001023b:	pop    r15
   14001023d:	pop    r14
   14001023f:	pop    r13
   140010241:	pop    r12
   140010243:	pop    rdi
   140010244:	pop    rsi
   140010245:	pop    rbx
   140010246:	ret    
   140010247:	int3   
   140010248:	int3   
   140010249:	int3   
   14001024a:	int3   
   14001024b:	int3   
   14001024c:	int3   
   14001024d:	int3   
   14001024e:	int3   
   14001024f:	int3   
   140010250:	mov    rax,rsp
   140010253:	mov    QWORD PTR [rax+0x8],rcx
   140010257:	push   rdi
   140010258:	push   r12
   14001025a:	push   r13
   14001025c:	push   r14
   14001025e:	push   r15
   140010260:	sub    rsp,0x50
   140010264:	mov    QWORD PTR [rax-0x58],0xfffffffffffffffe
   14001026c:	mov    QWORD PTR [rax+0x10],rbx
   140010270:	mov    QWORD PTR [rax+0x18],rsi
   140010274:	mov    rsi,r8
   140010277:	mov    r12,rdx
   14001027a:	mov    r15,rcx
   14001027d:	xor    r14d,r14d
   140010280:	mov    ebx,r14d
   140010283:	mov    QWORD PTR [rax+0x20],rbx
   140010287:	add    rcx,0xe8
   14001028e:	call   0x140029ab0
   140010293:	mov    edi,eax
   140010295:	test   eax,eax
   140010297:	js     0x1400102a7
   140010299:	mov    rbx,rcx
   14001029c:	mov    QWORD PTR [rsp+0x98],rcx
   1400102a4:	mov    edi,r14d
   1400102a7:	test   edi,edi
   1400102a9:	jns    0x1400102d6
   1400102ab:	test   rbx,rbx
   1400102ae:	je     0x1400102cf
   1400102b0:	or     ecx,0xffffffff
   1400102b3:	lock xadd DWORD PTR [rbx+0x8],ecx
   1400102b8:	dec    ecx
   1400102ba:	cmp    ecx,0x80000000
   1400102c0:	jne    0x1400102cf
   1400102c2:	mov    rcx,QWORD PTR [rsp+0x98]
   1400102ca:	call   0x140029c90
   1400102cf:	mov    eax,edi
   1400102d1:	jmp    0x14001041e
   1400102d6:	mov    WORD PTR [rsi],r14w
   1400102da:	lea    r13,[rip+0x3ad97]        # 0x14004b078
   1400102e1:	mov    rcx,QWORD PTR [rip+0x3ad90]        # 0x14004b078
   1400102e8:	cmp    rcx,r13
   1400102eb:	je     0x140010308
   1400102ed:	test   BYTE PTR [rcx+0x1c],0x2
   1400102f1:	je     0x140010308
   1400102f3:	mov    edx,0x19
   1400102f8:	lea    r8,[rip+0x26e19]        # 0x140037118
   1400102ff:	mov    rcx,QWORD PTR [rcx+0x10]
   140010303:	call   0x140001f08
   140010308:	movsx  edx,WORD PTR [rsi]
   14001030b:	xor    ecx,ecx
   14001030d:	call   QWORD PTR [rip+0x22005]        # 0x140032318
   140010313:	mov    rsi,QWORD PTR [r15+0x48]
   140010317:	mov    rax,QWORD PTR [rsi]
   14001031a:	mov    rdi,QWORD PTR [rax+0x28]
   14001031e:	mov    rcx,rdi
   140010321:	call   QWORD PTR [rip+0x22381]        # 0x1400326a8
   140010327:	mov    rcx,rsi
   14001032a:	call   rdi
   14001032c:	mov    rsi,QWORD PTR [r15+0x48]
   140010330:	mov    rax,QWORD PTR [rsi]
   140010333:	mov    rdi,QWORD PTR [rax+0x20]
   140010337:	mov    rcx,rdi
   14001033a:	call   QWORD PTR [rip+0x22368]        # 0x1400326a8
   140010340:	mov    rcx,rsi
   140010343:	call   rdi
   140010345:	test   eax,eax
   140010347:	jns    0x140010374
   140010349:	mov    rcx,QWORD PTR [rip+0x3ad28]        # 0x14004b078
   140010350:	cmp    rcx,r13
   140010353:	je     0x140010374
   140010355:	test   BYTE PTR [rcx+0x1c],0x1
   140010359:	je     0x140010374
   14001035b:	mov    edx,0x1a
   140010360:	mov    r9d,eax
   140010363:	lea    r8,[rip+0x26dae]        # 0x140037118
   14001036a:	mov    rcx,QWORD PTR [rcx+0x10]
   14001036e:	call   0x140001f70
   140010373:	nop
   140010374:	call   0x140016e54
   140010379:	test   eax,eax
   14001037b:	je     0x140010391
   14001037d:	mov    r8,QWORD PTR [r15+0x48]
   140010381:	mov    rdx,r12
   140010384:	mov    rcx,QWORD PTR [r15+0xe0]
   14001038b:	call   0x140011de4
   140010390:	nop
   140010391:	jmp    0x1400103a3
   140010393:	mov    r15,QWORD PTR [rsp+0x80]
   14001039b:	mov    rbx,QWORD PTR [rsp+0x98]
   1400103a3:	mov    al,BYTE PTR [r15+0x60]
   1400103a7:	mov    BYTE PTR [rsp+0x80],al
   1400103ae:	call   0x140023548
   1400103b3:	mov    rdi,rax
   1400103b6:	lea    rsi,[rax+0x10]
   1400103ba:	mov    QWORD PTR [rsp+0x30],rsi
   1400103bf:	mov    rcx,rsi
   1400103c2:	call   QWORD PTR [rip+0x21d40]        # 0x140032108
   1400103c8:	mov    BYTE PTR [rsp+0x38],0x1
   1400103cd:	mov    BYTE PTR [rsp+0x40],0x1
   1400103d2:	lea    rdx,[rsp+0x80]
   1400103da:	mov    rcx,rdi
   1400103dd:	call   0x1400236d8
   1400103e2:	inc    QWORD PTR [rax+0x8]
   1400103e6:	mov    r8,rax
   1400103e9:	call   0x140023628
   1400103ee:	nop
   1400103ef:	mov    rcx,rsi
   1400103f2:	call   QWORD PTR [rip+0x21d00]        # 0x1400320f8
   1400103f8:	nop
   1400103f9:	test   rbx,rbx
   1400103fc:	je     0x14001041c
   1400103fe:	or     eax,0xffffffff
   140010401:	lock xadd DWORD PTR [rbx+0x8],eax
   140010406:	dec    eax
   140010408:	cmp    eax,0x80000000
   14001040d:	jne    0x14001041c
   14001040f:	mov    rcx,QWORD PTR [rsp+0x98]
   140010417:	call   0x140029c90
   14001041c:	xor    eax,eax
   14001041e:	lea    r11,[rsp+0x50]
   140010423:	mov    rbx,QWORD PTR [r11+0x38]
   140010427:	mov    rsi,QWORD PTR [r11+0x40]
   14001042b:	mov    rsp,r11
   14001042e:	pop    r15
   140010430:	pop    r14
   140010432:	pop    r13
   140010434:	pop    r12
   140010436:	pop    rdi
   140010437:	ret    
   140010438:	int3   
   140010439:	int3   
   14001043a:	int3   
   14001043b:	int3   
   14001043c:	int3   
   14001043d:	int3   
   14001043e:	int3   
   14001043f:	int3   
   140010440:	sub    rsp,0x28
   140010444:	xor    eax,eax
   140010446:	test   rdx,rdx
   140010449:	jne    0x140010487
   14001044b:	mov    rcx,QWORD PTR [rip+0x3ac26]        # 0x14004b078
   140010452:	lea    rax,[rip+0x3ac1f]        # 0x14004b078
   140010459:	cmp    rcx,rax
   14001045c:	je     0x140010480
   14001045e:	test   BYTE PTR [rcx+0x1c],0x1
   140010462:	je     0x140010480
   140010464:	mov    rcx,QWORD PTR [rcx+0x10]
   140010468:	lea    r9,[rip+0x26b49]        # 0x140036fb8
   14001046f:	mov    edx,0xa
   140010474:	lea    r8,[rip+0x23f55]        # 0x1400343d0
   14001047b:	call   0x1400038e0
   140010480:	mov    eax,0x80070057
   140010485:	jmp    0x14001048a
   140010487:	mov    WORD PTR [rdx],ax
   14001048a:	add    rsp,0x28
   14001048e:	ret    
   14001048f:	int3   
   140010490:	int3   
   140010491:	int3   
   140010492:	int3   
   140010493:	int3   
   140010494:	int3   
   140010495:	int3   
   140010496:	int3   
   140010497:	int3   
   140010498:	mov    rax,rsp
   14001049b:	push   rsi
   14001049c:	push   rdi
   14001049d:	push   r12
   14001049f:	push   r14
   1400104a1:	push   r15
   1400104a3:	sub    rsp,0x40
   1400104a7:	mov    QWORD PTR [rax-0x30],0xfffffffffffffffe
   1400104af:	mov    QWORD PTR [rax+0x8],rbx
   1400104b3:	mov    QWORD PTR [rax+0x18],rbp
   1400104b7:	mov    r15d,r9d
   1400104ba:	mov    r12,r8
   1400104bd:	mov    r14,rdx
   1400104c0:	mov    rbp,rcx
   1400104c3:	test   rdx,rdx
   1400104c6:	jne    0x140010507
   1400104c8:	lea    rax,[rip+0x3aba9]        # 0x14004b078
   1400104cf:	mov    rcx,QWORD PTR [rip+0x3aba2]        # 0x14004b078
   1400104d6:	cmp    rcx,rax
   1400104d9:	je     0x1400104fc
   1400104db:	test   BYTE PTR [rcx+0x1c],0x1
   1400104df:	je     0x1400104fc
   1400104e1:	lea    edx,[r14+0xa]
   1400104e5:	lea    r9,[rip+0x26b04]        # 0x140036ff0
   1400104ec:	lea    r8,[rip+0x23edd]        # 0x1400343d0
   1400104f3:	mov    rcx,QWORD PTR [rcx+0x10]
   1400104f7:	call   0x1400038e0
   1400104fc:	mov    ecx,0x80070057
   140010501:	call   0x140029d64
   140010506:	int3   
   140010507:	lea    rbx,[rcx+0xf0]
   14001050e:	mov    QWORD PTR [rsp+0x30],rbx
   140010513:	mov    rcx,rbx
   140010516:	call   0x140029ab0
   14001051b:	test   eax,eax
   14001051d:	jns    0x140010527
   14001051f:	mov    ecx,eax
   140010521:	call   0x140029d64
   140010526:	nop
   140010527:	and    DWORD PTR [rsp+0x78],0x0
   14001052c:	mov    rsi,QWORD PTR [rbp+0x58]
   140010530:	mov    rax,QWORD PTR [rsi]
   140010533:	mov    rdi,QWORD PTR [rax+0x60]
   140010537:	mov    rcx,rdi
   14001053a:	call   QWORD PTR [rip+0x22168]        # 0x1400326a8
   140010540:	lea    rdx,[rsp+0x78]
   140010545:	mov    rcx,rsi
   140010548:	call   rdi
   14001054a:	mov    r9d,eax
   14001054d:	test   eax,eax
   14001054f:	jns    0x140010589
   140010551:	lea    rax,[rip+0x3ab20]        # 0x14004b078
   140010558:	mov    rcx,QWORD PTR [rip+0x3ab19]        # 0x14004b078
   14001055f:	cmp    rcx,rax
   140010562:	je     0x14001057f
   140010564:	test   BYTE PTR [rcx+0x1c],0x2
   140010568:	je     0x14001057f
   14001056a:	mov    edx,0x1c
   14001056f:	lea    r8,[rip+0x26ba2]        # 0x140037118
   140010576:	mov    rcx,QWORD PTR [rcx+0x10]
   14001057a:	call   0x140001f70
   14001057f:	xor    r8d,r8d
   140010582:	mov    DWORD PTR [rsp+0x78],r8d
   140010587:	jmp    0x14001058e
   140010589:	mov    r8d,DWORD PTR [rsp+0x78]
   14001058e:	mov    DWORD PTR [rsp+0x20],r15d
   140010593:	mov    r9,r12
   140010596:	mov    edx,DWORD PTR [r14+0x44]
   14001059a:	mov    rcx,QWORD PTR [rbp+0x48]
   14001059e:	call   0x14000bf60
   1400105a3:	test   eax,eax
   1400105a5:	jns    0x1400105af
   1400105a7:	mov    ecx,eax
   1400105a9:	call   0x140029d64
   1400105ae:	nop
   1400105af:	or     eax,0xffffffff
   1400105b2:	lock xadd DWORD PTR [rbx+0x8],eax
   1400105b7:	dec    eax
   1400105b9:	cmp    eax,0x80000000
   1400105be:	jne    0x1400105ca
   1400105c0:	mov    rcx,QWORD PTR [rsp+0x30]
   1400105c5:	call   0x140029c90
   1400105ca:	lea    r11,[rsp+0x40]
   1400105cf:	mov    rbx,QWORD PTR [r11+0x30]
   1400105d3:	mov    rbp,QWORD PTR [r11+0x40]
   1400105d7:	mov    rsp,r11
   1400105da:	pop    r15
   1400105dc:	pop    r14
   1400105de:	pop    r12
   1400105e0:	pop    rdi
   1400105e1:	pop    rsi
   1400105e2:	ret    
   1400105e3:	int3   
   1400105e4:	int3   
   1400105e5:	int3   
   1400105e6:	int3   
   1400105e7:	int3   
   1400105e8:	int3   
   1400105e9:	int3   
   1400105ea:	int3   
   1400105eb:	int3   
   1400105ec:	rex push rbx
   1400105ee:	push   rsi
   1400105ef:	push   rdi
   1400105f0:	push   r12
   1400105f2:	push   r13
   1400105f4:	push   r14
   1400105f6:	push   r15
   1400105f8:	sub    rsp,0xc0
   1400105ff:	mov    QWORD PTR [rsp+0x70],0xfffffffffffffffe
   140010608:	mov    rax,QWORD PTR [rip+0x3aa11]        # 0x14004b020
   14001060f:	xor    rax,rsp
   140010612:	mov    QWORD PTR [rsp+0xb8],rax
   14001061a:	mov    r12,r9
   14001061d:	mov    r9,r8
   140010620:	mov    QWORD PTR [rsp+0x50],r8
   140010625:	mov    rdi,rdx
   140010628:	mov    QWORD PTR [rsp+0x38],rdx
   14001062d:	mov    r15,rcx
   140010630:	mov    QWORD PTR [rsp+0x58],rcx
   140010635:	mov    QWORD PTR [rsp+0x68],r12
   14001063a:	xor    esi,esi
   14001063c:	test   r8,r8
   14001063f:	je     0x1400108d1
   140010645:	test   r12,r12
   140010648:	je     0x1400108d1
   14001064e:	add    rcx,0xf0
   140010655:	mov    QWORD PTR [rsp+0x48],rcx
   14001065a:	call   0x140029ab0
   14001065f:	test   eax,eax
   140010661:	jns    0x14001066b
   140010663:	mov    ecx,eax
   140010665:	call   0x140029d64
   14001066a:	nop
   14001066b:	mov    ebx,DWORD PTR [r9+0x40]
   14001066f:	mov    DWORD PTR [rsp+0x40],ebx
   140010673:	mov    QWORD PTR [rsp+0xa0],0x7
   14001067f:	mov    QWORD PTR [rsp+0x98],rsi
   140010687:	mov    WORD PTR [rsp+0x88],si
   14001068f:	lea    rdx,[r9+0x20]
   140010693:	or     r9,0xffffffffffffffff
   140010697:	xor    r8d,r8d
   14001069a:	lea    rcx,[rsp+0x88]
   1400106a2:	call   0x14000d7a0
   1400106a7:	nop
   1400106a8:	lea    r14,[rip+0x3a9c9]        # 0x14004b078
   1400106af:	mov    rcx,QWORD PTR [rip+0x3a9c2]        # 0x14004b078
   1400106b6:	cmp    rcx,r14
   1400106b9:	je     0x1400106f0
   1400106bb:	test   BYTE PTR [rcx+0x1c],0x1
   1400106bf:	je     0x1400106f0
   1400106c1:	lea    r9,[rsp+0x88]
   1400106c9:	cmp    QWORD PTR [rsp+0xa0],0x8
   1400106d2:	cmovae r9,QWORD PTR [rsp+0x88]
   1400106db:	mov    QWORD PTR [rsp+0x20],rdi
   1400106e0:	mov    rcx,QWORD PTR [rcx+0x10]
   1400106e4:	call   0x14000e370
   1400106e9:	mov    rcx,QWORD PTR [rip+0x3a988]        # 0x14004b078
   1400106f0:	mov    r13d,esi
   1400106f3:	test   ebx,ebx
   1400106f5:	jne    0x140010769
   1400106f7:	cmp    rcx,r14
   1400106fa:	je     0x140010715
   1400106fc:	test   BYTE PTR [rcx+0x1c],0x2
   140010700:	je     0x140010715
   140010702:	lea    edx,[rbx+0x1e]
   140010705:	lea    r8,[rip+0x26a0c]        # 0x140037118
   14001070c:	mov    rcx,QWORD PTR [rcx+0x10]
   140010710:	call   0x140001f08
   140010715:	mov    rdi,QWORD PTR [r15+0x50]
   140010719:	mov    rax,QWORD PTR [rdi]
   14001071c:	mov    rbx,QWORD PTR [rax+0x10]
   140010720:	mov    rcx,rbx
   140010723:	call   QWORD PTR [rip+0x21f7f]        # 0x1400326a8
   140010729:	mov    edx,0x1
   14001072e:	mov    rcx,rdi
   140010731:	call   rbx
   140010733:	mov    r13d,eax
   140010736:	test   eax,eax
   140010738:	jns    0x140010764
   14001073a:	mov    rcx,QWORD PTR [rip+0x3a937]        # 0x14004b078
   140010741:	cmp    rcx,r14
   140010744:	je     0x140010764
   140010746:	test   BYTE PTR [rcx+0x1c],0x1
   14001074a:	je     0x140010764
   14001074c:	mov    edx,0x1f
   140010751:	mov    r9d,eax
   140010754:	lea    r8,[rip+0x269bd]        # 0x140037118
   14001075b:	mov    rcx,QWORD PTR [rcx+0x10]
   14001075f:	call   0x140001f70
   140010764:	mov    rdi,QWORD PTR [rsp+0x38]
   140010769:	mov    r9,QWORD PTR [r15+0x48]
   14001076d:	lea    rbx,[r9+0x90]
   140010774:	mov    QWORD PTR [rsp+0x60],rbx
   140010779:	mov    rcx,rbx
   14001077c:	call   0x140029ab0
   140010781:	test   eax,eax
   140010783:	jns    0x14001078d
   140010785:	mov    ecx,eax
   140010787:	call   0x140029d64
   14001078c:	nop
   14001078d:	movups xmm0,XMMWORD PTR [rdi]
   140010790:	movdqu XMMWORD PTR [rsp+0xa8],xmm0
   140010799:	lea    rcx,[r9+0x190]
   1400107a0:	lea    rdx,[rsp+0xa8]
   1400107a8:	call   0x1400153d0
   1400107ad:	mov    dil,al
   1400107b0:	or     ecx,0xffffffff
   1400107b3:	lock xadd DWORD PTR [rbx+0x8],ecx
   1400107b8:	dec    ecx
   1400107ba:	cmp    ecx,0x80000000
   1400107c0:	jne    0x1400107cc
   1400107c2:	mov    rcx,QWORD PTR [rsp+0x60]
   1400107c7:	call   0x140029c90
   1400107cc:	test   dil,dil
   1400107cf:	sete   dil
   1400107d3:	mov    BYTE PTR [rsp+0x30],dil
   1400107d8:	mov    DWORD PTR [rsp+0x34],esi
   1400107dc:	call   QWORD PTR [rip+0x21c6e]        # 0x140032450
   1400107e2:	mov    rbx,QWORD PTR [rax+0xa0]
   1400107e9:	mov    rcx,rbx
   1400107ec:	call   QWORD PTR [rip+0x21eb6]        # 0x1400326a8
   1400107f2:	lea    r8,[rsp+0x34]
   1400107f7:	xor    edx,edx
   1400107f9:	lea    rcx,[rip+0x26880]        # 0x140037080
   140010800:	call   rbx
   140010802:	cmp    DWORD PTR [rsp+0x34],esi
   140010806:	setne  bl
   140010809:	mov    BYTE PTR [rsp+0x31],bl
   14001080d:	mov    r9d,DWORD PTR [rsp+0x40]
   140010812:	test   dil,dil
   140010815:	je     0x14001081c
   140010817:	test   r9d,r9d
   14001081a:	je     0x140010820
   14001081c:	test   bl,bl
   14001081e:	je     0x14001084f
   140010820:	mov    DWORD PTR [rsp+0x20],r13d
   140010825:	mov    r8,QWORD PTR [rsp+0x50]
   14001082a:	mov    rdx,QWORD PTR [rsp+0x38]
   14001082f:	mov    rcx,r15
   140010832:	call   0x14001093c
   140010837:	nop
   140010838:	jmp    0x14001084f
   14001083a:	xor    esi,esi
   14001083c:	mov    dil,BYTE PTR [rsp+0x30]
   140010841:	mov    bl,BYTE PTR [rsp+0x31]
   140010845:	mov    r15,QWORD PTR [rsp+0x58]
   14001084a:	mov    r12,QWORD PTR [rsp+0x68]
   14001084f:	test   dil,dil
   140010852:	jne    0x140010858
   140010854:	test   bl,bl
   140010856:	je     0x140010879
   140010858:	call   0x140016e54
   14001085d:	test   eax,eax
   14001085f:	je     0x140010879
   140010861:	mov    r8,QWORD PTR [r15+0x50]
   140010865:	mov    rdx,r12
   140010868:	mov    rcx,QWORD PTR [r15+0xe8]
   14001086f:	call   0x140011de4
   140010874:	nop
   140010875:	jmp    0x140010879
   140010877:	xor    esi,esi
   140010879:	cmp    QWORD PTR [rsp+0xa0],0x8
   140010882:	jb     0x140010892
   140010884:	mov    rcx,QWORD PTR [rsp+0x88]
   14001088c:	call   QWORD PTR [rip+0x21d36]        # 0x1400325c8
   140010892:	mov    QWORD PTR [rsp+0xa0],0x7
   14001089e:	mov    QWORD PTR [rsp+0x98],rsi
   1400108a6:	mov    WORD PTR [rsp+0x88],si
   1400108ae:	mov    rax,QWORD PTR [rsp+0x48]
   1400108b3:	or     ecx,0xffffffff
   1400108b6:	lock xadd DWORD PTR [rax+0x8],ecx
   1400108bb:	dec    ecx
   1400108bd:	cmp    ecx,0x80000000
   1400108c3:	jne    0x140010911
   1400108c5:	mov    rcx,QWORD PTR [rsp+0x48]
   1400108ca:	call   0x140029c90
   1400108cf:	jmp    0x140010911
   1400108d1:	lea    r14,[rip+0x3a7a0]        # 0x14004b078
   1400108d8:	mov    rcx,QWORD PTR [rip+0x3a799]        # 0x14004b078
   1400108df:	cmp    rcx,r14
   1400108e2:	je     0x140010906
   1400108e4:	test   BYTE PTR [rcx+0x1c],0x1
   1400108e8:	je     0x140010906
   1400108ea:	mov    edx,0xa
   1400108ef:	lea    r9,[rip+0x2673a]        # 0x140037030
   1400108f6:	lea    r8,[rip+0x23ad3]        # 0x1400343d0
   1400108fd:	mov    rcx,QWORD PTR [rcx+0x10]
   140010901:	call   0x1400038e0
   140010906:	mov    ecx,0x80070057
   14001090b:	call   0x140029d64
   140010910:	int3   
   140010911:	mov    rcx,QWORD PTR [rsp+0xb8]
   140010919:	xor    rcx,rsp
   14001091c:	call   0x14002dd00
   140010921:	add    rsp,0xc0
   140010928:	pop    r15
   14001092a:	pop    r14
   14001092c:	pop    r13
   14001092e:	pop    r12
   140010930:	pop    rdi
   140010931:	pop    rsi
   140010932:	pop    rbx
   140010933:	ret    
   140010934:	int3   
   140010935:	int3   
   140010936:	int3   
   140010937:	int3   
   140010938:	int3   
   140010939:	int3   
   14001093a:	int3   
   14001093b:	int3   
   14001093c:	mov    rax,rsp
   14001093f:	push   rbp
   140010940:	push   r12
   140010942:	push   r13
   140010944:	push   r14
   140010946:	push   r15
   140010948:	lea    rbp,[rax-0x57]
   14001094c:	sub    rsp,0x100
   140010953:	mov    QWORD PTR [rbp+0x27],0xfffffffffffffffe
   14001095b:	mov    QWORD PTR [rax+0x8],rbx
   14001095f:	mov    QWORD PTR [rax+0x10],rsi
   140010963:	mov    QWORD PTR [rax+0x20],rdi
   140010967:	mov    r12d,r9d
   14001096a:	mov    r15,r8
   14001096d:	mov    r13,rdx
   140010970:	mov    r14,rcx
   140010973:	xor    r9d,r9d
   140010976:	test   r8,r8
   140010979:	jne    0x1400109ba
   14001097b:	lea    rax,[rip+0x3a6f6]        # 0x14004b078
   140010982:	mov    rcx,QWORD PTR [rip+0x3a6ef]        # 0x14004b078
   140010989:	cmp    rcx,rax
   14001098c:	je     0x1400109af
   14001098e:	test   BYTE PTR [rcx+0x1c],0x1
   140010992:	je     0x1400109af
   140010994:	lea    edx,[r8+0xa]
   140010998:	lea    r9,[rip+0x26651]        # 0x140036ff0
   14001099f:	lea    r8,[rip+0x23a2a]        # 0x1400343d0
   1400109a6:	mov    rcx,QWORD PTR [rcx+0x10]
   1400109aa:	call   0x1400038e0
   1400109af:	mov    ecx,0x80070057
   1400109b4:	call   0x140029d64
   1400109b9:	int3   
   1400109ba:	lea    rbx,[rcx+0xf0]
   1400109c1:	mov    QWORD PTR [rbp+0x1f],rbx
   1400109c5:	mov    rcx,rbx
   1400109c8:	call   0x140029ab0
   1400109cd:	test   eax,eax
   1400109cf:	jns    0x1400109d9
   1400109d1:	mov    ecx,eax
   1400109d3:	call   0x140029d64
   1400109d8:	nop
   1400109d9:	mov    QWORD PTR [rbp-0x9],r9
   1400109dd:	mov    rsi,QWORD PTR [r14+0x58]
   1400109e1:	mov    rax,QWORD PTR [rsi]
   1400109e4:	mov    rdi,QWORD PTR [rax+0x18]
   1400109e8:	mov    rcx,rdi
   1400109eb:	call   QWORD PTR [rip+0x21cb7]        # 0x1400326a8
   1400109f1:	lea    rdx,[rbp-0x9]
   1400109f5:	mov    rcx,rsi
   1400109f8:	call   rdi
   1400109fa:	xor    edi,edi
   1400109fc:	test   eax,eax
   1400109fe:	jns    0x140010a08
   140010a00:	mov    ecx,eax
   140010a02:	call   0x140029d64
   140010a07:	int3   
   140010a08:	mov    WORD PTR [rbp-0x31],di
   140010a0c:	mov    rsi,QWORD PTR [r14+0x58]
   140010a10:	mov    rax,QWORD PTR [rsi]
   140010a13:	mov    rdi,QWORD PTR [rax+0x28]
   140010a17:	mov    rcx,rdi
   140010a1a:	call   QWORD PTR [rip+0x21c88]        # 0x1400326a8
   140010a20:	lea    rdx,[rbp-0x31]
   140010a24:	mov    rcx,rsi
   140010a27:	call   rdi
   140010a29:	xor    ecx,ecx
   140010a2b:	test   eax,eax
   140010a2d:	jns    0x140010a37
   140010a2f:	mov    ecx,eax
   140010a31:	call   0x140029d64
   140010a36:	int3   
   140010a37:	mov    QWORD PTR [rbp-0x1],rcx
   140010a3b:	mov    rsi,QWORD PTR [r14+0x58]
   140010a3f:	mov    rax,QWORD PTR [rsi]
   140010a42:	mov    rdi,QWORD PTR [rax+0x30]
   140010a46:	mov    rcx,rdi
   140010a49:	call   QWORD PTR [rip+0x21c59]        # 0x1400326a8
   140010a4f:	lea    rdx,[rbp-0x1]
   140010a53:	mov    rcx,rsi
   140010a56:	call   rdi
   140010a58:	xor    ecx,ecx
   140010a5a:	test   eax,eax
   140010a5c:	jns    0x140010a66
   140010a5e:	mov    ecx,eax
   140010a60:	call   0x140029d64
   140010a65:	int3   
   140010a66:	mov    WORD PTR [rbp+0x6f],cx
   140010a6a:	mov    rsi,QWORD PTR [r14+0x58]
   140010a6e:	mov    rax,QWORD PTR [rsi]
   140010a71:	mov    rdi,QWORD PTR [rax+0x40]
   140010a75:	mov    rcx,rdi
   140010a78:	call   QWORD PTR [rip+0x21c2a]        # 0x1400326a8
   140010a7e:	lea    rdx,[rbp+0x6f]
   140010a82:	mov    rcx,rsi
   140010a85:	call   rdi
   140010a87:	test   eax,eax
   140010a89:	jns    0x140010a93
   140010a8b:	mov    ecx,eax
   140010a8d:	call   0x140029d64
   140010a92:	int3   
   140010a93:	mov    rsi,QWORD PTR [r14+0x58]
   140010a97:	mov    rax,QWORD PTR [rsi]
   140010a9a:	mov    rdi,QWORD PTR [rax+0x48]
   140010a9e:	mov    rcx,rdi
   140010aa1:	call   QWORD PTR [rip+0x21c01]        # 0x1400326a8
   140010aa7:	lea    rdx,[rbp+0xf]
   140010aab:	mov    rcx,rsi
   140010aae:	call   rdi
   140010ab0:	xor    ecx,ecx
   140010ab2:	test   eax,eax
   140010ab4:	jns    0x140010abe
   140010ab6:	mov    ecx,eax
   140010ab8:	call   0x140029d64
   140010abd:	int3   
   140010abe:	mov    QWORD PTR [rbp+0x7],rcx
   140010ac2:	mov    rsi,QWORD PTR [r14+0x58]
   140010ac6:	mov    rax,QWORD PTR [rsi]
   140010ac9:	mov    rdi,QWORD PTR [rax+0x68]
   140010acd:	mov    rcx,rdi
   140010ad0:	call   QWORD PTR [rip+0x21bd2]        # 0x1400326a8
   140010ad6:	lea    rdx,[rbp+0x7]
   140010ada:	mov    rcx,rsi
   140010add:	call   rdi
   140010adf:	xor    ecx,ecx
   140010ae1:	test   eax,eax
   140010ae3:	jns    0x140010aed
   140010ae5:	mov    ecx,eax
   140010ae7:	call   0x140029d64
   140010aec:	int3   
   140010aed:	mov    QWORD PTR [rbp-0x29],rcx
   140010af1:	mov    QWORD PTR [rbp-0x19],rcx
   140010af5:	mov    rsi,QWORD PTR [r14+0x58]
   140010af9:	mov    rax,QWORD PTR [rsi]
   140010afc:	mov    rdi,QWORD PTR [rax+0x70]
   140010b00:	mov    rcx,rdi
   140010b03:	call   QWORD PTR [rip+0x21b9f]        # 0x1400326a8
   140010b09:	lea    r8,[rbp-0x19]
   140010b0d:	lea    rdx,[rbp-0x29]
   140010b11:	mov    rcx,rsi
   140010b14:	call   rdi
   140010b16:	mov    r9d,eax
   140010b19:	xor    esi,esi
   140010b1b:	test   eax,eax
   140010b1d:	jns    0x140010bae
   140010b23:	lea    rax,[rip+0x3a54e]        # 0x14004b078
   140010b2a:	mov    rcx,QWORD PTR [rip+0x3a547]        # 0x14004b078
   140010b31:	cmp    rcx,rax
   140010b34:	je     0x140010b4f
   140010b36:	test   BYTE PTR [rcx+0x1c],0x2
   140010b3a:	je     0x140010b4f
   140010b3c:	lea    edx,[rsi+0x22]
   140010b3f:	lea    r8,[rip+0x265d2]        # 0x140037118
   140010b46:	mov    rcx,QWORD PTR [rcx+0x10]
   140010b4a:	call   0x140001f70
   140010b4f:	lea    rdi,[rip+0x249e2]        # 0x140035538
   140010b56:	mov    rcx,QWORD PTR [rbp-0x29]
   140010b5a:	cmp    rdi,rcx
   140010b5d:	je     0x140010b82
   140010b5f:	call   QWORD PTR [rip+0x217eb]        # 0x140032350
   140010b65:	mov    rcx,rdi
   140010b68:	call   QWORD PTR [rip+0x217f2]        # 0x140032360
   140010b6e:	mov    QWORD PTR [rbp-0x29],rax
   140010b72:	test   rax,rax
   140010b75:	jne    0x140010b82
   140010b77:	mov    ecx,0x8007000e
   140010b7c:	call   0x140005d50
   140010b81:	int3   
   140010b82:	mov    rcx,QWORD PTR [rbp-0x19]
   140010b86:	cmp    rdi,rcx
   140010b89:	je     0x140010bae
   140010b8b:	call   QWORD PTR [rip+0x217bf]        # 0x140032350
   140010b91:	mov    rcx,rdi
   140010b94:	call   QWORD PTR [rip+0x217c6]        # 0x140032360
   140010b9a:	mov    QWORD PTR [rbp-0x19],rax
   140010b9e:	test   rax,rax
   140010ba1:	jne    0x140010bae
   140010ba3:	mov    ecx,0x8007000e
   140010ba8:	call   0x140005d50
   140010bad:	int3   
   140010bae:	lea    rdx,[rip+0x25e1f]        # 0x1400369d4
   140010bb5:	lea    rcx,[rbp-0x29]
   140010bb9:	call   0x1400113d0
   140010bbe:	test   eax,eax
   140010bc0:	jns    0x140010bca
   140010bc2:	mov    ecx,eax
   140010bc4:	call   0x140029d64
   140010bc9:	int3   
   140010bca:	mov    rdi,QWORD PTR [rbp-0x19]
   140010bce:	mov    rcx,rdi
   140010bd1:	call   QWORD PTR [rip+0x21799]        # 0x140032370
   140010bd7:	test   eax,eax
   140010bd9:	je     0x140010c10
   140010bdb:	mov    QWORD PTR [rbp+0x17],rsi
   140010bdf:	lea    r8,[rbp+0x17]
   140010be3:	mov    rdx,rdi
   140010be6:	mov    rcx,QWORD PTR [rbp-0x29]
   140010bea:	call   QWORD PTR [rip+0x21790]        # 0x140032380
   140010bf0:	test   eax,eax
   140010bf2:	js     0x140010c08
   140010bf4:	mov    rcx,QWORD PTR [rbp-0x29]
   140010bf8:	call   QWORD PTR [rip+0x21752]        # 0x140032350
   140010bfe:	mov    rax,QWORD PTR [rbp+0x17]
   140010c02:	mov    QWORD PTR [rbp-0x29],rax
   140010c06:	jmp    0x140010c10
   140010c08:	mov    ecx,eax
   140010c0a:	call   0x140029d64
   140010c0f:	int3   
   140010c10:	mov    DWORD PTR [rbp-0x21],esi
   140010c13:	mov    rsi,QWORD PTR [r14+0x58]
   140010c17:	mov    rax,QWORD PTR [rsi]
   140010c1a:	mov    rdi,QWORD PTR [rax+0x60]
   140010c1e:	mov    rcx,rdi
   140010c21:	call   QWORD PTR [rip+0x21a81]        # 0x1400326a8
   140010c27:	lea    rdx,[rbp-0x21]
   140010c2b:	mov    rcx,rsi
   140010c2e:	call   rdi
   140010c30:	xor    ecx,ecx
   140010c32:	test   eax,eax
   140010c34:	jns    0x140010c3e
   140010c36:	mov    ecx,eax
   140010c38:	call   0x140029d64
   140010c3d:	int3   
   140010c3e:	mov    QWORD PTR [rbp-0x11],rcx
   140010c42:	mov    rsi,QWORD PTR [r14+0x58]
   140010c46:	mov    rax,QWORD PTR [rsi]
   140010c49:	mov    rdi,QWORD PTR [rax+0x58]
   140010c4d:	mov    rcx,rdi
   140010c50:	call   QWORD PTR [rip+0x21a52]        # 0x1400326a8
   140010c56:	xor    r8d,r8d
   140010c59:	lea    rdx,[rbp-0x11]
   140010c5d:	mov    rcx,rsi
   140010c60:	call   rdi
   140010c62:	test   eax,eax
   140010c64:	jns    0x140010c6e
   140010c66:	mov    ecx,eax
   140010c68:	call   0x140029d64
   140010c6d:	int3   
   140010c6e:	mov    rcx,QWORD PTR [r15+0x58]
   140010c72:	mov    DWORD PTR [rsp+0x50],r12d
   140010c77:	mov    rax,QWORD PTR [rbp-0x11]
   140010c7b:	mov    QWORD PTR [rsp+0x48],rax
   140010c80:	mov    eax,DWORD PTR [rbp-0x21]
   140010c83:	mov    DWORD PTR [rsp+0x40],eax
   140010c87:	mov    rax,QWORD PTR [rbp-0x29]
   140010c8b:	mov    QWORD PTR [rsp+0x38],rax
   140010c90:	mov    QWORD PTR [rsp+0x30],rcx
   140010c95:	movzx  eax,WORD PTR [rbp+0x6f]
   140010c99:	mov    WORD PTR [rsp+0x28],ax
   140010c9e:	mov    rax,QWORD PTR [rbp-0x1]
   140010ca2:	mov    QWORD PTR [rsp+0x20],rax
   140010ca7:	movzx  r9d,WORD PTR [rbp-0x31]
   140010cac:	mov    r8,QWORD PTR [rbp-0x9]
   140010cb0:	mov    rdx,QWORD PTR [r15+0x48]
   140010cb4:	mov    rcx,r13
   140010cb7:	call   QWORD PTR [rip+0x21653]        # 0x140032310
   140010cbd:	mov    rcx,QWORD PTR [r14+0xe8]
   140010cc4:	mov    rdx,QWORD PTR [r15+0x60]
   140010cc8:	mov    r9,QWORD PTR [r15+0x58]
   140010ccc:	mov    eax,DWORD PTR [rbp+0x7f]
   140010ccf:	mov    DWORD PTR [rsp+0x98],eax
   140010cd6:	mov    DWORD PTR [rsp+0x90],r12d
   140010cde:	mov    rax,QWORD PTR [rcx+0x38]
   140010ce2:	mov    QWORD PTR [rsp+0x88],rax
   140010cea:	mov    rax,QWORD PTR [rcx+0x40]
   140010cee:	mov    QWORD PTR [rsp+0x80],rax
   140010cf6:	mov    rax,QWORD PTR [rbp-0x11]
   140010cfa:	mov    QWORD PTR [rsp+0x78],rax
   140010cff:	mov    eax,DWORD PTR [rbp-0x21]
   140010d02:	mov    DWORD PTR [rsp+0x70],eax
   140010d06:	mov    rax,QWORD PTR [rbp-0x29]
   140010d0a:	mov    QWORD PTR [rsp+0x68],rax
   140010d0f:	mov    rax,QWORD PTR [rbp+0x7]
   140010d13:	mov    QWORD PTR [rsp+0x60],rax
   140010d18:	mov    eax,DWORD PTR [rbp+0xf]
   140010d1b:	mov    DWORD PTR [rsp+0x58],eax
   140010d1f:	mov    QWORD PTR [rsp+0x50],rdx
   140010d24:	mov    QWORD PTR [rsp+0x48],r9
   140010d29:	movzx  eax,WORD PTR [rbp+0x6f]
   140010d2d:	mov    WORD PTR [rsp+0x40],ax
   140010d32:	mov    rax,QWORD PTR [rbp-0x1]
   140010d36:	mov    QWORD PTR [rsp+0x38],rax
   140010d3b:	movzx  eax,WORD PTR [rbp-0x31]
   140010d3f:	mov    WORD PTR [rsp+0x30],ax
   140010d44:	mov    rax,QWORD PTR [rbp-0x9]
   140010d48:	mov    QWORD PTR [rsp+0x28],rax
   140010d4d:	mov    eax,DWORD PTR [r15+0x54]
   140010d51:	mov    DWORD PTR [rsp+0x20],eax
   140010d55:	mov    r9d,DWORD PTR [r15+0x50]
   140010d59:	mov    r8,QWORD PTR [r15+0x48]
   140010d5d:	mov    edx,DWORD PTR [r15+0x44]
   140010d61:	mov    rcx,QWORD PTR [r14+0x48]
   140010d65:	call   0x14000bd54
   140010d6a:	test   eax,eax
   140010d6c:	jns    0x140010d76
   140010d6e:	mov    ecx,eax
   140010d70:	call   0x140029d64
   140010d75:	nop
   140010d76:	mov    rcx,QWORD PTR [rbp-0x11]
   140010d7a:	call   QWORD PTR [rip+0x215d0]        # 0x140032350
   140010d80:	nop
   140010d81:	mov    rcx,QWORD PTR [rbp-0x19]
   140010d85:	call   QWORD PTR [rip+0x215c5]        # 0x140032350
   140010d8b:	nop
   140010d8c:	mov    rcx,QWORD PTR [rbp-0x29]
   140010d90:	call   QWORD PTR [rip+0x215ba]        # 0x140032350
   140010d96:	nop
   140010d97:	mov    rcx,QWORD PTR [rbp+0x7]
   140010d9b:	call   QWORD PTR [rip+0x215af]        # 0x140032350
   140010da1:	nop
   140010da2:	mov    rcx,QWORD PTR [rbp-0x1]
   140010da6:	call   QWORD PTR [rip+0x215a4]        # 0x140032350
   140010dac:	nop
   140010dad:	mov    rcx,QWORD PTR [rbp-0x9]
   140010db1:	call   QWORD PTR [rip+0x21599]        # 0x140032350
   140010db7:	nop
   140010db8:	or     eax,0xffffffff
   140010dbb:	lock xadd DWORD PTR [rbx+0x8],eax
   140010dc0:	dec    eax
   140010dc2:	cmp    eax,0x80000000
   140010dc7:	jne    0x140010dd2
   140010dc9:	mov    rcx,QWORD PTR [rbp+0x1f]
   140010dcd:	call   0x140029c90
   140010dd2:	lea    r11,[rsp+0x100]
   140010dda:	mov    rbx,QWORD PTR [r11+0x30]
   140010dde:	mov    rsi,QWORD PTR [r11+0x38]
   140010de2:	mov    rdi,QWORD PTR [r11+0x48]
   140010de6:	mov    rsp,r11
   140010de9:	pop    r15
   140010deb:	pop    r14
   140010ded:	pop    r13
   140010def:	pop    r12
   140010df1:	pop    rbp
   140010df2:	ret    
   140010df3:	int3   
   140010df4:	int3   
   140010df5:	int3   
   140010df6:	int3   
   140010df7:	int3   
   140010df8:	int3   
   140010df9:	int3   
   140010dfa:	int3   
   140010dfb:	int3   
   140010dfc:	int3   
   140010dfd:	int3   
   140010dfe:	int3   
   140010dff:	int3   
   140010e00:	rex push rbx
   140010e02:	sub    rsp,0x20
   140010e06:	mov    rbx,rcx
   140010e09:	call   0x14000f41c
   140010e0e:	jmp    0x140010e24
   140010e10:	lea    ecx,[rdx-0x80000000]
   140010e16:	mov    eax,edx
   140010e18:	lock cmpxchg DWORD PTR [rbx+0xf8],ecx
   140010e20:	cmp    edx,eax
   140010e22:	je     0x140010e2e
   140010e24:	mov    edx,DWORD PTR [rbx+0xf8]
   140010e2a:	test   edx,edx
   140010e2c:	jns    0x140010e10
   140010e2e:	test   edx,edx
   140010e30:	jne    0x140010e3e
   140010e32:	lea    rcx,[rbx+0xf0]
   140010e39:	call   0x140029c90
   140010e3e:	add    rsp,0x20
   140010e42:	pop    rbx
   140010e43:	ret    
   140010e44:	int3   
   140010e45:	int3   
   140010e46:	int3   
   140010e47:	int3   
   140010e48:	int3   
   140010e49:	int3   
   140010e4a:	int3   
   140010e4b:	int3   
   140010e4c:	int3   
   140010e4d:	int3   
   140010e4e:	int3   
   140010e4f:	int3   
   140010e50:	mov    rax,rsp
   140010e53:	mov    QWORD PTR [rax+0x8],rbx
   140010e57:	mov    QWORD PTR [rax+0x10],rbp
   140010e5b:	mov    QWORD PTR [rax+0x18],rsi
   140010e5f:	mov    QWORD PTR [rax+0x20],rdi
   140010e63:	push   r14
   140010e65:	sub    rsp,0x40
   140010e69:	mov    rdi,rcx
   140010e6c:	add    rcx,0xf0
   140010e73:	call   0x140029b84
   140010e78:	lea    rsi,[rdi+0x110]
   140010e7f:	mov    rcx,rsi
   140010e82:	mov    QWORD PTR [rsp+0x20],rsi
   140010e87:	call   QWORD PTR [rip+0x2127b]        # 0x140032108
   140010e8d:	mov    r14,QWORD PTR [rdi+0x50]
   140010e91:	mov    BYTE PTR [rsp+0x28],0x1
   140010e96:	mov    BYTE PTR [rsp+0x30],0x1
   140010e9b:	test   r14,r14
   140010e9e:	je     0x140010eba
   140010ea0:	mov    rax,QWORD PTR [r14]
   140010ea3:	mov    rbx,QWORD PTR [rax+0x8]
   140010ea7:	mov    rcx,rbx
   140010eaa:	call   QWORD PTR [rip+0x217f8]        # 0x1400326a8
   140010eb0:	mov    rcx,r14
   140010eb3:	call   rbx
   140010eb5:	and    QWORD PTR [rdi+0x50],0x0
   140010eba:	mov    rbp,QWORD PTR [rdi+0xe8]
   140010ec1:	test   rbp,rbp
   140010ec4:	je     0x140010f70
   140010eca:	mov    rsi,QWORD PTR [rdi+0x60]
   140010ece:	test   rsi,rsi
   140010ed1:	je     0x140010eed
   140010ed3:	mov    rax,QWORD PTR [rsi]
   140010ed6:	mov    rbx,QWORD PTR [rax+0x10]
   140010eda:	mov    rcx,rbx
   140010edd:	call   QWORD PTR [rip+0x217c5]        # 0x1400326a8
   140010ee3:	mov    rcx,rsi
   140010ee6:	call   rbx
   140010ee8:	and    QWORD PTR [rdi+0x60],0x0
   140010eed:	or     ebx,0xffffffff
   140010ef0:	lea    rcx,[rbp+0x120]
   140010ef7:	mov    eax,ebx
   140010ef9:	lock xadd DWORD PTR [rcx+0x8],eax
   140010efe:	add    eax,ebx
   140010f00:	cmp    eax,0x80000000
   140010f05:	jne    0x140010f0c
   140010f07:	call   0x140029c90
   140010f0c:	mov    rcx,QWORD PTR [rdi+0xe8]
   140010f13:	mov    rdx,rdi
   140010f16:	call   0x14001186c
   140010f1b:	mov    rsi,QWORD PTR [rdi+0xe8]
   140010f22:	test   rsi,rsi
   140010f25:	je     0x140010f6b
   140010f27:	mov    eax,DWORD PTR [rsi+0x8]
   140010f2a:	cmp    eax,0x1
   140010f2d:	jne    0x140010f38
   140010f2f:	mov    DWORD PTR [rsi+0x8],0x0
   140010f36:	jmp    0x140010f45
   140010f38:	mov    eax,ebx
   140010f3a:	lock xadd DWORD PTR [rsi+0x8],eax
   140010f3f:	add    eax,ebx
   140010f41:	test   eax,eax
   140010f43:	jg     0x140010f63
   140010f45:	test   rsi,rsi
   140010f48:	je     0x140010f63
   140010f4a:	mov    rax,QWORD PTR [rsi]
   140010f4d:	mov    rbx,QWORD PTR [rax]
   140010f50:	mov    rcx,rbx
   140010f53:	call   QWORD PTR [rip+0x2174f]        # 0x1400326a8
   140010f59:	mov    edx,0x1
   140010f5e:	mov    rcx,rsi
   140010f61:	call   rbx
   140010f63:	and    QWORD PTR [rdi+0xe8],0x0
   140010f6b:	mov    rsi,QWORD PTR [rsp+0x20]
   140010f70:	mov    rcx,rsi
   140010f73:	mov    rbx,QWORD PTR [rsp+0x50]
   140010f78:	mov    rbp,QWORD PTR [rsp+0x58]
   140010f7d:	mov    rsi,QWORD PTR [rsp+0x60]
   140010f82:	mov    rdi,QWORD PTR [rsp+0x68]
   140010f87:	add    rsp,0x40
   140010f8b:	pop    r14
   140010f8d:	rex.W jmp QWORD PTR [rip+0x21164]        # 0x1400320f8
   140010f94:	int3   
   140010f95:	int3   
   140010f96:	int3   
   140010f97:	int3   
   140010f98:	int3   
   140010f99:	int3   
   140010f9a:	int3   
   140010f9b:	int3   
   140010f9c:	sub    rsp,0x28
   140010fa0:	cmp    BYTE PTR [rcx+0x8],0x0
   140010fa4:	je     0x140010faf
   140010fa6:	mov    rcx,QWORD PTR [rcx]
   140010fa9:	call   QWORD PTR [rip+0x21149]        # 0x1400320f8
   140010faf:	add    rsp,0x28
   140010fb3:	ret    
   140010fb4:	int3   
   140010fb5:	int3   
   140010fb6:	int3   
   140010fb7:	int3   
   140010fb8:	int3   
   140010fb9:	int3   
   140010fba:	int3   
   140010fbb:	int3   
   140010fbc:	mov    QWORD PTR [rsp+0x10],rbx
   140010fc1:	push   rdi
   140010fc2:	sub    rsp,0x20
   140010fc6:	mov    rdi,QWORD PTR [rcx]
   140010fc9:	test   rdi,rdi
   140010fcc:	je     0x140010ff9
   140010fce:	or     eax,0xffffffff
   140010fd1:	lock xadd DWORD PTR [rdi+0x8],eax
   140010fd6:	cmp    eax,0x1
   140010fd9:	jne    0x140010ff9
   140010fdb:	test   rdi,rdi
   140010fde:	je     0x140010ff9
   140010fe0:	mov    rax,QWORD PTR [rdi]
   140010fe3:	mov    rbx,QWORD PTR [rax]
   140010fe6:	mov    rcx,rbx
   140010fe9:	call   QWORD PTR [rip+0x216b9]        # 0x1400326a8
   140010fef:	mov    edx,0x1
   140010ff4:	mov    rcx,rdi
   140010ff7:	call   rbx
   140010ff9:	mov    rbx,QWORD PTR [rsp+0x38]
   140010ffe:	add    rsp,0x20
   140011002:	pop    rdi
   140011003:	ret    
   140011004:	int3   
   140011005:	int3   
   140011006:	int3   
   140011007:	int3   
   140011008:	int3   
   140011009:	int3   
   14001100a:	int3   
   14001100b:	int3   
   14001100c:	int3   
   14001100d:	int3   
   14001100e:	int3   
   14001100f:	int3   
   140011010:	mov    eax,0x1
   140011015:	lock xadd DWORD PTR [rcx+0x10],eax
   14001101a:	inc    eax
   14001101c:	ret    
   14001101d:	int3   
   14001101e:	int3   
   14001101f:	int3   
   140011020:	int3   
   140011021:	int3   
   140011022:	int3   
   140011023:	int3   
   140011024:	int3   
   140011025:	int3   
   140011026:	int3   
   140011027:	int3   
   140011028:	int3   
   140011029:	int3   
   14001102a:	int3   
   14001102b:	int3   
   14001102c:	int3   
   14001102d:	int3   
   14001102e:	int3   
   14001102f:	int3   
   140011030:	mov    QWORD PTR [rsp+0x8],rbx
   140011035:	mov    QWORD PTR [rsp+0x10],rsi
   14001103a:	push   rdi
   14001103b:	sub    rsp,0x20
   14001103f:	mov    rsi,rcx
   140011042:	or     edi,0xffffffff
   140011045:	lock xadd DWORD PTR [rcx+0x10],edi
   14001104a:	sub    edi,0x1
   14001104d:	jne    0x140011082
   14001104f:	mov    rax,QWORD PTR [rip+0x3ef82]        # 0x14004ffd8
   140011056:	lock inc DWORD PTR [rax+0xc]
   14001105a:	test   rcx,rcx
   14001105d:	je     0x140011077
   14001105f:	mov    rcx,QWORD PTR [rcx]
   140011062:	mov    rbx,QWORD PTR [rcx+0x40]
   140011066:	mov    rcx,rbx
   140011069:	call   QWORD PTR [rip+0x21639]        # 0x1400326a8
   14001106f:	lea    edx,[rdi+0x1]
   140011072:	mov    rcx,rsi
   140011075:	call   rbx
   140011077:	mov    rcx,QWORD PTR [rip+0x3ef5a]        # 0x14004ffd8
   14001107e:	lock dec DWORD PTR [rcx+0xc]
   140011082:	mov    rbx,QWORD PTR [rsp+0x30]
   140011087:	mov    eax,edi
   140011089:	mov    rsi,QWORD PTR [rsp+0x38]
   14001108e:	add    rsp,0x20
   140011092:	pop    rdi
   140011093:	ret    
   140011094:	int3   
   140011095:	int3   
   140011096:	int3   
   140011097:	int3   
   140011098:	int3   
   140011099:	int3   
   14001109a:	int3   
   14001109b:	int3   
   14001109c:	int3   
   14001109d:	int3   
   14001109e:	int3   
   14001109f:	int3   
   1400110a0:	mov    r9,r8
   1400110a3:	add    rcx,0xfffffffffffffff8
   1400110a7:	mov    r8,rdx
   1400110aa:	lea    rdx,[rip+0x2601f]        # 0x1400370d0
   1400110b1:	jmp    0x140004664
   1400110b6:	int3   
   1400110b7:	int3   
   1400110b8:	int3   
   1400110b9:	int3   
   1400110ba:	int3   
   1400110bb:	int3   
   1400110bc:	int3   
   1400110bd:	int3   
   1400110be:	int3   
   1400110bf:	int3   
   1400110c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400110c5:	push   rdi
   1400110c6:	sub    rsp,0x20
   1400110ca:	lea    rax,[rip+0x236df]        # 0x1400347b0
   1400110d1:	mov    DWORD PTR [rcx+0x10],0xc0000001
   1400110d8:	mov    QWORD PTR [rcx],rax
   1400110db:	mov    ebx,edx
   1400110dd:	lea    rax,[rip+0x2367c]        # 0x140034760
   1400110e4:	mov    rdi,rcx
   1400110e7:	mov    QWORD PTR [rcx+0x8],rax
   1400110eb:	mov    rax,QWORD PTR [rip+0x3eee6]        # 0x14004ffd8
   1400110f2:	lock dec DWORD PTR [rax+0xc]
   1400110f6:	call   0x140011120
   1400110fb:	test   bl,0x1
   1400110fe:	je     0x140011109
   140011100:	mov    rcx,rdi
   140011103:	call   QWORD PTR [rip+0x214bf]        # 0x1400325c8
   140011109:	mov    rax,rdi
   14001110c:	mov    rbx,QWORD PTR [rsp+0x30]
   140011111:	add    rsp,0x20
   140011115:	pop    rdi
   140011116:	ret    
   140011117:	int3   
   140011118:	int3   
   140011119:	int3   
   14001111a:	int3   
   14001111b:	int3   
   14001111c:	int3   
   14001111d:	int3   
   14001111e:	int3   
   14001111f:	int3   
   140011120:	mov    QWORD PTR [rsp+0x8],rbx
   140011125:	mov    QWORD PTR [rsp+0x10],rsi
   14001112a:	push   rdi
   14001112b:	sub    rsp,0x20
   14001112f:	mov    rdi,rcx
   140011132:	add    rcx,0x110
   140011139:	cmp    DWORD PTR [rcx+0xc],0xf12192e
   140011140:	je     0x140011148
   140011142:	call   QWORD PTR [rip+0x21130]        # 0x140032278
   140011148:	lea    rcx,[rdi+0xf0]
   14001114f:	call   0x140029b48
   140011154:	mov    rsi,QWORD PTR [rdi+0xe8]
   14001115b:	test   rsi,rsi
   14001115e:	je     0x14001119c
   140011160:	mov    eax,DWORD PTR [rsi+0x8]
   140011163:	cmp    eax,0x1
   140011166:	jne    0x140011171
   140011168:	mov    DWORD PTR [rsi+0x8],0x0
   14001116f:	jmp    0x14001117e
   140011171:	or     eax,0xffffffff
   140011174:	lock xadd DWORD PTR [rsi+0x8],eax
   140011179:	sub    eax,0x1
   14001117c:	jg     0x14001119c
   14001117e:	test   rsi,rsi
   140011181:	je     0x14001119c
   140011183:	mov    rax,QWORD PTR [rsi]
   140011186:	mov    rbx,QWORD PTR [rax]
   140011189:	mov    rcx,rbx
   14001118c:	call   QWORD PTR [rip+0x21516]        # 0x1400326a8
   140011192:	mov    edx,0x1
   140011197:	mov    rcx,rsi
   14001119a:	call   rbx
   14001119c:	mov    rcx,QWORD PTR [rdi+0x80]
   1400111a3:	call   QWORD PTR [rip+0x211a7]        # 0x140032350
   1400111a9:	mov    rcx,QWORD PTR [rdi+0x70]
   1400111ad:	call   QWORD PTR [rip+0x2119d]        # 0x140032350
   1400111b3:	mov    rsi,QWORD PTR [rdi+0x60]
   1400111b7:	test   rsi,rsi
   1400111ba:	je     0x1400111d1
   1400111bc:	mov    rax,QWORD PTR [rsi]
   1400111bf:	mov    rbx,QWORD PTR [rax+0x10]
   1400111c3:	mov    rcx,rbx
   1400111c6:	call   QWORD PTR [rip+0x214dc]        # 0x1400326a8
   1400111cc:	mov    rcx,rsi
   1400111cf:	call   rbx
   1400111d1:	mov    rsi,QWORD PTR [rdi+0x50]
   1400111d5:	test   rsi,rsi
   1400111d8:	je     0x1400111ef
   1400111da:	mov    rax,QWORD PTR [rsi]
   1400111dd:	mov    rbx,QWORD PTR [rax+0x8]
   1400111e1:	mov    rcx,rbx
   1400111e4:	call   QWORD PTR [rip+0x214be]        # 0x1400326a8
   1400111ea:	mov    rcx,rsi
   1400111ed:	call   rbx
   1400111ef:	lea    rcx,[rdi+0x18]
   1400111f3:	cmp    BYTE PTR [rcx+0x28],0x0
   1400111f7:	je     0x140011203
   1400111f9:	mov    BYTE PTR [rcx+0x28],0x0
   1400111fd:	call   QWORD PTR [rip+0x21075]        # 0x140032278
   140011203:	mov    rbx,QWORD PTR [rsp+0x30]
   140011208:	mov    rsi,QWORD PTR [rsp+0x38]
   14001120d:	add    rsp,0x20
   140011211:	pop    rdi
   140011212:	ret    
   140011213:	int3   
   140011214:	int3   
   140011215:	int3   
   140011216:	int3   
   140011217:	int3   
   140011218:	int3   
   140011219:	int3   
   14001121a:	int3   
   14001121b:	int3   
   14001121c:	mov    QWORD PTR [rsp+0x8],rcx
   140011221:	push   rbx
   140011222:	push   rsi
   140011223:	push   rdi
   140011224:	push   r14
   140011226:	push   r15
   140011228:	sub    rsp,0x30
   14001122c:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140011235:	mov    r15,rcx
   140011238:	xor    edi,edi
   14001123a:	test   rcx,rcx
   14001123d:	jne    0x140011249
   14001123f:	mov    eax,0x80004003
   140011244:	jmp    0x14001139c
   140011249:	mov    QWORD PTR [rcx],rdi
   14001124c:	mov    r14d,0x8007000e
   140011252:	mov    DWORD PTR [rsp+0x68],r14d
   140011257:	mov    QWORD PTR [rsp+0x70],rdi
   14001125c:	mov    ecx,0x148
   140011261:	call   0x140023f10
   140011266:	mov    rsi,rax
   140011269:	mov    DWORD PTR [rax+0x10],edi
   14001126c:	xor    edx,edx
   14001126e:	lea    r8d,[rdx+0x28]
   140011272:	lea    rcx,[rax+0x18]
   140011276:	call   0x14002e2ce
   14001127b:	mov    BYTE PTR [rsi+0x40],dil
   14001127f:	lea    rax,[rip+0x235ca]        # 0x140034850
   140011286:	mov    QWORD PTR [rsi],rax
   140011289:	lea    rax,[rip+0x23570]        # 0x140034800
   140011290:	mov    QWORD PTR [rsi+0x8],rax
   140011294:	mov    QWORD PTR [rsi+0x48],rdi
   140011298:	mov    QWORD PTR [rsi+0x50],rdi
   14001129c:	mov    QWORD PTR [rsi+0x60],rdi
   1400112a0:	mov    BYTE PTR [rsi+0x68],dil
   1400112a4:	mov    QWORD PTR [rsi+0x70],rdi
   1400112a8:	mov    QWORD PTR [rsi+0x80],rdi
   1400112af:	mov    QWORD PTR [rsi+0xe8],rdi
   1400112b6:	mov    DWORD PTR [rsi+0xf8],edi
   1400112bc:	lea    rax,[rip+0x23a5d]        # 0x140034d20
   1400112c3:	mov    QWORD PTR [rsi+0xf0],rax
   1400112ca:	mov    QWORD PTR [rsi+0x100],rdi
   1400112d1:	mov    BYTE PTR [rsi+0x108],dil
   1400112d8:	mov    BYTE PTR [rsi+0x109],dil
   1400112df:	mov    DWORD PTR [rsi+0x11c],0xf12192e
   1400112e9:	mov    DWORD PTR [rsi+0x138],edi
   1400112ef:	mov    WORD PTR [rsi+0x13f],di
   1400112f6:	xor    eax,eax
   1400112f8:	mov    QWORD PTR [rsi+0x90],rax
   1400112ff:	mov    QWORD PTR [rsi+0x98],rax
   140011306:	mov    QWORD PTR [rsi+0xe0],rax
   14001130d:	lea    rcx,[rsi+0xa0]
   140011314:	xor    edx,edx
   140011316:	lea    r8d,[rax+0x40]
   14001131a:	call   0x14002e2ce
   14001131f:	lea    rax,[rip+0x2348a]        # 0x1400347b0
   140011326:	mov    QWORD PTR [rsi],rax
   140011329:	lea    rax,[rip+0x23430]        # 0x140034760
   140011330:	mov    QWORD PTR [rsi+0x8],rax
   140011334:	mov    rax,QWORD PTR [rip+0x3ec9d]        # 0x14004ffd8
   14001133b:	lock inc DWORD PTR [rax+0xc]
   14001133f:	mov    QWORD PTR [rsp+0x70],rsi
   140011344:	jmp    0x140011357
   140011346:	xor    edi,edi
   140011348:	mov    r15,QWORD PTR [rsp+0x60]
   14001134d:	mov    r14d,DWORD PTR [rsp+0x68]
   140011352:	mov    rsi,QWORD PTR [rsp+0x70]
   140011357:	test   rsi,rsi
   14001135a:	je     0x140011396
   14001135c:	lea    rcx,[rsi+0x18]
   140011360:	call   0x140004ee4
   140011365:	mov    r14d,eax
   140011368:	test   eax,eax
   14001136a:	js     0x140011370
   14001136c:	mov    BYTE PTR [rsi+0x40],0x1
   140011370:	cmovns r14d,edi
   140011374:	test   r14d,r14d
   140011377:	je     0x140011396
   140011379:	mov    r8,QWORD PTR [rsi]
   14001137c:	mov    rbx,QWORD PTR [r8+0x40]
   140011380:	mov    rcx,rbx
   140011383:	call   QWORD PTR [rip+0x2131f]        # 0x1400326a8
   140011389:	mov    edx,0x1
   14001138e:	mov    rcx,rsi
   140011391:	call   rbx
   140011393:	mov    rsi,rdi
   140011396:	mov    QWORD PTR [r15],rsi
   140011399:	mov    eax,r14d
   14001139c:	add    rsp,0x30
   1400113a0:	pop    r15
   1400113a2:	pop    r14
   1400113a4:	pop    rdi
   1400113a5:	pop    rsi
   1400113a6:	pop    rbx
   1400113a7:	ret    
   1400113a8:	int3   
   1400113a9:	int3   
   1400113aa:	int3   
   1400113ab:	int3   
   1400113ac:	int3   
   1400113ad:	int3   
   1400113ae:	int3   
   1400113af:	int3   
   1400113b0:	sub    rcx,0x8
   1400113b4:	jmp    0x140011030
   1400113b9:	int3   
   1400113ba:	int3   
   1400113bb:	int3   
   1400113bc:	int3   
   1400113bd:	int3   
   1400113be:	int3   
   1400113bf:	int3   
   1400113c0:	sub    rcx,0x8
   1400113c4:	jmp    0x140011010
   1400113c9:	int3   
   1400113ca:	int3   
   1400113cb:	int3   
   1400113cc:	int3   
   1400113cd:	int3   
   1400113ce:	int3   
   1400113cf:	int3   
   1400113d0:	mov    rax,rsp
   1400113d3:	mov    QWORD PTR [rax+0x8],rbx
   1400113d7:	mov    QWORD PTR [rax+0x10],rbp
   1400113db:	mov    QWORD PTR [rax+0x18],rsi
   1400113df:	mov    QWORD PTR [rax+0x20],rdi
   1400113e3:	push   r12
   1400113e5:	push   r14
   1400113e7:	push   r15
   1400113e9:	sub    rsp,0x20
   1400113ed:	xor    ebx,ebx
   1400113ef:	mov    r12,rdx
   1400113f2:	mov    rsi,rcx
   1400113f5:	test   rdx,rdx
   1400113f8:	je     0x1400114ce
   1400113fe:	or     rdi,0xffffffffffffffff
   140011402:	inc    rdi
   140011405:	cmp    WORD PTR [rdx+rdi*2],bx
   140011409:	jne    0x140011402
   14001140b:	cmp    QWORD PTR [rcx],rbx
   14001140e:	je     0x140011418
   140011410:	test   edi,edi
   140011412:	je     0x1400114ce
   140011418:	mov    rcx,QWORD PTR [rcx]
   14001141b:	call   QWORD PTR [rip+0x20f4f]        # 0x140032370
   140011421:	movsxd r15,eax
   140011424:	lea    ebp,[r15+rdi*1]
   140011428:	cmp    ebp,r15d
   14001142b:	jge    0x140011437
   14001142d:	mov    ebx,0x8007000e
   140011432:	jmp    0x1400114ce
   140011437:	mov    edx,ebp
   140011439:	xor    ecx,ecx
   14001143b:	call   QWORD PTR [rip+0x20f37]        # 0x140032378
   140011441:	mov    r14,rax
   140011444:	test   rax,rax
   140011447:	je     0x14001142d
   140011449:	mov    rcx,QWORD PTR [rsi]
   14001144c:	call   QWORD PTR [rip+0x20f1e]        # 0x140032370
   140011452:	test   eax,eax
   140011454:	je     0x14001148a
   140011456:	mov    r8,QWORD PTR [rsi]
   140011459:	mov    r9,r15
   14001145c:	movsxd rdx,ebp
   14001145f:	add    r9,r9
   140011462:	add    rdx,rdx
   140011465:	mov    rcx,r14
   140011468:	call   QWORD PTR [rip+0x21152]        # 0x1400325c0
   14001146e:	test   eax,eax
   140011470:	je     0x14001148a
   140011472:	cmp    eax,0xc
   140011475:	je     0x140011505
   14001147b:	cmp    eax,0x16
   14001147e:	je     0x1400114fa
   140011480:	cmp    eax,0x22
   140011483:	je     0x1400114fa
   140011485:	cmp    eax,0x50
   140011488:	jne    0x1400114ef
   14001148a:	movsxd rdi,edi
   14001148d:	lea    rcx,[r14+r15*2]
   140011491:	mov    r8,r12
   140011494:	lea    rdx,[rdi+rdi*1]
   140011498:	mov    r9,rdx
   14001149b:	call   QWORD PTR [rip+0x2111f]        # 0x1400325c0
   1400114a1:	test   eax,eax
   1400114a3:	je     0x1400114b9
   1400114a5:	cmp    eax,0xc
   1400114a8:	je     0x140011526
   1400114aa:	cmp    eax,0x16
   1400114ad:	je     0x14001151b
   1400114af:	cmp    eax,0x22
   1400114b2:	je     0x14001151b
   1400114b4:	cmp    eax,0x50
   1400114b7:	jne    0x140011510
   1400114b9:	lea    rax,[rdi+r15*1]
   1400114bd:	mov    WORD PTR [r14+rax*2],bx
   1400114c2:	mov    rcx,QWORD PTR [rsi]
   1400114c5:	call   QWORD PTR [rip+0x20e85]        # 0x140032350
   1400114cb:	mov    QWORD PTR [rsi],r14
   1400114ce:	mov    rbp,QWORD PTR [rsp+0x48]
   1400114d3:	mov    eax,ebx
   1400114d5:	mov    rbx,QWORD PTR [rsp+0x40]
   1400114da:	mov    rsi,QWORD PTR [rsp+0x50]
   1400114df:	mov    rdi,QWORD PTR [rsp+0x58]
   1400114e4:	add    rsp,0x20
   1400114e8:	pop    r15
   1400114ea:	pop    r14
   1400114ec:	pop    r12
   1400114ee:	ret    
   1400114ef:	mov    ecx,0x80004005
   1400114f4:	call   0x140005d50
   1400114f9:	int3   
   1400114fa:	mov    ecx,0x80070057
   1400114ff:	call   0x140005d50
   140011504:	int3   
   140011505:	mov    ecx,0x8007000e
   14001150a:	call   0x140005d50
   14001150f:	int3   
   140011510:	mov    ecx,0x80004005
   140011515:	call   0x140005d50
   14001151a:	int3   
   14001151b:	mov    ecx,0x80070057
   140011520:	call   0x140005d50
   140011525:	int3   
   140011526:	mov    ecx,0x8007000e
   14001152b:	call   0x140005d50
   140011530:	int3   
   140011531:	int3   
   140011532:	int3   
   140011533:	int3   
   140011534:	int3   
   140011535:	int3   
   140011536:	int3   
   140011537:	int3   
   140011538:	mov    QWORD PTR [rsp+0x8],rcx
   14001153d:	push   rbx
   14001153e:	push   rsi
   14001153f:	push   rdi
   140011540:	sub    rsp,0x40
   140011544:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14001154d:	mov    rdi,rcx
   140011550:	xor    esi,esi
   140011552:	mov    DWORD PTR [rcx+0x8],esi
   140011555:	lea    rax,[rip+0x2333c]        # 0x140034898
   14001155c:	mov    QWORD PTR [rcx],rax
   14001155f:	mov    QWORD PTR [rcx+0x10],rsi
   140011563:	mov    QWORD PTR [rcx+0x18],rsi
   140011567:	mov    QWORD PTR [rcx+0x20],rsi
   14001156b:	mov    QWORD PTR [rcx+0x98],rsi
   140011572:	mov    QWORD PTR [rcx+0xa0],rsi
   140011579:	mov    QWORD PTR [rcx+0xa8],rsi
   140011580:	lea    rbx,[rcx+0xb0]
   140011587:	mov    QWORD PTR [rsp+0x78],rbx
   14001158c:	xor    eax,eax
   14001158e:	mov    BYTE PTR [rsp+0x68],al
   140011592:	mov    QWORD PTR [rbx],rsi
   140011595:	mov    QWORD PTR [rbx+0x8],rsi
   140011599:	xor    r8d,r8d
   14001159c:	xor    edx,edx
   14001159e:	call   0x140012294
   1400115a3:	mov    QWORD PTR [rbx],rax
   1400115a6:	lea    r10,[rbx+0x10]
   1400115aa:	mov    QWORD PTR [r10],rsi
   1400115ad:	mov    QWORD PTR [r10+0x8],rsi
   1400115b1:	mov    QWORD PTR [r10+0x10],rsi
   1400115b5:	mov    DWORD PTR [rbx+0x38],0x3f800000
   1400115bc:	mov    rax,QWORD PTR [rbx]
   1400115bf:	mov    QWORD PTR [rsp+0x70],rax
   1400115c4:	mov    rdx,QWORD PTR [r10+0x8]
   1400115c8:	mov    rcx,QWORD PTR [r10]
   1400115cb:	cmp    rcx,rcx
   1400115ce:	jne    0x1400115d5
   1400115d0:	cmp    rdx,rdx
   1400115d3:	je     0x14001160d
   1400115d5:	cmp    rcx,rdx
   1400115d8:	je     0x140011611
   1400115da:	mov    r9,rsi
   1400115dd:	mov    r8,rdx
   1400115e0:	sub    r8,rdx
   1400115e3:	add    r8,0x7
   1400115e7:	shr    r8,0x3
   1400115eb:	cmp    rdx,rdx
   1400115ee:	cmova  r8,rsi
   1400115f2:	test   r8,r8
   1400115f5:	je     0x14001160d
   1400115f7:	sub    rdx,rcx
   1400115fa:	mov    rax,QWORD PTR [rcx+rdx*1]
   1400115fe:	mov    QWORD PTR [rcx],rax
   140011601:	add    rcx,0x8
   140011605:	inc    r9
   140011608:	cmp    r9,r8
   14001160b:	jne    0x1400115fa
   14001160d:	mov    QWORD PTR [r10+0x8],rcx
   140011611:	lea    rax,[rsp+0x70]
   140011616:	mov    QWORD PTR [rsp+0x20],rax
   14001161b:	mov    r9d,0x10
   140011621:	mov    r8,QWORD PTR [r10]
   140011624:	lea    rdx,[rsp+0x38]
   140011629:	mov    rcx,r10
   14001162c:	call   0x14000dfb4
   140011631:	mov    QWORD PTR [rbx+0x28],0x7
   140011639:	mov    QWORD PTR [rbx+0x30],0x8
   140011641:	lea    rbx,[rdi+0xf0]
   140011648:	mov    DWORD PTR [rbx+0xc],0xf12192e
   14001164f:	or     QWORD PTR [rdi+0x118],0xffffffffffffffff
   140011657:	mov    DWORD PTR [rdi+0x128],esi
   14001165d:	lea    rax,[rip+0x236bc]        # 0x140034d20
   140011664:	mov    QWORD PTR [rdi+0x120],rax
   14001166b:	mov    QWORD PTR [rdi+0x130],rsi
   140011672:	mov    BYTE PTR [rdi+0x138],sil
   140011679:	mov    BYTE PTR [rdi+0x139],sil
   140011680:	mov    WORD PTR [rdi+0x140],0x100
   140011689:	mov    BYTE PTR [rdi+0x142],0x1
   140011690:	xor    eax,eax
   140011692:	mov    QWORD PTR [rdi+0x28],rax
   140011696:	mov    QWORD PTR [rdi+0x30],rax
   14001169a:	mov    QWORD PTR [rdi+0x38],rax
   14001169e:	mov    QWORD PTR [rdi+0x40],rax
   1400116a2:	mov    QWORD PTR [rdi+0x48],rax
   1400116a6:	lea    rcx,[rdi+0x50]
   1400116aa:	xor    edx,edx
   1400116ac:	lea    r8d,[rax+0x44]
   1400116b0:	call   0x14002e2ce
   1400116b5:	mov    DWORD PTR [rbx+0xc],esi
   1400116b8:	xor    edx,edx
   1400116ba:	mov    rcx,rbx
   1400116bd:	call   QWORD PTR [rip+0x20bad]        # 0x140032270
   1400116c3:	nop
   1400116c4:	mov    rax,rdi
   1400116c7:	add    rsp,0x40
   1400116cb:	pop    rdi
   1400116cc:	pop    rsi
   1400116cd:	pop    rbx
   1400116ce:	ret    
   1400116cf:	int3   
   1400116d0:	int3   
   1400116d1:	int3   
   1400116d2:	int3   
   1400116d3:	int3   
   1400116d4:	int3   
   1400116d5:	int3   
   1400116d6:	int3   
   1400116d7:	int3   
   1400116d8:	int3   
   1400116d9:	int3   
   1400116da:	int3   
   1400116db:	int3   
   1400116dc:	int3   
   1400116dd:	int3   
   1400116de:	int3   
   1400116df:	int3   
   1400116e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400116e5:	mov    QWORD PTR [rsp+0x10],rbp
   1400116ea:	mov    QWORD PTR [rsp+0x18],rsi
   1400116ef:	push   rdi
   1400116f0:	sub    rsp,0x20
   1400116f4:	lea    rax,[rip+0x2319d]        # 0x140034898
   1400116fb:	mov    rdi,rcx
   1400116fe:	mov    QWORD PTR [rcx],rax
   140011701:	mov    ebp,edx
   140011703:	add    rcx,0x120
   14001170a:	call   0x140029b48
   14001170f:	mov    rcx,QWORD PTR [rdi+0x118]
   140011716:	cmp    rcx,0xffffffffffffffff
   14001171a:	je     0x14001172a
   14001171c:	call   QWORD PTR [rip+0x20a36]        # 0x140032158
   140011722:	or     QWORD PTR [rdi+0x118],0xffffffffffffffff
   14001172a:	lea    rcx,[rdi+0xf0]
   140011731:	cmp    DWORD PTR [rcx+0xc],0xf12192e
   140011738:	je     0x140011740
   14001173a:	call   QWORD PTR [rip+0x20b38]        # 0x140032278
   140011740:	lea    rbx,[rdi+0xb0]
   140011747:	mov    rcx,QWORD PTR [rbx+0x10]
   14001174b:	test   rcx,rcx
   14001174e:	je     0x140011765
   140011750:	call   QWORD PTR [rip+0x20e72]        # 0x1400325c8
   140011756:	and    QWORD PTR [rbx+0x10],0x0
   14001175b:	and    QWORD PTR [rbx+0x18],0x0
   140011760:	and    QWORD PTR [rbx+0x20],0x0
   140011765:	mov    rcx,rbx
   140011768:	call   0x140012200
   14001176d:	mov    rsi,QWORD PTR [rdi+0xa8]
   140011774:	test   rsi,rsi
   140011777:	je     0x1400117b5
   140011779:	mov    eax,DWORD PTR [rsi+0x8]
   14001177c:	cmp    eax,0x1
   14001177f:	jne    0x14001178a
   140011781:	mov    DWORD PTR [rsi+0x8],0x0
   140011788:	jmp    0x140011797
   14001178a:	or     eax,0xffffffff
   14001178d:	lock xadd DWORD PTR [rsi+0x8],eax
   140011792:	sub    eax,0x1
   140011795:	jg     0x1400117b5
   140011797:	test   rsi,rsi
   14001179a:	je     0x1400117b5
   14001179c:	mov    rax,QWORD PTR [rsi]
   14001179f:	mov    rbx,QWORD PTR [rax]
   1400117a2:	mov    rcx,rbx
   1400117a5:	call   QWORD PTR [rip+0x20efd]        # 0x1400326a8
   1400117ab:	mov    edx,0x1
   1400117b0:	mov    rcx,rsi
   1400117b3:	call   rbx
   1400117b5:	mov    rsi,QWORD PTR [rdi+0xa0]
   1400117bc:	test   rsi,rsi
   1400117bf:	je     0x1400117d6
   1400117c1:	mov    rax,QWORD PTR [rsi]
   1400117c4:	mov    rbx,QWORD PTR [rax+0x8]
   1400117c8:	mov    rcx,rbx
   1400117cb:	call   QWORD PTR [rip+0x20ed7]        # 0x1400326a8
   1400117d1:	mov    rcx,rsi
   1400117d4:	call   rbx
   1400117d6:	mov    rsi,QWORD PTR [rdi+0x98]
   1400117dd:	test   rsi,rsi
   1400117e0:	je     0x1400117f7
   1400117e2:	mov    rax,QWORD PTR [rsi]
   1400117e5:	mov    rbx,QWORD PTR [rax+0x10]
   1400117e9:	mov    rcx,rbx
   1400117ec:	call   QWORD PTR [rip+0x20eb6]        # 0x1400326a8
   1400117f2:	mov    rcx,rsi
   1400117f5:	call   rbx
   1400117f7:	lea    rax,[rip+0x230aa]        # 0x1400348a8
   1400117fe:	mov    QWORD PTR [rdi],rax
   140011801:	test   bpl,0x1
   140011805:	je     0x140011810
   140011807:	mov    rcx,rdi
   14001180a:	call   QWORD PTR [rip+0x20db8]        # 0x1400325c8
   140011810:	mov    rbx,QWORD PTR [rsp+0x30]
   140011815:	mov    rax,rdi
   140011818:	mov    rbp,QWORD PTR [rsp+0x38]
   14001181d:	mov    rsi,QWORD PTR [rsp+0x40]
   140011822:	add    rsp,0x20
   140011826:	pop    rdi
   140011827:	ret    
   140011828:	int3   
   140011829:	int3   
   14001182a:	int3   
   14001182b:	int3   
   14001182c:	int3   
   14001182d:	int3   
   14001182e:	int3   
   14001182f:	int3   
   140011830:	rex push rbx
   140011832:	sub    rsp,0x20
   140011836:	mov    rbx,rcx
   140011839:	mov    rcx,QWORD PTR [rcx+0x10]
   14001183d:	test   rcx,rcx
   140011840:	je     0x140011857
   140011842:	call   QWORD PTR [rip+0x20d80]        # 0x1400325c8
   140011848:	and    QWORD PTR [rbx+0x10],0x0
   14001184d:	and    QWORD PTR [rbx+0x18],0x0
   140011852:	and    QWORD PTR [rbx+0x20],0x0
   140011857:	mov    rcx,rbx
   14001185a:	add    rsp,0x20
   14001185e:	pop    rbx
   14001185f:	jmp    0x140012200
   140011864:	int3   
   140011865:	int3   
   140011866:	int3   
   140011867:	int3   
   140011868:	int3   
   140011869:	int3   
   14001186a:	int3   
   14001186b:	int3   
   14001186c:	mov    QWORD PTR [rsp+0x10],rbx
   140011871:	push   rbp
   140011872:	push   rsi
   140011873:	push   rdi
   140011874:	push   r12
   140011876:	push   r13
   140011878:	push   r14
   14001187a:	push   r15
   14001187c:	mov    rbp,rsp
   14001187f:	sub    rsp,0x40
   140011883:	lea    r13,[rcx+0xf0]
   14001188a:	mov    rsi,rcx
   14001188d:	mov    rcx,r13
   140011890:	mov    r14,rdx
   140011893:	call   QWORD PTR [rip+0x2086f]        # 0x140032108
   140011899:	mov    ecx,r14d
   14001189c:	mov    ebx,0x7fffffff
   1400118a1:	xor    ecx,0xdeadbeef
   1400118a7:	mov    edx,0x1f31d
   1400118ac:	and    ecx,ebx
   1400118ae:	add    rsi,0xb0
   1400118b5:	call   QWORD PTR [rip+0x20cfd]        # 0x1400325b8
   1400118bb:	mov    QWORD PTR [rbp+0x40],rax
   1400118bf:	shr    rax,0x20
   1400118c3:	imul   ecx,eax,0x41a7
   1400118c9:	imul   eax,DWORD PTR [rbp+0x40],0xb14
   1400118d0:	sub    ecx,eax
   1400118d2:	jns    0x1400118d6
   1400118d4:	add    ecx,ebx
   1400118d6:	mov    rdx,QWORD PTR [rsi+0x28]
   1400118da:	movsxd rcx,ecx
   1400118dd:	and    rcx,rdx
   1400118e0:	cmp    QWORD PTR [rsi+0x30],rcx
   1400118e4:	ja     0x1400118f3
   1400118e6:	shr    rdx,1
   1400118e9:	or     rax,0xffffffffffffffff
   1400118ed:	sub    rax,rdx
   1400118f0:	add    rcx,rax
   1400118f3:	mov    rbx,rcx
   1400118f6:	lea    r12,[rsi+0x10]
   1400118fa:	mov    rdx,QWORD PTR [r12]
   1400118fe:	lea    r8,[rcx+rcx*1]
   140011902:	mov    rcx,QWORD PTR [rsi]
   140011905:	add    rbx,rbx
   140011908:	mov    rbx,QWORD PTR [rdx+rbx*8]
   14001190c:	cmp    QWORD PTR [rdx+r8*8],rcx
   140011910:	jne    0x140011917
   140011912:	mov    rax,rcx
   140011915:	jmp    0x14001191f
   140011917:	mov    rax,QWORD PTR [rdx+r8*8+0x8]
   14001191c:	mov    rax,QWORD PTR [rax]
   14001191f:	cmp    rbx,rax
   140011922:	je     0x14001195a
   140011924:	cmp    QWORD PTR [rbx+0x10],r14
   140011928:	jae    0x14001192f
   14001192a:	mov    rbx,QWORD PTR [rbx]
   14001192d:	jmp    0x14001190c
   14001192f:	mov    rdi,rbx
   140011932:	cmp    QWORD PTR [rdx+r8*8],rcx
   140011936:	jne    0x14001193d
   140011938:	mov    rax,rcx
   14001193b:	jmp    0x140011945
   14001193d:	mov    rax,QWORD PTR [rdx+r8*8+0x8]
   140011942:	mov    rax,QWORD PTR [rax]
   140011945:	cmp    rbx,rax
   140011948:	je     0x140011955
   14001194a:	cmp    r14,QWORD PTR [rbx+0x10]
   14001194e:	jb     0x140011955
   140011950:	mov    rbx,QWORD PTR [rbx]
   140011953:	jmp    0x140011932
   140011955:	cmp    rdi,rbx
   140011958:	jne    0x140011973
   14001195a:	mov    QWORD PTR [rbp-0x10],rcx
   14001195e:	mov    QWORD PTR [rbp-0x8],rcx
   140011962:	movaps xmm0,XMMWORD PTR [rbp-0x10]
   140011966:	movdqa XMMWORD PTR [rbp-0x10],xmm0
   14001196b:	mov    rbx,QWORD PTR [rbp-0x8]
   14001196f:	mov    rdi,QWORD PTR [rbp-0x10]
   140011973:	mov    rax,rdi
   140011976:	cmp    rdi,rbx
   140011979:	je     0x140011983
   14001197b:	mov    rax,QWORD PTR [rax]
   14001197e:	cmp    rax,rbx
   140011981:	jne    0x14001197b
   140011983:	mov    r14,QWORD PTR [rcx]
   140011986:	cmp    rdi,r14
   140011989:	jne    0x140011a2d
   14001198f:	cmp    rbx,rcx
   140011992:	jne    0x140011a2d
   140011998:	mov    QWORD PTR [rcx],rcx
   14001199b:	mov    rax,QWORD PTR [rsi]
   14001199e:	mov    QWORD PTR [rax+0x8],rax
   1400119a2:	and    QWORD PTR [rsi+0x8],0x0
   1400119a7:	cmp    r14,QWORD PTR [rsi]
   1400119aa:	je     0x1400119de
   1400119ac:	mov    rdi,QWORD PTR [r14+0x18]
   1400119b0:	mov    r15,QWORD PTR [r14]
   1400119b3:	test   rdi,rdi
   1400119b6:	je     0x1400119cd
   1400119b8:	mov    rax,QWORD PTR [rdi]
   1400119bb:	mov    rbx,QWORD PTR [rax+0x8]
   1400119bf:	mov    rcx,rbx
   1400119c2:	call   QWORD PTR [rip+0x20ce0]        # 0x1400326a8
   1400119c8:	mov    rcx,rdi
   1400119cb:	call   rbx
   1400119cd:	mov    rcx,r14
   1400119d0:	call   QWORD PTR [rip+0x20bf2]        # 0x1400325c8
   1400119d6:	mov    r14,r15
   1400119d9:	cmp    r15,QWORD PTR [rsi]
   1400119dc:	jne    0x1400119ac
   1400119de:	mov    rax,QWORD PTR [rsi]
   1400119e1:	lea    rdx,[rbp+0x50]
   1400119e5:	mov    r8,QWORD PTR [r12]
   1400119e9:	mov    r9d,0x10
   1400119ef:	mov    QWORD PTR [rbp+0x40],rax
   1400119f3:	mov    rcx,r12
   1400119f6:	lea    rax,[rbp+0x40]
   1400119fa:	mov    QWORD PTR [r12+0x8],r8
   1400119ff:	mov    QWORD PTR [rsp+0x20],rax
   140011a04:	call   0x14000dfb4
   140011a09:	mov    QWORD PTR [rsi+0x28],0x7
   140011a11:	mov    QWORD PTR [rsi+0x30],0x8
   140011a19:	jmp    0x140011a32
   140011a1b:	mov    r8,rdi
   140011a1e:	lea    rdx,[rbp+0x40]
   140011a22:	mov    rdi,QWORD PTR [rdi]
   140011a25:	mov    rcx,rsi
   140011a28:	call   0x1400120a8
   140011a2d:	cmp    rdi,rbx
   140011a30:	jne    0x140011a1b
   140011a32:	mov    rcx,r13
   140011a35:	mov    rbx,QWORD PTR [rsp+0x88]
   140011a3d:	add    rsp,0x40
   140011a41:	pop    r15
   140011a43:	pop    r14
   140011a45:	pop    r13
   140011a47:	pop    r12
   140011a49:	pop    rdi
   140011a4a:	pop    rsi
   140011a4b:	pop    rbp
   140011a4c:	rex.W jmp QWORD PTR [rip+0x206a5]        # 0x1400320f8
   140011a53:	int3   
   140011a54:	int3   
   140011a55:	int3   
   140011a56:	int3   
   140011a57:	int3   
   140011a58:	int3   
   140011a59:	int3   
   140011a5a:	int3   
   140011a5b:	int3   
   140011a5c:	rex push rbp
   140011a5e:	push   rsi
   140011a5f:	push   rdi
   140011a60:	sub    rsp,0x30
   140011a64:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140011a6d:	mov    QWORD PTR [rsp+0x58],rbx
   140011a72:	mov    rsi,rdx
   140011a75:	lea    rbx,[rcx+0x120]
   140011a7c:	mov    QWORD PTR [rsp+0x60],rbx
   140011a81:	mov    rcx,rbx
   140011a84:	call   0x140029ab0
   140011a89:	xor    ebp,ebp
   140011a8b:	test   eax,eax
   140011a8d:	jns    0x140011a97
   140011a8f:	mov    ecx,eax
   140011a91:	call   0x140029d64
   140011a96:	nop
   140011a97:	mov    WORD PTR [rsp+0x50],bp
   140011a9c:	mov    rax,QWORD PTR [rsi]
   140011a9f:	mov    rdi,QWORD PTR [rax+0x18]
   140011aa3:	mov    rcx,rdi
   140011aa6:	call   QWORD PTR [rip+0x20bfc]        # 0x1400326a8
   140011aac:	lea    rdx,[rsp+0x50]
   140011ab1:	mov    rcx,rsi
   140011ab4:	call   rdi
   140011ab6:	test   eax,eax
   140011ab8:	jns    0x140011ac2
   140011aba:	mov    ecx,eax
   140011abc:	call   0x140029d64
   140011ac1:	int3   
   140011ac2:	cmp    WORD PTR [rsp+0x50],bp
   140011ac7:	sete   dil
   140011acb:	or     ecx,0xffffffff
   140011ace:	lock xadd DWORD PTR [rbx+0x8],ecx
   140011ad3:	dec    ecx
   140011ad5:	cmp    ecx,0x80000000
   140011adb:	jne    0x140011ae7
   140011add:	mov    rcx,QWORD PTR [rsp+0x60]
   140011ae2:	call   0x140029c90
   140011ae7:	mov    al,dil
   140011aea:	mov    rbx,QWORD PTR [rsp+0x58]
   140011aef:	add    rsp,0x30
   140011af3:	pop    rdi
   140011af4:	pop    rsi
   140011af5:	pop    rbp
   140011af6:	ret    
   140011af7:	int3   
   140011af8:	int3   
   140011af9:	int3   
   140011afa:	int3   
   140011afb:	int3   
   140011afc:	int3   
   140011afd:	int3   
   140011afe:	int3   
   140011aff:	int3   
   140011b00:	rex push rbp
   140011b02:	push   rsi
   140011b03:	push   rdi
   140011b04:	sub    rsp,0x30
   140011b08:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140011b11:	mov    QWORD PTR [rsp+0x58],rbx
   140011b16:	mov    ebp,r8d
   140011b19:	mov    rsi,rdx
   140011b1c:	lea    rdi,[rcx+0x120]
   140011b23:	mov    QWORD PTR [rsp+0x20],rdi
   140011b28:	mov    rcx,rdi
   140011b2b:	call   0x140029ab0
   140011b30:	test   eax,eax
   140011b32:	jns    0x140011b3c
   140011b34:	mov    ecx,eax
   140011b36:	call   0x140029d64
   140011b3b:	nop
   140011b3c:	and    QWORD PTR [rsp+0x68],0x0
   140011b42:	mov    rax,QWORD PTR [rsi]
   140011b45:	mov    rbx,QWORD PTR [rax]
   140011b48:	mov    rcx,rbx
   140011b4b:	call   QWORD PTR [rip+0x20b57]        # 0x1400326a8
   140011b51:	lea    r8,[rsp+0x68]
   140011b56:	lea    rdx,[rip+0x2563b]        # 0x140037198
   140011b5d:	mov    rcx,rsi
   140011b60:	call   rbx
   140011b62:	test   eax,eax
   140011b64:	jns    0x140011b6e
   140011b66:	mov    ecx,eax
   140011b68:	call   0x140029d64
   140011b6d:	int3   
   140011b6e:	and    DWORD PTR [rsp+0x50],0x0
   140011b73:	mov    rbx,QWORD PTR [rsp+0x68]
   140011b78:	mov    rax,QWORD PTR [rbx]
   140011b7b:	mov    rsi,QWORD PTR [rax+0x18]
   140011b7f:	mov    rcx,rsi
   140011b82:	call   QWORD PTR [rip+0x20b20]        # 0x1400326a8
   140011b88:	lea    r8,[rsp+0x50]
   140011b8d:	mov    edx,ebp
   140011b8f:	mov    rcx,rbx
   140011b92:	call   rsi
   140011b94:	mov    ebp,eax
   140011b96:	mov    rbx,QWORD PTR [rsp+0x68]
   140011b9b:	test   rbx,rbx
   140011b9e:	je     0x140011bbc
   140011ba0:	mov    rcx,QWORD PTR [rbx]
   140011ba3:	mov    rsi,QWORD PTR [rcx+0x10]
   140011ba7:	mov    rcx,rsi
   140011baa:	call   QWORD PTR [rip+0x20af8]        # 0x1400326a8
   140011bb0:	mov    rcx,rbx
   140011bb3:	call   rsi
   140011bb5:	xor    ebx,ebx
   140011bb7:	mov    QWORD PTR [rsp+0x68],rbx
   140011bbc:	test   ebp,ebp
   140011bbe:	jns    0x140011bc8
   140011bc0:	mov    ecx,ebp
   140011bc2:	call   0x140029d64
   140011bc7:	int3   
   140011bc8:	mov    ebp,DWORD PTR [rsp+0x50]
   140011bcc:	test   rbx,rbx
   140011bcf:	je     0x140011be7
   140011bd1:	mov    rax,QWORD PTR [rbx]
   140011bd4:	mov    rsi,QWORD PTR [rax+0x10]
   140011bd8:	mov    rcx,rsi
   140011bdb:	call   QWORD PTR [rip+0x20ac7]        # 0x1400326a8
   140011be1:	mov    rcx,rbx
   140011be4:	call   rsi
   140011be6:	nop
   140011be7:	or     ecx,0xffffffff
   140011bea:	lock xadd DWORD PTR [rdi+0x8],ecx
   140011bef:	dec    ecx
   140011bf1:	cmp    ecx,0x80000000
   140011bf7:	jne    0x140011c03
   140011bf9:	mov    rcx,QWORD PTR [rsp+0x20]
   140011bfe:	call   0x140029c90
   140011c03:	mov    eax,ebp
   140011c05:	mov    rbx,QWORD PTR [rsp+0x58]
   140011c0a:	add    rsp,0x30
   140011c0e:	pop    rdi
   140011c0f:	pop    rsi
   140011c10:	pop    rbp
   140011c11:	ret    
   140011c12:	int3   
   140011c13:	int3   
   140011c14:	int3   
   140011c15:	int3   
   140011c16:	int3   
   140011c17:	int3   
   140011c18:	mov    rax,rsp
   140011c1b:	push   rsi
   140011c1c:	push   rdi
   140011c1d:	push   r14
   140011c1f:	sub    rsp,0x30
   140011c23:	mov    QWORD PTR [rax-0x20],0xfffffffffffffffe
   140011c2b:	mov    QWORD PTR [rax+0x10],rbx
   140011c2f:	mov    QWORD PTR [rax+0x18],rbp
   140011c33:	mov    ebp,r9d
   140011c36:	mov    r14d,r8d
   140011c39:	mov    rsi,rdx
   140011c3c:	lea    rdi,[rcx+0x120]
   140011c43:	mov    QWORD PTR [rax-0x28],rdi
   140011c47:	mov    rcx,rdi
   140011c4a:	call   0x140029ab0
   140011c4f:	test   eax,eax
   140011c51:	jns    0x140011c5b
   140011c53:	mov    ecx,eax
   140011c55:	call   0x140029d64
   140011c5a:	nop
   140011c5b:	and    QWORD PTR [rsp+0x50],0x0
   140011c61:	mov    rax,QWORD PTR [rsi]
   140011c64:	mov    rbx,QWORD PTR [rax]
   140011c67:	mov    rcx,rbx
   140011c6a:	call   QWORD PTR [rip+0x20a38]        # 0x1400326a8
   140011c70:	lea    r8,[rsp+0x50]
   140011c75:	lea    rdx,[rip+0x2551c]        # 0x140037198
   140011c7c:	mov    rcx,rsi
   140011c7f:	call   rbx
   140011c81:	test   eax,eax
   140011c83:	jns    0x140011c8d
   140011c85:	mov    ecx,eax
   140011c87:	call   0x140029d64
   140011c8c:	int3   
   140011c8d:	mov    rbx,QWORD PTR [rsp+0x50]
   140011c92:	mov    rax,QWORD PTR [rbx]
   140011c95:	mov    rsi,QWORD PTR [rax+0x20]
   140011c99:	mov    rcx,rsi
   140011c9c:	call   QWORD PTR [rip+0x20a06]        # 0x1400326a8
   140011ca2:	mov    r8d,ebp
   140011ca5:	mov    edx,r14d
   140011ca8:	mov    rcx,rbx
   140011cab:	call   rsi
   140011cad:	mov    ebp,eax
   140011caf:	mov    rbx,QWORD PTR [rsp+0x50]
   140011cb4:	test   rbx,rbx
   140011cb7:	je     0x140011cd5
   140011cb9:	mov    rcx,QWORD PTR [rbx]
   140011cbc:	mov    rsi,QWORD PTR [rcx+0x10]
   140011cc0:	mov    rcx,rsi
   140011cc3:	call   QWORD PTR [rip+0x209df]        # 0x1400326a8
   140011cc9:	mov    rcx,rbx
   140011ccc:	call   rsi
   140011cce:	xor    ebx,ebx
   140011cd0:	mov    QWORD PTR [rsp+0x50],rbx
   140011cd5:	test   ebp,ebp
   140011cd7:	jns    0x140011ce1
   140011cd9:	mov    ecx,ebp
   140011cdb:	call   0x140029d64
   140011ce0:	nop
   140011ce1:	test   rbx,rbx
   140011ce4:	je     0x140011cfc
   140011ce6:	mov    rax,QWORD PTR [rbx]
   140011ce9:	mov    rsi,QWORD PTR [rax+0x10]
   140011ced:	mov    rcx,rsi
   140011cf0:	call   QWORD PTR [rip+0x209b2]        # 0x1400326a8
   140011cf6:	mov    rcx,rbx
   140011cf9:	call   rsi
   140011cfb:	nop
   140011cfc:	or     eax,0xffffffff
   140011cff:	lock xadd DWORD PTR [rdi+0x8],eax
   140011d04:	dec    eax
   140011d06:	cmp    eax,0x80000000
   140011d0b:	jne    0x140011d17
   140011d0d:	mov    rcx,QWORD PTR [rsp+0x20]
   140011d12:	call   0x140029c90
   140011d17:	mov    rbx,QWORD PTR [rsp+0x58]
   140011d1c:	mov    rbp,QWORD PTR [rsp+0x60]
   140011d21:	add    rsp,0x30
   140011d25:	pop    r14
   140011d27:	pop    rdi
   140011d28:	pop    rsi
   140011d29:	ret    
   140011d2a:	int3   
   140011d2b:	int3   
   140011d2c:	int3   
   140011d2d:	int3   
   140011d2e:	int3   
   140011d2f:	int3   
   140011d30:	mov    rax,rsp
   140011d33:	push   rdi
   140011d34:	sub    rsp,0x30
   140011d38:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140011d40:	mov    QWORD PTR [rax+0x10],rbx
   140011d44:	mov    QWORD PTR [rax+0x18],rsi
   140011d48:	mov    rsi,rdx
   140011d4b:	lea    rbx,[rcx+0x120]
   140011d52:	mov    QWORD PTR [rax+0x8],rbx
   140011d56:	mov    rcx,rbx
   140011d59:	call   0x140029ab0
   140011d5e:	test   eax,eax
   140011d60:	jns    0x140011d6a
   140011d62:	mov    ecx,eax
   140011d64:	call   0x140029d64
   140011d69:	nop
   140011d6a:	mov    rax,QWORD PTR [rsi]
   140011d6d:	mov    rdi,QWORD PTR [rax+0x30]
   140011d71:	mov    rcx,rdi
   140011d74:	call   QWORD PTR [rip+0x2092e]        # 0x1400326a8
   140011d7a:	xor    edx,edx
   140011d7c:	mov    rcx,rsi
   140011d7f:	call   rdi
   140011d81:	test   eax,eax
   140011d83:	jns    0x140011d8d
   140011d85:	mov    ecx,eax
   140011d87:	call   0x140029d64
   140011d8c:	int3   
   140011d8d:	mov    rax,QWORD PTR [rsi]
   140011d90:	mov    rdi,QWORD PTR [rax+0x30]
   140011d94:	mov    rcx,rdi
   140011d97:	call   QWORD PTR [rip+0x2090b]        # 0x1400326a8
   140011d9d:	mov    edx,0x1
   140011da2:	mov    rcx,rsi
   140011da5:	call   rdi
   140011da7:	test   eax,eax
   140011da9:	jns    0x140011db3
   140011dab:	mov    ecx,eax
   140011dad:	call   0x140029d64
   140011db2:	nop
   140011db3:	or     eax,0xffffffff
   140011db6:	lock xadd DWORD PTR [rbx+0x8],eax
   140011dbb:	dec    eax
   140011dbd:	cmp    eax,0x80000000
   140011dc2:	jne    0x140011dce
   140011dc4:	mov    rcx,QWORD PTR [rsp+0x40]
   140011dc9:	call   0x140029c90
   140011dce:	mov    rbx,QWORD PTR [rsp+0x48]
   140011dd3:	mov    rsi,QWORD PTR [rsp+0x50]
   140011dd8:	add    rsp,0x30
   140011ddc:	pop    rdi
   140011ddd:	ret    
   140011dde:	int3   
   140011ddf:	int3   
   140011de0:	int3   
   140011de1:	int3   
   140011de2:	int3   
   140011de3:	int3   
   140011de4:	rex push rbx
   140011de6:	sub    rsp,0x30
   140011dea:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140011df3:	mov    r9,r8
   140011df6:	mov    r10,rdx
   140011df9:	mov    r11,rcx
   140011dfc:	lea    rbx,[rcx+0x120]
   140011e03:	mov    QWORD PTR [rsp+0x40],rbx
   140011e08:	mov    rcx,rbx
   140011e0b:	call   0x140029ab0
   140011e10:	test   eax,eax
   140011e12:	jns    0x140011e1c
   140011e14:	mov    ecx,eax
   140011e16:	call   0x140029d64
   140011e1b:	nop
   140011e1c:	test   r10,r10
   140011e1f:	je     0x140011e5b
   140011e21:	test   r9,r9
   140011e24:	je     0x140011e5b
   140011e26:	mov    rcx,QWORD PTR [r11+0xa0]
   140011e2d:	test   rcx,rcx
   140011e30:	je     0x140011e3e
   140011e32:	mov    r8,r9
   140011e35:	mov    rdx,r10
   140011e38:	call   0x140026624
   140011e3d:	nop
   140011e3e:	or     eax,0xffffffff
   140011e41:	lock xadd DWORD PTR [rbx+0x8],eax
   140011e46:	dec    eax
   140011e48:	cmp    eax,0x80000000
   140011e4d:	jne    0x140011e9b
   140011e4f:	mov    rcx,QWORD PTR [rsp+0x40]
   140011e54:	call   0x140029c90
   140011e59:	jmp    0x140011e9b
   140011e5b:	lea    rax,[rip+0x39216]        # 0x14004b078
   140011e62:	mov    rcx,QWORD PTR [rip+0x3920f]        # 0x14004b078
   140011e69:	cmp    rcx,rax
   140011e6c:	je     0x140011e90
   140011e6e:	test   BYTE PTR [rcx+0x1c],0x1
   140011e72:	je     0x140011e90
   140011e74:	mov    edx,0xa
   140011e79:	lea    r9,[rip+0x252b0]        # 0x140037130
   140011e80:	lea    r8,[rip+0x22549]        # 0x1400343d0
   140011e87:	mov    rcx,QWORD PTR [rcx+0x10]
   140011e8b:	call   0x1400038e0
   140011e90:	mov    ecx,0x80070057
   140011e95:	call   0x140029d64
   140011e9a:	nop
   140011e9b:	add    rsp,0x30
   140011e9f:	pop    rbx
   140011ea0:	ret    
   140011ea1:	int3   
   140011ea2:	int3   
   140011ea3:	int3   
   140011ea4:	int3   
   140011ea5:	int3   
   140011ea6:	int3   
   140011ea7:	int3   
   140011ea8:	mov    QWORD PTR [rsp+0x10],rbx
   140011ead:	mov    QWORD PTR [rsp+0x18],rbp
   140011eb2:	mov    QWORD PTR [rsp+0x20],rsi
   140011eb7:	push   rdi
   140011eb8:	push   r14
   140011eba:	push   r15
   140011ebc:	sub    rsp,0x20
   140011ec0:	mov    rsi,rcx
   140011ec3:	lea    rbp,[rcx+0xf0]
   140011eca:	mov    rcx,rbp
   140011ecd:	call   QWORD PTR [rip+0x20235]        # 0x140032108
   140011ed3:	cmp    QWORD PTR [rsi+0xb8],0x0
   140011edb:	je     0x140011f6d
   140011ee1:	lea    r15,[rsi+0xb0]
   140011ee8:	mov    rbx,QWORD PTR [r15]
   140011eeb:	mov    rbx,QWORD PTR [rbx]
   140011eee:	mov    r14,QWORD PTR [rbx+0x18]
   140011ef2:	test   r14,r14
   140011ef5:	je     0x140011f0b
   140011ef7:	mov    rax,QWORD PTR [r14]
   140011efa:	mov    rdi,QWORD PTR [rax]
   140011efd:	mov    rcx,rdi
   140011f00:	call   QWORD PTR [rip+0x207a2]        # 0x1400326a8
   140011f06:	mov    rcx,r14
   140011f09:	call   rdi
   140011f0b:	mov    r8,rbx
   140011f0e:	lea    rdx,[rsp+0x40]
   140011f13:	mov    rcx,r15
   140011f16:	call   0x1400120a8
   140011f1b:	mov    rcx,rbp
   140011f1e:	call   QWORD PTR [rip+0x201d4]        # 0x1400320f8
   140011f24:	test   r14,r14
   140011f27:	je     0x140011eca
   140011f29:	mov    rax,QWORD PTR [r14]
   140011f2c:	mov    rbx,QWORD PTR [rax+0x30]
   140011f30:	mov    rcx,rbx
   140011f33:	call   QWORD PTR [rip+0x2076f]        # 0x1400326a8
   140011f39:	mov    rcx,r14
   140011f3c:	call   rbx
   140011f3e:	mov    rax,QWORD PTR [r14]
   140011f41:	mov    rbx,QWORD PTR [rax+0x38]
   140011f45:	mov    rcx,rbx
   140011f48:	call   QWORD PTR [rip+0x2075a]        # 0x1400326a8
   140011f4e:	mov    rcx,r14
   140011f51:	call   rbx
   140011f53:	mov    rax,QWORD PTR [r14]
   140011f56:	mov    rbx,QWORD PTR [rax+0x8]
   140011f5a:	mov    rcx,rbx
   140011f5d:	call   QWORD PTR [rip+0x20745]        # 0x1400326a8
   140011f63:	mov    rcx,r14
   140011f66:	call   rbx
   140011f68:	jmp    0x140011eca
   140011f6d:	mov    rcx,rbp
   140011f70:	call   QWORD PTR [rip+0x20182]        # 0x1400320f8
   140011f76:	lea    rcx,[rsi+0x120]
   140011f7d:	call   0x140029b84
   140011f82:	mov    rdi,QWORD PTR [rsi+0xa0]
   140011f89:	test   rdi,rdi
   140011f8c:	je     0x140011fab
   140011f8e:	mov    rax,QWORD PTR [rdi]
   140011f91:	mov    rbx,QWORD PTR [rax+0x8]
   140011f95:	mov    rcx,rbx
   140011f98:	call   QWORD PTR [rip+0x2070a]        # 0x1400326a8
   140011f9e:	mov    rcx,rdi
   140011fa1:	call   rbx
   140011fa3:	and    QWORD PTR [rsi+0xa0],0x0
   140011fab:	mov    rdi,QWORD PTR [rsi+0x98]
   140011fb2:	test   rdi,rdi
   140011fb5:	je     0x140011fd4
   140011fb7:	mov    rax,QWORD PTR [rdi]
   140011fba:	mov    rbx,QWORD PTR [rax+0x10]
   140011fbe:	mov    rcx,rbx
   140011fc1:	call   QWORD PTR [rip+0x206e1]        # 0x1400326a8
   140011fc7:	mov    rcx,rdi
   140011fca:	call   rbx
   140011fcc:	and    QWORD PTR [rsi+0x98],0x0
   140011fd4:	test   BYTE PTR [rip+0x3dfe5],0x1        # 0x14004ffc0
   140011fdb:	je     0x140011ff0
   140011fdd:	lea    r8,[rip+0x223fc]        # 0x1400343e0
   140011fe4:	lea    rdx,[rip+0x221bd]        # 0x1400341a8
   140011feb:	call   0x140003818
   140011ff0:	cmp    QWORD PTR [rsi+0x10],0x0
   140011ff5:	je     0x140012087
   140011ffb:	mov    rbx,QWORD PTR [rsi+0x20]
   140011fff:	lea    rdi,[rip+0x39072]        # 0x14004b078
   140012006:	test   rbx,rbx
   140012009:	je     0x140012044
   14001200b:	mov    rcx,rbx
   14001200e:	call   QWORD PTR [rip+0x20694]        # 0x1400326a8
   140012014:	call   rbx
   140012016:	test   eax,eax
   140012018:	jns    0x140012044
   14001201a:	mov    rcx,QWORD PTR [rip+0x39057]        # 0x14004b078
   140012021:	cmp    rcx,rdi
   140012024:	je     0x140012044
   140012026:	test   BYTE PTR [rcx+0x1c],0x2
   14001202a:	je     0x140012044
   14001202c:	mov    rcx,QWORD PTR [rcx+0x10]
   140012030:	lea    r8,[rip+0x25171]        # 0x1400371a8
   140012037:	mov    edx,0xa
   14001203c:	mov    r9d,eax
   14001203f:	call   0x140001f70
   140012044:	mov    rcx,QWORD PTR [rsi+0x10]
   140012048:	call   QWORD PTR [rip+0x20092]        # 0x1400320e0
   14001204e:	test   eax,eax
   140012050:	jne    0x140012082
   140012052:	call   QWORD PTR [rip+0x20230]        # 0x140032288
   140012058:	mov    rcx,QWORD PTR [rip+0x39019]        # 0x14004b078
   14001205f:	cmp    rcx,rdi
   140012062:	je     0x140012082
   140012064:	test   BYTE PTR [rcx+0x1c],0x2
   140012068:	je     0x140012082
   14001206a:	mov    rcx,QWORD PTR [rcx+0x10]
   14001206e:	lea    r8,[rip+0x25133]        # 0x1400371a8
   140012075:	mov    edx,0xb
   14001207a:	mov    r9d,eax
   14001207d:	call   0x140001f70
   140012082:	and    QWORD PTR [rsi+0x10],0x0
   140012087:	mov    rbx,QWORD PTR [rsp+0x48]
   14001208c:	mov    rbp,QWORD PTR [rsp+0x50]
   140012091:	mov    rsi,QWORD PTR [rsp+0x58]
   140012096:	add    rsp,0x20
   14001209a:	pop    r15
   14001209c:	pop    r14
   14001209e:	pop    rdi
   14001209f:	ret    
   1400120a0:	int3   
   1400120a1:	int3   
   1400120a2:	int3   
   1400120a3:	int3   
   1400120a4:	int3   
   1400120a5:	int3   
   1400120a6:	int3   
   1400120a7:	int3   
   1400120a8:	mov    QWORD PTR [rsp+0x10],rbx
   1400120ad:	mov    QWORD PTR [rsp+0x18],r8
   1400120b2:	push   rbp
   1400120b3:	push   rsi
   1400120b4:	push   rdi
   1400120b5:	push   r14
   1400120b7:	push   r15
   1400120b9:	sub    rsp,0x20
   1400120bd:	mov    r14,rcx
   1400120c0:	mov    rbp,rdx
   1400120c3:	mov    ecx,DWORD PTR [r8+0x10]
   1400120c7:	mov    ebx,0x7fffffff
   1400120cc:	xor    ecx,0xdeadbeef
   1400120d2:	mov    edx,0x1f31d
   1400120d7:	and    ecx,ebx
   1400120d9:	call   QWORD PTR [rip+0x204d9]        # 0x1400325b8
   1400120df:	mov    QWORD PTR [rsp+0x50],rax
   1400120e4:	shr    rax,0x20
   1400120e8:	imul   edx,eax,0x41a7
   1400120ee:	imul   eax,DWORD PTR [rsp+0x50],0xb14
   1400120f6:	sub    edx,eax
   1400120f8:	jns    0x1400120fc
   1400120fa:	add    edx,ebx
   1400120fc:	mov    rcx,QWORD PTR [r14+0x28]
   140012100:	movsxd rdx,edx
   140012103:	and    rdx,rcx
   140012106:	cmp    QWORD PTR [r14+0x30],rdx
   14001210a:	ja     0x140012119
   14001210c:	shr    rcx,1
   14001210f:	or     rax,0xffffffffffffffff
   140012113:	sub    rax,rcx
   140012116:	add    rdx,rax
   140012119:	mov    rcx,QWORD PTR [r14+0x10]
   14001211d:	add    rdx,rdx
   140012120:	mov    rsi,QWORD PTR [rsp+0x60]
   140012125:	cmp    QWORD PTR [rcx+rdx*8+0x8],rsi
   14001212a:	jne    0x14001214d
   14001212c:	cmp    QWORD PTR [rcx+rdx*8],rsi
   140012130:	jne    0x140012147
   140012132:	mov    rax,QWORD PTR [r14]
   140012135:	mov    QWORD PTR [rcx+rdx*8],rax
   140012139:	mov    rcx,QWORD PTR [r14+0x10]
   14001213d:	mov    rax,QWORD PTR [r14]
   140012140:	mov    QWORD PTR [rcx+rdx*8+0x8],rax
   140012145:	jmp    0x14001215a
   140012147:	mov    rax,QWORD PTR [rsi+0x8]
   14001214b:	jmp    0x140012140
   14001214d:	cmp    QWORD PTR [rcx+rdx*8],rsi
   140012151:	jne    0x14001215f
   140012153:	mov    rax,QWORD PTR [rsi]
   140012156:	mov    QWORD PTR [rcx+rdx*8],rax
   14001215a:	mov    rsi,QWORD PTR [rsp+0x60]
   14001215f:	mov    rbx,QWORD PTR [rsi]
   140012162:	cmp    rsi,QWORD PTR [r14]
   140012165:	je     0x1400121a4
   140012167:	mov    rax,QWORD PTR [rsi+0x8]
   14001216b:	mov    QWORD PTR [rax],rbx
   14001216e:	mov    rcx,QWORD PTR [rsi]
   140012171:	mov    rax,QWORD PTR [rsi+0x8]
   140012175:	mov    QWORD PTR [rcx+0x8],rax
   140012179:	mov    r15,QWORD PTR [rsi+0x18]
   14001217d:	test   r15,r15
   140012180:	je     0x140012197
   140012182:	mov    rax,QWORD PTR [r15]
   140012185:	mov    rdi,QWORD PTR [rax+0x8]
   140012189:	mov    rcx,rdi
   14001218c:	call   QWORD PTR [rip+0x20516]        # 0x1400326a8
   140012192:	mov    rcx,r15
   140012195:	call   rdi
   140012197:	mov    rcx,rsi
   14001219a:	call   QWORD PTR [rip+0x20428]        # 0x1400325c8
   1400121a0:	dec    QWORD PTR [r14+0x8]
   1400121a4:	mov    QWORD PTR [rbp+0x0],rbx
   1400121a8:	mov    rax,rbp
   1400121ab:	mov    rbx,QWORD PTR [rsp+0x58]
   1400121b0:	add    rsp,0x20
   1400121b4:	pop    r15
   1400121b6:	pop    r14
   1400121b8:	pop    rdi
   1400121b9:	pop    rsi
   1400121ba:	pop    rbp
   1400121bb:	ret    
   1400121bc:	int3   
   1400121bd:	int3   
   1400121be:	int3   
   1400121bf:	int3   
   1400121c0:	int3   
   1400121c1:	int3   
   1400121c2:	int3   
   1400121c3:	int3   
   1400121c4:	mov    QWORD PTR [rsp+0x8],rbx
   1400121c9:	push   rdi
   1400121ca:	sub    rsp,0x20
   1400121ce:	mov    rdi,QWORD PTR [rcx+0x8]
   1400121d2:	test   rdi,rdi
   1400121d5:	je     0x1400121ec
   1400121d7:	mov    rax,QWORD PTR [rdi]
   1400121da:	mov    rbx,QWORD PTR [rax+0x8]
   1400121de:	mov    rcx,rbx
   1400121e1:	call   QWORD PTR [rip+0x204c1]        # 0x1400326a8
   1400121e7:	mov    rcx,rdi
   1400121ea:	call   rbx
   1400121ec:	mov    rbx,QWORD PTR [rsp+0x30]
   1400121f1:	add    rsp,0x20
   1400121f5:	pop    rdi
   1400121f6:	ret    
   1400121f7:	int3   
   1400121f8:	int3   
   1400121f9:	int3   
   1400121fa:	int3   
   1400121fb:	int3   
   1400121fc:	int3   
   1400121fd:	int3   
   1400121fe:	int3   
   1400121ff:	int3   
   140012200:	mov    rax,rsp
   140012203:	mov    QWORD PTR [rax+0x8],rbx
   140012207:	mov    QWORD PTR [rax+0x10],rbp
   14001220b:	mov    QWORD PTR [rax+0x18],rsi
   14001220f:	mov    QWORD PTR [rax+0x20],rdi
   140012213:	push   r14
   140012215:	sub    rsp,0x20
   140012219:	mov    rax,QWORD PTR [rcx]
   14001221c:	mov    rdi,rcx
   14001221f:	mov    rsi,QWORD PTR [rax]
   140012222:	mov    QWORD PTR [rax],rax
   140012225:	mov    rax,QWORD PTR [rcx]
   140012228:	mov    QWORD PTR [rax+0x8],rax
   14001222c:	and    QWORD PTR [rcx+0x8],0x0
   140012231:	cmp    rsi,QWORD PTR [rcx]
   140012234:	je     0x140012268
   140012236:	mov    r14,QWORD PTR [rsi+0x18]
   14001223a:	mov    rbp,QWORD PTR [rsi]
   14001223d:	test   r14,r14
   140012240:	je     0x140012257
   140012242:	mov    rax,QWORD PTR [r14]
   140012245:	mov    rbx,QWORD PTR [rax+0x8]
   140012249:	mov    rcx,rbx
   14001224c:	call   QWORD PTR [rip+0x20456]        # 0x1400326a8
   140012252:	mov    rcx,r14
   140012255:	call   rbx
   140012257:	mov    rcx,rsi
   14001225a:	call   QWORD PTR [rip+0x20368]        # 0x1400325c8
   140012260:	mov    rsi,rbp
   140012263:	cmp    rbp,QWORD PTR [rdi]
   140012266:	jne    0x140012236
   140012268:	mov    rcx,QWORD PTR [rdi]
   14001226b:	mov    rbx,QWORD PTR [rsp+0x30]
   140012270:	mov    rbp,QWORD PTR [rsp+0x38]
   140012275:	mov    rsi,QWORD PTR [rsp+0x40]
   14001227a:	mov    rdi,QWORD PTR [rsp+0x48]
   14001227f:	add    rsp,0x20
   140012283:	pop    r14
   140012285:	rex.W jmp QWORD PTR [rip+0x2033c]        # 0x1400325c8
   14001228c:	int3   
   14001228d:	int3   
   14001228e:	int3   
   14001228f:	int3   
   140012290:	int3   
   140012291:	int3   
   140012292:	int3   
   140012293:	int3   
   140012294:	mov    QWORD PTR [rsp+0x8],rcx
   140012299:	push   rdi
   14001229a:	sub    rsp,0x30
   14001229e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400122a7:	mov    QWORD PTR [rsp+0x48],rbx
   1400122ac:	mov    rdi,r8
   1400122af:	mov    rbx,rdx
   1400122b2:	mov    ecx,0x20
   1400122b7:	call   0x140023f10
   1400122bc:	mov    QWORD PTR [rsp+0x40],rax
   1400122c1:	test   rbx,rbx
   1400122c4:	jne    0x1400122cc
   1400122c6:	mov    rbx,rax
   1400122c9:	mov    rdi,rax
   1400122cc:	mov    QWORD PTR [rax],rbx
   1400122cf:	lea    rcx,[rax+0x8]
   1400122d3:	test   rcx,rcx
   1400122d6:	je     0x1400122db
   1400122d8:	mov    QWORD PTR [rcx],rdi
   1400122db:	mov    rbx,QWORD PTR [rsp+0x48]
   1400122e0:	add    rsp,0x30
   1400122e4:	pop    rdi
   1400122e5:	ret    
   1400122e6:	int3   
   1400122e7:	int3   
   1400122e8:	int3   
   1400122e9:	int3   
   1400122ea:	int3   
   1400122eb:	int3   
   1400122ec:	mov    rax,rsp
   1400122ef:	push   r13
   1400122f1:	push   r14
   1400122f3:	push   r15
   1400122f5:	sub    rsp,0x30
   1400122f9:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   140012301:	mov    QWORD PTR [rax+0x10],rbx
   140012305:	mov    QWORD PTR [rax+0x18],rsi
   140012309:	mov    QWORD PTR [rax+0x20],rdi
   14001230d:	mov    rdi,r8
   140012310:	mov    r15,rdx
   140012313:	mov    r14,rcx
   140012316:	mov    ecx,DWORD PTR [r8]
   140012319:	xor    ecx,0xdeadbeef
   14001231f:	mov    ebx,0x7fffffff
   140012324:	and    ecx,ebx
   140012326:	mov    edx,0x1f31d
   14001232b:	call   QWORD PTR [rip+0x20287]        # 0x1400325b8
   140012331:	mov    QWORD PTR [rsp+0x50],rax
   140012336:	shr    rax,0x20
   14001233a:	imul   ecx,eax,0x41a7
   140012340:	imul   eax,DWORD PTR [rsp+0x50],0xb14
   140012348:	sub    ecx,eax
   14001234a:	jns    0x14001234e
   14001234c:	add    ecx,ebx
   14001234e:	mov    rdx,QWORD PTR [r14+0x28]
   140012352:	movsxd rcx,ecx
   140012355:	and    rcx,rdx
   140012358:	cmp    QWORD PTR [r14+0x30],rcx
   14001235c:	ja     0x14001236b
   14001235e:	shr    rdx,1
   140012361:	or     rax,0xffffffffffffffff
   140012365:	sub    rax,rdx
   140012368:	add    rcx,rax
   14001236b:	mov    rax,QWORD PTR [r14]
   14001236e:	mov    rsi,rcx
   140012371:	add    rsi,rsi
   140012374:	mov    rdx,QWORD PTR [r14+0x10]
   140012378:	cmp    QWORD PTR [rdx+rsi*8],rax
   14001237c:	jne    0x140012383
   14001237e:	mov    rbx,rax
   140012381:	jmp    0x14001238b
   140012383:	mov    rbx,QWORD PTR [rdx+rsi*8+0x8]
   140012388:	mov    rbx,QWORD PTR [rbx]
   14001238b:	cmp    rbx,QWORD PTR [rdx+rsi*8]
   14001238f:	je     0x1400123c0
   140012391:	mov    r8,QWORD PTR [rdi]
   140012394:	add    rcx,rcx
   140012397:	mov    rbx,QWORD PTR [rbx+0x8]
   14001239b:	cmp    QWORD PTR [rbx+0x10],r8
   14001239f:	jbe    0x1400123a9
   1400123a1:	cmp    rbx,QWORD PTR [rdx+rcx*8]
   1400123a5:	jne    0x140012397
   1400123a7:	jmp    0x1400123c0
   1400123a9:	jae    0x1400123b0
   1400123ab:	mov    rbx,QWORD PTR [rbx]
   1400123ae:	jmp    0x1400123c0
   1400123b0:	mov    QWORD PTR [r15],rbx
   1400123b3:	mov    BYTE PTR [r15+0x8],0x0
   1400123b8:	mov    rax,r15
   1400123bb:	jmp    0x1400124a4
   1400123c0:	mov    r13,QWORD PTR [rax]
   1400123c3:	mov    r9,rdi
   1400123c6:	mov    r8,QWORD PTR [r13+0x8]
   1400123ca:	mov    rdx,r13
   1400123cd:	call   0x140012804
   1400123d2:	mov    rdx,rax
   1400123d5:	mov    rax,QWORD PTR [r14+0x8]
   1400123d9:	movabs rcx,0x7fffffffffffffe
   1400123e3:	sub    rcx,rax
   1400123e6:	cmp    rcx,0x1
   1400123ea:	jae    0x1400123f9
   1400123ec:	lea    rcx,[rip+0x24d8d]        # 0x140037180
   1400123f3:	call   0x14002d7f8
   1400123f8:	int3   
   1400123f9:	inc    rax
   1400123fc:	mov    QWORD PTR [r14+0x8],rax
   140012400:	mov    QWORD PTR [r13+0x8],rdx
   140012404:	mov    rax,QWORD PTR [rdx+0x8]
   140012408:	mov    QWORD PTR [rax],rdx
   14001240b:	mov    rdi,QWORD PTR [r14]
   14001240e:	mov    rdi,QWORD PTR [rdi]
   140012411:	mov    rax,QWORD PTR [rdi]
   140012414:	cmp    rbx,rax
   140012417:	je     0x140012446
   140012419:	mov    rcx,QWORD PTR [rdi+0x8]
   14001241d:	mov    QWORD PTR [rcx],rax
   140012420:	mov    rcx,QWORD PTR [rax+0x8]
   140012424:	mov    QWORD PTR [rcx],rbx
   140012427:	mov    rcx,QWORD PTR [rbx+0x8]
   14001242b:	mov    QWORD PTR [rcx],rdi
   14001242e:	mov    rdx,QWORD PTR [rbx+0x8]
   140012432:	mov    rcx,QWORD PTR [rax+0x8]
   140012436:	mov    QWORD PTR [rbx+0x8],rcx
   14001243a:	mov    rcx,QWORD PTR [rdi+0x8]
   14001243e:	mov    QWORD PTR [rax+0x8],rcx
   140012442:	mov    QWORD PTR [rdi+0x8],rdx
   140012446:	mov    rdx,QWORD PTR [r14+0x10]
   14001244a:	mov    rax,QWORD PTR [rdx+rsi*8]
   14001244e:	cmp    rax,QWORD PTR [r14]
   140012451:	jne    0x140012462
   140012453:	mov    QWORD PTR [rdx+rsi*8],rdi
   140012457:	mov    rax,QWORD PTR [r14+0x10]
   14001245b:	mov    QWORD PTR [rax+rsi*8+0x8],rdi
   140012460:	jmp    0x140012491
   140012462:	cmp    rax,rbx
   140012465:	jne    0x14001246d
   140012467:	mov    QWORD PTR [rdx+rsi*8],rdi
   14001246b:	jmp    0x140012491
   14001246d:	mov    rax,QWORD PTR [rdx+rsi*8+0x8]
   140012472:	mov    rcx,QWORD PTR [rax]
   140012475:	mov    QWORD PTR [rdx+rsi*8+0x8],rcx
   14001247a:	cmp    rcx,rdi
   14001247d:	je     0x140012491
   14001247f:	mov    rdx,QWORD PTR [r14+0x10]
   140012483:	mov    rax,QWORD PTR [rdx+rsi*8+0x8]
   140012488:	mov    rcx,QWORD PTR [rax+0x8]
   14001248c:	mov    QWORD PTR [rdx+rsi*8+0x8],rcx
   140012491:	mov    rcx,r14
   140012494:	call   0x1400124c8
   140012499:	mov    QWORD PTR [r15],rdi
   14001249c:	mov    BYTE PTR [r15+0x8],0x1
   1400124a1:	mov    rax,r15
   1400124a4:	mov    rbx,QWORD PTR [rsp+0x58]
   1400124a9:	mov    rsi,QWORD PTR [rsp+0x60]
   1400124ae:	mov    rdi,QWORD PTR [rsp+0x68]
   1400124b3:	add    rsp,0x30
   1400124b7:	pop    r15
   1400124b9:	pop    r14
   1400124bb:	pop    r13
   1400124bd:	ret    
   1400124be:	int3   
   1400124bf:	int3   
   1400124c0:	int3   
   1400124c1:	int3   
   1400124c2:	int3   
   1400124c3:	int3   
   1400124c4:	int3   
   1400124c5:	int3   
   1400124c6:	int3   
   1400124c7:	int3   
   1400124c8:	mov    QWORD PTR [rsp+0x18],rbx
   1400124cd:	mov    QWORD PTR [rsp+0x20],rsi
   1400124d2:	push   rdi
   1400124d3:	sub    rsp,0x40
   1400124d7:	mov    rax,QWORD PTR [rcx+0x8]
   1400124db:	xorps  xmm0,xmm0
   1400124de:	mov    rbx,QWORD PTR [rcx+0x30]
   1400124e2:	mov    rsi,rcx
   1400124e5:	movss  xmm2,DWORD PTR [rip+0x2afab]        # 0x14003d498
   1400124ed:	cvtsi2ss xmm0,rax
   1400124f2:	test   rax,rax
   1400124f5:	jns    0x1400124fb
   1400124f7:	addss  xmm0,xmm2
   1400124fb:	xorps  xmm1,xmm1
   1400124fe:	cvtsi2ss xmm1,rbx
   140012503:	test   rbx,rbx
   140012506:	jns    0x14001250c
   140012508:	addss  xmm1,xmm2
   14001250c:	divss  xmm0,xmm1
   140012510:	comiss xmm0,DWORD PTR [rcx+0x38]
   140012514:	jbe    0x14001259d
   14001251a:	cmp    rbx,0x200
   140012521:	jae    0x140012529
   140012523:	shl    rbx,0x3
   140012527:	jmp    0x14001253b
   140012529:	movabs rax,0xfffffffffffffff
   140012533:	cmp    rbx,rax
   140012536:	jae    0x14001253b
   140012538:	add    rbx,rbx
   14001253b:	mov    rax,QWORD PTR [rsi]
   14001253e:	lea    r9,[rbx+rbx*1]
   140012542:	add    rcx,0x10
   140012546:	mov    QWORD PTR [rsp+0x50],rax
   14001254b:	lea    rax,[rsp+0x50]
   140012550:	lea    rdx,[rsp+0x58]
   140012555:	mov    QWORD PTR [rsp+0x20],rax
   14001255a:	mov    r8,QWORD PTR [rcx]
   14001255d:	mov    QWORD PTR [rcx+0x8],r8
   140012561:	call   0x14000dfb4
   140012566:	lea    rax,[rbx-0x1]
   14001256a:	mov    QWORD PTR [rsi+0x30],rbx
   14001256e:	mov    QWORD PTR [rsi+0x28],rax
   140012572:	mov    rax,QWORD PTR [rsi]
   140012575:	cmp    QWORD PTR [rax],rax
   140012578:	je     0x14001259d
   14001257a:	mov    rdi,QWORD PTR [rax+0x8]
   14001257e:	mov    rbx,QWORD PTR [rsi]
   140012581:	lea    rdx,[rsp+0x30]
   140012586:	mov    rcx,rsi
   140012589:	mov    rbx,QWORD PTR [rbx]
   14001258c:	mov    r9,rbx
   14001258f:	lea    r8,[rbx+0x10]
   140012593:	call   0x1400125b4
   140012598:	cmp    rbx,rdi
   14001259b:	jne    0x14001257e
   14001259d:	mov    rbx,QWORD PTR [rsp+0x60]
   1400125a2:	mov    rsi,QWORD PTR [rsp+0x68]
   1400125a7:	add    rsp,0x40
   1400125ab:	pop    rdi
   1400125ac:	ret    
   1400125ad:	int3   
   1400125ae:	int3   
   1400125af:	int3   
   1400125b0:	int3   
   1400125b1:	int3   
   1400125b2:	int3   
   1400125b3:	int3   
   1400125b4:	mov    rax,rsp
   1400125b7:	mov    QWORD PTR [rax+0x20],r9
   1400125bb:	mov    QWORD PTR [rax+0x8],rcx
   1400125bf:	push   rsi
   1400125c0:	push   rdi
   1400125c1:	push   r12
   1400125c3:	push   r14
   1400125c5:	push   r15
   1400125c7:	sub    rsp,0x30
   1400125cb:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   1400125d3:	mov    QWORD PTR [rax+0x10],rbx
   1400125d7:	mov    rdi,r8
   1400125da:	mov    r14,rdx
   1400125dd:	mov    rsi,rcx
   1400125e0:	mov    ecx,DWORD PTR [r8]
   1400125e3:	xor    ecx,0xdeadbeef
   1400125e9:	mov    ebx,0x7fffffff
   1400125ee:	and    ecx,ebx
   1400125f0:	mov    edx,0x1f31d
   1400125f5:	call   QWORD PTR [rip+0x1ffbd]        # 0x1400325b8
   1400125fb:	mov    QWORD PTR [rsp+0x70],rax
   140012600:	shr    rax,0x20
   140012604:	imul   ecx,eax,0x41a7
   14001260a:	imul   eax,DWORD PTR [rsp+0x70],0xb14
   140012612:	sub    ecx,eax
   140012614:	jns    0x140012618
   140012616:	add    ecx,ebx
   140012618:	mov    rdx,QWORD PTR [rsi+0x28]
   14001261c:	movsxd rcx,ecx
   14001261f:	and    rcx,rdx
   140012622:	cmp    QWORD PTR [rsi+0x30],rcx
   140012626:	ja     0x140012635
   140012628:	shr    rdx,1
   14001262b:	or     rax,0xffffffffffffffff
   14001262f:	sub    rax,rdx
   140012632:	add    rcx,rax
   140012635:	mov    r8,rcx
   140012638:	add    r8,r8
   14001263b:	mov    rdx,QWORD PTR [rsi+0x10]
   14001263f:	mov    rax,QWORD PTR [rdx+r8*8]
   140012643:	cmp    rax,QWORD PTR [rsi]
   140012646:	jne    0x14001264d
   140012648:	mov    rbx,QWORD PTR [rsi]
   14001264b:	jmp    0x140012655
   14001264d:	mov    rbx,QWORD PTR [rdx+r8*8+0x8]
   140012652:	mov    rbx,QWORD PTR [rbx]
   140012655:	cmp    rbx,rax
   140012658:	je     0x1400126d4
   14001265a:	mov    rax,QWORD PTR [rdi]
   14001265d:	add    rcx,rcx
   140012660:	mov    rbx,QWORD PTR [rbx+0x8]
   140012664:	cmp    QWORD PTR [rbx+0x10],rax
   140012668:	jbe    0x140012672
   14001266a:	cmp    rbx,QWORD PTR [rdx+rcx*8]
   14001266e:	jne    0x140012660
   140012670:	jmp    0x1400126d4
   140012672:	jae    0x140012679
   140012674:	mov    rbx,QWORD PTR [rbx]
   140012677:	jmp    0x1400126d4
   140012679:	mov    r15,QWORD PTR [rsp+0x78]
   14001267e:	cmp    r15,QWORD PTR [rsi]
   140012681:	je     0x1400126c4
   140012683:	mov    rcx,QWORD PTR [r15+0x8]
   140012687:	mov    rax,QWORD PTR [r15]
   14001268a:	mov    QWORD PTR [rcx],rax
   14001268d:	mov    rcx,QWORD PTR [r15]
   140012690:	mov    rax,QWORD PTR [r15+0x8]
   140012694:	mov    QWORD PTR [rcx+0x8],rax
   140012698:	mov    r12,QWORD PTR [r15+0x18]
   14001269c:	test   r12,r12
   14001269f:	je     0x1400126b7
   1400126a1:	mov    rax,QWORD PTR [r12]
   1400126a5:	mov    rdi,QWORD PTR [rax+0x8]
   1400126a9:	mov    rcx,rdi
   1400126ac:	call   QWORD PTR [rip+0x1fff6]        # 0x1400326a8
   1400126b2:	mov    rcx,r12
   1400126b5:	call   rdi
   1400126b7:	mov    rcx,r15
   1400126ba:	call   QWORD PTR [rip+0x1ff08]        # 0x1400325c8
   1400126c0:	dec    QWORD PTR [rsi+0x8]
   1400126c4:	mov    QWORD PTR [r14],rbx
   1400126c7:	mov    BYTE PTR [r14+0x8],0x0
   1400126cc:	mov    rax,r14
   1400126cf:	jmp    0x14001276c
   1400126d4:	mov    rdi,QWORD PTR [rsp+0x78]
   1400126d9:	mov    rax,QWORD PTR [rdi]
   1400126dc:	cmp    rbx,rax
   1400126df:	je     0x14001270e
   1400126e1:	mov    rcx,QWORD PTR [rdi+0x8]
   1400126e5:	mov    QWORD PTR [rcx],rax
   1400126e8:	mov    rcx,QWORD PTR [rax+0x8]
   1400126ec:	mov    QWORD PTR [rcx],rbx
   1400126ef:	mov    rcx,QWORD PTR [rbx+0x8]
   1400126f3:	mov    QWORD PTR [rcx],rdi
   1400126f6:	mov    rdx,QWORD PTR [rbx+0x8]
   1400126fa:	mov    rcx,QWORD PTR [rax+0x8]
   1400126fe:	mov    QWORD PTR [rbx+0x8],rcx
   140012702:	mov    rcx,QWORD PTR [rdi+0x8]
   140012706:	mov    QWORD PTR [rax+0x8],rcx
   14001270a:	mov    QWORD PTR [rdi+0x8],rdx
   14001270e:	mov    rdx,QWORD PTR [rsi+0x10]
   140012712:	mov    rax,QWORD PTR [rdx+r8*8]
   140012716:	cmp    rax,QWORD PTR [rsi]
   140012719:	jne    0x14001272a
   14001271b:	mov    QWORD PTR [rdx+r8*8],rdi
   14001271f:	mov    rax,QWORD PTR [rsi+0x10]
   140012723:	mov    QWORD PTR [rax+r8*8+0x8],rdi
   140012728:	jmp    0x140012759
   14001272a:	cmp    rax,rbx
   14001272d:	jne    0x140012735
   14001272f:	mov    QWORD PTR [rdx+r8*8],rdi
   140012733:	jmp    0x140012759
   140012735:	mov    rax,QWORD PTR [rdx+r8*8+0x8]
   14001273a:	mov    rcx,QWORD PTR [rax]
   14001273d:	mov    QWORD PTR [rdx+r8*8+0x8],rcx
   140012742:	cmp    rcx,rdi
   140012745:	je     0x140012759
   140012747:	mov    rdx,QWORD PTR [rsi+0x10]
   14001274b:	mov    rax,QWORD PTR [rdx+r8*8+0x8]
   140012750:	mov    rcx,QWORD PTR [rax+0x8]
   140012754:	mov    QWORD PTR [rdx+r8*8+0x8],rcx
   140012759:	mov    rcx,rsi
   14001275c:	call   0x1400124c8
   140012761:	mov    QWORD PTR [r14],rdi
   140012764:	mov    BYTE PTR [r14+0x8],0x1
   140012769:	mov    rax,r14
   14001276c:	mov    rbx,QWORD PTR [rsp+0x68]
   140012771:	add    rsp,0x30
   140012775:	pop    r15
   140012777:	pop    r14
   140012779:	pop    r12
   14001277b:	pop    rdi
   14001277c:	pop    rsi
   14001277d:	ret    
   14001277e:	int3   
   14001277f:	int3   
   140012780:	int3   
   140012781:	int3   
   140012782:	int3   
   140012783:	int3   
   140012784:	int3   
   140012785:	int3   
   140012786:	int3   
   140012787:	int3   
   140012788:	mov    QWORD PTR [rsp+0x8],rbx
   14001278d:	mov    QWORD PTR [rsp+0x10],rsi
   140012792:	mov    QWORD PTR [rsp+0x18],rdi
   140012797:	push   r14
   140012799:	sub    rsp,0x20
   14001279d:	mov    rdi,rdx
   1400127a0:	mov    rsi,rcx
   1400127a3:	cmp    rdx,QWORD PTR [rcx]
   1400127a6:	je     0x1400127e8
   1400127a8:	mov    rdx,QWORD PTR [rdx+0x8]
   1400127ac:	mov    rax,QWORD PTR [rdi]
   1400127af:	mov    QWORD PTR [rdx],rax
   1400127b2:	mov    rdx,QWORD PTR [rdi]
   1400127b5:	mov    rax,QWORD PTR [rdi+0x8]
   1400127b9:	mov    QWORD PTR [rdx+0x8],rax
   1400127bd:	mov    r14,QWORD PTR [rdi+0x18]
   1400127c1:	test   r14,r14
   1400127c4:	je     0x1400127db
   1400127c6:	mov    rax,QWORD PTR [r14]
   1400127c9:	mov    rbx,QWORD PTR [rax+0x8]
   1400127cd:	mov    rcx,rbx
   1400127d0:	call   QWORD PTR [rip+0x1fed2]        # 0x1400326a8
   1400127d6:	mov    rcx,r14
   1400127d9:	call   rbx
   1400127db:	mov    rcx,rdi
   1400127de:	call   QWORD PTR [rip+0x1fde4]        # 0x1400325c8
   1400127e4:	dec    QWORD PTR [rsi+0x8]
   1400127e8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400127ed:	mov    rsi,QWORD PTR [rsp+0x38]
   1400127f2:	mov    rdi,QWORD PTR [rsp+0x40]
   1400127f7:	add    rsp,0x20
   1400127fb:	pop    r14
   1400127fd:	ret    
   1400127fe:	int3   
   1400127ff:	int3   
   140012800:	int3   
   140012801:	int3   
   140012802:	int3   
   140012803:	int3   
   140012804:	mov    QWORD PTR [rsp+0x8],rcx
   140012809:	push   rbx
   14001280a:	sub    rsp,0x30
   14001280e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140012817:	mov    rbx,r9
   14001281a:	call   0x140012294
   14001281f:	mov    QWORD PTR [rsp+0x40],rax
   140012824:	lea    rdx,[rax+0x10]
   140012828:	test   rdx,rdx
   14001282b:	je     0x140012840
   14001282d:	mov    rcx,QWORD PTR [rbx]
   140012830:	mov    QWORD PTR [rdx],rcx
   140012833:	mov    rcx,QWORD PTR [rbx+0x8]
   140012837:	and    QWORD PTR [rbx+0x8],0x0
   14001283c:	mov    QWORD PTR [rdx+0x8],rcx
   140012840:	add    rsp,0x30
   140012844:	pop    rbx
   140012845:	ret    
   140012846:	int3   
   140012847:	int3   
   140012848:	int3   
   140012849:	int3   
   14001284a:	int3   
   14001284b:	int3   
   14001284c:	int3   
   14001284d:	int3   
   14001284e:	int3   
   14001284f:	int3   
   140012850:	rex push rbx
   140012852:	sub    rsp,0x20
   140012856:	lea    rax,[rip+0x2204b]        # 0x1400348a8
   14001285d:	mov    rbx,rcx
   140012860:	mov    QWORD PTR [rcx],rax
   140012863:	test   dl,0x1
   140012866:	je     0x14001286e
   140012868:	call   QWORD PTR [rip+0x1fd5a]        # 0x1400325c8
   14001286e:	mov    rax,rbx
   140012871:	add    rsp,0x20
   140012875:	pop    rbx
   140012876:	ret    
   140012877:	int3   
   140012878:	int3   
   140012879:	int3   
   14001287a:	int3   
   14001287b:	int3   
   14001287c:	int3   
   14001287d:	int3   
   14001287e:	int3   
   14001287f:	int3   
   140012880:	lea    rax,[rip+0x22021]        # 0x1400348a8
   140012887:	mov    QWORD PTR [rcx],rax
   14001288a:	ret    
   14001288b:	int3   
   14001288c:	int3   
   14001288d:	int3   
   14001288e:	int3   
   14001288f:	int3   
   140012890:	int3   
   140012891:	int3   
   140012892:	int3   
   140012893:	int3   
   140012894:	sub    rsp,0x58
   140012898:	mov    rax,QWORD PTR [rsp+0x80]
   1400128a0:	xor    r11d,r11d
   1400128a3:	mov    r10,rcx
   1400128a6:	test   rax,rax
   1400128a9:	je     0x1400128cf
   1400128ab:	cmp    WORD PTR [rax],r11w
   1400128af:	jne    0x1400128b7
   1400128b1:	lea    ecx,[r11+0xe]
   1400128b5:	jmp    0x1400128d4
   1400128b7:	or     rcx,0xffffffffffffffff
   1400128bb:	inc    rcx
   1400128be:	cmp    WORD PTR [rax+rcx*2],r11w
   1400128c3:	jne    0x1400128bb
   1400128c5:	lea    rcx,[rcx*2+0x2]
   1400128cd:	jmp    0x1400128d4
   1400128cf:	mov    ecx,0xa
   1400128d4:	test   rax,rax
   1400128d7:	je     0x1400128ea
   1400128d9:	cmp    WORD PTR [rax],r11w
   1400128dd:	lea    r8,[rip+0x22574]        # 0x140034e58
   1400128e4:	cmove  rax,r8
   1400128e8:	jmp    0x1400128f1
   1400128ea:	lea    rax,[rip+0x22baf]        # 0x1400354a0
   1400128f1:	mov    QWORD PTR [rsp+0x40],r11
   1400128f6:	lea    r8,[rip+0x24fe3]        # 0x1400378e0
   1400128fd:	mov    QWORD PTR [rsp+0x38],rcx
   140012902:	mov    rcx,r10
   140012905:	mov    QWORD PTR [rsp+0x30],rax
   14001290a:	mov    QWORD PTR [rsp+0x28],0x10
   140012913:	mov    QWORD PTR [rsp+0x20],r9
   140012918:	movzx  r9d,dx
   14001291c:	mov    edx,0x2b
   140012921:	call   QWORD PTR [rip+0x1f6f9]        # 0x140032020
   140012927:	add    rsp,0x58
   14001292b:	ret    
   14001292c:	int3   
   14001292d:	int3   
   14001292e:	int3   
   14001292f:	int3   
   140012930:	int3   
   140012931:	int3   
   140012932:	int3   
   140012933:	int3   
   140012934:	sub    rsp,0x68
   140012938:	mov    rdx,QWORD PTR [rsp+0x90]
   140012940:	xor    r10d,r10d
   140012943:	test   rdx,rdx
   140012946:	je     0x14001296c
   140012948:	cmp    WORD PTR [rdx],r10w
   14001294c:	jne    0x140012954
   14001294e:	lea    r8d,[r10+0xe]
   140012952:	jmp    0x140012972
   140012954:	or     rax,0xffffffffffffffff
   140012958:	inc    rax
   14001295b:	cmp    WORD PTR [rdx+rax*2],r10w
   140012960:	jne    0x140012958
   140012962:	lea    r8,[rax*2+0x2]
   14001296a:	jmp    0x140012972
   14001296c:	mov    r8d,0xa
   140012972:	test   rdx,rdx
   140012975:	je     0x140012988
   140012977:	cmp    WORD PTR [rdx],r10w
   14001297b:	lea    rax,[rip+0x224d6]        # 0x140034e58
   140012982:	cmove  rdx,rax
   140012986:	jmp    0x14001298f
   140012988:	lea    rdx,[rip+0x22b11]        # 0x1400354a0
   14001298f:	mov    rax,QWORD PTR [rsp+0x98]
   140012997:	mov    r11d,0x22
   14001299d:	mov    QWORD PTR [rsp+0x50],r10
   1400129a2:	lea    r10d,[r11-0x12]
   1400129a6:	mov    QWORD PTR [rsp+0x48],r10
   1400129ab:	mov    QWORD PTR [rsp+0x40],rax
   1400129b0:	mov    QWORD PTR [rsp+0x38],r8
   1400129b5:	lea    r8,[rip+0x24f24]        # 0x1400378e0
   1400129bc:	mov    QWORD PTR [rsp+0x30],rdx
   1400129c1:	lea    edx,[r11+0x9]
   1400129c5:	mov    QWORD PTR [rsp+0x28],r10
   1400129ca:	mov    QWORD PTR [rsp+0x20],r9
   1400129cf:	movzx  r9d,r11w
   1400129d3:	call   QWORD PTR [rip+0x1f647]        # 0x140032020
   1400129d9:	add    rsp,0x68
   1400129dd:	ret    
   1400129de:	int3   
   1400129df:	int3   
   1400129e0:	int3   
   1400129e1:	int3   
   1400129e2:	int3   
   1400129e3:	int3   
   1400129e4:	mov    rax,rsp
   1400129e7:	push   rsi
   1400129e8:	push   rdi
   1400129e9:	push   r12
   1400129eb:	push   r14
   1400129ed:	push   r15
   1400129ef:	sub    rsp,0x70
   1400129f3:	mov    QWORD PTR [rax-0x70],0xfffffffffffffffe
   1400129fb:	mov    QWORD PTR [rax+0x18],rbx
   1400129ff:	mov    rax,QWORD PTR [rip+0x3861a]        # 0x14004b020
   140012a06:	xor    rax,rsp
   140012a09:	mov    QWORD PTR [rsp+0x60],rax
   140012a0e:	mov    r12,rdx
   140012a11:	mov    rdi,rcx
   140012a14:	mov    BYTE PTR [rcx+0xa0],r9b
   140012a1b:	xor    esi,esi
   140012a1d:	cmp    BYTE PTR [r8+0x3c],sil
   140012a21:	je     0x140012a30
   140012a23:	cmp    BYTE PTR [rsp+0xc0],sil
   140012a2b:	lea    eax,[rsi+0x1]
   140012a2e:	jne    0x140012a32
   140012a30:	mov    eax,esi
   140012a32:	mov    BYTE PTR [rcx+0x91],al
   140012a38:	mov    al,BYTE PTR [r8+0x3d]
   140012a3c:	mov    BYTE PTR [rcx+0x92],al
   140012a42:	mov    al,BYTE PTR [r8+0x3e]
   140012a46:	mov    BYTE PTR [rcx+0x93],al
   140012a4c:	mov    rax,QWORD PTR [rsp+0xc8]
   140012a54:	movaps xmm0,XMMWORD PTR [rax]
   140012a57:	movdqu XMMWORD PTR [rcx+0x80],xmm0
   140012a5f:	mov    r14d,esi
   140012a62:	mov    rbx,rsi
   140012a65:	cmp    rbx,0x4
   140012a69:	jae    0x140012aef
   140012a6f:	mov    rdx,rbx
   140012a72:	shl    rdx,0x4
   140012a76:	lea    rax,[rip+0x3d603]        # 0x140050080
   140012a7d:	add    rdx,rax
   140012a80:	lea    rcx,[rip+0x24e39]        # 0x1400378c0
   140012a87:	mov    rcx,QWORD PTR [rcx+rbx*8]
   140012a8b:	call   QWORD PTR [rip+0x1fbff]        # 0x140032690
   140012a91:	mov    r15d,eax
   140012a94:	test   eax,eax
   140012a96:	jns    0x140012ae7
   140012a98:	lea    rax,[rip+0x385d9]        # 0x14004b078
   140012a9f:	mov    rcx,QWORD PTR [rip+0x385d2]        # 0x14004b078
   140012aa6:	cmp    rcx,rax
   140012aa9:	je     0x140012ac9
   140012aab:	test   BYTE PTR [rcx+0x1c],0x1
   140012aaf:	je     0x140012ac9
   140012ab1:	mov    edx,0xa
   140012ab6:	mov    r9d,r15d
   140012ab9:	lea    r8,[rip+0x24e20]        # 0x1400378e0
   140012ac0:	mov    rcx,QWORD PTR [rcx+0x10]
   140012ac4:	call   0x140001f70
   140012ac9:	mov    edx,r15d
   140012acc:	lea    rcx,[rsp+0x38]
   140012ad1:	call   0x140002064
   140012ad6:	lea    rdx,[rip+0x366ab]        # 0x140049188
   140012add:	lea    rcx,[rsp+0x38]
   140012ae2:	call   0x14002e2da
   140012ae7:	inc    rbx
   140012aea:	jmp    0x140012a65
   140012aef:	mov    rcx,rdi
   140012af2:	call   0x140012c58
   140012af7:	mov    rcx,rdi
   140012afa:	call   0x140012ee8
   140012aff:	mov    QWORD PTR [rsp+0x20],rsi
   140012b04:	mov    rax,QWORD PTR [r12]
   140012b08:	mov    rbx,QWORD PTR [rax+0x18]
   140012b0c:	mov    rcx,rbx
   140012b0f:	call   QWORD PTR [rip+0x1fb93]        # 0x1400326a8
   140012b15:	lea    rdx,[rsp+0x20]
   140012b1a:	mov    rcx,r12
   140012b1d:	call   rbx
   140012b1f:	test   eax,eax
   140012b21:	jns    0x140012b2a
   140012b23:	mov    ecx,eax
   140012b25:	call   0x140029d64
   140012b2a:	mov    rdx,QWORD PTR [rsp+0x20]
   140012b2f:	mov    rcx,rdi
   140012b32:	call   0x1400130e4
   140012b37:	nop
   140012b38:	mov    rbx,QWORD PTR [rsp+0x20]
   140012b3d:	test   rbx,rbx
   140012b40:	je     0x140012b58
   140012b42:	mov    rax,QWORD PTR [rbx]
   140012b45:	mov    rdi,QWORD PTR [rax+0x10]
   140012b49:	mov    rcx,rdi
   140012b4c:	call   QWORD PTR [rip+0x1fb56]        # 0x1400326a8
   140012b52:	mov    rcx,rbx
   140012b55:	call   rdi
   140012b57:	nop
   140012b58:	jmp    0x140012b61
   140012b5a:	xor    esi,esi
   140012b5c:	mov    r14d,DWORD PTR [rsp+0x20]
   140012b61:	test   r14d,r14d
   140012b64:	cmovs  esi,r14d
   140012b68:	mov    eax,esi
   140012b6a:	mov    rcx,QWORD PTR [rsp+0x60]
   140012b6f:	xor    rcx,rsp
   140012b72:	call   0x14002dd00
   140012b77:	mov    rbx,QWORD PTR [rsp+0xb0]
   140012b7f:	add    rsp,0x70
   140012b83:	pop    r15
   140012b85:	pop    r14
   140012b87:	pop    r12
   140012b89:	pop    rdi
   140012b8a:	pop    rsi
   140012b8b:	ret    
   140012b8c:	int3   
   140012b8d:	int3   
   140012b8e:	int3   
   140012b8f:	int3   
   140012b90:	int3   
   140012b91:	int3   
   140012b92:	int3   
   140012b93:	int3   
   140012b94:	mov    QWORD PTR [rsp+0x8],rbx
   140012b99:	push   rdi
   140012b9a:	sub    rsp,0x20
   140012b9e:	lea    rax,[rip+0x21d23]        # 0x1400348c8
   140012ba5:	mov    rbx,rcx
   140012ba8:	mov    QWORD PTR [rcx],rax
   140012bab:	mov    rcx,QWORD PTR [rcx+0x68]
   140012baf:	test   rcx,rcx
   140012bb2:	je     0x140012bc9
   140012bb4:	call   QWORD PTR [rip+0x1fa0e]        # 0x1400325c8
   140012bba:	and    QWORD PTR [rbx+0x68],0x0
   140012bbf:	and    QWORD PTR [rbx+0x70],0x0
   140012bc4:	and    QWORD PTR [rbx+0x78],0x0
   140012bc9:	lea    rcx,[rbx+0x60]
   140012bcd:	call   0x140014b88
   140012bd2:	mov    rcx,QWORD PTR [rbx+0x30]
   140012bd6:	test   rcx,rcx
   140012bd9:	je     0x140012bf0
   140012bdb:	call   QWORD PTR [rip+0x1f9e7]        # 0x1400325c8
   140012be1:	and    QWORD PTR [rbx+0x30],0x0
   140012be6:	and    QWORD PTR [rbx+0x38],0x0
   140012beb:	and    QWORD PTR [rbx+0x40],0x0
   140012bf0:	lea    rcx,[rbx+0x20]
   140012bf4:	call   0x140014ccc
   140012bf9:	lea    rax,[rip+0x21ca8]        # 0x1400348a8
   140012c00:	mov    QWORD PTR [rbx],rax
   140012c03:	mov    rbx,QWORD PTR [rsp+0x30]
   140012c08:	add    rsp,0x20
   140012c0c:	pop    rdi
   140012c0d:	ret    
   140012c0e:	int3   
   140012c0f:	int3   
   140012c10:	int3   
   140012c11:	int3   
   140012c12:	int3   
   140012c13:	int3   
   140012c14:	int3   
   140012c15:	int3   
   140012c16:	int3   
   140012c17:	int3   
   140012c18:	int3   
   140012c19:	int3   
   140012c1a:	int3   
   140012c1b:	int3   
   140012c1c:	int3   
   140012c1d:	int3   
   140012c1e:	int3   
   140012c1f:	int3   
   140012c20:	mov    QWORD PTR [rsp+0x8],rbx
   140012c25:	push   rdi
   140012c26:	sub    rsp,0x20
   140012c2a:	mov    ebx,edx
   140012c2c:	mov    rdi,rcx
   140012c2f:	call   0x140012b94
   140012c34:	test   bl,0x1
   140012c37:	je     0x140012c42
   140012c39:	mov    rcx,rdi
   140012c3c:	call   QWORD PTR [rip+0x1f986]        # 0x1400325c8
   140012c42:	mov    rax,rdi
   140012c45:	mov    rbx,QWORD PTR [rsp+0x30]
   140012c4a:	add    rsp,0x20
   140012c4e:	pop    rdi
   140012c4f:	ret    
   140012c50:	int3   
   140012c51:	int3   
   140012c52:	int3   
   140012c53:	int3   
   140012c54:	int3   
   140012c55:	int3   
   140012c56:	int3   
   140012c57:	int3   
   140012c58:	rex push rbp
   140012c5a:	push   rbx
   140012c5b:	push   rsi
   140012c5c:	push   rdi
   140012c5d:	push   r13
   140012c5f:	push   r14
   140012c61:	push   r15
   140012c63:	mov    rbp,rsp
   140012c66:	sub    rsp,0x40
   140012c6a:	mov    QWORD PTR [rbp-0x20],0xfffffffffffffffe
   140012c72:	mov    r15,rcx
   140012c75:	and    QWORD PTR [rbp-0x18],0x0
   140012c7a:	and    QWORD PTR [rbp-0x8],0x0
   140012c7f:	and    QWORD PTR [rbp-0x10],0x0
   140012c84:	lea    rdx,[rip+0x24ea5]        # 0x140037b30
   140012c8b:	lea    rcx,[rbp-0x18]
   140012c8f:	call   0x14001721c
   140012c94:	mov    ecx,0x20
   140012c99:	call   0x140023f10
   140012c9e:	and    DWORD PTR [rax],0x0
   140012ca1:	and    QWORD PTR [rax+0x8],0x0
   140012ca6:	and    QWORD PTR [rax+0x10],0x0
   140012cab:	and    QWORD PTR [rax+0x18],0x0
   140012cb0:	lock inc DWORD PTR [rax]
   140012cb3:	mov    rcx,QWORD PTR [r15+0x60]
   140012cb7:	mov    QWORD PTR [r15+0x60],rax
   140012cbb:	mov    QWORD PTR [rbp+0x50],rcx
   140012cbf:	lea    rcx,[rbp+0x50]
   140012cc3:	call   0x140014b88
   140012cc8:	mov    rbx,QWORD PTR [rbp-0x18]
   140012ccc:	mov    rsi,QWORD PTR [rbp-0x10]
   140012cd0:	cmp    rbx,rsi
   140012cd3:	je     0x140012eab
   140012cd9:	movabs r13,0x1fffffffffffffff
   140012ce3:	mov    ecx,0x14
   140012ce8:	call   0x140023f10
   140012ced:	mov    rsi,rax
   140012cf0:	and    DWORD PTR [rax],0x0
   140012cf3:	lock inc DWORD PTR [rax]
   140012cf6:	mov    QWORD PTR [rbp+0x48],rax
   140012cfa:	lea    rdx,[rax+0x4]
   140012cfe:	mov    rcx,QWORD PTR [rbx]
   140012d01:	call   QWORD PTR [rip+0x1f989]        # 0x140032690
   140012d07:	test   eax,eax
   140012d09:	jns    0x140012d49
   140012d0b:	lea    rdx,[rip+0x38366]        # 0x14004b078
   140012d12:	mov    rcx,QWORD PTR [rip+0x3835f]        # 0x14004b078
   140012d19:	cmp    rcx,rdx
   140012d1c:	je     0x140012e74
   140012d22:	test   BYTE PTR [rcx+0x1c],0x2
   140012d26:	je     0x140012e74
   140012d2c:	mov    edx,0xb
   140012d31:	mov    r9d,eax
   140012d34:	lea    r8,[rip+0x24ba5]        # 0x1400378e0
   140012d3b:	mov    rcx,QWORD PTR [rcx+0x10]
   140012d3f:	call   0x140001f70
   140012d44:	jmp    0x140012e74
   140012d49:	mov    rdi,QWORD PTR [r15+0x60]
   140012d4d:	mov    rcx,QWORD PTR [rdi+0x10]
   140012d51:	lea    rax,[rbp+0x48]
   140012d55:	cmp    rax,rcx
   140012d58:	jae    0x140012dff
   140012d5e:	lea    rax,[rbp+0x48]
   140012d62:	cmp    QWORD PTR [rdi+0x8],rax
   140012d66:	ja     0x140012dff
   140012d6c:	lea    r14,[rbp+0x48]
   140012d70:	sub    r14,QWORD PTR [rdi+0x8]
   140012d74:	sar    r14,0x3
   140012d78:	mov    rdx,QWORD PTR [rdi+0x18]
   140012d7c:	cmp    rcx,rdx
   140012d7f:	jne    0x140012ddd
   140012d81:	mov    rax,rdx
   140012d84:	sub    rax,rcx
   140012d87:	sar    rax,0x3
   140012d8b:	cmp    rax,0x1
   140012d8f:	jae    0x140012ddd
   140012d91:	sub    rcx,QWORD PTR [rdi+0x8]
   140012d95:	sar    rcx,0x3
   140012d99:	mov    rax,r13
   140012d9c:	sub    rax,rcx
   140012d9f:	cmp    rax,0x1
   140012da3:	jb     0x140012e9b
   140012da9:	lea    r8,[rcx+0x1]
   140012dad:	sub    rdx,QWORD PTR [rdi+0x8]
   140012db1:	sar    rdx,0x3
   140012db5:	mov    rcx,rdx
   140012db8:	shr    rcx,1
   140012dbb:	mov    rax,r13
   140012dbe:	sub    rax,rcx
   140012dc1:	cmp    rax,rdx
   140012dc4:	jae    0x140012dca
   140012dc6:	xor    edx,edx
   140012dc8:	jmp    0x140012dcd
   140012dca:	add    rdx,rcx
   140012dcd:	cmp    rdx,r8
   140012dd0:	cmovb  rdx,r8
   140012dd4:	lea    rcx,[rdi+0x8]
   140012dd8:	call   0x140014d68
   140012ddd:	mov    rax,QWORD PTR [rdi+0x8]
   140012de1:	mov    rcx,QWORD PTR [rdi+0x10]
   140012de5:	test   rcx,rcx
   140012de8:	je     0x140012e6f
   140012dee:	mov    rax,QWORD PTR [rax+r14*8]
   140012df2:	test   rax,rax
   140012df5:	je     0x140012dfa
   140012df7:	lock inc DWORD PTR [rax]
   140012dfa:	mov    QWORD PTR [rcx],rax
   140012dfd:	jmp    0x140012e6f
   140012dff:	mov    rdx,QWORD PTR [rdi+0x18]
   140012e03:	cmp    rcx,rdx
   140012e06:	jne    0x140012e60
   140012e08:	mov    rax,rdx
   140012e0b:	sub    rax,rcx
   140012e0e:	sar    rax,0x3
   140012e12:	cmp    rax,0x1
   140012e16:	jae    0x140012e60
   140012e18:	sub    rcx,QWORD PTR [rdi+0x8]
   140012e1c:	sar    rcx,0x3
   140012e20:	mov    rax,r13
   140012e23:	sub    rax,rcx
   140012e26:	cmp    rax,0x1
   140012e2a:	jb     0x140012ea1
   140012e2c:	lea    r8,[rcx+0x1]
   140012e30:	sub    rdx,QWORD PTR [rdi+0x8]
   140012e34:	sar    rdx,0x3
   140012e38:	mov    rcx,rdx
   140012e3b:	shr    rcx,1
   140012e3e:	mov    rax,r13
   140012e41:	sub    rax,rcx
   140012e44:	cmp    rax,rdx
   140012e47:	jae    0x140012e4d
   140012e49:	xor    edx,edx
   140012e4b:	jmp    0x140012e50
   140012e4d:	add    rdx,rcx
   140012e50:	cmp    rdx,r8
   140012e53:	cmovb  rdx,r8
   140012e57:	lea    rcx,[rdi+0x8]
   140012e5b:	call   0x140014d68
   140012e60:	mov    rax,QWORD PTR [rdi+0x10]
   140012e64:	test   rax,rax
   140012e67:	je     0x140012e6f
   140012e69:	lock inc DWORD PTR [rsi]
   140012e6c:	mov    QWORD PTR [rax],rsi
   140012e6f:	add    QWORD PTR [rdi+0x10],0x8
   140012e74:	or     eax,0xffffffff
   140012e77:	lock xadd DWORD PTR [rsi],eax
   140012e7b:	cmp    eax,0x1
   140012e7e:	jne    0x140012e89
   140012e80:	mov    rcx,rsi
   140012e83:	call   QWORD PTR [rip+0x1f73f]        # 0x1400325c8
   140012e89:	add    rbx,0x8
   140012e8d:	mov    rsi,QWORD PTR [rbp-0x10]
   140012e91:	cmp    rbx,rsi
   140012e94:	je     0x140012ea7
   140012e96:	jmp    0x140012ce3
   140012e9b:	call   0x14000d388
   140012ea0:	int3   
   140012ea1:	call   0x14000d388
   140012ea6:	nop
   140012ea7:	mov    rbx,QWORD PTR [rbp-0x18]
   140012eab:	test   rbx,rbx
   140012eae:	je     0x140012ed3
   140012eb0:	mov    rdi,rbx
   140012eb3:	cmp    rbx,rsi
   140012eb6:	je     0x140012eca
   140012eb8:	mov    rcx,QWORD PTR [rdi]
   140012ebb:	call   QWORD PTR [rip+0x1f48f]        # 0x140032350
   140012ec1:	add    rdi,0x8
   140012ec5:	cmp    rdi,rsi
   140012ec8:	jne    0x140012eb8
   140012eca:	mov    rcx,rbx
   140012ecd:	call   QWORD PTR [rip+0x1f6f5]        # 0x1400325c8
   140012ed3:	add    rsp,0x40
   140012ed7:	pop    r15
   140012ed9:	pop    r14
   140012edb:	pop    r13
   140012edd:	pop    rdi
   140012ede:	pop    rsi
   140012edf:	pop    rbx
   140012ee0:	pop    rbp
   140012ee1:	ret    
   140012ee2:	int3   
   140012ee3:	int3   
   140012ee4:	int3   
   140012ee5:	int3   
   140012ee6:	int3   
   140012ee7:	int3   
   140012ee8:	mov    rax,rsp
   140012eeb:	push   rdi
   140012eec:	push   r12
   140012eee:	push   r14
   140012ef0:	sub    rsp,0x40
   140012ef4:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   140012efc:	mov    QWORD PTR [rax+0x10],rbx
   140012f00:	mov    QWORD PTR [rax+0x18],rbp
   140012f04:	mov    rdi,rcx
   140012f07:	and    QWORD PTR [rax-0x30],0x0
   140012f0c:	and    QWORD PTR [rax-0x20],0x0
   140012f11:	and    QWORD PTR [rax-0x28],0x0
   140012f16:	lea    rdx,[rip+0x24cb3]        # 0x140037bd0
   140012f1d:	lea    rcx,[rax-0x30]
   140012f21:	call   0x14001721c
   140012f26:	mov    rax,QWORD PTR [rdi+0x68]
   140012f2a:	mov    QWORD PTR [rdi+0x70],rax
   140012f2e:	mov    rbx,QWORD PTR [rsp+0x28]
   140012f33:	mov    r14,QWORD PTR [rsp+0x30]
   140012f38:	cmp    rbx,r14
   140012f3b:	je     0x14001309a
   140012f41:	movabs r12,0x3fffffffffffffff
   140012f4b:	xor    edx,edx
   140012f4d:	lea    r8d,[rdx+0xa]
   140012f51:	mov    rcx,QWORD PTR [rbx]
   140012f54:	call   QWORD PTR [rip+0x1f656]        # 0x1400325b0
   140012f5a:	mov    ebp,eax
   140012f5c:	mov    DWORD PTR [rsp+0x60],eax
   140012f60:	test   eax,eax
   140012f62:	je     0x140013080
   140012f68:	mov    rcx,QWORD PTR [rdi+0x70]
   140012f6c:	lea    rax,[rsp+0x60]
   140012f71:	cmp    rax,rcx
   140012f74:	jae    0x14001300f
   140012f7a:	lea    rax,[rsp+0x60]
   140012f7f:	cmp    QWORD PTR [rdi+0x68],rax
   140012f83:	ja     0x14001300f
   140012f89:	lea    rbp,[rsp+0x60]
   140012f8e:	sub    rbp,QWORD PTR [rdi+0x68]
   140012f92:	sar    rbp,0x2
   140012f96:	mov    rdx,QWORD PTR [rdi+0x78]
   140012f9a:	cmp    rcx,rdx
   140012f9d:	jne    0x140012ffb
   140012f9f:	mov    rax,rdx
   140012fa2:	sub    rax,rcx
   140012fa5:	sar    rax,0x2
   140012fa9:	cmp    rax,0x1
   140012fad:	jae    0x140012ffb
   140012faf:	sub    rcx,QWORD PTR [rdi+0x68]
   140012fb3:	sar    rcx,0x2
   140012fb7:	mov    rax,r12
   140012fba:	sub    rax,rcx
   140012fbd:	cmp    rax,0x1
   140012fc1:	jb     0x14001308e
   140012fc7:	lea    r8,[rcx+0x1]
   140012fcb:	sub    rdx,QWORD PTR [rdi+0x68]
   140012fcf:	sar    rdx,0x2
   140012fd3:	mov    rcx,rdx
   140012fd6:	shr    rcx,1
   140012fd9:	mov    rax,r12
   140012fdc:	sub    rax,rcx
   140012fdf:	cmp    rax,rdx
   140012fe2:	jae    0x140012fe8
   140012fe4:	xor    edx,edx
   140012fe6:	jmp    0x140012feb
   140012fe8:	add    rdx,rcx
   140012feb:	cmp    rdx,r8
   140012fee:	cmovb  rdx,r8
   140012ff2:	lea    rcx,[rdi+0x68]
   140012ff6:	call   0x140014e50
   140012ffb:	mov    rax,QWORD PTR [rdi+0x68]
   140012fff:	mov    rcx,QWORD PTR [rdi+0x70]
   140013003:	test   rcx,rcx
   140013006:	je     0x14001307b
   140013008:	mov    eax,DWORD PTR [rax+rbp*4]
   14001300b:	mov    DWORD PTR [rcx],eax
   14001300d:	jmp    0x14001307b
   14001300f:	mov    rdx,QWORD PTR [rdi+0x78]
   140013013:	cmp    rcx,rdx
   140013016:	jne    0x140013070
   140013018:	mov    rax,rdx
   14001301b:	sub    rax,rcx
   14001301e:	sar    rax,0x2
   140013022:	cmp    rax,0x1
   140013026:	jae    0x140013070
   140013028:	sub    rcx,QWORD PTR [rdi+0x68]
   14001302c:	sar    rcx,0x2
   140013030:	mov    rax,r12
   140013033:	sub    rax,rcx
   140013036:	cmp    rax,0x1
   14001303a:	jb     0x140013094
   14001303c:	lea    r8,[rcx+0x1]
   140013040:	sub    rdx,QWORD PTR [rdi+0x68]
   140013044:	sar    rdx,0x2
   140013048:	mov    rcx,rdx
   14001304b:	shr    rcx,1
   14001304e:	mov    rax,r12
   140013051:	sub    rax,rcx
   140013054:	cmp    rax,rdx
   140013057:	jae    0x14001305d
   140013059:	xor    edx,edx
   14001305b:	jmp    0x140013060
   14001305d:	add    rdx,rcx
   140013060:	cmp    rdx,r8
   140013063:	cmovb  rdx,r8
   140013067:	lea    rcx,[rdi+0x68]
   14001306b:	call   0x140014e50
   140013070:	mov    rax,QWORD PTR [rdi+0x70]
   140013074:	test   rax,rax
   140013077:	je     0x14001307b
   140013079:	mov    DWORD PTR [rax],ebp
   14001307b:	add    QWORD PTR [rdi+0x70],0x4
   140013080:	add    rbx,0x8
   140013084:	cmp    rbx,r14
   140013087:	je     0x14001309a
   140013089:	jmp    0x140012f4b
   14001308e:	call   0x14000d388
   140013093:	int3   
   140013094:	call   0x14000d388
   140013099:	nop
   14001309a:	cmp    QWORD PTR [rsp+0x28],0x0
   1400130a0:	je     0x1400130c9
   1400130a2:	mov    rbx,QWORD PTR [rsp+0x28]
   1400130a7:	cmp    rbx,r14
   1400130aa:	je     0x1400130be
   1400130ac:	mov    rcx,QWORD PTR [rbx]
   1400130af:	call   QWORD PTR [rip+0x1f29b]        # 0x140032350
   1400130b5:	add    rbx,0x8
   1400130b9:	cmp    rbx,r14
   1400130bc:	jne    0x1400130ac
   1400130be:	mov    rcx,QWORD PTR [rsp+0x28]
   1400130c3:	call   QWORD PTR [rip+0x1f4ff]        # 0x1400325c8
   1400130c9:	mov    rbx,QWORD PTR [rsp+0x68]
   1400130ce:	mov    rbp,QWORD PTR [rsp+0x70]
   1400130d3:	add    rsp,0x40
   1400130d7:	pop    r14
   1400130d9:	pop    r12
   1400130db:	pop    rdi
   1400130dc:	ret    
   1400130dd:	int3   
   1400130de:	int3   
   1400130df:	int3   
   1400130e0:	int3   
   1400130e1:	int3   
   1400130e2:	int3   
   1400130e3:	int3   
   1400130e4:	mov    rax,rsp
   1400130e7:	push   rbp
   1400130e8:	push   rsi
   1400130e9:	push   rdi
   1400130ea:	push   r12
   1400130ec:	push   r13
   1400130ee:	push   r14
   1400130f0:	push   r15
   1400130f2:	lea    rbp,[rax-0x5f]
   1400130f6:	sub    rsp,0xe0
   1400130fd:	mov    QWORD PTR [rbp-0x11],0xfffffffffffffffe
   140013105:	mov    QWORD PTR [rax+0x18],rbx
   140013109:	mov    rax,QWORD PTR [rip+0x37f10]        # 0x14004b020
   140013110:	xor    rax,rsp
   140013113:	mov    QWORD PTR [rbp+0x17],rax
   140013117:	mov    rdi,rdx
   14001311a:	mov    QWORD PTR [rbp-0x41],rdx
   14001311e:	mov    rsi,rcx
   140013121:	xor    r13d,r13d
   140013124:	mov    DWORD PTR [rbp-0x79],r13d
   140013128:	mov    r14b,r13b
   14001312b:	lea    rcx,[rip+0x241ce]        # 0x140037300
   140013132:	call   QWORD PTR [rip+0x1f200]        # 0x140032338
   140013138:	mov    rax,QWORD PTR [rdi]
   14001313b:	mov    rbx,QWORD PTR [rax+0x18]
   14001313f:	mov    rcx,rbx
   140013142:	call   QWORD PTR [rip+0x1f560]        # 0x1400326a8
   140013148:	lea    rdx,[rbp-0x79]
   14001314c:	mov    rcx,rdi
   14001314f:	call   rbx
   140013151:	test   eax,eax
   140013153:	jns    0x14001315d
   140013155:	mov    ecx,eax
   140013157:	call   0x140029d64
   14001315c:	int3   
   14001315d:	mov    r15d,r13d
   140013160:	mov    eax,DWORD PTR [rbp-0x79]
   140013163:	mov    ecx,0x1
   140013168:	mov    r12d,r13d
   14001316b:	test   eax,eax
   14001316d:	je     0x1400134ab
   140013173:	mov    QWORD PTR [rbp-0x71],r13
   140013177:	mov    rax,QWORD PTR [rdi]
   14001317a:	mov    rbx,QWORD PTR [rax+0x20]
   14001317e:	mov    rcx,rbx
   140013181:	call   QWORD PTR [rip+0x1f521]        # 0x1400326a8
   140013187:	lea    r8,[rbp-0x71]
   14001318b:	mov    edx,r12d
   14001318e:	mov    rcx,rdi
   140013191:	call   rbx
   140013193:	test   eax,eax
   140013195:	js     0x14001351d
   14001319b:	mov    QWORD PTR [rbp-0x61],r13
   14001319f:	mov    rbx,QWORD PTR [rbp-0x71]
   1400131a3:	mov    rax,QWORD PTR [rbx]
   1400131a6:	mov    rdi,QWORD PTR [rax]
   1400131a9:	mov    rcx,rdi
   1400131ac:	call   QWORD PTR [rip+0x1f4f6]        # 0x1400326a8
   1400131b2:	lea    r8,[rbp-0x61]
   1400131b6:	lea    rdx,[rip+0x246f3]        # 0x1400378b0
   1400131bd:	mov    rcx,rbx
   1400131c0:	call   rdi
   1400131c2:	test   eax,eax
   1400131c4:	js     0x140013515
   1400131ca:	mov    rbx,QWORD PTR [rbp-0x71]
   1400131ce:	mov    rax,QWORD PTR [rbx]
   1400131d1:	mov    rdi,QWORD PTR [rax+0x18]
   1400131d5:	mov    rcx,rdi
   1400131d8:	call   QWORD PTR [rip+0x1f4ca]        # 0x1400326a8
   1400131de:	lea    rdx,[rbp+0x7]
   1400131e2:	mov    rcx,rbx
   1400131e5:	call   rdi
   1400131e7:	test   eax,eax
   1400131e9:	js     0x14001350d
   1400131ef:	mov    QWORD PTR [rbp-0x59],r13
   1400131f3:	mov    rbx,QWORD PTR [rbp-0x71]
   1400131f7:	mov    rax,QWORD PTR [rbx]
   1400131fa:	mov    rdi,QWORD PTR [rax+0x20]
   1400131fe:	mov    rcx,rdi
   140013201:	call   QWORD PTR [rip+0x1f4a1]        # 0x1400326a8
   140013207:	lea    rdx,[rbp-0x59]
   14001320b:	mov    rcx,rbx
   14001320e:	call   rdi
   140013210:	test   eax,eax
   140013212:	js     0x140013505
   140013218:	mov    r8,QWORD PTR [rbp-0x61]
   14001321c:	mov    rdx,QWORD PTR [rbp-0x59]
   140013220:	lea    rcx,[rbp+0x7]
   140013224:	call   0x140013d58
   140013229:	movsxd rbx,eax
   14001322c:	cmp    ebx,r15d
   14001322f:	je     0x140013282
   140013231:	mov    rcx,QWORD PTR [rbp-0x59]
   140013235:	call   QWORD PTR [rip+0x1f115]        # 0x140032350
   14001323b:	nop
   14001323c:	mov    rbx,QWORD PTR [rbp-0x61]
   140013240:	test   rbx,rbx
   140013243:	je     0x14001325b
   140013245:	mov    rax,QWORD PTR [rbx]
   140013248:	mov    rdi,QWORD PTR [rax+0x10]
   14001324c:	mov    rcx,rdi
   14001324f:	call   QWORD PTR [rip+0x1f453]        # 0x1400326a8
   140013255:	mov    rcx,rbx
   140013258:	call   rdi
   14001325a:	nop
   14001325b:	mov    rbx,QWORD PTR [rbp-0x71]
   14001325f:	test   rbx,rbx
   140013262:	je     0x140013493
   140013268:	mov    rax,QWORD PTR [rbx]
   14001326b:	mov    rdi,QWORD PTR [rax+0x10]
   14001326f:	mov    rcx,rdi
   140013272:	call   QWORD PTR [rip+0x1f430]        # 0x1400326a8
   140013278:	mov    rcx,rbx
   14001327b:	call   rdi
   14001327d:	jmp    0x140013493
   140013282:	mov    QWORD PTR [rbp-0x69],r13
   140013286:	lea    rax,[rbp-0x69]
   14001328a:	mov    QWORD PTR [rsp+0x38],rax
   14001328f:	mov    BYTE PTR [rsp+0x30],r14b
   140013294:	mov    DWORD PTR [rsp+0x28],ebx
   140013298:	mov    rax,QWORD PTR [rbp-0x61]
   14001329c:	mov    QWORD PTR [rsp+0x20],rax
   1400132a1:	mov    r9,QWORD PTR [rbp-0x71]
   1400132a5:	lea    r8,[rbp-0x59]
   1400132a9:	lea    rdx,[rbp+0x7]
   1400132ad:	mov    rcx,rsi
   1400132b0:	call   0x1400135e8
   1400132b5:	mov    rdi,QWORD PTR [rbp-0x69]
   1400132b9:	test   rdi,rdi
   1400132bc:	jne    0x1400132c3
   1400132be:	jmp    0x140013231
   1400132c3:	cmp    ebx,0x3
   1400132c6:	ja     0x1400132d6
   1400132c8:	mov    r8d,0x1
   1400132ce:	add    QWORD PTR [rsi+rbx*8+0xb8],r8
   1400132d6:	movzx  r14d,r14b
   1400132da:	mov    eax,0x1
   1400132df:	cmp    ebx,eax
   1400132e1:	cmovbe r14d,eax
   1400132e5:	mov    DWORD PTR [rbp-0x4d],r14d
   1400132e9:	lea    r14,[rsi+0x20]
   1400132ed:	mov    rbx,QWORD PTR [r14]
   1400132f0:	lea    r13,[rdi+0xc]
   1400132f4:	mov    r8,r13
   1400132f7:	lea    rdx,[rbp-0x39]
   1400132fb:	mov    rcx,r14
   1400132fe:	call   0x140014aa4
   140013303:	cmp    QWORD PTR [rbp-0x39],rbx
   140013307:	jne    0x1400134c6
   14001330d:	mov    r8,r13
   140013310:	lea    rdx,[rbp-0x49]
   140013314:	mov    rcx,r14
   140013317:	call   0x140014aa4
   14001331c:	cmp    QWORD PTR [rbp-0x49],rbx
   140013320:	jne    0x1400133d3
   140013326:	movups xmm0,XMMWORD PTR [r13+0x0]
   14001332b:	movdqu XMMWORD PTR [rbp-0x31],xmm0
   140013330:	xor    r13d,r13d
   140013333:	mov    QWORD PTR [rbp-0x21],r13
   140013337:	mov    QWORD PTR [rbp-0x19],r13
   14001333b:	mov    rbx,QWORD PTR [rbx]
   14001333e:	lea    r9,[rbp-0x31]
   140013342:	mov    r8,QWORD PTR [rbx+0x8]
   140013346:	mov    rdx,rbx
   140013349:	call   0x1400152cc
   14001334e:	mov    rdx,QWORD PTR [r14+0x8]
   140013352:	movabs rcx,0x666666666666665
   14001335c:	sub    rcx,rdx
   14001335f:	lea    r8d,[r13+0x1]
   140013363:	cmp    rcx,r8
   140013366:	jb     0x1400134b9
   14001336c:	inc    rdx
   14001336f:	mov    QWORD PTR [r14+0x8],rdx
   140013373:	mov    QWORD PTR [rbx+0x8],rax
   140013377:	mov    rdx,QWORD PTR [rax+0x8]
   14001337b:	mov    QWORD PTR [rdx],rax
   14001337e:	mov    r9,QWORD PTR [r14]
   140013381:	mov    r9,QWORD PTR [r9]
   140013384:	lea    r8,[r9+0x10]
   140013388:	lea    rdx,[rbp-0x9]
   14001338c:	mov    rcx,r14
   14001338f:	call   0x140014f0c
   140013394:	mov    rcx,QWORD PTR [rax]
   140013397:	mov    QWORD PTR [rbp-0x49],rcx
   14001339b:	mov    rcx,QWORD PTR [rbp-0x21]
   14001339f:	test   rcx,rcx
   1400133a2:	je     0x1400133d1
   1400133a4:	or     eax,0xffffffff
   1400133a7:	lock xadd DWORD PTR [rcx+0x8],eax
   1400133ac:	cmp    eax,0x1
   1400133af:	jne    0x1400133cd
   1400133b1:	mov    rdi,QWORD PTR [rbp-0x21]
   1400133b5:	mov    rax,QWORD PTR [rdi]
   1400133b8:	mov    rbx,QWORD PTR [rax]
   1400133bb:	mov    rcx,rbx
   1400133be:	call   QWORD PTR [rip+0x1f2e4]        # 0x1400326a8
   1400133c4:	lea    edx,[r13+0x1]
   1400133c8:	mov    rcx,rdi
   1400133cb:	call   rbx
   1400133cd:	mov    rdi,QWORD PTR [rbp-0x69]
   1400133d1:	jmp    0x1400133d6
   1400133d3:	xor    r13d,r13d
   1400133d6:	mov    rcx,QWORD PTR [rbp-0x49]
   1400133da:	mov    eax,0x1
   1400133df:	lock add DWORD PTR [rdi+0x8],eax
   1400133e3:	mov    r14,QWORD PTR [rcx+0x20]
   1400133e7:	mov    rax,QWORD PTR [rbp-0x69]
   1400133eb:	mov    QWORD PTR [rcx+0x20],rax
   1400133ef:	test   r14,r14
   1400133f2:	je     0x14001341c
   1400133f4:	or     eax,0xffffffff
   1400133f7:	lock xadd DWORD PTR [r14+0x8],eax
   1400133fd:	cmp    eax,0x1
   140013400:	jne    0x14001341c
   140013402:	mov    rax,QWORD PTR [r14]
   140013405:	mov    rbx,QWORD PTR [rax]
   140013408:	mov    rcx,rbx
   14001340b:	call   QWORD PTR [rip+0x1f297]        # 0x1400326a8
   140013411:	mov    edx,0x1
   140013416:	mov    rcx,r14
   140013419:	call   rbx
   14001341b:	nop
   14001341c:	or     eax,0xffffffff
   14001341f:	lock xadd DWORD PTR [rdi+0x8],eax
   140013424:	cmp    eax,0x1
   140013427:	jne    0x140013447
   140013429:	mov    rbx,QWORD PTR [rbp-0x69]
   14001342d:	mov    rax,QWORD PTR [rbx]
   140013430:	mov    rdi,QWORD PTR [rax]
   140013433:	mov    rcx,rdi
   140013436:	call   QWORD PTR [rip+0x1f26c]        # 0x1400326a8
   14001343c:	mov    edx,0x1
   140013441:	mov    rcx,rbx
   140013444:	call   rdi
   140013446:	nop
   140013447:	mov    rcx,QWORD PTR [rbp-0x59]
   14001344b:	call   QWORD PTR [rip+0x1eeff]        # 0x140032350
   140013451:	nop
   140013452:	mov    rbx,QWORD PTR [rbp-0x61]
   140013456:	test   rbx,rbx
   140013459:	je     0x140013471
   14001345b:	mov    rax,QWORD PTR [rbx]
   14001345e:	mov    rdi,QWORD PTR [rax+0x10]
   140013462:	mov    rcx,rdi
   140013465:	call   QWORD PTR [rip+0x1f23d]        # 0x1400326a8
   14001346b:	mov    rcx,rbx
   14001346e:	call   rdi
   140013470:	nop
   140013471:	mov    rbx,QWORD PTR [rbp-0x71]
   140013475:	test   rbx,rbx
   140013478:	je     0x14001348f
   14001347a:	mov    rax,QWORD PTR [rbx]
   14001347d:	mov    rdi,QWORD PTR [rax+0x10]
   140013481:	mov    rcx,rdi
   140013484:	call   QWORD PTR [rip+0x1f21e]        # 0x1400326a8
   14001348a:	mov    rcx,rbx
   14001348d:	call   rdi
   14001348f:	mov    r14d,DWORD PTR [rbp-0x4d]
   140013493:	inc    r12d
   140013496:	mov    eax,DWORD PTR [rbp-0x79]
   140013499:	cmp    r12d,eax
   14001349c:	mov    rdi,QWORD PTR [rbp-0x41]
   1400134a0:	jb     0x140013173
   1400134a6:	mov    ecx,0x1
   1400134ab:	add    r15d,ecx
   1400134ae:	cmp    r15d,0x4
   1400134b2:	jg     0x140013525
   1400134b4:	jmp    0x140013168
   1400134b9:	lea    rcx,[rip+0x23cc0]        # 0x140037180
   1400134c0:	call   0x14002d7f8
   1400134c5:	nop
   1400134c6:	lea    rax,[rip+0x37bab]        # 0x14004b078
   1400134cd:	mov    rcx,QWORD PTR [rip+0x37ba4]        # 0x14004b078
   1400134d4:	cmp    rcx,rax
   1400134d7:	je     0x1400134fa
   1400134d9:	mov    eax,0x1
   1400134de:	test   BYTE PTR [rcx+0x1c],al
   1400134e1:	je     0x1400134fa
   1400134e3:	lea    r9,[rdi+0xc]
   1400134e7:	lea    edx,[rax+0xd]
   1400134ea:	lea    r8,[rip+0x243ef]        # 0x1400378e0
   1400134f1:	mov    rcx,QWORD PTR [rcx+0x10]
   1400134f5:	call   0x14000756c
   1400134fa:	mov    ecx,0x8000ffff
   1400134ff:	call   0x140029d64
   140013504:	nop
   140013505:	mov    ecx,eax
   140013507:	call   0x140029d64
   14001350c:	nop
   14001350d:	mov    ecx,eax
   14001350f:	call   0x140029d64
   140013514:	int3   
   140013515:	mov    ecx,eax
   140013517:	call   0x140029d64
   14001351c:	nop
   14001351d:	mov    ecx,eax
   14001351f:	call   0x140029d64
   140013524:	nop
   140013525:	lea    rcx,[rip+0x23e0c]        # 0x140037338
   14001352c:	call   QWORD PTR [rip+0x1ee06]        # 0x140032338
   140013532:	mov    r8,QWORD PTR [rsi+0x28]
   140013536:	mov    edx,DWORD PTR [rbp-0x79]
   140013539:	lea    rcx,[rip+0x23e30]        # 0x140037370
   140013540:	call   QWORD PTR [rip+0x1edea]        # 0x140032330
   140013546:	mov    rax,QWORD PTR [rsi+0xd0]
   14001354d:	mov    QWORD PTR [rsp+0x20],rax
   140013552:	mov    r9,QWORD PTR [rsi+0xb8]
   140013559:	mov    r8,QWORD PTR [rsi+0xc0]
   140013560:	mov    rdx,QWORD PTR [rsi+0xc8]
   140013567:	lea    rcx,[rip+0x23e52]        # 0x1400373c0
   14001356e:	call   QWORD PTR [rip+0x1edbc]        # 0x140032330
   140013574:	mov    edx,DWORD PTR [rsi+0xb8]
   14001357a:	mov    ecx,0xc5
   14001357f:	call   QWORD PTR [rip+0x1eeb3]        # 0x140032438
   140013585:	mov    edx,DWORD PTR [rsi+0xc0]
   14001358b:	mov    ecx,0xc6
   140013590:	call   QWORD PTR [rip+0x1eea2]        # 0x140032438
   140013596:	mov    edx,DWORD PTR [rsi+0xc8]
   14001359c:	mov    ecx,0xc7
   1400135a1:	call   QWORD PTR [rip+0x1ee91]        # 0x140032438
   1400135a7:	mov    edx,DWORD PTR [rsi+0xd0]
   1400135ad:	mov    ecx,0xc8
   1400135b2:	call   QWORD PTR [rip+0x1ee80]        # 0x140032438
   1400135b8:	mov    rcx,QWORD PTR [rbp+0x17]
   1400135bc:	xor    rcx,rsp
   1400135bf:	call   0x14002dd00
   1400135c4:	mov    rbx,QWORD PTR [rsp+0x130]
   1400135cc:	add    rsp,0xe0
   1400135d3:	pop    r15
   1400135d5:	pop    r14
   1400135d7:	pop    r13
   1400135d9:	pop    r12
   1400135db:	pop    rdi
   1400135dc:	pop    rsi
   1400135dd:	pop    rbp
   1400135de:	ret    
   1400135df:	int3   
   1400135e0:	int3   
   1400135e1:	int3   
   1400135e2:	int3   
   1400135e3:	int3   
   1400135e4:	int3   
   1400135e5:	int3   
   1400135e6:	int3   
   1400135e7:	int3   
   1400135e8:	rex push rbp
   1400135ea:	push   rbx
   1400135eb:	push   rsi
   1400135ec:	push   rdi
   1400135ed:	push   r12
   1400135ef:	push   r13
   1400135f1:	push   r14
   1400135f3:	push   r15
   1400135f5:	lea    rbp,[rsp-0x7]
   1400135fa:	sub    rsp,0x98
   140013601:	mov    QWORD PTR [rbp-0x19],0xfffffffffffffffe
   140013609:	mov    QWORD PTR [rbp-0x29],r9
   14001360d:	mov    r15,r8
   140013610:	mov    r12,rdx
   140013613:	mov    rdi,rcx
   140013616:	mov    rax,QWORD PTR [rbp+0x6f]
   14001361a:	mov    QWORD PTR [rbp-0x41],rax
   14001361e:	mov    rax,QWORD PTR [rbp+0x87]
   140013625:	mov    QWORD PTR [rbp-0x21],rax
   140013629:	mov    esi,0x1
   14001362e:	mov    DWORD PTR [rbp-0x4d],esi
   140013631:	xor    edx,edx
   140013633:	mov    r14d,edx
   140013636:	mov    QWORD PTR [rbp-0x31],rdx
   14001363a:	mov    QWORD PTR [rbp-0x11],rdx
   14001363e:	mov    QWORD PTR [rax],rdx
   140013641:	mov    DWORD PTR [rbp-0x49],esi
   140013644:	mov    r13d,DWORD PTR [rbp+0x77]
   140013648:	mov    ecx,r13d
   14001364b:	test   r13d,r13d
   14001364e:	je     0x14001368f
   140013650:	sub    ecx,esi
   140013652:	je     0x14001368a
   140013654:	sub    ecx,esi
   140013656:	je     0x140013661
   140013658:	cmp    ecx,esi
   14001365a:	je     0x14001368f
   14001365c:	mov    DWORD PTR [rbp-0x49],edx
   14001365f:	jmp    0x140013692
   140013661:	mov    rax,QWORD PTR [r9]
   140013664:	mov    rbx,QWORD PTR [rax+0xb0]
   14001366b:	mov    rcx,rbx
   14001366e:	call   QWORD PTR [rip+0x1f034]        # 0x1400326a8
   140013674:	lea    rdx,[rbp-0x4d]
   140013678:	mov    rcx,QWORD PTR [rbp-0x29]
   14001367c:	call   rbx
   14001367e:	test   eax,eax
   140013680:	jns    0x140013692
   140013682:	mov    ecx,eax
   140013684:	call   0x140029d64
   140013689:	int3   
   14001368a:	mov    DWORD PTR [rbp-0x4d],edx
   14001368d:	jmp    0x140013692
   14001368f:	mov    DWORD PTR [rbp-0x4d],esi
   140013692:	or     DWORD PTR [rbp-0x39],0xffffffff
   140013696:	call   QWORD PTR [rip+0x1edb4]        # 0x140032450
   14001369c:	mov    rbx,QWORD PTR [rax+0xa0]
   1400136a3:	mov    rcx,rbx
   1400136a6:	call   QWORD PTR [rip+0x1effc]        # 0x1400326a8
   1400136ac:	lea    r8,[rbp-0x39]
   1400136b0:	or     edx,0xffffffff
   1400136b3:	lea    rcx,[rip+0x23dde]        # 0x140037498
   1400136ba:	call   rbx
   1400136bc:	mov    r9d,DWORD PTR [rbp-0x39]
   1400136c0:	mov    DWORD PTR [rdi+0x9c],r9d
   1400136c7:	lea    rax,[rip+0x379aa]        # 0x14004b078
   1400136ce:	mov    rcx,QWORD PTR [rip+0x379a3]        # 0x14004b078
   1400136d5:	cmp    rcx,rax
   1400136d8:	je     0x1400136fc
   1400136da:	test   BYTE PTR [rcx+0x1c],0x4
   1400136de:	je     0x1400136fc
   1400136e0:	mov    edx,0xf
   1400136e5:	lea    r8,[rip+0x241f4]        # 0x1400378e0
   1400136ec:	mov    rcx,QWORD PTR [rcx+0x10]
   1400136f0:	call   0x140001f70
   1400136f5:	mov    rcx,QWORD PTR [rip+0x3797c]        # 0x14004b078
   1400136fc:	xor    ebx,ebx
   1400136fe:	mov    QWORD PTR [rbp-0x31],rbx
   140013702:	mov    BYTE PTR [rbp-0x51],sil
   140013706:	mov    eax,DWORD PTR [rdi+0x9c]
   14001370c:	and    eax,0x20
   14001370f:	test   al,al
   140013711:	je     0x140013753
   140013713:	lea    rax,[rbp-0x31]
   140013717:	mov    QWORD PTR [rsp+0x20],rax
   14001371c:	lea    r9,[rbp-0x51]
   140013720:	mov    r8,QWORD PTR [rbp-0x41]
   140013724:	mov    rdx,QWORD PTR [r15]
   140013727:	mov    rcx,r12
   14001372a:	call   0x1400140c4
   14001372f:	test   al,al
   140013731:	je     0x140013748
   140013733:	xor    esi,esi
   140013735:	cmp    BYTE PTR [rbp-0x51],bl
   140013738:	setne  sil
   14001373c:	mov    rbx,QWORD PTR [rbp-0x31]
   140013740:	mov    r14,rbx
   140013743:	jmp    0x140013a0f
   140013748:	mov    rbx,QWORD PTR [rbp-0x31]
   14001374c:	mov    rcx,QWORD PTR [rip+0x37925]        # 0x14004b078
   140013753:	cmp    DWORD PTR [rbp-0x49],0x0
   140013757:	jne    0x14001379b
   140013759:	test   BYTE PTR [rdi+0x9c],sil
   140013760:	je     0x14001379b
   140013762:	lea    rax,[rip+0x3790f]        # 0x14004b078
   140013769:	cmp    rcx,rax
   14001376c:	je     0x14001378d
   14001376e:	test   BYTE PTR [rcx+0x1c],0x4
   140013772:	je     0x14001378d
   140013774:	mov    edx,0x10
   140013779:	mov    rax,QWORD PTR [r15]
   14001377c:	mov    QWORD PTR [rsp+0x20],rax
   140013781:	mov    r9,r12
   140013784:	mov    rcx,QWORD PTR [rcx+0x10]
   140013788:	call   0x140012894
   14001378d:	lea    r14,[rip+0x23d3c]        # 0x1400374d0
   140013794:	xor    esi,esi
   140013796:	jmp    0x140013a13
   14001379b:	test   r13d,0xfffffffc
   1400137a2:	jne    0x1400137f3
   1400137a4:	cmp    r13d,0x2
   1400137a8:	je     0x1400137f9
   1400137aa:	cmp    BYTE PTR [rdi+0xa0],0x0
   1400137b1:	jne    0x1400137f3
   1400137b3:	test   DWORD PTR [rdi+0x9c],0x200
   1400137bd:	je     0x1400137f3
   1400137bf:	lea    rax,[rip+0x378b2]        # 0x14004b078
   1400137c6:	cmp    rcx,rax
   1400137c9:	je     0x1400137ea
   1400137cb:	test   BYTE PTR [rcx+0x1c],0x4
   1400137cf:	je     0x1400137ea
   1400137d1:	mov    edx,0x11
   1400137d6:	mov    rax,QWORD PTR [r15]
   1400137d9:	mov    QWORD PTR [rsp+0x20],rax
   1400137de:	mov    r9,r12
   1400137e1:	mov    rcx,QWORD PTR [rcx+0x10]
   1400137e5:	call   0x140012894
   1400137ea:	lea    r14,[rip+0x23d0f]        # 0x140037500
   1400137f1:	jmp    0x140013794
   1400137f3:	cmp    r13d,0x2
   1400137f7:	jne    0x140013842
   1400137f9:	cmp    BYTE PTR [rdi+0x91],0x0
   140013800:	jne    0x140013848
   140013802:	test   BYTE PTR [rdi+0x9c],0x80
   140013809:	je     0x140013848
   14001380b:	lea    rax,[rip+0x37866]        # 0x14004b078
   140013812:	cmp    rcx,rax
   140013815:	je     0x140013836
   140013817:	test   BYTE PTR [rcx+0x1c],0x4
   14001381b:	je     0x140013836
   14001381d:	mov    edx,0x12
   140013822:	mov    rax,QWORD PTR [r15]
   140013825:	mov    QWORD PTR [rsp+0x20],rax
   14001382a:	mov    r9,r12
   14001382d:	mov    rcx,QWORD PTR [rcx+0x10]
   140013831:	call   0x140012894
   140013836:	lea    r14,[rip+0x23d23]        # 0x140037560
   14001383d:	jmp    0x140013794
   140013842:	cmp    r13d,0x3
   140013846:	jne    0x14001389a
   140013848:	cmp    BYTE PTR [rbp+0x7f],0x0
   14001384c:	je     0x14001389a
   14001384e:	cmp    BYTE PTR [rdi+0x92],0x0
   140013855:	je     0x14001389a
   140013857:	test   DWORD PTR [rdi+0x9c],0x100
   140013861:	je     0x14001389a
   140013863:	lea    rax,[rip+0x3780e]        # 0x14004b078
   14001386a:	cmp    rcx,rax
   14001386d:	je     0x14001388e
   14001386f:	test   BYTE PTR [rcx+0x1c],0x4
   140013873:	je     0x14001388e
   140013875:	mov    edx,0x13
   14001387a:	mov    rax,QWORD PTR [r15]
   14001387d:	mov    QWORD PTR [rsp+0x20],rax
   140013882:	mov    r9,r12
   140013885:	mov    rcx,QWORD PTR [rcx+0x10]
   140013889:	call   0x140012894
   14001388e:	lea    r14,[rip+0x23d2b]        # 0x1400375c0
   140013895:	jmp    0x140013794
   14001389a:	test   r13d,r13d
   14001389d:	je     0x1400138a5
   14001389f:	cmp    r13d,0x3
   1400138a3:	jne    0x1400138f5
   1400138a5:	call   0x14001706c
   1400138aa:	test   eax,eax
   1400138ac:	jne    0x1400138f5
   1400138ae:	test   BYTE PTR [rdi+0x9c],0x2
   1400138b5:	je     0x1400138f5
   1400138b7:	mov    rcx,QWORD PTR [rip+0x377ba]        # 0x14004b078
   1400138be:	lea    rax,[rip+0x377b3]        # 0x14004b078
   1400138c5:	cmp    rcx,rax
   1400138c8:	je     0x1400138e9
   1400138ca:	test   BYTE PTR [rcx+0x1c],0x4
   1400138ce:	je     0x1400138e9
   1400138d0:	mov    edx,0x14
   1400138d5:	mov    rax,QWORD PTR [r15]
   1400138d8:	mov    QWORD PTR [rsp+0x20],rax
   1400138dd:	mov    r9,r12
   1400138e0:	mov    rcx,QWORD PTR [rcx+0x10]
   1400138e4:	call   0x140012894
   1400138e9:	lea    r14,[rip+0x23d40]        # 0x140037630
   1400138f0:	jmp    0x140013794
   1400138f5:	mov    r9,QWORD PTR [rbp-0x41]
   1400138f9:	mov    r8,QWORD PTR [r15]
   1400138fc:	mov    rdx,r12
   1400138ff:	mov    rcx,rdi
   140013902:	call   0x140014380
   140013907:	test   al,al
   140013909:	je     0x140013952
   14001390b:	test   BYTE PTR [rdi+0x9c],0x10
   140013912:	je     0x140013952
   140013914:	mov    rcx,QWORD PTR [rip+0x3775d]        # 0x14004b078
   14001391b:	lea    rax,[rip+0x37756]        # 0x14004b078
   140013922:	cmp    rcx,rax
   140013925:	je     0x140013946
   140013927:	test   BYTE PTR [rcx+0x1c],0x4
   14001392b:	je     0x140013946
   14001392d:	mov    edx,0x15
   140013932:	mov    rax,QWORD PTR [r15]
   140013935:	mov    QWORD PTR [rsp+0x20],rax
   14001393a:	mov    r9,r12
   14001393d:	mov    rcx,QWORD PTR [rcx+0x10]
   140013941:	call   0x140012894
   140013946:	lea    r14,[rip+0x23d4b]        # 0x140037698
   14001394d:	jmp    0x140013794
   140013952:	mov    rax,QWORD PTR [rdi+0x60]
   140013956:	mov    QWORD PTR [rsp+0x20],rax
   14001395b:	mov    r9,QWORD PTR [rbp-0x41]
   14001395f:	mov    r8,QWORD PTR [r15]
   140013962:	mov    rdx,r12
   140013965:	call   0x140013f7c
   14001396a:	test   al,al
   14001396c:	jne    0x1400139b5
   14001396e:	test   BYTE PTR [rdi+0x9c],0x4
   140013975:	je     0x1400139b5
   140013977:	mov    rcx,QWORD PTR [rip+0x376fa]        # 0x14004b078
   14001397e:	lea    rax,[rip+0x376f3]        # 0x14004b078
   140013985:	cmp    rcx,rax
   140013988:	je     0x1400139a9
   14001398a:	test   BYTE PTR [rcx+0x1c],0x4
   14001398e:	je     0x1400139a9
   140013990:	mov    edx,0x16
   140013995:	mov    rax,QWORD PTR [r15]
   140013998:	mov    QWORD PTR [rsp+0x20],rax
   14001399d:	mov    r9,r12
   1400139a0:	mov    rcx,QWORD PTR [rcx+0x10]
   1400139a4:	call   0x140012894
   1400139a9:	lea    r14,[rip+0x23d00]        # 0x1400376b0
   1400139b0:	jmp    0x140013794
   1400139b5:	mov    r9,QWORD PTR [rbp-0x41]
   1400139b9:	mov    r8,QWORD PTR [r15]
   1400139bc:	mov    rdx,r12
   1400139bf:	mov    rcx,rdi
   1400139c2:	call   0x140013ac0
   1400139c7:	test   al,al
   1400139c9:	jne    0x140013a42
   1400139cb:	test   BYTE PTR [rdi+0x9c],0x8
   1400139d2:	je     0x140013a42
   1400139d4:	mov    rcx,QWORD PTR [rip+0x3769d]        # 0x14004b078
   1400139db:	lea    rax,[rip+0x37696]        # 0x14004b078
   1400139e2:	cmp    rcx,rax
   1400139e5:	je     0x140013a06
   1400139e7:	test   BYTE PTR [rcx+0x1c],0x4
   1400139eb:	je     0x140013a06
   1400139ed:	mov    edx,0x17
   1400139f2:	mov    rax,QWORD PTR [r15]
   1400139f5:	mov    QWORD PTR [rsp+0x20],rax
   1400139fa:	mov    r9,r12
   1400139fd:	mov    rcx,QWORD PTR [rcx+0x10]
   140013a01:	call   0x140012894
   140013a06:	lea    r14,[rip+0x23ccb]        # 0x1400376d8
   140013a0d:	xor    esi,esi
   140013a0f:	test   esi,esi
   140013a11:	jne    0x140013a42
   140013a13:	and    DWORD PTR [rbp-0x49],0x0
   140013a17:	call   QWORD PTR [rip+0x1ea33]        # 0x140032450
   140013a1d:	mov    rdi,QWORD PTR [rax+0xa0]
   140013a24:	mov    rcx,rdi
   140013a27:	call   QWORD PTR [rip+0x1ec7b]        # 0x1400326a8
   140013a2d:	lea    r8,[rbp-0x49]
   140013a31:	xor    edx,edx
   140013a33:	lea    rcx,[rip+0x23cde]        # 0x140037718
   140013a3a:	call   rdi
   140013a3c:	cmp    DWORD PTR [rbp-0x49],0x0
   140013a40:	je     0x140013a94
   140013a42:	mov    r9,r14
   140013a45:	mov    r8,QWORD PTR [r15]
   140013a48:	mov    edx,esi
   140013a4a:	mov    rcx,r12
   140013a4d:	call   QWORD PTR [rip+0x1e8b5]        # 0x140032308
   140013a53:	test   esi,esi
   140013a55:	je     0x140013a94
   140013a57:	and    QWORD PTR [rbp-0x49],0x0
   140013a5c:	lea    rax,[rbp-0x49]
   140013a60:	mov    QWORD PTR [rsp+0x30],rax
   140013a65:	mov    rax,QWORD PTR [rbp-0x41]
   140013a69:	mov    QWORD PTR [rsp+0x28],rax
   140013a6e:	mov    rax,QWORD PTR [rbp-0x29]
   140013a72:	mov    QWORD PTR [rsp+0x20],rax
   140013a77:	mov    r9d,DWORD PTR [rbp-0x4d]
   140013a7b:	mov    r8d,r13d
   140013a7e:	mov    rdx,QWORD PTR [r15]
   140013a81:	mov    rcx,r12
   140013a84:	call   0x140014504
   140013a89:	mov    rax,QWORD PTR [rbp-0x49]
   140013a8d:	mov    rcx,QWORD PTR [rbp-0x21]
   140013a91:	mov    QWORD PTR [rcx],rax
   140013a94:	xor    ecx,ecx
   140013a96:	call   QWORD PTR [rip+0x1e8b4]        # 0x140032350
   140013a9c:	nop
   140013a9d:	mov    rcx,rbx
   140013aa0:	call   QWORD PTR [rip+0x1e8aa]        # 0x140032350
   140013aa6:	add    rsp,0x98
   140013aad:	pop    r15
   140013aaf:	pop    r14
   140013ab1:	pop    r13
   140013ab3:	pop    r12
   140013ab5:	pop    rdi
   140013ab6:	pop    rsi
   140013ab7:	pop    rbx
   140013ab8:	pop    rbp
   140013ab9:	ret    
   140013aba:	int3   
   140013abb:	int3   
   140013abc:	int3   
   140013abd:	int3   
   140013abe:	int3   
   140013abf:	int3   
   140013ac0:	rex push rbp
   140013ac2:	push   rbx
   140013ac3:	push   rsi
   140013ac4:	push   rdi
   140013ac5:	push   r12
   140013ac7:	push   r14
   140013ac9:	push   r15
   140013acb:	lea    rbp,[rsp-0x27]
   140013ad0:	sub    rsp,0x90
   140013ad7:	mov    rax,QWORD PTR [rip+0x37542]        # 0x14004b020
   140013ade:	xor    rax,rsp
   140013ae1:	mov    QWORD PTR [rbp+0x17],rax
   140013ae5:	mov    rsi,rdx
   140013ae8:	mov    rdi,rcx
   140013aeb:	lea    rdx,[rbp+0x7]
   140013aef:	mov    r15,r9
   140013af2:	lea    rcx,[rip+0x23c57]        # 0x140037750
   140013af9:	mov    r14,r8
   140013afc:	call   QWORD PTR [rip+0x1eb8e]        # 0x140032690
   140013b02:	xor    r12d,r12d
   140013b05:	mov    ebx,eax
   140013b07:	test   eax,eax
   140013b09:	jns    0x140013b31
   140013b0b:	mov    rcx,QWORD PTR [rip+0x37566]        # 0x14004b078
   140013b12:	lea    rdx,[rip+0x3755f]        # 0x14004b078
   140013b19:	cmp    rcx,rdx
   140013b1c:	je     0x140013ccc
   140013b22:	test   BYTE PTR [rcx+0x1c],0x1
   140013b26:	je     0x140013ccc
   140013b2c:	jmp    0x140013cb4
   140013b31:	mov    rax,QWORD PTR [r15]
   140013b34:	mov    WORD PTR [rbp-0x39],r12w
   140013b39:	mov    rbx,QWORD PTR [rax+0x20]
   140013b3d:	mov    rcx,rbx
   140013b40:	call   QWORD PTR [rip+0x1eb62]        # 0x1400326a8
   140013b46:	lea    r8,[rbp-0x39]
   140013b4a:	mov    rcx,r15
   140013b4d:	lea    rdx,[rbp+0x7]
   140013b51:	call   rbx
   140013b53:	mov    ebx,eax
   140013b55:	test   eax,eax
   140013b57:	jns    0x140013b7f
   140013b59:	mov    rcx,QWORD PTR [rip+0x37518]        # 0x14004b078
   140013b60:	lea    rdx,[rip+0x37511]        # 0x14004b078
   140013b67:	cmp    rcx,rdx
   140013b6a:	je     0x140013d00
   140013b70:	test   BYTE PTR [rcx+0x1c],0x1
   140013b74:	je     0x140013d00
   140013b7a:	jmp    0x140013ce8
   140013b7f:	cmp    WORD PTR [rbp-0x39],r12w
   140013b84:	jne    0x140013bbc
   140013b86:	mov    rcx,QWORD PTR [rip+0x374eb]        # 0x14004b078
   140013b8d:	lea    rdx,[rip+0x374e4]        # 0x14004b078
   140013b94:	cmp    rcx,rdx
   140013b97:	je     0x140013bb5
   140013b99:	test   BYTE PTR [rcx+0x1c],0x4
   140013b9d:	je     0x140013bb5
   140013b9f:	mov    edx,0x1a
   140013ba4:	mov    rcx,QWORD PTR [rcx+0x10]
   140013ba8:	mov    r9,rsi
   140013bab:	mov    QWORD PTR [rsp+0x20],r14
   140013bb0:	call   0x140012894
   140013bb5:	mov    al,0x1
   140013bb7:	jmp    0x140013c96
   140013bbc:	xor    eax,eax
   140013bbe:	mov    DWORD PTR [rbp-0x31],r12d
   140013bc2:	mov    QWORD PTR [rbp-0x2d],rax
   140013bc6:	mov    DWORD PTR [rbp-0x25],eax
   140013bc9:	mov    rax,QWORD PTR [rdi+0x80]
   140013bd0:	cmp    rax,QWORD PTR [rbp-0x31]
   140013bd4:	jne    0x140013be7
   140013bd6:	mov    rax,QWORD PTR [rdi+0x88]
   140013bdd:	cmp    rax,QWORD PTR [rbp-0x29]
   140013be1:	je     0x140013c94
   140013be7:	mov    rax,QWORD PTR [r15]
   140013bea:	mov    rbx,QWORD PTR [rax+0x20]
   140013bee:	mov    rcx,rbx
   140013bf1:	call   QWORD PTR [rip+0x1eab1]        # 0x1400326a8
   140013bf7:	lea    r8,[rbp-0x39]
   140013bfb:	mov    rcx,r15
   140013bfe:	lea    rdx,[rdi+0x80]
   140013c05:	call   rbx
   140013c07:	mov    ebx,eax
   140013c09:	test   eax,eax
   140013c0b:	jns    0x140013c33
   140013c0d:	mov    rcx,QWORD PTR [rip+0x37464]        # 0x14004b078
   140013c14:	lea    rdx,[rip+0x3745d]        # 0x14004b078
   140013c1b:	cmp    rcx,rdx
   140013c1e:	je     0x140013d34
   140013c24:	test   BYTE PTR [rcx+0x1c],0x1
   140013c28:	je     0x140013d34
   140013c2e:	jmp    0x140013d1c
   140013c33:	cmp    WORD PTR [rbp-0x39],r12w
   140013c38:	je     0x140013c65
   140013c3a:	mov    rcx,QWORD PTR [rip+0x37437]        # 0x14004b078
   140013c41:	lea    rdx,[rip+0x37430]        # 0x14004b078
   140013c48:	cmp    rcx,rdx
   140013c4b:	je     0x140013bb5
   140013c51:	test   BYTE PTR [rcx+0x1c],0x4
   140013c55:	je     0x140013bb5
   140013c5b:	mov    edx,0x1c
   140013c60:	jmp    0x140013ba4
   140013c65:	mov    rcx,QWORD PTR [rip+0x3740c]        # 0x14004b078
   140013c6c:	lea    rdx,[rip+0x37405]        # 0x14004b078
   140013c73:	cmp    rcx,rdx
   140013c76:	je     0x140013c94
   140013c78:	test   BYTE PTR [rcx+0x1c],0x4
   140013c7c:	je     0x140013c94
   140013c7e:	mov    rcx,QWORD PTR [rcx+0x10]
   140013c82:	mov    edx,0x1d
   140013c87:	mov    r9,rsi
   140013c8a:	mov    QWORD PTR [rsp+0x20],r14
   140013c8f:	call   0x140012894
   140013c94:	xor    al,al
   140013c96:	mov    rcx,QWORD PTR [rbp+0x17]
   140013c9a:	xor    rcx,rsp
   140013c9d:	call   0x14002dd00
   140013ca2:	add    rsp,0x90
   140013ca9:	pop    r15
   140013cab:	pop    r14
   140013cad:	pop    r12
   140013caf:	pop    rdi
   140013cb0:	pop    rsi
   140013cb1:	pop    rbx
   140013cb2:	pop    rbp
   140013cb3:	ret    
   140013cb4:	mov    rcx,QWORD PTR [rcx+0x10]
   140013cb8:	lea    r8,[rip+0x23c21]        # 0x1400378e0
   140013cbf:	mov    edx,0x18
   140013cc4:	mov    r9d,eax
   140013cc7:	call   0x140001f70
   140013ccc:	mov    edx,ebx
   140013cce:	lea    rcx,[rbp-0x21]
   140013cd2:	call   0x140002064
   140013cd7:	lea    rdx,[rip+0x354aa]        # 0x140049188
   140013cde:	lea    rcx,[rbp-0x21]
   140013ce2:	call   0x14002e2da
   140013ce7:	int3   
   140013ce8:	mov    rcx,QWORD PTR [rcx+0x10]
   140013cec:	lea    r8,[rip+0x23bed]        # 0x1400378e0
   140013cf3:	mov    edx,0x19
   140013cf8:	mov    r9d,eax
   140013cfb:	call   0x140001f70
   140013d00:	mov    edx,ebx
   140013d02:	lea    rcx,[rbp-0x21]
   140013d06:	call   0x140002064
   140013d0b:	lea    rdx,[rip+0x35476]        # 0x140049188
   140013d12:	lea    rcx,[rbp-0x21]
   140013d16:	call   0x14002e2da
   140013d1b:	int3   
   140013d1c:	mov    rcx,QWORD PTR [rcx+0x10]
   140013d20:	lea    r8,[rip+0x23bb9]        # 0x1400378e0
   140013d27:	mov    edx,0x1b
   140013d2c:	mov    r9d,eax
   140013d2f:	call   0x140001f70
   140013d34:	mov    edx,ebx
   140013d36:	lea    rcx,[rbp-0x21]
   140013d3a:	call   0x140002064
   140013d3f:	lea    rdx,[rip+0x35442]        # 0x140049188
   140013d46:	lea    rcx,[rbp-0x21]
   140013d4a:	call   0x14002e2da
   140013d4f:	int3   
   140013d50:	int3   
   140013d51:	int3   
   140013d52:	int3   
   140013d53:	int3   
   140013d54:	int3   
   140013d55:	int3   
   140013d56:	int3   
   140013d57:	int3   
   140013d58:	mov    QWORD PTR [rsp+0x20],rbx
   140013d5d:	push   rbp
   140013d5e:	push   rsi
   140013d5f:	push   rdi
   140013d60:	push   r12
   140013d62:	push   r13
   140013d64:	push   r14
   140013d66:	push   r15
   140013d68:	mov    rbp,rsp
   140013d6b:	sub    rsp,0x70
   140013d6f:	mov    rax,QWORD PTR [rip+0x372aa]        # 0x14004b020
   140013d76:	xor    rax,rsp
   140013d79:	mov    QWORD PTR [rbp-0x10],rax
   140013d7d:	or     edi,0xffffffff
   140013d80:	mov    r14,r8
   140013d83:	mov    DWORD PTR [rbp-0x40],edi
   140013d86:	mov    r12,rdx
   140013d89:	mov    r15,rcx
   140013d8c:	call   QWORD PTR [rip+0x1e6be]        # 0x140032450
   140013d92:	mov    rbx,QWORD PTR [rax+0xa0]
   140013d99:	mov    rcx,rbx
   140013d9c:	call   QWORD PTR [rip+0x1e906]        # 0x1400326a8
   140013da2:	lea    r8,[rbp-0x40]
   140013da6:	mov    edx,edi
   140013da8:	lea    rcx,[rip+0x239f1]        # 0x1400377a0
   140013daf:	call   rbx
   140013db1:	mov    eax,DWORD PTR [rbp-0x40]
   140013db4:	xor    r13d,r13d
   140013db7:	test   eax,eax
   140013db9:	je     0x140013f19
   140013dbf:	sub    eax,0x1
   140013dc2:	je     0x140013f12
   140013dc8:	sub    eax,0x1
   140013dcb:	je     0x140013e67
   140013dd1:	sub    eax,0x1
   140013dd4:	je     0x140013f0b
   140013dda:	cmp    eax,0x1
   140013ddd:	je     0x140013ee5
   140013de3:	mov    DWORD PTR [rbp-0x40],r13d
   140013de7:	call   QWORD PTR [rip+0x1e663]        # 0x140032450
   140013ded:	mov    rbx,QWORD PTR [rax+0xa0]
   140013df4:	mov    rcx,rbx
   140013df7:	call   QWORD PTR [rip+0x1e8ab]        # 0x1400326a8
   140013dfd:	lea    r8,[rbp-0x40]
   140013e01:	xor    edx,edx
   140013e03:	lea    rcx,[rip+0x239c6]        # 0x1400377d0
   140013e0a:	call   rbx
   140013e0c:	mov    edi,DWORD PTR [rbp-0x40]
   140013e0f:	test   edi,edi
   140013e11:	je     0x140013e71
   140013e13:	mov    rax,QWORD PTR [r14]
   140013e16:	mov    DWORD PTR [rbp-0x40],r13d
   140013e1a:	mov    rbx,QWORD PTR [rax+0x28]
   140013e1e:	mov    rcx,rbx
   140013e21:	call   QWORD PTR [rip+0x1e881]        # 0x1400326a8
   140013e27:	lea    rdx,[rbp-0x40]
   140013e2b:	mov    rcx,r14
   140013e2e:	call   rbx
   140013e30:	test   eax,eax
   140013e32:	js     0x140013e71
   140013e34:	cmp    edi,DWORD PTR [rbp-0x40]
   140013e37:	jne    0x140013e71
   140013e39:	mov    rcx,QWORD PTR [rip+0x37238]        # 0x14004b078
   140013e40:	lea    rax,[rip+0x37231]        # 0x14004b078
   140013e47:	cmp    rcx,rax
   140013e4a:	je     0x140013e67
   140013e4c:	test   BYTE PTR [rcx+0x1c],0x4
   140013e50:	je     0x140013e67
   140013e52:	mov    rcx,QWORD PTR [rcx+0x10]
   140013e56:	lea    edx,[r13+0x1e]
   140013e5a:	mov    r9,r15
   140013e5d:	mov    QWORD PTR [rsp+0x20],r12
   140013e62:	call   0x140012894
   140013e67:	mov    eax,0x2
   140013e6c:	jmp    0x140013f1b
   140013e71:	mov    rdi,r13
   140013e74:	lea    rsi,[rip+0x3c205]        # 0x140050080
   140013e7b:	mov    rax,QWORD PTR [r14]
   140013e7e:	mov    WORD PTR [rbp-0x40],r13w
   140013e83:	mov    rbx,QWORD PTR [rax+0x20]
   140013e87:	mov    rcx,rbx
   140013e8a:	call   QWORD PTR [rip+0x1e818]        # 0x1400326a8
   140013e90:	lea    r8,[rbp-0x40]
   140013e94:	mov    rdx,rsi
   140013e97:	mov    rcx,r14
   140013e9a:	call   rbx
   140013e9c:	mov    ebx,eax
   140013e9e:	test   eax,eax
   140013ea0:	js     0x140013ef0
   140013ea2:	cmp    WORD PTR [rbp-0x40],r13w
   140013ea7:	jne    0x140013eec
   140013ea9:	inc    rdi
   140013eac:	add    rsi,0x10
   140013eb0:	cmp    rdi,0x4
   140013eb4:	jb     0x140013e7b
   140013eb6:	mov    rcx,QWORD PTR [rip+0x371bb]        # 0x14004b078
   140013ebd:	lea    rax,[rip+0x371b4]        # 0x14004b078
   140013ec4:	cmp    rcx,rax
   140013ec7:	je     0x140013ee5
   140013ec9:	test   BYTE PTR [rcx+0x1c],0x4
   140013ecd:	je     0x140013ee5
   140013ecf:	mov    rcx,QWORD PTR [rcx+0x10]
   140013ed3:	mov    edx,0x20
   140013ed8:	mov    r9,r15
   140013edb:	mov    QWORD PTR [rsp+0x20],r12
   140013ee0:	call   0x140012894
   140013ee5:	mov    eax,0x4
   140013eea:	jmp    0x140013f1b
   140013eec:	mov    eax,edi
   140013eee:	jmp    0x140013f1b
   140013ef0:	mov    rcx,QWORD PTR [rip+0x37181]        # 0x14004b078
   140013ef7:	lea    rax,[rip+0x3717a]        # 0x14004b078
   140013efe:	cmp    rcx,rax
   140013f01:	je     0x140013f57
   140013f03:	test   BYTE PTR [rcx+0x1c],0x1
   140013f07:	je     0x140013f57
   140013f09:	jmp    0x140013f3f
   140013f0b:	mov    eax,0x3
   140013f10:	jmp    0x140013f1b
   140013f12:	mov    eax,0x1
   140013f17:	jmp    0x140013f1b
   140013f19:	xor    eax,eax
   140013f1b:	mov    rcx,QWORD PTR [rbp-0x10]
   140013f1f:	xor    rcx,rsp
   140013f22:	call   0x14002dd00
   140013f27:	mov    rbx,QWORD PTR [rsp+0xc8]
   140013f2f:	add    rsp,0x70
   140013f33:	pop    r15
   140013f35:	pop    r14
   140013f37:	pop    r13
   140013f39:	pop    r12
   140013f3b:	pop    rdi
   140013f3c:	pop    rsi
   140013f3d:	pop    rbp
   140013f3e:	ret    
   140013f3f:	mov    rcx,QWORD PTR [rcx+0x10]
   140013f43:	lea    r8,[rip+0x23996]        # 0x1400378e0
   140013f4a:	mov    edx,0x1f
   140013f4f:	mov    r9d,ebx
   140013f52:	call   0x140001f70
   140013f57:	mov    edx,ebx
   140013f59:	lea    rcx,[rbp-0x38]
   140013f5d:	call   0x140002064
   140013f62:	lea    rdx,[rip+0x3521f]        # 0x140049188
   140013f69:	lea    rcx,[rbp-0x38]
   140013f6d:	call   0x14002e2da
   140013f72:	int3   
   140013f73:	int3   
   140013f74:	int3   
   140013f75:	int3   
   140013f76:	int3   
   140013f77:	int3   
   140013f78:	int3   
   140013f79:	int3   
   140013f7a:	int3   
   140013f7b:	int3   
   140013f7c:	mov    QWORD PTR [rsp+0x8],rbx
   140013f81:	push   rbp
   140013f82:	push   rsi
   140013f83:	push   rdi
   140013f84:	push   r12
   140013f86:	push   r13
   140013f88:	push   r14
   140013f8a:	push   r15
   140013f8c:	sub    rsp,0x70
   140013f90:	mov    rax,QWORD PTR [rip+0x37089]        # 0x14004b020
   140013f97:	xor    rax,rsp
   140013f9a:	mov    QWORD PTR [rsp+0x60],rax
   140013f9f:	mov    rbp,QWORD PTR [rsp+0xd0]
   140013fa7:	xor    r13d,r13d
   140013faa:	mov    r12,r9
   140013fad:	mov    r15,r8
   140013fb0:	mov    r14,rdx
   140013fb3:	test   rbp,rbp
   140013fb6:	jne    0x140013fbc
   140013fb8:	mov    al,0x1
   140013fba:	jmp    0x140014004
   140013fbc:	mov    rbx,QWORD PTR [rbp+0x8]
   140013fc0:	jmp    0x140013ffc
   140013fc2:	mov    rcx,QWORD PTR [r12]
   140013fc6:	mov    rdi,QWORD PTR [rbx]
   140013fc9:	mov    WORD PTR [rsp+0x30],r13w
   140013fcf:	mov    rsi,QWORD PTR [rcx+0x20]
   140013fd3:	mov    rcx,rsi
   140013fd6:	call   QWORD PTR [rip+0x1e6cc]        # 0x1400326a8
   140013fdc:	lea    r8,[rsp+0x30]
   140013fe1:	mov    rcx,r12
   140013fe4:	lea    rdx,[rdi+0x4]
   140013fe8:	call   rsi
   140013fea:	mov    edi,eax
   140013fec:	test   eax,eax
   140013fee:	js     0x14001406c
   140013ff0:	cmp    WORD PTR [rsp+0x30],r13w
   140013ff6:	jne    0x140014029
   140013ff8:	add    rbx,0x8
   140013ffc:	cmp    rbx,QWORD PTR [rbp+0x10]
   140014000:	jne    0x140013fc2
   140014002:	xor    al,al
   140014004:	mov    rcx,QWORD PTR [rsp+0x60]
   140014009:	xor    rcx,rsp
   14001400c:	call   0x14002dd00
   140014011:	mov    rbx,QWORD PTR [rsp+0xb0]
   140014019:	add    rsp,0x70
   14001401d:	pop    r15
   14001401f:	pop    r14
   140014021:	pop    r13
   140014023:	pop    r12
   140014025:	pop    rdi
   140014026:	pop    rsi
   140014027:	pop    rbp
   140014028:	ret    
   140014029:	mov    rcx,QWORD PTR [rip+0x37048]        # 0x14004b078
   140014030:	lea    rax,[rip+0x37041]        # 0x14004b078
   140014037:	cmp    rcx,rax
   14001403a:	je     0x140013fb8
   140014040:	test   BYTE PTR [rcx+0x1c],0x4
   140014044:	je     0x140013fb8
   14001404a:	mov    rax,QWORD PTR [rbx]
   14001404d:	mov    r9,r14
   140014050:	mov    rcx,QWORD PTR [rcx+0x10]
   140014054:	add    rax,0x4
   140014058:	mov    QWORD PTR [rsp+0x28],rax
   14001405d:	mov    QWORD PTR [rsp+0x20],r15
   140014062:	call   0x140012934
   140014067:	jmp    0x140013fb8
   14001406c:	mov    rcx,QWORD PTR [rip+0x37005]        # 0x14004b078
   140014073:	lea    rax,[rip+0x36ffe]        # 0x14004b078
   14001407a:	cmp    rcx,rax
   14001407d:	je     0x14001409d
   14001407f:	test   BYTE PTR [rcx+0x1c],0x1
   140014083:	je     0x14001409d
   140014085:	mov    rcx,QWORD PTR [rcx+0x10]
   140014089:	lea    r8,[rip+0x23850]        # 0x1400378e0
   140014090:	mov    edx,0x21
   140014095:	mov    r9d,edi
   140014098:	call   0x140001f70
   14001409d:	mov    edx,edi
   14001409f:	lea    rcx,[rsp+0x38]
   1400140a4:	call   0x140002064
   1400140a9:	lea    rdx,[rip+0x350d8]        # 0x140049188
   1400140b0:	lea    rcx,[rsp+0x38]
   1400140b5:	call   0x14002e2da
   1400140ba:	int3   
   1400140bb:	int3   
   1400140bc:	int3   
   1400140bd:	int3   
   1400140be:	int3   
   1400140bf:	int3   
   1400140c0:	int3   
   1400140c1:	int3   
   1400140c2:	int3   
   1400140c3:	int3   
   1400140c4:	rex push rbp
   1400140c6:	push   rbx
   1400140c7:	push   rsi
   1400140c8:	push   rdi
   1400140c9:	push   r12
   1400140cb:	push   r13
   1400140cd:	push   r14
   1400140cf:	push   r15
   1400140d1:	lea    rbp,[rsp-0x17]
   1400140d6:	sub    rsp,0x88
   1400140dd:	mov    QWORD PTR [rbp-0x39],0xfffffffffffffffe
   1400140e5:	mov    rax,QWORD PTR [rip+0x36f34]        # 0x14004b020
   1400140ec:	xor    rax,rsp
   1400140ef:	mov    QWORD PTR [rbp+0x7],rax
   1400140f3:	mov    r12,r9
   1400140f6:	mov    rdi,r8
   1400140f9:	mov    r15,rdx
   1400140fc:	mov    r14,rcx
   1400140ff:	mov    r13,QWORD PTR [rbp+0x7f]
   140014103:	mov    DWORD PTR [rbp-0x3d],0x2
   14001410a:	xor    esi,esi
   14001410c:	mov    DWORD PTR [rbp-0x41],esi
   14001410f:	mov    rax,QWORD PTR [r8]
   140014112:	mov    rbx,QWORD PTR [rax+0x40]
   140014116:	mov    rcx,rbx
   140014119:	call   QWORD PTR [rip+0x1e589]        # 0x1400326a8
   14001411f:	lea    r8,[rbp-0x41]
   140014123:	lea    rdx,[rbp-0x3d]
   140014127:	mov    rcx,rdi
   14001412a:	call   rbx
   14001412c:	mov    edi,eax
   14001412e:	test   eax,eax
   140014130:	jns    0x140014168
   140014132:	lea    rbx,[rip+0x36f3f]        # 0x14004b078
   140014139:	mov    rcx,QWORD PTR [rip+0x36f38]        # 0x14004b078
   140014140:	cmp    rcx,rbx
   140014143:	je     0x140014161
   140014145:	test   BYTE PTR [rcx+0x1c],0x1
   140014149:	je     0x140014161
   14001414b:	lea    edx,[rsi+0x23]
   14001414e:	mov    r9d,eax
   140014151:	lea    r8,[rip+0x23788]        # 0x1400378e0
   140014158:	mov    rcx,QWORD PTR [rcx+0x10]
   14001415c:	call   0x140001f70
   140014161:	xor    al,al
   140014163:	jmp    0x140014357
   140014168:	mov    QWORD PTR [rbp-0x29],rsi
   14001416c:	mov    QWORD PTR [rbp-0x31],rsi
   140014170:	mov    ecx,DWORD PTR [rbp-0x3d]
   140014173:	test   ecx,ecx
   140014175:	je     0x1400142ba
   14001417b:	sub    ecx,0x1
   14001417e:	je     0x140014213
   140014184:	cmp    ecx,0x1
   140014187:	je     0x1400141d7
   140014189:	lea    rbx,[rip+0x36ee8]        # 0x14004b078
   140014190:	mov    rcx,QWORD PTR [rip+0x36ee1]        # 0x14004b078
   140014197:	cmp    rcx,rbx
   14001419a:	je     0x1400141bb
   14001419c:	test   BYTE PTR [rcx+0x1c],0x1
   1400141a0:	je     0x1400141bb
   1400141a2:	mov    edx,0x29
   1400141a7:	mov    r9d,DWORD PTR [rbp-0x41]
   1400141ab:	lea    r8,[rip+0x2372e]        # 0x1400378e0
   1400141b2:	mov    rcx,QWORD PTR [rcx+0x10]
   1400141b6:	call   0x140001f70
   1400141bb:	mov    edx,edi
   1400141bd:	lea    rcx,[rbp-0x21]
   1400141c1:	call   0x140002064
   1400141c6:	lea    rdx,[rip+0x34fbb]        # 0x140049188
   1400141cd:	lea    rcx,[rbp-0x21]
   1400141d1:	call   0x14002e2da
   1400141d6:	int3   
   1400141d7:	lea    rbx,[rip+0x36e9a]        # 0x14004b078
   1400141de:	mov    rcx,QWORD PTR [rip+0x36e93]        # 0x14004b078
   1400141e5:	cmp    rcx,rbx
   1400141e8:	je     0x1400142a9
   1400141ee:	test   BYTE PTR [rcx+0x1c],0x4
   1400141f2:	je     0x1400142a9
   1400141f8:	mov    edx,0x24
   1400141fd:	mov    QWORD PTR [rsp+0x20],r15
   140014202:	mov    r9,r14
   140014205:	mov    rcx,QWORD PTR [rcx+0x10]
   140014209:	call   0x140012894
   14001420e:	jmp    0x1400142a9
   140014213:	lea    rbx,[rip+0x36e5e]        # 0x14004b078
   14001421a:	mov    rcx,QWORD PTR [rip+0x36e57]        # 0x14004b078
   140014221:	cmp    rcx,rbx
   140014224:	je     0x140014242
   140014226:	test   BYTE PTR [rcx+0x1c],0x4
   14001422a:	je     0x140014242
   14001422c:	mov    edx,0x27
   140014231:	mov    QWORD PTR [rsp+0x20],r15
   140014236:	mov    r9,r14
   140014239:	mov    rcx,QWORD PTR [rcx+0x10]
   14001423d:	call   0x140012894
   140014242:	mov    r8d,DWORD PTR [rbp-0x41]
   140014246:	lea    rdx,[rip+0x23603]        # 0x140037850
   14001424d:	mov    rcx,r13
   140014250:	call   0x14002aef4
   140014255:	mov    edi,eax
   140014257:	test   eax,eax
   140014259:	jns    0x1400142a1
   14001425b:	mov    rcx,QWORD PTR [rip+0x36e16]        # 0x14004b078
   140014262:	cmp    rcx,rbx
   140014265:	je     0x140014285
   140014267:	test   BYTE PTR [rcx+0x1c],0x1
   14001426b:	je     0x140014285
   14001426d:	mov    edx,0x28
   140014272:	mov    r9d,eax
   140014275:	lea    r8,[rip+0x23664]        # 0x1400378e0
   14001427c:	mov    rcx,QWORD PTR [rcx+0x10]
   140014280:	call   0x140001f70
   140014285:	mov    edx,edi
   140014287:	lea    rcx,[rbp-0x21]
   14001428b:	call   0x140002064
   140014290:	lea    rdx,[rip+0x34ef1]        # 0x140049188
   140014297:	lea    rcx,[rbp-0x21]
   14001429b:	call   0x14002e2da
   1400142a0:	int3   
   1400142a1:	mov    BYTE PTR [r12],0x1
   1400142a6:	mov    sil,0x1
   1400142a9:	xor    ecx,ecx
   1400142ab:	call   QWORD PTR [rip+0x1e09f]        # 0x140032350
   1400142b1:	nop
   1400142b2:	mov    al,sil
   1400142b5:	jmp    0x140014357
   1400142ba:	lea    rbx,[rip+0x36db7]        # 0x14004b078
   1400142c1:	mov    rcx,QWORD PTR [rip+0x36db0]        # 0x14004b078
   1400142c8:	cmp    rcx,rbx
   1400142cb:	je     0x1400142e9
   1400142cd:	test   BYTE PTR [rcx+0x1c],0x4
   1400142d1:	je     0x1400142e9
   1400142d3:	mov    edx,0x25
   1400142d8:	mov    QWORD PTR [rsp+0x20],r15
   1400142dd:	mov    r9,r14
   1400142e0:	mov    rcx,QWORD PTR [rcx+0x10]
   1400142e4:	call   0x140012894
   1400142e9:	mov    r8d,DWORD PTR [rbp-0x41]
   1400142ed:	lea    rdx,[rip+0x234fc]        # 0x1400377f0
   1400142f4:	mov    rcx,r13
   1400142f7:	call   0x14002aef4
   1400142fc:	mov    edi,eax
   1400142fe:	test   eax,eax
   140014300:	jns    0x140014348
   140014302:	mov    rcx,QWORD PTR [rip+0x36d6f]        # 0x14004b078
   140014309:	cmp    rcx,rbx
   14001430c:	je     0x14001432c
   14001430e:	test   BYTE PTR [rcx+0x1c],0x1
   140014312:	je     0x14001432c
   140014314:	mov    edx,0x26
   140014319:	mov    r9d,eax
   14001431c:	lea    r8,[rip+0x235bd]        # 0x1400378e0
   140014323:	mov    rcx,QWORD PTR [rcx+0x10]
   140014327:	call   0x140001f70
   14001432c:	mov    edx,edi
   14001432e:	lea    rcx,[rbp-0x21]
   140014332:	call   0x140002064
   140014337:	lea    rdx,[rip+0x34e4a]        # 0x140049188
   14001433e:	lea    rcx,[rbp-0x21]
   140014342:	call   0x14002e2da
   140014347:	int3   
   140014348:	mov    BYTE PTR [r12],sil
   14001434c:	xor    ecx,ecx
   14001434e:	call   QWORD PTR [rip+0x1dffc]        # 0x140032350
   140014354:	nop
   140014355:	mov    al,0x1
   140014357:	mov    rcx,QWORD PTR [rbp+0x7]
   14001435b:	xor    rcx,rsp
   14001435e:	call   0x14002dd00
   140014363:	add    rsp,0x88
   14001436a:	pop    r15
   14001436c:	pop    r14
   14001436e:	pop    r13
   140014370:	pop    r12
   140014372:	pop    rdi
   140014373:	pop    rsi
   140014374:	pop    rbx
   140014375:	pop    rbp
   140014376:	ret    
   140014377:	int3   
   140014378:	int3   
   140014379:	int3   
   14001437a:	int3   
   14001437b:	int3   
   14001437c:	int3   
   14001437d:	int3   
   14001437e:	int3   
   14001437f:	int3   
   140014380:	mov    QWORD PTR [rsp+0x8],rbx
   140014385:	push   rbp
   140014386:	push   rsi
   140014387:	push   rdi
   140014388:	push   r14
   14001438a:	push   r15
   14001438c:	sub    rsp,0x70
   140014390:	mov    rax,QWORD PTR [rip+0x36c89]        # 0x14004b020
   140014397:	xor    rax,rsp
   14001439a:	mov    QWORD PTR [rsp+0x60],rax
   14001439f:	mov    rax,QWORD PTR [r9]
   1400143a2:	mov    rbp,rcx
   1400143a5:	xor    esi,esi
   1400143a7:	mov    rdi,r9
   1400143aa:	mov    r15,r8
   1400143ad:	mov    DWORD PTR [rsp+0x30],esi
   1400143b1:	mov    r14,rdx
   1400143b4:	mov    rbx,QWORD PTR [rax+0x28]
   1400143b8:	mov    rcx,rbx
   1400143bb:	call   QWORD PTR [rip+0x1e2e7]        # 0x1400326a8
   1400143c1:	lea    rdx,[rsp+0x30]
   1400143c6:	mov    rcx,rdi
   1400143c9:	call   rbx
   1400143cb:	mov    ebx,eax
   1400143cd:	test   eax,eax
   1400143cf:	jns    0x1400143f4
   1400143d1:	mov    rcx,QWORD PTR [rip+0x36ca0]        # 0x14004b078
   1400143d8:	lea    rdx,[rip+0x36c99]        # 0x14004b078
   1400143df:	cmp    rcx,rdx
   1400143e2:	je     0x140014481
   1400143e8:	test   BYTE PTR [rcx+0x1c],0x1
   1400143ec:	je     0x140014481
   1400143f2:	jmp    0x140014469
   1400143f4:	mov    eax,DWORD PTR [rsp+0x30]
   1400143f8:	test   eax,eax
   1400143fa:	jne    0x14001442d
   1400143fc:	mov    rcx,QWORD PTR [rip+0x36c75]        # 0x14004b078
   140014403:	lea    rdx,[rip+0x36c6e]        # 0x14004b078
   14001440a:	cmp    rcx,rdx
   14001440d:	je     0x140014429
   14001440f:	test   BYTE PTR [rcx+0x1c],0x4
   140014413:	je     0x140014429
   140014415:	mov    rcx,QWORD PTR [rcx+0x10]
   140014419:	lea    edx,[rax+0x2b]
   14001441c:	mov    r9,r14
   14001441f:	mov    QWORD PTR [rsp+0x20],r15
   140014424:	call   0x140012894
   140014429:	xor    al,al
   14001442b:	jmp    0x140014448
   14001442d:	mov    rcx,QWORD PTR [rbp+0x68]
   140014431:	jmp    0x14001443b
   140014433:	cmp    DWORD PTR [rcx],eax
   140014435:	je     0x140014441
   140014437:	add    rcx,0x4
   14001443b:	cmp    rcx,QWORD PTR [rbp+0x70]
   14001443f:	jne    0x140014433
   140014441:	cmp    rcx,QWORD PTR [rbp+0x70]
   140014445:	setne  al
   140014448:	mov    rcx,QWORD PTR [rsp+0x60]
   14001444d:	xor    rcx,rsp
   140014450:	call   0x14002dd00
   140014455:	mov    rbx,QWORD PTR [rsp+0xa0]
   14001445d:	add    rsp,0x70
   140014461:	pop    r15
   140014463:	pop    r14
   140014465:	pop    rdi
   140014466:	pop    rsi
   140014467:	pop    rbp
   140014468:	ret    
   140014469:	mov    rcx,QWORD PTR [rcx+0x10]
   14001446d:	lea    r8,[rip+0x2346c]        # 0x1400378e0
   140014474:	mov    edx,0x2a
   140014479:	mov    r9d,eax
   14001447c:	call   0x140001f70
   140014481:	mov    edx,ebx
   140014483:	lea    rcx,[rsp+0x38]
   140014488:	call   0x140002064
   14001448d:	lea    rdx,[rip+0x34cf4]        # 0x140049188
   140014494:	lea    rcx,[rsp+0x38]
   140014499:	call   0x14002e2da
   14001449e:	int3   
   14001449f:	int3   
   1400144a0:	int3   
   1400144a1:	int3   
   1400144a2:	int3   
   1400144a3:	int3   
   1400144a4:	int3   
   1400144a5:	int3   
   1400144a6:	int3   
   1400144a7:	int3   
   1400144a8:	mov    QWORD PTR [rsp+0x10],rbx
   1400144ad:	push   rdi
   1400144ae:	sub    rsp,0x20
   1400144b2:	mov    rdi,r8
   1400144b5:	lea    rbx,[rcx+0x20]
   1400144b9:	mov    r8,rdx
   1400144bc:	mov    rcx,rbx
   1400144bf:	lea    rdx,[rsp+0x30]
   1400144c4:	call   0x140014aa4
   1400144c9:	mov    rax,QWORD PTR [rsp+0x30]
   1400144ce:	cmp    rax,QWORD PTR [rbx]
   1400144d1:	je     0x1400144e5
   1400144d3:	test   rdi,rdi
   1400144d6:	je     0x1400144e1
   1400144d8:	mov    rcx,QWORD PTR [rax+0x20]
   1400144dc:	mov    eax,DWORD PTR [rcx+0x68]
   1400144df:	mov    DWORD PTR [rdi],eax
   1400144e1:	mov    al,0x1
   1400144e3:	jmp    0x1400144f2
   1400144e5:	test   rdi,rdi
   1400144e8:	je     0x1400144f0
   1400144ea:	mov    DWORD PTR [rdi],0x4
   1400144f0:	xor    al,al
   1400144f2:	mov    rbx,QWORD PTR [rsp+0x38]
   1400144f7:	add    rsp,0x20
   1400144fb:	pop    rdi
   1400144fc:	ret    
   1400144fd:	int3   
   1400144fe:	int3   
   1400144ff:	int3   
   140014500:	int3   
   140014501:	int3   
   140014502:	int3   
   140014503:	int3   
   140014504:	mov    rax,rsp
   140014507:	push   r14
   140014509:	sub    rsp,0x50
   14001450d:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140014515:	mov    QWORD PTR [rax+0x8],rbx
   140014519:	mov    QWORD PTR [rax+0x10],rbp
   14001451d:	mov    QWORD PTR [rax+0x18],rsi
   140014521:	mov    QWORD PTR [rax+0x20],rdi
   140014525:	mov    ebx,r9d
   140014528:	mov    edi,r8d
   14001452b:	mov    rsi,rdx
   14001452e:	mov    rbp,rcx
   140014531:	mov    ecx,0x70
   140014536:	call   0x140023f10
   14001453b:	mov    r14,rax
   14001453e:	lea    rax,[rip+0x20373]        # 0x1400348b8
   140014545:	mov    QWORD PTR [r14],rax
   140014548:	xor    eax,eax
   14001454a:	mov    DWORD PTR [r14+0x8],eax
   14001454e:	mov    QWORD PTR [r14+0x38],0x7
   140014556:	mov    QWORD PTR [r14+0x30],rax
   14001455a:	mov    WORD PTR [r14+0x20],ax
   14001455f:	mov    QWORD PTR [r14+0x48],rax
   140014563:	mov    QWORD PTR [r14+0x58],rax
   140014567:	mov    QWORD PTR [r14+0x60],rax
   14001456b:	mov    BYTE PTR [r14+0x6c],al
   14001456f:	lock inc DWORD PTR [r14+0x8]
   140014574:	mov    QWORD PTR [rsp+0x48],r14
   140014579:	mov    rax,QWORD PTR [rsp+0x88]
   140014581:	mov    QWORD PTR [rsp+0x30],rax
   140014586:	mov    rax,QWORD PTR [rsp+0x80]
   14001458e:	mov    QWORD PTR [rsp+0x28],rax
   140014593:	mov    DWORD PTR [rsp+0x20],ebx
   140014597:	mov    r9d,edi
   14001459a:	mov    r8,rsi
   14001459d:	mov    rdx,rbp
   1400145a0:	mov    rcx,r14
   1400145a3:	call   0x140014678
   1400145a8:	mov    rax,QWORD PTR [rsp+0x90]
   1400145b0:	mov    QWORD PTR [rax],r14
   1400145b3:	mov    rbx,QWORD PTR [rsp+0x60]
   1400145b8:	mov    rbp,QWORD PTR [rsp+0x68]
   1400145bd:	mov    rsi,QWORD PTR [rsp+0x70]
   1400145c2:	mov    rdi,QWORD PTR [rsp+0x78]
   1400145c7:	add    rsp,0x50
   1400145cb:	pop    r14
   1400145cd:	ret    
   1400145ce:	int3   
   1400145cf:	int3   
   1400145d0:	int3   
   1400145d1:	int3   
   1400145d2:	int3   
   1400145d3:	int3   
   1400145d4:	rex push rbx
   1400145d6:	sub    rsp,0x20
   1400145da:	lea    rax,[rip+0x202d7]        # 0x1400348b8
   1400145e1:	mov    rbx,rcx
   1400145e4:	mov    QWORD PTR [rcx],rax
   1400145e7:	mov    rcx,QWORD PTR [rcx+0x60]
   1400145eb:	call   QWORD PTR [rip+0x1dd5f]        # 0x140032350
   1400145f1:	mov    rcx,QWORD PTR [rbx+0x58]
   1400145f5:	call   QWORD PTR [rip+0x1dd55]        # 0x140032350
   1400145fb:	mov    rcx,QWORD PTR [rbx+0x48]
   1400145ff:	call   QWORD PTR [rip+0x1dd4b]        # 0x140032350
   140014605:	cmp    QWORD PTR [rbx+0x38],0x8
   14001460a:	jb     0x140014616
   14001460c:	mov    rcx,QWORD PTR [rbx+0x20]
   140014610:	call   QWORD PTR [rip+0x1dfb2]        # 0x1400325c8
   140014616:	xor    eax,eax
   140014618:	mov    QWORD PTR [rbx+0x38],0x7
   140014620:	mov    QWORD PTR [rbx+0x30],rax
   140014624:	mov    WORD PTR [rbx+0x20],ax
   140014628:	add    rsp,0x20
   14001462c:	pop    rbx
   14001462d:	ret    
   14001462e:	int3   
   14001462f:	int3   
   140014630:	int3   
   140014631:	int3   
   140014632:	int3   
   140014633:	int3   
   140014634:	int3   
   140014635:	int3   
   140014636:	int3   
   140014637:	int3   
   140014638:	int3   
   140014639:	int3   
   14001463a:	int3   
   14001463b:	int3   
   14001463c:	int3   
   14001463d:	int3   
   14001463e:	int3   
   14001463f:	int3   
   140014640:	mov    QWORD PTR [rsp+0x8],rbx
   140014645:	push   rdi
   140014646:	sub    rsp,0x20
   14001464a:	mov    ebx,edx
   14001464c:	mov    rdi,rcx
   14001464f:	call   0x1400145d4
   140014654:	test   bl,0x1
   140014657:	je     0x140014662
   140014659:	mov    rcx,rdi
   14001465c:	call   QWORD PTR [rip+0x1df66]        # 0x1400325c8
   140014662:	mov    rax,rdi
   140014665:	mov    rbx,QWORD PTR [rsp+0x30]
   14001466a:	add    rsp,0x20
   14001466e:	pop    rdi
   14001466f:	ret    
   140014670:	int3   
   140014671:	int3   
   140014672:	int3   
   140014673:	int3   
   140014674:	int3   
   140014675:	int3   
   140014676:	int3   
   140014677:	int3   
   140014678:	mov    QWORD PTR [rsp+0x10],rbx
   14001467d:	push   rbp
   14001467e:	push   rsi
   14001467f:	push   rdi
   140014680:	push   r14
   140014682:	push   r15
   140014684:	mov    rbp,rsp
   140014687:	sub    rsp,0x50
   14001468b:	mov    rax,QWORD PTR [rip+0x3698e]        # 0x14004b020
   140014692:	xor    rax,rsp
   140014695:	mov    QWORD PTR [rbp-0x8],rax
   140014699:	movups xmm0,XMMWORD PTR [rdx]
   14001469c:	mov    r14,QWORD PTR [rbp+0x58]
   1400146a0:	mov    r15,rcx
   1400146a3:	mov    rsi,QWORD PTR [rbp+0x60]
   1400146a7:	mov    rdx,r8
   1400146aa:	movdqu XMMWORD PTR [rcx+0xc],xmm0
   1400146af:	add    rcx,0x20
   1400146b3:	mov    ebx,r9d
   1400146b6:	call   0x14000da34
   1400146bb:	mov    eax,DWORD PTR [rbp+0x50]
   1400146be:	mov    DWORD PTR [r15+0x40],eax
   1400146c2:	mov    DWORD PTR [r15+0x68],ebx
   1400146c6:	mov    rax,QWORD PTR [rsi]
   1400146c9:	mov    rdi,QWORD PTR [rax+0x28]
   1400146cd:	mov    rcx,rdi
   1400146d0:	call   QWORD PTR [rip+0x1dfd2]        # 0x1400326a8
   1400146d6:	lea    rdx,[r15+0x44]
   1400146da:	mov    rcx,rsi
   1400146dd:	call   rdi
   1400146df:	mov    ebx,eax
   1400146e1:	test   eax,eax
   1400146e3:	jns    0x14001470b
   1400146e5:	mov    rcx,QWORD PTR [rip+0x3698c]        # 0x14004b078
   1400146ec:	lea    rdx,[rip+0x36985]        # 0x14004b078
   1400146f3:	cmp    rcx,rdx
   1400146f6:	je     0x14001489c
   1400146fc:	test   BYTE PTR [rcx+0x1c],0x1
   140014700:	je     0x14001489c
   140014706:	jmp    0x140014884
   14001470b:	mov    rax,QWORD PTR [r14]
   14001470e:	mov    rdi,QWORD PTR [rax+0x20]
   140014712:	mov    rcx,rdi
   140014715:	call   QWORD PTR [rip+0x1df8d]        # 0x1400326a8
   14001471b:	lea    rdx,[r15+0x48]
   14001471f:	mov    rcx,r14
   140014722:	call   rdi
   140014724:	mov    ebx,eax
   140014726:	test   eax,eax
   140014728:	jns    0x140014750
   14001472a:	mov    rcx,QWORD PTR [rip+0x36947]        # 0x14004b078
   140014731:	lea    rdx,[rip+0x36940]        # 0x14004b078
   140014738:	cmp    rcx,rdx
   14001473b:	je     0x1400148d0
   140014741:	test   BYTE PTR [rcx+0x1c],0x1
   140014745:	je     0x1400148d0
   14001474b:	jmp    0x1400148b8
   140014750:	mov    rax,QWORD PTR [r14]
   140014753:	mov    rdi,QWORD PTR [rax+0x48]
   140014757:	mov    rcx,rdi
   14001475a:	call   QWORD PTR [rip+0x1df48]        # 0x1400326a8
   140014760:	lea    rdx,[r15+0x50]
   140014764:	mov    rcx,r14
   140014767:	call   rdi
   140014769:	mov    ebx,eax
   14001476b:	test   eax,eax
   14001476d:	jns    0x140014795
   14001476f:	mov    rcx,QWORD PTR [rip+0x36902]        # 0x14004b078
   140014776:	lea    rdx,[rip+0x368fb]        # 0x14004b078
   14001477d:	cmp    rcx,rdx
   140014780:	je     0x140014904
   140014786:	test   BYTE PTR [rcx+0x1c],0x1
   14001478a:	je     0x140014904
   140014790:	jmp    0x1400148ec
   140014795:	mov    rax,QWORD PTR [r14]
   140014798:	mov    rdi,QWORD PTR [rax+0x40]
   14001479c:	mov    rcx,rdi
   14001479f:	call   QWORD PTR [rip+0x1df03]        # 0x1400326a8
   1400147a5:	lea    rdx,[r15+0x54]
   1400147a9:	mov    rcx,r14
   1400147ac:	call   rdi
   1400147ae:	mov    ebx,eax
   1400147b0:	test   eax,eax
   1400147b2:	jns    0x1400147da
   1400147b4:	mov    rcx,QWORD PTR [rip+0x368bd]        # 0x14004b078
   1400147bb:	lea    rdx,[rip+0x368b6]        # 0x14004b078
   1400147c2:	cmp    rcx,rdx
   1400147c5:	je     0x140014938
   1400147cb:	test   BYTE PTR [rcx+0x1c],0x1
   1400147cf:	je     0x140014938
   1400147d5:	jmp    0x140014920
   1400147da:	mov    rax,QWORD PTR [r14]
   1400147dd:	mov    rdi,QWORD PTR [rax+0x78]
   1400147e1:	mov    rcx,rdi
   1400147e4:	call   QWORD PTR [rip+0x1debe]        # 0x1400326a8
   1400147ea:	lea    rdx,[r15+0x58]
   1400147ee:	mov    rcx,r14
   1400147f1:	call   rdi
   1400147f3:	mov    ebx,eax
   1400147f5:	test   eax,eax
   1400147f7:	jns    0x14001481f
   1400147f9:	mov    rcx,QWORD PTR [rip+0x36878]        # 0x14004b078
   140014800:	lea    rdx,[rip+0x36871]        # 0x14004b078
   140014807:	cmp    rcx,rdx
   14001480a:	je     0x14001496c
   140014810:	test   BYTE PTR [rcx+0x1c],0x1
   140014814:	je     0x14001496c
   14001481a:	jmp    0x140014954
   14001481f:	mov    rax,QWORD PTR [r14]
   140014822:	mov    rdi,QWORD PTR [rax+0x28]
   140014826:	mov    rcx,rdi
   140014829:	call   QWORD PTR [rip+0x1de79]        # 0x1400326a8
   14001482f:	lea    rdx,[r15+0x60]
   140014833:	mov    rcx,r14
   140014836:	call   rdi
   140014838:	mov    ebx,eax
   14001483a:	test   eax,eax
   14001483c:	jns    0x140014864
   14001483e:	mov    rcx,QWORD PTR [rip+0x36833]        # 0x14004b078
   140014845:	lea    rdx,[rip+0x3682c]        # 0x14004b078
   14001484c:	cmp    rcx,rdx
   14001484f:	je     0x1400149a0
   140014855:	test   BYTE PTR [rcx+0x1c],0x1
   140014859:	je     0x1400149a0
   14001485f:	jmp    0x140014988
   140014864:	mov    rcx,QWORD PTR [rbp-0x8]
   140014868:	xor    rcx,rsp
   14001486b:	call   0x14002dd00
   140014870:	mov    rbx,QWORD PTR [rsp+0x88]
   140014878:	add    rsp,0x50
   14001487c:	pop    r15
   14001487e:	pop    r14
   140014880:	pop    rdi
   140014881:	pop    rsi
   140014882:	pop    rbp
   140014883:	ret    
   140014884:	mov    rcx,QWORD PTR [rcx+0x10]
   140014888:	lea    r8,[rip+0x23051]        # 0x1400378e0
   14001488f:	mov    edx,0x35
   140014894:	mov    r9d,eax
   140014897:	call   0x140001f70
   14001489c:	mov    edx,ebx
   14001489e:	lea    rcx,[rbp-0x30]
   1400148a2:	call   0x140002064
   1400148a7:	lea    rdx,[rip+0x348da]        # 0x140049188
   1400148ae:	lea    rcx,[rbp-0x30]
   1400148b2:	call   0x14002e2da
   1400148b7:	int3   
   1400148b8:	mov    rcx,QWORD PTR [rcx+0x10]
   1400148bc:	lea    r8,[rip+0x2301d]        # 0x1400378e0
   1400148c3:	mov    edx,0x36
   1400148c8:	mov    r9d,eax
   1400148cb:	call   0x140001f70
   1400148d0:	mov    edx,ebx
   1400148d2:	lea    rcx,[rbp-0x30]
   1400148d6:	call   0x140002064
   1400148db:	lea    rdx,[rip+0x348a6]        # 0x140049188
   1400148e2:	lea    rcx,[rbp-0x30]
   1400148e6:	call   0x14002e2da
   1400148eb:	int3   
   1400148ec:	mov    rcx,QWORD PTR [rcx+0x10]
   1400148f0:	lea    r8,[rip+0x22fe9]        # 0x1400378e0
   1400148f7:	mov    edx,0x37
   1400148fc:	mov    r9d,eax
   1400148ff:	call   0x140001f70
   140014904:	mov    edx,ebx
   140014906:	lea    rcx,[rbp-0x30]
   14001490a:	call   0x140002064
   14001490f:	lea    rdx,[rip+0x34872]        # 0x140049188
   140014916:	lea    rcx,[rbp-0x30]
   14001491a:	call   0x14002e2da
   14001491f:	int3   
   140014920:	mov    rcx,QWORD PTR [rcx+0x10]
   140014924:	lea    r8,[rip+0x22fb5]        # 0x1400378e0
   14001492b:	mov    edx,0x38
   140014930:	mov    r9d,eax
   140014933:	call   0x140001f70
   140014938:	mov    edx,ebx
   14001493a:	lea    rcx,[rbp-0x30]
   14001493e:	call   0x140002064
   140014943:	lea    rdx,[rip+0x3483e]        # 0x140049188
   14001494a:	lea    rcx,[rbp-0x30]
   14001494e:	call   0x14002e2da
   140014953:	int3   
   140014954:	mov    rcx,QWORD PTR [rcx+0x10]
   140014958:	lea    r8,[rip+0x22f81]        # 0x1400378e0
   14001495f:	mov    edx,0x39
   140014964:	mov    r9d,eax
   140014967:	call   0x140001f70
   14001496c:	mov    edx,ebx
   14001496e:	lea    rcx,[rbp-0x30]
   140014972:	call   0x140002064
   140014977:	lea    rdx,[rip+0x3480a]        # 0x140049188
   14001497e:	lea    rcx,[rbp-0x30]
   140014982:	call   0x14002e2da
   140014987:	int3   
   140014988:	mov    rcx,QWORD PTR [rcx+0x10]
   14001498c:	lea    r8,[rip+0x22f4d]        # 0x1400378e0
   140014993:	mov    edx,0x3a
   140014998:	mov    r9d,eax
   14001499b:	call   0x140001f70
   1400149a0:	mov    edx,ebx
   1400149a2:	lea    rcx,[rbp-0x30]
   1400149a6:	call   0x140002064
   1400149ab:	lea    rdx,[rip+0x347d6]        # 0x140049188
   1400149b2:	lea    rcx,[rbp-0x30]
   1400149b6:	call   0x14002e2da
   1400149bb:	int3   
   1400149bc:	int3   
   1400149bd:	int3   
   1400149be:	int3   
   1400149bf:	int3   
   1400149c0:	int3   
   1400149c1:	int3   
   1400149c2:	int3   
   1400149c3:	int3   
   1400149c4:	mov    QWORD PTR [rsp+0x8],rcx
   1400149c9:	push   rdi
   1400149ca:	sub    rsp,0x40
   1400149ce:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   1400149d7:	mov    QWORD PTR [rsp+0x68],rbx
   1400149dc:	mov    rbx,rcx
   1400149df:	xor    edi,edi
   1400149e1:	mov    QWORD PTR [rcx],rdi
   1400149e4:	mov    QWORD PTR [rcx+0x8],rdi
   1400149e8:	xor    r8d,r8d
   1400149eb:	xor    edx,edx
   1400149ed:	call   0x14000ded0
   1400149f2:	mov    QWORD PTR [rbx],rax
   1400149f5:	lea    r10,[rbx+0x10]
   1400149f9:	mov    QWORD PTR [r10],rdi
   1400149fc:	mov    QWORD PTR [r10+0x8],rdi
   140014a00:	mov    QWORD PTR [r10+0x10],rdi
   140014a04:	mov    DWORD PTR [rbx+0x38],0x40800000
   140014a0b:	mov    rax,QWORD PTR [rbx]
   140014a0e:	mov    QWORD PTR [rsp+0x58],rax
   140014a13:	mov    rdx,QWORD PTR [r10+0x8]
   140014a17:	mov    rcx,QWORD PTR [r10]
   140014a1a:	cmp    rcx,rcx
   140014a1d:	jne    0x140014a24
   140014a1f:	cmp    rdx,rdx
   140014a22:	je     0x140014a59
   140014a24:	cmp    rcx,rdx
   140014a27:	je     0x140014a5d
   140014a29:	mov    r8,rdx
   140014a2c:	sub    r8,rdx
   140014a2f:	add    r8,0x7
   140014a33:	shr    r8,0x3
   140014a37:	cmp    rdx,rdx
   140014a3a:	cmova  r8,rdi
   140014a3e:	test   r8,r8
   140014a41:	je     0x140014a59
   140014a43:	sub    rdx,rcx
   140014a46:	mov    rax,QWORD PTR [rdx+rcx*1]
   140014a4a:	mov    QWORD PTR [rcx],rax
   140014a4d:	add    rcx,0x8
   140014a51:	inc    rdi
   140014a54:	cmp    rdi,r8
   140014a57:	jne    0x140014a46
   140014a59:	mov    QWORD PTR [r10+0x8],rcx
   140014a5d:	lea    rax,[rsp+0x58]
   140014a62:	mov    QWORD PTR [rsp+0x20],rax
   140014a67:	mov    r9d,0x10
   140014a6d:	mov    r8,QWORD PTR [r10]
   140014a70:	lea    rdx,[rsp+0x60]
   140014a75:	mov    rcx,r10
   140014a78:	call   0x14000dfb4
   140014a7d:	mov    QWORD PTR [rbx+0x28],0x7
   140014a85:	mov    QWORD PTR [rbx+0x30],0x8
   140014a8d:	mov    rax,rbx
   140014a90:	mov    rbx,QWORD PTR [rsp+0x68]
   140014a95:	add    rsp,0x40
   140014a99:	pop    rdi
   140014a9a:	ret    
   140014a9b:	int3   
   140014a9c:	int3   
   140014a9d:	int3   
   140014a9e:	int3   
   140014a9f:	int3   
   140014aa0:	int3   
   140014aa1:	int3   
   140014aa2:	int3   
   140014aa3:	int3   
   140014aa4:	mov    QWORD PTR [rsp+0x8],rbx
   140014aa9:	mov    QWORD PTR [rsp+0x10],rbp
   140014aae:	mov    QWORD PTR [rsp+0x18],rsi
   140014ab3:	push   rdi
   140014ab4:	push   r14
   140014ab6:	push   r15
   140014ab8:	sub    rsp,0x20
   140014abc:	mov    eax,DWORD PTR [r8+0xc]
   140014ac0:	mov    rsi,rdx
   140014ac3:	add    eax,DWORD PTR [r8+0x8]
   140014ac7:	mov    rbp,r8
   140014aca:	add    eax,DWORD PTR [r8+0x4]
   140014ace:	add    eax,DWORD PTR [r8]
   140014ad1:	mov    r10,QWORD PTR [rcx+0x28]
   140014ad5:	imul   r9d,eax,0x62531966
   140014adc:	mov    edx,r9d
   140014adf:	rol    edx,0x15
   140014ae2:	add    edx,r9d
   140014ae5:	and    rdx,r10
   140014ae8:	cmp    QWORD PTR [rcx+0x30],rdx
   140014aec:	ja     0x140014afb
   140014aee:	shr    r10,1
   140014af1:	or     rax,0xffffffffffffffff
   140014af5:	sub    rax,r10
   140014af8:	add    rdx,rax
   140014afb:	mov    r14,QWORD PTR [rcx+0x10]
   140014aff:	lea    r15,[rdx+rdx*1]
   140014b03:	mov    rdi,QWORD PTR [rcx]
   140014b06:	mov    rax,rdx
   140014b09:	add    rax,rax
   140014b0c:	mov    rbx,QWORD PTR [r14+rax*8]
   140014b10:	cmp    QWORD PTR [r14+r15*8],rdi
   140014b14:	jne    0x140014b1b
   140014b16:	mov    rax,rdi
   140014b19:	jmp    0x140014b23
   140014b1b:	mov    rax,QWORD PTR [r14+r15*8+0x8]
   140014b20:	mov    rax,QWORD PTR [rax]
   140014b23:	cmp    rbx,rax
   140014b26:	je     0x140014b60
   140014b28:	lea    rcx,[rbx+0x10]
   140014b2c:	mov    r8d,0x10
   140014b32:	mov    rdx,rbp
   140014b35:	call   0x14002e876
   140014b3a:	test   eax,eax
   140014b3c:	jns    0x140014b43
   140014b3e:	mov    rbx,QWORD PTR [rbx]
   140014b41:	jmp    0x140014b10
   140014b43:	lea    rdx,[rbx+0x10]
   140014b47:	mov    r8d,0x10
   140014b4d:	mov    rcx,rbp
   140014b50:	call   0x14002e876
   140014b55:	test   eax,eax
   140014b57:	cmovs  rbx,rdi
   140014b5b:	mov    QWORD PTR [rsi],rbx
   140014b5e:	jmp    0x140014b63
   140014b60:	mov    QWORD PTR [rsi],rdi
   140014b63:	mov    rbx,QWORD PTR [rsp+0x40]
   140014b68:	mov    rax,rsi
   140014b6b:	mov    rsi,QWORD PTR [rsp+0x50]
   140014b70:	mov    rbp,QWORD PTR [rsp+0x48]
   140014b75:	add    rsp,0x20
   140014b79:	pop    r15
   140014b7b:	pop    r14
   140014b7d:	pop    rdi
   140014b7e:	ret    
   140014b7f:	int3   
   140014b80:	int3   
   140014b81:	int3   
   140014b82:	int3   
   140014b83:	int3   
   140014b84:	int3   
   140014b85:	int3   
   140014b86:	int3   
   140014b87:	int3   
   140014b88:	mov    QWORD PTR [rsp+0x10],rbx
   140014b8d:	mov    QWORD PTR [rsp+0x18],rsi
   140014b92:	push   rdi
   140014b93:	sub    rsp,0x20
   140014b97:	mov    rbx,QWORD PTR [rcx]
   140014b9a:	test   rbx,rbx
   140014b9d:	je     0x140014c04
   140014b9f:	or     eax,0xffffffff
   140014ba2:	lock xadd DWORD PTR [rbx],eax
   140014ba6:	cmp    eax,0x1
   140014ba9:	jne    0x140014c04
   140014bab:	test   rbx,rbx
   140014bae:	je     0x140014c04
   140014bb0:	mov    rdi,QWORD PTR [rbx+0x8]
   140014bb4:	test   rdi,rdi
   140014bb7:	je     0x140014bfb
   140014bb9:	mov    rsi,QWORD PTR [rbx+0x10]
   140014bbd:	jmp    0x140014bdd
   140014bbf:	mov    rcx,QWORD PTR [rdi]
   140014bc2:	test   rcx,rcx
   140014bc5:	je     0x140014bd9
   140014bc7:	or     eax,0xffffffff
   140014bca:	lock xadd DWORD PTR [rcx],eax
   140014bce:	cmp    eax,0x1
   140014bd1:	jne    0x140014bd9
   140014bd3:	call   QWORD PTR [rip+0x1d9ef]        # 0x1400325c8
   140014bd9:	add    rdi,0x8
   140014bdd:	cmp    rdi,rsi
   140014be0:	jne    0x140014bbf
   140014be2:	mov    rcx,QWORD PTR [rbx+0x8]
   140014be6:	call   QWORD PTR [rip+0x1d9dc]        # 0x1400325c8
   140014bec:	and    QWORD PTR [rbx+0x8],0x0
   140014bf1:	and    QWORD PTR [rbx+0x10],0x0
   140014bf6:	and    QWORD PTR [rbx+0x18],0x0
   140014bfb:	mov    rcx,rbx
   140014bfe:	call   QWORD PTR [rip+0x1d9c4]        # 0x1400325c8
   140014c04:	mov    rbx,QWORD PTR [rsp+0x38]
   140014c09:	mov    rsi,QWORD PTR [rsp+0x40]
   140014c0e:	add    rsp,0x20
   140014c12:	pop    rdi
   140014c13:	ret    
   140014c14:	int3   
   140014c15:	int3   
   140014c16:	int3   
   140014c17:	int3   
   140014c18:	int3   
   140014c19:	int3   
   140014c1a:	int3   
   140014c1b:	int3   
   140014c1c:	mov    QWORD PTR [rsp+0x8],rbx
   140014c21:	mov    QWORD PTR [rsp+0x10],rsi
   140014c26:	push   rdi
   140014c27:	sub    rsp,0x20
   140014c2b:	mov    rdi,QWORD PTR [rcx]
   140014c2e:	mov    rbx,rcx
   140014c31:	test   rdi,rdi
   140014c34:	je     0x140014c65
   140014c36:	mov    rsi,QWORD PTR [rcx+0x8]
   140014c3a:	jmp    0x140014c49
   140014c3c:	mov    rcx,QWORD PTR [rdi]
   140014c3f:	call   QWORD PTR [rip+0x1d70b]        # 0x140032350
   140014c45:	add    rdi,0x8
   140014c49:	cmp    rdi,rsi
   140014c4c:	jne    0x140014c3c
   140014c4e:	mov    rcx,QWORD PTR [rbx]
   140014c51:	call   QWORD PTR [rip+0x1d971]        # 0x1400325c8
   140014c57:	and    QWORD PTR [rbx],0x0
   140014c5b:	and    QWORD PTR [rbx+0x8],0x0
   140014c60:	and    QWORD PTR [rbx+0x10],0x0
   140014c65:	mov    rbx,QWORD PTR [rsp+0x30]
   140014c6a:	mov    rsi,QWORD PTR [rsp+0x38]
   140014c6f:	add    rsp,0x20
   140014c73:	pop    rdi
   140014c74:	ret    
   140014c75:	int3   
   140014c76:	int3   
   140014c77:	int3   
   140014c78:	int3   
   140014c79:	int3   
   140014c7a:	int3   
   140014c7b:	int3   
   140014c7c:	mov    QWORD PTR [rsp+0x10],rbx
   140014c81:	push   rdi
   140014c82:	sub    rsp,0x20
   140014c86:	mov    rdi,QWORD PTR [rcx+0x10]
   140014c8a:	test   rdi,rdi
   140014c8d:	je     0x140014cba
   140014c8f:	or     eax,0xffffffff
   140014c92:	lock xadd DWORD PTR [rdi+0x8],eax
   140014c97:	cmp    eax,0x1
   140014c9a:	jne    0x140014cba
   140014c9c:	test   rdi,rdi
   140014c9f:	je     0x140014cba
   140014ca1:	mov    rax,QWORD PTR [rdi]
   140014ca4:	mov    rbx,QWORD PTR [rax]
   140014ca7:	mov    rcx,rbx
   140014caa:	call   QWORD PTR [rip+0x1d9f8]        # 0x1400326a8
   140014cb0:	mov    edx,0x1
   140014cb5:	mov    rcx,rdi
   140014cb8:	call   rbx
   140014cba:	mov    rbx,QWORD PTR [rsp+0x38]
   140014cbf:	add    rsp,0x20
   140014cc3:	pop    rdi
   140014cc4:	ret    
   140014cc5:	int3   
   140014cc6:	int3   
   140014cc7:	int3   
   140014cc8:	int3   
   140014cc9:	int3   
   140014cca:	int3   
   140014ccb:	int3   
   140014ccc:	mov    QWORD PTR [rsp+0x10],rbx
   140014cd1:	mov    QWORD PTR [rsp+0x18],rbp
   140014cd6:	push   rsi
   140014cd7:	push   rdi
   140014cd8:	push   r14
   140014cda:	sub    rsp,0x20
   140014cde:	mov    rax,QWORD PTR [rcx]
   140014ce1:	mov    rdi,rcx
   140014ce4:	mov    rsi,QWORD PTR [rax]
   140014ce7:	mov    QWORD PTR [rax],rax
   140014cea:	mov    rax,QWORD PTR [rcx]
   140014ced:	mov    QWORD PTR [rax+0x8],rax
   140014cf1:	and    QWORD PTR [rcx+0x8],0x0
   140014cf6:	cmp    rsi,QWORD PTR [rcx]
   140014cf9:	je     0x140014d44
   140014cfb:	mov    r14,QWORD PTR [rsi+0x20]
   140014cff:	mov    rbp,QWORD PTR [rsi]
   140014d02:	test   r14,r14
   140014d05:	je     0x140014d33
   140014d07:	or     eax,0xffffffff
   140014d0a:	lock xadd DWORD PTR [r14+0x8],eax
   140014d10:	cmp    eax,0x1
   140014d13:	jne    0x140014d33
   140014d15:	test   r14,r14
   140014d18:	je     0x140014d33
   140014d1a:	mov    rax,QWORD PTR [r14]
   140014d1d:	mov    rbx,QWORD PTR [rax]
   140014d20:	mov    rcx,rbx
   140014d23:	call   QWORD PTR [rip+0x1d97f]        # 0x1400326a8
   140014d29:	mov    edx,0x1
   140014d2e:	mov    rcx,r14
   140014d31:	call   rbx
   140014d33:	mov    rcx,rsi
   140014d36:	call   QWORD PTR [rip+0x1d88c]        # 0x1400325c8
   140014d3c:	mov    rsi,rbp
   140014d3f:	cmp    rbp,QWORD PTR [rdi]
   140014d42:	jne    0x140014cfb
   140014d44:	mov    rcx,QWORD PTR [rdi]
   140014d47:	mov    rbx,QWORD PTR [rsp+0x48]
   140014d4c:	mov    rbp,QWORD PTR [rsp+0x50]
   140014d51:	add    rsp,0x20
   140014d55:	pop    r14
   140014d57:	pop    rdi
   140014d58:	pop    rsi
   140014d59:	rex.W jmp QWORD PTR [rip+0x1d868]        # 0x1400325c8
   140014d60:	int3   
   140014d61:	int3   
   140014d62:	int3   
   140014d63:	int3   
   140014d64:	int3   
   140014d65:	int3   
   140014d66:	int3   
   140014d67:	int3   
   140014d68:	mov    rax,rsp
   140014d6b:	push   r12
   140014d6d:	push   r14
   140014d6f:	push   r15
   140014d71:	sub    rsp,0x40
   140014d75:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   140014d7d:	mov    QWORD PTR [rax+0x8],rbx
   140014d81:	mov    QWORD PTR [rax+0x18],rsi
   140014d85:	mov    QWORD PTR [rax+0x20],rdi
   140014d89:	mov    r14,rdx
   140014d8c:	mov    rdi,rcx
   140014d8f:	xor    ebx,ebx
   140014d91:	mov    QWORD PTR [rsp+0x68],rbx
   140014d96:	test   rdx,rdx
   140014d99:	je     0x140014dc6
   140014d9b:	movabs rax,0x1fffffffffffffff
   140014da5:	cmp    rdx,rax
   140014da8:	ja     0x140014dc0
   140014daa:	mov    rcx,rdx
   140014dad:	shl    rcx,0x3
   140014db1:	call   0x140023f10
   140014db6:	mov    rbx,rax
   140014db9:	mov    QWORD PTR [rsp+0x68],rax
   140014dbe:	jmp    0x140014dc6
   140014dc0:	call   0x14000203c
   140014dc5:	nop
   140014dc6:	mov    r8,rbx
   140014dc9:	mov    rdx,QWORD PTR [rdi+0x8]
   140014dcd:	mov    rcx,QWORD PTR [rdi]
   140014dd0:	call   0x14001527c
   140014dd5:	nop
   140014dd6:	mov    r12,QWORD PTR [rdi+0x8]
   140014dda:	mov    rsi,QWORD PTR [rdi]
   140014ddd:	mov    r15,r12
   140014de0:	sub    r15,rsi
   140014de3:	sar    r15,0x3
   140014de7:	test   rsi,rsi
   140014dea:	je     0x140014e1a
   140014dec:	jmp    0x140014e0c
   140014dee:	mov    rcx,QWORD PTR [rsi]
   140014df1:	test   rcx,rcx
   140014df4:	je     0x140014e08
   140014df6:	or     eax,0xffffffff
   140014df9:	lock xadd DWORD PTR [rcx],eax
   140014dfd:	cmp    eax,0x1
   140014e00:	jne    0x140014e08
   140014e02:	call   QWORD PTR [rip+0x1d7c0]        # 0x1400325c8
   140014e08:	add    rsi,0x8
   140014e0c:	cmp    rsi,r12
   140014e0f:	jne    0x140014dee
   140014e11:	mov    rcx,QWORD PTR [rdi]
   140014e14:	call   QWORD PTR [rip+0x1d7ae]        # 0x1400325c8
   140014e1a:	lea    rax,[rbx+r14*8]
   140014e1e:	mov    QWORD PTR [rdi+0x10],rax
   140014e22:	lea    rax,[rbx+r15*8]
   140014e26:	mov    QWORD PTR [rdi+0x8],rax
   140014e2a:	mov    QWORD PTR [rdi],rbx
   140014e2d:	mov    rbx,QWORD PTR [rsp+0x60]
   140014e32:	mov    rsi,QWORD PTR [rsp+0x70]
   140014e37:	mov    rdi,QWORD PTR [rsp+0x78]
   140014e3c:	add    rsp,0x40
   140014e40:	pop    r15
   140014e42:	pop    r14
   140014e44:	pop    r12
   140014e46:	ret    
   140014e47:	int3   
   140014e48:	int3   
   140014e49:	int3   
   140014e4a:	int3   
   140014e4b:	int3   
   140014e4c:	int3   
   140014e4d:	int3   
   140014e4e:	int3   
   140014e4f:	int3   
   140014e50:	mov    rax,rsp
   140014e53:	push   r14
   140014e55:	sub    rsp,0x30
   140014e59:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140014e61:	mov    QWORD PTR [rax+0x8],rbx
   140014e65:	mov    QWORD PTR [rax+0x18],rsi
   140014e69:	mov    QWORD PTR [rax+0x20],rdi
   140014e6d:	mov    rsi,rdx
   140014e70:	mov    rdi,rcx
   140014e73:	xor    ebx,ebx
   140014e75:	mov    QWORD PTR [rsp+0x48],rbx
   140014e7a:	test   rdx,rdx
   140014e7d:	je     0x140014eaa
   140014e7f:	movabs rax,0x3fffffffffffffff
   140014e89:	cmp    rdx,rax
   140014e8c:	ja     0x140014ea4
   140014e8e:	mov    rcx,rdx
   140014e91:	shl    rcx,0x2
   140014e95:	call   0x140023f10
   140014e9a:	mov    rbx,rax
   140014e9d:	mov    QWORD PTR [rsp+0x48],rax
   140014ea2:	jmp    0x140014eaa
   140014ea4:	call   0x14000203c
   140014ea9:	nop
   140014eaa:	mov    r8,QWORD PTR [rdi+0x8]
   140014eae:	sub    r8,QWORD PTR [rdi]
   140014eb1:	and    r8,0xfffffffffffffffc
   140014eb5:	mov    rdx,QWORD PTR [rdi]
   140014eb8:	mov    rcx,rbx
   140014ebb:	call   QWORD PTR [rip+0x1d5df]        # 0x1400324a0
   140014ec1:	nop
   140014ec2:	mov    rcx,QWORD PTR [rdi]
   140014ec5:	mov    r14,QWORD PTR [rdi+0x8]
   140014ec9:	sub    r14,rcx
   140014ecc:	sar    r14,0x2
   140014ed0:	test   rcx,rcx
   140014ed3:	je     0x140014edb
   140014ed5:	call   QWORD PTR [rip+0x1d6ed]        # 0x1400325c8
   140014edb:	lea    rax,[rbx+rsi*4]
   140014edf:	mov    QWORD PTR [rdi+0x10],rax
   140014ee3:	lea    rax,[rbx+r14*4]
   140014ee7:	mov    QWORD PTR [rdi+0x8],rax
   140014eeb:	mov    QWORD PTR [rdi],rbx
   140014eee:	mov    rbx,QWORD PTR [rsp+0x40]
   140014ef3:	mov    rsi,QWORD PTR [rsp+0x50]
   140014ef8:	mov    rdi,QWORD PTR [rsp+0x58]
   140014efd:	add    rsp,0x30
   140014f01:	pop    r14
   140014f03:	ret    
   140014f04:	int3   
   140014f05:	int3   
   140014f06:	int3   
   140014f07:	int3   
   140014f08:	int3   
   140014f09:	int3   
   140014f0a:	int3   
   140014f0b:	int3   
   140014f0c:	mov    QWORD PTR [rsp+0x20],r9
   140014f11:	mov    QWORD PTR [rsp+0x8],rcx
   140014f16:	push   rbx
   140014f17:	push   rsi
   140014f18:	push   rdi
   140014f19:	push   r12
   140014f1b:	push   r13
   140014f1d:	push   r14
   140014f1f:	push   r15
   140014f21:	sub    rsp,0x30
   140014f25:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140014f2e:	mov    rbx,r9
   140014f31:	mov    r13,r8
   140014f34:	mov    r12,rdx
   140014f37:	mov    r14,rcx
   140014f3a:	mov    eax,DWORD PTR [r8+0xc]
   140014f3e:	add    eax,DWORD PTR [r8+0x8]
   140014f42:	add    eax,DWORD PTR [r8+0x4]
   140014f46:	add    eax,DWORD PTR [r8]
   140014f49:	imul   r9d,eax,0x62531966
   140014f50:	mov    r15d,r9d
   140014f53:	rol    r15d,0x15
   140014f57:	add    r15d,r9d
   140014f5a:	mov    rcx,QWORD PTR [rcx+0x28]
   140014f5e:	and    r15,rcx
   140014f61:	cmp    QWORD PTR [r14+0x30],r15
   140014f65:	ja     0x140014f74
   140014f67:	shr    rcx,1
   140014f6a:	or     rax,0xffffffffffffffff
   140014f6e:	sub    rax,rcx
   140014f71:	add    r15,rax
   140014f74:	mov    rsi,r15
   140014f77:	add    rsi,rsi
   140014f7a:	mov    rcx,QWORD PTR [r14+0x10]
   140014f7e:	mov    rax,QWORD PTR [rcx+rsi*8]
   140014f82:	cmp    rax,QWORD PTR [r14]
   140014f85:	jne    0x140014f8c
   140014f87:	mov    rdi,QWORD PTR [r14]
   140014f8a:	jmp    0x140014f94
   140014f8c:	mov    rdi,QWORD PTR [rcx+rsi*8+0x8]
   140014f91:	mov    rdi,QWORD PTR [rdi]
   140014f94:	cmp    rdi,rax
   140014f97:	je     0x140015052
   140014f9d:	add    r15,r15
   140014fa0:	mov    rdi,QWORD PTR [rdi+0x8]
   140014fa4:	lea    rdx,[rdi+0x10]
   140014fa8:	mov    r8d,0x10
   140014fae:	mov    rcx,r13
   140014fb1:	call   0x14002e876
   140014fb6:	test   eax,eax
   140014fb8:	jns    0x140014fc9
   140014fba:	mov    rax,QWORD PTR [r14+0x10]
   140014fbe:	cmp    rdi,QWORD PTR [rax+r15*8]
   140014fc2:	jne    0x140014fa0
   140014fc4:	jmp    0x140015052
   140014fc9:	lea    rcx,[rdi+0x10]
   140014fcd:	mov    r8d,0x10
   140014fd3:	mov    rdx,r13
   140014fd6:	call   0x14002e876
   140014fdb:	test   eax,eax
   140014fdd:	jns    0x140014fe4
   140014fdf:	mov    rdi,QWORD PTR [rdi]
   140014fe2:	jmp    0x140015052
   140014fe4:	cmp    rbx,QWORD PTR [r14]
   140014fe7:	je     0x140015040
   140014fe9:	mov    rcx,QWORD PTR [rbx+0x8]
   140014fed:	mov    rax,QWORD PTR [rbx]
   140014ff0:	mov    QWORD PTR [rcx],rax
   140014ff3:	mov    rcx,QWORD PTR [rbx]
   140014ff6:	mov    rax,QWORD PTR [rbx+0x8]
   140014ffa:	mov    QWORD PTR [rcx+0x8],rax
   140014ffe:	mov    r15,QWORD PTR [rbx+0x20]
   140015002:	test   r15,r15
   140015005:	je     0x140015033
   140015007:	or     eax,0xffffffff
   14001500a:	lock xadd DWORD PTR [r15+0x8],eax
   140015010:	cmp    eax,0x1
   140015013:	jne    0x140015033
   140015015:	test   r15,r15
   140015018:	je     0x140015033
   14001501a:	mov    rax,QWORD PTR [r15]
   14001501d:	mov    rsi,QWORD PTR [rax]
   140015020:	mov    rcx,rsi
   140015023:	call   QWORD PTR [rip+0x1d67f]        # 0x1400326a8
   140015029:	mov    edx,0x1
   14001502e:	mov    rcx,r15
   140015031:	call   rsi
   140015033:	mov    rcx,rbx
   140015036:	call   QWORD PTR [rip+0x1d58c]        # 0x1400325c8
   14001503c:	dec    QWORD PTR [r14+0x8]
   140015040:	mov    QWORD PTR [r12],rdi
   140015044:	mov    BYTE PTR [r12+0x8],0x0
   14001504a:	mov    rax,r12
   14001504d:	jmp    0x1400150e7
   140015052:	mov    rax,QWORD PTR [rbx]
   140015055:	cmp    rdi,rax
   140015058:	je     0x140015087
   14001505a:	mov    rcx,QWORD PTR [rbx+0x8]
   14001505e:	mov    QWORD PTR [rcx],rax
   140015061:	mov    rcx,QWORD PTR [rax+0x8]
   140015065:	mov    QWORD PTR [rcx],rdi
   140015068:	mov    rcx,QWORD PTR [rdi+0x8]
   14001506c:	mov    QWORD PTR [rcx],rbx
   14001506f:	mov    rdx,QWORD PTR [rdi+0x8]
   140015073:	mov    rcx,QWORD PTR [rax+0x8]
   140015077:	mov    QWORD PTR [rdi+0x8],rcx
   14001507b:	mov    rcx,QWORD PTR [rbx+0x8]
   14001507f:	mov    QWORD PTR [rax+0x8],rcx
   140015083:	mov    QWORD PTR [rbx+0x8],rdx
   140015087:	mov    rdx,QWORD PTR [r14+0x10]
   14001508b:	mov    rax,QWORD PTR [rdx+rsi*8]
   14001508f:	cmp    rax,QWORD PTR [r14]
   140015092:	jne    0x1400150a3
   140015094:	mov    QWORD PTR [rdx+rsi*8],rbx
   140015098:	mov    rax,QWORD PTR [r14+0x10]
   14001509c:	mov    QWORD PTR [rax+rsi*8+0x8],rbx
   1400150a1:	jmp    0x1400150d2
   1400150a3:	cmp    rax,rdi
   1400150a6:	jne    0x1400150ae
   1400150a8:	mov    QWORD PTR [rdx+rsi*8],rbx
   1400150ac:	jmp    0x1400150d2
   1400150ae:	mov    rax,QWORD PTR [rdx+rsi*8+0x8]
   1400150b3:	mov    rcx,QWORD PTR [rax]
   1400150b6:	mov    QWORD PTR [rdx+rsi*8+0x8],rcx
   1400150bb:	cmp    rcx,rbx
   1400150be:	je     0x1400150d2
   1400150c0:	mov    rdx,QWORD PTR [r14+0x10]
   1400150c4:	mov    rax,QWORD PTR [rdx+rsi*8+0x8]
   1400150c9:	mov    rcx,QWORD PTR [rax+0x8]
   1400150cd:	mov    QWORD PTR [rdx+rsi*8+0x8],rcx
   1400150d2:	mov    rcx,r14
   1400150d5:	call   0x140015190
   1400150da:	mov    QWORD PTR [r12],rbx
   1400150de:	mov    BYTE PTR [r12+0x8],0x1
   1400150e4:	mov    rax,r12
   1400150e7:	add    rsp,0x30
   1400150eb:	pop    r15
   1400150ed:	pop    r14
   1400150ef:	pop    r13
   1400150f1:	pop    r12
   1400150f3:	pop    rdi
   1400150f4:	pop    rsi
   1400150f5:	pop    rbx
   1400150f6:	ret    
   1400150f7:	int3   
   1400150f8:	int3   
   1400150f9:	int3   
   1400150fa:	int3   
   1400150fb:	int3   
   1400150fc:	int3   
   1400150fd:	int3   
   1400150fe:	int3   
   1400150ff:	int3   
   140015100:	mov    QWORD PTR [rsp+0x10],rbx
   140015105:	mov    QWORD PTR [rsp+0x18],rbp
   14001510a:	mov    QWORD PTR [rsp+0x20],rsi
   14001510f:	push   rdi
   140015110:	sub    rsp,0x20
   140015114:	mov    rdi,rdx
   140015117:	mov    rbp,rcx
   14001511a:	cmp    rdx,QWORD PTR [rcx]
   14001511d:	je     0x140015175
   14001511f:	mov    rdx,QWORD PTR [rdx+0x8]
   140015123:	mov    rax,QWORD PTR [rdi]
   140015126:	mov    QWORD PTR [rdx],rax
   140015129:	mov    rdx,QWORD PTR [rdi]
   14001512c:	mov    rax,QWORD PTR [rdi+0x8]
   140015130:	mov    QWORD PTR [rdx+0x8],rax
   140015134:	mov    rsi,QWORD PTR [rdi+0x20]
   140015138:	test   rsi,rsi
   14001513b:	je     0x140015168
   14001513d:	or     eax,0xffffffff
   140015140:	lock xadd DWORD PTR [rsi+0x8],eax
   140015145:	cmp    eax,0x1
   140015148:	jne    0x140015168
   14001514a:	test   rsi,rsi
   14001514d:	je     0x140015168
   14001514f:	mov    rax,QWORD PTR [rsi]
   140015152:	mov    rbx,QWORD PTR [rax]
   140015155:	mov    rcx,rbx
   140015158:	call   QWORD PTR [rip+0x1d54a]        # 0x1400326a8
   14001515e:	mov    edx,0x1
   140015163:	mov    rcx,rsi
   140015166:	call   rbx
   140015168:	mov    rcx,rdi
   14001516b:	call   QWORD PTR [rip+0x1d457]        # 0x1400325c8
   140015171:	dec    QWORD PTR [rbp+0x8]
   140015175:	mov    rbx,QWORD PTR [rsp+0x38]
   14001517a:	mov    rbp,QWORD PTR [rsp+0x40]
   14001517f:	mov    rsi,QWORD PTR [rsp+0x48]
   140015184:	add    rsp,0x20
   140015188:	pop    rdi
   140015189:	ret    
   14001518a:	int3   
   14001518b:	int3   
   14001518c:	int3   
   14001518d:	int3   
   14001518e:	int3   
   14001518f:	int3   
   140015190:	mov    QWORD PTR [rsp+0x18],rbx
   140015195:	mov    QWORD PTR [rsp+0x20],rsi
   14001519a:	push   rdi
   14001519b:	sub    rsp,0x40
   14001519f:	mov    rax,QWORD PTR [rcx+0x8]
   1400151a3:	xorps  xmm0,xmm0
   1400151a6:	mov    rbx,QWORD PTR [rcx+0x30]
   1400151aa:	mov    rsi,rcx
   1400151ad:	movss  xmm2,DWORD PTR [rip+0x282e3]        # 0x14003d498
   1400151b5:	cvtsi2ss xmm0,rax
   1400151ba:	test   rax,rax
   1400151bd:	jns    0x1400151c3
   1400151bf:	addss  xmm0,xmm2
   1400151c3:	xorps  xmm1,xmm1
   1400151c6:	cvtsi2ss xmm1,rbx
   1400151cb:	test   rbx,rbx
   1400151ce:	jns    0x1400151d4
   1400151d0:	addss  xmm1,xmm2
   1400151d4:	divss  xmm0,xmm1
   1400151d8:	comiss xmm0,DWORD PTR [rcx+0x38]
   1400151dc:	jbe    0x140015265
   1400151e2:	cmp    rbx,0x200
   1400151e9:	jae    0x1400151f1
   1400151eb:	shl    rbx,0x3
   1400151ef:	jmp    0x140015203
   1400151f1:	movabs rax,0xfffffffffffffff
   1400151fb:	cmp    rbx,rax
   1400151fe:	jae    0x140015203
   140015200:	add    rbx,rbx
   140015203:	mov    rax,QWORD PTR [rsi]
   140015206:	lea    r9,[rbx+rbx*1]
   14001520a:	add    rcx,0x10
   14001520e:	mov    QWORD PTR [rsp+0x50],rax
   140015213:	lea    rax,[rsp+0x50]
   140015218:	lea    rdx,[rsp+0x58]
   14001521d:	mov    QWORD PTR [rsp+0x20],rax
   140015222:	mov    r8,QWORD PTR [rcx]
   140015225:	mov    QWORD PTR [rcx+0x8],r8
   140015229:	call   0x14000dfb4
   14001522e:	lea    rax,[rbx-0x1]
   140015232:	mov    QWORD PTR [rsi+0x30],rbx
   140015236:	mov    QWORD PTR [rsi+0x28],rax
   14001523a:	mov    rax,QWORD PTR [rsi]
   14001523d:	cmp    QWORD PTR [rax],rax
   140015240:	je     0x140015265
   140015242:	mov    rdi,QWORD PTR [rax+0x8]
   140015246:	mov    rbx,QWORD PTR [rsi]
   140015249:	lea    rdx,[rsp+0x30]
   14001524e:	mov    rcx,rsi
   140015251:	mov    rbx,QWORD PTR [rbx]
   140015254:	mov    r9,rbx
   140015257:	lea    r8,[rbx+0x10]
   14001525b:	call   0x140014f0c
   140015260:	cmp    rbx,rdi
   140015263:	jne    0x140015246
   140015265:	mov    rbx,QWORD PTR [rsp+0x60]
   14001526a:	mov    rsi,QWORD PTR [rsp+0x68]
   14001526f:	add    rsp,0x40
   140015273:	pop    rdi
   140015274:	ret    
   140015275:	int3   
   140015276:	int3   
   140015277:	int3   
   140015278:	int3   
   140015279:	int3   
   14001527a:	int3   
   14001527b:	int3   
   14001527c:	mov    QWORD PTR [rsp+0x20],r9
   140015281:	mov    QWORD PTR [rsp+0x18],r8
   140015286:	sub    rsp,0x38
   14001528a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140015293:	mov    QWORD PTR [rsp+0x58],r8
   140015298:	jmp    0x1400152b6
   14001529a:	test   r8,r8
   14001529d:	je     0x1400152a9
   14001529f:	mov    rax,QWORD PTR [rcx]
   1400152a2:	mov    QWORD PTR [r8],rax
   1400152a5:	and    QWORD PTR [rcx],0x0
   1400152a9:	add    r8,0x8
   1400152ad:	mov    QWORD PTR [rsp+0x50],r8
   1400152b2:	add    rcx,0x8
   1400152b6:	cmp    rcx,rdx
   1400152b9:	jne    0x14001529a
   1400152bb:	mov    rax,r8
   1400152be:	add    rsp,0x38
   1400152c2:	ret    
   1400152c3:	int3   
   1400152c4:	int3   
   1400152c5:	int3   
   1400152c6:	int3   
   1400152c7:	int3   
   1400152c8:	int3   
   1400152c9:	int3   
   1400152ca:	int3   
   1400152cb:	int3   
   1400152cc:	mov    QWORD PTR [rsp+0x8],rcx
   1400152d1:	push   rbx
   1400152d2:	sub    rsp,0x30
   1400152d6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400152df:	mov    rbx,r9
   1400152e2:	call   0x14000ded0
   1400152e7:	mov    QWORD PTR [rsp+0x40],rax
   1400152ec:	lea    rdx,[rax+0x10]
   1400152f0:	test   rdx,rdx
   1400152f3:	je     0x140015309
   1400152f5:	movups xmm0,XMMWORD PTR [rbx]
   1400152f8:	movdqu XMMWORD PTR [rdx],xmm0
   1400152fc:	mov    rcx,QWORD PTR [rbx+0x10]
   140015300:	mov    QWORD PTR [rdx+0x10],rcx
   140015304:	and    QWORD PTR [rbx+0x10],0x0
   140015309:	add    rsp,0x30
   14001530d:	pop    rbx
   14001530e:	ret    
   14001530f:	int3   
   140015310:	int3   
   140015311:	int3   
   140015312:	int3   
   140015313:	int3   
   140015314:	int3   
   140015315:	int3   
   140015316:	int3   
   140015317:	int3   
   140015318:	sub    rsp,0x28
   14001531c:	mov    rcx,QWORD PTR [rcx]
   14001531f:	test   rcx,rcx
   140015322:	je     0x14001532a
   140015324:	call   QWORD PTR [rip+0x1d29e]        # 0x1400325c8
   14001532a:	add    rsp,0x28
   14001532e:	ret    
   14001532f:	int3   
   140015330:	int3   
   140015331:	int3   
   140015332:	int3   
   140015333:	int3   
   140015334:	int3   
   140015335:	int3   
   140015336:	int3   
   140015337:	int3   
   140015338:	mov    QWORD PTR [rsp+0x8],rbx
   14001533d:	mov    QWORD PTR [rsp+0x18],rsi
   140015342:	push   rdi
   140015343:	sub    rsp,0x20
   140015347:	mov    ebx,edx
   140015349:	mov    rdi,rcx
   14001534c:	cmp    DWORD PTR [rcx+0x68],edx
   14001534f:	je     0x1400153b7
   140015351:	add    rcx,0x40
   140015355:	call   QWORD PTR [rip+0x1cdad]        # 0x140032108
   14001535b:	mov    rax,QWORD PTR [rdi]
   14001535e:	mov    DWORD PTR [rdi+0x68],ebx
   140015361:	mov    rbx,QWORD PTR [rax]
   140015364:	cmp    rbx,rax
   140015367:	je     0x1400153ad
   140015369:	mov    rcx,QWORD PTR [rbx+0x20]
   14001536d:	test   rcx,rcx
   140015370:	je     0x140015375
   140015372:	lock inc DWORD PTR [rcx]
   140015375:	mov    eax,DWORD PTR [rdi+0x68]
   140015378:	imul   edx,eax,0x3c
   14001537b:	mov    DWORD PTR [rcx+0x4],0x1
   140015382:	imul   rax,rdx,0x989680
   140015389:	shr    rax,0x10
   14001538d:	mov    DWORD PTR [rcx+0x8],eax
   140015390:	mov    DWORD PTR [rcx+0xc],eax
   140015393:	or     eax,0xffffffff
   140015396:	lock xadd DWORD PTR [rcx],eax
   14001539a:	cmp    eax,0x1
   14001539d:	jne    0x1400153a5
   14001539f:	call   QWORD PTR [rip+0x1d223]        # 0x1400325c8
   1400153a5:	mov    rbx,QWORD PTR [rbx]
   1400153a8:	cmp    rbx,QWORD PTR [rdi]
   1400153ab:	jne    0x140015369
   1400153ad:	lea    rcx,[rdi+0x40]
   1400153b1:	call   QWORD PTR [rip+0x1cd41]        # 0x1400320f8
   1400153b7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400153bc:	mov    rsi,QWORD PTR [rsp+0x40]
   1400153c1:	add    rsp,0x20
   1400153c5:	pop    rdi
   1400153c6:	ret    
   1400153c7:	int3   
   1400153c8:	int3   
   1400153c9:	int3   
   1400153ca:	int3   
   1400153cb:	int3   
   1400153cc:	int3   
   1400153cd:	int3   
   1400153ce:	int3   
   1400153cf:	int3   
   1400153d0:	rex push rbp
   1400153d2:	push   rbx
   1400153d3:	push   rsi
   1400153d4:	push   rdi
   1400153d5:	push   r12
   1400153d7:	push   r14
   1400153d9:	push   r15
   1400153db:	mov    rbp,rsp
   1400153de:	sub    rsp,0x40
   1400153e2:	mov    QWORD PTR [rbp-0x10],0xfffffffffffffffe
   1400153ea:	mov    r12,rdx
   1400153ed:	mov    r14,rcx
   1400153f0:	lea    r15,[rcx+0x40]
   1400153f4:	mov    QWORD PTR [rbp-0x8],r15
   1400153f8:	mov    rcx,r15
   1400153fb:	call   QWORD PTR [rip+0x1cd07]        # 0x140032108
   140015401:	nop
   140015402:	and    QWORD PTR [rbp+0x50],0x0
   140015407:	mov    r8,r12
   14001540a:	lea    rdx,[rbp-0x18]
   14001540e:	mov    rcx,r14
   140015411:	call   0x1400156d4
   140015416:	mov    rbx,QWORD PTR [rbp-0x18]
   14001541a:	cmp    rbx,QWORD PTR [r14]
   14001541d:	je     0x140015439
   14001541f:	mov    rbx,QWORD PTR [rbx+0x20]
   140015423:	mov    esi,0x1
   140015428:	test   rbx,rbx
   14001542b:	je     0x140015430
   14001542d:	lock add DWORD PTR [rbx],esi
   140015430:	mov    QWORD PTR [rbp+0x50],rbx
   140015434:	jmp    0x1400154ce
   140015439:	mov    ecx,0x18
   14001543e:	call   0x140023f10
   140015443:	mov    rdi,rax
   140015446:	mov    ebx,DWORD PTR [r14+0x68]
   14001544a:	and    DWORD PTR [rax],0x0
   14001544d:	and    DWORD PTR [rbp+0x58],0x0
   140015451:	and    DWORD PTR [rbp+0x5c],0x0
   140015455:	lea    rcx,[rbp+0x58]
   140015459:	call   QWORD PTR [rip+0x1cd09]        # 0x140032168
   14001545f:	mov    ecx,DWORD PTR [rbp+0x58]
   140015462:	mov    DWORD PTR [rbp+0x40],ecx
   140015465:	mov    ecx,DWORD PTR [rbp+0x5c]
   140015468:	mov    DWORD PTR [rbp+0x44],ecx
   14001546b:	mov    rcx,QWORD PTR [rbp+0x40]
   14001546f:	sar    rcx,0x10
   140015473:	mov    DWORD PTR [rdi+0x10],ecx
   140015476:	mov    DWORD PTR [rdi+0x14],0x0
   14001547d:	mov    esi,0x1
   140015482:	mov    DWORD PTR [rdi+0x4],esi
   140015485:	imul   ecx,ebx,0x3c
   140015488:	imul   rax,rcx,0x989680
   14001548f:	shr    rax,0x10
   140015493:	mov    DWORD PTR [rdi+0x8],eax
   140015496:	mov    DWORD PTR [rdi+0xc],eax
   140015499:	lock add DWORD PTR [rdi],esi
   14001549c:	mov    QWORD PTR [rbp+0x50],rdi
   1400154a0:	mov    rdx,r12
   1400154a3:	mov    rcx,r14
   1400154a6:	call   0x140015598
   1400154ab:	lock add DWORD PTR [rdi],esi
   1400154ae:	mov    rcx,QWORD PTR [rax]
   1400154b1:	mov    QWORD PTR [rax],rdi
   1400154b4:	test   rcx,rcx
   1400154b7:	je     0x1400154ca
   1400154b9:	or     eax,0xffffffff
   1400154bc:	lock xadd DWORD PTR [rcx],eax
   1400154c0:	cmp    eax,esi
   1400154c2:	jne    0x1400154ca
   1400154c4:	call   QWORD PTR [rip+0x1d0fe]        # 0x1400325c8
   1400154ca:	mov    rbx,QWORD PTR [rbp+0x50]
   1400154ce:	mov    edi,DWORD PTR [rbx+0x10]
   1400154d1:	and    DWORD PTR [rbp-0x20],0x0
   1400154d5:	and    DWORD PTR [rbp-0x1c],0x0
   1400154d9:	lea    rcx,[rbp-0x20]
   1400154dd:	call   QWORD PTR [rip+0x1cc85]        # 0x140032168
   1400154e3:	mov    eax,DWORD PTR [rbp-0x20]
   1400154e6:	mov    DWORD PTR [rbp+0x40],eax
   1400154e9:	mov    eax,DWORD PTR [rbp-0x1c]
   1400154ec:	mov    DWORD PTR [rbp+0x44],eax
   1400154ef:	mov    r8,QWORD PTR [rbp+0x40]
   1400154f3:	sar    r8,0x10
   1400154f7:	mov    edx,r8d
   1400154fa:	sub    edx,edi
   1400154fc:	mov    ecx,esi
   1400154fe:	lock xadd DWORD PTR [rbx+0x14],ecx
   140015503:	add    ecx,esi
   140015505:	mov    eax,DWORD PTR [rbx+0x4]
   140015508:	cmp    ecx,eax
   14001550a:	ja     0x140015513
   14001550c:	cmp    edx,DWORD PTR [rbx+0x8]
   14001550f:	ja     0x140015531
   140015511:	jmp    0x14001554f
   140015513:	inc    eax
   140015515:	cmp    ecx,eax
   140015517:	jne    0x140015525
   140015519:	cmp    edx,DWORD PTR [rbx+0x8]
   14001551c:	ja     0x140015531
   14001551e:	mov    esi,0x3
   140015523:	jmp    0x14001554f
   140015525:	cmp    edx,DWORD PTR [rbx+0xc]
   140015528:	ja     0x140015531
   14001552a:	mov    esi,0x2
   14001552f:	jmp    0x14001554f
   140015531:	mov    eax,edi
   140015533:	lock cmpxchg DWORD PTR [rbx+0x10],r8d
   140015539:	cmp    edi,eax
   14001553b:	jne    0x14001554f
   14001553d:	xor    esi,esi
   14001553f:	cmp    ecx,DWORD PTR [rbx+0x4]
   140015542:	setbe  sil
   140015546:	dec    ecx
   140015548:	neg    ecx
   14001554a:	lock xadd DWORD PTR [rbx+0x14],ecx
   14001554f:	cmp    esi,0x2
   140015552:	setge  bl
   140015555:	mov    rdx,QWORD PTR [rbp+0x50]
   140015559:	test   rdx,rdx
   14001555c:	je     0x140015578
   14001555e:	or     r8d,0xffffffff
   140015562:	lock xadd DWORD PTR [rdx],r8d
   140015567:	cmp    r8d,0x1
   14001556b:	jne    0x140015578
   14001556d:	mov    rcx,QWORD PTR [rbp+0x50]
   140015571:	call   QWORD PTR [rip+0x1d051]        # 0x1400325c8
   140015577:	nop
   140015578:	mov    rcx,r15
   14001557b:	call   QWORD PTR [rip+0x1cb77]        # 0x1400320f8
   140015581:	mov    al,bl
   140015583:	add    rsp,0x40
   140015587:	pop    r15
   140015589:	pop    r14
   14001558b:	pop    r12
   14001558d:	pop    rdi
   14001558e:	pop    rsi
   14001558f:	pop    rbx
   140015590:	pop    rbp
   140015591:	ret    
   140015592:	int3   
   140015593:	int3   
   140015594:	int3   
   140015595:	int3   
   140015596:	int3   
   140015597:	int3   
   140015598:	mov    r11,rsp
   14001559b:	push   rdi
   14001559c:	sub    rsp,0x70
   1400155a0:	mov    QWORD PTR [r11-0x48],0xfffffffffffffffe
   1400155a8:	mov    QWORD PTR [r11+0x18],rbx
   1400155ac:	mov    rax,QWORD PTR [rip+0x35a6d]        # 0x14004b020
   1400155b3:	xor    rax,rsp
   1400155b6:	mov    QWORD PTR [rsp+0x60],rax
   1400155bb:	mov    rdi,rdx
   1400155be:	mov    rbx,rcx
   1400155c1:	mov    r8,rdx
   1400155c4:	lea    rdx,[r11-0x58]
   1400155c8:	call   0x1400156d4
   1400155cd:	mov    rax,QWORD PTR [rbx]
   1400155d0:	cmp    QWORD PTR [rsp+0x20],rax
   1400155d5:	jne    0x14001567e
   1400155db:	movups xmm0,XMMWORD PTR [rdi]
   1400155de:	movdqu XMMWORD PTR [rsp+0x48],xmm0
   1400155e4:	and    QWORD PTR [rsp+0x58],0x0
   1400155ea:	and    QWORD PTR [rsp+0x28],0x0
   1400155f0:	mov    rdi,QWORD PTR [rax]
   1400155f3:	lea    r9,[rsp+0x48]
   1400155f8:	mov    r8,QWORD PTR [rdi+0x8]
   1400155fc:	mov    rdx,rdi
   1400155ff:	call   0x1400152cc
   140015604:	mov    rdx,rax
   140015607:	mov    rax,QWORD PTR [rbx+0x8]
   14001560b:	movabs rcx,0x666666666666665
   140015615:	sub    rcx,rax
   140015618:	cmp    rcx,0x1
   14001561c:	jae    0x14001562b
   14001561e:	lea    rcx,[rip+0x21b5b]        # 0x140037180
   140015625:	call   0x14002d7f8
   14001562a:	int3   
   14001562b:	inc    rax
   14001562e:	mov    QWORD PTR [rbx+0x8],rax
   140015632:	mov    QWORD PTR [rdi+0x8],rdx
   140015636:	mov    rax,QWORD PTR [rdx+0x8]
   14001563a:	mov    QWORD PTR [rax],rdx
   14001563d:	mov    r9,QWORD PTR [rbx]
   140015640:	mov    r9,QWORD PTR [r9]
   140015643:	lea    r8,[r9+0x10]
   140015647:	lea    rdx,[rsp+0x38]
   14001564c:	mov    rcx,rbx
   14001564f:	call   0x1400157f4
   140015654:	mov    rcx,QWORD PTR [rax]
   140015657:	mov    QWORD PTR [rsp+0x20],rcx
   14001565c:	mov    rcx,QWORD PTR [rsp+0x58]
   140015661:	test   rcx,rcx
   140015664:	je     0x14001567e
   140015666:	or     eax,0xffffffff
   140015669:	lock xadd DWORD PTR [rcx],eax
   14001566d:	cmp    eax,0x1
   140015670:	jne    0x14001567e
   140015672:	mov    rcx,QWORD PTR [rsp+0x58]
   140015677:	call   QWORD PTR [rip+0x1cf4b]        # 0x1400325c8
   14001567d:	nop
   14001567e:	mov    rax,QWORD PTR [rsp+0x20]
   140015683:	add    rax,0x20
   140015687:	mov    rcx,QWORD PTR [rsp+0x60]
   14001568c:	xor    rcx,rsp
   14001568f:	call   0x14002dd00
   140015694:	mov    rbx,QWORD PTR [rsp+0x90]
   14001569c:	add    rsp,0x70
   1400156a0:	pop    rdi
   1400156a1:	ret    
   1400156a2:	int3   
   1400156a3:	int3   
   1400156a4:	int3   
   1400156a5:	int3   
   1400156a6:	int3   
   1400156a7:	int3   
   1400156a8:	sub    rsp,0x28
   1400156ac:	mov    rcx,QWORD PTR [rcx+0x10]
   1400156b0:	test   rcx,rcx
   1400156b3:	je     0x1400156c7
   1400156b5:	or     eax,0xffffffff
   1400156b8:	lock xadd DWORD PTR [rcx],eax
   1400156bc:	cmp    eax,0x1
   1400156bf:	jne    0x1400156c7
   1400156c1:	call   QWORD PTR [rip+0x1cf01]        # 0x1400325c8
   1400156c7:	add    rsp,0x28
   1400156cb:	ret    
   1400156cc:	int3   
   1400156cd:	int3   
   1400156ce:	int3   
   1400156cf:	int3   
   1400156d0:	int3   
   1400156d1:	int3   
   1400156d2:	int3   
   1400156d3:	int3   
   1400156d4:	mov    rax,rsp
   1400156d7:	mov    QWORD PTR [rax+0x8],rbx
   1400156db:	mov    QWORD PTR [rax+0x10],rbp
   1400156df:	mov    QWORD PTR [rax+0x18],rsi
   1400156e3:	mov    QWORD PTR [rax+0x20],rdi
   1400156e7:	push   r12
   1400156e9:	push   r14
   1400156eb:	push   r15
   1400156ed:	mov    r15d,DWORD PTR [r8+0x4]
   1400156f1:	mov    r10,rcx
   1400156f4:	mov    r12d,DWORD PTR [r8]
   1400156f7:	mov    r11,rdx
   1400156fa:	mov    r14d,DWORD PTR [r8+0x8]
   1400156fe:	mov    ebp,DWORD PTR [r8+0xc]
   140015702:	mov    r8,QWORD PTR [rcx+0x28]
   140015706:	lea    eax,[r12+r15*1]
   14001570a:	add    eax,r14d
   14001570d:	add    eax,ebp
   14001570f:	imul   edi,eax,0x62531966
   140015715:	mov    ecx,edi
   140015717:	rol    ecx,0x15
   14001571a:	add    ecx,edi
   14001571c:	and    rcx,r8
   14001571f:	cmp    QWORD PTR [r10+0x30],rcx
   140015723:	ja     0x140015732
   140015725:	shr    r8,1
   140015728:	or     rax,0xffffffffffffffff
   14001572c:	sub    rax,r8
   14001572f:	add    rcx,rax
   140015732:	mov    rbx,QWORD PTR [r10+0x10]
   140015736:	lea    rsi,[rcx+rcx*1]
   14001573a:	mov    r10,QWORD PTR [r10]
   14001573d:	mov    rax,rcx
   140015740:	add    rax,rax
   140015743:	mov    r9,QWORD PTR [rbx+rax*8]
   140015747:	cmp    QWORD PTR [rbx+rsi*8],r10
   14001574b:	jne    0x140015752
   14001574d:	mov    rax,r10
   140015750:	jmp    0x14001575a
   140015752:	mov    rax,QWORD PTR [rbx+rsi*8+0x8]
   140015757:	mov    rax,QWORD PTR [rax]
   14001575a:	cmp    r9,rax
   14001575d:	je     0x1400157cd
   14001575f:	mov    eax,DWORD PTR [r9+0x1c]
   140015763:	add    eax,DWORD PTR [r9+0x18]
   140015767:	add    eax,DWORD PTR [r9+0x14]
   14001576b:	add    eax,DWORD PTR [r9+0x10]
   14001576f:	imul   r8d,eax,0x62531966
   140015776:	lea    eax,[r12+r15*1]
   14001577a:	add    eax,r14d
   14001577d:	add    eax,ebp
   14001577f:	imul   ecx,eax,0x62531966
   140015785:	mov    eax,r8d
   140015788:	rol    eax,0x15
   14001578b:	add    eax,r8d
   14001578e:	mov    edx,ecx
   140015790:	rol    edx,0x15
   140015793:	add    edx,ecx
   140015795:	cmp    eax,edx
   140015797:	jae    0x14001579e
   140015799:	mov    r9,QWORD PTR [r9]
   14001579c:	jmp    0x140015747
   14001579e:	mov    eax,DWORD PTR [r9+0x1c]
   1400157a2:	add    eax,DWORD PTR [r9+0x18]
   1400157a6:	add    eax,DWORD PTR [r9+0x14]
   1400157aa:	add    eax,DWORD PTR [r9+0x10]
   1400157ae:	imul   eax,eax,0x62531966
   1400157b4:	mov    ecx,eax
   1400157b6:	rol    ecx,0x15
   1400157b9:	add    ecx,eax
   1400157bb:	mov    eax,edi
   1400157bd:	rol    eax,0x15
   1400157c0:	add    eax,edi
   1400157c2:	cmp    eax,ecx
   1400157c4:	cmovb  r9,r10
   1400157c8:	mov    QWORD PTR [r11],r9
   1400157cb:	jmp    0x1400157d0
   1400157cd:	mov    QWORD PTR [r11],r10
   1400157d0:	mov    rbx,QWORD PTR [rsp+0x20]
   1400157d5:	mov    rax,r11
   1400157d8:	mov    rbp,QWORD PTR [rsp+0x28]
   1400157dd:	mov    rsi,QWORD PTR [rsp+0x30]
   1400157e2:	mov    rdi,QWORD PTR [rsp+0x38]
   1400157e7:	pop    r15
   1400157e9:	pop    r14
   1400157eb:	pop    r12
   1400157ed:	ret    
   1400157ee:	int3   
   1400157ef:	int3   
   1400157f0:	int3   
   1400157f1:	int3   
   1400157f2:	int3   
   1400157f3:	int3   
   1400157f4:	mov    rax,rsp
   1400157f7:	mov    QWORD PTR [rax+0x20],r9
   1400157fb:	mov    QWORD PTR [rax+0x8],rcx
   1400157ff:	push   rsi
   140015800:	push   rdi
   140015801:	push   r14
   140015803:	sub    rsp,0x30
   140015807:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   14001580f:	mov    QWORD PTR [rax+0x10],rbx
   140015813:	mov    rbx,r9
   140015816:	mov    r14,rdx
   140015819:	mov    rsi,rcx
   14001581c:	mov    eax,DWORD PTR [r8+0xc]
   140015820:	add    eax,DWORD PTR [r8+0x8]
   140015824:	add    eax,DWORD PTR [r8+0x4]
   140015828:	add    eax,DWORD PTR [r8]
   14001582b:	imul   r10d,eax,0x62531966
   140015832:	mov    r9d,r10d
   140015835:	rol    r9d,0x15
   140015839:	add    r9d,r10d
   14001583c:	mov    rcx,QWORD PTR [rcx+0x28]
   140015840:	and    r9,rcx
   140015843:	cmp    QWORD PTR [rsi+0x30],r9
   140015847:	ja     0x140015856
   140015849:	shr    rcx,1
   14001584c:	or     rax,0xffffffffffffffff
   140015850:	sub    rax,rcx
   140015853:	add    r9,rax
   140015856:	mov    r8,r9
   140015859:	add    r8,r8
   14001585c:	mov    r11,QWORD PTR [rsi+0x10]
   140015860:	mov    rax,QWORD PTR [r11+r8*8]
   140015864:	cmp    rax,QWORD PTR [rsi]
   140015867:	jne    0x14001586e
   140015869:	mov    rdi,QWORD PTR [rsi]
   14001586c:	jmp    0x140015876
   14001586e:	mov    rdi,QWORD PTR [r11+r8*8+0x8]
   140015873:	mov    rdi,QWORD PTR [rdi]
   140015876:	cmp    rdi,rax
   140015879:	je     0x140015932
   14001587f:	add    r9,r9
   140015882:	mov    rdi,QWORD PTR [rdi+0x8]
   140015886:	mov    edx,r10d
   140015889:	rol    edx,0x15
   14001588c:	add    edx,r10d
   14001588f:	mov    eax,DWORD PTR [rdi+0x1c]
   140015892:	add    eax,DWORD PTR [rdi+0x18]
   140015895:	add    eax,DWORD PTR [rdi+0x14]
   140015898:	add    eax,DWORD PTR [rdi+0x10]
   14001589b:	imul   ecx,eax,0x62531966
   1400158a1:	mov    eax,ecx
   1400158a3:	rol    eax,0x15
   1400158a6:	add    ecx,eax
   1400158a8:	cmp    edx,ecx
   1400158aa:	jae    0x1400158b4
   1400158ac:	cmp    rdi,QWORD PTR [r11+r9*8]
   1400158b0:	jne    0x140015882
   1400158b2:	jmp    0x140015932
   1400158b4:	mov    eax,DWORD PTR [rdi+0x1c]
   1400158b7:	add    eax,DWORD PTR [rdi+0x18]
   1400158ba:	add    eax,DWORD PTR [rdi+0x14]
   1400158bd:	add    eax,DWORD PTR [rdi+0x10]
   1400158c0:	imul   ecx,eax,0x62531966
   1400158c6:	mov    eax,ecx
   1400158c8:	rol    eax,0x15
   1400158cb:	add    ecx,eax
   1400158cd:	mov    eax,r10d
   1400158d0:	rol    eax,0x15
   1400158d3:	add    r10d,eax
   1400158d6:	cmp    ecx,r10d
   1400158d9:	jae    0x1400158e0
   1400158db:	mov    rdi,QWORD PTR [rdi]
   1400158de:	jmp    0x140015932
   1400158e0:	cmp    rbx,QWORD PTR [rsi]
   1400158e3:	je     0x140015922
   1400158e5:	mov    rcx,QWORD PTR [rbx+0x8]
   1400158e9:	mov    rax,QWORD PTR [rbx]
   1400158ec:	mov    QWORD PTR [rcx],rax
   1400158ef:	mov    rcx,QWORD PTR [rbx]
   1400158f2:	mov    rax,QWORD PTR [rbx+0x8]
   1400158f6:	mov    QWORD PTR [rcx+0x8],rax
   1400158fa:	mov    rcx,QWORD PTR [rbx+0x20]
   1400158fe:	test   rcx,rcx
   140015901:	je     0x140015915
   140015903:	or     eax,0xffffffff
   140015906:	lock xadd DWORD PTR [rcx],eax
   14001590a:	cmp    eax,0x1
   14001590d:	jne    0x140015915
   14001590f:	call   QWORD PTR [rip+0x1ccb3]        # 0x1400325c8
   140015915:	mov    rcx,rbx
   140015918:	call   QWORD PTR [rip+0x1ccaa]        # 0x1400325c8
   14001591e:	dec    QWORD PTR [rsi+0x8]
   140015922:	mov    QWORD PTR [r14],rdi
   140015925:	mov    BYTE PTR [r14+0x8],0x0
   14001592a:	mov    rax,r14
   14001592d:	jmp    0x1400159c5
   140015932:	mov    rax,QWORD PTR [rbx]
   140015935:	cmp    rdi,rax
   140015938:	je     0x140015967
   14001593a:	mov    rcx,QWORD PTR [rbx+0x8]
   14001593e:	mov    QWORD PTR [rcx],rax
   140015941:	mov    rcx,QWORD PTR [rax+0x8]
   140015945:	mov    QWORD PTR [rcx],rdi
   140015948:	mov    rcx,QWORD PTR [rdi+0x8]
   14001594c:	mov    QWORD PTR [rcx],rbx
   14001594f:	mov    rdx,QWORD PTR [rdi+0x8]
   140015953:	mov    rcx,QWORD PTR [rax+0x8]
   140015957:	mov    QWORD PTR [rdi+0x8],rcx
   14001595b:	mov    rcx,QWORD PTR [rbx+0x8]
   14001595f:	mov    QWORD PTR [rax+0x8],rcx
   140015963:	mov    QWORD PTR [rbx+0x8],rdx
   140015967:	mov    rdx,QWORD PTR [rsi+0x10]
   14001596b:	mov    rax,QWORD PTR [rdx+r8*8]
   14001596f:	cmp    rax,QWORD PTR [rsi]
   140015972:	jne    0x140015983
   140015974:	mov    QWORD PTR [rdx+r8*8],rbx
   140015978:	mov    rax,QWORD PTR [rsi+0x10]
   14001597c:	mov    QWORD PTR [rax+r8*8+0x8],rbx
   140015981:	jmp    0x1400159b2
   140015983:	cmp    rax,rdi
   140015986:	jne    0x14001598e
   140015988:	mov    QWORD PTR [rdx+r8*8],rbx
   14001598c:	jmp    0x1400159b2
   14001598e:	mov    rax,QWORD PTR [rdx+r8*8+0x8]
   140015993:	mov    rcx,QWORD PTR [rax]
   140015996:	mov    QWORD PTR [rdx+r8*8+0x8],rcx
   14001599b:	cmp    rcx,rbx
   14001599e:	je     0x1400159b2
   1400159a0:	mov    rdx,QWORD PTR [rsi+0x10]
   1400159a4:	mov    rax,QWORD PTR [rdx+r8*8+0x8]
   1400159a9:	mov    rcx,QWORD PTR [rax+0x8]
   1400159ad:	mov    QWORD PTR [rdx+r8*8+0x8],rcx
   1400159b2:	mov    rcx,rsi
   1400159b5:	call   0x140015a40
   1400159ba:	mov    QWORD PTR [r14],rbx
   1400159bd:	mov    BYTE PTR [r14+0x8],0x1
   1400159c2:	mov    rax,r14
   1400159c5:	mov    rbx,QWORD PTR [rsp+0x58]
   1400159ca:	add    rsp,0x30
   1400159ce:	pop    r14
   1400159d0:	pop    rdi
   1400159d1:	pop    rsi
   1400159d2:	ret    
   1400159d3:	int3   
   1400159d4:	int3   
   1400159d5:	int3   
   1400159d6:	int3   
   1400159d7:	int3   
   1400159d8:	int3   
   1400159d9:	int3   
   1400159da:	int3   
   1400159db:	int3   
   1400159dc:	mov    QWORD PTR [rsp+0x10],rbx
   1400159e1:	push   rdi
   1400159e2:	sub    rsp,0x20
   1400159e6:	mov    rbx,rdx
   1400159e9:	mov    rdi,rcx
   1400159ec:	cmp    rdx,QWORD PTR [rcx]
   1400159ef:	je     0x140015a2e
   1400159f1:	mov    rdx,QWORD PTR [rdx+0x8]
   1400159f5:	mov    rax,QWORD PTR [rbx]
   1400159f8:	mov    QWORD PTR [rdx],rax
   1400159fb:	mov    rdx,QWORD PTR [rbx]
   1400159fe:	mov    rax,QWORD PTR [rbx+0x8]
   140015a02:	mov    QWORD PTR [rdx+0x8],rax
   140015a06:	mov    rcx,QWORD PTR [rbx+0x20]
   140015a0a:	test   rcx,rcx
   140015a0d:	je     0x140015a21
   140015a0f:	or     eax,0xffffffff
   140015a12:	lock xadd DWORD PTR [rcx],eax
   140015a16:	cmp    eax,0x1
   140015a19:	jne    0x140015a21
   140015a1b:	call   QWORD PTR [rip+0x1cba7]        # 0x1400325c8
   140015a21:	mov    rcx,rbx
   140015a24:	call   QWORD PTR [rip+0x1cb9e]        # 0x1400325c8
   140015a2a:	dec    QWORD PTR [rdi+0x8]
   140015a2e:	mov    rbx,QWORD PTR [rsp+0x38]
   140015a33:	add    rsp,0x20
   140015a37:	pop    rdi
   140015a38:	ret    
   140015a39:	int3   
   140015a3a:	int3   
   140015a3b:	int3   
   140015a3c:	int3   
   140015a3d:	int3   
   140015a3e:	int3   
   140015a3f:	int3   
   140015a40:	mov    QWORD PTR [rsp+0x18],rbx
   140015a45:	mov    QWORD PTR [rsp+0x20],rsi
   140015a4a:	push   rdi
   140015a4b:	sub    rsp,0x40
   140015a4f:	mov    rax,QWORD PTR [rcx+0x8]
   140015a53:	xorps  xmm0,xmm0
   140015a56:	mov    rbx,QWORD PTR [rcx+0x30]
   140015a5a:	mov    rsi,rcx
   140015a5d:	movss  xmm2,DWORD PTR [rip+0x27a33]        # 0x14003d498
   140015a65:	cvtsi2ss xmm0,rax
   140015a6a:	test   rax,rax
   140015a6d:	jns    0x140015a73
   140015a6f:	addss  xmm0,xmm2
   140015a73:	xorps  xmm1,xmm1
   140015a76:	cvtsi2ss xmm1,rbx
   140015a7b:	test   rbx,rbx
   140015a7e:	jns    0x140015a84
   140015a80:	addss  xmm1,xmm2
   140015a84:	divss  xmm0,xmm1
   140015a88:	comiss xmm0,DWORD PTR [rcx+0x38]
   140015a8c:	jbe    0x140015b15
   140015a92:	cmp    rbx,0x200
   140015a99:	jae    0x140015aa1
   140015a9b:	shl    rbx,0x3
   140015a9f:	jmp    0x140015ab3
   140015aa1:	movabs rax,0xfffffffffffffff
   140015aab:	cmp    rbx,rax
   140015aae:	jae    0x140015ab3
   140015ab0:	add    rbx,rbx
   140015ab3:	mov    rax,QWORD PTR [rsi]
   140015ab6:	lea    r9,[rbx+rbx*1]
   140015aba:	add    rcx,0x10
   140015abe:	mov    QWORD PTR [rsp+0x50],rax
   140015ac3:	lea    rax,[rsp+0x50]
   140015ac8:	lea    rdx,[rsp+0x58]
   140015acd:	mov    QWORD PTR [rsp+0x20],rax
   140015ad2:	mov    r8,QWORD PTR [rcx]
   140015ad5:	mov    QWORD PTR [rcx+0x8],r8
   140015ad9:	call   0x14000dfb4
   140015ade:	lea    rax,[rbx-0x1]
   140015ae2:	mov    QWORD PTR [rsi+0x30],rbx
   140015ae6:	mov    QWORD PTR [rsi+0x28],rax
   140015aea:	mov    rax,QWORD PTR [rsi]
   140015aed:	cmp    QWORD PTR [rax],rax
   140015af0:	je     0x140015b15
   140015af2:	mov    rdi,QWORD PTR [rax+0x8]
   140015af6:	mov    rbx,QWORD PTR [rsi]
   140015af9:	lea    rdx,[rsp+0x30]
   140015afe:	mov    rcx,rsi
   140015b01:	mov    rbx,QWORD PTR [rbx]
   140015b04:	mov    r9,rbx
   140015b07:	lea    r8,[rbx+0x10]
   140015b0b:	call   0x1400157f4
   140015b10:	cmp    rbx,rdi
   140015b13:	jne    0x140015af6
   140015b15:	mov    rbx,QWORD PTR [rsp+0x60]
   140015b1a:	mov    rsi,QWORD PTR [rsp+0x68]
   140015b1f:	add    rsp,0x40
   140015b23:	pop    rdi
   140015b24:	ret    
   140015b25:	int3   
   140015b26:	int3   
   140015b27:	int3   
   140015b28:	int3   
   140015b29:	int3   
   140015b2a:	int3   
   140015b2b:	int3   
   140015b2c:	mov    r11,rsp
   140015b2f:	mov    DWORD PTR [r11+0x20],r9d
   140015b33:	sub    rsp,0x58
   140015b37:	and    QWORD PTR [r11-0x18],0x0
   140015b3c:	lea    rax,[r11+0x28]
   140015b40:	mov    r9d,0x4
   140015b46:	mov    QWORD PTR [r11-0x20],r9
   140015b4a:	mov    QWORD PTR [r11-0x28],rax
   140015b4e:	lea    rax,[r11+0x20]
   140015b52:	mov    QWORD PTR [r11-0x30],r9
   140015b56:	movzx  r9d,dx
   140015b5a:	mov    edx,0x2b
   140015b5f:	mov    QWORD PTR [r11-0x38],rax
   140015b63:	call   QWORD PTR [rip+0x1c4b7]        # 0x140032020
   140015b69:	add    rsp,0x58
   140015b6d:	ret    
   140015b6e:	int3   
   140015b6f:	int3   
   140015b70:	int3   
   140015b71:	int3   
   140015b72:	int3   
   140015b73:	int3   
   140015b74:	mov    rax,rsp
   140015b77:	mov    QWORD PTR [rax+0x8],rcx
   140015b7b:	push   rsi
   140015b7c:	push   rdi
   140015b7d:	push   r12
   140015b7f:	push   r14
   140015b81:	push   r15
   140015b83:	sub    rsp,0x30
   140015b87:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   140015b8f:	mov    QWORD PTR [rax+0x10],rbx
   140015b93:	mov    QWORD PTR [rax+0x18],rbp
   140015b97:	mov    rbp,r9
   140015b9a:	mov    r15d,r8d
   140015b9d:	mov    r12d,edx
   140015ba0:	mov    rdi,rcx
   140015ba3:	lea    rbx,[rcx+0x8]
   140015ba7:	and    QWORD PTR [rbx],0x0
   140015bab:	and    QWORD PTR [rbx+0x8],0x0
   140015bb0:	and    QWORD PTR [rbx+0x10],0x0
   140015bb5:	mov    esi,DWORD PTR [rsp+0x80]
   140015bbc:	lea    rdx,[rsi+0x20]
   140015bc0:	mov    rcx,rbx
   140015bc3:	call   0x140016770
   140015bc8:	mov    rcx,QWORD PTR [rbx]
   140015bcb:	cmp    rcx,QWORD PTR [rbx+0x8]
   140015bcf:	cmove  rcx,rbx
   140015bd3:	mov    QWORD PTR [rdi],rcx
   140015bd6:	test   rbp,rbp
   140015bd9:	je     0x140015bfd
   140015bdb:	lea    rax,[rcx+0x20]
   140015bdf:	mov    QWORD PTR [rcx+0x10],rax
   140015be3:	mov    rax,QWORD PTR [rdi]
   140015be6:	mov    DWORD PTR [rax+0x18],esi
   140015be9:	mov    rax,QWORD PTR [rdi]
   140015bec:	mov    r8d,esi
   140015bef:	mov    rdx,rbp
   140015bf2:	mov    rcx,QWORD PTR [rax+0x10]
   140015bf6:	call   0x14002e2f2
   140015bfb:	jmp    0x140015c01
   140015bfd:	and    DWORD PTR [rcx+0x18],0x0
   140015c01:	mov    rax,QWORD PTR [rdi]
   140015c04:	mov    QWORD PTR [rax],r12
   140015c07:	mov    rax,QWORD PTR [rdi]
   140015c0a:	mov    DWORD PTR [rax+0x8],r15d
   140015c0e:	mov    rax,QWORD PTR [rdi]
   140015c11:	and    DWORD PTR [rax+0xc],0x0
   140015c15:	lea    ecx,[rsi+0x20]
   140015c18:	mov    rax,QWORD PTR [rdi]
   140015c1b:	mov    DWORD PTR [rax+0x1c],ecx
   140015c1e:	mov    rax,rdi
   140015c21:	mov    rbx,QWORD PTR [rsp+0x68]
   140015c26:	mov    rbp,QWORD PTR [rsp+0x70]
   140015c2b:	add    rsp,0x30
   140015c2f:	pop    r15
   140015c31:	pop    r14
   140015c33:	pop    r12
   140015c35:	pop    rdi
   140015c36:	pop    rsi
   140015c37:	ret    
   140015c38:	int3   
   140015c39:	int3   
   140015c3a:	int3   
   140015c3b:	int3   
   140015c3c:	int3   
   140015c3d:	int3   
   140015c3e:	int3   
   140015c3f:	int3   
   140015c40:	jmp    0x14001686c
   140015c45:	int3   
   140015c46:	int3   
   140015c47:	int3   
   140015c48:	int3   
   140015c49:	int3   
   140015c4a:	int3   
   140015c4b:	int3   
   140015c4c:	mov    QWORD PTR [rsp+0x20],rbx
   140015c51:	push   rbp
   140015c52:	push   rsi
   140015c53:	push   rdi
   140015c54:	push   r13
   140015c56:	push   r14
   140015c58:	sub    rsp,0x70
   140015c5c:	mov    rax,QWORD PTR [rip+0x353bd]        # 0x14004b020
   140015c63:	xor    rax,rsp
   140015c66:	mov    QWORD PTR [rsp+0x60],rax
   140015c6b:	mov    ebp,r8d
   140015c6e:	mov    edi,edx
   140015c70:	mov    rsi,rcx
   140015c73:	mov    rcx,QWORD PTR [rip+0x353fe]        # 0x14004b078
   140015c7a:	lea    r14,[rip+0x353f7]        # 0x14004b078
   140015c81:	lea    r13,[rip+0x21d10]        # 0x140037998
   140015c88:	cmp    rcx,r14
   140015c8b:	je     0x140015cac
   140015c8d:	test   BYTE PTR [rcx+0x1c],0x4
   140015c91:	je     0x140015cac
   140015c93:	mov    rcx,QWORD PTR [rcx+0x10]
   140015c97:	mov    edx,0xa
   140015c9c:	mov    DWORD PTR [rsp+0x20],r8d
   140015ca1:	mov    r9d,edi
   140015ca4:	mov    r8,r13
   140015ca7:	call   0x140015b2c
   140015cac:	cmp    BYTE PTR [rsi+0x60],0x0
   140015cb0:	je     0x140015e2d
   140015cb6:	and    DWORD PTR [rsp+0x30],0x0
   140015cbb:	call   QWORD PTR [rip+0x1c78f]        # 0x140032450
   140015cc1:	mov    rbx,QWORD PTR [rax+0xa0]
   140015cc8:	mov    rcx,rbx
   140015ccb:	call   QWORD PTR [rip+0x1c9d7]        # 0x1400326a8
   140015cd1:	lea    r8,[rsp+0x30]
   140015cd6:	xor    edx,edx
   140015cd8:	lea    rcx,[rip+0x21c11]        # 0x1400378f0
   140015cdf:	call   rbx
   140015ce1:	mov    ebx,DWORD PTR [rsp+0x30]
   140015ce5:	test   ebx,ebx
   140015ce7:	je     0x140015d11
   140015ce9:	mov    rcx,QWORD PTR [rip+0x35388]        # 0x14004b078
   140015cf0:	cmp    rcx,r14
   140015cf3:	je     0x140015d0f
   140015cf5:	test   BYTE PTR [rcx+0x1c],0x4
   140015cf9:	je     0x140015d0f
   140015cfb:	mov    rcx,QWORD PTR [rcx+0x10]
   140015cff:	mov    edx,0xb
   140015d04:	mov    r9d,ebx
   140015d07:	mov    r8,r13
   140015d0a:	call   0x140001f70
   140015d0f:	mov    edi,ebx
   140015d11:	and    DWORD PTR [rsp+0x30],0x0
   140015d16:	call   QWORD PTR [rip+0x1c734]        # 0x140032450
   140015d1c:	mov    rbx,QWORD PTR [rax+0xa0]
   140015d23:	mov    rcx,rbx
   140015d26:	call   QWORD PTR [rip+0x1c97c]        # 0x1400326a8
   140015d2c:	lea    r8,[rsp+0x30]
   140015d31:	xor    edx,edx
   140015d33:	lea    rcx,[rip+0x21bf6]        # 0x140037930
   140015d3a:	call   rbx
   140015d3c:	mov    ebx,DWORD PTR [rsp+0x30]
   140015d40:	test   ebx,ebx
   140015d42:	je     0x140015d6c
   140015d44:	mov    rcx,QWORD PTR [rip+0x3532d]        # 0x14004b078
   140015d4b:	cmp    rcx,r14
   140015d4e:	je     0x140015d6a
   140015d50:	test   BYTE PTR [rcx+0x1c],0x4
   140015d54:	je     0x140015d6a
   140015d56:	mov    rcx,QWORD PTR [rcx+0x10]
   140015d5a:	mov    edx,0xc
   140015d5f:	mov    r9d,ebx
   140015d62:	mov    r8,r13
   140015d65:	call   0x140001f70
   140015d6a:	mov    ebp,ebx
   140015d6c:	lea    rcx,[rsi+0x28]
   140015d70:	call   QWORD PTR [rip+0x1c392]        # 0x140032108
   140015d76:	cmp    edi,0xfa
   140015d7c:	ja     0x140015da9
   140015d7e:	mov    rcx,QWORD PTR [rip+0x352f3]        # 0x14004b078
   140015d85:	cmp    rcx,r14
   140015d88:	je     0x140015da4
   140015d8a:	test   BYTE PTR [rcx+0x1c],0x4
   140015d8e:	je     0x140015da4
   140015d90:	mov    rcx,QWORD PTR [rcx+0x10]
   140015d94:	mov    edx,0xd
   140015d99:	mov    r9d,edi
   140015d9c:	mov    r8,r13
   140015d9f:	call   0x140001f70
   140015da4:	mov    DWORD PTR [rsi+0x64],edi
   140015da7:	jmp    0x140015dd9
   140015da9:	mov    rcx,QWORD PTR [rip+0x352c8]        # 0x14004b078
   140015db0:	cmp    rcx,r14
   140015db3:	je     0x140015dd2
   140015db5:	test   BYTE PTR [rcx+0x1c],0x2
   140015db9:	je     0x140015dd2
   140015dbb:	mov    rcx,QWORD PTR [rcx+0x10]
   140015dbf:	mov    edx,0xe
   140015dc4:	mov    r9d,0xfa
   140015dca:	mov    r8,r13
   140015dcd:	call   0x140001f70
   140015dd2:	mov    DWORD PTR [rsi+0x64],0xfa
   140015dd9:	mov    rcx,QWORD PTR [rip+0x35298]        # 0x14004b078
   140015de0:	cmp    rcx,r14
   140015de3:	je     0x140015dff
   140015de5:	test   BYTE PTR [rcx+0x1c],0x4
   140015de9:	je     0x140015dff
   140015deb:	mov    rcx,QWORD PTR [rcx+0x10]
   140015def:	mov    edx,0xf
   140015df4:	mov    r9d,ebp
   140015df7:	mov    r8,r13
   140015dfa:	call   0x140001f70
   140015dff:	lea    rcx,[rsi+0x28]
   140015e03:	mov    DWORD PTR [rsi+0x68],ebp
   140015e06:	call   QWORD PTR [rip+0x1c2ec]        # 0x1400320f8
   140015e0c:	mov    rcx,QWORD PTR [rsp+0x60]
   140015e11:	xor    rcx,rsp
   140015e14:	call   0x14002dd00
   140015e19:	mov    rbx,QWORD PTR [rsp+0xb8]
   140015e21:	add    rsp,0x70
   140015e25:	pop    r14
   140015e27:	pop    r13
   140015e29:	pop    rdi
   140015e2a:	pop    rsi
   140015e2b:	pop    rbp
   140015e2c:	ret    
   140015e2d:	mov    edx,0x80070057
   140015e32:	lea    rcx,[rsp+0x38]
   140015e37:	call   0x140002064
   140015e3c:	lea    rdx,[rip+0x33345]        # 0x140049188
   140015e43:	lea    rcx,[rsp+0x38]
   140015e48:	call   0x14002e2da
   140015e4d:	int3   
   140015e4e:	int3   
   140015e4f:	int3   
   140015e50:	int3   
   140015e51:	int3   
   140015e52:	int3   
   140015e53:	int3   
   140015e54:	mov    QWORD PTR [rsp+0x18],rbx
   140015e59:	push   rbp
   140015e5a:	push   rsi
   140015e5b:	push   rdi
   140015e5c:	sub    rsp,0x20
   140015e60:	cmp    BYTE PTR [rcx+0x60],0x0
   140015e64:	mov    rbx,rcx
   140015e67:	je     0x140015ed9
   140015e69:	and    QWORD PTR [rsp+0x40],0x0
   140015e6f:	lea    rdi,[rcx+0x28]
   140015e73:	and    QWORD PTR [rsp+0x48],0x0
   140015e79:	mov    rcx,rdi
   140015e7c:	call   QWORD PTR [rip+0x1c286]        # 0x140032108
   140015e82:	cmp    BYTE PTR [rbx+0x61],0x0
   140015e86:	mov    rcx,rdi
   140015e89:	jne    0x140015ed3
   140015e8b:	mov    BYTE PTR [rbx+0x61],0x1
   140015e8f:	mov    rsi,QWORD PTR [rbx+0x50]
   140015e93:	and    QWORD PTR [rbx+0x50],0x0
   140015e98:	mov    rbp,QWORD PTR [rbx+0x58]
   140015e9c:	and    QWORD PTR [rbx+0x58],0x0
   140015ea1:	call   QWORD PTR [rip+0x1c251]        # 0x1400320f8
   140015ea7:	or     rbx,0xffffffffffffffff
   140015eab:	test   rbp,rbp
   140015eae:	je     0x140015ebe
   140015eb0:	mov    r8,rbx
   140015eb3:	mov    rdx,rbp
   140015eb6:	xor    ecx,ecx
   140015eb8:	call   QWORD PTR [rip+0x1c282]        # 0x140032140
   140015ebe:	test   rsi,rsi
   140015ec1:	je     0x140015ed9
   140015ec3:	mov    r8,rbx
   140015ec6:	mov    rdx,rsi
   140015ec9:	xor    ecx,ecx
   140015ecb:	call   QWORD PTR [rip+0x1c26f]        # 0x140032140
   140015ed1:	jmp    0x140015ed9
   140015ed3:	call   QWORD PTR [rip+0x1c21f]        # 0x1400320f8
   140015ed9:	mov    rbx,QWORD PTR [rsp+0x50]
   140015ede:	add    rsp,0x20
   140015ee2:	pop    rdi
   140015ee3:	pop    rsi
   140015ee4:	pop    rbp
   140015ee5:	ret    
   140015ee6:	int3   
   140015ee7:	int3   
   140015ee8:	int3   
   140015ee9:	int3   
   140015eea:	int3   
   140015eeb:	int3   
   140015eec:	mov    QWORD PTR [rsp+0x8],rbx
   140015ef1:	mov    QWORD PTR [rsp+0x10],rsi
   140015ef6:	push   rdi
   140015ef7:	sub    rsp,0x20
   140015efb:	cmp    BYTE PTR [rcx+0x61],0x0
   140015eff:	mov    rdi,rcx
   140015f02:	jne    0x140015f09
   140015f04:	call   0x140015e54
   140015f09:	mov    rsi,QWORD PTR [rdi+0x78]
   140015f0d:	test   rsi,rsi
   140015f10:	je     0x140015f27
   140015f12:	mov    rax,QWORD PTR [rsi]
   140015f15:	mov    rbx,QWORD PTR [rax+0x8]
   140015f19:	mov    rcx,rbx
   140015f1c:	call   QWORD PTR [rip+0x1c786]        # 0x1400326a8
   140015f22:	mov    rcx,rsi
   140015f25:	call   rbx
   140015f27:	mov    rdx,QWORD PTR [rdi+0x58]
   140015f2b:	or     rbx,0xffffffffffffffff
   140015f2f:	test   rdx,rdx
   140015f32:	je     0x140015f3f
   140015f34:	mov    r8,rbx
   140015f37:	xor    ecx,ecx
   140015f39:	call   QWORD PTR [rip+0x1c201]        # 0x140032140
   140015f3f:	mov    rdx,QWORD PTR [rdi+0x50]
   140015f43:	test   rdx,rdx
   140015f46:	je     0x140015f53
   140015f48:	mov    r8,rbx
   140015f4b:	xor    ecx,ecx
   140015f4d:	call   QWORD PTR [rip+0x1c1ed]        # 0x140032140
   140015f53:	lea    rcx,[rdi+0x28]
   140015f57:	cmp    DWORD PTR [rcx+0xc],0xf12192e
   140015f5e:	je     0x140015f66
   140015f60:	call   QWORD PTR [rip+0x1c312]        # 0x140032278
   140015f66:	mov    rcx,rdi
   140015f69:	mov    rbx,QWORD PTR [rsp+0x30]
   140015f6e:	mov    rsi,QWORD PTR [rsp+0x38]
   140015f73:	add    rsp,0x20
   140015f77:	pop    rdi
   140015f78:	jmp    0x14001686c
   140015f7d:	int3   
   140015f7e:	int3   
   140015f7f:	int3   
   140015f80:	int3   
   140015f81:	int3   
   140015f82:	int3   
   140015f83:	int3   
   140015f84:	mov    r11,rsp
   140015f87:	push   rdi
   140015f88:	push   r14
   140015f8a:	push   r15
   140015f8c:	sub    rsp,0xa0
   140015f93:	mov    QWORD PTR [r11-0x78],0xfffffffffffffffe
   140015f9b:	mov    QWORD PTR [r11+0x10],rbx
   140015f9f:	mov    QWORD PTR [r11+0x18],rbp
   140015fa3:	mov    rax,QWORD PTR [rip+0x35076]        # 0x14004b020
   140015faa:	xor    rax,rsp
   140015fad:	mov    QWORD PTR [rsp+0x98],rax
   140015fb5:	mov    r14,r9
   140015fb8:	mov    edi,r8d
   140015fbb:	mov    ebp,edx
   140015fbd:	mov    rbx,rcx
   140015fc0:	cmp    BYTE PTR [rcx+0x60],0x0
   140015fc4:	jne    0x140015fe6
   140015fc6:	mov    edx,0x80070057
   140015fcb:	lea    rcx,[r11-0x70]
   140015fcf:	call   0x140002064
   140015fd4:	lea    rdx,[rip+0x331ad]        # 0x140049188
   140015fdb:	lea    rcx,[rsp+0x48]
   140015fe0:	call   0x14002e2da
   140015fe5:	int3   
   140015fe6:	lea    r15,[rcx+0x28]
   140015fea:	mov    QWORD PTR [rsp+0x48],r15
   140015fef:	mov    rcx,r15
   140015ff2:	call   QWORD PTR [rip+0x1c110]        # 0x140032108
   140015ff8:	mov    BYTE PTR [rsp+0x50],0x1
   140015ffd:	mov    BYTE PTR [rsp+0x58],0x1
   140016002:	cmp    BYTE PTR [rbx+0x61],0x0
   140016006:	jne    0x140016233
   14001600c:	mov    eax,DWORD PTR [rbx+0x64]
   14001600f:	cmp    QWORD PTR [rbx+0x20],rax
   140016013:	jb     0x140016053
   140016015:	lea    rdi,[rip+0x3505c]        # 0x14004b078
   14001601c:	mov    rcx,QWORD PTR [rip+0x35055]        # 0x14004b078
   140016023:	cmp    rcx,rdi
   140016026:	je     0x14001613c
   14001602c:	test   BYTE PTR [rcx+0x1c],0x2
   140016030:	je     0x14001613c
   140016036:	mov    edx,0x11
   14001603b:	mov    r9d,eax
   14001603e:	lea    r8,[rip+0x21953]        # 0x140037998
   140016045:	mov    rcx,QWORD PTR [rcx+0x10]
   140016049:	call   0x140001f70
   14001604e:	jmp    0x140016135
   140016053:	mov    ecx,0x20
   140016058:	call   0x140023f10
   14001605d:	mov    QWORD PTR [rsp+0x30],rax
   140016062:	mov    ecx,DWORD PTR [rsp+0xe0]
   140016069:	mov    DWORD PTR [rsp+0x20],ecx
   14001606d:	mov    r9,r14
   140016070:	mov    r8d,edi
   140016073:	mov    edx,ebp
   140016075:	mov    rcx,rax
   140016078:	call   0x140015b74
   14001607d:	mov    r14,rax
   140016080:	mov    QWORD PTR [rsp+0x30],rax
   140016085:	mov    QWORD PTR [rsp+0x38],rax
   14001608a:	mov    rdx,QWORD PTR [rbx+0x20]
   14001608e:	mov    cl,BYTE PTR [rbx+0x18]
   140016091:	add    cl,dl
   140016093:	test   cl,0x1
   140016096:	jne    0x1400160ad
   140016098:	lea    rcx,[rdx+0x2]
   14001609c:	shr    rcx,1
   14001609f:	cmp    QWORD PTR [rbx+0x10],rcx
   1400160a3:	ja     0x1400160ad
   1400160a5:	mov    rcx,rbx
   1400160a8:	call   0x140016be8
   1400160ad:	mov    rdx,QWORD PTR [rbx+0x10]
   1400160b1:	lea    rax,[rdx*2-0x1]
   1400160b9:	and    QWORD PTR [rbx+0x18],rax
   1400160bd:	mov    rbp,QWORD PTR [rbx+0x18]
   1400160c1:	add    rbp,QWORD PTR [rbx+0x20]
   1400160c5:	mov    rdi,rbp
   1400160c8:	shr    rdi,1
   1400160cb:	lea    rax,[rdx-0x1]
   1400160cf:	and    rdi,rax
   1400160d2:	mov    rax,QWORD PTR [rbx+0x8]
   1400160d6:	cmp    QWORD PTR [rax+rdi*8],0x0
   1400160db:	jne    0x1400160ef
   1400160dd:	mov    ecx,0x10
   1400160e2:	call   0x140023f10
   1400160e7:	mov    rcx,QWORD PTR [rbx+0x8]
   1400160eb:	mov    QWORD PTR [rcx+rdi*8],rax
   1400160ef:	mov    rax,QWORD PTR [rbx+0x8]
   1400160f3:	and    ebp,0x1
   1400160f6:	mov    rax,QWORD PTR [rax+rdi*8]
   1400160fa:	lea    rcx,[rax+rbp*8]
   1400160fe:	test   rcx,rcx
   140016101:	je     0x140016106
   140016103:	mov    QWORD PTR [rcx],r14
   140016106:	inc    QWORD PTR [rbx+0x20]
   14001610a:	lea    rdi,[rip+0x34f67]        # 0x14004b078
   140016111:	mov    rcx,QWORD PTR [rip+0x34f60]        # 0x14004b078
   140016118:	cmp    rcx,rdi
   14001611b:	je     0x14001613c
   14001611d:	test   BYTE PTR [rcx+0x1c],0x4
   140016121:	je     0x14001613c
   140016123:	mov    edx,0x12
   140016128:	mov    r9,QWORD PTR [rbx+0x20]
   14001612c:	mov    rcx,QWORD PTR [rcx+0x10]
   140016130:	call   0x140001f2c
   140016135:	mov    rcx,QWORD PTR [rip+0x34f3c]        # 0x14004b078
   14001613c:	lea    r14,[rbx+0x50]
   140016140:	cmp    QWORD PTR [r14],0x0
   140016144:	je     0x140016163
   140016146:	cmp    rcx,rdi
   140016149:	je     0x140016262
   14001614f:	test   BYTE PTR [rcx+0x1c],0x4
   140016153:	je     0x140016262
   140016159:	mov    edx,0x13
   14001615e:	jmp    0x140016251
   140016163:	xor    ebp,ebp
   140016165:	cmp    QWORD PTR [rbx+0x70],rbp
   140016169:	je     0x14001619b
   14001616b:	call   0x14002b158
   140016170:	mov    rcx,rax
   140016173:	sub    rcx,QWORD PTR [rbx+0x70]
   140016177:	movabs rax,0x346dc5d63886594b
   140016181:	mul    rcx
   140016184:	shr    rdx,0xb
   140016188:	mov    eax,DWORD PTR [rbx+0x68]
   14001618b:	mov    rcx,QWORD PTR [rip+0x34ee6]        # 0x14004b078
   140016192:	cmp    rdx,rax
   140016195:	jae    0x14001619b
   140016197:	mov    ebp,eax
   140016199:	sub    ebp,edx
   14001619b:	cmp    rcx,rdi
   14001619e:	je     0x1400161be
   1400161a0:	test   BYTE PTR [rcx+0x1c],0x4
   1400161a4:	je     0x1400161be
   1400161a6:	mov    edx,0x14
   1400161ab:	mov    r9d,ebp
   1400161ae:	lea    r8,[rip+0x217e3]        # 0x140037998
   1400161b5:	mov    rcx,QWORD PTR [rcx+0x10]
   1400161b9:	call   0x140001f70
   1400161be:	mov    rdx,QWORD PTR [r14]
   1400161c1:	test   rdx,rdx
   1400161c4:	je     0x1400161d6
   1400161c6:	or     r8,0xffffffffffffffff
   1400161ca:	xor    ecx,ecx
   1400161cc:	call   QWORD PTR [rip+0x1bf6e]        # 0x140032140
   1400161d2:	and    QWORD PTR [r14],0x0
   1400161d6:	mov    QWORD PTR [rsp+0x20],rbx
   1400161db:	mov    edx,ebp
   1400161dd:	mov    rcx,r14
   1400161e0:	call   0x14002a700
   1400161e5:	mov    ebx,eax
   1400161e7:	test   eax,eax
   1400161e9:	jns    0x140016262
   1400161eb:	mov    rcx,QWORD PTR [rip+0x34e86]        # 0x14004b078
   1400161f2:	cmp    rcx,rdi
   1400161f5:	je     0x140016215
   1400161f7:	test   BYTE PTR [rcx+0x1c],0x1
   1400161fb:	je     0x140016215
   1400161fd:	mov    edx,0x15
   140016202:	mov    r9d,eax
   140016205:	lea    r8,[rip+0x2178c]        # 0x140037998
   14001620c:	mov    rcx,QWORD PTR [rcx+0x10]
   140016210:	call   0x140001f70
   140016215:	mov    edx,ebx
   140016217:	lea    rcx,[rsp+0x70]
   14001621c:	call   0x140002064
   140016221:	lea    rdx,[rip+0x32f60]        # 0x140049188
   140016228:	lea    rcx,[rsp+0x70]
   14001622d:	call   0x14002e2da
   140016232:	int3   
   140016233:	lea    rdi,[rip+0x34e3e]        # 0x14004b078
   14001623a:	mov    rcx,QWORD PTR [rip+0x34e37]        # 0x14004b078
   140016241:	cmp    rcx,rdi
   140016244:	je     0x140016262
   140016246:	test   BYTE PTR [rcx+0x1c],0x2
   14001624a:	je     0x140016262
   14001624c:	mov    edx,0x10
   140016251:	lea    r8,[rip+0x21740]        # 0x140037998
   140016258:	mov    rcx,QWORD PTR [rcx+0x10]
   14001625c:	call   0x140001f08
   140016261:	nop
   140016262:	mov    rcx,r15
   140016265:	call   QWORD PTR [rip+0x1be8d]        # 0x1400320f8
   14001626b:	mov    rcx,QWORD PTR [rsp+0x98]
   140016273:	xor    rcx,rsp
   140016276:	call   0x14002dd00
   14001627b:	lea    r11,[rsp+0xa0]
   140016283:	mov    rbx,QWORD PTR [r11+0x28]
   140016287:	mov    rbp,QWORD PTR [r11+0x30]
   14001628b:	mov    rsp,r11
   14001628e:	pop    r15
   140016290:	pop    r14
   140016292:	pop    rdi
   140016293:	ret    
   140016294:	int3   
   140016295:	int3   
   140016296:	int3   
   140016297:	int3   
   140016298:	int3   
   140016299:	int3   
   14001629a:	int3   
   14001629b:	int3   
   14001629c:	int3   
   14001629d:	int3   
   14001629e:	int3   
   14001629f:	int3   
   1400162a0:	rex push rbx
   1400162a2:	sub    rsp,0x30
   1400162a6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400162af:	mov    rbx,rcx
   1400162b2:	lea    rax,[rip+0x34dbf]        # 0x14004b078
   1400162b9:	mov    rcx,QWORD PTR [rip+0x34db8]        # 0x14004b078
   1400162c0:	cmp    rcx,rax
   1400162c3:	je     0x1400162e1
   1400162c5:	test   BYTE PTR [rcx+0x1c],0x4
   1400162c9:	je     0x1400162e1
   1400162cb:	mov    edx,0x16
   1400162d0:	lea    r8,[rip+0x216c1]        # 0x140037998
   1400162d7:	mov    rcx,QWORD PTR [rcx+0x10]
   1400162db:	call   0x140001f08
   1400162e0:	nop
   1400162e1:	mov    rcx,rbx
   1400162e4:	call   0x140016330
   1400162e9:	nop
   1400162ea:	jmp    0x140016324
   1400162ec:	mov    r9d,DWORD PTR [rsp+0x40]
   1400162f1:	test   r9d,r9d
   1400162f4:	jns    0x140016324
   1400162f6:	lea    rax,[rip+0x34d7b]        # 0x14004b078
   1400162fd:	mov    rcx,QWORD PTR [rip+0x34d74]        # 0x14004b078
   140016304:	cmp    rcx,rax
   140016307:	je     0x140016324
   140016309:	test   BYTE PTR [rcx+0x1c],0x1
   14001630d:	je     0x140016324
   14001630f:	mov    edx,0x17
   140016314:	lea    r8,[rip+0x2167d]        # 0x140037998
   14001631b:	mov    rcx,QWORD PTR [rcx+0x10]
   14001631f:	call   0x140001f70
   140016324:	add    rsp,0x30
   140016328:	pop    rbx
   140016329:	ret    
   14001632a:	int3   
   14001632b:	int3   
   14001632c:	int3   
   14001632d:	int3   
   14001632e:	int3   
   14001632f:	int3   
   140016330:	mov    rax,rsp
   140016333:	mov    QWORD PTR [rax+0x8],rcx
   140016337:	push   rdi
   140016338:	push   r12
   14001633a:	push   r13
   14001633c:	push   r14
   14001633e:	push   r15
   140016340:	sub    rsp,0x880
   140016347:	mov    QWORD PTR [rsp+0x60],0xfffffffffffffffe
   140016350:	mov    QWORD PTR [rax+0x18],rbx
   140016354:	mov    r14,rcx
   140016357:	xorps  xmm0,xmm0
   14001635a:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140016360:	and    QWORD PTR [rsp+0x40],0x0
   140016366:	and    QWORD PTR [rsp+0x48],0x0
   14001636c:	and    QWORD PTR [rsp+0x50],0x0
   140016372:	mov    ecx,0x10
   140016377:	call   0x140023f10
   14001637c:	mov    QWORD PTR [rsp+0x30],rax
   140016381:	xorps  xmm0,xmm0
   140016384:	movdqu XMMWORD PTR [rax],xmm0
   140016388:	lea    rcx,[rsp+0x30]
   14001638d:	mov    rax,QWORD PTR [rsp+0x30]
   140016392:	mov    QWORD PTR [rax],rcx
   140016395:	xor    r13d,r13d
   140016398:	lea    rbx,[r14+0x28]
   14001639c:	mov    rcx,rbx
   14001639f:	call   QWORD PTR [rip+0x1bd63]        # 0x140032108
   1400163a5:	lea    r12d,[r13+0x1]
   1400163a9:	mov    al,r12b
   1400163ac:	mov    rdx,QWORD PTR [rsp+0x30]
   1400163b1:	test   al,al
   1400163b3:	je     0x140016495
   1400163b9:	cmp    BYTE PTR [r14+0x61],0x0
   1400163be:	je     0x14001640c
   1400163c0:	lea    r15,[rip+0x34cb1]        # 0x14004b078
   1400163c7:	mov    rcx,QWORD PTR [rip+0x34caa]        # 0x14004b078
   1400163ce:	cmp    rcx,r15
   1400163d1:	je     0x1400163ee
   1400163d3:	test   BYTE PTR [rcx+0x1c],0x2
   1400163d7:	je     0x1400163ee
   1400163d9:	mov    edx,0x18
   1400163de:	lea    r8,[rip+0x215b3]        # 0x140037998
   1400163e5:	mov    rcx,QWORD PTR [rcx+0x10]
   1400163e9:	call   0x140001f08
   1400163ee:	test   r12b,r12b
   1400163f1:	je     0x1400163fd
   1400163f3:	mov    rcx,rbx
   1400163f6:	call   QWORD PTR [rip+0x1bcfc]        # 0x1400320f8
   1400163fc:	nop
   1400163fd:	lea    rcx,[rsp+0x30]
   140016402:	call   0x14001686c
   140016407:	jmp    0x140016751
   14001640c:	lea    rax,[rsp+0x30]
   140016411:	cmp    rax,r14
   140016414:	je     0x14001648e
   140016416:	mov    rax,rdx
   140016419:	mov    rdx,QWORD PTR [r14]
   14001641c:	mov    QWORD PTR [rsp+0x30],rdx
   140016421:	mov    QWORD PTR [r14],rax
   140016424:	test   rdx,rdx
   140016427:	je     0x140016436
   140016429:	lea    rax,[rsp+0x30]
   14001642e:	mov    QWORD PTR [rdx],rax
   140016431:	mov    rdx,QWORD PTR [rsp+0x30]
   140016436:	mov    rax,QWORD PTR [r14]
   140016439:	test   rax,rax
   14001643c:	je     0x140016446
   14001643e:	mov    QWORD PTR [rax],r14
   140016441:	mov    rdx,QWORD PTR [rsp+0x30]
   140016446:	mov    rcx,QWORD PTR [rsp+0x38]
   14001644b:	mov    rax,QWORD PTR [r14+0x8]
   14001644f:	mov    QWORD PTR [rsp+0x38],rax
   140016454:	mov    QWORD PTR [r14+0x8],rcx
   140016458:	mov    rcx,QWORD PTR [rsp+0x40]
   14001645d:	mov    rax,QWORD PTR [r14+0x10]
   140016461:	mov    QWORD PTR [rsp+0x40],rax
   140016466:	mov    QWORD PTR [r14+0x10],rcx
   14001646a:	mov    rcx,QWORD PTR [rsp+0x48]
   14001646f:	mov    rax,QWORD PTR [r14+0x18]
   140016473:	mov    QWORD PTR [rsp+0x48],rax
   140016478:	mov    QWORD PTR [r14+0x18],rcx
   14001647c:	mov    rcx,QWORD PTR [rsp+0x50]
   140016481:	mov    rax,QWORD PTR [r14+0x20]
   140016485:	mov    QWORD PTR [rsp+0x50],rax
   14001648a:	mov    QWORD PTR [r14+0x20],rcx
   14001648e:	xor    al,al
   140016490:	jmp    0x1400163b1
   140016495:	test   r12b,r12b
   140016498:	je     0x1400164a3
   14001649a:	mov    rcx,rbx
   14001649d:	call   QWORD PTR [rip+0x1bc55]        # 0x1400320f8
   1400164a3:	mov    rbx,QWORD PTR [rsp+0x50]
   1400164a8:	mov    eax,0xfa
   1400164ad:	cmp    rbx,rax
   1400164b0:	cmova  rbx,rax
   1400164b4:	and    QWORD PTR [rsp+0xa0],0x0
   1400164bd:	xor    edx,edx
   1400164bf:	mov    r8d,0x7c8
   1400164c5:	lea    rcx,[rsp+0xa8]
   1400164cd:	call   0x14002e2ce
   1400164d2:	and    QWORD PTR [rsp+0x870],0x0
   1400164db:	xor    edi,edi
   1400164dd:	test   rbx,rbx
   1400164e0:	je     0x140016545
   1400164e2:	lea    rdx,[rsp+0x68]
   1400164e7:	lea    rcx,[rsp+0x30]
   1400164ec:	call   0x140016af8
   1400164f1:	mov    rcx,rax
   1400164f4:	mov    r8,rdi
   1400164f7:	lea    rdx,[rsp+0x80]
   1400164ff:	call   0x140016b3c
   140016504:	mov    r8,QWORD PTR [rax]
   140016507:	test   r8,r8
   14001650a:	je     0x14001650f
   14001650c:	mov    r8,QWORD PTR [r8]
   14001650f:	mov    rdx,QWORD PTR [rax+0x10]
   140016513:	mov    rcx,QWORD PTR [r8+0x10]
   140016517:	sub    rcx,r12
   14001651a:	mov    rax,rdx
   14001651d:	shr    rax,1
   140016520:	and    rcx,rax
   140016523:	and    rdx,r12
   140016526:	mov    rax,QWORD PTR [r8+0x8]
   14001652a:	mov    rax,QWORD PTR [rax+rcx*8]
   14001652e:	mov    rax,QWORD PTR [rax+rdx*8]
   140016532:	mov    rcx,QWORD PTR [rax]
   140016535:	mov    QWORD PTR [rsp+rdi*8+0xa0],rcx
   14001653d:	add    rdi,r12
   140016540:	cmp    rdi,rbx
   140016543:	jb     0x1400164e2
   140016545:	mov    QWORD PTR [rsp+0x870],rbx
   14001654d:	cmp    BYTE PTR [r14+0x61],0x0
   140016552:	je     0x140016584
   140016554:	lea    r15,[rip+0x34b1d]        # 0x14004b078
   14001655b:	mov    rcx,QWORD PTR [rip+0x34b16]        # 0x14004b078
   140016562:	cmp    rcx,r15
   140016565:	je     0x1400165d6
   140016567:	test   BYTE PTR [rcx+0x1c],0x2
   14001656b:	je     0x1400165d6
   14001656d:	mov    edx,0x1d
   140016572:	lea    r8,[rip+0x2141f]        # 0x140037998
   140016579:	mov    rcx,QWORD PTR [rcx+0x10]
   14001657d:	call   0x140001f08
   140016582:	jmp    0x1400165cf
   140016584:	lea    r15,[rip+0x34aed]        # 0x14004b078
   14001658b:	mov    rcx,QWORD PTR [rip+0x34ae6]        # 0x14004b078
   140016592:	cmp    rcx,r15
   140016595:	je     0x1400165ae
   140016597:	test   BYTE PTR [rcx+0x1c],0x4
   14001659b:	je     0x1400165ae
   14001659d:	mov    edx,0x1e
   1400165a2:	mov    r9,rbx
   1400165a5:	mov    rcx,QWORD PTR [rcx+0x10]
   1400165a9:	call   0x140001f2c
   1400165ae:	mov    rdi,QWORD PTR [r14+0x78]
   1400165b2:	mov    rax,QWORD PTR [rdi]
   1400165b5:	mov    rbx,QWORD PTR [rax+0x18]
   1400165b9:	mov    rcx,rbx
   1400165bc:	call   QWORD PTR [rip+0x1c0e6]        # 0x1400326a8
   1400165c2:	lea    rdx,[rsp+0xa0]
   1400165ca:	mov    rcx,rdi
   1400165cd:	call   rbx
   1400165cf:	mov    rcx,QWORD PTR [rip+0x34aa2]        # 0x14004b078
   1400165d6:	jmp    0x1400165fc
   1400165d8:	mov    r12d,0x1
   1400165de:	lea    r15,[rip+0x34a93]        # 0x14004b078
   1400165e5:	mov    r14,QWORD PTR [rsp+0x8b0]
   1400165ed:	mov    r13d,DWORD PTR [rsp+0x8b8]
   1400165f5:	mov    rcx,QWORD PTR [rip+0x34a7c]        # 0x14004b078
   1400165fc:	test   r13d,r13d
   1400165ff:	jns    0x140016624
   140016601:	cmp    rcx,r15
   140016604:	je     0x140016624
   140016606:	test   BYTE PTR [rcx+0x1c],r12b
   14001660a:	je     0x140016624
   14001660c:	mov    edx,0x19
   140016611:	mov    r9d,r13d
   140016614:	lea    r8,[rip+0x2137d]        # 0x140037998
   14001661b:	mov    rcx,QWORD PTR [rcx+0x10]
   14001661f:	call   0x140001f70
   140016624:	and    QWORD PTR [rsp+0x8b8],0x0
   14001662d:	lea    rdi,[r14+0x28]
   140016631:	mov    rcx,rdi
   140016634:	call   QWORD PTR [rip+0x1bace]        # 0x140032108
   14001663a:	cmp    BYTE PTR [r14+0x61],0x0
   14001663f:	jne    0x140016716
   140016645:	mov    r12,QWORD PTR [r14+0x58]
   140016649:	and    QWORD PTR [r14+0x58],0x0
   14001664e:	lea    rbx,[r14+0x50]
   140016652:	mov    rcx,QWORD PTR [rbx]
   140016655:	mov    rax,QWORD PTR [r14+0x58]
   140016659:	mov    QWORD PTR [rbx],rax
   14001665c:	mov    QWORD PTR [r14+0x58],rcx
   140016660:	cmp    QWORD PTR [r14+0x20],0x0
   140016665:	je     0x1400166ee
   14001666b:	mov    rcx,QWORD PTR [rip+0x34a06]        # 0x14004b078
   140016672:	cmp    rcx,r15
   140016675:	je     0x140016696
   140016677:	test   BYTE PTR [rcx+0x1c],0x4
   14001667b:	je     0x140016696
   14001667d:	mov    edx,0x1b
   140016682:	mov    r9d,DWORD PTR [r14+0x68]
   140016686:	lea    r8,[rip+0x2130b]        # 0x140037998
   14001668d:	mov    rcx,QWORD PTR [rcx+0x10]
   140016691:	call   0x140001f70
   140016696:	cmp    QWORD PTR [rbx],0x0
   14001669a:	je     0x1400166af
   14001669c:	or     r8,0xffffffffffffffff
   1400166a0:	mov    rdx,QWORD PTR [rbx]
   1400166a3:	xor    ecx,ecx
   1400166a5:	call   QWORD PTR [rip+0x1ba95]        # 0x140032140
   1400166ab:	and    QWORD PTR [rbx],0x0
   1400166af:	mov    QWORD PTR [rsp+0x20],r14
   1400166b4:	mov    edx,DWORD PTR [r14+0x68]
   1400166b8:	mov    rcx,rbx
   1400166bb:	call   0x14002a700
   1400166c0:	test   eax,eax
   1400166c2:	jns    0x1400166ee
   1400166c4:	mov    rcx,QWORD PTR [rip+0x349ad]        # 0x14004b078
   1400166cb:	cmp    rcx,r15
   1400166ce:	je     0x1400166ee
   1400166d0:	test   BYTE PTR [rcx+0x1c],0x2
   1400166d4:	je     0x1400166ee
   1400166d6:	mov    edx,0x1c
   1400166db:	mov    r9d,eax
   1400166de:	lea    r8,[rip+0x212b3]        # 0x140037998
   1400166e5:	mov    rcx,QWORD PTR [rcx+0x10]
   1400166e9:	call   0x140001f70
   1400166ee:	call   0x14002b158
   1400166f3:	mov    QWORD PTR [r14+0x70],rax
   1400166f7:	mov    rcx,rdi
   1400166fa:	call   QWORD PTR [rip+0x1b9f8]        # 0x1400320f8
   140016700:	test   r12,r12
   140016703:	je     0x140016747
   140016705:	or     r8,0xffffffffffffffff
   140016709:	mov    rdx,r12
   14001670c:	xor    ecx,ecx
   14001670e:	call   QWORD PTR [rip+0x1ba2c]        # 0x140032140
   140016714:	jmp    0x140016747
   140016716:	mov    rcx,QWORD PTR [rip+0x3495b]        # 0x14004b078
   14001671d:	cmp    rcx,r15
   140016720:	je     0x14001673d
   140016722:	test   BYTE PTR [rcx+0x1c],0x2
   140016726:	je     0x14001673d
   140016728:	mov    edx,0x1a
   14001672d:	lea    r8,[rip+0x21264]        # 0x140037998
   140016734:	mov    rcx,QWORD PTR [rcx+0x10]
   140016738:	call   0x140001f08
   14001673d:	mov    rcx,rdi
   140016740:	call   QWORD PTR [rip+0x1b9b2]        # 0x1400320f8
   140016746:	nop
   140016747:	lea    rcx,[rsp+0x30]
   14001674c:	call   0x14001686c
   140016751:	mov    rbx,QWORD PTR [rsp+0x8c0]
   140016759:	add    rsp,0x880
   140016760:	pop    r15
   140016762:	pop    r14
   140016764:	pop    r13
   140016766:	pop    r12
   140016768:	pop    rdi
   140016769:	ret    
   14001676a:	int3   
   14001676b:	int3   
   14001676c:	int3   
   14001676d:	int3   
   14001676e:	int3   
   14001676f:	int3   
   140016770:	mov    rax,rsp
   140016773:	mov    QWORD PTR [rax+0x8],rcx
   140016777:	push   rdi
   140016778:	sub    rsp,0x30
   14001677c:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140016784:	mov    QWORD PTR [rax+0x10],rbx
   140016788:	mov    QWORD PTR [rax+0x18],rsi
   14001678c:	mov    rbx,rdx
   14001678f:	mov    rsi,rcx
   140016792:	mov    rax,QWORD PTR [rcx+0x8]
   140016796:	mov    r8,QWORD PTR [rcx]
   140016799:	mov    r9,rax
   14001679c:	sub    r9,r8
   14001679f:	cmp    r9,rdx
   1400167a2:	jbe    0x1400167dd
   1400167a4:	add    rbx,r8
   1400167a7:	cmp    rbx,r8
   1400167aa:	jne    0x1400167b5
   1400167ac:	mov    QWORD PTR [rcx+0x8],r8
   1400167b0:	jmp    0x140016856
   1400167b5:	cmp    rbx,rax
   1400167b8:	je     0x140016856
   1400167be:	mov    rdi,rax
   1400167c1:	sub    rdi,rax
   1400167c4:	mov    r8,rdi
   1400167c7:	mov    rdx,rax
   1400167ca:	mov    rcx,rbx
   1400167cd:	call   QWORD PTR [rip+0x1bccd]        # 0x1400324a0
   1400167d3:	lea    rax,[rdi+rbx*1]
   1400167d7:	mov    QWORD PTR [rsi+0x8],rax
   1400167db:	jmp    0x140016856
   1400167dd:	jae    0x140016856
   1400167df:	mov    r10,r8
   1400167e2:	sub    r10,rax
   1400167e5:	lea    r11,[r10+rdx*1]
   1400167e9:	mov    rdx,QWORD PTR [rcx+0x10]
   1400167ed:	mov    rcx,rdx
   1400167f0:	sub    rcx,rax
   1400167f3:	cmp    rcx,r11
   1400167f6:	jae    0x140016837
   1400167f8:	lea    rax,[r10-0x1]
   1400167fc:	cmp    rax,r11
   1400167ff:	jae    0x140016807
   140016801:	call   0x14000d388
   140016806:	int3   
   140016807:	lea    r10,[r9+r11*1]
   14001680b:	sub    rdx,r8
   14001680e:	mov    rcx,rdx
   140016811:	shr    rcx,1
   140016814:	or     rax,0xffffffffffffffff
   140016818:	sub    rax,rcx
   14001681b:	cmp    rax,rdx
   14001681e:	jae    0x140016824
   140016820:	xor    edx,edx
   140016822:	jmp    0x140016827
   140016824:	add    rdx,rcx
   140016827:	cmp    rdx,r10
   14001682a:	cmovb  rdx,r10
   14001682e:	mov    rcx,rsi
   140016831:	call   0x1400169cc
   140016836:	nop
   140016837:	mov    rcx,QWORD PTR [rsi+0x8]
   14001683b:	mov    r8,QWORD PTR [rsi]
   14001683e:	sub    r8,rcx
   140016841:	add    r8,rbx
   140016844:	xor    edx,edx
   140016846:	call   0x14002e2ce
   14001684b:	nop
   14001684c:	mov    rcx,QWORD PTR [rsi]
   14001684f:	add    rcx,rbx
   140016852:	mov    QWORD PTR [rsi+0x8],rcx
   140016856:	mov    rbx,QWORD PTR [rsp+0x48]
   14001685b:	mov    rsi,QWORD PTR [rsp+0x50]
   140016860:	add    rsp,0x30
   140016864:	pop    rdi
   140016865:	ret    
   140016866:	int3   
   140016867:	int3   
   140016868:	int3   
   140016869:	int3   
   14001686a:	int3   
   14001686b:	int3   
   14001686c:	mov    rax,rsp
   14001686f:	mov    QWORD PTR [rax+0x8],rbx
   140016873:	mov    QWORD PTR [rax+0x10],rsi
   140016877:	mov    QWORD PTR [rax+0x18],rdi
   14001687b:	push   r14
   14001687d:	sub    rsp,0x50
   140016881:	lea    rdx,[rax-0x38]
   140016885:	mov    rbx,rcx
   140016888:	call   0x140016af8
   14001688d:	lea    rdx,[rsp+0x38]
   140016892:	call   0x140016b18
   140016897:	mov    rdi,QWORD PTR [rsp+0x30]
   14001689c:	cmp    rdi,QWORD PTR [rsp+0x48]
   1400168a1:	je     0x14001690c
   1400168a3:	mov    r14,QWORD PTR [rsp+0x20]
   1400168a8:	test   r14,r14
   1400168ab:	jne    0x1400168b1
   1400168ad:	xor    ecx,ecx
   1400168af:	jmp    0x1400168b4
   1400168b1:	mov    rcx,QWORD PTR [r14]
   1400168b4:	mov    rdx,QWORD PTR [rcx+0x10]
   1400168b8:	mov    rax,rdi
   1400168bb:	shr    rax,1
   1400168be:	dec    rdx
   1400168c1:	and    rdx,rax
   1400168c4:	mov    rax,QWORD PTR [rcx+0x8]
   1400168c8:	mov    rcx,rdi
   1400168cb:	and    ecx,0x1
   1400168ce:	mov    rax,QWORD PTR [rax+rdx*8]
   1400168d2:	mov    rsi,QWORD PTR [rax+rcx*8]
   1400168d6:	test   rsi,rsi
   1400168d9:	je     0x140016902
   1400168db:	mov    rcx,QWORD PTR [rsi+0x8]
   1400168df:	test   rcx,rcx
   1400168e2:	je     0x1400168f9
   1400168e4:	call   QWORD PTR [rip+0x1bcde]        # 0x1400325c8
   1400168ea:	and    QWORD PTR [rsi+0x8],0x0
   1400168ef:	and    QWORD PTR [rsi+0x10],0x0
   1400168f4:	and    QWORD PTR [rsi+0x18],0x0
   1400168f9:	mov    rcx,rsi
   1400168fc:	call   QWORD PTR [rip+0x1bcc6]        # 0x1400325c8
   140016902:	inc    rdi
   140016905:	cmp    rdi,QWORD PTR [rsp+0x48]
   14001690a:	jne    0x1400168a8
   14001690c:	mov    rax,QWORD PTR [rbx+0x20]
   140016910:	test   rax,rax
   140016913:	je     0x14001692a
   140016915:	test   rax,rax
   140016918:	je     0x140016926
   14001691a:	sub    rax,0x1
   14001691e:	jne    0x140016915
   140016920:	and    QWORD PTR [rbx+0x18],rax
   140016924:	jmp    0x140016915
   140016926:	mov    QWORD PTR [rbx+0x20],rax
   14001692a:	mov    rdi,QWORD PTR [rbx+0x10]
   14001692e:	jmp    0x140016946
   140016930:	mov    rax,QWORD PTR [rbx+0x8]
   140016934:	dec    rdi
   140016937:	mov    rcx,QWORD PTR [rax+rdi*8]
   14001693b:	test   rcx,rcx
   14001693e:	je     0x140016946
   140016940:	call   QWORD PTR [rip+0x1bc82]        # 0x1400325c8
   140016946:	test   rdi,rdi
   140016949:	jne    0x140016930
   14001694b:	mov    rcx,QWORD PTR [rbx+0x8]
   14001694f:	test   rcx,rcx
   140016952:	je     0x14001695a
   140016954:	call   QWORD PTR [rip+0x1bc6e]        # 0x1400325c8
   14001695a:	and    QWORD PTR [rbx+0x10],0x0
   14001695f:	mov    rcx,rbx
   140016962:	and    QWORD PTR [rbx+0x8],0x0
   140016967:	mov    rbx,QWORD PTR [rsp+0x60]
   14001696c:	mov    rsi,QWORD PTR [rsp+0x68]
   140016971:	mov    rdi,QWORD PTR [rsp+0x70]
   140016976:	add    rsp,0x50
   14001697a:	pop    r14
   14001697c:	jmp    0x140016a74
   140016981:	int3   
   140016982:	int3   
   140016983:	int3   
   140016984:	int3   
   140016985:	int3   
   140016986:	int3   
   140016987:	int3   
   140016988:	rex push rbx
   14001698a:	sub    rsp,0x20
   14001698e:	mov    rbx,QWORD PTR [rcx]
   140016991:	test   rbx,rbx
   140016994:	je     0x1400169bd
   140016996:	mov    rcx,QWORD PTR [rbx+0x8]
   14001699a:	test   rcx,rcx
   14001699d:	je     0x1400169b4
   14001699f:	call   QWORD PTR [rip+0x1bc23]        # 0x1400325c8
   1400169a5:	and    QWORD PTR [rbx+0x8],0x0
   1400169aa:	and    QWORD PTR [rbx+0x10],0x0
   1400169af:	and    QWORD PTR [rbx+0x18],0x0
   1400169b4:	mov    rcx,rbx
   1400169b7:	call   QWORD PTR [rip+0x1bc0b]        # 0x1400325c8
   1400169bd:	add    rsp,0x20
   1400169c1:	pop    rbx
   1400169c2:	ret    
   1400169c3:	int3   
   1400169c4:	int3   
   1400169c5:	int3   
   1400169c6:	int3   
   1400169c7:	int3   
   1400169c8:	int3   
   1400169c9:	int3   
   1400169ca:	int3   
   1400169cb:	int3   
   1400169cc:	mov    rax,rsp
   1400169cf:	push   r14
   1400169d1:	sub    rsp,0x30
   1400169d5:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   1400169dd:	mov    QWORD PTR [rax+0x8],rbx
   1400169e1:	mov    QWORD PTR [rax+0x18],rsi
   1400169e5:	mov    QWORD PTR [rax+0x20],rdi
   1400169e9:	mov    rsi,rdx
   1400169ec:	mov    rdi,rcx
   1400169ef:	xor    ebx,ebx
   1400169f1:	mov    QWORD PTR [rsp+0x48],rbx
   1400169f6:	test   rdx,rdx
   1400169f9:	je     0x140016a19
   1400169fb:	cmp    rdx,0xffffffffffffffff
   1400169ff:	ja     0x140016a13
   140016a01:	mov    rcx,rdx
   140016a04:	call   0x140023f10
   140016a09:	mov    rbx,rax
   140016a0c:	mov    QWORD PTR [rsp+0x48],rax
   140016a11:	jmp    0x140016a19
   140016a13:	call   0x14000203c
   140016a18:	nop
   140016a19:	mov    r8,QWORD PTR [rdi+0x8]
   140016a1d:	sub    r8,QWORD PTR [rdi]
   140016a20:	mov    rdx,QWORD PTR [rdi]
   140016a23:	mov    rcx,rbx
   140016a26:	call   QWORD PTR [rip+0x1ba74]        # 0x1400324a0
   140016a2c:	nop
   140016a2d:	mov    rcx,QWORD PTR [rdi]
   140016a30:	mov    r14,QWORD PTR [rdi+0x8]
   140016a34:	sub    r14,rcx
   140016a37:	test   rcx,rcx
   140016a3a:	je     0x140016a42
   140016a3c:	call   QWORD PTR [rip+0x1bb86]        # 0x1400325c8
   140016a42:	lea    rax,[rbx+rsi*1]
   140016a46:	mov    QWORD PTR [rdi+0x10],rax
   140016a4a:	lea    rax,[rbx+r14*1]
   140016a4e:	mov    QWORD PTR [rdi+0x8],rax
   140016a52:	mov    QWORD PTR [rdi],rbx
   140016a55:	mov    rbx,QWORD PTR [rsp+0x40]
   140016a5a:	mov    rsi,QWORD PTR [rsp+0x50]
   140016a5f:	mov    rdi,QWORD PTR [rsp+0x58]
   140016a64:	add    rsp,0x30
   140016a68:	pop    r14
   140016a6a:	ret    
   140016a6b:	int3   
   140016a6c:	int3   
   140016a6d:	int3   
   140016a6e:	int3   
   140016a6f:	int3   
   140016a70:	int3   
   140016a71:	int3   
   140016a72:	int3   
   140016a73:	int3   
   140016a74:	mov    QWORD PTR [rsp+0x8],rbx
   140016a79:	push   rdi
   140016a7a:	sub    rsp,0x20
   140016a7e:	mov    rax,QWORD PTR [rcx+0x20]
   140016a82:	mov    rbx,rcx
   140016a85:	test   rax,rax
   140016a88:	je     0x140016a9f
   140016a8a:	test   rax,rax
   140016a8d:	je     0x140016a9b
   140016a8f:	sub    rax,0x1
   140016a93:	jne    0x140016a8a
   140016a95:	and    QWORD PTR [rcx+0x18],rax
   140016a99:	jmp    0x140016a8a
   140016a9b:	mov    QWORD PTR [rcx+0x20],rax
   140016a9f:	mov    rdi,QWORD PTR [rcx+0x10]
   140016aa3:	jmp    0x140016abb
   140016aa5:	mov    rax,QWORD PTR [rbx+0x8]
   140016aa9:	dec    rdi
   140016aac:	mov    rcx,QWORD PTR [rax+rdi*8]
   140016ab0:	test   rcx,rcx
   140016ab3:	je     0x140016abb
   140016ab5:	call   QWORD PTR [rip+0x1bb0d]        # 0x1400325c8
   140016abb:	test   rdi,rdi
   140016abe:	jne    0x140016aa5
   140016ac0:	mov    rcx,QWORD PTR [rbx+0x8]
   140016ac4:	test   rcx,rcx
   140016ac7:	je     0x140016acf
   140016ac9:	call   QWORD PTR [rip+0x1baf9]        # 0x1400325c8
   140016acf:	mov    rcx,QWORD PTR [rbx]
   140016ad2:	and    QWORD PTR [rbx+0x10],0x0
   140016ad7:	and    QWORD PTR [rbx+0x8],0x0
   140016adc:	call   QWORD PTR [rip+0x1bae6]        # 0x1400325c8
   140016ae2:	and    QWORD PTR [rbx],0x0
   140016ae6:	mov    rbx,QWORD PTR [rsp+0x30]
   140016aeb:	add    rsp,0x20
   140016aef:	pop    rdi
   140016af0:	ret    
   140016af1:	int3   
   140016af2:	int3   
   140016af3:	int3   
   140016af4:	int3   
   140016af5:	int3   
   140016af6:	int3   
   140016af7:	int3   
   140016af8:	mov    rax,QWORD PTR [rcx]
   140016afb:	mov    r8,QWORD PTR [rcx+0x18]
   140016aff:	and    QWORD PTR [rdx+0x8],0x0
   140016b04:	mov    QWORD PTR [rdx],rax
   140016b07:	mov    rax,rdx
   140016b0a:	mov    QWORD PTR [rdx+0x10],r8
   140016b0e:	ret    
   140016b0f:	int3   
   140016b10:	int3   
   140016b11:	int3   
   140016b12:	int3   
   140016b13:	int3   
   140016b14:	int3   
   140016b15:	int3   
   140016b16:	int3   
   140016b17:	int3   
   140016b18:	mov    rax,QWORD PTR [rcx]
   140016b1b:	mov    r8,QWORD PTR [rcx+0x20]
   140016b1f:	add    r8,QWORD PTR [rcx+0x18]
   140016b23:	and    QWORD PTR [rdx+0x8],0x0
   140016b28:	mov    QWORD PTR [rdx],rax
   140016b2b:	mov    rax,rdx
   140016b2e:	mov    QWORD PTR [rdx+0x10],r8
   140016b32:	ret    
   140016b33:	int3   
   140016b34:	int3   
   140016b35:	int3   
   140016b36:	int3   
   140016b37:	int3   
   140016b38:	int3   
   140016b39:	int3   
   140016b3a:	int3   
   140016b3b:	int3   
   140016b3c:	mov    r11,rsp
   140016b3f:	mov    QWORD PTR [r11+0x10],rbx
   140016b43:	mov    QWORD PTR [r11+0x18],rsi
   140016b47:	mov    QWORD PTR [r11+0x20],rdi
   140016b4b:	push   r14
   140016b4d:	sub    rsp,0x20
   140016b51:	mov    rax,QWORD PTR [rcx]
   140016b54:	xor    edi,edi
   140016b56:	mov    r14,r8
   140016b59:	mov    rbx,rdx
   140016b5c:	mov    rsi,rcx
   140016b5f:	test   rax,rax
   140016b62:	je     0x140016b87
   140016b64:	mov    rax,QWORD PTR [rax]
   140016b67:	test   rax,rax
   140016b6a:	jne    0x140016b84
   140016b6c:	lea    edx,[rdi+0x3]
   140016b6f:	lea    rcx,[r11+0x8]
   140016b73:	call   0x14002d8a4
   140016b78:	lea    rcx,[rsp+0x30]
   140016b7d:	call   0x14002d934
   140016b82:	jmp    0x140016b87
   140016b84:	mov    rdi,QWORD PTR [rax]
   140016b87:	mov    rsi,QWORD PTR [rsi+0x10]
   140016b8b:	and    QWORD PTR [rbx],0x0
   140016b8f:	add    rsi,r14
   140016b92:	and    QWORD PTR [rbx+0x8],0x0
   140016b97:	test   rdi,rdi
   140016b9a:	je     0x140016bc3
   140016b9c:	mov    rax,QWORD PTR [rdi]
   140016b9f:	test   rax,rax
   140016ba2:	jne    0x140016bbd
   140016ba4:	lea    edx,[rax+0x3]
   140016ba7:	lea    rcx,[rsp+0x30]
   140016bac:	call   0x14002d8a4
   140016bb1:	lea    rcx,[rsp+0x30]
   140016bb6:	call   0x14002d934
   140016bbb:	jmp    0x140016bc3
   140016bbd:	mov    rax,QWORD PTR [rax]
   140016bc0:	mov    QWORD PTR [rbx],rax
   140016bc3:	mov    rdi,QWORD PTR [rsp+0x48]
   140016bc8:	mov    rax,rbx
   140016bcb:	mov    QWORD PTR [rbx+0x10],rsi
   140016bcf:	mov    rbx,QWORD PTR [rsp+0x38]
   140016bd4:	mov    rsi,QWORD PTR [rsp+0x40]
   140016bd9:	add    rsp,0x20
   140016bdd:	pop    r14
   140016bdf:	ret    
   140016be0:	int3   
   140016be1:	int3   
   140016be2:	int3   
   140016be3:	int3   
   140016be4:	int3   
   140016be5:	int3   
   140016be6:	int3   
   140016be7:	int3   
   140016be8:	mov    QWORD PTR [rsp+0x8],rbx
   140016bed:	mov    QWORD PTR [rsp+0x10],rbp
   140016bf2:	mov    QWORD PTR [rsp+0x18],rsi
   140016bf7:	push   rdi
   140016bf8:	push   r14
   140016bfa:	push   r15
   140016bfc:	sub    rsp,0x20
   140016c00:	mov    rbp,rcx
   140016c03:	mov    esi,0x1
   140016c08:	mov    rcx,QWORD PTR [rcx+0x10]
   140016c0c:	test   rcx,rcx
   140016c0f:	cmovne rsi,rcx
   140016c13:	mov    rax,rsi
   140016c16:	sub    rax,rcx
   140016c19:	cmp    rax,0x1
   140016c1d:	jb     0x140016c25
   140016c1f:	cmp    rsi,0x8
   140016c23:	jae    0x140016c40
   140016c25:	movabs rax,0xfffffffffffffff
   140016c2f:	sub    rax,rsi
   140016c32:	cmp    rax,rsi
   140016c35:	jb     0x140016d72
   140016c3b:	add    rsi,rsi
   140016c3e:	jmp    0x140016c13
   140016c40:	mov    rdi,QWORD PTR [rbp+0x18]
   140016c44:	sub    rsi,rcx
   140016c47:	shr    rdi,1
   140016c4a:	xor    r14d,r14d
   140016c4d:	add    rcx,rsi
   140016c50:	je     0x140016c71
   140016c52:	movabs rax,0x1fffffffffffffff
   140016c5c:	cmp    rcx,rax
   140016c5f:	ja     0x140016d6c
   140016c65:	shl    rcx,0x3
   140016c69:	call   0x140023f10
   140016c6e:	mov    r14,rax
   140016c71:	mov    rax,QWORD PTR [rbp+0x8]
   140016c75:	mov    r15,rdi
   140016c78:	mov    rbx,QWORD PTR [rbp+0x10]
   140016c7c:	shl    rbx,0x3
   140016c80:	shl    r15,0x3
   140016c84:	lea    rdx,[rax+r15*1]
   140016c88:	sub    rbx,rdx
   140016c8b:	lea    rcx,[r15+r14*1]
   140016c8f:	add    rbx,rax
   140016c92:	and    rbx,0xfffffffffffffff8
   140016c96:	mov    r8,rbx
   140016c99:	call   QWORD PTR [rip+0x1b801]        # 0x1400324a0
   140016c9f:	mov    rdx,QWORD PTR [rbp+0x8]
   140016ca3:	add    rax,rbx
   140016ca6:	mov    rcx,rax
   140016ca9:	cmp    rdi,rsi
   140016cac:	ja     0x140016cf1
   140016cae:	mov    rbx,rdx
   140016cb1:	sub    rbx,rdx
   140016cb4:	add    rbx,r15
   140016cb7:	mov    r15,rsi
   140016cba:	and    rbx,0xfffffffffffffff8
   140016cbe:	mov    r8,rbx
   140016cc1:	call   QWORD PTR [rip+0x1b7d9]        # 0x1400324a0
   140016cc7:	add    rax,rbx
   140016cca:	sub    r15,rdi
   140016ccd:	je     0x140016ce0
   140016ccf:	shl    r15,0x3
   140016cd3:	xor    edx,edx
   140016cd5:	mov    r8,r15
   140016cd8:	mov    rcx,rax
   140016cdb:	call   0x14002e2ce
   140016ce0:	test   rdi,rdi
   140016ce3:	je     0x140016d3c
   140016ce5:	shl    rdi,0x3
   140016ce9:	mov    rcx,r14
   140016cec:	mov    r8,rdi
   140016cef:	jmp    0x140016d35
   140016cf1:	mov    rdi,rsi
   140016cf4:	shl    rdi,0x3
   140016cf8:	mov    r8,rdi
   140016cfb:	and    r8,0xfffffffffffffff8
   140016cff:	call   QWORD PTR [rip+0x1b79b]        # 0x1400324a0
   140016d05:	mov    rbx,QWORD PTR [rbp+0x8]
   140016d09:	mov    rcx,r14
   140016d0c:	lea    rdx,[rdi+rbx*1]
   140016d10:	sub    rbx,rdx
   140016d13:	add    rbx,r15
   140016d16:	and    rbx,0xfffffffffffffff8
   140016d1a:	mov    r8,rbx
   140016d1d:	call   QWORD PTR [rip+0x1b77d]        # 0x1400324a0
   140016d23:	add    rax,rbx
   140016d26:	test   rsi,rsi
   140016d29:	je     0x140016d3c
   140016d2b:	mov    r8,rsi
   140016d2e:	mov    rcx,rax
   140016d31:	shl    r8,0x3
   140016d35:	xor    edx,edx
   140016d37:	call   0x14002e2ce
   140016d3c:	mov    rcx,QWORD PTR [rbp+0x8]
   140016d40:	test   rcx,rcx
   140016d43:	je     0x140016d4b
   140016d45:	call   QWORD PTR [rip+0x1b87d]        # 0x1400325c8
   140016d4b:	add    QWORD PTR [rbp+0x10],rsi
   140016d4f:	mov    rsi,QWORD PTR [rsp+0x50]
   140016d54:	mov    rbx,QWORD PTR [rsp+0x40]
   140016d59:	mov    QWORD PTR [rbp+0x8],r14
   140016d5d:	mov    rbp,QWORD PTR [rsp+0x48]
   140016d62:	add    rsp,0x20
   140016d66:	pop    r15
   140016d68:	pop    r14
   140016d6a:	pop    rdi
   140016d6b:	ret    
   140016d6c:	call   0x14000203c
   140016d71:	int3   
   140016d72:	call   0x140016d80
   140016d77:	int3   
   140016d78:	int3   
   140016d79:	int3   
   140016d7a:	int3   
   140016d7b:	int3   
   140016d7c:	int3   
   140016d7d:	int3   
   140016d7e:	int3   
   140016d7f:	int3   
   140016d80:	sub    rsp,0x28
   140016d84:	lea    rcx,[rip+0x20bf5]        # 0x140037980
   140016d8b:	call   0x14002d7f8
   140016d90:	int3   
   140016d91:	int3   
   140016d92:	int3   
   140016d93:	int3   
   140016d94:	int3   
   140016d95:	int3   
   140016d96:	int3   
   140016d97:	int3   
   140016d98:	rex push rbp
   140016d9a:	push   rbx
   140016d9b:	mov    rbp,rsp
   140016d9e:	sub    rsp,0x48
   140016da2:	mov    QWORD PTR [rbp-0x18],0xfffffffffffffffe
   140016daa:	and    QWORD PTR [rbp-0x10],0x0
   140016daf:	and    QWORD PTR [rbp+0x30],0x0
   140016db4:	lea    rdx,[rbp+0x30]
   140016db8:	lea    rcx,[rip+0x20c89]        # 0x140037a48
   140016dbf:	call   QWORD PTR [rip+0x1b66b]        # 0x140032430
   140016dc5:	test   eax,eax
   140016dc7:	jns    0x140016dd1
   140016dc9:	mov    ecx,eax
   140016dcb:	call   0x140029d64
   140016dd0:	int3   
   140016dd1:	and    DWORD PTR [rbp+0x18],0x0
   140016dd5:	and    DWORD PTR [rbp+0x28],0x0
   140016dd9:	mov    DWORD PTR [rbp+0x20],0x4
   140016de0:	and    QWORD PTR [rsp+0x28],0x0
   140016de6:	lea    rax,[rbp+0x28]
   140016dea:	mov    QWORD PTR [rsp+0x20],rax
   140016def:	lea    r9,[rbp+0x20]
   140016df3:	lea    r8,[rbp+0x18]
   140016df7:	lea    rdx,[rip+0x20c72]        # 0x140037a70
   140016dfe:	mov    rcx,QWORD PTR [rbp+0x30]
   140016e02:	call   QWORD PTR [rip+0x1b620]        # 0x140032428
   140016e08:	test   eax,eax
   140016e0a:	js     0x140016e3c
   140016e0c:	cmp    DWORD PTR [rbp+0x18],0x1
   140016e10:	jbe    0x140016e19
   140016e12:	mov    eax,0x8007065d
   140016e17:	jmp    0x140016e3c
   140016e19:	cmp    DWORD PTR [rbp+0x20],0x0
   140016e1d:	jne    0x140016e23
   140016e1f:	xor    eax,eax
   140016e21:	jmp    0x140016e26
   140016e23:	mov    eax,DWORD PTR [rbp+0x28]
   140016e26:	mov    ebx,eax
   140016e28:	mov    rcx,QWORD PTR [rbp+0x30]
   140016e2c:	test   rcx,rcx
   140016e2f:	je     0x140016e37
   140016e31:	call   QWORD PTR [rip+0x1b5b9]        # 0x1400323f0
   140016e37:	mov    rax,rbx
   140016e3a:	jmp    0x140016e44
   140016e3c:	mov    ecx,eax
   140016e3e:	call   0x140029d64
   140016e43:	nop
   140016e44:	add    rsp,0x48
   140016e48:	pop    rbx
   140016e49:	pop    rbp
   140016e4a:	ret    
   140016e4b:	int3   
   140016e4c:	int3   
   140016e4d:	int3   
   140016e4e:	int3   
   140016e4f:	int3   
   140016e50:	int3   
   140016e51:	int3   
   140016e52:	int3   
   140016e53:	int3   
   140016e54:	rex push rbp
   140016e56:	push   rbx
   140016e57:	mov    rbp,rsp
   140016e5a:	sub    rsp,0x48
   140016e5e:	mov    QWORD PTR [rbp-0x18],0xfffffffffffffffe
   140016e66:	and    QWORD PTR [rbp-0x10],0x0
   140016e6b:	and    QWORD PTR [rbp+0x30],0x0
   140016e70:	lea    rdx,[rbp+0x30]
   140016e74:	lea    rcx,[rip+0x20c15]        # 0x140037a90
   140016e7b:	call   QWORD PTR [rip+0x1b5af]        # 0x140032430
   140016e81:	test   eax,eax
   140016e83:	jns    0x140016e8d
   140016e85:	mov    ecx,eax
   140016e87:	call   0x140029d64
   140016e8c:	int3   
   140016e8d:	and    DWORD PTR [rbp+0x18],0x0
   140016e91:	and    DWORD PTR [rbp+0x28],0x0
   140016e95:	mov    DWORD PTR [rbp+0x20],0x4
   140016e9c:	and    QWORD PTR [rsp+0x28],0x0
   140016ea2:	lea    rax,[rbp+0x28]
   140016ea6:	mov    QWORD PTR [rsp+0x20],rax
   140016eab:	lea    r9,[rbp+0x20]
   140016eaf:	lea    r8,[rbp+0x18]
   140016eb3:	lea    rdx,[rip+0x20be6]        # 0x140037aa0
   140016eba:	mov    rcx,QWORD PTR [rbp+0x30]
   140016ebe:	call   QWORD PTR [rip+0x1b564]        # 0x140032428
   140016ec4:	test   eax,eax
   140016ec6:	js     0x140016ef5
   140016ec8:	cmp    DWORD PTR [rbp+0x18],0x1
   140016ecc:	jbe    0x140016ed5
   140016ece:	mov    eax,0x8007065d
   140016ed3:	jmp    0x140016ef5
   140016ed5:	cmp    DWORD PTR [rbp+0x20],0x0
   140016ed9:	jne    0x140016edf
   140016edb:	xor    ebx,ebx
   140016edd:	jmp    0x140016ee2
   140016edf:	mov    ebx,DWORD PTR [rbp+0x28]
   140016ee2:	mov    rcx,QWORD PTR [rbp+0x30]
   140016ee6:	test   rcx,rcx
   140016ee9:	je     0x140016ef1
   140016eeb:	call   QWORD PTR [rip+0x1b4ff]        # 0x1400323f0
   140016ef1:	mov    eax,ebx
   140016ef3:	jmp    0x140016efd
   140016ef5:	mov    ecx,eax
   140016ef7:	call   0x140029d64
   140016efc:	nop
   140016efd:	add    rsp,0x48
   140016f01:	pop    rbx
   140016f02:	pop    rbp
   140016f03:	ret    
   140016f04:	int3   
   140016f05:	int3   
   140016f06:	int3   
   140016f07:	int3   
   140016f08:	int3   
   140016f09:	int3   
   140016f0a:	int3   
   140016f0b:	int3   
   140016f0c:	mov    rax,rsp
   140016f0f:	push   rbp
   140016f10:	lea    rbp,[rax-0x5f]
   140016f14:	sub    rsp,0xa0
   140016f1b:	mov    QWORD PTR [rbp+0xf],0xfffffffffffffffe
   140016f23:	mov    QWORD PTR [rax+0x10],rbx
   140016f27:	mov    QWORD PTR [rax+0x18],rsi
   140016f2b:	mov    QWORD PTR [rax+0x20],rdi
   140016f2f:	mov    rax,QWORD PTR [rip+0x340ea]        # 0x14004b020
   140016f36:	xor    rax,rsp
   140016f39:	mov    QWORD PTR [rbp+0x47],rax
   140016f3d:	mov    rbx,rcx
   140016f40:	xor    esi,esi
   140016f42:	mov    DWORD PTR [rbp+0x7],esi
   140016f45:	mov    QWORD PTR [rbp-0x1],rsi
   140016f49:	mov    QWORD PTR [rbp-0x11],rsi
   140016f4d:	lea    rdx,[rbp-0x11]
   140016f51:	lea    rcx,[rip+0x20b38]        # 0x140037a90
   140016f58:	call   QWORD PTR [rip+0x1b4d2]        # 0x140032430
   140016f5e:	test   eax,eax
   140016f60:	jns    0x140016f6a
   140016f62:	mov    ecx,eax
   140016f64:	call   0x140029d64
   140016f69:	int3   
   140016f6a:	mov    QWORD PTR [rbp+0x17],rsi
   140016f6e:	mov    QWORD PTR [rbp-0x19],rsi
   140016f72:	mov    DWORD PTR [rbp-0x1],0x3
   140016f79:	mov    DWORD PTR [rbp-0x9],esi
   140016f7c:	mov    QWORD PTR [rsp+0x28],rsi
   140016f81:	lea    rax,[rbp-0x19]
   140016f85:	mov    QWORD PTR [rsp+0x20],rax
   140016f8a:	lea    r9,[rbp-0x9]
   140016f8e:	lea    r8,[rbp-0x1]
   140016f92:	lea    rdx,[rip+0x20b27]        # 0x140037ac0
   140016f99:	mov    rcx,QWORD PTR [rbp-0x11]
   140016f9d:	call   QWORD PTR [rip+0x1b47d]        # 0x140032420
   140016fa3:	test   eax,eax
   140016fa5:	jns    0x140016faf
   140016fa7:	mov    ecx,eax
   140016fa9:	call   0x140029d64
   140016fae:	int3   
   140016faf:	mov    rdx,QWORD PTR [rbp-0x19]
   140016fb3:	lea    rcx,[rbp+0x1f]
   140016fb7:	call   0x14001781c
   140016fbc:	mov    rdi,rax
   140016fbf:	mov    QWORD PTR [rbx+0x18],0x7
   140016fc7:	mov    QWORD PTR [rbx+0x10],rsi
   140016fcb:	mov    WORD PTR [rbx],si
   140016fce:	cmp    rbx,rax
   140016fd1:	je     0x140016ffe
   140016fd3:	mov    rdx,rax
   140016fd6:	mov    rcx,rbx
   140016fd9:	call   0x14000db60
   140016fde:	mov    rcx,QWORD PTR [rbx+0x10]
   140016fe2:	mov    rax,QWORD PTR [rdi+0x10]
   140016fe6:	mov    QWORD PTR [rbx+0x10],rax
   140016fea:	mov    QWORD PTR [rdi+0x10],rcx
   140016fee:	mov    rcx,QWORD PTR [rbx+0x18]
   140016ff2:	mov    rax,QWORD PTR [rdi+0x18]
   140016ff6:	mov    QWORD PTR [rbx+0x18],rax
   140016ffa:	mov    QWORD PTR [rdi+0x18],rcx
   140016ffe:	cmp    QWORD PTR [rbp+0x37],0x8
   140017003:	jb     0x14001700f
   140017005:	mov    rcx,QWORD PTR [rbp+0x1f]
   140017009:	call   QWORD PTR [rip+0x1b5b9]        # 0x1400325c8
   14001700f:	mov    QWORD PTR [rbp+0x37],0x7
   140017017:	mov    QWORD PTR [rbp+0x2f],rsi
   14001701b:	mov    WORD PTR [rbp+0x1f],si
   14001701f:	mov    rcx,QWORD PTR [rbp-0x19]
   140017023:	test   rcx,rcx
   140017026:	je     0x14001702f
   140017028:	call   QWORD PTR [rip+0x1b41a]        # 0x140032448
   14001702e:	nop
   14001702f:	mov    rcx,QWORD PTR [rbp-0x11]
   140017033:	test   rcx,rcx
   140017036:	je     0x14001703e
   140017038:	call   QWORD PTR [rip+0x1b3b2]        # 0x1400323f0
   14001703e:	mov    rax,rbx
   140017041:	mov    rcx,QWORD PTR [rbp+0x47]
   140017045:	xor    rcx,rsp
   140017048:	call   0x14002dd00
   14001704d:	lea    r11,[rsp+0xa0]
   140017055:	mov    rbx,QWORD PTR [r11+0x18]
   140017059:	mov    rsi,QWORD PTR [r11+0x20]
   14001705d:	mov    rdi,QWORD PTR [r11+0x28]
   140017061:	mov    rsp,r11
   140017064:	pop    rbp
   140017065:	ret    
   140017066:	int3   
   140017067:	int3   
   140017068:	int3   
   140017069:	int3   
   14001706a:	int3   
   14001706b:	int3   
   14001706c:	rex push rbp
   14001706e:	push   rbx
   14001706f:	push   rdi
   140017070:	mov    rbp,rsp
   140017073:	sub    rsp,0x40
   140017077:	xor    ebx,ebx
   140017079:	lea    rdx,[rbp+0x38]
   14001707d:	and    QWORD PTR [rbp-0x10],rbx
   140017081:	lea    rcx,[rip+0x20a08]        # 0x140037a90
   140017088:	and    QWORD PTR [rbp+0x38],rbx
   14001708c:	call   QWORD PTR [rip+0x1b39e]        # 0x140032430
   140017092:	mov    rcx,QWORD PTR [rbp+0x38]
   140017096:	mov    edi,eax
   140017098:	test   eax,eax
   14001709a:	js     0x1400170e1
   14001709c:	and    QWORD PTR [rsp+0x28],rbx
   1400170a1:	lea    rax,[rbp+0x20]
   1400170a5:	and    DWORD PTR [rbp+0x28],ebx
   1400170a8:	lea    r9,[rbp+0x30]
   1400170ac:	and    DWORD PTR [rbp+0x20],ebx
   1400170af:	lea    r8,[rbp+0x28]
   1400170b3:	lea    rdx,[rip+0x209e6]        # 0x140037aa0
   1400170ba:	mov    QWORD PTR [rsp+0x20],rax
   1400170bf:	mov    DWORD PTR [rbp+0x30],0x4
   1400170c6:	call   QWORD PTR [rip+0x1b35c]        # 0x140032428
   1400170cc:	mov    edi,eax
   1400170ce:	test   eax,eax
   1400170d0:	js     0x1400170dd
   1400170d2:	cmp    DWORD PTR [rbp+0x28],0x1
   1400170d6:	jbe    0x1400170f2
   1400170d8:	mov    edi,0x8007065d
   1400170dd:	mov    rcx,QWORD PTR [rbp+0x38]
   1400170e1:	test   rcx,rcx
   1400170e4:	je     0x1400170ec
   1400170e6:	call   QWORD PTR [rip+0x1b304]        # 0x1400323f0
   1400170ec:	test   edi,edi
   1400170ee:	jns    0x14001714a
   1400170f0:	jmp    0x140017154
   1400170f2:	mov    eax,DWORD PTR [rbp+0x30]
   1400170f5:	neg    eax
   1400170f7:	sbb    ebx,ebx
   1400170f9:	and    ebx,DWORD PTR [rbp+0x20]
   1400170fc:	mov    DWORD PTR [rbp+0x20],ebx
   1400170ff:	cmp    ebx,0x3
   140017102:	jb     0x140017137
   140017104:	mov    rcx,QWORD PTR [rip+0x33f6d]        # 0x14004b078
   14001710b:	lea    rax,[rip+0x33f66]        # 0x14004b078
   140017112:	cmp    rcx,rax
   140017115:	je     0x140017135
   140017117:	test   BYTE PTR [rcx+0x1c],0x1
   14001711b:	je     0x140017135
   14001711d:	mov    rcx,QWORD PTR [rcx+0x10]
   140017121:	lea    r8,[rip+0x261b8]        # 0x14003d2e0
   140017128:	mov    edx,0xc
   14001712d:	mov    r9d,ebx
   140017130:	call   0x140001f70
   140017135:	xor    ebx,ebx
   140017137:	mov    rcx,QWORD PTR [rbp+0x38]
   14001713b:	test   rcx,rcx
   14001713e:	je     0x140017146
   140017140:	call   QWORD PTR [rip+0x1b2aa]        # 0x1400323f0
   140017146:	xor    edi,edi
   140017148:	jmp    0x1400170ec
   14001714a:	mov    eax,ebx
   14001714c:	add    rsp,0x40
   140017150:	pop    rdi
   140017151:	pop    rbx
   140017152:	pop    rbp
   140017153:	ret    
   140017154:	mov    ecx,edi
   140017156:	call   0x140029d64
   14001715b:	int3   
   14001715c:	int3   
   14001715d:	int3   
   14001715e:	int3   
   14001715f:	int3   
   140017160:	int3   
   140017161:	int3   
   140017162:	int3   
   140017163:	int3   
   140017164:	rex push rbp
   140017166:	push   rbx
   140017167:	mov    rbp,rsp
   14001716a:	sub    rsp,0x48
   14001716e:	mov    QWORD PTR [rbp-0x18],0xfffffffffffffffe
   140017176:	and    QWORD PTR [rbp-0x10],0x0
   14001717b:	and    QWORD PTR [rbp+0x30],0x0
   140017180:	lea    rdx,[rbp+0x30]
   140017184:	lea    rcx,[rip+0x208bd]        # 0x140037a48
   14001718b:	call   QWORD PTR [rip+0x1b29f]        # 0x140032430
   140017191:	test   eax,eax
   140017193:	jns    0x14001719d
   140017195:	mov    ecx,eax
   140017197:	call   0x140029d64
   14001719c:	int3   
   14001719d:	and    DWORD PTR [rbp+0x18],0x0
   1400171a1:	and    DWORD PTR [rbp+0x28],0x0
   1400171a5:	mov    DWORD PTR [rbp+0x20],0x4
   1400171ac:	and    QWORD PTR [rsp+0x28],0x0
   1400171b2:	lea    rax,[rbp+0x28]
   1400171b6:	mov    QWORD PTR [rsp+0x20],rax
   1400171bb:	lea    r9,[rbp+0x20]
   1400171bf:	lea    r8,[rbp+0x18]
   1400171c3:	lea    rdx,[rip+0x20926]        # 0x140037af0
   1400171ca:	mov    rcx,QWORD PTR [rbp+0x30]
   1400171ce:	call   QWORD PTR [rip+0x1b254]        # 0x140032428
   1400171d4:	test   eax,eax
   1400171d6:	js     0x140017205
   1400171d8:	cmp    DWORD PTR [rbp+0x18],0x1
   1400171dc:	jbe    0x1400171e5
   1400171de:	mov    eax,0x8007065d
   1400171e3:	jmp    0x140017205
   1400171e5:	cmp    DWORD PTR [rbp+0x20],0x0
   1400171e9:	jne    0x1400171ef
   1400171eb:	xor    ebx,ebx
   1400171ed:	jmp    0x1400171f2
   1400171ef:	mov    ebx,DWORD PTR [rbp+0x28]
   1400171f2:	mov    rcx,QWORD PTR [rbp+0x30]
   1400171f6:	test   rcx,rcx
   1400171f9:	je     0x140017201
   1400171fb:	call   QWORD PTR [rip+0x1b1ef]        # 0x1400323f0
   140017201:	mov    eax,ebx
   140017203:	jmp    0x14001720d
   140017205:	mov    ecx,eax
   140017207:	call   0x140029d64
   14001720c:	nop
   14001720d:	add    rsp,0x48
   140017211:	pop    rbx
   140017212:	pop    rbp
   140017213:	ret    
   140017214:	int3   
   140017215:	int3   
   140017216:	int3   
   140017217:	int3   
   140017218:	int3   
   140017219:	int3   
   14001721a:	int3   
   14001721b:	int3   
   14001721c:	mov    rax,rsp
   14001721f:	push   rsi
   140017220:	push   r12
   140017222:	push   r13
   140017224:	push   r14
   140017226:	push   r15
   140017228:	sub    rsp,0x110
   14001722f:	mov    QWORD PTR [rax-0xb0],0xfffffffffffffffe
   14001723a:	mov    QWORD PTR [rax+0x18],rbx
   14001723e:	mov    rax,QWORD PTR [rip+0x33ddb]        # 0x14004b020
   140017245:	xor    rax,rsp
   140017248:	mov    QWORD PTR [rsp+0x108],rax
   140017250:	mov    r14,rdx
   140017253:	mov    rsi,rcx
   140017256:	mov    QWORD PTR [rsp+0x58],rcx
   14001725b:	and    QWORD PTR [rsp+0x38],0x0
   140017261:	and    QWORD PTR [rsp+0x50],0x0
   140017267:	lea    rdx,[rsp+0x50]
   14001726c:	mov    rcx,r14
   14001726f:	call   QWORD PTR [rip+0x1b1bb]        # 0x140032430
   140017275:	mov    ebx,eax
   140017277:	test   eax,eax
   140017279:	jns    0x1400172d4
   14001727b:	lea    rdx,[rip+0x33df6]        # 0x14004b078
   140017282:	mov    rcx,QWORD PTR [rip+0x33def]        # 0x14004b078
   140017289:	cmp    rcx,rdx
   14001728c:	je     0x1400172b0
   14001728e:	test   BYTE PTR [rcx+0x1c],0x1
   140017292:	je     0x1400172b0
   140017294:	mov    edx,0xc
   140017299:	mov    DWORD PTR [rsp+0x20],eax
   14001729d:	mov    r9,r14
   1400172a0:	lea    r8,[rip+0x20b31]        # 0x140037dd8
   1400172a7:	mov    rcx,QWORD PTR [rcx+0x10]
   1400172ab:	call   0x140007264
   1400172b0:	mov    edx,ebx
   1400172b2:	lea    rcx,[rsp+0x90]
   1400172ba:	call   0x140002064
   1400172bf:	lea    rdx,[rip+0x31ec2]        # 0x140049188
   1400172c6:	lea    rcx,[rsp+0x90]
   1400172ce:	call   0x14002e2da
   1400172d3:	int3   
   1400172d4:	and    QWORD PTR [rsp+0x38],0x0
   1400172da:	and    QWORD PTR [rsp+0x40],0x0
   1400172e0:	lea    r9,[rsp+0x40]
   1400172e5:	xor    r8d,r8d
   1400172e8:	lea    edx,[r8+0x1]
   1400172ec:	mov    rcx,QWORD PTR [rsp+0x50]
   1400172f1:	call   QWORD PTR [rip+0x1b121]        # 0x140032418
   1400172f7:	mov    ebx,eax
   1400172f9:	test   eax,eax
   1400172fb:	jns    0x140017352
   1400172fd:	lea    rdx,[rip+0x33d74]        # 0x14004b078
   140017304:	mov    rcx,QWORD PTR [rip+0x33d6d]        # 0x14004b078
   14001730b:	cmp    rcx,rdx
   14001730e:	je     0x14001732e
   140017310:	test   BYTE PTR [rcx+0x1c],0x1
   140017314:	je     0x14001732e
   140017316:	mov    edx,0xd
   14001731b:	mov    r9d,eax
   14001731e:	lea    r8,[rip+0x20ab3]        # 0x140037dd8
   140017325:	mov    rcx,QWORD PTR [rcx+0x10]
   140017329:	call   0x140001f70
   14001732e:	mov    edx,ebx
   140017330:	lea    rcx,[rsp+0xb8]
   140017338:	call   0x140002064
   14001733d:	lea    rdx,[rip+0x31e44]        # 0x140049188
   140017344:	lea    rcx,[rsp+0xb8]
   14001734c:	call   0x14002e2da
   140017351:	int3   
   140017352:	movabs r12,0x1fffffffffffffff
   14001735c:	and    QWORD PTR [rsp+0x70],0x0
   140017362:	and    QWORD PTR [rsp+0x38],0x0
   140017368:	and    DWORD PTR [rsp+0x48],0x0
   14001736d:	and    QWORD PTR [rsp+0x28],0x0
   140017373:	and    QWORD PTR [rsp+0x20],0x0
   140017379:	xor    r9d,r9d
   14001737c:	lea    r8,[rsp+0x48]
   140017381:	lea    rdx,[rsp+0x38]
   140017386:	mov    rcx,QWORD PTR [rsp+0x40]
   14001738b:	call   QWORD PTR [rip+0x1b067]        # 0x1400323f8
   140017391:	mov    r14d,eax
   140017394:	cmp    eax,0x80070103
   140017399:	jne    0x1400173d6
   14001739b:	mov    rcx,QWORD PTR [rsp+0x38]
   1400173a0:	test   rcx,rcx
   1400173a3:	je     0x1400173ac
   1400173a5:	call   QWORD PTR [rip+0x1b09d]        # 0x140032448
   1400173ab:	nop
   1400173ac:	mov    rcx,QWORD PTR [rsp+0x40]
   1400173b1:	test   rcx,rcx
   1400173b4:	je     0x1400173bd
   1400173b6:	call   QWORD PTR [rip+0x1b02c]        # 0x1400323e8
   1400173bc:	nop
   1400173bd:	mov    rcx,QWORD PTR [rsp+0x50]
   1400173c2:	test   rcx,rcx
   1400173c5:	je     0x140017649
   1400173cb:	call   QWORD PTR [rip+0x1b01f]        # 0x1400323f0
   1400173d1:	jmp    0x140017649
   1400173d6:	test   eax,eax
   1400173d8:	jns    0x140017430
   1400173da:	lea    rdx,[rip+0x33c97]        # 0x14004b078
   1400173e1:	mov    rcx,QWORD PTR [rip+0x33c90]        # 0x14004b078
   1400173e8:	cmp    rcx,rdx
   1400173eb:	je     0x14001740b
   1400173ed:	test   BYTE PTR [rcx+0x1c],0x1
   1400173f1:	je     0x14001740b
   1400173f3:	mov    edx,0xe
   1400173f8:	mov    r9d,eax
   1400173fb:	lea    r8,[rip+0x209d6]        # 0x140037dd8
   140017402:	mov    rcx,QWORD PTR [rcx+0x10]
   140017406:	call   0x140001f70
   14001740b:	mov    edx,r14d
   14001740e:	lea    rcx,[rsp+0xe0]
   140017416:	call   0x140002064
   14001741b:	lea    rdx,[rip+0x31d66]        # 0x140049188
   140017422:	lea    rcx,[rsp+0xe0]
   14001742a:	call   0x14002e2da
   14001742f:	nop
   140017430:	mov    rcx,QWORD PTR [rsp+0x38]
   140017435:	test   rcx,rcx
   140017438:	jne    0x140017443
   14001743a:	xor    ebx,ebx
   14001743c:	mov    QWORD PTR [rsp+0x30],rbx
   140017441:	jmp    0x140017461
   140017443:	call   QWORD PTR [rip+0x1af17]        # 0x140032360
   140017449:	mov    rbx,rax
   14001744c:	mov    QWORD PTR [rsp+0x30],rax
   140017451:	test   rax,rax
   140017454:	jne    0x140017461
   140017456:	mov    ecx,0x8007000e
   14001745b:	call   0x140005d50
   140017460:	nop
   140017461:	mov    rcx,QWORD PTR [rsi+0x8]
   140017465:	lea    rax,[rsp+0x30]
   14001746a:	cmp    rax,rcx
   14001746d:	jae    0x140017552
   140017473:	lea    rax,[rsp+0x30]
   140017478:	cmp    QWORD PTR [rsi],rax
   14001747b:	ja     0x140017552
   140017481:	lea    r15,[rsp+0x30]
   140017486:	sub    r15,QWORD PTR [rsi]
   140017489:	sar    r15,0x3
   14001748d:	mov    rdx,QWORD PTR [rsi+0x10]
   140017491:	cmp    rcx,rdx
   140017494:	jne    0x1400174f0
   140017496:	mov    rax,rdx
   140017499:	sub    rax,rcx
   14001749c:	sar    rax,0x3
   1400174a0:	cmp    rax,0x1
   1400174a4:	jae    0x1400174f0
   1400174a6:	sub    rcx,QWORD PTR [rsi]
   1400174a9:	sar    rcx,0x3
   1400174ad:	mov    rax,r12
   1400174b0:	sub    rax,rcx
   1400174b3:	cmp    rax,0x1
   1400174b7:	jae    0x1400174be
   1400174b9:	call   0x14000d388
   1400174be:	lea    r8,[rcx+0x1]
   1400174c2:	sub    rdx,QWORD PTR [rsi]
   1400174c5:	sar    rdx,0x3
   1400174c9:	mov    rcx,rdx
   1400174cc:	shr    rcx,1
   1400174cf:	mov    rax,r12
   1400174d2:	sub    rax,rcx
   1400174d5:	cmp    rax,rdx
   1400174d8:	jae    0x1400174de
   1400174da:	xor    edx,edx
   1400174dc:	jmp    0x1400174e1
   1400174de:	add    rdx,rcx
   1400174e1:	cmp    rdx,r8
   1400174e4:	cmovb  rdx,r8
   1400174e8:	mov    rcx,rsi
   1400174eb:	call   0x1400176b8
   1400174f0:	mov    r13,QWORD PTR [rsi]
   1400174f3:	mov    r12,QWORD PTR [rsi+0x8]
   1400174f7:	mov    QWORD PTR [rsp+0x68],r12
   1400174fc:	mov    QWORD PTR [rsp+0x60],r12
   140017501:	test   r12,r12
   140017504:	je     0x140017543
   140017506:	mov    rcx,QWORD PTR [r13+r15*8+0x0]
   14001750b:	test   rcx,rcx
   14001750e:	jne    0x140017514
   140017510:	xor    eax,eax
   140017512:	jmp    0x140017527
   140017514:	call   QWORD PTR [rip+0x1ae6e]        # 0x140032388
   14001751a:	mov    edx,eax
   14001751c:	mov    rcx,QWORD PTR [r13+r15*8+0x0]
   140017521:	call   QWORD PTR [rip+0x1ae41]        # 0x140032368
   140017527:	mov    QWORD PTR [r12],rax
   14001752b:	cmp    QWORD PTR [r13+r15*8+0x0],0x0
   140017531:	je     0x140017543
   140017533:	test   rax,rax
   140017536:	jne    0x140017543
   140017538:	mov    ecx,0x8007000e
   14001753d:	call   0x140005d50
   140017542:	nop
   140017543:	movabs r12,0x1fffffffffffffff
   14001754d:	jmp    0x1400175fd
   140017552:	mov    rdx,QWORD PTR [rsi+0x10]
   140017556:	cmp    rcx,rdx
   140017559:	jne    0x1400175b5
   14001755b:	mov    rax,rdx
   14001755e:	sub    rax,rcx
   140017561:	sar    rax,0x3
   140017565:	cmp    rax,0x1
   140017569:	jae    0x1400175b5
   14001756b:	sub    rcx,QWORD PTR [rsi]
   14001756e:	sar    rcx,0x3
   140017572:	mov    rax,r12
   140017575:	sub    rax,rcx
   140017578:	cmp    rax,0x1
   14001757c:	jae    0x140017583
   14001757e:	call   0x14000d388
   140017583:	lea    r8,[rcx+0x1]
   140017587:	sub    rdx,QWORD PTR [rsi]
   14001758a:	sar    rdx,0x3
   14001758e:	mov    rcx,rdx
   140017591:	shr    rcx,1
   140017594:	mov    rax,r12
   140017597:	sub    rax,rcx
   14001759a:	cmp    rax,rdx
   14001759d:	jae    0x1400175a3
   14001759f:	xor    edx,edx
   1400175a1:	jmp    0x1400175a6
   1400175a3:	add    rdx,rcx
   1400175a6:	cmp    rdx,r8
   1400175a9:	cmovb  rdx,r8
   1400175ad:	mov    rcx,rsi
   1400175b0:	call   0x1400176b8
   1400175b5:	mov    r15,QWORD PTR [rsi+0x8]
   1400175b9:	mov    QWORD PTR [rsp+0x60],r15
   1400175be:	mov    QWORD PTR [rsp+0x68],r15
   1400175c3:	test   r15,r15
   1400175c6:	je     0x1400175fd
   1400175c8:	test   rbx,rbx
   1400175cb:	jne    0x1400175d1
   1400175cd:	xor    eax,eax
   1400175cf:	jmp    0x1400175e5
   1400175d1:	mov    rcx,rbx
   1400175d4:	call   QWORD PTR [rip+0x1adae]        # 0x140032388
   1400175da:	mov    edx,eax
   1400175dc:	mov    rcx,rbx
   1400175df:	call   QWORD PTR [rip+0x1ad83]        # 0x140032368
   1400175e5:	mov    QWORD PTR [r15],rax
   1400175e8:	test   rbx,rbx
   1400175eb:	je     0x1400175fd
   1400175ed:	test   rax,rax
   1400175f0:	jne    0x1400175fd
   1400175f2:	mov    ecx,0x8007000e
   1400175f7:	call   0x140005d50
   1400175fc:	nop
   1400175fd:	add    QWORD PTR [rsi+0x8],0x8
   140017602:	mov    rcx,rbx
   140017605:	call   QWORD PTR [rip+0x1ad45]        # 0x140032350
   14001760b:	nop
   14001760c:	jmp    0x140017622
   14001760e:	mov    rsi,QWORD PTR [rsp+0x58]
   140017613:	mov    r14d,DWORD PTR [rsp+0x30]
   140017618:	movabs r12,0x1fffffffffffffff
   140017622:	test   r14d,r14d
   140017625:	jns    0x140017630
   140017627:	mov    ecx,r14d
   14001762a:	call   0x14000218c
   14001762f:	nop
   140017630:	mov    rcx,QWORD PTR [rsp+0x38]
   140017635:	test   rcx,rcx
   140017638:	je     0x14001735c
   14001763e:	call   QWORD PTR [rip+0x1ae04]        # 0x140032448
   140017644:	jmp    0x14001735c
   140017649:	mov    rcx,QWORD PTR [rsp+0x108]
   140017651:	xor    rcx,rsp
   140017654:	call   0x14002dd00
   140017659:	mov    rbx,QWORD PTR [rsp+0x150]
   140017661:	add    rsp,0x110
   140017668:	pop    r15
   14001766a:	pop    r14
   14001766c:	pop    r13
   14001766e:	pop    r12
   140017670:	pop    rsi
   140017671:	ret    
   140017672:	int3   
   140017673:	int3   
   140017674:	int3   
   140017675:	int3   
   140017676:	int3   
   140017677:	int3   
   140017678:	sub    rsp,0x28
   14001767c:	mov    rcx,QWORD PTR [rcx]
   14001767f:	test   rcx,rcx
   140017682:	je     0x14001768a
   140017684:	call   QWORD PTR [rip+0x1ad66]        # 0x1400323f0
   14001768a:	add    rsp,0x28
   14001768e:	ret    
   14001768f:	int3   
   140017690:	int3   
   140017691:	int3   
   140017692:	int3   
   140017693:	int3   
   140017694:	int3   
   140017695:	int3   
   140017696:	int3   
   140017697:	int3   
   140017698:	sub    rsp,0x28
   14001769c:	mov    rcx,QWORD PTR [rcx]
   14001769f:	test   rcx,rcx
   1400176a2:	je     0x1400176aa
   1400176a4:	call   QWORD PTR [rip+0x1ad3e]        # 0x1400323e8
   1400176aa:	add    rsp,0x28
   1400176ae:	ret    
   1400176af:	int3   
   1400176b0:	int3   
   1400176b1:	int3   
   1400176b2:	int3   
   1400176b3:	int3   
   1400176b4:	int3   
   1400176b5:	int3   
   1400176b6:	int3   
   1400176b7:	int3   
   1400176b8:	mov    rax,rsp
   1400176bb:	push   r12
   1400176bd:	push   r14
   1400176bf:	push   r15
   1400176c1:	sub    rsp,0x40
   1400176c5:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   1400176cd:	mov    QWORD PTR [rax+0x8],rbx
   1400176d1:	mov    QWORD PTR [rax+0x18],rsi
   1400176d5:	mov    QWORD PTR [rax+0x20],rdi
   1400176d9:	mov    r14,rdx
   1400176dc:	mov    rdi,rcx
   1400176df:	xor    ebx,ebx
   1400176e1:	mov    QWORD PTR [rsp+0x68],rbx
   1400176e6:	test   rdx,rdx
   1400176e9:	je     0x140017716
   1400176eb:	movabs rax,0x1fffffffffffffff
   1400176f5:	cmp    rdx,rax
   1400176f8:	ja     0x140017710
   1400176fa:	mov    rcx,rdx
   1400176fd:	shl    rcx,0x3
   140017701:	call   0x140023f10
   140017706:	mov    rbx,rax
   140017709:	mov    QWORD PTR [rsp+0x68],rax
   14001770e:	jmp    0x140017716
   140017710:	call   0x14000203c
   140017715:	nop
   140017716:	mov    r8,rbx
   140017719:	mov    rdx,QWORD PTR [rdi+0x8]
   14001771d:	mov    rcx,QWORD PTR [rdi]
   140017720:	call   0x14001778c
   140017725:	nop
   140017726:	mov    r12,QWORD PTR [rdi+0x8]
   14001772a:	mov    rsi,QWORD PTR [rdi]
   14001772d:	mov    r15,r12
   140017730:	sub    r15,rsi
   140017733:	sar    r15,0x3
   140017737:	test   rsi,rsi
   14001773a:	je     0x140017759
   14001773c:	jmp    0x14001774b
   14001773e:	mov    rcx,QWORD PTR [rsi]
   140017741:	call   QWORD PTR [rip+0x1ac09]        # 0x140032350
   140017747:	add    rsi,0x8
   14001774b:	cmp    rsi,r12
   14001774e:	jne    0x14001773e
   140017750:	mov    rcx,QWORD PTR [rdi]
   140017753:	call   QWORD PTR [rip+0x1ae6f]        # 0x1400325c8
   140017759:	lea    rax,[rbx+r14*8]
   14001775d:	mov    QWORD PTR [rdi+0x10],rax
   140017761:	lea    rax,[rbx+r15*8]
   140017765:	mov    QWORD PTR [rdi+0x8],rax
   140017769:	mov    QWORD PTR [rdi],rbx
   14001776c:	mov    rbx,QWORD PTR [rsp+0x60]
   140017771:	mov    rsi,QWORD PTR [rsp+0x70]
   140017776:	mov    rdi,QWORD PTR [rsp+0x78]
   14001777b:	add    rsp,0x40
   14001777f:	pop    r15
   140017781:	pop    r14
   140017783:	pop    r12
   140017785:	ret    
   140017786:	int3   
   140017787:	int3   
   140017788:	int3   
   140017789:	int3   
   14001778a:	int3   
   14001778b:	int3   
   14001778c:	mov    QWORD PTR [rsp+0x20],r9
   140017791:	mov    QWORD PTR [rsp+0x18],r8
   140017796:	push   rbx
   140017797:	push   rsi
   140017798:	push   rdi
   140017799:	sub    rsp,0x30
   14001779d:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400177a6:	mov    rbx,r8
   1400177a9:	mov    rsi,rdx
   1400177ac:	mov    rdi,rcx
   1400177af:	mov    QWORD PTR [rsp+0x68],rbx
   1400177b4:	cmp    rdi,rsi
   1400177b7:	je     0x140017808
   1400177b9:	mov    QWORD PTR [rsp+0x50],rbx
   1400177be:	test   rbx,rbx
   1400177c1:	je     0x1400177f9
   1400177c3:	mov    rcx,QWORD PTR [rdi]
   1400177c6:	test   rcx,rcx
   1400177c9:	jne    0x1400177cf
   1400177cb:	xor    eax,eax
   1400177cd:	jmp    0x1400177e0
   1400177cf:	call   QWORD PTR [rip+0x1abb3]        # 0x140032388
   1400177d5:	mov    edx,eax
   1400177d7:	mov    rcx,QWORD PTR [rdi]
   1400177da:	call   QWORD PTR [rip+0x1ab88]        # 0x140032368
   1400177e0:	mov    QWORD PTR [rbx],rax
   1400177e3:	cmp    QWORD PTR [rdi],0x0
   1400177e7:	je     0x1400177f9
   1400177e9:	test   rax,rax
   1400177ec:	jne    0x1400177f9
   1400177ee:	mov    ecx,0x8007000e
   1400177f3:	call   0x140005d50
   1400177f8:	nop
   1400177f9:	add    rbx,0x8
   1400177fd:	mov    QWORD PTR [rsp+0x60],rbx
   140017802:	add    rdi,0x8
   140017806:	jmp    0x1400177b4
   140017808:	mov    rax,rbx
   14001780b:	add    rsp,0x30
   14001780f:	pop    rdi
   140017810:	pop    rsi
   140017811:	pop    rbx
   140017812:	ret    
   140017813:	int3   
   140017814:	int3   
   140017815:	int3   
   140017816:	int3   
   140017817:	int3   
   140017818:	int3   
   140017819:	int3   
   14001781a:	int3   
   14001781b:	int3   
   14001781c:	mov    QWORD PTR [rsp+0x8],rbx
   140017821:	mov    QWORD PTR [rsp+0x10],rbp
   140017826:	mov    QWORD PTR [rsp+0x18],rsi
   14001782b:	push   rdi
   14001782c:	sub    rsp,0x20
   140017830:	xor    ebp,ebp
   140017832:	mov    QWORD PTR [rcx+0x18],0x7
   14001783a:	mov    QWORD PTR [rcx+0x10],rbp
   14001783e:	mov    rsi,rdx
   140017841:	mov    WORD PTR [rcx],bp
   140017844:	mov    rbx,rcx
   140017847:	cmp    WORD PTR [rdx],bp
   14001784a:	jne    0x140017850
   14001784c:	mov    edi,ebp
   14001784e:	jmp    0x14001785d
   140017850:	or     rdi,0xffffffffffffffff
   140017854:	inc    rdi
   140017857:	cmp    WORD PTR [rdx+rdi*2],bp
   14001785b:	jne    0x140017854
   14001785d:	mov    rdx,QWORD PTR [rcx+0x18]
   140017861:	cmp    rdx,0x8
   140017865:	jb     0x14001786c
   140017867:	mov    rax,QWORD PTR [rcx]
   14001786a:	jmp    0x14001786f
   14001786c:	mov    rax,rcx
   14001786f:	cmp    rsi,rax
   140017872:	jb     0x1400178ad
   140017874:	cmp    rdx,0x8
   140017878:	jb     0x14001787d
   14001787a:	mov    rcx,QWORD PTR [rcx]
   14001787d:	lea    rcx,[rcx+rbp*2]
   140017881:	cmp    rcx,rsi
   140017884:	jbe    0x1400178ad
   140017886:	cmp    rdx,0x8
   14001788a:	jb     0x140017891
   14001788c:	mov    rax,QWORD PTR [rbx]
   14001788f:	jmp    0x140017894
   140017891:	mov    rax,rbx
   140017894:	sub    rsi,rax
   140017897:	mov    r9,rdi
   14001789a:	sar    rsi,1
   14001789d:	mov    rdx,rbx
   1400178a0:	mov    r8,rsi
   1400178a3:	mov    rcx,rbx
   1400178a6:	call   0x14000d7a0
   1400178ab:	jmp    0x14001792b
   1400178ad:	movabs rax,0x7ffffffffffffffe
   1400178b7:	cmp    rdi,rax
   1400178ba:	ja     0x140017943
   1400178c0:	cmp    rdx,rdi
   1400178c3:	jae    0x1400178d5
   1400178c5:	mov    r8,rbp
   1400178c8:	mov    rdx,rdi
   1400178cb:	mov    rcx,rbx
   1400178ce:	call   0x14000d918
   1400178d3:	jmp    0x1400178ef
   1400178d5:	test   rdi,rdi
   1400178d8:	jne    0x1400178f4
   1400178da:	mov    QWORD PTR [rbx+0x10],rbp
   1400178de:	cmp    rdx,0x8
   1400178e2:	jb     0x1400178e9
   1400178e4:	mov    rax,QWORD PTR [rbx]
   1400178e7:	jmp    0x1400178ec
   1400178e9:	mov    rax,rbx
   1400178ec:	mov    WORD PTR [rax],bp
   1400178ef:	test   rdi,rdi
   1400178f2:	je     0x14001792b
   1400178f4:	cmp    QWORD PTR [rbx+0x18],0x8
   1400178f9:	jb     0x140017900
   1400178fb:	mov    rcx,QWORD PTR [rbx]
   1400178fe:	jmp    0x140017903
   140017900:	mov    rcx,rbx
   140017903:	test   rdi,rdi
   140017906:	je     0x140017914
   140017908:	lea    r8,[rdi+rdi*1]
   14001790c:	mov    rdx,rsi
   14001790f:	call   0x14002e2f2
   140017914:	cmp    QWORD PTR [rbx+0x18],0x8
   140017919:	mov    QWORD PTR [rbx+0x10],rdi
   14001791d:	jb     0x140017924
   14001791f:	mov    rax,QWORD PTR [rbx]
   140017922:	jmp    0x140017927
   140017924:	mov    rax,rbx
   140017927:	mov    WORD PTR [rax+rdi*2],bp
   14001792b:	mov    rbp,QWORD PTR [rsp+0x38]
   140017930:	mov    rax,rbx
   140017933:	mov    rbx,QWORD PTR [rsp+0x30]
   140017938:	mov    rsi,QWORD PTR [rsp+0x40]
   14001793d:	add    rsp,0x20
   140017941:	pop    rdi
   140017942:	ret    
   140017943:	call   0x140001d4c
   140017948:	int3   
   140017949:	int3   
   14001794a:	int3   
   14001794b:	int3   
   14001794c:	int3   
   14001794d:	int3   
   14001794e:	int3   
   14001794f:	int3   
   140017950:	lea    rax,[rip+0x204a1]        # 0x140037df8
   140017957:	ret    
   140017958:	int3   
   140017959:	int3   
   14001795a:	int3   
   14001795b:	int3   
   14001795c:	int3   
   14001795d:	int3   
   14001795e:	int3   
   14001795f:	int3   
   140017960:	mov    r11,rsp
   140017963:	mov    DWORD PTR [r11+0x20],r9d
   140017967:	sub    rsp,0x78
   14001796b:	and    QWORD PTR [r11-0x18],0x0
   140017970:	lea    rax,[r11+0x38]
   140017974:	mov    r8d,0xa
   14001797a:	movzx  r9d,r8w
   14001797e:	lea    edx,[r8-0x6]
   140017982:	mov    QWORD PTR [r11-0x20],rdx
   140017986:	lea    r8,[rip+0x2045b]        # 0x140037de8
   14001798d:	mov    QWORD PTR [r11-0x28],rax
   140017991:	lea    rax,[r11+0x30]
   140017995:	mov    QWORD PTR [r11-0x30],rdx
   140017999:	mov    QWORD PTR [r11-0x38],rax
   14001799d:	lea    rax,[r11+0x28]
   1400179a1:	mov    QWORD PTR [r11-0x40],rdx
   1400179a5:	mov    QWORD PTR [r11-0x48],rax
   1400179a9:	lea    rax,[r11+0x20]
   1400179ad:	mov    QWORD PTR [r11-0x50],rdx
   1400179b1:	mov    edx,0x2b
   1400179b6:	mov    QWORD PTR [r11-0x58],rax
   1400179ba:	call   QWORD PTR [rip+0x1a660]        # 0x140032020
   1400179c0:	add    rsp,0x78
   1400179c4:	ret    
   1400179c5:	int3   
   1400179c6:	int3   
   1400179c7:	int3   
   1400179c8:	int3   
   1400179c9:	int3   
   1400179ca:	int3   
   1400179cb:	int3   
   1400179cc:	mov    r11,rsp
   1400179cf:	mov    DWORD PTR [r11+0x20],r9d
   1400179d3:	sub    rsp,0xb8
   1400179da:	and    QWORD PTR [r11-0x18],0x0
   1400179df:	lea    rax,[r11+0x58]
   1400179e3:	mov    r8d,0x2f
   1400179e9:	movzx  r9d,r8w
   1400179ed:	lea    edx,[r8-0x2b]
   1400179f1:	mov    QWORD PTR [r11-0x20],rdx
   1400179f5:	lea    r8,[rip+0x203ec]        # 0x140037de8
   1400179fc:	mov    QWORD PTR [r11-0x28],rax
   140017a00:	lea    rax,[r11+0x50]
   140017a04:	mov    QWORD PTR [r11-0x30],rdx
   140017a08:	mov    QWORD PTR [r11-0x38],rax
   140017a0c:	lea    rax,[r11+0x48]
   140017a10:	mov    QWORD PTR [r11-0x40],rdx
   140017a14:	mov    QWORD PTR [r11-0x48],rax
   140017a18:	lea    rax,[r11+0x40]
   140017a1c:	mov    QWORD PTR [r11-0x50],rdx
   140017a20:	mov    QWORD PTR [r11-0x58],rax
   140017a24:	lea    rax,[r11+0x38]
   140017a28:	mov    QWORD PTR [r11-0x60],rdx
   140017a2c:	mov    QWORD PTR [r11-0x68],rax
   140017a30:	lea    rax,[r11+0x30]
   140017a34:	mov    QWORD PTR [r11-0x70],rdx
   140017a38:	mov    QWORD PTR [r11-0x78],rax
   140017a3c:	lea    rax,[r11+0x28]
   140017a40:	mov    QWORD PTR [r11-0x80],rdx
   140017a44:	mov    QWORD PTR [rsp+0x30],rax
   140017a49:	lea    rax,[r11+0x20]
   140017a4d:	mov    QWORD PTR [rsp+0x28],rdx
   140017a52:	mov    edx,0x2b
   140017a57:	mov    QWORD PTR [rsp+0x20],rax
   140017a5c:	call   QWORD PTR [rip+0x1a5be]        # 0x140032020
   140017a62:	add    rsp,0xb8
   140017a69:	ret    
   140017a6a:	int3   
   140017a6b:	int3   
   140017a6c:	int3   
   140017a6d:	int3   
   140017a6e:	int3   
   140017a6f:	int3   
   140017a70:	mov    r11,rsp
   140017a73:	mov    DWORD PTR [r11+0x20],r9d
   140017a77:	sub    rsp,0x48
   140017a7b:	and    QWORD PTR [r11-0x18],0x0
   140017a80:	lea    rax,[r11+0x20]
   140017a84:	movzx  r9d,dx
   140017a88:	lea    r8,[rip+0x20359]        # 0x140037de8
   140017a8f:	mov    QWORD PTR [r11-0x20],0x4
   140017a97:	mov    edx,0x2b
   140017a9c:	mov    QWORD PTR [r11-0x28],rax
   140017aa0:	call   QWORD PTR [rip+0x1a57a]        # 0x140032020
   140017aa6:	add    rsp,0x48
   140017aaa:	ret    
   140017aab:	int3   
   140017aac:	int3   
   140017aad:	int3   
   140017aae:	int3   
   140017aaf:	int3   
   140017ab0:	int3   
   140017ab1:	int3   
   140017ab2:	int3   
   140017ab3:	int3   
   140017ab4:	mov    r11,rsp
   140017ab7:	mov    DWORD PTR [r11+0x20],r9d
   140017abb:	sub    rsp,0x68
   140017abf:	and    QWORD PTR [r11-0x28],0x0
   140017ac4:	lea    rax,[r11-0x18]
   140017ac8:	mov    r8d,0x2a
   140017ace:	mov    DWORD PTR [rsp+0x50],0x1f40
   140017ad6:	movzx  r9d,r8w
   140017ada:	lea    edx,[r8-0x26]
   140017ade:	mov    QWORD PTR [r11-0x30],rdx
   140017ae2:	lea    r8,[rip+0x202ff]        # 0x140037de8
   140017ae9:	mov    QWORD PTR [r11-0x38],rax
   140017aed:	lea    rax,[r11+0x20]
   140017af1:	mov    QWORD PTR [r11-0x40],rdx
   140017af5:	mov    edx,0x2b
   140017afa:	mov    QWORD PTR [r11-0x48],rax
   140017afe:	call   QWORD PTR [rip+0x1a51c]        # 0x140032020
   140017b04:	add    rsp,0x68
   140017b08:	ret    
   140017b09:	int3   
   140017b0a:	int3   
   140017b0b:	int3   
   140017b0c:	int3   
   140017b0d:	int3   
   140017b0e:	int3   
   140017b0f:	int3   
   140017b10:	mov    r11,rsp
   140017b13:	mov    DWORD PTR [r11+0x20],r9d
   140017b17:	sub    rsp,0x68
   140017b1b:	and    QWORD PTR [r11-0x18],0x0
   140017b20:	lea    rax,[r11+0x30]
   140017b24:	mov    r8d,0x19
   140017b2a:	movzx  r9d,r8w
   140017b2e:	lea    edx,[r8-0x15]
   140017b32:	mov    QWORD PTR [r11-0x20],rdx
   140017b36:	lea    r8,[rip+0x202ab]        # 0x140037de8
   140017b3d:	mov    QWORD PTR [r11-0x28],rax
   140017b41:	lea    rax,[r11+0x28]
   140017b45:	mov    QWORD PTR [r11-0x30],rdx
   140017b49:	mov    QWORD PTR [r11-0x38],rax
   140017b4d:	lea    rax,[r11+0x20]
   140017b51:	mov    QWORD PTR [r11-0x40],rdx
   140017b55:	mov    edx,0x2b
   140017b5a:	mov    QWORD PTR [r11-0x48],rax
   140017b5e:	call   QWORD PTR [rip+0x1a4bc]        # 0x140032020
   140017b64:	add    rsp,0x68
   140017b68:	ret    
   140017b69:	int3   
   140017b6a:	int3   
   140017b6b:	int3   
   140017b6c:	int3   
   140017b6d:	int3   
   140017b6e:	int3   
   140017b6f:	int3   
   140017b70:	mov    r11,rsp
   140017b73:	mov    DWORD PTR [r11+0x20],r9d
   140017b77:	sub    rsp,0x58
   140017b7b:	and    QWORD PTR [r11-0x18],0x0
   140017b80:	lea    rax,[r11+0x28]
   140017b84:	mov    r8d,0x4
   140017b8a:	movzx  r9d,dx
   140017b8e:	mov    QWORD PTR [r11-0x20],r8
   140017b92:	mov    edx,0x2b
   140017b97:	mov    QWORD PTR [r11-0x28],rax
   140017b9b:	lea    rax,[r11+0x20]
   140017b9f:	mov    QWORD PTR [r11-0x30],r8
   140017ba3:	lea    r8,[rip+0x2023e]        # 0x140037de8
   140017baa:	mov    QWORD PTR [r11-0x38],rax
   140017bae:	call   QWORD PTR [rip+0x1a46c]        # 0x140032020
   140017bb4:	add    rsp,0x58
   140017bb8:	ret    
   140017bb9:	int3   
   140017bba:	int3   
   140017bbb:	int3   
   140017bbc:	int3   
   140017bbd:	int3   
   140017bbe:	int3   
   140017bbf:	int3   
   140017bc0:	mov    r11,rsp
   140017bc3:	mov    DWORD PTR [r11+0x20],r9d
   140017bc7:	sub    rsp,0x68
   140017bcb:	and    QWORD PTR [r11-0x18],0x0
   140017bd0:	lea    rax,[r11+0x30]
   140017bd4:	mov    r8d,0x4
   140017bda:	movzx  r9d,dx
   140017bde:	mov    QWORD PTR [r11-0x20],r8
   140017be2:	mov    edx,0x2b
   140017be7:	mov    QWORD PTR [r11-0x28],rax
   140017beb:	lea    rax,[r11+0x28]
   140017bef:	mov    QWORD PTR [r11-0x30],r8
   140017bf3:	mov    QWORD PTR [r11-0x38],rax
   140017bf7:	lea    rax,[r11+0x20]
   140017bfb:	mov    QWORD PTR [r11-0x40],r8
   140017bff:	lea    r8,[rip+0x201e2]        # 0x140037de8
   140017c06:	mov    QWORD PTR [r11-0x48],rax
   140017c0a:	call   QWORD PTR [rip+0x1a410]        # 0x140032020
   140017c10:	add    rsp,0x68
   140017c14:	ret    
   140017c15:	int3   
   140017c16:	int3   
   140017c17:	int3   
   140017c18:	int3   
   140017c19:	int3   
   140017c1a:	int3   
   140017c1b:	int3   
   140017c1c:	mov    r11,rsp
   140017c1f:	mov    DWORD PTR [r11+0x20],r9d
   140017c23:	sub    rsp,0xb8
   140017c2a:	and    QWORD PTR [r11-0x18],0x0
   140017c2f:	lea    rax,[r11+0x58]
   140017c33:	mov    edx,0x2b
   140017c38:	movzx  r9d,dx
   140017c3c:	lea    r8d,[rdx-0x27]
   140017c40:	mov    QWORD PTR [r11-0x20],r8
   140017c44:	mov    QWORD PTR [r11-0x28],rax
   140017c48:	lea    rax,[r11+0x50]
   140017c4c:	mov    QWORD PTR [r11-0x30],r8
   140017c50:	mov    QWORD PTR [r11-0x38],rax
   140017c54:	lea    rax,[r11+0x48]
   140017c58:	mov    QWORD PTR [r11-0x40],r8
   140017c5c:	mov    QWORD PTR [r11-0x48],rax
   140017c60:	lea    rax,[r11+0x40]
   140017c64:	mov    QWORD PTR [r11-0x50],r8
   140017c68:	mov    QWORD PTR [r11-0x58],rax
   140017c6c:	lea    rax,[r11+0x38]
   140017c70:	mov    QWORD PTR [r11-0x60],r8
   140017c74:	mov    QWORD PTR [r11-0x68],rax
   140017c78:	lea    rax,[r11+0x30]
   140017c7c:	mov    QWORD PTR [r11-0x70],r8
   140017c80:	mov    QWORD PTR [r11-0x78],rax
   140017c84:	lea    rax,[r11+0x28]
   140017c88:	mov    QWORD PTR [r11-0x80],r8
   140017c8c:	mov    QWORD PTR [rsp+0x30],rax
   140017c91:	lea    rax,[r11+0x20]
   140017c95:	mov    QWORD PTR [rsp+0x28],r8
   140017c9a:	lea    r8,[rip+0x20147]        # 0x140037de8
   140017ca1:	mov    QWORD PTR [rsp+0x20],rax
   140017ca6:	call   QWORD PTR [rip+0x1a374]        # 0x140032020
   140017cac:	add    rsp,0xb8
   140017cb3:	ret    
   140017cb4:	int3   
   140017cb5:	int3   
   140017cb6:	int3   
   140017cb7:	int3   
   140017cb8:	int3   
   140017cb9:	int3   
   140017cba:	int3   
   140017cbb:	int3   
   140017cbc:	int3   
   140017cbd:	int3   
   140017cbe:	int3   
   140017cbf:	int3   
   140017cc0:	mov    QWORD PTR [rsp+0x8],rbx
   140017cc5:	push   rdi
   140017cc6:	sub    rsp,0x20
   140017cca:	mov    rbx,rcx
   140017ccd:	mov    edi,edx
   140017ccf:	mov    rcx,QWORD PTR [rcx+0x50]
   140017cd3:	test   rcx,rcx
   140017cd6:	je     0x140017cde
   140017cd8:	call   QWORD PTR [rip+0x1a8ea]        # 0x1400325c8
   140017cde:	lea    rax,[rip+0x1cbc3]        # 0x1400348a8
   140017ce5:	mov    QWORD PTR [rbx],rax
   140017ce8:	test   dil,0x1
   140017cec:	je     0x140017cf7
   140017cee:	mov    rcx,rbx
   140017cf1:	call   QWORD PTR [rip+0x1a8d1]        # 0x1400325c8
   140017cf7:	mov    rax,rbx
   140017cfa:	mov    rbx,QWORD PTR [rsp+0x30]
   140017cff:	add    rsp,0x20
   140017d03:	pop    rdi
   140017d04:	ret    
   140017d05:	int3   
   140017d06:	int3   
   140017d07:	int3   
   140017d08:	int3   
   140017d09:	int3   
   140017d0a:	int3   
   140017d0b:	int3   
   140017d0c:	int3   
   140017d0d:	int3   
   140017d0e:	int3   
   140017d0f:	int3   
   140017d10:	mov    rax,rsp
   140017d13:	mov    QWORD PTR [rax+0x8],rbx
   140017d17:	mov    QWORD PTR [rax+0x10],rbp
   140017d1b:	mov    QWORD PTR [rax+0x18],rsi
   140017d1f:	mov    QWORD PTR [rax+0x20],rdi
   140017d23:	push   r12
   140017d25:	push   r14
   140017d27:	push   r15
   140017d29:	sub    rsp,0x40
   140017d2d:	mov    rbx,rcx
   140017d30:	mov    edi,r9d
   140017d33:	mov    rcx,QWORD PTR [rcx+0x48]
   140017d37:	mov    esi,edx
   140017d39:	add    rcx,0xa8
   140017d40:	or     eax,0xffffffff
   140017d43:	lock xadd DWORD PTR [rcx+0x8],eax
   140017d48:	dec    eax
   140017d4a:	cmp    eax,0x80000000
   140017d4f:	jne    0x140017d56
   140017d51:	call   0x140029c90
   140017d56:	mov    rax,QWORD PTR [rbx+0x48]
   140017d5a:	mov    ebp,DWORD PTR [rax+0xec]
   140017d60:	mov    rax,QWORD PTR [rbx+0x48]
   140017d64:	mov    r14d,DWORD PTR [rax+0xe8]
   140017d6b:	mov    rcx,QWORD PTR [rip+0x33306]        # 0x14004b078
   140017d72:	lea    r15,[rip+0x332ff]        # 0x14004b078
   140017d79:	cmp    rcx,r15
   140017d7c:	je     0x140017da4
   140017d7e:	test   BYTE PTR [rcx+0x1c],0x10
   140017d82:	je     0x140017da4
   140017d84:	mov    rcx,QWORD PTR [rcx+0x10]
   140017d88:	mov    r9d,esi
   140017d8b:	mov    DWORD PTR [rsp+0x30],r14d
   140017d90:	mov    DWORD PTR [rsp+0x28],ebp
   140017d94:	mov    DWORD PTR [rsp+0x20],edi
   140017d98:	call   0x140017960
   140017d9d:	mov    rcx,QWORD PTR [rip+0x332d4]        # 0x14004b078
   140017da4:	xor    esi,esi
   140017da6:	test   edi,edi
   140017da8:	js     0x140017efd
   140017dae:	mov    rax,QWORD PTR [rbx+0x50]
   140017db2:	lea    r12,[rip+0x2002f]        # 0x140037de8
   140017db9:	mov    r8d,DWORD PTR [rax+0x68]
   140017dbd:	cmp    r8d,0x1f40
   140017dc4:	jbe    0x140017de5
   140017dc6:	cmp    rcx,r15
   140017dc9:	je     0x140017df1
   140017dcb:	test   BYTE PTR [rcx+0x1c],0x1
   140017dcf:	je     0x140017df1
   140017dd1:	mov    rcx,QWORD PTR [rcx+0x10]
   140017dd5:	lea    edx,[rsi+0xb]
   140017dd8:	mov    r9d,r8d
   140017ddb:	mov    r8,r12
   140017dde:	call   0x140001f70
   140017de3:	jmp    0x140017df1
   140017de5:	mov    rcx,QWORD PTR [rbx+0x48]
   140017de9:	mov    edx,r8d
   140017dec:	call   0x140018e1c
   140017df1:	mov    r8,QWORD PTR [rbx+0x58]
   140017df5:	mov    rdx,QWORD PTR [rbx+0x50]
   140017df9:	mov    rcx,QWORD PTR [rbx+0x48]
   140017dfd:	call   0x140018bec
   140017e02:	mov    dil,0x2
   140017e05:	test   eax,eax
   140017e07:	jns    0x140017e70
   140017e09:	cmp    eax,0x80004004
   140017e0e:	jne    0x140017e35
   140017e10:	mov    rcx,QWORD PTR [rip+0x33261]        # 0x14004b078
   140017e17:	cmp    rcx,r15
   140017e1a:	je     0x140017e77
   140017e1c:	test   BYTE PTR [rcx+0x1c],dil
   140017e20:	je     0x140017e77
   140017e22:	mov    rcx,QWORD PTR [rcx+0x10]
   140017e26:	mov    edx,0xc
   140017e2b:	mov    r8,r12
   140017e2e:	call   0x140001f08
   140017e33:	jmp    0x140017e70
   140017e35:	mov    rcx,QWORD PTR [rip+0x3323c]        # 0x14004b078
   140017e3c:	cmp    rcx,r15
   140017e3f:	je     0x140017e5b
   140017e41:	test   BYTE PTR [rcx+0x1c],0x1
   140017e45:	je     0x140017e5b
   140017e47:	mov    rcx,QWORD PTR [rcx+0x10]
   140017e4b:	mov    edx,0xd
   140017e50:	mov    r9d,eax
   140017e53:	mov    r8,r12
   140017e56:	call   0x140001f70
   140017e5b:	mov    rcx,QWORD PTR [rbx+0x48]
   140017e5f:	mov    r8,QWORD PTR [rbx+0x58]
   140017e63:	mov    rdx,QWORD PTR [rbx+0x50]
   140017e67:	mov    rcx,QWORD PTR [rcx+0x8]
   140017e6b:	call   0x14001b390
   140017e70:	mov    rcx,QWORD PTR [rip+0x33201]        # 0x14004b078
   140017e77:	cmp    ebp,r14d
   140017e7a:	jle    0x140017e9f
   140017e7c:	cmp    rcx,r15
   140017e7f:	je     0x140017efd
   140017e81:	test   BYTE PTR [rcx+0x1c],dil
   140017e85:	je     0x140017efd
   140017e87:	mov    rcx,QWORD PTR [rcx+0x10]
   140017e8b:	mov    edx,0xe
   140017e90:	mov    r9d,ebp
   140017e93:	mov    DWORD PTR [rsp+0x20],r14d
   140017e98:	call   0x140017b70
   140017e9d:	jmp    0x140017efd
   140017e9f:	mov    rcx,rbx
   140017ea2:	call   0x140017f40
   140017ea7:	test   eax,eax
   140017ea9:	jns    0x140017f18
   140017eab:	cmp    eax,0x80004004
   140017eb0:	jne    0x140017ed7
   140017eb2:	mov    rcx,QWORD PTR [rip+0x331bf]        # 0x14004b078
   140017eb9:	cmp    rcx,r15
   140017ebc:	je     0x140017efd
   140017ebe:	test   BYTE PTR [rcx+0x1c],dil
   140017ec2:	je     0x140017efd
   140017ec4:	mov    rcx,QWORD PTR [rcx+0x10]
   140017ec8:	mov    edx,0xf
   140017ecd:	mov    r8,r12
   140017ed0:	call   0x140001f08
   140017ed5:	jmp    0x140017efd
   140017ed7:	mov    rcx,QWORD PTR [rip+0x3319a]        # 0x14004b078
   140017ede:	cmp    rcx,r15
   140017ee1:	je     0x140017efd
   140017ee3:	test   BYTE PTR [rcx+0x1c],dil
   140017ee7:	je     0x140017efd
   140017ee9:	mov    rcx,QWORD PTR [rcx+0x10]
   140017eed:	mov    edx,0x10
   140017ef2:	mov    r9d,eax
   140017ef5:	mov    r8,r12
   140017ef8:	call   0x140001f70
   140017efd:	mov    rax,QWORD PTR [rbx+0x48]
   140017f01:	mov    rdx,rbx
   140017f04:	mov    BYTE PTR [rbx+0x60],sil
   140017f08:	lock dec DWORD PTR [rax+0xec]
   140017f0f:	mov    rcx,QWORD PTR [rbx+0x48]
   140017f13:	call   0x14001a254
   140017f18:	mov    rbx,QWORD PTR [rsp+0x60]
   140017f1d:	mov    rbp,QWORD PTR [rsp+0x68]
   140017f22:	mov    rsi,QWORD PTR [rsp+0x70]
   140017f27:	mov    rdi,QWORD PTR [rsp+0x78]
   140017f2c:	add    rsp,0x40
   140017f30:	pop    r15
   140017f32:	pop    r14
   140017f34:	pop    r12
   140017f36:	ret    
   140017f37:	int3   
   140017f38:	int3   
   140017f39:	int3   
   140017f3a:	int3   
   140017f3b:	int3   
   140017f3c:	int3   
   140017f3d:	int3   
   140017f3e:	int3   
   140017f3f:	int3   
   140017f40:	mov    QWORD PTR [rsp+0x8],rbx
   140017f45:	mov    QWORD PTR [rsp+0x10],rsi
   140017f4a:	push   rdi
   140017f4b:	sub    rsp,0x40
   140017f4f:	mov    rdi,rcx
   140017f52:	mov    rcx,QWORD PTR [rcx+0x48]
   140017f56:	add    rcx,0xa8
   140017f5d:	call   0x140029ab0
   140017f62:	test   eax,eax
   140017f64:	js     0x140018100
   140017f6a:	xor    edx,edx
   140017f6c:	lea    rbx,[rdi+0x20]
   140017f70:	mov    rcx,rbx
   140017f73:	lea    r8d,[rdx+0x20]
   140017f77:	call   0x14002e2ce
   140017f7c:	mov    rax,QWORD PTR [rdi+0x58]
   140017f80:	xor    r9d,r9d
   140017f83:	mov    rcx,QWORD PTR [rdi+0x48]
   140017f87:	xor    r8d,r8d
   140017f8a:	mov    QWORD PTR [rsp+0x30],rbx
   140017f8f:	mov    edx,0x1280ce
   140017f94:	mov    QWORD PTR [rsp+0x28],rax
   140017f99:	mov    rax,QWORD PTR [rdi+0x50]
   140017f9d:	mov    QWORD PTR [rsp+0x20],rax
   140017fa2:	call   0x140018118
   140017fa7:	mov    esi,eax
   140017fa9:	cmp    eax,0x800703e5
   140017fae:	jne    0x14001800d
   140017fb0:	cmp    BYTE PTR [rdi+0x60],0x0
   140017fb4:	jne    0x140018006
   140017fb6:	mov    rax,QWORD PTR [rdi+0x48]
   140017fba:	mov    rsi,QWORD PTR [rax+0xa0]
   140017fc1:	mov    eax,DWORD PTR [rdi+0x8]
   140017fc4:	test   eax,eax
   140017fc6:	jne    0x140017fd1
   140017fc8:	mov    DWORD PTR [rdi+0x8],0x1
   140017fcf:	jmp    0x140017fd5
   140017fd1:	lock inc DWORD PTR [rdi+0x8]
   140017fd5:	lea    rcx,[rsi+0x10]
   140017fd9:	call   QWORD PTR [rip+0x1a129]        # 0x140032108
   140017fdf:	lea    r8,[rdi+0x10]
   140017fe3:	lea    rdx,[rsi+0x38]
   140017fe7:	mov    rax,QWORD PTR [rdx]
   140017fea:	lea    rcx,[rsi+0x10]
   140017fee:	mov    QWORD PTR [r8],rax
   140017ff1:	mov    QWORD PTR [r8+0x8],rdx
   140017ff5:	mov    QWORD PTR [rax+0x8],r8
   140017ff9:	mov    QWORD PTR [rdx],r8
   140017ffc:	call   QWORD PTR [rip+0x1a0f6]        # 0x1400320f8
   140018002:	mov    BYTE PTR [rdi+0x60],0x1
   140018006:	xor    eax,eax
   140018008:	jmp    0x140018100
   14001800d:	mov    rcx,QWORD PTR [rdi+0x48]
   140018011:	add    rcx,0xa8
   140018018:	or     eax,0xffffffff
   14001801b:	lock xadd DWORD PTR [rcx+0x8],eax
   140018020:	dec    eax
   140018022:	cmp    eax,0x80000000
   140018027:	jne    0x14001802e
   140018029:	call   0x140029c90
   14001802e:	lea    rdi,[rip+0x1fdb3]        # 0x140037de8
   140018035:	test   esi,esi
   140018037:	js     0x140018071
   140018039:	mov    rcx,QWORD PTR [rip+0x33038]        # 0x14004b078
   140018040:	lea    rbx,[rip+0x33031]        # 0x14004b078
   140018047:	cmp    rcx,rbx
   14001804a:	je     0x14001806a
   14001804c:	test   BYTE PTR [rcx+0x1c],0x1
   140018050:	je     0x14001806a
   140018052:	mov    rcx,QWORD PTR [rcx+0x10]
   140018056:	mov    edx,0x11
   14001805b:	mov    r8,rdi
   14001805e:	call   0x140001f08
   140018063:	mov    rcx,QWORD PTR [rip+0x3300e]        # 0x14004b078
   14001806a:	mov    esi,0x8000ffff
   14001806f:	jmp    0x1400180a5
   140018071:	mov    rcx,QWORD PTR [rip+0x33000]        # 0x14004b078
   140018078:	lea    rbx,[rip+0x32ff9]        # 0x14004b078
   14001807f:	cmp    rcx,rbx
   140018082:	je     0x1400180a5
   140018084:	test   BYTE PTR [rcx+0x1c],0x1
   140018088:	je     0x1400180a5
   14001808a:	mov    rcx,QWORD PTR [rcx+0x10]
   14001808e:	mov    edx,0x12
   140018093:	mov    r9d,esi
   140018096:	mov    r8,rdi
   140018099:	call   0x140001f70
   14001809e:	mov    rcx,QWORD PTR [rip+0x32fd3]        # 0x14004b078
   1400180a5:	test   BYTE PTR [rip+0x37f14],0x4        # 0x14004ffc0
   1400180ac:	je     0x1400180ca
   1400180ae:	lea    r8,[rip+0x1c2cb]        # 0x140034380
   1400180b5:	lea    rdx,[rip+0x1c344]        # 0x140034400
   1400180bc:	call   0x140003818
   1400180c1:	mov    rcx,QWORD PTR [rip+0x32fb0]        # 0x14004b078
   1400180c8:	jmp    0x1400180cc
   1400180ca:	xor    eax,eax
   1400180cc:	movzx  r9d,ax
   1400180d0:	or     r9d,0x80070000
   1400180d7:	test   eax,eax
   1400180d9:	cmovle r9d,eax
   1400180dd:	test   r9d,r9d
   1400180e0:	jns    0x1400180fe
   1400180e2:	cmp    rcx,rbx
   1400180e5:	je     0x1400180fe
   1400180e7:	test   BYTE PTR [rcx+0x1c],0x2
   1400180eb:	je     0x1400180fe
   1400180ed:	mov    rcx,QWORD PTR [rcx+0x10]
   1400180f1:	mov    edx,0x13
   1400180f6:	mov    r8,rdi
   1400180f9:	call   0x140001f70
   1400180fe:	mov    eax,esi
   140018100:	mov    rbx,QWORD PTR [rsp+0x50]
   140018105:	mov    rsi,QWORD PTR [rsp+0x58]
   14001810a:	add    rsp,0x40
   14001810e:	pop    rdi
   14001810f:	ret    
   140018110:	int3   
   140018111:	int3   
   140018112:	int3   
   140018113:	int3   
   140018114:	int3   
   140018115:	int3   
   140018116:	int3   
   140018117:	int3   
   140018118:	mov    QWORD PTR [rsp+0x10],rbx
   14001811d:	mov    QWORD PTR [rsp+0x18],rsi
   140018122:	push   rdi
   140018123:	sub    rsp,0x40
   140018127:	mov    r10,rcx
   14001812a:	mov    r11,r8
   14001812d:	add    rcx,0xc8
   140018134:	mov    esi,edx
   140018136:	xor    ebx,ebx
   140018138:	call   0x140029ab0
   14001813d:	mov    edi,eax
   14001813f:	test   eax,eax
   140018141:	js     0x140018148
   140018143:	mov    rbx,rcx
   140018146:	xor    edi,edi
   140018148:	test   edi,edi
   14001814a:	js     0x1400181a8
   14001814c:	mov    rax,QWORD PTR [rsp+0x80]
   140018154:	mov    r8,r11
   140018157:	mov    rcx,QWORD PTR [r10+0x98]
   14001815e:	mov    edx,esi
   140018160:	and    DWORD PTR [rsp+0x50],0x0
   140018165:	mov    QWORD PTR [rsp+0x38],rax
   14001816a:	lea    rax,[rsp+0x50]
   14001816f:	mov    QWORD PTR [rsp+0x30],rax
   140018174:	mov    eax,DWORD PTR [rsp+0x78]
   140018178:	mov    DWORD PTR [rsp+0x28],eax
   14001817c:	mov    rax,QWORD PTR [rsp+0x70]
   140018181:	mov    QWORD PTR [rsp+0x20],rax
   140018186:	call   QWORD PTR [rip+0x19fe4]        # 0x140032170
   14001818c:	test   eax,eax
   14001818e:	je     0x140018194
   140018190:	xor    edi,edi
   140018192:	jmp    0x1400181a8
   140018194:	call   QWORD PTR [rip+0x1a0ee]        # 0x140032288
   14001819a:	movzx  edi,ax
   14001819d:	or     edi,0x80070000
   1400181a3:	test   eax,eax
   1400181a5:	cmovle edi,eax
   1400181a8:	test   rbx,rbx
   1400181ab:	je     0x1400181c7
   1400181ad:	or     ecx,0xffffffff
   1400181b0:	lock xadd DWORD PTR [rbx+0x8],ecx
   1400181b5:	dec    ecx
   1400181b7:	cmp    ecx,0x80000000
   1400181bd:	jne    0x1400181c7
   1400181bf:	mov    rcx,rbx
   1400181c2:	call   0x140029c90
   1400181c7:	mov    rbx,QWORD PTR [rsp+0x58]
   1400181cc:	mov    eax,edi
   1400181ce:	mov    rsi,QWORD PTR [rsp+0x60]
   1400181d3:	add    rsp,0x40
   1400181d7:	pop    rdi
   1400181d8:	ret    
   1400181d9:	int3   
   1400181da:	int3   
   1400181db:	int3   
   1400181dc:	int3   
   1400181dd:	int3   
   1400181de:	int3   
   1400181df:	int3   
   1400181e0:	mov    QWORD PTR [rsp+0x8],rcx
   1400181e5:	push   rbp
   1400181e6:	push   rbx
   1400181e7:	push   rsi
   1400181e8:	push   rdi
   1400181e9:	push   r12
   1400181eb:	push   r14
   1400181ed:	push   r15
   1400181ef:	mov    rbp,rsp
   1400181f2:	sub    rsp,0x50
   1400181f6:	mov    QWORD PTR [rbp-0x20],0xfffffffffffffffe
   1400181fe:	mov    rsi,rcx
   140018201:	lea    rax,[rip+0x1c700]        # 0x140034908
   140018208:	mov    QWORD PTR [rcx],rax
   14001820b:	xor    r15d,r15d
   14001820e:	mov    QWORD PTR [rcx+0x10],r15
   140018212:	mov    QWORD PTR [rcx+0x78],r15
   140018216:	mov    QWORD PTR [rbp+0x58],r15
   14001821a:	lea    rax,[rbp+0x58]
   14001821e:	mov    QWORD PTR [rbp-0x18],rax
   140018222:	mov    QWORD PTR [rcx+0x80],r15
   140018229:	mov    QWORD PTR [rbp-0x30],r15
   14001822d:	lea    rax,[rbp-0x30]
   140018231:	mov    QWORD PTR [rbp-0x10],rax
   140018235:	mov    QWORD PTR [rcx+0x88],r15
   14001823c:	mov    QWORD PTR [rcx+0x90],r15
   140018243:	or     r12,0xffffffffffffffff
   140018247:	mov    QWORD PTR [rbp-0x28],r12
   14001824b:	lea    rax,[rbp-0x28]
   14001824f:	mov    QWORD PTR [rbp-0x8],rax
   140018253:	mov    QWORD PTR [rcx+0x98],r12
   14001825a:	mov    QWORD PTR [rcx+0xa0],r15
   140018261:	mov    DWORD PTR [rcx+0xb0],r15d
   140018268:	lea    rax,[rip+0x1cab1]        # 0x140034d20
   14001826f:	mov    QWORD PTR [rcx+0xa8],rax
   140018276:	mov    QWORD PTR [rcx+0xb8],r15
   14001827d:	mov    BYTE PTR [rcx+0xc0],r15b
   140018284:	mov    BYTE PTR [rcx+0xc1],r15b
   14001828b:	mov    DWORD PTR [rcx+0xd0],r15d
   140018292:	mov    QWORD PTR [rcx+0xc8],rax
   140018299:	mov    QWORD PTR [rcx+0xd8],r15
   1400182a0:	mov    BYTE PTR [rcx+0xe0],r15b
   1400182a7:	mov    BYTE PTR [rcx+0xe1],r15b
   1400182ae:	mov    DWORD PTR [rcx+0xe8],r15d
   1400182b5:	mov    DWORD PTR [rcx+0xec],r15d
   1400182bc:	mov    DWORD PTR [rcx+0xf0],r15d
   1400182c3:	mov    DWORD PTR [rcx+0xf4],r15d
   1400182ca:	mov    BYTE PTR [rcx+0xf8],r15b
   1400182d1:	mov    BYTE PTR [rcx+0xf9],r15b
   1400182d8:	mov    BYTE PTR [rcx+0xfa],r15b
   1400182df:	mov    QWORD PTR [rcx+0x8],rdx
   1400182e3:	add    rcx,0x54
   1400182e7:	xor    edx,edx
   1400182e9:	lea    r8d,[r15+0x24]
   1400182ed:	call   0x14002e2ce
   1400182f2:	mov    rdi,QWORD PTR [rsi+0xa0]
   1400182f9:	test   rdi,rdi
   1400182fc:	je     0x140018341
   1400182fe:	mov    eax,DWORD PTR [rdi+0x8]
   140018301:	cmp    eax,0x1
   140018304:	jne    0x14001830c
   140018306:	mov    DWORD PTR [rdi+0x8],r15d
   14001830a:	jmp    0x14001831b
   14001830c:	mov    eax,r12d
   14001830f:	lock xadd DWORD PTR [rdi+0x8],eax
   140018314:	add    eax,r12d
   140018317:	test   eax,eax
   140018319:	jg     0x14001833a
   14001831b:	test   rdi,rdi
   14001831e:	je     0x14001833a
   140018320:	mov    rax,QWORD PTR [rdi]
   140018323:	mov    rbx,QWORD PTR [rax+0x10]
   140018327:	mov    rcx,rbx
   14001832a:	call   QWORD PTR [rip+0x1a378]        # 0x1400326a8
   140018330:	mov    edx,0x1
   140018335:	mov    rcx,rdi
   140018338:	call   rbx
   14001833a:	mov    QWORD PTR [rsi+0xa0],r15
   140018341:	mov    QWORD PTR [rsi+0xa0],r15
   140018348:	mov    rbx,r15
   14001834b:	mov    QWORD PTR [rbp+0x50],rbx
   14001834f:	mov    QWORD PTR [rbp+0x48],r15
   140018353:	lea    rcx,[rbp+0x48]
   140018357:	call   0x14002b960
   14001835c:	mov    r14d,eax
   14001835f:	test   eax,eax
   140018361:	jns    0x1400183ad
   140018363:	mov    rax,QWORD PTR [rbp+0x48]
   140018367:	test   rax,rax
   14001836a:	je     0x1400183d0
   14001836c:	mov    ecx,DWORD PTR [rax+0x8]
   14001836f:	cmp    ecx,0x1
   140018372:	jne    0x14001837a
   140018374:	mov    DWORD PTR [rax+0x8],r15d
   140018378:	jmp    0x140018389
   14001837a:	mov    ecx,r12d
   14001837d:	lock xadd DWORD PTR [rax+0x8],ecx
   140018382:	add    ecx,r12d
   140018385:	test   ecx,ecx
   140018387:	jg     0x1400183a7
   140018389:	mov    rbx,QWORD PTR [rbp+0x48]
   14001838d:	mov    rax,QWORD PTR [rbx]
   140018390:	mov    rdi,QWORD PTR [rax+0x10]
   140018394:	mov    rcx,rdi
   140018397:	call   QWORD PTR [rip+0x1a30b]        # 0x1400326a8
   14001839d:	mov    edx,0x1
   1400183a2:	mov    rcx,rbx
   1400183a5:	call   rdi
   1400183a7:	mov    rbx,QWORD PTR [rbp+0x50]
   1400183ab:	jmp    0x1400183d0
   1400183ad:	mov    rbx,QWORD PTR [rbp+0x48]
   1400183b1:	lea    rcx,[rbx+0x10]
   1400183b5:	mov    DWORD PTR [rcx+0xc],r15d
   1400183b9:	xor    edx,edx
   1400183bb:	call   QWORD PTR [rip+0x19eaf]        # 0x140032270
   1400183c1:	mov    BYTE PTR [rbx+0x48],r15b
   1400183c5:	mov    QWORD PTR [rbp+0x48],r15
   1400183c9:	mov    QWORD PTR [rbp+0x50],rbx
   1400183cd:	mov    r14d,r15d
   1400183d0:	test   r14d,r14d
   1400183d3:	jns    0x140018417
   1400183d5:	test   rbx,rbx
   1400183d8:	je     0x140018421
   1400183da:	mov    eax,DWORD PTR [rbx+0x8]
   1400183dd:	cmp    eax,0x1
   1400183e0:	jne    0x1400183e8
   1400183e2:	mov    DWORD PTR [rbx+0x8],r15d
   1400183e6:	jmp    0x1400183f7
   1400183e8:	mov    eax,r12d
   1400183eb:	lock xadd DWORD PTR [rbx+0x8],eax
   1400183f0:	add    eax,r12d
   1400183f3:	test   eax,eax
   1400183f5:	jg     0x140018421
   1400183f7:	mov    rbx,QWORD PTR [rbp+0x50]
   1400183fb:	mov    rax,QWORD PTR [rbx]
   1400183fe:	mov    rdi,QWORD PTR [rax+0x10]
   140018402:	mov    rcx,rdi
   140018405:	call   QWORD PTR [rip+0x1a29d]        # 0x1400326a8
   14001840b:	mov    edx,0x1
   140018410:	mov    rcx,rbx
   140018413:	call   rdi
   140018415:	jmp    0x140018421
   140018417:	mov    QWORD PTR [rsi+0xa0],rbx
   14001841e:	mov    r14d,r15d
   140018421:	test   r14d,r14d
   140018424:	jns    0x14001842f
   140018426:	mov    ecx,r14d
   140018429:	call   0x140029d64
   14001842e:	int3   
   14001842f:	mov    rcx,rsi
   140018432:	call   0x14001956c
   140018437:	nop
   140018438:	mov    rax,rsi
   14001843b:	add    rsp,0x50
   14001843f:	pop    r15
   140018441:	pop    r14
   140018443:	pop    r12
   140018445:	pop    rdi
   140018446:	pop    rsi
   140018447:	pop    rbx
   140018448:	pop    rbp
   140018449:	ret    
   14001844a:	int3   
   14001844b:	int3   
   14001844c:	int3   
   14001844d:	int3   
   14001844e:	int3   
   14001844f:	int3   
   140018450:	mov    QWORD PTR [rsp+0x8],rbx
   140018455:	push   rdi
   140018456:	sub    rsp,0x20
   14001845a:	mov    ebx,edx
   14001845c:	mov    rdi,rcx
   14001845f:	call   0x1400184a8
   140018464:	test   bl,0x1
   140018467:	je     0x140018472
   140018469:	mov    rcx,rdi
   14001846c:	call   QWORD PTR [rip+0x1a156]        # 0x1400325c8
   140018472:	mov    rax,rdi
   140018475:	mov    rbx,QWORD PTR [rsp+0x30]
   14001847a:	add    rsp,0x20
   14001847e:	pop    rdi
   14001847f:	ret    
   140018480:	int3   
   140018481:	int3   
   140018482:	int3   
   140018483:	int3   
   140018484:	int3   
   140018485:	int3   
   140018486:	int3   
   140018487:	int3   
   140018488:	sub    rsp,0x28
   14001848c:	cmp    QWORD PTR [rcx],0xffffffffffffffff
   140018490:	je     0x14001849b
   140018492:	mov    rcx,QWORD PTR [rcx]
   140018495:	call   QWORD PTR [rip+0x19cbd]        # 0x140032158
   14001849b:	add    rsp,0x28
   14001849f:	ret    
   1400184a0:	int3   
   1400184a1:	int3   
   1400184a2:	int3   
   1400184a3:	int3   
   1400184a4:	int3   
   1400184a5:	int3   
   1400184a6:	int3   
   1400184a7:	int3   
   1400184a8:	mov    QWORD PTR [rsp+0x8],rbx
   1400184ad:	mov    QWORD PTR [rsp+0x10],rsi
   1400184b2:	push   rdi
   1400184b3:	sub    rsp,0x20
   1400184b7:	lea    rax,[rip+0x1c44a]        # 0x140034908
   1400184be:	mov    rdi,rcx
   1400184c1:	mov    QWORD PTR [rcx],rax
   1400184c4:	add    rcx,0xc8
   1400184cb:	call   0x140029b48
   1400184d0:	lea    rcx,[rdi+0xa8]
   1400184d7:	call   0x140029b48
   1400184dc:	mov    rsi,QWORD PTR [rdi+0xa0]
   1400184e3:	test   rsi,rsi
   1400184e6:	je     0x140018525
   1400184e8:	mov    eax,DWORD PTR [rsi+0x8]
   1400184eb:	cmp    eax,0x1
   1400184ee:	jne    0x1400184f9
   1400184f0:	mov    DWORD PTR [rsi+0x8],0x0
   1400184f7:	jmp    0x140018506
   1400184f9:	or     eax,0xffffffff
   1400184fc:	lock xadd DWORD PTR [rsi+0x8],eax
   140018501:	sub    eax,0x1
   140018504:	jg     0x140018525
   140018506:	test   rsi,rsi
   140018509:	je     0x140018525
   14001850b:	mov    rax,QWORD PTR [rsi]
   14001850e:	mov    rbx,QWORD PTR [rax+0x10]
   140018512:	mov    rcx,rbx
   140018515:	call   QWORD PTR [rip+0x1a18d]        # 0x1400326a8
   14001851b:	mov    edx,0x1
   140018520:	mov    rcx,rsi
   140018523:	call   rbx
   140018525:	mov    rcx,QWORD PTR [rdi+0x98]
   14001852c:	cmp    rcx,0xffffffffffffffff
   140018530:	je     0x140018538
   140018532:	call   QWORD PTR [rip+0x19c20]        # 0x140032158
   140018538:	mov    rsi,QWORD PTR [rdi+0x90]
   14001853f:	test   rsi,rsi
   140018542:	je     0x140018580
   140018544:	mov    eax,DWORD PTR [rsi+0x8]
   140018547:	cmp    eax,0x1
   14001854a:	jne    0x140018555
   14001854c:	mov    DWORD PTR [rsi+0x8],0x0
   140018553:	jmp    0x140018562
   140018555:	or     eax,0xffffffff
   140018558:	lock xadd DWORD PTR [rsi+0x8],eax
   14001855d:	sub    eax,0x1
   140018560:	jg     0x140018580
   140018562:	test   rsi,rsi
   140018565:	je     0x140018580
   140018567:	mov    rax,QWORD PTR [rsi]
   14001856a:	mov    rbx,QWORD PTR [rax]
   14001856d:	mov    rcx,rbx
   140018570:	call   QWORD PTR [rip+0x1a132]        # 0x1400326a8
   140018576:	mov    edx,0x1
   14001857b:	mov    rcx,rsi
   14001857e:	call   rbx
   140018580:	mov    rsi,QWORD PTR [rdi+0x88]
   140018587:	test   rsi,rsi
   14001858a:	je     0x1400185a1
   14001858c:	mov    rax,QWORD PTR [rsi]
   14001858f:	mov    rbx,QWORD PTR [rax+0x8]
   140018593:	mov    rcx,rbx
   140018596:	call   QWORD PTR [rip+0x1a10c]        # 0x1400326a8
   14001859c:	mov    rcx,rsi
   14001859f:	call   rbx
   1400185a1:	mov    rsi,QWORD PTR [rdi+0x80]
   1400185a8:	test   rsi,rsi
   1400185ab:	je     0x1400185d7
   1400185ad:	mov    rax,QWORD PTR [rsi]
   1400185b0:	mov    rbx,QWORD PTR [rax+0x38]
   1400185b4:	mov    rcx,rbx
   1400185b7:	call   QWORD PTR [rip+0x1a0eb]        # 0x1400326a8
   1400185bd:	mov    rcx,rsi
   1400185c0:	call   rbx
   1400185c2:	mov    rax,QWORD PTR [rsi]
   1400185c5:	mov    rbx,QWORD PTR [rax+0x8]
   1400185c9:	mov    rcx,rbx
   1400185cc:	call   QWORD PTR [rip+0x1a0d6]        # 0x1400326a8
   1400185d2:	mov    rcx,rsi
   1400185d5:	call   rbx
   1400185d7:	mov    rcx,QWORD PTR [rdi+0x10]
   1400185db:	test   rcx,rcx
   1400185de:	je     0x1400185eb
   1400185e0:	call   QWORD PTR [rip+0x19b72]        # 0x140032158
   1400185e6:	and    QWORD PTR [rdi+0x10],0x0
   1400185eb:	mov    rbx,QWORD PTR [rsp+0x30]
   1400185f0:	mov    rsi,QWORD PTR [rsp+0x38]
   1400185f5:	add    rsp,0x20
   1400185f9:	pop    rdi
   1400185fa:	ret    
   1400185fb:	int3   
   1400185fc:	int3   
   1400185fd:	int3   
   1400185fe:	int3   
   1400185ff:	int3   
   140018600:	int3   
   140018601:	int3   
   140018602:	int3   
   140018603:	int3   
   140018604:	rex push rbp
   140018606:	push   rbx
   140018607:	push   rsi
   140018608:	push   rdi
   140018609:	push   r12
   14001860b:	push   r13
   14001860d:	push   r14
   14001860f:	push   r15
   140018611:	lea    rbp,[rsp-0x1f]
   140018616:	sub    rsp,0xd8
   14001861d:	xor    r15d,r15d
   140018620:	lea    rax,[rbp-0x71]
   140018624:	mov    r13,rcx
   140018627:	mov    QWORD PTR [rbp-0x71],r15
   14001862b:	xor    edx,edx
   14001862d:	mov    QWORD PTR [rbp-0x61],rax
   140018631:	lea    rcx,[rbp-0x4d]
   140018635:	mov    QWORD PTR [rbp+0x77],r15
   140018639:	lea    r14d,[r15+0x2c]
   14001863d:	mov    DWORD PTR [rbp+0x67],r15d
   140018641:	mov    r8d,r14d
   140018644:	mov    DWORD PTR [rbp-0x51],r15d
   140018648:	call   0x14002e2ce
   14001864d:	lea    rcx,[rbp-0x51]
   140018651:	call   QWORD PTR [rip+0x19bc1]        # 0x140032218
   140018657:	mov    eax,DWORD PTR [rbp-0x31]
   14001865a:	lea    esi,[r15+0x1]
   14001865e:	mov    edi,esi
   140018660:	test   eax,eax
   140018662:	je     0x140018666
   140018664:	mov    edi,eax
   140018666:	call   0x140025fe8
   14001866b:	mov    r8,rax
   14001866e:	lea    rcx,[rbp+0x77]
   140018672:	call   0x14002b2ac
   140018677:	mov    rbx,QWORD PTR [rbp+0x77]
   14001867b:	test   eax,eax
   14001867d:	js     0x1400186ef
   14001867f:	lea    r8,[rbp+0x67]
   140018683:	mov    rcx,rbx
   140018686:	lea    rdx,[rip+0x1f6bb]        # 0x140037d48
   14001868d:	call   0x14002b5f0
   140018692:	test   eax,eax
   140018694:	js     0x1400186a5
   140018696:	mov    ecx,DWORD PTR [rbp+0x67]
   140018699:	lea    eax,[rcx-0x1]
   14001869c:	cmp    eax,0x1c
   14001869f:	ja     0x1400186a5
   1400186a1:	mov    edi,ecx
   1400186a3:	jmp    0x140018705
   1400186a5:	lea    r8,[rbp+0x67]
   1400186a9:	mov    rcx,rbx
   1400186ac:	lea    rdx,[rip+0x1f6cd]        # 0x140037d80
   1400186b3:	call   0x14002b5f0
   1400186b8:	test   eax,eax
   1400186ba:	js     0x1400186ef
   1400186bc:	mov    ecx,DWORD PTR [rbp+0x67]
   1400186bf:	lea    eax,[rcx-0x1]
   1400186c2:	cmp    eax,0xe
   1400186c5:	ja     0x1400186ef
   1400186c7:	mov    r8d,ecx
   1400186ca:	cmp    rdi,rcx
   1400186cd:	ja     0x1400186e2
   1400186cf:	test   rbx,rbx
   1400186d2:	je     0x1400186dd
   1400186d4:	mov    rcx,rbx
   1400186d7:	call   QWORD PTR [rip+0x1995b]        # 0x140032038
   1400186dd:	mov    rdi,rsi
   1400186e0:	jmp    0x140018713
   1400186e2:	mov    rax,rdi
   1400186e5:	xor    edx,edx
   1400186e7:	div    r8
   1400186ea:	mov    rdi,rax
   1400186ed:	jmp    0x1400186f9
   1400186ef:	cmp    rdi,0x4
   1400186f3:	jbe    0x1400186cf
   1400186f5:	shr    rdi,0x2
   1400186f9:	mov    eax,0x2
   1400186fe:	cmp    rdi,rax
   140018701:	cmova  rdi,rax
   140018705:	test   rbx,rbx
   140018708:	je     0x140018713
   14001870a:	mov    rcx,rbx
   14001870d:	call   QWORD PTR [rip+0x19925]        # 0x140032038
   140018713:	lea    rax,[rbp-0x79]
   140018717:	mov    QWORD PTR [rbp-0x69],rdi
   14001871b:	mov    r8,r14
   14001871e:	mov    QWORD PTR [rbp-0x59],rax
   140018722:	xor    edx,edx
   140018724:	mov    QWORD PTR [rbp-0x79],r15
   140018728:	lea    rcx,[rbp-0x1d]
   14001872c:	mov    QWORD PTR [rbp+0x7f],r15
   140018730:	mov    DWORD PTR [rbp+0x6f],r15d
   140018734:	mov    DWORD PTR [rbp-0x21],r15d
   140018738:	call   0x14002e2ce
   14001873d:	lea    rcx,[rbp-0x21]
   140018741:	call   QWORD PTR [rip+0x19ad1]        # 0x140032218
   140018747:	mov    eax,DWORD PTR [rbp-0x1]
   14001874a:	test   eax,eax
   14001874c:	je     0x140018750
   14001874e:	mov    esi,eax
   140018750:	call   0x140025fe8
   140018755:	mov    r8,rax
   140018758:	lea    rcx,[rbp+0x7f]
   14001875c:	call   0x14002b2ac
   140018761:	mov    rbx,QWORD PTR [rbp+0x7f]
   140018765:	test   eax,eax
   140018767:	js     0x1400187bb
   140018769:	lea    r8,[rbp+0x6f]
   14001876d:	mov    rcx,rbx
   140018770:	lea    rdx,[rip+0x1f549]        # 0x140037cc0
   140018777:	call   0x14002b5f0
   14001877c:	test   eax,eax
   14001877e:	js     0x140018790
   140018780:	mov    ecx,DWORD PTR [rbp+0x6f]
   140018783:	lea    eax,[rcx-0x1]
   140018786:	cmp    eax,0x1c
   140018789:	ja     0x140018790
   14001878b:	mov    r14d,ecx
   14001878e:	jmp    0x1400187bf
   140018790:	lea    r8,[rbp+0x6f]
   140018794:	mov    rcx,rbx
   140018797:	lea    rdx,[rip+0x1f562]        # 0x140037d00
   14001879e:	call   0x14002b5f0
   1400187a3:	test   eax,eax
   1400187a5:	js     0x1400187bb
   1400187a7:	mov    ecx,DWORD PTR [rbp+0x6f]
   1400187aa:	lea    eax,[rcx-0x1]
   1400187ad:	cmp    eax,0x4
   1400187b0:	ja     0x1400187bb
   1400187b2:	mov    r14d,ecx
   1400187b5:	imul   r14,rsi
   1400187b9:	jmp    0x1400187bf
   1400187bb:	lea    r14,[rsi+rsi*2]
   1400187bf:	test   rbx,rbx
   1400187c2:	je     0x1400187cd
   1400187c4:	mov    rcx,rbx
   1400187c7:	call   QWORD PTR [rip+0x1986b]        # 0x140032038
   1400187cd:	mov    r8d,r14d
   1400187d0:	lea    rcx,[rip+0x1f639]        # 0x140037e10
   1400187d7:	mov    edx,edi
   1400187d9:	call   QWORD PTR [rip+0x19b51]        # 0x140032330
   1400187df:	lea    rsi,[r13+0x98]
   1400187e6:	cmp    QWORD PTR [rsi],0xffffffffffffffff
   1400187ea:	je     0x1400187f9
   1400187ec:	mov    rcx,QWORD PTR [rsi]
   1400187ef:	call   QWORD PTR [rip+0x19963]        # 0x140032158
   1400187f5:	or     QWORD PTR [rsi],0xffffffffffffffff
   1400187f9:	xor    r9d,r9d
   1400187fc:	mov    DWORD PTR [rsp+0x28],0x40000000
   140018804:	mov    r8d,0xc0000000
   14001880a:	lea    rdx,[rip+0x1f5e7]        # 0x140037df8
   140018811:	mov    rcx,rsi
   140018814:	call   0x14002a57c
   140018819:	test   eax,eax
   14001881b:	js     0x140018960
   140018821:	lea    r15,[r13+0x88]
   140018828:	mov    r12,QWORD PTR [r15]
   14001882b:	test   r12,r12
   14001882e:	je     0x14001884a
   140018830:	mov    rax,QWORD PTR [r12]
   140018834:	mov    rbx,QWORD PTR [rax+0x8]
   140018838:	mov    rcx,rbx
   14001883b:	call   QWORD PTR [rip+0x19e67]        # 0x1400326a8
   140018841:	mov    rcx,r12
   140018844:	call   rbx
   140018846:	and    QWORD PTR [r15],0x0
   14001884a:	call   QWORD PTR [rip+0x19bb8]        # 0x140032408
   140018850:	mov    rbx,QWORD PTR [rax+0x98]
   140018857:	mov    rcx,rbx
   14001885a:	call   QWORD PTR [rip+0x19e48]        # 0x1400326a8
   140018860:	xor    r9d,r9d
   140018863:	xor    r8d,r8d
   140018866:	mov    edx,edi
   140018868:	mov    rcx,r15
   14001886b:	call   rbx
   14001886d:	test   eax,eax
   14001886f:	js     0x140018968
   140018875:	mov    rdi,QWORD PTR [rsi]
   140018878:	mov    rsi,QWORD PTR [r15]
   14001887b:	mov    rax,QWORD PTR [rsi]
   14001887e:	mov    rbx,QWORD PTR [rax+0x18]
   140018882:	mov    rcx,rbx
   140018885:	call   QWORD PTR [rip+0x19e1d]        # 0x1400326a8
   14001888b:	xor    r8d,r8d
   14001888e:	mov    rdx,rdi
   140018891:	mov    rcx,rsi
   140018894:	call   rbx
   140018896:	test   eax,eax
   140018898:	js     0x140018970
   14001889e:	lea    rsi,[r13+0x90]
   1400188a5:	mov    rdi,QWORD PTR [rsi]
   1400188a8:	test   rdi,rdi
   1400188ab:	je     0x1400188ed
   1400188ad:	mov    eax,DWORD PTR [rdi+0x8]
   1400188b0:	cmp    eax,0x1
   1400188b3:	jne    0x1400188be
   1400188b5:	mov    DWORD PTR [rdi+0x8],0x0
   1400188bc:	jmp    0x1400188cb
   1400188be:	or     eax,0xffffffff
   1400188c1:	lock xadd DWORD PTR [rdi+0x8],eax
   1400188c6:	sub    eax,0x1
   1400188c9:	jg     0x1400188e9
   1400188cb:	test   rdi,rdi
   1400188ce:	je     0x1400188e9
   1400188d0:	mov    rax,QWORD PTR [rdi]
   1400188d3:	mov    rbx,QWORD PTR [rax]
   1400188d6:	mov    rcx,rbx
   1400188d9:	call   QWORD PTR [rip+0x19dc9]        # 0x1400326a8
   1400188df:	mov    edx,0x1
   1400188e4:	mov    rcx,rdi
   1400188e7:	call   rbx
   1400188e9:	and    QWORD PTR [rsi],0x0
   1400188ed:	lea    r8,[rbp-0x69]
   1400188f1:	mov    rdx,r15
   1400188f4:	mov    rcx,rsi
   1400188f7:	call   0x14001a3b0
   1400188fc:	test   eax,eax
   1400188fe:	js     0x140018978
   140018900:	lea    rsi,[r13+0x80]
   140018907:	mov    rdi,QWORD PTR [rsi]
   14001890a:	test   rdi,rdi
   14001890d:	je     0x14001893d
   14001890f:	mov    rax,QWORD PTR [rdi]
   140018912:	mov    rbx,QWORD PTR [rax+0x38]
   140018916:	mov    rcx,rbx
   140018919:	call   QWORD PTR [rip+0x19d89]        # 0x1400326a8
   14001891f:	mov    rcx,rdi
   140018922:	call   rbx
   140018924:	mov    rax,QWORD PTR [rdi]
   140018927:	mov    rbx,QWORD PTR [rax+0x8]
   14001892b:	mov    rcx,rbx
   14001892e:	call   QWORD PTR [rip+0x19d74]        # 0x1400326a8
   140018934:	mov    rcx,rdi
   140018937:	call   rbx
   140018939:	and    QWORD PTR [rsi],0x0
   14001893d:	mov    rdx,r14
   140018940:	mov    rcx,rsi
   140018943:	call   0x14002d474
   140018948:	test   eax,eax
   14001894a:	js     0x140018980
   14001894c:	add    rsp,0xd8
   140018953:	pop    r15
   140018955:	pop    r14
   140018957:	pop    r13
   140018959:	pop    r12
   14001895b:	pop    rdi
   14001895c:	pop    rsi
   14001895d:	pop    rbx
   14001895e:	pop    rbp
   14001895f:	ret    
   140018960:	mov    ecx,eax
   140018962:	call   0x140029d64
   140018967:	int3   
   140018968:	mov    ecx,eax
   14001896a:	call   0x140029d64
   14001896f:	int3   
   140018970:	mov    ecx,eax
   140018972:	call   0x140029d64
   140018977:	int3   
   140018978:	mov    ecx,eax
   14001897a:	call   0x140029d64
   14001897f:	int3   
   140018980:	mov    ecx,eax
   140018982:	call   0x140029d64
   140018987:	int3   
   140018988:	int3   
   140018989:	int3   
   14001898a:	int3   
   14001898b:	int3   
   14001898c:	int3   
   14001898d:	int3   
   14001898e:	int3   
   14001898f:	int3   
   140018990:	mov    QWORD PTR [rsp+0x8],rcx
   140018995:	push   rbx
   140018996:	sub    rsp,0x50
   14001899a:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   1400189a3:	mov    rbx,rcx
   1400189a6:	call   0x140019738
   1400189ab:	mov    rcx,rbx
   1400189ae:	call   0x14001916c
   1400189b3:	test   eax,eax
   1400189b5:	jns    0x1400189be
   1400189b7:	mov    ecx,eax
   1400189b9:	call   0x140029d64
   1400189be:	and    QWORD PTR [rsp+0x30],0x0
   1400189c4:	and    QWORD PTR [rsp+0x28],0x0
   1400189ca:	and    QWORD PTR [rsp+0x20],0x0
   1400189d0:	xor    r9d,r9d
   1400189d3:	xor    r8d,r8d
   1400189d6:	mov    edx,0x1240d7
   1400189db:	mov    rcx,rbx
   1400189de:	call   0x140018118
   1400189e3:	test   eax,eax
   1400189e5:	jns    0x1400189ef
   1400189e7:	mov    ecx,eax
   1400189e9:	call   0x140029d64
   1400189ee:	nop
   1400189ef:	add    rsp,0x50
   1400189f3:	pop    rbx
   1400189f4:	ret    
   1400189f5:	int3   
   1400189f6:	int3   
   1400189f7:	int3   
   1400189f8:	int3   
   1400189f9:	int3   
   1400189fa:	int3   
   1400189fb:	int3   
   1400189fc:	mov    QWORD PTR [rsp+0x8],rbx
   140018a01:	mov    QWORD PTR [rsp+0x10],rsi
   140018a06:	push   rdi
   140018a07:	sub    rsp,0x20
   140018a0b:	mov    al,BYTE PTR [rcx+0xf8]
   140018a11:	mov    rdi,rcx
   140018a14:	test   al,al
   140018a16:	jne    0x140018acb
   140018a1c:	mov    BYTE PTR [rcx+0xf8],0x1
   140018a23:	add    rcx,0xc8
   140018a2a:	call   0x140029b84
   140018a2f:	mov    rcx,QWORD PTR [rdi+0x98]
   140018a36:	or     rbx,0xffffffffffffffff
   140018a3a:	cmp    rcx,rbx
   140018a3d:	je     0x140018a4c
   140018a3f:	call   QWORD PTR [rip+0x19713]        # 0x140032158
   140018a45:	mov    QWORD PTR [rdi+0x98],rbx
   140018a4c:	lea    rcx,[rdi+0xa8]
   140018a53:	call   0x140029b84
   140018a58:	mov    rsi,QWORD PTR [rdi+0x90]
   140018a5f:	test   rsi,rsi
   140018a62:	je     0x140018aa8
   140018a64:	mov    eax,DWORD PTR [rsi+0x8]
   140018a67:	cmp    eax,0x1
   140018a6a:	jne    0x140018a75
   140018a6c:	mov    DWORD PTR [rsi+0x8],0x0
   140018a73:	jmp    0x140018a82
   140018a75:	mov    eax,ebx
   140018a77:	lock xadd DWORD PTR [rsi+0x8],eax
   140018a7c:	add    eax,ebx
   140018a7e:	test   eax,eax
   140018a80:	jg     0x140018aa0
   140018a82:	test   rsi,rsi
   140018a85:	je     0x140018aa0
   140018a87:	mov    rax,QWORD PTR [rsi]
   140018a8a:	mov    rbx,QWORD PTR [rax]
   140018a8d:	mov    rcx,rbx
   140018a90:	call   QWORD PTR [rip+0x19c12]        # 0x1400326a8
   140018a96:	mov    edx,0x1
   140018a9b:	mov    rcx,rsi
   140018a9e:	call   rbx
   140018aa0:	and    QWORD PTR [rdi+0x90],0x0
   140018aa8:	mov    rdi,QWORD PTR [rdi+0x80]
   140018aaf:	test   rdi,rdi
   140018ab2:	je     0x140018acb
   140018ab4:	mov    rax,QWORD PTR [rdi]
   140018ab7:	mov    rbx,QWORD PTR [rax+0x30]
   140018abb:	mov    rcx,rbx
   140018abe:	call   QWORD PTR [rip+0x19be4]        # 0x1400326a8
   140018ac4:	xor    edx,edx
   140018ac6:	mov    rcx,rdi
   140018ac9:	call   rbx
   140018acb:	mov    rbx,QWORD PTR [rsp+0x30]
   140018ad0:	mov    rsi,QWORD PTR [rsp+0x38]
   140018ad5:	add    rsp,0x20
   140018ad9:	pop    rdi
   140018ada:	ret    
   140018adb:	int3   
   140018adc:	int3   
   140018add:	int3   
   140018ade:	int3   
   140018adf:	int3   
   140018ae0:	int3   
   140018ae1:	int3   
   140018ae2:	int3   
   140018ae3:	int3   
   140018ae4:	int3   
   140018ae5:	int3   
   140018ae6:	int3   
   140018ae7:	int3   
   140018ae8:	int3   
   140018ae9:	int3   
   140018aea:	int3   
   140018aeb:	int3   
   140018aec:	int3   
   140018aed:	int3   
   140018aee:	int3   
   140018aef:	int3   
   140018af0:	mov    QWORD PTR [rsp+0x8],rbx
   140018af5:	push   rdi
   140018af6:	sub    rsp,0x20
   140018afa:	mov    ebx,edx
   140018afc:	mov    rdi,rcx
   140018aff:	call   0x140018b28
   140018b04:	test   bl,0x1
   140018b07:	je     0x140018b12
   140018b09:	mov    rcx,rdi
   140018b0c:	call   QWORD PTR [rip+0x19ab6]        # 0x1400325c8
   140018b12:	mov    rax,rdi
   140018b15:	mov    rbx,QWORD PTR [rsp+0x30]
   140018b1a:	add    rsp,0x20
   140018b1e:	pop    rdi
   140018b1f:	ret    
   140018b20:	int3   
   140018b21:	int3   
   140018b22:	int3   
   140018b23:	int3   
   140018b24:	int3   
   140018b25:	int3   
   140018b26:	int3   
   140018b27:	int3   
   140018b28:	rex push rbx
   140018b2a:	sub    rsp,0x20
   140018b2e:	lea    rax,[rip+0x1bdb3]        # 0x1400348e8
   140018b35:	mov    rbx,rcx
   140018b38:	mov    QWORD PTR [rcx],rax
   140018b3b:	mov    rcx,QWORD PTR [rip+0x32536]        # 0x14004b078
   140018b42:	lea    rax,[rip+0x3252f]        # 0x14004b078
   140018b49:	cmp    rcx,rax
   140018b4c:	je     0x140018b69
   140018b4e:	test   BYTE PTR [rcx+0x1c],0x10
   140018b52:	je     0x140018b69
   140018b54:	mov    rcx,QWORD PTR [rcx+0x10]
   140018b58:	lea    r8,[rip+0x1f289]        # 0x140037de8
   140018b5f:	mov    edx,0x14
   140018b64:	call   0x140001f08
   140018b69:	mov    rcx,QWORD PTR [rbx+0x38]
   140018b6d:	test   rcx,rcx
   140018b70:	je     0x140018b78
   140018b72:	call   QWORD PTR [rip+0x19a50]        # 0x1400325c8
   140018b78:	lea    rax,[rip+0x1bd29]        # 0x1400348a8
   140018b7f:	mov    QWORD PTR [rbx],rax
   140018b82:	add    rsp,0x20
   140018b86:	pop    rbx
   140018b87:	ret    
   140018b88:	int3   
   140018b89:	int3   
   140018b8a:	int3   
   140018b8b:	int3   
   140018b8c:	int3   
   140018b8d:	int3   
   140018b8e:	int3   
   140018b8f:	int3   
   140018b90:	rex push rbx
   140018b92:	sub    rsp,0x20
   140018b96:	mov    rbx,QWORD PTR [rcx+0x30]
   140018b9a:	test   rbx,rbx
   140018b9d:	je     0x140018be0
   140018b9f:	mov    al,BYTE PTR [rbx+0xf8]
   140018ba5:	mov    rdx,QWORD PTR [rcx+0x38]
   140018ba9:	mov    r8d,DWORD PTR [rcx+0x40]
   140018bad:	test   al,al
   140018baf:	jne    0x140018be0
   140018bb1:	mov    rcx,QWORD PTR [rbx+0x8]
   140018bb5:	call   0x14001b670
   140018bba:	mov    eax,DWORD PTR [rbx+0xe8]
   140018bc0:	cmp    eax,0xa
   140018bc3:	jle    0x140018be0
   140018bc5:	mov    edx,DWORD PTR [rbx+0xe8]
   140018bcb:	mov    eax,DWORD PTR [rbx+0xec]
   140018bd1:	add    edx,0xfffffff6
   140018bd4:	cmp    eax,edx
   140018bd6:	jge    0x140018be0
   140018bd8:	mov    rcx,rbx
   140018bdb:	call   0x14001916c
   140018be0:	add    rsp,0x20
   140018be4:	pop    rbx
   140018be5:	ret    
   140018be6:	int3   
   140018be7:	int3   
   140018be8:	int3   
   140018be9:	int3   
   140018bea:	int3   
   140018beb:	int3   
   140018bec:	mov    QWORD PTR [rsp+0x10],rdx
   140018bf1:	push   rbp
   140018bf2:	push   rbx
   140018bf3:	push   rsi
   140018bf4:	push   rdi
   140018bf5:	push   r12
   140018bf7:	push   r14
   140018bf9:	push   r15
   140018bfb:	mov    rbp,rsp
   140018bfe:	sub    rsp,0x30
   140018c02:	mov    rbx,rcx
   140018c05:	mov    r9,r8
   140018c08:	add    rcx,0xc8
   140018c0f:	xor    edi,edi
   140018c11:	call   0x140029ab0
   140018c16:	mov    r15d,eax
   140018c19:	test   eax,eax
   140018c1b:	js     0x140018c23
   140018c1d:	mov    rdi,rcx
   140018c20:	xor    r15d,r15d
   140018c23:	test   r15d,r15d
   140018c26:	js     0x140018cdf
   140018c2c:	and    QWORD PTR [rbp+0x58],0x0
   140018c31:	lea    r8,[rbp+0x48]
   140018c35:	mov    DWORD PTR [rbp+0x40],r9d
   140018c39:	lea    rdx,[rbp-0x10]
   140018c3d:	lea    r9,[rbp+0x40]
   140018c41:	mov    QWORD PTR [rbp-0x10],rbx
   140018c45:	lea    rcx,[rbp+0x58]
   140018c49:	call   0x14001a5b4
   140018c4e:	mov    r15d,eax
   140018c51:	test   eax,eax
   140018c53:	js     0x140018c9b
   140018c55:	mov    rcx,QWORD PTR [rbp+0x58]
   140018c59:	mov    r12,QWORD PTR [rbx+0x80]
   140018c60:	mov    eax,DWORD PTR [rcx+0x8]
   140018c63:	test   eax,eax
   140018c65:	jne    0x140018c70
   140018c67:	mov    DWORD PTR [rcx+0x8],0x1
   140018c6e:	jmp    0x140018c74
   140018c70:	lock inc DWORD PTR [rcx+0x8]
   140018c74:	mov    rax,QWORD PTR [r12]
   140018c78:	mov    rbx,QWORD PTR [rbp+0x58]
   140018c7c:	mov    r14,QWORD PTR [rax+0x18]
   140018c80:	mov    rcx,r14
   140018c83:	call   QWORD PTR [rip+0x19a1f]        # 0x1400326a8
   140018c89:	mov    r8d,0x5
   140018c8f:	lea    rdx,[rbx+0x10]
   140018c93:	mov    rcx,r12
   140018c96:	call   r14
   140018c99:	jmp    0x140018c9f
   140018c9b:	mov    rbx,QWORD PTR [rbp+0x58]
   140018c9f:	test   rbx,rbx
   140018ca2:	je     0x140018cdf
   140018ca4:	mov    eax,DWORD PTR [rbx+0x8]
   140018ca7:	cmp    eax,0x1
   140018caa:	jne    0x140018cb5
   140018cac:	mov    DWORD PTR [rbx+0x8],0x0
   140018cb3:	jmp    0x140018cc2
   140018cb5:	or     eax,0xffffffff
   140018cb8:	lock xadd DWORD PTR [rbx+0x8],eax
   140018cbd:	sub    eax,0x1
   140018cc0:	jg     0x140018cdf
   140018cc2:	mov    rbx,QWORD PTR [rbp+0x58]
   140018cc6:	mov    rax,QWORD PTR [rbx]
   140018cc9:	mov    rsi,QWORD PTR [rax]
   140018ccc:	mov    rcx,rsi
   140018ccf:	call   QWORD PTR [rip+0x199d3]        # 0x1400326a8
   140018cd5:	mov    edx,0x1
   140018cda:	mov    rcx,rbx
   140018cdd:	call   rsi
   140018cdf:	test   rdi,rdi
   140018ce2:	je     0x140018cfe
   140018ce4:	or     ecx,0xffffffff
   140018ce7:	lock xadd DWORD PTR [rdi+0x8],ecx
   140018cec:	dec    ecx
   140018cee:	cmp    ecx,0x80000000
   140018cf4:	jne    0x140018cfe
   140018cf6:	mov    rcx,rdi
   140018cf9:	call   0x140029c90
   140018cfe:	mov    eax,r15d
   140018d01:	add    rsp,0x30
   140018d05:	pop    r15
   140018d07:	pop    r14
   140018d09:	pop    r12
   140018d0b:	pop    rdi
   140018d0c:	pop    rsi
   140018d0d:	pop    rbx
   140018d0e:	pop    rbp
   140018d0f:	ret    
   140018d10:	int3   
   140018d11:	int3   
   140018d12:	int3   
   140018d13:	int3   
   140018d14:	int3   
   140018d15:	int3   
   140018d16:	int3   
   140018d17:	int3   
   140018d18:	int3   
   140018d19:	int3   
   140018d1a:	int3   
   140018d1b:	int3   
   140018d1c:	int3   
   140018d1d:	int3   
   140018d1e:	int3   
   140018d1f:	int3   
   140018d20:	mov    QWORD PTR [rsp+0x8],rbx
   140018d25:	mov    QWORD PTR [rsp+0x10],rbp
   140018d2a:	mov    QWORD PTR [rsp+0x18],rsi
   140018d2f:	push   rdi
   140018d30:	sub    rsp,0x20
   140018d34:	mov    rdi,QWORD PTR [rcx+0x10]
   140018d38:	lea    rax,[rip+0x1bb99]        # 0x1400348d8
   140018d3f:	mov    QWORD PTR [rcx],rax
   140018d42:	mov    rsi,rcx
   140018d45:	mov    ebp,edx
   140018d47:	mov    rax,QWORD PTR [rdi]
   140018d4a:	mov    rbx,QWORD PTR [rax+0x40]
   140018d4e:	mov    rcx,rbx
   140018d51:	call   QWORD PTR [rip+0x19951]        # 0x1400326a8
   140018d57:	mov    rcx,rdi
   140018d5a:	call   rbx
   140018d5c:	xor    edi,edi
   140018d5e:	cmp    QWORD PTR [rsi+0x20],rdi
   140018d62:	jbe    0x140018d8e
   140018d64:	mov    rbx,QWORD PTR [rsi+0x18]
   140018d68:	or     edx,0xffffffff
   140018d6b:	mov    rbx,QWORD PTR [rbx+rdi*8]
   140018d6f:	mov    rcx,rbx
   140018d72:	call   0x14002a178
   140018d77:	test   rbx,rbx
   140018d7a:	je     0x140018d85
   140018d7c:	mov    rcx,rbx
   140018d7f:	call   QWORD PTR [rip+0x193d3]        # 0x140032158
   140018d85:	inc    rdi
   140018d88:	cmp    rdi,QWORD PTR [rsi+0x20]
   140018d8c:	jb     0x140018d64
   140018d8e:	mov    rcx,QWORD PTR [rsi+0x18]
   140018d92:	test   rcx,rcx
   140018d95:	je     0x140018d9d
   140018d97:	call   QWORD PTR [rip+0x1982b]        # 0x1400325c8
   140018d9d:	lea    rax,[rip+0x1bb04]        # 0x1400348a8
   140018da4:	mov    QWORD PTR [rsi],rax
   140018da7:	test   bpl,0x1
   140018dab:	je     0x140018db6
   140018dad:	mov    rcx,rsi
   140018db0:	call   QWORD PTR [rip+0x19812]        # 0x1400325c8
   140018db6:	mov    rbx,QWORD PTR [rsp+0x30]
   140018dbb:	mov    rax,rsi
   140018dbe:	mov    rsi,QWORD PTR [rsp+0x40]
   140018dc3:	mov    rbp,QWORD PTR [rsp+0x38]
   140018dc8:	add    rsp,0x20
   140018dcc:	pop    rdi
   140018dcd:	ret    
   140018dce:	int3   
   140018dcf:	int3   
   140018dd0:	int3   
   140018dd1:	int3   
   140018dd2:	int3   
   140018dd3:	int3   
   140018dd4:	int3   
   140018dd5:	int3   
   140018dd6:	int3   
   140018dd7:	int3   
   140018dd8:	int3   
   140018dd9:	int3   
   140018dda:	int3   
   140018ddb:	int3   
   140018ddc:	int3   
   140018ddd:	int3   
   140018dde:	int3   
   140018ddf:	int3   
   140018de0:	mov    QWORD PTR [rsp+0x8],rbx
   140018de5:	push   rdi
   140018de6:	sub    rsp,0x20
   140018dea:	mov    rdi,QWORD PTR [rcx+0x10]
   140018dee:	mov    rax,QWORD PTR [rdi]
   140018df1:	mov    rbx,QWORD PTR [rax+0x38]
   140018df5:	mov    rcx,rbx
   140018df8:	call   QWORD PTR [rip+0x198aa]        # 0x1400326a8
   140018dfe:	or     r8d,0xffffffff
   140018e02:	xor    edx,edx
   140018e04:	mov    rcx,rdi
   140018e07:	call   rbx
   140018e09:	mov    rbx,QWORD PTR [rsp+0x30]
   140018e0e:	xor    eax,eax
   140018e10:	add    rsp,0x20
   140018e14:	pop    rdi
   140018e15:	ret    
   140018e16:	int3   
   140018e17:	int3   
   140018e18:	int3   
   140018e19:	int3   
   140018e1a:	int3   
   140018e1b:	int3   
   140018e1c:	mov    QWORD PTR [rsp+0x8],rbx
   140018e21:	mov    QWORD PTR [rsp+0x10],rbp
   140018e26:	mov    QWORD PTR [rsp+0x18],rsi
   140018e2b:	push   rdi
   140018e2c:	push   r14
   140018e2e:	push   r15
   140018e30:	sub    rsp,0x30
   140018e34:	xor    esi,esi
   140018e36:	mov    r14d,edx
   140018e39:	mov    rdi,rcx
   140018e3c:	cmp    BYTE PTR [rcx+0x74],sil
   140018e40:	jne    0x140018e7b
   140018e42:	mov    rcx,QWORD PTR [rip+0x3222f]        # 0x14004b078
   140018e49:	lea    rbp,[rip+0x32228]        # 0x14004b078
   140018e50:	cmp    rcx,rbp
   140018e53:	je     0x14001914d
   140018e59:	test   BYTE PTR [rcx+0x1c],0x10
   140018e5d:	je     0x14001914d
   140018e63:	lea    edx,[rsi+0x16]
   140018e66:	mov    rcx,QWORD PTR [rcx+0x10]
   140018e6a:	lea    r8,[rip+0x1ef77]        # 0x140037de8
   140018e71:	call   0x140001f08
   140018e76:	jmp    0x14001914d
   140018e7b:	mov    ebx,DWORD PTR [rcx+0xec]
   140018e81:	mov    edx,ebx
   140018e83:	mov    ecx,0x11f
   140018e88:	call   QWORD PTR [rip+0x19552]        # 0x1400323e0
   140018e8e:	mov    eax,ebx
   140018e90:	mov    edx,esi
   140018e92:	sub    eax,r14d
   140018e95:	mov    ecx,0x11e
   140018e9a:	cmp    ebx,r14d
   140018e9d:	cmovge edx,eax
   140018ea0:	call   QWORD PTR [rip+0x1953a]        # 0x1400323e0
   140018ea6:	mov    al,BYTE PTR [rdi+0xf9]
   140018eac:	lea    rbp,[rip+0x321c5]        # 0x14004b078
   140018eb3:	or     ebx,0xffffffff
   140018eb6:	mov    r15d,0x1
   140018ebc:	test   al,al
   140018ebe:	jne    0x140018efa
   140018ec0:	mov    eax,ebx
   140018ec2:	lock xadd DWORD PTR [rdi+0xf0],eax
   140018eca:	add    eax,ebx
   140018ecc:	jne    0x140018efa
   140018ece:	mov    rcx,QWORD PTR [rip+0x321a3]        # 0x14004b078
   140018ed5:	cmp    rcx,rbp
   140018ed8:	je     0x140018ef3
   140018eda:	test   BYTE PTR [rcx+0x1c],0x2
   140018ede:	je     0x140018ef3
   140018ee0:	mov    rcx,QWORD PTR [rcx+0x10]
   140018ee4:	lea    edx,[rbx+0x18]
   140018ee7:	lea    r8,[rip+0x1eefa]        # 0x140037de8
   140018eee:	call   0x140001f08
   140018ef3:	mov    BYTE PTR [rdi+0xf9],r15b
   140018efa:	mov    al,BYTE PTR [rdi+0xfa]
   140018f00:	test   al,al
   140018f02:	jne    0x140018f3e
   140018f04:	mov    eax,ebx
   140018f06:	lock xadd DWORD PTR [rdi+0xf4],eax
   140018f0e:	add    eax,ebx
   140018f10:	jne    0x140018f3e
   140018f12:	mov    rcx,QWORD PTR [rip+0x3215f]        # 0x14004b078
   140018f19:	cmp    rcx,rbp
   140018f1c:	je     0x140018f37
   140018f1e:	test   BYTE PTR [rcx+0x1c],0x2
   140018f22:	je     0x140018f37
   140018f24:	mov    rcx,QWORD PTR [rcx+0x10]
   140018f28:	lea    edx,[rax+0x18]
   140018f2b:	lea    r8,[rip+0x1eeb6]        # 0x140037de8
   140018f32:	call   0x140001f08
   140018f37:	mov    BYTE PTR [rdi+0xfa],r15b
   140018f3e:	mov    rax,QWORD PTR [rip+0x32133]        # 0x14004b078
   140018f45:	cmp    rax,rbp
   140018f48:	je     0x140018f79
   140018f4a:	test   BYTE PTR [rax+0x1c],0x10
   140018f4e:	je     0x140018f79
   140018f50:	movzx  edx,BYTE PTR [rdi+0xfa]
   140018f57:	mov    r9d,r14d
   140018f5a:	movzx  eax,BYTE PTR [rdi+0xf9]
   140018f61:	mov    rcx,QWORD PTR [rip+0x32110]        # 0x14004b078
   140018f68:	mov    DWORD PTR [rsp+0x28],edx
   140018f6c:	mov    DWORD PTR [rsp+0x20],eax
   140018f70:	mov    rcx,QWORD PTR [rcx+0x10]
   140018f74:	call   0x140017b10
   140018f79:	mov    al,BYTE PTR [rdi+0xf9]
   140018f7f:	test   al,al
   140018f81:	jne    0x140018f91
   140018f83:	mov    al,BYTE PTR [rdi+0xfa]
   140018f89:	test   al,al
   140018f8b:	je     0x14001914d
   140018f91:	xor    eax,eax
   140018f93:	lock cmpxchg DWORD PTR [rip+0x37278],r15d        # 0x140050214
   140018f9c:	cmp    eax,r15d
   140018f9f:	jne    0x140018fc5
   140018fa1:	mov    rcx,QWORD PTR [rip+0x320d0]        # 0x14004b078
   140018fa8:	cmp    rcx,rbp
   140018fab:	je     0x14001914d
   140018fb1:	test   BYTE PTR [rcx+0x1c],0x2
   140018fb5:	je     0x14001914d
   140018fbb:	mov    edx,0x1a
   140018fc0:	jmp    0x140018e66
   140018fc5:	mov    ebx,DWORD PTR [rdi+0xe8]
   140018fcb:	mov    eax,0x51eb851f
   140018fd0:	mov    ecx,DWORD PTR [rdi+0x5c]
   140018fd3:	mov    r15d,ebx
   140018fd6:	imul   ecx,ebx
   140018fd9:	imul   ecx
   140018fdb:	mov    ecx,edx
   140018fdd:	sar    ecx,0x5
   140018fe0:	mov    eax,ecx
   140018fe2:	shr    eax,0x1f
   140018fe5:	add    ecx,eax
   140018fe7:	cmp    r14d,DWORD PTR [rdi+0x58]
   140018feb:	jge    0x140019093
   140018ff1:	cmp    ebx,DWORD PTR [rdi+0x60]
   140018ff4:	jge    0x140019093
   140018ffa:	mov    al,BYTE PTR [rdi+0xf9]
   140019000:	test   al,al
   140019002:	je     0x140019067
   140019004:	mov    ecx,DWORD PTR [rdi+0x6c]
   140019007:	mov    eax,0x66666667
   14001900c:	imul   ecx,ebx
   14001900f:	imul   ecx
   140019011:	mov    ebx,edx
   140019013:	sar    ebx,0x2
   140019016:	mov    eax,ebx
   140019018:	shr    eax,0x1f
   14001901b:	add    ebx,eax
   14001901d:	cmp    DWORD PTR [rdi+0x60],ebx
   140019020:	cmovl  ebx,DWORD PTR [rdi+0x60]
   140019024:	mov    rcx,QWORD PTR [rip+0x3204d]        # 0x14004b078
   14001902b:	cmp    rcx,rbp
   14001902e:	je     0x140019052
   140019030:	test   BYTE PTR [rcx+0x1c],0x2
   140019034:	je     0x140019052
   140019036:	mov    eax,DWORD PTR [rdi+0x58]
   140019039:	mov    edx,0x1b
   14001903e:	mov    rcx,QWORD PTR [rcx+0x10]
   140019042:	mov    r9d,r14d
   140019045:	mov    DWORD PTR [rsp+0x28],ebx
   140019049:	mov    DWORD PTR [rsp+0x20],eax
   14001904d:	call   0x140017bc0
   140019052:	mov    eax,DWORD PTR [rdi+0x64]
   140019055:	mov    BYTE PTR [rdi+0xf9],sil
   14001905c:	xchg   DWORD PTR [rdi+0xf0],eax
   140019062:	jmp    0x140019114
   140019067:	mov    rcx,QWORD PTR [rip+0x3200a]        # 0x14004b078
   14001906e:	cmp    rcx,rbp
   140019071:	je     0x140019147
   140019077:	test   BYTE PTR [rcx+0x1c],0x4
   14001907b:	je     0x140019147
   140019081:	mov    eax,DWORD PTR [rdi+0x58]
   140019084:	mov    edx,0x1c
   140019089:	mov    rcx,QWORD PTR [rcx+0x10]
   14001908d:	mov    DWORD PTR [rsp+0x20],eax
   140019091:	jmp    0x14001910c
   140019093:	cmp    r14d,ecx
   140019096:	jle    0x140019147
   14001909c:	mov    al,BYTE PTR [rdi+0xfa]
   1400190a2:	test   al,al
   1400190a4:	je     0x1400190ed
   1400190a6:	sub    ebx,DWORD PTR [rdi+0x70]
   1400190a9:	cmp    DWORD PTR [rdi+0x54],ebx
   1400190ac:	cmovg  ebx,DWORD PTR [rdi+0x54]
   1400190b0:	mov    rax,QWORD PTR [rip+0x31fc1]        # 0x14004b078
   1400190b7:	cmp    rax,rbp
   1400190ba:	je     0x1400190db
   1400190bc:	test   BYTE PTR [rax+0x1c],0x2
   1400190c0:	je     0x1400190db
   1400190c2:	mov    DWORD PTR [rsp+0x28],ebx
   1400190c6:	mov    edx,0x1d
   1400190cb:	mov    DWORD PTR [rsp+0x20],ecx
   1400190cf:	mov    r9d,r14d
   1400190d2:	mov    rcx,QWORD PTR [rax+0x10]
   1400190d6:	call   0x140017bc0
   1400190db:	mov    eax,DWORD PTR [rdi+0x68]
   1400190de:	mov    BYTE PTR [rdi+0xfa],sil
   1400190e5:	xchg   DWORD PTR [rdi+0xf4],eax
   1400190eb:	jmp    0x140019114
   1400190ed:	mov    rax,QWORD PTR [rip+0x31f84]        # 0x14004b078
   1400190f4:	cmp    rax,rbp
   1400190f7:	je     0x140019147
   1400190f9:	test   BYTE PTR [rax+0x1c],0x4
   1400190fd:	je     0x140019147
   1400190ff:	mov    DWORD PTR [rsp+0x20],ecx
   140019103:	mov    edx,0x1e
   140019108:	mov    rcx,QWORD PTR [rax+0x10]
   14001910c:	mov    r9d,r14d
   14001910f:	call   0x140017b70
   140019114:	cmp    ebx,r15d
   140019117:	je     0x140019147
   140019119:	cmp    ebx,DWORD PTR [rdi+0x54]
   14001911c:	mov    rcx,rdi
   14001911f:	cmovl  ebx,DWORD PTR [rdi+0x54]
   140019123:	cmp    ebx,DWORD PTR [rdi+0x60]
   140019126:	cmovg  ebx,DWORD PTR [rdi+0x60]
   14001912a:	mov    DWORD PTR [rdi+0x1c],ebx
   14001912d:	call   0x140019738
   140019132:	mov    eax,ebx
   140019134:	xchg   DWORD PTR [rdi+0xe8],eax
   14001913a:	cmp    ebx,r15d
   14001913d:	jle    0x140019147
   14001913f:	mov    rcx,rdi
   140019142:	call   0x14001916c
   140019147:	xchg   DWORD PTR [rip+0x370c7],esi        # 0x140050214
   14001914d:	mov    rbx,QWORD PTR [rsp+0x50]
   140019152:	mov    rbp,QWORD PTR [rsp+0x58]
   140019157:	mov    rsi,QWORD PTR [rsp+0x60]
   14001915c:	add    rsp,0x30
   140019160:	pop    r15
   140019162:	pop    r14
   140019164:	pop    rdi
   140019165:	ret    
   140019166:	int3   
   140019167:	int3   
   140019168:	int3   
   140019169:	int3   
   14001916a:	int3   
   14001916b:	int3   
   14001916c:	mov    QWORD PTR [rsp+0x8],rbx
   140019171:	push   rbp
   140019172:	push   rsi
   140019173:	push   rdi
   140019174:	push   r12
   140019176:	push   r13
   140019178:	push   r14
   14001917a:	push   r15
   14001917c:	mov    rbp,rsp
   14001917f:	sub    rsp,0x40
   140019183:	xor    esi,esi
   140019185:	mov    r13,rcx
   140019188:	mov    r12d,esi
   14001918b:	xor    eax,eax
   14001918d:	lea    edi,[rsi+0x1]
   140019190:	lock cmpxchg DWORD PTR [rip+0x37078],edi        # 0x140050210
   140019198:	cmp    eax,edi
   14001919a:	jne    0x1400191cf
   14001919c:	mov    rcx,QWORD PTR [rip+0x31ed5]        # 0x14004b078
   1400191a3:	lea    r14,[rip+0x31ece]        # 0x14004b078
   1400191aa:	cmp    rcx,r14
   1400191ad:	je     0x1400191c8
   1400191af:	test   BYTE PTR [rcx+0x1c],0x2
   1400191b3:	je     0x1400191c8
   1400191b5:	mov    rcx,QWORD PTR [rcx+0x10]
   1400191b9:	lea    edx,[rsi+0x1f]
   1400191bc:	lea    r8,[rip+0x1ec25]        # 0x140037de8
   1400191c3:	call   0x140001f08
   1400191c8:	xor    eax,eax
   1400191ca:	jmp    0x1400194de
   1400191cf:	mov    eax,DWORD PTR [rcx+0xec]
   1400191d5:	mov    r15d,DWORD PTR [rcx+0xe8]
   1400191dc:	cmp    eax,r15d
   1400191df:	jl     0x14001921d
   1400191e1:	mov    rcx,QWORD PTR [rip+0x31e90]        # 0x14004b078
   1400191e8:	lea    r14,[rip+0x31e89]        # 0x14004b078
   1400191ef:	cmp    rcx,r14
   1400191f2:	je     0x1400194d5
   1400191f8:	test   BYTE PTR [rcx+0x1c],0x2
   1400191fc:	je     0x1400194d5
   140019202:	mov    rcx,QWORD PTR [rcx+0x10]
   140019206:	mov    edx,0x20
   14001920b:	mov    r9d,eax
   14001920e:	mov    DWORD PTR [rsp+0x20],r15d
   140019213:	call   0x140017b70
   140019218:	jmp    0x1400194d5
   14001921d:	sub    r15d,eax
   140019220:	mov    DWORD PTR [rbp+0x50],esi
   140019223:	mov    eax,r15d
   140019226:	mov    DWORD PTR [rbp+0x48],esi
   140019229:	cdq    
   14001922a:	sub    eax,edx
   14001922c:	sar    eax,1
   14001922e:	mov    DWORD PTR [rbp+0x58],eax
   140019231:	mov    rcx,QWORD PTR [rip+0x31e40]        # 0x14004b078
   140019238:	lea    r14,[rip+0x31e39]        # 0x14004b078
   14001923f:	cmp    rcx,r14
   140019242:	je     0x140019262
   140019244:	test   BYTE PTR [rcx+0x1c],0x2
   140019248:	je     0x140019262
   14001924a:	mov    rcx,QWORD PTR [rcx+0x10]
   14001924e:	mov    edx,0x21
   140019253:	mov    r9d,r15d
   140019256:	call   0x140017a70
   14001925b:	mov    rcx,QWORD PTR [rip+0x31e16]        # 0x14004b078
   140019262:	test   r15d,r15d
   140019265:	jle    0x1400194b5
   14001926b:	mov    rbx,rsi
   14001926e:	mov    QWORD PTR [rbp-0x8],rsi
   140019272:	lea    rcx,[rbp-0x8]
   140019276:	mov    QWORD PTR [rbp-0x10],rbx
   14001927a:	call   0x14001a7e8
   14001927f:	mov    r12d,eax
   140019282:	test   eax,eax
   140019284:	jns    0x1400192cf
   140019286:	mov    rax,QWORD PTR [rbp-0x8]
   14001928a:	test   rax,rax
   14001928d:	je     0x140019316
   140019293:	mov    ecx,DWORD PTR [rax+0x8]
   140019296:	cmp    ecx,edi
   140019298:	jne    0x14001929f
   14001929a:	mov    DWORD PTR [rax+0x8],esi
   14001929d:	jmp    0x1400192ac
   14001929f:	or     ecx,0xffffffff
   1400192a2:	lock xadd DWORD PTR [rax+0x8],ecx
   1400192a7:	sub    ecx,0x1
   1400192aa:	jg     0x1400192c9
   1400192ac:	mov    rbx,QWORD PTR [rbp-0x8]
   1400192b0:	mov    rax,QWORD PTR [rbx]
   1400192b3:	mov    rdi,QWORD PTR [rax]
   1400192b6:	mov    rcx,rdi
   1400192b9:	call   QWORD PTR [rip+0x193e9]        # 0x1400326a8
   1400192bf:	mov    edx,0x1
   1400192c4:	mov    rcx,rbx
   1400192c7:	call   rdi
   1400192c9:	mov    rbx,QWORD PTR [rbp-0x10]
   1400192cd:	jmp    0x140019316
   1400192cf:	mov    rdi,QWORD PTR [rbp-0x8]
   1400192d3:	mov    r12d,DWORD PTR [r13+0x18]
   1400192d7:	mov    rcx,QWORD PTR [rdi+0x50]
   1400192db:	test   rcx,rcx
   1400192de:	je     0x1400192ea
   1400192e0:	call   QWORD PTR [rip+0x192e2]        # 0x1400325c8
   1400192e6:	mov    QWORD PTR [rdi+0x50],rsi
   1400192ea:	mov    rcx,r12
   1400192ed:	call   QWORD PTR [rip+0x192dd]        # 0x1400325d0
   1400192f3:	mov    QWORD PTR [rdi+0x50],rax
   1400192f7:	test   rax,rax
   1400192fa:	je     0x140019393
   140019300:	mov    rbx,rdi
   140019303:	mov    QWORD PTR [rdi+0x58],r12
   140019307:	mov    QWORD PTR [rbp-0x10],rbx
   14001930b:	mov    r12d,esi
   14001930e:	mov    QWORD PTR [rdi+0x48],r13
   140019312:	mov    QWORD PTR [rbp-0x8],rsi
   140019316:	test   r12d,r12d
   140019319:	js     0x1400193d9
   14001931f:	mov    rcx,rbx
   140019322:	call   0x140017f40
   140019327:	mov    r12d,eax
   14001932a:	test   eax,eax
   14001932c:	jns    0x140019355
   14001932e:	mov    rcx,QWORD PTR [rip+0x31d43]        # 0x14004b078
   140019335:	cmp    rcx,r14
   140019338:	je     0x14001940a
   14001933e:	test   BYTE PTR [rcx+0x1c],0x1
   140019342:	je     0x14001940a
   140019348:	mov    edx,0x23
   14001934d:	mov    r9d,eax
   140019350:	jmp    0x1400193f3
   140019355:	mov    edi,0x1
   14001935a:	lock add DWORD PTR [r13+0xec],edi
   140019362:	mov    rax,QWORD PTR [rbp-0x10]
   140019366:	sub    r15d,edi
   140019369:	mov    DWORD PTR [rbp+0x48],esi
   14001936c:	test   rax,rax
   14001936f:	je     0x1400194a5
   140019375:	mov    ecx,DWORD PTR [rax+0x8]
   140019378:	cmp    ecx,edi
   14001937a:	jne    0x140019384
   14001937c:	mov    DWORD PTR [rax+0x8],esi
   14001937f:	jmp    0x140019483
   140019384:	or     ecx,0xffffffff
   140019387:	lock xadd DWORD PTR [rax+0x8],ecx
   14001938c:	sub    ecx,edi
   14001938e:	jmp    0x140019481
   140019393:	test   rdi,rdi
   140019396:	je     0x1400193d3
   140019398:	mov    eax,DWORD PTR [rdi+0x8]
   14001939b:	cmp    eax,0x1
   14001939e:	jne    0x1400193a5
   1400193a0:	mov    DWORD PTR [rdi+0x8],esi
   1400193a3:	jmp    0x1400193b2
   1400193a5:	or     eax,0xffffffff
   1400193a8:	lock xadd DWORD PTR [rdi+0x8],eax
   1400193ad:	sub    eax,0x1
   1400193b0:	jg     0x1400193cf
   1400193b2:	mov    rbx,QWORD PTR [rbp-0x8]
   1400193b6:	mov    rax,QWORD PTR [rbx]
   1400193b9:	mov    rdi,QWORD PTR [rax]
   1400193bc:	mov    rcx,rdi
   1400193bf:	call   QWORD PTR [rip+0x192e3]        # 0x1400326a8
   1400193c5:	mov    edx,0x1
   1400193ca:	mov    rcx,rbx
   1400193cd:	call   rdi
   1400193cf:	mov    rbx,QWORD PTR [rbp-0x10]
   1400193d3:	mov    r12d,0x8007000e
   1400193d9:	mov    rcx,QWORD PTR [rip+0x31c98]        # 0x14004b078
   1400193e0:	cmp    rcx,r14
   1400193e3:	je     0x14001940a
   1400193e5:	test   BYTE PTR [rcx+0x1c],0x1
   1400193e9:	je     0x14001940a
   1400193eb:	mov    edx,0x22
   1400193f0:	mov    r9d,r12d
   1400193f3:	mov    rcx,QWORD PTR [rcx+0x10]
   1400193f7:	lea    r8,[rip+0x1e9ea]        # 0x140037de8
   1400193fe:	call   0x140001f70
   140019403:	mov    rcx,QWORD PTR [rip+0x31c6e]        # 0x14004b078
   14001940a:	mov    edi,DWORD PTR [rbp+0x48]
   14001940d:	mov    eax,DWORD PTR [rbp+0x50]
   140019410:	inc    edi
   140019412:	inc    eax
   140019414:	mov    DWORD PTR [rbp+0x48],edi
   140019417:	mov    DWORD PTR [rbp+0x50],eax
   14001941a:	cmp    rcx,r14
   14001941d:	je     0x140019444
   14001941f:	test   BYTE PTR [rcx+0x1c],0x1
   140019423:	je     0x140019444
   140019425:	mov    rcx,QWORD PTR [rcx+0x10]
   140019429:	mov    edx,0x24
   14001942e:	mov    r9d,eax
   140019431:	mov    DWORD PTR [rsp+0x20],edi
   140019435:	call   0x140017b70
   14001943a:	mov    rcx,QWORD PTR [rip+0x31c37]        # 0x14004b078
   140019441:	mov    eax,DWORD PTR [rbp+0x50]
   140019444:	cmp    edi,0xa
   140019447:	jg     0x140019508
   14001944d:	cmp    eax,DWORD PTR [rbp+0x58]
   140019450:	jge    0x1400194f6
   140019456:	mov    ecx,0xa
   14001945b:	call   QWORD PTR [rip+0x18cff]        # 0x140032160
   140019461:	test   rbx,rbx
   140019464:	je     0x1400194a0
   140019466:	mov    eax,DWORD PTR [rbx+0x8]
   140019469:	mov    edi,0x1
   14001946e:	cmp    eax,edi
   140019470:	jne    0x140019477
   140019472:	mov    DWORD PTR [rbx+0x8],esi
   140019475:	jmp    0x140019483
   140019477:	or     eax,0xffffffff
   14001947a:	lock xadd DWORD PTR [rbx+0x8],eax
   14001947f:	sub    eax,edi
   140019481:	jg     0x1400194a5
   140019483:	mov    rbx,QWORD PTR [rbp-0x10]
   140019487:	mov    rax,QWORD PTR [rbx]
   14001948a:	mov    rdi,QWORD PTR [rax]
   14001948d:	mov    rcx,rdi
   140019490:	call   QWORD PTR [rip+0x19212]        # 0x1400326a8
   140019496:	mov    edx,0x1
   14001949b:	mov    rcx,rbx
   14001949e:	call   rdi
   1400194a0:	mov    edi,0x1
   1400194a5:	test   r15d,r15d
   1400194a8:	jg     0x14001926b
   1400194ae:	mov    rcx,QWORD PTR [rip+0x31bc3]        # 0x14004b078
   1400194b5:	cmp    rcx,r14
   1400194b8:	je     0x1400194d5
   1400194ba:	test   BYTE PTR [rcx+0x1c],0x2
   1400194be:	je     0x1400194d5
   1400194c0:	mov    rcx,QWORD PTR [rcx+0x10]
   1400194c4:	lea    r8,[rip+0x1e91d]        # 0x140037de8
   1400194cb:	mov    edx,0x27
   1400194d0:	call   0x140001f08
   1400194d5:	xchg   DWORD PTR [rip+0x36d35],esi        # 0x140050210
   1400194db:	mov    eax,r12d
   1400194de:	mov    rbx,QWORD PTR [rsp+0x80]
   1400194e6:	add    rsp,0x40
   1400194ea:	pop    r15
   1400194ec:	pop    r14
   1400194ee:	pop    r13
   1400194f0:	pop    r12
   1400194f2:	pop    rdi
   1400194f3:	pop    rsi
   1400194f4:	pop    rbp
   1400194f5:	ret    
   1400194f6:	cmp    rcx,r14
   1400194f9:	je     0x140019524
   1400194fb:	test   BYTE PTR [rcx+0x1c],0x1
   1400194ff:	je     0x140019524
   140019501:	mov    edx,0x26
   140019506:	jmp    0x140019518
   140019508:	cmp    rcx,r14
   14001950b:	je     0x140019524
   14001950d:	test   BYTE PTR [rcx+0x1c],0x1
   140019511:	je     0x140019524
   140019513:	mov    edx,0x25
   140019518:	mov    rcx,QWORD PTR [rcx+0x10]
   14001951c:	mov    r9d,r15d
   14001951f:	call   0x140017a70
   140019524:	test   rbx,rbx
   140019527:	je     0x1400194d5
   140019529:	mov    eax,DWORD PTR [rbx+0x8]
   14001952c:	cmp    eax,0x1
   14001952f:	jne    0x140019536
   140019531:	mov    DWORD PTR [rbx+0x8],esi
   140019534:	jmp    0x140019543
   140019536:	or     eax,0xffffffff
   140019539:	lock xadd DWORD PTR [rbx+0x8],eax
   14001953e:	sub    eax,0x1
   140019541:	jg     0x1400194d5
   140019543:	mov    rbx,QWORD PTR [rbp-0x10]
   140019547:	mov    rax,QWORD PTR [rbx]
   14001954a:	mov    rdi,QWORD PTR [rax]
   14001954d:	mov    rcx,rdi
   140019550:	call   QWORD PTR [rip+0x19152]        # 0x1400326a8
   140019556:	mov    edx,0x1
   14001955b:	mov    rcx,rbx
   14001955e:	call   rdi
   140019560:	jmp    0x1400194d5
   140019565:	int3   
   140019566:	int3   
   140019567:	int3   
   140019568:	int3   
   140019569:	int3   
   14001956a:	int3   
   14001956b:	int3   
   14001956c:	rex push rbp
   14001956e:	push   rbx
   14001956f:	push   rsi
   140019570:	push   rdi
   140019571:	push   r14
   140019573:	mov    rbp,rsp
   140019576:	sub    rsp,0x20
   14001957a:	xor    edx,edx
   14001957c:	lea    rdi,[rcx+0x18]
   140019580:	mov    rsi,rcx
   140019583:	mov    rcx,rdi
   140019586:	lea    r8d,[rdx+0x3c]
   14001958a:	call   0x14002e2ce
   14001958f:	xor    r14d,r14d
   140019592:	mov    DWORD PTR [rsi+0x2c],0xc350
   140019599:	mov    eax,0x80
   14001959e:	mov    DWORD PTR [rsi+0x40],r14d
   1400195a2:	mov    QWORD PTR [rsi+0x20],rax
   1400195a6:	mov    DWORD PTR [rsi+0x7c],eax
   1400195a9:	mov    QWORD PTR [rsi+0x30],0x2710
   1400195b1:	mov    DWORD PTR [rdi],0x800
   1400195b7:	mov    DWORD PTR [rsi+0x1c],r14d
   1400195bb:	mov    DWORD PTR [rsi+0x78],r14d
   1400195bf:	mov    DWORD PTR [rsi+0x28],r14d
   1400195c3:	mov    QWORD PTR [rbp+0x40],r14
   1400195c7:	mov    DWORD PTR [rbp+0x30],r14d
   1400195cb:	call   0x140025fe8
   1400195d0:	mov    r8,rax
   1400195d3:	lea    rcx,[rbp+0x40]
   1400195d7:	call   0x14002b2ac
   1400195dc:	mov    rbx,QWORD PTR [rbp+0x40]
   1400195e0:	test   eax,eax
   1400195e2:	jns    0x140019621
   1400195e4:	mov    rcx,QWORD PTR [rip+0x31a8d]        # 0x14004b078
   1400195eb:	lea    rdx,[rip+0x31a86]        # 0x14004b078
   1400195f2:	cmp    rcx,rdx
   1400195f5:	je     0x140019717
   1400195fb:	test   BYTE PTR [rcx+0x1c],0x2
   1400195ff:	je     0x140019717
   140019605:	mov    rcx,QWORD PTR [rcx+0x10]
   140019609:	lea    edx,[r14+0x28]
   14001960d:	mov    r9d,eax
   140019610:	lea    r8,[rip+0x1e7d1]        # 0x140037de8
   140019617:	call   0x140001f70
   14001961c:	jmp    0x140019717
   140019621:	lea    r8,[rbp+0x30]
   140019625:	mov    rcx,rbx
   140019628:	lea    rdx,[rip+0x1e869]        # 0x140037e98
   14001962f:	call   0x14002b5f0
   140019634:	test   eax,eax
   140019636:	js     0x140019641
   140019638:	mov    eax,DWORD PTR [rbp+0x30]
   14001963b:	test   eax,eax
   14001963d:	je     0x140019641
   14001963f:	mov    DWORD PTR [rdi],eax
   140019641:	lea    r8,[rbp+0x30]
   140019645:	mov    rcx,rbx
   140019648:	lea    rdx,[rip+0x1e859]        # 0x140037ea8
   14001964f:	call   0x14002b5f0
   140019654:	test   eax,eax
   140019656:	js     0x140019665
   140019658:	mov    eax,DWORD PTR [rbp+0x30]
   14001965b:	test   eax,eax
   14001965d:	je     0x140019665
   14001965f:	mov    DWORD PTR [rsi+0x1c],eax
   140019662:	mov    DWORD PTR [rsi+0x78],eax
   140019665:	lea    r8,[rbp+0x30]
   140019669:	mov    rcx,rbx
   14001966c:	lea    rdx,[rip+0x1e84d]        # 0x140037ec0
   140019673:	call   0x14002b5f0
   140019678:	mov    ecx,DWORD PTR [rbp+0x30]
   14001967b:	test   eax,eax
   14001967d:	jns    0x140019683
   14001967f:	test   ecx,ecx
   140019681:	je     0x140019689
   140019683:	mov    DWORD PTR [rsi+0x20],ecx
   140019686:	mov    DWORD PTR [rsi+0x7c],ecx
   140019689:	mov    DWORD PTR [rbp+0x38],r14d
   14001968d:	call   QWORD PTR [rip+0x18dbd]        # 0x140032450
   140019693:	mov    rdi,QWORD PTR [rax+0x98]
   14001969a:	mov    rcx,rdi
   14001969d:	call   QWORD PTR [rip+0x19005]        # 0x1400326a8
   1400196a3:	lea    rcx,[rbp+0x38]
   1400196a7:	call   rdi
   1400196a9:	test   eax,eax
   1400196ab:	js     0x1400196b3
   1400196ad:	mov    eax,DWORD PTR [rbp+0x38]
   1400196b0:	mov    DWORD PTR [rsi+0x40],eax
   1400196b3:	lea    r8,[rbp+0x40]
   1400196b7:	mov    DWORD PTR [rbp+0x40],r14d
   1400196bb:	lea    rdx,[rip+0x1e816]        # 0x140037ed8
   1400196c2:	mov    rcx,rbx
   1400196c5:	mov    edi,r14d
   1400196c8:	call   0x14002b5f0
   1400196cd:	test   eax,eax
   1400196cf:	js     0x1400196de
   1400196d1:	cmp    DWORD PTR [rbp+0x40],r14d
   1400196d5:	mov    eax,r14d
   1400196d8:	setne  dil
   1400196dc:	test   eax,eax
   1400196de:	cmovs  edi,r14d
   1400196e2:	mov    DWORD PTR [rbp+0x40],r14d
   1400196e6:	mov    DWORD PTR [rsi+0x24],edi
   1400196e9:	lea    r8,[rbp+0x40]
   1400196ed:	lea    rdx,[rip+0x1e804]        # 0x140037ef8
   1400196f4:	mov    rcx,rbx
   1400196f7:	mov    edi,r14d
   1400196fa:	call   0x14002b5f0
   1400196ff:	test   eax,eax
   140019701:	js     0x140019710
   140019703:	cmp    DWORD PTR [rbp+0x40],r14d
   140019707:	mov    eax,r14d
   14001970a:	setne  dil
   14001970e:	test   eax,eax
   140019710:	cmovs  edi,r14d
   140019714:	mov    DWORD PTR [rsi+0x28],edi
   140019717:	test   rbx,rbx
   14001971a:	je     0x140019725
   14001971c:	mov    rcx,rbx
   14001971f:	call   QWORD PTR [rip+0x18913]        # 0x140032038
   140019725:	add    rsp,0x20
   140019729:	pop    r14
   14001972b:	pop    rdi
   14001972c:	pop    rsi
   14001972d:	pop    rbx
   14001972e:	pop    rbp
   14001972f:	ret    
   140019730:	int3   
   140019731:	int3   
   140019732:	int3   
   140019733:	int3   
   140019734:	int3   
   140019735:	int3   
   140019736:	int3   
   140019737:	int3   
   140019738:	sub    rsp,0x48
   14001973c:	and    QWORD PTR [rsp+0x30],0x0
   140019742:	lea    r8,[rcx+0x18]
   140019746:	and    QWORD PTR [rsp+0x28],0x0
   14001974c:	mov    edx,0x1280d3
   140019751:	and    QWORD PTR [rsp+0x20],0x0
   140019757:	mov    r9d,0x3c
   14001975d:	call   0x140018118
   140019762:	test   eax,eax
   140019764:	jns    0x140019797
   140019766:	mov    rcx,QWORD PTR [rip+0x3190b]        # 0x14004b078
   14001976d:	lea    rdx,[rip+0x31904]        # 0x14004b078
   140019774:	cmp    rcx,rdx
   140019777:	je     0x140019797
   140019779:	test   BYTE PTR [rcx+0x1c],0x1
   14001977d:	je     0x140019797
   14001977f:	mov    rcx,QWORD PTR [rcx+0x10]
   140019783:	lea    r8,[rip+0x1e65e]        # 0x140037de8
   14001978a:	mov    edx,0x29
   14001978f:	mov    r9d,eax
   140019792:	call   0x140001f70
   140019797:	add    rsp,0x48
   14001979b:	ret    
   14001979c:	int3   
   14001979d:	int3   
   14001979e:	int3   
   14001979f:	int3   
   1400197a0:	int3   
   1400197a1:	int3   
   1400197a2:	int3   
   1400197a3:	int3   
   1400197a4:	mov    QWORD PTR [rsp+0x8],rbx
   1400197a9:	mov    QWORD PTR [rsp+0x10],rbp
   1400197ae:	mov    QWORD PTR [rsp+0x18],rsi
   1400197b3:	push   rdi
   1400197b4:	push   r12
   1400197b6:	push   r13
   1400197b8:	push   r14
   1400197ba:	push   r15
   1400197bc:	sub    rsp,0x60
   1400197c0:	mov    eax,DWORD PTR [rsp+0xb0]
   1400197c7:	lea    r15,[rip+0x318aa]        # 0x14004b078
   1400197ce:	mov    edi,DWORD PTR [rsp+0xe0]
   1400197d5:	mov    esi,0x1f40
   1400197da:	mov    DWORD PTR [rcx+0x48],eax
   1400197dd:	mov    rbx,rcx
   1400197e0:	mov    eax,DWORD PTR [rsp+0xb8]
   1400197e7:	mov    bpl,0x2
   1400197ea:	mov    DWORD PTR [rcx+0x4c],eax
   1400197ed:	mov    eax,DWORD PTR [rsp+0xc0]
   1400197f4:	movzx  r12d,dl
   1400197f8:	movzx  r13d,r8b
   1400197fc:	mov    DWORD PTR [rcx+0x50],eax
   1400197ff:	mov    DWORD PTR [rcx+0x38],r12d
   140019803:	mov    DWORD PTR [rcx+0x3c],r13d
   140019807:	mov    DWORD PTR [rcx+0x44],r9d
   14001980b:	cmp    edi,esi
   14001980d:	jle    0x14001982f
   14001980f:	mov    rcx,QWORD PTR [rip+0x31862]        # 0x14004b078
   140019816:	cmp    rcx,r15
   140019819:	je     0x14001982d
   14001981b:	test   BYTE PTR [rcx+0x1c],bpl
   14001981f:	je     0x14001982d
   140019821:	mov    rcx,QWORD PTR [rcx+0x10]
   140019825:	mov    r9d,edi
   140019828:	call   0x140017ab4
   14001982d:	mov    edi,esi
   14001982f:	xor    edx,edx
   140019831:	lea    r14,[rbx+0x54]
   140019835:	mov    rcx,r14
   140019838:	lea    r8d,[rdx+0x24]
   14001983c:	call   0x14002e2ce
   140019841:	mov    esi,DWORD PTR [rsp+0xc8]
   140019848:	test   esi,esi
   14001984a:	setg   al
   14001984d:	mov    BYTE PTR [rbx+0x74],al
   140019850:	test   al,al
   140019852:	je     0x14001990e
   140019858:	mov    eax,DWORD PTR [rsp+0xd0]
   14001985f:	lea    r9d,[rsi+rsi*2]
   140019863:	mov    edx,DWORD PTR [rsp+0xd8]
   14001986a:	mov    ebp,DWORD PTR [rsp+0xe8]
   140019871:	mov    r15d,DWORD PTR [rsp+0xf0]
   140019879:	mov    r8d,DWORD PTR [rsp+0xf8]
   140019881:	mov    DWORD PTR [r14],r9d
   140019884:	mov    DWORD PTR [rbx+0x58],eax
   140019887:	mov    DWORD PTR [rbx+0x5c],edx
   14001988a:	mov    DWORD PTR [rbx+0x60],edi
   14001988d:	mov    DWORD PTR [rbx+0x64],ebp
   140019890:	mov    DWORD PTR [rbx+0x68],r15d
   140019894:	mov    DWORD PTR [rbx+0x6c],r8d
   140019898:	mov    DWORD PTR [rbx+0x70],esi
   14001989b:	mov    rcx,QWORD PTR [rip+0x317d6]        # 0x14004b078
   1400198a2:	lea    r10,[rip+0x317cf]        # 0x14004b078
   1400198a9:	cmp    rcx,r10
   1400198ac:	je     0x1400198db
   1400198ae:	test   BYTE PTR [rcx+0x1c],0x2
   1400198b2:	je     0x1400198db
   1400198b4:	mov    rcx,QWORD PTR [rcx+0x10]
   1400198b8:	mov    DWORD PTR [rsp+0x50],esi
   1400198bc:	mov    DWORD PTR [rsp+0x48],r8d
   1400198c1:	mov    DWORD PTR [rsp+0x40],r15d
   1400198c6:	mov    DWORD PTR [rsp+0x38],ebp
   1400198ca:	mov    DWORD PTR [rsp+0x30],edi
   1400198ce:	mov    DWORD PTR [rsp+0x28],edx
   1400198d2:	mov    DWORD PTR [rsp+0x20],eax
   1400198d6:	call   0x140017c1c
   1400198db:	xchg   DWORD PTR [rbx+0xf0],ebp
   1400198e1:	xchg   DWORD PTR [rbx+0xf4],r15d
   1400198e8:	xor    eax,eax
   1400198ea:	lock xadd DWORD PTR [rbx+0xe8],eax
   1400198f2:	mov    ecx,DWORD PTR [r14]
   1400198f5:	lea    r15,[rip+0x3177c]        # 0x14004b078
   1400198fc:	cmp    eax,ecx
   1400198fe:	mov    DWORD PTR [rbx+0x20],esi
   140019901:	mov    bpl,0x2
   140019904:	cmovg  ecx,eax
   140019907:	cmp    ecx,edi
   140019909:	cmovl  edi,ecx
   14001990c:	jmp    0x14001993e
   14001990e:	mov    rcx,QWORD PTR [rip+0x31763]        # 0x14004b078
   140019915:	cmp    rcx,r15
   140019918:	je     0x140019935
   14001991a:	test   BYTE PTR [rcx+0x1c],bpl
   14001991e:	je     0x140019935
   140019920:	mov    rcx,QWORD PTR [rcx+0x10]
   140019924:	lea    r8,[rip+0x1e4bd]        # 0x140037de8
   14001992b:	mov    edx,0x2c
   140019930:	call   0x140001f08
   140019935:	mov    eax,DWORD PTR [rbx+0x7c]
   140019938:	mov    DWORD PTR [rbx+0x20],eax
   14001993b:	mov    DWORD PTR [rbx+0x60],edi
   14001993e:	mov    DWORD PTR [rbx+0x1c],edi
   140019941:	test   edi,edi
   140019943:	je     0x14001994d
   140019945:	cmp    edi,0x800000
   14001994b:	jle    0x140019985
   14001994d:	mov    rcx,QWORD PTR [rip+0x31724]        # 0x14004b078
   140019954:	mov    esi,0x2000
   140019959:	cmp    rcx,r15
   14001995c:	je     0x140019980
   14001995e:	test   BYTE PTR [rcx+0x1c],bpl
   140019962:	je     0x140019980
   140019964:	mov    rcx,QWORD PTR [rcx+0x10]
   140019968:	lea    r8,[rip+0x1e479]        # 0x140037de8
   14001996f:	mov    edx,0x2d
   140019974:	mov    DWORD PTR [rsp+0x20],esi
   140019978:	mov    r9d,edi
   14001997b:	call   0x140015b2c
   140019980:	mov    edi,esi
   140019982:	mov    DWORD PTR [rbx+0x60],esi
   140019985:	mov    rcx,QWORD PTR [rip+0x316ec]        # 0x14004b078
   14001998c:	cmp    rcx,r15
   14001998f:	je     0x1400199a8
   140019991:	test   BYTE PTR [rcx+0x1c],bpl
   140019995:	je     0x1400199a8
   140019997:	mov    rcx,QWORD PTR [rcx+0x10]
   14001999b:	mov    edx,0x2e
   1400199a0:	mov    r9d,edi
   1400199a3:	call   0x140017a70
   1400199a8:	xchg   DWORD PTR [rbx+0xe8],edi
   1400199ae:	cmp    QWORD PTR [rbx+0x98],0xffffffffffffffff
   1400199b6:	mov    rcx,rbx
   1400199b9:	je     0x1400199ca
   1400199bb:	call   0x14001916c
   1400199c0:	mov    rcx,rbx
   1400199c3:	call   0x140019738
   1400199c8:	jmp    0x1400199d7
   1400199ca:	call   0x140018604
   1400199cf:	mov    rcx,rbx
   1400199d2:	call   0x140018990
   1400199d7:	mov    rcx,QWORD PTR [rip+0x3169a]        # 0x14004b078
   1400199de:	cmp    rcx,r15
   1400199e1:	je     0x140019a24
   1400199e3:	test   BYTE PTR [rcx+0x1c],bpl
   1400199e7:	je     0x140019a24
   1400199e9:	mov    eax,DWORD PTR [rbx+0x20]
   1400199ec:	mov    r9d,r12d
   1400199ef:	mov    rcx,QWORD PTR [rcx+0x10]
   1400199f3:	mov    DWORD PTR [rsp+0x50],eax
   1400199f7:	mov    eax,DWORD PTR [rbx+0x1c]
   1400199fa:	mov    DWORD PTR [rsp+0x48],eax
   1400199fe:	mov    eax,DWORD PTR [rbx+0x50]
   140019a01:	mov    DWORD PTR [rsp+0x40],eax
   140019a05:	mov    eax,DWORD PTR [rbx+0x4c]
   140019a08:	mov    DWORD PTR [rsp+0x38],eax
   140019a0c:	mov    eax,DWORD PTR [rbx+0x48]
   140019a0f:	mov    DWORD PTR [rsp+0x30],eax
   140019a13:	mov    eax,DWORD PTR [rbx+0x44]
   140019a16:	mov    DWORD PTR [rsp+0x28],eax
   140019a1a:	mov    DWORD PTR [rsp+0x20],r13d
   140019a1f:	call   0x1400179cc
   140019a24:	lea    r11,[rsp+0x60]
   140019a29:	mov    rbx,QWORD PTR [r11+0x30]
   140019a2d:	mov    rbp,QWORD PTR [r11+0x38]
   140019a31:	mov    rsi,QWORD PTR [r11+0x40]
   140019a35:	mov    rsp,r11
   140019a38:	pop    r15
   140019a3a:	pop    r14
   140019a3c:	pop    r13
   140019a3e:	pop    r12
   140019a40:	pop    rdi
   140019a41:	ret    
   140019a42:	int3   
   140019a43:	int3   
   140019a44:	int3   
   140019a45:	int3   
   140019a46:	int3   
   140019a47:	int3   
   140019a48:	mov    rax,rsp
   140019a4b:	push   rsi
   140019a4c:	push   rdi
   140019a4d:	push   r13
   140019a4f:	push   r14
   140019a51:	push   r15
   140019a53:	sub    rsp,0x50
   140019a57:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   140019a5f:	mov    QWORD PTR [rax+0x8],rbx
   140019a63:	mov    QWORD PTR [rax+0x10],rbp
   140019a67:	mov    r15,r9
   140019a6a:	mov    rsi,r8
   140019a6d:	mov    rbp,rdx
   140019a70:	mov    r14,rcx
   140019a73:	and    QWORD PTR [rax-0x30],0x0
   140019a78:	and    QWORD PTR [rax+0x18],0x0
   140019a7d:	mov    r10,QWORD PTR [r8+0x8]
   140019a81:	sub    r10,QWORD PTR [r8]
   140019a84:	sar    r10,1
   140019a87:	mov    eax,0x4
   140019a8c:	mul    r10
   140019a8f:	test   rdx,rdx
   140019a92:	je     0x140019a9f
   140019a94:	mov    ecx,0x80070216
   140019a99:	call   0x140029d64
   140019a9e:	int3   
   140019a9f:	lea    rdi,[rax+0x14]
   140019aa3:	cmp    rdi,rax
   140019aa6:	jb     0x140019cee
   140019aac:	mov    rcx,rdi
   140019aaf:	call   QWORD PTR [rip+0x18b1b]        # 0x1400325d0
   140019ab5:	mov    rbx,rax
   140019ab8:	mov    QWORD PTR [rsp+0x90],rax
   140019ac0:	test   rax,rax
   140019ac3:	jne    0x140019ad0
   140019ac5:	mov    ecx,0x8007000e
   140019aca:	call   0x140029d64
   140019acf:	int3   
   140019ad0:	lea    r13,[rip+0x315a1]        # 0x14004b078
   140019ad7:	mov    rcx,QWORD PTR [rip+0x3159a]        # 0x14004b078
   140019ade:	cmp    rcx,r13
   140019ae1:	je     0x140019afe
   140019ae3:	test   BYTE PTR [rcx+0x1c],0x4
   140019ae7:	je     0x140019afe
   140019ae9:	mov    edx,0x30
   140019aee:	lea    r8,[rip+0x1e2f3]        # 0x140037de8
   140019af5:	mov    rcx,QWORD PTR [rcx+0x10]
   140019af9:	call   0x140001f08
   140019afe:	mov    r9,rdi
   140019b01:	mov    r8,rbx
   140019b04:	mov    rdx,rsi
   140019b07:	call   0x140019d18
   140019b0c:	and    QWORD PTR [rsp+0x30],0x0
   140019b12:	and    QWORD PTR [rsp+0x28],0x0
   140019b18:	and    QWORD PTR [rsp+0x20],0x0
   140019b1e:	mov    r9,rdi
   140019b21:	mov    r8,rbx
   140019b24:	mov    edx,0x1280df
   140019b29:	mov    rcx,r14
   140019b2c:	call   0x140018118
   140019b31:	mov    sil,0x1
   140019b34:	test   eax,eax
   140019b36:	jns    0x140019b62
   140019b38:	mov    rcx,QWORD PTR [rip+0x31539]        # 0x14004b078
   140019b3f:	cmp    rcx,r13
   140019b42:	je     0x140019b62
   140019b44:	test   BYTE PTR [rcx+0x1c],sil
   140019b48:	je     0x140019b62
   140019b4a:	mov    edx,0x31
   140019b4f:	mov    r9d,eax
   140019b52:	lea    r8,[rip+0x1e28f]        # 0x140037de8
   140019b59:	mov    rcx,QWORD PTR [rcx+0x10]
   140019b5d:	call   0x140001f70
   140019b62:	mov    rdx,rbp
   140019b65:	call   0x140019f0c
   140019b6a:	mov    rdi,rax
   140019b6d:	mov    rcx,rbx
   140019b70:	call   QWORD PTR [rip+0x18a52]        # 0x1400325c8
   140019b76:	mov    rcx,rdi
   140019b79:	call   QWORD PTR [rip+0x18a51]        # 0x1400325d0
   140019b7f:	mov    rbx,rax
   140019b82:	mov    QWORD PTR [rsp+0x90],rax
   140019b8a:	test   rax,rax
   140019b8d:	jne    0x140019b9a
   140019b8f:	mov    ecx,0x8007000e
   140019b94:	call   0x140029d64
   140019b99:	int3   
   140019b9a:	mov    rcx,QWORD PTR [rip+0x314d7]        # 0x14004b078
   140019ba1:	cmp    rcx,r13
   140019ba4:	je     0x140019bc1
   140019ba6:	test   BYTE PTR [rcx+0x1c],0x4
   140019baa:	je     0x140019bc1
   140019bac:	mov    edx,0x32
   140019bb1:	lea    r8,[rip+0x1e230]        # 0x140037de8
   140019bb8:	mov    rcx,QWORD PTR [rcx+0x10]
   140019bbc:	call   0x140001f08
   140019bc1:	mov    r9,rdi
   140019bc4:	mov    r8,rbx
   140019bc7:	mov    rdx,rbp
   140019bca:	call   0x140019f80
   140019bcf:	and    QWORD PTR [rsp+0x30],0x0
   140019bd5:	and    QWORD PTR [rsp+0x28],0x0
   140019bdb:	and    QWORD PTR [rsp+0x20],0x0
   140019be1:	mov    r9,rdi
   140019be4:	mov    r8,rbx
   140019be7:	mov    edx,0x1280e3
   140019bec:	mov    rcx,r14
   140019bef:	call   0x140018118
   140019bf4:	test   eax,eax
   140019bf6:	jns    0x140019c22
   140019bf8:	mov    rcx,QWORD PTR [rip+0x31479]        # 0x14004b078
   140019bff:	cmp    rcx,r13
   140019c02:	je     0x140019c22
   140019c04:	test   BYTE PTR [rcx+0x1c],sil
   140019c08:	je     0x140019c22
   140019c0a:	mov    edx,0x33
   140019c0f:	mov    r9d,eax
   140019c12:	lea    r8,[rip+0x1e1cf]        # 0x140037de8
   140019c19:	mov    rcx,QWORD PTR [rcx+0x10]
   140019c1d:	call   0x140001f70
   140019c22:	mov    rdx,r15
   140019c25:	call   0x140019f0c
   140019c2a:	mov    rdi,rax
   140019c2d:	mov    rcx,rbx
   140019c30:	call   QWORD PTR [rip+0x18992]        # 0x1400325c8
   140019c36:	mov    rcx,rdi
   140019c39:	call   QWORD PTR [rip+0x18991]        # 0x1400325d0
   140019c3f:	mov    rbx,rax
   140019c42:	mov    QWORD PTR [rsp+0x90],rax
   140019c4a:	test   rax,rax
   140019c4d:	jne    0x140019c5a
   140019c4f:	mov    ecx,0x8007000e
   140019c54:	call   0x140029d64
   140019c59:	int3   
   140019c5a:	mov    rcx,QWORD PTR [rip+0x31417]        # 0x14004b078
   140019c61:	cmp    rcx,r13
   140019c64:	je     0x140019c81
   140019c66:	test   BYTE PTR [rcx+0x1c],0x4
   140019c6a:	je     0x140019c81
   140019c6c:	mov    edx,0x34
   140019c71:	lea    r8,[rip+0x1e170]        # 0x140037de8
   140019c78:	mov    rcx,QWORD PTR [rcx+0x10]
   140019c7c:	call   0x140001f08
   140019c81:	mov    r9,rdi
   140019c84:	mov    r8,rbx
   140019c87:	mov    rdx,r15
   140019c8a:	call   0x140019f80
   140019c8f:	and    QWORD PTR [rsp+0x30],0x0
   140019c95:	and    QWORD PTR [rsp+0x28],0x0
   140019c9b:	and    QWORD PTR [rsp+0x20],0x0
   140019ca1:	mov    r9,rdi
   140019ca4:	mov    r8,rbx
   140019ca7:	mov    edx,0x1280e7
   140019cac:	mov    rcx,r14
   140019caf:	call   0x140018118
   140019cb4:	test   eax,eax
   140019cb6:	jns    0x140019ce3
   140019cb8:	mov    rcx,QWORD PTR [rip+0x313b9]        # 0x14004b078
   140019cbf:	cmp    rcx,r13
   140019cc2:	je     0x140019ce3
   140019cc4:	test   BYTE PTR [rcx+0x1c],sil
   140019cc8:	je     0x140019ce3
   140019cca:	mov    edx,0x35
   140019ccf:	mov    r9d,eax
   140019cd2:	lea    r8,[rip+0x1e10f]        # 0x140037de8
   140019cd9:	mov    rcx,QWORD PTR [rcx+0x10]
   140019cdd:	call   0x140001f70
   140019ce2:	nop
   140019ce3:	mov    rcx,rbx
   140019ce6:	call   QWORD PTR [rip+0x188dc]        # 0x1400325c8
   140019cec:	jmp    0x140019cf9
   140019cee:	mov    ecx,0x80070216
   140019cf3:	call   0x140029d64
   140019cf8:	nop
   140019cf9:	lea    r11,[rsp+0x50]
   140019cfe:	mov    rbx,QWORD PTR [r11+0x30]
   140019d02:	mov    rbp,QWORD PTR [r11+0x38]
   140019d06:	mov    rsp,r11
   140019d09:	pop    r15
   140019d0b:	pop    r14
   140019d0d:	pop    r13
   140019d0f:	pop    rdi
   140019d10:	pop    rsi
   140019d11:	ret    
   140019d12:	int3   
   140019d13:	int3   
   140019d14:	int3   
   140019d15:	int3   
   140019d16:	int3   
   140019d17:	int3   
   140019d18:	mov    rax,rsp
   140019d1b:	mov    QWORD PTR [rax+0x8],rbx
   140019d1f:	mov    QWORD PTR [rax+0x10],rbp
   140019d23:	mov    QWORD PTR [rax+0x18],rsi
   140019d27:	mov    QWORD PTR [rax+0x20],rdi
   140019d2b:	push   r14
   140019d2d:	sub    rsp,0x30
   140019d31:	xor    ebp,ebp
   140019d33:	mov    rbx,r9
   140019d36:	mov    r14,r8
   140019d39:	mov    rsi,rdx
   140019d3c:	test   r8,r8
   140019d3f:	je     0x140019e60
   140019d45:	mov    al,BYTE PTR [rdx+0x8]
   140019d48:	sub    al,BYTE PTR [rdx]
   140019d4a:	test   al,0x2
   140019d4c:	jne    0x140019e60
   140019d52:	mov    r8,rbx
   140019d55:	xor    edx,edx
   140019d57:	mov    rcx,r14
   140019d5a:	call   0x14002e2ce
   140019d5f:	mov    rcx,QWORD PTR [rsi+0x8]
   140019d63:	lea    eax,[rbp+0x4]
   140019d66:	sub    rcx,QWORD PTR [rsi]
   140019d69:	sar    rcx,1
   140019d6c:	shr    rcx,1
   140019d6f:	mul    rcx
   140019d72:	mov    QWORD PTR [r14+0x8],rcx
   140019d76:	mov    rcx,rax
   140019d79:	test   rdx,rdx
   140019d7c:	jne    0x140019ecd
   140019d82:	mov    QWORD PTR [r14],rax
   140019d85:	cmp    rbx,0x14
   140019d89:	jae    0x140019db1
   140019d8b:	mov    rcx,QWORD PTR [rip+0x312e6]        # 0x14004b078
   140019d92:	lea    rdi,[rip+0x312df]        # 0x14004b078
   140019d99:	cmp    rcx,rdi
   140019d9c:	je     0x140019e9b
   140019da2:	test   BYTE PTR [rcx+0x1c],0x1
   140019da6:	je     0x140019e9b
   140019dac:	jmp    0x140019e7f
   140019db1:	lea    rax,[rbx-0x14]
   140019db5:	cmp    rax,rcx
   140019db8:	jae    0x140019de0
   140019dba:	mov    rcx,QWORD PTR [rip+0x312b7]        # 0x14004b078
   140019dc1:	lea    rdi,[rip+0x312b0]        # 0x14004b078
   140019dc8:	cmp    rcx,rdi
   140019dcb:	je     0x140019ec2
   140019dd1:	test   BYTE PTR [rcx+0x1c],0x1
   140019dd5:	je     0x140019ec2
   140019ddb:	jmp    0x140019ea6
   140019de0:	mov    rbx,QWORD PTR [rsi]
   140019de3:	cmp    rbx,QWORD PTR [rsi+0x8]
   140019de7:	je     0x140019e45
   140019de9:	lea    rdi,[rip+0x31288]        # 0x14004b078
   140019df0:	movzx  edx,WORD PTR [rbx]
   140019df3:	mov    eax,ebp
   140019df5:	mov    WORD PTR [r14+rax*4+0x10],dx
   140019dfb:	movzx  r8d,WORD PTR [rbx+0x2]
   140019e00:	mov    WORD PTR [r14+rax*4+0x12],r8w
   140019e06:	mov    rcx,QWORD PTR [rip+0x3126b]        # 0x14004b078
   140019e0d:	cmp    rcx,rdi
   140019e10:	je     0x140019e39
   140019e12:	test   BYTE PTR [rcx+0x1c],0x4
   140019e16:	je     0x140019e39
   140019e18:	mov    rcx,QWORD PTR [rcx+0x10]
   140019e1c:	movzx  eax,r8w
   140019e20:	lea    r8,[rip+0x1dfc1]        # 0x140037de8
   140019e27:	movzx  r9d,dx
   140019e2b:	mov    edx,0x36
   140019e30:	mov    DWORD PTR [rsp+0x20],eax
   140019e34:	call   0x140015b2c
   140019e39:	add    rbx,0x4
   140019e3d:	inc    ebp
   140019e3f:	cmp    rbx,QWORD PTR [rsi+0x8]
   140019e43:	jne    0x140019df0
   140019e45:	mov    rbx,QWORD PTR [rsp+0x40]
   140019e4a:	mov    rbp,QWORD PTR [rsp+0x48]
   140019e4f:	mov    rsi,QWORD PTR [rsp+0x50]
   140019e54:	mov    rdi,QWORD PTR [rsp+0x58]
   140019e59:	add    rsp,0x30
   140019e5d:	pop    r14
   140019e5f:	ret    
   140019e60:	mov    rcx,QWORD PTR [rip+0x31211]        # 0x14004b078
   140019e67:	lea    rdi,[rip+0x3120a]        # 0x14004b078
   140019e6e:	cmp    rcx,rdi
   140019e71:	je     0x140019ef8
   140019e77:	test   BYTE PTR [rcx+0x1c],0x1
   140019e7b:	je     0x140019ef8
   140019e7d:	jmp    0x140019edc
   140019e7f:	mov    rcx,QWORD PTR [rcx+0x10]
   140019e83:	lea    r9,[rip+0x1e0e6]        # 0x140037f70
   140019e8a:	mov    edx,0xa
   140019e8f:	lea    r8,[rip+0x1a53a]        # 0x1400343d0
   140019e96:	call   0x1400038e0
   140019e9b:	mov    ecx,0x80070057
   140019ea0:	call   0x140029d64
   140019ea5:	int3   
   140019ea6:	mov    rcx,QWORD PTR [rcx+0x10]
   140019eaa:	lea    r9,[rip+0x1e11f]        # 0x140037fd0
   140019eb1:	mov    edx,0xa
   140019eb6:	lea    r8,[rip+0x1a513]        # 0x1400343d0
   140019ebd:	call   0x1400038e0
   140019ec2:	mov    ecx,0x80070057
   140019ec7:	call   0x140029d64
   140019ecc:	int3   
   140019ecd:	or     QWORD PTR [r14],0xffffffffffffffff
   140019ed1:	mov    ecx,0x80070216
   140019ed6:	call   0x140029d64
   140019edb:	int3   
   140019edc:	mov    rcx,QWORD PTR [rcx+0x10]
   140019ee0:	lea    r9,[rip+0x1e039]        # 0x140037f20
   140019ee7:	mov    edx,0xa
   140019eec:	lea    r8,[rip+0x1a4dd]        # 0x1400343d0
   140019ef3:	call   0x1400038e0
   140019ef8:	mov    ecx,0x80070057
   140019efd:	call   0x140029d64
   140019f02:	int3   
   140019f03:	int3   
   140019f04:	int3   
   140019f05:	int3   
   140019f06:	int3   
   140019f07:	int3   
   140019f08:	int3   
   140019f09:	int3   
   140019f0a:	int3   
   140019f0b:	int3   
   140019f0c:	sub    rsp,0x28
   140019f10:	mov    r9,QWORD PTR [rdx+0x8]
   140019f14:	mov    rax,QWORD PTR [rdx]
   140019f17:	mov    rdx,r9
   140019f1a:	sub    rdx,rax
   140019f1d:	sar    rdx,0x5
   140019f21:	cmp    rax,r9
   140019f24:	je     0x140019f3b
   140019f26:	mov    r8,QWORD PTR [rax+0x10]
   140019f2a:	add    r8,rdx
   140019f2d:	cmp    r8,rdx
   140019f30:	jb     0x140019f59
   140019f32:	mov    rdx,r8
   140019f35:	add    rax,0x20
   140019f39:	jmp    0x140019f21
   140019f3b:	mov    eax,0x2
   140019f40:	mul    rdx
   140019f43:	mov    rcx,rax
   140019f46:	test   rdx,rdx
   140019f49:	jne    0x140019f64
   140019f4b:	add    rax,0x10
   140019f4f:	cmp    rax,rcx
   140019f52:	jb     0x140019f6f
   140019f54:	add    rsp,0x28
   140019f58:	ret    
   140019f59:	mov    ecx,0x80070216
   140019f5e:	call   0x140029d64
   140019f63:	int3   
   140019f64:	mov    ecx,0x80070216
   140019f69:	call   0x140029d64
   140019f6e:	int3   
   140019f6f:	mov    ecx,0x80070216
   140019f74:	call   0x140029d64
   140019f79:	int3   
   140019f7a:	int3   
   140019f7b:	int3   
   140019f7c:	int3   
   140019f7d:	int3   
   140019f7e:	int3   
   140019f7f:	int3   
   140019f80:	mov    QWORD PTR [rsp+0x10],rbx
   140019f85:	mov    QWORD PTR [rsp+0x8],rcx
   140019f8a:	push   rbp
   140019f8b:	push   rsi
   140019f8c:	push   rdi
   140019f8d:	push   r12
   140019f8f:	push   r13
   140019f91:	push   r14
   140019f93:	push   r15
   140019f95:	sub    rsp,0x20
   140019f99:	xor    edi,edi
   140019f9b:	mov    rbx,r9
   140019f9e:	mov    rsi,r8
   140019fa1:	mov    r14,rdx
   140019fa4:	test   r8,r8
   140019fa7:	je     0x14001a11e
   140019fad:	cmp    rbx,0x10
   140019fb1:	jb     0x14001a11e
   140019fb7:	mov    r8,rbx
   140019fba:	xor    edx,edx
   140019fbc:	mov    rcx,rsi
   140019fbf:	call   0x14002e2ce
   140019fc4:	lea    r8,[rbx-0x10]
   140019fc8:	mov    ebp,edi
   140019fca:	mov    rbx,QWORD PTR [r14]
   140019fcd:	lea    r10,[rsi+0x10]
   140019fd1:	mov    r13,r8
   140019fd4:	mov    QWORD PTR [rsp+0x70],r8
   140019fd9:	mov    QWORD PTR [rsp+0x60],r10
   140019fde:	cmp    rbx,QWORD PTR [r14+0x8]
   140019fe2:	je     0x14001a0f7
   140019fe8:	mov    rcx,QWORD PTR [rip+0x31089]        # 0x14004b078
   140019fef:	lea    rdi,[rip+0x31082]        # 0x14004b078
   140019ff6:	mov    r15,QWORD PTR [rbx+0x10]
   140019ffa:	lea    rdx,[r15+0x1]
   140019ffe:	cmp    rdx,r15
   14001a001:	jb     0x14001a1a5
   14001a007:	mov    eax,0x2
   14001a00c:	mul    rdx
   14001a00f:	mov    r12,rax
   14001a012:	test   rdx,rdx
   14001a015:	jne    0x14001a19a
   14001a01b:	cmp    r13,rax
   14001a01e:	jb     0x14001a0e2
   14001a024:	lea    rdx,[rax+rbp*1]
   14001a028:	cmp    rdx,rbp
   14001a02b:	jb     0x14001a168
   14001a031:	mov    rbp,rdx
   14001a034:	cmp    rdx,r8
   14001a037:	ja     0x14001a0d1
   14001a03d:	cmp    QWORD PTR [rbx+0x18],0x8
   14001a042:	jb     0x14001a049
   14001a044:	mov    r8,QWORD PTR [rbx]
   14001a047:	jmp    0x14001a04c
   14001a049:	mov    r8,rbx
   14001a04c:	test   r15,r15
   14001a04f:	je     0x14001a066
   14001a051:	lea    rdx,[r15+r15*1]
   14001a055:	mov    rcx,r10
   14001a058:	mov    r9,rdx
   14001a05b:	call   QWORD PTR [rip+0x1855f]        # 0x1400325c0
   14001a061:	mov    r10,QWORD PTR [rsp+0x60]
   14001a066:	lea    rax,[r10+r15*2]
   14001a06a:	xor    ecx,ecx
   14001a06c:	lea    r10,[rax+0x2]
   14001a070:	mov    WORD PTR [rax],cx
   14001a073:	mov    QWORD PTR [rsp+0x60],r10
   14001a078:	sub    r13,r12
   14001a07b:	mov    rcx,QWORD PTR [rip+0x30ff6]        # 0x14004b078
   14001a082:	cmp    rcx,rdi
   14001a085:	je     0x14001a0bd
   14001a087:	test   BYTE PTR [rcx+0x1c],0x4
   14001a08b:	je     0x14001a0bd
   14001a08d:	cmp    QWORD PTR [rbx+0x18],0x8
   14001a092:	jb     0x14001a099
   14001a094:	mov    r9,QWORD PTR [rbx]
   14001a097:	jmp    0x14001a09c
   14001a099:	mov    r9,rbx
   14001a09c:	mov    rcx,QWORD PTR [rcx+0x10]
   14001a0a0:	lea    r8,[rip+0x1dd41]        # 0x140037de8
   14001a0a7:	mov    edx,0x37
   14001a0ac:	call   0x1400071e8
   14001a0b1:	mov    rcx,QWORD PTR [rip+0x30fc0]        # 0x14004b078
   14001a0b8:	mov    r10,QWORD PTR [rsp+0x60]
   14001a0bd:	add    rbx,0x20
   14001a0c1:	cmp    rbx,QWORD PTR [r14+0x8]
   14001a0c5:	je     0x14001a0f7
   14001a0c7:	mov    r8,QWORD PTR [rsp+0x70]
   14001a0cc:	jmp    0x140019ff6
   14001a0d1:	cmp    rcx,rdi
   14001a0d4:	je     0x14001a15d
   14001a0da:	test   BYTE PTR [rcx+0x1c],0x1
   14001a0de:	je     0x14001a15d
   14001a0e0:	jmp    0x14001a141
   14001a0e2:	cmp    rcx,rdi
   14001a0e5:	je     0x14001a18f
   14001a0eb:	test   BYTE PTR [rcx+0x1c],0x1
   14001a0ef:	je     0x14001a18f
   14001a0f5:	jmp    0x14001a173
   14001a0f7:	mov    rbx,QWORD PTR [rsp+0x68]
   14001a0fc:	mov    QWORD PTR [rsi],rbp
   14001a0ff:	mov    rax,QWORD PTR [r14+0x8]
   14001a103:	sub    rax,QWORD PTR [r14]
   14001a106:	sar    rax,0x5
   14001a10a:	mov    QWORD PTR [rsi+0x8],rax
   14001a10e:	add    rsp,0x20
   14001a112:	pop    r15
   14001a114:	pop    r14
   14001a116:	pop    r13
   14001a118:	pop    r12
   14001a11a:	pop    rdi
   14001a11b:	pop    rsi
   14001a11c:	pop    rbp
   14001a11d:	ret    
   14001a11e:	mov    rcx,QWORD PTR [rip+0x30f53]        # 0x14004b078
   14001a125:	lea    rdi,[rip+0x30f4c]        # 0x14004b078
   14001a12c:	cmp    rcx,rdi
   14001a12f:	je     0x14001a1cc
   14001a135:	test   BYTE PTR [rcx+0x1c],0x1
   14001a139:	je     0x14001a1cc
   14001a13f:	jmp    0x14001a1b0
   14001a141:	mov    rcx,QWORD PTR [rcx+0x10]
   14001a145:	lea    r9,[rip+0x1dfb4]        # 0x140038100
   14001a14c:	mov    edx,0xa
   14001a151:	lea    r8,[rip+0x1a278]        # 0x1400343d0
   14001a158:	call   0x1400038e0
   14001a15d:	mov    ecx,0x80070057
   14001a162:	call   0x140029d64
   14001a167:	int3   
   14001a168:	mov    ecx,0x80070216
   14001a16d:	call   0x140029d64
   14001a172:	int3   
   14001a173:	mov    rcx,QWORD PTR [rcx+0x10]
   14001a177:	lea    r9,[rip+0x1df32]        # 0x1400380b0
   14001a17e:	mov    edx,0xa
   14001a183:	lea    r8,[rip+0x1a246]        # 0x1400343d0
   14001a18a:	call   0x1400038e0
   14001a18f:	mov    ecx,0x80070057
   14001a194:	call   0x140029d64
   14001a199:	int3   
   14001a19a:	mov    ecx,0x80070216
   14001a19f:	call   0x140029d64
   14001a1a4:	int3   
   14001a1a5:	mov    ecx,0x80070216
   14001a1aa:	call   0x140029d64
   14001a1af:	int3   
   14001a1b0:	mov    rcx,QWORD PTR [rcx+0x10]
   14001a1b4:	lea    r9,[rip+0x1de85]        # 0x140038040
   14001a1bb:	mov    edx,0xa
   14001a1c0:	lea    r8,[rip+0x1a209]        # 0x1400343d0
   14001a1c7:	call   0x1400038e0
   14001a1cc:	mov    ecx,0x80070057
   14001a1d1:	call   0x140029d64
   14001a1d6:	int3   
   14001a1d7:	int3   
   14001a1d8:	int3   
   14001a1d9:	int3   
   14001a1da:	int3   
   14001a1db:	int3   
   14001a1dc:	int3   
   14001a1dd:	int3   
   14001a1de:	int3   
   14001a1df:	int3   
   14001a1e0:	rex push rbx
   14001a1e2:	sub    rsp,0x40
   14001a1e6:	and    QWORD PTR [rsp+0x30],0x0
   14001a1ec:	mov    r8,rdx
   14001a1ef:	and    QWORD PTR [rsp+0x28],0x0
   14001a1f5:	mov    edx,0x1240cb
   14001a1fa:	and    QWORD PTR [rsp+0x20],0x0
   14001a200:	mov    r9d,0x6c
   14001a206:	call   0x140018118
   14001a20b:	mov    ebx,eax
   14001a20d:	test   eax,eax
   14001a20f:	jns    0x14001a246
   14001a211:	mov    rcx,QWORD PTR [rip+0x30e60]        # 0x14004b078
   14001a218:	lea    rax,[rip+0x30e59]        # 0x14004b078
   14001a21f:	cmp    rcx,rax
   14001a222:	je     0x14001a242
   14001a224:	test   BYTE PTR [rcx+0x1c],0x1
   14001a228:	je     0x14001a242
   14001a22a:	mov    rcx,QWORD PTR [rcx+0x10]
   14001a22e:	lea    r8,[rip+0x1dbb3]        # 0x140037de8
   14001a235:	mov    edx,0x38
   14001a23a:	mov    r9d,ebx
   14001a23d:	call   0x140001f70
   14001a242:	mov    eax,ebx
   14001a244:	jmp    0x14001a248
   14001a246:	xor    eax,eax
   14001a248:	add    rsp,0x40
   14001a24c:	pop    rbx
   14001a24d:	ret    
   14001a24e:	int3   
   14001a24f:	int3   
   14001a250:	int3   
   14001a251:	int3   
   14001a252:	int3   
   14001a253:	int3   
   14001a254:	mov    QWORD PTR [rsp+0x8],rbx
   14001a259:	push   rdi
   14001a25a:	sub    rsp,0x20
   14001a25e:	mov    rbx,QWORD PTR [rcx+0xa0]
   14001a265:	mov    rdi,rdx
   14001a268:	lea    rcx,[rbx+0x10]
   14001a26c:	call   QWORD PTR [rip+0x17e96]        # 0x140032108
   14001a272:	mov    rax,QWORD PTR [rdi+0x18]
   14001a276:	lea    rcx,[rbx+0x10]
   14001a27a:	mov    r8,QWORD PTR [rdi+0x10]
   14001a27e:	mov    QWORD PTR [rax],r8
   14001a281:	mov    QWORD PTR [r8+0x8],rax
   14001a285:	call   QWORD PTR [rip+0x17e6d]        # 0x1400320f8
   14001a28b:	mov    eax,DWORD PTR [rdi+0x8]
   14001a28e:	cmp    eax,0x1
   14001a291:	jne    0x14001a29c
   14001a293:	mov    DWORD PTR [rdi+0x8],0x0
   14001a29a:	jmp    0x14001a2a9
   14001a29c:	or     eax,0xffffffff
   14001a29f:	lock xadd DWORD PTR [rdi+0x8],eax
   14001a2a4:	sub    eax,0x1
   14001a2a7:	jg     0x14001a2c7
   14001a2a9:	test   rdi,rdi
   14001a2ac:	je     0x14001a2c7
   14001a2ae:	mov    rax,QWORD PTR [rdi]
   14001a2b1:	mov    rbx,QWORD PTR [rax]
   14001a2b4:	mov    rcx,rbx
   14001a2b7:	call   QWORD PTR [rip+0x183eb]        # 0x1400326a8
   14001a2bd:	mov    edx,0x1
   14001a2c2:	mov    rcx,rdi
   14001a2c5:	call   rbx
   14001a2c7:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a2cc:	add    rsp,0x20
   14001a2d0:	pop    rdi
   14001a2d1:	ret    
   14001a2d2:	int3   
   14001a2d3:	int3   
   14001a2d4:	int3   
   14001a2d5:	int3   
   14001a2d6:	int3   
   14001a2d7:	int3   
   14001a2d8:	rex push rbx
   14001a2da:	sub    rsp,0x20
   14001a2de:	mov    rbx,rcx
   14001a2e1:	mov    rcx,QWORD PTR [rcx]
   14001a2e4:	test   rcx,rcx
   14001a2e7:	je     0x14001a2f3
   14001a2e9:	call   QWORD PTR [rip+0x17e69]        # 0x140032158
   14001a2ef:	and    QWORD PTR [rbx],0x0
   14001a2f3:	add    rsp,0x20
   14001a2f7:	pop    rbx
   14001a2f8:	ret    
   14001a2f9:	int3   
   14001a2fa:	int3   
   14001a2fb:	int3   
   14001a2fc:	int3   
   14001a2fd:	int3   
   14001a2fe:	int3   
   14001a2ff:	int3   
   14001a300:	mov    QWORD PTR [rsp+0x8],rbx
   14001a305:	push   rdi
   14001a306:	sub    rsp,0x20
   14001a30a:	mov    rdi,QWORD PTR [rcx]
   14001a30d:	test   rdi,rdi
   14001a310:	je     0x14001a33c
   14001a312:	mov    rax,QWORD PTR [rdi]
   14001a315:	mov    rbx,QWORD PTR [rax+0x38]
   14001a319:	mov    rcx,rbx
   14001a31c:	call   QWORD PTR [rip+0x18386]        # 0x1400326a8
   14001a322:	mov    rcx,rdi
   14001a325:	call   rbx
   14001a327:	mov    rax,QWORD PTR [rdi]
   14001a32a:	mov    rbx,QWORD PTR [rax+0x8]
   14001a32e:	mov    rcx,rbx
   14001a331:	call   QWORD PTR [rip+0x18371]        # 0x1400326a8
   14001a337:	mov    rcx,rdi
   14001a33a:	call   rbx
   14001a33c:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a341:	add    rsp,0x20
   14001a345:	pop    rdi
   14001a346:	ret    
   14001a347:	int3   
   14001a348:	int3   
   14001a349:	int3   
   14001a34a:	int3   
   14001a34b:	int3   
   14001a34c:	int3   
   14001a34d:	int3   
   14001a34e:	int3   
   14001a34f:	int3   
   14001a350:	mov    QWORD PTR [rsp+0x8],rbx
   14001a355:	push   rdi
   14001a356:	sub    rsp,0x20
   14001a35a:	mov    rdi,QWORD PTR [rcx]
   14001a35d:	test   rdi,rdi
   14001a360:	je     0x14001a39f
   14001a362:	mov    eax,DWORD PTR [rdi+0x8]
   14001a365:	cmp    eax,0x1
   14001a368:	jne    0x14001a373
   14001a36a:	mov    DWORD PTR [rdi+0x8],0x0
   14001a371:	jmp    0x14001a380
   14001a373:	or     eax,0xffffffff
   14001a376:	lock xadd DWORD PTR [rdi+0x8],eax
   14001a37b:	sub    eax,0x1
   14001a37e:	jg     0x14001a39f
   14001a380:	test   rdi,rdi
   14001a383:	je     0x14001a39f
   14001a385:	mov    rax,QWORD PTR [rdi]
   14001a388:	mov    rbx,QWORD PTR [rax+0x10]
   14001a38c:	mov    rcx,rbx
   14001a38f:	call   QWORD PTR [rip+0x18313]        # 0x1400326a8
   14001a395:	mov    edx,0x1
   14001a39a:	mov    rcx,rdi
   14001a39d:	call   rbx
   14001a39f:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a3a4:	add    rsp,0x20
   14001a3a8:	pop    rdi
   14001a3a9:	ret    
   14001a3aa:	int3   
   14001a3ab:	int3   
   14001a3ac:	int3   
   14001a3ad:	int3   
   14001a3ae:	int3   
   14001a3af:	int3   
   14001a3b0:	mov    QWORD PTR [rsp+0x10],rbx
   14001a3b5:	push   rbp
   14001a3b6:	push   rsi
   14001a3b7:	push   rdi
   14001a3b8:	push   r14
   14001a3ba:	push   r15
   14001a3bc:	sub    rsp,0x30
   14001a3c0:	and    QWORD PTR [rcx],0x0
   14001a3c4:	mov    r15,rcx
   14001a3c7:	and    QWORD PTR [rsp+0x78],0x0
   14001a3cd:	lea    rcx,[rsp+0x78]
   14001a3d2:	mov    rbp,r8
   14001a3d5:	mov    rdi,rdx
   14001a3d8:	call   0x14001a6a4
   14001a3dd:	mov    rbx,QWORD PTR [rsp+0x78]
   14001a3e2:	mov    esi,eax
   14001a3e4:	test   eax,eax
   14001a3e6:	js     0x14001a558
   14001a3ec:	mov    rax,QWORD PTR [rdi]
   14001a3ef:	and    QWORD PTR [rbx+0x20],0x0
   14001a3f4:	mov    rbp,QWORD PTR [rbp+0x0]
   14001a3f8:	mov    QWORD PTR [rbx+0x10],rax
   14001a3fc:	mov    rcx,QWORD PTR [rbx+0x18]
   14001a400:	test   rcx,rcx
   14001a403:	je     0x14001a410
   14001a405:	call   QWORD PTR [rip+0x181bd]        # 0x1400325c8
   14001a40b:	and    QWORD PTR [rbx+0x18],0x0
   14001a410:	mov    rcx,rbp
   14001a413:	shl    rcx,0x3
   14001a417:	mov    rax,rcx
   14001a41a:	shr    rax,0x3
   14001a41e:	cmp    rax,rbp
   14001a421:	je     0x14001a42d
   14001a423:	mov    esi,0x80070057
   14001a428:	jmp    0x14001a545
   14001a42d:	call   QWORD PTR [rip+0x1819d]        # 0x1400325d0
   14001a433:	mov    QWORD PTR [rbx+0x18],rax
   14001a437:	neg    rax
   14001a43a:	sbb    esi,esi
   14001a43c:	not    esi
   14001a43e:	and    esi,0x8007000e
   14001a444:	jl     0x14001a545
   14001a44a:	xor    r14d,r14d
   14001a44d:	test   rbp,rbp
   14001a450:	je     0x14001a543
   14001a456:	lea    rsi,[rip+0x30c1b]        # 0x14004b078
   14001a45d:	mov    rdi,QWORD PTR [rbx+0x18]
   14001a461:	lea    rax,[rsp+0x60]
   14001a466:	and    DWORD PTR [rsp+0x60],0x0
   14001a46b:	lea    r8,[rip+0xffffffffffffe96e]        # 0x140018de0
   14001a472:	mov    QWORD PTR [rsp+0x28],rax
   14001a477:	mov    r9,rbx
   14001a47a:	and    DWORD PTR [rsp+0x20],0x0
   14001a47f:	xor    edx,edx
   14001a481:	xor    ecx,ecx
   14001a483:	call   QWORD PTR [rip+0x18187]        # 0x140032610
   14001a489:	mov    QWORD PTR [rdi+r14*8],rax
   14001a48d:	test   rax,rax
   14001a490:	je     0x14001a4c3
   14001a492:	mov    rcx,QWORD PTR [rip+0x30bdf]        # 0x14004b078
   14001a499:	cmp    rcx,rsi
   14001a49c:	je     0x14001a533
   14001a4a2:	test   BYTE PTR [rcx+0x1c],0x4
   14001a4a6:	je     0x14001a533
   14001a4ac:	mov    rcx,QWORD PTR [rcx+0x10]
   14001a4b0:	lea    r8,[rip+0x22f09]        # 0x14003d3c0
   14001a4b7:	mov    edx,0x2d
   14001a4bc:	call   0x140001f08
   14001a4c1:	jmp    0x14001a533
   14001a4c3:	mov    edi,0x80004005
   14001a4c8:	call   QWORD PTR [rip+0x18012]        # 0x1400324e0
   14001a4ce:	mov    edx,DWORD PTR [rax]
   14001a4d0:	sub    edx,0xb
   14001a4d3:	je     0x14001a4f2
   14001a4d5:	sub    edx,0x1
   14001a4d8:	je     0x14001a4e4
   14001a4da:	sub    edx,0x1
   14001a4dd:	je     0x14001a4eb
   14001a4df:	cmp    edx,0x9
   14001a4e2:	jne    0x14001a4f7
   14001a4e4:	mov    edi,0x8007000e
   14001a4e9:	jmp    0x14001a4f7
   14001a4eb:	mov    edi,0x80070005
   14001a4f0:	jmp    0x14001a4f7
   14001a4f2:	mov    edi,0x8007009b
   14001a4f7:	mov    rcx,QWORD PTR [rip+0x30b7a]        # 0x14004b078
   14001a4fe:	cmp    rcx,rsi
   14001a501:	je     0x14001a521
   14001a503:	test   BYTE PTR [rcx+0x1c],0x1
   14001a507:	je     0x14001a521
   14001a509:	mov    rcx,QWORD PTR [rcx+0x10]
   14001a50d:	lea    r8,[rip+0x22eac]        # 0x14003d3c0
   14001a514:	mov    edx,0x2e
   14001a519:	mov    r9d,edi
   14001a51c:	call   0x140001f70
   14001a521:	xor    esi,esi
   14001a523:	test   edi,edi
   14001a525:	cmovs  esi,edi
   14001a528:	test   esi,esi
   14001a52a:	js     0x14001a558
   14001a52c:	lea    rsi,[rip+0x30b45]        # 0x14004b078
   14001a533:	inc    QWORD PTR [rbx+0x20]
   14001a537:	inc    r14
   14001a53a:	cmp    r14,rbp
   14001a53d:	jb     0x14001a45d
   14001a543:	xor    esi,esi
   14001a545:	test   esi,esi
   14001a547:	js     0x14001a558
   14001a549:	mov    rax,rbx
   14001a54c:	xor    ebx,ebx
   14001a54e:	mov    QWORD PTR [rsp+0x78],rbx
   14001a553:	xor    esi,esi
   14001a555:	mov    QWORD PTR [r15],rax
   14001a558:	test   rbx,rbx
   14001a55b:	je     0x14001a599
   14001a55d:	mov    eax,DWORD PTR [rbx+0x8]
   14001a560:	cmp    eax,0x1
   14001a563:	jne    0x14001a56e
   14001a565:	mov    DWORD PTR [rbx+0x8],0x0
   14001a56c:	jmp    0x14001a57b
   14001a56e:	or     eax,0xffffffff
   14001a571:	lock xadd DWORD PTR [rbx+0x8],eax
   14001a576:	sub    eax,0x1
   14001a579:	jg     0x14001a599
   14001a57b:	mov    rbx,QWORD PTR [rsp+0x78]
   14001a580:	mov    rcx,QWORD PTR [rbx]
   14001a583:	mov    rdi,QWORD PTR [rcx]
   14001a586:	mov    rcx,rdi
   14001a589:	call   QWORD PTR [rip+0x18119]        # 0x1400326a8
   14001a58f:	mov    edx,0x1
   14001a594:	mov    rcx,rbx
   14001a597:	call   rdi
   14001a599:	mov    eax,esi
   14001a59b:	mov    rbx,QWORD PTR [rsp+0x68]
   14001a5a0:	add    rsp,0x30
   14001a5a4:	pop    r15
   14001a5a6:	pop    r14
   14001a5a8:	pop    rdi
   14001a5a9:	pop    rsi
   14001a5aa:	pop    rbp
   14001a5ab:	ret    
   14001a5ac:	int3   
   14001a5ad:	int3   
   14001a5ae:	int3   
   14001a5af:	int3   
   14001a5b0:	int3   
   14001a5b1:	int3   
   14001a5b2:	int3   
   14001a5b3:	int3   
   14001a5b4:	mov    rax,rsp
   14001a5b7:	mov    QWORD PTR [rax+0x10],rbx
   14001a5bb:	mov    QWORD PTR [rax+0x18],rbp
   14001a5bf:	push   rsi
   14001a5c0:	push   rdi
   14001a5c1:	push   r12
   14001a5c3:	push   r14
   14001a5c5:	push   r15
   14001a5c7:	sub    rsp,0x20
   14001a5cb:	and    QWORD PTR [rcx],0x0
   14001a5cf:	mov    r15,rcx
   14001a5d2:	and    QWORD PTR [rax+0x8],0x0
   14001a5d7:	lea    rcx,[rax+0x8]
   14001a5db:	mov    rdi,r9
   14001a5de:	mov    r14,r8
   14001a5e1:	mov    r12,rdx
   14001a5e4:	call   0x14001a738
   14001a5e9:	mov    rbx,QWORD PTR [rsp+0x50]
   14001a5ee:	mov    esi,eax
   14001a5f0:	test   eax,eax
   14001a5f2:	js     0x14001a643
   14001a5f4:	mov    ebp,DWORD PTR [rdi]
   14001a5f6:	lea    rdi,[rbx+0x38]
   14001a5fa:	mov    rcx,QWORD PTR [rdi]
   14001a5fd:	mov    rsi,QWORD PTR [r14]
   14001a600:	mov    r14,QWORD PTR [r12]
   14001a604:	test   rcx,rcx
   14001a607:	je     0x14001a613
   14001a609:	call   QWORD PTR [rip+0x17fb9]        # 0x1400325c8
   14001a60f:	and    QWORD PTR [rdi],0x0
   14001a613:	mov    rdx,rbp
   14001a616:	mov    r8,rsi
   14001a619:	mov    rcx,rdi
   14001a61c:	call   0x14002b9ec
   14001a621:	mov    esi,eax
   14001a623:	test   eax,eax
   14001a625:	js     0x14001a630
   14001a627:	mov    QWORD PTR [rbx+0x30],r14
   14001a62b:	xor    esi,esi
   14001a62d:	mov    DWORD PTR [rbx+0x40],ebp
   14001a630:	test   esi,esi
   14001a632:	js     0x14001a643
   14001a634:	mov    rax,rbx
   14001a637:	xor    ebx,ebx
   14001a639:	mov    QWORD PTR [rsp+0x50],rbx
   14001a63e:	xor    esi,esi
   14001a640:	mov    QWORD PTR [r15],rax
   14001a643:	test   rbx,rbx
   14001a646:	je     0x14001a684
   14001a648:	mov    eax,DWORD PTR [rbx+0x8]
   14001a64b:	cmp    eax,0x1
   14001a64e:	jne    0x14001a659
   14001a650:	mov    DWORD PTR [rbx+0x8],0x0
   14001a657:	jmp    0x14001a666
   14001a659:	or     eax,0xffffffff
   14001a65c:	lock xadd DWORD PTR [rbx+0x8],eax
   14001a661:	sub    eax,0x1
   14001a664:	jg     0x14001a684
   14001a666:	mov    rbx,QWORD PTR [rsp+0x50]
   14001a66b:	mov    rcx,QWORD PTR [rbx]
   14001a66e:	mov    rdi,QWORD PTR [rcx]
   14001a671:	mov    rcx,rdi
   14001a674:	call   QWORD PTR [rip+0x1802e]        # 0x1400326a8
   14001a67a:	mov    edx,0x1
   14001a67f:	mov    rcx,rbx
   14001a682:	call   rdi
   14001a684:	mov    rbx,QWORD PTR [rsp+0x58]
   14001a689:	mov    eax,esi
   14001a68b:	mov    rbp,QWORD PTR [rsp+0x60]
   14001a690:	add    rsp,0x20
   14001a694:	pop    r15
   14001a696:	pop    r14
   14001a698:	pop    r12
   14001a69a:	pop    rdi
   14001a69b:	pop    rsi
   14001a69c:	ret    
   14001a69d:	int3   
   14001a69e:	int3   
   14001a69f:	int3   
   14001a6a0:	int3   
   14001a6a1:	int3   
   14001a6a2:	int3   
   14001a6a3:	int3   
   14001a6a4:	rex push rbx
   14001a6a6:	sub    rsp,0x30
   14001a6aa:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001a6b3:	mov    rbx,rcx
   14001a6b6:	mov    ecx,0x28
   14001a6bb:	call   QWORD PTR [rip+0x17f0f]        # 0x1400325d0
   14001a6c1:	mov    rdx,rax
   14001a6c4:	xor    r8d,r8d
   14001a6c7:	test   rax,rax
   14001a6ca:	je     0x14001a6f7
   14001a6cc:	mov    DWORD PTR [rax+0x8],r8d
   14001a6d0:	lea    rax,[rip+0x1a201]        # 0x1400348d8
   14001a6d7:	mov    QWORD PTR [rdx],rax
   14001a6da:	mov    QWORD PTR [rdx+0x10],r8
   14001a6de:	mov    QWORD PTR [rsp+0x48],r8
   14001a6e3:	lea    rax,[rsp+0x48]
   14001a6e8:	mov    QWORD PTR [rsp+0x50],rax
   14001a6ed:	mov    QWORD PTR [rdx+0x18],r8
   14001a6f1:	mov    QWORD PTR [rdx+0x20],r8
   14001a6f5:	jmp    0x14001a6fa
   14001a6f7:	mov    rdx,r8
   14001a6fa:	test   rdx,rdx
   14001a6fd:	je     0x14001a718
   14001a6ff:	mov    eax,DWORD PTR [rdx+0x8]
   14001a702:	test   eax,eax
   14001a704:	jne    0x14001a70f
   14001a706:	mov    DWORD PTR [rdx+0x8],0x1
   14001a70d:	jmp    0x14001a713
   14001a70f:	lock inc DWORD PTR [rdx+0x8]
   14001a713:	mov    QWORD PTR [rbx],rdx
   14001a716:	jmp    0x14001a727
   14001a718:	mov    eax,0x8007000e
   14001a71d:	jmp    0x14001a729
   14001a71f:	mov    eax,DWORD PTR [rsp+0x48]
   14001a723:	test   eax,eax
   14001a725:	js     0x14001a729
   14001a727:	xor    eax,eax
   14001a729:	add    rsp,0x30
   14001a72d:	pop    rbx
   14001a72e:	ret    
   14001a72f:	int3   
   14001a730:	int3   
   14001a731:	int3   
   14001a732:	int3   
   14001a733:	int3   
   14001a734:	int3   
   14001a735:	int3   
   14001a736:	int3   
   14001a737:	int3   
   14001a738:	rex push rbx
   14001a73a:	sub    rsp,0x30
   14001a73e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001a747:	mov    rbx,rcx
   14001a74a:	mov    ecx,0x48
   14001a74f:	call   QWORD PTR [rip+0x17e7b]        # 0x1400325d0
   14001a755:	mov    r8,rax
   14001a758:	test   rax,rax
   14001a75b:	je     0x14001a7a3
   14001a75d:	and    DWORD PTR [rax+0x8],0x0
   14001a761:	lea    rdx,[rax+0x10]
   14001a765:	mov    QWORD PTR [rdx+0x8],rdx
   14001a769:	mov    QWORD PTR [rdx],rdx
   14001a76c:	lea    rax,[rip+0x13d]        # 0x14001a8b0
   14001a773:	mov    QWORD PTR [r8+0x20],rax
   14001a777:	lea    rax,[rip+0x142]        # 0x14001a8c0
   14001a77e:	mov    QWORD PTR [r8+0x28],rax
   14001a782:	lea    rax,[rip+0x1a15f]        # 0x1400348e8
   14001a789:	mov    QWORD PTR [r8],rax
   14001a78c:	and    QWORD PTR [rsp+0x48],0x0
   14001a792:	lea    rax,[rsp+0x48]
   14001a797:	mov    QWORD PTR [rsp+0x50],rax
   14001a79c:	and    QWORD PTR [r8+0x38],0x0
   14001a7a1:	jmp    0x14001a7a6
   14001a7a3:	xor    r8d,r8d
   14001a7a6:	test   r8,r8
   14001a7a9:	je     0x14001a7c7
   14001a7ab:	mov    eax,DWORD PTR [r8+0x8]
   14001a7af:	test   eax,eax
   14001a7b1:	jne    0x14001a7bd
   14001a7b3:	mov    DWORD PTR [r8+0x8],0x1
   14001a7bb:	jmp    0x14001a7c2
   14001a7bd:	lock inc DWORD PTR [r8+0x8]
   14001a7c2:	mov    QWORD PTR [rbx],r8
   14001a7c5:	jmp    0x14001a7d6
   14001a7c7:	mov    eax,0x8007000e
   14001a7cc:	jmp    0x14001a7d8
   14001a7ce:	mov    eax,DWORD PTR [rsp+0x48]
   14001a7d2:	test   eax,eax
   14001a7d4:	js     0x14001a7d8
   14001a7d6:	xor    eax,eax
   14001a7d8:	add    rsp,0x30
   14001a7dc:	pop    rbx
   14001a7dd:	ret    
   14001a7de:	int3   
   14001a7df:	int3   
   14001a7e0:	int3   
   14001a7e1:	int3   
   14001a7e2:	int3   
   14001a7e3:	int3   
   14001a7e4:	int3   
   14001a7e5:	int3   
   14001a7e6:	int3   
   14001a7e7:	int3   
   14001a7e8:	rex push rdi
   14001a7ea:	sub    rsp,0x30
   14001a7ee:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001a7f7:	mov    QWORD PTR [rsp+0x40],rbx
   14001a7fc:	mov    rdi,rcx
   14001a7ff:	mov    ecx,0x68
   14001a804:	call   QWORD PTR [rip+0x17dc6]        # 0x1400325d0
   14001a80a:	mov    rbx,rax
   14001a80d:	test   rax,rax
   14001a810:	je     0x14001a860
   14001a812:	and    DWORD PTR [rax+0x8],0x0
   14001a816:	lea    rdx,[rax+0x10]
   14001a81a:	mov    QWORD PTR [rdx+0x8],rdx
   14001a81e:	mov    QWORD PTR [rdx],rdx
   14001a821:	lea    rcx,[rax+0x20]
   14001a825:	xor    edx,edx
   14001a827:	lea    r8d,[rdx+0x28]
   14001a82b:	call   0x14002e2ce
   14001a830:	lea    rax,[rip+0xe9]        # 0x14001a920
   14001a837:	mov    QWORD PTR [rbx+0x40],rax
   14001a83b:	lea    rax,[rip+0x1a0de]        # 0x140034920
   14001a842:	mov    QWORD PTR [rbx],rax
   14001a845:	and    QWORD PTR [rsp+0x48],0x0
   14001a84b:	lea    rax,[rsp+0x48]
   14001a850:	mov    QWORD PTR [rsp+0x50],rax
   14001a855:	and    QWORD PTR [rbx+0x50],0x0
   14001a85a:	mov    BYTE PTR [rbx+0x60],0x0
   14001a85e:	jmp    0x14001a862
   14001a860:	xor    ebx,ebx
   14001a862:	test   rbx,rbx
   14001a865:	je     0x14001a880
   14001a867:	mov    eax,DWORD PTR [rbx+0x8]
   14001a86a:	test   eax,eax
   14001a86c:	jne    0x14001a877
   14001a86e:	mov    DWORD PTR [rbx+0x8],0x1
   14001a875:	jmp    0x14001a87b
   14001a877:	lock inc DWORD PTR [rbx+0x8]
   14001a87b:	mov    QWORD PTR [rdi],rbx
   14001a87e:	jmp    0x14001a88f
   14001a880:	mov    eax,0x8007000e
   14001a885:	jmp    0x14001a891
   14001a887:	mov    eax,DWORD PTR [rsp+0x48]
   14001a88b:	test   eax,eax
   14001a88d:	js     0x14001a891
   14001a88f:	xor    eax,eax
   14001a891:	mov    rbx,QWORD PTR [rsp+0x40]
   14001a896:	add    rsp,0x30
   14001a89a:	pop    rdi
   14001a89b:	ret    
   14001a89c:	int3   
   14001a89d:	int3   
   14001a89e:	int3   
   14001a89f:	int3   
   14001a8a0:	int3   
   14001a8a1:	int3   
   14001a8a2:	int3   
   14001a8a3:	int3   
   14001a8a4:	int3   
   14001a8a5:	int3   
   14001a8a6:	int3   
   14001a8a7:	int3   
   14001a8a8:	int3   
   14001a8a9:	int3   
   14001a8aa:	int3   
   14001a8ab:	int3   
   14001a8ac:	int3   
   14001a8ad:	int3   
   14001a8ae:	int3   
   14001a8af:	int3   
   14001a8b0:	add    rcx,0xfffffffffffffff0
   14001a8b4:	jmp    0x140018b90
   14001a8b9:	int3   
   14001a8ba:	int3   
   14001a8bb:	int3   
   14001a8bc:	int3   
   14001a8bd:	int3   
   14001a8be:	int3   
   14001a8bf:	int3   
   14001a8c0:	mov    QWORD PTR [rsp+0x8],rbx
   14001a8c5:	push   rdi
   14001a8c6:	sub    rsp,0x20
   14001a8ca:	lea    rdi,[rcx-0x10]
   14001a8ce:	mov    eax,DWORD PTR [rdi+0x8]
   14001a8d1:	cmp    eax,0x1
   14001a8d4:	jne    0x14001a8df
   14001a8d6:	mov    DWORD PTR [rdi+0x8],0x0
   14001a8dd:	jmp    0x14001a8ec
   14001a8df:	or     eax,0xffffffff
   14001a8e2:	lock xadd DWORD PTR [rdi+0x8],eax
   14001a8e7:	sub    eax,0x1
   14001a8ea:	jg     0x14001a90a
   14001a8ec:	test   rdi,rdi
   14001a8ef:	je     0x14001a90a
   14001a8f1:	mov    rax,QWORD PTR [rdi]
   14001a8f4:	mov    rbx,QWORD PTR [rax]
   14001a8f7:	mov    rcx,rbx
   14001a8fa:	call   QWORD PTR [rip+0x17da8]        # 0x1400326a8
   14001a900:	mov    edx,0x1
   14001a905:	mov    rcx,rdi
   14001a908:	call   rbx
   14001a90a:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a90f:	add    rsp,0x20
   14001a913:	pop    rdi
   14001a914:	ret    
   14001a915:	int3   
   14001a916:	int3   
   14001a917:	int3   
   14001a918:	int3   
   14001a919:	int3   
   14001a91a:	int3   
   14001a91b:	int3   
   14001a91c:	int3   
   14001a91d:	int3   
   14001a91e:	int3   
   14001a91f:	int3   
   14001a920:	add    rcx,0xffffffffffffffe0
   14001a924:	jmp    0x140017d10
   14001a929:	int3   
   14001a92a:	int3   
   14001a92b:	int3   
   14001a92c:	int3   
   14001a92d:	int3   
   14001a92e:	int3   
   14001a92f:	int3   
   14001a930:	lea    rax,[rip+0x1a069]        # 0x1400349a0
   14001a937:	mov    QWORD PTR [rcx],rax
   14001a93a:	ret    
   14001a93b:	int3   
   14001a93c:	int3   
   14001a93d:	int3   
   14001a93e:	int3   
   14001a93f:	int3   
   14001a940:	int3   
   14001a941:	int3   
   14001a942:	int3   
   14001a943:	int3   
   14001a944:	int3   
   14001a945:	int3   
   14001a946:	int3   
   14001a947:	int3   
   14001a948:	int3   
   14001a949:	int3   
   14001a94a:	int3   
   14001a94b:	int3   
   14001a94c:	int3   
   14001a94d:	int3   
   14001a94e:	int3   
   14001a94f:	int3   
   14001a950:	rex push rbx
   14001a952:	sub    rsp,0x20
   14001a956:	lea    rax,[rip+0x1a043]        # 0x1400349a0
   14001a95d:	mov    rbx,rcx
   14001a960:	mov    QWORD PTR [rcx],rax
   14001a963:	test   dl,0x1
   14001a966:	je     0x14001a96e
   14001a968:	call   QWORD PTR [rip+0x17c5a]        # 0x1400325c8
   14001a96e:	mov    rax,rbx
   14001a971:	add    rsp,0x20
   14001a975:	pop    rbx
   14001a976:	ret    
   14001a977:	int3   
   14001a978:	int3   
   14001a979:	int3   
   14001a97a:	int3   
   14001a97b:	int3   
   14001a97c:	int3   
   14001a97d:	int3   
   14001a97e:	int3   
   14001a97f:	int3   
   14001a980:	mov    QWORD PTR [rsp+0x8],rbx
   14001a985:	mov    QWORD PTR [rsp+0x10],rsi
   14001a98a:	push   rdi
   14001a98b:	sub    rsp,0x20
   14001a98f:	or     esi,0xffffffff
   14001a992:	lock xadd DWORD PTR [rcx+0x10],esi
   14001a997:	sub    esi,0x1
   14001a99a:	jne    0x14001a9bd
   14001a99c:	test   rcx,rcx
   14001a99f:	je     0x14001a9bd
   14001a9a1:	lea    rdi,[rcx+0x8]
   14001a9a5:	mov    rdx,QWORD PTR [rdi]
   14001a9a8:	mov    rbx,QWORD PTR [rdx+0x10]
   14001a9ac:	mov    rcx,rbx
   14001a9af:	call   QWORD PTR [rip+0x17cf3]        # 0x1400326a8
   14001a9b5:	lea    edx,[rsi+0x1]
   14001a9b8:	mov    rcx,rdi
   14001a9bb:	call   rbx
   14001a9bd:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a9c2:	mov    eax,esi
   14001a9c4:	mov    rsi,QWORD PTR [rsp+0x38]
   14001a9c9:	add    rsp,0x20
   14001a9cd:	pop    rdi
   14001a9ce:	ret    
   14001a9cf:	int3   
   14001a9d0:	int3   
   14001a9d1:	int3   
   14001a9d2:	int3   
   14001a9d3:	int3   
   14001a9d4:	int3   
   14001a9d5:	int3   
   14001a9d6:	int3   
   14001a9d7:	int3   
   14001a9d8:	mov    r11,rsp
   14001a9db:	mov    DWORD PTR [r11+0x20],r9d
   14001a9df:	push   rbp
   14001a9e0:	lea    rbp,[r11+0x78]
   14001a9e4:	sub    rsp,0x150
   14001a9eb:	and    QWORD PTR [r11-0x18],0x0
   14001a9f0:	lea    rax,[rbp+0x30]
   14001a9f4:	mov    r8d,0x14
   14001a9fa:	movzx  r9d,r8w
   14001a9fe:	lea    edx,[r8-0x10]
   14001aa02:	mov    QWORD PTR [r11-0x20],rdx
   14001aa06:	lea    r8,[rip+0x1dc73]        # 0x140038680
   14001aa0d:	mov    QWORD PTR [r11-0x28],rax
   14001aa11:	lea    rax,[rbp+0x28]
   14001aa15:	mov    QWORD PTR [r11-0x30],rdx
   14001aa19:	mov    QWORD PTR [r11-0x38],rax
   14001aa1d:	lea    rax,[rbp+0x20]
   14001aa21:	mov    QWORD PTR [r11-0x40],rdx
   14001aa25:	mov    QWORD PTR [r11-0x48],rax
   14001aa29:	lea    rax,[rbp+0x18]
   14001aa2d:	mov    QWORD PTR [r11-0x50],rdx
   14001aa31:	mov    QWORD PTR [r11-0x58],rax
   14001aa35:	lea    rax,[rbp+0x10]
   14001aa39:	mov    QWORD PTR [r11-0x60],rdx
   14001aa3d:	mov    QWORD PTR [r11-0x68],rax
   14001aa41:	lea    rax,[rbp+0x8]
   14001aa45:	mov    QWORD PTR [r11-0x70],rdx
   14001aa49:	mov    QWORD PTR [r11-0x78],rax
   14001aa4d:	lea    rax,[rbp+0x0]
   14001aa51:	mov    QWORD PTR [r11-0x80],rdx
   14001aa55:	mov    QWORD PTR [r11-0x88],rax
   14001aa5c:	lea    rax,[rbp-0x8]
   14001aa60:	mov    QWORD PTR [r11-0x90],rdx
   14001aa67:	mov    QWORD PTR [r11-0x98],rax
   14001aa6e:	lea    rax,[rbp-0x10]
   14001aa72:	mov    QWORD PTR [r11-0xa0],rdx
   14001aa79:	mov    QWORD PTR [r11-0xa8],rax
   14001aa80:	lea    rax,[rbp-0x18]
   14001aa84:	mov    QWORD PTR [r11-0xb0],rdx
   14001aa8b:	mov    QWORD PTR [r11-0xb8],rax
   14001aa92:	lea    rax,[rbp-0x20]
   14001aa96:	mov    QWORD PTR [r11-0xc0],rdx
   14001aa9d:	mov    QWORD PTR [r11-0xc8],rax
   14001aaa4:	lea    rax,[rbp-0x28]
   14001aaa8:	mov    QWORD PTR [r11-0xd0],rdx
   14001aaaf:	mov    QWORD PTR [r11-0xd8],rax
   14001aab6:	lea    rax,[rbp-0x30]
   14001aaba:	mov    QWORD PTR [rsp+0x78],rdx
   14001aabf:	mov    QWORD PTR [rsp+0x70],rax
   14001aac4:	lea    rax,[rbp-0x38]
   14001aac8:	mov    QWORD PTR [rsp+0x68],rdx
   14001aacd:	mov    QWORD PTR [rsp+0x60],rax
   14001aad2:	lea    rax,[rbp-0x40]
   14001aad6:	mov    QWORD PTR [rsp+0x58],rdx
   14001aadb:	mov    QWORD PTR [rsp+0x50],rax
   14001aae0:	lea    rax,[rbp-0x48]
   14001aae4:	mov    QWORD PTR [rsp+0x48],rdx
   14001aae9:	mov    QWORD PTR [rsp+0x40],rax
   14001aaee:	lea    rax,[rbp-0x50]
   14001aaf2:	mov    QWORD PTR [rsp+0x38],rdx
   14001aaf7:	mov    QWORD PTR [rsp+0x30],rax
   14001aafc:	lea    rax,[rbp-0x58]
   14001ab00:	mov    QWORD PTR [rsp+0x28],rdx
   14001ab05:	mov    edx,0x2b
   14001ab0a:	mov    QWORD PTR [rsp+0x20],rax
   14001ab0f:	call   QWORD PTR [rip+0x1750b]        # 0x140032020
   14001ab15:	add    rsp,0x150
   14001ab1c:	pop    rbp
   14001ab1d:	ret    
   14001ab1e:	int3   
   14001ab1f:	int3   
   14001ab20:	int3   
   14001ab21:	int3   
   14001ab22:	int3   
   14001ab23:	int3   
   14001ab24:	mov    QWORD PTR [rsp+0x8],rbx
   14001ab29:	mov    QWORD PTR [rsp+0x10],rsi
   14001ab2e:	mov    QWORD PTR [rsp+0x18],rdi
   14001ab33:	push   r14
   14001ab35:	sub    rsp,0x90
   14001ab3c:	mov    rdx,QWORD PTR [rsp+0xe0]
   14001ab44:	mov    edi,0xa
   14001ab49:	or     r8,0xffffffffffffffff
   14001ab4d:	xor    esi,esi
   14001ab4f:	mov    rbx,rcx
   14001ab52:	lea    r10d,[rdi+0x4]
   14001ab56:	test   rdx,rdx
   14001ab59:	je     0x14001ab7b
   14001ab5b:	cmp    WORD PTR [rdx],si
   14001ab5e:	jne    0x14001ab65
   14001ab60:	mov    r11d,r10d
   14001ab63:	jmp    0x14001ab7e
   14001ab65:	mov    rax,r8
   14001ab68:	inc    rax
   14001ab6b:	cmp    WORD PTR [rdx+rax*2],si
   14001ab6f:	jne    0x14001ab68
   14001ab71:	lea    r11,[rax*2+0x2]
   14001ab79:	jmp    0x14001ab7e
   14001ab7b:	mov    r11,rdi
   14001ab7e:	lea    r14,[rip+0x1a2d3]        # 0x140034e58
   14001ab85:	test   rdx,rdx
   14001ab88:	je     0x14001ab93
   14001ab8a:	cmp    WORD PTR [rdx],si
   14001ab8d:	cmove  rdx,r14
   14001ab91:	jmp    0x14001ab9a
   14001ab93:	lea    rdx,[rip+0x1a906]        # 0x1400354a0
   14001ab9a:	mov    rax,QWORD PTR [rsp+0xc8]
   14001aba2:	test   rax,rax
   14001aba5:	je     0x14001abc7
   14001aba7:	cmp    WORD PTR [rax],si
   14001abaa:	jne    0x14001abb1
   14001abac:	mov    rcx,r10
   14001abaf:	jmp    0x14001abca
   14001abb1:	mov    rcx,r8
   14001abb4:	inc    rcx
   14001abb7:	cmp    WORD PTR [rax+rcx*2],si
   14001abbb:	jne    0x14001abb4
   14001abbd:	lea    rcx,[rcx*2+0x2]
   14001abc5:	jmp    0x14001abca
   14001abc7:	mov    rcx,rdi
   14001abca:	test   rax,rax
   14001abcd:	je     0x14001abd8
   14001abcf:	cmp    WORD PTR [rax],si
   14001abd2:	cmove  rax,r14
   14001abd6:	jmp    0x14001abdf
   14001abd8:	lea    rax,[rip+0x1a8c1]        # 0x1400354a0
   14001abdf:	test   r9,r9
   14001abe2:	je     0x14001abfe
   14001abe4:	cmp    WORD PTR [r9],si
   14001abe8:	je     0x14001ac01
   14001abea:	inc    r8
   14001abed:	cmp    WORD PTR [r9+r8*2],si
   14001abf2:	jne    0x14001abea
   14001abf4:	lea    r10,[r8*2+0x2]
   14001abfc:	jmp    0x14001ac01
   14001abfe:	mov    r10,rdi
   14001ac01:	test   r9,r9
   14001ac04:	je     0x14001ac10
   14001ac06:	cmp    WORD PTR [r9],si
   14001ac0a:	cmove  r9,r14
   14001ac0e:	jmp    0x14001ac17
   14001ac10:	lea    r9,[rip+0x1a889]        # 0x1400354a0
   14001ac17:	mov    QWORD PTR [rsp+0x80],rsi
   14001ac1f:	mov    edi,0x27
   14001ac24:	mov    QWORD PTR [rsp+0x78],r11
   14001ac29:	mov    QWORD PTR [rsp+0x70],rdx
   14001ac2e:	lea    rdx,[rsp+0xd8]
   14001ac36:	lea    r8d,[rdi-0x23]
   14001ac3a:	mov    QWORD PTR [rsp+0x68],r8
   14001ac3f:	mov    QWORD PTR [rsp+0x60],rdx
   14001ac44:	lea    rdx,[rsp+0xd0]
   14001ac4c:	mov    QWORD PTR [rsp+0x58],r8
   14001ac51:	mov    QWORD PTR [rsp+0x50],rdx
   14001ac56:	lea    edx,[rdi+0x4]
   14001ac59:	mov    QWORD PTR [rsp+0x48],rcx
   14001ac5e:	mov    rcx,rbx
   14001ac61:	mov    QWORD PTR [rsp+0x40],rax
   14001ac66:	lea    rax,[rsp+0xc0]
   14001ac6e:	mov    QWORD PTR [rsp+0x38],r8
   14001ac73:	lea    r8,[rip+0x1da06]        # 0x140038680
   14001ac7a:	mov    QWORD PTR [rsp+0x30],rax
   14001ac7f:	mov    QWORD PTR [rsp+0x28],r10
   14001ac84:	mov    QWORD PTR [rsp+0x20],r9
   14001ac89:	movzx  r9d,di
   14001ac8d:	call   QWORD PTR [rip+0x1738d]        # 0x140032020
   14001ac93:	lea    r11,[rsp+0x90]
   14001ac9b:	mov    rbx,QWORD PTR [r11+0x10]
   14001ac9f:	mov    rsi,QWORD PTR [r11+0x18]
   14001aca3:	mov    rdi,QWORD PTR [r11+0x20]
   14001aca7:	mov    rsp,r11
   14001acaa:	pop    r14
   14001acac:	ret    
   14001acad:	int3   
   14001acae:	int3   
   14001acaf:	int3   
   14001acb0:	int3   
   14001acb1:	int3   
   14001acb2:	int3   
   14001acb3:	int3   
   14001acb4:	mov    r11,rsp
   14001acb7:	mov    DWORD PTR [r11+0x20],r9d
   14001acbb:	sub    rsp,0x78
   14001acbf:	and    QWORD PTR [r11-0x18],0x0
   14001acc4:	lea    rax,[r11+0x38]
   14001acc8:	mov    r8d,0x22
   14001acce:	movzx  r9d,r8w
   14001acd2:	lea    edx,[r8-0x1e]
   14001acd6:	mov    QWORD PTR [r11-0x20],rdx
   14001acda:	lea    r8,[rip+0x1d99f]        # 0x140038680
   14001ace1:	mov    QWORD PTR [r11-0x28],rax
   14001ace5:	lea    rax,[r11+0x30]
   14001ace9:	mov    QWORD PTR [r11-0x30],rdx
   14001aced:	mov    QWORD PTR [r11-0x38],rax
   14001acf1:	lea    rax,[r11+0x28]
   14001acf5:	mov    QWORD PTR [r11-0x40],rdx
   14001acf9:	mov    QWORD PTR [r11-0x48],rax
   14001acfd:	lea    rax,[r11+0x20]
   14001ad01:	mov    QWORD PTR [r11-0x50],rdx
   14001ad05:	mov    edx,0x2b
   14001ad0a:	mov    QWORD PTR [r11-0x58],rax
   14001ad0e:	call   QWORD PTR [rip+0x1730c]        # 0x140032020
   14001ad14:	add    rsp,0x78
   14001ad18:	ret    
   14001ad19:	int3   
   14001ad1a:	int3   
   14001ad1b:	int3   
   14001ad1c:	int3   
   14001ad1d:	int3   
   14001ad1e:	int3   
   14001ad1f:	int3   
   14001ad20:	mov    r11,rsp
   14001ad23:	mov    QWORD PTR [r11+0x20],r9
   14001ad27:	sub    rsp,0x48
   14001ad2b:	and    QWORD PTR [r11-0x18],0x0
   14001ad30:	lea    rax,[r11+0x20]
   14001ad34:	movzx  r9d,dx
   14001ad38:	mov    edx,0x2b
   14001ad3d:	mov    QWORD PTR [r11-0x20],0x8
   14001ad45:	mov    QWORD PTR [r11-0x28],rax
   14001ad49:	call   QWORD PTR [rip+0x172d1]        # 0x140032020
   14001ad4f:	add    rsp,0x48
   14001ad53:	ret    
   14001ad54:	int3   
   14001ad55:	int3   
   14001ad56:	int3   
   14001ad57:	int3   
   14001ad58:	int3   
   14001ad59:	int3   
   14001ad5a:	int3   
   14001ad5b:	int3   
   14001ad5c:	mov    r11,rsp
   14001ad5f:	mov    QWORD PTR [r11+0x20],r9
   14001ad63:	sub    rsp,0x58
   14001ad67:	and    QWORD PTR [r11-0x18],0x0
   14001ad6c:	lea    rax,[r11+0x28]
   14001ad70:	mov    QWORD PTR [r11-0x20],0x4
   14001ad78:	lea    r8,[rip+0x1d901]        # 0x140038680
   14001ad7f:	mov    QWORD PTR [r11-0x28],rax
   14001ad83:	lea    rax,[r11+0x20]
   14001ad87:	movzx  r9d,dx
   14001ad8b:	mov    edx,0x2b
   14001ad90:	mov    QWORD PTR [r11-0x30],0x8
   14001ad98:	mov    QWORD PTR [r11-0x38],rax
   14001ad9c:	call   QWORD PTR [rip+0x1727e]        # 0x140032020
   14001ada2:	add    rsp,0x58
   14001ada6:	ret    
   14001ada7:	int3   
   14001ada8:	int3   
   14001ada9:	int3   
   14001adaa:	int3   
   14001adab:	int3   
   14001adac:	int3   
   14001adad:	int3   
   14001adae:	int3   
   14001adaf:	int3   
   14001adb0:	mov    QWORD PTR [rsp+0x20],r9
   14001adb5:	sub    rsp,0x58
   14001adb9:	mov    r8,QWORD PTR [rsp+0x80]
   14001adc1:	test   r8,r8
   14001adc4:	je     0x14001add9
   14001adc6:	or     rdx,0xffffffffffffffff
   14001adca:	inc    rdx
   14001adcd:	cmp    BYTE PTR [r8+rdx*1],0x0
   14001add2:	jne    0x14001adca
   14001add4:	inc    rdx
   14001add7:	jmp    0x14001adde
   14001add9:	mov    edx,0x5
   14001adde:	test   r8,r8
   14001ade1:	lea    rax,[rip+0x1a6ac]        # 0x140035494
   14001ade8:	cmovne rax,r8
   14001adec:	and    QWORD PTR [rsp+0x40],0x0
   14001adf2:	mov    QWORD PTR [rsp+0x38],rdx
   14001adf7:	mov    r8d,0xe
   14001adfd:	mov    QWORD PTR [rsp+0x30],rax
   14001ae02:	mov    edx,0x2b
   14001ae07:	lea    rax,[rsp+0x78]
   14001ae0c:	movzx  r9d,r8w
   14001ae10:	mov    QWORD PTR [rsp+0x28],0x8
   14001ae19:	lea    r8,[rip+0x1d860]        # 0x140038680
   14001ae20:	mov    QWORD PTR [rsp+0x20],rax
   14001ae25:	call   QWORD PTR [rip+0x171f5]        # 0x140032020
   14001ae2b:	add    rsp,0x58
   14001ae2f:	ret    
   14001ae30:	int3   
   14001ae31:	int3   
   14001ae32:	int3   
   14001ae33:	int3   
   14001ae34:	int3   
   14001ae35:	int3   
   14001ae36:	int3   
   14001ae37:	int3   
   14001ae38:	rex push rdi
   14001ae3a:	sub    rsp,0x30
   14001ae3e:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14001ae47:	mov    QWORD PTR [rsp+0x48],rbx
   14001ae4c:	mov    rbx,rdx
   14001ae4f:	mov    rdi,rcx
   14001ae52:	test   rcx,rcx
   14001ae55:	je     0x14001ae9e
   14001ae57:	test   rdx,rdx
   14001ae5a:	je     0x14001ae9e
   14001ae5c:	and    QWORD PTR [rdx],0x0
   14001ae60:	mov    ecx,0x120
   14001ae65:	call   0x140023f10
   14001ae6a:	mov    QWORD PTR [rsp+0x40],rax
   14001ae6f:	mov    rdx,rdi
   14001ae72:	mov    rcx,rax
   14001ae75:	call   0x14001aeb8
   14001ae7a:	mov    rdi,rax
   14001ae7d:	mov    QWORD PTR [rbx],rax
   14001ae80:	mov    rcx,QWORD PTR [rax]
   14001ae83:	mov    rbx,QWORD PTR [rcx]
   14001ae86:	mov    rcx,rbx
   14001ae89:	call   QWORD PTR [rip+0x17819]        # 0x1400326a8
   14001ae8f:	mov    rcx,rdi
   14001ae92:	call   rbx
   14001ae94:	xor    eax,eax
   14001ae96:	jmp    0x14001aea3
   14001ae98:	mov    eax,DWORD PTR [rsp+0x40]
   14001ae9c:	jmp    0x14001aea3
   14001ae9e:	mov    eax,0x80004003
   14001aea3:	mov    rbx,QWORD PTR [rsp+0x48]
   14001aea8:	add    rsp,0x30
   14001aeac:	pop    rdi
   14001aead:	ret    
   14001aeae:	int3   
   14001aeaf:	int3   
   14001aeb0:	int3   
   14001aeb1:	int3   
   14001aeb2:	int3   
   14001aeb3:	int3   
   14001aeb4:	int3   
   14001aeb5:	int3   
   14001aeb6:	int3   
   14001aeb7:	int3   
   14001aeb8:	mov    rax,rsp
   14001aebb:	push   rbp
   14001aebc:	push   rsi
   14001aebd:	push   rdi
   14001aebe:	push   r14
   14001aec0:	push   r15
   14001aec2:	lea    rbp,[rax-0x5f]
   14001aec6:	sub    rsp,0xd0
   14001aecd:	mov    QWORD PTR [rbp-0x51],0xfffffffffffffffe
   14001aed5:	mov    QWORD PTR [rax+0x18],rbx
   14001aed9:	mov    rax,QWORD PTR [rip+0x30140]        # 0x14004b020
   14001aee0:	xor    rax,rsp
   14001aee3:	mov    QWORD PTR [rbp+0x27],rax
   14001aee7:	mov    rsi,rdx
   14001aeea:	mov    rdi,rcx
   14001aeed:	mov    QWORD PTR [rbp-0x49],rcx
   14001aef1:	lea    r14,[rcx+0x8]
   14001aef5:	lea    rax,[rip+0x19a64]        # 0x140034960
   14001aefc:	mov    QWORD PTR [rcx],rax
   14001aeff:	lea    rax,[rip+0x19a3a]        # 0x140034940
   14001af06:	mov    QWORD PTR [r14],rax
   14001af09:	xor    r15d,r15d
   14001af0c:	mov    DWORD PTR [rcx+0x10],r15d
   14001af10:	test   rdx,rdx
   14001af13:	je     0x14001af29
   14001af15:	mov    rax,QWORD PTR [rdx]
   14001af18:	mov    rbx,QWORD PTR [rax]
   14001af1b:	mov    rcx,rbx
   14001af1e:	call   QWORD PTR [rip+0x17784]        # 0x1400326a8
   14001af24:	mov    rcx,rsi
   14001af27:	call   rbx
   14001af29:	mov    QWORD PTR [rdi+0x18],rsi
   14001af2d:	mov    QWORD PTR [rdi+0x20],r15
   14001af31:	lea    rbx,[rdi+0x28]
   14001af35:	mov    QWORD PTR [rbp-0x61],rbx
   14001af39:	mov    QWORD PTR [rbx],r15
   14001af3c:	mov    QWORD PTR [rbx+0x8],r15
   14001af40:	xor    r8d,r8d
   14001af43:	xor    edx,edx
   14001af45:	call   0x140012294
   14001af4a:	mov    QWORD PTR [rbx],rax
   14001af4d:	lea    r10,[rbx+0x10]
   14001af51:	mov    QWORD PTR [r10],r15
   14001af54:	mov    QWORD PTR [r10+0x8],r15
   14001af58:	mov    QWORD PTR [r10+0x10],r15
   14001af5c:	mov    DWORD PTR [rbx+0x38],0x3f800000
   14001af63:	mov    rax,QWORD PTR [rbx]
   14001af66:	mov    QWORD PTR [rbp-0x69],rax
   14001af6a:	mov    rdx,QWORD PTR [r10+0x8]
   14001af6e:	mov    rcx,QWORD PTR [r10]
   14001af71:	cmp    rcx,rcx
   14001af74:	jne    0x14001af7b
   14001af76:	cmp    rdx,rdx
   14001af79:	je     0x14001afb3
   14001af7b:	cmp    rcx,rdx
   14001af7e:	je     0x14001afb7
   14001af80:	mov    r9,r15
   14001af83:	mov    r8,rdx
   14001af86:	sub    r8,rdx
   14001af89:	add    r8,0x7
   14001af8d:	shr    r8,0x3
   14001af91:	cmp    rdx,rdx
   14001af94:	cmova  r8,r15
   14001af98:	test   r8,r8
   14001af9b:	je     0x14001afb3
   14001af9d:	sub    rdx,rcx
   14001afa0:	mov    rax,QWORD PTR [rdx+rcx*1]
   14001afa4:	mov    QWORD PTR [rcx],rax
   14001afa7:	add    rcx,0x8
   14001afab:	inc    r9
   14001afae:	cmp    r9,r8
   14001afb1:	jne    0x14001afa0
   14001afb3:	mov    QWORD PTR [r10+0x8],rcx
   14001afb7:	lea    rax,[rbp-0x69]
   14001afbb:	mov    QWORD PTR [rsp+0x20],rax
   14001afc0:	mov    r9d,0x10
   14001afc6:	mov    r8,QWORD PTR [r10]
   14001afc9:	lea    rdx,[rbp-0x59]
   14001afcd:	mov    rcx,r10
   14001afd0:	call   0x14000dfb4
   14001afd5:	mov    QWORD PTR [rbx+0x28],0x7
   14001afdd:	mov    QWORD PTR [rbx+0x30],0x8
   14001afe5:	mov    esi,0x80000000
   14001afea:	mov    DWORD PTR [rdi+0x68],esi
   14001afed:	mov    QWORD PTR [rdi+0x70],r15
   14001aff1:	mov    DWORD PTR [rdi+0x80],r15d
   14001aff8:	lea    rax,[rip+0x19d21]        # 0x140034d20
   14001afff:	mov    QWORD PTR [rdi+0x78],rax
   14001b003:	mov    QWORD PTR [rdi+0x88],r15
   14001b00a:	mov    BYTE PTR [rdi+0x90],r15b
   14001b011:	mov    BYTE PTR [rdi+0x91],r15b
   14001b018:	lea    rbx,[rdi+0x98]
   14001b01f:	mov    QWORD PTR [rbp-0x61],rbx
   14001b023:	mov    rcx,rbx
   14001b026:	call   0x140003950
   14001b02b:	nop
   14001b02c:	xor    r9d,r9d
   14001b02f:	xor    edx,edx
   14001b031:	xor    ecx,ecx
   14001b033:	mov    r8d,0x40000000
   14001b039:	call   QWORD PTR [rip+0x17139]        # 0x140032178
   14001b03f:	mov    QWORD PTR [rbx+0x28],rax
   14001b043:	test   rax,rax
   14001b046:	jne    0x14001b076
   14001b048:	call   QWORD PTR [rip+0x1723a]        # 0x140032288
   14001b04e:	movzx  edx,ax
   14001b051:	or     edx,0x80070000
   14001b057:	test   eax,eax
   14001b059:	cmovle edx,eax
   14001b05c:	lea    rcx,[rbp-0x29]
   14001b060:	call   0x140002064
   14001b065:	lea    rdx,[rip+0x2e11c]        # 0x140049188
   14001b06c:	lea    rcx,[rbp-0x29]
   14001b070:	call   0x14002e2da
   14001b075:	int3   
   14001b076:	xor    r9d,r9d
   14001b079:	xor    edx,edx
   14001b07b:	xor    ecx,ecx
   14001b07d:	mov    r8d,0x40000000
   14001b083:	call   QWORD PTR [rip+0x170ef]        # 0x140032178
   14001b089:	mov    QWORD PTR [rbx+0x30],rax
   14001b08d:	test   rax,rax
   14001b090:	jne    0x14001b0c0
   14001b092:	call   QWORD PTR [rip+0x171f0]        # 0x140032288
   14001b098:	movzx  edx,ax
   14001b09b:	or     edx,0x80070000
   14001b0a1:	test   eax,eax
   14001b0a3:	cmovle edx,eax
   14001b0a6:	lea    rcx,[rbp-0x1]
   14001b0aa:	call   0x140002064
   14001b0af:	lea    rdx,[rip+0x2e0d2]        # 0x140049188
   14001b0b6:	lea    rcx,[rbp-0x1]
   14001b0ba:	call   0x14002e2da
   14001b0bf:	int3   
   14001b0c0:	mov    DWORD PTR [rbx+0x3c],0xc0000000
   14001b0c7:	mov    DWORD PTR [rdi+0x114],r15d
   14001b0ce:	mov    DWORD PTR [rdi+0x118],r15d
   14001b0d5:	mov    DWORD PTR [rdi+0x11c],r15d
   14001b0dc:	cmp    QWORD PTR [rdi+0x70],r15
   14001b0e0:	jne    0x14001b103
   14001b0e2:	xor    r9d,r9d
   14001b0e5:	xor    r8d,r8d
   14001b0e8:	lea    edx,[r9+0x1]
   14001b0ec:	xor    ecx,ecx
   14001b0ee:	call   QWORD PTR [rip+0x170a4]        # 0x140032198
   14001b0f4:	mov    QWORD PTR [rdi+0x70],rax
   14001b0f8:	mov    ecx,r15d
   14001b0fb:	test   rax,rax
   14001b0fe:	setne  cl
   14001b101:	jmp    0x14001b11a
   14001b103:	xchg   DWORD PTR [rdi+0x68],esi
   14001b106:	mov    rcx,QWORD PTR [rdi+0x70]
   14001b10a:	test   rcx,rcx
   14001b10d:	je     0x14001b115
   14001b10f:	call   QWORD PTR [rip+0x1708b]        # 0x1400321a0
   14001b115:	mov    ecx,0x1
   14001b11a:	test   ecx,ecx
   14001b11c:	jne    0x14001b167
   14001b11e:	lea    rax,[rip+0x2ff53]        # 0x14004b078
   14001b125:	mov    rcx,QWORD PTR [rip+0x2ff4c]        # 0x14004b078
   14001b12c:	cmp    rcx,rax
   14001b12f:	je     0x14001b14c
   14001b131:	test   BYTE PTR [rcx+0x1c],0x1
   14001b135:	je     0x14001b14c
   14001b137:	mov    edx,0xb
   14001b13c:	lea    r8,[rip+0x1d53d]        # 0x140038680
   14001b143:	mov    rcx,QWORD PTR [rcx+0x10]
   14001b147:	call   0x140001f08
   14001b14c:	lea    rcx,[rbp-0x41]
   14001b150:	call   QWORD PTR [rip+0x17492]        # 0x1400325e8
   14001b156:	lea    rdx,[rip+0x2e13b]        # 0x140049298
   14001b15d:	lea    rcx,[rbp-0x41]
   14001b161:	call   0x14002e2da
   14001b166:	int3   
   14001b167:	lea    rcx,[rdi+0xd8]
   14001b16e:	xor    edx,edx
   14001b170:	lea    r8d,[rdx+0x3c]
   14001b174:	call   0x14002e2ce
   14001b179:	mov    ecx,0x100
   14001b17e:	call   0x140023f10
   14001b183:	mov    QWORD PTR [rbp-0x59],rax
   14001b187:	mov    rdx,r14
   14001b18a:	mov    rcx,rax
   14001b18d:	call   0x1400181e0
   14001b192:	mov    r14,rax
   14001b195:	mov    rsi,QWORD PTR [rdi+0x20]
   14001b199:	test   rsi,rsi
   14001b19c:	je     0x14001b1b7
   14001b19e:	mov    r8,QWORD PTR [rsi]
   14001b1a1:	mov    rbx,QWORD PTR [r8]
   14001b1a4:	mov    rcx,rbx
   14001b1a7:	call   QWORD PTR [rip+0x174fb]        # 0x1400326a8
   14001b1ad:	mov    edx,0x1
   14001b1b2:	mov    rcx,rsi
   14001b1b5:	call   rbx
   14001b1b7:	mov    QWORD PTR [rdi+0x20],r14
   14001b1bb:	mov    rax,rdi
   14001b1be:	mov    rcx,QWORD PTR [rbp+0x27]
   14001b1c2:	xor    rcx,rsp
   14001b1c5:	call   0x14002dd00
   14001b1ca:	mov    rbx,QWORD PTR [rsp+0x110]
   14001b1d2:	add    rsp,0xd0
   14001b1d9:	pop    r15
   14001b1db:	pop    r14
   14001b1dd:	pop    rdi
   14001b1de:	pop    rsi
   14001b1df:	pop    rbp
   14001b1e0:	ret    
   14001b1e1:	int3   
   14001b1e2:	int3   
   14001b1e3:	int3   
   14001b1e4:	int3   
   14001b1e5:	int3   
   14001b1e6:	int3   
   14001b1e7:	int3   
   14001b1e8:	mov    QWORD PTR [rsp+0x8],rbx
   14001b1ed:	push   rdi
   14001b1ee:	sub    rsp,0x20
   14001b1f2:	mov    ebx,edx
   14001b1f4:	mov    rdi,rcx
   14001b1f7:	call   0x14001b284
   14001b1fc:	test   bl,0x1
   14001b1ff:	je     0x14001b20a
   14001b201:	mov    rcx,rdi
   14001b204:	call   QWORD PTR [rip+0x173be]        # 0x1400325c8
   14001b20a:	mov    rax,rdi
   14001b20d:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b212:	add    rsp,0x20
   14001b216:	pop    rdi
   14001b217:	ret    
   14001b218:	int3   
   14001b219:	int3   
   14001b21a:	int3   
   14001b21b:	int3   
   14001b21c:	int3   
   14001b21d:	int3   
   14001b21e:	int3   
   14001b21f:	int3   
   14001b220:	rex push rbx
   14001b222:	sub    rsp,0x20
   14001b226:	mov    rbx,rcx
   14001b229:	mov    rcx,QWORD PTR [rcx+0x10]
   14001b22d:	test   rcx,rcx
   14001b230:	je     0x14001b247
   14001b232:	call   QWORD PTR [rip+0x17390]        # 0x1400325c8
   14001b238:	and    QWORD PTR [rbx+0x10],0x0
   14001b23d:	and    QWORD PTR [rbx+0x18],0x0
   14001b242:	and    QWORD PTR [rbx+0x20],0x0
   14001b247:	mov    rcx,rbx
   14001b24a:	call   0x14001d324
   14001b24f:	mov    rcx,QWORD PTR [rbx]
   14001b252:	add    rsp,0x20
   14001b256:	pop    rbx
   14001b257:	rex.W jmp QWORD PTR [rip+0x1736a]        # 0x1400325c8
   14001b25e:	int3   
   14001b25f:	int3   
   14001b260:	int3   
   14001b261:	int3   
   14001b262:	int3   
   14001b263:	int3   
   14001b264:	sub    rsp,0x28
   14001b268:	mov    rcx,QWORD PTR [rcx+0x8]
   14001b26c:	test   rcx,rcx
   14001b26f:	je     0x14001b277
   14001b271:	call   QWORD PTR [rip+0x16ee1]        # 0x140032158
   14001b277:	add    rsp,0x28
   14001b27b:	ret    
   14001b27c:	int3   
   14001b27d:	int3   
   14001b27e:	int3   
   14001b27f:	int3   
   14001b280:	int3   
   14001b281:	int3   
   14001b282:	int3   
   14001b283:	int3   
   14001b284:	mov    rax,rsp
   14001b287:	mov    QWORD PTR [rax+0x8],rcx
   14001b28b:	push   rdi
   14001b28c:	sub    rsp,0x30
   14001b290:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14001b298:	mov    QWORD PTR [rax+0x10],rbx
   14001b29c:	mov    QWORD PTR [rax+0x18],rsi
   14001b2a0:	mov    rdi,rcx
   14001b2a3:	lea    rax,[rip+0x196b6]        # 0x140034960
   14001b2aa:	mov    QWORD PTR [rcx],rax
   14001b2ad:	lea    rax,[rip+0x1968c]        # 0x140034940
   14001b2b4:	mov    QWORD PTR [rcx+0x8],rax
   14001b2b8:	lea    rbx,[rcx+0x98]
   14001b2bf:	mov    rcx,QWORD PTR [rbx+0x30]
   14001b2c3:	call   QWORD PTR [rip+0x16e8f]        # 0x140032158
   14001b2c9:	mov    rcx,QWORD PTR [rbx+0x28]
   14001b2cd:	call   QWORD PTR [rip+0x16e85]        # 0x140032158
   14001b2d3:	mov    rcx,rbx
   14001b2d6:	call   QWORD PTR [rip+0x16f9c]        # 0x140032278
   14001b2dc:	lea    rcx,[rdi+0x78]
   14001b2e0:	call   0x140029b48
   14001b2e5:	mov    rcx,QWORD PTR [rdi+0x70]
   14001b2e9:	test   rcx,rcx
   14001b2ec:	je     0x14001b2f4
   14001b2ee:	call   QWORD PTR [rip+0x16e64]        # 0x140032158
   14001b2f4:	mov    rcx,QWORD PTR [rdi+0x38]
   14001b2f8:	test   rcx,rcx
   14001b2fb:	je     0x14001b312
   14001b2fd:	call   QWORD PTR [rip+0x172c5]        # 0x1400325c8
   14001b303:	and    QWORD PTR [rdi+0x38],0x0
   14001b308:	and    QWORD PTR [rdi+0x40],0x0
   14001b30d:	and    QWORD PTR [rdi+0x48],0x0
   14001b312:	lea    rcx,[rdi+0x28]
   14001b316:	call   0x14001d324
   14001b31b:	mov    rcx,QWORD PTR [rdi+0x28]
   14001b31f:	call   QWORD PTR [rip+0x172a3]        # 0x1400325c8
   14001b325:	mov    rsi,QWORD PTR [rdi+0x20]
   14001b329:	test   rsi,rsi
   14001b32c:	je     0x14001b348
   14001b32e:	mov    rax,QWORD PTR [rsi]
   14001b331:	mov    rbx,QWORD PTR [rax]
   14001b334:	mov    rcx,rbx
   14001b337:	call   QWORD PTR [rip+0x1736b]        # 0x1400326a8
   14001b33d:	mov    edx,0x1
   14001b342:	mov    rcx,rsi
   14001b345:	call   rbx
   14001b347:	nop
   14001b348:	mov    rsi,QWORD PTR [rdi+0x18]
   14001b34c:	test   rsi,rsi
   14001b34f:	je     0x14001b367
   14001b351:	mov    rax,QWORD PTR [rsi]
   14001b354:	mov    rbx,QWORD PTR [rax+0x8]
   14001b358:	mov    rcx,rbx
   14001b35b:	call   QWORD PTR [rip+0x17347]        # 0x1400326a8
   14001b361:	mov    rcx,rsi
   14001b364:	call   rbx
   14001b366:	nop
   14001b367:	lea    rax,[rip+0x19632]        # 0x1400349a0
   14001b36e:	mov    QWORD PTR [rdi+0x8],rax
   14001b372:	mov    rbx,QWORD PTR [rsp+0x48]
   14001b377:	mov    rsi,QWORD PTR [rsp+0x50]
   14001b37c:	add    rsp,0x30
   14001b380:	pop    rdi
   14001b381:	ret    
   14001b382:	int3   
   14001b383:	int3   
   14001b384:	int3   
   14001b385:	int3   
   14001b386:	int3   
   14001b387:	int3   
   14001b388:	int3   
   14001b389:	int3   
   14001b38a:	int3   
   14001b38b:	int3   
   14001b38c:	int3   
   14001b38d:	int3   
   14001b38e:	int3   
   14001b38f:	int3   
   14001b390:	mov    rax,rsp
   14001b393:	mov    QWORD PTR [rax+0x8],rcx
   14001b397:	push   rsi
   14001b398:	push   r14
   14001b39a:	push   r15
   14001b39c:	sub    rsp,0x50
   14001b3a0:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   14001b3a8:	mov    QWORD PTR [rax+0x18],rbx
   14001b3ac:	mov    r10,rdx
   14001b3af:	test   rdx,rdx
   14001b3b2:	je     0x14001b61d
   14001b3b8:	cmp    r8,0x6c
   14001b3bc:	jne    0x14001b61d
   14001b3c2:	and    QWORD PTR [rax-0x38],0x0
   14001b3c7:	add    rcx,0x70
   14001b3cb:	call   0x140029ab0
   14001b3d0:	test   eax,eax
   14001b3d2:	js     0x14001b3df
   14001b3d4:	mov    QWORD PTR [rsp+0x30],rcx
   14001b3d9:	xor    eax,eax
   14001b3db:	test   eax,eax
   14001b3dd:	jns    0x14001b41a
   14001b3df:	lea    rsi,[rip+0x2fc92]        # 0x14004b078
   14001b3e6:	mov    rcx,QWORD PTR [rip+0x2fc8b]        # 0x14004b078
   14001b3ed:	cmp    rcx,rsi
   14001b3f0:	je     0x14001b5f5
   14001b3f6:	test   BYTE PTR [rcx+0x1c],0x2
   14001b3fa:	je     0x14001b5f5
   14001b400:	mov    edx,0xc
   14001b405:	lea    r8,[rip+0x1d274]        # 0x140038680
   14001b40c:	mov    rcx,QWORD PTR [rcx+0x10]
   14001b410:	call   0x140001f08
   14001b415:	jmp    0x14001b5f5
   14001b41a:	mov    r14,QWORD PTR [r10]
   14001b41d:	mov    QWORD PTR [rsp+0x38],r14
   14001b422:	and    QWORD PTR [rsp+0x88],0x0
   14001b42b:	mov    rcx,QWORD PTR [rsp+0x70]
   14001b430:	add    rcx,0xfffffffffffffff8
   14001b434:	mov    BYTE PTR [rsp+0x20],0x0
   14001b439:	lea    r9,[rsp+0x88]
   14001b441:	mov    r8,r14
   14001b444:	mov    edx,DWORD PTR [r10+0x10]
   14001b448:	call   0x14001c14c
   14001b44d:	nop
   14001b44e:	jmp    0x14001b4ef
   14001b453:	mov    eax,DWORD PTR [rsp+0x78]
   14001b457:	test   eax,eax
   14001b459:	jns    0x14001b4ea
   14001b45f:	lea    rsi,[rip+0x2fc12]        # 0x14004b078
   14001b466:	mov    rcx,QWORD PTR [rip+0x2fc0b]        # 0x14004b078
   14001b46d:	mov    r14,QWORD PTR [rsp+0x38]
   14001b472:	cmp    rcx,rsi
   14001b475:	je     0x14001b492
   14001b477:	test   BYTE PTR [rcx+0x1c],0x2
   14001b47b:	je     0x14001b492
   14001b47d:	mov    edx,0xd
   14001b482:	mov    DWORD PTR [rsp+0x20],eax
   14001b486:	mov    r9,r14
   14001b489:	mov    rcx,QWORD PTR [rcx+0x10]
   14001b48d:	call   0x14001ad5c
   14001b492:	mov    r15,QWORD PTR [rsp+0x88]
   14001b49a:	xor    ebx,ebx
   14001b49c:	mov    QWORD PTR [rsp+0x88],rbx
   14001b4a4:	test   r15,r15
   14001b4a7:	je     0x14001b4fe
   14001b4a9:	add    r15,0x10
   14001b4ad:	mov    eax,DWORD PTR [r15+0x8]
   14001b4b1:	cmp    eax,0x1
   14001b4b4:	jne    0x14001b4bc
   14001b4b6:	mov    DWORD PTR [r15+0x8],ebx
   14001b4ba:	jmp    0x14001b4ca
   14001b4bc:	or     eax,0xffffffff
   14001b4bf:	lock xadd DWORD PTR [r15+0x8],eax
   14001b4c5:	sub    eax,0x1
   14001b4c8:	jg     0x14001b4f6
   14001b4ca:	test   r15,r15
   14001b4cd:	je     0x14001b4f6
   14001b4cf:	mov    rax,QWORD PTR [r15]
   14001b4d2:	mov    rbx,QWORD PTR [rax]
   14001b4d5:	mov    rcx,rbx
   14001b4d8:	call   QWORD PTR [rip+0x171ca]        # 0x1400326a8
   14001b4de:	mov    edx,0x1
   14001b4e3:	mov    rcx,r15
   14001b4e6:	call   rbx
   14001b4e8:	jmp    0x14001b4f6
   14001b4ea:	mov    r14,QWORD PTR [rsp+0x38]
   14001b4ef:	lea    rsi,[rip+0x2fb82]        # 0x14004b078
   14001b4f6:	mov    rbx,QWORD PTR [rsp+0x88]
   14001b4fe:	mov    rcx,QWORD PTR [rip+0x2fb73]        # 0x14004b078
   14001b505:	cmp    rcx,rsi
   14001b508:	je     0x14001b536
   14001b50a:	test   BYTE PTR [rcx+0x1c],0x2
   14001b50e:	je     0x14001b536
   14001b510:	lea    rdx,[rip+0x1d161]        # 0x140038678
   14001b517:	lea    rax,[rip+0x1cca6]        # 0x1400381c4
   14001b51e:	test   rbx,rbx
   14001b521:	cmovne rax,rdx
   14001b525:	mov    QWORD PTR [rsp+0x20],rax
   14001b52a:	mov    r9,r14
   14001b52d:	mov    rcx,QWORD PTR [rcx+0x10]
   14001b531:	call   0x14001adb0
   14001b536:	test   rbx,rbx
   14001b539:	je     0x14001b572
   14001b53b:	mov    DWORD PTR [rbx+0xc8],0x1
   14001b545:	mov    rdx,QWORD PTR [rbx+0x20]
   14001b549:	mov    rcx,QWORD PTR [rbx+0xb0]
   14001b550:	call   0x14001ef40
   14001b555:	test   eax,eax
   14001b557:	jns    0x14001b5af
   14001b559:	mov    rcx,QWORD PTR [rip+0x2fb18]        # 0x14004b078
   14001b560:	cmp    rcx,rsi
   14001b563:	je     0x14001b5af
   14001b565:	test   BYTE PTR [rcx+0x1c],0x2
   14001b569:	je     0x14001b5af
   14001b56b:	mov    edx,0xf
   14001b570:	jmp    0x14001b59e
   14001b572:	mov    rax,QWORD PTR [rsp+0x70]
   14001b577:	mov    rdx,r14
   14001b57a:	mov    rcx,QWORD PTR [rax+0x18]
   14001b57e:	call   0x14001ef40
   14001b583:	test   eax,eax
   14001b585:	jns    0x14001b5af
   14001b587:	mov    rcx,QWORD PTR [rip+0x2faea]        # 0x14004b078
   14001b58e:	cmp    rcx,rsi
   14001b591:	je     0x14001b5af
   14001b593:	test   BYTE PTR [rcx+0x1c],0x2
   14001b597:	je     0x14001b5af
   14001b599:	mov    edx,0x10
   14001b59e:	mov    DWORD PTR [rsp+0x20],eax
   14001b5a2:	mov    r9,r14
   14001b5a5:	mov    rcx,QWORD PTR [rcx+0x10]
   14001b5a9:	call   0x14001ad5c
   14001b5ae:	nop
   14001b5af:	test   rbx,rbx
   14001b5b2:	je     0x14001b5f5
   14001b5b4:	lea    rsi,[rbx+0x10]
   14001b5b8:	mov    eax,DWORD PTR [rsi+0x8]
   14001b5bb:	cmp    eax,0x1
   14001b5be:	jne    0x14001b5c9
   14001b5c0:	mov    DWORD PTR [rsi+0x8],0x0
   14001b5c7:	jmp    0x14001b5d6
   14001b5c9:	or     eax,0xffffffff
   14001b5cc:	lock xadd DWORD PTR [rsi+0x8],eax
   14001b5d1:	sub    eax,0x1
   14001b5d4:	jg     0x14001b5f5
   14001b5d6:	test   rsi,rsi
   14001b5d9:	je     0x14001b5f5
   14001b5db:	mov    rax,QWORD PTR [rsi]
   14001b5de:	mov    rbx,QWORD PTR [rax]
   14001b5e1:	mov    rcx,rbx
   14001b5e4:	call   QWORD PTR [rip+0x170be]        # 0x1400326a8
   14001b5ea:	mov    edx,0x1
   14001b5ef:	mov    rcx,rsi
   14001b5f2:	call   rbx
   14001b5f4:	nop
   14001b5f5:	mov    rax,QWORD PTR [rsp+0x30]
   14001b5fa:	test   rax,rax
   14001b5fd:	je     0x14001b652
   14001b5ff:	or     ecx,0xffffffff
   14001b602:	lock xadd DWORD PTR [rax+0x8],ecx
   14001b607:	dec    ecx
   14001b609:	cmp    ecx,0x80000000
   14001b60f:	jne    0x14001b652
   14001b611:	mov    rcx,QWORD PTR [rsp+0x30]
   14001b616:	call   0x140029c90
   14001b61b:	jmp    0x14001b652
   14001b61d:	lea    rsi,[rip+0x2fa54]        # 0x14004b078
   14001b624:	mov    rcx,QWORD PTR [rip+0x2fa4d]        # 0x14004b078
   14001b62b:	cmp    rcx,rsi
   14001b62e:	je     0x14001b652
   14001b630:	test   BYTE PTR [rcx+0x1c],0x1
   14001b634:	je     0x14001b652
   14001b636:	mov    edx,0xa
   14001b63b:	lea    r9,[rip+0x1cb2e]        # 0x140038170
   14001b642:	lea    r8,[rip+0x18d87]        # 0x1400343d0
   14001b649:	mov    rcx,QWORD PTR [rcx+0x10]
   14001b64d:	call   0x1400038e0
   14001b652:	mov    rbx,QWORD PTR [rsp+0x80]
   14001b65a:	add    rsp,0x50
   14001b65e:	pop    r15
   14001b660:	pop    r14
   14001b662:	pop    rsi
   14001b663:	ret    
   14001b664:	int3   
   14001b665:	int3   
   14001b666:	int3   
   14001b667:	int3   
   14001b668:	int3   
   14001b669:	int3   
   14001b66a:	int3   
   14001b66b:	int3   
   14001b66c:	int3   
   14001b66d:	int3   
   14001b66e:	int3   
   14001b66f:	int3   
   14001b670:	mov    rax,rsp
   14001b673:	mov    QWORD PTR [rax+0x8],rcx
   14001b677:	push   rdi
   14001b678:	push   r12
   14001b67a:	push   r13
   14001b67c:	push   r14
   14001b67e:	push   r15
   14001b680:	sub    rsp,0x60
   14001b684:	mov    QWORD PTR [rax-0x40],0xfffffffffffffffe
   14001b68c:	mov    QWORD PTR [rax+0x10],rbx
   14001b690:	mov    QWORD PTR [rax+0x18],rsi
   14001b694:	mov    r9d,r8d
   14001b697:	mov    r15,rdx
   14001b69a:	mov    r13,rcx
   14001b69d:	xor    esi,esi
   14001b69f:	mov    r12d,esi
   14001b6a2:	mov    QWORD PTR [rsp+0x40],rsi
   14001b6a7:	mov    edi,esi
   14001b6a9:	mov    QWORD PTR [rax-0x58],rsi
   14001b6ad:	mov    r14d,esi
   14001b6b0:	mov    ebx,esi
   14001b6b2:	mov    QWORD PTR [rax-0x50],rbx
   14001b6b6:	add    rcx,0x70
   14001b6ba:	call   0x140029ab0
   14001b6bf:	test   eax,eax
   14001b6c1:	js     0x14001b6d1
   14001b6c3:	mov    rbx,rcx
   14001b6c6:	mov    QWORD PTR [rsp+0x38],rcx
   14001b6cb:	mov    eax,esi
   14001b6cd:	test   eax,eax
   14001b6cf:	jns    0x14001b726
   14001b6d1:	lea    r15,[rip+0x2f9a0]        # 0x14004b078
   14001b6d8:	mov    rcx,QWORD PTR [rip+0x2f999]        # 0x14004b078
   14001b6df:	cmp    rcx,r15
   14001b6e2:	je     0x14001b700
   14001b6e4:	test   BYTE PTR [rcx+0x1c],0x2
   14001b6e8:	je     0x14001b700
   14001b6ea:	mov    edx,0x11
   14001b6ef:	lea    r8,[rip+0x1cf8a]        # 0x140038680
   14001b6f6:	mov    rcx,QWORD PTR [rcx+0x10]
   14001b6fa:	call   0x140001f08
   14001b6ff:	nop
   14001b700:	test   rbx,rbx
   14001b703:	je     0x14001b721
   14001b705:	or     eax,0xffffffff
   14001b708:	lock xadd DWORD PTR [rbx+0x8],eax
   14001b70d:	dec    eax
   14001b70f:	cmp    eax,0x80000000
   14001b714:	jne    0x14001b721
   14001b716:	mov    rcx,QWORD PTR [rsp+0x38]
   14001b71b:	call   0x140029c90
   14001b720:	nop
   14001b721:	jmp    0x14001b92f
   14001b726:	mov    edx,DWORD PTR [r15+0x10]
   14001b72a:	mov    ecx,edx
   14001b72c:	sub    ecx,0xc
   14001b72f:	je     0x14001b801
   14001b735:	cmp    ecx,0x1
   14001b738:	je     0x14001b79b
   14001b73a:	mov    r12,QWORD PTR [r15]
   14001b73d:	mov    QWORD PTR [rsp+0x40],r12
   14001b742:	test   BYTE PTR [rip+0x34877],0x1        # 0x14004ffc0
   14001b749:	je     0x14001b763
   14001b74b:	mov    DWORD PTR [rsp+0x28],edx
   14001b74f:	lea    rax,[rip+0x1ca7a]        # 0x1400381d0
   14001b756:	mov    QWORD PTR [rsp+0x20],rax
   14001b75b:	mov    r9,r12
   14001b75e:	call   0x14001d970
   14001b763:	lea    rcx,[r13-0x8]
   14001b767:	mov    BYTE PTR [rsp+0x20],0x1
   14001b76c:	lea    r9,[rsp+0x30]
   14001b771:	mov    r8,r12
   14001b774:	mov    edx,DWORD PTR [r15+0x10]
   14001b778:	call   0x14001c14c
   14001b77d:	mov    rdi,QWORD PTR [rsp+0x30]
   14001b782:	test   rdi,rdi
   14001b785:	je     0x14001b824
   14001b78b:	mov    rdx,r15
   14001b78e:	mov    rcx,rdi
   14001b791:	call   0x14001e1a8
   14001b796:	jmp    0x14001b824
   14001b79b:	mov    rcx,rsi
   14001b79e:	lea    rax,[r9-0x6c]
   14001b7a2:	add    r15,0x6c
   14001b7a6:	je     0x14001b7dd
   14001b7a8:	cmp    rax,0x7fffffff
   14001b7ae:	ja     0x14001b7dd
   14001b7b0:	mov    rdx,rax
   14001b7b3:	mov    rcx,r15
   14001b7b6:	mov    r14d,esi
   14001b7b9:	test   rax,rax
   14001b7bc:	je     0x14001b7da
   14001b7be:	cmp    WORD PTR [rcx],si
   14001b7c1:	je     0x14001b7cd
   14001b7c3:	add    rcx,0x2
   14001b7c7:	sub    rdx,0x1
   14001b7cb:	jne    0x14001b7be
   14001b7cd:	test   rdx,rdx
   14001b7d0:	je     0x14001b7da
   14001b7d2:	mov    rcx,rax
   14001b7d5:	sub    rcx,rdx
   14001b7d8:	jmp    0x14001b7e3
   14001b7da:	mov    rcx,rsi
   14001b7dd:	mov    r14d,0x80070057
   14001b7e3:	test   r14d,r14d
   14001b7e6:	cmovs  rcx,rsi
   14001b7ea:	mov    QWORD PTR [rsp+0x50],rcx
   14001b7ef:	js     0x14001b824
   14001b7f1:	mov    rdx,r15
   14001b7f4:	mov    ecx,0x12f
   14001b7f9:	call   QWORD PTR [rip+0x16c41]        # 0x140032440
   14001b7ff:	jmp    0x14001b824
   14001b801:	lea    r8,[r15+0x2c]
   14001b805:	lea    rcx,[r13+0xd0]
   14001b80c:	mov    edx,0x3c
   14001b811:	mov    r9d,edx
   14001b814:	call   QWORD PTR [rip+0x16da6]        # 0x1400325c0
   14001b81a:	lea    rcx,[r13-0x8]
   14001b81e:	call   0x14001b950
   14001b823:	nop
   14001b824:	jmp    0x14001b847
   14001b826:	xor    esi,esi
   14001b828:	mov    r13,QWORD PTR [rsp+0x90]
   14001b830:	mov    r12,QWORD PTR [rsp+0x40]
   14001b835:	mov    rdi,QWORD PTR [rsp+0x30]
   14001b83a:	mov    r14d,DWORD PTR [rsp+0xa8]
   14001b842:	mov    rbx,QWORD PTR [rsp+0x38]
   14001b847:	mov    ecx,0x80000000
   14001b84c:	lea    eax,[r14+rcx*1]
   14001b850:	test   ecx,eax
   14001b852:	jne    0x14001b8c9
   14001b854:	cmp    r14d,0x8007045b
   14001b85b:	je     0x14001b8c9
   14001b85d:	lea    r15,[rip+0x2f814]        # 0x14004b078
   14001b864:	mov    rcx,QWORD PTR [rip+0x2f80d]        # 0x14004b078
   14001b86b:	cmp    rcx,r15
   14001b86e:	je     0x14001b88e
   14001b870:	test   BYTE PTR [rcx+0x1c],0x1
   14001b874:	je     0x14001b88e
   14001b876:	mov    edx,0x12
   14001b87b:	mov    r9d,r14d
   14001b87e:	lea    r8,[rip+0x1cdfb]        # 0x140038680
   14001b885:	mov    rcx,QWORD PTR [rcx+0x10]
   14001b889:	call   0x140001f70
   14001b88e:	mov    rdx,r12
   14001b891:	mov    rcx,QWORD PTR [r13+0x18]
   14001b895:	call   0x14001edfc
   14001b89a:	test   eax,eax
   14001b89c:	jns    0x14001b8c9
   14001b89e:	mov    rcx,QWORD PTR [rip+0x2f7d3]        # 0x14004b078
   14001b8a5:	cmp    rcx,r15
   14001b8a8:	je     0x14001b8c9
   14001b8aa:	test   BYTE PTR [rcx+0x1c],0x2
   14001b8ae:	je     0x14001b8c9
   14001b8b0:	mov    edx,0x13
   14001b8b5:	mov    r9d,eax
   14001b8b8:	lea    r8,[rip+0x1cdc1]        # 0x140038680
   14001b8bf:	mov    rcx,QWORD PTR [rcx+0x10]
   14001b8c3:	call   0x140001f70
   14001b8c8:	nop
   14001b8c9:	test   rbx,rbx
   14001b8cc:	je     0x14001b8ee
   14001b8ce:	or     eax,0xffffffff
   14001b8d1:	lock xadd DWORD PTR [rbx+0x8],eax
   14001b8d6:	dec    eax
   14001b8d8:	cmp    eax,0x80000000
   14001b8dd:	jne    0x14001b8e9
   14001b8df:	mov    rcx,QWORD PTR [rsp+0x38]
   14001b8e4:	call   0x140029c90
   14001b8e9:	mov    rdi,QWORD PTR [rsp+0x30]
   14001b8ee:	test   rdi,rdi
   14001b8f1:	je     0x14001b92f
   14001b8f3:	add    rdi,0x10
   14001b8f7:	mov    eax,DWORD PTR [rdi+0x8]
   14001b8fa:	cmp    eax,0x1
   14001b8fd:	jne    0x14001b904
   14001b8ff:	mov    DWORD PTR [rdi+0x8],esi
   14001b902:	jmp    0x14001b911
   14001b904:	or     eax,0xffffffff
   14001b907:	lock xadd DWORD PTR [rdi+0x8],eax
   14001b90c:	sub    eax,0x1
   14001b90f:	jg     0x14001b92f
   14001b911:	test   rdi,rdi
   14001b914:	je     0x14001b92f
   14001b916:	mov    rax,QWORD PTR [rdi]
   14001b919:	mov    rbx,QWORD PTR [rax]
   14001b91c:	mov    rcx,rbx
   14001b91f:	call   QWORD PTR [rip+0x16d83]        # 0x1400326a8
   14001b925:	mov    edx,0x1
   14001b92a:	mov    rcx,rdi
   14001b92d:	call   rbx
   14001b92f:	lea    r11,[rsp+0x60]
   14001b934:	mov    rbx,QWORD PTR [r11+0x38]
   14001b938:	mov    rsi,QWORD PTR [r11+0x40]
   14001b93c:	mov    rsp,r11
   14001b93f:	pop    r15
   14001b941:	pop    r14
   14001b943:	pop    r13
   14001b945:	pop    r12
   14001b947:	pop    rdi
   14001b948:	ret    
   14001b949:	int3   
   14001b94a:	int3   
   14001b94b:	int3   
   14001b94c:	int3   
   14001b94d:	int3   
   14001b94e:	int3   
   14001b94f:	int3   
   14001b950:	mov    QWORD PTR [rsp+0x20],rbx
   14001b955:	push   rbp
   14001b956:	push   rsi
   14001b957:	push   rdi
   14001b958:	push   r12
   14001b95a:	push   r13
   14001b95c:	push   r14
   14001b95e:	push   r15
   14001b960:	sub    rsp,0xb0
   14001b967:	xor    ebx,ebx
   14001b969:	mov    rdi,rcx
   14001b96c:	mov    esi,ebx
   14001b96e:	lock xadd DWORD PTR [rcx+0x114],esi
   14001b976:	cmp    DWORD PTR [rcx+0xe8],ebx
   14001b97c:	mov    edx,ebx
   14001b97e:	mov    ecx,0xc3
   14001b983:	setne  dl
   14001b986:	call   QWORD PTR [rip+0x16aac]        # 0x140032438
   14001b98c:	mov    edx,DWORD PTR [rdi+0xe4]
   14001b992:	mov    ecx,0xc4
   14001b997:	add    edx,DWORD PTR [rdi+0xf4]
   14001b99d:	call   QWORD PTR [rip+0x16a95]        # 0x140032438
   14001b9a3:	mov    edx,esi
   14001b9a5:	mov    ecx,0xbf
   14001b9aa:	call   QWORD PTR [rip+0x16a88]        # 0x140032438
   14001b9b0:	mov    rax,QWORD PTR [rdi+0x20]
   14001b9b4:	cmp    DWORD PTR [rax+0x2c],ebx
   14001b9b7:	je     0x14001b9f1
   14001b9b9:	cmp    DWORD PTR [rax+0x30],ebx
   14001b9bc:	je     0x14001b9f1
   14001b9be:	mov    edx,DWORD PTR [rdi+0xe0]
   14001b9c4:	mov    ecx,0xc0
   14001b9c9:	call   QWORD PTR [rip+0x16a69]        # 0x140032438
   14001b9cf:	mov    edx,DWORD PTR [rdi+0xd8]
   14001b9d5:	mov    ecx,0xc1
   14001b9da:	call   QWORD PTR [rip+0x16a58]        # 0x140032438
   14001b9e0:	mov    edx,DWORD PTR [rdi+0xdc]
   14001b9e6:	mov    ecx,0xc2
   14001b9eb:	call   QWORD PTR [rip+0x16a47]        # 0x140032438
   14001b9f1:	mov    edx,DWORD PTR [rdi+0x104]
   14001b9f7:	mov    ecx,DWORD PTR [rdi+0x100]
   14001b9fd:	call   0x14001d3d8
   14001ba02:	mov    edx,eax
   14001ba04:	mov    ecx,0x110
   14001ba09:	mov    r14d,eax
   14001ba0c:	call   QWORD PTR [rip+0x169c6]        # 0x1400323d8
   14001ba12:	mov    ecx,DWORD PTR [rdi+0xf8]
   14001ba18:	add    ecx,DWORD PTR [rdi+0xfc]
   14001ba1e:	mov    edx,DWORD PTR [rdi+0x100]
   14001ba24:	call   0x14001d3d8
   14001ba29:	mov    edx,eax
   14001ba2b:	mov    ecx,0x103
   14001ba30:	mov    r15d,eax
   14001ba33:	call   QWORD PTR [rip+0x1699f]        # 0x1400323d8
   14001ba39:	mov    edx,DWORD PTR [rdi+0x100]
   14001ba3f:	mov    ecx,DWORD PTR [rdi+0xfc]
   14001ba45:	call   0x14001d3d8
   14001ba4a:	mov    edx,eax
   14001ba4c:	mov    ecx,0x104
   14001ba51:	mov    r12d,eax
   14001ba54:	call   QWORD PTR [rip+0x1697e]        # 0x1400323d8
   14001ba5a:	mov    edx,DWORD PTR [rdi+0x100]
   14001ba60:	mov    ecx,DWORD PTR [rdi+0xf8]
   14001ba66:	call   0x14001d3d8
   14001ba6b:	mov    edx,eax
   14001ba6d:	mov    ecx,0x106
   14001ba72:	mov    r13d,eax
   14001ba75:	call   QWORD PTR [rip+0x1695d]        # 0x1400323d8
   14001ba7b:	mov    ecx,DWORD PTR [rdi+0xe4]
   14001ba81:	add    ecx,DWORD PTR [rdi+0xf4]
   14001ba87:	mov    edx,DWORD PTR [rdi+0x100]
   14001ba8d:	call   0x14001d3d8
   14001ba92:	mov    edx,eax
   14001ba94:	mov    DWORD PTR [rsp+0xf8],eax
   14001ba9b:	mov    ecx,0x10f
   14001baa0:	call   QWORD PTR [rip+0x16932]        # 0x1400323d8
   14001baa6:	mov    rcx,QWORD PTR [rdi+0x20]
   14001baaa:	mov    edx,DWORD PTR [rcx+0x1c]
   14001baad:	mov    ecx,DWORD PTR [rdi+0xec]
   14001bab3:	call   0x14001d3d8
   14001bab8:	mov    edx,eax
   14001baba:	mov    DWORD PTR [rsp+0x100],eax
   14001bac1:	mov    ecx,0x10b
   14001bac6:	call   QWORD PTR [rip+0x16914]        # 0x1400323e0
   14001bacc:	mov    eax,DWORD PTR [rdi+0x110]
   14001bad2:	mov    rbp,rbx
   14001bad5:	test   eax,eax
   14001bad7:	je     0x14001baea
   14001bad9:	mov    ecx,eax
   14001badb:	mov    rax,QWORD PTR [rdi+0x108]
   14001bae2:	cqo    
   14001bae4:	idiv   rcx
   14001bae7:	mov    rbp,rax
   14001baea:	mov    edx,ebp
   14001baec:	mov    ecx,0x10a
   14001baf1:	call   QWORD PTR [rip+0x168e1]        # 0x1400323d8
   14001baf7:	mov    DWORD PTR [rsp+0xf0],ebx
   14001bafe:	call   QWORD PTR [rip+0x1694c]        # 0x140032450
   14001bb04:	mov    rbx,QWORD PTR [rax+0xa0]
   14001bb0b:	mov    rcx,rbx
   14001bb0e:	call   QWORD PTR [rip+0x16b94]        # 0x1400326a8
   14001bb14:	lea    r8,[rsp+0xf0]
   14001bb1c:	xor    edx,edx
   14001bb1e:	lea    rcx,[rip+0x1b18b]        # 0x140036cb0
   14001bb25:	call   rbx
   14001bb27:	cmp    DWORD PTR [rsp+0xf0],0x0
   14001bb2f:	mov    ebx,DWORD PTR [rsp+0xf8]
   14001bb36:	je     0x14001bbd9
   14001bb3c:	mov    eax,DWORD PTR [rsp+0x100]
   14001bb43:	lea    rcx,[rip+0x1c696]        # 0x1400381e0
   14001bb4a:	mov    r9d,DWORD PTR [rdi+0xf4]
   14001bb51:	mov    edx,esi
   14001bb53:	mov    r8d,DWORD PTR [rdi+0xe4]
   14001bb5a:	mov    DWORD PTR [rsp+0x90],ebp
   14001bb61:	mov    DWORD PTR [rsp+0x88],eax
   14001bb68:	mov    eax,DWORD PTR [rdi+0xfc]
   14001bb6e:	mov    DWORD PTR [rsp+0x80],ebx
   14001bb75:	mov    DWORD PTR [rsp+0x78],r13d
   14001bb7a:	mov    DWORD PTR [rsp+0x70],r12d
   14001bb7f:	mov    DWORD PTR [rsp+0x68],r15d
   14001bb84:	mov    DWORD PTR [rsp+0x60],r14d
   14001bb89:	mov    DWORD PTR [rsp+0x58],eax
   14001bb8d:	mov    eax,DWORD PTR [rdi+0xf8]
   14001bb93:	mov    DWORD PTR [rsp+0x50],eax
   14001bb97:	mov    eax,DWORD PTR [rdi+0x100]
   14001bb9d:	mov    DWORD PTR [rsp+0x48],eax
   14001bba1:	mov    eax,DWORD PTR [rdi+0xf0]
   14001bba7:	mov    DWORD PTR [rsp+0x40],eax
   14001bbab:	mov    eax,DWORD PTR [rdi+0xec]
   14001bbb1:	mov    DWORD PTR [rsp+0x38],eax
   14001bbb5:	mov    eax,DWORD PTR [rdi+0xd8]
   14001bbbb:	mov    DWORD PTR [rsp+0x30],eax
   14001bbbf:	mov    eax,DWORD PTR [rdi+0xdc]
   14001bbc5:	mov    DWORD PTR [rsp+0x28],eax
   14001bbc9:	mov    eax,DWORD PTR [rdi+0xe0]
   14001bbcf:	mov    DWORD PTR [rsp+0x20],eax
   14001bbd3:	call   QWORD PTR [rip+0x16757]        # 0x140032330
   14001bbd9:	mov    rcx,QWORD PTR [rip+0x2f498]        # 0x14004b078
   14001bbe0:	lea    rax,[rip+0x2f491]        # 0x14004b078
   14001bbe7:	cmp    rcx,rax
   14001bbea:	je     0x14001bc9f
   14001bbf0:	test   BYTE PTR [rcx+0x1c],0x4
   14001bbf4:	je     0x14001bc9f
   14001bbfa:	mov    eax,DWORD PTR [rsp+0x100]
   14001bc01:	mov    r9d,r14d
   14001bc04:	mov    rcx,QWORD PTR [rcx+0x10]
   14001bc08:	mov    DWORD PTR [rsp+0xa0],ebp
   14001bc0f:	mov    DWORD PTR [rsp+0x98],eax
   14001bc16:	mov    eax,DWORD PTR [rdi+0xfc]
   14001bc1c:	mov    DWORD PTR [rsp+0x90],ebx
   14001bc23:	mov    DWORD PTR [rsp+0x88],r13d
   14001bc2b:	mov    DWORD PTR [rsp+0x80],r12d
   14001bc33:	mov    DWORD PTR [rsp+0x78],r15d
   14001bc38:	mov    DWORD PTR [rsp+0x70],eax
   14001bc3c:	mov    eax,DWORD PTR [rdi+0xf8]
   14001bc42:	mov    DWORD PTR [rsp+0x68],eax
   14001bc46:	mov    eax,DWORD PTR [rdi+0x100]
   14001bc4c:	mov    DWORD PTR [rsp+0x60],eax
   14001bc50:	mov    eax,DWORD PTR [rdi+0xf0]
   14001bc56:	mov    DWORD PTR [rsp+0x58],eax
   14001bc5a:	mov    eax,DWORD PTR [rdi+0xec]
   14001bc60:	mov    DWORD PTR [rsp+0x50],eax
   14001bc64:	mov    eax,DWORD PTR [rdi+0xd8]
   14001bc6a:	mov    DWORD PTR [rsp+0x48],eax
   14001bc6e:	mov    eax,DWORD PTR [rdi+0xdc]
   14001bc74:	mov    DWORD PTR [rsp+0x40],eax
   14001bc78:	mov    eax,DWORD PTR [rdi+0xe0]
   14001bc7e:	mov    DWORD PTR [rsp+0x38],eax
   14001bc82:	mov    eax,DWORD PTR [rdi+0xf4]
   14001bc88:	mov    DWORD PTR [rsp+0x30],eax
   14001bc8c:	mov    eax,DWORD PTR [rdi+0xe4]
   14001bc92:	mov    DWORD PTR [rsp+0x28],eax
   14001bc96:	mov    DWORD PTR [rsp+0x20],esi
   14001bc9a:	call   0x14001a9d8
   14001bc9f:	mov    rbx,QWORD PTR [rsp+0x108]
   14001bca7:	add    rsp,0xb0
   14001bcae:	pop    r15
   14001bcb0:	pop    r14
   14001bcb2:	pop    r13
   14001bcb4:	pop    r12
   14001bcb6:	pop    rdi
   14001bcb7:	pop    rsi
   14001bcb8:	pop    rbp
   14001bcb9:	ret    
   14001bcba:	int3   
   14001bcbb:	int3   
   14001bcbc:	int3   
   14001bcbd:	int3   
   14001bcbe:	int3   
   14001bcbf:	int3   
   14001bcc0:	mov    rax,rsp
   14001bcc3:	push   rsi
   14001bcc4:	push   rdi
   14001bcc5:	push   r12
   14001bcc7:	push   r14
   14001bcc9:	push   r15
   14001bccb:	sub    rsp,0x80
   14001bcd2:	mov    QWORD PTR [rax-0x30],0xfffffffffffffffe
   14001bcda:	mov    QWORD PTR [rax+0x10],rbx
   14001bcde:	mov    QWORD PTR [rax+0x18],rbp
   14001bce2:	mov    r14d,r9d
   14001bce5:	mov    r15b,r8b
   14001bce8:	mov    r12b,dl
   14001bceb:	mov    rbp,rcx
   14001bcee:	and    QWORD PTR [rax+0x8],0x0
   14001bcf3:	add    rcx,0x78
   14001bcf7:	call   0x140029ab0
   14001bcfc:	test   eax,eax
   14001bcfe:	js     0x14001bd0e
   14001bd00:	mov    QWORD PTR [rsp+0xb0],rcx
   14001bd08:	xor    eax,eax
   14001bd0a:	test   eax,eax
   14001bd0c:	jns    0x14001bd16
   14001bd0e:	mov    ecx,eax
   14001bd10:	call   0x140029d64
   14001bd15:	int3   
   14001bd16:	lea    rbx,[rbp+0x98]
   14001bd1d:	mov    QWORD PTR [rsp+0x70],rbx
   14001bd22:	mov    rcx,rbx
   14001bd25:	call   QWORD PTR [rip+0x163dd]        # 0x140032108
   14001bd2b:	mov    eax,0x40000000
   14001bd30:	xchg   DWORD PTR [rbx+0x3c],eax
   14001bd33:	add    eax,0x40000000
   14001bd38:	mov    rdi,QWORD PTR [rsp+0x70]
   14001bd3d:	mov    DWORD PTR [rdi+0x38],eax
   14001bd40:	xor    esi,esi
   14001bd42:	test   eax,eax
   14001bd44:	jle    0x14001bd5a
   14001bd46:	or     edx,0xffffffff
   14001bd49:	mov    rcx,QWORD PTR [rdi+0x28]
   14001bd4d:	call   QWORD PTR [rip+0x1642d]        # 0x140032180
   14001bd53:	inc    esi
   14001bd55:	cmp    esi,DWORD PTR [rdi+0x38]
   14001bd58:	jl     0x14001bd46
   14001bd5a:	mov    eax,DWORD PTR [rsp+0x118]
   14001bd61:	mov    DWORD PTR [rsp+0x68],eax
   14001bd65:	mov    eax,DWORD PTR [rsp+0x110]
   14001bd6c:	mov    DWORD PTR [rsp+0x60],eax
   14001bd70:	mov    eax,DWORD PTR [rsp+0x108]
   14001bd77:	mov    DWORD PTR [rsp+0x58],eax
   14001bd7b:	mov    eax,DWORD PTR [rsp+0x100]
   14001bd82:	mov    DWORD PTR [rsp+0x50],eax
   14001bd86:	mov    eax,DWORD PTR [rsp+0xf8]
   14001bd8d:	mov    DWORD PTR [rsp+0x48],eax
   14001bd91:	mov    eax,DWORD PTR [rsp+0xf0]
   14001bd98:	mov    DWORD PTR [rsp+0x40],eax
   14001bd9c:	mov    eax,DWORD PTR [rsp+0xe8]
   14001bda3:	mov    DWORD PTR [rsp+0x38],eax
   14001bda7:	mov    eax,DWORD PTR [rsp+0xe0]
   14001bdae:	mov    DWORD PTR [rsp+0x30],eax
   14001bdb2:	mov    eax,DWORD PTR [rsp+0xd8]
   14001bdb9:	mov    DWORD PTR [rsp+0x28],eax
   14001bdbd:	mov    eax,DWORD PTR [rsp+0xd0]
   14001bdc4:	mov    DWORD PTR [rsp+0x20],eax
   14001bdc8:	mov    r9d,r14d
   14001bdcb:	mov    r8b,r15b
   14001bdce:	mov    dl,r12b
   14001bdd1:	mov    rcx,QWORD PTR [rbp+0x20]
   14001bdd5:	call   0x1400197a4
   14001bdda:	nop
   14001bddb:	mov    ecx,0xc0000000
   14001bde0:	xchg   DWORD PTR [rbx+0x3c],ecx
   14001bde3:	mov    edx,DWORD PTR [rdi+0x38]
   14001bde6:	add    edx,0xc0000000
   14001bdec:	add    edx,ecx
   14001bdee:	mov    rbx,QWORD PTR [rsp+0x70]
   14001bdf3:	test   edx,edx
   14001bdf5:	jle    0x14001be04
   14001bdf7:	xor    r8d,r8d
   14001bdfa:	mov    rcx,QWORD PTR [rbx+0x30]
   14001bdfe:	call   QWORD PTR [rip+0x16384]        # 0x140032188
   14001be04:	mov    rcx,rbx
   14001be07:	call   QWORD PTR [rip+0x162eb]        # 0x1400320f8
   14001be0d:	nop
   14001be0e:	mov    rax,QWORD PTR [rsp+0xb0]
   14001be16:	test   rax,rax
   14001be19:	je     0x14001be3a
   14001be1b:	or     ecx,0xffffffff
   14001be1e:	lock xadd DWORD PTR [rax+0x8],ecx
   14001be23:	dec    ecx
   14001be25:	cmp    ecx,0x80000000
   14001be2b:	jne    0x14001be3a
   14001be2d:	mov    rcx,QWORD PTR [rsp+0xb0]
   14001be35:	call   0x140029c90
   14001be3a:	lea    r11,[rsp+0x80]
   14001be42:	mov    rbx,QWORD PTR [r11+0x38]
   14001be46:	mov    rbp,QWORD PTR [r11+0x40]
   14001be4a:	mov    rsp,r11
   14001be4d:	pop    r15
   14001be4f:	pop    r14
   14001be51:	pop    r12
   14001be53:	pop    rdi
   14001be54:	pop    rsi
   14001be55:	ret    
   14001be56:	int3   
   14001be57:	int3   
   14001be58:	int3   
   14001be59:	int3   
   14001be5a:	int3   
   14001be5b:	int3   
   14001be5c:	int3   
   14001be5d:	int3   
   14001be5e:	int3   
   14001be5f:	int3   
   14001be60:	mov    QWORD PTR [rsp+0x10],rbx
   14001be65:	mov    QWORD PTR [rsp+0x18],rsi
   14001be6a:	mov    QWORD PTR [rsp+0x20],rdi
   14001be6f:	push   r12
   14001be71:	push   r14
   14001be73:	push   r15
   14001be75:	sub    rsp,0xc0
   14001be7c:	mov    rax,QWORD PTR [rip+0x2f19d]        # 0x14004b020
   14001be83:	xor    rax,rsp
   14001be86:	mov    QWORD PTR [rsp+0xb0],rax
   14001be8e:	and    QWORD PTR [rsp+0x40],0x0
   14001be94:	xor    edx,edx
   14001be96:	mov    rsi,rcx
   14001be99:	lea    rcx,[rsp+0x48]
   14001be9e:	lea    r8d,[rdx+0x64]
   14001bea2:	call   0x14002e2ce
   14001bea7:	mov    rcx,QWORD PTR [rsi+0x20]
   14001beab:	lea    rdx,[rsp+0x40]
   14001beb0:	mov    DWORD PTR [rsp+0x50],0x7
   14001beb8:	call   0x14001a1e0
   14001bebd:	lea    r15,[rip+0x2f1b4]        # 0x14004b078
   14001bec4:	test   eax,eax
   14001bec6:	jns    0x14001bef2
   14001bec8:	mov    rcx,QWORD PTR [rip+0x2f1a9]        # 0x14004b078
   14001becf:	cmp    rcx,r15
   14001bed2:	je     0x14001bef2
   14001bed4:	test   BYTE PTR [rcx+0x1c],0x2
   14001bed8:	je     0x14001bef2
   14001beda:	mov    rcx,QWORD PTR [rcx+0x10]
   14001bede:	lea    r8,[rip+0x1c79b]        # 0x140038680
   14001bee5:	mov    edx,0x15
   14001beea:	mov    r9d,eax
   14001beed:	call   0x140001f70
   14001bef2:	lea    rcx,[rsi+0x78]
   14001bef6:	call   0x140029b84
   14001befb:	lea    rbx,[rsi+0x98]
   14001bf02:	mov    rcx,rbx
   14001bf05:	call   QWORD PTR [rip+0x161fd]        # 0x140032108
   14001bf0b:	mov    r12d,0x40000000
   14001bf11:	xor    edi,edi
   14001bf13:	mov    eax,r12d
   14001bf16:	xchg   DWORD PTR [rbx+0x3c],eax
   14001bf19:	add    eax,r12d
   14001bf1c:	mov    DWORD PTR [rbx+0x38],eax
   14001bf1f:	test   eax,eax
   14001bf21:	jle    0x14001bf37
   14001bf23:	mov    rcx,QWORD PTR [rbx+0x28]
   14001bf27:	or     edx,0xffffffff
   14001bf2a:	call   QWORD PTR [rip+0x16250]        # 0x140032180
   14001bf30:	inc    edi
   14001bf32:	cmp    edi,DWORD PTR [rbx+0x38]
   14001bf35:	jl     0x14001bf23
   14001bf37:	lea    r14,[rsi+0x28]
   14001bf3b:	mov    rax,QWORD PTR [r14]
   14001bf3e:	mov    rdi,QWORD PTR [rax]
   14001bf41:	cmp    rdi,rax
   14001bf44:	je     0x14001bfac
   14001bf46:	mov    rcx,QWORD PTR [rdi+0x18]
   14001bf4a:	test   rcx,rcx
   14001bf4d:	je     0x14001bf69
   14001bf4f:	mov    rdx,QWORD PTR [rcx+0x20]
   14001bf53:	mov    DWORD PTR [rcx+0xc8],0x1
   14001bf5d:	mov    rcx,QWORD PTR [rcx+0xb0]
   14001bf64:	call   0x14001ef40
   14001bf69:	or     eax,0xffffffff
   14001bf6c:	lock xadd DWORD PTR [rsi+0x68],eax
   14001bf71:	cmp    eax,0x1
   14001bf74:	jne    0x14001bf9d
   14001bf76:	prefetchw BYTE PTR [rsi+0x68]
   14001bf7a:	mov    eax,DWORD PTR [rsi+0x68]
   14001bf7d:	mov    ecx,eax
   14001bf7f:	or     ecx,r12d
   14001bf82:	lock cmpxchg DWORD PTR [rsi+0x68],ecx
   14001bf87:	jne    0x14001bf7a
   14001bf89:	test   r12d,eax
   14001bf8c:	jne    0x14001bf9d
   14001bf8e:	mov    rcx,QWORD PTR [rsi+0x70]
   14001bf92:	test   rcx,rcx
   14001bf95:	je     0x14001bf9d
   14001bf97:	call   QWORD PTR [rip+0x161f3]        # 0x140032190
   14001bf9d:	lock dec DWORD PTR [rsi+0x118]
   14001bfa4:	mov    rdi,QWORD PTR [rdi]
   14001bfa7:	cmp    rdi,QWORD PTR [r14]
   14001bfaa:	jne    0x14001bf46
   14001bfac:	mov    rcx,r14
   14001bfaf:	call   0x14001d324
   14001bfb4:	mov    rax,QWORD PTR [r14]
   14001bfb7:	lea    rcx,[r14+0x10]
   14001bfbb:	mov    r8,QWORD PTR [rcx]
   14001bfbe:	lea    rdx,[rsp+0x38]
   14001bfc3:	mov    QWORD PTR [rsp+0x30],rax
   14001bfc8:	mov    r9d,0x10
   14001bfce:	lea    rax,[rsp+0x30]
   14001bfd3:	mov    QWORD PTR [rcx+0x8],r8
   14001bfd7:	mov    QWORD PTR [rsp+0x20],rax
   14001bfdc:	call   0x14000dfb4
   14001bfe1:	mov    QWORD PTR [r14+0x28],0x7
   14001bfe9:	mov    ecx,0xc0000000
   14001bfee:	mov    QWORD PTR [r14+0x30],0x8
   14001bff6:	xchg   DWORD PTR [rbx+0x3c],ecx
   14001bff9:	mov    edx,DWORD PTR [rbx+0x38]
   14001bffc:	add    edx,0xc0000000
   14001c002:	add    edx,ecx
   14001c004:	test   edx,edx
   14001c006:	jle    0x14001c015
   14001c008:	mov    rcx,QWORD PTR [rbx+0x30]
   14001c00c:	xor    r8d,r8d
   14001c00f:	call   QWORD PTR [rip+0x16173]        # 0x140032188
   14001c015:	mov    rcx,rbx
   14001c018:	call   QWORD PTR [rip+0x160da]        # 0x1400320f8
   14001c01e:	mov    rcx,QWORD PTR [rip+0x2f053]        # 0x14004b078
   14001c025:	cmp    rcx,r15
   14001c028:	je     0x14001c045
   14001c02a:	test   BYTE PTR [rcx+0x1c],0x2
   14001c02e:	je     0x14001c045
   14001c030:	mov    rcx,QWORD PTR [rcx+0x10]
   14001c034:	lea    r8,[rip+0x1c645]        # 0x140038680
   14001c03b:	mov    edx,0x16
   14001c040:	call   0x140001f08
   14001c045:	prefetchw BYTE PTR [rsi+0x68]
   14001c049:	mov    eax,DWORD PTR [rsi+0x68]
   14001c04c:	mov    ecx,eax
   14001c04e:	btr    ecx,0x1f
   14001c052:	lock cmpxchg DWORD PTR [rsi+0x68],ecx
   14001c057:	jne    0x14001c049
   14001c059:	test   eax,eax
   14001c05b:	jns    0x14001c076
   14001c05d:	xor    eax,eax
   14001c05f:	lock cmpxchg DWORD PTR [rsi+0x68],r12d
   14001c065:	jne    0x14001c076
   14001c067:	mov    rcx,QWORD PTR [rsi+0x70]
   14001c06b:	test   rcx,rcx
   14001c06e:	je     0x14001c076
   14001c070:	call   QWORD PTR [rip+0x1611a]        # 0x140032190
   14001c076:	mov    rcx,QWORD PTR [rsi+0x70]
   14001c07a:	test   rcx,rcx
   14001c07d:	je     0x14001c088
   14001c07f:	or     edx,0xffffffff
   14001c082:	call   QWORD PTR [rip+0x160f8]        # 0x140032180
   14001c088:	mov    rcx,QWORD PTR [rip+0x2efe9]        # 0x14004b078
   14001c08f:	cmp    rcx,r15
   14001c092:	je     0x14001c0af
   14001c094:	test   BYTE PTR [rcx+0x1c],0x2
   14001c098:	je     0x14001c0af
   14001c09a:	mov    rcx,QWORD PTR [rcx+0x10]
   14001c09e:	lea    r8,[rip+0x1c5db]        # 0x140038680
   14001c0a5:	mov    edx,0x17
   14001c0aa:	call   0x140001f08
   14001c0af:	mov    rcx,QWORD PTR [rsi+0x20]
   14001c0b3:	call   0x1400189fc
   14001c0b8:	mov    rcx,QWORD PTR [rsp+0xb0]
   14001c0c0:	xor    rcx,rsp
   14001c0c3:	call   0x14002dd00
   14001c0c8:	lea    r11,[rsp+0xc0]
   14001c0d0:	mov    rbx,QWORD PTR [r11+0x28]
   14001c0d4:	mov    rsi,QWORD PTR [r11+0x30]
   14001c0d8:	mov    rdi,QWORD PTR [r11+0x38]
   14001c0dc:	mov    rsp,r11
   14001c0df:	pop    r15
   14001c0e1:	pop    r14
   14001c0e3:	pop    r12
   14001c0e5:	ret    
   14001c0e6:	int3   
   14001c0e7:	int3   
   14001c0e8:	int3   
   14001c0e9:	int3   
   14001c0ea:	int3   
   14001c0eb:	int3   
   14001c0ec:	int3   
   14001c0ed:	int3   
   14001c0ee:	int3   
   14001c0ef:	int3   
   14001c0f0:	sub    rsp,0x38
   14001c0f4:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001c0fd:	mov    rcx,QWORD PTR [rcx+0x20]
   14001c101:	mov    DWORD PTR [rcx+0x34],edx
   14001c104:	mov    DWORD PTR [rcx+0x2c],r8d
   14001c108:	mov    DWORD PTR [rcx+0x30],r9d
   14001c10c:	call   0x140019738
   14001c111:	nop
   14001c112:	add    rsp,0x38
   14001c116:	ret    
   14001c117:	int3   
   14001c118:	int3   
   14001c119:	int3   
   14001c11a:	int3   
   14001c11b:	int3   
   14001c11c:	int3   
   14001c11d:	int3   
   14001c11e:	int3   
   14001c11f:	int3   
   14001c120:	sub    rsp,0x38
   14001c124:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001c12d:	cmp    QWORD PTR [rcx+0x20],0x0
   14001c132:	je     0x14001c13e
   14001c134:	mov    rcx,QWORD PTR [rcx+0x20]
   14001c138:	call   0x140019a48
   14001c13d:	nop
   14001c13e:	add    rsp,0x38
   14001c142:	ret    
   14001c143:	int3   
   14001c144:	int3   
   14001c145:	int3   
   14001c146:	int3   
   14001c147:	int3   
   14001c148:	int3   
   14001c149:	int3   
   14001c14a:	int3   
   14001c14b:	int3   
   14001c14c:	mov    rax,rsp
   14001c14f:	push   rbp
   14001c150:	push   rsi
   14001c151:	push   rdi
   14001c152:	push   r12
   14001c154:	push   r13
   14001c156:	push   r14
   14001c158:	push   r15
   14001c15a:	lea    rbp,[rax-0x57]
   14001c15e:	sub    rsp,0xd0
   14001c165:	mov    QWORD PTR [rbp-0x31],0xfffffffffffffffe
   14001c16d:	mov    QWORD PTR [rax+0x10],rbx
   14001c171:	mov    rax,QWORD PTR [rip+0x2eea8]        # 0x14004b020
   14001c178:	xor    rax,rsp
   14001c17b:	mov    QWORD PTR [rbp+0x17],rax
   14001c17f:	mov    rax,r9
   14001c182:	mov    QWORD PTR [rbp-0x49],rax
   14001c186:	mov    esi,edx
   14001c188:	mov    r14,rcx
   14001c18b:	mov    QWORD PTR [rsp+0x30],r8
   14001c190:	xor    r12d,r12d
   14001c193:	test   r8,r8
   14001c196:	je     0x14001c6ab
   14001c19c:	test   rax,rax
   14001c19f:	je     0x14001c6ab
   14001c1a5:	mov    QWORD PTR [r9],r12
   14001c1a8:	mov    QWORD PTR [rbp-0x79],r12
   14001c1ac:	lea    rbx,[rcx+0x98]
   14001c1b3:	lea    r15d,[r12+0x1]
   14001c1b8:	jmp    0x14001c1c7
   14001c1ba:	or     edx,0xffffffff
   14001c1bd:	mov    rcx,QWORD PTR [rbx+0x30]
   14001c1c1:	call   QWORD PTR [rip+0x15fb9]        # 0x140032180
   14001c1c7:	mov    eax,r15d
   14001c1ca:	lock xadd DWORD PTR [rbx+0x3c],eax
   14001c1cf:	add    eax,r15d
   14001c1d2:	test   eax,eax
   14001c1d4:	jg     0x14001c1ba
   14001c1d6:	lea    rdi,[r14+0x28]
   14001c1da:	lea    r8,[rsp+0x30]
   14001c1df:	lea    rdx,[rbp-0x71]
   14001c1e3:	mov    rcx,rdi
   14001c1e6:	call   0x14001cff8
   14001c1eb:	mov    rdx,QWORD PTR [rbp-0x71]
   14001c1ef:	cmp    rdx,QWORD PTR [rdi]
   14001c1f2:	je     0x14001c22d
   14001c1f4:	add    rdx,0x18
   14001c1f8:	lea    rcx,[rbp-0x79]
   14001c1fc:	call   0x14001d1ac
   14001c201:	or     r13d,0xffffffff
   14001c205:	mov    eax,r13d
   14001c208:	lock xadd DWORD PTR [rbx+0x3c],eax
   14001c20d:	add    eax,r13d
   14001c210:	test   eax,eax
   14001c212:	jle    0x14001c69e
   14001c218:	xor    r8d,r8d
   14001c21b:	mov    edx,r15d
   14001c21e:	mov    rcx,QWORD PTR [rbx+0x28]
   14001c222:	call   QWORD PTR [rip+0x15f60]        # 0x140032188
   14001c228:	jmp    0x14001c69e
   14001c22d:	or     r13d,0xffffffff
   14001c231:	mov    eax,r13d
   14001c234:	lock xadd DWORD PTR [rbx+0x3c],eax
   14001c239:	add    eax,r13d
   14001c23c:	test   eax,eax
   14001c23e:	jle    0x14001c250
   14001c240:	xor    r8d,r8d
   14001c243:	mov    edx,r15d
   14001c246:	mov    rcx,QWORD PTR [rbx+0x28]
   14001c24a:	call   QWORD PTR [rip+0x15f38]        # 0x140032188
   14001c250:	cmp    BYTE PTR [rbp+0x7f],r12b
   14001c254:	jne    0x14001c296
   14001c256:	lea    r12,[rip+0x2ee1b]        # 0x14004b078
   14001c25d:	mov    rcx,QWORD PTR [rip+0x2ee14]        # 0x14004b078
   14001c264:	cmp    rcx,r12
   14001c267:	je     0x14001c6a9
   14001c26d:	test   BYTE PTR [rcx+0x1c],0x2
   14001c271:	je     0x14001c6a9
   14001c277:	mov    edx,0x1a
   14001c27c:	mov    r9,QWORD PTR [rsp+0x30]
   14001c281:	lea    r8,[rip+0x1c3f8]        # 0x140038680
   14001c288:	mov    rcx,QWORD PTR [rcx+0x10]
   14001c28c:	call   0x14001ad20
   14001c291:	jmp    0x14001c6a9
   14001c296:	mov    eax,DWORD PTR [r14+0x118]
   14001c29d:	cmp    eax,0x100000
   14001c2a2:	ja     0x14001c6a9
   14001c2a8:	lea    r12,[rip+0x2edc9]        # 0x14004b078
   14001c2af:	mov    rcx,QWORD PTR [rip+0x2edc2]        # 0x14004b078
   14001c2b6:	cmp    rcx,r12
   14001c2b9:	je     0x14001c2d8
   14001c2bb:	test   BYTE PTR [rcx+0x1c],0x4
   14001c2bf:	je     0x14001c2d8
   14001c2c1:	mov    edx,0x1b
   14001c2c6:	mov    DWORD PTR [rsp+0x20],esi
   14001c2ca:	mov    r9,QWORD PTR [rsp+0x30]
   14001c2cf:	mov    rcx,QWORD PTR [rcx+0x10]
   14001c2d3:	call   0x14001ad5c
   14001c2d8:	lea    rax,[r14+0x78]
   14001c2dc:	mov    QWORD PTR [rbp-0x39],rax
   14001c2e0:	mov    QWORD PTR [rbp-0x41],r14
   14001c2e4:	lea    rax,[r14+0x18]
   14001c2e8:	lea    rdx,[r14+0x20]
   14001c2ec:	lea    rcx,[rsp+0x30]
   14001c2f1:	mov    QWORD PTR [rsp+0x28],rcx
   14001c2f6:	mov    QWORD PTR [rsp+0x20],rax
   14001c2fb:	lea    r9,[rbp-0x39]
   14001c2ff:	lea    r8,[rbp-0x41]
   14001c303:	lea    rcx,[rbp-0x79]
   14001c307:	call   0x14001d410
   14001c30c:	test   eax,eax
   14001c30e:	jns    0x14001c318
   14001c310:	mov    ecx,eax
   14001c312:	call   0x140029d64
   14001c317:	int3   
   14001c318:	mov    QWORD PTR [rbp-0x61],rbx
   14001c31c:	mov    rcx,rbx
   14001c31f:	call   QWORD PTR [rip+0x15de3]        # 0x140032108
   14001c325:	mov    eax,0x40000000
   14001c32a:	xchg   DWORD PTR [rbx+0x3c],eax
   14001c32d:	add    eax,0x40000000
   14001c332:	mov    rsi,QWORD PTR [rbp-0x61]
   14001c336:	mov    DWORD PTR [rsi+0x38],eax
   14001c339:	and    DWORD PTR [rbp-0x71],0x0
   14001c33d:	test   eax,eax
   14001c33f:	jle    0x14001c360
   14001c341:	mov    ebx,DWORD PTR [rbp-0x71]
   14001c344:	or     edx,0xffffffff
   14001c347:	mov    rcx,QWORD PTR [rsi+0x28]
   14001c34b:	call   QWORD PTR [rip+0x15e2f]        # 0x140032180
   14001c351:	add    ebx,r15d
   14001c354:	cmp    ebx,DWORD PTR [rsi+0x38]
   14001c357:	jl     0x14001c344
   14001c359:	lea    rbx,[r14+0x98]
   14001c360:	lea    r8,[rsp+0x30]
   14001c365:	lea    rdx,[rbp-0x29]
   14001c369:	mov    rcx,rdi
   14001c36c:	call   0x14001cff8
   14001c371:	mov    rdi,QWORD PTR [rax]
   14001c374:	mov    QWORD PTR [rbp-0x71],rdi
   14001c378:	cmp    rdi,QWORD PTR [r14+0x28]
   14001c37c:	je     0x14001c424
   14001c382:	mov    rcx,QWORD PTR [rip+0x2ecef]        # 0x14004b078
   14001c389:	cmp    rcx,r12
   14001c38c:	je     0x14001c3b5
   14001c38e:	test   BYTE PTR [rcx+0x1c],0x2
   14001c392:	je     0x14001c3b5
   14001c394:	mov    edx,0x1c
   14001c399:	mov    r9,QWORD PTR [rsp+0x30]
   14001c39e:	lea    r8,[rip+0x1c2db]        # 0x140038680
   14001c3a5:	mov    rcx,QWORD PTR [rcx+0x10]
   14001c3a9:	call   0x14001ad20
   14001c3ae:	mov    rcx,QWORD PTR [rip+0x2ecc3]        # 0x14004b078
   14001c3b5:	test   BYTE PTR [rip+0x33c04],0x4        # 0x14004ffc0
   14001c3bc:	je     0x14001c3da
   14001c3be:	lea    r8,[rip+0x17f43]        # 0x140034308
   14001c3c5:	lea    rdx,[rip+0x17ee4]        # 0x1400342b0
   14001c3cc:	call   0x140003818
   14001c3d1:	mov    rcx,QWORD PTR [rip+0x2eca0]        # 0x14004b078
   14001c3d8:	jmp    0x14001c3dc
   14001c3da:	xor    eax,eax
   14001c3dc:	movzx  r9d,ax
   14001c3e0:	or     r9d,0x80070000
   14001c3e7:	test   eax,eax
   14001c3e9:	cmovle r9d,eax
   14001c3ed:	test   r9d,r9d
   14001c3f0:	jns    0x14001c412
   14001c3f2:	cmp    rcx,r12
   14001c3f5:	je     0x14001c412
   14001c3f7:	test   BYTE PTR [rcx+0x1c],0x2
   14001c3fb:	je     0x14001c412
   14001c3fd:	mov    edx,0x1d
   14001c402:	lea    r8,[rip+0x1c277]        # 0x140038680
   14001c409:	mov    rcx,QWORD PTR [rcx+0x10]
   14001c40d:	call   0x140001f70
   14001c412:	lea    rdx,[rdi+0x18]
   14001c416:	lea    rcx,[rbp-0x79]
   14001c41a:	call   0x14001d1ac
   14001c41f:	jmp    0x14001c66d
   14001c424:	mov    rcx,r14
   14001c427:	call   0x14001c784
   14001c42c:	mov    rax,QWORD PTR [rsp+0x30]
   14001c431:	mov    QWORD PTR [rbp-0x59],rax
   14001c435:	mov    rax,QWORD PTR [rbp-0x79]
   14001c439:	test   rax,rax
   14001c43c:	je     0x14001c454
   14001c43e:	mov    ecx,DWORD PTR [rax+0x18]
   14001c441:	test   ecx,ecx
   14001c443:	jne    0x14001c44b
   14001c445:	mov    DWORD PTR [rax+0x18],r15d
   14001c449:	jmp    0x14001c450
   14001c44b:	lock add DWORD PTR [rax+0x18],r15d
   14001c450:	mov    rax,QWORD PTR [rbp-0x79]
   14001c454:	mov    QWORD PTR [rbp-0x51],rax
   14001c458:	lea    rdi,[r14+0x28]
   14001c45c:	mov    rax,QWORD PTR [rdi]
   14001c45f:	mov    rax,QWORD PTR [rax]
   14001c462:	mov    QWORD PTR [rbp-0x69],rax
   14001c466:	lea    r9,[rbp-0x59]
   14001c46a:	mov    r8,QWORD PTR [rax+0x8]
   14001c46e:	mov    rdx,rax
   14001c471:	call   0x14001d8d8
   14001c476:	mov    rdx,rax
   14001c479:	mov    rax,QWORD PTR [rdi+0x8]
   14001c47d:	movabs rcx,0x7fffffffffffffe
   14001c487:	sub    rcx,rax
   14001c48a:	cmp    rcx,r15
   14001c48d:	jae    0x14001c49c
   14001c48f:	lea    rcx,[rip+0x1acea]        # 0x140037180
   14001c496:	call   0x14002d7f8
   14001c49b:	int3   
   14001c49c:	inc    rax
   14001c49f:	mov    QWORD PTR [rdi+0x8],rax
   14001c4a3:	mov    rax,QWORD PTR [rbp-0x69]
   14001c4a7:	mov    QWORD PTR [rax+0x8],rdx
   14001c4ab:	mov    rax,QWORD PTR [rdx+0x8]
   14001c4af:	mov    QWORD PTR [rax],rdx
   14001c4b2:	mov    r9,QWORD PTR [rdi]
   14001c4b5:	mov    r9,QWORD PTR [r9]
   14001c4b8:	lea    r8,[r9+0x10]
   14001c4bc:	lea    rdx,[rbp-0x21]
   14001c4c0:	mov    rcx,rdi
   14001c4c3:	call   0x14001d644
   14001c4c8:	nop
   14001c4c9:	mov    rax,QWORD PTR [rbp-0x51]
   14001c4cd:	mov    QWORD PTR [rbp-0x69],rax
   14001c4d1:	test   rax,rax
   14001c4d4:	je     0x14001c51f
   14001c4d6:	lea    rcx,[rax+0x10]
   14001c4da:	mov    eax,DWORD PTR [rcx+0x8]
   14001c4dd:	cmp    eax,r15d
   14001c4e0:	jne    0x14001c4eb
   14001c4e2:	mov    DWORD PTR [rcx+0x8],0x0
   14001c4e9:	jmp    0x14001c4fa
   14001c4eb:	mov    eax,r13d
   14001c4ee:	lock xadd DWORD PTR [rcx+0x8],eax
   14001c4f3:	add    eax,r13d
   14001c4f6:	test   eax,eax
   14001c4f8:	jg     0x14001c51f
   14001c4fa:	test   rcx,rcx
   14001c4fd:	je     0x14001c51f
   14001c4ff:	mov    rax,QWORD PTR [rcx]
   14001c502:	mov    rdi,QWORD PTR [rax]
   14001c505:	mov    rcx,rdi
   14001c508:	call   QWORD PTR [rip+0x1619a]        # 0x1400326a8
   14001c50e:	mov    edx,r15d
   14001c511:	mov    rcx,QWORD PTR [rbp-0x69]
   14001c515:	add    rcx,0x10
   14001c519:	call   rdi
   14001c51b:	lea    rdi,[r14+0x28]
   14001c51f:	mov    eax,r15d
   14001c522:	lock xadd DWORD PTR [r14+0x68],eax
   14001c528:	add    eax,r15d
   14001c52b:	js     0x14001c5c8
   14001c531:	mov    eax,r13d
   14001c534:	lock xadd DWORD PTR [r14+0x68],eax
   14001c53a:	add    eax,r13d
   14001c53d:	jne    0x14001c56c
   14001c53f:	prefetchw BYTE PTR [r14+0x68]
   14001c544:	mov    edx,0x40000000
   14001c549:	mov    eax,DWORD PTR [r14+0x68]
   14001c54d:	mov    ecx,eax
   14001c54f:	or     ecx,edx
   14001c551:	lock cmpxchg DWORD PTR [r14+0x68],ecx
   14001c557:	jne    0x14001c549
   14001c559:	test   edx,eax
   14001c55b:	jne    0x14001c56c
   14001c55d:	mov    rcx,QWORD PTR [r14+0x70]
   14001c561:	test   rcx,rcx
   14001c564:	je     0x14001c56c
   14001c566:	call   QWORD PTR [rip+0x15c24]        # 0x140032190
   14001c56c:	mov    rcx,QWORD PTR [rip+0x2eb05]        # 0x14004b078
   14001c573:	cmp    rcx,r12
   14001c576:	je     0x14001c593
   14001c578:	test   BYTE PTR [rcx+0x1c],0x2
   14001c57c:	je     0x14001c593
   14001c57e:	mov    edx,0x1e
   14001c583:	lea    r8,[rip+0x1c0f6]        # 0x140038680
   14001c58a:	mov    rcx,QWORD PTR [rcx+0x10]
   14001c58e:	call   0x140001f08
   14001c593:	lea    rdx,[rsp+0x30]
   14001c598:	mov    rcx,rdi
   14001c59b:	call   0x14001ce70
   14001c5a0:	lea    rcx,[rbp-0x79]
   14001c5a4:	call   0x14001d134
   14001c5a9:	mov    edx,0x8007045b
   14001c5ae:	lea    rcx,[rbp-0x11]
   14001c5b2:	call   0x140002064
   14001c5b7:	lea    rdx,[rip+0x2cbca]        # 0x140049188
   14001c5be:	lea    rcx,[rbp-0x11]
   14001c5c2:	call   0x14002e2da
   14001c5c7:	int3   
   14001c5c8:	lock add DWORD PTR [r14+0x114],r15d
   14001c5d0:	lock add DWORD PTR [r14+0x118],r15d
   14001c5d8:	test   BYTE PTR [rip+0x339e1],r15b        # 0x14004ffc0
   14001c5df:	je     0x14001c5f6
   14001c5e1:	lea    r8,[rip+0x17dc8]        # 0x1400343b0
   14001c5e8:	lea    rdx,[rip+0x17b99]        # 0x140034188
   14001c5ef:	call   0x140003818
   14001c5f4:	jmp    0x14001c5f8
   14001c5f6:	xor    eax,eax
   14001c5f8:	movzx  r9d,ax
   14001c5fc:	or     r9d,0x80070000
   14001c603:	test   eax,eax
   14001c605:	cmovle r9d,eax
   14001c609:	test   r9d,r9d
   14001c60c:	jns    0x14001c635
   14001c60e:	mov    rax,QWORD PTR [rip+0x2ea63]        # 0x14004b078
   14001c615:	cmp    rax,r12
   14001c618:	je     0x14001c66d
   14001c61a:	test   BYTE PTR [rax+0x1c],0x2
   14001c61e:	je     0x14001c63c
   14001c620:	mov    edx,0x1f
   14001c625:	lea    r8,[rip+0x1c054]        # 0x140038680
   14001c62c:	mov    rcx,QWORD PTR [rax+0x10]
   14001c630:	call   0x140001f70
   14001c635:	mov    rax,QWORD PTR [rip+0x2ea3c]        # 0x14004b078
   14001c63c:	cmp    rax,r12
   14001c63f:	je     0x14001c66d
   14001c641:	test   BYTE PTR [rax+0x1c],0x4
   14001c645:	je     0x14001c66d
   14001c647:	mov    edx,0x20
   14001c64c:	mov    eax,DWORD PTR [r14+0x118]
   14001c653:	mov    DWORD PTR [rsp+0x20],eax
   14001c657:	mov    r9,QWORD PTR [rsp+0x30]
   14001c65c:	mov    rcx,QWORD PTR [rip+0x2ea15]        # 0x14004b078
   14001c663:	mov    rcx,QWORD PTR [rcx+0x10]
   14001c667:	call   0x14001ad5c
   14001c66c:	nop
   14001c66d:	mov    ecx,0xc0000000
   14001c672:	xchg   DWORD PTR [rbx+0x3c],ecx
   14001c675:	mov    edx,DWORD PTR [rsi+0x38]
   14001c678:	add    edx,0xc0000000
   14001c67e:	add    edx,ecx
   14001c680:	mov    rbx,QWORD PTR [rbp-0x61]
   14001c684:	test   edx,edx
   14001c686:	jle    0x14001c695
   14001c688:	xor    r8d,r8d
   14001c68b:	mov    rcx,QWORD PTR [rbx+0x30]
   14001c68f:	call   QWORD PTR [rip+0x15af3]        # 0x140032188
   14001c695:	mov    rcx,rbx
   14001c698:	call   QWORD PTR [rip+0x15a5a]        # 0x1400320f8
   14001c69e:	mov    rax,QWORD PTR [rbp-0x79]
   14001c6a2:	mov    rcx,QWORD PTR [rbp-0x49]
   14001c6a6:	mov    QWORD PTR [rcx],rax
   14001c6a9:	jmp    0x14001c6f0
   14001c6ab:	lea    r12,[rip+0x2e9c6]        # 0x14004b078
   14001c6b2:	mov    rcx,QWORD PTR [rip+0x2e9bf]        # 0x14004b078
   14001c6b9:	cmp    rcx,r12
   14001c6bc:	je     0x14001c6e5
   14001c6be:	mov    r15d,0x1
   14001c6c4:	test   BYTE PTR [rcx+0x1c],r15b
   14001c6c8:	je     0x14001c6e5
   14001c6ca:	lea    edx,[r15+0x9]
   14001c6ce:	lea    r9,[rip+0x1be73]        # 0x140038548
   14001c6d5:	lea    r8,[rip+0x17cf4]        # 0x1400343d0
   14001c6dc:	mov    rcx,QWORD PTR [rcx+0x10]
   14001c6e0:	call   0x1400038e0
   14001c6e5:	mov    ecx,0x80070057
   14001c6ea:	call   0x140029d64
   14001c6ef:	int3   
   14001c6f0:	mov    rcx,QWORD PTR [rbp+0x17]
   14001c6f4:	xor    rcx,rsp
   14001c6f7:	call   0x14002dd00
   14001c6fc:	mov    rbx,QWORD PTR [rsp+0x118]
   14001c704:	add    rsp,0xd0
   14001c70b:	pop    r15
   14001c70d:	pop    r14
   14001c70f:	pop    r13
   14001c711:	pop    r12
   14001c713:	pop    rdi
   14001c714:	pop    rsi
   14001c715:	pop    rbp
   14001c716:	ret    
   14001c717:	int3   
   14001c718:	int3   
   14001c719:	int3   
   14001c71a:	int3   
   14001c71b:	int3   
   14001c71c:	int3   
   14001c71d:	int3   
   14001c71e:	int3   
   14001c71f:	int3   
   14001c720:	mov    QWORD PTR [rsp+0x8],rbx
   14001c725:	push   rdi
   14001c726:	sub    rsp,0x20
   14001c72a:	mov    rdi,QWORD PTR [rcx+0x8]
   14001c72e:	test   rdi,rdi
   14001c731:	je     0x14001c773
   14001c733:	mov    eax,DWORD PTR [rdi+0x18]
   14001c736:	add    rdi,0x10
   14001c73a:	cmp    eax,0x1
   14001c73d:	jne    0x14001c748
   14001c73f:	mov    DWORD PTR [rdi+0x8],0x0
   14001c746:	jmp    0x14001c755
   14001c748:	or     eax,0xffffffff
   14001c74b:	lock xadd DWORD PTR [rdi+0x8],eax
   14001c750:	sub    eax,0x1
   14001c753:	jg     0x14001c773
   14001c755:	test   rdi,rdi
   14001c758:	je     0x14001c773
   14001c75a:	mov    rax,QWORD PTR [rdi]
   14001c75d:	mov    rbx,QWORD PTR [rax]
   14001c760:	mov    rcx,rbx
   14001c763:	call   QWORD PTR [rip+0x15f3f]        # 0x1400326a8
   14001c769:	mov    edx,0x1
   14001c76e:	mov    rcx,rdi
   14001c771:	call   rbx
   14001c773:	mov    rbx,QWORD PTR [rsp+0x30]
   14001c778:	add    rsp,0x20
   14001c77c:	pop    rdi
   14001c77d:	ret    
   14001c77e:	int3   
   14001c77f:	int3   
   14001c780:	int3   
   14001c781:	int3   
   14001c782:	int3   
   14001c783:	int3   
   14001c784:	mov    rax,rsp
   14001c787:	mov    QWORD PTR [rax+0x18],rbx
   14001c78b:	push   rbp
   14001c78c:	push   rsi
   14001c78d:	push   rdi
   14001c78e:	push   r12
   14001c790:	push   r13
   14001c792:	push   r14
   14001c794:	push   r15
   14001c796:	sub    rsp,0x40
   14001c79a:	lea    r14,[rcx+0x28]
   14001c79e:	mov    r15d,0x258
   14001c7a4:	mov    rbx,QWORD PTR [r14]
   14001c7a7:	mov    rsi,rcx
   14001c7aa:	xor    ebp,ebp
   14001c7ac:	mov    DWORD PTR [rax+0x8],r15d
   14001c7b0:	mov    rbx,QWORD PTR [rbx]
   14001c7b3:	call   QWORD PTR [rip+0x15c97]        # 0x140032450
   14001c7b9:	mov    rdi,QWORD PTR [rax+0xa0]
   14001c7c0:	mov    rcx,rdi
   14001c7c3:	call   QWORD PTR [rip+0x15edf]        # 0x1400326a8
   14001c7c9:	lea    r8,[rsp+0x80]
   14001c7d1:	mov    edx,r15d
   14001c7d4:	lea    rcx,[rip+0x1bdb5]        # 0x140038590
   14001c7db:	call   rdi
   14001c7dd:	mov    edi,DWORD PTR [rsp+0x80]
   14001c7e4:	cmp    edi,r15d
   14001c7e7:	jne    0x14001c823
   14001c7e9:	mov    eax,DWORD PTR [rsi+0x118]
   14001c7ef:	cmp    eax,0x3e8
   14001c7f4:	jbe    0x14001c7fb
   14001c7f6:	lea    edi,[rbp+0x1]
   14001c7f9:	jmp    0x14001c823
   14001c7fb:	mov    eax,DWORD PTR [rsi+0x118]
   14001c801:	mov    edx,0x64
   14001c806:	cmp    eax,edx
   14001c808:	jbe    0x14001c80f
   14001c80a:	lea    edi,[rdx-0x5a]
   14001c80d:	jmp    0x14001c823
   14001c80f:	mov    eax,DWORD PTR [rsi+0x118]
   14001c815:	mov    ecx,edi
   14001c817:	mov    edi,0xa
   14001c81c:	cmp    eax,edi
   14001c81e:	cmova  ecx,edx
   14001c821:	mov    edi,ecx
   14001c823:	call   0x14002b158
   14001c828:	mov    r12,rax
   14001c82b:	lea    r13,[rip+0x2e846]        # 0x14004b078
   14001c832:	jmp    0x14001c8e7
   14001c837:	mov    rdx,QWORD PTR [rbx+0x18]
   14001c83b:	test   rdx,rdx
   14001c83e:	jne    0x14001c848
   14001c840:	mov    rbx,QWORD PTR [rbx]
   14001c843:	jmp    0x14001c8e7
   14001c848:	mov    eax,edi
   14001c84a:	imul   rcx,rax,0x989680
   14001c851:	add    rcx,QWORD PTR [rdx+0x28]
   14001c855:	cmp    rcx,r12
   14001c858:	ja     0x14001c840
   14001c85a:	mov    r15,QWORD PTR [rdx+0x20]
   14001c85e:	or     eax,0xffffffff
   14001c861:	lock xadd DWORD PTR [rsi+0x68],eax
   14001c866:	cmp    eax,0x1
   14001c869:	jne    0x14001c894
   14001c86b:	prefetchw BYTE PTR [rsi+0x68]
   14001c86f:	mov    eax,DWORD PTR [rsi+0x68]
   14001c872:	mov    ecx,eax
   14001c874:	bts    ecx,0x1e
   14001c878:	lock cmpxchg DWORD PTR [rsi+0x68],ecx
   14001c87d:	jne    0x14001c86f
   14001c87f:	bt     eax,0x1e
   14001c883:	jb     0x14001c894
   14001c885:	mov    rcx,QWORD PTR [rsi+0x70]
   14001c889:	test   rcx,rcx
   14001c88c:	je     0x14001c894
   14001c88e:	call   QWORD PTR [rip+0x158fc]        # 0x140032190
   14001c894:	lock dec DWORD PTR [rsi+0x118]
   14001c89b:	lea    rdx,[rsp+0x88]
   14001c8a3:	mov    r8,rbx
   14001c8a6:	mov    rcx,r14
   14001c8a9:	call   0x14001cd9c
   14001c8ae:	mov    rbx,QWORD PTR [rax]
   14001c8b1:	mov    rax,QWORD PTR [rip+0x2e7c0]        # 0x14004b078
   14001c8b8:	cmp    rax,r13
   14001c8bb:	je     0x14001c8e5
   14001c8bd:	test   BYTE PTR [rax+0x1c],0x4
   14001c8c1:	je     0x14001c8e5
   14001c8c3:	mov    eax,DWORD PTR [rsi+0x118]
   14001c8c9:	mov    edx,0x21
   14001c8ce:	mov    rcx,QWORD PTR [rip+0x2e7a3]        # 0x14004b078
   14001c8d5:	mov    r9,r15
   14001c8d8:	mov    DWORD PTR [rsp+0x20],eax
   14001c8dc:	mov    rcx,QWORD PTR [rcx+0x10]
   14001c8e0:	call   0x14001ad5c
   14001c8e5:	inc    ebp
   14001c8e7:	cmp    rbx,QWORD PTR [r14]
   14001c8ea:	jne    0x14001c837
   14001c8f0:	add    DWORD PTR [rsi+0x11c],ebp
   14001c8f6:	mov    rax,QWORD PTR [rip+0x2e77b]        # 0x14004b078
   14001c8fd:	cmp    rax,r13
   14001c900:	je     0x14001c939
   14001c902:	test   BYTE PTR [rax+0x1c],0x4
   14001c906:	je     0x14001c939
   14001c908:	mov    eax,DWORD PTR [rsi+0x11c]
   14001c90e:	mov    r9d,ebp
   14001c911:	mov    DWORD PTR [rsp+0x30],eax
   14001c915:	mov    eax,DWORD PTR [rsi+0x114]
   14001c91b:	mov    DWORD PTR [rsp+0x28],eax
   14001c91f:	mov    eax,DWORD PTR [rsi+0x118]
   14001c925:	mov    rcx,QWORD PTR [rip+0x2e74c]        # 0x14004b078
   14001c92c:	mov    DWORD PTR [rsp+0x20],eax
   14001c930:	mov    rcx,QWORD PTR [rcx+0x10]
   14001c934:	call   0x14001acb4
   14001c939:	mov    rbx,QWORD PTR [rsp+0x90]
   14001c941:	add    rsp,0x40
   14001c945:	pop    r15
   14001c947:	pop    r14
   14001c949:	pop    r13
   14001c94b:	pop    r12
   14001c94d:	pop    rdi
   14001c94e:	pop    rsi
   14001c94f:	pop    rbp
   14001c950:	ret    
   14001c951:	int3   
   14001c952:	int3   
   14001c953:	int3   
   14001c954:	int3   
   14001c955:	int3   
   14001c956:	int3   
   14001c957:	int3   
   14001c958:	mov    QWORD PTR [rsp+0x18],rbx
   14001c95d:	mov    QWORD PTR [rsp+0x10],rdx
   14001c962:	push   rbp
   14001c963:	push   rsi
   14001c964:	push   rdi
   14001c965:	sub    rsp,0x30
   14001c969:	lea    rbx,[rcx+0x98]
   14001c970:	mov    rdi,rcx
   14001c973:	mov    rcx,rbx
   14001c976:	call   QWORD PTR [rip+0x1578c]        # 0x140032108
   14001c97c:	mov    eax,0x40000000
   14001c981:	xor    esi,esi
   14001c983:	xchg   DWORD PTR [rbx+0x3c],eax
   14001c986:	add    eax,0x40000000
   14001c98b:	mov    DWORD PTR [rbx+0x38],eax
   14001c98e:	test   eax,eax
   14001c990:	jle    0x14001c9a6
   14001c992:	mov    rcx,QWORD PTR [rbx+0x28]
   14001c996:	or     edx,0xffffffff
   14001c999:	call   QWORD PTR [rip+0x157e1]        # 0x140032180
   14001c99f:	inc    esi
   14001c9a1:	cmp    esi,DWORD PTR [rbx+0x38]
   14001c9a4:	jl     0x14001c992
   14001c9a6:	mov    rcx,QWORD PTR [rip+0x2e6cb]        # 0x14004b078
   14001c9ad:	lea    rbp,[rip+0x2e6c4]        # 0x14004b078
   14001c9b4:	cmp    rcx,rbp
   14001c9b7:	je     0x14001c9d9
   14001c9b9:	test   BYTE PTR [rcx+0x1c],0x4
   14001c9bd:	je     0x14001c9d9
   14001c9bf:	mov    r9d,DWORD PTR [rsp+0x58]
   14001c9c4:	lea    r8,[rip+0x1bcb5]        # 0x140038680
   14001c9cb:	mov    rcx,QWORD PTR [rcx+0x10]
   14001c9cf:	mov    edx,0x23
   14001c9d4:	call   0x140001f70
   14001c9d9:	lea    rsi,[rdi+0x28]
   14001c9dd:	mov    rcx,rsi
   14001c9e0:	lea    r8,[rsp+0x58]
   14001c9e5:	lea    rdx,[rsp+0x50]
   14001c9ea:	call   0x14001cff8
   14001c9ef:	mov    rax,QWORD PTR [rsi]
   14001c9f2:	cmp    QWORD PTR [rsp+0x50],rax
   14001c9f7:	jne    0x14001ca32
   14001c9f9:	mov    rcx,QWORD PTR [rip+0x2e678]        # 0x14004b078
   14001ca00:	cmp    rcx,rbp
   14001ca03:	je     0x14001cb0f
   14001ca09:	test   BYTE PTR [rcx+0x1c],0x2
   14001ca0d:	je     0x14001cb0f
   14001ca13:	mov    r9d,DWORD PTR [rsp+0x58]
   14001ca18:	lea    r8,[rip+0x1bc61]        # 0x140038680
   14001ca1f:	mov    rcx,QWORD PTR [rcx+0x10]
   14001ca23:	mov    edx,0x24
   14001ca28:	call   0x140001f70
   14001ca2d:	jmp    0x14001cb0f
   14001ca32:	test   BYTE PTR [rip+0x33587],0x1        # 0x14004ffc0
   14001ca39:	je     0x14001ca50
   14001ca3b:	lea    r8,[rip+0x1796e]        # 0x1400343b0
   14001ca42:	lea    rdx,[rip+0x17957]        # 0x1400343a0
   14001ca49:	call   0x140003818
   14001ca4e:	jmp    0x14001ca52
   14001ca50:	xor    eax,eax
   14001ca52:	movzx  r9d,ax
   14001ca56:	or     r9d,0x80070000
   14001ca5d:	test   eax,eax
   14001ca5f:	cmovle r9d,eax
   14001ca63:	test   r9d,r9d
   14001ca66:	jns    0x14001ca8f
   14001ca68:	mov    rcx,QWORD PTR [rip+0x2e609]        # 0x14004b078
   14001ca6f:	cmp    rcx,rbp
   14001ca72:	je     0x14001ca8f
   14001ca74:	test   BYTE PTR [rcx+0x1c],0x2
   14001ca78:	je     0x14001ca8f
   14001ca7a:	mov    rcx,QWORD PTR [rcx+0x10]
   14001ca7e:	lea    r8,[rip+0x1bbfb]        # 0x140038680
   14001ca85:	mov    edx,0x25
   14001ca8a:	call   0x140001f70
   14001ca8f:	lea    rdx,[rsp+0x58]
   14001ca94:	mov    rcx,rsi
   14001ca97:	call   0x14001ce70
   14001ca9c:	or     eax,0xffffffff
   14001ca9f:	lock xadd DWORD PTR [rdi+0x68],eax
   14001caa4:	cmp    eax,0x1
   14001caa7:	jne    0x14001cad2
   14001caa9:	prefetchw BYTE PTR [rdi+0x68]
   14001caad:	mov    eax,DWORD PTR [rdi+0x68]
   14001cab0:	mov    ecx,eax
   14001cab2:	bts    ecx,0x1e
   14001cab6:	lock cmpxchg DWORD PTR [rdi+0x68],ecx
   14001cabb:	jne    0x14001caad
   14001cabd:	bt     eax,0x1e
   14001cac1:	jb     0x14001cad2
   14001cac3:	mov    rcx,QWORD PTR [rdi+0x70]
   14001cac7:	test   rcx,rcx
   14001caca:	je     0x14001cad2
   14001cacc:	call   QWORD PTR [rip+0x156be]        # 0x140032190
   14001cad2:	lock dec DWORD PTR [rdi+0x118]
   14001cad9:	mov    rax,QWORD PTR [rip+0x2e598]        # 0x14004b078
   14001cae0:	cmp    rax,rbp
   14001cae3:	je     0x14001cb0f
   14001cae5:	test   BYTE PTR [rax+0x1c],0x4
   14001cae9:	je     0x14001cb0f
   14001caeb:	mov    eax,DWORD PTR [rdi+0x118]
   14001caf1:	mov    edx,0x26
   14001caf6:	mov    rcx,QWORD PTR [rip+0x2e57b]        # 0x14004b078
   14001cafd:	mov    r9,QWORD PTR [rsp+0x58]
   14001cb02:	mov    DWORD PTR [rsp+0x20],eax
   14001cb06:	mov    rcx,QWORD PTR [rcx+0x10]
   14001cb0a:	call   0x14001ad5c
   14001cb0f:	mov    ecx,0xc0000000
   14001cb14:	xchg   DWORD PTR [rbx+0x3c],ecx
   14001cb17:	mov    edx,DWORD PTR [rbx+0x38]
   14001cb1a:	add    edx,0xc0000000
   14001cb20:	add    edx,ecx
   14001cb22:	test   edx,edx
   14001cb24:	jle    0x14001cb33
   14001cb26:	mov    rcx,QWORD PTR [rbx+0x30]
   14001cb2a:	xor    r8d,r8d
   14001cb2d:	call   QWORD PTR [rip+0x15655]        # 0x140032188
   14001cb33:	mov    rcx,rbx
   14001cb36:	mov    rbx,QWORD PTR [rsp+0x60]
   14001cb3b:	add    rsp,0x30
   14001cb3f:	pop    rdi
   14001cb40:	pop    rsi
   14001cb41:	pop    rbp
   14001cb42:	rex.W jmp QWORD PTR [rip+0x155af]        # 0x1400320f8
   14001cb49:	int3   
   14001cb4a:	int3   
   14001cb4b:	int3   
   14001cb4c:	int3   
   14001cb4d:	int3   
   14001cb4e:	int3   
   14001cb4f:	int3   
   14001cb50:	mov    rax,rsp
   14001cb53:	mov    QWORD PTR [rax+0x8],rcx
   14001cb57:	push   rbx
   14001cb58:	push   rsi
   14001cb59:	push   rdi
   14001cb5a:	push   r12
   14001cb5c:	push   r13
   14001cb5e:	push   r14
   14001cb60:	push   r15
   14001cb62:	sub    rsp,0xa0
   14001cb69:	mov    QWORD PTR [rax-0x58],0xfffffffffffffffe
   14001cb71:	mov    r14,rcx
   14001cb74:	xor    r13d,r13d
   14001cb77:	lea    rbx,[rcx+0x98]
   14001cb7e:	mov    QWORD PTR [rsp+0x50],rbx
   14001cb83:	mov    rcx,rbx
   14001cb86:	call   QWORD PTR [rip+0x1557c]        # 0x140032108
   14001cb8c:	mov    eax,0x40000000
   14001cb91:	xchg   DWORD PTR [rbx+0x3c],eax
   14001cb94:	add    eax,0x40000000
   14001cb99:	mov    rdi,QWORD PTR [rsp+0x50]
   14001cb9e:	mov    DWORD PTR [rdi+0x38],eax
   14001cba1:	xor    ebx,ebx
   14001cba3:	test   eax,eax
   14001cba5:	jle    0x14001cbbb
   14001cba7:	or     edx,0xffffffff
   14001cbaa:	mov    rcx,QWORD PTR [rdi+0x28]
   14001cbae:	call   QWORD PTR [rip+0x155cc]        # 0x140032180
   14001cbb4:	inc    ebx
   14001cbb6:	cmp    ebx,DWORD PTR [rdi+0x38]
   14001cbb9:	jl     0x14001cba7
   14001cbbb:	mov    rbx,QWORD PTR [r14+0x28]
   14001cbbf:	mov    rbx,QWORD PTR [rbx]
   14001cbc2:	mov    QWORD PTR [rsp+0x60],rbx
   14001cbc7:	cmp    rbx,QWORD PTR [r14+0x28]
   14001cbcb:	je     0x14001cd15
   14001cbd1:	mov    rax,QWORD PTR [rbx+0x18]
   14001cbd5:	mov    QWORD PTR [rsp+0xe8],rax
   14001cbdd:	and    QWORD PTR [rsp+0x58],0x0
   14001cbe3:	lea    rsi,[rax+0x8]
   14001cbe7:	lea    rdx,[rsp+0x58]
   14001cbec:	mov    rcx,rsi
   14001cbef:	call   0x14001f000
   14001cbf4:	and    QWORD PTR [rsp+0x78],0x0
   14001cbfa:	lea    rdx,[rsp+0x78]
   14001cbff:	mov    rcx,rsi
   14001cc02:	call   0x14001f000
   14001cc07:	cmp    DWORD PTR [rsi+0x72],0x0
   14001cc0b:	je     0x14001cc14
   14001cc0d:	movzx  r15d,WORD PTR [rsi+0x68]
   14001cc12:	jmp    0x14001cc19
   14001cc14:	movzx  r15d,WORD PTR [rsi+0x6a]
   14001cc19:	mov    WORD PTR [rsp+0xf8],r15w
   14001cc22:	cmp    DWORD PTR [rsi+0x72],0x0
   14001cc26:	je     0x14001cc2f
   14001cc28:	movzx  r12d,WORD PTR [rsi+0x6a]
   14001cc2d:	jmp    0x14001cc34
   14001cc2f:	movzx  r12d,WORD PTR [rsi+0x68]
   14001cc34:	mov    WORD PTR [rsp+0x70],r12w
   14001cc3a:	mov    rax,QWORD PTR [rsp+0xe8]
   14001cc42:	mov    al,BYTE PTR [rax+0x76]
   14001cc45:	mov    BYTE PTR [rsp+0xe8],al
   14001cc4c:	mov    BYTE PTR [rsp+0xf0],al
   14001cc53:	and    QWORD PTR [rsp+0x68],0x0
   14001cc59:	xor    r8d,r8d
   14001cc5c:	lea    rdx,[rsp+0x68]
   14001cc61:	mov    rcx,rsi
   14001cc64:	call   0x14001f3d0
   14001cc69:	movzx  esi,BYTE PTR [rsp+0xe8]
   14001cc71:	movzx  r12d,r12w
   14001cc75:	movzx  r15d,r15w
   14001cc79:	mov    rax,QWORD PTR [rsp+0x68]
   14001cc7e:	mov    QWORD PTR [rsp+0x30],rax
   14001cc83:	mov    DWORD PTR [rsp+0x28],esi
   14001cc87:	mov    DWORD PTR [rsp+0x20],r12d
   14001cc8c:	mov    r9,QWORD PTR [rsp+0x78]
   14001cc91:	mov    r8d,r15d
   14001cc94:	mov    rdx,QWORD PTR [rsp+0x58]
   14001cc99:	lea    rcx,[rip+0x1b940]        # 0x1400385e0
   14001cca0:	call   QWORD PTR [rip+0x1568a]        # 0x140032330
   14001cca6:	lea    rax,[rip+0x2e3cb]        # 0x14004b078
   14001ccad:	mov    rcx,QWORD PTR [rip+0x2e3c4]        # 0x14004b078
   14001ccb4:	cmp    rcx,rax
   14001ccb7:	je     0x14001ccf0
   14001ccb9:	test   BYTE PTR [rcx+0x1c],0x4
   14001ccbd:	je     0x14001ccf0
   14001ccbf:	mov    rax,QWORD PTR [rsp+0x68]
   14001ccc4:	mov    QWORD PTR [rsp+0x40],rax
   14001ccc9:	mov    DWORD PTR [rsp+0x38],esi
   14001cccd:	mov    DWORD PTR [rsp+0x30],r12d
   14001ccd2:	mov    rax,QWORD PTR [rsp+0x78]
   14001ccd7:	mov    QWORD PTR [rsp+0x28],rax
   14001ccdc:	mov    DWORD PTR [rsp+0x20],r15d
   14001cce1:	mov    r9,QWORD PTR [rsp+0x58]
   14001cce6:	mov    rcx,QWORD PTR [rcx+0x10]
   14001ccea:	call   0x14001ab24
   14001ccef:	nop
   14001ccf0:	jmp    0x14001cd0c
   14001ccf2:	mov    rbx,QWORD PTR [rsp+0x60]
   14001ccf7:	mov    rdi,QWORD PTR [rsp+0x50]
   14001ccfc:	mov    r13d,DWORD PTR [rsp+0xe8]
   14001cd04:	mov    r14,QWORD PTR [rsp+0xe0]
   14001cd0c:	test   r13d,r13d
   14001cd0f:	jns    0x14001cbbf
   14001cd15:	mov    ecx,0xc0000000
   14001cd1a:	xchg   DWORD PTR [rdi+0x3c],ecx
   14001cd1d:	mov    rbx,QWORD PTR [rsp+0x50]
   14001cd22:	mov    edx,DWORD PTR [rbx+0x38]
   14001cd25:	add    edx,0xc0000000
   14001cd2b:	add    edx,ecx
   14001cd2d:	test   edx,edx
   14001cd2f:	jle    0x14001cd3e
   14001cd31:	xor    r8d,r8d
   14001cd34:	mov    rcx,QWORD PTR [rbx+0x30]
   14001cd38:	call   QWORD PTR [rip+0x1544a]        # 0x140032188
   14001cd3e:	mov    rcx,rbx
   14001cd41:	add    rsp,0xa0
   14001cd48:	pop    r15
   14001cd4a:	pop    r14
   14001cd4c:	pop    r13
   14001cd4e:	pop    r12
   14001cd50:	pop    rdi
   14001cd51:	pop    rsi
   14001cd52:	pop    rbx
   14001cd53:	rex.W jmp QWORD PTR [rip+0x1539e]        # 0x1400320f8
   14001cd5a:	int3   
   14001cd5b:	int3   
   14001cd5c:	int3   
   14001cd5d:	int3   
   14001cd5e:	int3   
   14001cd5f:	int3   
   14001cd60:	mov    QWORD PTR [rsp+0x8],rbx
   14001cd65:	push   rdi
   14001cd66:	sub    rsp,0x20
   14001cd6a:	mov    rdi,QWORD PTR [rcx]
   14001cd6d:	test   rdi,rdi
   14001cd70:	je     0x14001cd8b
   14001cd72:	mov    rax,QWORD PTR [rdi]
   14001cd75:	mov    rbx,QWORD PTR [rax]
   14001cd78:	mov    rcx,rbx
   14001cd7b:	call   QWORD PTR [rip+0x15927]        # 0x1400326a8
   14001cd81:	mov    edx,0x1
   14001cd86:	mov    rcx,rdi
   14001cd89:	call   rbx
   14001cd8b:	mov    rbx,QWORD PTR [rsp+0x30]
   14001cd90:	add    rsp,0x20
   14001cd94:	pop    rdi
   14001cd95:	ret    
   14001cd96:	int3   
   14001cd97:	int3   
   14001cd98:	int3   
   14001cd99:	int3   
   14001cd9a:	int3   
   14001cd9b:	int3   
   14001cd9c:	mov    QWORD PTR [rsp+0x10],rbx
   14001cda1:	mov    QWORD PTR [rsp+0x18],r8
   14001cda6:	push   rdi
   14001cda7:	sub    rsp,0x20
   14001cdab:	mov    rbx,rcx
   14001cdae:	mov    rdi,rdx
   14001cdb1:	mov    ecx,DWORD PTR [r8+0x10]
   14001cdb5:	mov    edx,0x1f31d
   14001cdba:	xor    ecx,0xdeadbeef
   14001cdc0:	btr    ecx,0x1f
   14001cdc4:	call   QWORD PTR [rip+0x157ee]        # 0x1400325b8
   14001cdca:	mov    QWORD PTR [rsp+0x30],rax
   14001cdcf:	shr    rax,0x20
   14001cdd3:	imul   edx,eax,0x41a7
   14001cdd9:	imul   eax,DWORD PTR [rsp+0x30],0xb14
   14001cde1:	sub    edx,eax
   14001cde3:	jns    0x14001cdeb
   14001cde5:	add    edx,0x7fffffff
   14001cdeb:	mov    rcx,QWORD PTR [rbx+0x28]
   14001cdef:	movsxd rdx,edx
   14001cdf2:	and    rdx,rcx
   14001cdf5:	cmp    QWORD PTR [rbx+0x30],rdx
   14001cdf9:	ja     0x14001ce08
   14001cdfb:	shr    rcx,1
   14001cdfe:	or     rax,0xffffffffffffffff
   14001ce02:	sub    rax,rcx
   14001ce05:	add    rdx,rax
   14001ce08:	mov    rcx,QWORD PTR [rbx+0x10]
   14001ce0c:	add    rdx,rdx
   14001ce0f:	mov    r8,QWORD PTR [rsp+0x40]
   14001ce14:	cmp    QWORD PTR [rcx+rdx*8+0x8],r8
   14001ce19:	jne    0x14001ce3c
   14001ce1b:	cmp    QWORD PTR [rcx+rdx*8],r8
   14001ce1f:	jne    0x14001ce36
   14001ce21:	mov    rax,QWORD PTR [rbx]
   14001ce24:	mov    QWORD PTR [rcx+rdx*8],rax
   14001ce28:	mov    rcx,QWORD PTR [rbx+0x10]
   14001ce2c:	mov    rax,QWORD PTR [rbx]
   14001ce2f:	mov    QWORD PTR [rcx+rdx*8+0x8],rax
   14001ce34:	jmp    0x14001ce49
   14001ce36:	mov    rax,QWORD PTR [r8+0x8]
   14001ce3a:	jmp    0x14001ce2f
   14001ce3c:	cmp    QWORD PTR [rcx+rdx*8],r8
   14001ce40:	jne    0x14001ce4e
   14001ce42:	mov    rax,QWORD PTR [r8]
   14001ce45:	mov    QWORD PTR [rcx+rdx*8],rax
   14001ce49:	mov    r8,QWORD PTR [rsp+0x40]
   14001ce4e:	mov    rdx,rdi
   14001ce51:	mov    rcx,rbx
   14001ce54:	call   0x14001d268
   14001ce59:	mov    rbx,QWORD PTR [rsp+0x38]
   14001ce5e:	mov    rax,rdi
   14001ce61:	add    rsp,0x20
   14001ce65:	pop    rdi
   14001ce66:	ret    
   14001ce67:	int3   
   14001ce68:	int3   
   14001ce69:	int3   
   14001ce6a:	int3   
   14001ce6b:	int3   
   14001ce6c:	int3   
   14001ce6d:	int3   
   14001ce6e:	int3   
   14001ce6f:	int3   
   14001ce70:	mov    QWORD PTR [rsp+0x18],rbx
   14001ce75:	push   rbp
   14001ce76:	push   rsi
   14001ce77:	push   rdi
   14001ce78:	push   r14
   14001ce7a:	push   r15
   14001ce7c:	mov    rbp,rsp
   14001ce7f:	sub    rsp,0x40
   14001ce83:	mov    r14,rcx
   14001ce86:	mov    rsi,rdx
   14001ce89:	mov    ecx,DWORD PTR [rdx]
   14001ce8b:	mov    ebx,0x7fffffff
   14001ce90:	xor    ecx,0xdeadbeef
   14001ce96:	mov    edx,0x1f31d
   14001ce9b:	and    ecx,ebx
   14001ce9d:	call   QWORD PTR [rip+0x15715]        # 0x1400325b8
   14001cea3:	mov    QWORD PTR [rbp+0x30],rax
   14001cea7:	shr    rax,0x20
   14001ceab:	imul   ecx,eax,0x41a7
   14001ceb1:	imul   eax,DWORD PTR [rbp+0x30],0xb14
   14001ceb8:	sub    ecx,eax
   14001ceba:	jns    0x14001cebe
   14001cebc:	add    ecx,ebx
   14001cebe:	mov    rdx,QWORD PTR [r14+0x28]
   14001cec2:	movsxd rcx,ecx
   14001cec5:	and    rcx,rdx
   14001cec8:	cmp    QWORD PTR [r14+0x30],rcx
   14001cecc:	ja     0x14001cedb
   14001cece:	shr    rdx,1
   14001ced1:	or     rax,0xffffffffffffffff
   14001ced5:	sub    rax,rdx
   14001ced8:	add    rcx,rax
   14001cedb:	mov    rbx,rcx
   14001cede:	lea    r15,[r14+0x10]
   14001cee2:	mov    rdx,QWORD PTR [r15]
   14001cee5:	lea    r8,[rcx+rcx*1]
   14001cee9:	mov    rcx,QWORD PTR [r14]
   14001ceec:	add    rbx,rbx
   14001ceef:	mov    rbx,QWORD PTR [rdx+rbx*8]
   14001cef3:	cmp    QWORD PTR [rdx+r8*8],rcx
   14001cef7:	jne    0x14001cefe
   14001cef9:	mov    rax,rcx
   14001cefc:	jmp    0x14001cf06
   14001cefe:	mov    rax,QWORD PTR [rdx+r8*8+0x8]
   14001cf03:	mov    rax,QWORD PTR [rax]
   14001cf06:	cmp    rbx,rax
   14001cf09:	je     0x14001cf47
   14001cf0b:	mov    rax,QWORD PTR [rsi]
   14001cf0e:	cmp    QWORD PTR [rbx+0x10],rax
   14001cf12:	jae    0x14001cf19
   14001cf14:	mov    rbx,QWORD PTR [rbx]
   14001cf17:	jmp    0x14001cef3
   14001cf19:	mov    rdi,rbx
   14001cf1c:	mov    r9,rax
   14001cf1f:	cmp    QWORD PTR [rdx+r8*8],rcx
   14001cf23:	jne    0x14001cf2a
   14001cf25:	mov    rax,rcx
   14001cf28:	jmp    0x14001cf32
   14001cf2a:	mov    rax,QWORD PTR [rdx+r8*8+0x8]
   14001cf2f:	mov    rax,QWORD PTR [rax]
   14001cf32:	cmp    rbx,rax
   14001cf35:	je     0x14001cf42
   14001cf37:	cmp    r9,QWORD PTR [rbx+0x10]
   14001cf3b:	jb     0x14001cf42
   14001cf3d:	mov    rbx,QWORD PTR [rbx]
   14001cf40:	jmp    0x14001cf1f
   14001cf42:	cmp    rdi,rbx
   14001cf45:	jne    0x14001cf60
   14001cf47:	mov    QWORD PTR [rbp-0x10],rcx
   14001cf4b:	mov    QWORD PTR [rbp-0x8],rcx
   14001cf4f:	movaps xmm0,XMMWORD PTR [rbp-0x10]
   14001cf53:	movdqa XMMWORD PTR [rbp-0x10],xmm0
   14001cf58:	mov    rbx,QWORD PTR [rbp-0x8]
   14001cf5c:	mov    rdi,QWORD PTR [rbp-0x10]
   14001cf60:	xor    esi,esi
   14001cf62:	mov    rax,rdi
   14001cf65:	cmp    rdi,rbx
   14001cf68:	je     0x14001cf75
   14001cf6a:	mov    rax,QWORD PTR [rax]
   14001cf6d:	inc    rsi
   14001cf70:	cmp    rax,rbx
   14001cf73:	jne    0x14001cf6a
   14001cf75:	cmp    rdi,QWORD PTR [rcx]
   14001cf78:	jne    0x14001cfd4
   14001cf7a:	cmp    rbx,rcx
   14001cf7d:	jne    0x14001cfd4
   14001cf7f:	mov    rcx,r14
   14001cf82:	call   0x14001d324
   14001cf87:	mov    rax,QWORD PTR [r14]
   14001cf8a:	lea    rdx,[rbp+0x38]
   14001cf8e:	mov    r8,QWORD PTR [r15]
   14001cf91:	mov    r9d,0x10
   14001cf97:	mov    QWORD PTR [rbp+0x30],rax
   14001cf9b:	mov    rcx,r15
   14001cf9e:	lea    rax,[rbp+0x30]
   14001cfa2:	mov    QWORD PTR [r15+0x8],r8
   14001cfa6:	mov    QWORD PTR [rsp+0x20],rax
   14001cfab:	call   0x14000dfb4
   14001cfb0:	mov    QWORD PTR [r14+0x28],0x7
   14001cfb8:	mov    QWORD PTR [r14+0x30],0x8
   14001cfc0:	jmp    0x14001cfd9
   14001cfc2:	mov    r8,rdi
   14001cfc5:	lea    rdx,[rbp+0x30]
   14001cfc9:	mov    rdi,QWORD PTR [rdi]
   14001cfcc:	mov    rcx,r14
   14001cfcf:	call   0x14001cd9c
   14001cfd4:	cmp    rdi,rbx
   14001cfd7:	jne    0x14001cfc2
   14001cfd9:	mov    rax,rsi
   14001cfdc:	mov    rbx,QWORD PTR [rsp+0x80]
   14001cfe4:	add    rsp,0x40
   14001cfe8:	pop    r15
   14001cfea:	pop    r14
   14001cfec:	pop    rdi
   14001cfed:	pop    rsi
   14001cfee:	pop    rbp
   14001cfef:	ret    
   14001cff0:	int3   
   14001cff1:	int3   
   14001cff2:	int3   
   14001cff3:	int3   
   14001cff4:	int3   
   14001cff5:	int3   
   14001cff6:	int3   
   14001cff7:	int3   
   14001cff8:	mov    QWORD PTR [rsp+0x10],rbx
   14001cffd:	mov    QWORD PTR [rsp+0x18],rsi
   14001d002:	push   rdi
   14001d003:	sub    rsp,0x20
   14001d007:	mov    rbx,rcx
   14001d00a:	mov    rdi,rdx
   14001d00d:	mov    ecx,DWORD PTR [r8]
   14001d010:	mov    edx,0x1f31d
   14001d015:	xor    ecx,0xdeadbeef
   14001d01b:	mov    rsi,r8
   14001d01e:	btr    ecx,0x1f
   14001d022:	call   QWORD PTR [rip+0x15590]        # 0x1400325b8
   14001d028:	mov    QWORD PTR [rsp+0x30],rax
   14001d02d:	shr    rax,0x20
   14001d031:	imul   edx,eax,0x41a7
   14001d037:	imul   eax,DWORD PTR [rsp+0x30],0xb14
   14001d03f:	sub    edx,eax
   14001d041:	jns    0x14001d049
   14001d043:	add    edx,0x7fffffff
   14001d049:	mov    rcx,QWORD PTR [rbx+0x28]
   14001d04d:	movsxd rdx,edx
   14001d050:	and    rdx,rcx
   14001d053:	cmp    QWORD PTR [rbx+0x30],rdx
   14001d057:	ja     0x14001d066
   14001d059:	shr    rcx,1
   14001d05c:	or     rax,0xffffffffffffffff
   14001d060:	sub    rax,rcx
   14001d063:	add    rdx,rax
   14001d066:	mov    r8,QWORD PTR [rbx+0x10]
   14001d06a:	lea    r9,[rdx+rdx*1]
   14001d06e:	mov    rax,rdx
   14001d071:	mov    rdx,QWORD PTR [rbx]
   14001d074:	add    rax,rax
   14001d077:	mov    rcx,QWORD PTR [r8+rax*8]
   14001d07b:	cmp    QWORD PTR [r8+r9*8],rdx
   14001d07f:	jne    0x14001d086
   14001d081:	mov    rax,rdx
   14001d084:	jmp    0x14001d08e
   14001d086:	mov    rax,QWORD PTR [r8+r9*8+0x8]
   14001d08b:	mov    rax,QWORD PTR [rax]
   14001d08e:	cmp    rcx,rax
   14001d091:	je     0x14001d0b1
   14001d093:	mov    rax,QWORD PTR [rsi]
   14001d096:	cmp    QWORD PTR [rcx+0x10],rax
   14001d09a:	jae    0x14001d0a1
   14001d09c:	mov    rcx,QWORD PTR [rcx]
   14001d09f:	jmp    0x14001d07b
   14001d0a1:	mov    rax,QWORD PTR [rcx+0x10]
   14001d0a5:	cmp    QWORD PTR [rsi],rax
   14001d0a8:	cmovb  rcx,rdx
   14001d0ac:	mov    QWORD PTR [rdi],rcx
   14001d0af:	jmp    0x14001d0b4
   14001d0b1:	mov    QWORD PTR [rdi],rdx
   14001d0b4:	mov    rbx,QWORD PTR [rsp+0x38]
   14001d0b9:	mov    rax,rdi
   14001d0bc:	mov    rsi,QWORD PTR [rsp+0x40]
   14001d0c1:	add    rsp,0x20
   14001d0c5:	pop    rdi
   14001d0c6:	ret    
   14001d0c7:	int3   
   14001d0c8:	int3   
   14001d0c9:	int3   
   14001d0ca:	int3   
   14001d0cb:	int3   
   14001d0cc:	int3   
   14001d0cd:	int3   
   14001d0ce:	int3   
   14001d0cf:	int3   
   14001d0d0:	mov    QWORD PTR [rsp+0x8],rbx
   14001d0d5:	push   rdi
   14001d0d6:	sub    rsp,0x20
   14001d0da:	mov    rdi,QWORD PTR [rcx]
   14001d0dd:	test   rdi,rdi
   14001d0e0:	je     0x14001d122
   14001d0e2:	mov    eax,DWORD PTR [rdi+0x18]
   14001d0e5:	add    rdi,0x10
   14001d0e9:	cmp    eax,0x1
   14001d0ec:	jne    0x14001d0f7
   14001d0ee:	mov    DWORD PTR [rdi+0x8],0x0
   14001d0f5:	jmp    0x14001d104
   14001d0f7:	or     eax,0xffffffff
   14001d0fa:	lock xadd DWORD PTR [rdi+0x8],eax
   14001d0ff:	sub    eax,0x1
   14001d102:	jg     0x14001d122
   14001d104:	test   rdi,rdi
   14001d107:	je     0x14001d122
   14001d109:	mov    rax,QWORD PTR [rdi]
   14001d10c:	mov    rbx,QWORD PTR [rax]
   14001d10f:	mov    rcx,rbx
   14001d112:	call   QWORD PTR [rip+0x15590]        # 0x1400326a8
   14001d118:	mov    edx,0x1
   14001d11d:	mov    rcx,rdi
   14001d120:	call   rbx
   14001d122:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d127:	add    rsp,0x20
   14001d12b:	pop    rdi
   14001d12c:	ret    
   14001d12d:	int3   
   14001d12e:	int3   
   14001d12f:	int3   
   14001d130:	int3   
   14001d131:	int3   
   14001d132:	int3   
   14001d133:	int3   
   14001d134:	mov    QWORD PTR [rsp+0x8],rbx
   14001d139:	mov    QWORD PTR [rsp+0x10],rsi
   14001d13e:	push   rdi
   14001d13f:	sub    rsp,0x20
   14001d143:	mov    rdi,QWORD PTR [rcx]
   14001d146:	mov    rsi,rcx
   14001d149:	and    QWORD PTR [rcx],0x0
   14001d14d:	test   rdi,rdi
   14001d150:	je     0x14001d192
   14001d152:	mov    eax,DWORD PTR [rdi+0x18]
   14001d155:	add    rdi,0x10
   14001d159:	cmp    eax,0x1
   14001d15c:	jne    0x14001d167
   14001d15e:	mov    DWORD PTR [rdi+0x8],0x0
   14001d165:	jmp    0x14001d174
   14001d167:	or     eax,0xffffffff
   14001d16a:	lock xadd DWORD PTR [rdi+0x8],eax
   14001d16f:	sub    eax,0x1
   14001d172:	jg     0x14001d192
   14001d174:	test   rdi,rdi
   14001d177:	je     0x14001d192
   14001d179:	mov    rax,QWORD PTR [rdi]
   14001d17c:	mov    rbx,QWORD PTR [rax]
   14001d17f:	mov    rcx,rbx
   14001d182:	call   QWORD PTR [rip+0x15520]        # 0x1400326a8
   14001d188:	mov    edx,0x1
   14001d18d:	mov    rcx,rdi
   14001d190:	call   rbx
   14001d192:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d197:	mov    rax,rsi
   14001d19a:	mov    rsi,QWORD PTR [rsp+0x38]
   14001d19f:	add    rsp,0x20
   14001d1a3:	pop    rdi
   14001d1a4:	ret    
   14001d1a5:	int3   
   14001d1a6:	int3   
   14001d1a7:	int3   
   14001d1a8:	int3   
   14001d1a9:	int3   
   14001d1aa:	int3   
   14001d1ab:	int3   
   14001d1ac:	mov    QWORD PTR [rsp+0x8],rbx
   14001d1b1:	mov    QWORD PTR [rsp+0x10],rsi
   14001d1b6:	push   rdi
   14001d1b7:	sub    rsp,0x20
   14001d1bb:	mov    r8,QWORD PTR [rdx]
   14001d1be:	mov    rsi,rcx
   14001d1c1:	test   r8,r8
   14001d1c4:	je     0x14001d1dd
   14001d1c6:	mov    eax,DWORD PTR [r8+0x18]
   14001d1ca:	test   eax,eax
   14001d1cc:	jne    0x14001d1d8
   14001d1ce:	mov    DWORD PTR [r8+0x18],0x1
   14001d1d6:	jmp    0x14001d1dd
   14001d1d8:	lock inc DWORD PTR [r8+0x18]
   14001d1dd:	mov    rdi,QWORD PTR [rcx]
   14001d1e0:	mov    QWORD PTR [rcx],r8
   14001d1e3:	test   rdi,rdi
   14001d1e6:	je     0x14001d228
   14001d1e8:	mov    eax,DWORD PTR [rdi+0x18]
   14001d1eb:	add    rdi,0x10
   14001d1ef:	cmp    eax,0x1
   14001d1f2:	jne    0x14001d1fd
   14001d1f4:	mov    DWORD PTR [rdi+0x8],0x0
   14001d1fb:	jmp    0x14001d20a
   14001d1fd:	or     eax,0xffffffff
   14001d200:	lock xadd DWORD PTR [rdi+0x8],eax
   14001d205:	sub    eax,0x1
   14001d208:	jg     0x14001d228
   14001d20a:	test   rdi,rdi
   14001d20d:	je     0x14001d228
   14001d20f:	mov    rax,QWORD PTR [rdi]
   14001d212:	mov    rbx,QWORD PTR [rax]
   14001d215:	mov    rcx,rbx
   14001d218:	call   QWORD PTR [rip+0x1548a]        # 0x1400326a8
   14001d21e:	mov    edx,0x1
   14001d223:	mov    rcx,rdi
   14001d226:	call   rbx
   14001d228:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d22d:	mov    rax,rsi
   14001d230:	mov    rsi,QWORD PTR [rsp+0x38]
   14001d235:	add    rsp,0x20
   14001d239:	pop    rdi
   14001d23a:	ret    
   14001d23b:	int3   
   14001d23c:	int3   
   14001d23d:	int3   
   14001d23e:	int3   
   14001d23f:	int3   
   14001d240:	int3   
   14001d241:	int3   
   14001d242:	int3   
   14001d243:	int3   
   14001d244:	rex push rbx
   14001d246:	sub    rsp,0x20
   14001d24a:	mov    rbx,rcx
   14001d24d:	call   0x14001d324
   14001d252:	mov    rcx,QWORD PTR [rbx]
   14001d255:	add    rsp,0x20
   14001d259:	pop    rbx
   14001d25a:	rex.W jmp QWORD PTR [rip+0x15367]        # 0x1400325c8
   14001d261:	int3   
   14001d262:	int3   
   14001d263:	int3   
   14001d264:	int3   
   14001d265:	int3   
   14001d266:	int3   
   14001d267:	int3   
   14001d268:	mov    QWORD PTR [rsp+0x8],rbx
   14001d26d:	mov    QWORD PTR [rsp+0x10],rbp
   14001d272:	mov    QWORD PTR [rsp+0x18],r8
   14001d277:	push   rsi
   14001d278:	push   rdi
   14001d279:	push   r14
   14001d27b:	sub    rsp,0x20
   14001d27f:	mov    rbx,r8
   14001d282:	mov    rax,QWORD PTR [r8]
   14001d285:	mov    r14,rdx
   14001d288:	mov    QWORD PTR [rsp+0x50],rax
   14001d28d:	mov    rbp,rcx
   14001d290:	cmp    r8,QWORD PTR [rcx]
   14001d293:	je     0x14001d305
   14001d295:	mov    r8,QWORD PTR [r8+0x8]
   14001d299:	mov    rax,QWORD PTR [rbx]
   14001d29c:	mov    QWORD PTR [r8],rax
   14001d29f:	mov    r8,QWORD PTR [rbx]
   14001d2a2:	mov    rax,QWORD PTR [rbx+0x8]
   14001d2a6:	mov    QWORD PTR [r8+0x8],rax
   14001d2aa:	mov    rsi,QWORD PTR [rbx+0x18]
   14001d2ae:	test   rsi,rsi
   14001d2b1:	je     0x14001d2f3
   14001d2b3:	mov    eax,DWORD PTR [rsi+0x18]
   14001d2b6:	add    rsi,0x10
   14001d2ba:	cmp    eax,0x1
   14001d2bd:	jne    0x14001d2c8
   14001d2bf:	mov    DWORD PTR [rsi+0x8],0x0
   14001d2c6:	jmp    0x14001d2d5
   14001d2c8:	or     eax,0xffffffff
   14001d2cb:	lock xadd DWORD PTR [rsi+0x8],eax
   14001d2d0:	sub    eax,0x1
   14001d2d3:	jg     0x14001d2f3
   14001d2d5:	test   rsi,rsi
   14001d2d8:	je     0x14001d2f3
   14001d2da:	mov    rax,QWORD PTR [rsi]
   14001d2dd:	mov    rdi,QWORD PTR [rax]
   14001d2e0:	mov    rcx,rdi
   14001d2e3:	call   QWORD PTR [rip+0x153bf]        # 0x1400326a8
   14001d2e9:	mov    edx,0x1
   14001d2ee:	mov    rcx,rsi
   14001d2f1:	call   rdi
   14001d2f3:	mov    rcx,rbx
   14001d2f6:	call   QWORD PTR [rip+0x152cc]        # 0x1400325c8
   14001d2fc:	dec    QWORD PTR [rbp+0x8]
   14001d300:	mov    rax,QWORD PTR [rsp+0x50]
   14001d305:	mov    rbx,QWORD PTR [rsp+0x40]
   14001d30a:	mov    rbp,QWORD PTR [rsp+0x48]
   14001d30f:	mov    QWORD PTR [r14],rax
   14001d312:	mov    rax,r14
   14001d315:	add    rsp,0x20
   14001d319:	pop    r14
   14001d31b:	pop    rdi
   14001d31c:	pop    rsi
   14001d31d:	ret    
   14001d31e:	int3   
   14001d31f:	int3   
   14001d320:	int3   
   14001d321:	int3   
   14001d322:	int3   
   14001d323:	int3   
   14001d324:	mov    rax,rsp
   14001d327:	mov    QWORD PTR [rax+0x8],rbx
   14001d32b:	mov    QWORD PTR [rax+0x10],rbp
   14001d32f:	mov    QWORD PTR [rax+0x18],rsi
   14001d333:	mov    QWORD PTR [rax+0x20],rdi
   14001d337:	push   r14
   14001d339:	sub    rsp,0x20
   14001d33d:	mov    rax,QWORD PTR [rcx]
   14001d340:	mov    rdi,rcx
   14001d343:	mov    r14,QWORD PTR [rax]
   14001d346:	mov    QWORD PTR [rax],rax
   14001d349:	mov    rax,QWORD PTR [rcx]
   14001d34c:	mov    QWORD PTR [rax+0x8],rax
   14001d350:	and    QWORD PTR [rcx+0x8],0x0
   14001d355:	cmp    r14,QWORD PTR [rcx]
   14001d358:	je     0x14001d3b7
   14001d35a:	mov    rsi,QWORD PTR [r14+0x18]
   14001d35e:	mov    rbp,QWORD PTR [r14]
   14001d361:	test   rsi,rsi
   14001d364:	je     0x14001d3a6
   14001d366:	mov    eax,DWORD PTR [rsi+0x18]
   14001d369:	add    rsi,0x10
   14001d36d:	cmp    eax,0x1
   14001d370:	jne    0x14001d37b
   14001d372:	mov    DWORD PTR [rsi+0x8],0x0
   14001d379:	jmp    0x14001d388
   14001d37b:	or     eax,0xffffffff
   14001d37e:	lock xadd DWORD PTR [rsi+0x8],eax
   14001d383:	sub    eax,0x1
   14001d386:	jg     0x14001d3a6
   14001d388:	test   rsi,rsi
   14001d38b:	je     0x14001d3a6
   14001d38d:	mov    rax,QWORD PTR [rsi]
   14001d390:	mov    rbx,QWORD PTR [rax]
   14001d393:	mov    rcx,rbx
   14001d396:	call   QWORD PTR [rip+0x1530c]        # 0x1400326a8
   14001d39c:	mov    edx,0x1
   14001d3a1:	mov    rcx,rsi
   14001d3a4:	call   rbx
   14001d3a6:	mov    rcx,r14
   14001d3a9:	call   QWORD PTR [rip+0x15219]        # 0x1400325c8
   14001d3af:	mov    r14,rbp
   14001d3b2:	cmp    rbp,QWORD PTR [rdi]
   14001d3b5:	jne    0x14001d35a
   14001d3b7:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d3bc:	mov    rbp,QWORD PTR [rsp+0x38]
   14001d3c1:	mov    rsi,QWORD PTR [rsp+0x40]
   14001d3c6:	mov    rdi,QWORD PTR [rsp+0x48]
   14001d3cb:	add    rsp,0x20
   14001d3cf:	pop    r14
   14001d3d1:	ret    
   14001d3d2:	int3   
   14001d3d3:	int3   
   14001d3d4:	int3   
   14001d3d5:	int3   
   14001d3d6:	int3   
   14001d3d7:	int3   
   14001d3d8:	xorps  xmm1,xmm1
   14001d3db:	test   edx,edx
   14001d3dd:	je     0x14001d3fc
   14001d3df:	mov    eax,ecx
   14001d3e1:	xorps  xmm0,xmm0
   14001d3e4:	cvtsi2sd xmm1,rax
   14001d3e9:	mov    eax,edx
   14001d3eb:	cvtsi2sd xmm0,rax
   14001d3f0:	mulsd  xmm1,QWORD PTR [rip+0x20090]        # 0x14003d488
   14001d3f8:	divsd  xmm1,xmm0
   14001d3fc:	addsd  xmm1,QWORD PTR [rip+0x2007c]        # 0x14003d480
   14001d404:	cvttsd2si rax,xmm1
   14001d409:	ret    
   14001d40a:	int3   
   14001d40b:	int3   
   14001d40c:	int3   
   14001d40d:	int3   
   14001d40e:	int3   
   14001d40f:	int3   
   14001d410:	mov    rax,rsp
   14001d413:	mov    QWORD PTR [rax+0x10],rbx
   14001d417:	mov    QWORD PTR [rax+0x18],rbp
   14001d41b:	mov    QWORD PTR [rax+0x20],rsi
   14001d41f:	push   rdi
   14001d420:	push   r12
   14001d422:	push   r13
   14001d424:	push   r14
   14001d426:	push   r15
   14001d428:	sub    rsp,0x20
   14001d42c:	and    QWORD PTR [rcx],0x0
   14001d430:	mov    r15,rcx
   14001d433:	and    QWORD PTR [rax+0x8],0x0
   14001d438:	lea    rcx,[rax+0x8]
   14001d43c:	mov    rbx,r9
   14001d43f:	mov    rdi,r8
   14001d442:	mov    r14,rdx
   14001d445:	call   0x14001d588
   14001d44a:	mov    esi,eax
   14001d44c:	test   eax,eax
   14001d44e:	js     0x14001d517
   14001d454:	mov    rax,QWORD PTR [rsp+0x70]
   14001d459:	mov    r13,QWORD PTR [rdi]
   14001d45c:	mov    rdi,QWORD PTR [rsp+0x50]
   14001d461:	mov    rbp,QWORD PTR [r14]
   14001d464:	mov    rsi,QWORD PTR [rax]
   14001d467:	mov    rax,QWORD PTR [rsp+0x78]
   14001d46c:	mov    r12,QWORD PTR [rbx]
   14001d46f:	mov    rcx,QWORD PTR [rax]
   14001d472:	mov    QWORD PTR [rdi+0x20],rcx
   14001d476:	test   rsi,rsi
   14001d479:	je     0x14001d48f
   14001d47b:	mov    rax,QWORD PTR [rsi]
   14001d47e:	mov    rbx,QWORD PTR [rax]
   14001d481:	mov    rcx,rbx
   14001d484:	call   QWORD PTR [rip+0x1521e]        # 0x1400326a8
   14001d48a:	mov    rcx,rsi
   14001d48d:	call   rbx
   14001d48f:	mov    r14,QWORD PTR [rdi+0x30]
   14001d493:	mov    QWORD PTR [rdi+0x30],rsi
   14001d497:	test   r14,r14
   14001d49a:	je     0x14001d4b1
   14001d49c:	mov    rax,QWORD PTR [r14]
   14001d49f:	mov    rbx,QWORD PTR [rax+0x8]
   14001d4a3:	mov    rcx,rbx
   14001d4a6:	call   QWORD PTR [rip+0x151fc]        # 0x1400326a8
   14001d4ac:	mov    rcx,r14
   14001d4af:	call   rbx
   14001d4b1:	mov    QWORD PTR [rdi+0xb0],rbp
   14001d4b8:	mov    QWORD PTR [rdi+0xb8],r13
   14001d4bf:	mov    QWORD PTR [rdi+0xc0],r12
   14001d4c6:	mov    DWORD PTR [rdi+0xd8],0x2
   14001d4d0:	call   0x14002b158
   14001d4d5:	xor    edx,edx
   14001d4d7:	mov    QWORD PTR [rdi+0x28],rax
   14001d4db:	lea    rcx,[rdi+0x50]
   14001d4df:	lea    r8d,[rdx+0x42]
   14001d4e3:	call   0x14002e2ce
   14001d4e8:	lea    rax,[rdi+0x98]
   14001d4ef:	xor    edx,edx
   14001d4f1:	lea    rcx,[rdi+0xe0]
   14001d4f8:	mov    QWORD PTR [rax+0x8],rax
   14001d4fc:	mov    QWORD PTR [rax],rax
   14001d4ff:	and    DWORD PTR [rcx+0xc],0x0
   14001d503:	call   QWORD PTR [rip+0x14d67]        # 0x140032270
   14001d509:	xor    eax,eax
   14001d50b:	mov    QWORD PTR [r15],rdi
   14001d50e:	mov    QWORD PTR [rsp+0x50],rax
   14001d513:	xor    esi,esi
   14001d515:	jmp    0x14001d51c
   14001d517:	mov    rax,QWORD PTR [rsp+0x50]
   14001d51c:	test   rax,rax
   14001d51f:	je     0x14001d561
   14001d521:	lea    rdi,[rax+0x10]
   14001d525:	mov    eax,DWORD PTR [rdi+0x8]
   14001d528:	cmp    eax,0x1
   14001d52b:	jne    0x14001d536
   14001d52d:	mov    DWORD PTR [rdi+0x8],0x0
   14001d534:	jmp    0x14001d543
   14001d536:	or     eax,0xffffffff
   14001d539:	lock xadd DWORD PTR [rdi+0x8],eax
   14001d53e:	sub    eax,0x1
   14001d541:	jg     0x14001d561
   14001d543:	test   rdi,rdi
   14001d546:	je     0x14001d561
   14001d548:	mov    r8,QWORD PTR [rdi]
   14001d54b:	mov    rbx,QWORD PTR [r8]
   14001d54e:	mov    rcx,rbx
   14001d551:	call   QWORD PTR [rip+0x15151]        # 0x1400326a8
   14001d557:	mov    edx,0x1
   14001d55c:	mov    rcx,rdi
   14001d55f:	call   rbx
   14001d561:	mov    rbx,QWORD PTR [rsp+0x58]
   14001d566:	mov    eax,esi
   14001d568:	mov    rsi,QWORD PTR [rsp+0x68]
   14001d56d:	mov    rbp,QWORD PTR [rsp+0x60]
   14001d572:	add    rsp,0x20
   14001d576:	pop    r15
   14001d578:	pop    r14
   14001d57a:	pop    r13
   14001d57c:	pop    r12
   14001d57e:	pop    rdi
   14001d57f:	ret    
   14001d580:	int3   
   14001d581:	int3   
   14001d582:	int3   
   14001d583:	int3   
   14001d584:	int3   
   14001d585:	int3   
   14001d586:	int3   
   14001d587:	int3   
   14001d588:	rex push rbx
   14001d58a:	sub    rsp,0x30
   14001d58e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001d597:	mov    rbx,rcx
   14001d59a:	mov    ecx,0x108
   14001d59f:	call   QWORD PTR [rip+0x1502b]        # 0x1400325d0
   14001d5a5:	mov    rdx,rax
   14001d5a8:	xor    r8d,r8d
   14001d5ab:	test   rax,rax
   14001d5ae:	je     0x14001d605
   14001d5b0:	mov    DWORD PTR [rax+0x18],r8d
   14001d5b4:	lea    rax,[rip+0x174b5]        # 0x140034a70
   14001d5bb:	mov    QWORD PTR [rdx],rax
   14001d5be:	lea    rax,[rip+0x1742b]        # 0x1400349f0
   14001d5c5:	mov    QWORD PTR [rdx+0x8],rax
   14001d5c9:	lea    rax,[rip+0x17410]        # 0x1400349e0
   14001d5d0:	mov    QWORD PTR [rdx+0x10],rax
   14001d5d4:	mov    QWORD PTR [rdx+0x30],r8
   14001d5d8:	mov    QWORD PTR [rdx+0x38],r8
   14001d5dc:	mov    QWORD PTR [rdx+0x40],r8
   14001d5e0:	mov    QWORD PTR [rdx+0x48],r8
   14001d5e4:	mov    DWORD PTR [rdx+0xa8],r8d
   14001d5eb:	mov    DWORD PTR [rdx+0xc8],r8d
   14001d5f2:	mov    QWORD PTR [rdx+0xd0],r8
   14001d5f9:	mov    DWORD PTR [rdx+0xec],0xf12192e
   14001d603:	jmp    0x14001d608
   14001d605:	mov    rdx,r8
   14001d608:	test   rdx,rdx
   14001d60b:	je     0x14001d626
   14001d60d:	mov    eax,DWORD PTR [rdx+0x18]
   14001d610:	test   eax,eax
   14001d612:	jne    0x14001d61d
   14001d614:	mov    DWORD PTR [rdx+0x18],0x1
   14001d61b:	jmp    0x14001d621
   14001d61d:	lock inc DWORD PTR [rdx+0x18]
   14001d621:	mov    QWORD PTR [rbx],rdx
   14001d624:	jmp    0x14001d635
   14001d626:	mov    eax,0x8007000e
   14001d62b:	jmp    0x14001d637
   14001d62d:	mov    eax,DWORD PTR [rsp+0x48]
   14001d631:	test   eax,eax
   14001d633:	js     0x14001d637
   14001d635:	xor    eax,eax
   14001d637:	add    rsp,0x30
   14001d63b:	pop    rbx
   14001d63c:	ret    
   14001d63d:	int3   
   14001d63e:	int3   
   14001d63f:	int3   
   14001d640:	int3   
   14001d641:	int3   
   14001d642:	int3   
   14001d643:	int3   
   14001d644:	mov    rax,rsp
   14001d647:	mov    QWORD PTR [rax+0x20],r9
   14001d64b:	mov    QWORD PTR [rax+0x8],rcx
   14001d64f:	push   rsi
   14001d650:	push   rdi
   14001d651:	push   r14
   14001d653:	sub    rsp,0x30
   14001d657:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   14001d65f:	mov    QWORD PTR [rax+0x10],rbx
   14001d663:	mov    rdi,r8
   14001d666:	mov    r14,rdx
   14001d669:	mov    rsi,rcx
   14001d66c:	mov    ecx,DWORD PTR [r8]
   14001d66f:	xor    ecx,0xdeadbeef
   14001d675:	mov    ebx,0x7fffffff
   14001d67a:	and    ecx,ebx
   14001d67c:	mov    edx,0x1f31d
   14001d681:	call   QWORD PTR [rip+0x14f31]        # 0x1400325b8
   14001d687:	mov    QWORD PTR [rsp+0x60],rax
   14001d68c:	shr    rax,0x20
   14001d690:	imul   ecx,eax,0x41a7
   14001d696:	imul   eax,DWORD PTR [rsp+0x60],0xb14
   14001d69e:	sub    ecx,eax
   14001d6a0:	jns    0x14001d6a4
   14001d6a2:	add    ecx,ebx
   14001d6a4:	mov    rdx,QWORD PTR [rsi+0x28]
   14001d6a8:	movsxd rcx,ecx
   14001d6ab:	and    rcx,rdx
   14001d6ae:	cmp    QWORD PTR [rsi+0x30],rcx
   14001d6b2:	ja     0x14001d6c1
   14001d6b4:	shr    rdx,1
   14001d6b7:	or     rax,0xffffffffffffffff
   14001d6bb:	sub    rax,rdx
   14001d6be:	add    rcx,rax
   14001d6c1:	mov    rbx,QWORD PTR [rsi]
   14001d6c4:	mov    r8,rcx
   14001d6c7:	add    r8,r8
   14001d6ca:	mov    rax,QWORD PTR [rsi+0x10]
   14001d6ce:	cmp    rbx,QWORD PTR [rax+r8*8]
   14001d6d2:	je     0x14001d723
   14001d6d4:	mov    rbx,QWORD PTR [rax+r8*8+0x8]
   14001d6d9:	mov    rbx,QWORD PTR [rbx]
   14001d6dc:	cmp    rbx,QWORD PTR [rax+r8*8]
   14001d6e0:	je     0x14001d723
   14001d6e2:	mov    rdx,QWORD PTR [rdi]
   14001d6e5:	add    rcx,rcx
   14001d6e8:	mov    rbx,QWORD PTR [rbx+0x8]
   14001d6ec:	cmp    QWORD PTR [rbx+0x10],rdx
   14001d6f0:	jbe    0x14001d6fa
   14001d6f2:	cmp    rbx,QWORD PTR [rax+rcx*8]
   14001d6f6:	jne    0x14001d6e8
   14001d6f8:	jmp    0x14001d723
   14001d6fa:	jae    0x14001d701
   14001d6fc:	mov    rbx,QWORD PTR [rbx]
   14001d6ff:	jmp    0x14001d723
   14001d701:	mov    r8,QWORD PTR [rsp+0x68]
   14001d706:	lea    rdx,[rsp+0x60]
   14001d70b:	mov    rcx,rsi
   14001d70e:	call   0x14001d268
   14001d713:	mov    QWORD PTR [r14],rbx
   14001d716:	mov    BYTE PTR [r14+0x8],0x0
   14001d71b:	mov    rax,r14
   14001d71e:	jmp    0x14001d7bb
   14001d723:	mov    rdi,QWORD PTR [rsp+0x68]
   14001d728:	mov    rax,QWORD PTR [rdi]
   14001d72b:	cmp    rbx,rax
   14001d72e:	je     0x14001d75d
   14001d730:	mov    rcx,QWORD PTR [rdi+0x8]
   14001d734:	mov    QWORD PTR [rcx],rax
   14001d737:	mov    rcx,QWORD PTR [rax+0x8]
   14001d73b:	mov    QWORD PTR [rcx],rbx
   14001d73e:	mov    rcx,QWORD PTR [rbx+0x8]
   14001d742:	mov    QWORD PTR [rcx],rdi
   14001d745:	mov    rdx,QWORD PTR [rbx+0x8]
   14001d749:	mov    rcx,QWORD PTR [rax+0x8]
   14001d74d:	mov    QWORD PTR [rbx+0x8],rcx
   14001d751:	mov    rcx,QWORD PTR [rdi+0x8]
   14001d755:	mov    QWORD PTR [rax+0x8],rcx
   14001d759:	mov    QWORD PTR [rdi+0x8],rdx
   14001d75d:	mov    rdx,QWORD PTR [rsi+0x10]
   14001d761:	mov    rax,QWORD PTR [rdx+r8*8]
   14001d765:	cmp    rax,QWORD PTR [rsi]
   14001d768:	jne    0x14001d779
   14001d76a:	mov    QWORD PTR [rdx+r8*8],rdi
   14001d76e:	mov    rax,QWORD PTR [rsi+0x10]
   14001d772:	mov    QWORD PTR [rax+r8*8+0x8],rdi
   14001d777:	jmp    0x14001d7a8
   14001d779:	cmp    rax,rbx
   14001d77c:	jne    0x14001d784
   14001d77e:	mov    QWORD PTR [rdx+r8*8],rdi
   14001d782:	jmp    0x14001d7a8
   14001d784:	mov    rax,QWORD PTR [rdx+r8*8+0x8]
   14001d789:	mov    rcx,QWORD PTR [rax]
   14001d78c:	mov    QWORD PTR [rdx+r8*8+0x8],rcx
   14001d791:	cmp    rcx,rdi
   14001d794:	je     0x14001d7a8
   14001d796:	mov    rdx,QWORD PTR [rsi+0x10]
   14001d79a:	mov    rax,QWORD PTR [rdx+r8*8+0x8]
   14001d79f:	mov    rcx,QWORD PTR [rax+0x8]
   14001d7a3:	mov    QWORD PTR [rdx+r8*8+0x8],rcx
   14001d7a8:	mov    rcx,rsi
   14001d7ab:	call   0x14001d7ec
   14001d7b0:	mov    QWORD PTR [r14],rdi
   14001d7b3:	mov    BYTE PTR [r14+0x8],0x1
   14001d7b8:	mov    rax,r14
   14001d7bb:	mov    rbx,QWORD PTR [rsp+0x58]
   14001d7c0:	add    rsp,0x30
   14001d7c4:	pop    r14
   14001d7c6:	pop    rdi
   14001d7c7:	pop    rsi
   14001d7c8:	ret    
   14001d7c9:	int3   
   14001d7ca:	int3   
   14001d7cb:	int3   
   14001d7cc:	int3   
   14001d7cd:	int3   
   14001d7ce:	int3   
   14001d7cf:	int3   
   14001d7d0:	sub    rsp,0x28
   14001d7d4:	mov    r8,rdx
   14001d7d7:	lea    rdx,[rsp+0x30]
   14001d7dc:	call   0x14001d268
   14001d7e1:	add    rsp,0x28
   14001d7e5:	ret    
   14001d7e6:	int3   
   14001d7e7:	int3   
   14001d7e8:	int3   
   14001d7e9:	int3   
   14001d7ea:	int3   
   14001d7eb:	int3   
   14001d7ec:	mov    QWORD PTR [rsp+0x18],rbx
   14001d7f1:	mov    QWORD PTR [rsp+0x20],rsi
   14001d7f6:	push   rdi
   14001d7f7:	sub    rsp,0x40
   14001d7fb:	mov    rax,QWORD PTR [rcx+0x8]
   14001d7ff:	xorps  xmm0,xmm0
   14001d802:	mov    rbx,QWORD PTR [rcx+0x30]
   14001d806:	mov    rsi,rcx
   14001d809:	movss  xmm2,DWORD PTR [rip+0x1fc87]        # 0x14003d498
   14001d811:	cvtsi2ss xmm0,rax
   14001d816:	test   rax,rax
   14001d819:	jns    0x14001d81f
   14001d81b:	addss  xmm0,xmm2
   14001d81f:	xorps  xmm1,xmm1
   14001d822:	cvtsi2ss xmm1,rbx
   14001d827:	test   rbx,rbx
   14001d82a:	jns    0x14001d830
   14001d82c:	addss  xmm1,xmm2
   14001d830:	divss  xmm0,xmm1
   14001d834:	comiss xmm0,DWORD PTR [rcx+0x38]
   14001d838:	jbe    0x14001d8c1
   14001d83e:	cmp    rbx,0x200
   14001d845:	jae    0x14001d84d
   14001d847:	shl    rbx,0x3
   14001d84b:	jmp    0x14001d85f
   14001d84d:	movabs rax,0xfffffffffffffff
   14001d857:	cmp    rbx,rax
   14001d85a:	jae    0x14001d85f
   14001d85c:	add    rbx,rbx
   14001d85f:	mov    rax,QWORD PTR [rsi]
   14001d862:	lea    r9,[rbx+rbx*1]
   14001d866:	add    rcx,0x10
   14001d86a:	mov    QWORD PTR [rsp+0x50],rax
   14001d86f:	lea    rax,[rsp+0x50]
   14001d874:	lea    rdx,[rsp+0x58]
   14001d879:	mov    QWORD PTR [rsp+0x20],rax
   14001d87e:	mov    r8,QWORD PTR [rcx]
   14001d881:	mov    QWORD PTR [rcx+0x8],r8
   14001d885:	call   0x14000dfb4
   14001d88a:	lea    rax,[rbx-0x1]
   14001d88e:	mov    QWORD PTR [rsi+0x30],rbx
   14001d892:	mov    QWORD PTR [rsi+0x28],rax
   14001d896:	mov    rax,QWORD PTR [rsi]
   14001d899:	cmp    QWORD PTR [rax],rax
   14001d89c:	je     0x14001d8c1
   14001d89e:	mov    rdi,QWORD PTR [rax+0x8]
   14001d8a2:	mov    rbx,QWORD PTR [rsi]
   14001d8a5:	lea    rdx,[rsp+0x30]
   14001d8aa:	mov    rcx,rsi
   14001d8ad:	mov    rbx,QWORD PTR [rbx]
   14001d8b0:	mov    r9,rbx
   14001d8b3:	lea    r8,[rbx+0x10]
   14001d8b7:	call   0x14001d644
   14001d8bc:	cmp    rbx,rdi
   14001d8bf:	jne    0x14001d8a2
   14001d8c1:	mov    rbx,QWORD PTR [rsp+0x60]
   14001d8c6:	mov    rsi,QWORD PTR [rsp+0x68]
   14001d8cb:	add    rsp,0x40
   14001d8cf:	pop    rdi
   14001d8d0:	ret    
   14001d8d1:	int3   
   14001d8d2:	int3   
   14001d8d3:	int3   
   14001d8d4:	int3   
   14001d8d5:	int3   
   14001d8d6:	int3   
   14001d8d7:	int3   
   14001d8d8:	mov    QWORD PTR [rsp+0x8],rcx
   14001d8dd:	push   rbx
   14001d8de:	sub    rsp,0x30
   14001d8e2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001d8eb:	mov    rbx,r9
   14001d8ee:	call   0x140012294
   14001d8f3:	mov    QWORD PTR [rsp+0x40],rax
   14001d8f8:	lea    rdx,[rax+0x10]
   14001d8fc:	test   rdx,rdx
   14001d8ff:	je     0x14001d914
   14001d901:	mov    rcx,QWORD PTR [rbx]
   14001d904:	mov    QWORD PTR [rdx],rcx
   14001d907:	mov    rcx,QWORD PTR [rbx+0x8]
   14001d90b:	mov    QWORD PTR [rdx+0x8],rcx
   14001d90f:	and    QWORD PTR [rbx+0x8],0x0
   14001d914:	add    rsp,0x30
   14001d918:	pop    rbx
   14001d919:	ret    
   14001d91a:	int3   
   14001d91b:	int3   
   14001d91c:	int3   
   14001d91d:	int3   
   14001d91e:	int3   
   14001d91f:	int3   
   14001d920:	sub    rcx,0x8
   14001d924:	jmp    0x14001b1e8
   14001d929:	int3   
   14001d92a:	int3   
   14001d92b:	int3   
   14001d92c:	int3   
   14001d92d:	int3   
   14001d92e:	int3   
   14001d92f:	int3   
   14001d930:	rex push rbx
   14001d932:	sub    rsp,0x20
   14001d936:	mov    rbx,QWORD PTR [rcx]
   14001d939:	mov    edx,0xc0000000
   14001d93e:	xchg   DWORD PTR [rbx+0x3c],edx
   14001d941:	add    edx,0xc0000000
   14001d947:	add    edx,DWORD PTR [rbx+0x38]
   14001d94a:	test   edx,edx
   14001d94c:	jle    0x14001d95b
   14001d94e:	mov    rcx,QWORD PTR [rbx+0x30]
   14001d952:	xor    r8d,r8d
   14001d955:	call   QWORD PTR [rip+0x1482d]        # 0x140032188
   14001d95b:	mov    rcx,rbx
   14001d95e:	add    rsp,0x20
   14001d962:	pop    rbx
   14001d963:	rex.W jmp QWORD PTR [rip+0x1478e]        # 0x1400320f8
   14001d96a:	int3   
   14001d96b:	int3   
   14001d96c:	int3   
   14001d96d:	int3   
   14001d96e:	int3   
   14001d96f:	int3   
   14001d970:	mov    rax,rsp
   14001d973:	mov    QWORD PTR [rax+0x8],rbx
   14001d977:	mov    QWORD PTR [rax+0x10],rdi
   14001d97b:	mov    QWORD PTR [rax+0x20],r9
   14001d97f:	push   rbp
   14001d980:	lea    rbp,[rax-0x4f]
   14001d984:	sub    rsp,0x90
   14001d98b:	mov    rax,QWORD PTR [rip+0x2d68e]        # 0x14004b020
   14001d992:	xor    rax,rsp
   14001d995:	mov    QWORD PTR [rbp+0x37],rax
   14001d999:	mov    rcx,QWORD PTR [rbp+0x77]
   14001d99d:	lea    rax,[rbp+0x6f]
   14001d9a1:	mov    rdi,QWORD PTR [rip+0x32620]        # 0x14004ffc8
   14001d9a8:	xor    r8d,r8d
   14001d9ab:	mov    QWORD PTR [rbp+0x7],rax
   14001d9af:	mov    QWORD PTR [rbp+0xf],0x8
   14001d9b7:	test   rcx,rcx
   14001d9ba:	je     0x14001d9d3
   14001d9bc:	or     rax,0xffffffffffffffff
   14001d9c0:	inc    rax
   14001d9c3:	cmp    WORD PTR [rcx+rax*2],r8w
   14001d9c8:	jne    0x14001d9c0
   14001d9ca:	lea    edx,[rax*2+0x2]
   14001d9d1:	jmp    0x14001d9d8
   14001d9d3:	mov    edx,0xa
   14001d9d8:	test   rcx,rcx
   14001d9db:	mov    DWORD PTR [rbp+0x1f],edx
   14001d9de:	lea    rax,[rip+0x17abb]        # 0x1400354a0
   14001d9e5:	mov    DWORD PTR [rbp+0x23],r8d
   14001d9e9:	cmovne rax,rcx
   14001d9ed:	mov    QWORD PTR [rbp+0x2f],0x4
   14001d9f5:	cmp    BYTE PTR [rip+0x32594],r8b        # 0x14004ff90
   14001d9fc:	mov    QWORD PTR [rbp+0x17],rax
   14001da00:	lea    rax,[rbp+0x7f]
   14001da04:	mov    QWORD PTR [rbp+0x27],rax
   14001da08:	jne    0x14001da32
   14001da0a:	mov    rbx,QWORD PTR [rip+0x32577]        # 0x14004ff88
   14001da11:	mov    rcx,rbx
   14001da14:	call   QWORD PTR [rip+0x14c8e]        # 0x1400326a8
   14001da1a:	lea    r9,[rbp+0x7]
   14001da1e:	mov    r8d,0x3
   14001da24:	lea    rdx,[rip+0x16865]        # 0x140034290
   14001da2b:	mov    rcx,rdi
   14001da2e:	call   rbx
   14001da30:	jmp    0x14001da62
   14001da32:	lea    rax,[rip+0x1675f]        # 0x140034198
   14001da39:	mov    DWORD PTR [rbp+0x3],0x1a0000
   14001da40:	mov    QWORD PTR [rbp-0x11],rax
   14001da44:	lea    rdx,[rbp-0x29]
   14001da48:	mov    eax,0x60
   14001da4d:	mov    DWORD PTR [rbp-0x25],0x400
   14001da54:	mov    WORD PTR [rbp-0x29],ax
   14001da58:	mov    rcx,QWORD PTR [rdi+0x8]
   14001da5c:	call   QWORD PTR [rip+0x145c6]        # 0x140032028
   14001da62:	mov    rcx,QWORD PTR [rbp+0x37]
   14001da66:	xor    rcx,rsp
   14001da69:	call   0x14002dd00
   14001da6e:	lea    r11,[rsp+0x90]
   14001da76:	mov    rbx,QWORD PTR [r11+0x10]
   14001da7a:	mov    rdi,QWORD PTR [r11+0x18]
   14001da7e:	mov    rsp,r11
   14001da81:	pop    rbp
   14001da82:	ret    
   14001da83:	int3   
   14001da84:	int3   
   14001da85:	int3   
   14001da86:	int3   
   14001da87:	int3   
   14001da88:	int3   
   14001da89:	int3   
   14001da8a:	int3   
   14001da8b:	int3   
   14001da8c:	rex push rbx
   14001da8e:	sub    rsp,0x20
   14001da92:	mov    rbx,rcx
   14001da95:	mov    rcx,QWORD PTR [rcx+0x30]
   14001da99:	call   QWORD PTR [rip+0x146b9]        # 0x140032158
   14001da9f:	mov    rcx,QWORD PTR [rbx+0x28]
   14001daa3:	call   QWORD PTR [rip+0x146af]        # 0x140032158
   14001daa9:	mov    rcx,rbx
   14001daac:	add    rsp,0x20
   14001dab0:	pop    rbx
   14001dab1:	rex.W jmp QWORD PTR [rip+0x147c0]        # 0x140032278
   14001dab8:	int3   
   14001dab9:	int3   
   14001daba:	int3   
   14001dabb:	int3   
   14001dabc:	int3   
   14001dabd:	int3   
   14001dabe:	int3   
   14001dabf:	int3   
   14001dac0:	mov    eax,DWORD PTR [rcx+0x18]
   14001dac3:	mov    rdx,rcx
   14001dac6:	test   eax,eax
   14001dac8:	mov    eax,0x1
   14001dacd:	jne    0x14001dad3
   14001dacf:	mov    DWORD PTR [rcx+0x18],eax
   14001dad2:	ret    
   14001dad3:	mov    ecx,eax
   14001dad5:	lock xadd DWORD PTR [rdx+0x18],ecx
   14001dada:	add    eax,ecx
   14001dadc:	ret    
   14001dadd:	int3   
   14001dade:	int3   
   14001dadf:	int3   
   14001dae0:	int3   
   14001dae1:	int3   
   14001dae2:	int3   
   14001dae3:	int3   
   14001dae4:	int3   
   14001dae5:	int3   
   14001dae6:	int3   
   14001dae7:	int3   
   14001dae8:	int3   
   14001dae9:	int3   
   14001daea:	int3   
   14001daeb:	int3   
   14001daec:	int3   
   14001daed:	int3   
   14001daee:	int3   
   14001daef:	int3   
   14001daf0:	mov    QWORD PTR [rsp+0x8],rbx
   14001daf5:	push   rdi
   14001daf6:	sub    rsp,0x20
   14001dafa:	lea    rdi,[rcx+0x10]
   14001dafe:	mov    eax,DWORD PTR [rdi+0x8]
   14001db01:	cmp    eax,0x1
   14001db04:	jne    0x14001db0f
   14001db06:	mov    DWORD PTR [rdi+0x8],0x0
   14001db0d:	jmp    0x14001db1c
   14001db0f:	or     eax,0xffffffff
   14001db12:	lock xadd DWORD PTR [rdi+0x8],eax
   14001db17:	sub    eax,0x1
   14001db1a:	jg     0x14001db3c
   14001db1c:	test   rdi,rdi
   14001db1f:	je     0x14001db3a
   14001db21:	mov    rax,QWORD PTR [rdi]
   14001db24:	mov    rbx,QWORD PTR [rax]
   14001db27:	mov    rcx,rbx
   14001db2a:	call   QWORD PTR [rip+0x14b78]        # 0x1400326a8
   14001db30:	mov    edx,0x1
   14001db35:	mov    rcx,rdi
   14001db38:	call   rbx
   14001db3a:	xor    eax,eax
   14001db3c:	mov    rbx,QWORD PTR [rsp+0x30]
   14001db41:	add    rsp,0x20
   14001db45:	pop    rdi
   14001db46:	ret    
   14001db47:	int3   
   14001db48:	int3   
   14001db49:	int3   
   14001db4a:	int3   
   14001db4b:	int3   
   14001db4c:	int3   
   14001db4d:	int3   
   14001db4e:	int3   
   14001db4f:	int3   
   14001db50:	mov    r11,rsp
   14001db53:	mov    QWORD PTR [r11+0x20],r9
   14001db57:	sub    rsp,0x68
   14001db5b:	and    QWORD PTR [r11-0x18],0x0
   14001db60:	lea    rax,[r11+0x30]
   14001db64:	mov    QWORD PTR [r11-0x20],0x4
   14001db6c:	mov    r8d,0x18
   14001db72:	mov    QWORD PTR [r11-0x28],rax
   14001db76:	lea    rax,[r11+0x28]
   14001db7a:	movzx  r9d,r8w
   14001db7e:	lea    edx,[r8-0x10]
   14001db82:	mov    QWORD PTR [r11-0x30],rdx
   14001db86:	lea    r8,[rip+0x1ac3b]        # 0x1400387c8
   14001db8d:	mov    QWORD PTR [r11-0x38],rax
   14001db91:	lea    rax,[r11+0x20]
   14001db95:	mov    QWORD PTR [r11-0x40],rdx
   14001db99:	mov    edx,0x2b
   14001db9e:	mov    QWORD PTR [r11-0x48],rax
   14001dba2:	call   QWORD PTR [rip+0x14478]        # 0x140032020
   14001dba8:	add    rsp,0x68
   14001dbac:	ret    
   14001dbad:	int3   
   14001dbae:	int3   
   14001dbaf:	int3   
   14001dbb0:	int3   
   14001dbb1:	int3   
   14001dbb2:	int3   
   14001dbb3:	int3   
   14001dbb4:	mov    r11,rsp
   14001dbb7:	mov    QWORD PTR [r11+0x20],r9
   14001dbbb:	sub    rsp,0x78
   14001dbbf:	and    QWORD PTR [r11-0x18],0x0
   14001dbc4:	lea    rax,[r11+0x38]
   14001dbc8:	mov    r8d,0xf
   14001dbce:	movzx  r9d,r8w
   14001dbd2:	lea    edx,[r8-0x7]
   14001dbd6:	mov    QWORD PTR [r11-0x20],rdx
   14001dbda:	lea    r8,[rip+0x1abe7]        # 0x1400387c8
   14001dbe1:	mov    QWORD PTR [r11-0x28],rax
   14001dbe5:	lea    rax,[r11+0x30]
   14001dbe9:	mov    QWORD PTR [r11-0x30],0x4
   14001dbf1:	mov    QWORD PTR [r11-0x38],rax
   14001dbf5:	lea    rax,[r11+0x28]
   14001dbf9:	mov    QWORD PTR [r11-0x40],rdx
   14001dbfd:	mov    QWORD PTR [r11-0x48],rax
   14001dc01:	lea    rax,[r11+0x20]
   14001dc05:	mov    QWORD PTR [r11-0x50],rdx
   14001dc09:	mov    edx,0x2b
   14001dc0e:	mov    QWORD PTR [r11-0x58],rax
   14001dc12:	call   QWORD PTR [rip+0x14408]        # 0x140032020
   14001dc18:	add    rsp,0x78
   14001dc1c:	ret    
   14001dc1d:	int3   
   14001dc1e:	int3   
   14001dc1f:	int3   
   14001dc20:	int3   
   14001dc21:	int3   
   14001dc22:	int3   
   14001dc23:	int3   
   14001dc24:	mov    r11,rsp
   14001dc27:	mov    QWORD PTR [r11+0x20],r9
   14001dc2b:	sub    rsp,0x68
   14001dc2f:	and    QWORD PTR [r11-0x18],0x0
   14001dc34:	lea    rax,[r11+0x30]
   14001dc38:	mov    r8d,0x8
   14001dc3e:	movzx  r9d,dx
   14001dc42:	mov    QWORD PTR [r11-0x20],r8
   14001dc46:	mov    edx,0x2b
   14001dc4b:	mov    QWORD PTR [r11-0x28],rax
   14001dc4f:	lea    rax,[r11+0x28]
   14001dc53:	mov    QWORD PTR [r11-0x30],r8
   14001dc57:	mov    QWORD PTR [r11-0x38],rax
   14001dc5b:	lea    rax,[r11+0x20]
   14001dc5f:	mov    QWORD PTR [r11-0x40],r8
   14001dc63:	lea    r8,[rip+0x1ab5e]        # 0x1400387c8
   14001dc6a:	mov    QWORD PTR [r11-0x48],rax
   14001dc6e:	call   QWORD PTR [rip+0x143ac]        # 0x140032020
   14001dc74:	add    rsp,0x68
   14001dc78:	ret    
   14001dc79:	int3   
   14001dc7a:	int3   
   14001dc7b:	int3   
   14001dc7c:	int3   
   14001dc7d:	int3   
   14001dc7e:	int3   
   14001dc7f:	int3   
   14001dc80:	mov    rax,rsp
   14001dc83:	mov    QWORD PTR [rax+0x8],rcx
   14001dc87:	push   r14
   14001dc89:	sub    rsp,0x30
   14001dc8d:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14001dc95:	mov    QWORD PTR [rax+0x10],rbx
   14001dc99:	mov    QWORD PTR [rax+0x18],rsi
   14001dc9d:	mov    QWORD PTR [rax+0x20],rdi
   14001dca1:	mov    r14,rdx
   14001dca4:	mov    rbx,rcx
   14001dca7:	and    QWORD PTR [rcx],0x0
   14001dcab:	mov    edi,DWORD PTR [rdx+0x24]
   14001dcae:	add    rdi,0x6c
   14001dcb2:	mov    rcx,rdi
   14001dcb5:	call   0x140023f10
   14001dcba:	mov    rsi,rax
   14001dcbd:	mov    rcx,QWORD PTR [rbx]
   14001dcc0:	call   QWORD PTR [rip+0x14902]        # 0x1400325c8
   14001dcc6:	mov    QWORD PTR [rbx],rsi
   14001dcc9:	mov    r9,rdi
   14001dccc:	mov    r8,r14
   14001dccf:	mov    rdx,rdi
   14001dcd2:	mov    rcx,rsi
   14001dcd5:	call   QWORD PTR [rip+0x148e5]        # 0x1400325c0
   14001dcdb:	lea    rax,[rbx+0x8]
   14001dcdf:	mov    QWORD PTR [rax+0x8],rax
   14001dce3:	mov    QWORD PTR [rax],rax
   14001dce6:	mov    rax,rbx
   14001dce9:	mov    rbx,QWORD PTR [rsp+0x48]
   14001dcee:	mov    rsi,QWORD PTR [rsp+0x50]
   14001dcf3:	mov    rdi,QWORD PTR [rsp+0x58]
   14001dcf8:	add    rsp,0x30
   14001dcfc:	pop    r14
   14001dcfe:	ret    
   14001dcff:	int3   
   14001dd00:	int3   
   14001dd01:	int3   
   14001dd02:	int3   
   14001dd03:	int3   
   14001dd04:	int3   
   14001dd05:	int3   
   14001dd06:	int3   
   14001dd07:	int3   
   14001dd08:	int3   
   14001dd09:	int3   
   14001dd0a:	int3   
   14001dd0b:	int3   
   14001dd0c:	int3   
   14001dd0d:	int3   
   14001dd0e:	int3   
   14001dd0f:	int3   
   14001dd10:	mov    QWORD PTR [rsp+0x8],rbx
   14001dd15:	push   rdi
   14001dd16:	sub    rsp,0x20
   14001dd1a:	mov    ebx,edx
   14001dd1c:	mov    rdi,rcx
   14001dd1f:	call   0x14001dd5c
   14001dd24:	test   bl,0x1
   14001dd27:	je     0x14001dd32
   14001dd29:	mov    rcx,rdi
   14001dd2c:	call   QWORD PTR [rip+0x14896]        # 0x1400325c8
   14001dd32:	mov    rax,rdi
   14001dd35:	mov    rbx,QWORD PTR [rsp+0x30]
   14001dd3a:	add    rsp,0x20
   14001dd3e:	pop    rdi
   14001dd3f:	ret    
   14001dd40:	int3   
   14001dd41:	int3   
   14001dd42:	int3   
   14001dd43:	int3   
   14001dd44:	int3   
   14001dd45:	int3   
   14001dd46:	int3   
   14001dd47:	int3   
   14001dd48:	lea    rax,[rip+0x16c71]        # 0x1400349c0
   14001dd4f:	mov    QWORD PTR [rcx],rax
   14001dd52:	ret    
   14001dd53:	int3   
   14001dd54:	int3   
   14001dd55:	int3   
   14001dd56:	int3   
   14001dd57:	int3   
   14001dd58:	int3   
   14001dd59:	int3   
   14001dd5a:	int3   
   14001dd5b:	int3   
   14001dd5c:	mov    rax,rsp
   14001dd5f:	mov    QWORD PTR [rax+0x8],rcx
   14001dd63:	push   rdi
   14001dd64:	push   r14
   14001dd66:	push   r15
   14001dd68:	sub    rsp,0x30
   14001dd6c:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   14001dd74:	mov    QWORD PTR [rax+0x10],rbx
   14001dd78:	mov    QWORD PTR [rax+0x18],rbp
   14001dd7c:	mov    QWORD PTR [rax+0x20],rsi
   14001dd80:	mov    rdi,rcx
   14001dd83:	lea    rax,[rip+0x16ce6]        # 0x140034a70
   14001dd8a:	mov    QWORD PTR [rcx],rax
   14001dd8d:	lea    rax,[rip+0x16c5c]        # 0x1400349f0
   14001dd94:	mov    QWORD PTR [rcx+0x8],rax
   14001dd98:	lea    rax,[rip+0x16c41]        # 0x1400349e0
   14001dd9f:	mov    QWORD PTR [rcx+0x10],rax
   14001dda3:	mov    rcx,QWORD PTR [rcx+0x86]
   14001ddaa:	call   QWORD PTR [rip+0x14818]        # 0x1400325c8
   14001ddb0:	mov    r9d,DWORD PTR [rdi+0xa8]
   14001ddb7:	lea    r15,[rip+0x2d2ba]        # 0x14004b078
   14001ddbe:	test   r9d,r9d
   14001ddc1:	je     0x14001de55
   14001ddc7:	mov    rcx,QWORD PTR [rip+0x2d2aa]        # 0x14004b078
   14001ddce:	cmp    rcx,r15
   14001ddd1:	je     0x14001ddee
   14001ddd3:	test   BYTE PTR [rcx+0x1c],0x1
   14001ddd7:	je     0x14001ddee
   14001ddd9:	mov    edx,0xb
   14001ddde:	lea    r8,[rip+0x1a9e3]        # 0x1400387c8
   14001dde5:	mov    rcx,QWORD PTR [rcx+0x10]
   14001dde9:	call   0x140001f70
   14001ddee:	lea    rbp,[rdi+0xe0]
   14001ddf5:	mov    rcx,rbp
   14001ddf8:	call   QWORD PTR [rip+0x1430a]        # 0x140032108
   14001ddfe:	lea    rsi,[rdi+0x98]
   14001de05:	mov    rbx,QWORD PTR [rsi]
   14001de08:	jmp    0x14001de47
   14001de0a:	lea    r14,[rbx-0x8]
   14001de0e:	mov    rbx,QWORD PTR [rbx]
   14001de11:	lea    r8,[r14+0x8]
   14001de15:	mov    rdx,QWORD PTR [r8]
   14001de18:	mov    rax,QWORD PTR [r8+0x8]
   14001de1c:	mov    QWORD PTR [rax],rdx
   14001de1f:	mov    QWORD PTR [rdx+0x8],rax
   14001de23:	mov    QWORD PTR [r8+0x8],r8
   14001de27:	mov    QWORD PTR [r8],r8
   14001de2a:	test   r14,r14
   14001de2d:	je     0x14001de41
   14001de2f:	mov    rcx,QWORD PTR [r14]
   14001de32:	call   QWORD PTR [rip+0x14790]        # 0x1400325c8
   14001de38:	mov    rcx,r14
   14001de3b:	call   QWORD PTR [rip+0x14787]        # 0x1400325c8
   14001de41:	dec    DWORD PTR [rdi+0xa8]
   14001de47:	cmp    rbx,rsi
   14001de4a:	jne    0x14001de0a
   14001de4c:	mov    rcx,rbp
   14001de4f:	call   QWORD PTR [rip+0x142a3]        # 0x1400320f8
   14001de55:	mov    rsi,QWORD PTR [rdi+0x38]
   14001de59:	test   rsi,rsi
   14001de5c:	je     0x14001dec6
   14001de5e:	mov    rax,QWORD PTR [rsi]
   14001de61:	mov    rbx,QWORD PTR [rax+0x20]
   14001de65:	mov    rcx,rbx
   14001de68:	call   QWORD PTR [rip+0x1483a]        # 0x1400326a8
   14001de6e:	mov    rcx,rsi
   14001de71:	call   rbx
   14001de73:	test   eax,eax
   14001de75:	jns    0x14001dea1
   14001de77:	mov    rcx,QWORD PTR [rip+0x2d1fa]        # 0x14004b078
   14001de7e:	cmp    rcx,r15
   14001de81:	je     0x14001dea1
   14001de83:	test   BYTE PTR [rcx+0x1c],0x2
   14001de87:	je     0x14001dea1
   14001de89:	mov    edx,0xc
   14001de8e:	mov    r9d,eax
   14001de91:	lea    r8,[rip+0x1a930]        # 0x1400387c8
   14001de98:	mov    rcx,QWORD PTR [rcx+0x10]
   14001de9c:	call   0x140001f70
   14001dea1:	mov    rsi,QWORD PTR [rdi+0x38]
   14001dea5:	and    QWORD PTR [rdi+0x38],0x0
   14001deaa:	test   rsi,rsi
   14001dead:	je     0x14001deed
   14001deaf:	mov    rax,QWORD PTR [rsi]
   14001deb2:	mov    rbx,QWORD PTR [rax+0x8]
   14001deb6:	mov    rcx,rbx
   14001deb9:	call   QWORD PTR [rip+0x147e9]        # 0x1400326a8
   14001debf:	mov    rcx,rsi
   14001dec2:	call   rbx
   14001dec4:	jmp    0x14001deed
   14001dec6:	mov    rcx,QWORD PTR [rip+0x2d1ab]        # 0x14004b078
   14001decd:	cmp    rcx,r15
   14001ded0:	je     0x14001df19
   14001ded2:	test   BYTE PTR [rcx+0x1c],0x2
   14001ded6:	je     0x14001def4
   14001ded8:	mov    edx,0xd
   14001dedd:	lea    r8,[rip+0x1a8e4]        # 0x1400387c8
   14001dee4:	mov    rcx,QWORD PTR [rcx+0x10]
   14001dee8:	call   0x140001f08
   14001deed:	mov    rcx,QWORD PTR [rip+0x2d184]        # 0x14004b078
   14001def4:	cmp    rcx,r15
   14001def7:	je     0x14001df19
   14001def9:	test   BYTE PTR [rcx+0x1c],0x4
   14001defd:	je     0x14001df19
   14001deff:	mov    edx,0xe
   14001df04:	mov    r9,QWORD PTR [rdi+0x20]
   14001df08:	lea    r8,[rip+0x1a8b9]        # 0x1400387c8
   14001df0f:	mov    rcx,QWORD PTR [rcx+0x10]
   14001df13:	call   0x14001ad20
   14001df18:	nop
   14001df19:	lea    rcx,[rdi+0xe0]
   14001df20:	cmp    DWORD PTR [rcx+0xc],0xf12192e
   14001df27:	je     0x14001df30
   14001df29:	call   QWORD PTR [rip+0x14349]        # 0x140032278
   14001df2f:	nop
   14001df30:	mov    rcx,QWORD PTR [rdi+0xd0]
   14001df37:	call   QWORD PTR [rip+0x14413]        # 0x140032350
   14001df3d:	nop
   14001df3e:	mov    rsi,QWORD PTR [rdi+0x38]
   14001df42:	test   rsi,rsi
   14001df45:	je     0x14001df5d
   14001df47:	mov    rax,QWORD PTR [rsi]
   14001df4a:	mov    rbx,QWORD PTR [rax+0x8]
   14001df4e:	mov    rcx,rbx
   14001df51:	call   QWORD PTR [rip+0x14751]        # 0x1400326a8
   14001df57:	mov    rcx,rsi
   14001df5a:	call   rbx
   14001df5c:	nop
   14001df5d:	mov    rsi,QWORD PTR [rdi+0x30]
   14001df61:	test   rsi,rsi
   14001df64:	je     0x14001df7c
   14001df66:	mov    rax,QWORD PTR [rsi]
   14001df69:	mov    rbx,QWORD PTR [rax+0x8]
   14001df6d:	mov    rcx,rbx
   14001df70:	call   QWORD PTR [rip+0x14732]        # 0x1400326a8
   14001df76:	mov    rcx,rsi
   14001df79:	call   rbx
   14001df7b:	nop
   14001df7c:	lea    rax,[rip+0x16925]        # 0x1400348a8
   14001df83:	mov    QWORD PTR [rdi+0x10],rax
   14001df87:	lea    rax,[rip+0x16a32]        # 0x1400349c0
   14001df8e:	mov    QWORD PTR [rdi+0x8],rax
   14001df92:	mov    QWORD PTR [rdi],rax
   14001df95:	mov    rbx,QWORD PTR [rsp+0x58]
   14001df9a:	mov    rbp,QWORD PTR [rsp+0x60]
   14001df9f:	mov    rsi,QWORD PTR [rsp+0x68]
   14001dfa4:	add    rsp,0x30
   14001dfa8:	pop    r15
   14001dfaa:	pop    r14
   14001dfac:	pop    rdi
   14001dfad:	ret    
   14001dfae:	int3   
   14001dfaf:	int3   
   14001dfb0:	int3   
   14001dfb1:	int3   
   14001dfb2:	int3   
   14001dfb3:	int3   
   14001dfb4:	mov    rax,rsp
   14001dfb7:	push   rdi
   14001dfb8:	push   r12
   14001dfba:	push   r13
   14001dfbc:	push   r14
   14001dfbe:	push   r15
   14001dfc0:	sub    rsp,0x50
   14001dfc4:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   14001dfcc:	mov    QWORD PTR [rax+0x10],rbx
   14001dfd0:	mov    QWORD PTR [rax+0x18],rsi
   14001dfd4:	mov    r12,r8
   14001dfd7:	mov    rbx,rdx
   14001dfda:	mov    rsi,rcx
   14001dfdd:	and    DWORD PTR [r8],0x0
   14001dfe1:	lea    r14,[rcx+0xe0]
   14001dfe8:	mov    rcx,r14
   14001dfeb:	call   QWORD PTR [rip+0x14117]        # 0x140032108
   14001dff1:	mov    rdi,QWORD PTR [rsi+0x40]
   14001dff5:	mov    rcx,r14
   14001dff8:	call   QWORD PTR [rip+0x140fa]        # 0x1400320f8
   14001dffe:	lea    r13,[rip+0x2d073]        # 0x14004b078
   14001e005:	mov    rcx,QWORD PTR [rip+0x2d06c]        # 0x14004b078
   14001e00c:	cmp    rcx,r13
   14001e00f:	je     0x14001e038
   14001e011:	test   BYTE PTR [rcx+0x1c],0x10
   14001e015:	je     0x14001e038
   14001e017:	mov    QWORD PTR [rsp+0x30],rdi
   14001e01c:	mov    eax,DWORD PTR [rbx+0x10]
   14001e01f:	mov    DWORD PTR [rsp+0x28],eax
   14001e023:	mov    rax,QWORD PTR [rbx+0x8]
   14001e027:	mov    QWORD PTR [rsp+0x20],rax
   14001e02c:	mov    r9,QWORD PTR [rbx]
   14001e02f:	mov    rcx,QWORD PTR [rcx+0x10]
   14001e033:	call   0x14001dbb4
   14001e038:	cmp    QWORD PTR [rbx+0x8],rdi
   14001e03c:	je     0x14001e0d0
   14001e042:	mov    ecx,0x18
   14001e047:	call   0x140023f10
   14001e04c:	mov    QWORD PTR [rsp+0x80],rax
   14001e054:	mov    rdx,rbx
   14001e057:	mov    rcx,rax
   14001e05a:	call   0x14001dc80
   14001e05f:	mov    r15,rax
   14001e062:	mov    rcx,QWORD PTR [rip+0x2d00f]        # 0x14004b078
   14001e069:	cmp    rcx,r13
   14001e06c:	je     0x14001e093
   14001e06e:	test   BYTE PTR [rcx+0x1c],0x10
   14001e072:	je     0x14001e093
   14001e074:	mov    edx,0x11
   14001e079:	mov    QWORD PTR [rsp+0x28],rdi
   14001e07e:	mov    rax,QWORD PTR [rbx+0x8]
   14001e082:	mov    QWORD PTR [rsp+0x20],rax
   14001e087:	mov    r9,QWORD PTR [rbx]
   14001e08a:	mov    rcx,QWORD PTR [rcx+0x10]
   14001e08e:	call   0x14001dc24
   14001e093:	mov    rcx,r14
   14001e096:	call   QWORD PTR [rip+0x1406c]        # 0x140032108
   14001e09c:	lea    r8,[r15+0x8]
   14001e0a0:	lea    rdx,[rsi+0x98]
   14001e0a7:	mov    rax,QWORD PTR [rdx+0x8]
   14001e0ab:	mov    QWORD PTR [r8],rdx
   14001e0ae:	mov    QWORD PTR [r8+0x8],rax
   14001e0b2:	mov    QWORD PTR [rax],r8
   14001e0b5:	mov    QWORD PTR [rdx+0x8],r8
   14001e0b9:	inc    DWORD PTR [rsi+0xa8]
   14001e0bf:	mov    rcx,r14
   14001e0c2:	call   QWORD PTR [rip+0x14030]        # 0x1400320f8
   14001e0c8:	mov    DWORD PTR [r12],0x1
   14001e0d0:	lea    r11,[rsp+0x50]
   14001e0d5:	mov    rbx,QWORD PTR [r11+0x38]
   14001e0d9:	mov    rsi,QWORD PTR [r11+0x40]
   14001e0dd:	mov    rsp,r11
   14001e0e0:	pop    r15
   14001e0e2:	pop    r14
   14001e0e4:	pop    r13
   14001e0e6:	pop    r12
   14001e0e8:	pop    rdi
   14001e0e9:	ret    
   14001e0ea:	int3   
   14001e0eb:	int3   
   14001e0ec:	int3   
   14001e0ed:	int3   
   14001e0ee:	int3   
   14001e0ef:	int3   
   14001e0f0:	mov    QWORD PTR [rsp+0x8],rbx
   14001e0f5:	mov    QWORD PTR [rsp+0x10],rsi
   14001e0fa:	mov    QWORD PTR [rsp+0x18],rdi
   14001e0ff:	push   r14
   14001e101:	sub    rsp,0x20
   14001e105:	and    QWORD PTR [rdx],0x0
   14001e109:	lea    rsi,[rcx+0xe0]
   14001e110:	mov    rbx,rcx
   14001e113:	mov    r14,rdx
   14001e116:	mov    rcx,rsi
   14001e119:	call   QWORD PTR [rip+0x13fe9]        # 0x140032108
   14001e11f:	lea    rcx,[rbx+0x98]
   14001e126:	mov    r8,QWORD PTR [rcx]
   14001e129:	cmp    r8,rcx
   14001e12c:	je     0x14001e181
   14001e12e:	mov    r9,QWORD PTR [rbx+0x40]
   14001e132:	lea    rdi,[r8-0x8]
   14001e136:	mov    rax,QWORD PTR [rdi]
   14001e139:	cmp    QWORD PTR [rax+0x8],r9
   14001e13d:	je     0x14001e149
   14001e13f:	mov    r8,QWORD PTR [r8]
   14001e142:	cmp    r8,rcx
   14001e145:	jne    0x14001e132
   14001e147:	jmp    0x14001e181
   14001e149:	and    QWORD PTR [rdi],0x0
   14001e14d:	lea    r8,[rdi+0x8]
   14001e151:	mov    QWORD PTR [r14],rax
   14001e154:	mov    rax,QWORD PTR [r8+0x8]
   14001e158:	mov    rdx,QWORD PTR [r8]
   14001e15b:	mov    QWORD PTR [rax],rdx
   14001e15e:	mov    QWORD PTR [rdx+0x8],rax
   14001e162:	mov    QWORD PTR [r8+0x8],r8
   14001e166:	mov    QWORD PTR [r8],r8
   14001e169:	dec    DWORD PTR [rbx+0xa8]
   14001e16f:	mov    rcx,QWORD PTR [rdi]
   14001e172:	call   QWORD PTR [rip+0x14450]        # 0x1400325c8
   14001e178:	mov    rcx,rdi
   14001e17b:	call   QWORD PTR [rip+0x14447]        # 0x1400325c8
   14001e181:	mov    rcx,rsi
   14001e184:	mov    rbx,QWORD PTR [rsp+0x30]
   14001e189:	mov    rsi,QWORD PTR [rsp+0x38]
   14001e18e:	mov    rdi,QWORD PTR [rsp+0x40]
   14001e193:	add    rsp,0x20
   14001e197:	pop    r14
   14001e199:	rex.W jmp QWORD PTR [rip+0x13f58]        # 0x1400320f8
   14001e1a0:	int3   
   14001e1a1:	int3   
   14001e1a2:	int3   
   14001e1a3:	int3   
   14001e1a4:	int3   
   14001e1a5:	int3   
   14001e1a6:	int3   
   14001e1a7:	int3   
   14001e1a8:	mov    rax,rsp
   14001e1ab:	mov    QWORD PTR [rax+0x10],rdx
   14001e1af:	mov    QWORD PTR [rax+0x8],rcx
   14001e1b3:	push   rbx
   14001e1b4:	push   rsi
   14001e1b5:	push   rdi
   14001e1b6:	sub    rsp,0x40
   14001e1ba:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   14001e1c2:	mov    rbx,rdx
   14001e1c5:	mov    rdi,rcx
   14001e1c8:	and    DWORD PTR [rax+0x18],0x0
   14001e1cc:	call   0x14002b158
   14001e1d1:	mov    QWORD PTR [rdi+0x28],rax
   14001e1d5:	lea    r8,[rsp+0x70]
   14001e1da:	mov    rdx,rbx
   14001e1dd:	mov    rcx,rdi
   14001e1e0:	call   0x14001dfb4
   14001e1e5:	cmp    DWORD PTR [rsp+0x70],0x0
   14001e1ea:	jne    0x14001e258
   14001e1ec:	lea    rsi,[rip+0x2ce85]        # 0x14004b078
   14001e1f3:	mov    rcx,QWORD PTR [rip+0x2ce7e]        # 0x14004b078
   14001e1fa:	cmp    rcx,rsi
   14001e1fd:	je     0x14001e22b
   14001e1ff:	test   BYTE PTR [rcx+0x1c],0x10
   14001e203:	je     0x14001e22b
   14001e205:	mov    eax,DWORD PTR [rdi+0xa8]
   14001e20b:	mov    edx,0x12
   14001e210:	mov    QWORD PTR [rsp+0x28],rax
   14001e215:	mov    rax,QWORD PTR [rbx+0x8]
   14001e219:	mov    QWORD PTR [rsp+0x20],rax
   14001e21e:	mov    r9,QWORD PTR [rdi+0x20]
   14001e222:	mov    rcx,QWORD PTR [rcx+0x10]
   14001e226:	call   0x14001dc24
   14001e22b:	mov    rdx,rbx
   14001e22e:	mov    rcx,rdi
   14001e231:	call   0x14001e354
   14001e236:	lea    rbx,[rdi+0xe0]
   14001e23d:	mov    rcx,rbx
   14001e240:	call   QWORD PTR [rip+0x13ec2]        # 0x140032108
   14001e246:	inc    QWORD PTR [rdi+0x40]
   14001e24a:	mov    rcx,rbx
   14001e24d:	call   QWORD PTR [rip+0x13ea5]        # 0x1400320f8
   14001e253:	jmp    0x14001e2fb
   14001e258:	lea    rsi,[rip+0x2ce19]        # 0x14004b078
   14001e25f:	mov    rcx,QWORD PTR [rip+0x2ce12]        # 0x14004b078
   14001e266:	cmp    rcx,rsi
   14001e269:	je     0x14001e29e
   14001e26b:	test   BYTE PTR [rcx+0x1c],0x10
   14001e26f:	je     0x14001e29e
   14001e271:	mov    eax,DWORD PTR [rdi+0xa8]
   14001e277:	mov    edx,0x13
   14001e27c:	mov    QWORD PTR [rsp+0x28],rax
   14001e281:	mov    rax,QWORD PTR [rbx+0x8]
   14001e285:	mov    QWORD PTR [rsp+0x20],rax
   14001e28a:	mov    r9,QWORD PTR [rdi+0x20]
   14001e28e:	mov    rcx,QWORD PTR [rcx+0x10]
   14001e292:	call   0x14001dc24
   14001e297:	mov    rcx,QWORD PTR [rip+0x2cdda]        # 0x14004b078
   14001e29e:	test   BYTE PTR [rip+0x31d1b],0x4        # 0x14004ffc0
   14001e2a5:	je     0x14001e2c3
   14001e2a7:	lea    r8,[rip+0x1603a]        # 0x1400342e8
   14001e2ae:	lea    rdx,[rip+0x1610b]        # 0x1400343c0
   14001e2b5:	call   0x140003818
   14001e2ba:	mov    rcx,QWORD PTR [rip+0x2cdb7]        # 0x14004b078
   14001e2c1:	jmp    0x14001e2c5
   14001e2c3:	xor    eax,eax
   14001e2c5:	movzx  r9d,ax
   14001e2c9:	or     r9d,0x80070000
   14001e2d0:	test   eax,eax
   14001e2d2:	cmovle r9d,eax
   14001e2d6:	test   r9d,r9d
   14001e2d9:	jns    0x14001e2fb
   14001e2db:	cmp    rcx,rsi
   14001e2de:	je     0x14001e2fb
   14001e2e0:	test   BYTE PTR [rcx+0x1c],0x2
   14001e2e4:	je     0x14001e2fb
   14001e2e6:	mov    edx,0x14
   14001e2eb:	lea    r8,[rip+0x1a4d6]        # 0x1400387c8
   14001e2f2:	mov    rcx,QWORD PTR [rcx+0x10]
   14001e2f6:	call   0x140001f70
   14001e2fb:	lea    rdx,[rsp+0x68]
   14001e300:	mov    rcx,rdi
   14001e303:	call   0x14001e0f0
   14001e308:	mov    rsi,QWORD PTR [rsp+0x68]
   14001e30d:	test   rsi,rsi
   14001e310:	je     0x14001e345
   14001e312:	mov    rdx,rsi
   14001e315:	mov    rcx,rdi
   14001e318:	call   0x14001e354
   14001e31d:	lea    rbx,[rdi+0xe0]
   14001e324:	mov    rcx,rbx
   14001e327:	call   QWORD PTR [rip+0x13ddb]        # 0x140032108
   14001e32d:	inc    QWORD PTR [rdi+0x40]
   14001e331:	mov    rcx,rbx
   14001e334:	call   QWORD PTR [rip+0x13dbe]        # 0x1400320f8
   14001e33a:	mov    rcx,rsi
   14001e33d:	call   QWORD PTR [rip+0x14285]        # 0x1400325c8
   14001e343:	jmp    0x14001e2fb
   14001e345:	add    rsp,0x40
   14001e349:	pop    rdi
   14001e34a:	pop    rsi
   14001e34b:	pop    rbx
   14001e34c:	ret    
   14001e34d:	int3   
   14001e34e:	int3   
   14001e34f:	int3   
   14001e350:	int3   
   14001e351:	int3   
   14001e352:	int3   
   14001e353:	int3   
   14001e354:	mov    rax,rsp
   14001e357:	push   rdi
   14001e358:	sub    rsp,0x40
   14001e35c:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14001e364:	mov    QWORD PTR [rax+0x10],rbx
   14001e368:	mov    QWORD PTR [rax+0x18],rsi
   14001e36c:	mov    rdi,rdx
   14001e36f:	mov    rsi,rcx
   14001e372:	xor    ebx,ebx
   14001e374:	mov    QWORD PTR [rax+0x8],rbx
   14001e378:	mov    rcx,QWORD PTR [rcx+0xc0]
   14001e37f:	call   0x140029ab0
   14001e384:	test   eax,eax
   14001e386:	js     0x14001e396
   14001e388:	mov    rbx,rcx
   14001e38b:	mov    QWORD PTR [rsp+0x50],rcx
   14001e390:	xor    eax,eax
   14001e392:	test   eax,eax
   14001e394:	jns    0x14001e3d5
   14001e396:	lea    rax,[rip+0x2ccdb]        # 0x14004b078
   14001e39d:	mov    rcx,QWORD PTR [rip+0x2ccd4]        # 0x14004b078
   14001e3a4:	cmp    rcx,rax
   14001e3a7:	je     0x14001e5e4
   14001e3ad:	test   BYTE PTR [rcx+0x1c],0x2
   14001e3b1:	je     0x14001e5e4
   14001e3b7:	mov    edx,0x17
   14001e3bc:	mov    r9d,DWORD PTR [rdi+0x10]
   14001e3c0:	lea    r8,[rip+0x1a401]        # 0x1400387c8
   14001e3c7:	mov    rcx,QWORD PTR [rcx+0x10]
   14001e3cb:	call   0x140001f70
   14001e3d0:	jmp    0x14001e5e4
   14001e3d5:	cmp    DWORD PTR [rsi+0xc8],0x0
   14001e3dc:	je     0x14001e425
   14001e3de:	mov    edx,DWORD PTR [rdi+0x10]
   14001e3e1:	cmp    edx,0x9
   14001e3e4:	je     0x14001e425
   14001e3e6:	lea    rax,[rip+0x2cc8b]        # 0x14004b078
   14001e3ed:	mov    rcx,QWORD PTR [rip+0x2cc84]        # 0x14004b078
   14001e3f4:	cmp    rcx,rax
   14001e3f7:	je     0x14001e5e4
   14001e3fd:	test   BYTE PTR [rcx+0x1c],0x4
   14001e401:	je     0x14001e5e4
   14001e407:	mov    DWORD PTR [rsp+0x28],edx
   14001e40b:	mov    rax,QWORD PTR [rdi+0x8]
   14001e40f:	mov    QWORD PTR [rsp+0x20],rax
   14001e414:	mov    r9,QWORD PTR [rdi]
   14001e417:	mov    rcx,QWORD PTR [rcx+0x10]
   14001e41b:	call   0x14001db50
   14001e420:	jmp    0x14001e5e4
   14001e425:	mov    rax,QWORD PTR [rdi+0x8]
   14001e429:	test   rax,rax
   14001e42c:	jne    0x14001e461
   14001e42e:	cmp    DWORD PTR [rdi+0x10],0x8
   14001e432:	je     0x14001e45c
   14001e434:	lea    rax,[rip+0x2cc3d]        # 0x14004b078
   14001e43b:	mov    rcx,QWORD PTR [rip+0x2cc36]        # 0x14004b078
   14001e442:	cmp    rcx,rax
   14001e445:	je     0x14001e5e4
   14001e44b:	test   BYTE PTR [rcx+0x1c],0x4
   14001e44f:	je     0x14001e5e4
   14001e455:	mov    edx,0x19
   14001e45a:	jmp    0x14001e48d
   14001e45c:	test   rax,rax
   14001e45f:	je     0x14001e4a2
   14001e461:	cmp    DWORD PTR [rdi+0x10],0x8
   14001e465:	jne    0x14001e4a2
   14001e467:	lea    rax,[rip+0x2cc0a]        # 0x14004b078
   14001e46e:	mov    rcx,QWORD PTR [rip+0x2cc03]        # 0x14004b078
   14001e475:	cmp    rcx,rax
   14001e478:	je     0x14001e5e4
   14001e47e:	test   BYTE PTR [rcx+0x1c],0x4
   14001e482:	je     0x14001e5e4
   14001e488:	mov    edx,0x1a
   14001e48d:	lea    r8,[rip+0x1a334]        # 0x1400387c8
   14001e494:	mov    rcx,QWORD PTR [rcx+0x10]
   14001e498:	call   0x140001f08
   14001e49d:	jmp    0x14001e5e4
   14001e4a2:	mov    ecx,DWORD PTR [rdi+0x10]
   14001e4a5:	sub    ecx,0x8
   14001e4a8:	je     0x14001e594
   14001e4ae:	sub    ecx,0x1
   14001e4b1:	je     0x14001e550
   14001e4b7:	sub    ecx,0x1
   14001e4ba:	je     0x14001e50a
   14001e4bc:	cmp    ecx,0x1
   14001e4bf:	jne    0x14001e5e4
   14001e4c5:	test   BYTE PTR [rip+0x31af5],cl        # 0x14004ffc0
   14001e4cb:	je     0x14001e4e6
   14001e4cd:	and    DWORD PTR [rsp+0x28],0x0
   14001e4d2:	lea    rax,[rip+0x1a247]        # 0x140038720
   14001e4d9:	mov    QWORD PTR [rsp+0x20],rax
   14001e4de:	mov    r9,QWORD PTR [rdi]
   14001e4e1:	call   0x14001d970
   14001e4e6:	mov    rdx,rdi
   14001e4e9:	mov    rcx,rsi
   14001e4ec:	call   0x14001e8ec
   14001e4f1:	test   BYTE PTR [rip+0x31ac8],0x1        # 0x14004ffc0
   14001e4f8:	je     0x14001e5e4
   14001e4fe:	lea    rax,[rip+0x1a233]        # 0x140038738
   14001e505:	jmp    0x14001e5d1
   14001e50a:	test   BYTE PTR [rip+0x31aaf],0x1        # 0x14004ffc0
   14001e511:	je     0x14001e52c
   14001e513:	and    DWORD PTR [rsp+0x28],0x0
   14001e518:	lea    rax,[rip+0x1a1b1]        # 0x1400386d0
   14001e51f:	mov    QWORD PTR [rsp+0x20],rax
   14001e524:	mov    r9,QWORD PTR [rdi]
   14001e527:	call   0x14001d970
   14001e52c:	mov    rdx,rdi
   14001e52f:	mov    rcx,rsi
   14001e532:	call   0x14001e818
   14001e537:	test   BYTE PTR [rip+0x31a82],0x1        # 0x14004ffc0
   14001e53e:	je     0x14001e5e4
   14001e544:	lea    rax,[rip+0x1a1ad]        # 0x1400386f8
   14001e54b:	jmp    0x14001e5d1
   14001e550:	test   BYTE PTR [rip+0x31a69],0x1        # 0x14004ffc0
   14001e557:	je     0x14001e572
   14001e559:	and    DWORD PTR [rsp+0x28],0x0
   14001e55e:	lea    rax,[rip+0x1a1eb]        # 0x140038750
   14001e565:	mov    QWORD PTR [rsp+0x20],rax
   14001e56a:	mov    r9,QWORD PTR [rdi]
   14001e56d:	call   0x14001d970
   14001e572:	mov    rdx,QWORD PTR [rsi+0x20]
   14001e576:	mov    rcx,QWORD PTR [rsi+0xb8]
   14001e57d:	call   0x14001c958
   14001e582:	test   BYTE PTR [rip+0x31a37],0x1        # 0x14004ffc0
   14001e589:	je     0x14001e5e4
   14001e58b:	lea    rax,[rip+0x1a1d6]        # 0x140038768
   14001e592:	jmp    0x14001e5d1
   14001e594:	test   BYTE PTR [rip+0x31a25],0x1        # 0x14004ffc0
   14001e59b:	je     0x14001e5b6
   14001e59d:	and    DWORD PTR [rsp+0x28],0x0
   14001e5a2:	lea    rax,[rip+0x1a0e7]        # 0x140038690
   14001e5a9:	mov    QWORD PTR [rsp+0x20],rax
   14001e5ae:	mov    r9,QWORD PTR [rdi]
   14001e5b1:	call   0x14001d970
   14001e5b6:	mov    rdx,rdi
   14001e5b9:	mov    rcx,rsi
   14001e5bc:	call   0x14001e61c
   14001e5c1:	test   BYTE PTR [rip+0x319f8],0x1        # 0x14004ffc0
   14001e5c8:	je     0x14001e5e4
   14001e5ca:	lea    rax,[rip+0x1a0df]        # 0x1400386b0
   14001e5d1:	and    DWORD PTR [rsp+0x28],0x0
   14001e5d6:	mov    QWORD PTR [rsp+0x20],rax
   14001e5db:	mov    r9,QWORD PTR [rdi]
   14001e5de:	call   0x14001d970
   14001e5e3:	nop
   14001e5e4:	test   rbx,rbx
   14001e5e7:	je     0x14001e604
   14001e5e9:	or     eax,0xffffffff
   14001e5ec:	lock xadd DWORD PTR [rbx+0x8],eax
   14001e5f1:	dec    eax
   14001e5f3:	cmp    eax,0x80000000
   14001e5f8:	jne    0x14001e604
   14001e5fa:	mov    rcx,QWORD PTR [rsp+0x50]
   14001e5ff:	call   0x140029c90
   14001e604:	mov    rbx,QWORD PTR [rsp+0x58]
   14001e609:	mov    rsi,QWORD PTR [rsp+0x60]
   14001e60e:	add    rsp,0x40
   14001e612:	pop    rdi
   14001e613:	ret    
   14001e614:	int3   
   14001e615:	int3   
   14001e616:	int3   
   14001e617:	int3   
   14001e618:	int3   
   14001e619:	int3   
   14001e61a:	int3   
   14001e61b:	int3   
   14001e61c:	mov    rax,rsp
   14001e61f:	push   rsi
   14001e620:	push   rdi
   14001e621:	push   r12
   14001e623:	push   r14
   14001e625:	push   r15
   14001e627:	sub    rsp,0x60
   14001e62b:	mov    QWORD PTR [rax-0x60],0xfffffffffffffffe
   14001e633:	mov    QWORD PTR [rax+0x18],rbx
   14001e637:	mov    rax,QWORD PTR [rip+0x2c9e2]        # 0x14004b020
   14001e63e:	xor    rax,rsp
   14001e641:	mov    QWORD PTR [rsp+0x58],rax
   14001e646:	mov    rdi,rcx
   14001e649:	mov    QWORD PTR [rsp+0x20],rcx
   14001e64e:	lea    rbx,[rdx+0x6c]
   14001e652:	add    rcx,0x50
   14001e656:	mov    edx,0x42
   14001e65b:	mov    r9d,edx
   14001e65e:	mov    r8,rbx
   14001e661:	call   QWORD PTR [rip+0x13f59]        # 0x1400325c0
   14001e667:	and    QWORD PTR [rdi+0x86],0x0
   14001e66f:	lea    r14,[rbx+0x42]
   14001e673:	mov    rcx,r14
   14001e676:	call   QWORD PTR [rip+0x139fc]        # 0x140032078
   14001e67c:	test   eax,eax
   14001e67e:	je     0x14001e70b
   14001e684:	mov    rcx,r14
   14001e687:	call   QWORD PTR [rip+0x139f3]        # 0x140032080
   14001e68d:	mov    r15d,eax
   14001e690:	mov    ecx,eax
   14001e692:	call   0x140023f10
   14001e697:	mov    rsi,rax
   14001e69a:	mov    rbx,rax
   14001e69d:	mov    r8,r14
   14001e6a0:	mov    rdx,rax
   14001e6a3:	mov    ecx,r15d
   14001e6a6:	call   QWORD PTR [rip+0x139dc]        # 0x140032088
   14001e6ac:	test   eax,eax
   14001e6ae:	jne    0x14001e6f0
   14001e6b0:	lea    rsi,[rip+0x2c9c1]        # 0x14004b078
   14001e6b7:	mov    rax,QWORD PTR [rip+0x2c9ba]        # 0x14004b078
   14001e6be:	cmp    rax,rsi
   14001e6c1:	je     0x14001e700
   14001e6c3:	test   BYTE PTR [rax+0x1c],0x2
   14001e6c7:	je     0x14001e700
   14001e6c9:	call   QWORD PTR [rip+0x13bb9]        # 0x140032288
   14001e6cf:	mov    r9d,eax
   14001e6d2:	mov    edx,0x1b
   14001e6d7:	lea    r8,[rip+0x1a0ea]        # 0x1400387c8
   14001e6de:	mov    rcx,QWORD PTR [rip+0x2c993]        # 0x14004b078
   14001e6e5:	mov    rcx,QWORD PTR [rcx+0x10]
   14001e6e9:	call   0x140001f70
   14001e6ee:	jmp    0x14001e700
   14001e6f0:	xor    ebx,ebx
   14001e6f2:	mov    QWORD PTR [rdi+0x86],rsi
   14001e6f9:	lea    rsi,[rip+0x2c978]        # 0x14004b078
   14001e700:	mov    rcx,rbx
   14001e703:	call   QWORD PTR [rip+0x13ebf]        # 0x1400325c8
   14001e709:	jmp    0x14001e739
   14001e70b:	lea    rsi,[rip+0x2c966]        # 0x14004b078
   14001e712:	mov    rcx,QWORD PTR [rip+0x2c95f]        # 0x14004b078
   14001e719:	cmp    rcx,rsi
   14001e71c:	je     0x14001e739
   14001e71e:	test   BYTE PTR [rcx+0x1c],0x2
   14001e722:	je     0x14001e739
   14001e724:	mov    edx,0x1c
   14001e729:	lea    r8,[rip+0x1a098]        # 0x1400387c8
   14001e730:	mov    rcx,QWORD PTR [rcx+0x10]
   14001e734:	call   0x140001f08
   14001e739:	mov    r12,QWORD PTR [rdi+0x30]
   14001e73d:	lea    r15,[rdi+0x38]
   14001e741:	mov    r14,QWORD PTR [r15]
   14001e744:	test   r14,r14
   14001e747:	je     0x14001e762
   14001e749:	mov    rax,QWORD PTR [r14]
   14001e74c:	mov    rbx,QWORD PTR [rax+0x8]
   14001e750:	mov    rcx,rbx
   14001e753:	call   QWORD PTR [rip+0x13f4f]        # 0x1400326a8
   14001e759:	mov    rcx,r14
   14001e75c:	call   rbx
   14001e75e:	and    QWORD PTR [r15],0x0
   14001e762:	mov    rax,QWORD PTR [r12]
   14001e766:	mov    rbx,QWORD PTR [rax+0x10]
   14001e76a:	mov    rcx,rbx
   14001e76d:	call   QWORD PTR [rip+0x13f35]        # 0x1400326a8
   14001e773:	mov    r8,r15
   14001e776:	mov    rdx,rdi
   14001e779:	mov    rcx,r12
   14001e77c:	call   rbx
   14001e77e:	mov    ebx,eax
   14001e780:	test   eax,eax
   14001e782:	jns    0x14001e7cb
   14001e784:	mov    rcx,QWORD PTR [rip+0x2c8ed]        # 0x14004b078
   14001e78b:	cmp    rcx,rsi
   14001e78e:	je     0x14001e7ae
   14001e790:	test   BYTE PTR [rcx+0x1c],0x1
   14001e794:	je     0x14001e7ae
   14001e796:	mov    edx,0x1d
   14001e79b:	mov    r9d,eax
   14001e79e:	lea    r8,[rip+0x1a023]        # 0x1400387c8
   14001e7a5:	mov    rcx,QWORD PTR [rcx+0x10]
   14001e7a9:	call   0x140001f70
   14001e7ae:	mov    edx,ebx
   14001e7b0:	lea    rcx,[rsp+0x30]
   14001e7b5:	call   0x140002064
   14001e7ba:	lea    rdx,[rip+0x2a9c7]        # 0x140049188
   14001e7c1:	lea    rcx,[rsp+0x30]
   14001e7c6:	call   0x14002e2da
   14001e7cb:	mov    rsi,QWORD PTR [rdi+0x30]
   14001e7cf:	and    QWORD PTR [rdi+0x30],0x0
   14001e7d4:	test   rsi,rsi
   14001e7d7:	je     0x14001e7ef
   14001e7d9:	mov    rax,QWORD PTR [rsi]
   14001e7dc:	mov    rbx,QWORD PTR [rax+0x8]
   14001e7e0:	mov    rcx,rbx
   14001e7e3:	call   QWORD PTR [rip+0x13ebf]        # 0x1400326a8
   14001e7e9:	mov    rcx,rsi
   14001e7ec:	call   rbx
   14001e7ee:	nop
   14001e7ef:	mov    rcx,QWORD PTR [rsp+0x58]
   14001e7f4:	xor    rcx,rsp
   14001e7f7:	call   0x14002dd00
   14001e7fc:	mov    rbx,QWORD PTR [rsp+0xa0]
   14001e804:	add    rsp,0x60
   14001e808:	pop    r15
   14001e80a:	pop    r14
   14001e80c:	pop    r12
   14001e80e:	pop    rdi
   14001e80f:	pop    rsi
   14001e810:	ret    
   14001e811:	int3   
   14001e812:	int3   
   14001e813:	int3   
   14001e814:	int3   
   14001e815:	int3   
   14001e816:	int3   
   14001e817:	int3   
   14001e818:	mov    QWORD PTR [rsp+0x18],rbx
   14001e81d:	push   rbp
   14001e81e:	push   rsi
   14001e81f:	push   rdi
   14001e820:	sub    rsp,0x50
   14001e824:	mov    rax,QWORD PTR [rip+0x2c7f5]        # 0x14004b020
   14001e82b:	xor    rax,rsp
   14001e82e:	mov    QWORD PTR [rsp+0x48],rax
   14001e833:	mov    rsi,QWORD PTR [rcx+0x38]
   14001e837:	mov    rbp,rdx
   14001e83a:	test   rsi,rsi
   14001e83d:	je     0x14001e893
   14001e83f:	mov    eax,DWORD PTR [rdx+0x28]
   14001e842:	xor    edi,edi
   14001e844:	cmp    DWORD PTR [rcx+0x7a],edi
   14001e847:	je     0x14001e851
   14001e849:	test   eax,eax
   14001e84b:	setne  dil
   14001e84f:	jmp    0x14001e857
   14001e851:	test   eax,eax
   14001e853:	sete   dil
   14001e857:	mov    rax,QWORD PTR [rsi]
   14001e85a:	mov    rbx,QWORD PTR [rax+0x18]
   14001e85e:	mov    rcx,rbx
   14001e861:	call   QWORD PTR [rip+0x13e41]        # 0x1400326a8
   14001e867:	mov    r8,QWORD PTR [rbp+0x1c]
   14001e86b:	mov    edx,edi
   14001e86d:	mov    rcx,rsi
   14001e870:	call   rbx
   14001e872:	mov    ebx,eax
   14001e874:	test   eax,eax
   14001e876:	jns    0x14001e893
   14001e878:	mov    rcx,QWORD PTR [rip+0x2c7f9]        # 0x14004b078
   14001e87f:	lea    rax,[rip+0x2c7f2]        # 0x14004b078
   14001e886:	cmp    rcx,rax
   14001e889:	je     0x14001e8c8
   14001e88b:	test   BYTE PTR [rcx+0x1c],0x1
   14001e88f:	je     0x14001e8c8
   14001e891:	jmp    0x14001e8b0
   14001e893:	mov    rcx,QWORD PTR [rsp+0x48]
   14001e898:	xor    rcx,rsp
   14001e89b:	call   0x14002dd00
   14001e8a0:	mov    rbx,QWORD PTR [rsp+0x80]
   14001e8a8:	add    rsp,0x50
   14001e8ac:	pop    rdi
   14001e8ad:	pop    rsi
   14001e8ae:	pop    rbp
   14001e8af:	ret    
   14001e8b0:	mov    rcx,QWORD PTR [rcx+0x10]
   14001e8b4:	lea    r8,[rip+0x19f0d]        # 0x1400387c8
   14001e8bb:	mov    edx,0x1e
   14001e8c0:	mov    r9d,ebx
   14001e8c3:	call   0x140001f70
   14001e8c8:	mov    edx,ebx
   14001e8ca:	lea    rcx,[rsp+0x20]
   14001e8cf:	call   0x140002064
   14001e8d4:	lea    rdx,[rip+0x2a8ad]        # 0x140049188
   14001e8db:	lea    rcx,[rsp+0x20]
   14001e8e0:	call   0x14002e2da
   14001e8e5:	int3   
   14001e8e6:	int3   
   14001e8e7:	int3   
   14001e8e8:	int3   
   14001e8e9:	int3   
   14001e8ea:	int3   
   14001e8eb:	int3   
   14001e8ec:	mov    QWORD PTR [rsp+0x18],rbx
   14001e8f1:	push   rbp
   14001e8f2:	push   rsi
   14001e8f3:	push   rdi
   14001e8f4:	push   r14
   14001e8f6:	push   r15
   14001e8f8:	sub    rsp,0x60
   14001e8fc:	mov    rax,QWORD PTR [rip+0x2c71d]        # 0x14004b020
   14001e903:	xor    rax,rsp
   14001e906:	mov    QWORD PTR [rsp+0x58],rax
   14001e90b:	mov    r15,QWORD PTR [rcx+0x38]
   14001e90f:	xor    esi,esi
   14001e911:	mov    r14,rdx
   14001e914:	test   r15,r15
   14001e917:	jne    0x14001e966
   14001e919:	mov    rcx,QWORD PTR [rip+0x2c758]        # 0x14004b078
   14001e920:	lea    rax,[rip+0x2c751]        # 0x14004b078
   14001e927:	cmp    rcx,rax
   14001e92a:	je     0x14001e945
   14001e92c:	test   BYTE PTR [rcx+0x1c],0x4
   14001e930:	je     0x14001e945
   14001e932:	mov    rcx,QWORD PTR [rcx+0x10]
   14001e936:	lea    edx,[rsi+0x1f]
   14001e939:	lea    r8,[rip+0x19e88]        # 0x1400387c8
   14001e940:	call   0x140001f08
   14001e945:	mov    rcx,QWORD PTR [rsp+0x58]
   14001e94a:	xor    rcx,rsp
   14001e94d:	call   0x14002dd00
   14001e952:	mov    rbx,QWORD PTR [rsp+0xa0]
   14001e95a:	add    rsp,0x60
   14001e95e:	pop    r15
   14001e960:	pop    r14
   14001e962:	pop    rdi
   14001e963:	pop    rsi
   14001e964:	pop    rbp
   14001e965:	ret    
   14001e966:	mov    ebp,esi
   14001e968:	cmp    DWORD PTR [rcx+0x7a],esi
   14001e96b:	je     0x14001e976
   14001e96d:	cmp    DWORD PTR [rdx+0x28],esi
   14001e970:	setne  bpl
   14001e974:	jmp    0x14001e97d
   14001e976:	cmp    DWORD PTR [rdx+0x28],esi
   14001e979:	sete   bpl
   14001e97d:	cmp    ebp,0x1
   14001e980:	jne    0x14001e98a
   14001e982:	cmp    DWORD PTR [rcx+0xd8],esi
   14001e988:	je     0x14001e997
   14001e98a:	test   ebp,ebp
   14001e98c:	jne    0x14001e9d4
   14001e98e:	cmp    DWORD PTR [rcx+0xd8],0x1
   14001e995:	jne    0x14001e9d4
   14001e997:	mov    rcx,QWORD PTR [rip+0x2c6da]        # 0x14004b078
   14001e99e:	lea    rax,[rip+0x2c6d3]        # 0x14004b078
   14001e9a5:	cmp    rcx,rax
   14001e9a8:	je     0x14001e945
   14001e9aa:	test   BYTE PTR [rcx+0x1c],0x4
   14001e9ae:	je     0x14001e945
   14001e9b0:	mov    rcx,QWORD PTR [rcx+0x10]
   14001e9b4:	lea    r8,[rip+0x19e0d]        # 0x1400387c8
   14001e9bb:	cmp    ebp,0x1
   14001e9be:	mov    edx,0x20
   14001e9c3:	sete   sil
   14001e9c7:	mov    r9d,esi
   14001e9ca:	call   0x140001f70
   14001e9cf:	jmp    0x14001e945
   14001e9d4:	mov    rax,QWORD PTR [r15]
   14001e9d7:	mov    rdi,QWORD PTR [rax+0x10]
   14001e9db:	mov    rcx,rdi
   14001e9de:	call   QWORD PTR [rip+0x13cc4]        # 0x1400326a8
   14001e9e4:	mov    rax,QWORD PTR [r14+0x1c]
   14001e9e8:	lea    r8,[r14+0x6c]
   14001e9ec:	mov    r9d,DWORD PTR [r14+0x24]
   14001e9f0:	mov    edx,ebp
   14001e9f2:	mov    rcx,r15
   14001e9f5:	mov    QWORD PTR [rsp+0x20],rax
   14001e9fa:	call   rdi
   14001e9fc:	mov    ebx,eax
   14001e9fe:	test   eax,eax
   14001ea00:	jns    0x14001e945
   14001ea06:	mov    rcx,QWORD PTR [rip+0x2c66b]        # 0x14004b078
   14001ea0d:	lea    rax,[rip+0x2c664]        # 0x14004b078
   14001ea14:	cmp    rcx,rax
   14001ea17:	je     0x14001ea37
   14001ea19:	test   BYTE PTR [rcx+0x1c],0x1
   14001ea1d:	je     0x14001ea37
   14001ea1f:	mov    rcx,QWORD PTR [rcx+0x10]
   14001ea23:	lea    r8,[rip+0x19d9e]        # 0x1400387c8
   14001ea2a:	mov    edx,0x21
   14001ea2f:	mov    r9d,ebx
   14001ea32:	call   0x140001f70
   14001ea37:	mov    edx,ebx
   14001ea39:	lea    rcx,[rsp+0x30]
   14001ea3e:	call   0x140002064
   14001ea43:	lea    rdx,[rip+0x2a73e]        # 0x140049188
   14001ea4a:	lea    rcx,[rsp+0x30]
   14001ea4f:	call   0x14002e2da
   14001ea54:	int3   
   14001ea55:	int3   
   14001ea56:	int3   
   14001ea57:	int3   
   14001ea58:	int3   
   14001ea59:	int3   
   14001ea5a:	int3   
   14001ea5b:	int3   
   14001ea5c:	int3   
   14001ea5d:	int3   
   14001ea5e:	int3   
   14001ea5f:	int3   
   14001ea60:	mov    QWORD PTR [rsp+0x10],rbx
   14001ea65:	push   rbp
   14001ea66:	push   rsi
   14001ea67:	push   rdi
   14001ea68:	sub    rsp,0xa0
   14001ea6f:	mov    rax,QWORD PTR [rip+0x2c5aa]        # 0x14004b020
   14001ea76:	xor    rax,rsp
   14001ea79:	mov    QWORD PTR [rsp+0x90],rax
   14001ea81:	mov    edi,edx
   14001ea83:	mov    rbx,r8
   14001ea86:	xor    edx,edx
   14001ea88:	mov    rbp,rcx
   14001ea8b:	lea    rcx,[rsp+0x28]
   14001ea90:	mov    esi,r9d
   14001ea93:	lea    r8d,[rdx+0x64]
   14001ea97:	call   0x14002e2ce
   14001ea9c:	and    DWORD PTR [rsp+0x30],0x0
   14001eaa1:	mov    rax,QWORD PTR [rbp+0x20]
   14001eaa5:	mov    QWORD PTR [rsp+0x20],rax
   14001eaaa:	mov    QWORD PTR [rsp+0x34],rbx
   14001eaaf:	mov    DWORD PTR [rsp+0x44],esi
   14001eab3:	cmp    edi,0x1
   14001eab6:	jne    0x14001eabd
   14001eab8:	mov    eax,DWORD PTR [rbp+0x7a]
   14001eabb:	jmp    0x14001eac5
   14001eabd:	xor    eax,eax
   14001eabf:	cmp    DWORD PTR [rbp+0x7a],eax
   14001eac2:	sete   al
   14001eac5:	mov    rcx,QWORD PTR [rbp+0xb0]
   14001eacc:	lea    rdx,[rsp+0x20]
   14001ead1:	mov    DWORD PTR [rsp+0x48],eax
   14001ead5:	call   0x14001a1e0
   14001eada:	mov    ebx,eax
   14001eadc:	test   eax,eax
   14001eade:	jns    0x14001eb15
   14001eae0:	mov    rcx,QWORD PTR [rip+0x2c591]        # 0x14004b078
   14001eae7:	lea    rax,[rip+0x2c58a]        # 0x14004b078
   14001eaee:	cmp    rcx,rax
   14001eaf1:	je     0x14001eb11
   14001eaf3:	test   BYTE PTR [rcx+0x1c],0x1
   14001eaf7:	je     0x14001eb11
   14001eaf9:	mov    rcx,QWORD PTR [rcx+0x10]
   14001eafd:	lea    r8,[rip+0x19cc4]        # 0x1400387c8
   14001eb04:	mov    edx,0x22
   14001eb09:	mov    r9d,ebx
   14001eb0c:	call   0x140001f70
   14001eb11:	mov    eax,ebx
   14001eb13:	jmp    0x14001eb17
   14001eb15:	xor    eax,eax
   14001eb17:	mov    rcx,QWORD PTR [rsp+0x90]
   14001eb1f:	xor    rcx,rsp
   14001eb22:	call   0x14002dd00
   14001eb27:	mov    rbx,QWORD PTR [rsp+0xc8]
   14001eb2f:	add    rsp,0xa0
   14001eb36:	pop    rdi
   14001eb37:	pop    rsi
   14001eb38:	pop    rbp
   14001eb39:	ret    
   14001eb3a:	int3   
   14001eb3b:	int3   
   14001eb3c:	int3   
   14001eb3d:	int3   
   14001eb3e:	int3   
   14001eb3f:	int3   
   14001eb40:	mov    QWORD PTR [rsp+0x10],rbx
   14001eb45:	push   rbp
   14001eb46:	push   rsi
   14001eb47:	push   rdi
   14001eb48:	sub    rsp,0xa0
   14001eb4f:	mov    rax,QWORD PTR [rip+0x2c4ca]        # 0x14004b020
   14001eb56:	xor    rax,rsp
   14001eb59:	mov    QWORD PTR [rsp+0x90],rax
   14001eb61:	mov    edi,edx
   14001eb63:	mov    rbx,r8
   14001eb66:	xor    edx,edx
   14001eb68:	mov    rbp,rcx
   14001eb6b:	lea    rcx,[rsp+0x28]
   14001eb70:	mov    esi,r9d
   14001eb73:	lea    r8d,[rdx+0x64]
   14001eb77:	call   0x14002e2ce
   14001eb7c:	and    QWORD PTR [rsp+0x34],0x0
   14001eb82:	mov    rax,QWORD PTR [rbp+0x20]
   14001eb86:	mov    QWORD PTR [rsp+0x20],rax
   14001eb8b:	mov    DWORD PTR [rsp+0x30],0x1
   14001eb93:	mov    QWORD PTR [rsp+0x3c],rbx
   14001eb98:	mov    DWORD PTR [rsp+0x44],esi
   14001eb9c:	cmp    edi,0x1
   14001eb9f:	jne    0x14001eba6
   14001eba1:	mov    eax,DWORD PTR [rbp+0x7a]
   14001eba4:	jmp    0x14001ebae
   14001eba6:	xor    eax,eax
   14001eba8:	cmp    DWORD PTR [rbp+0x7a],eax
   14001ebab:	sete   al
   14001ebae:	mov    rcx,QWORD PTR [rbp+0xb0]
   14001ebb5:	lea    rdx,[rsp+0x20]
   14001ebba:	mov    DWORD PTR [rsp+0x48],eax
   14001ebbe:	call   0x14001a1e0
   14001ebc3:	mov    ebx,eax
   14001ebc5:	test   eax,eax
   14001ebc7:	jns    0x14001ebfe
   14001ebc9:	mov    rcx,QWORD PTR [rip+0x2c4a8]        # 0x14004b078
   14001ebd0:	lea    rax,[rip+0x2c4a1]        # 0x14004b078
   14001ebd7:	cmp    rcx,rax
   14001ebda:	je     0x14001ebfa
   14001ebdc:	test   BYTE PTR [rcx+0x1c],0x1
   14001ebe0:	je     0x14001ebfa
   14001ebe2:	mov    rcx,QWORD PTR [rcx+0x10]
   14001ebe6:	lea    r8,[rip+0x19bdb]        # 0x1400387c8
   14001ebed:	mov    edx,0x23
   14001ebf2:	mov    r9d,ebx
   14001ebf5:	call   0x140001f70
   14001ebfa:	mov    eax,ebx
   14001ebfc:	jmp    0x14001ec00
   14001ebfe:	xor    eax,eax
   14001ec00:	mov    rcx,QWORD PTR [rsp+0x90]
   14001ec08:	xor    rcx,rsp
   14001ec0b:	call   0x14002dd00
   14001ec10:	mov    rbx,QWORD PTR [rsp+0xc8]
   14001ec18:	add    rsp,0xa0
   14001ec1f:	pop    rdi
   14001ec20:	pop    rsi
   14001ec21:	pop    rbp
   14001ec22:	ret    
   14001ec23:	int3   
   14001ec24:	int3   
   14001ec25:	int3   
   14001ec26:	int3   
   14001ec27:	int3   
   14001ec28:	int3   
   14001ec29:	int3   
   14001ec2a:	int3   
   14001ec2b:	int3   
   14001ec2c:	int3   
   14001ec2d:	int3   
   14001ec2e:	int3   
   14001ec2f:	int3   
   14001ec30:	mov    QWORD PTR [rsp+0x10],rbx
   14001ec35:	push   rbp
   14001ec36:	push   rsi
   14001ec37:	push   rdi
   14001ec38:	sub    rsp,0xa0
   14001ec3f:	mov    rax,QWORD PTR [rip+0x2c3da]        # 0x14004b020
   14001ec46:	xor    rax,rsp
   14001ec49:	mov    QWORD PTR [rsp+0x90],rax
   14001ec51:	mov    edi,edx
   14001ec53:	mov    rbx,r8
   14001ec56:	xor    edx,edx
   14001ec58:	mov    rbp,rcx
   14001ec5b:	lea    rcx,[rsp+0x28]
   14001ec60:	mov    esi,r9d
   14001ec63:	lea    r8d,[rdx+0x64]
   14001ec67:	call   0x14002e2ce
   14001ec6c:	and    QWORD PTR [rsp+0x34],0x0
   14001ec72:	mov    rax,QWORD PTR [rbp+0x20]
   14001ec76:	mov    QWORD PTR [rsp+0x20],rax
   14001ec7b:	mov    DWORD PTR [rsp+0x30],0x2
   14001ec83:	mov    QWORD PTR [rsp+0x3c],rbx
   14001ec88:	mov    DWORD PTR [rsp+0x44],esi
   14001ec8c:	cmp    edi,0x1
   14001ec8f:	jne    0x14001ec96
   14001ec91:	mov    eax,DWORD PTR [rbp+0x7a]
   14001ec94:	jmp    0x14001ec9e
   14001ec96:	xor    eax,eax
   14001ec98:	cmp    DWORD PTR [rbp+0x7a],eax
   14001ec9b:	sete   al
   14001ec9e:	mov    rcx,QWORD PTR [rbp+0xb0]
   14001eca5:	lea    rdx,[rsp+0x20]
   14001ecaa:	mov    DWORD PTR [rsp+0x48],eax
   14001ecae:	call   0x14001a1e0
   14001ecb3:	mov    ebx,eax
   14001ecb5:	test   eax,eax
   14001ecb7:	jns    0x14001ecee
   14001ecb9:	mov    rcx,QWORD PTR [rip+0x2c3b8]        # 0x14004b078
   14001ecc0:	lea    rax,[rip+0x2c3b1]        # 0x14004b078
   14001ecc7:	cmp    rcx,rax
   14001ecca:	je     0x14001ecea
   14001eccc:	test   BYTE PTR [rcx+0x1c],0x1
   14001ecd0:	je     0x14001ecea
   14001ecd2:	mov    rcx,QWORD PTR [rcx+0x10]
   14001ecd6:	lea    r8,[rip+0x19aeb]        # 0x1400387c8
   14001ecdd:	mov    edx,0x24
   14001ece2:	mov    r9d,ebx
   14001ece5:	call   0x140001f70
   14001ecea:	mov    eax,ebx
   14001ecec:	jmp    0x14001ecf0
   14001ecee:	xor    eax,eax
   14001ecf0:	mov    rcx,QWORD PTR [rsp+0x90]
   14001ecf8:	xor    rcx,rsp
   14001ecfb:	call   0x14002dd00
   14001ed00:	mov    rbx,QWORD PTR [rsp+0xc8]
   14001ed08:	add    rsp,0xa0
   14001ed0f:	pop    rdi
   14001ed10:	pop    rsi
   14001ed11:	pop    rbp
   14001ed12:	ret    
   14001ed13:	int3   
   14001ed14:	int3   
   14001ed15:	int3   
   14001ed16:	int3   
   14001ed17:	int3   
   14001ed18:	int3   
   14001ed19:	int3   
   14001ed1a:	int3   
   14001ed1b:	int3   
   14001ed1c:	int3   
   14001ed1d:	int3   
   14001ed1e:	int3   
   14001ed1f:	int3   
   14001ed20:	mov    QWORD PTR [rsp+0x10],rbx
   14001ed25:	push   rdi
   14001ed26:	sub    rsp,0xa0
   14001ed2d:	mov    rax,QWORD PTR [rip+0x2c2ec]        # 0x14004b020
   14001ed34:	xor    rax,rsp
   14001ed37:	mov    QWORD PTR [rsp+0x90],rax
   14001ed3f:	mov    ebx,edx
   14001ed41:	mov    rdi,rcx
   14001ed44:	xor    edx,edx
   14001ed46:	lea    rcx,[rsp+0x28]
   14001ed4b:	lea    r8d,[rdx+0x64]
   14001ed4f:	call   0x14002e2ce
   14001ed54:	mov    rax,QWORD PTR [rdi+0x20]
   14001ed58:	mov    QWORD PTR [rsp+0x20],rax
   14001ed5d:	mov    DWORD PTR [rsp+0x30],0x6
   14001ed65:	cmp    ebx,0x1
   14001ed68:	jne    0x14001ed6f
   14001ed6a:	mov    eax,DWORD PTR [rdi+0x7a]
   14001ed6d:	jmp    0x14001ed77
   14001ed6f:	xor    eax,eax
   14001ed71:	cmp    DWORD PTR [rdi+0x7a],eax
   14001ed74:	sete   al
   14001ed77:	mov    rcx,QWORD PTR [rdi+0xb0]
   14001ed7e:	lea    rdx,[rsp+0x20]
   14001ed83:	and    QWORD PTR [rsp+0x34],0x0
   14001ed89:	and    DWORD PTR [rsp+0x44],0x0
   14001ed8e:	mov    DWORD PTR [rsp+0x48],eax
   14001ed92:	call   0x14001a1e0
   14001ed97:	mov    ebx,eax
   14001ed99:	test   eax,eax
   14001ed9b:	jns    0x14001edd2
   14001ed9d:	mov    rcx,QWORD PTR [rip+0x2c2d4]        # 0x14004b078
   14001eda4:	lea    rax,[rip+0x2c2cd]        # 0x14004b078
   14001edab:	cmp    rcx,rax
   14001edae:	je     0x14001edce
   14001edb0:	test   BYTE PTR [rcx+0x1c],0x1
   14001edb4:	je     0x14001edce
   14001edb6:	mov    rcx,QWORD PTR [rcx+0x10]
   14001edba:	lea    r8,[rip+0x19a07]        # 0x1400387c8
   14001edc1:	mov    edx,0x25
   14001edc6:	mov    r9d,ebx
   14001edc9:	call   0x140001f70
   14001edce:	mov    eax,ebx
   14001edd0:	jmp    0x14001edd4
   14001edd2:	xor    eax,eax
   14001edd4:	mov    rcx,QWORD PTR [rsp+0x90]
   14001eddc:	xor    rcx,rsp
   14001eddf:	call   0x14002dd00
   14001ede4:	mov    rbx,QWORD PTR [rsp+0xb8]
   14001edec:	add    rsp,0xa0
   14001edf3:	pop    rdi
   14001edf4:	ret    
   14001edf5:	int3   
   14001edf6:	int3   
   14001edf7:	int3   
   14001edf8:	int3   
   14001edf9:	int3   
   14001edfa:	int3   
   14001edfb:	int3   
   14001edfc:	mov    QWORD PTR [rsp+0x18],rbx
   14001ee01:	push   rdi
   14001ee02:	sub    rsp,0xa0
   14001ee09:	mov    rax,QWORD PTR [rip+0x2c210]        # 0x14004b020
   14001ee10:	xor    rax,rsp
   14001ee13:	mov    QWORD PTR [rsp+0x90],rax
   14001ee1b:	mov    rbx,rdx
   14001ee1e:	mov    rdi,rcx
   14001ee21:	xor    edx,edx
   14001ee23:	lea    rcx,[rsp+0x28]
   14001ee28:	lea    r8d,[rdx+0x64]
   14001ee2c:	call   0x14002e2ce
   14001ee31:	and    QWORD PTR [rsp+0x34],0x0
   14001ee37:	lea    rdx,[rsp+0x20]
   14001ee3c:	and    DWORD PTR [rsp+0x44],0x0
   14001ee41:	mov    rcx,rdi
   14001ee44:	mov    QWORD PTR [rsp+0x20],rbx
   14001ee49:	mov    DWORD PTR [rsp+0x30],0x5
   14001ee51:	call   0x14001a1e0
   14001ee56:	mov    ebx,eax
   14001ee58:	test   eax,eax
   14001ee5a:	jns    0x14001ee91
   14001ee5c:	mov    rcx,QWORD PTR [rip+0x2c215]        # 0x14004b078
   14001ee63:	lea    rax,[rip+0x2c20e]        # 0x14004b078
   14001ee6a:	cmp    rcx,rax
   14001ee6d:	je     0x14001ee8d
   14001ee6f:	test   BYTE PTR [rcx+0x1c],0x1
   14001ee73:	je     0x14001ee8d
   14001ee75:	mov    rcx,QWORD PTR [rcx+0x10]
   14001ee79:	lea    r8,[rip+0x19948]        # 0x1400387c8
   14001ee80:	mov    edx,0x26
   14001ee85:	mov    r9d,ebx
   14001ee88:	call   0x140001f70
   14001ee8d:	mov    eax,ebx
   14001ee8f:	jmp    0x14001ee93
   14001ee91:	xor    eax,eax
   14001ee93:	mov    rcx,QWORD PTR [rsp+0x90]
   14001ee9b:	xor    rcx,rsp
   14001ee9e:	call   0x14002dd00
   14001eea3:	mov    rbx,QWORD PTR [rsp+0xc0]
   14001eeab:	add    rsp,0xa0
   14001eeb2:	pop    rdi
   14001eeb3:	ret    
   14001eeb4:	int3   
   14001eeb5:	int3   
   14001eeb6:	int3   
   14001eeb7:	int3   
   14001eeb8:	int3   
   14001eeb9:	int3   
   14001eeba:	int3   
   14001eebb:	int3   
   14001eebc:	int3   
   14001eebd:	int3   
   14001eebe:	int3   
   14001eebf:	int3   
   14001eec0:	mov    rdx,QWORD PTR [rcx+0x20]
   14001eec4:	mov    DWORD PTR [rcx+0xc8],0x1
   14001eece:	mov    rcx,QWORD PTR [rcx+0xb0]
   14001eed5:	jmp    0x14001edfc
   14001eeda:	int3   
   14001eedb:	int3   
   14001eedc:	int3   
   14001eedd:	int3   
   14001eede:	int3   
   14001eedf:	int3   
   14001eee0:	xor    r8d,r8d
   14001eee3:	test   rdx,rdx
   14001eee6:	jne    0x14001eeee
   14001eee8:	mov    eax,0x80070057
   14001eeed:	ret    
   14001eeee:	mov    eax,DWORD PTR [rcx+0x18]
   14001eef1:	test   eax,eax
   14001eef3:	jne    0x14001eefe
   14001eef5:	mov    DWORD PTR [rcx+0x18],0x1
   14001eefc:	jmp    0x14001ef02
   14001eefe:	lock inc DWORD PTR [rcx+0x18]
   14001ef02:	test   rcx,rcx
   14001ef05:	je     0x14001ef0b
   14001ef07:	lea    r8,[rcx+0x8]
   14001ef0b:	mov    QWORD PTR [rdx],r8
   14001ef0e:	xor    eax,eax
   14001ef10:	ret    
   14001ef11:	int3   
   14001ef12:	int3   
   14001ef13:	int3   
   14001ef14:	int3   
   14001ef15:	int3   
   14001ef16:	int3   
   14001ef17:	int3   
   14001ef18:	int3   
   14001ef19:	int3   
   14001ef1a:	int3   
   14001ef1b:	int3   
   14001ef1c:	int3   
   14001ef1d:	int3   
   14001ef1e:	int3   
   14001ef1f:	int3   
   14001ef20:	mov    rdx,QWORD PTR [rcx+0x20]
   14001ef24:	mov    DWORD PTR [rcx+0xc8],0x1
   14001ef2e:	mov    rcx,QWORD PTR [rcx+0xb0]
   14001ef35:	jmp    0x14001ef40
   14001ef3a:	int3   
   14001ef3b:	int3   
   14001ef3c:	int3   
   14001ef3d:	int3   
   14001ef3e:	int3   
   14001ef3f:	int3   
   14001ef40:	mov    QWORD PTR [rsp+0x18],rbx
   14001ef45:	push   rdi
   14001ef46:	sub    rsp,0xa0
   14001ef4d:	mov    rax,QWORD PTR [rip+0x2c0cc]        # 0x14004b020
   14001ef54:	xor    rax,rsp
   14001ef57:	mov    QWORD PTR [rsp+0x90],rax
   14001ef5f:	mov    rbx,rdx
   14001ef62:	mov    rdi,rcx
   14001ef65:	xor    edx,edx
   14001ef67:	lea    rcx,[rsp+0x28]
   14001ef6c:	lea    r8d,[rdx+0x64]
   14001ef70:	call   0x14002e2ce
   14001ef75:	and    QWORD PTR [rsp+0x34],0x0
   14001ef7b:	lea    rdx,[rsp+0x20]
   14001ef80:	and    DWORD PTR [rsp+0x44],0x0
   14001ef85:	mov    rcx,rdi
   14001ef88:	mov    QWORD PTR [rsp+0x20],rbx
   14001ef8d:	mov    DWORD PTR [rsp+0x30],0x3
   14001ef95:	call   0x14001a1e0
   14001ef9a:	mov    ebx,eax
   14001ef9c:	test   eax,eax
   14001ef9e:	jns    0x14001efd5
   14001efa0:	mov    rcx,QWORD PTR [rip+0x2c0d1]        # 0x14004b078
   14001efa7:	lea    rax,[rip+0x2c0ca]        # 0x14004b078
   14001efae:	cmp    rcx,rax
   14001efb1:	je     0x14001efd1
   14001efb3:	test   BYTE PTR [rcx+0x1c],0x1
   14001efb7:	je     0x14001efd1
   14001efb9:	mov    rcx,QWORD PTR [rcx+0x10]
   14001efbd:	lea    r8,[rip+0x19804]        # 0x1400387c8
   14001efc4:	mov    edx,0x27
   14001efc9:	mov    r9d,ebx
   14001efcc:	call   0x140001f70
   14001efd1:	mov    eax,ebx
   14001efd3:	jmp    0x14001efd7
   14001efd5:	xor    eax,eax
   14001efd7:	mov    rcx,QWORD PTR [rsp+0x90]
   14001efdf:	xor    rcx,rsp
   14001efe2:	call   0x14002dd00
   14001efe7:	mov    rbx,QWORD PTR [rsp+0xc0]
   14001efef:	add    rsp,0xa0
   14001eff6:	pop    rdi
   14001eff7:	ret    
   14001eff8:	int3   
   14001eff9:	int3   
   14001effa:	int3   
   14001effb:	int3   
   14001effc:	int3   
   14001effd:	int3   
   14001effe:	int3   
   14001efff:	int3   
   14001f000:	sub    rsp,0x38
   14001f004:	mov    r10,rcx
   14001f007:	test   rdx,rdx
   14001f00a:	jne    0x14001f013
   14001f00c:	mov    eax,0x80070057
   14001f011:	jmp    0x14001f03f
   14001f013:	lea    rax,[rcx+0x48]
   14001f017:	mov    r9,rdx
   14001f01a:	movzx  edx,WORD PTR [r10+0x6c]
   14001f01f:	lea    r8,[rsp+0x20]
   14001f024:	add    rcx,0x58
   14001f028:	cmp    DWORD PTR [r10+0x72],0x0
   14001f02d:	cmovne rcx,rax
   14001f031:	movups xmm0,XMMWORD PTR [rcx]
   14001f034:	movdqu XMMWORD PTR [rsp+0x20],xmm0
   14001f03a:	call   0x14001f04c
   14001f03f:	add    rsp,0x38
   14001f043:	ret    
   14001f044:	int3   
   14001f045:	int3   
   14001f046:	int3   
   14001f047:	int3   
   14001f048:	int3   
   14001f049:	int3   
   14001f04a:	int3   
   14001f04b:	int3   
   14001f04c:	rex push rbx
   14001f04e:	sub    rsp,0xd0
   14001f055:	mov    rax,QWORD PTR [rip+0x2bfc4]        # 0x14004b020
   14001f05c:	xor    rax,rsp
   14001f05f:	mov    QWORD PTR [rsp+0xc0],rax
   14001f067:	and    QWORD PTR [rsp+0x20],0x0
   14001f06d:	mov    rbx,r9
   14001f070:	and    QWORD PTR [rsp+0x28],0x0
   14001f076:	movzx  eax,dx
   14001f079:	cmp    eax,0x2
   14001f07c:	je     0x14001f0c0
   14001f07e:	cmp    eax,0x17
   14001f081:	je     0x14001f08d
   14001f083:	mov    eax,0x80070057
   14001f088:	jmp    0x14001f155
   14001f08d:	lea    rax,[rsp+0x20]
   14001f092:	cmp    rax,r8
   14001f095:	jbe    0x14001f0a5
   14001f097:	lea    rax,[r8+0x10]
   14001f09b:	lea    rcx,[rsp+0x20]
   14001f0a0:	cmp    rcx,rax
   14001f0a3:	jb     0x14001f0f9
   14001f0a5:	xor    ecx,ecx
   14001f0a7:	add    r8,0xf
   14001f0ab:	mov    al,BYTE PTR [r8]
   14001f0ae:	dec    r8
   14001f0b1:	mov    BYTE PTR [rsp+rcx*1+0x20],al
   14001f0b5:	inc    rcx
   14001f0b8:	cmp    rcx,0x10
   14001f0bc:	jb     0x14001f0ab
   14001f0be:	jmp    0x14001f0f9
   14001f0c0:	mov    ecx,DWORD PTR [r8]
   14001f0c3:	mov    r9d,0xff00
   14001f0c9:	and    QWORD PTR [rsp+0x28],0x0
   14001f0cf:	mov    edx,ecx
   14001f0d1:	shl    edx,0x10
   14001f0d4:	mov    eax,ecx
   14001f0d6:	and    eax,r9d
   14001f0d9:	shr    ecx,0x8
   14001f0dc:	or     edx,eax
   14001f0de:	mov    DWORD PTR [rsp+0x24],0xffff
   14001f0e6:	movzx  eax,BYTE PTR [r8+0x3]
   14001f0eb:	and    ecx,r9d
   14001f0ee:	shl    edx,0x8
   14001f0f1:	or     edx,ecx
   14001f0f3:	or     edx,eax
   14001f0f5:	mov    DWORD PTR [rsp+0x20],edx
   14001f0f9:	lea    rdx,[rsp+0x20]
   14001f0fe:	lea    rcx,[rsp+0x30]
   14001f103:	call   0x14001f8a8
   14001f108:	lea    rcx,[rsp+0x30]
   14001f10d:	call   QWORD PTR [rip+0x1324d]        # 0x140032360
   14001f113:	test   rax,rax
   14001f116:	jne    0x14001f150
   14001f118:	mov    rcx,QWORD PTR [rip+0x2bf59]        # 0x14004b078
   14001f11f:	lea    rdx,[rip+0x2bf52]        # 0x14004b078
   14001f126:	mov    ebx,0x8007000e
   14001f12b:	cmp    rcx,rdx
   14001f12e:	je     0x14001f14c
   14001f130:	test   BYTE PTR [rcx+0x1c],0x1
   14001f134:	je     0x14001f14c
   14001f136:	mov    rcx,QWORD PTR [rcx+0x10]
   14001f13a:	lea    edx,[rax+0x28]
   14001f13d:	mov    r9d,ebx
   14001f140:	lea    r8,[rip+0x19681]        # 0x1400387c8
   14001f147:	call   0x140001f70
   14001f14c:	mov    eax,ebx
   14001f14e:	jmp    0x14001f155
   14001f150:	mov    QWORD PTR [rbx],rax
   14001f153:	xor    eax,eax
   14001f155:	mov    rcx,QWORD PTR [rsp+0xc0]
   14001f15d:	xor    rcx,rsp
   14001f160:	call   0x14002dd00
   14001f165:	add    rsp,0xd0
   14001f16c:	pop    rbx
   14001f16d:	ret    
   14001f16e:	int3   
   14001f16f:	int3   
   14001f170:	int3   
   14001f171:	int3   
   14001f172:	int3   
   14001f173:	int3   
   14001f174:	int3   
   14001f175:	int3   
   14001f176:	int3   
   14001f177:	int3   
   14001f178:	int3   
   14001f179:	int3   
   14001f17a:	int3   
   14001f17b:	int3   
   14001f17c:	int3   
   14001f17d:	int3   
   14001f17e:	int3   
   14001f17f:	int3   
   14001f180:	test   rdx,rdx
   14001f183:	jne    0x14001f18b
   14001f185:	mov    eax,0x80070057
   14001f18a:	ret    
   14001f18b:	cmp    DWORD PTR [rcx+0x72],0x0
   14001f18f:	je     0x14001f197
   14001f191:	movzx  eax,WORD PTR [rcx+0x68]
   14001f195:	jmp    0x14001f19b
   14001f197:	movzx  eax,WORD PTR [rcx+0x6a]
   14001f19b:	mov    WORD PTR [rdx],ax
   14001f19e:	xor    eax,eax
   14001f1a0:	ret    
   14001f1a1:	int3   
   14001f1a2:	int3   
   14001f1a3:	int3   
   14001f1a4:	int3   
   14001f1a5:	int3   
   14001f1a6:	int3   
   14001f1a7:	int3   
   14001f1a8:	int3   
   14001f1a9:	int3   
   14001f1aa:	int3   
   14001f1ab:	int3   
   14001f1ac:	int3   
   14001f1ad:	int3   
   14001f1ae:	int3   
   14001f1af:	int3   
   14001f1b0:	sub    rsp,0x38
   14001f1b4:	mov    r10,rcx
   14001f1b7:	test   rdx,rdx
   14001f1ba:	jne    0x14001f1c3
   14001f1bc:	mov    eax,0x80070057
   14001f1c1:	jmp    0x14001f1ef
   14001f1c3:	lea    rax,[rcx+0x58]
   14001f1c7:	mov    r9,rdx
   14001f1ca:	movzx  edx,WORD PTR [r10+0x6c]
   14001f1cf:	lea    r8,[rsp+0x20]
   14001f1d4:	add    rcx,0x48
   14001f1d8:	cmp    DWORD PTR [r10+0x72],0x0
   14001f1dd:	cmovne rcx,rax
   14001f1e1:	movups xmm0,XMMWORD PTR [rcx]
   14001f1e4:	movdqu XMMWORD PTR [rsp+0x20],xmm0
   14001f1ea:	call   0x14001f04c
   14001f1ef:	add    rsp,0x38
   14001f1f3:	ret    
   14001f1f4:	int3   
   14001f1f5:	int3   
   14001f1f6:	int3   
   14001f1f7:	int3   
   14001f1f8:	int3   
   14001f1f9:	int3   
   14001f1fa:	int3   
   14001f1fb:	int3   
   14001f1fc:	int3   
   14001f1fd:	int3   
   14001f1fe:	int3   
   14001f1ff:	int3   
   14001f200:	mov    QWORD PTR [rsp+0x20],rbx
   14001f205:	push   rdi
   14001f206:	sub    rsp,0x40
   14001f20a:	mov    rax,QWORD PTR [rip+0x2be0f]        # 0x14004b020
   14001f211:	xor    rax,rsp
   14001f214:	mov    QWORD PTR [rsp+0x30],rax
   14001f219:	mov    rbx,rdx
   14001f21c:	mov    rdi,rcx
   14001f21f:	test   rdx,rdx
   14001f222:	je     0x14001f286
   14001f224:	mov    edx,0x10
   14001f229:	cmp    r8d,edx
   14001f22c:	jne    0x14001f286
   14001f22e:	lea    rax,[rcx+0x58]
   14001f232:	mov    r9d,edx
   14001f235:	add    rcx,0x48
   14001f239:	lea    r8,[rsp+0x20]
   14001f23e:	cmp    DWORD PTR [rdi+0x72],0x0
   14001f242:	cmovne rcx,rax
   14001f246:	movups xmm0,XMMWORD PTR [rcx]
   14001f249:	mov    rcx,rbx
   14001f24c:	movdqu XMMWORD PTR [rsp+0x20],xmm0
   14001f252:	call   QWORD PTR [rip+0x13368]        # 0x1400325c0
   14001f258:	cmp    WORD PTR [rdi+0x6c],0x2
   14001f25d:	jne    0x14001f282
   14001f25f:	mov    DWORD PTR [rbx+0x8],0xffff0000
   14001f266:	mov    al,BYTE PTR [rbx]
   14001f268:	mov    BYTE PTR [rbx+0xc],al
   14001f26b:	mov    al,BYTE PTR [rbx+0x1]
   14001f26e:	mov    BYTE PTR [rbx+0xd],al
   14001f271:	mov    al,BYTE PTR [rbx+0x2]
   14001f274:	mov    BYTE PTR [rbx+0xe],al
   14001f277:	mov    al,BYTE PTR [rbx+0x3]
   14001f27a:	mov    BYTE PTR [rbx+0xf],al
   14001f27d:	xor    eax,eax
   14001f27f:	mov    QWORD PTR [rbx],rax
   14001f282:	xor    eax,eax
   14001f284:	jmp    0x14001f28b
   14001f286:	mov    eax,0x80070057
   14001f28b:	mov    rcx,QWORD PTR [rsp+0x30]
   14001f290:	xor    rcx,rsp
   14001f293:	call   0x14002dd00
   14001f298:	mov    rbx,QWORD PTR [rsp+0x68]
   14001f29d:	add    rsp,0x40
   14001f2a1:	pop    rdi
   14001f2a2:	ret    
   14001f2a3:	int3   
   14001f2a4:	int3   
   14001f2a5:	int3   
   14001f2a6:	int3   
   14001f2a7:	int3   
   14001f2a8:	int3   
   14001f2a9:	int3   
   14001f2aa:	int3   
   14001f2ab:	int3   
   14001f2ac:	int3   
   14001f2ad:	int3   
   14001f2ae:	int3   
   14001f2af:	int3   
   14001f2b0:	mov    QWORD PTR [rsp+0x20],rbx
   14001f2b5:	push   rdi
   14001f2b6:	sub    rsp,0x40
   14001f2ba:	mov    rax,QWORD PTR [rip+0x2bd5f]        # 0x14004b020
   14001f2c1:	xor    rax,rsp
   14001f2c4:	mov    QWORD PTR [rsp+0x30],rax
   14001f2c9:	mov    rbx,rdx
   14001f2cc:	mov    rdi,rcx
   14001f2cf:	test   rdx,rdx
   14001f2d2:	je     0x14001f336
   14001f2d4:	mov    edx,0x10
   14001f2d9:	cmp    r8d,edx
   14001f2dc:	jne    0x14001f336
   14001f2de:	lea    rax,[rcx+0x48]
   14001f2e2:	mov    r9d,edx
   14001f2e5:	add    rcx,0x58
   14001f2e9:	lea    r8,[rsp+0x20]
   14001f2ee:	cmp    DWORD PTR [rdi+0x72],0x0
   14001f2f2:	cmovne rcx,rax
   14001f2f6:	movups xmm0,XMMWORD PTR [rcx]
   14001f2f9:	mov    rcx,rbx
   14001f2fc:	movdqu XMMWORD PTR [rsp+0x20],xmm0
   14001f302:	call   QWORD PTR [rip+0x132b8]        # 0x1400325c0
   14001f308:	cmp    WORD PTR [rdi+0x6c],0x2
   14001f30d:	jne    0x14001f332
   14001f30f:	mov    DWORD PTR [rbx+0x8],0xffff0000
   14001f316:	mov    al,BYTE PTR [rbx]
   14001f318:	mov    BYTE PTR [rbx+0xc],al
   14001f31b:	mov    al,BYTE PTR [rbx+0x1]
   14001f31e:	mov    BYTE PTR [rbx+0xd],al
   14001f321:	mov    al,BYTE PTR [rbx+0x2]
   14001f324:	mov    BYTE PTR [rbx+0xe],al
   14001f327:	mov    al,BYTE PTR [rbx+0x3]
   14001f32a:	mov    BYTE PTR [rbx+0xf],al
   14001f32d:	xor    eax,eax
   14001f32f:	mov    QWORD PTR [rbx],rax
   14001f332:	xor    eax,eax
   14001f334:	jmp    0x14001f33b
   14001f336:	mov    eax,0x80070057
   14001f33b:	mov    rcx,QWORD PTR [rsp+0x30]
   14001f340:	xor    rcx,rsp
   14001f343:	call   0x14002dd00
   14001f348:	mov    rbx,QWORD PTR [rsp+0x68]
   14001f34d:	add    rsp,0x40
   14001f351:	pop    rdi
   14001f352:	ret    
   14001f353:	int3   
   14001f354:	int3   
   14001f355:	int3   
   14001f356:	int3   
   14001f357:	int3   
   14001f358:	int3   
   14001f359:	int3   
   14001f35a:	int3   
   14001f35b:	int3   
   14001f35c:	int3   
   14001f35d:	int3   
   14001f35e:	int3   
   14001f35f:	int3   
   14001f360:	test   rdx,rdx
   14001f363:	jne    0x14001f36b
   14001f365:	mov    eax,0x80070057
   14001f36a:	ret    
   14001f36b:	cmp    DWORD PTR [rcx+0x72],0x0
   14001f36f:	je     0x14001f377
   14001f371:	movzx  eax,WORD PTR [rcx+0x6a]
   14001f375:	jmp    0x14001f37b
   14001f377:	movzx  eax,WORD PTR [rcx+0x68]
   14001f37b:	mov    WORD PTR [rdx],ax
   14001f37e:	xor    eax,eax
   14001f380:	ret    
   14001f381:	int3   
   14001f382:	int3   
   14001f383:	int3   
   14001f384:	int3   
   14001f385:	int3   
   14001f386:	int3   
   14001f387:	int3   
   14001f388:	int3   
   14001f389:	int3   
   14001f38a:	int3   
   14001f38b:	int3   
   14001f38c:	int3   
   14001f38d:	int3   
   14001f38e:	int3   
   14001f38f:	int3   
   14001f390:	xor    eax,eax
   14001f392:	test   rdx,rdx
   14001f395:	jne    0x14001f39d
   14001f397:	mov    eax,0x80070057
   14001f39c:	ret    
   14001f39d:	cmp    DWORD PTR [rcx+0x72],eax
   14001f3a0:	setne  al
   14001f3a3:	mov    DWORD PTR [rdx],eax
   14001f3a5:	xor    eax,eax
   14001f3a7:	ret    
   14001f3a8:	int3   
   14001f3a9:	int3   
   14001f3aa:	int3   
   14001f3ab:	int3   
   14001f3ac:	int3   
   14001f3ad:	int3   
   14001f3ae:	int3   
   14001f3af:	int3   
   14001f3b0:	test   rdx,rdx
   14001f3b3:	jne    0x14001f3bb
   14001f3b5:	mov    eax,0x80070057
   14001f3ba:	ret    
   14001f3bb:	mov    al,BYTE PTR [rcx+0x6e]
   14001f3be:	mov    BYTE PTR [rdx],al
   14001f3c0:	xor    eax,eax
   14001f3c2:	ret    
   14001f3c3:	int3   
   14001f3c4:	int3   
   14001f3c5:	int3   
   14001f3c6:	int3   
   14001f3c7:	int3   
   14001f3c8:	int3   
   14001f3c9:	int3   
   14001f3ca:	int3   
   14001f3cb:	int3   
   14001f3cc:	int3   
   14001f3cd:	int3   
   14001f3ce:	int3   
   14001f3cf:	int3   
   14001f3d0:	mov    rax,rsp
   14001f3d3:	push   rsi
   14001f3d4:	push   rdi
   14001f3d5:	push   r14
   14001f3d7:	sub    rsp,0x280
   14001f3de:	mov    QWORD PTR [rsp+0x58],0xfffffffffffffffe
   14001f3e7:	mov    QWORD PTR [rax+0x18],rbx
   14001f3eb:	mov    rax,QWORD PTR [rip+0x2bc2e]        # 0x14004b020
   14001f3f2:	xor    rax,rsp
   14001f3f5:	mov    QWORD PTR [rsp+0x270],rax
   14001f3fd:	mov    r14b,r8b
   14001f400:	mov    rsi,rdx
   14001f403:	mov    rdi,rcx
   14001f406:	xor    ebx,ebx
   14001f408:	test   rdx,rdx
   14001f40b:	jne    0x14001f417
   14001f40d:	mov    eax,0x80070057
   14001f412:	jmp    0x14001f5be
   14001f417:	cmp    QWORD PTR [rcx+0xc8],rbx
   14001f41e:	jne    0x14001f4ec
   14001f424:	mov    WORD PTR [rsp+0x60],bx
   14001f429:	xor    edx,edx
   14001f42b:	mov    r8d,0x206
   14001f431:	lea    rcx,[rsp+0x62]
   14001f436:	call   0x14002e2ce
   14001f43b:	mov    r8,QWORD PTR [rdi+0x76]
   14001f43f:	cmp    r8,0xa
   14001f443:	jae    0x14001f45f
   14001f445:	mov    r8d,0x104
   14001f44b:	lea    rdx,[rsp+0x60]
   14001f450:	lea    rcx,[rip+0x19329]        # 0x140038780
   14001f457:	call   QWORD PTR [rip+0x12d4b]        # 0x1400321a8
   14001f45d:	jmp    0x14001f499
   14001f45f:	mov    QWORD PTR [rsp+0x30],rbx
   14001f464:	mov    QWORD PTR [rsp+0x28],0x206
   14001f46d:	lea    rax,[rsp+0x60]
   14001f472:	mov    QWORD PTR [rsp+0x20],rax
   14001f477:	mov    edx,0x12c0db
   14001f47c:	mov    r9d,0x8
   14001f482:	mov    rcx,QWORD PTR [rdi+0xa8]
   14001f489:	call   0x140018118
   14001f48e:	test   eax,eax
   14001f490:	jns    0x14001f499
   14001f492:	mov    ecx,eax
   14001f494:	call   0x140029d64
   14001f499:	mov    rcx,QWORD PTR [rdi+0xc8]
   14001f4a0:	lea    rax,[rsp+0x60]
   14001f4a5:	cmp    rax,rcx
   14001f4a8:	je     0x14001f4d1
   14001f4aa:	call   QWORD PTR [rip+0x12ea0]        # 0x140032350
   14001f4b0:	lea    rcx,[rsp+0x60]
   14001f4b5:	call   QWORD PTR [rip+0x12ea5]        # 0x140032360
   14001f4bb:	mov    QWORD PTR [rdi+0xc8],rax
   14001f4c2:	test   rax,rax
   14001f4c5:	jne    0x14001f4d1
   14001f4c7:	mov    ecx,0x8007000e
   14001f4cc:	call   0x140005d50
   14001f4d1:	mov    rcx,QWORD PTR [rdi+0xc8]
   14001f4d8:	call   QWORD PTR [rip+0x12e92]        # 0x140032370
   14001f4de:	test   eax,eax
   14001f4e0:	jne    0x14001f4ec
   14001f4e2:	mov    eax,0x80070490
   14001f4e7:	jmp    0x14001f5be
   14001f4ec:	mov    rcx,QWORD PTR [rdi+0xc8]
   14001f4f3:	test   r14b,r14b
   14001f4f6:	je     0x14001f55d
   14001f4f8:	mov    QWORD PTR [rsp+0x40],rbx
   14001f4fd:	lea    rdx,[rsp+0x40]
   14001f502:	call   0x14002baec
   14001f507:	mov    edi,eax
   14001f509:	mov    eax,0x80070490
   14001f50e:	cmp    edi,0x1
   14001f511:	cmove  edi,eax
   14001f514:	test   edi,edi
   14001f516:	jns    0x14001f54d
   14001f518:	lea    rax,[rip+0x2bb59]        # 0x14004b078
   14001f51f:	mov    rcx,QWORD PTR [rip+0x2bb52]        # 0x14004b078
   14001f526:	cmp    rcx,rax
   14001f529:	je     0x14001f549
   14001f52b:	test   BYTE PTR [rcx+0x1c],0x1
   14001f52f:	je     0x14001f549
   14001f531:	mov    edx,0x29
   14001f536:	mov    r9d,edi
   14001f539:	lea    r8,[rip+0x19288]        # 0x1400387c8
   14001f540:	mov    rcx,QWORD PTR [rcx+0x10]
   14001f544:	call   0x140001f70
   14001f549:	mov    eax,edi
   14001f54b:	jmp    0x14001f5be
   14001f54d:	mov    rcx,QWORD PTR [rsp+0x40]
   14001f552:	call   QWORD PTR [rip+0x12e08]        # 0x140032360
   14001f558:	mov    QWORD PTR [rsi],rax
   14001f55b:	jmp    0x14001f57d
   14001f55d:	test   rcx,rcx
   14001f560:	je     0x14001f57a
   14001f562:	call   QWORD PTR [rip+0x12e20]        # 0x140032388
   14001f568:	mov    edx,eax
   14001f56a:	mov    rcx,QWORD PTR [rdi+0xc8]
   14001f571:	call   QWORD PTR [rip+0x12df1]        # 0x140032368
   14001f577:	mov    rbx,rax
   14001f57a:	mov    QWORD PTR [rsi],rbx
   14001f57d:	jmp    0x14001f5bc
   14001f57f:	mov    edi,DWORD PTR [rsp+0x40]
   14001f583:	test   edi,edi
   14001f585:	jns    0x14001f5bc
   14001f587:	lea    rax,[rip+0x2baea]        # 0x14004b078
   14001f58e:	mov    rcx,QWORD PTR [rip+0x2bae3]        # 0x14004b078
   14001f595:	cmp    rcx,rax
   14001f598:	je     0x14001f5b8
   14001f59a:	test   BYTE PTR [rcx+0x1c],0x1
   14001f59e:	je     0x14001f5b8
   14001f5a0:	mov    edx,0x2a
   14001f5a5:	mov    r9d,edi
   14001f5a8:	lea    r8,[rip+0x19219]        # 0x1400387c8
   14001f5af:	mov    rcx,QWORD PTR [rcx+0x10]
   14001f5b3:	call   0x140001f70
   14001f5b8:	mov    eax,edi
   14001f5ba:	jmp    0x14001f5be
   14001f5bc:	xor    eax,eax
   14001f5be:	mov    rcx,QWORD PTR [rsp+0x270]
   14001f5c6:	xor    rcx,rsp
   14001f5c9:	call   0x14002dd00
   14001f5ce:	mov    rbx,QWORD PTR [rsp+0x2b0]
   14001f5d6:	add    rsp,0x280
   14001f5dd:	pop    r14
   14001f5df:	pop    rdi
   14001f5e0:	pop    rsi
   14001f5e1:	ret    
   14001f5e2:	int3   
   14001f5e3:	int3   
   14001f5e4:	int3   
   14001f5e5:	int3   
   14001f5e6:	int3   
   14001f5e7:	int3   
   14001f5e8:	int3   
   14001f5e9:	int3   
   14001f5ea:	int3   
   14001f5eb:	int3   
   14001f5ec:	int3   
   14001f5ed:	int3   
   14001f5ee:	int3   
   14001f5ef:	int3   
   14001f5f0:	test   rdx,rdx
   14001f5f3:	jne    0x14001f5fb
   14001f5f5:	mov    eax,0x80070057
   14001f5fa:	ret    
   14001f5fb:	mov    eax,DWORD PTR [rcx+0x76]
   14001f5fe:	mov    DWORD PTR [rdx],eax
   14001f600:	xor    eax,eax
   14001f602:	ret    
   14001f603:	int3   
   14001f604:	int3   
   14001f605:	int3   
   14001f606:	int3   
   14001f607:	int3   
   14001f608:	int3   
   14001f609:	int3   
   14001f60a:	int3   
   14001f60b:	int3   
   14001f60c:	int3   
   14001f60d:	int3   
   14001f60e:	int3   
   14001f60f:	int3   
   14001f610:	mov    QWORD PTR [rsp+0x8],rbx
   14001f615:	mov    QWORD PTR [rsp+0x20],rsi
   14001f61a:	push   rdi
   14001f61b:	sub    rsp,0x20
   14001f61f:	xor    ebx,ebx
   14001f621:	mov    rsi,rdx
   14001f624:	test   rdx,rdx
   14001f627:	jne    0x14001f633
   14001f629:	mov    eax,0x80070057
   14001f62e:	jmp    0x14001f6b6
   14001f633:	mov    rcx,QWORD PTR [rcx+0x7e]
   14001f637:	mov    QWORD PTR [rsp+0x38],rbx
   14001f63c:	test   rcx,rcx
   14001f63f:	jne    0x14001f648
   14001f641:	mov    edi,0x80070490
   14001f646:	jmp    0x14001f6ac
   14001f648:	lea    rdx,[rsp+0x38]
   14001f64d:	call   QWORD PTR [rip+0x12a3d]        # 0x140032090
   14001f653:	test   eax,eax
   14001f655:	jne    0x14001f66d
   14001f657:	call   QWORD PTR [rip+0x12c2b]        # 0x140032288
   14001f65d:	movzx  edi,ax
   14001f660:	or     edi,0x80070000
   14001f666:	test   eax,eax
   14001f668:	cmovle edi,eax
   14001f66b:	jmp    0x14001f6ac
   14001f66d:	mov    rdx,QWORD PTR [rsp+0x38]
   14001f672:	lea    rcx,[rsp+0x40]
   14001f677:	mov    QWORD PTR [rsp+0x40],rbx
   14001f67c:	call   0x1400113d0
   14001f681:	mov    rcx,QWORD PTR [rsp+0x38]
   14001f686:	mov    edi,eax
   14001f688:	call   QWORD PTR [rip+0x12b22]        # 0x1400321b0
   14001f68e:	test   edi,edi
   14001f690:	jns    0x14001f699
   14001f692:	mov    rbx,QWORD PTR [rsp+0x40]
   14001f697:	jmp    0x14001f6a3
   14001f699:	mov    rax,QWORD PTR [rsp+0x40]
   14001f69e:	mov    edi,ebx
   14001f6a0:	mov    QWORD PTR [rsi],rax
   14001f6a3:	mov    rcx,rbx
   14001f6a6:	call   QWORD PTR [rip+0x12ca4]        # 0x140032350
   14001f6ac:	xor    ecx,ecx
   14001f6ae:	call   QWORD PTR [rip+0x12c9c]        # 0x140032350
   14001f6b4:	mov    eax,edi
   14001f6b6:	mov    rbx,QWORD PTR [rsp+0x30]
   14001f6bb:	mov    rsi,QWORD PTR [rsp+0x48]
   14001f6c0:	add    rsp,0x20
   14001f6c4:	pop    rdi
   14001f6c5:	ret    
   14001f6c6:	int3   
   14001f6c7:	int3   
   14001f6c8:	int3   
   14001f6c9:	int3   
   14001f6ca:	int3   
   14001f6cb:	int3   
   14001f6cc:	int3   
   14001f6cd:	int3   
   14001f6ce:	int3   
   14001f6cf:	int3   
   14001f6d0:	rex push rbp
   14001f6d2:	push   rbx
   14001f6d3:	push   rsi
   14001f6d4:	push   rdi
   14001f6d5:	push   r14
   14001f6d7:	lea    rbp,[rsp-0x370]
   14001f6df:	sub    rsp,0x470
   14001f6e6:	mov    rax,QWORD PTR [rip+0x2b933]        # 0x14004b020
   14001f6ed:	xor    rax,rsp
   14001f6f0:	mov    QWORD PTR [rbp+0x360],rax
   14001f6f7:	xor    ebx,ebx
   14001f6f9:	mov    rsi,r8
   14001f6fc:	mov    r14,rdx
   14001f6ff:	test   rdx,rdx
   14001f702:	je     0x14001f7ea
   14001f708:	test   r8,r8
   14001f70b:	je     0x14001f7ea
   14001f711:	mov    rdx,QWORD PTR [rcx+0x7e]
   14001f715:	test   rdx,rdx
   14001f718:	jne    0x14001f724
   14001f71a:	mov    eax,0x80070490
   14001f71f:	jmp    0x14001f7ef
   14001f724:	lea    rax,[rsp+0x58]
   14001f729:	mov    DWORD PTR [rsp+0x40],0x100
   14001f731:	mov    QWORD PTR [rsp+0x30],rax
   14001f736:	lea    r9,[rsp+0x40]
   14001f73b:	lea    rax,[rsp+0x40]
   14001f740:	xor    ecx,ecx
   14001f742:	mov    QWORD PTR [rsp+0x28],rax
   14001f747:	lea    r8,[rsp+0x60]
   14001f74c:	lea    rax,[rbp+0x160]
   14001f753:	mov    QWORD PTR [rsp+0x20],rax
   14001f758:	call   QWORD PTR [rip+0x1293a]        # 0x140032098
   14001f75e:	test   eax,eax
   14001f760:	jne    0x14001f779
   14001f762:	call   QWORD PTR [rip+0x12b20]        # 0x140032288
   14001f768:	mov    ecx,eax
   14001f76a:	movzx  eax,ax
   14001f76d:	or     eax,0x80070000
   14001f772:	test   ecx,ecx
   14001f774:	cmovle eax,ecx
   14001f777:	jmp    0x14001f7ef
   14001f779:	lea    rdx,[rsp+0x60]
   14001f77e:	mov    QWORD PTR [rsp+0x48],rbx
   14001f783:	lea    rcx,[rsp+0x48]
   14001f788:	call   0x1400113d0
   14001f78d:	mov    edi,eax
   14001f78f:	test   eax,eax
   14001f791:	jns    0x14001f79a
   14001f793:	mov    rbx,QWORD PTR [rsp+0x48]
   14001f798:	jmp    0x14001f7dd
   14001f79a:	lea    rdx,[rbp+0x160]
   14001f7a1:	mov    QWORD PTR [rsp+0x50],rbx
   14001f7a6:	lea    rcx,[rsp+0x50]
   14001f7ab:	call   0x1400113d0
   14001f7b0:	mov    edi,eax
   14001f7b2:	test   eax,eax
   14001f7b4:	jns    0x14001f7c2
   14001f7b6:	mov    rbx,QWORD PTR [rsp+0x48]
   14001f7bb:	mov    rcx,QWORD PTR [rsp+0x50]
   14001f7c0:	jmp    0x14001f7d7
   14001f7c2:	mov    rax,QWORD PTR [rsp+0x48]
   14001f7c7:	mov    rcx,rbx
   14001f7ca:	mov    QWORD PTR [rsi],rax
   14001f7cd:	mov    edi,ebx
   14001f7cf:	mov    rax,QWORD PTR [rsp+0x50]
   14001f7d4:	mov    QWORD PTR [r14],rax
   14001f7d7:	call   QWORD PTR [rip+0x12b73]        # 0x140032350
   14001f7dd:	mov    rcx,rbx
   14001f7e0:	call   QWORD PTR [rip+0x12b6a]        # 0x140032350
   14001f7e6:	mov    eax,edi
   14001f7e8:	jmp    0x14001f7ef
   14001f7ea:	mov    eax,0x80070057
   14001f7ef:	mov    rcx,QWORD PTR [rbp+0x360]
   14001f7f6:	xor    rcx,rsp
   14001f7f9:	call   0x14002dd00
   14001f7fe:	add    rsp,0x470
   14001f805:	pop    r14
   14001f807:	pop    rdi
   14001f808:	pop    rsi
   14001f809:	pop    rbx
   14001f80a:	pop    rbp
   14001f80b:	ret    
   14001f80c:	int3   
   14001f80d:	int3   
   14001f80e:	int3   
   14001f80f:	int3   
   14001f810:	int3   
   14001f811:	int3   
   14001f812:	int3   
   14001f813:	int3   
   14001f814:	int3   
   14001f815:	int3   
   14001f816:	int3   
   14001f817:	int3   
   14001f818:	int3   
   14001f819:	int3   
   14001f81a:	int3   
   14001f81b:	int3   
   14001f81c:	int3   
   14001f81d:	int3   
   14001f81e:	int3   
   14001f81f:	int3   
   14001f820:	xor    eax,eax
   14001f822:	cmp    DWORD PTR [rcx+0x8e],eax
   14001f828:	setne  al
   14001f82b:	ret    
   14001f82c:	int3   
   14001f82d:	int3   
   14001f82e:	int3   
   14001f82f:	int3   
   14001f830:	int3   
   14001f831:	int3   
   14001f832:	int3   
   14001f833:	int3   
   14001f834:	mov    QWORD PTR [rsp+0x8],rbx
   14001f839:	mov    QWORD PTR [rsp+0x10],rsi
   14001f83e:	mov    QWORD PTR [rsp+0x18],rdi
   14001f843:	push   r14
   14001f845:	sub    rsp,0x20
   14001f849:	mov    rsi,rdx
   14001f84c:	mov    rdi,rcx
   14001f84f:	test   rdx,rdx
   14001f852:	je     0x14001f868
   14001f854:	mov    rax,QWORD PTR [rdx]
   14001f857:	mov    rbx,QWORD PTR [rax]
   14001f85a:	mov    rcx,rbx
   14001f85d:	call   QWORD PTR [rip+0x12e45]        # 0x1400326a8
   14001f863:	mov    rcx,rsi
   14001f866:	call   rbx
   14001f868:	mov    r14,QWORD PTR [rdi]
   14001f86b:	mov    QWORD PTR [rdi],rsi
   14001f86e:	test   r14,r14
   14001f871:	je     0x14001f888
   14001f873:	mov    rax,QWORD PTR [r14]
   14001f876:	mov    rbx,QWORD PTR [rax+0x8]
   14001f87a:	mov    rcx,rbx
   14001f87d:	call   QWORD PTR [rip+0x12e25]        # 0x1400326a8
   14001f883:	mov    rcx,r14
   14001f886:	call   rbx
   14001f888:	mov    rbx,QWORD PTR [rsp+0x30]
   14001f88d:	mov    rax,rdi
   14001f890:	mov    rdi,QWORD PTR [rsp+0x40]
   14001f895:	mov    rsi,QWORD PTR [rsp+0x38]
   14001f89a:	add    rsp,0x20
   14001f89e:	pop    r14
   14001f8a0:	ret    
   14001f8a1:	int3   
   14001f8a2:	int3   
   14001f8a3:	int3   
   14001f8a4:	int3   
   14001f8a5:	int3   
   14001f8a6:	int3   
   14001f8a7:	int3   
   14001f8a8:	rex push rbx
   14001f8aa:	sub    rsp,0x40
   14001f8ae:	mov    rax,QWORD PTR [rip+0x2b76b]        # 0x14004b020
   14001f8b5:	xor    rax,rsp
   14001f8b8:	mov    QWORD PTR [rsp+0x38],rax
   14001f8bd:	mov    r8,rdx
   14001f8c0:	mov    rbx,rcx
   14001f8c3:	xor    edx,edx
   14001f8c5:	cmp    QWORD PTR [r8+0x8],rdx
   14001f8c9:	jne    0x14001f918
   14001f8cb:	cmp    WORD PTR [r8+0x6],dx
   14001f8d0:	jne    0x14001f918
   14001f8d2:	mov    eax,0xffff
   14001f8d7:	cmp    WORD PTR [r8+0x4],ax
   14001f8dc:	jne    0x14001f918
   14001f8de:	mov    ecx,DWORD PTR [r8]
   14001f8e1:	mov    r9d,0xff00
   14001f8e7:	mov    edx,ecx
   14001f8e9:	mov    eax,ecx
   14001f8eb:	shl    edx,0x10
   14001f8ee:	and    eax,r9d
   14001f8f1:	or     edx,eax
   14001f8f3:	shr    ecx,0x8
   14001f8f6:	movzx  eax,BYTE PTR [r8+0x3]
   14001f8fb:	and    ecx,r9d
   14001f8fe:	shl    edx,0x8
   14001f901:	or     edx,ecx
   14001f903:	lea    rcx,[rsp+0x20]
   14001f908:	or     edx,eax
   14001f90a:	mov    DWORD PTR [rsp+0x20],edx
   14001f90e:	mov    rdx,rbx
   14001f911:	call   0x140024628
   14001f916:	jmp    0x14001f954
   14001f918:	lea    rax,[rsp+0x28]
   14001f91d:	cmp    rax,r8
   14001f920:	jbe    0x14001f930
   14001f922:	lea    rax,[r8+0x10]
   14001f926:	lea    rcx,[rsp+0x28]
   14001f92b:	cmp    rcx,rax
   14001f92e:	jb     0x14001f947
   14001f930:	add    r8,0xf
   14001f934:	mov    cl,BYTE PTR [r8]
   14001f937:	dec    r8
   14001f93a:	mov    BYTE PTR [rsp+rdx*1+0x28],cl
   14001f93e:	inc    rdx
   14001f941:	cmp    rdx,0x10
   14001f945:	jb     0x14001f934
   14001f947:	mov    rdx,rbx
   14001f94a:	lea    rcx,[rsp+0x28]
   14001f94f:	call   0x140024304
   14001f954:	mov    rax,rbx
   14001f957:	mov    rcx,QWORD PTR [rsp+0x38]
   14001f95c:	xor    rcx,rsp
   14001f95f:	call   0x14002dd00
   14001f964:	add    rsp,0x40
   14001f968:	pop    rbx
   14001f969:	ret    
   14001f96a:	int3   
   14001f96b:	int3   
   14001f96c:	int3   
   14001f96d:	int3   
   14001f96e:	int3   
   14001f96f:	int3   
   14001f970:	sub    rcx,0x8
   14001f974:	jmp    0x14001daf0
   14001f979:	int3   
   14001f97a:	int3   
   14001f97b:	int3   
   14001f97c:	int3   
   14001f97d:	int3   
   14001f97e:	int3   
   14001f97f:	int3   
   14001f980:	sub    rcx,0x8
   14001f984:	jmp    0x14001dd10
   14001f989:	int3   
   14001f98a:	int3   
   14001f98b:	int3   
   14001f98c:	int3   
   14001f98d:	int3   
   14001f98e:	int3   
   14001f98f:	int3   
   14001f990:	sub    rcx,0x8
   14001f994:	jmp    0x14001dac0
   14001f999:	int3   
   14001f99a:	int3   
   14001f99b:	int3   
   14001f99c:	int3   
   14001f99d:	int3   
   14001f99e:	int3   
   14001f99f:	int3   
   14001f9a0:	sub    rcx,0x10
   14001f9a4:	jmp    0x14001dd10
   14001f9a9:	int3   
   14001f9aa:	int3   
   14001f9ab:	int3   
   14001f9ac:	int3   
   14001f9ad:	int3   
   14001f9ae:	int3   
   14001f9af:	int3   
   14001f9b0:	rex push rbx
   14001f9b2:	sub    rsp,0x20
   14001f9b6:	lea    rax,[rip+0x15003]        # 0x1400349c0
   14001f9bd:	mov    rbx,rcx
   14001f9c0:	mov    QWORD PTR [rcx],rax
   14001f9c3:	test   dl,0x1
   14001f9c6:	je     0x14001f9ce
   14001f9c8:	call   QWORD PTR [rip+0x12bfa]        # 0x1400325c8
   14001f9ce:	mov    rax,rbx
   14001f9d1:	add    rsp,0x20
   14001f9d5:	pop    rbx
   14001f9d6:	ret    
   14001f9d7:	int3   
   14001f9d8:	int3   
   14001f9d9:	int3   
   14001f9da:	int3   
   14001f9db:	int3   
   14001f9dc:	int3   
   14001f9dd:	int3   
   14001f9de:	int3   
   14001f9df:	int3   
   14001f9e0:	mov    QWORD PTR [rsp+0x8],rbx
   14001f9e5:	mov    QWORD PTR [rsp+0x10],rsi
   14001f9ea:	push   rdi
   14001f9eb:	sub    rsp,0x20
   14001f9ef:	mov    rsi,rcx
   14001f9f2:	or     edi,0xffffffff
   14001f9f5:	lock xadd DWORD PTR [rcx+0x10],edi
   14001f9fa:	sub    edi,0x1
   14001f9fd:	jne    0x14001fa1c
   14001f9ff:	test   rcx,rcx
   14001fa02:	je     0x14001fa1c
   14001fa04:	mov    rdx,QWORD PTR [rcx]
   14001fa07:	mov    rbx,QWORD PTR [rdx+0x28]
   14001fa0b:	mov    rcx,rbx
   14001fa0e:	call   QWORD PTR [rip+0x12c94]        # 0x1400326a8
   14001fa14:	lea    edx,[rdi+0x1]
   14001fa17:	mov    rcx,rsi
   14001fa1a:	call   rbx
   14001fa1c:	mov    rbx,QWORD PTR [rsp+0x30]
   14001fa21:	mov    eax,edi
   14001fa23:	mov    rsi,QWORD PTR [rsp+0x38]
   14001fa28:	add    rsp,0x20
   14001fa2c:	pop    rdi
   14001fa2d:	ret    
   14001fa2e:	int3   
   14001fa2f:	int3   
   14001fa30:	int3   
   14001fa31:	int3   
   14001fa32:	int3   
   14001fa33:	int3   
   14001fa34:	mov    QWORD PTR [rsp+0x8],rcx
   14001fa39:	push   rdi
   14001fa3a:	sub    rsp,0x30
   14001fa3e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001fa47:	mov    QWORD PTR [rsp+0x48],rbx
   14001fa4c:	mov    rbx,rcx
   14001fa4f:	lea    rax,[rip+0x150b2]        # 0x140034b08
   14001fa56:	mov    QWORD PTR [rcx],rax
   14001fa59:	lea    rax,[rip+0x15070]        # 0x140034ad0
   14001fa60:	mov    QWORD PTR [rcx+0x8],rax
   14001fa64:	add    rcx,0xb8
   14001fa6b:	call   QWORD PTR [rip+0x12807]        # 0x140032278
   14001fa71:	lea    rcx,[rbx+0x30]
   14001fa75:	lea    r9,[rip+0xfffffffffffe3ec4]        # 0x140003940
   14001fa7c:	mov    edx,0x30
   14001fa81:	lea    r8d,[rdx-0x2e]
   14001fa85:	call   0x14002dd24
   14001fa8a:	nop
   14001fa8b:	mov    rdi,QWORD PTR [rbx+0x28]
   14001fa8f:	test   rdi,rdi
   14001fa92:	je     0x14001faa9
   14001fa94:	mov    rax,QWORD PTR [rdi]
   14001fa97:	mov    rbx,QWORD PTR [rax+0x8]
   14001fa9b:	mov    rcx,rbx
   14001fa9e:	call   QWORD PTR [rip+0x12c04]        # 0x1400326a8
   14001faa4:	mov    rcx,rdi
   14001faa7:	call   rbx
   14001faa9:	mov    rbx,QWORD PTR [rsp+0x48]
   14001faae:	add    rsp,0x30
   14001fab2:	pop    rdi
   14001fab3:	ret    
   14001fab4:	int3   
   14001fab5:	int3   
   14001fab6:	int3   
   14001fab7:	int3   
   14001fab8:	int3   
   14001fab9:	int3   
   14001faba:	int3   
   14001fabb:	int3   
   14001fabc:	int3   
   14001fabd:	int3   
   14001fabe:	int3   
   14001fabf:	int3   
   14001fac0:	mov    QWORD PTR [rsp+0x8],rbx
   14001fac5:	push   rdi
   14001fac6:	sub    rsp,0x20
   14001faca:	mov    ebx,edx
   14001facc:	mov    rdi,rcx
   14001facf:	call   0x14001fa34
   14001fad4:	test   bl,0x1
   14001fad7:	je     0x14001fae2
   14001fad9:	mov    rcx,rdi
   14001fadc:	call   QWORD PTR [rip+0x12ae6]        # 0x1400325c8
   14001fae2:	mov    rax,rdi
   14001fae5:	mov    rbx,QWORD PTR [rsp+0x30]
   14001faea:	add    rsp,0x20
   14001faee:	pop    rdi
   14001faef:	ret    
   14001faf0:	int3   
   14001faf1:	int3   
   14001faf2:	int3   
   14001faf3:	int3   
   14001faf4:	int3   
   14001faf5:	int3   
   14001faf6:	int3   
   14001faf7:	int3   
   14001faf8:	mov    r11,rsp
   14001fafb:	mov    QWORD PTR [r11+0x20],r9
   14001faff:	sub    rsp,0x58
   14001fb03:	and    QWORD PTR [r11-0x18],0x0
   14001fb08:	lea    rax,[r11+0x28]
   14001fb0c:	mov    QWORD PTR [r11-0x20],0x4
   14001fb14:	lea    r8,[rip+0x18cbd]        # 0x1400387d8
   14001fb1b:	mov    QWORD PTR [r11-0x28],rax
   14001fb1f:	mov    edx,0xe
   14001fb24:	lea    rax,[r11+0x20]
   14001fb28:	movzx  r9d,dx
   14001fb2c:	mov    QWORD PTR [r11-0x30],0x8
   14001fb34:	mov    edx,0x2b
   14001fb39:	mov    QWORD PTR [r11-0x38],rax
   14001fb3d:	call   QWORD PTR [rip+0x124dd]        # 0x140032020
   14001fb43:	add    rsp,0x58
   14001fb47:	ret    
   14001fb48:	int3   
   14001fb49:	int3   
   14001fb4a:	int3   
   14001fb4b:	int3   
   14001fb4c:	int3   
   14001fb4d:	int3   
   14001fb4e:	int3   
   14001fb4f:	int3   
   14001fb50:	mov    r11,rsp
   14001fb53:	mov    QWORD PTR [r11+0x20],r9
   14001fb57:	sub    rsp,0x88
   14001fb5e:	and    QWORD PTR [r11-0x18],0x0
   14001fb63:	lea    rax,[r11+0x40]
   14001fb67:	mov    r9d,0x11
   14001fb6d:	lea    r8d,[r9-0x9]
   14001fb71:	mov    QWORD PTR [r11-0x20],r8
   14001fb75:	lea    edx,[r9-0xd]
   14001fb79:	mov    QWORD PTR [r11-0x28],rax
   14001fb7d:	lea    rax,[r11+0x38]
   14001fb81:	mov    QWORD PTR [r11-0x30],r8
   14001fb85:	mov    QWORD PTR [r11-0x38],rax
   14001fb89:	lea    rax,[r11+0x30]
   14001fb8d:	mov    QWORD PTR [r11-0x40],rdx
   14001fb91:	mov    QWORD PTR [r11-0x48],rax
   14001fb95:	lea    rax,[r11+0x28]
   14001fb99:	mov    QWORD PTR [r11-0x50],rdx
   14001fb9d:	lea    edx,[r9+0x1a]
   14001fba1:	mov    QWORD PTR [r11-0x58],rax
   14001fba5:	lea    rax,[r11+0x20]
   14001fba9:	mov    QWORD PTR [r11-0x60],r8
   14001fbad:	lea    r8,[rip+0x18c24]        # 0x1400387d8
   14001fbb4:	mov    QWORD PTR [r11-0x68],rax
   14001fbb8:	call   QWORD PTR [rip+0x12462]        # 0x140032020
   14001fbbe:	add    rsp,0x88
   14001fbc5:	ret    
   14001fbc6:	int3   
   14001fbc7:	int3   
   14001fbc8:	int3   
   14001fbc9:	int3   
   14001fbca:	int3   
   14001fbcb:	int3   
   14001fbcc:	mov    r11,rsp
   14001fbcf:	mov    QWORD PTR [r11+0x20],r9
   14001fbd3:	sub    rsp,0x68
   14001fbd7:	and    QWORD PTR [r11-0x18],0x0
   14001fbdc:	lea    rax,[r11+0x30]
   14001fbe0:	mov    r8d,0x10
   14001fbe6:	movzx  r9d,r8w
   14001fbea:	lea    edx,[r8-0x8]
   14001fbee:	mov    QWORD PTR [r11-0x20],rdx
   14001fbf2:	lea    r8,[rip+0x18bdf]        # 0x1400387d8
   14001fbf9:	mov    QWORD PTR [r11-0x28],rax
   14001fbfd:	lea    rax,[r11+0x28]
   14001fc01:	mov    QWORD PTR [r11-0x30],rdx
   14001fc05:	mov    QWORD PTR [r11-0x38],rax
   14001fc09:	lea    rax,[r11+0x20]
   14001fc0d:	mov    QWORD PTR [r11-0x40],rdx
   14001fc11:	mov    edx,0x2b
   14001fc16:	mov    QWORD PTR [r11-0x48],rax
   14001fc1a:	call   QWORD PTR [rip+0x12400]        # 0x140032020
   14001fc20:	add    rsp,0x68
   14001fc24:	ret    
   14001fc25:	int3   
   14001fc26:	int3   
   14001fc27:	int3   
   14001fc28:	int3   
   14001fc29:	int3   
   14001fc2a:	int3   
   14001fc2b:	int3   
   14001fc2c:	mov    r11,rsp
   14001fc2f:	mov    QWORD PTR [r11+0x20],r9
   14001fc33:	sub    rsp,0x78
   14001fc37:	and    QWORD PTR [r11-0x18],0x0
   14001fc3c:	lea    rax,[r11+0x38]
   14001fc40:	mov    r8d,0xd
   14001fc46:	movzx  r9d,r8w
   14001fc4a:	lea    edx,[r8-0x5]
   14001fc4e:	mov    QWORD PTR [r11-0x20],rdx
   14001fc52:	lea    r8,[rip+0x18b7f]        # 0x1400387d8
   14001fc59:	mov    QWORD PTR [r11-0x28],rax
   14001fc5d:	lea    rax,[r11+0x30]
   14001fc61:	mov    QWORD PTR [r11-0x30],0x4
   14001fc69:	mov    QWORD PTR [r11-0x38],rax
   14001fc6d:	lea    rax,[r11+0x28]
   14001fc71:	mov    QWORD PTR [r11-0x40],rdx
   14001fc75:	mov    QWORD PTR [r11-0x48],rax
   14001fc79:	lea    rax,[r11+0x20]
   14001fc7d:	mov    QWORD PTR [r11-0x50],rdx
   14001fc81:	mov    edx,0x2b
   14001fc86:	mov    QWORD PTR [r11-0x58],rax
   14001fc8a:	call   QWORD PTR [rip+0x12390]        # 0x140032020
   14001fc90:	add    rsp,0x78
   14001fc94:	ret    
   14001fc95:	int3   
   14001fc96:	int3   
   14001fc97:	int3   
   14001fc98:	int3   
   14001fc99:	int3   
   14001fc9a:	int3   
   14001fc9b:	int3   
   14001fc9c:	mov    r11,rsp
   14001fc9f:	mov    QWORD PTR [r11+0x20],r9
   14001fca3:	sub    rsp,0x78
   14001fca7:	and    QWORD PTR [r11-0x18],0x0
   14001fcac:	lea    rax,[r11+0x38]
   14001fcb0:	mov    r9d,0x12
   14001fcb6:	lea    r8d,[r9-0xe]
   14001fcba:	mov    QWORD PTR [r11-0x20],r8
   14001fcbe:	lea    edx,[r9-0xa]
   14001fcc2:	mov    QWORD PTR [r11-0x28],rax
   14001fcc6:	lea    rax,[r11+0x30]
   14001fcca:	mov    QWORD PTR [r11-0x30],rdx
   14001fcce:	mov    QWORD PTR [r11-0x38],rax
   14001fcd2:	lea    rax,[r11+0x28]
   14001fcd6:	mov    QWORD PTR [r11-0x40],r8
   14001fcda:	lea    r8,[rip+0x18af7]        # 0x1400387d8
   14001fce1:	mov    QWORD PTR [r11-0x48],rax
   14001fce5:	lea    rax,[r11+0x20]
   14001fce9:	mov    QWORD PTR [r11-0x50],rdx
   14001fced:	lea    edx,[r9+0x19]
   14001fcf1:	mov    QWORD PTR [r11-0x58],rax
   14001fcf5:	call   QWORD PTR [rip+0x12325]        # 0x140032020
   14001fcfb:	add    rsp,0x78
   14001fcff:	ret    
   14001fd00:	int3   
   14001fd01:	int3   
   14001fd02:	int3   
   14001fd03:	int3   
   14001fd04:	int3   
   14001fd05:	int3   
   14001fd06:	int3   
   14001fd07:	int3   
   14001fd08:	mov    r11,rsp
   14001fd0b:	mov    QWORD PTR [r11+0x20],r9
   14001fd0f:	sub    rsp,0x98
   14001fd16:	and    QWORD PTR [r11-0x18],0x0
   14001fd1b:	lea    rax,[r11+0x48]
   14001fd1f:	mov    r9d,0xc
   14001fd25:	lea    r8d,[r9-0x4]
   14001fd29:	mov    QWORD PTR [r11-0x20],r8
   14001fd2d:	lea    edx,[r9-0x8]
   14001fd31:	mov    QWORD PTR [r11-0x28],rax
   14001fd35:	lea    rax,[r11+0x40]
   14001fd39:	mov    QWORD PTR [r11-0x30],rdx
   14001fd3d:	mov    QWORD PTR [r11-0x38],rax
   14001fd41:	lea    rax,[r11+0x38]
   14001fd45:	mov    QWORD PTR [r11-0x40],rdx
   14001fd49:	mov    QWORD PTR [r11-0x48],rax
   14001fd4d:	lea    rax,[r11+0x30]
   14001fd51:	mov    QWORD PTR [r11-0x50],r8
   14001fd55:	mov    QWORD PTR [r11-0x58],rax
   14001fd59:	lea    rax,[r11+0x28]
   14001fd5d:	mov    QWORD PTR [r11-0x60],rdx
   14001fd61:	lea    edx,[r9+0x1f]
   14001fd65:	mov    QWORD PTR [r11-0x68],rax
   14001fd69:	lea    rax,[r11+0x20]
   14001fd6d:	mov    QWORD PTR [r11-0x70],r8
   14001fd71:	lea    r8,[rip+0x18a60]        # 0x1400387d8
   14001fd78:	mov    QWORD PTR [r11-0x78],rax
   14001fd7c:	call   QWORD PTR [rip+0x1229e]        # 0x140032020
   14001fd82:	add    rsp,0x98
   14001fd89:	ret    
   14001fd8a:	int3   
   14001fd8b:	int3   
   14001fd8c:	int3   
   14001fd8d:	int3   
   14001fd8e:	int3   
   14001fd8f:	int3   
   14001fd90:	mov    r11,rsp
   14001fd93:	push   rbx
   14001fd94:	push   rsi
   14001fd95:	push   rdi
   14001fd96:	push   r12
   14001fd98:	push   r13
   14001fd9a:	push   r14
   14001fd9c:	push   r15
   14001fd9e:	sub    rsp,0xc0
   14001fda5:	mov    QWORD PTR [r11-0x70],0xfffffffffffffffe
   14001fdad:	mov    rax,QWORD PTR [rip+0x2b26c]        # 0x14004b020
   14001fdb4:	xor    rax,rsp
   14001fdb7:	mov    QWORD PTR [rsp+0xb8],rax
   14001fdbf:	mov    ebx,r9d
   14001fdc2:	mov    DWORD PTR [rsp+0x54],ebx
   14001fdc6:	mov    QWORD PTR [rsp+0x58],r8
   14001fdcb:	movsxd rsi,edx
   14001fdce:	mov    DWORD PTR [rsp+0x50],esi
   14001fdd2:	mov    r14,rcx
   14001fdd5:	test   r8,r8
   14001fdd8:	je     0x1400202a0
   14001fdde:	test   ebx,ebx
   14001fde0:	je     0x1400202a0
   14001fde6:	lea    r12,[rcx+0xb8]
   14001fded:	mov    QWORD PTR [rsp+0x70],r12
   14001fdf2:	mov    QWORD PTR [r11-0x80],r12
   14001fdf6:	mov    rcx,r12
   14001fdf9:	call   QWORD PTR [rip+0x12309]        # 0x140032108
   14001fdff:	nop
   14001fe00:	test   BYTE PTR [r14+0x94],0x3
   14001fe08:	je     0x14001fe18
   14001fe0a:	mov    rcx,r12
   14001fe0d:	call   QWORD PTR [rip+0x122e5]        # 0x1400320f8
   14001fe13:	jmp    0x1400202ce
   14001fe18:	cmp    QWORD PTR [r14+0x20],0x0
   14001fe1d:	jne    0x14001fe4f
   14001fe1f:	lea    r15,[rip+0x2b252]        # 0x14004b078
   14001fe26:	mov    rcx,QWORD PTR [rip+0x2b24b]        # 0x14004b078
   14001fe2d:	cmp    rcx,r15
   14001fe30:	je     0x14001fe0a
   14001fe32:	test   BYTE PTR [rcx+0x1c],0x2
   14001fe36:	je     0x14001fe0a
   14001fe38:	mov    edx,0xb
   14001fe3d:	lea    r8,[rip+0x18994]        # 0x1400387d8
   14001fe44:	mov    rcx,QWORD PTR [rcx+0x10]
   14001fe48:	call   0x140001f08
   14001fe4d:	jmp    0x14001fe0a
   14001fe4f:	mov    rdi,rsi
   14001fe52:	lea    r15,[rsi+0x1]
   14001fe56:	lea    r15,[r15+r15*2]
   14001fe5a:	shl    r15,0x4
   14001fe5e:	add    r15,r14
   14001fe61:	mov    QWORD PTR [rsp+0x60],r15
   14001fe66:	mov    rcx,r15
   14001fe69:	call   QWORD PTR [rip+0x12299]        # 0x140032108
   14001fe6f:	mov    rcx,r15
   14001fe72:	test   BYTE PTR [r14+0x94],0xc
   14001fe7a:	je     0x14001fe84
   14001fe7c:	call   QWORD PTR [rip+0x12276]        # 0x1400320f8
   14001fe82:	jmp    0x14001fe0a
   14001fe84:	call   QWORD PTR [rip+0x1226e]        # 0x1400320f8
   14001fe8a:	lea    r15,[rip+0x2b1e7]        # 0x14004b078
   14001fe91:	mov    rcx,QWORD PTR [rip+0x2b1e0]        # 0x14004b078
   14001fe98:	mov    r13,QWORD PTR [rsp+0x120]
   14001fea0:	cmp    rcx,r15
   14001fea3:	je     0x14001fedf
   14001fea5:	test   BYTE PTR [rcx+0x1c],0x10
   14001fea9:	je     0x14001fedf
   14001feab:	mov    rax,QWORD PTR [r14+rsi*8+0xa8]
   14001feb3:	mov    QWORD PTR [rsp+0x40],rax
   14001feb8:	mov    eax,DWORD PTR [r14+rsi*4+0xa0]
   14001fec0:	mov    DWORD PTR [rsp+0x38],eax
   14001fec4:	mov    DWORD PTR [rsp+0x30],ebx
   14001fec8:	mov    QWORD PTR [rsp+0x28],r13
   14001fecd:	mov    DWORD PTR [rsp+0x20],esi
   14001fed1:	mov    r9,QWORD PTR [r14+0x18]
   14001fed5:	mov    rcx,QWORD PTR [rcx+0x10]
   14001fed9:	call   0x14001fd08
   14001fede:	nop
   14001fedf:	cmp    DWORD PTR [r14+rsi*4+0xa0],0x0
   14001fee8:	je     0x140020047
   14001feee:	mov    rax,QWORD PTR [r14+rsi*8+0xa8]
   14001fef6:	cmp    r13,rax
   14001fef9:	jbe    0x14001ff45
   14001fefb:	mov    rcx,QWORD PTR [rip+0x2b176]        # 0x14004b078
   14001ff02:	cmp    rcx,r15
   14001ff05:	je     0x14001ff28
   14001ff07:	test   BYTE PTR [rcx+0x1c],0x1
   14001ff0b:	je     0x14001ff28
   14001ff0d:	mov    QWORD PTR [rsp+0x30],rax
   14001ff12:	mov    DWORD PTR [rsp+0x28],esi
   14001ff16:	mov    QWORD PTR [rsp+0x20],r13
   14001ff1b:	mov    r9,QWORD PTR [r14+0x18]
   14001ff1f:	mov    rcx,QWORD PTR [rcx+0x10]
   14001ff23:	call   0x14001fc2c
   14001ff28:	lea    rcx,[r14+0x8]
   14001ff2c:	call   0x140020de0
   14001ff31:	nop
   14001ff32:	mov    rcx,r12
   14001ff35:	call   QWORD PTR [rip+0x121bd]        # 0x1400320f8
   14001ff3b:	mov    eax,0x80004005
   14001ff40:	jmp    0x1400202d0
   14001ff45:	mov    esi,eax
   14001ff47:	sub    esi,r13d
   14001ff4a:	mov    rcx,QWORD PTR [rip+0x2b127]        # 0x14004b078
   14001ff51:	cmp    rcx,r15
   14001ff54:	je     0x14001ff74
   14001ff56:	test   BYTE PTR [rcx+0x1c],0x10
   14001ff5a:	je     0x14001ff74
   14001ff5c:	mov    DWORD PTR [rsp+0x20],esi
   14001ff60:	mov    r9,QWORD PTR [r14+0x18]
   14001ff64:	mov    rcx,QWORD PTR [rcx+0x10]
   14001ff68:	call   0x14001faf8
   14001ff6d:	mov    rcx,QWORD PTR [rip+0x2b104]        # 0x14004b078
   14001ff74:	cmp    ebx,esi
   14001ff76:	ja     0x14001ffad
   14001ff78:	cmp    rcx,r15
   14001ff7b:	je     0x14001ff9d
   14001ff7d:	test   BYTE PTR [rcx+0x1c],0x10
   14001ff81:	je     0x14001ff9d
   14001ff83:	mov    edx,0xf
   14001ff88:	mov    r9,QWORD PTR [r14+0x18]
   14001ff8c:	lea    r8,[rip+0x18845]        # 0x1400387d8
   14001ff93:	mov    rcx,QWORD PTR [rcx+0x10]
   14001ff97:	call   0x14001ad20
   14001ff9c:	nop
   14001ff9d:	mov    rcx,r12
   14001ffa0:	call   QWORD PTR [rip+0x12152]        # 0x1400320f8
   14001ffa6:	xor    eax,eax
   14001ffa8:	jmp    0x1400202d0
   14001ffad:	mov    r8d,DWORD PTR [r14+rdi*4+0xa0]
   14001ffb5:	mov    edx,DWORD PTR [rsp+0x50]
   14001ffb9:	mov    rcx,r14
   14001ffbc:	call   0x14002054c
   14001ffc1:	mov    rcx,QWORD PTR [r14+0x98]
   14001ffc8:	test   rcx,rcx
   14001ffcb:	je     0x14001ffda
   14001ffcd:	mov    edx,DWORD PTR [r14+rdi*4+0xa0]
   14001ffd5:	call   0x140024a28
   14001ffda:	mov    rcx,QWORD PTR [r14+0x98]
   14001ffe1:	test   rcx,rcx
   14001ffe4:	je     0x14001fff3
   14001ffe6:	mov    edx,DWORD PTR [r14+rdi*4+0xa0]
   14001ffee:	call   0x140024a88
   14001fff3:	mov    rcx,QWORD PTR [r14+0x98]
   14001fffa:	test   rcx,rcx
   14001fffd:	je     0x14002000c
   14001ffff:	mov    edx,DWORD PTR [r14+rdi*4+0xa0]
   140020007:	call   0x140024968
   14002000c:	mov    rcx,QWORD PTR [r14+0x98]
   140020013:	test   rcx,rcx
   140020016:	je     0x140020025
   140020018:	mov    edx,DWORD PTR [r14+rdi*4+0xa0]
   140020020:	call   0x1400249c8
   140020025:	and    DWORD PTR [r14+rdi*4+0xa0],0x0
   14002002e:	mov    r13,QWORD PTR [r14+rdi*8+0xa8]
   140020036:	mov    eax,esi
   140020038:	add    QWORD PTR [rsp+0x58],rax
   14002003d:	sub    ebx,esi
   14002003f:	mov    DWORD PTR [rsp+0x54],ebx
   140020043:	mov    esi,DWORD PTR [rsp+0x50]
   140020047:	mov    rcx,QWORD PTR [r14+0x98]
   14002004e:	test   rcx,rcx
   140020051:	je     0x14002005a
   140020053:	mov    edx,ebx
   140020055:	call   0x1400248a8
   14002005a:	mov    rcx,QWORD PTR [r14+0x98]
   140020061:	test   rcx,rcx
   140020064:	je     0x14002006d
   140020066:	mov    edx,ebx
   140020068:	call   0x140024908
   14002006d:	mov    r9d,ebx
   140020070:	mov    r8,QWORD PTR [rsp+0x58]
   140020075:	mov    edx,esi
   140020077:	mov    rcx,r14
   14002007a:	call   0x1400202fc
   14002007f:	mov    rax,QWORD PTR [rsp+0x60]
   140020084:	mov    QWORD PTR [rsp+0x80],rax
   14002008c:	mov    rcx,rax
   14002008f:	call   QWORD PTR [rip+0x12073]        # 0x140032108
   140020095:	nop
   140020096:	test   BYTE PTR [r14+0x94],0xc
   14002009e:	je     0x1400200d2
   1400200a0:	mov    rcx,QWORD PTR [rip+0x2afd1]        # 0x14004b078
   1400200a7:	cmp    rcx,r15
   1400200aa:	je     0x1400200ce
   1400200ac:	test   BYTE PTR [rcx+0x1c],0x4
   1400200b0:	je     0x1400200ce
   1400200b2:	mov    edx,0x18
   1400200b7:	lea    r8,[rip+0x1871a]        # 0x1400387d8
   1400200be:	mov    rcx,QWORD PTR [rcx+0x10]
   1400200c2:	call   0x140001f08
   1400200c7:	mov    rcx,QWORD PTR [rip+0x2afaa]        # 0x14004b078
   1400200ce:	xor    eax,eax
   1400200d0:	jmp    0x140020101
   1400200d2:	xor    eax,eax
   1400200d4:	mov    rsi,QWORD PTR [r14+0x28]
   1400200d8:	test   rsi,rsi
   1400200db:	je     0x1400200fa
   1400200dd:	mov    rax,QWORD PTR [rsi]
   1400200e0:	mov    rbx,QWORD PTR [rax+0x18]
   1400200e4:	mov    rcx,rbx
   1400200e7:	call   QWORD PTR [rip+0x125bb]        # 0x1400326a8
   1400200ed:	mov    edx,DWORD PTR [rsp+0x50]
   1400200f1:	mov    rcx,rsi
   1400200f4:	call   rbx
   1400200f6:	mov    ebx,DWORD PTR [rsp+0x54]
   1400200fa:	mov    rcx,QWORD PTR [rip+0x2af77]        # 0x14004b078
   140020101:	mov    edx,eax
   140020103:	or     esi,0xffffffff
   140020106:	sub    esi,ebx
   140020108:	cmp    rdx,rsi
   14002010b:	cmovb  esi,edx
   14002010e:	cmp    rcx,r15
   140020111:	je     0x140020130
   140020113:	test   BYTE PTR [rcx+0x1c],0x10
   140020117:	je     0x140020130
   140020119:	mov    QWORD PTR [rsp+0x28],rsi
   14002011e:	mov    QWORD PTR [rsp+0x20],rdx
   140020123:	mov    r9,QWORD PTR [r14+0x18]
   140020127:	mov    rcx,QWORD PTR [rcx+0x10]
   14002012b:	call   0x14001fbcc
   140020130:	mov    DWORD PTR [r14+rdi*4+0xa0],esi
   140020138:	mov    ecx,ebx
   14002013a:	mov    QWORD PTR [rsp+0x58],rcx
   14002013f:	mov    eax,esi
   140020141:	add    rcx,rax
   140020144:	add    rcx,r13
   140020147:	mov    QWORD PTR [r14+rdi*8+0xa8],rcx
   14002014f:	mov    eax,DWORD PTR [r14+rdi*4+0xa0]
   140020157:	test   eax,eax
   140020159:	je     0x140020192
   14002015b:	mov    rdx,QWORD PTR [rip+0x2af16]        # 0x14004b078
   140020162:	cmp    rdx,r15
   140020165:	je     0x1400201cc
   140020167:	mov    esi,DWORD PTR [rsp+0x50]
   14002016b:	test   BYTE PTR [rdx+0x1c],0x4
   14002016f:	je     0x14002019d
   140020171:	mov    QWORD PTR [rsp+0x38],rcx
   140020176:	mov    QWORD PTR [rsp+0x30],r13
   14002017b:	mov    DWORD PTR [rsp+0x28],esi
   14002017f:	mov    DWORD PTR [rsp+0x20],eax
   140020183:	mov    r9,QWORD PTR [r14+0x18]
   140020187:	mov    rcx,QWORD PTR [rdx+0x10]
   14002018b:	call   0x14001fb50
   140020190:	jmp    0x140020196
   140020192:	mov    esi,DWORD PTR [rsp+0x50]
   140020196:	mov    rdx,QWORD PTR [rip+0x2aedb]        # 0x14004b078
   14002019d:	cmp    rdx,r15
   1400201a0:	je     0x1400201cc
   1400201a2:	test   BYTE PTR [rdx+0x1c],0x10
   1400201a6:	je     0x1400201cc
   1400201a8:	mov    ecx,DWORD PTR [r14+rdi*4+0xa0]
   1400201b0:	add    ecx,ebx
   1400201b2:	mov    DWORD PTR [rsp+0x30],ecx
   1400201b6:	mov    QWORD PTR [rsp+0x28],r13
   1400201bb:	mov    DWORD PTR [rsp+0x20],esi
   1400201bf:	mov    r9,QWORD PTR [r14+0x18]
   1400201c3:	mov    rcx,QWORD PTR [rdx+0x10]
   1400201c7:	call   0x14001fc9c
   1400201cc:	mov    rsi,QWORD PTR [r14+0x20]
   1400201d0:	mov    r10,QWORD PTR [rsi]
   1400201d3:	add    ebx,DWORD PTR [r14+rdi*4+0xa0]
   1400201db:	mov    rdi,QWORD PTR [r10+0x20]
   1400201df:	mov    rcx,rdi
   1400201e2:	call   QWORD PTR [rip+0x124c0]        # 0x1400326a8
   1400201e8:	mov    r9d,ebx
   1400201eb:	mov    r8,r13
   1400201ee:	mov    edx,DWORD PTR [rsp+0x50]
   1400201f2:	mov    rcx,rsi
   1400201f5:	call   rdi
   1400201f7:	mov    ebx,eax
   1400201f9:	test   eax,eax
   1400201fb:	jns    0x14002024a
   1400201fd:	mov    rcx,QWORD PTR [rip+0x2ae74]        # 0x14004b078
   140020204:	cmp    rcx,r15
   140020207:	je     0x140020227
   140020209:	test   BYTE PTR [rcx+0x1c],0x1
   14002020d:	je     0x140020227
   14002020f:	mov    edx,0x13
   140020214:	mov    r9d,eax
   140020217:	lea    r8,[rip+0x185ba]        # 0x1400387d8
   14002021e:	mov    rcx,QWORD PTR [rcx+0x10]
   140020222:	call   0x140001f70
   140020227:	mov    edx,ebx
   140020229:	lea    rcx,[rsp+0x90]
   140020231:	call   0x140002064
   140020236:	lea    rdx,[rip+0x28f4b]        # 0x140049188
   14002023d:	lea    rcx,[rsp+0x90]
   140020245:	call   0x14002e2da
   14002024a:	mov    rcx,QWORD PTR [r14+0x98]
   140020251:	test   rcx,rcx
   140020254:	je     0x140020260
   140020256:	mov    rdx,QWORD PTR [rsp+0x58]
   14002025b:	call   0x140024968
   140020260:	mov    rcx,QWORD PTR [r14+0x98]
   140020267:	test   rcx,rcx
   14002026a:	je     0x140020276
   14002026c:	mov    edx,DWORD PTR [rsp+0x54]
   140020270:	call   0x1400249c8
   140020275:	nop
   140020276:	mov    rcx,QWORD PTR [rsp+0x60]
   14002027b:	call   QWORD PTR [rip+0x11e77]        # 0x1400320f8
   140020281:	nop
   140020282:	mov    rcx,r12
   140020285:	call   QWORD PTR [rip+0x11e6d]        # 0x1400320f8
   14002028b:	xor    eax,eax
   14002028d:	jmp    0x1400202d0
   14002028f:	mov    rcx,QWORD PTR [rsp+0x70]
   140020294:	call   QWORD PTR [rip+0x11e5e]        # 0x1400320f8
   14002029a:	mov    eax,DWORD PTR [rsp+0x54]
   14002029e:	jmp    0x1400202d0
   1400202a0:	lea    r15,[rip+0x2add1]        # 0x14004b078
   1400202a7:	mov    rcx,QWORD PTR [rip+0x2adca]        # 0x14004b078
   1400202ae:	cmp    rcx,r15
   1400202b1:	je     0x1400202ce
   1400202b3:	test   BYTE PTR [rcx+0x1c],0x2
   1400202b7:	je     0x1400202ce
   1400202b9:	mov    edx,0xa
   1400202be:	lea    r8,[rip+0x18513]        # 0x1400387d8
   1400202c5:	mov    rcx,QWORD PTR [rcx+0x10]
   1400202c9:	call   0x140001f08
   1400202ce:	xor    eax,eax
   1400202d0:	mov    rcx,QWORD PTR [rsp+0xb8]
   1400202d8:	xor    rcx,rsp
   1400202db:	call   0x14002dd00
   1400202e0:	add    rsp,0xc0
   1400202e7:	pop    r15
   1400202e9:	pop    r14
   1400202eb:	pop    r13
   1400202ed:	pop    r12
   1400202ef:	pop    rdi
   1400202f0:	pop    rsi
   1400202f1:	pop    rbx
   1400202f2:	ret    
   1400202f3:	int3   
   1400202f4:	int3   
   1400202f5:	int3   
   1400202f6:	int3   
   1400202f7:	int3   
   1400202f8:	int3   
   1400202f9:	int3   
   1400202fa:	int3   
   1400202fb:	int3   
   1400202fc:	rex push rbx
   1400202fe:	push   rsi
   1400202ff:	push   rdi
   140020300:	push   r12
   140020302:	push   r13
   140020304:	push   r14
   140020306:	push   r15
   140020308:	sub    rsp,0xe0
   14002030f:	mov    QWORD PTR [rsp+0x80],0xfffffffffffffffe
   14002031b:	mov    rax,QWORD PTR [rip+0x2acfe]        # 0x14004b020
   140020322:	xor    rax,rsp
   140020325:	mov    QWORD PTR [rsp+0xd8],rax
   14002032d:	mov    r14d,r9d
   140020330:	mov    rax,r8
   140020333:	mov    QWORD PTR [rsp+0x58],rax
   140020338:	mov    r12d,edx
   14002033b:	mov    rdi,rcx
   14002033e:	mov    QWORD PTR [rsp+0x60],rcx
   140020343:	mov    DWORD PTR [rsp+0x40],edx
   140020347:	mov    QWORD PTR [rsp+0x48],rax
   14002034c:	mov    DWORD PTR [rsp+0x38],r9d
   140020351:	mov    DWORD PTR [rcx+0x90],edx
   140020357:	test   BYTE PTR [rcx+0x94],0xc
   14002035e:	je     0x14002039b
   140020360:	lea    rax,[rip+0x2ad11]        # 0x14004b078
   140020367:	mov    rcx,QWORD PTR [rip+0x2ad0a]        # 0x14004b078
   14002036e:	cmp    rcx,rax
   140020371:	je     0x140020521
   140020377:	test   BYTE PTR [rcx+0x1c],0x4
   14002037b:	je     0x140020521
   140020381:	mov    edx,0x15
   140020386:	lea    r8,[rip+0x1844b]        # 0x1400387d8
   14002038d:	mov    rcx,QWORD PTR [rcx+0x10]
   140020391:	call   0x140001f08
   140020396:	jmp    0x140020521
   14002039b:	xor    esi,esi
   14002039d:	mov    QWORD PTR [rsp+0x50],rsi
   1400203a2:	xor    r15b,r15b
   1400203a5:	cmp    QWORD PTR [rcx+0x98],rsi
   1400203ac:	je     0x14002044a
   1400203b2:	lea    rcx,[rsp+0x68]
   1400203b7:	call   QWORD PTR [rip+0x11e23]        # 0x1400321e0
   1400203bd:	test   eax,eax
   1400203bf:	jne    0x14002041b
   1400203c1:	call   QWORD PTR [rip+0x11ec1]        # 0x140032288
   1400203c7:	mov    ebx,eax
   1400203c9:	test   BYTE PTR [rip+0x2e2bc],0x1        # 0x14004e68c
   1400203d0:	je     0x1400203ec
   1400203d2:	lea    edx,[rsi+0xa]
   1400203d5:	mov    DWORD PTR [rsp+0x20],eax
   1400203d9:	lea    r8,[rip+0x18a10]        # 0x140038df0
   1400203e0:	mov    rcx,QWORD PTR [rip+0x2e299]        # 0x14004e680
   1400203e7:	call   0x140024690
   1400203ec:	movzx  edx,bx
   1400203ef:	or     edx,0x80070000
   1400203f5:	test   ebx,ebx
   1400203f7:	cmovle edx,ebx
   1400203fa:	lea    rcx,[rsp+0x88]
   140020402:	call   0x140002064
   140020407:	lea    rdx,[rip+0x28d7a]        # 0x140049188
   14002040e:	lea    rcx,[rsp+0x88]
   140020416:	call   0x14002e2da
   14002041b:	mov    rsi,QWORD PTR [rsp+0x68]
   140020420:	mov    QWORD PTR [rsp+0x50],rsi
   140020425:	jmp    0x14002044a
   140020427:	mov    rsi,QWORD PTR [rsp+0x50]
   14002042c:	mov    r15b,BYTE PTR [rsp+0x30]
   140020431:	mov    rdi,QWORD PTR [rsp+0x60]
   140020436:	mov    r12d,DWORD PTR [rsp+0x40]
   14002043b:	mov    rax,QWORD PTR [rsp+0x48]
   140020440:	mov    QWORD PTR [rsp+0x58],rax
   140020445:	mov    r14d,DWORD PTR [rsp+0x38]
   14002044a:	mov    r13,QWORD PTR [rdi+0x28]
   14002044e:	test   r13,r13
   140020451:	je     0x14002047d
   140020453:	cmp    BYTE PTR [rdi+0xe0],0x0
   14002045a:	jne    0x14002047d
   14002045c:	mov    rax,QWORD PTR [r13+0x0]
   140020460:	mov    rbx,QWORD PTR [rax+0x10]
   140020464:	mov    rcx,rbx
   140020467:	call   QWORD PTR [rip+0x1223b]        # 0x1400326a8
   14002046d:	mov    r9d,r14d
   140020470:	mov    r8,QWORD PTR [rsp+0x58]
   140020475:	mov    edx,r12d
   140020478:	mov    rcx,r13
   14002047b:	call   rbx
   14002047d:	cmp    QWORD PTR [rdi+0x98],0x0
   140020485:	je     0x140020521
   14002048b:	test   r15b,r15b
   14002048e:	jne    0x140020521
   140020494:	lea    rcx,[rsp+0x48]
   140020499:	call   QWORD PTR [rip+0x11d41]        # 0x1400321e0
   14002049f:	test   eax,eax
   1400204a1:	jne    0x1400204ff
   1400204a3:	call   QWORD PTR [rip+0x11ddf]        # 0x140032288
   1400204a9:	mov    ebx,eax
   1400204ab:	test   BYTE PTR [rip+0x2e1da],0x1        # 0x14004e68c
   1400204b2:	je     0x1400204d0
   1400204b4:	mov    edx,0xb
   1400204b9:	mov    DWORD PTR [rsp+0x20],eax
   1400204bd:	lea    r8,[rip+0x1892c]        # 0x140038df0
   1400204c4:	mov    rcx,QWORD PTR [rip+0x2e1b5]        # 0x14004e680
   1400204cb:	call   0x140024690
   1400204d0:	movzx  edx,bx
   1400204d3:	or     edx,0x80070000
   1400204d9:	test   ebx,ebx
   1400204db:	cmovle edx,ebx
   1400204de:	lea    rcx,[rsp+0xb0]
   1400204e6:	call   0x140002064
   1400204eb:	lea    rdx,[rip+0x28c96]        # 0x140049188
   1400204f2:	lea    rcx,[rsp+0xb0]
   1400204fa:	call   0x14002e2da
   1400204ff:	mov    edx,DWORD PTR [rsp+0x48]
   140020503:	sub    edx,esi
   140020505:	mov    rcx,QWORD PTR [rdi+0x98]
   14002050c:	call   0x140024c68
   140020511:	mov    edx,r14d
   140020514:	mov    rcx,QWORD PTR [rdi+0x98]
   14002051b:	call   0x140024cc8
   140020520:	nop
   140020521:	mov    rcx,QWORD PTR [rsp+0xd8]
   140020529:	xor    rcx,rsp
   14002052c:	call   0x14002dd00
   140020531:	add    rsp,0xe0
   140020538:	pop    r15
   14002053a:	pop    r14
   14002053c:	pop    r13
   14002053e:	pop    r12
   140020540:	pop    rdi
   140020541:	pop    rsi
   140020542:	pop    rbx
   140020543:	ret    
   140020544:	int3   
   140020545:	int3   
   140020546:	int3   
   140020547:	int3   
   140020548:	int3   
   140020549:	int3   
   14002054a:	int3   
   14002054b:	int3   
   14002054c:	mov    QWORD PTR [rsp+0x8],rbx
   140020551:	mov    QWORD PTR [rsp+0x10],rbp
   140020556:	mov    QWORD PTR [rsp+0x18],rsi
   14002055b:	push   rdi
   14002055c:	sub    rsp,0x20
   140020560:	test   BYTE PTR [rcx+0x94],0xc
   140020567:	mov    esi,r8d
   14002056a:	mov    ebp,edx
   14002056c:	je     0x14002059e
   14002056e:	mov    rcx,QWORD PTR [rip+0x2ab03]        # 0x14004b078
   140020575:	lea    rax,[rip+0x2aafc]        # 0x14004b078
   14002057c:	cmp    rcx,rax
   14002057f:	je     0x1400205c1
   140020581:	test   BYTE PTR [rcx+0x1c],0x4
   140020585:	je     0x1400205c1
   140020587:	mov    rcx,QWORD PTR [rcx+0x10]
   14002058b:	lea    r8,[rip+0x18246]        # 0x1400387d8
   140020592:	mov    edx,0x19
   140020597:	call   0x140001f08
   14002059c:	jmp    0x1400205c1
   14002059e:	mov    rdi,QWORD PTR [rcx+0x28]
   1400205a2:	test   rdi,rdi
   1400205a5:	je     0x1400205c1
   1400205a7:	mov    rax,QWORD PTR [rdi]
   1400205aa:	mov    rbx,QWORD PTR [rax+0x20]
   1400205ae:	mov    rcx,rbx
   1400205b1:	call   QWORD PTR [rip+0x120f1]        # 0x1400326a8
   1400205b7:	mov    r8d,esi
   1400205ba:	mov    edx,ebp
   1400205bc:	mov    rcx,rdi
   1400205bf:	call   rbx
   1400205c1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400205c6:	mov    rbp,QWORD PTR [rsp+0x38]
   1400205cb:	mov    rsi,QWORD PTR [rsp+0x40]
   1400205d0:	add    rsp,0x20
   1400205d4:	pop    rdi
   1400205d5:	ret    
   1400205d6:	int3   
   1400205d7:	int3   
   1400205d8:	int3   
   1400205d9:	int3   
   1400205da:	int3   
   1400205db:	int3   
   1400205dc:	int3   
   1400205dd:	int3   
   1400205de:	int3   
   1400205df:	int3   
   1400205e0:	rex push rsi
   1400205e2:	push   rdi
   1400205e3:	push   r14
   1400205e5:	sub    rsp,0x40
   1400205e9:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   1400205f2:	mov    QWORD PTR [rsp+0x70],rbx
   1400205f7:	movsxd r14,edx
   1400205fa:	mov    rdi,rcx
   1400205fd:	lea    rsi,[rcx+0xb8]
   140020604:	mov    QWORD PTR [rsp+0x60],rsi
   140020609:	mov    QWORD PTR [rsp+0x78],rsi
   14002060e:	mov    rcx,rsi
   140020611:	call   QWORD PTR [rip+0x11af1]        # 0x140032108
   140020617:	nop
   140020618:	mov    r8d,DWORD PTR [rdi+r14*4+0xa0]
   140020620:	test   r8d,r8d
   140020623:	je     0x14002069d
   140020625:	mov    edx,r14d
   140020628:	mov    rcx,rdi
   14002062b:	call   0x14002054c
   140020630:	mov    rcx,QWORD PTR [rdi+0x98]
   140020637:	test   rcx,rcx
   14002063a:	je     0x140020649
   14002063c:	mov    edx,DWORD PTR [rdi+r14*4+0xa0]
   140020644:	call   0x140024a28
   140020649:	mov    rcx,QWORD PTR [rdi+0x98]
   140020650:	test   rcx,rcx
   140020653:	je     0x140020662
   140020655:	mov    edx,DWORD PTR [rdi+r14*4+0xa0]
   14002065d:	call   0x140024a88
   140020662:	mov    rcx,QWORD PTR [rdi+0x98]
   140020669:	test   rcx,rcx
   14002066c:	je     0x14002067b
   14002066e:	mov    edx,DWORD PTR [rdi+r14*4+0xa0]
   140020676:	call   0x140024968
   14002067b:	mov    rcx,QWORD PTR [rdi+0x98]
   140020682:	test   rcx,rcx
   140020685:	je     0x140020694
   140020687:	mov    edx,DWORD PTR [rdi+r14*4+0xa0]
   14002068f:	call   0x1400249c8
   140020694:	and    DWORD PTR [rdi+r14*4+0xa0],0x0
   14002069d:	lea    rax,[r14+r14*2]
   1400206a1:	add    rax,rax
   1400206a4:	mov    DWORD PTR [rdi+rax*8+0x58],0x1
   1400206ac:	mov    rdi,QWORD PTR [rdi+0x20]
   1400206b0:	mov    rax,QWORD PTR [rdi]
   1400206b3:	mov    rbx,QWORD PTR [rax+0x30]
   1400206b7:	mov    rcx,rbx
   1400206ba:	call   QWORD PTR [rip+0x11fe8]        # 0x1400326a8
   1400206c0:	mov    edx,r14d
   1400206c3:	mov    rcx,rdi
   1400206c6:	call   rbx
   1400206c8:	mov    ebx,eax
   1400206ca:	test   eax,eax
   1400206cc:	jns    0x140020704
   1400206ce:	lea    rax,[rip+0x2a9a3]        # 0x14004b078
   1400206d5:	mov    rcx,QWORD PTR [rip+0x2a99c]        # 0x14004b078
   1400206dc:	cmp    rcx,rax
   1400206df:	je     0x140020704
   1400206e1:	test   BYTE PTR [rcx+0x1c],0x2
   1400206e5:	je     0x140020704
   1400206e7:	mov    edx,0x1a
   1400206ec:	mov    DWORD PTR [rsp+0x20],ebx
   1400206f0:	mov    r9d,r14d
   1400206f3:	lea    r8,[rip+0x180de]        # 0x1400387d8
   1400206fa:	mov    rcx,QWORD PTR [rcx+0x10]
   1400206fe:	call   0x140015b2c
   140020703:	nop
   140020704:	mov    rcx,rsi
   140020707:	call   QWORD PTR [rip+0x119eb]        # 0x1400320f8
   14002070d:	mov    eax,ebx
   14002070f:	jmp    0x140020720
   140020711:	mov    rcx,QWORD PTR [rsp+0x60]
   140020716:	call   QWORD PTR [rip+0x119dc]        # 0x1400320f8
   14002071c:	mov    eax,DWORD PTR [rsp+0x68]
   140020720:	mov    rbx,QWORD PTR [rsp+0x70]
   140020725:	add    rsp,0x40
   140020729:	pop    r14
   14002072b:	pop    rdi
   14002072c:	pop    rsi
   14002072d:	ret    
   14002072e:	int3   
   14002072f:	int3   
   140020730:	int3   
   140020731:	int3   
   140020732:	int3   
   140020733:	int3   
   140020734:	int3   
   140020735:	int3   
   140020736:	int3   
   140020737:	int3   
   140020738:	int3   
   140020739:	int3   
   14002073a:	int3   
   14002073b:	int3   
   14002073c:	int3   
   14002073d:	int3   
   14002073e:	int3   
   14002073f:	int3   
   140020740:	rex push rsi
   140020742:	push   rdi
   140020743:	push   r14
   140020745:	sub    rsp,0x30
   140020749:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140020752:	mov    QWORD PTR [rsp+0x60],rbx
   140020757:	mov    rsi,rcx
   14002075a:	lea    r14,[rcx+0xb8]
   140020761:	mov    QWORD PTR [rsp+0x58],r14
   140020766:	mov    QWORD PTR [rsp+0x50],r14
   14002076b:	mov    rcx,r14
   14002076e:	call   QWORD PTR [rip+0x11994]        # 0x140032108
   140020774:	nop
   140020775:	mov    rcx,QWORD PTR [rsi+0x98]
   14002077c:	test   rcx,rcx
   14002077f:	je     0x140020786
   140020781:	call   0x140024b48
   140020786:	cmp    QWORD PTR [rsi+0x20],0x0
   14002078b:	jne    0x1400207bd
   14002078d:	lea    rbx,[rip+0x2a8e4]        # 0x14004b078
   140020794:	mov    rcx,QWORD PTR [rip+0x2a8dd]        # 0x14004b078
   14002079b:	cmp    rcx,rbx
   14002079e:	je     0x1400207cb
   1400207a0:	test   BYTE PTR [rcx+0x1c],0x2
   1400207a4:	je     0x1400207cb
   1400207a6:	mov    edx,0x1c
   1400207ab:	lea    r8,[rip+0x18026]        # 0x1400387d8
   1400207b2:	mov    rcx,QWORD PTR [rcx+0x10]
   1400207b6:	call   0x140001f08
   1400207bb:	jmp    0x1400207c4
   1400207bd:	lea    rbx,[rip+0x2a8b4]        # 0x14004b078
   1400207c4:	mov    rcx,QWORD PTR [rip+0x2a8ad]        # 0x14004b078
   1400207cb:	mov    rdi,QWORD PTR [rsi+0x28]
   1400207cf:	test   rdi,rdi
   1400207d2:	je     0x140020827
   1400207d4:	mov    rax,QWORD PTR [rdi]
   1400207d7:	mov    rbx,QWORD PTR [rax+0x30]
   1400207db:	mov    rcx,rbx
   1400207de:	call   QWORD PTR [rip+0x11ec4]        # 0x1400326a8
   1400207e4:	mov    rcx,rdi
   1400207e7:	call   rbx
   1400207e9:	mov    rdi,QWORD PTR [rsi+0x28]
   1400207ed:	mov    rax,QWORD PTR [rdi]
   1400207f0:	mov    rbx,QWORD PTR [rax+0x38]
   1400207f4:	mov    rcx,rbx
   1400207f7:	call   QWORD PTR [rip+0x11eab]        # 0x1400326a8
   1400207fd:	mov    rcx,rdi
   140020800:	call   rbx
   140020802:	mov    rdi,QWORD PTR [rsi+0x28]
   140020806:	test   rdi,rdi
   140020809:	je     0x140020847
   14002080b:	mov    rax,QWORD PTR [rdi]
   14002080e:	mov    rbx,QWORD PTR [rax+0x8]
   140020812:	mov    rcx,rbx
   140020815:	call   QWORD PTR [rip+0x11e8d]        # 0x1400326a8
   14002081b:	mov    rcx,rdi
   14002081e:	call   rbx
   140020820:	and    QWORD PTR [rsi+0x28],0x0
   140020825:	jmp    0x140020847
   140020827:	cmp    rcx,rbx
   14002082a:	je     0x140020847
   14002082c:	test   BYTE PTR [rcx+0x1c],0x2
   140020830:	je     0x140020847
   140020832:	mov    edx,0x1d
   140020837:	lea    r8,[rip+0x17f9a]        # 0x1400387d8
   14002083e:	mov    rcx,QWORD PTR [rcx+0x10]
   140020842:	call   0x140001f08
   140020847:	and    QWORD PTR [rsi+0x20],0x0
   14002084c:	mov    rcx,r14
   14002084f:	call   QWORD PTR [rip+0x118a3]        # 0x1400320f8
   140020855:	xor    eax,eax
   140020857:	jmp    0x140020868
   140020859:	mov    rcx,QWORD PTR [rsp+0x58]
   14002085e:	call   QWORD PTR [rip+0x11894]        # 0x1400320f8
   140020864:	mov    eax,DWORD PTR [rsp+0x50]
   140020868:	mov    rbx,QWORD PTR [rsp+0x60]
   14002086d:	add    rsp,0x30
   140020871:	pop    r14
   140020873:	pop    rdi
   140020874:	pop    rsi
   140020875:	ret    
   140020876:	int3   
   140020877:	int3   
   140020878:	int3   
   140020879:	int3   
   14002087a:	int3   
   14002087b:	int3   
   14002087c:	mov    r11,rsp
   14002087f:	mov    QWORD PTR [r11+0x8],rcx
   140020883:	push   rdi
   140020884:	sub    rsp,0x40
   140020888:	mov    QWORD PTR [r11-0x18],0xfffffffffffffffe
   140020890:	mov    QWORD PTR [r11+0x10],rbx
   140020894:	mov    QWORD PTR [r11+0x18],rsi
   140020898:	mov    rbx,rdx
   14002089b:	mov    rdi,rcx
   14002089e:	lea    rax,[rip+0x14263]        # 0x140034b08
   1400208a5:	mov    QWORD PTR [rcx],rax
   1400208a8:	lea    rax,[rip+0x14221]        # 0x140034ad0
   1400208af:	mov    QWORD PTR [rcx+0x8],rax
   1400208b3:	and    DWORD PTR [rcx+0x10],0x0
   1400208b7:	and    QWORD PTR [rcx+0x28],0x0
   1400208bc:	add    rcx,0x30
   1400208c0:	lea    rax,[rip+0xfffffffffffe3079]        # 0x140003940
   1400208c7:	mov    QWORD PTR [r11-0x28],rax
   1400208cb:	lea    r9,[rip+0xae]        # 0x140020980
   1400208d2:	mov    esi,0x2
   1400208d7:	mov    r8d,esi
   1400208da:	lea    edx,[rsi+0x2e]
   1400208dd:	call   0x14002e258
   1400208e2:	nop
   1400208e3:	and    BYTE PTR [rdi+0x94],0xf0
   1400208ea:	and    QWORD PTR [rdi+0x98],0x0
   1400208f2:	lea    rcx,[rdi+0xb8]
   1400208f9:	call   0x140003950
   1400208fe:	mov    BYTE PTR [rdi+0xe0],0x0
   140020905:	mov    QWORD PTR [rdi+0x20],rbx
   140020909:	lea    rax,[rdi+0x58]
   14002090d:	and    DWORD PTR [rax+0x4],0x0
   140020911:	and    DWORD PTR [rax],0x0
   140020914:	lea    rax,[rax+0x30]
   140020918:	sub    rsi,0x1
   14002091c:	jne    0x14002090d
   14002091e:	mov    rcx,QWORD PTR [rdi+0x98]
   140020925:	test   rcx,rcx
   140020928:	je     0x14002092f
   14002092a:	call   0x140024ae8
   14002092f:	mov    rcx,QWORD PTR [rdi+0x98]
   140020936:	test   rcx,rcx
   140020939:	je     0x140020940
   14002093b:	call   0x140024ba8
   140020940:	and    DWORD PTR [rdi+0xa4],0x0
   140020947:	and    DWORD PTR [rdi+0xa0],0x0
   14002094e:	and    QWORD PTR [rdi+0xb0],0x0
   140020956:	and    QWORD PTR [rdi+0xa8],0x0
   14002095e:	mov    rax,rdi
   140020961:	mov    rbx,QWORD PTR [rsp+0x58]
   140020966:	mov    rsi,QWORD PTR [rsp+0x60]
   14002096b:	add    rsp,0x40
   14002096f:	pop    rdi
   140020970:	ret    
   140020971:	int3   
   140020972:	int3   
   140020973:	int3   
   140020974:	int3   
   140020975:	int3   
   140020976:	int3   
   140020977:	int3   
   140020978:	int3   
   140020979:	int3   
   14002097a:	int3   
   14002097b:	int3   
   14002097c:	int3   
   14002097d:	int3   
   14002097e:	int3   
   14002097f:	int3   
   140020980:	rex push rbx
   140020982:	sub    rsp,0x20
   140020986:	mov    rbx,rcx
   140020989:	call   0x140003950
   14002098e:	mov    rax,rbx
   140020991:	add    rsp,0x20
   140020995:	pop    rbx
   140020996:	ret    
   140020997:	int3   
   140020998:	int3   
   140020999:	int3   
   14002099a:	int3   
   14002099b:	int3   
   14002099c:	int3   
   14002099d:	int3   
   14002099e:	int3   
   14002099f:	int3   
   1400209a0:	mov    QWORD PTR [rsp+0x18],r8
   1400209a5:	push   rbp
   1400209a6:	push   rsi
   1400209a7:	push   rdi
   1400209a8:	push   r12
   1400209aa:	push   r13
   1400209ac:	push   r14
   1400209ae:	push   r15
   1400209b0:	sub    rsp,0x30
   1400209b4:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400209bd:	mov    QWORD PTR [rsp+0x70],rbx
   1400209c2:	mov    r15,rdx
   1400209c5:	mov    r13,rcx
   1400209c8:	mov    r12,QWORD PTR [rsp+0x90]
   1400209d0:	and    QWORD PTR [r12],0x0
   1400209d5:	test   rdx,rdx
   1400209d8:	jne    0x140020a12
   1400209da:	lea    rax,[rip+0x2a697]        # 0x14004b078
   1400209e1:	mov    rcx,QWORD PTR [rip+0x2a690]        # 0x14004b078
   1400209e8:	cmp    rcx,rax
   1400209eb:	je     0x140020a07
   1400209ed:	test   BYTE PTR [rcx+0x1c],0x1
   1400209f1:	je     0x140020a07
   1400209f3:	lea    edx,[r15+0x1f]
   1400209f7:	lea    r8,[rip+0x17dda]        # 0x1400387d8
   1400209fe:	mov    rcx,QWORD PTR [rcx+0x10]
   140020a02:	call   0x140001f08
   140020a07:	mov    ecx,0x80070057
   140020a0c:	call   0x140029d64
   140020a11:	int3   
   140020a12:	mov    ecx,0xe8
   140020a17:	call   0x140023f10
   140020a1c:	mov    QWORD PTR [rsp+0x80],rax
   140020a24:	mov    rdx,r15
   140020a27:	mov    rcx,rax
   140020a2a:	call   0x14002087c
   140020a2f:	mov    r14,rax
   140020a32:	test   rax,rax
   140020a35:	je     0x140020a3b
   140020a37:	lock inc DWORD PTR [rax+0x10]
   140020a3b:	mov    rbx,rax
   140020a3e:	mov    QWORD PTR [rsp+0x80],rax
   140020a46:	mov    r9,QWORD PTR [r15+0x20]
   140020a4a:	mov    QWORD PTR [rax+0x18],r9
   140020a4e:	lea    rax,[rip+0x2a623]        # 0x14004b078
   140020a55:	mov    rcx,QWORD PTR [rip+0x2a61c]        # 0x14004b078
   140020a5c:	cmp    rcx,rax
   140020a5f:	je     0x140020a7c
   140020a61:	test   BYTE PTR [rcx+0x1c],0x10
   140020a65:	je     0x140020a7c
   140020a67:	mov    edx,0x20
   140020a6c:	lea    r8,[rip+0x17d65]        # 0x1400387d8
   140020a73:	mov    rcx,QWORD PTR [rcx+0x10]
   140020a77:	call   0x14001ad20
   140020a7c:	mov    rsi,QWORD PTR [r13+0x0]
   140020a80:	mov    rax,QWORD PTR [r15]
   140020a83:	mov    rdi,QWORD PTR [rax+0x50]
   140020a87:	mov    rcx,rdi
   140020a8a:	call   QWORD PTR [rip+0x11c18]        # 0x1400326a8
   140020a90:	mov    rcx,r15
   140020a93:	call   rdi
   140020a95:	mov    dil,al
   140020a98:	mov    rcx,QWORD PTR [rsi+0x10]
   140020a9c:	call   QWORD PTR [rip+0x11c06]        # 0x1400326a8
   140020aa2:	mov    r8b,dil
   140020aa5:	lea    rdx,[r14+0x8]
   140020aa9:	mov    rcx,r13
   140020aac:	call   QWORD PTR [rsi+0x10]
   140020aaf:	mov    rsi,rax
   140020ab2:	test   rax,rax
   140020ab5:	je     0x140020ae7
   140020ab7:	mov    rdi,QWORD PTR [r14+0x28]
   140020abb:	test   rdi,rdi
   140020abe:	je     0x140020ad5
   140020ac0:	mov    rdx,QWORD PTR [rdi]
   140020ac3:	mov    rbx,QWORD PTR [rdx+0x8]
   140020ac7:	mov    rcx,rbx
   140020aca:	call   QWORD PTR [rip+0x11bd8]        # 0x1400326a8
   140020ad0:	mov    rcx,rdi
   140020ad3:	call   rbx
   140020ad5:	mov    QWORD PTR [r14+0x28],rsi
   140020ad9:	xor    ebx,ebx
   140020adb:	mov    QWORD PTR [rsp+0x80],rbx
   140020ae3:	mov    QWORD PTR [r12],r14
   140020ae7:	test   rbx,rbx
   140020aea:	je     0x140020b1b
   140020aec:	or     eax,0xffffffff
   140020aef:	lock xadd DWORD PTR [rbx+0x10],eax
   140020af4:	cmp    eax,0x1
   140020af7:	jne    0x140020b1b
   140020af9:	mov    rbx,QWORD PTR [rsp+0x80]
   140020b01:	mov    rax,QWORD PTR [rbx]
   140020b04:	mov    rdi,QWORD PTR [rax+0x28]
   140020b08:	mov    rcx,rdi
   140020b0b:	call   QWORD PTR [rip+0x11b97]        # 0x1400326a8
   140020b11:	mov    edx,0x1
   140020b16:	mov    rcx,rbx
   140020b19:	call   rdi
   140020b1b:	mov    rbx,QWORD PTR [rsp+0x70]
   140020b20:	add    rsp,0x30
   140020b24:	pop    r15
   140020b26:	pop    r14
   140020b28:	pop    r13
   140020b2a:	pop    r12
   140020b2c:	pop    rdi
   140020b2d:	pop    rsi
   140020b2e:	pop    rbp
   140020b2f:	ret    
   140020b30:	int3   
   140020b31:	int3   
   140020b32:	int3   
   140020b33:	int3   
   140020b34:	int3   
   140020b35:	int3   
   140020b36:	int3   
   140020b37:	int3   
   140020b38:	int3   
   140020b39:	int3   
   140020b3a:	int3   
   140020b3b:	int3   
   140020b3c:	int3   
   140020b3d:	int3   
   140020b3e:	int3   
   140020b3f:	int3   
   140020b40:	mov    r11,rsp
   140020b43:	push   rdi
   140020b44:	push   r14
   140020b46:	push   r15
   140020b48:	sub    rsp,0x80
   140020b4f:	mov    QWORD PTR [r11-0x60],0xfffffffffffffffe
   140020b57:	mov    QWORD PTR [r11+0x10],rbx
   140020b5b:	mov    QWORD PTR [r11+0x18],rsi
   140020b5f:	mov    rax,QWORD PTR [rip+0x2a4ba]        # 0x14004b020
   140020b66:	xor    rax,rsp
   140020b69:	mov    QWORD PTR [rsp+0x78],rax
   140020b6e:	mov    ebx,edx
   140020b70:	mov    rdi,rcx
   140020b73:	lea    rsi,[rcx+0xb0]
   140020b7a:	mov    QWORD PTR [rsp+0x30],rsi
   140020b7f:	mov    QWORD PTR [r11-0x78],rsi
   140020b83:	mov    rcx,rsi
   140020b86:	call   QWORD PTR [rip+0x1157c]        # 0x140032108
   140020b8c:	nop
   140020b8d:	test   BYTE PTR [rip+0x2f42c],0x1        # 0x14004ffc0
   140020b94:	je     0x140020baa
   140020b96:	lea    r8,[rip+0x13873]        # 0x140034410
   140020b9d:	lea    rdx,[rip+0x1384c]        # 0x1400343f0
   140020ba4:	call   0x140003818
   140020ba9:	nop
   140020baa:	cmp    QWORD PTR [rdi+0x18],0x0
   140020baf:	jne    0x140020bf0
   140020bb1:	lea    rax,[rip+0x2a4c0]        # 0x14004b078
   140020bb8:	mov    rcx,QWORD PTR [rip+0x2a4b9]        # 0x14004b078
   140020bbf:	cmp    rcx,rax
   140020bc2:	je     0x140020be0
   140020bc4:	test   BYTE PTR [rcx+0x1c],0x2
   140020bc8:	je     0x140020be0
   140020bca:	mov    edx,0x22
   140020bcf:	lea    r8,[rip+0x17c02]        # 0x1400387d8
   140020bd6:	mov    rcx,QWORD PTR [rcx+0x10]
   140020bda:	call   0x140001f08
   140020bdf:	nop
   140020be0:	mov    rcx,rsi
   140020be3:	call   QWORD PTR [rip+0x1150f]        # 0x1400320f8
   140020be9:	xor    eax,eax
   140020beb:	jmp    0x140020cdb
   140020bf0:	lea    r14,[rdi+0x28]
   140020bf4:	mov    QWORD PTR [rsp+0x48],r14
   140020bf9:	mov    rcx,r14
   140020bfc:	call   QWORD PTR [rip+0x11506]        # 0x140032108
   140020c02:	nop
   140020c03:	lea    r15,[rdi+0x58]
   140020c07:	mov    QWORD PTR [rsp+0x40],r15
   140020c0c:	mov    rcx,r15
   140020c0f:	call   QWORD PTR [rip+0x114f3]        # 0x140032108
   140020c15:	nop
   140020c16:	test   ebx,ebx
   140020c18:	je     0x140020cab
   140020c1e:	mov    rcx,QWORD PTR [rdi+0x90]
   140020c25:	test   rcx,rcx
   140020c28:	je     0x140020c2f
   140020c2a:	call   0x140024c08
   140020c2f:	and    BYTE PTR [rdi+0x8c],0xfd
   140020c36:	or     BYTE PTR [rdi+0x8c],0x1
   140020c3d:	mov    rdi,QWORD PTR [rdi+0x18]
   140020c41:	mov    rax,QWORD PTR [rdi]
   140020c44:	mov    rbx,QWORD PTR [rax+0x38]
   140020c48:	mov    rcx,rbx
   140020c4b:	call   QWORD PTR [rip+0x11a57]        # 0x1400326a8
   140020c51:	mov    rcx,rdi
   140020c54:	call   rbx
   140020c56:	mov    ebx,eax
   140020c58:	test   eax,eax
   140020c5a:	jns    0x140020cab
   140020c5c:	lea    rax,[rip+0x2a415]        # 0x14004b078
   140020c63:	mov    rcx,QWORD PTR [rip+0x2a40e]        # 0x14004b078
   140020c6a:	cmp    rcx,rax
   140020c6d:	je     0x140020c8d
   140020c6f:	test   BYTE PTR [rcx+0x1c],0x1
   140020c73:	je     0x140020c8d
   140020c75:	mov    edx,0x23
   140020c7a:	mov    r9d,ebx
   140020c7d:	lea    r8,[rip+0x17b54]        # 0x1400387d8
   140020c84:	mov    rcx,QWORD PTR [rcx+0x10]
   140020c88:	call   0x140001f70
   140020c8d:	mov    edx,ebx
   140020c8f:	lea    rcx,[rsp+0x50]
   140020c94:	call   0x140002064
   140020c99:	lea    rdx,[rip+0x284e8]        # 0x140049188
   140020ca0:	lea    rcx,[rsp+0x50]
   140020ca5:	call   0x14002e2da
   140020caa:	nop
   140020cab:	mov    rcx,r15
   140020cae:	call   QWORD PTR [rip+0x11444]        # 0x1400320f8
   140020cb4:	nop
   140020cb5:	mov    rcx,r14
   140020cb8:	call   QWORD PTR [rip+0x1143a]        # 0x1400320f8
   140020cbe:	nop
   140020cbf:	mov    rcx,rsi
   140020cc2:	call   QWORD PTR [rip+0x11430]        # 0x1400320f8
   140020cc8:	xor    eax,eax
   140020cca:	jmp    0x140020cdb
   140020ccc:	mov    rcx,QWORD PTR [rsp+0x30]
   140020cd1:	call   QWORD PTR [rip+0x11421]        # 0x1400320f8
   140020cd7:	mov    eax,DWORD PTR [rsp+0x20]
   140020cdb:	mov    rcx,QWORD PTR [rsp+0x78]
   140020ce0:	xor    rcx,rsp
   140020ce3:	call   0x14002dd00
   140020ce8:	lea    r11,[rsp+0x80]
   140020cf0:	mov    rbx,QWORD PTR [r11+0x28]
   140020cf4:	mov    rsi,QWORD PTR [r11+0x30]
   140020cf8:	mov    rsp,r11
   140020cfb:	pop    r15
   140020cfd:	pop    r14
   140020cff:	pop    rdi
   140020d00:	ret    
   140020d01:	int3   
   140020d02:	int3   
   140020d03:	int3   
   140020d04:	int3   
   140020d05:	int3   
   140020d06:	int3   
   140020d07:	int3   
   140020d08:	int3   
   140020d09:	int3   
   140020d0a:	int3   
   140020d0b:	int3   
   140020d0c:	int3   
   140020d0d:	int3   
   140020d0e:	int3   
   140020d0f:	int3   
   140020d10:	rex push rsi
   140020d12:	push   rdi
   140020d13:	push   r14
   140020d15:	sub    rsp,0x30
   140020d19:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140020d22:	mov    QWORD PTR [rsp+0x58],rbx
   140020d27:	mov    r14,rdx
   140020d2a:	mov    rdi,rcx
   140020d2d:	lea    rsi,[rcx+0xb0]
   140020d34:	mov    QWORD PTR [rsp+0x60],rsi
   140020d39:	mov    QWORD PTR [rsp+0x50],rsi
   140020d3e:	mov    rcx,rsi
   140020d41:	call   QWORD PTR [rip+0x113c1]        # 0x140032108
   140020d47:	nop
   140020d48:	cmp    QWORD PTR [rdi+0x18],0x0
   140020d4d:	jne    0x140020d8e
   140020d4f:	lea    rax,[rip+0x2a322]        # 0x14004b078
   140020d56:	mov    rcx,QWORD PTR [rip+0x2a31b]        # 0x14004b078
   140020d5d:	cmp    rcx,rax
   140020d60:	je     0x140020d7e
   140020d62:	test   BYTE PTR [rcx+0x1c],0x2
   140020d66:	je     0x140020d7e
   140020d68:	mov    edx,0x25
   140020d6d:	lea    r8,[rip+0x17a64]        # 0x1400387d8
   140020d74:	mov    rcx,QWORD PTR [rcx+0x10]
   140020d78:	call   0x140001f08
   140020d7d:	nop
   140020d7e:	mov    rcx,rsi
   140020d81:	call   QWORD PTR [rip+0x11371]        # 0x1400320f8
   140020d87:	mov    eax,0x80004005
   140020d8c:	jmp    0x140020dc8
   140020d8e:	mov    rdi,QWORD PTR [rdi+0x18]
   140020d92:	mov    rax,QWORD PTR [rdi]
   140020d95:	mov    rbx,QWORD PTR [rax+0x40]
   140020d99:	mov    rcx,rbx
   140020d9c:	call   QWORD PTR [rip+0x11906]        # 0x1400326a8
   140020da2:	mov    rdx,r14
   140020da5:	mov    rcx,rdi
   140020da8:	call   rbx
   140020daa:	mov    ebx,eax
   140020dac:	mov    rcx,rsi
   140020daf:	call   QWORD PTR [rip+0x11343]        # 0x1400320f8
   140020db5:	mov    eax,ebx
   140020db7:	jmp    0x140020dc8
   140020db9:	mov    rcx,QWORD PTR [rsp+0x60]
   140020dbe:	call   QWORD PTR [rip+0x11334]        # 0x1400320f8
   140020dc4:	mov    eax,DWORD PTR [rsp+0x50]
   140020dc8:	mov    rbx,QWORD PTR [rsp+0x58]
   140020dcd:	add    rsp,0x30
   140020dd1:	pop    r14
   140020dd3:	pop    rdi
   140020dd4:	pop    rsi
   140020dd5:	ret    
   140020dd6:	int3   
   140020dd7:	int3   
   140020dd8:	int3   
   140020dd9:	int3   
   140020dda:	int3   
   140020ddb:	int3   
   140020ddc:	int3   
   140020ddd:	int3   
   140020dde:	int3   
   140020ddf:	int3   
   140020de0:	mov    r11,rsp
   140020de3:	push   rdi
   140020de4:	push   r14
   140020de6:	push   r15
   140020de8:	sub    rsp,0x80
   140020def:	mov    QWORD PTR [r11-0x60],0xfffffffffffffffe
   140020df7:	mov    QWORD PTR [r11+0x10],rbx
   140020dfb:	mov    QWORD PTR [r11+0x18],rsi
   140020dff:	mov    rax,QWORD PTR [rip+0x2a21a]        # 0x14004b020
   140020e06:	xor    rax,rsp
   140020e09:	mov    QWORD PTR [rsp+0x78],rax
   140020e0e:	mov    rdi,rcx
   140020e11:	lea    rsi,[rcx+0xb0]
   140020e18:	mov    QWORD PTR [rsp+0x30],rsi
   140020e1d:	mov    QWORD PTR [r11-0x78],rsi
   140020e21:	mov    rcx,rsi
   140020e24:	call   QWORD PTR [rip+0x112de]        # 0x140032108
   140020e2a:	nop
   140020e2b:	cmp    QWORD PTR [rdi+0x18],0x0
   140020e30:	jne    0x140020e71
   140020e32:	lea    rax,[rip+0x2a23f]        # 0x14004b078
   140020e39:	mov    rcx,QWORD PTR [rip+0x2a238]        # 0x14004b078
   140020e40:	cmp    rcx,rax
   140020e43:	je     0x140020e61
   140020e45:	test   BYTE PTR [rcx+0x1c],0x2
   140020e49:	je     0x140020e61
   140020e4b:	mov    edx,0x27
   140020e50:	lea    r8,[rip+0x17981]        # 0x1400387d8
   140020e57:	mov    rcx,QWORD PTR [rcx+0x10]
   140020e5b:	call   0x140001f08
   140020e60:	nop
   140020e61:	mov    rcx,rsi
   140020e64:	call   QWORD PTR [rip+0x1128e]        # 0x1400320f8
   140020e6a:	xor    eax,eax
   140020e6c:	jmp    0x140020f6e
   140020e71:	lea    r14,[rdi+0x28]
   140020e75:	mov    QWORD PTR [rsp+0x48],r14
   140020e7a:	mov    rcx,r14
   140020e7d:	call   QWORD PTR [rip+0x11285]        # 0x140032108
   140020e83:	nop
   140020e84:	lea    r15,[rdi+0x58]
   140020e88:	mov    QWORD PTR [rsp+0x40],r15
   140020e8d:	mov    rcx,r15
   140020e90:	call   QWORD PTR [rip+0x11272]        # 0x140032108
   140020e96:	nop
   140020e97:	mov    al,BYTE PTR [rdi+0x8c]
   140020e9d:	test   al,0x3
   140020e9f:	jne    0x140020f3e
   140020ea5:	test   al,0xc
   140020ea7:	jne    0x140020f3e
   140020ead:	and    al,0xf7
   140020eaf:	or     al,0x4
   140020eb1:	mov    BYTE PTR [rdi+0x8c],al
   140020eb7:	mov    rdi,QWORD PTR [rdi+0x18]
   140020ebb:	mov    rax,QWORD PTR [rdi]
   140020ebe:	mov    rbx,QWORD PTR [rax+0x48]
   140020ec2:	mov    rcx,rbx
   140020ec5:	call   QWORD PTR [rip+0x117dd]        # 0x1400326a8
   140020ecb:	mov    rcx,rdi
   140020ece:	call   rbx
   140020ed0:	mov    ebx,eax
   140020ed2:	test   eax,eax
   140020ed4:	jns    0x140020f25
   140020ed6:	lea    rax,[rip+0x2a19b]        # 0x14004b078
   140020edd:	mov    rcx,QWORD PTR [rip+0x2a194]        # 0x14004b078
   140020ee4:	cmp    rcx,rax
   140020ee7:	je     0x140020f07
   140020ee9:	test   BYTE PTR [rcx+0x1c],0x1
   140020eed:	je     0x140020f07
   140020eef:	mov    edx,0x28
   140020ef4:	mov    r9d,ebx
   140020ef7:	lea    r8,[rip+0x178da]        # 0x1400387d8
   140020efe:	mov    rcx,QWORD PTR [rcx+0x10]
   140020f02:	call   0x140001f70
   140020f07:	mov    edx,ebx
   140020f09:	lea    rcx,[rsp+0x50]
   140020f0e:	call   0x140002064
   140020f13:	lea    rdx,[rip+0x2826e]        # 0x140049188
   140020f1a:	lea    rcx,[rsp+0x50]
   140020f1f:	call   0x14002e2da
   140020f24:	nop
   140020f25:	mov    rcx,r15
   140020f28:	call   QWORD PTR [rip+0x111ca]        # 0x1400320f8
   140020f2e:	nop
   140020f2f:	mov    rcx,r14
   140020f32:	call   QWORD PTR [rip+0x111c0]        # 0x1400320f8
   140020f38:	nop
   140020f39:	jmp    0x140020e61
   140020f3e:	mov    rcx,r15
   140020f41:	call   QWORD PTR [rip+0x111b1]        # 0x1400320f8
   140020f47:	nop
   140020f48:	mov    rcx,r14
   140020f4b:	call   QWORD PTR [rip+0x111a7]        # 0x1400320f8
   140020f51:	nop
   140020f52:	mov    rcx,rsi
   140020f55:	call   QWORD PTR [rip+0x1119d]        # 0x1400320f8
   140020f5b:	xor    eax,eax
   140020f5d:	jmp    0x140020f6e
   140020f5f:	mov    rcx,QWORD PTR [rsp+0x30]
   140020f64:	call   QWORD PTR [rip+0x1118e]        # 0x1400320f8
   140020f6a:	mov    eax,DWORD PTR [rsp+0x20]
   140020f6e:	mov    rcx,QWORD PTR [rsp+0x78]
   140020f73:	xor    rcx,rsp
   140020f76:	call   0x14002dd00
   140020f7b:	lea    r11,[rsp+0x80]
   140020f83:	mov    rbx,QWORD PTR [r11+0x28]
   140020f87:	mov    rsi,QWORD PTR [r11+0x30]
   140020f8b:	mov    rsp,r11
   140020f8e:	pop    r15
   140020f90:	pop    r14
   140020f92:	pop    rdi
   140020f93:	ret    
   140020f94:	int3   
   140020f95:	int3   
   140020f96:	int3   
   140020f97:	int3   
   140020f98:	int3   
   140020f99:	int3   
   140020f9a:	int3   
   140020f9b:	int3   
   140020f9c:	int3   
   140020f9d:	int3   
   140020f9e:	int3   
   140020f9f:	int3   
   140020fa0:	mov    QWORD PTR [rsp+0x8],rbx
   140020fa5:	push   rdi
   140020fa6:	sub    rsp,0x20
   140020faa:	lea    rdi,[rcx+0xb0]
   140020fb1:	mov    rbx,rcx
   140020fb4:	mov    rcx,rdi
   140020fb7:	call   QWORD PTR [rip+0x1114b]        # 0x140032108
   140020fbd:	mov    rcx,QWORD PTR [rbx+0x90]
   140020fc4:	test   rcx,rcx
   140020fc7:	je     0x140020fce
   140020fc9:	call   0x140024d28
   140020fce:	mov    rcx,QWORD PTR [rip+0x2a0a3]        # 0x14004b078
   140020fd5:	lea    rax,[rip+0x2a09c]        # 0x14004b078
   140020fdc:	cmp    rcx,rax
   140020fdf:	je     0x140020ffc
   140020fe1:	test   BYTE PTR [rcx+0x1c],0x4
   140020fe5:	je     0x140020ffc
   140020fe7:	mov    rcx,QWORD PTR [rcx+0x10]
   140020feb:	lea    r8,[rip+0x177e6]        # 0x1400387d8
   140020ff2:	mov    edx,0x2a
   140020ff7:	call   0x140001f08
   140020ffc:	mov    rcx,rdi
   140020fff:	call   QWORD PTR [rip+0x110f3]        # 0x1400320f8
   140021005:	mov    rbx,QWORD PTR [rsp+0x30]
   14002100a:	xor    eax,eax
   14002100c:	add    rsp,0x20
   140021010:	pop    rdi
   140021011:	ret    
   140021012:	int3   
   140021013:	int3   
   140021014:	int3   
   140021015:	int3   
   140021016:	int3   
   140021017:	int3   
   140021018:	int3   
   140021019:	int3   
   14002101a:	int3   
   14002101b:	int3   
   14002101c:	int3   
   14002101d:	int3   
   14002101e:	int3   
   14002101f:	int3   
   140021020:	sub    rcx,0x8
   140021024:	jmp    0x14001f9e0
   140021029:	int3   
   14002102a:	int3   
   14002102b:	int3   
   14002102c:	int3   
   14002102d:	int3   
   14002102e:	int3   
   14002102f:	int3   
   140021030:	mov    QWORD PTR [rsp+0x8],rbx
   140021035:	push   rdi
   140021036:	sub    rsp,0x20
   14002103a:	lea    rdx,[rcx+0x50]
   14002103e:	mov    rbx,rcx
   140021041:	call   0x140029518
   140021046:	xor    edi,edi
   140021048:	test   eax,eax
   14002104a:	js     0x14002108f
   14002104c:	lea    rdx,[rbx+0x58]
   140021050:	mov    rcx,rbx
   140021053:	call   0x1400294d4
   140021058:	test   eax,eax
   14002105a:	js     0x14002108f
   14002105c:	lea    rdx,[rbx+0x59]
   140021060:	mov    rcx,rbx
   140021063:	call   0x1400294d4
   140021068:	test   eax,eax
   14002106a:	js     0x14002108f
   14002106c:	lea    rdx,[rbx+0x5a]
   140021070:	mov    rcx,rbx
   140021073:	call   0x1400294d4
   140021078:	test   eax,eax
   14002107a:	js     0x14002108f
   14002107c:	lea    rdx,[rbx+0x5b]
   140021080:	mov    rcx,rbx
   140021083:	call   0x1400294d4
   140021088:	test   eax,eax
   14002108a:	cmovs  edi,eax
   14002108d:	mov    eax,edi
   14002108f:	mov    rbx,QWORD PTR [rsp+0x30]
   140021094:	add    rsp,0x20
   140021098:	pop    rdi
   140021099:	ret    
   14002109a:	int3   
   14002109b:	int3   
   14002109c:	int3   
   14002109d:	int3   
   14002109e:	int3   
   14002109f:	int3   
   1400210a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400210a5:	mov    QWORD PTR [rsp+0x10],rbp
   1400210aa:	mov    QWORD PTR [rsp+0x18],rsi
   1400210af:	push   rdi
   1400210b0:	sub    rsp,0x20
   1400210b4:	mov    esi,0x4
   1400210b9:	lea    r9,[rcx+0x50]
   1400210bd:	mov    r8d,esi
   1400210c0:	mov    rbx,rcx
   1400210c3:	lea    ebp,[rsi-0x2]
   1400210c6:	mov    edx,ebp
   1400210c8:	call   0x140029600
   1400210cd:	xor    edi,edi
   1400210cf:	test   eax,eax
   1400210d1:	js     0x140021284
   1400210d7:	lea    rdx,[rbx+0x58]
   1400210db:	mov    rcx,rbx
   1400210de:	call   0x140029518
   1400210e3:	test   eax,eax
   1400210e5:	js     0x140021284
   1400210eb:	lea    r9,[rbx+0x60]
   1400210ef:	mov    r8d,esi
   1400210f2:	mov    edx,ebp
   1400210f4:	mov    rcx,rbx
   1400210f7:	call   0x140029600
   1400210fc:	test   eax,eax
   1400210fe:	js     0x140021284
   140021104:	lea    r9,[rbx+0x64]
   140021108:	mov    r8d,esi
   14002110b:	mov    edx,ebp
   14002110d:	mov    rcx,rbx
   140021110:	call   0x140029600
   140021115:	test   eax,eax
   140021117:	js     0x140021284
   14002111d:	lea    rdx,[rbx+0x68]
   140021121:	mov    rcx,rbx
   140021124:	call   0x140029518
   140021129:	test   eax,eax
   14002112b:	js     0x140021284
   140021131:	lea    r9,[rbx+0x70]
   140021135:	mov    r8d,esi
   140021138:	mov    edx,ebp
   14002113a:	mov    rcx,rbx
   14002113d:	call   0x140029600
   140021142:	test   eax,eax
   140021144:	js     0x140021284
   14002114a:	lea    rdx,[rbx+0x78]
   14002114e:	mov    rcx,rbx
   140021151:	call   0x140029518
   140021156:	test   eax,eax
   140021158:	js     0x140021284
   14002115e:	lea    r9,[rbx+0x80]
   140021165:	mov    r8d,esi
   140021168:	mov    edx,ebp
   14002116a:	mov    rcx,rbx
   14002116d:	call   0x140029600
   140021172:	test   eax,eax
   140021174:	js     0x140021284
   14002117a:	lea    rdx,[rbx+0x88]
   140021181:	mov    rcx,rbx
   140021184:	call   0x140029518
   140021189:	test   eax,eax
   14002118b:	js     0x140021284
   140021191:	lea    rdx,[rbx+0x90]
   140021198:	mov    rcx,rbx
   14002119b:	call   0x140029518
   1400211a0:	test   eax,eax
   1400211a2:	js     0x140021284
   1400211a8:	lea    r9,[rbx+0x98]
   1400211af:	mov    r8d,esi
   1400211b2:	mov    edx,ebp
   1400211b4:	mov    rcx,rbx
   1400211b7:	call   0x140029600
   1400211bc:	test   eax,eax
   1400211be:	js     0x140021284
   1400211c4:	lea    rdx,[rbx+0xa0]
   1400211cb:	mov    rcx,rbx
   1400211ce:	call   0x140029518
   1400211d3:	test   eax,eax
   1400211d5:	js     0x140021284
   1400211db:	lea    rdx,[rbx+0xa8]
   1400211e2:	mov    rcx,rbx
   1400211e5:	call   0x140029518
   1400211ea:	test   eax,eax
   1400211ec:	js     0x140021284
   1400211f2:	lea    r9,[rbx+0xb0]
   1400211f9:	mov    r8d,esi
   1400211fc:	mov    edx,ebp
   1400211fe:	mov    rcx,rbx
   140021201:	call   0x140029600
   140021206:	test   eax,eax
   140021208:	js     0x140021284
   14002120a:	lea    rdx,[rbx+0xb8]
   140021211:	mov    rcx,rbx
   140021214:	call   0x140029518
   140021219:	test   eax,eax
   14002121b:	js     0x140021284
   14002121d:	lea    r9,[rbx+0xc0]
   140021224:	mov    rcx,rbx
   140021227:	lea    edx,[rsi+0x2]
   14002122a:	lea    r8d,[rsi+0x4]
   14002122e:	call   0x140029600
   140021233:	test   eax,eax
   140021235:	js     0x140021284
   140021237:	lea    r9,[rbx+0xc8]
   14002123e:	mov    rcx,rbx
   140021241:	lea    edx,[rsi+0x2]
   140021244:	lea    r8d,[rsi+0x4]
   140021248:	call   0x140029600
   14002124d:	test   eax,eax
   14002124f:	js     0x140021284
   140021251:	lea    r9,[rbx+0xd0]
   140021258:	mov    r8d,esi
   14002125b:	mov    edx,ebp
   14002125d:	mov    rcx,rbx
   140021260:	call   0x140029600
   140021265:	test   eax,eax
   140021267:	js     0x140021284
   140021269:	lea    r9,[rbx+0xd4]
   140021270:	mov    r8d,esi
   140021273:	mov    edx,ebp
   140021275:	mov    rcx,rbx
   140021278:	call   0x140029600
   14002127d:	test   eax,eax
   14002127f:	cmovs  edi,eax
   140021282:	mov    eax,edi
   140021284:	mov    rbx,QWORD PTR [rsp+0x30]
   140021289:	mov    rbp,QWORD PTR [rsp+0x38]
   14002128e:	mov    rsi,QWORD PTR [rsp+0x40]
   140021293:	add    rsp,0x20
   140021297:	pop    rdi
   140021298:	ret    
   140021299:	int3   
   14002129a:	int3   
   14002129b:	int3   
   14002129c:	int3   
   14002129d:	int3   
   14002129e:	int3   
   14002129f:	int3   
   1400212a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400212a5:	mov    QWORD PTR [rsp+0x10],rbp
   1400212aa:	mov    QWORD PTR [rsp+0x18],rsi
   1400212af:	push   rdi
   1400212b0:	sub    rsp,0x20
   1400212b4:	mov    esi,0x8
   1400212b9:	lea    r9,[rcx+0x50]
   1400212bd:	mov    r8d,esi
   1400212c0:	mov    rbx,rcx
   1400212c3:	lea    ebp,[rsi-0x2]
   1400212c6:	mov    edx,ebp
   1400212c8:	call   0x140029600
   1400212cd:	xor    edi,edi
   1400212cf:	test   eax,eax
   1400212d1:	js     0x14002132a
   1400212d3:	lea    r9,[rbx+0x58]
   1400212d7:	mov    r8d,esi
   1400212da:	mov    edx,ebp
   1400212dc:	mov    rcx,rbx
   1400212df:	call   0x140029600
   1400212e4:	test   eax,eax
   1400212e6:	js     0x14002132a
   1400212e8:	lea    r9,[rbx+0x60]
   1400212ec:	mov    r8d,esi
   1400212ef:	mov    edx,ebp
   1400212f1:	mov    rcx,rbx
   1400212f4:	call   0x140029600
   1400212f9:	test   eax,eax
   1400212fb:	js     0x14002132a
   1400212fd:	lea    r9,[rbx+0x68]
   140021301:	mov    r8d,esi
   140021304:	mov    edx,ebp
   140021306:	mov    rcx,rbx
   140021309:	call   0x140029600
   14002130e:	test   eax,eax
   140021310:	js     0x14002132a
   140021312:	lea    r9,[rbx+0x70]
   140021316:	mov    r8d,esi
   140021319:	mov    edx,ebp
   14002131b:	mov    rcx,rbx
   14002131e:	call   0x140029600
   140021323:	test   eax,eax
   140021325:	cmovs  edi,eax
   140021328:	mov    eax,edi
   14002132a:	mov    rbx,QWORD PTR [rsp+0x30]
   14002132f:	mov    rbp,QWORD PTR [rsp+0x38]
   140021334:	mov    rsi,QWORD PTR [rsp+0x40]
   140021339:	add    rsp,0x20
   14002133d:	pop    rdi
   14002133e:	ret    
   14002133f:	int3   
   140021340:	int3   
   140021341:	int3   
   140021342:	int3   
   140021343:	int3   
   140021344:	int3   
   140021345:	int3   
   140021346:	int3   
   140021347:	int3   
   140021348:	int3   
   140021349:	int3   
   14002134a:	int3   
   14002134b:	int3   
   14002134c:	int3   
   14002134d:	int3   
   14002134e:	int3   
   14002134f:	int3   
   140021350:	mov    QWORD PTR [rsp+0x8],rbx
   140021355:	push   rdi
   140021356:	sub    rsp,0x20
   14002135a:	mov    edx,0x2
   14002135f:	lea    r9,[rcx+0x50]
   140021363:	mov    rbx,rcx
   140021366:	lea    r8d,[rdx+0x2]
   14002136a:	call   0x140029600
   14002136f:	xor    edi,edi
   140021371:	test   eax,eax
   140021373:	js     0x14002138c
   140021375:	lea    r8,[rbx+0x58]
   140021379:	mov    rcx,rbx
   14002137c:	lea    rdx,[rbx+0x60]
   140021380:	call   0x140029598
   140021385:	test   eax,eax
   140021387:	cmovs  edi,eax
   14002138a:	mov    eax,edi
   14002138c:	mov    rbx,QWORD PTR [rsp+0x30]
   140021391:	add    rsp,0x20
   140021395:	pop    rdi
   140021396:	ret    
   140021397:	int3   
   140021398:	int3   
   140021399:	int3   
   14002139a:	int3   
   14002139b:	int3   
   14002139c:	int3   
   14002139d:	int3   
   14002139e:	int3   
   14002139f:	int3   
   1400213a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400213a5:	push   rdi
   1400213a6:	sub    rsp,0x20
   1400213aa:	mov    edx,0x6
   1400213af:	lea    r9,[rcx+0x50]
   1400213b3:	mov    rdi,rcx
   1400213b6:	lea    r8d,[rdx+0x2]
   1400213ba:	call   0x140029600
   1400213bf:	xor    ebx,ebx
   1400213c1:	test   eax,eax
   1400213c3:	js     0x1400213df
   1400213c5:	lea    r9,[rdi+0x58]
   1400213c9:	mov    rcx,rdi
   1400213cc:	lea    edx,[rbx+0x6]
   1400213cf:	lea    r8d,[rbx+0x8]
   1400213d3:	call   0x140029600
   1400213d8:	test   eax,eax
   1400213da:	cmovs  ebx,eax
   1400213dd:	mov    eax,ebx
   1400213df:	mov    rbx,QWORD PTR [rsp+0x30]
   1400213e4:	add    rsp,0x20
   1400213e8:	pop    rdi
   1400213e9:	ret    
   1400213ea:	int3   
   1400213eb:	int3   
   1400213ec:	int3   
   1400213ed:	int3   
   1400213ee:	int3   
   1400213ef:	int3   
   1400213f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400213f5:	mov    QWORD PTR [rsp+0x10],rbp
   1400213fa:	mov    QWORD PTR [rsp+0x18],rsi
   1400213ff:	push   rdi
   140021400:	push   r14
   140021402:	push   r15
   140021404:	sub    rsp,0x20
   140021408:	mov    edx,0x2
   14002140d:	lea    rbp,[rcx+0x54]
   140021411:	mov    r9,rbp
   140021414:	mov    rbx,rcx
   140021417:	lea    r8d,[rdx+0x2]
   14002141b:	call   0x140029600
   140021420:	test   eax,eax
   140021422:	js     0x14002148c
   140021424:	mov    eax,DWORD PTR [rbp+0x0]
   140021427:	xor    esi,esi
   140021429:	mov    QWORD PTR [rbx+0x17c8],rax
   140021430:	test   rax,rax
   140021433:	je     0x14002148a
   140021435:	lea    rdi,[rbx+0xff8]
   14002143c:	lea    r14,[rdi-0xfa0]
   140021443:	mov    rcx,rbx
   140021446:	lea    r15,[rdi-0x7d0]
   14002144d:	mov    r8,r14
   140021450:	mov    rdx,r15
   140021453:	call   0x140029598
   140021458:	test   eax,eax
   14002145a:	js     0x14002148c
   14002145c:	cmp    BYTE PTR [rbx+0x50],0x0
   140021460:	jne    0x14002147b
   140021462:	mov    rcx,QWORD PTR [r14]
   140021465:	mov    QWORD PTR [rdi],rcx
   140021468:	lea    rax,[rcx+0x20]
   14002146c:	mov    QWORD PTR [rcx+0x10],rax
   140021470:	mov    rax,QWORD PTR [rdi]
   140021473:	mov    ecx,DWORD PTR [rax+0x1c]
   140021476:	cmp    rcx,QWORD PTR [r15]
   140021479:	jne    0x1400214a5
   14002147b:	mov    eax,DWORD PTR [rbp+0x0]
   14002147e:	inc    rsi
   140021481:	add    rdi,0x8
   140021485:	cmp    rsi,rax
   140021488:	jb     0x14002143c
   14002148a:	xor    eax,eax
   14002148c:	mov    rbx,QWORD PTR [rsp+0x40]
   140021491:	mov    rbp,QWORD PTR [rsp+0x48]
   140021496:	mov    rsi,QWORD PTR [rsp+0x50]
   14002149b:	add    rsp,0x20
   14002149f:	pop    r15
   1400214a1:	pop    r14
   1400214a3:	pop    rdi
   1400214a4:	ret    
   1400214a5:	mov    eax,0x80070057
   1400214aa:	jmp    0x14002148c
   1400214ac:	int3   
   1400214ad:	int3   
   1400214ae:	int3   
   1400214af:	int3   
   1400214b0:	int3   
   1400214b1:	int3   
   1400214b2:	int3   
   1400214b3:	int3   
   1400214b4:	int3   
   1400214b5:	int3   
   1400214b6:	int3   
   1400214b7:	int3   
   1400214b8:	int3   
   1400214b9:	int3   
   1400214ba:	int3   
   1400214bb:	int3   
   1400214bc:	int3   
   1400214bd:	int3   
   1400214be:	int3   
   1400214bf:	int3   
   1400214c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400214c5:	push   rdi
   1400214c6:	sub    rsp,0x20
   1400214ca:	mov    ebx,edx
   1400214cc:	mov    rdi,rcx
   1400214cf:	call   0x14002194c
   1400214d4:	test   bl,0x1
   1400214d7:	je     0x1400214e2
   1400214d9:	mov    rcx,rdi
   1400214dc:	call   QWORD PTR [rip+0x110e6]        # 0x1400325c8
   1400214e2:	mov    rax,rdi
   1400214e5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400214ea:	add    rsp,0x20
   1400214ee:	pop    rdi
   1400214ef:	ret    
   1400214f0:	int3   
   1400214f1:	int3   
   1400214f2:	int3   
   1400214f3:	int3   
   1400214f4:	int3   
   1400214f5:	int3   
   1400214f6:	int3   
   1400214f7:	int3   
   1400214f8:	int3   
   1400214f9:	int3   
   1400214fa:	int3   
   1400214fb:	int3   
   1400214fc:	int3   
   1400214fd:	int3   
   1400214fe:	int3   
   1400214ff:	int3   
   140021500:	mov    QWORD PTR [rsp+0x8],rbx
   140021505:	push   rdi
   140021506:	sub    rsp,0x20
   14002150a:	lea    rax,[rip+0x136ef]        # 0x140034c00
   140021511:	mov    ebx,edx
   140021513:	mov    QWORD PTR [rcx],rax
   140021516:	mov    rdi,rcx
   140021519:	call   0x140029248
   14002151e:	test   bl,0x1
   140021521:	je     0x14002152c
   140021523:	mov    rcx,rdi
   140021526:	call   QWORD PTR [rip+0x1109c]        # 0x1400325c8
   14002152c:	mov    rax,rdi
   14002152f:	mov    rbx,QWORD PTR [rsp+0x30]
   140021534:	add    rsp,0x20
   140021538:	pop    rdi
   140021539:	ret    
   14002153a:	int3   
   14002153b:	int3   
   14002153c:	int3   
   14002153d:	int3   
   14002153e:	int3   
   14002153f:	int3   
   140021540:	mov    QWORD PTR [rsp+0x8],rbx
   140021545:	push   rdi
   140021546:	sub    rsp,0x20
   14002154a:	lea    rax,[rip+0x13697]        # 0x140034be8
   140021551:	mov    ebx,edx
   140021553:	mov    QWORD PTR [rcx],rax
   140021556:	mov    rdi,rcx
   140021559:	call   0x140029248
   14002155e:	test   bl,0x1
   140021561:	je     0x14002156c
   140021563:	mov    rcx,rdi
   140021566:	call   QWORD PTR [rip+0x1105c]        # 0x1400325c8
   14002156c:	mov    rax,rdi
   14002156f:	mov    rbx,QWORD PTR [rsp+0x30]
   140021574:	add    rsp,0x20
   140021578:	pop    rdi
   140021579:	ret    
   14002157a:	int3   
   14002157b:	int3   
   14002157c:	int3   
   14002157d:	int3   
   14002157e:	int3   
   14002157f:	int3   
   140021580:	mov    QWORD PTR [rsp+0x8],rbx
   140021585:	push   rdi
   140021586:	sub    rsp,0x20
   14002158a:	lea    rax,[rip+0x1363f]        # 0x140034bd0
   140021591:	mov    ebx,edx
   140021593:	mov    QWORD PTR [rcx],rax
   140021596:	mov    rdi,rcx
   140021599:	call   0x140029248
   14002159e:	test   bl,0x1
   1400215a1:	je     0x1400215ac
   1400215a3:	mov    rcx,rdi
   1400215a6:	call   QWORD PTR [rip+0x1101c]        # 0x1400325c8
   1400215ac:	mov    rax,rdi
   1400215af:	mov    rbx,QWORD PTR [rsp+0x30]
   1400215b4:	add    rsp,0x20
   1400215b8:	pop    rdi
   1400215b9:	ret    
   1400215ba:	int3   
   1400215bb:	int3   
   1400215bc:	int3   
   1400215bd:	int3   
   1400215be:	int3   
   1400215bf:	int3   
   1400215c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400215c5:	push   rdi
   1400215c6:	sub    rsp,0x20
   1400215ca:	lea    rax,[rip+0x135e7]        # 0x140034bb8
   1400215d1:	mov    ebx,edx
   1400215d3:	mov    QWORD PTR [rcx],rax
   1400215d6:	mov    rdi,rcx
   1400215d9:	call   0x140029248
   1400215de:	test   bl,0x1
   1400215e1:	je     0x1400215ec
   1400215e3:	mov    rcx,rdi
   1400215e6:	call   QWORD PTR [rip+0x10fdc]        # 0x1400325c8
   1400215ec:	mov    rax,rdi
   1400215ef:	mov    rbx,QWORD PTR [rsp+0x30]
   1400215f4:	add    rsp,0x20
   1400215f8:	pop    rdi
   1400215f9:	ret    
   1400215fa:	int3   
   1400215fb:	int3   
   1400215fc:	int3   
   1400215fd:	int3   
   1400215fe:	int3   
   1400215ff:	int3   
   140021600:	mov    QWORD PTR [rsp+0x8],rbx
   140021605:	push   rdi
   140021606:	sub    rsp,0x20
   14002160a:	lea    rax,[rip+0x1358f]        # 0x140034ba0
   140021611:	mov    ebx,edx
   140021613:	mov    QWORD PTR [rcx],rax
   140021616:	mov    rdi,rcx
   140021619:	call   0x140029248
   14002161e:	test   bl,0x1
   140021621:	je     0x14002162c
   140021623:	mov    rcx,rdi
   140021626:	call   QWORD PTR [rip+0x10f9c]        # 0x1400325c8
   14002162c:	mov    rax,rdi
   14002162f:	mov    rbx,QWORD PTR [rsp+0x30]
   140021634:	add    rsp,0x20
   140021638:	pop    rdi
   140021639:	ret    
   14002163a:	int3   
   14002163b:	int3   
   14002163c:	int3   
   14002163d:	int3   
   14002163e:	int3   
   14002163f:	int3   
   140021640:	mov    QWORD PTR [rsp+0x8],rbx
   140021645:	push   rdi
   140021646:	sub    rsp,0x20
   14002164a:	lea    rax,[rip+0x13537]        # 0x140034b88
   140021651:	mov    ebx,edx
   140021653:	mov    QWORD PTR [rcx],rax
   140021656:	mov    rdi,rcx
   140021659:	call   0x140029248
   14002165e:	test   bl,0x1
   140021661:	je     0x14002166c
   140021663:	mov    rcx,rdi
   140021666:	call   QWORD PTR [rip+0x10f5c]        # 0x1400325c8
   14002166c:	mov    rax,rdi
   14002166f:	mov    rbx,QWORD PTR [rsp+0x30]
   140021674:	add    rsp,0x20
   140021678:	pop    rdi
   140021679:	ret    
   14002167a:	int3   
   14002167b:	int3   
   14002167c:	int3   
   14002167d:	int3   
   14002167e:	int3   
   14002167f:	int3   
   140021680:	mov    rax,rsp
   140021683:	push   rsi
   140021684:	push   rdi
   140021685:	push   r12
   140021687:	push   r14
   140021689:	push   r15
   14002168b:	sub    rsp,0x110
   140021692:	mov    QWORD PTR [rsp+0x50],0xfffffffffffffffe
   14002169b:	mov    QWORD PTR [rax+0x18],rbx
   14002169f:	mov    rax,QWORD PTR [rip+0x2997a]        # 0x14004b020
   1400216a6:	xor    rax,rsp
   1400216a9:	mov    QWORD PTR [rsp+0x108],rax
   1400216b1:	mov    r15,rdx
   1400216b4:	mov    r12,rcx
   1400216b7:	xor    edi,edi
   1400216b9:	mov    r14d,edi
   1400216bc:	mov    QWORD PTR [rcx],rdi
   1400216bf:	lea    ecx,[rdi+0x68]
   1400216c2:	call   0x140023f10
   1400216c7:	mov    rsi,rax
   1400216ca:	mov    DWORD PTR [rax+0x8],edi
   1400216cd:	lea    rax,[rip+0x13544]        # 0x140034c18
   1400216d4:	mov    QWORD PTR [rsi],rax
   1400216d7:	test   r15,r15
   1400216da:	je     0x1400216f0
   1400216dc:	mov    rax,QWORD PTR [r15]
   1400216df:	mov    rbx,QWORD PTR [rax]
   1400216e2:	mov    rcx,rbx
   1400216e5:	call   QWORD PTR [rip+0x10fbd]        # 0x1400326a8
   1400216eb:	mov    rcx,r15
   1400216ee:	call   rbx
   1400216f0:	mov    QWORD PTR [rsi+0x10],r15
   1400216f4:	mov    DWORD PTR [rsi+0x20],edi
   1400216f7:	lea    rax,[rip+0x13622]        # 0x140034d20
   1400216fe:	mov    QWORD PTR [rsi+0x18],rax
   140021702:	mov    QWORD PTR [rsi+0x28],rdi
   140021706:	mov    BYTE PTR [rsi+0x30],dil
   14002170a:	mov    BYTE PTR [rsi+0x31],dil
   14002170e:	mov    QWORD PTR [rsi+0x38],rdi
   140021712:	lea    r15,[rsi+0x40]
   140021716:	mov    QWORD PTR [r15],rdi
   140021719:	mov    QWORD PTR [rsi+0x48],rdi
   14002171d:	mov    QWORD PTR [rsi+0x50],rdi
   140021721:	mov    QWORD PTR [rsi+0x58],rdi
   140021725:	mov    QWORD PTR [rsi+0x60],rdi
   140021729:	mov    rax,QWORD PTR [rsi]
   14002172c:	mov    rbx,QWORD PTR [rax]
   14002172f:	mov    rcx,rbx
   140021732:	call   QWORD PTR [rip+0x10f70]        # 0x1400326a8
   140021738:	mov    rcx,rsi
   14002173b:	call   rbx
   14002173d:	nop
   14002173e:	mov    QWORD PTR [rsp+0x60],rdi
   140021743:	mov    QWORD PTR [r12],rsi
   140021747:	mov    rcx,rsi
   14002174a:	call   0x14002251c
   14002174f:	mov    QWORD PTR [rsp+0x58],rdi
   140021754:	mov    QWORD PTR [rsp+0x30],rdi
   140021759:	lea    rdx,[rsp+0x30]
   14002175e:	xor    ecx,ecx
   140021760:	call   QWORD PTR [rip+0x10c6a]        # 0x1400323d0
   140021766:	mov    ebx,eax
   140021768:	test   eax,eax
   14002176a:	jns    0x1400217ba
   14002176c:	lea    rdx,[rip+0x29905]        # 0x14004b078
   140021773:	mov    rcx,QWORD PTR [rip+0x298fe]        # 0x14004b078
   14002177a:	cmp    rcx,rdx
   14002177d:	je     0x14002179d
   14002177f:	test   BYTE PTR [rcx+0x1c],0x1
   140021783:	je     0x14002179d
   140021785:	mov    edx,0xe
   14002178a:	mov    r9d,eax
   14002178d:	lea    r8,[rip+0x17054]        # 0x1400387e8
   140021794:	mov    rcx,QWORD PTR [rcx+0x10]
   140021798:	call   0x140001f70
   14002179d:	mov    edx,ebx
   14002179f:	lea    rcx,[rsp+0x68]
   1400217a4:	call   0x140002064
   1400217a9:	lea    rdx,[rip+0x279d8]        # 0x140049188
   1400217b0:	lea    rcx,[rsp+0x68]
   1400217b5:	call   0x14002e2da
   1400217ba:	mov    rax,QWORD PTR [rsp+0x30]
   1400217bf:	test   rax,rax
   1400217c2:	jne    0x140021816
   1400217c4:	lea    rdx,[rip+0x298ad]        # 0x14004b078
   1400217cb:	mov    rcx,QWORD PTR [rip+0x298a6]        # 0x14004b078
   1400217d2:	cmp    rcx,rdx
   1400217d5:	je     0x1400217f0
   1400217d7:	test   BYTE PTR [rcx+0x1c],0x1
   1400217db:	je     0x1400217f0
   1400217dd:	lea    edx,[rax+0xf]
   1400217e0:	lea    r8,[rip+0x17001]        # 0x1400387e8
   1400217e7:	mov    rcx,QWORD PTR [rcx+0x10]
   1400217eb:	call   0x140001f08
   1400217f0:	mov    edx,0x8007139f
   1400217f5:	lea    rcx,[rsp+0xb8]
   1400217fd:	call   0x140002064
   140021802:	lea    rdx,[rip+0x2797f]        # 0x140049188
   140021809:	lea    rcx,[rsp+0xb8]
   140021811:	call   0x14002e2da
   140021816:	mov    rcx,QWORD PTR [rsi+0x38]
   14002181a:	test   rcx,rcx
   14002181d:	je     0x14002182e
   14002181f:	call   QWORD PTR [rip+0x10bdb]        # 0x140032400
   140021825:	mov    QWORD PTR [rsi+0x38],rdi
   140021829:	mov    rax,QWORD PTR [rsp+0x30]
   14002182e:	mov    QWORD PTR [rsi+0x38],rax
   140021832:	lea    rax,[rip+0xb37]        # 0x140022370
   140021839:	mov    QWORD PTR [rsp+0x38],rax
   14002183e:	mov    QWORD PTR [rsp+0x40],rsi
   140021843:	cmp    QWORD PTR [r15],rdi
   140021846:	je     0x14002189c
   140021848:	lea    rdx,[rip+0x29829]        # 0x14004b078
   14002184f:	mov    rcx,QWORD PTR [rip+0x29822]        # 0x14004b078
   140021856:	cmp    rcx,rdx
   140021859:	je     0x140021876
   14002185b:	test   BYTE PTR [rcx+0x1c],0x1
   14002185f:	je     0x140021876
   140021861:	mov    edx,0x10
   140021866:	lea    r8,[rip+0x16f7b]        # 0x1400387e8
   14002186d:	mov    rcx,QWORD PTR [rcx+0x10]
   140021871:	call   0x140001f08
   140021876:	mov    edx,0x800700a0
   14002187b:	lea    rcx,[rsp+0x90]
   140021883:	call   0x140002064
   140021888:	lea    rdx,[rip+0x278f9]        # 0x140049188
   14002188f:	lea    rcx,[rsp+0x90]
   140021897:	call   0x14002e2da
   14002189c:	mov    QWORD PTR [rsp+0x20],r15
   1400218a1:	lea    r9,[rsp+0x38]
   1400218a6:	xor    r8d,r8d
   1400218a9:	mov    edx,0x82
   1400218ae:	mov    rcx,QWORD PTR [rsi+0x38]
   1400218b2:	call   QWORD PTR [rip+0x10b10]        # 0x1400323c8
   1400218b8:	mov    ebx,eax
   1400218ba:	test   eax,eax
   1400218bc:	jns    0x140021913
   1400218be:	lea    rdx,[rip+0x297b3]        # 0x14004b078
   1400218c5:	mov    rcx,QWORD PTR [rip+0x297ac]        # 0x14004b078
   1400218cc:	cmp    rcx,rdx
   1400218cf:	je     0x1400218ef
   1400218d1:	test   BYTE PTR [rcx+0x1c],0x1
   1400218d5:	je     0x1400218ef
   1400218d7:	mov    edx,0x11
   1400218dc:	mov    r9d,eax
   1400218df:	lea    r8,[rip+0x16f02]        # 0x1400387e8
   1400218e6:	mov    rcx,QWORD PTR [rcx+0x10]
   1400218ea:	call   0x140001f70
   1400218ef:	mov    edx,ebx
   1400218f1:	lea    rcx,[rsp+0xe0]
   1400218f9:	call   0x140002064
   1400218fe:	lea    rdx,[rip+0x27883]        # 0x140049188
   140021905:	lea    rcx,[rsp+0xe0]
   14002190d:	call   0x14002e2da
   140021912:	nop
   140021913:	jmp    0x14002191a
   140021915:	mov    r14d,DWORD PTR [rsp+0x30]
   14002191a:	mov    eax,r14d
   14002191d:	mov    rcx,QWORD PTR [rsp+0x108]
   140021925:	xor    rcx,rsp
   140021928:	call   0x14002dd00
   14002192d:	mov    rbx,QWORD PTR [rsp+0x150]
   140021935:	add    rsp,0x110
   14002193c:	pop    r15
   14002193e:	pop    r14
   140021940:	pop    r12
   140021942:	pop    rdi
   140021943:	pop    rsi
   140021944:	ret    
   140021945:	int3   
   140021946:	int3   
   140021947:	int3   
   140021948:	int3   
   140021949:	int3   
   14002194a:	int3   
   14002194b:	int3   
   14002194c:	mov    QWORD PTR [rsp+0x8],rbx
   140021951:	mov    QWORD PTR [rsp+0x10],rsi
   140021956:	push   rdi
   140021957:	sub    rsp,0x20
   14002195b:	cmp    QWORD PTR [rcx+0x10],0x0
   140021960:	lea    rax,[rip+0x132b1]        # 0x140034c18
   140021967:	mov    QWORD PTR [rcx],rax
   14002196a:	mov    rdi,rcx
   14002196d:	je     0x140021974
   14002196f:	call   0x140021a20
   140021974:	mov    rcx,QWORD PTR [rdi+0x60]
   140021978:	test   rcx,rcx
   14002197b:	je     0x140021983
   14002197d:	call   QWORD PTR [rip+0x10af5]        # 0x140032478
   140021983:	mov    rcx,QWORD PTR [rdi+0x58]
   140021987:	test   rcx,rcx
   14002198a:	je     0x140021992
   14002198c:	call   QWORD PTR [rip+0x10ae6]        # 0x140032478
   140021992:	mov    rcx,QWORD PTR [rdi+0x50]
   140021996:	test   rcx,rcx
   140021999:	je     0x1400219a1
   14002199b:	call   QWORD PTR [rip+0x10ad7]        # 0x140032478
   1400219a1:	mov    rcx,QWORD PTR [rdi+0x48]
   1400219a5:	test   rcx,rcx
   1400219a8:	je     0x1400219b0
   1400219aa:	call   QWORD PTR [rip+0x10ac8]        # 0x140032478
   1400219b0:	mov    rcx,QWORD PTR [rdi+0x40]
   1400219b4:	test   rcx,rcx
   1400219b7:	je     0x1400219bf
   1400219b9:	call   QWORD PTR [rip+0x10a41]        # 0x140032400
   1400219bf:	mov    rcx,QWORD PTR [rdi+0x38]
   1400219c3:	test   rcx,rcx
   1400219c6:	je     0x1400219ce
   1400219c8:	call   QWORD PTR [rip+0x10a32]        # 0x140032400
   1400219ce:	lea    rcx,[rdi+0x18]
   1400219d2:	call   0x140029b48
   1400219d7:	mov    rsi,QWORD PTR [rdi+0x10]
   1400219db:	test   rsi,rsi
   1400219de:	je     0x1400219f5
   1400219e0:	mov    rax,QWORD PTR [rsi]
   1400219e3:	mov    rbx,QWORD PTR [rax+0x8]
   1400219e7:	mov    rcx,rbx
   1400219ea:	call   QWORD PTR [rip+0x10cb8]        # 0x1400326a8
   1400219f0:	mov    rcx,rsi
   1400219f3:	call   rbx
   1400219f5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400219fa:	lea    rax,[rip+0x1313f]        # 0x140034b40
   140021a01:	mov    rsi,QWORD PTR [rsp+0x38]
   140021a06:	mov    QWORD PTR [rdi],rax
   140021a09:	add    rsp,0x20
   140021a0d:	pop    rdi
   140021a0e:	ret    
   140021a0f:	int3   
   140021a10:	int3   
   140021a11:	int3   
   140021a12:	int3   
   140021a13:	int3   
   140021a14:	int3   
   140021a15:	int3   
   140021a16:	int3   
   140021a17:	int3   
   140021a18:	int3   
   140021a19:	int3   
   140021a1a:	int3   
   140021a1b:	int3   
   140021a1c:	int3   
   140021a1d:	int3   
   140021a1e:	int3   
   140021a1f:	int3   
   140021a20:	mov    QWORD PTR [rsp+0x8],rbx
   140021a25:	push   rdi
   140021a26:	sub    rsp,0x20
   140021a2a:	mov    rbx,rcx
   140021a2d:	add    rcx,0x18
   140021a31:	call   0x140029b84
   140021a36:	mov    rcx,QWORD PTR [rbx+0x40]
   140021a3a:	test   rcx,rcx
   140021a3d:	je     0x140021a4a
   140021a3f:	call   QWORD PTR [rip+0x109bb]        # 0x140032400
   140021a45:	and    QWORD PTR [rbx+0x40],0x0
   140021a4a:	mov    rcx,QWORD PTR [rbx+0x38]
   140021a4e:	test   rcx,rcx
   140021a51:	je     0x140021a5e
   140021a53:	call   QWORD PTR [rip+0x109a7]        # 0x140032400
   140021a59:	and    QWORD PTR [rbx+0x38],0x0
   140021a5e:	mov    rcx,QWORD PTR [rbx+0x48]
   140021a62:	test   rcx,rcx
   140021a65:	je     0x140021a72
   140021a67:	call   QWORD PTR [rip+0x10a0b]        # 0x140032478
   140021a6d:	and    QWORD PTR [rbx+0x48],0x0
   140021a72:	mov    rcx,QWORD PTR [rbx+0x50]
   140021a76:	test   rcx,rcx
   140021a79:	je     0x140021a86
   140021a7b:	call   QWORD PTR [rip+0x109f7]        # 0x140032478
   140021a81:	and    QWORD PTR [rbx+0x50],0x0
   140021a86:	mov    rcx,QWORD PTR [rbx+0x58]
   140021a8a:	test   rcx,rcx
   140021a8d:	je     0x140021a9a
   140021a8f:	call   QWORD PTR [rip+0x109e3]        # 0x140032478
   140021a95:	and    QWORD PTR [rbx+0x58],0x0
   140021a9a:	mov    rcx,QWORD PTR [rbx+0x60]
   140021a9e:	test   rcx,rcx
   140021aa1:	je     0x140021aae
   140021aa3:	call   QWORD PTR [rip+0x109cf]        # 0x140032478
   140021aa9:	and    QWORD PTR [rbx+0x60],0x0
   140021aae:	mov    rdi,QWORD PTR [rbx+0x10]
   140021ab2:	and    QWORD PTR [rbx+0x10],0x0
   140021ab7:	test   rdi,rdi
   140021aba:	je     0x140021ad1
   140021abc:	mov    rax,QWORD PTR [rdi]
   140021abf:	mov    rbx,QWORD PTR [rax+0x8]
   140021ac3:	mov    rcx,rbx
   140021ac6:	call   QWORD PTR [rip+0x10bdc]        # 0x1400326a8
   140021acc:	mov    rcx,rdi
   140021acf:	call   rbx
   140021ad1:	mov    rbx,QWORD PTR [rsp+0x30]
   140021ad6:	add    rsp,0x20
   140021ada:	pop    rdi
   140021adb:	ret    
   140021adc:	int3   
   140021add:	int3   
   140021ade:	int3   
   140021adf:	int3   
   140021ae0:	int3   
   140021ae1:	int3   
   140021ae2:	int3   
   140021ae3:	int3   
   140021ae4:	int3   
   140021ae5:	int3   
   140021ae6:	int3   
   140021ae7:	int3   
   140021ae8:	int3   
   140021ae9:	int3   
   140021aea:	int3   
   140021aeb:	int3   
   140021aec:	int3   
   140021aed:	int3   
   140021aee:	int3   
   140021aef:	int3   
   140021af0:	mov    QWORD PTR [rsp+0x8],rbx
   140021af5:	push   rbp
   140021af6:	push   rsi
   140021af7:	push   rdi
   140021af8:	mov    rbp,rsp
   140021afb:	sub    rsp,0x20
   140021aff:	xor    ebx,ebx
   140021b01:	lea    rcx,[rbp+0x30]
   140021b05:	and    QWORD PTR [rbp+0x30],rbx
   140021b09:	mov    edi,edx
   140021b0b:	mov    QWORD PTR [rbp+0x38],rbx
   140021b0f:	call   0x140022f50
   140021b14:	mov    esi,eax
   140021b16:	test   eax,eax
   140021b18:	jns    0x140021b64
   140021b1a:	mov    rax,QWORD PTR [rbp+0x30]
   140021b1e:	test   rax,rax
   140021b21:	je     0x140021bae
   140021b27:	mov    ecx,DWORD PTR [rax+0x8]
   140021b2a:	cmp    ecx,0x1
   140021b2d:	jne    0x140021b34
   140021b2f:	mov    DWORD PTR [rax+0x8],ebx
   140021b32:	jmp    0x140021b41
   140021b34:	or     ecx,0xffffffff
   140021b37:	lock xadd DWORD PTR [rax+0x8],ecx
   140021b3c:	sub    ecx,0x1
   140021b3f:	jg     0x140021b5e
   140021b41:	mov    rbx,QWORD PTR [rbp+0x30]
   140021b45:	mov    rax,QWORD PTR [rbx]
   140021b48:	mov    rdi,QWORD PTR [rax]
   140021b4b:	mov    rcx,rdi
   140021b4e:	call   QWORD PTR [rip+0x10b54]        # 0x1400326a8
   140021b54:	mov    edx,0x1
   140021b59:	mov    rcx,rbx
   140021b5c:	call   rdi
   140021b5e:	mov    rbx,QWORD PTR [rbp+0x38]
   140021b62:	jmp    0x140021bae
   140021b64:	mov    rbx,QWORD PTR [rbp+0x30]
   140021b68:	mov    dl,0x1
   140021b6a:	mov    rcx,rbx
   140021b6d:	and    QWORD PTR [rbx+0x60],0x0
   140021b72:	and    QWORD PTR [rbx+0x58],0x0
   140021b77:	mov    DWORD PTR [rbx+0x50],edi
   140021b7a:	call   0x14002965c
   140021b7f:	mov    esi,eax
   140021b81:	test   eax,eax
   140021b83:	jns    0x140021ba3
   140021b85:	mov    eax,DWORD PTR [rbx+0x8]
   140021b88:	cmp    eax,0x1
   140021b8b:	jne    0x140021b96
   140021b8d:	mov    DWORD PTR [rbx+0x8],0x0
   140021b94:	jmp    0x140021b41
   140021b96:	or     eax,0xffffffff
   140021b99:	lock xadd DWORD PTR [rbx+0x8],eax
   140021b9e:	sub    eax,0x1
   140021ba1:	jmp    0x140021b3f
   140021ba3:	and    QWORD PTR [rbp+0x30],0x0
   140021ba8:	xor    esi,esi
   140021baa:	mov    QWORD PTR [rbp+0x38],rbx
   140021bae:	test   esi,esi
   140021bb0:	js     0x140021bc2
   140021bb2:	mov    rcx,rbx
   140021bb5:	call   0x140022dd4
   140021bba:	mov    esi,eax
   140021bbc:	test   eax,eax
   140021bbe:	js     0x140021bc2
   140021bc0:	xor    esi,esi
   140021bc2:	test   rbx,rbx
   140021bc5:	je     0x140021c02
   140021bc7:	mov    eax,DWORD PTR [rbx+0x8]
   140021bca:	cmp    eax,0x1
   140021bcd:	jne    0x140021bd8
   140021bcf:	mov    DWORD PTR [rbx+0x8],0x0
   140021bd6:	jmp    0x140021be5
   140021bd8:	or     eax,0xffffffff
   140021bdb:	lock xadd DWORD PTR [rbx+0x8],eax
   140021be0:	sub    eax,0x1
   140021be3:	jg     0x140021c02
   140021be5:	mov    rbx,QWORD PTR [rbp+0x38]
   140021be9:	mov    rcx,QWORD PTR [rbx]
   140021bec:	mov    rdi,QWORD PTR [rcx]
   140021bef:	mov    rcx,rdi
   140021bf2:	call   QWORD PTR [rip+0x10ab0]        # 0x1400326a8
   140021bf8:	mov    edx,0x1
   140021bfd:	mov    rcx,rbx
   140021c00:	call   rdi
   140021c02:	mov    eax,esi
   140021c04:	mov    rbx,QWORD PTR [rsp+0x40]
   140021c09:	add    rsp,0x20
   140021c0d:	pop    rdi
   140021c0e:	pop    rsi
   140021c0f:	pop    rbp
   140021c10:	ret    
   140021c11:	int3   
   140021c12:	int3   
   140021c13:	int3   
   140021c14:	int3   
   140021c15:	int3   
   140021c16:	int3   
   140021c17:	int3   
   140021c18:	int3   
   140021c19:	int3   
   140021c1a:	int3   
   140021c1b:	int3   
   140021c1c:	int3   
   140021c1d:	int3   
   140021c1e:	int3   
   140021c1f:	int3   
   140021c20:	mov    rax,rsp
   140021c23:	push   r14
   140021c25:	sub    rsp,0x90
   140021c2c:	mov    QWORD PTR [rax-0x70],0xfffffffffffffffe
   140021c34:	mov    QWORD PTR [rax+0x8],rbx
   140021c38:	mov    QWORD PTR [rax+0x10],rbp
   140021c3c:	mov    QWORD PTR [rax+0x18],rsi
   140021c40:	mov    QWORD PTR [rax+0x20],rdi
   140021c44:	mov    rax,QWORD PTR [rip+0x293d5]        # 0x14004b020
   140021c4b:	xor    rax,rsp
   140021c4e:	mov    QWORD PTR [rsp+0x80],rax
   140021c56:	mov    esi,r9d
   140021c59:	mov    rbp,r8
   140021c5c:	mov    r14d,edx
   140021c5f:	mov    eax,DWORD PTR [rsp+0xc0]
   140021c66:	test   eax,eax
   140021c68:	je     0x140021c86
   140021c6a:	sub    eax,0x1
   140021c6d:	je     0x140021c7f
   140021c6f:	cmp    eax,0x1
   140021c72:	je     0x140021c78
   140021c74:	xor    ebx,ebx
   140021c76:	jmp    0x140021c8b
   140021c78:	mov    ebx,0x30
   140021c7d:	jmp    0x140021c8b
   140021c7f:	mov    ebx,0x1e
   140021c84:	jmp    0x140021c8b
   140021c86:	mov    ebx,0x2f
   140021c8b:	mov    ecx,0xd8
   140021c90:	call   0x140023f10
   140021c95:	mov    rdi,rax
   140021c98:	and    DWORD PTR [rax+0x8],0x0
   140021c9c:	mov    DWORD PTR [rax+0x10],0x2
   140021ca3:	and    QWORD PTR [rax+0x18],0x0
   140021ca8:	and    QWORD PTR [rax+0x28],0x0
   140021cad:	and    QWORD PTR [rax+0x30],0x0
   140021cb2:	and    QWORD PTR [rax+0x38],0x0
   140021cb7:	and    QWORD PTR [rax+0x40],0x0
   140021cbc:	mov    WORD PTR [rax+0x48],0x0
   140021cc2:	mov    BYTE PTR [rax+0x4a],0x0
   140021cc6:	lea    rax,[rip+0x12eeb]        # 0x140034bb8
   140021ccd:	mov    QWORD PTR [rdi],rax
   140021cd0:	mov    eax,DWORD PTR [rdi+0x8]
   140021cd3:	test   eax,eax
   140021cd5:	jne    0x140021ce0
   140021cd7:	mov    DWORD PTR [rdi+0x8],0x1
   140021cde:	jmp    0x140021ce4
   140021ce0:	lock inc DWORD PTR [rdi+0x8]
   140021ce4:	mov    QWORD PTR [rsp+0x20],rdi
   140021ce9:	mov    DWORD PTR [rdi+0x50],r14d
   140021ced:	mov    QWORD PTR [rdi+0x58],rbp
   140021cf1:	mov    DWORD PTR [rdi+0x60],esi
   140021cf4:	mov    DWORD PTR [rdi+0x64],ebx
   140021cf7:	mov    rax,QWORD PTR [rsp+0xc8]
   140021cff:	mov    QWORD PTR [rdi+0x68],rax
   140021d03:	movzx  eax,WORD PTR [rsp+0xd0]
   140021d0b:	mov    DWORD PTR [rdi+0x70],eax
   140021d0e:	mov    rax,QWORD PTR [rsp+0xd8]
   140021d16:	mov    QWORD PTR [rdi+0x78],rax
   140021d1a:	movzx  eax,WORD PTR [rsp+0xe0]
   140021d22:	mov    DWORD PTR [rdi+0x80],eax
   140021d28:	mov    rax,QWORD PTR [rsp+0xe8]
   140021d30:	mov    QWORD PTR [rdi+0x88],rax
   140021d37:	mov    rax,QWORD PTR [rsp+0xf0]
   140021d3f:	mov    QWORD PTR [rdi+0x90],rax
   140021d46:	mov    eax,DWORD PTR [rsp+0xf8]
   140021d4d:	mov    DWORD PTR [rdi+0x98],eax
   140021d53:	mov    rax,QWORD PTR [rsp+0x100]
   140021d5b:	mov    QWORD PTR [rdi+0xa0],rax
   140021d62:	mov    rax,QWORD PTR [rsp+0x108]
   140021d6a:	mov    QWORD PTR [rdi+0xa8],rax
   140021d71:	mov    eax,DWORD PTR [rsp+0x110]
   140021d78:	mov    DWORD PTR [rdi+0xb0],eax
   140021d7e:	mov    rax,QWORD PTR [rsp+0x118]
   140021d86:	mov    QWORD PTR [rdi+0xb8],rax
   140021d8d:	mov    rax,QWORD PTR [rsp+0x120]
   140021d95:	mov    QWORD PTR [rdi+0xc0],rax
   140021d9c:	mov    rax,QWORD PTR [rsp+0x128]
   140021da4:	mov    QWORD PTR [rdi+0xc8],rax
   140021dab:	mov    eax,DWORD PTR [rsp+0x130]
   140021db2:	mov    DWORD PTR [rdi+0xd0],eax
   140021db8:	mov    eax,DWORD PTR [rsp+0x138]
   140021dbf:	mov    DWORD PTR [rdi+0xd4],eax
   140021dc5:	mov    dl,0x1
   140021dc7:	mov    rcx,rdi
   140021dca:	call   0x14002965c
   140021dcf:	mov    ebx,eax
   140021dd1:	test   eax,eax
   140021dd3:	jns    0x140021e24
   140021dd5:	lea    rdx,[rip+0x2929c]        # 0x14004b078
   140021ddc:	mov    rcx,QWORD PTR [rip+0x29295]        # 0x14004b078
   140021de3:	cmp    rcx,rdx
   140021de6:	je     0x140021e06
   140021de8:	test   BYTE PTR [rcx+0x1c],0x1
   140021dec:	je     0x140021e06
   140021dee:	mov    edx,0xa
   140021df3:	mov    r9d,eax
   140021df6:	lea    r8,[rip+0x169eb]        # 0x1400387e8
   140021dfd:	mov    rcx,QWORD PTR [rcx+0x10]
   140021e01:	call   0x140001f70
   140021e06:	mov    edx,ebx
   140021e08:	lea    rcx,[rsp+0x30]
   140021e0d:	call   0x140002064
   140021e12:	lea    rdx,[rip+0x2736f]        # 0x140049188
   140021e19:	lea    rcx,[rsp+0x30]
   140021e1e:	call   0x14002e2da
   140021e23:	int3   
   140021e24:	mov    rcx,rdi
   140021e27:	call   0x140022dd4
   140021e2c:	mov    ebx,eax
   140021e2e:	test   eax,eax
   140021e30:	jns    0x140021e81
   140021e32:	lea    rdx,[rip+0x2923f]        # 0x14004b078
   140021e39:	mov    rcx,QWORD PTR [rip+0x29238]        # 0x14004b078
   140021e40:	cmp    rcx,rdx
   140021e43:	je     0x140021e63
   140021e45:	test   BYTE PTR [rcx+0x1c],0x1
   140021e49:	je     0x140021e63
   140021e4b:	mov    edx,0xb
   140021e50:	mov    r9d,eax
   140021e53:	lea    r8,[rip+0x1698e]        # 0x1400387e8
   140021e5a:	mov    rcx,QWORD PTR [rcx+0x10]
   140021e5e:	call   0x140001f70
   140021e63:	mov    edx,ebx
   140021e65:	lea    rcx,[rsp+0x58]
   140021e6a:	call   0x140002064
   140021e6f:	lea    rdx,[rip+0x27312]        # 0x140049188
   140021e76:	lea    rcx,[rsp+0x58]
   140021e7b:	call   0x14002e2da
   140021e80:	nop
   140021e81:	mov    eax,DWORD PTR [rdi+0x8]
   140021e84:	cmp    eax,0x1
   140021e87:	jne    0x140021e92
   140021e89:	mov    DWORD PTR [rdi+0x8],0x0
   140021e90:	jmp    0x140021e9f
   140021e92:	or     eax,0xffffffff
   140021e95:	lock xadd DWORD PTR [rdi+0x8],eax
   140021e9a:	sub    eax,0x1
   140021e9d:	jg     0x140021eb8
   140021e9f:	mov    rax,QWORD PTR [rdi]
   140021ea2:	mov    rbx,QWORD PTR [rax]
   140021ea5:	mov    rcx,rbx
   140021ea8:	call   QWORD PTR [rip+0x107fa]        # 0x1400326a8
   140021eae:	mov    edx,0x1
   140021eb3:	mov    rcx,rdi
   140021eb6:	call   rbx
   140021eb8:	mov    rcx,QWORD PTR [rsp+0x80]
   140021ec0:	xor    rcx,rsp
   140021ec3:	call   0x14002dd00
   140021ec8:	lea    r11,[rsp+0x90]
   140021ed0:	mov    rbx,QWORD PTR [r11+0x10]
   140021ed4:	mov    rbp,QWORD PTR [r11+0x18]
   140021ed8:	mov    rsi,QWORD PTR [r11+0x20]
   140021edc:	mov    rdi,QWORD PTR [r11+0x28]
   140021ee0:	mov    rsp,r11
   140021ee3:	pop    r14
   140021ee5:	ret    
   140021ee6:	int3   
   140021ee7:	int3   
   140021ee8:	int3   
   140021ee9:	int3   
   140021eea:	int3   
   140021eeb:	int3   
   140021eec:	int3   
   140021eed:	int3   
   140021eee:	int3   
   140021eef:	int3   
   140021ef0:	mov    rax,rsp
   140021ef3:	push   rdi
   140021ef4:	sub    rsp,0x90
   140021efb:	mov    QWORD PTR [rax-0x70],0xfffffffffffffffe
   140021f03:	mov    QWORD PTR [rax+0x8],rbx
   140021f07:	mov    QWORD PTR [rax+0x10],rbp
   140021f0b:	mov    rax,QWORD PTR [rip+0x2910e]        # 0x14004b020
   140021f12:	xor    rax,rsp
   140021f15:	mov    QWORD PTR [rsp+0x80],rax
   140021f1d:	mov    rbx,rdx
   140021f20:	mov    ecx,0x17d0
   140021f25:	call   0x140023f10
   140021f2a:	mov    rdi,rax
   140021f2d:	xor    ebp,ebp
   140021f2f:	mov    DWORD PTR [rax+0x8],ebp
   140021f32:	mov    DWORD PTR [rax+0x10],0x6
   140021f39:	mov    QWORD PTR [rax+0x18],rbp
   140021f3d:	mov    QWORD PTR [rax+0x28],rbp
   140021f41:	mov    QWORD PTR [rax+0x30],rbp
   140021f45:	mov    QWORD PTR [rax+0x38],rbp
   140021f49:	mov    QWORD PTR [rax+0x40],rbp
   140021f4d:	mov    WORD PTR [rax+0x48],bp
   140021f51:	mov    BYTE PTR [rax+0x4a],bpl
   140021f55:	lea    rax,[rip+0x12c2c]        # 0x140034b88
   140021f5c:	mov    QWORD PTR [rdi],rax
   140021f5f:	mov    BYTE PTR [rdi+0x50],bpl
   140021f63:	mov    DWORD PTR [rdi+0x54],ebp
   140021f66:	lea    rcx,[rdi+0xff8]
   140021f6d:	xor    edx,edx
   140021f6f:	mov    r8d,0x7d8
   140021f75:	call   0x14002e2ce
   140021f7a:	lea    rcx,[rdi+0x58]
   140021f7e:	xor    edx,edx
   140021f80:	mov    r8d,0x7d0
   140021f86:	call   0x14002e2ce
   140021f8b:	lea    rcx,[rdi+0x828]
   140021f92:	xor    edx,edx
   140021f94:	mov    r8d,0x7d0
   140021f9a:	call   0x14002e2ce
   140021f9f:	mov    eax,DWORD PTR [rdi+0x8]
   140021fa2:	test   eax,eax
   140021fa4:	jne    0x140021faf
   140021fa6:	mov    DWORD PTR [rdi+0x8],0x1
   140021fad:	jmp    0x140021fb3
   140021faf:	lock inc DWORD PTR [rdi+0x8]
   140021fb3:	mov    QWORD PTR [rsp+0x20],rdi
   140021fb8:	test   rbx,rbx
   140021fbb:	je     0x14002201c
   140021fbd:	mov    rax,QWORD PTR [rbx+0x7d0]
   140021fc4:	dec    rax
   140021fc7:	cmp    rax,0xf9
   140021fcd:	ja     0x14002201c
   140021fcf:	mov    eax,DWORD PTR [rbx+0x7d0]
   140021fd5:	mov    DWORD PTR [rdi+0x54],eax
   140021fd8:	mov    r8,rbp
   140021fdb:	test   eax,eax
   140021fdd:	je     0x14002200a
   140021fdf:	mov    rdx,rdi
   140021fe2:	sub    rdx,rbx
   140021fe5:	mov    rax,QWORD PTR [rbx]
   140021fe8:	mov    QWORD PTR [rdx+rbx*1+0x58],rax
   140021fed:	mov    rax,QWORD PTR [rbx]
   140021ff0:	mov    ecx,DWORD PTR [rax+0x1c]
   140021ff3:	mov    QWORD PTR [rdx+rbx*1+0x828],rcx
   140021ffb:	inc    r8
   140021ffe:	lea    rbx,[rbx+0x8]
   140022002:	mov    eax,DWORD PTR [rdi+0x54]
   140022005:	cmp    r8,rax
   140022008:	jb     0x140021fe5
   14002200a:	mov    BYTE PTR [rdi+0x50],0x1
   14002200e:	mov    dl,0x1
   140022010:	mov    rcx,rdi
   140022013:	call   0x14002965c
   140022018:	mov    ebx,eax
   14002201a:	jmp    0x140022021
   14002201c:	mov    ebx,0x80070057
   140022021:	test   ebx,ebx
   140022023:	jns    0x140022074
   140022025:	lea    rax,[rip+0x2904c]        # 0x14004b078
   14002202c:	mov    rcx,QWORD PTR [rip+0x29045]        # 0x14004b078
   140022033:	cmp    rcx,rax
   140022036:	je     0x140022056
   140022038:	test   BYTE PTR [rcx+0x1c],0x1
   14002203c:	je     0x140022056
   14002203e:	mov    edx,0xc
   140022043:	mov    r9d,ebx
   140022046:	lea    r8,[rip+0x1679b]        # 0x1400387e8
   14002204d:	mov    rcx,QWORD PTR [rcx+0x10]
   140022051:	call   0x140001f70
   140022056:	mov    edx,ebx
   140022058:	lea    rcx,[rsp+0x30]
   14002205d:	call   0x140002064
   140022062:	lea    rdx,[rip+0x2711f]        # 0x140049188
   140022069:	lea    rcx,[rsp+0x30]
   14002206e:	call   0x14002e2da
   140022073:	int3   
   140022074:	mov    rcx,rdi
   140022077:	call   0x140022dd4
   14002207c:	mov    ebx,eax
   14002207e:	test   eax,eax
   140022080:	jns    0x1400220d1
   140022082:	lea    rax,[rip+0x28fef]        # 0x14004b078
   140022089:	mov    rcx,QWORD PTR [rip+0x28fe8]        # 0x14004b078
   140022090:	cmp    rcx,rax
   140022093:	je     0x1400220b3
   140022095:	test   BYTE PTR [rcx+0x1c],0x1
   140022099:	je     0x1400220b3
   14002209b:	mov    edx,0xd
   1400220a0:	mov    r9d,ebx
   1400220a3:	lea    r8,[rip+0x1673e]        # 0x1400387e8
   1400220aa:	mov    rcx,QWORD PTR [rcx+0x10]
   1400220ae:	call   0x140001f70
   1400220b3:	mov    edx,ebx
   1400220b5:	lea    rcx,[rsp+0x58]
   1400220ba:	call   0x140002064
   1400220bf:	lea    rdx,[rip+0x270c2]        # 0x140049188
   1400220c6:	lea    rcx,[rsp+0x58]
   1400220cb:	call   0x14002e2da
   1400220d0:	nop
   1400220d1:	mov    eax,DWORD PTR [rdi+0x8]
   1400220d4:	cmp    eax,0x1
   1400220d7:	jne    0x1400220de
   1400220d9:	mov    DWORD PTR [rdi+0x8],ebp
   1400220dc:	jmp    0x1400220eb
   1400220de:	or     eax,0xffffffff
   1400220e1:	lock xadd DWORD PTR [rdi+0x8],eax
   1400220e6:	sub    eax,0x1
   1400220e9:	jg     0x140022104
   1400220eb:	mov    rax,QWORD PTR [rdi]
   1400220ee:	mov    rbx,QWORD PTR [rax]
   1400220f1:	mov    rcx,rbx
   1400220f4:	call   QWORD PTR [rip+0x105ae]        # 0x1400326a8
   1400220fa:	mov    edx,0x1
   1400220ff:	mov    rcx,rdi
   140022102:	call   rbx
   140022104:	mov    rcx,QWORD PTR [rsp+0x80]
   14002210c:	xor    rcx,rsp
   14002210f:	call   0x14002dd00
   140022114:	lea    r11,[rsp+0x90]
   14002211c:	mov    rbx,QWORD PTR [r11+0x10]
   140022120:	mov    rbp,QWORD PTR [r11+0x18]
   140022124:	mov    rsp,r11
   140022127:	pop    rdi
   140022128:	ret    
   140022129:	int3   
   14002212a:	int3   
   14002212b:	int3   
   14002212c:	int3   
   14002212d:	int3   
   14002212e:	int3   
   14002212f:	int3   
   140022130:	mov    QWORD PTR [rsp+0x8],rbx
   140022135:	mov    QWORD PTR [rsp+0x10],rsi
   14002213a:	mov    QWORD PTR [rsp+0x18],rdi
   14002213f:	push   r14
   140022141:	sub    rsp,0x20
   140022145:	mov    rsi,rdx
   140022148:	mov    r14,rcx
   14002214b:	test   rdx,rdx
   14002214e:	jne    0x14002215a
   140022150:	mov    eax,0x80070057
   140022155:	jmp    0x1400221e7
   14002215a:	lea    rcx,[rdx+0x18]
   14002215e:	xor    ebx,ebx
   140022160:	call   0x140029ab0
   140022165:	mov    edi,eax
   140022167:	test   eax,eax
   140022169:	js     0x140022170
   14002216b:	mov    rbx,rcx
   14002216e:	xor    edi,edi
   140022170:	test   edi,edi
   140022172:	jns    0x1400221a4
   140022174:	mov    rcx,QWORD PTR [rip+0x28efd]        # 0x14004b078
   14002217b:	lea    rax,[rip+0x28ef6]        # 0x14004b078
   140022182:	cmp    rcx,rax
   140022185:	je     0x1400221c6
   140022187:	test   BYTE PTR [rcx+0x1c],0x4
   14002218b:	je     0x1400221c6
   14002218d:	mov    rcx,QWORD PTR [rcx+0x10]
   140022191:	lea    r8,[rip+0x16650]        # 0x1400387e8
   140022198:	mov    edx,0x12
   14002219d:	call   0x140001f08
   1400221a2:	jmp    0x1400221c6
   1400221a4:	mov    rsi,QWORD PTR [rsi+0x10]
   1400221a8:	test   rsi,rsi
   1400221ab:	je     0x1400221c1
   1400221ad:	mov    rax,QWORD PTR [rsi]
   1400221b0:	mov    rdi,QWORD PTR [rax]
   1400221b3:	mov    rcx,rdi
   1400221b6:	call   QWORD PTR [rip+0x104ec]        # 0x1400326a8
   1400221bc:	mov    rcx,rsi
   1400221bf:	call   rdi
   1400221c1:	mov    QWORD PTR [r14],rsi
   1400221c4:	xor    edi,edi
   1400221c6:	test   rbx,rbx
   1400221c9:	je     0x1400221e5
   1400221cb:	or     ecx,0xffffffff
   1400221ce:	lock xadd DWORD PTR [rbx+0x8],ecx
   1400221d3:	dec    ecx
   1400221d5:	cmp    ecx,0x80000000
   1400221db:	jne    0x1400221e5
   1400221dd:	mov    rcx,rbx
   1400221e0:	call   0x140029c90
   1400221e5:	mov    eax,edi
   1400221e7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400221ec:	mov    rsi,QWORD PTR [rsp+0x38]
   1400221f1:	mov    rdi,QWORD PTR [rsp+0x40]
   1400221f6:	add    rsp,0x20
   1400221fa:	pop    r14
   1400221fc:	ret    
   1400221fd:	int3   
   1400221fe:	int3   
   1400221ff:	int3   
   140022200:	int3   
   140022201:	int3   
   140022202:	int3   
   140022203:	int3   
   140022204:	int3   
   140022205:	int3   
   140022206:	int3   
   140022207:	int3   
   140022208:	int3   
   140022209:	int3   
   14002220a:	int3   
   14002220b:	int3   
   14002220c:	int3   
   14002220d:	int3   
   14002220e:	int3   
   14002220f:	int3   
   140022210:	test   edx,edx
   140022212:	je     0x1400222b3
   140022218:	mov    rax,rsp
   14002221b:	push   rdi
   14002221c:	sub    rsp,0x30
   140022220:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140022228:	mov    QWORD PTR [rax+0x8],rbx
   14002222c:	and    QWORD PTR [rax+0x18],0x0
   140022231:	mov    rdx,rcx
   140022234:	lea    rcx,[rax+0x18]
   140022238:	call   0x140022130
   14002223d:	mov    rbx,QWORD PTR [rsp+0x50]
   140022242:	test   eax,eax
   140022244:	jns    0x140022279
   140022246:	lea    rdx,[rip+0x28e2b]        # 0x14004b078
   14002224d:	mov    rcx,QWORD PTR [rip+0x28e24]        # 0x14004b078
   140022254:	cmp    rcx,rdx
   140022257:	je     0x14002228f
   140022259:	test   BYTE PTR [rcx+0x1c],0x1
   14002225d:	je     0x14002228f
   14002225f:	mov    edx,0x13
   140022264:	mov    r9d,eax
   140022267:	lea    r8,[rip+0x1657a]        # 0x1400387e8
   14002226e:	mov    rcx,QWORD PTR [rcx+0x10]
   140022272:	call   0x140001f70
   140022277:	jmp    0x14002228f
   140022279:	mov    rax,QWORD PTR [rbx]
   14002227c:	mov    rdi,QWORD PTR [rax+0x18]
   140022280:	mov    rcx,rdi
   140022283:	call   QWORD PTR [rip+0x1041f]        # 0x1400326a8
   140022289:	mov    rcx,rbx
   14002228c:	call   rdi
   14002228e:	nop
   14002228f:	test   rbx,rbx
   140022292:	je     0x1400222a9
   140022294:	mov    rax,QWORD PTR [rbx]
   140022297:	mov    rdi,QWORD PTR [rax+0x8]
   14002229b:	mov    rcx,rdi
   14002229e:	call   QWORD PTR [rip+0x10404]        # 0x1400326a8
   1400222a4:	mov    rcx,rbx
   1400222a7:	call   rdi
   1400222a9:	mov    rbx,QWORD PTR [rsp+0x40]
   1400222ae:	add    rsp,0x30
   1400222b2:	pop    rdi
   1400222b3:	ret    
   1400222b4:	int3   
   1400222b5:	int3   
   1400222b6:	int3   
   1400222b7:	int3   
   1400222b8:	int3   
   1400222b9:	int3   
   1400222ba:	int3   
   1400222bb:	int3   
   1400222bc:	int3   
   1400222bd:	int3   
   1400222be:	int3   
   1400222bf:	int3   
   1400222c0:	test   edx,edx
   1400222c2:	je     0x140022363
   1400222c8:	mov    rax,rsp
   1400222cb:	push   rdi
   1400222cc:	sub    rsp,0x30
   1400222d0:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   1400222d8:	mov    QWORD PTR [rax+0x8],rbx
   1400222dc:	and    QWORD PTR [rax+0x18],0x0
   1400222e1:	mov    rdx,rcx
   1400222e4:	lea    rcx,[rax+0x18]
   1400222e8:	call   0x140022130
   1400222ed:	mov    rbx,QWORD PTR [rsp+0x50]
   1400222f2:	test   eax,eax
   1400222f4:	jns    0x140022329
   1400222f6:	lea    rdx,[rip+0x28d7b]        # 0x14004b078
   1400222fd:	mov    rcx,QWORD PTR [rip+0x28d74]        # 0x14004b078
   140022304:	cmp    rcx,rdx
   140022307:	je     0x14002233f
   140022309:	test   BYTE PTR [rcx+0x1c],0x1
   14002230d:	je     0x14002233f
   14002230f:	mov    edx,0x14
   140022314:	mov    r9d,eax
   140022317:	lea    r8,[rip+0x164ca]        # 0x1400387e8
   14002231e:	mov    rcx,QWORD PTR [rcx+0x10]
   140022322:	call   0x140001f70
   140022327:	jmp    0x14002233f
   140022329:	mov    rax,QWORD PTR [rbx]
   14002232c:	mov    rdi,QWORD PTR [rax+0x20]
   140022330:	mov    rcx,rdi
   140022333:	call   QWORD PTR [rip+0x1036f]        # 0x1400326a8
   140022339:	mov    rcx,rbx
   14002233c:	call   rdi
   14002233e:	nop
   14002233f:	test   rbx,rbx
   140022342:	je     0x140022359
   140022344:	mov    rax,QWORD PTR [rbx]
   140022347:	mov    rdi,QWORD PTR [rax+0x8]
   14002234b:	mov    rcx,rdi
   14002234e:	call   QWORD PTR [rip+0x10354]        # 0x1400326a8
   140022354:	mov    rcx,rbx
   140022357:	call   rdi
   140022359:	mov    rbx,QWORD PTR [rsp+0x40]
   14002235e:	add    rsp,0x30
   140022362:	pop    rdi
   140022363:	ret    
   140022364:	int3   
   140022365:	int3   
   140022366:	int3   
   140022367:	int3   
   140022368:	int3   
   140022369:	int3   
   14002236a:	int3   
   14002236b:	int3   
   14002236c:	int3   
   14002236d:	int3   
   14002236e:	int3   
   14002236f:	int3   
   140022370:	mov    rax,rsp
   140022373:	push   rdi
   140022374:	sub    rsp,0x30
   140022378:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140022380:	mov    QWORD PTR [rax+0x10],rbx
   140022384:	mov    QWORD PTR [rax+0x18],rbp
   140022388:	mov    QWORD PTR [rax+0x20],rsi
   14002238c:	mov    r9,rdx
   14002238f:	mov    rsi,rcx
   140022392:	test   rcx,rcx
   140022395:	je     0x1400224fa
   14002239b:	test   rdx,rdx
   14002239e:	je     0x1400224fa
   1400223a4:	xor    ebx,ebx
   1400223a6:	mov    QWORD PTR [rax+0x8],rbx
   1400223aa:	add    rcx,0x18
   1400223ae:	call   0x140029ab0
   1400223b3:	mov    edi,eax
   1400223b5:	test   eax,eax
   1400223b7:	js     0x1400223c3
   1400223b9:	mov    rbx,rcx
   1400223bc:	mov    QWORD PTR [rsp+0x40],rcx
   1400223c1:	xor    edi,edi
   1400223c3:	test   edi,edi
   1400223c5:	jns    0x140022402
   1400223c7:	lea    rbp,[rip+0x28caa]        # 0x14004b078
   1400223ce:	mov    rcx,QWORD PTR [rip+0x28ca3]        # 0x14004b078
   1400223d5:	cmp    rcx,rbp
   1400223d8:	je     0x1400224d5
   1400223de:	test   BYTE PTR [rcx+0x1c],0x4
   1400223e2:	je     0x1400224d5
   1400223e8:	mov    edx,0x15
   1400223ed:	lea    r8,[rip+0x163f4]        # 0x1400387e8
   1400223f4:	mov    rcx,QWORD PTR [rcx+0x10]
   1400223f8:	call   0x140001f08
   1400223fd:	jmp    0x1400224d5
   140022402:	cmp    DWORD PTR [r9],0x3001
   140022409:	je     0x1400224b8
   14002240f:	cmp    DWORD PTR [r9],0xc001
   140022416:	jne    0x1400224d3
   14002241c:	mov    rdx,QWORD PTR [r9+0x18]
   140022420:	lea    rbp,[rip+0x28c51]        # 0x14004b078
   140022427:	cmp    DWORD PTR [rdx],0x4
   14002242a:	je     0x14002244c
   14002242c:	cmp    DWORD PTR [rdx],0x6
   14002242f:	jne    0x140022486
   140022431:	mov    rsi,QWORD PTR [rsi+0x10]
   140022435:	mov    rax,QWORD PTR [rsi]
   140022438:	mov    rdi,QWORD PTR [rax+0x30]
   14002243c:	mov    rcx,rdi
   14002243f:	call   QWORD PTR [rip+0x10263]        # 0x1400326a8
   140022445:	mov    rcx,rsi
   140022448:	call   rdi
   14002244a:	jmp    0x140022486
   14002244c:	mov    rcx,rsi
   14002244f:	call   0x1400227b4
   140022454:	mov    edi,eax
   140022456:	test   eax,eax
   140022458:	jns    0x140022486
   14002245a:	mov    rcx,QWORD PTR [rip+0x28c17]        # 0x14004b078
   140022461:	cmp    rcx,rbp
   140022464:	je     0x14002248f
   140022466:	test   BYTE PTR [rcx+0x1c],0x1
   14002246a:	je     0x14002248f
   14002246c:	mov    edx,0x1b
   140022471:	mov    r9d,eax
   140022474:	lea    r8,[rip+0x1636d]        # 0x1400387e8
   14002247b:	mov    rcx,QWORD PTR [rcx+0x10]
   14002247f:	call   0x140001f70
   140022484:	jmp    0x140022488
   140022486:	xor    edi,edi
   140022488:	mov    rcx,QWORD PTR [rip+0x28be9]        # 0x14004b078
   14002248f:	test   edi,edi
   140022491:	jns    0x1400224d3
   140022493:	cmp    rcx,rbp
   140022496:	je     0x1400224d5
   140022498:	test   BYTE PTR [rcx+0x1c],0x1
   14002249c:	je     0x1400224d5
   14002249e:	mov    edx,0x16
   1400224a3:	mov    r9d,edi
   1400224a6:	lea    r8,[rip+0x1633b]        # 0x1400387e8
   1400224ad:	mov    rcx,QWORD PTR [rcx+0x10]
   1400224b1:	call   0x140001f70
   1400224b6:	jmp    0x1400224d5
   1400224b8:	mov    rsi,QWORD PTR [rsi+0x10]
   1400224bc:	mov    rax,QWORD PTR [rsi]
   1400224bf:	mov    rdi,QWORD PTR [rax+0x28]
   1400224c3:	mov    rcx,rdi
   1400224c6:	call   QWORD PTR [rip+0x101dc]        # 0x1400326a8
   1400224cc:	mov    dl,0x1
   1400224ce:	mov    rcx,rsi
   1400224d1:	call   rdi
   1400224d3:	xor    edi,edi
   1400224d5:	test   rbx,rbx
   1400224d8:	je     0x1400224f6
   1400224da:	or     ecx,0xffffffff
   1400224dd:	lock xadd DWORD PTR [rbx+0x8],ecx
   1400224e2:	dec    ecx
   1400224e4:	cmp    ecx,0x80000000
   1400224ea:	jne    0x1400224f6
   1400224ec:	mov    rcx,QWORD PTR [rsp+0x40]
   1400224f1:	call   0x140029c90
   1400224f6:	mov    eax,edi
   1400224f8:	jmp    0x1400224ff
   1400224fa:	mov    eax,0x80070057
   1400224ff:	mov    rbx,QWORD PTR [rsp+0x48]
   140022504:	mov    rbp,QWORD PTR [rsp+0x50]
   140022509:	mov    rsi,QWORD PTR [rsp+0x58]
   14002250e:	add    rsp,0x30
   140022512:	pop    rdi
   140022513:	ret    
   140022514:	int3   
   140022515:	int3   
   140022516:	int3   
   140022517:	int3   
   140022518:	int3   
   140022519:	int3   
   14002251a:	int3   
   14002251b:	int3   
   14002251c:	mov    QWORD PTR [rsp+0x10],rbx
   140022521:	push   rdi
   140022522:	sub    rsp,0x60
   140022526:	mov    rax,QWORD PTR [rip+0x28af3]        # 0x14004b020
   14002252d:	xor    rax,rsp
   140022530:	mov    QWORD PTR [rsp+0x58],rax
   140022535:	lea    rdi,[rcx+0x48]
   140022539:	mov    rbx,rcx
   14002253c:	mov    rcx,QWORD PTR [rdi]
   14002253f:	test   rcx,rcx
   140022542:	je     0x14002254e
   140022544:	call   QWORD PTR [rip+0xff2e]        # 0x140032478
   14002254a:	and    QWORD PTR [rdi],0x0
   14002254e:	xor    r9d,r9d
   140022551:	mov    QWORD PTR [rsp+0x20],rdi
   140022556:	lea    r8,[rip+0xfffffffffffffcb3]        # 0x140022210
   14002255d:	mov    rdx,rbx
   140022560:	lea    rcx,[rip+0x154e1]        # 0x140037a48
   140022567:	call   QWORD PTR [rip+0xfe53]        # 0x1400323c0
   14002256d:	mov    edi,eax
   14002256f:	test   eax,eax
   140022571:	jns    0x140022599
   140022573:	mov    rcx,QWORD PTR [rip+0x28afe]        # 0x14004b078
   14002257a:	lea    rdx,[rip+0x28af7]        # 0x14004b078
   140022581:	cmp    rcx,rdx
   140022584:	je     0x1400226ec
   14002258a:	test   BYTE PTR [rcx+0x1c],0x1
   14002258e:	je     0x1400226ec
   140022594:	jmp    0x1400226d4
   140022599:	lea    rdi,[rbx+0x50]
   14002259d:	mov    rcx,QWORD PTR [rdi]
   1400225a0:	test   rcx,rcx
   1400225a3:	je     0x1400225af
   1400225a5:	call   QWORD PTR [rip+0xfecd]        # 0x140032478
   1400225ab:	and    QWORD PTR [rdi],0x0
   1400225af:	xor    r9d,r9d
   1400225b2:	mov    QWORD PTR [rsp+0x20],rdi
   1400225b7:	lea    r8,[rip+0xfffffffffffffd02]        # 0x1400222c0
   1400225be:	mov    rdx,rbx
   1400225c1:	lea    rcx,[rip+0x155b8]        # 0x140037b80
   1400225c8:	call   QWORD PTR [rip+0xfdf2]        # 0x1400323c0
   1400225ce:	mov    edi,eax
   1400225d0:	test   eax,eax
   1400225d2:	jns    0x1400225fa
   1400225d4:	mov    rcx,QWORD PTR [rip+0x28a9d]        # 0x14004b078
   1400225db:	lea    rdx,[rip+0x28a96]        # 0x14004b078
   1400225e2:	cmp    rcx,rdx
   1400225e5:	je     0x140022722
   1400225eb:	test   BYTE PTR [rcx+0x1c],0x1
   1400225ef:	je     0x140022722
   1400225f5:	jmp    0x14002270a
   1400225fa:	lea    rdi,[rbx+0x58]
   1400225fe:	mov    rcx,QWORD PTR [rdi]
   140022601:	test   rcx,rcx
   140022604:	je     0x140022610
   140022606:	call   QWORD PTR [rip+0xfe6c]        # 0x140032478
   14002260c:	and    QWORD PTR [rdi],0x0
   140022610:	xor    r9d,r9d
   140022613:	mov    QWORD PTR [rsp+0x20],rdi
   140022618:	lea    r8,[rip+0xfffffffffffffca1]        # 0x1400222c0
   14002261f:	mov    rdx,rbx
   140022622:	lea    rcx,[rip+0x155f7]        # 0x140037c20
   140022629:	call   QWORD PTR [rip+0xfd91]        # 0x1400323c0
   14002262f:	mov    edi,eax
   140022631:	test   eax,eax
   140022633:	jns    0x14002265b
   140022635:	mov    rcx,QWORD PTR [rip+0x28a3c]        # 0x14004b078
   14002263c:	lea    rdx,[rip+0x28a35]        # 0x14004b078
   140022643:	cmp    rcx,rdx
   140022646:	je     0x140022758
   14002264c:	test   BYTE PTR [rcx+0x1c],0x1
   140022650:	je     0x140022758
   140022656:	jmp    0x140022740
   14002265b:	lea    rdi,[rbx+0x60]
   14002265f:	mov    rcx,QWORD PTR [rdi]
   140022662:	test   rcx,rcx
   140022665:	je     0x140022671
   140022667:	call   QWORD PTR [rip+0xfe0b]        # 0x140032478
   14002266d:	and    QWORD PTR [rdi],0x0
   140022671:	xor    r9d,r9d
   140022674:	mov    QWORD PTR [rsp+0x20],rdi
   140022679:	lea    r8,[rip+0xfffffffffffffc40]        # 0x1400222c0
   140022680:	mov    rdx,rbx
   140022683:	lea    rcx,[rip+0x155e6]        # 0x140037c70
   14002268a:	call   QWORD PTR [rip+0xfd30]        # 0x1400323c0
   140022690:	mov    ebx,eax
   140022692:	test   eax,eax
   140022694:	jns    0x1400226bc
   140022696:	mov    rcx,QWORD PTR [rip+0x289db]        # 0x14004b078
   14002269d:	lea    rdx,[rip+0x289d4]        # 0x14004b078
   1400226a4:	cmp    rcx,rdx
   1400226a7:	je     0x14002278e
   1400226ad:	test   BYTE PTR [rcx+0x1c],0x1
   1400226b1:	je     0x14002278e
   1400226b7:	jmp    0x140022776
   1400226bc:	mov    rcx,QWORD PTR [rsp+0x58]
   1400226c1:	xor    rcx,rsp
   1400226c4:	call   0x14002dd00
   1400226c9:	mov    rbx,QWORD PTR [rsp+0x78]
   1400226ce:	add    rsp,0x60
   1400226d2:	pop    rdi
   1400226d3:	ret    
   1400226d4:	mov    rcx,QWORD PTR [rcx+0x10]
   1400226d8:	lea    r8,[rip+0x16109]        # 0x1400387e8
   1400226df:	mov    edx,0x17
   1400226e4:	mov    r9d,eax
   1400226e7:	call   0x140001f70
   1400226ec:	mov    edx,edi
   1400226ee:	lea    rcx,[rsp+0x30]
   1400226f3:	call   0x140002064
   1400226f8:	lea    rdx,[rip+0x26a89]        # 0x140049188
   1400226ff:	lea    rcx,[rsp+0x30]
   140022704:	call   0x14002e2da
   140022709:	int3   
   14002270a:	mov    rcx,QWORD PTR [rcx+0x10]
   14002270e:	lea    r8,[rip+0x160d3]        # 0x1400387e8
   140022715:	mov    edx,0x18
   14002271a:	mov    r9d,eax
   14002271d:	call   0x140001f70
   140022722:	mov    edx,edi
   140022724:	lea    rcx,[rsp+0x30]
   140022729:	call   0x140002064
   14002272e:	lea    rdx,[rip+0x26a53]        # 0x140049188
   140022735:	lea    rcx,[rsp+0x30]
   14002273a:	call   0x14002e2da
   14002273f:	int3   
   140022740:	mov    rcx,QWORD PTR [rcx+0x10]
   140022744:	lea    r8,[rip+0x1609d]        # 0x1400387e8
   14002274b:	mov    edx,0x19
   140022750:	mov    r9d,eax
   140022753:	call   0x140001f70
   140022758:	mov    edx,edi
   14002275a:	lea    rcx,[rsp+0x30]
   14002275f:	call   0x140002064
   140022764:	lea    rdx,[rip+0x26a1d]        # 0x140049188
   14002276b:	lea    rcx,[rsp+0x30]
   140022770:	call   0x14002e2da
   140022775:	int3   
   140022776:	mov    rcx,QWORD PTR [rcx+0x10]
   14002277a:	lea    r8,[rip+0x16067]        # 0x1400387e8
   140022781:	mov    edx,0x1a
   140022786:	mov    r9d,eax
   140022789:	call   0x140001f70
   14002278e:	mov    edx,ebx
   140022790:	lea    rcx,[rsp+0x30]
   140022795:	call   0x140002064
   14002279a:	lea    rdx,[rip+0x269e7]        # 0x140049188
   1400227a1:	lea    rcx,[rsp+0x30]
   1400227a6:	call   0x14002e2da
   1400227ab:	int3   
   1400227ac:	int3   
   1400227ad:	int3   
   1400227ae:	int3   
   1400227af:	int3   
   1400227b0:	int3   
   1400227b1:	int3   
   1400227b2:	int3   
   1400227b3:	int3   
   1400227b4:	mov    rax,rsp
   1400227b7:	push   rbp
   1400227b8:	push   rsi
   1400227b9:	push   rdi
   1400227ba:	push   r12
   1400227bc:	push   r13
   1400227be:	push   r14
   1400227c0:	push   r15
   1400227c2:	mov    rbp,rsp
   1400227c5:	sub    rsp,0x80
   1400227cc:	mov    QWORD PTR [rbp-0x10],0xfffffffffffffffe
   1400227d4:	mov    QWORD PTR [rax+0x8],rbx
   1400227d8:	mov    r13,rcx
   1400227db:	xor    r12d,r12d
   1400227de:	mov    QWORD PTR [rbp-0x18],r12
   1400227e2:	mov    QWORD PTR [rbp-0x20],r12
   1400227e6:	mov    QWORD PTR [rbp-0x28],r12
   1400227ea:	mov    QWORD PTR [rbp-0x30],r12
   1400227ee:	mov    edi,r12d
   1400227f1:	mov    QWORD PTR [rbp+0x48],r12
   1400227f5:	mov    rbx,QWORD PTR [rdx+0x8]
   1400227f9:	mov    r14d,DWORD PTR [rdx+0x4]
   1400227fd:	lea    ecx,[r12+0x60]
   140022802:	call   QWORD PTR [rip+0xfdc8]        # 0x1400325d0
   140022808:	mov    rsi,rax
   14002280b:	lea    r15d,[r12+0x1]
   140022810:	test   rax,rax
   140022813:	je     0x140022846
   140022815:	mov    DWORD PTR [rax+0x8],r12d
   140022819:	mov    DWORD PTR [rax+0x10],r15d
   14002281d:	mov    QWORD PTR [rax+0x18],r12
   140022821:	mov    QWORD PTR [rax+0x28],r12
   140022825:	mov    QWORD PTR [rax+0x30],r12
   140022829:	mov    QWORD PTR [rax+0x38],r12
   14002282d:	mov    QWORD PTR [rax+0x40],r12
   140022831:	mov    WORD PTR [rax+0x48],r12w
   140022836:	mov    BYTE PTR [rax+0x4a],r12b
   14002283a:	lea    rax,[rip+0x1235f]        # 0x140034ba0
   140022841:	mov    QWORD PTR [rsi],rax
   140022844:	jmp    0x140022849
   140022846:	mov    rsi,r12
   140022849:	lea    rax,[rip+0x28828]        # 0x14004b078
   140022850:	test   rsi,rsi
   140022853:	jne    0x140022860
   140022855:	mov    r14d,0x8007000e
   14002285b:	mov    r15d,r14d
   14002285e:	jmp    0x1400228d8
   140022860:	mov    eax,DWORD PTR [rsi+0x8]
   140022863:	test   eax,eax
   140022865:	jne    0x14002286d
   140022867:	mov    DWORD PTR [rsi+0x8],r15d
   14002286b:	jmp    0x140022872
   14002286d:	lock add DWORD PTR [rsi+0x8],r15d
   140022872:	mov    r8,rbx
   140022875:	mov    rdx,r14
   140022878:	mov    rcx,rsi
   14002287b:	call   0x140029414
   140022880:	mov    r14d,eax
   140022883:	test   eax,eax
   140022885:	jns    0x1400228bf
   140022887:	mov    eax,DWORD PTR [rsi+0x8]
   14002288a:	cmp    eax,r15d
   14002288d:	jne    0x140022895
   14002288f:	mov    DWORD PTR [rsi+0x8],r12d
   140022893:	jmp    0x1400228a2
   140022895:	or     eax,0xffffffff
   140022898:	lock xadd DWORD PTR [rsi+0x8],eax
   14002289d:	sub    eax,r15d
   1400228a0:	jg     0x1400228b9
   1400228a2:	mov    rax,QWORD PTR [rsi]
   1400228a5:	mov    rbx,QWORD PTR [rax]
   1400228a8:	mov    rcx,rbx
   1400228ab:	call   QWORD PTR [rip+0xfdf7]        # 0x1400326a8
   1400228b1:	mov    edx,r15d
   1400228b4:	mov    rcx,rsi
   1400228b7:	call   rbx
   1400228b9:	mov    rdi,QWORD PTR [rbp+0x48]
   1400228bd:	jmp    0x1400228c9
   1400228bf:	mov    rdi,rsi
   1400228c2:	mov    QWORD PTR [rbp+0x48],rsi
   1400228c6:	mov    r14d,r12d
   1400228c9:	mov    r15d,r14d
   1400228cc:	test   r14d,r14d
   1400228cf:	jns    0x14002290f
   1400228d1:	lea    rax,[rip+0x287a0]        # 0x14004b078
   1400228d8:	mov    rcx,QWORD PTR [rip+0x28799]        # 0x14004b078
   1400228df:	cmp    rcx,rax
   1400228e2:	je     0x1400229e2
   1400228e8:	test   BYTE PTR [rcx+0x1c],0x1
   1400228ec:	je     0x1400229e2
   1400228f2:	mov    edx,0x1c
   1400228f7:	mov    r9d,r14d
   1400228fa:	lea    r8,[rip+0x15ee7]        # 0x1400387e8
   140022901:	mov    rcx,QWORD PTR [rcx+0x10]
   140022905:	call   0x140001f70
   14002290a:	jmp    0x1400229e2
   14002290f:	mov    r14,QWORD PTR [rdi+0x50]
   140022913:	cmp    r12w,WORD PTR [r14]
   140022917:	jne    0x140022952
   140022919:	mov    rcx,QWORD PTR [rip+0x28758]        # 0x14004b078
   140022920:	lea    r13,[rip+0x28751]        # 0x14004b078
   140022927:	cmp    rcx,r13
   14002292a:	je     0x140022947
   14002292c:	test   BYTE PTR [rcx+0x1c],0x1
   140022930:	je     0x140022947
   140022932:	mov    edx,0x1d
   140022937:	lea    r8,[rip+0x15eaa]        # 0x1400387e8
   14002293e:	mov    rcx,QWORD PTR [rcx+0x10]
   140022942:	call   0x140001f08
   140022947:	mov    r15d,0x80070057
   14002294d:	jmp    0x1400229e9
   140022952:	mov    rsi,QWORD PTR [r13+0x10]
   140022956:	mov    rax,QWORD PTR [rsi]
   140022959:	mov    rbx,QWORD PTR [rax+0x10]
   14002295d:	mov    rcx,rbx
   140022960:	call   QWORD PTR [rip+0xfd42]        # 0x1400326a8
   140022966:	lea    rax,[rbp-0x30]
   14002296a:	mov    QWORD PTR [rsp+0x48],rax
   14002296f:	lea    rax,[rbp-0x28]
   140022973:	mov    QWORD PTR [rsp+0x40],rax
   140022978:	lea    rax,[rbp-0x20]
   14002297c:	mov    QWORD PTR [rsp+0x38],rax
   140022981:	lea    rax,[rbp-0x18]
   140022985:	mov    QWORD PTR [rsp+0x30],rax
   14002298a:	mov    al,BYTE PTR [rdi+0x5b]
   14002298d:	mov    BYTE PTR [rsp+0x28],al
   140022991:	mov    al,BYTE PTR [rdi+0x5a]
   140022994:	mov    BYTE PTR [rsp+0x20],al
   140022998:	mov    r9b,BYTE PTR [rdi+0x59]
   14002299c:	mov    r8b,BYTE PTR [rdi+0x58]
   1400229a0:	mov    rdx,r14
   1400229a3:	mov    rcx,rsi
   1400229a6:	call   rbx
   1400229a8:	mov    r15d,eax
   1400229ab:	test   eax,eax
   1400229ad:	jns    0x1400229fb
   1400229af:	mov    rcx,QWORD PTR [rip+0x286c2]        # 0x14004b078
   1400229b6:	lea    r13,[rip+0x286bb]        # 0x14004b078
   1400229bd:	cmp    rcx,r13
   1400229c0:	je     0x1400229e9
   1400229c2:	test   BYTE PTR [rcx+0x1c],0x1
   1400229c6:	je     0x1400229e9
   1400229c8:	mov    edx,0x1e
   1400229cd:	mov    r9d,eax
   1400229d0:	lea    r8,[rip+0x15e11]        # 0x1400387e8
   1400229d7:	mov    rcx,QWORD PTR [rcx+0x10]
   1400229db:	call   0x140001f70
   1400229e0:	jmp    0x1400229e9
   1400229e2:	lea    r13,[rip+0x2868f]        # 0x14004b078
   1400229e9:	mov    QWORD PTR [rbp-0x18],r12
   1400229ed:	mov    QWORD PTR [rbp-0x20],r12
   1400229f1:	mov    QWORD PTR [rbp-0x28],r12
   1400229f5:	mov    QWORD PTR [rbp-0x30],r12
   1400229f9:	jmp    0x140022a02
   1400229fb:	lea    r13,[rip+0x28676]        # 0x14004b078
   140022a02:	mov    rbx,r12
   140022a05:	mov    QWORD PTR [rbp+0x58],rbx
   140022a09:	mov    QWORD PTR [rbp+0x50],r12
   140022a0d:	lea    rcx,[rbp+0x50]
   140022a11:	call   0x140022fec
   140022a16:	mov    esi,eax
   140022a18:	mov    r14d,0x1
   140022a1e:	test   eax,eax
   140022a20:	jns    0x140022a4a
   140022a22:	mov    rax,QWORD PTR [rbp+0x50]
   140022a26:	test   rax,rax
   140022a29:	je     0x140022ad1
   140022a2f:	mov    ecx,DWORD PTR [rax+0x8]
   140022a32:	cmp    ecx,r14d
   140022a35:	jne    0x140022a3d
   140022a37:	mov    DWORD PTR [rax+0x8],r12d
   140022a3b:	jmp    0x140022aa1
   140022a3d:	or     ecx,0xffffffff
   140022a40:	lock xadd DWORD PTR [rax+0x8],ecx
   140022a45:	sub    ecx,r14d
   140022a48:	jmp    0x140022a9f
   140022a4a:	mov    r9,QWORD PTR [rbp-0x30]
   140022a4e:	mov    r8,QWORD PTR [rbp-0x28]
   140022a52:	movsxd rdx,r15d
   140022a55:	mov    rcx,QWORD PTR [rbp-0x20]
   140022a59:	mov    rbx,QWORD PTR [rbp+0x50]
   140022a5d:	mov    rax,QWORD PTR [rbp-0x18]
   140022a61:	mov    QWORD PTR [rbx+0x50],rax
   140022a65:	mov    QWORD PTR [rbx+0x58],rcx
   140022a69:	mov    QWORD PTR [rbx+0x60],rdx
   140022a6d:	mov    QWORD PTR [rbx+0x68],r8
   140022a71:	mov    QWORD PTR [rbx+0x70],r9
   140022a75:	mov    dl,r14b
   140022a78:	mov    rcx,rbx
   140022a7b:	call   0x14002965c
   140022a80:	mov    esi,eax
   140022a82:	test   eax,eax
   140022a84:	jns    0x140022ac6
   140022a86:	mov    eax,DWORD PTR [rbx+0x8]
   140022a89:	cmp    eax,r14d
   140022a8c:	jne    0x140022a94
   140022a8e:	mov    DWORD PTR [rbx+0x8],r12d
   140022a92:	jmp    0x140022aa1
   140022a94:	or     eax,0xffffffff
   140022a97:	lock xadd DWORD PTR [rbx+0x8],eax
   140022a9c:	sub    eax,r14d
   140022a9f:	jg     0x140022abc
   140022aa1:	mov    rbx,QWORD PTR [rbp+0x50]
   140022aa5:	mov    rax,QWORD PTR [rbx]
   140022aa8:	mov    rdi,QWORD PTR [rax]
   140022aab:	mov    rcx,rdi
   140022aae:	call   QWORD PTR [rip+0xfbf4]        # 0x1400326a8
   140022ab4:	mov    edx,r14d
   140022ab7:	mov    rcx,rbx
   140022aba:	call   rdi
   140022abc:	mov    rdi,QWORD PTR [rbp+0x48]
   140022ac0:	mov    rbx,QWORD PTR [rbp+0x58]
   140022ac4:	jmp    0x140022ad1
   140022ac6:	mov    QWORD PTR [rbp+0x50],r12
   140022aca:	mov    QWORD PTR [rbp+0x58],rbx
   140022ace:	mov    esi,r12d
   140022ad1:	test   esi,esi
   140022ad3:	jns    0x140022af1
   140022ad5:	mov    rcx,QWORD PTR [rip+0x2859c]        # 0x14004b078
   140022adc:	cmp    rcx,r13
   140022adf:	je     0x140022b2e
   140022ae1:	test   BYTE PTR [rcx+0x1c],r14b
   140022ae5:	je     0x140022b2e
   140022ae7:	mov    edx,0x1f
   140022aec:	mov    r9d,esi
   140022aef:	jmp    0x140022b19
   140022af1:	mov    rcx,rbx
   140022af4:	call   0x140022dd4
   140022af9:	mov    esi,eax
   140022afb:	test   eax,eax
   140022afd:	jns    0x140022b2b
   140022aff:	mov    rcx,QWORD PTR [rip+0x28572]        # 0x14004b078
   140022b06:	cmp    rcx,r13
   140022b09:	je     0x140022b2e
   140022b0b:	test   BYTE PTR [rcx+0x1c],r14b
   140022b0f:	je     0x140022b2e
   140022b11:	mov    edx,0x20
   140022b16:	mov    r9d,eax
   140022b19:	lea    r8,[rip+0x15cc8]        # 0x1400387e8
   140022b20:	mov    rcx,QWORD PTR [rcx+0x10]
   140022b24:	call   0x140001f70
   140022b29:	jmp    0x140022b2e
   140022b2b:	mov    esi,r12d
   140022b2e:	test   rbx,rbx
   140022b31:	je     0x140022b6d
   140022b33:	mov    eax,DWORD PTR [rbx+0x8]
   140022b36:	cmp    eax,r14d
   140022b39:	jne    0x140022b41
   140022b3b:	mov    DWORD PTR [rbx+0x8],r12d
   140022b3f:	jmp    0x140022b4e
   140022b41:	or     eax,0xffffffff
   140022b44:	lock xadd DWORD PTR [rbx+0x8],eax
   140022b49:	sub    eax,0x1
   140022b4c:	jg     0x140022b69
   140022b4e:	mov    rbx,QWORD PTR [rbp+0x58]
   140022b52:	mov    rax,QWORD PTR [rbx]
   140022b55:	mov    rdi,QWORD PTR [rax]
   140022b58:	mov    rcx,rdi
   140022b5b:	call   QWORD PTR [rip+0xfb47]        # 0x1400326a8
   140022b61:	mov    edx,r14d
   140022b64:	mov    rcx,rbx
   140022b67:	call   rdi
   140022b69:	mov    rdi,QWORD PTR [rbp+0x48]
   140022b6d:	test   rdi,rdi
   140022b70:	je     0x140022ba8
   140022b72:	mov    eax,DWORD PTR [rdi+0x8]
   140022b75:	cmp    eax,r14d
   140022b78:	jne    0x140022b80
   140022b7a:	mov    DWORD PTR [rdi+0x8],r12d
   140022b7e:	jmp    0x140022b8d
   140022b80:	or     eax,0xffffffff
   140022b83:	lock xadd DWORD PTR [rdi+0x8],eax
   140022b88:	sub    eax,0x1
   140022b8b:	jg     0x140022ba8
   140022b8d:	mov    rbx,QWORD PTR [rbp+0x48]
   140022b91:	mov    rcx,QWORD PTR [rbx]
   140022b94:	mov    rdi,QWORD PTR [rcx]
   140022b97:	mov    rcx,rdi
   140022b9a:	call   QWORD PTR [rip+0xfb08]        # 0x1400326a8
   140022ba0:	mov    edx,r14d
   140022ba3:	mov    rcx,rbx
   140022ba6:	call   rdi
   140022ba8:	mov    eax,esi
   140022baa:	mov    rbx,QWORD PTR [rsp+0xc0]
   140022bb2:	add    rsp,0x80
   140022bb9:	pop    r15
   140022bbb:	pop    r14
   140022bbd:	pop    r13
   140022bbf:	pop    r12
   140022bc1:	pop    rdi
   140022bc2:	pop    rsi
   140022bc3:	pop    rbp
   140022bc4:	ret    
   140022bc5:	int3   
   140022bc6:	int3   
   140022bc7:	int3   
   140022bc8:	int3   
   140022bc9:	int3   
   140022bca:	int3   
   140022bcb:	int3   
   140022bcc:	int3   
   140022bcd:	int3   
   140022bce:	int3   
   140022bcf:	int3   
   140022bd0:	mov    rax,rsp
   140022bd3:	push   rbp
   140022bd4:	lea    rbp,[rax-0x5f]
   140022bd8:	sub    rsp,0x90
   140022bdf:	mov    QWORD PTR [rbp-0x9],0xfffffffffffffffe
   140022be7:	mov    QWORD PTR [rax+0x8],rbx
   140022beb:	mov    QWORD PTR [rax+0x10],rsi
   140022bef:	mov    QWORD PTR [rax+0x18],rdi
   140022bf3:	mov    QWORD PTR [rax+0x20],r14
   140022bf7:	mov    rax,QWORD PTR [rip+0x28422]        # 0x14004b020
   140022bfe:	xor    rax,rsp
   140022c01:	mov    QWORD PTR [rbp+0x4f],rax
   140022c05:	mov    rdi,r8
   140022c08:	mov    rsi,rdx
   140022c0b:	xor    ebx,ebx
   140022c0d:	mov    QWORD PTR [rbp-0x11],rbx
   140022c11:	and    QWORD PTR [rbp-0x19],rbx
   140022c15:	lea    rcx,[rbp-0x19]
   140022c19:	call   0x140023088
   140022c1e:	mov    r14d,eax
   140022c21:	test   eax,eax
   140022c23:	jns    0x140022c6d
   140022c25:	lea    esi,[rbx+0x1]
   140022c28:	mov    rax,QWORD PTR [rbp-0x19]
   140022c2c:	test   rax,rax
   140022c2f:	je     0x140022cb8
   140022c35:	mov    ecx,DWORD PTR [rax+0x8]
   140022c38:	cmp    ecx,esi
   140022c3a:	jne    0x140022c41
   140022c3c:	mov    DWORD PTR [rax+0x8],ebx
   140022c3f:	jmp    0x140022c4d
   140022c41:	or     ecx,0xffffffff
   140022c44:	lock xadd DWORD PTR [rax+0x8],ecx
   140022c49:	sub    ecx,esi
   140022c4b:	jg     0x140022c67
   140022c4d:	mov    rbx,QWORD PTR [rbp-0x19]
   140022c51:	mov    rax,QWORD PTR [rbx]
   140022c54:	mov    rdi,QWORD PTR [rax]
   140022c57:	mov    rcx,rdi
   140022c5a:	call   QWORD PTR [rip+0xfa48]        # 0x1400326a8
   140022c60:	mov    edx,esi
   140022c62:	mov    rcx,rbx
   140022c65:	call   rdi
   140022c67:	mov    rbx,QWORD PTR [rbp-0x11]
   140022c6b:	jmp    0x140022cb8
   140022c6d:	mov    rbx,QWORD PTR [rbp-0x19]
   140022c71:	mov    QWORD PTR [rbx+0x50],rdi
   140022c75:	mov    QWORD PTR [rbx+0x58],rsi
   140022c79:	mov    esi,0x1
   140022c7e:	mov    dl,sil
   140022c81:	mov    rcx,rbx
   140022c84:	call   0x14002965c
   140022c89:	mov    r14d,eax
   140022c8c:	test   eax,eax
   140022c8e:	jns    0x140022cac
   140022c90:	mov    eax,DWORD PTR [rbx+0x8]
   140022c93:	cmp    eax,esi
   140022c95:	jne    0x140022ca0
   140022c97:	mov    DWORD PTR [rbx+0x8],0x0
   140022c9e:	jmp    0x140022c4d
   140022ca0:	or     eax,0xffffffff
   140022ca3:	lock xadd DWORD PTR [rbx+0x8],eax
   140022ca8:	sub    eax,esi
   140022caa:	jmp    0x140022c4b
   140022cac:	and    QWORD PTR [rbp-0x19],0x0
   140022cb1:	mov    QWORD PTR [rbp-0x11],rbx
   140022cb5:	xor    r14d,r14d
   140022cb8:	test   r14d,r14d
   140022cbb:	jns    0x140022d0b
   140022cbd:	lea    rax,[rip+0x283b4]        # 0x14004b078
   140022cc4:	mov    rcx,QWORD PTR [rip+0x283ad]        # 0x14004b078
   140022ccb:	cmp    rcx,rax
   140022cce:	je     0x140022cee
   140022cd0:	test   BYTE PTR [rcx+0x1c],sil
   140022cd4:	je     0x140022cee
   140022cd6:	mov    edx,0x21
   140022cdb:	mov    r9d,r14d
   140022cde:	lea    r8,[rip+0x15b03]        # 0x1400387e8
   140022ce5:	mov    rcx,QWORD PTR [rcx+0x10]
   140022ce9:	call   0x140001f70
   140022cee:	mov    edx,r14d
   140022cf1:	lea    rcx,[rbp-0x1]
   140022cf5:	call   0x140002064
   140022cfa:	lea    rdx,[rip+0x26487]        # 0x140049188
   140022d01:	lea    rcx,[rbp-0x1]
   140022d05:	call   0x14002e2da
   140022d0a:	int3   
   140022d0b:	mov    rcx,rbx
   140022d0e:	call   0x140022dd4
   140022d13:	mov    edi,eax
   140022d15:	test   eax,eax
   140022d17:	jns    0x140022d66
   140022d19:	lea    rax,[rip+0x28358]        # 0x14004b078
   140022d20:	mov    rcx,QWORD PTR [rip+0x28351]        # 0x14004b078
   140022d27:	cmp    rcx,rax
   140022d2a:	je     0x140022d4a
   140022d2c:	test   BYTE PTR [rcx+0x1c],sil
   140022d30:	je     0x140022d4a
   140022d32:	mov    edx,0x22
   140022d37:	mov    r9d,edi
   140022d3a:	lea    r8,[rip+0x15aa7]        # 0x1400387e8
   140022d41:	mov    rcx,QWORD PTR [rcx+0x10]
   140022d45:	call   0x140001f70
   140022d4a:	mov    edx,edi
   140022d4c:	lea    rcx,[rbp+0x27]
   140022d50:	call   0x140002064
   140022d55:	lea    rdx,[rip+0x2642c]        # 0x140049188
   140022d5c:	lea    rcx,[rbp+0x27]
   140022d60:	call   0x14002e2da
   140022d65:	nop
   140022d66:	test   rbx,rbx
   140022d69:	je     0x140022da2
   140022d6b:	mov    eax,DWORD PTR [rbx+0x8]
   140022d6e:	cmp    eax,esi
   140022d70:	jne    0x140022d7b
   140022d72:	mov    DWORD PTR [rbx+0x8],0x0
   140022d79:	jmp    0x140022d88
   140022d7b:	or     eax,0xffffffff
   140022d7e:	lock xadd DWORD PTR [rbx+0x8],eax
   140022d83:	sub    eax,0x1
   140022d86:	jg     0x140022da2
   140022d88:	mov    rbx,QWORD PTR [rbp-0x11]
   140022d8c:	mov    rax,QWORD PTR [rbx]
   140022d8f:	mov    rdi,QWORD PTR [rax]
   140022d92:	mov    rcx,rdi
   140022d95:	call   QWORD PTR [rip+0xf90d]        # 0x1400326a8
   140022d9b:	mov    edx,esi
   140022d9d:	mov    rcx,rbx
   140022da0:	call   rdi
   140022da2:	mov    rcx,QWORD PTR [rbp+0x4f]
   140022da6:	xor    rcx,rsp
   140022da9:	call   0x14002dd00
   140022dae:	lea    r11,[rsp+0x90]
   140022db6:	mov    rbx,QWORD PTR [r11+0x10]
   140022dba:	mov    rsi,QWORD PTR [r11+0x18]
   140022dbe:	mov    rdi,QWORD PTR [r11+0x20]
   140022dc2:	mov    r14,QWORD PTR [r11+0x28]
   140022dc6:	mov    rsp,r11
   140022dc9:	pop    rbp
   140022dca:	ret    
   140022dcb:	int3   
   140022dcc:	int3   
   140022dcd:	int3   
   140022dce:	int3   
   140022dcf:	int3   
   140022dd0:	int3   
   140022dd1:	int3   
   140022dd2:	int3   
   140022dd3:	int3   
   140022dd4:	rex push rbx
   140022dd6:	sub    rsp,0x20
   140022dda:	mov    rdx,QWORD PTR [rcx+0x18]
   140022dde:	test   rdx,rdx
   140022de1:	jne    0x140022de7
   140022de3:	lea    rdx,[rcx+0x20]
   140022de7:	mov    eax,DWORD PTR [rcx+0x10]
   140022dea:	lea    r9,[rsp+0x30]
   140022def:	and    QWORD PTR [rsp+0x30],0x0
   140022df5:	lea    r8,[rsp+0x38]
   140022dfa:	and    QWORD PTR [rsp+0x38],0x0
   140022e00:	mov    DWORD PTR [rdx],eax
   140022e02:	mov    eax,DWORD PTR [rcx+0x28]
   140022e05:	mov    DWORD PTR [rdx+0x4],eax
   140022e08:	lea    rcx,[rax+0x8]
   140022e0c:	call   0x140029794
   140022e11:	mov    ebx,eax
   140022e13:	test   eax,eax
   140022e15:	jns    0x140022e48
   140022e17:	mov    rcx,QWORD PTR [rip+0x2825a]        # 0x14004b078
   140022e1e:	lea    rax,[rip+0x28253]        # 0x14004b078
   140022e25:	cmp    rcx,rax
   140022e28:	je     0x140022e48
   140022e2a:	test   BYTE PTR [rcx+0x1c],0x1
   140022e2e:	je     0x140022e48
   140022e30:	mov    rcx,QWORD PTR [rcx+0x10]
   140022e34:	lea    r8,[rip+0x159ad]        # 0x1400387e8
   140022e3b:	mov    edx,0x23
   140022e40:	mov    r9d,ebx
   140022e43:	call   0x140001f70
   140022e48:	mov    rcx,QWORD PTR [rsp+0x30]
   140022e4d:	test   rcx,rcx
   140022e50:	je     0x140022e58
   140022e52:	call   QWORD PTR [rip+0xf5f0]        # 0x140032448
   140022e58:	mov    eax,ebx
   140022e5a:	add    rsp,0x20
   140022e5e:	pop    rbx
   140022e5f:	ret    
   140022e60:	int3   
   140022e61:	int3   
   140022e62:	int3   
   140022e63:	int3   
   140022e64:	int3   
   140022e65:	int3   
   140022e66:	int3   
   140022e67:	int3   
   140022e68:	int3   
   140022e69:	int3   
   140022e6a:	int3   
   140022e6b:	int3   
   140022e6c:	int3   
   140022e6d:	int3   
   140022e6e:	int3   
   140022e6f:	int3   
   140022e70:	mov    eax,DWORD PTR [rcx+0x8]
   140022e73:	mov    rdx,rcx
   140022e76:	test   eax,eax
   140022e78:	mov    eax,0x1
   140022e7d:	jne    0x140022e83
   140022e7f:	mov    DWORD PTR [rcx+0x8],eax
   140022e82:	ret    
   140022e83:	mov    ecx,eax
   140022e85:	lock xadd DWORD PTR [rdx+0x8],ecx
   140022e8a:	add    eax,ecx
   140022e8c:	ret    
   140022e8d:	int3   
   140022e8e:	int3   
   140022e8f:	int3   
   140022e90:	int3   
   140022e91:	int3   
   140022e92:	int3   
   140022e93:	int3   
   140022e94:	int3   
   140022e95:	int3   
   140022e96:	int3   
   140022e97:	int3   
   140022e98:	int3   
   140022e99:	int3   
   140022e9a:	int3   
   140022e9b:	int3   
   140022e9c:	int3   
   140022e9d:	int3   
   140022e9e:	int3   
   140022e9f:	int3   
   140022ea0:	mov    QWORD PTR [rsp+0x8],rbx
   140022ea5:	push   rdi
   140022ea6:	sub    rsp,0x20
   140022eaa:	mov    eax,DWORD PTR [rcx+0x8]
   140022ead:	mov    rdi,rcx
   140022eb0:	cmp    eax,0x1
   140022eb3:	jne    0x140022ebe
   140022eb5:	mov    DWORD PTR [rcx+0x8],0x0
   140022ebc:	jmp    0x140022ecb
   140022ebe:	or     eax,0xffffffff
   140022ec1:	lock xadd DWORD PTR [rcx+0x8],eax
   140022ec6:	sub    eax,0x1
   140022ec9:	jg     0x140022eec
   140022ecb:	test   rcx,rcx
   140022ece:	je     0x140022eea
   140022ed0:	mov    rax,QWORD PTR [rcx]
   140022ed3:	mov    rbx,QWORD PTR [rax+0x38]
   140022ed7:	mov    rcx,rbx
   140022eda:	call   QWORD PTR [rip+0xf7c8]        # 0x1400326a8
   140022ee0:	mov    edx,0x1
   140022ee5:	mov    rcx,rdi
   140022ee8:	call   rbx
   140022eea:	xor    eax,eax
   140022eec:	mov    rbx,QWORD PTR [rsp+0x30]
   140022ef1:	add    rsp,0x20
   140022ef5:	pop    rdi
   140022ef6:	ret    
   140022ef7:	int3   
   140022ef8:	int3   
   140022ef9:	int3   
   140022efa:	int3   
   140022efb:	int3   
   140022efc:	int3   
   140022efd:	int3   
   140022efe:	int3   
   140022eff:	int3   
   140022f00:	sub    rsp,0x28
   140022f04:	mov    rcx,QWORD PTR [rcx]
   140022f07:	test   rcx,rcx
   140022f0a:	je     0x140022f12
   140022f0c:	call   QWORD PTR [rip+0xf4ee]        # 0x140032400
   140022f12:	add    rsp,0x28
   140022f16:	ret    
   140022f17:	int3   
   140022f18:	int3   
   140022f19:	int3   
   140022f1a:	int3   
   140022f1b:	int3   
   140022f1c:	int3   
   140022f1d:	int3   
   140022f1e:	int3   
   140022f1f:	int3   
   140022f20:	rex push rbx
   140022f22:	sub    rsp,0x20
   140022f26:	lea    rax,[rip+0x11c13]        # 0x140034b40
   140022f2d:	mov    rbx,rcx
   140022f30:	mov    QWORD PTR [rcx],rax
   140022f33:	test   dl,0x1
   140022f36:	je     0x140022f3e
   140022f38:	call   QWORD PTR [rip+0xf68a]        # 0x1400325c8
   140022f3e:	mov    rax,rbx
   140022f41:	add    rsp,0x20
   140022f45:	pop    rbx
   140022f46:	ret    
   140022f47:	int3   
   140022f48:	int3   
   140022f49:	int3   
   140022f4a:	int3   
   140022f4b:	int3   
   140022f4c:	int3   
   140022f4d:	int3   
   140022f4e:	int3   
   140022f4f:	int3   
   140022f50:	rex push rbx
   140022f52:	sub    rsp,0x30
   140022f56:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140022f5f:	mov    rbx,rcx
   140022f62:	mov    ecx,0x68
   140022f67:	call   QWORD PTR [rip+0xf663]        # 0x1400325d0
   140022f6d:	mov    rdx,rax
   140022f70:	xor    r8d,r8d
   140022f73:	test   rax,rax
   140022f76:	je     0x140022fac
   140022f78:	mov    DWORD PTR [rax+0x8],r8d
   140022f7c:	mov    DWORD PTR [rax+0x10],0x5
   140022f83:	mov    QWORD PTR [rax+0x18],r8
   140022f87:	mov    QWORD PTR [rax+0x28],r8
   140022f8b:	mov    QWORD PTR [rax+0x30],r8
   140022f8f:	mov    QWORD PTR [rax+0x38],r8
   140022f93:	mov    QWORD PTR [rax+0x40],r8
   140022f97:	mov    WORD PTR [rax+0x48],r8w
   140022f9c:	mov    BYTE PTR [rax+0x4a],r8b
   140022fa0:	lea    rax,[rip+0x11c41]        # 0x140034be8
   140022fa7:	mov    QWORD PTR [rdx],rax
   140022faa:	jmp    0x140022faf
   140022fac:	mov    rdx,r8
   140022faf:	test   rdx,rdx
   140022fb2:	je     0x140022fcd
   140022fb4:	mov    eax,DWORD PTR [rdx+0x8]
   140022fb7:	test   eax,eax
   140022fb9:	jne    0x140022fc4
   140022fbb:	mov    DWORD PTR [rdx+0x8],0x1
   140022fc2:	jmp    0x140022fc8
   140022fc4:	lock inc DWORD PTR [rdx+0x8]
   140022fc8:	mov    QWORD PTR [rbx],rdx
   140022fcb:	jmp    0x140022fdc
   140022fcd:	mov    eax,0x8007000e
   140022fd2:	jmp    0x140022fde
   140022fd4:	mov    eax,DWORD PTR [rsp+0x48]
   140022fd8:	test   eax,eax
   140022fda:	js     0x140022fde
   140022fdc:	xor    eax,eax
   140022fde:	add    rsp,0x30
   140022fe2:	pop    rbx
   140022fe3:	ret    
   140022fe4:	int3   
   140022fe5:	int3   
   140022fe6:	int3   
   140022fe7:	int3   
   140022fe8:	int3   
   140022fe9:	int3   
   140022fea:	int3   
   140022feb:	int3   
   140022fec:	rex push rbx
   140022fee:	sub    rsp,0x30
   140022ff2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140022ffb:	mov    rbx,rcx
   140022ffe:	mov    ecx,0x78
   140023003:	call   QWORD PTR [rip+0xf5c7]        # 0x1400325d0
   140023009:	mov    rdx,rax
   14002300c:	xor    r8d,r8d
   14002300f:	test   rax,rax
   140023012:	je     0x140023048
   140023014:	mov    DWORD PTR [rax+0x8],r8d
   140023018:	mov    DWORD PTR [rax+0x10],0x3
   14002301f:	mov    QWORD PTR [rax+0x18],r8
   140023023:	mov    QWORD PTR [rax+0x28],r8
   140023027:	mov    QWORD PTR [rax+0x30],r8
   14002302b:	mov    QWORD PTR [rax+0x38],r8
   14002302f:	mov    QWORD PTR [rax+0x40],r8
   140023033:	mov    WORD PTR [rax+0x48],r8w
   140023038:	mov    BYTE PTR [rax+0x4a],r8b
   14002303c:	lea    rax,[rip+0x11b8d]        # 0x140034bd0
   140023043:	mov    QWORD PTR [rdx],rax
   140023046:	jmp    0x14002304b
   140023048:	mov    rdx,r8
   14002304b:	test   rdx,rdx
   14002304e:	je     0x140023069
   140023050:	mov    eax,DWORD PTR [rdx+0x8]
   140023053:	test   eax,eax
   140023055:	jne    0x140023060
   140023057:	mov    DWORD PTR [rdx+0x8],0x1
   14002305e:	jmp    0x140023064
   140023060:	lock inc DWORD PTR [rdx+0x8]
   140023064:	mov    QWORD PTR [rbx],rdx
   140023067:	jmp    0x140023078
   140023069:	mov    eax,0x8007000e
   14002306e:	jmp    0x14002307a
   140023070:	mov    eax,DWORD PTR [rsp+0x48]
   140023074:	test   eax,eax
   140023076:	js     0x14002307a
   140023078:	xor    eax,eax
   14002307a:	add    rsp,0x30
   14002307e:	pop    rbx
   14002307f:	ret    
   140023080:	int3   
   140023081:	int3   
   140023082:	int3   
   140023083:	int3   
   140023084:	int3   
   140023085:	int3   
   140023086:	int3   
   140023087:	int3   
   140023088:	rex push rbx
   14002308a:	sub    rsp,0x30
   14002308e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140023097:	mov    rbx,rcx
   14002309a:	mov    ecx,0x60
   14002309f:	call   QWORD PTR [rip+0xf52b]        # 0x1400325d0
   1400230a5:	mov    rdx,rax
   1400230a8:	xor    r8d,r8d
   1400230ab:	test   rax,rax
   1400230ae:	je     0x1400230e4
   1400230b0:	mov    DWORD PTR [rax+0x8],r8d
   1400230b4:	mov    DWORD PTR [rax+0x10],0x4
   1400230bb:	mov    QWORD PTR [rax+0x18],r8
   1400230bf:	mov    QWORD PTR [rax+0x28],r8
   1400230c3:	mov    QWORD PTR [rax+0x30],r8
   1400230c7:	mov    QWORD PTR [rax+0x38],r8
   1400230cb:	mov    QWORD PTR [rax+0x40],r8
   1400230cf:	mov    WORD PTR [rax+0x48],r8w
   1400230d4:	mov    BYTE PTR [rax+0x4a],r8b
   1400230d8:	lea    rax,[rip+0x11b21]        # 0x140034c00
   1400230df:	mov    QWORD PTR [rdx],rax
   1400230e2:	jmp    0x1400230e7
   1400230e4:	mov    rdx,r8
   1400230e7:	test   rdx,rdx
   1400230ea:	je     0x140023105
   1400230ec:	mov    eax,DWORD PTR [rdx+0x8]
   1400230ef:	test   eax,eax
   1400230f1:	jne    0x1400230fc
   1400230f3:	mov    DWORD PTR [rdx+0x8],0x1
   1400230fa:	jmp    0x140023100
   1400230fc:	lock inc DWORD PTR [rdx+0x8]
   140023100:	mov    QWORD PTR [rbx],rdx
   140023103:	jmp    0x140023114
   140023105:	mov    eax,0x8007000e
   14002310a:	jmp    0x140023116
   14002310c:	mov    eax,DWORD PTR [rsp+0x48]
   140023110:	test   eax,eax
   140023112:	js     0x140023116
   140023114:	xor    eax,eax
   140023116:	add    rsp,0x30
   14002311a:	pop    rbx
   14002311b:	ret    
   14002311c:	int3   
   14002311d:	int3   
   14002311e:	int3   
   14002311f:	int3   
   140023120:	int3   
   140023121:	int3   
   140023122:	int3   
   140023123:	int3   
   140023124:	mov    r11,rsp
   140023127:	mov    QWORD PTR [r11+0x8],rbx
   14002312b:	mov    QWORD PTR [r11+0x18],r8
   14002312f:	push   rdi
   140023130:	sub    rsp,0x20
   140023134:	mov    r8,QWORD PTR [rdx]
   140023137:	mov    rbx,rdx
   14002313a:	mov    rax,QWORD PTR [rdx+0x8]
   14002313e:	mov    rdi,rcx
   140023141:	sub    rax,r8
   140023144:	sar    rax,1
   140023147:	cmp    r8,QWORD PTR [rdx+0x8]
   14002314b:	mov    QWORD PTR [r11+0x18],rax
   14002314f:	cmove  r8,rdx
   140023153:	lea    rdx,[r11+0x18]
   140023157:	call   0x14002a7fc
   14002315c:	test   eax,eax
   14002315e:	js     0x1400231aa
   140023160:	mov    rax,QWORD PTR [rbx+0x8]
   140023164:	sub    rax,QWORD PTR [rbx]
   140023167:	mov    rdx,QWORD PTR [rsp+0x40]
   14002316c:	sar    rax,1
   14002316f:	cmp    rdx,rax
   140023172:	jbe    0x1400231a8
   140023174:	cmp    rdx,0x2000000
   14002317b:	jbe    0x140023184
   14002317d:	mov    eax,0x8007000e
   140023182:	jmp    0x1400231aa
   140023184:	mov    rcx,rbx
   140023187:	call   0x14000d198
   14002318c:	mov    r8,QWORD PTR [rbx]
   14002318f:	lea    rdx,[rsp+0x40]
   140023194:	cmp    r8,QWORD PTR [rbx+0x8]
   140023198:	mov    rcx,rdi
   14002319b:	cmove  r8,rbx
   14002319f:	call   0x14002a7fc
   1400231a4:	test   eax,eax
   1400231a6:	js     0x1400231aa
   1400231a8:	xor    eax,eax
   1400231aa:	mov    rbx,QWORD PTR [rsp+0x30]
   1400231af:	add    rsp,0x20
   1400231b3:	pop    rdi
   1400231b4:	ret    
   1400231b5:	int3   
   1400231b6:	int3   
   1400231b7:	int3   
   1400231b8:	int3   
   1400231b9:	int3   
   1400231ba:	int3   
   1400231bb:	int3   
   1400231bc:	mov    rax,rsp
   1400231bf:	mov    QWORD PTR [rax+0x8],rcx
   1400231c3:	push   rsi
   1400231c4:	push   rdi
   1400231c5:	push   r12
   1400231c7:	push   r14
   1400231c9:	push   r15
   1400231cb:	sub    rsp,0x60
   1400231cf:	mov    QWORD PTR [rax-0x50],0xfffffffffffffffe
   1400231d7:	mov    QWORD PTR [rax+0x10],rbx
   1400231db:	mov    rax,QWORD PTR [rip+0x27e3e]        # 0x14004b020
   1400231e2:	xor    rax,rsp
   1400231e5:	mov    QWORD PTR [rsp+0x50],rax
   1400231ea:	mov    r14,r8
   1400231ed:	mov    r15,rcx
   1400231f0:	mov    QWORD PTR [rsp+0x20],r8
   1400231f5:	xor    ebx,ebx
   1400231f7:	test   rcx,rcx
   1400231fa:	je     0x140023232
   1400231fc:	cmp    rdx,0x7fffffff
   140023203:	ja     0x140023232
   140023205:	mov    r8,rdx
   140023208:	mov    eax,ebx
   14002320a:	test   rdx,rdx
   14002320d:	je     0x14002322d
   14002320f:	cmp    WORD PTR [rcx],bx
   140023212:	je     0x14002321e
   140023214:	add    rcx,0x2
   140023218:	sub    r8,0x1
   14002321c:	jne    0x14002320f
   14002321e:	test   r8,r8
   140023221:	je     0x14002322d
   140023223:	sub    rdx,r8
   140023226:	mov    edi,0x80070057
   14002322b:	jmp    0x14002323e
   14002322d:	mov    rdx,rbx
   140023230:	jmp    0x140023237
   140023232:	mov    rdx,QWORD PTR [rsp+0x20]
   140023237:	mov    edi,0x80070057
   14002323c:	mov    eax,edi
   14002323e:	test   eax,eax
   140023240:	js     0x14002341d
   140023246:	cmp    rdx,0x4
   14002324a:	jae    0x140023253
   14002324c:	mov    eax,edi
   14002324e:	jmp    0x14002341d
   140023253:	lea    r12,[rdx-0x2]
   140023257:	mov    QWORD PTR [rsp+0x30],r12
   14002325c:	mov    ecx,0x3
   140023261:	lea    rax,[rsp+0x48]
   140023266:	mov    edx,ebx
   140023268:	lea    r9,[rsp+0x48]
   14002326d:	mov    r8,r15
   140023270:	sub    r8,r9
   140023273:	lea    r9,[rcx-0x1]
   140023277:	test   r9,r9
   14002327a:	je     0x140023297
   14002327c:	movzx  r10d,WORD PTR [r8+rax*1]
   140023281:	test   r10w,r10w
   140023285:	je     0x140023297
   140023287:	mov    WORD PTR [rax],r10w
   14002328b:	add    rax,0x2
   14002328f:	mov    rcx,r9
   140023292:	test   r9,r9
   140023295:	jne    0x140023273
   140023297:	test   rcx,rcx
   14002329a:	jne    0x1400232a5
   14002329c:	sub    rax,0x2
   1400232a0:	mov    edx,0x8007007a
   1400232a5:	mov    WORD PTR [rax],bx
   1400232a8:	test   edx,edx
   1400232aa:	js     0x14002341b
   1400232b0:	mov    rdx,r14
   1400232b3:	lea    rcx,[rsp+0x48]
   1400232b8:	call   0x140023448
   1400232bd:	test   eax,eax
   1400232bf:	js     0x14002341d
   1400232c5:	mov    rax,QWORD PTR [r14]
   1400232c8:	mov    rcx,QWORD PTR [r14+0x8]
   1400232cc:	sub    rcx,rax
   1400232cf:	sar    rcx,1
   1400232d2:	cmp    rax,QWORD PTR [r14+0x8]
   1400232d6:	cmove  rax,r14
   1400232da:	test   rax,rax
   1400232dd:	je     0x140023313
   1400232df:	cmp    rcx,0x7fffffff
   1400232e6:	ja     0x140023313
   1400232e8:	mov    rdx,rcx
   1400232eb:	mov    esi,ebx
   1400232ed:	test   rcx,rcx
   1400232f0:	je     0x14002330e
   1400232f2:	cmp    WORD PTR [rax],bx
   1400232f5:	je     0x140023301
   1400232f7:	add    rax,0x2
   1400232fb:	sub    rdx,0x1
   1400232ff:	jne    0x1400232f2
   140023301:	test   rdx,rdx
   140023304:	je     0x14002330e
   140023306:	mov    rax,rcx
   140023309:	sub    rax,rdx
   14002330c:	jmp    0x14002331a
   14002330e:	mov    rax,rbx
   140023311:	jmp    0x140023318
   140023313:	mov    rax,QWORD PTR [rsp+0x20]
   140023318:	mov    esi,edi
   14002331a:	test   esi,esi
   14002331c:	cmovs  rax,rbx
   140023320:	jns    0x140023329
   140023322:	mov    eax,esi
   140023324:	jmp    0x14002341d
   140023329:	lea    rdx,[r12+0x1]
   14002332e:	add    rdx,rax
   140023331:	cmp    rcx,rdx
   140023334:	jae    0x140023362
   140023336:	mov    rcx,r14
   140023339:	call   0x14000d198
   14002333e:	nop
   14002333f:	jmp    0x14002335e
   140023341:	xor    ebx,ebx
   140023343:	mov    edi,0x80070057
   140023348:	mov    r15,QWORD PTR [rsp+0x90]
   140023350:	mov    esi,DWORD PTR [rsp+0x28]
   140023354:	mov    r12,QWORD PTR [rsp+0x30]
   140023359:	mov    r14,QWORD PTR [rsp+0x20]
   14002335e:	test   esi,esi
   140023360:	js     0x140023322
   140023362:	mov    r8,QWORD PTR [r14]
   140023365:	mov    r10,QWORD PTR [r14+0x8]
   140023369:	sub    r10,r8
   14002336c:	sar    r10,1
   14002336f:	cmp    r8,QWORD PTR [r14+0x8]
   140023373:	cmove  r8,r14
   140023377:	lea    rax,[r10-0x1]
   14002337b:	mov    edx,ebx
   14002337d:	mov    r11d,0x7ffffffe
   140023383:	cmp    rax,r11
   140023386:	cmova  edx,edi
   140023389:	test   edx,edx
   14002338b:	js     0x1400233b8
   14002338d:	mov    rax,r10
   140023390:	mov    rcx,r8
   140023393:	mov    edx,ebx
   140023395:	test   r10,r10
   140023398:	je     0x1400233b6
   14002339a:	cmp    WORD PTR [rcx],bx
   14002339d:	je     0x1400233a9
   14002339f:	add    rcx,0x2
   1400233a3:	sub    rax,0x1
   1400233a7:	jne    0x14002339a
   1400233a9:	test   rax,rax
   1400233ac:	je     0x1400233b6
   1400233ae:	mov    r9,r10
   1400233b1:	sub    r9,rax
   1400233b4:	jmp    0x1400233bb
   1400233b6:	mov    edx,edi
   1400233b8:	mov    r9,rbx
   1400233bb:	test   edx,edx
   1400233bd:	js     0x14002341b
   1400233bf:	cmp    r12,r11
   1400233c2:	jbe    0x1400233c8
   1400233c4:	mov    edx,edi
   1400233c6:	jmp    0x14002341b
   1400233c8:	lea    r11,[r15+0x4]
   1400233cc:	mov    rax,r10
   1400233cf:	sub    rax,r9
   1400233d2:	lea    rcx,[r8+r9*2]
   1400233d6:	mov    edx,ebx
   1400233d8:	je     0x14002340f
   1400233da:	mov    r8,rax
   1400233dd:	sub    r8,r10
   1400233e0:	add    r8,r9
   1400233e3:	add    r8,r12
   1400233e6:	sub    r11,rcx
   1400233e9:	test   r8,r8
   1400233ec:	je     0x14002340a
   1400233ee:	movzx  r9d,WORD PTR [r11+rcx*1]
   1400233f3:	test   r9w,r9w
   1400233f7:	je     0x14002340a
   1400233f9:	mov    WORD PTR [rcx],r9w
   1400233fd:	add    rcx,0x2
   140023401:	dec    r8
   140023404:	sub    rax,0x1
   140023408:	jne    0x1400233e9
   14002340a:	test   rax,rax
   14002340d:	jne    0x140023418
   14002340f:	sub    rcx,0x2
   140023413:	mov    edx,0x8007007a
   140023418:	mov    WORD PTR [rcx],bx
   14002341b:	mov    eax,edx
   14002341d:	mov    rcx,QWORD PTR [rsp+0x50]
   140023422:	xor    rcx,rsp
   140023425:	call   0x14002dd00
   14002342a:	mov    rbx,QWORD PTR [rsp+0x98]
   140023432:	add    rsp,0x60
   140023436:	pop    r15
   140023438:	pop    r14
   14002343a:	pop    r12
   14002343c:	pop    rdi
   14002343d:	pop    rsi
   14002343e:	ret    
   14002343f:	int3   
   140023440:	int3   
   140023441:	int3   
   140023442:	int3   
   140023443:	int3   
   140023444:	int3   
   140023445:	int3   
   140023446:	int3   
   140023447:	int3   
   140023448:	mov    rax,rsp
   14002344b:	mov    QWORD PTR [rax+0x18],r8
   14002344f:	mov    QWORD PTR [rax+0x10],rdx
   140023453:	mov    QWORD PTR [rax+0x8],rcx
   140023457:	push   rbx
   140023458:	push   rsi
   140023459:	push   rdi
   14002345a:	push   r14
   14002345c:	push   r15
   14002345e:	sub    rsp,0x40
   140023462:	mov    QWORD PTR [rax-0x40],0xfffffffffffffffe
   14002346a:	mov    rbx,rdx
   14002346d:	mov    r15,rcx
   140023470:	mov    esi,0x2000000
   140023475:	mov    QWORD PTR [rsp+0x20],rsi
   14002347a:	xor    edi,edi
   14002347c:	mov    r14d,0x104
   140023482:	mov    rdx,QWORD PTR [rbx]
   140023485:	mov    rax,QWORD PTR [rbx+0x8]
   140023489:	sub    rax,rdx
   14002348c:	sar    rax,1
   14002348f:	mov    ecx,0xffffffff
   140023494:	cmp    rax,rcx
   140023497:	jbe    0x1400234a3
   140023499:	mov    eax,0x8007000e
   14002349e:	jmp    0x140023535
   1400234a3:	cmp    rdx,QWORD PTR [rbx+0x8]
   1400234a7:	cmove  rdx,rbx
   1400234ab:	mov    r8d,eax
   1400234ae:	mov    rcx,r15
   1400234b1:	call   QWORD PTR [rip+0xed01]        # 0x1400321b8
   1400234b7:	test   eax,eax
   1400234b9:	je     0x1400234bf
   1400234bb:	xor    eax,eax
   1400234bd:	jmp    0x140023535
   1400234bf:	call   QWORD PTR [rip+0xedc3]        # 0x140032288
   1400234c5:	mov    ecx,eax
   1400234c7:	cmp    eax,0x7a
   1400234ca:	jne    0x140023528
   1400234cc:	mov    rax,QWORD PTR [rbx+0x8]
   1400234d0:	sub    rax,QWORD PTR [rbx]
   1400234d3:	sar    rax,1
   1400234d6:	cmp    rax,rsi
   1400234d9:	jae    0x140023499
   1400234db:	mov    rcx,rsi
   1400234de:	sub    rcx,rax
   1400234e1:	cmp    rcx,r14
   1400234e4:	cmova  rcx,r14
   1400234e8:	mov    rdx,QWORD PTR [rbx+0x8]
   1400234ec:	sub    rdx,QWORD PTR [rbx]
   1400234ef:	sar    rdx,1
   1400234f2:	add    rdx,rcx
   1400234f5:	mov    rcx,rbx
   1400234f8:	call   0x14000d198
   1400234fd:	nop
   1400234fe:	jmp    0x14002351c
   140023500:	mov    r14d,0x104
   140023506:	mov    rsi,QWORD PTR [rsp+0x20]
   14002350b:	mov    rbx,QWORD PTR [rsp+0x78]
   140023510:	mov    r15,QWORD PTR [rsp+0x70]
   140023515:	mov    edi,DWORD PTR [rsp+0x80]
   14002351c:	test   edi,edi
   14002351e:	jns    0x140023482
   140023524:	mov    eax,edi
   140023526:	jmp    0x140023535
   140023528:	movzx  eax,ax
   14002352b:	or     eax,0x80070000
   140023530:	test   ecx,ecx
   140023532:	cmovle eax,ecx
   140023535:	add    rsp,0x40
   140023539:	pop    r15
   14002353b:	pop    r14
   14002353d:	pop    rdi
   14002353e:	pop    rsi
   14002353f:	pop    rbx
   140023540:	ret    
   140023541:	int3   
   140023542:	int3   
   140023543:	int3   
   140023544:	int3   
   140023545:	int3   
   140023546:	int3   
   140023547:	int3   
   140023548:	rex push rdi
   14002354a:	sub    rsp,0x30
   14002354e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140023557:	mov    eax,DWORD PTR [rip+0x2cd13]        # 0x140050270
   14002355d:	lea    rdi,[rip+0x2cd14]        # 0x140050278
   140023564:	test   al,0x1
   140023566:	jne    0x1400235b1
   140023568:	or     eax,0x1
   14002356b:	mov    DWORD PTR [rip+0x2ccff],eax        # 0x140050270
   140023571:	and    QWORD PTR [rip+0x2ccff],0x0        # 0x140050278
   140023579:	and    QWORD PTR [rip+0x2ccff],0x0        # 0x140050280
   140023581:	call   0x140023778
   140023586:	mov    QWORD PTR [rip+0x2cceb],rax        # 0x140050278
   14002358d:	and    DWORD PTR [rip+0x2cd00],0x0        # 0x140050294
   140023594:	xor    edx,edx
   140023596:	lea    rcx,[rip+0x2cceb]        # 0x140050288
   14002359d:	call   QWORD PTR [rip+0xeccd]        # 0x140032270
   1400235a3:	nop
   1400235a4:	lea    rcx,[rip+0xe2c5]        # 0x140031870
   1400235ab:	call   0x14002de94
   1400235b0:	nop
   1400235b1:	mov    rax,rdi
   1400235b4:	add    rsp,0x30
   1400235b8:	pop    rdi
   1400235b9:	ret    
   1400235ba:	int3   
   1400235bb:	int3   
   1400235bc:	int3   
   1400235bd:	int3   
   1400235be:	int3   
   1400235bf:	int3   
   1400235c0:	mov    rax,rsp
   1400235c3:	mov    BYTE PTR [rax+0x10],dl
   1400235c6:	push   rdi
   1400235c7:	sub    rsp,0x40
   1400235cb:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   1400235d3:	mov    QWORD PTR [rax+0x8],rbx
   1400235d7:	mov    rbx,rcx
   1400235da:	lea    rdi,[rcx+0x10]
   1400235de:	mov    QWORD PTR [rax-0x20],rdi
   1400235e2:	mov    rcx,rdi
   1400235e5:	call   QWORD PTR [rip+0xeb1d]        # 0x140032108
   1400235eb:	mov    BYTE PTR [rsp+0x30],0x1
   1400235f0:	mov    BYTE PTR [rsp+0x38],0x1
   1400235f5:	lea    rdx,[rsp+0x58]
   1400235fa:	mov    rcx,rbx
   1400235fd:	call   0x1400236d8
   140023602:	inc    QWORD PTR [rax]
   140023605:	mov    r8,rax
   140023608:	call   0x140023628
   14002360d:	nop
   14002360e:	mov    rcx,rdi
   140023611:	mov    rbx,QWORD PTR [rsp+0x50]
   140023616:	add    rsp,0x40
   14002361a:	pop    rdi
   14002361b:	rex.W jmp QWORD PTR [rip+0xead6]        # 0x1400320f8
   140023622:	int3   
   140023623:	int3   
   140023624:	int3   
   140023625:	int3   
   140023626:	int3   
   140023627:	int3   
   140023628:	sub    rsp,0x28
   14002362c:	mov    rcx,QWORD PTR [r8]
   14002362f:	test   rcx,rcx
   140023632:	je     0x140023686
   140023634:	mov    rax,QWORD PTR [r8+0x8]
   140023638:	xorps  xmm0,xmm0
   14002363b:	movsd  xmm2,QWORD PTR [rip+0x19e4d]        # 0x14003d490
   140023643:	cvtsi2sd xmm0,rax
   140023648:	test   rax,rax
   14002364b:	jns    0x140023651
   14002364d:	addsd  xmm0,xmm2
   140023651:	mulsd  xmm0,QWORD PTR [rip+0x19e2f]        # 0x14003d488
   140023659:	xorps  xmm1,xmm1
   14002365c:	cvtsi2sd xmm1,rcx
   140023661:	test   rcx,rcx
   140023664:	jns    0x14002366a
   140023666:	addsd  xmm1,xmm2
   14002366a:	divsd  xmm0,xmm1
   14002366e:	mov    ecx,0x116
   140023673:	addsd  xmm0,QWORD PTR [rip+0x19e05]        # 0x14003d480
   14002367b:	cvttsd2si rdx,xmm0
   140023680:	call   QWORD PTR [rip+0xedb2]        # 0x140032438
   140023686:	add    rsp,0x28
   14002368a:	ret    
   14002368b:	int3   
   14002368c:	int3   
   14002368d:	int3   
   14002368e:	int3   
   14002368f:	int3   
   140023690:	int3   
   140023691:	int3   
   140023692:	int3   
   140023693:	int3   
   140023694:	sub    rsp,0x28
   140023698:	call   0x1400235c0
   14002369d:	mov    edx,0x1
   1400236a2:	mov    ecx,0xbd
   1400236a7:	call   QWORD PTR [rip+0xedbb]        # 0x140032468
   1400236ad:	mov    edx,0x64
   1400236b2:	mov    ecx,0x107
   1400236b7:	call   QWORD PTR [rip+0xed1b]        # 0x1400323d8
   1400236bd:	xor    edx,edx
   1400236bf:	mov    ecx,0x105
   1400236c4:	add    rsp,0x28
   1400236c8:	rex.W jmp QWORD PTR [rip+0xed09]        # 0x1400323d8
   1400236cf:	int3   
   1400236d0:	int3   
   1400236d1:	int3   
   1400236d2:	int3   
   1400236d3:	int3   
   1400236d4:	int3   
   1400236d5:	int3   
   1400236d6:	int3   
   1400236d7:	int3   
   1400236d8:	mov    QWORD PTR [rsp+0x10],rbx
   1400236dd:	push   rdi
   1400236de:	sub    rsp,0x60
   1400236e2:	mov    r8,QWORD PTR [rcx]
   1400236e5:	xor    r9d,r9d
   1400236e8:	mov    rdi,rcx
   1400236eb:	mov    rbx,r8
   1400236ee:	mov    rax,QWORD PTR [r8+0x8]
   1400236f2:	cmp    BYTE PTR [rax+0x19],r9b
   1400236f6:	jne    0x140023711
   1400236f8:	mov    cl,BYTE PTR [rdx]
   1400236fa:	cmp    BYTE PTR [rax+0x20],cl
   1400236fd:	jae    0x140023705
   1400236ff:	mov    rax,QWORD PTR [rax+0x10]
   140023703:	jmp    0x14002370b
   140023705:	mov    rbx,rax
   140023708:	mov    rax,QWORD PTR [rax]
   14002370b:	cmp    BYTE PTR [rax+0x19],r9b
   14002370f:	je     0x1400236fa
   140023711:	cmp    rbx,r8
   140023714:	je     0x14002371d
   140023716:	mov    al,BYTE PTR [rbx+0x20]
   140023719:	cmp    BYTE PTR [rdx],al
   14002371b:	jae    0x140023763
   14002371d:	mov    al,BYTE PTR [rdx]
   14002371f:	mov    rcx,rdi
   140023722:	mov    QWORD PTR [rsp+0x30],r9
   140023727:	lea    rdx,[rsp+0x40]
   14002372c:	mov    QWORD PTR [rsp+0x38],r9
   140023731:	movups xmm0,XMMWORD PTR [rsp+0x30]
   140023736:	mov    BYTE PTR [rsp+0x40],al
   14002373a:	movdqu XMMWORD PTR [rsp+0x48],xmm0
   140023740:	call   0x1400237c8
   140023745:	mov    r8,rbx
   140023748:	mov    QWORD PTR [rsp+0x20],rax
   14002374d:	lea    rdx,[rsp+0x70]
   140023752:	mov    rcx,rdi
   140023755:	lea    r9,[rax+0x20]
   140023759:	call   0x140023810
   14002375e:	mov    rbx,QWORD PTR [rsp+0x70]
   140023763:	lea    rax,[rbx+0x28]
   140023767:	mov    rbx,QWORD PTR [rsp+0x78]
   14002376c:	add    rsp,0x60
   140023770:	pop    rdi
   140023771:	ret    
   140023772:	int3   
   140023773:	int3   
   140023774:	int3   
   140023775:	int3   
   140023776:	int3   
   140023777:	int3   
   140023778:	mov    QWORD PTR [rsp+0x8],rcx
   14002377d:	sub    rsp,0x38
   140023781:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002378a:	mov    ecx,0x38
   14002378f:	call   0x140023f10
   140023794:	mov    QWORD PTR [rsp+0x40],rax
   140023799:	mov    QWORD PTR [rax],rax
   14002379c:	lea    rcx,[rax+0x8]
   1400237a0:	test   rcx,rcx
   1400237a3:	je     0x1400237a8
   1400237a5:	mov    QWORD PTR [rcx],rax
   1400237a8:	lea    rcx,[rax+0x10]
   1400237ac:	test   rcx,rcx
   1400237af:	je     0x1400237b4
   1400237b1:	mov    QWORD PTR [rcx],rax
   1400237b4:	mov    WORD PTR [rax+0x18],0x101
   1400237ba:	add    rsp,0x38
   1400237be:	ret    
   1400237bf:	int3   
   1400237c0:	int3   
   1400237c1:	int3   
   1400237c2:	int3   
   1400237c3:	int3   
   1400237c4:	int3   
   1400237c5:	int3   
   1400237c6:	int3   
   1400237c7:	int3   
   1400237c8:	rex push rbx
   1400237ca:	sub    rsp,0x30
   1400237ce:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400237d7:	mov    rbx,rdx
   1400237da:	call   0x140023a34
   1400237df:	mov    QWORD PTR [rsp+0x50],rax
   1400237e4:	mov    WORD PTR [rax+0x18],0x0
   1400237ea:	lea    r8,[rax+0x20]
   1400237ee:	test   r8,r8
   1400237f1:	je     0x140023802
   1400237f3:	mov    cl,BYTE PTR [rbx]
   1400237f5:	mov    BYTE PTR [r8],cl
   1400237f8:	movups xmm0,XMMWORD PTR [rbx+0x8]
   1400237fc:	movdqu XMMWORD PTR [r8+0x8],xmm0
   140023802:	add    rsp,0x30
   140023806:	pop    rbx
   140023807:	ret    
   140023808:	int3   
   140023809:	int3   
   14002380a:	int3   
   14002380b:	int3   
   14002380c:	int3   
   14002380d:	int3   
   14002380e:	int3   
   14002380f:	int3   
   140023810:	mov    r11,rsp
   140023813:	push   rdi
   140023814:	sub    rsp,0x50
   140023818:	mov    QWORD PTR [r11-0x28],0xfffffffffffffffe
   140023820:	mov    QWORD PTR [r11+0x8],rbx
   140023824:	mov    QWORD PTR [r11+0x10],rsi
   140023828:	mov    rdi,r9
   14002382b:	mov    rbx,rdx
   14002382e:	mov    r10,rcx
   140023831:	xor    esi,esi
   140023833:	cmp    QWORD PTR [rcx+0x8],rsi
   140023837:	jne    0x140023858
   140023839:	mov    rax,QWORD PTR [rsp+0x80]
   140023841:	mov    QWORD PTR [r11-0x30],rax
   140023845:	mov    r9,QWORD PTR [rcx]
   140023848:	mov    r8b,0x1
   14002384b:	call   0x140023a88
   140023850:	mov    rax,rbx
   140023853:	jmp    0x140023a1a
   140023858:	mov    rcx,QWORD PTR [rcx]
   14002385b:	cmp    r8,QWORD PTR [rcx]
   14002385e:	jne    0x140023890
   140023860:	mov    al,BYTE PTR [r8+0x20]
   140023864:	cmp    BYTE PTR [r9],al
   140023867:	jae    0x1400239f4
   14002386d:	mov    rax,QWORD PTR [rsp+0x80]
   140023875:	mov    QWORD PTR [rsp+0x28],rax
   14002387a:	mov    r9,r8
   14002387d:	mov    r8b,0x1
   140023880:	mov    rcx,r10
   140023883:	call   0x140023a88
   140023888:	mov    rax,rbx
   14002388b:	jmp    0x140023a1a
   140023890:	cmp    r8,rcx
   140023893:	jne    0x1400238c5
   140023895:	mov    r9,QWORD PTR [rcx+0x10]
   140023899:	mov    al,BYTE PTR [rdi]
   14002389b:	cmp    BYTE PTR [r9+0x20],al
   14002389f:	jae    0x1400239f4
   1400238a5:	mov    rax,QWORD PTR [rsp+0x80]
   1400238ad:	mov    QWORD PTR [rsp+0x28],rax
   1400238b2:	xor    r8d,r8d
   1400238b5:	mov    rcx,r10
   1400238b8:	call   0x140023a88
   1400238bd:	mov    rax,rbx
   1400238c0:	jmp    0x140023a1a
   1400238c5:	mov    r11b,BYTE PTR [r9]
   1400238c8:	cmp    BYTE PTR [r8+0x20],r11b
   1400238cc:	jbe    0x14002396c
   1400238d2:	mov    rax,r8
   1400238d5:	cmp    BYTE PTR [r8+0x19],sil
   1400238d9:	je     0x1400238e1
   1400238db:	mov    r9,QWORD PTR [r8+0x10]
   1400238df:	jmp    0x140023922
   1400238e1:	mov    r9,QWORD PTR [r8]
   1400238e4:	cmp    BYTE PTR [r9+0x19],sil
   1400238e8:	jne    0x1400238ff
   1400238ea:	mov    rax,QWORD PTR [r9+0x10]
   1400238ee:	jmp    0x1400238f7
   1400238f0:	mov    r9,rax
   1400238f3:	mov    rax,QWORD PTR [rax+0x10]
   1400238f7:	cmp    BYTE PTR [rax+0x19],sil
   1400238fb:	je     0x1400238f0
   1400238fd:	jmp    0x140023922
   1400238ff:	mov    rdx,QWORD PTR [r8+0x8]
   140023903:	jmp    0x140023911
   140023905:	cmp    rax,QWORD PTR [rdx]
   140023908:	jne    0x140023917
   14002390a:	mov    rax,rdx
   14002390d:	mov    rdx,QWORD PTR [rdx+0x8]
   140023911:	cmp    BYTE PTR [rdx+0x19],sil
   140023915:	je     0x140023905
   140023917:	mov    r9,rax
   14002391a:	cmp    BYTE PTR [rax+0x19],sil
   14002391e:	cmove  r9,rdx
   140023922:	cmp    BYTE PTR [r9+0x20],r11b
   140023926:	jae    0x140023968
   140023928:	mov    rax,QWORD PTR [r9+0x10]
   14002392c:	mov    rdx,rbx
   14002392f:	mov    rcx,r10
   140023932:	cmp    BYTE PTR [rax+0x19],sil
   140023936:	mov    rax,QWORD PTR [rsp+0x80]
   14002393e:	mov    QWORD PTR [rsp+0x28],rax
   140023943:	je     0x140023955
   140023945:	xor    r8d,r8d
   140023948:	call   0x140023a88
   14002394d:	mov    rax,rbx
   140023950:	jmp    0x140023a1a
   140023955:	mov    r9,r8
   140023958:	mov    r8b,0x1
   14002395b:	call   0x140023a88
   140023960:	mov    rax,rbx
   140023963:	jmp    0x140023a1a
   140023968:	cmp    BYTE PTR [r8+0x20],r11b
   14002396c:	jae    0x1400239f4
   140023972:	mov    r9,r8
   140023975:	cmp    BYTE PTR [r8+0x19],sil
   140023979:	jne    0x1400239af
   14002397b:	mov    rax,QWORD PTR [r8+0x10]
   14002397f:	cmp    BYTE PTR [rax+0x19],sil
   140023983:	jne    0x140023993
   140023985:	mov    r9,rax
   140023988:	mov    rax,QWORD PTR [rax]
   14002398b:	cmp    BYTE PTR [rax+0x19],sil
   14002398f:	je     0x140023985
   140023991:	jmp    0x1400239af
   140023993:	mov    rax,QWORD PTR [r8+0x8]
   140023997:	jmp    0x1400239a6
   140023999:	cmp    r9,QWORD PTR [rax+0x10]
   14002399d:	jne    0x1400239ac
   14002399f:	mov    r9,rax
   1400239a2:	mov    rax,QWORD PTR [rax+0x8]
   1400239a6:	cmp    BYTE PTR [rax+0x19],sil
   1400239aa:	je     0x140023999
   1400239ac:	mov    r9,rax
   1400239af:	cmp    r9,rcx
   1400239b2:	je     0x1400239ba
   1400239b4:	cmp    r11b,BYTE PTR [r9+0x20]
   1400239b8:	jae    0x1400239f4
   1400239ba:	mov    rax,QWORD PTR [r8+0x10]
   1400239be:	mov    rdx,rbx
   1400239c1:	mov    rcx,r10
   1400239c4:	cmp    BYTE PTR [rax+0x19],sil
   1400239c8:	mov    rax,QWORD PTR [rsp+0x80]
   1400239d0:	mov    QWORD PTR [rsp+0x28],rax
   1400239d5:	je     0x1400239e7
   1400239d7:	mov    r9,r8
   1400239da:	xor    r8d,r8d
   1400239dd:	call   0x140023a88
   1400239e2:	mov    rax,rbx
   1400239e5:	jmp    0x140023a1a
   1400239e7:	mov    r8b,0x1
   1400239ea:	call   0x140023a88
   1400239ef:	mov    rax,rbx
   1400239f2:	jmp    0x140023a1a
   1400239f4:	mov    rax,QWORD PTR [rsp+0x80]
   1400239fc:	mov    QWORD PTR [rsp+0x20],rax
   140023a01:	mov    r9,rdi
   140023a04:	lea    rdx,[rsp+0x38]
   140023a09:	mov    rcx,r10
   140023a0c:	call   0x140023d0c
   140023a11:	mov    rcx,QWORD PTR [rax]
   140023a14:	mov    QWORD PTR [rbx],rcx
   140023a17:	mov    rax,rbx
   140023a1a:	mov    rbx,QWORD PTR [rsp+0x60]
   140023a1f:	mov    rsi,QWORD PTR [rsp+0x68]
   140023a24:	add    rsp,0x50
   140023a28:	pop    rdi
   140023a29:	ret    
   140023a2a:	int3   
   140023a2b:	int3   
   140023a2c:	int3   
   140023a2d:	int3   
   140023a2e:	int3   
   140023a2f:	int3   
   140023a30:	int3   
   140023a31:	int3   
   140023a32:	int3   
   140023a33:	int3   
   140023a34:	rex push rbx
   140023a36:	sub    rsp,0x30
   140023a3a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140023a43:	mov    rbx,rcx
   140023a46:	mov    ecx,0x38
   140023a4b:	call   0x140023f10
   140023a50:	mov    r8,rax
   140023a53:	mov    QWORD PTR [rsp+0x48],rax
   140023a58:	mov    rdx,QWORD PTR [rbx]
   140023a5b:	mov    QWORD PTR [rax],rdx
   140023a5e:	add    rax,0x8
   140023a62:	je     0x140023a6a
   140023a64:	mov    rcx,QWORD PTR [rbx]
   140023a67:	mov    QWORD PTR [rax],rcx
   140023a6a:	lea    rcx,[r8+0x10]
   140023a6e:	test   rcx,rcx
   140023a71:	je     0x140023a79
   140023a73:	mov    rax,QWORD PTR [rbx]
   140023a76:	mov    QWORD PTR [rcx],rax
   140023a79:	mov    rax,r8
   140023a7c:	add    rsp,0x30
   140023a80:	pop    rbx
   140023a81:	ret    
   140023a82:	int3   
   140023a83:	int3   
   140023a84:	int3   
   140023a85:	int3   
   140023a86:	int3   
   140023a87:	int3   
   140023a88:	mov    QWORD PTR [rsp+0x8],rbx
   140023a8d:	push   rdi
   140023a8e:	sub    rsp,0x20
   140023a92:	mov    rax,QWORD PTR [rcx+0x8]
   140023a96:	mov    r10,rcx
   140023a99:	movabs rcx,0x492492492492491
   140023aa3:	mov    r11b,r8b
   140023aa6:	mov    rbx,rdx
   140023aa9:	cmp    rax,rcx
   140023aac:	jae    0x140023cee
   140023ab2:	mov    r8,QWORD PTR [rsp+0x58]
   140023ab7:	inc    rax
   140023aba:	mov    QWORD PTR [r10+0x8],rax
   140023abe:	xor    edi,edi
   140023ac0:	mov    QWORD PTR [r8+0x8],r9
   140023ac4:	mov    rax,QWORD PTR [r10]
   140023ac7:	cmp    r9,rax
   140023aca:	jne    0x140023adb
   140023acc:	mov    QWORD PTR [rax+0x8],r8
   140023ad0:	mov    rax,QWORD PTR [r10]
   140023ad3:	mov    QWORD PTR [rax],r8
   140023ad6:	mov    rax,QWORD PTR [r10]
   140023ad9:	jmp    0x140023afd
   140023adb:	test   r11b,r11b
   140023ade:	je     0x140023af0
   140023ae0:	mov    QWORD PTR [r9],r8
   140023ae3:	mov    rax,QWORD PTR [r10]
   140023ae6:	cmp    r9,QWORD PTR [rax]
   140023ae9:	jne    0x140023b01
   140023aeb:	mov    QWORD PTR [rax],r8
   140023aee:	jmp    0x140023b01
   140023af0:	mov    QWORD PTR [r9+0x10],r8
   140023af4:	mov    rax,QWORD PTR [r10]
   140023af7:	cmp    r9,QWORD PTR [rax+0x10]
   140023afb:	jne    0x140023b01
   140023afd:	mov    QWORD PTR [rax+0x10],r8
   140023b01:	mov    rax,QWORD PTR [r8+0x8]
   140023b05:	mov    rdx,r8
   140023b08:	jmp    0x140023cc8
   140023b0d:	mov    rax,QWORD PTR [rdx+0x8]
   140023b11:	mov    r9,QWORD PTR [rax+0x8]
   140023b15:	mov    rcx,QWORD PTR [r9]
   140023b18:	cmp    rax,rcx
   140023b1b:	jne    0x140023be7
   140023b21:	mov    rcx,QWORD PTR [r9+0x10]
   140023b25:	cmp    BYTE PTR [rcx+0x18],dil
   140023b29:	je     0x140023bed
   140023b2f:	cmp    rdx,QWORD PTR [rax+0x10]
   140023b33:	jne    0x140023b80
   140023b35:	mov    rcx,QWORD PTR [rax+0x10]
   140023b39:	mov    rdx,rax
   140023b3c:	mov    rax,QWORD PTR [rcx]
   140023b3f:	mov    QWORD PTR [rdx+0x10],rax
   140023b43:	mov    rax,QWORD PTR [rcx]
   140023b46:	cmp    BYTE PTR [rax+0x19],dil
   140023b4a:	jne    0x140023b50
   140023b4c:	mov    QWORD PTR [rax+0x8],rdx
   140023b50:	mov    rax,QWORD PTR [rdx+0x8]
   140023b54:	mov    QWORD PTR [rcx+0x8],rax
   140023b58:	mov    rax,QWORD PTR [r10]
   140023b5b:	cmp    rdx,QWORD PTR [rax+0x8]
   140023b5f:	jne    0x140023b67
   140023b61:	mov    QWORD PTR [rax+0x8],rcx
   140023b65:	jmp    0x140023b79
   140023b67:	mov    rax,QWORD PTR [rdx+0x8]
   140023b6b:	cmp    rdx,QWORD PTR [rax]
   140023b6e:	jne    0x140023b75
   140023b70:	mov    QWORD PTR [rax],rcx
   140023b73:	jmp    0x140023b79
   140023b75:	mov    QWORD PTR [rax+0x10],rcx
   140023b79:	mov    QWORD PTR [rcx],rdx
   140023b7c:	mov    QWORD PTR [rdx+0x8],rcx
   140023b80:	mov    rax,QWORD PTR [rdx+0x8]
   140023b84:	mov    BYTE PTR [rax+0x18],0x1
   140023b88:	mov    rax,QWORD PTR [rdx+0x8]
   140023b8c:	mov    rcx,QWORD PTR [rax+0x8]
   140023b90:	mov    BYTE PTR [rcx+0x18],dil
   140023b94:	mov    rax,QWORD PTR [rdx+0x8]
   140023b98:	mov    rcx,QWORD PTR [rax+0x8]
   140023b9c:	mov    r9,QWORD PTR [rcx]
   140023b9f:	mov    rax,QWORD PTR [r9+0x10]
   140023ba3:	mov    QWORD PTR [rcx],rax
   140023ba6:	mov    rax,QWORD PTR [r9+0x10]
   140023baa:	cmp    BYTE PTR [rax+0x19],dil
   140023bae:	jne    0x140023bb4
   140023bb0:	mov    QWORD PTR [rax+0x8],rcx
   140023bb4:	mov    rax,QWORD PTR [rcx+0x8]
   140023bb8:	mov    QWORD PTR [r9+0x8],rax
   140023bbc:	mov    rax,QWORD PTR [r10]
   140023bbf:	cmp    rcx,QWORD PTR [rax+0x8]
   140023bc3:	jne    0x140023bcb
   140023bc5:	mov    QWORD PTR [rax+0x8],r9
   140023bc9:	jmp    0x140023bde
   140023bcb:	mov    rax,QWORD PTR [rcx+0x8]
   140023bcf:	cmp    rcx,QWORD PTR [rax+0x10]
   140023bd3:	jne    0x140023bdb
   140023bd5:	mov    QWORD PTR [rax+0x10],r9
   140023bd9:	jmp    0x140023bde
   140023bdb:	mov    QWORD PTR [rax],r9
   140023bde:	mov    QWORD PTR [r9+0x10],rcx
   140023be2:	jmp    0x140023cc0
   140023be7:	cmp    BYTE PTR [rcx+0x18],dil
   140023beb:	jne    0x140023c0e
   140023bed:	mov    BYTE PTR [rax+0x18],0x1
   140023bf1:	mov    BYTE PTR [rcx+0x18],0x1
   140023bf5:	mov    rax,QWORD PTR [rdx+0x8]
   140023bf9:	mov    rcx,QWORD PTR [rax+0x8]
   140023bfd:	mov    BYTE PTR [rcx+0x18],dil
   140023c01:	mov    rax,QWORD PTR [rdx+0x8]
   140023c05:	mov    rdx,QWORD PTR [rax+0x8]
   140023c09:	jmp    0x140023cc4
   140023c0e:	cmp    rdx,QWORD PTR [rax]
   140023c11:	jne    0x140023c60
   140023c13:	mov    rcx,QWORD PTR [rax]
   140023c16:	mov    rdx,rax
   140023c19:	mov    rax,QWORD PTR [rcx+0x10]
   140023c1d:	mov    QWORD PTR [rdx],rax
   140023c20:	mov    rax,QWORD PTR [rcx+0x10]
   140023c24:	cmp    BYTE PTR [rax+0x19],dil
   140023c28:	jne    0x140023c2e
   140023c2a:	mov    QWORD PTR [rax+0x8],rdx
   140023c2e:	mov    rax,QWORD PTR [rdx+0x8]
   140023c32:	mov    QWORD PTR [rcx+0x8],rax
   140023c36:	mov    rax,QWORD PTR [r10]
   140023c39:	cmp    rdx,QWORD PTR [rax+0x8]
   140023c3d:	jne    0x140023c45
   140023c3f:	mov    QWORD PTR [rax+0x8],rcx
   140023c43:	jmp    0x140023c58
   140023c45:	mov    rax,QWORD PTR [rdx+0x8]
   140023c49:	cmp    rdx,QWORD PTR [rax+0x10]
   140023c4d:	jne    0x140023c55
   140023c4f:	mov    QWORD PTR [rax+0x10],rcx
   140023c53:	jmp    0x140023c58
   140023c55:	mov    QWORD PTR [rax],rcx
   140023c58:	mov    QWORD PTR [rcx+0x10],rdx
   140023c5c:	mov    QWORD PTR [rdx+0x8],rcx
   140023c60:	mov    rax,QWORD PTR [rdx+0x8]
   140023c64:	mov    BYTE PTR [rax+0x18],0x1
   140023c68:	mov    rax,QWORD PTR [rdx+0x8]
   140023c6c:	mov    rcx,QWORD PTR [rax+0x8]
   140023c70:	mov    BYTE PTR [rcx+0x18],dil
   140023c74:	mov    rax,QWORD PTR [rdx+0x8]
   140023c78:	mov    rcx,QWORD PTR [rax+0x8]
   140023c7c:	mov    r9,QWORD PTR [rcx+0x10]
   140023c80:	mov    rax,QWORD PTR [r9]
   140023c83:	mov    QWORD PTR [rcx+0x10],rax
   140023c87:	mov    rax,QWORD PTR [r9]
   140023c8a:	cmp    BYTE PTR [rax+0x19],dil
   140023c8e:	jne    0x140023c94
   140023c90:	mov    QWORD PTR [rax+0x8],rcx
   140023c94:	mov    rax,QWORD PTR [rcx+0x8]
   140023c98:	mov    QWORD PTR [r9+0x8],rax
   140023c9c:	mov    rax,QWORD PTR [r10]
   140023c9f:	cmp    rcx,QWORD PTR [rax+0x8]
   140023ca3:	jne    0x140023cab
   140023ca5:	mov    QWORD PTR [rax+0x8],r9
   140023ca9:	jmp    0x140023cbd
   140023cab:	mov    rax,QWORD PTR [rcx+0x8]
   140023caf:	cmp    rcx,QWORD PTR [rax]
   140023cb2:	jne    0x140023cb9
   140023cb4:	mov    QWORD PTR [rax],r9
   140023cb7:	jmp    0x140023cbd
   140023cb9:	mov    QWORD PTR [rax+0x10],r9
   140023cbd:	mov    QWORD PTR [r9],rcx
   140023cc0:	mov    QWORD PTR [rcx+0x8],r9
   140023cc4:	mov    rax,QWORD PTR [rdx+0x8]
   140023cc8:	cmp    BYTE PTR [rax+0x18],dil
   140023ccc:	je     0x140023b0d
   140023cd2:	mov    rax,QWORD PTR [r10]
   140023cd5:	mov    QWORD PTR [rbx],r8
   140023cd8:	mov    rcx,QWORD PTR [rax+0x8]
   140023cdc:	mov    rax,rbx
   140023cdf:	mov    rbx,QWORD PTR [rsp+0x30]
   140023ce4:	mov    BYTE PTR [rcx+0x18],0x1
   140023ce8:	add    rsp,0x20
   140023cec:	pop    rdi
   140023ced:	ret    
   140023cee:	mov    rdx,QWORD PTR [rsp+0x58]
   140023cf3:	call   0x140003760
   140023cf8:	lea    rcx,[rip+0x14af9]        # 0x1400387f8
   140023cff:	call   0x14002d7f8
   140023d04:	int3   
   140023d05:	int3   
   140023d06:	int3   
   140023d07:	int3   
   140023d08:	int3   
   140023d09:	int3   
   140023d0a:	int3   
   140023d0b:	int3   
   140023d0c:	rex push rdi
   140023d0e:	sub    rsp,0x40
   140023d12:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140023d1b:	mov    QWORD PTR [rsp+0x58],rbx
   140023d20:	mov    r11,r9
   140023d23:	mov    rdi,rdx
   140023d26:	mov    rdx,QWORD PTR [rcx]
   140023d29:	mov    rax,QWORD PTR [rdx+0x8]
   140023d2d:	mov    r9,rdx
   140023d30:	mov    r10b,0x1
   140023d33:	cmp    BYTE PTR [rax+0x19],0x0
   140023d37:	jne    0x140023d5b
   140023d39:	mov    r8b,BYTE PTR [r11]
   140023d3c:	mov    r9,rax
   140023d3f:	cmp    r8b,BYTE PTR [rax+0x20]
   140023d43:	setb   r10b
   140023d47:	test   r10b,r10b
   140023d4a:	je     0x140023d51
   140023d4c:	mov    rax,QWORD PTR [rax]
   140023d4f:	jmp    0x140023d55
   140023d51:	mov    rax,QWORD PTR [rax+0x10]
   140023d55:	cmp    BYTE PTR [rax+0x19],0x0
   140023d59:	je     0x140023d3c
   140023d5b:	mov    rbx,r9
   140023d5e:	test   r10b,r10b
   140023d61:	je     0x140023dd6
   140023d63:	cmp    r9,QWORD PTR [rdx]
   140023d66:	jne    0x140023d91
   140023d68:	mov    rax,QWORD PTR [rsp+0x70]
   140023d6d:	mov    QWORD PTR [rsp+0x28],rax
   140023d72:	mov    r8b,0x1
   140023d75:	lea    rdx,[rsp+0x50]
   140023d7a:	call   0x140023a88
   140023d7f:	mov    rax,QWORD PTR [rax]
   140023d82:	mov    QWORD PTR [rdi],rax
   140023d85:	mov    BYTE PTR [rdi+0x8],0x1
   140023d89:	mov    rax,rdi
   140023d8c:	jmp    0x140023e19
   140023d91:	cmp    BYTE PTR [r9+0x19],0x0
   140023d96:	je     0x140023d9e
   140023d98:	mov    rbx,QWORD PTR [r9+0x10]
   140023d9c:	jmp    0x140023dd6
   140023d9e:	mov    rax,QWORD PTR [r9]
   140023da1:	cmp    BYTE PTR [rax+0x19],0x0
   140023da5:	jne    0x140023db6
   140023da7:	mov    rbx,rax
   140023daa:	mov    rax,QWORD PTR [rax+0x10]
   140023dae:	cmp    BYTE PTR [rax+0x19],0x0
   140023db2:	je     0x140023da7
   140023db4:	jmp    0x140023dd6
   140023db6:	mov    rax,QWORD PTR [r9+0x8]
   140023dba:	jmp    0x140023dc8
   140023dbc:	cmp    rbx,QWORD PTR [rax]
   140023dbf:	jne    0x140023dce
   140023dc1:	mov    rbx,rax
   140023dc4:	mov    rax,QWORD PTR [rax+0x8]
   140023dc8:	cmp    BYTE PTR [rax+0x19],0x0
   140023dcc:	je     0x140023dbc
   140023dce:	cmp    BYTE PTR [rbx+0x19],0x0
   140023dd2:	cmove  rbx,rax
   140023dd6:	mov    al,BYTE PTR [r11]
   140023dd9:	cmp    BYTE PTR [rbx+0x20],al
   140023ddc:	jae    0x140023e04
   140023dde:	mov    rax,QWORD PTR [rsp+0x70]
   140023de3:	mov    QWORD PTR [rsp+0x28],rax
   140023de8:	mov    r8b,r10b
   140023deb:	lea    rdx,[rsp+0x50]
   140023df0:	call   0x140023a88
   140023df5:	mov    rax,QWORD PTR [rax]
   140023df8:	mov    QWORD PTR [rdi],rax
   140023dfb:	mov    BYTE PTR [rdi+0x8],0x1
   140023dff:	mov    rax,rdi
   140023e02:	jmp    0x140023e19
   140023e04:	mov    rcx,QWORD PTR [rsp+0x70]
   140023e09:	call   QWORD PTR [rip+0xe7b9]        # 0x1400325c8
   140023e0f:	mov    QWORD PTR [rdi],rbx
   140023e12:	mov    BYTE PTR [rdi+0x8],0x0
   140023e16:	mov    rax,rdi
   140023e19:	mov    rbx,QWORD PTR [rsp+0x58]
   140023e1e:	add    rsp,0x40
   140023e22:	pop    rdi
   140023e23:	ret    
   140023e24:	int3   
   140023e25:	int3   
   140023e26:	int3   
   140023e27:	int3   
   140023e28:	int3   
   140023e29:	int3   
   140023e2a:	int3   
   140023e2b:	int3   
   140023e2c:	mov    QWORD PTR [rsp+0x8],rbx
   140023e31:	mov    QWORD PTR [rsp+0x10],rsi
   140023e36:	push   rdi
   140023e37:	sub    rsp,0x20
   140023e3b:	cmp    BYTE PTR [rdx+0x19],0x0
   140023e3f:	mov    rdi,rdx
   140023e42:	mov    rsi,rcx
   140023e45:	mov    rbx,rdx
   140023e48:	jne    0x140023e6b
   140023e4a:	mov    rdx,QWORD PTR [rbx+0x10]
   140023e4e:	mov    rcx,rsi
   140023e51:	call   0x140023e2c
   140023e56:	mov    rbx,QWORD PTR [rbx]
   140023e59:	mov    rcx,rdi
   140023e5c:	call   QWORD PTR [rip+0xe766]        # 0x1400325c8
   140023e62:	cmp    BYTE PTR [rbx+0x19],0x0
   140023e66:	mov    rdi,rbx
   140023e69:	je     0x140023e4a
   140023e6b:	mov    rbx,QWORD PTR [rsp+0x30]
   140023e70:	mov    rsi,QWORD PTR [rsp+0x38]
   140023e75:	add    rsp,0x20
   140023e79:	pop    rdi
   140023e7a:	ret    
   140023e7b:	int3   
   140023e7c:	int3   
   140023e7d:	int3   
   140023e7e:	int3   
   140023e7f:	int3   
   140023e80:	int3   
   140023e81:	int3   
   140023e82:	int3   
   140023e83:	int3   
   140023e84:	mov    QWORD PTR [rsp+0x8],rbx
   140023e89:	push   rdi
   140023e8a:	sub    rsp,0x20
   140023e8e:	mov    rax,QWORD PTR [rip+0x2c3e3]        # 0x140050278
   140023e95:	mov    rdi,QWORD PTR [rax+0x8]
   140023e99:	mov    rbx,rdi
   140023e9c:	cmp    BYTE PTR [rdi+0x19],0x0
   140023ea0:	jne    0x140023ece
   140023ea2:	mov    rdx,QWORD PTR [rbx+0x10]
   140023ea6:	lea    rcx,[rip+0x2c3cb]        # 0x140050278
   140023ead:	call   0x140023e2c
   140023eb2:	mov    rbx,QWORD PTR [rbx]
   140023eb5:	mov    rcx,rdi
   140023eb8:	call   QWORD PTR [rip+0xe70a]        # 0x1400325c8
   140023ebe:	cmp    BYTE PTR [rbx+0x19],0x0
   140023ec2:	mov    rdi,rbx
   140023ec5:	je     0x140023ea2
   140023ec7:	mov    rax,QWORD PTR [rip+0x2c3aa]        # 0x140050278
   140023ece:	mov    QWORD PTR [rax+0x8],rax
   140023ed2:	mov    rax,QWORD PTR [rip+0x2c39f]        # 0x140050278
   140023ed9:	mov    QWORD PTR [rax],rax
   140023edc:	mov    rax,QWORD PTR [rip+0x2c395]        # 0x140050278
   140023ee3:	mov    QWORD PTR [rax+0x10],rax
   140023ee7:	and    QWORD PTR [rip+0x2c391],0x0        # 0x140050280
   140023eef:	mov    rcx,QWORD PTR [rip+0x2c382]        # 0x140050278
   140023ef6:	mov    rbx,QWORD PTR [rsp+0x30]
   140023efb:	add    rsp,0x20
   140023eff:	pop    rdi
   140023f00:	rex.W jmp QWORD PTR [rip+0xe6c1]        # 0x1400325c8
   140023f07:	int3   
   140023f08:	int3   
   140023f09:	int3   
   140023f0a:	int3   
   140023f0b:	int3   
   140023f0c:	int3   
   140023f0d:	int3   
   140023f0e:	int3   
   140023f0f:	int3   
   140023f10:	sub    rsp,0x48
   140023f14:	call   QWORD PTR [rip+0xe6b6]        # 0x1400325d0
   140023f1a:	test   rax,rax
   140023f1d:	je     0x140023f24
   140023f1f:	add    rsp,0x48
   140023f23:	ret    
   140023f24:	lea    rcx,[rsp+0x20]
   140023f29:	call   0x1400022d4
   140023f2e:	lea    rdx,[rip+0x252db]        # 0x140049210
   140023f35:	lea    rcx,[rsp+0x20]
   140023f3a:	call   0x14002e2da
   140023f3f:	int3   
   140023f40:	int3   
   140023f41:	int3   
   140023f42:	int3   
   140023f43:	int3   
   140023f44:	int3   
   140023f45:	int3   
   140023f46:	int3   
   140023f47:	int3   
   140023f48:	rex.W jmp QWORD PTR [rip+0xe679]        # 0x1400325c8
   140023f4f:	int3   
   140023f50:	int3   
   140023f51:	int3   
   140023f52:	int3   
   140023f53:	int3   
   140023f54:	int3   
   140023f55:	int3   
   140023f56:	int3   
   140023f57:	int3   
   140023f58:	mov    QWORD PTR [rsp+0x8],rbx
   140023f5d:	mov    QWORD PTR [rsp+0x10],rsi
   140023f62:	push   rdi
   140023f63:	sub    rsp,0x30
   140023f67:	mov    esi,ecx
   140023f69:	mov    rdi,rdx
   140023f6c:	mov    ecx,0x8001
   140023f71:	call   QWORD PTR [rip+0xe249]        # 0x1400321c0
   140023f77:	call   0x14002d688
   140023f7c:	test   eax,eax
   140023f7e:	js     0x140024051
   140023f84:	xor    r9d,r9d
   140023f87:	xor    r8d,r8d
   140023f8a:	xor    ecx,ecx
   140023f8c:	lea    edx,[r9+0x1]
   140023f90:	call   QWORD PTR [rip+0xe2fa]        # 0x140032290
   140023f96:	call   QWORD PTR [rip+0xe46c]        # 0x140032408
   140023f9c:	mov    rbx,QWORD PTR [rax]
   140023f9f:	mov    rcx,rbx
   140023fa2:	call   QWORD PTR [rip+0xe700]        # 0x1400326a8
   140023fa8:	call   rbx
   140023faa:	test   eax,eax
   140023fac:	js     0x140024051
   140023fb2:	and    QWORD PTR [rsp+0x50],0x0
   140023fb8:	lea    eax,[rsi-0x1]
   140023fbb:	movsxd r8,eax
   140023fbe:	lea    r9,[rdi+0x8]
   140023fc2:	lea    rcx,[rsp+0x50]
   140023fc7:	call   0x14002c66c
   140023fcc:	mov    rbx,QWORD PTR [rsp+0x50]
   140023fd1:	mov    esi,eax
   140023fd3:	test   eax,eax
   140023fd5:	js     0x140023ff8
   140023fd7:	mov    rdi,QWORD PTR [rip+0x2c22a]        # 0x140050208
   140023fde:	mov    QWORD PTR [rip+0x2c223],rbx        # 0x140050208
   140023fe5:	call   0x140003af0
   140023fea:	xor    esi,esi
   140023fec:	mov    QWORD PTR [rip+0x2c215],rdi        # 0x140050208
   140023ff3:	test   eax,eax
   140023ff5:	cmovs  esi,eax
   140023ff8:	test   rbx,rbx
   140023ffb:	je     0x14002403a
   140023ffd:	mov    eax,DWORD PTR [rbx+0x8]
   140024000:	cmp    eax,0x1
   140024003:	jne    0x14002400e
   140024005:	mov    DWORD PTR [rbx+0x8],0x0
   14002400c:	jmp    0x14002401b
   14002400e:	or     eax,0xffffffff
   140024011:	lock xadd DWORD PTR [rbx+0x8],eax
   140024016:	sub    eax,0x1
   140024019:	jg     0x14002403a
   14002401b:	mov    rbx,QWORD PTR [rsp+0x50]
   140024020:	mov    rax,QWORD PTR [rbx]
   140024023:	mov    rdi,QWORD PTR [rax+0x10]
   140024027:	mov    rcx,rdi
   14002402a:	call   QWORD PTR [rip+0xe678]        # 0x1400326a8
   140024030:	mov    edx,0x1
   140024035:	mov    rcx,rbx
   140024038:	call   rdi
   14002403a:	call   QWORD PTR [rip+0xe3c8]        # 0x140032408
   140024040:	mov    rbx,QWORD PTR [rax+0x8]
   140024044:	mov    rcx,rbx
   140024047:	call   QWORD PTR [rip+0xe65b]        # 0x1400326a8
   14002404d:	call   rbx
   14002404f:	mov    eax,esi
   140024051:	mov    rbx,QWORD PTR [rsp+0x40]
   140024056:	mov    rsi,QWORD PTR [rsp+0x48]
   14002405b:	add    rsp,0x30
   14002405f:	pop    rdi
   140024060:	ret    
   140024061:	int3   
   140024062:	int3   
   140024063:	int3   
   140024064:	int3   
   140024065:	int3   
   140024066:	int3   
   140024067:	int3   
   140024068:	mov    QWORD PTR [rsp+0x18],r8
   14002406d:	mov    QWORD PTR [rsp+0x20],r9
   140024072:	push   rbx
   140024073:	push   rbp
   140024074:	push   rsi
   140024075:	push   rdi
   140024076:	sub    rsp,0x28
   14002407a:	xor    ebp,ebp
   14002407c:	lea    rax,[rdx-0x1]
   140024080:	cmp    rax,0x7ffffffe
   140024086:	mov    rsi,rcx
   140024089:	mov    edi,ebp
   14002408b:	mov    ecx,0x80070057
   140024090:	cmova  edi,ecx
   140024093:	test   edi,edi
   140024095:	js     0x1400240cc
   140024097:	lea    rbx,[rdx-0x1]
   14002409b:	mov    rcx,rsi
   14002409e:	mov    rdx,rbx
   1400240a1:	lea    r9,[rsp+0x68]
   1400240a6:	mov    edi,ebp
   1400240a8:	call   QWORD PTR [rip+0xe542]        # 0x1400325f0
   1400240ae:	test   eax,eax
   1400240b0:	js     0x1400240c1
   1400240b2:	cdqe   
   1400240b4:	cmp    rax,rbx
   1400240b7:	ja     0x1400240c1
   1400240b9:	jne    0x1400240d4
   1400240bb:	mov    WORD PTR [rsi+rbx*2],bp
   1400240bf:	jmp    0x1400240d4
   1400240c1:	mov    WORD PTR [rsi+rbx*2],bp
   1400240c5:	mov    edi,0x8007007a
   1400240ca:	jmp    0x1400240d4
   1400240cc:	test   rdx,rdx
   1400240cf:	je     0x1400240d4
   1400240d1:	mov    WORD PTR [rsi],bp
   1400240d4:	mov    eax,edi
   1400240d6:	add    rsp,0x28
   1400240da:	pop    rdi
   1400240db:	pop    rsi
   1400240dc:	pop    rbp
   1400240dd:	pop    rbx
   1400240de:	ret    
   1400240df:	int3   
   1400240e0:	int3   
   1400240e1:	int3   
   1400240e2:	int3   
   1400240e3:	int3   
   1400240e4:	int3   
   1400240e5:	int3   
   1400240e6:	int3   
   1400240e7:	int3   
   1400240e8:	mov    QWORD PTR [rsp+0x18],r8
   1400240ed:	push   rbx
   1400240ee:	push   rbp
   1400240ef:	push   rsi
   1400240f0:	push   rdi
   1400240f1:	push   r12
   1400240f3:	push   r13
   1400240f5:	push   r14
   1400240f7:	push   r15
   1400240f9:	sub    rsp,0x28
   1400240fd:	mov    r12d,DWORD PTR [rsp+0x90]
   140024105:	mov    rsi,rcx
   140024108:	mov    rbx,rdx
   14002410b:	mov    ecx,r12d
   14002410e:	xor    edx,edx
   140024110:	mov    r13,r9
   140024113:	mov    edi,edx
   140024115:	mov    r9d,0x80070057
   14002411b:	and    ecx,0x100
   140024121:	je     0x14002413b
   140024123:	test   rsi,rsi
   140024126:	jne    0x14002412d
   140024128:	test   rbx,rbx
   14002412b:	jne    0x140024136
   14002412d:	cmp    rbx,0x7fffffff
   140024134:	jbe    0x140024149
   140024136:	mov    edi,r9d
   140024139:	jmp    0x140024149
   14002413b:	lea    rax,[rbx-0x1]
   14002413f:	cmp    rax,0x7ffffffe
   140024145:	cmova  edi,r9d
   140024149:	test   edi,edi
   14002414b:	js     0x1400242e0
   140024151:	mov    r15,rsi
   140024154:	mov    r14,rbx
   140024157:	test   ecx,ecx
   140024159:	je     0x14002417b
   14002415b:	mov    rax,QWORD PTR [rsp+0x98]
   140024163:	lea    r8,[rip+0x113ce]        # 0x140035538
   14002416a:	test   rax,rax
   14002416d:	cmovne r8,rax
   140024171:	mov    QWORD PTR [rsp+0x98],r8
   140024179:	jmp    0x140024183
   14002417b:	mov    r8,QWORD PTR [rsp+0x98]
   140024183:	mov    edi,edx
   140024185:	test   r12d,0xffffe000
   14002418c:	je     0x1400241f8
   14002418e:	mov    edi,r9d
   140024191:	test   rbx,rbx
   140024194:	je     0x140024199
   140024196:	mov    WORD PTR [rsi],dx
   140024199:	test   r12d,0x1c00
   1400241a0:	je     0x1400242b1
   1400241a6:	test   rbx,rbx
   1400241a9:	je     0x1400242b1
   1400241af:	lea    r8,[rbx+rbx*1]
   1400241b3:	mov    rbp,r8
   1400241b6:	shr    rbp,1
   1400241b9:	je     0x1400241cb
   1400241bb:	bt     r12d,0xc
   1400241c0:	jae    0x1400241cb
   1400241c2:	mov    r15,rsi
   1400241c5:	mov    WORD PTR [rsi],dx
   1400241c8:	mov    r14,rbp
   1400241cb:	bt     r12d,0xa
   1400241d0:	jae    0x14002429c
   1400241d6:	movzx  edx,r12b
   1400241da:	mov    rcx,rsi
   1400241dd:	call   0x14002e2ce
   1400241e2:	xor    edx,edx
   1400241e4:	test   r12b,r12b
   1400241e7:	jne    0x140024285
   1400241ed:	mov    r15,rsi
   1400241f0:	mov    r14,rbp
   1400241f3:	jmp    0x14002429c
   1400241f8:	test   rbx,rbx
   1400241fb:	jne    0x140024217
   1400241fd:	cmp    WORD PTR [r8],dx
   140024201:	je     0x1400242c5
   140024207:	mov    rax,rsi
   14002420a:	neg    rax
   14002420d:	sbb    edi,edi
   14002420f:	and    edi,0x23
   140024212:	add    edi,r9d
   140024215:	jmp    0x140024199
   140024217:	lea    rbp,[rbx-0x1]
   14002421b:	mov    rcx,rsi
   14002421e:	mov    rdx,rbp
   140024221:	lea    r9,[rsp+0xa0]
   140024229:	call   QWORD PTR [rip+0xe3c1]        # 0x1400325f0
   14002422f:	xor    edx,edx
   140024231:	test   eax,eax
   140024233:	js     0x140024243
   140024235:	cdqe   
   140024237:	cmp    rax,rbp
   14002423a:	ja     0x140024243
   14002423c:	je     0x140024248
   14002423e:	mov    rbp,rax
   140024241:	jmp    0x14002424c
   140024243:	mov    edi,0x8007007a
   140024248:	mov    WORD PTR [rsi+rbp*2],dx
   14002424c:	sub    r14,rbp
   14002424f:	lea    r15,[rsi+rbp*2]
   140024253:	test   edi,edi
   140024255:	js     0x140024199
   14002425b:	bt     r12d,0x9
   140024260:	jae    0x1400242c5
   140024262:	cmp    r14,0x1
   140024266:	jbe    0x1400242c5
   140024268:	lea    r8,[r14+r14*1]
   14002426c:	cmp    r8,0x2
   140024270:	jbe    0x1400242c5
   140024272:	add    r8,0xfffffffffffffffe
   140024276:	movzx  edx,r12b
   14002427a:	lea    rcx,[r15+0x2]
   14002427e:	call   0x14002e2ce
   140024283:	jmp    0x1400242c5
   140024285:	test   rbp,rbp
   140024288:	je     0x1400242b1
   14002428a:	lea    r15,[rsi-0x2]
   14002428e:	mov    r14d,0x1
   140024294:	lea    r15,[r15+rbp*2]
   140024298:	mov    WORD PTR [r15],dx
   14002429c:	test   rbp,rbp
   14002429f:	je     0x1400242b1
   1400242a1:	bt     r12d,0xb
   1400242a6:	jae    0x1400242b1
   1400242a8:	mov    r15,rsi
   1400242ab:	mov    WORD PTR [rsi],dx
   1400242ae:	mov    r14,rbp
   1400242b1:	mov    ecx,0x80000000
   1400242b6:	lea    eax,[rdi+rcx*1]
   1400242b9:	test   ecx,eax
   1400242bb:	jne    0x1400242c5
   1400242bd:	cmp    edi,0x8007007a
   1400242c3:	jne    0x1400242e8
   1400242c5:	mov    rax,QWORD PTR [rsp+0x80]
   1400242cd:	test   rax,rax
   1400242d0:	je     0x1400242d5
   1400242d2:	mov    QWORD PTR [rax],r15
   1400242d5:	test   r13,r13
   1400242d8:	je     0x1400242e8
   1400242da:	mov    QWORD PTR [r13+0x0],r14
   1400242de:	jmp    0x1400242e8
   1400242e0:	test   rbx,rbx
   1400242e3:	je     0x1400242e8
   1400242e5:	mov    WORD PTR [rsi],dx
   1400242e8:	mov    eax,edi
   1400242ea:	add    rsp,0x28
   1400242ee:	pop    r15
   1400242f0:	pop    r14
   1400242f2:	pop    r13
   1400242f4:	pop    r12
   1400242f6:	pop    rdi
   1400242f7:	pop    rsi
   1400242f8:	pop    rbp
   1400242f9:	pop    rbx
   1400242fa:	ret    
   1400242fb:	int3   
   1400242fc:	int3   
   1400242fd:	int3   
   1400242fe:	int3   
   1400242ff:	int3   
   140024300:	int3   
   140024301:	int3   
   140024302:	int3   
   140024303:	int3   
   140024304:	mov    rax,rsp
   140024307:	mov    QWORD PTR [rax+0x8],rbx
   14002430b:	mov    QWORD PTR [rax+0x18],rsi
   14002430f:	mov    QWORD PTR [rax+0x20],rdi
   140024313:	mov    QWORD PTR [rax+0x10],rdx
   140024317:	push   rbp
   140024318:	push   r12
   14002431a:	push   r13
   14002431c:	push   r14
   14002431e:	push   r15
   140024320:	mov    rbp,rsp
   140024323:	sub    rsp,0x60
   140024327:	mov    r14d,0x8
   14002432d:	lea    rsi,[rdx+0x5c]
   140024331:	xor    r12d,r12d
   140024334:	mov    r11,rdx
   140024337:	mov    rbx,rcx
   14002433a:	lea    r13d,[r14-0x7]
   14002433e:	cmp    WORD PTR [rcx],r12w
   140024342:	jne    0x140024464
   140024348:	cmp    WORD PTR [rcx+0x2],r12w
   14002434d:	jne    0x140024464
   140024353:	cmp    WORD PTR [rcx+0x4],r12w
   140024358:	jne    0x140024464
   14002435e:	cmp    WORD PTR [rcx+0x6],r12w
   140024363:	jne    0x140024464
   140024369:	cmp    WORD PTR [rcx+0xc],r12w
   14002436e:	je     0x140024464
   140024374:	cmp    WORD PTR [rcx+0x8],r12w
   140024379:	jne    0x140024405
   14002437f:	movzx  eax,WORD PTR [rcx+0xa]
   140024383:	mov    ecx,0xfffe
   140024388:	add    ax,r13w
   14002438c:	test   cx,ax
   14002438f:	jne    0x140024405
   140024391:	movzx  ecx,BYTE PTR [rbx+0xf]
   140024395:	lea    rdx,[rip+0x142dc]        # 0x140038678
   14002439c:	movzx  r8d,BYTE PTR [rbx+0xe]
   1400243a1:	lea    rax,[rip+0x14478]        # 0x140038820
   1400243a8:	movzx  r9d,BYTE PTR [rbx+0xd]
   1400243ad:	cmp    WORD PTR [rbx+0xa],r12w
   1400243b2:	movzx  r10d,BYTE PTR [rbx+0xc]
   1400243b7:	mov    DWORD PTR [rsp+0x50],ecx
   1400243bb:	cmove  rax,rdx
   1400243bf:	mov    DWORD PTR [rsp+0x48],r8d
   1400243c4:	sub    rsi,r11
   1400243c7:	mov    DWORD PTR [rsp+0x40],r9d
   1400243cc:	lea    r8,[rbp+0x38]
   1400243d0:	mov    DWORD PTR [rsp+0x38],r10d
   1400243d5:	xor    r9d,r9d
   1400243d8:	mov    QWORD PTR [rsp+0x30],rax
   1400243dd:	mov    rcx,r11
   1400243e0:	lea    rax,[rip+0x14441]        # 0x140038828
   1400243e7:	sar    rsi,1
   1400243ea:	mov    QWORD PTR [rsp+0x28],rax
   1400243ef:	mov    rdx,rsi
   1400243f2:	mov    QWORD PTR [rsp+0x20],r12
   1400243f7:	call   0x1400240e8
   1400243fc:	mov    rax,QWORD PTR [rbp+0x38]
   140024400:	jmp    0x140024602
   140024405:	mov    eax,0xffff
   14002440a:	cmp    WORD PTR [rbx+0x8],ax
   14002440e:	jne    0x140024464
   140024410:	cmp    WORD PTR [rbx+0xa],r12w
   140024415:	jne    0x140024464
   140024417:	movzx  eax,BYTE PTR [rbx+0xf]
   14002441b:	sub    rsi,r11
   14002441e:	movzx  ecx,BYTE PTR [rbx+0xe]
   140024422:	xor    r9d,r9d
   140024425:	movzx  edx,BYTE PTR [rbx+0xd]
   140024429:	movzx  r8d,BYTE PTR [rbx+0xc]
   14002442e:	mov    DWORD PTR [rsp+0x48],eax
   140024432:	lea    rax,[rip+0x14417]        # 0x140038850
   140024439:	mov    DWORD PTR [rsp+0x40],ecx
   14002443d:	mov    rcx,r11
   140024440:	mov    DWORD PTR [rsp+0x38],edx
   140024444:	mov    DWORD PTR [rsp+0x30],r8d
   140024449:	lea    r8,[rbp+0x38]
   14002444d:	sar    rsi,1
   140024450:	mov    QWORD PTR [rsp+0x28],rax
   140024455:	mov    rdx,rsi
   140024458:	mov    QWORD PTR [rsp+0x20],r12
   14002445d:	call   0x1400240e8
   140024462:	jmp    0x1400243fc
   140024464:	mov    eax,0xfffd
   140024469:	mov    r8d,r12d
   14002446c:	mov    r9d,r12d
   14002446f:	mov    edi,r12d
   140024472:	test   WORD PTR [rbx+0x8],ax
   140024476:	jne    0x14002448a
   140024478:	mov    eax,0xfe5e
   14002447d:	mov    ecx,0x6
   140024482:	cmp    WORD PTR [rbx+0xa],ax
   140024486:	cmove  r14d,ecx
   14002448a:	movsxd r15,r14d
   14002448d:	mov    r10,r12
   140024490:	test   r14d,r14d
   140024493:	jle    0x1400244c2
   140024495:	mov    edx,r13d
   140024498:	cmp    WORD PTR [rbx+r10*2],r12w
   14002449d:	jne    0x1400244b5
   14002449f:	mov    ecx,edx
   1400244a1:	mov    eax,r8d
   1400244a4:	sub    ecx,edi
   1400244a6:	sub    eax,r9d
   1400244a9:	cmp    ecx,eax
   1400244ab:	jle    0x1400244b7
   1400244ad:	mov    r9d,edi
   1400244b0:	mov    r8d,edx
   1400244b3:	jmp    0x1400244b7
   1400244b5:	mov    edi,edx
   1400244b7:	add    edx,r13d
   1400244ba:	add    r10,r13
   1400244bd:	cmp    r10,r15
   1400244c0:	jl     0x140024498
   1400244c2:	mov    eax,r8d
   1400244c5:	sub    eax,r9d
   1400244c8:	cmp    eax,r13d
   1400244cb:	jg     0x1400244d3
   1400244cd:	mov    r8d,r12d
   1400244d0:	mov    r9d,r12d
   1400244d3:	mov    rdi,r12
   1400244d6:	test   r14d,r14d
   1400244d9:	jle    0x1400245aa
   1400244df:	movsxd r13,r8d
   1400244e2:	movsxd r12,r9d
   1400244e5:	cmp    r12,rdi
   1400244e8:	jg     0x14002451f
   1400244ea:	cmp    rdi,r13
   1400244ed:	jge    0x14002451f
   1400244ef:	lea    rax,[rip+0x14386]        # 0x14003887c
   1400244f6:	mov    rdx,rsi
   1400244f9:	sub    rdx,r11
   1400244fc:	mov    QWORD PTR [rsp+0x28],rax
   140024501:	and    QWORD PTR [rsp+0x20],0x0
   140024507:	lea    r8,[rbp+0x38]
   14002450b:	sar    rdx,1
   14002450e:	xor    r9d,r9d
   140024511:	mov    rcx,r11
   140024514:	call   0x1400240e8
   140024519:	lea    rdi,[r13-0x1]
   14002451d:	jmp    0x140024597
   14002451f:	test   rdi,rdi
   140024522:	je     0x140024557
   140024524:	cmp    rdi,r13
   140024527:	je     0x140024557
   140024529:	lea    rax,[rip+0x14354]        # 0x140038884
   140024530:	mov    rdx,rsi
   140024533:	sub    rdx,r11
   140024536:	mov    QWORD PTR [rsp+0x28],rax
   14002453b:	and    QWORD PTR [rsp+0x20],0x0
   140024541:	lea    r8,[rbp+0x38]
   140024545:	sar    rdx,1
   140024548:	xor    r9d,r9d
   14002454b:	mov    rcx,r11
   14002454e:	call   0x1400240e8
   140024553:	mov    r11,QWORD PTR [rbp+0x38]
   140024557:	movzx  eax,WORD PTR [rbx+rdi*2]
   14002455b:	lea    r8,[rbp+0x38]
   14002455f:	movzx  ecx,BYTE PTR [rbx+rdi*2+0x1]
   140024564:	mov    rdx,rsi
   140024567:	shl    ax,0x8
   14002456b:	sub    rdx,r11
   14002456e:	movzx  eax,ax
   140024571:	xor    r9d,r9d
   140024574:	or     ecx,eax
   140024576:	sar    rdx,1
   140024579:	mov    DWORD PTR [rsp+0x30],ecx
   14002457d:	lea    rax,[rip+0x14304]        # 0x140038888
   140024584:	mov    QWORD PTR [rsp+0x28],rax
   140024589:	mov    rcx,r11
   14002458c:	and    QWORD PTR [rsp+0x20],0x0
   140024592:	call   0x1400240e8
   140024597:	mov    r11,QWORD PTR [rbp+0x38]
   14002459b:	inc    rdi
   14002459e:	cmp    rdi,r15
   1400245a1:	jl     0x1400244e5
   1400245a7:	xor    r12d,r12d
   1400245aa:	cmp    r14d,0x8
   1400245ae:	jge    0x1400245ff
   1400245b0:	movzx  eax,BYTE PTR [rbx+0xf]
   1400245b4:	sub    rsi,r11
   1400245b7:	movzx  ecx,BYTE PTR [rbx+0xe]
   1400245bb:	xor    r9d,r9d
   1400245be:	movzx  edx,BYTE PTR [rbx+0xd]
   1400245c2:	movzx  r8d,BYTE PTR [rbx+0xc]
   1400245c7:	mov    DWORD PTR [rsp+0x48],eax
   1400245cb:	lea    rax,[rip+0x142be]        # 0x140038890
   1400245d2:	mov    DWORD PTR [rsp+0x40],ecx
   1400245d6:	mov    rcx,r11
   1400245d9:	mov    DWORD PTR [rsp+0x38],edx
   1400245dd:	mov    DWORD PTR [rsp+0x30],r8d
   1400245e2:	lea    r8,[rbp+0x38]
   1400245e6:	sar    rsi,1
   1400245e9:	mov    QWORD PTR [rsp+0x28],rax
   1400245ee:	mov    rdx,rsi
   1400245f1:	mov    QWORD PTR [rsp+0x20],r12
   1400245f6:	call   0x1400240e8
   1400245fb:	mov    r11,QWORD PTR [rbp+0x38]
   1400245ff:	mov    rax,r11
   140024602:	lea    r11,[rsp+0x60]
   140024607:	mov    rbx,QWORD PTR [r11+0x30]
   14002460b:	mov    rsi,QWORD PTR [r11+0x40]
   14002460f:	mov    rdi,QWORD PTR [r11+0x48]
   140024613:	mov    rsp,r11
   140024616:	pop    r15
   140024618:	pop    r14
   14002461a:	pop    r13
   14002461c:	pop    r12
   14002461e:	pop    rbp
   14002461f:	ret    
   140024620:	int3   
   140024621:	int3   
   140024622:	int3   
   140024623:	int3   
   140024624:	int3   
   140024625:	int3   
   140024626:	int3   
   140024627:	int3   
   140024628:	xor    r8d,r8d
   14002462b:	lea    r9,[rip+0x1428e]        # 0x1400388c0
   140024632:	movzx  eax,BYTE PTR [rcx]
   140024635:	movzx  eax,BYTE PTR [r9+rax*4]
   14002463a:	mov    WORD PTR [rdx],ax
   14002463d:	movzx  eax,BYTE PTR [rcx]
   140024640:	movzx  eax,BYTE PTR [r9+rax*4+0x1]
   140024646:	mov    WORD PTR [rdx+0x2],ax
   14002464a:	movzx  eax,BYTE PTR [rcx]
   14002464d:	movzx  eax,BYTE PTR [r9+rax*4+0x2]
   140024653:	mov    WORD PTR [rdx+0x4],ax
   140024657:	movzx  eax,BYTE PTR [rcx]
   14002465a:	movzx  eax,BYTE PTR [r9+rax*4+0x3]
   140024660:	lea    rdx,[rdx+rax*2]
   140024664:	lea    eax,[r8-0x3]
   140024668:	neg    eax
   14002466a:	sbb    ax,ax
   14002466d:	inc    rcx
   140024670:	and    ax,0x2e
   140024674:	inc    r8d
   140024677:	mov    WORD PTR [rdx],ax
   14002467a:	lea    rdx,[rdx+0x2]
   14002467e:	cmp    r8d,0x4
   140024682:	jl     0x140024632
   140024684:	lea    rax,[rdx-0x2]
   140024688:	ret    
   140024689:	int3   
   14002468a:	int3   
   14002468b:	int3   
   14002468c:	int3   
   14002468d:	int3   
   14002468e:	int3   
   14002468f:	int3   
   140024690:	mov    r11,rsp
   140024693:	sub    rsp,0x58
   140024697:	and    QWORD PTR [r11-0x18],0x0
   14002469c:	lea    rax,[r11+0x28]
   1400246a0:	mov    r9d,0x4
   1400246a6:	mov    QWORD PTR [r11-0x20],r9
   1400246aa:	mov    QWORD PTR [r11-0x28],rax
   1400246ae:	lea    rax,[rip+0x14707]        # 0x140038dbc
   1400246b5:	mov    QWORD PTR [r11-0x30],r9
   1400246b9:	movzx  r9d,dx
   1400246bd:	mov    edx,0x2b
   1400246c2:	mov    QWORD PTR [r11-0x38],rax
   1400246c6:	call   QWORD PTR [rip+0xd954]        # 0x140032020
   1400246cc:	add    rsp,0x58
   1400246d0:	ret    
   1400246d1:	int3   
   1400246d2:	int3   
   1400246d3:	int3   
   1400246d4:	int3   
   1400246d5:	int3   
   1400246d6:	int3   
   1400246d7:	int3   
   1400246d8:	rex push rbx
   1400246da:	sub    rsp,0x50
   1400246de:	mov    rbx,rcx
   1400246e1:	mov    rcx,QWORD PTR [rcx]
   1400246e4:	test   rcx,rcx
   1400246e7:	je     0x140024753
   1400246e9:	call   QWORD PTR [rip+0xdc01]        # 0x1400322f0
   1400246ef:	test   eax,eax
   1400246f1:	jne    0x14002474f
   1400246f3:	test   BYTE PTR [rip+0x29f92],0x1        # 0x14004e68c
   1400246fa:	je     0x14002474f
   1400246fc:	call   QWORD PTR [rip+0xdb86]        # 0x140032288
   140024702:	and    QWORD PTR [rsp+0x40],0x0
   140024708:	lea    r8,[rip+0x146b1]        # 0x140038dc0
   14002470f:	mov    edx,0xa
   140024714:	mov    DWORD PTR [rsp+0x60],eax
   140024718:	lea    rax,[rsp+0x60]
   14002471d:	movzx  r9d,dx
   140024721:	lea    ecx,[rdx-0x6]
   140024724:	mov    QWORD PTR [rsp+0x38],rcx
   140024729:	lea    edx,[rcx+0x27]
   14002472c:	mov    QWORD PTR [rsp+0x30],rax
   140024731:	lea    rax,[rip+0x14684]        # 0x140038dbc
   140024738:	mov    QWORD PTR [rsp+0x28],rcx
   14002473d:	mov    rcx,QWORD PTR [rip+0x29f3c]        # 0x14004e680
   140024744:	mov    QWORD PTR [rsp+0x20],rax
   140024749:	call   QWORD PTR [rip+0xd8d1]        # 0x140032020
   14002474f:	and    QWORD PTR [rbx],0x0
   140024753:	mov    rcx,QWORD PTR [rbx+0x8]
   140024757:	test   rcx,rcx
   14002475a:	je     0x140024767
   14002475c:	call   QWORD PTR [rip+0xd9f6]        # 0x140032158
   140024762:	and    QWORD PTR [rbx+0x8],0x0
   140024767:	add    rsp,0x50
   14002476b:	pop    rbx
   14002476c:	ret    
   14002476d:	int3   
   14002476e:	int3   
   14002476f:	int3   
   140024770:	int3   
   140024771:	int3   
   140024772:	int3   
   140024773:	int3   
   140024774:	mov    rax,rsp
   140024777:	mov    QWORD PTR [rax+0x8],rbx
   14002477b:	mov    QWORD PTR [rax+0x18],rsi
   14002477f:	mov    QWORD PTR [rax+0x20],rdi
   140024783:	push   r14
   140024785:	sub    rsp,0x50
   140024789:	and    QWORD PTR [rax-0x30],0x0
   14002478e:	mov    esi,0x48
   140024793:	mov    rdi,rcx
   140024796:	mov    DWORD PTR [rax-0x38],esi
   140024799:	xor    r9d,r9d
   14002479c:	xor    edx,edx
   14002479e:	or     rcx,0xffffffffffffffff
   1400247a2:	lea    r14d,[rsi-0x44]
   1400247a6:	mov    r8d,r14d
   1400247a9:	call   QWORD PTR [rip+0xdb39]        # 0x1400322e8
   1400247af:	mov    rbx,rax
   1400247b2:	test   rax,rax
   1400247b5:	jne    0x1400247d1
   1400247b7:	call   QWORD PTR [rip+0xdacb]        # 0x140032288
   1400247bd:	mov    esi,eax
   1400247bf:	test   BYTE PTR [rip+0x29ec6],0x1        # 0x14004e68c
   1400247c6:	je     0x14002484e
   1400247cc:	lea    ecx,[rbx+0xb]
   1400247cf:	jmp    0x140024807
   1400247d1:	xor    r9d,r9d
   1400247d4:	mov    QWORD PTR [rsp+0x20],rsi
   1400247d9:	xor    r8d,r8d
   1400247dc:	mov    rcx,rax
   1400247df:	lea    edx,[r9+0x6]
   1400247e3:	call   QWORD PTR [rip+0xdaf7]        # 0x1400322e0
   1400247e9:	mov    QWORD PTR [rdi],rax
   1400247ec:	test   rax,rax
   1400247ef:	jne    0x14002485e
   1400247f1:	call   QWORD PTR [rip+0xda91]        # 0x140032288
   1400247f7:	mov    esi,eax
   1400247f9:	test   BYTE PTR [rip+0x29e8c],0x1        # 0x14004e68c
   140024800:	je     0x14002484e
   140024802:	mov    ecx,0xc
   140024807:	and    QWORD PTR [rsp+0x40],0x0
   14002480d:	lea    r8,[rip+0x145ac]        # 0x140038dc0
   140024814:	mov    DWORD PTR [rsp+0x68],eax
   140024818:	mov    edx,0x2b
   14002481d:	mov    QWORD PTR [rsp+0x38],r14
   140024822:	lea    rax,[rsp+0x68]
   140024827:	mov    QWORD PTR [rsp+0x30],rax
   14002482c:	lea    rax,[rip+0x14589]        # 0x140038dbc
   140024833:	movzx  r9d,cx
   140024837:	mov    rcx,QWORD PTR [rip+0x29e42]        # 0x14004e680
   14002483e:	mov    QWORD PTR [rsp+0x28],r14
   140024843:	mov    QWORD PTR [rsp+0x20],rax
   140024848:	call   QWORD PTR [rip+0xd7d2]        # 0x140032020
   14002484e:	movzx  edi,si
   140024851:	or     edi,0x80070000
   140024857:	test   esi,esi
   140024859:	cmovle edi,esi
   14002485c:	jmp    0x14002487c
   14002485e:	mov    rcx,QWORD PTR [rdi+0x8]
   140024862:	mov    rsi,rbx
   140024865:	xor    ebx,ebx
   140024867:	test   rcx,rcx
   14002486a:	je     0x140024876
   14002486c:	call   QWORD PTR [rip+0xd8e6]        # 0x140032158
   140024872:	and    QWORD PTR [rdi+0x8],rbx
   140024876:	mov    QWORD PTR [rdi+0x8],rsi
   14002487a:	xor    edi,edi
   14002487c:	test   rbx,rbx
   14002487f:	je     0x14002488a
   140024881:	mov    rcx,rbx
   140024884:	call   QWORD PTR [rip+0xd8ce]        # 0x140032158
   14002488a:	mov    rbx,QWORD PTR [rsp+0x60]
   14002488f:	mov    eax,edi
   140024891:	mov    rdi,QWORD PTR [rsp+0x78]
   140024896:	mov    rsi,QWORD PTR [rsp+0x70]
   14002489b:	add    rsp,0x50
   14002489f:	pop    r14
   1400248a1:	ret    
   1400248a2:	int3   
   1400248a3:	int3   
   1400248a4:	int3   
   1400248a5:	int3   
   1400248a6:	int3   
   1400248a7:	int3   
   1400248a8:	sub    rsp,0x48
   1400248ac:	mov    rax,QWORD PTR [rcx]
   1400248af:	lock xadd QWORD PTR [rax],rdx
   1400248b4:	jmp    0x1400248fb
   1400248b6:	test   BYTE PTR [rip+0x29dcf],0x1        # 0x14004e68c
   1400248bd:	je     0x1400248fb
   1400248bf:	mov    ecx,0xd
   1400248c4:	and    QWORD PTR [rsp+0x30],0x0
   1400248ca:	mov    QWORD PTR [rsp+0x28],0x4
   1400248d3:	lea    rax,[rip+0x144e2]        # 0x140038dbc
   1400248da:	mov    QWORD PTR [rsp+0x20],rax
   1400248df:	movzx  r9d,cx
   1400248e3:	lea    r8,[rip+0x14506]        # 0x140038df0
   1400248ea:	lea    edx,[rcx+0x1e]
   1400248ed:	mov    rcx,QWORD PTR [rip+0x29d8c]        # 0x14004e680
   1400248f4:	call   QWORD PTR [rip+0xd726]        # 0x140032020
   1400248fa:	nop
   1400248fb:	add    rsp,0x48
   1400248ff:	ret    
   140024900:	int3   
   140024901:	int3   
   140024902:	int3   
   140024903:	int3   
   140024904:	int3   
   140024905:	int3   
   140024906:	int3   
   140024907:	int3   
   140024908:	sub    rsp,0x48
   14002490c:	mov    rax,QWORD PTR [rcx]
   14002490f:	lock xadd DWORD PTR [rax+0x8],edx
   140024914:	jmp    0x14002495b
   140024916:	test   BYTE PTR [rip+0x29d6f],0x1        # 0x14004e68c
   14002491d:	je     0x14002495b
   14002491f:	mov    ecx,0x11
   140024924:	and    QWORD PTR [rsp+0x30],0x0
   14002492a:	mov    QWORD PTR [rsp+0x28],0x4
   140024933:	lea    rax,[rip+0x14482]        # 0x140038dbc
   14002493a:	mov    QWORD PTR [rsp+0x20],rax
   14002493f:	movzx  r9d,cx
   140024943:	lea    r8,[rip+0x144a6]        # 0x140038df0
   14002494a:	lea    edx,[rcx+0x1a]
   14002494d:	mov    rcx,QWORD PTR [rip+0x29d2c]        # 0x14004e680
   140024954:	call   QWORD PTR [rip+0xd6c6]        # 0x140032020
   14002495a:	nop
   14002495b:	add    rsp,0x48
   14002495f:	ret    
   140024960:	int3   
   140024961:	int3   
   140024962:	int3   
   140024963:	int3   
   140024964:	int3   
   140024965:	int3   
   140024966:	int3   
   140024967:	int3   
   140024968:	sub    rsp,0x48
   14002496c:	mov    rax,QWORD PTR [rcx]
   14002496f:	lock xadd QWORD PTR [rax+0x10],rdx
   140024975:	jmp    0x1400249bc
   140024977:	test   BYTE PTR [rip+0x29d0e],0x1        # 0x14004e68c
   14002497e:	je     0x1400249bc
   140024980:	mov    ecx,0x15
   140024985:	and    QWORD PTR [rsp+0x30],0x0
   14002498b:	mov    QWORD PTR [rsp+0x28],0x4
   140024994:	lea    rax,[rip+0x14421]        # 0x140038dbc
   14002499b:	mov    QWORD PTR [rsp+0x20],rax
   1400249a0:	movzx  r9d,cx
   1400249a4:	lea    r8,[rip+0x14445]        # 0x140038df0
   1400249ab:	lea    edx,[rcx+0x16]
   1400249ae:	mov    rcx,QWORD PTR [rip+0x29ccb]        # 0x14004e680
   1400249b5:	call   QWORD PTR [rip+0xd665]        # 0x140032020
   1400249bb:	nop
   1400249bc:	add    rsp,0x48
   1400249c0:	ret    
   1400249c1:	int3   
   1400249c2:	int3   
   1400249c3:	int3   
   1400249c4:	int3   
   1400249c5:	int3   
   1400249c6:	int3   
   1400249c7:	int3   
   1400249c8:	sub    rsp,0x48
   1400249cc:	mov    rax,QWORD PTR [rcx]
   1400249cf:	lock xadd DWORD PTR [rax+0x18],edx
   1400249d4:	jmp    0x140024a1b
   1400249d6:	test   BYTE PTR [rip+0x29caf],0x1        # 0x14004e68c
   1400249dd:	je     0x140024a1b
   1400249df:	mov    ecx,0x19
   1400249e4:	and    QWORD PTR [rsp+0x30],0x0
   1400249ea:	mov    QWORD PTR [rsp+0x28],0x4
   1400249f3:	lea    rax,[rip+0x143c2]        # 0x140038dbc
   1400249fa:	mov    QWORD PTR [rsp+0x20],rax
   1400249ff:	movzx  r9d,cx
   140024a03:	lea    r8,[rip+0x143e6]        # 0x140038df0
   140024a0a:	lea    edx,[rcx+0x12]
   140024a0d:	mov    rcx,QWORD PTR [rip+0x29c6c]        # 0x14004e680
   140024a14:	call   QWORD PTR [rip+0xd606]        # 0x140032020
   140024a1a:	nop
   140024a1b:	add    rsp,0x48
   140024a1f:	ret    
   140024a20:	int3   
   140024a21:	int3   
   140024a22:	int3   
   140024a23:	int3   
   140024a24:	int3   
   140024a25:	int3   
   140024a26:	int3   
   140024a27:	int3   
   140024a28:	sub    rsp,0x48
   140024a2c:	mov    rax,QWORD PTR [rcx]
   140024a2f:	lock xadd QWORD PTR [rax+0x20],rdx
   140024a35:	jmp    0x140024a7c
   140024a37:	test   BYTE PTR [rip+0x29c4e],0x1        # 0x14004e68c
   140024a3e:	je     0x140024a7c
   140024a40:	mov    ecx,0x1d
   140024a45:	and    QWORD PTR [rsp+0x30],0x0
   140024a4b:	mov    QWORD PTR [rsp+0x28],0x4
   140024a54:	lea    rax,[rip+0x14361]        # 0x140038dbc
   140024a5b:	mov    QWORD PTR [rsp+0x20],rax
   140024a60:	movzx  r9d,cx
   140024a64:	lea    r8,[rip+0x14385]        # 0x140038df0
   140024a6b:	lea    edx,[rcx+0xe]
   140024a6e:	mov    rcx,QWORD PTR [rip+0x29c0b]        # 0x14004e680
   140024a75:	call   QWORD PTR [rip+0xd5a5]        # 0x140032020
   140024a7b:	nop
   140024a7c:	add    rsp,0x48
   140024a80:	ret    
   140024a81:	int3   
   140024a82:	int3   
   140024a83:	int3   
   140024a84:	int3   
   140024a85:	int3   
   140024a86:	int3   
   140024a87:	int3   
   140024a88:	sub    rsp,0x48
   140024a8c:	mov    rax,QWORD PTR [rcx]
   140024a8f:	lock xadd DWORD PTR [rax+0x28],edx
   140024a94:	jmp    0x140024adb
   140024a96:	test   BYTE PTR [rip+0x29bef],0x1        # 0x14004e68c
   140024a9d:	je     0x140024adb
   140024a9f:	mov    ecx,0x21
   140024aa4:	and    QWORD PTR [rsp+0x30],0x0
   140024aaa:	mov    QWORD PTR [rsp+0x28],0x4
   140024ab3:	lea    rax,[rip+0x14302]        # 0x140038dbc
   140024aba:	mov    QWORD PTR [rsp+0x20],rax
   140024abf:	movzx  r9d,cx
   140024ac3:	lea    r8,[rip+0x14326]        # 0x140038df0
   140024aca:	lea    edx,[rcx+0xa]
   140024acd:	mov    rcx,QWORD PTR [rip+0x29bac]        # 0x14004e680
   140024ad4:	call   QWORD PTR [rip+0xd546]        # 0x140032020
   140024ada:	nop
   140024adb:	add    rsp,0x48
   140024adf:	ret    
   140024ae0:	int3   
   140024ae1:	int3   
   140024ae2:	int3   
   140024ae3:	int3   
   140024ae4:	int3   
   140024ae5:	int3   
   140024ae6:	int3   
   140024ae7:	int3   
   140024ae8:	sub    rsp,0x48
   140024aec:	mov    rax,QWORD PTR [rcx]
   140024aef:	lock inc DWORD PTR [rax+0x2c]
   140024af3:	jmp    0x140024b3a
   140024af5:	test   BYTE PTR [rip+0x29b90],0x1        # 0x14004e68c
   140024afc:	je     0x140024b3a
   140024afe:	mov    ecx,0x26
   140024b03:	and    QWORD PTR [rsp+0x30],0x0
   140024b09:	mov    QWORD PTR [rsp+0x28],0x4
   140024b12:	lea    rax,[rip+0x142a3]        # 0x140038dbc
   140024b19:	mov    QWORD PTR [rsp+0x20],rax
   140024b1e:	movzx  r9d,cx
   140024b22:	lea    r8,[rip+0x142c7]        # 0x140038df0
   140024b29:	lea    edx,[rcx+0x5]
   140024b2c:	mov    rcx,QWORD PTR [rip+0x29b4d]        # 0x14004e680
   140024b33:	call   QWORD PTR [rip+0xd4e7]        # 0x140032020
   140024b39:	nop
   140024b3a:	add    rsp,0x48
   140024b3e:	ret    
   140024b3f:	int3   
   140024b40:	int3   
   140024b41:	int3   
   140024b42:	int3   
   140024b43:	int3   
   140024b44:	int3   
   140024b45:	int3   
   140024b46:	int3   
   140024b47:	int3   
   140024b48:	sub    rsp,0x48
   140024b4c:	mov    rax,QWORD PTR [rcx]
   140024b4f:	lock dec DWORD PTR [rax+0x2c]
   140024b53:	jmp    0x140024b9a
   140024b55:	test   BYTE PTR [rip+0x29b30],0x1        # 0x14004e68c
   140024b5c:	je     0x140024b9a
   140024b5e:	mov    ecx,0x27
   140024b63:	and    QWORD PTR [rsp+0x30],0x0
   140024b69:	mov    QWORD PTR [rsp+0x28],0x4
   140024b72:	lea    rax,[rip+0x14243]        # 0x140038dbc
   140024b79:	mov    QWORD PTR [rsp+0x20],rax
   140024b7e:	movzx  r9d,cx
   140024b82:	lea    r8,[rip+0x14267]        # 0x140038df0
   140024b89:	lea    edx,[rcx+0x4]
   140024b8c:	mov    rcx,QWORD PTR [rip+0x29aed]        # 0x14004e680
   140024b93:	call   QWORD PTR [rip+0xd487]        # 0x140032020
   140024b99:	nop
   140024b9a:	add    rsp,0x48
   140024b9e:	ret    
   140024b9f:	int3   
   140024ba0:	int3   
   140024ba1:	int3   
   140024ba2:	int3   
   140024ba3:	int3   
   140024ba4:	int3   
   140024ba5:	int3   
   140024ba6:	int3   
   140024ba7:	int3   
   140024ba8:	sub    rsp,0x48
   140024bac:	mov    rax,QWORD PTR [rcx]
   140024baf:	lock inc DWORD PTR [rax+0x30]
   140024bb3:	jmp    0x140024bfa
   140024bb5:	test   BYTE PTR [rip+0x29ad0],0x1        # 0x14004e68c
   140024bbc:	je     0x140024bfa
   140024bbe:	mov    ecx,0x2a
   140024bc3:	and    QWORD PTR [rsp+0x30],0x0
   140024bc9:	mov    QWORD PTR [rsp+0x28],0x4
   140024bd2:	lea    rax,[rip+0x141e3]        # 0x140038dbc
   140024bd9:	mov    QWORD PTR [rsp+0x20],rax
   140024bde:	movzx  r9d,cx
   140024be2:	lea    r8,[rip+0x14207]        # 0x140038df0
   140024be9:	lea    edx,[rcx+0x1]
   140024bec:	mov    rcx,QWORD PTR [rip+0x29a8d]        # 0x14004e680
   140024bf3:	call   QWORD PTR [rip+0xd427]        # 0x140032020
   140024bf9:	nop
   140024bfa:	add    rsp,0x48
   140024bfe:	ret    
   140024bff:	int3   
   140024c00:	int3   
   140024c01:	int3   
   140024c02:	int3   
   140024c03:	int3   
   140024c04:	int3   
   140024c05:	int3   
   140024c06:	int3   
   140024c07:	int3   
   140024c08:	sub    rsp,0x48
   140024c0c:	mov    rax,QWORD PTR [rcx]
   140024c0f:	lock inc DWORD PTR [rax+0x38]
   140024c13:	jmp    0x140024c5a
   140024c15:	test   BYTE PTR [rip+0x29a70],0x1        # 0x14004e68c
   140024c1c:	je     0x140024c5a
   140024c1e:	mov    ecx,0x32
   140024c23:	and    QWORD PTR [rsp+0x30],0x0
   140024c29:	mov    QWORD PTR [rsp+0x28],0x4
   140024c32:	lea    rax,[rip+0x14183]        # 0x140038dbc
   140024c39:	mov    QWORD PTR [rsp+0x20],rax
   140024c3e:	movzx  r9d,cx
   140024c42:	lea    r8,[rip+0x141a7]        # 0x140038df0
   140024c49:	lea    edx,[rcx-0x7]
   140024c4c:	mov    rcx,QWORD PTR [rip+0x29a2d]        # 0x14004e680
   140024c53:	call   QWORD PTR [rip+0xd3c7]        # 0x140032020
   140024c59:	nop
   140024c5a:	add    rsp,0x48
   140024c5e:	ret    
   140024c5f:	int3   
   140024c60:	int3   
   140024c61:	int3   
   140024c62:	int3   
   140024c63:	int3   
   140024c64:	int3   
   140024c65:	int3   
   140024c66:	int3   
   140024c67:	int3   
   140024c68:	sub    rsp,0x48
   140024c6c:	mov    rax,QWORD PTR [rcx]
   140024c6f:	lock xadd DWORD PTR [rax+0x3c],edx
   140024c74:	jmp    0x140024cbb
   140024c76:	test   BYTE PTR [rip+0x29a0f],0x1        # 0x14004e68c
   140024c7d:	je     0x140024cbb
   140024c7f:	mov    ecx,0x35
   140024c84:	and    QWORD PTR [rsp+0x30],0x0
   140024c8a:	mov    QWORD PTR [rsp+0x28],0x4
   140024c93:	lea    rax,[rip+0x14122]        # 0x140038dbc
   140024c9a:	mov    QWORD PTR [rsp+0x20],rax
   140024c9f:	movzx  r9d,cx
   140024ca3:	lea    r8,[rip+0x14146]        # 0x140038df0
   140024caa:	lea    edx,[rcx-0xa]
   140024cad:	mov    rcx,QWORD PTR [rip+0x299cc]        # 0x14004e680
   140024cb4:	call   QWORD PTR [rip+0xd366]        # 0x140032020
   140024cba:	nop
   140024cbb:	add    rsp,0x48
   140024cbf:	ret    
   140024cc0:	int3   
   140024cc1:	int3   
   140024cc2:	int3   
   140024cc3:	int3   
   140024cc4:	int3   
   140024cc5:	int3   
   140024cc6:	int3   
   140024cc7:	int3   
   140024cc8:	sub    rsp,0x48
   140024ccc:	mov    rax,QWORD PTR [rcx]
   140024ccf:	lock xadd DWORD PTR [rax+0x40],edx
   140024cd4:	jmp    0x140024d1b
   140024cd6:	test   BYTE PTR [rip+0x299af],0x1        # 0x14004e68c
   140024cdd:	je     0x140024d1b
   140024cdf:	mov    ecx,0x39
   140024ce4:	and    QWORD PTR [rsp+0x30],0x0
   140024cea:	mov    QWORD PTR [rsp+0x28],0x4
   140024cf3:	lea    rax,[rip+0x140c2]        # 0x140038dbc
   140024cfa:	mov    QWORD PTR [rsp+0x20],rax
   140024cff:	movzx  r9d,cx
   140024d03:	lea    r8,[rip+0x140e6]        # 0x140038df0
   140024d0a:	lea    edx,[rcx-0xe]
   140024d0d:	mov    rcx,QWORD PTR [rip+0x2996c]        # 0x14004e680
   140024d14:	call   QWORD PTR [rip+0xd306]        # 0x140032020
   140024d1a:	nop
   140024d1b:	add    rsp,0x48
   140024d1f:	ret    
   140024d20:	int3   
   140024d21:	int3   
   140024d22:	int3   
   140024d23:	int3   
   140024d24:	int3   
   140024d25:	int3   
   140024d26:	int3   
   140024d27:	int3   
   140024d28:	sub    rsp,0x48
   140024d2c:	mov    rcx,QWORD PTR [rcx]
   140024d2f:	mov    eax,0x1
   140024d34:	lock xadd DWORD PTR [rcx+0x44],eax
   140024d39:	jmp    0x140024d80
   140024d3b:	test   BYTE PTR [rip+0x2994a],0x1        # 0x14004e68c
   140024d42:	je     0x140024d80
   140024d44:	mov    ecx,0x3d
   140024d49:	and    QWORD PTR [rsp+0x30],0x0
   140024d4f:	mov    QWORD PTR [rsp+0x28],0x4
   140024d58:	lea    rax,[rip+0x1405d]        # 0x140038dbc
   140024d5f:	mov    QWORD PTR [rsp+0x20],rax
   140024d64:	movzx  r9d,cx
   140024d68:	lea    r8,[rip+0x14081]        # 0x140038df0
   140024d6f:	lea    edx,[rcx-0x12]
   140024d72:	mov    rcx,QWORD PTR [rip+0x29907]        # 0x14004e680
   140024d79:	call   QWORD PTR [rip+0xd2a1]        # 0x140032020
   140024d7f:	nop
   140024d80:	add    rsp,0x48
   140024d84:	ret    
   140024d85:	int3   
   140024d86:	int3   
   140024d87:	int3   
   140024d88:	int3   
   140024d89:	int3   
   140024d8a:	int3   
   140024d8b:	int3   
   140024d8c:	mov    QWORD PTR [rsp+0x8],rbx
   140024d91:	push   rdi
   140024d92:	sub    rsp,0x180
   140024d99:	mov    rax,QWORD PTR [rip+0x26280]        # 0x14004b020
   140024da0:	xor    rax,rsp
   140024da3:	mov    QWORD PTR [rsp+0x170],rax
   140024dab:	mov    QWORD PTR [rip+0x2b316],rcx        # 0x1400500c8
   140024db2:	lea    rcx,[rip+0x1405f]        # 0x140038e18
   140024db9:	call   QWORD PTR [rip+0xd511]        # 0x1400322d0
   140024dbf:	mov    QWORD PTR [rip+0x2b2fa],rax        # 0x1400500c0
   140024dc6:	test   rax,rax
   140024dc9:	jne    0x140024dd2
   140024dcb:	xor    eax,eax
   140024dcd:	jmp    0x140024f27
   140024dd2:	test   BYTE PTR [rip+0x298b3],0x4        # 0x14004e68c
   140024dd9:	je     0x140024e1d
   140024ddb:	and    QWORD PTR [rsp+0x30],0x0
   140024de1:	lea    rax,[rip+0x13fd4]        # 0x140038dbc
   140024de8:	mov    ecx,0xa
   140024ded:	mov    QWORD PTR [rsp+0x28],0x4
   140024df6:	movzx  r9d,cx
   140024dfa:	lea    r8,[rip+0x14147]        # 0x140038f48
   140024e01:	mov    QWORD PTR [rsp+0x20],rax
   140024e06:	lea    edx,[rcx+0x21]
   140024e09:	mov    rcx,QWORD PTR [rip+0x29870]        # 0x14004e680
   140024e10:	call   QWORD PTR [rip+0xd20a]        # 0x140032020
   140024e16:	mov    rax,QWORD PTR [rip+0x2b2a3]        # 0x1400500c0
   140024e1d:	lea    rdx,[rip+0x14004]        # 0x140038e28
   140024e24:	mov    rcx,rax
   140024e27:	call   QWORD PTR [rip+0xd473]        # 0x1400322a0
   140024e2d:	xor    edx,edx
   140024e2f:	mov    DWORD PTR [rsp+0x50],0x114
   140024e37:	mov    r8d,0x110
   140024e3d:	lea    rcx,[rsp+0x54]
   140024e42:	mov    rbx,rax
   140024e45:	call   0x14002e2ce
   140024e4a:	lea    rcx,[rsp+0x50]
   140024e4f:	call   QWORD PTR [rip+0xd453]        # 0x1400322a8
   140024e55:	test   eax,eax
   140024e57:	jne    0x140024e6b
   140024e59:	lea    rcx,[rip+0x13fe0]        # 0x140038e40
   140024e60:	call   QWORD PTR [rip+0xd492]        # 0x1400322f8
   140024e66:	jmp    0x140024dcb
   140024e6b:	cmp    DWORD PTR [rsp+0x54],0x6
   140024e70:	jb     0x140024ea4
   140024e72:	test   rbx,rbx
   140024e75:	jne    0x140024e80
   140024e77:	lea    rcx,[rip+0x13fe2]        # 0x140038e60
   140024e7e:	jmp    0x140024e60
   140024e80:	mov    rcx,rbx
   140024e83:	call   QWORD PTR [rip+0xd81f]        # 0x1400326a8
   140024e89:	xor    r9d,r9d
   140024e8c:	xor    r8d,r8d
   140024e8f:	xor    ecx,ecx
   140024e91:	lea    edx,[r9+0x1]
   140024e95:	call   rbx
   140024e97:	test   eax,eax
   140024e99:	jne    0x140024ea4
   140024e9b:	lea    rcx,[rip+0x13ff6]        # 0x140038e98
   140024ea2:	jmp    0x140024e60
   140024ea4:	call   QWORD PTR [rip+0xd41e]        # 0x1400322c8
   140024eaa:	mov    DWORD PTR [rsp+0x40],0x2
   140024eb2:	mov    rdi,rax
   140024eb5:	test   rbx,rbx
   140024eb8:	je     0x140024ee6
   140024eba:	mov    rcx,rbx
   140024ebd:	call   QWORD PTR [rip+0xd7e5]        # 0x1400326a8
   140024ec3:	mov    r9d,0x4
   140024ec9:	lea    r8,[rsp+0x40]
   140024ece:	xor    edx,edx
   140024ed0:	mov    rcx,rdi
   140024ed3:	call   rbx
   140024ed5:	test   eax,eax
   140024ed7:	jne    0x140024ee6
   140024ed9:	lea    rcx,[rip+0x13ff0]        # 0x140038ed0
   140024ee0:	call   QWORD PTR [rip+0xd412]        # 0x1400322f8
   140024ee6:	lea    rax,[rip+0x297bb]        # 0x14004e6a8
   140024eed:	mov    r9d,0x20019
   140024ef3:	xor    r8d,r8d
   140024ef6:	mov    QWORD PTR [rsp+0x20],rax
   140024efb:	lea    rdx,[rip+0x14056]        # 0x140038f58
   140024f02:	mov    rcx,0xffffffff80000002
   140024f09:	call   QWORD PTR [rip+0xd1b9]        # 0x1400320c8
   140024f0f:	test   eax,eax
   140024f11:	je     0x140024f1d
   140024f13:	and    QWORD PTR [rip+0x2978d],0x0        # 0x14004e6a8
   140024f1b:	jmp    0x140024f22
   140024f1d:	call   0x1400252e4
   140024f22:	mov    eax,0x1
   140024f27:	mov    rcx,QWORD PTR [rsp+0x170]
   140024f2f:	xor    rcx,rsp
   140024f32:	call   0x14002dd00
   140024f37:	mov    rbx,QWORD PTR [rsp+0x190]
   140024f3f:	add    rsp,0x180
   140024f46:	pop    rdi
   140024f47:	ret    
   140024f48:	int3   
   140024f49:	int3   
   140024f4a:	int3   
   140024f4b:	int3   
   140024f4c:	int3   
   140024f4d:	int3   
   140024f4e:	int3   
   140024f4f:	int3   
   140024f50:	rex push rbx
   140024f52:	sub    rsp,0x40
   140024f56:	test   BYTE PTR [rip+0x2972f],0x4        # 0x14004e68c
   140024f5d:	je     0x140024f9a
   140024f5f:	and    QWORD PTR [rsp+0x30],0x0
   140024f65:	lea    rax,[rip+0x13e50]        # 0x140038dbc
   140024f6c:	mov    ecx,0xb
   140024f71:	mov    QWORD PTR [rsp+0x28],0x4
   140024f7a:	movzx  r9d,cx
   140024f7e:	lea    r8,[rip+0x13fc3]        # 0x140038f48
   140024f85:	mov    QWORD PTR [rsp+0x20],rax
   140024f8a:	lea    edx,[rcx+0x20]
   140024f8d:	mov    rcx,QWORD PTR [rip+0x296ec]        # 0x14004e680
   140024f94:	call   QWORD PTR [rip+0xd086]        # 0x140032020
   140024f9a:	mov    rax,QWORD PTR [rip+0x29727]        # 0x14004e6c8
   140024fa1:	test   rax,rax
   140024fa4:	je     0x140024fdc
   140024fa6:	xor    ebx,ebx
   140024fa8:	cmp    DWORD PTR [rip+0x29722],ebx        # 0x14004e6d0
   140024fae:	jbe    0x140024fcb
   140024fb0:	mov    rcx,QWORD PTR [rax+rbx*8]
   140024fb4:	call   QWORD PTR [rip+0xd60e]        # 0x1400325c8
   140024fba:	mov    rax,QWORD PTR [rip+0x29707]        # 0x14004e6c8
   140024fc1:	inc    ebx
   140024fc3:	cmp    ebx,DWORD PTR [rip+0x29707]        # 0x14004e6d0
   140024fc9:	jb     0x140024fb0
   140024fcb:	mov    rcx,rax
   140024fce:	call   QWORD PTR [rip+0xd5f4]        # 0x1400325c8
   140024fd4:	and    QWORD PTR [rip+0x296ec],0x0        # 0x14004e6c8
   140024fdc:	mov    rcx,QWORD PTR [rip+0x296c5]        # 0x14004e6a8
   140024fe3:	test   rcx,rcx
   140024fe6:	je     0x140024ff6
   140024fe8:	call   QWORD PTR [rip+0xd04a]        # 0x140032038
   140024fee:	and    QWORD PTR [rip+0x296b2],0x0        # 0x14004e6a8
   140024ff6:	mov    rcx,QWORD PTR [rip+0x2b0c3]        # 0x1400500c0
   140024ffd:	test   rcx,rcx
   140025000:	je     0x140025010
   140025002:	call   QWORD PTR [rip+0xd0d8]        # 0x1400320e0
   140025008:	and    QWORD PTR [rip+0x2b0b0],0x0        # 0x1400500c0
   140025010:	add    rsp,0x40
   140025014:	pop    rbx
   140025015:	ret    
   140025016:	int3   
   140025017:	int3   
   140025018:	int3   
   140025019:	int3   
   14002501a:	int3   
   14002501b:	int3   
   14002501c:	int3   
   14002501d:	int3   
   14002501e:	int3   
   14002501f:	int3   
   140025020:	sub    rsp,0x28
   140025024:	mov    eax,0x1
   140025029:	lock xadd DWORD PTR [rip+0x2b203],eax        # 0x140050234
   140025031:	inc    eax
   140025033:	cmp    eax,0x1
   140025036:	jne    0x14002503d
   140025038:	call   0x1400251d4
   14002503d:	xor    eax,eax
   14002503f:	add    rsp,0x28
   140025043:	ret    
   140025044:	int3   
   140025045:	int3   
   140025046:	int3   
   140025047:	int3   
   140025048:	int3   
   140025049:	int3   
   14002504a:	int3   
   14002504b:	int3   
   14002504c:	int3   
   14002504d:	int3   
   14002504e:	int3   
   14002504f:	int3   
   140025050:	mov    QWORD PTR [rsp+0x8],rbx
   140025055:	push   rdi
   140025056:	sub    rsp,0x20
   14002505a:	xor    ebx,ebx
   14002505c:	cmp    DWORD PTR [rip+0x26026],ebx        # 0x14004b088
   140025062:	je     0x140025080
   140025064:	lea    rdx,[rip+0x13d95]        # 0x140038e00
   14002506b:	lea    ecx,[rbx+0x14]
   14002506e:	call   0x1400253b0
   140025073:	mov    QWORD PTR [rip+0x2b1ae],rax        # 0x140050228
   14002507a:	mov    DWORD PTR [rip+0x26008],ebx        # 0x14004b088
   140025080:	or     ecx,0xffffffff
   140025083:	mov    edi,ecx
   140025085:	lock xadd DWORD PTR [rip+0x2b1a7],edi        # 0x140050234
   14002508d:	add    edi,ecx
   14002508f:	jne    0x1400250d9
   140025091:	mov    eax,ecx
   140025093:	lock xadd DWORD PTR [rip+0x29605],eax        # 0x14004e6a0
   14002509b:	add    eax,ecx
   14002509d:	jns    0x1400250e2
   14002509f:	mov    rcx,QWORD PTR [rip+0x29612]        # 0x14004e6b8
   1400250a6:	test   rcx,rcx
   1400250a9:	je     0x1400250e2
   1400250ab:	call   QWORD PTR [rip+0xd0df]        # 0x140032190
   1400250b1:	mov    rcx,QWORD PTR [rip+0x29600]        # 0x14004e6b8
   1400250b8:	call   QWORD PTR [rip+0xd09a]        # 0x140032158
   1400250be:	mov    rcx,QWORD PTR [rip+0x295eb]        # 0x14004e6b0
   1400250c5:	mov    QWORD PTR [rip+0x295ec],rbx        # 0x14004e6b8
   1400250cc:	call   QWORD PTR [rip+0xd086]        # 0x140032158
   1400250d2:	mov    QWORD PTR [rip+0x295d7],rbx        # 0x14004e6b0
   1400250d9:	test   edi,edi
   1400250db:	jns    0x1400250e2
   1400250dd:	mov    ebx,0x1
   1400250e2:	mov    eax,ebx
   1400250e4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400250e9:	add    rsp,0x20
   1400250ed:	pop    rdi
   1400250ee:	ret    
   1400250ef:	int3   
   1400250f0:	int3   
   1400250f1:	int3   
   1400250f2:	int3   
   1400250f3:	int3   
   1400250f4:	int3   
   1400250f5:	int3   
   1400250f6:	int3   
   1400250f7:	int3   
   1400250f8:	int3   
   1400250f9:	int3   
   1400250fa:	int3   
   1400250fb:	int3   
   1400250fc:	int3   
   1400250fd:	int3   
   1400250fe:	int3   
   1400250ff:	int3   
   140025100:	xor    eax,eax
   140025102:	lea    rdx,[rip+0x13e07]        # 0x140038f10
   140025109:	mov    r8d,DWORD PTR [rdx]
   14002510c:	cmp    ecx,r8d
   14002510f:	jb     0x14002511e
   140025111:	inc    eax
   140025113:	add    rdx,0x4
   140025117:	cmp    eax,0xe
   14002511a:	jb     0x140025109
   14002511c:	jmp    0x140025121
   14002511e:	mov    ecx,r8d
   140025121:	cmp    eax,0xe
   140025124:	jb     0x140025130
   140025126:	cmp    ecx,0x40000000
   14002512c:	jae    0x140025130
   14002512e:	add    ecx,ecx
   140025130:	mov    eax,ecx
   140025132:	ret    
   140025133:	int3   
   140025134:	int3   
   140025135:	int3   
   140025136:	int3   
   140025137:	int3   
   140025138:	int3   
   140025139:	int3   
   14002513a:	int3   
   14002513b:	int3   
   14002513c:	int3   
   14002513d:	int3   
   14002513e:	int3   
   14002513f:	int3   
   140025140:	mov    rax,rsp
   140025143:	mov    QWORD PTR [rax+0x8],rbx
   140025147:	mov    QWORD PTR [rax+0x10],rbp
   14002514b:	mov    QWORD PTR [rax+0x18],rsi
   14002514f:	mov    QWORD PTR [rax+0x20],rdi
   140025153:	push   r14
   140025155:	sub    rsp,0x20
   140025159:	mov    edi,r8d
   14002515c:	mov    esi,edx
   14002515e:	mov    rbp,rcx
   140025161:	call   QWORD PTR [rip+0xd061]        # 0x1400321c8
   140025167:	mov    r14d,eax
   14002516a:	mov    edx,esi
   14002516c:	jmp    0x140025184
   14002516e:	call   QWORD PTR [rip+0xd054]        # 0x1400321c8
   140025174:	sub    eax,r14d
   140025177:	cmp    eax,edi
   140025179:	jae    0x140025196
   14002517b:	mov    edx,edi
   14002517d:	sub    edx,eax
   14002517f:	cmp    edx,esi
   140025181:	cmova  edx,esi
   140025184:	mov    rcx,rbp
   140025187:	call   QWORD PTR [rip+0xcff3]        # 0x140032180
   14002518d:	mov    ebx,eax
   14002518f:	cmp    eax,0x102
   140025194:	je     0x14002516e
   140025196:	mov    rbp,QWORD PTR [rsp+0x38]
   14002519b:	mov    eax,ebx
   14002519d:	mov    rbx,QWORD PTR [rsp+0x30]
   1400251a2:	mov    rsi,QWORD PTR [rsp+0x40]
   1400251a7:	mov    rdi,QWORD PTR [rsp+0x48]
   1400251ac:	add    rsp,0x20
   1400251b0:	pop    r14
   1400251b2:	ret    
   1400251b3:	int3   
   1400251b4:	int3   
   1400251b5:	int3   
   1400251b6:	int3   
   1400251b7:	int3   
   1400251b8:	int3   
   1400251b9:	int3   
   1400251ba:	int3   
   1400251bb:	int3   
   1400251bc:	int3   
   1400251bd:	int3   
   1400251be:	int3   
   1400251bf:	int3   
   1400251c0:	mov    DWORD PTR [rip+0x2b066],0x1        # 0x140050230
   1400251ca:	ret    
   1400251cb:	int3   
   1400251cc:	int3   
   1400251cd:	int3   
   1400251ce:	int3   
   1400251cf:	int3   
   1400251d0:	int3   
   1400251d1:	int3   
   1400251d2:	int3   
   1400251d3:	int3   
   1400251d4:	mov    QWORD PTR [rsp+0x8],rbx
   1400251d9:	push   rdi
   1400251da:	sub    rsp,0x20
   1400251de:	mov    eax,0x1
   1400251e3:	mov    ecx,eax
   1400251e5:	lock xadd DWORD PTR [rip+0x294b3],ecx        # 0x14004e6a0
   1400251ed:	add    ecx,eax
   1400251ef:	xor    edi,edi
   1400251f1:	test   ecx,ecx
   1400251f3:	jg     0x14002527f
   1400251f9:	xor    r9d,r9d
   1400251fc:	xor    r8d,r8d
   1400251ff:	xor    edx,edx
   140025201:	xor    ecx,ecx
   140025203:	call   QWORD PTR [rip+0xd0b7]        # 0x1400322c0
   140025209:	mov    QWORD PTR [rip+0x294a0],rax        # 0x14004e6b0
   140025210:	test   rax,rax
   140025213:	jne    0x14002522c
   140025215:	call   QWORD PTR [rip+0xd06d]        # 0x140032288
   14002521b:	mov    ecx,eax
   14002521d:	movzx  eax,ax
   140025220:	or     eax,0x80070000
   140025225:	test   ecx,ecx
   140025227:	cmovle eax,ecx
   14002522a:	jmp    0x14002527f
   14002522c:	xor    r9d,r9d
   14002522f:	xor    r8d,r8d
   140025232:	xor    edx,edx
   140025234:	xor    ecx,ecx
   140025236:	call   QWORD PTR [rip+0xd084]        # 0x1400322c0
   14002523c:	mov    QWORD PTR [rip+0x29475],rax        # 0x14004e6b8
   140025243:	test   rax,rax
   140025246:	jne    0x140025273
   140025248:	call   QWORD PTR [rip+0xd03a]        # 0x140032288
   14002524e:	mov    rcx,QWORD PTR [rip+0x2945b]        # 0x14004e6b0
   140025255:	mov    ebx,eax
   140025257:	call   QWORD PTR [rip+0xcefb]        # 0x140032158
   14002525d:	movzx  eax,bx
   140025260:	or     eax,0x80070000
   140025265:	mov    QWORD PTR [rip+0x29444],rdi        # 0x14004e6b0
   14002526c:	test   ebx,ebx
   14002526e:	cmovle eax,ebx
   140025271:	jmp    0x14002527f
   140025273:	call   0x140025290
   140025278:	test   eax,eax
   14002527a:	cmovs  edi,eax
   14002527d:	mov    eax,edi
   14002527f:	mov    rbx,QWORD PTR [rsp+0x30]
   140025284:	add    rsp,0x20
   140025288:	pop    rdi
   140025289:	ret    
   14002528a:	int3   
   14002528b:	int3   
   14002528c:	int3   
   14002528d:	int3   
   14002528e:	int3   
   14002528f:	int3   
   140025290:	sub    rsp,0x38
   140025294:	mov    rcx,QWORD PTR [rip+0x2940d]        # 0x14004e6a8
   14002529b:	test   rcx,rcx
   14002529e:	jne    0x1400252a5
   1400252a0:	lea    eax,[rcx+0x1]
   1400252a3:	jmp    0x1400252d6
   1400252a5:	mov    r9,QWORD PTR [rip+0x29404]        # 0x14004e6b0
   1400252ac:	mov    edx,0x1
   1400252b1:	mov    DWORD PTR [rsp+0x20],edx
   1400252b5:	lea    r8d,[rdx+0x3]
   1400252b9:	call   QWORD PTR [rip+0xcde1]        # 0x1400320a0
   1400252bf:	mov    ecx,eax
   1400252c1:	test   eax,eax
   1400252c3:	je     0x1400252d4
   1400252c5:	movzx  eax,ax
   1400252c8:	or     eax,0x80070000
   1400252cd:	test   ecx,ecx
   1400252cf:	cmovle eax,ecx
   1400252d2:	jmp    0x1400252d6
   1400252d4:	xor    eax,eax
   1400252d6:	add    rsp,0x38
   1400252da:	ret    
   1400252db:	int3   
   1400252dc:	int3   
   1400252dd:	int3   
   1400252de:	int3   
   1400252df:	int3   
   1400252e0:	int3   
   1400252e1:	int3   
   1400252e2:	int3   
   1400252e3:	int3   
   1400252e4:	mov    QWORD PTR [rsp+0x18],rbx
   1400252e9:	mov    QWORD PTR [rsp+0x8],rcx
   1400252ee:	push   rbp
   1400252ef:	push   rsi
   1400252f0:	push   rdi
   1400252f1:	sub    rsp,0x30
   1400252f5:	xor    ebx,ebx
   1400252f7:	lea    rbp,[rip+0x25d92]        # 0x14004b090
   1400252fe:	xor    edi,edi
   140025300:	mov    rsi,rbp
   140025303:	mov    rcx,QWORD PTR [rip+0x2939e]        # 0x14004e6a8
   14002530a:	test   rcx,rcx
   14002530d:	je     0x140025389
   14002530f:	mov    rdx,QWORD PTR [rsi+0x8]
   140025313:	lea    rax,[rsp+0x58]
   140025318:	mov    r9d,0x20019
   14002531e:	mov    QWORD PTR [rsp+0x20],rax
   140025323:	xor    r8d,r8d
   140025326:	call   QWORD PTR [rip+0xcd9c]        # 0x1400320c8
   14002532c:	test   eax,eax
   14002532e:	je     0x140025340
   140025330:	movzx  ebx,ax
   140025333:	or     ebx,0x80070000
   140025339:	test   eax,eax
   14002533b:	cmovle ebx,eax
   14002533e:	jmp    0x140025389
   140025340:	mov    rdx,QWORD PTR [rsi]
   140025343:	lea    rcx,[rdi+0x1]
   140025347:	lea    rcx,[rdi+rcx*2]
   14002534b:	mov    DWORD PTR [rsp+0x50],0x4
   140025353:	lea    rax,[rcx*8+0x0]
   14002535b:	xor    r9d,r9d
   14002535e:	lea    rcx,[rsp+0x50]
   140025363:	add    rax,rbp
   140025366:	mov    QWORD PTR [rsp+0x28],rcx
   14002536b:	xor    r8d,r8d
   14002536e:	mov    rcx,QWORD PTR [rsp+0x58]
   140025373:	mov    QWORD PTR [rsp+0x20],rax
   140025378:	call   QWORD PTR [rip+0xcd2a]        # 0x1400320a8
   14002537e:	mov    rcx,QWORD PTR [rsp+0x58]
   140025383:	call   QWORD PTR [rip+0xccaf]        # 0x140032038
   140025389:	inc    edi
   14002538b:	add    rsi,0x18
   14002538f:	cmp    edi,0x236
   140025395:	jb     0x140025303
   14002539b:	mov    eax,ebx
   14002539d:	mov    rbx,QWORD PTR [rsp+0x60]
   1400253a2:	add    rsp,0x30
   1400253a6:	pop    rdi
   1400253a7:	pop    rsi
   1400253a8:	pop    rbp
   1400253a9:	ret    
   1400253aa:	int3   
   1400253ab:	int3   
   1400253ac:	int3   
   1400253ad:	int3   
   1400253ae:	int3   
   1400253af:	int3   
   1400253b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400253b5:	mov    QWORD PTR [rsp+0x10],rsi
   1400253ba:	mov    QWORD PTR [rsp+0x18],rdi
   1400253bf:	or     r8d,0xffffffff
   1400253c3:	mov    r9d,ecx
   1400253c6:	xor    r10d,r10d
   1400253c9:	lea    rsi,[rip+0x25cc0]        # 0x14004b090
   1400253d0:	mov    edi,0x236
   1400253d5:	mov    rbx,rdx
   1400253d8:	cmp    ecx,edi
   1400253da:	jae    0x14002541d
   1400253dc:	mov    rax,rdx
   1400253df:	lea    r11,[r9+r9*2]
   1400253e3:	mov    rdx,QWORD PTR [rsi+r11*8]
   1400253e7:	sub    rdx,rax
   1400253ea:	mov    cl,BYTE PTR [rax]
   1400253ec:	cmp    cl,BYTE PTR [rax+rdx*1]
   1400253ef:	jne    0x1400253fd
   1400253f1:	inc    rax
   1400253f4:	test   cl,cl
   1400253f6:	jne    0x1400253ea
   1400253f8:	mov    r8d,r10d
   1400253fb:	jmp    0x140025404
   1400253fd:	sbb    r8d,r8d
   140025400:	or     r8d,0x1
   140025404:	test   r8d,r8d
   140025407:	jne    0x140025413
   140025409:	lea    r10,[rsi+0x10]
   14002540d:	lea    r10,[r10+r11*8]
   140025411:	jmp    0x140025467
   140025413:	sar    r8d,0x1f
   140025417:	or     r8d,0x1
   14002541b:	jmp    0x140025451
   14002541d:	mov    r9d,edi
   140025420:	jmp    0x140025451
   140025422:	lea    rcx,[r9+r9*2]
   140025426:	mov    rax,rbx
   140025429:	mov    rdx,QWORD PTR [rsi+rcx*8]
   14002542d:	sub    rdx,rbx
   140025430:	mov    cl,BYTE PTR [rax]
   140025432:	cmp    cl,BYTE PTR [rax+rdx*1]
   140025435:	jne    0x140025443
   140025437:	inc    rax
   14002543a:	test   cl,cl
   14002543c:	jne    0x140025430
   14002543e:	mov    eax,r10d
   140025441:	jmp    0x140025448
   140025443:	sbb    eax,eax
   140025445:	or     eax,0x1
   140025448:	test   eax,eax
   14002544a:	je     0x14002545b
   14002544c:	xor    eax,r8d
   14002544f:	jl     0x140025467
   140025451:	add    r9d,r8d
   140025454:	cmp    r9d,edi
   140025457:	jb     0x140025422
   140025459:	jmp    0x140025467
   14002545b:	lea    r10,[r9+0x1]
   14002545f:	lea    r10,[r9+r10*2]
   140025463:	lea    r10,[rsi+r10*8]
   140025467:	mov    rbx,QWORD PTR [rsp+0x8]
   14002546c:	mov    rax,r10
   14002546f:	mov    rsi,QWORD PTR [rsp+0x10]
   140025474:	mov    rdi,QWORD PTR [rsp+0x18]
   140025479:	ret    
   14002547a:	int3   
   14002547b:	int3   
   14002547c:	int3   
   14002547d:	int3   
   14002547e:	int3   
   14002547f:	int3   
   140025480:	sub    rsp,0x58
   140025484:	mov    rcx,QWORD PTR [rcx+0x40]
   140025488:	call   QWORD PTR [rip+0xcd02]        # 0x140032190
   14002548e:	test   eax,eax
   140025490:	jne    0x1400254ee
   140025492:	test   BYTE PTR [rip+0x291f3],0x1        # 0x14004e68c
   140025499:	je     0x1400254ee
   14002549b:	call   QWORD PTR [rip+0xcde7]        # 0x140032288
   1400254a1:	and    QWORD PTR [rsp+0x40],0x0
   1400254a7:	lea    r8,[rip+0x17912]        # 0x14003cdc0
   1400254ae:	mov    edx,0xd
   1400254b3:	mov    DWORD PTR [rsp+0x60],eax
   1400254b7:	lea    rax,[rsp+0x60]
   1400254bc:	movzx  r9d,dx
   1400254c0:	lea    ecx,[rdx-0x9]
   1400254c3:	mov    QWORD PTR [rsp+0x38],rcx
   1400254c8:	lea    edx,[rcx+0x27]
   1400254cb:	mov    QWORD PTR [rsp+0x30],rax
   1400254d0:	lea    rax,[rip+0x138e5]        # 0x140038dbc
   1400254d7:	mov    QWORD PTR [rsp+0x28],rcx
   1400254dc:	mov    rcx,QWORD PTR [rip+0x2919d]        # 0x14004e680
   1400254e3:	mov    QWORD PTR [rsp+0x20],rax
   1400254e8:	call   QWORD PTR [rip+0xcb32]        # 0x140032020
   1400254ee:	add    rsp,0x58
   1400254f2:	ret    
   1400254f3:	int3   
   1400254f4:	int3   
   1400254f5:	int3   
   1400254f6:	int3   
   1400254f7:	int3   
   1400254f8:	int3   
   1400254f9:	int3   
   1400254fa:	int3   
   1400254fb:	int3   
   1400254fc:	mov    QWORD PTR [rsp+0x8],rbx
   140025501:	mov    QWORD PTR [rsp+0x18],rsi
   140025506:	push   rdi
   140025507:	sub    rsp,0x50
   14002550b:	mov    edi,0x1
   140025510:	mov    eax,edx
   140025512:	mov    esi,edx
   140025514:	sub    eax,edi
   140025516:	je     0x14002556c
   140025518:	sub    eax,0x3
   14002551b:	je     0x140025551
   14002551d:	cmp    eax,edi
   14002551f:	je     0x14002556c
   140025521:	lea    eax,[rdx-0x80]
   140025524:	cmp    eax,0x7f
   140025527:	ja     0x14002563d
   14002552d:	mov    rax,QWORD PTR [rip+0x290bc]        # 0x14004e5f0
   140025534:	mov    rbx,QWORD PTR [rax+0x20]
   140025538:	mov    rcx,rbx
   14002553b:	call   QWORD PTR [rip+0xd167]        # 0x1400326a8
   140025541:	mov    edx,esi
   140025543:	lea    rcx,[rip+0x290a6]        # 0x14004e5f0
   14002554a:	call   rbx
   14002554c:	jmp    0x14002563d
   140025551:	mov    rcx,QWORD PTR [rip+0x290a8]        # 0x14004e600
   140025558:	lea    rdx,[rip+0x290a9]        # 0x14004e608
   14002555f:	call   QWORD PTR [rip+0xcb53]        # 0x1400320b8
   140025565:	mov    edi,eax
   140025567:	jmp    0x14002563d
   14002556c:	mov    eax,DWORD PTR [rip+0x29086]        # 0x14004e5f8
   140025572:	mov    ecx,eax
   140025574:	btr    ecx,0x1f
   140025578:	lock cmpxchg DWORD PTR [rip+0x29078],ecx        # 0x14004e5f8
   140025580:	jne    0x14002556c
   140025582:	test   eax,eax
   140025584:	jns    0x14002563d
   14002558a:	mov    ecx,0x40000000
   14002558f:	xor    eax,eax
   140025591:	lock cmpxchg DWORD PTR [rip+0x2905f],ecx        # 0x14004e5f8
   140025599:	jne    0x1400255a7
   14002559b:	lea    rcx,[rip+0x2904e]        # 0x14004e5f0
   1400255a2:	call   0x140025480
   1400255a7:	mov    rcx,QWORD PTR [rip+0x29052]        # 0x14004e600
   1400255ae:	lea    rdx,[rip+0x29053]        # 0x14004e608
   1400255b5:	and    DWORD PTR [rip+0x29060],0x0        # 0x14004e61c
   1400255bc:	mov    DWORD PTR [rip+0x29046],0x3        # 0x14004e60c
   1400255c6:	call   QWORD PTR [rip+0xcaec]        # 0x1400320b8
   1400255cc:	mov    rcx,QWORD PTR [rip+0x29055]        # 0x14004e628
   1400255d3:	mov    edi,eax
   1400255d5:	call   QWORD PTR [rip+0xcbb5]        # 0x140032190
   1400255db:	test   eax,eax
   1400255dd:	jne    0x14002563d
   1400255df:	test   BYTE PTR [rip+0x290a6],0x1        # 0x14004e68c
   1400255e6:	je     0x14002563b
   1400255e8:	call   QWORD PTR [rip+0xcc9a]        # 0x140032288
   1400255ee:	and    QWORD PTR [rsp+0x40],0x0
   1400255f4:	lea    r8,[rip+0x177c5]        # 0x14003cdc0
   1400255fb:	mov    edx,0xe
   140025600:	mov    DWORD PTR [rsp+0x68],eax
   140025604:	lea    rax,[rsp+0x68]
   140025609:	movzx  r9d,dx
   14002560d:	lea    ecx,[rdx-0xa]
   140025610:	mov    QWORD PTR [rsp+0x38],rcx
   140025615:	lea    edx,[rcx+0x27]
   140025618:	mov    QWORD PTR [rsp+0x30],rax
   14002561d:	lea    rax,[rip+0x13798]        # 0x140038dbc
   140025624:	mov    QWORD PTR [rsp+0x28],rcx
   140025629:	mov    rcx,QWORD PTR [rip+0x29050]        # 0x14004e680
   140025630:	mov    QWORD PTR [rsp+0x20],rax
   140025635:	call   QWORD PTR [rip+0xc9e5]        # 0x140032020
   14002563b:	xor    edi,edi
   14002563d:	mov    rbx,QWORD PTR [rsp+0x60]
   140025642:	mov    eax,edi
   140025644:	mov    rsi,QWORD PTR [rsp+0x70]
   140025649:	add    rsp,0x50
   14002564d:	pop    rdi
   14002564e:	ret    
   14002564f:	int3   
   140025650:	int3   
   140025651:	int3   
   140025652:	int3   
   140025653:	int3   
   140025654:	int3   
   140025655:	int3   
   140025656:	int3   
   140025657:	int3   
   140025658:	mov    DWORD PTR [rsp+0x10],edx
   14002565c:	sub    rsp,0x58
   140025660:	lock add DWORD PTR [rip+0x28f90],0x1        # 0x14004e5f8
   140025668:	js     0x140025705
   14002566e:	or     eax,0xffffffff
   140025671:	lock xadd DWORD PTR [rip+0x28f7f],eax        # 0x14004e5f8
   140025679:	cmp    eax,0x1
   14002567c:	jne    0x1400256a7
   14002567e:	mov    edx,0x40000000
   140025683:	mov    eax,DWORD PTR [rip+0x28f6f]        # 0x14004e5f8
   140025689:	mov    ecx,eax
   14002568b:	or     ecx,edx
   14002568d:	lock cmpxchg DWORD PTR [rip+0x28f63],ecx        # 0x14004e5f8
   140025695:	jne    0x140025683
   140025697:	test   edx,eax
   140025699:	jne    0x1400256a7
   14002569b:	lea    rcx,[rip+0x28f4e]        # 0x14004e5f0
   1400256a2:	call   0x140025480
   1400256a7:	test   BYTE PTR [rip+0x28fde],0x1        # 0x14004e68c
   1400256ae:	je     0x1400256ea
   1400256b0:	and    QWORD PTR [rsp+0x30],0x0
   1400256b6:	lea    r8,[rip+0x17703]        # 0x14003cdc0
   1400256bd:	mov    ecx,0x10
   1400256c2:	movzx  r9d,cx
   1400256c6:	lea    eax,[rcx-0xc]
   1400256c9:	mov    QWORD PTR [rsp+0x28],rax
   1400256ce:	lea    edx,[rcx+0x1b]
   1400256d1:	mov    rcx,QWORD PTR [rip+0x28fa8]        # 0x14004e680
   1400256d8:	lea    rax,[rip+0x136dd]        # 0x140038dbc
   1400256df:	mov    QWORD PTR [rsp+0x20],rax
   1400256e4:	call   QWORD PTR [rip+0xc936]        # 0x140032020
   1400256ea:	mov    DWORD PTR [rip+0x28f20],0x42a        # 0x14004e614
   1400256f4:	xor    eax,eax
   1400256f6:	mov    DWORD PTR [rip+0x28f18],0x426        # 0x14004e618
   140025700:	jmp    0x1400257c9
   140025705:	mov    rcx,QWORD PTR [rip+0x28ef4]        # 0x14004e600
   14002570c:	lea    rdx,[rip+0x28ef5]        # 0x14004e608
   140025713:	inc    DWORD PTR [rip+0x28f03]        # 0x14004e61c
   140025719:	mov    DWORD PTR [rip+0x28efd],0x493e0        # 0x14004e620
   140025723:	call   QWORD PTR [rip+0xc98f]        # 0x1400320b8
   140025729:	test   eax,eax
   14002572b:	jne    0x14002578b
   14002572d:	test   BYTE PTR [rip+0x28f58],0x1        # 0x14004e68c
   140025734:	je     0x14002578b
   140025736:	call   QWORD PTR [rip+0xcb4c]        # 0x140032288
   14002573c:	and    QWORD PTR [rsp+0x40],0x0
   140025742:	lea    rcx,[rsp+0x68]
   140025747:	mov    edx,0xf
   14002574c:	mov    DWORD PTR [rsp+0x68],eax
   140025750:	movzx  r9d,dx
   140025754:	lea    r8,[rip+0x17665]        # 0x14003cdc0
   14002575b:	lea    eax,[rdx-0xb]
   14002575e:	mov    edx,0x2b
   140025763:	mov    QWORD PTR [rsp+0x38],rax
   140025768:	mov    QWORD PTR [rsp+0x30],rcx
   14002576d:	mov    rcx,QWORD PTR [rip+0x28f0c]        # 0x14004e680
   140025774:	mov    QWORD PTR [rsp+0x28],rax
   140025779:	lea    rax,[rip+0x1363c]        # 0x140038dbc
   140025780:	mov    QWORD PTR [rsp+0x20],rax
   140025785:	call   QWORD PTR [rip+0xc895]        # 0x140032020
   14002578b:	or     eax,0xffffffff
   14002578e:	lock xadd DWORD PTR [rip+0x28e62],eax        # 0x14004e5f8
   140025796:	cmp    eax,0x1
   140025799:	jne    0x1400257c4
   14002579b:	mov    edx,0x40000000
   1400257a0:	mov    eax,DWORD PTR [rip+0x28e52]        # 0x14004e5f8
   1400257a6:	mov    ecx,eax
   1400257a8:	or     ecx,edx
   1400257aa:	lock cmpxchg DWORD PTR [rip+0x28e46],ecx        # 0x14004e5f8
   1400257b2:	jne    0x1400257a0
   1400257b4:	test   edx,eax
   1400257b6:	jne    0x1400257c4
   1400257b8:	lea    rcx,[rip+0x28e31]        # 0x14004e5f0
   1400257bf:	call   0x140025480
   1400257c4:	mov    eax,0x1
   1400257c9:	add    rsp,0x58
   1400257cd:	ret    
   1400257ce:	int3   
   1400257cf:	int3   
   1400257d0:	int3   
   1400257d1:	int3   
   1400257d2:	int3   
   1400257d3:	int3   
   1400257d4:	mov    QWORD PTR [rsp+0x8],rcx
   1400257d9:	push   rbx
   1400257da:	sub    rsp,0x50
   1400257de:	lock add DWORD PTR [rip+0x28e12],0x1        # 0x14004e5f8
   1400257e6:	js     0x14002582e
   1400257e8:	or     eax,0xffffffff
   1400257eb:	lock xadd DWORD PTR [rip+0x28e05],eax        # 0x14004e5f8
   1400257f3:	cmp    eax,0x1
   1400257f6:	jne    0x140025957
   1400257fc:	mov    edx,0x40000000
   140025801:	mov    eax,DWORD PTR [rip+0x28df1]        # 0x14004e5f8
   140025807:	mov    ecx,eax
   140025809:	or     ecx,edx
   14002580b:	lock cmpxchg DWORD PTR [rip+0x28de5],ecx        # 0x14004e5f8
   140025813:	jne    0x140025801
   140025815:	test   edx,eax
   140025817:	jne    0x140025957
   14002581d:	lea    rcx,[rip+0x28dcc]        # 0x14004e5f0
   140025824:	add    rsp,0x50
   140025828:	pop    rbx
   140025829:	jmp    0x140025480
   14002582e:	mov    rcx,QWORD PTR [rip+0x28dcb]        # 0x14004e600
   140025835:	lea    rdx,[rip+0x28dcc]        # 0x14004e608
   14002583c:	and    DWORD PTR [rip+0x28dd9],0x0        # 0x14004e61c
   140025843:	mov    ebx,0x4
   140025848:	and    DWORD PTR [rip+0x28dd1],0x0        # 0x14004e620
   14002584f:	mov    DWORD PTR [rip+0x28db7],ebx        # 0x14004e60c
   140025855:	mov    DWORD PTR [rip+0x28db1],0x1        # 0x14004e610
   14002585f:	call   QWORD PTR [rip+0xc853]        # 0x1400320b8
   140025865:	test   eax,eax
   140025867:	jne    0x1400258c0
   140025869:	test   BYTE PTR [rip+0x28e1c],0x1        # 0x14004e68c
   140025870:	je     0x1400258c0
   140025872:	call   QWORD PTR [rip+0xca10]        # 0x140032288
   140025878:	and    QWORD PTR [rsp+0x40],0x0
   14002587e:	lea    ecx,[rbx+0xd]
   140025881:	mov    DWORD PTR [rsp+0x60],eax
   140025885:	lea    r8,[rip+0x17534]        # 0x14003cdc0
   14002588c:	mov    QWORD PTR [rsp+0x38],rbx
   140025891:	lea    rax,[rsp+0x60]
   140025896:	mov    QWORD PTR [rsp+0x30],rax
   14002589b:	lea    edx,[rbx+0x27]
   14002589e:	lea    rax,[rip+0x13517]        # 0x140038dbc
   1400258a5:	movzx  r9d,cx
   1400258a9:	mov    rcx,QWORD PTR [rip+0x28dd0]        # 0x14004e680
   1400258b0:	mov    QWORD PTR [rsp+0x28],rbx
   1400258b5:	mov    QWORD PTR [rsp+0x20],rax
   1400258ba:	call   QWORD PTR [rip+0xc760]        # 0x140032020
   1400258c0:	or     eax,0xffffffff
   1400258c3:	lock xadd DWORD PTR [rip+0x28d2d],eax        # 0x14004e5f8
   1400258cb:	cmp    eax,0x1
   1400258ce:	jne    0x1400258f9
   1400258d0:	mov    edx,0x40000000
   1400258d5:	mov    eax,DWORD PTR [rip+0x28d1d]        # 0x14004e5f8
   1400258db:	mov    ecx,eax
   1400258dd:	or     ecx,edx
   1400258df:	lock cmpxchg DWORD PTR [rip+0x28d11],ecx        # 0x14004e5f8
   1400258e7:	jne    0x1400258d5
   1400258e9:	test   edx,eax
   1400258eb:	jne    0x1400258f9
   1400258ed:	lea    rcx,[rip+0x28cfc]        # 0x14004e5f0
   1400258f4:	call   0x140025480
   1400258f9:	mov    rax,QWORD PTR [rip+0x28cf0]        # 0x14004e5f0
   140025900:	mov    rbx,QWORD PTR [rax+0x8]
   140025904:	mov    rcx,rbx
   140025907:	call   QWORD PTR [rip+0xcd9b]        # 0x1400326a8
   14002590d:	lea    rcx,[rip+0x28cdc]        # 0x14004e5f0
   140025914:	call   rbx
   140025916:	test   eax,eax
   140025918:	jne    0x14002593d
   14002591a:	mov    rcx,QWORD PTR [rip+0x28d07]        # 0x14004e628
   140025921:	mov    r8d,0x1
   140025927:	or     edx,0xffffffff
   14002592a:	call   QWORD PTR [rip+0xc988]        # 0x1400322b8
   140025930:	cmp    eax,0xc0
   140025935:	je     0x14002591a
   140025937:	add    rsp,0x50
   14002593b:	pop    rbx
   14002593c:	ret    
   14002593d:	mov    edx,0x1
   140025942:	mov    DWORD PTR [rip+0x28cc8],0x42a        # 0x14004e614
   14002594c:	mov    DWORD PTR [rip+0x28cc6],eax        # 0x14004e618
   140025952:	call   0x1400254fc
   140025957:	add    rsp,0x50
   14002595b:	pop    rbx
   14002595c:	ret    
   14002595d:	int3   
   14002595e:	int3   
   14002595f:	int3   
   140025960:	int3   
   140025961:	int3   
   140025962:	int3   
   140025963:	int3   
   140025964:	mov    QWORD PTR [rsp+0x8],rbx
   140025969:	mov    QWORD PTR [rsp+0x18],rsi
   14002596e:	mov    QWORD PTR [rsp+0x20],rdi
   140025973:	push   r12
   140025975:	sub    rsp,0x50
   140025979:	mov    edi,DWORD PTR [rip+0x28c79]        # 0x14004e5f8
   14002597f:	lea    eax,[rdx+rdx*1]
   140025982:	and    edi,0x3fffffff
   140025988:	mov    DWORD PTR [rip+0x28c8a],0x1        # 0x14004e61c
   140025992:	and    DWORD PTR [rip+0x28c77],0x0        # 0x14004e610
   140025999:	mov    esi,edx
   14002599b:	mov    DWORD PTR [rip+0x28c7f],eax        # 0x14004e620
   1400259a1:	mov    r12d,0x4
   1400259a7:	mov    rcx,QWORD PTR [rip+0x28c52]        # 0x14004e600
   1400259ae:	lea    rdx,[rip+0x28c53]        # 0x14004e608
   1400259b5:	lea    rbx,[rip+0x13400]        # 0x140038dbc
   1400259bc:	call   QWORD PTR [rip+0xc6f6]        # 0x1400320b8
   1400259c2:	test   eax,eax
   1400259c4:	jne    0x140025a18
   1400259c6:	test   BYTE PTR [rip+0x28cbf],0x1        # 0x14004e68c
   1400259cd:	je     0x140025a18
   1400259cf:	call   QWORD PTR [rip+0xc8b3]        # 0x140032288
   1400259d5:	and    QWORD PTR [rsp+0x40],0x0
   1400259db:	lea    r8,[rip+0x173de]        # 0x14003cdc0
   1400259e2:	mov    ecx,0x12
   1400259e7:	mov    QWORD PTR [rsp+0x38],r12
   1400259ec:	mov    DWORD PTR [rsp+0x68],eax
   1400259f0:	lea    rax,[rsp+0x68]
   1400259f5:	mov    QWORD PTR [rsp+0x30],rax
   1400259fa:	movzx  r9d,cx
   1400259fe:	lea    edx,[rcx+0x19]
   140025a01:	mov    QWORD PTR [rsp+0x28],r12
   140025a06:	mov    rcx,QWORD PTR [rip+0x28c73]        # 0x14004e680
   140025a0d:	mov    QWORD PTR [rsp+0x20],rbx
   140025a12:	call   QWORD PTR [rip+0xc608]        # 0x140032020
   140025a18:	mov    rcx,QWORD PTR [rip+0x28c11]        # 0x14004e630
   140025a1f:	mov    edx,esi
   140025a21:	call   QWORD PTR [rip+0xc759]        # 0x140032180
   140025a27:	cmp    eax,0x102
   140025a2c:	jne    0x140025a9f
   140025a2e:	mov    ebx,DWORD PTR [rip+0x28bc4]        # 0x14004e5f8
   140025a34:	and    ebx,0x3fffffff
   140025a3a:	cmp    ebx,edi
   140025a3c:	jl     0x140025a92
   140025a3e:	test   BYTE PTR [rip+0x28c47],0x1        # 0x14004e68c
   140025a45:	je     0x140025a7e
   140025a47:	and    QWORD PTR [rsp+0x30],0x0
   140025a4d:	lea    rcx,[rip+0x13368]        # 0x140038dbc
   140025a54:	mov    eax,0x13
   140025a59:	mov    QWORD PTR [rsp+0x28],r12
   140025a5e:	mov    QWORD PTR [rsp+0x20],rcx
   140025a63:	lea    r8,[rip+0x17356]        # 0x14003cdc0
   140025a6a:	mov    rcx,QWORD PTR [rip+0x28c0f]        # 0x14004e680
   140025a71:	movzx  r9d,ax
   140025a75:	lea    edx,[rax+0x18]
   140025a78:	call   QWORD PTR [rip+0xc5a2]        # 0x140032020
   140025a7e:	call   QWORD PTR [rip+0xc654]        # 0x1400320d8
   140025a84:	mov    rcx,rax
   140025a87:	mov    edx,0x2
   140025a8c:	call   QWORD PTR [rip+0xc756]        # 0x1400321e8
   140025a92:	inc    DWORD PTR [rip+0x28b84]        # 0x14004e61c
   140025a98:	mov    edi,ebx
   140025a9a:	jmp    0x1400259a7
   140025a9f:	mov    rbx,QWORD PTR [rsp+0x60]
   140025aa4:	mov    rsi,QWORD PTR [rsp+0x70]
   140025aa9:	mov    rdi,QWORD PTR [rsp+0x78]
   140025aae:	add    rsp,0x50
   140025ab2:	pop    r12
   140025ab4:	ret    
   140025ab5:	int3   
   140025ab6:	int3   
   140025ab7:	int3   
   140025ab8:	int3   
   140025ab9:	int3   
   140025aba:	int3   
   140025abb:	int3   
   140025abc:	mov    rax,rsp
   140025abf:	mov    QWORD PTR [rax+0x8],rbx
   140025ac3:	mov    QWORD PTR [rax+0x10],rbp
   140025ac7:	mov    QWORD PTR [rax+0x20],rsi
   140025acb:	mov    QWORD PTR [rax+0x18],r8
   140025acf:	push   rdi
   140025ad0:	push   r13
   140025ad2:	push   r14
   140025ad4:	sub    rsp,0x50
   140025ad8:	xor    esi,esi
   140025ada:	mov    DWORD PTR [rip+0x28b24],0x10        # 0x14004e608
   140025ae4:	mov    rbx,rdx
   140025ae7:	mov    QWORD PTR [rip+0x28b1a],0x2        # 0x14004e60c
   140025af2:	xor    r9d,r9d
   140025af5:	mov    QWORD PTR [rip+0x28b18],rsi        # 0x14004e614
   140025afc:	xor    r8d,r8d
   140025aff:	mov    QWORD PTR [rip+0x28b16],rsi        # 0x14004e61c
   140025b06:	lea    ebp,[rsi+0x1]
   140025b09:	xor    ecx,ecx
   140025b0b:	mov    edx,ebp
   140025b0d:	call   QWORD PTR [rip+0xc685]        # 0x140032198
   140025b13:	mov    QWORD PTR [rip+0x28b16],rax        # 0x14004e630
   140025b1a:	lea    r14d,[rsi+0x4]
   140025b1e:	lea    r13,[rip+0x13297]        # 0x140038dbc
   140025b25:	test   rax,rax
   140025b28:	jne    0x140025b88
   140025b2a:	test   BYTE PTR [rip+0x28b5b],bpl        # 0x14004e68c
   140025b31:	je     0x140025b81
   140025b33:	call   QWORD PTR [rip+0xc74f]        # 0x140032288
   140025b39:	lea    ecx,[rsi+0xa]
   140025b3c:	mov    QWORD PTR [rsp+0x40],rsi
   140025b41:	lea    r8,[rip+0x17278]        # 0x14003cdc0
   140025b48:	mov    QWORD PTR [rsp+0x38],r14
   140025b4d:	mov    edx,0x2b
   140025b52:	mov    DWORD PTR [rsp+0x80],eax
   140025b59:	lea    rax,[rsp+0x80]
   140025b61:	mov    QWORD PTR [rsp+0x30],rax
   140025b66:	movzx  r9d,cx
   140025b6a:	mov    rcx,QWORD PTR [rip+0x28b0f]        # 0x14004e680
   140025b71:	mov    QWORD PTR [rsp+0x28],r14
   140025b76:	mov    QWORD PTR [rsp+0x20],r13
   140025b7b:	call   QWORD PTR [rip+0xc49f]        # 0x140032020
   140025b81:	mov    edi,esi
   140025b83:	jmp    0x140025c68
   140025b88:	xor    r9d,r9d
   140025b8b:	xor    r8d,r8d
   140025b8e:	mov    edx,ebp
   140025b90:	xor    ecx,ecx
   140025b92:	call   QWORD PTR [rip+0xc600]        # 0x140032198
   140025b98:	mov    QWORD PTR [rip+0x28a89],rax        # 0x14004e628
   140025b9f:	test   rax,rax
   140025ba2:	jne    0x140025bba
   140025ba4:	test   BYTE PTR [rip+0x28ae1],bpl        # 0x14004e68c
   140025bab:	je     0x140025b81
   140025bad:	call   QWORD PTR [rip+0xc6d5]        # 0x140032288
   140025bb3:	mov    ecx,0xb
   140025bb8:	jmp    0x140025b3c
   140025bba:	xor    r8d,r8d
   140025bbd:	lea    rdx,[rip+0xfffffffffffde2dc]        # 0x140003ea0
   140025bc4:	mov    rcx,rbx
   140025bc7:	call   QWORD PTR [rip+0xc4e3]        # 0x1400320b0
   140025bcd:	mov    QWORD PTR [rip+0x28a2c],rax        # 0x14004e600
   140025bd4:	test   rax,rax
   140025bd7:	jne    0x140025bf2
   140025bd9:	test   BYTE PTR [rip+0x28aac],bpl        # 0x14004e68c
   140025be0:	je     0x140025b81
   140025be2:	call   QWORD PTR [rip+0xc6a0]        # 0x140032288
   140025be8:	mov    ecx,0xc
   140025bed:	jmp    0x140025b3c
   140025bf2:	call   0x140025658
   140025bf7:	mov    rcx,QWORD PTR [rip+0x289f2]        # 0x14004e5f0
   140025bfe:	mov    edi,eax
   140025c00:	mov    rbx,QWORD PTR [rcx]
   140025c03:	mov    rcx,rbx
   140025c06:	call   QWORD PTR [rip+0xca9c]        # 0x1400326a8
   140025c0c:	lea    rcx,[rip+0x289dd]        # 0x14004e5f0
   140025c13:	call   rbx
   140025c15:	test   eax,eax
   140025c17:	je     0x140025c20
   140025c19:	call   0x1400257d4
   140025c1e:	jmp    0x140025c27
   140025c20:	mov    edx,ebp
   140025c22:	call   0x1400254fc
   140025c27:	mov    rax,QWORD PTR [rip+0x289c2]        # 0x14004e5f0
   140025c2e:	mov    rbx,QWORD PTR [rax+0x10]
   140025c32:	mov    rcx,rbx
   140025c35:	call   QWORD PTR [rip+0xca6d]        # 0x1400326a8
   140025c3b:	lea    rcx,[rip+0x289ae]        # 0x14004e5f0
   140025c42:	call   rbx
   140025c44:	mov    edx,eax
   140025c46:	call   0x140025964
   140025c4b:	mov    rax,QWORD PTR [rip+0x2899e]        # 0x14004e5f0
   140025c52:	mov    rbx,QWORD PTR [rax+0x18]
   140025c56:	mov    rcx,rbx
   140025c59:	call   QWORD PTR [rip+0xca49]        # 0x1400326a8
   140025c5f:	lea    rcx,[rip+0x2898a]        # 0x14004e5f0
   140025c66:	call   rbx
   140025c68:	mov    rax,QWORD PTR [rip+0x289b9]        # 0x14004e628
   140025c6f:	test   rax,rax
   140025c72:	je     0x140025c84
   140025c74:	mov    rcx,rax
   140025c77:	call   QWORD PTR [rip+0xc4db]        # 0x140032158
   140025c7d:	mov    QWORD PTR [rip+0x289a4],rsi        # 0x14004e628
   140025c84:	mov    rax,QWORD PTR [rip+0x289a5]        # 0x14004e630
   140025c8b:	test   rax,rax
   140025c8e:	je     0x140025ca0
   140025c90:	mov    rcx,rax
   140025c93:	call   QWORD PTR [rip+0xc4bf]        # 0x140032158
   140025c99:	mov    QWORD PTR [rip+0x28990],rsi        # 0x14004e630
   140025ca0:	test   edi,edi
   140025ca2:	je     0x140025d38
   140025ca8:	mov    rcx,QWORD PTR [rip+0x28951]        # 0x14004e600
   140025caf:	lea    rdx,[rip+0x28952]        # 0x14004e608
   140025cb6:	mov    QWORD PTR [rip+0x2894f],rbp        # 0x14004e60c
   140025cbd:	mov    QWORD PTR [rip+0x28958],rsi        # 0x14004e61c
   140025cc4:	call   QWORD PTR [rip+0xc3ee]        # 0x1400320b8
   140025cca:	test   eax,eax
   140025ccc:	jne    0x140025d38
   140025cce:	call   QWORD PTR [rip+0xc5b4]        # 0x140032288
   140025cd4:	mov    ebx,eax
   140025cd6:	test   BYTE PTR [rip+0x289af],bpl        # 0x14004e68c
   140025cdd:	je     0x140025d27
   140025cdf:	mov    QWORD PTR [rsp+0x40],rsi
   140025ce4:	lea    r8,[rip+0x170d5]        # 0x14003cdc0
   140025ceb:	mov    ecx,0x14
   140025cf0:	mov    QWORD PTR [rsp+0x38],r14
   140025cf5:	mov    DWORD PTR [rsp+0x80],eax
   140025cfc:	lea    rax,[rsp+0x80]
   140025d04:	mov    QWORD PTR [rsp+0x30],rax
   140025d09:	movzx  r9d,cx
   140025d0d:	lea    edx,[rcx+0x17]
   140025d10:	mov    QWORD PTR [rsp+0x28],r14
   140025d15:	mov    rcx,QWORD PTR [rip+0x28964]        # 0x14004e680
   140025d1c:	mov    QWORD PTR [rsp+0x20],r13
   140025d21:	call   QWORD PTR [rip+0xc2f9]        # 0x140032020
   140025d27:	call   QWORD PTR [rip+0xc3ab]        # 0x1400320d8
   140025d2d:	mov    rcx,rax
   140025d30:	mov    edx,ebx
   140025d32:	call   QWORD PTR [rip+0xc4b0]        # 0x1400321e8
   140025d38:	lea    r11,[rsp+0x50]
   140025d3d:	mov    rbx,QWORD PTR [r11+0x20]
   140025d41:	mov    rbp,QWORD PTR [r11+0x28]
   140025d45:	mov    rsi,QWORD PTR [r11+0x38]
   140025d49:	mov    rsp,r11
   140025d4c:	pop    r14
   140025d4e:	pop    r13
   140025d50:	pop    rdi
   140025d51:	ret    
   140025d52:	int3   
   140025d53:	int3   
   140025d54:	int3   
   140025d55:	int3   
   140025d56:	int3   
   140025d57:	int3   
   140025d58:	sub    rsp,0x58
   140025d5c:	mov    rax,QWORD PTR [rsp+0x80]
   140025d64:	xor    r11d,r11d
   140025d67:	mov    r10,rcx
   140025d6a:	test   rax,rax
   140025d6d:	je     0x140025d93
   140025d6f:	cmp    WORD PTR [rax],r11w
   140025d73:	jne    0x140025d7b
   140025d75:	lea    ecx,[r11+0x10]
   140025d79:	jmp    0x140025d98
   140025d7b:	or     rcx,0xffffffffffffffff
   140025d7f:	inc    rcx
   140025d82:	cmp    WORD PTR [rax+rcx*2],r11w
   140025d87:	jne    0x140025d7f
   140025d89:	lea    rcx,[rcx*2+0x2]
   140025d91:	jmp    0x140025d98
   140025d93:	mov    ecx,0xa
   140025d98:	test   rax,rax
   140025d9b:	je     0x140025dae
   140025d9d:	cmp    WORD PTR [rax],r11w
   140025da1:	lea    r9,[rip+0x17028]        # 0x14003cdd0
   140025da8:	cmove  rax,r9
   140025dac:	jmp    0x140025db5
   140025dae:	lea    rax,[rip+0xf6eb]        # 0x1400354a0
   140025db5:	mov    QWORD PTR [rsp+0x40],r11
   140025dba:	mov    QWORD PTR [rsp+0x38],rcx
   140025dbf:	mov    rcx,r10
   140025dc2:	mov    QWORD PTR [rsp+0x30],rax
   140025dc7:	lea    rax,[rip+0x12fee]        # 0x140038dbc
   140025dce:	movzx  r9d,dx
   140025dd2:	mov    edx,0x2b
   140025dd7:	mov    QWORD PTR [rsp+0x28],0x4
   140025de0:	mov    QWORD PTR [rsp+0x20],rax
   140025de5:	call   QWORD PTR [rip+0xc235]        # 0x140032020
   140025deb:	add    rsp,0x58
   140025def:	ret    
   140025df0:	int3   
   140025df1:	int3   
   140025df2:	int3   
   140025df3:	int3   
   140025df4:	int3   
   140025df5:	int3   
   140025df6:	int3   
   140025df7:	int3   
   140025df8:	sub    rsp,0x58
   140025dfc:	mov    eax,DWORD PTR [rip+0x2a43a]        # 0x14005023c
   140025e02:	test   eax,eax
   140025e04:	jne    0x140025ea7
   140025e0a:	and    QWORD PTR [rsp+0x68],0x0
   140025e10:	lea    r8,[rsp+0x68]
   140025e15:	lea    rdx,[rip+0x16fc4]        # 0x14003cde0
   140025e1c:	lea    ecx,[rax+0x2]
   140025e1f:	call   QWORD PTR [rip+0xc443]        # 0x140032268
   140025e25:	mov    DWORD PTR [rip+0x2a411],eax        # 0x14005023c
   140025e2b:	test   eax,eax
   140025e2d:	jne    0x140025e4a
   140025e2f:	lea    r8,[rsp+0x68]
   140025e34:	lea    rdx,[rip+0x16fdd]        # 0x14003ce18
   140025e3b:	lea    ecx,[rax+0x2]
   140025e3e:	call   QWORD PTR [rip+0xc424]        # 0x140032268
   140025e44:	mov    DWORD PTR [rip+0x2a3f2],eax        # 0x14005023c
   140025e4a:	mov    edx,0x4
   140025e4f:	test   BYTE PTR [rip+0x28837],dl        # 0x14004e68c
   140025e55:	je     0x140025ea5
   140025e57:	and    QWORD PTR [rsp+0x40],0x0
   140025e5d:	lea    ecx,[rdx+0x6]
   140025e60:	mov    QWORD PTR [rsp+0x38],rdx
   140025e65:	lea    r8,[rip+0x16fd4]        # 0x14003ce40
   140025e6c:	mov    DWORD PTR [rsp+0x60],eax
   140025e70:	lea    rax,[rsp+0x60]
   140025e75:	mov    QWORD PTR [rsp+0x30],rax
   140025e7a:	lea    rax,[rip+0x12f3b]        # 0x140038dbc
   140025e81:	mov    QWORD PTR [rsp+0x28],rdx
   140025e86:	lea    edx,[rcx+0x21]
   140025e89:	movzx  r9d,cx
   140025e8d:	mov    rcx,QWORD PTR [rip+0x287ec]        # 0x14004e680
   140025e94:	mov    QWORD PTR [rsp+0x20],rax
   140025e99:	call   QWORD PTR [rip+0xc181]        # 0x140032020
   140025e9f:	mov    eax,DWORD PTR [rip+0x2a397]        # 0x14005023c
   140025ea5:	test   eax,eax
   140025ea7:	setne  al
   140025eaa:	add    rsp,0x58
   140025eae:	ret    
   140025eaf:	int3   
   140025eb0:	int3   
   140025eb1:	int3   
   140025eb2:	int3   
   140025eb3:	int3   
   140025eb4:	int3   
   140025eb5:	int3   
   140025eb6:	int3   
   140025eb7:	int3   
   140025eb8:	mov    r11,rsp
   140025ebb:	mov    QWORD PTR [r11+0x18],rbx
   140025ebf:	mov    QWORD PTR [r11+0x20],rsi
   140025ec3:	push   rdi
   140025ec4:	sub    rsp,0x60
   140025ec8:	mov    rdi,rcx
   140025ecb:	test   rcx,rcx
   140025ece:	jne    0x140025f16
   140025ed0:	test   BYTE PTR [rip+0x287b5],0x1        # 0x14004e68c
   140025ed7:	je     0x140025fcd
   140025edd:	and    QWORD PTR [r11-0x38],rdi
   140025ee1:	lea    eax,[rdi+0x4]
   140025ee4:	mov    QWORD PTR [r11-0x40],rax
   140025ee8:	lea    ecx,[rdi+0xe]
   140025eeb:	lea    rax,[rip+0x12eca]        # 0x140038dbc
   140025ef2:	movzx  r9d,cx
   140025ef6:	mov    rcx,QWORD PTR [rip+0x28783]        # 0x14004e680
   140025efd:	lea    r8,[rip+0x16f4c]        # 0x14003ce50
   140025f04:	lea    edx,[rdi+0x2b]
   140025f07:	mov    QWORD PTR [r11-0x48],rax
   140025f0b:	call   QWORD PTR [rip+0xc10f]        # 0x140032020
   140025f11:	jmp    0x140025fcd
   140025f16:	mov    ecx,DWORD PTR [rcx+0x40]
   140025f19:	call   QWORD PTR [rip+0xc779]        # 0x140032698
   140025f1f:	test   eax,eax
   140025f21:	jns    0x140025f91
   140025f23:	test   BYTE PTR [rip+0x28762],0x1        # 0x14004e68c
   140025f2a:	je     0x140025f91
   140025f2c:	and    QWORD PTR [rsp+0x50],0x0
   140025f32:	lea    rcx,[rsp+0x70]
   140025f37:	mov    edx,0xb
   140025f3c:	mov    DWORD PTR [rsp+0x70],eax
   140025f40:	mov    eax,DWORD PTR [rdi+0x40]
   140025f43:	lea    r8,[rip+0x16f06]        # 0x14003ce50
   140025f4a:	mov    DWORD PTR [rsp+0x78],eax
   140025f4e:	movzx  r9d,dx
   140025f52:	lea    eax,[rdx-0x7]
   140025f55:	mov    edx,0x2b
   140025f5a:	mov    QWORD PTR [rsp+0x48],rax
   140025f5f:	mov    QWORD PTR [rsp+0x40],rcx
   140025f64:	lea    rcx,[rsp+0x78]
   140025f69:	mov    QWORD PTR [rsp+0x38],rax
   140025f6e:	mov    QWORD PTR [rsp+0x30],rcx
   140025f73:	mov    rcx,QWORD PTR [rip+0x28706]        # 0x14004e680
   140025f7a:	mov    QWORD PTR [rsp+0x28],rax
   140025f7f:	lea    rax,[rip+0x12e36]        # 0x140038dbc
   140025f86:	mov    QWORD PTR [rsp+0x20],rax
   140025f8b:	call   QWORD PTR [rip+0xc08f]        # 0x140032020
   140025f91:	and    DWORD PTR [rdi+0x40],0x0
   140025f95:	mov    rsi,QWORD PTR [rdi+0x48]
   140025f99:	test   rsi,rsi
   140025f9c:	je     0x140025fb8
   140025f9e:	mov    rax,QWORD PTR [rsi]
   140025fa1:	mov    rbx,QWORD PTR [rax+0x10]
   140025fa5:	mov    rcx,rbx
   140025fa8:	call   QWORD PTR [rip+0xc6fa]        # 0x1400326a8
   140025fae:	mov    rcx,rsi
   140025fb1:	call   rbx
   140025fb3:	and    QWORD PTR [rdi+0x48],0x0
   140025fb8:	mov    rax,QWORD PTR [rdi]
   140025fbb:	mov    rbx,QWORD PTR [rax+0x10]
   140025fbf:	mov    rcx,rbx
   140025fc2:	call   QWORD PTR [rip+0xc6e0]        # 0x1400326a8
   140025fc8:	mov    rcx,rdi
   140025fcb:	call   rbx
   140025fcd:	lea    r11,[rsp+0x60]
   140025fd2:	mov    rbx,QWORD PTR [r11+0x20]
   140025fd6:	mov    rsi,QWORD PTR [r11+0x28]
   140025fda:	mov    rsp,r11
   140025fdd:	pop    rdi
   140025fde:	ret    
   140025fdf:	int3   
   140025fe0:	int3   
   140025fe1:	int3   
   140025fe2:	int3   
   140025fe3:	int3   
   140025fe4:	int3   
   140025fe5:	int3   
   140025fe6:	int3   
   140025fe7:	int3   
   140025fe8:	rex push rbx
   140025fea:	sub    rsp,0x50
   140025fee:	and    DWORD PTR [rsp+0x60],0x0
   140025ff3:	call   QWORD PTR [rip+0xc457]        # 0x140032450
   140025ff9:	mov    rbx,QWORD PTR [rax+0x30]
   140025ffd:	mov    rcx,rbx
   140026000:	call   QWORD PTR [rip+0xc6a2]        # 0x1400326a8
   140026006:	lea    rcx,[rsp+0x60]
   14002600b:	call   rbx
   14002600d:	test   eax,eax
   14002600f:	jns    0x140026070
   140026011:	test   BYTE PTR [rip+0x28674],0x1        # 0x14004e68c
   140026018:	je     0x140026067
   14002601a:	and    QWORD PTR [rsp+0x40],0x0
   140026020:	lea    r8,[rip+0x16f49]        # 0x14003cf70
   140026027:	mov    edx,0xb
   14002602c:	mov    DWORD PTR [rsp+0x68],eax
   140026030:	lea    rax,[rsp+0x68]
   140026035:	movzx  r9d,dx
   140026039:	lea    ecx,[rdx-0x7]
   14002603c:	mov    QWORD PTR [rsp+0x38],rcx
   140026041:	lea    edx,[rcx+0x27]
   140026044:	mov    QWORD PTR [rsp+0x30],rax
   140026049:	lea    rax,[rip+0x12d6c]        # 0x140038dbc
   140026050:	mov    QWORD PTR [rsp+0x28],rcx
   140026055:	mov    rcx,QWORD PTR [rip+0x28624]        # 0x14004e680
   14002605c:	mov    QWORD PTR [rsp+0x20],rax
   140026061:	call   QWORD PTR [rip+0xbfb9]        # 0x140032020
   140026067:	lea    rax,[rip+0x16e22]        # 0x14003ce90
   14002606e:	jmp    0x140026089
   140026070:	mov    eax,DWORD PTR [rsp+0x60]
   140026074:	dec    eax
   140026076:	cmp    eax,0x1
   140026079:	lea    rax,[rip+0x16e10]        # 0x14003ce90
   140026080:	ja     0x140026089
   140026082:	lea    rax,[rip+0x16e77]        # 0x14003cf00
   140026089:	add    rsp,0x50
   14002608d:	pop    rbx
   14002608e:	ret    
   14002608f:	int3   
   140026090:	int3   
   140026091:	int3   
   140026092:	int3   
   140026093:	int3   
   140026094:	int3   
   140026095:	int3   
   140026096:	int3   
   140026097:	int3   
   140026098:	sub    rsp,0x68
   14002609c:	mov    rax,QWORD PTR [rsp+0x90]
   1400260a4:	xor    r9d,r9d
   1400260a7:	mov    r10,rcx
   1400260aa:	test   rax,rax
   1400260ad:	je     0x1400260d3
   1400260af:	cmp    WORD PTR [rax],r9w
   1400260b3:	jne    0x1400260bb
   1400260b5:	lea    ecx,[r9+0x10]
   1400260b9:	jmp    0x1400260d8
   1400260bb:	or     rcx,0xffffffffffffffff
   1400260bf:	inc    rcx
   1400260c2:	cmp    WORD PTR [rax+rcx*2],r9w
   1400260c7:	jne    0x1400260bf
   1400260c9:	lea    rcx,[rcx*2+0x2]
   1400260d1:	jmp    0x1400260d8
   1400260d3:	mov    ecx,0xa
   1400260d8:	test   rax,rax
   1400260db:	je     0x1400260ee
   1400260dd:	cmp    WORD PTR [rax],r9w
   1400260e1:	lea    r8,[rip+0x16ce8]        # 0x14003cdd0
   1400260e8:	cmove  rax,r8
   1400260ec:	jmp    0x1400260f5
   1400260ee:	lea    rax,[rip+0xf3ab]        # 0x1400354a0
   1400260f5:	mov    QWORD PTR [rsp+0x50],r9
   1400260fa:	lea    r8,[rsp+0x98]
   140026102:	mov    r9d,0x4
   140026108:	mov    QWORD PTR [rsp+0x48],r9
   14002610d:	mov    QWORD PTR [rsp+0x40],r8
   140026112:	lea    r8,[rip+0x16e9f]        # 0x14003cfb8
   140026119:	mov    QWORD PTR [rsp+0x38],rcx
   14002611e:	mov    rcx,r10
   140026121:	mov    QWORD PTR [rsp+0x30],rax
   140026126:	lea    rax,[rip+0x12c8f]        # 0x140038dbc
   14002612d:	mov    QWORD PTR [rsp+0x28],r9
   140026132:	movzx  r9d,dx
   140026136:	mov    edx,0x2b
   14002613b:	mov    QWORD PTR [rsp+0x20],rax
   140026140:	call   QWORD PTR [rip+0xbeda]        # 0x140032020
   140026146:	add    rsp,0x68
   14002614a:	ret    
   14002614b:	int3   
   14002614c:	int3   
   14002614d:	int3   
   14002614e:	int3   
   14002614f:	int3   
   140026150:	int3   
   140026151:	int3   
   140026152:	int3   
   140026153:	int3   
   140026154:	mov    QWORD PTR [rsp+0x8],rbx
   140026159:	mov    QWORD PTR [rsp+0x10],rbp
   14002615e:	mov    BYTE PTR [rsp+0x18],r8b
   140026163:	push   rsi
   140026164:	push   rdi
   140026165:	push   r14
   140026167:	sub    rsp,0x40
   14002616b:	mov    r14,rdx
   14002616e:	mov    rsi,rcx
   140026171:	test   rcx,rcx
   140026174:	jne    0x140026180
   140026176:	mov    eax,0x80004003
   14002617b:	jmp    0x140026299
   140026180:	test   rdx,rdx
   140026183:	je     0x140026189
   140026185:	or     QWORD PTR [rdx],0xffffffffffffffff
   140026189:	and    QWORD PTR [rsp+0x30],0x0
   14002618f:	xor    r9d,r9d
   140026192:	and    DWORD PTR [rsp+0x28],0x0
   140026197:	mov    edx,0x80000000
   14002619c:	mov    DWORD PTR [rsp+0x20],0x3
   1400261a4:	lea    r8d,[r9+0x1]
   1400261a8:	call   QWORD PTR [rip+0xc0aa]        # 0x140032258
   1400261ae:	mov    rbx,rax
   1400261b1:	cmp    rax,0xffffffffffffffff
   1400261b5:	jne    0x1400261f3
   1400261b7:	call   QWORD PTR [rip+0xc0cb]        # 0x140032288
   1400261bd:	mov    ebp,eax
   1400261bf:	test   BYTE PTR [rip+0x284c6],0x1        # 0x14004e68c
   1400261c6:	je     0x1400261e0
   1400261c8:	mov    rcx,QWORD PTR [rip+0x284b1]        # 0x14004e680
   1400261cf:	lea    edx,[rbx+0xb]
   1400261d2:	mov    DWORD PTR [rsp+0x28],eax
   1400261d6:	mov    QWORD PTR [rsp+0x20],rsi
   1400261db:	call   0x140026098
   1400261e0:	movzx  edi,bp
   1400261e3:	or     edi,0x80070000
   1400261e9:	test   ebp,ebp
   1400261eb:	cmovle edi,ebp
   1400261ee:	jmp    0x140026288
   1400261f3:	and    DWORD PTR [rsp+0x70],0x0
   1400261f8:	call   QWORD PTR [rip+0xc252]        # 0x140032450
   1400261fe:	mov    rdi,QWORD PTR [rax+0xa0]
   140026205:	mov    rcx,rdi
   140026208:	call   QWORD PTR [rip+0xc49a]        # 0x1400326a8
   14002620e:	lea    r8,[rsp+0x70]
   140026213:	xor    edx,edx
   140026215:	lea    rcx,[rip+0x16d64]        # 0x14003cf80
   14002621c:	call   rdi
   14002621e:	cmp    DWORD PTR [rsp+0x70],0x0
   140026223:	je     0x1400262ac
   140026229:	mov    eax,DWORD PTR [rip+0x2845d]        # 0x14004e68c
   14002622f:	test   al,0x2
   140026231:	je     0x140026277
   140026233:	mov    rcx,QWORD PTR [rip+0x28446]        # 0x14004e680
   14002623a:	lea    r8,[rip+0x16d77]        # 0x14003cfb8
   140026241:	mov    edx,0xb
   140026246:	mov    QWORD PTR [rsp+0x20],rsi
   14002624b:	call   0x140025d58
   140026250:	mov    eax,DWORD PTR [rip+0x28436]        # 0x14004e68c
   140026256:	test   al,0x2
   140026258:	je     0x140026277
   14002625a:	mov    rcx,QWORD PTR [rip+0x2841f]        # 0x14004e680
   140026261:	lea    r8,[rip+0x16d50]        # 0x14003cfb8
   140026268:	mov    edx,0xc
   14002626d:	mov    QWORD PTR [rsp+0x20],rsi
   140026272:	call   0x140025d58
   140026277:	test   r14,r14
   14002627a:	je     0x140026286
   14002627c:	mov    rax,rbx
   14002627f:	or     rbx,0xffffffffffffffff
   140026283:	mov    QWORD PTR [r14],rax
   140026286:	xor    edi,edi
   140026288:	cmp    rbx,0xffffffffffffffff
   14002628c:	je     0x140026297
   14002628e:	mov    rcx,rbx
   140026291:	call   QWORD PTR [rip+0xbec1]        # 0x140032158
   140026297:	mov    eax,edi
   140026299:	mov    rbx,QWORD PTR [rsp+0x60]
   14002629e:	mov    rbp,QWORD PTR [rsp+0x68]
   1400262a3:	add    rsp,0x40
   1400262a7:	pop    r14
   1400262a9:	pop    rdi
   1400262aa:	pop    rsi
   1400262ab:	ret    
   1400262ac:	call   QWORD PTR [rip+0xc19e]        # 0x140032450
   1400262b2:	mov    rdi,QWORD PTR [rax+0x130]
   1400262b9:	mov    rcx,rdi
   1400262bc:	call   QWORD PTR [rip+0xc3e6]        # 0x1400326a8
   1400262c2:	xor    r8d,r8d
   1400262c5:	mov    rcx,rsi
   1400262c8:	lea    edx,[r8+0x4]
   1400262cc:	call   rdi
   1400262ce:	mov    edi,eax
   1400262d0:	test   eax,eax
   1400262d2:	jns    0x140026277
   1400262d4:	test   BYTE PTR [rip+0x283b1],0x1        # 0x14004e68c
   1400262db:	je     0x140026288
   1400262dd:	mov    rcx,QWORD PTR [rip+0x2839c]        # 0x14004e680
   1400262e4:	mov    edx,0xd
   1400262e9:	mov    DWORD PTR [rsp+0x28],eax
   1400262ed:	mov    QWORD PTR [rsp+0x20],rsi
   1400262f2:	call   0x140026098
   1400262f7:	jmp    0x140026288
   1400262f9:	int3   
   1400262fa:	int3   
   1400262fb:	int3   
   1400262fc:	int3   
   1400262fd:	int3   
   1400262fe:	int3   
   1400262ff:	int3   
   140026300:	mov    rax,rsp
   140026303:	push   rbp
   140026304:	push   rsi
   140026305:	push   rdi
   140026306:	push   r14
   140026308:	push   r15
   14002630a:	sub    rsp,0x90
   140026311:	mov    QWORD PTR [rax-0x70],0xfffffffffffffffe
   140026319:	mov    QWORD PTR [rax+0x8],rbx
   14002631d:	mov    rax,QWORD PTR [rip+0x24cfc]        # 0x14004b020
   140026324:	xor    rax,rsp
   140026327:	mov    QWORD PTR [rsp+0x80],rax
   14002632f:	mov    rbp,r9
   140026332:	mov    r15,r8
   140026335:	mov    esi,ecx
   140026337:	and    QWORD PTR [rsp+0x30],0x0
   14002633d:	lea    rcx,[rsp+0x30]
   140026342:	call   0x1400278c4
   140026347:	mov    ebx,eax
   140026349:	test   eax,eax
   14002634b:	jns    0x140026390
   14002634d:	test   BYTE PTR [rip+0x28338],0x2        # 0x14004e68c
   140026354:	je     0x140026372
   140026356:	mov    edx,0xa
   14002635b:	mov    DWORD PTR [rsp+0x20],eax
   14002635f:	lea    r8,[rip+0x16d22]        # 0x14003d088
   140026366:	mov    rcx,QWORD PTR [rip+0x28313]        # 0x14004e680
   14002636d:	call   0x140024690
   140026372:	mov    edx,ebx
   140026374:	lea    rcx,[rsp+0x50]
   140026379:	call   0x140002064
   14002637e:	lea    rdx,[rip+0x22e03]        # 0x140049188
   140026385:	lea    rcx,[rsp+0x50]
   14002638a:	call   0x14002e2da
   14002638f:	int3   
   140026390:	mov    rdi,QWORD PTR [rsp+0x30]
   140026395:	test   rdi,rdi
   140026398:	je     0x1400263ae
   14002639a:	mov    rax,QWORD PTR [rdi]
   14002639d:	mov    rbx,QWORD PTR [rax]
   1400263a0:	mov    rcx,rbx
   1400263a3:	call   QWORD PTR [rip+0xc2ff]        # 0x1400326a8
   1400263a9:	mov    rcx,rdi
   1400263ac:	call   rbx
   1400263ae:	mov    QWORD PTR [rsp+0x30],rdi
   1400263b3:	mov    DWORD PTR [rdi+0x48],esi
   1400263b6:	and    QWORD PTR [rsp+0x38],0x0
   1400263bc:	mov    rsi,QWORD PTR [rdi+0x40]
   1400263c0:	test   rsi,rsi
   1400263c3:	je     0x1400263df
   1400263c5:	mov    rax,QWORD PTR [rsi]
   1400263c8:	mov    rbx,QWORD PTR [rax+0x10]
   1400263cc:	mov    rcx,rbx
   1400263cf:	call   QWORD PTR [rip+0xc2d3]        # 0x1400326a8
   1400263d5:	mov    rcx,rsi
   1400263d8:	call   rbx
   1400263da:	and    QWORD PTR [rdi+0x40],0x0
   1400263df:	and    QWORD PTR [rdi+0x40],0x0
   1400263e4:	mov    ecx,0x40
   1400263e9:	call   0x140023f10
   1400263ee:	mov    r14,rax
   1400263f1:	lea    rax,[rip+0xe8b8]        # 0x140034cb0
   1400263f8:	mov    QWORD PTR [r14],rax
   1400263fb:	and    DWORD PTR [r14+0x8],0x0
   140026400:	mov    DWORD PTR [r14+0x1c],0xf12192e
   140026408:	and    QWORD PTR [r14+0x38],0x0
   14002640d:	mov    rbx,QWORD PTR [rax+0x8]
   140026411:	mov    rcx,rbx
   140026414:	call   QWORD PTR [rip+0xc28e]        # 0x1400326a8
   14002641a:	mov    rcx,r14
   14002641d:	call   rbx
   14002641f:	nop
   140026420:	mov    rcx,r14
   140026423:	call   0x140027c98
   140026428:	mov    esi,eax
   14002642a:	test   eax,eax
   14002642c:	jns    0x140026445
   14002642e:	mov    rax,QWORD PTR [r14]
   140026431:	mov    rbx,QWORD PTR [rax+0x10]
   140026435:	mov    rcx,rbx
   140026438:	call   QWORD PTR [rip+0xc26a]        # 0x1400326a8
   14002643e:	mov    rcx,r14
   140026441:	call   rbx
   140026443:	jmp    0x14002644b
   140026445:	mov    QWORD PTR [rdi+0x40],r14
   140026449:	xor    esi,esi
   14002644b:	test   esi,esi
   14002644d:	jns    0x140026492
   14002644f:	test   BYTE PTR [rip+0x28236],0x2        # 0x14004e68c
   140026456:	je     0x140026474
   140026458:	mov    edx,0xb
   14002645d:	mov    DWORD PTR [rsp+0x20],esi
   140026461:	lea    r8,[rip+0x16c20]        # 0x14003d088
   140026468:	mov    rcx,QWORD PTR [rip+0x28211]        # 0x14004e680
   14002646f:	call   0x140024690
   140026474:	mov    edx,esi
   140026476:	lea    rcx,[rsp+0x50]
   14002647b:	call   0x140002064
   140026480:	lea    rdx,[rip+0x22d01]        # 0x140049188
   140026487:	lea    rcx,[rsp+0x50]
   14002648c:	call   0x14002e2da
   140026491:	int3   
   140026492:	lea    r14,[rdi+0x50]
   140026496:	mov    rsi,QWORD PTR [r14]
   140026499:	test   rsi,rsi
   14002649c:	je     0x1400264b7
   14002649e:	mov    rax,QWORD PTR [rsi]
   1400264a1:	mov    rbx,QWORD PTR [rax+0x10]
   1400264a5:	mov    rcx,rbx
   1400264a8:	call   QWORD PTR [rip+0xc1fa]        # 0x1400326a8
   1400264ae:	mov    rcx,rsi
   1400264b1:	call   rbx
   1400264b3:	and    QWORD PTR [r14],0x0
   1400264b7:	mov    rax,QWORD PTR [r15]
   1400264ba:	mov    rbx,QWORD PTR [rax+0x30]
   1400264be:	mov    rcx,rbx
   1400264c1:	call   QWORD PTR [rip+0xc1e1]        # 0x1400326a8
   1400264c7:	mov    rdx,r14
   1400264ca:	mov    rcx,r15
   1400264cd:	call   rbx
   1400264cf:	mov    ebx,eax
   1400264d1:	test   eax,eax
   1400264d3:	jns    0x140026518
   1400264d5:	test   BYTE PTR [rip+0x281b0],0x2        # 0x14004e68c
   1400264dc:	je     0x1400264fa
   1400264de:	mov    edx,0xc
   1400264e3:	mov    DWORD PTR [rsp+0x20],eax
   1400264e7:	lea    r8,[rip+0x16b9a]        # 0x14003d088
   1400264ee:	mov    rcx,QWORD PTR [rip+0x2818b]        # 0x14004e680
   1400264f5:	call   0x140024690
   1400264fa:	mov    edx,ebx
   1400264fc:	lea    rcx,[rsp+0x50]
   140026501:	call   0x140002064
   140026506:	lea    rdx,[rip+0x22c7b]        # 0x140049188
   14002650d:	lea    rcx,[rsp+0x50]
   140026512:	call   0x14002e2da
   140026517:	int3   
   140026518:	mov    QWORD PTR [rbp+0x0],rdi
   14002651c:	xor    ecx,ecx
   14002651e:	call   QWORD PTR [rip+0xbe2c]        # 0x140032350
   140026524:	nop
   140026525:	mov    rcx,QWORD PTR [rsp+0x80]
   14002652d:	xor    rcx,rsp
   140026530:	call   0x14002dd00
   140026535:	mov    rbx,QWORD PTR [rsp+0xc0]
   14002653d:	add    rsp,0x90
   140026544:	pop    r15
   140026546:	pop    r14
   140026548:	pop    rdi
   140026549:	pop    rsi
   14002654a:	pop    rbp
   14002654b:	ret    
   14002654c:	int3   
   14002654d:	int3   
   14002654e:	int3   
   14002654f:	int3   
   140026550:	int3   
   140026551:	int3   
   140026552:	int3   
   140026553:	int3   
   140026554:	int3   
   140026555:	int3   
   140026556:	int3   
   140026557:	int3   
   140026558:	int3   
   140026559:	int3   
   14002655a:	int3   
   14002655b:	int3   
   14002655c:	int3   
   14002655d:	int3   
   14002655e:	int3   
   14002655f:	int3   
   140026560:	mov    QWORD PTR [rsp+0x8],rbx
   140026565:	push   rdi
   140026566:	sub    rsp,0x20
   14002656a:	mov    ebx,edx
   14002656c:	mov    rdi,rcx
   14002656f:	call   0x140026598
   140026574:	test   bl,0x1
   140026577:	je     0x140026582
   140026579:	mov    rcx,rdi
   14002657c:	call   QWORD PTR [rip+0xc046]        # 0x1400325c8
   140026582:	mov    rax,rdi
   140026585:	mov    rbx,QWORD PTR [rsp+0x30]
   14002658a:	add    rsp,0x20
   14002658e:	pop    rdi
   14002658f:	ret    
   140026590:	int3   
   140026591:	int3   
   140026592:	int3   
   140026593:	int3   
   140026594:	int3   
   140026595:	int3   
   140026596:	int3   
   140026597:	int3   
   140026598:	mov    QWORD PTR [rsp+0x8],rbx
   14002659d:	mov    QWORD PTR [rsp+0x10],rsi
   1400265a2:	push   rdi
   1400265a3:	sub    rsp,0x20
   1400265a7:	lea    rax,[rip+0xe6da]        # 0x140034c88
   1400265ae:	mov    DWORD PTR [rcx+0x58],0x1
   1400265b5:	mov    QWORD PTR [rcx],rax
   1400265b8:	mov    rdi,rcx
   1400265bb:	mov    rsi,QWORD PTR [rcx+0x50]
   1400265bf:	test   rsi,rsi
   1400265c2:	je     0x1400265d9
   1400265c4:	mov    rax,QWORD PTR [rsi]
   1400265c7:	mov    rbx,QWORD PTR [rax+0x10]
   1400265cb:	mov    rcx,rbx
   1400265ce:	call   QWORD PTR [rip+0xc0d4]        # 0x1400326a8
   1400265d4:	mov    rcx,rsi
   1400265d7:	call   rbx
   1400265d9:	mov    rsi,QWORD PTR [rdi+0x40]
   1400265dd:	test   rsi,rsi
   1400265e0:	je     0x1400265f7
   1400265e2:	mov    rax,QWORD PTR [rsi]
   1400265e5:	mov    rbx,QWORD PTR [rax+0x10]
   1400265e9:	mov    rcx,rbx
   1400265ec:	call   QWORD PTR [rip+0xc0b6]        # 0x1400326a8
   1400265f2:	mov    rcx,rsi
   1400265f5:	call   rbx
   1400265f7:	lea    rcx,[rdi+0x10]
   1400265fb:	cmp    BYTE PTR [rcx+0x28],0x0
   1400265ff:	je     0x14002660b
   140026601:	mov    BYTE PTR [rcx+0x28],0x0
   140026605:	call   QWORD PTR [rip+0xbc6d]        # 0x140032278
   14002660b:	mov    rbx,QWORD PTR [rsp+0x30]
   140026610:	mov    rsi,QWORD PTR [rsp+0x38]
   140026615:	add    rsp,0x20
   140026619:	pop    rdi
   14002661a:	ret    
   14002661b:	int3   
   14002661c:	int3   
   14002661d:	int3   
   14002661e:	int3   
   14002661f:	int3   
   140026620:	int3   
   140026621:	int3   
   140026622:	int3   
   140026623:	int3   
   140026624:	rex push rbp
   140026626:	push   rbx
   140026627:	push   rdi
   140026628:	push   r12
   14002662a:	push   r13
   14002662c:	push   r14
   14002662e:	push   r15
   140026630:	lea    rbp,[rsp-0x27]
   140026635:	sub    rsp,0x100
   14002663c:	mov    QWORD PTR [rbp-0x39],0xfffffffffffffffe
   140026644:	mov    rax,QWORD PTR [rip+0x249d5]        # 0x14004b020
   14002664b:	xor    rax,rsp
   14002664e:	mov    QWORD PTR [rbp+0x17],rax
   140026652:	mov    rdi,r8
   140026655:	mov    r15,rdx
   140026658:	mov    r14,rcx
   14002665b:	xor    r13d,r13d
   14002665e:	lea    rcx,[rip+0x12757]        # 0x140038dbc
   140026665:	lea    r12d,[r13+0x4]
   140026669:	test   BYTE PTR [rip+0x2801c],r12b        # 0x14004e68c
   140026670:	je     0x1400266a0
   140026672:	lea    eax,[r13+0xd]
   140026676:	mov    QWORD PTR [rsp+0x30],r13
   14002667b:	mov    QWORD PTR [rsp+0x28],r12
   140026680:	mov    QWORD PTR [rsp+0x20],rcx
   140026685:	movzx  r9d,ax
   140026689:	lea    r8,[rip+0x169f8]        # 0x14003d088
   140026690:	lea    edx,[rax+0x1e]
   140026693:	mov    rcx,QWORD PTR [rip+0x27fe6]        # 0x14004e680
   14002669a:	call   QWORD PTR [rip+0xb980]        # 0x140032020
   1400266a0:	test   r14,r14
   1400266a3:	je     0x1400266b9
   1400266a5:	mov    rax,QWORD PTR [r14]
   1400266a8:	mov    rbx,QWORD PTR [rax]
   1400266ab:	mov    rcx,rbx
   1400266ae:	call   QWORD PTR [rip+0xbff4]        # 0x1400326a8
   1400266b4:	mov    rcx,r14
   1400266b7:	call   rbx
   1400266b9:	mov    QWORD PTR [rbp-0x31],r14
   1400266bd:	mov    QWORD PTR [rbp-0x71],r13
   1400266c1:	mov    rax,QWORD PTR [rdi]
   1400266c4:	mov    rbx,QWORD PTR [rax+0x18]
   1400266c8:	mov    rcx,rbx
   1400266cb:	call   QWORD PTR [rip+0xbfd7]        # 0x1400326a8
   1400266d1:	lea    rdx,[rbp-0x71]
   1400266d5:	mov    rcx,rdi
   1400266d8:	call   rbx
   1400266da:	mov    ebx,eax
   1400266dc:	test   eax,eax
   1400266de:	jns    0x140026721
   1400266e0:	test   BYTE PTR [rip+0x27fa5],0x2        # 0x14004e68c
   1400266e7:	je     0x140026705
   1400266e9:	mov    edx,0xe
   1400266ee:	mov    DWORD PTR [rsp+0x20],eax
   1400266f2:	lea    r8,[rip+0x1698f]        # 0x14003d088
   1400266f9:	mov    rcx,QWORD PTR [rip+0x27f80]        # 0x14004e680
   140026700:	call   0x140024690
   140026705:	mov    edx,ebx
   140026707:	lea    rcx,[rbp-0x11]
   14002670b:	call   0x140002064
   140026710:	lea    rdx,[rip+0x22a71]        # 0x140049188
   140026717:	lea    rcx,[rbp-0x11]
   14002671b:	call   0x14002e2da
   140026720:	int3   
   140026721:	mov    WORD PTR [rbp-0x79],r13w
   140026726:	mov    rbx,QWORD PTR [rbp-0x71]
   14002672a:	mov    rax,QWORD PTR [rbx]
   14002672d:	mov    rdi,QWORD PTR [rax+0x40]
   140026731:	mov    rcx,rdi
   140026734:	call   QWORD PTR [rip+0xbf6e]        # 0x1400326a8
   14002673a:	lea    rdx,[rbp-0x79]
   14002673e:	mov    rcx,rbx
   140026741:	call   rdi
   140026743:	test   eax,eax
   140026745:	jns    0x140026799
   140026747:	test   BYTE PTR [rip+0x27f3e],0x2        # 0x14004e68c
   14002674e:	je     0x140026799
   140026750:	mov    DWORD PTR [rsp+0x50],eax
   140026754:	mov    ecx,0xf
   140026759:	mov    QWORD PTR [rsp+0x40],r13
   14002675e:	mov    QWORD PTR [rsp+0x38],r12
   140026763:	lea    rax,[rsp+0x50]
   140026768:	mov    QWORD PTR [rsp+0x30],rax
   14002676d:	mov    QWORD PTR [rsp+0x28],r12
   140026772:	lea    rdx,[rip+0x12643]        # 0x140038dbc
   140026779:	mov    QWORD PTR [rsp+0x20],rdx
   14002677e:	movzx  r9d,cx
   140026782:	lea    r8,[rip+0x168ff]        # 0x14003d088
   140026789:	lea    edx,[rcx+0x1c]
   14002678c:	mov    rcx,QWORD PTR [rip+0x27eed]        # 0x14004e680
   140026793:	call   QWORD PTR [rip+0xb887]        # 0x140032020
   140026799:	mov    QWORD PTR [rbp-0x59],r13
   14002679d:	cmp    DWORD PTR [r14+0x48],0x2
   1400267a2:	jne    0x140026852
   1400267a8:	mov    rbx,QWORD PTR [rbp-0x71]
   1400267ac:	mov    rax,QWORD PTR [rbx]
   1400267af:	mov    rdi,QWORD PTR [rax+0x30]
   1400267b3:	mov    rcx,rdi
   1400267b6:	call   QWORD PTR [rip+0xbeec]        # 0x1400326a8
   1400267bc:	lea    rdx,[rbp-0x59]
   1400267c0:	mov    rcx,rbx
   1400267c3:	call   rdi
   1400267c5:	test   eax,eax
   1400267c7:	jns    0x140026852
   1400267cd:	test   BYTE PTR [rip+0x27eb8],0x2        # 0x14004e68c
   1400267d4:	je     0x14002681f
   1400267d6:	mov    DWORD PTR [rsp+0x50],eax
   1400267da:	mov    ecx,0x10
   1400267df:	mov    QWORD PTR [rsp+0x40],r13
   1400267e4:	mov    QWORD PTR [rsp+0x38],r12
   1400267e9:	lea    rax,[rsp+0x50]
   1400267ee:	mov    QWORD PTR [rsp+0x30],rax
   1400267f3:	mov    QWORD PTR [rsp+0x28],r12
   1400267f8:	lea    rax,[rip+0x125bd]        # 0x140038dbc
   1400267ff:	mov    QWORD PTR [rsp+0x20],rax
   140026804:	movzx  r9d,cx
   140026808:	lea    r8,[rip+0x16879]        # 0x14003d088
   14002680f:	lea    edx,[rcx+0x1b]
   140026812:	mov    rcx,QWORD PTR [rip+0x27e67]        # 0x14004e680
   140026819:	call   QWORD PTR [rip+0xb801]        # 0x140032020
   14002681f:	mov    rcx,QWORD PTR [rbp-0x59]
   140026823:	lea    rbx,[rip+0x1679e]        # 0x14003cfc8
   14002682a:	cmp    rbx,rcx
   14002682d:	je     0x140026852
   14002682f:	call   QWORD PTR [rip+0xbb1b]        # 0x140032350
   140026835:	mov    rcx,rbx
   140026838:	call   QWORD PTR [rip+0xbb22]        # 0x140032360
   14002683e:	mov    QWORD PTR [rbp-0x59],rax
   140026842:	test   rax,rax
   140026845:	jne    0x140026852
   140026847:	mov    ecx,0x8007000e
   14002684c:	call   0x140005d50
   140026851:	int3   
   140026852:	mov    WORD PTR [rbp-0x7d],r13w
   140026857:	mov    rbx,QWORD PTR [rbp-0x71]
   14002685b:	mov    rax,QWORD PTR [rbx]
   14002685e:	mov    rdi,QWORD PTR [rax+0x28]
   140026862:	mov    rcx,rdi
   140026865:	call   QWORD PTR [rip+0xbe3d]        # 0x1400326a8
   14002686b:	lea    rdx,[rbp-0x7d]
   14002686f:	mov    rcx,rbx
   140026872:	call   rdi
   140026874:	test   eax,eax
   140026876:	jns    0x1400268ca
   140026878:	test   BYTE PTR [rip+0x27e0d],0x2        # 0x14004e68c
   14002687f:	je     0x1400268ca
   140026881:	mov    DWORD PTR [rsp+0x50],eax
   140026885:	mov    ecx,0x11
   14002688a:	mov    QWORD PTR [rsp+0x40],r13
   14002688f:	mov    QWORD PTR [rsp+0x38],r12
   140026894:	lea    rax,[rsp+0x50]
   140026899:	mov    QWORD PTR [rsp+0x30],rax
   14002689e:	mov    QWORD PTR [rsp+0x28],r12
   1400268a3:	lea    rax,[rip+0x12512]        # 0x140038dbc
   1400268aa:	mov    QWORD PTR [rsp+0x20],rax
   1400268af:	movzx  r9d,cx
   1400268b3:	lea    r8,[rip+0x167ce]        # 0x14003d088
   1400268ba:	lea    edx,[rcx+0x1a]
   1400268bd:	mov    rcx,QWORD PTR [rip+0x27dbc]        # 0x14004e680
   1400268c4:	call   QWORD PTR [rip+0xb756]        # 0x140032020
   1400268ca:	mov    QWORD PTR [rbp-0x61],r13
   1400268ce:	cmp    DWORD PTR [r14+0x48],0x2
   1400268d3:	jne    0x140026985
   1400268d9:	mov    rbx,QWORD PTR [rbp-0x71]
   1400268dd:	mov    rax,QWORD PTR [rbx]
   1400268e0:	mov    rdi,QWORD PTR [rax+0x18]
   1400268e4:	mov    rcx,rdi
   1400268e7:	call   QWORD PTR [rip+0xbdbb]        # 0x1400326a8
   1400268ed:	lea    rdx,[rbp-0x61]
   1400268f1:	mov    rcx,rbx
   1400268f4:	call   rdi
   1400268f6:	test   eax,eax
   1400268f8:	jns    0x140026985
   1400268fe:	test   BYTE PTR [rip+0x27d87],0x2        # 0x14004e68c
   140026905:	je     0x140026952
   140026907:	mov    DWORD PTR [rsp+0x50],eax
   14002690b:	mov    edx,0x12
   140026910:	mov    QWORD PTR [rsp+0x40],r13
   140026915:	mov    QWORD PTR [rsp+0x38],r12
   14002691a:	lea    rax,[rsp+0x50]
   14002691f:	mov    QWORD PTR [rsp+0x30],rax
   140026924:	mov    QWORD PTR [rsp+0x28],r12
   140026929:	lea    rax,[rip+0x1248c]        # 0x140038dbc
   140026930:	mov    QWORD PTR [rsp+0x20],rax
   140026935:	movzx  r9d,dx
   140026939:	lea    r8,[rip+0x16748]        # 0x14003d088
   140026940:	mov    edx,0x2b
   140026945:	mov    rcx,QWORD PTR [rip+0x27d34]        # 0x14004e680
   14002694c:	call   QWORD PTR [rip+0xb6ce]        # 0x140032020
   140026952:	mov    rcx,QWORD PTR [rbp-0x61]
   140026956:	lea    rbx,[rip+0x1666b]        # 0x14003cfc8
   14002695d:	cmp    rbx,rcx
   140026960:	je     0x140026985
   140026962:	call   QWORD PTR [rip+0xb9e8]        # 0x140032350
   140026968:	mov    rcx,rbx
   14002696b:	call   QWORD PTR [rip+0xb9ef]        # 0x140032360
   140026971:	mov    QWORD PTR [rbp-0x61],rax
   140026975:	test   rax,rax
   140026978:	jne    0x140026985
   14002697a:	mov    ecx,0x8007000e
   14002697f:	call   0x140005d50
   140026984:	int3   
   140026985:	mov    BYTE PTR [rsp+0x58],r13b
   14002698a:	mov    rbx,QWORD PTR [rbp-0x71]
   14002698e:	mov    rax,QWORD PTR [rbx]
   140026991:	mov    rdi,QWORD PTR [rax+0x50]
   140026995:	mov    rcx,rdi
   140026998:	call   QWORD PTR [rip+0xbd0a]        # 0x1400326a8
   14002699e:	lea    rdx,[rsp+0x58]
   1400269a3:	mov    rcx,rbx
   1400269a6:	call   rdi
   1400269a8:	test   eax,eax
   1400269aa:	jns    0x1400269fe
   1400269ac:	test   BYTE PTR [rip+0x27cd9],0x2        # 0x14004e68c
   1400269b3:	je     0x1400269fe
   1400269b5:	mov    DWORD PTR [rsp+0x50],eax
   1400269b9:	mov    ecx,0x13
   1400269be:	mov    QWORD PTR [rsp+0x40],r13
   1400269c3:	mov    QWORD PTR [rsp+0x38],r12
   1400269c8:	lea    rax,[rsp+0x50]
   1400269cd:	mov    QWORD PTR [rsp+0x30],rax
   1400269d2:	mov    QWORD PTR [rsp+0x28],r12
   1400269d7:	lea    rax,[rip+0x123de]        # 0x140038dbc
   1400269de:	mov    QWORD PTR [rsp+0x20],rax
   1400269e3:	movzx  r9d,cx
   1400269e7:	lea    r8,[rip+0x1669a]        # 0x14003d088
   1400269ee:	lea    edx,[rcx+0x18]
   1400269f1:	mov    rcx,QWORD PTR [rip+0x27c88]        # 0x14004e680
   1400269f8:	call   QWORD PTR [rip+0xb622]        # 0x140032020
   1400269fe:	mov    rax,QWORD PTR [r15]
   140026a01:	mov    rbx,QWORD PTR [rax+0x30]
   140026a05:	mov    rcx,rbx
   140026a08:	call   QWORD PTR [rip+0xbc9a]        # 0x1400326a8
   140026a0e:	movzx  eax,WORD PTR [rbp-0x79]
   140026a12:	mov    WORD PTR [rsp+0x28],ax
   140026a17:	movzx  eax,WORD PTR [rbp-0x7d]
   140026a1b:	mov    WORD PTR [rsp+0x20],ax
   140026a20:	mov    r9b,BYTE PTR [rsp+0x58]
   140026a25:	mov    r8,QWORD PTR [rbp-0x59]
   140026a29:	mov    rdx,QWORD PTR [rbp-0x61]
   140026a2d:	mov    rcx,r15
   140026a30:	call   rbx
   140026a32:	mov    edi,eax
   140026a34:	test   eax,eax
   140026a36:	jns    0x140026a8a
   140026a38:	test   BYTE PTR [rip+0x27c4d],0x2        # 0x14004e68c
   140026a3f:	je     0x140026a8a
   140026a41:	mov    DWORD PTR [rsp+0x50],eax
   140026a45:	mov    ecx,0x14
   140026a4a:	mov    QWORD PTR [rsp+0x40],r13
   140026a4f:	mov    QWORD PTR [rsp+0x38],r12
   140026a54:	lea    rax,[rsp+0x50]
   140026a59:	mov    QWORD PTR [rsp+0x30],rax
   140026a5e:	mov    QWORD PTR [rsp+0x28],r12
   140026a63:	lea    rax,[rip+0x12352]        # 0x140038dbc
   140026a6a:	mov    QWORD PTR [rsp+0x20],rax
   140026a6f:	movzx  r9d,cx
   140026a73:	lea    r8,[rip+0x1660e]        # 0x14003d088
   140026a7a:	lea    edx,[rcx+0x17]
   140026a7d:	mov    rcx,QWORD PTR [rip+0x27bfc]        # 0x14004e680
   140026a84:	call   QWORD PTR [rip+0xb596]        # 0x140032020
   140026a8a:	mov    rax,QWORD PTR [r15]
   140026a8d:	mov    rbx,QWORD PTR [rax+0x20]
   140026a91:	mov    rcx,rbx
   140026a94:	call   QWORD PTR [rip+0xbc0e]        # 0x1400326a8
   140026a9a:	xor    edx,edx
   140026a9c:	mov    rcx,r15
   140026a9f:	call   rbx
   140026aa1:	test   edi,edi
   140026aa3:	jns    0x140026af7
   140026aa5:	test   BYTE PTR [rip+0x27be0],0x2        # 0x14004e68c
   140026aac:	je     0x140026af7
   140026aae:	mov    DWORD PTR [rsp+0x50],edi
   140026ab2:	mov    ecx,0x15
   140026ab7:	mov    QWORD PTR [rsp+0x40],r13
   140026abc:	mov    QWORD PTR [rsp+0x38],r12
   140026ac1:	lea    rax,[rsp+0x50]
   140026ac6:	mov    QWORD PTR [rsp+0x30],rax
   140026acb:	mov    QWORD PTR [rsp+0x28],r12
   140026ad0:	lea    rax,[rip+0x122e5]        # 0x140038dbc
   140026ad7:	mov    QWORD PTR [rsp+0x20],rax
   140026adc:	movzx  r9d,cx
   140026ae0:	lea    r8,[rip+0x165a1]        # 0x14003d088
   140026ae7:	lea    edx,[rcx+0x16]
   140026aea:	mov    rcx,QWORD PTR [rip+0x27b8f]        # 0x14004e680
   140026af1:	call   QWORD PTR [rip+0xb529]        # 0x140032020
   140026af7:	mov    rax,QWORD PTR [r15]
   140026afa:	mov    r12d,0x1
   140026b00:	mov    rbx,QWORD PTR [rax+0x28]
   140026b04:	mov    rcx,rbx
   140026b07:	call   QWORD PTR [rip+0xbb9b]        # 0x1400326a8
   140026b0d:	movzx  edx,r12w
   140026b11:	mov    rcx,r15
   140026b14:	call   rbx
   140026b16:	test   edi,edi
   140026b18:	jns    0x140026b74
   140026b1a:	mov    r12d,0x4
   140026b20:	test   BYTE PTR [rip+0x27b65],0x2        # 0x14004e68c
   140026b27:	je     0x140026b7a
   140026b29:	mov    DWORD PTR [rsp+0x50],edi
   140026b2d:	lea    ecx,[r12+0x12]
   140026b32:	mov    QWORD PTR [rsp+0x40],r13
   140026b37:	mov    QWORD PTR [rsp+0x38],r12
   140026b3c:	lea    rax,[rsp+0x50]
   140026b41:	mov    QWORD PTR [rsp+0x30],rax
   140026b46:	mov    QWORD PTR [rsp+0x28],r12
   140026b4b:	lea    rax,[rip+0x1226a]        # 0x140038dbc
   140026b52:	mov    QWORD PTR [rsp+0x20],rax
   140026b57:	movzx  r9d,cx
   140026b5b:	lea    r8,[rip+0x16526]        # 0x14003d088
   140026b62:	lea    edx,[rcx+0x15]
   140026b65:	mov    rcx,QWORD PTR [rip+0x27b14]        # 0x14004e680
   140026b6c:	call   QWORD PTR [rip+0xb4ae]        # 0x140032020
   140026b72:	jmp    0x140026b7a
   140026b74:	mov    r12d,0x4
   140026b7a:	mov    QWORD PTR [rbp-0x51],r13
   140026b7e:	mov    QWORD PTR [rbp-0x69],r13
   140026b82:	mov    rbx,QWORD PTR [rbp-0x71]
   140026b86:	mov    rax,QWORD PTR [rbx]
   140026b89:	mov    rdi,QWORD PTR [rax+0x58]
   140026b8d:	mov    rcx,rdi
   140026b90:	call   QWORD PTR [rip+0xbb12]        # 0x1400326a8
   140026b96:	xor    r8d,r8d
   140026b99:	lea    rdx,[rbp-0x69]
   140026b9d:	mov    rcx,rbx
   140026ba0:	call   rdi
   140026ba2:	test   eax,eax
   140026ba4:	jns    0x140026c32
   140026baa:	test   BYTE PTR [rip+0x27adb],0x2        # 0x14004e68c
   140026bb1:	je     0x140026bfc
   140026bb3:	mov    DWORD PTR [rsp+0x50],eax
   140026bb7:	mov    ecx,0x17
   140026bbc:	mov    QWORD PTR [rsp+0x40],r13
   140026bc1:	mov    QWORD PTR [rsp+0x38],r12
   140026bc6:	lea    rax,[rsp+0x50]
   140026bcb:	mov    QWORD PTR [rsp+0x30],rax
   140026bd0:	mov    QWORD PTR [rsp+0x28],r12
   140026bd5:	lea    rax,[rip+0x121e0]        # 0x140038dbc
   140026bdc:	mov    QWORD PTR [rsp+0x20],rax
   140026be1:	movzx  r9d,cx
   140026be5:	lea    r8,[rip+0x1649c]        # 0x14003d088
   140026bec:	lea    edx,[rcx+0x14]
   140026bef:	mov    rcx,QWORD PTR [rip+0x27a8a]        # 0x14004e680
   140026bf6:	call   QWORD PTR [rip+0xb424]        # 0x140032020
   140026bfc:	lea    rbx,[rip+0x163d5]        # 0x14003cfd8
   140026c03:	mov    rax,QWORD PTR [rbp-0x69]
   140026c07:	cmp    rbx,rax
   140026c0a:	je     0x140026c36
   140026c0c:	mov    rcx,rax
   140026c0f:	call   QWORD PTR [rip+0xb73b]        # 0x140032350
   140026c15:	mov    rcx,rbx
   140026c18:	call   QWORD PTR [rip+0xb742]        # 0x140032360
   140026c1e:	mov    QWORD PTR [rbp-0x69],rax
   140026c22:	test   rax,rax
   140026c25:	jne    0x140026c36
   140026c27:	mov    ecx,0x8007000e
   140026c2c:	call   0x140005d50
   140026c31:	int3   
   140026c32:	mov    rax,QWORD PTR [rbp-0x69]
   140026c36:	lea    r8,[rbp-0x51]
   140026c3a:	mov    rdx,rax
   140026c3d:	lea    rcx,[rip+0x163c4]        # 0x14003d008
   140026c44:	call   0x14002723c
   140026c49:	mov    rax,QWORD PTR [r15]
   140026c4c:	mov    rbx,QWORD PTR [rax+0x40]
   140026c50:	mov    rcx,rbx
   140026c53:	call   QWORD PTR [rip+0xba4f]        # 0x1400326a8
   140026c59:	mov    rdx,QWORD PTR [rbp-0x51]
   140026c5d:	mov    rcx,r15
   140026c60:	call   rbx
   140026c62:	test   eax,eax
   140026c64:	jns    0x140026cba
   140026c66:	lea    rdi,[rip+0x1214f]        # 0x140038dbc
   140026c6d:	test   BYTE PTR [rip+0x27a18],0x2        # 0x14004e68c
   140026c74:	je     0x140026cc1
   140026c76:	mov    DWORD PTR [rsp+0x50],eax
   140026c7a:	mov    ecx,0x18
   140026c7f:	mov    QWORD PTR [rsp+0x40],r13
   140026c84:	mov    QWORD PTR [rsp+0x38],r12
   140026c89:	lea    rax,[rsp+0x50]
   140026c8e:	mov    QWORD PTR [rsp+0x30],rax
   140026c93:	mov    QWORD PTR [rsp+0x28],r12
   140026c98:	mov    QWORD PTR [rsp+0x20],rdi
   140026c9d:	movzx  r9d,cx
   140026ca1:	lea    r8,[rip+0x163e0]        # 0x14003d088
   140026ca8:	lea    edx,[rcx+0x13]
   140026cab:	mov    rcx,QWORD PTR [rip+0x279ce]        # 0x14004e680
   140026cb2:	call   QWORD PTR [rip+0xb368]        # 0x140032020
   140026cb8:	jmp    0x140026cc1
   140026cba:	lea    rdi,[rip+0x120fb]        # 0x140038dbc
   140026cc1:	xor    eax,eax
   140026cc3:	mov    QWORD PTR [rbp-0x29],rax
   140026cc7:	mov    QWORD PTR [rbp-0x21],rax
   140026ccb:	mov    DWORD PTR [rbp-0x19],eax
   140026cce:	lea    r8,[rbp-0x29]
   140026cd2:	mov    rdx,QWORD PTR [rbp-0x69]
   140026cd6:	mov    rcx,r14
   140026cd9:	call   0x1400273b8
   140026cde:	test   eax,eax
   140026ce0:	jns    0x140026cf2
   140026ce2:	test   BYTE PTR [rip+0x279a3],0x2        # 0x14004e68c
   140026ce9:	je     0x140026d5f
   140026ceb:	mov    ecx,0x19
   140026cf0:	jmp    0x140026d20
   140026cf2:	mov    rax,QWORD PTR [r15]
   140026cf5:	mov    rbx,QWORD PTR [rax+0x18]
   140026cf9:	mov    rcx,rbx
   140026cfc:	call   QWORD PTR [rip+0xb9a6]        # 0x1400326a8
   140026d02:	xor    r8d,r8d
   140026d05:	lea    rdx,[rbp-0x29]
   140026d09:	mov    rcx,r15
   140026d0c:	call   rbx
   140026d0e:	test   eax,eax
   140026d10:	jns    0x140026d5f
   140026d12:	test   BYTE PTR [rip+0x27973],0x2        # 0x14004e68c
   140026d19:	je     0x140026d5f
   140026d1b:	mov    ecx,0x1a
   140026d20:	mov    QWORD PTR [rsp+0x40],r13
   140026d25:	mov    DWORD PTR [rsp+0x50],eax
   140026d29:	mov    QWORD PTR [rsp+0x38],r12
   140026d2e:	lea    rax,[rsp+0x50]
   140026d33:	mov    QWORD PTR [rsp+0x30],rax
   140026d38:	mov    QWORD PTR [rsp+0x28],r12
   140026d3d:	movzx  r9d,cx
   140026d41:	mov    QWORD PTR [rsp+0x20],rdi
   140026d46:	lea    r8,[rip+0x1633b]        # 0x14003d088
   140026d4d:	mov    edx,0x2b
   140026d52:	mov    rcx,QWORD PTR [rip+0x27927]        # 0x14004e680
   140026d59:	call   QWORD PTR [rip+0xb2c1]        # 0x140032020
   140026d5f:	cmp    DWORD PTR [r14+0x58],r13d
   140026d63:	jne    0x140026ea3
   140026d69:	mov    QWORD PTR [rbp-0x49],r13
   140026d6d:	mov    rbx,QWORD PTR [rbp-0x71]
   140026d71:	mov    rax,QWORD PTR [rbx]
   140026d74:	mov    rdi,QWORD PTR [rax+0x48]
   140026d78:	mov    rcx,rdi
   140026d7b:	call   QWORD PTR [rip+0xb927]        # 0x1400326a8
   140026d81:	lea    rdx,[rbp-0x41]
   140026d85:	mov    rcx,rbx
   140026d88:	call   rdi
   140026d8a:	test   eax,eax
   140026d8c:	jns    0x140026de2
   140026d8e:	lea    rdi,[rip+0x12027]        # 0x140038dbc
   140026d95:	test   BYTE PTR [rip+0x278f0],0x2        # 0x14004e68c
   140026d9c:	je     0x140026de9
   140026d9e:	mov    DWORD PTR [rsp+0x50],eax
   140026da2:	mov    ecx,0x1b
   140026da7:	mov    QWORD PTR [rsp+0x40],r13
   140026dac:	mov    QWORD PTR [rsp+0x38],r12
   140026db1:	lea    rax,[rsp+0x50]
   140026db6:	mov    QWORD PTR [rsp+0x30],rax
   140026dbb:	mov    QWORD PTR [rsp+0x28],r12
   140026dc0:	mov    QWORD PTR [rsp+0x20],rdi
   140026dc5:	movzx  r9d,cx
   140026dc9:	lea    r8,[rip+0x162b8]        # 0x14003d088
   140026dd0:	lea    edx,[rcx+0x10]
   140026dd3:	mov    rcx,QWORD PTR [rip+0x278a6]        # 0x14004e680
   140026dda:	call   QWORD PTR [rip+0xb240]        # 0x140032020
   140026de0:	jmp    0x140026de9
   140026de2:	lea    rdi,[rip+0x11fd3]        # 0x140038dbc
   140026de9:	lea    r8,[rbp-0x49]
   140026ded:	mov    edx,DWORD PTR [rbp-0x41]
   140026df0:	call   0x140027134
   140026df5:	mov    rax,QWORD PTR [r15]
   140026df8:	mov    rbx,QWORD PTR [rax+0x40]
   140026dfc:	mov    rcx,rbx
   140026dff:	call   QWORD PTR [rip+0xb8a3]        # 0x1400326a8
   140026e05:	mov    rdx,QWORD PTR [rbp-0x49]
   140026e09:	mov    rcx,r15
   140026e0c:	call   rbx
   140026e0e:	test   eax,eax
   140026e10:	jns    0x140026e5d
   140026e12:	test   BYTE PTR [rip+0x27873],0x2        # 0x14004e68c
   140026e19:	je     0x140026e5d
   140026e1b:	mov    DWORD PTR [rsp+0x50],eax
   140026e1f:	mov    ecx,0x1c
   140026e24:	mov    QWORD PTR [rsp+0x40],r13
   140026e29:	mov    QWORD PTR [rsp+0x38],r12
   140026e2e:	lea    rax,[rsp+0x50]
   140026e33:	mov    QWORD PTR [rsp+0x30],rax
   140026e38:	mov    QWORD PTR [rsp+0x28],r12
   140026e3d:	mov    QWORD PTR [rsp+0x20],rdi
   140026e42:	movzx  r9d,cx
   140026e46:	lea    r8,[rip+0x1623b]        # 0x14003d088
   140026e4d:	lea    edx,[rcx+0xf]
   140026e50:	mov    rcx,QWORD PTR [rip+0x27829]        # 0x14004e680
   140026e57:	call   QWORD PTR [rip+0xb1c3]        # 0x140032020
   140026e5d:	mov    rdi,QWORD PTR [r14+0x50]
   140026e61:	mov    rax,QWORD PTR [rdi]
   140026e64:	mov    rbx,QWORD PTR [rax+0x18]
   140026e68:	mov    rcx,rbx
   140026e6b:	call   QWORD PTR [rip+0xb837]        # 0x1400326a8
   140026e71:	mov    rdx,r15
   140026e74:	mov    rcx,rdi
   140026e77:	call   rbx
   140026e79:	test   eax,eax
   140026e7b:	jne    0x140026e86
   140026e7d:	mov    rcx,r14
   140026e80:	call   0x140026f68
   140026e85:	nop
   140026e86:	mov    rcx,QWORD PTR [rbp-0x49]
   140026e8a:	call   QWORD PTR [rip+0xb4c0]        # 0x140032350
   140026e90:	cmp    DWORD PTR [r14+0x58],r13d
   140026e94:	jne    0x140026ea3
   140026e96:	lea    rcx,[rip+0x16193]        # 0x14003d030
   140026e9d:	call   QWORD PTR [rip+0xb495]        # 0x140032338
   140026ea3:	test   BYTE PTR [rip+0x277e2],r12b        # 0x14004e68c
   140026eaa:	je     0x140026ee3
   140026eac:	mov    eax,0x1d
   140026eb1:	mov    QWORD PTR [rsp+0x30],r13
   140026eb6:	mov    QWORD PTR [rsp+0x28],r12
   140026ebb:	lea    rdx,[rip+0x11efa]        # 0x140038dbc
   140026ec2:	mov    QWORD PTR [rsp+0x20],rdx
   140026ec7:	movzx  r9d,ax
   140026ecb:	lea    r8,[rip+0x161b6]        # 0x14003d088
   140026ed2:	lea    edx,[rax+0xe]
   140026ed5:	mov    rcx,QWORD PTR [rip+0x277a4]        # 0x14004e680
   140026edc:	call   QWORD PTR [rip+0xb13e]        # 0x140032020
   140026ee2:	nop
   140026ee3:	mov    rcx,QWORD PTR [rbp-0x69]
   140026ee7:	call   QWORD PTR [rip+0xb463]        # 0x140032350
   140026eed:	nop
   140026eee:	mov    rcx,QWORD PTR [rbp-0x51]
   140026ef2:	call   QWORD PTR [rip+0xb458]        # 0x140032350
   140026ef8:	nop
   140026ef9:	mov    rcx,QWORD PTR [rbp-0x61]
   140026efd:	call   QWORD PTR [rip+0xb44d]        # 0x140032350
   140026f03:	nop
   140026f04:	mov    rcx,QWORD PTR [rbp-0x59]
   140026f08:	call   QWORD PTR [rip+0xb442]        # 0x140032350
   140026f0e:	nop
   140026f0f:	mov    rbx,QWORD PTR [rbp-0x71]
   140026f13:	test   rbx,rbx
   140026f16:	je     0x140026f2e
   140026f18:	mov    rax,QWORD PTR [rbx]
   140026f1b:	mov    rdi,QWORD PTR [rax+0x8]
   140026f1f:	mov    rcx,rdi
   140026f22:	call   QWORD PTR [rip+0xb780]        # 0x1400326a8
   140026f28:	mov    rcx,rbx
   140026f2b:	call   rdi
   140026f2d:	nop
   140026f2e:	mov    rax,QWORD PTR [r14]
   140026f31:	mov    rbx,QWORD PTR [rax+0x8]
   140026f35:	mov    rcx,rbx
   140026f38:	call   QWORD PTR [rip+0xb76a]        # 0x1400326a8
   140026f3e:	mov    rcx,r14
   140026f41:	call   rbx
   140026f43:	mov    rcx,QWORD PTR [rbp+0x17]
   140026f47:	xor    rcx,rsp
   140026f4a:	call   0x14002dd00
   140026f4f:	add    rsp,0x100
   140026f56:	pop    r15
   140026f58:	pop    r14
   140026f5a:	pop    r13
   140026f5c:	pop    r12
   140026f5e:	pop    rdi
   140026f5f:	pop    rbx
   140026f60:	pop    rbp
   140026f61:	ret    
   140026f62:	int3   
   140026f63:	int3   
   140026f64:	int3   
   140026f65:	int3   
   140026f66:	int3   
   140026f67:	int3   
   140026f68:	mov    rax,rsp
   140026f6b:	push   rbp
   140026f6c:	push   rdi
   140026f6d:	push   r14
   140026f6f:	mov    rbp,rsp
   140026f72:	sub    rsp,0x80
   140026f79:	mov    QWORD PTR [rbp-0x38],0xfffffffffffffffe
   140026f81:	mov    QWORD PTR [rax+0x10],rbx
   140026f85:	mov    QWORD PTR [rax+0x18],rsi
   140026f89:	mov    rax,QWORD PTR [rip+0x24090]        # 0x14004b020
   140026f90:	xor    rax,rsp
   140026f93:	mov    QWORD PTR [rbp-0x8],rax
   140026f97:	mov    r14,rcx
   140026f9a:	and    QWORD PTR [rbp-0x40],0x0
   140026f9f:	and    QWORD PTR [rbp-0x48],0x0
   140026fa4:	mov    rdi,QWORD PTR [rcx+0x50]
   140026fa8:	mov    rax,QWORD PTR [rdi]
   140026fab:	mov    rbx,QWORD PTR [rax+0x28]
   140026faf:	mov    rcx,rbx
   140026fb2:	call   QWORD PTR [rip+0xb6f0]        # 0x1400326a8
   140026fb8:	lea    rdx,[rbp-0x48]
   140026fbc:	mov    rcx,rdi
   140026fbf:	call   rbx
   140026fc1:	mov    ebx,eax
   140026fc3:	test   eax,eax
   140026fc5:	jns    0x140027008
   140026fc7:	test   BYTE PTR [rip+0x276be],0x2        # 0x14004e68c
   140026fce:	je     0x140026fec
   140026fd0:	mov    edx,0x1e
   140026fd5:	mov    DWORD PTR [rsp+0x20],eax
   140026fd9:	lea    r8,[rip+0x160a8]        # 0x14003d088
   140026fe0:	mov    rcx,QWORD PTR [rip+0x27699]        # 0x14004e680
   140026fe7:	call   0x140024690
   140026fec:	mov    edx,ebx
   140026fee:	lea    rcx,[rbp-0x30]
   140026ff2:	call   0x140002064
   140026ff7:	lea    rdx,[rip+0x2218a]        # 0x140049188
   140026ffe:	lea    rcx,[rbp-0x30]
   140027002:	call   0x14002e2da
   140027007:	int3   
   140027008:	mov    rsi,QWORD PTR [rbp-0x48]
   14002700c:	and    QWORD PTR [rbp-0x48],0x0
   140027011:	mov    QWORD PTR [rbp-0x40],rsi
   140027015:	xor    ecx,ecx
   140027017:	call   QWORD PTR [rip+0xb333]        # 0x140032350
   14002701d:	test   BYTE PTR [rip+0x27668],0x4        # 0x14004e68c
   140027024:	je     0x140027043
   140027026:	mov    edx,0x1f
   14002702b:	mov    QWORD PTR [rsp+0x20],rsi
   140027030:	lea    r8,[rip+0x16051]        # 0x14003d088
   140027037:	mov    rcx,QWORD PTR [rip+0x27642]        # 0x14004e680
   14002703e:	call   0x140025d58
   140027043:	mov    rdi,QWORD PTR [r14+0x40]
   140027047:	mov    rax,QWORD PTR [rdi]
   14002704a:	mov    rbx,QWORD PTR [rax+0x18]
   14002704e:	mov    rcx,rbx
   140027051:	call   QWORD PTR [rip+0xb651]        # 0x1400326a8
   140027057:	lea    r8,[rbp-0x50]
   14002705b:	mov    rdx,rsi
   14002705e:	mov    rcx,rdi
   140027061:	call   rbx
   140027063:	mov    ebx,eax
   140027065:	cmp    DWORD PTR [r14+0x58],0x0
   14002706a:	jne    0x140027100
   140027070:	test   eax,eax
   140027072:	jns    0x1400270b5
   140027074:	test   BYTE PTR [rip+0x27611],0x2        # 0x14004e68c
   14002707b:	je     0x140027099
   14002707d:	mov    edx,0x20
   140027082:	mov    DWORD PTR [rsp+0x20],eax
   140027086:	lea    r8,[rip+0x15ffb]        # 0x14003d088
   14002708d:	mov    rcx,QWORD PTR [rip+0x275ec]        # 0x14004e680
   140027094:	call   0x140024690
   140027099:	mov    edx,ebx
   14002709b:	lea    rcx,[rbp-0x30]
   14002709f:	call   0x140002064
   1400270a4:	lea    rdx,[rip+0x220dd]        # 0x140049188
   1400270ab:	lea    rcx,[rbp-0x30]
   1400270af:	call   0x14002e2da
   1400270b4:	int3   
   1400270b5:	mov    eax,DWORD PTR [rbp-0x50]
   1400270b8:	test   eax,eax
   1400270ba:	je     0x140027100
   1400270bc:	test   BYTE PTR [rip+0x275c9],0x2        # 0x14004e68c
   1400270c3:	je     0x1400270e1
   1400270c5:	mov    edx,0x21
   1400270ca:	mov    DWORD PTR [rsp+0x20],eax
   1400270ce:	lea    r8,[rip+0x15fb3]        # 0x14003d088
   1400270d5:	mov    rcx,QWORD PTR [rip+0x275a4]        # 0x14004e680
   1400270dc:	call   0x140024690
   1400270e1:	mov    edx,0x80004005
   1400270e6:	lea    rcx,[rbp-0x30]
   1400270ea:	call   0x140002064
   1400270ef:	lea    rdx,[rip+0x22092]        # 0x140049188
   1400270f6:	lea    rcx,[rbp-0x30]
   1400270fa:	call   0x14002e2da
   1400270ff:	nop
   140027100:	mov    rcx,rsi
   140027103:	call   QWORD PTR [rip+0xb247]        # 0x140032350
   140027109:	mov    rcx,QWORD PTR [rbp-0x8]
   14002710d:	xor    rcx,rsp
   140027110:	call   0x14002dd00
   140027115:	lea    r11,[rsp+0x80]
   14002711d:	mov    rbx,QWORD PTR [r11+0x28]
   140027121:	mov    rsi,QWORD PTR [r11+0x30]
   140027125:	mov    rsp,r11
   140027128:	pop    r14
   14002712a:	pop    rdi
   14002712b:	pop    rbp
   14002712c:	ret    
   14002712d:	int3   
   14002712e:	int3   
   14002712f:	int3   
   140027130:	int3   
   140027131:	int3   
   140027132:	int3   
   140027133:	int3   
   140027134:	mov    rax,rsp
   140027137:	push   rdi
   140027138:	sub    rsp,0x70
   14002713c:	mov    QWORD PTR [rax-0x40],0xfffffffffffffffe
   140027144:	mov    QWORD PTR [rax+0x8],rbx
   140027148:	mov    rax,QWORD PTR [rip+0x23ed1]        # 0x14004b020
   14002714f:	xor    rax,rsp
   140027152:	mov    QWORD PTR [rsp+0x68],rax
   140027157:	mov    rdi,r8
   14002715a:	mov    r9d,edx
   14002715d:	lea    r8,[rip+0x11748]        # 0x1400388ac
   140027164:	mov    edx,0x32
   140027169:	lea    rcx,[rip+0x29140]        # 0x1400502b0
   140027170:	call   0x140024068
   140027175:	mov    ebx,eax
   140027177:	test   eax,eax
   140027179:	jns    0x1400271be
   14002717b:	test   BYTE PTR [rip+0x2750a],0x2        # 0x14004e68c
   140027182:	je     0x1400271a0
   140027184:	mov    edx,0x22
   140027189:	mov    DWORD PTR [rsp+0x20],eax
   14002718d:	lea    r8,[rip+0x15ef4]        # 0x14003d088
   140027194:	mov    rcx,QWORD PTR [rip+0x274e5]        # 0x14004e680
   14002719b:	call   0x140024690
   1400271a0:	mov    edx,ebx
   1400271a2:	lea    rcx,[rsp+0x40]
   1400271a7:	call   0x140002064
   1400271ac:	lea    rdx,[rip+0x21fd5]        # 0x140049188
   1400271b3:	lea    rcx,[rsp+0x40]
   1400271b8:	call   0x14002e2da
   1400271bd:	int3   
   1400271be:	mov    ecx,0x18
   1400271c3:	call   0x140023f10
   1400271c8:	mov    rbx,rax
   1400271cb:	mov    QWORD PTR [rsp+0x30],rax
   1400271d0:	and    QWORD PTR [rax+0x8],0x0
   1400271d5:	mov    DWORD PTR [rax+0x10],0x1
   1400271dc:	lea    rcx,[rip+0x290cd]        # 0x1400502b0
   1400271e3:	call   QWORD PTR [rip+0xb177]        # 0x140032360
   1400271e9:	mov    QWORD PTR [rbx],rax
   1400271ec:	test   rax,rax
   1400271ef:	jne    0x1400271f7
   1400271f1:	call   0x14000203c
   1400271f6:	nop
   1400271f7:	mov    QWORD PTR [rsp+0x30],rbx
   1400271fc:	mov    r8,rdi
   1400271ff:	mov    rdx,rax
   140027202:	lea    rcx,[rip+0x15e0f]        # 0x14003d018
   140027209:	call   0x14002723c
   14002720e:	nop
   14002720f:	lea    rcx,[rsp+0x30]
   140027214:	call   0x14000de2c
   140027219:	mov    rcx,QWORD PTR [rsp+0x68]
   14002721e:	xor    rcx,rsp
   140027221:	call   0x14002dd00
   140027226:	mov    rbx,QWORD PTR [rsp+0x80]
   14002722e:	add    rsp,0x70
   140027232:	pop    rdi
   140027233:	ret    
   140027234:	int3   
   140027235:	int3   
   140027236:	int3   
   140027237:	int3   
   140027238:	int3   
   140027239:	int3   
   14002723a:	int3   
   14002723b:	int3   
   14002723c:	rex push rbx
   14002723e:	push   rsi
   14002723f:	push   rdi
   140027240:	sub    rsp,0x70
   140027244:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   14002724d:	mov    rax,QWORD PTR [rip+0x23dcc]        # 0x14004b020
   140027254:	xor    rax,rsp
   140027257:	mov    QWORD PTR [rsp+0x68],rax
   14002725c:	mov    rdi,r8
   14002725f:	mov    rsi,rdx
   140027262:	mov    rbx,rcx
   140027265:	lea    rcx,[rip+0x15e0c]        # 0x14003d078
   14002726c:	call   0x140027a8c
   140027271:	mov    QWORD PTR [rsp+0x30],rax
   140027276:	test   rax,rax
   140027279:	jne    0x140027286
   14002727b:	mov    ecx,0x8007000e
   140027280:	call   0x140005d50
   140027285:	nop
   140027286:	mov    rdx,rbx
   140027289:	lea    rcx,[rsp+0x30]
   14002728e:	call   0x1400279b4
   140027293:	mov    ebx,eax
   140027295:	test   eax,eax
   140027297:	jns    0x1400272dc
   140027299:	test   BYTE PTR [rip+0x273ec],0x2        # 0x14004e68c
   1400272a0:	je     0x1400272be
   1400272a2:	mov    edx,0x23
   1400272a7:	mov    DWORD PTR [rsp+0x20],eax
   1400272ab:	lea    r8,[rip+0x15dd6]        # 0x14003d088
   1400272b2:	mov    rcx,QWORD PTR [rip+0x273c7]        # 0x14004e680
   1400272b9:	call   0x140024690
   1400272be:	mov    edx,ebx
   1400272c0:	lea    rcx,[rsp+0x40]
   1400272c5:	call   0x140002064
   1400272ca:	lea    rdx,[rip+0x21eb7]        # 0x140049188
   1400272d1:	lea    rcx,[rsp+0x40]
   1400272d6:	call   0x14002e2da
   1400272db:	int3   
   1400272dc:	lea    rdx,[rip+0x15da1]        # 0x14003d084
   1400272e3:	lea    rcx,[rsp+0x30]
   1400272e8:	call   0x1400279b4
   1400272ed:	mov    ebx,eax
   1400272ef:	test   eax,eax
   1400272f1:	jns    0x140027336
   1400272f3:	test   BYTE PTR [rip+0x27392],0x2        # 0x14004e68c
   1400272fa:	je     0x140027318
   1400272fc:	mov    edx,0x24
   140027301:	mov    DWORD PTR [rsp+0x20],eax
   140027305:	lea    r8,[rip+0x15d7c]        # 0x14003d088
   14002730c:	mov    rcx,QWORD PTR [rip+0x2736d]        # 0x14004e680
   140027313:	call   0x140024690
   140027318:	mov    edx,ebx
   14002731a:	lea    rcx,[rsp+0x40]
   14002731f:	call   0x140002064
   140027324:	lea    rdx,[rip+0x21e5d]        # 0x140049188
   14002732b:	lea    rcx,[rsp+0x40]
   140027330:	call   0x14002e2da
   140027335:	int3   
   140027336:	mov    rdx,rsi
   140027339:	lea    rcx,[rsp+0x30]
   14002733e:	call   0x1400113d0
   140027343:	mov    ebx,eax
   140027345:	test   eax,eax
   140027347:	jns    0x14002738c
   140027349:	test   BYTE PTR [rip+0x2733c],0x2        # 0x14004e68c
   140027350:	je     0x14002736e
   140027352:	mov    edx,0x25
   140027357:	mov    DWORD PTR [rsp+0x20],eax
   14002735b:	lea    r8,[rip+0x15d26]        # 0x14003d088
   140027362:	mov    rcx,QWORD PTR [rip+0x27317]        # 0x14004e680
   140027369:	call   0x140024690
   14002736e:	mov    edx,ebx
   140027370:	lea    rcx,[rsp+0x40]
   140027375:	call   0x140002064
   14002737a:	lea    rdx,[rip+0x21e07]        # 0x140049188
   140027381:	lea    rcx,[rsp+0x40]
   140027386:	call   0x14002e2da
   14002738b:	int3   
   14002738c:	mov    rax,QWORD PTR [rsp+0x30]
   140027391:	mov    QWORD PTR [rdi],rax
   140027394:	xor    ecx,ecx
   140027396:	call   QWORD PTR [rip+0xafb4]        # 0x140032350
   14002739c:	mov    rcx,QWORD PTR [rsp+0x68]
   1400273a1:	xor    rcx,rsp
   1400273a4:	call   0x14002dd00
   1400273a9:	add    rsp,0x70
   1400273ad:	pop    rdi
   1400273ae:	pop    rsi
   1400273af:	pop    rbx
   1400273b0:	ret    
   1400273b1:	int3   
   1400273b2:	int3   
   1400273b3:	int3   
   1400273b4:	int3   
   1400273b5:	int3   
   1400273b6:	int3   
   1400273b7:	int3   
   1400273b8:	mov    rax,rsp
   1400273bb:	mov    QWORD PTR [rax+0x10],rbx
   1400273bf:	mov    QWORD PTR [rax+0x18],r8
   1400273c3:	mov    QWORD PTR [rax+0x8],rcx
   1400273c7:	push   rbp
   1400273c8:	push   rdi
   1400273c9:	push   r12
   1400273cb:	push   r14
   1400273cd:	push   r15
   1400273cf:	mov    rbp,rsp
   1400273d2:	sub    rsp,0x60
   1400273d6:	or     QWORD PTR [rbp-0x8],0xffffffffffffffff
   1400273db:	mov    r14,rcx
   1400273de:	and    DWORD PTR [rax-0x60],0x0
   1400273e2:	lea    rcx,[rbp-0x8]
   1400273e6:	mov    r9d,0x1
   1400273ec:	mov    r8d,0x80000000
   1400273f2:	call   0x14002a57c
   1400273f7:	mov    r15d,eax
   1400273fa:	test   eax,eax
   1400273fc:	jns    0x14002741c
   1400273fe:	test   BYTE PTR [rip+0x27287],0x2        # 0x14004e68c
   140027405:	je     0x14002767e
   14002740b:	mov    ecx,0x26
   140027410:	mov    DWORD PTR [rbp+0x48],eax
   140027413:	movzx  r9d,cx
   140027417:	jmp    0x1400274b2
   14002741c:	mov    rcx,QWORD PTR [rbp-0x8]
   140027420:	lea    rdx,[rbp+0x48]
   140027424:	call   QWORD PTR [rip+0xadce]        # 0x1400321f8
   14002742a:	mov    edi,0x29
   14002742f:	test   eax,eax
   140027431:	jne    0x14002746b
   140027433:	call   0x14002b128
   140027438:	mov    r15d,eax
   14002743b:	mov    rcx,QWORD PTR [rip+0x23c36]        # 0x14004b078
   140027442:	lea    rax,[rip+0x23c2f]        # 0x14004b078
   140027449:	cmp    rcx,rax
   14002744c:	je     0x14002746e
   14002744e:	test   BYTE PTR [rcx+0x1c],0x1
   140027452:	je     0x14002746e
   140027454:	mov    rcx,QWORD PTR [rcx+0x10]
   140027458:	lea    r8,[rip+0x15f61]        # 0x14003d3c0
   14002745f:	mov    edx,edi
   140027461:	mov    r9d,r15d
   140027464:	call   0x140001f70
   140027469:	jmp    0x14002746e
   14002746b:	xor    r15d,r15d
   14002746e:	mov    rax,QWORD PTR [rbp+0x48]
   140027472:	test   r15d,r15d
   140027475:	jns    0x14002748f
   140027477:	test   BYTE PTR [rip+0x2720e],0x2        # 0x14004e68c
   14002747e:	je     0x14002767e
   140027484:	mov    ecx,0x27
   140027489:	movzx  r9d,cx
   14002748d:	jmp    0x1400274ae
   14002748f:	cmp    rax,0x1388000
   140027495:	jbe    0x1400274f8
   140027497:	test   BYTE PTR [rip+0x271ee],0x2        # 0x14004e68c
   14002749e:	mov    r15d,0x800700df
   1400274a4:	je     0x14002767e
   1400274aa:	movzx  r9d,di
   1400274ae:	mov    DWORD PTR [rbp+0x48],r15d
   1400274b2:	and    QWORD PTR [rsp+0x40],0x0
   1400274b8:	lea    rax,[rbp+0x48]
   1400274bc:	mov    rcx,QWORD PTR [rip+0x271bd]        # 0x14004e680
   1400274c3:	lea    r12,[rip+0x118f2]        # 0x140038dbc
   1400274ca:	mov    ebx,0x4
   1400274cf:	lea    r8,[rip+0x15bb2]        # 0x14003d088
   1400274d6:	mov    QWORD PTR [rsp+0x38],rbx
   1400274db:	mov    QWORD PTR [rsp+0x30],rax
   1400274e0:	mov    QWORD PTR [rsp+0x28],rbx
   1400274e5:	lea    edx,[rbx+0x27]
   1400274e8:	mov    QWORD PTR [rsp+0x20],r12
   1400274ed:	call   QWORD PTR [rip+0xab2d]        # 0x140032020
   1400274f3:	jmp    0x14002767e
   1400274f8:	mov    r12d,0x4000
   1400274fe:	mov    ecx,r12d
   140027501:	call   QWORD PTR [rip+0xb0c9]        # 0x1400325d0
   140027507:	mov    rdi,rax
   14002750a:	test   rax,rax
   14002750d:	jne    0x14002752a
   14002750f:	test   BYTE PTR [rip+0x27176],0x2        # 0x14004e68c
   140027516:	mov    r15d,0x8007000e
   14002751c:	je     0x14002767e
   140027522:	lea    ecx,[rax+0x2a]
   140027525:	jmp    0x140027489
   14002752a:	and    QWORD PTR [rbp-0x10],0x0
   14002752f:	call   QWORD PTR [rip+0xaed3]        # 0x140032408
   140027535:	mov    rbx,QWORD PTR [rax+0x40]
   140027539:	mov    rcx,rbx
   14002753c:	call   QWORD PTR [rip+0xb166]        # 0x1400326a8
   140027542:	mov    edx,0x3
   140027547:	lea    rcx,[rbp-0x10]
   14002754b:	call   rbx
   14002754d:	mov    r15d,eax
   140027550:	test   eax,eax
   140027552:	jns    0x140027570
   140027554:	test   BYTE PTR [rip+0x27131],0x2        # 0x14004e68c
   14002755b:	je     0x140027656
   140027561:	mov    r14d,0x2b
   140027567:	movzx  r9d,r14w
   14002756b:	jmp    0x140027717
   140027570:	cmp    DWORD PTR [r14+0x58],0x0
   140027575:	jne    0x14002760b
   14002757b:	mov    r8,r12
   14002757e:	mov    QWORD PTR [rbp+0x48],r12
   140027582:	xor    edx,edx
   140027584:	mov    rcx,rdi
   140027587:	call   0x14002e2ce
   14002758c:	mov    rcx,QWORD PTR [rbp-0x8]
   140027590:	lea    rdx,[rbp+0x48]
   140027594:	mov    r8,rdi
   140027597:	call   0x14002a648
   14002759c:	lea    r12,[rip+0x11819]        # 0x140038dbc
   1400275a3:	mov    r15d,eax
   1400275a6:	mov    r14d,0x2b
   1400275ac:	cmp    eax,0x80070026
   1400275b1:	je     0x140027760
   1400275b7:	test   eax,eax
   1400275b9:	js     0x140027701
   1400275bf:	cmp    QWORD PTR [rbp+0x48],0x0
   1400275c4:	je     0x1400276bd
   1400275ca:	mov    r15,QWORD PTR [rbp+0x30]
   1400275ce:	cmp    DWORD PTR [r15+0x58],0x0
   1400275d3:	jne    0x1400276a7
   1400275d9:	mov    rbx,QWORD PTR [rbp-0x10]
   1400275dd:	mov    rax,QWORD PTR [rbx]
   1400275e0:	mov    r14,QWORD PTR [rax+0x20]
   1400275e4:	mov    rcx,r14
   1400275e7:	call   QWORD PTR [rip+0xb0bb]        # 0x1400326a8
   1400275ed:	mov    rdx,QWORD PTR [rbp+0x48]
   1400275f1:	mov    r8,rdi
   1400275f4:	mov    rcx,rbx
   1400275f7:	call   r14
   1400275fa:	cmp    DWORD PTR [r15+0x58],0x0
   1400275ff:	mov    r12d,0x4000
   140027605:	je     0x14002757b
   14002760b:	test   BYTE PTR [rip+0x2707a],0x2        # 0x14004e68c
   140027612:	je     0x140027650
   140027614:	mov    eax,0x2c
   140027619:	lea    edx,[rax-0x1]
   14002761c:	mov    ebx,0x4
   140027621:	lea    r12,[rip+0x11794]        # 0x140038dbc
   140027628:	and    QWORD PTR [rsp+0x30],0x0
   14002762e:	lea    r8,[rip+0x15a53]        # 0x14003d088
   140027635:	mov    rcx,QWORD PTR [rip+0x27044]        # 0x14004e680
   14002763c:	mov    QWORD PTR [rsp+0x28],rbx
   140027641:	movzx  r9d,ax
   140027645:	mov    QWORD PTR [rsp+0x20],r12
   14002764a:	call   QWORD PTR [rip+0xa9d0]        # 0x140032020
   140027650:	mov    r15d,0x80004004
   140027656:	mov    rbx,QWORD PTR [rbp-0x10]
   14002765a:	test   rbx,rbx
   14002765d:	je     0x140027675
   14002765f:	mov    rax,QWORD PTR [rbx]
   140027662:	mov    r14,QWORD PTR [rax+0x8]
   140027666:	mov    rcx,r14
   140027669:	call   QWORD PTR [rip+0xb039]        # 0x1400326a8
   14002766f:	mov    rcx,rbx
   140027672:	call   r14
   140027675:	mov    rcx,rdi
   140027678:	call   QWORD PTR [rip+0xaf4a]        # 0x1400325c8
   14002767e:	cmp    QWORD PTR [rbp-0x8],0xffffffffffffffff
   140027683:	je     0x14002768f
   140027685:	mov    rcx,QWORD PTR [rbp-0x8]
   140027689:	call   QWORD PTR [rip+0xaac9]        # 0x140032158
   14002768f:	mov    eax,r15d
   140027692:	mov    rbx,QWORD PTR [rsp+0x98]
   14002769a:	add    rsp,0x60
   14002769e:	pop    r15
   1400276a0:	pop    r14
   1400276a2:	pop    r12
   1400276a4:	pop    rdi
   1400276a5:	pop    rbp
   1400276a6:	ret    
   1400276a7:	test   BYTE PTR [rip+0x26fde],0x2        # 0x14004e68c
   1400276ae:	je     0x140027650
   1400276b0:	mov    eax,0x30
   1400276b5:	mov    edx,r14d
   1400276b8:	jmp    0x14002761c
   1400276bd:	mov    ebx,0x4
   1400276c2:	test   BYTE PTR [rip+0x26fc4],bl        # 0x14004e68c
   1400276c8:	je     0x14002779e
   1400276ce:	and    QWORD PTR [rsp+0x30],0x0
   1400276d4:	lea    eax,[rbx+0x2b]
   1400276d7:	mov    rcx,QWORD PTR [rip+0x26fa2]        # 0x14004e680
   1400276de:	lea    r8,[rip+0x159a3]        # 0x14003d088
   1400276e5:	movzx  r9d,ax
   1400276e9:	mov    edx,r14d
   1400276ec:	mov    QWORD PTR [rsp+0x28],rbx
   1400276f1:	mov    QWORD PTR [rsp+0x20],r12
   1400276f6:	call   QWORD PTR [rip+0xa924]        # 0x140032020
   1400276fc:	jmp    0x14002779e
   140027701:	test   BYTE PTR [rip+0x26f84],0x2        # 0x14004e68c
   140027708:	je     0x140027656
   14002770e:	mov    ecx,0x2e
   140027713:	movzx  r9d,cx
   140027717:	and    QWORD PTR [rsp+0x40],0x0
   14002771d:	lea    r12,[rip+0x11698]        # 0x140038dbc
   140027724:	mov    rcx,QWORD PTR [rip+0x26f55]        # 0x14004e680
   14002772b:	lea    r8,[rip+0x15956]        # 0x14003d088
   140027732:	mov    ebx,0x4
   140027737:	mov    DWORD PTR [rbp+0x48],eax
   14002773a:	mov    QWORD PTR [rsp+0x38],rbx
   14002773f:	lea    rax,[rbp+0x48]
   140027743:	mov    QWORD PTR [rsp+0x30],rax
   140027748:	mov    edx,r14d
   14002774b:	mov    QWORD PTR [rsp+0x28],rbx
   140027750:	mov    QWORD PTR [rsp+0x20],r12
   140027755:	call   QWORD PTR [rip+0xa8c5]        # 0x140032020
   14002775b:	jmp    0x140027656
   140027760:	mov    ebx,0x4
   140027765:	test   BYTE PTR [rip+0x26f21],bl        # 0x14004e68c
   14002776b:	je     0x14002779b
   14002776d:	and    QWORD PTR [rsp+0x30],0x0
   140027773:	lea    eax,[rbx+0x29]
   140027776:	mov    rcx,QWORD PTR [rip+0x26f03]        # 0x14004e680
   14002777d:	lea    r8,[rip+0x15904]        # 0x14003d088
   140027784:	movzx  r9d,ax
   140027788:	mov    edx,r14d
   14002778b:	mov    QWORD PTR [rsp+0x28],rbx
   140027790:	mov    QWORD PTR [rsp+0x20],r12
   140027795:	call   QWORD PTR [rip+0xa885]        # 0x140032020
   14002779b:	xor    r15d,r15d
   14002779e:	mov    rax,QWORD PTR [rbp+0x30]
   1400277a2:	cmp    DWORD PTR [rax+0x58],0x0
   1400277a6:	je     0x1400277c2
   1400277a8:	test   BYTE PTR [rip+0x26edd],0x2        # 0x14004e68c
   1400277af:	je     0x140027650
   1400277b5:	mov    eax,0x31
   1400277ba:	mov    edx,r14d
   1400277bd:	jmp    0x140027628
   1400277c2:	mov    rbx,QWORD PTR [rbp-0x10]
   1400277c6:	mov    rax,QWORD PTR [rbx]
   1400277c9:	mov    r14,QWORD PTR [rax+0x28]
   1400277cd:	mov    rcx,r14
   1400277d0:	call   QWORD PTR [rip+0xaed2]        # 0x1400326a8
   1400277d6:	mov    rcx,rbx
   1400277d9:	call   r14
   1400277dc:	mov    r8,QWORD PTR [rbp+0x40]
   1400277e0:	lea    rdx,[rbp+0x48]
   1400277e4:	mov    rcx,QWORD PTR [rbp-0x10]
   1400277e8:	mov    QWORD PTR [rbp+0x48],0x14
   1400277f0:	call   0x14002d05c
   1400277f5:	jmp    0x140027656
   1400277fa:	int3   
   1400277fb:	int3   
   1400277fc:	int3   
   1400277fd:	int3   
   1400277fe:	int3   
   1400277ff:	int3   
   140027800:	mov    QWORD PTR [rsp+0x8],rbx
   140027805:	mov    QWORD PTR [rsp+0x10],rsi
   14002780a:	push   rdi
   14002780b:	sub    rsp,0x20
   14002780f:	mov    rsi,rcx
   140027812:	or     edi,0xffffffff
   140027815:	lock xadd DWORD PTR [rcx+0x8],edi
   14002781a:	sub    edi,0x1
   14002781d:	jne    0x140027852
   14002781f:	mov    rax,QWORD PTR [rip+0x287b2]        # 0x14004ffd8
   140027826:	lock inc DWORD PTR [rax+0xc]
   14002782a:	test   rcx,rcx
   14002782d:	je     0x140027847
   14002782f:	mov    rcx,QWORD PTR [rcx]
   140027832:	mov    rbx,QWORD PTR [rcx+0x18]
   140027836:	mov    rcx,rbx
   140027839:	call   QWORD PTR [rip+0xae69]        # 0x1400326a8
   14002783f:	lea    edx,[rdi+0x1]
   140027842:	mov    rcx,rsi
   140027845:	call   rbx
   140027847:	mov    rcx,QWORD PTR [rip+0x2878a]        # 0x14004ffd8
   14002784e:	lock dec DWORD PTR [rcx+0xc]
   140027852:	mov    rbx,QWORD PTR [rsp+0x30]
   140027857:	mov    eax,edi
   140027859:	mov    rsi,QWORD PTR [rsp+0x38]
   14002785e:	add    rsp,0x20
   140027862:	pop    rdi
   140027863:	ret    
   140027864:	int3   
   140027865:	int3   
   140027866:	int3   
   140027867:	int3   
   140027868:	int3   
   140027869:	int3   
   14002786a:	int3   
   14002786b:	int3   
   14002786c:	int3   
   14002786d:	int3   
   14002786e:	int3   
   14002786f:	int3   
   140027870:	mov    QWORD PTR [rsp+0x8],rbx
   140027875:	push   rdi
   140027876:	sub    rsp,0x20
   14002787a:	lea    rax,[rip+0xd3df]        # 0x140034c60
   140027881:	mov    DWORD PTR [rcx+0x8],0xc0000001
   140027888:	mov    QWORD PTR [rcx],rax
   14002788b:	mov    ebx,edx
   14002788d:	mov    rax,QWORD PTR [rip+0x28744]        # 0x14004ffd8
   140027894:	mov    rdi,rcx
   140027897:	lock dec DWORD PTR [rax+0xc]
   14002789b:	call   0x140026598
   1400278a0:	test   bl,0x1
   1400278a3:	je     0x1400278ae
   1400278a5:	mov    rcx,rdi
   1400278a8:	call   QWORD PTR [rip+0xad1a]        # 0x1400325c8
   1400278ae:	mov    rax,rdi
   1400278b1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400278b6:	add    rsp,0x20
   1400278ba:	pop    rdi
   1400278bb:	ret    
   1400278bc:	int3   
   1400278bd:	int3   
   1400278be:	int3   
   1400278bf:	int3   
   1400278c0:	int3   
   1400278c1:	int3   
   1400278c2:	int3   
   1400278c3:	int3   
   1400278c4:	mov    QWORD PTR [rsp+0x8],rcx
   1400278c9:	push   rbx
   1400278ca:	push   rsi
   1400278cb:	push   rdi
   1400278cc:	push   r14
   1400278ce:	push   r15
   1400278d0:	sub    rsp,0x30
   1400278d4:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400278dd:	mov    r15,rcx
   1400278e0:	xor    edi,edi
   1400278e2:	test   rcx,rcx
   1400278e5:	jne    0x1400278f1
   1400278e7:	mov    eax,0x80004003
   1400278ec:	jmp    0x14002799f
   1400278f1:	mov    QWORD PTR [rcx],rdi
   1400278f4:	mov    esi,0x8007000e
   1400278f9:	mov    DWORD PTR [rsp+0x68],esi
   1400278fd:	mov    QWORD PTR [rsp+0x70],rdi
   140027902:	mov    ecx,0x60
   140027907:	call   0x140023f10
   14002790c:	mov    r14,rax
   14002790f:	mov    DWORD PTR [rax+0x8],edi
   140027912:	xor    edx,edx
   140027914:	lea    r8d,[rdx+0x28]
   140027918:	lea    rcx,[rax+0x10]
   14002791c:	call   0x14002e2ce
   140027921:	mov    BYTE PTR [r14+0x38],dil
   140027925:	mov    QWORD PTR [r14+0x40],rdi
   140027929:	mov    QWORD PTR [r14+0x50],rdi
   14002792d:	mov    DWORD PTR [r14+0x58],edi
   140027931:	lea    rax,[rip+0xd328]        # 0x140034c60
   140027938:	mov    QWORD PTR [r14],rax
   14002793b:	mov    rax,QWORD PTR [rip+0x28696]        # 0x14004ffd8
   140027942:	lock inc DWORD PTR [rax+0xc]
   140027946:	mov    QWORD PTR [rsp+0x70],r14
   14002794b:	jmp    0x14002795d
   14002794d:	xor    edi,edi
   14002794f:	mov    r15,QWORD PTR [rsp+0x60]
   140027954:	mov    esi,DWORD PTR [rsp+0x68]
   140027958:	mov    r14,QWORD PTR [rsp+0x70]
   14002795d:	test   r14,r14
   140027960:	je     0x14002799a
   140027962:	lea    rcx,[r14+0x10]
   140027966:	call   0x140004ee4
   14002796b:	mov    esi,eax
   14002796d:	test   eax,eax
   14002796f:	js     0x140027976
   140027971:	mov    BYTE PTR [r14+0x38],0x1
   140027976:	cmovns esi,edi
   140027979:	test   esi,esi
   14002797b:	je     0x14002799a
   14002797d:	mov    r8,QWORD PTR [r14]
   140027980:	mov    rbx,QWORD PTR [r8+0x18]
   140027984:	mov    rcx,rbx
   140027987:	call   QWORD PTR [rip+0xad1b]        # 0x1400326a8
   14002798d:	mov    edx,0x1
   140027992:	mov    rcx,r14
   140027995:	call   rbx
   140027997:	mov    r14,rdi
   14002799a:	mov    QWORD PTR [r15],r14
   14002799d:	mov    eax,esi
   14002799f:	add    rsp,0x30
   1400279a3:	pop    r15
   1400279a5:	pop    r14
   1400279a7:	pop    rdi
   1400279a8:	pop    rsi
   1400279a9:	pop    rbx
   1400279aa:	ret    
   1400279ab:	int3   
   1400279ac:	int3   
   1400279ad:	int3   
   1400279ae:	int3   
   1400279af:	int3   
   1400279b0:	int3   
   1400279b1:	int3   
   1400279b2:	int3   
   1400279b3:	int3   
   1400279b4:	mov    QWORD PTR [rsp+0x8],rcx
   1400279b9:	push   rsi
   1400279ba:	push   rdi
   1400279bb:	push   r14
   1400279bd:	sub    rsp,0x30
   1400279c1:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400279ca:	mov    QWORD PTR [rsp+0x60],rbx
   1400279cf:	mov    rbx,rdx
   1400279d2:	mov    rsi,rcx
   1400279d5:	xor    edi,edi
   1400279d7:	test   rdx,rdx
   1400279da:	jne    0x1400279e3
   1400279dc:	xor    eax,eax
   1400279de:	jmp    0x140027a76
   1400279e3:	xor    ecx,ecx
   1400279e5:	call   QWORD PTR [rip+0xa965]        # 0x140032350
   1400279eb:	mov    rcx,rbx
   1400279ee:	call   0x140027a8c
   1400279f3:	mov    rbx,rax
   1400279f6:	mov    QWORD PTR [rsp+0x58],rax
   1400279fb:	test   rax,rax
   1400279fe:	jne    0x140027a0b
   140027a00:	mov    ecx,0x8007000e
   140027a05:	call   0x140005d50
   140027a0a:	nop
   140027a0b:	jmp    0x140027a19
   140027a0d:	xor    edi,edi
   140027a0f:	mov    rsi,QWORD PTR [rsp+0x50]
   140027a14:	mov    rbx,QWORD PTR [rsp+0x58]
   140027a19:	test   rbx,rbx
   140027a1c:	jne    0x140027a2d
   140027a1e:	xor    ecx,ecx
   140027a20:	call   QWORD PTR [rip+0xa92a]        # 0x140032350
   140027a26:	mov    eax,0x8007000e
   140027a2b:	jmp    0x140027a76
   140027a2d:	mov    rcx,rbx
   140027a30:	call   QWORD PTR [rip+0xa93a]        # 0x140032370
   140027a36:	test   eax,eax
   140027a38:	je     0x140027a6b
   140027a3a:	mov    QWORD PTR [rsp+0x58],rdi
   140027a3f:	lea    r8,[rsp+0x58]
   140027a44:	mov    rdx,rbx
   140027a47:	mov    rcx,QWORD PTR [rsi]
   140027a4a:	call   QWORD PTR [rip+0xa930]        # 0x140032380
   140027a50:	mov    r14d,eax
   140027a53:	test   eax,eax
   140027a55:	js     0x140027a68
   140027a57:	mov    rcx,QWORD PTR [rsi]
   140027a5a:	call   QWORD PTR [rip+0xa8f0]        # 0x140032350
   140027a60:	mov    rcx,QWORD PTR [rsp+0x58]
   140027a65:	mov    QWORD PTR [rsi],rcx
   140027a68:	mov    edi,r14d
   140027a6b:	mov    rcx,rbx
   140027a6e:	call   QWORD PTR [rip+0xa8dc]        # 0x140032350
   140027a74:	mov    eax,edi
   140027a76:	mov    rbx,QWORD PTR [rsp+0x60]
   140027a7b:	add    rsp,0x30
   140027a7f:	pop    r14
   140027a81:	pop    rdi
   140027a82:	pop    rsi
   140027a83:	ret    
   140027a84:	int3   
   140027a85:	int3   
   140027a86:	int3   
   140027a87:	int3   
   140027a88:	int3   
   140027a89:	int3   
   140027a8a:	int3   
   140027a8b:	int3   
   140027a8c:	mov    rax,rsp
   140027a8f:	mov    QWORD PTR [rax+0x8],rbx
   140027a93:	mov    QWORD PTR [rax+0x10],rbp
   140027a97:	mov    QWORD PTR [rax+0x18],rsi
   140027a9b:	push   rdi
   140027a9c:	sub    rsp,0x30
   140027aa0:	xor    ebx,ebx
   140027aa2:	mov    rsi,rcx
   140027aa5:	test   rcx,rcx
   140027aa8:	je     0x140027b0a
   140027aaa:	mov    r8,rcx
   140027aad:	mov    DWORD PTR [rax-0x10],ebx
   140027ab0:	lea    ecx,[rbx+0x3]
   140027ab3:	mov    QWORD PTR [rax-0x18],rbx
   140027ab7:	or     r9d,0xffffffff
   140027abb:	xor    edx,edx
   140027abd:	call   QWORD PTR [rip+0xa64d]        # 0x140032110
   140027ac3:	xor    ecx,ecx
   140027ac5:	mov    ebp,eax
   140027ac7:	lea    edx,[rax-0x1]
   140027aca:	call   QWORD PTR [rip+0xa8a8]        # 0x140032378
   140027ad0:	mov    rdi,rax
   140027ad3:	test   rax,rax
   140027ad6:	je     0x140027b02
   140027ad8:	mov    DWORD PTR [rsp+0x28],ebp
   140027adc:	lea    ecx,[rbx+0x3]
   140027adf:	or     r9d,0xffffffff
   140027ae3:	mov    QWORD PTR [rsp+0x20],rax
   140027ae8:	mov    r8,rsi
   140027aeb:	xor    edx,edx
   140027aed:	call   QWORD PTR [rip+0xa61d]        # 0x140032110
   140027af3:	cmp    eax,ebp
   140027af5:	je     0x140027b02
   140027af7:	mov    rcx,rdi
   140027afa:	call   QWORD PTR [rip+0xa850]        # 0x140032350
   140027b00:	jmp    0x140027b05
   140027b02:	mov    rbx,rdi
   140027b05:	mov    rax,rbx
   140027b08:	jmp    0x140027b0c
   140027b0a:	xor    eax,eax
   140027b0c:	mov    rbx,QWORD PTR [rsp+0x40]
   140027b11:	mov    rbp,QWORD PTR [rsp+0x48]
   140027b16:	mov    rsi,QWORD PTR [rsp+0x50]
   140027b1b:	add    rsp,0x30
   140027b1f:	pop    rdi
   140027b20:	ret    
   140027b21:	int3   
   140027b22:	int3   
   140027b23:	int3   
   140027b24:	int3   
   140027b25:	int3   
   140027b26:	int3   
   140027b27:	int3   
   140027b28:	int3   
   140027b29:	int3   
   140027b2a:	int3   
   140027b2b:	int3   
   140027b2c:	int3   
   140027b2d:	int3   
   140027b2e:	int3   
   140027b2f:	int3   
   140027b30:	mov    QWORD PTR [rsp+0x8],rbx
   140027b35:	mov    QWORD PTR [rsp+0x10],rsi
   140027b3a:	push   rdi
   140027b3b:	sub    rsp,0x20
   140027b3f:	mov    rsi,rcx
   140027b42:	or     edi,0xffffffff
   140027b45:	lock xadd DWORD PTR [rcx+0x8],edi
   140027b4a:	sub    edi,0x1
   140027b4d:	jne    0x140027b6c
   140027b4f:	test   rcx,rcx
   140027b52:	je     0x140027b6c
   140027b54:	mov    rdx,QWORD PTR [rcx]
   140027b57:	mov    rbx,QWORD PTR [rdx+0x20]
   140027b5b:	mov    rcx,rbx
   140027b5e:	call   QWORD PTR [rip+0xab44]        # 0x1400326a8
   140027b64:	lea    edx,[rdi+0x1]
   140027b67:	mov    rcx,rsi
   140027b6a:	call   rbx
   140027b6c:	mov    rbx,QWORD PTR [rsp+0x30]
   140027b71:	mov    eax,edi
   140027b73:	mov    rsi,QWORD PTR [rsp+0x38]
   140027b78:	add    rsp,0x20
   140027b7c:	pop    rdi
   140027b7d:	ret    
   140027b7e:	int3   
   140027b7f:	int3   
   140027b80:	int3   
   140027b81:	int3   
   140027b82:	int3   
   140027b83:	int3   
   140027b84:	int3   
   140027b85:	int3   
   140027b86:	int3   
   140027b87:	int3   
   140027b88:	int3   
   140027b89:	int3   
   140027b8a:	int3   
   140027b8b:	int3   
   140027b8c:	int3   
   140027b8d:	int3   
   140027b8e:	int3   
   140027b8f:	int3   
   140027b90:	mov    QWORD PTR [rsp+0x8],rbx
   140027b95:	push   rdi
   140027b96:	sub    rsp,0x20
   140027b9a:	mov    ebx,edx
   140027b9c:	mov    rdi,rcx
   140027b9f:	call   0x140027bc8
   140027ba4:	test   bl,0x1
   140027ba7:	je     0x140027bb2
   140027ba9:	mov    rcx,rdi
   140027bac:	call   QWORD PTR [rip+0xaa16]        # 0x1400325c8
   140027bb2:	mov    rax,rdi
   140027bb5:	mov    rbx,QWORD PTR [rsp+0x30]
   140027bba:	add    rsp,0x20
   140027bbe:	pop    rdi
   140027bbf:	ret    
   140027bc0:	int3   
   140027bc1:	int3   
   140027bc2:	int3   
   140027bc3:	int3   
   140027bc4:	int3   
   140027bc5:	int3   
   140027bc6:	int3   
   140027bc7:	int3   
   140027bc8:	mov    QWORD PTR [rsp+0x8],rbx
   140027bcd:	mov    QWORD PTR [rsp+0x10],rsi
   140027bd2:	push   rdi
   140027bd3:	sub    rsp,0x20
   140027bd7:	lea    rax,[rip+0xd0d2]        # 0x140034cb0
   140027bde:	mov    rsi,rcx
   140027be1:	mov    QWORD PTR [rcx],rax
   140027be4:	mov    rdi,QWORD PTR [rcx+0x38]
   140027be8:	and    QWORD PTR [rcx+0x38],0x0
   140027bed:	test   rdi,rdi
   140027bf0:	je     0x140027c29
   140027bf2:	mov    eax,DWORD PTR [rdi+0x8]
   140027bf5:	cmp    eax,0x1
   140027bf8:	jne    0x140027c03
   140027bfa:	mov    DWORD PTR [rdi+0x8],0x0
   140027c01:	jmp    0x140027c10
   140027c03:	or     eax,0xffffffff
   140027c06:	lock xadd DWORD PTR [rdi+0x8],eax
   140027c0b:	sub    eax,0x1
   140027c0e:	jg     0x140027c29
   140027c10:	mov    rax,QWORD PTR [rdi]
   140027c13:	mov    rbx,QWORD PTR [rax]
   140027c16:	mov    rcx,rbx
   140027c19:	call   QWORD PTR [rip+0xaa89]        # 0x1400326a8
   140027c1f:	mov    edx,0x1
   140027c24:	mov    rcx,rdi
   140027c27:	call   rbx
   140027c29:	mov    rdi,QWORD PTR [rsi+0x38]
   140027c2d:	test   rdi,rdi
   140027c30:	je     0x140027c6e
   140027c32:	mov    eax,DWORD PTR [rdi+0x8]
   140027c35:	cmp    eax,0x1
   140027c38:	jne    0x140027c43
   140027c3a:	mov    DWORD PTR [rdi+0x8],0x0
   140027c41:	jmp    0x140027c50
   140027c43:	or     eax,0xffffffff
   140027c46:	lock xadd DWORD PTR [rdi+0x8],eax
   140027c4b:	sub    eax,0x1
   140027c4e:	jg     0x140027c6e
   140027c50:	test   rdi,rdi
   140027c53:	je     0x140027c6e
   140027c55:	mov    rax,QWORD PTR [rdi]
   140027c58:	mov    rbx,QWORD PTR [rax]
   140027c5b:	mov    rcx,rbx
   140027c5e:	call   QWORD PTR [rip+0xaa44]        # 0x1400326a8
   140027c64:	mov    edx,0x1
   140027c69:	mov    rcx,rdi
   140027c6c:	call   rbx
   140027c6e:	lea    rcx,[rsi+0x10]
   140027c72:	cmp    DWORD PTR [rcx+0xc],0xf12192e
   140027c79:	je     0x140027c81
   140027c7b:	call   QWORD PTR [rip+0xa5f7]        # 0x140032278
   140027c81:	mov    rbx,QWORD PTR [rsp+0x30]
   140027c86:	mov    rsi,QWORD PTR [rsp+0x38]
   140027c8b:	add    rsp,0x20
   140027c8f:	pop    rdi
   140027c90:	ret    
   140027c91:	int3   
   140027c92:	int3   
   140027c93:	int3   
   140027c94:	int3   
   140027c95:	int3   
   140027c96:	int3   
   140027c97:	int3   
   140027c98:	mov    QWORD PTR [rsp+0x10],rbx
   140027c9d:	mov    QWORD PTR [rsp+0x18],rbp
   140027ca2:	mov    QWORD PTR [rsp+0x20],rsi
   140027ca7:	push   rdi
   140027ca8:	sub    rsp,0x20
   140027cac:	and    DWORD PTR [rcx+0x1c],0x0
   140027cb0:	mov    rsi,rcx
   140027cb3:	add    rcx,0x10
   140027cb7:	xor    edx,edx
   140027cb9:	call   QWORD PTR [rip+0xa5b1]        # 0x140032270
   140027cbf:	mov    rdi,QWORD PTR [rsi+0x38]
   140027cc3:	test   rdi,rdi
   140027cc6:	je     0x140027d09
   140027cc8:	mov    eax,DWORD PTR [rdi+0x8]
   140027ccb:	cmp    eax,0x1
   140027cce:	jne    0x140027cd9
   140027cd0:	mov    DWORD PTR [rdi+0x8],0x0
   140027cd7:	jmp    0x140027ce6
   140027cd9:	or     eax,0xffffffff
   140027cdc:	lock xadd DWORD PTR [rdi+0x8],eax
   140027ce1:	sub    eax,0x1
   140027ce4:	jg     0x140027d04
   140027ce6:	test   rdi,rdi
   140027ce9:	je     0x140027d04
   140027ceb:	mov    rax,QWORD PTR [rdi]
   140027cee:	mov    rbx,QWORD PTR [rax]
   140027cf1:	mov    rcx,rbx
   140027cf4:	call   QWORD PTR [rip+0xa9ae]        # 0x1400326a8
   140027cfa:	mov    edx,0x1
   140027cff:	mov    rcx,rdi
   140027d02:	call   rbx
   140027d04:	and    QWORD PTR [rsi+0x38],0x0
   140027d09:	and    QWORD PTR [rsi+0x38],0x0
   140027d0e:	lea    rcx,[rsp+0x30]
   140027d13:	and    QWORD PTR [rsp+0x30],0x0
   140027d19:	call   0x140027f04
   140027d1e:	mov    ebp,eax
   140027d20:	test   eax,eax
   140027d22:	jns    0x140027d6c
   140027d24:	mov    rcx,QWORD PTR [rsp+0x30]
   140027d29:	test   rcx,rcx
   140027d2c:	je     0x140027d77
   140027d2e:	mov    edx,DWORD PTR [rcx+0x8]
   140027d31:	cmp    edx,0x1
   140027d34:	jne    0x140027d3f
   140027d36:	mov    DWORD PTR [rcx+0x8],0x0
   140027d3d:	jmp    0x140027d4c
   140027d3f:	or     eax,0xffffffff
   140027d42:	lock xadd DWORD PTR [rcx+0x8],eax
   140027d47:	sub    eax,0x1
   140027d4a:	jg     0x140027d77
   140027d4c:	mov    rbx,QWORD PTR [rsp+0x30]
   140027d51:	mov    rax,QWORD PTR [rbx]
   140027d54:	mov    rdi,QWORD PTR [rax]
   140027d57:	mov    rcx,rdi
   140027d5a:	call   QWORD PTR [rip+0xa948]        # 0x1400326a8
   140027d60:	mov    edx,0x1
   140027d65:	mov    rcx,rbx
   140027d68:	call   rdi
   140027d6a:	jmp    0x140027d77
   140027d6c:	mov    rax,QWORD PTR [rsp+0x30]
   140027d71:	xor    ebp,ebp
   140027d73:	mov    QWORD PTR [rsi+0x38],rax
   140027d77:	mov    rbx,QWORD PTR [rsp+0x38]
   140027d7c:	mov    eax,ebp
   140027d7e:	mov    rbp,QWORD PTR [rsp+0x40]
   140027d83:	mov    rsi,QWORD PTR [rsp+0x48]
   140027d88:	add    rsp,0x20
   140027d8c:	pop    rdi
   140027d8d:	ret    
   140027d8e:	int3   
   140027d8f:	int3   
   140027d90:	int3   
   140027d91:	int3   
   140027d92:	int3   
   140027d93:	int3   
   140027d94:	int3   
   140027d95:	int3   
   140027d96:	int3   
   140027d97:	int3   
   140027d98:	int3   
   140027d99:	int3   
   140027d9a:	int3   
   140027d9b:	int3   
   140027d9c:	int3   
   140027d9d:	int3   
   140027d9e:	int3   
   140027d9f:	int3   
   140027da0:	mov    QWORD PTR [rsp+0x8],rbx
   140027da5:	push   rbp
   140027da6:	push   rsi
   140027da7:	push   rdi
   140027da8:	mov    rbp,rsp
   140027dab:	sub    rsp,0x70
   140027daf:	mov    rax,QWORD PTR [rip+0x2326a]        # 0x14004b020
   140027db6:	xor    rax,rsp
   140027db9:	mov    QWORD PTR [rbp-0x10],rax
   140027dbd:	mov    rbx,r8
   140027dc0:	mov    rdi,rdx
   140027dc3:	test   r8,r8
   140027dc6:	je     0x140027dcf
   140027dc8:	mov    DWORD PTR [r8],0x2
   140027dcf:	lea    rsi,[rcx+0x10]
   140027dd3:	mov    rcx,rsi
   140027dd6:	call   QWORD PTR [rip+0xa32c]        # 0x140032108
   140027ddc:	mov    DWORD PTR [rbp-0x40],0xaab04a7c
   140027de3:	mov    rcx,rdi
   140027de6:	mov    DWORD PTR [rbp-0x3c],0x45d9ed82
   140027ded:	mov    DWORD PTR [rbp-0x38],0x6cafdcb4
   140027df4:	mov    DWORD PTR [rbp-0x34],0xbfdfb574
   140027dfb:	movaps xmm0,XMMWORD PTR [rbp-0x40]
   140027dff:	movdqa XMMWORD PTR [rbp-0x20],xmm0
   140027e04:	call   QWORD PTR [rip+0xa57e]        # 0x140032388
   140027e0a:	and    DWORD PTR [rbp-0x30],0x0
   140027e0e:	lea    rcx,[rbp-0x28]
   140027e12:	and    QWORD PTR [rbp-0x40],0x0
   140027e17:	lea    r9,[rbp-0x30]
   140027e1b:	and    QWORD PTR [rbp-0x28],0x0
   140027e20:	mov    r8,rdi
   140027e23:	mov    QWORD PTR [rsp+0x20],rcx
   140027e28:	lea    edx,[rax+0x2]
   140027e2b:	lea    rcx,[rbp-0x20]
   140027e2f:	call   0x14002972c
   140027e34:	mov    rcx,QWORD PTR [rbp-0x28]
   140027e38:	mov    edi,eax
   140027e3a:	test   rcx,rcx
   140027e3d:	je     0x140027e45
   140027e3f:	call   QWORD PTR [rip+0xa603]        # 0x140032448
   140027e45:	test   edi,edi
   140027e47:	js     0x140027e51
   140027e49:	test   rbx,rbx
   140027e4c:	je     0x140027e51
   140027e4e:	and    DWORD PTR [rbx],0x0
   140027e51:	mov    rcx,rsi
   140027e54:	call   QWORD PTR [rip+0xa29e]        # 0x1400320f8
   140027e5a:	mov    eax,edi
   140027e5c:	mov    rcx,QWORD PTR [rbp-0x10]
   140027e60:	xor    rcx,rsp
   140027e63:	call   0x14002dd00
   140027e68:	mov    rbx,QWORD PTR [rsp+0x90]
   140027e70:	add    rsp,0x70
   140027e74:	pop    rdi
   140027e75:	pop    rsi
   140027e76:	pop    rbp
   140027e77:	ret    
   140027e78:	int3   
   140027e79:	int3   
   140027e7a:	int3   
   140027e7b:	int3   
   140027e7c:	int3   
   140027e7d:	int3   
   140027e7e:	int3   
   140027e7f:	int3   
   140027e80:	mov    QWORD PTR [rsp+0x8],rbx
   140027e85:	push   rdi
   140027e86:	sub    rsp,0x20
   140027e8a:	mov    rdi,rcx
   140027e8d:	test   r8,r8
   140027e90:	jne    0x140027e99
   140027e92:	mov    eax,0x80004003
   140027e97:	jmp    0x140027ef0
   140027e99:	and    QWORD PTR [r8],0x0
   140027e9d:	mov    rax,QWORD PTR [rip+0x151f4]        # 0x14003d098
   140027ea4:	cmp    rax,QWORD PTR [rdx]
   140027ea7:	jne    0x140027eb6
   140027ea9:	mov    rax,QWORD PTR [rip+0x151f0]        # 0x14003d0a0
   140027eb0:	cmp    rax,QWORD PTR [rdx+0x8]
   140027eb4:	je     0x140027ecf
   140027eb6:	mov    rax,QWORD PTR [rip+0xeb1b]        # 0x1400369d8
   140027ebd:	cmp    rax,QWORD PTR [rdx]
   140027ec0:	jne    0x140027eeb
   140027ec2:	mov    rax,QWORD PTR [rip+0xeb17]        # 0x1400369e0
   140027ec9:	cmp    rax,QWORD PTR [rdx+0x8]
   140027ecd:	jne    0x140027eeb
   140027ecf:	mov    QWORD PTR [r8],rcx
   140027ed2:	mov    rax,QWORD PTR [rcx]
   140027ed5:	mov    rbx,QWORD PTR [rax+0x8]
   140027ed9:	mov    rcx,rbx
   140027edc:	call   QWORD PTR [rip+0xa7c6]        # 0x1400326a8
   140027ee2:	mov    rcx,rdi
   140027ee5:	call   rbx
   140027ee7:	xor    eax,eax
   140027ee9:	jmp    0x140027ef0
   140027eeb:	mov    eax,0x80004002
   140027ef0:	mov    rbx,QWORD PTR [rsp+0x30]
   140027ef5:	add    rsp,0x20
   140027ef9:	pop    rdi
   140027efa:	ret    
   140027efb:	int3   
   140027efc:	int3   
   140027efd:	int3   
   140027efe:	int3   
   140027eff:	int3   
   140027f00:	int3   
   140027f01:	int3   
   140027f02:	int3   
   140027f03:	int3   
   140027f04:	rex push rbx
   140027f06:	sub    rsp,0x30
   140027f0a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140027f13:	mov    rbx,rcx
   140027f16:	mov    ecx,0x10
   140027f1b:	call   QWORD PTR [rip+0xa6af]        # 0x1400325d0
   140027f21:	mov    rdx,rax
   140027f24:	test   rax,rax
   140027f27:	je     0x140027f39
   140027f29:	and    DWORD PTR [rax+0x8],0x0
   140027f2d:	lea    rax,[rip+0xcdac]        # 0x140034ce0
   140027f34:	mov    QWORD PTR [rdx],rax
   140027f37:	jmp    0x140027f3b
   140027f39:	xor    edx,edx
   140027f3b:	test   rdx,rdx
   140027f3e:	je     0x140027f59
   140027f40:	mov    eax,DWORD PTR [rdx+0x8]
   140027f43:	test   eax,eax
   140027f45:	jne    0x140027f50
   140027f47:	mov    DWORD PTR [rdx+0x8],0x1
   140027f4e:	jmp    0x140027f54
   140027f50:	lock inc DWORD PTR [rdx+0x8]
   140027f54:	mov    QWORD PTR [rbx],rdx
   140027f57:	jmp    0x140027f68
   140027f59:	mov    eax,0x8007000e
   140027f5e:	jmp    0x140027f6a
   140027f60:	mov    eax,DWORD PTR [rsp+0x48]
   140027f64:	test   eax,eax
   140027f66:	js     0x140027f6a
   140027f68:	xor    eax,eax
   140027f6a:	add    rsp,0x30
   140027f6e:	pop    rbx
   140027f6f:	ret    
   140027f70:	int3   
   140027f71:	int3   
   140027f72:	int3   
   140027f73:	int3   
   140027f74:	int3   
   140027f75:	int3   
   140027f76:	int3   
   140027f77:	int3   
   140027f78:	mov    rax,rsp
   140027f7b:	push   r14
   140027f7d:	sub    rsp,0x180
   140027f84:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
   140027f8d:	mov    QWORD PTR [rax+0x8],rbx
   140027f91:	mov    QWORD PTR [rax+0x10],rsi
   140027f95:	mov    QWORD PTR [rax+0x18],rdi
   140027f99:	mov    rax,QWORD PTR [rip+0x23080]        # 0x14004b020
   140027fa0:	xor    rax,rsp
   140027fa3:	mov    QWORD PTR [rsp+0x170],rax
   140027fab:	and    DWORD PTR [rsp+0x20],0x0
   140027fb0:	call   QWORD PTR [rip+0xa49a]        # 0x140032450
   140027fb6:	mov    rbx,QWORD PTR [rax+0xa0]
   140027fbd:	mov    rcx,rbx
   140027fc0:	call   QWORD PTR [rip+0xa6e2]        # 0x1400326a8
   140027fc6:	lea    r8,[rsp+0x20]
   140027fcb:	xor    edx,edx
   140027fcd:	lea    rcx,[rip+0x150e4]        # 0x14003d0b8
   140027fd4:	call   rbx
   140027fd6:	cmp    DWORD PTR [rsp+0x20],0x0
   140027fdb:	je     0x140027fe4
   140027fdd:	xor    eax,eax
   140027fdf:	jmp    0x140028156
   140027fe4:	mov    r8b,0x5
   140027fe7:	mov    edx,0x2
   140027fec:	xor    ecx,ecx
   140027fee:	call   QWORD PTR [rip+0xa25c]        # 0x140032250
   140027ff4:	mov    r8b,0x5
   140027ff7:	mov    edx,0x1
   140027ffc:	mov    rcx,rax
   140027fff:	call   QWORD PTR [rip+0xa24b]        # 0x140032250
   140028005:	mov    r8b,0x5
   140028008:	mov    edx,0x20
   14002800d:	mov    rcx,rax
   140028010:	call   QWORD PTR [rip+0xa23a]        # 0x140032250
   140028016:	mov    r8b,0x5
   140028019:	mov    edx,0x10
   14002801e:	mov    rcx,rax
   140028021:	call   QWORD PTR [rip+0xa229]        # 0x140032250
   140028027:	mov    rsi,rax
   14002802a:	xor    edx,edx
   14002802c:	mov    r8d,0x118
   140028032:	lea    rcx,[rsp+0x54]
   140028037:	call   0x14002e2ce
   14002803c:	mov    DWORD PTR [rsp+0x50],0x11c
   140028044:	xorps  xmm0,xmm0
   140028047:	movdqu XMMWORD PTR [rsp+0x28],xmm0
   14002804d:	and    QWORD PTR [rsp+0x38],0x0
   140028053:	xor    edi,edi
   140028055:	lea    r14,[rip+0x2655c]        # 0x14004e5b8
   14002805c:	movsxd rax,edi
   14002805f:	cmp    rax,0x1
   140028063:	jae    0x14002810f
   140028069:	lea    rbx,[rax+rax*2]
   14002806d:	mov    eax,DWORD PTR [r14+rbx*8+0x8]
   140028072:	mov    DWORD PTR [rsp+0x54],eax
   140028076:	mov    eax,DWORD PTR [r14+rbx*8+0xc]
   14002807b:	mov    DWORD PTR [rsp+0x58],eax
   14002807f:	movzx  eax,WORD PTR [r14+rbx*8+0x10]
   140028085:	mov    WORD PTR [rsp+0x164],ax
   14002808d:	movzx  eax,WORD PTR [r14+rbx*8+0x12]
   140028093:	mov    WORD PTR [rsp+0x166],ax
   14002809b:	mov    r8,rsi
   14002809e:	mov    edx,0x33
   1400280a3:	lea    rcx,[rsp+0x50]
   1400280a8:	call   QWORD PTR [rip+0xa17a]        # 0x140032228
   1400280ae:	test   eax,eax
   1400280b0:	je     0x140028108
   1400280b2:	mov    eax,DWORD PTR [r14+rbx*8+0x14]
   1400280b7:	mov    DWORD PTR [rsp+0x54],eax
   1400280bb:	mov    r8b,0x3
   1400280be:	mov    edx,0x2
   1400280c3:	xor    ecx,ecx
   1400280c5:	call   QWORD PTR [rip+0xa185]        # 0x140032250
   1400280cb:	mov    r8,rax
   1400280ce:	mov    edx,0x2
   1400280d3:	lea    rcx,[rsp+0x50]
   1400280d8:	call   QWORD PTR [rip+0xa14a]        # 0x140032228
   1400280de:	test   eax,eax
   1400280e0:	je     0x140028108
   1400280e2:	lea    rdx,[r14+rbx*8]
   1400280e6:	lea    rcx,[rsp+0x28]
   1400280eb:	call   0x140028cb0
   1400280f0:	jmp    0x140028108
   1400280f2:	mov    rcx,QWORD PTR [rsp+0x28]
   1400280f7:	test   rcx,rcx
   1400280fa:	je     0x140028102
   1400280fc:	call   QWORD PTR [rip+0xa4c6]        # 0x1400325c8
   140028102:	mov    eax,DWORD PTR [rsp+0x20]
   140028106:	jmp    0x140028156
   140028108:	inc    edi
   14002810a:	jmp    0x14002805c
   14002810f:	mov    rax,QWORD PTR [rsp+0x30]
   140028114:	mov    rcx,QWORD PTR [rsp+0x28]
   140028119:	sub    rax,rcx
   14002811c:	test   rax,0xfffffffffffffff8
   140028122:	jne    0x140028138
   140028124:	test   rcx,rcx
   140028127:	je     0x140027fdd
   14002812d:	call   QWORD PTR [rip+0xa495]        # 0x1400325c8
   140028133:	jmp    0x140027fdd
   140028138:	lea    rcx,[rsp+0x28]
   14002813d:	call   0x140028188
   140028142:	mov    ebx,eax
   140028144:	mov    rcx,QWORD PTR [rsp+0x28]
   140028149:	test   rcx,rcx
   14002814c:	je     0x140028154
   14002814e:	call   QWORD PTR [rip+0xa474]        # 0x1400325c8
   140028154:	mov    eax,ebx
   140028156:	mov    rcx,QWORD PTR [rsp+0x170]
   14002815e:	xor    rcx,rsp
   140028161:	call   0x14002dd00
   140028166:	lea    r11,[rsp+0x180]
   14002816e:	mov    rbx,QWORD PTR [r11+0x10]
   140028172:	mov    rsi,QWORD PTR [r11+0x18]
   140028176:	mov    rdi,QWORD PTR [r11+0x20]
   14002817a:	mov    rsp,r11
   14002817d:	pop    r14
   14002817f:	ret    
   140028180:	int3   
   140028181:	int3   
   140028182:	int3   
   140028183:	int3   
   140028184:	int3   
   140028185:	int3   
   140028186:	int3   
   140028187:	int3   
   140028188:	mov    rax,rsp
   14002818b:	push   rbp
   14002818c:	push   r12
   14002818e:	push   r13
   140028190:	push   r14
   140028192:	push   r15
   140028194:	lea    rbp,[rax-0x378]
   14002819b:	sub    rsp,0x450
   1400281a2:	mov    QWORD PTR [rbp-0x20],0xfffffffffffffffe
   1400281aa:	mov    QWORD PTR [rax+0x10],rbx
   1400281ae:	mov    QWORD PTR [rax+0x18],rsi
   1400281b2:	mov    QWORD PTR [rax+0x20],rdi
   1400281b6:	mov    rax,QWORD PTR [rip+0x22e63]        # 0x14004b020
   1400281bd:	xor    rax,rsp
   1400281c0:	mov    QWORD PTR [rbp+0x340],rax
   1400281c7:	mov    r12,rcx
   1400281ca:	mov    rdx,QWORD PTR [rcx]
   1400281cd:	mov    rax,QWORD PTR [rcx+0x8]
   1400281d1:	sub    rax,rdx
   1400281d4:	sar    rax,0x3
   1400281d8:	xor    ebx,ebx
   1400281da:	test   rax,rax
   1400281dd:	je     0x140028bd3
   1400281e3:	xorps  xmm0,xmm0
   1400281e6:	movdqu XMMWORD PTR [rbp-0x78],xmm0
   1400281eb:	mov    r14,rbx
   1400281ee:	mov    QWORD PTR [rbp-0x68],rbx
   1400281f2:	mov    r13d,ebx
   1400281f5:	mov    rsi,QWORD PTR [rbp-0x70]
   1400281f9:	mov    rdi,QWORD PTR [rbp-0x78]
   1400281fd:	test   eax,eax
   1400281ff:	jle    0x140028420
   140028205:	mov    QWORD PTR [rbp-0x60],rbx
   140028209:	mov    rcx,rbx
   14002820c:	mov    QWORD PTR [rsp+0x58],rbx
   140028211:	mov    QWORD PTR [rsp+0x68],rbx
   140028216:	mov    r8,QWORD PTR [rcx+rdx*1]
   14002821a:	lea    rdx,[rip+0x14ecf]        # 0x14003d0f0
   140028221:	lea    rcx,[rsp+0x68]
   140028226:	call   0x14002d138
   14002822b:	mov    r15d,eax
   14002822e:	test   eax,eax
   140028230:	js     0x1400283c9
   140028236:	mov    rbx,QWORD PTR [rsp+0x68]
   14002823b:	mov    rdx,rbx
   14002823e:	lea    rcx,[rbp-0x18]
   140028242:	call   0x14001781c
   140028247:	mov    r15,rax
   14002824a:	cmp    rax,rsi
   14002824d:	jae    0x1400282e3
   140028253:	cmp    rdi,rax
   140028256:	ja     0x1400282e3
   14002825c:	sub    r15,rdi
   14002825f:	cmp    rsi,r14
   140028262:	jne    0x1400282d9
   140028264:	mov    rax,r14
   140028267:	sub    rax,rsi
   14002826a:	sar    rax,0x5
   14002826e:	cmp    rax,0x1
   140028272:	jae    0x1400282d9
   140028274:	sub    rsi,rdi
   140028277:	sar    rsi,0x5
   14002827b:	movabs rdx,0x7ffffffffffffff
   140028285:	mov    rax,rdx
   140028288:	sub    rax,rsi
   14002828b:	cmp    rax,0x1
   14002828f:	jb     0x1400283bd
   140028295:	inc    rsi
   140028298:	sub    r14,rdi
   14002829b:	sar    r14,0x5
   14002829f:	mov    rcx,r14
   1400282a2:	shr    rcx,1
   1400282a5:	mov    rax,rdx
   1400282a8:	sub    rax,rcx
   1400282ab:	cmp    rax,r14
   1400282ae:	jae    0x1400282b7
   1400282b0:	xor    eax,eax
   1400282b2:	mov    r14d,eax
   1400282b5:	jmp    0x1400282ba
   1400282b7:	add    r14,rcx
   1400282ba:	cmp    r14,rsi
   1400282bd:	cmovb  r14,rsi
   1400282c1:	mov    rdx,r14
   1400282c4:	lea    rcx,[rbp-0x78]
   1400282c8:	call   0x140029024
   1400282cd:	mov    r14,QWORD PTR [rbp-0x68]
   1400282d1:	mov    rsi,QWORD PTR [rbp-0x70]
   1400282d5:	mov    rdi,QWORD PTR [rbp-0x78]
   1400282d9:	and    r15,0xffffffffffffffe0
   1400282dd:	lea    r8,[rdi+r15*1]
   1400282e1:	jmp    0x140028360
   1400282e3:	cmp    rsi,r14
   1400282e6:	jne    0x14002835d
   1400282e8:	mov    rax,r14
   1400282eb:	sub    rax,rsi
   1400282ee:	sar    rax,0x5
   1400282f2:	cmp    rax,0x1
   1400282f6:	jae    0x14002835d
   1400282f8:	sub    rsi,rdi
   1400282fb:	sar    rsi,0x5
   1400282ff:	movabs rdx,0x7ffffffffffffff
   140028309:	mov    rax,rdx
   14002830c:	sub    rax,rsi
   14002830f:	cmp    rax,0x1
   140028313:	jb     0x1400283c3
   140028319:	inc    rsi
   14002831c:	sub    r14,rdi
   14002831f:	sar    r14,0x5
   140028323:	mov    rcx,r14
   140028326:	shr    rcx,1
   140028329:	mov    rax,rdx
   14002832c:	sub    rax,rcx
   14002832f:	cmp    rax,r14
   140028332:	jae    0x14002833b
   140028334:	xor    eax,eax
   140028336:	mov    r14d,eax
   140028339:	jmp    0x14002833e
   14002833b:	add    r14,rcx
   14002833e:	cmp    r14,rsi
   140028341:	cmovb  r14,rsi
   140028345:	mov    rdx,r14
   140028348:	lea    rcx,[rbp-0x78]
   14002834c:	call   0x140029024
   140028351:	mov    r14,QWORD PTR [rbp-0x68]
   140028355:	mov    rsi,QWORD PTR [rbp-0x70]
   140028359:	mov    rdi,QWORD PTR [rbp-0x78]
   14002835d:	mov    r8,r15
   140028360:	mov    rdx,rsi
   140028363:	call   0x140029114
   140028368:	add    rsi,0x20
   14002836c:	mov    QWORD PTR [rbp-0x70],rsi
   140028370:	cmp    QWORD PTR [rbp+0x0],0x8
   140028375:	jb     0x140028382
   140028377:	mov    rcx,QWORD PTR [rbp-0x18]
   14002837b:	call   QWORD PTR [rip+0xa247]        # 0x1400325c8
   140028381:	nop
   140028382:	test   rbx,rbx
   140028385:	je     0x140028390
   140028387:	mov    rcx,rbx
   14002838a:	call   QWORD PTR [rip+0xa238]        # 0x1400325c8
   140028390:	inc    r13d
   140028393:	mov    rcx,QWORD PTR [rsp+0x58]
   140028398:	add    rcx,0x8
   14002839c:	mov    QWORD PTR [rsp+0x58],rcx
   1400283a1:	mov    rdx,QWORD PTR [r12]
   1400283a5:	mov    rax,QWORD PTR [r12+0x8]
   1400283aa:	sub    rax,rdx
   1400283ad:	sar    rax,0x3
   1400283b1:	cmp    r13d,eax
   1400283b4:	jge    0x140028420
   1400283b6:	xor    ebx,ebx
   1400283b8:	jmp    0x140028211
   1400283bd:	call   0x14000d388
   1400283c2:	int3   
   1400283c3:	call   0x14000d388
   1400283c8:	nop
   1400283c9:	mov    rcx,QWORD PTR [rsp+0x68]
   1400283ce:	test   rcx,rcx
   1400283d1:	je     0x1400283da
   1400283d3:	call   QWORD PTR [rip+0xa1ef]        # 0x1400325c8
   1400283d9:	nop
   1400283da:	test   rdi,rdi
   1400283dd:	je     0x140028bd0
   1400283e3:	mov    rbx,rdi
   1400283e6:	cmp    rdi,rsi
   1400283e9:	je     0x140028bc7
   1400283ef:	xor    eax,eax
   1400283f1:	cmp    QWORD PTR [rbx+0x18],0x8
   1400283f6:	jb     0x140028403
   1400283f8:	mov    rcx,QWORD PTR [rbx]
   1400283fb:	call   QWORD PTR [rip+0xa1c7]        # 0x1400325c8
   140028401:	xor    eax,eax
   140028403:	mov    QWORD PTR [rbx+0x18],0x7
   14002840b:	mov    QWORD PTR [rbx+0x10],rax
   14002840f:	mov    WORD PTR [rbx],ax
   140028412:	add    rbx,0x20
   140028416:	cmp    rbx,rsi
   140028419:	jne    0x1400283f1
   14002841b:	jmp    0x140028bc7
   140028420:	xor    r13d,r13d
   140028423:	mov    r14d,r13d
   140028426:	mov    QWORD PTR [rbp-0x48],r13
   14002842a:	mov    QWORD PTR [rbp-0x40],r13
   14002842e:	mov    QWORD PTR [rbp-0x38],r13
   140028432:	mov    QWORD PTR [rbp-0x60],r13
   140028436:	lea    rdx,[rbp-0x60]
   14002843a:	lea    rcx,[rip+0x14cd7]        # 0x14003d118
   140028441:	call   0x140029890
   140028446:	mov    rbx,QWORD PTR [rbp-0x60]
   14002844a:	test   eax,eax
   14002844c:	js     0x140028456
   14002844e:	test   rbx,rbx
   140028451:	mov    rdx,rbx
   140028454:	jne    0x14002845d
   140028456:	lea    rdx,[rip+0x14cf3]        # 0x14003d150
   14002845d:	lea    rax,[rsp+0x58]
   140028462:	mov    QWORD PTR [rsp+0x20],rax
   140028467:	mov    QWORD PTR [rsp+0x58],r13
   14002846c:	mov    r9d,0x20019
   140028472:	xor    r8d,r8d
   140028475:	mov    rcx,0xffffffff80000002
   14002847c:	call   QWORD PTR [rip+0x9bce]        # 0x140032050
   140028482:	test   eax,eax
   140028484:	jne    0x140028492
   140028486:	mov    r14,QWORD PTR [rsp+0x58]
   14002848b:	mov    eax,r13d
   14002848e:	mov    QWORD PTR [rbp-0x48],r14
   140028492:	movzx  r15d,ax
   140028496:	or     r15d,0x80070000
   14002849d:	test   eax,eax
   14002849f:	cmovle r15d,eax
   1400284a3:	test   r15d,r15d
   1400284a6:	jns    0x140028509
   1400284a8:	test   rbx,rbx
   1400284ab:	je     0x1400284b7
   1400284ad:	mov    rcx,rbx
   1400284b0:	call   QWORD PTR [rip+0x9f92]        # 0x140032448
   1400284b6:	nop
   1400284b7:	test   r14,r14
   1400284ba:	je     0x1400284c6
   1400284bc:	mov    rcx,r14
   1400284bf:	call   QWORD PTR [rip+0x9b73]        # 0x140032038
   1400284c5:	nop
   1400284c6:	test   rdi,rdi
   1400284c9:	je     0x140028bd0
   1400284cf:	mov    rbx,rdi
   1400284d2:	cmp    rdi,rsi
   1400284d5:	je     0x140028bc7
   1400284db:	cmp    QWORD PTR [rbx+0x18],0x8
   1400284e0:	jb     0x1400284eb
   1400284e2:	mov    rcx,QWORD PTR [rbx]
   1400284e5:	call   QWORD PTR [rip+0xa0dd]        # 0x1400325c8
   1400284eb:	mov    QWORD PTR [rbx+0x18],0x7
   1400284f3:	mov    QWORD PTR [rbx+0x10],r13
   1400284f7:	mov    WORD PTR [rbx],r13w
   1400284fb:	add    rbx,0x20
   1400284ff:	cmp    rbx,rsi
   140028502:	jne    0x1400284db
   140028504:	jmp    0x140028bc7
   140028509:	xor    edx,edx
   14002850b:	mov    r8d,0x110
   140028511:	lea    rcx,[rbp+0x14]
   140028515:	call   0x14002e2ce
   14002851a:	mov    DWORD PTR [rbp+0x10],0x114
   140028521:	lea    rcx,[rbp+0x10]
   140028525:	call   QWORD PTR [rip+0x9d7d]        # 0x1400322a8
   14002852b:	test   eax,eax
   14002852d:	jne    0x140028605
   140028533:	call   QWORD PTR [rip+0x9d4f]        # 0x140032288
   140028539:	movzx  r15d,ax
   14002853d:	or     r15d,0x80070000
   140028544:	test   eax,eax
   140028546:	cmovle r15d,eax
   14002854a:	test   BYTE PTR [rip+0x2613b],0x1        # 0x14004e68c
   140028551:	je     0x1400285a4
   140028553:	mov    DWORD PTR [rsp+0x60],r15d
   140028558:	mov    ecx,0xa
   14002855d:	mov    QWORD PTR [rsp+0x40],r13
   140028562:	lea    r13d,[rcx-0x6]
   140028566:	mov    QWORD PTR [rsp+0x38],r13
   14002856b:	lea    rax,[rsp+0x60]
   140028570:	mov    QWORD PTR [rsp+0x30],rax
   140028575:	mov    QWORD PTR [rsp+0x28],r13
   14002857a:	lea    rax,[rip+0x1083b]        # 0x140038dbc
   140028581:	mov    QWORD PTR [rsp+0x20],rax
   140028586:	movzx  r9d,cx
   14002858a:	lea    r8,[rip+0x14cf7]        # 0x14003d288
   140028591:	lea    edx,[rcx+0x21]
   140028594:	mov    rcx,QWORD PTR [rip+0x260e5]        # 0x14004e680
   14002859b:	call   QWORD PTR [rip+0x9a7f]        # 0x140032020
   1400285a1:	xor    r13d,r13d
   1400285a4:	test   rbx,rbx
   1400285a7:	je     0x1400285b3
   1400285a9:	mov    rcx,rbx
   1400285ac:	call   QWORD PTR [rip+0x9e96]        # 0x140032448
   1400285b2:	nop
   1400285b3:	test   r14,r14
   1400285b6:	je     0x1400285c2
   1400285b8:	mov    rcx,r14
   1400285bb:	call   QWORD PTR [rip+0x9a77]        # 0x140032038
   1400285c1:	nop
   1400285c2:	test   rdi,rdi
   1400285c5:	je     0x140028bd0
   1400285cb:	mov    rbx,rdi
   1400285ce:	cmp    rdi,rsi
   1400285d1:	je     0x140028bc7
   1400285d7:	cmp    QWORD PTR [rbx+0x18],0x8
   1400285dc:	jb     0x1400285e7
   1400285de:	mov    rcx,QWORD PTR [rbx]
   1400285e1:	call   QWORD PTR [rip+0x9fe1]        # 0x1400325c8
   1400285e7:	mov    QWORD PTR [rbx+0x18],0x7
   1400285ef:	mov    QWORD PTR [rbx+0x10],r13
   1400285f3:	mov    WORD PTR [rbx],r13w
   1400285f7:	add    rbx,0x20
   1400285fb:	cmp    rbx,rsi
   1400285fe:	jne    0x1400285d7
   140028600:	jmp    0x140028bc7
   140028605:	cmp    DWORD PTR [rbp+0x14],0x6
   140028609:	ja     0x14002861a
   14002860b:	jne    0x140028613
   14002860d:	cmp    DWORD PTR [rbp+0x18],r13d
   140028611:	ja     0x14002861a
   140028613:	mov    BYTE PTR [rsp+0x50],r13b
   140028618:	jmp    0x14002861f
   14002861a:	mov    BYTE PTR [rsp+0x50],0x1
   14002861f:	mov    r12d,r13d
   140028622:	mov    r15,rsi
   140028625:	sub    r15,rdi
   140028628:	sar    r15,0x5
   14002862c:	test   r15,r15
   14002862f:	je     0x140028b86
   140028635:	mov    r13d,0x4
   14002863b:	mov    DWORD PTR [rbp-0x80],0x104
   140028642:	lea    rax,[rbp-0x28]
   140028646:	mov    QWORD PTR [rsp+0x38],rax
   14002864b:	xor    eax,eax
   14002864d:	mov    QWORD PTR [rsp+0x30],rax
   140028652:	mov    QWORD PTR [rsp+0x28],rax
   140028657:	mov    QWORD PTR [rsp+0x20],rax
   14002865c:	lea    r9,[rbp-0x80]
   140028660:	lea    r8,[rbp+0x130]
   140028667:	mov    edx,r12d
   14002866a:	mov    rcx,r14
   14002866d:	call   QWORD PTR [rip+0x99d5]        # 0x140032048
   140028673:	movzx  ecx,ax
   140028676:	or     ecx,0x80070000
   14002867c:	xor    edx,edx
   14002867e:	test   eax,eax
   140028680:	cmovle ecx,eax
   140028683:	inc    r12d
   140028686:	mov    DWORD PTR [rsp+0x60],r12d
   14002868b:	test   ecx,ecx
   14002868d:	js     0x140028b83
   140028693:	cmp    DWORD PTR [rbp-0x80],0x104
   14002869a:	ja     0x140028b83
   1400286a0:	mov    eax,DWORD PTR [rbp-0x80]
   1400286a3:	add    rax,rax
   1400286a6:	cmp    rax,0x20a
   1400286ac:	jae    0x140028b7d
   1400286b2:	mov    WORD PTR [rbp+rax*1+0x130],dx
   1400286ba:	mov    DWORD PTR [rsp+0x7c],edx
   1400286be:	test   r15d,r15d
   1400286c1:	jle    0x140028971
   1400286c7:	mov    r12,rdi
   1400286ca:	cmp    QWORD PTR [r12+0x18],0x8
   1400286d0:	jb     0x1400286d8
   1400286d2:	mov    rax,QWORD PTR [r12]
   1400286d6:	jmp    0x1400286db
   1400286d8:	mov    rax,r12
   1400286db:	or     r9,0xffffffffffffffff
   1400286df:	mov    r8,r9
   1400286e2:	inc    r8
   1400286e5:	cmp    WORD PTR [rax+r8*2],dx
   1400286ea:	jne    0x1400286e2
   1400286ec:	lea    rcx,[rbp+0x130]
   1400286f3:	mov    rax,r9
   1400286f6:	inc    rax
   1400286f9:	cmp    WORD PTR [rcx+rax*2],dx
   1400286fd:	jne    0x1400286f6
   1400286ff:	cmp    rax,r8
   140028702:	jb     0x140028728
   140028704:	cmp    QWORD PTR [r12+0x18],0x8
   14002870a:	jb     0x140028712
   14002870c:	mov    rdx,QWORD PTR [r12]
   140028710:	jmp    0x140028715
   140028712:	mov    rdx,r12
   140028715:	lea    rcx,[rbp+0x130]
   14002871c:	call   QWORD PTR [rip+0x9e86]        # 0x1400325a8
   140028722:	xor    edx,edx
   140028724:	test   eax,eax
   140028726:	je     0x140028741
   140028728:	mov    eax,DWORD PTR [rsp+0x7c]
   14002872c:	inc    eax
   14002872e:	mov    DWORD PTR [rsp+0x7c],eax
   140028732:	add    r12,0x20
   140028736:	cmp    eax,r15d
   140028739:	jge    0x14002896c
   14002873f:	jmp    0x1400286ca
   140028741:	mov    r15,rdx
   140028744:	mov    QWORD PTR [rbp-0x18],rdx
   140028748:	mov    QWORD PTR [rbp-0x10],rdx
   14002874c:	mov    QWORD PTR [rbp-0x8],rdx
   140028750:	mov    QWORD PTR [rsp+0x70],rdx
   140028755:	lea    rax,[rsp+0x70]
   14002875a:	mov    QWORD PTR [rsp+0x20],rax
   14002875f:	mov    r9d,0x20019
   140028765:	xor    r8d,r8d
   140028768:	lea    rdx,[rbp+0x130]
   14002876f:	mov    rcx,r14
   140028772:	call   QWORD PTR [rip+0x98d8]        # 0x140032050
   140028778:	xor    ecx,ecx
   14002877a:	test   eax,eax
   14002877c:	jne    0x140028789
   14002877e:	mov    eax,ecx
   140028780:	mov    r15,QWORD PTR [rsp+0x70]
   140028785:	mov    QWORD PTR [rbp-0x18],r15
   140028789:	movzx  r12d,ax
   14002878d:	or     r12d,0x80070000
   140028794:	test   eax,eax
   140028796:	cmovle r12d,eax
   14002879a:	test   r12d,r12d
   14002879d:	js     0x140028b08
   1400287a3:	mov    DWORD PTR [rsp+0x78],ecx
   1400287a7:	mov    DWORD PTR [rsp+0x70],r13d
   1400287ac:	lea    rax,[rsp+0x70]
   1400287b1:	mov    QWORD PTR [rsp+0x28],rax
   1400287b6:	lea    rax,[rsp+0x78]
   1400287bb:	mov    QWORD PTR [rsp+0x20],rax
   1400287c0:	lea    r9,[rbp-0x50]
   1400287c4:	xor    r8d,r8d
   1400287c7:	lea    rdx,[rip+0x14a22]        # 0x14003d1f0
   1400287ce:	mov    rcx,r15
   1400287d1:	call   QWORD PTR [rip+0x98e9]        # 0x1400320c0
   1400287d7:	xor    r9d,r9d
   1400287da:	test   eax,eax
   1400287dc:	jne    0x1400287eb
   1400287de:	mov    eax,DWORD PTR [rbp-0x50]
   1400287e1:	sub    eax,r13d
   1400287e4:	neg    eax
   1400287e6:	sbb    eax,eax
   1400287e8:	and    eax,0xd
   1400287eb:	movzx  r12d,ax
   1400287ef:	or     r12d,0x80070000
   1400287f6:	test   eax,eax
   1400287f8:	cmovle r12d,eax
   1400287fc:	test   r12d,r12d
   1400287ff:	js     0x140028a92
   140028805:	mov    r8b,BYTE PTR [rsp+0x50]
   14002880a:	mov    edx,DWORD PTR [rsp+0x78]
   14002880e:	test   r8b,r8b
   140028811:	je     0x140028822
   140028813:	lea    eax,[rdx-0x50]
   140028816:	test   eax,0xffffffdf
   14002881b:	jne    0x140028830
   14002881d:	jmp    0x14002893c
   140028822:	lea    eax,[rdx-0x5]
   140028825:	test   eax,0xfffffffd
   14002882a:	je     0x14002893c
   140028830:	mov    ecx,r9d
   140028833:	cmp    edx,0x60
   140028836:	sete   cl
   140028839:	mov    eax,r9d
   14002883c:	cmp    edx,0x6
   14002883f:	sete   al
   140028842:	test   r8b,r8b
   140028845:	cmovne eax,ecx
   140028848:	test   eax,eax
   14002884a:	je     0x140028989
   140028850:	mov    QWORD PTR [rsp+0x68],r9
   140028855:	mov    DWORD PTR [rsp+0x70],r13d
   14002885a:	lea    rax,[rsp+0x70]
   14002885f:	mov    QWORD PTR [rsp+0x28],rax
   140028864:	lea    rax,[rsp+0x6c]
   140028869:	mov    QWORD PTR [rsp+0x20],rax
   14002886e:	lea    r9,[rbp-0x54]
   140028872:	xor    r8d,r8d
   140028875:	lea    rdx,[rip+0x14994]        # 0x14003d210
   14002887c:	mov    rcx,r15
   14002887f:	call   QWORD PTR [rip+0x983b]        # 0x1400320c0
   140028885:	test   eax,eax
   140028887:	jne    0x140028896
   140028889:	mov    eax,DWORD PTR [rbp-0x54]
   14002888c:	sub    eax,r13d
   14002888f:	neg    eax
   140028891:	sbb    eax,eax
   140028893:	and    eax,0xd
   140028896:	movzx  r12d,ax
   14002889a:	or     r12d,0x80070000
   1400288a1:	test   eax,eax
   1400288a3:	cmovle r12d,eax
   1400288a7:	test   r12d,r12d
   1400288aa:	js     0x140028a1f
   1400288b0:	mov    DWORD PTR [rsp+0x70],r13d
   1400288b5:	lea    rax,[rsp+0x70]
   1400288ba:	mov    QWORD PTR [rsp+0x28],rax
   1400288bf:	lea    rax,[rsp+0x68]
   1400288c4:	mov    QWORD PTR [rsp+0x20],rax
   1400288c9:	lea    r9,[rbp-0x58]
   1400288cd:	xor    r8d,r8d
   1400288d0:	lea    rdx,[rip+0x14959]        # 0x14003d230
   1400288d7:	mov    rcx,r15
   1400288da:	call   QWORD PTR [rip+0x97e0]        # 0x1400320c0
   1400288e0:	xor    ecx,ecx
   1400288e2:	test   eax,eax
   1400288e4:	jne    0x1400288f3
   1400288e6:	mov    eax,DWORD PTR [rbp-0x58]
   1400288e9:	sub    eax,r13d
   1400288ec:	neg    eax
   1400288ee:	sbb    eax,eax
   1400288f0:	and    eax,0xd
   1400288f3:	movzx  r12d,ax
   1400288f7:	or     r12d,0x80070000
   1400288fe:	test   eax,eax
   140028900:	cmovle r12d,eax
   140028904:	test   r12d,r12d
   140028907:	js     0x1400289d9
   14002890d:	mov    QWORD PTR [rsp+0x58],rcx
   140028912:	lea    rcx,[rsp+0x58]
   140028917:	call   0x140028c0c
   14002891c:	mov    r12d,eax
   14002891f:	test   eax,eax
   140028921:	js     0x1400289d9
   140028927:	lea    rdx,[rsp+0x68]
   14002892c:	lea    rcx,[rsp+0x58]
   140028931:	call   QWORD PTR [rip+0x98f9]        # 0x140032230
   140028937:	cmp    eax,0xffffffff
   14002893a:	je     0x140028989
   14002893c:	movsxd r8,DWORD PTR [rsp+0x7c]
   140028941:	shl    r8,0x5
   140028945:	add    r8,rdi
   140028948:	lea    rdx,[rbp-0x30]
   14002894c:	lea    rcx,[rbp-0x78]
   140028950:	call   0x140028df0
   140028955:	nop
   140028956:	test   r15,r15
   140028959:	je     0x140028964
   14002895b:	mov    rcx,r15
   14002895e:	call   QWORD PTR [rip+0x96d4]        # 0x140032038
   140028964:	mov    rdi,QWORD PTR [rbp-0x78]
   140028968:	mov    rsi,QWORD PTR [rbp-0x70]
   14002896c:	mov    r12d,DWORD PTR [rsp+0x60]
   140028971:	mov    r15,rsi
   140028974:	sub    r15,rdi
   140028977:	sar    r15,0x5
   14002897b:	test   r15,r15
   14002897e:	je     0x140028b83
   140028984:	jmp    0x14002863b
   140028989:	test   r15,r15
   14002898c:	je     0x140028998
   14002898e:	mov    rcx,r15
   140028991:	call   QWORD PTR [rip+0x96a1]        # 0x140032038
   140028997:	nop
   140028998:	test   rbx,rbx
   14002899b:	je     0x1400289a7
   14002899d:	mov    rcx,rbx
   1400289a0:	call   QWORD PTR [rip+0x9aa2]        # 0x140032448
   1400289a6:	nop
   1400289a7:	test   r14,r14
   1400289aa:	je     0x1400289b6
   1400289ac:	mov    rcx,r14
   1400289af:	call   QWORD PTR [rip+0x9683]        # 0x140032038
   1400289b5:	nop
   1400289b6:	test   rdi,rdi
   1400289b9:	je     0x1400289cf
   1400289bb:	mov    r8,rsi
   1400289be:	mov    rdx,rdi
   1400289c1:	call   0x140028f0c
   1400289c6:	mov    rcx,rdi
   1400289c9:	call   QWORD PTR [rip+0x9bf9]        # 0x1400325c8
   1400289cf:	mov    eax,0x1
   1400289d4:	jmp    0x140028bd3
   1400289d9:	test   r15,r15
   1400289dc:	je     0x1400289e8
   1400289de:	mov    rcx,r15
   1400289e1:	call   QWORD PTR [rip+0x9651]        # 0x140032038
   1400289e7:	nop
   1400289e8:	test   rbx,rbx
   1400289eb:	je     0x1400289f7
   1400289ed:	mov    rcx,rbx
   1400289f0:	call   QWORD PTR [rip+0x9a52]        # 0x140032448
   1400289f6:	nop
   1400289f7:	test   r14,r14
   1400289fa:	je     0x140028a06
   1400289fc:	mov    rcx,r14
   1400289ff:	call   QWORD PTR [rip+0x9633]        # 0x140032038
   140028a05:	nop
   140028a06:	test   rdi,rdi
   140028a09:	je     0x140028b78
   140028a0f:	mov    r8,rsi
   140028a12:	mov    rdx,rdi
   140028a15:	call   0x140028f0c
   140028a1a:	jmp    0x140028b6f
   140028a1f:	xor    r13d,r13d
   140028a22:	test   r15,r15
   140028a25:	je     0x140028a31
   140028a27:	mov    rcx,r15
   140028a2a:	call   QWORD PTR [rip+0x9608]        # 0x140032038
   140028a30:	nop
   140028a31:	test   rbx,rbx
   140028a34:	je     0x140028a40
   140028a36:	mov    rcx,rbx
   140028a39:	call   QWORD PTR [rip+0x9a09]        # 0x140032448
   140028a3f:	nop
   140028a40:	test   r14,r14
   140028a43:	je     0x140028a4f
   140028a45:	mov    rcx,r14
   140028a48:	call   QWORD PTR [rip+0x95ea]        # 0x140032038
   140028a4e:	nop
   140028a4f:	test   rdi,rdi
   140028a52:	je     0x140028b78
   140028a58:	mov    rbx,rdi
   140028a5b:	cmp    rdi,rsi
   140028a5e:	je     0x140028b6f
   140028a64:	cmp    QWORD PTR [rbx+0x18],0x8
   140028a69:	jb     0x140028a74
   140028a6b:	mov    rcx,QWORD PTR [rbx]
   140028a6e:	call   QWORD PTR [rip+0x9b54]        # 0x1400325c8
   140028a74:	mov    QWORD PTR [rbx+0x18],0x7
   140028a7c:	mov    QWORD PTR [rbx+0x10],r13
   140028a80:	mov    WORD PTR [rbx],r13w
   140028a84:	add    rbx,0x20
   140028a88:	cmp    rbx,rsi
   140028a8b:	jne    0x140028a64
   140028a8d:	jmp    0x140028b6f
   140028a92:	test   r15,r15
   140028a95:	je     0x140028aa3
   140028a97:	mov    rcx,r15
   140028a9a:	call   QWORD PTR [rip+0x9598]        # 0x140032038
   140028aa0:	xor    r9d,r9d
   140028aa3:	test   rbx,rbx
   140028aa6:	je     0x140028ab4
   140028aa8:	mov    rcx,rbx
   140028aab:	call   QWORD PTR [rip+0x9997]        # 0x140032448
   140028ab1:	xor    r9d,r9d
   140028ab4:	test   r14,r14
   140028ab7:	je     0x140028ac5
   140028ab9:	mov    rcx,r14
   140028abc:	call   QWORD PTR [rip+0x9576]        # 0x140032038
   140028ac2:	xor    r9d,r9d
   140028ac5:	test   rdi,rdi
   140028ac8:	je     0x140028b78
   140028ace:	mov    rbx,rdi
   140028ad1:	cmp    rdi,rsi
   140028ad4:	je     0x140028b6f
   140028ada:	cmp    QWORD PTR [rbx+0x18],0x8
   140028adf:	jb     0x140028aed
   140028ae1:	mov    rcx,QWORD PTR [rbx]
   140028ae4:	call   QWORD PTR [rip+0x9ade]        # 0x1400325c8
   140028aea:	xor    r9d,r9d
   140028aed:	mov    QWORD PTR [rbx+0x18],0x7
   140028af5:	mov    QWORD PTR [rbx+0x10],r9
   140028af9:	mov    WORD PTR [rbx],r9w
   140028afd:	add    rbx,0x20
   140028b01:	cmp    rbx,rsi
   140028b04:	jne    0x140028ada
   140028b06:	jmp    0x140028b6f
   140028b08:	test   r15,r15
   140028b0b:	je     0x140028b18
   140028b0d:	mov    rcx,r15
   140028b10:	call   QWORD PTR [rip+0x9522]        # 0x140032038
   140028b16:	xor    ecx,ecx
   140028b18:	test   rbx,rbx
   140028b1b:	je     0x140028b28
   140028b1d:	mov    rcx,rbx
   140028b20:	call   QWORD PTR [rip+0x9922]        # 0x140032448
   140028b26:	xor    ecx,ecx
   140028b28:	test   r14,r14
   140028b2b:	je     0x140028b38
   140028b2d:	mov    rcx,r14
   140028b30:	call   QWORD PTR [rip+0x9502]        # 0x140032038
   140028b36:	xor    ecx,ecx
   140028b38:	test   rdi,rdi
   140028b3b:	je     0x140028b78
   140028b3d:	mov    rbx,rdi
   140028b40:	cmp    rdi,rsi
   140028b43:	je     0x140028b6f
   140028b45:	cmp    QWORD PTR [rbx+0x18],0x8
   140028b4a:	jb     0x140028b57
   140028b4c:	mov    rcx,QWORD PTR [rbx]
   140028b4f:	call   QWORD PTR [rip+0x9a73]        # 0x1400325c8
   140028b55:	xor    ecx,ecx
   140028b57:	mov    QWORD PTR [rbx+0x18],0x7
   140028b5f:	mov    QWORD PTR [rbx+0x10],rcx
   140028b63:	mov    WORD PTR [rbx],cx
   140028b66:	add    rbx,0x20
   140028b6a:	cmp    rbx,rsi
   140028b6d:	jne    0x140028b45
   140028b6f:	mov    rcx,rdi
   140028b72:	call   QWORD PTR [rip+0x9a50]        # 0x1400325c8
   140028b78:	mov    eax,r12d
   140028b7b:	jmp    0x140028bd3
   140028b7d:	call   0x14002e158
   140028b82:	int3   
   140028b83:	xor    r13d,r13d
   140028b86:	mov    rax,rsi
   140028b89:	sub    rax,rdi
   140028b8c:	test   rax,0xffffffffffffffe0
   140028b92:	mov    r15d,r13d
   140028b95:	setne  r15b
   140028b99:	test   rbx,rbx
   140028b9c:	je     0x140028ba8
   140028b9e:	mov    rcx,rbx
   140028ba1:	call   QWORD PTR [rip+0x98a1]        # 0x140032448
   140028ba7:	nop
   140028ba8:	test   r14,r14
   140028bab:	je     0x140028bb7
   140028bad:	mov    rcx,r14
   140028bb0:	call   QWORD PTR [rip+0x9482]        # 0x140032038
   140028bb6:	nop
   140028bb7:	test   rdi,rdi
   140028bba:	je     0x140028bd0
   140028bbc:	mov    r8,rsi
   140028bbf:	mov    rdx,rdi
   140028bc2:	call   0x140028f0c
   140028bc7:	mov    rcx,rdi
   140028bca:	call   QWORD PTR [rip+0x99f8]        # 0x1400325c8
   140028bd0:	mov    eax,r15d
   140028bd3:	mov    rcx,QWORD PTR [rbp+0x340]
   140028bda:	xor    rcx,rsp
   140028bdd:	call   0x14002dd00
   140028be2:	lea    r11,[rsp+0x450]
   140028bea:	mov    rbx,QWORD PTR [r11+0x38]
   140028bee:	mov    rsi,QWORD PTR [r11+0x40]
   140028bf2:	mov    rdi,QWORD PTR [r11+0x48]
   140028bf6:	mov    rsp,r11
   140028bf9:	pop    r15
   140028bfb:	pop    r14
   140028bfd:	pop    r13
   140028bff:	pop    r12
   140028c01:	pop    rbp
   140028c02:	ret    
   140028c03:	int3   
   140028c04:	int3   
   140028c05:	int3   
   140028c06:	int3   
   140028c07:	int3   
   140028c08:	int3   
   140028c09:	int3   
   140028c0a:	int3   
   140028c0b:	int3   
   140028c0c:	rex push rbx
   140028c0e:	sub    rsp,0x60
   140028c12:	mov    rax,QWORD PTR [rip+0x22407]        # 0x14004b020
   140028c19:	xor    rax,rsp
   140028c1c:	mov    QWORD PTR [rsp+0x58],rax
   140028c21:	and    QWORD PTR [rsp+0x20],0x0
   140028c27:	lea    r8,[rip+0x14622]        # 0x14003d250
   140028c2e:	mov    rbx,rcx
   140028c31:	lea    rdx,[rip+0x14638]        # 0x14003d270
   140028c38:	lea    rcx,[rsp+0x20]
   140028c3d:	call   0x14002a460
   140028c42:	test   eax,eax
   140028c44:	js     0x140028c96
   140028c46:	xor    edx,edx
   140028c48:	lea    rcx,[rsp+0x28]
   140028c4d:	lea    r8d,[rdx+0x30]
   140028c51:	call   0x14002e2ce
   140028c56:	mov    rcx,QWORD PTR [rsp+0x20]
   140028c5b:	call   QWORD PTR [rip+0x9a47]        # 0x1400326a8
   140028c61:	xor    r9d,r9d
   140028c64:	lea    rdx,[rsp+0x28]
   140028c69:	lea    r8d,[r9+0x30]
   140028c6d:	lea    ecx,[r9+0x3]
   140028c71:	call   QWORD PTR [rsp+0x20]
   140028c75:	test   eax,eax
   140028c77:	jns    0x140028c80
   140028c79:	mov    eax,0x80004005
   140028c7e:	jmp    0x140028c96
   140028c80:	mov    r8d,0x8
   140028c86:	lea    rdx,[rsp+0x28]
   140028c8b:	mov    rcx,rbx
   140028c8e:	call   QWORD PTR [rip+0x980c]        # 0x1400324a0
   140028c94:	xor    eax,eax
   140028c96:	mov    rcx,QWORD PTR [rsp+0x58]
   140028c9b:	xor    rcx,rsp
   140028c9e:	call   0x14002dd00
   140028ca3:	add    rsp,0x60
   140028ca7:	pop    rbx
   140028ca8:	ret    
   140028ca9:	int3   
   140028caa:	int3   
   140028cab:	int3   
   140028cac:	int3   
   140028cad:	int3   
   140028cae:	int3   
   140028caf:	int3   
   140028cb0:	mov    QWORD PTR [rsp+0x8],rbx
   140028cb5:	push   rdi
   140028cb6:	sub    rsp,0x20
   140028cba:	mov    rbx,rcx
   140028cbd:	mov    rdi,rdx
   140028cc0:	mov    rcx,QWORD PTR [rcx+0x8]
   140028cc4:	cmp    rdx,rcx
   140028cc7:	jae    0x140028d5a
   140028ccd:	cmp    QWORD PTR [rbx],rdx
   140028cd0:	ja     0x140028d5a
   140028cd6:	sub    rdi,QWORD PTR [rbx]
   140028cd9:	mov    rdx,QWORD PTR [rbx+0x10]
   140028cdd:	sar    rdi,0x3
   140028ce1:	cmp    rcx,rdx
   140028ce4:	jne    0x140028d45
   140028ce6:	mov    rax,rdx
   140028ce9:	sub    rax,rcx
   140028cec:	sar    rax,0x3
   140028cf0:	cmp    rax,0x1
   140028cf4:	jae    0x140028d45
   140028cf6:	sub    rcx,QWORD PTR [rbx]
   140028cf9:	movabs r8,0x1fffffffffffffff
   140028d03:	sar    rcx,0x3
   140028d07:	mov    rax,r8
   140028d0a:	sub    rax,rcx
   140028d0d:	cmp    rax,0x1
   140028d11:	jb     0x140028ddd
   140028d17:	sub    rdx,QWORD PTR [rbx]
   140028d1a:	inc    rcx
   140028d1d:	sar    rdx,0x3
   140028d21:	mov    rax,rdx
   140028d24:	shr    rax,1
   140028d27:	sub    r8,rax
   140028d2a:	cmp    r8,rdx
   140028d2d:	jae    0x140028d33
   140028d2f:	xor    edx,edx
   140028d31:	jmp    0x140028d36
   140028d33:	add    rdx,rax
   140028d36:	cmp    rdx,rcx
   140028d39:	cmovb  rdx,rcx
   140028d3d:	mov    rcx,rbx
   140028d40:	call   0x140028f68
   140028d45:	mov    rdx,QWORD PTR [rbx+0x8]
   140028d49:	test   rdx,rdx
   140028d4c:	je     0x140028dcd
   140028d4e:	mov    rax,QWORD PTR [rbx]
   140028d51:	mov    rcx,QWORD PTR [rax+rdi*8]
   140028d55:	mov    QWORD PTR [rdx],rcx
   140028d58:	jmp    0x140028dcd
   140028d5a:	mov    rdx,QWORD PTR [rbx+0x10]
   140028d5e:	cmp    rcx,rdx
   140028d61:	jne    0x140028dbe
   140028d63:	mov    rax,rdx
   140028d66:	sub    rax,rcx
   140028d69:	sar    rax,0x3
   140028d6d:	cmp    rax,0x1
   140028d71:	jae    0x140028dbe
   140028d73:	sub    rcx,QWORD PTR [rbx]
   140028d76:	movabs r8,0x1fffffffffffffff
   140028d80:	sar    rcx,0x3
   140028d84:	mov    rax,r8
   140028d87:	sub    rax,rcx
   140028d8a:	cmp    rax,0x1
   140028d8e:	jb     0x140028de3
   140028d90:	sub    rdx,QWORD PTR [rbx]
   140028d93:	inc    rcx
   140028d96:	sar    rdx,0x3
   140028d9a:	mov    rax,rdx
   140028d9d:	shr    rax,1
   140028da0:	sub    r8,rax
   140028da3:	cmp    r8,rdx
   140028da6:	jae    0x140028dac
   140028da8:	xor    edx,edx
   140028daa:	jmp    0x140028daf
   140028dac:	add    rdx,rax
   140028daf:	cmp    rdx,rcx
   140028db2:	cmovb  rdx,rcx
   140028db6:	mov    rcx,rbx
   140028db9:	call   0x140028f68
   140028dbe:	mov    rcx,QWORD PTR [rbx+0x8]
   140028dc2:	test   rcx,rcx
   140028dc5:	je     0x140028dcd
   140028dc7:	mov    rax,QWORD PTR [rdi]
   140028dca:	mov    QWORD PTR [rcx],rax
   140028dcd:	add    QWORD PTR [rbx+0x8],0x8
   140028dd2:	mov    rbx,QWORD PTR [rsp+0x30]
   140028dd7:	add    rsp,0x20
   140028ddb:	pop    rdi
   140028ddc:	ret    
   140028ddd:	call   0x14000d388
   140028de2:	int3   
   140028de3:	call   0x14000d388
   140028de8:	int3   
   140028de9:	int3   
   140028dea:	int3   
   140028deb:	int3   
   140028dec:	int3   
   140028ded:	int3   
   140028dee:	int3   
   140028def:	int3   
   140028df0:	mov    QWORD PTR [rsp+0x20],rbx
   140028df5:	mov    QWORD PTR [rsp+0x18],r8
   140028dfa:	push   rbp
   140028dfb:	push   rsi
   140028dfc:	push   rdi
   140028dfd:	push   r14
   140028dff:	push   r15
   140028e01:	sub    rsp,0x30
   140028e05:	mov    rax,QWORD PTR [rip+0x22214]        # 0x14004b020
   140028e0c:	xor    rax,rsp
   140028e0f:	mov    QWORD PTR [rsp+0x20],rax
   140028e14:	mov    rbp,QWORD PTR [rcx+0x8]
   140028e18:	lea    rbx,[r8+0x20]
   140028e1c:	xor    r15d,r15d
   140028e1f:	mov    r14,rdx
   140028e22:	mov    rsi,rcx
   140028e25:	cmp    rbx,rbp
   140028e28:	je     0x140028ea0
   140028e2a:	lea    rdi,[r8+0x18]
   140028e2e:	mov    rax,QWORD PTR [rbx+0x10]
   140028e32:	lea    rcx,[rdi-0x18]
   140028e36:	cmp    QWORD PTR [rdi],rax
   140028e39:	jbe    0x140028e4c
   140028e3b:	or     r9,0xffffffffffffffff
   140028e3f:	xor    r8d,r8d
   140028e42:	mov    rdx,rbx
   140028e45:	call   0x14000d7a0
   140028e4a:	jmp    0x140028e8e
   140028e4c:	cmp    rcx,rbx
   140028e4f:	je     0x140028e77
   140028e51:	mov    rdx,rbx
   140028e54:	call   0x14000db60
   140028e59:	mov    rax,QWORD PTR [rbx+0x10]
   140028e5d:	mov    rcx,QWORD PTR [rdi-0x8]
   140028e61:	mov    QWORD PTR [rdi-0x8],rax
   140028e65:	mov    QWORD PTR [rbx+0x10],rcx
   140028e69:	mov    rax,QWORD PTR [rbx+0x18]
   140028e6d:	mov    rcx,QWORD PTR [rdi]
   140028e70:	mov    QWORD PTR [rdi],rax
   140028e73:	mov    QWORD PTR [rbx+0x18],rcx
   140028e77:	cmp    QWORD PTR [rbx+0x18],0x8
   140028e7c:	mov    QWORD PTR [rbx+0x10],r15
   140028e80:	jb     0x140028e87
   140028e82:	mov    rax,QWORD PTR [rbx]
   140028e85:	jmp    0x140028e8a
   140028e87:	mov    rax,rbx
   140028e8a:	mov    WORD PTR [rax],r15w
   140028e8e:	add    rdi,0x20
   140028e92:	add    rbx,0x20
   140028e96:	cmp    rbx,rbp
   140028e99:	jne    0x140028e2e
   140028e9b:	mov    r8,QWORD PTR [rsp+0x70]
   140028ea0:	mov    rdi,QWORD PTR [rsi+0x8]
   140028ea4:	lea    rbx,[rdi-0x20]
   140028ea8:	cmp    rbx,rdi
   140028eab:	je     0x140028edb
   140028ead:	cmp    QWORD PTR [rbx+0x18],0x8
   140028eb2:	jb     0x140028ebd
   140028eb4:	mov    rcx,QWORD PTR [rbx]
   140028eb7:	call   QWORD PTR [rip+0x970b]        # 0x1400325c8
   140028ebd:	mov    QWORD PTR [rbx+0x18],0x7
   140028ec5:	mov    QWORD PTR [rbx+0x10],r15
   140028ec9:	mov    WORD PTR [rbx],r15w
   140028ecd:	add    rbx,0x20
   140028ed1:	cmp    rbx,rdi
   140028ed4:	jne    0x140028ead
   140028ed6:	mov    r8,QWORD PTR [rsp+0x70]
   140028edb:	add    QWORD PTR [rsi+0x8],0xffffffffffffffe0
   140028ee0:	mov    rax,r14
   140028ee3:	mov    QWORD PTR [r14],r8
   140028ee6:	mov    rcx,QWORD PTR [rsp+0x20]
   140028eeb:	xor    rcx,rsp
   140028eee:	call   0x14002dd00
   140028ef3:	mov    rbx,QWORD PTR [rsp+0x78]
   140028ef8:	add    rsp,0x30
   140028efc:	pop    r15
   140028efe:	pop    r14
   140028f00:	pop    rdi
   140028f01:	pop    rsi
   140028f02:	pop    rbp
   140028f03:	ret    
   140028f04:	int3   
   140028f05:	int3   
   140028f06:	int3   
   140028f07:	int3   
   140028f08:	int3   
   140028f09:	int3   
   140028f0a:	int3   
   140028f0b:	int3   
   140028f0c:	cmp    rdx,r8
   140028f0f:	je     0x140028f5f
   140028f11:	mov    QWORD PTR [rsp+0x8],rbx
   140028f16:	mov    QWORD PTR [rsp+0x10],rsi
   140028f1b:	push   rdi
   140028f1c:	sub    rsp,0x20
   140028f20:	mov    rdi,r8
   140028f23:	mov    rbx,rdx
   140028f26:	xor    esi,esi
   140028f28:	cmp    QWORD PTR [rbx+0x18],0x8
   140028f2d:	jb     0x140028f38
   140028f2f:	mov    rcx,QWORD PTR [rbx]
   140028f32:	call   QWORD PTR [rip+0x9690]        # 0x1400325c8
   140028f38:	mov    QWORD PTR [rbx+0x18],0x7
   140028f40:	mov    QWORD PTR [rbx+0x10],rsi
   140028f44:	mov    WORD PTR [rbx],si
   140028f47:	add    rbx,0x20
   140028f4b:	cmp    rbx,rdi
   140028f4e:	jne    0x140028f28
   140028f50:	mov    rbx,QWORD PTR [rsp+0x30]
   140028f55:	mov    rsi,QWORD PTR [rsp+0x38]
   140028f5a:	add    rsp,0x20
   140028f5e:	pop    rdi
   140028f5f:	ret    
   140028f60:	int3   
   140028f61:	int3   
   140028f62:	int3   
   140028f63:	int3   
   140028f64:	int3   
   140028f65:	int3   
   140028f66:	int3   
   140028f67:	int3   
   140028f68:	mov    rax,rsp
   140028f6b:	push   r14
   140028f6d:	sub    rsp,0x30
   140028f71:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140028f79:	mov    QWORD PTR [rax+0x8],rbx
   140028f7d:	mov    QWORD PTR [rax+0x18],rsi
   140028f81:	mov    QWORD PTR [rax+0x20],rdi
   140028f85:	mov    rsi,rdx
   140028f88:	mov    rdi,rcx
   140028f8b:	xor    ebx,ebx
   140028f8d:	mov    QWORD PTR [rsp+0x48],rbx
   140028f92:	test   rdx,rdx
   140028f95:	je     0x140028fc2
   140028f97:	movabs rax,0x1fffffffffffffff
   140028fa1:	cmp    rdx,rax
   140028fa4:	ja     0x140028fbc
   140028fa6:	mov    rcx,rdx
   140028fa9:	shl    rcx,0x3
   140028fad:	call   0x140023f10
   140028fb2:	mov    rbx,rax
   140028fb5:	mov    QWORD PTR [rsp+0x48],rax
   140028fba:	jmp    0x140028fc2
   140028fbc:	call   0x14000203c
   140028fc1:	nop
   140028fc2:	mov    r8,QWORD PTR [rdi+0x8]
   140028fc6:	sub    r8,QWORD PTR [rdi]
   140028fc9:	and    r8,0xfffffffffffffff8
   140028fcd:	mov    rdx,QWORD PTR [rdi]
   140028fd0:	mov    rcx,rbx
   140028fd3:	call   QWORD PTR [rip+0x94c7]        # 0x1400324a0
   140028fd9:	nop
   140028fda:	mov    rcx,QWORD PTR [rdi]
   140028fdd:	mov    r14,QWORD PTR [rdi+0x8]
   140028fe1:	sub    r14,rcx
   140028fe4:	sar    r14,0x3
   140028fe8:	test   rcx,rcx
   140028feb:	je     0x140028ff3
   140028fed:	call   QWORD PTR [rip+0x95d5]        # 0x1400325c8
   140028ff3:	lea    rax,[rbx+rsi*8]
   140028ff7:	mov    QWORD PTR [rdi+0x10],rax
   140028ffb:	lea    rax,[rbx+r14*8]
   140028fff:	mov    QWORD PTR [rdi+0x8],rax
   140029003:	mov    QWORD PTR [rdi],rbx
   140029006:	mov    rbx,QWORD PTR [rsp+0x40]
   14002900b:	mov    rsi,QWORD PTR [rsp+0x50]
   140029010:	mov    rdi,QWORD PTR [rsp+0x58]
   140029015:	add    rsp,0x30
   140029019:	pop    r14
   14002901b:	ret    
   14002901c:	int3   
   14002901d:	int3   
   14002901e:	int3   
   14002901f:	int3   
   140029020:	int3   
   140029021:	int3   
   140029022:	int3   
   140029023:	int3   
   140029024:	mov    rax,rsp
   140029027:	push   rdi
   140029028:	push   r12
   14002902a:	push   r13
   14002902c:	push   r14
   14002902e:	push   r15
   140029030:	sub    rsp,0x40
   140029034:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   14002903c:	mov    QWORD PTR [rax+0x8],rbx
   140029040:	mov    QWORD PTR [rax+0x18],rsi
   140029044:	mov    rdi,rdx
   140029047:	mov    r14,rcx
   14002904a:	xor    r13d,r13d
   14002904d:	mov    esi,r13d
   140029050:	mov    QWORD PTR [rsp+0x78],r13
   140029055:	test   rdx,rdx
   140029058:	je     0x140029085
   14002905a:	movabs rax,0x7ffffffffffffff
   140029064:	cmp    rdx,rax
   140029067:	ja     0x14002907f
   140029069:	mov    rcx,rdx
   14002906c:	shl    rcx,0x5
   140029070:	call   0x140023f10
   140029075:	mov    rsi,rax
   140029078:	mov    QWORD PTR [rsp+0x78],rax
   14002907d:	jmp    0x140029085
   14002907f:	call   0x14000203c
   140029084:	nop
   140029085:	mov    r8,rsi
   140029088:	mov    rdx,QWORD PTR [r14+0x8]
   14002908c:	mov    rcx,QWORD PTR [r14]
   14002908f:	call   0x140029198
   140029094:	nop
   140029095:	mov    r12,QWORD PTR [r14+0x8]
   140029099:	mov    rbx,QWORD PTR [r14]
   14002909c:	mov    r15,r12
   14002909f:	sub    r15,rbx
   1400290a2:	test   rbx,rbx
   1400290a5:	je     0x1400290db
   1400290a7:	jmp    0x1400290cd
   1400290a9:	cmp    QWORD PTR [rbx+0x18],0x8
   1400290ae:	jb     0x1400290b9
   1400290b0:	mov    rcx,QWORD PTR [rbx]
   1400290b3:	call   QWORD PTR [rip+0x950f]        # 0x1400325c8
   1400290b9:	mov    QWORD PTR [rbx+0x18],0x7
   1400290c1:	mov    QWORD PTR [rbx+0x10],r13
   1400290c5:	mov    WORD PTR [rbx],r13w
   1400290c9:	add    rbx,0x20
   1400290cd:	cmp    rbx,r12
   1400290d0:	jne    0x1400290a9
   1400290d2:	mov    rcx,QWORD PTR [r14]
   1400290d5:	call   QWORD PTR [rip+0x94ed]        # 0x1400325c8
   1400290db:	shl    rdi,0x5
   1400290df:	add    rdi,rsi
   1400290e2:	mov    QWORD PTR [r14+0x10],rdi
   1400290e6:	and    r15,0xffffffffffffffe0
   1400290ea:	add    r15,rsi
   1400290ed:	mov    QWORD PTR [r14+0x8],r15
   1400290f1:	mov    QWORD PTR [r14],rsi
   1400290f4:	lea    r11,[rsp+0x40]
   1400290f9:	mov    rbx,QWORD PTR [r11+0x30]
   1400290fd:	mov    rsi,QWORD PTR [r11+0x40]
   140029101:	mov    rsp,r11
   140029104:	pop    r15
   140029106:	pop    r14
   140029108:	pop    r13
   14002910a:	pop    r12
   14002910c:	pop    rdi
   14002910d:	ret    
   14002910e:	int3   
   14002910f:	int3   
   140029110:	int3   
   140029111:	int3   
   140029112:	int3   
   140029113:	int3   
   140029114:	test   rdx,rdx
   140029117:	je     0x14002918f
   140029119:	mov    QWORD PTR [rsp+0x8],rbx
   14002911e:	mov    QWORD PTR [rsp+0x20],rsi
   140029123:	push   rdi
   140029124:	sub    rsp,0x20
   140029128:	xor    esi,esi
   14002912a:	mov    QWORD PTR [rdx+0x18],0x7
   140029132:	mov    rbx,r8
   140029135:	mov    QWORD PTR [rdx+0x10],rsi
   140029139:	mov    WORD PTR [rdx],si
   14002913c:	mov    rdi,rdx
   14002913f:	cmp    rdx,rbx
   140029142:	je     0x14002916f
   140029144:	mov    rdx,rbx
   140029147:	mov    rcx,rdi
   14002914a:	call   0x14000db60
   14002914f:	mov    rax,QWORD PTR [rbx+0x10]
   140029153:	mov    rcx,QWORD PTR [rdi+0x10]
   140029157:	mov    QWORD PTR [rdi+0x10],rax
   14002915b:	mov    QWORD PTR [rbx+0x10],rcx
   14002915f:	mov    rax,QWORD PTR [rbx+0x18]
   140029163:	mov    rcx,QWORD PTR [rdi+0x18]
   140029167:	mov    QWORD PTR [rdi+0x18],rax
   14002916b:	mov    QWORD PTR [rbx+0x18],rcx
   14002916f:	cmp    QWORD PTR [rbx+0x18],0x8
   140029174:	mov    QWORD PTR [rbx+0x10],rsi
   140029178:	jb     0x14002917d
   14002917a:	mov    rbx,QWORD PTR [rbx]
   14002917d:	mov    WORD PTR [rbx],si
   140029180:	mov    rbx,QWORD PTR [rsp+0x30]
   140029185:	mov    rsi,QWORD PTR [rsp+0x48]
   14002918a:	add    rsp,0x20
   14002918e:	pop    rdi
   14002918f:	ret    
   140029190:	int3   
   140029191:	int3   
   140029192:	int3   
   140029193:	int3   
   140029194:	int3   
   140029195:	int3   
   140029196:	int3   
   140029197:	int3   
   140029198:	mov    rax,rsp
   14002919b:	mov    QWORD PTR [rax+0x20],r9
   14002919f:	mov    QWORD PTR [rax+0x18],r8
   1400291a3:	push   rdi
   1400291a4:	sub    rsp,0x30
   1400291a8:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   1400291b0:	mov    QWORD PTR [rax+0x8],rbx
   1400291b4:	mov    QWORD PTR [rax+0x10],rsi
   1400291b8:	mov    rbx,r8
   1400291bb:	mov    rsi,rdx
   1400291be:	mov    rdi,rcx
   1400291c1:	mov    QWORD PTR [rsp+0x58],rbx
   1400291c6:	cmp    rcx,rdx
   1400291c9:	je     0x1400291e8
   1400291cb:	mov    r8,rdi
   1400291ce:	mov    rdx,rbx
   1400291d1:	call   0x140029114
   1400291d6:	add    rbx,0x20
   1400291da:	mov    QWORD PTR [rsp+0x50],rbx
   1400291df:	add    rdi,0x20
   1400291e3:	cmp    rdi,rsi
   1400291e6:	jne    0x1400291cb
   1400291e8:	mov    rax,rbx
   1400291eb:	mov    rbx,QWORD PTR [rsp+0x40]
   1400291f0:	mov    rsi,QWORD PTR [rsp+0x48]
   1400291f5:	add    rsp,0x30
   1400291f9:	pop    rdi
   1400291fa:	ret    
   1400291fb:	int3   
   1400291fc:	int3   
   1400291fd:	int3   
   1400291fe:	int3   
   1400291ff:	int3   
   140029200:	int3   
   140029201:	int3   
   140029202:	int3   
   140029203:	int3   
   140029204:	int3   
   140029205:	int3   
   140029206:	int3   
   140029207:	int3   
   140029208:	int3   
   140029209:	int3   
   14002920a:	int3   
   14002920b:	int3   
   14002920c:	int3   
   14002920d:	int3   
   14002920e:	int3   
   14002920f:	int3   
   140029210:	mov    QWORD PTR [rsp+0x8],rbx
   140029215:	push   rdi
   140029216:	sub    rsp,0x20
   14002921a:	mov    ebx,edx
   14002921c:	mov    rdi,rcx
   14002921f:	call   0x140029248
   140029224:	test   bl,0x1
   140029227:	je     0x140029232
   140029229:	mov    rcx,rdi
   14002922c:	call   QWORD PTR [rip+0x9396]        # 0x1400325c8
   140029232:	mov    rax,rdi
   140029235:	mov    rbx,QWORD PTR [rsp+0x30]
   14002923a:	add    rsp,0x20
   14002923e:	pop    rdi
   14002923f:	ret    
   140029240:	int3   
   140029241:	int3   
   140029242:	int3   
   140029243:	int3   
   140029244:	int3   
   140029245:	int3   
   140029246:	int3   
   140029247:	int3   
   140029248:	rex push rbx
   14002924a:	sub    rsp,0x20
   14002924e:	lea    rax,[rip+0xba9b]        # 0x140034cf0
   140029255:	mov    rbx,rcx
   140029258:	mov    QWORD PTR [rcx],rax
   14002925b:	call   0x140029278
   140029260:	lea    rax,[rip+0xb641]        # 0x1400348a8
   140029267:	mov    QWORD PTR [rbx],rax
   14002926a:	add    rsp,0x20
   14002926e:	pop    rbx
   14002926f:	ret    
   140029270:	int3   
   140029271:	int3   
   140029272:	int3   
   140029273:	int3   
   140029274:	int3   
   140029275:	int3   
   140029276:	int3   
   140029277:	int3   
   140029278:	rex push rbx
   14002927a:	sub    rsp,0x20
   14002927e:	mov    rbx,rcx
   140029281:	mov    rcx,QWORD PTR [rcx+0x18]
   140029285:	test   rcx,rcx
   140029288:	je     0x140029295
   14002928a:	call   QWORD PTR [rip+0x91b8]        # 0x140032448
   140029290:	and    QWORD PTR [rbx+0x18],0x0
   140029295:	and    QWORD PTR [rbx+0x30],0x0
   14002929a:	and    QWORD PTR [rbx+0x28],0x0
   14002929f:	and    QWORD PTR [rbx+0x40],0x0
   1400292a4:	and    QWORD PTR [rbx+0x38],0x0
   1400292a9:	mov    BYTE PTR [rbx+0x48],0x0
   1400292ad:	add    rsp,0x20
   1400292b1:	pop    rbx
   1400292b2:	ret    
   1400292b3:	int3   
   1400292b4:	int3   
   1400292b5:	int3   
   1400292b6:	int3   
   1400292b7:	int3   
   1400292b8:	int3   
   1400292b9:	int3   
   1400292ba:	int3   
   1400292bb:	int3   
   1400292bc:	mov    QWORD PTR [rsp+0x10],rbx
   1400292c1:	mov    QWORD PTR [rsp+0x18],rbp
   1400292c6:	mov    QWORD PTR [rsp+0x20],rsi
   1400292cb:	push   rdi
   1400292cc:	push   r12
   1400292ce:	push   r13
   1400292d0:	push   r14
   1400292d2:	push   r15
   1400292d4:	sub    rsp,0x20
   1400292d8:	mov    rsi,QWORD PTR [rcx+0x28]
   1400292dc:	lea    rbp,[r8+0xf]
   1400292e0:	mov    rax,QWORD PTR [rcx+0x30]
   1400292e4:	and    rbp,0xfffffffffffffff8
   1400292e8:	add    rbp,rsi
   1400292eb:	mov    r13,r9
   1400292ee:	mov    r14,r8
   1400292f1:	mov    r12d,edx
   1400292f4:	mov    rdi,rcx
   1400292f7:	cmp    rax,rbp
   1400292fa:	jbe    0x140029351
   1400292fc:	mov    QWORD PTR [rcx+0x28],rbp
   140029300:	mov    rbx,QWORD PTR [rdi+0x18]
   140029304:	mov    DWORD PTR [rbx+rsi*1+0xc],r14d
   140029309:	mov    DWORD PTR [rbx+rsi*1+0x8],r12d
   14002930e:	test   r14d,r14d
   140029311:	je     0x140029325
   140029313:	lea    rcx,[rsi+0x10]
   140029317:	mov    r8d,r14d
   14002931a:	add    rcx,rbx
   14002931d:	mov    rdx,r13
   140029320:	call   0x14002e2f2
   140029325:	mov    rcx,QWORD PTR [rsp+0x70]
   14002932a:	test   rcx,rcx
   14002932d:	je     0x1400293e8
   140029333:	mov    BYTE PTR [rdi+0x4a],0x1
   140029337:	cmp    DWORD PTR [rbx+rsi*1+0xc],0x0
   14002933c:	je     0x1400293e4
   140029342:	lea    rax,[rsi+0x10]
   140029346:	add    rax,rbx
   140029349:	mov    QWORD PTR [rcx],rax
   14002934c:	jmp    0x1400293e8
   140029351:	shr    rax,1
   140029354:	mov    ecx,0x40
   140029359:	lea    r15,[rax+rax*2]
   14002935d:	lea    rax,[r15-0x1]
   140029361:	cmp    rax,0x3e
   140029365:	cmovbe r15,rcx
   140029369:	lea    rcx,[rsp+0x50]
   14002936e:	cmp    r15,rbp
   140029371:	cmovb  r15,rbp
   140029375:	and    QWORD PTR [rsp+0x50],0x0
   14002937b:	lea    rdx,[r15+0x8]
   14002937f:	call   0x140029984
   140029384:	mov    ebx,eax
   140029386:	test   eax,eax
   140029388:	jns    0x14002939c
   14002938a:	mov    rcx,QWORD PTR [rsp+0x50]
   14002938f:	test   rcx,rcx
   140029392:	je     0x1400293d8
   140029394:	call   QWORD PTR [rip+0x90ae]        # 0x140032448
   14002939a:	jmp    0x1400293d8
   14002939c:	mov    rdx,QWORD PTR [rdi+0x18]
   1400293a0:	mov    rbx,QWORD PTR [rsp+0x50]
   1400293a5:	test   rdx,rdx
   1400293a8:	je     0x1400293bb
   1400293aa:	mov    r8,QWORD PTR [rdi+0x28]
   1400293ae:	mov    rcx,rbx
   1400293b1:	add    r8,0x8
   1400293b5:	call   QWORD PTR [rip+0x90e5]        # 0x1400324a0
   1400293bb:	mov    QWORD PTR [rdi+0x30],r15
   1400293bf:	mov    QWORD PTR [rdi+0x28],rbp
   1400293c3:	mov    rcx,QWORD PTR [rdi+0x18]
   1400293c7:	mov    QWORD PTR [rdi+0x18],rbx
   1400293cb:	test   rcx,rcx
   1400293ce:	je     0x1400293d6
   1400293d0:	call   QWORD PTR [rip+0x9072]        # 0x140032448
   1400293d6:	xor    ebx,ebx
   1400293d8:	test   ebx,ebx
   1400293da:	jns    0x140029300
   1400293e0:	mov    eax,ebx
   1400293e2:	jmp    0x1400293ee
   1400293e4:	and    QWORD PTR [rcx],0x0
   1400293e8:	inc    QWORD PTR [rdi+0x40]
   1400293ec:	xor    eax,eax
   1400293ee:	mov    rbx,QWORD PTR [rsp+0x58]
   1400293f3:	mov    rbp,QWORD PTR [rsp+0x60]
   1400293f8:	mov    rsi,QWORD PTR [rsp+0x68]
   1400293fd:	add    rsp,0x20
   140029401:	pop    r15
   140029403:	pop    r14
   140029405:	pop    r13
   140029407:	pop    r12
   140029409:	pop    rdi
   14002940a:	ret    
   14002940b:	int3   
   14002940c:	int3   
   14002940d:	int3   
   14002940e:	int3   
   14002940f:	int3   
   140029410:	int3   
   140029411:	int3   
   140029412:	int3   
   140029413:	int3   
   140029414:	mov    QWORD PTR [rsp+0x8],rbx
   140029419:	mov    QWORD PTR [rsp+0x18],rsi
   14002941e:	push   rdi
   14002941f:	sub    rsp,0x20
   140029423:	mov    rdi,r8
   140029426:	mov    rsi,rcx
   140029429:	cmp    rdx,0x8
   14002942d:	jae    0x140029439
   14002942f:	mov    eax,0x80070057
   140029434:	jmp    0x1400294be
   140029439:	mov    ecx,DWORD PTR [r8+0x4]
   14002943d:	lea    rax,[rcx+0xf]
   140029441:	and    rax,0xfffffffffffffff8
   140029445:	cmp    rdx,rax
   140029448:	jne    0x14002942f
   14002944a:	and    QWORD PTR [rsp+0x38],0x0
   140029450:	lea    rdx,[rcx+0x8]
   140029454:	lea    rcx,[rsp+0x38]
   140029459:	call   0x140029984
   14002945e:	mov    ebx,eax
   140029460:	test   eax,eax
   140029462:	jns    0x14002946b
   140029464:	mov    rdi,QWORD PTR [rsp+0x38]
   140029469:	jmp    0x1400294ae
   14002946b:	mov    r8d,DWORD PTR [rdi+0x4]
   14002946f:	mov    rdx,rdi
   140029472:	mov    rbx,QWORD PTR [rsp+0x38]
   140029477:	add    r8,0x8
   14002947b:	mov    rcx,rbx
   14002947e:	call   QWORD PTR [rip+0x901c]        # 0x1400324a0
   140029484:	mov    eax,DWORD PTR [rdi]
   140029486:	xor    edx,edx
   140029488:	mov    DWORD PTR [rsi+0x10],eax
   14002948b:	mov    rcx,rsi
   14002948e:	mov    eax,DWORD PTR [rdi+0x4]
   140029491:	mov    QWORD PTR [rsi+0x28],rax
   140029495:	mov    QWORD PTR [rsi+0x30],rax
   140029499:	mov    rdi,QWORD PTR [rsi+0x18]
   14002949d:	mov    QWORD PTR [rsi+0x18],rbx
   1400294a1:	call   0x14002965c
   1400294a6:	mov    ebx,eax
   1400294a8:	test   eax,eax
   1400294aa:	js     0x1400294ae
   1400294ac:	xor    ebx,ebx
   1400294ae:	test   rdi,rdi
   1400294b1:	je     0x1400294bc
   1400294b3:	mov    rcx,rdi
   1400294b6:	call   QWORD PTR [rip+0x8f8c]        # 0x140032448
   1400294bc:	mov    eax,ebx
   1400294be:	mov    rbx,QWORD PTR [rsp+0x30]
   1400294c3:	mov    rsi,QWORD PTR [rsp+0x40]
   1400294c8:	add    rsp,0x20
   1400294cc:	pop    rdi
   1400294cd:	ret    
   1400294ce:	int3   
   1400294cf:	int3   
   1400294d0:	int3   
   1400294d1:	int3   
   1400294d2:	int3   
   1400294d3:	int3   
   1400294d4:	rex push rbx
   1400294d6:	sub    rsp,0x20
   1400294da:	xor    eax,eax
   1400294dc:	lea    r9,[rsp+0x38]
   1400294e1:	cmp    BYTE PTR [rdx],al
   1400294e3:	mov    rbx,rdx
   1400294e6:	mov    edx,0x5
   1400294eb:	setne  al
   1400294ee:	mov    DWORD PTR [rsp+0x38],eax
   1400294f2:	lea    r8d,[rdx-0x1]
   1400294f6:	call   0x140029600
   1400294fb:	test   eax,eax
   1400294fd:	js     0x14002950b
   1400294ff:	cmp    DWORD PTR [rsp+0x38],0x0
   140029504:	setne  al
   140029507:	mov    BYTE PTR [rbx],al
   140029509:	xor    eax,eax
   14002950b:	add    rsp,0x20
   14002950f:	pop    rbx
   140029510:	ret    
   140029511:	int3   
   140029512:	int3   
   140029513:	int3   
   140029514:	int3   
   140029515:	int3   
   140029516:	int3   
   140029517:	int3   
   140029518:	sub    rsp,0x38
   14002951c:	xor    r11d,r11d
   14002951f:	mov    r10,rdx
   140029522:	cmp    BYTE PTR [rcx+0x49],r11b
   140029526:	je     0x140029552
   140029528:	mov    r9,QWORD PTR [rdx]
   14002952b:	or     r8,0xffffffffffffffff
   14002952f:	inc    r8
   140029532:	cmp    WORD PTR [r9+r8*2],r11w
   140029537:	jne    0x14002952f
   140029539:	mov    QWORD PTR [rsp+0x20],rdx
   14002953e:	lea    r8,[r8*2+0x2]
   140029546:	mov    edx,0x1
   14002954b:	call   0x1400292bc
   140029550:	jmp    0x14002958c
   140029552:	call   0x1400296e8
   140029557:	mov    r9,rax
   14002955a:	test   rax,rax
   14002955d:	jne    0x140029566
   14002955f:	mov    eax,0x80070057
   140029564:	jmp    0x14002958c
   140029566:	cmp    DWORD PTR [rax],0x1
   140029569:	jne    0x14002955f
   14002956b:	mov    eax,DWORD PTR [rax+0x4]
   14002956e:	test   al,0x1
   140029570:	jne    0x14002955f
   140029572:	cmp    rax,0x2
   140029576:	jb     0x14002955f
   140029578:	add    r9,0x8
   14002957c:	shr    rax,1
   14002957f:	cmp    WORD PTR [r9+rax*2-0x2],r11w
   140029585:	jne    0x14002955f
   140029587:	mov    QWORD PTR [r10],r9
   14002958a:	xor    eax,eax
   14002958c:	add    rsp,0x38
   140029590:	ret    
   140029591:	int3   
   140029592:	int3   
   140029593:	int3   
   140029594:	int3   
   140029595:	int3   
   140029596:	int3   
   140029597:	int3   
   140029598:	sub    rsp,0x38
   14002959c:	cmp    BYTE PTR [rcx+0x49],0x0
   1400295a0:	mov    r10,r8
   1400295a3:	mov    r11,rdx
   1400295a6:	je     0x1400295bf
   1400295a8:	mov    r9,QWORD PTR [r8]
   1400295ab:	mov    QWORD PTR [rsp+0x20],r8
   1400295b0:	mov    r8,QWORD PTR [rdx]
   1400295b3:	mov    edx,0x3
   1400295b8:	call   0x1400292bc
   1400295bd:	jmp    0x1400295f4
   1400295bf:	call   0x1400296e8
   1400295c4:	mov    r9,rax
   1400295c7:	test   rax,rax
   1400295ca:	jne    0x1400295d3
   1400295cc:	mov    eax,0x80070057
   1400295d1:	jmp    0x1400295f4
   1400295d3:	cmp    DWORD PTR [rax],0x3
   1400295d6:	jne    0x1400295cc
   1400295d8:	cmp    DWORD PTR [rax+0x4],0x0
   1400295dc:	je     0x1400295e7
   1400295de:	add    rax,0x8
   1400295e2:	mov    QWORD PTR [r10],rax
   1400295e5:	jmp    0x1400295eb
   1400295e7:	and    QWORD PTR [r10],0x0
   1400295eb:	mov    eax,DWORD PTR [r9+0x4]
   1400295ef:	mov    QWORD PTR [r11],rax
   1400295f2:	xor    eax,eax
   1400295f4:	add    rsp,0x38
   1400295f8:	ret    
   1400295f9:	int3   
   1400295fa:	int3   
   1400295fb:	int3   
   1400295fc:	int3   
   1400295fd:	int3   
   1400295fe:	int3   
   1400295ff:	int3   
   140029600:	sub    rsp,0x38
   140029604:	cmp    BYTE PTR [rcx+0x49],0x0
   140029608:	mov    r10,r8
   14002960b:	mov    r11d,edx
   14002960e:	je     0x14002961d
   140029610:	and    QWORD PTR [rsp+0x20],0x0
   140029616:	call   0x1400292bc
   14002961b:	jmp    0x140029650
   14002961d:	call   0x1400296e8
   140029622:	mov    rdx,rax
   140029625:	test   rax,rax
   140029628:	jne    0x140029631
   14002962a:	mov    eax,0x80070057
   14002962f:	jmp    0x140029650
   140029631:	cmp    DWORD PTR [rax],r11d
   140029634:	jne    0x14002962a
   140029636:	mov    eax,DWORD PTR [rax+0x4]
   140029639:	cmp    rax,r10
   14002963c:	jne    0x14002962a
   14002963e:	add    rdx,0x8
   140029642:	mov    r8,r10
   140029645:	mov    rcx,r9
   140029648:	call   QWORD PTR [rip+0x8e52]        # 0x1400324a0
   14002964e:	xor    eax,eax
   140029650:	add    rsp,0x38
   140029654:	ret    
   140029655:	int3   
   140029656:	int3   
   140029657:	int3   
   140029658:	int3   
   140029659:	int3   
   14002965a:	int3   
   14002965b:	int3   
   14002965c:	mov    QWORD PTR [rsp+0x8],rbx
   140029661:	mov    QWORD PTR [rsp+0x10],rsi
   140029666:	push   rdi
   140029667:	sub    rsp,0x20
   14002966b:	mov    rax,QWORD PTR [rcx]
   14002966e:	xor    esi,esi
   140029670:	mov    rdi,rcx
   140029673:	mov    BYTE PTR [rcx+0x49],dl
   140029676:	mov    BYTE PTR [rcx+0x4a],sil
   14002967a:	mov    QWORD PTR [rcx+0x38],rsi
   14002967e:	mov    rbx,QWORD PTR [rax+0x8]
   140029682:	mov    rcx,rbx
   140029685:	call   QWORD PTR [rip+0x901d]        # 0x1400326a8
   14002968b:	mov    rcx,rdi
   14002968e:	call   rbx
   140029690:	mov    ebx,eax
   140029692:	test   eax,eax
   140029694:	jns    0x1400296a2
   140029696:	mov    rcx,rdi
   140029699:	call   0x140029278
   14002969e:	mov    eax,ebx
   1400296a0:	jmp    0x1400296cf
   1400296a2:	cmp    BYTE PTR [rdi+0x4a],sil
   1400296a6:	je     0x1400296c9
   1400296a8:	mov    rax,QWORD PTR [rdi]
   1400296ab:	mov    BYTE PTR [rdi+0x49],sil
   1400296af:	mov    rbx,QWORD PTR [rax+0x8]
   1400296b3:	mov    rcx,rbx
   1400296b6:	call   QWORD PTR [rip+0x8fec]        # 0x1400326a8
   1400296bc:	mov    rcx,rdi
   1400296bf:	call   rbx
   1400296c1:	mov    ebx,eax
   1400296c3:	test   eax,eax
   1400296c5:	js     0x140029696
   1400296c7:	mov    esi,eax
   1400296c9:	mov    BYTE PTR [rdi+0x48],0x1
   1400296cd:	mov    eax,esi
   1400296cf:	mov    rbx,QWORD PTR [rsp+0x30]
   1400296d4:	mov    rsi,QWORD PTR [rsp+0x38]
   1400296d9:	add    rsp,0x20
   1400296dd:	pop    rdi
   1400296de:	ret    
   1400296df:	int3   
   1400296e0:	int3   
   1400296e1:	int3   
   1400296e2:	int3   
   1400296e3:	int3   
   1400296e4:	int3   
   1400296e5:	int3   
   1400296e6:	int3   
   1400296e7:	int3   
   1400296e8:	mov    r8,QWORD PTR [rcx+0x38]
   1400296ec:	mov    rdx,rcx
   1400296ef:	cmp    r8,QWORD PTR [rcx+0x28]
   1400296f3:	jae    0x140029723
   1400296f5:	cmp    BYTE PTR [rcx+0x49],0x0
   1400296f9:	jne    0x140029723
   1400296fb:	lea    rax,[r8+0x8]
   1400296ff:	cmp    rax,QWORD PTR [rcx+0x28]
   140029703:	ja     0x140029723
   140029705:	mov    rax,QWORD PTR [rcx+0x18]
   140029709:	add    rax,0x8
   14002970d:	add    rax,r8
   140029710:	mov    ecx,DWORD PTR [rax+0x4]
   140029713:	add    rcx,0xf
   140029717:	and    rcx,0xfffffffffffffff8
   14002971b:	add    rcx,r8
   14002971e:	mov    QWORD PTR [rdx+0x38],rcx
   140029722:	ret    
   140029723:	xor    eax,eax
   140029725:	ret    
   140029726:	int3   
   140029727:	int3   
   140029728:	int3   
   140029729:	int3   
   14002972a:	int3   
   14002972b:	int3   
   14002972c:	mov    rax,rsp
   14002972f:	mov    QWORD PTR [rax+0x8],rbx
   140029733:	mov    QWORD PTR [rax+0x10],rbp
   140029737:	mov    QWORD PTR [rax+0x18],rsi
   14002973b:	mov    QWORD PTR [rax+0x20],rdi
   14002973f:	push   r14
   140029741:	sub    rsp,0x30
   140029745:	mov    rdi,r9
   140029748:	mov    rsi,r8
   14002974b:	mov    ebp,edx
   14002974d:	mov    r14,rcx
   140029750:	call   QWORD PTR [rip+0x8cfa]        # 0x140032450
   140029756:	mov    rbx,QWORD PTR [rax+0x18]
   14002975a:	mov    rcx,rbx
   14002975d:	call   QWORD PTR [rip+0x8f45]        # 0x1400326a8
   140029763:	mov    r9,rdi
   140029766:	mov    r8,rsi
   140029769:	mov    edx,ebp
   14002976b:	mov    rcx,r14
   14002976e:	mov    rax,rbx
   140029771:	mov    rbx,QWORD PTR [rsp+0x40]
   140029776:	mov    rbp,QWORD PTR [rsp+0x48]
   14002977b:	mov    rsi,QWORD PTR [rsp+0x50]
   140029780:	mov    rdi,QWORD PTR [rsp+0x58]
   140029785:	add    rsp,0x30
   140029789:	pop    r14
   14002978b:	rex.W jmp rax
   14002978e:	int3   
   14002978f:	int3   
   140029790:	int3   
   140029791:	int3   
   140029792:	int3   
   140029793:	int3   
   140029794:	rex push rbp
   140029796:	push   rbx
   140029797:	push   rsi
   140029798:	push   rdi
   140029799:	mov    rbp,rsp
   14002979c:	sub    rsp,0x78
   1400297a0:	mov    rax,QWORD PTR [rip+0x21879]        # 0x14004b020
   1400297a7:	xor    rax,rsp
   1400297aa:	mov    QWORD PTR [rbp-0x18],rax
   1400297ae:	mov    rdi,r9
   1400297b1:	mov    rsi,r8
   1400297b4:	test   r8,r8
   1400297b7:	je     0x140029870
   1400297bd:	test   r9,r9
   1400297c0:	je     0x140029870
   1400297c6:	and    DWORD PTR [rbp-0x38],0x0
   1400297ca:	lea    rax,[rbp-0x48]
   1400297ce:	mov    DWORD PTR [rbp-0x48],0x3b8e31d1
   1400297d5:	lea    r9,[rbp-0x38]
   1400297d9:	mov    DWORD PTR [rbp-0x44],0x4c6b2102
   1400297e0:	mov    r8,rdx
   1400297e3:	mov    DWORD PTR [rbp-0x40],0xea8deae
   1400297ea:	mov    edx,ecx
   1400297ec:	mov    DWORD PTR [rbp-0x3c],0xc8644041
   1400297f3:	lea    rcx,[rbp-0x28]
   1400297f7:	movaps xmm0,XMMWORD PTR [rbp-0x48]
   1400297fb:	and    QWORD PTR [rbp-0x48],0x0
   140029800:	movdqa XMMWORD PTR [rbp-0x28],xmm0
   140029805:	mov    QWORD PTR [rsp+0x20],rax
   14002980a:	call   0x14002972c
   14002980f:	mov    ebx,eax
   140029811:	test   eax,eax
   140029813:	jns    0x14002984c
   140029815:	mov    rcx,QWORD PTR [rip+0x2185c]        # 0x14004b078
   14002981c:	lea    rax,[rip+0x21855]        # 0x14004b078
   140029823:	cmp    rcx,rax
   140029826:	je     0x140029846
   140029828:	test   BYTE PTR [rcx+0x1c],0x1
   14002982c:	je     0x140029846
   14002982e:	mov    rcx,QWORD PTR [rcx+0x10]
   140029832:	lea    r8,[rip+0x13a5f]        # 0x14003d298
   140029839:	mov    edx,0x14
   14002983e:	mov    r9d,ebx
   140029841:	call   0x140001f70
   140029846:	mov    rcx,QWORD PTR [rbp-0x48]
   14002984a:	jmp    0x140029861
   14002984c:	mov    eax,DWORD PTR [rbp-0x38]
   14002984f:	xor    ecx,ecx
   140029851:	mov    QWORD PTR [rsi],rax
   140029854:	xor    ebx,ebx
   140029856:	mov    rax,QWORD PTR [rbp-0x48]
   14002985a:	mov    QWORD PTR [rdi],rax
   14002985d:	mov    QWORD PTR [rbp-0x48],rcx
   140029861:	test   rcx,rcx
   140029864:	je     0x14002986c
   140029866:	call   QWORD PTR [rip+0x8bdc]        # 0x140032448
   14002986c:	mov    eax,ebx
   14002986e:	jmp    0x140029875
   140029870:	mov    eax,0x80070057
   140029875:	mov    rcx,QWORD PTR [rbp-0x18]
   140029879:	xor    rcx,rsp
   14002987c:	call   0x14002dd00
   140029881:	add    rsp,0x78
   140029885:	pop    rdi
   140029886:	pop    rsi
   140029887:	pop    rbx
   140029888:	pop    rbp
   140029889:	ret    
   14002988a:	int3   
   14002988b:	int3   
   14002988c:	int3   
   14002988d:	int3   
   14002988e:	int3   
   14002988f:	int3   
   140029890:	mov    QWORD PTR [rsp+0x8],rbx
   140029895:	push   rbp
   140029896:	push   rsi
   140029897:	push   rdi
   140029898:	mov    rbp,rsp
   14002989b:	sub    rsp,0x40
   14002989f:	and    QWORD PTR [rdx],0x0
   1400298a3:	mov    rdi,rdx
   1400298a6:	and    DWORD PTR [rbp+0x28],0x0
   1400298aa:	mov    rsi,rcx
   1400298ad:	call   QWORD PTR [rip+0x8b9d]        # 0x140032450
   1400298b3:	mov    rbx,QWORD PTR [rax+0x98]
   1400298ba:	mov    rcx,rbx
   1400298bd:	call   QWORD PTR [rip+0x8de5]        # 0x1400326a8
   1400298c3:	lea    rcx,[rbp+0x28]
   1400298c7:	call   rbx
   1400298c9:	test   eax,eax
   1400298cb:	js     0x14002996f
   1400298d1:	cmp    DWORD PTR [rbp+0x28],0x0
   1400298d5:	je     0x14002996f
   1400298db:	and    QWORD PTR [rbp-0x8],0x0
   1400298e0:	lea    rdx,[rbp-0x8]
   1400298e4:	lea    rcx,[rip+0x139bd]        # 0x14003d2a8
   1400298eb:	call   QWORD PTR [rip+0x8b3f]        # 0x140032430
   1400298f1:	mov    ebx,eax
   1400298f3:	test   eax,eax
   1400298f5:	js     0x14002995c
   1400298f7:	and    QWORD PTR [rbp-0x10],0x0
   1400298fc:	and    DWORD PTR [rbp+0x30],0x0
   140029900:	mov    DWORD PTR [rbp+0x38],0x2
   140029907:	and    QWORD PTR [rsp+0x28],0x0
   14002990d:	lea    rax,[rbp-0x10]
   140029911:	mov    rcx,QWORD PTR [rbp-0x8]
   140029915:	lea    r9,[rbp+0x30]
   140029919:	lea    r8,[rbp+0x38]
   14002991d:	mov    QWORD PTR [rsp+0x20],rax
   140029922:	mov    rdx,rsi
   140029925:	call   QWORD PTR [rip+0x8af5]        # 0x140032420
   14002992b:	mov    ebx,eax
   14002992d:	cmp    eax,0x80070002
   140029932:	jne    0x140029938
   140029934:	xor    ebx,ebx
   140029936:	jmp    0x14002993c
   140029938:	test   eax,eax
   14002993a:	jns    0x140029942
   14002993c:	mov    rcx,QWORD PTR [rbp-0x10]
   140029940:	jmp    0x140029951
   140029942:	mov    rax,QWORD PTR [rbp-0x10]
   140029946:	xor    ecx,ecx
   140029948:	mov    QWORD PTR [rbp-0x10],rcx
   14002994c:	xor    ebx,ebx
   14002994e:	mov    QWORD PTR [rdi],rax
   140029951:	test   rcx,rcx
   140029954:	je     0x14002995c
   140029956:	call   QWORD PTR [rip+0x8aec]        # 0x140032448
   14002995c:	mov    rcx,QWORD PTR [rbp-0x8]
   140029960:	test   rcx,rcx
   140029963:	je     0x14002996b
   140029965:	call   QWORD PTR [rip+0x8a85]        # 0x1400323f0
   14002996b:	mov    eax,ebx
   14002996d:	jmp    0x140029971
   14002996f:	xor    eax,eax
   140029971:	mov    rbx,QWORD PTR [rsp+0x60]
   140029976:	add    rsp,0x40
   14002997a:	pop    rdi
   14002997b:	pop    rsi
   14002997c:	pop    rbp
   14002997d:	ret    
   14002997e:	int3   
   14002997f:	int3   
   140029980:	int3   
   140029981:	int3   
   140029982:	int3   
   140029983:	int3   
   140029984:	rex push rbx
   140029986:	sub    rsp,0x20
   14002998a:	mov    rbx,rcx
   14002998d:	mov    rcx,rdx
   140029990:	call   QWORD PTR [rip+0x8a7a]        # 0x140032410
   140029996:	test   rax,rax
   140029999:	jne    0x1400299a2
   14002999b:	mov    eax,0x8007000e
   1400299a0:	jmp    0x1400299a7
   1400299a2:	mov    QWORD PTR [rbx],rax
   1400299a5:	xor    eax,eax
   1400299a7:	add    rsp,0x20
   1400299ab:	pop    rbx
   1400299ac:	ret    
   1400299ad:	int3   
   1400299ae:	int3   
   1400299af:	int3   
   1400299b0:	int3   
   1400299b1:	int3   
   1400299b2:	int3   
   1400299b3:	int3   
   1400299b4:	rex push rbx
   1400299b6:	sub    rsp,0x20
   1400299ba:	mov    rbx,rcx
   1400299bd:	lea    rcx,[rdx+rdx*1]
   1400299c1:	mov    rax,rcx
   1400299c4:	shr    rax,1
   1400299c7:	cmp    rax,rdx
   1400299ca:	je     0x1400299d3
   1400299cc:	mov    eax,0x80070057
   1400299d1:	jmp    0x1400299e8
   1400299d3:	call   QWORD PTR [rip+0x8bf7]        # 0x1400325d0
   1400299d9:	mov    QWORD PTR [rbx],rax
   1400299dc:	neg    rax
   1400299df:	sbb    eax,eax
   1400299e1:	not    eax
   1400299e3:	and    eax,0x8007000e
   1400299e8:	add    rsp,0x20
   1400299ec:	pop    rbx
   1400299ed:	ret    
   1400299ee:	int3   
   1400299ef:	int3   
   1400299f0:	int3   
   1400299f1:	int3   
   1400299f2:	int3   
   1400299f3:	int3   
   1400299f4:	mov    edx,0x104
   1400299f9:	mov    r10,r8
   1400299fc:	mov    eax,edx
   1400299fe:	mov    r9,rcx
   140029a01:	xor    r11d,r11d
   140029a04:	cmp    WORD PTR [r9],r11w
   140029a08:	je     0x140029a14
   140029a0a:	add    r9,0x2
   140029a0e:	sub    rax,0x1
   140029a12:	jne    0x140029a04
   140029a14:	test   rax,rax
   140029a17:	je     0x140029a6d
   140029a19:	mov    r8,rdx
   140029a1c:	sub    r8,rax
   140029a1f:	lea    rax,[rcx+r8*2]
   140029a23:	mov    ecx,r11d
   140029a26:	sub    rdx,r8
   140029a29:	je     0x140029a5e
   140029a2b:	add    r8,0x7ffffefa
   140029a32:	add    r8,rdx
   140029a35:	sub    r10,rax
   140029a38:	test   r8,r8
   140029a3b:	je     0x140029a59
   140029a3d:	movzx  r9d,WORD PTR [r10+rax*1]
   140029a42:	test   r9w,r9w
   140029a46:	je     0x140029a59
   140029a48:	mov    WORD PTR [rax],r9w
   140029a4c:	dec    r8
   140029a4f:	add    rax,0x2
   140029a53:	sub    rdx,0x1
   140029a57:	jne    0x140029a38
   140029a59:	test   rdx,rdx
   140029a5c:	jne    0x140029a67
   140029a5e:	sub    rax,0x2
   140029a62:	mov    ecx,0x8007007a
   140029a67:	mov    WORD PTR [rax],r11w
   140029a6b:	jmp    0x140029a72
   140029a6d:	mov    ecx,0x80070057
   140029a72:	mov    eax,ecx
   140029a74:	ret    
   140029a75:	int3   
   140029a76:	int3   
   140029a77:	int3   
   140029a78:	int3   
   140029a79:	int3   
   140029a7a:	int3   
   140029a7b:	int3   
   140029a7c:	int3   
   140029a7d:	int3   
   140029a7e:	int3   
   140029a7f:	int3   
   140029a80:	rex push rbx
   140029a82:	sub    rsp,0x20
   140029a86:	lea    rax,[rip+0xb27b]        # 0x140034d08
   140029a8d:	mov    rbx,rcx
   140029a90:	mov    QWORD PTR [rcx],rax
   140029a93:	test   dl,0x1
   140029a96:	je     0x140029a9e
   140029a98:	call   QWORD PTR [rip+0x8b2a]        # 0x1400325c8
   140029a9e:	mov    rax,rbx
   140029aa1:	add    rsp,0x20
   140029aa5:	pop    rbx
   140029aa6:	ret    
   140029aa7:	int3   
   140029aa8:	int3   
   140029aa9:	int3   
   140029aaa:	int3   
   140029aab:	int3   
   140029aac:	int3   
   140029aad:	int3   
   140029aae:	int3   
   140029aaf:	int3   
   140029ab0:	mov    r8d,DWORD PTR [rcx+0x8]
   140029ab4:	test   r8d,r8d
   140029ab7:	js     0x140029adb
   140029ab9:	lea    edx,[r8+0x1]
   140029abd:	mov    eax,r8d
   140029ac0:	lock cmpxchg DWORD PTR [rcx+0x8],edx
   140029ac5:	cmp    r8d,eax
   140029ac8:	je     0x140029ad3
   140029aca:	mov    r8d,DWORD PTR [rcx+0x8]
   140029ace:	test   r8d,r8d
   140029ad1:	jns    0x140029ab9
   140029ad3:	test   r8d,r8d
   140029ad6:	js     0x140029adb
   140029ad8:	xor    eax,eax
   140029ada:	ret    
   140029adb:	mov    eax,0x80004004
   140029ae0:	ret    
   140029ae1:	int3   
   140029ae2:	int3   
   140029ae3:	int3   
   140029ae4:	int3   
   140029ae5:	int3   
   140029ae6:	int3   
   140029ae7:	int3   
   140029ae8:	sub    rsp,0x28
   140029aec:	or     eax,0xffffffff
   140029aef:	lock xadd DWORD PTR [rcx+0x8],eax
   140029af4:	dec    eax
   140029af6:	cmp    eax,0x80000000
   140029afb:	jne    0x140029b02
   140029afd:	call   0x140029c90
   140029b02:	add    rsp,0x28
   140029b06:	ret    
   140029b07:	int3   
   140029b08:	int3   
   140029b09:	int3   
   140029b0a:	int3   
   140029b0b:	int3   
   140029b0c:	int3   
   140029b0d:	int3   
   140029b0e:	int3   
   140029b0f:	int3   
   140029b10:	mov    QWORD PTR [rsp+0x8],rbx
   140029b15:	push   rdi
   140029b16:	sub    rsp,0x20
   140029b1a:	mov    ebx,edx
   140029b1c:	mov    rdi,rcx
   140029b1f:	call   0x140029b48
   140029b24:	test   bl,0x1
   140029b27:	je     0x140029b32
   140029b29:	mov    rcx,rdi
   140029b2c:	call   QWORD PTR [rip+0x8a96]        # 0x1400325c8
   140029b32:	mov    rax,rdi
   140029b35:	mov    rbx,QWORD PTR [rsp+0x30]
   140029b3a:	add    rsp,0x20
   140029b3e:	pop    rdi
   140029b3f:	ret    
   140029b40:	int3   
   140029b41:	int3   
   140029b42:	int3   
   140029b43:	int3   
   140029b44:	int3   
   140029b45:	int3   
   140029b46:	int3   
   140029b47:	int3   
   140029b48:	rex push rbx
   140029b4a:	sub    rsp,0x20
   140029b4e:	lea    rax,[rip+0xb1cb]        # 0x140034d20
   140029b55:	mov    rbx,rcx
   140029b58:	mov    QWORD PTR [rcx],rax
   140029b5b:	mov    rax,QWORD PTR [rcx+0x10]
   140029b5f:	test   rax,rax
   140029b62:	je     0x140029b6d
   140029b64:	mov    rcx,QWORD PTR [rcx+0x10]
   140029b68:	call   0x14002a08c
   140029b6d:	lea    rax,[rip+0xb194]        # 0x140034d08
   140029b74:	mov    QWORD PTR [rbx],rax
   140029b77:	add    rsp,0x20
   140029b7b:	pop    rbx
   140029b7c:	ret    
   140029b7d:	int3   
   140029b7e:	int3   
   140029b7f:	int3   
   140029b80:	int3   
   140029b81:	int3   
   140029b82:	int3   
   140029b83:	int3   
   140029b84:	mov    QWORD PTR [rsp+0x10],rbx
   140029b89:	push   rdi
   140029b8a:	sub    rsp,0x20
   140029b8e:	mov    rbx,rcx
   140029b91:	mov    ecx,DWORD PTR [rcx+0x8]
   140029b94:	jmp    0x140029baa
   140029b96:	lea    edx,[rcx-0x80000000]
   140029b9c:	mov    eax,ecx
   140029b9e:	lock cmpxchg DWORD PTR [rbx+0x8],edx
   140029ba3:	cmp    ecx,eax
   140029ba5:	je     0x140029bae
   140029ba7:	mov    ecx,DWORD PTR [rbx+0x8]
   140029baa:	test   ecx,ecx
   140029bac:	jns    0x140029b96
   140029bae:	test   ecx,ecx
   140029bb0:	jne    0x140029bba
   140029bb2:	mov    rcx,rbx
   140029bb5:	call   0x140029c90
   140029bba:	xor    edi,edi
   140029bbc:	mov    al,BYTE PTR [rbx+0x19]
   140029bbf:	test   al,al
   140029bc1:	jne    0x140029c76
   140029bc7:	call   QWORD PTR [rip+0x8653]        # 0x140032220
   140029bcd:	inc    rdi
   140029bd0:	cmp    rdi,0x3
   140029bd4:	jb     0x140029bbc
   140029bd6:	jmp    0x140029c5c
   140029bdb:	call   QWORD PTR [rip+0x863f]        # 0x140032220
   140029be1:	mov    rax,QWORD PTR [rbx+0x10]
   140029be5:	test   rax,rax
   140029be8:	je     0x140029c21
   140029bea:	mov    al,BYTE PTR [rbx+0x18]
   140029bed:	test   al,al
   140029bef:	jne    0x140029c5c
   140029bf1:	call   QWORD PTR [rip+0x8629]        # 0x140032220
   140029bf7:	mov    al,BYTE PTR [rbx+0x18]
   140029bfa:	test   al,al
   140029bfc:	jne    0x140029c5c
   140029bfe:	mov    rcx,QWORD PTR [rbx+0x10]
   140029c02:	mov    edx,0x7d0
   140029c07:	call   0x14002a178
   140029c0c:	mov    al,BYTE PTR [rbx+0x18]
   140029c0f:	test   al,al
   140029c11:	jne    0x140029c5c
   140029c13:	mov    rcx,QWORD PTR [rbx+0x10]
   140029c17:	or     edx,0xffffffff
   140029c1a:	call   0x14002a178
   140029c1f:	jmp    0x140029c5c
   140029c21:	xor    r9d,r9d
   140029c24:	xor    r8d,r8d
   140029c27:	xor    ecx,ecx
   140029c29:	lea    edx,[r9+0x1]
   140029c2d:	call   QWORD PTR [rip+0x8565]        # 0x140032198
   140029c33:	mov    rdi,rax
   140029c36:	test   rax,rax
   140029c39:	jne    0x140029c44
   140029c3b:	xor    ecx,ecx
   140029c3d:	call   0x14002a0dc
   140029c42:	jmp    0x140029c46
   140029c44:	xor    eax,eax
   140029c46:	test   eax,eax
   140029c48:	js     0x140029c5c
   140029c4a:	xor    eax,eax
   140029c4c:	lock cmpxchg QWORD PTR [rbx+0x10],rdi
   140029c52:	je     0x140029c5c
   140029c54:	mov    rcx,rdi
   140029c57:	call   0x14002a08c
   140029c5c:	mov    al,BYTE PTR [rbx+0x18]
   140029c5f:	test   al,al
   140029c61:	je     0x140029bdb
   140029c67:	jmp    0x140029c6f
   140029c69:	call   QWORD PTR [rip+0x85b1]        # 0x140032220
   140029c6f:	mov    al,BYTE PTR [rbx+0x19]
   140029c72:	test   al,al
   140029c74:	je     0x140029c69
   140029c76:	mov    rbx,QWORD PTR [rsp+0x38]
   140029c7b:	add    rsp,0x20
   140029c7f:	pop    rdi
   140029c80:	ret    
   140029c81:	int3   
   140029c82:	int3   
   140029c83:	int3   
   140029c84:	int3   
   140029c85:	int3   
   140029c86:	int3   
   140029c87:	int3   
   140029c88:	int3   
   140029c89:	int3   
   140029c8a:	int3   
   140029c8b:	int3   
   140029c8c:	int3   
   140029c8d:	int3   
   140029c8e:	int3   
   140029c8f:	int3   
   140029c90:	rex push rbx
   140029c92:	sub    rsp,0x20
   140029c96:	mov    BYTE PTR [rcx+0x18],0x1
   140029c9a:	mov    rbx,rcx
   140029c9d:	mov    rax,QWORD PTR [rcx+0x10]
   140029ca1:	test   rax,rax
   140029ca4:	je     0x140029caf
   140029ca6:	mov    rcx,QWORD PTR [rcx+0x10]
   140029caa:	call   0x14002a128
   140029caf:	mov    BYTE PTR [rbx+0x19],0x1
   140029cb3:	add    rsp,0x20
   140029cb7:	pop    rbx
   140029cb8:	ret    
   140029cb9:	int3   
   140029cba:	int3   
   140029cbb:	int3   
   140029cbc:	int3   
   140029cbd:	int3   
   140029cbe:	int3   
   140029cbf:	int3   
   140029cc0:	mov    QWORD PTR [rsp+0x8],rbx
   140029cc5:	push   rdi
   140029cc6:	sub    rsp,0x20
   140029cca:	lea    rax,[rip+0xb087]        # 0x140034d58
   140029cd1:	mov    ebx,edx
   140029cd3:	mov    QWORD PTR [rcx],rax
   140029cd6:	mov    rdi,rcx
   140029cd9:	call   QWORD PTR [rip+0x87d9]        # 0x1400324b8
   140029cdf:	test   bl,0x1
   140029ce2:	je     0x140029ced
   140029ce4:	mov    rcx,rdi
   140029ce7:	call   QWORD PTR [rip+0x88db]        # 0x1400325c8
   140029ced:	mov    rax,rdi
   140029cf0:	mov    rbx,QWORD PTR [rsp+0x30]
   140029cf5:	add    rsp,0x20
   140029cf9:	pop    rdi
   140029cfa:	ret    
   140029cfb:	int3   
   140029cfc:	int3   
   140029cfd:	int3   
   140029cfe:	int3   
   140029cff:	int3   
   140029d00:	int3   
   140029d01:	int3   
   140029d02:	int3   
   140029d03:	int3   
   140029d04:	mov    QWORD PTR [rsp+0x8],rbx
   140029d09:	push   rdi
   140029d0a:	sub    rsp,0x20
   140029d0e:	mov    ebx,edx
   140029d10:	mov    rdi,rcx
   140029d13:	call   QWORD PTR [rip+0x88cf]        # 0x1400325e8
   140029d19:	lea    rax,[rip+0xb018]        # 0x140034d38
   140029d20:	mov    DWORD PTR [rdi+0x18],ebx
   140029d23:	mov    rbx,QWORD PTR [rsp+0x30]
   140029d28:	mov    QWORD PTR [rdi],rax
   140029d2b:	mov    rax,rdi
   140029d2e:	add    rsp,0x20
   140029d32:	pop    rdi
   140029d33:	ret    
   140029d34:	int3   
   140029d35:	int3   
   140029d36:	int3   
   140029d37:	int3   
   140029d38:	int3   
   140029d39:	int3   
   140029d3a:	int3   
   140029d3b:	int3   
   140029d3c:	int3   
   140029d3d:	int3   
   140029d3e:	int3   
   140029d3f:	int3   
   140029d40:	mov    eax,DWORD PTR [rcx+0x18]
   140029d43:	ret    
   140029d44:	int3   
   140029d45:	int3   
   140029d46:	int3   
   140029d47:	int3   
   140029d48:	int3   
   140029d49:	int3   
   140029d4a:	int3   
   140029d4b:	int3   
   140029d4c:	lea    rax,[rip+0xb005]        # 0x140034d58
   140029d53:	mov    QWORD PTR [rcx],rax
   140029d56:	rex.W jmp QWORD PTR [rip+0x875b]        # 0x1400324b8
   140029d5d:	int3   
   140029d5e:	int3   
   140029d5f:	int3   
   140029d60:	int3   
   140029d61:	int3   
   140029d62:	int3   
   140029d63:	int3   
   140029d64:	mov    QWORD PTR [rsp+0x8],rbx
   140029d69:	push   rdi
   140029d6a:	sub    rsp,0x40
   140029d6e:	lea    rdi,[rip+0x21303]        # 0x14004b078
   140029d75:	mov    ebx,ecx
   140029d77:	test   ecx,ecx
   140029d79:	js     0x140029db0
   140029d7b:	mov    rcx,QWORD PTR [rip+0x212f6]        # 0x14004b078
   140029d82:	cmp    rcx,rdi
   140029d85:	je     0x140029da9
   140029d87:	test   BYTE PTR [rcx+0x1c],0x1
   140029d8b:	je     0x140029da9
   140029d8d:	mov    rcx,QWORD PTR [rcx+0x10]
   140029d91:	lea    r8,[rip+0x13558]        # 0x14003d2f0
   140029d98:	mov    edx,0xa
   140029d9d:	call   0x140001f08
   140029da2:	mov    rcx,QWORD PTR [rip+0x212cf]        # 0x14004b078
   140029da9:	mov    ebx,0x8000ffff
   140029dae:	jmp    0x140029db7
   140029db0:	mov    rcx,QWORD PTR [rip+0x212c1]        # 0x14004b078
   140029db7:	cmp    rcx,rdi
   140029dba:	je     0x140029dda
   140029dbc:	test   BYTE PTR [rcx+0x1c],0x1
   140029dc0:	je     0x140029dda
   140029dc2:	mov    rcx,QWORD PTR [rcx+0x10]
   140029dc6:	lea    r8,[rip+0x13523]        # 0x14003d2f0
   140029dcd:	mov    edx,0xb
   140029dd2:	mov    r9d,ebx
   140029dd5:	call   0x140001f70
   140029dda:	mov    edx,ebx
   140029ddc:	lea    rcx,[rsp+0x20]
   140029de1:	call   0x140029d04
   140029de6:	lea    rdx,[rip+0x1f4f3]        # 0x1400492e0
   140029ded:	lea    rcx,[rsp+0x20]
   140029df2:	call   0x14002e2da
   140029df7:	int3   
   140029df8:	int3   
   140029df9:	int3   
   140029dfa:	int3   
   140029dfb:	int3   
   140029dfc:	int3   
   140029dfd:	int3   
   140029dfe:	int3   
   140029dff:	int3   
   140029e00:	mov    QWORD PTR [rsp+0x8],rbx
   140029e05:	push   rdi
   140029e06:	sub    rsp,0x20
   140029e0a:	mov    rbx,rdx
   140029e0d:	mov    rdi,rcx
   140029e10:	call   QWORD PTR [rip+0x86b2]        # 0x1400324c8
   140029e16:	lea    rax,[rip+0xaf1b]        # 0x140034d38
   140029e1d:	mov    QWORD PTR [rdi],rax
   140029e20:	mov    eax,DWORD PTR [rbx+0x18]
   140029e23:	mov    rbx,QWORD PTR [rsp+0x30]
   140029e28:	mov    DWORD PTR [rdi+0x18],eax
   140029e2b:	mov    rax,rdi
   140029e2e:	add    rsp,0x20
   140029e32:	pop    rdi
   140029e33:	ret    
   140029e34:	int3   
   140029e35:	int3   
   140029e36:	int3   
   140029e37:	int3   
   140029e38:	int3   
   140029e39:	int3   
   140029e3a:	int3   
   140029e3b:	int3   
   140029e3c:	rex push rbx
   140029e3e:	sub    rsp,0x20
   140029e42:	mov    rbx,rcx
   140029e45:	call   QWORD PTR [rip+0x867d]        # 0x1400324c8
   140029e4b:	lea    rax,[rip+0xaf06]        # 0x140034d58
   140029e52:	mov    QWORD PTR [rbx],rax
   140029e55:	mov    rax,rbx
   140029e58:	add    rsp,0x20
   140029e5c:	pop    rbx
   140029e5d:	ret    
   140029e5e:	int3   
   140029e5f:	int3   
   140029e60:	int3   
   140029e61:	int3   
   140029e62:	int3   
   140029e63:	int3   
   140029e64:	sub    rsp,0x28
   140029e68:	mov    eax,ecx
   140029e6a:	movzx  ecx,cx
   140029e6d:	or     ecx,0x80070000
   140029e73:	test   eax,eax
   140029e75:	cmovle ecx,eax
   140029e78:	call   0x140029d64
   140029e7d:	int3   
   140029e7e:	int3   
   140029e7f:	int3   
   140029e80:	int3   
   140029e81:	int3   
   140029e82:	int3   
   140029e83:	int3   
   140029e84:	mov    QWORD PTR [rsp+0x8],rbx
   140029e89:	push   rdi
   140029e8a:	sub    rsp,0x30
   140029e8e:	and    DWORD PTR [rsp+0x20],0x0
   140029e93:	lea    r9,[rip+0x256e6]        # 0x14004f580
   140029e9a:	lea    r8,[rip+0x249af]        # 0x14004e850
   140029ea1:	xor    edx,edx
   140029ea3:	mov    rbx,rcx
   140029ea6:	call   0x14002e862
   140029eab:	mov    rdi,rax
   140029eae:	test   rax,rax
   140029eb1:	je     0x140029ed4
   140029eb3:	mov    rcx,QWORD PTR [rax]
   140029eb6:	mov    rbx,QWORD PTR [rcx+0x10]
   140029eba:	mov    rcx,rbx
   140029ebd:	call   QWORD PTR [rip+0x87e5]        # 0x1400326a8
   140029ec3:	mov    rcx,rdi
   140029ec6:	call   rbx
   140029ec8:	test   eax,eax
   140029eca:	mov    ecx,0x8000ffff
   140029ecf:	cmovns eax,ecx
   140029ed2:	jmp    0x140029f52
   140029ed4:	and    DWORD PTR [rsp+0x20],0x0
   140029ed9:	lea    r9,[rip+0x24948]        # 0x14004e828
   140029ee0:	lea    r8,[rip+0x24969]        # 0x14004e850
   140029ee7:	xor    edx,edx
   140029ee9:	mov    rcx,rbx
   140029eec:	call   0x14002e862
   140029ef1:	test   rax,rax
   140029ef4:	je     0x140029efd
   140029ef6:	mov    eax,0x8007000e
   140029efb:	jmp    0x140029f52
   140029efd:	and    DWORD PTR [rsp+0x20],0x0
   140029f02:	lea    r9,[rip+0x2564f]        # 0x14004f558
   140029f09:	lea    r8,[rip+0x24940]        # 0x14004e850
   140029f10:	xor    edx,edx
   140029f12:	mov    rcx,rbx
   140029f15:	call   0x14002e862
   140029f1a:	test   rax,rax
   140029f1d:	je     0x140029f26
   140029f1f:	mov    eax,0x80070585
   140029f24:	jmp    0x140029f52
   140029f26:	and    DWORD PTR [rsp+0x20],0x0
   140029f2b:	lea    r9,[rip+0x255f6]        # 0x14004f528
   140029f32:	lea    r8,[rip+0x24917]        # 0x14004e850
   140029f39:	xor    edx,edx
   140029f3b:	mov    rcx,rbx
   140029f3e:	call   0x14002e862
   140029f43:	neg    rax
   140029f46:	sbb    eax,eax
   140029f48:	and    eax,0x6c052
   140029f4d:	add    eax,0x80004005
   140029f52:	mov    rbx,QWORD PTR [rsp+0x40]
   140029f57:	add    rsp,0x30
   140029f5b:	pop    rdi
   140029f5c:	ret    
   140029f5d:	int3   
   140029f5e:	int3   
   140029f5f:	int3   
   140029f60:	int3   
   140029f61:	int3   
   140029f62:	int3   
   140029f63:	int3   
   140029f64:	sub    rsp,0x68
   140029f68:	xor    r8d,r8d
   140029f6b:	test   r9,r9
   140029f6e:	je     0x140029f94
   140029f70:	cmp    WORD PTR [r9],r8w
   140029f74:	jne    0x140029f7c
   140029f76:	lea    eax,[r8+0xe]
   140029f7a:	jmp    0x140029f99
   140029f7c:	or     rax,0xffffffffffffffff
   140029f80:	inc    rax
   140029f83:	cmp    WORD PTR [r9+rax*2],r8w
   140029f88:	jne    0x140029f80
   140029f8a:	lea    rax,[rax*2+0x2]
   140029f92:	jmp    0x140029f99
   140029f94:	mov    eax,0xa
   140029f99:	test   r9,r9
   140029f9c:	je     0x140029faf
   140029f9e:	cmp    WORD PTR [r9],r8w
   140029fa2:	lea    rdx,[rip+0xaeaf]        # 0x140034e58
   140029fa9:	cmove  r9,rdx
   140029fad:	jmp    0x140029fb6
   140029faf:	lea    r9,[rip+0xb4ea]        # 0x1400354a0
   140029fb6:	mov    QWORD PTR [rsp+0x50],r8
   140029fbb:	lea    rdx,[rsp+0x98]
   140029fc3:	mov    r10d,0x39
   140029fc9:	lea    r8d,[r10-0x35]
   140029fcd:	mov    QWORD PTR [rsp+0x48],r8
   140029fd2:	mov    QWORD PTR [rsp+0x40],rdx
   140029fd7:	lea    rdx,[rip+0x13442]        # 0x14003d420
   140029fde:	mov    QWORD PTR [rsp+0x38],r8
   140029fe3:	lea    r8,[rip+0x133d6]        # 0x14003d3c0
   140029fea:	mov    QWORD PTR [rsp+0x30],rdx
   140029fef:	lea    edx,[r10-0xe]
   140029ff3:	mov    QWORD PTR [rsp+0x28],rax
   140029ff8:	mov    QWORD PTR [rsp+0x20],r9
   140029ffd:	movzx  r9d,r10w
   14002a001:	call   QWORD PTR [rip+0x8019]        # 0x140032020
   14002a007:	add    rsp,0x68
   14002a00b:	ret    
   14002a00c:	int3   
   14002a00d:	int3   
   14002a00e:	int3   
   14002a00f:	int3   
   14002a010:	int3   
   14002a011:	int3   
   14002a012:	int3   
   14002a013:	int3   
   14002a014:	sub    rsp,0x58
   14002a018:	test   r9,r9
   14002a01b:	je     0x14002a030
   14002a01d:	or     rdx,0xffffffffffffffff
   14002a021:	inc    rdx
   14002a024:	cmp    BYTE PTR [r9+rdx*1],0x0
   14002a029:	jne    0x14002a021
   14002a02b:	inc    rdx
   14002a02e:	jmp    0x14002a035
   14002a030:	mov    edx,0x5
   14002a035:	test   r9,r9
   14002a038:	lea    r8,[rsp+0x80]
   14002a040:	lea    rax,[rip+0xb44d]        # 0x140035494
   14002a047:	cmovne rax,r9
   14002a04b:	and    QWORD PTR [rsp+0x40],0x0
   14002a051:	mov    QWORD PTR [rsp+0x38],0x4
   14002a05a:	mov    r9d,0x1c
   14002a060:	mov    QWORD PTR [rsp+0x30],r8
   14002a065:	lea    r8,[rip+0x13354]        # 0x14003d3c0
   14002a06c:	mov    QWORD PTR [rsp+0x28],rdx
   14002a071:	mov    QWORD PTR [rsp+0x20],rax
   14002a076:	lea    edx,[r9+0xf]
   14002a07a:	call   QWORD PTR [rip+0x7fa0]        # 0x140032020
   14002a080:	add    rsp,0x58
   14002a084:	ret    
   14002a085:	int3   
   14002a086:	int3   
   14002a087:	int3   
   14002a088:	int3   
   14002a089:	int3   
   14002a08a:	int3   
   14002a08b:	int3   
   14002a08c:	sub    rsp,0x28
   14002a090:	call   QWORD PTR [rip+0x80c2]        # 0x140032158
   14002a096:	test   eax,eax
   14002a098:	jne    0x14002a0d0
   14002a09a:	call   0x14002b128
   14002a09f:	mov    rcx,QWORD PTR [rip+0x20fd2]        # 0x14004b078
   14002a0a6:	lea    rdx,[rip+0x20fcb]        # 0x14004b078
   14002a0ad:	cmp    rcx,rdx
   14002a0b0:	je     0x14002a0d0
   14002a0b2:	test   BYTE PTR [rcx+0x1c],0x1
   14002a0b6:	je     0x14002a0d0
   14002a0b8:	mov    rcx,QWORD PTR [rcx+0x10]
   14002a0bc:	lea    r8,[rip+0x132fd]        # 0x14003d3c0
   14002a0c3:	mov    edx,0xa
   14002a0c8:	mov    r9d,eax
   14002a0cb:	call   0x140001f70
   14002a0d0:	add    rsp,0x28
   14002a0d4:	ret    
   14002a0d5:	int3   
   14002a0d6:	int3   
   14002a0d7:	int3   
   14002a0d8:	int3   
   14002a0d9:	int3   
   14002a0da:	int3   
   14002a0db:	int3   
   14002a0dc:	rex push rbx
   14002a0de:	sub    rsp,0x20
   14002a0e2:	call   0x14002b128
   14002a0e7:	mov    ebx,eax
   14002a0e9:	mov    rcx,QWORD PTR [rip+0x20f88]        # 0x14004b078
   14002a0f0:	lea    rax,[rip+0x20f81]        # 0x14004b078
   14002a0f7:	cmp    rcx,rax
   14002a0fa:	je     0x14002a11a
   14002a0fc:	test   BYTE PTR [rcx+0x1c],0x1
   14002a100:	je     0x14002a11a
   14002a102:	mov    rcx,QWORD PTR [rcx+0x10]
   14002a106:	lea    r8,[rip+0x132b3]        # 0x14003d3c0
   14002a10d:	mov    edx,0xb
   14002a112:	mov    r9d,ebx
   14002a115:	call   0x140001f70
   14002a11a:	mov    eax,ebx
   14002a11c:	add    rsp,0x20
   14002a120:	pop    rbx
   14002a121:	ret    
   14002a122:	int3   
   14002a123:	int3   
   14002a124:	int3   
   14002a125:	int3   
   14002a126:	int3   
   14002a127:	int3   
   14002a128:	sub    rsp,0x28
   14002a12c:	call   QWORD PTR [rip+0x805e]        # 0x140032190
   14002a132:	test   eax,eax
   14002a134:	jne    0x14002a16c
   14002a136:	call   0x14002b128
   14002a13b:	mov    rcx,QWORD PTR [rip+0x20f36]        # 0x14004b078
   14002a142:	lea    rdx,[rip+0x20f2f]        # 0x14004b078
   14002a149:	cmp    rcx,rdx
   14002a14c:	je     0x14002a16c
   14002a14e:	test   BYTE PTR [rcx+0x1c],0x1
   14002a152:	je     0x14002a16c
   14002a154:	mov    rcx,QWORD PTR [rcx+0x10]
   14002a158:	lea    r8,[rip+0x13261]        # 0x14003d3c0
   14002a15f:	mov    edx,0xd
   14002a164:	mov    r9d,eax
   14002a167:	call   0x140001f70
   14002a16c:	add    rsp,0x28
   14002a170:	ret    
   14002a171:	int3   
   14002a172:	int3   
   14002a173:	int3   
   14002a174:	int3   
   14002a175:	int3   
   14002a176:	int3   
   14002a177:	int3   
   14002a178:	rex push rbx
   14002a17a:	sub    rsp,0x30
   14002a17e:	mov    ebx,edx
   14002a180:	call   QWORD PTR [rip+0x7ffa]        # 0x140032180
   14002a186:	mov    edx,0x102
   14002a18b:	test   eax,eax
   14002a18d:	je     0x14002a1e7
   14002a18f:	cmp    eax,0x80
   14002a194:	je     0x14002a1e7
   14002a196:	cmp    eax,edx
   14002a198:	je     0x14002a1e9
   14002a19a:	mov    r8d,0x80070006
   14002a1a0:	cmp    eax,0xffffffff
   14002a1a3:	jne    0x14002a1ad
   14002a1a5:	call   0x14002b128
   14002a1aa:	mov    r8d,eax
   14002a1ad:	mov    rcx,QWORD PTR [rip+0x20ec4]        # 0x14004b078
   14002a1b4:	lea    rax,[rip+0x20ebd]        # 0x14004b078
   14002a1bb:	cmp    rcx,rax
   14002a1be:	je     0x14002a1e3
   14002a1c0:	test   BYTE PTR [rcx+0x1c],0x1
   14002a1c4:	je     0x14002a1e3
   14002a1c6:	mov    rcx,QWORD PTR [rcx+0x10]
   14002a1ca:	mov    edx,0x12
   14002a1cf:	mov    DWORD PTR [rsp+0x20],r8d
   14002a1d4:	mov    r9d,ebx
   14002a1d7:	lea    r8,[rip+0x131e2]        # 0x14003d3c0
   14002a1de:	call   0x140015b2c
   14002a1e3:	xor    al,al
   14002a1e5:	jmp    0x14002a1ec
   14002a1e7:	cmp    eax,edx
   14002a1e9:	sete   al
   14002a1ec:	add    rsp,0x30
   14002a1f0:	pop    rbx
   14002a1f1:	ret    
   14002a1f2:	int3   
   14002a1f3:	int3   
   14002a1f4:	int3   
   14002a1f5:	int3   
   14002a1f6:	int3   
   14002a1f7:	int3   
   14002a1f8:	mov    QWORD PTR [rsp+0x8],rbx
   14002a1fd:	mov    QWORD PTR [rsp+0x10],rsi
   14002a202:	push   rdi
   14002a203:	sub    rsp,0x20
   14002a207:	xor    esi,esi
   14002a209:	mov    rdi,rdx
   14002a20c:	mov    WORD PTR [rdx+0x206],si
   14002a213:	mov    rbx,rcx
   14002a216:	call   QWORD PTR [rip+0x848c]        # 0x1400326a8
   14002a21c:	mov    edx,0x104
   14002a221:	mov    rcx,rdi
   14002a224:	call   rbx
   14002a226:	test   eax,eax
   14002a228:	jne    0x14002a231
   14002a22a:	call   0x14002b128
   14002a22f:	jmp    0x14002a257
   14002a231:	cmp    WORD PTR [rdi+0x206],si
   14002a238:	jne    0x14002a252
   14002a23a:	cmp    eax,0x104
   14002a23f:	jae    0x14002a252
   14002a241:	dec    eax
   14002a243:	cmp    WORD PTR [rdi+rax*2],0x5c
   14002a248:	jne    0x14002a24e
   14002a24a:	mov    WORD PTR [rdi+rax*2],si
   14002a24e:	xor    eax,eax
   14002a250:	jmp    0x14002a257
   14002a252:	mov    eax,0x80004005
   14002a257:	mov    rbx,QWORD PTR [rsp+0x30]
   14002a25c:	mov    rsi,QWORD PTR [rsp+0x38]
   14002a261:	add    rsp,0x20
   14002a265:	pop    rdi
   14002a266:	ret    
   14002a267:	int3   
   14002a268:	int3   
   14002a269:	int3   
   14002a26a:	int3   
   14002a26b:	int3   
   14002a26c:	int3   
   14002a26d:	int3   
   14002a26e:	int3   
   14002a26f:	int3   
   14002a270:	mov    QWORD PTR [rsp+0x8],rbx
   14002a275:	mov    QWORD PTR [rsp+0x10],rsi
   14002a27a:	push   rdi
   14002a27b:	sub    rsp,0x30
   14002a27f:	mov    rdi,rdx
   14002a282:	mov    rbx,rcx
   14002a285:	mov    rcx,QWORD PTR [rip+0x20dec]        # 0x14004b078
   14002a28c:	lea    rsi,[rip+0x20de5]        # 0x14004b078
   14002a293:	cmp    rcx,rsi
   14002a296:	je     0x14002a2b6
   14002a298:	test   BYTE PTR [rcx+0x1c],0x4
   14002a29c:	je     0x14002a2b6
   14002a29e:	mov    rcx,QWORD PTR [rcx+0x10]
   14002a2a2:	lea    r8,[rip+0x13117]        # 0x14003d3c0
   14002a2a9:	mov    edx,0x17
   14002a2ae:	mov    r9,rdi
   14002a2b1:	call   0x1400071e8
   14002a2b6:	mov    rcx,rdi
   14002a2b9:	call   QWORD PTR [rip+0x7fa1]        # 0x140032260
   14002a2bf:	mov    QWORD PTR [rbx],rax
   14002a2c2:	test   rax,rax
   14002a2c5:	jne    0x14002a300
   14002a2c7:	call   0x14002b128
   14002a2cc:	mov    ebx,eax
   14002a2ce:	mov    rcx,QWORD PTR [rip+0x20da3]        # 0x14004b078
   14002a2d5:	cmp    rcx,rsi
   14002a2d8:	je     0x14002a2fc
   14002a2da:	test   BYTE PTR [rcx+0x1c],0x1
   14002a2de:	je     0x14002a2fc
   14002a2e0:	mov    rcx,QWORD PTR [rcx+0x10]
   14002a2e4:	lea    r8,[rip+0x130d5]        # 0x14003d3c0
   14002a2eb:	mov    edx,0x18
   14002a2f0:	mov    DWORD PTR [rsp+0x20],eax
   14002a2f4:	mov    r9,rdi
   14002a2f7:	call   0x140007264
   14002a2fc:	mov    eax,ebx
   14002a2fe:	jmp    0x14002a302
   14002a300:	xor    eax,eax
   14002a302:	mov    rbx,QWORD PTR [rsp+0x40]
   14002a307:	mov    rsi,QWORD PTR [rsp+0x48]
   14002a30c:	add    rsp,0x30
   14002a310:	pop    rdi
   14002a311:	ret    
   14002a312:	int3   
   14002a313:	int3   
   14002a314:	int3   
   14002a315:	int3   
   14002a316:	int3   
   14002a317:	int3   
   14002a318:	mov    QWORD PTR [rsp+0x10],rbx
   14002a31d:	mov    QWORD PTR [rsp+0x18],rsi
   14002a322:	push   rdi
   14002a323:	sub    rsp,0x240
   14002a32a:	mov    rax,QWORD PTR [rip+0x20cef]        # 0x14004b020
   14002a331:	xor    rax,rsp
   14002a334:	mov    QWORD PTR [rsp+0x230],rax
   14002a33c:	mov    rdi,rdx
   14002a33f:	mov    rsi,rcx
   14002a342:	mov    rcx,QWORD PTR [rip+0x7ec7]        # 0x140032210
   14002a349:	lea    rdx,[rsp+0x20]
   14002a34e:	call   0x14002a1f8
   14002a353:	xor    ebx,ebx
   14002a355:	test   eax,eax
   14002a357:	js     0x14002a393
   14002a359:	lea    r8,[rip+0xc674]        # 0x1400369d4
   14002a360:	lea    rcx,[rsp+0x20]
   14002a365:	call   0x1400299f4
   14002a36a:	test   eax,eax
   14002a36c:	js     0x14002a393
   14002a36e:	mov    r8,rdi
   14002a371:	lea    rcx,[rsp+0x20]
   14002a376:	call   0x1400299f4
   14002a37b:	test   eax,eax
   14002a37d:	js     0x14002a393
   14002a37f:	lea    rdx,[rsp+0x20]
   14002a384:	mov    rcx,rsi
   14002a387:	call   0x14002a270
   14002a38c:	test   eax,eax
   14002a38e:	cmovs  ebx,eax
   14002a391:	mov    eax,ebx
   14002a393:	mov    rcx,QWORD PTR [rsp+0x230]
   14002a39b:	xor    rcx,rsp
   14002a39e:	call   0x14002dd00
   14002a3a3:	lea    r11,[rsp+0x240]
   14002a3ab:	mov    rbx,QWORD PTR [r11+0x18]
   14002a3af:	mov    rsi,QWORD PTR [r11+0x20]
   14002a3b3:	mov    rsp,r11
   14002a3b6:	pop    rdi
   14002a3b7:	ret    
   14002a3b8:	int3   
   14002a3b9:	int3   
   14002a3ba:	int3   
   14002a3bb:	int3   
   14002a3bc:	int3   
   14002a3bd:	int3   
   14002a3be:	int3   
   14002a3bf:	int3   
   14002a3c0:	mov    QWORD PTR [rsp+0x8],rbx
   14002a3c5:	push   rdi
   14002a3c6:	sub    rsp,0x30
   14002a3ca:	mov    rdi,rcx
   14002a3cd:	call   0x14002b128
   14002a3d2:	mov    ebx,eax
   14002a3d4:	mov    eax,0x8007007f
   14002a3d9:	cmp    ebx,eax
   14002a3db:	je     0x14002a44d
   14002a3dd:	test   rdi,0xffffffffffff0000
   14002a3e4:	jne    0x14002a41d
   14002a3e6:	mov    rcx,QWORD PTR [rip+0x20c8b]        # 0x14004b078
   14002a3ed:	lea    rax,[rip+0x20c84]        # 0x14004b078
   14002a3f4:	cmp    rcx,rax
   14002a3f7:	je     0x14002a446
   14002a3f9:	test   BYTE PTR [rcx+0x1c],0x2
   14002a3fd:	je     0x14002a446
   14002a3ff:	mov    rcx,QWORD PTR [rcx+0x10]
   14002a403:	lea    r8,[rip+0x12fb6]        # 0x14003d3c0
   14002a40a:	mov    edx,0x1b
   14002a40f:	mov    DWORD PTR [rsp+0x20],ebx
   14002a413:	mov    r9d,edi
   14002a416:	call   0x140015b2c
   14002a41b:	jmp    0x14002a446
   14002a41d:	mov    rcx,QWORD PTR [rip+0x20c54]        # 0x14004b078
   14002a424:	lea    rax,[rip+0x20c4d]        # 0x14004b078
   14002a42b:	cmp    rcx,rax
   14002a42e:	je     0x14002a446
   14002a430:	test   BYTE PTR [rcx+0x1c],0x2
   14002a434:	je     0x14002a446
   14002a436:	mov    rcx,QWORD PTR [rcx+0x10]
   14002a43a:	mov    r9,rdi
   14002a43d:	mov    DWORD PTR [rsp+0x20],ebx
   14002a441:	call   0x14002a014
   14002a446:	xor    eax,eax
   14002a448:	test   ebx,ebx
   14002a44a:	cmovs  eax,ebx
   14002a44d:	mov    rbx,QWORD PTR [rsp+0x40]
   14002a452:	add    rsp,0x30
   14002a456:	pop    rdi
   14002a457:	ret    
   14002a458:	int3   
   14002a459:	int3   
   14002a45a:	int3   
   14002a45b:	int3   
   14002a45c:	int3   
   14002a45d:	int3   
   14002a45e:	int3   
   14002a45f:	int3   
   14002a460:	mov    QWORD PTR [rsp+0x8],rbx
   14002a465:	mov    QWORD PTR [rsp+0x10],rsi
   14002a46a:	mov    QWORD PTR [rsp+0x18],rdi
   14002a46f:	push   r14
   14002a471:	sub    rsp,0x30
   14002a475:	mov    r14,rcx
   14002a478:	mov    rdi,r8
   14002a47b:	mov    rcx,rdx
   14002a47e:	mov    rsi,rdx
   14002a481:	call   QWORD PTR [rip+0x7e29]        # 0x1400322b0
   14002a487:	test   rax,rax
   14002a48a:	jne    0x14002a4cc
   14002a48c:	call   0x14002b128
   14002a491:	mov    ebx,eax
   14002a493:	mov    rcx,QWORD PTR [rip+0x20bde]        # 0x14004b078
   14002a49a:	lea    rax,[rip+0x20bd7]        # 0x14004b078
   14002a4a1:	cmp    rcx,rax
   14002a4a4:	je     0x14002a4c8
   14002a4a6:	test   BYTE PTR [rcx+0x1c],0x1
   14002a4aa:	je     0x14002a4c8
   14002a4ac:	mov    rcx,QWORD PTR [rcx+0x10]
   14002a4b0:	lea    r8,[rip+0x12f09]        # 0x14003d3c0
   14002a4b7:	mov    edx,0x1d
   14002a4bc:	mov    DWORD PTR [rsp+0x20],ebx
   14002a4c0:	mov    r9,rsi
   14002a4c3:	call   0x140007264
   14002a4c8:	mov    eax,ebx
   14002a4ca:	jmp    0x14002a504
   14002a4cc:	mov    rdx,rdi
   14002a4cf:	mov    rcx,rax
   14002a4d2:	call   QWORD PTR [rip+0x7dc8]        # 0x1400322a0
   14002a4d8:	mov    rbx,rax
   14002a4db:	test   rax,rax
   14002a4de:	jne    0x14002a4ec
   14002a4e0:	mov    dl,0x1
   14002a4e2:	mov    rcx,rdi
   14002a4e5:	call   0x14002a3c0
   14002a4ea:	jmp    0x14002a4ee
   14002a4ec:	xor    eax,eax
   14002a4ee:	mov    ecx,0x8007007f
   14002a4f3:	cmp    eax,ecx
   14002a4f5:	jne    0x14002a4fb
   14002a4f7:	mov    eax,ecx
   14002a4f9:	jmp    0x14002a504
   14002a4fb:	test   eax,eax
   14002a4fd:	js     0x14002a504
   14002a4ff:	mov    QWORD PTR [r14],rbx
   14002a502:	xor    eax,eax
   14002a504:	mov    rbx,QWORD PTR [rsp+0x40]
   14002a509:	mov    rsi,QWORD PTR [rsp+0x48]
   14002a50e:	mov    rdi,QWORD PTR [rsp+0x50]
   14002a513:	add    rsp,0x30
   14002a517:	pop    r14
   14002a519:	ret    
   14002a51a:	int3   
   14002a51b:	int3   
   14002a51c:	int3   
   14002a51d:	int3   
   14002a51e:	int3   
   14002a51f:	int3   
   14002a520:	mov    QWORD PTR [rsp+0x8],rbx
   14002a525:	push   rdi
   14002a526:	sub    rsp,0x30
   14002a52a:	mov    rdi,rcx
   14002a52d:	call   0x14002b128
   14002a532:	mov    ebx,eax
   14002a534:	mov    rcx,QWORD PTR [rip+0x20b3d]        # 0x14004b078
   14002a53b:	lea    rax,[rip+0x20b36]        # 0x14004b078
   14002a542:	cmp    rcx,rax
   14002a545:	je     0x14002a569
   14002a547:	test   BYTE PTR [rcx+0x1c],0x1
   14002a54b:	je     0x14002a569
   14002a54d:	mov    rcx,QWORD PTR [rcx+0x10]
   14002a551:	lea    r8,[rip+0x12e68]        # 0x14003d3c0
   14002a558:	mov    edx,0x1f
   14002a55d:	mov    DWORD PTR [rsp+0x20],ebx
   14002a561:	mov    r9,rdi
   14002a564:	call   0x140007264
   14002a569:	mov    eax,ebx
   14002a56b:	mov    rbx,QWORD PTR [rsp+0x40]
   14002a570:	add    rsp,0x30
   14002a574:	pop    rdi
   14002a575:	ret    
   14002a576:	int3   
   14002a577:	int3   
   14002a578:	int3   
   14002a579:	int3   
   14002a57a:	int3   
   14002a57b:	int3   
   14002a57c:	mov    QWORD PTR [rsp+0x8],rbx
   14002a581:	push   rdi
   14002a582:	sub    rsp,0x40
   14002a586:	or     QWORD PTR [rcx],0xffffffffffffffff
   14002a58a:	mov    r10d,r9d
   14002a58d:	and    QWORD PTR [rsp+0x30],0x0
   14002a593:	mov    r11d,r8d
   14002a596:	mov    eax,DWORD PTR [rsp+0x78]
   14002a59a:	mov    rdi,rdx
   14002a59d:	mov    rbx,rcx
   14002a5a0:	mov    DWORD PTR [rsp+0x28],eax
   14002a5a4:	mov    r8d,r10d
   14002a5a7:	mov    DWORD PTR [rsp+0x20],0x3
   14002a5af:	mov    edx,r11d
   14002a5b2:	mov    rcx,rdi
   14002a5b5:	xor    r9d,r9d
   14002a5b8:	call   QWORD PTR [rip+0x7c9a]        # 0x140032258
   14002a5be:	mov    QWORD PTR [rbx],rax
   14002a5c1:	cmp    rax,0xffffffffffffffff
   14002a5c5:	je     0x14002a5cb
   14002a5c7:	xor    eax,eax
   14002a5c9:	jmp    0x14002a634
   14002a5cb:	call   0x14002b128
   14002a5d0:	mov    ebx,eax
   14002a5d2:	lea    ecx,[rax+0x7ff8fffe]
   14002a5d8:	cmp    ecx,0x1
   14002a5db:	ja     0x14002a5fd
   14002a5dd:	mov    rcx,QWORD PTR [rip+0x20a94]        # 0x14004b078
   14002a5e4:	lea    rax,[rip+0x20a8d]        # 0x14004b078
   14002a5eb:	cmp    rcx,rax
   14002a5ee:	je     0x14002a632
   14002a5f0:	test   BYTE PTR [rcx+0x1c],0x4
   14002a5f4:	je     0x14002a632
   14002a5f6:	mov    edx,0x20
   14002a5fb:	jmp    0x14002a61b
   14002a5fd:	mov    rcx,QWORD PTR [rip+0x20a74]        # 0x14004b078
   14002a604:	lea    rax,[rip+0x20a6d]        # 0x14004b078
   14002a60b:	cmp    rcx,rax
   14002a60e:	je     0x14002a632
   14002a610:	test   BYTE PTR [rcx+0x1c],0x1
   14002a614:	je     0x14002a632
   14002a616:	mov    edx,0x21
   14002a61b:	mov    rcx,QWORD PTR [rcx+0x10]
   14002a61f:	lea    r8,[rip+0x12d9a]        # 0x14003d3c0
   14002a626:	mov    r9,rdi
   14002a629:	mov    DWORD PTR [rsp+0x20],ebx
   14002a62d:	call   0x140007264
   14002a632:	mov    eax,ebx
   14002a634:	mov    rbx,QWORD PTR [rsp+0x50]
   14002a639:	add    rsp,0x40
   14002a63d:	pop    rdi
   14002a63e:	ret    
   14002a63f:	int3   
   14002a640:	int3   
   14002a641:	int3   
   14002a642:	int3   
   14002a643:	int3   
   14002a644:	int3   
   14002a645:	int3   
   14002a646:	int3   
   14002a647:	int3   
   14002a648:	mov    QWORD PTR [rsp+0x8],rbx
   14002a64d:	push   rdi
   14002a64e:	sub    rsp,0x30
   14002a652:	mov    edi,DWORD PTR [rdx]
   14002a654:	mov    r10,r8
   14002a657:	mov    rbx,rdx
   14002a65a:	cmp    rdi,QWORD PTR [rdx]
   14002a65d:	je     0x14002a669
   14002a65f:	mov    eax,0x80070057
   14002a664:	jmp    0x14002a6ec
   14002a669:	and    QWORD PTR [rdx],0x0
   14002a66d:	lea    r9,[rsp+0x48]
   14002a672:	and    DWORD PTR [rsp+0x48],0x0
   14002a677:	mov    rdx,r10
   14002a67a:	and    QWORD PTR [rsp+0x20],0x0
   14002a680:	mov    r8d,edi
   14002a683:	call   QWORD PTR [rip+0x7b77]        # 0x140032200
   14002a689:	test   eax,eax
   14002a68b:	jne    0x14002a6d6
   14002a68d:	call   0x14002b128
   14002a692:	mov    edi,eax
   14002a694:	cmp    eax,0x80070026
   14002a699:	jne    0x14002a6a1
   14002a69b:	and    QWORD PTR [rbx],0x0
   14002a69f:	jmp    0x14002a6ea
   14002a6a1:	mov    rcx,QWORD PTR [rip+0x209d0]        # 0x14004b078
   14002a6a8:	lea    rax,[rip+0x209c9]        # 0x14004b078
   14002a6af:	cmp    rcx,rax
   14002a6b2:	je     0x14002a6d2
   14002a6b4:	test   BYTE PTR [rcx+0x1c],0x1
   14002a6b8:	je     0x14002a6d2
   14002a6ba:	mov    rcx,QWORD PTR [rcx+0x10]
   14002a6be:	lea    r8,[rip+0x12cfb]        # 0x14003d3c0
   14002a6c5:	mov    edx,0x28
   14002a6ca:	mov    r9d,edi
   14002a6cd:	call   0x140001f70
   14002a6d2:	mov    eax,edi
   14002a6d4:	jmp    0x14002a6ec
   14002a6d6:	cmp    DWORD PTR [rsp+0x48],edi
   14002a6da:	jbe    0x14002a6e3
   14002a6dc:	mov    eax,0x8000ffff
   14002a6e1:	jmp    0x14002a6ec
   14002a6e3:	mov    eax,DWORD PTR [rsp+0x48]
   14002a6e7:	mov    QWORD PTR [rbx],rax
   14002a6ea:	xor    eax,eax
   14002a6ec:	mov    rbx,QWORD PTR [rsp+0x40]
   14002a6f1:	add    rsp,0x30
   14002a6f5:	pop    rdi
   14002a6f6:	ret    
   14002a6f7:	int3   
   14002a6f8:	int3   
   14002a6f9:	int3   
   14002a6fa:	int3   
   14002a6fb:	int3   
   14002a6fc:	int3   
   14002a6fd:	int3   
   14002a6fe:	int3   
   14002a6ff:	int3   
   14002a700:	mov    rax,rsp
   14002a703:	mov    QWORD PTR [rax+0x20],r9
   14002a707:	push   rbx
   14002a708:	sub    rsp,0x40
   14002a70c:	and    DWORD PTR [rax-0x18],0x0
   14002a710:	lea    r8,[rip+0xfffffffffffebb89]        # 0x1400162a0
   14002a717:	and    DWORD PTR [rax-0x20],0x0
   14002a71b:	mov    rbx,rcx
   14002a71e:	mov    r9,QWORD PTR [rsp+0x70]
   14002a723:	lea    rcx,[rax+0x20]
   14002a727:	or     QWORD PTR [rax+0x20],0xffffffffffffffff
   14002a72c:	mov    DWORD PTR [rax-0x28],edx
   14002a72f:	xor    edx,edx
   14002a731:	call   QWORD PTR [rip+0x7a11]        # 0x140032148
   14002a737:	test   eax,eax
   14002a739:	jne    0x14002a777
   14002a73b:	call   0x14002b128
   14002a740:	mov    ebx,eax
   14002a742:	mov    rcx,QWORD PTR [rip+0x2092f]        # 0x14004b078
   14002a749:	lea    rax,[rip+0x20928]        # 0x14004b078
   14002a750:	cmp    rcx,rax
   14002a753:	je     0x14002a773
   14002a755:	test   BYTE PTR [rcx+0x1c],0x1
   14002a759:	je     0x14002a773
   14002a75b:	mov    rcx,QWORD PTR [rcx+0x10]
   14002a75f:	lea    r8,[rip+0x12c5a]        # 0x14003d3c0
   14002a766:	mov    edx,0x30
   14002a76b:	mov    r9d,ebx
   14002a76e:	call   0x140001f70
   14002a773:	mov    eax,ebx
   14002a775:	jmp    0x14002a781
   14002a777:	mov    rax,QWORD PTR [rsp+0x68]
   14002a77c:	mov    QWORD PTR [rbx],rax
   14002a77f:	xor    eax,eax
   14002a781:	add    rsp,0x40
   14002a785:	pop    rbx
   14002a786:	ret    
   14002a787:	int3   
   14002a788:	int3   
   14002a789:	int3   
   14002a78a:	int3   
   14002a78b:	int3   
   14002a78c:	int3   
   14002a78d:	int3   
   14002a78e:	int3   
   14002a78f:	int3   
   14002a790:	rex push rbx
   14002a792:	sub    rsp,0x20
   14002a796:	and    DWORD PTR [rsp+0x38],0x0
   14002a79b:	mov    rbx,rcx
   14002a79e:	mov    rdx,rcx
   14002a7a1:	lea    rcx,[rsp+0x38]
   14002a7a6:	call   0x14002ab78
   14002a7ab:	test   eax,eax
   14002a7ad:	js     0x14002a7f0
   14002a7af:	test   BYTE PTR [rsp+0x38],0x10
   14002a7b4:	je     0x14002a7ee
   14002a7b6:	mov    rcx,QWORD PTR [rip+0x208bb]        # 0x14004b078
   14002a7bd:	lea    rax,[rip+0x208b4]        # 0x14004b078
   14002a7c4:	cmp    rcx,rax
   14002a7c7:	je     0x14002a7e7
   14002a7c9:	test   BYTE PTR [rcx+0x1c],0x1
   14002a7cd:	je     0x14002a7e7
   14002a7cf:	mov    rcx,QWORD PTR [rcx+0x10]
   14002a7d3:	lea    r8,[rip+0x12be6]        # 0x14003d3c0
   14002a7da:	mov    edx,0x34
   14002a7df:	mov    r9,rbx
   14002a7e2:	call   0x1400071e8
   14002a7e7:	mov    eax,0x800700b7
   14002a7ec:	jmp    0x14002a7f0
   14002a7ee:	xor    eax,eax
   14002a7f0:	add    rsp,0x20
   14002a7f4:	pop    rbx
   14002a7f5:	ret    
   14002a7f6:	int3   
   14002a7f7:	int3   
   14002a7f8:	int3   
   14002a7f9:	int3   
   14002a7fa:	int3   
   14002a7fb:	int3   
   14002a7fc:	mov    QWORD PTR [rsp+0x8],rbx
   14002a801:	mov    QWORD PTR [rsp+0x10],rbp
   14002a806:	mov    QWORD PTR [rsp+0x18],rsi
   14002a80b:	push   rdi
   14002a80c:	sub    rsp,0x30
   14002a810:	mov    ebx,DWORD PTR [rdx]
   14002a812:	mov    rdi,r8
   14002a815:	mov    rsi,rdx
   14002a818:	mov    r8d,ebx
   14002a81b:	mov    rdx,rdi
   14002a81e:	mov    rbp,rcx
   14002a821:	call   QWORD PTR [rip+0x7981]        # 0x1400321a8
   14002a827:	xor    edx,edx
   14002a829:	mov    r9d,eax
   14002a82c:	test   eax,eax
   14002a82e:	jne    0x14002a870
   14002a830:	call   0x14002b128
   14002a835:	mov    ebx,eax
   14002a837:	mov    rcx,QWORD PTR [rip+0x2083a]        # 0x14004b078
   14002a83e:	lea    rax,[rip+0x20833]        # 0x14004b078
   14002a845:	cmp    rcx,rax
   14002a848:	je     0x14002a86c
   14002a84a:	test   BYTE PTR [rcx+0x1c],0x1
   14002a84e:	je     0x14002a86c
   14002a850:	mov    rcx,QWORD PTR [rcx+0x10]
   14002a854:	lea    r8,[rip+0x12b65]        # 0x14003d3c0
   14002a85b:	mov    edx,0x36
   14002a860:	mov    DWORD PTR [rsp+0x20],ebx
   14002a864:	mov    r9,rbp
   14002a867:	call   0x140007264
   14002a86c:	mov    eax,ebx
   14002a86e:	jmp    0x14002a892
   14002a870:	cmp    r9d,ebx
   14002a873:	ja     0x14002a886
   14002a875:	lea    eax,[r9-0x1]
   14002a879:	cmp    WORD PTR [rdi+rax*2],dx
   14002a87d:	je     0x14002a88d
   14002a87f:	mov    eax,0x8000ffff
   14002a884:	jmp    0x14002a892
   14002a886:	test   ebx,ebx
   14002a888:	je     0x14002a88d
   14002a88a:	mov    WORD PTR [rdi],dx
   14002a88d:	mov    QWORD PTR [rsi],r9
   14002a890:	xor    eax,eax
   14002a892:	mov    rbx,QWORD PTR [rsp+0x40]
   14002a897:	mov    rbp,QWORD PTR [rsp+0x48]
   14002a89c:	mov    rsi,QWORD PTR [rsp+0x50]
   14002a8a1:	add    rsp,0x30
   14002a8a5:	pop    rdi
   14002a8a6:	ret    
   14002a8a7:	int3   
   14002a8a8:	int3   
   14002a8a9:	int3   
   14002a8aa:	int3   
   14002a8ab:	int3   
   14002a8ac:	int3   
   14002a8ad:	int3   
   14002a8ae:	int3   
   14002a8af:	int3   
   14002a8b0:	mov    QWORD PTR [rsp+0x18],rbx
   14002a8b5:	mov    QWORD PTR [rsp+0x20],rbp
   14002a8ba:	push   rsi
   14002a8bb:	push   rdi
   14002a8bc:	push   r14
   14002a8be:	sub    rsp,0x250
   14002a8c5:	mov    rax,QWORD PTR [rip+0x20754]        # 0x14004b020
   14002a8cc:	xor    rax,rsp
   14002a8cf:	mov    QWORD PTR [rsp+0x240],rax
   14002a8d7:	mov    rbp,rdx
   14002a8da:	lea    r8,[rsp+0x30]
   14002a8df:	mov    r14,rcx
   14002a8e2:	lea    rdx,[rsp+0x20]
   14002a8e7:	mov    ebx,0x104
   14002a8ec:	mov    rcx,rbp
   14002a8ef:	mov    QWORD PTR [rsp+0x20],rbx
   14002a8f4:	call   0x14002a7fc
   14002a8f9:	test   eax,eax
   14002a8fb:	js     0x14002a985
   14002a901:	mov    rdi,QWORD PTR [rsp+0x20]
   14002a906:	cmp    rdi,rbx
   14002a909:	ja     0x14002a91a
   14002a90b:	lea    rdx,[rsp+0x30]
   14002a910:	mov    rcx,r14
   14002a913:	call   0x14002ba60
   14002a918:	jmp    0x14002a985
   14002a91a:	mov    rsi,rdi
   14002a91d:	and    QWORD PTR [rsp+0x28],0x0
   14002a923:	lea    rcx,[rsp+0x28]
   14002a928:	mov    rdx,rdi
   14002a92b:	call   0x1400299b4
   14002a930:	mov    rbx,QWORD PTR [rsp+0x28]
   14002a935:	mov    edi,eax
   14002a937:	test   eax,eax
   14002a939:	js     0x14002a975
   14002a93b:	mov    r8,rbx
   14002a93e:	lea    rdx,[rsp+0x20]
   14002a943:	mov    rcx,rbp
   14002a946:	call   0x14002a7fc
   14002a94b:	mov    edi,eax
   14002a94d:	test   eax,eax
   14002a94f:	js     0x14002a975
   14002a951:	mov    rdi,QWORD PTR [rsp+0x20]
   14002a956:	cmp    rdi,rsi
   14002a959:	jbe    0x14002a96e
   14002a95b:	mov    rsi,rdi
   14002a95e:	test   rbx,rbx
   14002a961:	je     0x14002a91d
   14002a963:	mov    rcx,rbx
   14002a966:	call   QWORD PTR [rip+0x7c5c]        # 0x1400325c8
   14002a96c:	jmp    0x14002a91d
   14002a96e:	mov    QWORD PTR [r14],rbx
   14002a971:	xor    eax,eax
   14002a973:	jmp    0x14002a985
   14002a975:	test   rbx,rbx
   14002a978:	je     0x14002a983
   14002a97a:	mov    rcx,rbx
   14002a97d:	call   QWORD PTR [rip+0x7c45]        # 0x1400325c8
   14002a983:	mov    eax,edi
   14002a985:	mov    rcx,QWORD PTR [rsp+0x240]
   14002a98d:	xor    rcx,rsp
   14002a990:	call   0x14002dd00
   14002a995:	lea    r11,[rsp+0x250]
   14002a99d:	mov    rbx,QWORD PTR [r11+0x30]
   14002a9a1:	mov    rbp,QWORD PTR [r11+0x38]
   14002a9a5:	mov    rsp,r11
   14002a9a8:	pop    r14
   14002a9aa:	pop    rdi
   14002a9ab:	pop    rsi
   14002a9ac:	ret    
   14002a9ad:	int3   
   14002a9ae:	int3   
   14002a9af:	int3   
   14002a9b0:	int3   
   14002a9b1:	int3   
   14002a9b2:	int3   
   14002a9b3:	int3   
   14002a9b4:	mov    QWORD PTR [rsp+0x8],rbx
   14002a9b9:	push   rdi
   14002a9ba:	sub    rsp,0x30
   14002a9be:	mov    rdi,rdx
   14002a9c1:	mov    rbx,rcx
   14002a9c4:	mov    rcx,rdi
   14002a9c7:	lea    rdx,[rip+0x12a52]        # 0x14003d420
   14002a9ce:	call   QWORD PTR [rip+0x7c34]        # 0x140032608
   14002a9d4:	mov    QWORD PTR [rbx],rax
   14002a9d7:	test   rax,rax
   14002a9da:	jne    0x14002aa7c
   14002a9e0:	call   QWORD PTR [rip+0x7afa]        # 0x1400324e0
   14002a9e6:	mov    r8d,DWORD PTR [rax]
   14002a9e9:	sub    r8d,0x2
   14002a9ed:	je     0x14002aa4a
   14002a9ef:	sub    r8d,0x3
   14002a9f3:	je     0x14002aa43
   14002a9f5:	sub    r8d,0x4
   14002a9f9:	je     0x14002aa3c
   14002a9fb:	sub    r8d,0x3
   14002a9ff:	je     0x14002aa27
   14002aa01:	sub    r8d,0x1
   14002aa05:	je     0x14002aa35
   14002aa07:	sub    r8d,0x4
   14002aa0b:	je     0x14002aa2e
   14002aa0d:	sub    r8d,0x5
   14002aa11:	je     0x14002aa27
   14002aa13:	cmp    r8d,0x6
   14002aa17:	je     0x14002aa20
   14002aa19:	mov    ebx,0x80004005
   14002aa1e:	jmp    0x14002aa4f
   14002aa20:	mov    ebx,0x80070027
   14002aa25:	jmp    0x14002aa4f
   14002aa27:	mov    ebx,0x8007000e
   14002aa2c:	jmp    0x14002aa4f
   14002aa2e:	mov    ebx,0x80070050
   14002aa33:	jmp    0x14002aa4f
   14002aa35:	mov    ebx,0x80070005
   14002aa3a:	jmp    0x14002aa4f
   14002aa3c:	mov    ebx,0x80070006
   14002aa41:	jmp    0x14002aa4f
   14002aa43:	mov    ebx,0x8007001e
   14002aa48:	jmp    0x14002aa4f
   14002aa4a:	mov    ebx,0x80070002
   14002aa4f:	mov    rcx,QWORD PTR [rip+0x20622]        # 0x14004b078
   14002aa56:	lea    rax,[rip+0x2061b]        # 0x14004b078
   14002aa5d:	cmp    rcx,rax
   14002aa60:	je     0x14002aa78
   14002aa62:	test   BYTE PTR [rcx+0x1c],0x1
   14002aa66:	je     0x14002aa78
   14002aa68:	mov    rcx,QWORD PTR [rcx+0x10]
   14002aa6c:	mov    r9,rdi
   14002aa6f:	mov    DWORD PTR [rsp+0x28],ebx
   14002aa73:	call   0x140029f64
   14002aa78:	mov    eax,ebx
   14002aa7a:	jmp    0x14002aa7e
   14002aa7c:	xor    eax,eax
   14002aa7e:	mov    rbx,QWORD PTR [rsp+0x40]
   14002aa83:	add    rsp,0x30
   14002aa87:	pop    rdi
   14002aa88:	ret    
   14002aa89:	int3   
   14002aa8a:	int3   
   14002aa8b:	int3   
   14002aa8c:	int3   
   14002aa8d:	int3   
   14002aa8e:	int3   
   14002aa8f:	int3   
   14002aa90:	mov    r11,rsp
   14002aa93:	mov    QWORD PTR [r11+0x8],rbx
   14002aa97:	mov    QWORD PTR [r11+0x18],rbp
   14002aa9b:	mov    QWORD PTR [r11+0x10],rdx
   14002aa9f:	push   rsi
   14002aaa0:	push   rdi
   14002aaa1:	push   r14
   14002aaa3:	sub    rsp,0x30
   14002aaa7:	and    QWORD PTR [r11+0x20],0x0
   14002aaac:	lea    rax,[rip+0x1286d]        # 0x14003d320
   14002aab3:	xor    ebx,ebx
   14002aab5:	mov    QWORD PTR [r11-0x28],rax
   14002aab9:	and    QWORD PTR [r11+0x10],rbx
   14002aabd:	lea    rax,[rip+0x1283c]        # 0x14003d300
   14002aac4:	mov    QWORD PTR [r11-0x20],rax
   14002aac8:	mov    r14,rcx
   14002aacb:	xor    esi,esi
   14002aacd:	mov    edi,0x8007007e
   14002aad2:	mov    rdx,QWORD PTR [rsp+rsi*8+0x20]
   14002aad7:	test   rdx,rdx
   14002aada:	je     0x14002ab48
   14002aadc:	lea    rcx,[rsp+0x58]
   14002aae1:	call   0x14002a318
   14002aae6:	cmp    eax,edi
   14002aae8:	jne    0x14002aaf5
   14002aaea:	inc    rsi
   14002aaed:	cmp    rsi,0x2
   14002aaf1:	jb     0x14002aad2
   14002aaf3:	jmp    0x14002ab4d
   14002aaf5:	test   eax,eax
   14002aaf7:	jns    0x14002aafd
   14002aaf9:	mov    edi,eax
   14002aafb:	jmp    0x14002ab04
   14002aafd:	mov    rbx,QWORD PTR [rsp+0x58]
   14002ab02:	xor    edi,edi
   14002ab04:	test   edi,edi
   14002ab06:	js     0x14002ab4d
   14002ab08:	lea    rdx,[rip+0x128d1]        # 0x14003d3e0
   14002ab0f:	mov    rcx,rbx
   14002ab12:	call   QWORD PTR [rip+0x7788]        # 0x1400322a0
   14002ab18:	mov    rbp,rax
   14002ab1b:	test   rax,rax
   14002ab1e:	jne    0x14002ab32
   14002ab20:	xor    edx,edx
   14002ab22:	lea    rcx,[rip+0x128b7]        # 0x14003d3e0
   14002ab29:	call   0x14002a3c0
   14002ab2e:	mov    esi,eax
   14002ab30:	jmp    0x14002ab34
   14002ab32:	xor    esi,esi
   14002ab34:	mov    edi,0x8007007f
   14002ab39:	cmp    esi,edi
   14002ab3b:	je     0x14002ab4d
   14002ab3d:	test   esi,esi
   14002ab3f:	js     0x14002ab4f
   14002ab41:	mov    QWORD PTR [r14],rbp
   14002ab44:	xor    esi,esi
   14002ab46:	jmp    0x14002ab4f
   14002ab48:	mov    edi,0x80070057
   14002ab4d:	mov    esi,edi
   14002ab4f:	test   rbx,rbx
   14002ab52:	je     0x14002ab5d
   14002ab54:	mov    rcx,rbx
   14002ab57:	call   QWORD PTR [rip+0x7583]        # 0x1400320e0
   14002ab5d:	mov    rbx,QWORD PTR [rsp+0x50]
   14002ab62:	mov    eax,esi
   14002ab64:	mov    rbp,QWORD PTR [rsp+0x60]
   14002ab69:	add    rsp,0x30
   14002ab6d:	pop    r14
   14002ab6f:	pop    rdi
   14002ab70:	pop    rsi
   14002ab71:	ret    
   14002ab72:	int3   
   14002ab73:	int3   
   14002ab74:	int3   
   14002ab75:	int3   
   14002ab76:	int3   
   14002ab77:	int3   
   14002ab78:	mov    QWORD PTR [rsp+0x8],rbx
   14002ab7d:	push   rdi
   14002ab7e:	sub    rsp,0x30
   14002ab82:	mov    rbx,rcx
   14002ab85:	mov    rdi,rdx
   14002ab88:	mov    rcx,rdx
   14002ab8b:	call   QWORD PTR [rip+0x7677]        # 0x140032208
   14002ab91:	cmp    eax,0xffffffff
   14002ab94:	jne    0x14002abe1
   14002ab96:	call   0x14002b128
   14002ab9b:	mov    ebx,eax
   14002ab9d:	lea    ecx,[rax+0x7ff8fffe]
   14002aba3:	cmp    ecx,0x1
   14002aba6:	jbe    0x14002abe5
   14002aba8:	mov    rcx,QWORD PTR [rip+0x204c9]        # 0x14004b078
   14002abaf:	lea    rax,[rip+0x204c2]        # 0x14004b078
   14002abb6:	cmp    rcx,rax
   14002abb9:	je     0x14002abdd
   14002abbb:	test   BYTE PTR [rcx+0x1c],0x1
   14002abbf:	je     0x14002abdd
   14002abc1:	mov    rcx,QWORD PTR [rcx+0x10]
   14002abc5:	lea    r8,[rip+0x127f4]        # 0x14003d3c0
   14002abcc:	mov    edx,0x3b
   14002abd1:	mov    DWORD PTR [rsp+0x20],ebx
   14002abd5:	mov    r9,rdi
   14002abd8:	call   0x140007264
   14002abdd:	mov    eax,ebx
   14002abdf:	jmp    0x14002abe5
   14002abe1:	mov    DWORD PTR [rbx],eax
   14002abe3:	xor    eax,eax
   14002abe5:	mov    rbx,QWORD PTR [rsp+0x40]
   14002abea:	add    rsp,0x30
   14002abee:	pop    rdi
   14002abef:	ret    
   14002abf0:	int3   
   14002abf1:	int3   
   14002abf2:	int3   
   14002abf3:	int3   
   14002abf4:	int3   
   14002abf5:	int3   
   14002abf6:	int3   
   14002abf7:	int3   
   14002abf8:	mov    rax,rsp
   14002abfb:	mov    QWORD PTR [rax+0x8],rbx
   14002abff:	mov    QWORD PTR [rax+0x10],rbp
   14002ac03:	mov    QWORD PTR [rax+0x18],rsi
   14002ac07:	push   rdi
   14002ac08:	sub    rsp,0x30
   14002ac0c:	and    DWORD PTR [r9],0x0
   14002ac10:	lea    rcx,[rax-0x18]
   14002ac14:	and    QWORD PTR [rax-0x18],0x0
   14002ac19:	mov    rbp,rdx
   14002ac1c:	lea    rdx,[rip+0x12735]        # 0x14003d358
   14002ac23:	mov    rdi,r9
   14002ac26:	mov    rsi,r8
   14002ac29:	call   0x14002a318
   14002ac2e:	and    QWORD PTR [rsp+0x58],0x0
   14002ac34:	lea    rcx,[rsp+0x58]
   14002ac39:	test   eax,eax
   14002ac3b:	js     0x14002ac77
   14002ac3d:	lea    r8,[rip+0x126fc]        # 0x14003d340
   14002ac44:	lea    rdx,[rip+0x1270d]        # 0x14003d358
   14002ac4b:	call   0x14002a460
   14002ac50:	mov    ebx,eax
   14002ac52:	test   eax,eax
   14002ac54:	js     0x14002acdb
   14002ac5a:	mov    rbx,QWORD PTR [rsp+0x58]
   14002ac5f:	test   rbx,rbx
   14002ac62:	je     0x14002acd6
   14002ac64:	mov    rcx,rbx
   14002ac67:	call   QWORD PTR [rip+0x7a3b]        # 0x1400326a8
   14002ac6d:	mov    rdx,rsi
   14002ac70:	mov    rcx,rbp
   14002ac73:	call   rbx
   14002ac75:	jmp    0x14002acb0
   14002ac77:	lea    r8,[rip+0x1270a]        # 0x14003d388
   14002ac7e:	lea    rdx,[rip+0x1267b]        # 0x14003d300
   14002ac85:	call   0x14002a460
   14002ac8a:	mov    ebx,eax
   14002ac8c:	test   eax,eax
   14002ac8e:	js     0x14002acdb
   14002ac90:	mov    rbx,QWORD PTR [rsp+0x58]
   14002ac95:	test   rbx,rbx
   14002ac98:	je     0x14002acd6
   14002ac9a:	mov    rcx,rbx
   14002ac9d:	call   QWORD PTR [rip+0x7a05]        # 0x1400326a8
   14002aca3:	mov    r8,rsi
   14002aca6:	mov    rdx,rbp
   14002aca9:	mov    ecx,0x1
   14002acae:	call   rbx
   14002acb0:	mov    esi,eax
   14002acb2:	test   eax,eax
   14002acb4:	je     0x14002acba
   14002acb6:	xor    ebx,ebx
   14002acb8:	jmp    0x14002acd2
   14002acba:	call   QWORD PTR [rip+0x75c8]        # 0x140032288
   14002acc0:	movzx  ebx,ax
   14002acc3:	or     ebx,0x80070000
   14002acc9:	test   eax,eax
   14002accb:	cmovle ebx,eax
   14002acce:	test   ebx,ebx
   14002acd0:	js     0x14002acdb
   14002acd2:	mov    DWORD PTR [rdi],esi
   14002acd4:	jmp    0x14002acdb
   14002acd6:	mov    ebx,0x80004005
   14002acdb:	mov    rcx,QWORD PTR [rsp+0x20]
   14002ace0:	test   rcx,rcx
   14002ace3:	je     0x14002aceb
   14002ace5:	call   QWORD PTR [rip+0x73f5]        # 0x1400320e0
   14002aceb:	mov    rbp,QWORD PTR [rsp+0x48]
   14002acf0:	mov    eax,ebx
   14002acf2:	mov    rbx,QWORD PTR [rsp+0x40]
   14002acf7:	mov    rsi,QWORD PTR [rsp+0x50]
   14002acfc:	add    rsp,0x30
   14002ad00:	pop    rdi
   14002ad01:	ret    
   14002ad02:	int3   
   14002ad03:	int3   
   14002ad04:	int3   
   14002ad05:	int3   
   14002ad06:	int3   
   14002ad07:	int3   
   14002ad08:	mov    rax,rsp
   14002ad0b:	mov    QWORD PTR [rax+0x8],rbx
   14002ad0f:	mov    QWORD PTR [rax+0x10],rsi
   14002ad13:	push   rdi
   14002ad14:	sub    rsp,0x40
   14002ad18:	and    QWORD PTR [rax-0x10],0x0
   14002ad1d:	lea    rcx,[rax-0x10]
   14002ad21:	mov    rsi,rdx
   14002ad24:	mov    edi,r9d
   14002ad27:	lea    rdx,[rip+0x1262a]        # 0x14003d358
   14002ad2e:	call   0x14002a318
   14002ad33:	and    QWORD PTR [rsp+0x30],0x0
   14002ad39:	lea    rcx,[rsp+0x30]
   14002ad3e:	test   eax,eax
   14002ad40:	js     0x14002ad83
   14002ad42:	lea    r8,[rip+0x12627]        # 0x14003d370
   14002ad49:	lea    rdx,[rip+0x12608]        # 0x14003d358
   14002ad50:	call   0x14002a460
   14002ad55:	mov    ebx,eax
   14002ad57:	test   eax,eax
   14002ad59:	js     0x14002adeb
   14002ad5f:	mov    rbx,QWORD PTR [rsp+0x30]
   14002ad64:	test   rbx,rbx
   14002ad67:	je     0x14002ade6
   14002ad69:	mov    rcx,rbx
   14002ad6c:	call   QWORD PTR [rip+0x7936]        # 0x1400326a8
   14002ad72:	mov    r9,QWORD PTR [rsp+0x70]
   14002ad77:	mov    r8d,edi
   14002ad7a:	xor    edx,edx
   14002ad7c:	mov    rcx,rsi
   14002ad7f:	call   rbx
   14002ad81:	jmp    0x14002adc8
   14002ad83:	lea    r8,[rip+0x1261e]        # 0x14003d3a8
   14002ad8a:	lea    rdx,[rip+0x1256f]        # 0x14003d300
   14002ad91:	call   0x14002a460
   14002ad96:	mov    ebx,eax
   14002ad98:	test   eax,eax
   14002ad9a:	js     0x14002adeb
   14002ad9c:	mov    rbx,QWORD PTR [rsp+0x30]
   14002ada1:	test   rbx,rbx
   14002ada4:	je     0x14002ade6
   14002ada6:	mov    rcx,rbx
   14002ada9:	call   QWORD PTR [rip+0x78f9]        # 0x1400326a8
   14002adaf:	mov    rax,QWORD PTR [rsp+0x70]
   14002adb4:	xor    r8d,r8d
   14002adb7:	mov    r9d,edi
   14002adba:	mov    QWORD PTR [rsp+0x20],rax
   14002adbf:	mov    rdx,rsi
   14002adc2:	lea    ecx,[r8+0x1]
   14002adc6:	call   rbx
   14002adc8:	test   eax,eax
   14002adca:	je     0x14002add0
   14002adcc:	xor    ebx,ebx
   14002adce:	jmp    0x14002adeb
   14002add0:	call   QWORD PTR [rip+0x74b2]        # 0x140032288
   14002add6:	movzx  ebx,ax
   14002add9:	or     ebx,0x80070000
   14002addf:	test   eax,eax
   14002ade1:	cmovle ebx,eax
   14002ade4:	jmp    0x14002adeb
   14002ade6:	mov    ebx,0x80004005
   14002adeb:	mov    rcx,QWORD PTR [rsp+0x38]
   14002adf0:	test   rcx,rcx
   14002adf3:	je     0x14002adfb
   14002adf5:	call   QWORD PTR [rip+0x72e5]        # 0x1400320e0
   14002adfb:	mov    rsi,QWORD PTR [rsp+0x58]
   14002ae00:	mov    eax,ebx
   14002ae02:	mov    rbx,QWORD PTR [rsp+0x50]
   14002ae07:	add    rsp,0x40
   14002ae0b:	pop    rdi
   14002ae0c:	ret    
   14002ae0d:	int3   
   14002ae0e:	int3   
   14002ae0f:	int3   
   14002ae10:	int3   
   14002ae11:	int3   
   14002ae12:	int3   
   14002ae13:	int3   
   14002ae14:	mov    rax,rsp
   14002ae17:	mov    QWORD PTR [rax+0x10],rbx
   14002ae1b:	push   rdi
   14002ae1c:	sub    rsp,0x30
   14002ae20:	and    QWORD PTR [rcx],0x0
   14002ae24:	mov    r9,r8
   14002ae27:	and    QWORD PTR [rax+0x8],0x0
   14002ae2c:	mov    r8,rdx
   14002ae2f:	and    QWORD PTR [rax+0x20],0x0
   14002ae34:	lea    rdx,[rax+0x8]
   14002ae38:	mov    rdi,rcx
   14002ae3b:	lea    rcx,[rax+0x20]
   14002ae3f:	call   0x14002af24
   14002ae44:	mov    ebx,eax
   14002ae46:	test   eax,eax
   14002ae48:	jns    0x14002ae51
   14002ae4a:	mov    rcx,QWORD PTR [rsp+0x40]
   14002ae4f:	jmp    0x14002ae5d
   14002ae51:	mov    rax,QWORD PTR [rsp+0x40]
   14002ae56:	xor    ecx,ecx
   14002ae58:	mov    QWORD PTR [rdi],rax
   14002ae5b:	xor    ebx,ebx
   14002ae5d:	test   rcx,rcx
   14002ae60:	je     0x14002ae68
   14002ae62:	call   QWORD PTR [rip+0x74e8]        # 0x140032350
   14002ae68:	mov    eax,ebx
   14002ae6a:	mov    rbx,QWORD PTR [rsp+0x48]
   14002ae6f:	add    rsp,0x30
   14002ae73:	pop    rdi
   14002ae74:	ret    
   14002ae75:	int3   
   14002ae76:	int3   
   14002ae77:	int3   
   14002ae78:	int3   
   14002ae79:	int3   
   14002ae7a:	int3   
   14002ae7b:	int3   
   14002ae7c:	mov    QWORD PTR [rsp+0x8],rbx
   14002ae81:	push   rdi
   14002ae82:	sub    rsp,0x30
   14002ae86:	mov    rdi,rcx
   14002ae89:	xor    edx,edx
   14002ae8b:	xor    ecx,ecx
   14002ae8d:	call   QWORD PTR [rip+0x77e5]        # 0x140032678
   14002ae93:	mov    ebx,eax
   14002ae95:	test   eax,eax
   14002ae97:	jns    0x14002aed9
   14002ae99:	cmp    eax,0x80010106
   14002ae9e:	je     0x14002aed5
   14002aea0:	mov    rcx,QWORD PTR [rip+0x201d1]        # 0x14004b078
   14002aea7:	lea    rax,[rip+0x201ca]        # 0x14004b078
   14002aeae:	cmp    rcx,rax
   14002aeb1:	je     0x14002aed5
   14002aeb3:	test   BYTE PTR [rcx+0x1c],0x1
   14002aeb7:	je     0x14002aed5
   14002aeb9:	mov    rcx,QWORD PTR [rcx+0x10]
   14002aebd:	lea    r8,[rip+0x1250c]        # 0x14003d3d0
   14002aec4:	mov    edx,0xf
   14002aec9:	mov    DWORD PTR [rsp+0x20],ebx
   14002aecd:	xor    r9d,r9d
   14002aed0:	call   0x140015b2c
   14002aed5:	mov    eax,ebx
   14002aed7:	jmp    0x14002aee2
   14002aed9:	mov    QWORD PTR [rdi],0x12345678
   14002aee0:	xor    eax,eax
   14002aee2:	mov    rbx,QWORD PTR [rsp+0x40]
   14002aee7:	add    rsp,0x30
   14002aeeb:	pop    rdi
   14002aeec:	ret    
   14002aeed:	int3   
   14002aeee:	int3   
   14002aeef:	int3   
   14002aef0:	int3   
   14002aef1:	int3   
   14002aef2:	int3   
   14002aef3:	int3   
   14002aef4:	mov    rax,rsp
   14002aef7:	mov    QWORD PTR [rax+0x10],rdx
   14002aefb:	mov    QWORD PTR [rax+0x18],r8
   14002aeff:	mov    QWORD PTR [rax+0x20],r9
   14002af03:	sub    rsp,0x28
   14002af07:	lea    r8,[rax+0x18]
   14002af0b:	call   0x14002ae14
   14002af10:	xor    ecx,ecx
   14002af12:	test   eax,eax
   14002af14:	cmovs  ecx,eax
   14002af17:	mov    eax,ecx
   14002af19:	add    rsp,0x28
   14002af1d:	ret    
   14002af1e:	int3   
   14002af1f:	int3   
   14002af20:	int3   
   14002af21:	int3   
   14002af22:	int3   
   14002af23:	int3   
   14002af24:	rex push rbx
   14002af26:	push   rbp
   14002af27:	push   rsi
   14002af28:	push   rdi
   14002af29:	push   r12
   14002af2b:	push   r13
   14002af2d:	push   r14
   14002af2f:	push   r15
   14002af31:	sub    rsp,0x268
   14002af38:	mov    rax,QWORD PTR [rip+0x200e1]        # 0x14004b020
   14002af3f:	xor    rax,rsp
   14002af42:	mov    QWORD PTR [rsp+0x250],rax
   14002af4a:	mov    rdi,QWORD PTR [rdx]
   14002af4d:	xor    esi,esi
   14002af4f:	mov    r14,QWORD PTR [rcx]
   14002af52:	mov    r13,r9
   14002af55:	mov    QWORD PTR [rsp+0x30],rsi
   14002af5a:	mov    r12,r8
   14002af5d:	mov    r15,rdx
   14002af60:	mov    rbp,rcx
   14002af63:	test   rdi,rdi
   14002af66:	jne    0x14002b029
   14002af6c:	mov    r14d,0x104
   14002af72:	call   QWORD PTR [rip+0x7490]        # 0x140032408
   14002af78:	mov    rbx,QWORD PTR [rax+0xc8]
   14002af7f:	mov    rcx,rbx
   14002af82:	call   QWORD PTR [rip+0x7720]        # 0x1400326a8
   14002af88:	mov    r9,r12
   14002af8b:	mov    QWORD PTR [rsp+0x20],r13
   14002af90:	lea    r8,[rsp+0x30]
   14002af95:	mov    ecx,r14d
   14002af98:	lea    rdx,[rsp+0x40]
   14002af9d:	call   rbx
   14002af9f:	test   eax,eax
   14002afa1:	js     0x14002b05f
   14002afa7:	or     rdi,0xffffffffffffffff
   14002afab:	lea    rax,[rsp+0x40]
   14002afb0:	mov    rbx,rdi
   14002afb3:	inc    rbx
   14002afb6:	cmp    WORD PTR [rax+rbx*2],si
   14002afba:	jne    0x14002afb3
   14002afbc:	mov    rcx,QWORD PTR [r15]
   14002afbf:	inc    rbx
   14002afc2:	call   QWORD PTR [rip+0x7388]        # 0x140032350
   14002afc8:	mov    eax,ebx
   14002afca:	mov    QWORD PTR [r15],rsi
   14002afcd:	cmp    rax,rbx
   14002afd0:	je     0x14002afd9
   14002afd2:	mov    eax,0x80070057
   14002afd7:	jmp    0x14002b005
   14002afd9:	mov    edx,ebx
   14002afdb:	xor    ecx,ecx
   14002afdd:	call   QWORD PTR [rip+0x7395]        # 0x140032378
   14002afe3:	mov    QWORD PTR [r15],rax
   14002afe6:	test   rax,rax
   14002afe9:	jne    0x14002aff2
   14002afeb:	mov    eax,0x8007000e
   14002aff0:	jmp    0x14002b005
   14002aff2:	lea    r8,[rbx+rbx*1]
   14002aff6:	mov    rcx,rax
   14002aff9:	lea    rdx,[rsp+0x40]
   14002affe:	call   0x14002e2f2
   14002b003:	mov    eax,esi
   14002b005:	test   eax,eax
   14002b007:	js     0x14002b0fd
   14002b00d:	lea    rax,[rsp+0x40]
   14002b012:	inc    rdi
   14002b015:	cmp    WORD PTR [rax+rdi*2],si
   14002b019:	jne    0x14002b012
   14002b01b:	inc    rdi
   14002b01e:	mov    QWORD PTR [rbp+0x0],rdi
   14002b022:	xor    eax,eax
   14002b024:	jmp    0x14002b0fd
   14002b029:	call   QWORD PTR [rip+0x73d9]        # 0x140032408
   14002b02f:	mov    rbx,QWORD PTR [rax+0xc8]
   14002b036:	mov    rcx,rbx
   14002b039:	call   QWORD PTR [rip+0x7669]        # 0x1400326a8
   14002b03f:	mov    r9,r12
   14002b042:	mov    QWORD PTR [rsp+0x20],r13
   14002b047:	lea    r8,[rsp+0x30]
   14002b04c:	mov    rdx,rdi
   14002b04f:	mov    rcx,r14
   14002b052:	call   rbx
   14002b054:	cmp    eax,0x8007007a
   14002b059:	jne    0x14002b0fd
   14002b05f:	cmp    r14,QWORD PTR [rsp+0x30]
   14002b064:	jae    0x14002b06d
   14002b066:	mov    r14,QWORD PTR [rsp+0x30]
   14002b06b:	jmp    0x14002b074
   14002b06d:	lea    r14,[r14+r14*2]
   14002b071:	shr    r14,1
   14002b074:	cmp    r14,0x7fffffff
   14002b07b:	ja     0x14002b0f8
   14002b07d:	mov    rcx,QWORD PTR [r15]
   14002b080:	call   QWORD PTR [rip+0x72ca]        # 0x140032350
   14002b086:	mov    eax,r14d
   14002b089:	mov    QWORD PTR [r15],rsi
   14002b08c:	cmp    rax,r14
   14002b08f:	jne    0x14002b0ed
   14002b091:	mov    edx,r14d
   14002b094:	xor    ecx,ecx
   14002b096:	call   QWORD PTR [rip+0x72dc]        # 0x140032378
   14002b09c:	mov    QWORD PTR [r15],rax
   14002b09f:	test   rax,rax
   14002b0a2:	je     0x14002b0e6
   14002b0a4:	mov    QWORD PTR [rbp+0x0],r14
   14002b0a8:	mov    rdi,QWORD PTR [r15]
   14002b0ab:	call   QWORD PTR [rip+0x7357]        # 0x140032408
   14002b0b1:	mov    rbx,QWORD PTR [rax+0xc8]
   14002b0b8:	mov    rcx,rbx
   14002b0bb:	call   QWORD PTR [rip+0x75e7]        # 0x1400326a8
   14002b0c1:	mov    r9,r12
   14002b0c4:	mov    QWORD PTR [rsp+0x20],r13
   14002b0c9:	lea    r8,[rsp+0x30]
   14002b0ce:	mov    rdx,rdi
   14002b0d1:	mov    rcx,r14
   14002b0d4:	call   rbx
   14002b0d6:	cmp    eax,0x8007007a
   14002b0db:	je     0x14002b05f
   14002b0dd:	test   eax,eax
   14002b0df:	cmovs  esi,eax
   14002b0e2:	mov    eax,esi
   14002b0e4:	jmp    0x14002b0fd
   14002b0e6:	mov    eax,0x8007000e
   14002b0eb:	jmp    0x14002b0f2
   14002b0ed:	mov    eax,0x80070057
   14002b0f2:	mov    QWORD PTR [rbp+0x0],rsi
   14002b0f6:	jmp    0x14002b0fd
   14002b0f8:	mov    eax,0x8007007a
   14002b0fd:	mov    rcx,QWORD PTR [rsp+0x250]
   14002b105:	xor    rcx,rsp
   14002b108:	call   0x14002dd00
   14002b10d:	add    rsp,0x268
   14002b114:	pop    r15
   14002b116:	pop    r14
   14002b118:	pop    r13
   14002b11a:	pop    r12
   14002b11c:	pop    rdi
   14002b11d:	pop    rsi
   14002b11e:	pop    rbp
   14002b11f:	pop    rbx
   14002b120:	ret    
   14002b121:	int3   
   14002b122:	int3   
   14002b123:	int3   
   14002b124:	int3   
   14002b125:	int3   
   14002b126:	int3   
   14002b127:	int3   
   14002b128:	sub    rsp,0x28
   14002b12c:	call   QWORD PTR [rip+0x7156]        # 0x140032288
   14002b132:	movzx  ecx,ax
   14002b135:	or     ecx,0x80070000
   14002b13b:	test   eax,eax
   14002b13d:	cmovle ecx,eax
   14002b140:	mov    eax,0x80004005
   14002b145:	test   ecx,ecx
   14002b147:	cmovns ecx,eax
   14002b14a:	mov    eax,ecx
   14002b14c:	add    rsp,0x28
   14002b150:	ret    
   14002b151:	int3   
   14002b152:	int3   
   14002b153:	int3   
   14002b154:	int3   
   14002b155:	int3   
   14002b156:	int3   
   14002b157:	int3   
   14002b158:	rex push rbx
   14002b15a:	sub    rsp,0x20
   14002b15e:	mov    rbx,QWORD PTR [rip+0x251b3]        # 0x140050318
   14002b165:	test   rbx,rbx
   14002b168:	jne    0x14002b190
   14002b16a:	and    QWORD PTR [rsp+0x30],rbx
   14002b16f:	lea    rcx,[rsp+0x30]
   14002b174:	call   0x14002aa90
   14002b179:	mov    rbx,QWORD PTR [rsp+0x30]
   14002b17e:	test   rbx,rbx
   14002b181:	cmove  rbx,QWORD PTR [rip+0x6fdf]        # 0x140032168
   14002b189:	mov    QWORD PTR [rip+0x25188],rbx        # 0x140050318
   14002b190:	mov    rcx,rbx
   14002b193:	call   QWORD PTR [rip+0x750f]        # 0x1400326a8
   14002b199:	lea    rcx,[rsp+0x38]
   14002b19e:	call   rbx
   14002b1a0:	mov    rax,QWORD PTR [rsp+0x38]
   14002b1a5:	mov    DWORD PTR [rsp+0x30],eax
   14002b1a9:	shr    rax,0x20
   14002b1ad:	mov    DWORD PTR [rsp+0x34],eax
   14002b1b1:	mov    rax,QWORD PTR [rsp+0x30]
   14002b1b6:	add    rsp,0x20
   14002b1ba:	pop    rbx
   14002b1bb:	ret    
   14002b1bc:	int3   
   14002b1bd:	int3   
   14002b1be:	int3   
   14002b1bf:	int3   
   14002b1c0:	int3   
   14002b1c1:	int3   
   14002b1c2:	int3   
   14002b1c3:	int3   
   14002b1c4:	rex push rbx
   14002b1c6:	sub    rsp,0x20
   14002b1ca:	and    DWORD PTR [rsp+0x40],0x0
   14002b1cf:	lea    r9,[rsp+0x40]
   14002b1d4:	and    QWORD PTR [rsp+0x48],0x0
   14002b1da:	lea    r8,[rsp+0x48]
   14002b1df:	mov    rax,rdx
   14002b1e2:	mov    rbx,rcx
   14002b1e5:	mov    rcx,rax
   14002b1e8:	lea    rdx,[rip+0xb7e5]        # 0x1400369d4
   14002b1ef:	call   QWORD PTR [rip+0x71bb]        # 0x1400323b0
   14002b1f5:	test   eax,eax
   14002b1f7:	jne    0x14002b24c
   14002b1f9:	call   QWORD PTR [rip+0x7089]        # 0x140032288
   14002b1ff:	movzx  ecx,ax
   14002b202:	mov    ebx,0x80070715
   14002b207:	or     ecx,0x80070000
   14002b20d:	test   eax,eax
   14002b20f:	cmovle ecx,eax
   14002b212:	test   ecx,ecx
   14002b214:	cmovs  ebx,ecx
   14002b217:	mov    rcx,QWORD PTR [rip+0x1fe5a]        # 0x14004b078
   14002b21e:	lea    rax,[rip+0x1fe53]        # 0x14004b078
   14002b225:	cmp    rcx,rax
   14002b228:	je     0x14002b248
   14002b22a:	test   BYTE PTR [rcx+0x1c],0x2
   14002b22e:	je     0x14002b248
   14002b230:	mov    rcx,QWORD PTR [rcx+0x10]
   14002b234:	lea    r8,[rip+0x121c5]        # 0x14003d400
   14002b23b:	mov    edx,0xd
   14002b240:	mov    r9d,ebx
   14002b243:	call   0x140001f70
   14002b248:	mov    eax,ebx
   14002b24a:	jmp    0x14002b27d
   14002b24c:	cmp    DWORD PTR [rsp+0x40],0x34
   14002b251:	jae    0x14002b25a
   14002b253:	mov    eax,0x8000ffff
   14002b258:	jmp    0x14002b27d
   14002b25a:	mov    rax,QWORD PTR [rsp+0x48]
   14002b25f:	movups xmm0,XMMWORD PTR [rax]
   14002b262:	movups XMMWORD PTR [rbx],xmm0
   14002b265:	movups xmm1,XMMWORD PTR [rax+0x10]
   14002b269:	movups XMMWORD PTR [rbx+0x10],xmm1
   14002b26d:	movups xmm0,XMMWORD PTR [rax+0x20]
   14002b271:	movups XMMWORD PTR [rbx+0x20],xmm0
   14002b275:	mov    eax,DWORD PTR [rax+0x30]
   14002b278:	mov    DWORD PTR [rbx+0x30],eax
   14002b27b:	xor    eax,eax
   14002b27d:	add    rsp,0x20
   14002b281:	pop    rbx
   14002b282:	ret    
   14002b283:	int3   
   14002b284:	int3   
   14002b285:	int3   
   14002b286:	int3   
   14002b287:	int3   
   14002b288:	int3   
   14002b289:	int3   
   14002b28a:	int3   
   14002b28b:	int3   
   14002b28c:	sub    rsp,0x28
   14002b290:	cmp    DWORD PTR [rcx+0xc],0xf12192e
   14002b297:	je     0x14002b29f
   14002b299:	call   QWORD PTR [rip+0x6fd9]        # 0x140032278
   14002b29f:	add    rsp,0x28
   14002b2a3:	ret    
   14002b2a4:	int3   
   14002b2a5:	int3   
   14002b2a6:	int3   
   14002b2a7:	int3   
   14002b2a8:	int3   
   14002b2a9:	int3   
   14002b2aa:	int3   
   14002b2ab:	int3   
   14002b2ac:	mov    r11,rsp
   14002b2af:	mov    QWORD PTR [r11+0x8],rbx
   14002b2b3:	mov    QWORD PTR [r11+0x18],rsi
   14002b2b7:	mov    QWORD PTR [r11+0x10],rdx
   14002b2bb:	push   rdi
   14002b2bc:	sub    rsp,0x30
   14002b2c0:	and    QWORD PTR [rcx],0x0
   14002b2c4:	lea    rax,[r11+0x10]
   14002b2c8:	and    QWORD PTR [r11+0x10],0x0
   14002b2cd:	mov    rbx,r8
   14002b2d0:	mov    rsi,rcx
   14002b2d3:	mov    QWORD PTR [r11-0x18],rax
   14002b2d7:	mov    rdx,rbx
   14002b2da:	mov    r9d,0x1
   14002b2e0:	xor    r8d,r8d
   14002b2e3:	mov    rcx,0xffffffff80000002
   14002b2ea:	call   QWORD PTR [rip+0x6d60]        # 0x140032050
   14002b2f0:	mov    edi,eax
   14002b2f2:	cmp    eax,0x2
   14002b2f5:	jne    0x14002b32d
   14002b2f7:	mov    rcx,QWORD PTR [rip+0x1fd7a]        # 0x14004b078
   14002b2fe:	lea    rax,[rip+0x1fd73]        # 0x14004b078
   14002b305:	cmp    rcx,rax
   14002b308:	je     0x14002b326
   14002b30a:	test   BYTE PTR [rcx+0x1c],0x4
   14002b30e:	je     0x14002b326
   14002b310:	mov    rcx,QWORD PTR [rcx+0x10]
   14002b314:	lea    edx,[rdi+0x8]
   14002b317:	mov    r9,rbx
   14002b31a:	lea    r8,[rip+0x120ef]        # 0x14003d410
   14002b321:	call   0x1400071e8
   14002b326:	mov    ebx,0x80070002
   14002b32b:	jmp    0x14002b378
   14002b32d:	test   eax,eax
   14002b32f:	je     0x14002b37f
   14002b331:	mov    rcx,QWORD PTR [rip+0x1fd40]        # 0x14004b078
   14002b338:	lea    rax,[rip+0x1fd39]        # 0x14004b078
   14002b33f:	cmp    rcx,rax
   14002b342:	je     0x14002b366
   14002b344:	test   BYTE PTR [rcx+0x1c],0x1
   14002b348:	je     0x14002b366
   14002b34a:	mov    rcx,QWORD PTR [rcx+0x10]
   14002b34e:	lea    r8,[rip+0x120bb]        # 0x14003d410
   14002b355:	mov    edx,0xb
   14002b35a:	mov    DWORD PTR [rsp+0x20],edi
   14002b35e:	mov    r9,rbx
   14002b361:	call   0x140007264
   14002b366:	movzx  ebx,di
   14002b369:	or     ebx,0x80070000
   14002b36f:	test   edi,edi
   14002b371:	cmovle ebx,edi
   14002b374:	test   ebx,ebx
   14002b376:	jns    0x14002b37f
   14002b378:	mov    rcx,QWORD PTR [rsp+0x48]
   14002b37d:	jmp    0x14002b39f
   14002b37f:	mov    rcx,QWORD PTR [rsp+0x48]
   14002b384:	test   rcx,rcx
   14002b387:	jne    0x14002b390
   14002b389:	mov    ebx,0x8000ffff
   14002b38e:	jmp    0x14002b39f
   14002b390:	mov    rax,rcx
   14002b393:	xor    ecx,ecx
   14002b395:	mov    QWORD PTR [rsp+0x48],rcx
   14002b39a:	xor    ebx,ebx
   14002b39c:	mov    QWORD PTR [rsi],rax
   14002b39f:	test   rcx,rcx
   14002b3a2:	je     0x14002b3aa
   14002b3a4:	call   QWORD PTR [rip+0x6c8e]        # 0x140032038
   14002b3aa:	mov    rsi,QWORD PTR [rsp+0x50]
   14002b3af:	mov    eax,ebx
   14002b3b1:	mov    rbx,QWORD PTR [rsp+0x40]
   14002b3b6:	add    rsp,0x30
   14002b3ba:	pop    rdi
   14002b3bb:	ret    
   14002b3bc:	int3   
   14002b3bd:	int3   
   14002b3be:	int3   
   14002b3bf:	int3   
   14002b3c0:	int3   
   14002b3c1:	int3   
   14002b3c2:	int3   
   14002b3c3:	int3   
   14002b3c4:	mov    QWORD PTR [rsp+0x8],rbp
   14002b3c9:	mov    QWORD PTR [rsp+0x10],rsi
   14002b3ce:	push   rdi
   14002b3cf:	sub    rsp,0x20
   14002b3d3:	cmp    QWORD PTR [rsp+0x50],0x0
   14002b3d9:	mov    rdi,r9
   14002b3dc:	mov    esi,r8d
   14002b3df:	mov    rbp,rcx
   14002b3e2:	jne    0x14002b3e8
   14002b3e4:	xor    eax,eax
   14002b3e6:	jmp    0x14002b44f
   14002b3e8:	mov    r8,QWORD PTR [rsp+0x50]
   14002b3ed:	mov    ecx,esi
   14002b3ef:	call   0x14002d404
   14002b3f4:	test   eax,eax
   14002b3f6:	je     0x14002b44f
   14002b3f8:	cmp    eax,0x800700ea
   14002b3fd:	je     0x14002b44f
   14002b3ff:	cmp    eax,0x8007139f
   14002b404:	je     0x14002b419
   14002b406:	mov    r8,QWORD PTR [rsp+0x50]
   14002b40b:	mov    ecx,esi
   14002b40d:	mov    rdx,QWORD PTR [rdi]
   14002b410:	call   0x14002d3a8
   14002b415:	test   al,al
   14002b417:	jne    0x14002b3e4
   14002b419:	mov    rcx,QWORD PTR [rip+0x1fc58]        # 0x14004b078
   14002b420:	lea    rdx,[rip+0x1fc51]        # 0x14004b078
   14002b427:	cmp    rcx,rdx
   14002b42a:	je     0x14002b44a
   14002b42c:	test   BYTE PTR [rcx+0x1c],0x1
   14002b430:	je     0x14002b44a
   14002b432:	mov    rcx,QWORD PTR [rcx+0x10]
   14002b436:	lea    r8,[rip+0x11fd3]        # 0x14003d410
   14002b43d:	mov    edx,0x17
   14002b442:	mov    r9,rbp
   14002b445:	call   0x1400071e8
   14002b44a:	mov    eax,0x8007139f
   14002b44f:	mov    rbp,QWORD PTR [rsp+0x30]
   14002b454:	mov    rsi,QWORD PTR [rsp+0x38]
   14002b459:	add    rsp,0x20
   14002b45d:	pop    rdi
   14002b45e:	ret    
   14002b45f:	int3   
   14002b460:	int3   
   14002b461:	int3   
   14002b462:	int3   
   14002b463:	int3   
   14002b464:	int3   
   14002b465:	int3   
   14002b466:	int3   
   14002b467:	int3   
   14002b468:	mov    QWORD PTR [rsp+0x8],rbx
   14002b46d:	mov    QWORD PTR [rsp+0x10],rbp
   14002b472:	mov    QWORD PTR [rsp+0x18],rdi
   14002b477:	push   r12
   14002b479:	push   r14
   14002b47b:	push   r15
   14002b47d:	sub    rsp,0x30
   14002b481:	mov    r15,QWORD PTR [r9]
   14002b484:	mov    rdi,r9
   14002b487:	mov    eax,r15d
   14002b48a:	mov    r12,r8
   14002b48d:	mov    DWORD PTR [rsp+0x68],eax
   14002b491:	mov    rbp,rdx
   14002b494:	cmp    rax,r15
   14002b497:	je     0x14002b4ba
   14002b499:	mov    ebx,0x80070057
   14002b49e:	mov    eax,ebx
   14002b4a0:	mov    rbx,QWORD PTR [rsp+0x50]
   14002b4a5:	mov    rbp,QWORD PTR [rsp+0x58]
   14002b4aa:	mov    rdi,QWORD PTR [rsp+0x60]
   14002b4af:	add    rsp,0x30
   14002b4b3:	pop    r15
   14002b4b5:	pop    r14
   14002b4b7:	pop    r12
   14002b4b9:	ret    
   14002b4ba:	mov    r14,QWORD PTR [rsp+0x70]
   14002b4bf:	lea    rax,[rsp+0x68]
   14002b4c4:	mov    r9,r8
   14002b4c7:	mov    QWORD PTR [rsp+0x28],rax
   14002b4cc:	xor    r8d,r8d
   14002b4cf:	mov    QWORD PTR [rsp+0x20],r14
   14002b4d4:	call   QWORD PTR [rip+0x6be6]        # 0x1400320c0
   14002b4da:	movzx  ebx,ax
   14002b4dd:	or     ebx,0x80070000
   14002b4e3:	test   eax,eax
   14002b4e5:	cmovle ebx,eax
   14002b4e8:	test   ebx,ebx
   14002b4ea:	js     0x14002b510
   14002b4ec:	test   r14,r14
   14002b4ef:	je     0x14002b504
   14002b4f1:	mov    eax,DWORD PTR [rsp+0x68]
   14002b4f5:	cmp    rax,QWORD PTR [rdi]
   14002b4f8:	jbe    0x14002b504
   14002b4fa:	mov    QWORD PTR [rdi],rax
   14002b4fd:	mov    ebx,0x800700ea
   14002b502:	jmp    0x14002b49e
   14002b504:	mov    eax,DWORD PTR [rsp+0x68]
   14002b508:	mov    QWORD PTR [rdi],rax
   14002b50b:	jmp    0x14002b5cd
   14002b510:	cmp    ebx,0x80070002
   14002b516:	jne    0x14002b553
   14002b518:	mov    rcx,QWORD PTR [rip+0x1fb59]        # 0x14004b078
   14002b51f:	lea    rax,[rip+0x1fb52]        # 0x14004b078
   14002b526:	cmp    rcx,rax
   14002b529:	je     0x14002b549
   14002b52b:	test   BYTE PTR [rcx+0x1c],0x4
   14002b52f:	je     0x14002b549
   14002b531:	mov    rcx,QWORD PTR [rcx+0x10]
   14002b535:	lea    r8,[rip+0x11ed4]        # 0x14003d410
   14002b53c:	mov    edx,0x15
   14002b541:	mov    r9,rbp
   14002b544:	call   0x1400071e8
   14002b549:	mov    ebx,0x80070002
   14002b54e:	jmp    0x14002b49e
   14002b553:	cmp    ebx,0x800700ea
   14002b559:	je     0x14002b592
   14002b55b:	mov    rcx,QWORD PTR [rip+0x1fb16]        # 0x14004b078
   14002b562:	lea    rax,[rip+0x1fb0f]        # 0x14004b078
   14002b569:	cmp    rcx,rax
   14002b56c:	je     0x14002b5ad
   14002b56e:	test   BYTE PTR [rcx+0x1c],0x1
   14002b572:	je     0x14002b5ad
   14002b574:	mov    rcx,QWORD PTR [rcx+0x10]
   14002b578:	lea    r8,[rip+0x11e91]        # 0x14003d410
   14002b57f:	mov    edx,0x16
   14002b584:	mov    DWORD PTR [rsp+0x20],ebx
   14002b588:	mov    r9,rbp
   14002b58b:	call   0x140007264
   14002b590:	jmp    0x14002b5ad
   14002b592:	mov    eax,DWORD PTR [rsp+0x68]
   14002b596:	cmp    QWORD PTR [rdi],rax
   14002b599:	jb     0x14002b5a5
   14002b59b:	mov    ebx,0x8000ffff
   14002b5a0:	jmp    0x14002b49e
   14002b5a5:	mov    QWORD PTR [rdi],rax
   14002b5a8:	mov    ebx,0x800700ea
   14002b5ad:	cmp    ebx,0x800700ea
   14002b5b3:	je     0x14002b49e
   14002b5b9:	cmp    ebx,0x80070002
   14002b5bf:	je     0x14002b49e
   14002b5c5:	test   ebx,ebx
   14002b5c7:	js     0x14002b49e
   14002b5cd:	mov    r8d,DWORD PTR [r12]
   14002b5d1:	mov    r9,rdi
   14002b5d4:	mov    rdx,r15
   14002b5d7:	mov    QWORD PTR [rsp+0x20],r14
   14002b5dc:	mov    rcx,rbp
   14002b5df:	call   0x14002b3c4
   14002b5e4:	jmp    0x14002b4a0
   14002b5e9:	int3   
   14002b5ea:	int3   
   14002b5eb:	int3   
   14002b5ec:	int3   
   14002b5ed:	int3   
   14002b5ee:	int3   
   14002b5ef:	int3   
   14002b5f0:	mov    rax,rsp
   14002b5f3:	push   rbx
   14002b5f4:	sub    rsp,0x40
   14002b5f8:	mov    QWORD PTR [rax-0x28],r8
   14002b5fc:	lea    r9,[rax-0x18]
   14002b600:	xor    ebx,ebx
   14002b602:	mov    QWORD PTR [rax-0x18],0x4
   14002b60a:	lea    r8,[rax+0x20]
   14002b60e:	mov    DWORD PTR [rax+0x20],ebx
   14002b611:	call   0x14002b468
   14002b616:	cmp    eax,0x800700ea
   14002b61b:	jne    0x14002b624
   14002b61d:	mov    eax,0x8007065d
   14002b622:	jmp    0x14002b643
   14002b624:	test   eax,eax
   14002b626:	js     0x14002b62f
   14002b628:	cmp    DWORD PTR [rsp+0x68],0x4
   14002b62d:	jne    0x14002b61d
   14002b62f:	mov    ecx,0x80070002
   14002b634:	cmp    eax,ecx
   14002b636:	jne    0x14002b63c
   14002b638:	mov    eax,ecx
   14002b63a:	jmp    0x14002b643
   14002b63c:	test   eax,eax
   14002b63e:	cmovs  ebx,eax
   14002b641:	mov    eax,ebx
   14002b643:	add    rsp,0x40
   14002b647:	pop    rbx
   14002b648:	ret    
   14002b649:	int3   
   14002b64a:	int3   
   14002b64b:	int3   
   14002b64c:	int3   
   14002b64d:	int3   
   14002b64e:	int3   
   14002b64f:	int3   
   14002b650:	mov    QWORD PTR [rsp+0x8],rbx
   14002b655:	mov    QWORD PTR [rsp+0x10],rsi
   14002b65a:	push   rdi
   14002b65b:	sub    rsp,0x20
   14002b65f:	mov    rdi,rcx
   14002b662:	mov    rbx,rdx
   14002b665:	add    rcx,0x10
   14002b669:	call   QWORD PTR [rip+0x6a99]        # 0x140032108
   14002b66f:	add    rbx,0x10
   14002b673:	lea    rdx,[rdi+0x38]
   14002b677:	mov    rax,QWORD PTR [rdx]
   14002b67a:	lea    rcx,[rdi+0x10]
   14002b67e:	mov    QWORD PTR [rbx],rax
   14002b681:	mov    QWORD PTR [rbx+0x8],rdx
   14002b685:	mov    QWORD PTR [rax+0x8],rbx
   14002b689:	mov    QWORD PTR [rdx],rbx
   14002b68c:	mov    rbx,QWORD PTR [rsp+0x30]
   14002b691:	mov    rsi,QWORD PTR [rsp+0x38]
   14002b696:	add    rsp,0x20
   14002b69a:	pop    rdi
   14002b69b:	rex.W jmp QWORD PTR [rip+0x6a56]        # 0x1400320f8
   14002b6a2:	int3   
   14002b6a3:	int3   
   14002b6a4:	int3   
   14002b6a5:	int3   
   14002b6a6:	int3   
   14002b6a7:	int3   
   14002b6a8:	int3   
   14002b6a9:	int3   
   14002b6aa:	int3   
   14002b6ab:	int3   
   14002b6ac:	int3   
   14002b6ad:	int3   
   14002b6ae:	int3   
   14002b6af:	int3   
   14002b6b0:	mov    QWORD PTR [rsp+0x8],rbx
   14002b6b5:	push   rdi
   14002b6b6:	sub    rsp,0x20
   14002b6ba:	lea    rdi,[rcx+0x10]
   14002b6be:	mov    rbx,rdx
   14002b6c1:	mov    rcx,rdi
   14002b6c4:	call   QWORD PTR [rip+0x6a3e]        # 0x140032108
   14002b6ca:	mov    rax,QWORD PTR [rbx+0x18]
   14002b6ce:	mov    rcx,rdi
   14002b6d1:	mov    r8,QWORD PTR [rbx+0x10]
   14002b6d5:	mov    QWORD PTR [rax],r8
   14002b6d8:	mov    QWORD PTR [r8+0x8],rax
   14002b6dc:	mov    rbx,QWORD PTR [rsp+0x30]
   14002b6e1:	add    rsp,0x20
   14002b6e5:	pop    rdi
   14002b6e6:	rex.W jmp QWORD PTR [rip+0x6a0b]        # 0x1400320f8
   14002b6ed:	int3   
   14002b6ee:	int3   
   14002b6ef:	int3   
   14002b6f0:	int3   
   14002b6f1:	int3   
   14002b6f2:	int3   
   14002b6f3:	int3   
   14002b6f4:	int3   
   14002b6f5:	int3   
   14002b6f6:	int3   
   14002b6f7:	int3   
   14002b6f8:	int3   
   14002b6f9:	int3   
   14002b6fa:	int3   
   14002b6fb:	int3   
   14002b6fc:	int3   
   14002b6fd:	int3   
   14002b6fe:	int3   
   14002b6ff:	int3   
   14002b700:	mov    QWORD PTR [rsp+0x8],rbx
   14002b705:	mov    QWORD PTR [rsp+0x10],rdi
   14002b70a:	push   rbp
   14002b70b:	mov    rbp,rsp
   14002b70e:	sub    rsp,0x40
   14002b712:	lea    rax,[rbp-0x20]
   14002b716:	mov    rbx,rcx
   14002b719:	mov    QWORD PTR [rbp-0x18],rax
   14002b71d:	lea    rdi,[rcx+0x10]
   14002b721:	lea    rax,[rbp-0x20]
   14002b725:	mov    rcx,rdi
   14002b728:	mov    QWORD PTR [rbp-0x20],rax
   14002b72c:	call   QWORD PTR [rip+0x69d6]        # 0x140032108
   14002b732:	mov    r8,QWORD PTR [rbp-0x20]
   14002b736:	lea    rax,[rbp-0x10]
   14002b73a:	mov    QWORD PTR [rbp-0x8],rax
   14002b73e:	lea    rcx,[rbp-0x10]
   14002b742:	mov    BYTE PTR [rbx+0x48],0x1
   14002b746:	lea    rax,[rbp-0x20]
   14002b74a:	add    rbx,0x38
   14002b74e:	mov    QWORD PTR [rbp-0x10],rcx
   14002b752:	cmp    r8,rax
   14002b755:	je     0x14002b78a
   14002b757:	mov    rax,QWORD PTR [rbp-0x18]
   14002b75b:	lea    rcx,[rbp-0x20]
   14002b75f:	mov    QWORD PTR [rbp-0x18],rcx
   14002b763:	lea    rcx,[rbp-0x20]
   14002b767:	mov    QWORD PTR [rbp-0x20],rcx
   14002b76b:	lea    rcx,[rbp-0x10]
   14002b76f:	mov    QWORD PTR [rbp-0x10],r8
   14002b773:	mov    QWORD PTR [r8+0x8],rcx
   14002b777:	lea    rcx,[rbp-0x10]
   14002b77b:	mov    QWORD PTR [rbp-0x8],rax
   14002b77f:	mov    QWORD PTR [rax],rcx
   14002b782:	mov    r8,QWORD PTR [rbp-0x20]
   14002b786:	mov    rcx,QWORD PTR [rbp-0x10]
   14002b78a:	mov    rdx,QWORD PTR [rbx]
   14002b78d:	cmp    rdx,rbx
   14002b790:	je     0x14002b7b4
   14002b792:	mov    rax,QWORD PTR [rbx+0x8]
   14002b796:	lea    rcx,[rbp-0x20]
   14002b79a:	mov    QWORD PTR [rbx+0x8],rbx
   14002b79e:	mov    QWORD PTR [rbx],rbx
   14002b7a1:	mov    QWORD PTR [rbp-0x20],rdx
   14002b7a5:	mov    QWORD PTR [rdx+0x8],rcx
   14002b7a9:	mov    QWORD PTR [r8+0x8],rax
   14002b7ad:	mov    QWORD PTR [rax],r8
   14002b7b0:	mov    rcx,QWORD PTR [rbp-0x10]
   14002b7b4:	lea    rax,[rbp-0x10]
   14002b7b8:	cmp    rcx,rax
   14002b7bb:	je     0x14002b7e2
   14002b7bd:	mov    rdx,QWORD PTR [rbp-0x8]
   14002b7c1:	lea    r8,[rbp-0x10]
   14002b7c5:	mov    rax,QWORD PTR [rbx]
   14002b7c8:	mov    QWORD PTR [rbp-0x8],r8
   14002b7cc:	lea    r8,[rbp-0x10]
   14002b7d0:	mov    QWORD PTR [rbp-0x10],r8
   14002b7d4:	mov    QWORD PTR [rbx],rcx
   14002b7d7:	mov    QWORD PTR [rcx+0x8],rbx
   14002b7db:	mov    QWORD PTR [rax+0x8],rdx
   14002b7df:	mov    QWORD PTR [rdx],rax
   14002b7e2:	mov    rcx,rdi
   14002b7e5:	call   QWORD PTR [rip+0x690d]        # 0x1400320f8
   14002b7eb:	lea    rax,[rbp-0x20]
   14002b7ef:	cmp    QWORD PTR [rbp-0x20],rax
   14002b7f3:	je     0x14002b85f
   14002b7f5:	mov    rcx,QWORD PTR [rbp-0x18]
   14002b7f9:	lea    rdx,[rbp-0x20]
   14002b7fd:	mov    rax,QWORD PTR [rcx+0x8]
   14002b801:	lea    rdi,[rcx-0x10]
   14002b805:	mov    QWORD PTR [rbp-0x18],rax
   14002b809:	mov    QWORD PTR [rax],rdx
   14002b80c:	test   rdi,rdi
   14002b80f:	je     0x14002b85f
   14002b811:	mov    rax,QWORD PTR [rdi]
   14002b814:	mov    rbx,QWORD PTR [rax+0x8]
   14002b818:	mov    rcx,rbx
   14002b81b:	call   QWORD PTR [rip+0x6e87]        # 0x1400326a8
   14002b821:	mov    rcx,rdi
   14002b824:	call   rbx
   14002b826:	mov    eax,DWORD PTR [rdi+0x8]
   14002b829:	cmp    eax,0x1
   14002b82c:	jne    0x14002b837
   14002b82e:	mov    DWORD PTR [rdi+0x8],0x0
   14002b835:	jmp    0x14002b844
   14002b837:	or     eax,0xffffffff
   14002b83a:	lock xadd DWORD PTR [rdi+0x8],eax
   14002b83f:	sub    eax,0x1
   14002b842:	jg     0x14002b7eb
   14002b844:	mov    rax,QWORD PTR [rdi]
   14002b847:	mov    rbx,QWORD PTR [rax]
   14002b84a:	mov    rcx,rbx
   14002b84d:	call   QWORD PTR [rip+0x6e55]        # 0x1400326a8
   14002b853:	mov    edx,0x1
   14002b858:	mov    rcx,rdi
   14002b85b:	call   rbx
   14002b85d:	jmp    0x14002b7eb
   14002b85f:	mov    rbx,QWORD PTR [rsp+0x50]
   14002b864:	mov    rdi,QWORD PTR [rsp+0x58]
   14002b869:	add    rsp,0x40
   14002b86d:	pop    rbp
   14002b86e:	ret    
   14002b86f:	int3   
   14002b870:	int3   
   14002b871:	int3   
   14002b872:	int3   
   14002b873:	int3   
   14002b874:	int3   
   14002b875:	int3   
   14002b876:	int3   
   14002b877:	int3   
   14002b878:	int3   
   14002b879:	int3   
   14002b87a:	int3   
   14002b87b:	int3   
   14002b87c:	int3   
   14002b87d:	int3   
   14002b87e:	int3   
   14002b87f:	int3   
   14002b880:	mov    QWORD PTR [rsp+0x8],rcx
   14002b885:	push   rdi
   14002b886:	sub    rsp,0x30
   14002b88a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002b893:	mov    QWORD PTR [rsp+0x48],rbx
   14002b898:	mov    edi,edx
   14002b89a:	mov    rbx,rcx
   14002b89d:	lea    rax,[rip+0x94d4]        # 0x140034d78
   14002b8a4:	mov    QWORD PTR [rcx],rax
   14002b8a7:	cmp    BYTE PTR [rcx+0x48],0x0
   14002b8ab:	jne    0x14002b8bc
   14002b8ad:	lea    rax,[rcx+0x38]
   14002b8b1:	cmp    QWORD PTR [rax],rax
   14002b8b4:	je     0x14002b8bc
   14002b8b6:	call   0x14002b700
   14002b8bb:	nop
   14002b8bc:	lea    rcx,[rbx+0x10]
   14002b8c0:	cmp    DWORD PTR [rcx+0xc],0xf12192e
   14002b8c7:	je     0x14002b8d0
   14002b8c9:	call   QWORD PTR [rip+0x69a9]        # 0x140032278
   14002b8cf:	nop
   14002b8d0:	lea    rax,[rip+0x90e9]        # 0x1400349c0
   14002b8d7:	mov    QWORD PTR [rbx],rax
   14002b8da:	test   dil,0x1
   14002b8de:	je     0x14002b8e9
   14002b8e0:	mov    rcx,rbx
   14002b8e3:	call   QWORD PTR [rip+0x6cdf]        # 0x1400325c8
   14002b8e9:	mov    rax,rbx
   14002b8ec:	mov    rbx,QWORD PTR [rsp+0x48]
   14002b8f1:	add    rsp,0x30
   14002b8f5:	pop    rdi
   14002b8f6:	ret    
   14002b8f7:	int3   
   14002b8f8:	int3   
   14002b8f9:	int3   
   14002b8fa:	int3   
   14002b8fb:	int3   
   14002b8fc:	int3   
   14002b8fd:	int3   
   14002b8fe:	int3   
   14002b8ff:	int3   
   14002b900:	mov    QWORD PTR [rsp+0x8],rbx
   14002b905:	push   rdi
   14002b906:	sub    rsp,0x20
   14002b90a:	mov    eax,DWORD PTR [rcx+0x8]
   14002b90d:	mov    rdi,rcx
   14002b910:	cmp    eax,0x1
   14002b913:	jne    0x14002b91e
   14002b915:	mov    DWORD PTR [rcx+0x8],0x0
   14002b91c:	jmp    0x14002b92b
   14002b91e:	or     eax,0xffffffff
   14002b921:	lock xadd DWORD PTR [rcx+0x8],eax
   14002b926:	sub    eax,0x1
   14002b929:	jg     0x14002b94c
   14002b92b:	test   rcx,rcx
   14002b92e:	je     0x14002b94a
   14002b930:	mov    rax,QWORD PTR [rcx]
   14002b933:	mov    rbx,QWORD PTR [rax+0x10]
   14002b937:	mov    rcx,rbx
   14002b93a:	call   QWORD PTR [rip+0x6d68]        # 0x1400326a8
   14002b940:	mov    edx,0x1
   14002b945:	mov    rcx,rdi
   14002b948:	call   rbx
   14002b94a:	xor    eax,eax
   14002b94c:	mov    rbx,QWORD PTR [rsp+0x30]
   14002b951:	add    rsp,0x20
   14002b955:	pop    rdi
   14002b956:	ret    
   14002b957:	int3   
   14002b958:	int3   
   14002b959:	int3   
   14002b95a:	int3   
   14002b95b:	int3   
   14002b95c:	int3   
   14002b95d:	int3   
   14002b95e:	int3   
   14002b95f:	int3   
   14002b960:	rex push rbx
   14002b962:	sub    rsp,0x30
   14002b966:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002b96f:	mov    rbx,rcx
   14002b972:	mov    ecx,0x50
   14002b977:	call   QWORD PTR [rip+0x6c53]        # 0x1400325d0
   14002b97d:	mov    rdx,rax
   14002b980:	test   rax,rax
   14002b983:	je     0x14002b9ab
   14002b985:	and    DWORD PTR [rax+0x8],0x0
   14002b989:	lea    rax,[rip+0x93e8]        # 0x140034d78
   14002b990:	mov    QWORD PTR [rdx],rax
   14002b993:	mov    DWORD PTR [rdx+0x1c],0xf12192e
   14002b99a:	lea    rcx,[rdx+0x38]
   14002b99e:	mov    QWORD PTR [rcx+0x8],rcx
   14002b9a2:	mov    QWORD PTR [rcx],rcx
   14002b9a5:	mov    BYTE PTR [rdx+0x48],0x0
   14002b9a9:	jmp    0x14002b9ad
   14002b9ab:	xor    edx,edx
   14002b9ad:	test   rdx,rdx
   14002b9b0:	je     0x14002b9cb
   14002b9b2:	mov    eax,DWORD PTR [rdx+0x8]
   14002b9b5:	test   eax,eax
   14002b9b7:	jne    0x14002b9c2
   14002b9b9:	mov    DWORD PTR [rdx+0x8],0x1
   14002b9c0:	jmp    0x14002b9c6
   14002b9c2:	lock inc DWORD PTR [rdx+0x8]
   14002b9c6:	mov    QWORD PTR [rbx],rdx
   14002b9c9:	jmp    0x14002b9da
   14002b9cb:	mov    eax,0x8007000e
   14002b9d0:	jmp    0x14002b9dc
   14002b9d2:	mov    eax,DWORD PTR [rsp+0x48]
   14002b9d6:	test   eax,eax
   14002b9d8:	js     0x14002b9dc
   14002b9da:	xor    eax,eax
   14002b9dc:	add    rsp,0x30
   14002b9e0:	pop    rbx
   14002b9e1:	ret    
   14002b9e2:	int3   
   14002b9e3:	int3   
   14002b9e4:	int3   
   14002b9e5:	int3   
   14002b9e6:	int3   
   14002b9e7:	int3   
   14002b9e8:	int3   
   14002b9e9:	int3   
   14002b9ea:	int3   
   14002b9eb:	int3   
   14002b9ec:	mov    rax,rsp
   14002b9ef:	mov    QWORD PTR [rax+0x8],rbx
   14002b9f3:	mov    QWORD PTR [rax+0x10],rbp
   14002b9f7:	mov    QWORD PTR [rax+0x18],rsi
   14002b9fb:	mov    QWORD PTR [rax+0x20],rdi
   14002b9ff:	push   r14
   14002ba01:	sub    rsp,0x20
   14002ba05:	mov    r14,rcx
   14002ba08:	mov    rbp,r8
   14002ba0b:	mov    rcx,rdx
   14002ba0e:	mov    rsi,rdx
   14002ba11:	call   QWORD PTR [rip+0x6bb9]        # 0x1400325d0
   14002ba17:	xor    ebx,ebx
   14002ba19:	mov    rdi,rax
   14002ba1c:	test   rax,rax
   14002ba1f:	jne    0x14002ba28
   14002ba21:	mov    ebx,0x8007000e
   14002ba26:	jmp    0x14002ba3a
   14002ba28:	mov    r8,rsi
   14002ba2b:	mov    rdx,rbp
   14002ba2e:	mov    rcx,rax
   14002ba31:	call   QWORD PTR [rip+0x6a69]        # 0x1400324a0
   14002ba37:	mov    QWORD PTR [r14],rdi
   14002ba3a:	mov    rbp,QWORD PTR [rsp+0x38]
   14002ba3f:	mov    eax,ebx
   14002ba41:	mov    rbx,QWORD PTR [rsp+0x30]
   14002ba46:	mov    rsi,QWORD PTR [rsp+0x40]
   14002ba4b:	mov    rdi,QWORD PTR [rsp+0x48]
   14002ba50:	add    rsp,0x20
   14002ba54:	pop    r14
   14002ba56:	ret    
   14002ba57:	int3   
   14002ba58:	int3   
   14002ba59:	int3   
   14002ba5a:	int3   
   14002ba5b:	int3   
   14002ba5c:	int3   
   14002ba5d:	int3   
   14002ba5e:	int3   
   14002ba5f:	int3   
   14002ba60:	mov    QWORD PTR [rsp+0x8],rbx
   14002ba65:	mov    QWORD PTR [rsp+0x10],rbp
   14002ba6a:	push   rsi
   14002ba6b:	push   rdi
   14002ba6c:	push   r14
   14002ba6e:	sub    rsp,0x20
   14002ba72:	or     rbx,0xffffffffffffffff
   14002ba76:	mov    rsi,rdx
   14002ba79:	xor    ebp,ebp
   14002ba7b:	mov    r14,rcx
   14002ba7e:	inc    rbx
   14002ba81:	cmp    WORD PTR [rdx+rbx*2],bp
   14002ba85:	jne    0x14002ba7e
   14002ba87:	inc    rbx
   14002ba8a:	mov    QWORD PTR [rsp+0x50],rbp
   14002ba8f:	mov    rdx,rbx
   14002ba92:	lea    rcx,[rsp+0x50]
   14002ba97:	call   0x1400299b4
   14002ba9c:	mov    edi,eax
   14002ba9e:	test   eax,eax
   14002baa0:	jns    0x14002baa9
   14002baa2:	mov    rcx,QWORD PTR [rsp+0x50]
   14002baa7:	jmp    0x14002bac6
   14002baa9:	lea    r8,[rbx+rbx*1]
   14002baad:	mov    rdx,rsi
   14002bab0:	mov    rbx,QWORD PTR [rsp+0x50]
   14002bab5:	mov    rcx,rbx
   14002bab8:	call   QWORD PTR [rip+0x69e2]        # 0x1400324a0
   14002babe:	mov    rcx,rbp
   14002bac1:	mov    QWORD PTR [r14],rbx
   14002bac4:	mov    edi,ebp
   14002bac6:	test   rcx,rcx
   14002bac9:	je     0x14002bad1
   14002bacb:	call   QWORD PTR [rip+0x6af7]        # 0x1400325c8
   14002bad1:	mov    rbx,QWORD PTR [rsp+0x40]
   14002bad6:	mov    eax,edi
   14002bad8:	mov    rbp,QWORD PTR [rsp+0x48]
   14002badd:	add    rsp,0x20
   14002bae1:	pop    r14
   14002bae3:	pop    rdi
   14002bae4:	pop    rsi
   14002bae5:	ret    
   14002bae6:	int3   
   14002bae7:	int3   
   14002bae8:	int3   
   14002bae9:	int3   
   14002baea:	int3   
   14002baeb:	int3   
   14002baec:	mov    QWORD PTR [rsp+0x8],rbx
   14002baf1:	mov    QWORD PTR [rsp+0x18],r8
   14002baf6:	push   rbp
   14002baf7:	push   rdi
   14002baf8:	mov    rbp,rsp
   14002bafb:	xor    r9d,r9d
   14002bafe:	mov    QWORD PTR [rbp+0x20],r9
   14002bb02:	mov    rdi,rdx
   14002bb05:	mov    QWORD PTR [rbp+0x28],r9
   14002bb09:	mov    r8,rcx
   14002bb0c:	mov    QWORD PTR [rdx],r9
   14002bb0f:	mov    r11d,r9d
   14002bb12:	cmp    WORD PTR [rcx],0x2f
   14002bb16:	mov    bl,r9b
   14002bb19:	mov    r10d,r9d
   14002bb1c:	je     0x14002bb28
   14002bb1e:	cmp    WORD PTR [rcx],0x5c
   14002bb22:	jne    0x14002bc0f
   14002bb28:	cmp    WORD PTR [rcx+0x2],0x2f
   14002bb2d:	je     0x14002bb3a
   14002bb2f:	cmp    WORD PTR [rcx+0x2],0x5c
   14002bb34:	jne    0x14002bc0f
   14002bb3a:	movzx  eax,WORD PTR [rcx+0x4]
   14002bb3e:	cmp    ax,0x2e
   14002bb42:	jne    0x14002bb5d
   14002bb44:	cmp    WORD PTR [rcx+0x6],0x2f
   14002bb49:	je     0x14002bb52
   14002bb4b:	cmp    WORD PTR [rcx+0x6],0x5c
   14002bb50:	jne    0x14002bb5d
   14002bb52:	mov    r10d,0x4
   14002bb58:	jmp    0x14002bc0f
   14002bb5d:	cmp    ax,0x3f
   14002bb61:	jne    0x14002bbfb
   14002bb67:	cmp    WORD PTR [rcx+0x6],0x2f
   14002bb6c:	je     0x14002bb79
   14002bb6e:	cmp    WORD PTR [rcx+0x6],0x5c
   14002bb73:	jne    0x14002bbfb
   14002bb79:	movzx  ecx,WORD PTR [rcx+0x8]
   14002bb7d:	mov    edx,0xffdf
   14002bb82:	mov    r10d,0x4
   14002bb88:	lea    eax,[rcx-0x55]
   14002bb8b:	test   dx,ax
   14002bb8e:	jne    0x14002bbce
   14002bb90:	movzx  eax,WORD PTR [r8+0xa]
   14002bb95:	sub    ax,0x4e
   14002bb99:	test   dx,ax
   14002bb9c:	jne    0x14002bbce
   14002bb9e:	movzx  eax,WORD PTR [r8+0xc]
   14002bba3:	sub    ax,0x43
   14002bba7:	test   dx,ax
   14002bbaa:	jne    0x14002bbce
   14002bbac:	cmp    WORD PTR [r8+0xe],0x2f
   14002bbb2:	je     0x14002bbc6
   14002bbb4:	cmp    WORD PTR [r8+0xe],0x5c
   14002bbba:	je     0x14002bbc6
   14002bbbc:	mov    eax,0x80070002
   14002bbc1:	jmp    0x14002bd1a
   14002bbc6:	mov    r10d,0x8
   14002bbcc:	jmp    0x14002bc0d
   14002bbce:	lea    eax,[rcx-0x61]
   14002bbd1:	cmp    ax,0x19
   14002bbd5:	jbe    0x14002bbe1
   14002bbd7:	sub    cx,0x41
   14002bbdb:	cmp    cx,0x19
   14002bbdf:	ja     0x14002bbbc
   14002bbe1:	cmp    WORD PTR [r8+0xa],0x3a
   14002bbe7:	jne    0x14002bbbc
   14002bbe9:	cmp    WORD PTR [r8+0xc],0x2f
   14002bbef:	je     0x14002bc0f
   14002bbf1:	cmp    WORD PTR [r8+0xc],0x5c
   14002bbf7:	je     0x14002bc0f
   14002bbf9:	jmp    0x14002bbbc
   14002bbfb:	cmp    ax,0x2f
   14002bbff:	je     0x14002bc0f
   14002bc01:	cmp    ax,0x5c
   14002bc05:	je     0x14002bc0f
   14002bc07:	mov    r10d,0x2
   14002bc0d:	mov    bl,0x1
   14002bc0f:	mov    rcx,r10
   14002bc12:	lea    rax,[r10+r10*1]
   14002bc16:	mov    QWORD PTR [rbp+0x30],rcx
   14002bc1a:	mov    rdx,r10
   14002bc1d:	mov    QWORD PTR [rbp+0x28],rdx
   14002bc21:	cmp    WORD PTR [rax+r8*1],r9w
   14002bc26:	je     0x14002bcb3
   14002bc2c:	cmp    WORD PTR [rax+r8*1],0x2f
   14002bc32:	je     0x14002bc69
   14002bc34:	cmp    WORD PTR [rax+r8*1],0x5c
   14002bc3a:	je     0x14002bc69
   14002bc3c:	cmp    WORD PTR [rax+r8*1],0x3a
   14002bc42:	jne    0x14002bc91
   14002bc44:	mov    rax,rdx
   14002bc47:	sub    rax,r10
   14002bc4a:	cmp    rax,0x1
   14002bc4e:	jne    0x14002bc9a
   14002bc50:	inc    rdx
   14002bc53:	mov    QWORD PTR [rbp+0x28],rdx
   14002bc57:	cmp    WORD PTR [r8+rdx*2],0x2f
   14002bc5d:	je     0x14002bc50
   14002bc5f:	cmp    WORD PTR [r8+rdx*2],0x5c
   14002bc65:	je     0x14002bc50
   14002bc67:	jmp    0x14002bc80
   14002bc69:	inc    rdx
   14002bc6c:	mov    QWORD PTR [rbp+0x28],rdx
   14002bc70:	cmp    WORD PTR [r8+rdx*2],0x2f
   14002bc76:	je     0x14002bc69
   14002bc78:	cmp    WORD PTR [r8+rdx*2],0x5c
   14002bc7e:	je     0x14002bc69
   14002bc80:	inc    r11
   14002bc83:	mov    QWORD PTR [rbp+0x30],rdx
   14002bc87:	mov    rcx,rdx
   14002bc8a:	mov    QWORD PTR [rbp+0x20],r11
   14002bc8e:	dec    rdx
   14002bc91:	inc    rdx
   14002bc94:	lea    rax,[rdx+rdx*1]
   14002bc98:	jmp    0x14002bc1d
   14002bc9a:	cmp    WORD PTR [r8+rdx*2+0x2],0x2f
   14002bca1:	jne    0x14002bcb3
   14002bca3:	cmp    WORD PTR [r8+rdx*2+0x4],0x2f
   14002bcaa:	jne    0x14002bcb3
   14002bcac:	mov    eax,0x80004001
   14002bcb1:	jmp    0x14002bd1a
   14002bcb3:	cmp    rdx,0x104
   14002bcba:	jbe    0x14002bcc8
   14002bcbc:	test   r10,r10
   14002bcbf:	jne    0x14002bcc8
   14002bcc1:	mov    eax,0x800700a1
   14002bcc6:	jmp    0x14002bd1a
   14002bcc8:	mov    rax,rdx
   14002bccb:	sub    rax,rcx
   14002bcce:	test   bl,bl
   14002bcd0:	je     0x14002bcdc
   14002bcd2:	cmp    r11,0x2
   14002bcd6:	jb     0x14002bbbc
   14002bcdc:	cmp    rax,0x2
   14002bce0:	ja     0x14002bd07
   14002bce2:	sub    rax,0x1
   14002bce6:	je     0x14002bcfb
   14002bce8:	cmp    rax,0x1
   14002bcec:	jne    0x14002bbbc
   14002bcf2:	cmp    WORD PTR [r8+rcx*2+0x2],0x2e
   14002bcf9:	jne    0x14002bd07
   14002bcfb:	cmp    WORD PTR [r8+rcx*2],0x2e
   14002bd01:	je     0x14002bbbc
   14002bd07:	lea    rcx,[r8+rcx*2]
   14002bd0b:	mov    QWORD PTR [rdi],rcx
   14002bd0e:	cmp    r9w,WORD PTR [r8+rdx*2]
   14002bd13:	setne  r9b
   14002bd17:	mov    eax,r9d
   14002bd1a:	mov    rbx,QWORD PTR [rsp+0x18]
   14002bd1f:	pop    rdi
   14002bd20:	pop    rbp
   14002bd21:	ret    
   14002bd22:	int3   
   14002bd23:	int3   
   14002bd24:	int3   
   14002bd25:	int3   
   14002bd26:	int3   
   14002bd27:	int3   
   14002bd28:	mov    QWORD PTR [rsp+0x10],rdx
   14002bd2d:	sub    rsp,0x28
   14002bd31:	lea    rax,[rip+0x116f0]        # 0x14003d428
   14002bd38:	add    rcx,0x10
   14002bd3c:	lea    rdx,[rsp+0x38]
   14002bd41:	mov    QWORD PTR [rsp+0x38],rax
   14002bd46:	call   0x14002c8b4
   14002bd4b:	xor    ecx,ecx
   14002bd4d:	test   rax,rax
   14002bd50:	jne    0x14002bd56
   14002bd52:	mov    eax,ecx
   14002bd54:	jmp    0x14002bd64
   14002bd56:	add    rax,0x30
   14002bd5a:	cmp    QWORD PTR [rax+0x18],0x8
   14002bd5f:	jb     0x14002bd64
   14002bd61:	mov    rax,QWORD PTR [rax]
   14002bd64:	test   rax,rax
   14002bd67:	setne  al
   14002bd6a:	add    rsp,0x28
   14002bd6e:	ret    
   14002bd6f:	int3   
   14002bd70:	int3   
   14002bd71:	int3   
   14002bd72:	int3   
   14002bd73:	int3   
   14002bd74:	int3   
   14002bd75:	int3   
   14002bd76:	int3   
   14002bd77:	int3   
   14002bd78:	mov    QWORD PTR [rsp+0x8],rcx
   14002bd7d:	push   rbx
   14002bd7e:	push   rsi
   14002bd7f:	push   rdi
   14002bd80:	sub    rsp,0x40
   14002bd84:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14002bd8d:	mov    rsi,rcx
   14002bd90:	xor    ebx,ebx
   14002bd92:	mov    DWORD PTR [rcx+0x8],ebx
   14002bd95:	lea    rax,[rip+0x906c]        # 0x140034e08
   14002bd9c:	mov    QWORD PTR [rcx],rax
   14002bd9f:	lea    rdi,[rcx+0x10]
   14002bda3:	mov    QWORD PTR [rsp+0x70],rdi
   14002bda8:	mov    QWORD PTR [rdi],rbx
   14002bdab:	mov    QWORD PTR [rdi+0x8],rbx
   14002bdaf:	xor    r8d,r8d
   14002bdb2:	xor    edx,edx
   14002bdb4:	call   0x140012294
   14002bdb9:	mov    QWORD PTR [rdi],rax
   14002bdbc:	lea    r10,[rdi+0x10]
   14002bdc0:	mov    QWORD PTR [r10],rbx
   14002bdc3:	mov    QWORD PTR [r10+0x8],rbx
   14002bdc7:	mov    QWORD PTR [r10+0x10],rbx
   14002bdcb:	mov    DWORD PTR [rdi+0x38],0x3f800000
   14002bdd2:	mov    rax,QWORD PTR [rdi]
   14002bdd5:	mov    QWORD PTR [rsp+0x68],rax
   14002bdda:	mov    rdx,QWORD PTR [r10+0x8]
   14002bdde:	mov    rcx,QWORD PTR [r10]
   14002bde1:	cmp    rcx,rcx
   14002bde4:	jne    0x14002bdeb
   14002bde6:	cmp    rdx,rdx
   14002bde9:	je     0x14002be20
   14002bdeb:	cmp    rcx,rdx
   14002bdee:	je     0x14002be24
   14002bdf0:	mov    r8,rdx
   14002bdf3:	sub    r8,rdx
   14002bdf6:	add    r8,0x7
   14002bdfa:	shr    r8,0x3
   14002bdfe:	cmp    rdx,rdx
   14002be01:	cmova  r8,rbx
   14002be05:	test   r8,r8
   14002be08:	je     0x14002be20
   14002be0a:	sub    rdx,rcx
   14002be0d:	mov    rax,QWORD PTR [rdx+rcx*1]
   14002be11:	mov    QWORD PTR [rcx],rax
   14002be14:	add    rcx,0x8
   14002be18:	inc    rbx
   14002be1b:	cmp    rbx,r8
   14002be1e:	jne    0x14002be0d
   14002be20:	mov    QWORD PTR [r10+0x8],rcx
   14002be24:	lea    rax,[rsp+0x68]
   14002be29:	mov    QWORD PTR [rsp+0x20],rax
   14002be2e:	mov    r9d,0x10
   14002be34:	mov    r8,QWORD PTR [r10]
   14002be37:	lea    rdx,[rsp+0x78]
   14002be3c:	mov    rcx,r10
   14002be3f:	call   0x14000dfb4
   14002be44:	mov    QWORD PTR [rdi+0x28],0x7
   14002be4c:	mov    QWORD PTR [rdi+0x30],0x8
   14002be54:	mov    rax,rsi
   14002be57:	add    rsp,0x40
   14002be5b:	pop    rdi
   14002be5c:	pop    rsi
   14002be5d:	pop    rbx
   14002be5e:	ret    
   14002be5f:	int3   
   14002be60:	int3   
   14002be61:	int3   
   14002be62:	int3   
   14002be63:	int3   
   14002be64:	int3   
   14002be65:	int3   
   14002be66:	int3   
   14002be67:	int3   
   14002be68:	int3   
   14002be69:	int3   
   14002be6a:	int3   
   14002be6b:	int3   
   14002be6c:	int3   
   14002be6d:	int3   
   14002be6e:	int3   
   14002be6f:	int3   
   14002be70:	mov    QWORD PTR [rsp+0x10],rdx
   14002be75:	sub    rsp,0x28
   14002be79:	add    rcx,0x10
   14002be7d:	lea    rdx,[rsp+0x38]
   14002be82:	call   0x14002c8b4
   14002be87:	test   rax,rax
   14002be8a:	je     0x14002be9a
   14002be8c:	add    rax,0x30
   14002be90:	cmp    QWORD PTR [rax+0x18],0x8
   14002be95:	jb     0x14002be9a
   14002be97:	mov    rax,QWORD PTR [rax]
   14002be9a:	add    rsp,0x28
   14002be9e:	ret    
   14002be9f:	int3   
   14002bea0:	int3   
   14002bea1:	int3   
   14002bea2:	int3   
   14002bea3:	int3   
   14002bea4:	int3   
   14002bea5:	int3   
   14002bea6:	int3   
   14002bea7:	int3   
   14002bea8:	mov    rax,rsp
   14002beab:	mov    QWORD PTR [rax+0x10],rdx
   14002beaf:	push   rdi
   14002beb0:	push   r14
   14002beb2:	push   r15
   14002beb4:	sub    rsp,0x30
   14002beb8:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   14002bec0:	mov    QWORD PTR [rax+0x18],rbx
   14002bec4:	mov    QWORD PTR [rax+0x20],rsi
   14002bec8:	mov    rsi,r8
   14002becb:	mov    r14,rdx
   14002bece:	lea    r15,[rcx+0x10]
   14002bed2:	lea    rdx,[rax+0x10]
   14002bed6:	mov    rcx,r15
   14002bed9:	call   0x14002c8b4
   14002bede:	xor    ebx,ebx
   14002bee0:	test   rax,rax
   14002bee3:	je     0x14002bf0c
   14002bee5:	lea    rcx,[rax+0x30]
   14002bee9:	cmp    QWORD PTR [rcx+0x18],0x8
   14002beee:	jb     0x14002bef3
   14002bef0:	mov    rcx,QWORD PTR [rcx]
   14002bef3:	mov    rdx,rsi
   14002bef6:	call   QWORD PTR [rip+0x66fc]        # 0x1400325f8
   14002befc:	sub    ebx,eax
   14002befe:	neg    ebx
   14002bf00:	sbb    eax,eax
   14002bf02:	and    eax,0x800700b7
   14002bf07:	jmp    0x14002bfaa
   14002bf0c:	mov    ecx,0x50
   14002bf11:	call   0x140023f10
   14002bf16:	mov    rdi,rax
   14002bf19:	mov    QWORD PTR [rsp+0x50],rax
   14002bf1e:	mov    DWORD PTR [rax+0x8],ebx
   14002bf21:	lea    rax,[rip+0x8e88]        # 0x140034db0
   14002bf28:	mov    QWORD PTR [rdi],rax
   14002bf2b:	lea    rcx,[rdi+0x10]
   14002bf2f:	mov    rdx,r14
   14002bf32:	call   0x14001781c
   14002bf37:	nop
   14002bf38:	lea    rcx,[rdi+0x30]
   14002bf3c:	mov    rdx,rsi
   14002bf3f:	call   0x14001781c
   14002bf44:	nop
   14002bf45:	mov    eax,DWORD PTR [rdi+0x8]
   14002bf48:	test   eax,eax
   14002bf4a:	jne    0x14002bf55
   14002bf4c:	mov    DWORD PTR [rdi+0x8],0x1
   14002bf53:	jmp    0x14002bf59
   14002bf55:	lock inc DWORD PTR [rdi+0x8]
   14002bf59:	mov    QWORD PTR [rsp+0x50],rdi
   14002bf5e:	mov    rdx,rdi
   14002bf61:	mov    rcx,r15
   14002bf64:	call   0x14002c78c
   14002bf69:	nop
   14002bf6a:	mov    eax,DWORD PTR [rdi+0x8]
   14002bf6d:	cmp    eax,0x1
   14002bf70:	jne    0x14002bf77
   14002bf72:	mov    DWORD PTR [rdi+0x8],ebx
   14002bf75:	jmp    0x14002bf84
   14002bf77:	or     eax,0xffffffff
   14002bf7a:	lock xadd DWORD PTR [rdi+0x8],eax
   14002bf7f:	sub    eax,0x1
   14002bf82:	jg     0x14002bf9e
   14002bf84:	mov    rax,QWORD PTR [rdi]
   14002bf87:	mov    rbx,QWORD PTR [rax]
   14002bf8a:	mov    rcx,rbx
   14002bf8d:	call   QWORD PTR [rip+0x6715]        # 0x1400326a8
   14002bf93:	mov    edx,0x1
   14002bf98:	mov    rcx,rdi
   14002bf9b:	call   rbx
   14002bf9d:	nop
   14002bf9e:	jmp    0x14002bfa8
   14002bfa0:	mov    eax,DWORD PTR [rsp+0x50]
   14002bfa4:	test   eax,eax
   14002bfa6:	js     0x14002bfaa
   14002bfa8:	xor    eax,eax
   14002bfaa:	mov    rbx,QWORD PTR [rsp+0x60]
   14002bfaf:	mov    rsi,QWORD PTR [rsp+0x68]
   14002bfb4:	add    rsp,0x30
   14002bfb8:	pop    r15
   14002bfba:	pop    r14
   14002bfbc:	pop    rdi
   14002bfbd:	ret    
   14002bfbe:	int3   
   14002bfbf:	int3   
   14002bfc0:	int3   
   14002bfc1:	int3   
   14002bfc2:	int3   
   14002bfc3:	int3   
   14002bfc4:	int3   
   14002bfc5:	int3   
   14002bfc6:	int3   
   14002bfc7:	int3   
   14002bfc8:	int3   
   14002bfc9:	int3   
   14002bfca:	int3   
   14002bfcb:	int3   
   14002bfcc:	int3   
   14002bfcd:	int3   
   14002bfce:	int3   
   14002bfcf:	int3   
   14002bfd0:	mov    rax,QWORD PTR [rcx+0x18]
   14002bfd4:	ret    
   14002bfd5:	int3   
   14002bfd6:	int3   
   14002bfd7:	int3   
   14002bfd8:	int3   
   14002bfd9:	int3   
   14002bfda:	int3   
   14002bfdb:	int3   
   14002bfdc:	int3   
   14002bfdd:	int3   
   14002bfde:	int3   
   14002bfdf:	int3   
   14002bfe0:	mov    QWORD PTR [rsp+0x8],rbx
   14002bfe5:	mov    QWORD PTR [rsp+0x10],rsi
   14002bfea:	push   rdi
   14002bfeb:	sub    rsp,0x20
   14002bfef:	mov    rbx,rcx
   14002bff2:	mov    esi,edx
   14002bff4:	mov    rcx,QWORD PTR [rcx+0x20]
   14002bff8:	test   rcx,rcx
   14002bffb:	je     0x14002c012
   14002bffd:	call   QWORD PTR [rip+0x65c5]        # 0x1400325c8
   14002c003:	and    QWORD PTR [rbx+0x20],0x0
   14002c008:	and    QWORD PTR [rbx+0x28],0x0
   14002c00d:	and    QWORD PTR [rbx+0x30],0x0
   14002c012:	lea    rcx,[rbx+0x10]
   14002c016:	call   0x14002caa0
   14002c01b:	lea    rax,[rip+0x899e]        # 0x1400349c0
   14002c022:	mov    QWORD PTR [rbx],rax
   14002c025:	test   sil,0x1
   14002c029:	je     0x14002c034
   14002c02b:	mov    rcx,rbx
   14002c02e:	call   QWORD PTR [rip+0x6594]        # 0x1400325c8
   14002c034:	mov    rsi,QWORD PTR [rsp+0x38]
   14002c039:	mov    rax,rbx
   14002c03c:	mov    rbx,QWORD PTR [rsp+0x30]
   14002c041:	add    rsp,0x20
   14002c045:	pop    rdi
   14002c046:	ret    
   14002c047:	int3   
   14002c048:	int3   
   14002c049:	int3   
   14002c04a:	int3   
   14002c04b:	int3   
   14002c04c:	int3   
   14002c04d:	int3   
   14002c04e:	int3   
   14002c04f:	int3   
   14002c050:	mov    QWORD PTR [rsp+0x8],rbx
   14002c055:	mov    QWORD PTR [rsp+0x10],rsi
   14002c05a:	push   rdi
   14002c05b:	sub    rsp,0x20
   14002c05f:	cmp    QWORD PTR [rcx+0x48],0x8
   14002c064:	mov    edi,edx
   14002c066:	mov    rbx,rcx
   14002c069:	jb     0x14002c075
   14002c06b:	mov    rcx,QWORD PTR [rcx+0x30]
   14002c06f:	call   QWORD PTR [rip+0x6553]        # 0x1400325c8
   14002c075:	xor    esi,esi
   14002c077:	mov    QWORD PTR [rbx+0x48],0x7
   14002c07f:	mov    QWORD PTR [rbx+0x40],rsi
   14002c083:	mov    WORD PTR [rbx+0x30],si
   14002c087:	cmp    QWORD PTR [rbx+0x28],0x8
   14002c08c:	jb     0x14002c098
   14002c08e:	mov    rcx,QWORD PTR [rbx+0x10]
   14002c092:	call   QWORD PTR [rip+0x6530]        # 0x1400325c8
   14002c098:	mov    QWORD PTR [rbx+0x28],0x7
   14002c0a0:	lea    rax,[rip+0x8801]        # 0x1400348a8
   14002c0a7:	mov    QWORD PTR [rbx+0x20],rsi
   14002c0ab:	mov    WORD PTR [rbx+0x10],si
   14002c0af:	mov    QWORD PTR [rbx],rax
   14002c0b2:	test   dil,0x1
   14002c0b6:	je     0x14002c0c1
   14002c0b8:	mov    rcx,rbx
   14002c0bb:	call   QWORD PTR [rip+0x6507]        # 0x1400325c8
   14002c0c1:	mov    rsi,QWORD PTR [rsp+0x38]
   14002c0c6:	mov    rax,rbx
   14002c0c9:	mov    rbx,QWORD PTR [rsp+0x30]
   14002c0ce:	add    rsp,0x20
   14002c0d2:	pop    rdi
   14002c0d3:	ret    
   14002c0d4:	int3   
   14002c0d5:	int3   
   14002c0d6:	int3   
   14002c0d7:	int3   
   14002c0d8:	int3   
   14002c0d9:	int3   
   14002c0da:	int3   
   14002c0db:	int3   
   14002c0dc:	rex push rbx
   14002c0de:	sub    rsp,0x30
   14002c0e2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002c0eb:	mov    rbx,rcx
   14002c0ee:	mov    ecx,0x50
   14002c0f3:	call   0x140023f10
   14002c0f8:	mov    QWORD PTR [rsp+0x48],rax
   14002c0fd:	mov    rcx,rax
   14002c100:	call   0x14002bd78
   14002c105:	nop
   14002c106:	test   rax,rax
   14002c109:	je     0x14002c11f
   14002c10b:	mov    ecx,DWORD PTR [rax+0x8]
   14002c10e:	test   ecx,ecx
   14002c110:	jne    0x14002c11b
   14002c112:	mov    DWORD PTR [rax+0x8],0x1
   14002c119:	jmp    0x14002c11f
   14002c11b:	lock inc DWORD PTR [rax+0x8]
   14002c11f:	mov    QWORD PTR [rbx],rax
   14002c122:	jmp    0x14002c12c
   14002c124:	mov    eax,DWORD PTR [rsp+0x48]
   14002c128:	test   eax,eax
   14002c12a:	js     0x14002c12e
   14002c12c:	xor    eax,eax
   14002c12e:	add    rsp,0x30
   14002c132:	pop    rbx
   14002c133:	ret    
   14002c134:	int3   
   14002c135:	int3   
   14002c136:	int3   
   14002c137:	int3   
   14002c138:	int3   
   14002c139:	int3   
   14002c13a:	int3   
   14002c13b:	int3   
   14002c13c:	mov    QWORD PTR [rsp+0x8],rbx
   14002c141:	mov    QWORD PTR [rsp+0x10],rsi
   14002c146:	push   rdi
   14002c147:	sub    rsp,0x20
   14002c14b:	xor    esi,esi
   14002c14d:	mov    dil,dl
   14002c150:	mov    rbx,rcx
   14002c153:	cmp    WORD PTR [rcx],si
   14002c156:	je     0x14002c174
   14002c158:	movzx  ecx,WORD PTR [rbx]
   14002c15b:	call   QWORD PTR [rip+0x64cf]        # 0x140032630
   14002c161:	test   eax,eax
   14002c163:	setne  cl
   14002c166:	cmp    dil,cl
   14002c169:	jne    0x14002c174
   14002c16b:	add    rbx,0x2
   14002c16f:	cmp    WORD PTR [rbx],si
   14002c172:	jne    0x14002c158
   14002c174:	mov    rsi,QWORD PTR [rsp+0x38]
   14002c179:	mov    rax,rbx
   14002c17c:	mov    rbx,QWORD PTR [rsp+0x30]
   14002c181:	add    rsp,0x20
   14002c185:	pop    rdi
   14002c186:	ret    
   14002c187:	int3   
   14002c188:	int3   
   14002c189:	int3   
   14002c18a:	int3   
   14002c18b:	int3   
   14002c18c:	int3   
   14002c18d:	int3   
   14002c18e:	int3   
   14002c18f:	int3   
   14002c190:	mov    QWORD PTR [rsp+0x8],rbx
   14002c195:	mov    QWORD PTR [rsp+0x10],rbp
   14002c19a:	mov    QWORD PTR [rsp+0x18],rsi
   14002c19f:	push   rdi
   14002c1a0:	push   r14
   14002c1a2:	push   r15
   14002c1a4:	sub    rsp,0x20
   14002c1a8:	or     rax,0xffffffffffffffff
   14002c1ac:	mov    r14,r8
   14002c1af:	xor    ebp,ebp
   14002c1b1:	mov    r15,rdx
   14002c1b4:	mov    rdi,rcx
   14002c1b7:	inc    rax
   14002c1ba:	cmp    WORD PTR [rcx+rax*2],bp
   14002c1be:	jne    0x14002c1b7
   14002c1c0:	mov    dl,0x1
   14002c1c2:	lea    rbx,[rcx+rax*2]
   14002c1c6:	call   0x14002c13c
   14002c1cb:	mov    rsi,rax
   14002c1ce:	cmp    WORD PTR [rax],bp
   14002c1d1:	jne    0x14002c1da
   14002c1d3:	mov    eax,0x80070667
   14002c1d8:	jmp    0x14002c228
   14002c1da:	xor    edx,edx
   14002c1dc:	mov    rcx,rax
   14002c1df:	call   0x14002c13c
   14002c1e4:	cmp    WORD PTR [rax],bp
   14002c1e7:	jne    0x14002c1f1
   14002c1e9:	mov    QWORD PTR [r15],rsi
   14002c1ec:	mov    QWORD PTR [r14],rax
   14002c1ef:	jmp    0x14002c226
   14002c1f1:	lea    rcx,[rax+0x2]
   14002c1f5:	mov    WORD PTR [rax],bp
   14002c1f8:	mov    dl,0x1
   14002c1fa:	call   0x14002c13c
   14002c1ff:	mov    QWORD PTR [r15],rsi
   14002c202:	mov    QWORD PTR [r14],rax
   14002c205:	cmp    rbx,rdi
   14002c208:	je     0x14002c223
   14002c20a:	lea    rsi,[rbx-0x2]
   14002c20e:	movzx  ecx,WORD PTR [rsi]
   14002c211:	call   QWORD PTR [rip+0x6419]        # 0x140032630
   14002c217:	test   eax,eax
   14002c219:	je     0x14002c223
   14002c21b:	mov    rbx,rsi
   14002c21e:	cmp    rsi,rdi
   14002c221:	jne    0x14002c20a
   14002c223:	mov    WORD PTR [rbx],bp
   14002c226:	xor    eax,eax
   14002c228:	mov    rbx,QWORD PTR [rsp+0x40]
   14002c22d:	mov    rbp,QWORD PTR [rsp+0x48]
   14002c232:	mov    rsi,QWORD PTR [rsp+0x50]
   14002c237:	add    rsp,0x20
   14002c23b:	pop    r15
   14002c23d:	pop    r14
   14002c23f:	pop    rdi
   14002c240:	ret    
   14002c241:	int3   
   14002c242:	int3   
   14002c243:	int3   
   14002c244:	int3   
   14002c245:	int3   
   14002c246:	int3   
   14002c247:	int3   
   14002c248:	mov    rax,rsp
   14002c24b:	mov    QWORD PTR [rax+0x18],r8
   14002c24f:	push   rbp
   14002c250:	push   r12
   14002c252:	push   r13
   14002c254:	push   r14
   14002c256:	push   r15
   14002c258:	mov    rbp,rsp
   14002c25b:	sub    rsp,0x50
   14002c25f:	mov    QWORD PTR [rbp-0x18],0xfffffffffffffffe
   14002c267:	mov    QWORD PTR [rax+0x8],rbx
   14002c26b:	mov    QWORD PTR [rax+0x10],rdi
   14002c26f:	mov    rbx,rdx
   14002c272:	mov    r15,rcx
   14002c275:	mov    rcx,rdx
   14002c278:	call   0x14002a790
   14002c27d:	xor    r13d,r13d
   14002c280:	test   eax,eax
   14002c282:	js     0x14002c41e
   14002c288:	mov    QWORD PTR [rbp+0x40],r13
   14002c28c:	mov    rdx,rbx
   14002c28f:	lea    rcx,[rbp+0x40]
   14002c293:	call   0x14002a9b4
   14002c298:	mov    r14d,eax
   14002c29b:	test   eax,eax
   14002c29d:	js     0x14002c40b
   14002c2a3:	mov    QWORD PTR [rbp-0x30],r13
   14002c2a7:	mov    ebx,0x800
   14002c2ac:	mov    edx,ebx
   14002c2ae:	lea    rcx,[rbp-0x30]
   14002c2b2:	call   0x1400299b4
   14002c2b7:	mov    r14d,eax
   14002c2ba:	mov    rdi,QWORD PTR [rbp-0x30]
   14002c2be:	test   eax,eax
   14002c2c0:	js     0x14002c3fc
   14002c2c6:	mov    rcx,r15
   14002c2c9:	call   0x14002bd28
   14002c2ce:	test   al,al
   14002c2d0:	sete   r12b
   14002c2d4:	mov    edx,ebx
   14002c2d6:	mov    r8,QWORD PTR [rbp+0x40]
   14002c2da:	mov    rcx,rdi
   14002c2dd:	call   QWORD PTR [rip+0x6345]        # 0x140032628
   14002c2e3:	test   rax,rax
   14002c2e6:	je     0x14002c3e5
   14002c2ec:	mov    rbx,rdi
   14002c2ef:	cmp    WORD PTR [rdi],r13w
   14002c2f3:	je     0x14002c311
   14002c2f5:	movzx  ecx,WORD PTR [rbx]
   14002c2f8:	call   QWORD PTR [rip+0x6332]        # 0x140032630
   14002c2fe:	test   eax,eax
   14002c300:	setne  al
   14002c303:	cmp    al,0x1
   14002c305:	jne    0x14002c311
   14002c307:	add    rbx,0x2
   14002c30b:	cmp    WORD PTR [rbx],r13w
   14002c30f:	jne    0x14002c2f5
   14002c311:	cmp    WORD PTR [rbx],r13w
   14002c315:	je     0x14002c3c5
   14002c31b:	cmp    WORD PTR [rbx],0x23
   14002c31f:	je     0x14002c3c5
   14002c325:	mov    r14,rdi
   14002c328:	mov    QWORD PTR [rbp-0x10],r13
   14002c32c:	mov    rbx,r13
   14002c32f:	mov    QWORD PTR [rbp+0x48],rbx
   14002c333:	test   r12b,r12b
   14002c336:	je     0x14002c365
   14002c338:	mov    edx,0x25
   14002c33d:	mov    rcx,rdi
   14002c340:	call   QWORD PTR [rip+0x62ba]        # 0x140032600
   14002c346:	test   rax,rax
   14002c349:	je     0x14002c365
   14002c34b:	mov    rdx,rdi
   14002c34e:	lea    rcx,[rbp+0x48]
   14002c352:	call   0x14002a8b0
   14002c357:	mov    r14d,eax
   14002c35a:	mov    rbx,QWORD PTR [rbp+0x48]
   14002c35e:	test   eax,eax
   14002c360:	js     0x14002c3d5
   14002c362:	mov    r14,rbx
   14002c365:	mov    QWORD PTR [rbp-0x28],r13
   14002c369:	mov    QWORD PTR [rbp-0x20],r13
   14002c36d:	lea    r8,[rbp-0x20]
   14002c371:	lea    rdx,[rbp-0x28]
   14002c375:	mov    rcx,r14
   14002c378:	call   0x14002c190
   14002c37d:	mov    r14d,eax
   14002c380:	test   eax,eax
   14002c382:	js     0x14002c3d5
   14002c384:	mov    rdx,QWORD PTR [rbp-0x28]
   14002c388:	movzx  eax,WORD PTR [rdx]
   14002c38b:	sub    ax,0x2d
   14002c38f:	mov    ecx,0xfffd
   14002c394:	test   cx,ax
   14002c397:	jne    0x14002c39d
   14002c399:	add    rdx,0x2
   14002c39d:	mov    r8,QWORD PTR [rbp-0x20]
   14002c3a1:	mov    rcx,r15
   14002c3a4:	call   0x14002bea8
   14002c3a9:	mov    r14d,eax
   14002c3ac:	cmp    eax,0x800700b7
   14002c3b1:	je     0x14002c3cf
   14002c3b3:	test   eax,eax
   14002c3b5:	js     0x14002c3d5
   14002c3b7:	test   rbx,rbx
   14002c3ba:	je     0x14002c3c5
   14002c3bc:	mov    rcx,rbx
   14002c3bf:	call   QWORD PTR [rip+0x6203]        # 0x1400325c8
   14002c3c5:	mov    edx,0x800
   14002c3ca:	jmp    0x14002c2d6
   14002c3cf:	mov    r14d,0x80070667
   14002c3d5:	test   rbx,rbx
   14002c3d8:	je     0x14002c3fc
   14002c3da:	mov    rcx,rbx
   14002c3dd:	call   QWORD PTR [rip+0x61e5]        # 0x1400325c8
   14002c3e3:	jmp    0x14002c3fc
   14002c3e5:	mov    rcx,QWORD PTR [rbp+0x40]
   14002c3e9:	call   QWORD PTR [rip+0x6231]        # 0x140032620
   14002c3ef:	test   eax,eax
   14002c3f1:	mov    r14d,0x80004005
   14002c3f7:	je     0x14002c3fc
   14002c3f9:	mov    r14d,r13d
   14002c3fc:	test   rdi,rdi
   14002c3ff:	je     0x14002c40b
   14002c401:	mov    rcx,rdi
   14002c404:	call   QWORD PTR [rip+0x61be]        # 0x1400325c8
   14002c40a:	nop
   14002c40b:	cmp    QWORD PTR [rbp+0x40],r13
   14002c40f:	je     0x14002c41b
   14002c411:	mov    rcx,QWORD PTR [rbp+0x40]
   14002c415:	call   QWORD PTR [rip+0x60b5]        # 0x1400324d0
   14002c41b:	mov    eax,r14d
   14002c41e:	lea    r11,[rsp+0x50]
   14002c423:	mov    rbx,QWORD PTR [r11+0x30]
   14002c427:	mov    rdi,QWORD PTR [r11+0x38]
   14002c42b:	mov    rsp,r11
   14002c42e:	pop    r15
   14002c430:	pop    r14
   14002c432:	pop    r13
   14002c434:	pop    r12
   14002c436:	pop    rbp
   14002c437:	ret    
   14002c438:	int3   
   14002c439:	int3   
   14002c43a:	int3   
   14002c43b:	int3   
   14002c43c:	int3   
   14002c43d:	int3   
   14002c43e:	int3   
   14002c43f:	int3   
   14002c440:	mov    QWORD PTR [rsp+0x10],rbx
   14002c445:	mov    QWORD PTR [rsp+0x18],rsi
   14002c44a:	mov    QWORD PTR [rsp+0x20],r9
   14002c44f:	push   rbp
   14002c450:	push   rdi
   14002c451:	push   r12
   14002c453:	push   r14
   14002c455:	push   r15
   14002c457:	mov    rbp,rsp
   14002c45a:	sub    rsp,0x30
   14002c45e:	and    QWORD PTR [rcx],0x0
   14002c462:	mov    r15,rcx
   14002c465:	and    QWORD PTR [rbp-0x10],0x0
   14002c46a:	lea    rcx,[rbp-0x10]
   14002c46e:	mov    r12,r8
   14002c471:	call   0x14002c0dc
   14002c476:	mov    rbx,QWORD PTR [rbp-0x10]
   14002c47a:	mov    esi,eax
   14002c47c:	test   eax,eax
   14002c47e:	js     0x14002c585
   14002c484:	and    QWORD PTR [rbp+0x48],0x0
   14002c489:	mov    dil,0x1
   14002c48c:	and    QWORD PTR [rbp+0x30],0x0
   14002c491:	test   dil,dil
   14002c494:	je     0x14002c4c0
   14002c496:	mov    rax,QWORD PTR [r12]
   14002c49a:	mov    rdi,QWORD PTR [rax+0x18]
   14002c49e:	mov    rcx,rdi
   14002c4a1:	call   QWORD PTR [rip+0x6201]        # 0x1400326a8
   14002c4a7:	lea    rdx,[rbp+0x48]
   14002c4ab:	mov    rcx,r12
   14002c4ae:	call   rdi
   14002c4b0:	mov    esi,eax
   14002c4b2:	test   eax,eax
   14002c4b4:	js     0x14002c585
   14002c4ba:	mov    rax,QWORD PTR [rbp+0x48]
   14002c4be:	jmp    0x14002c4c8
   14002c4c0:	mov    rax,QWORD PTR [rbp+0x30]
   14002c4c4:	mov    QWORD PTR [rbp+0x48],rax
   14002c4c8:	test   rax,rax
   14002c4cb:	je     0x14002c5db
   14002c4d1:	mov    rax,QWORD PTR [r12]
   14002c4d5:	mov    rdi,QWORD PTR [rax+0x18]
   14002c4d9:	mov    rcx,rdi
   14002c4dc:	call   QWORD PTR [rip+0x61c6]        # 0x1400326a8
   14002c4e2:	lea    rdx,[rbp+0x30]
   14002c4e6:	mov    rcx,r12
   14002c4e9:	call   rdi
   14002c4eb:	mov    esi,eax
   14002c4ed:	test   eax,eax
   14002c4ef:	js     0x14002c585
   14002c4f5:	mov    rdx,QWORD PTR [rbp+0x48]
   14002c4f9:	xor    r14b,r14b
   14002c4fc:	xor    dil,dil
   14002c4ff:	movzx  eax,WORD PTR [rdx]
   14002c502:	cmp    ax,0x40
   14002c506:	jne    0x14002c518
   14002c508:	add    rdx,0x2
   14002c50c:	mov    rcx,rbx
   14002c50f:	call   0x14002c248
   14002c514:	mov    esi,eax
   14002c516:	jmp    0x14002c57d
   14002c518:	cmp    ax,0x2d
   14002c51c:	je     0x14002c59b
   14002c51e:	cmp    ax,0x2f
   14002c522:	jne    0x14002c491
   14002c528:	sub    ax,0x2d
   14002c52c:	mov    r9d,0xfffd
   14002c532:	test   r9w,ax
   14002c536:	jne    0x14002c53c
   14002c538:	add    rdx,0x2
   14002c53c:	mov    rcx,QWORD PTR [rbp+0x30]
   14002c540:	lea    r8,[rip+0x8ff1]        # 0x140035538
   14002c547:	test   rcx,rcx
   14002c54a:	je     0x14002c55f
   14002c54c:	movzx  eax,WORD PTR [rcx]
   14002c54f:	sub    ax,0x2d
   14002c553:	test   r9w,ax
   14002c557:	je     0x14002c55f
   14002c559:	mov    r8,rcx
   14002c55c:	mov    r14b,0x1
   14002c55f:	mov    rcx,rbx
   14002c562:	call   0x14002bea8
   14002c567:	mov    esi,eax
   14002c569:	cmp    eax,0x800700b7
   14002c56e:	je     0x14002c491
   14002c574:	test   eax,eax
   14002c576:	js     0x14002c57d
   14002c578:	mov    dil,r14b
   14002c57b:	xor    esi,esi
   14002c57d:	test   esi,esi
   14002c57f:	jns    0x14002c491
   14002c585:	test   rbx,rbx
   14002c588:	je     0x14002c5e0
   14002c58a:	mov    eax,DWORD PTR [rbx+0x8]
   14002c58d:	cmp    eax,0x1
   14002c590:	jne    0x14002c5ae
   14002c592:	mov    DWORD PTR [rbx+0x8],0x0
   14002c599:	jmp    0x14002c5bb
   14002c59b:	cmp    WORD PTR [rdx+0x2],0x2d
   14002c5a0:	jne    0x14002c528
   14002c5a2:	add    rdx,0x4
   14002c5a6:	mov    r9d,0xfffd
   14002c5ac:	jmp    0x14002c53c
   14002c5ae:	or     eax,0xffffffff
   14002c5b1:	lock xadd DWORD PTR [rbx+0x8],eax
   14002c5b6:	sub    eax,0x1
   14002c5b9:	jg     0x14002c5e0
   14002c5bb:	mov    rbx,QWORD PTR [rbp-0x10]
   14002c5bf:	mov    rax,QWORD PTR [rbx]
   14002c5c2:	mov    rdi,QWORD PTR [rax+0x10]
   14002c5c6:	mov    rcx,rdi
   14002c5c9:	call   QWORD PTR [rip+0x60d9]        # 0x1400326a8
   14002c5cf:	mov    edx,0x1
   14002c5d4:	mov    rcx,rbx
   14002c5d7:	call   rdi
   14002c5d9:	jmp    0x14002c5e0
   14002c5db:	mov    QWORD PTR [r15],rbx
   14002c5de:	xor    esi,esi
   14002c5e0:	mov    rbx,QWORD PTR [rsp+0x68]
   14002c5e5:	mov    eax,esi
   14002c5e7:	mov    rsi,QWORD PTR [rsp+0x70]
   14002c5ec:	add    rsp,0x30
   14002c5f0:	pop    r15
   14002c5f2:	pop    r14
   14002c5f4:	pop    r12
   14002c5f6:	pop    rdi
   14002c5f7:	pop    rbp
   14002c5f8:	ret    
   14002c5f9:	int3   
   14002c5fa:	int3   
   14002c5fb:	int3   
   14002c5fc:	int3   
   14002c5fd:	int3   
   14002c5fe:	int3   
   14002c5ff:	int3   
   14002c600:	mov    rdx,rcx
   14002c603:	mov    rcx,QWORD PTR [rcx+0x10]
   14002c607:	cmp    rcx,QWORD PTR [rdx+0x20]
   14002c60b:	jb     0x14002c610
   14002c60d:	xor    eax,eax
   14002c60f:	ret    
   14002c610:	mov    rax,QWORD PTR [rcx]
   14002c613:	add    rcx,0x8
   14002c617:	mov    QWORD PTR [rdx+0x10],rcx
   14002c61b:	ret    
   14002c61c:	int3   
   14002c61d:	int3   
   14002c61e:	int3   
   14002c61f:	int3   
   14002c620:	int3   
   14002c621:	int3   
   14002c622:	int3   
   14002c623:	int3   
   14002c624:	int3   
   14002c625:	int3   
   14002c626:	int3   
   14002c627:	int3   
   14002c628:	int3   
   14002c629:	int3   
   14002c62a:	int3   
   14002c62b:	int3   
   14002c62c:	int3   
   14002c62d:	int3   
   14002c62e:	int3   
   14002c62f:	int3   
   14002c630:	mov    rax,QWORD PTR [rcx+0x10]
   14002c634:	mov    r8,rcx
   14002c637:	cmp    rax,QWORD PTR [rcx+0x20]
   14002c63b:	jb     0x14002c641
   14002c63d:	xor    ecx,ecx
   14002c63f:	jmp    0x14002c64c
   14002c641:	mov    rcx,QWORD PTR [rax]
   14002c644:	add    rax,0x8
   14002c648:	mov    QWORD PTR [r8+0x10],rax
   14002c64c:	mov    QWORD PTR [rdx],rcx
   14002c64f:	xor    eax,eax
   14002c651:	ret    
   14002c652:	int3   
   14002c653:	int3   
   14002c654:	int3   
   14002c655:	int3   
   14002c656:	int3   
   14002c657:	int3   
   14002c658:	int3   
   14002c659:	int3   
   14002c65a:	int3   
   14002c65b:	int3   
   14002c65c:	int3   
   14002c65d:	int3   
   14002c65e:	int3   
   14002c65f:	int3   
   14002c660:	mov    eax,0x80004001
   14002c665:	ret    
   14002c666:	int3   
   14002c667:	int3   
   14002c668:	int3   
   14002c669:	int3   
   14002c66a:	int3   
   14002c66b:	int3   
   14002c66c:	mov    rax,rsp
   14002c66f:	mov    QWORD PTR [rax+0x8],rbx
   14002c673:	mov    QWORD PTR [rax+0x10],rbp
   14002c677:	mov    QWORD PTR [rax+0x18],rsi
   14002c67b:	mov    QWORD PTR [rax+0x20],rdi
   14002c67f:	push   r14
   14002c681:	sub    rsp,0x30
   14002c685:	mov    r14,rcx
   14002c688:	xor    ebx,ebx
   14002c68a:	and    QWORD PTR [rax+0x28],rbx
   14002c68e:	lea    rcx,[rax+0x28]
   14002c692:	mov    QWORD PTR [rax-0x18],rbx
   14002c696:	mov    rdi,r9
   14002c699:	mov    rbp,r8
   14002c69c:	call   0x14002cde8
   14002c6a1:	mov    esi,eax
   14002c6a3:	test   eax,eax
   14002c6a5:	jns    0x14002c6f1
   14002c6a7:	mov    rax,QWORD PTR [rsp+0x60]
   14002c6ac:	test   rax,rax
   14002c6af:	je     0x14002c713
   14002c6b1:	mov    ecx,DWORD PTR [rax+0x8]
   14002c6b4:	cmp    ecx,0x1
   14002c6b7:	jne    0x14002c6be
   14002c6b9:	mov    DWORD PTR [rax+0x8],ebx
   14002c6bc:	jmp    0x14002c6cb
   14002c6be:	or     ecx,0xffffffff
   14002c6c1:	lock xadd DWORD PTR [rax+0x8],ecx
   14002c6c6:	sub    ecx,0x1
   14002c6c9:	jg     0x14002c6ea
   14002c6cb:	mov    rbx,QWORD PTR [rsp+0x60]
   14002c6d0:	mov    rax,QWORD PTR [rbx]
   14002c6d3:	mov    rdi,QWORD PTR [rax+0x10]
   14002c6d7:	mov    rcx,rdi
   14002c6da:	call   QWORD PTR [rip+0x5fc8]        # 0x1400326a8
   14002c6e0:	mov    edx,0x1
   14002c6e5:	mov    rcx,rbx
   14002c6e8:	call   rdi
   14002c6ea:	mov    rbx,QWORD PTR [rsp+0x20]
   14002c6ef:	jmp    0x14002c713
   14002c6f1:	mov    rbx,QWORD PTR [rsp+0x60]
   14002c6f6:	lea    rax,[rdi+rbp*8]
   14002c6fa:	and    QWORD PTR [rsp+0x60],0x0
   14002c700:	mov    QWORD PTR [rsp+0x20],rbx
   14002c705:	xor    esi,esi
   14002c707:	mov    QWORD PTR [rbx+0x18],rdi
   14002c70b:	mov    QWORD PTR [rbx+0x10],rdi
   14002c70f:	mov    QWORD PTR [rbx+0x20],rax
   14002c713:	test   esi,esi
   14002c715:	js     0x14002c724
   14002c717:	mov    r8,rbx
   14002c71a:	mov    rcx,r14
   14002c71d:	call   0x14002c440
   14002c722:	mov    esi,eax
   14002c724:	test   rbx,rbx
   14002c727:	je     0x14002c766
   14002c729:	mov    ecx,DWORD PTR [rbx+0x8]
   14002c72c:	cmp    ecx,0x1
   14002c72f:	jne    0x14002c73a
   14002c731:	mov    DWORD PTR [rbx+0x8],0x0
   14002c738:	jmp    0x14002c747
   14002c73a:	or     eax,0xffffffff
   14002c73d:	lock xadd DWORD PTR [rbx+0x8],eax
   14002c742:	sub    eax,0x1
   14002c745:	jg     0x14002c766
   14002c747:	mov    rbx,QWORD PTR [rsp+0x20]
   14002c74c:	mov    rax,QWORD PTR [rbx]
   14002c74f:	mov    rdi,QWORD PTR [rax+0x10]
   14002c753:	mov    rcx,rdi
   14002c756:	call   QWORD PTR [rip+0x5f4c]        # 0x1400326a8
   14002c75c:	mov    edx,0x1
   14002c761:	mov    rcx,rbx
   14002c764:	call   rdi
   14002c766:	mov    rbx,QWORD PTR [rsp+0x40]
   14002c76b:	mov    eax,esi
   14002c76d:	mov    rsi,QWORD PTR [rsp+0x50]
   14002c772:	mov    rbp,QWORD PTR [rsp+0x48]
   14002c777:	mov    rdi,QWORD PTR [rsp+0x58]
   14002c77c:	add    rsp,0x30
   14002c780:	pop    r14
   14002c782:	ret    
   14002c783:	int3   
   14002c784:	int3   
   14002c785:	int3   
   14002c786:	int3   
   14002c787:	int3   
   14002c788:	int3   
   14002c789:	int3   
   14002c78a:	int3   
   14002c78b:	int3   
   14002c78c:	mov    rax,rsp
   14002c78f:	push   rsi
   14002c790:	push   rdi
   14002c791:	push   r14
   14002c793:	sub    rsp,0x50
   14002c797:	mov    QWORD PTR [rax-0x48],0xfffffffffffffffe
   14002c79f:	mov    QWORD PTR [rax+0x8],rbx
   14002c7a3:	mov    QWORD PTR [rax+0x18],rbp
   14002c7a7:	mov    rsi,rdx
   14002c7aa:	mov    r14d,0x1
   14002c7b0:	test   rdx,rdx
   14002c7b3:	je     0x14002c7c7
   14002c7b5:	mov    eax,DWORD PTR [rdx+0x8]
   14002c7b8:	test   eax,eax
   14002c7ba:	jne    0x14002c7c2
   14002c7bc:	mov    DWORD PTR [rdx+0x8],r14d
   14002c7c0:	jmp    0x14002c7c7
   14002c7c2:	lock add DWORD PTR [rdx+0x8],r14d
   14002c7c7:	mov    QWORD PTR [rsp+0x78],rdx
   14002c7cc:	lea    rax,[rdx+0x10]
   14002c7d0:	cmp    QWORD PTR [rax+0x18],0x8
   14002c7d5:	jb     0x14002c7da
   14002c7d7:	mov    rax,QWORD PTR [rax]
   14002c7da:	mov    QWORD PTR [rsp+0x28],rax
   14002c7df:	test   rdx,rdx
   14002c7e2:	je     0x14002c7f6
   14002c7e4:	mov    eax,DWORD PTR [rdx+0x8]
   14002c7e7:	test   eax,eax
   14002c7e9:	jne    0x14002c7f1
   14002c7eb:	mov    DWORD PTR [rdx+0x8],r14d
   14002c7ef:	jmp    0x14002c7f6
   14002c7f1:	lock add DWORD PTR [rdx+0x8],r14d
   14002c7f6:	mov    QWORD PTR [rsp+0x30],rdx
   14002c7fb:	mov    r9b,BYTE PTR [rip+0x239fe]        # 0x140050200
   14002c802:	lea    r8,[rsp+0x28]
   14002c807:	lea    rdx,[rsp+0x38]
   14002c80c:	call   0x14002cb5c
   14002c811:	mov    bpl,BYTE PTR [rax+0x8]
   14002c815:	mov    rcx,QWORD PTR [rsp+0x30]
   14002c81a:	test   rcx,rcx
   14002c81d:	je     0x14002c85a
   14002c81f:	mov    eax,DWORD PTR [rcx+0x8]
   14002c822:	cmp    eax,r14d
   14002c825:	jne    0x14002c830
   14002c827:	mov    DWORD PTR [rcx+0x8],0x0
   14002c82e:	jmp    0x14002c83d
   14002c830:	or     eax,0xffffffff
   14002c833:	lock xadd DWORD PTR [rcx+0x8],eax
   14002c838:	sub    eax,0x1
   14002c83b:	jg     0x14002c85a
   14002c83d:	mov    rdi,QWORD PTR [rsp+0x30]
   14002c842:	mov    rax,QWORD PTR [rdi]
   14002c845:	mov    rbx,QWORD PTR [rax]
   14002c848:	mov    rcx,rbx
   14002c84b:	call   QWORD PTR [rip+0x5e57]        # 0x1400326a8
   14002c851:	mov    edx,r14d
   14002c854:	mov    rcx,rdi
   14002c857:	call   rbx
   14002c859:	nop
   14002c85a:	test   rsi,rsi
   14002c85d:	je     0x14002c894
   14002c85f:	mov    eax,DWORD PTR [rsi+0x8]
   14002c862:	cmp    eax,r14d
   14002c865:	jne    0x14002c870
   14002c867:	mov    DWORD PTR [rsi+0x8],0x0
   14002c86e:	jmp    0x14002c87d
   14002c870:	or     ecx,0xffffffff
   14002c873:	lock xadd DWORD PTR [rsi+0x8],ecx
   14002c878:	sub    ecx,0x1
   14002c87b:	jg     0x14002c894
   14002c87d:	mov    rcx,QWORD PTR [rsi]
   14002c880:	mov    rbx,QWORD PTR [rcx]
   14002c883:	mov    rcx,rbx
   14002c886:	call   QWORD PTR [rip+0x5e1c]        # 0x1400326a8
   14002c88c:	mov    edx,r14d
   14002c88f:	mov    rcx,rsi
   14002c892:	call   rbx
   14002c894:	mov    al,bpl
   14002c897:	lea    r11,[rsp+0x50]
   14002c89c:	mov    rbx,QWORD PTR [r11+0x20]
   14002c8a0:	mov    rbp,QWORD PTR [r11+0x30]
   14002c8a4:	mov    rsp,r11
   14002c8a7:	pop    r14
   14002c8a9:	pop    rdi
   14002c8aa:	pop    rsi
   14002c8ab:	ret    
   14002c8ac:	int3   
   14002c8ad:	int3   
   14002c8ae:	int3   
   14002c8af:	int3   
   14002c8b0:	int3   
   14002c8b1:	int3   
   14002c8b2:	int3   
   14002c8b3:	int3   
   14002c8b4:	mov    QWORD PTR [rsp+0x8],rbx
   14002c8b9:	mov    QWORD PTR [rsp+0x10],rsi
   14002c8be:	mov    QWORD PTR [rsp+0x18],rdi
   14002c8c3:	push   r14
   14002c8c5:	sub    rsp,0x20
   14002c8c9:	mov    r14,rdx
   14002c8cc:	mov    rdi,rcx
   14002c8cf:	call   0x14002c9e0
   14002c8d4:	mov    rbx,QWORD PTR [rdi+0x10]
   14002c8d8:	mov    rsi,rax
   14002c8db:	add    rsi,rsi
   14002c8de:	mov    rbx,QWORD PTR [rbx+rsi*8]
   14002c8e2:	mov    rax,QWORD PTR [rdi+0x10]
   14002c8e6:	mov    rcx,QWORD PTR [rdi]
   14002c8e9:	cmp    QWORD PTR [rax+rsi*8],rcx
   14002c8ed:	je     0x14002c8f7
   14002c8ef:	mov    rcx,QWORD PTR [rax+rsi*8+0x8]
   14002c8f4:	mov    rcx,QWORD PTR [rcx]
   14002c8f7:	cmp    rbx,rcx
   14002c8fa:	je     0x14002c923
   14002c8fc:	mov    rdx,QWORD PTR [r14]
   14002c8ff:	mov    rcx,QWORD PTR [rbx+0x10]
   14002c903:	call   QWORD PTR [rip+0x5cef]        # 0x1400325f8
   14002c909:	test   eax,eax
   14002c90b:	jns    0x14002c912
   14002c90d:	mov    rbx,QWORD PTR [rbx]
   14002c910:	jmp    0x14002c8e2
   14002c912:	mov    rdx,QWORD PTR [rbx+0x10]
   14002c916:	mov    rcx,QWORD PTR [r14]
   14002c919:	call   QWORD PTR [rip+0x5cd9]        # 0x1400325f8
   14002c91f:	test   eax,eax
   14002c921:	jns    0x14002c926
   14002c923:	mov    rbx,QWORD PTR [rdi]
   14002c926:	cmp    rbx,QWORD PTR [rdi]
   14002c929:	jne    0x14002c92f
   14002c92b:	xor    eax,eax
   14002c92d:	jmp    0x14002c933
   14002c92f:	mov    rax,QWORD PTR [rbx+0x18]
   14002c933:	mov    rbx,QWORD PTR [rsp+0x30]
   14002c938:	mov    rsi,QWORD PTR [rsp+0x38]
   14002c93d:	mov    rdi,QWORD PTR [rsp+0x40]
   14002c942:	add    rsp,0x20
   14002c946:	pop    r14
   14002c948:	ret    
   14002c949:	int3   
   14002c94a:	int3   
   14002c94b:	int3   
   14002c94c:	int3   
   14002c94d:	int3   
   14002c94e:	int3   
   14002c94f:	int3   
   14002c950:	sub    rsp,0x28
   14002c954:	mov    rcx,QWORD PTR [rcx]
   14002c957:	test   rcx,rcx
   14002c95a:	je     0x14002c962
   14002c95c:	call   QWORD PTR [rip+0x5b6e]        # 0x1400324d0
   14002c962:	add    rsp,0x28
   14002c966:	ret    
   14002c967:	int3   
   14002c968:	int3   
   14002c969:	int3   
   14002c96a:	int3   
   14002c96b:	int3   
   14002c96c:	int3   
   14002c96d:	int3   
   14002c96e:	int3   
   14002c96f:	int3   
   14002c970:	and    QWORD PTR [rdx],0x0
   14002c974:	mov    eax,0x80004001
   14002c979:	ret    
   14002c97a:	int3   
   14002c97b:	int3   
   14002c97c:	int3   
   14002c97d:	int3   
   14002c97e:	int3   
   14002c97f:	int3   
   14002c980:	mov    QWORD PTR [rsp+0x8],rbx
   14002c985:	push   rdi
   14002c986:	sub    rsp,0x20
   14002c98a:	mov    rdi,QWORD PTR [rcx+0x8]
   14002c98e:	test   rdi,rdi
   14002c991:	je     0x14002c9cf
   14002c993:	mov    eax,DWORD PTR [rdi+0x8]
   14002c996:	cmp    eax,0x1
   14002c999:	jne    0x14002c9a4
   14002c99b:	mov    DWORD PTR [rdi+0x8],0x0
   14002c9a2:	jmp    0x14002c9b1
   14002c9a4:	or     eax,0xffffffff
   14002c9a7:	lock xadd DWORD PTR [rdi+0x8],eax
   14002c9ac:	sub    eax,0x1
   14002c9af:	jg     0x14002c9cf
   14002c9b1:	test   rdi,rdi
   14002c9b4:	je     0x14002c9cf
   14002c9b6:	mov    rax,QWORD PTR [rdi]
   14002c9b9:	mov    rbx,QWORD PTR [rax]
   14002c9bc:	mov    rcx,rbx
   14002c9bf:	call   QWORD PTR [rip+0x5ce3]        # 0x1400326a8
   14002c9c5:	mov    edx,0x1
   14002c9ca:	mov    rcx,rdi
   14002c9cd:	call   rbx
   14002c9cf:	mov    rbx,QWORD PTR [rsp+0x30]
   14002c9d4:	add    rsp,0x20
   14002c9d8:	pop    rdi
   14002c9d9:	ret    
   14002c9da:	int3   
   14002c9db:	int3   
   14002c9dc:	int3   
   14002c9dd:	int3   
   14002c9de:	int3   
   14002c9df:	int3   
   14002c9e0:	mov    QWORD PTR [rsp+0x10],rbx
   14002c9e5:	mov    QWORD PTR [rsp+0x18],rbp
   14002c9ea:	push   rsi
   14002c9eb:	push   rdi
   14002c9ec:	push   r12
   14002c9ee:	push   r14
   14002c9f0:	push   r15
   14002c9f2:	sub    rsp,0x20
   14002c9f6:	mov    r15,QWORD PTR [rdx]
   14002c9f9:	or     rsi,0xffffffffffffffff
   14002c9fd:	mov    rdi,rsi
   14002ca00:	xor    r12d,r12d
   14002ca03:	mov    r14,rcx
   14002ca06:	mov    ebx,0x2db39507
   14002ca0b:	inc    rdi
   14002ca0e:	cmp    WORD PTR [r15+rdi*2],r12w
   14002ca13:	jne    0x14002ca0b
   14002ca15:	mov    rbp,r12
   14002ca18:	test   rdi,rdi
   14002ca1b:	je     0x14002ca6a
   14002ca1d:	movzx  ecx,WORD PTR [r15+rbp*2]
   14002ca22:	call   QWORD PTR [rip+0x5bf0]        # 0x140032618
   14002ca28:	mov    WORD PTR [rsp+0x50],ax
   14002ca2d:	mov    rdx,r12
   14002ca30:	movzx  ecx,BYTE PTR [rsp+rdx*1+0x50]
   14002ca35:	movabs r8,0xf000000000000000
   14002ca3f:	shl    rbx,0x4
   14002ca43:	inc    rdx
   14002ca46:	add    rcx,rbx
   14002ca49:	mov    rax,rcx
   14002ca4c:	and    rax,r8
   14002ca4f:	mov    rbx,rax
   14002ca52:	shr    rbx,0x38
   14002ca56:	xor    rbx,rax
   14002ca59:	xor    rbx,rcx
   14002ca5c:	cmp    rdx,0x2
   14002ca60:	jb     0x14002ca30
   14002ca62:	inc    rbp
   14002ca65:	cmp    rbp,rdi
   14002ca68:	jb     0x14002ca1d
   14002ca6a:	mov    rcx,QWORD PTR [r14+0x28]
   14002ca6e:	mov    rax,rcx
   14002ca71:	and    rax,rbx
   14002ca74:	cmp    QWORD PTR [r14+0x30],rax
   14002ca78:	ja     0x14002ca83
   14002ca7a:	shr    rcx,1
   14002ca7d:	sub    rsi,rcx
   14002ca80:	add    rax,rsi
   14002ca83:	mov    rbx,QWORD PTR [rsp+0x58]
   14002ca88:	mov    rbp,QWORD PTR [rsp+0x60]
   14002ca8d:	add    rsp,0x20
   14002ca91:	pop    r15
   14002ca93:	pop    r14
   14002ca95:	pop    r12
   14002ca97:	pop    rdi
   14002ca98:	pop    rsi
   14002ca99:	ret    
   14002ca9a:	int3   
   14002ca9b:	int3   
   14002ca9c:	int3   
   14002ca9d:	int3   
   14002ca9e:	int3   
   14002ca9f:	int3   
   14002caa0:	mov    rax,rsp
   14002caa3:	mov    QWORD PTR [rax+0x8],rbx
   14002caa7:	mov    QWORD PTR [rax+0x10],rbp
   14002caab:	mov    QWORD PTR [rax+0x18],rsi
   14002caaf:	mov    QWORD PTR [rax+0x20],rdi
   14002cab3:	push   r14
   14002cab5:	sub    rsp,0x20
   14002cab9:	mov    rax,QWORD PTR [rcx]
   14002cabc:	mov    rdi,rcx
   14002cabf:	mov    r14,QWORD PTR [rax]
   14002cac2:	mov    QWORD PTR [rax],rax
   14002cac5:	mov    rax,QWORD PTR [rcx]
   14002cac8:	mov    QWORD PTR [rax+0x8],rax
   14002cacc:	and    QWORD PTR [rcx+0x8],0x0
   14002cad1:	cmp    r14,QWORD PTR [rcx]
   14002cad4:	je     0x14002cb2f
   14002cad6:	mov    rsi,QWORD PTR [r14+0x18]
   14002cada:	mov    rbp,QWORD PTR [r14]
   14002cadd:	test   rsi,rsi
   14002cae0:	je     0x14002cb1e
   14002cae2:	mov    eax,DWORD PTR [rsi+0x8]
   14002cae5:	cmp    eax,0x1
   14002cae8:	jne    0x14002caf3
   14002caea:	mov    DWORD PTR [rsi+0x8],0x0
   14002caf1:	jmp    0x14002cb00
   14002caf3:	or     eax,0xffffffff
   14002caf6:	lock xadd DWORD PTR [rsi+0x8],eax
   14002cafb:	sub    eax,0x1
   14002cafe:	jg     0x14002cb1e
   14002cb00:	test   rsi,rsi
   14002cb03:	je     0x14002cb1e
   14002cb05:	mov    rax,QWORD PTR [rsi]
   14002cb08:	mov    rbx,QWORD PTR [rax]
   14002cb0b:	mov    rcx,rbx
   14002cb0e:	call   QWORD PTR [rip+0x5b94]        # 0x1400326a8
   14002cb14:	mov    edx,0x1
   14002cb19:	mov    rcx,rsi
   14002cb1c:	call   rbx
   14002cb1e:	mov    rcx,r14
   14002cb21:	call   QWORD PTR [rip+0x5aa1]        # 0x1400325c8
   14002cb27:	mov    r14,rbp
   14002cb2a:	cmp    rbp,QWORD PTR [rdi]
   14002cb2d:	jne    0x14002cad6
   14002cb2f:	mov    rcx,QWORD PTR [rdi]
   14002cb32:	mov    rbx,QWORD PTR [rsp+0x30]
   14002cb37:	mov    rbp,QWORD PTR [rsp+0x38]
   14002cb3c:	mov    rsi,QWORD PTR [rsp+0x40]
   14002cb41:	mov    rdi,QWORD PTR [rsp+0x48]
   14002cb46:	add    rsp,0x20
   14002cb4a:	pop    r14
   14002cb4c:	rex.W jmp QWORD PTR [rip+0x5a75]        # 0x1400325c8
   14002cb53:	int3   
   14002cb54:	int3   
   14002cb55:	int3   
   14002cb56:	int3   
   14002cb57:	int3   
   14002cb58:	int3   
   14002cb59:	int3   
   14002cb5a:	int3   
   14002cb5b:	int3   
   14002cb5c:	mov    rax,rsp
   14002cb5f:	push   r13
   14002cb61:	push   r14
   14002cb63:	push   r15
   14002cb65:	sub    rsp,0x30
   14002cb69:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   14002cb71:	mov    QWORD PTR [rax+0x8],rbx
   14002cb75:	mov    QWORD PTR [rax+0x10],rsi
   14002cb79:	mov    QWORD PTR [rax+0x18],rdi
   14002cb7d:	mov    rdi,r8
   14002cb80:	mov    r15,rdx
   14002cb83:	mov    r14,rcx
   14002cb86:	mov    rdx,r8
   14002cb89:	call   0x14002c9e0
   14002cb8e:	mov    rsi,rax
   14002cb91:	mov    rbx,QWORD PTR [r14]
   14002cb94:	add    rsi,rsi
   14002cb97:	mov    rax,QWORD PTR [r14+0x10]
   14002cb9b:	cmp    rbx,QWORD PTR [rax+rsi*8]
   14002cb9f:	je     0x14002cbf2
   14002cba1:	mov    rbx,QWORD PTR [rax+rsi*8+0x8]
   14002cba6:	mov    rbx,QWORD PTR [rbx]
   14002cba9:	jmp    0x14002cbc4
   14002cbab:	mov    rbx,QWORD PTR [rbx+0x8]
   14002cbaf:	mov    rdx,QWORD PTR [rbx+0x10]
   14002cbb3:	mov    rcx,QWORD PTR [rdi]
   14002cbb6:	call   QWORD PTR [rip+0x5a3c]        # 0x1400325f8
   14002cbbc:	test   eax,eax
   14002cbbe:	jns    0x14002cbcc
   14002cbc0:	mov    rax,QWORD PTR [r14+0x10]
   14002cbc4:	cmp    rbx,QWORD PTR [rax+rsi*8]
   14002cbc8:	jne    0x14002cbab
   14002cbca:	jmp    0x14002cbf2
   14002cbcc:	mov    rdx,QWORD PTR [rdi]
   14002cbcf:	mov    rcx,QWORD PTR [rbx+0x10]
   14002cbd3:	call   QWORD PTR [rip+0x5a1f]        # 0x1400325f8
   14002cbd9:	test   eax,eax
   14002cbdb:	jns    0x14002cbe2
   14002cbdd:	mov    rbx,QWORD PTR [rbx]
   14002cbe0:	jmp    0x14002cbf2
   14002cbe2:	mov    QWORD PTR [r15],rbx
   14002cbe5:	mov    BYTE PTR [r15+0x8],0x0
   14002cbea:	mov    rax,r15
   14002cbed:	jmp    0x14002ccd9
   14002cbf2:	mov    rax,QWORD PTR [r14]
   14002cbf5:	mov    r13,QWORD PTR [rax]
   14002cbf8:	mov    r9,rdi
   14002cbfb:	mov    r8,QWORD PTR [r13+0x8]
   14002cbff:	mov    rdx,r13
   14002cc02:	call   0x140012804
   14002cc07:	mov    rdx,rax
   14002cc0a:	mov    rax,QWORD PTR [r14+0x8]
   14002cc0e:	movabs rcx,0x7fffffffffffffe
   14002cc18:	sub    rcx,rax
   14002cc1b:	cmp    rcx,0x1
   14002cc1f:	jae    0x14002cc2e
   14002cc21:	lea    rcx,[rip+0xa558]        # 0x140037180
   14002cc28:	call   0x14002d7f8
   14002cc2d:	int3   
   14002cc2e:	inc    rax
   14002cc31:	mov    QWORD PTR [r14+0x8],rax
   14002cc35:	mov    QWORD PTR [r13+0x8],rdx
   14002cc39:	mov    rax,QWORD PTR [rdx+0x8]
   14002cc3d:	mov    QWORD PTR [rax],rdx
   14002cc40:	mov    rdi,QWORD PTR [r14]
   14002cc43:	mov    rdi,QWORD PTR [rdi]
   14002cc46:	mov    rax,QWORD PTR [rdi]
   14002cc49:	cmp    rbx,rax
   14002cc4c:	je     0x14002cc7b
   14002cc4e:	mov    rcx,QWORD PTR [rdi+0x8]
   14002cc52:	mov    QWORD PTR [rcx],rax
   14002cc55:	mov    rcx,QWORD PTR [rax+0x8]
   14002cc59:	mov    QWORD PTR [rcx],rbx
   14002cc5c:	mov    rcx,QWORD PTR [rbx+0x8]
   14002cc60:	mov    QWORD PTR [rcx],rdi
   14002cc63:	mov    rdx,QWORD PTR [rbx+0x8]
   14002cc67:	mov    rcx,QWORD PTR [rax+0x8]
   14002cc6b:	mov    QWORD PTR [rbx+0x8],rcx
   14002cc6f:	mov    rcx,QWORD PTR [rdi+0x8]
   14002cc73:	mov    QWORD PTR [rax+0x8],rcx
   14002cc77:	mov    QWORD PTR [rdi+0x8],rdx
   14002cc7b:	mov    rdx,QWORD PTR [r14+0x10]
   14002cc7f:	mov    rax,QWORD PTR [rdx+rsi*8]
   14002cc83:	cmp    rax,QWORD PTR [r14]
   14002cc86:	jne    0x14002cc97
   14002cc88:	mov    QWORD PTR [rdx+rsi*8],rdi
   14002cc8c:	mov    rax,QWORD PTR [r14+0x10]
   14002cc90:	mov    QWORD PTR [rax+rsi*8+0x8],rdi
   14002cc95:	jmp    0x14002ccc6
   14002cc97:	cmp    rax,rbx
   14002cc9a:	jne    0x14002cca2
   14002cc9c:	mov    QWORD PTR [rdx+rsi*8],rdi
   14002cca0:	jmp    0x14002ccc6
   14002cca2:	mov    rax,QWORD PTR [rdx+rsi*8+0x8]
   14002cca7:	mov    rcx,QWORD PTR [rax]
   14002ccaa:	mov    QWORD PTR [rdx+rsi*8+0x8],rcx
   14002ccaf:	cmp    rcx,rdi
   14002ccb2:	je     0x14002ccc6
   14002ccb4:	mov    rdx,QWORD PTR [r14+0x10]
   14002ccb8:	mov    rax,QWORD PTR [rdx+rsi*8+0x8]
   14002ccbd:	mov    rcx,QWORD PTR [rax+0x8]
   14002ccc1:	mov    QWORD PTR [rdx+rsi*8+0x8],rcx
   14002ccc6:	mov    rcx,r14
   14002ccc9:	call   0x14002ccfc
   14002ccce:	mov    QWORD PTR [r15],rdi
   14002ccd1:	mov    BYTE PTR [r15+0x8],0x1
   14002ccd6:	mov    rax,r15
   14002ccd9:	mov    rbx,QWORD PTR [rsp+0x50]
   14002ccde:	mov    rsi,QWORD PTR [rsp+0x58]
   14002cce3:	mov    rdi,QWORD PTR [rsp+0x60]
   14002cce8:	add    rsp,0x30
   14002ccec:	pop    r15
   14002ccee:	pop    r14
   14002ccf0:	pop    r13
   14002ccf2:	ret    
   14002ccf3:	int3   
   14002ccf4:	int3   
   14002ccf5:	int3   
   14002ccf6:	int3   
   14002ccf7:	int3   
   14002ccf8:	int3   
   14002ccf9:	int3   
   14002ccfa:	int3   
   14002ccfb:	int3   
   14002ccfc:	mov    QWORD PTR [rsp+0x18],rbx
   14002cd01:	mov    QWORD PTR [rsp+0x20],rsi
   14002cd06:	push   rdi
   14002cd07:	sub    rsp,0x40
   14002cd0b:	mov    rax,QWORD PTR [rcx+0x8]
   14002cd0f:	xorps  xmm0,xmm0
   14002cd12:	mov    rbx,QWORD PTR [rcx+0x30]
   14002cd16:	mov    rsi,rcx
   14002cd19:	movss  xmm2,DWORD PTR [rip+0x10777]        # 0x14003d498
   14002cd21:	cvtsi2ss xmm0,rax
   14002cd26:	test   rax,rax
   14002cd29:	jns    0x14002cd2f
   14002cd2b:	addss  xmm0,xmm2
   14002cd2f:	xorps  xmm1,xmm1
   14002cd32:	cvtsi2ss xmm1,rbx
   14002cd37:	test   rbx,rbx
   14002cd3a:	jns    0x14002cd40
   14002cd3c:	addss  xmm1,xmm2
   14002cd40:	divss  xmm0,xmm1
   14002cd44:	comiss xmm0,DWORD PTR [rcx+0x38]
   14002cd48:	jbe    0x14002cdd1
   14002cd4e:	cmp    rbx,0x200
   14002cd55:	jae    0x14002cd5d
   14002cd57:	shl    rbx,0x3
   14002cd5b:	jmp    0x14002cd6f
   14002cd5d:	movabs rax,0xfffffffffffffff
   14002cd67:	cmp    rbx,rax
   14002cd6a:	jae    0x14002cd6f
   14002cd6c:	add    rbx,rbx
   14002cd6f:	mov    rax,QWORD PTR [rsi]
   14002cd72:	lea    r9,[rbx+rbx*1]
   14002cd76:	add    rcx,0x10
   14002cd7a:	mov    QWORD PTR [rsp+0x50],rax
   14002cd7f:	lea    rax,[rsp+0x50]
   14002cd84:	lea    rdx,[rsp+0x58]
   14002cd89:	mov    QWORD PTR [rsp+0x20],rax
   14002cd8e:	mov    r8,QWORD PTR [rcx]
   14002cd91:	mov    QWORD PTR [rcx+0x8],r8
   14002cd95:	call   0x14000dfb4
   14002cd9a:	lea    rax,[rbx-0x1]
   14002cd9e:	mov    QWORD PTR [rsi+0x30],rbx
   14002cda2:	mov    QWORD PTR [rsi+0x28],rax
   14002cda6:	mov    rax,QWORD PTR [rsi]
   14002cda9:	cmp    QWORD PTR [rax],rax
   14002cdac:	je     0x14002cdd1
   14002cdae:	mov    rdi,QWORD PTR [rax+0x8]
   14002cdb2:	mov    rbx,QWORD PTR [rsi]
   14002cdb5:	lea    rdx,[rsp+0x30]
   14002cdba:	mov    rcx,rsi
   14002cdbd:	mov    rbx,QWORD PTR [rbx]
   14002cdc0:	mov    r9,rbx
   14002cdc3:	lea    r8,[rbx+0x10]
   14002cdc7:	call   0x14002ce5c
   14002cdcc:	cmp    rbx,rdi
   14002cdcf:	jne    0x14002cdb2
   14002cdd1:	mov    rbx,QWORD PTR [rsp+0x60]
   14002cdd6:	mov    rsi,QWORD PTR [rsp+0x68]
   14002cddb:	add    rsp,0x40
   14002cddf:	pop    rdi
   14002cde0:	ret    
   14002cde1:	int3   
   14002cde2:	int3   
   14002cde3:	int3   
   14002cde4:	int3   
   14002cde5:	int3   
   14002cde6:	int3   
   14002cde7:	int3   
   14002cde8:	rex push rbx
   14002cdea:	sub    rsp,0x30
   14002cdee:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002cdf7:	mov    rbx,rcx
   14002cdfa:	mov    ecx,0x28
   14002cdff:	call   QWORD PTR [rip+0x57cb]        # 0x1400325d0
   14002ce05:	mov    rdx,rax
   14002ce08:	test   rax,rax
   14002ce0b:	je     0x14002ce1d
   14002ce0d:	and    DWORD PTR [rax+0x8],0x0
   14002ce11:	lea    rax,[rip+0x7fa8]        # 0x140034dc0
   14002ce18:	mov    QWORD PTR [rdx],rax
   14002ce1b:	jmp    0x14002ce1f
   14002ce1d:	xor    edx,edx
   14002ce1f:	test   rdx,rdx
   14002ce22:	je     0x14002ce3d
   14002ce24:	mov    eax,DWORD PTR [rdx+0x8]
   14002ce27:	test   eax,eax
   14002ce29:	jne    0x14002ce34
   14002ce2b:	mov    DWORD PTR [rdx+0x8],0x1
   14002ce32:	jmp    0x14002ce38
   14002ce34:	lock inc DWORD PTR [rdx+0x8]
   14002ce38:	mov    QWORD PTR [rbx],rdx
   14002ce3b:	jmp    0x14002ce4c
   14002ce3d:	mov    eax,0x8007000e
   14002ce42:	jmp    0x14002ce4e
   14002ce44:	mov    eax,DWORD PTR [rsp+0x48]
   14002ce48:	test   eax,eax
   14002ce4a:	js     0x14002ce4e
   14002ce4c:	xor    eax,eax
   14002ce4e:	add    rsp,0x30
   14002ce52:	pop    rbx
   14002ce53:	ret    
   14002ce54:	int3   
   14002ce55:	int3   
   14002ce56:	int3   
   14002ce57:	int3   
   14002ce58:	int3   
   14002ce59:	int3   
   14002ce5a:	int3   
   14002ce5b:	int3   
   14002ce5c:	mov    rax,rsp
   14002ce5f:	mov    QWORD PTR [rax+0x20],r9
   14002ce63:	mov    QWORD PTR [rax+0x8],rcx
   14002ce67:	push   rdi
   14002ce68:	push   r14
   14002ce6a:	push   r15
   14002ce6c:	sub    rsp,0x30
   14002ce70:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   14002ce78:	mov    QWORD PTR [rax+0x10],rbx
   14002ce7c:	mov    QWORD PTR [rax+0x18],rsi
   14002ce80:	mov    rdi,r8
   14002ce83:	mov    r15,rdx
   14002ce86:	mov    r14,rcx
   14002ce89:	mov    rdx,r8
   14002ce8c:	call   0x14002c9e0
   14002ce91:	mov    rsi,rax
   14002ce94:	mov    rbx,QWORD PTR [r14]
   14002ce97:	add    rsi,rsi
   14002ce9a:	mov    rax,QWORD PTR [r14+0x10]
   14002ce9e:	cmp    rbx,QWORD PTR [rax+rsi*8]
   14002cea2:	je     0x14002cf02
   14002cea4:	mov    rbx,QWORD PTR [rax+rsi*8+0x8]
   14002cea9:	mov    rbx,QWORD PTR [rbx]
   14002ceac:	jmp    0x14002cec7
   14002ceae:	mov    rbx,QWORD PTR [rbx+0x8]
   14002ceb2:	mov    rdx,QWORD PTR [rbx+0x10]
   14002ceb6:	mov    rcx,QWORD PTR [rdi]
   14002ceb9:	call   QWORD PTR [rip+0x5739]        # 0x1400325f8
   14002cebf:	test   eax,eax
   14002cec1:	jns    0x14002cecf
   14002cec3:	mov    rax,QWORD PTR [r14+0x10]
   14002cec7:	cmp    rbx,QWORD PTR [rax+rsi*8]
   14002cecb:	jne    0x14002ceae
   14002cecd:	jmp    0x14002cf02
   14002cecf:	mov    rdx,QWORD PTR [rdi]
   14002ced2:	mov    rcx,QWORD PTR [rbx+0x10]
   14002ced6:	call   QWORD PTR [rip+0x571c]        # 0x1400325f8
   14002cedc:	test   eax,eax
   14002cede:	jns    0x14002cee5
   14002cee0:	mov    rbx,QWORD PTR [rbx]
   14002cee3:	jmp    0x14002cf02
   14002cee5:	mov    rdx,QWORD PTR [rsp+0x68]
   14002ceea:	mov    rcx,r14
   14002ceed:	call   0x14002cfb8
   14002cef2:	mov    QWORD PTR [r15],rbx
   14002cef5:	mov    BYTE PTR [r15+0x8],0x0
   14002cefa:	mov    rax,r15
   14002cefd:	jmp    0x14002cf9a
   14002cf02:	mov    rdi,QWORD PTR [rsp+0x68]
   14002cf07:	mov    rax,QWORD PTR [rdi]
   14002cf0a:	cmp    rbx,rax
   14002cf0d:	je     0x14002cf3c
   14002cf0f:	mov    rcx,QWORD PTR [rdi+0x8]
   14002cf13:	mov    QWORD PTR [rcx],rax
   14002cf16:	mov    rcx,QWORD PTR [rax+0x8]
   14002cf1a:	mov    QWORD PTR [rcx],rbx
   14002cf1d:	mov    rcx,QWORD PTR [rbx+0x8]
   14002cf21:	mov    QWORD PTR [rcx],rdi
   14002cf24:	mov    rdx,QWORD PTR [rbx+0x8]
   14002cf28:	mov    rcx,QWORD PTR [rax+0x8]
   14002cf2c:	mov    QWORD PTR [rbx+0x8],rcx
   14002cf30:	mov    rcx,QWORD PTR [rdi+0x8]
   14002cf34:	mov    QWORD PTR [rax+0x8],rcx
   14002cf38:	mov    QWORD PTR [rdi+0x8],rdx
   14002cf3c:	mov    rdx,QWORD PTR [r14+0x10]
   14002cf40:	mov    rax,QWORD PTR [rdx+rsi*8]
   14002cf44:	cmp    rax,QWORD PTR [r14]
   14002cf47:	jne    0x14002cf58
   14002cf49:	mov    QWORD PTR [rdx+rsi*8],rdi
   14002cf4d:	mov    rax,QWORD PTR [r14+0x10]
   14002cf51:	mov    QWORD PTR [rax+rsi*8+0x8],rdi
   14002cf56:	jmp    0x14002cf87
   14002cf58:	cmp    rax,rbx
   14002cf5b:	jne    0x14002cf63
   14002cf5d:	mov    QWORD PTR [rdx+rsi*8],rdi
   14002cf61:	jmp    0x14002cf87
   14002cf63:	mov    rax,QWORD PTR [rdx+rsi*8+0x8]
   14002cf68:	mov    rcx,QWORD PTR [rax]
   14002cf6b:	mov    QWORD PTR [rdx+rsi*8+0x8],rcx
   14002cf70:	cmp    rcx,rdi
   14002cf73:	je     0x14002cf87
   14002cf75:	mov    rdx,QWORD PTR [r14+0x10]
   14002cf79:	mov    rax,QWORD PTR [rdx+rsi*8+0x8]
   14002cf7e:	mov    rcx,QWORD PTR [rax+0x8]
   14002cf82:	mov    QWORD PTR [rdx+rsi*8+0x8],rcx
   14002cf87:	mov    rcx,r14
   14002cf8a:	call   0x14002ccfc
   14002cf8f:	mov    QWORD PTR [r15],rdi
   14002cf92:	mov    BYTE PTR [r15+0x8],0x1
   14002cf97:	mov    rax,r15
   14002cf9a:	mov    rbx,QWORD PTR [rsp+0x58]
   14002cf9f:	mov    rsi,QWORD PTR [rsp+0x60]
   14002cfa4:	add    rsp,0x30
   14002cfa8:	pop    r15
   14002cfaa:	pop    r14
   14002cfac:	pop    rdi
   14002cfad:	ret    
   14002cfae:	int3   
   14002cfaf:	int3   
   14002cfb0:	int3   
   14002cfb1:	int3   
   14002cfb2:	int3   
   14002cfb3:	int3   
   14002cfb4:	int3   
   14002cfb5:	int3   
   14002cfb6:	int3   
   14002cfb7:	int3   
   14002cfb8:	mov    QWORD PTR [rsp+0x8],rbx
   14002cfbd:	mov    QWORD PTR [rsp+0x10],rbp
   14002cfc2:	mov    QWORD PTR [rsp+0x18],rsi
   14002cfc7:	push   rdi
   14002cfc8:	sub    rsp,0x20
   14002cfcc:	mov    rsi,rdx
   14002cfcf:	mov    rbp,rcx
   14002cfd2:	cmp    rdx,QWORD PTR [rcx]
   14002cfd5:	je     0x14002d03e
   14002cfd7:	mov    rdx,QWORD PTR [rdx+0x8]
   14002cfdb:	mov    rax,QWORD PTR [rsi]
   14002cfde:	mov    QWORD PTR [rdx],rax
   14002cfe1:	mov    rdx,QWORD PTR [rsi]
   14002cfe4:	mov    rax,QWORD PTR [rsi+0x8]
   14002cfe8:	mov    QWORD PTR [rdx+0x8],rax
   14002cfec:	mov    rdi,QWORD PTR [rsi+0x18]
   14002cff0:	test   rdi,rdi
   14002cff3:	je     0x14002d031
   14002cff5:	mov    eax,DWORD PTR [rdi+0x8]
   14002cff8:	cmp    eax,0x1
   14002cffb:	jne    0x14002d006
   14002cffd:	mov    DWORD PTR [rdi+0x8],0x0
   14002d004:	jmp    0x14002d013
   14002d006:	or     eax,0xffffffff
   14002d009:	lock xadd DWORD PTR [rdi+0x8],eax
   14002d00e:	sub    eax,0x1
   14002d011:	jg     0x14002d031
   14002d013:	test   rdi,rdi
   14002d016:	je     0x14002d031
   14002d018:	mov    rax,QWORD PTR [rdi]
   14002d01b:	mov    rbx,QWORD PTR [rax]
   14002d01e:	mov    rcx,rbx
   14002d021:	call   QWORD PTR [rip+0x5681]        # 0x1400326a8
   14002d027:	mov    edx,0x1
   14002d02c:	mov    rcx,rdi
   14002d02f:	call   rbx
   14002d031:	mov    rcx,rsi
   14002d034:	call   QWORD PTR [rip+0x558e]        # 0x1400325c8
   14002d03a:	dec    QWORD PTR [rbp+0x8]
   14002d03e:	mov    rbx,QWORD PTR [rsp+0x30]
   14002d043:	mov    rbp,QWORD PTR [rsp+0x38]
   14002d048:	mov    rsi,QWORD PTR [rsp+0x40]
   14002d04d:	add    rsp,0x20
   14002d051:	pop    rdi
   14002d052:	ret    
   14002d053:	int3   
   14002d054:	int3   
   14002d055:	int3   
   14002d056:	int3   
   14002d057:	int3   
   14002d058:	int3   
   14002d059:	int3   
   14002d05a:	int3   
   14002d05b:	int3   
   14002d05c:	mov    QWORD PTR [rsp+0x18],rbx
   14002d061:	push   rbp
   14002d062:	push   rsi
   14002d063:	push   rdi
   14002d064:	sub    rsp,0x20
   14002d068:	mov    rax,QWORD PTR [rcx]
   14002d06b:	mov    rdi,rcx
   14002d06e:	and    QWORD PTR [rsp+0x40],0x0
   14002d074:	mov    rbp,r8
   14002d077:	and    QWORD PTR [rsp+0x48],0x0
   14002d07d:	mov    rsi,rdx
   14002d080:	mov    rbx,QWORD PTR [rax+0x38]
   14002d084:	mov    rcx,rbx
   14002d087:	call   QWORD PTR [rip+0x561b]        # 0x1400326a8
   14002d08d:	lea    r8,[rsp+0x48]
   14002d092:	mov    rcx,rdi
   14002d095:	lea    rdx,[rsp+0x40]
   14002d09a:	call   rbx
   14002d09c:	mov    r8,QWORD PTR [rsp+0x40]
   14002d0a1:	cmp    QWORD PTR [rsi],r8
   14002d0a4:	jb     0x14002d0bc
   14002d0a6:	mov    rdx,QWORD PTR [rsp+0x48]
   14002d0ab:	mov    rcx,rbp
   14002d0ae:	call   QWORD PTR [rip+0x53ec]        # 0x1400324a0
   14002d0b4:	mov    rax,QWORD PTR [rsp+0x40]
   14002d0b9:	mov    QWORD PTR [rsi],rax
   14002d0bc:	mov    rbx,QWORD PTR [rsp+0x50]
   14002d0c1:	add    rsp,0x20
   14002d0c5:	pop    rdi
   14002d0c6:	pop    rsi
   14002d0c7:	pop    rbp
   14002d0c8:	ret    
   14002d0c9:	int3   
   14002d0ca:	int3   
   14002d0cb:	int3   
   14002d0cc:	int3   
   14002d0cd:	int3   
   14002d0ce:	int3   
   14002d0cf:	int3   
   14002d0d0:	mov    rax,rsp
   14002d0d3:	mov    QWORD PTR [rax+0x10],rbx
   14002d0d7:	push   rdi
   14002d0d8:	sub    rsp,0x30
   14002d0dc:	and    QWORD PTR [rcx],0x0
   14002d0e0:	mov    r9,r8
   14002d0e3:	and    QWORD PTR [rax+0x8],0x0
   14002d0e8:	mov    r8,rdx
   14002d0eb:	and    QWORD PTR [rax+0x20],0x0
   14002d0f0:	lea    rdx,[rax+0x8]
   14002d0f4:	mov    rdi,rcx
   14002d0f7:	lea    rcx,[rax+0x20]
   14002d0fb:	call   0x14002d160
   14002d100:	mov    ebx,eax
   14002d102:	test   eax,eax
   14002d104:	jns    0x14002d10d
   14002d106:	mov    rcx,QWORD PTR [rsp+0x40]
   14002d10b:	jmp    0x14002d119
   14002d10d:	mov    rax,QWORD PTR [rsp+0x40]
   14002d112:	xor    ecx,ecx
   14002d114:	mov    QWORD PTR [rdi],rax
   14002d117:	xor    ebx,ebx
   14002d119:	test   rcx,rcx
   14002d11c:	je     0x14002d124
   14002d11e:	call   QWORD PTR [rip+0x54a4]        # 0x1400325c8
   14002d124:	mov    eax,ebx
   14002d126:	mov    rbx,QWORD PTR [rsp+0x48]
   14002d12b:	add    rsp,0x30
   14002d12f:	pop    rdi
   14002d130:	ret    
   14002d131:	int3   
   14002d132:	int3   
   14002d133:	int3   
   14002d134:	int3   
   14002d135:	int3   
   14002d136:	int3   
   14002d137:	int3   
   14002d138:	mov    rax,rsp
   14002d13b:	mov    QWORD PTR [rax+0x10],rdx
   14002d13f:	mov    QWORD PTR [rax+0x18],r8
   14002d143:	mov    QWORD PTR [rax+0x20],r9
   14002d147:	sub    rsp,0x28
   14002d14b:	lea    r8,[rax+0x18]
   14002d14f:	call   0x14002d0d0
   14002d154:	add    rsp,0x28
   14002d158:	ret    
   14002d159:	int3   
   14002d15a:	int3   
   14002d15b:	int3   
   14002d15c:	int3   
   14002d15d:	int3   
   14002d15e:	int3   
   14002d15f:	int3   
   14002d160:	rex push rbx
   14002d162:	push   rbp
   14002d163:	push   rsi
   14002d164:	push   rdi
   14002d165:	push   r12
   14002d167:	push   r13
   14002d169:	push   r14
   14002d16b:	push   r15
   14002d16d:	sub    rsp,0x268
   14002d174:	mov    rax,QWORD PTR [rip+0x1dea5]        # 0x14004b020
   14002d17b:	xor    rax,rsp
   14002d17e:	mov    QWORD PTR [rsp+0x250],rax
   14002d186:	mov    rdi,QWORD PTR [rdx]
   14002d189:	xor    esi,esi
   14002d18b:	mov    r14,QWORD PTR [rcx]
   14002d18e:	mov    rbp,r9
   14002d191:	mov    QWORD PTR [rsp+0x38],r9
   14002d196:	mov    r13,r8
   14002d199:	mov    QWORD PTR [rsp+0x30],rsi
   14002d19e:	mov    r12,rdx
   14002d1a1:	mov    r15,rcx
   14002d1a4:	test   rdi,rdi
   14002d1a7:	jne    0x14002d258
   14002d1ad:	mov    r14d,0x104
   14002d1b3:	call   QWORD PTR [rip+0x524f]        # 0x140032408
   14002d1b9:	mov    rbx,QWORD PTR [rax+0xc8]
   14002d1c0:	mov    rcx,rbx
   14002d1c3:	call   QWORD PTR [rip+0x54df]        # 0x1400326a8
   14002d1c9:	mov    r9,r13
   14002d1cc:	mov    QWORD PTR [rsp+0x20],rbp
   14002d1d1:	lea    r8,[rsp+0x30]
   14002d1d6:	mov    ecx,r14d
   14002d1d9:	lea    rdx,[rsp+0x40]
   14002d1de:	call   rbx
   14002d1e0:	test   eax,eax
   14002d1e2:	js     0x14002d28e
   14002d1e8:	or     rbp,0xffffffffffffffff
   14002d1ec:	lea    rax,[rsp+0x40]
   14002d1f1:	mov    rbx,rbp
   14002d1f4:	inc    rbx
   14002d1f7:	cmp    WORD PTR [rax+rbx*2],si
   14002d1fb:	jne    0x14002d1f4
   14002d1fd:	mov    rcx,QWORD PTR [r12]
   14002d201:	inc    rbx
   14002d204:	call   QWORD PTR [rip+0x53be]        # 0x1400325c8
   14002d20a:	mov    eax,0x2
   14002d20f:	mul    rbx
   14002d212:	cmovo  rax,rbp
   14002d216:	mov    rcx,rax
   14002d219:	call   QWORD PTR [rip+0x53b1]        # 0x1400325d0
   14002d21f:	mov    QWORD PTR [r12],rax
   14002d223:	test   rax,rax
   14002d226:	je     0x14002d326
   14002d22c:	lea    r8,[rbx+rbx*1]
   14002d230:	mov    rcx,rax
   14002d233:	lea    rdx,[rsp+0x40]
   14002d238:	call   0x14002e2f2
   14002d23d:	lea    rax,[rsp+0x40]
   14002d242:	inc    rbp
   14002d245:	cmp    WORD PTR [rax+rbp*2],si
   14002d249:	jne    0x14002d242
   14002d24b:	inc    rbp
   14002d24e:	mov    QWORD PTR [r15],rbp
   14002d251:	xor    eax,eax
   14002d253:	jmp    0x14002d332
   14002d258:	call   QWORD PTR [rip+0x51aa]        # 0x140032408
   14002d25e:	mov    rbx,QWORD PTR [rax+0xc8]
   14002d265:	mov    rcx,rbx
   14002d268:	call   QWORD PTR [rip+0x543a]        # 0x1400326a8
   14002d26e:	mov    r9,r13
   14002d271:	mov    QWORD PTR [rsp+0x20],rbp
   14002d276:	lea    r8,[rsp+0x30]
   14002d27b:	mov    rdx,rdi
   14002d27e:	mov    rcx,r14
   14002d281:	call   rbx
   14002d283:	cmp    eax,0x8007007a
   14002d288:	jne    0x14002d332
   14002d28e:	or     rbp,0xffffffffffffffff
   14002d292:	cmp    r14,QWORD PTR [rsp+0x30]
   14002d297:	jae    0x14002d2a0
   14002d299:	mov    r14,QWORD PTR [rsp+0x30]
   14002d29e:	jmp    0x14002d2a7
   14002d2a0:	lea    r14,[r14+r14*2]
   14002d2a4:	shr    r14,1
   14002d2a7:	cmp    r14,0x7fffffff
   14002d2ae:	ja     0x14002d32d
   14002d2b0:	mov    rcx,QWORD PTR [r12]
   14002d2b4:	call   QWORD PTR [rip+0x530e]        # 0x1400325c8
   14002d2ba:	mov    eax,0x2
   14002d2bf:	mul    r14
   14002d2c2:	cmovo  rax,rbp
   14002d2c6:	mov    rcx,rax
   14002d2c9:	call   QWORD PTR [rip+0x5301]        # 0x1400325d0
   14002d2cf:	mov    QWORD PTR [r12],rax
   14002d2d3:	test   rax,rax
   14002d2d6:	je     0x14002d323
   14002d2d8:	mov    QWORD PTR [r15],r14
   14002d2db:	mov    rdi,QWORD PTR [r12]
   14002d2df:	call   QWORD PTR [rip+0x5123]        # 0x140032408
   14002d2e5:	mov    rbx,QWORD PTR [rax+0xc8]
   14002d2ec:	mov    rcx,rbx
   14002d2ef:	call   QWORD PTR [rip+0x53b3]        # 0x1400326a8
   14002d2f5:	mov    rax,QWORD PTR [rsp+0x38]
   14002d2fa:	lea    r8,[rsp+0x30]
   14002d2ff:	mov    r9,r13
   14002d302:	mov    QWORD PTR [rsp+0x20],rax
   14002d307:	mov    rdx,rdi
   14002d30a:	mov    rcx,r14
   14002d30d:	call   rbx
   14002d30f:	cmp    eax,0x8007007a
   14002d314:	je     0x14002d292
   14002d31a:	test   eax,eax
   14002d31c:	cmovs  esi,eax
   14002d31f:	mov    eax,esi
   14002d321:	jmp    0x14002d332
   14002d323:	mov    QWORD PTR [r15],rsi
   14002d326:	mov    eax,0x8007000e
   14002d32b:	jmp    0x14002d332
   14002d32d:	mov    eax,0x8007007a
   14002d332:	mov    rcx,QWORD PTR [rsp+0x250]
   14002d33a:	xor    rcx,rsp
   14002d33d:	call   0x14002dd00
   14002d342:	add    rsp,0x268
   14002d349:	pop    r15
   14002d34b:	pop    r14
   14002d34d:	pop    r13
   14002d34f:	pop    r12
   14002d351:	pop    rdi
   14002d352:	pop    rsi
   14002d353:	pop    rbp
   14002d354:	pop    rbx
   14002d355:	ret    
   14002d356:	int3   
   14002d357:	int3   
   14002d358:	int3   
   14002d359:	int3   
   14002d35a:	int3   
   14002d35b:	int3   
   14002d35c:	mov    QWORD PTR [rsp+0x8],rbx
   14002d361:	push   rdi
   14002d362:	sub    rsp,0x20
   14002d366:	mov    rdi,rcx
   14002d369:	call   QWORD PTR [rip+0x5099]        # 0x140032408
   14002d36f:	mov    rbx,QWORD PTR [rax+0xa8]
   14002d376:	mov    rcx,rbx
   14002d379:	call   QWORD PTR [rip+0x5329]        # 0x1400326a8
   14002d37f:	call   rbx
   14002d381:	mov    rcx,rax
   14002d384:	mov    rbx,rax
   14002d387:	call   QWORD PTR [rip+0x531b]        # 0x1400326a8
   14002d38d:	mov    rcx,rdi
   14002d390:	mov    rax,rbx
   14002d393:	mov    rbx,QWORD PTR [rsp+0x30]
   14002d398:	add    rsp,0x20
   14002d39c:	pop    rdi
   14002d39d:	rex.W jmp rax
   14002d3a0:	int3   
   14002d3a1:	int3   
   14002d3a2:	int3   
   14002d3a3:	int3   
   14002d3a4:	int3   
   14002d3a5:	int3   
   14002d3a6:	int3   
   14002d3a7:	int3   
   14002d3a8:	mov    QWORD PTR [rsp+0x8],rbx
   14002d3ad:	mov    QWORD PTR [rsp+0x10],rbp
   14002d3b2:	mov    QWORD PTR [rsp+0x18],rsi
   14002d3b7:	push   rdi
   14002d3b8:	sub    rsp,0x20
   14002d3bc:	mov    rdi,r8
   14002d3bf:	mov    rsi,rdx
   14002d3c2:	mov    ebp,ecx
   14002d3c4:	call   QWORD PTR [rip+0x503e]        # 0x140032408
   14002d3ca:	mov    rbx,QWORD PTR [rax+0xf8]
   14002d3d1:	mov    rcx,rbx
   14002d3d4:	call   QWORD PTR [rip+0x52ce]        # 0x1400326a8
   14002d3da:	mov    r8,rdi
   14002d3dd:	mov    rdx,rsi
   14002d3e0:	mov    ecx,ebp
   14002d3e2:	call   rbx
   14002d3e4:	mov    rbx,QWORD PTR [rsp+0x30]
   14002d3e9:	test   eax,eax
   14002d3eb:	mov    rbp,QWORD PTR [rsp+0x38]
   14002d3f0:	mov    rsi,QWORD PTR [rsp+0x40]
   14002d3f5:	setne  al
   14002d3f8:	add    rsp,0x20
   14002d3fc:	pop    rdi
   14002d3fd:	ret    
   14002d3fe:	int3   
   14002d3ff:	int3   
   14002d400:	int3   
   14002d401:	int3   
   14002d402:	int3   
   14002d403:	int3   
   14002d404:	mov    rax,rsp
   14002d407:	mov    QWORD PTR [rax+0x8],rbx
   14002d40b:	mov    QWORD PTR [rax+0x10],rbp
   14002d40f:	mov    QWORD PTR [rax+0x18],rsi
   14002d413:	mov    QWORD PTR [rax+0x20],rdi
   14002d417:	push   r14
   14002d419:	sub    rsp,0x20
   14002d41d:	mov    rdi,r9
   14002d420:	mov    rsi,r8
   14002d423:	mov    rbp,rdx
   14002d426:	mov    r14d,ecx
   14002d429:	call   QWORD PTR [rip+0x4fd9]        # 0x140032408
   14002d42f:	mov    rbx,QWORD PTR [rax+0x100]
   14002d436:	mov    rcx,rbx
   14002d439:	call   QWORD PTR [rip+0x5269]        # 0x1400326a8
   14002d43f:	mov    r9,rdi
   14002d442:	mov    r8,rsi
   14002d445:	mov    rdx,rbp
   14002d448:	mov    ecx,r14d
   14002d44b:	mov    rax,rbx
   14002d44e:	mov    rbx,QWORD PTR [rsp+0x30]
   14002d453:	mov    rbp,QWORD PTR [rsp+0x38]
   14002d458:	mov    rsi,QWORD PTR [rsp+0x40]
   14002d45d:	mov    rdi,QWORD PTR [rsp+0x48]
   14002d462:	add    rsp,0x20
   14002d466:	pop    r14
   14002d468:	rex.W jmp rax
   14002d46b:	int3   
   14002d46c:	int3   
   14002d46d:	int3   
   14002d46e:	int3   
   14002d46f:	int3   
   14002d470:	int3   
   14002d471:	int3   
   14002d472:	int3   
   14002d473:	int3   
   14002d474:	mov    QWORD PTR [rsp+0x8],rbx
   14002d479:	mov    QWORD PTR [rsp+0x10],rsi
   14002d47e:	push   rdi
   14002d47f:	sub    rsp,0x30
   14002d483:	mov    rdi,rdx
   14002d486:	mov    rsi,rcx
   14002d489:	call   QWORD PTR [rip+0x4f79]        # 0x140032408
   14002d48f:	mov    rbx,QWORD PTR [rax+0x140]
   14002d496:	mov    rcx,rbx
   14002d499:	call   QWORD PTR [rip+0x5209]        # 0x1400326a8
   14002d49f:	and    QWORD PTR [rsp+0x28],0x0
   14002d4a5:	xor    r9d,r9d
   14002d4a8:	and    QWORD PTR [rsp+0x20],0x0
   14002d4ae:	mov    rdx,rdi
   14002d4b1:	mov    rcx,rsi
   14002d4b4:	lea    r8d,[r9+0x4]
   14002d4b8:	call   rbx
   14002d4ba:	mov    rbx,QWORD PTR [rsp+0x40]
   14002d4bf:	mov    rsi,QWORD PTR [rsp+0x48]
   14002d4c4:	add    rsp,0x30
   14002d4c8:	pop    rdi
   14002d4c9:	ret    
   14002d4ca:	int3   
   14002d4cb:	int3   
   14002d4cc:	int3   
   14002d4cd:	int3   
   14002d4ce:	int3   
   14002d4cf:	int3   
   14002d4d0:	mov    QWORD PTR [rsp+0x8],rbx
   14002d4d5:	mov    QWORD PTR [rsp+0x10],rbp
   14002d4da:	mov    QWORD PTR [rsp+0x18],rsi
   14002d4df:	push   rdi
   14002d4e0:	sub    rsp,0x20
   14002d4e4:	xor    esi,esi
   14002d4e6:	cmp    BYTE PTR [rip+0x22d5b],sil        # 0x140050248
   14002d4ed:	je     0x14002d4f9
   14002d4ef:	mov    eax,0x80070057
   14002d4f4:	jmp    0x14002d5c9
   14002d4f9:	mov    eax,DWORD PTR [rip+0x22e35]        # 0x140050334
   14002d4ff:	lea    rbp,[rip+0x22e1a]        # 0x140050320
   14002d506:	test   al,0x1
   14002d508:	jne    0x14002d526
   14002d50a:	or     eax,0x1
   14002d50d:	mov    QWORD PTR [rip+0x22e14],rbp        # 0x140050328
   14002d514:	mov    DWORD PTR [rip+0x22e1a],eax        # 0x140050334
   14002d51a:	mov    rdi,rbp
   14002d51d:	mov    QWORD PTR [rip+0x22dfc],rbp        # 0x140050320
   14002d524:	jmp    0x14002d52d
   14002d526:	mov    rdi,QWORD PTR [rip+0x22df3]        # 0x140050320
   14002d52d:	cmp    rdi,rbp
   14002d530:	jne    0x14002d53c
   14002d532:	mov    eax,0x1
   14002d537:	jmp    0x14002d5c9
   14002d53c:	mov    BYTE PTR [rip+0x22d05],0x1        # 0x140050248
   14002d543:	cmp    rbp,rdi
   14002d546:	je     0x14002d572
   14002d548:	test   rdi,rdi
   14002d54b:	je     0x14002d572
   14002d54d:	mov    rcx,QWORD PTR [rdi+0x10]
   14002d551:	call   0x14002d35c
   14002d556:	mov    rcx,rax
   14002d559:	mov    rbx,rax
   14002d55c:	call   QWORD PTR [rip+0x5146]        # 0x1400326a8
   14002d562:	mov    rcx,rdi
   14002d565:	call   rbx
   14002d567:	mov    esi,eax
   14002d569:	test   eax,eax
   14002d56b:	js     0x14002d57a
   14002d56d:	mov    rdi,QWORD PTR [rdi]
   14002d570:	jmp    0x14002d543
   14002d572:	test   esi,esi
   14002d574:	js     0x14002d57a
   14002d576:	xor    eax,eax
   14002d578:	jmp    0x14002d5c9
   14002d57a:	mov    rdi,QWORD PTR [rdi+0x8]
   14002d57e:	cmp    rbp,rdi
   14002d581:	je     0x14002d5a4
   14002d583:	test   rdi,rdi
   14002d586:	je     0x14002d5a4
   14002d588:	mov    rcx,QWORD PTR [rdi+0x18]
   14002d58c:	call   0x14002d35c
   14002d591:	mov    rcx,rax
   14002d594:	mov    rbx,rax
   14002d597:	call   QWORD PTR [rip+0x510b]        # 0x1400326a8
   14002d59d:	mov    rcx,rdi
   14002d5a0:	call   rbx
   14002d5a2:	jmp    0x14002d57a
   14002d5a4:	mov    rax,QWORD PTR [rip+0x22d75]        # 0x140050320
   14002d5ab:	cmp    rax,rbp
   14002d5ae:	je     0x14002d5c0
   14002d5b0:	mov    rax,QWORD PTR [rax]
   14002d5b3:	mov    QWORD PTR [rip+0x22d66],rax        # 0x140050320
   14002d5ba:	mov    QWORD PTR [rax+0x8],rbp
   14002d5be:	jmp    0x14002d5a4
   14002d5c0:	mov    BYTE PTR [rip+0x22c81],0x0        # 0x140050248
   14002d5c7:	mov    eax,esi
   14002d5c9:	mov    rbx,QWORD PTR [rsp+0x30]
   14002d5ce:	mov    rbp,QWORD PTR [rsp+0x38]
   14002d5d3:	mov    rsi,QWORD PTR [rsp+0x40]
   14002d5d8:	add    rsp,0x20
   14002d5dc:	pop    rdi
   14002d5dd:	ret    
   14002d5de:	int3   
   14002d5df:	int3   
   14002d5e0:	int3   
   14002d5e1:	int3   
   14002d5e2:	int3   
   14002d5e3:	int3   
   14002d5e4:	int3   
   14002d5e5:	int3   
   14002d5e6:	int3   
   14002d5e7:	int3   
   14002d5e8:	int3   
   14002d5e9:	int3   
   14002d5ea:	int3   
   14002d5eb:	int3   
   14002d5ec:	int3   
   14002d5ed:	int3   
   14002d5ee:	int3   
   14002d5ef:	int3   
   14002d5f0:	mov    QWORD PTR [rsp+0x8],rbx
   14002d5f5:	mov    QWORD PTR [rsp+0x10],rsi
   14002d5fa:	push   rdi
   14002d5fb:	sub    rsp,0x20
   14002d5ff:	cmp    BYTE PTR [rip+0x22c42],0x0        # 0x140050248
   14002d606:	je     0x14002d672
   14002d608:	mov    eax,DWORD PTR [rip+0x22d26]        # 0x140050334
   14002d60e:	lea    rsi,[rip+0x22d0b]        # 0x140050320
   14002d615:	test   al,0x1
   14002d617:	jne    0x14002d635
   14002d619:	or     eax,0x1
   14002d61c:	mov    QWORD PTR [rip+0x22d05],rsi        # 0x140050328
   14002d623:	mov    DWORD PTR [rip+0x22d0b],eax        # 0x140050334
   14002d629:	mov    rdi,rsi
   14002d62c:	mov    QWORD PTR [rip+0x22ced],rsi        # 0x140050320
   14002d633:	jmp    0x14002d63c
   14002d635:	mov    rdi,QWORD PTR [rip+0x22ce4]        # 0x140050320
   14002d63c:	cmp    rdi,rsi
   14002d63f:	je     0x14002d66b
   14002d641:	mov    rax,QWORD PTR [rdi]
   14002d644:	mov    QWORD PTR [rip+0x22cd5],rax        # 0x140050320
   14002d64b:	mov    QWORD PTR [rax+0x8],rsi
   14002d64f:	mov    rcx,QWORD PTR [rdi+0x18]
   14002d653:	call   0x14002d35c
   14002d658:	mov    rcx,rax
   14002d65b:	mov    rbx,rax
   14002d65e:	call   QWORD PTR [rip+0x5044]        # 0x1400326a8
   14002d664:	mov    rcx,rdi
   14002d667:	call   rbx
   14002d669:	jmp    0x14002d635
   14002d66b:	mov    BYTE PTR [rip+0x22bd6],0x0        # 0x140050248
   14002d672:	mov    rbx,QWORD PTR [rsp+0x30]
   14002d677:	mov    rsi,QWORD PTR [rsp+0x38]
   14002d67c:	add    rsp,0x20
   14002d680:	pop    rdi
   14002d681:	ret    
   14002d682:	int3   
   14002d683:	int3   
   14002d684:	int3   
   14002d685:	int3   
   14002d686:	int3   
   14002d687:	int3   
   14002d688:	sub    rsp,0x28
   14002d68c:	cmp    BYTE PTR [rip+0x22c9d],0x0        # 0x140050330
   14002d693:	je     0x14002d699
   14002d695:	xor    eax,eax
   14002d697:	jmp    0x14002d6ca
   14002d699:	call   0x14002d4d0
   14002d69e:	test   eax,eax
   14002d6a0:	js     0x14002d6ca
   14002d6a2:	cmp    eax,0x1
   14002d6a5:	jne    0x14002d6b0
   14002d6a7:	mov    BYTE PTR [rip+0x22c82],0x1        # 0x140050330
   14002d6ae:	jmp    0x14002d695
   14002d6b0:	lea    rcx,[rip+0xffffffffffffff39]        # 0x14002d5f0
   14002d6b7:	call   0x14002de94
   14002d6bc:	test   eax,eax
   14002d6be:	je     0x14002d6a7
   14002d6c0:	call   0x14002d5f0
   14002d6c5:	mov    eax,0x80004005
   14002d6ca:	add    rsp,0x28
   14002d6ce:	ret    
   14002d6cf:	int3   
   14002d6d0:	int3   
   14002d6d1:	int3   
   14002d6d2:	int3   
   14002d6d3:	int3   
   14002d6d4:	int3   
   14002d6d5:	int3   
   14002d6d6:	int3   
   14002d6d7:	int3   
   14002d6d8:	int3   
   14002d6d9:	int3   
   14002d6da:	int3   
   14002d6db:	int3   
   14002d6dc:	int3   
   14002d6dd:	int3   
   14002d6de:	int3   
   14002d6df:	int3   
   14002d6e0:	jmp    QWORD PTR [rip+0x4a82]        # 0x140032168
   14002d6e6:	int3   
   14002d6e7:	int3   
   14002d6e8:	int3   
   14002d6e9:	int3   
   14002d6ea:	int3   
   14002d6eb:	int3   
   14002d6ec:	cmp    QWORD PTR [rip+0x5d44],0x0        # 0x140033438
   14002d6f4:	lea    rax,[rip+0x5d35]        # 0x140033430
   14002d6fb:	je     0x14002d70c
   14002d6fd:	cmp    DWORD PTR [rax],ecx
   14002d6ff:	je     0x14002d70f
   14002d701:	add    rax,0x10
   14002d705:	cmp    QWORD PTR [rax+0x8],0x0
   14002d70a:	jne    0x14002d6fd
   14002d70c:	xor    eax,eax
   14002d70e:	ret    
   14002d70f:	mov    rax,QWORD PTR [rax+0x8]
   14002d713:	ret    
   14002d714:	int3   
   14002d715:	int3   
   14002d716:	int3   
   14002d717:	int3   
   14002d718:	int3   
   14002d719:	int3   
   14002d71a:	int3   
   14002d71b:	int3   
   14002d71c:	cmp    QWORD PTR [rip+0x5424],0x0        # 0x140032b48
   14002d724:	lea    rax,[rip+0x5415]        # 0x140032b40
   14002d72b:	je     0x14002d73c
   14002d72d:	cmp    DWORD PTR [rax],ecx
   14002d72f:	je     0x14002d73f
   14002d731:	add    rax,0x10
   14002d735:	cmp    QWORD PTR [rax+0x8],0x0
   14002d73a:	jne    0x14002d72d
   14002d73c:	xor    eax,eax
   14002d73e:	ret    
   14002d73f:	mov    rax,QWORD PTR [rax+0x8]
   14002d743:	ret    
   14002d744:	int3   
   14002d745:	int3   
   14002d746:	int3   
   14002d747:	int3   
   14002d748:	int3   
   14002d749:	int3   
   14002d74a:	int3   
   14002d74b:	int3   
   14002d74c:	rex push rbx
   14002d74e:	sub    rsp,0x20
   14002d752:	mov    rbx,rcx
   14002d755:	call   0x14002df28
   14002d75a:	lea    rax,[rip+0x66cf]        # 0x140033e30
   14002d761:	mov    QWORD PTR [rbx],rax
   14002d764:	mov    rax,rbx
   14002d767:	add    rsp,0x20
   14002d76b:	pop    rbx
   14002d76c:	ret    
   14002d76d:	int3   
   14002d76e:	int3   
   14002d76f:	int3   
   14002d770:	int3   
   14002d771:	int3   
   14002d772:	int3   
   14002d773:	int3   
   14002d774:	mov    QWORD PTR [rsp+0x8],rcx
   14002d779:	push   rbx
   14002d77a:	sub    rsp,0x20
   14002d77e:	mov    QWORD PTR [rsp+0x30],rdx
   14002d783:	mov    rbx,rcx
   14002d786:	lea    rdx,[rsp+0x30]
   14002d78b:	call   0x14002e2fe
   14002d790:	lea    rax,[rip+0x6699]        # 0x140033e30
   14002d797:	mov    QWORD PTR [rbx],rax
   14002d79a:	mov    rax,rbx
   14002d79d:	add    rsp,0x20
   14002d7a1:	pop    rbx
   14002d7a2:	ret    
   14002d7a3:	int3   
   14002d7a4:	int3   
   14002d7a5:	int3   
   14002d7a6:	int3   
   14002d7a7:	int3   
   14002d7a8:	int3   
   14002d7a9:	int3   
   14002d7aa:	int3   
   14002d7ab:	int3   
   14002d7ac:	jmp    0x14002df1c
   14002d7b1:	int3   
   14002d7b2:	int3   
   14002d7b3:	int3   
   14002d7b4:	int3   
   14002d7b5:	int3   
   14002d7b6:	int3   
   14002d7b7:	int3   
   14002d7b8:	int3   
   14002d7b9:	int3   
   14002d7ba:	int3   
   14002d7bb:	int3   
   14002d7bc:	int3   
   14002d7bd:	int3   
   14002d7be:	int3   
   14002d7bf:	int3   
   14002d7c0:	mov    QWORD PTR [rsp+0x8],rbx
   14002d7c5:	push   rdi
   14002d7c6:	sub    rsp,0x20
   14002d7ca:	mov    ebx,edx
   14002d7cc:	mov    rdi,rcx
   14002d7cf:	call   0x14002df1c
   14002d7d4:	test   bl,0x1
   14002d7d7:	je     0x14002d7e1
   14002d7d9:	mov    rcx,rdi
   14002d7dc:	call   0x140023f48
   14002d7e1:	mov    rax,rdi
   14002d7e4:	mov    rbx,QWORD PTR [rsp+0x30]
   14002d7e9:	add    rsp,0x20
   14002d7ed:	pop    rdi
   14002d7ee:	ret    
   14002d7ef:	int3   
   14002d7f0:	int3   
   14002d7f1:	int3   
   14002d7f2:	int3   
   14002d7f3:	int3   
   14002d7f4:	int3   
   14002d7f5:	int3   
   14002d7f6:	int3   
   14002d7f7:	int3   
   14002d7f8:	sub    rsp,0x48
   14002d7fc:	mov    rdx,rcx
   14002d7ff:	lea    rcx,[rsp+0x20]
   14002d804:	call   0x14002d774
   14002d809:	lea    rdx,[rip+0x1b868]        # 0x140049078
   14002d810:	lea    rcx,[rsp+0x20]
   14002d815:	call   0x14002e2da
   14002d81a:	int3   
   14002d81b:	int3   
   14002d81c:	int3   
   14002d81d:	int3   
   14002d81e:	int3   
   14002d81f:	int3   
   14002d820:	int3   
   14002d821:	int3   
   14002d822:	int3   
   14002d823:	int3   
   14002d824:	sub    rsp,0x48
   14002d828:	mov    rdx,rcx
   14002d82b:	lea    rcx,[rsp+0x20]
   14002d830:	call   0x14002d774
   14002d835:	lea    rdx,[rip+0x1b8a4]        # 0x1400490e0
   14002d83c:	lea    rcx,[rsp+0x20]
   14002d841:	call   0x14002e2da
   14002d846:	int3   
   14002d847:	int3   
   14002d848:	int3   
   14002d849:	int3   
   14002d84a:	int3   
   14002d84b:	int3   
   14002d84c:	int3   
   14002d84d:	int3   
   14002d84e:	int3   
   14002d84f:	int3   
   14002d850:	mov    QWORD PTR [rsp+0x8],rbx
   14002d855:	mov    QWORD PTR [rsp+0x10],rsi
   14002d85a:	push   rdi
   14002d85b:	sub    rsp,0x20
   14002d85f:	mov    rsi,rcx
   14002d862:	lock inc DWORD PTR [rip+0x1d797]        # 0x14004b000
   14002d869:	jne    0x14002d889
   14002d86b:	lea    rbx,[rip+0x220be]        # 0x14004f930
   14002d872:	mov    edi,0x4
   14002d877:	mov    rcx,rbx
   14002d87a:	call   0x14002d970
   14002d87f:	add    rbx,0x28
   14002d883:	sub    rdi,0x1
   14002d887:	jne    0x14002d877
   14002d889:	mov    rbx,QWORD PTR [rsp+0x30]
   14002d88e:	mov    rax,rsi
   14002d891:	mov    rsi,QWORD PTR [rsp+0x38]
   14002d896:	add    rsp,0x20
   14002d89a:	pop    rdi
   14002d89b:	ret    
   14002d89c:	int3   
   14002d89d:	int3   
   14002d89e:	int3   
   14002d89f:	int3   
   14002d8a0:	int3   
   14002d8a1:	int3   
   14002d8a2:	int3   
   14002d8a3:	int3   
   14002d8a4:	rex push rbx
   14002d8a6:	sub    rsp,0x20
   14002d8aa:	mov    DWORD PTR [rcx],edx
   14002d8ac:	mov    rbx,rcx
   14002d8af:	test   edx,edx
   14002d8b1:	jne    0x14002d8bd
   14002d8b3:	lea    ecx,[rdx+0xc]
   14002d8b6:	call   0x14002e30a
   14002d8bb:	jmp    0x14002d8d9
   14002d8bd:	cmp    edx,0x4
   14002d8c0:	jge    0x14002d8d9
   14002d8c2:	movsxd rax,edx
   14002d8c5:	lea    rcx,[rax+rax*4]
   14002d8c9:	lea    rax,[rip+0x22060]        # 0x14004f930
   14002d8d0:	lea    rcx,[rax+rcx*8]
   14002d8d4:	call   0x14002d984
   14002d8d9:	mov    rax,rbx
   14002d8dc:	add    rsp,0x20
   14002d8e0:	pop    rbx
   14002d8e1:	ret    
   14002d8e2:	int3   
   14002d8e3:	int3   
   14002d8e4:	int3   
   14002d8e5:	int3   
   14002d8e6:	int3   
   14002d8e7:	int3   
   14002d8e8:	mov    QWORD PTR [rsp+0x8],rbx
   14002d8ed:	push   rdi
   14002d8ee:	sub    rsp,0x20
   14002d8f2:	or     eax,0xffffffff
   14002d8f5:	lock xadd DWORD PTR [rip+0x1d703],eax        # 0x14004b000
   14002d8fd:	cmp    eax,0x1
   14002d900:	jns    0x14002d920
   14002d902:	lea    rbx,[rip+0x22027]        # 0x14004f930
   14002d909:	mov    edi,0x4
   14002d90e:	mov    rcx,rbx
   14002d911:	call   0x140003940
   14002d916:	add    rbx,0x28
   14002d91a:	sub    rdi,0x1
   14002d91e:	jne    0x14002d90e
   14002d920:	mov    rbx,QWORD PTR [rsp+0x30]
   14002d925:	add    rsp,0x20
   14002d929:	pop    rdi
   14002d92a:	ret    
   14002d92b:	int3   
   14002d92c:	int3   
   14002d92d:	int3   
   14002d92e:	int3   
   14002d92f:	int3   
   14002d930:	int3   
   14002d931:	int3   
   14002d932:	int3   
   14002d933:	int3   
   14002d934:	sub    rsp,0x28
   14002d938:	movsxd rax,DWORD PTR [rcx]
   14002d93b:	test   eax,eax
   14002d93d:	jne    0x14002d94b
   14002d93f:	lea    ecx,[rax+0xc]
   14002d942:	add    rsp,0x28
   14002d946:	jmp    0x14002e316
   14002d94b:	cmp    eax,0x4
   14002d94e:	jge    0x14002d964
   14002d950:	lea    rcx,[rax+rax*4]
   14002d954:	lea    rax,[rip+0x21fd5]        # 0x14004f930
   14002d95b:	lea    rcx,[rax+rcx*8]
   14002d95f:	call   0x14002d994
   14002d964:	add    rsp,0x28
   14002d968:	ret    
   14002d969:	int3   
   14002d96a:	int3   
   14002d96b:	int3   
   14002d96c:	int3   
   14002d96d:	int3   
   14002d96e:	int3   
   14002d96f:	int3   
   14002d970:	xor    r8d,r8d
   14002d973:	mov    edx,0xfa0
   14002d978:	jmp    0x14002d9a4
   14002d97d:	int3   
   14002d97e:	int3   
   14002d97f:	int3   
   14002d980:	int3   
   14002d981:	int3   
   14002d982:	int3   
   14002d983:	int3   
   14002d984:	rex.W jmp QWORD PTR [rip+0x477d]        # 0x140032108
   14002d98b:	int3   
   14002d98c:	int3   
   14002d98d:	int3   
   14002d98e:	int3   
   14002d98f:	int3   
   14002d990:	int3   
   14002d991:	int3   
   14002d992:	int3   
   14002d993:	int3   
   14002d994:	rex.W jmp QWORD PTR [rip+0x475d]        # 0x1400320f8
   14002d99b:	int3   
   14002d99c:	int3   
   14002d99d:	int3   
   14002d99e:	int3   
   14002d99f:	int3   
   14002d9a0:	int3   
   14002d9a1:	int3   
   14002d9a2:	int3   
   14002d9a3:	int3   
   14002d9a4:	rex.W jmp QWORD PTR [rip+0x489d]        # 0x140032248
   14002d9ab:	int3   
   14002d9ac:	int3   
   14002d9ad:	int3   
   14002d9ae:	int3   
   14002d9af:	int3   
   14002d9b0:	int3   
   14002d9b1:	int3   
   14002d9b2:	int3   
   14002d9b3:	int3   
   14002d9b4:	int3   
   14002d9b5:	int3   
   14002d9b6:	int3   
   14002d9b7:	int3   
   14002d9b8:	int3   
   14002d9b9:	int3   
   14002d9ba:	int3   
   14002d9bb:	int3   
   14002d9bc:	int3   
   14002d9bd:	int3   
   14002d9be:	int3   
   14002d9bf:	int3   
   14002d9c0:	sub    rsp,0x28
   14002d9c4:	mov    eax,0x5a4d
   14002d9c9:	cmp    WORD PTR [rip+0xfffffffffffd2630],ax        # 0x140000000
   14002d9d0:	je     0x14002d9d6
   14002d9d2:	xor    eax,eax
   14002d9d4:	jmp    0x14002da25
   14002d9d6:	movsxd rcx,DWORD PTR [rip+0xfffffffffffd265f]        # 0x14000003c
   14002d9dd:	lea    rax,[rip+0xfffffffffffd261c]        # 0x140000000
   14002d9e4:	add    rcx,rax
   14002d9e7:	cmp    DWORD PTR [rcx],0x4550
   14002d9ed:	jne    0x14002d9d2
   14002d9ef:	movzx  eax,WORD PTR [rcx+0x18]
   14002d9f3:	cmp    eax,0x10b
   14002d9f8:	je     0x14002da14
   14002d9fa:	cmp    eax,0x20b
   14002d9ff:	jne    0x14002d9d2
   14002da01:	xor    eax,eax
   14002da03:	cmp    DWORD PTR [rcx+0x84],0xe
   14002da0a:	jbe    0x14002da25
   14002da0c:	cmp    DWORD PTR [rcx+0xf8],eax
   14002da12:	jmp    0x14002da22
   14002da14:	xor    eax,eax
   14002da16:	cmp    DWORD PTR [rcx+0x74],0xe
   14002da1a:	jbe    0x14002da25
   14002da1c:	cmp    DWORD PTR [rcx+0xe8],eax
   14002da22:	setne  al
   14002da25:	mov    ecx,0x1
   14002da2a:	mov    DWORD PTR [rip+0x21fc0],eax        # 0x14004f9f0
   14002da30:	call   0x14002e3f8
   14002da35:	mov    ecx,eax
   14002da37:	call   QWORD PTR [rip+0x4b0b]        # 0x140032548
   14002da3d:	mov    rcx,QWORD PTR [rip+0x4acc]        # 0x140032510
   14002da44:	or     rax,0xffffffffffffffff
   14002da48:	mov    QWORD PTR [rip+0x228f9],rax        # 0x140050348
   14002da4f:	mov    QWORD PTR [rip+0x228fa],rax        # 0x140050350
   14002da56:	mov    eax,DWORD PTR [rip+0x22520]        # 0x14004ff7c
   14002da5c:	mov    DWORD PTR [rcx],eax
   14002da5e:	mov    rcx,QWORD PTR [rip+0x4aa3]        # 0x140032508
   14002da65:	mov    eax,DWORD PTR [rip+0x22505]        # 0x14004ff70
   14002da6b:	mov    DWORD PTR [rcx],eax
   14002da6d:	call   0x140004d20
   14002da72:	cmp    DWORD PTR [rip+0x1d59f],0x0        # 0x14004b018
   14002da79:	jne    0x14002da88
   14002da7b:	lea    rcx,[rip+0xfffffffffffd729e]        # 0x140004d20
   14002da82:	call   QWORD PTR [rip+0x4aa0]        # 0x140032528
   14002da88:	xor    eax,eax
   14002da8a:	add    rsp,0x28
   14002da8e:	ret    
   14002da8f:	int3   
   14002da90:	int3   
   14002da91:	int3   
   14002da92:	int3   
   14002da93:	int3   
   14002da94:	int3   
   14002da95:	int3   
   14002da96:	int3   
   14002da97:	int3   
   14002da98:	int3   
   14002da99:	int3   
   14002da9a:	int3   
   14002da9b:	int3   
   14002da9c:	int3   
   14002da9d:	int3   
   14002da9e:	int3   
   14002da9f:	int3   
   14002daa0:	sub    rsp,0x38
   14002daa4:	mov    eax,DWORD PTR [rip+0x224ce]        # 0x14004ff78
   14002daaa:	lea    r8,[rip+0x21f37]        # 0x14004f9e8
   14002dab1:	mov    r9d,DWORD PTR [rip+0x224bc]        # 0x14004ff74
   14002dab8:	lea    rdx,[rip+0x21f21]        # 0x14004f9e0
   14002dabf:	mov    DWORD PTR [rip+0x21f2f],eax        # 0x14004f9f4
   14002dac5:	lea    rcx,[rip+0x21f0c]        # 0x14004f9d8
   14002dacc:	lea    rax,[rip+0x21f21]        # 0x14004f9f4
   14002dad3:	mov    QWORD PTR [rsp+0x20],rax
   14002dad8:	call   QWORD PTR [rip+0x4a72]        # 0x140032550
   14002dade:	mov    DWORD PTR [rip+0x21ef8],eax        # 0x14004f9dc
   14002dae4:	add    rsp,0x38
   14002dae8:	ret    
   14002dae9:	int3   
   14002daea:	int3   
   14002daeb:	int3   
   14002daec:	int3   
   14002daed:	int3   
   14002daee:	int3   
   14002daef:	int3   
   14002daf0:	mov    rax,rsp
   14002daf3:	mov    QWORD PTR [rax+0x8],rbx
   14002daf7:	mov    QWORD PTR [rax+0x10],rsi
   14002dafb:	mov    QWORD PTR [rax+0x18],rdi
   14002daff:	mov    QWORD PTR [rax+0x20],r12
   14002db03:	push   r14
   14002db05:	sub    rsp,0x30
   14002db09:	mov    rax,QWORD PTR gs:0x30
   14002db12:	mov    rbx,QWORD PTR [rax+0x8]
   14002db16:	xor    r14d,r14d
   14002db19:	xor    eax,eax
   14002db1b:	lock cmpxchg QWORD PTR [rip+0x22814],rbx        # 0x140050338
   14002db24:	je     0x14002db42
   14002db26:	cmp    rax,rbx
   14002db29:	jne    0x14002db35
   14002db2b:	mov    ebx,0x1
   14002db30:	mov    r14d,ebx
   14002db33:	jmp    0x14002db47
   14002db35:	mov    ecx,0x3e8
   14002db3a:	call   QWORD PTR [rip+0x4620]        # 0x140032160
   14002db40:	jmp    0x14002db19
   14002db42:	mov    ebx,0x1
   14002db47:	mov    eax,DWORD PTR [rip+0x227f3]        # 0x140050340
   14002db4d:	cmp    eax,ebx
   14002db4f:	jne    0x14002db5d
   14002db51:	mov    ecx,0x1f
   14002db56:	call   0x14002e444
   14002db5b:	jmp    0x14002dbc6
   14002db5d:	mov    eax,DWORD PTR [rip+0x227dd]        # 0x140050340
   14002db63:	test   eax,eax
   14002db65:	jne    0x14002dbc0
   14002db67:	mov    DWORD PTR [rip+0x227d3],ebx        # 0x140050340
   14002db6d:	lea    r12,[rip+0x4bdc]        # 0x140032750
   14002db74:	lea    rdi,[rip+0x4bbd]        # 0x140032738
   14002db7b:	mov    QWORD PTR [rsp+0x28],rdi
   14002db80:	mov    DWORD PTR [rsp+0x20],eax
   14002db84:	cmp    rdi,r12
   14002db87:	jae    0x14002dbb2
   14002db89:	test   eax,eax
   14002db8b:	jne    0x14002dbb6
   14002db8d:	mov    rsi,QWORD PTR [rdi]
   14002db90:	test   rsi,rsi
   14002db93:	je     0x14002dba7
   14002db95:	mov    rcx,rsi
   14002db98:	mov    rax,QWORD PTR [rip+0x4b09]        # 0x1400326a8
   14002db9f:	call   rax
   14002dba1:	call   rsi
   14002dba3:	mov    DWORD PTR [rsp+0x20],eax
   14002dba7:	add    rdi,0x8
   14002dbab:	mov    QWORD PTR [rsp+0x28],rdi
   14002dbb0:	jmp    0x14002db84
   14002dbb2:	test   eax,eax
   14002dbb4:	je     0x14002dbc6
   14002dbb6:	mov    eax,0xff
   14002dbbb:	jmp    0x14002dca7
   14002dbc0:	mov    DWORD PTR [rip+0x21e0e],ebx        # 0x14004f9d4
   14002dbc6:	mov    eax,DWORD PTR [rip+0x22774]        # 0x140050340
   14002dbcc:	cmp    eax,ebx
   14002dbce:	jne    0x14002dbed
   14002dbd0:	lea    rdx,[rip+0x4b59]        # 0x140032730
   14002dbd7:	lea    rcx,[rip+0x4ada]        # 0x1400326b8
   14002dbde:	call   0x14002e60a
   14002dbe3:	mov    DWORD PTR [rip+0x22753],0x2        # 0x140050340
   14002dbed:	test   r14d,r14d
   14002dbf0:	jne    0x14002dbfb
   14002dbf2:	xor    eax,eax
   14002dbf4:	xchg   QWORD PTR [rip+0x2273d],rax        # 0x140050338
   14002dbfb:	cmp    QWORD PTR [rip+0x22755],0x0        # 0x140050358
   14002dc03:	je     0x14002dc33
   14002dc05:	lea    rcx,[rip+0x2274c]        # 0x140050358
   14002dc0c:	call   0x14002e4a0
   14002dc11:	test   eax,eax
   14002dc13:	je     0x14002dc33
   14002dc15:	mov    rbx,QWORD PTR [rip+0x2273c]        # 0x140050358
   14002dc1c:	mov    rcx,rbx
   14002dc1f:	mov    rax,QWORD PTR [rip+0x4a82]        # 0x1400326a8
   14002dc26:	call   rax
   14002dc28:	xor    r8d,r8d
   14002dc2b:	lea    edx,[r8+0x2]
   14002dc2f:	xor    ecx,ecx
   14002dc31:	call   rbx
   14002dc33:	mov    r8,QWORD PTR [rip+0x21dae]        # 0x14004f9e8
   14002dc3a:	mov    rdx,QWORD PTR [rip+0x21d9f]        # 0x14004f9e0
   14002dc41:	mov    ecx,DWORD PTR [rip+0x21d91]        # 0x14004f9d8
   14002dc47:	call   0x140023f58
   14002dc4c:	mov    DWORD PTR [rip+0x21d7e],eax        # 0x14004f9d0
   14002dc52:	cmp    DWORD PTR [rip+0x21d97],0x0        # 0x14004f9f0
   14002dc59:	jne    0x14002dc63
   14002dc5b:	mov    ecx,eax
   14002dc5d:	call   QWORD PTR [rip+0x48dd]        # 0x140032540
   14002dc63:	cmp    DWORD PTR [rip+0x21d6a],0x0        # 0x14004f9d4
   14002dc6a:	jne    0x14002dc78
   14002dc6c:	call   QWORD PTR [rip+0x48be]        # 0x140032530
   14002dc72:	mov    eax,DWORD PTR [rip+0x21d58]        # 0x14004f9d0
   14002dc78:	jmp    0x14002dca7
   14002dc7a:	mov    DWORD PTR [rip+0x21d50],eax        # 0x14004f9d0
   14002dc80:	cmp    DWORD PTR [rip+0x21d69],0x0        # 0x14004f9f0
   14002dc87:	jne    0x14002dc92
   14002dc89:	mov    ecx,eax
   14002dc8b:	call   QWORD PTR [rip+0x48a7]        # 0x140032538
   14002dc91:	int3   
   14002dc92:	cmp    DWORD PTR [rip+0x21d3b],0x0        # 0x14004f9d4
   14002dc99:	jne    0x14002dca7
   14002dc9b:	call   QWORD PTR [rip+0x488f]        # 0x140032530
   14002dca1:	mov    eax,DWORD PTR [rip+0x21d29]        # 0x14004f9d0
   14002dca7:	mov    rbx,QWORD PTR [rsp+0x40]
   14002dcac:	mov    rsi,QWORD PTR [rsp+0x48]
   14002dcb1:	mov    rdi,QWORD PTR [rsp+0x50]
   14002dcb6:	mov    r12,QWORD PTR [rsp+0x58]
   14002dcbb:	add    rsp,0x30
   14002dcbf:	pop    r14
   14002dcc1:	ret    
   14002dcc2:	int3   
   14002dcc3:	int3   
   14002dcc4:	int3   
   14002dcc5:	int3   
   14002dcc6:	int3   
   14002dcc7:	int3   
   14002dcc8:	int3   
   14002dcc9:	int3   
   14002dcca:	int3   
   14002dccb:	int3   
   14002dccc:	int3   
   14002dccd:	int3   
   14002dcce:	int3   
   14002dccf:	int3   
   14002dcd0:	sub    rsp,0x28
   14002dcd4:	call   0x14002e534
   14002dcd9:	add    rsp,0x28
   14002dcdd:	jmp    0x14002daf0
   14002dce2:	int3   
   14002dce3:	int3   
   14002dce4:	int3   
   14002dce5:	int3   
   14002dce6:	int3   
   14002dce7:	int3   
   14002dce8:	int3   
   14002dce9:	int3   
   14002dcea:	int3   
   14002dceb:	int3   
   14002dcec:	int3   
   14002dced:	int3   
   14002dcee:	int3   
   14002dcef:	int3   
   14002dcf0:	int3   
   14002dcf1:	int3   
   14002dcf2:	int3   
   14002dcf3:	int3   
   14002dcf4:	int3   
   14002dcf5:	int3   
   14002dcf6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14002dd00:	cmp    rcx,QWORD PTR [rip+0x1d319]        # 0x14004b020
   14002dd07:	jne    0x14002dd19
   14002dd09:	rol    rcx,0x10
   14002dd0d:	test   cx,0xffff
   14002dd12:	jne    0x14002dd15
   14002dd14:	ret    
   14002dd15:	ror    rcx,0x10
   14002dd19:	jmp    0x14002dfe0
   14002dd1e:	int3   
   14002dd1f:	int3   
   14002dd20:	int3   
   14002dd21:	int3   
   14002dd22:	int3   
   14002dd23:	int3   
   14002dd24:	mov    rax,rsp
   14002dd27:	mov    QWORD PTR [rax+0x20],r9
   14002dd2b:	mov    DWORD PTR [rax+0x18],r8d
   14002dd2f:	mov    QWORD PTR [rax+0x10],rdx
   14002dd33:	push   rbx
   14002dd34:	push   rsi
   14002dd35:	push   rdi
   14002dd36:	push   r14
   14002dd38:	sub    rsp,0x38
   14002dd3c:	mov    r14,r9
   14002dd3f:	movsxd rbx,r8d
   14002dd42:	mov    rsi,rdx
   14002dd45:	and    DWORD PTR [rax-0x38],0x0
   14002dd49:	mov    rdi,rbx
   14002dd4c:	imul   rdi,rdx
   14002dd50:	add    rdi,rcx
   14002dd53:	mov    QWORD PTR [rax+0x8],rdi
   14002dd57:	sub    ebx,0x1
   14002dd5a:	mov    DWORD PTR [rsp+0x70],ebx
   14002dd5e:	js     0x14002dd7c
   14002dd60:	sub    rdi,rsi
   14002dd63:	mov    QWORD PTR [rsp+0x60],rdi
   14002dd68:	mov    rcx,r14
   14002dd6b:	mov    rax,QWORD PTR [rip+0x4936]        # 0x1400326a8
   14002dd72:	call   rax
   14002dd74:	mov    rcx,rdi
   14002dd77:	call   r14
   14002dd7a:	jmp    0x14002dd57
   14002dd7c:	mov    DWORD PTR [rsp+0x20],0x1
   14002dd84:	add    rsp,0x38
   14002dd88:	pop    r14
   14002dd8a:	pop    rdi
   14002dd8b:	pop    rsi
   14002dd8c:	pop    rbx
   14002dd8d:	ret    
   14002dd8e:	int3   
   14002dd8f:	int3   
   14002dd90:	int3   
   14002dd91:	int3   
   14002dd92:	int3   
   14002dd93:	int3   
   14002dd94:	mov    QWORD PTR [rsp+0x10],rbx
   14002dd99:	mov    DWORD PTR [rsp+0x18],r8d
   14002dd9e:	mov    QWORD PTR [rsp+0x8],rcx
   14002dda3:	push   rsi
   14002dda4:	push   rdi
   14002dda5:	push   r14
   14002dda7:	sub    rsp,0x40
   14002ddab:	mov    rsi,r9
   14002ddae:	mov    ebx,r8d
   14002ddb1:	mov    r14,rdx
   14002ddb4:	mov    rdi,rcx
   14002ddb7:	sub    ebx,0x1
   14002ddba:	mov    DWORD PTR [rsp+0x70],ebx
   14002ddbe:	js     0x14002ddd8
   14002ddc0:	sub    rdi,r14
   14002ddc3:	mov    QWORD PTR [rsp+0x60],rdi
   14002ddc8:	mov    rcx,rsi
   14002ddcb:	call   QWORD PTR [rip+0x48d7]        # 0x1400326a8
   14002ddd1:	mov    rcx,rdi
   14002ddd4:	call   rsi
   14002ddd6:	jmp    0x14002ddb7
   14002ddd8:	jmp    0x14002ddda
   14002ddda:	mov    rbx,QWORD PTR [rsp+0x68]
   14002dddf:	add    rsp,0x40
   14002dde3:	pop    r14
   14002dde5:	pop    rdi
   14002dde6:	pop    rsi
   14002dde7:	ret    
   14002dde8:	int3   
   14002dde9:	int3   
   14002ddea:	int3   
   14002ddeb:	int3   
   14002ddec:	int3   
   14002dded:	int3   
   14002ddee:	int3   
   14002ddef:	int3   
   14002ddf0:	mov    QWORD PTR [rsp+0x8],rbx
   14002ddf5:	push   rdi
   14002ddf6:	sub    rsp,0x20
   14002ddfa:	mov    rdi,rcx
   14002ddfd:	mov    rax,QWORD PTR [rip+0x2254c]        # 0x140050350
   14002de04:	mov    QWORD PTR [rsp+0x38],rax
   14002de09:	cmp    rax,0xffffffffffffffff
   14002de0d:	jne    0x14002de26
   14002de0f:	mov    rbx,QWORD PTR [rip+0x46da]        # 0x1400324f0
   14002de16:	mov    rcx,rbx
   14002de19:	call   QWORD PTR [rip+0x4889]        # 0x1400326a8
   14002de1f:	mov    rcx,rdi
   14002de22:	call   rbx
   14002de24:	jmp    0x14002de83
   14002de26:	mov    ecx,0x8
   14002de2b:	call   0x14002e30a
   14002de30:	nop
   14002de31:	mov    rax,QWORD PTR [rip+0x22518]        # 0x140050350
   14002de38:	mov    QWORD PTR [rsp+0x38],rax
   14002de3d:	mov    rax,QWORD PTR [rip+0x22504]        # 0x140050348
   14002de44:	mov    QWORD PTR [rsp+0x40],rax
   14002de49:	lea    r8,[rsp+0x40]
   14002de4e:	lea    rdx,[rsp+0x38]
   14002de53:	mov    rcx,rdi
   14002de56:	call   0x14002e622
   14002de5b:	mov    rbx,rax
   14002de5e:	mov    rdx,QWORD PTR [rsp+0x38]
   14002de63:	mov    QWORD PTR [rip+0x224e6],rdx        # 0x140050350
   14002de6a:	mov    rdx,QWORD PTR [rsp+0x40]
   14002de6f:	mov    QWORD PTR [rip+0x224d2],rdx        # 0x140050348
   14002de76:	mov    ecx,0x8
   14002de7b:	call   0x14002e316
   14002de80:	mov    rax,rbx
   14002de83:	mov    rbx,QWORD PTR [rsp+0x30]
   14002de88:	add    rsp,0x20
   14002de8c:	pop    rdi
   14002de8d:	ret    
   14002de8e:	int3   
   14002de8f:	int3   
   14002de90:	int3   
   14002de91:	int3   
   14002de92:	int3   
   14002de93:	int3   
   14002de94:	sub    rsp,0x28
   14002de98:	call   0x14002ddf0
   14002de9d:	neg    rax
   14002dea0:	sbb    eax,eax
   14002dea2:	neg    eax
   14002dea4:	dec    eax
   14002dea6:	add    rsp,0x28
   14002deaa:	ret    
   14002deab:	int3   
   14002deac:	int3   
   14002dead:	int3   
   14002deae:	int3   
   14002deaf:	int3   
   14002deb0:	int3   
   14002deb1:	int3   
   14002deb2:	int3   
   14002deb3:	int3   
   14002deb4:	int3   
   14002deb5:	int3   
   14002deb6:	int3   
   14002deb7:	int3   
   14002deb8:	int3   
   14002deb9:	int3   
   14002deba:	int3   
   14002debb:	int3   
   14002debc:	int3   
   14002debd:	int3   
   14002debe:	int3   
   14002debf:	int3   
   14002dec0:	jmp    QWORD PTR [rip+0x45e2]        # 0x1400324a8
   14002dec6:	int3   
   14002dec7:	int3   
   14002dec8:	int3   
   14002dec9:	int3   
   14002deca:	int3   
   14002decb:	int3   
   14002decc:	int3   
   14002decd:	int3   
   14002dece:	int3   
   14002decf:	int3   
   14002ded0:	mov    QWORD PTR [rsp+0x8],rbx
   14002ded5:	push   rdi
   14002ded6:	sub    rsp,0x20
   14002deda:	mov    ebx,edx
   14002dedc:	mov    rdi,rcx
   14002dedf:	call   QWORD PTR [rip+0x4603]        # 0x1400324e8
   14002dee5:	test   bl,0x1
   14002dee8:	je     0x14002def2
   14002deea:	mov    rcx,rdi
   14002deed:	call   0x140023f48
   14002def2:	mov    rax,rdi
   14002def5:	mov    rbx,QWORD PTR [rsp+0x30]
   14002defa:	add    rsp,0x20
   14002defe:	pop    rdi
   14002deff:	ret    
   14002df00:	int3   
   14002df01:	int3   
   14002df02:	int3   
   14002df03:	int3   
   14002df04:	int3   
   14002df05:	int3   
   14002df06:	int3   
   14002df07:	int3   
   14002df08:	int3   
   14002df09:	int3   
   14002df0a:	int3   
   14002df0b:	int3   
   14002df0c:	int3   
   14002df0d:	int3   
   14002df0e:	int3   
   14002df0f:	int3   
   14002df10:	jmp    QWORD PTR [rip+0x459a]        # 0x1400324b0
   14002df16:	int3   
   14002df17:	int3   
   14002df18:	int3   
   14002df19:	int3   
   14002df1a:	int3   
   14002df1b:	int3   
   14002df1c:	jmp    QWORD PTR [rip+0x4596]        # 0x1400324b8
   14002df22:	int3   
   14002df23:	int3   
   14002df24:	int3   
   14002df25:	int3   
   14002df26:	int3   
   14002df27:	int3   
   14002df28:	jmp    QWORD PTR [rip+0x459a]        # 0x1400324c8
   14002df2e:	int3   
   14002df2f:	int3   
   14002df30:	int3   
   14002df31:	int3   
   14002df32:	int3   
   14002df33:	int3   
   14002df34:	int3   
   14002df35:	int3   
   14002df36:	int3   
   14002df37:	int3   
   14002df38:	int3   
   14002df39:	int3   
   14002df3a:	int3   
   14002df3b:	int3   
   14002df3c:	int3   
   14002df3d:	int3   
   14002df3e:	int3   
   14002df3f:	int3   
   14002df40:	sub    rsp,0x38
   14002df44:	mov    r9,rdx
   14002df47:	test   rdx,rdx
   14002df4a:	je     0x14002df81
   14002df4c:	xor    edx,edx
   14002df4e:	lea    rax,[rdx-0x20]
   14002df52:	div    r9
   14002df55:	cmp    rax,r8
   14002df58:	jae    0x14002df81
   14002df5a:	call   0x14002e62e
   14002df5f:	and    QWORD PTR [rsp+0x20],0x0
   14002df65:	xor    r9d,r9d
   14002df68:	xor    r8d,r8d
   14002df6b:	xor    edx,edx
   14002df6d:	xor    ecx,ecx
   14002df6f:	mov    DWORD PTR [rax],0xc
   14002df75:	call   0x14002e63c
   14002df7a:	xor    eax,eax
   14002df7c:	add    rsp,0x38
   14002df80:	ret    
   14002df81:	imul   r9,r8
   14002df85:	mov    rdx,r9
   14002df88:	add    rsp,0x38
   14002df8c:	jmp    0x14002e712
   14002df91:	int3   
   14002df92:	int3   
   14002df93:	int3   
   14002df94:	int3   
   14002df95:	int3   
   14002df96:	int3   
   14002df97:	int3   
   14002df98:	rex push rbx
   14002df9a:	sub    rsp,0x20
   14002df9e:	mov    rbx,rcx
   14002dfa1:	xor    ecx,ecx
   14002dfa3:	call   QWORD PTR [rip+0x428f]        # 0x140032238
   14002dfa9:	mov    rcx,rbx
   14002dfac:	call   QWORD PTR [rip+0x428e]        # 0x140032240
   14002dfb2:	call   QWORD PTR [rip+0x4120]        # 0x1400320d8
   14002dfb8:	mov    rcx,rax
   14002dfbb:	mov    edx,0xc0000409
   14002dfc0:	add    rsp,0x20
   14002dfc4:	pop    rbx
   14002dfc5:	rex.W jmp QWORD PTR [rip+0x421c]        # 0x1400321e8
   14002dfcc:	int3   
   14002dfcd:	int3   
   14002dfce:	int3   
   14002dfcf:	int3   
   14002dfd0:	int3   
   14002dfd1:	int3   
   14002dfd2:	int3   
   14002dfd3:	int3   
   14002dfd4:	int3   
   14002dfd5:	int3   
   14002dfd6:	int3   
   14002dfd7:	int3   
   14002dfd8:	int3   
   14002dfd9:	int3   
   14002dfda:	int3   
   14002dfdb:	int3   
   14002dfdc:	int3   
   14002dfdd:	int3   
   14002dfde:	int3   
   14002dfdf:	int3   
   14002dfe0:	mov    QWORD PTR [rsp+0x8],rcx
   14002dfe5:	sub    rsp,0x88
   14002dfec:	lea    rcx,[rip+0x21aad]        # 0x14004faa0
   14002dff3:	call   QWORD PTR [rip+0x4657]        # 0x140032650
   14002dff9:	mov    rax,QWORD PTR [rip+0x21b98]        # 0x14004fb98
   14002e000:	mov    QWORD PTR [rsp+0x48],rax
   14002e005:	xor    r8d,r8d
   14002e008:	lea    rdx,[rsp+0x50]
   14002e00d:	mov    rcx,QWORD PTR [rsp+0x48]
   14002e012:	call   QWORD PTR [rip+0x4628]        # 0x140032640
   14002e018:	mov    QWORD PTR [rsp+0x40],rax
   14002e01d:	cmp    QWORD PTR [rsp+0x40],0x0
   14002e023:	je     0x14002e067
   14002e025:	mov    QWORD PTR [rsp+0x38],0x0
   14002e02e:	lea    rax,[rsp+0x58]
   14002e033:	mov    QWORD PTR [rsp+0x30],rax
   14002e038:	lea    rax,[rsp+0x60]
   14002e03d:	mov    QWORD PTR [rsp+0x28],rax
   14002e042:	lea    rax,[rip+0x21a57]        # 0x14004faa0
   14002e049:	mov    QWORD PTR [rsp+0x20],rax
   14002e04e:	mov    r9,QWORD PTR [rsp+0x40]
   14002e053:	mov    r8,QWORD PTR [rsp+0x48]
   14002e058:	mov    rdx,QWORD PTR [rsp+0x50]
   14002e05d:	xor    ecx,ecx
   14002e05f:	call   QWORD PTR [rip+0x45e3]        # 0x140032648
   14002e065:	jmp    0x14002e08a
   14002e067:	mov    rax,QWORD PTR [rip+0x21aca]        # 0x14004fb38
   14002e06e:	mov    rax,QWORD PTR [rax]
   14002e071:	mov    QWORD PTR [rip+0x21b20],rax        # 0x14004fb98
   14002e078:	mov    rax,QWORD PTR [rip+0x21ab9]        # 0x14004fb38
   14002e07f:	add    rax,0x8
   14002e083:	mov    QWORD PTR [rip+0x21aae],rax        # 0x14004fb38
   14002e08a:	mov    rax,QWORD PTR [rip+0x21b07]        # 0x14004fb98
   14002e091:	mov    QWORD PTR [rip+0x21978],rax        # 0x14004fa10
   14002e098:	mov    rax,QWORD PTR [rsp+0x90]
   14002e0a0:	mov    QWORD PTR [rip+0x21a79],rax        # 0x14004fb20
   14002e0a7:	mov    DWORD PTR [rip+0x2194f],0xc0000409        # 0x14004fa00
   14002e0b1:	mov    DWORD PTR [rip+0x21949],0x1        # 0x14004fa04
   14002e0bb:	mov    DWORD PTR [rip+0x21953],0x3        # 0x14004fa18
   14002e0c5:	mov    eax,0x8
   14002e0ca:	imul   rax,rax,0x0
   14002e0ce:	lea    rcx,[rip+0x2194b]        # 0x14004fa20
   14002e0d5:	mov    QWORD PTR [rcx+rax*1],0x2
   14002e0dd:	mov    eax,0x8
   14002e0e2:	imul   rax,rax,0x1
   14002e0e6:	lea    rcx,[rip+0x21933]        # 0x14004fa20
   14002e0ed:	mov    rdx,QWORD PTR [rip+0x1cf2c]        # 0x14004b020
   14002e0f4:	mov    QWORD PTR [rcx+rax*1],rdx
   14002e0f8:	mov    eax,0x8
   14002e0fd:	imul   rax,rax,0x2
   14002e101:	lea    rcx,[rip+0x21918]        # 0x14004fa20
   14002e108:	mov    rdx,QWORD PTR [rip+0x1cf19]        # 0x14004b028
   14002e10f:	mov    QWORD PTR [rcx+rax*1],rdx
   14002e113:	mov    eax,0x8
   14002e118:	imul   rax,rax,0x0
   14002e11c:	mov    rcx,QWORD PTR [rip+0x1cefd]        # 0x14004b020
   14002e123:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   14002e128:	mov    eax,0x8
   14002e12d:	imul   rax,rax,0x1
   14002e131:	mov    rcx,QWORD PTR [rip+0x1cef0]        # 0x14004b028
   14002e138:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   14002e13d:	lea    rcx,[rip+0x5d04]        # 0x140033e48
   14002e144:	call   0x14002df98
   14002e149:	add    rsp,0x88
   14002e150:	ret    
   14002e151:	int3   
   14002e152:	int3   
   14002e153:	int3   
   14002e154:	int3   
   14002e155:	int3   
   14002e156:	int3   
   14002e157:	int3   
   14002e158:	sub    rsp,0x78
   14002e15c:	lea    rcx,[rip+0x2193d]        # 0x14004faa0
   14002e163:	call   QWORD PTR [rip+0x44e7]        # 0x140032650
   14002e169:	mov    rax,QWORD PTR [rip+0x21a28]        # 0x14004fb98
   14002e170:	mov    QWORD PTR [rsp+0x48],rax
   14002e175:	xor    r8d,r8d
   14002e178:	lea    rdx,[rsp+0x50]
   14002e17d:	mov    rcx,QWORD PTR [rsp+0x48]
   14002e182:	call   QWORD PTR [rip+0x44b8]        # 0x140032640
   14002e188:	mov    QWORD PTR [rsp+0x40],rax
   14002e18d:	cmp    QWORD PTR [rsp+0x40],0x0
   14002e193:	je     0x14002e1d7
   14002e195:	mov    QWORD PTR [rsp+0x38],0x0
   14002e19e:	lea    rax,[rsp+0x58]
   14002e1a3:	mov    QWORD PTR [rsp+0x30],rax
   14002e1a8:	lea    rax,[rsp+0x60]
   14002e1ad:	mov    QWORD PTR [rsp+0x28],rax
   14002e1b2:	lea    rax,[rip+0x218e7]        # 0x14004faa0
   14002e1b9:	mov    QWORD PTR [rsp+0x20],rax
   14002e1be:	mov    r9,QWORD PTR [rsp+0x40]
   14002e1c3:	mov    r8,QWORD PTR [rsp+0x48]
   14002e1c8:	mov    rdx,QWORD PTR [rsp+0x50]
   14002e1cd:	xor    ecx,ecx
   14002e1cf:	call   QWORD PTR [rip+0x4473]        # 0x140032648
   14002e1d5:	jmp    0x14002e1fa
   14002e1d7:	mov    rax,QWORD PTR [rip+0x2195a]        # 0x14004fb38
   14002e1de:	mov    rax,QWORD PTR [rax]
   14002e1e1:	mov    QWORD PTR [rip+0x219b0],rax        # 0x14004fb98
   14002e1e8:	mov    rax,QWORD PTR [rip+0x21949]        # 0x14004fb38
   14002e1ef:	add    rax,0x8
   14002e1f3:	mov    QWORD PTR [rip+0x2193e],rax        # 0x14004fb38
   14002e1fa:	mov    rax,QWORD PTR [rip+0x21997]        # 0x14004fb98
   14002e201:	mov    QWORD PTR [rip+0x21808],rax        # 0x14004fa10
   14002e208:	mov    DWORD PTR [rip+0x217ee],0xc0000409        # 0x14004fa00
   14002e212:	mov    DWORD PTR [rip+0x217e8],0x1        # 0x14004fa04
   14002e21c:	mov    DWORD PTR [rip+0x217f2],0x1        # 0x14004fa18
   14002e226:	mov    eax,0x8
   14002e22b:	imul   rax,rax,0x0
   14002e22f:	lea    rcx,[rip+0x217ea]        # 0x14004fa20
   14002e236:	mov    QWORD PTR [rcx+rax*1],0x8
   14002e23e:	lea    rcx,[rip+0x5c03]        # 0x140033e48
   14002e245:	call   0x14002df98
   14002e24a:	add    rsp,0x78
   14002e24e:	ret    
   14002e24f:	int3   
   14002e250:	int3   
   14002e251:	int3   
   14002e252:	int3   
   14002e253:	int3   
   14002e254:	int3   
   14002e255:	int3   
   14002e256:	int3   
   14002e257:	int3   
   14002e258:	mov    rax,rsp
   14002e25b:	mov    QWORD PTR [rax+0x18],rbx
   14002e25f:	mov    QWORD PTR [rax+0x20],rsi
   14002e263:	mov    QWORD PTR [rax+0x10],rdx
   14002e267:	mov    QWORD PTR [rax+0x8],rcx
   14002e26b:	push   rdi
   14002e26c:	push   r14
   14002e26e:	push   r15
   14002e270:	sub    rsp,0x30
   14002e274:	mov    r14,r9
   14002e277:	mov    r15d,r8d
   14002e27a:	mov    rsi,rdx
   14002e27d:	mov    rdi,rcx
   14002e280:	xor    ebx,ebx
   14002e282:	mov    DWORD PTR [rax-0x28],ebx
   14002e285:	mov    DWORD PTR [rax-0x24],ebx
   14002e288:	mov    DWORD PTR [rsp+0x20],ebx
   14002e28c:	cmp    ebx,r15d
   14002e28f:	jge    0x14002e2ac
   14002e291:	mov    rcx,r14
   14002e294:	call   QWORD PTR [rip+0x440e]        # 0x1400326a8
   14002e29a:	mov    rcx,rdi
   14002e29d:	call   r14
   14002e2a0:	add    rdi,rsi
   14002e2a3:	mov    QWORD PTR [rsp+0x50],rdi
   14002e2a8:	inc    ebx
   14002e2aa:	jmp    0x14002e288
   14002e2ac:	mov    DWORD PTR [rsp+0x24],0x1
   14002e2b4:	mov    rbx,QWORD PTR [rsp+0x60]
   14002e2b9:	mov    rsi,QWORD PTR [rsp+0x68]
   14002e2be:	add    rsp,0x30
   14002e2c2:	pop    r15
   14002e2c4:	pop    r14
   14002e2c6:	pop    rdi
   14002e2c7:	ret    
   14002e2c8:	int3   
   14002e2c9:	int3   
   14002e2ca:	int3   
   14002e2cb:	int3   
   14002e2cc:	int3   
   14002e2cd:	int3   
   14002e2ce:	jmp    QWORD PTR [rip+0x42cc]        # 0x1400325a0
   14002e2d4:	int3   
   14002e2d5:	int3   
   14002e2d6:	int3   
   14002e2d7:	int3   
   14002e2d8:	int3   
   14002e2d9:	int3   
   14002e2da:	jmp    QWORD PTR [rip+0x42b0]        # 0x140032590
   14002e2e0:	int3   
   14002e2e1:	int3   
   14002e2e2:	int3   
   14002e2e3:	int3   
   14002e2e4:	int3   
   14002e2e5:	int3   
   14002e2e6:	jmp    QWORD PTR [rip+0x429c]        # 0x140032588
   14002e2ec:	int3   
   14002e2ed:	int3   
   14002e2ee:	int3   
   14002e2ef:	int3   
   14002e2f0:	int3   
   14002e2f1:	int3   
   14002e2f2:	jmp    QWORD PTR [rip+0x4288]        # 0x140032580
   14002e2f8:	int3   
   14002e2f9:	int3   
   14002e2fa:	int3   
   14002e2fb:	int3   
   14002e2fc:	int3   
   14002e2fd:	int3   
   14002e2fe:	jmp    QWORD PTR [rip+0x4274]        # 0x140032578
   14002e304:	int3   
   14002e305:	int3   
   14002e306:	int3   
   14002e307:	int3   
   14002e308:	int3   
   14002e309:	int3   
   14002e30a:	jmp    QWORD PTR [rip+0x4260]        # 0x140032570
   14002e310:	int3   
   14002e311:	int3   
   14002e312:	int3   
   14002e313:	int3   
   14002e314:	int3   
   14002e315:	int3   
   14002e316:	jmp    QWORD PTR [rip+0x424c]        # 0x140032568
   14002e31c:	int3   
   14002e31d:	int3   
   14002e31e:	int3   
   14002e31f:	int3   
   14002e320:	int3   
   14002e321:	int3   
   14002e322:	int3   
   14002e323:	int3   
   14002e324:	int3   
   14002e325:	int3   
   14002e326:	int3   
   14002e327:	int3   
   14002e328:	int3   
   14002e329:	int3   
   14002e32a:	int3   
   14002e32b:	int3   
   14002e32c:	int3   
   14002e32d:	int3   
   14002e32e:	int3   
   14002e32f:	int3   
   14002e330:	sub    rsp,0x28
   14002e334:	mov    rax,QWORD PTR [rcx]
   14002e337:	cmp    DWORD PTR [rax],0xe06d7363
   14002e33d:	jne    0x14002e362
   14002e33f:	cmp    DWORD PTR [rax+0x18],0x4
   14002e343:	jne    0x14002e362
   14002e345:	mov    ecx,DWORD PTR [rax+0x20]
   14002e348:	lea    eax,[rcx-0x19930520]
   14002e34e:	cmp    eax,0x2
   14002e351:	jbe    0x14002e35b
   14002e353:	cmp    ecx,0x1994000
   14002e359:	jne    0x14002e362
   14002e35b:	call   QWORD PTR [rip+0x419f]        # 0x140032500
   14002e361:	int3   
   14002e362:	xor    eax,eax
   14002e364:	add    rsp,0x28
   14002e368:	ret    
   14002e369:	int3   
   14002e36a:	int3   
   14002e36b:	int3   
   14002e36c:	int3   
   14002e36d:	int3   
   14002e36e:	int3   
   14002e36f:	int3   
   14002e370:	sub    rsp,0x28
   14002e374:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x14002e330
   14002e37b:	call   QWORD PTR [rip+0x3eb7]        # 0x140032238
   14002e381:	xor    eax,eax
   14002e383:	add    rsp,0x28
   14002e387:	ret    
   14002e388:	int3   
   14002e389:	int3   
   14002e38a:	int3   
   14002e38b:	int3   
   14002e38c:	int3   
   14002e38d:	int3   
   14002e38e:	jmp    QWORD PTR [rip+0x41cc]        # 0x140032560
   14002e394:	int3   
   14002e395:	int3   
   14002e396:	int3   
   14002e397:	int3   
   14002e398:	int3   
   14002e399:	int3   
   14002e39a:	int3   
   14002e39b:	int3   
   14002e39c:	sub    rsp,0x18
   14002e3a0:	xor    edx,edx
   14002e3a2:	lea    rax,[rcx-0x1]
   14002e3a6:	cmp    rax,0xfffffffffffffffd
   14002e3aa:	ja     0x14002e3e8
   14002e3ac:	mov    eax,0x5a4d
   14002e3b1:	cmp    WORD PTR [rcx],ax
   14002e3b4:	jne    0x14002e3e0
   14002e3b6:	cmp    DWORD PTR [rcx+0x3c],edx
   14002e3b9:	jl     0x14002e3e0
   14002e3bb:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   14002e3c2:	jae    0x14002e3e0
   14002e3c4:	movsxd rax,DWORD PTR [rcx+0x3c]
   14002e3c8:	add    rax,rcx
   14002e3cb:	mov    QWORD PTR [rsp],rax
   14002e3cf:	cmp    DWORD PTR [rax],0x4550
   14002e3d5:	cmovne rax,rdx
   14002e3d9:	mov    rdx,rax
   14002e3dc:	mov    QWORD PTR [rsp],rax
   14002e3e0:	jmp    0x14002e3e8
   14002e3e2:	xor    edx,edx
   14002e3e4:	mov    QWORD PTR [rsp],rdx
   14002e3e8:	mov    rax,rdx
   14002e3eb:	add    rsp,0x18
   14002e3ef:	ret    
   14002e3f0:	int3   
   14002e3f1:	int3   
   14002e3f2:	int3   
   14002e3f3:	int3   
   14002e3f4:	int3   
   14002e3f5:	int3   
   14002e3f6:	int3   
   14002e3f7:	int3   
   14002e3f8:	rex push rbx
   14002e3fa:	sub    rsp,0x20
   14002e3fe:	mov    ebx,ecx
   14002e400:	xor    ecx,ecx
   14002e402:	call   QWORD PTR [rip+0x3ea8]        # 0x1400322b0
   14002e408:	test   rax,rax
   14002e40b:	je     0x14002e435
   14002e40d:	mov    rcx,rax
   14002e410:	call   0x14002e39c
   14002e415:	test   rax,rax
   14002e418:	je     0x14002e435
   14002e41a:	mov    ecx,0x2
   14002e41f:	cmp    WORD PTR [rax+0x5c],cx
   14002e423:	jne    0x14002e429
   14002e425:	mov    eax,ecx
   14002e427:	jmp    0x14002e437
   14002e429:	cmp    WORD PTR [rax+0x5c],0x3
   14002e42e:	mov    eax,0x1
   14002e433:	je     0x14002e437
   14002e435:	mov    eax,ebx
   14002e437:	add    rsp,0x20
   14002e43b:	pop    rbx
   14002e43c:	ret    
   14002e43d:	int3   
   14002e43e:	int3   
   14002e43f:	int3   
   14002e440:	int3   
   14002e441:	int3   
   14002e442:	int3   
   14002e443:	int3   
   14002e444:	jmp    QWORD PTR [rip+0x410e]        # 0x140032558
   14002e44a:	int3   
   14002e44b:	int3   
   14002e44c:	int3   
   14002e44d:	int3   
   14002e44e:	int3   
   14002e44f:	int3   
   14002e450:	movsxd r8,DWORD PTR [rcx+0x3c]
   14002e454:	xor    r9d,r9d
   14002e457:	add    r8,rcx
   14002e45a:	mov    r10,rdx
   14002e45d:	movzx  eax,WORD PTR [r8+0x14]
   14002e462:	movzx  r11d,WORD PTR [r8+0x6]
   14002e467:	add    rax,0x18
   14002e46b:	add    rax,r8
   14002e46e:	test   r11d,r11d
   14002e471:	je     0x14002e491
   14002e473:	mov    edx,DWORD PTR [rax+0xc]
   14002e476:	cmp    r10,rdx
   14002e479:	jb     0x14002e485
   14002e47b:	mov    ecx,DWORD PTR [rax+0x8]
   14002e47e:	add    ecx,edx
   14002e480:	cmp    r10,rcx
   14002e483:	jb     0x14002e493
   14002e485:	inc    r9d
   14002e488:	add    rax,0x28
   14002e48c:	cmp    r9d,r11d
   14002e48f:	jb     0x14002e473
   14002e491:	xor    eax,eax
   14002e493:	ret    
   14002e494:	int3   
   14002e495:	int3   
   14002e496:	int3   
   14002e497:	int3   
   14002e498:	int3   
   14002e499:	int3   
   14002e49a:	int3   
   14002e49b:	int3   
   14002e49c:	int3   
   14002e49d:	int3   
   14002e49e:	int3   
   14002e49f:	int3   
   14002e4a0:	mov    QWORD PTR [rsp+0x8],rbx
   14002e4a5:	push   rdi
   14002e4a6:	sub    rsp,0x20
   14002e4aa:	mov    rbx,rcx
   14002e4ad:	lea    rdi,[rip+0xfffffffffffd1b4c]        # 0x140000000
   14002e4b4:	mov    rcx,rdi
   14002e4b7:	call   0x14002e500
   14002e4bc:	test   eax,eax
   14002e4be:	je     0x14002e4e2
   14002e4c0:	sub    rbx,rdi
   14002e4c3:	mov    rdx,rbx
   14002e4c6:	mov    rcx,rdi
   14002e4c9:	call   0x14002e450
   14002e4ce:	test   rax,rax
   14002e4d1:	je     0x14002e4e2
   14002e4d3:	mov    eax,DWORD PTR [rax+0x24]
   14002e4d6:	shr    eax,0x1f
   14002e4d9:	not    eax
   14002e4db:	and    eax,0x1
   14002e4de:	jmp    0x14002e4e2
   14002e4e0:	xor    eax,eax
   14002e4e2:	mov    rbx,QWORD PTR [rsp+0x30]
   14002e4e7:	add    rsp,0x20
   14002e4eb:	pop    rdi
   14002e4ec:	ret    
   14002e4ed:	int3   
   14002e4ee:	int3   
   14002e4ef:	int3   
   14002e4f0:	int3   
   14002e4f1:	int3   
   14002e4f2:	int3   
   14002e4f3:	int3   
   14002e4f4:	int3   
   14002e4f5:	int3   
   14002e4f6:	int3   
   14002e4f7:	int3   
   14002e4f8:	int3   
   14002e4f9:	int3   
   14002e4fa:	int3   
   14002e4fb:	int3   
   14002e4fc:	int3   
   14002e4fd:	int3   
   14002e4fe:	int3   
   14002e4ff:	int3   
   14002e500:	mov    rax,rcx
   14002e503:	mov    ecx,0x5a4d
   14002e508:	cmp    WORD PTR [rax],cx
   14002e50b:	je     0x14002e510
   14002e50d:	xor    eax,eax
   14002e50f:	ret    
   14002e510:	movsxd rcx,DWORD PTR [rax+0x3c]
   14002e514:	add    rcx,rax
   14002e517:	xor    eax,eax
   14002e519:	cmp    DWORD PTR [rcx],0x4550
   14002e51f:	jne    0x14002e52d
   14002e521:	mov    edx,0x20b
   14002e526:	cmp    WORD PTR [rcx+0x18],dx
   14002e52a:	sete   al
   14002e52d:	ret    
   14002e52e:	int3   
   14002e52f:	int3   
   14002e530:	int3   
   14002e531:	int3   
   14002e532:	int3   
   14002e533:	int3   
   14002e534:	mov    QWORD PTR [rsp+0x20],rbx
   14002e539:	push   rbp
   14002e53a:	mov    rbp,rsp
   14002e53d:	sub    rsp,0x20
   14002e541:	and    QWORD PTR [rbp+0x18],0x0
   14002e546:	movabs rbx,0x2b992ddfa232
   14002e550:	mov    rax,QWORD PTR [rip+0x1cac9]        # 0x14004b020
   14002e557:	cmp    rax,rbx
   14002e55a:	jne    0x14002e5ef
   14002e560:	lea    rcx,[rbp+0x18]
   14002e564:	call   QWORD PTR [rip+0x3bfe]        # 0x140032168
   14002e56a:	mov    rax,QWORD PTR [rbp+0x18]
   14002e56e:	mov    QWORD PTR [rbp+0x10],rax
   14002e572:	call   QWORD PTR [rip+0x3c60]        # 0x1400321d8
   14002e578:	mov    eax,eax
   14002e57a:	xor    QWORD PTR [rbp+0x10],rax
   14002e57e:	call   QWORD PTR [rip+0x3c4c]        # 0x1400321d0
   14002e584:	mov    eax,eax
   14002e586:	xor    QWORD PTR [rbp+0x10],rax
   14002e58a:	call   QWORD PTR [rip+0x3c38]        # 0x1400321c8
   14002e590:	mov    eax,eax
   14002e592:	shl    rax,0x18
   14002e596:	xor    QWORD PTR [rbp+0x10],rax
   14002e59a:	call   QWORD PTR [rip+0x3c28]        # 0x1400321c8
   14002e5a0:	mov    eax,eax
   14002e5a2:	lea    rcx,[rbp+0x10]
   14002e5a6:	xor    rax,QWORD PTR [rbp+0x10]
   14002e5aa:	xor    rax,rcx
   14002e5ad:	lea    rcx,[rbp+0x20]
   14002e5b1:	mov    QWORD PTR [rbp+0x10],rax
   14002e5b5:	call   QWORD PTR [rip+0x3c25]        # 0x1400321e0
   14002e5bb:	mov    eax,DWORD PTR [rbp+0x20]
   14002e5be:	movabs rcx,0xffffffffffff
   14002e5c8:	shl    rax,0x20
   14002e5cc:	xor    rax,QWORD PTR [rbp+0x20]
   14002e5d0:	xor    rax,QWORD PTR [rbp+0x10]
   14002e5d4:	and    rax,rcx
   14002e5d7:	movabs rcx,0x2b992ddfa233
   14002e5e1:	cmp    rax,rbx
   14002e5e4:	cmove  rax,rcx
   14002e5e8:	mov    QWORD PTR [rip+0x1ca31],rax        # 0x14004b020
   14002e5ef:	mov    rbx,QWORD PTR [rsp+0x48]
   14002e5f4:	not    rax
   14002e5f7:	mov    QWORD PTR [rip+0x1ca2a],rax        # 0x14004b028
   14002e5fe:	add    rsp,0x20
   14002e602:	pop    rbp
   14002e603:	ret    
   14002e604:	int3   
   14002e605:	int3   
   14002e606:	int3   
   14002e607:	int3   
   14002e608:	int3   
   14002e609:	int3   
   14002e60a:	jmp    QWORD PTR [rip+0x3f10]        # 0x140032520
   14002e610:	int3   
   14002e611:	int3   
   14002e612:	int3   
   14002e613:	int3   
   14002e614:	int3   
   14002e615:	int3   
   14002e616:	jmp    QWORD PTR [rip+0x3efc]        # 0x140032518
   14002e61c:	int3   
   14002e61d:	int3   
   14002e61e:	int3   
   14002e61f:	int3   
   14002e620:	int3   
   14002e621:	int3   
   14002e622:	jmp    QWORD PTR [rip+0x3ed0]        # 0x1400324f8
   14002e628:	int3   
   14002e629:	int3   
   14002e62a:	int3   
   14002e62b:	int3   
   14002e62c:	int3   
   14002e62d:	int3   
   14002e62e:	jmp    QWORD PTR [rip+0x3eac]        # 0x1400324e0
   14002e634:	int3   
   14002e635:	int3   
   14002e636:	int3   
   14002e637:	int3   
   14002e638:	int3   
   14002e639:	int3   
   14002e63a:	int3   
   14002e63b:	int3   
   14002e63c:	jmp    0x14002e648
   14002e641:	int3   
   14002e642:	int3   
   14002e643:	int3   
   14002e644:	int3   
   14002e645:	int3   
   14002e646:	int3   
   14002e647:	int3   
   14002e648:	rex push rbx
   14002e64a:	sub    rsp,0x540
   14002e651:	mov    rax,QWORD PTR [rip+0x1c9c8]        # 0x14004b020
   14002e658:	xor    rax,rsp
   14002e65b:	mov    QWORD PTR [rsp+0x530],rax
   14002e663:	lea    rcx,[rsp+0x60]
   14002e668:	call   QWORD PTR [rip+0x3fe2]        # 0x140032650
   14002e66e:	mov    rbx,QWORD PTR [rsp+0x158]
   14002e676:	lea    rdx,[rsp+0x40]
   14002e67b:	mov    rcx,rbx
   14002e67e:	xor    r8d,r8d
   14002e681:	call   QWORD PTR [rip+0x3fb9]        # 0x140032640
   14002e687:	test   rax,rax
   14002e68a:	je     0x14002e6c5
   14002e68c:	and    QWORD PTR [rsp+0x38],0x0
   14002e692:	lea    rcx,[rsp+0x48]
   14002e697:	mov    rdx,QWORD PTR [rsp+0x40]
   14002e69c:	mov    r9,rax
   14002e69f:	mov    QWORD PTR [rsp+0x30],rcx
   14002e6a4:	mov    r8,rbx
   14002e6a7:	lea    rcx,[rsp+0x50]
   14002e6ac:	mov    QWORD PTR [rsp+0x28],rcx
   14002e6b1:	lea    rcx,[rsp+0x60]
   14002e6b6:	mov    QWORD PTR [rsp+0x20],rcx
   14002e6bb:	xor    ecx,ecx
   14002e6bd:	call   QWORD PTR [rip+0x3f85]        # 0x140032648
   14002e6c3:	jmp    0x14002e6e5
   14002e6c5:	mov    rax,QWORD PTR [rsp+0x548]
   14002e6cd:	mov    QWORD PTR [rsp+0x158],rax
   14002e6d5:	lea    rax,[rsp+0x548]
   14002e6dd:	mov    QWORD PTR [rsp+0xf8],rax
   14002e6e5:	lea    rcx,[rip+0x576c]        # 0x140033e58
   14002e6ec:	call   QWORD PTR [rip+0x3c06]        # 0x1400322f8
   14002e6f2:	mov    rcx,QWORD PTR [rsp+0x530]
   14002e6fa:	xor    rcx,rsp
   14002e6fd:	call   0x14002dd00
   14002e702:	add    rsp,0x540
   14002e709:	pop    rbx
   14002e70a:	ret    
   14002e70b:	int3   
   14002e70c:	int3   
   14002e70d:	int3   
   14002e70e:	int3   
   14002e70f:	int3   
   14002e710:	int3   
   14002e711:	int3   
   14002e712:	jmp    QWORD PTR [rip+0x3dc0]        # 0x1400324d8
   14002e718:	int3   
   14002e719:	int3   
   14002e71a:	int3   
   14002e71b:	int3   
   14002e71c:	int3   
   14002e71d:	int3   
   14002e71e:	int3   
   14002e71f:	int3   
   14002e720:	int3   
   14002e721:	int3   
   14002e722:	int3   
   14002e723:	int3   
   14002e724:	int3   
   14002e725:	int3   
   14002e726:	int3   
   14002e727:	int3   
   14002e728:	sub    rsp,0x28
   14002e72c:	mov    r8,QWORD PTR [r9+0x38]
   14002e730:	mov    rcx,rdx
   14002e733:	mov    rdx,r9
   14002e736:	call   0x14002e74c
   14002e73b:	mov    eax,0x1
   14002e740:	add    rsp,0x28
   14002e744:	ret    
   14002e745:	int3   
   14002e746:	int3   
   14002e747:	int3   
   14002e748:	int3   
   14002e749:	int3   
   14002e74a:	int3   
   14002e74b:	int3   
   14002e74c:	rex push rbx
   14002e74e:	sub    rsp,0x20
   14002e752:	mov    r11d,DWORD PTR [r8]
   14002e755:	mov    rbx,rdx
   14002e758:	and    r11d,0xfffffff8
   14002e75c:	mov    r9,rcx
   14002e75f:	test   BYTE PTR [r8],0x4
   14002e763:	mov    r10,rcx
   14002e766:	je     0x14002e77b
   14002e768:	mov    eax,DWORD PTR [r8+0x8]
   14002e76c:	movsxd r10,DWORD PTR [r8+0x4]
   14002e770:	neg    eax
   14002e772:	add    r10,rcx
   14002e775:	movsxd rcx,eax
   14002e778:	and    r10,rcx
   14002e77b:	movsxd rax,r11d
   14002e77e:	mov    rdx,QWORD PTR [rax+r10*1]
   14002e782:	mov    rax,QWORD PTR [rbx+0x10]
   14002e786:	mov    ecx,DWORD PTR [rax+0x8]
   14002e789:	add    rcx,QWORD PTR [rbx+0x8]
   14002e78d:	test   BYTE PTR [rcx+0x3],0xf
   14002e791:	je     0x14002e79f
   14002e793:	movzx  eax,BYTE PTR [rcx+0x3]
   14002e797:	and    eax,0xfffffff0
   14002e79a:	cdqe   
   14002e79c:	add    r9,rax
   14002e79f:	xor    r9,rdx
   14002e7a2:	mov    rcx,r9
   14002e7a5:	add    rsp,0x20
   14002e7a9:	pop    rbx
   14002e7aa:	jmp    0x14002dd00
   14002e7af:	int3   
   14002e7b0:	int3   
   14002e7b1:	int3   
   14002e7b2:	int3   
   14002e7b3:	int3   
   14002e7b4:	int3   
   14002e7b5:	int3   
   14002e7b6:	int3   
   14002e7b7:	int3   
   14002e7b8:	int3   
   14002e7b9:	int3   
   14002e7ba:	int3   
   14002e7bb:	int3   
   14002e7bc:	int3   
   14002e7bd:	int3   
   14002e7be:	int3   
   14002e7bf:	int3   
   14002e7c0:	jmp    QWORD PTR [rip+0x3a4a]        # 0x140032210
   14002e7c6:	int3   
   14002e7c7:	int3   
   14002e7c8:	int3   
   14002e7c9:	int3   
   14002e7ca:	int3   
   14002e7cb:	int3   
   14002e7cc:	mov    rax,rsp
   14002e7cf:	mov    QWORD PTR [rax+0x8],rbx
   14002e7d3:	mov    QWORD PTR [rax+0x10],rbp
   14002e7d7:	mov    QWORD PTR [rax+0x18],rsi
   14002e7db:	mov    QWORD PTR [rax+0x20],rdi
   14002e7df:	push   r14
   14002e7e1:	sub    rsp,0x20
   14002e7e5:	mov    rbx,QWORD PTR [r9+0x38]
   14002e7e9:	mov    rsi,rdx
   14002e7ec:	mov    r14,r8
   14002e7ef:	mov    rbp,rcx
   14002e7f2:	mov    rdx,r9
   14002e7f5:	mov    rcx,rsi
   14002e7f8:	mov    rdi,r9
   14002e7fb:	lea    r8,[rbx+0x4]
   14002e7ff:	call   0x14002e74c
   14002e804:	mov    r11d,DWORD PTR [rbx+0x4]
   14002e808:	mov    r8d,0x1
   14002e80e:	mov    r10d,DWORD PTR [rbp+0x4]
   14002e812:	mov    eax,r11d
   14002e815:	and    eax,r8d
   14002e818:	and    r11d,0x2
   14002e81c:	and    r10b,0x66
   14002e820:	cmove  r11d,eax
   14002e824:	test   r11d,r11d
   14002e827:	je     0x14002e83d
   14002e829:	mov    r9,rdi
   14002e82c:	mov    r8,r14
   14002e82f:	mov    rdx,rsi
   14002e832:	mov    rcx,rbp
   14002e835:	call   0x14002e2e6
   14002e83a:	mov    r8d,eax
   14002e83d:	mov    rbx,QWORD PTR [rsp+0x30]
   14002e842:	mov    eax,r8d
   14002e845:	mov    rbp,QWORD PTR [rsp+0x38]
   14002e84a:	mov    rsi,QWORD PTR [rsp+0x40]
   14002e84f:	mov    rdi,QWORD PTR [rsp+0x48]
   14002e854:	add    rsp,0x20
   14002e858:	pop    r14
   14002e85a:	ret    
   14002e85b:	int3   
   14002e85c:	int3   
   14002e85d:	int3   
   14002e85e:	int3   
   14002e85f:	int3   
   14002e860:	int3   
   14002e861:	int3   
   14002e862:	jmp    QWORD PTR [rip+0x3c30]        # 0x140032498
   14002e868:	int3   
   14002e869:	int3   
   14002e86a:	int3   
   14002e86b:	int3   
   14002e86c:	int3   
   14002e86d:	int3   
   14002e86e:	int3   
   14002e86f:	int3   
   14002e870:	int3   
   14002e871:	int3   
   14002e872:	int3   
   14002e873:	int3   
   14002e874:	int3   
   14002e875:	int3   
   14002e876:	jmp    QWORD PTR [rip+0x3c14]        # 0x140032490
   14002e87c:	int3   
   14002e87d:	int3   
   14002e87e:	int3   
   14002e87f:	int3   
   14002e880:	int3   
   14002e881:	int3   
   14002e882:	jmp    QWORD PTR [rip+0x3d10]        # 0x140032598
   14002e888:	int3   
   14002e889:	int3   
   14002e88a:	int3   
   14002e88b:	int3   
   14002e88c:	int3   
   14002e88d:	int3   
   14002e88e:	int3   
   14002e88f:	int3   
   14002e890:	int3   
   14002e891:	int3   
   14002e892:	int3   
   14002e893:	int3   
   14002e894:	int3   
   14002e895:	int3   
   14002e896:	data16 nop WORD PTR [rax+rax*1+0x0]
   14002e8a0:	jmp    rax
   14002e8a2:	int3   
   14002e8a3:	int3   
   14002e8a4:	int3   
   14002e8a5:	int3   
   14002e8a6:	int3   
   14002e8a7:	int3   
   14002e8a8:	int3   
   14002e8a9:	int3   
   14002e8aa:	int3   
   14002e8ab:	int3   
   14002e8ac:	int3   
   14002e8ad:	int3   
   14002e8ae:	int3   
   14002e8af:	int3   
   14002e8b0:	int3   
   14002e8b1:	int3   
   14002e8b2:	int3   
   14002e8b3:	int3   
   14002e8b4:	int3   
   14002e8b5:	int3   
   14002e8b6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14002e8c0:	sub    rsp,0x10
   14002e8c4:	mov    QWORD PTR [rsp],r10
   14002e8c8:	mov    QWORD PTR [rsp+0x8],r11
   14002e8cd:	xor    r11,r11
   14002e8d0:	lea    r10,[rsp+0x18]
   14002e8d5:	sub    r10,rax
   14002e8d8:	cmovb  r10,r11
   14002e8dc:	mov    r11,QWORD PTR gs:0x10
   14002e8e5:	cmp    r10,r11
   14002e8e8:	jae    0x14002e8ff
   14002e8ea:	and    r10w,0xf000
   14002e8f0:	lea    r11,[r11-0x1000]
   14002e8f7:	test   BYTE PTR [r11],r11b
   14002e8fa:	cmp    r10,r11
   14002e8fd:	jne    0x14002e8f0
   14002e8ff:	mov    r10,QWORD PTR [rsp]
   14002e903:	mov    r11,QWORD PTR [rsp+0x8]
   14002e908:	add    rsp,0x10
   14002e90c:	ret    
   14002e90d:	int3   
   14002e90e:	int3   
   14002e90f:	int3   
   14002e910:	int3   
   14002e911:	int3   
   14002e912:	int3   
   14002e913:	int3   
   14002e914:	int3   
   14002e915:	int3   
   14002e916:	mov    QWORD PTR [rsp+0x10],rdx
   14002e91b:	push   rbp
   14002e91c:	sub    rsp,0x20
   14002e920:	mov    rbp,rdx
   14002e923:	mov    rcx,QWORD PTR [rbp+0x68]
   14002e927:	mov    QWORD PTR [rbp+0x68],rcx
   14002e92b:	xor    eax,eax
   14002e92d:	add    rcx,0x1
   14002e931:	je     0x14002e945
   14002e933:	cmp    rcx,0xffffffffffffffff
   14002e937:	ja     0x14002e940
   14002e939:	call   0x140023f10
   14002e93e:	jmp    0x14002e945
   14002e940:	call   0x14000203c
   14002e945:	mov    QWORD PTR [rbp+0x78],rax
   14002e949:	lea    rax,[rip+0xfffffffffffd3543]        # 0x140001e93
   14002e950:	add    rsp,0x20
   14002e954:	pop    rbp
   14002e955:	ret    
   14002e956:	int3   
   14002e957:	mov    QWORD PTR [rsp+0x10],rdx
   14002e95c:	push   rbp
   14002e95d:	sub    rsp,0x20
   14002e961:	mov    rbp,rdx
   14002e964:	xor    r8d,r8d
   14002e967:	mov    dl,0x1
   14002e969:	mov    rcx,QWORD PTR [rbp+0x60]
   14002e96d:	call   0x140001abc
   14002e972:	xor    edx,edx
   14002e974:	xor    ecx,ecx
   14002e976:	call   0x14002e2da
   14002e97b:	nop
   14002e97c:	int3   
   14002e97d:	int3   
   14002e97e:	int3   
   14002e97f:	int3   
   14002e980:	int3   
   14002e981:	int3   
   14002e982:	lea    rcx,[rdx+0x48]
   14002e989:	jmp    0x1400036a8
   14002e98e:	lea    rcx,[rdx+0x70]
   14002e995:	jmp    0x1400036a8
   14002e99a:	lea    rcx,[rdx+0x38]
   14002e9a1:	jmp    0x140017678
   14002e9a6:	mov    QWORD PTR [rsp+0x10],rdx
   14002e9ab:	push   rbp
   14002e9ac:	sub    rsp,0x30
   14002e9b0:	mov    rbp,rdx
   14002e9b3:	mov    rcx,QWORD PTR [rbp+0x68]
   14002e9b7:	call   0x140001fd4
   14002e9bc:	mov    DWORD PTR [rbp+0x30],eax
   14002e9bf:	lea    rax,[rip+0xfffffffffffd3f06]        # 0x1400028cc
   14002e9c6:	add    rsp,0x30
   14002e9ca:	pop    rbp
   14002e9cb:	ret    
   14002e9cc:	int3   
   14002e9cd:	int3   
   14002e9ce:	int3   
   14002e9cf:	int3   
   14002e9d0:	int3   
   14002e9d1:	int3   
   14002e9d2:	int3   
   14002e9d3:	mov    QWORD PTR [rsp+0x10],rdx
   14002e9d8:	push   rbp
   14002e9d9:	sub    rsp,0x20
   14002e9dd:	mov    rbp,rdx
   14002e9e0:	mov    rcx,QWORD PTR [rbp+0x28]
   14002e9e4:	call   0x140029e84
   14002e9e9:	mov    DWORD PTR [rbp+0x48],eax
   14002e9ec:	lea    rax,[rip+0xfffffffffffd4103]        # 0x140002af6
   14002e9f3:	add    rsp,0x20
   14002e9f7:	pop    rbp
   14002e9f8:	ret    
   14002e9f9:	int3   
   14002e9fa:	int3   
   14002e9fb:	int3   
   14002e9fc:	int3   
   14002e9fd:	int3   
   14002e9fe:	int3   
   14002e9ff:	int3   
   14002ea00:	lea    rcx,[rdx+0x40]
   14002ea07:	jmp    0x1400038b0
   14002ea0c:	int3   
   14002ea0d:	int3   
   14002ea0e:	int3   
   14002ea0f:	int3   
   14002ea10:	int3   
   14002ea11:	int3   
   14002ea12:	lea    rcx,[rdx+0x78]
   14002ea19:	jmp    0x1400038b0
   14002ea1e:	lea    rcx,[rdx+0xb8]
   14002ea25:	jmp    0x1400036e0
   14002ea2a:	lea    rcx,[rdx+0x90]
   14002ea31:	jmp    0x140003674
   14002ea36:	lea    rcx,[rdx+0xd0]
   14002ea3d:	jmp    0x1400036e0
   14002ea42:	mov    QWORD PTR [rsp+0x10],rdx
   14002ea47:	push   rbx
   14002ea48:	push   rbp
   14002ea49:	push   rdi
   14002ea4a:	sub    rsp,0x70
   14002ea4e:	mov    rbp,rdx
   14002ea51:	lea    rcx,[rip+0x1c620]        # 0x14004b078
   14002ea58:	mov    rax,QWORD PTR [rip+0x1c619]        # 0x14004b078
   14002ea5f:	cmp    rax,rcx
   14002ea62:	je     0x14002eaa7
   14002ea64:	test   BYTE PTR [rax+0x1c],0x1
   14002ea68:	je     0x14002eaa7
   14002ea6a:	mov    rdi,QWORD PTR [rbp+0x108]
   14002ea71:	mov    rax,QWORD PTR [rdi]
   14002ea74:	mov    rbx,QWORD PTR [rax+0x8]
   14002ea78:	mov    rcx,rbx
   14002ea7b:	call   QWORD PTR [rip+0x3c27]        # 0x1400326a8
   14002ea81:	mov    rcx,rdi
   14002ea84:	call   rbx
   14002ea86:	mov    r9,rax
   14002ea89:	mov    edx,0x17
   14002ea8e:	lea    r8,[rip+0x6a1b]        # 0x1400354b0
   14002ea95:	mov    rcx,QWORD PTR [rip+0x1c5dc]        # 0x14004b078
   14002ea9c:	mov    rcx,QWORD PTR [rcx+0x10]
   14002eaa0:	call   0x1400038e0
   14002eaa5:	jmp    0x14002eaae
   14002eaa7:	mov    rdi,QWORD PTR [rbp+0x108]
   14002eaae:	mov    rax,QWORD PTR [rdi]
   14002eab1:	mov    rbx,QWORD PTR [rax+0x8]
   14002eab5:	mov    rcx,rbx
   14002eab8:	call   QWORD PTR [rip+0x3bea]        # 0x1400326a8
   14002eabe:	mov    rcx,rdi
   14002eac1:	call   rbx
   14002eac3:	mov    rdx,rax
   14002eac6:	lea    rcx,[rip+0x6703]        # 0x1400351d0
   14002eacd:	call   QWORD PTR [rip+0x385d]        # 0x140032330
   14002ead3:	mov    rcx,rdi
   14002ead6:	call   0x140001fd4
   14002eadb:	mov    DWORD PTR [rbp+0x80],eax
   14002eae1:	lea    rax,[rip+0xfffffffffffd4aa1]        # 0x140003589
   14002eae8:	add    rsp,0x70
   14002eaec:	pop    rdi
   14002eaed:	pop    rbp
   14002eaee:	pop    rbx
   14002eaef:	ret    
   14002eaf0:	int3   
   14002eaf1:	mov    QWORD PTR [rsp+0x10],rdx
   14002eaf6:	push   rbx
   14002eaf7:	push   rbp
   14002eaf8:	push   rdi
   14002eaf9:	sub    rsp,0x70
   14002eafd:	mov    rbp,rdx
   14002eb00:	lea    rcx,[rip+0x1c571]        # 0x14004b078
   14002eb07:	mov    rax,QWORD PTR [rip+0x1c56a]        # 0x14004b078
   14002eb0e:	cmp    rax,rcx
   14002eb11:	je     0x14002eb56
   14002eb13:	test   BYTE PTR [rax+0x1c],0x1
   14002eb17:	je     0x14002eb56
   14002eb19:	mov    rdi,QWORD PTR [rbp+0x100]
   14002eb20:	mov    rax,QWORD PTR [rdi]
   14002eb23:	mov    rbx,QWORD PTR [rax+0x8]
   14002eb27:	mov    rcx,rbx
   14002eb2a:	call   QWORD PTR [rip+0x3b78]        # 0x1400326a8
   14002eb30:	mov    rcx,rdi
   14002eb33:	call   rbx
   14002eb35:	mov    r9,rax
   14002eb38:	mov    edx,0x1b
   14002eb3d:	lea    r8,[rip+0x696c]        # 0x1400354b0
   14002eb44:	mov    rcx,QWORD PTR [rip+0x1c52d]        # 0x14004b078
   14002eb4b:	mov    rcx,QWORD PTR [rcx+0x10]
   14002eb4f:	call   0x1400038e0
   14002eb54:	jmp    0x14002eb5d
   14002eb56:	mov    rdi,QWORD PTR [rbp+0x100]
   14002eb5d:	mov    rax,QWORD PTR [rdi]
   14002eb60:	mov    rbx,QWORD PTR [rax+0x8]
   14002eb64:	mov    rcx,rbx
   14002eb67:	call   QWORD PTR [rip+0x3b3b]        # 0x1400326a8
   14002eb6d:	mov    rcx,rdi
   14002eb70:	call   rbx
   14002eb72:	mov    rdx,rax
   14002eb75:	lea    rcx,[rip+0x6824]        # 0x1400353a0
   14002eb7c:	call   QWORD PTR [rip+0x37ae]        # 0x140032330
   14002eb82:	mov    rcx,rdi
   14002eb85:	call   0x140001fd4
   14002eb8a:	mov    DWORD PTR [rbp+0x80],eax
   14002eb90:	lea    rax,[rip+0xfffffffffffd49f2]        # 0x140003589
   14002eb97:	add    rsp,0x70
   14002eb9b:	pop    rdi
   14002eb9c:	pop    rbp
   14002eb9d:	pop    rbx
   14002eb9e:	ret    
   14002eb9f:	int3   
   14002eba0:	mov    QWORD PTR [rsp+0x10],rdx
   14002eba5:	push   rbx
   14002eba6:	push   rbp
   14002eba7:	push   rdi
   14002eba8:	sub    rsp,0x70
   14002ebac:	mov    rbp,rdx
   14002ebaf:	lea    rcx,[rip+0x1c4c2]        # 0x14004b078
   14002ebb6:	mov    rax,QWORD PTR [rip+0x1c4bb]        # 0x14004b078
   14002ebbd:	cmp    rax,rcx
   14002ebc0:	je     0x14002ec05
   14002ebc2:	test   BYTE PTR [rax+0x1c],0x1
   14002ebc6:	je     0x14002ec05
   14002ebc8:	mov    rdi,QWORD PTR [rbp+0xf8]
   14002ebcf:	mov    rax,QWORD PTR [rdi]
   14002ebd2:	mov    rbx,QWORD PTR [rax+0x8]
   14002ebd6:	mov    rcx,rbx
   14002ebd9:	call   QWORD PTR [rip+0x3ac9]        # 0x1400326a8
   14002ebdf:	mov    rcx,rdi
   14002ebe2:	call   rbx
   14002ebe4:	mov    r9,rax
   14002ebe7:	mov    edx,0x1c
   14002ebec:	lea    r8,[rip+0x68bd]        # 0x1400354b0
   14002ebf3:	mov    rcx,QWORD PTR [rip+0x1c47e]        # 0x14004b078
   14002ebfa:	mov    rcx,QWORD PTR [rcx+0x10]
   14002ebfe:	call   0x1400038e0
   14002ec03:	jmp    0x14002ec0c
   14002ec05:	mov    rdi,QWORD PTR [rbp+0xf8]
   14002ec0c:	mov    rax,QWORD PTR [rdi]
   14002ec0f:	mov    rbx,QWORD PTR [rax+0x8]
   14002ec13:	mov    rcx,rbx
   14002ec16:	call   QWORD PTR [rip+0x3a8c]        # 0x1400326a8
   14002ec1c:	mov    rcx,rdi
   14002ec1f:	call   rbx
   14002ec21:	mov    rdx,rax
   14002ec24:	lea    rcx,[rip+0x67c5]        # 0x1400353f0
   14002ec2b:	call   QWORD PTR [rip+0x36ff]        # 0x140032330
   14002ec31:	nop
   14002ec32:	lea    rax,[rip+0xfffffffffffd48a7]        # 0x1400034e0
   14002ec39:	add    rsp,0x70
   14002ec3d:	pop    rdi
   14002ec3e:	pop    rbp
   14002ec3f:	pop    rbx
   14002ec40:	ret    
   14002ec41:	int3   
   14002ec42:	int3   
   14002ec43:	int3   
   14002ec44:	int3   
   14002ec45:	int3   
   14002ec46:	int3   
   14002ec47:	int3   
   14002ec48:	mov    rcx,QWORD PTR [rdx+0x40]
   14002ec4f:	jmp    0x140023f48
   14002ec54:	mov    QWORD PTR [rsp+0x10],rdx
   14002ec59:	push   rbx
   14002ec5a:	push   rbp
   14002ec5b:	push   rdi
   14002ec5c:	sub    rsp,0x40
   14002ec60:	mov    rbp,rdx
   14002ec63:	lea    rcx,[rip+0x1c40e]        # 0x14004b078
   14002ec6a:	mov    rax,QWORD PTR [rip+0x1c407]        # 0x14004b078
   14002ec71:	cmp    rax,rcx
   14002ec74:	je     0x14002ecb5
   14002ec76:	test   BYTE PTR [rax+0x1c],0x1
   14002ec7a:	je     0x14002ecb5
   14002ec7c:	mov    rdi,QWORD PTR [rbp+0x50]
   14002ec80:	mov    rax,QWORD PTR [rdi]
   14002ec83:	mov    rbx,QWORD PTR [rax+0x8]
   14002ec87:	mov    rcx,rbx
   14002ec8a:	call   QWORD PTR [rip+0x3a18]        # 0x1400326a8
   14002ec90:	mov    rcx,rdi
   14002ec93:	call   rbx
   14002ec95:	mov    r9,rax
   14002ec98:	mov    edx,0x16
   14002ec9d:	lea    r8,[rip+0x6bb4]        # 0x140035858
   14002eca4:	mov    rcx,QWORD PTR [rip+0x1c3cd]        # 0x14004b078
   14002ecab:	mov    rcx,QWORD PTR [rcx+0x10]
   14002ecaf:	call   0x1400038e0
   14002ecb4:	nop
   14002ecb5:	lea    rax,[rip+0xfffffffffffd5647]        # 0x140004303
   14002ecbc:	add    rsp,0x40
   14002ecc0:	pop    rdi
   14002ecc1:	pop    rbp
   14002ecc2:	pop    rbx
   14002ecc3:	ret    
   14002ecc4:	int3   
   14002ecc5:	int3   
   14002ecc6:	int3   
   14002ecc7:	int3   
   14002ecc8:	int3   
   14002ecc9:	int3   
   14002ecca:	int3   
   14002eccb:	mov    QWORD PTR [rsp+0x10],rdx
   14002ecd0:	push   rbx
   14002ecd1:	push   rbp
   14002ecd2:	push   rdi
   14002ecd3:	sub    rsp,0x20
   14002ecd7:	mov    rbp,rdx
   14002ecda:	lea    rcx,[rip+0x1c397]        # 0x14004b078
   14002ece1:	mov    rax,QWORD PTR [rip+0x1c390]        # 0x14004b078
   14002ece8:	cmp    rax,rcx
   14002eceb:	je     0x14002ed2c
   14002eced:	test   BYTE PTR [rax+0x1c],0x1
   14002ecf1:	je     0x14002ed2c
   14002ecf3:	mov    rdi,QWORD PTR [rbp+0x28]
   14002ecf7:	mov    rax,QWORD PTR [rdi]
   14002ecfa:	mov    rbx,QWORD PTR [rax+0x8]
   14002ecfe:	mov    rcx,rbx
   14002ed01:	call   QWORD PTR [rip+0x39a1]        # 0x1400326a8
   14002ed07:	mov    rcx,rdi
   14002ed0a:	call   rbx
   14002ed0c:	mov    r9,rax
   14002ed0f:	mov    edx,0x17
   14002ed14:	lea    r8,[rip+0x6b3d]        # 0x140035858
   14002ed1b:	mov    rcx,QWORD PTR [rip+0x1c356]        # 0x14004b078
   14002ed22:	mov    rcx,QWORD PTR [rcx+0x10]
   14002ed26:	call   0x1400038e0
   14002ed2b:	nop
   14002ed2c:	lea    rax,[rip+0xfffffffffffd56d2]        # 0x140004405
   14002ed33:	add    rsp,0x20
   14002ed37:	pop    rdi
   14002ed38:	pop    rbp
   14002ed39:	pop    rbx
   14002ed3a:	ret    
   14002ed3b:	int3   
   14002ed3c:	int3   
   14002ed3d:	int3   
   14002ed3e:	int3   
   14002ed3f:	int3   
   14002ed40:	int3   
   14002ed41:	int3   
   14002ed42:	mov    rcx,QWORD PTR [rdx+0x40]
   14002ed49:	add    rcx,0x8
   14002ed4d:	jmp    0x1400039c0
   14002ed52:	mov    rcx,QWORD PTR [rdx+0x40]
   14002ed59:	add    rcx,0x40
   14002ed5d:	jmp    0x1400036a8
   14002ed62:	mov    rcx,QWORD PTR [rdx+0x40]
   14002ed69:	add    rcx,0x48
   14002ed6d:	jmp    0x1400036a8
   14002ed72:	int3   
   14002ed73:	int3   
   14002ed74:	int3   
   14002ed75:	int3   
   14002ed76:	int3   
   14002ed77:	int3   
   14002ed78:	rex push rbp
   14002ed7a:	sub    rsp,0x20
   14002ed7e:	mov    rbp,rdx
   14002ed81:	mov    rax,QWORD PTR [rcx]
   14002ed84:	xor    ecx,ecx
   14002ed86:	cmp    DWORD PTR [rax],0xc0000017
   14002ed8c:	sete   cl
   14002ed8f:	mov    eax,ecx
   14002ed91:	add    rsp,0x20
   14002ed95:	pop    rbp
   14002ed96:	ret    
   14002ed97:	int3   
   14002ed98:	int3   
   14002ed99:	int3   
   14002ed9a:	int3   
   14002ed9b:	int3   
   14002ed9c:	int3   
   14002ed9d:	int3   
   14002ed9e:	mov    QWORD PTR [rsp+0x10],rdx
   14002eda3:	push   rbp
   14002eda4:	sub    rsp,0x20
   14002eda8:	mov    rbp,rdx
   14002edab:	lea    rax,[rip+0xfffffffffffd6206]        # 0x140004fb8
   14002edb2:	add    rsp,0x20
   14002edb6:	pop    rbp
   14002edb7:	ret    
   14002edb8:	int3   
   14002edb9:	lea    rcx,[rdx+0x40]
   14002edc0:	jmp    0x140004f0c
   14002edc5:	mov    QWORD PTR [rsp+0x10],rdx
   14002edca:	push   rbp
   14002edcb:	sub    rsp,0x20
   14002edcf:	mov    rbp,rdx
   14002edd2:	lea    rax,[rip+0xfffffffffffd6255]        # 0x14000502e
   14002edd9:	add    rsp,0x20
   14002eddd:	pop    rbp
   14002edde:	ret    
   14002eddf:	int3   
   14002ede0:	lea    rcx,[rdx+0xa8]
   14002ede7:	jmp    0x140004f0c
   14002edec:	int3   
   14002eded:	int3   
   14002edee:	int3   
   14002edef:	int3   
   14002edf0:	int3   
   14002edf1:	int3   
   14002edf2:	lea    rcx,[rdx+0x48]
   14002edf9:	jmp    0x140005800
   14002edfe:	int3   
   14002edff:	int3   
   14002ee00:	int3   
   14002ee01:	int3   
   14002ee02:	int3   
   14002ee03:	int3   
   14002ee04:	lea    rcx,[rdx+0x20]
   14002ee0b:	jmp    0x1400052e0
   14002ee10:	lea    rcx,[rdx+0x38]
   14002ee17:	jmp    0x140005800
   14002ee1c:	int3   
   14002ee1d:	int3   
   14002ee1e:	int3   
   14002ee1f:	int3   
   14002ee20:	int3   
   14002ee21:	int3   
   14002ee22:	lea    rcx,[rdx+0x80]
   14002ee29:	jmp    0x140005268
   14002ee2e:	mov    QWORD PTR [rsp+0x10],rdx
   14002ee33:	push   rbp
   14002ee34:	sub    rsp,0x30
   14002ee38:	mov    rbp,rdx
   14002ee3b:	lea    rax,[rip+0xfffffffffffd6b63]        # 0x1400059a5
   14002ee42:	add    rsp,0x30
   14002ee46:	pop    rbp
   14002ee47:	ret    
   14002ee48:	int3   
   14002ee49:	lea    rcx,[rdx+0x80]
   14002ee50:	jmp    0x140005268
   14002ee55:	mov    QWORD PTR [rsp+0x10],rdx
   14002ee5a:	push   rbp
   14002ee5b:	sub    rsp,0x30
   14002ee5f:	mov    rbp,rdx
   14002ee62:	lea    rax,[rip+0xfffffffffffd6d2d]        # 0x140005b96
   14002ee69:	add    rsp,0x30
   14002ee6d:	pop    rbp
   14002ee6e:	ret    
   14002ee6f:	int3   
   14002ee70:	int3   
   14002ee71:	int3   
   14002ee72:	int3   
   14002ee73:	int3   
   14002ee74:	int3   
   14002ee75:	int3   
   14002ee76:	lea    rcx,[rdx+0x90]
   14002ee7d:	jmp    0x140005f6c
   14002ee82:	lea    rcx,[rdx+0xa8]
   14002ee89:	jmp    0x140005f6c
   14002ee8e:	int3   
   14002ee8f:	int3   
   14002ee90:	int3   
   14002ee91:	int3   
   14002ee92:	int3   
   14002ee93:	int3   
   14002ee94:	lea    rcx,[rdx+0x60]
   14002ee9b:	jmp    0x140005800
   14002eea0:	lea    rcx,[rdx+0x70]
   14002eea7:	jmp    0x140005268
   14002eeac:	mov    QWORD PTR [rsp+0x10],rdx
   14002eeb1:	push   rbp
   14002eeb2:	sub    rsp,0x30
   14002eeb6:	mov    rbp,rdx
   14002eeb9:	lea    rax,[rip+0xfffffffffffd7e1b]        # 0x140006cdb
   14002eec0:	add    rsp,0x30
   14002eec4:	pop    rbp
   14002eec5:	ret    
   14002eec6:	int3   
   14002eec7:	int3   
   14002eec8:	int3   
   14002eec9:	int3   
   14002eeca:	int3   
   14002eecb:	int3   
   14002eecc:	int3   
   14002eecd:	lea    rcx,[rdx+0xc8]
   14002eed4:	jmp    0x14000dec0
   14002eed9:	lea    rcx,[rdx+0x80]
   14002eee0:	jmp    0x1400036e0
   14002eee5:	lea    rcx,[rdx+0xb0]
   14002eeec:	jmp    0x140003674
   14002eef1:	lea    rcx,[rdx+0x98]
   14002eef8:	jmp    0x1400036e0
   14002eefd:	mov    QWORD PTR [rsp+0x10],rdx
   14002ef02:	push   rbx
   14002ef03:	push   rbp
   14002ef04:	push   rdi
   14002ef05:	sub    rsp,0x60
   14002ef09:	mov    rbp,rdx
   14002ef0c:	lea    rcx,[rip+0x1c165]        # 0x14004b078
   14002ef13:	mov    rax,QWORD PTR [rip+0x1c15e]        # 0x14004b078
   14002ef1a:	cmp    rax,rcx
   14002ef1d:	je     0x14002ef5f
   14002ef1f:	test   BYTE PTR [rax+0x1c],0x1
   14002ef23:	je     0x14002ef5f
   14002ef25:	mov    rdi,QWORD PTR [rbp+0x70]
   14002ef29:	mov    rax,QWORD PTR [rdi]
   14002ef2c:	mov    rbx,QWORD PTR [rax+0x8]
   14002ef30:	mov    rcx,rbx
   14002ef33:	call   QWORD PTR [rip+0x376f]        # 0x1400326a8
   14002ef39:	mov    rcx,rdi
   14002ef3c:	call   rbx
   14002ef3e:	mov    r9,rax
   14002ef41:	mov    edx,0xc
   14002ef46:	lea    r8,[rip+0x7b9b]        # 0x140036ae8
   14002ef4d:	mov    rcx,QWORD PTR [rip+0x1c124]        # 0x14004b078
   14002ef54:	mov    rcx,QWORD PTR [rcx+0x10]
   14002ef58:	call   0x1400038e0
   14002ef5d:	jmp    0x14002ef63
   14002ef5f:	mov    rdi,QWORD PTR [rbp+0x70]
   14002ef63:	mov    rax,QWORD PTR [rdi]
   14002ef66:	mov    rbx,QWORD PTR [rax+0x8]
   14002ef6a:	mov    rcx,rbx
   14002ef6d:	call   QWORD PTR [rip+0x3735]        # 0x1400326a8
   14002ef73:	mov    rcx,rdi
   14002ef76:	call   rbx
   14002ef78:	mov    rdx,rax
   14002ef7b:	lea    rcx,[rip+0x691e]        # 0x1400358a0
   14002ef82:	call   QWORD PTR [rip+0x33a8]        # 0x140032330
   14002ef88:	nop
   14002ef89:	lea    rax,[rip+0xfffffffffffd8eb9]        # 0x140007e49
   14002ef90:	add    rsp,0x60
   14002ef94:	pop    rdi
   14002ef95:	pop    rbp
   14002ef96:	pop    rbx
   14002ef97:	ret    
   14002ef98:	int3   
   14002ef99:	int3   
   14002ef9a:	int3   
   14002ef9b:	int3   
   14002ef9c:	int3   
   14002ef9d:	int3   
   14002ef9e:	int3   
   14002ef9f:	lea    rcx,[rdx+0x30]
   14002efa6:	jmp    0x1400038b0
   14002efab:	lea    rcx,[rdx+0x38]
   14002efb2:	jmp    0x1400036a8
   14002efb7:	lea    rcx,[rdx+0x40]
   14002efbe:	jmp    0x14000d0bc
   14002efc3:	mov    QWORD PTR [rsp+0x10],rdx
   14002efc8:	push   rbp
   14002efc9:	sub    rsp,0x30
   14002efcd:	mov    rbp,rdx
   14002efd0:	mov    rcx,QWORD PTR [rbp+0x50]
   14002efd4:	call   0x140001fd4
   14002efd9:	mov    DWORD PTR [rbp+0xa8],eax
   14002efdf:	lea    rdx,[rip+0x1c092]        # 0x14004b078
   14002efe6:	mov    rcx,QWORD PTR [rip+0x1c08b]        # 0x14004b078
   14002efed:	cmp    rcx,rdx
   14002eff0:	je     0x14002f011
   14002eff2:	test   BYTE PTR [rcx+0x1c],0x1
   14002eff6:	je     0x14002f011
   14002eff8:	mov    edx,0xd
   14002effd:	mov    r9d,eax
   14002f000:	lea    r8,[rip+0x7ae1]        # 0x140036ae8
   14002f007:	mov    rcx,QWORD PTR [rcx+0x10]
   14002f00b:	call   0x140001f70
   14002f010:	nop
   14002f011:	lea    rax,[rip+0xfffffffffffd9449]        # 0x140008461
   14002f018:	add    rsp,0x30
   14002f01c:	pop    rbp
   14002f01d:	ret    
   14002f01e:	int3   
   14002f01f:	int3   
   14002f020:	int3   
   14002f021:	int3   
   14002f022:	int3   
   14002f023:	int3   
   14002f024:	int3   
   14002f025:	lea    rcx,[rdx+0x90]
   14002f02c:	jmp    0x14000de98
   14002f031:	lea    rcx,[rdx+0x140]
   14002f038:	jmp    0x14000dec0
   14002f03d:	mov    rcx,QWORD PTR [rdx+0xd0]
   14002f044:	jmp    0x140023f48
   14002f049:	lea    rcx,[rdx+0x68]
   14002f050:	jmp    0x14000de2c
   14002f055:	lea    rcx,[rdx+0xa0]
   14002f05c:	jmp    0x14000d10c
   14002f061:	mov    rcx,QWORD PTR [rdx+0x80]
   14002f068:	jmp    0x140023f48
   14002f06d:	lea    rcx,[rdx+0x98]
   14002f074:	jmp    0x14000de2c
   14002f079:	lea    rcx,[rdx+0x70]
   14002f080:	jmp    0x14000de2c
   14002f085:	mov    QWORD PTR [rsp+0x10],rdx
   14002f08a:	push   rbp
   14002f08b:	sub    rsp,0x60
   14002f08f:	mov    rbp,rdx
   14002f092:	mov    rcx,QWORD PTR [rbp+0x120]
   14002f099:	call   0x140001fd4
   14002f09e:	cmp    eax,0x1
   14002f0a1:	je     0x14002f0ad
   14002f0a3:	xor    edx,edx
   14002f0a5:	xor    ecx,ecx
   14002f0a7:	call   0x14002e2da
   14002f0ac:	int3   
   14002f0ad:	lea    rax,[rip+0x1bfc4]        # 0x14004b078
   14002f0b4:	mov    rcx,QWORD PTR [rip+0x1bfbd]        # 0x14004b078
   14002f0bb:	cmp    rcx,rax
   14002f0be:	je     0x14002f0db
   14002f0c0:	test   BYTE PTR [rcx+0x1c],0x1
   14002f0c4:	je     0x14002f0db
   14002f0c6:	mov    edx,0xf
   14002f0cb:	lea    r8,[rip+0x7a16]        # 0x140036ae8
   14002f0d2:	mov    rcx,QWORD PTR [rcx+0x10]
   14002f0d6:	call   0x140001f08
   14002f0db:	lea    rcx,[rip+0x6a9e]        # 0x140035b80
   14002f0e2:	call   QWORD PTR [rip+0x3248]        # 0x140032330
   14002f0e8:	mov    rcx,QWORD PTR [rbp+0x78]
   14002f0ec:	mov    rax,QWORD PTR [rbp+0xf8]
   14002f0f3:	mov    QWORD PTR [rax],rcx
   14002f0f6:	mov    rcx,QWORD PTR [rbp+0x80]
   14002f0fd:	mov    rax,QWORD PTR [rbp+0xe8]
   14002f104:	mov    QWORD PTR [rax],rcx
   14002f107:	lea    rax,[rip+0xfffffffffffd9cec]        # 0x140008dfa
   14002f10e:	add    rsp,0x60
   14002f112:	pop    rbp
   14002f113:	ret    
   14002f114:	int3   
   14002f115:	lea    rcx,[rdx+0xa8]
   14002f11c:	jmp    0x14000cec0
   14002f121:	lea    rcx,[rdx+0x88]
   14002f128:	jmp    0x14000cdd8
   14002f12d:	lea    rcx,[rdx+0xb0]
   14002f134:	jmp    0x14000ce88
   14002f139:	lea    rcx,[rdx+0x148]
   14002f140:	jmp    0x14000dec0
   14002f145:	lea    rcx,[rdx+0x118]
   14002f14c:	jmp    0x14000dec0
   14002f151:	int3   
   14002f152:	int3   
   14002f153:	int3   
   14002f154:	int3   
   14002f155:	int3   
   14002f156:	int3   
   14002f157:	lea    rcx,[rdx+0xd0]
   14002f15e:	jmp    0x14000de98
   14002f163:	lea    rcx,[rdx+0x88]
   14002f16a:	jmp    0x14000ce88
   14002f16f:	lea    rcx,[rdx+0x40]
   14002f176:	jmp    0x14000ce88
   14002f17b:	lea    rcx,[rdx+0xa8]
   14002f182:	jmp    0x14000ce88
   14002f187:	lea    rcx,[rdx+0x60]
   14002f18e:	jmp    0x14000cdd8
   14002f193:	lea    rcx,[rdx+0x78]
   14002f19a:	jmp    0x14000cdd8
   14002f19f:	lea    rcx,[rdx+0x80]
   14002f1a6:	jmp    0x14000ce88
   14002f1ab:	lea    rcx,[rdx+0x110]
   14002f1b2:	jmp    0x140017678
   14002f1b7:	lea    rcx,[rdx+0xd8]
   14002f1be:	jmp    0x140017678
   14002f1c3:	lea    rcx,[rdx+0xe0]
   14002f1ca:	jmp    0x140017678
   14002f1cf:	lea    rcx,[rdx+0xe8]
   14002f1d6:	jmp    0x14000ce88
   14002f1db:	lea    rcx,[rdx+0xc0]
   14002f1e2:	jmp    0x1400036a8
   14002f1e7:	mov    QWORD PTR [rsp+0x10],rdx
   14002f1ec:	push   rbx
   14002f1ed:	push   rbp
   14002f1ee:	push   rdi
   14002f1ef:	sub    rsp,0x30
   14002f1f3:	mov    rbp,rdx
   14002f1f6:	lea    rcx,[rip+0x1be7b]        # 0x14004b078
   14002f1fd:	mov    rax,QWORD PTR [rip+0x1be74]        # 0x14004b078
   14002f204:	cmp    rax,rcx
   14002f207:	je     0x14002f24b
   14002f209:	test   BYTE PTR [rax+0x1c],0x2
   14002f20d:	je     0x14002f24b
   14002f20f:	mov    rdi,QWORD PTR [rbp+0x1e8]
   14002f216:	mov    rax,QWORD PTR [rdi]
   14002f219:	mov    rbx,QWORD PTR [rax+0x8]
   14002f21d:	mov    rcx,rbx
   14002f220:	call   QWORD PTR [rip+0x3482]        # 0x1400326a8
   14002f226:	mov    rcx,rdi
   14002f229:	call   rbx
   14002f22b:	mov    edx,0x2b
   14002f230:	mov    r9,rax
   14002f233:	lea    r8,[rip+0x78ae]        # 0x140036ae8
   14002f23a:	mov    rcx,QWORD PTR [rip+0x1be37]        # 0x14004b078
   14002f241:	mov    rcx,QWORD PTR [rcx+0x10]
   14002f245:	call   0x1400038e0
   14002f24a:	nop
   14002f24b:	lea    rax,[rip+0xfffffffffffdb0ca]        # 0x14000a31c
   14002f252:	add    rsp,0x30
   14002f256:	pop    rdi
   14002f257:	pop    rbp
   14002f258:	pop    rbx
   14002f259:	ret    
   14002f25a:	int3   
   14002f25b:	lea    rcx,[rdx+0x118]
   14002f262:	jmp    0x14000ce88
   14002f267:	mov    QWORD PTR [rsp+0x10],rdx
   14002f26c:	push   rbx
   14002f26d:	push   rbp
   14002f26e:	push   rsi
   14002f26f:	push   rdi
   14002f270:	sub    rsp,0x38
   14002f274:	mov    rbp,rdx
   14002f277:	mov    rdi,QWORD PTR [rbp+0x1b8]
   14002f27e:	mov    rcx,rdi
   14002f281:	call   0x140001fd4
   14002f286:	mov    esi,eax
   14002f288:	lea    rax,[rip+0x1bde9]        # 0x14004b078
   14002f28f:	mov    rcx,QWORD PTR [rip+0x1bde2]        # 0x14004b078
   14002f296:	cmp    rcx,rax
   14002f299:	je     0x14002f2d5
   14002f29b:	test   BYTE PTR [rcx+0x1c],0x1
   14002f29f:	je     0x14002f2d5
   14002f2a1:	mov    rdx,QWORD PTR [rdi]
   14002f2a4:	mov    rbx,QWORD PTR [rdx+0x8]
   14002f2a8:	mov    rcx,rbx
   14002f2ab:	call   QWORD PTR [rip+0x33f7]        # 0x1400326a8
   14002f2b1:	mov    rcx,rdi
   14002f2b4:	call   rbx
   14002f2b6:	mov    r9,rax
   14002f2b9:	mov    edx,0x2c
   14002f2be:	lea    r8,[rip+0x7823]        # 0x140036ae8
   14002f2c5:	mov    rcx,QWORD PTR [rip+0x1bdac]        # 0x14004b078
   14002f2cc:	mov    rcx,QWORD PTR [rcx+0x10]
   14002f2d0:	call   0x1400038e0
   14002f2d5:	mov    edx,esi
   14002f2d7:	lea    rcx,[rip+0x72c2]        # 0x1400365a0
   14002f2de:	call   QWORD PTR [rip+0x304c]        # 0x140032330
   14002f2e4:	xor    edx,edx
   14002f2e6:	xor    ecx,ecx
   14002f2e8:	call   0x14002e2da
   14002f2ed:	nop
   14002f2ee:	int3   
   14002f2ef:	int3   
   14002f2f0:	int3   
   14002f2f1:	int3   
   14002f2f2:	int3   
   14002f2f3:	int3   
   14002f2f4:	lea    rcx,[rdx+0x40]
   14002f2fb:	jmp    0x14000de98
   14002f300:	lea    rcx,[rdx+0x38]
   14002f307:	jmp    0x14000ce88
   14002f30c:	int3   
   14002f30d:	int3   
   14002f30e:	int3   
   14002f30f:	int3   
   14002f310:	int3   
   14002f311:	int3   
   14002f312:	lea    rcx,[rdx+0x98]
   14002f319:	jmp    0x14000de98
   14002f31e:	mov    rcx,QWORD PTR [rdx+0x80]
   14002f325:	jmp    0x140023f48
   14002f32a:	lea    rcx,[rdx+0x38]
   14002f331:	jmp    0x14000cdd8
   14002f336:	int3   
   14002f337:	int3   
   14002f338:	int3   
   14002f339:	int3   
   14002f33a:	int3   
   14002f33b:	int3   
   14002f33c:	lea    rcx,[rdx+0x38]
   14002f343:	jmp    0x14000de98
   14002f348:	lea    rcx,[rdx+0x98]
   14002f34f:	jmp    0x14000cdd8
   14002f354:	lea    rcx,[rdx+0x30]
   14002f35b:	jmp    0x1400036a8
   14002f360:	int3   
   14002f361:	int3   
   14002f362:	int3   
   14002f363:	int3   
   14002f364:	int3   
   14002f365:	int3   
   14002f366:	lea    rcx,[rdx+0x48]
   14002f36d:	jmp    0x14000de98
   14002f372:	lea    rcx,[rdx+0x38]
   14002f379:	jmp    0x1400036a8
   14002f37e:	lea    rcx,[rdx+0x80]
   14002f385:	jmp    0x1400037e0
   14002f38a:	lea    rcx,[rdx+0x60]
   14002f391:	jmp    0x1400037e0
   14002f396:	lea    rcx,[rdx+0x60]
   14002f39d:	jmp    0x1400037e0
   14002f3a2:	int3   
   14002f3a3:	int3   
   14002f3a4:	int3   
   14002f3a5:	int3   
   14002f3a6:	int3   
   14002f3a7:	int3   
   14002f3a8:	lea    rcx,[rdx+0x70]
   14002f3af:	jmp    0x14000de98
   14002f3b4:	int3   
   14002f3b5:	int3   
   14002f3b6:	int3   
   14002f3b7:	int3   
   14002f3b8:	int3   
   14002f3b9:	int3   
   14002f3ba:	lea    rcx,[rdx+0x38]
   14002f3c1:	jmp    0x14000ce38
   14002f3c6:	lea    rcx,[rdx+0x80]
   14002f3cd:	jmp    0x14000dec0
   14002f3d2:	int3   
   14002f3d3:	int3   
   14002f3d4:	int3   
   14002f3d5:	int3   
   14002f3d6:	int3   
   14002f3d7:	int3   
   14002f3d8:	lea    rcx,[rdx+0x50]
   14002f3df:	jmp    0x140005258
   14002f3e4:	int3   
   14002f3e5:	int3   
   14002f3e6:	int3   
   14002f3e7:	int3   
   14002f3e8:	int3   
   14002f3e9:	int3   
   14002f3ea:	rex push rbp
   14002f3ec:	sub    rsp,0x20
   14002f3f0:	mov    rbp,rdx
   14002f3f3:	mov    eax,DWORD PTR [rbp+0x20]
   14002f3f6:	and    eax,0x1
   14002f3f9:	test   eax,eax
   14002f3fb:	je     0x14002f40a
   14002f3fd:	and    DWORD PTR [rbp+0x20],0xfffffffe
   14002f401:	mov    rcx,QWORD PTR [rbp+0x40]
   14002f405:	call   0x14000de2c
   14002f40a:	add    rsp,0x20
   14002f40e:	pop    rbp
   14002f40f:	ret    
   14002f410:	mov    rcx,QWORD PTR [rdx+0x48]
   14002f417:	jmp    0x140023f48
   14002f41c:	lea    rcx,[rdx+0x48]
   14002f423:	jmp    0x14000de2c
   14002f428:	int3   
   14002f429:	int3   
   14002f42a:	int3   
   14002f42b:	int3   
   14002f42c:	int3   
   14002f42d:	int3   
   14002f42e:	mov    rcx,QWORD PTR [rdx+0x40]
   14002f435:	jmp    0x140023f48
   14002f43a:	lea    rcx,[rdx+0x40]
   14002f441:	jmp    0x14000de2c
   14002f446:	int3   
   14002f447:	int3   
   14002f448:	int3   
   14002f449:	int3   
   14002f44a:	int3   
   14002f44b:	int3   
   14002f44c:	lea    rcx,[rdx+0xa0]
   14002f453:	jmp    0x1400038b0
   14002f458:	mov    QWORD PTR [rsp+0x10],rdx
   14002f45d:	push   rbp
   14002f45e:	sub    rsp,0xa0
   14002f465:	mov    rbp,rdx
   14002f468:	mov    rcx,QWORD PTR [rbp+0xb0]
   14002f46f:	call   0x140001fd4
   14002f474:	mov    DWORD PTR [rbp+0xe0],eax
   14002f47a:	lea    rax,[rip+0xfffffffffffdca51]        # 0x14000bed2
   14002f481:	add    rsp,0xa0
   14002f488:	pop    rbp
   14002f489:	ret    
   14002f48a:	int3   
   14002f48b:	int3   
   14002f48c:	int3   
   14002f48d:	int3   
   14002f48e:	int3   
   14002f48f:	int3   
   14002f490:	int3   
   14002f491:	lea    rcx,[rdx+0x30]
   14002f498:	jmp    0x1400038b0
   14002f49d:	mov    QWORD PTR [rsp+0x10],rdx
   14002f4a2:	push   rbp
   14002f4a3:	sub    rsp,0x30
   14002f4a7:	mov    rbp,rdx
   14002f4aa:	mov    rcx,QWORD PTR [rbp+0x40]
   14002f4ae:	call   0x140001fd4
   14002f4b3:	mov    DWORD PTR [rbp+0x60],eax
   14002f4b6:	lea    rax,[rip+0xfffffffffffdcb2d]        # 0x14000bfea
   14002f4bd:	add    rsp,0x30
   14002f4c1:	pop    rbp
   14002f4c2:	ret    
   14002f4c3:	int3   
   14002f4c4:	int3   
   14002f4c5:	int3   
   14002f4c6:	int3   
   14002f4c7:	int3   
   14002f4c8:	int3   
   14002f4c9:	int3   
   14002f4ca:	lea    rcx,[rdx+0x40]
   14002f4d1:	jmp    0x14000ce88
   14002f4d6:	lea    rcx,[rdx+0x30]
   14002f4dd:	jmp    0x14000ce88
   14002f4e2:	lea    rcx,[rdx+0x28]
   14002f4e9:	jmp    0x14000ce88
   14002f4ee:	int3   
   14002f4ef:	int3   
   14002f4f0:	int3   
   14002f4f1:	int3   
   14002f4f2:	int3   
   14002f4f3:	int3   
   14002f4f4:	lea    rcx,[rdx+0x40]
   14002f4fb:	jmp    0x140003674
   14002f500:	lea    rcx,[rdx+0x58]
   14002f507:	jmp    0x140003674
   14002f50c:	lea    rcx,[rdx+0x38]
   14002f513:	jmp    0x14000c828
   14002f518:	lea    rcx,[rdx+0x80]
   14002f51f:	jmp    0x1400037e0
   14002f524:	int3   
   14002f525:	int3   
   14002f526:	int3   
   14002f527:	int3   
   14002f528:	int3   
   14002f529:	int3   
   14002f52a:	lea    rcx,[rdx+0x58]
   14002f531:	jmp    0x14000ce88
   14002f536:	lea    rcx,[rdx+0x40]
   14002f53d:	jmp    0x140003674
   14002f542:	lea    rcx,[rdx+0x60]
   14002f549:	jmp    0x140003674
   14002f54e:	lea    rcx,[rdx+0x30]
   14002f555:	jmp    0x14000c828
   14002f55a:	lea    rcx,[rdx+0x88]
   14002f561:	jmp    0x1400037e0
   14002f566:	int3   
   14002f567:	int3   
   14002f568:	int3   
   14002f569:	int3   
   14002f56a:	int3   
   14002f56b:	int3   
   14002f56c:	mov    QWORD PTR [rsp+0x10],rdx
   14002f571:	push   rbp
   14002f572:	sub    rsp,0x20
   14002f576:	mov    rbp,rdx
   14002f579:	mov    rcx,QWORD PTR [rbp+0x40]
   14002f57d:	call   0x140003674
   14002f582:	xor    edx,edx
   14002f584:	xor    ecx,ecx
   14002f586:	call   0x14002e2da
   14002f58b:	nop
   14002f58c:	int3   
   14002f58d:	int3   
   14002f58e:	int3   
   14002f58f:	int3   
   14002f590:	int3   
   14002f591:	int3   
   14002f592:	mov    QWORD PTR [rsp+0x10],rdx
   14002f597:	push   rbp
   14002f598:	sub    rsp,0x20
   14002f59c:	mov    rbp,rdx
   14002f59f:	mov    rdx,QWORD PTR [rbp+0x48]
   14002f5a3:	call   0x140003760
   14002f5a8:	xor    edx,edx
   14002f5aa:	xor    ecx,ecx
   14002f5ac:	call   0x14002e2da
   14002f5b1:	nop
   14002f5b2:	int3   
   14002f5b3:	int3   
   14002f5b4:	int3   
   14002f5b5:	int3   
   14002f5b6:	int3   
   14002f5b7:	int3   
   14002f5b8:	mov    QWORD PTR [rsp+0x10],rdx
   14002f5bd:	push   rbp
   14002f5be:	sub    rsp,0x30
   14002f5c2:	mov    rbp,rdx
   14002f5c5:	mov    rdx,QWORD PTR [rbp+0x78]
   14002f5c9:	call   0x140003760
   14002f5ce:	xor    edx,edx
   14002f5d0:	xor    ecx,ecx
   14002f5d2:	call   0x14002e2da
   14002f5d7:	nop
   14002f5d8:	int3   
   14002f5d9:	int3   
   14002f5da:	int3   
   14002f5db:	int3   
   14002f5dc:	int3   
   14002f5dd:	int3   
   14002f5de:	mov    QWORD PTR [rsp+0x10],rdx
   14002f5e3:	push   rbp
   14002f5e4:	sub    rsp,0x20
   14002f5e8:	mov    rbp,rdx
   14002f5eb:	lea    rax,[rip+0xfffffffffffddf23]        # 0x14000d515
   14002f5f2:	add    rsp,0x20
   14002f5f6:	pop    rbp
   14002f5f7:	ret    
   14002f5f8:	int3   
   14002f5f9:	int3   
   14002f5fa:	int3   
   14002f5fb:	int3   
   14002f5fc:	int3   
   14002f5fd:	int3   
   14002f5fe:	int3   
   14002f5ff:	rex push rbp
   14002f601:	sub    rsp,0x20
   14002f605:	mov    rbp,rdx
   14002f608:	lea    rdx,[rip+0x20309]        # 0x14004f918
   14002f60f:	mov    rcx,QWORD PTR [rbp+0x48]
   14002f613:	call   0x140023f48
   14002f618:	add    rsp,0x20
   14002f61c:	pop    rbp
   14002f61d:	ret    
   14002f61e:	mov    rcx,QWORD PTR [rdx+0x48]
   14002f625:	jmp    0x140012880
   14002f62a:	mov    QWORD PTR [rsp+0x10],rdx
   14002f62f:	push   rbp
   14002f630:	sub    rsp,0x20
   14002f634:	mov    rbp,rdx
   14002f637:	mov    rcx,QWORD PTR [rbp+0x28]
   14002f63b:	call   0x140029e84
   14002f640:	mov    DWORD PTR [rbp+0x48],eax
   14002f643:	lea    rax,[rip+0xfffffffffffde08c]        # 0x14000d6d6
   14002f64a:	add    rsp,0x20
   14002f64e:	pop    rbp
   14002f64f:	ret    
   14002f650:	int3   
   14002f651:	int3   
   14002f652:	int3   
   14002f653:	int3   
   14002f654:	int3   
   14002f655:	int3   
   14002f656:	int3   
   14002f657:	mov    QWORD PTR [rsp+0x10],rdx
   14002f65c:	push   rbx
   14002f65d:	push   rbp
   14002f65e:	sub    rsp,0x28
   14002f662:	mov    rbp,rdx
   14002f665:	mov    rbx,QWORD PTR [rbp+0x58]
   14002f669:	jmp    0x14002f691
   14002f66b:	cmp    QWORD PTR [rbx+0x18],0x8
   14002f670:	jb     0x14002f67b
   14002f672:	mov    rcx,QWORD PTR [rbx]
   14002f675:	call   QWORD PTR [rip+0x2f4d]        # 0x1400325c8
   14002f67b:	mov    QWORD PTR [rbx+0x18],0x7
   14002f683:	and    QWORD PTR [rbx+0x10],0x0
   14002f688:	xor    eax,eax
   14002f68a:	mov    WORD PTR [rbx],ax
   14002f68d:	add    rbx,0x20
   14002f691:	cmp    rbx,QWORD PTR [rbp+0x50]
   14002f695:	jne    0x14002f66b
   14002f697:	xor    edx,edx
   14002f699:	xor    ecx,ecx
   14002f69b:	call   0x14002e2da
   14002f6a0:	nop
   14002f6a1:	int3   
   14002f6a2:	int3   
   14002f6a3:	int3   
   14002f6a4:	int3   
   14002f6a5:	int3   
   14002f6a6:	int3   
   14002f6a7:	mov    QWORD PTR [rsp+0x10],rdx
   14002f6ac:	push   rbp
   14002f6ad:	sub    rsp,0x20
   14002f6b1:	mov    rbp,rdx
   14002f6b4:	mov    rcx,QWORD PTR [rbp+0x68]
   14002f6b8:	mov    QWORD PTR [rbp+0x68],rcx
   14002f6bc:	xor    eax,eax
   14002f6be:	add    rcx,0x1
   14002f6c2:	je     0x14002f6e2
   14002f6c4:	movabs rax,0x7fffffffffffffff
   14002f6ce:	cmp    rcx,rax
   14002f6d1:	ja     0x14002f6dd
   14002f6d3:	add    rcx,rcx
   14002f6d6:	call   0x140023f10
   14002f6db:	jmp    0x14002f6e2
   14002f6dd:	call   0x14000203c
   14002f6e2:	mov    QWORD PTR [rbp+0x78],rax
   14002f6e6:	lea    rax,[rip+0xfffffffffffde2d1]        # 0x14000d9be
   14002f6ed:	add    rsp,0x20
   14002f6f1:	pop    rbp
   14002f6f2:	ret    
   14002f6f3:	int3   
   14002f6f4:	mov    QWORD PTR [rsp+0x10],rdx
   14002f6f9:	push   rbp
   14002f6fa:	sub    rsp,0x20
   14002f6fe:	mov    rbp,rdx
   14002f701:	xor    r8d,r8d
   14002f704:	mov    dl,0x1
   14002f706:	mov    rcx,QWORD PTR [rbp+0x60]
   14002f70a:	call   0x140003770
   14002f70f:	xor    edx,edx
   14002f711:	xor    ecx,ecx
   14002f713:	call   0x14002e2da
   14002f718:	nop
   14002f719:	int3   
   14002f71a:	int3   
   14002f71b:	int3   
   14002f71c:	int3   
   14002f71d:	int3   
   14002f71e:	int3   
   14002f71f:	mov    rcx,QWORD PTR [rdx+0x40]
   14002f726:	jmp    0x140023f48
   14002f72b:	int3   
   14002f72c:	int3   
   14002f72d:	int3   
   14002f72e:	int3   
   14002f72f:	int3   
   14002f730:	int3   
   14002f731:	mov    QWORD PTR [rsp+0x10],rdx
   14002f736:	push   rbp
   14002f737:	sub    rsp,0x20
   14002f73b:	mov    rbp,rdx
   14002f73e:	mov    rdx,QWORD PTR [rbp+0x40]
   14002f742:	call   0x140003760
   14002f747:	xor    edx,edx
   14002f749:	xor    ecx,ecx
   14002f74b:	call   0x14002e2da
   14002f750:	nop
   14002f751:	int3   
   14002f752:	int3   
   14002f753:	int3   
   14002f754:	int3   
   14002f755:	int3   
   14002f756:	int3   
   14002f757:	mov    QWORD PTR [rsp+0x10],rdx
   14002f75c:	push   rbp
   14002f75d:	sub    rsp,0x20
   14002f761:	mov    rbp,rdx
   14002f764:	xor    edx,edx
   14002f766:	xor    ecx,ecx
   14002f768:	call   0x14002e2da
   14002f76d:	nop
   14002f76e:	int3   
   14002f76f:	int3   
   14002f770:	int3   
   14002f771:	int3   
   14002f772:	int3   
   14002f773:	int3   
   14002f774:	mov    QWORD PTR [rsp+0x10],rdx
   14002f779:	push   rbp
   14002f77a:	sub    rsp,0x20
   14002f77e:	mov    rbp,rdx
   14002f781:	xor    edx,edx
   14002f783:	xor    ecx,ecx
   14002f785:	call   0x14002e2da
   14002f78a:	nop
   14002f78b:	int3   
   14002f78c:	int3   
   14002f78d:	int3   
   14002f78e:	int3   
   14002f78f:	int3   
   14002f790:	int3   
   14002f791:	mov    QWORD PTR [rsp+0x10],rdx
   14002f796:	push   rbp
   14002f797:	sub    rsp,0x30
   14002f79b:	mov    rbp,rdx
   14002f79e:	mov    rdx,QWORD PTR [rbp+0x80]
   14002f7a5:	call   0x140003760
   14002f7aa:	xor    edx,edx
   14002f7ac:	xor    ecx,ecx
   14002f7ae:	call   0x14002e2da
   14002f7b3:	nop
   14002f7b4:	mov    QWORD PTR [rsp+0x10],rdx
   14002f7b9:	push   rbp
   14002f7ba:	sub    rsp,0x30
   14002f7be:	mov    rbp,rdx
   14002f7c1:	xor    edx,edx
   14002f7c3:	xor    ecx,ecx
   14002f7c5:	call   0x14002e2da
   14002f7ca:	nop
   14002f7cb:	int3   
   14002f7cc:	int3   
   14002f7cd:	int3   
   14002f7ce:	int3   
   14002f7cf:	int3   
   14002f7d0:	int3   
   14002f7d1:	lea    rcx,[rdx+0xc0]
   14002f7d8:	jmp    0x1400036a8
   14002f7dd:	lea    rcx,[rdx+0x38]
   14002f7e4:	jmp    0x14000de98
   14002f7e9:	lea    rcx,[rdx+0x70]
   14002f7f0:	jmp    0x140010f9c
   14002f7f5:	lea    rcx,[rdx+0x48]
   14002f7fc:	jmp    0x1400036a8
   14002f801:	lea    rcx,[rdx+0x50]
   14002f808:	jmp    0x1400121c4
   14002f80d:	int3   
   14002f80e:	int3   
   14002f80f:	int3   
   14002f810:	int3   
   14002f811:	int3   
   14002f812:	int3   
   14002f813:	lea    rcx,[rdx+0x38]
   14002f81a:	jmp    0x1400036a8
   14002f81f:	int3   
   14002f820:	int3   
   14002f821:	int3   
   14002f822:	int3   
   14002f823:	int3   
   14002f824:	int3   
   14002f825:	lea    rcx,[rdx+0x40]
   14002f82c:	jmp    0x14000de98
   14002f831:	int3   
   14002f832:	int3   
   14002f833:	int3   
   14002f834:	int3   
   14002f835:	int3   
   14002f836:	int3   
   14002f837:	lea    rcx,[rdx+0x68]
   14002f83e:	jmp    0x14000de98
   14002f843:	lea    rcx,[rdx+0x80]
   14002f84a:	jmp    0x14000de98
   14002f84f:	int3   
   14002f850:	int3   
   14002f851:	int3   
   14002f852:	int3   
   14002f853:	int3   
   14002f854:	int3   
   14002f855:	lea    rcx,[rdx+0x40]
   14002f85c:	jmp    0x14000de98
   14002f861:	lea    rcx,[rdx+0x48]
   14002f868:	jmp    0x14000de98
   14002f86d:	int3   
   14002f86e:	int3   
   14002f86f:	int3   
   14002f870:	int3   
   14002f871:	int3   
   14002f872:	int3   
   14002f873:	lea    rcx,[rdx+0x28]
   14002f87a:	jmp    0x1400038b0
   14002f87f:	lea    rcx,[rdx+0x30]
   14002f886:	jmp    0x14000cdd8
   14002f88b:	lea    rcx,[rdx+0x40]
   14002f892:	jmp    0x140010fbc
   14002f897:	mov    QWORD PTR [rsp+0x10],rdx
   14002f89c:	push   rbx
   14002f89d:	push   rbp
   14002f89e:	push   rdi
   14002f89f:	sub    rsp,0x20
   14002f8a3:	mov    rbp,rdx
   14002f8a6:	lea    rcx,[rip+0x1b7cb]        # 0x14004b078
   14002f8ad:	mov    rax,QWORD PTR [rip+0x1b7c4]        # 0x14004b078
   14002f8b4:	cmp    rax,rcx
   14002f8b7:	je     0x14002f8f8
   14002f8b9:	test   BYTE PTR [rax+0x1c],0x2
   14002f8bd:	je     0x14002f8f8
   14002f8bf:	mov    rdi,QWORD PTR [rbp+0x58]
   14002f8c3:	mov    rax,QWORD PTR [rdi]
   14002f8c6:	mov    rbx,QWORD PTR [rax+0x8]
   14002f8ca:	mov    rcx,rbx
   14002f8cd:	call   QWORD PTR [rip+0x2dd5]        # 0x1400326a8
   14002f8d3:	mov    rcx,rdi
   14002f8d6:	call   rbx
   14002f8d8:	mov    r9,rax
   14002f8db:	mov    edx,0x18
   14002f8e0:	lea    r8,[rip+0x7831]        # 0x140037118
   14002f8e7:	mov    rcx,QWORD PTR [rip+0x1b78a]        # 0x14004b078
   14002f8ee:	mov    rcx,QWORD PTR [rcx+0x10]
   14002f8f2:	call   0x1400038e0
   14002f8f7:	nop
   14002f8f8:	lea    rax,[rip+0xfffffffffffe0841]        # 0x140010140
   14002f8ff:	add    rsp,0x20
   14002f903:	pop    rdi
   14002f904:	pop    rbp
   14002f905:	pop    rbx
   14002f906:	ret    
   14002f907:	int3   
   14002f908:	int3   
   14002f909:	int3   
   14002f90a:	int3   
   14002f90b:	int3   
   14002f90c:	int3   
   14002f90d:	int3   
   14002f90e:	lea    rcx,[rdx+0x98]
   14002f915:	jmp    0x1400038b0
   14002f91a:	mov    QWORD PTR [rsp+0x10],rdx
   14002f91f:	push   rbx
   14002f920:	push   rbp
   14002f921:	push   rdi
   14002f922:	sub    rsp,0x20
   14002f926:	mov    rbp,rdx
   14002f929:	lea    rcx,[rip+0x1b748]        # 0x14004b078
   14002f930:	mov    rax,QWORD PTR [rip+0x1b741]        # 0x14004b078
   14002f937:	cmp    rax,rcx
   14002f93a:	je     0x14002f97b
   14002f93c:	test   BYTE PTR [rax+0x1c],0x2
   14002f940:	je     0x14002f97b
   14002f942:	mov    rdi,QWORD PTR [rbp+0x28]
   14002f946:	mov    rax,QWORD PTR [rdi]
   14002f949:	mov    rbx,QWORD PTR [rax+0x8]
   14002f94d:	mov    rcx,rbx
   14002f950:	call   QWORD PTR [rip+0x2d52]        # 0x1400326a8
   14002f956:	mov    rcx,rdi
   14002f959:	call   rbx
   14002f95b:	mov    r9,rax
   14002f95e:	mov    edx,0x1b
   14002f963:	lea    r8,[rip+0x77ae]        # 0x140037118
   14002f96a:	mov    rcx,QWORD PTR [rip+0x1b707]        # 0x14004b078
   14002f971:	mov    rcx,QWORD PTR [rcx+0x10]
   14002f975:	call   0x1400038e0
   14002f97a:	nop
   14002f97b:	lea    rax,[rip+0xfffffffffffe0a11]        # 0x140010393
   14002f982:	add    rsp,0x20
   14002f986:	pop    rdi
   14002f987:	pop    rbp
   14002f988:	pop    rbx
   14002f989:	ret    
   14002f98a:	int3   
   14002f98b:	lea    rcx,[rdx+0x30]
   14002f992:	jmp    0x140010f9c
   14002f997:	int3   
   14002f998:	int3   
   14002f999:	int3   
   14002f99a:	int3   
   14002f99b:	int3   
   14002f99c:	int3   
   14002f99d:	lea    rcx,[rdx+0x30]
   14002f9a4:	jmp    0x14000de98
   14002f9a9:	int3   
   14002f9aa:	int3   
   14002f9ab:	int3   
   14002f9ac:	int3   
   14002f9ad:	int3   
   14002f9ae:	int3   
   14002f9af:	lea    rcx,[rdx+0x48]
   14002f9b6:	jmp    0x14000de98
   14002f9bb:	lea    rcx,[rdx+0x88]
   14002f9c2:	jmp    0x1400037e0
   14002f9c7:	lea    rcx,[rdx+0x60]
   14002f9ce:	jmp    0x14000de98
   14002f9d3:	mov    QWORD PTR [rsp+0x10],rdx
   14002f9d8:	push   rbx
   14002f9d9:	push   rbp
   14002f9da:	push   rdi
   14002f9db:	sub    rsp,0x30
   14002f9df:	mov    rbp,rdx
   14002f9e2:	lea    rcx,[rip+0x1b68f]        # 0x14004b078
   14002f9e9:	mov    rax,QWORD PTR [rip+0x1b688]        # 0x14004b078
   14002f9f0:	cmp    rax,rcx
   14002f9f3:	je     0x14002fa37
   14002f9f5:	test   BYTE PTR [rax+0x1c],0x1
   14002f9f9:	je     0x14002fa37
   14002f9fb:	mov    rdi,QWORD PTR [rbp+0x80]
   14002fa02:	mov    rax,QWORD PTR [rdi]
   14002fa05:	mov    rbx,QWORD PTR [rax+0x8]
   14002fa09:	mov    rcx,rbx
   14002fa0c:	call   QWORD PTR [rip+0x2c96]        # 0x1400326a8
   14002fa12:	mov    rcx,rdi
   14002fa15:	call   rbx
   14002fa17:	mov    r9,rax
   14002fa1a:	mov    edx,0x20
   14002fa1f:	lea    r8,[rip+0x76f2]        # 0x140037118
   14002fa26:	mov    rcx,QWORD PTR [rip+0x1b64b]        # 0x14004b078
   14002fa2d:	mov    rcx,QWORD PTR [rcx+0x10]
   14002fa31:	call   0x1400038e0
   14002fa36:	nop
   14002fa37:	lea    rax,[rip+0xfffffffffffe0dfc]        # 0x14001083a
   14002fa3e:	add    rsp,0x30
   14002fa42:	pop    rdi
   14002fa43:	pop    rbp
   14002fa44:	pop    rbx
   14002fa45:	ret    
   14002fa46:	int3   
   14002fa47:	mov    QWORD PTR [rsp+0x10],rdx
   14002fa4c:	push   rbx
   14002fa4d:	push   rbp
   14002fa4e:	push   rdi
   14002fa4f:	sub    rsp,0x30
   14002fa53:	mov    rbp,rdx
   14002fa56:	lea    rcx,[rip+0x1b61b]        # 0x14004b078
   14002fa5d:	mov    rax,QWORD PTR [rip+0x1b614]        # 0x14004b078
   14002fa64:	cmp    rax,rcx
   14002fa67:	je     0x14002faa8
   14002fa69:	test   BYTE PTR [rax+0x1c],0x2
   14002fa6d:	je     0x14002faa8
   14002fa6f:	mov    rdi,QWORD PTR [rbp+0x78]
   14002fa73:	mov    rax,QWORD PTR [rdi]
   14002fa76:	mov    rbx,QWORD PTR [rax+0x8]
   14002fa7a:	mov    rcx,rbx
   14002fa7d:	call   QWORD PTR [rip+0x2c25]        # 0x1400326a8
   14002fa83:	mov    rcx,rdi
   14002fa86:	call   rbx
   14002fa88:	mov    r9,rax
   14002fa8b:	mov    edx,0x21
   14002fa90:	lea    r8,[rip+0x7681]        # 0x140037118
   14002fa97:	mov    rcx,QWORD PTR [rip+0x1b5da]        # 0x14004b078
   14002fa9e:	mov    rcx,QWORD PTR [rcx+0x10]
   14002faa2:	call   0x1400038e0
   14002faa7:	nop
   14002faa8:	lea    rax,[rip+0xfffffffffffe0dc8]        # 0x140010877
   14002faaf:	add    rsp,0x30
   14002fab3:	pop    rdi
   14002fab4:	pop    rbp
   14002fab5:	pop    rbx
   14002fab6:	ret    
   14002fab7:	int3   
   14002fab8:	int3   
   14002fab9:	int3   
   14002faba:	int3   
   14002fabb:	int3   
   14002fabc:	int3   
   14002fabd:	int3   
   14002fabe:	lea    rcx,[rdx+0xf0]
   14002fac5:	jmp    0x14000de98
   14002faca:	lea    rcx,[rdx+0xc8]
   14002fad1:	jmp    0x14000136c
   14002fad6:	lea    rcx,[rdx+0xd0]
   14002fadd:	jmp    0x14000136c
   14002fae2:	lea    rcx,[rdx+0xd8]
   14002fae9:	jmp    0x14000136c
   14002faee:	lea    rcx,[rdx+0xa8]
   14002faf5:	jmp    0x14000136c
   14002fafa:	lea    rcx,[rdx+0xb8]
   14002fb01:	jmp    0x14000136c
   14002fb06:	lea    rcx,[rdx+0xc0]
   14002fb0d:	jmp    0x14000136c
   14002fb12:	int3   
   14002fb13:	int3   
   14002fb14:	int3   
   14002fb15:	int3   
   14002fb16:	int3   
   14002fb17:	int3   
   14002fb18:	mov    QWORD PTR [rsp+0x10],rdx
   14002fb1d:	push   rbp
   14002fb1e:	sub    rsp,0x20
   14002fb22:	mov    rbp,rdx
   14002fb25:	lea    rax,[rip+0xfffffffffffe181a]        # 0x140011346
   14002fb2c:	add    rsp,0x20
   14002fb30:	pop    rbp
   14002fb31:	ret    
   14002fb32:	int3   
   14002fb33:	int3   
   14002fb34:	int3   
   14002fb35:	int3   
   14002fb36:	int3   
   14002fb37:	int3   
   14002fb38:	int3   
   14002fb39:	mov    rcx,QWORD PTR [rdx+0x60]
   14002fb40:	jmp    0x140012880
   14002fb45:	mov    rcx,QWORD PTR [rdx+0x60]
   14002fb4c:	add    rcx,0x98
   14002fb53:	jmp    0x14000ce88
   14002fb58:	mov    rcx,QWORD PTR [rdx+0x60]
   14002fb5f:	add    rcx,0xa0
   14002fb66:	jmp    0x1400036a8
   14002fb6b:	mov    rcx,QWORD PTR [rdx+0x60]
   14002fb72:	add    rcx,0xa8
   14002fb79:	jmp    0x14000cdd8
   14002fb7e:	mov    rcx,QWORD PTR [rdx+0x78]
   14002fb85:	jmp    0x140012200
   14002fb8a:	mov    rcx,QWORD PTR [rdx+0x78]
   14002fb91:	add    rcx,0x10
   14002fb95:	jmp    0x140003674
   14002fb9a:	mov    rcx,QWORD PTR [rdx+0x60]
   14002fba1:	add    rcx,0xb0
   14002fba8:	jmp    0x140011830
   14002fbad:	mov    rcx,QWORD PTR [rdx+0x60]
   14002fbb4:	add    rcx,0xf0
   14002fbbb:	jmp    0x14002b28c
   14002fbc0:	mov    rcx,QWORD PTR [rdx+0x60]
   14002fbc7:	add    rcx,0x118
   14002fbce:	jmp    0x14000cec0
   14002fbd3:	mov    rcx,QWORD PTR [rdx+0x60]
   14002fbda:	add    rcx,0x120
   14002fbe1:	jmp    0x140029b48
   14002fbe6:	int3   
   14002fbe7:	int3   
   14002fbe8:	int3   
   14002fbe9:	int3   
   14002fbea:	int3   
   14002fbeb:	int3   
   14002fbec:	lea    rcx,[rdx+0x60]
   14002fbf3:	jmp    0x14000de98
   14002fbf8:	int3   
   14002fbf9:	int3   
   14002fbfa:	int3   
   14002fbfb:	int3   
   14002fbfc:	int3   
   14002fbfd:	int3   
   14002fbfe:	lea    rcx,[rdx+0x20]
   14002fc05:	jmp    0x14000de98
   14002fc0a:	lea    rcx,[rdx+0x68]
   14002fc11:	jmp    0x14000ce88
   14002fc16:	int3   
   14002fc17:	int3   
   14002fc18:	int3   
   14002fc19:	int3   
   14002fc1a:	int3   
   14002fc1b:	int3   
   14002fc1c:	lea    rcx,[rdx+0x20]
   14002fc23:	jmp    0x14000de98
   14002fc28:	lea    rcx,[rdx+0x50]
   14002fc2f:	jmp    0x14000ce88
   14002fc34:	int3   
   14002fc35:	int3   
   14002fc36:	int3   
   14002fc37:	int3   
   14002fc38:	int3   
   14002fc39:	int3   
   14002fc3a:	mov    QWORD PTR [rsp+0x10],rdx
   14002fc3f:	push   rbp
   14002fc40:	sub    rsp,0x20
   14002fc44:	mov    rbp,rdx
   14002fc47:	mov    rdx,QWORD PTR [rbp+0x40]
   14002fc4b:	call   0x140003760
   14002fc50:	xor    edx,edx
   14002fc52:	xor    ecx,ecx
   14002fc54:	call   0x14002e2da
   14002fc59:	nop
   14002fc5a:	int3   
   14002fc5b:	int3   
   14002fc5c:	int3   
   14002fc5d:	int3   
   14002fc5e:	int3   
   14002fc5f:	int3   
   14002fc60:	mov    QWORD PTR [rsp+0x10],rdx
   14002fc65:	push   rbp
   14002fc66:	sub    rsp,0x20
   14002fc6a:	mov    rbp,rdx
   14002fc6d:	xor    edx,edx
   14002fc6f:	xor    ecx,ecx
   14002fc71:	call   0x14002e2da
   14002fc76:	nop
   14002fc77:	int3   
   14002fc78:	int3   
   14002fc79:	int3   
   14002fc7a:	int3   
   14002fc7b:	int3   
   14002fc7c:	int3   
   14002fc7d:	mov    QWORD PTR [rsp+0x10],rdx
   14002fc82:	push   rbp
   14002fc83:	sub    rsp,0x20
   14002fc87:	mov    rbp,rdx
   14002fc8a:	mov    rdx,QWORD PTR [rbp+0x78]
   14002fc8e:	mov    rcx,QWORD PTR [rbp+0x60]
   14002fc92:	call   0x140012788
   14002fc97:	xor    edx,edx
   14002fc99:	xor    ecx,ecx
   14002fc9b:	call   0x14002e2da
   14002fca0:	nop
   14002fca1:	int3   
   14002fca2:	int3   
   14002fca3:	int3   
   14002fca4:	int3   
   14002fca5:	int3   
   14002fca6:	int3   
   14002fca7:	mov    QWORD PTR [rsp+0x10],rdx
   14002fcac:	push   rbp
   14002fcad:	sub    rsp,0x20
   14002fcb1:	mov    rbp,rdx
   14002fcb4:	mov    rdx,QWORD PTR [rbp+0x40]
   14002fcb8:	call   0x140003760
   14002fcbd:	xor    edx,edx
   14002fcbf:	xor    ecx,ecx
   14002fcc1:	call   0x14002e2da
   14002fcc6:	nop
   14002fcc7:	int3   
   14002fcc8:	int3   
   14002fcc9:	int3   
   14002fcca:	int3   
   14002fccb:	int3   
   14002fccc:	int3   
   14002fccd:	lea    rcx,[rdx+0x20]
   14002fcd4:	jmp    0x14000ce88
   14002fcd9:	mov    QWORD PTR [rsp+0x10],rdx
   14002fcde:	push   rbp
   14002fcdf:	sub    rsp,0x20
   14002fce3:	mov    rbp,rdx
   14002fce6:	mov    rcx,QWORD PTR [rbp+0x30]
   14002fcea:	call   0x140001fd4
   14002fcef:	mov    DWORD PTR [rbp+0x20],eax
   14002fcf2:	lea    rax,[rip+0xfffffffffffe2e61]        # 0x140012b5a
   14002fcf9:	add    rsp,0x20
   14002fcfd:	pop    rbp
   14002fcfe:	ret    
   14002fcff:	int3   
   14002fd00:	int3   
   14002fd01:	int3   
   14002fd02:	int3   
   14002fd03:	int3   
   14002fd04:	int3   
   14002fd05:	int3   
   14002fd06:	lea    rcx,[rdx+0x28]
   14002fd0d:	jmp    0x140014c1c
   14002fd12:	lea    rcx,[rdx+0x88]
   14002fd19:	jmp    0x14000e254
   14002fd1e:	int3   
   14002fd1f:	int3   
   14002fd20:	int3   
   14002fd21:	int3   
   14002fd22:	int3   
   14002fd23:	int3   
   14002fd24:	lea    rcx,[rdx+0x28]
   14002fd2b:	jmp    0x140014c1c
   14002fd30:	int3   
   14002fd31:	int3   
   14002fd32:	int3   
   14002fd33:	int3   
   14002fd34:	int3   
   14002fd35:	int3   
   14002fd36:	lea    rcx,[rdx+0x48]
   14002fd3d:	jmp    0x14000ce88
   14002fd42:	lea    rcx,[rdx+0x58]
   14002fd49:	jmp    0x14000ce88
   14002fd4e:	lea    rcx,[rdx+0x60]
   14002fd55:	jmp    0x14000136c
   14002fd5a:	lea    rcx,[rdx+0x50]
   14002fd61:	jmp    0x140010fbc
   14002fd66:	lea    rcx,[rdx+0xa0]
   14002fd6d:	jmp    0x140010fbc
   14002fd72:	lea    rcx,[rdx+0x88]
   14002fd79:	jmp    0x140014c7c
   14002fd7e:	int3   
   14002fd7f:	int3   
   14002fd80:	int3   
   14002fd81:	int3   
   14002fd82:	int3   
   14002fd83:	int3   
   14002fd84:	lea    rcx,[rdx+0x60]
   14002fd8b:	jmp    0x14000136c
   14002fd90:	lea    rcx,[rdx+0x80]
   14002fd97:	jmp    0x14000136c
   14002fd9c:	lea    rcx,[rdx+0x48]
   14002fda3:	jmp    0x140010fbc
   14002fda8:	int3   
   14002fda9:	int3   
   14002fdaa:	int3   
   14002fdab:	int3   
   14002fdac:	int3   
   14002fdad:	int3   
   14002fdae:	lea    rcx,[rdx+0x48]
   14002fdb5:	jmp    0x140015318
   14002fdba:	lea    rcx,[rdx+0x40]
   14002fdc1:	jmp    0x14000136c
   14002fdc6:	int3   
   14002fdc7:	int3   
   14002fdc8:	int3   
   14002fdc9:	int3   
   14002fdca:	int3   
   14002fdcb:	int3   
   14002fdcc:	lea    rcx,[rdx+0x48]
   14002fdd3:	jmp    0x140010fbc
   14002fdd8:	int3   
   14002fdd9:	int3   
   14002fdda:	int3   
   14002fddb:	int3   
   14002fddc:	int3   
   14002fddd:	int3   
   14002fdde:	mov    rcx,QWORD PTR [rdx+0x50]
   14002fde5:	jmp    0x140014ccc
   14002fdea:	mov    rcx,QWORD PTR [rdx+0x50]
   14002fdf1:	add    rcx,0x10
   14002fdf5:	jmp    0x140003674
   14002fdfa:	int3   
   14002fdfb:	int3   
   14002fdfc:	int3   
   14002fdfd:	int3   
   14002fdfe:	int3   
   14002fdff:	int3   
   14002fe00:	mov    QWORD PTR [rsp+0x10],rdx
   14002fe05:	push   rbp
   14002fe06:	sub    rsp,0x30
   14002fe0a:	mov    rbp,rdx
   14002fe0d:	mov    rdx,QWORD PTR [rbp+0x68]
   14002fe11:	call   0x140003760
   14002fe16:	xor    edx,edx
   14002fe18:	xor    ecx,ecx
   14002fe1a:	call   0x14002e2da
   14002fe1f:	nop
   14002fe20:	int3   
   14002fe21:	int3   
   14002fe22:	int3   
   14002fe23:	int3   
   14002fe24:	int3   
   14002fe25:	int3   
   14002fe26:	mov    QWORD PTR [rsp+0x10],rdx
   14002fe2b:	push   rbp
   14002fe2c:	sub    rsp,0x20
   14002fe30:	mov    rbp,rdx
   14002fe33:	mov    rdx,QWORD PTR [rbp+0x48]
   14002fe37:	call   0x140003760
   14002fe3c:	xor    edx,edx
   14002fe3e:	xor    ecx,ecx
   14002fe40:	call   0x14002e2da
   14002fe45:	nop
   14002fe46:	int3   
   14002fe47:	int3   
   14002fe48:	int3   
   14002fe49:	int3   
   14002fe4a:	int3   
   14002fe4b:	int3   
   14002fe4c:	mov    QWORD PTR [rsp+0x10],rdx
   14002fe51:	push   rbp
   14002fe52:	sub    rsp,0x20
   14002fe56:	mov    rbp,rdx
   14002fe59:	mov    rdx,QWORD PTR [rbp+0x88]
   14002fe60:	mov    rcx,QWORD PTR [rbp+0x70]
   14002fe64:	call   0x140015100
   14002fe69:	xor    edx,edx
   14002fe6b:	xor    ecx,ecx
   14002fe6d:	call   0x14002e2da
   14002fe72:	nop
   14002fe73:	int3   
   14002fe74:	int3   
   14002fe75:	int3   
   14002fe76:	int3   
   14002fe77:	int3   
   14002fe78:	int3   
   14002fe79:	mov    QWORD PTR [rsp+0x10],rdx
   14002fe7e:	push   rbx
   14002fe7f:	push   rbp
   14002fe80:	sub    rsp,0x28
   14002fe84:	mov    rbp,rdx
   14002fe87:	mov    rbx,QWORD PTR [rbp+0x58]
   14002fe8b:	jmp    0x14002feab
   14002fe8d:	mov    rcx,QWORD PTR [rbx]
   14002fe90:	test   rcx,rcx
   14002fe93:	je     0x14002fea7
   14002fe95:	or     eax,0xffffffff
   14002fe98:	lock xadd DWORD PTR [rcx],eax
   14002fe9c:	cmp    eax,0x1
   14002fe9f:	jne    0x14002fea7
   14002fea1:	call   QWORD PTR [rip+0x2721]        # 0x1400325c8
   14002fea7:	add    rbx,0x8
   14002feab:	cmp    rbx,QWORD PTR [rbp+0x50]
   14002feaf:	jne    0x14002fe8d
   14002feb1:	xor    edx,edx
   14002feb3:	xor    ecx,ecx
   14002feb5:	call   0x14002e2da
   14002feba:	nop
   14002febb:	int3   
   14002febc:	int3   
   14002febd:	int3   
   14002febe:	int3   
   14002febf:	int3   
   14002fec0:	int3   
   14002fec1:	mov    QWORD PTR [rsp+0x10],rdx
   14002fec6:	push   rbp
   14002fec7:	sub    rsp,0x20
   14002fecb:	mov    rbp,rdx
   14002fece:	mov    rdx,QWORD PTR [rbp+0x40]
   14002fed2:	call   0x140003760
   14002fed7:	xor    edx,edx
   14002fed9:	xor    ecx,ecx
   14002fedb:	call   0x14002e2da
   14002fee0:	nop
   14002fee1:	int3   
   14002fee2:	int3   
   14002fee3:	int3   
   14002fee4:	int3   
   14002fee5:	int3   
   14002fee6:	int3   
   14002fee7:	lea    rcx,[rdx+0x38]
   14002feee:	jmp    0x14000dec0
   14002fef3:	lea    rcx,[rdx+0x90]
   14002fefa:	jmp    0x14000e254
   14002feff:	int3   
   14002ff00:	int3   
   14002ff01:	int3   
   14002ff02:	int3   
   14002ff03:	int3   
   14002ff04:	int3   
   14002ff05:	lea    rcx,[rdx+0x28]
   14002ff0c:	jmp    0x14000e254
   14002ff11:	lea    rcx,[rdx+0x48]
   14002ff18:	jmp    0x1400156a8
   14002ff1d:	int3   
   14002ff1e:	int3   
   14002ff1f:	int3   
   14002ff20:	int3   
   14002ff21:	int3   
   14002ff22:	int3   
   14002ff23:	mov    QWORD PTR [rsp+0x10],rdx
   14002ff28:	push   rbp
   14002ff29:	sub    rsp,0x20
   14002ff2d:	mov    rbp,rdx
   14002ff30:	mov    rdx,QWORD PTR [rbp+0x68]
   14002ff34:	mov    rcx,QWORD PTR [rbp+0x50]
   14002ff38:	call   0x1400159dc
   14002ff3d:	xor    edx,edx
   14002ff3f:	xor    ecx,ecx
   14002ff41:	call   0x14002e2da
   14002ff46:	nop
   14002ff47:	int3   
   14002ff48:	int3   
   14002ff49:	int3   
   14002ff4a:	int3   
   14002ff4b:	int3   
   14002ff4c:	int3   
   14002ff4d:	mov    rcx,QWORD PTR [rdx+0x60]
   14002ff54:	add    rcx,0x8
   14002ff58:	jmp    0x140003674
   14002ff5d:	int3   
   14002ff5e:	int3   
   14002ff5f:	int3   
   14002ff60:	int3   
   14002ff61:	int3   
   14002ff62:	int3   
   14002ff63:	lea    rcx,[rdx+0x48]
   14002ff6a:	jmp    0x140010f9c
   14002ff6f:	mov    rcx,QWORD PTR [rdx+0x30]
   14002ff76:	jmp    0x140023f48
   14002ff7b:	lea    rcx,[rdx+0x38]
   14002ff82:	jmp    0x140016988
   14002ff87:	int3   
   14002ff88:	int3   
   14002ff89:	int3   
   14002ff8a:	int3   
   14002ff8b:	int3   
   14002ff8c:	int3   
   14002ff8d:	mov    QWORD PTR [rsp+0x10],rdx
   14002ff92:	push   rbp
   14002ff93:	sub    rsp,0x20
   14002ff97:	mov    rbp,rdx
   14002ff9a:	mov    rcx,QWORD PTR [rbp+0x28]
   14002ff9e:	call   0x140001fd4
   14002ffa3:	mov    DWORD PTR [rbp+0x40],eax
   14002ffa6:	lea    rax,[rip+0xfffffffffffe633f]        # 0x1400162ec
   14002ffad:	add    rsp,0x20
   14002ffb1:	pop    rbp
   14002ffb2:	ret    
   14002ffb3:	int3   
   14002ffb4:	int3   
   14002ffb5:	int3   
   14002ffb6:	int3   
   14002ffb7:	int3   
   14002ffb8:	int3   
   14002ffb9:	int3   
   14002ffba:	lea    rcx,[rdx+0x30]
   14002ffc1:	jmp    0x140015c40
   14002ffc6:	mov    QWORD PTR [rsp+0x10],rdx
   14002ffcb:	push   rbp
   14002ffcc:	sub    rsp,0x30
   14002ffd0:	mov    rbp,rdx
   14002ffd3:	mov    rcx,QWORD PTR [rbp+0x58]
   14002ffd7:	call   0x140001fd4
   14002ffdc:	mov    DWORD PTR [rbp+0x8b8],eax
   14002ffe2:	lea    rax,[rip+0xfffffffffffe65ef]        # 0x1400165d8
   14002ffe9:	add    rsp,0x30
   14002ffed:	pop    rbp
   14002ffee:	ret    
   14002ffef:	int3   
   14002fff0:	int3   
   14002fff1:	int3   
   14002fff2:	int3   
   14002fff3:	int3   
   14002fff4:	int3   
   14002fff5:	int3   
   14002fff6:	mov    QWORD PTR [rsp+0x10],rdx
   14002fffb:	push   rbp
   14002fffc:	sub    rsp,0x20
   140030000:	mov    rbp,rdx
   140030003:	mov    rcx,QWORD PTR [rbp+0x40]
   140030007:	call   0x140003674
   14003000c:	xor    edx,edx
   14003000e:	xor    ecx,ecx
   140030010:	call   0x14002e2da
   140030015:	nop
   140030016:	int3   
   140030017:	int3   
   140030018:	int3   
   140030019:	int3   
   14003001a:	int3   
   14003001b:	int3   
   14003001c:	mov    QWORD PTR [rsp+0x10],rdx
   140030021:	push   rbp
   140030022:	sub    rsp,0x20
   140030026:	mov    rbp,rdx
   140030029:	mov    rdx,QWORD PTR [rbp+0x48]
   14003002d:	call   0x140003760
   140030032:	xor    edx,edx
   140030034:	xor    ecx,ecx
   140030036:	call   0x14002e2da
   14003003b:	nop
   14003003c:	int3   
   14003003d:	int3   
   14003003e:	int3   
   14003003f:	int3   
   140030040:	int3   
   140030041:	int3   
   140030042:	lea    rcx,[rdx+0x78]
   140030049:	jmp    0x140017678
   14003004e:	int3   
   14003004f:	int3   
   140030050:	int3   
   140030051:	int3   
   140030052:	int3   
   140030053:	int3   
   140030054:	lea    rcx,[rdx+0x38]
   14003005b:	jmp    0x140017678
   140030060:	lea    rcx,[rdx+0x30]
   140030067:	jmp    0x14000d10c
   14003006c:	lea    rcx,[rdx+0x68]
   140030073:	jmp    0x1400037e0
   140030078:	mov    rcx,QWORD PTR [rdx+0x88]
   14003007f:	jmp    0x1400037e0
   140030084:	int3   
   140030085:	int3   
   140030086:	int3   
   140030087:	int3   
   140030088:	int3   
   140030089:	int3   
   14003008a:	lea    rcx,[rdx+0x50]
   140030091:	jmp    0x140017678
   140030096:	lea    rcx,[rdx+0x40]
   14003009d:	jmp    0x140017698
   1400300a2:	lea    rcx,[rdx+0x38]
   1400300a9:	jmp    0x14000d10c
   1400300ae:	lea    rcx,[rdx+0x30]
   1400300b5:	jmp    0x14000136c
   1400300ba:	rex push rbp
   1400300bc:	sub    rsp,0x20
   1400300c0:	mov    rbp,rdx
   1400300c3:	mov    rdx,QWORD PTR [rbp+0x68]
   1400300c7:	mov    rcx,QWORD PTR [rbp+0x60]
   1400300cb:	call   0x140001360
   1400300d0:	add    rsp,0x20
   1400300d4:	pop    rbp
   1400300d5:	ret    
   1400300d6:	rex push rbp
   1400300d8:	sub    rsp,0x20
   1400300dc:	mov    rbp,rdx
   1400300df:	mov    rdx,QWORD PTR [rbp+0x60]
   1400300e3:	mov    rcx,QWORD PTR [rbp+0x68]
   1400300e7:	call   0x140001360
   1400300ec:	add    rsp,0x20
   1400300f0:	pop    rbp
   1400300f1:	ret    
   1400300f2:	mov    QWORD PTR [rsp+0x10],rdx
   1400300f7:	push   rbp
   1400300f8:	sub    rsp,0x30
   1400300fc:	mov    rbp,rdx
   1400300ff:	mov    rax,QWORD PTR [rbp+0x78]
   140030103:	mov    ecx,DWORD PTR [rax]
   140030105:	mov    DWORD PTR [rbp+0x30],ecx
   140030108:	lea    rax,[rip+0xfffffffffffe74ff]        # 0x14001760e
   14003010f:	add    rsp,0x30
   140030113:	pop    rbp
   140030114:	ret    
   140030115:	int3   
   140030116:	mov    QWORD PTR [rsp+0x10],rdx
   14003011b:	push   rbp
   14003011c:	sub    rsp,0x30
   140030120:	mov    rbp,rdx
   140030123:	mov    rcx,QWORD PTR [rbp+0x80]
   14003012a:	call   0x140001fd4
   14003012f:	mov    DWORD PTR [rbp+0x30],eax
   140030132:	lea    rax,[rip+0xfffffffffffe74d5]        # 0x14001760e
   140030139:	add    rsp,0x30
   14003013d:	pop    rbp
   14003013e:	ret    
   14003013f:	int3   
   140030140:	int3   
   140030141:	int3   
   140030142:	int3   
   140030143:	int3   
   140030144:	int3   
   140030145:	int3   
   140030146:	mov    QWORD PTR [rsp+0x10],rdx
   14003014b:	push   rbp
   14003014c:	sub    rsp,0x30
   140030150:	mov    rbp,rdx
   140030153:	mov    rdx,QWORD PTR [rbp+0x68]
   140030157:	call   0x140003760
   14003015c:	xor    edx,edx
   14003015e:	xor    ecx,ecx
   140030160:	call   0x14002e2da
   140030165:	nop
   140030166:	int3   
   140030167:	int3   
   140030168:	int3   
   140030169:	int3   
   14003016a:	int3   
   14003016b:	int3   
   14003016c:	rex push rbp
   14003016e:	sub    rsp,0x20
   140030172:	mov    rbp,rdx
   140030175:	mov    rdx,QWORD PTR [rbp+0x60]
   140030179:	mov    rcx,QWORD PTR [rbp+0x50]
   14003017d:	call   0x140001360
   140030182:	add    rsp,0x20
   140030186:	pop    rbp
   140030187:	ret    
   140030188:	mov    QWORD PTR [rsp+0x10],rdx
   14003018d:	push   rbx
   14003018e:	push   rbp
   14003018f:	sub    rsp,0x28
   140030193:	mov    rbp,rdx
   140030196:	mov    rbx,QWORD PTR [rbp+0x68]
   14003019a:	jmp    0x1400301a9
   14003019c:	mov    rcx,QWORD PTR [rbx]
   14003019f:	call   QWORD PTR [rip+0x21ab]        # 0x140032350
   1400301a5:	add    rbx,0x8
   1400301a9:	cmp    rbx,QWORD PTR [rbp+0x60]
   1400301ad:	jne    0x14003019c
   1400301af:	xor    edx,edx
   1400301b1:	xor    ecx,ecx
   1400301b3:	call   0x14002e2da
   1400301b8:	nop
   1400301b9:	int3   
   1400301ba:	int3   
   1400301bb:	int3   
   1400301bc:	int3   
   1400301bd:	int3   
   1400301be:	int3   
   1400301bf:	mov    rcx,QWORD PTR [rdx+0x90]
   1400301c6:	add    rcx,0x10
   1400301ca:	jmp    0x14001a2d8
   1400301cf:	mov    rcx,QWORD PTR [rdx+0x90]
   1400301d6:	add    rcx,0x80
   1400301dd:	jmp    0x14001a300
   1400301e2:	mov    rcx,QWORD PTR [rdx+0x90]
   1400301e9:	add    rcx,0x88
   1400301f0:	jmp    0x1400036a8
   1400301f5:	mov    rcx,QWORD PTR [rdx+0x90]
   1400301fc:	add    rcx,0x90
   140030203:	jmp    0x14000cdd8
   140030208:	mov    rcx,QWORD PTR [rdx+0x90]
   14003020f:	add    rcx,0x98
   140030216:	jmp    0x140018488
   14003021b:	mov    rcx,QWORD PTR [rdx+0x90]
   140030222:	add    rcx,0xa0
   140030229:	jmp    0x14001a350
   14003022e:	mov    rcx,QWORD PTR [rdx+0x90]
   140030235:	add    rcx,0xa8
   14003023c:	jmp    0x140029b48
   140030241:	mov    rcx,QWORD PTR [rdx+0x90]
   140030248:	add    rcx,0xc8
   14003024f:	jmp    0x140029b48
   140030254:	int3   
   140030255:	int3   
   140030256:	int3   
   140030257:	int3   
   140030258:	int3   
   140030259:	int3   
   14003025a:	mov    QWORD PTR [rsp+0x10],rdx
   14003025f:	push   rbp
   140030260:	sub    rsp,0x40
   140030264:	mov    rbp,rdx
   140030267:	mov    rcx,QWORD PTR [rbp+0x60]
   14003026b:	call   0x1400189fc
   140030270:	xor    edx,edx
   140030272:	xor    ecx,ecx
   140030274:	call   0x14002e2da
   140030279:	nop
   14003027a:	int3   
   14003027b:	int3   
   14003027c:	int3   
   14003027d:	int3   
   14003027e:	int3   
   14003027f:	int3   
   140030280:	lea    rcx,[rdx+0x90]
   140030287:	jmp    0x140015318
   14003028c:	int3   
   14003028d:	int3   
   14003028e:	int3   
   14003028f:	int3   
   140030290:	int3   
   140030291:	int3   
   140030292:	mov    QWORD PTR [rsp+0x10],rdx
   140030297:	push   rbp
   140030298:	sub    rsp,0x20
   14003029c:	mov    rbp,rdx
   14003029f:	mov    rcx,QWORD PTR [rbp+0x28]
   1400302a3:	call   0x140029e84
   1400302a8:	mov    DWORD PTR [rbp+0x48],eax
   1400302ab:	lea    rax,[rip+0xfffffffffffea46d]        # 0x14001a71f
   1400302b2:	add    rsp,0x20
   1400302b6:	pop    rbp
   1400302b7:	ret    
   1400302b8:	int3   
   1400302b9:	int3   
   1400302ba:	int3   
   1400302bb:	int3   
   1400302bc:	int3   
   1400302bd:	int3   
   1400302be:	int3   
   1400302bf:	mov    QWORD PTR [rsp+0x10],rdx
   1400302c4:	push   rbp
   1400302c5:	sub    rsp,0x20
   1400302c9:	mov    rbp,rdx
   1400302cc:	mov    rcx,QWORD PTR [rbp+0x28]
   1400302d0:	call   0x140029e84
   1400302d5:	mov    DWORD PTR [rbp+0x48],eax
   1400302d8:	lea    rax,[rip+0xfffffffffffea4ef]        # 0x14001a7ce
   1400302df:	add    rsp,0x20
   1400302e3:	pop    rbp
   1400302e4:	ret    
   1400302e5:	int3   
   1400302e6:	int3   
   1400302e7:	int3   
   1400302e8:	int3   
   1400302e9:	int3   
   1400302ea:	int3   
   1400302eb:	int3   
   1400302ec:	mov    QWORD PTR [rsp+0x10],rdx
   1400302f1:	push   rbp
   1400302f2:	sub    rsp,0x20
   1400302f6:	mov    rbp,rdx
   1400302f9:	mov    rcx,QWORD PTR [rbp+0x28]
   1400302fd:	call   0x140029e84
   140030302:	mov    DWORD PTR [rbp+0x48],eax
   140030305:	lea    rax,[rip+0xfffffffffffea57b]        # 0x14001a887
   14003030c:	add    rsp,0x20
   140030310:	pop    rbp
   140030311:	ret    
   140030312:	int3   
   140030313:	int3   
   140030314:	int3   
   140030315:	int3   
   140030316:	int3   
   140030317:	int3   
   140030318:	int3   
   140030319:	mov    rcx,QWORD PTR [rdx+0x40]
   140030320:	jmp    0x140023f48
   140030325:	mov    QWORD PTR [rsp+0x10],rdx
   14003032a:	push   rbx
   14003032b:	push   rbp
   14003032c:	push   rdi
   14003032d:	sub    rsp,0x20
   140030331:	mov    rbp,rdx
   140030334:	lea    rcx,[rip+0x1ad3d]        # 0x14004b078
   14003033b:	mov    rax,QWORD PTR [rip+0x1ad36]        # 0x14004b078
   140030342:	cmp    rax,rcx
   140030345:	je     0x140030387
   140030347:	test   BYTE PTR [rax+0x1c],0x1
   14003034b:	je     0x140030387
   14003034d:	mov    rdi,QWORD PTR [rbp+0x20]
   140030351:	mov    rax,QWORD PTR [rdi]
   140030354:	mov    rbx,QWORD PTR [rax+0x8]
   140030358:	mov    rcx,rbx
   14003035b:	call   QWORD PTR [rip+0x2347]        # 0x1400326a8
   140030361:	mov    rcx,rdi
   140030364:	call   rbx
   140030366:	mov    r9,rax
   140030369:	mov    edx,0xa
   14003036e:	lea    r8,[rip+0x830b]        # 0x140038680
   140030375:	mov    rcx,QWORD PTR [rip+0x1acfc]        # 0x14004b078
   14003037c:	mov    rcx,QWORD PTR [rcx+0x10]
   140030380:	call   0x1400038e0
   140030385:	jmp    0x14003038b
   140030387:	mov    rdi,QWORD PTR [rbp+0x20]
   14003038b:	mov    rcx,rdi
   14003038e:	call   0x140001fd4
   140030393:	mov    DWORD PTR [rbp+0x40],eax
   140030396:	lea    rax,[rip+0xfffffffffffeaafb]        # 0x14001ae98
   14003039d:	add    rsp,0x20
   1400303a1:	pop    rdi
   1400303a2:	pop    rbp
   1400303a3:	pop    rbx
   1400303a4:	ret    
   1400303a5:	int3   
   1400303a6:	int3   
   1400303a7:	int3   
   1400303a8:	int3   
   1400303a9:	int3   
   1400303aa:	int3   
   1400303ab:	int3   
   1400303ac:	mov    rcx,QWORD PTR [rdx+0x50]
   1400303b3:	add    rcx,0x8
   1400303b7:	jmp    0x14001a930
   1400303bc:	mov    rcx,QWORD PTR [rdx+0x50]
   1400303c3:	add    rcx,0x18
   1400303c7:	jmp    0x1400036a8
   1400303cc:	mov    rcx,QWORD PTR [rdx+0x50]
   1400303d3:	add    rcx,0x20
   1400303d7:	jmp    0x14001cd60
   1400303dc:	mov    rcx,QWORD PTR [rdx+0x38]
   1400303e3:	jmp    0x14001d244
   1400303e8:	mov    rcx,QWORD PTR [rdx+0x38]
   1400303ef:	add    rcx,0x10
   1400303f3:	jmp    0x140003674
   1400303f8:	mov    rcx,QWORD PTR [rdx+0x50]
   1400303ff:	add    rcx,0x28
   140030403:	jmp    0x14001b220
   140030408:	mov    rcx,QWORD PTR [rdx+0x50]
   14003040f:	add    rcx,0x68
   140030413:	jmp    0x14001b264
   140030418:	mov    rcx,QWORD PTR [rdx+0x50]
   14003041f:	add    rcx,0x78
   140030423:	jmp    0x140029b48
   140030428:	mov    rcx,QWORD PTR [rdx+0x38]
   14003042f:	jmp    0x140003940
   140030434:	mov    rcx,QWORD PTR [rdx+0x50]
   14003043b:	add    rcx,0x98
   140030442:	jmp    0x14001da8c
   140030447:	mov    rcx,QWORD PTR [rdx+0x40]
   14003044e:	jmp    0x140023f48
   140030453:	int3   
   140030454:	int3   
   140030455:	int3   
   140030456:	int3   
   140030457:	int3   
   140030458:	int3   
   140030459:	mov    rcx,QWORD PTR [rdx+0x40]
   140030460:	add    rcx,0x8
   140030464:	jmp    0x14001a930
   140030469:	mov    rcx,QWORD PTR [rdx+0x40]
   140030470:	add    rcx,0x18
   140030474:	jmp    0x1400036a8
   140030479:	int3   
   14003047a:	int3   
   14003047b:	int3   
   14003047c:	int3   
   14003047d:	int3   
   14003047e:	int3   
   14003047f:	lea    rcx,[rdx+0x30]
   140030486:	jmp    0x1400038b0
   14003048b:	lea    rcx,[rdx+0x88]
   140030492:	jmp    0x14001d0d0
   140030497:	mov    QWORD PTR [rsp+0x10],rdx
   14003049c:	push   rbp
   14003049d:	sub    rsp,0x30
   1400304a1:	mov    rbp,rdx
   1400304a4:	mov    rcx,QWORD PTR [rbp+0x48]
   1400304a8:	call   0x140001fd4
   1400304ad:	mov    DWORD PTR [rbp+0x78],eax
   1400304b0:	lea    rax,[rip+0xfffffffffffeaf9c]        # 0x14001b453
   1400304b7:	add    rsp,0x30
   1400304bb:	pop    rbp
   1400304bc:	ret    
   1400304bd:	int3   
   1400304be:	int3   
   1400304bf:	int3   
   1400304c0:	int3   
   1400304c1:	int3   
   1400304c2:	int3   
   1400304c3:	int3   
   1400304c4:	lea    rcx,[rdx+0x30]
   1400304cb:	jmp    0x14001d0d0
   1400304d0:	lea    rcx,[rdx+0x38]
   1400304d7:	jmp    0x1400038b0
   1400304dc:	mov    QWORD PTR [rsp+0x10],rdx
   1400304e1:	push   rbp
   1400304e2:	sub    rsp,0x30
   1400304e6:	mov    rbp,rdx
   1400304e9:	mov    rcx,QWORD PTR [rbp+0x58]
   1400304ed:	call   0x140001fd4
   1400304f2:	mov    DWORD PTR [rbp+0xa8],eax
   1400304f8:	lea    rax,[rip+0xfffffffffffeb327]        # 0x14001b826
   1400304ff:	add    rsp,0x30
   140030503:	pop    rbp
   140030504:	ret    
   140030505:	int3   
   140030506:	int3   
   140030507:	int3   
   140030508:	int3   
   140030509:	int3   
   14003050a:	int3   
   14003050b:	int3   
   14003050c:	lea    rcx,[rdx+0xb0]
   140030513:	jmp    0x1400038b0
   140030518:	lea    rcx,[rdx+0x70]
   14003051f:	jmp    0x14001d930
   140030524:	int3   
   140030525:	int3   
   140030526:	int3   
   140030527:	int3   
   140030528:	int3   
   140030529:	int3   
   14003052a:	mov    QWORD PTR [rsp+0x10],rdx
   14003052f:	push   rbx
   140030530:	push   rbp
   140030531:	push   rdi
   140030532:	sub    rsp,0x20
   140030536:	mov    rbp,rdx
   140030539:	lea    rcx,[rip+0x1ab38]        # 0x14004b078
   140030540:	mov    rax,QWORD PTR [rip+0x1ab31]        # 0x14004b078
   140030547:	cmp    rax,rcx
   14003054a:	je     0x14003058b
   14003054c:	test   BYTE PTR [rax+0x1c],0x1
   140030550:	je     0x14003058b
   140030552:	mov    rdi,QWORD PTR [rbp+0x28]
   140030556:	mov    rax,QWORD PTR [rdi]
   140030559:	mov    rbx,QWORD PTR [rax+0x8]
   14003055d:	mov    rcx,rbx
   140030560:	call   QWORD PTR [rip+0x2142]        # 0x1400326a8
   140030566:	mov    rcx,rdi
   140030569:	call   rbx
   14003056b:	mov    r9,rax
   14003056e:	mov    edx,0x18
   140030573:	lea    r8,[rip+0x8106]        # 0x140038680
   14003057a:	mov    rcx,QWORD PTR [rip+0x1aaf7]        # 0x14004b078
   140030581:	mov    rcx,QWORD PTR [rcx+0x10]
   140030585:	call   0x1400038e0
   14003058a:	nop
   14003058b:	lea    rax,[rip+0xfffffffffffebb80]        # 0x14001c112
   140030592:	add    rsp,0x20
   140030596:	pop    rdi
   140030597:	pop    rbp
   140030598:	pop    rbx
   140030599:	ret    
   14003059a:	int3   
   14003059b:	int3   
   14003059c:	int3   
   14003059d:	int3   
   14003059e:	int3   
   14003059f:	int3   
   1400305a0:	int3   
   1400305a1:	mov    QWORD PTR [rsp+0x10],rdx
   1400305a6:	push   rbx
   1400305a7:	push   rbp
   1400305a8:	push   rdi
   1400305a9:	sub    rsp,0x20
   1400305ad:	mov    rbp,rdx
   1400305b0:	lea    rcx,[rip+0x1aac1]        # 0x14004b078
   1400305b7:	mov    rax,QWORD PTR [rip+0x1aaba]        # 0x14004b078
   1400305be:	cmp    rax,rcx
   1400305c1:	je     0x140030602
   1400305c3:	test   BYTE PTR [rax+0x1c],0x1
   1400305c7:	je     0x140030602
   1400305c9:	mov    rdi,QWORD PTR [rbp+0x28]
   1400305cd:	mov    rax,QWORD PTR [rdi]
   1400305d0:	mov    rbx,QWORD PTR [rax+0x8]
   1400305d4:	mov    rcx,rbx
   1400305d7:	call   QWORD PTR [rip+0x20cb]        # 0x1400326a8
   1400305dd:	mov    rcx,rdi
   1400305e0:	call   rbx
   1400305e2:	mov    r9,rax
   1400305e5:	mov    edx,0x19
   1400305ea:	lea    r8,[rip+0x808f]        # 0x140038680
   1400305f1:	mov    rcx,QWORD PTR [rip+0x1aa80]        # 0x14004b078
   1400305f8:	mov    rcx,QWORD PTR [rcx+0x10]
   1400305fc:	call   0x1400038e0
   140030601:	nop
   140030602:	lea    rax,[rip+0xfffffffffffebb35]        # 0x14001c13e
   140030609:	add    rsp,0x20
   14003060d:	pop    rdi
   14003060e:	pop    rbp
   14003060f:	pop    rbx
   140030610:	ret    
   140030611:	int3   
   140030612:	int3   
   140030613:	int3   
   140030614:	int3   
   140030615:	int3   
   140030616:	int3   
   140030617:	int3   
   140030618:	lea    rcx,[rdx+0x38]
   14003061f:	jmp    0x14001d0d0
   140030624:	lea    rcx,[rdx+0x50]
   14003062b:	jmp    0x14001d930
   140030630:	lea    rcx,[rdx+0x58]
   140030637:	jmp    0x14001c720
   14003063c:	int3   
   14003063d:	int3   
   14003063e:	int3   
   14003063f:	int3   
   140030640:	int3   
   140030641:	int3   
   140030642:	lea    rcx,[rdx+0x50]
   140030649:	jmp    0x14001d930
   14003064e:	mov    QWORD PTR [rsp+0x10],rdx
   140030653:	push   rbp
   140030654:	sub    rsp,0x50
   140030658:	mov    rbp,rdx
   14003065b:	mov    rax,QWORD PTR [rbp+0x88]
   140030662:	mov    ecx,DWORD PTR [rax]
   140030664:	mov    DWORD PTR [rbp+0xe8],ecx
   14003066a:	lea    rax,[rip+0xfffffffffffec681]        # 0x14001ccf2
   140030671:	add    rsp,0x50
   140030675:	pop    rbp
   140030676:	ret    
   140030677:	int3   
   140030678:	mov    QWORD PTR [rsp+0x10],rdx
   14003067d:	push   rbp
   14003067e:	sub    rsp,0x50
   140030682:	mov    rbp,rdx
   140030685:	mov    rcx,QWORD PTR [rbp+0x90]
   14003068c:	call   0x140001fd4
   140030691:	mov    DWORD PTR [rbp+0xe8],eax
   140030697:	lea    rax,[rip+0xfffffffffffec654]        # 0x14001ccf2
   14003069e:	add    rsp,0x50
   1400306a2:	pop    rbp
   1400306a3:	ret    
   1400306a4:	int3   
   1400306a5:	int3   
   1400306a6:	int3   
   1400306a7:	int3   
   1400306a8:	int3   
   1400306a9:	int3   
   1400306aa:	int3   
   1400306ab:	mov    QWORD PTR [rsp+0x10],rdx
   1400306b0:	push   rbp
   1400306b1:	sub    rsp,0x20
   1400306b5:	mov    rbp,rdx
   1400306b8:	mov    rcx,QWORD PTR [rbp+0x28]
   1400306bc:	call   0x140029e84
   1400306c1:	mov    DWORD PTR [rbp+0x48],eax
   1400306c4:	lea    rax,[rip+0xfffffffffffecf62]        # 0x14001d62d
   1400306cb:	add    rsp,0x20
   1400306cf:	pop    rbp
   1400306d0:	ret    
   1400306d1:	int3   
   1400306d2:	int3   
   1400306d3:	int3   
   1400306d4:	int3   
   1400306d5:	int3   
   1400306d6:	int3   
   1400306d7:	int3   
   1400306d8:	mov    QWORD PTR [rsp+0x10],rdx
   1400306dd:	push   rbp
   1400306de:	sub    rsp,0x20
   1400306e2:	mov    rbp,rdx
   1400306e5:	mov    rdx,QWORD PTR [rbp+0x68]
   1400306e9:	mov    rcx,QWORD PTR [rbp+0x50]
   1400306ed:	call   0x14001d7d0
   1400306f2:	xor    edx,edx
   1400306f4:	xor    ecx,ecx
   1400306f6:	call   0x14002e2da
   1400306fb:	nop
   1400306fc:	int3   
   1400306fd:	int3   
   1400306fe:	int3   
   1400306ff:	int3   
   140030700:	int3   
   140030701:	int3   
   140030702:	mov    QWORD PTR [rsp+0x10],rdx
   140030707:	push   rbp
   140030708:	sub    rsp,0x20
   14003070c:	mov    rbp,rdx
   14003070f:	mov    rdx,QWORD PTR [rbp+0x40]
   140030713:	call   0x140003760
   140030718:	xor    edx,edx
   14003071a:	xor    ecx,ecx
   14003071c:	call   0x14002e2da
   140030721:	nop
   140030722:	int3   
   140030723:	int3   
   140030724:	int3   
   140030725:	int3   
   140030726:	int3   
   140030727:	int3   
   140030728:	mov    rcx,QWORD PTR [rdx+0x40]
   14003072f:	jmp    0x140005258
   140030734:	mov    QWORD PTR [rsp+0x10],rdx
   140030739:	push   rbx
   14003073a:	push   rbp
   14003073b:	push   rdi
   14003073c:	sub    rsp,0x20
   140030740:	mov    rbp,rdx
   140030743:	lea    rcx,[rip+0x1a92e]        # 0x14004b078
   14003074a:	mov    rax,QWORD PTR [rip+0x1a927]        # 0x14004b078
   140030751:	cmp    rax,rcx
   140030754:	je     0x140030794
   140030756:	test   BYTE PTR [rax+0x1c],0x1
   14003075a:	je     0x140030794
   14003075c:	mov    rdi,QWORD PTR [rbp+0x28]
   140030760:	mov    rax,QWORD PTR [rdi]
   140030763:	mov    rbx,QWORD PTR [rax+0x8]
   140030767:	mov    rcx,rbx
   14003076a:	call   QWORD PTR [rip+0x1f38]        # 0x1400326a8
   140030770:	mov    rcx,rdi
   140030773:	call   rbx
   140030775:	mov    r9,rax
   140030778:	mov    edx,0xa
   14003077d:	lea    r8,[rip+0x8044]        # 0x1400387c8
   140030784:	mov    rcx,QWORD PTR [rip+0x1a8ed]        # 0x14004b078
   14003078b:	mov    rcx,QWORD PTR [rcx+0x10]
   14003078f:	call   0x1400038e0
   140030794:	xor    edx,edx
   140030796:	xor    ecx,ecx
   140030798:	call   0x14002e2da
   14003079d:	nop
   14003079e:	int3   
   14003079f:	int3   
   1400307a0:	int3   
   1400307a1:	int3   
   1400307a2:	int3   
   1400307a3:	int3   
   1400307a4:	mov    rcx,QWORD PTR [rdx+0x50]
   1400307ab:	jmp    0x14001dd48
   1400307b0:	mov    rcx,QWORD PTR [rdx+0x50]
   1400307b7:	add    rcx,0x8
   1400307bb:	jmp    0x14001dd48
   1400307c0:	mov    rcx,QWORD PTR [rdx+0x50]
   1400307c7:	add    rcx,0x10
   1400307cb:	jmp    0x140012880
   1400307d0:	mov    rcx,QWORD PTR [rdx+0x50]
   1400307d7:	add    rcx,0x30
   1400307db:	jmp    0x1400036a8
   1400307e0:	mov    rcx,QWORD PTR [rdx+0x50]
   1400307e7:	add    rcx,0x38
   1400307eb:	jmp    0x1400036a8
   1400307f0:	mov    rcx,QWORD PTR [rdx+0x50]
   1400307f7:	add    rcx,0xd0
   1400307fe:	jmp    0x14000136c
   140030803:	mov    rcx,QWORD PTR [rdx+0x50]
   14003080a:	add    rcx,0xe0
   140030811:	jmp    0x14002b28c
   140030816:	int3   
   140030817:	int3   
   140030818:	int3   
   140030819:	int3   
   14003081a:	int3   
   14003081b:	int3   
   14003081c:	mov    rcx,QWORD PTR [rdx+0x80]
   140030823:	jmp    0x140023f48
   140030828:	mov    QWORD PTR [rsp+0x10],rdx
   14003082d:	push   rbx
   14003082e:	push   rbp
   14003082f:	push   rdi
   140030830:	sub    rsp,0x40
   140030834:	mov    rbp,rdx
   140030837:	lea    rcx,[rip+0x1a83a]        # 0x14004b078
   14003083e:	mov    rax,QWORD PTR [rip+0x1a833]        # 0x14004b078
   140030845:	cmp    rax,rcx
   140030848:	je     0x140030888
   14003084a:	test   BYTE PTR [rax+0x1c],0x1
   14003084e:	je     0x140030888
   140030850:	mov    rdi,QWORD PTR [rbp+0x48]
   140030854:	mov    rax,QWORD PTR [rdi]
   140030857:	mov    rbx,QWORD PTR [rax+0x8]
   14003085b:	mov    rcx,rbx
   14003085e:	call   QWORD PTR [rip+0x1e44]        # 0x1400326a8
   140030864:	mov    rcx,rdi
   140030867:	call   rbx
   140030869:	mov    r9,rax
   14003086c:	mov    edx,0x10
   140030871:	lea    r8,[rip+0x7f50]        # 0x1400387c8
   140030878:	mov    rcx,QWORD PTR [rip+0x1a7f9]        # 0x14004b078
   14003087f:	mov    rcx,QWORD PTR [rcx+0x10]
   140030883:	call   0x1400038e0
   140030888:	xor    edx,edx
   14003088a:	xor    ecx,ecx
   14003088c:	call   0x14002e2da
   140030891:	nop
   140030892:	int3   
   140030893:	int3   
   140030894:	int3   
   140030895:	int3   
   140030896:	int3   
   140030897:	int3   
   140030898:	mov    QWORD PTR [rsp+0x10],rdx
   14003089d:	push   rbx
   14003089e:	push   rbp
   14003089f:	sub    rsp,0x38
   1400308a3:	mov    rbp,rdx
   1400308a6:	mov    rbx,QWORD PTR [rbp+0x60]
   1400308aa:	mov    DWORD PTR [rbx+0xc8],0x1
   1400308b4:	mov    rdx,QWORD PTR [rbx+0x20]
   1400308b8:	mov    rcx,QWORD PTR [rbx+0xb0]
   1400308bf:	call   0x14001ef40
   1400308c4:	test   eax,eax
   1400308c6:	jns    0x14003094d
   1400308cc:	lea    rdx,[rip+0x1a7a5]        # 0x14004b078
   1400308d3:	mov    rcx,QWORD PTR [rip+0x1a79e]        # 0x14004b078
   1400308da:	cmp    rcx,rdx
   1400308dd:	je     0x1400308fd
   1400308df:	test   BYTE PTR [rcx+0x1c],0x1
   1400308e3:	je     0x1400308fd
   1400308e5:	mov    edx,0x15
   1400308ea:	mov    r9d,eax
   1400308ed:	lea    r8,[rip+0x7ed4]        # 0x1400387c8
   1400308f4:	mov    rcx,QWORD PTR [rcx+0x10]
   1400308f8:	call   0x140001f70
   1400308fd:	mov    DWORD PTR [rbx+0xc8],0x1
   140030907:	mov    rdx,QWORD PTR [rbx+0x20]
   14003090b:	mov    rcx,QWORD PTR [rbx+0xb0]
   140030912:	call   0x14001edfc
   140030917:	test   eax,eax
   140030919:	jns    0x14003094d
   14003091b:	lea    rdx,[rip+0x1a756]        # 0x14004b078
   140030922:	mov    rcx,QWORD PTR [rip+0x1a74f]        # 0x14004b078
   140030929:	cmp    rcx,rdx
   14003092c:	je     0x14003094d
   14003092e:	test   BYTE PTR [rcx+0x1c],0x2
   140030932:	je     0x14003094d
   140030934:	mov    edx,0x16
   140030939:	mov    r9d,eax
   14003093c:	lea    r8,[rip+0x7e85]        # 0x1400387c8
   140030943:	mov    rcx,QWORD PTR [rcx+0x10]
   140030947:	call   0x140001f70
   14003094c:	nop
   14003094d:	lea    rax,[rip+0xfffffffffffed9f1]        # 0x14001e345
   140030954:	add    rsp,0x38
   140030958:	pop    rbp
   140030959:	pop    rbx
   14003095a:	ret    
   14003095b:	int3   
   14003095c:	int3   
   14003095d:	int3   
   14003095e:	int3   
   14003095f:	int3   
   140030960:	int3   
   140030961:	int3   
   140030962:	lea    rcx,[rdx+0x50]
   140030969:	jmp    0x1400038b0
   14003096e:	int3   
   14003096f:	int3   
   140030970:	int3   
   140030971:	int3   
   140030972:	int3   
   140030973:	int3   
   140030974:	mov    QWORD PTR [rsp+0x10],rdx
   140030979:	push   rbp
   14003097a:	sub    rsp,0x20
   14003097e:	mov    rbp,rdx
   140030981:	mov    rcx,QWORD PTR [rbp+0x20]
   140030985:	add    rcx,0x30
   140030989:	xor    edx,edx
   14003098b:	call   0x14001f834
   140030990:	xor    edx,edx
   140030992:	xor    ecx,ecx
   140030994:	call   0x14002e2da
   140030999:	nop
   14003099a:	int3   
   14003099b:	int3   
   14003099c:	int3   
   14003099d:	int3   
   14003099e:	int3   
   14003099f:	int3   
   1400309a0:	mov    QWORD PTR [rsp+0x10],rdx
   1400309a5:	push   rbp
   1400309a6:	sub    rsp,0x40
   1400309aa:	mov    rbp,rdx
   1400309ad:	mov    rax,QWORD PTR [rbp+0x50]
   1400309b1:	mov    ecx,DWORD PTR [rax]
   1400309b3:	mov    DWORD PTR [rbp+0x40],ecx
   1400309b6:	lea    rax,[rip+0xfffffffffffeebc2]        # 0x14001f57f
   1400309bd:	add    rsp,0x40
   1400309c1:	pop    rbp
   1400309c2:	ret    
   1400309c3:	int3   
   1400309c4:	mov    QWORD PTR [rsp+0x10],rdx
   1400309c9:	push   rbp
   1400309ca:	sub    rsp,0x40
   1400309ce:	mov    rbp,rdx
   1400309d1:	mov    rcx,QWORD PTR [rbp+0x48]
   1400309d5:	call   0x140001fd4
   1400309da:	mov    DWORD PTR [rbp+0x40],eax
   1400309dd:	lea    rax,[rip+0xfffffffffffeeb9b]        # 0x14001f57f
   1400309e4:	add    rsp,0x40
   1400309e8:	pop    rbp
   1400309e9:	ret    
   1400309ea:	int3   
   1400309eb:	int3   
   1400309ec:	int3   
   1400309ed:	int3   
   1400309ee:	int3   
   1400309ef:	int3   
   1400309f0:	int3   
   1400309f1:	mov    rcx,QWORD PTR [rdx+0x40]
   1400309f8:	add    rcx,0x28
   1400309fc:	jmp    0x1400036a8
   140030a01:	int3   
   140030a02:	int3   
   140030a03:	int3   
   140030a04:	int3   
   140030a05:	int3   
   140030a06:	int3   
   140030a07:	lea    rcx,[rdx+0x78]
   140030a0e:	jmp    0x14000dec0
   140030a13:	lea    rcx,[rdx+0x80]
   140030a1a:	jmp    0x14000dec0
   140030a1f:	mov    QWORD PTR [rsp+0x10],rdx
   140030a24:	push   rbx
   140030a25:	push   rbp
   140030a26:	push   rdi
   140030a27:	sub    rsp,0x50
   140030a2b:	mov    rbp,rdx
   140030a2e:	lea    rcx,[rip+0x1a643]        # 0x14004b078
   140030a35:	mov    rax,QWORD PTR [rip+0x1a63c]        # 0x14004b078
   140030a3c:	cmp    rax,rcx
   140030a3f:	je     0x140030a81
   140030a41:	test   BYTE PTR [rax+0x1c],0x1
   140030a45:	je     0x140030a81
   140030a47:	mov    rdi,QWORD PTR [rbp+0x68]
   140030a4b:	mov    rax,QWORD PTR [rdi]
   140030a4e:	mov    rbx,QWORD PTR [rax+0x8]
   140030a52:	mov    rcx,rbx
   140030a55:	call   QWORD PTR [rip+0x1c4d]        # 0x1400326a8
   140030a5b:	mov    rcx,rdi
   140030a5e:	call   rbx
   140030a60:	mov    r9,rax
   140030a63:	mov    edx,0x14
   140030a68:	lea    r8,[rip+0x7d69]        # 0x1400387d8
   140030a6f:	mov    rcx,QWORD PTR [rip+0x1a602]        # 0x14004b078
   140030a76:	mov    rcx,QWORD PTR [rcx+0x10]
   140030a7a:	call   0x1400038e0
   140030a7f:	jmp    0x140030a85
   140030a81:	mov    rdi,QWORD PTR [rbp+0x68]
   140030a85:	mov    rcx,rdi
   140030a88:	call   0x140001fd4
   140030a8d:	mov    DWORD PTR [rbp+0x54],eax
   140030a90:	lea    rax,[rip+0xfffffffffffef7f8]        # 0x14002028f
   140030a97:	add    rsp,0x50
   140030a9b:	pop    rdi
   140030a9c:	pop    rbp
   140030a9d:	pop    rbx
   140030a9e:	ret    
   140030a9f:	int3   
   140030aa0:	int3   
   140030aa1:	int3   
   140030aa2:	int3   
   140030aa3:	int3   
   140030aa4:	int3   
   140030aa5:	int3   
   140030aa6:	mov    QWORD PTR [rsp+0x10],rdx
   140030aab:	push   rbx
   140030aac:	push   rbp
   140030aad:	push   rdi
   140030aae:	sub    rsp,0x30
   140030ab2:	mov    rbp,rdx
   140030ab5:	lea    rcx,[rip+0x1a5bc]        # 0x14004b078
   140030abc:	mov    rax,QWORD PTR [rip+0x1a5b5]        # 0x14004b078
   140030ac3:	cmp    rax,rcx
   140030ac6:	je     0x140030b06
   140030ac8:	test   BYTE PTR [rax+0x1c],0x2
   140030acc:	je     0x140030b06
   140030ace:	mov    rdi,QWORD PTR [rbp+0x70]
   140030ad2:	mov    rax,QWORD PTR [rdi]
   140030ad5:	mov    rbx,QWORD PTR [rax+0x8]
   140030ad9:	mov    rcx,rbx
   140030adc:	call   QWORD PTR [rip+0x1bc6]        # 0x1400326a8
   140030ae2:	mov    rcx,rdi
   140030ae5:	call   rbx
   140030ae7:	mov    r9,rax
   140030aea:	mov    edx,0x16
   140030aef:	lea    r8,[rip+0x7ce2]        # 0x1400387d8
   140030af6:	mov    rcx,QWORD PTR [rip+0x1a57b]        # 0x14004b078
   140030afd:	mov    rcx,QWORD PTR [rcx+0x10]
   140030b01:	call   0x1400038e0
   140030b06:	mov    BYTE PTR [rbp+0x30],0x1
   140030b0a:	lea    rax,[rip+0xfffffffffffef916]        # 0x140020427
   140030b11:	add    rsp,0x30
   140030b15:	pop    rdi
   140030b16:	pop    rbp
   140030b17:	pop    rbx
   140030b18:	ret    
   140030b19:	int3   
   140030b1a:	mov    QWORD PTR [rsp+0x10],rdx
   140030b1f:	push   rbx
   140030b20:	push   rbp
   140030b21:	push   rdi
   140030b22:	sub    rsp,0x30
   140030b26:	mov    rbp,rdx
   140030b29:	lea    rcx,[rip+0x1a548]        # 0x14004b078
   140030b30:	mov    rax,QWORD PTR [rip+0x1a541]        # 0x14004b078
   140030b37:	cmp    rax,rcx
   140030b3a:	je     0x140030b7b
   140030b3c:	test   BYTE PTR [rax+0x1c],0x2
   140030b40:	je     0x140030b7b
   140030b42:	mov    rdi,QWORD PTR [rbp+0x78]
   140030b46:	mov    rax,QWORD PTR [rdi]
   140030b49:	mov    rbx,QWORD PTR [rax+0x8]
   140030b4d:	mov    rcx,rbx
   140030b50:	call   QWORD PTR [rip+0x1b52]        # 0x1400326a8
   140030b56:	mov    rcx,rdi
   140030b59:	call   rbx
   140030b5b:	mov    r9,rax
   140030b5e:	mov    edx,0x17
   140030b63:	lea    r8,[rip+0x7c6e]        # 0x1400387d8
   140030b6a:	mov    rcx,QWORD PTR [rip+0x1a507]        # 0x14004b078
   140030b71:	mov    rcx,QWORD PTR [rcx+0x10]
   140030b75:	call   0x1400038e0
   140030b7a:	nop
   140030b7b:	lea    rax,[rip+0xfffffffffffef99f]        # 0x140020521
   140030b82:	add    rsp,0x30
   140030b86:	pop    rdi
   140030b87:	pop    rbp
   140030b88:	pop    rbx
   140030b89:	ret    
   140030b8a:	int3   
   140030b8b:	int3   
   140030b8c:	int3   
   140030b8d:	int3   
   140030b8e:	int3   
   140030b8f:	int3   
   140030b90:	int3   
   140030b91:	lea    rcx,[rdx+0x78]
   140030b98:	jmp    0x14000dec0
   140030b9d:	mov    QWORD PTR [rsp+0x10],rdx
   140030ba2:	push   rbx
   140030ba3:	push   rbp
   140030ba4:	push   rdi
   140030ba5:	sub    rsp,0x30
   140030ba9:	mov    rbp,rdx
   140030bac:	lea    rcx,[rip+0x1a4c5]        # 0x14004b078
   140030bb3:	mov    rax,QWORD PTR [rip+0x1a4be]        # 0x14004b078
   140030bba:	cmp    rax,rcx
   140030bbd:	je     0x140030bff
   140030bbf:	test   BYTE PTR [rax+0x1c],0x1
   140030bc3:	je     0x140030bff
   140030bc5:	mov    rdi,QWORD PTR [rbp+0x30]
   140030bc9:	mov    rax,QWORD PTR [rdi]
   140030bcc:	mov    rbx,QWORD PTR [rax+0x8]
   140030bd0:	mov    rcx,rbx
   140030bd3:	call   QWORD PTR [rip+0x1acf]        # 0x1400326a8
   140030bd9:	mov    rcx,rdi
   140030bdc:	call   rbx
   140030bde:	mov    r9,rax
   140030be1:	mov    edx,0x1b
   140030be6:	lea    r8,[rip+0x7beb]        # 0x1400387d8
   140030bed:	mov    rcx,QWORD PTR [rip+0x1a484]        # 0x14004b078
   140030bf4:	mov    rcx,QWORD PTR [rcx+0x10]
   140030bf8:	call   0x1400038e0
   140030bfd:	jmp    0x140030c03
   140030bff:	mov    rdi,QWORD PTR [rbp+0x30]
   140030c03:	mov    rcx,rdi
   140030c06:	call   0x140001fd4
   140030c0b:	mov    DWORD PTR [rbp+0x68],eax
   140030c0e:	lea    rax,[rip+0xfffffffffffefafc]        # 0x140020711
   140030c15:	add    rsp,0x30
   140030c19:	pop    rdi
   140030c1a:	pop    rbp
   140030c1b:	pop    rbx
   140030c1c:	ret    
   140030c1d:	int3   
   140030c1e:	int3   
   140030c1f:	int3   
   140030c20:	int3   
   140030c21:	int3   
   140030c22:	int3   
   140030c23:	int3   
   140030c24:	lea    rcx,[rdx+0x50]
   140030c2b:	jmp    0x14000dec0
   140030c30:	mov    QWORD PTR [rsp+0x10],rdx
   140030c35:	push   rbx
   140030c36:	push   rbp
   140030c37:	push   rdi
   140030c38:	sub    rsp,0x20
   140030c3c:	mov    rbp,rdx
   140030c3f:	lea    rcx,[rip+0x1a432]        # 0x14004b078
   140030c46:	mov    rax,QWORD PTR [rip+0x1a42b]        # 0x14004b078
   140030c4d:	cmp    rax,rcx
   140030c50:	je     0x140030c92
   140030c52:	test   BYTE PTR [rax+0x1c],0x1
   140030c56:	je     0x140030c92
   140030c58:	mov    rdi,QWORD PTR [rbp+0x20]
   140030c5c:	mov    rax,QWORD PTR [rdi]
   140030c5f:	mov    rbx,QWORD PTR [rax+0x8]
   140030c63:	mov    rcx,rbx
   140030c66:	call   QWORD PTR [rip+0x1a3c]        # 0x1400326a8
   140030c6c:	mov    rcx,rdi
   140030c6f:	call   rbx
   140030c71:	mov    r9,rax
   140030c74:	mov    edx,0x1e
   140030c79:	lea    r8,[rip+0x7b58]        # 0x1400387d8
   140030c80:	mov    rcx,QWORD PTR [rip+0x1a3f1]        # 0x14004b078
   140030c87:	mov    rcx,QWORD PTR [rcx+0x10]
   140030c8b:	call   0x1400038e0
   140030c90:	jmp    0x140030c96
   140030c92:	mov    rdi,QWORD PTR [rbp+0x20]
   140030c96:	mov    rcx,rdi
   140030c99:	call   0x140001fd4
   140030c9e:	mov    DWORD PTR [rbp+0x50],eax
   140030ca1:	lea    rax,[rip+0xfffffffffffefbb1]        # 0x140020859
   140030ca8:	add    rsp,0x20
   140030cac:	pop    rdi
   140030cad:	pop    rbp
   140030cae:	pop    rbx
   140030caf:	ret    
   140030cb0:	int3   
   140030cb1:	int3   
   140030cb2:	int3   
   140030cb3:	int3   
   140030cb4:	int3   
   140030cb5:	int3   
   140030cb6:	int3   
   140030cb7:	mov    rcx,QWORD PTR [rdx+0x50]
   140030cbe:	add    rcx,0x28
   140030cc2:	jmp    0x1400036a8
   140030cc7:	rex push rbp
   140030cc9:	sub    rsp,0x20
   140030ccd:	mov    rbp,rdx
   140030cd0:	mov    rcx,QWORD PTR [rbp+0x50]
   140030cd4:	add    rcx,0x30
   140030cd8:	lea    r9,[rip+0xfffffffffffd2c61]        # 0x140003940
   140030cdf:	mov    r8d,0x2
   140030ce5:	mov    edx,0x30
   140030cea:	call   0x14002dd24
   140030cef:	add    rsp,0x20
   140030cf3:	pop    rbp
   140030cf4:	ret    
   140030cf5:	int3   
   140030cf6:	int3   
   140030cf7:	int3   
   140030cf8:	int3   
   140030cf9:	int3   
   140030cfa:	int3   
   140030cfb:	mov    rcx,QWORD PTR [rdx+0x80]
   140030d02:	jmp    0x140023f48
   140030d07:	lea    rcx,[rdx+0x80]
   140030d0e:	jmp    0x14000d0bc
   140030d13:	int3   
   140030d14:	int3   
   140030d15:	int3   
   140030d16:	int3   
   140030d17:	int3   
   140030d18:	int3   
   140030d19:	lea    rcx,[rdx+0x20]
   140030d20:	jmp    0x14000dec0
   140030d25:	lea    rcx,[rdx+0x48]
   140030d2c:	jmp    0x14000dec0
   140030d31:	lea    rcx,[rdx+0x40]
   140030d38:	jmp    0x14000dec0
   140030d3d:	mov    QWORD PTR [rsp+0x10],rdx
   140030d42:	push   rbx
   140030d43:	push   rbp
   140030d44:	push   rdi
   140030d45:	sub    rsp,0x20
   140030d49:	mov    rbp,rdx
   140030d4c:	lea    rcx,[rip+0x1a325]        # 0x14004b078
   140030d53:	mov    rax,QWORD PTR [rip+0x1a31e]        # 0x14004b078
   140030d5a:	cmp    rax,rcx
   140030d5d:	je     0x140030d9f
   140030d5f:	test   BYTE PTR [rax+0x1c],0x1
   140030d63:	je     0x140030d9f
   140030d65:	mov    rdi,QWORD PTR [rbp+0x28]
   140030d69:	mov    rax,QWORD PTR [rdi]
   140030d6c:	mov    rbx,QWORD PTR [rax+0x8]
   140030d70:	mov    rcx,rbx
   140030d73:	call   QWORD PTR [rip+0x192f]        # 0x1400326a8
   140030d79:	mov    rcx,rdi
   140030d7c:	call   rbx
   140030d7e:	mov    r9,rax
   140030d81:	mov    edx,0x24
   140030d86:	lea    r8,[rip+0x7a4b]        # 0x1400387d8
   140030d8d:	mov    rcx,QWORD PTR [rip+0x1a2e4]        # 0x14004b078
   140030d94:	mov    rcx,QWORD PTR [rcx+0x10]
   140030d98:	call   0x1400038e0
   140030d9d:	jmp    0x140030da3
   140030d9f:	mov    rdi,QWORD PTR [rbp+0x28]
   140030da3:	mov    rcx,rdi
   140030da6:	call   0x140001fd4
   140030dab:	mov    DWORD PTR [rbp+0x20],eax
   140030dae:	lea    rax,[rip+0xfffffffffffeff17]        # 0x140020ccc
   140030db5:	add    rsp,0x20
   140030db9:	pop    rdi
   140030dba:	pop    rbp
   140030dbb:	pop    rbx
   140030dbc:	ret    
   140030dbd:	int3   
   140030dbe:	int3   
   140030dbf:	int3   
   140030dc0:	int3   
   140030dc1:	int3   
   140030dc2:	int3   
   140030dc3:	int3   
   140030dc4:	lea    rcx,[rdx+0x50]
   140030dcb:	jmp    0x14000dec0
   140030dd0:	mov    QWORD PTR [rsp+0x10],rdx
   140030dd5:	push   rbx
   140030dd6:	push   rbp
   140030dd7:	push   rdi
   140030dd8:	sub    rsp,0x20
   140030ddc:	mov    rbp,rdx
   140030ddf:	lea    rcx,[rip+0x1a292]        # 0x14004b078
   140030de6:	mov    rax,QWORD PTR [rip+0x1a28b]        # 0x14004b078
   140030ded:	cmp    rax,rcx
   140030df0:	je     0x140030e32
   140030df2:	test   BYTE PTR [rax+0x1c],0x1
   140030df6:	je     0x140030e32
   140030df8:	mov    rdi,QWORD PTR [rbp+0x20]
   140030dfc:	mov    rax,QWORD PTR [rdi]
   140030dff:	mov    rbx,QWORD PTR [rax+0x8]
   140030e03:	mov    rcx,rbx
   140030e06:	call   QWORD PTR [rip+0x189c]        # 0x1400326a8
   140030e0c:	mov    rcx,rdi
   140030e0f:	call   rbx
   140030e11:	mov    r9,rax
   140030e14:	mov    edx,0x26
   140030e19:	lea    r8,[rip+0x79b8]        # 0x1400387d8
   140030e20:	mov    rcx,QWORD PTR [rip+0x1a251]        # 0x14004b078
   140030e27:	mov    rcx,QWORD PTR [rcx+0x10]
   140030e2b:	call   0x1400038e0
   140030e30:	jmp    0x140030e36
   140030e32:	mov    rdi,QWORD PTR [rbp+0x20]
   140030e36:	mov    rcx,rdi
   140030e39:	call   0x140001fd4
   140030e3e:	mov    DWORD PTR [rbp+0x50],eax
   140030e41:	lea    rax,[rip+0xfffffffffffeff71]        # 0x140020db9
   140030e48:	add    rsp,0x20
   140030e4c:	pop    rdi
   140030e4d:	pop    rbp
   140030e4e:	pop    rbx
   140030e4f:	ret    
   140030e50:	int3   
   140030e51:	int3   
   140030e52:	int3   
   140030e53:	int3   
   140030e54:	int3   
   140030e55:	int3   
   140030e56:	int3   
   140030e57:	lea    rcx,[rdx+0x20]
   140030e5e:	jmp    0x14000dec0
   140030e63:	lea    rcx,[rdx+0x48]
   140030e6a:	jmp    0x14000dec0
   140030e6f:	lea    rcx,[rdx+0x40]
   140030e76:	jmp    0x14000dec0
   140030e7b:	mov    QWORD PTR [rsp+0x10],rdx
   140030e80:	push   rbx
   140030e81:	push   rbp
   140030e82:	push   rdi
   140030e83:	sub    rsp,0x20
   140030e87:	mov    rbp,rdx
   140030e8a:	lea    rcx,[rip+0x1a1e7]        # 0x14004b078
   140030e91:	mov    rax,QWORD PTR [rip+0x1a1e0]        # 0x14004b078
   140030e98:	cmp    rax,rcx
   140030e9b:	je     0x140030edd
   140030e9d:	test   BYTE PTR [rax+0x1c],0x1
   140030ea1:	je     0x140030edd
   140030ea3:	mov    rdi,QWORD PTR [rbp+0x28]
   140030ea7:	mov    rax,QWORD PTR [rdi]
   140030eaa:	mov    rbx,QWORD PTR [rax+0x8]
   140030eae:	mov    rcx,rbx
   140030eb1:	call   QWORD PTR [rip+0x17f1]        # 0x1400326a8
   140030eb7:	mov    rcx,rdi
   140030eba:	call   rbx
   140030ebc:	mov    r9,rax
   140030ebf:	mov    edx,0x29
   140030ec4:	lea    r8,[rip+0x790d]        # 0x1400387d8
   140030ecb:	mov    rcx,QWORD PTR [rip+0x1a1a6]        # 0x14004b078
   140030ed2:	mov    rcx,QWORD PTR [rcx+0x10]
   140030ed6:	call   0x1400038e0
   140030edb:	jmp    0x140030ee1
   140030edd:	mov    rdi,QWORD PTR [rbp+0x28]
   140030ee1:	mov    rcx,rdi
   140030ee4:	call   0x140001fd4
   140030ee9:	mov    DWORD PTR [rbp+0x20],eax
   140030eec:	lea    rax,[rip+0xffffffffffff006c]        # 0x140020f5f
   140030ef3:	add    rsp,0x20
   140030ef7:	pop    rdi
   140030ef8:	pop    rbp
   140030ef9:	pop    rbx
   140030efa:	ret    
   140030efb:	int3   
   140030efc:	int3   
   140030efd:	int3   
   140030efe:	int3   
   140030eff:	int3   
   140030f00:	int3   
   140030f01:	int3   
   140030f02:	lea    rcx,[rdx+0x60]
   140030f09:	jmp    0x1400036a8
   140030f0e:	lea    rcx,[rdx+0x30]
   140030f15:	jmp    0x140022f00
   140030f1a:	mov    QWORD PTR [rsp+0x10],rdx
   140030f1f:	push   rbp
   140030f20:	sub    rsp,0x30
   140030f24:	mov    rbp,rdx
   140030f27:	mov    rcx,QWORD PTR [rbp+0x48]
   140030f2b:	call   0x140001fd4
   140030f30:	mov    DWORD PTR [rbp+0x30],eax
   140030f33:	lea    rax,[rip+0xffffffffffff09db]        # 0x140021915
   140030f3a:	add    rsp,0x30
   140030f3e:	pop    rbp
   140030f3f:	ret    
   140030f40:	int3   
   140030f41:	int3   
   140030f42:	int3   
   140030f43:	int3   
   140030f44:	int3   
   140030f45:	int3   
   140030f46:	int3   
   140030f47:	lea    rcx,[rdx+0x20]
   140030f4e:	jmp    0x14000cdd8
   140030f53:	int3   
   140030f54:	int3   
   140030f55:	int3   
   140030f56:	int3   
   140030f57:	int3   
   140030f58:	int3   
   140030f59:	lea    rcx,[rdx+0x50]
   140030f60:	jmp    0x1400036a8
   140030f65:	int3   
   140030f66:	int3   
   140030f67:	int3   
   140030f68:	int3   
   140030f69:	int3   
   140030f6a:	int3   
   140030f6b:	lea    rcx,[rdx+0xc8]
   140030f72:	jmp    0x14000cdd8
   140030f77:	int3   
   140030f78:	int3   
   140030f79:	int3   
   140030f7a:	int3   
   140030f7b:	int3   
   140030f7c:	int3   
   140030f7d:	lea    rcx,[rdx+0x28]
   140030f84:	jmp    0x14000cdd8
   140030f89:	int3   
   140030f8a:	int3   
   140030f8b:	int3   
   140030f8c:	int3   
   140030f8d:	int3   
   140030f8e:	int3   
   140030f8f:	mov    QWORD PTR [rsp+0x10],rdx
   140030f94:	push   rbp
   140030f95:	sub    rsp,0x20
   140030f99:	mov    rbp,rdx
   140030f9c:	mov    rcx,QWORD PTR [rbp+0x28]
   140030fa0:	call   0x140029e84
   140030fa5:	mov    DWORD PTR [rbp+0x48],eax
   140030fa8:	lea    rax,[rip+0xffffffffffff2025]        # 0x140022fd4
   140030faf:	add    rsp,0x20
   140030fb3:	pop    rbp
   140030fb4:	ret    
   140030fb5:	int3   
   140030fb6:	int3   
   140030fb7:	int3   
   140030fb8:	int3   
   140030fb9:	int3   
   140030fba:	int3   
   140030fbb:	int3   
   140030fbc:	mov    QWORD PTR [rsp+0x10],rdx
   140030fc1:	push   rbp
   140030fc2:	sub    rsp,0x20
   140030fc6:	mov    rbp,rdx
   140030fc9:	mov    rcx,QWORD PTR [rbp+0x28]
   140030fcd:	call   0x140029e84
   140030fd2:	mov    DWORD PTR [rbp+0x48],eax
   140030fd5:	lea    rax,[rip+0xffffffffffff2094]        # 0x140023070
   140030fdc:	add    rsp,0x20
   140030fe0:	pop    rbp
   140030fe1:	ret    
   140030fe2:	int3   
   140030fe3:	int3   
   140030fe4:	int3   
   140030fe5:	int3   
   140030fe6:	int3   
   140030fe7:	int3   
   140030fe8:	int3   
   140030fe9:	mov    QWORD PTR [rsp+0x10],rdx
   140030fee:	push   rbp
   140030fef:	sub    rsp,0x20
   140030ff3:	mov    rbp,rdx
   140030ff6:	mov    rcx,QWORD PTR [rbp+0x28]
   140030ffa:	call   0x140029e84
   140030fff:	mov    DWORD PTR [rbp+0x48],eax
   140031002:	lea    rax,[rip+0xffffffffffff2103]        # 0x14002310c
   140031009:	add    rsp,0x20
   14003100d:	pop    rbp
   14003100e:	ret    
   14003100f:	int3   
   140031010:	int3   
   140031011:	int3   
   140031012:	int3   
   140031013:	int3   
   140031014:	int3   
   140031015:	int3   
   140031016:	mov    QWORD PTR [rsp+0x10],rdx
   14003101b:	push   rbp
   14003101c:	sub    rsp,0x20
   140031020:	mov    rbp,rdx
   140031023:	mov    rcx,QWORD PTR [rbp+0x40]
   140031027:	call   0x140029e84
   14003102c:	mov    DWORD PTR [rbp+0x28],eax
   14003102f:	lea    rax,[rip+0xffffffffffff230b]        # 0x140023341
   140031036:	add    rsp,0x20
   14003103a:	pop    rbp
   14003103b:	ret    
   14003103c:	int3   
   14003103d:	int3   
   14003103e:	int3   
   14003103f:	int3   
   140031040:	int3   
   140031041:	int3   
   140031042:	int3   
   140031043:	mov    QWORD PTR [rsp+0x10],rdx
   140031048:	push   rbp
   140031049:	sub    rsp,0x20
   14003104d:	mov    rbp,rdx
   140031050:	mov    rcx,QWORD PTR [rbp+0x30]
   140031054:	call   0x140029e84
   140031059:	mov    DWORD PTR [rbp+0x80],eax
   14003105f:	lea    rax,[rip+0xffffffffffff249a]        # 0x140023500
   140031066:	add    rsp,0x20
   14003106a:	pop    rbp
   14003106b:	ret    
   14003106c:	int3   
   14003106d:	int3   
   14003106e:	int3   
   14003106f:	int3   
   140031070:	int3   
   140031071:	int3   
   140031072:	int3   
   140031073:	rex push rbp
   140031075:	mov    rbp,rdx
   140031078:	mov    eax,DWORD PTR [rip+0x1f1f2]        # 0x140050270
   14003107e:	and    eax,0xfffffffe
   140031081:	mov    DWORD PTR [rip+0x1f1e9],eax        # 0x140050270
   140031087:	pop    rbp
   140031088:	ret    
   140031089:	lea    rcx,[rip+0x1f1e8]        # 0x140050278
   140031090:	jmp    0x140023e84
   140031095:	lea    rcx,[rip+0x1f1dc]        # 0x140050278
   14003109c:	add    rcx,0x10
   1400310a0:	jmp    0x14002b28c
   1400310a5:	int3   
   1400310a6:	int3   
   1400310a7:	int3   
   1400310a8:	int3   
   1400310a9:	int3   
   1400310aa:	int3   
   1400310ab:	lea    rcx,[rdx+0x28]
   1400310b2:	jmp    0x140010f9c
   1400310b7:	int3   
   1400310b8:	int3   
   1400310b9:	int3   
   1400310ba:	int3   
   1400310bb:	int3   
   1400310bc:	int3   
   1400310bd:	mov    QWORD PTR [rsp+0x10],rdx
   1400310c2:	push   rbp
   1400310c3:	sub    rsp,0x20
   1400310c7:	mov    rbp,rdx
   1400310ca:	mov    rdx,QWORD PTR [rbp+0x40]
   1400310ce:	call   0x140003760
   1400310d3:	xor    edx,edx
   1400310d5:	xor    ecx,ecx
   1400310d7:	call   0x14002e2da
   1400310dc:	nop
   1400310dd:	int3   
   1400310de:	int3   
   1400310df:	int3   
   1400310e0:	int3   
   1400310e1:	int3   
   1400310e2:	int3   
   1400310e3:	mov    QWORD PTR [rsp+0x10],rdx
   1400310e8:	push   rbp
   1400310e9:	sub    rsp,0x20
   1400310ed:	mov    rbp,rdx
   1400310f0:	mov    rdx,QWORD PTR [rbp+0x50]
   1400310f4:	call   0x140003760
   1400310f9:	xor    edx,edx
   1400310fb:	xor    ecx,ecx
   1400310fd:	call   0x14002e2da
   140031102:	nop
   140031103:	int3   
   140031104:	int3   
   140031105:	int3   
   140031106:	int3   
   140031107:	int3   
   140031108:	int3   
   140031109:	mov    QWORD PTR [rsp+0x10],rdx
   14003110e:	push   rbp
   14003110f:	sub    rsp,0x30
   140031113:	mov    rbp,rdx
   140031116:	mov    rdx,QWORD PTR [rbp+0x80]
   14003111d:	call   0x140003760
   140031122:	xor    edx,edx
   140031124:	xor    ecx,ecx
   140031126:	call   0x14002e2da
   14003112b:	nop
   14003112c:	int3   
   14003112d:	int3   
   14003112e:	int3   
   14003112f:	int3   
   140031130:	int3   
   140031131:	int3   
   140031132:	mov    QWORD PTR [rsp+0x10],rdx
   140031137:	push   rbp
   140031138:	sub    rsp,0x20
   14003113c:	mov    rbp,rdx
   14003113f:	mov    rdx,QWORD PTR [rbp+0x48]
   140031143:	call   0x140003760
   140031148:	xor    edx,edx
   14003114a:	xor    ecx,ecx
   14003114c:	call   0x14002e2da
   140031151:	nop
   140031152:	int3   
   140031153:	int3   
   140031154:	int3   
   140031155:	int3   
   140031156:	int3   
   140031157:	int3   
   140031158:	mov    QWORD PTR [rsp+0x10],rdx
   14003115d:	push   rbp
   14003115e:	sub    rsp,0x30
   140031162:	mov    rbp,rdx
   140031165:	mov    rdx,QWORD PTR [rbp+0x70]
   140031169:	call   0x140003760
   14003116e:	xor    edx,edx
   140031170:	xor    ecx,ecx
   140031172:	call   0x14002e2da
   140031177:	nop
   140031178:	int3   
   140031179:	int3   
   14003117a:	int3   
   14003117b:	int3   
   14003117c:	int3   
   14003117d:	int3   
   14003117e:	rex push rbp
   140031180:	sub    rsp,0x40
   140031184:	mov    rbp,rdx
   140031187:	mov    rax,QWORD PTR [rcx]
   14003118a:	xor    ecx,ecx
   14003118c:	cmp    DWORD PTR [rax],0xc0000006
   140031192:	sete   cl
   140031195:	mov    eax,ecx
   140031197:	add    rsp,0x40
   14003119b:	pop    rbp
   14003119c:	ret    
   14003119d:	int3   
   14003119e:	int3   
   14003119f:	int3   
   1400311a0:	int3   
   1400311a1:	int3   
   1400311a2:	int3   
   1400311a3:	int3   
   1400311a4:	lea    rcx,[rdx+0x30]
   1400311ab:	jmp    0x1400036a8
   1400311b0:	lea    rcx,[rdx+0x38]
   1400311b7:	jmp    0x14000136c
   1400311bc:	lea    rcx,[rdx+0x78]
   1400311c3:	jmp    0x14000ce88
   1400311c8:	int3   
   1400311c9:	int3   
   1400311ca:	int3   
   1400311cb:	int3   
   1400311cc:	int3   
   1400311cd:	int3   
   1400311ce:	lea    rcx,[rdx+0xa8]
   1400311d5:	jmp    0x1400036a8
   1400311da:	lea    rcx,[rdx+0x68]
   1400311e1:	jmp    0x1400036a8
   1400311e6:	lea    rcx,[rdx+0x80]
   1400311ed:	jmp    0x14000136c
   1400311f2:	lea    rcx,[rdx+0x78]
   1400311f9:	jmp    0x14000136c
   1400311fe:	lea    rcx,[rdx+0x88]
   140031205:	jmp    0x14000136c
   14003120a:	lea    rcx,[rdx+0x70]
   140031211:	jmp    0x14000136c
   140031216:	lea    rcx,[rdx+0x90]
   14003121d:	jmp    0x14000136c
   140031222:	int3   
   140031223:	int3   
   140031224:	int3   
   140031225:	int3   
   140031226:	int3   
   140031227:	int3   
   140031228:	lea    rcx,[rdx+0x40]
   14003122f:	jmp    0x14000136c
   140031234:	lea    rcx,[rdx+0x38]
   14003123b:	jmp    0x14000136c
   140031240:	int3   
   140031241:	int3   
   140031242:	int3   
   140031243:	int3   
   140031244:	int3   
   140031245:	int3   
   140031246:	mov    rcx,QWORD PTR [rdx+0x30]
   14003124d:	jmp    0x140023f48
   140031252:	lea    rcx,[rdx+0x30]
   140031259:	jmp    0x14000de2c
   14003125e:	int3   
   14003125f:	int3   
   140031260:	int3   
   140031261:	int3   
   140031262:	int3   
   140031263:	int3   
   140031264:	lea    rcx,[rdx+0x30]
   14003126b:	jmp    0x14000136c
   140031270:	int3   
   140031271:	int3   
   140031272:	int3   
   140031273:	int3   
   140031274:	int3   
   140031275:	int3   
   140031276:	mov    QWORD PTR [rsp+0x10],rdx
   14003127b:	push   rbp
   14003127c:	sub    rsp,0x20
   140031280:	mov    rbp,rdx
   140031283:	lea    rax,[rip+0xffffffffffff66c3]        # 0x14002794d
   14003128a:	add    rsp,0x20
   14003128e:	pop    rbp
   14003128f:	ret    
   140031290:	int3   
   140031291:	int3   
   140031292:	int3   
   140031293:	int3   
   140031294:	int3   
   140031295:	int3   
   140031296:	int3   
   140031297:	lea    rcx,[rdx+0x58]
   14003129e:	jmp    0x14000136c
   1400312a3:	mov    QWORD PTR [rsp+0x10],rdx
   1400312a8:	push   rbp
   1400312a9:	sub    rsp,0x20
   1400312ad:	mov    rbp,rdx
   1400312b0:	lea    rax,[rip+0xffffffffffff6756]        # 0x140027a0d
   1400312b7:	add    rsp,0x20
   1400312bb:	pop    rbp
   1400312bc:	ret    
   1400312bd:	int3   
   1400312be:	int3   
   1400312bf:	int3   
   1400312c0:	int3   
   1400312c1:	int3   
   1400312c2:	int3   
   1400312c3:	int3   
   1400312c4:	mov    QWORD PTR [rsp+0x10],rdx
   1400312c9:	push   rbp
   1400312ca:	sub    rsp,0x20
   1400312ce:	mov    rbp,rdx
   1400312d1:	mov    rcx,QWORD PTR [rbp+0x28]
   1400312d5:	call   0x140029e84
   1400312da:	mov    DWORD PTR [rbp+0x48],eax
   1400312dd:	lea    rax,[rip+0xffffffffffff6c7c]        # 0x140027f60
   1400312e4:	add    rsp,0x20
   1400312e8:	pop    rbp
   1400312e9:	ret    
   1400312ea:	int3   
   1400312eb:	int3   
   1400312ec:	int3   
   1400312ed:	int3   
   1400312ee:	int3   
   1400312ef:	int3   
   1400312f0:	int3   
   1400312f1:	lea    rcx,[rdx+0x28]
   1400312f8:	jmp    0x140003674
   1400312fd:	mov    QWORD PTR [rsp+0x10],rdx
   140031302:	push   rbp
   140031303:	sub    rsp,0x20
   140031307:	mov    rbp,rdx
   14003130a:	mov    rcx,QWORD PTR [rbp+0x40]
   14003130e:	call   0x140001fd4
   140031313:	mov    DWORD PTR [rbp+0x20],eax
   140031316:	lea    rax,[rip+0xffffffffffff6dd5]        # 0x1400280f2
   14003131d:	add    rsp,0x20
   140031321:	pop    rbp
   140031322:	ret    
   140031323:	int3   
   140031324:	int3   
   140031325:	int3   
   140031326:	int3   
   140031327:	int3   
   140031328:	int3   
   140031329:	int3   
   14003132a:	lea    rcx,[rdx+0x88]
   140031331:	jmp    0x1400036e0
   140031336:	lea    rcx,[rdx+0x68]
   14003133d:	jmp    0x140015318
   140031342:	lea    rcx,[rdx+0xe8]
   140031349:	jmp    0x1400037e0
   14003134e:	lea    rcx,[rdx+0xb8]
   140031355:	jmp    0x140005f6c
   14003135a:	lea    rcx,[rdx+0xa0]
   140031361:	jmp    0x14000d10c
   140031366:	lea    rcx,[rdx+0xe8]
   14003136d:	jmp    0x140005f6c
   140031372:	int3   
   140031373:	int3   
   140031374:	int3   
   140031375:	int3   
   140031376:	int3   
   140031377:	int3   
   140031378:	mov    QWORD PTR [rsp+0x10],rdx
   14003137d:	push   rbp
   14003137e:	sub    rsp,0x20
   140031382:	mov    rbp,rdx
   140031385:	mov    rdx,QWORD PTR [rbp+0x48]
   140031389:	call   0x140003760
   14003138e:	xor    edx,edx
   140031390:	xor    ecx,ecx
   140031392:	call   0x14002e2da
   140031397:	nop
   140031398:	int3   
   140031399:	int3   
   14003139a:	int3   
   14003139b:	int3   
   14003139c:	int3   
   14003139d:	int3   
   14003139e:	mov    QWORD PTR [rsp+0x10],rdx
   1400313a3:	push   rbp
   1400313a4:	sub    rsp,0x30
   1400313a8:	mov    rbp,rdx
   1400313ab:	mov    rdx,QWORD PTR [rbp+0x78]
   1400313af:	call   0x140003760
   1400313b4:	xor    edx,edx
   1400313b6:	xor    ecx,ecx
   1400313b8:	call   0x14002e2da
   1400313bd:	nop
   1400313be:	int3   
   1400313bf:	int3   
   1400313c0:	int3   
   1400313c1:	int3   
   1400313c2:	int3   
   1400313c3:	int3   
   1400313c4:	mov    QWORD PTR [rsp+0x10],rdx
   1400313c9:	push   rbx
   1400313ca:	push   rbp
   1400313cb:	sub    rsp,0x28
   1400313cf:	mov    rbp,rdx
   1400313d2:	mov    rbx,QWORD PTR [rbp+0x58]
   1400313d6:	jmp    0x1400313fe
   1400313d8:	cmp    QWORD PTR [rbx+0x18],0x8
   1400313dd:	jb     0x1400313e8
   1400313df:	mov    rcx,QWORD PTR [rbx]
   1400313e2:	call   QWORD PTR [rip+0x11e0]        # 0x1400325c8
   1400313e8:	mov    QWORD PTR [rbx+0x18],0x7
   1400313f0:	and    QWORD PTR [rbx+0x10],0x0
   1400313f5:	xor    eax,eax
   1400313f7:	mov    WORD PTR [rbx],ax
   1400313fa:	add    rbx,0x20
   1400313fe:	cmp    rbx,QWORD PTR [rbp+0x50]
   140031402:	jne    0x1400313d8
   140031404:	xor    edx,edx
   140031406:	xor    ecx,ecx
   140031408:	call   0x14002e2da
   14003140d:	nop
   14003140e:	int3   
   14003140f:	int3   
   140031410:	int3   
   140031411:	int3   
   140031412:	int3   
   140031413:	int3   
   140031414:	mov    rcx,QWORD PTR [rdx+0x40]
   14003141b:	jmp    0x14001dd48
   140031420:	mov    rcx,QWORD PTR [rdx+0x40]
   140031427:	add    rcx,0x10
   14003142b:	jmp    0x14002b28c
   140031430:	int3   
   140031431:	int3   
   140031432:	int3   
   140031433:	int3   
   140031434:	int3   
   140031435:	int3   
   140031436:	mov    QWORD PTR [rsp+0x10],rdx
   14003143b:	push   rbp
   14003143c:	sub    rsp,0x20
   140031440:	mov    rbp,rdx
   140031443:	mov    rcx,QWORD PTR [rbp+0x28]
   140031447:	call   0x140029e84
   14003144c:	mov    DWORD PTR [rbp+0x48],eax
   14003144f:	lea    rax,[rip+0xffffffffffffa57c]        # 0x14002b9d2
   140031456:	add    rsp,0x20
   14003145a:	pop    rbp
   14003145b:	ret    
   14003145c:	int3   
   14003145d:	int3   
   14003145e:	int3   
   14003145f:	int3   
   140031460:	int3   
   140031461:	int3   
   140031462:	int3   
   140031463:	mov    rcx,QWORD PTR [rdx+0x60]
   14003146a:	jmp    0x14001dd48
   14003146f:	mov    rcx,QWORD PTR [rdx+0x70]
   140031476:	jmp    0x14002caa0
   14003147b:	mov    rcx,QWORD PTR [rdx+0x70]
   140031482:	add    rcx,0x10
   140031486:	jmp    0x140003674
   14003148b:	int3   
   14003148c:	int3   
   14003148d:	int3   
   14003148e:	int3   
   14003148f:	int3   
   140031490:	int3   
   140031491:	mov    rcx,QWORD PTR [rdx+0x50]
   140031498:	jmp    0x140023f48
   14003149d:	mov    rcx,QWORD PTR [rdx+0x50]
   1400314a4:	jmp    0x140012880
   1400314a9:	mov    rcx,QWORD PTR [rdx+0x50]
   1400314b0:	add    rcx,0x10
   1400314b4:	jmp    0x1400037e0
   1400314b9:	lea    rcx,[rdx+0x50]
   1400314c0:	jmp    0x14000cdd8
   1400314c5:	mov    QWORD PTR [rsp+0x10],rdx
   1400314ca:	push   rbp
   1400314cb:	sub    rsp,0x20
   1400314cf:	mov    rbp,rdx
   1400314d2:	mov    rcx,QWORD PTR [rbp+0x28]
   1400314d6:	call   0x140029e84
   1400314db:	mov    DWORD PTR [rbp+0x50],eax
   1400314de:	lea    rax,[rip+0xffffffffffffaabb]        # 0x14002bfa0
   1400314e5:	add    rsp,0x20
   1400314e9:	pop    rbp
   1400314ea:	ret    
   1400314eb:	int3   
   1400314ec:	int3   
   1400314ed:	int3   
   1400314ee:	int3   
   1400314ef:	int3   
   1400314f0:	int3   
   1400314f1:	int3   
   1400314f2:	mov    rcx,QWORD PTR [rdx+0x48]
   1400314f9:	jmp    0x140023f48
   1400314fe:	mov    QWORD PTR [rsp+0x10],rdx
   140031503:	push   rbp
   140031504:	sub    rsp,0x20
   140031508:	mov    rbp,rdx
   14003150b:	mov    rcx,QWORD PTR [rbp+0x28]
   14003150f:	call   0x140029e84
   140031514:	mov    DWORD PTR [rbp+0x48],eax
   140031517:	lea    rax,[rip+0xffffffffffffac06]        # 0x14002c124
   14003151e:	add    rsp,0x20
   140031522:	pop    rbp
   140031523:	ret    
   140031524:	int3   
   140031525:	int3   
   140031526:	int3   
   140031527:	int3   
   140031528:	int3   
   140031529:	int3   
   14003152a:	int3   
   14003152b:	lea    rcx,[rdx+0x90]
   140031532:	jmp    0x14002c950
   140031537:	lea    rcx,[rdx+0x20]
   14003153e:	jmp    0x140015318
   140031543:	lea    rcx,[rdx+0x98]
   14003154a:	jmp    0x140015318
   14003154f:	int3   
   140031550:	int3   
   140031551:	int3   
   140031552:	int3   
   140031553:	int3   
   140031554:	int3   
   140031555:	lea    rcx,[rdx+0x78]
   14003155c:	jmp    0x14000cdd8
   140031561:	lea    rcx,[rdx+0x28]
   140031568:	jmp    0x14002c980
   14003156d:	int3   
   14003156e:	int3   
   14003156f:	int3   
   140031570:	int3   
   140031571:	int3   
   140031572:	int3   
   140031573:	mov    QWORD PTR [rsp+0x10],rdx
   140031578:	push   rbp
   140031579:	sub    rsp,0x20
   14003157d:	mov    rbp,rdx
   140031580:	xor    edx,edx
   140031582:	xor    ecx,ecx
   140031584:	call   0x14002e2da
   140031589:	nop
   14003158a:	int3   
   14003158b:	int3   
   14003158c:	int3   
   14003158d:	int3   
   14003158e:	int3   
   14003158f:	int3   
   140031590:	mov    QWORD PTR [rsp+0x10],rdx
   140031595:	push   rbp
   140031596:	sub    rsp,0x20
   14003159a:	mov    rbp,rdx
   14003159d:	mov    rcx,QWORD PTR [rbp+0x28]
   1400315a1:	call   0x140029e84
   1400315a6:	mov    DWORD PTR [rbp+0x48],eax
   1400315a9:	lea    rax,[rip+0xffffffffffffb894]        # 0x14002ce44
   1400315b0:	add    rsp,0x20
   1400315b4:	pop    rbp
   1400315b5:	ret    
   1400315b6:	int3   
   1400315b7:	int3   
   1400315b8:	int3   
   1400315b9:	int3   
   1400315ba:	int3   
   1400315bb:	int3   
   1400315bc:	int3   
   1400315bd:	mov    QWORD PTR [rsp+0x10],rdx
   1400315c2:	push   rbp
   1400315c3:	sub    rsp,0x20
   1400315c7:	mov    rbp,rdx
   1400315ca:	mov    rdx,QWORD PTR [rbp+0x68]
   1400315ce:	mov    rcx,QWORD PTR [rbp+0x50]
   1400315d2:	call   0x14002cfb8
   1400315d7:	xor    edx,edx
   1400315d9:	xor    ecx,ecx
   1400315db:	call   0x14002e2da
   1400315e0:	nop
   1400315e1:	int3   
   1400315e2:	int3   
   1400315e3:	int3   
   1400315e4:	int3   
   1400315e5:	int3   
   1400315e6:	int3   
   1400315e7:	rex push rbp
   1400315e9:	sub    rsp,0x20
   1400315ed:	mov    rbp,rdx
   1400315f0:	mov    rax,QWORD PTR [rcx]
   1400315f3:	mov    rdx,rcx
   1400315f6:	mov    ecx,DWORD PTR [rax]
   1400315f8:	call   0x14002e38e
   1400315fd:	nop
   1400315fe:	add    rsp,0x20
   140031602:	pop    rbp
   140031603:	ret    
   140031604:	int3   
   140031605:	int3   
   140031606:	int3   
   140031607:	int3   
   140031608:	int3   
   140031609:	int3   
   14003160a:	int3   
   14003160b:	rex push rbp
   14003160d:	sub    rsp,0x20
   140031611:	mov    rbp,rdx
   140031614:	cmp    DWORD PTR [rbp+0x20],0x0
   140031618:	jne    0x140031630
   14003161a:	mov    r9,QWORD PTR [rbp+0x78]
   14003161e:	mov    r8d,DWORD PTR [rbp+0x70]
   140031622:	mov    rdx,QWORD PTR [rbp+0x68]
   140031626:	mov    rcx,QWORD PTR [rbp+0x60]
   14003162a:	call   0x14002dd94
   14003162f:	nop
   140031630:	add    rsp,0x20
   140031634:	pop    rbp
   140031635:	ret    
   140031636:	int3   
   140031637:	int3   
   140031638:	int3   
   140031639:	int3   
   14003163a:	int3   
   14003163b:	int3   
   14003163c:	int3   
   14003163d:	rex push rbp
   14003163f:	sub    rsp,0x20
   140031643:	mov    rbp,rdx
   140031646:	mov    QWORD PTR [rbp+0x38],rcx
   14003164a:	mov    QWORD PTR [rbp+0x28],rcx
   14003164e:	mov    rax,QWORD PTR [rbp+0x28]
   140031652:	mov    rcx,QWORD PTR [rax]
   140031655:	mov    QWORD PTR [rbp+0x30],rcx
   140031659:	mov    rax,QWORD PTR [rbp+0x30]
   14003165d:	cmp    DWORD PTR [rax],0xe06d7363
   140031663:	je     0x140031671
   140031665:	mov    DWORD PTR [rbp+0x20],0x0
   14003166c:	mov    eax,DWORD PTR [rbp+0x20]
   14003166f:	jmp    0x140031678
   140031671:	call   QWORD PTR [rip+0xe89]        # 0x140032500
   140031677:	nop
   140031678:	add    rsp,0x20
   14003167c:	pop    rbp
   14003167d:	ret    
   14003167e:	int3   
   14003167f:	int3   
   140031680:	int3   
   140031681:	int3   
   140031682:	int3   
   140031683:	int3   
   140031684:	int3   
   140031685:	rex push rbp
   140031687:	sub    rsp,0x20
   14003168b:	mov    rbp,rdx
   14003168e:	mov    ecx,0x8
   140031693:	call   0x14002e316
   140031698:	nop
   140031699:	add    rsp,0x20
   14003169d:	pop    rbp
   14003169e:	ret    
   14003169f:	int3   
   1400316a0:	int3   
   1400316a1:	int3   
   1400316a2:	int3   
   1400316a3:	int3   
   1400316a4:	int3   
   1400316a5:	int3   
   1400316a6:	rex push rbp
   1400316a8:	sub    rsp,0x20
   1400316ac:	mov    rbp,rdx
   1400316af:	cmp    DWORD PTR [rbp+0x24],0x0
   1400316b3:	jne    0x1400316cb
   1400316b5:	mov    r9,QWORD PTR [rbp+0x70]
   1400316b9:	mov    r8d,DWORD PTR [rbp+0x20]
   1400316bd:	mov    rdx,QWORD PTR [rbp+0x58]
   1400316c1:	mov    rcx,QWORD PTR [rbp+0x50]
   1400316c5:	call   0x14002dd94
   1400316ca:	nop
   1400316cb:	add    rsp,0x20
   1400316cf:	pop    rbp
   1400316d0:	ret    
   1400316d1:	int3   
   1400316d2:	int3   
   1400316d3:	int3   
   1400316d4:	int3   
   1400316d5:	int3   
   1400316d6:	int3   
   1400316d7:	int3   
   1400316d8:	int3   
   1400316d9:	int3   
   1400316da:	int3   
   1400316db:	int3   
   1400316dc:	int3   
   1400316dd:	int3   
   1400316de:	int3   
   1400316df:	int3   
   1400316e0:	rex push rbp
   1400316e2:	sub    rsp,0x20
   1400316e6:	mov    rbp,rdx
   1400316e9:	mov    rax,QWORD PTR [rcx]
   1400316ec:	xor    ecx,ecx
   1400316ee:	cmp    DWORD PTR [rax],0xc0000005
   1400316f4:	sete   cl
   1400316f7:	mov    eax,ecx
   1400316f9:	add    rsp,0x20
   1400316fd:	pop    rbp
   1400316fe:	ret    
   1400316ff:	int3   
   140031700:	int3   
   140031701:	int3   
   140031702:	int3   
   140031703:	int3   
   140031704:	int3   
   140031705:	int3   
   140031706:	int3   
   140031707:	int3   
   140031708:	int3   
   140031709:	int3   
   14003170a:	int3   
   14003170b:	int3   
   14003170c:	int3   
   14003170d:	int3   
   14003170e:	int3   
   14003170f:	int3   
   140031710:	lea    rax,[rip+0x2b49]        # 0x140034260
   140031717:	mov    QWORD PTR [rip+0x1ceb2],rax        # 0x14004e5d0
   14003171e:	ret    
   14003171f:	int3   
   140031720:	int3   
   140031721:	int3   
   140031722:	int3   
   140031723:	int3   
   140031724:	int3   
   140031725:	int3   
   140031726:	int3   
   140031727:	int3   
   140031728:	int3   
   140031729:	int3   
   14003172a:	int3   
   14003172b:	int3   
   14003172c:	int3   
   14003172d:	int3   
   14003172e:	int3   
   14003172f:	int3   
   140031730:	lea    rax,[rip+0x2b29]        # 0x140034260
   140031737:	mov    QWORD PTR [rip+0x1ce9a],rax        # 0x14004e5d8
   14003173e:	ret    
   14003173f:	int3   
   140031740:	int3   
   140031741:	int3   
   140031742:	int3   
   140031743:	int3   
   140031744:	int3   
   140031745:	int3   
   140031746:	int3   
   140031747:	int3   
   140031748:	int3   
   140031749:	int3   
   14003174a:	int3   
   14003174b:	int3   
   14003174c:	int3   
   14003174d:	int3   
   14003174e:	int3   
   14003174f:	int3   
   140031750:	lea    rax,[rip+0x2b09]        # 0x140034260
   140031757:	mov    QWORD PTR [rip+0x1ce82],rax        # 0x14004e5e0
   14003175e:	ret    
   14003175f:	int3   
   140031760:	int3   
   140031761:	int3   
   140031762:	int3   
   140031763:	int3   
   140031764:	int3   
   140031765:	int3   
   140031766:	int3   
   140031767:	int3   
   140031768:	int3   
   140031769:	int3   
   14003176a:	int3   
   14003176b:	int3   
   14003176c:	int3   
   14003176d:	int3   
   14003176e:	int3   
   14003176f:	int3   
   140031770:	sub    rsp,0x28
   140031774:	mov    rcx,QWORD PTR [rip+0x1e95d]        # 0x1400500d8
   14003177b:	test   rcx,rcx
   14003177e:	je     0x14003178e
   140031780:	call   QWORD PTR [rip+0xafa]        # 0x140032280
   140031786:	and    QWORD PTR [rip+0x1e94a],0x0        # 0x1400500d8
   14003178e:	add    rsp,0x28
   140031792:	ret    
   140031793:	int3   
   140031794:	int3   
   140031795:	int3   
   140031796:	int3   
   140031797:	int3   
   140031798:	int3   
   140031799:	int3   
   14003179a:	int3   
   14003179b:	int3   
   14003179c:	int3   
   14003179d:	int3   
   14003179e:	int3   
   14003179f:	int3   
   1400317a0:	sub    rsp,0x28
   1400317a4:	mov    ecx,0xffff
   1400317a9:	mov    eax,ecx
   1400317ab:	lock cmpxchg DWORD PTR [rip+0x1e83d],ecx        # 0x14004fff0
   1400317b3:	test   eax,eax
   1400317b5:	je     0x1400317e8
   1400317b7:	mov    rcx,QWORD PTR [rip+0x198ba]        # 0x14004b078
   1400317be:	lea    rdx,[rip+0x198b3]        # 0x14004b078
   1400317c5:	cmp    rcx,rdx
   1400317c8:	je     0x1400317e8
   1400317ca:	test   BYTE PTR [rcx+0x1c],0x1
   1400317ce:	je     0x1400317e8
   1400317d0:	mov    rcx,QWORD PTR [rcx+0x10]
   1400317d4:	lea    r8,[rip+0x366d]        # 0x140034e48
   1400317db:	mov    edx,0xb
   1400317e0:	mov    r9d,eax
   1400317e3:	call   0x140001f70
   1400317e8:	add    rsp,0x28
   1400317ec:	ret    
   1400317ed:	int3   
   1400317ee:	int3   
   1400317ef:	int3   
   1400317f0:	int3   
   1400317f1:	int3   
   1400317f2:	int3   
   1400317f3:	int3   
   1400317f4:	int3   
   1400317f5:	int3   
   1400317f6:	int3   
   1400317f7:	int3   
   1400317f8:	int3   
   1400317f9:	int3   
   1400317fa:	int3   
   1400317fb:	int3   
   1400317fc:	int3   
   1400317fd:	int3   
   1400317fe:	int3   
   1400317ff:	int3   
   140031800:	mov    QWORD PTR [rsp+0x8],rbx
   140031805:	push   rdi
   140031806:	sub    rsp,0x20
   14003180a:	mov    rdi,QWORD PTR [rip+0x1ce27]        # 0x14004e638
   140031811:	test   rdi,rdi
   140031814:	je     0x14003182b
   140031816:	mov    rax,QWORD PTR [rdi]
   140031819:	mov    rbx,QWORD PTR [rax+0x8]
   14003181d:	mov    rcx,rbx
   140031820:	call   QWORD PTR [rip+0xe82]        # 0x1400326a8
   140031826:	mov    rcx,rdi
   140031829:	call   rbx
   14003182b:	mov    rbx,QWORD PTR [rsp+0x30]
   140031830:	lea    rax,[rip+0x2df1]        # 0x140034628
   140031837:	mov    QWORD PTR [rip+0x1cdb2],rax        # 0x14004e5f0
   14003183e:	add    rsp,0x20
   140031842:	pop    rdi
   140031843:	ret    
   140031844:	int3   
   140031845:	int3   
   140031846:	int3   
   140031847:	int3   
   140031848:	int3   
   140031849:	int3   
   14003184a:	int3   
   14003184b:	int3   
   14003184c:	int3   
   14003184d:	int3   
   14003184e:	int3   
   14003184f:	int3   
   140031850:	lea    rax,[rip+0x2d41]        # 0x140034598
   140031857:	lea    rcx,[rip+0x1e882]        # 0x1400500e0
   14003185e:	mov    QWORD PTR [rip+0x1e87b],rax        # 0x1400500e0
   140031865:	jmp    0x1400047e8
   14003186a:	int3   
   14003186b:	int3   
   14003186c:	int3   
   14003186d:	int3   
   14003186e:	int3   
   14003186f:	int3   
   140031870:	mov    QWORD PTR [rsp+0x8],rbx
   140031875:	push   rdi
   140031876:	sub    rsp,0x20
   14003187a:	cmp    DWORD PTR [rip+0x1ea10],0xf12192e        # 0x140050294
   140031884:	je     0x140031893
   140031886:	lea    rcx,[rip+0x1e9fb]        # 0x140050288
   14003188d:	call   QWORD PTR [rip+0x9e5]        # 0x140032278
   140031893:	mov    rax,QWORD PTR [rip+0x1e9de]        # 0x140050278
   14003189a:	mov    rbx,QWORD PTR [rax+0x8]
   14003189e:	mov    rdi,rbx
   1400318a1:	cmp    BYTE PTR [rbx+0x19],0x0
   1400318a5:	jne    0x1400318d3
   1400318a7:	mov    rdx,QWORD PTR [rdi+0x10]
   1400318ab:	lea    rcx,[rip+0x1e9c6]        # 0x140050278
   1400318b2:	call   0x140023e2c
   1400318b7:	mov    rdi,QWORD PTR [rdi]
   1400318ba:	mov    rcx,rbx
   1400318bd:	call   QWORD PTR [rip+0xd05]        # 0x1400325c8
   1400318c3:	cmp    BYTE PTR [rdi+0x19],0x0
   1400318c7:	mov    rbx,rdi
   1400318ca:	je     0x1400318a7
   1400318cc:	mov    rax,QWORD PTR [rip+0x1e9a5]        # 0x140050278
   1400318d3:	mov    QWORD PTR [rax+0x8],rax
   1400318d7:	mov    rax,QWORD PTR [rip+0x1e99a]        # 0x140050278
   1400318de:	mov    QWORD PTR [rax],rax
   1400318e1:	mov    rax,QWORD PTR [rip+0x1e990]        # 0x140050278
   1400318e8:	mov    QWORD PTR [rax+0x10],rax
   1400318ec:	and    QWORD PTR [rip+0x1e98c],0x0        # 0x140050280
   1400318f4:	mov    rcx,QWORD PTR [rip+0x1e97d]        # 0x140050278
   1400318fb:	mov    rbx,QWORD PTR [rsp+0x30]
   140031900:	add    rsp,0x20
   140031904:	pop    rdi
   140031905:	rex.W jmp QWORD PTR [rip+0xcbc]        # 0x1400325c8
   14003190c:	int3   
   14003190d:	int3   
   14003190e:	int3   
   14003190f:	int3   
   140031910:	int3   
   140031911:	int3   
   140031912:	int3   
   140031913:	int3   
   140031914:	int3   
   140031915:	int3   
   140031916:	int3   
   140031917:	int3   
   140031918:	int3   
   140031919:	int3   
   14003191a:	int3   
   14003191b:	int3   
   14003191c:	int3   
   14003191d:	int3   
   14003191e:	int3   
   14003191f:	int3   
   140031920:	sub    rsp,0x28
   140031924:	lea    rcx,[rip+0x1e82d]        # 0x140050158
   14003192b:	call   QWORD PTR [rip+0x947]        # 0x140032278
   140031931:	mov    rcx,QWORD PTR [rip+0x1e848]        # 0x140050180
   140031938:	test   rcx,rcx
   14003193b:	je     0x14003194b
   14003193d:	call   QWORD PTR [rip+0xc85]        # 0x1400325c8
   140031943:	and    QWORD PTR [rip+0x1e835],0x0        # 0x140050180
   14003194b:	and    DWORD PTR [rip+0x1e836],0x0        # 0x140050188
   140031952:	and    DWORD PTR [rip+0x1e833],0x0        # 0x14005018c
   140031959:	add    rsp,0x28
   14003195d:	ret    
   14003195e:	int3   
   14003195f:	int3   
   140031960:	int3   
   140031961:	int3   
   140031962:	int3   
   140031963:	int3   
   140031964:	int3   
   140031965:	int3   
   140031966:	int3   
   140031967:	int3   
   140031968:	int3   
   140031969:	int3   
   14003196a:	int3   
   14003196b:	int3   
   14003196c:	int3   
   14003196d:	int3   
   14003196e:	int3   
   14003196f:	int3   
   140031970:	mov    QWORD PTR [rsp+0x8],rbx
   140031975:	mov    QWORD PTR [rsp+0x10],rsi
   14003197a:	push   rdi
   14003197b:	sub    rsp,0x20
   14003197f:	cmp    DWORD PTR [rip+0x1e80a],0x48        # 0x140050190
   140031986:	mov    rsi,QWORD PTR [rip+0x1e7ab]        # 0x140050138
   14003198d:	jne    0x140031a0e
   14003198f:	mov    eax,DWORD PTR [rip+0x1e83b]        # 0x1400501d0
   140031995:	xor    ebx,ebx
   140031997:	test   eax,eax
   140031999:	jle    0x1400319d2
   14003199b:	xor    edi,edi
   14003199d:	test   rdi,rdi
   1400319a0:	js     0x140031a46
   1400319a6:	cmp    ebx,eax
   1400319a8:	jge    0x140031a46
   1400319ae:	mov    rax,QWORD PTR [rip+0x1e813]        # 0x1400501c8
   1400319b5:	mov    rdx,rsi
   1400319b8:	movzx  ecx,WORD PTR [rdi+rax*1]
   1400319bc:	call   QWORD PTR [rip+0x9de]        # 0x1400323a0
   1400319c2:	mov    eax,DWORD PTR [rip+0x1e808]        # 0x1400501d0
   1400319c8:	inc    ebx
   1400319ca:	add    rdi,0x2
   1400319ce:	cmp    ebx,eax
   1400319d0:	jl     0x14003199d
   1400319d2:	mov    rcx,QWORD PTR [rip+0x1e7ef]        # 0x1400501c8
   1400319d9:	test   rcx,rcx
   1400319dc:	je     0x1400319ec
   1400319de:	call   QWORD PTR [rip+0xbe4]        # 0x1400325c8
   1400319e4:	and    QWORD PTR [rip+0x1e7dc],0x0        # 0x1400501c8
   1400319ec:	and    DWORD PTR [rip+0x1e7dd],0x0        # 0x1400501d0
   1400319f3:	lea    rcx,[rip+0x1e79e]        # 0x140050198
   1400319fa:	and    DWORD PTR [rip+0x1e7d3],0x0        # 0x1400501d4
   140031a01:	call   QWORD PTR [rip+0x871]        # 0x140032278
   140031a07:	and    DWORD PTR [rip+0x1e782],0x0        # 0x140050190
   140031a0e:	mov    rcx,QWORD PTR [rip+0x1e7b3]        # 0x1400501c8
   140031a15:	test   rcx,rcx
   140031a18:	je     0x140031a28
   140031a1a:	call   QWORD PTR [rip+0xba8]        # 0x1400325c8
   140031a20:	and    QWORD PTR [rip+0x1e7a0],0x0        # 0x1400501c8
   140031a28:	and    DWORD PTR [rip+0x1e7a1],0x0        # 0x1400501d0
   140031a2f:	and    DWORD PTR [rip+0x1e79e],0x0        # 0x1400501d4
   140031a36:	mov    rbx,QWORD PTR [rsp+0x30]
   140031a3b:	mov    rsi,QWORD PTR [rsp+0x38]
   140031a40:	add    rsp,0x20
   140031a44:	pop    rdi
   140031a45:	ret    
   140031a46:	mov    ecx,0xc000008c
   140031a4b:	call   0x1400052f4
   140031a50:	int3   
   140031a51:	int3   
   140031a52:	int3   
   140031a53:	int3   
   140031a54:	int3   
   140031a55:	int3   
   140031a56:	int3   
   140031a57:	int3   
   140031a58:	int3   
   140031a59:	int3   
   140031a5a:	int3   
   140031a5b:	int3   
   140031a5c:	int3   
   140031a5d:	int3   
   140031a5e:	int3   
   140031a5f:	int3   
   140031a60:	ret    0x0
   140031a63:	int3   
   140031a64:	int3   
   140031a65:	int3   
   140031a66:	int3   
   140031a67:	int3   
   140031a68:	int3   
   140031a69:	int3   
   140031a6a:	int3   
   140031a6b:	int3   
   140031a6c:	int3   
   140031a6d:	int3   
   140031a6e:	int3   
   140031a6f:	int3   
   140031a70:	ret    0x0
   140031a73:	int3   
   140031a74:	int3   
   140031a75:	int3   
   140031a76:	int3   
   140031a77:	int3   
   140031a78:	int3   
   140031a79:	int3   
   140031a7a:	int3   
   140031a7b:	int3   
   140031a7c:	int3   
   140031a7d:	int3   
   140031a7e:	int3   
   140031a7f:	int3   
   140031a80:	lea    rcx,[rip+0x1de99]        # 0x14004f920
   140031a87:	jmp    0x14002d8e8

Disassembly of section .rdata:

0000000140032000 <.rdata>:
   140032000:	push   rax
   140032001:	pushf  
   140032002:	add    al,0x0
   140032004:	add    BYTE PTR [rax],al
   140032006:	add    BYTE PTR [rax],al
   140032008:	pushfw 
   14003200a:	add    al,0x0
   14003200c:	add    BYTE PTR [rax],al
   14003200e:	add    BYTE PTR [rax],al
   140032010:	jle    0x140031fae
   140032012:	add    al,0x0
   140032014:	add    BYTE PTR [rax],al
   140032016:	add    BYTE PTR [rax],al
   140032018:	xchg   esp,eax
   140032019:	pushf  
   14003201a:	add    al,0x0
   14003201c:	add    BYTE PTR [rax],al
   14003201e:	add    BYTE PTR [rax],al
   140032020:	stos   BYTE PTR es:[rdi],al
   140032021:	pushf  
   140032022:	add    al,0x0
   140032024:	add    BYTE PTR [rax],al
   140032026:	add    BYTE PTR [rax],al
   140032028:	mov    edx,0x49c
   14003202d:	add    BYTE PTR [rax],al
   14003202f:	add    al,cl
   140032031:	pushf  
   140032032:	add    al,0x0
   140032034:	add    BYTE PTR [rax],al
   140032036:	add    BYTE PTR [rax],al
   140032038:	loopne 0x140031fd6
   14003203a:	add    al,0x0
   14003203c:	add    BYTE PTR [rax],al
   14003203e:	add    BYTE PTR [rax],al
   140032040:	out    dx,al
   140032041:	pushf  
   140032042:	add    al,0x0
   140032044:	add    BYTE PTR [rax],al
   140032046:	add    BYTE PTR [rax],al
   140032048:	add    bl,BYTE PTR [rbp+0x4]
   14003204e:	add    BYTE PTR [rax],al
   140032050:	adc    bl,BYTE PTR [rbp+0x4]
   140032056:	add    BYTE PTR [rax],al
   140032058:	and    bl,BYTE PTR [rbp+0x4]
   14003205e:	add    BYTE PTR [rax],al
   140032060:	xor    al,0x9d
   140032062:	add    al,0x0
   140032064:	add    BYTE PTR [rax],al
   140032066:	add    BYTE PTR [rax],al
   140032068:	rex.RX popf 
   14003206a:	add    al,0x0
   14003206c:	add    BYTE PTR [rax],al
   14003206e:	add    BYTE PTR [rax],al
   140032070:	pop    rax
   140032071:	popf   
   140032072:	add    al,0x0
   140032074:	add    BYTE PTR [rax],al
   140032076:	add    BYTE PTR [rax],al
   140032078:	jbe    0x140032017
   14003207a:	add    al,0x0
   14003207c:	add    BYTE PTR [rax],al
   14003207e:	add    BYTE PTR [rax],al
   140032080:	test   BYTE PTR [rbp+0x4],bl
   140032086:	add    BYTE PTR [rax],al
   140032088:	xchg   esp,eax
   140032089:	popf   
   14003208a:	add    al,0x0
   14003208c:	add    BYTE PTR [rax],al
   14003208e:	add    BYTE PTR [rax],al
   140032090:	sahf   
   140032091:	popf   
   140032092:	add    al,0x0
   140032094:	add    BYTE PTR [rax],al
   140032096:	add    BYTE PTR [rax],al
   140032098:	mov    eax,0x49d
   14003209d:	add    BYTE PTR [rax],al
   14003209f:	add    BYTE PTR [rax+0x4a7],bl
   1400320a5:	add    BYTE PTR [rax],al
   1400320a7:	add    BYTE PTR [rdx+0x4a7],dh
   1400320ad:	add    BYTE PTR [rax],al
   1400320af:	add    dh,al
   1400320b1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400320b2:	add    al,0x0
   1400320b4:	add    BYTE PTR [rax],al
   1400320b6:	add    BYTE PTR [rax],al
   1400320b8:	out    0xa7,al
   1400320ba:	add    al,0x0
   1400320bc:	add    BYTE PTR [rax],al
   1400320be:	add    BYTE PTR [rax],al
   1400320c0:	cli    
   1400320c1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400320c2:	add    al,0x0
   1400320c4:	add    BYTE PTR [rax],al
   1400320c6:	add    BYTE PTR [rax],al
   1400320c8:	mov    BYTE PTR [rdi+0x4],ah
	...
   1400320d6:	add    BYTE PTR [rax],al
   1400320d8:	movabs ds:0xb60000000000049e,al
   1400320e1:	sahf   
   1400320e2:	add    al,0x0
   1400320e4:	add    BYTE PTR [rax],al
   1400320e6:	add    BYTE PTR [rax],al
   1400320e8:	(bad)  
   1400320e9:	sahf   
   1400320ea:	add    al,0x0
   1400320ec:	add    BYTE PTR [rax],al
   1400320ee:	add    BYTE PTR [rax],al
   1400320f0:	(bad)  
   1400320f1:	sahf   
   1400320f2:	add    al,0x0
   1400320f4:	add    BYTE PTR [rax],al
   1400320f6:	add    BYTE PTR [rax],al
   1400320f8:	loop   0x140032098
   1400320fa:	add    al,0x0
   1400320fc:	add    BYTE PTR [rax],al
   1400320fe:	add    BYTE PTR [rax],al
   140032100:	cli    
   140032101:	sahf   
   140032102:	add    al,0x0
   140032104:	add    BYTE PTR [rax],al
   140032106:	add    BYTE PTR [rax],al
   140032108:	or     al,0x9f
   14003210a:	add    al,0x0
   14003210c:	add    BYTE PTR [rax],al
   14003210e:	add    BYTE PTR [rax],al
   140032110:	and    al,0x9f
   140032112:	add    al,0x0
   140032114:	add    BYTE PTR [rax],al
   140032116:	add    BYTE PTR [rax],al
   140032118:	cmp    bl,BYTE PTR [rdi+0x4]
   14003211e:	add    BYTE PTR [rax],al
   140032120:	rex.WR lahf 
   140032122:	add    al,0x0
   140032124:	add    BYTE PTR [rax],al
   140032126:	add    BYTE PTR [rax],al
   140032128:	pop    rsp
   140032129:	lahf   
   14003212a:	add    al,0x0
   14003212c:	add    BYTE PTR [rax],al
   14003212e:	add    BYTE PTR [rax],al
   140032130:	outs   dx,BYTE PTR ds:[rsi]
   140032131:	lahf   
   140032132:	add    al,0x0
   140032134:	add    BYTE PTR [rax],al
   140032136:	add    BYTE PTR [rax],al
   140032138:	test   BYTE PTR [rdi+0x4],bl
   14003213e:	add    BYTE PTR [rax],al
   140032140:	movabs al,ds:0xb80000000000049f
   140032149:	lahf   
   14003214a:	add    al,0x0
   14003214c:	add    BYTE PTR [rax],al
   14003214e:	add    BYTE PTR [rax],al
   140032150:	rcr    BYTE PTR [rdi+0x4],1
   140032156:	add    BYTE PTR [rax],al
   140032158:	in     al,dx
   140032159:	lahf   
   14003215a:	add    al,0x0
   14003215c:	add    BYTE PTR [rax],al
   14003215e:	add    BYTE PTR [rax],al
   140032160:	cli    
   140032161:	lahf   
   140032162:	add    al,0x0
   140032164:	add    BYTE PTR [rax],al
   140032166:	add    BYTE PTR [rax],al
   140032168:	add    ah,BYTE PTR [rax+0x4]
   14003216e:	add    BYTE PTR [rax],al
   140032170:	sbb    al,0xa0
   140032172:	add    al,0x0
   140032174:	add    BYTE PTR [rax],al
   140032176:	add    BYTE PTR [rax],al
   140032178:	movabs al,cs:0xa042000000000004
   140032182:	add    al,0x0
   140032184:	add    BYTE PTR [rax],al
   140032186:	add    BYTE PTR [rax],al
   140032188:	pop    rax
   140032189:	movabs al,ds:0xa06c000000000004
   140032192:	add    al,0x0
   140032194:	add    BYTE PTR [rax],al
   140032196:	add    BYTE PTR [rax],al
   140032198:	js     0x14003213a
   14003219a:	add    al,0x0
   14003219c:	add    BYTE PTR [rax],al
   14003219e:	add    BYTE PTR [rax],al
   1400321a0:	mov    BYTE PTR [rax+0x4],ah
   1400321a6:	add    BYTE PTR [rax],al
   1400321a8:	xchg   esi,eax
   1400321a9:	movabs al,ds:0xa0b2000000000004
   1400321b2:	add    al,0x0
   1400321b4:	add    BYTE PTR [rax],al
   1400321b6:	add    BYTE PTR [rax],al
   1400321b8:	mov    esi,0x4a0
   1400321bd:	add    BYTE PTR [rax],al
   1400321bf:	add    al,dl
   1400321c1:	movabs al,ds:0xa8c0000000000004
   1400321ca:	add    al,0x0
   1400321cc:	add    BYTE PTR [rax],al
   1400321ce:	add    BYTE PTR [rax],al
   1400321d0:	stos   BYTE PTR es:[rdi],al
   1400321d1:	test   al,0x4
   1400321d3:	add    BYTE PTR [rax],al
   1400321d5:	add    BYTE PTR [rax],al
   1400321d7:	add    BYTE PTR [rax+rbp*4+0x4],dl
   1400321de:	add    BYTE PTR [rax],al
   1400321e0:	jp     0x14003218a
   1400321e2:	add    al,0x0
   1400321e4:	add    BYTE PTR [rax],al
   1400321e6:	add    BYTE PTR [rax],al
   1400321e8:	data16 test al,0x4
   1400321eb:	add    BYTE PTR [rax],al
   1400321ed:	add    BYTE PTR [rax],al
   1400321ef:	add    BYTE PTR [rdx+0x49e],dl
   1400321f5:	add    BYTE PTR [rax],al
   1400321f7:	add    BYTE PTR [rdx+rbp*4+0x4],cl
   1400321fb:	add    BYTE PTR [rax],al
   1400321fd:	add    BYTE PTR [rax],al
   1400321ff:	add    BYTE PTR [rax-0x56],al
   140032202:	add    al,0x0
   140032204:	add    BYTE PTR [rax],al
   140032206:	add    BYTE PTR [rax],al
   140032208:	sub    ch,BYTE PTR [rdx+0x4]
   14003220e:	add    BYTE PTR [rax],al
   140032210:	adc    al,0xaa
   140032212:	add    al,0x0
   140032214:	add    BYTE PTR [rax],al
   140032216:	add    BYTE PTR [rax],al
   140032218:	(bad)  
   140032219:	test   eax,0x4
   14003221e:	add    BYTE PTR [rax],al
   140032220:	in     al,dx
   140032221:	test   eax,0x4
   140032226:	add    BYTE PTR [rax],al
   140032228:	(bad)  
   140032229:	test   eax,0x4
   14003222e:	add    BYTE PTR [rax],al
   140032230:	(bad)  
   140032231:	test   eax,0x4
   140032236:	add    BYTE PTR [rax],al
   140032238:	rex.W test al,0x4
   14003223b:	add    BYTE PTR [rax],al
   14003223d:	add    BYTE PTR [rax],al
   14003223f:	add    BYTE PTR [rax+rbp*4],ch
   140032242:	add    al,0x0
   140032244:	add    BYTE PTR [rax],al
   140032246:	add    BYTE PTR [rax],al
   140032248:	(bad)  
   140032249:	test   al,0x4
   14003224b:	add    BYTE PTR [rax],al
   14003224d:	add    BYTE PTR [rax],al
   14003224f:	add    BYTE PTR [rsi+0x4a9],ch
   140032255:	add    BYTE PTR [rax],al
   140032257:	add    BYTE PTR [rax+0x4a9],ah
   14003225d:	add    BYTE PTR [rax],al
   14003225f:	add    BYTE PTR [rax+0x4a9],dl
   140032265:	add    BYTE PTR [rax],al
   140032267:	add    BYTE PTR [rdx-0x57],bh
   14003226a:	add    al,0x0
   14003226c:	add    BYTE PTR [rax],al
   14003226e:	add    BYTE PTR [rax],al
   140032270:	push   0xffffffffffffff9e
   140032272:	add    al,0x0
   140032274:	add    BYTE PTR [rax],al
   140032276:	add    BYTE PTR [rax],al
   140032278:	push   rdx
   140032279:	sahf   
   14003227a:	add    al,0x0
   14003227c:	add    BYTE PTR [rax],al
   14003227e:	add    BYTE PTR [rax],al
   140032280:	rex.R sahf 
   140032282:	add    al,0x0
   140032284:	add    BYTE PTR [rax],al
   140032286:	add    BYTE PTR [rax],al
   140032288:	xor    al,0x9e
   14003228a:	add    al,0x0
   14003228c:	add    BYTE PTR [rax],al
   14003228e:	add    BYTE PTR [rax],al
   140032290:	(bad)  
   140032291:	sahf   
   140032292:	add    al,0x0
   140032294:	add    BYTE PTR [rax],al
   140032296:	add    BYTE PTR [rax],al
   140032298:	adc    BYTE PTR [rsi+0x4],bl
   14003229e:	add    BYTE PTR [rax],al
   1400322a0:	(bad)  
   1400322a1:	popf   
   1400322a2:	add    al,0x0
   1400322a4:	add    BYTE PTR [rax],al
   1400322a6:	add    BYTE PTR [rax],al
   1400322a8:	out    dx,al
   1400322a9:	popf   
   1400322aa:	add    al,0x0
   1400322ac:	add    BYTE PTR [rax],al
   1400322ae:	add    BYTE PTR [rax],al
   1400322b0:	ficomp DWORD PTR [rbp+0x4]
   1400322b6:	add    BYTE PTR [rax],al
   1400322b8:	(bad)  
   1400322b9:	test   eax,0x4
   1400322be:	add    BYTE PTR [rax],al
   1400322c0:	push   rdx
   1400322c1:	test   eax,0x4
   1400322c6:	add    BYTE PTR [rax],al
   1400322c8:	rex test eax,0x4
   1400322ce:	add    BYTE PTR [rax],al
   1400322d0:	xor    BYTE PTR [rcx+0x4],ch
   1400322d6:	add    BYTE PTR [rax],al
   1400322d8:	(bad)  
   1400322d9:	test   eax,0x4
   1400322de:	add    BYTE PTR [rax],al
   1400322e0:	(bad)  
   1400322e1:	test   eax,0x4
   1400322e6:	add    BYTE PTR [rax],al
   1400322e8:	clc    
   1400322e9:	test   al,0x4
   1400322eb:	add    BYTE PTR [rax],al
   1400322ed:	add    BYTE PTR [rax],al
   1400322ef:	add    dh,ah
   1400322f1:	test   al,0x4
   1400322f3:	add    BYTE PTR [rax],al
   1400322f5:	add    BYTE PTR [rax],al
   1400322f7:	add    al,dl
   1400322f9:	test   al,0x4
	...
   140032307:	add    al,dh
   140032309:	movabs ds:0xa3d6000000000004,eax
   140032312:	add    al,0x0
   140032314:	add    BYTE PTR [rax],al
   140032316:	add    BYTE PTR [rax],al
   140032318:	shl    BYTE PTR [rbx+0x4],0x0
   14003231f:	add    BYTE PTR [rbx+riz*4+0x4],ah
   140032323:	add    BYTE PTR [rax],al
   140032325:	add    BYTE PTR [rax],al
   140032327:	add    BYTE PTR [rax-0x5d],bh
   14003232a:	add    al,0x0
   14003232c:	add    BYTE PTR [rax],al
   14003232e:	add    BYTE PTR [rax],al
   140032330:	nop
   140032331:	movabs ds:0xa3a2000000000004,eax
   14003233a:	add    al,0x0
   14003233c:	add    BYTE PTR [rax],al
   14003233e:	add    BYTE PTR [rax],al
   140032340:	mov    al,0xa3
   140032342:	add    al,0x0
	...
   140032350:	(bad)  
   140032351:	add    BYTE PTR [rax],al
   140032353:	add    BYTE PTR [rax],al
   140032355:	add    BYTE PTR [rax],al
   140032357:	adc    BYTE PTR [rip+0x1],0x0        # 0x14003235f
   14003235e:	add    BYTE PTR [rax+0x2],al
   140032364:	add    BYTE PTR [rax],al
   140032366:	add    BYTE PTR [rax+0x96],al
   14003236c:	add    BYTE PTR [rax],al
   14003236e:	add    BYTE PTR [rax+0x7],al
   140032374:	add    BYTE PTR [rax],al
   140032376:	add    BYTE PTR [rax+0x4],al
   14003237c:	add    BYTE PTR [rax],al
   14003237e:	add    BYTE PTR [rax+0x139],al
   140032384:	add    BYTE PTR [rax],al
   140032386:	add    BYTE PTR [rax+0x95],al
   14003238c:	add    BYTE PTR [rax],al
   14003238e:	add    BYTE PTR [rax+0x0],al
   140032394:	add    BYTE PTR [rax],al
   140032396:	add    BYTE PTR [rax],al
   140032398:	(bad)  
   140032399:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003239a:	add    al,0x0
   14003239c:	add    BYTE PTR [rax],al
   14003239e:	add    BYTE PTR [rax],al
   1400323a0:	outs   dx,BYTE PTR ds:[rsi]
   1400323a1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400323a2:	add    al,0x0
	...
   1400323b0:	loop   0x14003235c
   1400323b2:	add    al,0x0
	...
   1400323c0:	cli    
   1400323c1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400323c2:	add    al,0x0
   1400323c4:	add    BYTE PTR [rax],al
   1400323c6:	add    BYTE PTR [rax],al
   1400323c8:	loopne 0x140032370
   1400323ca:	add    al,0x0
   1400323cc:	add    BYTE PTR [rax],al
   1400323ce:	add    BYTE PTR [rax],al
   1400323d0:	shl    BYTE PTR [rsi+0x4],1
   1400323d6:	add    BYTE PTR [rax],al
   1400323d8:	mov    al,0xa6
   1400323da:	add    al,0x0
   1400323dc:	add    BYTE PTR [rax],al
   1400323de:	add    BYTE PTR [rax],al
   1400323e0:	xchg   esp,eax
   1400323e1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400323e2:	add    al,0x0
   1400323e4:	add    BYTE PTR [rax],al
   1400323e6:	add    BYTE PTR [rax],al
   1400323e8:	jl     0x140032390
   1400323ea:	add    al,0x0
   1400323ec:	add    BYTE PTR [rax],al
   1400323ee:	add    BYTE PTR [rax],al
   1400323f0:	ins    BYTE PTR es:[rdi],dx
   1400323f1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400323f2:	add    al,0x0
   1400323f4:	add    BYTE PTR [rax],al
   1400323f6:	add    BYTE PTR [rax],al
   1400323f8:	push   rsp
   1400323f9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400323fa:	add    al,0x0
   1400323fc:	add    BYTE PTR [rax],al
   1400323fe:	add    BYTE PTR [rax],al
   140032400:	(bad)  
   140032401:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140032402:	add    al,0x0
   140032404:	add    BYTE PTR [rax],al
   140032406:	add    BYTE PTR [rax],al
   140032408:	outs   dx,BYTE PTR ds:[rsi]
   140032409:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003240a:	add    al,0x0
   14003240c:	add    BYTE PTR [rax],al
   14003240e:	add    BYTE PTR [rax],al
   140032410:	push   rax
   140032411:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140032412:	add    al,0x0
   140032414:	add    BYTE PTR [rax],al
   140032416:	add    BYTE PTR [rax],al
   140032418:	cmp    al,0xa6
   14003241a:	add    al,0x0
   14003241c:	add    BYTE PTR [rax],al
   14003241e:	add    BYTE PTR [rax],al
   140032420:	and    al,0xa6
   140032422:	add    al,0x0
   140032424:	add    BYTE PTR [rax],al
   140032426:	add    BYTE PTR [rax],al
   140032428:	adc    BYTE PTR [rsi+0x4],ah
   14003242e:	add    BYTE PTR [rax],al
   140032430:	add    BYTE PTR [rsi+0x4],ah
   140032436:	add    BYTE PTR [rax],al
   140032438:	(bad)  
   140032439:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003243a:	add    al,0x0
   14003243c:	add    BYTE PTR [rax],al
   14003243e:	add    BYTE PTR [rax],al
   140032440:	shl    BYTE PTR [rbp+0x4],cl
   140032446:	add    BYTE PTR [rax],al
   140032448:	ret    0x4a5
   14003244b:	add    BYTE PTR [rax],al
   14003244d:	add    BYTE PTR [rax],al
   14003244f:	add    BYTE PTR [rbp+riz*4+0x4],ah
   140032456:	add    BYTE PTR [rax],al
   140032458:	mov    WORD PTR [rbp+0x4],fs
   14003245e:	add    BYTE PTR [rax],al
   140032460:	jb     0x140032407
   140032462:	add    al,0x0
   140032464:	add    BYTE PTR [rax],al
   140032466:	add    BYTE PTR [rax],al
   140032468:	push   rsi
   140032469:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003246a:	add    al,0x0
   14003246c:	add    BYTE PTR [rax],al
   14003246e:	add    BYTE PTR [rax],al
   140032470:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140032472:	add    al,0x0
   140032474:	add    BYTE PTR [rax],al
   140032476:	add    BYTE PTR [rax],al
   140032478:	cmps   DWORD PTR cs:[rsi],DWORD PTR es:[rdi]
   14003247a:	add    al,0x0
   14003247c:	add    BYTE PTR [rax],al
   14003247e:	add    BYTE PTR [rax],al
   140032480:	sub    BYTE PTR [rbp+0x4],ah
	...
   14003248e:	add    BYTE PTR [rax],al
   140032490:	adc    ch,BYTE PTR [rbx+0x4]
   140032496:	add    BYTE PTR [rax],al
   140032498:	add    BYTE PTR [rbx+0x4],ch
   14003249e:	add    BYTE PTR [rax],al
   1400324a0:	out    dx,al
   1400324a1:	movabs al,ds:0xa0f8000000000004
   1400324aa:	add    al,0x0
   1400324ac:	add    BYTE PTR [rax],al
   1400324ae:	add    BYTE PTR [rax],al
   1400324b0:	add    al,0xa1
   1400324b2:	add    al,0x0
   1400324b4:	add    BYTE PTR [rax],al
   1400324b6:	add    BYTE PTR [rax],al
   1400324b8:	and    ah,BYTE PTR [rcx+0x4]
   1400324be:	add    BYTE PTR [rax],al
   1400324c0:	cmp    ah,BYTE PTR [rcx+0x4]
   1400324c6:	add    BYTE PTR [rax],al
   1400324c8:	pop    rdx
   1400324c9:	movabs eax,ds:0xaac6000000000004
   1400324d2:	add    al,0x0
   1400324d4:	add    BYTE PTR [rax],al
   1400324d6:	add    BYTE PTR [rax],al
   1400324d8:	pop    rdx
   1400324d9:	movabs ds:0xa350000000000004,eax
   1400324e2:	add    al,0x0
   1400324e4:	add    BYTE PTR [rax],al
   1400324e6:	add    BYTE PTR [rax],al
   1400324e8:	cmp    BYTE PTR [rbx+0x4],ah
   1400324ee:	add    BYTE PTR [rax],al
   1400324f0:	movabs cs:0xa320000000000004,eax
   1400324fa:	add    al,0x0
   1400324fc:	add    BYTE PTR [rax],al
   1400324fe:	add    BYTE PTR [rax],al
   140032500:	or     al,0xa3
   140032502:	add    al,0x0
   140032504:	add    BYTE PTR [rax],al
   140032506:	add    BYTE PTR [rax],al
   140032508:	hlt    
   140032509:	movabs ds:0xa2ea000000000004,al
   140032512:	add    al,0x0
   140032514:	add    BYTE PTR [rax],al
   140032516:	add    BYTE PTR [rax],al
   140032518:	shl    BYTE PTR [rdx+0x4],cl
   14003251e:	add    BYTE PTR [rax],al
   140032520:	(bad)  
   140032521:	movabs ds:0xa2b2000000000004,al
   14003252a:	add    al,0x0
   14003252c:	add    BYTE PTR [rax],al
   14003252e:	add    BYTE PTR [rax],al
   140032530:	test   al,0xa2
   140032532:	add    al,0x0
   140032534:	add    BYTE PTR [rax],al
   140032536:	add    BYTE PTR [rax],al
   140032538:	movabs al,ds:0x98000000000004a2
   140032541:	movabs ds:0xa286000000000004,al
   14003254a:	add    al,0x0
   14003254c:	add    BYTE PTR [rax],al
   14003254e:	add    BYTE PTR [rax],al
   140032550:	je     0x1400324f4
   140032552:	add    al,0x0
   140032554:	add    BYTE PTR [rax],al
   140032556:	add    BYTE PTR [rax],al
   140032558:	data16 movabs ds:0xa258000000000004,al
   140032562:	add    al,0x0
   140032564:	add    BYTE PTR [rax],al
   140032566:	add    BYTE PTR [rax],al
   140032568:	rex.WRX movabs ds:0xa246000000000004,al
   140032572:	add    al,0x0
   140032574:	add    BYTE PTR [rax],al
   140032576:	add    BYTE PTR [rax],al
   140032578:	movabs es:0xa21c000000000004,al
   140032582:	add    al,0x0
   140032584:	add    BYTE PTR [rax],al
   140032586:	add    BYTE PTR [rax],al
   140032588:	(bad)  
   140032589:	movabs ds:0xa1f0000000000004,al
   140032592:	add    al,0x0
   140032594:	add    BYTE PTR [rax],al
   140032596:	add    BYTE PTR [rax],al
   140032598:	sbb    al,0xab
   14003259a:	add    al,0x0
   14003259c:	add    BYTE PTR [rax],al
   14003259e:	add    BYTE PTR [rax],al
   1400325a0:	out    0xa1,al
   1400325a2:	add    al,0x0
   1400325a4:	add    BYTE PTR [rax],al
   1400325a6:	add    BYTE PTR [rax],al
   1400325a8:	fisub  DWORD PTR [rcx+0x4]
   1400325ae:	add    BYTE PTR [rax],al
   1400325b0:	shl    BYTE PTR [rcx+0x4],1
   1400325b6:	add    BYTE PTR [rax],al
   1400325b8:	enter  0x4a1,0x0
   1400325bc:	add    BYTE PTR [rax],al
   1400325be:	add    BYTE PTR [rax],al
   1400325c0:	mov    esp,0x4a1
   1400325c5:	add    BYTE PTR [rax],al
   1400325c7:	add    BYTE PTR [rcx+riz*4+0x4],dh
   1400325ce:	add    BYTE PTR [rax],al
   1400325d0:	stos   BYTE PTR es:[rdi],al
   1400325d1:	movabs eax,ds:0xa19e000000000004
   1400325da:	add    al,0x0
   1400325dc:	add    BYTE PTR [rax],al
   1400325de:	add    BYTE PTR [rax],al
   1400325e0:	nop
   1400325e1:	movabs eax,ds:0xa178000000000004
   1400325ea:	add    al,0x0
   1400325ec:	add    BYTE PTR [rax],al
   1400325ee:	add    BYTE PTR [rax],al
   1400325f0:	pop    rsp
   1400325f1:	stos   BYTE PTR es:[rdi],al
   1400325f2:	add    al,0x0
   1400325f4:	add    BYTE PTR [rax],al
   1400325f6:	add    BYTE PTR [rax],al
   1400325f8:	push   0xffffffffffffffaa
   1400325fa:	add    al,0x0
   1400325fc:	add    BYTE PTR [rax],al
   1400325fe:	add    BYTE PTR [rax],al
   140032600:	jbe    0x1400325ac
   140032602:	add    al,0x0
   140032604:	add    BYTE PTR [rax],al
   140032606:	add    BYTE PTR [rax],al
   140032608:	sub    BYTE PTR [rdx+0x4],0x0
   14003260f:	add    BYTE PTR [rdx+0x4aa],cl
   140032615:	add    BYTE PTR [rax],al
   140032617:	add    BYTE PTR [rdx+rbp*4+0x4],bl
   14003261e:	add    BYTE PTR [rax],al
   140032620:	test   al,0xaa
   140032622:	add    al,0x0
   140032624:	add    BYTE PTR [rax],al
   140032626:	add    BYTE PTR [rax],al
   140032628:	mov    al,0xaa
   14003262a:	add    al,0x0
   14003262c:	add    BYTE PTR [rax],al
   14003262e:	add    BYTE PTR [rax],al
   140032630:	mov    edx,0x4aa
	...
   14003263d:	add    BYTE PTR [rax],al
   14003263f:	add    BYTE PTR [rdx],ch
   140032641:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140032642:	add    al,0x0
   140032644:	add    BYTE PTR [rax],al
   140032646:	add    BYTE PTR [rax],al
   140032648:	rex.R movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003264a:	add    al,0x0
   14003264c:	add    BYTE PTR [rax],al
   14003264e:	add    BYTE PTR [rax],al
   140032650:	(bad)  
   140032651:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140032652:	add    al,0x0
	...
   140032660:	pushf  
   140032661:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140032662:	add    al,0x0
   140032664:	add    BYTE PTR [rax],al
   140032666:	add    BYTE PTR [rax],al
   140032668:	lods   al,BYTE PTR ds:[rsi]
   140032669:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003266a:	add    al,0x0
   14003266c:	add    BYTE PTR [rax],al
   14003266e:	add    BYTE PTR [rax],al
   140032670:	shl    BYTE PTR [rsp+rax*1+0x0],0x0
   140032678:	shr    BYTE PTR [rdx+0x4],1
   14003267e:	add    BYTE PTR [rax],al
   140032680:	shl    BYTE PTR [rsp+rax*1+0x0],cl
   140032687:	add    dh,ah
   140032689:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003268a:	add    al,0x0
   14003268c:	add    BYTE PTR [rax],al
   14003268e:	add    BYTE PTR [rax],al
   140032690:	clc    
   140032691:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140032692:	add    al,0x0
   140032694:	add    BYTE PTR [rax],al
   140032696:	add    BYTE PTR [rax],al
   140032698:	or     BYTE PTR [rbp+0x4],ah
	...
   1400326a6:	add    BYTE PTR [rax],al
   1400326a8:	(bad)  
   1400326a9:	adc    eax,DWORD PTR [rax]
   1400326ab:	rex add DWORD PTR [rax],eax
   1400326ae:	add    BYTE PTR [rax],al
   1400326b0:	movabs al,ds:0x14002e8
   1400326b9:	add    BYTE PTR [rax],al
   1400326bb:	add    BYTE PTR [rax],al
   1400326bd:	add    BYTE PTR [rax],al
   1400326bf:	add    BYTE PTR [rax+0x14002da],ah
   1400326c5:	add    BYTE PTR [rax],al
   1400326c7:	add    BYTE PTR [rax],dh
   1400326c9:	adc    eax,DWORD PTR [rax]
   1400326cb:	rex add DWORD PTR [rax],eax
   1400326ce:	add    BYTE PTR [rax],al
   1400326d0:	adc    BYTE PTR [rbx],dl
   1400326d2:	add    BYTE PTR [rax+0x1],al
   1400326d5:	add    BYTE PTR [rax],al
   1400326d7:	add    BYTE PTR [rax+0x1400011],dl
   1400326dd:	add    BYTE PTR [rax],al
   1400326df:	add    BYTE PTR [rax],dh
   1400326e1:	adc    al,BYTE PTR [rax]
   1400326e3:	rex add DWORD PTR [rax],eax
   1400326e6:	add    BYTE PTR [rax],al
   1400326e8:	add    BYTE PTR [rax],dl
   1400326ea:	add    BYTE PTR [rax+0x1],al
   1400326ed:	add    BYTE PTR [rax],al
   1400326ef:	add    BYTE PTR [rax],dl
   1400326f1:	adc    BYTE PTR [rax],al
   1400326f3:	rex add DWORD PTR [rax],eax
   1400326f6:	add    BYTE PTR [rax],al
   1400326f8:	and    BYTE PTR [rax],dl
   1400326fa:	add    BYTE PTR [rax+0x1],al
   1400326fd:	add    BYTE PTR [rax],al
   1400326ff:	add    BYTE PTR [rax],dh
   140032701:	adc    BYTE PTR [rax],al
   140032703:	rex add DWORD PTR [rax],eax
   140032706:	add    BYTE PTR [rax],al
   140032708:	rcl    BYTE PTR [rax],0x0
   14003270b:	rex add DWORD PTR [rax],eax
   14003270e:	add    BYTE PTR [rax],al
   140032710:	rcl    BYTE PTR [rax],1
   140032712:	add    BYTE PTR [rax+0x1],al
   140032715:	add    BYTE PTR [rax],al
   140032717:	add    al,dh
   140032719:	adc    BYTE PTR [rax],al
   14003271b:	rex add DWORD PTR [rax],eax
   14003271e:	add    BYTE PTR [rax],al
   140032720:	movabs al,ds:0x2000000001400012
   140032729:	adc    eax,DWORD PTR [rax]
   14003272b:	rex add DWORD PTR [rax],eax
	...
   14003273e:	add    BYTE PTR [rax],al
   140032740:	rcr    cl,0x2
   140032743:	rex add DWORD PTR [rax],eax
   140032746:	add    BYTE PTR [rax],al
   140032748:	jo     0x14003272d
   14003274a:	add    al,BYTE PTR [rax+0x1]
	...
   140032759:	adc    BYTE PTR [rax],al
   14003275b:	add    BYTE PTR [rax],dl
   14003275d:	adc    BYTE PTR [rax],al
   14003275f:	add    BYTE PTR [rax],ah
   140032761:	adc    BYTE PTR [rax],al
   140032763:	add    BYTE PTR [rax],dh
   140032765:	adc    BYTE PTR [rax],al
   140032767:	add    al,al
   140032769:	adc    BYTE PTR [rax],al
   14003276b:	add    al,dl
   14003276d:	adc    BYTE PTR [rax],al
   14003276f:	add    al,dh
   140032771:	adc    BYTE PTR [rax],al
   140032773:	add    BYTE PTR [rax+0x30000011],dl
   140032779:	adc    al,BYTE PTR [rax]
   14003277b:	add    BYTE PTR [rax+0x10000012],ah
   140032781:	adc    eax,DWORD PTR [rax]
   140032783:	add    BYTE PTR [rax],ah
   140032785:	adc    eax,DWORD PTR [rax]
   140032787:	add    BYTE PTR [rax],dh
   140032789:	adc    eax,DWORD PTR [rax]
   14003278b:	add    BYTE PTR [rax+0x13],ah
   14003278e:	add    BYTE PTR [rax],al
   140032790:	adc    BYTE PTR [rbx],0x0
   140032793:	add    BYTE PTR [rax-0x2fffffed],dh
   140032799:	adc    eax,DWORD PTR [rax]
   14003279b:	add    BYTE PTR [rax+0x14],al
   14003279e:	add    BYTE PTR [rax],al
   1400327a0:	(bad)  
   1400327a1:	adc    al,0x0
   1400327a3:	add    BYTE PTR [rax+0x14],dh
   1400327a6:	add    BYTE PTR [rax],al
   1400327a8:	loopne 0x1400327be
   1400327aa:	add    BYTE PTR [rax],al
   1400327ac:	lock adc al,0x0
   1400327af:	add    BYTE PTR [rax+0x15],al
   1400327b2:	add    BYTE PTR [rax],al
   1400327b4:	push   rax
   1400327b5:	adc    eax,0x15c00000
   1400327ba:	add    BYTE PTR [rax],al
   1400327bc:	adc    BYTE PTR [rsi],dl
   1400327be:	add    BYTE PTR [rax],al
   1400327c0:	adc    BYTE PTR [rdi],0x0
   1400327c3:	add    al,al
   1400327c5:	sbb    BYTE PTR [rax],al
   1400327c7:	add    al,dl
   1400327c9:	and    BYTE PTR [rax],al
   1400327cb:	add    BYTE PTR [rax+0x21],dl
   1400327ce:	add    BYTE PTR [rax],al
   1400327d0:	nop
   1400327d1:	and    al,BYTE PTR [rax]
   1400327d3:	add    al,ah
   1400327d5:	and    eax,DWORD PTR [rax]
   1400327d7:	add    BYTE PTR [rax+0x2c],al
   1400327da:	add    BYTE PTR [rax],al
   1400327dc:	mov    al,0x2d
   1400327de:	add    BYTE PTR [rax],al
   1400327e0:	xor    BYTE PTR [rsi],ch
   1400327e2:	add    BYTE PTR [rax],al
   1400327e4:	rex
   1400327e5:	add    BYTE PTR cs:[rax],al
   1400327e8:	loopne 0x140032818
   1400327ea:	add    BYTE PTR [rax],al
   1400327ec:	xor    BYTE PTR [rsi],dh
   1400327ee:	add    BYTE PTR [rax],al
   1400327f0:	rex cmp DWORD PTR [rax],eax
   1400327f3:	add    al,dh
   1400327f5:	cmp    DWORD PTR [rax],eax
   1400327f7:	add    BYTE PTR [rax-0x5fffffc6],al
   1400327fd:	add    BYTE PTR ds:[rax],al
   140032800:	sar    BYTE PTR [rsi],1
   140032802:	add    BYTE PTR [rax],al
   140032804:	adc    BYTE PTR [rax+0x0],al
   140032807:	add    BYTE PTR [rax+0x43],al
   14003280a:	add    BYTE PTR [rax],al
   14003280c:	and    BYTE PTR [rax+rax*1+0x0],al
   140032810:	(bad)  
   140032811:	add    BYTE PTR [r8],r8b
   140032814:	add    BYTE PTR [rbp+0x0],0x0
   140032818:	lock add BYTE PTR [r8],r8b
   14003281c:	adc    BYTE PTR [rsi+0x0],al
   14003281f:	add    BYTE PTR [rax-0x4fffffb9],dh
   140032825:	rex.W add BYTE PTR [rax],al
   140032828:	lock rex.W add BYTE PTR [rax],al
   14003282c:	adc    BYTE PTR [rcx+0x0],cl
   14003282f:	add    BYTE PTR [rax],dh
   140032831:	rex.WB add BYTE PTR [r8],al
   140032834:	rex
   140032835:	rex.WB add BYTE PTR [r8],al
   140032838:	ror    BYTE PTR [rcx+0x0],1
   14003283b:	add    BYTE PTR [rax],ah
   14003283d:	rex.WX add BYTE PTR [rax],al
   140032840:	loopne 0x14003288e
   140032842:	add    BYTE PTR [rax],al
   140032844:	lock rex.WR add BYTE PTR [rax],r8b
   140032848:	adc    BYTE PTR [rbp+0x0],cl
   14003284b:	add    BYTE PTR [rax],ah
   14003284d:	rex.WRB add BYTE PTR [r8],r8b
   140032850:	xor    BYTE PTR [rbp+0x0],cl
   140032853:	add    BYTE PTR [rax],dl
   140032855:	rex.WRX add BYTE PTR [rax],r8b
   140032858:	rcl    BYTE PTR [rcx+0x0],1
   14003285b:	add    BYTE PTR [rax+0x70],ah
   14003285e:	add    BYTE PTR [rax],al
   140032860:	jo     0x1400328d2
   140032862:	add    BYTE PTR [rax],al
   140032864:	xor    BYTE PTR [rax+0x0],0x0
   140032868:	sar    BYTE PTR [rax+0x0],1
   14003286b:	add    BYTE PTR [rax],dl
   14003286d:	jl     0x14003286f
   14003286f:	add    BYTE PTR [rax],dh
   140032871:	add    BYTE PTR [rax],0x0
   140032874:	rol    BYTE PTR [rax-0x7e300000],1
   14003287a:	add    BYTE PTR [rax],al
   14003287c:	mov    al,0x82
   14003287e:	add    BYTE PTR [rax],al
   140032880:	loopne 0x140032831
   140032882:	add    BYTE PTR [rax],al
   140032884:	adc    al,dl
   140032886:	add    BYTE PTR [rax],al
   140032888:	xor    al,dl
   14003288a:	add    BYTE PTR [rax],al
   14003288c:	movabs al,ds:0x600000d1300000d0
   140032895:	xlat   BYTE PTR ds:[rbx]
   140032896:	add    BYTE PTR [rax],al
   140032898:	jo     0x140032871
   14003289a:	add    BYTE PTR [rax],al
   14003289c:	adc    bh,0x0
   14003289f:	add    BYTE PTR [rax-0x2fffff29],dl
   1400328a5:	hlt    
   1400328a6:	add    BYTE PTR [rax],al
   1400328a8:	push   rax
   1400328a9:	sti    
   1400328aa:	add    BYTE PTR [rax],al
   1400328ac:	loopne 0x1400328a9
   1400328ae:	add    BYTE PTR [rax],al
   1400328b0:	(bad)  
   1400328b1:	cld    
   1400328b2:	add    BYTE PTR [rax],al
   1400328b4:	push   rax
   1400328b5:	std    
   1400328b6:	add    BYTE PTR [rax],al
   1400328b8:	sar    ch,0x0
   1400328bb:	add    BYTE PTR [rax+0x2],dl
   1400328be:	add    DWORD PTR [rax],eax
   1400328c0:	add    al,0x1
   1400328c3:	add    BYTE PTR [rax],al
   1400328c5:	(bad)  
   1400328c6:	add    DWORD PTR [rax],eax
   1400328c8:	push   rax
   1400328c9:	(bad)  
   1400328ca:	add    DWORD PTR [rax],eax
   1400328cc:	adc    BYTE PTR [rax],dl
   1400328ce:	add    DWORD PTR [rax],eax
   1400328d0:	xor    BYTE PTR [rax],dl
   1400328d2:	add    DWORD PTR [rax],eax
   1400328d4:	movabs al,ds:0xb0000110c0000110
   1400328dd:	adc    eax,DWORD PTR [rcx]
   1400328df:	add    al,al
   1400328e1:	adc    eax,DWORD PTR [rcx]
   1400328e3:	add    al,ah
   1400328e5:	(bad)  
   1400328e6:	add    DWORD PTR [rax],eax
   1400328e8:	push   rax
   1400328e9:	sub    BYTE PTR [rcx],al
   1400328eb:	add    BYTE PTR [rax],ah
   1400328ed:	sub    al,0x1
   1400328ef:	add    BYTE PTR [rax+0x46],al
   1400328f2:	add    DWORD PTR [rax],eax
   1400328f4:	movabs al,ds:0xc000017950000162
   1400328fd:	jl     0x140032900
   1400328ff:	add    BYTE PTR [rax],dl
   140032901:	jge    0x140032904
   140032903:	add    BYTE PTR [rax-0x7c],dl
   140032906:	add    DWORD PTR [rax],eax
   140032908:	lock mov al,BYTE PTR [rcx]
   14003290b:	add    BYTE PTR [rax+0x2000018b],dl
   140032911:	lea    eax,[rcx]
   140032913:	add    al,ah
   140032915:	lea    eax,[rcx]
   140032917:	add    BYTE PTR [rax-0x3ffffe58],dh
   14003291d:	test   al,0x1
   14003291f:	add    BYTE PTR [rax],ah
   140032921:	test   eax,0xa9500001
   140032926:	add    DWORD PTR [rax],eax
   140032928:	sub    BYTE PTR [rcx-0x4c6fffff],0x1
   14003292f:	add    BYTE PTR [rax-0x4a],dh
   140032932:	add    DWORD PTR [rax],eax
   140032934:	sar    BYTE PTR [rcx+rax*1+0x1be6000],0x0
   14003293c:	lock rol BYTE PTR [rcx],0x0
   140032940:	and    cl,al
   140032942:	add    DWORD PTR [rax],eax
   140032944:	push   rax
   140032945:	retf   
   140032946:	add    DWORD PTR [rax],eax
   140032948:	and    cl,bl
   14003294a:	add    DWORD PTR [rax],eax
   14003294c:	rcr    dl,0x1
   14003294f:	add    al,dh
   140032951:	fiadd  DWORD PTR [rcx]
   140032953:	add    BYTE PTR [rax],dl
   140032955:	fld    QWORD PTR [rcx]
   140032957:	add    BYTE PTR [rax-0x16],ah
   14003295a:	add    DWORD PTR [rax],eax
   14003295c:	rex jmp 0x140032960
   14003295f:	add    BYTE PTR [rax],dh
   140032961:	in     al,dx
   140032962:	add    DWORD PTR [rax],eax
   140032964:	and    ch,ch
   140032966:	add    DWORD PTR [rax],eax
   140032968:	shr    dh,0x1
   14003296b:	add    al,ah
   14003296d:	out    dx,al
   14003296e:	add    DWORD PTR [rax],eax
   140032970:	and    bh,ch
   140032972:	add    DWORD PTR [rax],eax
   140032974:	add    al,dh
   140032976:	add    DWORD PTR [rax],eax
   140032978:	xor    cl,0x1
   14003297b:	add    BYTE PTR [rax+0x1f1],dh
   140032981:	repnz add DWORD PTR [rax],eax
   140032984:	mov    al,0xf2
   140032986:	add    DWORD PTR [rax],eax
   140032988:	(bad)  
   140032989:	repz add DWORD PTR [rax],eax
   14003298c:	nop
   14003298d:	repz add DWORD PTR [rax],eax
   140032990:	mov    al,0xf3
   140032992:	add    DWORD PTR [rax],eax
   140032994:	shl    bl,1
   140032996:	add    DWORD PTR [rax],eax
   140032998:	lock cmc 
   14003299a:	add    DWORD PTR [rax],eax
   14003299c:	adc    dh,dh
   14003299e:	add    DWORD PTR [rax],eax
   1400329a0:	shl    dh,1
   1400329a2:	add    DWORD PTR [rax],eax
   1400329a4:	and    al,bh
   1400329a6:	add    DWORD PTR [rax],eax
   1400329a8:	jo     0x1400329a3
   1400329aa:	add    DWORD PTR [rax],eax
   1400329ac:	cmp    cl,0x1
   1400329af:	add    BYTE PTR [rax-0x5ffffe07],dl
   1400329b5:	stc    
   1400329b6:	add    DWORD PTR [rax],eax
   1400329b8:	mov    al,0xf9
   1400329ba:	add    DWORD PTR [rax],eax
   1400329bc:	loopne 0x1400329b7
   1400329be:	add    DWORD PTR [rax],eax
   1400329c0:	sar    dl,0x1
   1400329c3:	add    BYTE PTR [rax-0x1ffffe03],dl
   1400329c9:	add    eax,0x7400002
   1400329ce:	add    al,BYTE PTR [rax]
   1400329d0:	or     BYTE PTR [rcx],0x2
   1400329d3:	add    BYTE PTR [rax+0xb],al
   1400329d6:	add    al,BYTE PTR [rax]
   1400329d8:	adc    BYTE PTR [rip+0xde00002],cl        # 0x14de329e0
   1400329de:	add    al,BYTE PTR [rax]
   1400329e0:	movabs al,ds:0x300002102000020f
   1400329e9:	adc    BYTE PTR [rdx],al
   1400329eb:	add    BYTE PTR [rax-0x5ffffdf0],ah
   1400329f1:	adc    al,BYTE PTR [rdx]
   1400329f3:	add    BYTE PTR [rax+0x13],dl
   1400329f6:	add    al,BYTE PTR [rax]
   1400329f8:	movabs al,ds:0xc0000213f0000213
   140032a01:	adc    al,0x2
   140032a03:	add    BYTE PTR [rax],al
   140032a05:	adc    eax,0x15400002
   140032a0a:	add    al,BYTE PTR [rax]
   140032a0c:	adc    BYTE PTR [rip+0x15c00002],0x2        # 0x155c32a15
   140032a13:	add    BYTE PTR [rax],al
   140032a15:	(bad)  
   140032a16:	add    al,BYTE PTR [rax]
   140032a18:	rex (bad) 
   140032a1a:	add    al,BYTE PTR [rax]
   140032a1c:	and    BYTE PTR [rdx],bl
   140032a1e:	add    al,BYTE PTR [rax]
   140032a20:	lock sbb al,BYTE PTR [rdx]
   140032a23:	add    BYTE PTR [rax],ah
   140032a25:	sbb    al,0x2
   140032a27:	add    al,dh
   140032a29:	(bad)  
   140032a2a:	add    al,BYTE PTR [rax]
   140032a2c:	adc    BYTE PTR [rdx],ah
   140032a2e:	add    al,BYTE PTR [rax]
   140032a30:	shl    BYTE PTR [rdx],0x2
   140032a33:	add    BYTE PTR [rax+0x23],dh
   140032a36:	add    al,BYTE PTR [rax]
   140032a38:	shr    BYTE PTR [rbx],1
   140032a3a:	add    al,BYTE PTR [rax]
   140032a3c:	jo     0x140032a6c
   140032a3e:	add    al,BYTE PTR [rax]
   140032a40:	movabs al,ds:0x2000022f2000022e
   140032a49:	push   rax
   140032a4a:	add    al,BYTE PTR [rax]
   140032a4c:	push   rax
   140032a4d:	push   rax
   140032a4e:	add    al,BYTE PTR [rax]
   140032a50:	add    BYTE PTR [rcx+0x2],dl
   140032a53:	add    BYTE PTR [rax+0x51],al
   140032a56:	add    al,BYTE PTR [rax]
   140032a58:	rcl    BYTE PTR [rcx+0x2],0x0
   140032a5c:	mov    al,0x53
   140032a5e:	add    al,BYTE PTR [rax]
   140032a60:	(bad)  
   140032a61:	add    al,BYTE PTR gs:[rax]
   140032a64:	add    BYTE PTR [rax+0x2],bh
   140032a67:	add    BYTE PTR [rax+0x78],dh
   140032a6a:	add    al,BYTE PTR [rax]
   140032a6c:	xor    BYTE PTR [rbx+0x2],bh
   140032a6f:	add    BYTE PTR [rax-0x5ffffd85],dl
   140032a75:	jge    0x140032a79
   140032a77:	add    BYTE PTR [rax+0x1000027e],al
   140032a7d:	xchg   edx,eax
   140032a7e:	add    al,BYTE PTR [rax]
   140032a80:	sbb    BYTE PTR [rdx-0x64effffe],0x2
   140032a87:	add    BYTE PTR [rax-0x3ffffd64],dl
   140032a8d:	pushf  
   140032a8e:	add    al,BYTE PTR [rax]
   140032a90:	rex popf 
   140032a92:	add    al,BYTE PTR [rax]
   140032a94:	push   rax
   140032a95:	mov    dh,0x2
   140032a97:	add    BYTE PTR [rax+0x2b6],dh
   140032a9d:	mov    bh,0x2
   140032a9f:	add    BYTE PTR [rax+0x2b8],al
   140032aa5:	mov    ecx,0xbe700002
   140032aaa:	add    al,BYTE PTR [rax]
   140032aac:	sar    BYTE PTR [rdi-0x401ffffe],1
   140032ab2:	add    al,BYTE PTR [rax]
   140032ab4:	push   rax
   140032ab5:	rol    BYTE PTR [rdx],0x0
   140032ab8:	add    dh,al
   140032aba:	add    al,BYTE PTR [rax]
   140032abc:	xor    dh,al
   140032abe:	add    al,BYTE PTR [rax]
   140032ac0:	(bad)  
   140032ac1:	mov    BYTE PTR [rdx],0x0
   140032ac4:	jo     0x140032a8f
   140032ac6:	add    al,BYTE PTR [rax]
   140032ac8:	lock (bad) 
   140032aca:	add    al,BYTE PTR [rax]
   140032acc:	loopne 0x140032aa4
   140032ace:	add    al,BYTE PTR [rax]
   140032ad0:	rcl    bh,0x2
   140032ad3:	add    al,al
   140032ad5:	fld    DWORD PTR [rdx]
   140032ad7:	add    BYTE PTR [rax-0x2ffffd26],ah
   140032add:	fadd   QWORD PTR [rdx]
   140032adf:	add    al,al
   140032ae1:	fiadd  WORD PTR [rdx]
   140032ae3:	add    al,dl
   140032ae5:	fiadd  WORD PTR [rdx]
   140032ae7:	add    BYTE PTR [rax],dl
   140032ae9:	fild   WORD PTR [rdx]
   140032aeb:	add    BYTE PTR [rax-0x21],al
   140032aee:	add    al,BYTE PTR [rax]
   140032af0:	loopne 0x140032ad1
   140032af2:	add    al,BYTE PTR [rax]
   140032af4:	xor    bl,ah
   140032af6:	add    al,BYTE PTR [rax]
   140032af8:	jo     0x140032add
   140032afa:	add    al,BYTE PTR [rax]
   140032afc:	shl    bh,0x2
   140032aff:	add    BYTE PTR [rax],dl
   140032b01:	(bad)  
   140032b02:	add    eax,DWORD PTR [rax]
   140032b04:	xor    BYTE PTR [rdi],dl
   140032b06:	add    eax,DWORD PTR [rax]
   140032b08:	push   rax
   140032b09:	(bad)  
   140032b0a:	add    eax,DWORD PTR [rax]
   140032b0c:	jo     0x140032b25
   140032b0e:	add    eax,DWORD PTR [rax]
   140032b10:	movabs al,ds:0x5000031800000317
   140032b19:	sbb    BYTE PTR [rbx],al
   140032b1b:	add    BYTE PTR [rax+0x18],dh
   140032b1e:	add    eax,DWORD PTR [rax]
   140032b20:	and    BYTE PTR [rcx],bl
   140032b22:	add    eax,DWORD PTR [rax]
   140032b24:	jo     0x140032b3f
   140032b26:	add    eax,DWORD PTR [rax]
   140032b28:	(bad)  
   140032b29:	sbb    al,BYTE PTR [rbx]
   140032b2b:	add    BYTE PTR [rax+0x1a],dh
   140032b2e:	add    eax,DWORD PTR [rax]
   140032b30:	sbb    BYTE PTR [rdx],0x3
	...
   140032b3f:	add    BYTE PTR [rip+0x0],al        # 0x140032b45
   140032b45:	add    BYTE PTR [rax],al
   140032b47:	add    al,dh
   140032b49:	(bad)  
   140032b4a:	add    eax,DWORD PTR [rax+0x1]
   140032b4d:	add    BYTE PTR [rax],al
   140032b4f:	add    BYTE PTR [rdi+0x0],dh
   140032b55:	add    BYTE PTR [rax],al
   140032b57:	add    BYTE PTR [rax],cl
   140032b59:	xor    BYTE PTR [rbx],al
   140032b5b:	rex add DWORD PTR [rax],eax
   140032b5e:	add    BYTE PTR [rax],al
   140032b60:	adc    al,0x0
   140032b62:	add    BYTE PTR [rax],al
   140032b64:	add    BYTE PTR [rax],al
   140032b66:	add    BYTE PTR [rax],al
   140032b68:	sbb    BYTE PTR [rax],dh
   140032b6a:	add    eax,DWORD PTR [rax+0x1]
   140032b6d:	add    BYTE PTR [rax],al
   140032b6f:	add    BYTE PTR [rdi+0x0],ch
   140032b72:	add    BYTE PTR [rax],al
   140032b74:	add    BYTE PTR [rax],al
   140032b76:	add    BYTE PTR [rax],al
   140032b78:	sub    BYTE PTR [rax],dh
   140032b7a:	add    eax,DWORD PTR [rax+0x1]
   140032b7d:	add    BYTE PTR [rax],al
   140032b7f:	add    BYTE PTR [rdx+0x0],ch
   140032b85:	add    BYTE PTR [rax],al
   140032b87:	add    BYTE PTR [rax+0x30],al
   140032b8a:	add    eax,DWORD PTR [rax+0x1]
   140032b8d:	add    BYTE PTR [rax],al
   140032b8f:	add    BYTE PTR [rsi+0x0],cl
   140032b95:	add    BYTE PTR [rax],al
   140032b97:	add    BYTE PTR [rax+0x30],al
   140032b9a:	add    eax,DWORD PTR [rax+0x1]
   140032b9d:	add    BYTE PTR [rax],al
   140032b9f:	add    BYTE PTR [rdx+0x0],dl
   140032ba2:	add    BYTE PTR [rax],al
   140032ba4:	add    BYTE PTR [rax],al
   140032ba6:	add    BYTE PTR [rax],al
   140032ba8:	lock (bad) 
   140032baa:	add    eax,DWORD PTR [rax+0x1]
   140032bad:	add    BYTE PTR [rax],al
   140032baf:	add    bl,dh
   140032bb1:	add    eax,DWORD PTR [rax]
   140032bb3:	add    BYTE PTR [rax],al
   140032bb5:	add    BYTE PTR [rax],al
   140032bb7:	add    BYTE PTR [rax+0x30],bl
   140032bba:	add    eax,DWORD PTR [rax+0x1]
   140032bbd:	add    BYTE PTR [rax],al
   140032bbf:	add    ah,dh
   140032bc1:	add    eax,DWORD PTR [rax]
   140032bc3:	add    BYTE PTR [rax],al
   140032bc5:	add    BYTE PTR [rax],al
   140032bc7:	add    BYTE PTR [rax+0x30],bl
   140032bca:	add    eax,DWORD PTR [rax+0x1]
   140032bcd:	add    BYTE PTR [rax],al
   140032bcf:	add    ch,dh
   140032bd1:	add    eax,DWORD PTR [rax]
   140032bd3:	add    BYTE PTR [rax],al
   140032bd5:	add    BYTE PTR [rax],al
   140032bd7:	add    BYTE PTR [rax+0x30],bl
   140032bda:	add    eax,DWORD PTR [rax+0x1]
   140032bdd:	add    BYTE PTR [rax],al
   140032bdf:	add    BYTE PTR [rax],dl
   140032be1:	add    BYTE PTR [rax],al
   140032be3:	add    BYTE PTR [rax],al
   140032be5:	add    BYTE PTR [rax],al
   140032be7:	add    al,dh
   140032be9:	(bad)  
   140032bea:	add    eax,DWORD PTR [rax+0x1]
   140032bed:	add    BYTE PTR [rax],al
   140032bef:	add    BYTE PTR [rdi],dh
   140032bf1:	add    BYTE PTR [rax],al
   140032bf3:	add    BYTE PTR [rax],al
   140032bf5:	add    BYTE PTR [rax],al
   140032bf7:	add    BYTE PTR [rax],bl
   140032bf9:	xor    BYTE PTR [rbx],al
   140032bfb:	rex add DWORD PTR [rax],eax
   140032bfe:	add    BYTE PTR [rax],al
   140032c00:	or     DWORD PTR fs:[rax],eax
   140032c03:	add    BYTE PTR [rax],al
   140032c05:	add    BYTE PTR [rax],al
   140032c07:	add    BYTE PTR [rax+0x30],al
   140032c0a:	add    eax,DWORD PTR [rax+0x1]
   140032c0d:	add    BYTE PTR [rax],al
   140032c0f:	add    BYTE PTR [rcx+0x0],dl
   140032c15:	add    BYTE PTR [rax],al
   140032c17:	add    BYTE PTR [rax+0x30],ch
   140032c1a:	add    eax,DWORD PTR [rax+0x1]
   140032c1d:	add    BYTE PTR [rax],al
   140032c1f:	add    BYTE PTR [rbx],cl
   140032c21:	add    DWORD PTR [rax],eax
   140032c23:	add    BYTE PTR [rax],al
   140032c25:	add    BYTE PTR [rax],al
   140032c27:	add    BYTE PTR [rax+0x1400330],al
   140032c2d:	add    BYTE PTR [rax],al
   140032c2f:	add    BYTE PTR [rax+0x0],dh
   140032c32:	add    BYTE PTR [rax],al
   140032c34:	add    BYTE PTR [rax],al
   140032c36:	add    BYTE PTR [rax],al
   140032c38:	cwde   
   140032c39:	xor    BYTE PTR [rbx],al
   140032c3b:	rex add DWORD PTR [rax],eax
   140032c3e:	add    BYTE PTR [rax],al
   140032c40:	push   rax
   140032c41:	add    BYTE PTR [rax],al
   140032c43:	add    BYTE PTR [rax],al
   140032c45:	add    BYTE PTR [rax],al
   140032c47:	add    BYTE PTR [rax],cl
   140032c49:	xor    BYTE PTR [rbx],al
   140032c4b:	rex add DWORD PTR [rax],eax
   140032c4e:	add    BYTE PTR [rax],al
   140032c50:	add    al,BYTE PTR [rax]
   140032c52:	add    BYTE PTR [rax],al
   140032c54:	add    BYTE PTR [rax],al
   140032c56:	add    BYTE PTR [rax],al
   140032c58:	mov    al,0x30
   140032c5a:	add    eax,DWORD PTR [rax+0x1]
   140032c5d:	add    BYTE PTR [rax],al
   140032c5f:	add    BYTE PTR [rdi],ah
   140032c61:	add    BYTE PTR [rax],al
   140032c63:	add    BYTE PTR [rax],al
   140032c65:	add    BYTE PTR [rax],al
   140032c67:	add    BYTE PTR [rax+0x1400330],bl
   140032c6d:	add    BYTE PTR [rax],al
   140032c6f:	add    BYTE PTR [rax+rax*1],cl
   140032c72:	add    BYTE PTR [rax],al
   140032c74:	add    BYTE PTR [rax],al
   140032c76:	add    BYTE PTR [rax],al
   140032c78:	lock (bad) 
   140032c7a:	add    eax,DWORD PTR [rax+0x1]
   140032c7d:	add    BYTE PTR [rax],al
   140032c7f:	add    BYTE PTR [rdi],cl
   140032c81:	add    BYTE PTR [rax],al
   140032c83:	add    BYTE PTR [rax],al
   140032c85:	add    BYTE PTR [rax],al
   140032c87:	add    BYTE PTR [rax],bl
   140032c89:	xor    BYTE PTR [rbx],al
   140032c8b:	rex add DWORD PTR [rax],eax
   140032c8e:	add    BYTE PTR [rax],al
   140032c90:	add    DWORD PTR [rax],eax
   140032c92:	add    BYTE PTR [rax],al
   140032c94:	add    BYTE PTR [rax],al
   140032c96:	add    BYTE PTR [rax],al
   140032c98:	shl    BYTE PTR [rax],1
   140032c9a:	add    eax,DWORD PTR [rax+0x1]
   140032c9d:	add    BYTE PTR [rax],al
   140032c9f:	add    BYTE PTR [rsi],al
   140032ca1:	add    BYTE PTR [rax],al
   140032ca3:	add    BYTE PTR [rax],al
   140032ca5:	add    BYTE PTR [rax],al
   140032ca7:	add    BYTE PTR [rax+0x1400330],al
   140032cad:	add    BYTE PTR [rax],al
   140032caf:	add    BYTE PTR [rbx+0x0],bh
   140032cb2:	add    BYTE PTR [rax],al
   140032cb4:	add    BYTE PTR [rax],al
   140032cb6:	add    BYTE PTR [rax],al
   140032cb8:	xor    BYTE PTR [rax],0x3
   140032cbb:	rex add DWORD PTR [rax],eax
   140032cbe:	add    BYTE PTR [rax],al
   140032cc0:	and    DWORD PTR [rax],eax
   140032cc2:	add    BYTE PTR [rax],al
   140032cc4:	add    BYTE PTR [rax],al
   140032cc6:	add    BYTE PTR [rax],al
   140032cc8:	call   0x141432ffd
   140032ccd:	add    BYTE PTR [rax],al
   140032ccf:	add    ah,dl
   140032cd1:	add    BYTE PTR [rax],al
   140032cd3:	add    BYTE PTR [rax],al
   140032cd5:	add    BYTE PTR [rax],al
   140032cd7:	add    al,ch
   140032cd9:	xor    BYTE PTR [rbx],al
   140032cdb:	rex add DWORD PTR [rax],eax
   140032cde:	add    BYTE PTR [rax],al
   140032ce0:	add    DWORD PTR [rax],0x0
   140032ce3:	add    BYTE PTR [rax],al
   140032ce5:	add    BYTE PTR [rax],al
   140032ce7:	add    BYTE PTR [rax+0x1400330],al
   140032ced:	add    BYTE PTR [rax],al
   140032cef:	add    dh,ah
   140032cf1:	add    eax,DWORD PTR [rax]
   140032cf3:	add    BYTE PTR [rax],al
   140032cf5:	add    BYTE PTR [rax],al
   140032cf7:	add    al,dh
   140032cf9:	(bad)  
   140032cfa:	add    eax,DWORD PTR [rax+0x1]
   140032cfd:	add    BYTE PTR [rax],al
   140032cff:	add    BYTE PTR [rax],cl
	...
   140032d09:	xor    DWORD PTR [rbx],eax
   140032d0b:	rex add DWORD PTR [rax],eax
   140032d0e:	add    BYTE PTR [rax],al
   140032d10:	adc    eax,0x0
   140032d15:	add    BYTE PTR [rax],al
   140032d17:	add    BYTE PTR [rax],bl
   140032d19:	xor    DWORD PTR [rbx],eax
   140032d1b:	rex add DWORD PTR [rax],eax
   140032d1e:	add    BYTE PTR [rax],al
   140032d20:	adc    DWORD PTR [rax],eax
   140032d22:	add    BYTE PTR [rax],al
   140032d24:	add    BYTE PTR [rax],al
   140032d26:	add    BYTE PTR [rax],al
   140032d28:	cmp    BYTE PTR [rcx],dh
   140032d2a:	add    eax,DWORD PTR [rax+0x1]
   140032d2d:	add    BYTE PTR [rax],al
   140032d2f:	add    BYTE PTR [rsi+0x0],ch
   140032d32:	add    BYTE PTR [rax],al
   140032d34:	add    BYTE PTR [rax],al
   140032d36:	add    BYTE PTR [rax],al
   140032d38:	pop    rax
   140032d39:	xor    BYTE PTR [rbx],al
   140032d3b:	rex add DWORD PTR [rax],eax
   140032d3e:	add    BYTE PTR [rax],al
   140032d40:	(bad)  
   140032d41:	or     DWORD PTR [rax],eax
   140032d43:	add    BYTE PTR [rax],al
   140032d45:	add    BYTE PTR [rax],al
   140032d47:	add    BYTE PTR [rax+0x30],al
   140032d4a:	add    eax,DWORD PTR [rax+0x1]
   140032d4d:	add    BYTE PTR [rax],al
   140032d4f:	add    bl,ah
   140032d51:	add    eax,DWORD PTR [rax]
   140032d53:	add    BYTE PTR [rax],al
   140032d55:	add    BYTE PTR [rax],al
   140032d57:	add    BYTE PTR [rax+0x31],dl
   140032d5a:	add    eax,DWORD PTR [rax+0x1]
   140032d5d:	add    BYTE PTR [rax],al
   140032d5f:	add    BYTE PTR [rsi],cl
	...
   140032d69:	xor    DWORD PTR [rbx],eax
   140032d6b:	rex add DWORD PTR [rax],eax
   140032d6e:	add    BYTE PTR [rax],al
   140032d70:	add    eax,DWORD PTR [rax]
   140032d72:	add    BYTE PTR [rax],al
   140032d74:	add    BYTE PTR [rax],al
   140032d76:	add    BYTE PTR [rax],al
   140032d78:	mov    al,0x30
   140032d7a:	add    eax,DWORD PTR [rax+0x1]
   140032d7d:	add    BYTE PTR [rax],al
   140032d7f:	add    BYTE PTR [rsi],bl
   140032d81:	add    BYTE PTR [rax],al
   140032d83:	add    BYTE PTR [rax],al
   140032d85:	add    BYTE PTR [rax],al
   140032d87:	add    BYTE PTR [rax+0x30],bl
   140032d8a:	add    eax,DWORD PTR [rax+0x1]
   140032d8d:	add    BYTE PTR [rax],al
   140032d8f:	add    ch,dl
   140032d91:	add    al,0x0
   140032d93:	add    BYTE PTR [rax],al
   140032d95:	add    BYTE PTR [rax],al
   140032d97:	add    BYTE PTR [rax],bl
   140032d99:	xor    DWORD PTR [rbx],eax
   140032d9b:	rex add DWORD PTR [rax],eax
   140032d9e:	add    BYTE PTR [rax],al
   140032da0:	sbb    DWORD PTR [rax],eax
   140032da2:	add    BYTE PTR [rax],al
   140032da4:	add    BYTE PTR [rax],al
   140032da6:	add    BYTE PTR [rax],al
   140032da8:	pop    rax
   140032da9:	xor    BYTE PTR [rbx],al
   140032dab:	rex add DWORD PTR [rax],eax
   140032dae:	add    BYTE PTR [rax],al
   140032db0:	and    BYTE PTR [rax],al
   140032db2:	add    BYTE PTR [rax],al
   140032db4:	add    BYTE PTR [rax],al
   140032db6:	add    BYTE PTR [rax],al
   140032db8:	lock (bad) 
   140032dba:	add    eax,DWORD PTR [rax+0x1]
   140032dbd:	add    BYTE PTR [rax],al
   140032dbf:	add    BYTE PTR [rax+rax*1],al
   140032dc2:	add    BYTE PTR [rax],al
   140032dc4:	add    BYTE PTR [rax],al
   140032dc6:	add    BYTE PTR [rax],al
   140032dc8:	push   0x1400331
   140032dcd:	add    BYTE PTR [rax],al
   140032dcf:	add    BYTE PTR [rip+0x0],bl        # 0x140032dd5
   140032dd5:	add    BYTE PTR [rax],al
   140032dd7:	add    BYTE PTR [rax+0x30],bl
   140032dda:	add    eax,DWORD PTR [rax+0x1]
   140032ddd:	add    BYTE PTR [rax],al
   140032ddf:	add    BYTE PTR [rbx],dl
   140032de1:	add    BYTE PTR [rax],al
   140032de3:	add    BYTE PTR [rax],al
   140032de5:	add    BYTE PTR [rax],al
   140032de7:	add    al,dh
   140032de9:	(bad)  
   140032dea:	add    eax,DWORD PTR [rax+0x1]
   140032ded:	add    BYTE PTR [rax],al
   140032def:	add    BYTE PTR [rip+0x27],bl        # 0x140032e1c
   140032df5:	add    BYTE PTR [rax],al
   140032df7:	add    BYTE PTR [rax+0x1400331],al
   140032dfd:	add    BYTE PTR [rax],al
   140032dff:	add    BYTE PTR [rax+0x27],al
   140032e02:	add    BYTE PTR [rax],al
   140032e04:	add    BYTE PTR [rax],al
   140032e06:	add    BYTE PTR [rax],al
   140032e08:	cwde   
   140032e09:	xor    DWORD PTR [rbx],eax
   140032e0b:	rex add DWORD PTR [rax],eax
   140032e0e:	add    BYTE PTR [rax],al
   140032e10:	rex.B (bad) 
   140032e12:	add    BYTE PTR [rax],al
   140032e14:	add    BYTE PTR [rax],al
   140032e16:	add    BYTE PTR [rax],al
   140032e18:	test   al,0x31
   140032e1a:	add    eax,DWORD PTR [rax+0x1]
   140032e1d:	add    BYTE PTR [rax],al
   140032e1f:	add    BYTE PTR [rdi],bh
   140032e21:	(bad)  
   140032e22:	add    BYTE PTR [rax],al
   140032e24:	add    BYTE PTR [rax],al
   140032e26:	add    BYTE PTR [rax],al
   140032e28:	shl    BYTE PTR [rcx],0x3
   140032e2b:	rex add DWORD PTR [rax],eax
   140032e2e:	add    BYTE PTR [rax],al
   140032e30:	xor    eax,0x27
   140032e35:	add    BYTE PTR [rax],al
   140032e37:	add    al,ah
   140032e39:	xor    DWORD PTR [rbx],eax
   140032e3b:	rex add DWORD PTR [rax],eax
   140032e3e:	add    BYTE PTR [rax],al
   140032e40:	sbb    DWORD PTR [rdi],esp
   140032e42:	add    BYTE PTR [rax],al
   140032e44:	add    BYTE PTR [rax],al
   140032e46:	add    BYTE PTR [rax],al
   140032e48:	add    BYTE PTR [rdx],dh
   140032e4a:	add    eax,DWORD PTR [rax+0x1]
   140032e4d:	add    BYTE PTR [rax],al
   140032e4f:	add    BYTE PTR [rbp+0x27],al
   140032e52:	add    BYTE PTR [rax],al
   140032e54:	add    BYTE PTR [rax],al
   140032e56:	add    BYTE PTR [rax],al
   140032e58:	sbb    BYTE PTR [rdx],dh
   140032e5a:	add    eax,DWORD PTR [rax+0x1]
   140032e5d:	add    BYTE PTR [rax],al
   140032e5f:	add    BYTE PTR [rbp+0x27],cl
   140032e62:	add    BYTE PTR [rax],al
   140032e64:	add    BYTE PTR [rax],al
   140032e66:	add    BYTE PTR [rax],al
   140032e68:	xor    BYTE PTR [rdx],dh
   140032e6a:	add    eax,DWORD PTR [rax+0x1]
   140032e6d:	add    BYTE PTR [rax],al
   140032e6f:	add    BYTE PTR [rsi+0x27],al
   140032e72:	add    BYTE PTR [rax],al
   140032e74:	add    BYTE PTR [rax],al
   140032e76:	add    BYTE PTR [rax],al
   140032e78:	rex.W xor al,BYTE PTR [rbx]
   140032e7b:	rex add DWORD PTR [rax],eax
   140032e7e:	add    BYTE PTR [rax],al
   140032e80:	(bad)  
   140032e81:	(bad)  
   140032e82:	add    BYTE PTR [rax],al
   140032e84:	add    BYTE PTR [rax],al
   140032e86:	add    BYTE PTR [rax],al
   140032e88:	(bad)  
   140032e89:	xor    al,BYTE PTR [rbx]
   140032e8b:	rex add DWORD PTR [rax],eax
   140032e8e:	add    BYTE PTR [rax],al
   140032e90:	(bad)  
   140032e91:	(bad)  
   140032e92:	add    BYTE PTR [rax],al
   140032e94:	add    BYTE PTR [rax],al
   140032e96:	add    BYTE PTR [rax],al
   140032e98:	xor    BYTE PTR [rdx],0x3
   140032e9b:	rex add DWORD PTR [rax],eax
   140032e9e:	add    BYTE PTR [rax],al
   140032ea0:	push   rcx
   140032ea1:	(bad)  
   140032ea2:	add    BYTE PTR [rax],al
   140032ea4:	add    BYTE PTR [rax],al
   140032ea6:	add    BYTE PTR [rax],al
   140032ea8:	nop
   140032ea9:	xor    al,BYTE PTR [rbx]
   140032eab:	rex add DWORD PTR [rax],eax
   140032eae:	add    BYTE PTR [rax],al
   140032eb0:	xor    al,0x27
   140032eb2:	add    BYTE PTR [rax],al
   140032eb4:	add    BYTE PTR [rax],al
   140032eb6:	add    BYTE PTR [rax],al
   140032eb8:	test   al,0x32
   140032eba:	add    eax,DWORD PTR [rax+0x1]
   140032ebd:	add    BYTE PTR [rax],al
   140032ebf:	add    BYTE PTR [rdi+riz*1],dl
   140032ec2:	add    BYTE PTR [rax],al
   140032ec4:	add    BYTE PTR [rax],al
   140032ec6:	add    BYTE PTR [rax],al
   140032ec8:	shl    BYTE PTR [rdx],0x3
   140032ecb:	rex add DWORD PTR [rax],eax
   140032ece:	add    BYTE PTR [rax],al
   140032ed0:	es (bad) 
   140032ed2:	add    BYTE PTR [rax],al
   140032ed4:	add    BYTE PTR [rax],al
   140032ed6:	add    BYTE PTR [rax],al
   140032ed8:	shl    BYTE PTR [rdx],1
   140032eda:	add    eax,DWORD PTR [rax+0x1]
   140032edd:	add    BYTE PTR [rax],al
   140032edf:	add    BYTE PTR [rax+0x27],cl
   140032ee2:	add    BYTE PTR [rax],al
   140032ee4:	add    BYTE PTR [rax],al
   140032ee6:	add    BYTE PTR [rax],al
   140032ee8:	call   0x14143321f
   140032eed:	add    BYTE PTR [rax],al
   140032eef:	add    BYTE PTR [rax],ch
   140032ef1:	(bad)  
   140032ef2:	add    BYTE PTR [rax],al
   140032ef4:	add    BYTE PTR [rax],al
   140032ef6:	add    BYTE PTR [rax],al
   140032ef8:	add    BYTE PTR [rbx],dh
   140032efa:	add    eax,DWORD PTR [rax+0x1]
   140032efd:	add    BYTE PTR [rax],al
   140032eff:	add    BYTE PTR [rax],bh
   140032f01:	(bad)  
   140032f02:	add    BYTE PTR [rax],al
   140032f04:	add    BYTE PTR [rax],al
   140032f06:	add    BYTE PTR [rax],al
   140032f08:	sbb    BYTE PTR [rbx],dh
   140032f0a:	add    eax,DWORD PTR [rax+0x1]
   140032f0d:	add    BYTE PTR [rax],al
   140032f0f:	add    BYTE PTR [rdi+0x27],cl
   140032f12:	add    BYTE PTR [rax],al
   140032f14:	add    BYTE PTR [rax],al
   140032f16:	add    BYTE PTR [rax],al
   140032f18:	sub    BYTE PTR [rbx],dh
   140032f1a:	add    eax,DWORD PTR [rax+0x1]
   140032f1d:	add    BYTE PTR [rax],al
   140032f1f:	add    BYTE PTR [rdx+0x27],al
   140032f22:	add    BYTE PTR [rax],al
   140032f24:	add    BYTE PTR [rax],al
   140032f26:	add    BYTE PTR [rax],al
   140032f28:	rex xor eax,DWORD PTR [rbx]
   140032f2b:	rex add DWORD PTR [rax],eax
   140032f2e:	add    BYTE PTR [rax],al
   140032f30:	rex.R (bad) 
   140032f32:	add    BYTE PTR [rax],al
   140032f34:	add    BYTE PTR [rax],al
   140032f36:	add    BYTE PTR [rax],al
   140032f38:	push   rax
   140032f39:	xor    eax,DWORD PTR [rbx]
   140032f3b:	rex add DWORD PTR [rax],eax
   140032f3e:	add    BYTE PTR [rax],al
   140032f40:	rex.XB (bad) 
   140032f42:	add    BYTE PTR [rax],al
   140032f44:	add    BYTE PTR [rax],al
   140032f46:	add    BYTE PTR [rax],al
   140032f48:	(bad)  
   140032f49:	xor    eax,DWORD PTR [rbx]
   140032f4b:	rex add DWORD PTR [rax],eax
   140032f4e:	add    BYTE PTR [rax],al
   140032f50:	rex.RXB (bad) 
   140032f52:	add    BYTE PTR [rax],al
   140032f54:	add    BYTE PTR [rax],al
   140032f56:	add    BYTE PTR [rax],al
   140032f58:	js     0x140032f8d
   140032f5a:	add    eax,DWORD PTR [rax+0x1]
   140032f5d:	add    BYTE PTR [rax],al
   140032f5f:	add    BYTE PTR [rdx],bh
   140032f61:	(bad)  
   140032f62:	add    BYTE PTR [rax],al
   140032f64:	add    BYTE PTR [rax],al
   140032f66:	add    BYTE PTR [rax],al
   140032f68:	mov    BYTE PTR [rbx],dh
   140032f6a:	add    eax,DWORD PTR [rax+0x1]
   140032f6d:	add    BYTE PTR [rax],al
   140032f6f:	add    BYTE PTR [rcx+0x27],cl
   140032f72:	add    BYTE PTR [rax],al
   140032f74:	add    BYTE PTR [rax],al
   140032f76:	add    BYTE PTR [rax],al
   140032f78:	movabs al,ds:0x3600000001400333
   140032f81:	(bad)  
   140032f82:	add    BYTE PTR [rax],al
   140032f84:	add    BYTE PTR [rax],al
   140032f86:	add    BYTE PTR [rax],al
   140032f88:	mov    al,0x33
   140032f8a:	add    eax,DWORD PTR [rax+0x1]
   140032f8d:	add    BYTE PTR [rax],al
   140032f8f:	add    BYTE PTR [rip+0x27],bh        # 0x140032fbc
   140032f95:	add    BYTE PTR [rax],al
   140032f97:	add    al,al
   140032f99:	xor    eax,DWORD PTR [rbx]
   140032f9b:	rex add DWORD PTR [rax],eax
   140032f9e:	add    BYTE PTR [rax],al
   140032fa0:	cmp    esp,DWORD PTR [rdi]
   140032fa2:	add    BYTE PTR [rax],al
   140032fa4:	add    BYTE PTR [rax],al
   140032fa6:	add    BYTE PTR [rax],al
   140032fa8:	fdiv   DWORD PTR [rbx]
   140032faa:	add    eax,DWORD PTR [rax+0x1]
   140032fad:	add    BYTE PTR [rax],al
   140032faf:	add    BYTE PTR [rcx],bh
   140032fb1:	(bad)  
   140032fb2:	add    BYTE PTR [rax],al
   140032fb4:	add    BYTE PTR [rax],al
   140032fb6:	add    BYTE PTR [rax],al
   140032fb8:	lock xor eax,DWORD PTR [rbx]
   140032fbb:	rex add DWORD PTR [rax],eax
   140032fbe:	add    BYTE PTR [rax],al
   140032fc0:	rex.WR (bad) 
   140032fc2:	add    BYTE PTR [rax],al
   140032fc4:	add    BYTE PTR [rax],al
   140032fc6:	add    BYTE PTR [rax],al
   140032fc8:	or     BYTE PTR [rbx+rax*1],dh
   140032fcb:	rex add DWORD PTR [rax],eax
   140032fce:	add    BYTE PTR [rax],al
   140032fd0:	xor    esp,DWORD PTR [rdi]
   140032fd2:	add    BYTE PTR [rax],al
   140032fd4:	add    BYTE PTR [rax],al
   140032fd6:	add    BYTE PTR [rax],al
   140032fd8:	sbb    BYTE PTR [rbx+rax*1],dh
   140032fdb:	rex add DWORD PTR [rax],eax
	...
   140032fee:	add    BYTE PTR [rax],al
   140032ff0:	jo     0x140033057
   140032ff2:	jb     0x140033061
   140032ff4:	imul   esi,DWORD PTR [rbx+0x73],0x206e6f69
   140032ffb:	fs outs dx,BYTE PTR gs:[rsi]
   140032ffe:	imul   esp,DWORD PTR [rbp+0x64],0x0
   140033005:	add    BYTE PTR [rax],al
   140033007:	add    BYTE PTR [rsi+0x69],ah
   14003300a:	ins    BYTE PTR es:[rdi],dx
   14003300b:	and    BYTE PTR gs:[rbp+0x78],ah
   14003300f:	imul   esi,DWORD PTR [rbx+0x74],0x73
   140033016:	add    BYTE PTR [rax],al
   140033018:	outs   dx,BYTE PTR ds:[rsi]
   140033019:	outs   dx,DWORD PTR ds:[rsi]
   14003301a:	and    BYTE PTR [rbx+0x75],dh
   14003301d:	movsxd ebp,DWORD PTR [rax+0x20]
   140033020:	fs gs jbe 0x14003308d
   140033024:	movsxd esp,DWORD PTR [rbp+0x0]
   140033027:	add    BYTE PTR [rsi+0x69],ah
   14003302a:	ins    BYTE PTR es:[rdi],dx
   14003302b:	outs   dx,BYTE PTR gs:[rsi]
   14003302d:	(bad)  
   14003302e:	ins    DWORD PTR es:[rdi],dx
   14003302f:	and    BYTE PTR gs:[rdi+rbp*2+0x6f],dh
   140033034:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   140033038:	add    BYTE PTR [eax],al
   14003303b:	add    BYTE PTR [rax],al
   14003303d:	add    BYTE PTR [rax],al
   14003303f:	add    BYTE PTR [rbp+riz*2+0x76],ah
   140033043:	imul   esp,DWORD PTR [rbx+0x65],0x20726f20
   14003304a:	jb     0x1400330b1
   14003304c:	jae    0x1400330bd
   14003304e:	jne    0x1400330c2
   140033050:	movsxd esp,DWORD PTR [rbp+0x20]
   140033053:	(bad)  
   140033054:	jne    0x1400330c9
   140033056:	jns    0x140033058
   140033058:	imul   ebp,DWORD PTR [rdi+0x20],0x6f727265
   14003305f:	jb     0x140033061
   140033061:	add    BYTE PTR [rax],al
   140033063:	add    BYTE PTR [rax],al
   140033065:	add    BYTE PTR [rax],al
   140033067:	add    BYTE PTR [rcx+rbp*2+0x72],ah
   14003306b:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   140033070:	jns    0x140033092
   140033072:	outs   dx,BYTE PTR ds:[rsi]
   140033073:	outs   dx,DWORD PTR ds:[rsi]
   140033074:	je     0x140033096
   140033076:	gs ins DWORD PTR es:[rdi],dx
   140033078:	jo     0x1400330ee
   14003307a:	jns    0x14003307c
   14003307c:	add    BYTE PTR [rax],al
   14003307e:	add    BYTE PTR [rax],al
   140033080:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
   140033087:	and    BYTE PTR [rcx+0x72],ah
   14003308a:	addr32 jne 0x1400330fa
   14003308d:	outs   dx,BYTE PTR gs:[rsi]
   14003308f:	je     0x140033091
   140033091:	add    BYTE PTR [rax],al
   140033093:	add    BYTE PTR [rax],al
   140033095:	add    BYTE PTR [rax],al
   140033097:	add    BYTE PTR [rsi+0x6f],ch
   14003309a:	and    BYTE PTR [rbx+0x70],dh
   14003309d:	(bad)  
   14003309e:	movsxd esp,DWORD PTR [rbp+0x20]
   1400330a1:	outs   dx,DWORD PTR ds:[rsi]
   1400330a2:	outs   dx,BYTE PTR ds:[rsi]
   1400330a3:	and    BYTE PTR [rbp+riz*2+0x76],ah
   1400330a7:	imul   esp,DWORD PTR [rbx+0x65],0x0
   1400330ae:	add    BYTE PTR [rax],al
   1400330b0:	outs   dx,BYTE PTR ds:[rsi]
   1400330b1:	outs   dx,DWORD PTR ds:[rsi]
   1400330b2:	and    BYTE PTR [rbx+0x75],dh
   1400330b5:	movsxd ebp,DWORD PTR [rax+0x20]
   1400330b8:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x726f
   1400330bf:	and    BYTE PTR [rcx+rbp*2+0x72],ah
   1400330c3:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   1400330c8:	jns    0x1400330ca
   1400330ca:	add    BYTE PTR [rax],al
   1400330cc:	add    BYTE PTR [rax],al
   1400330ce:	add    BYTE PTR [rax],al
   1400330d0:	data16 jne 0x140033141
   1400330d3:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   1400330d7:	outs   dx,BYTE PTR ds:[rsi]
   1400330d8:	and    BYTE PTR [rsi+0x6f],ch
   1400330db:	je     0x1400330fd
   1400330dd:	jae    0x140033154
   1400330df:	jo     0x140033151
   1400330e1:	outs   dx,DWORD PTR ds:[rsi]
   1400330e2:	jb     0x140033158
   1400330e4:	gs add BYTE PTR fs:[rax],al
   1400330e8:	outs   dx,BYTE PTR ds:[rsi]
   1400330e9:	outs   dx,DWORD PTR ds:[rsi]
   1400330ea:	and    BYTE PTR [rdi+rbp*2+0x63],ch
   1400330ee:	imul   esp,DWORD PTR [rax],0x61
   1400330f1:	jbe    0x140033154
   1400330f3:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x656c
   1400330fb:	add    BYTE PTR [rax],al
   1400330fd:	add    BYTE PTR [rax],al
   1400330ff:	add    BYTE PTR [rsi+0x6f],ch
   140033102:	je     0x140033124
   140033104:	outs   dx,BYTE PTR gs:[rsi]
   140033106:	outs   dx,DWORD PTR ds:[rsi]
   140033107:	jne    0x140033170
   140033109:	push   0x6d656d20
   14003310e:	outs   dx,DWORD PTR ds:[rsi]
   14003310f:	jb     0x14003318a
   140033111:	add    BYTE PTR [rax],al
   140033113:	add    BYTE PTR [rax],al
   140033115:	add    BYTE PTR [rax],al
   140033117:	add    BYTE PTR [rdx+0x65],dh
   14003311a:	jae    0x14003318b
   14003311c:	jne    0x140033190
   14003311e:	movsxd esp,DWORD PTR [rbp+0x20]
   140033121:	jne    0x140033191
   140033123:	(bad)  
   140033124:	jbe    0x140033187
   140033126:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x7420656c
   14003312e:	jb     0x1400331a9
   140033130:	and    BYTE PTR [rcx+0x67],ah
   140033133:	(bad)  
   140033134:	imul   ebp,DWORD PTR [rsi+0x0],0x6f726300
   14003313b:	jae    0x1400331b0
   14003313d:	and    BYTE PTR [rbp+riz*2+0x76],ah
   140033141:	imul   esp,DWORD PTR [rbx+0x65],0x6e696c20
   140033148:	imul   eax,DWORD PTR [rax],0x0
   14003314b:	add    BYTE PTR [rax],al
   14003314d:	add    BYTE PTR [rax],al
   14003314f:	add    BYTE PTR [rdi+0x70],ch
   140033152:	gs jb  0x1400331b6
   140033155:	je     0x1400331c0
   140033157:	outs   dx,DWORD PTR ds:[rsi]
   140033158:	outs   dx,BYTE PTR ds:[rsi]
   140033159:	and    BYTE PTR [rbx+0x61],ah
   14003315c:	outs   dx,BYTE PTR ds:[rsi]
   14003315d:	movsxd esp,DWORD PTR [rbp+0x6c]
   140033160:	gs add BYTE PTR fs:[rax],al
   140033164:	add    BYTE PTR [rax],al
   140033166:	add    BYTE PTR [rax],al
   140033168:	je     0x1400331d9
   14003316a:	outs   dx,DWORD PTR ds:[rsi]
   14003316b:	and    BYTE PTR [rbp+0x61],ch
   14003316e:	outs   dx,BYTE PTR ds:[rsi]
   14003316f:	jns    0x140033191
   140033171:	imul   bp,WORD PTR [rbp+riz*2+0x73],0x6f20
   140033178:	jo     0x1400331df
   14003317a:	outs   dx,BYTE PTR ds:[rsi]
   14003317b:	add    BYTE PTR [rax],al
   14003317d:	add    BYTE PTR [rax],al
   14003317f:	add    BYTE PTR [rax+0x65],dh
   140033182:	jb     0x1400331f1
   140033184:	imul   esi,DWORD PTR [rbx+0x73],0x5f6e6f69
   14003318b:	fs outs dx,BYTE PTR gs:[rsi]
   14003318e:	imul   esp,DWORD PTR [rbp+0x64],0x0
   140033195:	add    BYTE PTR [rax],al
   140033197:	add    BYTE PTR [rcx+0x64],ah
   14003319a:	fs jb  0x140033202
   14003319d:	jae    0x140033212
   14003319f:	pop    rdi
   1400331a0:	imul   ebp,DWORD PTR [rsi+0x5f],0x657375
   1400331a7:	add    BYTE PTR [rcx+0x64],ah
   1400331aa:	fs jb  0x140033212
   1400331ad:	jae    0x140033222
   1400331af:	pop    rdi
   1400331b0:	outs   dx,BYTE PTR ds:[rsi]
   1400331b1:	outs   dx,DWORD PTR ds:[rsi]
   1400331b2:	je     0x140033213
   1400331b4:	(bad)  
   1400331b5:	jbe    0x140033218
   1400331b7:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x656c
   1400331bf:	add    BYTE PTR [rcx+0x64],ah
   1400331c2:	fs jb  0x14003322a
   1400331c5:	jae    0x14003323a
   1400331c7:	pop    rdi
   1400331c8:	data16 (bad) 
   1400331ca:	ins    DWORD PTR es:[rdi],dx
   1400331cb:	imul   ebp,DWORD PTR [rcx+rdi*2+0x5f],0x5f746f6e
   1400331d3:	jae    0x14003324a
   1400331d5:	jo     0x140033247
   1400331d7:	outs   dx,DWORD PTR ds:[rsi]
   1400331d8:	jb     0x14003324e
   1400331da:	gs add BYTE PTR fs:[rax],al
   1400331de:	add    BYTE PTR [rax],al
   1400331e0:	movsxd ebp,DWORD PTR [rdi+0x6e]
   1400331e3:	outs   dx,BYTE PTR ds:[rsi]
   1400331e4:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400331e9:	outs   dx,BYTE PTR ds:[rsi]
   1400331ea:	pop    rdi
   1400331eb:	(bad)  
   1400331ec:	ins    BYTE PTR es:[rdi],dx
   1400331ed:	jb     0x140033254
   1400331ef:	(bad)  
   1400331f0:	fs jns 0x140033252
   1400331f3:	imul   ebp,DWORD PTR [rsi+0x5f],0x676f7270
   1400331fa:	jb     0x140033261
   1400331fc:	jae    0x140033271
   1400331fe:	add    BYTE PTR [rax],al
   140033200:	(bad)
   140033205:	imul   ebp,DWORD PTR [rbp+riz*2+0x5f],0x63736564
   14003320d:	jb     0x140033278
   14003320f:	jo     0x140033285
   140033211:	outs   dx,DWORD PTR ds:[rsi]
   140033212:	jb     0x140033214
   140033214:	add    BYTE PTR [rax],al
   140033216:	add    BYTE PTR [rax],al
   140033218:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14003321b:	outs   dx,BYTE PTR ds:[rsi]
   14003321c:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140033221:	outs   dx,BYTE PTR ds:[rsi]
   140033222:	pop    rdi
   140033223:	(bad)  
   140033224:	(bad)  
   140033225:	outs   dx,DWORD PTR ds:[rsi]
   140033226:	jb     0x14003329c
   140033228:	gs add BYTE PTR fs:[rax],al
   14003322c:	add    BYTE PTR [rax],al
   14003322e:	add    BYTE PTR [rax],al
   140033230:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140033233:	outs   dx,BYTE PTR ds:[rsi]
   140033234:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140033239:	outs   dx,BYTE PTR ds:[rsi]
   14003323a:	pop    rdi
   14003323b:	jb     0x1400332a2
   14003323d:	data16 jne 0x1400332b3
   140033240:	gs add BYTE PTR fs:[rax],al
   140033244:	add    BYTE PTR [rax],al
   140033246:	add    BYTE PTR [rax],al
   140033248:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14003324b:	outs   dx,BYTE PTR ds:[rsi]
   14003324c:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140033251:	outs   dx,BYTE PTR ds:[rsi]
   140033252:	pop    rdi
   140033253:	jb     0x1400332ba
   140033255:	jae    0x1400332bc
   140033257:	je     0x140033259
   140033259:	add    BYTE PTR [rax],al
   14003325b:	add    BYTE PTR [rax],al
   14003325d:	add    BYTE PTR [rax],al
   14003325f:	add    BYTE PTR [rbp+riz*2+0x73],ah
   140033263:	je     0x1400332ce
   140033265:	outs   dx,BYTE PTR ds:[rsi]
   140033266:	(bad)  
   140033267:	je     0x1400332d2
   140033269:	outs   dx,DWORD PTR ds:[rsi]
   14003326a:	outs   dx,BYTE PTR ds:[rsi]
   14003326b:	pop    rdi
   14003326c:	(bad)  
   14003326d:	fs fs jb 0x1400332d6
   140033271:	jae    0x1400332e6
   140033273:	pop    rdi
   140033274:	jb     0x1400332db
   140033276:	jno    0x1400332ed
   140033278:	imul   esi,DWORD PTR [rdx+0x65],0x64
   14003327f:	add    BYTE PTR [rdx+0x61],ah
   140033282:	fs pop rdi
   140033284:	(bad)  
   140033285:	fs fs jb 0x1400332ee
   140033289:	jae    0x1400332fe
   14003328b:	add    BYTE PTR [rax],al
   14003328d:	add    BYTE PTR [rax],al
   14003328f:	add    BYTE PTR [rax+0x6f],ch
   140033292:	jae    0x140033308
   140033294:	pop    rdi
   140033295:	jne    0x140033305
   140033297:	jb     0x1400332fe
   140033299:	(bad)  
   14003329a:	movsxd ebp,DWORD PTR [rax+0x61]
   14003329d:	(bad)  
   14003329e:	ins    BYTE PTR es:[rdi],dx
   14003329f:	add    BYTE PTR gs:[rax],al
   1400332a2:	add    BYTE PTR [rax],al
   1400332a4:	add    BYTE PTR [rax],al
   1400332a6:	add    BYTE PTR [rax],al
   1400332a8:	outs   dx,DWORD PTR ds:[rsi]
   1400332a9:	jo     0x140033310
   1400332ab:	jb     0x14003330e
   1400332ad:	je     0x140033318
   1400332af:	outs   dx,DWORD PTR ds:[rsi]
   1400332b0:	outs   dx,BYTE PTR ds:[rsi]
   1400332b1:	pop    rdi
   1400332b2:	imul   ebp,DWORD PTR [rsi+0x5f],0x676f7270
   1400332b9:	jb     0x140033320
   1400332bb:	jae    0x140033330
   1400332bd:	add    BYTE PTR [rax],al
   1400332bf:	add    BYTE PTR [rcx+0x6e],ch
   1400332c2:	je     0x140033329
   1400332c4:	jb     0x140033338
   1400332c6:	jne    0x140033338
   1400332c8:	je     0x14003332f
   1400332ca:	add    BYTE PTR fs:[rax],al
   1400332cd:	add    BYTE PTR [rax],al
   1400332cf:	add    BYTE PTR [rcx+0x6e],ch
   1400332d2:	jbe    0x140033335
   1400332d4:	ins    BYTE PTR es:[rdi],dx
   1400332d5:	imul   esp,DWORD PTR [rdi+rbx*2+0x61],0x6d756772
   1400332dd:	outs   dx,BYTE PTR gs:[rsi]
   1400332df:	je     0x1400332e1
   1400332e1:	add    BYTE PTR [rax],al
   1400332e3:	add    BYTE PTR [rax],al
   1400332e5:	add    BYTE PTR [rax],al
   1400332e7:	add    BYTE PTR [rcx+0x6c],ah
   1400332ea:	jb     0x140033351
   1400332ec:	(bad)  
   1400332ed:	fs jns 0x14003334f
   1400332f0:	movsxd ebp,DWORD PTR [rdi+0x6e]
   1400332f3:	outs   dx,BYTE PTR ds:[rsi]
   1400332f4:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   1400332f9:	add    BYTE PTR [rax],al
   1400332fb:	add    BYTE PTR [rax],al
   1400332fd:	add    BYTE PTR [rax],al
   1400332ff:	add    BYTE PTR [rdi+rbp*2+0x6f],dh
   140033303:	pop    rdi
   140033304:	ins    DWORD PTR es:[rdi],dx
   140033305:	(bad)  
   140033306:	outs   dx,BYTE PTR ds:[rsi]
   140033307:	jns    0x140033368
   140033309:	imul   bp,WORD PTR [rbp+riz*2+0x73],0x6f5f
   140033310:	jo     0x140033377
   140033312:	outs   dx,BYTE PTR ds:[rsi]
   140033313:	add    BYTE PTR [rax],al
   140033315:	add    BYTE PTR [rax],al
   140033317:	add    BYTE PTR [rbp+0x65],ch
   14003331a:	jae    0x14003338f
   14003331c:	(bad)  
   14003331d:	addr32 gs pop rdi
   140033320:	jae    0x14003338b
   140033322:	jp     0x140033389
   140033324:	add    BYTE PTR [rax],al
   140033326:	add    BYTE PTR [rax],al
   140033328:	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6d61
   14003332f:	gs pop rdi
   140033331:	je     0x1400333a2
   140033333:	outs   dx,DWORD PTR ds:[rsi]
   140033334:	pop    rdi
   140033335:	ins    BYTE PTR es:[rdi],dx
   140033336:	outs   dx,DWORD PTR ds:[rsi]
   140033337:	outs   dx,BYTE PTR ds:[rsi]
   140033338:	add    BYTE PTR [eax],al
   14003333b:	add    BYTE PTR [rax],al
   14003333d:	add    BYTE PTR [rax],al
   14003333f:	add    BYTE PTR [rsi+0x65],ch
   140033342:	je     0x1400333bb
   140033344:	outs   dx,DWORD PTR ds:[rsi]
   140033345:	jb     0x1400333b2
   140033347:	pop    rdi
   140033348:	outs   dx,DWORD PTR fs:[rsi]
   14003334a:	ja     0x1400333ba
   14003334c:	add    BYTE PTR [rax],al
   14003334e:	add    BYTE PTR [rax],al
   140033350:	outs   dx,BYTE PTR ds:[rsi]
   140033351:	gs je  0x1400333cb
   140033354:	outs   dx,DWORD PTR ds:[rsi]
   140033355:	jb     0x1400333c2
   140033357:	pop    rdi
   140033358:	jb     0x1400333bf
   14003335a:	jae    0x1400333c1
   14003335c:	je     0x14003335e
   14003335e:	add    BYTE PTR [rax],al
   140033360:	outs   dx,BYTE PTR ds:[rsi]
   140033361:	gs je  0x1400333db
   140033364:	outs   dx,DWORD PTR ds:[rsi]
   140033365:	jb     0x1400333d2
   140033367:	pop    rdi
   140033368:	jne    0x1400333d8
   14003336a:	jb     0x1400333d1
   14003336c:	(bad)  
   14003336d:	movsxd ebp,DWORD PTR [rax+0x61]
   140033370:	(bad)  
   140033371:	ins    BYTE PTR es:[rdi],dx
   140033372:	add    BYTE PTR gs:[rax],al
   140033375:	add    BYTE PTR [rax],al
   140033377:	add    BYTE PTR [rsi+0x6f],ch
   14003337a:	pop    rdi
   14003337b:	(bad)  
   14003337c:	jne    0x1400333e4
   14003337e:	data16 gs jb 0x1400333e1
   140033382:	jae    0x1400333f4
   140033384:	(bad)  
   140033385:	movsxd esp,DWORD PTR [rbp+0x0]
   140033388:	outs   dx,BYTE PTR ds:[rsi]
   140033389:	outs   dx,DWORD PTR ds:[rsi]
   14003338a:	pop    rdi
   14003338b:	jo     0x1400333ff
   14003338d:	outs   dx,DWORD PTR ds:[rsi]
   14003338e:	je     0x1400333ff
   140033390:	movsxd ebp,DWORD PTR [rdi+0x6c]
   140033393:	pop    rdi
   140033394:	outs   dx,DWORD PTR ds:[rsi]
   140033395:	jo     0x14003340b
   140033397:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
   14003339e:	add    BYTE PTR [rax],al
   1400333a0:	outs   dx,BYTE PTR ds:[rsi]
   1400333a1:	outs   dx,DWORD PTR ds:[rsi]
   1400333a2:	je     0x140033403
   1400333a4:	movsxd ebp,DWORD PTR [rdi+0x6e]
   1400333a7:	outs   dx,BYTE PTR ds:[rsi]
   1400333a8:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   1400333ad:	add    BYTE PTR [rax],al
   1400333af:	add    BYTE PTR [rsi+0x6f],ch
   1400333b2:	je     0x140033413
   1400333b4:	(bad)  
   1400333b5:	pop    rdi
   1400333b6:	jae    0x140033427
   1400333b8:	movsxd ebp,DWORD PTR [rbx+0x65]
   1400333bb:	je     0x1400333bd
   1400333bd:	add    BYTE PTR [rax],al
   1400333bf:	add    BYTE PTR [rdi+0x70],ch
   1400333c2:	gs jb  0x140033426
   1400333c5:	je     0x140033430
   1400333c7:	outs   dx,DWORD PTR ds:[rsi]
   1400333c8:	outs   dx,BYTE PTR ds:[rsi]
   1400333c9:	pop    rdi
   1400333ca:	outs   dx,BYTE PTR ds:[rsi]
   1400333cb:	outs   dx,DWORD PTR ds:[rsi]
   1400333cc:	je     0x14003342d
   1400333ce:	jae    0x140033445
   1400333d0:	jo     0x140033442
   1400333d2:	outs   dx,DWORD PTR ds:[rsi]
   1400333d3:	jb     0x140033449
   1400333d5:	gs add BYTE PTR fs:[rax+0x72],dh
   1400333da:	outs   dx,DWORD PTR ds:[rsi]
   1400333db:	je     0x14003344c
   1400333dd:	movsxd ebp,DWORD PTR [rdi+0x6c]
   1400333e0:	pop    rdi
   1400333e1:	outs   dx,BYTE PTR ds:[rsi]
   1400333e2:	outs   dx,DWORD PTR ds:[rsi]
   1400333e3:	je     0x140033444
   1400333e5:	jae    0x14003345c
   1400333e7:	jo     0x140033459
   1400333e9:	outs   dx,DWORD PTR ds:[rsi]
   1400333ea:	jb     0x140033460
   1400333ec:	gs add BYTE PTR fs:[rax],al
   1400333f0:	ja     0x140033464
   1400333f2:	outs   dx,DWORD PTR ds:[rsi]
   1400333f3:	outs   dx,BYTE PTR ds:[rsi]
   1400333f4:	addr32 pop rdi
   1400333f6:	jo     0x14003346a
   1400333f8:	outs   dx,DWORD PTR ds:[rsi]
   1400333f9:	je     0x14003346a
   1400333fb:	movsxd ebp,DWORD PTR [rdi+0x6c]
   1400333fe:	pop    rdi
   1400333ff:	je     0x14003347a
   140033401:	jo     0x140033468
   140033403:	add    BYTE PTR [rax],al
   140033405:	add    BYTE PTR [rax],al
   140033407:	add    BYTE PTR [rcx+rbp*2+0x6d],dh
   14003340b:	gs fs pop rdi
   14003340e:	outs   dx,DWORD PTR ds:[rsi]
   14003340f:	jne    0x140033485
   140033411:	add    BYTE PTR [rax],al
   140033413:	add    BYTE PTR [rax],al
   140033415:	add    BYTE PTR [rax],al
   140033417:	add    BYTE PTR [rdi+0x70],ch
   14003341a:	gs jb  0x14003347e
   14003341d:	je     0x140033488
   14003341f:	outs   dx,DWORD PTR ds:[rsi]
   140033420:	outs   dx,BYTE PTR ds:[rsi]
   140033421:	pop    rdi
   140033422:	ja     0x140033493
   140033424:	jne    0x140033492
   140033426:	fs pop rdi
   140033428:	(bad)  
   140033429:	ins    BYTE PTR es:[rdi],dx
   14003342a:	outs   dx,DWORD PTR ds:[rsi]
   14003342b:	movsxd ebp,DWORD PTR [rbx+0x0]
   14003342e:	add    BYTE PTR [rax],al
   140033430:	data16 add BYTE PTR [rax],al
   140033433:	add    BYTE PTR [rax],al
   140033435:	add    BYTE PTR [rax],al
   140033437:	add    BYTE PTR [rax],ah
   140033439:	cmp    DWORD PTR [rbx],eax
   14003343b:	rex add DWORD PTR [rax],eax
   14003343e:	add    BYTE PTR [rax],al
   140033440:	add    BYTE PTR fs:[rax],al
   140033443:	add    BYTE PTR [rax],al
   140033445:	add    BYTE PTR [rax],al
   140033447:	add    BYTE PTR [rax+0x39],al
   14003344a:	add    eax,DWORD PTR [rax+0x1]
   14003344d:	add    BYTE PTR [rax],al
   14003344f:	add    BYTE PTR [rbp+0x0],ah
   140033452:	add    BYTE PTR [rax],al
   140033454:	add    BYTE PTR [rax],al
   140033456:	add    BYTE PTR [rax],al
   140033458:	push   rax
   140033459:	cmp    DWORD PTR [rbx],eax
   14003345b:	rex add DWORD PTR [rax],eax
   14003345e:	add    BYTE PTR [rax],al
   140033460:	jno    0x140033462
   140033462:	add    BYTE PTR [rax],al
   140033464:	add    BYTE PTR [rax],al
   140033466:	add    BYTE PTR [rax],al
   140033468:	push   0x1400339
   14003346d:	add    BYTE PTR [rax],al
   14003346f:	add    BYTE PTR [rdi],al
   140033471:	add    BYTE PTR [rax],al
   140033473:	add    BYTE PTR [rax],al
   140033475:	add    BYTE PTR [rax],al
   140033477:	add    BYTE PTR [rax+0x1400339],al
   14003347d:	add    BYTE PTR [rax],al
   14003347f:	add    BYTE PTR [rcx],ah
   140033481:	add    BYTE PTR [rax],al
   140033483:	add    BYTE PTR [rax],al
   140033485:	add    BYTE PTR [rax],al
   140033487:	add    BYTE PTR [rax+0x1400339],bl
   14003348d:	add    BYTE PTR [rax],al
   14003348f:	add    BYTE PTR [rsi],cl
   140033491:	add    BYTE PTR [rax],al
   140033493:	add    BYTE PTR [rax],al
   140033495:	add    BYTE PTR [rax],al
   140033497:	add    BYTE PTR [rax+0x1400339],dh
   14003349d:	add    BYTE PTR [rax],al
   14003349f:	add    BYTE PTR [rcx],cl
   1400334a1:	add    BYTE PTR [rax],al
   1400334a3:	add    BYTE PTR [rax],al
   1400334a5:	add    BYTE PTR [rax],al
   1400334a7:	add    al,al
   1400334a9:	cmp    DWORD PTR [rbx],eax
   1400334ab:	rex add DWORD PTR [rax],eax
   1400334ae:	add    BYTE PTR [rax],al
   1400334b0:	push   0x0
   1400334b5:	add    BYTE PTR [rax],al
   1400334b7:	add    al,bl
   1400334b9:	cmp    DWORD PTR [rbx],eax
   1400334bb:	rex add DWORD PTR [rax],eax
   1400334be:	add    BYTE PTR [rax],al
   1400334c0:	and    BYTE PTR [rax],al
   1400334c2:	add    BYTE PTR [rax],al
   1400334c4:	add    BYTE PTR [rax],al
   1400334c6:	add    BYTE PTR [rax],al
   1400334c8:	call   0x141433806
   1400334cd:	add    BYTE PTR [rax],al
   1400334cf:	add    BYTE PTR [rdx+0x0],ch
   1400334d2:	add    BYTE PTR [rax],al
   1400334d4:	add    BYTE PTR [rax],al
   1400334d6:	add    BYTE PTR [rax],al
   1400334d8:	clc    
   1400334d9:	cmp    DWORD PTR [rbx],eax
   1400334db:	rex add DWORD PTR [rax],eax
   1400334de:	add    BYTE PTR [rax],al
   1400334e0:	add    BYTE PTR [eax],al
   1400334e3:	add    BYTE PTR [rax],al
   1400334e5:	add    BYTE PTR [rax],al
   1400334e7:	add    BYTE PTR [rax],dl
   1400334e9:	cmp    al,BYTE PTR [rbx]
   1400334eb:	rex add DWORD PTR [rax],eax
   1400334ee:	add    BYTE PTR [rax],al
   1400334f0:	imul   eax,DWORD PTR [rax],0x0
   1400334f3:	add    BYTE PTR [rax],al
   1400334f5:	add    BYTE PTR [rax],al
   1400334f7:	add    BYTE PTR [rax],dh
   1400334f9:	cmp    al,BYTE PTR [rbx]
   1400334fb:	rex add DWORD PTR [rax],eax
   1400334fe:	add    BYTE PTR [rax],al
   140033500:	ins    BYTE PTR es:[rdi],dx
   140033501:	add    BYTE PTR [rax],al
   140033503:	add    BYTE PTR [rax],al
   140033505:	add    BYTE PTR [rax],al
   140033507:	add    BYTE PTR [rax+0x3a],cl
   14003350a:	add    eax,DWORD PTR [rax+0x1]
   14003350d:	add    BYTE PTR [rax],al
   14003350f:	add    BYTE PTR [rdx],dl
   140033511:	add    BYTE PTR [rax],al
   140033513:	add    BYTE PTR [rax],al
   140033515:	add    BYTE PTR [rax],al
   140033517:	add    BYTE PTR [rax],bh
   140033519:	xor    DWORD PTR [rbx],eax
   14003351b:	rex add DWORD PTR [rax],eax
   14003351e:	add    BYTE PTR [rax],al
   140033520:	ins    DWORD PTR es:[rdi],dx
   140033521:	add    BYTE PTR [rax],al
   140033523:	add    BYTE PTR [rax],al
   140033525:	add    BYTE PTR [rax],al
   140033527:	add    BYTE PTR [rax+0x3a],ah
   14003352a:	add    eax,DWORD PTR [rax+0x1]
   14003352d:	add    BYTE PTR [rax],al
   14003352f:	add    BYTE PTR [rax],dl
   140033531:	add    BYTE PTR [rax],al
   140033533:	add    BYTE PTR [rax],al
   140033535:	add    BYTE PTR [rax],al
   140033537:	add    BYTE PTR [rax+0x30],al
   14003353a:	add    eax,DWORD PTR [rax+0x1]
   14003353d:	add    BYTE PTR [rax],al
   14003353f:	add    BYTE PTR [rcx],ch
   140033541:	add    BYTE PTR [rax],al
   140033543:	add    BYTE PTR [rax],al
   140033545:	add    BYTE PTR [rax],al
   140033547:	add    BYTE PTR [rax+0x30],ch
   14003354a:	add    eax,DWORD PTR [rax+0x1]
   14003354d:	add    BYTE PTR [rax],al
   14003354f:	add    BYTE PTR [rax],cl
   140033551:	add    BYTE PTR [rax],al
   140033553:	add    BYTE PTR [rax],al
   140033555:	add    BYTE PTR [rax],al
   140033557:	add    BYTE PTR [rax+0x140033a],al
   14003355d:	add    BYTE PTR [rax],al
   14003355f:	add    BYTE PTR [rcx],dl
   140033561:	add    BYTE PTR [rax],al
   140033563:	add    BYTE PTR [rax],al
   140033565:	add    BYTE PTR [rax],al
   140033567:	add    BYTE PTR [rax],cl
   140033569:	xor    BYTE PTR [rbx],al
   14003356b:	rex add DWORD PTR [rax],eax
   14003356e:	add    BYTE PTR [rax],al
   140033570:	sbb    eax,DWORD PTR [rax]
   140033572:	add    BYTE PTR [rax],al
   140033574:	add    BYTE PTR [rax],al
   140033576:	add    BYTE PTR [rax],al
   140033578:	cwde   
   140033579:	cmp    al,BYTE PTR [rbx]
   14003357b:	rex add DWORD PTR [rax],eax
   14003357e:	add    BYTE PTR [rax],al
   140033580:	add    BYTE PTR es:[rax],al
   140033583:	add    BYTE PTR [rax],al
   140033585:	add    BYTE PTR [rax],al
   140033587:	add    BYTE PTR [rax],ch
   140033589:	xor    BYTE PTR [rbx],al
   14003358b:	rex add DWORD PTR [rax],eax
   14003358e:	add    BYTE PTR [rax],al
   140033590:	sub    BYTE PTR [rax],al
   140033592:	add    BYTE PTR [rax],al
   140033594:	add    BYTE PTR [rax],al
   140033596:	add    BYTE PTR [rax],al
   140033598:	shl    BYTE PTR [rax],1
   14003359a:	add    eax,DWORD PTR [rax+0x1]
   14003359d:	add    BYTE PTR [rax],al
   14003359f:	add    BYTE PTR [rsi+0x0],ch
   1400335a2:	add    BYTE PTR [rax],al
   1400335a4:	add    BYTE PTR [rax],al
   1400335a6:	add    BYTE PTR [rax],al
   1400335a8:	test   al,0x3a
   1400335aa:	add    eax,DWORD PTR [rax+0x1]
   1400335ad:	add    BYTE PTR [rax],al
   1400335af:	add    BYTE PTR [rdi+0x0],ch
   1400335b2:	add    BYTE PTR [rax],al
   1400335b4:	add    BYTE PTR [rax],al
   1400335b6:	add    BYTE PTR [rax],al
   1400335b8:	sar    BYTE PTR [rdx],0x3
   1400335bb:	rex add DWORD PTR [rax],eax
   1400335be:	add    BYTE PTR [rax],al
   1400335c0:	sub    al,BYTE PTR [rax]
   1400335c2:	add    BYTE PTR [rax],al
   1400335c4:	add    BYTE PTR [rax],al
   1400335c6:	add    BYTE PTR [rax],al
   1400335c8:	fdivr  DWORD PTR [rdx]
   1400335ca:	add    eax,DWORD PTR [rax+0x1]
   1400335cd:	add    BYTE PTR [rax],al
   1400335cf:	add    BYTE PTR [rcx],bl
   1400335d1:	add    BYTE PTR [rax],al
   1400335d3:	add    BYTE PTR [rax],al
   1400335d5:	add    BYTE PTR [rax],al
   1400335d7:	add    al,dh
   1400335d9:	cmp    al,BYTE PTR [rbx]
   1400335db:	rex add DWORD PTR [rax],eax
   1400335de:	add    BYTE PTR [rax],al
   1400335e0:	add    al,0x0
   1400335e2:	add    BYTE PTR [rax],al
   1400335e4:	add    BYTE PTR [rax],al
   1400335e6:	add    BYTE PTR [rax],al
   1400335e8:	shl    BYTE PTR [rdx],0x3
   1400335eb:	rex add DWORD PTR [rax],eax
   1400335ee:	add    BYTE PTR [rax],al
   1400335f0:	(bad)  
   1400335f1:	add    BYTE PTR [rax],al
   1400335f3:	add    BYTE PTR [rax],al
   1400335f5:	add    BYTE PTR [rax],al
   1400335f7:	add    BYTE PTR [rax+0x1400330],al
   1400335fd:	add    BYTE PTR [rax],al
   1400335ff:	add    BYTE PTR [rip+0x0],bl        # 0x140033605
   140033605:	add    BYTE PTR [rax],al
   140033607:	add    BYTE PTR [rax],bl
   140033609:	cmp    eax,DWORD PTR [rbx]
   14003360b:	rex add DWORD PTR [rax],eax
   14003360e:	add    BYTE PTR [rax],al
   140033610:	add    eax,0x0
   140033615:	add    BYTE PTR [rax],al
   140033617:	add    BYTE PTR [rax+0x30],bl
   14003361a:	add    eax,DWORD PTR [rax+0x1]
   14003361d:	add    BYTE PTR [rax],al
   14003361f:	add    BYTE PTR [rip+0x0],dl        # 0x140033625
   140033625:	add    BYTE PTR [rax],al
   140033627:	add    BYTE PTR [rax],ch
   140033629:	cmp    eax,DWORD PTR [rbx]
   14003362b:	rex add DWORD PTR [rax],eax
   14003362e:	add    BYTE PTR [rax],al
   140033630:	jae    0x140033632
   140033632:	add    BYTE PTR [rax],al
   140033634:	add    BYTE PTR [rax],al
   140033636:	add    BYTE PTR [rax],al
   140033638:	cmp    BYTE PTR [rbx],bh
   14003363a:	add    eax,DWORD PTR [rax+0x1]
   14003363d:	add    BYTE PTR [rax],al
   14003363f:	add    BYTE PTR [rax+rax*1+0x0],dh
   140033643:	add    BYTE PTR [rax],al
   140033645:	add    BYTE PTR [rax],al
   140033647:	add    BYTE PTR [rax+0x3b],cl
   14003364a:	add    eax,DWORD PTR [rax+0x1]
   14003364d:	add    BYTE PTR [rax],al
   14003364f:	add    BYTE PTR [rbp+0x0],dh
   140033652:	add    BYTE PTR [rax],al
   140033654:	add    BYTE PTR [rax],al
   140033656:	add    BYTE PTR [rax],al
   140033658:	pop    rax
   140033659:	cmp    eax,DWORD PTR [rbx]
   14003365b:	rex add DWORD PTR [rax],eax
   14003365e:	add    BYTE PTR [rax],al
   140033660:	jbe    0x140033662
   140033662:	add    BYTE PTR [rax],al
   140033664:	add    BYTE PTR [rax],al
   140033666:	add    BYTE PTR [rax],al
   140033668:	push   0x140033b
   14003366d:	add    BYTE PTR [rax],al
   14003366f:	add    BYTE PTR [rdi+0x0],dh
   140033672:	add    BYTE PTR [rax],al
   140033674:	add    BYTE PTR [rax],al
   140033676:	add    BYTE PTR [rax],al
   140033678:	cmp    BYTE PTR [rbx],0x3
   14003367b:	rex add DWORD PTR [rax],eax
   14003367e:	add    BYTE PTR [rax],al
   140033680:	or     al,BYTE PTR [rax]
   140033682:	add    BYTE PTR [rax],al
   140033684:	add    BYTE PTR [rax],al
   140033686:	add    BYTE PTR [rax],al
   140033688:	nop
   140033689:	cmp    eax,DWORD PTR [rbx]
   14003368b:	rex add DWORD PTR [rax],eax
   14003368e:	add    BYTE PTR [rax],al
   140033690:	jns    0x140033692
   140033692:	add    BYTE PTR [rax],al
   140033694:	add    BYTE PTR [rax],al
   140033696:	add    BYTE PTR [rax],al
   140033698:	test   al,0x3b
   14003369a:	add    eax,DWORD PTR [rax+0x1]
   14003369d:	add    BYTE PTR [rax],al
   14003369f:	add    BYTE PTR [rdi],ah
   1400336a1:	add    BYTE PTR [rax],al
   1400336a3:	add    BYTE PTR [rax],al
   1400336a5:	add    BYTE PTR [rax],al
   1400336a7:	add    al,ch
   1400336a9:	xor    BYTE PTR [rbx],al
   1400336ab:	rex add DWORD PTR [rax],eax
   1400336ae:	add    BYTE PTR [rax],al
   1400336b0:	js     0x1400336b2
   1400336b2:	add    BYTE PTR [rax],al
   1400336b4:	add    BYTE PTR [rax],al
   1400336b6:	add    BYTE PTR [rax],al
   1400336b8:	mov    al,0x3b
   1400336ba:	add    eax,DWORD PTR [rax+0x1]
   1400336bd:	add    BYTE PTR [rax],al
   1400336bf:	add    BYTE PTR [rdx+0x0],bh
   1400336c2:	add    BYTE PTR [rax],al
   1400336c4:	add    BYTE PTR [rax],al
   1400336c6:	add    BYTE PTR [rax],al
   1400336c8:	enter  0x33b,0x40
   1400336cc:	add    DWORD PTR [rax],eax
   1400336ce:	add    BYTE PTR [rax],al
   1400336d0:	jnp    0x1400336d2
   1400336d2:	add    BYTE PTR [rax],al
   1400336d4:	add    BYTE PTR [rax],al
   1400336d6:	add    BYTE PTR [rax],al
   1400336d8:	fdivr  DWORD PTR [rbx]
   1400336da:	add    eax,DWORD PTR [rax+0x1]
   1400336dd:	add    BYTE PTR [rax],al
   1400336df:	add    BYTE PTR [rax+rax*1],bl
   1400336e2:	add    BYTE PTR [rax],al
   1400336e4:	add    BYTE PTR [rax],al
   1400336e6:	add    BYTE PTR [rax],al
   1400336e8:	cwde   
   1400336e9:	xor    BYTE PTR [rbx],al
   1400336eb:	rex add DWORD PTR [rax],eax
   1400336ee:	add    BYTE PTR [rax],al
   1400336f0:	jl     0x1400336f2
   1400336f2:	add    BYTE PTR [rax],al
   1400336f4:	add    BYTE PTR [rax],al
   1400336f6:	add    BYTE PTR [rax],al
   1400336f8:	lock cmp eax,DWORD PTR [rbx]
   1400336fb:	rex add DWORD PTR [rax],eax
   1400336fe:	add    BYTE PTR [rax],al
   140033700:	(bad)  
   140033701:	add    BYTE PTR [rax],al
   140033703:	add    BYTE PTR [rax],al
   140033705:	add    BYTE PTR [rax],al
   140033707:	add    BYTE PTR [rax],cl
   140033709:	cmp    al,0x3
   14003370b:	rex add DWORD PTR [rax],eax
   14003370e:	add    BYTE PTR [rax],al
   140033710:	adc    eax,DWORD PTR [rax]
   140033712:	add    BYTE PTR [rax],al
   140033714:	add    BYTE PTR [rax],al
   140033716:	add    BYTE PTR [rax],al
   140033718:	sbb    BYTE PTR [rax],dh
   14003371a:	add    eax,DWORD PTR [rax+0x1]
   14003371d:	add    BYTE PTR [rax],al
   14003371f:	add    BYTE PTR [rdx],al
   140033721:	add    BYTE PTR [rax],al
   140033723:	add    BYTE PTR [rax],al
   140033725:	add    BYTE PTR [rax],al
   140033727:	add    BYTE PTR [rax+0x1400330],dh
   14003372d:	add    BYTE PTR [rax],al
   14003372f:	add    BYTE PTR [rbx],al
   140033731:	add    BYTE PTR [rax],al
   140033733:	add    BYTE PTR [rax],al
   140033735:	add    BYTE PTR [rax],al
   140033737:	add    BYTE PTR [rax],ch
   140033739:	cmp    al,0x3
   14003373b:	rex add DWORD PTR [rax],eax
   14003373e:	add    BYTE PTR [rax],al
   140033740:	adc    al,0x0
   140033742:	add    BYTE PTR [rax],al
   140033744:	add    BYTE PTR [rax],al
   140033746:	add    BYTE PTR [rax],al
   140033748:	cmp    BYTE PTR [rbx+rax*1],bh
   14003374b:	rex add DWORD PTR [rax],eax
   14003374e:	add    BYTE PTR [rax],al
   140033750:	add    BYTE PTR [rax],0x0
   140033753:	add    BYTE PTR [rax],al
   140033755:	add    BYTE PTR [rax],al
   140033757:	add    BYTE PTR [rax+0x3c],cl
   14003375a:	add    eax,DWORD PTR [rax+0x1]
   14003375d:	add    BYTE PTR [rax],al
   14003375f:	add    BYTE PTR [rbp+0x0],bh
   140033762:	add    BYTE PTR [rax],al
   140033764:	add    BYTE PTR [rax],al
   140033766:	add    BYTE PTR [rax],al
   140033768:	pop    rax
   140033769:	cmp    al,0x3
   14003376b:	rex add DWORD PTR [rax],eax
   14003376e:	add    BYTE PTR [rax],al
   140033770:	jle    0x140033772
   140033772:	add    BYTE PTR [rax],al
   140033774:	add    BYTE PTR [rax],al
   140033776:	add    BYTE PTR [rax],al
   140033778:	push   0x140033c
   14003377d:	add    BYTE PTR [rax],al
   14003377f:	add    BYTE PTR [rax+rax*1],cl
   140033782:	add    BYTE PTR [rax],al
   140033784:	add    BYTE PTR [rax],al
   140033786:	add    BYTE PTR [rax],al
   140033788:	add    BYTE PTR [rcx],dh
   14003378a:	add    eax,DWORD PTR [rax+0x1]
   14003378d:	add    BYTE PTR [rax],al
   14003378f:	add    BYTE PTR [rcx+0x0],al
   140033795:	add    BYTE PTR [rax],al
   140033797:	add    BYTE PTR [rax+0x3c],bh
   14003379a:	add    eax,DWORD PTR [rax+0x1]
   14003379d:	add    BYTE PTR [rax],al
   14003379f:	add    BYTE PTR [rcx+0x0],ch
   1400337a2:	add    BYTE PTR [rax],al
   1400337a4:	add    BYTE PTR [rax],al
   1400337a6:	add    BYTE PTR [rax],al
   1400337a8:	push   rax
   1400337a9:	xor    DWORD PTR [rbx],eax
   1400337ab:	rex add DWORD PTR [rax],eax
   1400337ae:	add    BYTE PTR [rax],al
   1400337b0:	jo     0x1400337b2
   1400337b2:	add    BYTE PTR [rax],al
   1400337b4:	add    BYTE PTR [rax],al
   1400337b6:	add    BYTE PTR [rax],al
   1400337b8:	mov    BYTE PTR [rbx+rax*1],bh
   1400337bb:	rex add DWORD PTR [rax],eax
   1400337be:	add    BYTE PTR [rax],al
   1400337c0:	add    DWORD PTR [rax],eax
   1400337c2:	add    BYTE PTR [rax],al
   1400337c4:	add    BYTE PTR [rax],al
   1400337c6:	add    BYTE PTR [rax],al
   1400337c8:	movabs al,ds:0x820000000140033c
   1400337d1:	add    BYTE PTR [rax],al
   1400337d3:	add    BYTE PTR [rax],al
   1400337d5:	add    BYTE PTR [rax],al
   1400337d7:	add    BYTE PTR [rax+0x140033c],bh
   1400337dd:	add    BYTE PTR [rax],al
   1400337df:	add    BYTE PTR [rax+rax*1+0x0],cl
   1400337e6:	add    BYTE PTR [rax],al
   1400337e8:	sar    BYTE PTR [rbx+rax*1],1
   1400337eb:	rex add DWORD PTR [rax],eax
   1400337ee:	add    BYTE PTR [rax],al
   1400337f0:	test   DWORD PTR [rax],eax
   1400337f2:	add    BYTE PTR [rax],al
   1400337f4:	add    BYTE PTR [rax],al
   1400337f6:	add    BYTE PTR [rax],al
   1400337f8:	call   0x141433b39
   1400337fd:	add    BYTE PTR [rax],al
   1400337ff:	add    BYTE PTR [rip+0x0],cl        # 0x140033805
   140033805:	add    BYTE PTR [rax],al
   140033807:	add    al,dh
   140033809:	(bad)  
   14003380a:	add    eax,DWORD PTR [rax+0x1]
   14003380d:	add    BYTE PTR [rax],al
   14003380f:	add    BYTE PTR [rsi+0x0],al
   140033815:	add    BYTE PTR [rax],al
   140033817:	add    al,bh
   140033819:	cmp    al,0x3
   14003381b:	rex add DWORD PTR [rax],eax
   14003381e:	add    BYTE PTR [rax],al
   140033820:	xchg   DWORD PTR [rax],eax
   140033822:	add    BYTE PTR [rax],al
   140033824:	add    BYTE PTR [rax],al
   140033826:	add    BYTE PTR [rax],al
   140033828:	or     BYTE PTR [rip+0x14003],bh        # 0x140047831
   14003382e:	add    BYTE PTR [rax],al
   140033830:	(bad)  
   140033831:	add    BYTE PTR [rax],al
   140033833:	add    BYTE PTR [rax],al
   140033835:	add    BYTE PTR [rax],al
   140033837:	add    BYTE PTR [rax],ah
   140033839:	cmp    eax,0x14003
   14003383e:	add    BYTE PTR [rax],al
   140033840:	and    al,0x0
   140033842:	add    BYTE PTR [rax],al
   140033844:	add    BYTE PTR [rax],al
   140033846:	add    BYTE PTR [rax],al
   140033848:	cmp    BYTE PTR [rip+0x14003],bh        # 0x140047851
   14003384e:	add    BYTE PTR [rax],al
   140033850:	or     eax,DWORD PTR [rax]
   140033852:	add    BYTE PTR [rax],al
   140033854:	add    BYTE PTR [rax],al
   140033856:	add    BYTE PTR [rax],al
   140033858:	sbb    BYTE PTR [rcx],dh
   14003385a:	add    eax,DWORD PTR [rax+0x1]
   14003385d:	add    BYTE PTR [rax],al
   14003385f:	add    BYTE PTR [rdx],ah
   140033861:	add    BYTE PTR [rax],al
   140033863:	add    BYTE PTR [rax],al
   140033865:	add    BYTE PTR [rax],al
   140033867:	add    BYTE PTR [rax+0x3d],bl
   14003386a:	add    eax,DWORD PTR [rax+0x1]
   14003386d:	add    BYTE PTR [rax],al
   14003386f:	add    BYTE PTR [rdi+0x0],bh
   140033872:	add    BYTE PTR [rax],al
   140033874:	add    BYTE PTR [rax],al
   140033876:	add    BYTE PTR [rax],al
   140033878:	jo     0x1400338b7
   14003387a:	add    eax,DWORD PTR [rax+0x1]
   14003387d:	add    BYTE PTR [rax],al
   14003387f:	add    BYTE PTR [rcx+0x0],cl
   140033885:	add    BYTE PTR [rax],al
   140033887:	add    BYTE PTR [rax+0x140033d],cl
   14003388d:	add    BYTE PTR [rax],al
   14003388f:	add    BYTE PTR [rbx+0x0],cl
   140033895:	add    BYTE PTR [rax],al
   140033897:	add    BYTE PTR [rax+0x140033d],bl
   14003389d:	add    BYTE PTR [rax],al
   14003389f:	add    BYTE PTR [rdx+0x0],cl
   1400338a5:	add    BYTE PTR [rax],al
   1400338a7:	add    BYTE PTR [rax+0x140033d],ch
   1400338ad:	add    BYTE PTR [rax],al
   1400338af:	add    BYTE PTR [rdi],dl
   1400338b1:	add    BYTE PTR [rax],al
   1400338b3:	add    BYTE PTR [rax],al
   1400338b5:	add    BYTE PTR [rax],al
   1400338b7:	add    BYTE PTR [rax+0x140033d],bh
   1400338bd:	add    BYTE PTR [rax],al
   1400338bf:	add    BYTE PTR [rax],bl
   1400338c1:	add    BYTE PTR [rax],al
   1400338c3:	add    BYTE PTR [rax],al
   1400338c5:	add    BYTE PTR [rax],al
   1400338c7:	add    BYTE PTR [rax+0x31],ch
   1400338ca:	add    eax,DWORD PTR [rax+0x1]
   1400338cd:	add    BYTE PTR [rax],al
   1400338cf:	add    BYTE PTR [rdi],bl
   1400338d1:	add    BYTE PTR [rax],al
   1400338d3:	add    BYTE PTR [rax],al
   1400338d5:	add    BYTE PTR [rax],al
   1400338d7:	add    al,bl
   1400338d9:	cmp    eax,0x14003
   1400338de:	add    BYTE PTR [rax],al
   1400338e0:	jb     0x1400338e2
   1400338e2:	add    BYTE PTR [rax],al
   1400338e4:	add    BYTE PTR [rax],al
   1400338e6:	add    BYTE PTR [rax],al
   1400338e8:	call   0x141433c2a
   1400338ed:	add    BYTE PTR [rax],al
   1400338ef:	add    BYTE PTR [rax+rax*1+0x0],al
   1400338f6:	add    BYTE PTR [rax],al
   1400338f8:	or     BYTE PTR [rsi],bh
   1400338fa:	add    eax,DWORD PTR [rax+0x1]
   1400338fd:	add    BYTE PTR [rax],al
   1400338ff:	add    BYTE PTR [rax+0x0],cl
   140033905:	add    BYTE PTR [rax],al
   140033907:	add    BYTE PTR [rax],bl
   140033909:	add    eax,DWORD PTR ds:[rax+0x1]
	...
   14003391d:	add    BYTE PTR [rax],al
   14003391f:	add    BYTE PTR [rcx+0x64],ah
   140033922:	fs jb  0x14003398a
   140033925:	jae    0x14003399a
   140033927:	and    BYTE PTR [rsi+0x61],ah
   14003392a:	ins    DWORD PTR es:[rdi],dx
   14003392b:	imul   ebp,DWORD PTR [rcx+rdi*2+0x20],0x20746f6e
   140033933:	jae    0x1400339aa
   140033935:	jo     0x1400339a7
   140033937:	outs   dx,DWORD PTR ds:[rsi]
   140033938:	jb     0x1400339ae
   14003393a:	gs add BYTE PTR fs:[rax],al
   14003393e:	add    BYTE PTR [rax],al
   140033940:	(bad)  
   140033941:	fs fs jb 0x1400339aa
   140033945:	jae    0x1400339ba
   140033947:	and    BYTE PTR [rcx+0x6e],ch
   14003394a:	and    BYTE PTR [rbp+0x73],dh
   14003394d:	add    BYTE PTR gs:[rax],al
   140033950:	(bad)  
   140033951:	fs fs jb 0x1400339ba
   140033955:	jae    0x1400339ca
   140033957:	and    BYTE PTR [rsi+0x6f],ch
   14003395a:	je     0x14003397c
   14003395c:	(bad)  
   14003395d:	jbe    0x1400339c0
   14003395f:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x656c
   140033967:	add    BYTE PTR [rcx+0x6c],ah
   14003396a:	jb     0x1400339d1
   14003396c:	(bad)  
   14003396d:	fs jns 0x140033990
   140033970:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140033973:	outs   dx,BYTE PTR ds:[rsi]
   140033974:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   140033979:	add    BYTE PTR [rax],al
   14003397b:	add    BYTE PTR [rax],al
   14003397d:	add    BYTE PTR [rax],al
   14003397f:	add    BYTE PTR [rcx+0x72],ah
   140033982:	addr32 jne 0x1400339f2
   140033985:	outs   dx,BYTE PTR gs:[rsi]
   140033987:	je     0x1400339a9
   140033989:	ins    BYTE PTR es:[rdi],dx
   14003398a:	imul   esi,DWORD PTR [rbx+0x74],0x6f6f7420
   140033991:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   140033995:	add    BYTE PTR [eax],al
   140033998:	(bad)  
   140033999:	jb     0x140033a02
   14003399b:	jne    0x140033a0a
   14003399d:	outs   dx,BYTE PTR gs:[rsi]
   14003399f:	je     0x1400339c1
   1400339a1:	outs   dx,DWORD PTR ds:[rsi]
   1400339a2:	jne    0x140033a18
   1400339a4:	and    BYTE PTR [rdi+0x66],ch
   1400339a7:	and    BYTE PTR [rdi+rbp*2+0x6d],ah
   1400339ab:	(bad)  
   1400339ac:	imul   ebp,DWORD PTR [rsi+0x0],0x64616200
   1400339b3:	and    BYTE PTR [rcx+0x64],ah
   1400339b6:	fs jb  0x140033a1e
   1400339b9:	jae    0x140033a2e
   1400339bb:	add    BYTE PTR [rax],al
   1400339bd:	add    BYTE PTR [rax],al
   1400339bf:	add    BYTE PTR [rdx+0x61],ah
   1400339c2:	and    BYTE PTR fs:[rsi+0x69],ah
   1400339c6:	ins    BYTE PTR es:[rdi],dx
   1400339c7:	and    BYTE PTR gs:[rbp+riz*2+0x73],ah
   1400339cc:	movsxd esi,DWORD PTR [rdx+0x69]
   1400339cf:	jo     0x140033a45
   1400339d1:	outs   dx,DWORD PTR ds:[rsi]
   1400339d2:	jb     0x1400339d4
   1400339d4:	add    BYTE PTR [rax],al
   1400339d6:	add    BYTE PTR [rax],al
   1400339d8:	(bad)
   1400339dd:	gs jae 0x140033a53
   1400339e0:	(bad)  
   1400339e1:	add    BYTE PTR gs:[eax],al
   1400339e5:	add    BYTE PTR [rax],al
   1400339e7:	add    BYTE PTR [rdx+0x72],ah
   1400339ea:	outs   dx,DWORD PTR ds:[rsi]
   1400339eb:	imul   esp,DWORD PTR [rbp+0x6e],0x20
   1400339ef:	jo     0x140033a5a
   1400339f1:	jo     0x140033a58
   1400339f3:	add    BYTE PTR [rax],al
   1400339f5:	add    BYTE PTR [rax],al
   1400339f7:	add    BYTE PTR [rbx+0x6f],ah
   1400339fa:	outs   dx,BYTE PTR ds:[rsi]
   1400339fb:	outs   dx,BYTE PTR ds:[rsi]
   1400339fc:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140033a01:	outs   dx,BYTE PTR ds:[rsi]
   140033a02:	and    BYTE PTR [rcx+0x62],ah
   140033a05:	outs   dx,DWORD PTR ds:[rsi]
   140033a06:	jb     0x140033a7c
   140033a08:	gs add BYTE PTR fs:[rax],al
   140033a0c:	add    BYTE PTR [rax],al
   140033a0e:	add    BYTE PTR [rax],al
   140033a10:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140033a13:	outs   dx,BYTE PTR ds:[rsi]
   140033a14:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140033a19:	outs   dx,BYTE PTR ds:[rsi]
   140033a1a:	and    BYTE PTR [rcx+0x6c],ah
   140033a1d:	jb     0x140033a84
   140033a1f:	(bad)  
   140033a20:	fs jns 0x140033a43
   140033a23:	imul   ebp,DWORD PTR [rsi+0x20],0x676f7270
   140033a2a:	jb     0x140033a91
   140033a2c:	jae    0x140033aa1
   140033a2e:	add    BYTE PTR [rax],al
   140033a30:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140033a33:	outs   dx,BYTE PTR ds:[rsi]
   140033a34:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140033a39:	outs   dx,BYTE PTR ds:[rsi]
   140033a3a:	and    BYTE PTR [rdx+0x65],dh
   140033a3d:	data16 jne 0x140033ab3
   140033a40:	gs add BYTE PTR fs:[rax],al
   140033a44:	add    BYTE PTR [rax],al
   140033a46:	add    BYTE PTR [rax],al
   140033a48:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140033a4b:	outs   dx,BYTE PTR ds:[rsi]
   140033a4c:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140033a51:	outs   dx,BYTE PTR ds:[rsi]
   140033a52:	and    BYTE PTR [rdx+0x65],dh
   140033a55:	jae    0x140033abc
   140033a57:	je     0x140033a59
   140033a59:	add    BYTE PTR [rax],al
   140033a5b:	add    BYTE PTR [rax],al
   140033a5d:	add    BYTE PTR [rax],al
   140033a5f:	add    BYTE PTR [rbp+riz*2+0x73],ah
   140033a63:	je     0x140033ace
   140033a65:	outs   dx,BYTE PTR ds:[rsi]
   140033a66:	(bad)  
   140033a67:	je     0x140033ad2
   140033a69:	outs   dx,DWORD PTR ds:[rsi]
   140033a6a:	outs   dx,BYTE PTR ds:[rsi]
   140033a6b:	and    BYTE PTR [rcx+0x64],ah
   140033a6e:	fs jb  0x140033ad6
   140033a71:	jae    0x140033ae6
   140033a73:	and    BYTE PTR [rdx+0x65],dh
   140033a76:	jno    0x140033aed
   140033a78:	imul   esi,DWORD PTR [rdx+0x65],0x64
   140033a7f:	add    BYTE PTR [rbp+0x78],ah
   140033a82:	movsxd esi,DWORD PTR gs:[rbp+0x74]
   140033a86:	(bad)  
   140033a87:	(bad)  
   140033a88:	ins    BYTE PTR es:[rdi],dx
   140033a89:	and    BYTE PTR gs:[rsi+0x6f],ah
   140033a8d:	jb     0x140033afc
   140033a8f:	(bad)  
   140033a90:	je     0x140033ab2
   140033a92:	gs jb  0x140033b07
   140033a95:	outs   dx,DWORD PTR ds:[rsi]
   140033a96:	jb     0x140033a98
   140033a98:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6f74
   140033a9f:	outs   dx,DWORD PTR ds:[rsi]
   140033aa0:	and    BYTE PTR [rcx+riz*2+0x72],ch
   140033aa4:	add    BYTE PTR gs:[eax],al
   140033aa8:	push   0x2074736f
   140033aad:	jne    0x140033b1d
   140033aaf:	jb     0x140033b16
   140033ab1:	(bad)  
   140033ab2:	movsxd ebp,DWORD PTR [rax+0x61]
   140033ab5:	(bad)  
   140033ab6:	ins    BYTE PTR es:[rdi],dx
   140033ab7:	add    BYTE PTR gs:[rax],al
   140033aba:	add    BYTE PTR [rax],al
   140033abc:	add    BYTE PTR [rax],al
   140033abe:	add    BYTE PTR [rax],al
   140033ac0:	imul   esp,DWORD PTR [rbp+riz*2+0x6e],0x69666974
   140033ac8:	gs jb  0x140033aeb
   140033acb:	jb     0x140033b32
   140033acd:	ins    DWORD PTR es:[rdi],dx
   140033ace:	outs   dx,DWORD PTR ds:[rsi]
   140033acf:	jbe    0x140033b36
   140033ad1:	add    BYTE PTR fs:[rax],al
   140033ad4:	add    BYTE PTR [rax],al
   140033ad6:	add    BYTE PTR [rax],al
   140033ad8:	imul   ebp,DWORD PTR [rsp+rbp*2+0x65],0x206c6167
   140033ae0:	(bad)  
   140033ae1:	jns    0x140033b57
   140033ae3:	and    BYTE PTR gs:[rbx+0x65],dh
   140033ae7:	jno    0x140033b5e
   140033ae9:	outs   dx,BYTE PTR gs:[rsi]
   140033aeb:	movsxd esp,DWORD PTR [rbp+0x0]
   140033aee:	add    BYTE PTR [rax],al
   140033af0:	imul   ebp,DWORD PTR [rsi+0x61],0x6f727070
   140033af7:	jo     0x140033b6b
   140033af9:	imul   esp,DWORD PTR [rcx+0x74],0x6f692065
   140033b00:	and    BYTE PTR [rbx+0x6f],ah
   140033b03:	outs   dx,BYTE PTR ds:[rsi]
   140033b04:	je     0x140033b78
   140033b06:	outs   dx,DWORD PTR ds:[rsi]
   140033b07:	ins    BYTE PTR es:[rdi],dx
   140033b08:	and    BYTE PTR [rdi+0x70],ch
   140033b0b:	gs jb  0x140033b6f
   140033b0e:	je     0x140033b79
   140033b10:	outs   dx,DWORD PTR ds:[rsi]
   140033b11:	outs   dx,BYTE PTR ds:[rsi]
   140033b12:	add    BYTE PTR [rax],al
   140033b14:	add    BYTE PTR [rax],al
   140033b16:	add    BYTE PTR [rax],al
   140033b18:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
   140033b1f:	and    BYTE PTR [rbx+0x65],dh
   140033b22:	imul   eax,DWORD PTR gs:[rax],0x0
   140033b26:	add    BYTE PTR [rax],al
   140033b28:	imul   esi,DWORD PTR [rbx+0x20],0x69642061
   140033b2f:	jb     0x140033b96
   140033b31:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140033b35:	jns    0x140033b37
   140033b37:	add    BYTE PTR [rbp+0x65],ch
   140033b3a:	jae    0x140033baf
   140033b3c:	(bad)  
   140033b3d:	and    BYTE PTR gs:[ebx+0x69],dh
   140033b42:	jp     0x140033ba9
   140033b44:	add    BYTE PTR [rax],al
   140033b46:	add    BYTE PTR [rax],al
   140033b48:	outs   dx,BYTE PTR ds:[rsi]
   140033b49:	gs je  0x140033bc3
   140033b4c:	outs   dx,DWORD PTR ds:[rsi]
   140033b4d:	jb     0x140033bba
   140033b4f:	and    BYTE PTR [rdi+rbp*2+0x77],ah
   140033b53:	outs   dx,BYTE PTR ds:[rsi]
   140033b54:	add    BYTE PTR [rax],al
   140033b56:	add    BYTE PTR [rax],al
   140033b58:	outs   dx,BYTE PTR ds:[rsi]
   140033b59:	gs je  0x140033bd3
   140033b5c:	outs   dx,DWORD PTR ds:[rsi]
   140033b5d:	jb     0x140033bca
   140033b5f:	and    BYTE PTR [rdx+0x65],dh
   140033b62:	jae    0x140033bc9
   140033b64:	je     0x140033b66
   140033b66:	add    BYTE PTR [rax],al
   140033b68:	outs   dx,BYTE PTR ds:[rsi]
   140033b69:	gs je  0x140033be3
   140033b6c:	outs   dx,DWORD PTR ds:[rsi]
   140033b6d:	jb     0x140033bda
   140033b6f:	and    BYTE PTR [rbp+0x6e],dh
   140033b72:	jb     0x140033bd9
   140033b74:	(bad)  
   140033b75:	movsxd ebp,DWORD PTR [rax+0x61]
   140033b78:	(bad)  
   140033b79:	ins    BYTE PTR es:[rdi],dx
   140033b7a:	add    BYTE PTR gs:[rax],al
   140033b7d:	add    BYTE PTR [rax],al
   140033b7f:	add    BYTE PTR [rsi+0x6f],ch
   140033b82:	and    BYTE PTR [rdx+0x75],ah
   140033b85:	data16 data16 gs jb 0x140033baa
   140033b8a:	jae    0x140033bfc
   140033b8c:	(bad)  
   140033b8d:	movsxd esp,DWORD PTR [rbp+0x0]
   140033b90:	outs   dx,BYTE PTR ds:[rsi]
   140033b91:	outs   dx,DWORD PTR ds:[rsi]
   140033b92:	and    BYTE PTR [rbx+0x68],ah
   140033b95:	imul   ebp,DWORD PTR [rsp+riz*2+0x20],0x636f7270
   140033b9d:	gs jae 0x140033c13
	...
   140033ba8:	outs   dx,BYTE PTR ds:[rsi]
   140033ba9:	outs   dx,DWORD PTR ds:[rsi]
   140033baa:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
   140033bae:	imul   eax,DWORD PTR [rax],0x6e
   140033bb1:	outs   dx,DWORD PTR ds:[rsi]
   140033bb2:	and    BYTE PTR [rbp+0x65],ch
   140033bb5:	jae    0x140033c2a
   140033bb7:	(bad)  
   140033bb8:	and    BYTE PTR gs:[ecx+0x76],ah
   140033bbd:	(bad)  
   140033bbe:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x656c
   140033bc6:	add    BYTE PTR [rax],al
   140033bc8:	outs   dx,BYTE PTR ds:[rsi]
   140033bc9:	outs   dx,DWORD PTR ds:[rsi]
   140033bca:	and    BYTE PTR [rbp+0x65],ch
   140033bcd:	jae    0x140033c42
   140033bcf:	(bad)  
   140033bd0:	add    BYTE PTR gs:[eax],al
   140033bd4:	add    BYTE PTR [rax],al
   140033bd6:	add    BYTE PTR [rax],al
   140033bd8:	outs   dx,BYTE PTR ds:[rsi]
   140033bd9:	outs   dx,DWORD PTR ds:[rsi]
   140033bda:	and    BYTE PTR [rax+0x72],dh
   140033bdd:	outs   dx,DWORD PTR ds:[rsi]
   140033bde:	je     0x140033c4f
   140033be0:	movsxd ebp,DWORD PTR [rdi+0x6c]
   140033be3:	and    BYTE PTR [rdi+0x70],ch
   140033be6:	je     0x140033c51
   140033be8:	outs   dx,DWORD PTR ds:[rsi]
   140033be9:	outs   dx,BYTE PTR ds:[rsi]
   140033bea:	add    BYTE PTR [rax],al
   140033bec:	add    BYTE PTR [rax],al
   140033bee:	add    BYTE PTR [rax],al
   140033bf0:	outs   dx,BYTE PTR ds:[rsi]
   140033bf1:	outs   dx,DWORD PTR ds:[rsi]
   140033bf2:	and    BYTE PTR [rbx+0x74],dh
   140033bf5:	jb     0x140033c5c
   140033bf7:	(bad)  
   140033bf8:	ins    DWORD PTR es:[rdi],dx
   140033bf9:	and    BYTE PTR [rdx+0x65],dh
   140033bfc:	jae    0x140033c6d
   140033bfe:	jne    0x140033c72
   140033c00:	movsxd esp,DWORD PTR [rbp+0x73]
   140033c03:	add    BYTE PTR [rax],al
   140033c05:	add    BYTE PTR [rax],al
   140033c07:	add    BYTE PTR [rsi+0x6f],ch
   140033c0a:	and    BYTE PTR [rbx+0x75],dh
   140033c0d:	movsxd ebp,DWORD PTR [rax+0x20]
   140033c10:	fs gs jbe 0x140033c7d
   140033c14:	movsxd esp,DWORD PTR [rbp+0x20]
   140033c17:	outs   dx,DWORD PTR ds:[rsi]
   140033c18:	jb     0x140033c3a
   140033c1a:	(bad)  
   140033c1b:	fs fs jb 0x140033c84
   140033c1f:	jae    0x140033c94
   140033c21:	add    BYTE PTR [rax],al
   140033c23:	add    BYTE PTR [rax],al
   140033c25:	add    BYTE PTR [rax],al
   140033c27:	add    BYTE PTR [rsi+0x6f],ch
   140033c2a:	and    BYTE PTR [rbx+0x75],dh
   140033c2d:	movsxd ebp,DWORD PTR [rax+0x20]
   140033c30:	jo     0x140033ca4
   140033c32:	outs   dx,DWORD PTR ds:[rsi]
   140033c33:	movsxd esp,DWORD PTR [rbp+0x73]
   140033c36:	jae    0x140033c38
   140033c38:	outs   dx,BYTE PTR ds:[rsi]
   140033c39:	outs   dx,DWORD PTR ds:[rsi]
   140033c3a:	je     0x140033c5c
   140033c3c:	(bad)  
   140033c3d:	and    BYTE PTR [rcx+rbp*2+0x72],ah
   140033c41:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   140033c46:	jns    0x140033c48
   140033c48:	outs   dx,BYTE PTR ds:[rsi]
   140033c49:	outs   dx,DWORD PTR ds:[rsi]
   140033c4a:	je     0x140033c6c
   140033c4c:	(bad)  
   140033c4d:	and    BYTE PTR [rbx+0x6f],dh
   140033c50:	movsxd ebp,DWORD PTR [rbx+0x65]
   140033c53:	je     0x140033c55
   140033c55:	add    BYTE PTR [rax],al
   140033c57:	add    BYTE PTR [rsi+0x6f],ch
   140033c5a:	je     0x140033c7c
   140033c5c:	(bad)  
   140033c5d:	and    BYTE PTR [rbx+0x74],dh
   140033c60:	jb     0x140033cc7
   140033c62:	(bad)  
   140033c63:	ins    DWORD PTR es:[rdi],dx
   140033c64:	add    BYTE PTR [rax],al
   140033c66:	add    BYTE PTR [rax],al
   140033c68:	outs   dx,BYTE PTR ds:[rsi]
   140033c69:	outs   dx,DWORD PTR ds:[rsi]
   140033c6a:	je     0x140033c8c
   140033c6c:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140033c6f:	outs   dx,BYTE PTR ds:[rsi]
   140033c70:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   140033c75:	add    BYTE PTR [rax],al
   140033c77:	add    BYTE PTR [rsi+0x6f],ch
   140033c7a:	je     0x140033c9c
   140033c7c:	jae    0x140033cf3
   140033c7e:	jo     0x140033cf0
   140033c80:	outs   dx,DWORD PTR ds:[rsi]
   140033c81:	jb     0x140033cf7
   140033c83:	gs add BYTE PTR fs:[rax],al
   140033c87:	add    BYTE PTR [rdi+0x70],ch
   140033c8a:	gs jb  0x140033cee
   140033c8d:	je     0x140033cf8
   140033c8f:	outs   dx,DWORD PTR ds:[rsi]
   140033c90:	outs   dx,BYTE PTR ds:[rsi]
   140033c91:	and    BYTE PTR [rcx+0x6e],ch
   140033c94:	and    BYTE PTR [rax+0x72],dh
   140033c97:	outs   dx,DWORD PTR ds:[rsi]
   140033c98:	addr32 jb 0x140033d00
   140033c9b:	jae    0x140033d10
   140033c9d:	add    BYTE PTR [rax],al
   140033c9f:	add    BYTE PTR [rdi+0x70],ch
   140033ca2:	gs jb  0x140033d06
   140033ca5:	je     0x140033d10
   140033ca7:	outs   dx,DWORD PTR ds:[rsi]
   140033ca8:	outs   dx,BYTE PTR ds:[rsi]
   140033ca9:	and    BYTE PTR [rsi+0x6f],ch
   140033cac:	je     0x140033cce
   140033cae:	jo     0x140033d15
   140033cb0:	jb     0x140033d1f
   140033cb2:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x706f0064
   140033cba:	gs jb  0x140033d1e
   140033cbd:	je     0x140033d28
   140033cbf:	outs   dx,DWORD PTR ds:[rsi]
   140033cc0:	outs   dx,BYTE PTR ds:[rsi]
   140033cc1:	and    BYTE PTR [rsi+0x6f],ch
   140033cc4:	je     0x140033ce6
   140033cc6:	jae    0x140033d3d
   140033cc8:	jo     0x140033d3a
   140033cca:	outs   dx,DWORD PTR ds:[rsi]
   140033ccb:	jb     0x140033d41
   140033ccd:	gs add BYTE PTR fs:[rdi+0x70],ch
   140033cd2:	gs jb  0x140033d36
   140033cd5:	je     0x140033d40
   140033cd7:	outs   dx,DWORD PTR ds:[rsi]
   140033cd8:	outs   dx,BYTE PTR ds:[rsi]
   140033cd9:	and    BYTE PTR [rdi+0x6f],dh
   140033cdc:	jne    0x140033d4a
   140033cde:	and    BYTE PTR fs:[rdx+0x6c],ah
   140033ce2:	outs   dx,DWORD PTR ds:[rsi]
   140033ce3:	movsxd ebp,DWORD PTR [rbx+0x0]
   140033ce6:	add    BYTE PTR [rax],al
   140033ce8:	outs   dx,DWORD PTR ds:[rsi]
   140033ce9:	ja     0x140033d59
   140033ceb:	gs jb  0x140033d0e
   140033cee:	fs gs (bad) 
   140033cf1:	add    BYTE PTR fs:[rax],al
   140033cf4:	add    BYTE PTR [rax],al
   140033cf6:	add    BYTE PTR [rax],al
   140033cf8:	jo     0x140033d6c
   140033cfa:	outs   dx,DWORD PTR ds:[rsi]
   140033cfb:	je     0x140033d6c
   140033cfd:	movsxd ebp,DWORD PTR [rdi+0x6c]
   140033d00:	and    BYTE PTR [rbp+0x72],ah
   140033d03:	jb     0x140033d74
   140033d05:	jb     0x140033d07
   140033d07:	add    BYTE PTR [rax+0x72],dh
   140033d0a:	outs   dx,DWORD PTR ds:[rsi]
   140033d0b:	je     0x140033d7c
   140033d0d:	movsxd ebp,DWORD PTR [rdi+0x6c]
   140033d10:	and    BYTE PTR [rsi+0x6f],ch
   140033d13:	je     0x140033d35
   140033d15:	jae    0x140033d8c
   140033d17:	jo     0x140033d89
   140033d19:	outs   dx,DWORD PTR ds:[rsi]
   140033d1a:	jb     0x140033d90
   140033d1c:	gs add BYTE PTR fs:[rax],al
   140033d20:	jb     0x140033d87
   140033d22:	(bad)  
   140033d23:	and    BYTE PTR fs:[rdi+0x6e],ch
   140033d27:	ins    BYTE PTR es:[rdi],dx
   140033d28:	jns    0x140033d4a
   140033d2a:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x7973
   140033d31:	jae    0x140033da7
   140033d33:	gs ins DWORD PTR es:[rdi],dx
   140033d35:	add    BYTE PTR [rax],al
   140033d37:	add    BYTE PTR [rdx+0x65],dh
   140033d3a:	jae    0x140033dab
   140033d3c:	jne    0x140033db0
   140033d3e:	movsxd esp,DWORD PTR [rbp+0x20]
   140033d41:	fs gs (bad) 
   140033d44:	fs ins BYTE PTR es:[rdi],dx
   140033d46:	outs   dx,DWORD PTR ds:[rsi]
   140033d47:	movsxd ebp,DWORD PTR [rbx+0x20]
   140033d4a:	ja     0x140033dbb
   140033d4c:	jne    0x140033dba
   140033d4e:	and    BYTE PTR fs:[rdi+0x63],ch
   140033d52:	movsxd esi,DWORD PTR [rbp+0x72]
   140033d55:	add    BYTE PTR [rax],al
   140033d57:	add    BYTE PTR [rdx+0x65],dh
   140033d5a:	jae    0x140033dd1
   140033d5c:	ins    BYTE PTR es:[rdi],dx
   140033d5d:	je     0x140033d7f
   140033d5f:	outs   dx,DWORD PTR ds:[rsi]
   140033d60:	jne    0x140033dd6
   140033d62:	and    BYTE PTR [rdi+0x66],ch
   140033d65:	and    BYTE PTR [rdx+0x61],dh
   140033d68:	outs   dx,BYTE PTR ds:[rsi]
   140033d69:	add    BYTE PTR gs:[eax],al
   140033d6d:	add    BYTE PTR [rax],al
   140033d6f:	add    BYTE PTR [rbx+0x74],dh
   140033d72:	(bad)  
   140033d73:	je     0x140033dda
   140033d75:	and    BYTE PTR [rsi+0x6f],ch
   140033d78:	je     0x140033d9a
   140033d7a:	jb     0x140033de1
   140033d7c:	movsxd ebp,DWORD PTR [rdi+0x76]
   140033d7f:	gs jb  0x140033de3
   140033d82:	(bad)  
   140033d83:	ins    BYTE PTR es:[rdi],dx
   140033d84:	add    BYTE PTR gs:[rax],al
   140033d87:	add    BYTE PTR [rbx+0x74],dh
   140033d8a:	jb     0x140033df1
   140033d8c:	(bad)  
   140033d8d:	ins    DWORD PTR es:[rdi],dx
   140033d8e:	and    BYTE PTR [rcx+rbp*2+0x6d],dh
   140033d92:	outs   dx,DWORD PTR gs:[rsi]
   140033d94:	jne    0x140033e0a
   140033d96:	add    BYTE PTR [rax],al
   140033d98:	je     0x140033dff
   140033d9a:	js     0x140033e10
   140033d9c:	and    BYTE PTR [rsi+0x69],ah
   140033d9f:	ins    BYTE PTR es:[rdi],dx
   140033da0:	and    BYTE PTR gs:[rdx+0x75],ah
   140033da4:	jae    0x140033e1f
   140033da6:	add    BYTE PTR [rax],al
   140033da8:	je     0x140033e13
   140033daa:	ins    DWORD PTR es:[rdi],dx
   140033dab:	gs and BYTE PTR fs:[rdi+0x75],ch
   140033db0:	je     0x140033db2
   140033db2:	add    BYTE PTR [rax],al
   140033db4:	add    BYTE PTR [rax],al
   140033db6:	add    BYTE PTR [rax],al
   140033db8:	je     0x140033e29
   140033dba:	outs   dx,DWORD PTR ds:[rsi]
   140033dbb:	and    BYTE PTR [rbp+0x61],ch
   140033dbe:	outs   dx,BYTE PTR ds:[rsi]
   140033dbf:	jns    0x140033de1
   140033dc1:	imul   bp,WORD PTR [rbp+riz*2+0x73],0x6f20
   140033dc8:	jo     0x140033e2f
   140033dca:	outs   dx,BYTE PTR ds:[rsi]
   140033dcb:	and    BYTE PTR [rcx+0x6e],ch
   140033dce:	and    BYTE PTR [rbx+0x79],dh
   140033dd1:	jae    0x140033e47
   140033dd3:	gs ins DWORD PTR es:[rdi],dx
   140033dd5:	add    BYTE PTR [rax],al
   140033dd7:	add    BYTE PTR [rdi+rbp*2+0x6f],dh
   140033ddb:	and    BYTE PTR [rbp+0x61],ch
   140033dde:	outs   dx,BYTE PTR ds:[rsi]
   140033ddf:	jns    0x140033e01
   140033de1:	ins    BYTE PTR es:[rdi],dx
   140033de2:	imul   ebp,DWORD PTR [rsi+0x6b],0x74000073
   140033de9:	outs   dx,DWORD PTR ds:[rsi]
   140033dea:	outs   dx,DWORD PTR ds:[rsi]
   140033deb:	and    BYTE PTR [rbp+0x61],ch
   140033dee:	outs   dx,BYTE PTR ds:[rsi]
   140033def:	jns    0x140033e11
   140033df1:	jae    0x140033e6c
   140033df3:	ins    DWORD PTR es:[rdi],dx
   140033df4:	(bad)  
   140033df5:	outs   dx,DWORD PTR ds:[rsi]
   140033df6:	ins    BYTE PTR es:[rdi],dx
   140033df7:	imul   esp,DWORD PTR [rbx+0x20],0x6b6e696c
   140033dfe:	and    BYTE PTR [rbp+riz*2+0x76],ch
   140033e02:	gs ins BYTE PTR es:[rdi],dx
   140033e04:	jae    0x140033e06
   140033e06:	add    BYTE PTR [rax],al
   140033e08:	jbe    0x140033e6b
   140033e0a:	ins    BYTE PTR es:[rdi],dx
   140033e0b:	jne    0x140033e72
   140033e0d:	and    BYTE PTR [rdi+rbp*2+0x6f],dh
   140033e11:	and    BYTE PTR [rcx+riz*2+0x72],ch
   140033e15:	add    BYTE PTR gs:[edi+0x72],dh
   140033e1a:	outs   dx,DWORD PTR ds:[rsi]
   140033e1b:	outs   dx,BYTE PTR ds:[rsi]
   140033e1c:	and    BYTE PTR [eax+0x72],dh
   140033e20:	outs   dx,DWORD PTR ds:[rsi]
   140033e21:	je     0x140033e92
   140033e23:	movsxd ebp,DWORD PTR [rdi+0x6c]
   140033e26:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   140033e2a:	add    BYTE PTR gs:[rax],al
   140033e2d:	add    BYTE PTR [rax],al
   140033e2f:	add    al,al
   140033e31:	xlat   BYTE PTR ds:[rbx]
   140033e32:	add    al,BYTE PTR [rax+0x1]
   140033e35:	add    BYTE PTR [rax],al
   140033e37:	add    BYTE PTR [rax],dl
   140033e39:	fild   WORD PTR [rdx]
   140033e3b:	rex add DWORD PTR [rax],eax
   140033e3e:	add    BYTE PTR [rax],al
   140033e40:	rcr    dh,1
   140033e42:	add    al,BYTE PTR [rax+0x1]
   140033e45:	add    BYTE PTR [rax],al
   140033e47:	add    BYTE PTR [rax],al
   140033e49:	cli    
   140033e4a:	add    al,0x40
   140033e4c:	add    DWORD PTR [rax],eax
   140033e4e:	add    BYTE PTR [rax],al
   140033e50:	movabs al,ds:0x49000000014004fa
   140033e59:	outs   dx,BYTE PTR ds:[rsi]
   140033e5a:	jbe    0x140033ebd
   140033e5c:	ins    BYTE PTR es:[rdi],dx
   140033e5d:	imul   esp,DWORD PTR [rax+riz*1+0x70],0x6d617261
   140033e65:	gs je  0x140033ecd
   140033e68:	jb     0x140033e8a
   140033e6a:	jo     0x140033ecd
   140033e6c:	jae    0x140033ee1
   140033e6e:	gs and BYTE PTR fs:[rdi+rbp*2+0x20],dh
   140033e74:	rex.XB and BYTE PTR [r10+0x75],sil
   140033e78:	outs   dx,BYTE PTR ds:[rsi]
   140033e79:	je     0x140033ee4
   140033e7b:	ins    DWORD PTR es:[rdi],dx
   140033e7c:	and    BYTE PTR gs:[rsi+0x75],ah
   140033e80:	outs   dx,BYTE PTR ds:[rsi]
   140033e81:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140033e85:	outs   dx,BYTE PTR ds:[rsi]
   140033e86:	or     al,BYTE PTR cs:[rax]
   140033e89:	add    BYTE PTR [rax],al
   140033e8b:	add    BYTE PTR [rax*1+0xa0003],al
   140033e92:	add    BYTE PTR [rax],al
   140033e94:	add    al,0x4
   140033e96:	or     DWORD PTR [rax],eax
	...
   140033ea0:	(bad)  
   140033ea1:	icebp  
   140033ea2:	add    eax,DWORD PTR [rax+0x1]
   140033ea5:	add    BYTE PTR [rax],al
   140033ea7:	add    BYTE PTR [rax+0x1400013],al
   140033ead:	add    BYTE PTR [rax],al
   140033eaf:	add    BYTE PTR [rax+0x14],ah
   140033eb2:	add    BYTE PTR [rax+0x1],al
   140033eb5:	add    BYTE PTR [rax],al
   140033eb7:	add    BYTE PTR [rax+0x14],dh
   140033eba:	add    BYTE PTR [rax+0x1],al
   140033ebd:	add    BYTE PTR [rax],al
   140033ebf:	add    BYTE PTR [rax+0x1400013],dh
   140033ec5:	add    BYTE PTR [rax],al
   140033ec7:	add    BYTE PTR [rax+0x14],al
   140033eca:	add    BYTE PTR [rax+0x1],al
   140033ecd:	add    BYTE PTR [rax],al
   140033ecf:	add    al,dl
   140033ed1:	adc    eax,DWORD PTR [rax]
   140033ed3:	rex add DWORD PTR [rax],eax
   140033ed6:	add    BYTE PTR [rax],al
   140033ed8:	or     ch,BYTE PTR [rbx-0x6263efd6]
   140033ede:	xchg   DWORD PTR [rax-0x58],ecx
   140033ee1:	(bad)  
   140033ee2:	push   rbp
   140033ee3:	fidiv  WORD PTR [rbx]
   140033ee5:	mov    ecx,0x6f609565
   140033eea:	and    eax,0x41cddd32
   140033eef:	rex.WR movabs rdi,0x3b09de3cc7537f7
   140033ef9:	add    BYTE PTR [rax],al
   140033efb:	add    BYTE PTR [rax+rax*1],al
   140033efe:	add    eax,DWORD PTR [rax]
	...
   140033f08:	or     DWORD PTR [rax],eax
   140033f0a:	add    BYTE PTR [rax],al
   140033f0c:	add    al,0x3
   140033f0e:	or     DWORD PTR [rax],eax
	...
   140033f18:	(bad)  
   140033f19:	add    BYTE PTR [rax+rax*1+0x76],ah
   140033f1d:	add    BYTE PTR [rcx+0x0],ah
   140033f20:	jo     0x140033f22
   140033f22:	imul   eax,DWORD PTR [rax],0x320033
   140033f28:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   140033f2d:	add    BYTE PTR [rax+rax*1+0x0],ch
   140033f31:	add    BYTE PTR [rax],al
   140033f33:	add    BYTE PTR [rax],al
   140033f35:	add    BYTE PTR [rax],al
   140033f37:	add    BYTE PTR [rbx+0x0],al
   140033f3a:	rex.WR add BYTE PTR [rbx+0x0],r10b
   140033f3e:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   140033f43:	add    BYTE PTR [rax],al
   140033f45:	add    BYTE PTR [rax],al
   140033f47:	add    BYTE PTR [rcx+0x0],al
   140033f4a:	jo     0x140033f4c
   140033f4c:	jo     0x140033f4e
   140033f4e:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   140033f53:	add    BYTE PTR [rbx+0x0],dl
   140033f56:	add    BYTE PTR [rax],al
   140033f58:	rex.WRB add BYTE PTR [r8],r8b
   140033f5b:	add    BYTE PTR [rax+rax*1+0x0],al
   140033f5f:	add    BYTE PTR [rdx+0x0],al
   140033f62:	add    BYTE PTR [rax],al
   140033f64:	add    BYTE PTR [rax],al
   140033f66:	add    BYTE PTR [rax],al
   140033f68:	push   rsi
   140033f69:	add    BYTE PTR [rcx+0x0],ah
   140033f6c:	ins    BYTE PTR es:[rdi],dx
   140033f6d:	add    BYTE PTR [rax],al
   140033f6f:	add    BYTE PTR [rsi+0x0],al
   140033f72:	outs   dx,DWORD PTR ds:[rsi]
   140033f73:	add    BYTE PTR [rdx+0x0],dh
   140033f76:	movsxd eax,DWORD PTR [rax]
   140033f78:	add    BYTE PTR gs:[rdx+0x0],dl
   140033f7c:	add    BYTE PTR gs:[rbp+0x0],ch
   140033f80:	outs   dx,DWORD PTR ds:[rsi]
   140033f81:	add    BYTE PTR [rsi+0x0],dh
   140033f84:	add    BYTE PTR gs:[rax],al
   140033f87:	add    BYTE PTR [rsi+0x0],cl
   140033f8a:	outs   dx,DWORD PTR ds:[rsi]
   140033f8b:	add    BYTE PTR [rdx+0x0],dl
   140033f8e:	add    BYTE PTR gs:[rbp+0x0],ch
   140033f92:	outs   dx,DWORD PTR ds:[rsi]
   140033f93:	add    BYTE PTR [rsi+0x0],dh
   140033f96:	add    BYTE PTR gs:[rax],al
   140033f99:	add    BYTE PTR [rax],al
   140033f9b:	add    BYTE PTR [rax],al
   140033f9d:	add    BYTE PTR [rax],al
   140033f9f:	add    BYTE PTR [rax+rax*1+0x65],al
   140033fa3:	add    BYTE PTR [rax+rax*1+0x65],ch
   140033fa7:	add    BYTE PTR [rax+rax*1+0x65],dh
   140033fab:	add    BYTE PTR [rax],al
   140033fad:	add    BYTE PTR [rax],al
   140033faf:	add    BYTE PTR [rbx+0x0],al
   140033fb2:	outs   dx,DWORD PTR ds:[rsi]
   140033fb3:	add    BYTE PTR [rbp+0x0],ch
   140033fb6:	jo     0x140033fb8
   140033fb8:	outs   dx,DWORD PTR ds:[rsi]
   140033fb9:	add    BYTE PTR [rsi+0x0],ch
   140033fbc:	add    BYTE PTR gs:[rsi+0x0],ch
   140033fc0:	je     0x140033fc2
   140033fc2:	and    BYTE PTR [rax],al
   140033fc4:	rex.XB add BYTE PTR [r9+0x0],spl
   140033fc8:	je     0x140033fca
   140033fca:	add    BYTE PTR gs:[rdi+0x0],ah
   140033fce:	outs   dx,DWORD PTR ds:[rsi]
   140033fcf:	add    BYTE PTR [rdx+0x0],dh
   140033fd2:	imul   eax,DWORD PTR [rax],0x730065
	...
   140033fe0:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140033fe4:	ins    BYTE PTR es:[rdi],dx
   140033fe5:	add    BYTE PTR [rbp+0x0],ah
   140033fe8:	push   rsp
   140033fe9:	add    BYTE PTR [rcx+0x0],bh
   140033fec:	jo     0x140033fee
   140033fee:	add    BYTE PTR gs:[rax],al
   140033ff1:	add    BYTE PTR [rax],al
   140033ff3:	add    BYTE PTR [rax],al
   140033ff5:	add    BYTE PTR [rax],al
   140033ff7:	add    BYTE PTR [rcx+0x0],cl
   140033ffa:	outs   dx,BYTE PTR ds:[rsi]
   140033ffb:	add    BYTE PTR [rax+rax*1+0x65],dh
   140033fff:	add    BYTE PTR [rdx+0x0],dh
   140034002:	data16 add BYTE PTR [rcx+0x0],ah
   140034006:	movsxd eax,DWORD PTR [rax]
   140034008:	add    BYTE PTR gs:[rax],al
   14003400b:	add    BYTE PTR [rax],al
   14003400d:	add    BYTE PTR [rax],al
   14003400f:	add    BYTE PTR [rax+0x0],cl
   140034012:	(bad)  
   140034013:	add    BYTE PTR [rdx+0x0],dh
   140034016:	add    BYTE PTR fs:[rdi+0x0],dh
   14003401a:	(bad)  
   14003401b:	add    BYTE PTR [rdx+0x0],dh
   14003401e:	add    BYTE PTR gs:[rax],al
   140034021:	add    BYTE PTR [rax],al
   140034023:	add    BYTE PTR [rax],al
   140034025:	add    BYTE PTR [rax],al
   140034027:	add    BYTE PTR [rbp+0x0],cl
   14003402a:	imul   eax,DWORD PTR [rax],0x65006d
	...
   140034038:	push   rbx
   140034039:	add    BYTE PTR [rcx+0x0],al
   14003403c:	rex.WRB add BYTE PTR [r8],r8b
   14003403f:	add    BYTE PTR [rbx+0x0],dl
   140034042:	add    BYTE PTR [r11+0x0],r8b
   140034046:	push   rbp
   140034047:	add    BYTE PTR [rdx+0x0],dl
   14003404a:	rex.WB add BYTE PTR [r8+rax*1+0x59],dl
	...
   140034057:	add    BYTE PTR [rbx+0x0],dl
   14003405a:	pop    rcx
   14003405b:	add    BYTE PTR [rbx+0x0],dl
   14003405e:	push   rsp
   14003405f:	add    BYTE PTR [rbp+0x0],al
   140034062:	rex.WRB add BYTE PTR [r8],r8b
   140034065:	add    BYTE PTR [rax],al
   140034067:	add    BYTE PTR [rbx+0x0],dl
   14003406a:	outs   dx,DWORD PTR ds:[rsi]
   14003406b:	add    BYTE PTR [rsi+0x0],ah
   14003406e:	je     0x140034070
   140034070:	ja     0x140034072
   140034072:	(bad)  
   140034073:	add    BYTE PTR [rdx+0x0],dh
   140034076:	add    BYTE PTR gs:[rax],al
   140034079:	add    BYTE PTR [rax],al
   14003407b:	add    BYTE PTR [rax],al
   14003407d:	add    BYTE PTR [rax],al
   14003407f:	add    BYTE PTR [rax+rax*1+0x79],dl
   140034083:	add    BYTE PTR [rax+0x0],dh
   140034086:	add    BYTE PTR gs:[rax+rax*1+0x69],cl
   14003408b:	add    BYTE PTR [rdx+0x0],ah
   14003408e:	add    BYTE PTR [rax],al
   140034090:	outs   dx,BYTE PTR gs:[esi]
   140034093:	gs jb  0x1400340ff
   140034096:	movsxd eax,DWORD PTR [rax]
   140034098:	jne    0x140034108
   14003409a:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   14003409e:	outs   dx,BYTE PTR ds:[rsi]
   14003409f:	and    BYTE PTR [rbp+0x72],ah
   1400340a2:	jb     0x140034113
   1400340a4:	jb     0x1400340a6
   1400340a6:	add    BYTE PTR [rax],al
   1400340a8:	imul   ebp,DWORD PTR [rdi+0x73],0x61657274
   1400340af:	ins    DWORD PTR es:[rdi],dx
	...
   1400340b8:	imul   ebp,DWORD PTR [rdi+0x73],0x61657274
   1400340bf:	ins    DWORD PTR es:[rdi],dx
   1400340c0:	and    BYTE PTR [rbx+0x74],dh
   1400340c3:	jb     0x14003412a
   1400340c5:	(bad)  
   1400340c6:	ins    DWORD PTR es:[rdi],dx
   1400340c7:	and    BYTE PTR [rbp+0x72],ah
   1400340ca:	jb     0x14003413b
   1400340cc:	jb     0x1400340ce
   1400340ce:	add    BYTE PTR [rax],al
   1400340d0:	jae    0x14003414b
   1400340d2:	jae    0x140034148
   1400340d4:	gs ins DWORD PTR es:[rdi],dx
	...
   1400340de:	add    BYTE PTR [rax],al
   1400340e0:	(bad)  
   1400340e1:	add    BYTE PTR [rax+0x0],dh
   1400340e4:	imul   eax,DWORD PTR [rax],0x6d002d
   1400340ea:	jae    0x1400340ec
   1400340ec:	sub    eax,0x69007700
   1400340f1:	add    BYTE PTR [rsi+0x0],ch
   1400340f4:	sub    eax,0x76006500
   1400340f9:	add    BYTE PTR [rbp+0x0],ah
   1400340fc:	outs   dx,BYTE PTR ds:[rsi]
   1400340fd:	add    BYTE PTR [rax+rax*1+0x69],dh
   140034101:	add    BYTE PTR [rsi+0x0],ch
   140034104:	add    BYTE PTR [eip+0x72007000],ch        # 0x1b203b10b
   14003410b:	add    BYTE PTR [rdi+0x0],ch
   14003410e:	jbe    0x140034110
   140034110:	imul   eax,DWORD PTR [rax],0x650064
   140034116:	jb     0x140034118
   140034118:	sub    eax,0x31006c00
   14003411d:	add    BYTE PTR [rip+0x2d003100],ch        # 0x16d037223
   140034123:	add    BYTE PTR [rax],dh
   140034125:	add    BYTE PTR [rsi],ch
   140034127:	add    BYTE PTR [rax+rax*1+0x6c],ah
   14003412b:	add    BYTE PTR [rax+rax*1+0x0],ch
   14003412f:	add    BYTE PTR [rbp+0x76],al
   140034132:	outs   dx,BYTE PTR gs:[rsi]
   140034134:	je     0x14003418d
   140034136:	jb     0x1400341a1
   140034138:	je     0x14003419f
   14003413a:	add    BYTE PTR [rax],al
   14003413c:	add    BYTE PTR [rax],al
   14003413e:	add    BYTE PTR [rax],al
   140034140:	rex.RB jbe 0x1400341a8
   140034143:	outs   dx,BYTE PTR ds:[rsi]
   140034144:	je     0x140034198
   140034146:	imul   esi,DWORD PTR gs:[ebx+0x74],0x7265
   14003414f:	add    BYTE PTR [rbp+0x76],al
   140034152:	outs   dx,BYTE PTR gs:[rsi]
   140034154:	je     0x1400341ab
   140034156:	outs   dx,BYTE PTR ds:[rsi]
   140034157:	jb     0x1400341be
   140034159:	imul   esi,DWORD PTR [ebx+0x74],0x69007265
   140034161:	outs   dx,BYTE PTR ds:[rsi]
   140034162:	jbe    0x1400341c5
   140034164:	ins    BYTE PTR es:[rdi],dx
   140034165:	imul   esp,DWORD PTR [rax+riz*1+0x73],0x6e697274
   14003416d:	and    BYTE PTR [eax+0x6f],dh
   140034171:	jae    0x1400341dc
   140034173:	je     0x1400341de
   140034175:	outs   dx,DWORD PTR ds:[rsi]
   140034176:	outs   dx,BYTE PTR ds:[rsi]
   140034177:	add    BYTE PTR [rbx+0x74],dh
   14003417a:	jb     0x1400341e5
   14003417c:	outs   dx,BYTE PTR ds:[rsi]
   14003417d:	and    BYTE PTR [edi+ebp*2+0x6f],dh
   140034182:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   140034186:	add    BYTE PTR [ecx],dl
   140034189:	add    BYTE PTR [rax],al
   14003418b:	add    BYTE PTR [rcx+rax*1],al
   14003418e:	sldt   WORD PTR [rax]
   140034191:	add    BYTE PTR [rax],al
   140034193:	add    BYTE PTR [rax],al
   140034195:	add    BYTE PTR [rax],al
   140034197:	add    BYTE PTR [rcx+0x33],cl
   14003419a:	add    eax,DWORD PTR [rbx-0x79]
   14003419d:	pop    rcx
   14003419e:	rex
   14003419f:	rex.XB cmp BYTE PTR [r13+0x3b],cl
   1400341a3:	adc    eax,0xa24365bc
   1400341a8:	(bad)  
   1400341a9:	add    BYTE PTR [rax],al
   1400341ab:	add    BYTE PTR [rax+rax*1],al
   1400341ae:	(bad)  
	...
   1400341b7:	add    BYTE PTR [rdx+0x71],bl
   1400341ba:	push   rdx
   1400341bb:	(bad)  
   1400341bc:	sub    al,0xb5
   1400341be:	retf   
   1400341bf:	rex.RB movabs ds:0x86024e7fcd74cbee,eax
   1400341c9:	rex.RX (bad) 
   1400341cc:	(bad)  
   1400341cd:	sbb    DWORD PTR [rbp+0x22eb8d43],edx
   1400341d3:	jno    0x140034219
   1400341d5:	jp     0x1400341b9
   1400341d7:	sti    
   1400341d8:	js     0x1400341cc
   1400341da:	add    eax,DWORD PTR [rax+0x1]
   1400341dd:	add    BYTE PTR [rax],al
   1400341df:	add    BYTE PTR [rax+0x1400013],al
   1400341e5:	add    BYTE PTR [rax],al
   1400341e7:	add    BYTE PTR [rax+0x15],al
   1400341ea:	add    BYTE PTR [rax+0x1],al
   1400341ed:	add    BYTE PTR [rax],al
   1400341ef:	add    BYTE PTR [rax+0x15],dl
   1400341f2:	add    BYTE PTR [rax+0x1],al
   1400341f5:	add    BYTE PTR [rax],al
   1400341f7:	add    al,al
   1400341f9:	adc    eax,0x14000
   1400341fe:	add    BYTE PTR [rax],al
   140034200:	adc    al,0x0
   140034203:	rex add DWORD PTR [rax],eax
   140034206:	add    BYTE PTR [rax],al
   140034208:	rcl    BYTE PTR [rbx],1
   14003420a:	add    BYTE PTR [rax+0x1],al
   14003420d:	add    BYTE PTR [rax],al
   14003420f:	add    BYTE PTR [rsi],bl
   140034211:	add    al,0x3e
   140034213:	mov    bl,0x75
   140034215:	cmp    dl,BYTE PTR [rdx+0x4f]
   140034218:	mov    edi,0x95dc80e
   14003421d:	movsxd esi,DWORD PTR [rdi+0x3f200fb]
   140034223:	rex add DWORD PTR [rax],eax
   140034226:	add    BYTE PTR [rax],al
   140034228:	adc    BYTE PTR [rbx],0x0
   14003422b:	rex add DWORD PTR [rax],eax
   14003422e:	add    BYTE PTR [rax],al
   140034230:	loopne 0x140034246
   140034232:	add    BYTE PTR [rax+0x1],al
   140034235:	add    BYTE PTR [rax],al
   140034237:	add    al,dh
   140034239:	adc    al,0x0
   14003423b:	rex add DWORD PTR [rax],eax
   14003423e:	add    BYTE PTR [rax],al
   140034240:	mov    al,0x13
   140034242:	add    BYTE PTR [rax+0x1],al
   140034245:	add    BYTE PTR [rax],al
   140034247:	add    BYTE PTR [rax+0x14],al
   14003424a:	add    BYTE PTR [rax+0x1],al
   14003424d:	add    BYTE PTR [rax],al
   14003424f:	add    al,dl
   140034251:	adc    eax,DWORD PTR [rax]
   140034253:	rex add DWORD PTR [rax],eax
   140034256:	add    BYTE PTR [rax],al
   140034258:	fdiv   st,st(1)
   14003425a:	add    eax,DWORD PTR [rax+0x1]
   14003425d:	add    BYTE PTR [rax],al
   14003425f:	add    BYTE PTR [rax+0x1400013],al
   140034265:	add    BYTE PTR [rax],al
   140034267:	add    al,al
   140034269:	fiadd  WORD PTR [rdx]
   14003426b:	rex add DWORD PTR [rax],eax
   14003426e:	add    BYTE PTR [rax],al
   140034270:	rcr    dh,0x2
   140034273:	rex add DWORD PTR [rax],eax
   140034276:	add    BYTE PTR [rax],al
   140034278:	mov    al,0x13
   14003427a:	add    BYTE PTR [rax+0x1],al
   14003427d:	add    BYTE PTR [rax],al
   14003427f:	add    BYTE PTR [rax+0x14],al
   140034282:	add    BYTE PTR [rax+0x1],al
   140034285:	add    BYTE PTR [rax],al
   140034287:	add    al,dl
   140034289:	adc    eax,DWORD PTR [rax]
   14003428b:	rex add DWORD PTR [rax],eax
   14003428e:	add    BYTE PTR [rax],al
   140034290:	adc    eax,DWORD PTR [rax]
   140034292:	add    BYTE PTR [rax],al
   140034294:	add    al,0x0
   140034296:	adc    BYTE PTR [rax],al
	...
   1400342a0:	sbb    al,0xd3
   1400342a2:	add    dh,BYTE PTR [rdi+0x4fc0f586]
   1400342a8:	mov    esp,0x7429f9f5
   1400342ad:	push   rcx
   1400342ae:	cdq    
   1400342af:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400342b0:	adc    BYTE PTR [rax],al
   1400342b2:	add    BYTE PTR [rax],al
   1400342b4:	add    eax,DWORD PTR [rax]
   1400342b6:	(bad)  
	...
   1400342d7:	add    BYTE PTR [rbx],ah
   1400342d9:	add    eax,DWORD PTR [rax]
   1400342db:	add    BYTE PTR [rax],al
   1400342dd:	add    BYTE PTR [rax],al
   1400342df:	add    al,al
   1400342e1:	add    BYTE PTR [rax],al
   1400342e3:	add    BYTE PTR [rax],al
   1400342e5:	add    BYTE PTR [rax],al
   1400342e7:	rex.RX adc r9b,BYTE PTR [rdx+0x1699ba71]
   1400342ee:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400342ef:	xchg   r9,rax
   1400342f1:	pop    rdi
   1400342f2:	lahf   
   1400342f3:	add    eax,0x8b3f9fb7
   1400342f8:	add    DWORD PTR [rax],eax
   1400342fa:	add    BYTE PTR [rax],al
   1400342fc:	add    al,0x0
   1400342fe:	add    DWORD PTR [rax],eax
	...
   140034308:	sbb    ah,ah
   14003430a:	adc    DWORD PTR [rcx+0x5f],esp
   14003430d:	push   rbp
   14003430e:	nop
   14003430f:	rex.RX stos DWORD PTR es:[rdi],eax
   140034311:	adc    eax,DWORD PTR [rbp+0x7a8c4bca]
   140034317:	xchg   ebx,eax
	...
   140034320:	rex.W (bad) 
   140034322:	add    eax,DWORD PTR [rax+0x1]
   140034325:	add    BYTE PTR [rax],al
   140034327:	add    BYTE PTR [rax],bh
   140034329:	(bad)  
   14003432a:	add    eax,DWORD PTR [rax+0x1]
   14003432d:	add    BYTE PTR [rax],al
   14003432f:	add    BYTE PTR [rax+0x140033f],dh
   140034335:	add    BYTE PTR [rax],al
   140034337:	add    al,ah
   140034339:	(bad)  
   14003433a:	add    eax,DWORD PTR [rax+0x1]
   14003433d:	add    BYTE PTR [rax],al
   14003433f:	add    al,bh
   140034341:	(bad)  
   140034342:	add    eax,DWORD PTR [rax+0x1]
   140034345:	add    BYTE PTR [rax],al
   140034347:	add    BYTE PTR [rax],dl
   140034349:	rex add eax,DWORD PTR [rax+0x1]
   14003434d:	add    BYTE PTR [rax],al
   14003434f:	add    BYTE PTR [rax],ch
   140034351:	rex add eax,DWORD PTR [rax+0x1]
   140034355:	add    BYTE PTR [rax],al
   140034357:	add    BYTE PTR [rax],bh
   140034359:	rex add eax,DWORD PTR [rax+0x1]
   14003435d:	add    BYTE PTR [rax],al
   14003435f:	add    BYTE PTR [rax+0x40],al
   140034362:	add    eax,DWORD PTR [rax+0x1]
   140034365:	add    BYTE PTR [rax],al
   140034367:	add    BYTE PTR [rax+0x40],bl
   14003436a:	add    eax,DWORD PTR [rax+0x1]
   14003436d:	add    BYTE PTR [rax],al
   14003436f:	add    BYTE PTR [rax+0x40],ch
   140034372:	add    eax,DWORD PTR [rax+0x1]
   140034375:	add    BYTE PTR [rax],al
   140034377:	add    BYTE PTR [rax+0x1400340],al
   14003437d:	add    BYTE PTR [rax],al
   14003437f:	add    ch,bh
   140034381:	call   rbx
   140034383:	mov    ebx,0x44705a7e
   140034388:	pushf  
   140034389:	(bad)  
   14003438a:	mov    dl,BYTE PTR [rax-0x3cd3719e]
   140034390:	add    eax,0x4000000
   140034395:	add    BYTE PTR [rip+0x0],al        # 0x14003439b
   14003439b:	add    BYTE PTR [rax],al
   14003439d:	add    BYTE PTR [rax],al
   14003439f:	add    BYTE PTR [rdx],dl
   1400343a1:	add    BYTE PTR [rax],al
   1400343a3:	add    BYTE PTR [rdx+rax*1],al
   1400343a6:	sldt   WORD PTR [rax]
   1400343a9:	add    BYTE PTR [rax],al
   1400343ab:	add    BYTE PTR [rax],al
   1400343ad:	add    BYTE PTR [rax],al
   1400343af:	add    BYTE PTR [rsi+0x31],cl
   1400343b2:	mov    bh,0x3
   1400343b4:	mov    edi,0xa14f3030
   1400343b9:	rcr    bh,0x9
   1400343bc:	shl    DWORD PTR [rip+0xf153b],1        # 0x1401258fd
   1400343c2:	add    BYTE PTR [rax],al
   1400343c4:	add    eax,DWORD PTR [rax]
   1400343c6:	or     eax,0x0
   1400343cb:	add    BYTE PTR [rax],al
   1400343cd:	add    BYTE PTR [rax],al
   1400343cf:	add    BYTE PTR [rdx+0x2355f075],bh
   1400343d5:	cmp    edi,DWORD PTR [rbp+0x26]
   1400343d8:	push   rdx
   1400343d9:	loopne 0x140034449
   1400343db:	(bad)  
   1400343dc:	adc    al,0xb7
   1400343de:	out    0x1f,al
   1400343e0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400343e1:	rcl    BYTE PTR [rax+0x44a4e357],cl
   1400343e7:	mov    r11d,0xc4472b6e
   1400343ed:	mov    ch,0xb0
   1400343ef:	test   DWORD PTR [rdx],eax
   1400343f1:	add    BYTE PTR [rax],al
   1400343f3:	add    BYTE PTR [rax+rax*1],al
   1400343f6:	add    al,BYTE PTR [rax]
	...
   140034400:	(bad)  
   140034401:	add    BYTE PTR [rax],al
   140034403:	add    BYTE PTR [rbx],al
   140034405:	add    BYTE PTR [rax+rax*1],cl
	...
   140034410:	cmp    BYTE PTR [rbp+riz*2+0x7c],al
   140034414:	(bad)  
   140034415:	or     ebx,DWORD PTR [rcx+0x45]
   140034418:	mov    bh,0x2
   14003441a:	jge    0x140034450
   14003441c:	rex.WRXB sbb al,0x84
   14003441f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140034420:	(bad)  
   140034421:	repz add eax,DWORD PTR [rax+0x1]
   140034425:	add    BYTE PTR [rax],al
   140034427:	add    al,dl
   140034429:	and    BYTE PTR [rax],al
   14003442b:	rex add DWORD PTR [rax],eax
   14003442e:	add    BYTE PTR [rax],al
   140034430:	push   rax
   140034431:	and    DWORD PTR [rax],eax
   140034433:	rex add DWORD PTR [rax],eax
   140034436:	add    BYTE PTR [rax],al
   140034438:	xor    ah,dh
   14003443a:	add    eax,DWORD PTR [rax+0x1]
   14003443d:	add    BYTE PTR [rax],al
   14003443f:	add    BYTE PTR [rax+0x1400022],dl
   140034445:	add    BYTE PTR [rax],al
   140034447:	add    BYTE PTR [rax],dl
   140034449:	fild   WORD PTR [rdx]
   14003444b:	rex add DWORD PTR [rax],eax
   14003444e:	add    BYTE PTR [rax],al
   140034450:	or     dh,dh
   140034452:	add    eax,DWORD PTR [rax+0x1]
   140034455:	add    BYTE PTR [rax],al
   140034457:	add    al,al
   140034459:	fiadd  WORD PTR [rdx]
   14003445b:	rex add DWORD PTR [rax],eax
   14003445e:	add    BYTE PTR [rax],al
   140034460:	rcr    dh,0x2
   140034463:	rex add DWORD PTR [rax],eax
   140034466:	add    BYTE PTR [rax],al
   140034468:	loopne 0x140034498
   14003446a:	add    BYTE PTR [rax+0x1],al
   14003446d:	add    BYTE PTR [rax],al
   14003446f:	add    BYTE PTR [rax+0x13],ah
   140034472:	add    BYTE PTR [rax+0x1],al
   140034475:	add    BYTE PTR [rax],al
   140034477:	add    BYTE PTR [rax+0x13],ah
   14003447a:	add    BYTE PTR [rax+0x1],al
   14003447d:	add    BYTE PTR [rax],al
   14003447f:	add    BYTE PTR [rax],dh
   140034481:	add    BYTE PTR ss:[rax+0x1],al
   140034485:	add    BYTE PTR [rax],al
   140034487:	add    BYTE PTR [rax+0x2e],al
   14003448a:	add    BYTE PTR [rax+0x1],al
   14003448d:	add    BYTE PTR [rax],al
   14003448f:	add    al,ah
   140034491:	and    eax,DWORD PTR [rax]
   140034493:	rex add DWORD PTR [rax],eax
   140034496:	add    BYTE PTR [rax],al
   140034498:	rcr    dh,0x2
   14003449b:	rex add DWORD PTR [rax],eax
   14003449e:	add    BYTE PTR [rax],al
   1400344a0:	mov    al,0x2d
   1400344a2:	add    BYTE PTR [rax+0x1],al
   1400344a5:	add    BYTE PTR [rax],al
   1400344a7:	add    BYTE PTR [rax+0x2c],al
   1400344aa:	add    BYTE PTR [rax+0x1],al
   1400344ad:	add    BYTE PTR [rax],al
   1400344af:	add    BYTE PTR [rax],dh
   1400344b1:	add    BYTE PTR cs:[rax+0x1],al
   1400344b5:	add    BYTE PTR [rax],al
   1400344b7:	add    al,bh
   1400344b9:	test   BYTE PTR [rbx],0x40
   1400344bc:	add    DWORD PTR [rax],eax
   1400344be:	add    BYTE PTR [rax],al
   1400344c0:	(bad)  
   1400344c1:	add    BYTE PTR [r8+0x1],r8b
   1400344c5:	add    BYTE PTR [rax],al
   1400344c7:	add    BYTE PTR [rax+0x1400045],al
   1400344cd:	add    BYTE PTR [rax],al
   1400344cf:	add    al,ah
   1400344d1:	add    BYTE PTR cs:[rax+0x1],al
   1400344d5:	add    BYTE PTR [rax],al
   1400344d7:	add    BYTE PTR [rax+0x13],ah
   1400344da:	add    BYTE PTR [rax+0x1],al
   1400344dd:	add    BYTE PTR [rax],al
   1400344df:	add    BYTE PTR [rax+0x13],ah
   1400344e2:	add    BYTE PTR [rax+0x1],al
   1400344e5:	add    BYTE PTR [rax],al
   1400344e7:	add    BYTE PTR [rax],dh
   1400344e9:	add    BYTE PTR ss:[rax+0x1],al
   1400344ed:	add    BYTE PTR [rax],al
   1400344ef:	add    BYTE PTR [rax+0x2e],al
   1400344f2:	add    BYTE PTR [rax+0x1],al
   1400344f5:	add    BYTE PTR [rax],al
   1400344f7:	add    BYTE PTR [rax],dl
   1400344f9:	rex.RX add BYTE PTR [rax+0x1],r8b
   1400344fd:	add    BYTE PTR [rax],al
   1400344ff:	add    al,dh
   140034501:	add    BYTE PTR [r8+0x1],r8b
   140034505:	add    BYTE PTR [rax],al
   140034507:	add    BYTE PTR [rax+0x140002d],dh
   14003450d:	add    BYTE PTR [rax],al
   14003450f:	add    BYTE PTR [rax+0x2c],al
   140034512:	add    BYTE PTR [rax+0x1],al
   140034515:	add    BYTE PTR [rax],al
   140034517:	add    BYTE PTR [rax],dh
   140034519:	add    BYTE PTR cs:[rax+0x1],al
   14003451d:	add    BYTE PTR [rax],al
   14003451f:	add    BYTE PTR [rax-0x9],cl
   140034522:	add    eax,DWORD PTR [rax+0x1]
   140034525:	add    BYTE PTR [rax],al
   140034527:	add    BYTE PTR [rax+0x1400047],dh
   14003452d:	add    BYTE PTR [rax],al
   14003452f:	add    al,dh
   140034531:	rex.W add BYTE PTR [rax+0x1],al
   140034535:	add    BYTE PTR [rax],al
   140034537:	add    BYTE PTR [rax],dl
   140034539:	rex.WB add BYTE PTR [r8+0x1],al
   14003453d:	add    BYTE PTR [rax],al
   14003453f:	add    BYTE PTR [rax],dh
   140034541:	rex.WB add BYTE PTR [r8+0x1],al
   140034545:	add    BYTE PTR [rax],al
   140034547:	add    BYTE PTR [rax+0x49],al
   14003454a:	add    BYTE PTR [rax+0x1],al
   14003454d:	add    BYTE PTR [rax],al
   14003454f:	add    al,al
   140034551:	fiadd  WORD PTR [rdx]
   140034553:	rex add DWORD PTR [rax],eax
   140034556:	add    BYTE PTR [rax],al
   140034558:	cmp    dl,bh
   14003455a:	add    eax,DWORD PTR [rax+0x1]
   14003455d:	add    BYTE PTR [rax],al
   14003455f:	add    al,dh
   140034561:	rex.WR add BYTE PTR [rax+0x1],r8b
   140034565:	add    BYTE PTR [rax],al
   140034567:	add    BYTE PTR [rax],dl
   140034569:	rex.WRB add BYTE PTR [r8+0x1],r8b
   14003456d:	add    BYTE PTR [rax],al
   14003456f:	add    BYTE PTR [rax],ah
   140034571:	rex.WRB add BYTE PTR [r8+0x1],r8b
   140034575:	add    BYTE PTR [rax],al
   140034577:	add    al,dl
   140034579:	push   rcx
   14003457a:	add    BYTE PTR [rax+0x1],al
   14003457d:	add    BYTE PTR [rax],al
   14003457f:	add    BYTE PTR [rax],dl
   140034581:	rex.WRX add BYTE PTR [rax+0x1],r8b
   140034585:	add    BYTE PTR [rax],al
   140034587:	add    BYTE PTR [rax],dh
   140034589:	rex.WRB add BYTE PTR [r8+0x1],r8b
   14003458d:	add    BYTE PTR [rax],al
   14003458f:	add    BYTE PTR [rax],cl
   140034591:	stc    
   140034592:	add    eax,DWORD PTR [rax+0x1]
   140034595:	add    BYTE PTR [rax],al
   140034597:	add    BYTE PTR [rax+0x1400048],dh
   14003459d:	add    BYTE PTR [rax],al
   14003459f:	add    al,dh
   1400345a1:	rex.W add BYTE PTR [rax+0x1],al
   1400345a5:	add    BYTE PTR [rax],al
   1400345a7:	add    BYTE PTR [rax],dl
   1400345a9:	rex.WB add BYTE PTR [r8+0x1],al
   1400345ad:	add    BYTE PTR [rax],al
   1400345af:	add    BYTE PTR [rax],dh
   1400345b1:	rex.WB add BYTE PTR [r8+0x1],al
   1400345b5:	add    BYTE PTR [rax],al
   1400345b7:	add    BYTE PTR [rax+0x49],al
   1400345ba:	add    BYTE PTR [rax+0x1],al
   1400345bd:	add    BYTE PTR [rax],al
   1400345bf:	add    al,dl
   1400345c1:	rex.WB add BYTE PTR [r8+0x1],al
   1400345c5:	add    BYTE PTR [rax],al
   1400345c7:	add    BYTE PTR [rax],ah
   1400345c9:	rex.WX add BYTE PTR [rax+0x1],al
   1400345cd:	add    BYTE PTR [rax],al
   1400345cf:	add    BYTE PTR [rax],ah
   1400345d1:	rex.WX add BYTE PTR [rax+0x1],al
   1400345d5:	add    BYTE PTR [rax],al
   1400345d7:	add    al,ah
   1400345d9:	rex.WR add BYTE PTR [rax+0x1],r8b
   1400345dd:	add    BYTE PTR [rax],al
   1400345df:	add    BYTE PTR [rax+0x70],ah
   1400345e2:	add    BYTE PTR [rax+0x1],al
   1400345e5:	add    BYTE PTR [rax],al
   1400345e7:	add    BYTE PTR [rax],ah
   1400345e9:	test   DWORD PTR [rbx],0x140
   1400345ef:	add    BYTE PTR [rax],dl
   1400345f1:	add    BYTE PTR [rax+0x1],al
   1400345f5:	add    BYTE PTR [rax],al
   1400345f7:	add    BYTE PTR [rax],ah
   1400345f9:	rex.WRB add BYTE PTR [r8+0x1],r8b
   1400345fd:	add    BYTE PTR [rax],al
   1400345ff:	add    BYTE PTR [rax+0x43],al
   140034602:	add    BYTE PTR [rax+0x1],al
   140034605:	add    BYTE PTR [rax],al
   140034607:	add    BYTE PTR [rax],ah
   140034609:	add    BYTE PTR [rax+0x1],r8b
   14003460d:	add    BYTE PTR [rax],al
   14003460f:	add    BYTE PTR [rax+0x13],ah
   140034612:	add    BYTE PTR [rax+0x1],al
   140034615:	add    BYTE PTR [rax],al
   140034617:	add    BYTE PTR [rax+0x140003a],al
   14003461d:	add    BYTE PTR [rax],al
   14003461f:	add    BYTE PTR [rax+0x14003fa],dh
   140034625:	add    BYTE PTR [rax],al
   140034627:	add    BYTE PTR [rax],dl
   140034629:	rex.WRB add BYTE PTR [r8+0x1],r8b
   14003462d:	add    BYTE PTR [rax],al
   14003462f:	add    BYTE PTR [rax],ah
   140034631:	rex.WRB add BYTE PTR [r8+0x1],r8b
   140034635:	add    BYTE PTR [rax],al
   140034637:	add    BYTE PTR [rax+0x70],dh
   14003463a:	add    BYTE PTR [rax+0x1],al
   14003463d:	add    BYTE PTR [rax],al
   14003463f:	add    BYTE PTR [rax+0x13],ah
   140034642:	add    BYTE PTR [rax+0x1],al
   140034645:	add    BYTE PTR [rax],al
   140034647:	add    BYTE PTR [rax+0x13],ah
   14003464a:	add    BYTE PTR [rax+0x1],al
   14003464d:	add    BYTE PTR [rax],al
   14003464f:	add    BYTE PTR [rax+0x1400070],al
   140034655:	add    BYTE PTR [rax],al
   140034657:	add    BYTE PTR [rax+0x14003fd],ch
   14003465d:	add    BYTE PTR [rax],al
   14003465f:	add    BYTE PTR [rax+0x14000d0],ah
   140034665:	add    BYTE PTR [rax],al
   140034667:	add    BYTE PTR [rax+0x14000d7],dl
   14003466d:	add    BYTE PTR [rax],al
   14003466f:	add    BYTE PTR [rax-0x29],dh
   140034672:	add    BYTE PTR [rax+0x1],al
   140034675:	add    BYTE PTR [rax],al
   140034677:	add    al,dl
   140034679:	add    DWORD PTR [rax],0x140
   14003467f:	add    BYTE PTR [rax],dh
   140034681:	add    BYTE PTR [rax],0x40
   140034684:	add    DWORD PTR [rax],eax
   140034686:	add    BYTE PTR [rax],al
   140034688:	rol    BYTE PTR [rax+0x14000],1
   14003468e:	add    BYTE PTR [rax],al
   140034690:	sar    ch,1
   140034692:	add    eax,DWORD PTR [rax+0x1]
   140034695:	add    BYTE PTR [rax],al
   140034697:	add    BYTE PTR [rax+0x14000d7],al
   14003469d:	add    BYTE PTR [rax],al
   14003469f:	add    BYTE PTR [rax-0x29],ah
   1400346a2:	add    BYTE PTR [rax+0x1],al
   1400346a5:	add    BYTE PTR [rax],al
   1400346a7:	add    BYTE PTR [rax+0x1400082],dh
   1400346ad:	add    BYTE PTR [rax],al
   1400346af:	add    al,bh
   1400346b1:	std    
   1400346b2:	add    eax,DWORD PTR [rax+0x1]
   1400346b5:	add    BYTE PTR [rax],al
   1400346b7:	add    BYTE PTR [rax],dl
   1400346b9:	rol    BYTE PTR [rax],1
   1400346bb:	rex add DWORD PTR [rax],eax
   1400346be:	add    BYTE PTR [rax],al
   1400346c0:	xor    al,dl
   1400346c2:	add    BYTE PTR [rax+0x1],al
   1400346c5:	add    BYTE PTR [rax],al
   1400346c7:	add    al,ah
   1400346c9:	scas   eax,DWORD PTR es:[rdi]
   1400346ca:	add    BYTE PTR [rax+0x1],al
   1400346cd:	add    BYTE PTR [rax],al
   1400346cf:	add    BYTE PTR [rax],dh
   1400346d1:	rol    DWORD PTR [rax],1
   1400346d3:	rex add DWORD PTR [rax],eax
   1400346d6:	add    BYTE PTR [rax],al
   1400346d8:	and    dh,bh
   1400346da:	add    eax,DWORD PTR [rax+0x1]
   1400346dd:	add    BYTE PTR [rax],al
   1400346df:	add    al,al
   1400346e1:	fiadd  WORD PTR [rdx]
   1400346e3:	rex add DWORD PTR [rax],eax
   1400346e6:	add    BYTE PTR [rax],al
   1400346e8:	rcr    dh,0x2
   1400346eb:	rex add DWORD PTR [rax],eax
   1400346ee:	add    BYTE PTR [rax],al
   1400346f0:	rcr    dh,0x2
   1400346f3:	rex add DWORD PTR [rax],eax
   1400346f6:	add    BYTE PTR [rax],al
   1400346f8:	rol    BYTE PTR [rcx+0x14000],1
   1400346fe:	add    BYTE PTR [rax],al
   140034700:	xor    BYTE PTR [rax+0x14000],al
   140034706:	add    BYTE PTR [rax],al
   140034708:	rol    BYTE PTR [rax+0x14000],1
   14003470e:	add    BYTE PTR [rax],al
   140034710:	rex.W inc BYTE PTR [rbx]
   140034713:	rex add DWORD PTR [rax],eax
   140034716:	add    BYTE PTR [rax],al
   140034718:	rcr    dh,0x2
   14003471b:	rex add DWORD PTR [rax],eax
   14003471e:	add    BYTE PTR [rax],al
   140034720:	rcr    dh,0x2
   140034723:	rex add DWORD PTR [rax],eax
   140034726:	add    BYTE PTR [rax],al
   140034728:	mov    al,0x82
   14003472a:	add    BYTE PTR [rax+0x1],al
   14003472d:	add    BYTE PTR [rax],al
   14003472f:	add    BYTE PTR [rax-0x2],dh
   140034732:	add    eax,DWORD PTR [rax+0x1]
   140034735:	add    BYTE PTR [rax],al
   140034737:	add    al,al
   140034739:	fiadd  WORD PTR [rdx]
   14003473b:	rex add DWORD PTR [rax],eax
   14003473e:	add    BYTE PTR [rax],al
   140034740:	rcr    dh,0x2
   140034743:	rex add DWORD PTR [rax],eax
   140034746:	add    BYTE PTR [rax],al
   140034748:	loopne 0x1400346f9
   14003474a:	add    BYTE PTR [rax+0x1],al
   14003474d:	add    BYTE PTR [rax],al
   14003474f:	add    al,dl
   140034751:	js     0x140034753
   140034753:	rex add DWORD PTR [rax],eax
   140034756:	add    BYTE PTR [rax],al
   140034758:	sbb    BYTE PTR [rdx],al
   14003475a:	add    al,0x40
   14003475c:	add    DWORD PTR [rax],eax
   14003475e:	add    BYTE PTR [rax],al
   140034760:	movabs al,ds:0xc000000001400110
   140034769:	adc    eax,DWORD PTR [rcx]
   14003476b:	rex add DWORD PTR [rax],eax
   14003476e:	add    BYTE PTR [rax],al
   140034770:	mov    al,0x13
   140034772:	add    DWORD PTR [rax+0x1],eax
   140034775:	add    BYTE PTR [rax],al
   140034777:	add    BYTE PTR [rax+0x4],al
   14003477a:	add    DWORD PTR [rax+0x1],eax
   14003477d:	add    BYTE PTR [rax],al
   14003477f:	add    BYTE PTR [rax],ah
   140034781:	rex.WRB add BYTE PTR [r8+0x1],r8b
   140034785:	add    BYTE PTR [rax],al
   140034787:	add    BYTE PTR [rax-0x3],dl
   14003478a:	add    BYTE PTR [rax+0x1],al
   14003478d:	add    BYTE PTR [rax],al
   14003478f:	add    BYTE PTR [rax+0x2],dl
   140034792:	add    DWORD PTR [rax+0x1],eax
   140034795:	add    BYTE PTR [rax],al
   140034797:	add    BYTE PTR [rax],ah
   140034799:	rex.WRB add BYTE PTR [r8+0x1],r8b
   14003479d:	add    BYTE PTR [rax],al
   14003479f:	add    al,al
   1400347a1:	std    
   1400347a2:	add    BYTE PTR [rax+0x1],al
   1400347a5:	add    BYTE PTR [rax],al
   1400347a7:	add    BYTE PTR [rax+0x2],al
   1400347aa:	add    al,0x40
   1400347ac:	add    DWORD PTR [rax],eax
   1400347ae:	add    BYTE PTR [rax],al
   1400347b0:	adc    BYTE PTR [rax],dl
   1400347b2:	add    DWORD PTR [rax+0x1],eax
   1400347b5:	add    BYTE PTR [rax],al
   1400347b7:	add    BYTE PTR [rax],dh
   1400347b9:	adc    BYTE PTR [rcx],al
   1400347bb:	rex add DWORD PTR [rax],eax
   1400347be:	add    BYTE PTR [rax],al
   1400347c0:	shl    ah,1
   1400347c2:	add    BYTE PTR [rax+0x1],al
   1400347c5:	add    BYTE PTR [rax],al
   1400347c7:	add    BYTE PTR [rax-0x5],dl
   1400347ca:	add    BYTE PTR [rax+0x1],al
   1400347cd:	add    BYTE PTR [rax],al
   1400347cf:	add    al,ah
   1400347d1:	sti    
   1400347d2:	add    BYTE PTR [rax+0x1],al
   1400347d5:	add    BYTE PTR [rax],al
   1400347d7:	add    BYTE PTR [rax-0x4],ah
   1400347da:	add    BYTE PTR [rax+0x1],al
   1400347dd:	add    BYTE PTR [rax],al
   1400347df:	add    BYTE PTR [rax],al
   1400347e1:	(bad)  
   1400347e2:	add    DWORD PTR [rax+0x1],eax
   1400347e5:	add    BYTE PTR [rax],al
   1400347e7:	add    BYTE PTR [rax+0xe],dl
   1400347ea:	add    DWORD PTR [rax+0x1],eax
   1400347ed:	add    BYTE PTR [rax],al
   1400347ef:	add    al,al
   1400347f1:	adc    BYTE PTR [rcx],al
   1400347f3:	rex add DWORD PTR [rax],eax
   1400347f6:	add    BYTE PTR [rax],al
   1400347f8:	push   0x1400402
   1400347fd:	add    BYTE PTR [rax],al
   1400347ff:	add    al,al
   140034801:	fiadd  WORD PTR [rdx]
   140034803:	rex add DWORD PTR [rax],eax
   140034806:	add    BYTE PTR [rax],al
   140034808:	rcr    dh,0x2
   14003480b:	rex add DWORD PTR [rax],eax
   14003480e:	add    BYTE PTR [rax],al
   140034810:	rcr    dh,0x2
   140034813:	rex add DWORD PTR [rax],eax
   140034816:	add    BYTE PTR [rax],al
   140034818:	add    al,0x1
   14003481b:	rex add DWORD PTR [rax],eax
   14003481e:	add    BYTE PTR [rax],al
   140034820:	and    BYTE PTR [rbp+0x0],cl
   140034823:	rex add DWORD PTR [rax],eax
   140034826:	add    BYTE PTR [rax],al
   140034828:	push   rax
   140034829:	std    
   14003482a:	add    BYTE PTR [rax+0x1],al
   14003482d:	add    BYTE PTR [rax],al
   14003482f:	add    BYTE PTR [rax+0x2],dl
   140034832:	add    DWORD PTR [rax+0x1],eax
   140034835:	add    BYTE PTR [rax],al
   140034837:	add    BYTE PTR [rax],ah
   140034839:	rex.WRB add BYTE PTR [r8+0x1],r8b
   14003483d:	add    BYTE PTR [rax],al
   14003483f:	add    al,al
   140034841:	std    
   140034842:	add    BYTE PTR [rax+0x1],al
   140034845:	add    BYTE PTR [rax],al
   140034847:	add    BYTE PTR [rax+0x1400402],dl
   14003484d:	add    BYTE PTR [rax],al
   14003484f:	add    al,al
   140034851:	fiadd  WORD PTR [rdx]
   140034853:	rex add DWORD PTR [rax],eax
   140034856:	add    BYTE PTR [rax],al
   140034858:	rcr    dh,0x2
   14003485b:	rex add DWORD PTR [rax],eax
   14003485e:	add    BYTE PTR [rax],al
   140034860:	shl    ah,1
   140034862:	add    BYTE PTR [rax+0x1],al
   140034865:	add    BYTE PTR [rax],al
   140034867:	add    BYTE PTR [rax-0x5],dl
   14003486a:	add    BYTE PTR [rax+0x1],al
   14003486d:	add    BYTE PTR [rax],al
   14003486f:	add    al,ah
   140034871:	sti    
   140034872:	add    BYTE PTR [rax+0x1],al
   140034875:	add    BYTE PTR [rax],al
   140034877:	add    BYTE PTR [rax-0x4],ah
   14003487a:	add    BYTE PTR [rax+0x1],al
   14003487d:	add    BYTE PTR [rax],al
   14003487f:	add    BYTE PTR [rax],al
   140034881:	(bad)  
   140034882:	add    DWORD PTR [rax+0x1],eax
   140034885:	add    BYTE PTR [rax],al
   140034887:	add    BYTE PTR [rax+0xe],dl
   14003488a:	add    DWORD PTR [rax+0x1],eax
   14003488d:	add    BYTE PTR [rax],al
   14003488f:	add    BYTE PTR [rax],dl
   140034891:	add    eax,DWORD PTR [rax+rax*2]
   140034894:	add    DWORD PTR [rax],eax
   140034896:	add    BYTE PTR [rax],al
   140034898:	loopne 0x1400348b0
   14003489a:	add    DWORD PTR [rax+0x1],eax
   14003489d:	add    BYTE PTR [rax],al
   14003489f:	add    BYTE PTR [rax+0x1400403],cl
   1400348a5:	add    BYTE PTR [rax],al
   1400348a7:	add    BYTE PTR [rax+0x28],dl
   1400348aa:	add    DWORD PTR [rax+0x1],eax
   1400348ad:	add    BYTE PTR [rax],al
   1400348af:	add    BYTE PTR [rax+0x1400404],al
   1400348b5:	add    BYTE PTR [rax],al
   1400348b7:	add    BYTE PTR [rax+0x46],al
   1400348ba:	add    DWORD PTR [rax+0x1],eax
   1400348bd:	add    BYTE PTR [rax],al
   1400348bf:	add    BYTE PTR [rax+0x4],bl
   1400348c2:	add    al,0x40
   1400348c4:	add    DWORD PTR [rax],eax
   1400348c6:	add    BYTE PTR [rax],al
   1400348c8:	and    BYTE PTR [rcx+rax*1],ch
   1400348cb:	rex add DWORD PTR [rax],eax
   1400348ce:	add    BYTE PTR [rax],al
   1400348d0:	sbb    BYTE PTR [rsi],al
   1400348d2:	add    al,0x40
   1400348d4:	add    DWORD PTR [rax],eax
   1400348d6:	add    BYTE PTR [rax],al
   1400348d8:	and    BYTE PTR [rbp+0x14001],cl
   1400348de:	add    BYTE PTR [rax],al
   1400348e0:	rex (bad) 
   1400348e2:	add    al,0x40
   1400348e4:	add    DWORD PTR [rax],eax
   1400348e6:	add    BYTE PTR [rax],al
   1400348e8:	lock mov al,BYTE PTR [rcx]
   1400348eb:	rex add DWORD PTR [rax],eax
   1400348ee:	add    BYTE PTR [rax],al
   1400348f0:	nop
   1400348f1:	mov    eax,DWORD PTR [rcx]
   1400348f3:	rex add DWORD PTR [rax],eax
   1400348f6:	add    BYTE PTR [rax],al
   1400348f8:	(bad)  
   1400348f9:	adc    eax,DWORD PTR [rax]
   1400348fb:	rex add DWORD PTR [rax],eax
   1400348fe:	add    BYTE PTR [rax],al
   140034900:	nop
   140034901:	(bad)  
   140034902:	add    al,0x40
   140034904:	add    DWORD PTR [rax],eax
   140034906:	add    BYTE PTR [rax],al
   140034908:	push   rax
   140034909:	test   BYTE PTR [rcx],al
   14003490b:	rex add DWORD PTR [rax],eax
   14003490e:	add    BYTE PTR [rax],al
   140034910:	push   rax
   140034911:	jns    0x140034914
   140034913:	rex add DWORD PTR [rax],eax
   140034916:	add    BYTE PTR [rax],al
   140034918:	push   0x1400406
   14003491d:	add    BYTE PTR [rax],al
   14003491f:	add    al,al
   140034921:	jl     0x140034924
   140034923:	rex add DWORD PTR [rax],eax
   140034926:	add    BYTE PTR [rax],al
   140034928:	(bad)  
   140034929:	adc    eax,DWORD PTR [rax]
   14003492b:	rex add DWORD PTR [rax],eax
   14003492e:	add    BYTE PTR [rax],al
   140034930:	adc    BYTE PTR [rbp+0x1],bh
   140034933:	rex add DWORD PTR [rax],eax
   140034936:	add    BYTE PTR [rax],al
   140034938:	lock or BYTE PTR [rax+rax*2],al
   14003493c:	add    DWORD PTR [rax],eax
   14003493e:	add    BYTE PTR [rax],al
   140034940:	jo     0x1400348f8
   140034942:	add    DWORD PTR [rax+0x1],eax
   140034945:	add    BYTE PTR [rax],al
   140034947:	add    BYTE PTR [rax+0x14001b3],dl
   14003494d:	add    BYTE PTR [rax],al
   14003494f:	add    BYTE PTR [rax],ah
   140034951:	fld    DWORD PTR [rcx]
   140034953:	rex add DWORD PTR [rax],eax
   140034956:	add    BYTE PTR [rax],al
   140034958:	sbb    BYTE PTR [rcx],cl
   14003495a:	add    al,0x40
   14003495c:	add    DWORD PTR [rax],eax
   14003495e:	add    BYTE PTR [rax],al
   140034960:	adc    BYTE PTR [rax],dl
   140034962:	add    DWORD PTR [rax+0x1],eax
   140034965:	add    BYTE PTR [rax],al
   140034967:	add    BYTE PTR [rax+0x14001a9],al
   14003496d:	add    BYTE PTR [rax],al
   14003496f:	add    BYTE PTR [rax-0x42],ah
   140034972:	add    DWORD PTR [rax+0x1],eax
   140034975:	add    BYTE PTR [rax],al
   140034977:	add    al,al
   140034979:	mov    esp,0x14001
   14003497e:	add    BYTE PTR [rax],al
   140034980:	lock rol BYTE PTR [rcx],0x40
   140034984:	add    DWORD PTR [rax],eax
   140034986:	add    BYTE PTR [rax],al
   140034988:	push   rax
   140034989:	retf   
   14003498a:	add    DWORD PTR [rax+0x1],eax
   14003498d:	add    BYTE PTR [rax],al
   14003498f:	add    BYTE PTR [rax],ah
   140034991:	rol    DWORD PTR [rcx],0x40
   140034994:	add    DWORD PTR [rax],eax
   140034996:	add    BYTE PTR [rax],al
   140034998:	rex or DWORD PTR [rax+rax*2],eax
   14003499c:	add    DWORD PTR [rax],eax
   14003499e:	add    BYTE PTR [rax],al
   1400349a0:	rcr    dh,0x2
   1400349a3:	rex add DWORD PTR [rax],eax
   1400349a6:	add    BYTE PTR [rax],al
   1400349a8:	rcr    dh,0x2
   1400349ab:	rex add DWORD PTR [rax],eax
   1400349ae:	add    BYTE PTR [rax],al
   1400349b0:	push   rax
   1400349b1:	test   eax,0x14001
   1400349b6:	add    BYTE PTR [rax],al
   1400349b8:	clc    
   1400349b9:	or     eax,DWORD PTR [rax+rax*2]
   1400349bc:	add    DWORD PTR [rax],eax
   1400349be:	add    BYTE PTR [rax],al
   1400349c0:	rcr    dh,0x2
   1400349c3:	rex add DWORD PTR [rax],eax
   1400349c6:	add    BYTE PTR [rax],al
   1400349c8:	rcr    dh,0x2
   1400349cb:	rex add DWORD PTR [rax],eax
   1400349ce:	add    BYTE PTR [rax],al
   1400349d0:	mov    al,0xf9
   1400349d2:	add    DWORD PTR [rax+0x1],eax
   1400349d5:	add    BYTE PTR [rax],al
   1400349d7:	add    BYTE PTR [rax],dh
   1400349d9:	or     eax,DWORD PTR [rax+rax*2]
   1400349dc:	add    DWORD PTR [rax],eax
   1400349de:	add    BYTE PTR [rax],al
   1400349e0:	movabs al,ds:0x58000000014001f9
   1400349e9:	or     eax,DWORD PTR [rax+rax*2]
   1400349ec:	add    DWORD PTR [rax],eax
   1400349ee:	add    BYTE PTR [rax],al
   1400349f0:	nop
   1400349f1:	stc    
   1400349f2:	add    DWORD PTR [rax+0x1],eax
   1400349f5:	add    BYTE PTR [rax],al
   1400349f7:	add    BYTE PTR [rax-0x7],dh
   1400349fa:	add    DWORD PTR [rax+0x1],eax
   1400349fd:	add    BYTE PTR [rax],al
   1400349ff:	add    BYTE PTR [rax+0x14001f9],al
   140034a05:	add    BYTE PTR [rax],al
   140034a07:	add    BYTE PTR [rax],al
   140034a09:	lock add DWORD PTR [rax+0x1],eax
   140034a0d:	add    BYTE PTR [rax],al
   140034a0f:	add    BYTE PTR [rax+0x14001f2],dh
   140034a15:	add    BYTE PTR [rax],al
   140034a17:	add    BYTE PTR [rax+0x14001f1],al
   140034a1d:	add    BYTE PTR [rax],al
   140034a1f:	add    BYTE PTR [rax+0x14001f1],dh
   140034a25:	add    BYTE PTR [rax],al
   140034a27:	add    BYTE PTR [rax],al
   140034a29:	repnz add DWORD PTR [rax+0x1],eax
   140034a2d:	add    BYTE PTR [rax],al
   140034a2f:	add    BYTE PTR [rax-0xd],ah
   140034a32:	add    DWORD PTR [rax+0x1],eax
   140034a35:	add    BYTE PTR [rax],al
   140034a37:	add    BYTE PTR [rax+0x14001f3],dl
   140034a3d:	add    BYTE PTR [rax],al
   140034a3f:	add    BYTE PTR [rax+0x14001f3],dh
   140034a45:	add    BYTE PTR [rax],al
   140034a47:	add    al,dl
   140034a49:	repz add DWORD PTR [rax+0x1],eax
   140034a4d:	add    BYTE PTR [rax],al
   140034a4f:	add    al,dh
   140034a51:	cmc    
   140034a52:	add    DWORD PTR [rax+0x1],eax
   140034a55:	add    BYTE PTR [rax],al
   140034a57:	add    BYTE PTR [rax],dl
   140034a59:	test   BYTE PTR [rcx],0x40
   140034a5c:	add    DWORD PTR [rax],eax
   140034a5e:	add    BYTE PTR [rax],al
   140034a60:	shl    dh,1
   140034a62:	add    DWORD PTR [rax+0x1],eax
   140034a65:	add    BYTE PTR [rax],al
   140034a67:	add    BYTE PTR [rax+0x140040b],al
   140034a6d:	add    BYTE PTR [rax],al
   140034a6f:	add    al,al
   140034a71:	fiadd  DWORD PTR [rcx]
   140034a73:	rex add DWORD PTR [rax],eax
   140034a76:	add    BYTE PTR [rax],al
   140034a78:	lock fiadd DWORD PTR [rcx]
   140034a7b:	rex add DWORD PTR [rax],eax
   140034a7e:	add    BYTE PTR [rax],al
   140034a80:	adc    ch,bl
   140034a82:	add    DWORD PTR [rax+0x1],eax
   140034a85:	add    BYTE PTR [rax],al
   140034a87:	add    BYTE PTR [rax-0x16],ah
   140034a8a:	add    DWORD PTR [rax+0x1],eax
   140034a8d:	add    BYTE PTR [rax],al
   140034a8f:	add    BYTE PTR [rax-0x15],al
   140034a92:	add    DWORD PTR [rax+0x1],eax
   140034a95:	add    BYTE PTR [rax],al
   140034a97:	add    BYTE PTR [rax],dh
   140034a99:	in     al,dx
   140034a9a:	add    DWORD PTR [rax+0x1],eax
   140034a9d:	add    BYTE PTR [rax],al
   140034a9f:	add    BYTE PTR [rax],ah
   140034aa1:	in     eax,dx
   140034aa2:	add    DWORD PTR [rax+0x1],eax
   140034aa5:	add    BYTE PTR [rax],al
   140034aa7:	add    al,al
   140034aa9:	out    dx,al
   140034aaa:	add    DWORD PTR [rax+0x1],eax
   140034aad:	add    BYTE PTR [rax],al
   140034aaf:	add    al,ah
   140034ab1:	out    dx,al
   140034ab2:	add    DWORD PTR [rax+0x1],eax
   140034ab5:	add    BYTE PTR [rax],al
   140034ab7:	add    BYTE PTR [rax],ah
   140034ab9:	out    dx,eax
   140034aba:	add    DWORD PTR [rax+0x1],eax
   140034abd:	add    BYTE PTR [rax],al
   140034abf:	add    BYTE PTR [rax],ah
   140034ac1:	clc    
   140034ac2:	add    DWORD PTR [rax+0x1],eax
   140034ac5:	add    BYTE PTR [rax],al
   140034ac7:	add    al,dl
   140034ac9:	or     eax,0x14004
   140034ace:	add    BYTE PTR [rax],al
   140034ad0:	rcl    BYTE PTR [rbx],0x1
   140034ad3:	rex add DWORD PTR [rax],eax
   140034ad6:	add    BYTE PTR [rax],al
   140034ad8:	and    BYTE PTR [rax],dl
   140034ada:	add    al,BYTE PTR [rax+0x1]
   140034add:	add    BYTE PTR [rax],al
   140034adf:	add    BYTE PTR [rax+0xb],al
   140034ae2:	add    al,BYTE PTR [rax+0x1]
   140034ae5:	add    BYTE PTR [rax],al
   140034ae7:	add    BYTE PTR [rax],dl
   140034ae9:	or     eax,0x14002
   140034aee:	add    BYTE PTR [rax],al
   140034af0:	loopne 0x140034aff
   140034af2:	add    al,BYTE PTR [rax+0x1]
   140034af5:	add    BYTE PTR [rax],al
   140034af7:	add    BYTE PTR [rax+0x140020f],ah
   140034afd:	add    BYTE PTR [rax],al
   140034aff:	add    al,bh
   140034b01:	or     eax,0x14004
   140034b06:	add    BYTE PTR [rax],al
   140034b08:	adc    BYTE PTR [rax],dl
   140034b0a:	add    DWORD PTR [rax+0x1],eax
   140034b0d:	add    BYTE PTR [rax],al
   140034b0f:	add    al,ah
   140034b11:	stc    
   140034b12:	add    DWORD PTR [rax+0x1],eax
   140034b15:	add    BYTE PTR [rax],al
   140034b17:	add    BYTE PTR [rax+0x14001fd],dl
   140034b1d:	add    BYTE PTR [rax],al
   140034b1f:	add    al,ah
   140034b21:	add    eax,0x14002
   140034b26:	add    BYTE PTR [rax],al
   140034b28:	rex (bad) 
   140034b2a:	add    al,BYTE PTR [rax+0x1]
   140034b2d:	add    BYTE PTR [rax],al
   140034b2f:	add    al,al
   140034b31:	cli    
   140034b32:	add    DWORD PTR [rax+0x1],eax
   140034b35:	add    BYTE PTR [rax],al
   140034b37:	add    BYTE PTR [rax+0x1400412],dh
   140034b3d:	add    BYTE PTR [rax],al
   140034b3f:	add    BYTE PTR [rax+0x2e],dh
   140034b42:	add    al,BYTE PTR [rax+0x1]
   140034b45:	add    BYTE PTR [rax],al
   140034b47:	add    BYTE PTR [rax+0x140022e],ah
   140034b4d:	add    BYTE PTR [rax],al
   140034b4f:	add    al,al
   140034b51:	fiadd  WORD PTR [rdx]
   140034b53:	rex add DWORD PTR [rax],eax
   140034b56:	add    BYTE PTR [rax],al
   140034b58:	rcr    dh,0x2
   140034b5b:	rex add DWORD PTR [rax],eax
   140034b5e:	add    BYTE PTR [rax],al
   140034b60:	rcr    dh,0x2
   140034b63:	rex add DWORD PTR [rax],eax
   140034b66:	add    BYTE PTR [rax],al
   140034b68:	rcr    dh,0x2
   140034b6b:	rex add DWORD PTR [rax],eax
   140034b6e:	add    BYTE PTR [rax],al
   140034b70:	rcr    dh,0x2
   140034b73:	rex add DWORD PTR [rax],eax
   140034b76:	add    BYTE PTR [rax],al
   140034b78:	and    BYTE PTR [rdi],ch
   140034b7a:	add    al,BYTE PTR [rax+0x1]
   140034b7d:	add    BYTE PTR [rax],al
   140034b7f:	add    al,al
   140034b81:	adc    DWORD PTR [rax+rax*2],eax
   140034b84:	add    DWORD PTR [rax],eax
   140034b86:	add    BYTE PTR [rax],al
   140034b88:	rex (bad) 
   140034b8a:	add    al,BYTE PTR [rax+0x1]
   140034b8d:	add    BYTE PTR [rax],al
   140034b8f:	add    al,dh
   140034b91:	adc    eax,DWORD PTR [rdx]
   140034b93:	rex add DWORD PTR [rax],eax
   140034b96:	add    BYTE PTR [rax],al
   140034b98:	call   0x141434fae
   140034b9d:	add    BYTE PTR [rax],al
   140034b9f:	add    BYTE PTR [rax],al
   140034ba1:	(bad)  
   140034ba2:	add    al,BYTE PTR [rax+0x1]
   140034ba5:	add    BYTE PTR [rax],al
   140034ba7:	add    BYTE PTR [rax],dh
   140034ba9:	adc    BYTE PTR [rdx],al
   140034bab:	rex add DWORD PTR [rax],eax
   140034bae:	add    BYTE PTR [rax],al
   140034bb0:	adc    BYTE PTR [rdx],dl
   140034bb2:	add    al,0x40
   140034bb4:	add    DWORD PTR [rax],eax
   140034bb6:	add    BYTE PTR [rax],al
   140034bb8:	rcl    BYTE PTR [rip+0x14002],0x0        # 0x140048bc1
   140034bbf:	add    BYTE PTR [rax+0x1400210],ah
   140034bc5:	add    BYTE PTR [rax],al
   140034bc7:	add    BYTE PTR [rax],bh
   140034bc9:	adc    al,BYTE PTR [rax+rax*2]
   140034bcc:	add    DWORD PTR [rax],eax
   140034bce:	add    BYTE PTR [rax],al
   140034bd0:	adc    BYTE PTR [rip+0x14002],0x0        # 0x140048bd9
   140034bd7:	add    BYTE PTR [rax+0x1400212],ah
   140034bdd:	add    BYTE PTR [rax],al
   140034bdf:	add    BYTE PTR [rax+0x12],ah
   140034be2:	add    al,0x40
   140034be4:	add    DWORD PTR [rax],eax
   140034be6:	add    BYTE PTR [rax],al
   140034be8:	rex adc eax,0x14002
   140034bee:	add    BYTE PTR [rax],al
   140034bf0:	push   rax
   140034bf1:	adc    eax,DWORD PTR [rdx]
   140034bf3:	rex add DWORD PTR [rax],eax
   140034bf6:	add    BYTE PTR [rax],al
   140034bf8:	mov    BYTE PTR [rdx],dl
   140034bfa:	add    al,0x40
   140034bfc:	add    DWORD PTR [rax],eax
   140034bfe:	add    BYTE PTR [rax],al
   140034c00:	add    BYTE PTR [rip+0x14002],dl        # 0x140048c08
   140034c06:	add    BYTE PTR [rax],al
   140034c08:	movabs al,ds:0xd800000001400213
   140034c11:	adc    al,BYTE PTR [rax+rax*2]
   140034c14:	add    DWORD PTR [rax],eax
   140034c16:	add    BYTE PTR [rax],al
   140034c18:	jo     0x140034c48
   140034c1a:	add    al,BYTE PTR [rax+0x1]
   140034c1d:	add    BYTE PTR [rax],al
   140034c1f:	add    BYTE PTR [rax+0x140022e],ah
   140034c25:	add    BYTE PTR [rax],al
   140034c27:	add    BYTE PTR [rax],ah
   140034c29:	sbb    al,0x2
   140034c2b:	rex add DWORD PTR [rax],eax
   140034c2e:	add    BYTE PTR [rax],al
   140034c30:	lock (bad) 
   140034c32:	add    al,BYTE PTR [rax+0x1]
   140034c35:	add    BYTE PTR [rax],al
   140034c37:	add    al,dl
   140034c39:	sub    eax,DWORD PTR [rdx]
   140034c3b:	rex add DWORD PTR [rax],eax
   140034c3e:	add    BYTE PTR [rax],al
   140034c40:	lock sbb al,BYTE PTR [rdx]
   140034c43:	rex add DWORD PTR [rax],eax
   140034c46:	add    BYTE PTR [rax],al
   140034c48:	and    BYTE PTR [rdx],bl
   140034c4a:	add    al,BYTE PTR [rax+0x1]
   140034c4d:	add    BYTE PTR [rax],al
   140034c4f:	add    al,al
   140034c51:	adc    al,0x2
   140034c53:	rex add DWORD PTR [rax],eax
   140034c56:	add    BYTE PTR [rax],al
   140034c58:	enter  0x413,0x40
   140034c5c:	add    DWORD PTR [rax],eax
   140034c5e:	add    BYTE PTR [rax],al
   140034c60:	(bad)  
   140034c61:	add    BYTE PTR [r8+0x1],r8b
   140034c65:	add    BYTE PTR [rax],al
   140034c67:	add    BYTE PTR [rax],al
   140034c69:	js     0x140034c6d
   140034c6b:	rex add DWORD PTR [rax],eax
   140034c6e:	add    BYTE PTR [rax],al
   140034c70:	lock add BYTE PTR [r8+0x1],r8b
   140034c75:	add    BYTE PTR [rax],al
   140034c77:	add    BYTE PTR [rax+0x78],dh
   140034c7a:	add    al,BYTE PTR [rax+0x1]
   140034c7d:	add    BYTE PTR [rax],al
   140034c7f:	add    al,dh
   140034c81:	adc    eax,DWORD PTR [rax+rax*2]
   140034c84:	add    DWORD PTR [rax],eax
   140034c86:	add    BYTE PTR [rax],al
   140034c88:	rcr    dh,0x2
   140034c8b:	rex add DWORD PTR [rax],eax
   140034c8e:	add    BYTE PTR [rax],al
   140034c90:	rcr    dh,0x2
   140034c93:	rex add DWORD PTR [rax],eax
   140034c96:	add    BYTE PTR [rax],al
   140034c98:	rcr    dh,0x2
   140034c9b:	rex add DWORD PTR [rax],eax
   140034c9e:	add    BYTE PTR [rax],al
   140034ca0:	(bad)  
   140034ca1:	add    al,BYTE PTR gs:[rax+0x1]
   140034ca5:	add    BYTE PTR [rax],al
   140034ca7:	add    al,dl
   140034ca9:	adc    al,0x4
   140034cab:	rex add DWORD PTR [rax],eax
   140034cae:	add    BYTE PTR [rax],al
   140034cb0:	cmp    BYTE PTR [rsi+0x2],0x40
   140034cb4:	add    DWORD PTR [rax],eax
   140034cb6:	add    BYTE PTR [rax],al
   140034cb8:	(bad)  
   140034cb9:	add    BYTE PTR [r8+0x1],r8b
   140034cbd:	add    BYTE PTR [rax],al
   140034cbf:	add    BYTE PTR [rax],dh
   140034cc1:	jnp    0x140034cc5
   140034cc3:	rex add DWORD PTR [rax],eax
   140034cc6:	add    BYTE PTR [rax],al
   140034cc8:	movabs al,ds:0x900000000140027d
   140034cd1:	jnp    0x140034cd5
   140034cd3:	rex add DWORD PTR [rax],eax
   140034cd6:	add    BYTE PTR [rax],al
   140034cd8:	push   rax
   140034cd9:	adc    eax,0x14004
   140034cde:	add    BYTE PTR [rax],al
   140034ce0:	push   rax
   140034ce1:	sub    BYTE PTR [rcx],al
   140034ce3:	rex add DWORD PTR [rax],eax
   140034ce6:	add    BYTE PTR [rax],al
   140034ce8:	js     0x140034cff
   140034cea:	add    al,0x40
   140034cec:	add    DWORD PTR [rax],eax
   140034cee:	add    BYTE PTR [rax],al
   140034cf0:	adc    BYTE PTR [rdx+0x14002],dl
   140034cf6:	add    BYTE PTR [rax],al
   140034cf8:	rcr    dh,0x2
   140034cfb:	rex add DWORD PTR [rax],eax
   140034cfe:	add    BYTE PTR [rax],al
   140034d00:	mov    al,0x15
   140034d02:	add    al,0x40
   140034d04:	add    DWORD PTR [rax],eax
   140034d06:	add    BYTE PTR [rax],al
   140034d08:	sbb    BYTE PTR [rdx+0x14002],0x0
   140034d0f:	add    al,al
   140034d11:	fiadd  WORD PTR [rdx]
   140034d13:	rex add DWORD PTR [rax],eax
   140034d16:	add    BYTE PTR [rax],al
   140034d18:	jo     0x140034d30
   140034d1a:	add    al,0x40
   140034d1c:	add    DWORD PTR [rax],eax
   140034d1e:	add    BYTE PTR [rax],al
   140034d20:	adc    BYTE PTR [rbx+0x14002],bl
   140034d26:	add    BYTE PTR [rax],al
   140034d28:	nop
   140034d29:	pushf  
   140034d2a:	add    al,BYTE PTR [rax+0x1]
   140034d2d:	add    BYTE PTR [rax],al
   140034d2f:	add    BYTE PTR [rax],ch
   140034d31:	(bad)  
   140034d32:	add    al,0x40
   140034d34:	add    DWORD PTR [rax],eax
   140034d36:	add    BYTE PTR [rax],al
   140034d38:	rcr    BYTE PTR [rdx+rax*1+0x140],0x0
   140034d40:	adc    bh,bl
   140034d42:	add    al,BYTE PTR [rax+0x1]
   140034d45:	add    BYTE PTR [rax],al
   140034d47:	add    BYTE PTR [rax-0x63],al
   140034d4a:	add    al,BYTE PTR [rax+0x1]
   140034d4d:	add    BYTE PTR [rax],al
   140034d4f:	add    BYTE PTR [rax+0x1400416],bl
   140034d55:	add    BYTE PTR [rax],al
   140034d57:	add    al,al
   140034d59:	pushf  
   140034d5a:	add    al,BYTE PTR [rax+0x1]
   140034d5d:	add    BYTE PTR [rax],al
   140034d5f:	add    BYTE PTR [rax],dl
   140034d61:	fild   WORD PTR [rdx]
   140034d63:	rex add DWORD PTR [rax],eax
   140034d66:	add    BYTE PTR [rax],al
   140034d68:	rcr    dh,0x2
   140034d6b:	rex add DWORD PTR [rax],eax
   140034d6e:	add    BYTE PTR [rax],al
   140034d70:	push   rax
   140034d71:	sbb    BYTE PTR [rax+rax*2],al
   140034d74:	add    DWORD PTR [rax],eax
   140034d76:	add    BYTE PTR [rax],al
   140034d78:	jo     0x140034da8
   140034d7a:	add    al,BYTE PTR [rax+0x1]
   140034d7d:	add    BYTE PTR [rax],al
   140034d7f:	add    BYTE PTR [rax],al
   140034d81:	mov    ecx,0x14002
   140034d86:	add    BYTE PTR [rax],al
   140034d88:	cmp    BYTE PTR [rax+0x14002],0x0
   140034d8f:	add    BYTE PTR [rax-0x4a],dl
   140034d92:	add    al,BYTE PTR [rax+0x1]
   140034d95:	add    BYTE PTR [rax],al
   140034d97:	add    BYTE PTR [rax+0x14002b6],dh
   140034d9d:	add    BYTE PTR [rax],al
   140034d9f:	add    BYTE PTR [rax],al
   140034da1:	mov    bh,0x2
   140034da3:	rex add DWORD PTR [rax],eax
   140034da6:	add    BYTE PTR [rax],al
   140034da8:	(bad)  
   140034da9:	sbb    al,BYTE PTR [rax+rax*2]
   140034dac:	add    DWORD PTR [rax],eax
   140034dae:	add    BYTE PTR [rax],al
   140034db0:	push   rax
   140034db1:	rol    BYTE PTR [rdx],0x40
   140034db4:	add    DWORD PTR [rax],eax
   140034db6:	add    BYTE PTR [rax],al
   140034db8:	nop
   140034db9:	sbb    eax,DWORD PTR [rax+rax*2]
   140034dbc:	add    DWORD PTR [rax],eax
   140034dbe:	add    BYTE PTR [rax],al
   140034dc0:	jo     0x140034df0
   140034dc2:	add    al,BYTE PTR [rax+0x1]
   140034dc5:	add    BYTE PTR [rax],al
   140034dc7:	add    BYTE PTR [rax],al
   140034dc9:	mov    ecx,0x14002
   140034dce:	add    BYTE PTR [rax],al
   140034dd0:	mov    al,0xf9
   140034dd2:	add    DWORD PTR [rax+0x1],eax
   140034dd5:	add    BYTE PTR [rax],al
   140034dd7:	add    BYTE PTR [rax],dh
   140034dd9:	mov    BYTE PTR [rdx],0x40
   140034ddc:	add    DWORD PTR [rax],eax
   140034dde:	add    BYTE PTR [rax],al
   140034de0:	jo     0x140034dab
   140034de2:	add    al,BYTE PTR [rax+0x1]
   140034de5:	add    BYTE PTR [rax],al
   140034de7:	add    BYTE PTR [rax],ah
   140034de9:	rex.WRB add BYTE PTR [r8+0x1],r8b
   140034ded:	add    BYTE PTR [rax],al
   140034def:	add    BYTE PTR [rax],al
   140034df1:	mov    BYTE PTR [rdx],0x40
   140034df4:	add    DWORD PTR [rax],eax
   140034df6:	add    BYTE PTR [rax],al
   140034df8:	(bad)  
   140034df9:	mov    BYTE PTR [rdx],0x40
   140034dfc:	add    DWORD PTR [rax],eax
   140034dfe:	add    BYTE PTR [rax],al
   140034e00:	movabs al,ds:0x7000000001400419
   140034e09:	add    al,BYTE PTR cs:[rax+0x1]
   140034e0d:	add    BYTE PTR [rax],al
   140034e0f:	add    BYTE PTR [rax],al
   140034e11:	mov    ecx,0x14002
   140034e16:	add    BYTE PTR [rax],al
   140034e18:	loopne 0x140034dd9
   140034e1a:	add    al,BYTE PTR [rax+0x1]
   140034e1d:	add    BYTE PTR [rax],al
   140034e1f:	add    BYTE PTR [rax-0x42],dh
   140034e22:	add    al,BYTE PTR [rax+0x1]
   140034e25:	add    BYTE PTR [rax],al
   140034e27:	add    al,dl
   140034e29:	mov    edi,0x14002
   140034e2e:	add    BYTE PTR [rax],al
   140034e30:	xor    BYTE PTR [rax+0x25],bh
   140034e33:	xor    BYTE PTR [rax],bh
   140034e35:	pop    rax
   140034e36:	add    BYTE PTR [rax],al
   140034e38:	(bad)
   140034e3d:	ins    BYTE PTR es:[rdi],dx
   140034e3e:	ins    BYTE PTR es:[rdi],dx
   140034e3f:	outs   dx,DWORD PTR ds:[rsi]
   140034e40:	movsxd esp,DWORD PTR [rcx+0x74]
   140034e43:	imul   ebp,DWORD PTR [rdi+0x6e],0xebfe0000
   140034e4a:	(bad)  
   140034e4b:	ror    DWORD PTR [rbx],1
   140034e4d:	cmp    edx,ebp
   140034e4f:	movabs ds:0x787e1682eef3c5c6,al
   140034e58:	cmp    al,0x0
   140034e5a:	rex.WRX add BYTE PTR [rbp+0x0],r10b
   140034e5e:	rex.WR add BYTE PTR [rax+rax*1+0x3e],r9b
   140034e63:	add    BYTE PTR [rax],al
   140034e65:	add    BYTE PTR [rax],al
   140034e67:	add    BYTE PTR [rdx+0x79],ah
   140034e6a:	and    BYTE PTR [rsi+0x69],cl
   140034e6d:	jae    0x140034eb8
   140034e6f:	jo     0x140034ee4
   140034e71:	push   rax
   140034e72:	ins    BYTE PTR es:[rdi],dx
   140034e73:	jne    0x140034edc
   140034e75:	imul   ebp,DWORD PTR [rsi+0x0],0x756e616d
   140034e7c:	(bad)  
   140034e7d:	ins    BYTE PTR es:[rdi],dx
   140034e7e:	ins    BYTE PTR es:[rdi],dx
   140034e7f:	jns    0x140034ea1
   140034e81:	outs   dx,DWORD PTR ds:[rsi]
   140034e82:	jb     0x140034ea4
   140034e84:	(bad)  
   140034e85:	jns    0x140034ea7
   140034e87:	push   rbx
   140034e88:	rex.XB
   140034e89:	rex.WRB and BYTE PTR [r11+0x72],r12b
   140034e8d:	(bad)  
   140034e8e:	jae    0x140034ef8
   140034e90:	and    BYTE PTR [rdx+0x65],dh
   140034e93:	movsxd ebp,DWORD PTR [rdi+0x76]
   140034e96:	gs jb  0x140034f12
   140034e99:	add    BYTE PTR [rax],al
   140034e9b:	add    BYTE PTR [rax],al
   140034e9d:	add    BYTE PTR [rax],al
   140034e9f:	add    BYTE PTR [rdx+0x0],ah
   140034ea2:	jns    0x140034ea4
   140034ea4:	and    BYTE PTR [rax],al
   140034ea6:	rex.WRX add BYTE PTR [rcx+0x0],r13b
   140034eaa:	jae    0x140034eac
   140034eac:	rex.WB add BYTE PTR [r8+0x0],sil
   140034eb0:	jae    0x140034eb2
   140034eb2:	push   rax
   140034eb3:	add    BYTE PTR [rax+rax*1+0x75],ch
   140034eb7:	add    BYTE PTR [rdi+0x0],ah
   140034eba:	imul   eax,DWORD PTR [rax],0x6e
   140034ec0:	ins    DWORD PTR es:[rdi],dx
   140034ec1:	add    BYTE PTR [rcx+0x0],ah
   140034ec4:	outs   dx,BYTE PTR ds:[rsi]
   140034ec5:	add    BYTE PTR [rbp+0x0],dh
   140034ec8:	(bad)  
   140034ec9:	add    BYTE PTR [rax+rax*1+0x6c],ch
   140034ecd:	add    BYTE PTR [rcx+0x0],bh
   140034ed0:	and    BYTE PTR [rax],al
   140034ed2:	outs   dx,DWORD PTR ds:[rsi]
   140034ed3:	add    BYTE PTR [rdx+0x0],dh
   140034ed6:	and    BYTE PTR [rax],al
   140034ed8:	(bad)  
   140034ed9:	add    BYTE PTR [rcx+0x0],bh
   140034edc:	and    BYTE PTR [rax],al
   140034ede:	push   rbx
   140034edf:	add    BYTE PTR [rbx+0x0],al
   140034ee2:	rex.WRB add BYTE PTR [r8],r12b
   140034ee5:	add    BYTE PTR [rbx+0x0],ah
   140034ee8:	jb     0x140034eea
   140034eea:	(bad)  
   140034eeb:	add    BYTE PTR [rbx+0x0],dh
   140034eee:	push   0x72002000
   140034ef3:	add    BYTE PTR [rbp+0x0],ah
   140034ef6:	movsxd eax,DWORD PTR [rax]
   140034ef8:	outs   dx,DWORD PTR ds:[rsi]
   140034ef9:	add    BYTE PTR [rsi+0x0],dh
   140034efc:	add    BYTE PTR gs:[rdx+0x0],dh
   140034f00:	jns    0x140034f02
   140034f02:	add    BYTE PTR [rax],al
   140034f04:	add    BYTE PTR [rax],al
   140034f06:	add    BYTE PTR [rax],al
   140034f08:	push   rbx
   140034f09:	add    BYTE PTR [rbp+0x0],ah
   140034f0c:	jb     0x140034f0e
   140034f0e:	jbe    0x140034f10
   140034f10:	imul   eax,DWORD PTR [rax],0x650063
   140034f16:	and    BYTE PTR [rax],al
   140034f18:	jae    0x140034f1a
   140034f1a:	je     0x140034f1c
   140034f1c:	(bad)  
   140034f1d:	add    BYTE PTR [rdx+0x0],dh
   140034f20:	je     0x140034f22
   140034f22:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   140034f27:	add    BYTE PTR [rip+0x7300],ah        # 0x14003c22d
   140034f2d:	add    BYTE PTR [rax],al
   140034f2f:	add    BYTE PTR [rbx+0x0],dl
   140034f32:	add    BYTE PTR gs:[rdx+0x0],dh
   140034f36:	jbe    0x140034f38
   140034f38:	imul   eax,DWORD PTR [rax],0x650063
   140034f3e:	and    BYTE PTR [rax],al
   140034f40:	jae    0x140034f42
   140034f42:	je     0x140034f44
   140034f44:	(bad)  
   140034f45:	add    BYTE PTR [rdx+0x0],dh
   140034f48:	je     0x140034f4a
   140034f4a:	add    BYTE PTR gs:[rax+rax*1+0x0],ah
   140034f4f:	add    BYTE PTR [rbx+0x0],dl
   140034f52:	add    BYTE PTR gs:[rdx+0x0],dh
   140034f56:	jbe    0x140034f58
   140034f58:	imul   eax,DWORD PTR [rax],0x650063
   140034f5e:	and    BYTE PTR [rax],al
   140034f60:	jae    0x140034f62
   140034f62:	je     0x140034f64
   140034f64:	(bad)  
   140034f65:	add    BYTE PTR [rdx+0x0],dh
   140034f68:	je     0x140034f6a
   140034f6a:	jne    0x140034f6c
   140034f6c:	jo     0x140034f6e
   140034f6e:	and    BYTE PTR [rax],al
   140034f70:	data16 add BYTE PTR [rcx+0x0],ah
   140034f74:	imul   eax,DWORD PTR [rax],0x65006c
   140034f7a:	add    BYTE PTR fs:[rax],ah
   140034f7d:	add    BYTE PTR [rdi+0x0],dh
   140034f80:	imul   eax,DWORD PTR [rax],0x680074
   140034f86:	and    BYTE PTR [rax],al
   140034f88:	and    eax,0x38003000
   140034f8d:	add    BYTE PTR [rax+0x0],bh
	...
   140034f98:	push   rbx
   140034f99:	add    BYTE PTR [rbp+0x0],ah
   140034f9c:	jb     0x140034f9e
   140034f9e:	jbe    0x140034fa0
   140034fa0:	imul   eax,DWORD PTR [rax],0x650063
   140034fa6:	and    BYTE PTR [rax],al
   140034fa8:	jae    0x140034faa
   140034faa:	je     0x140034fac
   140034fac:	outs   dx,DWORD PTR ds:[rsi]
   140034fad:	add    BYTE PTR [rax+0x0],dh
   140034fb0:	jo     0x140034fb2
   140034fb2:	imul   eax,DWORD PTR [rax],0x67006e
	...
   140034fc0:	add    BYTE PTR [rcx+0x0],r13b
   140034fc4:	jae    0x140034fc6
   140034fc6:	add    BYTE PTR gs:[rsi+0x0],ch
   140034fca:	add    BYTE PTR [ecx+0x0],ah
   140034fce:	add    BYTE PTR [ecx+0x0],ch
   140034fd2:	outs   dx,BYTE PTR ds:[rsi]
   140034fd3:	add    BYTE PTR [rdi+0x0],ah
   140034fd6:	and    BYTE PTR [rax],al
   140034fd8:	je     0x140034fda
   140034fda:	push   0x20006500
   140034fdf:	add    BYTE PTR [rax+rax*1+0x72],ah
   140034fe3:	add    BYTE PTR [rcx+0x0],ch
   140034fe6:	jbe    0x140034fe8
   140034fe8:	add    BYTE PTR gs:[rdx+0x0],dh
   140034fec:	add    BYTE PTR [rax],al
   140034fee:	add    BYTE PTR [rax],al
   140034ff0:	push   rbx
   140034ff1:	add    BYTE PTR [rbp+0x0],ah
   140034ff4:	jb     0x140034ff6
   140034ff6:	jbe    0x140034ff8
   140034ff8:	imul   eax,DWORD PTR [rax],0x650063
   140034ffe:	and    BYTE PTR [rax],al
   140035000:	data16 add BYTE PTR [rcx+0x0],ah
   140035004:	imul   eax,DWORD PTR [rax],0x65006c
   14003500a:	add    BYTE PTR fs:[rax],ah
   14003500d:	add    BYTE PTR [rax+rax*1+0x75],ah
   140035011:	add    BYTE PTR [rdx+0x0],dh
   140035014:	imul   eax,DWORD PTR [rax],0x67006e
   14003501a:	and    BYTE PTR [rax],al
   14003501c:	jae    0x14003501e
   14003501e:	push   0x74007500
   140035023:	add    BYTE PTR [rax+rax*1+0x6f],ah
   140035027:	add    BYTE PTR [rdi+0x0],dh
   14003502a:	outs   dx,BYTE PTR ds:[rsi]
   14003502b:	add    BYTE PTR [rax],ah
   14003502d:	add    BYTE PTR [rip+0x25002000],ch        # 0x165037033
   140035033:	add    BYTE PTR [rax],dh
   140035035:	add    BYTE PTR [rax],bh
   140035037:	add    BYTE PTR [rax+0x0],bh
   14003503a:	add    BYTE PTR [rax],al
   14003503c:	add    BYTE PTR [rax],al
   14003503e:	add    BYTE PTR [rax],al
   140035040:	push   rbx
   140035041:	add    BYTE PTR [rbp+0x0],ah
   140035044:	jb     0x140035046
   140035046:	jbe    0x140035048
   140035048:	imul   eax,DWORD PTR [rax],0x650063
   14003504e:	and    BYTE PTR [rax],al
   140035050:	jae    0x140035052
   140035052:	je     0x140035054
   140035054:	outs   dx,DWORD PTR ds:[rsi]
   140035055:	add    BYTE PTR [rax+0x0],dh
   140035058:	jo     0x14003505a
   14003505a:	add    BYTE PTR gs:[rax+rax*1+0x0],ah
   14003505f:	add    BYTE PTR [rax+rax*1+0x6f],cl
   140035063:	add    BYTE PTR [rcx+0x0],ah
   140035066:	add    BYTE PTR fs:[rcx+0x0],ch
   14003506a:	outs   dx,BYTE PTR ds:[rsi]
   14003506b:	add    BYTE PTR [rdi+0x0],ah
   14003506e:	and    BYTE PTR [rax],al
   140035070:	add    BYTE PTR [rbp+0x0],r12b
   140035074:	data16 add BYTE PTR [rcx+0x0],ch
   140035078:	outs   dx,BYTE PTR ds:[rsi]
   140035079:	add    BYTE PTR [rcx+0x0],ch
   14003507c:	je     0x14003507e
   14003507e:	imul   eax,DWORD PTR [rax],0x6e006f
   140035084:	jae    0x140035086
   140035086:	cmp    al,BYTE PTR [rax]
   140035088:	and    BYTE PTR [rax],al
   14003508a:	data16 add BYTE PTR [rdx+0x0],bl
   14003508e:	add    BYTE PTR gs:[rdx+0x0],dh
   140035092:	outs   dx,DWORD PTR ds:[rsi]
   140035093:	add    BYTE PTR [rax+rax*1+0x61],al
   140035097:	add    BYTE PTR [rcx+0x0],bh
   14003509a:	add    BYTE PTR [r14+0x0],r13b
   14003509e:	(bad)  
   14003509f:	add    BYTE PTR [rdx+0x0],ah
   1400350a2:	ins    BYTE PTR es:[rdi],dx
   1400350a3:	add    BYTE PTR [rbp+0x0],ah
   1400350a6:	add    BYTE PTR fs:[rip+0x64002500],bh        # 0x1a40375ad
   1400350ad:	add    BYTE PTR [rax+rax*1],ch
   1400350b0:	and    BYTE PTR [rax],al
   1400350b2:	data16 add BYTE PTR [rsi+0x0],cl
   1400350b6:	add    BYTE PTR gs:[rax+rax*1+0x42],dh
   1400350bb:	add    BYTE PTR [rbp+0x0],ch
   1400350be:	add    BYTE PTR [r14+0x0],r13b
   1400350c2:	(bad)  
   1400350c3:	add    BYTE PTR [rdx+0x0],ah
   1400350c6:	ins    BYTE PTR es:[rdi],dx
   1400350c7:	add    BYTE PTR [rbp+0x0],ah
   1400350ca:	add    BYTE PTR fs:[rip+0x64002500],bh        # 0x1a40375d1
   1400350d1:	add    BYTE PTR [rax+rax*1],ch
   1400350d4:	and    BYTE PTR [rax],al
   1400350d6:	jo     0x1400350d8
   1400350d8:	(bad)  
   1400350d9:	add    BYTE PTR [rax+rax*1+0x68],dh
   1400350dd:	add    BYTE PTR [rip+0x77002500],bh        # 0x1b70375e3
   1400350e3:	add    BYTE PTR [rbx+0x0],dh
   1400350e6:	add    BYTE PTR [rax],al
   1400350e8:	rex.WRX add BYTE PTR [rcx+0x0],r9b
   1400350ec:	push   rbx
   1400350ed:	add    BYTE PTR [rdi+0x0],bl
   1400350f0:	rex.RX add BYTE PTR [rdi+0x0],r13b
   1400350f4:	jb     0x1400350f6
   1400350f6:	movsxd eax,DWORD PTR [rax]
   1400350f8:	add    BYTE PTR gs:[rdx+0x0],bl
   1400350fc:	add    BYTE PTR [rax],r8b
   1400350ff:	add    BYTE PTR [rdi+0x0],dl
   140035102:	imul   eax,DWORD PTR [rax],0x38006e
   140035108:	sub    eax,DWORD PTR [rax]
   14003510a:	cmp    al,BYTE PTR [rax]
   14003510c:	and    BYTE PTR [rax],al
   14003510e:	outs   dx,DWORD PTR ds:[rsi]
   14003510f:	add    BYTE PTR [rsi+0x0],dh
   140035112:	add    BYTE PTR gs:[rdx+0x0],dh
   140035116:	jb     0x140035118
   140035118:	imul   eax,DWORD PTR [rax],0x690064
   14003511e:	outs   dx,BYTE PTR ds:[rsi]
   14003511f:	add    BYTE PTR [rdi+0x0],ah
   140035122:	and    BYTE PTR [rax],al
   140035124:	data16 add BYTE PTR [rdx+0x0],bl
   140035128:	add    BYTE PTR gs:[rdx+0x0],dh
   14003512c:	outs   dx,DWORD PTR ds:[rsi]
   14003512d:	add    BYTE PTR [rax+rax*1+0x61],al
   140035131:	add    BYTE PTR [rcx+0x0],bh
   140035134:	add    BYTE PTR [r14+0x0],r13b
   140035138:	(bad)  
   140035139:	add    BYTE PTR [rdx+0x0],ah
   14003513c:	ins    BYTE PTR es:[rdi],dx
   14003513d:	add    BYTE PTR [rbp+0x0],ah
   140035140:	add    BYTE PTR fs:[rax],ah
   140035143:	add    BYTE PTR [rax+rax*1+0x6f],dh
   140035147:	add    BYTE PTR [rax],ah
   140035149:	add    BYTE PTR [rsi+0x0],al
   14003514c:	add    BYTE PTR [r8+rax*1+0x53],cl
   140035151:	add    BYTE PTR [rbp+0x0],al
	...
   140035160:	rex.WRB add BYTE PTR [r9+0x0],r13b
   140035164:	jae    0x140035166
   140035166:	movsxd eax,DWORD PTR [rax]
   140035168:	rex.XB add BYTE PTR [r15+0x0],bpl
   14003516c:	outs   dx,BYTE PTR ds:[rsi]
   14003516d:	add    BYTE PTR [rsi+0x0],ah
   140035170:	imul   eax,DWORD PTR [rax],0x200067
   140035176:	jae    0x140035178
   140035178:	add    BYTE PTR gs:[rax+rax*1+0x2e],dh
   14003517d:	add    BYTE PTR [rax],ah
   14003517f:	add    BYTE PTR [rsi+0x0],al
   140035182:	outs   dx,DWORD PTR ds:[rsi]
   140035183:	add    BYTE PTR [rdx+0x0],dh
   140035186:	movsxd eax,DWORD PTR [rax]
   140035188:	imul   eax,DWORD PTR [rax],0x67006e
   14003518e:	and    BYTE PTR [rax],al
   140035190:	pop    rdx
   140035191:	add    BYTE PTR [rax+rax*1+0x20],al
   140035195:	add    BYTE PTR [rdi+0x0],ch
   140035198:	outs   dx,BYTE PTR ds:[rsi]
   140035199:	add    BYTE PTR [rax],ah
   14003519b:	add    BYTE PTR [rsi+0x0],ch
   14003519e:	outs   dx,DWORD PTR ds:[rsi]
   14003519f:	add    BYTE PTR [rsi+0x0],ch
   1400351a2:	sub    eax,0x75007300
   1400351a7:	add    BYTE PTR [rax+0x0],dh
   1400351aa:	jo     0x1400351ac
   1400351ac:	outs   dx,DWORD PTR ds:[rsi]
   1400351ad:	add    BYTE PTR [rdx+0x0],dh
   1400351b0:	je     0x1400351b2
   1400351b2:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   1400351b7:	add    BYTE PTR [rbx+0x0],dl
   1400351ba:	rex.WXB add BYTE PTR [r13+0x0],dl
   1400351be:	jae    0x1400351c0
	...
   1400351d0:	rex.RX add BYTE PTR [rcx+0x0],r12b
   1400351d4:	imul   eax,DWORD PTR [rax],0x65006c
   1400351da:	add    BYTE PTR fs:[rax],ah
   1400351dd:	add    BYTE PTR [rax+rax*1+0x6f],dh
   1400351e1:	add    BYTE PTR [rax],ah
   1400351e3:	add    BYTE PTR [rax+rax*1+0x6f],ch
   1400351e7:	add    BYTE PTR [rcx+0x0],ah
   1400351ea:	add    BYTE PTR fs:[rax],ah
   1400351ed:	add    BYTE PTR [rsi+0x0],ch
   1400351f0:	add    BYTE PTR gs:[rdi+0x0],dh
   1400351f4:	and    BYTE PTR [rax],al
   1400351f6:	add    BYTE PTR fs:[rbp+0x0],ah
   1400351fa:	data16 add BYTE PTR [rcx+0x0],ch
   1400351fe:	outs   dx,BYTE PTR ds:[rsi]
   1400351ff:	add    BYTE PTR [rcx+0x0],ch
   140035202:	je     0x140035204
   140035204:	imul   eax,DWORD PTR [rax],0x6e006f
   14003520a:	jae    0x14003520c
   14003520c:	sub    al,0x0
   14003520e:	and    BYTE PTR [rax],al
   140035210:	add    BYTE PTR gs:[rdx+0x0],dh
   140035214:	jb     0x140035216
   140035216:	outs   dx,DWORD PTR ds:[rsi]
   140035217:	add    BYTE PTR [rdx+0x0],dh
   14003521a:	and    BYTE PTR [rax],al
   14003521c:	cmp    eax,0x25002000
   140035221:	add    BYTE PTR [rbx+0x0],dl
	...
   140035230:	push   rbx
   140035231:	add    BYTE PTR [rbp+0x0],dh
   140035234:	movsxd eax,DWORD PTR [rax]
   140035236:	movsxd eax,DWORD PTR [rax]
   140035238:	add    BYTE PTR gs:[rbx+0x0],dh
   14003523c:	jae    0x14003523e
   14003523e:	data16 add BYTE PTR [rbp+0x0],dh
   140035242:	ins    BYTE PTR es:[rdi],dx
   140035243:	add    BYTE PTR [rax+rax*1+0x79],ch
   140035247:	add    BYTE PTR [rax],ah
   140035249:	add    BYTE PTR [rax+rax*1+0x6f],ch
   14003524d:	add    BYTE PTR [rcx+0x0],ah
   140035250:	add    BYTE PTR fs:[rbp+0x0],ah
   140035254:	add    BYTE PTR fs:[rax],ah
   140035257:	add    BYTE PTR [rsi+0x0],ch
   14003525a:	add    BYTE PTR gs:[rdi+0x0],dh
   14003525e:	and    BYTE PTR [rax],al
   140035260:	add    BYTE PTR fs:[rbp+0x0],ah
   140035264:	data16 add BYTE PTR [rcx+0x0],ch
   140035268:	outs   dx,BYTE PTR ds:[rsi]
   140035269:	add    BYTE PTR [rcx+0x0],ch
   14003526c:	je     0x14003526e
   14003526e:	imul   eax,DWORD PTR [rax],0x6e006f
   140035274:	jae    0x140035276
   140035276:	sub    al,0x0
   140035278:	and    BYTE PTR [rax],al
   14003527a:	add    BYTE PTR [r14+0x0],bpl
   14003527e:	jns    0x140035280
   140035280:	and    BYTE PTR [rax],al
   140035282:	jae    0x140035284
   140035284:	imul   eax,DWORD PTR [rax],0x6e0067
   14003528a:	(bad)  
   14003528b:	add    BYTE PTR [rax+rax*1+0x75],dh
   14003528f:	add    BYTE PTR [rdx+0x0],dh
   140035292:	add    BYTE PTR gs:[rax],ah
   140035295:	add    BYTE PTR [rcx+0x0],ah
   140035298:	movsxd eax,DWORD PTR [rax]
   14003529a:	je     0x14003529c
   14003529c:	imul   eax,DWORD PTR [rax],0x650076
   1400352a2:	and    BYTE PTR [rax],al
   1400352a4:	sub    BYTE PTR [rax],al
   1400352a6:	xor    BYTE PTR [rax],al
   1400352a8:	(bad)  
   1400352a9:	add    BYTE PTR [rcx],dh
   1400352ab:	add    BYTE PTR [rcx],ch
   1400352ad:	add    BYTE PTR [rdx],bh
   1400352af:	add    BYTE PTR [rax],ah
   1400352b1:	add    BYTE PTR [rdx+0x0],bl
   1400352b4:	add    BYTE PTR gs:[rdx+0x0],dh
   1400352b8:	outs   dx,DWORD PTR ds:[rsi]
   1400352b9:	add    BYTE PTR [rax+rax*1+0x61],al
   1400352bd:	add    BYTE PTR [rcx+0x0],bh
   1400352c0:	cmp    eax,0x64002500
   1400352c5:	add    BYTE PTR [rax+rax*1],ch
   1400352c8:	and    BYTE PTR [rax],al
   1400352ca:	rex.X add BYTE PTR [rbp+0x0],cl
   1400352ce:	cmp    eax,0x64002500
	...
   1400352df:	add    BYTE PTR [rcx+0x0],al
   1400352e2:	je     0x1400352e4
   1400352e4:	and    BYTE PTR [rax],al
   1400352e6:	ins    BYTE PTR es:[rdi],dx
   1400352e7:	add    BYTE PTR [rbp+0x0],ah
   1400352ea:	(bad)  
   1400352eb:	add    BYTE PTR [rbx+0x0],dh
   1400352ee:	je     0x1400352f0
   1400352f0:	and    BYTE PTR [rax],al
   1400352f2:	outs   dx,DWORD PTR ds:[rsi]
   1400352f3:	add    BYTE PTR [rsi+0x0],ch
   1400352f6:	add    BYTE PTR gs:[rax],ah
   1400352f9:	add    BYTE PTR [rbx+0x0],dh
   1400352fc:	imul   eax,DWORD PTR [rax],0x6e0067
   140035302:	(bad)  
   140035303:	add    BYTE PTR [rax+rax*1+0x75],dh
   140035307:	add    BYTE PTR [rdx+0x0],dh
   14003530a:	add    BYTE PTR gs:[rax],ah
   14003530d:	add    BYTE PTR [rcx+0x0],ch
   140035310:	jae    0x140035312
   140035312:	and    BYTE PTR [rax],al
   140035314:	(bad)  
   140035315:	add    BYTE PTR [rbx+0x0],ah
   140035318:	je     0x14003531a
   14003531a:	imul   eax,DWORD PTR [rax],0x650076
	...
   140035328:	rex.XB add BYTE PTR [r15+0x0],bpl
   14003532c:	outs   dx,BYTE PTR ds:[rsi]
   14003532d:	add    BYTE PTR [rsi+0x0],ch
   140035330:	add    BYTE PTR gs:[rbx+0x0],ah
   140035334:	je     0x140035336
   140035336:	imul   eax,DWORD PTR [rax],0x67006e
   14003533c:	and    BYTE PTR [rax],al
   14003533e:	je     0x140035340
   140035340:	outs   dx,DWORD PTR ds:[rsi]
   140035341:	add    BYTE PTR [rax],ah
   140035343:	add    BYTE PTR [rax+rax*1+0x68],dh
   140035347:	add    BYTE PTR [rbp+0x0],ah
   14003534a:	and    BYTE PTR [rax],al
   14003534c:	add    BYTE PTR fs:[rdx+0x0],dh
   140035350:	imul   eax,DWORD PTR [rax],0x650076
   140035356:	jb     0x140035358
	...
   140035360:	add    BYTE PTR [r8+rax*1+0x72],bpl
   140035365:	add    BYTE PTR [rbp+0x0],ah
   140035368:	(bad)  
   140035369:	add    BYTE PTR [rax+rax*1+0x79],ah
   14003536d:	add    BYTE PTR [rax],ah
   14003536f:	add    BYTE PTR [rbx+0x0],ah
   140035372:	outs   dx,DWORD PTR ds:[rsi]
   140035373:	add    BYTE PTR [rsi+0x0],ch
   140035376:	outs   dx,BYTE PTR ds:[rsi]
   140035377:	add    BYTE PTR [rbp+0x0],ah
   14003537a:	movsxd eax,DWORD PTR [rax]
   14003537c:	je     0x14003537e
   14003537e:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   140035383:	add    BYTE PTR [rax+rax*1+0x6f],dh
   140035387:	add    BYTE PTR [rax],ah
   140035389:	add    BYTE PTR [rax+rax*1+0x68],dh
   14003538d:	add    BYTE PTR [rbp+0x0],ah
   140035390:	and    BYTE PTR [rax],al
   140035392:	add    BYTE PTR fs:[rdx+0x0],dh
   140035396:	imul   eax,DWORD PTR [rax],0x650076
   14003539c:	jb     0x14003539e
   14003539e:	add    BYTE PTR [rax],al
   1400353a0:	rex.RX add BYTE PTR [rcx+0x0],r12b
   1400353a4:	imul   eax,DWORD PTR [rax],0x65006c
   1400353aa:	add    BYTE PTR fs:[rax],ah
   1400353ad:	add    BYTE PTR [rax+rax*1+0x6f],dh
   1400353b1:	add    BYTE PTR [rax],ah
   1400353b3:	add    BYTE PTR [rbp+0x0],ah
   1400353b6:	outs   dx,BYTE PTR ds:[rsi]
   1400353b7:	add    BYTE PTR [rdi+0x0],ah
   1400353ba:	(bad)  
   1400353bb:	add    BYTE PTR [rdi+0x0],ah
   1400353be:	add    BYTE PTR gs:[rax],ah
   1400353c1:	add    BYTE PTR [rax+rax*1+0x68],dh
   1400353c5:	add    BYTE PTR [rbp+0x0],ah
   1400353c8:	and    BYTE PTR [rax],al
   1400353ca:	add    BYTE PTR fs:[rdx+0x0],dh
   1400353ce:	imul   eax,DWORD PTR [rax],0x650076
   1400353d4:	jb     0x1400353d6
   1400353d6:	sub    al,0x0
   1400353d8:	and    BYTE PTR [rax],al
   1400353da:	add    BYTE PTR gs:[rdx+0x0],dh
   1400353de:	jb     0x1400353e0
   1400353e0:	outs   dx,DWORD PTR ds:[rsi]
   1400353e1:	add    BYTE PTR [rdx+0x0],dh
   1400353e4:	and    BYTE PTR [rax],al
   1400353e6:	cmp    eax,0x25002000
   1400353eb:	add    BYTE PTR [rbx+0x0],dl
   1400353ee:	add    BYTE PTR [rax],al
   1400353f0:	push   rdx
   1400353f1:	add    BYTE PTR [rbp+0x0],ah
   1400353f4:	jo     0x1400353f6
   1400353f6:	outs   dx,DWORD PTR ds:[rsi]
   1400353f7:	add    BYTE PTR [rdx+0x0],dh
   1400353fa:	je     0x1400353fc
   1400353fc:	rex.WRX add BYTE PTR [rbp+0x0],r12b
   140035400:	ja     0x140035402
   140035402:	push   rbx
   140035403:	add    BYTE PTR [rax+rax*1+0x61],dh
   140035407:	add    BYTE PTR [rax+rax*1+0x75],dh
   14003540b:	add    BYTE PTR [rbx+0x0],dh
   14003540e:	and    BYTE PTR [rax],al
   140035410:	data16 add BYTE PTR [rcx+0x0],ah
   140035414:	imul   eax,DWORD PTR [rax],0x65006c
   14003541a:	add    BYTE PTR fs:[rax+rax*1],ch
   14003541e:	and    BYTE PTR [rax],al
   140035420:	add    BYTE PTR gs:[rdx+0x0],dh
   140035424:	jb     0x140035426
   140035426:	outs   dx,DWORD PTR ds:[rsi]
   140035427:	add    BYTE PTR [rdx+0x0],dh
   14003542a:	and    BYTE PTR [rax],al
   14003542c:	cmp    eax,0x25002000
   140035431:	add    BYTE PTR [rbx+0x0],dl
	...
   140035440:	rex.WR add BYTE PTR [rdi+0x0],r13b
   140035444:	(bad)  
   140035445:	add    BYTE PTR [rax+rax*1+0x20],ah
   140035449:	add    BYTE PTR [rax+rax*1+0x65],al
   14003544d:	add    BYTE PTR [rsi+0x0],ah
   140035450:	imul   eax,DWORD PTR [rax],0x69006e
   140035456:	je     0x140035458
   140035458:	imul   eax,DWORD PTR [rax],0x6e006f
   14003545e:	jae    0x140035460
   140035460:	and    BYTE PTR [rax],al
   140035462:	movsxd eax,DWORD PTR [rax]
   140035464:	outs   dx,DWORD PTR ds:[rsi]
   140035465:	add    BYTE PTR [rbp+0x0],ch
   140035468:	jo     0x14003546a
   14003546a:	ins    BYTE PTR es:[rdi],dx
   14003546b:	add    BYTE PTR [rbp+0x0],ah
   14003546e:	je     0x140035470
   140035470:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   140035475:	add    BYTE PTR [rbx+0x0],dh
   140035478:	jne    0x14003547a
   14003547a:	movsxd eax,DWORD PTR [rax]
   14003547c:	movsxd eax,DWORD PTR [rax]
   14003547e:	add    BYTE PTR gs:[rbx+0x0],dh
   140035482:	jae    0x140035484
   140035484:	data16 add BYTE PTR [rbp+0x0],dh
   140035488:	ins    BYTE PTR es:[rdi],dx
   140035489:	add    BYTE PTR [rax+rax*1+0x79],ch
   14003548d:	add    BYTE PTR [rsi],ch
   14003548f:	add    BYTE PTR [rax],al
   140035491:	add    BYTE PTR [rax],al
   140035493:	add    BYTE PTR [rsi+0x55],cl
   140035496:	rex.WR
   140035497:	rex.WR add BYTE PTR [rax],r8b
   14003549a:	add    BYTE PTR [rax],al
   14003549c:	add    BYTE PTR [rax],al
   14003549e:	add    BYTE PTR [rax],al
   1400354a0:	rex.WRX add BYTE PTR [rbp+0x0],r10b
   1400354a4:	rex.WR add BYTE PTR [rax+rax*1+0x0],r9b
   1400354a9:	add    BYTE PTR [rax],al
   1400354ab:	add    BYTE PTR [rax],al
   1400354ad:	add    BYTE PTR [rax],al
   1400354af:	add    BYTE PTR [rdx],cl
   1400354b1:	or     BYTE PTR [rbx],al
   1400354b3:	sbb    BYTE PTR [rdx-0xb],cl
   1400354b6:	shl    dh,0x5c
   1400354b9:	mov    esp,DWORD PTR [rsi+0x72]
   1400354bc:	xchg   esp,eax
   1400354bd:	rex.XB xchg r13d,eax
   1400354bf:	in     al,0x41
   1400354c1:	add    BYTE PTR [rsi+0x0],al
   1400354c4:	add    BYTE PTR [r8],r15b
   1400354c7:	add    BYTE PTR [rcx+0x0],al
   1400354ca:	xor    DWORD PTR [rax],eax
   1400354cc:	add    BYTE PTR [rcx+0x0],r8b
   1400354d0:	sub    eax,0x45003800
   1400354d5:	add    BYTE PTR [rcx],bh
   1400354d7:	add    BYTE PTR [rax+rax*1],dh
   1400354da:	sub    eax,0x30003400
   1400354df:	add    BYTE PTR [rdi],dh
   1400354e1:	add    BYTE PTR [rsi],dh
   1400354e3:	add    BYTE PTR [rip+0x36004200],ch        # 0x1760396e9
   1400354e9:	add    BYTE PTR [rdi],dh
   1400354eb:	add    BYTE PTR [rcx],bh
   1400354ed:	add    BYTE PTR [rip+0x42004300],ch        # 0x1820397f3
   1400354f3:	add    BYTE PTR [rdx],dh
   1400354f5:	add    BYTE PTR [rdx],dh
   1400354f7:	add    BYTE PTR [rsi+0x0],al
   1400354fa:	rex.X add BYTE PTR [rsi],sil
   1400354fd:	add    BYTE PTR [rax],bh
   1400354ff:	add    BYTE PTR [rdx],dh
   140035501:	add    BYTE PTR [rsi],dh
   140035503:	add    BYTE PTR [rax],dh
   140035505:	add    BYTE PTR [rsi+0x0],al
	...
   140035528:	rex.RX add DWORD PTR [rax],r8d
   14003552b:	add    BYTE PTR [rax],al
   14003552d:	add    BYTE PTR [rax],al
   14003552f:	add    al,al
   140035531:	add    BYTE PTR [rax],al
   140035533:	add    BYTE PTR [rax],al
   140035535:	add    BYTE PTR [rax],al
   140035537:	rex.RX add BYTE PTR [rax],r8b
   14003553a:	add    BYTE PTR [rax],al
   14003553c:	add    BYTE PTR [rax],al
   14003553e:	add    BYTE PTR [rax],al
   140035540:	add    BYTE PTR [r8+0x0],dl
   140035544:	push   rax
   140035545:	add    BYTE PTR [rcx+0x0],cl
   140035548:	add    BYTE PTR [rax],r8b
   14003554b:	add    BYTE PTR [rax],al
   14003554d:	add    BYTE PTR [rax],al
   14003554f:	add    BYTE PTR [rbp+0x0],cl
   140035552:	outs   dx,DWORD PTR ds:[rsi]
   140035553:	add    BYTE PTR [rax+rax*1+0x75],ah
   140035557:	add    BYTE PTR [rax+rax*1+0x65],ch
   14003555b:	add    BYTE PTR [rax],al
   14003555d:	add    BYTE PTR [rax],al
   14003555f:	add    BYTE PTR [rbp+0x0],cl
   140035562:	outs   dx,DWORD PTR ds:[rsi]
   140035563:	add    BYTE PTR [rax+rax*1+0x75],ah
   140035567:	add    BYTE PTR [rax+rax*1+0x65],ch
   14003556b:	add    BYTE PTR [rdi+0x0],bl
   14003556e:	push   rdx
   14003556f:	add    BYTE PTR [rcx+0x0],ah
   140035572:	ja     0x140035574
   140035574:	add    BYTE PTR [rax],al
   140035576:	add    BYTE PTR [rax],al
   140035578:	push   rdx
   140035579:	add    BYTE PTR [rbp+0x0],al
   14003557c:	rex.RXB add BYTE PTR [r9+0x0],r9b
   140035580:	push   rbx
   140035581:	add    BYTE PTR [rax+rax*1+0x52],dl
   140035585:	add    BYTE PTR [rcx+0x0],bl
	...
   140035590:	rex.W add BYTE PTR [rbx+0x0],cl
   140035594:	rex.XB add BYTE PTR [r10+0x0],dl
	...
   1400355a0:	rex.W add BYTE PTR [rbx+0x0],cl
   1400355a4:	rex.XB add BYTE PTR [r13+0x0],dl
	...
   1400355b0:	rex.W add BYTE PTR [rbx+0x0],cl
   1400355b4:	rex.WR add BYTE PTR [rbp+0x0],r9b
	...
   1400355c0:	rex.W add BYTE PTR [rbx+0x0],cl
   1400355c4:	push   rbp
   1400355c5:	add    BYTE PTR [rax],al
   1400355c7:	add    BYTE PTR [rax+0x0],cl
   1400355ca:	rex.WXB add BYTE PTR [r8+0x0],dl
   1400355ce:	add    BYTE PTR [rax],r8b
   1400355d1:	add    BYTE PTR [rax],al
   1400355d3:	add    BYTE PTR [rax],al
   1400355d5:	add    BYTE PTR [rax],al
   1400355d7:	add    BYTE PTR [rax+0x0],cl
   1400355da:	rex.WXB add BYTE PTR [r8+r8*1+0x44],al
	...
   1400355e7:	add    BYTE PTR [rax+0x0],cl
   1400355ea:	rex.WXB add BYTE PTR [r11+0x0],al
   1400355ee:	rex.XB add BYTE PTR [r8],al
   1400355f1:	add    BYTE PTR [rax],al
   1400355f3:	add    BYTE PTR [rax],al
   1400355f5:	add    BYTE PTR [rax],al
   1400355f7:	add    BYTE PTR [rax+0x0],cl
   1400355fa:	rex.WXB add BYTE PTR [r13+0x0],al
   1400355fe:	pop    rcx
   1400355ff:	add    BYTE PTR [rdi+0x0],bl
   140035602:	add    BYTE PTR [r8+r8*1+0x41],cl
   140035607:	add    BYTE PTR [rbx+0x0],dl
   14003560a:	push   rbx
   14003560b:	add    BYTE PTR [rbp+0x0],al
   14003560e:	push   rbx
   14003560f:	add    BYTE PTR [rdi+0x0],bl
   140035612:	push   rdx
   140035613:	add    BYTE PTR [rdi+0x0],cl
   140035616:	rex.WRXB add BYTE PTR [r8+r8*1+0x0],r10b
   14003561b:	add    BYTE PTR [rax],al
   14003561d:	add    BYTE PTR [rax],al
   14003561f:	add    BYTE PTR [rax+0x0],cl
   140035622:	rex.WXB add BYTE PTR [r13+0x0],al
   140035626:	pop    rcx
   140035627:	add    BYTE PTR [rdi+0x0],bl
   14003562a:	rex.XB add BYTE PTR [r13+0x0],dl
   14003562e:	push   rdx
   14003562f:	add    BYTE PTR [rdx+0x0],dl
   140035632:	add    BYTE PTR [r14+0x0],r9b
   140035636:	push   rsp
   140035637:	add    BYTE PTR [rdi+0x0],bl
   14003563a:	push   rbp
   14003563b:	add    BYTE PTR [rbx+0x0],dl
   14003563e:	add    BYTE PTR [r10+0x0],r10b
   140035642:	add    BYTE PTR [rax],al
   140035644:	add    BYTE PTR [rax],al
   140035646:	add    BYTE PTR [rax],al
   140035648:	rex.W add BYTE PTR [rbx+0x0],cl
   14003564c:	add    BYTE PTR [r9+0x0],r11b
   140035650:	pop    rdi
   140035651:	add    BYTE PTR [rax+rax*1+0x4f],cl
   140035655:	add    BYTE PTR [rbx+0x0],al
   140035658:	add    BYTE PTR [r8+rax*1+0x5f],cl
   14003565d:	add    BYTE PTR [rbp+0x0],cl
   140035660:	add    BYTE PTR [r11+0x0],al
   140035664:	rex.W add BYTE PTR [rcx+0x0],cl
   140035668:	rex.WRX add BYTE PTR [rbp+0x0],r8b
   14003566c:	add    BYTE PTR [rax],al
   14003566e:	add    BYTE PTR [rax],al
   140035670:	rex.W add BYTE PTR [rbx+0x0],cl
   140035674:	add    BYTE PTR [r9+0x0],r11b
   140035678:	pop    rdi
   140035679:	add    BYTE PTR [rbp+0x0],dl
   14003567c:	push   rbx
   14003567d:	add    BYTE PTR [rbp+0x0],al
   140035680:	push   rdx
   140035681:	add    BYTE PTR [rbx+0x0],dl
   140035684:	add    BYTE PTR [rax],al
   140035686:	add    BYTE PTR [rax],al
   140035688:	rex.W add BYTE PTR [rbx+0x0],cl
   14003568c:	add    BYTE PTR [r9+0x0],r11b
   140035690:	pop    rdi
   140035691:	add    BYTE PTR [rax+0x0],dl
   140035694:	add    BYTE PTR [r10+0x0],r10b
   140035698:	rex.RX add BYTE PTR [rdi+0x0],r9b
   14003569c:	push   rdx
   14003569d:	add    BYTE PTR [rbp+0x0],cl
   1400356a0:	add    BYTE PTR [r14+0x0],cl
   1400356a4:	rex.XB add BYTE PTR [r13+0x0],al
   1400356a8:	pop    rdi
   1400356a9:	add    BYTE PTR [rax+rax*1+0x41],al
   1400356ad:	add    BYTE PTR [rax+rax*1+0x41],dl
   1400356b1:	add    BYTE PTR [rax],al
   1400356b3:	add    BYTE PTR [rax],al
   1400356b5:	add    BYTE PTR [rax],al
   1400356b7:	add    BYTE PTR [rax+0x0],cl
   1400356ba:	rex.WXB add BYTE PTR [r13+0x0],al
   1400356be:	pop    rcx
   1400356bf:	add    BYTE PTR [rdi+0x0],bl
   1400356c2:	add    BYTE PTR [rcx+0x0],r11b
   1400356c6:	rex.WRX add BYTE PTR [rdi+0x0],r11b
   1400356ca:	add    BYTE PTR [rcx+0x0],r8b
   1400356ce:	push   rsp
   1400356cf:	add    BYTE PTR [rcx+0x0],al
   1400356d2:	add    BYTE PTR [rax],al
   1400356d4:	add    BYTE PTR [rax],al
   1400356d6:	add    BYTE PTR [rax],al
   1400356d8:	rex.W add BYTE PTR [rbx+0x0],cl
   1400356dc:	add    BYTE PTR [r9+0x0],r11b
   1400356e0:	pop    rdi
   1400356e1:	add    BYTE PTR [rbx+0x0],al
   1400356e4:	push   rbp
   1400356e5:	add    BYTE PTR [rdx+0x0],dl
   1400356e8:	push   rdx
   1400356e9:	add    BYTE PTR [rbp+0x0],al
   1400356ec:	rex.WRX add BYTE PTR [rax+r8*1+0x5f],r10b
   1400356f1:	add    BYTE PTR [rbx+0x0],al
   1400356f4:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   1400356f8:	rex.RX add BYTE PTR [rcx+0x0],r9b
   1400356fc:	rex.RXB add BYTE PTR [r8],r8b
   1400356ff:	add    BYTE PTR [rax+0x1400355],dl
   140035705:	add    BYTE PTR [rax],al
   140035707:	add    BYTE PTR [rax],al
   140035709:	add    BYTE PTR [rax],al
   14003570b:	cmp    bh,0xff
   14003570e:	(bad)  
   14003570f:	jmp    QWORD PTR [rax+0x1400355]
   140035715:	add    BYTE PTR [rax],al
   140035717:	add    BYTE PTR [rcx],al
   140035719:	add    BYTE PTR [rax],al
   14003571b:	cmp    bh,0xff
   14003571e:	(bad)  
   14003571f:	push   QWORD PTR [rax+0x1400355]
   140035725:	add    BYTE PTR [rax],al
   140035727:	add    BYTE PTR [rdx],al
   140035729:	add    BYTE PTR [rax],al
   14003572b:	cmp    bh,0xff
   14003572e:	(bad)  
   14003572f:	inc    eax
   140035731:	push   rbp
   140035732:	add    eax,DWORD PTR [rax+0x1]
   140035735:	add    BYTE PTR [rax],al
   140035737:	add    BYTE PTR [rbx],al
   140035739:	add    BYTE PTR [rax],al
   14003573b:	cmp    bh,0xff
   14003573e:	(bad)  
   14003573f:	dec    eax
   140035741:	push   rbp
   140035742:	add    eax,DWORD PTR [rax+0x1]
   140035745:	add    BYTE PTR [rax],al
   140035747:	add    BYTE PTR [rax+rax*1],al
   14003574a:	add    BYTE PTR [rax-0x1],al
   140035750:	fcom   DWORD PTR [rbp+0x3]
   140035753:	rex add DWORD PTR [rax],eax
   140035756:	add    BYTE PTR [rax],al
   140035758:	(bad)  
   140035759:	add    BYTE PTR [rax],al
   14003575b:	cmp    bh,0xff
   14003575e:	(bad)  
   14003575f:	(bad)  
   140035760:	call   0x141435aba
   140035765:	add    BYTE PTR [rax],al
   140035767:	add    BYTE PTR [rip+0xffffffffff800000],al        # 0x13f83576d
   14003576d:	(bad)  
   14003576e:	(bad)  
   14003576f:	(bad)  
   140035770:	clc    
   140035771:	push   rbp
   140035772:	add    eax,DWORD PTR [rax+0x1]
   140035775:	add    BYTE PTR [rax],al
   140035777:	add    BYTE PTR [rax],al
   140035779:	add    BYTE PTR [rax],al
   14003577b:	cmp    bh,0xff
   14003577e:	(bad)  
   14003577f:	jmp    QWORD PTR [rax]
   140035781:	push   rsi
   140035782:	add    eax,DWORD PTR [rax+0x1]
   140035785:	add    BYTE PTR [rax],al
   140035787:	add    BYTE PTR [rcx],al
   140035789:	add    BYTE PTR [rax],al
   14003578b:	cmp    bh,0xff
   14003578e:	(bad)  
   14003578f:	dec    DWORD PTR [rax+0x56]
   140035792:	add    eax,DWORD PTR [rax+0x1]
   140035795:	add    BYTE PTR [rax],al
   140035797:	add    BYTE PTR [rdx],al
   140035799:	add    BYTE PTR [rax],al
   14003579b:	cmp    bh,0xff
   14003579e:	(bad)  
   14003579f:	push   QWORD PTR [rax+0x56]
   1400357a2:	add    eax,DWORD PTR [rax+0x1]
   1400357a5:	add    BYTE PTR [rax],al
   1400357a7:	add    BYTE PTR [rbx],al
   1400357a9:	add    BYTE PTR [rax],al
   1400357ab:	cmp    bh,0xff
   1400357ae:	(bad)  
   1400357af:	dec    DWORD PTR [rax+0x1400356]
   1400357b5:	add    BYTE PTR [rax],al
   1400357b7:	add    BYTE PTR [rax+rax*1],al
   1400357ba:	add    BYTE PTR [rax-0x1],al
   1400357c0:	mov    eax,0x1400356
   1400357c5:	add    BYTE PTR [rax],al
   1400357c7:	add    BYTE PTR [rsi],al
   1400357c9:	add    BYTE PTR [rax],al
   1400357cb:	cmp    bh,0xff
   1400357ce:	(bad)  
   1400357cf:	(bad)  
   1400357d0:	fcom   DWORD PTR [rsi+0x3]
   1400357d3:	rex add DWORD PTR [rax],eax
   1400357d6:	add    BYTE PTR [rax],al
   1400357d8:	add    eax,0xff800000
   1400357dd:	(bad)  
   1400357de:	(bad)  
   1400357df:	inc    DWORD PTR [rcx+0x0]
   1400357e2:	push   rax
   1400357e3:	add    BYTE PTR [rcx+0x0],cl
   1400357e6:	sub    eax,0x53004d00
   1400357eb:	add    BYTE PTR [rip+0x69005700],ch        # 0x1a903aef1
   1400357f1:	add    BYTE PTR [rsi+0x0],ch
   1400357f4:	sub    eax,0x6f004300
   1400357f9:	add    BYTE PTR [rdx+0x0],dh
   1400357fc:	add    BYTE PTR gs:[rip+0x6f004c00],ch        # 0x1af03a403
   140035803:	add    BYTE PTR [rbx+0x0],ah
   140035806:	(bad)  
   140035807:	add    BYTE PTR [rax+rax*1+0x52],ch
   14003580b:	add    BYTE PTR [rbp+0x0],ah
   14003580e:	add    BYTE PTR [ecx+0x0],ch
   140035812:	jae    0x140035814
   140035814:	je     0x140035816
   140035816:	jb     0x140035818
   140035818:	jns    0x14003581a
   14003581a:	sub    eax,0x31004c00
   14003581f:	add    BYTE PTR [rip+0x2d003100],ch        # 0x16d038925
   140035825:	add    BYTE PTR [rax],dh
   140035827:	add    BYTE PTR [rsi],ch
   140035829:	add    BYTE PTR [rax+rax*1+0x6c],ah
   14003582d:	add    BYTE PTR [rax+rax*1+0x0],ch
   140035831:	add    BYTE PTR [rax],al
   140035833:	add    BYTE PTR [rax],al
   140035835:	add    BYTE PTR [rax],al
   140035837:	add    BYTE PTR [rdx+0x65],dl
   14003583a:	addr32 rex.R
   14003583c:	gs ins BYTE PTR es:[rdi],dx
   14003583e:	gs je  0x1400358a6
   140035841:	rex.WXB
   140035842:	gs jns 0x14003588a
   140035845:	js     0x14003589e
   140035847:	add    BYTE PTR [rdx+0x65],dl
   14003584a:	addr32 rex.R
   14003584c:	gs ins BYTE PTR es:[rdi],dx
   14003584e:	gs je  0x1400358b6
   140035851:	rex.WXB
   140035852:	gs jns 0x1400358ac
   140035855:	add    BYTE PTR [rax],al
   140035857:	add    BYTE PTR [rdi+0x23],ah
   14003585a:	fdivr  st,st(4)
   14003585c:	stc    
   14003585d:	(bad)  
   14003585e:	cli    
   14003585f:	bnd ja 0x14003589f
   140035862:	cmp    edx,DWORD PTR [rdx]
   140035864:	mov    WORD PTR [rdx+0x477455],ds
   14003586a:	(bad)  
   14003586b:	add    BYTE PTR [rax+0x0],dh
   14003586e:	(bad)  
   14003586f:	add    BYTE PTR [rbp+0x0],al
   140035872:	outs   dx,BYTE PTR ds:[rsi]
   140035873:	add    BYTE PTR [rdi+0x0],ah
   140035876:	imul   eax,DWORD PTR [rax],0x65006e
   14003587c:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   140035881:	add    BYTE PTR [rax+rax*1+0x0],ch
   140035885:	add    BYTE PTR [rax],al
   140035887:	add    BYTE PTR [rsi+0x0],cl
   14003588a:	imul   eax,DWORD PTR [rax],0x460073
   140035890:	jne    0x140035892
   140035892:	ins    BYTE PTR es:[rdi],dx
   140035893:	add    BYTE PTR [rax+rax*1+0x2e],ch
   140035897:	add    BYTE PTR [rsi+0x0],dh
   14003589a:	add    BYTE PTR fs:[rbp+0x0],ch
   14003589e:	add    BYTE PTR [rax],al
   1400358a0:	rex.RX add BYTE PTR [rcx+0x0],r12b
   1400358a4:	imul   eax,DWORD PTR [rax],0x65006c
   1400358aa:	add    BYTE PTR fs:[rax],ah
   1400358ad:	add    BYTE PTR [rax+rax*1+0x6f],dh
   1400358b1:	add    BYTE PTR [rax],ah
   1400358b3:	add    BYTE PTR [rdx+0x0],dh
   1400358b6:	add    BYTE PTR gs:[rax+rax*1+0x6f],ch
   1400358bb:	add    BYTE PTR [rcx+0x0],ah
   1400358be:	add    BYTE PTR fs:[rax],ah
   1400358c1:	add    BYTE PTR [rax+rax*1+0x65],ah
   1400358c5:	add    BYTE PTR [rsi+0x0],ah
   1400358c8:	imul   eax,DWORD PTR [rax],0x69006e
   1400358ce:	je     0x1400358d0
   1400358d0:	imul   eax,DWORD PTR [rax],0x6e006f
   1400358d6:	jae    0x1400358d8
   1400358d8:	sub    al,0x0
   1400358da:	and    BYTE PTR [rax],al
   1400358dc:	add    BYTE PTR gs:[rdx+0x0],dh
   1400358e0:	jb     0x1400358e2
   1400358e2:	outs   dx,DWORD PTR ds:[rsi]
   1400358e3:	add    BYTE PTR [rdx+0x0],dh
   1400358e6:	and    BYTE PTR [rax],al
   1400358e8:	cmp    eax,0x25002000
   1400358ed:	add    BYTE PTR [rbx+0x0],dl
	...
   1400358f8:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400358fa:	outs   dx,BYTE PTR ds:[rsi]
   1400358fb:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x2828206e
   140035904:	jo     0x140035947
   140035906:	ins    DWORD PTR es:[rdi],dx
   140035907:	rex.WB push r8
   140035909:	rex.XB sub DWORD PTR [r9],ebp
   14003590c:	and    BYTE PTR [rsi+0x61],ah
   14003590f:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x203e2d20
   140035917:	je     0x140035961
   140035919:	push   rdx
   14003591a:	and    BYTE PTR [rip+0x495f4520],bh        # 0x189629e40
   140035920:	rex.WRX push rsi
   140035922:	rex.B
   140035923:	rex.WR
   140035924:	rex.WB
   140035925:	rex.R
   140035926:	push   r10
   140035928:	rex.RXB add BYTE PTR [r8],r8b
   14003592b:	add    BYTE PTR [rax],al
   14003592d:	add    BYTE PTR [rax],al
   14003592f:	add    BYTE PTR [rbx+0x6f],al
   140035932:	outs   dx,BYTE PTR ds:[rsi]
   140035933:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x2828206e
   14003593c:	jo     0x14003598e
   14003593e:	ins    BYTE PTR es:[rdi],dx
   14003593f:	(bad)  
   140035940:	je     0x1400359a8
   140035942:	outs   dx,DWORD PTR ds:[rsi]
   140035943:	jb     0x1400359b2
   140035945:	and    BYTE PTR [rsi],ah
   140035947:	and    BYTE PTR es:[rax+0x70],dh
   14003594b:	rex.WRX imul r14,QWORD PTR [rbx+0x49],0x6570736e
   140035953:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140035957:	outs   dx,BYTE PTR ds:[rsi]
   140035958:	sub    DWORD PTR [rcx],ebp
   14003595a:	and    BYTE PTR [rsi+0x61],ah
   14003595d:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x203e2d20
   140035965:	je     0x1400359af
   140035967:	push   rdx
   140035968:	and    BYTE PTR [rip+0x495f4520],bh        # 0x189629e8e
   14003596e:	rex.WRX push rsi
   140035970:	rex.B
   140035971:	rex.WR
   140035972:	rex.WB
   140035973:	rex.R
   140035974:	push   r10
   140035976:	rex.RXB add BYTE PTR [r11+0x6f],r8b
   14003597a:	outs   dx,BYTE PTR ds:[rsi]
   14003597b:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x2828206e
   140035984:	jo     0x1400359fc
   140035986:	(bad)  
   140035987:	jb     0x1400359ca
   140035989:	jo     0x1400359fb
   14003598b:	ins    BYTE PTR es:[rdi],dx
   14003598c:	imul   esp,DWORD PTR [rbx+0x61],0x29656c62
   140035993:	sub    DWORD PTR [rax],esp
   140035995:	data16 (bad) 
   140035997:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x203e2d20
   14003599f:	jb     0x140035a06
   1400359a1:	je     0x140035a18
   1400359a3:	jb     0x140035a13
   1400359a5:	and    BYTE PTR [rbp+0x5f],al
   1400359a8:	rex.WB
   1400359a9:	rex.WRX push rsi
   1400359ab:	rex.B
   1400359ac:	rex.WR
   1400359ad:	rex.WB
   1400359ae:	rex.R
   1400359af:	push   r10
   1400359b1:	rex.RXB add BYTE PTR [r8],r8b
	...
   1400359c0:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400359c2:	outs   dx,BYTE PTR ds:[rsi]
   1400359c3:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x2828206e
   1400359cc:	jo     0x140035a1b
   1400359ce:	gs ins DWORD PTR es:[rdi],dx
   1400359d0:	(bad)  
   1400359d1:	gs jb  0x140035a47
   1400359d4:	push   0x26207069
   1400359d9:	and    BYTE PTR es:[rax+0x44],dh
   1400359dd:	gs jbe 0x140035a49
   1400359e0:	movsxd esp,DWORD PTR [rbp+0x52]
   1400359e3:	outs   dx,DWORD PTR ds:[rsi]
   1400359e4:	ins    BYTE PTR es:[rdi],dx
   1400359e5:	and    BYTE PTR gs:[rsi],ah
   1400359e8:	and    BYTE PTR es:[rax+0x50],dh
   1400359ec:	jb     0x140035a5d
   1400359ee:	fs jne 0x140035a54
   1400359f1:	je     0x140035a3a
   1400359f3:	jne    0x140035a5e
   1400359f5:	and    BYTE PTR fs:[rsi],ah
   1400359f8:	and    BYTE PTR es:[rax+0x50],dh
   1400359fc:	jb     0x140035a6d
   1400359fe:	fs jne 0x140035a64
   140035a01:	je     0x140035a59
   140035a03:	gs jb  0x140035a79
   140035a06:	imul   ebp,DWORD PTR [rdi+0x6e],0x66202929
   140035a0d:	(bad)  
   140035a0e:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x203e2d20
   140035a16:	jb     0x140035a7d
   140035a18:	je     0x140035a8f
   140035a1a:	jb     0x140035a8a
   140035a1c:	and    BYTE PTR [rbp+0x5f],al
   140035a1f:	rex.WB
   140035a20:	rex.WRX push rsi
   140035a22:	rex.B
   140035a23:	rex.WR
   140035a24:	rex.WB
   140035a25:	rex.R
   140035a26:	push   r10
   140035a28:	rex.RXB add BYTE PTR [r8],r8b
   140035a2b:	add    BYTE PTR [rax],al
   140035a2d:	add    BYTE PTR [rax],al
   140035a2f:	add    BYTE PTR [rbx+0x6f],al
   140035a32:	outs   dx,BYTE PTR ds:[rsi]
   140035a33:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x2828206e
   140035a3c:	jo     0x140035ab4
   140035a3e:	(bad)  
   140035a3f:	jb     0x140035a86
   140035a41:	outs   dx,BYTE PTR ds:[rsi]
   140035a42:	(bad)  
   140035a43:	(bad)  
   140035a44:	ins    BYTE PTR es:[rdi],dx
   140035a45:	sub    DWORD PTR gs:[rcx],ebp
   140035a48:	and    BYTE PTR [rsi+0x61],ah
   140035a4b:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x203e2d20
   140035a53:	jb     0x140035aba
   140035a55:	je     0x140035acc
   140035a57:	jb     0x140035ac7
   140035a59:	and    BYTE PTR [rbp+0x5f],al
   140035a5c:	rex.WB
   140035a5d:	rex.WRX push rsi
   140035a5f:	rex.B
   140035a60:	rex.WR
   140035a61:	rex.WB
   140035a62:	rex.R
   140035a63:	push   r10
   140035a65:	rex.RXB add BYTE PTR [r8],r8b
	...
   140035a70:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140035a72:	outs   dx,BYTE PTR ds:[rsi]
   140035a73:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x2828206e
   140035a7c:	jo     0x140035ac7
   140035a7e:	outs   dx,BYTE PTR ds:[rsi]
   140035a7f:	je     0x140035ae6
   140035a81:	jb     0x140035ae6
   140035a83:	gs jo  0x140035afa
   140035a86:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e696f50
   140035a8d:	je     0x140035ad2
   140035a8f:	outs   dx,DWORD PTR ds:[rsi]
   140035a90:	outs   dx,BYTE PTR ds:[rsi]
   140035a91:	outs   dx,BYTE PTR ds:[rsi]
   140035a92:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140035a97:	outs   dx,BYTE PTR ds:[rsi]
   140035a98:	and    BYTE PTR [rsi],ah
   140035a9a:	and    BYTE PTR es:[rax+0x70],dh
   140035a9e:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140035aa0:	outs   dx,BYTE PTR ds:[rsi]
   140035aa1:	outs   dx,BYTE PTR ds:[rsi]
   140035aa2:	rex.RB jbe 0x140035b19
   140035aa5:	jae    0x140035ad0
   140035aa7:	sub    DWORD PTR [rax],esp
   140035aa9:	data16 (bad) 
   140035aab:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x203e2d20
   140035ab3:	jb     0x140035b1a
   140035ab5:	je     0x140035b2c
   140035ab7:	jb     0x140035b27
   140035ab9:	and    BYTE PTR [rbp+0x5f],al
   140035abc:	rex.WB
   140035abd:	rex.WRX push rsi
   140035abf:	rex.B
   140035ac0:	rex.WR
   140035ac1:	rex.WB
   140035ac2:	rex.R
   140035ac3:	push   r10
   140035ac5:	rex.RXB add BYTE PTR [r8],r8b
	...
   140035ad0:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140035ad2:	outs   dx,BYTE PTR ds:[rsi]
   140035ad3:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x2828206e
   140035adc:	jae    0x140035b58
   140035ade:	push   rax
   140035adf:	(bad)  
   140035ae0:	je     0x140035b4a
   140035ae2:	and    BYTE PTR [rsi],ah
   140035ae4:	and    BYTE PTR es:[rax+0x75],dh
   140035ae8:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140035aea:	imul   ebp,DWORD PTR [esi+0x65],0x73726556
   140035af2:	imul   ebp,DWORD PTR [rdi+0x6e],0x20262620
   140035af9:	jo     0x140035b70
   140035afb:	push   rbx
   140035afc:	imul   esp,DWORD PTR [rdi+0x6e],0x72757461
   140035b03:	gs push rsi
   140035b05:	gs jb  0x140035b7b
   140035b08:	imul   ebp,DWORD PTR [rdi+0x6e],0x20262620
   140035b0f:	jo     0x140035b77
   140035b11:	pop    rdx
   140035b12:	movsxd esi,DWORD PTR fs:[r9+rbp*2+0x76]
   140035b18:	and    BYTE PTR gs:[rsi],ah
   140035b1b:	and    BYTE PTR es:[rax+0x66],dh
   140035b1f:	rex.X ins DWORD PTR es:[rdi],dx
   140035b21:	movsxd esi,DWORD PTR [r9+rbp*2+0x76]
   140035b26:	sub    DWORD PTR gs:[rcx],ebp
   140035b29:	and    BYTE PTR [rsi+0x61],ah
   140035b2c:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x203e2d20
   140035b34:	je     0x140035b7e
   140035b36:	push   rdx
   140035b37:	and    BYTE PTR [rip+0x495f4520],bh        # 0x18962a05d
   140035b3d:	rex.WRX push rsi
   140035b3f:	rex.B
   140035b40:	rex.WR
   140035b41:	rex.WB
   140035b42:	rex.R
   140035b43:	push   r10
   140035b45:	rex.RXB add BYTE PTR [r8],r8b
   140035b48:	rex.WRX add BYTE PTR [rcx+0x0],r9b
   140035b4c:	push   rbx
   140035b4d:	add    BYTE PTR [rdi+0x0],bl
   140035b50:	push   rbx
   140035b51:	add    BYTE PTR [rcx+0x0],ch
   140035b54:	add    BYTE PTR [eax+eax*1+0x6f],cl
   140035b59:	add    BYTE PTR [rcx+0x0],ah
   140035b5c:	add    BYTE PTR fs:[rax+0x0],dl
   140035b60:	(bad)  
   140035b61:	add    BYTE PTR [rax+rax*1+0x68],dh
   140035b65:	add    BYTE PTR [rdi+0x0],cl
   140035b68:	jbe    0x140035b6a
   140035b6a:	add    BYTE PTR gs:[rdx+0x0],dh
   140035b6e:	jb     0x140035b70
   140035b70:	imul   eax,DWORD PTR [rax],0x650064
	...
   140035b7e:	add    BYTE PTR [rax],al
   140035b80:	rex.WRX add BYTE PTR [rdi+0x0],r9b
   140035b84:	push   rsp
   140035b85:	add    BYTE PTR [rax],ah
   140035b87:	add    BYTE PTR [rax+rax*1+0x6f],ch
   140035b8b:	add    BYTE PTR [rcx+0x0],ah
   140035b8e:	add    BYTE PTR fs:[rcx+0x0],ch
   140035b92:	outs   dx,BYTE PTR ds:[rsi]
   140035b93:	add    BYTE PTR [rdi+0x0],ah
   140035b96:	and    BYTE PTR [rax],al
   140035b98:	jne    0x140035b9a
   140035b9a:	outs   dx,BYTE PTR ds:[rsi]
   140035b9b:	add    BYTE PTR [rbx+0x0],dh
   140035b9e:	jne    0x140035ba0
   140035ba0:	jo     0x140035ba2
   140035ba2:	jo     0x140035ba4
   140035ba4:	outs   dx,DWORD PTR ds:[rsi]
   140035ba5:	add    BYTE PTR [rdx+0x0],dh
   140035ba8:	je     0x140035baa
   140035baa:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   140035baf:	add    BYTE PTR [rbp+0x0],ah
   140035bb2:	outs   dx,BYTE PTR ds:[rsi]
   140035bb3:	add    BYTE PTR [rdi+0x0],ah
   140035bb6:	imul   eax,DWORD PTR [rax],0x65006e
   140035bbc:	sub    al,0x0
   140035bbe:	and    BYTE PTR [rax],al
   140035bc0:	(bad)  
   140035bc1:	add    BYTE PTR [rbp+0x0],dh
   140035bc4:	je     0x140035bc6
   140035bc6:	and    BYTE PTR [rax],al
   140035bc8:	ja     0x140035bca
   140035bca:	imul   eax,DWORD PTR [rax],0x6c006c
   140035bd0:	and    BYTE PTR [rax],al
   140035bd2:	jb     0x140035bd4
   140035bd4:	add    BYTE PTR gs:[rax+rax*1+0x75],dh
   140035bd9:	add    BYTE PTR [rdx+0x0],dh
   140035bdc:	outs   dx,BYTE PTR ds:[rsi]
   140035bdd:	add    BYTE PTR [rax],ah
   140035bdf:	add    BYTE PTR [rbx+0x0],dh
   140035be2:	jne    0x140035be4
   140035be4:	movsxd eax,DWORD PTR [rax]
   140035be6:	movsxd eax,DWORD PTR [rax]
   140035be8:	add    BYTE PTR gs:[rbx+0x0],dh
   140035bec:	jae    0x140035bee
   140035bee:	and    BYTE PTR [rax],al
   140035bf0:	data16 add BYTE PTR [rdi+0x0],ch
   140035bf4:	jb     0x140035bf6
   140035bf6:	and    BYTE PTR [rax],al
   140035bf8:	je     0x140035bfa
   140035bfa:	push   0x73006900
   140035bff:	add    BYTE PTR [rax],ah
   140035c01:	add    BYTE PTR [rbp+0x0],dh
   140035c04:	jo     0x140035c06
   140035c06:	add    BYTE PTR fs:[rcx+0x0],ah
   140035c0a:	je     0x140035c0c
   140035c0c:	add    BYTE PTR gs:[rax],al
   140035c0f:	add    BYTE PTR [rsi+0x0],cl
   140035c12:	add    BYTE PTR gs:[rdi+0x0],dh
   140035c16:	and    BYTE PTR [rax],al
   140035c18:	add    BYTE PTR gs:[rsi+0x0],ch
   140035c1c:	add    BYTE PTR [ecx+0x0],ch
   140035c20:	outs   dx,BYTE PTR ds:[rsi]
   140035c21:	add    BYTE PTR [rbp+0x0],ah
   140035c24:	and    BYTE PTR [rax],al
   140035c26:	jbe    0x140035c28
   140035c28:	add    BYTE PTR gs:[rdx+0x0],dh
   140035c2c:	jae    0x140035c2e
   140035c2e:	imul   eax,DWORD PTR [rax],0x6e006f
   140035c34:	cmp    eax,0x75002500
   140035c39:	add    BYTE PTR [rsi],ch
   140035c3b:	add    BYTE PTR [rip+0x2e007500],ah        # 0x16e03d141
   140035c41:	add    BYTE PTR [rip+0x2e007500],ah        # 0x16e03d147
   140035c47:	add    BYTE PTR [rip+0x3b007500],ah        # 0x17b03d14d
   140035c4d:	add    BYTE PTR [rax],ah
   140035c4f:	add    BYTE PTR [rsi+0x0],cl
   140035c52:	add    BYTE PTR gs:[rdi+0x0],dh
   140035c56:	and    BYTE PTR [rax],al
   140035c58:	jae    0x140035c5a
   140035c5a:	imul   eax,DWORD PTR [rax],0x6e0067
   140035c60:	(bad)  
   140035c61:	add    BYTE PTR [rax+rax*1+0x75],dh
   140035c65:	add    BYTE PTR [rdx+0x0],dh
   140035c68:	add    BYTE PTR gs:[rax],ah
   140035c6b:	add    BYTE PTR [rsi+0x0],dh
   140035c6e:	add    BYTE PTR gs:[rdx+0x0],dh
   140035c72:	jae    0x140035c74
   140035c74:	imul   eax,DWORD PTR [rax],0x6e006f
   140035c7a:	cmp    eax,0x75002500
   140035c7f:	add    BYTE PTR [rsi],ch
   140035c81:	add    BYTE PTR [rip+0x2e007500],ah        # 0x16e03d187
   140035c87:	add    BYTE PTR [rip+0x2e007500],ah        # 0x16e03d18d
   140035c8d:	add    BYTE PTR [rip+0x7500],ah        # 0x14003d193
	...
   140035c9f:	add    BYTE PTR [rsi+0x0],cl
   140035ca2:	rex.WB add BYTE PTR [r11+0x0],dl
   140035ca6:	pop    rdi
   140035ca7:	add    BYTE PTR [rbx+0x0],dl
   140035caa:	outs   dx,BYTE PTR ds:[rsi]
   140035cab:	add    BYTE PTR [rcx+0x0],ah
   140035cae:	jo     0x140035cb0
   140035cb0:	jae    0x140035cb2
   140035cb2:	push   0x74006f00
   140035cb7:	add    BYTE PTR [rdi+0x0],al
   140035cba:	ins    BYTE PTR es:[rdi],dx
   140035cbb:	add    BYTE PTR [rdi+0x0],ch
   140035cbe:	(bad)  
   140035cbf:	add    BYTE PTR [rcx+0x0],ah
   140035cc2:	ins    BYTE PTR es:[rdi],dx
   140035cc3:	add    BYTE PTR [rbx+0x0],al
   140035cc6:	outs   dx,DWORD PTR ds:[rsi]
   140035cc7:	add    BYTE PTR [rsi+0x0],ch
   140035cca:	data16 add BYTE PTR [rcx+0x0],ch
   140035cce:	add    BYTE PTR [edx+0x0],al
   140035cd2:	ins    DWORD PTR es:[rdi],dx
   140035cd3:	add    BYTE PTR [rbp+0x0],al
   140035cd6:	outs   dx,BYTE PTR ds:[rsi]
   140035cd7:	add    BYTE PTR [rcx+0x0],ah
   140035cda:	(bad)  
   140035cdb:	add    BYTE PTR [rax+rax*1+0x65],ch
   140035cdf:	add    BYTE PTR [rax+rax*1+0x0],ah
	...
   140035cef:	add    BYTE PTR [rsi+0x0],cl
   140035cf2:	rex.WB add BYTE PTR [r11+0x0],dl
   140035cf6:	pop    rdi
   140035cf7:	add    BYTE PTR [rbx+0x0],dl
   140035cfa:	outs   dx,BYTE PTR ds:[rsi]
   140035cfb:	add    BYTE PTR [rcx+0x0],ah
   140035cfe:	jo     0x140035d00
   140035d00:	jae    0x140035d02
   140035d02:	push   0x74006f00
   140035d07:	add    BYTE PTR [rdi+0x0],al
   140035d0a:	ins    BYTE PTR es:[rdi],dx
   140035d0b:	add    BYTE PTR [rdi+0x0],ch
   140035d0e:	(bad)  
   140035d0f:	add    BYTE PTR [rcx+0x0],ah
   140035d12:	ins    BYTE PTR es:[rdi],dx
   140035d13:	add    BYTE PTR [rbx+0x0],al
   140035d16:	outs   dx,DWORD PTR ds:[rsi]
   140035d17:	add    BYTE PTR [rsi+0x0],ch
   140035d1a:	data16 add BYTE PTR [rcx+0x0],ch
   140035d1e:	add    BYTE PTR [eax+eax*1+0x69],al
   140035d23:	add    BYTE PTR [rbx+0x0],dh
   140035d26:	(bad)  
   140035d27:	add    BYTE PTR [rdx+0x0],ah
   140035d2a:	ins    BYTE PTR es:[rdi],dx
   140035d2b:	add    BYTE PTR [rbp+0x0],ah
   140035d2e:	rex.X add BYTE PTR [rbp+0x0],bpl
   140035d32:	push   rdi
   140035d33:	add    BYTE PTR [rax+0x0],ch
   140035d36:	imul   eax,DWORD PTR [rax],0x65006c
   140035d3c:	rex.WRX add BYTE PTR [rcx+0x0],r13b
   140035d40:	jae    0x140035d42
   140035d42:	rex.WB add BYTE PTR [r11+0x0],sil
   140035d46:	add    BYTE PTR [r11+0x0],spl
   140035d4a:	je     0x140035d4c
   140035d4c:	imul   eax,DWORD PTR [rax],0x650076
	...
   140035d5e:	add    BYTE PTR [rax],al
   140035d60:	rex.WRX add BYTE PTR [rcx+0x0],r9b
   140035d64:	push   rbx
   140035d65:	add    BYTE PTR [rdi+0x0],bl
   140035d68:	push   rbx
   140035d69:	add    BYTE PTR [rsi+0x0],ch
   140035d6c:	(bad)  
   140035d6d:	add    BYTE PTR [rax+0x0],dh
   140035d70:	jae    0x140035d72
   140035d72:	push   0x74006f00
   140035d77:	add    BYTE PTR [rdi+0x0],al
   140035d7a:	ins    BYTE PTR es:[rdi],dx
   140035d7b:	add    BYTE PTR [rdi+0x0],ch
   140035d7e:	(bad)  
   140035d7f:	add    BYTE PTR [rcx+0x0],ah
   140035d82:	ins    BYTE PTR es:[rdi],dx
   140035d83:	add    BYTE PTR [rbx+0x0],al
   140035d86:	outs   dx,DWORD PTR ds:[rsi]
   140035d87:	add    BYTE PTR [rsi+0x0],ch
   140035d8a:	data16 add BYTE PTR [rcx+0x0],ch
   140035d8e:	add    BYTE PTR [ebx+0x0],al
   140035d92:	outs   dx,DWORD PTR ds:[rsi]
   140035d93:	add    BYTE PTR [rsi+0x0],ch
   140035d96:	je     0x140035d98
   140035d98:	imul   eax,DWORD PTR [rax],0x75006e
   140035d9e:	add    BYTE PTR gs:[rax+rax*1+0x49],ah
   140035da3:	add    BYTE PTR [rsi+0x0],ch
   140035da6:	jae    0x140035da8
   140035da8:	jo     0x140035daa
   140035daa:	add    BYTE PTR gs:[rbx+0x0],ah
   140035dae:	je     0x140035db0
   140035db0:	imul   eax,DWORD PTR [rax],0x6e006f
   140035db6:	rex.WRXB add BYTE PTR [r14+0x0],r13b
   140035dba:	rex.X add BYTE PTR [rbp+0x0],bpl
   140035dbe:	add    BYTE PTR [rbp+0x0],r12b
   140035dc2:	je     0x140035dc4
   140035dc4:	add    BYTE PTR gs:[rbx+0x0],ah
   140035dc8:	je     0x140035dca
   140035dca:	imul   eax,DWORD PTR [rax],0x6e006f
   140035dd0:	add    BYTE PTR [r14+0x0],r13b
   140035dd4:	(bad)  
   140035dd5:	add    BYTE PTR [rdx+0x0],ah
   140035dd8:	ins    BYTE PTR es:[rdi],dx
   140035dd9:	add    BYTE PTR [rbp+0x0],ah
   140035ddc:	add    BYTE PTR fs:[rax],al
   140035ddf:	add    BYTE PTR [rsi+0x0],cl
   140035de2:	rex.WB add BYTE PTR [r11+0x0],dl
   140035de6:	pop    rdi
   140035de7:	add    BYTE PTR [rbx+0x0],dl
   140035dea:	outs   dx,BYTE PTR ds:[rsi]
   140035deb:	add    BYTE PTR [rcx+0x0],ah
   140035dee:	jo     0x140035df0
   140035df0:	jae    0x140035df2
   140035df2:	push   0x74006f00
   140035df7:	add    BYTE PTR [rdi+0x0],al
   140035dfa:	ins    BYTE PTR es:[rdi],dx
   140035dfb:	add    BYTE PTR [rdi+0x0],ch
   140035dfe:	(bad)  
   140035dff:	add    BYTE PTR [rcx+0x0],ah
   140035e02:	ins    BYTE PTR es:[rdi],dx
   140035e03:	add    BYTE PTR [rbx+0x0],al
   140035e06:	outs   dx,DWORD PTR ds:[rsi]
   140035e07:	add    BYTE PTR [rsi+0x0],ch
   140035e0a:	data16 add BYTE PTR [rcx+0x0],ch
   140035e0e:	add    BYTE PTR [edx+0x0],al
   140035e12:	rex.WRB add BYTE PTR [r8+rax*1+0x65],r8b
   140035e17:	add    BYTE PTR [rax+rax*1+0x65],dh
   140035e1b:	add    BYTE PTR [rbx+0x0],ah
   140035e1e:	je     0x140035e20
   140035e20:	imul   eax,DWORD PTR [rax],0x6e006f
   140035e26:	push   rcx
   140035e27:	add    BYTE PTR [rbp+0x0],dh
   140035e2a:	add    BYTE PTR gs:[rbp+0x0],dh
   140035e2e:	add    BYTE PTR gs:[rax+rax*1+0x69],dl
   140035e33:	add    BYTE PTR [rbp+0x0],ch
   140035e36:	add    BYTE PTR gs:[rdx+0x0],al
   140035e3a:	add    BYTE PTR gs:[rax+rax*1+0x77],dh
   140035e3f:	add    BYTE PTR [rbp+0x0],ah
   140035e42:	add    BYTE PTR gs:[rsi+0x0],ch
   140035e46:	push   rbx
   140035e47:	add    BYTE PTR [rbp+0x0],ah
   140035e4a:	outs   dx,BYTE PTR ds:[rsi]
   140035e4b:	add    BYTE PTR [rax+rax*1+0x0],ah
   140035e4f:	add    BYTE PTR [rsi+0x0],cl
   140035e52:	rex.WB add BYTE PTR [r11+0x0],dl
   140035e56:	pop    rdi
   140035e57:	add    BYTE PTR [rbx+0x0],dl
   140035e5a:	outs   dx,BYTE PTR ds:[rsi]
   140035e5b:	add    BYTE PTR [rcx+0x0],ah
   140035e5e:	jo     0x140035e60
   140035e60:	jae    0x140035e62
   140035e62:	push   0x74006f00
   140035e67:	add    BYTE PTR [rdi+0x0],al
   140035e6a:	ins    BYTE PTR es:[rdi],dx
   140035e6b:	add    BYTE PTR [rdi+0x0],ch
   140035e6e:	(bad)  
   140035e6f:	add    BYTE PTR [rcx+0x0],ah
   140035e72:	ins    BYTE PTR es:[rdi],dx
   140035e73:	add    BYTE PTR [rbx+0x0],al
   140035e76:	outs   dx,DWORD PTR ds:[rsi]
   140035e77:	add    BYTE PTR [rsi+0x0],ch
   140035e7a:	data16 add BYTE PTR [rcx+0x0],ch
   140035e7e:	add    BYTE PTR [edx+0x0],al
   140035e82:	rex.WRB add BYTE PTR [r8+rax*1+0x65],r8b
   140035e87:	add    BYTE PTR [rax+rax*1+0x65],dh
   140035e8b:	add    BYTE PTR [rbx+0x0],ah
   140035e8e:	je     0x140035e90
   140035e90:	imul   eax,DWORD PTR [rax],0x6e006f
   140035e96:	rex.WRB add BYTE PTR [r9+0x0],r12b
   140035e9a:	js     0x140035e9c
   140035e9c:	push   rcx
   140035e9d:	add    BYTE PTR [rbp+0x0],dh
   140035ea0:	add    BYTE PTR gs:[rbp+0x0],dh
   140035ea4:	add    BYTE PTR gs:[rax],al
	...
   140035eaf:	add    BYTE PTR [rsi+0x0],cl
   140035eb2:	rex.WB add BYTE PTR [r11+0x0],dl
   140035eb6:	pop    rdi
   140035eb7:	add    BYTE PTR [rbx+0x0],dl
   140035eba:	outs   dx,BYTE PTR ds:[rsi]
   140035ebb:	add    BYTE PTR [rcx+0x0],ah
   140035ebe:	jo     0x140035ec0
   140035ec0:	jae    0x140035ec2
   140035ec2:	push   0x74006f00
   140035ec7:	add    BYTE PTR [rdi+0x0],al
   140035eca:	ins    BYTE PTR es:[rdi],dx
   140035ecb:	add    BYTE PTR [rdi+0x0],ch
   140035ece:	(bad)  
   140035ecf:	add    BYTE PTR [rcx+0x0],ah
   140035ed2:	ins    BYTE PTR es:[rdi],dx
   140035ed3:	add    BYTE PTR [rbx+0x0],al
   140035ed6:	outs   dx,DWORD PTR ds:[rsi]
   140035ed7:	add    BYTE PTR [rsi+0x0],ch
   140035eda:	data16 add BYTE PTR [rcx+0x0],ch
   140035ede:	add    BYTE PTR [eax+0x0],cl
   140035ee2:	add    BYTE PTR gs:[rcx+0x0],ah
   140035ee6:	ins    BYTE PTR es:[rdi],dx
   140035ee7:	add    BYTE PTR [rax+rax*1+0x68],dh
   140035eeb:	add    BYTE PTR [rbp+0x0],cl
   140035eee:	outs   dx,DWORD PTR ds:[rsi]
   140035eef:	add    BYTE PTR [rsi+0x0],ch
   140035ef2:	imul   eax,DWORD PTR [rax],0x6f0074
   140035ef8:	jb     0x140035efa
   140035efa:	rex.RX add BYTE PTR [rdx+0x0],r14b
   140035efe:	add    BYTE PTR gs:[rcx+0x0],dh
   140035f02:	jne    0x140035f04
   140035f04:	add    BYTE PTR gs:[rsi+0x0],ch
   140035f08:	movsxd eax,DWORD PTR [rax]
   140035f0a:	jns    0x140035f0c
   140035f0c:	add    BYTE PTR [rax],al
   140035f0e:	add    BYTE PTR [rax],al
   140035f10:	rex.WRX add BYTE PTR [rcx+0x0],r9b
   140035f14:	push   rbx
   140035f15:	add    BYTE PTR [rdi+0x0],bl
   140035f18:	push   rbx
   140035f19:	add    BYTE PTR [rsi+0x0],ch
   140035f1c:	(bad)  
   140035f1d:	add    BYTE PTR [rax+0x0],dh
   140035f20:	jae    0x140035f22
   140035f22:	push   0x74006f00
   140035f27:	add    BYTE PTR [rdi+0x0],al
   140035f2a:	ins    BYTE PTR es:[rdi],dx
   140035f2b:	add    BYTE PTR [rdi+0x0],ch
   140035f2e:	(bad)  
   140035f2f:	add    BYTE PTR [rcx+0x0],ah
   140035f32:	ins    BYTE PTR es:[rdi],dx
   140035f33:	add    BYTE PTR [rbx+0x0],al
   140035f36:	outs   dx,DWORD PTR ds:[rsi]
   140035f37:	add    BYTE PTR [rsi+0x0],ch
   140035f3a:	data16 add BYTE PTR [rcx+0x0],ch
   140035f3e:	add    BYTE PTR [eax+0x0],cl
   140035f42:	add    BYTE PTR gs:[rcx+0x0],ah
   140035f46:	ins    BYTE PTR es:[rdi],dx
   140035f47:	add    BYTE PTR [rax+rax*1+0x68],dh
   140035f4b:	add    BYTE PTR [rax+rax*1+0x68],dl
   140035f4f:	add    BYTE PTR [rdx+0x0],dh
   140035f52:	outs   dx,DWORD PTR ds:[rsi]
   140035f53:	add    BYTE PTR [rbp+0x0],dh
   140035f56:	add    BYTE PTR [eax+0x0],ch
   140035f5a:	jo     0x140035f5c
   140035f5c:	jne    0x140035f5e
   140035f5e:	je     0x140035f60
	...
   140035f70:	rex.WRX add BYTE PTR [rcx+0x0],r9b
   140035f74:	push   rbx
   140035f75:	add    BYTE PTR [rdi+0x0],bl
   140035f78:	push   rbx
   140035f79:	add    BYTE PTR [rsi+0x0],ch
   140035f7c:	(bad)  
   140035f7d:	add    BYTE PTR [rax+0x0],dh
   140035f80:	jae    0x140035f82
   140035f82:	push   0x74006f00
   140035f87:	add    BYTE PTR [rdi+0x0],al
   140035f8a:	ins    BYTE PTR es:[rdi],dx
   140035f8b:	add    BYTE PTR [rdi+0x0],ch
   140035f8e:	(bad)  
   140035f8f:	add    BYTE PTR [rcx+0x0],ah
   140035f92:	ins    BYTE PTR es:[rdi],dx
   140035f93:	add    BYTE PTR [rbx+0x0],al
   140035f96:	outs   dx,DWORD PTR ds:[rsi]
   140035f97:	add    BYTE PTR [rsi+0x0],ch
   140035f9a:	data16 add BYTE PTR [rcx+0x0],ch
   140035f9e:	add    BYTE PTR [eax+0x0],cl
   140035fa2:	add    BYTE PTR gs:[rcx+0x0],ah
   140035fa6:	ins    BYTE PTR es:[rdi],dx
   140035fa7:	add    BYTE PTR [rax+rax*1+0x68],dh
   140035fab:	add    BYTE PTR [rdx+0x0],dl
   140035fae:	add    BYTE PTR gs:[rbp+0x0],ch
   140035fb2:	add    BYTE PTR gs:[rax+rax*1+0x69],ah
   140035fb7:	add    BYTE PTR [rcx+0x0],ah
   140035fba:	je     0x140035fbc
   140035fbc:	imul   eax,DWORD PTR [rax],0x6e006f
   140035fc2:	add    BYTE PTR [r14+0x0],r13b
   140035fc6:	(bad)  
   140035fc7:	add    BYTE PTR [rdx+0x0],ah
   140035fca:	ins    BYTE PTR es:[rdi],dx
   140035fcb:	add    BYTE PTR [rbp+0x0],ah
   140035fce:	add    BYTE PTR fs:[rax],al
	...
   140035fdd:	add    BYTE PTR [rax],al
   140035fdf:	add    BYTE PTR [rsi+0x0],cl
   140035fe2:	rex.WB add BYTE PTR [r11+0x0],dl
   140035fe6:	pop    rdi
   140035fe7:	add    BYTE PTR [rbx+0x0],dl
   140035fea:	outs   dx,BYTE PTR ds:[rsi]
   140035feb:	add    BYTE PTR [rcx+0x0],ah
   140035fee:	jo     0x140035ff0
   140035ff0:	jae    0x140035ff2
   140035ff2:	push   0x74006f00
   140035ff7:	add    BYTE PTR [rdi+0x0],al
   140035ffa:	ins    BYTE PTR es:[rdi],dx
   140035ffb:	add    BYTE PTR [rdi+0x0],ch
   140035ffe:	(bad)  
   140035fff:	add    BYTE PTR [rcx+0x0],ah
   140036002:	ins    BYTE PTR es:[rdi],dx
   140036003:	add    BYTE PTR [rbx+0x0],al
   140036006:	outs   dx,DWORD PTR ds:[rsi]
   140036007:	add    BYTE PTR [rsi+0x0],ch
   14003600a:	data16 add BYTE PTR [rcx+0x0],ch
   14003600e:	add    BYTE PTR [esi+0x0],cl
   140036012:	add    BYTE PTR gs:[rax+rax*1+0x42],dh
   140036017:	add    BYTE PTR [rax+rax*1+0x6f],ch
   14003601b:	add    BYTE PTR [rbx+0x0],ah
   14003601e:	imul   eax,DWORD PTR [rax],0x4f
   140036021:	add    BYTE PTR [rsi+0x0],ch
   140036024:	push   rbx
   140036025:	add    BYTE PTR [rax+0x0],ch
   140036028:	jne    0x14003602a
   14003602a:	je     0x14003602c
   14003602c:	add    BYTE PTR fs:[rdi+0x0],ch
   140036030:	ja     0x140036032
   140036032:	outs   dx,BYTE PTR ds:[rsi]
   140036033:	add    BYTE PTR [rbp+0x0],al
   140036036:	outs   dx,BYTE PTR ds:[rsi]
   140036037:	add    BYTE PTR [rcx+0x0],ah
   14003603a:	(bad)  
   14003603b:	add    BYTE PTR [rax+rax*1+0x65],ch
   14003603f:	add    BYTE PTR [rax+rax*1+0x0],ah
	...
   14003604f:	add    BYTE PTR [rsi+0x0],cl
   140036052:	rex.WB add BYTE PTR [r11+0x0],dl
   140036056:	pop    rdi
   140036057:	add    BYTE PTR [rbx+0x0],dl
   14003605a:	outs   dx,BYTE PTR ds:[rsi]
   14003605b:	add    BYTE PTR [rcx+0x0],ah
   14003605e:	jo     0x140036060
   140036060:	jae    0x140036062
   140036062:	push   0x74006f00
   140036067:	add    BYTE PTR [rdi+0x0],al
   14003606a:	ins    BYTE PTR es:[rdi],dx
   14003606b:	add    BYTE PTR [rdi+0x0],ch
   14003606e:	(bad)  
   14003606f:	add    BYTE PTR [rcx+0x0],ah
   140036072:	ins    BYTE PTR es:[rdi],dx
   140036073:	add    BYTE PTR [rbx+0x0],al
   140036076:	outs   dx,DWORD PTR ds:[rsi]
   140036077:	add    BYTE PTR [rsi+0x0],ch
   14003607a:	data16 add BYTE PTR [rcx+0x0],ch
   14003607e:	add    BYTE PTR [eax+eax*1+0x61],al
   140036083:	add    BYTE PTR [rax+rax*1+0x61],dh
   140036087:	add    BYTE PTR [rax+0x0],dh
   14003608a:	jne    0x14003608c
   14003608c:	ins    DWORD PTR es:[rdi],dx
   14003608d:	add    BYTE PTR [rax+0x0],dh
   140036090:	push   rax
   140036091:	add    BYTE PTR [rcx+0x0],ah
   140036094:	jb     0x140036096
   140036096:	(bad)  
   140036097:	add    BYTE PTR [rbp+0x0],ch
   14003609a:	jae    0x14003609c
   14003609c:	rex.WB add BYTE PTR [r10+0x0],sil
   1400360a0:	jo     0x1400360a2
   1400360a2:	rex.XB add BYTE PTR [r15+0x0],bpl
   1400360a6:	jne    0x1400360a8
   1400360a8:	outs   dx,BYTE PTR ds:[rsi]
   1400360a9:	add    BYTE PTR [rax+rax*1+0x0],dh
   1400360ad:	add    BYTE PTR [rax],al
   1400360af:	add    BYTE PTR [rsi+0x0],cl
   1400360b2:	rex.WB add BYTE PTR [r11+0x0],dl
   1400360b6:	pop    rdi
   1400360b7:	add    BYTE PTR [rdx+0x0],bl
   1400360ba:	add    BYTE PTR fs:[rcx+0x0],cl
   1400360be:	outs   dx,BYTE PTR ds:[rsi]
   1400360bf:	add    BYTE PTR [rbx+0x0],dh
   1400360c2:	jo     0x1400360c4
   1400360c4:	add    BYTE PTR gs:[rbx+0x0],ah
   1400360c8:	je     0x1400360ca
   1400360ca:	imul   eax,DWORD PTR [rax],0x6e006f
   1400360d0:	rex.WR add BYTE PTR [rcx+0x0],r13b
   1400360d4:	ins    DWORD PTR es:[rdi],dx
   1400360d5:	add    BYTE PTR [rcx+0x0],ch
   1400360d8:	je     0x1400360da
   1400360da:	pop    rdi
   1400360db:	add    BYTE PTR [rbx+0x0],al
   1400360de:	ins    BYTE PTR es:[rdi],dx
   1400360df:	add    BYTE PTR [rcx+0x0],ch
   1400360e2:	add    BYTE PTR gs:[rsi+0x0],ch
   1400360e6:	je     0x1400360e8
   1400360e8:	push   rdx
   1400360e9:	add    BYTE PTR [rbp+0x0],ah
   1400360ec:	movsxd eax,DWORD PTR [rax]
   1400360ee:	jbe    0x1400360f0
	...
   140036100:	rex.WRX add BYTE PTR [rcx+0x0],r9b
   140036104:	push   rbx
   140036105:	add    BYTE PTR [rdi+0x0],bl
   140036108:	pop    rdx
   140036109:	add    BYTE PTR [rax+rax*1+0x49],ah
   14003610d:	add    BYTE PTR [rsi+0x0],ch
   140036110:	jae    0x140036112
   140036112:	jo     0x140036114
   140036114:	add    BYTE PTR gs:[rbx+0x0],ah
   140036118:	je     0x14003611a
   14003611a:	imul   eax,DWORD PTR [rax],0x6e006f
   140036120:	rex.WR add BYTE PTR [rcx+0x0],r13b
   140036124:	ins    DWORD PTR es:[rdi],dx
   140036125:	add    BYTE PTR [rcx+0x0],ch
   140036128:	je     0x14003612a
   14003612a:	pop    rdi
   14003612b:	add    BYTE PTR [rbx+0x0],al
   14003612e:	ins    BYTE PTR es:[rdi],dx
   14003612f:	add    BYTE PTR [rcx+0x0],ch
   140036132:	add    BYTE PTR gs:[rsi+0x0],ch
   140036136:	je     0x140036138
   140036138:	push   rbx
   140036139:	add    BYTE PTR [rbp+0x0],ah
   14003613c:	outs   dx,BYTE PTR ds:[rsi]
   14003613d:	add    BYTE PTR [rax+rax*1+0x0],ah
	...
   14003614d:	add    BYTE PTR [rax],al
   14003614f:	add    BYTE PTR [rsi+0x0],cl
   140036152:	rex.WB add BYTE PTR [r11+0x0],dl
   140036156:	pop    rdi
   140036157:	add    BYTE PTR [rdx+0x0],al
   14003615a:	ins    DWORD PTR es:[rdi],dx
   14003615b:	add    BYTE PTR [rcx+0x0],cl
   14003615e:	outs   dx,BYTE PTR ds:[rsi]
   14003615f:	add    BYTE PTR [rbx+0x0],dh
   140036162:	jo     0x140036164
   140036164:	add    BYTE PTR gs:[rbx+0x0],ah
   140036168:	je     0x14003616a
   14003616a:	imul   eax,DWORD PTR [rax],0x6e006f
   140036170:	rex.WR add BYTE PTR [rcx+0x0],r13b
   140036174:	ins    DWORD PTR es:[rdi],dx
   140036175:	add    BYTE PTR [rcx+0x0],ch
   140036178:	je     0x14003617a
   14003617a:	pop    rdi
   14003617b:	add    BYTE PTR [rbx+0x0],al
   14003617e:	ins    BYTE PTR es:[rdi],dx
   14003617f:	add    BYTE PTR [rcx+0x0],ch
   140036182:	add    BYTE PTR gs:[rsi+0x0],ch
   140036186:	je     0x140036188
   140036188:	push   rdx
   140036189:	add    BYTE PTR [rbp+0x0],ah
   14003618c:	movsxd eax,DWORD PTR [rax]
   14003618e:	jbe    0x140036190
	...
   1400361a0:	rex.WRX add BYTE PTR [rcx+0x0],r9b
   1400361a4:	push   rbx
   1400361a5:	add    BYTE PTR [rdi+0x0],bl
   1400361a8:	rex.X add BYTE PTR [rbp+0x0],bpl
   1400361ac:	rex.WB add BYTE PTR [r14+0x0],bpl
   1400361b0:	jae    0x1400361b2
   1400361b2:	jo     0x1400361b4
   1400361b4:	add    BYTE PTR gs:[rbx+0x0],ah
   1400361b8:	je     0x1400361ba
   1400361ba:	imul   eax,DWORD PTR [rax],0x6e006f
   1400361c0:	rex.WR add BYTE PTR [rcx+0x0],r13b
   1400361c4:	ins    DWORD PTR es:[rdi],dx
   1400361c5:	add    BYTE PTR [rcx+0x0],ch
   1400361c8:	je     0x1400361ca
   1400361ca:	pop    rdi
   1400361cb:	add    BYTE PTR [rbx+0x0],al
   1400361ce:	ins    BYTE PTR es:[rdi],dx
   1400361cf:	add    BYTE PTR [rcx+0x0],ch
   1400361d2:	add    BYTE PTR gs:[rsi+0x0],ch
   1400361d6:	je     0x1400361d8
   1400361d8:	push   rbx
   1400361d9:	add    BYTE PTR [rbp+0x0],ah
   1400361dc:	outs   dx,BYTE PTR ds:[rsi]
   1400361dd:	add    BYTE PTR [rax+rax*1+0x0],ah
	...
   1400361ed:	add    BYTE PTR [rax],al
   1400361ef:	add    BYTE PTR [rsi+0x0],cl
   1400361f2:	rex.WB add BYTE PTR [r11+0x0],dl
   1400361f6:	pop    rdi
   1400361f7:	add    BYTE PTR [rbx+0x0],dl
   1400361fa:	outs   dx,BYTE PTR ds:[rsi]
   1400361fb:	add    BYTE PTR [rcx+0x0],ah
   1400361fe:	jo     0x140036200
   140036200:	jae    0x140036202
   140036202:	push   0x74006f00
   140036207:	add    BYTE PTR [rdi+0x0],al
   14003620a:	ins    BYTE PTR es:[rdi],dx
   14003620b:	add    BYTE PTR [rdi+0x0],ch
   14003620e:	(bad)  
   14003620f:	add    BYTE PTR [rcx+0x0],ah
   140036212:	ins    BYTE PTR es:[rdi],dx
   140036213:	add    BYTE PTR [rbx+0x0],al
   140036216:	outs   dx,DWORD PTR ds:[rsi]
   140036217:	add    BYTE PTR [rsi+0x0],ch
   14003621a:	data16 add BYTE PTR [rcx+0x0],ch
   14003621e:	add    BYTE PTR [eax+eax*1+0x79],al
   140036223:	add    BYTE PTR [rsi+0x0],ch
   140036226:	(bad)  
   140036227:	add    BYTE PTR [rbp+0x0],ch
   14003622a:	imul   eax,DWORD PTR [rax],0x490063
   140036230:	jb     0x140036232
   140036232:	jo     0x140036234
   140036234:	push   rdx
   140036235:	add    BYTE PTR [rbp+0x0],ah
   140036238:	jae    0x14003623a
   14003623a:	add    BYTE PTR gs:[rdx+0x0],dh
   14003623e:	jbe    0x140036240
   140036240:	add    BYTE PTR gs:[rax],al
	...
   14003624f:	add    BYTE PTR [rsi+0x0],cl
   140036252:	rex.WB add BYTE PTR [r11+0x0],dl
   140036256:	pop    rdi
   140036257:	add    BYTE PTR [rbx+0x0],dl
   14003625a:	outs   dx,BYTE PTR ds:[rsi]
   14003625b:	add    BYTE PTR [rcx+0x0],ah
   14003625e:	jo     0x140036260
   140036260:	jae    0x140036262
   140036262:	push   0x74006f00
   140036267:	add    BYTE PTR [rdi+0x0],al
   14003626a:	ins    BYTE PTR es:[rdi],dx
   14003626b:	add    BYTE PTR [rdi+0x0],ch
   14003626e:	(bad)  
   14003626f:	add    BYTE PTR [rcx+0x0],ah
   140036272:	ins    BYTE PTR es:[rdi],dx
   140036273:	add    BYTE PTR [rbx+0x0],al
   140036276:	outs   dx,DWORD PTR ds:[rsi]
   140036277:	add    BYTE PTR [rsi+0x0],ch
   14003627a:	data16 add BYTE PTR [rcx+0x0],ch
   14003627e:	add    BYTE PTR [eax+eax*1+0x79],al
   140036283:	add    BYTE PTR [rsi+0x0],ch
   140036286:	(bad)  
   140036287:	add    BYTE PTR [rbp+0x0],ch
   14003628a:	imul   eax,DWORD PTR [rax],0x490063
   140036290:	jb     0x140036292
   140036292:	jo     0x140036294
   140036294:	rex.WR add BYTE PTR [rdi+0x0],r13b
   140036298:	ja     0x14003629a
   14003629a:	push   rsp
   14003629b:	add    BYTE PTR [rax+0x0],ch
   14003629e:	jb     0x1400362a0
   1400362a0:	add    BYTE PTR gs:[rbx+0x0],dh
   1400362a4:	push   0x6c006f00
   1400362a9:	add    BYTE PTR [rax+rax*1+0x0],ah
   1400362ad:	add    BYTE PTR [rax],al
   1400362af:	add    BYTE PTR [rsi+0x0],cl
   1400362b2:	rex.WB add BYTE PTR [r11+0x0],dl
   1400362b6:	pop    rdi
   1400362b7:	add    BYTE PTR [rbx+0x0],dl
   1400362ba:	outs   dx,BYTE PTR ds:[rsi]
   1400362bb:	add    BYTE PTR [rcx+0x0],ah
   1400362be:	jo     0x1400362c0
   1400362c0:	jae    0x1400362c2
   1400362c2:	push   0x74006f00
   1400362c7:	add    BYTE PTR [rdi+0x0],al
   1400362ca:	ins    BYTE PTR es:[rdi],dx
   1400362cb:	add    BYTE PTR [rdi+0x0],ch
   1400362ce:	(bad)  
   1400362cf:	add    BYTE PTR [rcx+0x0],ah
   1400362d2:	ins    BYTE PTR es:[rdi],dx
   1400362d3:	add    BYTE PTR [rbx+0x0],al
   1400362d6:	outs   dx,DWORD PTR ds:[rsi]
   1400362d7:	add    BYTE PTR [rsi+0x0],ch
   1400362da:	data16 add BYTE PTR [rcx+0x0],ch
   1400362de:	add    BYTE PTR [eax+eax*1+0x79],al
   1400362e3:	add    BYTE PTR [rsi+0x0],ch
   1400362e6:	(bad)  
   1400362e7:	add    BYTE PTR [rbp+0x0],ch
   1400362ea:	imul   eax,DWORD PTR [rax],0x490063
   1400362f0:	jb     0x1400362f2
   1400362f2:	jo     0x1400362f4
   1400362f4:	rex.W add BYTE PTR [rcx+0x0],bpl
   1400362f8:	add    BYTE PTR [eax+0x0],ch
   1400362fc:	push   rsp
   1400362fd:	add    BYTE PTR [rax+0x0],ch
   140036300:	jb     0x140036302
   140036302:	add    BYTE PTR gs:[rbx+0x0],dh
   140036306:	push   0x6c006f00
   14003630b:	add    BYTE PTR [rax+rax*1+0x50],ah
   14003630f:	add    BYTE PTR [rdx+0x0],dh
   140036312:	add    BYTE PTR gs:[rbx+0x0],ah
   140036316:	add    BYTE PTR gs:[rsi+0x0],ch
   14003631a:	je     0x14003631c
   14003631c:	add    BYTE PTR [rax],al
   14003631e:	add    BYTE PTR [rax],al
   140036320:	rex.WRX add BYTE PTR [rcx+0x0],r9b
   140036324:	push   rbx
   140036325:	add    BYTE PTR [rdi+0x0],bl
   140036328:	push   rbx
   140036329:	add    BYTE PTR [rsi+0x0],ch
   14003632c:	(bad)  
   14003632d:	add    BYTE PTR [rax+0x0],dh
   140036330:	jae    0x140036332
   140036332:	push   0x74006f00
   140036337:	add    BYTE PTR [rdi+0x0],al
   14003633a:	ins    BYTE PTR es:[rdi],dx
   14003633b:	add    BYTE PTR [rdi+0x0],ch
   14003633e:	(bad)  
   14003633f:	add    BYTE PTR [rcx+0x0],ah
   140036342:	ins    BYTE PTR es:[rdi],dx
   140036343:	add    BYTE PTR [rbx+0x0],al
   140036346:	outs   dx,DWORD PTR ds:[rsi]
   140036347:	add    BYTE PTR [rsi+0x0],ch
   14003634a:	data16 add BYTE PTR [rcx+0x0],ch
   14003634e:	add    BYTE PTR [eax+eax*1+0x79],al
   140036353:	add    BYTE PTR [rsi+0x0],ch
   140036356:	(bad)  
   140036357:	add    BYTE PTR [rbp+0x0],ch
   14003635a:	imul   eax,DWORD PTR [rax],0x490063
   140036360:	jb     0x140036362
   140036362:	jo     0x140036364
   140036364:	rex.WB add BYTE PTR [r14+0x0],bpl
   140036368:	movsxd eax,DWORD PTR [rax]
   14003636a:	jb     0x14003636c
   14003636c:	add    BYTE PTR gs:[rcx+0x0],ah
   140036370:	jae    0x140036372
   140036372:	add    BYTE PTR gs:[rax+rax*1+0x65],al
   140036377:	add    BYTE PTR [rax+rax*1+0x61],ch
   14003637b:	add    BYTE PTR [rcx+0x0],bh
   14003637e:	rex.X add BYTE PTR [rcx+0x0],dil
   140036382:	rex.WB add BYTE PTR [r14+0x0],bpl
   140036386:	add    BYTE PTR fs:[rcx+0x0],ch
   14003638a:	movsxd eax,DWORD PTR [rax]
   14003638c:	(bad)  
   14003638d:	add    BYTE PTR [rax+rax*1+0x69],dh
   140036391:	add    BYTE PTR [rdi+0x0],ch
   140036394:	outs   dx,BYTE PTR ds:[rsi]
   140036395:	add    BYTE PTR [rbx+0x0],dh
	...
   1400363a0:	rex.WRX add BYTE PTR [rcx+0x0],r9b
   1400363a4:	push   rbx
   1400363a5:	add    BYTE PTR [rdi+0x0],bl
   1400363a8:	push   rbx
   1400363a9:	add    BYTE PTR [rsi+0x0],ch
   1400363ac:	(bad)  
   1400363ad:	add    BYTE PTR [rax+0x0],dh
   1400363b0:	jae    0x1400363b2
   1400363b2:	push   0x74006f00
   1400363b7:	add    BYTE PTR [rdi+0x0],al
   1400363ba:	ins    BYTE PTR es:[rdi],dx
   1400363bb:	add    BYTE PTR [rdi+0x0],ch
   1400363be:	(bad)  
   1400363bf:	add    BYTE PTR [rcx+0x0],ah
   1400363c2:	ins    BYTE PTR es:[rdi],dx
   1400363c3:	add    BYTE PTR [rbx+0x0],al
   1400363c6:	outs   dx,DWORD PTR ds:[rsi]
   1400363c7:	add    BYTE PTR [rsi+0x0],ch
   1400363ca:	data16 add BYTE PTR [rcx+0x0],ch
   1400363ce:	add    BYTE PTR [eax+eax*1+0x79],al
   1400363d3:	add    BYTE PTR [rsi+0x0],ch
   1400363d6:	(bad)  
   1400363d7:	add    BYTE PTR [rbp+0x0],ch
   1400363da:	imul   eax,DWORD PTR [rax],0x490063
   1400363e0:	jb     0x1400363e2
   1400363e2:	jo     0x1400363e4
   1400363e4:	add    BYTE PTR [rbp+0x0],r12b
   1400363e8:	movsxd eax,DWORD PTR [rax]
   1400363ea:	jb     0x1400363ec
   1400363ec:	add    BYTE PTR gs:[rcx+0x0],ah
   1400363f0:	jae    0x1400363f2
   1400363f2:	add    BYTE PTR gs:[rax+rax*1+0x65],al
   1400363f7:	add    BYTE PTR [rax+rax*1+0x61],ch
   1400363fb:	add    BYTE PTR [rcx+0x0],bh
   1400363fe:	rex.X add BYTE PTR [rcx+0x0],dil
   140036402:	rex.WB add BYTE PTR [r14+0x0],bpl
   140036406:	add    BYTE PTR fs:[rcx+0x0],ch
   14003640a:	movsxd eax,DWORD PTR [rax]
   14003640c:	(bad)  
   14003640d:	add    BYTE PTR [rax+rax*1+0x69],dh
   140036411:	add    BYTE PTR [rdi+0x0],ch
   140036414:	outs   dx,BYTE PTR ds:[rsi]
   140036415:	add    BYTE PTR [rbx+0x0],dh
	...
   140036420:	rex.WRX add BYTE PTR [rcx+0x0],r9b
   140036424:	push   rbx
   140036425:	add    BYTE PTR [rdi+0x0],bl
   140036428:	push   rbx
   140036429:	add    BYTE PTR [rsi+0x0],ch
   14003642c:	(bad)  
   14003642d:	add    BYTE PTR [rax+0x0],dh
   140036430:	jae    0x140036432
   140036432:	push   0x74006f00
   140036437:	add    BYTE PTR [rdi+0x0],al
   14003643a:	ins    BYTE PTR es:[rdi],dx
   14003643b:	add    BYTE PTR [rdi+0x0],ch
   14003643e:	(bad)  
   14003643f:	add    BYTE PTR [rcx+0x0],ah
   140036442:	ins    BYTE PTR es:[rdi],dx
   140036443:	add    BYTE PTR [rbx+0x0],al
   140036446:	outs   dx,DWORD PTR ds:[rsi]
   140036447:	add    BYTE PTR [rsi+0x0],ch
   14003644a:	data16 add BYTE PTR [rcx+0x0],ch
   14003644e:	add    BYTE PTR [eax+eax*1+0x79],al
   140036453:	add    BYTE PTR [rsi+0x0],ch
   140036456:	(bad)  
   140036457:	add    BYTE PTR [rbp+0x0],ch
   14003645a:	imul   eax,DWORD PTR [rax],0x490063
   140036460:	jb     0x140036462
   140036462:	jo     0x140036464
   140036464:	rex.RXB add BYTE PTR [r10+0x0],r14b
   140036468:	outs   dx,DWORD PTR ds:[rsi]
   140036469:	add    BYTE PTR [rdi+0x0],dh
   14003646c:	je     0x14003646e
   14003646e:	push   0x61004600
   140036473:	add    BYTE PTR [rbx+0x0],ah
   140036476:	je     0x140036478
   140036478:	outs   dx,DWORD PTR ds:[rsi]
   140036479:	add    BYTE PTR [rdx+0x0],dh
   14003647c:	add    BYTE PTR [rax],al
   14003647e:	add    BYTE PTR [rax],al
   140036480:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140036482:	outs   dx,BYTE PTR ds:[rsi]
   140036483:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x2828206e
   14003648c:	jo     0x1400364d3
   14003648e:	outs   dx,BYTE PTR ds:[rsi]
   14003648f:	imul   ebp,DWORD PTR [esi+0x65],0x6f666e49
   140036497:	and    BYTE PTR [rsi],ah
   140036499:	and    BYTE PTR es:[rax+0x66],dh
   14003649d:	pop    rdx
   14003649e:	movsxd esi,DWORD PTR fs:[r9+rbp*2+0x76]
   1400364a4:	and    BYTE PTR gs:[rsi],ah
   1400364a7:	and    BYTE PTR es:[rax+0x66],dh
   1400364ab:	rex.X ins DWORD PTR es:[rdi],dx
   1400364ad:	movsxd esi,DWORD PTR [r9+rbp*2+0x76]
   1400364b2:	sub    DWORD PTR gs:[rcx],ebp
   1400364b5:	and    BYTE PTR [rsi+0x61],ah
   1400364b8:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x203e2d20
   1400364c0:	je     0x14003650a
   1400364c2:	push   rdx
   1400364c3:	and    BYTE PTR [rip+0x495f4520],bh        # 0x18962a9e9
   1400364c9:	rex.WRX push rsi
   1400364cb:	rex.B
   1400364cc:	rex.WR
   1400364cd:	rex.WB
   1400364ce:	rex.R
   1400364cf:	push   r10
   1400364d1:	rex.RXB add BYTE PTR [r8],r8b
	...
   1400364e0:	rex.WRX add BYTE PTR [rcx+0x0],r9b
   1400364e4:	push   rbx
   1400364e5:	add    BYTE PTR [rdi+0x0],bl
   1400364e8:	push   rbp
   1400364e9:	add    BYTE PTR [rbx+0x0],dh
   1400364ec:	add    BYTE PTR gs:[rax+rax*1+0x65],al
   1400364f1:	add    BYTE PTR [rsi+0x0],ah
   1400364f4:	(bad)  
   1400364f5:	add    BYTE PTR [rbp+0x0],dh
   1400364f8:	ins    BYTE PTR es:[rdi],dx
   1400364f9:	add    BYTE PTR [rax+rax*1+0x53],dh
   1400364fd:	add    BYTE PTR [rsi+0x0],ch
   140036500:	(bad)  
   140036501:	add    BYTE PTR [rax+0x0],dh
   140036504:	jae    0x140036506
   140036506:	push   0x74006f00
   14003650b:	add    BYTE PTR [rdi+0x0],al
   14003650e:	ins    BYTE PTR es:[rdi],dx
   14003650f:	add    BYTE PTR [rdi+0x0],ch
   140036512:	(bad)  
   140036513:	add    BYTE PTR [rcx+0x0],ah
   140036516:	ins    BYTE PTR es:[rdi],dx
   140036517:	add    BYTE PTR [rbx+0x0],al
   14003651a:	outs   dx,DWORD PTR ds:[rsi]
   14003651b:	add    BYTE PTR [rsi+0x0],ch
   14003651e:	data16 add BYTE PTR [rcx+0x0],ch
   140036522:	add    BYTE PTR [eax],al
	...
   14003652d:	add    BYTE PTR [rax],al
   14003652f:	add    BYTE PTR [rdx+0x0],bh
   140036532:	add    BYTE PTR gs:[rdx+0x0],dh
   140036536:	outs   dx,DWORD PTR ds:[rsi]
   140036537:	add    BYTE PTR [rax],ah
   140036539:	add    BYTE PTR [rcx+0x0],ah
   14003653c:	movsxd eax,DWORD PTR [rax]
   14003653e:	je     0x140036540
   140036540:	imul   eax,DWORD PTR [rax],0x650076
   140036546:	and    BYTE PTR [rax],al
   140036548:	jae    0x14003654a
   14003654a:	imul   eax,DWORD PTR [rax],0x6e0067
   140036550:	(bad)  
   140036551:	add    BYTE PTR [rax+rax*1+0x75],dh
   140036555:	add    BYTE PTR [rdx+0x0],dh
   140036558:	add    BYTE PTR gs:[rbx+0x0],dh
   14003655c:	and    BYTE PTR [rax],al
   14003655e:	sub    eax,0x77002000
   140036563:	add    BYTE PTR [rcx+0x0],ch
   140036566:	ins    BYTE PTR es:[rdi],dx
   140036567:	add    BYTE PTR [rax+rax*1+0x20],ch
   14003656b:	add    BYTE PTR [rsi+0x0],ch
   14003656e:	outs   dx,DWORD PTR ds:[rsi]
   14003656f:	add    BYTE PTR [rax+rax*1+0x20],dh
   140036573:	add    BYTE PTR [rcx+0x0],ah
   140036576:	movsxd eax,DWORD PTR [rax]
   140036578:	je     0x14003657a
   14003657a:	jne    0x14003657c
   14003657c:	(bad)  
   14003657d:	add    BYTE PTR [rax+rax*1+0x6c],ch
   140036581:	add    BYTE PTR [rcx+0x0],bh
   140036584:	and    BYTE PTR [rax],al
   140036586:	ins    BYTE PTR es:[rdi],dx
   140036587:	add    BYTE PTR [rdi+0x0],ch
   14003658a:	(bad)  
   14003658b:	add    BYTE PTR [rax+rax*1+0x20],ah
   14003658f:	add    BYTE PTR [rbp+0x0],ah
   140036592:	outs   dx,BYTE PTR ds:[rsi]
   140036593:	add    BYTE PTR [rdi+0x0],ah
   140036596:	imul   eax,DWORD PTR [rax],0x65006e
   14003659c:	add    BYTE PTR [rax],al
   14003659e:	add    BYTE PTR [rax],al
   1400365a0:	rex.XB add BYTE PTR [r10+0x0],sil
   1400365a4:	add    BYTE PTR gs:[rcx+0x0],ah
   1400365a8:	je     0x1400365aa
   1400365aa:	add    BYTE PTR gs:[rdi+0x0],al
   1400365ae:	(bad)  
   1400365af:	add    BYTE PTR [rax+0x0],dh
   1400365b2:	(bad)  
   1400365b3:	add    BYTE PTR [rbx+0x0],al
   1400365b6:	outs   dx,DWORD PTR ds:[rsi]
   1400365b7:	add    BYTE PTR [rbp+0x0],ch
   1400365ba:	jo     0x1400365bc
   1400365bc:	outs   dx,DWORD PTR ds:[rsi]
   1400365bd:	add    BYTE PTR [rsi+0x0],ch
   1400365c0:	add    BYTE PTR gs:[rsi+0x0],ch
   1400365c4:	je     0x1400365c6
   1400365c6:	jae    0x1400365c8
   1400365c8:	and    BYTE PTR [rax],al
   1400365ca:	data16 add BYTE PTR [rcx+0x0],ah
   1400365ce:	imul   eax,DWORD PTR [rax],0x65006c
   1400365d4:	add    BYTE PTR fs:[rax],ah
   1400365d7:	add    BYTE PTR [rip+0x25002000],ch        # 0x1650385dd
   1400365dd:	add    BYTE PTR [rax],dh
   1400365df:	add    BYTE PTR [rax],bh
   1400365e1:	add    BYTE PTR [rax+0x0],bh
	...
   1400365f0:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400365f2:	outs   dx,BYTE PTR ds:[rsi]
   1400365f3:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x2828206e
   1400365fc:	jo     0x14003666e
   1400365fe:	rex.WRX
   1400365ff:	rex.WB
   140036600:	rex.RB
   140036601:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140036603:	ins    DWORD PTR es:[rdi],dx
   140036604:	jo     0x140036675
   140036606:	outs   dx,BYTE PTR ds:[rsi]
   140036607:	outs   dx,BYTE PTR gs:[rsi]
   140036609:	je     0x140036651
   14003660b:	(bad)  
   14003660c:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140036610:	jns    0x14003663b
   140036612:	sub    DWORD PTR [rax],esp
   140036614:	data16 (bad) 
   140036616:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x203e2d20
   14003661e:	je     0x140036668
   140036620:	push   rdx
   140036621:	and    BYTE PTR [rip+0x495f4520],bh        # 0x18962ab47
   140036627:	rex.WRX push rsi
   140036629:	rex.B
   14003662a:	rex.WR
   14003662b:	rex.WB
   14003662c:	rex.R
   14003662d:	push   r10
   14003662f:	rex.RXB add BYTE PTR [r8],r8b
   140036632:	add    BYTE PTR [rax],al
   140036634:	add    BYTE PTR [rax],al
   140036636:	add    BYTE PTR [rax],al
   140036638:	rex.WRX add BYTE PTR [rcx+0x0],r9b
   14003663c:	push   rbx
   14003663d:	add    BYTE PTR [rdi+0x0],bl
   140036640:	rex.RXB add BYTE PTR [r9+0x0],r12b
   140036644:	jo     0x140036646
   140036646:	(bad)  
   140036647:	add    BYTE PTR [rsi+0x0],al
   14003664a:	(bad)  
   14003664b:	add    BYTE PTR [rbx+0x0],ah
   14003664e:	je     0x140036650
   140036650:	outs   dx,DWORD PTR ds:[rsi]
   140036651:	add    BYTE PTR [rdx+0x0],dh
   140036654:	jns    0x140036656
   140036656:	add    BYTE PTR [rax+r8*1+0x61],r13b
   14003665b:	add    BYTE PTR [rdi+0x0],ah
   14003665e:	jae    0x140036660
	...
   140036670:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140036672:	outs   dx,BYTE PTR ds:[rsi]
   140036673:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x2828206e
   14003667c:	jae    0x1400366f8
   14003667e:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140036680:	imul   ebp,DWORD PTR [esi+0x65],0x506c6c44
   140036688:	(bad)  
   140036689:	je     0x1400366f3
   14003668b:	and    BYTE PTR [rsi],ah
   14003668d:	and    BYTE PTR es:[rax+0x70],dh
   140036691:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140036693:	imul   ebp,DWORD PTR [esi+0x65],0x6f666e49
   14003669b:	sub    DWORD PTR [rcx],ebp
   14003669d:	and    BYTE PTR [rsi+0x61],ah
   1400366a0:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x203e2d20
   1400366a8:	je     0x1400366f2
   1400366aa:	push   rdx
   1400366ab:	and    BYTE PTR [rip+0x495f4520],bh        # 0x18962abd1
   1400366b1:	rex.WRX push rsi
   1400366b3:	rex.B
   1400366b4:	rex.WR
   1400366b5:	rex.WB
   1400366b6:	rex.R
   1400366b7:	push   r10
   1400366b9:	rex.RXB add BYTE PTR [r8],r8b
   1400366bc:	add    BYTE PTR [rax],al
   1400366be:	add    BYTE PTR [rax],al
   1400366c0:	rex.XB jb 0x140036728
   1400366c3:	(bad)  
   1400366c4:	je     0x14003672b
   1400366c6:	rex.WRX
   1400366c7:	rex.WB
   1400366c8:	rex.RB
   1400366c9:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400366cb:	ins    DWORD PTR es:[rdi],dx
   1400366cc:	jo     0x14003673d
   1400366ce:	outs   dx,BYTE PTR ds:[rsi]
   1400366cf:	outs   dx,BYTE PTR gs:[rsi]
   1400366d1:	je     0x140036719
   1400366d3:	(bad)  
   1400366d4:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   1400366d8:	jns    0x1400366da
   1400366da:	add    BYTE PTR [rax],al
   1400366dc:	add    BYTE PTR [rax],al
   1400366de:	add    BYTE PTR [rax],al
   1400366e0:	rex.XB (bad) 
   1400366e2:	outs   dx,BYTE PTR ds:[rsi]
   1400366e3:	push   rbp
   1400366e4:	outs   dx,BYTE PTR ds:[rsi]
   1400366e5:	ins    BYTE PTR es:[rdi],dx
   1400366e6:	outs   dx,DWORD PTR ds:[rsi]
   1400366e7:	(bad)  
   1400366e8:	rex.RB outs dx,BYTE PTR fs:[rsi]
   1400366eb:	imul   ebp,DWORD PTR [esi+0x65],0x6c6c44
   1400366f3:	add    BYTE PTR [rax],al
   1400366f5:	add    BYTE PTR [rax],al
   1400366f7:	add    BYTE PTR [rdi+0x65],al
   1400366fa:	je     0x14003673f
   1400366fc:	jne    0x140036770
   1400366fe:	jb     0x140036765
   140036700:	outs   dx,BYTE PTR ds:[rsi]
   140036701:	je     0x140036752
   140036703:	jae    0x140036758
   140036705:	imul   esp,DWORD PTR [rdi+0x6e],0x72757461
   14003670c:	gs push rbx
   14003670e:	gs je  0x14003675a
   140036711:	add    BYTE PTR fs:[rax],al
   140036714:	add    BYTE PTR [rax],al
   140036716:	add    BYTE PTR [rax],al
   140036718:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14003671a:	outs   dx,BYTE PTR ds:[rsi]
   14003671b:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x2828206e
   140036724:	jo     0x140036774
   140036726:	imul   esi,DWORD PTR [rbx+0x46],0x43776f6c
   14003672d:	outs   dx,DWORD PTR ds:[rsi]
   14003672e:	outs   dx,BYTE PTR ds:[rsi]
   14003672f:	je     0x140036796
   140036731:	js     0x1400367a7
   140036733:	sub    DWORD PTR [rcx],ebp
   140036735:	and    BYTE PTR [rsi+0x61],ah
   140036738:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x203e2d20
   140036740:	je     0x14003678a
   140036742:	push   rdx
   140036743:	and    BYTE PTR [rip+0x495f4520],bh        # 0x18962ac69
   140036749:	rex.WRX push rsi
   14003674b:	rex.B
   14003674c:	rex.WR
   14003674d:	rex.WB
   14003674e:	rex.R
   14003674f:	push   r10
   140036751:	rex.RXB add BYTE PTR [r8],r8b
	...
   140036760:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140036762:	outs   dx,BYTE PTR ds:[rsi]
   140036763:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x2828206e
   14003676c:	jo     0x1400367bc
   14003676e:	rex.WB
   14003676f:	rex.RB
   140036770:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140036772:	ins    DWORD PTR es:[rdi],dx
   140036773:	jo     0x1400367e4
   140036775:	outs   dx,BYTE PTR ds:[rsi]
   140036776:	outs   dx,BYTE PTR gs:[rsi]
   140036778:	je     0x1400367c0
   14003677a:	(bad)  
   14003677b:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14003677f:	jns    0x1400367a1
   140036781:	es and BYTE PTR es:[rax+0x70],dh
   140036786:	push   rsp
   140036787:	gs ins BYTE PTR es:[rdi],dx
   140036789:	gs ins DWORD PTR es:[rdi],dx
   14003678b:	gs je  0x140036800
   14003678e:	jns    0x1400367dd
   140036790:	(bad)  
   140036791:	outs   dx,BYTE PTR ds:[rsi]
   140036792:	(bad)  
   140036793:	addr32 gs jb 0x1400367c0
   140036797:	sub    DWORD PTR [rax],esp
   140036799:	data16 (bad) 
   14003679b:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x203e2d20
   1400367a3:	je     0x1400367ed
   1400367a5:	push   rdx
   1400367a6:	and    BYTE PTR [rip+0x495f4520],bh        # 0x18962accc
   1400367ac:	rex.WRX push rsi
   1400367ae:	rex.B
   1400367af:	rex.WR
   1400367b0:	rex.WB
   1400367b1:	rex.R
   1400367b2:	push   r10
   1400367b4:	rex.RXB add BYTE PTR [r8],r8b
	...
   1400367bf:	add    BYTE PTR [rbx+0x6f],al
   1400367c2:	outs   dx,BYTE PTR ds:[rsi]
   1400367c3:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x2828206e
   1400367cc:	jo     0x14003681c
   1400367ce:	gs ja  0x140036816
   1400367d1:	outs   dx,BYTE PTR ds:[rsi]
   1400367d2:	imul   ebp,DWORD PTR [esi+0x65],0x656c6946
   1400367da:	push   rsi
   1400367db:	gs jb  0x1400367fe
   1400367de:	es and BYTE PTR es:[rax+0x4e],dh
   1400367e3:	gs ja  0x140036839
   1400367e6:	imul   esp,DWORD PTR [rdi+0x46],0x56656c69
   1400367ed:	gs jb  0x140036819
   1400367f0:	sub    DWORD PTR [rax],esp
   1400367f2:	data16 (bad) 
   1400367f4:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x203e2d20
   1400367fc:	je     0x140036846
   1400367fe:	push   rdx
   1400367ff:	and    BYTE PTR [rip+0x495f4520],bh        # 0x18962ad25
   140036805:	rex.WRX push rsi
   140036807:	rex.B
   140036808:	rex.WR
   140036809:	rex.WB
   14003680a:	rex.R
   14003680b:	push   r10
   14003680d:	rex.RXB add BYTE PTR [r8],r8b
   140036810:	push   rbx
   140036811:	add    BYTE PTR [rcx+0x0],ch
   140036814:	add    BYTE PTR [esi+0x0],ch
   140036818:	(bad)  
   140036819:	add    BYTE PTR [rax+rax*1+0x75],dh
   14003681d:	add    BYTE PTR [rdx+0x0],dh
   140036820:	add    BYTE PTR gs:[rax],ah
   140036823:	add    BYTE PTR [rbp+0x0],dh
   140036826:	jo     0x140036828
   140036828:	add    BYTE PTR fs:[rcx+0x0],ah
   14003682c:	je     0x14003682e
   14003682e:	add    BYTE PTR gs:[rax],ah
   140036831:	add    BYTE PTR [rip+0x66002000],ch        # 0x1a6038837
   140036837:	add    BYTE PTR [rcx+0x0],ch
   14003683a:	ins    BYTE PTR es:[rdi],dx
   14003683b:	add    BYTE PTR [rbp+0x0],ah
   14003683e:	jae    0x140036840
   140036840:	and    BYTE PTR [rax],al
   140036842:	jb     0x140036844
   140036844:	add    BYTE PTR gs:[rbx+0x0],ah
   140036848:	add    BYTE PTR gs:[rcx+0x0],ch
   14003684c:	jbe    0x14003684e
   14003684e:	add    BYTE PTR gs:[rax+rax*1+0x3a],ah
   140036853:	add    BYTE PTR [rax],ah
   140036855:	add    BYTE PTR [rbp+0x0],al
   140036858:	outs   dx,BYTE PTR ds:[rsi]
   140036859:	add    BYTE PTR [rdi+0x0],ah
   14003685c:	imul   eax,DWORD PTR [rax],0x65006e
   140036862:	and    BYTE PTR [rax],al
   140036864:	jbe    0x140036866
   140036866:	add    BYTE PTR gs:[rdx+0x0],dh
   14003686a:	jae    0x14003686c
   14003686c:	imul   eax,DWORD PTR [rax],0x6e006f
   140036872:	cmp    al,BYTE PTR [rax]
   140036874:	and    BYTE PTR [rax],al
   140036876:	and    eax,0x2e007500
   14003687b:	add    BYTE PTR [rip+0x2e007500],ah        # 0x16e03dd81
   140036881:	add    BYTE PTR [rip+0x2e007500],ah        # 0x16e03dd87
   140036887:	add    BYTE PTR [rip+0x3b007500],ah        # 0x17b03dd8d
   14003688d:	add    BYTE PTR [rax],ah
   14003688f:	add    BYTE PTR [rbx+0x0],dl
   140036892:	imul   eax,DWORD PTR [rax],0x6e0067
   140036898:	(bad)  
   140036899:	add    BYTE PTR [rax+rax*1+0x75],dh
   14003689d:	add    BYTE PTR [rdx+0x0],dh
   1400368a0:	add    BYTE PTR gs:[rax],ah
   1400368a3:	add    BYTE PTR [rsi+0x0],dh
   1400368a6:	add    BYTE PTR gs:[rdx+0x0],dh
   1400368aa:	jae    0x1400368ac
   1400368ac:	imul   eax,DWORD PTR [rax],0x6e006f
   1400368b2:	and    BYTE PTR [rax],al
   1400368b4:	cmp    eax,0x25002000
   1400368b9:	add    BYTE PTR [rbp+0x0],dh
   1400368bc:	add    BYTE PTR cs:[rip+0x2e007500],ah        # 0x16e03ddc3
   1400368c3:	add    BYTE PTR [rip+0x2e007500],ah        # 0x16e03ddc9
   1400368c9:	add    BYTE PTR [rip+0x7500],ah        # 0x14003ddcf
   1400368cf:	add    BYTE PTR [rsi+0x0],cl
   1400368d2:	rex.WB add BYTE PTR [r11+0x0],dl
   1400368d6:	pop    rdi
   1400368d7:	add    BYTE PTR [rax+rax*1+0x69],al
   1400368db:	add    BYTE PTR [rbx+0x0],dh
   1400368de:	(bad)  
   1400368df:	add    BYTE PTR [rdx+0x0],ah
   1400368e2:	ins    BYTE PTR es:[rdi],dx
   1400368e3:	add    BYTE PTR [rbp+0x0],ah
   1400368e6:	push   rbx
   1400368e7:	add    BYTE PTR [rbp+0x0],dh
   1400368ea:	jo     0x1400368ec
   1400368ec:	jo     0x1400368ee
   1400368ee:	outs   dx,DWORD PTR ds:[rsi]
   1400368ef:	add    BYTE PTR [rdx+0x0],dh
   1400368f2:	je     0x1400368f4
   1400368f4:	add    BYTE PTR gs:[rax+rax*1+0x45],ah
   1400368f9:	add    BYTE PTR [rsi+0x0],ch
   1400368fc:	add    BYTE PTR [ecx+0x0],ch
   140036900:	outs   dx,BYTE PTR ds:[rsi]
   140036901:	add    BYTE PTR [rbp+0x0],ah
   140036904:	push   rsi
   140036905:	add    BYTE PTR [rbp+0x0],ah
   140036908:	jb     0x14003690a
   14003690a:	jae    0x14003690c
   14003690c:	imul   eax,DWORD PTR [rax],0x6e006f
   140036912:	add    BYTE PTR [r14+0x0],r13b
   140036916:	data16 add BYTE PTR [rdi+0x0],ch
   14003691a:	jb     0x14003691c
   14003691c:	movsxd eax,DWORD PTR [rax]
   14003691e:	add    BYTE PTR gs:[rbp+0x0],ch
   140036922:	add    BYTE PTR gs:[rsi+0x0],ch
   140036926:	je     0x140036928
	...
   140036930:	push   rbp
   140036931:	add    BYTE PTR [rsi+0x0],ch
   140036934:	jae    0x140036936
   140036936:	jne    0x140036938
   140036938:	jo     0x14003693a
   14003693a:	jo     0x14003693c
   14003693c:	outs   dx,DWORD PTR ds:[rsi]
   14003693d:	add    BYTE PTR [rdx+0x0],dh
   140036940:	je     0x140036942
   140036942:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   140036947:	add    BYTE PTR [rbp+0x0],ah
   14003694a:	outs   dx,BYTE PTR ds:[rsi]
   14003694b:	add    BYTE PTR [rdi+0x0],ah
   14003694e:	imul   eax,DWORD PTR [rax],0x65006e
   140036954:	and    BYTE PTR [rax],al
   140036956:	jbe    0x140036958
   140036958:	add    BYTE PTR gs:[rdx+0x0],dh
   14003695c:	jae    0x14003695e
   14003695e:	imul   eax,DWORD PTR [rax],0x6e006f
   140036964:	and    BYTE PTR [rax],al
   140036966:	and    eax,0x2e007500
   14003696b:	add    BYTE PTR [rip+0x2e007500],ah        # 0x16e03de71
   140036971:	add    BYTE PTR [rip+0x2e007500],ah        # 0x16e03de77
   140036977:	add    BYTE PTR [rip+0x2e007500],ah        # 0x16e03de7d
   14003697d:	add    BYTE PTR [rax],ah
   14003697f:	add    BYTE PTR [rax+0x0],dl
   140036982:	ins    BYTE PTR es:[rdi],dx
   140036983:	add    BYTE PTR [rbp+0x0],ah
   140036986:	(bad)  
   140036987:	add    BYTE PTR [rbx+0x0],dh
   14003698a:	add    BYTE PTR gs:[rax],ah
   14003698d:	add    BYTE PTR [rbp+0x0],dh
   140036990:	jae    0x140036992
   140036992:	add    BYTE PTR gs:[rax],ah
   140036995:	add    BYTE PTR [rbp+0x0],ah
   140036998:	outs   dx,BYTE PTR ds:[rsi]
   140036999:	add    BYTE PTR [rdi+0x0],ah
   14003699c:	imul   eax,DWORD PTR [rax],0x65006e
   1400369a2:	and    BYTE PTR [rax],al
   1400369a4:	jbe    0x1400369a6
   1400369a6:	add    BYTE PTR gs:[rdx+0x0],dh
   1400369aa:	jae    0x1400369ac
   1400369ac:	imul   eax,DWORD PTR [rax],0x6e006f
   1400369b2:	and    BYTE PTR [rax],al
   1400369b4:	add    BYTE PTR ds:[rip+0x25002000],bh        # 0x1650389bb
   1400369bb:	add    BYTE PTR [rbp+0x0],dh
   1400369be:	add    BYTE PTR cs:[rip+0x2e007500],ah        # 0x16e03dec5
   1400369c5:	add    BYTE PTR [rip+0x2e007500],ah        # 0x16e03decb
   1400369cb:	add    BYTE PTR [rip+0x7500],ah        # 0x14003ded1
   1400369d1:	add    BYTE PTR [rax],al
   1400369d3:	add    BYTE PTR [rax+rax*1+0x0],bl
	...
   1400369df:	add    al,al
   1400369e1:	add    BYTE PTR [rax],al
   1400369e3:	add    BYTE PTR [rax],al
   1400369e5:	add    BYTE PTR [rax],al
   1400369e7:	rex.RX cmp eax,0xbac55a92
   1400369ed:	test   BYTE PTR [rbx+0x48],bh
   1400369f0:	mov    ah,0xd1
   1400369f2:	push   0xffffffff964f773d
   1400369f7:	test   DWORD PTR [rax],eax
   1400369f9:	add    BYTE PTR [rax],al
   1400369fb:	add    BYTE PTR [rax],al
   1400369fd:	add    BYTE PTR [rax],al
   1400369ff:	add    al,bl
   140036a01:	imul   eax,DWORD PTR [rbx],0x140
   140036a07:	add    BYTE PTR [rax],dl
   140036a09:	add    BYTE PTR [rax],al
   140036a0b:	add    BYTE PTR [rax],al
   140036a0d:	add    BYTE PTR [rax],al
   140036a0f:	add    BYTE PTR [rcx],al
   140036a11:	add    BYTE PTR [rax],al
   140036a13:	add    BYTE PTR [rax],al
   140036a15:	add    BYTE PTR [rax],al
   140036a17:	add    al,ch
   140036a19:	imul   eax,DWORD PTR [rbx],0x140
   140036a1f:	add    BYTE PTR [rax],dl
   140036a21:	add    BYTE PTR [rax],al
   140036a23:	add    BYTE PTR [rax],al
   140036a25:	add    BYTE PTR [rax],al
   140036a27:	add    BYTE PTR [rcx],al
	...
   140036a45:	add    BYTE PTR [rax],al
   140036a47:	add    BYTE PTR [rbx-0xe500801],bh
   140036a4d:	cld    
   140036a4e:	mov    ch,0x4e
   140036a50:	xchg   ebp,eax
   140036a51:	add    BYTE PTR [rbx],bh
   140036a53:	xchg   edi,eax
   140036a54:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140036a55:	rex.X push rsp
   140036a57:	fcomp  QWORD PTR [rdi+0x4e]
   140036a5a:	or     DWORD PTR [rdi+0x4c40966b],edx
   140036a60:	lahf   
   140036a61:	sub    eax,0x49293b68
   140036a66:	clc    
   140036a67:	cwde   
   140036a68:	xchg   ecx,eax
   140036a69:	sub    eax,0x7556e00
   140036a6e:	clc    
   140036a6f:	rex.R (bad) 
   140036a71:	(bad)  
   140036a72:	push   0xffffffff963e0ad1
   140036a77:	jo     0x140036af6
   140036a79:	mov    bh,0x88
   140036a7b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140036a7c:	sbb    ah,BYTE PTR [rbp*2-0xaa467b8]
   140036a83:	sbb    dl,BYTE PTR [rbx+0x55]
   140036a86:	leave  
   140036a87:	lods   al,BYTE PTR ds:[rsi]
   140036a88:	jbe    0x140036aef
   140036a8a:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140036a8e:	cmp    al,0x54
   140036a90:	and    BYTE PTR ds:[rdi+rbp*2+0x6f],dh
   140036a95:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   140036a99:	add    BYTE PTR [eax],al
   140036a9c:	add    BYTE PTR [rax],al
   140036a9e:	add    BYTE PTR [rax],al
   140036aa0:	mov    BYTE PTR [rbx],dl
   140036aa2:	add    BYTE PTR [rax],al
   140036aa4:	add    BYTE PTR fs:[rax],al
   140036aa7:	add    BYTE PTR [rax],dl
   140036aa9:	(bad)  
   140036aaa:	add    BYTE PTR [rax],al
   140036aac:	call   0x11c036ab4
   140036ab1:	add    eax,0xc80000
	...
   140036ac2:	adc    BYTE PTR [rax],al
   140036ac4:	add    BYTE PTR [rax+rax*1],al
   140036ac7:	add    BYTE PTR [rax+0x5a000001],dl
   140036acd:	add    BYTE PTR [rax],al
   140036acf:	add    BYTE PTR [rip+0x19000000],al        # 0x159036ad5
   140036ad5:	add    BYTE PTR [rax],al
   140036ad7:	add    BYTE PTR [rax+rax*1],dl
   140036ada:	add    BYTE PTR [rax],al
   140036adc:	add    BYTE PTR [rcx],al
   140036ade:	add    BYTE PTR [rcx],al
	...
   140036ae8:	adc    eax,0x2e89ea6
   140036aed:	ror    DWORD PTR [rax-0x21154f93],0x8d
   140036af4:	mov    esp,0x4333399f
   140036af9:	outs   dx,DWORD PTR ds:[rsi]
   140036afa:	outs   dx,BYTE PTR ds:[rsi]
   140036afb:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x2828206e
   140036b04:	jo     0x140036b76
   140036b06:	rex.WRX imul r14,QWORD PTR [rbx+0x49],0x6570736e
   140036b0e:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140036b12:	outs   dx,BYTE PTR ds:[rsi]
   140036b13:	rex.RX ins BYTE PTR es:[rdi],dx
   140036b15:	outs   dx,DWORD PTR ds:[rsi]
   140036b16:	ja     0x140036b41
   140036b18:	sub    DWORD PTR [rax],esp
   140036b1a:	data16 (bad) 
   140036b1c:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x203e2d20
   140036b24:	je     0x140036b6e
   140036b26:	push   rdx
   140036b27:	and    BYTE PTR [rip+0x495f4520],bh        # 0x18962b04d
   140036b2d:	rex.WRX push rsi
   140036b2f:	rex.B
   140036b30:	rex.WR
   140036b31:	rex.WB
   140036b32:	rex.R
   140036b33:	push   r10
   140036b35:	rex.RXB add BYTE PTR [r8],r8b
	...
   140036b40:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140036b42:	outs   dx,BYTE PTR ds:[rsi]
   140036b43:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x2828206e
   140036b4c:	jo     0x140036b9c
   140036b4e:	imul   esi,DWORD PTR [rbx+0x49],0x6570736e
   140036b55:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140036b59:	outs   dx,BYTE PTR ds:[rsi]
   140036b5a:	and    BYTE PTR [rsi],ah
   140036b5c:	and    BYTE PTR es:[rax+0x4e],dh
   140036b60:	imul   esi,DWORD PTR [rbx+0x46],0x43776f6c
   140036b67:	outs   dx,DWORD PTR ds:[rsi]
   140036b68:	outs   dx,BYTE PTR ds:[rsi]
   140036b69:	je     0x140036bd0
   140036b6b:	js     0x140036be1
   140036b6d:	and    BYTE PTR [rsi],ah
   140036b6f:	and    BYTE PTR es:[rax+0x45],dh
   140036b73:	outs   dx,BYTE PTR ds:[rsi]
   140036b74:	imul   ebp,DWORD PTR [esi+0x65],0x6f666e49
   140036b7c:	sub    DWORD PTR [rcx],ebp
   140036b7e:	and    BYTE PTR [rsi+0x61],ah
   140036b81:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x203e2d20
   140036b89:	je     0x140036bd3
   140036b8b:	push   rdx
   140036b8c:	and    BYTE PTR [rip+0x495f4520],bh        # 0x18962b0b2
   140036b92:	rex.WRX push rsi
   140036b94:	rex.B
   140036b95:	rex.WR
   140036b96:	rex.WB
   140036b97:	rex.R
   140036b98:	push   r10
   140036b9a:	rex.RXB add BYTE PTR [r8],r8b
   140036b9d:	add    BYTE PTR [rax],al
   140036b9f:	add    BYTE PTR [rsi+0x0],cl
   140036ba2:	rex.WB add BYTE PTR [r11+0x0],dl
   140036ba6:	pop    rdi
   140036ba7:	add    BYTE PTR [rax+rax*1+0x65],al
   140036bab:	add    BYTE PTR [rax+rax*1+0x61],ch
   140036baf:	add    BYTE PTR [rcx+0x0],bh
   140036bb2:	rex.WB add BYTE PTR [r14+0x0],bpl
   140036bb6:	jae    0x140036bb8
   140036bb8:	jo     0x140036bba
   140036bba:	add    BYTE PTR gs:[rbx+0x0],ah
   140036bbe:	je     0x140036bc0
   140036bc0:	imul   eax,DWORD PTR [rax],0x6e006f
   140036bc6:	rex.WRB add BYTE PTR [r9+0x0],r13b
   140036bca:	ins    BYTE PTR es:[rdi],dx
   140036bcb:	add    BYTE PTR [rax+rax*1+0x69],ch
   140036bcf:	add    BYTE PTR [rbx+0x0],dl
   140036bd2:	add    BYTE PTR gs:[rbx+0x0],ah
   140036bd6:	outs   dx,DWORD PTR ds:[rsi]
   140036bd7:	add    BYTE PTR [rsi+0x0],ch
   140036bda:	add    BYTE PTR fs:[rbx+0x0],dh
   140036bde:	add    BYTE PTR [rax],al
   140036be0:	rex.WRX add BYTE PTR [rcx+0x0],r9b
   140036be4:	push   rbx
   140036be5:	add    BYTE PTR [rdi+0x0],bl
   140036be8:	add    BYTE PTR [rbp+0x0],r12b
   140036bec:	ins    BYTE PTR es:[rdi],dx
   140036bed:	add    BYTE PTR [rcx+0x0],ah
   140036bf0:	jns    0x140036bf2
   140036bf2:	rex.WB add BYTE PTR [r14+0x0],bpl
   140036bf6:	jae    0x140036bf8
   140036bf8:	jo     0x140036bfa
   140036bfa:	add    BYTE PTR gs:[rbx+0x0],ah
   140036bfe:	je     0x140036c00
   140036c00:	imul   eax,DWORD PTR [rax],0x6e006f
   140036c06:	push   rax
   140036c07:	add    BYTE PTR [rdi+0x0],ch
   140036c0a:	jb     0x140036c0c
   140036c0c:	je     0x140036c0e
   140036c0e:	push   rdx
   140036c0f:	add    BYTE PTR [rcx+0x0],ah
   140036c12:	outs   dx,BYTE PTR ds:[rsi]
   140036c13:	add    BYTE PTR [rdi+0x0],ah
   140036c16:	add    BYTE PTR gs:[rbp+0x0],cl
   140036c1a:	imul   eax,DWORD PTR [rax],0x6e
   140036c20:	rex.WRX add BYTE PTR [rcx+0x0],r9b
   140036c24:	push   rbx
   140036c25:	add    BYTE PTR [rdi+0x0],bl
   140036c28:	add    BYTE PTR [rbp+0x0],r12b
   140036c2c:	ins    BYTE PTR es:[rdi],dx
   140036c2d:	add    BYTE PTR [rcx+0x0],ah
   140036c30:	jns    0x140036c32
   140036c32:	rex.WB add BYTE PTR [r14+0x0],bpl
   140036c36:	jae    0x140036c38
   140036c38:	jo     0x140036c3a
   140036c3a:	add    BYTE PTR gs:[rbx+0x0],ah
   140036c3e:	je     0x140036c40
   140036c40:	imul   eax,DWORD PTR [rax],0x6e006f
   140036c46:	push   rax
   140036c47:	add    BYTE PTR [rdi+0x0],ch
   140036c4a:	jb     0x140036c4c
   140036c4c:	je     0x140036c4e
   140036c4e:	push   rdx
   140036c4f:	add    BYTE PTR [rcx+0x0],ah
   140036c52:	outs   dx,BYTE PTR ds:[rsi]
   140036c53:	add    BYTE PTR [rdi+0x0],ah
   140036c56:	add    BYTE PTR gs:[rbp+0x0],cl
   140036c5a:	(bad)  
   140036c5b:	add    BYTE PTR [rax+0x0],bh
   140036c5e:	add    BYTE PTR [rax],al
   140036c60:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140036c62:	outs   dx,BYTE PTR ds:[rsi]
   140036c63:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x2828206e
   140036c6c:	jo     0x140036cb3
   140036c6e:	outs   dx,BYTE PTR ds:[rsi]
   140036c6f:	imul   ebp,DWORD PTR [esi+0x65],0x6f666e49
   140036c77:	and    BYTE PTR [rsi],ah
   140036c79:	and    BYTE PTR es:[rax+0x4e],dh
   140036c7d:	imul   esi,DWORD PTR [rbx+0x46],0x43776f6c
   140036c84:	outs   dx,DWORD PTR ds:[rsi]
   140036c85:	outs   dx,BYTE PTR ds:[rsi]
   140036c86:	je     0x140036ced
   140036c88:	js     0x140036cfe
   140036c8a:	sub    DWORD PTR [rcx],ebp
   140036c8c:	and    BYTE PTR [rsi+0x61],ah
   140036c8f:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x203e2d20
   140036c97:	je     0x140036ce1
   140036c99:	push   rdx
   140036c9a:	and    BYTE PTR [rip+0x495f4520],bh        # 0x18962b1c0
   140036ca0:	rex.WRX push rsi
   140036ca2:	rex.B
   140036ca3:	rex.WR
   140036ca4:	rex.WB
   140036ca5:	rex.R
   140036ca6:	push   r10
   140036ca8:	rex.RXB add BYTE PTR [r8],r8b
   140036cab:	add    BYTE PTR [rax],al
   140036cad:	add    BYTE PTR [rax],al
   140036caf:	add    BYTE PTR [rsi+0x0],cl
   140036cb2:	rex.WB add BYTE PTR [r11+0x0],dl
   140036cb6:	pop    rdi
   140036cb7:	add    BYTE PTR [rax+rax*1+0x6f],cl
   140036cbb:	add    BYTE PTR [rdi+0x0],ah
   140036cbe:	rex.XB add BYTE PTR [r15+0x0],bpl
   140036cc2:	outs   dx,BYTE PTR ds:[rsi]
   140036cc3:	add    BYTE PTR [rsi+0x0],ch
   140036cc6:	add    BYTE PTR gs:[rbx+0x0],ah
   140036cca:	je     0x140036ccc
   140036ccc:	imul   eax,DWORD PTR [rax],0x6e006f
   140036cd2:	jae    0x140036cd4
	...
   140036ce0:	rex.X add BYTE PTR [rcx+0x0],dil
   140036ce4:	je     0x140036ce6
   140036ce6:	add    BYTE PTR gs:[rax],ah
   140036ce9:	add    BYTE PTR [rbx+0x0],ah
   140036cec:	outs   dx,DWORD PTR ds:[rsi]
   140036ced:	add    BYTE PTR [rbp+0x0],dh
   140036cf0:	outs   dx,BYTE PTR ds:[rsi]
   140036cf1:	add    BYTE PTR [rax+rax*1+0x28],dh
   140036cf5:	add    BYTE PTR [rip+0x36004900],ah        # 0x17603b5fb
   140036cfb:	add    BYTE PTR [rax+rax*1],dh
   140036cfe:	add    BYTE PTR fs:[rax],ah
   140036d01:	add    BYTE PTR [rbx],ch
   140036d03:	add    BYTE PTR [rax],ah
   140036d05:	add    BYTE PTR [rip+0x29007500],ah        # 0x16903e20b
   140036d0b:	add    BYTE PTR [rax],ah
   140036d0d:	add    BYTE PTR [rax+0x0],dh
   140036d10:	(bad)  
   140036d11:	add    BYTE PTR [rbx+0x0],dh
   140036d14:	jae    0x140036d16
   140036d16:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   140036d1b:	add    BYTE PTR [rax+rax*1+0x68],dh
   140036d1f:	add    BYTE PTR [rbp+0x0],ah
   140036d22:	and    BYTE PTR [rax],al
   140036d24:	imul   eax,DWORD PTR [rax],0x73006e
   140036d2a:	jo     0x140036d2c
   140036d2c:	add    BYTE PTR gs:[rbx+0x0],ah
   140036d30:	je     0x140036d32
   140036d32:	imul   eax,DWORD PTR [rax],0x6e006f
   140036d38:	and    BYTE PTR [rax],al
   140036d3a:	je     0x140036d3c
   140036d3c:	(bad)  
   140036d3d:	add    BYTE PTR [rdx+0x0],dh
   140036d40:	add    BYTE PTR [ebp+0x0],ah
   140036d44:	je     0x140036d46
   140036d46:	sub    BYTE PTR [rax],al
   140036d48:	and    eax,0x29007500
   140036d4d:	add    BYTE PTR [rax],ah
   140036d4f:	add    BYTE PTR [rdi+0x0],ch
   140036d52:	outs   dx,BYTE PTR ds:[rsi]
   140036d53:	add    BYTE PTR [rax],ah
   140036d55:	add    BYTE PTR [rax+rax*1+0x69],ah
   140036d59:	add    BYTE PTR [rdx+0x0],dh
   140036d5c:	add    BYTE PTR gs:[rbx+0x0],ah
   140036d60:	je     0x140036d62
   140036d62:	imul   eax,DWORD PTR [rax],0x6e006f
   140036d68:	sub    BYTE PTR [rax],al
   140036d6a:	and    eax,0x29006400
   140036d6f:	add    BYTE PTR [rax],ah
   140036d71:	add    BYTE PTR [rip+0x66002000],ch        # 0x1a6038d77
   140036d77:	add    BYTE PTR [rax+rax*1+0x6f],ch
   140036d7b:	add    BYTE PTR [rdi+0x0],dh
   140036d7e:	cmp    al,BYTE PTR [rax]
   140036d80:	and    BYTE PTR [rax],al
   140036d82:	sub    BYTE PTR [rax],al
   140036d84:	and    eax,0x29006400
   140036d89:	add    BYTE PTR [rax],ah
   140036d8b:	add    BYTE PTR [rip+0x73007700],ah        # 0x1b303e491
   140036d91:	add    BYTE PTR [rdx],bh
   140036d93:	add    BYTE PTR [rip+0x2d006400],ah        # 0x16d03d199
   140036d99:	add    BYTE PTR [rsi],bh
   140036d9b:	add    BYTE PTR [rip+0x73007700],ah        # 0x1b303e4a1
   140036da1:	add    BYTE PTR [rdx],bh
   140036da3:	add    BYTE PTR [rip+0x6400],ah        # 0x14003d1a9
   140036da9:	add    BYTE PTR [rax],al
   140036dab:	add    BYTE PTR [rax],al
   140036dad:	add    BYTE PTR [rax],al
   140036daf:	add    BYTE PTR [rsi+0x0],al
   140036db2:	ins    BYTE PTR es:[rdi],dx
   140036db3:	add    BYTE PTR [rdi+0x0],ch
   140036db6:	ja     0x140036db8
   140036db8:	and    BYTE PTR [rax],al
   140036dba:	jb     0x140036dbc
   140036dbc:	add    BYTE PTR gs:[rcx+0x0],ah
   140036dc0:	movsxd eax,DWORD PTR [rax]
   140036dc2:	push   0x64006500
   140036dc7:	add    BYTE PTR [rax],ah
   140036dc9:	add    BYTE PTR [rcx+0x0],ch
   140036dcc:	outs   dx,BYTE PTR ds:[rsi]
   140036dcd:	add    BYTE PTR [rbx+0x0],dh
   140036dd0:	jo     0x140036dd2
   140036dd2:	add    BYTE PTR gs:[rbx+0x0],ah
   140036dd6:	je     0x140036dd8
   140036dd8:	imul   eax,DWORD PTR [rax],0x6e006f
   140036dde:	and    BYTE PTR [rax],al
   140036de0:	ins    BYTE PTR es:[rdi],dx
   140036de1:	add    BYTE PTR [rcx+0x0],ch
   140036de4:	ins    DWORD PTR es:[rdi],dx
   140036de5:	add    BYTE PTR [rcx+0x0],ch
   140036de8:	je     0x140036dea
   140036dea:	and    BYTE PTR [rax],al
   140036dec:	outs   dx,DWORD PTR ds:[rsi]
   140036ded:	add    BYTE PTR [rsi+0x0],ch
   140036df0:	and    BYTE PTR [rax],al
   140036df2:	add    BYTE PTR gs:[rcx+0x0],ch
   140036df6:	je     0x140036df8
   140036df8:	push   0x72006500
   140036dfd:	add    BYTE PTR [rax],ah
   140036dff:	add    BYTE PTR [rax+rax*1+0x69],ah
   140036e03:	add    BYTE PTR [rdx+0x0],dh
   140036e06:	add    BYTE PTR gs:[rbx+0x0],ah
   140036e0a:	je     0x140036e0c
   140036e0c:	imul   eax,DWORD PTR [rax],0x6e006f
   140036e12:	sub    al,0x0
   140036e14:	and    BYTE PTR [rax],al
   140036e16:	data16 add BYTE PTR [rax+rax*1+0x6f],ch
   140036e1b:	add    BYTE PTR [rdi+0x0],dh
   140036e1e:	and    BYTE PTR [rax],al
   140036e20:	imul   eax,DWORD PTR [rax],0x200073
   140036e26:	movsxd eax,DWORD PTR [rax]
   140036e28:	(bad)  
   140036e29:	add    BYTE PTR [rsi+0x0],ch
   140036e2c:	movsxd eax,DWORD PTR [rax]
   140036e2e:	add    BYTE PTR gs:[rax+rax*1+0x6c],ch
   140036e33:	add    BYTE PTR [rbp+0x0],ah
   140036e36:	add    BYTE PTR fs:[rdx],bh
   140036e39:	add    BYTE PTR [rax],ah
   140036e3b:	add    BYTE PTR [rax],ch
   140036e3d:	add    BYTE PTR [rip+0x29006400],ah        # 0x16903d243
   140036e43:	add    BYTE PTR [rax],ah
   140036e45:	add    BYTE PTR [rip+0x73007700],ah        # 0x1b303e54b
   140036e4b:	add    BYTE PTR [rdx],bh
   140036e4d:	add    BYTE PTR [rip+0x2d006400],ah        # 0x16d03d253
   140036e53:	add    BYTE PTR [rsi],bh
   140036e55:	add    BYTE PTR [rip+0x73007700],ah        # 0x1b303e55b
   140036e5b:	add    BYTE PTR [rdx],bh
   140036e5d:	add    BYTE PTR [rip+0x6400],ah        # 0x14003d263
   140036e63:	add    BYTE PTR [rax],al
   140036e65:	add    BYTE PTR [rax],al
   140036e67:	add    BYTE PTR [rdx+0x65],dl
   140036e6a:	push   0x65
   140036e6c:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
	...
   140036e80:	push   rax
   140036e81:	add    BYTE PTR [rdx+0x0],dh
   140036e84:	outs   dx,DWORD PTR ds:[rsi]
   140036e85:	add    BYTE PTR [rax+rax*1+0x6f],dh
   140036e89:	add    BYTE PTR [rbx+0x0],ah
   140036e8c:	outs   dx,DWORD PTR ds:[rsi]
   140036e8d:	add    BYTE PTR [rax+rax*1+0x20],ch
   140036e91:	add    BYTE PTR [rax+rax*1+0x65],ah
   140036e95:	add    BYTE PTR [rax+rax*1+0x65],dh
   140036e99:	add    BYTE PTR [rdx+0x0],dh
   140036e9c:	ins    DWORD PTR es:[rdi],dx
   140036e9d:	add    BYTE PTR [rcx+0x0],ch
   140036ea0:	outs   dx,BYTE PTR ds:[rsi]
   140036ea1:	add    BYTE PTR [rbp+0x0],ah
   140036ea4:	add    BYTE PTR fs:[rax+rax*1],ch
   140036ea8:	and    BYTE PTR [rax],al
   140036eaa:	data16 add BYTE PTR [rax+rax*1+0x6f],ch
   140036eaf:	add    BYTE PTR [rdi+0x0],dh
   140036eb2:	and    BYTE PTR [rax],al
   140036eb4:	imul   eax,DWORD PTR [rax],0x200073
   140036eba:	jb     0x140036ebc
   140036ebc:	add    BYTE PTR gs:[rdx+0x0],ch
   140036ec0:	add    BYTE PTR gs:[rbx+0x0],ah
   140036ec4:	je     0x140036ec6
   140036ec6:	add    BYTE PTR gs:[rax+rax*1+0x3a],ah
   140036ecb:	add    BYTE PTR [rax],ah
   140036ecd:	add    BYTE PTR [rax],al
   140036ecf:	add    BYTE PTR [rcx+0x6e],cl
   140036ed2:	jae    0x140036f44
   140036ed4:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6e]
   140036ed9:	add    BYTE PTR [eax],al
   140036edc:	add    BYTE PTR [rax],al
   140036ede:	add    BYTE PTR [rax],al
   140036ee0:	push   rax
   140036ee1:	add    BYTE PTR [rdx+0x0],dh
   140036ee4:	outs   dx,DWORD PTR ds:[rsi]
   140036ee5:	add    BYTE PTR [rax+rax*1+0x6f],dh
   140036ee9:	add    BYTE PTR [rbx+0x0],ah
   140036eec:	outs   dx,DWORD PTR ds:[rsi]
   140036eed:	add    BYTE PTR [rax+rax*1+0x20],ch
   140036ef1:	add    BYTE PTR [rax+rax*1+0x65],ah
   140036ef5:	add    BYTE PTR [rax+rax*1+0x65],dh
   140036ef9:	add    BYTE PTR [rdx+0x0],dh
   140036efc:	ins    DWORD PTR es:[rdi],dx
   140036efd:	add    BYTE PTR [rcx+0x0],ch
   140036f00:	outs   dx,BYTE PTR ds:[rsi]
   140036f01:	add    BYTE PTR [rbp+0x0],ah
   140036f04:	add    BYTE PTR fs:[rax+rax*1],ch
   140036f08:	and    BYTE PTR [rax],al
   140036f0a:	data16 add BYTE PTR [rax+rax*1+0x6f],ch
   140036f0f:	add    BYTE PTR [rdi+0x0],dh
   140036f12:	and    BYTE PTR [rax],al
   140036f14:	ja     0x140036f16
   140036f16:	imul   eax,DWORD PTR [rax],0x6c006c
   140036f1c:	and    BYTE PTR [rax],al
   140036f1e:	(bad)  
   140036f1f:	add    BYTE PTR [rbp+0x0],ah
   140036f22:	and    BYTE PTR [rax],al
   140036f24:	imul   eax,DWORD PTR [rax],0x73006e
   140036f2a:	jo     0x140036f2c
   140036f2c:	add    BYTE PTR gs:[rbx+0x0],ah
   140036f30:	je     0x140036f32
   140036f32:	add    BYTE PTR gs:[rax+rax*1+0x3a],ah
   140036f37:	add    BYTE PTR [rax],ah
   140036f39:	add    BYTE PTR [rax],al
   140036f3b:	add    BYTE PTR [rax],al
   140036f3d:	add    BYTE PTR [rax],al
   140036f3f:	add    BYTE PTR [rip+0x73007700],ah        # 0x1b303e645
   140036f45:	add    BYTE PTR [rdx],bh
   140036f47:	add    BYTE PTR [rax],ah
   140036f49:	add    BYTE PTR [rax],ch
   140036f4b:	add    BYTE PTR [rip+0x29007500],ah        # 0x16903e451
   140036f51:	add    BYTE PTR [rax],ah
   140036f53:	add    BYTE PTR [rip+0x73007700],ah        # 0x1b303e659
   140036f59:	add    BYTE PTR [rdx],bh
   140036f5b:	add    BYTE PTR [rip+0x2d007500],ah        # 0x16d03e461
   140036f61:	add    BYTE PTR [rsi],bh
   140036f63:	add    BYTE PTR [rip+0x73007700],ah        # 0x1b303e669
   140036f69:	add    BYTE PTR [rdx],bh
   140036f6b:	add    BYTE PTR [rip+0x7500],ah        # 0x14003e471
   140036f71:	add    BYTE PTR [rax],al
   140036f73:	add    BYTE PTR [rax],al
   140036f75:	add    BYTE PTR [rax],al
   140036f77:	add    BYTE PTR [rsi+0x0],cl
   140036f7a:	rex.WB add BYTE PTR [r11+0x0],dl
   140036f7e:	pop    rdi
   140036f7f:	add    BYTE PTR [rax+rax*1+0x72],dl
   140036f83:	add    BYTE PTR [rbp+0x0],ah
   140036f86:	(bad)  
   140036f87:	add    BYTE PTR [rax+rax*1+0x53],dh
   140036f8b:	add    BYTE PTR [rcx+0x0],ch
   140036f8e:	add    BYTE PTR [ebp+0x0],cl
   140036f92:	(bad)  
   140036f93:	add    BYTE PTR [rax+rax*1+0x63],dh
   140036f97:	add    BYTE PTR [rax+0x0],ch
   140036f9a:	add    BYTE PTR [r11+0x0],sil
   140036f9e:	push   rax
   140036f9f:	add    BYTE PTR [rcx+0x0],ah
   140036fa2:	jb     0x140036fa4
   140036fa4:	jae    0x140036fa6
   140036fa6:	add    BYTE PTR gs:[rbp+0x0],al
   140036faa:	jb     0x140036fac
   140036fac:	jb     0x140036fae
   140036fae:	outs   dx,DWORD PTR ds:[rsi]
   140036faf:	add    BYTE PTR [rdx+0x0],dh
   140036fb2:	add    BYTE PTR [rax],al
   140036fb4:	add    BYTE PTR [rax],al
   140036fb6:	add    BYTE PTR [rax],al
   140036fb8:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140036fba:	outs   dx,BYTE PTR ds:[rsi]
   140036fbb:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x2828206e
   140036fc4:	jo     0x14003702c
   140036fc6:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140036fc8:	(bad)  
   140036fc9:	(bad)  
   140036fca:	ins    BYTE PTR es:[rdi],dx
   140036fcb:	gs sub DWORD PTR fs:[rcx],ebp
   140036fcf:	and    BYTE PTR [rsi+0x61],ah
   140036fd2:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x203e2d20
   140036fda:	jb     0x140037041
   140036fdc:	je     0x140037053
   140036fde:	jb     0x14003704e
   140036fe0:	and    BYTE PTR [rbp+0x5f],al
   140036fe3:	rex.WB
   140036fe4:	rex.WRX push rsi
   140036fe6:	rex.B
   140036fe7:	rex.WR
   140036fe8:	rex.WB
   140036fe9:	rex.R
   140036fea:	push   r10
   140036fec:	rex.RXB add BYTE PTR [r8],r8b
   140036fef:	add    BYTE PTR [rbx+0x6f],al
   140036ff2:	outs   dx,BYTE PTR ds:[rsi]
   140036ff3:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x2828206e
   140036ffc:	jo     0x140037051
   140036ffe:	imul   esp,DWORD PTR [rdi+0x6e],0x72757461
   140037005:	gs push rax
   140037007:	outs   dx,DWORD PTR ds:[rsi]
   140037008:	ins    BYTE PTR es:[rdi],dx
   140037009:	imul   esp,DWORD PTR [rbx+0x79],0x66202929
   140037010:	(bad)  
   140037011:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x203e2d20
   140037019:	je     0x140037063
   14003701b:	push   rdx
   14003701c:	and    BYTE PTR [rip+0x495f4520],bh        # 0x18962b542
   140037022:	rex.WRX push rsi
   140037024:	rex.B
   140037025:	rex.WR
   140037026:	rex.WB
   140037027:	rex.R
   140037028:	push   r10
   14003702a:	rex.RXB add BYTE PTR [r8],r8b
   14003702d:	add    BYTE PTR [rax],al
   14003702f:	add    BYTE PTR [rbx+0x6f],al
   140037032:	outs   dx,BYTE PTR ds:[rsi]
   140037033:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x2828206e
   14003703c:	jo     0x140037091
   14003703e:	imul   esp,DWORD PTR [rdi+0x6e],0x72757461
   140037045:	gs push rax
   140037047:	outs   dx,DWORD PTR ds:[rsi]
   140037048:	ins    BYTE PTR es:[rdi],dx
   140037049:	imul   esp,DWORD PTR [rbx+0x79],0x20262620
   140037050:	jo     0x1400370a6
   140037052:	gs ins BYTE PTR es:[rdi],dx
   140037054:	gs ins DWORD PTR es:[rdi],dx
   140037056:	gs je  0x1400370cb
   140037059:	jns    0x1400370a0
   14003705b:	jbe    0x1400370c2
   14003705d:	outs   dx,BYTE PTR ds:[rsi]
   14003705e:	je     0x140037089
   140037060:	sub    DWORD PTR [rax],esp
   140037062:	data16 (bad) 
   140037064:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x203e2d20
   14003706c:	je     0x1400370b6
   14003706e:	push   rdx
   14003706f:	and    BYTE PTR [rip+0x495f4520],bh        # 0x18962b595
   140037075:	rex.WRX push rsi
   140037077:	rex.B
   140037078:	rex.WR
   140037079:	rex.WB
   14003707a:	rex.R
   14003707b:	push   r10
   14003707d:	rex.RXB add BYTE PTR [r8],r8b
   140037080:	rex.WRX add BYTE PTR [rcx+0x0],r9b
   140037084:	push   rbx
   140037085:	add    BYTE PTR [rdi+0x0],bl
   140037088:	rex.WR add BYTE PTR [rdi+0x0],r13b
   14003708c:	add    BYTE PTR [ecx+0x0],al
   140037090:	ins    BYTE PTR es:[rdi],dx
   140037091:	add    BYTE PTR [rax+rax*1+0x53],ch
   140037095:	add    BYTE PTR [rcx+0x0],ch
   140037098:	add    BYTE PTR [ebp+0x0],cl
   14003709c:	(bad)  
   14003709d:	add    BYTE PTR [rax+rax*1+0x63],dh
   1400370a1:	add    BYTE PTR [rax+0x0],ch
   1400370a4:	add    BYTE PTR gs:[rbx+0x0],dh
	...
   1400370b0:	sahf   
   1400370b1:	jne    0x1400370db
   1400370b3:	(bad)  
   1400370b4:	popf   
   1400370b5:	(bad)  
   1400370b6:	cmp    DWORD PTR [rbp-0x6e],ecx
   1400370b9:	lea    ebx,[rsi]
   1400370bb:	(bad)  
   1400370bc:	push   rsp
   1400370bd:	fimul  DWORD PTR [rdi-0x4498da3f]
   1400370c3:	(bad)  
   1400370c4:	sbb    eax,0x954f5957
   1400370c9:	and    eax,0xaca38f7f
   1400370ce:	out    dx,al
   1400370cf:	(bad)
   1400370d2:	add    eax,DWORD PTR [rax+0x1]
   1400370d5:	add    BYTE PTR [rax],al
   1400370d7:	add    BYTE PTR [rax],cl
   1400370d9:	add    BYTE PTR [rax],al
   1400370db:	add    BYTE PTR [rax],al
   1400370dd:	add    BYTE PTR [rax],al
   1400370df:	add    BYTE PTR [rcx],al
   1400370e1:	add    BYTE PTR [rax],al
   1400370e3:	add    BYTE PTR [rax],al
   1400370e5:	add    BYTE PTR [rax],al
   1400370e7:	add    al,al
   1400370e9:	jo     0x1400370ee
   1400370eb:	rex add DWORD PTR [rax],eax
   1400370ee:	add    BYTE PTR [rax],al
   1400370f0:	or     BYTE PTR [rax],al
   1400370f2:	add    BYTE PTR [rax],al
   1400370f4:	add    BYTE PTR [rax],al
   1400370f6:	add    BYTE PTR [rax],al
   1400370f8:	add    DWORD PTR [rax],eax
	...
   140037116:	add    BYTE PTR [rax],al
   140037118:	and    eax,0xcc83bd35
   14003711d:	stos   BYTE PTR es:[rdi],al
   14003711e:	mov    ebx,DWORD PTR [rsi+0x3c8dca74]
   140037124:	imul   ecx,DWORD PTR [rsi],0xdebd
   14003712a:	add    BYTE PTR [rax],al
   14003712c:	add    BYTE PTR [rax],al
   14003712e:	add    BYTE PTR [rax],al
   140037130:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140037132:	outs   dx,BYTE PTR ds:[rsi]
   140037133:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x2828206e
   14003713c:	jo     0x140037192
   14003713e:	gs ins BYTE PTR es:[rdi],dx
   140037140:	gs ins DWORD PTR es:[rdi],dx
   140037142:	gs je  0x1400371b7
   140037145:	jns    0x14003718c
   140037147:	jbe    0x1400371ae
   140037149:	outs   dx,BYTE PTR ds:[rsi]
   14003714a:	je     0x14003716c
   14003714c:	es and BYTE PTR es:[rax+0x46],dh
   140037151:	ins    BYTE PTR es:[rdi],dx
   140037152:	outs   dx,DWORD PTR ds:[rsi]
   140037153:	ja     0x140037198
   140037155:	outs   dx,DWORD PTR ds:[rsi]
   140037156:	outs   dx,BYTE PTR ds:[rsi]
   140037157:	je     0x1400371be
   140037159:	js     0x1400371cf
   14003715b:	sub    DWORD PTR [rcx],ebp
   14003715d:	and    BYTE PTR [rsi+0x61],ah
   140037160:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x203e2d20
   140037168:	je     0x1400371b2
   14003716a:	push   rdx
   14003716b:	and    BYTE PTR [rip+0x495f4520],bh        # 0x18962b691
   140037171:	rex.WRX push rsi
   140037173:	rex.B
   140037174:	rex.WR
   140037175:	rex.WB
   140037176:	rex.R
   140037177:	push   r10
   140037179:	rex.RXB add BYTE PTR [r8],r8b
   14003717c:	add    BYTE PTR [rax],al
   14003717e:	add    BYTE PTR [rax],al
   140037180:	ins    BYTE PTR es:[rdi],dx
   140037181:	imul   esi,DWORD PTR [rbx+0x74],0x203e543c
   140037188:	je     0x1400371f9
   14003718a:	outs   dx,DWORD PTR ds:[rsi]
   14003718b:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   14003718f:	add    BYTE PTR [eax],al
   140037192:	add    BYTE PTR [rax],al
   140037194:	add    BYTE PTR [rax],al
   140037196:	add    BYTE PTR [rax],al
   140037198:	jmp    0x1400371cd
   14003719a:	jp     0x1400371d6
   14003719c:	mov    DWORD PTR [rdx-0x21],0xff088543
   1400371a3:	mov    al,0x55
   1400371a5:	xadd   DWORD PTR [rbx-0x9],edi
   1400371a9:	mov    ebp,0xf98d1af2
   1400371ae:	mov    fs,edi
   1400371b0:	lahf   
   1400371b1:	cwde   
   1400371b2:	lods   al,BYTE PTR ds:[rsi]
   1400371b3:	ret    
   1400371b4:	push   0xffffffffffffffaf
   1400371b6:	pop    rsi
   1400371b7:	add    BYTE PTR [rax],al
   1400371ba:	add    BYTE PTR [rax],al
   1400371bc:	add    BYTE PTR [rax],al
   1400371be:	add    BYTE PTR [rax],al
   1400371c0:	jnp    0x1400371c2
   1400371c2:	add    BYTE PTR [r10+0x0],al
   1400371c6:	xor    eax,DWORD PTR [rax]
   1400371c8:	add    BYTE PTR [r9],r15b
   1400371cb:	add    BYTE PTR [rdx+0x0],al
   1400371ce:	rex.RX add BYTE PTR [rax],r14b
   1400371d1:	add    BYTE PTR [rip+0x39003500],ch        # 0x17903a6d7
   1400371d7:	add    BYTE PTR [rax],dh
   1400371d9:	add    BYTE PTR [rbp+0x0],al
   1400371dc:	sub    eax,0x63003400
   1400371e1:	add    BYTE PTR [rbx],dh
   1400371e3:	add    BYTE PTR [rdx+0x0],ah
   1400371e6:	sub    eax,0x42003900
   1400371eb:	add    BYTE PTR [rdx+0x0],al
   1400371ee:	xor    al,0x0
   1400371f0:	sub    eax,0x33003900
   1400371f5:	add    BYTE PTR [rcx],dh
   1400371f7:	add    BYTE PTR [rdx],dh
   1400371f9:	add    BYTE PTR [rax],bh
   1400371fb:	add    BYTE PTR [rcx+0x0],al
   1400371fe:	rex.RX add BYTE PTR [rdi],r14b
   140037201:	add    BYTE PTR [rdx],dh
   140037203:	add    BYTE PTR [rdi],dh
   140037205:	add    BYTE PTR [rax],dh
   140037207:	add    BYTE PTR [rax+rax*1],dh
   14003720a:	jge    0x14003720c
   14003720c:	add    BYTE PTR [rax],al
   14003720e:	add    BYTE PTR [rax],al
   140037210:	jnp    0x140037212
   140037212:	add    BYTE PTR [rsi],r14b
   140037215:	add    BYTE PTR [rax],bh
   140037217:	add    BYTE PTR [rcx],bh
   140037219:	add    BYTE PTR [rcx+0x0],al
   14003721c:	add    BYTE PTR [r8+rax*1+0x30],r8b
   140037221:	add    BYTE PTR [rip+0x31003200],ch        # 0x17103a427
   140037227:	add    BYTE PTR [rax],dh
   140037229:	add    BYTE PTR [rax+rax*1],dh
   14003722c:	sub    eax,0x62003400
   140037231:	add    BYTE PTR [rcx],dh
   140037233:	add    BYTE PTR [rsi],dh
   140037235:	add    BYTE PTR [rip+0x38004200],ch        # 0x17803b43b
   14003723b:	add    BYTE PTR [rdx+0x0],al
   14003723e:	add    BYTE PTR [rip+0x30004400],r13b        # 0x17003b645
   140037245:	add    BYTE PTR [rax],bh
   140037247:	add    BYTE PTR [rsi+0x0],al
   14003724a:	cmp    BYTE PTR [rax],al
   14003724c:	xor    DWORD PTR [rax],eax
   14003724e:	rex.RX add BYTE PTR [rax],r15b
   140037251:	add    BYTE PTR [rdx],dh
   140037253:	add    BYTE PTR [rbx+0x0],al
   140037256:	xor    eax,0x7d003800
   14003725b:	add    BYTE PTR [rax],al
   14003725d:	add    BYTE PTR [rax],al
   14003725f:	add    BYTE PTR [rbx+0x0],bh
   140037262:	add    BYTE PTR ss:[rax],bh
   140037265:	add    BYTE PTR [rbx],dh
   140037267:	add    BYTE PTR [rax],dh
   140037269:	add    BYTE PTR [rax],bh
   14003726b:	add    BYTE PTR [rbx+0x0],ah
   14003726e:	xor    DWORD PTR [rax],eax
   140037270:	xor    DWORD PTR [rax],eax
   140037272:	sub    eax,0x66006400
   140037277:	add    BYTE PTR [rbp+0x0],ah
   14003727a:	add    BYTE PTR ss:[rip+0x30003400],ch        # 0x17003a681
   140037281:	add    BYTE PTR [rsi+0x0],ah
   140037284:	xor    eax,0x38002d00
   140037289:	add    BYTE PTR [rdx+0x0],ah
   14003728c:	cmp    DWORD PTR [rax],eax
   14003728e:	data16 add BYTE PTR [rip+0x32006400],ch        # 0x17203d695
   140037295:	add    BYTE PTR [rip+0x65003200],dh        # 0x1a503a49b
   14003729b:	add    BYTE PTR [rsi+0x0],ah
   14003729e:	add    BYTE PTR ss:[rbp+0x0],ah
   1400372a2:	xor    DWORD PTR [rax],eax
   1400372a4:	cmp    BYTE PTR [rax],al
   1400372a6:	xor    eax,0x7d006300
   1400372ab:	add    BYTE PTR [rax],al
   1400372ad:	add    BYTE PTR [rax],al
   1400372af:	add    BYTE PTR [rbx+0x0],bh
   1400372b2:	xor    eax,DWORD PTR [rax]
   1400372b4:	xor    eax,0x30006300
   1400372b9:	add    BYTE PTR [rdx+0x0],ah
   1400372bc:	cmp    DWORD PTR [rax],eax
   1400372be:	cmp    DWORD PTR [rax],eax
   1400372c0:	xor    DWORD PTR [rax],eax
   1400372c2:	sub    eax,0x34006200
   1400372c7:	add    BYTE PTR [rax+rax*1],dh
   1400372ca:	xor    al,0x0
   1400372cc:	sub    eax,0x34003400
   1400372d1:	add    BYTE PTR [rcx],dh
   1400372d3:	add    BYTE PTR [rcx],bh
   1400372d5:	add    BYTE PTR [rip+0x66006200],ch        # 0x1a603d4db
   1400372db:	add    BYTE PTR [rcx],bh
   1400372dd:	add    BYTE PTR [rcx],bh
   1400372df:	add    BYTE PTR [rip+0x35003300],ch        # 0x17503a5e5
   1400372e5:	add    BYTE PTR [rax],bh
   1400372e7:	add    BYTE PTR [rbp+0x0],ah
   1400372ea:	cmp    BYTE PTR [rax],al
   1400372ec:	xor    al,0x0
   1400372ee:	xor    BYTE PTR [rax],al
   1400372f0:	add    BYTE PTR gs:[rbx],dh
   1400372f3:	add    BYTE PTR [rdx+0x0],ah
   1400372f6:	(bad)  
   1400372f7:	add    BYTE PTR [rdx],dh
   1400372f9:	add    BYTE PTR [rbp+0x0],bh
   1400372fc:	add    BYTE PTR [rax],al
   1400372fe:	add    BYTE PTR [rax],al
   140037300:	sub    eax,0x53002d00
   140037305:	add    BYTE PTR [rcx+0x0],ch
   140037308:	add    BYTE PTR [esi+0x0],ch
   14003730c:	(bad)  
   14003730d:	add    BYTE PTR [rax+rax*1+0x75],dh
   140037311:	add    BYTE PTR [rdx+0x0],dh
   140037314:	add    BYTE PTR gs:[rax],ah
   140037317:	add    BYTE PTR [rax+rax*1+0x69],ch
   14003731b:	add    BYTE PTR [rbx+0x0],dh
   14003731e:	je     0x140037320
   140037320:	and    BYTE PTR [rax],al
   140037322:	jae    0x140037324
   140037324:	je     0x140037326
   140037326:	(bad)  
   140037327:	add    BYTE PTR [rdx+0x0],dh
   14003732a:	je     0x14003732c
   14003732c:	sub    eax,0x2d00
   140037331:	add    BYTE PTR [rax],al
   140037333:	add    BYTE PTR [rax],al
   140037335:	add    BYTE PTR [rax],al
   140037337:	add    BYTE PTR [rip+0x53002d00],ch        # 0x19303a03d
   14003733d:	add    BYTE PTR [rcx+0x0],ch
   140037340:	add    BYTE PTR [esi+0x0],ch
   140037344:	(bad)  
   140037345:	add    BYTE PTR [rax+rax*1+0x75],dh
   140037349:	add    BYTE PTR [rdx+0x0],dh
   14003734c:	add    BYTE PTR gs:[rax],ah
   14003734f:	add    BYTE PTR [rax+rax*1+0x69],ch
   140037353:	add    BYTE PTR [rbx+0x0],dh
   140037356:	je     0x140037358
   140037358:	and    BYTE PTR [rax],al
   14003735a:	add    BYTE PTR gs:[rsi+0x0],ch
   14003735e:	add    BYTE PTR fs:[rip+0x2d00],ch        # 0x14003a065
	...
   14003736d:	add    BYTE PTR [rax],al
   14003736f:	add    BYTE PTR [rbx+0x0],dl
   140037372:	imul   eax,DWORD PTR [rax],0x6e0067
   140037378:	(bad)  
   140037379:	add    BYTE PTR [rax+rax*1+0x75],dh
   14003737d:	add    BYTE PTR [rdx+0x0],dh
   140037380:	add    BYTE PTR gs:[rbx+0x0],dh
   140037384:	cmp    al,BYTE PTR [rax]
   140037386:	and    BYTE PTR [rax],al
   140037388:	push   rsp
   140037389:	add    BYTE PTR [rdi+0x0],ch
   14003738c:	je     0x14003738e
   14003738e:	(bad)  
   14003738f:	add    BYTE PTR [rax+rax*1+0x3a],ch
   140037393:	add    BYTE PTR [rax],ah
   140037395:	add    BYTE PTR [rip+0x3b007500],ah        # 0x17b03e89b
   14003739b:	add    BYTE PTR [rax],ah
   14003739d:	add    BYTE PTR [rax],ah
   14003739f:	add    BYTE PTR [rbp+0x0],al
   1400373a2:	outs   dx,BYTE PTR ds:[rsi]
   1400373a3:	add    BYTE PTR [rcx+0x0],ah
   1400373a6:	(bad)  
   1400373a7:	add    BYTE PTR [rax+rax*1+0x65],ch
   1400373ab:	add    BYTE PTR [rax+rax*1+0x3a],ah
   1400373af:	add    BYTE PTR [rax],ah
   1400373b1:	add    BYTE PTR [rip+0x75004900],ah        # 0x1b503bcb7
	...
   1400373bf:	add    BYTE PTR [rcx+0x0],al
   1400373c2:	movsxd eax,DWORD PTR [rax]
   1400373c4:	je     0x1400373c6
   1400373c6:	imul   eax,DWORD PTR [rax],0x650076
   1400373cc:	and    BYTE PTR [rax],al
   1400373ce:	jae    0x1400373d0
   1400373d0:	imul   eax,DWORD PTR [rax],0x6e0067
   1400373d6:	(bad)  
   1400373d7:	add    BYTE PTR [rax+rax*1+0x75],dh
   1400373db:	add    BYTE PTR [rdx+0x0],dh
   1400373de:	add    BYTE PTR gs:[rax],ah
   1400373e1:	add    BYTE PTR [rdx+0x0],ah
   1400373e4:	jb     0x1400373e6
   1400373e6:	add    BYTE PTR gs:[rcx+0x0],ah
   1400373ea:	imul   eax,DWORD PTR [rax],0x64
   1400373ed:	add    BYTE PTR [rdi+0x0],ch
   1400373f0:	ja     0x1400373f2
   1400373f2:	outs   dx,BYTE PTR ds:[rsi]
   1400373f3:	add    BYTE PTR [rdx],bh
   1400373f5:	add    BYTE PTR [rax],ah
   1400373f7:	add    BYTE PTR [rdx+0x0],al
   1400373fa:	rex.WRB add BYTE PTR [r10],r15b
   1400373fd:	add    BYTE PTR [rax],ah
   1400373ff:	add    BYTE PTR [rip+0x75004900],ah        # 0x1b503bd05
   140037405:	add    BYTE PTR [rbx],bh
   140037407:	add    BYTE PTR [rax],ah
   140037409:	add    BYTE PTR [rdx+0x0],bl
   14003740c:	add    BYTE PTR gs:[rdx+0x0],dh
   140037410:	outs   dx,DWORD PTR ds:[rsi]
   140037411:	add    BYTE PTR [rax+rax*1+0x61],al
   140037415:	add    BYTE PTR [rcx+0x0],bh
   140037418:	sub    eax,0x6c004200
   14003741d:	add    BYTE PTR [rdi+0x0],ch
   140037420:	movsxd eax,DWORD PTR [rax]
   140037422:	imul   eax,DWORD PTR [rax],0x3a
   140037425:	add    BYTE PTR [rax],ah
   140037427:	add    BYTE PTR [rip+0x75004900],ah        # 0x1b503bd2d
   14003742d:	add    BYTE PTR [rbx],bh
   14003742f:	add    BYTE PTR [rax],ah
   140037431:	add    BYTE PTR [rdx+0x0],bl
   140037434:	add    BYTE PTR gs:[rdx+0x0],dh
   140037438:	outs   dx,DWORD PTR ds:[rsi]
   140037439:	add    BYTE PTR [rax+rax*1+0x61],al
   14003743d:	add    BYTE PTR [rcx+0x0],bh
   140037440:	sub    eax,0x65004400
   140037445:	add    BYTE PTR [rax+rax*1+0x65],dh
   140037449:	add    BYTE PTR [rbx+0x0],ah
   14003744c:	je     0x14003744e
   14003744e:	cmp    al,BYTE PTR [rax]
   140037450:	and    BYTE PTR [rax],al
   140037452:	and    eax,0x75004900
   140037457:	add    BYTE PTR [rbx],bh
   140037459:	add    BYTE PTR [rax],ah
   14003745b:	add    BYTE PTR [rdx+0x0],bl
   14003745e:	add    BYTE PTR gs:[rdx+0x0],dh
   140037462:	outs   dx,DWORD PTR ds:[rsi]
   140037463:	add    BYTE PTR [rax+rax*1+0x61],al
   140037467:	add    BYTE PTR [rcx+0x0],bh
   14003746a:	sub    eax,0x65004400
   14003746f:	add    BYTE PTR [rax+rax*1+0x65],dh
   140037473:	add    BYTE PTR [rbx+0x0],ah
   140037476:	je     0x140037478
   140037478:	sub    eax,0x6e004900
   14003747d:	add    BYTE PTR [rax+rax*1+0x69],ch
   140037481:	add    BYTE PTR [rsi+0x0],ch
   140037484:	add    BYTE PTR gs:[rdx],bh
   140037487:	add    BYTE PTR [rax],ah
   140037489:	add    BYTE PTR [rip+0x75004900],ah        # 0x1b503bd8f
	...
   140037497:	add    BYTE PTR [rsi+0x0],cl
   14003749a:	rex.WB add BYTE PTR [r11+0x0],dl
   14003749e:	pop    rdi
   14003749f:	add    BYTE PTR [rbx+0x0],dl
   1400374a2:	imul   eax,DWORD PTR [rax],0x530067
   1400374a8:	add    BYTE PTR gs:[rax+rax*1+0x65],ch
   1400374ad:	add    BYTE PTR [rbx+0x0],ah
   1400374b0:	je     0x1400374b2
   1400374b2:	rex.RXB add BYTE PTR [r9+0x0],r12b
   1400374b6:	je     0x1400374b8
   1400374b8:	add    BYTE PTR gs:[rbp+0x0],al
   1400374bc:	outs   dx,BYTE PTR ds:[rsi]
   1400374bd:	add    BYTE PTR [rcx+0x0],ah
   1400374c0:	(bad)  
   1400374c1:	add    BYTE PTR [rax+rax*1+0x65],ch
   1400374c5:	add    BYTE PTR [rax+rax*1+0x0],ah
   1400374c9:	add    BYTE PTR [rax],al
   1400374cb:	add    BYTE PTR [rax],al
   1400374cd:	add    BYTE PTR [rax],al
   1400374cf:	add    BYTE PTR [rsi+0x0],cl
   1400374d2:	outs   dx,DWORD PTR ds:[rsi]
   1400374d3:	add    BYTE PTR [rax+rax*1+0x20],dh
   1400374d7:	add    BYTE PTR [rcx+0x0],ah
   1400374da:	and    BYTE PTR [rax],al
   1400374dc:	push   0x73006f00
   1400374e1:	add    BYTE PTR [rax+rax*1+0x20],dh
   1400374e5:	add    BYTE PTR [rbx+0x0],dh
   1400374e8:	imul   eax,DWORD PTR [rax],0x6e0067
   1400374ee:	(bad)  
   1400374ef:	add    BYTE PTR [rax+rax*1+0x75],dh
   1400374f3:	add    BYTE PTR [rdx+0x0],dh
   1400374f6:	add    BYTE PTR gs:[rax],al
   1400374f9:	add    BYTE PTR [rax],al
   1400374fb:	add    BYTE PTR [rax],al
   1400374fd:	add    BYTE PTR [rax],al
   1400374ff:	add    BYTE PTR [rcx+0x0],cl
   140037502:	push   rax
   140037503:	add    BYTE PTR [rbx+0x0],dl
   140037506:	and    BYTE PTR [rax],al
   140037508:	jae    0x14003750a
   14003750a:	imul   eax,DWORD PTR [rax],0x6e0067
   140037510:	(bad)  
   140037511:	add    BYTE PTR [rax+rax*1+0x75],dh
   140037515:	add    BYTE PTR [rdx+0x0],dh
   140037518:	add    BYTE PTR gs:[rax],ah
   14003751b:	add    BYTE PTR [rdi+0x0],dh
   14003751e:	push   0x6c006900
   140037523:	add    BYTE PTR [rbp+0x0],ah
   140037526:	and    BYTE PTR [rax],al
   140037528:	rex.WB add BYTE PTR [r8+0x0],dl
   14003752c:	push   rbx
   14003752d:	add    BYTE PTR [rax],ah
   14003752f:	add    BYTE PTR [rsi+0x0],ah
   140037532:	add    BYTE PTR gs:[rcx+0x0],ah
   140037536:	je     0x140037538
   140037538:	jne    0x14003753a
   14003753a:	jb     0x14003753c
   14003753c:	add    BYTE PTR gs:[rax],ah
   14003753f:	add    BYTE PTR [rcx+0x0],ch
   140037542:	jae    0x140037544
   140037544:	and    BYTE PTR [rax],al
   140037546:	add    BYTE PTR fs:[rcx+0x0],ch
   14003754a:	jae    0x14003754c
   14003754c:	(bad)  
   14003754d:	add    BYTE PTR [rdx+0x0],ah
   140037550:	ins    BYTE PTR es:[rdi],dx
   140037551:	add    BYTE PTR [rbp+0x0],ah
   140037554:	add    BYTE PTR fs:[rax],al
	...
   14003755f:	add    BYTE PTR [rdx+0x0],al
   140037562:	rex.WRB add BYTE PTR [r8],r12b
   140037565:	add    BYTE PTR [rbx+0x0],dh
   140037568:	imul   eax,DWORD PTR [rax],0x6e0067
   14003756e:	(bad)  
   14003756f:	add    BYTE PTR [rax+rax*1+0x75],dh
   140037573:	add    BYTE PTR [rdx+0x0],dh
   140037576:	add    BYTE PTR gs:[rax],ah
   140037579:	add    BYTE PTR [rdi+0x0],dh
   14003757c:	push   0x6c006900
   140037581:	add    BYTE PTR [rbp+0x0],ah
   140037584:	and    BYTE PTR [rax],al
   140037586:	rex.X add BYTE PTR [rbp+0x0],cl
   14003758a:	and    BYTE PTR [rax],al
   14003758c:	data16 add BYTE PTR [rbp+0x0],ah
   140037590:	(bad)  
   140037591:	add    BYTE PTR [rax+rax*1+0x75],dh
   140037595:	add    BYTE PTR [rdx+0x0],dh
   140037598:	add    BYTE PTR gs:[rax],ah
   14003759b:	add    BYTE PTR [rcx+0x0],ch
   14003759e:	jae    0x1400375a0
   1400375a0:	and    BYTE PTR [rax],al
   1400375a2:	add    BYTE PTR fs:[rcx+0x0],ch
   1400375a6:	jae    0x1400375a8
   1400375a8:	(bad)  
   1400375a9:	add    BYTE PTR [rdx+0x0],ah
   1400375ac:	ins    BYTE PTR es:[rdi],dx
   1400375ad:	add    BYTE PTR [rbp+0x0],ah
   1400375b0:	add    BYTE PTR fs:[rax],al
	...
   1400375bf:	add    BYTE PTR [rcx+0x0],cl
   1400375c2:	outs   dx,BYTE PTR ds:[rsi]
   1400375c3:	add    BYTE PTR [rax+rax*1+0x69],ch
   1400375c7:	add    BYTE PTR [rsi+0x0],ch
   1400375ca:	add    BYTE PTR gs:[rax],ah
   1400375cd:	add    BYTE PTR [rbx+0x0],dh
   1400375d0:	imul   eax,DWORD PTR [rax],0x6e0067
   1400375d6:	(bad)  
   1400375d7:	add    BYTE PTR [rax+rax*1+0x75],dh
   1400375db:	add    BYTE PTR [rdx+0x0],dh
   1400375de:	add    BYTE PTR gs:[rax],ah
   1400375e1:	add    BYTE PTR [rdi+0x0],dh
   1400375e4:	push   0x6c006900
   1400375e9:	add    BYTE PTR [rbp+0x0],ah
   1400375ec:	and    BYTE PTR [rax],al
   1400375ee:	add    BYTE PTR [rax+r8*1+0x6f],bpl
   1400375f3:	add    BYTE PTR [rbx+0x0],ah
   1400375f6:	imul   eax,DWORD PTR [rax],0x69
   1400375f9:	add    BYTE PTR [rsi+0x0],ch
   1400375fc:	add    BYTE PTR [eax],ah
   1400375ff:	add    BYTE PTR [rbx+0x0],dh
   140037602:	imul   eax,DWORD PTR [rax],0x6e0067
   140037608:	(bad)  
   140037609:	add    BYTE PTR [rax+rax*1+0x75],dh
   14003760d:	add    BYTE PTR [rdx+0x0],dh
   140037610:	add    BYTE PTR gs:[rbx+0x0],dh
   140037614:	and    BYTE PTR [rax],al
   140037616:	(bad)  
   140037617:	add    BYTE PTR [rdx+0x0],dh
   14003761a:	add    BYTE PTR gs:[rax],ah
   14003761d:	add    BYTE PTR [rcx+0x0],ah
   140037620:	movsxd eax,DWORD PTR [rax]
   140037622:	je     0x140037624
   140037624:	imul   eax,DWORD PTR [rax],0x650076
   14003762a:	add    BYTE PTR [rax],al
   14003762c:	add    BYTE PTR [rax],al
   14003762e:	add    BYTE PTR [rax],al
   140037630:	add    BYTE PTR [rbp+0x0],r12b
   140037634:	je     0x140037636
   140037636:	add    BYTE PTR gs:[rbx+0x0],ah
   14003763a:	je     0x14003763c
   14003763c:	sub    eax,0x6e006f00
   140037641:	add    BYTE PTR [rax+rax*1+0x79],ch
   140037645:	add    BYTE PTR [rax],ah
   140037647:	add    BYTE PTR [rbx+0x0],dh
   14003764a:	imul   eax,DWORD PTR [rax],0x6e0067
   140037650:	(bad)  
   140037651:	add    BYTE PTR [rax+rax*1+0x75],dh
   140037655:	add    BYTE PTR [rdx+0x0],dh
   140037658:	add    BYTE PTR gs:[rax],ah
   14003765b:	add    BYTE PTR [rdi+0x0],dh
   14003765e:	push   0x6c006900
   140037663:	add    BYTE PTR [rbp+0x0],ah
   140037666:	and    BYTE PTR [rax],al
   140037668:	push   rbx
   140037669:	add    BYTE PTR [rax+0x0],dh
   14003766c:	jns    0x14003766e
   14003766e:	rex.WRX add BYTE PTR [rbp+0x0],r12b
   140037672:	je     0x140037674
   140037674:	push   rdx
   140037675:	add    BYTE PTR [rbp+0x0],ah
   140037678:	jo     0x14003767a
   14003767a:	outs   dx,DWORD PTR ds:[rsi]
   14003767b:	add    BYTE PTR [rdx+0x0],dh
   14003767e:	je     0x140037680
   140037680:	imul   eax,DWORD PTR [rax],0x67006e
   140037686:	cmp    eax,0x4f004e00
   14003768b:	add    BYTE PTR [rsi+0x0],cl
   14003768e:	add    BYTE PTR [r8],r8b
   140037691:	add    BYTE PTR [rax],al
   140037693:	add    BYTE PTR [rax],al
   140037695:	add    BYTE PTR [rax],al
   140037697:	add    BYTE PTR [rbp+0x0],al
   14003769a:	js     0x14003769c
   14003769c:	movsxd eax,DWORD PTR [rax]
   14003769e:	ins    BYTE PTR es:[rdi],dx
   14003769f:	add    BYTE PTR [rbp+0x0],dh
   1400376a2:	add    BYTE PTR fs:[rbp+0x0],ah
   1400376a6:	add    BYTE PTR fs:[rax],al
   1400376a9:	add    BYTE PTR [rax],al
   1400376ab:	add    BYTE PTR [rax],al
   1400376ad:	add    BYTE PTR [rax],al
   1400376af:	add    BYTE PTR [rbx+0x0],dl
   1400376b2:	rex.WXB add BYTE PTR [r13+0x0],dl
   1400376b6:	and    BYTE PTR [rax],al
   1400376b8:	add    BYTE PTR fs:[rcx+0x0],ch
   1400376bc:	data16 add BYTE PTR [rsi+0x0],ah
   1400376c0:	add    BYTE PTR gs:[rdx+0x0],dh
   1400376c4:	add    BYTE PTR gs:[rsi+0x0],ch
   1400376c8:	je     0x1400376ca
   1400376ca:	imul   eax,DWORD PTR [rax],0x740061
   1400376d0:	imul   eax,DWORD PTR [rax],0x6e006f
   1400376d6:	add    BYTE PTR [rax],al
   1400376d8:	push   rbx
   1400376d9:	add    BYTE PTR [rcx+0x0],ch
   1400376dc:	add    BYTE PTR [esi+0x0],ch
   1400376e0:	(bad)  
   1400376e1:	add    BYTE PTR [rax+rax*1+0x75],dh
   1400376e5:	add    BYTE PTR [rdx+0x0],dh
   1400376e8:	add    BYTE PTR gs:[rax],ah
   1400376eb:	add    BYTE PTR [rsi+0x0],ch
   1400376ee:	outs   dx,DWORD PTR ds:[rsi]
   1400376ef:	add    BYTE PTR [rax+rax*1+0x20],dh
   1400376f3:	add    BYTE PTR [rcx+0x0],ah
   1400376f6:	jo     0x1400376f8
   1400376f8:	jo     0x1400376fa
   1400376fa:	ins    BYTE PTR es:[rdi],dx
   1400376fb:	add    BYTE PTR [rcx+0x0],ch
   1400376fe:	movsxd eax,DWORD PTR [rax]
   140037700:	(bad)  
   140037701:	add    BYTE PTR [rdx+0x0],ah
   140037704:	ins    BYTE PTR es:[rdi],dx
   140037705:	add    BYTE PTR [rbp+0x0],ah
   140037708:	and    BYTE PTR [rax],al
   14003770a:	outs   dx,DWORD PTR ds:[rsi]
   14003770b:	add    BYTE PTR [rsi+0x0],ch
   14003770e:	and    BYTE PTR [rax],al
   140037710:	rex.WRXB add BYTE PTR [r11+0x0],r10b
   140037714:	add    BYTE PTR [rax],al
   140037716:	add    BYTE PTR [rax],al
   140037718:	rex.WRX add BYTE PTR [rcx+0x0],r9b
   14003771c:	push   rbx
   14003771d:	add    BYTE PTR [rdi+0x0],bl
   140037720:	rex.WR add BYTE PTR [rdi+0x0],r13b
   140037724:	add    BYTE PTR [esi+0x0],cl
   140037728:	outs   dx,DWORD PTR ds:[rsi]
   140037729:	add    BYTE PTR [rsi+0x0],ch
   14003772c:	add    BYTE PTR [r11+0x0],spl
   140037730:	je     0x140037732
   140037732:	imul   eax,DWORD PTR [rax],0x650076
   140037738:	push   rbx
   140037739:	add    BYTE PTR [rcx+0x0],ch
   14003773c:	add    BYTE PTR [esi+0x0],ch
   140037740:	(bad)  
   140037741:	add    BYTE PTR [rax+rax*1+0x75],dh
   140037745:	add    BYTE PTR [rdx+0x0],dh
   140037748:	add    BYTE PTR gs:[rbx+0x0],dh
   14003774c:	add    BYTE PTR [rax],al
   14003774e:	add    BYTE PTR [rax],al
   140037750:	jnp    0x140037752
   140037752:	add    BYTE PTR gs:[rax],dh
   140037755:	add    BYTE PTR [rdx+0x0],ah
   140037758:	add    BYTE PTR fs:[rcx],dh
   14003775b:	add    BYTE PTR [rcx],dh
   14003775d:	add    BYTE PTR [rdi],dh
   14003775f:	add    BYTE PTR [rcx],bh
   140037761:	add    BYTE PTR [rip+0x63003000],ch        # 0x1a303a767
   140037767:	add    BYTE PTR [rax+rax*1],dh
   14003776a:	(bad)  
   14003776b:	add    BYTE PTR [rip+0x38003400],ch        # 0x17803ab71
   140037771:	add    BYTE PTR [rdi],dh
   140037773:	add    BYTE PTR [rcx],dh
   140037775:	add    BYTE PTR [rip+0x33003900],ch        # 0x17303b07b
   14003777b:	add    BYTE PTR [rbp+0x0],ah
   14003777e:	cmp    BYTE PTR [rax],al
   140037780:	sub    eax,0x34006100
   140037785:	add    BYTE PTR [rbp+0x0],ah
   140037788:	(bad)  
   140037789:	add    BYTE PTR [rax+rax*1],dh
   14003778c:	(bad)  
   14003778d:	add    BYTE PTR [rip+0x36003500],dh        # 0x17603ac93
   140037793:	add    BYTE PTR [rcx+0x0],ah
   140037796:	cmp    DWORD PTR [rax],eax
   140037798:	xor    eax,DWORD PTR [rax]
   14003779a:	jge    0x14003779c
   14003779c:	add    BYTE PTR [rax],al
   14003779e:	add    BYTE PTR [rax],al
   1400377a0:	rex.WRX add BYTE PTR [rcx+0x0],r9b
   1400377a4:	push   rbx
   1400377a5:	add    BYTE PTR [rdi+0x0],bl
   1400377a8:	push   rbx
   1400377a9:	add    BYTE PTR [rbp+0x0],ah
   1400377ac:	je     0x1400377ae
   1400377ae:	add    BYTE PTR [r11+0x0],spl
   1400377b2:	je     0x1400377b4
   1400377b4:	imul   eax,DWORD PTR [rax],0x6e006f
   1400377ba:	rex.RX add BYTE PTR [rdi+0x0],r13b
   1400377be:	jb     0x1400377c0
   1400377c0:	add    BYTE PTR [r8+rax*1+0x6c],bpl
   1400377c5:	add    BYTE PTR [rbx+0x0],dl
   1400377c8:	imul   eax,DWORD PTR [rax],0x730067
   1400377ce:	add    BYTE PTR [rax],al
   1400377d0:	rex.WRX add BYTE PTR [rcx+0x0],r9b
   1400377d4:	push   rbx
   1400377d5:	add    BYTE PTR [rdi+0x0],bl
   1400377d8:	rex.X add BYTE PTR [rbp+0x0],bpl
   1400377dc:	push   rsp
   1400377dd:	add    BYTE PTR [rax+0x0],ch
   1400377e0:	jb     0x1400377e2
   1400377e2:	add    BYTE PTR gs:[rcx+0x0],ah
   1400377e6:	je     0x1400377e8
   1400377e8:	rex.WB add BYTE PTR [r8+rax*1+0x0],spl
   1400377ed:	add    BYTE PTR [rax],al
   1400377ef:	add    BYTE PTR [rbp+0x0],al
   1400377f2:	outs   dx,BYTE PTR ds:[rsi]
   1400377f3:	add    BYTE PTR [rdi+0x0],ah
   1400377f6:	imul   eax,DWORD PTR [rax],0x65006e
   1400377fc:	and    BYTE PTR [rax],al
   1400377fe:	outs   dx,DWORD PTR ds:[rsi]
   1400377ff:	add    BYTE PTR [rsi+0x0],dh
   140037802:	add    BYTE PTR gs:[rdx+0x0],dh
   140037806:	jb     0x140037808
   140037808:	imul   eax,DWORD PTR [rax],0x650064
   14003780e:	and    BYTE PTR [rax],al
   140037810:	sub    eax,0x64002000
   140037815:	add    BYTE PTR [rcx+0x0],ch
   140037818:	jae    0x14003781a
   14003781a:	(bad)  
   14003781b:	add    BYTE PTR [rdx+0x0],ah
   14003781e:	ins    BYTE PTR es:[rdi],dx
   14003781f:	add    BYTE PTR [rbp+0x0],ah
   140037822:	and    BYTE PTR [rax],al
   140037824:	jae    0x140037826
   140037826:	imul   eax,DWORD PTR [rax],0x6e0067
   14003782c:	(bad)  
   14003782d:	add    BYTE PTR [rax+rax*1+0x75],dh
   140037831:	add    BYTE PTR [rdx+0x0],dh
   140037834:	add    BYTE PTR gs:[rax],ah
   140037837:	add    BYTE PTR [rax],ch
   140037839:	add    BYTE PTR [rdx+0x0],dh
   14003783c:	add    BYTE PTR gs:[rcx+0x0],ah
   140037840:	jae    0x140037842
   140037842:	outs   dx,DWORD PTR ds:[rsi]
   140037843:	add    BYTE PTR [rsi+0x0],ch
   140037846:	cmp    eax,0x64002500
   14003784b:	add    BYTE PTR [rcx],ch
   14003784d:	add    BYTE PTR [rax],al
   14003784f:	add    BYTE PTR [rbp+0x0],al
   140037852:	outs   dx,BYTE PTR ds:[rsi]
   140037853:	add    BYTE PTR [rdi+0x0],ah
   140037856:	imul   eax,DWORD PTR [rax],0x65006e
   14003785c:	and    BYTE PTR [rax],al
   14003785e:	outs   dx,DWORD PTR ds:[rsi]
   14003785f:	add    BYTE PTR [rsi+0x0],dh
   140037862:	add    BYTE PTR gs:[rdx+0x0],dh
   140037866:	jb     0x140037868
   140037868:	imul   eax,DWORD PTR [rax],0x650064
   14003786e:	and    BYTE PTR [rax],al
   140037870:	sub    eax,0x65002000
   140037875:	add    BYTE PTR [rsi+0x0],ch
   140037878:	(bad)  
   140037879:	add    BYTE PTR [rdx+0x0],ah
   14003787c:	ins    BYTE PTR es:[rdi],dx
   14003787d:	add    BYTE PTR [rbp+0x0],ah
   140037880:	and    BYTE PTR [rax],al
   140037882:	jae    0x140037884
   140037884:	imul   eax,DWORD PTR [rax],0x6e0067
   14003788a:	(bad)  
   14003788b:	add    BYTE PTR [rax+rax*1+0x75],dh
   14003788f:	add    BYTE PTR [rdx+0x0],dh
   140037892:	add    BYTE PTR gs:[rax],ah
   140037895:	add    BYTE PTR [rax],ch
   140037897:	add    BYTE PTR [rdx+0x0],dh
   14003789a:	add    BYTE PTR gs:[rcx+0x0],ah
   14003789e:	jae    0x1400378a0
   1400378a0:	outs   dx,DWORD PTR ds:[rsi]
   1400378a1:	add    BYTE PTR [rsi+0x0],ch
   1400378a4:	cmp    eax,0x64002500
   1400378a9:	add    BYTE PTR [rcx],ch
   1400378ab:	add    BYTE PTR [rax],al
   1400378ad:	add    BYTE PTR [rax],al
   1400378af:	add    bh,dl
   1400378b1:	sti    
   1400378b2:	(bad)  
   1400378b3:	pop    rsp
   1400378b4:	sar    BYTE PTR [rax+0x25],cl
   1400378b7:	cdqe   
   1400378b9:	mov    ebp,ds
   1400378bb:	xor    edi,DWORD PTR [rdx+rdi*4]
   1400378be:	xchg   DWORD PTR [rsi+0x400371c0],esi
   1400378c4:	add    DWORD PTR [rax],eax
   1400378c6:	add    BYTE PTR [rax],al
   1400378c8:	adc    BYTE PTR [rdx+0x3],dh
   1400378cb:	rex add DWORD PTR [rax],eax
   1400378ce:	add    BYTE PTR [rax],al
   1400378d0:	(bad)  
   1400378d1:	jb     0x1400378d6
   1400378d3:	rex add DWORD PTR [rax],eax
   1400378d6:	add    BYTE PTR [rax],al
   1400378d8:	mov    al,0x72
   1400378da:	add    eax,DWORD PTR [rax+0x1]
   1400378dd:	add    BYTE PTR [rax],al
   1400378df:	add    dl,al
   1400378e1:	ja     0x1400378c9
   1400378e3:	cwde   
   1400378e4:	jno    0x1400378a2
   1400378e6:	data16 icebp 
   1400378e8:	(bad)  
   1400378e9:	(bad)  
   1400378ea:	repz adc BYTE PTR [ebx+ebx*1+0x49004e86],ch
   1400378f3:	add    BYTE PTR [rbx+0x0],dl
   1400378f6:	pop    rdi
   1400378f7:	add    BYTE PTR [rax+rax*1+0x65],al
   1400378fb:	add    BYTE PTR [rax+rax*1+0x65],dh
   1400378ff:	add    BYTE PTR [rbx+0x0],ah
   140037902:	je     0x140037904
   140037904:	imul   eax,DWORD PTR [rax],0x6e006f
   14003790a:	push   rcx
   14003790b:	add    BYTE PTR [rbp+0x0],dh
   14003790e:	add    BYTE PTR gs:[rbp+0x0],dh
   140037912:	add    BYTE PTR gs:[rbp+0x0],cl
   140037916:	(bad)  
   140037917:	add    BYTE PTR [rax+0x0],bh
   14003791a:	push   rbx
   14003791b:	add    BYTE PTR [rcx+0x0],ch
   14003791e:	jp     0x140037920
   140037920:	add    BYTE PTR gs:[rax],al
	...
   14003792f:	add    BYTE PTR [rsi+0x0],cl
   140037932:	rex.WB add BYTE PTR [r11+0x0],dl
   140037936:	pop    rdi
   140037937:	add    BYTE PTR [rax+rax*1+0x65],al
   14003793b:	add    BYTE PTR [rax+rax*1+0x65],dh
   14003793f:	add    BYTE PTR [rbx+0x0],ah
   140037942:	je     0x140037944
   140037944:	imul   eax,DWORD PTR [rax],0x6e006f
   14003794a:	push   rcx
   14003794b:	add    BYTE PTR [rbp+0x0],dh
   14003794e:	add    BYTE PTR gs:[rbp+0x0],dh
   140037952:	add    BYTE PTR gs:[rcx+0x0],cl
   140037956:	outs   dx,BYTE PTR ds:[rsi]
   140037957:	add    BYTE PTR [rax+rax*1+0x65],dh
   14003795b:	add    BYTE PTR [rdx+0x0],dh
   14003795e:	jbe    0x140037960
   140037960:	(bad)  
   140037961:	add    BYTE PTR [rax+rax*1+0x4d],ch
   140037965:	add    BYTE PTR [rcx+0x0],ch
   140037968:	ins    BYTE PTR es:[rdi],dx
   140037969:	add    BYTE PTR [rax+rax*1+0x69],ch
   14003796d:	add    BYTE PTR [rbx+0x0],dh
   140037970:	add    BYTE PTR gs:[rbx+0x0],ah
   140037974:	outs   dx,DWORD PTR ds:[rsi]
   140037975:	add    BYTE PTR [rsi+0x0],ch
   140037978:	add    BYTE PTR fs:[rbx+0x0],dh
   14003797c:	add    BYTE PTR [rax],al
   14003797e:	add    BYTE PTR [rax],al
   140037980:	fs gs jno 0x1400379f9
   140037984:	gs cmp al,0x54
   140037987:	and    BYTE PTR ds:[rdi+rbp*2+0x6f],dh
   14003798c:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   140037990:	add    BYTE PTR [eax],al
   140037993:	add    BYTE PTR [rax],al
   140037995:	add    BYTE PTR [rax],al
   140037997:	add    al,bh
   140037999:	pop    rdi
   14003799a:	out    dx,al
   14003799b:	add    al,0xb
   14003799d:	rol    DWORD PTR [rsi-0x20],0x3
   1400379a1:	imul   al
   1400379a3:	test   BYTE PTR [rbp+0x2b],ah
   1400379a6:	cmp    dh,al
   1400379a8:	rex.WRX add BYTE PTR [rcx+0x0],r9b
   1400379ac:	push   rbx
   1400379ad:	add    BYTE PTR [rax],al
   1400379af:	add    BYTE PTR [rax+rax*1+0x69],al
   1400379b3:	add    BYTE PTR [rbx+0x0],dh
   1400379b6:	(bad)  
   1400379b7:	add    BYTE PTR [rdx+0x0],ah
   1400379ba:	ins    BYTE PTR es:[rdi],dx
   1400379bb:	add    BYTE PTR [rbp+0x0],ah
   1400379be:	push   rax
   1400379bf:	add    BYTE PTR [rdx+0x0],dh
   1400379c2:	outs   dx,DWORD PTR ds:[rsi]
   1400379c3:	add    BYTE PTR [rax+rax*1+0x6f],dh
   1400379c7:	add    BYTE PTR [rbx+0x0],ah
   1400379ca:	outs   dx,DWORD PTR ds:[rsi]
   1400379cb:	add    BYTE PTR [rax+rax*1+0x52],ch
   1400379cf:	add    BYTE PTR [rbp+0x0],ah
   1400379d2:	movsxd eax,DWORD PTR [rax]
   1400379d4:	outs   dx,DWORD PTR ds:[rsi]
   1400379d5:	add    BYTE PTR [rdi+0x0],ah
   1400379d8:	outs   dx,BYTE PTR ds:[rsi]
   1400379d9:	add    BYTE PTR [rcx+0x0],ch
   1400379dc:	je     0x1400379de
   1400379de:	imul   eax,DWORD PTR [rax],0x6e006f
   1400379e4:	add    BYTE PTR [rax],al
   1400379e6:	add    BYTE PTR [rax],al
   1400379e8:	add    BYTE PTR [rcx+0x0],r13b
   1400379ec:	jae    0x1400379ee
   1400379ee:	(bad)  
   1400379ef:	add    BYTE PTR [rdx+0x0],ah
   1400379f2:	ins    BYTE PTR es:[rdi],dx
   1400379f3:	add    BYTE PTR [rbp+0x0],ah
   1400379f6:	push   rbx
   1400379f7:	add    BYTE PTR [rbx+0x0],ch
   1400379fa:	imul   eax,DWORD PTR [rax],0x4d0070
   140037a00:	outs   dx,DWORD PTR ds:[rsi]
   140037a01:	add    BYTE PTR [rax+rax*1+0x65],ah
   140037a05:	add    BYTE PTR [rax],al
   140037a07:	add    BYTE PTR [rcx+0x0],cl
   140037a0a:	outs   dx,BYTE PTR ds:[rsi]
   140037a0b:	add    BYTE PTR [rax+rax*1+0x65],dh
   140037a0f:	add    BYTE PTR [rdx+0x0],dh
   140037a12:	movsxd eax,DWORD PTR [rax]
   140037a14:	add    BYTE PTR gs:[rax+0x0],dh
   140037a18:	je     0x140037a1a
   140037a1a:	push   rbp
   140037a1b:	add    BYTE PTR [rsi+0x0],ch
   140037a1e:	imul   eax,DWORD PTR [rax],0x74006e
   140037a24:	add    BYTE PTR gs:[rdx+0x0],dh
   140037a28:	add    BYTE PTR gs:[rbx+0x0],dh
   140037a2c:	je     0x140037a2e
   140037a2e:	imul   eax,DWORD PTR [rax],0x67006e
   140037a34:	push   rsp
   140037a35:	add    BYTE PTR [rdx+0x0],dh
   140037a38:	(bad)  
   140037a39:	add    BYTE PTR [rsi+0x0],ah
   140037a3c:	data16 add BYTE PTR [rcx+0x0],ch
   140037a40:	movsxd eax,DWORD PTR [rax]
   140037a42:	add    BYTE PTR [rax],al
   140037a44:	add    BYTE PTR [rax],al
   140037a46:	add    BYTE PTR [rax],al
   140037a48:	rex.WRX add BYTE PTR [rcx+0x0],r9b
   140037a4c:	push   rbx
   140037a4d:	add    BYTE PTR [rax+rax*1+0x43],bl
   140037a51:	add    BYTE PTR [rdi+0x0],ch
   140037a54:	outs   dx,BYTE PTR ds:[rsi]
   140037a55:	add    BYTE PTR [rbx+0x0],dh
   140037a58:	jne    0x140037a5a
   140037a5a:	ins    DWORD PTR es:[rdi],dx
   140037a5b:	add    BYTE PTR [rbp+0x0],ah
   140037a5e:	jb     0x140037a60
   140037a60:	jae    0x140037a62
   140037a62:	pop    rsp
   140037a63:	add    BYTE PTR [rcx+0x0],cl
   140037a66:	push   rax
   140037a67:	add    BYTE PTR [rbx+0x0],dl
   140037a6a:	add    BYTE PTR [rax],al
   140037a6c:	add    BYTE PTR [rax],al
   140037a6e:	add    BYTE PTR [rax],al
   140037a70:	rex.WRB add BYTE PTR [r9+0x0],r12b
   140037a74:	js     0x140037a76
   140037a76:	push   rbx
   140037a77:	add    BYTE PTR [rsi+0x0],ch
   140037a7a:	(bad)  
   140037a7b:	add    BYTE PTR [rax+0x0],dh
   140037a7e:	jae    0x140037a80
   140037a80:	push   0x74006f00
   140037a85:	add    BYTE PTR [rbx+0x0],dh
	...
   140037a90:	push   rbx
   140037a91:	add    BYTE PTR [rax+0x0],dh
   140037a94:	jns    0x140037a96
   140037a96:	rex.WRX add BYTE PTR [rbp+0x0],r12b
   140037a9a:	je     0x140037a9c
   140037a9c:	add    BYTE PTR [rax],al
   140037a9e:	add    BYTE PTR [rax],al
   140037aa0:	push   rbx
   140037aa1:	add    BYTE PTR [rax+0x0],dh
   140037aa4:	jns    0x140037aa6
   140037aa6:	rex.WRX add BYTE PTR [rbp+0x0],r12b
   140037aaa:	je     0x140037aac
   140037aac:	push   rdx
   140037aad:	add    BYTE PTR [rbp+0x0],ah
   140037ab0:	jo     0x140037ab2
   140037ab2:	outs   dx,DWORD PTR ds:[rsi]
   140037ab3:	add    BYTE PTR [rdx+0x0],dh
   140037ab6:	je     0x140037ab8
   140037ab8:	imul   eax,DWORD PTR [rax],0x67006e
   140037abe:	add    BYTE PTR [rax],al
   140037ac0:	push   rbx
   140037ac1:	add    BYTE PTR [rax+0x0],dh
   140037ac4:	jns    0x140037ac6
   140037ac6:	rex.WRX add BYTE PTR [rbp+0x0],r12b
   140037aca:	je     0x140037acc
   140037acc:	push   rdx
   140037acd:	add    BYTE PTR [rbp+0x0],ah
   140037ad0:	jo     0x140037ad2
   140037ad2:	outs   dx,DWORD PTR ds:[rsi]
   140037ad3:	add    BYTE PTR [rdx+0x0],dh
   140037ad6:	je     0x140037ad8
   140037ad8:	imul   eax,DWORD PTR [rax],0x67006e
   140037ade:	rex.WR add BYTE PTR [rdi+0x0],r13b
   140037ae2:	movsxd eax,DWORD PTR [rax]
   140037ae4:	(bad)  
   140037ae5:	add    BYTE PTR [rax+rax*1+0x69],dh
   140037ae9:	add    BYTE PTR [rdi+0x0],ch
   140037aec:	outs   dx,BYTE PTR ds:[rsi]
   140037aed:	add    BYTE PTR [rax],al
   140037aef:	add    BYTE PTR [rax+rax*1+0x68],dl
   140037af3:	add    BYTE PTR [rdx+0x0],dh
   140037af6:	outs   dx,DWORD PTR ds:[rsi]
   140037af7:	add    BYTE PTR [rax+rax*1+0x74],dh
   140037afb:	add    BYTE PTR [rax+rax*1+0x65],ch
   140037aff:	add    BYTE PTR [rax+rax*1+0x65],al
   140037b03:	add    BYTE PTR [rax+rax*1+0x65],dh
   140037b07:	add    BYTE PTR [rbx+0x0],ah
   140037b0a:	je     0x140037b0c
   140037b0c:	imul   eax,DWORD PTR [rax],0x6e006f
   140037b12:	add    BYTE PTR [r14+0x0],r14b
   140037b16:	add    BYTE PTR gs:[rsi+0x0],ch
   140037b1a:	je     0x140037b1c
   140037b1c:	jae    0x140037b1e
   140037b1e:	push   rdx
   140037b1f:	add    BYTE PTR [rcx+0x0],ah
   140037b22:	je     0x140037b24
   140037b24:	add    BYTE PTR gs:[rax],al
	...
   140037b2f:	add    BYTE PTR [rsi+0x0],cl
   140037b32:	rex.WB add BYTE PTR [r11+0x0],dl
   140037b36:	pop    rsp
   140037b37:	add    BYTE PTR [rbx+0x0],al
   140037b3a:	outs   dx,DWORD PTR ds:[rsi]
   140037b3b:	add    BYTE PTR [rsi+0x0],ch
   140037b3e:	jae    0x140037b40
   140037b40:	jne    0x140037b42
   140037b42:	ins    DWORD PTR es:[rdi],dx
   140037b43:	add    BYTE PTR [rbp+0x0],ah
   140037b46:	jb     0x140037b48
   140037b48:	jae    0x140037b4a
   140037b4a:	pop    rsp
   140037b4b:	add    BYTE PTR [rcx+0x0],cl
   140037b4e:	push   rax
   140037b4f:	add    BYTE PTR [rbx+0x0],dl
   140037b52:	pop    rsp
   140037b53:	add    BYTE PTR [rbx+0x0],dl
   140037b56:	rex.WXB add BYTE PTR [r13+0x0],dl
   140037b5a:	and    BYTE PTR [rax],al
   140037b5c:	add    BYTE PTR [rcx+0x0],r13b
   140037b60:	data16 add BYTE PTR [rsi+0x0],ah
   140037b64:	add    BYTE PTR gs:[rdx+0x0],dh
   140037b68:	add    BYTE PTR gs:[rsi+0x0],ch
   140037b6c:	je     0x140037b6e
   140037b6e:	imul   eax,DWORD PTR [rax],0x740061
   140037b74:	imul   eax,DWORD PTR [rax],0x6e006f
   140037b7a:	add    BYTE PTR [rax],al
   140037b7c:	add    BYTE PTR [rax],al
   140037b7e:	add    BYTE PTR [rax],al
   140037b80:	rex.WRX add BYTE PTR [rcx+0x0],r9b
   140037b84:	push   rbx
   140037b85:	add    BYTE PTR [rax+rax*1+0x43],bl
   140037b89:	add    BYTE PTR [rdi+0x0],ch
   140037b8c:	outs   dx,BYTE PTR ds:[rsi]
   140037b8d:	add    BYTE PTR [rbx+0x0],dh
   140037b90:	jne    0x140037b92
   140037b92:	ins    DWORD PTR es:[rdi],dx
   140037b93:	add    BYTE PTR [rbp+0x0],ah
   140037b96:	jb     0x140037b98
   140037b98:	jae    0x140037b9a
   140037b9a:	pop    rsp
   140037b9b:	add    BYTE PTR [rcx+0x0],cl
   140037b9e:	push   rax
   140037b9f:	add    BYTE PTR [rbx+0x0],dl
   140037ba2:	pop    rsp
   140037ba3:	add    BYTE PTR [rbp+0x0],al
   140037ba6:	js     0x140037ba8
   140037ba8:	movsxd eax,DWORD PTR [rax]
   140037baa:	ins    BYTE PTR es:[rdi],dx
   140037bab:	add    BYTE PTR [rbp+0x0],dh
   140037bae:	jae    0x140037bb0
   140037bb0:	imul   eax,DWORD PTR [rax],0x6e006f
   140037bb6:	jae    0x140037bb8
   140037bb8:	pop    rsp
   140037bb9:	add    BYTE PTR [rcx+0x0],cl
   140037bbc:	push   rax
   140037bbd:	add    BYTE PTR [rax],ah
   140037bbf:	add    BYTE PTR [rdx+0x0],dl
   140037bc2:	(bad)  
   140037bc3:	add    BYTE PTR [rsi+0x0],ch
   140037bc6:	add    BYTE PTR [ebp+0x0],ah
   140037bca:	jae    0x140037bcc
   140037bcc:	add    BYTE PTR [rax],al
   140037bce:	add    BYTE PTR [rax],al
   140037bd0:	rex.WRX add BYTE PTR [rcx+0x0],r9b
   140037bd4:	push   rbx
   140037bd5:	add    BYTE PTR [rax+rax*1+0x43],bl
   140037bd9:	add    BYTE PTR [rdi+0x0],ch
   140037bdc:	outs   dx,BYTE PTR ds:[rsi]
   140037bdd:	add    BYTE PTR [rbx+0x0],dh
   140037be0:	jne    0x140037be2
   140037be2:	ins    DWORD PTR es:[rdi],dx
   140037be3:	add    BYTE PTR [rbp+0x0],ah
   140037be6:	jb     0x140037be8
   140037be8:	jae    0x140037bea
   140037bea:	pop    rsp
   140037beb:	add    BYTE PTR [rcx+0x0],cl
   140037bee:	push   rax
   140037bef:	add    BYTE PTR [rbx+0x0],dl
   140037bf2:	pop    rsp
   140037bf3:	add    BYTE PTR [rbp+0x0],al
   140037bf6:	js     0x140037bf8
   140037bf8:	movsxd eax,DWORD PTR [rax]
   140037bfa:	ins    BYTE PTR es:[rdi],dx
   140037bfb:	add    BYTE PTR [rbp+0x0],dh
   140037bfe:	jae    0x140037c00
   140037c00:	imul   eax,DWORD PTR [rax],0x6e006f
   140037c06:	jae    0x140037c08
   140037c08:	pop    rsp
   140037c09:	add    BYTE PTR [rax+rax*1+0x68],dl
   140037c0d:	add    BYTE PTR [rdx+0x0],dh
   140037c10:	add    BYTE PTR gs:[rcx+0x0],ah
   140037c14:	je     0x140037c16
   140037c16:	and    BYTE PTR [rax],al
   140037c18:	rex.WB add BYTE PTR [r8+rax*1+0x73],al
   140037c1d:	add    BYTE PTR [rax],al
   140037c1f:	add    BYTE PTR [rsi+0x0],cl
   140037c22:	rex.WB add BYTE PTR [r11+0x0],dl
   140037c26:	pop    rsp
   140037c27:	add    BYTE PTR [rbx+0x0],al
   140037c2a:	outs   dx,DWORD PTR ds:[rsi]
   140037c2b:	add    BYTE PTR [rsi+0x0],ch
   140037c2e:	jae    0x140037c30
   140037c30:	jne    0x140037c32
   140037c32:	ins    DWORD PTR es:[rdi],dx
   140037c33:	add    BYTE PTR [rbp+0x0],ah
   140037c36:	jb     0x140037c38
   140037c38:	jae    0x140037c3a
   140037c3a:	pop    rsp
   140037c3b:	add    BYTE PTR [rcx+0x0],cl
   140037c3e:	push   rax
   140037c3f:	add    BYTE PTR [rbx+0x0],dl
   140037c42:	pop    rsp
   140037c43:	add    BYTE PTR [rbp+0x0],al
   140037c46:	js     0x140037c48
   140037c48:	movsxd eax,DWORD PTR [rax]
   140037c4a:	ins    BYTE PTR es:[rdi],dx
   140037c4b:	add    BYTE PTR [rbp+0x0],dh
   140037c4e:	jae    0x140037c50
   140037c50:	imul   eax,DWORD PTR [rax],0x6e006f
   140037c56:	jae    0x140037c58
   140037c58:	pop    rsp
   140037c59:	add    BYTE PTR [rax+0x0],dl
   140037c5c:	outs   dx,DWORD PTR ds:[rsi]
   140037c5d:	add    BYTE PTR [rdx+0x0],dh
   140037c60:	je     0x140037c62
   140037c62:	jae    0x140037c64
	...
   140037c70:	rex.WRX add BYTE PTR [rcx+0x0],r9b
   140037c74:	push   rbx
   140037c75:	add    BYTE PTR [rax+rax*1+0x43],bl
   140037c79:	add    BYTE PTR [rdi+0x0],ch
   140037c7c:	outs   dx,BYTE PTR ds:[rsi]
   140037c7d:	add    BYTE PTR [rbx+0x0],dh
   140037c80:	jne    0x140037c82
   140037c82:	ins    DWORD PTR es:[rdi],dx
   140037c83:	add    BYTE PTR [rbp+0x0],ah
   140037c86:	jb     0x140037c88
   140037c88:	jae    0x140037c8a
   140037c8a:	pop    rsp
   140037c8b:	add    BYTE PTR [rcx+0x0],cl
   140037c8e:	push   rax
   140037c8f:	add    BYTE PTR [rbx+0x0],dl
   140037c92:	pop    rsp
   140037c93:	add    BYTE PTR [rbp+0x0],al
   140037c96:	js     0x140037c98
   140037c98:	movsxd eax,DWORD PTR [rax]
   140037c9a:	ins    BYTE PTR es:[rdi],dx
   140037c9b:	add    BYTE PTR [rbp+0x0],dh
   140037c9e:	jae    0x140037ca0
   140037ca0:	imul   eax,DWORD PTR [rax],0x6e006f
   140037ca6:	jae    0x140037ca8
   140037ca8:	pop    rsp
   140037ca9:	add    BYTE PTR [rax+0x0],dl
   140037cac:	jb     0x140037cae
   140037cae:	outs   dx,DWORD PTR ds:[rsi]
   140037caf:	add    BYTE PTR [rbx+0x0],ah
   140037cb2:	add    BYTE PTR gs:[rbx+0x0],dh
   140037cb6:	jae    0x140037cb8
   140037cb8:	add    BYTE PTR gs:[rbx+0x0],dh
   140037cbc:	add    BYTE PTR [rax],al
   140037cbe:	add    BYTE PTR [rax],al
   140037cc0:	rex.WRX add BYTE PTR [rbp+0x0],r14b
   140037cc4:	ins    DWORD PTR es:[rdi],dx
   140037cc5:	add    BYTE PTR [rdx+0x0],ah
   140037cc8:	add    BYTE PTR gs:[rdx+0x0],dh
   140037ccc:	rex.WRXB add BYTE PTR [r14+0x0],r12b
   140037cd0:	rex.WB add BYTE PTR [r14+0x0],bpl
   140037cd4:	jae    0x140037cd6
   140037cd6:	jo     0x140037cd8
   140037cd8:	add    BYTE PTR gs:[rbx+0x0],ah
   140037cdc:	je     0x140037cde
   140037cde:	imul   eax,DWORD PTR [rax],0x6e006f
   140037ce4:	push   rsp
   140037ce5:	add    BYTE PTR [rax+0x0],ch
   140037ce8:	jb     0x140037cea
   140037cea:	add    BYTE PTR gs:[rcx+0x0],ah
   140037cee:	add    BYTE PTR fs:[rbx+0x0],dh
	...
   140037cfe:	add    BYTE PTR [rax],al
   140037d00:	rex.XB add BYTE PTR [r8+0x0],sil
   140037d04:	jne    0x140037d06
   140037d06:	rex.WRB add BYTE PTR [r13+0x0],r14b
   140037d0a:	ins    BYTE PTR es:[rdi],dx
   140037d0b:	add    BYTE PTR [rax+rax*1+0x69],dh
   140037d0f:	add    BYTE PTR [rax+0x0],dh
   140037d12:	ins    BYTE PTR es:[rdi],dx
   140037d13:	add    BYTE PTR [rcx+0x0],ch
   140037d16:	add    BYTE PTR gs:[rdx+0x0],dh
   140037d1a:	rex.WRXB add BYTE PTR [r14+0x0],r12b
   140037d1e:	rex.WB add BYTE PTR [r14+0x0],bpl
   140037d22:	jae    0x140037d24
   140037d24:	jo     0x140037d26
   140037d26:	add    BYTE PTR gs:[rbx+0x0],ah
   140037d2a:	je     0x140037d2c
   140037d2c:	imul   eax,DWORD PTR [rax],0x6e006f
   140037d32:	push   rsp
   140037d33:	add    BYTE PTR [rax+0x0],ch
   140037d36:	jb     0x140037d38
   140037d38:	add    BYTE PTR gs:[rcx+0x0],ah
   140037d3c:	add    BYTE PTR fs:[rbx+0x0],dh
	...
   140037d48:	rex.WRX add BYTE PTR [rbp+0x0],r14b
   140037d4c:	ins    DWORD PTR es:[rdi],dx
   140037d4d:	add    BYTE PTR [rdx+0x0],ah
   140037d50:	add    BYTE PTR gs:[rdx+0x0],dh
   140037d54:	rex.WRXB add BYTE PTR [r14+0x0],r12b
   140037d58:	rex.XB add BYTE PTR [r15+0x0],bpl
   140037d5c:	ins    DWORD PTR es:[rdi],dx
   140037d5d:	add    BYTE PTR [rax+0x0],dh
   140037d60:	ins    BYTE PTR es:[rdi],dx
   140037d61:	add    BYTE PTR [rbp+0x0],ah
   140037d64:	je     0x140037d66
   140037d66:	imul   eax,DWORD PTR [rax],0x6e006f
   140037d6c:	push   rsp
   140037d6d:	add    BYTE PTR [rax+0x0],ch
   140037d70:	jb     0x140037d72
   140037d72:	add    BYTE PTR gs:[rcx+0x0],ah
   140037d76:	add    BYTE PTR fs:[rbx+0x0],dh
   140037d7a:	add    BYTE PTR [rax],al
   140037d7c:	add    BYTE PTR [rax],al
   140037d7e:	add    BYTE PTR [rax],al
   140037d80:	rex.XB add BYTE PTR [r8+0x0],sil
   140037d84:	jne    0x140037d86
   140037d86:	add    BYTE PTR [rcx+0x0],r13b
   140037d8a:	jbe    0x140037d8c
   140037d8c:	imul   eax,DWORD PTR [rax],0x650064
   140037d92:	jb     0x140037d94
   140037d94:	rex.WRXB add BYTE PTR [r14+0x0],r12b
   140037d98:	rex.XB add BYTE PTR [r15+0x0],bpl
   140037d9c:	ins    DWORD PTR es:[rdi],dx
   140037d9d:	add    BYTE PTR [rax+0x0],dh
   140037da0:	ins    BYTE PTR es:[rdi],dx
   140037da1:	add    BYTE PTR [rbp+0x0],ah
   140037da4:	je     0x140037da6
   140037da6:	imul   eax,DWORD PTR [rax],0x6e006f
   140037dac:	push   rsp
   140037dad:	add    BYTE PTR [rax+0x0],ch
   140037db0:	jb     0x140037db2
   140037db2:	add    BYTE PTR gs:[rcx+0x0],ah
   140037db6:	add    BYTE PTR fs:[rbx+0x0],dh
   140037dba:	add    BYTE PTR [rax],al
   140037dbc:	add    BYTE PTR [rax],al
   140037dbe:	add    BYTE PTR [rax],al
   140037dc0:	rex.WB add BYTE PTR [r8+rax*1+0x6c],spl
   140037dc5:	add    BYTE PTR [rbp+0x0],ah
   140037dc8:	push   rsp
   140037dc9:	add    BYTE PTR [rcx+0x0],ch
   140037dcc:	ins    DWORD PTR es:[rdi],dx
   140037dcd:	add    BYTE PTR [rbp+0x0],ah
	...
   140037dd8:	js     0x140037dc3
   140037dda:	rex.X sub al,0x2b
   140037ddd:	(bad)  
   140037dde:	mov    ch,0x13
   140037de0:	cmp    eax,0x206ca20a
   140037de5:	cmp    BYTE PTR [rax],0x40
   140037de8:	rex.WRXB movsxd r13,DWORD PTR [r13-0x2c7da2dd]
   140037def:	data16 mov gs,WORD PTR [rax]
   140037df2:	jns    0x140037e0c
   140037df4:	loop   0x140037dfc
   140037df6:	sub    DWORD PTR [rsi],ecx
   140037df8:	pop    rsp
   140037df9:	add    BYTE PTR [rax+rax*1+0x2e],bl
   140037dfd:	add    BYTE PTR [rax+rax*1+0x4e],bl
   140037e01:	add    BYTE PTR [rcx+0x0],ch
   140037e04:	jae    0x140037e06
   140037e06:	add    BYTE PTR [rdx+0x0],r14b
   140037e0a:	jbe    0x140037e0c
   140037e0c:	add    BYTE PTR [rax],al
   140037e0e:	add    BYTE PTR [rax],al
   140037e10:	rex.WRX add BYTE PTR [rbp+0x0],r14b
   140037e14:	ins    DWORD PTR es:[rdi],dx
   140037e15:	add    BYTE PTR [rdx+0x0],ah
   140037e18:	add    BYTE PTR gs:[rdx+0x0],dh
   140037e1c:	rex.WRXB add BYTE PTR [r14+0x0],r12b
   140037e20:	rex.XB add BYTE PTR [r15+0x0],bpl
   140037e24:	ins    DWORD PTR es:[rdi],dx
   140037e25:	add    BYTE PTR [rax+0x0],dh
   140037e28:	ins    BYTE PTR es:[rdi],dx
   140037e29:	add    BYTE PTR [rbp+0x0],ah
   140037e2c:	je     0x140037e2e
   140037e2e:	imul   eax,DWORD PTR [rax],0x6e006f
   140037e34:	push   rax
   140037e35:	add    BYTE PTR [rdi+0x0],ch
   140037e38:	jb     0x140037e3a
   140037e3a:	je     0x140037e3c
   140037e3c:	push   rsp
   140037e3d:	add    BYTE PTR [rax+0x0],ch
   140037e40:	jb     0x140037e42
   140037e42:	add    BYTE PTR gs:[rcx+0x0],ah
   140037e46:	add    BYTE PTR fs:[rbx+0x0],dh
   140037e4a:	cmp    al,BYTE PTR [rax]
   140037e4c:	and    BYTE PTR [rax],al
   140037e4e:	and    eax,0x2c006400
   140037e53:	add    BYTE PTR [rax],ah
   140037e55:	add    BYTE PTR [rsi+0x0],cl
   140037e58:	jne    0x140037e5a
   140037e5a:	(bad)  
   140037e5b:	add    BYTE PTR [rbp+0x0],ch
   140037e5e:	add    BYTE PTR gs:[rdx+0x0],dh
   140037e62:	rex.WRXB add BYTE PTR [r14+0x0],r12b
   140037e66:	rex.WB add BYTE PTR [r14+0x0],bpl
   140037e6a:	jae    0x140037e6c
   140037e6c:	jo     0x140037e6e
   140037e6e:	add    BYTE PTR gs:[rbx+0x0],ah
   140037e72:	je     0x140037e74
   140037e74:	imul   eax,DWORD PTR [rax],0x6e006f
   140037e7a:	push   rsp
   140037e7b:	add    BYTE PTR [rax+0x0],ch
   140037e7e:	jb     0x140037e80
   140037e80:	add    BYTE PTR gs:[rcx+0x0],ah
   140037e84:	add    BYTE PTR fs:[rbx+0x0],dh
   140037e88:	cmp    al,BYTE PTR [rax]
   140037e8a:	and    BYTE PTR [rax],al
   140037e8c:	and    eax,0x6400
   140037e91:	add    BYTE PTR [rax],al
   140037e93:	add    BYTE PTR [rax],al
   140037e95:	add    BYTE PTR [rax],al
   140037e97:	add    BYTE PTR [rdx+0x0],al
   140037e9a:	jne    0x140037e9c
   140037e9c:	data16 add BYTE PTR [rbx+0x0],dl
   140037ea0:	imul   eax,DWORD PTR [rax],0x65007a
   140037ea6:	add    BYTE PTR [rax],al
   140037ea8:	rex.X add BYTE PTR [rbp+0x0],sil
   140037eac:	data16 add BYTE PTR [rbx+0x0],al
   140037eb0:	outs   dx,DWORD PTR ds:[rsi]
   140037eb1:	add    BYTE PTR [rbp+0x0],dh
   140037eb4:	outs   dx,BYTE PTR ds:[rsi]
   140037eb5:	add    BYTE PTR [rax+rax*1+0x0],dh
   140037eb9:	add    BYTE PTR [rax],al
   140037ebb:	add    BYTE PTR [rax],al
   140037ebd:	add    BYTE PTR [rax],al
   140037ebf:	add    BYTE PTR [rdx+0x0],al
   140037ec2:	jne    0x140037ec4
   140037ec4:	data16 add BYTE PTR [rbp+0x0],cl
   140037ec8:	imul   eax,DWORD PTR [rax],0x43006e
   140037ece:	outs   dx,DWORD PTR ds:[rsi]
   140037ecf:	add    BYTE PTR [rbp+0x0],dh
   140037ed2:	outs   dx,BYTE PTR ds:[rsi]
   140037ed3:	add    BYTE PTR [rax+rax*1+0x0],dh
   140037ed7:	add    BYTE PTR [rax+0x0],dl
   140037eda:	(bad)  
   140037edb:	add    BYTE PTR [rbx+0x0],dh
   140037ede:	jae    0x140037ee0
   140037ee0:	push   rsp
   140037ee1:	add    BYTE PTR [rax+0x0],ch
   140037ee4:	jb     0x140037ee6
   140037ee6:	jne    0x140037ee8
   140037ee8:	rex.WRB add BYTE PTR [r15+0x0],r13b
   140037eec:	add    BYTE PTR fs:[rbp+0x0],ah
	...
   140037ef8:	push   rbx
   140037ef9:	add    BYTE PTR [rcx+0x0],ch
   140037efc:	ins    DWORD PTR es:[rdi],dx
   140037efd:	add    BYTE PTR [rbp+0x0],dh
   140037f00:	ins    BYTE PTR es:[rdi],dx
   140037f01:	add    BYTE PTR [rcx+0x0],ah
   140037f04:	je     0x140037f06
   140037f06:	add    BYTE PTR gs:[rsi+0x0],al
   140037f0a:	outs   dx,DWORD PTR ds:[rsi]
   140037f0b:	add    BYTE PTR [rdx+0x0],dh
   140037f0e:	ja     0x140037f10
   140037f10:	(bad)  
   140037f11:	add    BYTE PTR [rdx+0x0],dh
   140037f14:	add    BYTE PTR fs:[rbp+0x0],cl
   140037f18:	outs   dx,DWORD PTR ds:[rsi]
   140037f19:	add    BYTE PTR [rax+rax*1+0x65],ah
   140037f1d:	add    BYTE PTR [rax],al
   140037f1f:	add    BYTE PTR [rbx+0x6f],al
   140037f22:	outs   dx,BYTE PTR ds:[rsi]
   140037f23:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x2828206e
   140037f2c:	jo     0x140037f90
   140037f2e:	rex.X jne 0x140037f97
   140037f31:	data16 gs jb 0x140037f55
   140037f35:	es and BYTE PTR es:[rcx],ah
   140037f39:	sub    BYTE PTR [rax+0x6f],dl
   140037f3c:	jb     0x140037fb2
   140037f3e:	push   rax
   140037f3f:	(bad)  
   140037f40:	imul   esi,DWORD PTR [rdx+0x73],0x7a69732e
   140037f47:	sub    BYTE PTR gs:[rcx],ch
   140037f4a:	and    BYTE PTR [rsi],ah
   140037f4c:	and    BYTE PTR [rcx],dh
   140037f4e:	sub    DWORD PTR [rcx],ebp
   140037f50:	sub    DWORD PTR [rax],esp
   140037f52:	data16 (bad) 
   140037f54:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x203e2d20
   140037f5c:	je     0x140037fa6
   140037f5e:	push   rdx
   140037f5f:	and    BYTE PTR [rip+0x495f4520],bh        # 0x18962c485
   140037f65:	rex.WRX push rsi
   140037f67:	rex.B
   140037f68:	rex.WR
   140037f69:	rex.WB
   140037f6a:	rex.R
   140037f6b:	push   r10
   140037f6d:	rex.RXB add BYTE PTR [r8],r8b
   140037f70:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140037f72:	outs   dx,BYTE PTR ds:[rsi]
   140037f73:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x2828206e
   140037f7c:	movsxd esp,DWORD PTR [rdx+0x42]
   140037f7f:	jne    0x140037fe7
   140037f81:	data16 gs jb 0x140037fa5
   140037f85:	ds cmp eax,0x7a697320
   140037f8b:	outs   dx,DWORD PTR gs:[rsi]
   140037f8d:	data16 sub BYTE PTR [rsi+0x49],cl
   140037f91:	push   rbx
   140037f92:	pop    rdi
   140037f93:	rex.WB
   140037f94:	rex.WRX push rsp
   140037f96:	rex.RB push r10
   140037f98:	rex.XB
   140037f99:	rex.RB push r8
   140037f9b:	push   rsp
   140037f9c:	pop    rdi
   140037f9d:	push   rax
   140037f9e:	rex.WRXB push r10
   140037fa0:	push   rsp
   140037fa1:	pop    rdi
   140037fa2:	rex.WR
   140037fa3:	rex.WB push r11
   140037fa5:	push   rsp
   140037fa6:	sub    DWORD PTR [rcx],ebp
   140037fa8:	sub    DWORD PTR [rax],esp
   140037faa:	data16 (bad) 
   140037fac:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x203e2d20
   140037fb4:	je     0x140037ffe
   140037fb6:	push   rdx
   140037fb7:	and    BYTE PTR [rip+0x495f4520],bh        # 0x18962c4dd
   140037fbd:	rex.WRX push rsi
   140037fbf:	rex.B
   140037fc0:	rex.WR
   140037fc1:	rex.WB
   140037fc2:	rex.R
   140037fc3:	push   r10
   140037fc5:	rex.RXB add BYTE PTR [r8],r8b
	...
   140037fd0:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140037fd2:	outs   dx,BYTE PTR ds:[rsi]
   140037fd3:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x2828206e
   140037fdc:	movsxd esp,DWORD PTR [rdx+0x42]
   140037fdf:	jne    0x140038047
   140037fe1:	data16 gs jb 0x140038005
   140037fe5:	sub    eax,0x7a697320
   140037fea:	outs   dx,DWORD PTR gs:[rsi]
   140037fec:	data16 sub BYTE PTR [rsi+0x49],cl
   140037ff0:	push   rbx
   140037ff1:	pop    rdi
   140037ff2:	rex.WB
   140037ff3:	rex.WRX push rsp
   140037ff5:	rex.RB push r10
   140037ff7:	rex.XB
   140037ff8:	rex.RB push r8
   140037ffa:	push   rsp
   140037ffb:	pop    rdi
   140037ffc:	push   rax
   140037ffd:	rex.WRXB push r10
   140037fff:	push   rsp
   140038000:	pop    rdi
   140038001:	rex.WR
   140038002:	rex.WB push r11
   140038004:	push   rsp
   140038005:	sub    DWORD PTR [rax],esp
   140038007:	ds cmp eax,0x50627020
   14003800d:	outs   dx,DWORD PTR ds:[rsi]
   14003800e:	jb     0x140038084
   140038010:	jae    0x14003803f
   140038012:	movsxd esp,DWORD PTR ds:[rdx+0x53]
   140038016:	imul   edi,DWORD PTR [rdx+0x65],0x66202929
   14003801d:	(bad)  
   14003801e:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x203e2d20
   140038026:	je     0x140038070
   140038028:	push   rdx
   140038029:	and    BYTE PTR [rip+0x495f4520],bh        # 0x18962c54f
   14003802f:	rex.WRX push rsi
   140038031:	rex.B
   140038032:	rex.WR
   140038033:	rex.WB
   140038034:	rex.R
   140038035:	push   r10
   140038037:	rex.RXB add BYTE PTR [r8],r8b
   14003803a:	add    BYTE PTR [rax],al
   14003803c:	add    BYTE PTR [rax],al
   14003803e:	add    BYTE PTR [rax],al
   140038040:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140038042:	outs   dx,BYTE PTR ds:[rsi]
   140038043:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x2828206e
   14003804c:	jo     0x1400380b0
   14003804e:	rex.X jne 0x1400380b7
   140038051:	data16 gs jb 0x140038075
   140038055:	es and BYTE PTR es:[rbx+0x62],ah
   14003805a:	rex.X jne 0x1400380c3
   14003805d:	data16 gs jb 0x140038081
   140038061:	ds cmp eax,0x7a697320
   140038067:	outs   dx,DWORD PTR gs:[rsi]
   140038069:	data16 sub BYTE PTR [rsi+0x49],cl
   14003806d:	push   rbx
   14003806e:	pop    rdi
   14003806f:	rex.WB
   140038070:	rex.WRX push rsp
   140038072:	rex.RB push r10
   140038074:	rex.XB
   140038075:	rex.RB push r8
   140038077:	push   rsp
   140038078:	pop    rdi
   140038079:	push   rax
   14003807a:	push   rdx
   14003807b:	rex.WRXB
   14003807c:	rex.XB
   14003807d:	rex.RB push r11
   14003807f:	push   rbx
   140038080:	pop    rdi
   140038081:	rex.WR
   140038082:	rex.WB push r11
   140038084:	push   rsp
   140038085:	sub    DWORD PTR [rcx],ebp
   140038087:	sub    DWORD PTR [rax],esp
   140038089:	data16 (bad) 
   14003808b:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x203e2d20
   140038093:	je     0x1400380dd
   140038095:	push   rdx
   140038096:	and    BYTE PTR [rip+0x495f4520],bh        # 0x18962c5bc
   14003809c:	rex.WRX push rsi
   14003809e:	rex.B
   14003809f:	rex.WR
   1400380a0:	rex.WB
   1400380a1:	rex.R
   1400380a2:	push   r10
   1400380a4:	rex.RXB add BYTE PTR [r8],r8b
	...
   1400380af:	add    BYTE PTR [rbx+0x6f],al
   1400380b2:	outs   dx,BYTE PTR ds:[rsi]
   1400380b3:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x2828206e
   1400380bc:	movsxd esp,DWORD PTR [rdx+0x4c]
   1400380bf:	gs data16 je 0x1400380e3
   1400380c3:	ds cmp eax,0x4c626320
   1400380c9:	outs   dx,BYTE PTR gs:[rsi]
   1400380cb:	push   rdi
   1400380cc:	imul   esi,DWORD PTR [rax+rbp*2+0x4e],0x296c6c75
   1400380d4:	sub    DWORD PTR [rax],esp
   1400380d6:	data16 (bad) 
   1400380d8:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x203e2d20
   1400380e0:	je     0x14003812a
   1400380e2:	push   rdx
   1400380e3:	and    BYTE PTR [rip+0x495f4520],bh        # 0x18962c609
   1400380e9:	rex.WRX push rsi
   1400380eb:	rex.B
   1400380ec:	rex.WR
   1400380ed:	rex.WB
   1400380ee:	rex.R
   1400380ef:	push   r10
   1400380f1:	rex.RXB add BYTE PTR [r8],r8b
	...
   140038100:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140038102:	outs   dx,BYTE PTR ds:[rsi]
   140038103:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x2828206e
   14003810c:	movsxd esp,DWORD PTR [rdx+0x44]
   14003810f:	(bad)  
   140038110:	je     0x140038173
   140038112:	and    BYTE PTR [rdi*1+0x42626320],bh
   140038119:	jne    0x140038181
   14003811b:	data16 gs jb 0x14003813f
   14003811f:	sub    eax,0x7a697320
   140038124:	outs   dx,DWORD PTR gs:[rsi]
   140038126:	data16 sub BYTE PTR [rsi+0x49],cl
   14003812a:	push   rbx
   14003812b:	pop    rdi
   14003812c:	rex.WB
   14003812d:	rex.WRX push rsp
   14003812f:	rex.RB push r10
   140038131:	rex.XB
   140038132:	rex.RB push r8
   140038134:	push   rsp
   140038135:	pop    rdi
   140038136:	push   rax
   140038137:	push   rdx
   140038138:	rex.WRXB
   140038139:	rex.XB
   14003813a:	rex.RB push r11
   14003813c:	push   rbx
   14003813d:	pop    rdi
   14003813e:	rex.WR
   14003813f:	rex.WB push r11
   140038141:	push   rsp
   140038142:	sub    DWORD PTR [rcx],ebp
   140038144:	sub    DWORD PTR [rax],esp
   140038146:	data16 (bad) 
   140038148:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x203e2d20
   140038150:	je     0x14003819a
   140038152:	push   rdx
   140038153:	and    BYTE PTR [rip+0x495f4520],bh        # 0x18962c679
   140038159:	rex.WRX push rsi
   14003815b:	rex.B
   14003815c:	rex.WR
   14003815d:	rex.WB
   14003815e:	rex.R
   14003815f:	push   r10
   140038161:	rex.RXB add BYTE PTR [r8],r8b
	...
   140038170:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140038172:	outs   dx,BYTE PTR ds:[rsi]
   140038173:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x2828206e
   14003817c:	jo     0x1400381e0
   14003817e:	rex.X jne 0x1400381e7
   140038181:	data16 gs jb 0x1400381a5
   140038185:	es and BYTE PTR es:[rbx+0x69],dh
   14003818a:	jp     0x1400381f1
   14003818c:	outs   dx,DWORD PTR ds:[rsi]
   14003818d:	data16 sub BYTE PTR [rsi+0x49],cl
   140038191:	push   rbx
   140038192:	pop    rdi
   140038193:	rex.WB
   140038194:	rex.WRX push rsp
   140038196:	rex.RB push r10
   140038198:	rex.XB
   140038199:	rex.RB push r8
   14003819b:	push   rsp
   14003819c:	pop    rdi
   14003819d:	rex.B
   14003819e:	rex.XB push r12
   1400381a0:	rex.WB
   1400381a1:	rex.WRXB
   1400381a2:	rex.WRX sub QWORD PTR [rax],r12
   1400381a5:	cmp    eax,0x6263203d
   1400381aa:	rex.X jne 0x140038213
   1400381ad:	data16 gs jb 0x1400381da
   1400381b1:	sub    DWORD PTR [rax],esp
   1400381b3:	data16 (bad) 
   1400381b5:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x203e2d20
   1400381bd:	jb     0x140038224
   1400381bf:	je     0x140038236
   1400381c1:	jb     0x140038231
   1400381c3:	add    BYTE PTR [rax],ah
   1400381c5:	outs   dx,BYTE PTR ds:[rsi]
   1400381c6:	outs   dx,DWORD PTR ds:[rsi]
   1400381c7:	je     0x1400381c9
   1400381c9:	add    BYTE PTR [rax],al
   1400381cb:	add    BYTE PTR [rax],al
   1400381cd:	add    BYTE PTR [rax],al
   1400381cf:	add    BYTE PTR [rdx+0x0],dl
   1400381d2:	(bad)  
   1400381d3:	add    BYTE PTR [rdi+0x0],dh
	...
   1400381de:	add    BYTE PTR [rax],al
   1400381e0:	push   rsp
   1400381e1:	add    BYTE PTR [rbp+0x0],ah
   1400381e4:	ins    BYTE PTR es:[rdi],dx
   1400381e5:	add    BYTE PTR [rbp+0x0],ah
   1400381e8:	ins    DWORD PTR es:[rdi],dx
   1400381e9:	add    BYTE PTR [rbp+0x0],ah
   1400381ec:	je     0x1400381ee
   1400381ee:	jb     0x1400381f0
   1400381f0:	jns    0x1400381f2
   1400381f2:	rex.WB add BYTE PTR [r14+0x0],bpl
   1400381f6:	data16 add BYTE PTR [rdi+0x0],ch
   1400381fa:	jl     0x1400381fc
   1400381fc:	rex.XB add BYTE PTR [r15+0x0],bpl
   140038200:	outs   dx,BYTE PTR ds:[rsi]
   140038201:	add    BYTE PTR [rsi+0x0],ch
   140038204:	add    BYTE PTR gs:[rbx+0x0],ah
   140038208:	je     0x14003820a
   14003820a:	imul   eax,DWORD PTR [rax],0x6e006f
   140038210:	jae    0x140038212
   140038212:	push   rbx
   140038213:	add    BYTE PTR [rcx+0x0],ch
   140038216:	outs   dx,BYTE PTR ds:[rsi]
   140038217:	add    BYTE PTR [rbx+0x0],ah
   14003821a:	add    BYTE PTR gs:[rbx+0x0],dl
   14003821e:	je     0x140038220
   140038220:	(bad)  
   140038221:	add    BYTE PTR [rdx+0x0],dh
   140038224:	je     0x140038226
   140038226:	cmp    eax,0x75002500
   14003822b:	add    BYTE PTR [rax+rax*1+0x42],bh
   14003822f:	add    BYTE PTR [rbp+0x0],ch
   140038232:	rex.XB add BYTE PTR [r15+0x0],bpl
   140038236:	outs   dx,BYTE PTR ds:[rsi]
   140038237:	add    BYTE PTR [rsi+0x0],ch
   14003823a:	add    BYTE PTR gs:[rbx+0x0],ah
   14003823e:	je     0x140038240
   140038240:	imul   eax,DWORD PTR [rax],0x6e006f
   140038246:	push   rbx
   140038247:	add    BYTE PTR [rax+rax*1+0x61],dh
   14003824b:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14003824f:	add    BYTE PTR [rbp+0x0],ah
   140038252:	add    BYTE PTR fs:[rip+0x75002500],bh        # 0x1b503a759
   140038259:	add    BYTE PTR [rax+rax*1+0x5a],bh
   14003825d:	add    BYTE PTR [rax+rax*1+0x43],ah
   140038261:	add    BYTE PTR [rdi+0x0],ch
   140038264:	outs   dx,BYTE PTR ds:[rsi]
   140038265:	add    BYTE PTR [rsi+0x0],ch
   140038268:	add    BYTE PTR gs:[rbx+0x0],ah
   14003826c:	je     0x14003826e
   14003826e:	imul   eax,DWORD PTR [rax],0x6e006f
   140038274:	push   rbx
   140038275:	add    BYTE PTR [rax+rax*1+0x61],dh
   140038279:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14003827d:	add    BYTE PTR [rbp+0x0],ah
   140038280:	add    BYTE PTR fs:[rip+0x75002500],bh        # 0x1b503a787
   140038287:	add    BYTE PTR [rax+rax*1+0x53],bh
   14003828b:	add    BYTE PTR [rax+rax*1+0x6f],ch
   14003828f:	add    BYTE PTR [rdi+0x0],dh
   140038292:	rex.XB add BYTE PTR [r15+0x0],bpl
   140038296:	outs   dx,BYTE PTR ds:[rsi]
   140038297:	add    BYTE PTR [rsi+0x0],ch
   14003829a:	add    BYTE PTR gs:[rbx+0x0],ah
   14003829e:	je     0x1400382a0
   1400382a0:	imul   eax,DWORD PTR [rax],0x6e006f
   1400382a6:	jae    0x1400382a8
   1400382a8:	cmp    eax,0x75002500
   1400382ad:	add    BYTE PTR [rax+rax*1+0x4d],bh
   1400382b1:	add    BYTE PTR [rcx+0x0],ch
   1400382b4:	outs   dx,BYTE PTR ds:[rsi]
   1400382b5:	add    BYTE PTR [rbx+0x0],dl
   1400382b8:	ins    BYTE PTR es:[rdi],dx
   1400382b9:	add    BYTE PTR [rdi+0x0],ch
   1400382bc:	ja     0x1400382be
   1400382be:	push   rsp
   1400382bf:	add    BYTE PTR [rax+0x0],ch
   1400382c2:	jb     0x1400382c4
   1400382c4:	outs   dx,DWORD PTR ds:[rsi]
   1400382c5:	add    BYTE PTR [rbp+0x0],dh
   1400382c8:	add    BYTE PTR [eax+0x0],ch
   1400382cc:	jo     0x1400382ce
   1400382ce:	jne    0x1400382d0
   1400382d0:	je     0x1400382d2
   1400382d2:	cmp    eax,0x75002500
   1400382d7:	add    BYTE PTR [rax+rax*1+0x4d],bh
   1400382db:	add    BYTE PTR [rcx+0x0],ah
   1400382de:	js     0x1400382e0
   1400382e0:	push   rbx
   1400382e1:	add    BYTE PTR [rax+rax*1+0x6f],ch
   1400382e5:	add    BYTE PTR [rdi+0x0],dh
   1400382e8:	push   rsp
   1400382e9:	add    BYTE PTR [rax+0x0],ch
   1400382ec:	jb     0x1400382ee
   1400382ee:	outs   dx,DWORD PTR ds:[rsi]
   1400382ef:	add    BYTE PTR [rbp+0x0],dh
   1400382f2:	add    BYTE PTR [eax+0x0],ch
   1400382f6:	jo     0x1400382f8
   1400382f8:	jne    0x1400382fa
   1400382fa:	je     0x1400382fc
   1400382fc:	cmp    eax,0x75002500
   140038301:	add    BYTE PTR [rax+rax*1+0x4d],bh
   140038305:	add    BYTE PTR [rcx+0x0],ah
   140038308:	js     0x14003830a
   14003830a:	rex.WB add BYTE PTR [r10+0x0],sil
   14003830e:	jo     0x140038310
   140038310:	jae    0x140038312
   140038312:	push   rbp
   140038313:	add    BYTE PTR [rbx+0x0],dh
   140038316:	add    BYTE PTR gs:[rax+rax*1+0x3d],ah
   14003831b:	add    BYTE PTR [rip+0x7c007500],ah        # 0x1bc03f821
   140038321:	add    BYTE PTR [rbx+0x0],al
   140038324:	jne    0x140038326
   140038326:	jb     0x140038328
   140038328:	jb     0x14003832a
   14003832a:	add    BYTE PTR gs:[rsi+0x0],ch
   14003832e:	je     0x140038330
   140038330:	rex.WB add BYTE PTR [r10+0x0],sil
   140038334:	jo     0x140038336
   140038336:	jae    0x140038338
   140038338:	push   rbp
   140038339:	add    BYTE PTR [rbx+0x0],dh
   14003833c:	add    BYTE PTR gs:[rax+rax*1+0x3d],ah
   140038341:	add    BYTE PTR [rip+0x7c007500],ah        # 0x1bc03f847
   140038347:	add    BYTE PTR [rax+rax*1+0x6f],dl
   14003834b:	add    BYTE PTR [rax+rax*1+0x61],dh
   14003834f:	add    BYTE PTR [rax+rax*1+0x57],ch
   140038353:	add    BYTE PTR [rsi+0x0],ah
   140038356:	jo     0x140038358
   140038358:	add    BYTE PTR [rax+r8*1+0x6f],r13b
   14003835d:	add    BYTE PTR [rdi+0x0],dh
   140038360:	jae    0x140038362
   140038362:	cmp    eax,0x75002500
   140038367:	add    BYTE PTR [rax+rax*1+0x5a],bh
   14003836b:	add    BYTE PTR [rbp+0x0],ah
   14003836e:	jb     0x140038370
   140038370:	outs   dx,DWORD PTR ds:[rsi]
   140038371:	add    BYTE PTR [rax+rax*1+0x61],al
   140038375:	add    BYTE PTR [rcx+0x0],bh
   140038378:	add    BYTE PTR [rax+r8*1+0x6f],r13b
   14003837d:	add    BYTE PTR [rdi+0x0],dh
   140038380:	jae    0x140038382
   140038382:	cmp    eax,0x75002500
   140038387:	add    BYTE PTR [rax+rax*1+0x42],bh
   14003838b:	add    BYTE PTR [rbp+0x0],ch
   14003838e:	add    BYTE PTR [rax+r8*1+0x6f],r13b
   140038393:	add    BYTE PTR [rdi+0x0],dh
   140038396:	jae    0x140038398
   140038398:	cmp    eax,0x75002500
   14003839d:	add    BYTE PTR [rax+rax*1+0x54],bh
   1400383a1:	add    BYTE PTR [rdi+0x0],ch
   1400383a4:	je     0x1400383a6
   1400383a6:	(bad)  
   1400383a7:	add    BYTE PTR [rax+rax*1+0x49],ch
   1400383ab:	add    BYTE PTR [rsi+0x0],ch
   1400383ae:	je     0x1400383b0
   1400383b0:	add    BYTE PTR gs:[rdx+0x0],dh
   1400383b4:	movsxd eax,DWORD PTR [rax]
   1400383b6:	add    BYTE PTR gs:[rax+0x0],dh
   1400383ba:	je     0x1400383bc
   1400383bc:	add    BYTE PTR gs:[rax+rax*1+0x43],ah
   1400383c1:	add    BYTE PTR [rdi+0x0],ch
   1400383c4:	outs   dx,BYTE PTR ds:[rsi]
   1400383c5:	add    BYTE PTR [rsi+0x0],ch
   1400383c8:	push   rax
   1400383c9:	add    BYTE PTR [rbp+0x0],ah
   1400383cc:	jb     0x1400383ce
   1400383ce:	movsxd eax,DWORD PTR [rax]
   1400383d0:	add    BYTE PTR gs:[rsi+0x0],ch
   1400383d4:	je     0x1400383d6
   1400383d6:	(bad)  
   1400383d7:	add    BYTE PTR [rdi+0x0],ah
   1400383da:	add    BYTE PTR gs:[rax],ch
   1400383dd:	add    BYTE PTR [rdx],ch
   1400383df:	add    BYTE PTR [rcx],ch
   1400383e1:	add    BYTE PTR [rip+0x75002500],bh        # 0x1b503a8e7
   1400383e7:	add    BYTE PTR [rax+rax*1+0x43],bh
   1400383eb:	add    BYTE PTR [rdi+0x0],ch
   1400383ee:	outs   dx,BYTE PTR ds:[rsi]
   1400383ef:	add    BYTE PTR [rsi+0x0],ch
   1400383f2:	push   rax
   1400383f3:	add    BYTE PTR [rbp+0x0],ah
   1400383f6:	jb     0x1400383f8
   1400383f8:	movsxd eax,DWORD PTR [rax]
   1400383fa:	add    BYTE PTR gs:[rsi+0x0],ch
   1400383fe:	je     0x140038400
   140038400:	(bad)  
   140038401:	add    BYTE PTR [rdi+0x0],ah
   140038404:	add    BYTE PTR gs:[rbx+0x0],dl
   140038408:	add    BYTE PTR gs:[rsi+0x0],ch
   14003840c:	je     0x14003840e
   14003840e:	push   rsp
   14003840f:	add    BYTE PTR [rdi+0x0],ch
   140038412:	push   rbp
   140038413:	add    BYTE PTR [rbp+0x0],cl
   140038416:	sub    BYTE PTR [rax],al
   140038418:	sub    al,BYTE PTR [rax]
   14003841a:	sub    DWORD PTR [rax],eax
   14003841c:	cmp    eax,0x75002500
   140038421:	add    BYTE PTR [rax+rax*1+0x43],bh
   140038425:	add    BYTE PTR [rdi+0x0],ch
   140038428:	outs   dx,BYTE PTR ds:[rsi]
   140038429:	add    BYTE PTR [rsi+0x0],ch
   14003842c:	push   rax
   14003842d:	add    BYTE PTR [rbp+0x0],ah
   140038430:	jb     0x140038432
   140038432:	movsxd eax,DWORD PTR [rax]
   140038434:	add    BYTE PTR gs:[rsi+0x0],ch
   140038438:	je     0x14003843a
   14003843a:	(bad)  
   14003843b:	add    BYTE PTR [rdi+0x0],ah
   14003843e:	add    BYTE PTR gs:[rcx+0x0],cl
   140038442:	outs   dx,BYTE PTR ds:[rsi]
   140038443:	add    BYTE PTR [rdx+0x0],al
   140038446:	rex.WRB add BYTE PTR [r8],r13b
   140038449:	add    BYTE PTR [rdx],ch
   14003844b:	add    BYTE PTR [rcx],ch
   14003844d:	add    BYTE PTR [rip+0x75002500],bh        # 0x1b503a953
   140038453:	add    BYTE PTR [rax+rax*1+0x43],bh
   140038457:	add    BYTE PTR [rdi+0x0],ch
   14003845a:	outs   dx,BYTE PTR ds:[rsi]
   14003845b:	add    BYTE PTR [rsi+0x0],ch
   14003845e:	push   rax
   14003845f:	add    BYTE PTR [rbp+0x0],ah
   140038462:	jb     0x140038464
   140038464:	movsxd eax,DWORD PTR [rax]
   140038466:	add    BYTE PTR gs:[rsi+0x0],ch
   14003846a:	je     0x14003846c
   14003846c:	(bad)  
   14003846d:	add    BYTE PTR [rdi+0x0],ah
   140038470:	add    BYTE PTR gs:[rcx+0x0],cl
   140038474:	outs   dx,BYTE PTR ds:[rsi]
   140038475:	add    BYTE PTR [rdx+0x0],bl
   140038478:	add    BYTE PTR [rax],r13b
   14003847b:	add    BYTE PTR [rdx],ch
   14003847d:	add    BYTE PTR [rcx],ch
   14003847f:	add    BYTE PTR [rip+0x75002500],bh        # 0x1b503a985
   140038485:	add    BYTE PTR [rax+rax*1+0x43],bh
   140038489:	add    BYTE PTR [rdi+0x0],ch
   14003848c:	outs   dx,BYTE PTR ds:[rsi]
   14003848d:	add    BYTE PTR [rsi+0x0],ch
   140038490:	push   rax
   140038491:	add    BYTE PTR [rbp+0x0],ah
   140038494:	jb     0x140038496
   140038496:	movsxd eax,DWORD PTR [rax]
   140038498:	add    BYTE PTR gs:[rsi+0x0],ch
   14003849c:	je     0x14003849e
   14003849e:	(bad)  
   14003849f:	add    BYTE PTR [rdi+0x0],ah
   1400384a2:	add    BYTE PTR gs:[rax+0x0],dl
   1400384a6:	(bad)  
   1400384a7:	add    BYTE PTR [rbx+0x0],dh
   1400384aa:	jae    0x1400384ac
   1400384ac:	push   rsp
   1400384ad:	add    BYTE PTR [rax+0x0],ch
   1400384b0:	jb     0x1400384b2
   1400384b2:	outs   dx,DWORD PTR ds:[rsi]
   1400384b3:	add    BYTE PTR [rbp+0x0],dh
   1400384b6:	add    BYTE PTR [eax+0x0],ch
   1400384ba:	sub    BYTE PTR [rax],al
   1400384bc:	sub    al,BYTE PTR [rax]
   1400384be:	sub    DWORD PTR [rax],eax
   1400384c0:	cmp    eax,0x75002500
   1400384c5:	add    BYTE PTR [rax+rax*1+0x4d],bh
   1400384c9:	add    BYTE PTR [rcx+0x0],ah
   1400384cc:	js     0x1400384ce
   1400384ce:	rex.WB add BYTE PTR [r10+0x0],sil
   1400384d2:	jo     0x1400384d4
   1400384d4:	push   rbp
   1400384d5:	add    BYTE PTR [rbx+0x0],dh
   1400384d8:	(bad)  
   1400384d9:	add    BYTE PTR [rdi+0x0],ah
   1400384dc:	add    BYTE PTR gs:[rax+0x0],dl
   1400384e0:	add    BYTE PTR gs:[rdx+0x0],dh
   1400384e4:	movsxd eax,DWORD PTR [rax]
   1400384e6:	add    BYTE PTR gs:[rsi+0x0],ch
   1400384ea:	je     0x1400384ec
   1400384ec:	(bad)  
   1400384ed:	add    BYTE PTR [rdi+0x0],ah
   1400384f0:	add    BYTE PTR gs:[rax],ch
   1400384f3:	add    BYTE PTR [rdx],ch
   1400384f5:	add    BYTE PTR [rcx],ch
   1400384f7:	add    BYTE PTR [rip+0x75002500],bh        # 0x1b503a9fd
   1400384fd:	add    BYTE PTR [rax+rax*1+0x41],bh
   140038501:	add    BYTE PTR [rsi+0x0],dh
   140038504:	add    BYTE PTR [eax+0x0],dl
   140038508:	(bad)  
   140038509:	add    BYTE PTR [rbx+0x0],ah
   14003850c:	imul   eax,DWORD PTR [rax],0x65
   14003850f:	add    BYTE PTR [rax+rax*1+0x52],dh
   140038513:	add    BYTE PTR [rdi+0x0],ch
   140038516:	jne    0x140038518
   140038518:	outs   dx,BYTE PTR ds:[rsi]
   140038519:	add    BYTE PTR [rax+rax*1+0x54],ah
   14003851d:	add    BYTE PTR [rdx+0x0],dh
   140038520:	imul   eax,DWORD PTR [rax],0x540070
   140038526:	imul   eax,DWORD PTR [rax],0x65006d
   14003852c:	rex.WRB add BYTE PTR [r11+0x0],r14b
   140038530:	add    BYTE PTR gs:[rbx+0x0],ah
   140038534:	sub    BYTE PTR [rax],al
   140038536:	sub    al,BYTE PTR [rax]
   140038538:	sub    DWORD PTR [rax],eax
   14003853a:	cmp    eax,0x75002500
	...
   140038547:	add    BYTE PTR [rbx+0x6f],al
   14003854a:	outs   dx,BYTE PTR ds:[rsi]
   14003854b:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x2828206e
   140038554:	jne    0x1400385bf
   140038556:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140038558:	outs   dx,BYTE PTR ds:[rsi]
   140038559:	je     0x1400385c0
   14003855b:	js     0x1400385d1
   14003855d:	and    BYTE PTR [rsi],ah
   14003855f:	and    BYTE PTR es:[rax+0x70],dh
   140038563:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140038565:	jae    0x1400385db
   140038567:	sub    DWORD PTR [rcx],ebp
   140038569:	and    BYTE PTR [rsi+0x61],ah
   14003856c:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x203e2d20
   140038574:	je     0x1400385be
   140038576:	push   rdx
   140038577:	and    BYTE PTR [rip+0x495f4520],bh        # 0x18962ca9d
   14003857d:	rex.WRX push rsi
   14003857f:	rex.B
   140038580:	rex.WR
   140038581:	rex.WB
   140038582:	rex.R
   140038583:	push   r10
   140038585:	rex.RXB add BYTE PTR [r8],r8b
	...
   140038590:	rex.WRX add BYTE PTR [rcx+0x0],r9b
   140038594:	push   rbx
   140038595:	add    BYTE PTR [rdi+0x0],bl
   140038598:	rex.XB add BYTE PTR [r15+0x0],bpl
   14003859c:	outs   dx,BYTE PTR ds:[rsi]
   14003859d:	add    BYTE PTR [rsi+0x0],ch
   1400385a0:	add    BYTE PTR gs:[rbx+0x0],ah
   1400385a4:	je     0x1400385a6
   1400385a6:	imul   eax,DWORD PTR [rax],0x6e006f
   1400385ac:	push   rax
   1400385ad:	add    BYTE PTR [rbp+0x0],dh
   1400385b0:	jb     0x1400385b2
   1400385b2:	add    BYTE PTR [ebp+0x0],ah
   1400385b6:	push   rsp
   1400385b7:	add    BYTE PTR [rcx+0x0],ch
   1400385ba:	ins    DWORD PTR es:[rdi],dx
   1400385bb:	add    BYTE PTR [rbp+0x0],ah
   1400385be:	outs   dx,DWORD PTR ds:[rsi]
   1400385bf:	add    BYTE PTR [rbp+0x0],dh
   1400385c2:	je     0x1400385c4
   1400385c4:	rex.WB add BYTE PTR [r14+0x0],bpl
   1400385c8:	push   rbx
   1400385c9:	add    BYTE PTR [rbp+0x0],ah
   1400385cc:	movsxd eax,DWORD PTR [rax]
   1400385ce:	outs   dx,DWORD PTR ds:[rsi]
   1400385cf:	add    BYTE PTR [rsi+0x0],ch
   1400385d2:	add    BYTE PTR fs:[rbx+0x0],dh
	...
   1400385de:	add    BYTE PTR [rax],al
   1400385e0:	push   rbx
   1400385e1:	add    BYTE PTR [rdi+0x0],ch
   1400385e4:	jne    0x1400385e6
   1400385e6:	jb     0x1400385e8
   1400385e8:	movsxd eax,DWORD PTR [rax]
   1400385ea:	add    BYTE PTR gs:[rax],ah
   1400385ed:	add    BYTE PTR [rcx+0x0],al
   1400385f0:	add    BYTE PTR fs:[rax+rax*1+0x72],ah
   1400385f5:	add    BYTE PTR [rdx],bh
   1400385f7:	add    BYTE PTR [rip+0x25002000],ch        # 0x16503a5fd
   1400385fd:	add    BYTE PTR [rbx+0x0],dh
   140038600:	cmp    al,BYTE PTR [rax]
   140038602:	cmp    al,BYTE PTR [rax]
   140038604:	and    eax,0x20007500
   140038609:	add    BYTE PTR [rax],ah
   14003860b:	add    BYTE PTR [rax],ah
   14003860d:	add    BYTE PTR [rax],ah
   14003860f:	add    BYTE PTR [rax+rax*1+0x65],al
   140038613:	add    BYTE PTR [rbx+0x0],dh
   140038616:	je     0x140038618
   140038618:	and    BYTE PTR [rax],al
   14003861a:	add    BYTE PTR [r8+rax*1+0x64],spl
   14003861f:	add    BYTE PTR [rdx+0x0],dh
   140038622:	cmp    al,BYTE PTR [rax]
   140038624:	sub    eax,0x25002000
   140038629:	add    BYTE PTR [rbx+0x0],dh
   14003862c:	cmp    al,BYTE PTR [rax]
   14003862e:	cmp    al,BYTE PTR [rax]
   140038630:	and    eax,0x2c007500
   140038635:	add    BYTE PTR [rax],ah
   140038637:	add    BYTE PTR [rax],ah
   140038639:	add    BYTE PTR [rax],ah
   14003863b:	add    BYTE PTR [rax+0x0],dl
   14003863e:	jb     0x140038640
   140038640:	outs   dx,DWORD PTR ds:[rsi]
   140038641:	add    BYTE PTR [rbx+0x0],ah
   140038644:	outs   dx,DWORD PTR ds:[rsi]
   140038645:	add    BYTE PTR [rax+rax*1+0x6f],dh
   140038649:	add    BYTE PTR [rbx+0x0],ah
   14003864c:	outs   dx,DWORD PTR ds:[rsi]
   14003864d:	add    BYTE PTR [rax+rax*1+0x3a],ch
   140038651:	add    BYTE PTR [rip+0x20007500],ah        # 0x16003fb57
   140038657:	add    BYTE PTR [rax],ah
   140038659:	add    BYTE PTR [rax+rax*1],ch
   14003865c:	add    BYTE PTR [r8+0x0],sil
   140038660:	jo     0x140038662
   140038662:	and    BYTE PTR [rax],al
   140038664:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140038668:	ins    DWORD PTR es:[rdi],dx
   140038669:	add    BYTE PTR [rbp+0x0],ah
   14003866c:	cmp    al,BYTE PTR [rax]
   14003866e:	and    BYTE PTR [rax],al
   140038670:	and    BYTE PTR [rax],al
   140038672:	and    eax,0x7300
	...
   14003867f:	add    BYTE PTR [rsi+0x7f21c420],dh
   140038685:	(bad)  
   140038686:	movabs al,ds:0xef17461d4b7c7630
   14003868f:	and    eax,0x730045
   140038694:	je     0x140038696
   140038696:	(bad)  
   140038697:	add    BYTE PTR [rdx+0x0],ah
   14003869a:	ins    BYTE PTR es:[rdi],dx
   14003869b:	add    BYTE PTR [rcx+0x0],ch
   14003869e:	jae    0x1400386a0
   1400386a0:	push   0x74005300
   1400386a5:	add    BYTE PTR [rcx+0x0],ah
   1400386a8:	jb     0x1400386aa
   1400386aa:	je     0x1400386ac
   1400386ac:	add    BYTE PTR [rax],al
   1400386ae:	add    BYTE PTR [rax],al
   1400386b0:	add    BYTE PTR [r11+0x0],r14b
   1400386b4:	je     0x1400386b6
   1400386b6:	(bad)  
   1400386b7:	add    BYTE PTR [rdx+0x0],ah
   1400386ba:	ins    BYTE PTR es:[rdi],dx
   1400386bb:	add    BYTE PTR [rcx+0x0],ch
   1400386be:	jae    0x1400386c0
   1400386c0:	push   0x74005300
   1400386c5:	add    BYTE PTR [rdi+0x0],ch
   1400386c8:	jo     0x1400386ca
   1400386ca:	add    BYTE PTR [rax],al
   1400386cc:	add    BYTE PTR [rax],al
   1400386ce:	add    BYTE PTR [rax],al
   1400386d0:	add    BYTE PTR [r8+r8*1+0x6f],bpl
   1400386d5:	add    BYTE PTR [rbx+0x0],dh
   1400386d8:	add    BYTE PTR gs:[rax+0x0],dl
   1400386dc:	add    BYTE PTR gs:[rsi+0x0],ch
   1400386e0:	add    BYTE PTR fs:[rcx+0x0],ch
   1400386e4:	outs   dx,BYTE PTR ds:[rsi]
   1400386e5:	add    BYTE PTR [rdi+0x0],ah
   1400386e8:	push   rbx
   1400386e9:	add    BYTE PTR [rax+rax*1+0x61],dh
   1400386ed:	add    BYTE PTR [rdx+0x0],dh
   1400386f0:	je     0x1400386f2
   1400386f2:	add    BYTE PTR [rax],al
   1400386f4:	add    BYTE PTR [rax],al
   1400386f6:	add    BYTE PTR [rax],al
   1400386f8:	add    BYTE PTR [r8+r8*1+0x6f],bpl
   1400386fd:	add    BYTE PTR [rbx+0x0],dh
   140038700:	add    BYTE PTR gs:[rax+0x0],dl
   140038704:	add    BYTE PTR gs:[rsi+0x0],ch
   140038708:	add    BYTE PTR fs:[rcx+0x0],ch
   14003870c:	outs   dx,BYTE PTR ds:[rsi]
   14003870d:	add    BYTE PTR [rdi+0x0],ah
   140038710:	push   rbx
   140038711:	add    BYTE PTR [rax+rax*1+0x6f],dh
   140038715:	add    BYTE PTR [rax+0x0],dh
	...
   140038720:	push   rbx
   140038721:	add    BYTE PTR [rax+rax*1+0x72],dh
   140038725:	add    BYTE PTR [rbp+0x0],ah
   140038728:	(bad)  
   140038729:	add    BYTE PTR [rbp+0x0],ch
   14003872c:	push   rbx
   14003872d:	add    BYTE PTR [rax+rax*1+0x61],dh
   140038731:	add    BYTE PTR [rdx+0x0],dh
   140038734:	je     0x140038736
   140038736:	add    BYTE PTR [rax],al
   140038738:	push   rbx
   140038739:	add    BYTE PTR [rax+rax*1+0x72],dh
   14003873d:	add    BYTE PTR [rbp+0x0],ah
   140038740:	(bad)  
   140038741:	add    BYTE PTR [rbp+0x0],ch
   140038744:	push   rbx
   140038745:	add    BYTE PTR [rax+rax*1+0x6f],dh
   140038749:	add    BYTE PTR [rax+0x0],dh
   14003874c:	add    BYTE PTR [rax],al
   14003874e:	add    BYTE PTR [rax],al
   140038750:	add    BYTE PTR [rbp+0x0],r12b
   140038754:	ins    BYTE PTR es:[rdi],dx
   140038755:	add    BYTE PTR [rbp+0x0],ah
   140038758:	je     0x14003875a
   14003875a:	add    BYTE PTR gs:[rbx+0x0],dl
   14003875e:	je     0x140038760
   140038760:	(bad)  
   140038761:	add    BYTE PTR [rdx+0x0],dh
   140038764:	je     0x140038766
   140038766:	add    BYTE PTR [rax],al
   140038768:	add    BYTE PTR [rbp+0x0],r12b
   14003876c:	ins    BYTE PTR es:[rdi],dx
   14003876d:	add    BYTE PTR [rbp+0x0],ah
   140038770:	je     0x140038772
   140038772:	add    BYTE PTR gs:[rbx+0x0],dl
   140038776:	je     0x140038778
   140038778:	outs   dx,DWORD PTR ds:[rsi]
   140038779:	add    BYTE PTR [rax+0x0],dh
   14003877c:	add    BYTE PTR [rax],al
   14003877e:	add    BYTE PTR [rax],al
   140038780:	and    eax,0x79005300
   140038785:	add    BYTE PTR [rbx+0x0],dh
   140038788:	je     0x14003878a
   14003878a:	add    BYTE PTR gs:[rbp+0x0],ch
   14003878e:	push   rdx
   14003878f:	add    BYTE PTR [rdi+0x0],ch
   140038792:	outs   dx,DWORD PTR ds:[rsi]
   140038793:	add    BYTE PTR [rax+rax*1+0x25],dh
   140038797:	add    BYTE PTR [rax+rax*1+0x53],bl
   14003879b:	add    BYTE PTR [rcx+0x0],bh
   14003879e:	jae    0x1400387a0
   1400387a0:	je     0x1400387a2
   1400387a2:	add    BYTE PTR gs:[rbp+0x0],ch
   1400387a6:	xor    eax,DWORD PTR [rax]
   1400387a8:	xor    al,BYTE PTR [rax]
   1400387aa:	pop    rsp
   1400387ab:	add    BYTE PTR [rsi+0x0],ch
   1400387ae:	je     0x1400387b0
   1400387b0:	outs   dx,DWORD PTR ds:[rsi]
   1400387b1:	add    BYTE PTR [rbx+0x0],dh
   1400387b4:	imul   eax,DWORD PTR [rax],0x72
   1400387b7:	add    BYTE PTR [rsi+0x0],ch
   1400387ba:	ins    BYTE PTR es:[rdi],dx
   1400387bb:	add    BYTE PTR [rsi],ch
   1400387bd:	add    BYTE PTR [rbp+0x0],ah
   1400387c0:	js     0x1400387c2
   1400387c2:	add    BYTE PTR gs:[rax],al
   1400387c5:	add    BYTE PTR [rax],al
   1400387c7:	add    BYTE PTR [rax],dh
   1400387c9:	js     0x14003875b
   1400387cb:	pop    rsi
   1400387cc:	test   edi,edx
   1400387ce:	mov    ecx,0x2ce9b6b
   1400387d3:	ss cmc 
   1400387d5:	(bad)  
   1400387d6:	and    DWORD PTR [rax+rdi*1],esp
   1400387d9:	rol    BYTE PTR [rbx+rbx*4],cl
   1400387dc:	sbb    al,0xce
   1400387de:	add    bl,cl
   1400387e0:	pop    rax
   1400387e1:	cli    
   1400387e2:	enter  0xc21b,0xb2
   1400387e6:	test   eax,0x44c1e8d7
   1400387eb:	mov    BYTE PTR [rsi],dh
   1400387ed:	mov    edx,0x14d6e0ae
   1400387f2:	lods   al,BYTE PTR ds:[rsi]
   1400387f3:	push   0xffffffffffffffff
   1400387f5:	test   al,0x36
   1400387f7:	outs   dx,DWORD PTR ds:[rsi]
   1400387f8:	ins    DWORD PTR es:[rdi],dx
   1400387f9:	(bad)  
   1400387fa:	jo     0x14003882b
   1400387fc:	jae    0x140038863
   1400387fe:	je     0x14003883c
   140038800:	push   rsp
   140038801:	and    BYTE PTR ds:[rdi+rbp*2+0x6f],dh
   140038806:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   14003880a:	add    BYTE PTR [eax],al
   14003880d:	add    BYTE PTR [rax],al
   14003880f:	add    al,ah
   140038811:	cmp    eax,0x3c6f394c
   140038816:	rcl    BYTE PTR [rcx],cl
   140038818:	cmp    DWORD PTR [rbx+0x0],0x7a794fc0
   14003881f:	mov    bh,0x66
   140038821:	data16 data16 data16 cmp al,BYTE PTR [rax]
   140038826:	add    BYTE PTR [rax],al
   140038828:	cmp    al,BYTE PTR [rax]
   14003882a:	cmp    al,BYTE PTR [rax]
   14003882c:	and    eax,0x73006800
   140038831:	add    BYTE PTR [rip+0x2e007500],ah        # 0x16e03fd37
   140038837:	add    BYTE PTR [rip+0x2e007500],ah        # 0x16e03fd3d
   14003883d:	add    BYTE PTR [rip+0x2e007500],ah        # 0x16e03fd43
   140038843:	add    BYTE PTR [rip+0x7500],ah        # 0x14003fd49
   140038849:	add    BYTE PTR [rax],al
   14003884b:	add    BYTE PTR [rax],al
   14003884d:	add    BYTE PTR [rax],al
   14003884f:	add    BYTE PTR [rdx],bh
   140038851:	add    BYTE PTR [rdx],bh
   140038853:	add    BYTE PTR [rsi+0x0],ah
   140038856:	data16 add BYTE PTR [rsi+0x0],ah
   14003885a:	data16 add BYTE PTR [rdx],bh
   14003885d:	add    BYTE PTR [rax],dh
   14003885f:	add    BYTE PTR [rdx],bh
   140038861:	add    BYTE PTR [rip+0x2e007500],ah        # 0x16e03fd67
   140038867:	add    BYTE PTR [rip+0x2e007500],ah        # 0x16e03fd6d
   14003886d:	add    BYTE PTR [rip+0x2e007500],ah        # 0x16e03fd73
   140038873:	add    BYTE PTR [rip+0x7500],ah        # 0x14003fd79
   140038879:	add    BYTE PTR [rax],al
   14003887b:	add    BYTE PTR [rdx],bh
   14003887d:	add    BYTE PTR [rdx],bh
   14003887f:	add    BYTE PTR [rax],al
   140038881:	add    BYTE PTR [rax],al
   140038883:	add    BYTE PTR [rdx],bh
   140038885:	add    BYTE PTR [rax],al
   140038887:	add    BYTE PTR [rip+0x7800],ah        # 0x14004008d
   14003888d:	add    BYTE PTR [rax],al
   14003888f:	add    BYTE PTR [rdx],bh
   140038891:	add    BYTE PTR [rip+0x2e007500],ah        # 0x16e03fd97
   140038897:	add    BYTE PTR [rip+0x2e007500],ah        # 0x16e03fd9d
   14003889d:	add    BYTE PTR [rip+0x2e007500],ah        # 0x16e03fda3
   1400388a3:	add    BYTE PTR [rip+0x7500],ah        # 0x14003fda9
   1400388a9:	add    BYTE PTR [rax],al
   1400388ab:	add    BYTE PTR [rip+0x6400],ah        # 0x14003ecb1
	...
   1400388bd:	add    BYTE PTR [rax],al
   1400388bf:	add    BYTE PTR [rax],dh
   1400388c1:	js     0x14003893b
   1400388c3:	add    DWORD PTR [rcx],esi
   1400388c5:	js     0x14003893f
   1400388c7:	add    DWORD PTR [rdx],esi
   1400388c9:	js     0x140038943
   1400388cb:	add    DWORD PTR [rbx],esi
   1400388cd:	js     0x140038947
   1400388cf:	add    DWORD PTR [rax+rdi*2],esi
   1400388d2:	js     0x1400388d5
   1400388d4:	xor    eax,0x36017878
   1400388d9:	js     0x140038953
   1400388db:	add    DWORD PTR [rdi],esi
   1400388dd:	js     0x140038957
   1400388df:	add    DWORD PTR [rax],edi
   1400388e1:	js     0x14003895b
   1400388e3:	add    DWORD PTR [rcx],edi
   1400388e5:	js     0x14003895f
   1400388e7:	add    DWORD PTR [rcx],esi
   1400388e9:	xor    BYTE PTR [rax+0x2],bh
   1400388ec:	xor    DWORD PTR [rcx],esi
   1400388ee:	js     0x1400388f2
   1400388f0:	xor    DWORD PTR [rdx],esi
   1400388f2:	js     0x1400388f6
   1400388f4:	xor    DWORD PTR [rbx],esi
   1400388f6:	js     0x1400388fa
   1400388f8:	xor    DWORD PTR [rax+rdi*2],esi
   1400388fb:	add    dh,BYTE PTR [rcx]
   1400388fd:	xor    eax,0x36310278
   140038902:	js     0x140038906
   140038904:	xor    DWORD PTR [rdi],esi
   140038906:	js     0x14003890a
   140038908:	xor    DWORD PTR [rax],edi
   14003890a:	js     0x14003890e
   14003890c:	xor    DWORD PTR [rcx],edi
   14003890e:	js     0x140038912
   140038910:	xor    dh,BYTE PTR [rax]
   140038912:	js     0x140038916
   140038914:	xor    dh,BYTE PTR [rcx]
   140038916:	js     0x14003891a
   140038918:	xor    dh,BYTE PTR [rdx]
   14003891a:	js     0x14003891e
   14003891c:	xor    dh,BYTE PTR [rbx]
   14003891e:	js     0x140038922
   140038920:	xor    dh,BYTE PTR [rax+rdi*2]
   140038923:	add    dh,BYTE PTR [rdx]
   140038925:	xor    eax,0x36320278
   14003892a:	js     0x14003892e
   14003892c:	xor    dh,BYTE PTR [rdi]
   14003892e:	js     0x140038932
   140038930:	xor    bh,BYTE PTR [rax]
   140038932:	js     0x140038936
   140038934:	xor    bh,BYTE PTR [rcx]
   140038936:	js     0x14003893a
   140038938:	xor    esi,DWORD PTR [rax]
   14003893a:	js     0x14003893e
   14003893c:	xor    esi,DWORD PTR [rcx]
   14003893e:	js     0x140038942
   140038940:	xor    esi,DWORD PTR [rdx]
   140038942:	js     0x140038946
   140038944:	xor    esi,DWORD PTR [rbx]
   140038946:	js     0x14003894a
   140038948:	xor    esi,DWORD PTR [rax+rdi*2]
   14003894b:	add    dh,BYTE PTR [rbx]
   14003894d:	xor    eax,0x36330278
   140038952:	js     0x140038956
   140038954:	xor    esi,DWORD PTR [rdi]
   140038956:	js     0x14003895a
   140038958:	xor    edi,DWORD PTR [rax]
   14003895a:	js     0x14003895e
   14003895c:	xor    edi,DWORD PTR [rcx]
   14003895e:	js     0x140038962
   140038960:	xor    al,0x30
   140038962:	js     0x140038966
   140038964:	xor    al,0x31
   140038966:	js     0x14003896a
   140038968:	xor    al,0x32
   14003896a:	js     0x14003896e
   14003896c:	xor    al,0x33
   14003896e:	js     0x140038972
   140038970:	xor    al,0x34
   140038972:	js     0x140038976
   140038974:	xor    al,0x35
   140038976:	js     0x14003897a
   140038978:	xor    al,0x36
   14003897a:	js     0x14003897e
   14003897c:	xor    al,0x37
   14003897e:	js     0x140038982
   140038980:	xor    al,0x38
   140038982:	js     0x140038986
   140038984:	xor    al,0x39
   140038986:	js     0x14003898a
   140038988:	xor    eax,0x35027830
   14003898d:	xor    DWORD PTR [rax+0x2],edi
   140038990:	xor    eax,0x35027832
   140038995:	xor    edi,DWORD PTR [rax+0x2]
   140038998:	xor    eax,0x35027834
   14003899d:	xor    eax,0x36350278
   1400389a2:	js     0x1400389a6
   1400389a4:	xor    eax,0x35027837
   1400389a9:	cmp    BYTE PTR [rax+0x2],bh
   1400389ac:	xor    eax,0x36027839
   1400389b1:	xor    BYTE PTR [rax+0x2],bh
   1400389b4:	xor    DWORD PTR ss:[rax+0x2],edi
   1400389b8:	xor    bh,BYTE PTR ss:[rax+0x2]
   1400389bc:	xor    edi,DWORD PTR ss:[rax+0x2]
   1400389c0:	ss xor al,0x78
   1400389c3:	add    dh,BYTE PTR [rsi]
   1400389c5:	xor    eax,0x36360278
   1400389ca:	js     0x1400389ce
   1400389cc:	ss (bad) 
   1400389ce:	js     0x1400389d2
   1400389d0:	cmp    BYTE PTR ss:[rax+0x2],bh
   1400389d4:	cmp    DWORD PTR ss:[rax+0x2],edi
   1400389d8:	(bad)  
   1400389d9:	xor    BYTE PTR [rax+0x2],bh
   1400389dc:	(bad)  
   1400389dd:	xor    DWORD PTR [rax+0x2],edi
   1400389e0:	(bad)  
   1400389e1:	xor    bh,BYTE PTR [rax+0x2]
   1400389e4:	(bad)  
   1400389e5:	xor    edi,DWORD PTR [rax+0x2]
   1400389e8:	(bad)  
   1400389e9:	xor    al,0x78
   1400389eb:	add    dh,BYTE PTR [rdi]
   1400389ed:	xor    eax,0x36370278
   1400389f2:	js     0x1400389f6
   1400389f4:	(bad)  
   1400389f5:	(bad)  
   1400389f6:	js     0x1400389fa
   1400389f8:	(bad)  
   1400389f9:	cmp    BYTE PTR [rax+0x2],bh
   1400389fc:	(bad)  
   1400389fd:	cmp    DWORD PTR [rax+0x2],edi
   140038a00:	cmp    BYTE PTR [rax],dh
   140038a02:	js     0x140038a06
   140038a04:	cmp    BYTE PTR [rcx],dh
   140038a06:	js     0x140038a0a
   140038a08:	cmp    BYTE PTR [rdx],dh
   140038a0a:	js     0x140038a0e
   140038a0c:	cmp    BYTE PTR [rbx],dh
   140038a0e:	js     0x140038a12
   140038a10:	cmp    BYTE PTR [rax+rdi*2],dh
   140038a13:	add    bh,BYTE PTR [rax]
   140038a15:	xor    eax,0x36380278
   140038a1a:	js     0x140038a1e
   140038a1c:	cmp    BYTE PTR [rdi],dh
   140038a1e:	js     0x140038a22
   140038a20:	cmp    BYTE PTR [rax],bh
   140038a22:	js     0x140038a26
   140038a24:	cmp    BYTE PTR [rcx],bh
   140038a26:	js     0x140038a2a
   140038a28:	cmp    DWORD PTR [rax],esi
   140038a2a:	js     0x140038a2e
   140038a2c:	cmp    DWORD PTR [rcx],esi
   140038a2e:	js     0x140038a32
   140038a30:	cmp    DWORD PTR [rdx],esi
   140038a32:	js     0x140038a36
   140038a34:	cmp    DWORD PTR [rbx],esi
   140038a36:	js     0x140038a3a
   140038a38:	cmp    DWORD PTR [rax+rdi*2],esi
   140038a3b:	add    bh,BYTE PTR [rcx]
   140038a3d:	xor    eax,0x36390278
   140038a42:	js     0x140038a46
   140038a44:	cmp    DWORD PTR [rdi],esi
   140038a46:	js     0x140038a4a
   140038a48:	cmp    DWORD PTR [rax],edi
   140038a4a:	js     0x140038a4e
   140038a4c:	cmp    DWORD PTR [rcx],edi
   140038a4e:	js     0x140038a52
   140038a50:	xor    DWORD PTR [rax],esi
   140038a52:	xor    BYTE PTR [rbx],al
   140038a54:	xor    DWORD PTR [rax],esi
   140038a56:	xor    DWORD PTR [rbx],eax
   140038a58:	xor    DWORD PTR [rax],esi
   140038a5a:	xor    al,BYTE PTR [rbx]
   140038a5c:	xor    DWORD PTR [rax],esi
   140038a5e:	xor    eax,DWORD PTR [rbx]
   140038a60:	xor    DWORD PTR [rax],esi
   140038a62:	xor    al,0x3
   140038a64:	xor    DWORD PTR [rax],esi
   140038a66:	xor    eax,0x36303103
   140038a6b:	add    esi,DWORD PTR [rcx]
   140038a6d:	xor    BYTE PTR [rdi],dh
   140038a6f:	add    esi,DWORD PTR [rcx]
   140038a71:	xor    BYTE PTR [rax],bh
   140038a73:	add    esi,DWORD PTR [rcx]
   140038a75:	xor    BYTE PTR [rcx],bh
   140038a77:	add    esi,DWORD PTR [rcx]
   140038a79:	xor    DWORD PTR [rax],esi
   140038a7b:	add    esi,DWORD PTR [rcx]
   140038a7d:	xor    DWORD PTR [rcx],esi
   140038a7f:	add    esi,DWORD PTR [rcx]
   140038a81:	xor    DWORD PTR [rdx],esi
   140038a83:	add    esi,DWORD PTR [rcx]
   140038a85:	xor    DWORD PTR [rbx],esi
   140038a87:	add    esi,DWORD PTR [rcx]
   140038a89:	xor    DWORD PTR [rbx+rax*1],esi
   140038a8c:	xor    DWORD PTR [rcx],esi
   140038a8e:	xor    eax,0x36313103
   140038a93:	add    esi,DWORD PTR [rcx]
   140038a95:	xor    DWORD PTR [rdi],esi
   140038a97:	add    esi,DWORD PTR [rcx]
   140038a99:	xor    DWORD PTR [rax],edi
   140038a9b:	add    esi,DWORD PTR [rcx]
   140038a9d:	xor    DWORD PTR [rcx],edi
   140038a9f:	add    esi,DWORD PTR [rcx]
   140038aa1:	xor    dh,BYTE PTR [rax]
   140038aa3:	add    esi,DWORD PTR [rcx]
   140038aa5:	xor    dh,BYTE PTR [rcx]
   140038aa7:	add    esi,DWORD PTR [rcx]
   140038aa9:	xor    dh,BYTE PTR [rdx]
   140038aab:	add    esi,DWORD PTR [rcx]
   140038aad:	xor    dh,BYTE PTR [rbx]
   140038aaf:	add    esi,DWORD PTR [rcx]
   140038ab1:	xor    dh,BYTE PTR [rbx+rax*1]
   140038ab4:	xor    DWORD PTR [rdx],esi
   140038ab6:	xor    eax,0x36323103
   140038abb:	add    esi,DWORD PTR [rcx]
   140038abd:	xor    dh,BYTE PTR [rdi]
   140038abf:	add    esi,DWORD PTR [rcx]
   140038ac1:	xor    bh,BYTE PTR [rax]
   140038ac3:	add    esi,DWORD PTR [rcx]
   140038ac5:	xor    bh,BYTE PTR [rcx]
   140038ac7:	add    esi,DWORD PTR [rcx]
   140038ac9:	xor    esi,DWORD PTR [rax]
   140038acb:	add    esi,DWORD PTR [rcx]
   140038acd:	xor    esi,DWORD PTR [rcx]
   140038acf:	add    esi,DWORD PTR [rcx]
   140038ad1:	xor    esi,DWORD PTR [rdx]
   140038ad3:	add    esi,DWORD PTR [rcx]
   140038ad5:	xor    esi,DWORD PTR [rbx]
   140038ad7:	add    esi,DWORD PTR [rcx]
   140038ad9:	xor    esi,DWORD PTR [rbx+rax*1]
   140038adc:	xor    DWORD PTR [rbx],esi
   140038ade:	xor    eax,0x36333103
   140038ae3:	add    esi,DWORD PTR [rcx]
   140038ae5:	xor    esi,DWORD PTR [rdi]
   140038ae7:	add    esi,DWORD PTR [rcx]
   140038ae9:	xor    edi,DWORD PTR [rax]
   140038aeb:	add    esi,DWORD PTR [rcx]
   140038aed:	xor    edi,DWORD PTR [rcx]
   140038aef:	add    esi,DWORD PTR [rcx]
   140038af1:	xor    al,0x30
   140038af3:	add    esi,DWORD PTR [rcx]
   140038af5:	xor    al,0x31
   140038af7:	add    esi,DWORD PTR [rcx]
   140038af9:	xor    al,0x32
   140038afb:	add    esi,DWORD PTR [rcx]
   140038afd:	xor    al,0x33
   140038aff:	add    esi,DWORD PTR [rcx]
   140038b01:	xor    al,0x34
   140038b03:	add    esi,DWORD PTR [rcx]
   140038b05:	xor    al,0x35
   140038b07:	add    esi,DWORD PTR [rcx]
   140038b09:	xor    al,0x36
   140038b0b:	add    esi,DWORD PTR [rcx]
   140038b0d:	xor    al,0x37
   140038b0f:	add    esi,DWORD PTR [rcx]
   140038b11:	xor    al,0x38
   140038b13:	add    esi,DWORD PTR [rcx]
   140038b15:	xor    al,0x39
   140038b17:	add    esi,DWORD PTR [rcx]
   140038b19:	xor    eax,0x35310330
   140038b1e:	xor    DWORD PTR [rbx],eax
   140038b20:	xor    DWORD PTR [rip+0x35310332],esi        # 0x175348e58
   140038b26:	xor    eax,DWORD PTR [rbx]
   140038b28:	xor    DWORD PTR [rip+0x35310334],esi        # 0x175348e62
   140038b2e:	xor    eax,0x36353103
   140038b33:	add    esi,DWORD PTR [rcx]
   140038b35:	xor    eax,0x35310337
   140038b3a:	cmp    BYTE PTR [rbx],al
   140038b3c:	xor    DWORD PTR [rip+0x36310339],esi        # 0x176348e7b
   140038b42:	xor    BYTE PTR [rbx],al
   140038b44:	xor    DWORD PTR [rsi],esi
   140038b46:	xor    DWORD PTR [rbx],eax
   140038b48:	xor    DWORD PTR [rsi],esi
   140038b4a:	xor    al,BYTE PTR [rbx]
   140038b4c:	xor    DWORD PTR [rsi],esi
   140038b4e:	xor    eax,DWORD PTR [rbx]
   140038b50:	xor    DWORD PTR [rsi],esi
   140038b52:	xor    al,0x3
   140038b54:	xor    DWORD PTR [rsi],esi
   140038b56:	xor    eax,0x36363103
   140038b5b:	add    esi,DWORD PTR [rcx]
   140038b5d:	ss (bad) 
   140038b5f:	add    esi,DWORD PTR [rcx]
   140038b61:	cmp    BYTE PTR ss:[rbx],al
   140038b64:	xor    DWORD PTR [rsi],esi
   140038b66:	cmp    DWORD PTR [rbx],eax
   140038b68:	xor    DWORD PTR [rdi],esi
   140038b6a:	xor    BYTE PTR [rbx],al
   140038b6c:	xor    DWORD PTR [rdi],esi
   140038b6e:	xor    DWORD PTR [rbx],eax
   140038b70:	xor    DWORD PTR [rdi],esi
   140038b72:	xor    al,BYTE PTR [rbx]
   140038b74:	xor    DWORD PTR [rdi],esi
   140038b76:	xor    eax,DWORD PTR [rbx]
   140038b78:	xor    DWORD PTR [rdi],esi
   140038b7a:	xor    al,0x3
   140038b7c:	xor    DWORD PTR [rdi],esi
   140038b7e:	xor    eax,0x36373103
   140038b83:	add    esi,DWORD PTR [rcx]
   140038b85:	(bad)  
   140038b86:	(bad)  
   140038b87:	add    esi,DWORD PTR [rcx]
   140038b89:	(bad)  
   140038b8a:	cmp    BYTE PTR [rbx],al
   140038b8c:	xor    DWORD PTR [rdi],esi
   140038b8e:	cmp    DWORD PTR [rbx],eax
   140038b90:	xor    DWORD PTR [rax],edi
   140038b92:	xor    BYTE PTR [rbx],al
   140038b94:	xor    DWORD PTR [rax],edi
   140038b96:	xor    DWORD PTR [rbx],eax
   140038b98:	xor    DWORD PTR [rax],edi
   140038b9a:	xor    al,BYTE PTR [rbx]
   140038b9c:	xor    DWORD PTR [rax],edi
   140038b9e:	xor    eax,DWORD PTR [rbx]
   140038ba0:	xor    DWORD PTR [rax],edi
   140038ba2:	xor    al,0x3
   140038ba4:	xor    DWORD PTR [rax],edi
   140038ba6:	xor    eax,0x36383103
   140038bab:	add    esi,DWORD PTR [rcx]
   140038bad:	cmp    BYTE PTR [rdi],dh
   140038baf:	add    esi,DWORD PTR [rcx]
   140038bb1:	cmp    BYTE PTR [rax],bh
   140038bb3:	add    esi,DWORD PTR [rcx]
   140038bb5:	cmp    BYTE PTR [rcx],bh
   140038bb7:	add    esi,DWORD PTR [rcx]
   140038bb9:	cmp    DWORD PTR [rax],esi
   140038bbb:	add    esi,DWORD PTR [rcx]
   140038bbd:	cmp    DWORD PTR [rcx],esi
   140038bbf:	add    esi,DWORD PTR [rcx]
   140038bc1:	cmp    DWORD PTR [rdx],esi
   140038bc3:	add    esi,DWORD PTR [rcx]
   140038bc5:	cmp    DWORD PTR [rbx],esi
   140038bc7:	add    esi,DWORD PTR [rcx]
   140038bc9:	cmp    DWORD PTR [rbx+rax*1],esi
   140038bcc:	xor    DWORD PTR [rcx],edi
   140038bce:	xor    eax,0x36393103
   140038bd3:	add    esi,DWORD PTR [rcx]
   140038bd5:	cmp    DWORD PTR [rdi],esi
   140038bd7:	add    esi,DWORD PTR [rcx]
   140038bd9:	cmp    DWORD PTR [rax],edi
   140038bdb:	add    esi,DWORD PTR [rcx]
   140038bdd:	cmp    DWORD PTR [rcx],edi
   140038bdf:	add    esi,DWORD PTR [rdx]
   140038be1:	xor    BYTE PTR [rax],dh
   140038be3:	add    esi,DWORD PTR [rdx]
   140038be5:	xor    BYTE PTR [rcx],dh
   140038be7:	add    esi,DWORD PTR [rdx]
   140038be9:	xor    BYTE PTR [rdx],dh
   140038beb:	add    esi,DWORD PTR [rdx]
   140038bed:	xor    BYTE PTR [rbx],dh
   140038bef:	add    esi,DWORD PTR [rdx]
   140038bf1:	xor    BYTE PTR [rbx+rax*1],dh
   140038bf4:	xor    dh,BYTE PTR [rax]
   140038bf6:	xor    eax,0x36303203
   140038bfb:	add    esi,DWORD PTR [rdx]
   140038bfd:	xor    BYTE PTR [rdi],dh
   140038bff:	add    esi,DWORD PTR [rdx]
   140038c01:	xor    BYTE PTR [rax],bh
   140038c03:	add    esi,DWORD PTR [rdx]
   140038c05:	xor    BYTE PTR [rcx],bh
   140038c07:	add    esi,DWORD PTR [rdx]
   140038c09:	xor    DWORD PTR [rax],esi
   140038c0b:	add    esi,DWORD PTR [rdx]
   140038c0d:	xor    DWORD PTR [rcx],esi
   140038c0f:	add    esi,DWORD PTR [rdx]
   140038c11:	xor    DWORD PTR [rdx],esi
   140038c13:	add    esi,DWORD PTR [rdx]
   140038c15:	xor    DWORD PTR [rbx],esi
   140038c17:	add    esi,DWORD PTR [rdx]
   140038c19:	xor    DWORD PTR [rbx+rax*1],esi
   140038c1c:	xor    dh,BYTE PTR [rcx]
   140038c1e:	xor    eax,0x36313203
   140038c23:	add    esi,DWORD PTR [rdx]
   140038c25:	xor    DWORD PTR [rdi],esi
   140038c27:	add    esi,DWORD PTR [rdx]
   140038c29:	xor    DWORD PTR [rax],edi
   140038c2b:	add    esi,DWORD PTR [rdx]
   140038c2d:	xor    DWORD PTR [rcx],edi
   140038c2f:	add    esi,DWORD PTR [rdx]
   140038c31:	xor    dh,BYTE PTR [rax]
   140038c33:	add    esi,DWORD PTR [rdx]
   140038c35:	xor    dh,BYTE PTR [rcx]
   140038c37:	add    esi,DWORD PTR [rdx]
   140038c39:	xor    dh,BYTE PTR [rdx]
   140038c3b:	add    esi,DWORD PTR [rdx]
   140038c3d:	xor    dh,BYTE PTR [rbx]
   140038c3f:	add    esi,DWORD PTR [rdx]
   140038c41:	xor    dh,BYTE PTR [rbx+rax*1]
   140038c44:	xor    dh,BYTE PTR [rdx]
   140038c46:	xor    eax,0x36323203
   140038c4b:	add    esi,DWORD PTR [rdx]
   140038c4d:	xor    dh,BYTE PTR [rdi]
   140038c4f:	add    esi,DWORD PTR [rdx]
   140038c51:	xor    bh,BYTE PTR [rax]
   140038c53:	add    esi,DWORD PTR [rdx]
   140038c55:	xor    bh,BYTE PTR [rcx]
   140038c57:	add    esi,DWORD PTR [rdx]
   140038c59:	xor    esi,DWORD PTR [rax]
   140038c5b:	add    esi,DWORD PTR [rdx]
   140038c5d:	xor    esi,DWORD PTR [rcx]
   140038c5f:	add    esi,DWORD PTR [rdx]
   140038c61:	xor    esi,DWORD PTR [rdx]
   140038c63:	add    esi,DWORD PTR [rdx]
   140038c65:	xor    esi,DWORD PTR [rbx]
   140038c67:	add    esi,DWORD PTR [rdx]
   140038c69:	xor    esi,DWORD PTR [rbx+rax*1]
   140038c6c:	xor    dh,BYTE PTR [rbx]
   140038c6e:	xor    eax,0x36333203
   140038c73:	add    esi,DWORD PTR [rdx]
   140038c75:	xor    esi,DWORD PTR [rdi]
   140038c77:	add    esi,DWORD PTR [rdx]
   140038c79:	xor    edi,DWORD PTR [rax]
   140038c7b:	add    esi,DWORD PTR [rdx]
   140038c7d:	xor    edi,DWORD PTR [rcx]
   140038c7f:	add    esi,DWORD PTR [rdx]
   140038c81:	xor    al,0x30
   140038c83:	add    esi,DWORD PTR [rdx]
   140038c85:	xor    al,0x31
   140038c87:	add    esi,DWORD PTR [rdx]
   140038c89:	xor    al,0x32
   140038c8b:	add    esi,DWORD PTR [rdx]
   140038c8d:	xor    al,0x33
   140038c8f:	add    esi,DWORD PTR [rdx]
   140038c91:	xor    al,0x34
   140038c93:	add    esi,DWORD PTR [rdx]
   140038c95:	xor    al,0x35
   140038c97:	add    esi,DWORD PTR [rdx]
   140038c99:	xor    al,0x36
   140038c9b:	add    esi,DWORD PTR [rdx]
   140038c9d:	xor    al,0x37
   140038c9f:	add    esi,DWORD PTR [rdx]
   140038ca1:	xor    al,0x38
   140038ca3:	add    esi,DWORD PTR [rdx]
   140038ca5:	xor    al,0x39
   140038ca7:	add    esi,DWORD PTR [rdx]
   140038ca9:	xor    eax,0x35320330
   140038cae:	xor    DWORD PTR [rbx],eax
   140038cb0:	xor    dh,BYTE PTR [rip+0x35320332]        # 0x175358fe8
   140038cb6:	xor    eax,DWORD PTR [rbx]
   140038cb8:	xor    dh,BYTE PTR [rip+0x35320334]        # 0x175358ff2
   140038cbe:	xor    eax,0x41004703
   140038cc3:	add    BYTE PTR [rax+0x0],dl
   140038cc6:	add    BYTE PTR [r15+0x0],bl
   140038cca:	add    BYTE PTR [r14+0x0],r9b
   140038cce:	rex.RXB add BYTE PTR [r8],r8b
	...
   140038cdd:	add    BYTE PTR [rax],al
   140038cdf:	add    BYTE PTR [rax],ah
   140038ce1:	add    BYTE PTR [rdi+0x0],al
   140038ce4:	add    BYTE PTR [r8+0x0],dl
   140038ce8:	add    BYTE PTR [r15+0x0],bl
   140038cec:	jb     0x140038cee
   140038cee:	jae    0x140038cf0
   140038cf0:	add    BYTE PTR [r10+0x0],r14b
   140038cf4:	jb     0x140038cf6
   140038cf6:	outs   dx,DWORD PTR ds:[rsi]
   140038cf7:	add    BYTE PTR [rdx+0x0],dh
   140038cfa:	and    BYTE PTR [rax],al
   140038cfc:	rex.RXB add BYTE PTR [r9+0x0],r8b
   140038d00:	push   rax
   140038d01:	add    BYTE PTR [rcx+0x0],al
   140038d04:	pop    rdi
   140038d05:	add    BYTE PTR [rdx+0x0],dh
   140038d08:	jae    0x140038d0a
   140038d0a:	push   rdi
   140038d0b:	add    BYTE PTR [rcx+0x0],ah
   140038d0e:	jb     0x140038d10
   140038d10:	outs   dx,BYTE PTR ds:[rsi]
   140038d11:	add    BYTE PTR [rcx+0x0],ch
   140038d14:	outs   dx,BYTE PTR ds:[rsi]
   140038d15:	add    BYTE PTR [rdi+0x0],ah
   140038d18:	and    BYTE PTR [rax],al
   140038d1a:	rex.RXB add BYTE PTR [r9+0x0],r8b
   140038d1e:	push   rax
   140038d1f:	add    BYTE PTR [rcx+0x0],al
   140038d22:	pop    rdi
   140038d23:	add    BYTE PTR [rdx+0x0],dh
   140038d26:	jae    0x140038d28
   140038d28:	push   rsp
   140038d29:	add    BYTE PTR [rdx+0x0],dh
   140038d2c:	(bad)  
   140038d2d:	add    BYTE PTR [rbx+0x0],ah
   140038d30:	add    BYTE PTR gs:[rax],al
	...
   140038d3f:	add    BYTE PTR [rax],ah
   140038d41:	add    BYTE PTR [rsi+0x0],cl
   140038d44:	rex.WB add BYTE PTR [r11+0x0],dl
   140038d48:	pop    rdi
   140038d49:	add    BYTE PTR [rdx+0x0],dh
   140038d4c:	jae    0x140038d4e
   140038d4e:	add    BYTE PTR [r10+0x0],r14b
   140038d52:	jb     0x140038d54
   140038d54:	outs   dx,DWORD PTR ds:[rsi]
   140038d55:	add    BYTE PTR [rdx+0x0],dh
   140038d58:	and    BYTE PTR [rax],al
   140038d5a:	rex.WRX add BYTE PTR [rcx+0x0],r9b
   140038d5e:	push   rbx
   140038d5f:	add    BYTE PTR [rdi+0x0],bl
   140038d62:	jb     0x140038d64
   140038d64:	jae    0x140038d66
   140038d66:	push   rdi
   140038d67:	add    BYTE PTR [rcx+0x0],ah
   140038d6a:	jb     0x140038d6c
   140038d6c:	outs   dx,BYTE PTR ds:[rsi]
   140038d6d:	add    BYTE PTR [rcx+0x0],ch
   140038d70:	outs   dx,BYTE PTR ds:[rsi]
   140038d71:	add    BYTE PTR [rdi+0x0],ah
   140038d74:	and    BYTE PTR [rax],al
   140038d76:	rex.WRX add BYTE PTR [rcx+0x0],r9b
   140038d7a:	push   rbx
   140038d7b:	add    BYTE PTR [rdi+0x0],bl
   140038d7e:	jb     0x140038d80
   140038d80:	jae    0x140038d82
   140038d82:	push   rsp
   140038d83:	add    BYTE PTR [rdx+0x0],dh
   140038d86:	(bad)  
   140038d87:	add    BYTE PTR [rbx+0x0],ah
   140038d8a:	add    BYTE PTR gs:[rax],ah
   140038d8d:	add    BYTE PTR [rsi+0x0],cl
   140038d90:	rex.WB add BYTE PTR [r11+0x0],dl
   140038d94:	pop    rdi
   140038d95:	add    BYTE PTR [rdx+0x0],dh
   140038d98:	jae    0x140038d9a
   140038d9a:	rex.RX add BYTE PTR [rbp+0x0],r14b
   140038d9e:	outs   dx,BYTE PTR ds:[rsi]
   140038d9f:	add    BYTE PTR [rbx+0x0],ah
   140038da2:	and    BYTE PTR [rax],al
   140038da4:	rex.WRX add BYTE PTR [rcx+0x0],r9b
   140038da8:	push   rbx
   140038da9:	add    BYTE PTR [rdi+0x0],bl
   140038dac:	jb     0x140038dae
   140038dae:	jae    0x140038db0
   140038db0:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   140038db4:	imul   eax,DWORD PTR [rax],0x650073
   140038dba:	add    BYTE PTR [rax],al
   140038dbc:	rex.WRX
   140038dbd:	rex.WB push r11
   140038dbf:	add    BYTE PTR [rbp+0x14],bl
   140038dc2:	push   rsi
   140038dc3:	lock fs scas al,BYTE PTR es:[rdi]
   140038dc6:	pop    rsp
   140038dc7:	outs   dx,BYTE PTR ds:[rsi]
   140038dc8:	fdiv   st(3),st
   140038dca:	mov    ebx,DWORD PTR [rdx]
   140038dcc:	(bad)  
   140038dcd:	loope  0x140038e01
   140038dcf:	mov    bh,0x5e
   140038dd1:	(bad)  
   140038dd2:	(bad)  
   140038dd3:	rex.WXB pop r10
   140038dd5:	(bad)  
   140038dd6:	enter  0xb04e,0xa3
   140038dda:	test   eax,0x661cc3ef
   140038ddf:	addr32 jns 0x140038e0d
   140038de2:	rex.WX leave 
   140038de4:	(bad)  
   140038de5:	rex.R popf 
   140038de7:	rex.RX test DWORD PTR [rdx],r9d
   140038dea:	outs   dx,DWORD PTR ds:[rsi]
   140038deb:	mov    ah,0x52
   140038ded:	xchg   ebx,eax
   140038dee:	(bad)  
   140038def:	js     0x140038e35
   140038df1:	xor    ebp,DWORD PTR [rsi+0x6befe2b4]
   140038df7:	push   rsp
   140038df8:	rex.XB
   140038df9:	ss cs out 0xc9,al
   140038dfd:	in     al,0x51
   140038dff:	adc    eax,0x41454c43
   140038e04:	rex.WRX push rbp
   140038e06:	push   rax
   140038e07:	pop    rdi
   140038e08:	push   rdi
   140038e09:	rex.B
   140038e0a:	rex.WB push r12
   140038e0c:	pop    rdi
   140038e0d:	push   rsp
   140038e0e:	rex.WB
   140038e0f:	rex.WRB
   140038e10:	rex.RB
   140038e11:	rex.WRXB push r13
   140038e13:	push   rsp
   140038e14:	add    BYTE PTR [rax],al
   140038e16:	add    BYTE PTR [rax],al
   140038e18:	rex.WXB
   140038e19:	rex.RB push r10
   140038e1b:	rex.WRX
   140038e1c:	rex.RB
   140038e1d:	xor    r14,QWORD PTR [rdx]
   140038e20:	cs rex.R
   140038e22:	rex.WR
   140038e23:	rex.WR add BYTE PTR [rax],r8b
   140038e26:	add    BYTE PTR [rax],al
   140038e28:	rex.W
   140038e29:	gs (bad) 
   140038e2b:	jo     0x140038e80
   140038e2d:	gs je  0x140038e79
   140038e30:	outs   dx,BYTE PTR ds:[rsi]
   140038e31:	outs   dx,WORD PTR ds:[rsi]
   140038e33:	jb     0x140038ea2
   140038e35:	(bad)  
   140038e36:	je     0x140038ea1
   140038e38:	outs   dx,DWORD PTR ds:[rsi]
   140038e39:	outs   dx,BYTE PTR ds:[rsi]
   140038e3a:	add    BYTE PTR [rax],al
   140038e3c:	add    BYTE PTR [rax],al
   140038e3e:	add    BYTE PTR [rax],al
   140038e40:	rex.RB push r10
   140038e42:	push   rdx
   140038e43:	rex.WRXB push r10
   140038e45:	and    BYTE PTR [rcx],ah
   140038e47:	and    DWORD PTR [rcx],esp
   140038e49:	and    BYTE PTR [rdi+0x65],al
   140038e4c:	je     0x140038ea4
   140038e4e:	gs jb  0x140038ec4
   140038e51:	imul   ebp,DWORD PTR [rdi+0x6e],0x66207845
   140038e58:	(bad)  
   140038e59:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x4500000a
   140038e61:	push   rdx
   140038e62:	push   rdx
   140038e63:	rex.WRXB push r10
   140038e65:	and    BYTE PTR [rcx],ah
   140038e67:	and    DWORD PTR [rcx],esp
   140038e69:	and    BYTE PTR [rdi+0x65],al
   140038e6c:	je     0x140038ebe
   140038e6e:	jb     0x140038edf
   140038e70:	movsxd eax,DWORD PTR [rcx+0x64]
   140038e73:	fs jb  0x140038edb
   140038e76:	jae    0x140038eeb
   140038e78:	sub    BYTE PTR [rax+0x65],cl
   140038e7b:	(bad)  
   140038e7c:	jo     0x140038ed1
   140038e7e:	gs je  0x140038eca
   140038e81:	outs   dx,BYTE PTR ds:[rsi]
   140038e82:	outs   dx,WORD PTR ds:[rsi]
   140038e84:	jb     0x140038ef3
   140038e86:	(bad)  
   140038e87:	je     0x140038ef2
   140038e89:	outs   dx,DWORD PTR ds:[rsi]
   140038e8a:	outs   dx,BYTE PTR ds:[rsi]
   140038e8b:	sub    DWORD PTR [rax],esp
   140038e8d:	data16 (bad) 
   140038e8f:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0xa
   140038e97:	add    BYTE PTR [rbp+0x52],al
   140038e9a:	push   rdx
   140038e9b:	rex.WRXB push r10
   140038e9d:	and    BYTE PTR [rcx],ah
   140038e9f:	and    DWORD PTR [rcx],esp
   140038ea1:	and    BYTE PTR [rax+0x65],cl
   140038ea4:	(bad)  
   140038ea5:	jo     0x140038efa
   140038ea7:	gs je  0x140038ef3
   140038eaa:	outs   dx,BYTE PTR ds:[rsi]
   140038eab:	outs   dx,WORD PTR ds:[rsi]
   140038ead:	jb     0x140038f1c
   140038eaf:	(bad)  
   140038eb0:	je     0x140038f1b
   140038eb2:	outs   dx,DWORD PTR ds:[rsi]
   140038eb3:	outs   dx,BYTE PTR ds:[rsi]
   140038eb4:	sub    BYTE PTR [rbp+riz*2+0x72],dl
   140038eb8:	ins    DWORD PTR es:[rdi],dx
   140038eb9:	imul   ebp,DWORD PTR [rsi+0x61],0x6e6f6974
   140038ec0:	rex.WRXB outs dx,BYTE PTR ds:[rsi]
   140038ec2:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140038ec4:	jb     0x140038f38
   140038ec6:	jne    0x140038f38
   140038ec8:	je     0x140038f33
   140038eca:	outs   dx,DWORD PTR ds:[rsi]
   140038ecb:	outs   dx,BYTE PTR ds:[rsi]
   140038ecc:	sub    DWORD PTR [rdx],ecx
   140038ece:	add    BYTE PTR [rax],al
   140038ed0:	rex.RB push r10
   140038ed2:	push   rdx
   140038ed3:	rex.WRXB push r10
   140038ed5:	and    BYTE PTR [rcx],ah
   140038ed7:	and    DWORD PTR [rcx],esp
   140038ed9:	and    BYTE PTR [rax+0x65],cl
   140038edc:	(bad)  
   140038edd:	jo     0x140038f32
   140038edf:	gs je  0x140038f2b
   140038ee2:	outs   dx,BYTE PTR ds:[rsi]
   140038ee3:	outs   dx,WORD PTR ds:[rsi]
   140038ee5:	jb     0x140038f54
   140038ee7:	(bad)  
   140038ee8:	je     0x140038f53
   140038eea:	outs   dx,DWORD PTR ds:[rsi]
   140038eeb:	outs   dx,BYTE PTR ds:[rsi]
   140038eec:	and    BYTE PTR [rsi+0x61],ah
   140038eef:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   140038ef7:	jae    0x140038f5e
   140038ef9:	je     0x140038f1b
   140038efb:	jo     0x140038f6f
   140038efd:	outs   dx,DWORD PTR ds:[rsi]
   140038efe:	movsxd esp,DWORD PTR [rbp+0x73]
   140038f01:	jae    0x140038f23
   140038f03:	push   0x20706165
   140038f08:	je     0x140038f79
   140038f0a:	and    BYTE PTR [rsi+rax*2+0x48],cl
   140038f0e:	or     al,BYTE PTR [rax]
   140038f10:	(bad)  
   140038f11:	add    BYTE PTR [rax],al
   140038f13:	add    BYTE PTR [rip+0x7f000000],bh        # 0x1bf038f19
   140038f19:	add    BYTE PTR [rax],al
   140038f1b:	add    BYTE PTR [rcx],al
   140038f1d:	add    DWORD PTR [rax],eax
   140038f1f:	add    BYTE PTR [rcx],cl
   140038f21:	add    al,BYTE PTR [rax]
   140038f23:	add    BYTE PTR [rdi],al
   140038f25:	add    al,0x0
   140038f27:	add    BYTE PTR [rip+0x3000008],al        # 0x143038f35
   140038f2d:	adc    BYTE PTR [rax],al
   140038f2f:	add    bh,bh
   140038f31:	(bad)  
   140038f32:	add    BYTE PTR [rax],al
   140038f34:	std    
   140038f35:	(bad)  
   140038f36:	add    BYTE PTR [rax],al
   140038f38:	in     eax,dx
   140038f39:	jg     0x140038f3b
   140038f3b:	add    BYTE PTR [rcx],al
   140038f3d:	add    BYTE PTR [rcx],al
   140038f3f:	add    bh,bh
   140038f41:	inc    DWORD PTR [rcx]
   140038f43:	add    BYTE PTR [rdi-0x1],bl
   140038f46:	add    eax,DWORD PTR [rax]
   140038f48:	jb     0x140038ef6
   140038f4a:	mov    dh,0x63
   140038f4c:	repnz cmp dl,BYTE PTR [rdi+0x1c1bfc6a]
   140038f53:	jo     0x140038f3e
   140038f55:	sbb    eax,0x6f53225a
   140038f5a:	data16 je 0x140038fd4
   140038f5d:	(bad)  
   140038f5e:	jb     0x140038fc5
   140038f60:	pop    rsp
   140038f61:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   140038f69:	je     0x140038fc7
   140038f6b:	push   rdx
   140038f6c:	push   r12
   140038f6e:	pop    rsp
   140038f6f:	rex.WRX
   140038f70:	rex.WB push r11
   140038f72:	pop    rsp
   140038f73:	rex.R
   140038f74:	gs (bad) 
   140038f76:	jne    0x140038fdf
	...
   140038f80:	rex.B
   140038f81:	rex.XB push r12
   140038f83:	rex.WB push r14
   140038f85:	rex.RB pop r15
   140038f87:	push   rdx
   140038f88:	rex.RB
   140038f89:	rex.RXB
   140038f8a:	rex.WB push r11
   140038f8c:	push   rsp
   140038f8d:	push   rdx
   140038f8e:	push   r12
   140038f90:	rex.WB
   140038f91:	rex.WRXB
   140038f92:	rex.WRX pop rdi
   140038f94:	rex.W
   140038f95:	push   r11
   140038f97:	rex.W pop rdi
   140038f99:	push   rbx
   140038f9a:	rex.WB pop r10
   140038f9c:	add    BYTE PTR [r8],r8b
   140038f9f:	add    BYTE PTR [rcx+0x4c],al
   140038fa2:	rex.WR
   140038fa3:	rex.WRXB push r15
   140038fa5:	pop    rdi
   140038fa6:	rex.RB
   140038fa7:	rex.WRX push rsp
   140038fa9:	rex.RB push r10
   140038fab:	push   rax
   140038fac:	push   rdx
   140038fad:	rex.WB push r11
   140038faf:	rex.RB pop r15
   140038fb1:	rex.B
   140038fb2:	rex.R
   140038fb3:	rex.R pop rdi
   140038fb5:	rex.WB
   140038fb6:	rex.WRX pop rdi
   140038fb8:	push   rbx
   140038fb9:	push   rsp
   140038fba:	rex.B
   140038fbb:	rex.WRX
   140038fbc:	rex.R
   140038fbd:	rex.B
   140038fbe:	rex.WR
   140038fbf:	rex.WRXB
   140038fc0:	rex.WRX
   140038fc1:	rex.RB pop r15
   140038fc3:	rex.WRB
   140038fc4:	rex.WRXB
   140038fc5:	rex.R
   140038fc6:	add    BYTE PTR [r9+0x50],r8b
   140038fca:	push   rax
   140038fcb:	rex.RB
   140038fcc:	rex.WRX
   140038fcd:	rex.R pop rdi
   140038fcf:	rex.XB
   140038fd0:	rex.WRXB
   140038fd1:	rex.WRX push rsp
   140038fd3:	rex.WB
   140038fd4:	rex.WRX push rbp
   140038fd6:	push   r12
   140038fd8:	rex.WB
   140038fd9:	rex.WRXB
   140038fda:	rex.WRX pop rdi
   140038fdc:	rex.WR
   140038fdd:	rex.WB
   140038fde:	rex.WRX
   140038fdf:	rex.RB push r11
   140038fe1:	add    BYTE PTR [rax],al
   140038fe3:	add    BYTE PTR [rax],al
   140038fe5:	add    BYTE PTR [rax],al
   140038fe7:	add    BYTE PTR [rcx+0x50],al
   140038fea:	push   rax
   140038feb:	rex.WR
   140038fec:	rex.WB
   140038fed:	rex.B
   140038fee:	rex.WRX
   140038fef:	rex.XB
   140038ff0:	rex.RB pop r15
   140038ff2:	push   rsi
   140038ff3:	rex.WB
   140038ff4:	rex.RB push r15
   140038ff6:	add    BYTE PTR [rax],al
   140038ff8:	push   r11
   140038ffa:	push   rbx
   140038ffb:	rex.RB push r10
   140038ffd:	push   rsp
   140038ffe:	pop    rdi
   140038fff:	rex.WRX
   140039000:	rex.WRXB pop r15
   140039002:	rex.WR
   140039003:	rex.RB
   140039004:	rex.B
   140039005:	rex.WXB push r11
   140039007:	add    BYTE PTR [rcx+0x53],al
   14003900a:	push   rbx
   14003900b:	rex.RB push r10
   14003900d:	push   rsp
   14003900e:	pop    rdi
   14003900f:	rex.WRX
   140039010:	rex.WRXB pop r15
   140039012:	rex.WR
   140039013:	rex.RB
   140039014:	rex.RX push rsp
   140039016:	rex.WRXB push r14
   140039018:	rex.RB push r10
   14003901a:	push   rbx
   14003901b:	pop    rdi
   14003901c:	push   rax
   14003901d:	rex.RB push r10
   14003901f:	pop    rdi
   140039020:	rex.WRB
   140039021:	rex.WRXB
   140039022:	rex.R push rbp
   140039024:	rex.WR
   140039025:	add    BYTE PTR [r8],r8b
   140039028:	push   r11
   14003902a:	push   rbx
   14003902b:	rex.RB push r10
   14003902d:	push   rsp
   14003902e:	pop    rdi
   14003902f:	rex.WRXB
   140039030:	rex.WRX pop rdi
   140039032:	rex.RB push r14
   140039034:	rex.RB
   140039035:	rex.WRX push rsp
   140039037:	pop    rdi
   140039038:	xor    DWORD PTR [rax],eax
   14003903a:	add    BYTE PTR [rax],al
   14003903c:	add    BYTE PTR [rax],al
   14003903e:	add    BYTE PTR [rax],al
   140039040:	push   r11
   140039042:	push   rbx
   140039043:	rex.RB push r10
   140039045:	push   rsp
   140039046:	pop    rdi
   140039047:	rex.WRXB
   140039048:	rex.WRX pop rdi
   14003904a:	rex.RB push r14
   14003904c:	rex.RB
   14003904d:	rex.WRX push rsp
   14003904f:	pop    rdi
   140039050:	xor    al,BYTE PTR [rax]
   140039052:	add    BYTE PTR [rax],al
   140039054:	add    BYTE PTR [rax],al
   140039056:	add    BYTE PTR [rax],al
   140039058:	push   r11
   14003905a:	push   rbx
   14003905b:	rex.RB push r10
   14003905d:	push   rsp
   14003905e:	pop    rdi
   14003905f:	rex.WRXB
   140039060:	rex.WRX pop rdi
   140039062:	rex.RB push r14
   140039064:	rex.RB
   140039065:	rex.WRX push rsp
   140039067:	pop    rdi
   140039068:	xor    eax,DWORD PTR [rax]
   14003906a:	add    BYTE PTR [rax],al
   14003906c:	add    BYTE PTR [rax],al
   14003906e:	add    BYTE PTR [rax],al
   140039070:	push   r11
   140039072:	push   rbx
   140039073:	rex.RB push r10
   140039075:	push   rsp
   140039076:	pop    rdi
   140039077:	rex.WRXB
   140039078:	rex.WRX pop rdi
   14003907a:	rex.RB push r14
   14003907c:	rex.RB
   14003907d:	rex.WRX push rsp
   14003907f:	pop    rdi
   140039080:	xor    al,0x0
   140039082:	add    BYTE PTR [rax],al
   140039084:	add    BYTE PTR [rax],al
   140039086:	add    BYTE PTR [rax],al
   140039088:	push   r11
   14003908a:	push   rbx
   14003908b:	rex.RB push r10
   14003908d:	push   rsp
   14003908e:	pop    rdi
   14003908f:	rex.WRXB
   140039090:	rex.WRX pop rdi
   140039092:	rex.RB push r14
   140039094:	rex.RB
   140039095:	rex.WRX push rsp
   140039097:	pop    rdi
   140039098:	xor    eax,0x0
   14003909d:	add    BYTE PTR [rax],al
   14003909f:	add    BYTE PTR [rcx+0x53],al
   1400390a2:	push   rbx
   1400390a3:	rex.RB push r10
   1400390a5:	push   rsp
   1400390a6:	pop    rdi
   1400390a7:	rex.WRXB
   1400390a8:	rex.WRX pop rdi
   1400390aa:	rex.WRB
   1400390ab:	rex.WB pop r8
   1400390ad:	rex.RB push r10
   1400390af:	pop    rdi
   1400390b0:	push   rbx
   1400390b1:	rex.RB push r12
   1400390b3:	push   rbp
   1400390b4:	push   rax
   1400390b5:	add    BYTE PTR [rax],al
   1400390b7:	add    BYTE PTR [rcx+0x53],al
   1400390ba:	push   rbx
   1400390bb:	rex.RB push r10
   1400390bd:	push   rsp
   1400390be:	pop    rdi
   1400390bf:	rex.WRXB
   1400390c0:	rex.WRX pop rdi
   1400390c2:	rex.WRX
   1400390c3:	rex.WRXB pop r15
   1400390c5:	rex.RB push r10
   1400390c7:	push   rdx
   1400390c8:	rex.WRXB push r10
   1400390ca:	pop    rdi
   1400390cb:	push   rbx
   1400390cc:	push   rsp
   1400390cd:	push   rdx
   1400390ce:	rex.WB
   1400390cf:	rex.WRX
   1400390d0:	rex.RXB add BYTE PTR [r8],r8b
   1400390d3:	add    BYTE PTR [rax],al
   1400390d5:	add    BYTE PTR [rax],al
   1400390d7:	add    BYTE PTR [rcx+0x53],al
   1400390da:	push   rbx
   1400390db:	rex.RB push r10
   1400390dd:	push   rsp
   1400390de:	pop    rdi
   1400390df:	rex.WRXB
   1400390e0:	rex.WRX pop rdi
   1400390e2:	push   rsp
   1400390e3:	push   rdx
   1400390e4:	push   r14
   1400390e6:	rex.RB push r10
   1400390e8:	push   rbx
   1400390e9:	rex.RB pop r15
   1400390eb:	rex.XB
   1400390ec:	rex.WRXB
   1400390ed:	rex.WRX
   1400390ee:	rex.R
   1400390ef:	rex.WB push r12
   1400390f1:	rex.WB
   1400390f2:	rex.WRXB
   1400390f3:	rex.WRX add BYTE PTR [rax],r8b
   1400390f6:	add    BYTE PTR [rax],al
   1400390f8:	push   r12
   1400390fa:	rex.WR pop rdi
   1400390fc:	push   rsp
   1400390fd:	push   rdx
   1400390fe:	rex.B
   1400390ff:	rex.XB
   140039100:	rex.RB pop r15
   140039102:	rex.XB
   140039103:	push   r12
   140039105:	rex.RB
   140039106:	rex.RXB
   140039107:	rex.WRXB push r10
   140039109:	pop    rcx
   14003910a:	add    BYTE PTR [rax],al
   14003910c:	add    BYTE PTR [rax],al
   14003910e:	add    BYTE PTR [rax],al
   140039110:	push   r12
   140039112:	rex.WR pop rdi
   140039114:	push   rsp
   140039115:	push   rdx
   140039116:	rex.B
   140039117:	rex.XB
   140039118:	rex.RB pop r15
   14003911a:	rex.WR
   14003911b:	rex.RB push r14
   14003911d:	rex.RB
   14003911e:	rex.WR add BYTE PTR [rdx+0x45],r8b
   140039122:	push   rdx
   140039123:	pop    rdi
   140039124:	push   rax
   140039125:	push   r10
   140039127:	push   rbx
   140039128:	rex.RB push r10
   14003912a:	add    BYTE PTR [rax],al
   14003912c:	add    BYTE PTR [rax],al
   14003912e:	add    BYTE PTR [rax],al
   140039130:	rex.X push rdx
   140039132:	rex.RB
   140039133:	rex.B
   140039134:	rex.WXB pop r15
   140039136:	rex.WRXB
   140039137:	rex.WRX pop rdi
   140039139:	push   r11
   14003913b:	push   rbx
   14003913c:	rex.RB push r10
   14003913e:	push   rsp
   14003913f:	rex.WB
   140039140:	rex.WRXB
   140039141:	rex.WRX add BYTE PTR [rax],r8b
   140039144:	add    BYTE PTR [rax],al
   140039146:	add    BYTE PTR [rax],al
   140039148:	rex.X push rdx
   14003914a:	rex.RB
   14003914b:	rex.B
   14003914c:	rex.WXB pop r15
   14003914e:	rex.WRXB
   14003914f:	rex.WRX pop rdi
   140039151:	push   r11
   140039153:	push   rbx
   140039154:	push   rbp
   140039155:	rex.WRB push r8
   140039157:	push   rsp
   140039158:	rex.WB
   140039159:	rex.WRXB
   14003915a:	rex.WRX add BYTE PTR [rax],r8b
   14003915d:	add    BYTE PTR [rax],al
   14003915f:	add    BYTE PTR [rbx+0x45],al
   140039162:	rex.WRX push rsp
   140039164:	push   rdx
   140039165:	rex.WRXB pop r15
   140039167:	push   rsi
   140039168:	rex.WB
   140039169:	rex.RB push r15
   14003916b:	add    BYTE PTR [rax],al
   14003916d:	add    BYTE PTR [rax],al
   14003916f:	add    BYTE PTR [rbx+0x4c],al
   140039172:	rex.WRX push rsp
   140039174:	pop    rdi
   140039175:	rex.X push rdx
   140039177:	rex.RB
   140039178:	rex.B
   140039179:	rex.WXB pop r15
   14003917b:	rex.WRXB
   14003917c:	rex.WRX pop rdi
   14003917e:	push   rbx
   14003917f:	push   rsp
   140039180:	push   r10
   140039182:	push   rsp
   140039183:	push   rbp
   140039184:	push   rax
   140039185:	add    BYTE PTR [rax],al
   140039187:	add    BYTE PTR [rbx+0x4c],al
   14003918a:	rex.WRX push rsp
   14003918c:	pop    rdi
   14003918d:	push   rdi
   14003918e:	rex.WB
   14003918f:	rex.WRX push rbx
   140039191:	rex.WRXB
   140039192:	rex.XB
   140039193:	rex.WXB
   140039194:	push   r8
   140039196:	rex.WB add BYTE PTR [r11+0x4c],al
   14003919a:	rex.WRX push rsp
   14003919c:	pop    rdi
   14003919d:	push   rdi
   14003919e:	push   rbx
   14003919f:	rex.WRXB
   1400391a0:	rex.XB
   1400391a1:	rex.WXB
   1400391a2:	push   r8
   1400391a4:	rex.WB
   1400391a5:	rex.RB pop r8
   1400391a7:	add    BYTE PTR [rbx+0x4c],al
   1400391aa:	rex.WRX push rsp
   1400391ac:	pop    rdi
   1400391ad:	push   rdi
   1400391ae:	push   rbx
   1400391af:	rex.WRXB
   1400391b0:	rex.XB
   1400391b1:	rex.WXB
   1400391b2:	rex.WRB
   1400391b3:	rex.WRXB push r10
   1400391b5:	add    BYTE PTR [r8],r8b
   1400391b8:	rex.XB
   1400391b9:	rex.WRXB
   1400391ba:	rex.WR
   1400391bb:	rex.WR
   1400391bc:	rex.RB
   1400391bd:	rex.XB push r12
   1400391bf:	rex.WB
   1400391c0:	rex.WRXB
   1400391c1:	rex.WRX pop rdi
   1400391c3:	push   rdx
   1400391c4:	push   r12
   1400391c6:	add    BYTE PTR [r11+0x4f],r8b
   1400391ca:	rex.WRB
   1400391cb:	rex.WRB
   1400391cc:	rex.WRXB
   1400391cd:	rex.WRX pop rdi
   1400391cf:	rex.RB
   1400391d0:	rex.WRX push rsp
   1400391d2:	push   rdx
   1400391d3:	rex.WB
   1400391d4:	rex.RB push r11
   1400391d6:	add    BYTE PTR [rax],al
   1400391d8:	rex.XB
   1400391d9:	rex.WRXB
   1400391da:	rex.WRB
   1400391db:	rex.WRB
   1400391dc:	rex.WRXB
   1400391dd:	rex.WRX pop rdi
   1400391df:	push   rbp
   1400391e0:	rex.WB add BYTE PTR [r8],al
   1400391e3:	add    BYTE PTR [rax],al
   1400391e5:	add    BYTE PTR [rax],al
   1400391e7:	add    BYTE PTR [rbx+0x4f],al
   1400391ea:	rex.WRB push r8
   1400391ec:	rex.WR push rax
   1400391ee:	pop    rdi
   1400391ef:	rex.WB
   1400391f0:	rex.WRX
   1400391f1:	rex.WB push r12
   1400391f3:	pop    rdi
   1400391f4:	rex.X push rdx
   1400391f6:	rex.RB
   1400391f7:	rex.B
   1400391f8:	rex.WXB push r8
   1400391fa:	rex.WRXB
   1400391fb:	rex.WB
   1400391fc:	rex.WRX push rsp
   1400391fe:	add    BYTE PTR [rax],al
   140039200:	rex.XB
   140039201:	rex.WRXB
   140039202:	rex.WRB push r8
   140039204:	push   rdx
   140039205:	rex.RB push r11
   140039207:	push   rbx
   140039208:	pop    rdi
   140039209:	rex.RX
   14003920a:	rex.WR push rbp
   14003920c:	push   rbx
   14003920d:	rex.W pop rdi
   14003920f:	push   rsp
   140039210:	push   rdx
   140039211:	rex.WB
   140039212:	rex.RXB
   140039213:	rex.RXB
   140039214:	rex.RB push r10
   140039216:	pop    rdi
   140039217:	push   rsp
   140039218:	rex.WB
   140039219:	rex.WRB
   14003921a:	rex.RB
   14003921b:	rex.WRXB push r13
   14003921d:	push   rsp
   14003921e:	add    BYTE PTR [rax],al
   140039220:	rex.XB
   140039221:	rex.WRXB
   140039222:	rex.WRB push r8
   140039224:	push   rdx
   140039225:	rex.RB push r11
   140039227:	push   rbx
   140039228:	pop    rdi
   140039229:	rex.WRB
   14003922a:	rex.RB
   14003922b:	rex.WRB
   14003922c:	rex.WRXB push r10
   14003922e:	pop    rcx
   14003922f:	pop    rdi
   140039230:	rex.B
   140039231:	rex.WR
   140039232:	rex.WR
   140039233:	rex.WRXB
   140039234:	rex.XB pop r15
   140039236:	rex.WRB
   140039237:	rex.X pop rcx
   140039239:	push   rsp
   14003923a:	rex.RB push r11
   14003923c:	add    BYTE PTR [rax],al
   14003923e:	add    BYTE PTR [rax],al
   140039240:	rex.XB
   140039241:	rex.WRXB
   140039242:	rex.WRB push r8
   140039244:	push   rdx
   140039245:	rex.RB push r11
   140039247:	push   rbx
   140039248:	pop    rdi
   140039249:	rex.WRB
   14003924a:	rex.RB
   14003924b:	rex.WRB
   14003924c:	rex.WRXB push r10
   14003924e:	pop    rcx
   14003924f:	pop    rdi
   140039250:	push   rax
   140039251:	rex.WRXB
   140039252:	rex.WRXB
   140039253:	rex.WR pop rdi
   140039255:	rex.X
   140039256:	rex.WR
   140039257:	rex.WRXB
   140039258:	rex.XB
   140039259:	rex.WXB push r11
   14003925b:	add    BYTE PTR [rax],al
   14003925d:	add    BYTE PTR [rax],al
   14003925f:	add    BYTE PTR [rbx+0x4f],al
   140039262:	rex.WRB push r8
   140039264:	push   rdx
   140039265:	rex.RB push r11
   140039267:	push   rbx
   140039268:	pop    rdi
   140039269:	rex.WRXB
   14003926a:	rex.WR
   14003926b:	rex.R pop rdi
   14003926d:	rex.WB
   14003926e:	rex.RB pop r15
   140039270:	rex.X push rdx
   140039272:	rex.WRXB push r15
   140039274:	push   rbx
   140039275:	rex.RB push r10
   140039277:	add    BYTE PTR [rbx+0x4f],al
   14003927a:	rex.WRX push rbx
   14003927c:	push   rsp
   14003927d:	rex.R
   14003927e:	rex.RB push r11
   140039280:	push   rsp
   140039281:	add    BYTE PTR [rax],al
   140039283:	add    BYTE PTR [rax],al
   140039285:	add    BYTE PTR [rax],al
   140039287:	add    BYTE PTR [rbx+0x4f],al
   14003928a:	rex.WRX pop rdi
   14003928c:	push   rcx
   14003928d:	push   rbp
   14003928e:	rex.WRXB push r12
   140039290:	pop    r15
   140039292:	rex.RXB
   140039293:	push   r10
   140039295:	rex.X
   140039296:	rex.B
   140039297:	rex.RXB
   140039298:	rex.RB pop r15
   14003929a:	push   rsp
   14003929b:	rex.WB
   14003929c:	rex.WRB
   14003929d:	rex.RB push r10
   14003929f:	add    BYTE PTR [rbx+0x4f],al
   1400392a2:	rex.WRX pop rdi
   1400392a4:	push   rcx
   1400392a5:	push   rbp
   1400392a6:	rex.WRXB push r12
   1400392a8:	pop    r15
   1400392aa:	rex.W
   1400392ab:	push   r11
   1400392ad:	rex.W pop rdi
   1400392af:	rex.X push rbp
   1400392b1:	rex.XB
   1400392b2:	rex.WXB
   1400392b3:	rex.RB push r12
   1400392b5:	push   rbx
   1400392b6:	add    BYTE PTR [rax],al
   1400392b8:	rex.XB
   1400392b9:	rex.WRXB
   1400392ba:	rex.WRX pop rdi
   1400392bc:	push   rcx
   1400392bd:	push   rbp
   1400392be:	rex.WRXB push r12
   1400392c0:	pop    r15
   1400392c2:	rex.W
   1400392c3:	push   r11
   1400392c5:	rex.W pop rdi
   1400392c7:	rex.WR
   1400392c8:	rex.WRXB
   1400392c9:	rex.XB
   1400392ca:	rex.WXB push r11
   1400392cc:	add    BYTE PTR [rax],al
   1400392ce:	add    BYTE PTR [rax],al
   1400392d0:	rex.XB
   1400392d1:	rex.WRXB
   1400392d2:	rex.WRXB
   1400392d3:	rex.WXB
   1400392d4:	rex.WB
   1400392d5:	rex.RB
   1400392d6:	push   r13
   1400392d8:	push   rsp
   1400392d9:	rex.W pop rdi
   1400392db:	rex.B
   1400392dc:	rex.R
   1400392dd:	rex.R pop rdi
   1400392df:	rex.RX
   1400392e0:	rex.WRXB push r10
   1400392e2:	rex.WRB pop r15
   1400392e4:	push   rsp
   1400392e5:	pop    rcx
   1400392e6:	push   rax
   1400392e7:	rex.RB pop r15
   1400392e9:	rex.W
   1400392ea:	rex.RB
   1400392eb:	rex.B
   1400392ec:	rex.R
   1400392ed:	rex.RB push r10
   1400392ef:	add    BYTE PTR [rbx+0x4f],al
   1400392f2:	rex.WRXB
   1400392f3:	rex.WXB
   1400392f4:	rex.WB
   1400392f5:	rex.RB
   1400392f6:	push   r13
   1400392f8:	push   rsp
   1400392f9:	rex.W pop rdi
   1400392fb:	rex.XB push r10
   1400392fd:	pop    rcx
   1400392fe:	push   rax
   1400392ff:	push   rsp
   140039300:	rex.WRXB pop r15
   140039302:	push   rsp
   140039303:	pop    rcx
   140039304:	push   rax
   140039305:	add    BYTE PTR [r8],r8b
   140039308:	rex.XB
   140039309:	rex.WRXB
   14003930a:	rex.WRXB
   14003930b:	rex.WXB
   14003930c:	rex.WB
   14003930d:	rex.RB
   14003930e:	push   r13
   140039310:	push   rsp
   140039311:	rex.W pop rdi
   140039313:	rex.RX
   140039314:	rex.X
   140039315:	pop    r15
   140039317:	rex.WRB
   140039318:	pop    r8
   14003931a:	pop    rdi
   14003931b:	rex.B
   14003931c:	rex.RXB
   14003931d:	add    BYTE PTR [r8],r8b
   140039320:	rex.XB
   140039321:	rex.WRXB
   140039322:	rex.WRXB
   140039323:	rex.WXB
   140039324:	rex.WB
   140039325:	rex.RB
   140039326:	push   r13
   140039328:	push   rsp
   140039329:	rex.W pop rdi
   14003932b:	rex.RX
   14003932c:	rex.WB
   14003932d:	rex.WR push rsp
   14003932f:	rex.RB push r10
   140039331:	pop    rdi
   140039332:	rex.WB
   140039333:	rex.WRX
   140039334:	rex.RX
   140039335:	rex.WRXB add BYTE PTR [r8],r8b
   140039338:	rex.XB
   140039339:	rex.WRXB
   14003933a:	rex.WRXB
   14003933b:	rex.WXB
   14003933c:	rex.WB
   14003933d:	rex.RB
   14003933e:	push   r13
   140039340:	push   rsp
   140039341:	rex.W pop rdi
   140039343:	rex.WB
   140039344:	rex.WRX
   140039345:	rex.WB push r12
   140039347:	pop    rdi
   140039348:	rex.X push rdx
   14003934a:	rex.B
   14003934b:	rex.WXB
   14003934c:	rex.RB pop r15
   14003934e:	push   rax
   14003934f:	rex.WRXB
   140039350:	rex.WB
   140039351:	rex.WRX push rsp
   140039353:	add    BYTE PTR [rax],al
   140039355:	add    BYTE PTR [rax],al
   140039357:	add    BYTE PTR [rbx+0x54],al
   14003935a:	push   rdx
   14003935b:	rex.WR pop rdi
   14003935d:	rex.B
   14003935e:	rex.WR
   14003935f:	rex.RB push r10
   140039361:	push   rsp
   140039362:	pop    rdi
   140039363:	rex.WRB
   140039364:	pop    r8
   140039366:	pop    rdi
   140039367:	rex.WB
   140039368:	rex.WRX push rbx
   14003936a:	push   rsp
   14003936b:	rex.B
   14003936c:	rex.WRX
   14003936d:	rex.XB
   14003936e:	rex.RB pop r15
   140039370:	push   rax
   140039371:	rex.RB push r10
   140039373:	pop    rdi
   140039374:	rex.B
   140039375:	rex.WR
   140039376:	rex.RB push r10
   140039378:	push   rsp
   140039379:	pop    rdi
   14003937a:	rex.R
   14003937b:	rex.RB
   14003937c:	rex.RX add BYTE PTR [rax],r8b
   14003937f:	add    BYTE PTR [rbx+0x54],al
   140039382:	push   rdx
   140039383:	rex.WR pop rdi
   140039385:	rex.R
   140039386:	rex.X pop rdi
   140039388:	rex.WR
   140039389:	rex.WRXB
   14003938a:	rex.RXB pop r15
   14003938c:	rex.RX
   14003938d:	rex.B
   14003938e:	rex.WB
   14003938f:	rex.WR push rbp
   140039391:	push   rdx
   140039392:	rex.RB pop r15
   140039394:	push   rsp
   140039395:	rex.WRXB pop r15
   140039397:	rex.RB push r14
   140039399:	rex.RB
   14003939a:	rex.WRX push rsp
   14003939c:	pop    rdi
   14003939d:	rex.WRB
   14003939e:	rex.WB
   14003939f:	rex.WRX pop rdi
   1400393a1:	push   rsp
   1400393a2:	rex.WB
   1400393a3:	rex.WRB
   1400393a4:	rex.RB pop r15
   1400393a6:	rex.WB
   1400393a7:	rex.WRX pop rdi
   1400393a9:	push   rbx
   1400393aa:	rex.RB
   1400393ab:	rex.XB add BYTE PTR [r8],al
   1400393ae:	add    BYTE PTR [rax],al
   1400393b0:	rex.XB push r12
   1400393b2:	push   rdx
   1400393b3:	rex.WR pop rdi
   1400393b5:	rex.R
   1400393b6:	rex.X pop rdi
   1400393b8:	rex.WR
   1400393b9:	rex.WRXB
   1400393ba:	rex.RXB pop r15
   1400393bc:	rex.WB
   1400393bd:	rex.R
   1400393be:	rex.WR
   1400393bf:	rex.RB pop r15
   1400393c1:	rex.R
   1400393c2:	rex.RB push r12
   1400393c4:	rex.RB
   1400393c5:	rex.XB push r12
   1400393c7:	rex.WB
   1400393c8:	rex.WRXB
   1400393c9:	rex.WRX pop rdi
   1400393cb:	push   rsp
   1400393cc:	rex.WB
   1400393cd:	rex.WRB
   1400393ce:	rex.RB push r10
   1400393d0:	pop    rdi
   1400393d1:	rex.WB
   1400393d2:	rex.WRX push rsp
   1400393d4:	rex.RB push r10
   1400393d6:	push   rsi
   1400393d7:	rex.B
   1400393d8:	rex.WR pop rdi
   1400393da:	rex.WB
   1400393db:	rex.WRX pop rdi
   1400393dd:	push   rbx
   1400393de:	rex.RB
   1400393df:	rex.XB add BYTE PTR [r8],al
   1400393e2:	add    BYTE PTR [rax],al
   1400393e4:	add    BYTE PTR [rax],al
   1400393e6:	add    BYTE PTR [rax],al
   1400393e8:	rex.XB push r12
   1400393ea:	push   rdx
   1400393eb:	rex.WR pop rdi
   1400393ed:	rex.R
   1400393ee:	rex.X pop rdi
   1400393f0:	rex.WR
   1400393f1:	rex.WRXB
   1400393f2:	rex.RXB pop r15
   1400393f4:	push   rdx
   1400393f5:	rex.RB
   1400393f6:	rex.XB
   1400393f7:	rex.WRXB
   1400393f8:	rex.WRX
   1400393f9:	rex.WRX
   1400393fa:	rex.RB
   1400393fb:	rex.XB push r12
   1400393fd:	pop    rdi
   1400393fe:	rex.WRB
   1400393ff:	rex.WB
   140039400:	rex.WRX pop rdi
   140039402:	rex.WB
   140039403:	rex.WRX push rsp
   140039405:	rex.RB push r10
   140039407:	push   rsi
   140039408:	rex.B
   140039409:	rex.WR pop rdi
   14003940b:	rex.WB
   14003940c:	rex.WRX pop rdi
   14003940e:	push   rbx
   14003940f:	rex.RB
   140039410:	rex.XB add BYTE PTR [r8],al
   140039413:	add    BYTE PTR [rax],al
   140039415:	add    BYTE PTR [rax],al
   140039417:	add    BYTE PTR [rbx+0x54],al
   14003941a:	push   rdx
   14003941b:	rex.WR pop rdi
   14003941d:	rex.R push rbp
   14003941f:	rex.WRB push r8
   140039421:	pop    rdi
   140039422:	rex.WRB
   140039423:	rex.WB pop r8
   140039425:	rex.RB push r10
   140039427:	pop    rdi
   140039428:	pop    rax
   140039429:	rex.WRB
   14003942a:	rex.WR push rbx
   14003942c:	add    BYTE PTR [rax],al
   14003942e:	add    BYTE PTR [rax],al
   140039430:	rex.XB push r12
   140039432:	push   rdx
   140039433:	rex.WR pop rdi
   140039435:	rex.WB push r8
   140039437:	rex.XB
   140039438:	rex.WRXB
   140039439:	rex.WRX
   14003943a:	rex.RX
   14003943b:	rex.WB
   14003943c:	rex.RXB pop r15
   14003943e:	rex.RB pop r8
   140039440:	rex.RB pop r15
   140039442:	push   rsp
   140039443:	rex.WB
   140039444:	rex.WRB
   140039445:	rex.RB
   140039446:	rex.WRXB push r13
   140039448:	push   rsp
   140039449:	pop    rdi
   14003944a:	rex.WRB
   14003944b:	rex.WB
   14003944c:	rex.WR
   14003944d:	rex.WR
   14003944e:	rex.WB push r11
   140039450:	rex.RB
   140039451:	rex.XB
   140039452:	rex.WRXB
   140039453:	rex.WRX
   140039454:	add    BYTE PTR [rax],r8b
   140039457:	add    BYTE PTR [rbx+0x54],al
   14003945a:	push   rdx
   14003945b:	rex.WR pop rdi
   14003945d:	rex.WB push r8
   14003945f:	push   rbx
   140039460:	rex.RB
   140039461:	rex.XB pop r15
   140039463:	rex.WRB
   140039464:	rex.WRXB
   140039465:	rex.WRX
   140039466:	rex.WB push r12
   140039468:	rex.WRXB push r10
   14003946a:	pop    rdi
   14003946b:	rex.WB
   14003946c:	rex.R
   14003946d:	rex.WR
   14003946e:	rex.RB pop r15
   140039470:	push   rsp
   140039471:	rex.WB
   140039472:	rex.WRB
   140039473:	add    BYTE PTR [r8],r8b
   140039476:	add    BYTE PTR [rax],al
   140039478:	rex.XB push r12
   14003947a:	push   rdx
   14003947b:	rex.WR pop rdi
   14003947d:	rex.WR
   14003947e:	rex.WR push rcx
   140039480:	pop    rdi
   140039481:	rex.XB
   140039482:	rex.WRXB
   140039483:	rex.WRX push rbx
   140039485:	push   rbp
   140039486:	rex.WRB
   140039487:	rex.RB push r10
   140039489:	pop    rdi
   14003948a:	push   rbx
   14003948b:	rex.WR
   14003948c:	rex.WRXB push r12
   14003948e:	push   rbx
   14003948f:	add    BYTE PTR [rbx+0x54],al
   140039492:	push   rdx
   140039493:	rex.WR pop rdi
   140039495:	rex.WR
   140039496:	rex.WR push rcx
   140039498:	pop    rdi
   140039499:	rex.RX
   14003949a:	rex.WRXB push r10
   14003949c:	rex.WRB
   14003949d:	push   r12
   14003949f:	push   rsp
   1400394a0:	rex.RB push r10
   1400394a2:	pop    rdi
   1400394a3:	push   rdx
   1400394a4:	rex.RB
   1400394a5:	rex.XB
   1400394a6:	rex.WRXB
   1400394a7:	rex.WRX
   1400394a8:	rex.WRX
   1400394a9:	rex.RB
   1400394aa:	rex.XB push r12
   1400394ac:	pop    rdi
   1400394ad:	rex.WB
   1400394ae:	rex.WRX push rsp
   1400394b0:	rex.RB push r10
   1400394b2:	push   rsi
   1400394b3:	rex.B
   1400394b4:	rex.WR pop rdi
   1400394b6:	rex.WB
   1400394b7:	rex.WRX pop rdi
   1400394b9:	push   rbx
   1400394ba:	rex.RB
   1400394bb:	rex.XB add BYTE PTR [r8],al
   1400394be:	add    BYTE PTR [rax],al
   1400394c0:	rex.XB push r12
   1400394c2:	push   rdx
   1400394c3:	rex.WR pop rdi
   1400394c5:	rex.WR
   1400394c6:	rex.WR push rcx
   1400394c8:	pop    rdi
   1400394c9:	push   rax
   1400394ca:	push   rdx
   1400394cb:	rex.WRXB
   1400394cc:	rex.R push rbp
   1400394ce:	rex.XB
   1400394cf:	rex.RB push r10
   1400394d1:	pop    rdi
   1400394d2:	rex.XB
   1400394d3:	rex.WRXB
   1400394d4:	rex.WRX push rbx
   1400394d6:	push   rbp
   1400394d7:	rex.WRB
   1400394d8:	rex.RB push r10
   1400394da:	pop    rdi
   1400394db:	rex.X
   1400394dc:	rex.B
   1400394dd:	rex.WR
   1400394de:	rex.B
   1400394df:	rex.WRX
   1400394e0:	rex.XB
   1400394e1:	rex.RB pop r15
   1400394e3:	rex.W
   1400394e4:	rex.WB
   1400394e5:	rex.RXB
   1400394e6:	rex.W pop rdi
   1400394e8:	push   rdi
   1400394e9:	push   r12
   1400394eb:	rex.RB push r10
   1400394ed:	rex.WRB
   1400394ee:	push   r10
   1400394f0:	rex.WXB pop r15
   1400394f2:	rex.WB
   1400394f3:	rex.WRX pop rdi
   1400394f5:	push   rbx
   1400394f6:	rex.RB
   1400394f7:	rex.XB add BYTE PTR [r8],al
   1400394fa:	add    BYTE PTR [rax],al
   1400394fc:	add    BYTE PTR [rax],al
   1400394fe:	add    BYTE PTR [rax],al
   140039500:	rex.XB push r12
   140039502:	push   rdx
   140039503:	rex.WR pop rdi
   140039505:	rex.WR
   140039506:	rex.WR push rcx
   140039508:	pop    rdi
   140039509:	push   rax
   14003950a:	push   rdx
   14003950b:	rex.WRXB
   14003950c:	rex.R push rbp
   14003950e:	rex.XB
   14003950f:	rex.RB push r10
   140039511:	pop    rdi
   140039512:	rex.XB
   140039513:	rex.WRXB
   140039514:	rex.WRX push rbx
   140039516:	push   rbp
   140039517:	rex.WRB
   140039518:	rex.RB push r10
   14003951a:	pop    rdi
   14003951b:	rex.X
   14003951c:	rex.B
   14003951d:	rex.WR
   14003951e:	rex.B
   14003951f:	rex.WRX
   140039520:	rex.XB
   140039521:	rex.RB pop r15
   140039523:	rex.WR
   140039524:	rex.WRXB push r15
   140039526:	pop    rdi
   140039527:	push   rdi
   140039528:	push   r12
   14003952a:	rex.RB push r10
   14003952c:	rex.WRB
   14003952d:	push   r10
   14003952f:	rex.WXB pop r15
   140039531:	rex.WB
   140039532:	rex.WRX pop rdi
   140039534:	push   rbx
   140039535:	rex.RB
   140039536:	rex.XB add BYTE PTR [r11+0x54],al
   14003953a:	push   rdx
   14003953b:	rex.WR pop rdi
   14003953d:	rex.WR
   14003953e:	rex.WR push rcx
   140039540:	pop    rdi
   140039541:	push   rsp
   140039542:	push   rdx
   140039543:	rex.B
   140039544:	rex.WRX push rbx
   140039546:	rex.B
   140039547:	rex.XB push r12
   140039549:	rex.WB
   14003954a:	rex.WRXB
   14003954b:	rex.WRX pop rdi
   14003954d:	push   rdx
   14003954e:	rex.RB push r12
   140039550:	push   rdx
   140039551:	pop    rcx
   140039552:	pop    rdi
   140039553:	rex.R
   140039554:	rex.RB
   140039555:	rex.WR
   140039556:	pop    r9
   140039558:	pop    rdi
   140039559:	rex.WB
   14003955a:	rex.WRX pop rdi
   14003955c:	push   rbx
   14003955d:	rex.RB
   14003955e:	rex.XB add BYTE PTR [r11+0x54],al
   140039562:	push   rdx
   140039563:	rex.WR pop rdi
   140039565:	rex.WRB
   140039566:	pop    r8
   140039568:	pop    rdi
   140039569:	rex.WRB push r11
   14003956b:	rex.R
   14003956c:	rex.RB pop r15
   14003956e:	rex.R
   14003956f:	rex.X pop rdi
   140039571:	push   rbx
   140039572:	rex.WB pop r10
   140039574:	rex.RB pop r15
   140039576:	rex.WB
   140039577:	rex.WRX pop rdi
   140039579:	rex.WXB
   14003957a:	rex.X add BYTE PTR [rax],al
   14003957d:	add    BYTE PTR [rax],al
   14003957f:	add    BYTE PTR [rbx+0x54],al
   140039582:	push   rdx
   140039583:	rex.WR pop rdi
   140039585:	rex.WRB
   140039586:	rex.WB pop r8
   140039588:	rex.RB push r10
   14003958a:	pop    rdi
   14003958b:	rex.XB
   14003958c:	rex.B
   14003958d:	rex.XB
   14003958e:	rex.W
   14003958f:	rex.RB pop r15
   140039591:	rex.X push rbp
   140039593:	rex.WB
   140039594:	rex.WR
   140039595:	rex.R pop rdi
   140039597:	rex.WRX
   140039598:	rex.RB push r15
   14003959a:	pop    rdi
   14003959b:	rex.WB
   14003959c:	rex.WRX pop rdi
   14003959e:	rex.WRX
   14003959f:	rex.RB pop r8
   1400395a1:	push   rsp
   1400395a2:	pop    rdi
   1400395a3:	push   rbp
   1400395a4:	push   rax
   1400395a5:	rex.R
   1400395a6:	push   r12
   1400395a8:	add    BYTE PTR [r8],r8b
   1400395ab:	add    BYTE PTR [rax],al
   1400395ad:	add    BYTE PTR [rax],al
   1400395af:	add    BYTE PTR [rbx+0x54],al
   1400395b2:	push   rdx
   1400395b3:	rex.WR pop rdi
   1400395b5:	rex.WRB
   1400395b6:	rex.WB pop r8
   1400395b8:	rex.RB push r10
   1400395ba:	pop    rdi
   1400395bb:	rex.XB
   1400395bc:	rex.B
   1400395bd:	rex.XB
   1400395be:	rex.W
   1400395bf:	rex.RB pop r15
   1400395c1:	push   rax
   1400395c2:	rex.RB push r10
   1400395c4:	push   rbx
   1400395c5:	rex.WB push r11
   1400395c7:	push   rsp
   1400395c8:	rex.RB
   1400395c9:	rex.WRX push rsp
   1400395cb:	add    BYTE PTR [rax],al
   1400395cd:	add    BYTE PTR [rax],al
   1400395cf:	add    BYTE PTR [rbx+0x54],al
   1400395d2:	push   rdx
   1400395d3:	rex.WR pop rdi
   1400395d5:	rex.WRB
   1400395d6:	rex.WB pop r8
   1400395d8:	rex.RB push r10
   1400395da:	pop    rdi
   1400395db:	rex.XB
   1400395dc:	rex.B
   1400395dd:	rex.XB
   1400395de:	rex.W
   1400395df:	rex.RB pop r15
   1400395e1:	push   rbp
   1400395e2:	push   rax
   1400395e3:	rex.R
   1400395e4:	push   r12
   1400395e6:	rex.RB pop r15
   1400395e8:	rex.RX
   1400395e9:	rex.B
   1400395ea:	rex.WB
   1400395eb:	rex.WR push rbp
   1400395ed:	push   rdx
   1400395ee:	rex.RB push r11
   1400395f0:	pop    rdi
   1400395f1:	push   rsp
   1400395f2:	rex.W push rdx
   1400395f4:	rex.RB push r11
   1400395f6:	rex.W
   1400395f7:	rex.WRXB
   1400395f8:	rex.WR
   1400395f9:	add    BYTE PTR [rax],r8b
   1400395fc:	add    BYTE PTR [rax],al
   1400395fe:	add    BYTE PTR [rax],al
   140039600:	rex.XB push r12
   140039602:	push   rdx
   140039603:	rex.WR pop rdi
   140039605:	rex.WRB
   140039606:	rex.WB pop r8
   140039608:	rex.RB push r10
   14003960a:	pop    rdi
   14003960b:	rex.XB
   14003960c:	rex.WRXB
   14003960d:	rex.WRX
   14003960e:	rex.RX
   14003960f:	rex.WB
   140039610:	rex.RXB pop r15
   140039612:	push   rbp
   140039613:	push   rax
   140039614:	rex.WR
   140039615:	rex.WRXB
   140039616:	rex.B
   140039617:	rex.R pop rdi
   140039619:	push   rdx
   14003961a:	rex.RB push r12
   14003961c:	push   rdx
   14003961d:	pop    rcx
   14003961e:	pop    rdi
   14003961f:	rex.R
   140039620:	rex.RB
   140039621:	rex.WR
   140039622:	pop    r9
   140039624:	add    BYTE PTR [rax],al
   140039626:	add    BYTE PTR [rax],al
   140039628:	rex.XB push r12
   14003962a:	push   rdx
   14003962b:	rex.WR pop rdi
   14003962d:	rex.WRB
   14003962e:	rex.WB pop r8
   140039630:	rex.RB push r10
   140039632:	pop    rdi
   140039633:	rex.XB push r11
   140039635:	push   rbx
   140039636:	pop    rdi
   140039637:	rex.XB
   140039638:	rex.WRXB
   140039639:	rex.WRX
   14003963a:	rex.WRX
   14003963b:	rex.RB
   14003963c:	rex.XB push r12
   14003963e:	rex.WB push r14
   140039640:	rex.WB push r12
   140039642:	pop    rcx
   140039643:	pop    rdi
   140039644:	rex.XB
   140039645:	rex.W
   140039646:	rex.RB
   140039647:	rex.XB
   140039648:	rex.WXB pop r15
   14003964a:	push   rdx
   14003964b:	push   r12
   14003964d:	add    BYTE PTR [r8],r8b
   140039650:	rex.XB push r12
   140039652:	push   rdx
   140039653:	rex.WR pop rdi
   140039655:	rex.WRB
   140039656:	rex.WB pop r8
   140039658:	rex.RB push r10
   14003965a:	pop    rdi
   14003965b:	rex.XB push r11
   14003965d:	push   rbx
   14003965e:	pop    rdi
   14003965f:	rex.XB
   140039660:	rex.WRXB
   140039661:	rex.WRX
   140039662:	rex.WRX
   140039663:	rex.RB
   140039664:	rex.XB push r12
   140039666:	rex.WB push r14
   140039668:	rex.WB push r12
   14003966a:	pop    rcx
   14003966b:	pop    rdi
   14003966c:	rex.XB
   14003966d:	rex.W
   14003966e:	rex.RB
   14003966f:	rex.XB
   140039670:	rex.WXB pop r15
   140039672:	push   rsp
   140039673:	rex.WB
   140039674:	rex.WRB
   140039675:	rex.RB
   140039676:	rex.WRXB push r13
   140039678:	push   rsp
   140039679:	add    BYTE PTR [rax],al
   14003967b:	add    BYTE PTR [rax],al
   14003967d:	add    BYTE PTR [rax],al
   14003967f:	add    BYTE PTR [rbx+0x54],al
   140039682:	push   rdx
   140039683:	rex.WR pop rdi
   140039685:	rex.WRB
   140039686:	rex.WB pop r8
   140039688:	rex.RB push r10
   14003968a:	pop    rdi
   14003968b:	rex.XB push r11
   14003968d:	push   rbx
   14003968e:	pop    rdi
   14003968f:	rex.WRX
   140039690:	rex.WR
   140039691:	rex.X pop rdi
   140039693:	push   rbx
   140039694:	push   rsp
   140039695:	rex.B
   140039696:	rex.X
   140039697:	rex.WB
   140039698:	rex.WR
   140039699:	rex.WB pop r10
   14003969b:	push   r12
   14003969d:	rex.WB
   14003969e:	rex.WRXB
   14003969f:	rex.WRX pop rdi
   1400396a1:	push   rsp
   1400396a2:	rex.WB
   1400396a3:	rex.WRB
   1400396a4:	rex.RB
   1400396a5:	rex.WRXB push r13
   1400396a7:	push   rsp
	...
   1400396b0:	rex.XB push r12
   1400396b2:	push   rdx
   1400396b3:	rex.WR pop rdi
   1400396b5:	rex.WRB
   1400396b6:	rex.WB pop r8
   1400396b8:	rex.RB push r10
   1400396ba:	pop    rdi
   1400396bb:	rex.XB push r11
   1400396bd:	push   rbx
   1400396be:	pop    rdi
   1400396bf:	rex.WRX
   1400396c0:	rex.WR
   1400396c1:	rex.X pop rdi
   1400396c3:	push   rbx
   1400396c4:	push   rsp
   1400396c5:	push   r10
   1400396c7:	push   rsp
   1400396c8:	pop    rdi
   1400396c9:	rex.XB
   1400396ca:	rex.WRXB
   1400396cb:	rex.WRX
   1400396cc:	rex.RX
   1400396cd:	rex.WB
   1400396ce:	rex.RXB pop r15
   1400396d0:	push   rsp
   1400396d1:	rex.WB
   1400396d2:	rex.WRB
   1400396d3:	rex.RB
   1400396d4:	rex.WRXB push r13
   1400396d6:	push   rsp
   1400396d7:	add    BYTE PTR [rbx+0x54],al
   1400396da:	push   rdx
   1400396db:	rex.WR pop rdi
   1400396dd:	rex.WRB
   1400396de:	rex.WB pop r8
   1400396e0:	rex.RB push r10
   1400396e2:	pop    rdi
   1400396e3:	rex.WB
   1400396e4:	rex.RXB
   1400396e5:	rex.WRX
   1400396e6:	rex.WRXB push r10
   1400396e8:	rex.RB pop r15
   1400396ea:	pop    rax
   1400396eb:	rex.WRB
   1400396ec:	rex.WR pop rdi
   1400396ee:	push   rsi
   1400396ef:	rex.RB push r10
   1400396f1:	push   rbx
   1400396f2:	rex.WB
   1400396f3:	rex.WRXB
   1400396f4:	rex.WRX add BYTE PTR [rax],r8b
   1400396f7:	add    BYTE PTR [rbx+0x54],al
   1400396fa:	push   rdx
   1400396fb:	rex.WR pop rdi
   1400396fd:	rex.WRB
   1400396fe:	rex.WB pop r8
   140039700:	rex.RB push r10
   140039702:	pop    rdi
   140039703:	rex.WR
   140039704:	rex.WXB
   140039705:	rex.RXB pop r15
   140039707:	rex.XB
   140039708:	rex.WRXB
   140039709:	rex.WRX
   14003970a:	rex.RX
   14003970b:	rex.WB
   14003970c:	rex.RXB pop r15
   14003970e:	push   rbp
   14003970f:	push   rax
   140039710:	rex.WR
   140039711:	rex.WRXB
   140039712:	rex.B
   140039713:	rex.R pop rdi
   140039715:	push   r12
   140039717:	push   rsp
   140039718:	rex.RB
   140039719:	rex.WRB push r8
   14003971b:	push   rsp
   14003971c:	push   rbx
   14003971d:	add    BYTE PTR [rax],al
   14003971f:	add    BYTE PTR [rbx+0x54],al
   140039722:	push   rdx
   140039723:	rex.WR pop rdi
   140039725:	rex.WRB
   140039726:	rex.WB pop r8
   140039728:	rex.RB push r10
   14003972a:	pop    rdi
   14003972b:	rex.WRX
   14003972c:	rex.RB push r15
   14003972e:	pop    rdi
   14003972f:	rex.XB
   140039730:	rex.WRXB
   140039731:	rex.WRX
   140039732:	rex.RX
   140039733:	rex.WB
   140039734:	rex.RXB pop r15
   140039736:	push   rbp
   140039737:	push   rax
   140039738:	rex.WR
   140039739:	rex.WRXB
   14003973a:	rex.B
   14003973b:	rex.R pop rdi
   14003973d:	push   r12
   14003973f:	push   rsp
   140039740:	rex.RB
   140039741:	rex.WRB push r8
   140039743:	push   rsp
   140039744:	push   rbx
   140039745:	add    BYTE PTR [rax],al
   140039747:	add    BYTE PTR [rbx+0x54],al
   14003974a:	push   rdx
   14003974b:	rex.WR pop rdi
   14003974d:	rex.WRB
   14003974e:	rex.WB pop r8
   140039750:	rex.RB push r10
   140039752:	pop    rdi
   140039753:	push   rbx
   140039754:	rex.B
   140039755:	rex.WRB
   140039756:	rex.RB pop r15
   140039758:	rex.XB
   140039759:	rex.WRXB
   14003975a:	rex.WRX
   14003975b:	rex.RX
   14003975c:	rex.WB
   14003975d:	rex.RXB pop r15
   14003975f:	push   rdx
   140039760:	rex.RB
   140039761:	rex.WR
   140039762:	rex.WRXB
   140039763:	rex.B
   140039764:	rex.R pop rdi
   140039766:	push   r12
   140039768:	push   rsp
   140039769:	rex.RB
   14003976a:	rex.WRB push r8
   14003976c:	push   rsp
   14003976d:	push   rbx
   14003976e:	add    BYTE PTR [rax],al
   140039770:	rex.XB push r12
   140039772:	push   rdx
   140039773:	rex.WR pop rdi
   140039775:	rex.WRB
   140039776:	rex.WB pop r8
   140039778:	rex.RB push r10
   14003977a:	pop    rdi
   14003977b:	push   rbx
   14003977c:	rex.WXB
   14003977d:	rex.WB push r8
   14003977f:	pop    rdi
   140039780:	rex.XB push r11
   140039782:	push   rbx
   140039783:	pop    rdi
   140039784:	rex.XB
   140039785:	rex.WRXB
   140039786:	rex.WRX
   140039787:	rex.WRX
   140039788:	rex.RB
   140039789:	rex.XB push r12
   14003978b:	rex.WB push r14
   14003978d:	rex.WB push r12
   14003978f:	pop    rcx
   140039790:	pop    rdi
   140039791:	push   rsi
   140039792:	rex.B
   140039793:	rex.WR
   140039794:	rex.WB
   140039795:	rex.R
   140039796:	push   r12
   140039798:	rex.WB
   140039799:	rex.WRXB
   14003979a:	rex.WRX add BYTE PTR [rax],r8b
   14003979d:	add    BYTE PTR [rax],al
   14003979f:	add    BYTE PTR [rbx+0x54],al
   1400397a2:	push   rdx
   1400397a3:	rex.WR pop rdi
   1400397a5:	rex.WRB
   1400397a6:	rex.WB pop r8
   1400397a8:	rex.RB push r10
   1400397aa:	pop    rdi
   1400397ab:	push   rbp
   1400397ac:	push   rax
   1400397ad:	rex.R
   1400397ae:	push   r12
   1400397b0:	rex.RB pop r15
   1400397b2:	push   rsp
   1400397b3:	rex.W push rdx
   1400397b5:	rex.RB push r11
   1400397b7:	rex.W
   1400397b8:	rex.WRXB
   1400397b9:	rex.WR
   1400397ba:	add    BYTE PTR [rax],r8b
   1400397bd:	add    BYTE PTR [rax],al
   1400397bf:	add    BYTE PTR [rbx+0x54],al
   1400397c2:	push   rdx
   1400397c3:	rex.WR pop rdi
   1400397c5:	rex.WRX
   1400397c6:	rex.WR
   1400397c7:	rex.X pop rdi
   1400397c9:	rex.R
   1400397ca:	rex.WB push r11
   1400397cc:	rex.B
   1400397cd:	rex.X
   1400397ce:	rex.WR
   1400397cf:	rex.RB pop r15
   1400397d1:	rex.R pop rcx
   1400397d3:	rex.WRX
   1400397d4:	rex.B
   1400397d5:	rex.WRB
   1400397d6:	rex.WB
   1400397d7:	rex.XB pop r15
   1400397d9:	rex.R
   1400397da:	rex.WRX push rbx
   1400397dc:	pop    rdi
   1400397dd:	push   rdx
   1400397de:	rex.RB
   1400397df:	rex.RXB
   1400397e0:	rex.WB push r11
   1400397e2:	push   rsp
   1400397e3:	push   rdx
   1400397e4:	push   r12
   1400397e6:	rex.WB
   1400397e7:	rex.WRXB
   1400397e8:	rex.WRX add BYTE PTR [rax],r8b
   1400397eb:	add    BYTE PTR [rax],al
   1400397ed:	add    BYTE PTR [rax],al
   1400397ef:	add    BYTE PTR [rbx+0x54],al
   1400397f2:	push   rdx
   1400397f3:	rex.WR pop rdi
   1400397f5:	rex.WRX
   1400397f6:	rex.WR
   1400397f7:	rex.X pop rdi
   1400397f9:	rex.R
   1400397fa:	rex.WB push r11
   1400397fc:	rex.B
   1400397fd:	rex.X
   1400397fe:	rex.WR
   1400397ff:	rex.RB pop r15
   140039801:	rex.WRX
   140039802:	rex.WR
   140039803:	rex.X pop rdi
   140039805:	push   rbx
   140039806:	push   rsp
   140039807:	rex.WRXB push r8
   140039809:	pop    rdi
   14003980a:	rex.WRXB
   14003980b:	rex.WRX pop rdi
   14003980d:	rex.RX push rdi
   14003980f:	push   rbx
   140039810:	push   rdx
   140039811:	push   rsi
   140039812:	pop    rdi
   140039813:	push   rdi
   140039814:	push   r12
   140039816:	rex.XB
   140039817:	rex.W
   140039818:	rex.R
   140039819:	rex.WRXB
   14003981a:	rex.RXB add BYTE PTR [r8],r8b
   14003981d:	add    BYTE PTR [rax],al
   14003981f:	add    BYTE PTR [rbx+0x54],al
   140039822:	push   rdx
   140039823:	rex.WR pop rdi
   140039825:	push   rdx
   140039826:	push   r15
   140039828:	pop    rdi
   140039829:	push   rbx
   14003982a:	rex.WRXB
   14003982b:	rex.XB
   14003982c:	rex.WXB
   14003982d:	rex.RB push r12
   14003982f:	push   rbx
   140039830:	pop    rdi
   140039831:	rex.W
   140039832:	push   r11
   140039834:	rex.W pop rdi
   140039836:	rex.WR
   140039837:	rex.RB
   140039838:	rex.RXB push r12
   14003983a:	rex.W add BYTE PTR [rax],al
   14003983d:	add    BYTE PTR [rax],al
   14003983f:	add    BYTE PTR [rbx+0x54],al
   140039842:	push   rdx
   140039843:	rex.WR pop rdi
   140039845:	push   rdx
   140039846:	rex.WRXB push r13
   140039848:	push   rsp
   140039849:	rex.WB
   14003984a:	rex.WRX
   14003984b:	rex.RXB pop r15
   14003984d:	rex.WXB
   14003984e:	rex.RB
   14003984f:	rex.RB push r8
   140039851:	pop    rdi
   140039852:	rex.WRX
   140039853:	rex.RB push r12
   140039855:	push   rbx
   140039856:	rex.W pop rdi
   140039858:	push   rbx
   140039859:	rex.XB push r10
   14003985b:	rex.WB push r8
   14003985d:	push   rsp
   14003985e:	pop    rdi
   14003985f:	rex.RX
   140039860:	rex.WB
   140039861:	rex.WR
   140039862:	add    BYTE PTR [r8],r8b
   140039865:	add    BYTE PTR [rax],al
   140039867:	add    BYTE PTR [rbx+0x54],al
   14003986a:	push   rdx
   14003986b:	rex.WR pop rdi
   14003986d:	push   rdx
   14003986e:	push   rdx
   14003986f:	push   r11
   140039871:	pop    rdi
   140039872:	push   rax
   140039873:	rex.WRXB push r10
   140039875:	push   rsp
   140039876:	pop    rdi
   140039877:	rex.WRX push rbp
   140039879:	rex.WRB
   14003987a:	rex.X
   14003987b:	rex.RB push r10
   14003987d:	add    BYTE PTR [rax],al
   14003987f:	add    BYTE PTR [rbx+0x54],al
   140039882:	push   rdx
   140039883:	rex.WR pop rdi
   140039885:	push   rbx
   140039886:	push   rsp
   140039887:	push   r10
   140039889:	push   rsp
   14003988a:	push   rbp
   14003988b:	push   rax
   14003988c:	pop    rdi
   14003988d:	rex.X push rdx
   14003988f:	rex.RB
   140039890:	rex.B
   140039891:	rex.WXB push r8
   140039893:	rex.WRXB
   140039894:	rex.WB
   140039895:	rex.WRX push rsp
   140039897:	add    BYTE PTR [rbx+0x54],al
   14003989a:	push   rdx
   14003989b:	rex.WR pop rdi
   14003989d:	push   rbx
   14003989e:	push   rsp
   14003989f:	push   r10
   1400398a1:	push   rsp
   1400398a2:	push   rbp
   1400398a3:	push   rax
   1400398a4:	pop    rdi
   1400398a5:	rex.W
   1400398a6:	rex.WB
   1400398a7:	rex.WRX push rsp
   1400398a9:	add    BYTE PTR [rax],al
   1400398ab:	add    BYTE PTR [rax],al
   1400398ad:	add    BYTE PTR [rax],al
   1400398af:	add    BYTE PTR [rbx+0x54],al
   1400398b2:	push   rdx
   1400398b3:	rex.WR pop rdi
   1400398b5:	push   rbx
   1400398b6:	push   rsp
   1400398b7:	rex.WRXB push r8
   1400398b9:	pop    rdi
   1400398ba:	rex.W
   1400398bb:	rex.WB
   1400398bc:	rex.WRX push rsp
   1400398be:	add    BYTE PTR [rax],al
   1400398c0:	rex.XB push r12
   1400398c2:	push   rdx
   1400398c3:	rex.WR pop rdi
   1400398c5:	push   rdi
   1400398c6:	rex.RX push rax
   1400398c8:	pop    rdi
   1400398c9:	rex.WRB
   1400398ca:	rex.WRXB
   1400398cb:	rex.WRX
   1400398cc:	rex.WB push r12
   1400398ce:	rex.WRXB push r10
   1400398d0:	pop    rdi
   1400398d1:	rex.WB
   1400398d2:	rex.R
   1400398d3:	rex.WR
   1400398d4:	rex.RB pop r15
   1400398d6:	push   rsp
   1400398d7:	rex.WB
   1400398d8:	rex.WRB
   1400398d9:	add    BYTE PTR [r8],r8b
   1400398dc:	add    BYTE PTR [rax],al
   1400398de:	add    BYTE PTR [rax],al
   1400398e0:	rex.XB push r12
   1400398e2:	pop    rdi
   1400398e3:	rex.XB
   1400398e4:	rex.WRXB
   1400398e5:	rex.WRB push r8
   1400398e7:	rex.WRXB
   1400398e8:	rex.WRX
   1400398e9:	rex.RB
   1400398ea:	rex.WRX push rsp
   1400398ec:	pop    rdi
   1400398ed:	push   rsp
   1400398ee:	rex.RB push r11
   1400398f0:	push   rsp
   1400398f1:	pop    rdi
   1400398f2:	rex.WRB
   1400398f3:	rex.WRXB
   1400398f4:	rex.R
   1400398f5:	add    BYTE PTR [r8],r8b
   1400398f8:	rex.XB push r12
   1400398fa:	pop    rdi
   1400398fb:	rex.WRX
   1400398fc:	rex.WRXB pop r15
   1400398fe:	rex.RB push r10
   140039900:	push   rdx
   140039901:	rex.WRXB push r10
   140039903:	pop    rdi
   140039904:	rex.WRXB push r13
   140039906:	push   rsp
   140039907:	push   rax
   140039908:	push   rbp
   140039909:	push   rsp
   14003990a:	add    BYTE PTR [rax],al
   14003990c:	add    BYTE PTR [rax],al
   14003990e:	add    BYTE PTR [rax],al
   140039910:	rex.XB push r12
   140039912:	pop    rdi
   140039913:	rex.WRX
   140039914:	rex.WRXB pop r15
   140039916:	rex.WRX
   140039917:	rex.WRXB push r12
   140039919:	rex.WB
   14003991a:	rex.RX
   14003991b:	rex.WB
   14003991c:	rex.XB
   14003991d:	push   r12
   14003991f:	rex.WB
   140039920:	rex.WRXB
   140039921:	rex.WRX pop rdi
   140039923:	rex.WRXB push r13
   140039925:	push   rsp
   140039926:	push   rax
   140039927:	push   rbp
   140039928:	push   rsp
   140039929:	add    BYTE PTR [rax],al
   14003992b:	add    BYTE PTR [rax],al
   14003992d:	add    BYTE PTR [rax],al
   14003992f:	add    BYTE PTR [rbp+rax*2+0x42],al
   140039933:	push   rbp
   140039934:	rex.RXB pop r15
   140039936:	push   r8
   140039938:	rex.WB push r11
   14003993a:	add    BYTE PTR [rax],al
   14003993c:	add    BYTE PTR [rax],al
   14003993e:	add    BYTE PTR [rax],al
   140039940:	rex.R
   140039941:	rex.RB
   140039942:	rex.X push rbp
   140039944:	rex.RXB pop r15
   140039946:	push   r13
   140039948:	push   rsp
   140039949:	rex.W add BYTE PTR [rax],al
   14003994c:	add    BYTE PTR [rax],al
   14003994e:	add    BYTE PTR [rax],al
   140039950:	rex.R
   140039951:	rex.RB
   140039952:	rex.X push rbp
   140039954:	rex.RXB pop r15
   140039956:	rex.XB
   140039957:	rex.B
   140039958:	rex.XB
   140039959:	rex.W
   14003995a:	add    BYTE PTR [r8],r8b
   14003995d:	add    BYTE PTR [rax],al
   14003995f:	add    BYTE PTR [rbp+rax*2+0x42],al
   140039963:	push   rbp
   140039964:	rex.RXB pop r15
   140039966:	rex.XB
   140039967:	rex.WRXB
   140039968:	rex.WRX
   140039969:	rex.WRX
   14003996a:	rex.RB
   14003996b:	rex.XB push r12
   14003996d:	add    BYTE PTR [rax],al
   14003996f:	add    BYTE PTR [rbp+rax*2+0x42],al
   140039973:	push   rbp
   140039974:	rex.RXB pop r15
   140039976:	rex.RB push r10
   140039978:	push   rdx
   140039979:	rex.WRXB push r10
   14003997b:	add    BYTE PTR [rax],al
   14003997d:	add    BYTE PTR [rax],al
   14003997f:	add    BYTE PTR [rbp+rax*2+0x42],al
   140039983:	push   rbp
   140039984:	rex.RXB pop r15
   140039986:	rex.RX
   140039987:	rex.WB
   140039988:	rex.WR push rsp
   14003998a:	rex.RB push r10
   14003998c:	add    BYTE PTR [rax],al
   14003998e:	add    BYTE PTR [rax],al
   140039990:	rex.R
   140039991:	rex.RB
   140039992:	rex.X push rbp
   140039994:	rex.RXB pop r15
   140039996:	rex.WB
   140039997:	push   r11
   140039999:	rex.WR
   14003999a:	rex.WRXB
   14003999b:	rex.RXB add BYTE PTR [r8],r8b
   14003999e:	add    BYTE PTR [rax],al
   1400399a0:	rex.R
   1400399a1:	rex.RB
   1400399a2:	rex.X push rbp
   1400399a4:	rex.RXB pop r15
   1400399a6:	rex.WXB
   1400399a7:	add    BYTE PTR [r8],al
   1400399aa:	add    BYTE PTR [rax],al
   1400399ac:	add    BYTE PTR [rax],al
   1400399ae:	add    BYTE PTR [rax],al
   1400399b0:	rex.R
   1400399b1:	rex.RB
   1400399b2:	rex.X push rbp
   1400399b4:	rex.RXB pop r15
   1400399b6:	rex.WRB
   1400399b7:	rex.WB push r11
   1400399b9:	rex.XB add BYTE PTR [r8],al
   1400399bc:	add    BYTE PTR [rax],al
   1400399be:	add    BYTE PTR [rax],al
   1400399c0:	rex.R
   1400399c1:	rex.RB
   1400399c2:	rex.X push rbp
   1400399c4:	rex.RXB pop r15
   1400399c6:	push   rax
   1400399c7:	push   rdx
   1400399c8:	rex.WRXB push r12
   1400399ca:	rex.WRXB
   1400399cb:	rex.XB
   1400399cc:	rex.WRXB
   1400399cd:	rex.WR add BYTE PTR [rax],r8b
   1400399d0:	rex.R
   1400399d1:	rex.RB
   1400399d2:	rex.X push rbp
   1400399d4:	rex.RXB pop r15
   1400399d6:	push   rdx
   1400399d7:	rex.RB
   1400399d8:	rex.B
   1400399d9:	rex.WR pop rdi
   1400399db:	rex.WR
   1400399dc:	rex.WRXB
   1400399dd:	rex.XB
   1400399de:	rex.WXB push r11
   1400399e0:	pop    rdi
   1400399e1:	rex.RX
   1400399e2:	rex.WRXB push r10
   1400399e4:	pop    rdi
   1400399e5:	push   rdx
   1400399e6:	rex.B
   1400399e7:	rex.WRX
   1400399e8:	rex.RXB
   1400399e9:	rex.RB pop r15
   1400399eb:	rex.XB
   1400399ec:	add    BYTE PTR [r8],r8b
   1400399ef:	add    BYTE PTR [rbp+rax*2+0x42],al
   1400399f3:	push   rbp
   1400399f4:	rex.RXB pop r15
   1400399f6:	push   rdx
   1400399f7:	rex.RB push r9
   1400399f9:	push   rbp
   1400399fa:	rex.RB push r11
   1400399fc:	push   rsp
   1400399fd:	push   rbx
   1400399fe:	add    BYTE PTR [rax],al
   140039a00:	rex.R
   140039a01:	rex.RB
   140039a02:	rex.X push rbp
   140039a04:	rex.RXB pop r15
   140039a06:	push   rdx
   140039a07:	rex.RB push r11
   140039a09:	push   rsp
   140039a0a:	rex.WRXB push r10
   140039a0c:	rex.RB pop r15
   140039a0e:	rex.R
   140039a0f:	push   r12
   140039a11:	add    BYTE PTR [r8],al
   140039a14:	add    BYTE PTR [rax],al
   140039a16:	add    BYTE PTR [rax],al
   140039a18:	rex.R
   140039a19:	rex.RB
   140039a1a:	rex.X push rbp
   140039a1c:	rex.RXB pop r15
   140039a1e:	push   rdx
   140039a1f:	push   rax
   140039a20:	rex.XB pop r15
   140039a22:	push   rbp
   140039a23:	push   rbx
   140039a24:	rex.RB push r10
   140039a26:	add    BYTE PTR [rax],al
   140039a28:	rex.R
   140039a29:	rex.RB
   140039a2a:	rex.X push rbp
   140039a2c:	rex.RXB pop r15
   140039a2e:	push   rbx
   140039a2f:	push   rbx
   140039a30:	rex.WR add BYTE PTR [rax],r8b
   140039a33:	add    BYTE PTR [rax],al
   140039a35:	add    BYTE PTR [rax],al
   140039a37:	add    BYTE PTR [rbp+rax*2+0x42],al
   140039a3b:	push   rbp
   140039a3c:	rex.RXB pop r15
   140039a3e:	push   rbx
   140039a3f:	push   rsp
   140039a40:	push   r12
   140039a42:	push   rbx
   140039a43:	add    BYTE PTR [rax],al
   140039a45:	add    BYTE PTR [rax],al
   140039a47:	add    BYTE PTR [rbp+rax*2+0x42],al
   140039a4b:	push   rbp
   140039a4c:	rex.RXB pop r15
   140039a4e:	push   rsp
   140039a4f:	rex.WB
   140039a50:	rex.WRB
   140039a51:	add    BYTE PTR [r8],r8b
   140039a54:	add    BYTE PTR [rax],al
   140039a56:	add    BYTE PTR [rax],al
   140039a58:	rex.R
   140039a59:	rex.RB
   140039a5a:	rex.X push rbp
   140039a5c:	rex.RXB pop r15
   140039a5e:	push   rsp
   140039a5f:	rex.WB
   140039a60:	rex.WRB
   140039a61:	rex.RB push r11
   140039a63:	push   rsp
   140039a64:	rex.B
   140039a65:	rex.WRB push r8
   140039a67:	add    BYTE PTR [rbp+rax*2+0x42],al
   140039a6b:	push   rbp
   140039a6c:	rex.RXB pop r15
   140039a6e:	push   rbp
   140039a6f:	push   rbx
   140039a70:	rex.RB push r10
   140039a72:	push   rbx
   140039a73:	add    BYTE PTR [rax],al
   140039a75:	add    BYTE PTR [rax],al
   140039a77:	add    BYTE PTR [rbp+rax*2+0x42],al
   140039a7b:	push   rbp
   140039a7c:	rex.RXB pop r15
   140039a7e:	push   rdi
   140039a7f:	xor    eax,DWORD PTR [rsi+0x49]
   140039a82:	rex.WR push rsp
   140039a84:	rex.RB push r10
   140039a86:	pop    rdi
   140039a87:	rex.WB
   140039a88:	rex.WRX
   140039a89:	rex.WB push r12
   140039a8b:	pop    rdi
   140039a8c:	rex.X push rdx
   140039a8e:	rex.RB
   140039a8f:	rex.B
   140039a90:	rex.WXB push r8
   140039a92:	rex.WRXB
   140039a93:	rex.WB
   140039a94:	rex.WRX push rsp
   140039a96:	add    BYTE PTR [rax],al
   140039a98:	rex.R
   140039a99:	rex.RB
   140039a9a:	rex.X push rbp
   140039a9c:	rex.RXB pop r15
   140039a9e:	push   rdi
   140039a9f:	rex.RB
   140039aa0:	rex.X
   140039aa1:	rex.RX
   140039aa2:	rex.WR push rsp
   140039aa4:	add    BYTE PTR [rax],al
   140039aa6:	add    BYTE PTR [rax],al
   140039aa8:	rex.R
   140039aa9:	rex.RB
   140039aaa:	rex.RX
   140039aab:	push   r13
   140039aad:	rex.WR push rsp
   140039aaf:	pop    rdi
   140039ab0:	push   rdx
   140039ab1:	rex.RB
   140039ab2:	rex.RXB
   140039ab3:	rex.WB push r11
   140039ab5:	push   rsp
   140039ab6:	push   rdx
   140039ab7:	push   r12
   140039ab9:	rex.WB
   140039aba:	rex.WRXB
   140039abb:	rex.WRX pop rdi
   140039abd:	rex.RB pop r8
   140039abf:	push   rax
   140039ac0:	rex.WB push r10
   140039ac2:	push   r12
   140039ac4:	rex.WB
   140039ac5:	rex.WRXB
   140039ac6:	rex.WRX pop rdi
   140039ac8:	push   rsi
   140039ac9:	rex.B
   140039aca:	rex.WR push rbp
   140039acc:	add    BYTE PTR [r8],r8b
   140039acf:	add    BYTE PTR [rbp+rax*2+0x4c],al
   140039ad3:	pop    r9
   140039ad5:	pop    rdi
   140039ad6:	rex.WRXB
   140039ad7:	rex.WRX pop rdi
   140039ad9:	rex.WB
   140039ada:	rex.R
   140039adb:	rex.RB
   140039adc:	rex.WRX push rsp
   140039ade:	rex.WB
   140039adf:	rex.RX pop rcx
   140039ae1:	add    BYTE PTR [rax],al
   140039ae3:	add    BYTE PTR [rax],al
   140039ae5:	add    BYTE PTR [rax],al
   140039ae7:	add    BYTE PTR [rbp+rax*2+0x4c],al
   140039aeb:	pop    r9
   140039aed:	pop    rdi
   140039aee:	rex.WRXB
   140039aef:	rex.WRX pop rdi
   140039af1:	push   rax
   140039af2:	rex.WRXB push r11
   140039af4:	push   rsp
   140039af5:	pop    rdi
   140039af6:	push   rdx
   140039af7:	rex.RB push r11
   140039af9:	push   rsp
   140039afa:	rex.WRXB push r10
   140039afc:	add    BYTE PTR [r8],r8b
   140039aff:	add    BYTE PTR [rbp+rax*2+0x4c],al
   140039b03:	pop    r9
   140039b05:	pop    rdi
   140039b06:	rex.WRXB
   140039b07:	rex.WRX pop rdi
   140039b09:	push   rax
   140039b0a:	rex.WRXB push r11
   140039b0c:	push   rsp
   140039b0d:	pop    rdi
   140039b0e:	push   rbx
   140039b0f:	rex.WRX
   140039b10:	push   r8
   140039b12:	push   rbx
   140039b13:	rex.W
   140039b14:	rex.WRXB push r12
   140039b16:	add    BYTE PTR [rax],al
   140039b18:	rex.R
   140039b19:	rex.RB
   140039b1a:	rex.WR
   140039b1b:	pop    r9
   140039b1d:	pop    rdi
   140039b1e:	rex.WRXB
   140039b1f:	rex.WRX pop rdi
   140039b21:	push   rax
   140039b22:	push   rdx
   140039b23:	rex.RB push r8
   140039b25:	push   r10
   140039b27:	rex.RB pop r15
   140039b29:	push   rbx
   140039b2a:	rex.WRX
   140039b2b:	push   r8
   140039b2d:	push   rbx
   140039b2e:	rex.W
   140039b2f:	rex.WRXB push r12
   140039b31:	add    BYTE PTR [rax],al
   140039b33:	add    BYTE PTR [rax],al
   140039b35:	add    BYTE PTR [rax],al
   140039b37:	add    BYTE PTR [rcx+rcx*2+0x41],al
   140039b3b:	rex.WR
   140039b3c:	rex.WRXB
   140039b3d:	rex.RXB pop r15
   140039b3f:	rex.RB
   140039b40:	push   r10
   140039b42:	rex.WR pop rcx
   140039b44:	pop    rdi
   140039b45:	push   rbx
   140039b46:	push   rsp
   140039b47:	rex.B
   140039b48:	rex.RXB
   140039b49:	rex.RB pop r15
   140039b4b:	push   rsp
   140039b4c:	rex.WB
   140039b4d:	rex.WRB
   140039b4e:	rex.RB
   140039b4f:	rex.WRXB push r13
   140039b51:	push   rsp
   140039b52:	add    BYTE PTR [rax],al
   140039b54:	add    BYTE PTR [rax],al
   140039b56:	add    BYTE PTR [rax],al
   140039b58:	rex.R
   140039b59:	rex.WB
   140039b5a:	rex.B
   140039b5b:	rex.WR
   140039b5c:	rex.WRXB
   140039b5d:	rex.RXB pop r15
   140039b5f:	rex.RB pop r8
   140039b61:	push   rax
   140039b62:	rex.WB push r10
   140039b64:	push   r12
   140039b66:	rex.WB
   140039b67:	rex.WRXB
   140039b68:	rex.WRX pop rdi
   140039b6a:	rex.XB
   140039b6b:	rex.W
   140039b6c:	rex.RB
   140039b6d:	rex.XB
   140039b6e:	rex.WXB pop r15
   140039b70:	rex.WB
   140039b71:	rex.WRX push rsp
   140039b73:	rex.RB push r10
   140039b75:	push   rsi
   140039b76:	rex.B
   140039b77:	rex.WR add BYTE PTR [rax],r8b
   140039b7a:	add    BYTE PTR [rax],al
   140039b7c:	add    BYTE PTR [rax],al
   140039b7e:	add    BYTE PTR [rax],al
   140039b80:	rex.R
   140039b81:	rex.WB
   140039b82:	rex.B
   140039b83:	rex.WR
   140039b84:	rex.WRXB
   140039b85:	rex.RXB pop r15
   140039b87:	rex.WB
   140039b88:	rex.R
   140039b89:	rex.WR
   140039b8a:	rex.RB pop r15
   140039b8c:	push   rsp
   140039b8d:	rex.WB
   140039b8e:	rex.WRB
   140039b8f:	rex.RB
   140039b90:	rex.WRXB push r13
   140039b92:	push   rsp
   140039b93:	add    BYTE PTR [rax],al
   140039b95:	add    BYTE PTR [rax],al
   140039b97:	add    BYTE PTR [rcx+rcx*2+0x53],al
   140039b9b:	rex.B
   140039b9c:	rex.X
   140039b9d:	rex.WR
   140039b9e:	rex.RB pop r15
   140039ba0:	push   rdi
   140039ba1:	push   r12
   140039ba3:	push   rbx
   140039ba4:	rex.WRXB
   140039ba5:	rex.WRX pop rdi
   140039ba7:	rex.W
   140039ba8:	rex.B
   140039ba9:	rex.WRX
   140039baa:	rex.R
   140039bab:	rex.WR
   140039bac:	rex.RB push r10
   140039bae:	add    BYTE PTR [rax],al
   140039bb0:	rex.R
   140039bb1:	rex.WRX push rbx
   140039bb3:	pop    rdi
   140039bb4:	rex.B
   140039bb5:	rex.WR
   140039bb6:	rex.RB push r10
   140039bb8:	push   rsp
   140039bb9:	add    BYTE PTR [rax],al
   140039bbb:	add    BYTE PTR [rax],al
   140039bbd:	add    BYTE PTR [rax],al
   140039bbf:	add    BYTE PTR [rsi+rcx*2+0x53],al
   140039bc3:	pop    rdi
   140039bc4:	rex.XB
   140039bc5:	rex.W
   140039bc6:	rex.B
   140039bc7:	rex.WRX
   140039bc8:	rex.RXB
   140039bc9:	rex.RB
   140039bca:	rex.R pop rdi
   140039bcc:	push   rax
   140039bcd:	rex.B
   140039bce:	rex.XB
   140039bcf:	rex.WXB
   140039bd0:	rex.RB push r12
   140039bd2:	add    BYTE PTR [rax],al
   140039bd4:	add    BYTE PTR [rax],al
   140039bd6:	add    BYTE PTR [rax],al
   140039bd8:	rex.R
   140039bd9:	rex.WRX push rbx
   140039bdb:	pop    rdi
   140039bdc:	rex.R
   140039bdd:	rex.WB push r11
   140039bdf:	rex.XB
   140039be0:	push   r10
   140039be2:	rex.R pop rdi
   140039be4:	push   rax
   140039be5:	rex.RB push r10
   140039be7:	rex.WRB
   140039be8:	rex.WB push r11
   140039bea:	push   rbx
   140039beb:	rex.WB
   140039bec:	rex.WRXB
   140039bed:	rex.WRX add BYTE PTR [rax],r8b
   140039bf0:	rex.R
   140039bf1:	rex.WRX push rbx
   140039bf3:	pop    rdi
   140039bf4:	rex.R push rdx
   140039bf6:	rex.WRXB push r8
   140039bf8:	push   rax
   140039bf9:	rex.RB
   140039bfa:	rex.R pop rdi
   140039bfc:	push   rax
   140039bfd:	rex.B
   140039bfe:	rex.XB
   140039bff:	rex.WXB
   140039c00:	rex.RB push r12
   140039c02:	add    BYTE PTR [rax],al
   140039c04:	add    BYTE PTR [rax],al
   140039c06:	add    BYTE PTR [rax],al
   140039c08:	rex.R
   140039c09:	rex.WRX push rbx
   140039c0b:	pop    rdi
   140039c0c:	rex.R push rbp
   140039c0e:	rex.WRB push r8
   140039c10:	pop    rdi
   140039c11:	rex.B
   140039c12:	rex.WR
   140039c13:	rex.WR pop rdi
   140039c15:	push   rax
   140039c16:	rex.B
   140039c17:	rex.XB
   140039c18:	rex.WXB
   140039c19:	rex.RB push r12
   140039c1b:	push   rbx
   140039c1c:	add    BYTE PTR [rax],al
   140039c1e:	add    BYTE PTR [rax],al
   140039c20:	rex.R
   140039c21:	rex.WRX push rbx
   140039c23:	pop    rdi
   140039c24:	rex.R push rbp
   140039c26:	rex.WRB push r8
   140039c28:	pop    rdi
   140039c29:	rex.B
   140039c2a:	rex.WR
   140039c2b:	rex.WR pop rdi
   140039c2d:	push   rax
   140039c2e:	push   r10
   140039c30:	push   rbx
   140039c31:	rex.WB
   140039c32:	rex.WRX
   140039c33:	rex.RXB pop r15
   140039c35:	rex.R
   140039c36:	rex.RB push r12
   140039c38:	rex.B
   140039c39:	rex.WB
   140039c3a:	rex.WR push rbx
   140039c3c:	add    BYTE PTR [rax],al
   140039c3e:	add    BYTE PTR [rax],al
   140039c40:	rex.R
   140039c41:	rex.WRX push rbx
   140039c43:	pop    rdi
   140039c44:	rex.RB push r10
   140039c46:	push   rdx
   140039c47:	rex.WRXB push r10
   140039c49:	add    BYTE PTR [rax],al
   140039c4b:	add    BYTE PTR [rax],al
   140039c4d:	add    BYTE PTR [rax],al
   140039c4f:	add    BYTE PTR [rsi+rcx*2+0x53],al
   140039c53:	pop    rdi
   140039c54:	rex.RX push rbp
   140039c56:	rex.WRX
   140039c57:	rex.XB push r12
   140039c59:	rex.WB
   140039c5a:	rex.WRXB
   140039c5b:	rex.WRX pop rdi
   140039c5d:	rex.RB
   140039c5e:	rex.WRX push rsp
   140039c60:	push   rdx
   140039c61:	pop    rcx
   140039c62:	add    BYTE PTR [rax],al
   140039c64:	add    BYTE PTR [rax],al
   140039c66:	add    BYTE PTR [rax],al
   140039c68:	rex.R
   140039c69:	rex.WRX push rbx
   140039c6b:	pop    rdi
   140039c6c:	rex.WB
   140039c6d:	rex.WRX
   140039c6e:	rex.WB push r12
	...
   140039c78:	rex.R
   140039c79:	rex.WRX push rbx
   140039c7b:	pop    rdi
   140039c7c:	rex.WB
   140039c7d:	rex.WRX push rsp
   140039c7f:	push   rdx
   140039c80:	push   rbp
   140039c81:	push   rbx
   140039c82:	rex.WB
   140039c83:	rex.WRXB
   140039c84:	rex.WRX pop rdi
   140039c86:	rex.R
   140039c87:	rex.RB push r12
   140039c89:	rex.RB
   140039c8a:	rex.XB push r12
   140039c8c:	rex.WB
   140039c8d:	rex.WRXB
   140039c8e:	rex.WRX add BYTE PTR [rsi+r9*2+0x53],r8b
   140039c93:	pop    rdi
   140039c94:	rex.WRB
   140039c95:	pop    r8
   140039c97:	pop    rdi
   140039c98:	push   rcx
   140039c99:	push   rbp
   140039c9a:	rex.RB push r11
   140039c9c:	push   rsp
   140039c9d:	rex.WB
   140039c9e:	rex.WRXB
   140039c9f:	rex.WRX push rbx
   140039ca1:	pop    rdi
   140039ca2:	push   rax
   140039ca3:	rex.RB push r10
   140039ca5:	pop    rdi
   140039ca6:	push   rcx
   140039ca7:	push   rbp
   140039ca8:	rex.RB push r10
   140039caa:	pop    rcx
   140039cab:	add    BYTE PTR [rax],al
   140039cad:	add    BYTE PTR [rax],al
   140039caf:	add    BYTE PTR [rsi+rcx*2+0x53],al
   140039cb3:	pop    rdi
   140039cb4:	rex.WRX
   140039cb5:	rex.RB push r15
   140039cb7:	pop    rdi
   140039cb8:	push   rax
   140039cb9:	rex.RB push r10
   140039cbb:	rex.WRB
   140039cbc:	rex.WB push r11
   140039cbe:	push   rbx
   140039cbf:	rex.WB
   140039cc0:	rex.WRXB
   140039cc1:	rex.WRX add BYTE PTR [rax],r8b
   140039cc4:	add    BYTE PTR [rax],al
   140039cc6:	add    BYTE PTR [rax],al
   140039cc8:	rex.R
   140039cc9:	rex.WRX push rbx
   140039ccb:	pop    rdi
   140039ccc:	rex.WRX
   140039ccd:	rex.WRXB push r12
   140039ccf:	rex.WB
   140039cd0:	rex.RX
   140039cd1:	rex.WB
   140039cd2:	rex.XB
   140039cd3:	push   r12
   140039cd5:	rex.WB
   140039cd6:	rex.WRXB
   140039cd7:	rex.WRX add BYTE PTR [rax],r8b
   140039cda:	add    BYTE PTR [rax],al
   140039cdc:	add    BYTE PTR [rax],al
   140039cde:	add    BYTE PTR [rax],al
   140039ce0:	rex.R
   140039ce1:	rex.WRX push rbx
   140039ce3:	pop    rdi
   140039ce4:	push   rbx
   140039ce5:	rex.W push rbp
   140039ce7:	push   rsp
   140039ce8:	rex.R
   140039ce9:	rex.WRXB push r15
   140039ceb:	rex.WRX add BYTE PTR [rax],r8b
   140039cee:	add    BYTE PTR [rax],al
   140039cf0:	rex.R
   140039cf1:	rex.WRX push rbx
   140039cf3:	pop    rdi
   140039cf4:	push   rsp
   140039cf5:	push   rdx
   140039cf6:	rex.B
   140039cf7:	rex.WRX push rbx
   140039cf9:	rex.WR
   140039cfa:	push   r12
   140039cfc:	rex.WB
   140039cfd:	rex.WRXB
   140039cfe:	rex.WRX pop rdi
   140039d00:	push   rsp
   140039d01:	rex.B
   140039d02:	rex.X
   140039d03:	rex.WR
   140039d04:	add    BYTE PTR [r8],r8b
   140039d07:	add    BYTE PTR [rdx+rdx*2+0x4f],al
   140039d0b:	push   rax
   140039d0c:	pop    rdi
   140039d0d:	rex.XB
   140039d0e:	rex.WRXB
   140039d0f:	rex.WRX push rsp
   140039d11:	rex.WB
   140039d12:	rex.WRX push rbp
   140039d14:	push   r12
   140039d16:	rex.WB
   140039d17:	rex.WRXB
   140039d18:	rex.WRX pop rdi
   140039d1a:	rex.WR
   140039d1b:	rex.WB
   140039d1c:	rex.WRX
   140039d1d:	rex.RB push r11
   140039d1f:	add    BYTE PTR [rbp+rdx*2+0x4d],al
   140039d23:	push   rax
   140039d24:	pop    rdi
   140039d25:	rex.WR
   140039d26:	rex.RB
   140039d27:	rex.B
   140039d28:	rex.WXB push r11
   140039d2a:	add    BYTE PTR [rax],al
   140039d2c:	add    BYTE PTR [rax],al
   140039d2e:	add    BYTE PTR [rax],al
   140039d30:	rex.R push rbp
   140039d32:	rex.WRB push r8
   140039d34:	pop    rdi
   140039d35:	rex.WRXB
   140039d36:	rex.WRX pop rdi
   140039d38:	push   rax
   140039d39:	push   rdx
   140039d3a:	rex.WRXB
   140039d3b:	rex.XB
   140039d3c:	rex.RB push r11
   140039d3e:	push   rbx
   140039d3f:	pop    rdi
   140039d40:	push   rbx
   140039d41:	push   rsp
   140039d42:	rex.WRXB push r8
   140039d44:	add    BYTE PTR [rax],al
   140039d46:	add    BYTE PTR [rax],al
   140039d48:	rex.RB
   140039d49:	rex.WRB push r8
   140039d4b:	pop    rdi
   140039d4c:	rex.B
   140039d4d:	rex.XB
   140039d4e:	rex.XB push r13
   140039d50:	rex.WRB push r13
   140039d52:	rex.WR
   140039d53:	push   r12
   140039d55:	rex.WRXB push r10
   140039d57:	pop    rdi
   140039d58:	rex.WB
   140039d59:	rex.WRX push rsp
   140039d5b:	rex.RB push r10
   140039d5d:	rex.WRB
   140039d5e:	rex.RB
   140039d5f:	rex.R
   140039d60:	rex.WB
   140039d61:	push   r12
   140039d63:	rex.RB pop r15
   140039d65:	rex.X push rbp
   140039d67:	rex.RX
   140039d68:	rex.RX
   140039d69:	rex.RB push r10
   140039d6b:	pop    rdi
   140039d6c:	push   rbx
   140039d6d:	rex.WB pop r10
   140039d6f:	add    BYTE PTR [r8],r8b
   140039d72:	add    BYTE PTR [rax],al
   140039d74:	add    BYTE PTR [rax],al
   140039d76:	add    BYTE PTR [rax],al
   140039d78:	rex.RB
   140039d79:	rex.WRB push r8
   140039d7b:	pop    rdi
   140039d7c:	rex.B
   140039d7d:	rex.XB
   140039d7e:	rex.XB push r13
   140039d80:	rex.WRB push r13
   140039d82:	rex.WR
   140039d83:	push   r12
   140039d85:	rex.WRXB push r10
   140039d87:	pop    rdi
   140039d88:	rex.WRB
   140039d89:	pop    r8
   140039d8b:	pop    rdi
   140039d8c:	rex.X
   140039d8d:	rex.B
   140039d8e:	rex.XB
   140039d8f:	rex.WXB
   140039d90:	rex.RXB push r10
   140039d92:	rex.WRXB push r13
   140039d94:	rex.WRX
   140039d95:	rex.R pop rdi
   140039d97:	push   rdi
   140039d98:	push   rdx
   140039d99:	rex.WB push r12
   140039d9b:	rex.RB push r11
   140039d9d:	add    BYTE PTR [rax],al
   140039d9f:	add    BYTE PTR [rbp+0x4d],al
   140039da2:	push   rax
   140039da3:	pop    rdi
   140039da4:	rex.B
   140039da5:	rex.R
   140039da6:	rex.R pop rdi
   140039da8:	rex.W push rdx
   140039daa:	rex.RB push r11
   140039dac:	push   rbp
   140039dad:	rex.WR push rsp
   140039daf:	pop    rdi
   140039db0:	rex.W
   140039db1:	rex.RB
   140039db2:	rex.B
   140039db3:	rex.R
   140039db4:	rex.RB push r10
   140039db6:	add    BYTE PTR [rax],al
   140039db8:	rex.RB
   140039db9:	rex.WRB push r8
   140039dbb:	pop    rdi
   140039dbc:	rex.X
   140039dbd:	rex.WR
   140039dbe:	rex.WRXB
   140039dbf:	rex.XB
   140039dc0:	rex.WXB pop r15
   140039dc2:	push   rax
   140039dc3:	push   r10
   140039dc5:	push   rsp
   140039dc6:	rex.WB
   140039dc7:	rex.B
   140039dc8:	rex.WR pop rdi
   140039dca:	rex.XB
   140039dcb:	rex.WRXB
   140039dcc:	rex.WRX push rsp
   140039dce:	rex.RB
   140039dcf:	rex.WRX push rsp
   140039dd1:	pop    rdi
   140039dd2:	rex.WB
   140039dd3:	rex.RX pop rdi
   140039dd5:	rex.WRX
   140039dd6:	rex.WRXB push r12
   140039dd8:	pop    rdi
   140039dd9:	push   rdx
   140039dda:	rex.RB push r9
   140039ddc:	push   rbp
   140039ddd:	rex.RB push r11
   140039ddf:	push   rsp
   140039de0:	rex.RB
   140039de1:	add    BYTE PTR [rax],r8b
   140039de4:	add    BYTE PTR [rax],al
   140039de6:	add    BYTE PTR [rax],al
   140039de8:	rex.RB
   140039de9:	rex.WRB push r8
   140039deb:	pop    rdi
   140039dec:	rex.XB
   140039ded:	rex.W
   140039dee:	rex.RB
   140039def:	rex.XB
   140039df0:	rex.WXB pop r15
   140039df2:	rex.RX
   140039df3:	rex.WB
   140039df4:	rex.WR
   140039df5:	rex.RB push r11
   140039df7:	pop    rdi
   140039df8:	push   rsi
   140039df9:	rex.RB push r10
   140039dfb:	push   rbx
   140039dfc:	rex.WB
   140039dfd:	rex.WRXB
   140039dfe:	rex.WRX push rbx
   140039e00:	pop    rdi
   140039e01:	rex.WB
   140039e02:	rex.WRX pop rdi
   140039e04:	rex.WRB push r11
   140039e06:	push   r14
   140039e08:	pop    rdi
   140039e09:	push   rbp
   140039e0a:	push   rax
   140039e0b:	rex.R
   140039e0c:	push   r12
   140039e0e:	add    BYTE PTR [r13+0x4d],r8b
   140039e12:	push   rax
   140039e13:	pop    rdi
   140039e14:	rex.R
   140039e15:	rex.WRXB
   140039e16:	rex.WRX push rsp
   140039e18:	pop    rdi
   140039e19:	rex.X
   140039e1a:	rex.WR
   140039e1b:	rex.WRXB
   140039e1c:	rex.XB
   140039e1d:	rex.WXB pop r15
   140039e1f:	rex.WRXB
   140039e20:	rex.WRX pop rdi
   140039e22:	rex.W push rsp
   140039e24:	rex.WRB
   140039e25:	rex.WR pop rdi
   140039e27:	rex.XB
   140039e28:	rex.WRXB
   140039e29:	rex.WRB
   140039e2a:	rex.RX
   140039e2b:	rex.WRXB push r10
   140039e2d:	push   rsp
   140039e2e:	rex.WB
   140039e2f:	rex.WRX
   140039e30:	rex.RXB pop r15
   140039e32:	rex.WB push r8
   140039e34:	pop    rdi
   140039e35:	push   rsi
   140039e36:	rex.WB
   140039e37:	rex.WRXB
   140039e38:	rex.WR
   140039e39:	push   r12
   140039e3b:	rex.WB
   140039e3c:	rex.WRXB
   140039e3d:	rex.WRX add BYTE PTR [rax],r8b
   140039e40:	rex.RB
   140039e41:	rex.WRB push r8
   140039e43:	pop    rdi
   140039e44:	rex.R
   140039e45:	rex.WRXB
   140039e46:	rex.WRX push rsp
   140039e48:	pop    rdi
   140039e49:	rex.R
   140039e4a:	rex.RB
   140039e4b:	rex.WR
   140039e4c:	rex.RB push r12
   140039e4e:	rex.RB pop r15
   140039e50:	rex.B
   140039e51:	rex.XB
   140039e52:	rex.XB push r13
   140039e54:	rex.WRB push r13
   140039e56:	rex.WR
   140039e57:	push   r12
   140039e59:	rex.WB
   140039e5a:	rex.WRXB
   140039e5b:	rex.WRX pop rdi
   140039e5d:	rex.RX
   140039e5e:	rex.WB
   140039e5f:	rex.WR
   140039e60:	rex.RB push r11
   140039e62:	add    BYTE PTR [rax],al
   140039e64:	add    BYTE PTR [rax],al
   140039e66:	add    BYTE PTR [rax],al
   140039e68:	rex.RB
   140039e69:	rex.WRB push r8
   140039e6b:	pop    rdi
   140039e6c:	rex.RX
   140039e6d:	rex.WRXB push r10
   140039e6f:	rex.XB
   140039e70:	rex.RB pop r15
   140039e72:	push   rdx
   140039e73:	rex.RB push r9
   140039e75:	push   rbp
   140039e76:	rex.RB push r11
   140039e78:	push   rsp
   140039e79:	rex.WB
   140039e7a:	rex.WRX
   140039e7b:	rex.RXB pop r15
   140039e7d:	rex.RX push rbp
   140039e7f:	rex.WR
   140039e80:	rex.WR pop rdi
   140039e82:	rex.XB
   140039e83:	rex.WRXB
   140039e84:	rex.WRX push rsp
   140039e86:	rex.RB
   140039e87:	rex.WRX push rsp
   140039e89:	add    BYTE PTR [rax],al
   140039e8b:	add    BYTE PTR [rax],al
   140039e8d:	add    BYTE PTR [rax],al
   140039e8f:	add    BYTE PTR [rbp+0x4d],al
   140039e92:	push   rax
   140039e93:	pop    rdi
   140039e94:	rex.WB
   140039e95:	rex.RXB
   140039e96:	rex.WRX
   140039e97:	rex.WRXB push r10
   140039e99:	rex.RB pop r15
   140039e9b:	push   rbx
   140039e9c:	rex.XB
   140039e9d:	rex.B
   140039e9e:	rex.WRX pop rdi
   140039ea0:	rex.RB push r10
   140039ea2:	push   rdx
   140039ea3:	rex.WRXB push r10
   140039ea5:	push   rbx
   140039ea6:	pop    rdi
   140039ea7:	push   rdi
   140039ea8:	rex.W
   140039ea9:	rex.RB
   140039eaa:	rex.WRX pop rdi
   140039eac:	push   rdx
   140039ead:	rex.RB push r9
   140039eaf:	push   rbp
   140039eb0:	rex.RB push r11
   140039eb2:	push   rsp
   140039eb3:	rex.WB
   140039eb4:	rex.WRX
   140039eb5:	rex.RXB pop r15
   140039eb7:	push   rax
   140039eb8:	push   r10
   140039eba:	push   rsp
   140039ebb:	rex.WB
   140039ebc:	rex.B
   140039ebd:	rex.WR pop rdi
   140039ebf:	rex.XB
   140039ec0:	rex.WRXB
   140039ec1:	rex.WRX push rsp
   140039ec3:	rex.RB
   140039ec4:	rex.WRX push rsp
   140039ec6:	add    BYTE PTR [rax],al
   140039ec8:	rex.RB
   140039ec9:	rex.WRB push r8
   140039ecb:	pop    rdi
   140039ecc:	rex.WB
   140039ecd:	rex.RXB
   140039ece:	rex.WRX
   140039ecf:	rex.WRXB push r10
   140039ed1:	rex.RB pop r15
   140039ed3:	push   rbp
   140039ed4:	push   rbx
   140039ed5:	rex.RB push r10
   140039ed7:	pop    rdi
   140039ed8:	rex.B
   140039ed9:	rex.RXB
   140039eda:	rex.RB
   140039edb:	rex.WRX push rsp
   140039edd:	pop    rdi
   140039ede:	rex.RX
   140039edf:	rex.WRXB push r10
   140039ee1:	pop    rdi
   140039ee2:	rex.W push rsp
   140039ee4:	rex.WRB
   140039ee5:	rex.WR pop rdi
   140039ee7:	rex.XB
   140039ee8:	rex.WRXB
   140039ee9:	rex.WRB
   140039eea:	rex.RX
   140039eeb:	rex.WRXB push r10
   140039eed:	push   rsp
   140039eee:	rex.WB
   140039eef:	rex.WRX
   140039ef0:	rex.RXB add BYTE PTR [r8],r8b
   140039ef3:	add    BYTE PTR [rax],al
   140039ef5:	add    BYTE PTR [rax],al
   140039ef7:	add    BYTE PTR [rbp+0x4d],al
   140039efa:	push   rax
   140039efb:	pop    rdi
   140039efc:	rex.WRB
   140039efd:	pop    r8
   140039eff:	pop    rdi
   140039f00:	rex.XB
   140039f01:	rex.WRXB
   140039f02:	rex.WRX
   140039f03:	rex.XB push r13
   140039f05:	push   rdx
   140039f06:	push   rdx
   140039f07:	rex.RB
   140039f08:	rex.WRX push rsp
   140039f0a:	pop    rdi
   140039f0b:	rex.WB
   140039f0c:	rex.WRX push rbx
   140039f0e:	push   rax
   140039f0f:	rex.RB
   140039f10:	rex.XB push r12
   140039f12:	rex.WB
   140039f13:	rex.WRXB
   140039f14:	rex.WRX pop rdi
   140039f16:	push   rbx
   140039f17:	rex.RB push r11
   140039f19:	push   rbx
   140039f1a:	rex.WB
   140039f1b:	rex.WRXB
   140039f1c:	rex.WRX push rbx
   140039f1e:	add    BYTE PTR [rax],al
   140039f20:	rex.RB
   140039f21:	rex.WRB push r8
   140039f23:	pop    rdi
   140039f24:	rex.WRB
   140039f25:	pop    r8
   140039f27:	pop    rdi
   140039f28:	push   rbx
   140039f29:	rex.XB
   140039f2a:	rex.B
   140039f2b:	rex.WRX
   140039f2c:	rex.WRX
   140039f2d:	rex.RB push r10
   140039f2f:	pop    rdi
   140039f30:	push   rsp
   140039f31:	rex.W push rdx
   140039f33:	rex.RB
   140039f34:	rex.B
   140039f35:	rex.R push rbx
   140039f37:	pop    rdi
   140039f38:	rex.XB
   140039f39:	rex.WRXB push r13
   140039f3b:	rex.WRX push rsp
   140039f3d:	pop    rdi
   140039f3e:	rex.RX
   140039f3f:	rex.WRXB push r10
   140039f41:	pop    rdi
   140039f42:	push   rax
   140039f43:	push   rdx
   140039f44:	rex.WB
   140039f45:	rex.WRXB push r10
   140039f47:	rex.WB push r12
   140039f49:	pop    rcx
   140039f4a:	pop    rdi
   140039f4b:	rex.W
   140039f4c:	rex.WB
   140039f4d:	rex.RXB
   140039f4e:	rex.W add BYTE PTR [rbp+0x4d],al
   140039f52:	push   rax
   140039f53:	pop    rdi
   140039f54:	rex.WRB
   140039f55:	pop    r8
   140039f57:	pop    rdi
   140039f58:	push   rbx
   140039f59:	rex.XB
   140039f5a:	rex.B
   140039f5b:	rex.WRX
   140039f5c:	rex.WRX
   140039f5d:	rex.RB push r10
   140039f5f:	pop    rdi
   140039f60:	push   rsp
   140039f61:	rex.W push rdx
   140039f63:	rex.RB
   140039f64:	rex.B
   140039f65:	rex.R push rbx
   140039f67:	pop    rdi
   140039f68:	rex.XB
   140039f69:	rex.WRXB push r13
   140039f6b:	rex.WRX push rsp
   140039f6d:	pop    rdi
   140039f6e:	rex.RX
   140039f6f:	rex.WRXB push r10
   140039f71:	pop    rdi
   140039f72:	push   rax
   140039f73:	push   rdx
   140039f74:	rex.WB
   140039f75:	rex.WRXB push r10
   140039f77:	rex.WB push r12
   140039f79:	pop    rcx
   140039f7a:	pop    rdi
   140039f7b:	rex.WR
   140039f7c:	rex.WRXB push r15
   140039f7e:	add    BYTE PTR [rax],al
   140039f80:	rex.RB
   140039f81:	rex.WRB push r8
   140039f83:	pop    rdi
   140039f84:	rex.WRB
   140039f85:	pop    r8
   140039f87:	pop    rdi
   140039f88:	push   rbx
   140039f89:	rex.XB
   140039f8a:	rex.B
   140039f8b:	rex.WRX
   140039f8c:	rex.WRX
   140039f8d:	rex.RB push r10
   140039f8f:	pop    rdi
   140039f90:	push   rsp
   140039f91:	rex.W push rdx
   140039f93:	rex.RB
   140039f94:	rex.B
   140039f95:	rex.R push rbx
   140039f97:	pop    rdi
   140039f98:	rex.XB
   140039f99:	rex.WRXB push r13
   140039f9b:	rex.WRX push rsp
   140039f9d:	pop    rdi
   140039f9e:	rex.RX
   140039f9f:	rex.WRXB push r10
   140039fa1:	pop    rdi
   140039fa2:	push   rax
   140039fa3:	push   rdx
   140039fa4:	rex.WB
   140039fa5:	rex.WRXB push r10
   140039fa7:	rex.WB push r12
   140039fa9:	pop    rcx
   140039faa:	pop    rdi
   140039fab:	rex.WRX
   140039fac:	rex.WRXB push r10
   140039fae:	rex.WRB
   140039faf:	rex.B
   140039fb0:	rex.WR add BYTE PTR [rax],r8b
   140039fb3:	add    BYTE PTR [rax],al
   140039fb5:	add    BYTE PTR [rax],al
   140039fb7:	add    BYTE PTR [rbp+0x4d],al
   140039fba:	push   rax
   140039fbb:	pop    rdi
   140039fbc:	rex.WRB
   140039fbd:	pop    r8
   140039fbf:	pop    rdi
   140039fc0:	push   rbx
   140039fc1:	rex.WB pop r10
   140039fc3:	rex.RB pop r15
   140039fc5:	rex.RX
   140039fc6:	rex.WRXB push r10
   140039fc8:	pop    rdi
   140039fc9:	rex.RX
   140039fca:	rex.WB
   140039fcb:	rex.WRX
   140039fcc:	rex.B
   140039fcd:	rex.WR pop rdi
   140039fcf:	rex.WB
   140039fd0:	rex.WRX push rbx
   140039fd2:	push   rax
   140039fd3:	rex.RB
   140039fd4:	rex.XB push r12
   140039fd6:	rex.WB
   140039fd7:	rex.WRXB
   140039fd8:	rex.WRX pop rdi
   140039fda:	push   rax
   140039fdb:	push   rdx
   140039fdc:	rex.WB
   140039fdd:	rex.WRXB push r10
   140039fdf:	rex.WB push r12
   140039fe1:	pop    rcx
   140039fe2:	pop    rdi
   140039fe3:	rex.W
   140039fe4:	rex.WB
   140039fe5:	rex.RXB
   140039fe6:	rex.W add BYTE PTR [rbp+0x4d],al
   140039fea:	push   rax
   140039feb:	pop    rdi
   140039fec:	rex.WRB
   140039fed:	pop    r8
   140039fef:	pop    rdi
   140039ff0:	push   rbx
   140039ff1:	rex.WB pop r10
   140039ff3:	rex.RB pop r15
   140039ff5:	rex.RX
   140039ff6:	rex.WRXB push r10
   140039ff8:	pop    rdi
   140039ff9:	rex.RX
   140039ffa:	rex.WB
   140039ffb:	rex.WRX
   140039ffc:	rex.B
   140039ffd:	rex.WR pop rdi
   140039fff:	rex.WB
   14003a000:	rex.WRX push rbx
   14003a002:	push   rax
   14003a003:	rex.RB
   14003a004:	rex.XB push r12
   14003a006:	rex.WB
   14003a007:	rex.WRXB
   14003a008:	rex.WRX pop rdi
   14003a00a:	push   rax
   14003a00b:	push   rdx
   14003a00c:	rex.WB
   14003a00d:	rex.WRXB push r10
   14003a00f:	rex.WB push r12
   14003a011:	pop    rcx
   14003a012:	pop    rdi
   14003a013:	rex.WRX
   14003a014:	rex.WRXB push r10
   14003a016:	rex.WRB
   14003a017:	rex.B
   14003a018:	rex.WR add BYTE PTR [rax],r8b
   14003a01b:	add    BYTE PTR [rax],al
   14003a01d:	add    BYTE PTR [rax],al
   14003a01f:	add    BYTE PTR [rbp+0x4d],al
   14003a022:	push   rax
   14003a023:	pop    rdi
   14003a024:	rex.WRB
   14003a025:	rex.WB
   14003a026:	rex.WRX pop rdi
   14003a028:	rex.WRX
   14003a029:	rex.RB push r15
   14003a02b:	pop    rdi
   14003a02c:	rex.XB
   14003a02d:	rex.WRXB
   14003a02e:	rex.WRX push rsp
   14003a030:	rex.RB
   14003a031:	rex.WRX push rsp
   14003a033:	pop    rdi
   14003a034:	rex.RX
   14003a035:	rex.WRXB push r10
   14003a037:	pop    rdi
   14003a038:	push   rax
   14003a039:	push   r10
   14003a03b:	push   rsp
   14003a03c:	rex.WB
   14003a03d:	rex.B
   14003a03e:	rex.WR pop rdi
   14003a040:	rex.WB
   14003a041:	rex.WRX push rbx
   14003a043:	push   rax
   14003a044:	rex.RB
   14003a045:	rex.XB push r12
   14003a047:	rex.WB
   14003a048:	rex.WRXB
   14003a049:	rex.WRX pop rdi
   14003a04b:	rex.RX
   14003a04c:	push   r11
   14003a04e:	push   rsp
   14003a04f:	pop    rdi
   14003a050:	push   rsp
   14003a051:	push   rdx
   14003a052:	rex.WB
   14003a053:	rex.XB
   14003a054:	rex.WXB
   14003a055:	rex.WR
   14003a056:	rex.WB
   14003a057:	rex.WRX
   14003a058:	rex.RXB pop r15
   14003a05a:	rex.X
   14003a05b:	rex.RB push r11
   14003a05d:	push   rsp
   14003a05e:	pop    rdi
   14003a05f:	push   rax
   14003a060:	rex.RB push r10
   14003a062:	rex.RX add BYTE PTR [rax],r8b
	...
   14003a06d:	add    BYTE PTR [rax],al
   14003a06f:	add    BYTE PTR [rbp+0x4d],al
   14003a072:	push   rax
   14003a073:	pop    rdi
   14003a074:	rex.WRB
   14003a075:	rex.WB
   14003a076:	rex.WRX pop rdi
   14003a078:	rex.WRX
   14003a079:	rex.RB push r15
   14003a07b:	pop    rdi
   14003a07c:	rex.XB
   14003a07d:	rex.WRXB
   14003a07e:	rex.WRX push rsp
   14003a080:	rex.RB
   14003a081:	rex.WRX push rsp
   14003a083:	pop    rdi
   14003a084:	rex.RX
   14003a085:	rex.WRXB push r10
   14003a087:	pop    rdi
   14003a088:	push   rax
   14003a089:	push   r10
   14003a08b:	push   rsp
   14003a08c:	rex.WB
   14003a08d:	rex.B
   14003a08e:	rex.WR pop rdi
   14003a090:	rex.WB
   14003a091:	rex.WRX push rbx
   14003a093:	push   rax
   14003a094:	rex.RB
   14003a095:	rex.XB push r12
   14003a097:	rex.WB
   14003a098:	rex.WRXB
   14003a099:	rex.WRX pop rdi
   14003a09b:	rex.RX
   14003a09c:	push   r11
   14003a09e:	push   rsp
   14003a09f:	pop    rdi
   14003a0a0:	push   rsp
   14003a0a1:	push   rdx
   14003a0a2:	rex.WB
   14003a0a3:	rex.XB
   14003a0a4:	rex.WXB
   14003a0a5:	rex.WR
   14003a0a6:	rex.WB
   14003a0a7:	rex.WRX
   14003a0a8:	rex.RXB pop r15
   14003a0aa:	rex.RXB
   14003a0ab:	rex.WRXB
   14003a0ac:	rex.WRXB
   14003a0ad:	rex.R pop rdi
   14003a0af:	push   rax
   14003a0b0:	rex.RB push r10
   14003a0b2:	rex.RX add BYTE PTR [rax],r8b
	...
   14003a0bd:	add    BYTE PTR [rax],al
   14003a0bf:	add    BYTE PTR [rbp+0x4d],al
   14003a0c2:	push   rax
   14003a0c3:	pop    rdi
   14003a0c4:	rex.WRB
   14003a0c5:	rex.WB
   14003a0c6:	rex.WRX pop rdi
   14003a0c8:	rex.WRX
   14003a0c9:	rex.RB push r15
   14003a0cb:	pop    rdi
   14003a0cc:	rex.XB
   14003a0cd:	rex.WRXB
   14003a0ce:	rex.WRX push rsp
   14003a0d0:	rex.RB
   14003a0d1:	rex.WRX push rsp
   14003a0d3:	pop    rdi
   14003a0d4:	rex.RX
   14003a0d5:	rex.WRXB push r10
   14003a0d7:	pop    rdi
   14003a0d8:	push   rax
   14003a0d9:	push   r10
   14003a0db:	push   rsp
   14003a0dc:	rex.WB
   14003a0dd:	rex.B
   14003a0de:	rex.WR pop rdi
   14003a0e0:	rex.WB
   14003a0e1:	rex.WRX push rbx
   14003a0e3:	push   rax
   14003a0e4:	rex.RB
   14003a0e5:	rex.XB push r12
   14003a0e7:	rex.WB
   14003a0e8:	rex.WRXB
   14003a0e9:	rex.WRX pop rdi
   14003a0eb:	rex.RX
   14003a0ec:	push   r11
   14003a0ee:	push   rsp
   14003a0ef:	pop    rdi
   14003a0f0:	push   rsp
   14003a0f1:	push   rdx
   14003a0f2:	rex.WB
   14003a0f3:	rex.XB
   14003a0f4:	rex.WXB
   14003a0f5:	rex.WR
   14003a0f6:	rex.WB
   14003a0f7:	rex.WRX
   14003a0f8:	rex.RXB pop r15
   14003a0fa:	rex.WR
   14003a0fb:	rex.WRXB push r15
   14003a0fd:	pop    rdi
   14003a0fe:	push   rax
   14003a0ff:	rex.RB push r10
   14003a101:	rex.RX add BYTE PTR [rax],r8b
	...
   14003a110:	rex.RB
   14003a111:	rex.WRB push r8
   14003a113:	pop    rdi
   14003a114:	rex.WRB
   14003a115:	rex.WB
   14003a116:	rex.WRX pop rdi
   14003a118:	rex.WRX
   14003a119:	rex.RB push r15
   14003a11b:	pop    rdi
   14003a11c:	rex.XB
   14003a11d:	rex.WRXB
   14003a11e:	rex.WRX push rsp
   14003a120:	rex.RB
   14003a121:	rex.WRX push rsp
   14003a123:	pop    rdi
   14003a124:	rex.RX
   14003a125:	rex.WRXB push r10
   14003a127:	pop    rdi
   14003a128:	push   rax
   14003a129:	push   r10
   14003a12b:	push   rsp
   14003a12c:	rex.WB
   14003a12d:	rex.B
   14003a12e:	rex.WR pop rdi
   14003a130:	rex.WB
   14003a131:	rex.WRX push rbx
   14003a133:	push   rax
   14003a134:	rex.RB
   14003a135:	rex.XB push r12
   14003a137:	rex.WB
   14003a138:	rex.WRXB
   14003a139:	rex.WRX pop rdi
   14003a13b:	rex.RX
   14003a13c:	push   r11
   14003a13e:	push   rsp
   14003a13f:	pop    rdi
   14003a140:	push   rsp
   14003a141:	push   rdx
   14003a142:	rex.WB
   14003a143:	rex.XB
   14003a144:	rex.WXB
   14003a145:	rex.WR
   14003a146:	rex.WB
   14003a147:	rex.WRX
   14003a148:	rex.RXB pop r15
   14003a14a:	rex.WRB
   14003a14b:	rex.WRXB
   14003a14c:	rex.R
   14003a14d:	rex.RB push r10
   14003a14f:	push   r12
   14003a151:	rex.RB pop r15
   14003a153:	push   rax
   14003a154:	rex.RB push r10
   14003a156:	rex.RX add BYTE PTR [rbp+0x4d],r8b
   14003a15a:	push   rax
   14003a15b:	pop    rdi
   14003a15c:	rex.WRB
   14003a15d:	rex.WB
   14003a15e:	rex.WRX pop rdi
   14003a160:	rex.WRX
   14003a161:	rex.RB push r15
   14003a163:	pop    rdi
   14003a164:	rex.XB
   14003a165:	rex.WRXB
   14003a166:	rex.WRX push rsp
   14003a168:	rex.RB
   14003a169:	rex.WRX push rsp
   14003a16b:	pop    rdi
   14003a16c:	rex.RX
   14003a16d:	rex.WRXB push r10
   14003a16f:	pop    rdi
   14003a170:	push   rax
   14003a171:	push   r10
   14003a173:	push   rsp
   14003a174:	rex.WB
   14003a175:	rex.B
   14003a176:	rex.WR pop rdi
   14003a178:	rex.WB
   14003a179:	rex.WRX push rbx
   14003a17b:	push   rax
   14003a17c:	rex.RB
   14003a17d:	rex.XB push r12
   14003a17f:	rex.WB
   14003a180:	rex.WRXB
   14003a181:	rex.WRX pop rdi
   14003a183:	push   rbx
   14003a184:	push   rsp
   14003a185:	rex.B
   14003a186:	rex.WRX
   14003a187:	rex.R
   14003a188:	push   r10
   14003a18a:	rex.R pop rdi
   14003a18c:	push   rsp
   14003a18d:	push   rdx
   14003a18e:	rex.WB
   14003a18f:	rex.XB
   14003a190:	rex.WXB
   14003a191:	rex.WR
   14003a192:	rex.WB
   14003a193:	rex.WRX
   14003a194:	rex.RXB add BYTE PTR [r8],r8b
   14003a197:	add    BYTE PTR [rbp+0x4d],al
   14003a19a:	push   rax
   14003a19b:	pop    rdi
   14003a19c:	push   rax
   14003a19d:	rex.WB
   14003a19e:	rex.WRX
   14003a19f:	rex.RXB pop r15
   14003a1a1:	push   rsp
   14003a1a2:	rex.WB
   14003a1a3:	rex.WRB
   14003a1a4:	rex.RB
   14003a1a5:	rex.WRXB push r13
   14003a1a7:	push   rsp
   14003a1a8:	pop    rdi
   14003a1a9:	rex.RX
   14003a1aa:	rex.B
   14003a1ab:	rex.XB push r12
   14003a1ad:	rex.WRXB push r10
   14003a1af:	add    BYTE PTR [rbp+0x4d],al
   14003a1b2:	push   rax
   14003a1b3:	pop    rdi
   14003a1b4:	push   rdx
   14003a1b5:	rex.RB
   14003a1b6:	rex.WR
   14003a1b7:	rex.WRXB
   14003a1b8:	rex.B
   14003a1b9:	rex.R pop rdi
   14003a1bb:	push   rsp
   14003a1bc:	rex.RB
   14003a1bd:	rex.WRB push r8
   14003a1bf:	rex.WR
   14003a1c0:	push   r12
   14003a1c2:	rex.RB push r11
   14003a1c4:	pop    rdi
   14003a1c5:	rex.RX
   14003a1c6:	rex.WRXB push r10
   14003a1c8:	pop    rdi
   14003a1c9:	rex.RB push r14
   14003a1cb:	rex.RB push r10
   14003a1cd:	pop    rcx
   14003a1ce:	pop    rdi
   14003a1cf:	push   rdx
   14003a1d0:	rex.RB push r9
   14003a1d2:	push   rbp
   14003a1d3:	rex.RB push r11
   14003a1d5:	push   rsp
   14003a1d6:	add    BYTE PTR [rax],al
   14003a1d8:	rex.RB
   14003a1d9:	rex.WRB push r8
   14003a1db:	pop    rdi
   14003a1dc:	push   rbx
   14003a1dd:	rex.XB
   14003a1de:	rex.B
   14003a1df:	rex.WRX
   14003a1e0:	rex.WRX
   14003a1e1:	rex.RB push r10
   14003a1e3:	pop    rdi
   14003a1e4:	push   rcx
   14003a1e5:	push   rbp
   14003a1e6:	rex.RB push r13
   14003a1e8:	rex.RB pop r15
   14003a1ea:	rex.WR
   14003a1eb:	rex.RB
   14003a1ec:	rex.WRX
   14003a1ed:	rex.RXB push r12
   14003a1ef:	rex.W pop rdi
   14003a1f1:	push   rdx
   14003a1f2:	rex.RB push r11
   14003a1f4:	push   rbp
   14003a1f5:	rex.WRB
   14003a1f6:	add    BYTE PTR [r13+0x4d],r8b
   14003a1fa:	push   rax
   14003a1fb:	pop    rdi
   14003a1fc:	push   rbx
   14003a1fd:	rex.XB
   14003a1fe:	rex.B
   14003a1ff:	rex.WRX
   14003a200:	rex.WRX
   14003a201:	rex.RB push r10
   14003a203:	pop    rdi
   14003a204:	push   rcx
   14003a205:	push   rbp
   14003a206:	rex.RB push r13
   14003a208:	rex.RB pop r15
   14003a20a:	rex.WR
   14003a20b:	rex.RB
   14003a20c:	rex.WRX
   14003a20d:	rex.RXB push r12
   14003a20f:	rex.W pop rdi
   14003a211:	push   rbx
   14003a212:	push   rbp
   14003a213:	push   rbx
   14003a214:	push   rax
   14003a215:	rex.RB
   14003a216:	rex.WRX
   14003a217:	add    BYTE PTR [rax],r8b
   14003a21a:	add    BYTE PTR [rax],al
   14003a21c:	add    BYTE PTR [rax],al
   14003a21e:	add    BYTE PTR [rax],al
   14003a220:	rex.RB
   14003a221:	rex.WRB push r8
   14003a223:	pop    rdi
   14003a224:	push   rbx
   14003a225:	rex.XB
   14003a226:	rex.B
   14003a227:	rex.WRX
   14003a228:	rex.WRX
   14003a229:	rex.RB push r10
   14003a22b:	pop    rdi
   14003a22c:	push   rcx
   14003a22d:	push   rbp
   14003a22e:	rex.RB push r13
   14003a230:	rex.RB pop r15
   14003a232:	push   rbx
   14003a233:	pop    rcx
   14003a234:	rex.WRX
   14003a235:	rex.XB pop r15
   14003a237:	push   rsp
   14003a238:	rex.WB
   14003a239:	rex.WRB
   14003a23a:	rex.RB
   14003a23b:	rex.WRXB push r13
   14003a23d:	push   rsp
   14003a23e:	add    BYTE PTR [rax],al
   14003a240:	rex.RB
   14003a241:	rex.WRB push r8
   14003a243:	pop    rdi
   14003a244:	push   rbx
   14003a245:	rex.XB
   14003a246:	rex.B
   14003a247:	rex.WRX
   14003a248:	rex.WRX
   14003a249:	rex.WB
   14003a24a:	rex.WRX
   14003a24b:	rex.RXB pop r15
   14003a24d:	push   rax
   14003a24e:	rex.WRXB
   14003a24f:	rex.WR
   14003a250:	rex.WR
   14003a251:	rex.WB
   14003a252:	rex.WRX
   14003a253:	rex.RXB pop r15
   14003a255:	rex.R
   14003a256:	rex.RB
   14003a257:	rex.WR
   14003a258:	pop    r9
   14003a25a:	add    BYTE PTR [rax],al
   14003a25c:	add    BYTE PTR [rax],al
   14003a25e:	add    BYTE PTR [rax],al
   14003a260:	rex.RB
   14003a261:	rex.WRB push r8
   14003a263:	pop    rdi
   14003a264:	push   rbp
   14003a265:	push   rbx
   14003a266:	rex.RB pop r15
   14003a268:	rex.XB
   14003a269:	rex.W push rbp
   14003a26b:	rex.WRX
   14003a26c:	rex.WXB pop r15
   14003a26e:	rex.RB
   14003a26f:	rex.WRX
   14003a270:	rex.XB
   14003a271:	rex.WRXB
   14003a272:	rex.R
   14003a273:	rex.WB
   14003a274:	rex.WRX
   14003a275:	rex.RXB pop r15
   14003a277:	rex.RX
   14003a278:	rex.WRXB push r10
   14003a27a:	pop    rdi
   14003a27b:	push   rsp
   14003a27c:	push   rdx
   14003a27d:	rex.WB
   14003a27e:	rex.XB
   14003a27f:	rex.WXB
   14003a280:	rex.WR
   14003a281:	rex.WB
   14003a282:	rex.WRX
   14003a283:	rex.RXB add BYTE PTR [r8],r8b
   14003a286:	add    BYTE PTR [rax],al
   14003a288:	rex.RB
   14003a289:	rex.WRB push r8
   14003a28b:	pop    rdi
   14003a28c:	push   rbp
   14003a28d:	push   rbx
   14003a28e:	rex.RB pop r15
   14003a290:	push   rax
   14003a291:	rex.RB push r10
   14003a293:	rex.WB
   14003a294:	rex.WRXB pop r15
   14003a296:	rex.X push rbp
   14003a298:	rex.RX
   14003a299:	rex.RX
   14003a29a:	rex.RB push r10
   14003a29c:	push   rbx
   14003a29d:	pop    rdi
   14003a29e:	rex.WB
   14003a29f:	rex.WRX pop rdi
   14003a2a1:	push   rbx
   14003a2a2:	rex.RB
   14003a2a3:	rex.WRX
   14003a2a4:	add    BYTE PTR [rax],r8b
   14003a2a7:	add    BYTE PTR [rbp+0x4d],al
   14003a2aa:	push   rax
   14003a2ab:	pop    rdi
   14003a2ac:	push   rbp
   14003a2ad:	push   rbx
   14003a2ae:	rex.RB pop r15
   14003a2b0:	push   rsi
   14003a2b1:	rex.WB push r10
   14003a2b3:	push   rbp
   14003a2b4:	push   rbx
   14003a2b5:	pop    rdi
   14003a2b6:	push   rbx
   14003a2b7:	rex.XB
   14003a2b8:	rex.B
   14003a2b9:	rex.WRX
   14003a2ba:	rex.WRX
   14003a2bb:	rex.RB push r10
   14003a2bd:	pop    rdi
   14003a2be:	rex.WRB
   14003a2bf:	rex.WRXB
   14003a2c0:	rex.XB
   14003a2c1:	rex.WXB add BYTE PTR [r8],al
   14003a2c4:	add    BYTE PTR [rax],al
   14003a2c6:	add    BYTE PTR [rax],al
   14003a2c8:	rex.RB
   14003a2c9:	rex.WRX
   14003a2ca:	rex.B
   14003a2cb:	rex.X
   14003a2cc:	rex.WR
   14003a2cd:	rex.RB pop r15
   14003a2cf:	rex.WXB
   14003a2d0:	rex.RB push r10
   14003a2d2:	rex.WRX
   14003a2d3:	rex.RB
   14003a2d4:	rex.WR pop rdi
   14003a2d6:	rex.WRB
   14003a2d7:	rex.WRXB
   14003a2d8:	rex.R
   14003a2d9:	rex.RB pop r15
   14003a2db:	rex.RX
   14003a2dc:	rex.WRXB push r10
   14003a2de:	push   rdi
   14003a2df:	push   r10
   14003a2e1:	rex.R
   14003a2e2:	rex.WB
   14003a2e3:	rex.WRX
   14003a2e4:	rex.RXB pop r15
   14003a2e6:	push   rbp
   14003a2e7:	rex.WB add BYTE PTR [r8],al
   14003a2ea:	add    BYTE PTR [rax],al
   14003a2ec:	add    BYTE PTR [rax],al
   14003a2ee:	add    BYTE PTR [rax],al
   14003a2f0:	rex.RB
   14003a2f1:	rex.WRX
   14003a2f2:	rex.B
   14003a2f3:	rex.X
   14003a2f4:	rex.WR
   14003a2f5:	rex.RB pop r15
   14003a2f7:	push   rax
   14003a2f8:	rex.WRXB push r10
   14003a2fa:	push   rsp
   14003a2fb:	pop    rdi
   14003a2fc:	push   rbx
   14003a2fd:	push   rsp
   14003a2fe:	rex.RB
   14003a2ff:	rex.B
   14003a300:	rex.WR
   14003a301:	rex.WB
   14003a302:	rex.WRX
   14003a303:	rex.RXB add BYTE PTR [r8],r8b
   14003a306:	add    BYTE PTR [rax],al
   14003a308:	rex.RB push r14
   14003a30a:	rex.B
   14003a30b:	rex.WR pop rdi
   14003a30d:	push   rsp
   14003a30e:	push   rdx
   14003a30f:	rex.B
   14003a310:	rex.XB
   14003a311:	add    BYTE PTR [r8],r8b
   14003a314:	add    BYTE PTR [rax],al
   14003a316:	add    BYTE PTR [rax],al
   14003a318:	rex.RB pop r8
   14003a31a:	push   rax
   14003a31b:	rex.WRXB push r10
   14003a31d:	push   rsp
   14003a31e:	pop    rdi
   14003a31f:	push   rsp
   14003a320:	push   rdx
   14003a321:	rex.B
   14003a322:	rex.WRX push rbx
   14003a324:	rex.RX
   14003a325:	rex.WRXB push r10
   14003a327:	rex.WRB
   14003a328:	push   r12
   14003a32a:	rex.WB
   14003a32b:	rex.WRXB
   14003a32c:	rex.WRX pop rdi
   14003a32e:	rex.RX
   14003a32f:	rex.WB
   14003a330:	rex.WR
   14003a331:	rex.RB push r11
   14003a333:	add    BYTE PTR [rax],al
   14003a335:	add    BYTE PTR [rax],al
   14003a337:	add    BYTE PTR [rsi+0x41],al
   14003a33a:	rex.WB
   14003a33b:	rex.WR pop rdi
   14003a33d:	rex.WB
   14003a33e:	rex.WRX
   14003a33f:	rex.WB push r12
   14003a341:	rex.WB
   14003a342:	rex.B
   14003a343:	rex.WR
   14003a344:	rex.WB pop r10
   14003a346:	add    BYTE PTR [r14+0x41],r8b
   14003a34a:	rex.WB
   14003a34b:	rex.WR pop rdi
   14003a34d:	rex.WRXB
   14003a34e:	rex.WRX pop rdi
   14003a350:	rex.WB
   14003a351:	rex.R
   14003a352:	rex.RB
   14003a353:	rex.WRX push rsp
   14003a355:	rex.WB
   14003a356:	rex.RX pop rcx
	...
   14003a360:	rex.RX
   14003a361:	rex.B
   14003a362:	rex.WB
   14003a363:	rex.WR pop rdi
   14003a365:	rex.WRXB
   14003a366:	rex.WRX pop rdi
   14003a368:	push   rax
   14003a369:	rex.WRXB push r11
   14003a36b:	push   rsp
   14003a36c:	pop    rdi
   14003a36d:	push   rdx
   14003a36e:	rex.RB push r11
   14003a370:	push   rsp
   14003a371:	rex.WRXB push r10
   14003a373:	add    BYTE PTR [r8],r8b
   14003a376:	add    BYTE PTR [rax],al
   14003a378:	rex.RX
   14003a379:	rex.B
   14003a37a:	rex.WB
   14003a37b:	rex.WR pop rdi
   14003a37d:	rex.WRXB
   14003a37e:	rex.WRX pop rdi
   14003a380:	push   rax
   14003a381:	rex.WRXB push r11
   14003a383:	push   rsp
   14003a384:	pop    rdi
   14003a385:	push   rbx
   14003a386:	rex.WRX
   14003a387:	push   r8
   14003a389:	push   rbx
   14003a38a:	rex.W
   14003a38b:	rex.WRXB push r12
   14003a38d:	add    BYTE PTR [rax],al
   14003a38f:	add    BYTE PTR [rsi+0x41],al
   14003a392:	rex.WB
   14003a393:	rex.WR pop rdi
   14003a395:	rex.WRXB
   14003a396:	rex.WRX pop rdi
   14003a398:	push   rax
   14003a399:	push   rdx
   14003a39a:	rex.RB push r8
   14003a39c:	push   r10
   14003a39e:	rex.RB pop r15
   14003a3a0:	push   rbx
   14003a3a1:	rex.WRX
   14003a3a2:	push   r8
   14003a3a4:	push   rbx
   14003a3a5:	rex.W
   14003a3a6:	rex.WRXB push r12
	...
   14003a3b0:	rex.RX
   14003a3b1:	rex.XB push r11
   14003a3b3:	pop    rdi
   14003a3b4:	rex.RB
   14003a3b5:	rex.WRX
   14003a3b6:	rex.RXB pop r15
   14003a3b8:	rex.WRX
   14003a3b9:	rex.WRXB push r12
   14003a3bb:	rex.WB
   14003a3bc:	rex.RX pop rcx
   14003a3be:	pop    rdi
   14003a3bf:	rex.X push rbp
   14003a3c1:	rex.RX
   14003a3c2:	rex.RX
   14003a3c3:	rex.RB push r10
   14003a3c5:	pop    rdi
   14003a3c6:	push   rbx
   14003a3c7:	rex.WR
   14003a3c8:	rex.WRXB push r12
   14003a3ca:	push   rbx
   14003a3cb:	add    BYTE PTR [rax],al
   14003a3cd:	add    BYTE PTR [rax],al
   14003a3cf:	add    BYTE PTR [rsi+0x43],al
   14003a3d2:	push   rbx
   14003a3d3:	pop    rdi
   14003a3d4:	rex.RB
   14003a3d5:	rex.WRX
   14003a3d6:	rex.RXB pop r15
   14003a3d8:	rex.WRX
   14003a3d9:	rex.WRXB push r12
   14003a3db:	rex.WB
   14003a3dc:	rex.RX pop rcx
   14003a3de:	pop    rdi
   14003a3df:	rex.X push rbp
   14003a3e1:	rex.RX
   14003a3e2:	rex.RX
   14003a3e3:	rex.RB push r10
   14003a3e5:	pop    rdi
   14003a3e6:	push   rsp
   14003a3e7:	rex.W push rdx
   14003a3e9:	rex.RB
   14003a3ea:	rex.B
   14003a3eb:	rex.R push rbx
   14003a3ed:	add    BYTE PTR [rax],al
   14003a3ef:	add    BYTE PTR [rsi+0x43],al
   14003a3f2:	push   rbx
   14003a3f3:	pop    rdi
   14003a3f4:	push   rbx
   14003a3f5:	push   rsp
   14003a3f6:	push   r10
   14003a3f8:	push   rsp
   14003a3f9:	push   rbp
   14003a3fa:	push   rax
   14003a3fb:	pop    rdi
   14003a3fc:	rex.X push rdx
   14003a3fe:	rex.RB
   14003a3ff:	rex.B
   14003a400:	rex.WXB push r8
   14003a402:	rex.WRXB
   14003a403:	rex.WB
   14003a404:	rex.WRX push rsp
   14003a406:	add    BYTE PTR [rax],al
   14003a408:	rex.RX
   14003a409:	rex.XB push r11
   14003a40b:	pop    rdi
   14003a40c:	push   rbx
   14003a40d:	push   rsp
   14003a40e:	push   r10
   14003a410:	push   rsp
   14003a411:	push   rbp
   14003a412:	push   rax
   14003a413:	pop    rdi
   14003a414:	rex.W
   14003a415:	rex.WB
   14003a416:	rex.WRX push rsp
	...
   14003a420:	rex.RX
   14003a421:	rex.XB push r11
   14003a423:	pop    rdi
   14003a424:	push   rbx
   14003a425:	push   rsp
   14003a426:	rex.WRXB push r8
   14003a428:	pop    rdi
   14003a429:	rex.W
   14003a42a:	rex.WB
   14003a42b:	rex.WRX push rsp
   14003a42d:	add    BYTE PTR [rax],al
   14003a42f:	add    BYTE PTR [rsi+0x49],al
   14003a432:	rex.WR
   14003a433:	rex.WR pop rdi
   14003a435:	rex.B
   14003a436:	rex.WR
   14003a437:	rex.WR
   14003a438:	rex.WRXB
   14003a439:	rex.XB pop r15
   14003a43b:	rex.XB
   14003a43c:	rex.W
   14003a43d:	rex.WXB add BYTE PTR [r8],al
   14003a440:	rex.RX
   14003a441:	rex.WB
   14003a442:	rex.WR
   14003a443:	rex.WR pop rdi
   14003a445:	rex.B
   14003a446:	rex.WR
   14003a447:	rex.WR
   14003a448:	rex.WRXB
   14003a449:	rex.XB pop r15
   14003a44b:	rex.RX push rdx
   14003a44d:	add    BYTE PTR [r8],r8b
   14003a450:	rex.RX
   14003a451:	rex.WB
   14003a452:	rex.WRX
   14003a453:	rex.R pop rdi
   14003a455:	rex.WRB
   14003a456:	rex.WB push r11
   14003a458:	rex.WRB
   14003a459:	push   r12
   14003a45b:	rex.XB
   14003a45c:	rex.W
   14003a45d:	rex.RB
   14003a45e:	rex.R pop rdi
   14003a460:	rex.WRB
   14003a461:	rex.WRXB
   14003a462:	rex.R push rbp
   14003a464:	rex.WR
   14003a465:	rex.RB pop r15
   14003a467:	rex.WRX
   14003a468:	rex.B
   14003a469:	rex.WRB
   14003a46a:	rex.RB push r11
   14003a46c:	add    BYTE PTR [rax],al
   14003a46e:	add    BYTE PTR [rax],al
   14003a470:	rex.RX
   14003a471:	rex.WR push rsp
   14003a473:	push   rdx
   14003a474:	push   rbx
   14003a475:	rex.WRX
   14003a476:	rex.WXB xor QWORD PTR [r15+0x54],rbx
   14003a47a:	push   rdx
   14003a47b:	rex.B
   14003a47c:	rex.XB
   14003a47d:	rex.RB pop r15
   14003a47f:	rex.B
   14003a480:	rex.R
   14003a481:	rex.WRB
   14003a482:	rex.WB
   14003a483:	rex.WRX add BYTE PTR [rax],r8b
   14003a486:	add    BYTE PTR [rax],al
   14003a488:	rex.RX
   14003a489:	rex.WR push rsp
   14003a48b:	push   rdx
   14003a48c:	push   rbx
   14003a48d:	rex.WRX
   14003a48e:	rex.WXB xor QWORD PTR [r15+0x54],rbx
   14003a492:	push   rdx
   14003a493:	rex.B
   14003a494:	rex.XB
   14003a495:	rex.RB pop r15
   14003a497:	rex.R push rbp
   14003a499:	rex.WRB push r8
   14003a49b:	add    BYTE PTR [rax],al
   14003a49d:	add    BYTE PTR [rax],al
   14003a49f:	add    BYTE PTR [rsi+0x4c],al
   14003a4a2:	push   rsp
   14003a4a3:	push   rdx
   14003a4a4:	push   rbx
   14003a4a5:	rex.WRX
   14003a4a6:	rex.WXB xor QWORD PTR [r15+0x54],rbx
   14003a4aa:	push   rdx
   14003a4ab:	rex.B
   14003a4ac:	rex.XB
   14003a4ad:	rex.RB pop r15
   14003a4af:	rex.RB pop r8
   14003a4b1:	rex.XB
   14003a4b2:	rex.B
   14003a4b3:	rex.WR
   14003a4b4:	rex.WR add BYTE PTR [rax],r8b
   14003a4b7:	add    BYTE PTR [rsi+0x4c],al
   14003a4ba:	push   rsp
   14003a4bb:	push   rdx
   14003a4bc:	push   rbx
   14003a4bd:	rex.WRX
   14003a4be:	rex.WXB xor QWORD PTR [r15+0x54],rbx
   14003a4c2:	push   rdx
   14003a4c3:	rex.B
   14003a4c4:	rex.XB
   14003a4c5:	rex.RB pop r15
   14003a4c7:	rex.RB pop r8
   14003a4c9:	rex.RB
   14003a4ca:	rex.XB push r12
   14003a4cc:	rex.WB
   14003a4cd:	rex.WRB
   14003a4ce:	add    BYTE PTR [r14+0x4c],r8b
   14003a4d2:	push   rsp
   14003a4d3:	push   rdx
   14003a4d4:	push   rbx
   14003a4d5:	rex.WRX
   14003a4d6:	rex.WXB xor QWORD PTR [r15+0x54],rbx
   14003a4da:	push   rdx
   14003a4db:	rex.B
   14003a4dc:	rex.XB
   14003a4dd:	rex.RB pop r15
   14003a4df:	rex.WB
   14003a4e0:	rex.WRX
   14003a4e1:	rex.RX
   14003a4e2:	rex.WRXB add BYTE PTR [r8],r8b
   14003a4e5:	add    BYTE PTR [rax],al
   14003a4e7:	add    BYTE PTR [rsi+0x4c],al
   14003a4ea:	push   rsp
   14003a4eb:	push   rdx
   14003a4ec:	push   rbx
   14003a4ed:	rex.WRX
   14003a4ee:	rex.WXB xor QWORD PTR [r15+0x54],rbx
   14003a4f2:	push   rdx
   14003a4f3:	rex.B
   14003a4f4:	rex.XB
   14003a4f5:	rex.RB pop r15
   14003a4f7:	push   rax
   14003a4f8:	push   r11
   14003a4fa:	push   rbx
   14003a4fb:	add    BYTE PTR [rax],al
   14003a4fd:	add    BYTE PTR [rax],al
   14003a4ff:	add    BYTE PTR [rsi+0x4c],al
   14003a502:	push   rsp
   14003a503:	push   rdx
   14003a504:	push   rbx
   14003a505:	rex.WRX
   14003a506:	rex.WXB xor QWORD PTR [r15+0x54],rbx
   14003a50a:	push   rdx
   14003a50b:	rex.B
   14003a50c:	rex.XB
   14003a50d:	rex.RB pop r15
   14003a50f:	push   rax
   14003a510:	rex.WRXB
   14003a511:	rex.WR
   14003a512:	rex.WB
   14003a513:	rex.XB pop r9
   14003a515:	add    BYTE PTR [rax],al
   14003a517:	add    BYTE PTR [rsi+0x4c],al
   14003a51a:	push   rsp
   14003a51b:	push   rdx
   14003a51c:	push   rbx
   14003a51d:	rex.WRX
   14003a51e:	rex.WXB xor QWORD PTR [r15+0x54],rbx
   14003a522:	push   rdx
   14003a523:	rex.B
   14003a524:	rex.XB
   14003a525:	rex.RB pop r15
   14003a527:	push   rdi
   14003a528:	push   r10
   14003a52a:	rex.WRX add BYTE PTR [rax],r8b
   14003a52d:	add    BYTE PTR [rax],al
   14003a52f:	add    BYTE PTR [rsi+0x52],al
   14003a532:	rex.B
   14003a533:	rex.WRB
   14003a534:	rex.RB push r11
   14003a536:	pop    rdi
   14003a537:	push   rsp
   14003a538:	rex.WRXB pop r15
   14003a53a:	rex.XB
   14003a53b:	push   r8
   14003a53d:	push   rsp
   14003a53e:	push   rbp
   14003a53f:	push   rdx
   14003a540:	add    BYTE PTR [r8],r8b
   14003a543:	add    BYTE PTR [rax],al
   14003a545:	add    BYTE PTR [rax],al
   14003a547:	add    BYTE PTR [rsi+0x52],al
   14003a54a:	rex.RB pop r15
   14003a54c:	push   rsp
   14003a54d:	push   rdx
   14003a54e:	rex.B
   14003a54f:	rex.XB
   14003a550:	rex.RB push r11
   14003a552:	add    BYTE PTR [rax],al
   14003a554:	add    BYTE PTR [rax],al
   14003a556:	add    BYTE PTR [rax],al
   14003a558:	rex.RX push rdi
   14003a55a:	rex.XB
   14003a55b:	pop    r15
   14003a55d:	rex.RX
   14003a55e:	rex.WR
   14003a55f:	rex.WRXB push r15
   14003a561:	add    BYTE PTR [rax],al
   14003a563:	add    BYTE PTR [rax],al
   14003a565:	add    BYTE PTR [rax],al
   14003a567:	add    BYTE PTR [rsi+0x57],al
   14003a56a:	rex.XB
   14003a56b:	pop    r15
   14003a56d:	push   rdx
   14003a56e:	push   rax
   14003a56f:	rex.XB add BYTE PTR [r8],al
   14003a572:	add    BYTE PTR [rax],al
   14003a574:	add    BYTE PTR [rax],al
   14003a576:	add    BYTE PTR [rax],al
   14003a578:	rex.RX push rdi
   14003a57a:	rex.XB
   14003a57b:	rex.WRB
   14003a57c:	rex.RXB
   14003a57d:	rex.WRB push r12
   14003a57f:	pop    rdi
   14003a580:	push   rdi
   14003a581:	push   rbx
   14003a582:	rex.XB pop r15
   14003a584:	push   rsi
   14003a585:	rex.B
   14003a586:	rex.WR
   14003a587:	rex.WB
   14003a588:	rex.R
   14003a589:	push   r12
   14003a58b:	rex.WB
   14003a58c:	rex.WRXB
   14003a58d:	rex.WRX add BYTE PTR [rax],r8b
   14003a590:	rex.RX push rdi
   14003a592:	rex.XB pop r15
   14003a594:	rex.B
   14003a595:	rex.RXB
   14003a596:	rex.RB
   14003a597:	rex.WRX push rsp
   14003a599:	add    BYTE PTR [rax],al
   14003a59b:	add    BYTE PTR [rax],al
   14003a59d:	add    BYTE PTR [rax],al
   14003a59f:	add    BYTE PTR [rsi+0x57],al
   14003a5a2:	rex.XB pop r15
   14003a5a4:	push   r8
   14003a5a6:	push   rax
   14003a5a7:	push   r8
   14003a5a9:	rex.WB pop r15
   14003a5ab:	rex.RB
   14003a5ac:	rex.WRX push rsp
   14003a5ae:	push   rdx
   14003a5af:	rex.WB
   14003a5b0:	rex.RB push r11
   14003a5b2:	add    BYTE PTR [rax],al
   14003a5b4:	add    BYTE PTR [rax],al
   14003a5b6:	add    BYTE PTR [rax],al
   14003a5b8:	rex.RX push rdi
   14003a5ba:	rex.XB pop r15
   14003a5bc:	push   r8
   14003a5be:	push   rax
   14003a5bf:	push   r8
   14003a5c1:	rex.WB pop r15
   14003a5c3:	push   rdx
   14003a5c4:	push   rax
   14003a5c5:	rex.XB add BYTE PTR [r8],al
   14003a5c8:	rex.RX push rdi
   14003a5ca:	rex.XB pop r15
   14003a5cc:	rex.RB
   14003a5cd:	rex.WRX push rsp
   14003a5cf:	push   rdx
   14003a5d0:	rex.WB
   14003a5d1:	rex.RB push r11
   14003a5d3:	add    BYTE PTR [rax],al
   14003a5d5:	add    BYTE PTR [rax],al
   14003a5d7:	add    BYTE PTR [rsi+0x57],al
   14003a5da:	rex.XB pop r15
   14003a5dc:	rex.WB
   14003a5dd:	rex.RXB
   14003a5de:	rex.WRX
   14003a5df:	rex.WRXB push r10
   14003a5e1:	rex.RB pop r15
   14003a5e3:	push   rbx
   14003a5e4:	rex.RB push r10
   14003a5e6:	push   rsi
   14003a5e7:	rex.RB push r10
   14003a5e9:	pop    rdi
   14003a5ea:	push   rdx
   14003a5eb:	rex.RB
   14003a5ec:	rex.RX push rdx
   14003a5ee:	rex.RB push r11
   14003a5f0:	rex.W pop rdi
   14003a5f2:	push   rsp
   14003a5f3:	rex.WB
   14003a5f4:	rex.WRB
   14003a5f5:	rex.RB
   14003a5f6:	rex.WRXB push r13
   14003a5f8:	push   rsp
   14003a5f9:	add    BYTE PTR [rax],al
   14003a5fb:	add    BYTE PTR [rax],al
   14003a5fd:	add    BYTE PTR [rax],al
   14003a5ff:	add    BYTE PTR [rsi+0x57],al
   14003a602:	rex.XB pop r15
   14003a604:	rex.WB
   14003a605:	rex.WRX
   14003a606:	rex.B
   14003a607:	rex.XB
   14003a608:	rex.XB
   14003a609:	rex.RB push r11
   14003a60b:	push   rbx
   14003a60c:	rex.WB
   14003a60d:	rex.X
   14003a60e:	rex.WR
   14003a60f:	add    BYTE PTR [r8],r8b
   14003a612:	add    BYTE PTR [rax],al
   14003a614:	add    BYTE PTR [rax],al
   14003a616:	add    BYTE PTR [rax],al
   14003a618:	rex.RX push rdi
   14003a61a:	rex.XB pop r15
   14003a61c:	rex.WRX
   14003a61d:	rex.B
   14003a61e:	rex.WRB
   14003a61f:	rex.RB pop r15
   14003a621:	push   rdx
   14003a622:	rex.RB push r11
   14003a624:	rex.WRXB
   14003a625:	rex.WR push rbp
   14003a627:	push   rsp
   14003a628:	rex.WB
   14003a629:	rex.WRXB
   14003a62a:	rex.WRX add BYTE PTR [rax],r8b
   14003a62d:	add    BYTE PTR [rax],al
   14003a62f:	add    BYTE PTR [rsi+0x57],al
   14003a632:	rex.XB pop r15
   14003a634:	rex.WRX
   14003a635:	rex.RB push r12
   14003a637:	push   rbp
   14003a638:	push   rsp
   14003a639:	rex.WB
   14003a63a:	rex.WR add BYTE PTR [rax],r8b
   14003a63d:	add    BYTE PTR [rax],al
   14003a63f:	add    BYTE PTR [rsi+0x57],al
   14003a642:	rex.XB pop r15
   14003a644:	push   rdx
   14003a645:	rex.RB
   14003a646:	rex.RX push rdx
   14003a648:	rex.RB push r11
   14003a64a:	rex.W pop rdi
   14003a64c:	push   rsp
   14003a64d:	rex.WB
   14003a64e:	rex.WRB
   14003a64f:	rex.RB
   14003a650:	rex.WRXB push r13
   14003a652:	push   rsp
   14003a653:	pop    rdi
   14003a654:	rex.WRB
   14003a655:	rex.WB
   14003a656:	rex.WRX push rbp
   14003a658:	push   rsp
   14003a659:	rex.RB push r11
   14003a65b:	add    BYTE PTR [rax],al
   14003a65d:	add    BYTE PTR [rax],al
   14003a65f:	add    BYTE PTR [rsi+0x57],al
   14003a662:	rex.XB pop r15
   14003a664:	push   rbx
   14003a665:	rex.RB push r10
   14003a667:	push   rsi
   14003a668:	rex.RB push r10
   14003a66a:	pop    rdi
   14003a66b:	push   rbx
   14003a66c:	rex.RB push r12
   14003a66e:	push   rsp
   14003a66f:	rex.WB
   14003a670:	rex.WRX
   14003a671:	rex.RXB push r11
   14003a673:	add    BYTE PTR [rax],al
   14003a675:	add    BYTE PTR [rax],al
   14003a677:	add    BYTE PTR [rsi+0x57],al
   14003a67a:	rex.XB pop r15
   14003a67c:	push   rbx
   14003a67d:	rex.RB push r12
   14003a67f:	push   rbp
   14003a680:	push   rax
   14003a681:	add    BYTE PTR [rax],al
   14003a683:	add    BYTE PTR [rax],al
   14003a685:	add    BYTE PTR [rax],al
   14003a687:	add    BYTE PTR [rsi+0x57],al
   14003a68a:	rex.XB pop r15
   14003a68c:	push   rbx
   14003a68d:	push   rsp
   14003a68e:	rex.WRXB push r10
   14003a690:	rex.B
   14003a691:	rex.RXB
   14003a692:	add    BYTE PTR [r8],r8b
   14003a695:	add    BYTE PTR [rax],al
   14003a697:	add    BYTE PTR [rsi+0x57],al
   14003a69a:	rex.XB pop r15
   14003a69c:	push   rsp
   14003a69d:	rex.WB
   14003a69e:	rex.WRB
   14003a69f:	rex.RB push r10
   14003a6a1:	push   rbx
   14003a6a2:	add    BYTE PTR [rax],al
   14003a6a4:	add    BYTE PTR [rax],al
   14003a6a6:	add    BYTE PTR [rax],al
   14003a6a8:	rex.RX push rdi
   14003a6aa:	rex.XB pop r15
   14003a6ac:	push   rbp
   14003a6ad:	push   rbx
   14003a6ae:	rex.RB push r10
   14003a6b0:	push   rbx
   14003a6b1:	add    BYTE PTR [rax],al
   14003a6b3:	add    BYTE PTR [rax],al
   14003a6b5:	add    BYTE PTR [rax],al
   14003a6b7:	add    BYTE PTR [rsi+0x57],al
   14003a6ba:	rex.XB pop r15
   14003a6bc:	push   rdi
   14003a6bd:	push   r10
   14003a6bf:	rex.WRX
   14003a6c0:	rex.WB
   14003a6c1:	rex.WRX
   14003a6c2:	rex.RXB push r11
   14003a6c4:	add    BYTE PTR [rax],al
   14003a6c6:	add    BYTE PTR [rax],al
   14003a6c8:	rex.RX push rdi
   14003a6ca:	rex.XB pop r15
   14003a6cc:	push   rdi
   14003a6cd:	rex.RB
   14003a6ce:	rex.X push rax
   14003a6d0:	push   rdx
   14003a6d1:	rex.WRXB pop r8
   14003a6d3:	pop    rcx
   14003a6d4:	add    BYTE PTR [rax],al
   14003a6d6:	add    BYTE PTR [rax],al
   14003a6d8:	rex.RX push rdi
   14003a6da:	rex.XB pop r15
   14003a6dc:	push   rdi
   14003a6dd:	push   rbx
   14003a6de:	push   rax
   14003a6df:	rex.B
   14003a6e0:	add    BYTE PTR [rax],r8b
   14003a6e3:	add    BYTE PTR [rax],al
   14003a6e5:	add    BYTE PTR [rax],al
   14003a6e7:	add    BYTE PTR [rsi+0x57],al
   14003a6ea:	push   rbx
   14003a6eb:	pop    rdi
   14003a6ec:	rex.B
   14003a6ed:	rex.XB
   14003a6ee:	rex.XB
   14003a6ef:	rex.RB push r8
   14003a6f1:	push   rsp
   14003a6f2:	pop    rdi
   14003a6f3:	push   rsp
   14003a6f4:	rex.WB
   14003a6f5:	rex.WRB
   14003a6f6:	rex.RB
   14003a6f7:	rex.WRXB push r13
   14003a6f9:	push   rsp
   14003a6fa:	add    BYTE PTR [rax],al
   14003a6fc:	add    BYTE PTR [rax],al
   14003a6fe:	add    BYTE PTR [rax],al
   14003a700:	rex.RX push rdi
   14003a702:	push   rbx
   14003a703:	pop    rdi
   14003a704:	rex.B
   14003a705:	rex.R
   14003a706:	push   r8
   14003a708:	push   rsp
   14003a709:	rex.RB push r10
   14003a70b:	pop    rdi
   14003a70c:	push   rdx
   14003a70d:	rex.WRXB push r13
   14003a70f:	push   rsp
   14003a710:	rex.RB push r11
   14003a712:	add    BYTE PTR [rax],al
   14003a714:	add    BYTE PTR [rax],al
   14003a716:	add    BYTE PTR [rax],al
   14003a718:	rex.RX push rdi
   14003a71a:	push   rbx
   14003a71b:	pop    rdi
   14003a71c:	rex.B
   14003a71d:	rex.R
   14003a71e:	rex.R push rdx
   14003a720:	pop    rdi
   14003a721:	rex.WRX
   14003a722:	rex.RB push r12
   14003a724:	pop    rdi
   14003a725:	rex.WB
   14003a726:	rex.R pop rdi
   14003a728:	rex.XB
   14003a729:	rex.B
   14003a72a:	rex.XB
   14003a72b:	rex.W
   14003a72c:	add    BYTE PTR [r8],r8b
   14003a72f:	add    BYTE PTR [rsi+0x57],al
   14003a732:	push   rbx
   14003a733:	pop    rdi
   14003a734:	rex.B
   14003a735:	rex.R
   14003a736:	rex.R pop rdi
   14003a738:	rex.WR
   14003a739:	push   r12
   14003a73b:	pop    rdi
   14003a73c:	rex.B
   14003a73d:	rex.WR
   14003a73e:	rex.WR pop rdi
   14003a740:	push   rdx
   14003a741:	rex.WRXB push r13
   14003a743:	push   rsp
   14003a744:	add    BYTE PTR [r8],r8b
   14003a747:	add    BYTE PTR [rsi+0x57],al
   14003a74a:	push   rbx
   14003a74b:	pop    rdi
   14003a74c:	rex.B
   14003a74d:	rex.WR
   14003a74e:	rex.RB push r10
   14003a750:	push   rsp
   14003a751:	pop    rdi
   14003a752:	rex.WB
   14003a753:	rex.WRX push rsp
   14003a755:	rex.RB push r10
   14003a757:	push   rsi
   14003a758:	rex.B
   14003a759:	rex.WR pop rdi
   14003a75b:	rex.WB
   14003a75c:	rex.WRX pop rdi
   14003a75e:	push   rbx
   14003a75f:	rex.RB
   14003a760:	rex.XB
   14003a761:	rex.WRXB
   14003a762:	rex.WRX
   14003a763:	rex.R push rbx
   14003a765:	add    BYTE PTR [rax],al
   14003a767:	add    BYTE PTR [rsi+0x57],al
   14003a76a:	push   rbx
   14003a76b:	pop    rdi
   14003a76c:	rex.B
   14003a76d:	rex.WR
   14003a76e:	rex.WR
   14003a76f:	rex.WRXB push r15
   14003a771:	pop    rdi
   14003a772:	rex.X
   14003a773:	rex.WB
   14003a774:	rex.WRX
   14003a775:	rex.R pop rdi
   14003a777:	rex.WRXB
   14003a778:	rex.RX pop rdi
   14003a77a:	rex.WRB push r13
   14003a77c:	rex.WR push rsp
   14003a77e:	rex.WB push r8
   14003a780:	rex.WR
   14003a781:	rex.RB pop r15
   14003a783:	push   rax
   14003a784:	push   rdx
   14003a785:	rex.RB
   14003a786:	rex.R
   14003a787:	rex.RB push r12
   14003a789:	rex.RB push r10
   14003a78b:	rex.WRB
   14003a78c:	rex.WB
   14003a78d:	rex.WRX
   14003a78e:	rex.RB
   14003a78f:	rex.R pop rdi
   14003a791:	push   rax
   14003a792:	rex.WRXB push r10
   14003a794:	push   rsp
   14003a795:	push   rbx
   14003a796:	add    BYTE PTR [rax],al
   14003a798:	rex.RX push rdi
   14003a79a:	push   rbx
   14003a79b:	pop    rdi
   14003a79c:	rex.B
   14003a79d:	rex.WR
   14003a79e:	rex.WR
   14003a79f:	rex.WRXB push r15
   14003a7a1:	pop    rdi
   14003a7a2:	push   rdx
   14003a7a3:	push   r11
   14003a7a5:	rex.WRB
   14003a7a6:	rex.B
   14003a7a7:	rex.WRX pop rdi
   14003a7a9:	rex.XB
   14003a7aa:	rex.WRXB
   14003a7ab:	rex.WRX push rsp
   14003a7ad:	push   rdx
   14003a7ae:	rex.WRXB
   14003a7af:	rex.WR add BYTE PTR [rax],r8b
   14003a7b2:	add    BYTE PTR [rax],al
   14003a7b4:	add    BYTE PTR [rax],al
   14003a7b6:	add    BYTE PTR [rax],al
   14003a7b8:	rex.RX push rdi
   14003a7ba:	push   rbx
   14003a7bb:	pop    rdi
   14003a7bc:	push   r8
   14003a7be:	rex.WB
   14003a7bf:	rex.RX
   14003a7c0:	rex.B
   14003a7c1:	rex.WB
   14003a7c2:	rex.WR add BYTE PTR [rax],r8b
   14003a7c5:	add    BYTE PTR [rax],al
   14003a7c7:	add    BYTE PTR [rsi+0x57],al
   14003a7ca:	push   rbx
   14003a7cb:	pop    rdi
   14003a7cc:	push   r8
   14003a7ce:	push   rax
   14003a7cf:	rex.XB
   14003a7d0:	rex.RX
   14003a7d1:	rex.RXB add BYTE PTR [r8],r8b
   14003a7d4:	add    BYTE PTR [rax],al
   14003a7d6:	add    BYTE PTR [rax],al
   14003a7d8:	rex.RX push rdi
   14003a7da:	push   rbx
   14003a7db:	pop    rdi
   14003a7dc:	push   r11
   14003a7de:	push   rbx
   14003a7df:	rex.RB push r10
   14003a7e1:	push   rsp
   14003a7e2:	pop    rdi
   14003a7e3:	rex.X
   14003a7e4:	rex.B
   14003a7e5:	rex.R pop rdi
   14003a7e7:	rex.RX push rdi
   14003a7e9:	rex.XB pop r15
   14003a7eb:	rex.R
   14003a7ec:	push   r12
   14003a7ee:	add    BYTE PTR [r14+0x57],al
   14003a7f2:	push   rbx
   14003a7f3:	pop    rdi
   14003a7f4:	push   r13
   14003a7f6:	push   rsp
   14003a7f7:	rex.W pop rdi
   14003a7f9:	rex.XB
   14003a7fa:	rex.WRXB
   14003a7fb:	rex.WRX push rsp
   14003a7fd:	rex.RB pop r8
   14003a7ff:	push   rsp
   14003a800:	pop    rdi
   14003a801:	rex.XB
   14003a802:	rex.B
   14003a803:	rex.XB
   14003a804:	rex.W
   14003a805:	rex.RB pop r15
   14003a807:	rex.RB pop r8
   14003a809:	push   rax
   14003a80a:	rex.WB push r10
   14003a80c:	push   r12
   14003a80e:	rex.WB
   14003a80f:	rex.WRXB
   14003a810:	rex.WRX pop rdi
   14003a812:	rex.WRB
   14003a813:	rex.WB
   14003a814:	rex.WR
   14003a815:	rex.WB push r11
   14003a817:	rex.RB
   14003a818:	rex.XB
   14003a819:	rex.WRXB
   14003a81a:	rex.WRX
   14003a81b:	add    BYTE PTR [rax],r8b
   14003a81e:	add    BYTE PTR [rax],al
   14003a820:	rex.RX push rdi
   14003a822:	push   rbx
   14003a823:	pop    rdi
   14003a824:	rex.X push rdx
   14003a826:	rex.RB
   14003a827:	rex.B
   14003a828:	rex.WXB pop r15
   14003a82a:	rex.WRXB
   14003a82b:	rex.WRX pop rdi
   14003a82d:	rex.RX push rdi
   14003a82f:	rex.XB pop r15
   14003a831:	rex.WR
   14003a832:	rex.WB push r11
   14003a834:	push   rsp
   14003a835:	rex.RB
   14003a836:	rex.WRX
   14003a837:	rex.RB push r10
   14003a839:	pop    rdi
   14003a83a:	rex.RX
   14003a83b:	rex.B
   14003a83c:	rex.WB
   14003a83d:	rex.WR
   14003a83e:	rex.RB
   14003a83f:	add    BYTE PTR [rax],r8b
   14003a842:	add    BYTE PTR [rax],al
   14003a844:	add    BYTE PTR [rax],al
   14003a846:	add    BYTE PTR [rax],al
   14003a848:	rex.RX push rdi
   14003a84a:	push   rbx
   14003a84b:	pop    rdi
   14003a84c:	rex.XB
   14003a84d:	rex.XB pop r15
   14003a84f:	rex.WRX
   14003a850:	rex.WRXB
   14003a851:	rex.WRX pop rdi
   14003a853:	push   rsp
   14003a854:	rex.XB push r8
   14003a856:	pop    rdi
   14003a857:	rex.RB push r14
   14003a859:	rex.RB
   14003a85a:	rex.WRX push rsp
   14003a85c:	pop    rdi
   14003a85d:	rex.WR
   14003a85e:	rex.WB
   14003a85f:	rex.WRB
   14003a860:	rex.WB push r12
   14003a862:	pop    rdi
   14003a863:	push   rax
   14003a864:	rex.RB push r10
   14003a866:	pop    rdi
   14003a867:	push   rbx
   14003a868:	rex.RB
   14003a869:	rex.XB
   14003a86a:	rex.WRXB
   14003a86b:	rex.WRX
   14003a86c:	add    BYTE PTR [rax],r8b
   14003a86f:	add    BYTE PTR [rsi+0x57],al
   14003a872:	push   rbx
   14003a873:	pop    rdi
   14003a874:	rex.XB
   14003a875:	rex.RB push r10
   14003a877:	push   rsp
   14003a878:	pop    rdi
   14003a879:	rex.WB push r8
   14003a87b:	pop    rdi
   14003a87c:	rex.W
   14003a87d:	push   r11
   14003a87f:	rex.W pop rdi
   14003a881:	rex.WR
   14003a882:	rex.RB
   14003a883:	rex.WRX
   14003a884:	rex.RXB push r12
   14003a886:	rex.W add BYTE PTR [rsi+0x57],al
   14003a88a:	push   rbx
   14003a88b:	pop    rdi
   14003a88c:	rex.XB
   14003a88d:	rex.W
   14003a88e:	rex.B
   14003a88f:	rex.WB
   14003a890:	rex.WRX add BYTE PTR [rax],r8b
   14003a893:	add    BYTE PTR [rax],al
   14003a895:	add    BYTE PTR [rax],al
   14003a897:	add    BYTE PTR [rsi+0x57],al
   14003a89a:	push   rbx
   14003a89b:	pop    rdi
   14003a89c:	rex.XB
   14003a89d:	rex.W
   14003a89e:	rex.B
   14003a89f:	rex.WB
   14003a8a0:	rex.WRX pop rdi
   14003a8a2:	push   rdx
   14003a8a3:	rex.RB
   14003a8a4:	rex.XB
   14003a8a5:	rex.WRXB
   14003a8a6:	rex.WRX
   14003a8a7:	rex.WRX
   14003a8a8:	rex.RB
   14003a8a9:	rex.XB push r12
   14003a8ab:	pop    rdi
   14003a8ac:	push   rsp
   14003a8ad:	rex.WB
   14003a8ae:	rex.WRB
   14003a8af:	rex.RB
   14003a8b0:	rex.WRXB push r13
   14003a8b2:	push   rsp
   14003a8b3:	add    BYTE PTR [rax],al
   14003a8b5:	add    BYTE PTR [rax],al
   14003a8b7:	add    BYTE PTR [rsi+0x57],al
   14003a8ba:	push   rbx
   14003a8bb:	pop    rdi
   14003a8bc:	rex.XB
   14003a8bd:	rex.WRXB
   14003a8be:	rex.WRB push r8
   14003a8c0:	rex.WR
   14003a8c1:	rex.RB push r12
   14003a8c3:	rex.WB
   14003a8c4:	rex.WRXB
   14003a8c5:	rex.WRX add BYTE PTR [rax],r8b
   14003a8c8:	rex.RX push rdi
   14003a8ca:	push   rbx
   14003a8cb:	pop    rdi
   14003a8cc:	rex.XB
   14003a8cd:	rex.WRXB
   14003a8ce:	rex.WRX
   14003a8cf:	rex.XB push r13
   14003a8d1:	push   rdx
   14003a8d2:	rex.RB
   14003a8d3:	rex.WRX push rsp
   14003a8d5:	pop    rdi
   14003a8d6:	rex.X
   14003a8d7:	rex.WR
   14003a8d8:	rex.WRXB
   14003a8d9:	rex.XB
   14003a8da:	rex.WXB
   14003a8db:	rex.WB
   14003a8dc:	rex.WRX
   14003a8dd:	rex.RXB pop r15
   14003a8df:	rex.XB
   14003a8e0:	rex.WRXB
   14003a8e1:	rex.WRX
   14003a8e2:	rex.WRX
   14003a8e3:	rex.RB
   14003a8e4:	rex.XB push r12
   14003a8e6:	add    BYTE PTR [rax],al
   14003a8e8:	rex.RX push rdi
   14003a8ea:	push   rbx
   14003a8eb:	pop    rdi
   14003a8ec:	rex.XB
   14003a8ed:	rex.WRXB
   14003a8ee:	rex.WRX
   14003a8ef:	rex.WRX
   14003a8f0:	rex.RB
   14003a8f1:	rex.XB push r12
   14003a8f3:	rex.RB
   14003a8f4:	rex.R pop rdi
   14003a8f6:	push   rbx
   14003a8f7:	rex.WRXB
   14003a8f8:	rex.XB
   14003a8f9:	rex.WXB
   14003a8fa:	rex.RB push r12
   14003a8fc:	pop    rdi
   14003a8fd:	rex.RXB push r10
   14003a8ff:	rex.B
   14003a900:	rex.WRX push rbp
   14003a902:	rex.WR
   14003a903:	push   r10
   14003a905:	rex.WB push r12
   14003a907:	pop    rcx
	...
   14003a910:	rex.RX push rdi
   14003a912:	push   rbx
   14003a913:	pop    rdi
   14003a914:	rex.XB
   14003a915:	rex.WRXB
   14003a916:	rex.WRX
   14003a917:	rex.WRX
   14003a918:	rex.RB
   14003a919:	rex.XB push r12
   14003a91b:	rex.RB
   14003a91c:	rex.R pop rdi
   14003a91e:	push   rbx
   14003a91f:	rex.WRXB
   14003a920:	rex.XB
   14003a921:	rex.WXB
   14003a922:	rex.RB push r12
   14003a924:	pop    rdi
   14003a925:	push   rsp
   14003a926:	rex.WB
   14003a927:	rex.WRB
   14003a928:	rex.RB
   14003a929:	rex.WRXB push r13
   14003a92b:	push   rsp
   14003a92c:	add    BYTE PTR [rax],al
   14003a92e:	add    BYTE PTR [rax],al
   14003a930:	rex.RX push rdi
   14003a932:	push   rbx
   14003a933:	pop    rdi
   14003a934:	rex.XB
   14003a935:	rex.WRXB
   14003a936:	rex.WRX
   14003a937:	rex.WRX
   14003a938:	rex.RB
   14003a939:	rex.XB push r12
   14003a93b:	rex.WB
   14003a93c:	rex.WRXB
   14003a93d:	rex.WRX pop rdi
   14003a93f:	push   rcx
   14003a940:	push   rbp
   14003a941:	rex.WRXB push r12
   14003a943:	pop    r15
   14003a945:	rex.R
   14003a946:	rex.WB push r11
   14003a948:	rex.XB
   14003a949:	rex.WRXB
   14003a94a:	rex.WRX
   14003a94b:	rex.WRX
   14003a94c:	rex.RB
   14003a94d:	rex.XB push r12
   14003a94f:	add    BYTE PTR [rsi+0x57],al
   14003a952:	push   rbx
   14003a953:	pop    rdi
   14003a954:	rex.XB
   14003a955:	rex.WRXB
   14003a956:	rex.WRX
   14003a957:	rex.WRX
   14003a958:	rex.RB
   14003a959:	rex.XB push r12
   14003a95b:	rex.WB
   14003a95c:	rex.WRXB
   14003a95d:	rex.WRX pop rdi
   14003a95f:	push   rcx
   14003a960:	push   rbp
   14003a961:	rex.WRXB push r12
   14003a963:	pop    r15
   14003a965:	rex.R
   14003a966:	rex.WB push r11
   14003a968:	rex.XB
   14003a969:	rex.WRXB
   14003a96a:	rex.WRX
   14003a96b:	rex.WRX
   14003a96c:	rex.RB
   14003a96d:	rex.XB push r12
   14003a96f:	pop    rdi
   14003a970:	push   r11
   14003a972:	push   rbx
   14003a973:	rex.RB push r10
   14003a975:	push   rsp
   14003a976:	add    BYTE PTR [rax],al
   14003a978:	rex.RX push rdi
   14003a97a:	push   rbx
   14003a97b:	pop    rdi
   14003a97c:	rex.XB
   14003a97d:	rex.WRXB
   14003a97e:	rex.WRX
   14003a97f:	rex.WRX
   14003a980:	rex.RB
   14003a981:	rex.XB push r12
   14003a983:	rex.WB
   14003a984:	rex.WRXB
   14003a985:	rex.WRX pop rdi
   14003a987:	push   rcx
   14003a988:	push   rbp
   14003a989:	rex.WRXB push r12
   14003a98b:	pop    r15
   14003a98d:	push   rbx
   14003a98e:	push   rsp
   14003a98f:	rex.B
   14003a990:	rex.XB
   14003a991:	rex.WXB pop r15
   14003a993:	push   rsp
   14003a994:	push   rdx
   14003a995:	rex.B
   14003a996:	rex.XB
   14003a997:	rex.RB pop r15
   14003a999:	rex.WRXB
   14003a99a:	rex.WRX pop rdi
   14003a99c:	rex.B
   14003a99d:	rex.R
   14003a99e:	add    BYTE PTR [rsi+0x57],r8b
   14003a9a2:	push   rbx
   14003a9a3:	pop    rdi
   14003a9a4:	rex.XB push r8
   14003a9a6:	rex.WRB pop r15
   14003a9a8:	push   rax
   14003a9a9:	rex.RB push r10
   14003a9ab:	rex.WB
   14003a9ac:	rex.WRXB
   14003a9ad:	rex.R pop rdi
   14003a9af:	rex.WB
   14003a9b0:	rex.WRX pop rdi
   14003a9b2:	push   rbx
   14003a9b3:	rex.RB
   14003a9b4:	rex.XB
   14003a9b5:	rex.WRXB
   14003a9b6:	rex.WRX
   14003a9b7:	rex.R push rbx
   14003a9b9:	add    BYTE PTR [rax],al
   14003a9bb:	add    BYTE PTR [rax],al
   14003a9bd:	add    BYTE PTR [rax],al
   14003a9bf:	add    BYTE PTR [rsi+0x57],al
   14003a9c2:	push   rbx
   14003a9c3:	pop    rdi
   14003a9c4:	rex.XB push r10
   14003a9c6:	rex.RB
   14003a9c7:	rex.R push rbx
   14003a9c9:	add    BYTE PTR [rax],al
   14003a9cb:	add    BYTE PTR [rax],al
   14003a9cd:	add    BYTE PTR [rax],al
   14003a9cf:	add    BYTE PTR [rsi+0x57],al
   14003a9d2:	push   rbx
   14003a9d3:	pop    rdi
   14003a9d4:	rex.XB push r12
   14003a9d6:	push   rdx
   14003a9d7:	rex.WR
   14003a9d8:	rex.XB
   14003a9d9:	rex.W
   14003a9da:	rex.B
   14003a9db:	rex.WRX add BYTE PTR [rax],r8b
   14003a9de:	add    BYTE PTR [rax],al
   14003a9e0:	rex.RX push rdi
   14003a9e2:	push   rbx
   14003a9e3:	pop    rdi
   14003a9e4:	rex.XB push r12
   14003a9e6:	push   rdx
   14003a9e7:	rex.WR push rbx
   14003a9e9:	push   rdx
   14003a9ea:	push   rsi
   14003a9eb:	pop    rdi
   14003a9ec:	push   rbx
   14003a9ed:	rex.W push rbp
   14003a9ef:	push   rsp
   14003a9f0:	rex.R
   14003a9f1:	rex.WRXB push r15
   14003a9f3:	rex.WRX pop rdi
   14003a9f5:	push   rbx
   14003a9f6:	rex.WR
   14003a9f7:	rex.RB
   14003a9f8:	rex.RB push r8
   14003a9fa:	add    BYTE PTR [rax],al
   14003a9fc:	add    BYTE PTR [rax],al
   14003a9fe:	add    BYTE PTR [rax],al
   14003aa00:	rex.RX push rdi
   14003aa02:	push   rbx
   14003aa03:	pop    rdi
   14003aa04:	rex.R
   14003aa05:	rex.RB
   14003aa06:	rex.X push rbp
   14003aa08:	rex.RXB
   14003aa09:	rex.X push rdx
   14003aa0b:	rex.RB
   14003aa0c:	rex.B
   14003aa0d:	rex.WXB pop r15
   14003aa0f:	rex.WRXB
   14003aa10:	rex.WRX pop rdi
   14003aa12:	rex.R
   14003aa13:	rex.WRXB push r13
   14003aa15:	rex.X
   14003aa16:	rex.WR
   14003aa17:	rex.RB pop r15
   14003aa19:	rex.XB
   14003aa1a:	rex.WRXB
   14003aa1b:	rex.WRB push r8
   14003aa1d:	rex.WR
   14003aa1e:	rex.RB push r12
   14003aa20:	rex.WB
   14003aa21:	rex.WRXB
   14003aa22:	rex.WRX add BYTE PTR [rax],r8b
   14003aa25:	add    BYTE PTR [rax],al
   14003aa27:	add    BYTE PTR [rsi+0x57],al
   14003aa2a:	push   rbx
   14003aa2b:	pop    rdi
   14003aa2c:	rex.R
   14003aa2d:	rex.RB
   14003aa2e:	rex.WRX
   14003aa2f:	rex.WB
   14003aa30:	rex.RB
   14003aa31:	rex.R pop rdi
   14003aa33:	push   rax
   14003aa34:	rex.RB push r10
   14003aa36:	pop    rdi
   14003aa37:	rex.WB push r8
   14003aa39:	pop    rdi
   14003aa3a:	rex.XB
   14003aa3b:	rex.WRXB
   14003aa3c:	rex.WRX push rsp
   14003aa3e:	rex.RB pop r8
   14003aa40:	push   rsp
   14003aa41:	pop    rdi
   14003aa42:	push   rbx
   14003aa43:	rex.WB pop r10
   14003aa45:	add    BYTE PTR [r8],r8b
   14003aa48:	rex.RX push rdi
   14003aa4a:	push   rbx
   14003aa4b:	pop    rdi
   14003aa4c:	rex.R
   14003aa4d:	rex.RB
   14003aa4e:	rex.WRX
   14003aa4f:	rex.WB
   14003aa50:	rex.RB
   14003aa51:	rex.R pop rdi
   14003aa53:	push   rax
   14003aa54:	rex.RB push r10
   14003aa56:	pop    rdi
   14003aa57:	rex.WB push r8
   14003aa59:	pop    rdi
   14003aa5a:	rex.WR
   14003aa5b:	rex.WRXB
   14003aa5c:	rex.XB
   14003aa5d:	rex.WXB push r11
   14003aa5f:	add    BYTE PTR [rsi+0x57],al
   14003aa62:	push   rbx
   14003aa63:	pop    rdi
   14003aa64:	rex.R
   14003aa65:	rex.RB
   14003aa66:	rex.WRX pop rcx
   14003aa68:	pop    rdi
   14003aa69:	push   rax
   14003aa6a:	rex.RB push r10
   14003aa6c:	pop    rdi
   14003aa6d:	rex.WB push r8
   14003aa6f:	pop    rdi
   14003aa70:	rex.RB push r14
   14003aa72:	rex.RB
   14003aa73:	rex.WRX push rsp
   14003aa75:	pop    rdi
   14003aa76:	rex.WR
   14003aa77:	rex.WB
   14003aa78:	rex.WRB
   14003aa79:	rex.WB push r12
   14003aa7b:	pop    rdi
   14003aa7c:	push   rax
   14003aa7d:	rex.RB push r10
   14003aa7f:	pop    rdi
   14003aa80:	push   rbx
   14003aa81:	rex.RB
   14003aa82:	rex.XB
   14003aa83:	rex.WRXB
   14003aa84:	rex.WRX
   14003aa85:	add    BYTE PTR [rax],r8b
   14003aa88:	rex.RX push rdi
   14003aa8a:	push   rbx
   14003aa8b:	pop    rdi
   14003aa8c:	rex.R
   14003aa8d:	rex.WB push r11
   14003aa8f:	rex.B
   14003aa90:	rex.X
   14003aa91:	rex.WR
   14003aa92:	rex.RB pop r15
   14003aa94:	rex.XB push r12
   14003aa96:	push   rdx
   14003aa97:	rex.WR
   14003aa98:	rex.XB
   14003aa99:	rex.W
   14003aa9a:	rex.B
   14003aa9b:	rex.WRX pop rdi
   14003aa9d:	rex.RB
   14003aa9e:	rex.WRX
   14003aa9f:	rex.XB push r10
   14003aaa1:	pop    rcx
   14003aaa2:	push   rax
   14003aaa3:	push   rsp
   14003aaa4:	add    BYTE PTR [rax],al
   14003aaa6:	add    BYTE PTR [rax],al
   14003aaa8:	rex.RX push rdi
   14003aaaa:	push   rbx
   14003aaab:	pop    rdi
   14003aaac:	rex.R
   14003aaad:	rex.WB push r11
   14003aaaf:	rex.B
   14003aab0:	rex.X
   14003aab1:	rex.WR
   14003aab2:	rex.RB pop r15
   14003aab4:	rex.RB push r11
   14003aab6:	push   rsp
   14003aab7:	rex.B
   14003aab8:	rex.X
   14003aab9:	rex.WR
   14003aaba:	rex.WB push r11
   14003aabc:	rex.W pop rdi
   14003aabe:	rex.WR
   14003aabf:	rex.WRXB
   14003aac0:	rex.RXB add BYTE PTR [r8],r8b
   14003aac3:	add    BYTE PTR [rax],al
   14003aac5:	add    BYTE PTR [rax],al
   14003aac7:	add    BYTE PTR [rsi+0x57],al
   14003aaca:	push   rbx
   14003aacb:	pop    rdi
   14003aacc:	rex.R
   14003aacd:	rex.WB push r11
   14003aacf:	rex.B
   14003aad0:	rex.X
   14003aad1:	rex.WR
   14003aad2:	rex.RB pop r15
   14003aad4:	rex.WXB
   14003aad5:	rex.RB
   14003aad6:	rex.RB push r8
   14003aad8:	rex.B
   14003aad9:	rex.WR
   14003aada:	rex.WB push r14
   14003aadc:	rex.RB pop r15
   14003aade:	push   rsp
   14003aadf:	rex.WB
   14003aae0:	rex.WRB
   14003aae1:	rex.RB push r10
   14003aae3:	pop    rdi
   14003aae4:	push   rsi
   14003aae5:	rex.B
   14003aae6:	rex.WR
   14003aae7:	rex.WB
   14003aae8:	rex.R
   14003aae9:	push   r12
   14003aaeb:	rex.WB
   14003aaec:	rex.WRXB
   14003aaed:	rex.WRX add BYTE PTR [rax],r8b
   14003aaf0:	rex.RX push rdi
   14003aaf2:	push   rbx
   14003aaf3:	pop    rdi
   14003aaf4:	rex.R
   14003aaf5:	rex.WRX push rbx
   14003aaf7:	add    BYTE PTR [rsi+0x57],al
   14003aafa:	push   rbx
   14003aafb:	pop    rdi
   14003aafc:	rex.R
   14003aafd:	rex.WRX push rbx
   14003aaff:	pop    rdi
   14003ab00:	rex.XB
   14003ab01:	rex.B
   14003ab02:	rex.XB
   14003ab03:	rex.W
   14003ab04:	rex.RB pop r15
   14003ab06:	rex.WRB
   14003ab07:	pop    r8
   14003ab09:	pop    rdi
   14003ab0a:	push   rsp
   14003ab0b:	push   rsp
   14003ab0c:	rex.WR add BYTE PTR [rax],r8b
   14003ab0f:	add    BYTE PTR [rsi+0x57],al
   14003ab12:	push   rbx
   14003ab13:	pop    rdi
   14003ab14:	rex.R
   14003ab15:	rex.WRX push rbx
   14003ab17:	pop    rdi
   14003ab18:	rex.XB
   14003ab19:	rex.B
   14003ab1a:	rex.XB
   14003ab1b:	rex.W
   14003ab1c:	rex.RB pop r15
   14003ab1e:	rex.WRB
   14003ab1f:	rex.WB
   14003ab20:	rex.WRX pop rdi
   14003ab22:	push   rsp
   14003ab23:	push   rsp
   14003ab24:	rex.WR add BYTE PTR [rax],r8b
   14003ab27:	add    BYTE PTR [rsi+0x57],al
   14003ab2a:	push   rbx
   14003ab2b:	pop    rdi
   14003ab2c:	rex.R push rbp
   14003ab2e:	rex.WRB push r8
   14003ab30:	rex.R
   14003ab31:	push   r12
   14003ab33:	add    BYTE PTR [r8],al
   14003ab36:	add    BYTE PTR [rax],al
   14003ab38:	rex.RX push rdi
   14003ab3a:	push   rbx
   14003ab3b:	pop    rdi
   14003ab3c:	rex.R push rbp
   14003ab3e:	rex.WRB push r8
   14003ab40:	push   rsp
   14003ab41:	rex.RB pop r8
   14003ab43:	push   rsp
   14003ab44:	add    BYTE PTR [rax],al
   14003ab46:	add    BYTE PTR [rax],al
   14003ab48:	rex.RX push rdi
   14003ab4a:	push   rbx
   14003ab4b:	pop    rdi
   14003ab4c:	rex.RB
   14003ab4d:	rex.WRX
   14003ab4e:	rex.B
   14003ab4f:	rex.X
   14003ab50:	rex.WR
   14003ab51:	rex.RB pop r15
   14003ab53:	rex.WXB
   14003ab54:	rex.RB push r10
   14003ab56:	rex.WRX
   14003ab57:	rex.RB
   14003ab58:	rex.WR pop rdi
   14003ab5a:	rex.WRB
   14003ab5b:	rex.WRXB
   14003ab5c:	rex.R
   14003ab5d:	rex.RB pop r15
   14003ab5f:	rex.RX
   14003ab60:	rex.WRXB push r10
   14003ab62:	pop    rdi
   14003ab63:	rex.WB
   14003ab64:	rex.WRX
   14003ab65:	rex.X
   14003ab66:	rex.WRXB push r13
   14003ab68:	rex.WRX
   14003ab69:	rex.R pop rdi
   14003ab6b:	push   rdi
   14003ab6c:	push   rbx
   14003ab6d:	push   rax
   14003ab6e:	add    BYTE PTR [rax],al
   14003ab70:	rex.RX push rdi
   14003ab72:	push   rbx
   14003ab73:	pop    rdi
   14003ab74:	rex.RB
   14003ab75:	rex.WRX
   14003ab76:	rex.RXB pop r15
   14003ab78:	rex.WR
   14003ab79:	rex.WRXB
   14003ab7a:	rex.RXB pop r15
   14003ab7c:	rex.X push rbp
   14003ab7e:	rex.RX
   14003ab7f:	rex.RX
   14003ab80:	rex.RB push r10
   14003ab82:	pop    rdi
   14003ab83:	push   rbx
   14003ab84:	rex.WR
   14003ab85:	rex.WRXB push r12
   14003ab87:	push   rbx
	...
   14003ab90:	rex.RX push rdi
   14003ab92:	push   rbx
   14003ab93:	pop    rdi
   14003ab94:	rex.RB
   14003ab95:	rex.WRX
   14003ab96:	rex.RXB pop r15
   14003ab98:	rex.WR
   14003ab99:	rex.WRXB
   14003ab9a:	rex.RXB pop r15
   14003ab9c:	rex.X push rbp
   14003ab9e:	rex.RX
   14003ab9f:	rex.RX
   14003aba0:	rex.RB push r10
   14003aba2:	pop    rdi
   14003aba3:	push   rsp
   14003aba4:	rex.W push rdx
   14003aba6:	rex.RB
   14003aba7:	rex.B
   14003aba8:	rex.R push rbx
   14003abaa:	add    BYTE PTR [rax],al
   14003abac:	add    BYTE PTR [rax],al
   14003abae:	add    BYTE PTR [rax],al
   14003abb0:	rex.RX push rdi
   14003abb2:	push   rbx
   14003abb3:	pop    rdi
   14003abb4:	rex.RB
   14003abb5:	rex.WRX
   14003abb6:	rex.RXB pop r15
   14003abb8:	rex.WRX
   14003abb9:	rex.WRXB push r12
   14003abbb:	rex.WB
   14003abbc:	rex.RX pop rcx
   14003abbe:	pop    rdi
   14003abbf:	rex.X push rbp
   14003abc1:	rex.RX
   14003abc2:	rex.RX
   14003abc3:	rex.RB push r10
   14003abc5:	pop    rdi
   14003abc6:	push   rbx
   14003abc7:	rex.WR
   14003abc8:	rex.WRXB push r12
   14003abca:	push   rbx
   14003abcb:	add    BYTE PTR [rax],al
   14003abcd:	add    BYTE PTR [rax],al
   14003abcf:	add    BYTE PTR [rsi+0x57],al
   14003abd2:	push   rbx
   14003abd3:	pop    rdi
   14003abd4:	rex.RB
   14003abd5:	rex.WRX
   14003abd6:	rex.RXB pop r15
   14003abd8:	rex.WRX
   14003abd9:	rex.WRXB push r12
   14003abdb:	rex.WB
   14003abdc:	rex.RX pop rcx
   14003abde:	pop    rdi
   14003abdf:	rex.X push rbp
   14003abe1:	rex.RX
   14003abe2:	rex.RX
   14003abe3:	rex.RB push r10
   14003abe5:	pop    rdi
   14003abe6:	push   rsp
   14003abe7:	rex.W push rdx
   14003abe9:	rex.RB
   14003abea:	rex.B
   14003abeb:	rex.R push rbx
   14003abed:	add    BYTE PTR [rax],al
   14003abef:	add    BYTE PTR [rsi+0x57],al
   14003abf2:	push   rbx
   14003abf3:	pop    rdi
   14003abf4:	rex.RB
   14003abf5:	rex.WRX
   14003abf6:	rex.RXB pop r15
   14003abf8:	push   rdx
   14003abf9:	rex.RB
   14003abfa:	rex.WB
   14003abfb:	rex.WRX
   14003abfc:	rex.WX
   14003abfd:	rex.RB
   14003abfe:	rex.XB push r12
   14003ac00:	pop    rdi
   14003ac01:	rex.X push rbp
   14003ac03:	rex.RX
   14003ac04:	rex.RX
   14003ac05:	rex.RB push r10
   14003ac07:	pop    rdi
   14003ac08:	push   rbx
   14003ac09:	rex.WR
   14003ac0a:	rex.WRXB push r12
   14003ac0c:	push   rbx
   14003ac0d:	add    BYTE PTR [rax],al
   14003ac0f:	add    BYTE PTR [rsi+0x57],al
   14003ac12:	push   rbx
   14003ac13:	pop    rdi
   14003ac14:	rex.RB
   14003ac15:	rex.WRX
   14003ac16:	rex.RXB pop r15
   14003ac18:	push   rdx
   14003ac19:	rex.RB
   14003ac1a:	rex.WB
   14003ac1b:	rex.WRX
   14003ac1c:	rex.WX
   14003ac1d:	rex.RB
   14003ac1e:	rex.XB push r12
   14003ac20:	pop    rdi
   14003ac21:	rex.X push rbp
   14003ac23:	rex.RX
   14003ac24:	rex.RX
   14003ac25:	rex.RB push r10
   14003ac27:	pop    rdi
   14003ac28:	push   rsp
   14003ac29:	rex.W push rdx
   14003ac2b:	rex.RB
   14003ac2c:	rex.B
   14003ac2d:	rex.R push rbx
   14003ac2f:	add    BYTE PTR [rsi+0x57],al
   14003ac32:	push   rbx
   14003ac33:	pop    rdi
   14003ac34:	rex.RB pop r8
   14003ac36:	rex.XB
   14003ac37:	rex.RB
   14003ac38:	rex.RB
   14003ac39:	rex.R pop rdi
   14003ac3b:	rex.R
   14003ac3c:	rex.WRX push rbx
   14003ac3e:	pop    rdi
   14003ac3f:	push   rsp
   14003ac40:	rex.W push rdx
   14003ac42:	rex.RB
   14003ac43:	rex.B
   14003ac44:	rex.R push rbx
   14003ac46:	pop    rdi
   14003ac47:	push   rcx
   14003ac48:	push   rbp
   14003ac49:	rex.WRXB push r12
   14003ac4b:	add    BYTE PTR [r8],al
   14003ac4e:	add    BYTE PTR [rax],al
   14003ac50:	rex.RX push rdi
   14003ac52:	push   rbx
   14003ac53:	pop    rdi
   14003ac54:	rex.RX
   14003ac55:	rex.WB
   14003ac56:	rex.WR push rsp
   14003ac58:	rex.RB push r10
   14003ac5a:	add    BYTE PTR [rax],al
   14003ac5c:	add    BYTE PTR [rax],al
   14003ac5e:	add    BYTE PTR [rax],al
   14003ac60:	rex.RX push rdi
   14003ac62:	push   rbx
   14003ac63:	pop    rdi
   14003ac64:	rex.RX push rsp
   14003ac66:	push   rax
   14003ac67:	add    BYTE PTR [rsi+0x57],al
   14003ac6a:	push   rbx
   14003ac6b:	pop    rdi
   14003ac6c:	rex.RX push rdi
   14003ac6e:	rex.XB pop r15
   14003ac70:	rex.WR
   14003ac71:	rex.WB push r11
   14003ac73:	push   rsp
   14003ac74:	rex.RB
   14003ac75:	rex.WRX
   14003ac76:	rex.RB push r10
   14003ac78:	push   rbx
   14003ac79:	add    BYTE PTR [rax],al
   14003ac7b:	add    BYTE PTR [rax],al
   14003ac7d:	add    BYTE PTR [rax],al
   14003ac7f:	add    BYTE PTR [rsi+0x57],al
   14003ac82:	push   rbx
   14003ac83:	pop    rdi
   14003ac84:	rex.RX push rdi
   14003ac86:	rex.XB pop r15
   14003ac88:	push   rdx
   14003ac89:	rex.RB
   14003ac8a:	rex.RX push rdx
   14003ac8c:	rex.RB push r11
   14003ac8e:	rex.W pop rdi
   14003ac90:	push   rsp
   14003ac91:	rex.WB
   14003ac92:	rex.WRB
   14003ac93:	rex.RB
   14003ac94:	rex.WRXB push r13
   14003ac96:	push   rsp
   14003ac97:	add    BYTE PTR [rsi+0x57],al
   14003ac9a:	push   rbx
   14003ac9b:	pop    rdi
   14003ac9c:	rex.RX push rdi
   14003ac9e:	rex.RB
   14003ac9f:	rex.WRX
   14003aca0:	rex.RXB add BYTE PTR [r8],r8b
   14003aca3:	add    BYTE PTR [rax],al
   14003aca5:	add    BYTE PTR [rax],al
   14003aca7:	add    BYTE PTR [rsi+0x57],al
   14003acaa:	push   rbx
   14003acab:	pop    rdi
   14003acac:	rex.RXB
   14003acad:	rex.WR
   14003acae:	rex.WRXB
   14003acaf:	rex.X
   14003acb0:	rex.B
   14003acb1:	rex.WR push rbx
   14003acb3:	add    BYTE PTR [rax],al
   14003acb5:	add    BYTE PTR [rax],al
   14003acb7:	add    BYTE PTR [rsi+0x57],al
   14003acba:	push   rbx
   14003acbb:	pop    rdi
   14003acbc:	rex.RXB
   14003acbd:	rex.WR
   14003acbe:	rex.WRXB
   14003acbf:	rex.X
   14003acc0:	rex.B
   14003acc1:	rex.WR pop rdi
   14003acc3:	push   rax
   14003acc4:	rex.RB
   14003acc5:	rex.WRX
   14003acc6:	rex.R
   14003acc7:	rex.WB
   14003acc8:	rex.WRX
   14003acc9:	rex.RXB pop r15
   14003accb:	rex.B
   14003accc:	rex.XB
   14003accd:	rex.XB
   14003acce:	rex.RB push r8
   14003acd0:	push   rsp
   14003acd1:	push   rbx
   14003acd2:	pop    rdi
   14003acd3:	rex.WB
   14003acd4:	rex.WRX pop rdi
   14003acd6:	push   rdx
   14003acd7:	push   rdi
   14003acd8:	push   rbx
   14003acd9:	pop    rdi
   14003acda:	rex.WR
   14003acdb:	rex.WB push r11
   14003acdd:	push   rsp
   14003acde:	rex.RB
   14003acdf:	rex.WRX
   14003ace0:	rex.RB push r10
   14003ace2:	push   rbx
   14003ace3:	add    BYTE PTR [rax],al
   14003ace5:	add    BYTE PTR [rax],al
   14003ace7:	add    BYTE PTR [rsi+0x57],al
   14003acea:	push   rbx
   14003aceb:	pop    rdi
   14003acec:	rex.WB
   14003aced:	rex.R
   14003acee:	rex.B
   14003acef:	rex.WR
   14003acf0:	rex.WR
   14003acf1:	rex.WRXB
   14003acf2:	rex.XB
   14003acf3:	push   r12
   14003acf5:	rex.WRXB push r10
   14003acf7:	add    BYTE PTR [rsi+0x57],al
   14003acfa:	push   rbx
   14003acfb:	pop    rdi
   14003acfc:	rex.WB
   14003acfd:	rex.WRX
   14003acfe:	rex.XB push r10
   14003ad00:	rex.RB
   14003ad01:	push   r11
   14003ad03:	rex.RB
   14003ad04:	rex.R pop rdi
   14003ad06:	push   rbp
   14003ad07:	rex.R push rax
   14003ad09:	pop    rdi
   14003ad0a:	push   rbx
   14003ad0b:	rex.WRXB
   14003ad0c:	rex.XB
   14003ad0d:	rex.WXB
   14003ad0e:	rex.RB push r12
   14003ad10:	pop    rdi
   14003ad11:	rex.X push rbp
   14003ad13:	rex.RX
   14003ad14:	rex.RX
   14003ad15:	rex.RB push r10
   14003ad17:	add    BYTE PTR [rsi+0x57],al
   14003ad1a:	push   rbx
   14003ad1b:	pop    rdi
   14003ad1c:	rex.WB push r8
   14003ad1e:	pop    rdi
   14003ad1f:	push   rsp
   14003ad20:	rex.WRXB pop r15
   14003ad22:	push   rbx
   14003ad23:	rex.RB push r11
   14003ad25:	push   rbx
   14003ad26:	rex.WB
   14003ad27:	rex.WRXB
   14003ad28:	rex.WRX pop rdi
   14003ad2a:	rex.W
   14003ad2b:	push   r11
   14003ad2d:	rex.W pop rdi
   14003ad2f:	rex.WR
   14003ad30:	rex.RB
   14003ad31:	rex.WRX
   14003ad32:	rex.RXB push r12
   14003ad34:	rex.W add BYTE PTR [rax],al
   14003ad37:	add    BYTE PTR [rsi+0x57],al
   14003ad3a:	push   rbx
   14003ad3b:	pop    rdi
   14003ad3c:	rex.WB push r8
   14003ad3e:	pop    rdi
   14003ad3f:	push   rsp
   14003ad40:	rex.WRXB pop r15
   14003ad42:	push   rbx
   14003ad43:	rex.RB push r11
   14003ad45:	push   rbx
   14003ad46:	rex.WB
   14003ad47:	rex.WRXB
   14003ad48:	rex.WRX pop rdi
   14003ad4a:	rex.W
   14003ad4b:	push   r11
   14003ad4d:	rex.W pop rdi
   14003ad4f:	rex.WR
   14003ad50:	rex.WRXB
   14003ad51:	rex.XB
   14003ad52:	rex.WXB push r11
   14003ad54:	add    BYTE PTR [rax],al
   14003ad56:	add    BYTE PTR [rax],al
   14003ad58:	rex.RX push rdi
   14003ad5a:	push   rbx
   14003ad5b:	pop    rdi
   14003ad5c:	rex.WXB
   14003ad5d:	rex.RB push r10
   14003ad5f:	rex.WRX
   14003ad60:	rex.RB
   14003ad61:	rex.WR pop rdi
   14003ad63:	push   rsp
   14003ad64:	rex.XB push r8
   14003ad66:	pop    rdi
   14003ad67:	push   rdx
   14003ad68:	rex.RB push r11
   14003ad6a:	rex.RB push r10
   14003ad6c:	push   rsi
   14003ad6d:	rex.RB
   14003ad6e:	rex.R pop rdi
   14003ad70:	push   rax
   14003ad71:	rex.WRXB push r10
   14003ad73:	push   rsp
   14003ad74:	push   rbx
   14003ad75:	add    BYTE PTR [rax],al
   14003ad77:	add    BYTE PTR [rsi+0x57],al
   14003ad7a:	push   rbx
   14003ad7b:	pop    rdi
   14003ad7c:	rex.WXB
   14003ad7d:	rex.RB push r10
   14003ad7f:	rex.WRX
   14003ad80:	rex.RB
   14003ad81:	rex.WR pop rdi
   14003ad83:	push   rbp
   14003ad84:	rex.R push rax
   14003ad86:	pop    rdi
   14003ad87:	push   rdx
   14003ad88:	rex.RB push r11
   14003ad8a:	rex.RB push r10
   14003ad8c:	push   rsi
   14003ad8d:	rex.RB
   14003ad8e:	rex.R pop rdi
   14003ad90:	push   rax
   14003ad91:	rex.WRXB push r10
   14003ad93:	push   rsp
   14003ad94:	push   rbx
   14003ad95:	add    BYTE PTR [rax],al
   14003ad97:	add    BYTE PTR [rsi+0x57],al
   14003ad9a:	push   rbx
   14003ad9b:	pop    rdi
   14003ad9c:	rex.WR
   14003ad9d:	rex.WB
   14003ad9e:	rex.WRB
   14003ad9f:	rex.WB push r12
   14003ada1:	rex.RB
   14003ada2:	rex.R pop rdi
   14003ada4:	rex.WR
   14003ada5:	rex.WRXB
   14003ada6:	rex.RXB
   14003ada7:	rex.RXB
   14003ada8:	rex.RB push r10
   14003adaa:	pop    rdi
   14003adab:	rex.WB
   14003adac:	rex.WRX push rsp
   14003adae:	rex.RB push r10
   14003adb0:	push   rsi
   14003adb1:	rex.B
   14003adb2:	rex.WR add BYTE PTR [rax],r8b
   14003adb5:	add    BYTE PTR [rax],al
   14003adb7:	add    BYTE PTR [rsi+0x57],al
   14003adba:	push   rbx
   14003adbb:	pop    rdi
   14003adbc:	rex.WR
   14003adbd:	rex.WB
   14003adbe:	rex.WRB
   14003adbf:	rex.WB push r12
   14003adc1:	pop    rdi
   14003adc2:	rex.R
   14003adc3:	rex.RB
   14003adc4:	rex.WRX
   14003adc5:	rex.WB
   14003adc6:	rex.RB
   14003adc7:	rex.R pop rdi
   14003adc9:	rex.WR
   14003adca:	rex.WRXB
   14003adcb:	rex.RXB pop r15
   14003adcd:	push   rdx
   14003adce:	push   r12
   14003add0:	rex.RB pop r15
   14003add2:	rex.WRXB
   14003add3:	rex.WRX
   14003add4:	rex.WR pop rcx
   14003add6:	pop    rdi
   14003add7:	rex.WB
   14003add8:	rex.WRX pop rdi
   14003adda:	rex.W
   14003addb:	rex.WB
   14003addc:	rex.RXB
   14003addd:	rex.W pop rdi
   14003addf:	rex.WR
   14003ade0:	rex.WRXB
   14003ade1:	rex.RXB pop r15
   14003ade3:	rex.WR
   14003ade4:	rex.WRXB
   14003ade5:	rex.B
   14003ade6:	add    BYTE PTR [rsi+0x57],r8b
   14003adea:	push   rbx
   14003adeb:	pop    rdi
   14003adec:	rex.WR
   14003aded:	rex.WRXB
   14003adee:	rex.XB
   14003adef:	rex.B
   14003adf0:	rex.WR pop rdi
   14003adf2:	rex.B
   14003adf3:	rex.R
   14003adf4:	rex.R push rdx
   14003adf6:	rex.RB push r11
   14003adf8:	push   rbx
   14003adf9:	pop    rdi
   14003adfa:	rex.WR
   14003adfb:	rex.WRXB
   14003adfc:	rex.WRXB
   14003adfd:	rex.WXB push r13
   14003adff:	push   rax
   14003ae00:	pop    rdi
   14003ae01:	rex.W
   14003ae02:	push   r11
   14003ae04:	rex.W pop rdi
   14003ae06:	rex.RX
   14003ae07:	rex.B
   14003ae08:	rex.XB push r12
   14003ae0a:	rex.WRXB push r10
   14003ae0c:	add    BYTE PTR [rax],al
   14003ae0e:	add    BYTE PTR [rax],al
   14003ae10:	rex.RX push rdi
   14003ae12:	push   rbx
   14003ae13:	pop    rdi
   14003ae14:	rex.WR
   14003ae15:	rex.WRXB
   14003ae16:	rex.XB
   14003ae17:	rex.B
   14003ae18:	rex.WR pop rdi
   14003ae1a:	push   rbx
   14003ae1b:	rex.RB push r11
   14003ae1d:	push   rbx
   14003ae1e:	rex.WB
   14003ae1f:	rex.WRXB
   14003ae20:	rex.WRX pop rdi
   14003ae22:	push   rdx
   14003ae23:	rex.RB
   14003ae24:	rex.RX pop rdi
   14003ae26:	push   rsp
   14003ae27:	rex.W push rdx
   14003ae29:	rex.RB push r11
   14003ae2b:	rex.W
   14003ae2c:	rex.WRXB
   14003ae2d:	rex.WR
   14003ae2e:	rex.R pop rdi
   14003ae30:	rex.RX
   14003ae31:	rex.B
   14003ae32:	rex.XB push r12
   14003ae34:	rex.WRXB push r10
   14003ae36:	add    BYTE PTR [rax],al
   14003ae38:	rex.RX push rdi
   14003ae3a:	push   rbx
   14003ae3b:	pop    rdi
   14003ae3c:	rex.WR
   14003ae3d:	rex.WRXB
   14003ae3e:	rex.XB
   14003ae3f:	rex.WXB
   14003ae40:	rex.R
   14003ae41:	rex.WRXB push r15
   14003ae43:	rex.WRX pop rdi
   14003ae45:	rex.XB
   14003ae46:	rex.RX
   14003ae47:	rex.RXB add BYTE PTR [r8],r8b
   14003ae4a:	add    BYTE PTR [rax],al
   14003ae4c:	add    BYTE PTR [rax],al
   14003ae4e:	add    BYTE PTR [rax],al
   14003ae50:	rex.RX push rdi
   14003ae52:	push   rbx
   14003ae53:	pop    rdi
   14003ae54:	rex.WR
   14003ae55:	rex.WRXB
   14003ae56:	rex.RXB pop r15
   14003ae58:	rex.X push rbp
   14003ae5a:	rex.RX
   14003ae5b:	rex.RX
   14003ae5c:	rex.RB push r10
   14003ae5e:	pop    rdi
   14003ae5f:	push   rax
   14003ae60:	rex.RB push r10
   14003ae62:	rex.XB
   14003ae63:	rex.RB
   14003ae64:	rex.WRX push rsp
   14003ae66:	rex.B
   14003ae67:	rex.RXB
   14003ae68:	rex.RB pop r15
   14003ae6a:	rex.RX push rdx
   14003ae6c:	rex.WRXB
   14003ae6d:	rex.WRB pop r15
   14003ae6f:	push   rax
   14003ae70:	rex.W pop rcx
   14003ae72:	push   rbx
   14003ae73:	rex.WB
   14003ae74:	rex.XB
   14003ae75:	rex.B
   14003ae76:	rex.WR pop rdi
   14003ae78:	rex.WRB
   14003ae79:	rex.RB
   14003ae7a:	rex.WRB pop r15
   14003ae7c:	push   rbx
   14003ae7d:	rex.WB pop r10
   14003ae7f:	add    BYTE PTR [r8],r8b
   14003ae82:	add    BYTE PTR [rax],al
   14003ae84:	add    BYTE PTR [rax],al
   14003ae86:	add    BYTE PTR [rax],al
   14003ae88:	rex.RX push rdi
   14003ae8a:	push   rbx
   14003ae8b:	pop    rdi
   14003ae8c:	rex.WR
   14003ae8d:	rex.WRXB
   14003ae8e:	rex.RXB pop r15
   14003ae90:	rex.R
   14003ae91:	push   r12
   14003ae93:	rex.B
   14003ae94:	rex.X
   14003ae95:	push   r11
   14003ae97:	rex.RB pop r15
   14003ae99:	rex.B
   14003ae9a:	rex.XB
   14003ae9b:	rex.XB
   14003ae9c:	rex.RB push r11
   14003ae9e:	push   rbx
   14003ae9f:	pop    rdi
   14003aea0:	push   rdx
   14003aea1:	rex.RB push r12
   14003aea3:	push   rdx
   14003aea4:	pop    rcx
   14003aea5:	pop    rdi
   14003aea6:	push   rax
   14003aea7:	rex.RB push r10
   14003aea9:	rex.WB
   14003aeaa:	rex.WRXB
   14003aeab:	rex.R pop rdi
   14003aead:	rex.WB
   14003aeae:	rex.WRX pop rdi
   14003aeb0:	push   rbx
   14003aeb1:	rex.RB
   14003aeb2:	rex.XB push r11
   14003aeb4:	add    BYTE PTR [rax],al
   14003aeb6:	add    BYTE PTR [rax],al
   14003aeb8:	rex.RX push rdi
   14003aeba:	push   rbx
   14003aebb:	pop    rdi
   14003aebc:	rex.WR
   14003aebd:	rex.WRXB
   14003aebe:	rex.RXB pop r15
   14003aec0:	rex.R
   14003aec1:	push   r12
   14003aec3:	rex.B
   14003aec4:	rex.X
   14003aec5:	push   r11
   14003aec7:	rex.RB pop r15
   14003aec9:	rex.B
   14003aeca:	rex.XB
   14003aecb:	rex.XB
   14003aecc:	rex.RB push r11
   14003aece:	push   rbx
   14003aecf:	pop    rdi
   14003aed0:	push   rdx
   14003aed1:	rex.RB push r12
   14003aed3:	push   rdx
   14003aed4:	pop    rcx
   14003aed5:	pop    rdi
   14003aed6:	push   rsp
   14003aed7:	rex.WB
   14003aed8:	rex.WRB
   14003aed9:	rex.RB push r11
   14003aedb:	add    BYTE PTR [rax],al
   14003aedd:	add    BYTE PTR [rax],al
   14003aedf:	add    BYTE PTR [rsi+0x57],al
   14003aee2:	push   rbx
   14003aee3:	pop    rdi
   14003aee4:	rex.WRB push r13
   14003aee6:	rex.WR push rsp
   14003aee8:	rex.WB
   14003aee9:	rex.WRX
   14003aeea:	rex.RB push r12
   14003aeec:	add    BYTE PTR [rax],al
   14003aeee:	add    BYTE PTR [rax],al
   14003aef0:	rex.RX push rdi
   14003aef2:	push   rbx
   14003aef3:	pop    rdi
   14003aef4:	rex.WRX
   14003aef5:	push   r12
   14003aef7:	pop    rdi
   14003aef8:	push   rbx
   14003aef9:	rex.RB push r11
   14003aefb:	push   rbx
   14003aefc:	rex.WB
   14003aefd:	rex.WRXB
   14003aefe:	rex.WRX pop rdi
   14003af00:	push   rsp
   14003af01:	rex.WB
   14003af02:	rex.WRB
   14003af03:	rex.RB
   14003af04:	rex.WRXB push r13
   14003af06:	push   rsp
   14003af07:	add    BYTE PTR [rsi+0x57],al
   14003af0a:	push   rbx
   14003af0b:	pop    rdi
   14003af0c:	rex.WRX
   14003af0d:	rex.WR
   14003af0e:	rex.X add BYTE PTR [rsi+0x57],al
   14003af12:	push   rbx
   14003af13:	pop    rdi
   14003af14:	push   rax
   14003af15:	rex.RB push r10
   14003af17:	rex.WB
   14003af18:	rex.WRXB
   14003af19:	rex.R
   14003af1a:	rex.WB
   14003af1b:	rex.XB pop r15
   14003af1d:	rex.XB
   14003af1e:	rex.WR
   14003af1f:	rex.RB
   14003af20:	rex.B
   14003af21:	rex.WRX push rbp
   14003af23:	push   rax
   14003af24:	pop    rdi
   14003af25:	push   rsp
   14003af26:	rex.WB
   14003af27:	rex.WRB
   14003af28:	rex.RB
   14003af29:	rex.WRXB push r13
   14003af2b:	push   rsp
   14003af2c:	add    BYTE PTR [rax],al
   14003af2e:	add    BYTE PTR [rax],al
   14003af30:	rex.RX push rdi
   14003af32:	push   rbx
   14003af33:	pop    rdi
   14003af34:	push   rax
   14003af35:	rex.RX pop rdi
   14003af37:	rex.WR
   14003af38:	rex.WRXB
   14003af39:	rex.RXB add BYTE PTR [r8],r8b
   14003af3c:	add    BYTE PTR [rax],al
   14003af3e:	add    BYTE PTR [rax],al
   14003af40:	rex.RX push rdi
   14003af42:	push   rbx
   14003af43:	pop    rdi
   14003af44:	push   rax
   14003af45:	rex.RX pop rdi
   14003af47:	rex.WR
   14003af48:	rex.WRXB
   14003af49:	rex.RXB pop r15
   14003af4b:	rex.WRX
   14003af4c:	rex.X push rsp
   14003af4e:	pop    rdi
   14003af4f:	rex.WRX push rbx
   14003af51:	add    BYTE PTR [rax],al
   14003af53:	add    BYTE PTR [rax],al
   14003af55:	add    BYTE PTR [rax],al
   14003af57:	add    BYTE PTR [rsi+0x57],al
   14003af5a:	push   rbx
   14003af5b:	pop    rdi
   14003af5c:	push   rax
   14003af5d:	rex.WR push rbp
   14003af5f:	rex.RXB
   14003af60:	rex.WB
   14003af61:	rex.WRX add BYTE PTR [rax],r8b
   14003af64:	add    BYTE PTR [rax],al
   14003af66:	add    BYTE PTR [rax],al
   14003af68:	rex.RX push rdi
   14003af6a:	push   rbx
   14003af6b:	pop    rdi
   14003af6c:	push   rax
   14003af6d:	rex.WRX push rax
   14003af6f:	add    BYTE PTR [rsi+0x57],al
   14003af72:	push   rbx
   14003af73:	pop    rdi
   14003af74:	push   rax
   14003af75:	rex.WRX push rax
   14003af77:	pop    rdi
   14003af78:	rex.WB push r8
   14003af7a:	rex.W
   14003af7b:	rex.RB
   14003af7c:	rex.WR push rax
   14003af7e:	rex.RB push r10
   14003af80:	pop    rdi
   14003af81:	push   r11
   14003af83:	push   rbx
   14003af84:	push   rbp
   14003af85:	rex.WRB
   14003af86:	rex.RB pop r15
   14003af88:	rex.WRXB
   14003af89:	rex.WRX pop rdi
   14003af8b:	rex.WB
   14003af8c:	rex.R
   14003af8d:	rex.WR
   14003af8e:	rex.RB pop r15
   14003af90:	push   rax
   14003af91:	rex.RB push r10
   14003af93:	rex.WB
   14003af94:	rex.WRXB
   14003af95:	rex.R pop rdi
   14003af97:	push   rdx
   14003af98:	rex.RB
   14003af99:	rex.B
   14003af9a:	rex.XB
   14003af9b:	rex.W
   14003af9c:	rex.RB
   14003af9d:	add    BYTE PTR [rax],r8b
   14003afa0:	rex.RX push rdi
   14003afa2:	push   rbx
   14003afa3:	pop    rdi
   14003afa4:	push   rax
   14003afa5:	rex.WRX push rax
   14003afa7:	pop    rdi
   14003afa8:	rex.WB push r8
   14003afaa:	rex.W
   14003afab:	rex.RB
   14003afac:	rex.WR push rax
   14003afae:	rex.RB push r10
   14003afb0:	pop    rdi
   14003afb1:	rex.WB
   14003afb2:	rex.R
   14003afb3:	rex.WR
   14003afb4:	rex.RB pop r15
   14003afb6:	push   rax
   14003afb7:	rex.RB push r10
   14003afb9:	rex.WB
   14003afba:	rex.WRXB
   14003afbb:	add    BYTE PTR [rax],r8b
   14003afbe:	add    BYTE PTR [rax],al
   14003afc0:	rex.RX push rdi
   14003afc2:	push   rbx
   14003afc3:	pop    rdi
   14003afc4:	push   rax
   14003afc5:	rex.WRX push rax
   14003afc7:	pop    rdi
   14003afc8:	rex.WB push r8
   14003afca:	rex.W
   14003afcb:	rex.RB
   14003afcc:	rex.WR push rax
   14003afce:	rex.RB push r10
   14003afd0:	pop    rdi
   14003afd1:	push   rcx
   14003afd2:	push   rbp
   14003afd3:	rex.WB push r12
   14003afd5:	rex.RB pop r15
   14003afd7:	push   rax
   14003afd8:	rex.RB push r10
   14003afda:	rex.WB
   14003afdb:	rex.WRXB
   14003afdc:	add    BYTE PTR [rax],r8b
   14003afdf:	add    BYTE PTR [rsi+0x57],al
   14003afe2:	push   rbx
   14003afe3:	pop    rdi
   14003afe4:	push   rax
   14003afe5:	rex.WRX push rax
   14003afe7:	pop    rdi
   14003afe8:	rex.WRB push r12
   14003afea:	push   rbp
   14003afeb:	add    BYTE PTR [rax],al
   14003afed:	add    BYTE PTR [rax],al
   14003afef:	add    BYTE PTR [rsi+0x57],al
   14003aff2:	push   rbx
   14003aff3:	pop    rdi
   14003aff4:	push   rax
   14003aff5:	rex.WRXB
   14003aff6:	rex.WRXB
   14003aff7:	rex.WR pop rdi
   14003aff9:	push   rdx
   14003affa:	rex.RB push r13
   14003affc:	push   rbx
   14003affd:	add    BYTE PTR [r8],r8b
   14003b000:	rex.RX push rdi
   14003b002:	push   rbx
   14003b003:	pop    rdi
   14003b004:	push   rax
   14003b005:	rex.WRXB push r10
   14003b007:	push   rsp
   14003b008:	pop    rdi
   14003b009:	push   rbx
   14003b00a:	rex.XB
   14003b00b:	rex.B
   14003b00c:	rex.WRX add BYTE PTR [rax],r8b
   14003b00f:	add    BYTE PTR [rsi+0x57],al
   14003b012:	push   rbx
   14003b013:	pop    rdi
   14003b014:	push   rax
   14003b015:	push   rdx
   14003b016:	rex.WB push r14
   14003b018:	push   r12
   14003b01a:	rex.RB pop r15
   14003b01c:	push   rax
   14003b01d:	rex.RB push r10
   14003b01f:	rex.RX
   14003b020:	rex.WRXB push r10
   14003b022:	rex.WRB
   14003b023:	rex.B
   14003b024:	rex.WRX
   14003b025:	rex.XB
   14003b026:	rex.RB pop r15
   14003b028:	rex.XB
   14003b029:	rex.WRXB push r13
   14003b02b:	rex.WRX push rsp
   14003b02d:	rex.RB push r10
   14003b02f:	push   rbx
	...
   14003b038:	rex.RX push rdi
   14003b03a:	push   rbx
   14003b03b:	pop    rdi
   14003b03c:	push   rcx
   14003b03d:	push   rbp
   14003b03e:	push   r10
   14003b040:	rex.B
   14003b041:	rex.WRX push rsp
   14003b043:	rex.WB
   14003b044:	rex.WRX
   14003b045:	rex.RB pop r15
   14003b047:	rex.W
   14003b048:	push   r11
   14003b04a:	rex.W pop rdi
   14003b04c:	rex.WR
   14003b04d:	rex.RB
   14003b04e:	rex.WRX
   14003b04f:	rex.RXB push r12
   14003b051:	rex.W add BYTE PTR [rax],al
   14003b054:	add    BYTE PTR [rax],al
   14003b056:	add    BYTE PTR [rax],al
   14003b058:	rex.RX push rdi
   14003b05a:	push   rbx
   14003b05b:	pop    rdi
   14003b05c:	push   rcx
   14003b05d:	push   rbp
   14003b05e:	push   r10
   14003b060:	rex.B
   14003b061:	rex.WRX push rsp
   14003b063:	rex.WB
   14003b064:	rex.WRX
   14003b065:	rex.RB pop r15
   14003b067:	rex.W
   14003b068:	push   r11
   14003b06a:	rex.W pop rdi
   14003b06c:	rex.WR
   14003b06d:	rex.WRXB
   14003b06e:	rex.XB
   14003b06f:	rex.WXB push r11
   14003b071:	add    BYTE PTR [rax],al
   14003b073:	add    BYTE PTR [rax],al
   14003b075:	add    BYTE PTR [rax],al
   14003b077:	add    BYTE PTR [rsi+0x57],al
   14003b07a:	push   rbx
   14003b07b:	pop    rdi
   14003b07c:	push   rdx
   14003b07d:	push   r15
   14003b07f:	pop    rdi
   14003b080:	rex.WR
   14003b081:	rex.WB push r11
   14003b083:	push   rsp
   14003b084:	rex.RB
   14003b085:	rex.WRX
   14003b086:	rex.RB push r10
   14003b088:	pop    rdi
   14003b089:	rex.W
   14003b08a:	push   r11
   14003b08c:	rex.W pop rdi
   14003b08e:	rex.WR
   14003b08f:	rex.RB
   14003b090:	rex.WRX
   14003b091:	rex.RXB push r12
   14003b093:	rex.W add BYTE PTR [rax],al
   14003b096:	add    BYTE PTR [rax],al
   14003b098:	rex.RX push rdi
   14003b09a:	push   rbx
   14003b09b:	pop    rdi
   14003b09c:	push   rdx
   14003b09d:	push   r15
   14003b09f:	pop    rdi
   14003b0a0:	rex.WR
   14003b0a1:	rex.WB push r11
   14003b0a3:	push   rsp
   14003b0a4:	rex.RB
   14003b0a5:	rex.WRX
   14003b0a6:	rex.RB push r10
   14003b0a8:	pop    rdi
   14003b0a9:	push   rax
   14003b0aa:	push   rdx
   14003b0ab:	rex.RB
   14003b0ac:	rex.R
   14003b0ad:	rex.RB
   14003b0ae:	rex.RX
   14003b0af:	rex.WB
   14003b0b0:	rex.WRX
   14003b0b1:	rex.RB
   14003b0b2:	rex.R pop rdi
   14003b0b4:	push   rax
   14003b0b5:	push   rdx
   14003b0b6:	rex.WRXB push r12
   14003b0b8:	rex.WRXB
   14003b0b9:	rex.XB
   14003b0ba:	rex.WRXB
   14003b0bb:	rex.WR push rbx
   14003b0bd:	xor    DWORD PTR [rax],eax
   14003b0bf:	add    BYTE PTR [rsi+0x57],al
   14003b0c2:	push   rbx
   14003b0c3:	pop    rdi
   14003b0c4:	push   rdx
   14003b0c5:	push   r15
   14003b0c7:	pop    rdi
   14003b0c8:	rex.WR
   14003b0c9:	rex.WB push r11
   14003b0cb:	push   rsp
   14003b0cc:	rex.RB
   14003b0cd:	rex.WRX
   14003b0ce:	rex.RB push r10
   14003b0d0:	pop    rdi
   14003b0d1:	push   rax
   14003b0d2:	push   rdx
   14003b0d3:	rex.RB
   14003b0d4:	rex.R
   14003b0d5:	rex.RB
   14003b0d6:	rex.RX
   14003b0d7:	rex.WB
   14003b0d8:	rex.WRX
   14003b0d9:	rex.RB
   14003b0da:	rex.R pop rdi
   14003b0dc:	push   rax
   14003b0dd:	push   rdx
   14003b0de:	rex.WRXB push r12
   14003b0e0:	rex.WRXB
   14003b0e1:	rex.XB
   14003b0e2:	rex.WRXB
   14003b0e3:	rex.WR push rbx
   14003b0e5:	xor    al,BYTE PTR [rax]
   14003b0e7:	add    BYTE PTR [rsi+0x57],al
   14003b0ea:	push   rbx
   14003b0eb:	pop    rdi
   14003b0ec:	push   rdx
   14003b0ed:	rex.RB
   14003b0ee:	rex.RX
   14003b0ef:	rex.XB
   14003b0f0:	rex.WRXB push r13
   14003b0f2:	rex.WRX push rsp
   14003b0f4:	add    BYTE PTR [rax],al
   14003b0f6:	add    BYTE PTR [rax],al
   14003b0f8:	rex.RX push rdi
   14003b0fa:	push   rbx
   14003b0fb:	pop    rdi
   14003b0fc:	push   rdx
   14003b0fd:	rex.RB
   14003b0fe:	rex.RX pop rdi
   14003b100:	rex.XB
   14003b101:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14003b103:	outs   dx,BYTE PTR ds:[rsi]
   14003b104:	outs   dx,BYTE PTR ds:[rsi]
   14003b105:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14003b10a:	outs   dx,BYTE PTR ds:[rsi]
   14003b10b:	add    BYTE PTR [rax],al
   14003b10d:	add    BYTE PTR [rax],al
   14003b10f:	add    BYTE PTR [rsi+0x57],al
   14003b112:	push   rbx
   14003b113:	pop    rdi
   14003b114:	push   rdx
   14003b115:	rex.RB
   14003b116:	rex.RX pop rdi
   14003b118:	rex.XB push r10
   14003b11a:	gs imul esi,DWORD PTR fs:[rdx+0x65],0x6f697463
   14003b123:	outs   dx,BYTE PTR ds:[rsi]
   14003b124:	add    BYTE PTR [rax],al
   14003b126:	add    BYTE PTR [rax],al
   14003b128:	rex.RX push rdi
   14003b12a:	push   rbx
   14003b12b:	pop    rdi
   14003b12c:	push   rdx
   14003b12d:	rex.RB
   14003b12e:	rex.RX pop rdi
   14003b130:	rex.XB push r11
   14003b132:	gs jae 0x14003b1a8
   14003b135:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
   14003b13c:	add    BYTE PTR [rax],al
   14003b13e:	add    BYTE PTR [rax],al
   14003b140:	rex.RX push rdi
   14003b142:	push   rbx
   14003b143:	pop    rdi
   14003b144:	push   rdx
   14003b145:	rex.RB
   14003b146:	rex.RX pop rdi
   14003b148:	rex.XB push r11
   14003b14a:	outs   dx,DWORD PTR ds:[rsi]
   14003b14b:	movsxd ebp,DWORD PTR [rbx+0x65]
   14003b14e:	je     0x14003b1a4
   14003b150:	jb     0x14003b1b3
   14003b152:	outs   dx,BYTE PTR ds:[rsi]
   14003b153:	jae    0x14003b1c1
   14003b155:	(bad)  
   14003b156:	je     0x14003b1c7
   14003b158:	jb     0x14003b15a
   14003b15a:	add    BYTE PTR [rax],al
   14003b15c:	add    BYTE PTR [rax],al
   14003b15e:	add    BYTE PTR [rax],al
   14003b160:	rex.RX push rdi
   14003b162:	push   rbx
   14003b163:	pop    rdi
   14003b164:	push   rdx
   14003b165:	rex.RB
   14003b166:	rex.RX pop rdi
   14003b168:	rex.XB push r12
   14003b16a:	rex.XB push r8
   14003b16c:	rex.WRB jae 0x14003b1d6
   14003b16f:	add    BYTE PTR [rsi+0x57],al
   14003b172:	push   rbx
   14003b173:	pop    rdi
   14003b174:	push   rdx
   14003b175:	rex.RB
   14003b176:	rex.RX pop rdi
   14003b178:	rex.RB jbe 0x14003b1e0
   14003b17b:	outs   dx,BYTE PTR ds:[rsi]
   14003b17c:	je     0x14003b1bf
   14003b17e:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14003b182:	outs   dx,BYTE PTR ds:[rsi]
   14003b183:	add    BYTE PTR [rax],al
   14003b185:	add    BYTE PTR [rax],al
   14003b187:	add    BYTE PTR [rsi+0x57],al
   14003b18a:	push   rbx
   14003b18b:	pop    rdi
   14003b18c:	push   rdx
   14003b18d:	rex.RB
   14003b18e:	rex.RX pop rdi
   14003b190:	rex.WRB (bad) 
   14003b192:	jo     0x14003b204
   14003b194:	imul   ebp,DWORD PTR [rsi+0x67],0x53574600
   14003b19b:	pop    rdi
   14003b19c:	push   rdx
   14003b19d:	rex.RB
   14003b19e:	rex.RX pop rdi
   14003b1a0:	push   rcx
   14003b1a1:	jne    0x14003b208
   14003b1a3:	jne    0x14003b20a
   14003b1a5:	rex.WB je 0x14003b20d
   14003b1a8:	ins    DWORD PTR es:[rdi],dx
   14003b1a9:	add    BYTE PTR [rax],al
   14003b1ab:	add    BYTE PTR [rax],al
   14003b1ad:	add    BYTE PTR [rax],al
   14003b1af:	add    BYTE PTR [rsi+0x57],al
   14003b1b2:	push   rbx
   14003b1b3:	pop    rdi
   14003b1b4:	push   rdx
   14003b1b5:	rex.RB
   14003b1b6:	rex.RXB
   14003b1b7:	rex.WB push r11
   14003b1b9:	push   rsp
   14003b1ba:	push   rdx
   14003b1bb:	pop    rcx
   14003b1bc:	pop    rdi
   14003b1bd:	push   rbx
   14003b1be:	rex.RB push r12
   14003b1c0:	push   rsp
   14003b1c1:	rex.WB
   14003b1c2:	rex.WRX
   14003b1c3:	rex.RXB push r11
   14003b1c5:	add    BYTE PTR [rax],al
   14003b1c7:	add    BYTE PTR [rsi+0x57],al
   14003b1ca:	push   rbx
   14003b1cb:	pop    rdi
   14003b1cc:	push   rdx
   14003b1cd:	rex.RB push r13
   14003b1cf:	push   rbx
   14003b1d0:	rex.RB pop r15
   14003b1d2:	rex.WR
   14003b1d3:	rex.WB push r11
   14003b1d5:	push   rsp
   14003b1d6:	pop    rdi
   14003b1d7:	rex.XB
   14003b1d8:	rex.WRXB
   14003b1d9:	rex.WRX push rsp
   14003b1db:	rex.B
   14003b1dc:	rex.WB
   14003b1dd:	rex.WRX
   14003b1de:	rex.RB push r10
   14003b1e0:	pop    rdi
   14003b1e1:	rex.W
   14003b1e2:	push   r11
   14003b1e4:	rex.W pop rdi
   14003b1e6:	push   rbx
   14003b1e7:	rex.WB pop r10
   14003b1e9:	add    BYTE PTR [r8],r8b
   14003b1ec:	add    BYTE PTR [rax],al
   14003b1ee:	add    BYTE PTR [rax],al
   14003b1f0:	rex.RX push rdi
   14003b1f2:	push   rbx
   14003b1f3:	pop    rdi
   14003b1f4:	push   rdx
   14003b1f5:	rex.WRXB push r13
   14003b1f7:	push   rsp
   14003b1f8:	rex.WB
   14003b1f9:	rex.WRX
   14003b1fa:	rex.RXB add BYTE PTR [r8],r8b
   14003b1fd:	add    BYTE PTR [rax],al
   14003b1ff:	add    BYTE PTR [rsi+0x57],al
   14003b202:	push   rbx
   14003b203:	pop    rdi
   14003b204:	push   rdx
   14003b205:	push   rax
   14003b206:	rex.WRB pop r15
   14003b208:	push   rax
   14003b209:	rex.RB push r10
   14003b20b:	rex.WB
   14003b20c:	rex.WRXB
   14003b20d:	rex.R pop rdi
   14003b20f:	rex.WB
   14003b210:	rex.WRX pop rdi
   14003b212:	push   rbx
   14003b213:	rex.RB
   14003b214:	rex.XB
   14003b215:	rex.WRXB
   14003b216:	rex.WRX
   14003b217:	rex.R push rbx
   14003b219:	add    BYTE PTR [rax],al
   14003b21b:	add    BYTE PTR [rax],al
   14003b21d:	add    BYTE PTR [rax],al
   14003b21f:	add    BYTE PTR [rsi+0x57],al
   14003b222:	push   rbx
   14003b223:	pop    rdi
   14003b224:	push   rdx
   14003b225:	push   rbp
   14003b226:	rex.WR
   14003b227:	rex.RB push r11
   14003b229:	add    BYTE PTR [rax],al
   14003b22b:	add    BYTE PTR [rax],al
   14003b22d:	add    BYTE PTR [rax],al
   14003b22f:	add    BYTE PTR [rsi+0x57],al
   14003b232:	push   rbx
   14003b233:	pop    rdi
   14003b234:	push   rbx
   14003b235:	rex.XB push r11
   14003b237:	rex.WB add BYTE PTR [r8],al
   14003b23a:	add    BYTE PTR [rax],al
   14003b23c:	add    BYTE PTR [rax],al
   14003b23e:	add    BYTE PTR [rax],al
   14003b240:	rex.RX push rdi
   14003b242:	push   rbx
   14003b243:	pop    rdi
   14003b244:	push   rbx
   14003b245:	rex.RB
   14003b246:	rex.XB push r13
   14003b248:	push   rdx
   14003b249:	rex.WB push r12
   14003b24b:	pop    rcx
   14003b24c:	add    BYTE PTR [rax],al
   14003b24e:	add    BYTE PTR [rax],al
   14003b250:	rex.RX push rdi
   14003b252:	push   rbx
   14003b253:	pop    rdi
   14003b254:	push   rbx
   14003b255:	rex.RB push r10
   14003b257:	push   rsi
   14003b258:	rex.RB push r10
   14003b25a:	pop    rdi
   14003b25b:	rex.XB
   14003b25c:	rex.WRB
   14003b25d:	add    BYTE PTR [rax],r8b
   14003b260:	rex.RX push rdi
   14003b262:	push   rbx
   14003b263:	pop    rdi
   14003b264:	push   rbx
   14003b265:	rex.RB push r10
   14003b267:	push   rsi
   14003b268:	rex.RB push r10
   14003b26a:	pop    rdi
   14003b26b:	rex.WB
   14003b26c:	rex.WRXB add BYTE PTR [r8],r8b
   14003b26f:	add    BYTE PTR [rsi+0x57],al
   14003b272:	push   rbx
   14003b273:	pop    rdi
   14003b274:	push   rbx
   14003b275:	rex.RB push r10
   14003b277:	push   rsi
   14003b278:	rex.RB push r10
   14003b27a:	pop    rdi
   14003b27b:	push   rdx
   14003b27c:	push   rax
   14003b27d:	rex.XB add BYTE PTR [r8],al
   14003b280:	rex.RX push rdi
   14003b282:	push   rbx
   14003b283:	pop    rdi
   14003b284:	push   rbx
   14003b285:	rex.RB push r10
   14003b287:	push   rsi
   14003b288:	rex.RB push r10
   14003b28a:	pop    rdi
   14003b28b:	push   rbx
   14003b28c:	rex.WRXB
   14003b28d:	rex.XB add BYTE PTR [r8],al
   14003b290:	rex.RX push rdi
   14003b292:	push   rbx
   14003b293:	pop    rdi
   14003b294:	push   rbx
   14003b295:	push   rsp
   14003b296:	push   r10
   14003b298:	push   rsp
   14003b299:	push   rbp
   14003b29a:	push   rax
   14003b29b:	pop    rdi
   14003b29c:	rex.X push rdx
   14003b29e:	rex.RB
   14003b29f:	rex.B
   14003b2a0:	rex.WXB push r8
   14003b2a2:	rex.WRXB
   14003b2a3:	rex.WB
   14003b2a4:	rex.WRX push rsp
   14003b2a6:	add    BYTE PTR [rax],al
   14003b2a8:	rex.RX push rdi
   14003b2aa:	push   rbx
   14003b2ab:	pop    rdi
   14003b2ac:	push   rbx
   14003b2ad:	push   rsp
   14003b2ae:	push   r10
   14003b2b0:	push   rsp
   14003b2b1:	push   rbp
   14003b2b2:	push   rax
   14003b2b3:	pop    rdi
   14003b2b4:	rex.W
   14003b2b5:	rex.WB
   14003b2b6:	rex.WRX push rsp
	...
   14003b2c0:	rex.RX push rdi
   14003b2c2:	push   rbx
   14003b2c3:	pop    rdi
   14003b2c4:	push   rbx
   14003b2c5:	push   rsp
   14003b2c6:	push   r10
   14003b2c8:	push   rsp
   14003b2c9:	push   rbp
   14003b2ca:	push   rax
   14003b2cb:	pop    rdi
   14003b2cc:	push   rcx
   14003b2cd:	push   rbp
   14003b2ce:	rex.WB push r12
   14003b2d0:	pop    rdi
   14003b2d1:	rex.WB
   14003b2d2:	rex.WRB
   14003b2d3:	rex.WRB
   14003b2d4:	rex.RB
   14003b2d5:	rex.R
   14003b2d6:	rex.WB
   14003b2d7:	push   r12
   14003b2d9:	rex.RB
   14003b2da:	rex.WR pop rcx
   14003b2dc:	add    BYTE PTR [rax],al
   14003b2de:	add    BYTE PTR [rax],al
   14003b2e0:	rex.RX push rdi
   14003b2e2:	push   rbx
   14003b2e3:	pop    rdi
   14003b2e4:	push   rbx
   14003b2e5:	push   rsp
   14003b2e6:	rex.RB
   14003b2e7:	rex.B
   14003b2e8:	rex.WR
   14003b2e9:	rex.WB
   14003b2ea:	rex.WRX
   14003b2eb:	rex.RXB add BYTE PTR [r8],r8b
   14003b2ee:	add    BYTE PTR [rax],al
   14003b2f0:	rex.RX push rdi
   14003b2f2:	push   rbx
   14003b2f3:	pop    rdi
   14003b2f4:	push   rbx
   14003b2f5:	push   rsp
   14003b2f6:	rex.WRXB push r8
   14003b2f8:	pop    rdi
   14003b2f9:	rex.W
   14003b2fa:	rex.WB
   14003b2fb:	rex.WRX push rsp
   14003b2fd:	add    BYTE PTR [rax],al
   14003b2ff:	add    BYTE PTR [rsi+0x57],al
   14003b302:	push   rbx
   14003b303:	pop    rdi
   14003b304:	push   rsp
   14003b305:	rex.XB push r8
   14003b307:	pop    rdi
   14003b308:	rex.XB
   14003b309:	rex.WRXB
   14003b30a:	rex.WRX push rsp
   14003b30c:	push   rdx
   14003b30d:	rex.WRXB
   14003b30e:	rex.WR pop rdi
   14003b310:	rex.XB
   14003b311:	rex.W
   14003b312:	rex.B
   14003b313:	rex.WRX
   14003b314:	rex.WRX
   14003b315:	rex.RB
   14003b316:	rex.WR pop rdi
   14003b318:	rex.WB
   14003b319:	rex.WRX push rsp
   14003b31b:	rex.RB push r10
   14003b31d:	push   rsi
   14003b31e:	rex.B
   14003b31f:	rex.WR pop rdi
   14003b321:	rex.WRB
   14003b322:	rex.WB
   14003b323:	rex.WR
   14003b324:	rex.WR
   14003b325:	rex.WB push r11
   14003b327:	rex.RB
   14003b328:	rex.XB
   14003b329:	rex.WRXB
   14003b32a:	rex.WRX
   14003b32b:	add    BYTE PTR [rax],r8b
   14003b32e:	add    BYTE PTR [rax],al
   14003b330:	rex.RX push rdi
   14003b332:	push   rbx
   14003b333:	pop    rdi
   14003b334:	push   rsp
   14003b335:	rex.XB push r8
   14003b337:	pop    rdi
   14003b338:	rex.XB
   14003b339:	rex.WRXB
   14003b33a:	rex.WRX push rsp
   14003b33c:	push   rdx
   14003b33d:	rex.WRXB
   14003b33e:	rex.WR pop rdi
   14003b340:	rex.XB
   14003b341:	rex.W
   14003b342:	rex.B
   14003b343:	rex.WRX
   14003b344:	rex.WRX
   14003b345:	rex.RB
   14003b346:	rex.WR pop rdi
   14003b348:	push   rsp
   14003b349:	rex.WB
   14003b34a:	rex.WRB
   14003b34b:	rex.RB
   14003b34c:	rex.WRXB push r13
   14003b34e:	push   rsp
   14003b34f:	pop    rdi
   14003b350:	rex.WRB
   14003b351:	rex.WB
   14003b352:	rex.WR
   14003b353:	rex.WR
   14003b354:	rex.WB push r11
   14003b356:	rex.RB
   14003b357:	rex.XB
   14003b358:	rex.WRXB
   14003b359:	rex.WRX
   14003b35a:	add    BYTE PTR [rax],r8b
   14003b35d:	add    BYTE PTR [rax],al
   14003b35f:	add    BYTE PTR [rsi+0x57],al
   14003b362:	push   rbx
   14003b363:	pop    rdi
   14003b364:	push   rsp
   14003b365:	rex.RB push r10
   14003b367:	rex.WRB
   14003b368:	rex.WB
   14003b369:	rex.WRX
   14003b36a:	push   r12
   14003b36c:	rex.WB
   14003b36d:	rex.WRXB
   14003b36e:	rex.WRX pop rdi
   14003b370:	push   rdx
   14003b371:	rex.RB
   14003b372:	push   r11
   14003b374:	rex.WRXB
   14003b375:	rex.WRX add BYTE PTR [rax],r8b
   14003b378:	rex.RX push rdi
   14003b37a:	push   rbx
   14003b37b:	pop    rdi
   14003b37c:	push   rsp
   14003b37d:	rex.W push rdx
   14003b37f:	rex.RB
   14003b380:	rex.B
   14003b381:	rex.R pop rdi
   14003b383:	rex.X
   14003b384:	rex.WR
   14003b385:	rex.WRXB
   14003b386:	rex.XB
   14003b387:	rex.WXB pop r15
   14003b389:	rex.XB
   14003b38a:	rex.W
   14003b38b:	rex.RB
   14003b38c:	rex.XB
   14003b38d:	rex.WXB add BYTE PTR [r8],al
   14003b390:	rex.RX push rdi
   14003b392:	push   rbx
   14003b393:	pop    rdi
   14003b394:	push   rsp
   14003b395:	rex.W push rdx
   14003b397:	rex.RB
   14003b398:	rex.B
   14003b399:	rex.R pop rdi
   14003b39b:	rex.X
   14003b39c:	rex.WR
   14003b39d:	rex.WRXB
   14003b39e:	rex.XB
   14003b39f:	rex.WXB pop r15
   14003b3a1:	rex.XB
   14003b3a2:	rex.W
   14003b3a3:	rex.RB
   14003b3a4:	rex.XB
   14003b3a5:	rex.WXB pop r15
   14003b3a7:	rex.RXB push r10
   14003b3a9:	rex.B
   14003b3aa:	rex.WRX push rbp
   14003b3ac:	rex.WR
   14003b3ad:	push   r10
   14003b3af:	rex.WB push r12
   14003b3b1:	pop    rcx
   14003b3b2:	add    BYTE PTR [rax],al
   14003b3b4:	add    BYTE PTR [rax],al
   14003b3b6:	add    BYTE PTR [rax],al
   14003b3b8:	rex.RX push rdi
   14003b3ba:	push   rbx
   14003b3bb:	pop    rdi
   14003b3bc:	push   rsp
   14003b3bd:	rex.W push rdx
   14003b3bf:	rex.RB
   14003b3c0:	rex.B
   14003b3c1:	rex.R pop rdi
   14003b3c3:	rex.X
   14003b3c4:	rex.WR
   14003b3c5:	rex.WRXB
   14003b3c6:	rex.XB
   14003b3c7:	rex.WXB pop r15
   14003b3c9:	rex.XB
   14003b3ca:	rex.W
   14003b3cb:	rex.RB
   14003b3cc:	rex.XB
   14003b3cd:	rex.WXB pop r15
   14003b3cf:	push   rsp
   14003b3d0:	rex.WB
   14003b3d1:	rex.WRB
   14003b3d2:	rex.RB
   14003b3d3:	rex.WRXB push r13
   14003b3d5:	push   rsp
   14003b3d6:	add    BYTE PTR [rax],al
   14003b3d8:	rex.RX push rdi
   14003b3da:	push   rbx
   14003b3db:	pop    rdi
   14003b3dc:	push   rsp
   14003b3dd:	rex.WB
   14003b3de:	rex.WRB
   14003b3df:	rex.RB
   14003b3e0:	rex.WRXB push r13
   14003b3e2:	push   rsp
   14003b3e3:	add    BYTE PTR [rax],al
   14003b3e5:	add    BYTE PTR [rax],al
   14003b3e7:	add    BYTE PTR [rsi+0x57],al
   14003b3ea:	push   rbx
   14003b3eb:	pop    rdi
   14003b3ec:	push   rsp
   14003b3ed:	rex.WB
   14003b3ee:	rex.WRB
   14003b3ef:	rex.RB push r10
   14003b3f1:	add    BYTE PTR [rax],al
   14003b3f3:	add    BYTE PTR [rax],al
   14003b3f5:	add    BYTE PTR [rax],al
   14003b3f7:	add    BYTE PTR [rsi+0x57],al
   14003b3fa:	push   rbx
   14003b3fb:	pop    rdi
   14003b3fc:	push   rbp
   14003b3fd:	rex.R push rax
   14003b3ff:	pop    rdi
   14003b400:	rex.WRB
   14003b401:	rex.WB
   14003b402:	rex.WR
   14003b403:	rex.WR
   14003b404:	rex.WB push r11
   14003b406:	rex.RB
   14003b407:	rex.XB
   14003b408:	rex.WRXB
   14003b409:	rex.WRX
   14003b40a:	rex.R pop rdi
   14003b40c:	push   rsp
   14003b40d:	rex.WB
   14003b40e:	rex.WRB
   14003b40f:	rex.RB
   14003b410:	rex.WRXB push r13
   14003b412:	push   rsp
   14003b413:	add    BYTE PTR [rax],al
   14003b415:	add    BYTE PTR [rax],al
   14003b417:	add    BYTE PTR [rsi+0x57],al
   14003b41a:	push   rbx
   14003b41b:	pop    rdi
   14003b41c:	push   rsi
   14003b41d:	push   rax
   14003b41e:	rex.WRX add BYTE PTR [rsi+0x57],r8b
   14003b422:	push   rbx
   14003b423:	pop    rdi
   14003b424:	push   rsi
   14003b425:	push   rax
   14003b426:	rex.WRX pop rdi
   14003b428:	push   r10
   14003b42a:	push   rdx
   14003b42b:	pop    r9
   14003b42d:	pop    rdi
   14003b42e:	push   rdx
   14003b42f:	push   rax
   14003b430:	rex.XB pop r15
   14003b432:	rex.R
   14003b433:	rex.RB
   14003b434:	rex.B
   14003b435:	rex.R
   14003b436:	rex.WR
   14003b437:	rex.WRXB
   14003b438:	rex.XB
   14003b439:	rex.WXB pop r15
   14003b43b:	rex.R
   14003b43c:	rex.RB push r12
   14003b43e:	rex.RB
   14003b43f:	rex.XB push r12
   14003b441:	rex.WB
   14003b442:	rex.WRXB
   14003b443:	rex.WRX pop rdi
   14003b445:	push   rsp
   14003b446:	rex.WB
   14003b447:	rex.WRB
   14003b448:	rex.RB
   14003b449:	rex.WRXB push r13
   14003b44b:	push   rsp
   14003b44c:	pop    rdi
   14003b44d:	rex.WRB
   14003b44e:	rex.WB
   14003b44f:	rex.WR
   14003b450:	rex.WR
   14003b451:	rex.WB push r11
   14003b453:	rex.RB
   14003b454:	rex.XB
   14003b455:	rex.WRXB
   14003b456:	rex.WRX
   14003b457:	add    BYTE PTR [rax],r8b
   14003b45a:	add    BYTE PTR [rax],al
   14003b45c:	add    BYTE PTR [rax],al
   14003b45e:	add    BYTE PTR [rax],al
   14003b460:	rex.RX push rdi
   14003b462:	push   rbx
   14003b463:	pop    rdi
   14003b464:	push   rsi
   14003b465:	push   rax
   14003b466:	rex.WRX pop rdi
   14003b468:	push   r10
   14003b46a:	push   rdx
   14003b46b:	pop    r9
   14003b46d:	pop    rdi
   14003b46e:	push   rbx
   14003b46f:	pop    rcx
   14003b470:	rex.WRX
   14003b471:	rex.XB
   14003b472:	rex.W push rdx
   14003b474:	rex.WRXB
   14003b475:	rex.WRX
   14003b476:	rex.WB pop r10
   14003b478:	rex.RB pop r15
   14003b47a:	push   rbx
   14003b47b:	push   rsp
   14003b47c:	push   r12
   14003b47e:	rex.RB pop r15
   14003b480:	rex.WRXB
   14003b481:	rex.WRX pop rdi
   14003b483:	rex.RB push r14
   14003b485:	rex.RB push r10
   14003b487:	pop    rcx
   14003b488:	pop    rdi
   14003b489:	rex.XB
   14003b48a:	rex.WRXB
   14003b48b:	rex.WRX push rsi
   14003b48d:	rex.RB push r10
   14003b48f:	rex.RXB
   14003b490:	rex.RB
   14003b491:	rex.WRX
   14003b492:	rex.XB
   14003b493:	add    BYTE PTR [r8],r8b
   14003b496:	add    BYTE PTR [rax],al
   14003b498:	rex.RX push rdi
   14003b49a:	push   rbx
   14003b49b:	pop    rdi
   14003b49c:	push   rdi
   14003b49d:	push   r12
   14003b49f:	rex.XB
   14003b4a0:	rex.W
   14003b4a1:	rex.R
   14003b4a2:	rex.WRXB
   14003b4a3:	rex.RXB add BYTE PTR [r8],r8b
   14003b4a6:	add    BYTE PTR [rax],al
   14003b4a8:	rex.RX push rdi
   14003b4aa:	push   rbx
   14003b4ab:	pop    rdi
   14003b4ac:	push   rdi
   14003b4ad:	rex.WB
   14003b4ae:	rex.WRX push rbx
   14003b4b0:	rex.WRXB
   14003b4b1:	rex.XB
   14003b4b2:	rex.WXB pop r15
   14003b4b4:	rex.WR
   14003b4b5:	rex.WRXB
   14003b4b6:	rex.RXB add BYTE PTR [r14+0x57],r8b
   14003b4ba:	push   rbx
   14003b4bb:	pop    rdi
   14003b4bc:	push   rdi
   14003b4bd:	push   rbx
   14003b4be:	push   rax
   14003b4bf:	rex.WB
   14003b4c0:	rex.WRX
   14003b4c1:	rex.WB push r12
   14003b4c3:	add    BYTE PTR [rax],al
   14003b4c5:	add    BYTE PTR [rax],al
   14003b4c7:	add    BYTE PTR [rdi+0x53],al
   14003b4ca:	push   rdi
   14003b4cb:	pop    rdi
   14003b4cc:	rex.RB
   14003b4cd:	rex.WRX
   14003b4ce:	rex.B
   14003b4cf:	rex.X
   14003b4d0:	rex.WR
   14003b4d1:	rex.RB pop r15
   14003b4d3:	push   r13
   14003b4d5:	push   rsp
   14003b4d6:	rex.WRXB pop r15
   14003b4d8:	rex.RB pop r8
   14003b4da:	rex.RB
   14003b4db:	rex.XB push r13
   14003b4dd:	push   rsp
   14003b4de:	rex.WB
   14003b4df:	rex.WRXB
   14003b4e0:	rex.WRX add BYTE PTR [rax],r8b
   14003b4e3:	add    BYTE PTR [rax],al
   14003b4e5:	add    BYTE PTR [rax],al
   14003b4e7:	add    BYTE PTR [rax+0x33],cl
   14003b4ea:	xor    dh,BYTE PTR [rbx]
   14003b4ec:	pop    rdi
   14003b4ed:	rex.R
   14003b4ee:	rex.RB
   14003b4ef:	rex.X push rbp
   14003b4f1:	rex.RXB pop r15
   14003b4f3:	rex.WR
   14003b4f4:	rex.RB push r14
   14003b4f6:	rex.RB
   14003b4f7:	rex.WR add BYTE PTR [rax],r8b
   14003b4fa:	add    BYTE PTR [rax],al
   14003b4fc:	add    BYTE PTR [rax],al
   14003b4fe:	add    BYTE PTR [rax],al
   14003b500:	xor    rsi,QWORD PTR [rdx]
   14003b503:	xor    ebx,DWORD PTR [rdi+0x54]
   14003b506:	push   rdx
   14003b507:	rex.B
   14003b508:	rex.XB
   14003b509:	add    BYTE PTR [r8],r8b
   14003b50c:	add    BYTE PTR [rax],al
   14003b50e:	add    BYTE PTR [rax],al
   14003b510:	rex.W push rsp
   14003b512:	push   rsp
   14003b513:	push   rax
   14003b514:	pop    rdi
   14003b515:	rex.RX
   14003b516:	rex.WB
   14003b517:	rex.WR push rsp
   14003b519:	rex.RB push r10
   14003b51b:	pop    rdi
   14003b51c:	rex.WB
   14003b51d:	rex.WRX
   14003b51e:	rex.RX
   14003b51f:	rex.WRXB add BYTE PTR [r8],r8b
   14003b522:	add    BYTE PTR [rax],al
   14003b524:	add    BYTE PTR [rax],al
   14003b526:	add    BYTE PTR [rax],al
   14003b528:	rex.WB
   14003b529:	rex.RXB
   14003b52a:	rex.WRX
   14003b52b:	rex.WRXB push r10
   14003b52d:	rex.RB pop r15
   14003b52f:	rex.RB
   14003b530:	rex.WRB push r8
   14003b532:	push   rsp
   14003b533:	pop    rcx
   14003b534:	pop    rdi
   14003b535:	rex.WRX
   14003b536:	rex.WRXB
   14003b537:	rex.R
   14003b538:	rex.RB push r11
   14003b53a:	add    BYTE PTR [rax],al
   14003b53c:	add    BYTE PTR [rax],al
   14003b53e:	add    BYTE PTR [rax],al
   14003b540:	rex.WB
   14003b541:	rex.RXB
   14003b542:	rex.WRX
   14003b543:	rex.WRXB push r10
   14003b545:	rex.RB pop r15
   14003b547:	push   rbx
   14003b548:	push   rsp
   14003b549:	rex.B
   14003b54a:	rex.WRX
   14003b54b:	rex.R
   14003b54c:	rex.B
   14003b54d:	rex.WR
   14003b54e:	rex.WRXB
   14003b54f:	rex.WRX
   14003b550:	rex.RB pop r15
   14003b552:	rex.WR
   14003b553:	rex.WB
   14003b554:	rex.WRB
   14003b555:	rex.WB push r12
   14003b557:	push   r12
   14003b559:	rex.WB
   14003b55a:	rex.WRXB
   14003b55b:	rex.WRX push rbx
   14003b55d:	add    BYTE PTR [rax],al
   14003b55f:	add    BYTE PTR [rcx+0x47],cl
   14003b562:	rex.WRX
   14003b563:	rex.WRXB push r10
   14003b565:	rex.RB pop r15
   14003b567:	push   rdi
   14003b568:	rex.WB
   14003b569:	rex.WRX
   14003b56a:	rex.R
   14003b56b:	rex.WRXB push r15
   14003b56d:	push   rbx
   14003b56e:	pop    rdi
   14003b56f:	rex.RX
   14003b570:	rex.WB push r10
   14003b572:	rex.RB push r15
   14003b574:	rex.B
   14003b575:	rex.WR
   14003b576:	rex.WR pop rdi
   14003b578:	rex.RXB push r8
   14003b57a:	rex.WRXB pop r15
   14003b57c:	rex.RB
   14003b57d:	rex.WRX
   14003b57e:	rex.RX
   14003b57f:	rex.WRXB push r10
   14003b581:	rex.XB
   14003b582:	rex.RB
   14003b583:	rex.WRB
   14003b584:	rex.RB
   14003b585:	rex.WRX push rsp
   14003b587:	add    BYTE PTR [rcx+0x4d],cl
   14003b58a:	rex.B
   14003b58b:	rex.WR
   14003b58c:	rex.WR
   14003b58d:	rex.WRXB
   14003b58e:	rex.XB pop r15
   14003b590:	push   rbx
   14003b591:	push   rax
   14003b592:	pop    rcx
   14003b593:	add    BYTE PTR [rax],al
   14003b595:	add    BYTE PTR [rax],al
   14003b597:	add    BYTE PTR [rcx+0x4e],cl
   14003b59a:	push   rsp
   14003b59b:	rex.RB push r10
   14003b59d:	rex.WR
   14003b59e:	rex.WRXB
   14003b59f:	rex.XB
   14003b5a0:	rex.WXB pop r15
   14003b5a2:	rex.WRB
   14003b5a3:	pop    r8
   14003b5a5:	pop    rdi
   14003b5a6:	push   rdx
   14003b5a7:	rex.B
   14003b5a8:	rex.XB
   14003b5a9:	rex.WB
   14003b5aa:	rex.WRX
   14003b5ab:	rex.RXB pop r15
   14003b5ad:	push   rbp
   14003b5ae:	push   rbx
   14003b5af:	rex.RB push r10
   14003b5b1:	push   rbx
   14003b5b2:	add    BYTE PTR [rax],al
   14003b5b4:	add    BYTE PTR [rax],al
   14003b5b6:	add    BYTE PTR [rax],al
   14003b5b8:	rex.WB
   14003b5b9:	rex.WRX push rsp
   14003b5bb:	rex.RB push r10
   14003b5bd:	rex.WR
   14003b5be:	rex.WRXB
   14003b5bf:	rex.XB
   14003b5c0:	rex.WXB pop r15
   14003b5c2:	rex.WRB
   14003b5c3:	pop    r8
   14003b5c5:	pop    rdi
   14003b5c6:	push   rbx
   14003b5c7:	rex.W
   14003b5c8:	push   r10
   14003b5ca:	rex.WB
   14003b5cb:	rex.WRX
   14003b5cc:	rex.RXB pop r15
   14003b5ce:	push   rbp
   14003b5cf:	push   rbx
   14003b5d0:	rex.RB push r10
   14003b5d2:	push   rbx
   14003b5d3:	add    BYTE PTR [rax],al
   14003b5d5:	add    BYTE PTR [rax],al
   14003b5d7:	add    BYTE PTR [rcx+0x50],cl
   14003b5da:	push   rsi
   14003b5db:	ss pop rdi
   14003b5dd:	rex.RB
   14003b5de:	rex.WRX
   14003b5df:	rex.B
   14003b5e0:	rex.X
   14003b5e1:	rex.WR
   14003b5e2:	add    BYTE PTR [r8],r8b
   14003b5e5:	add    BYTE PTR [rax],al
   14003b5e7:	add    BYTE PTR [rcx+0x50],cl
   14003b5ea:	push   rsi
   14003b5eb:	ss pop rdi
   14003b5ed:	rex.W
   14003b5ee:	push   r11
   14003b5f0:	pop    rdi
   14003b5f1:	push   rax
   14003b5f2:	push   rdx
   14003b5f3:	rex.RB
   14003b5f4:	rex.XB
   14003b5f5:	rex.RB
   14003b5f6:	rex.R
   14003b5f7:	rex.RB
   14003b5f8:	rex.WRX
   14003b5f9:	rex.XB
   14003b5fa:	add    BYTE PTR [r8],r8b
   14003b5fd:	add    BYTE PTR [rax],al
   14003b5ff:	add    BYTE PTR [rcx+0x53],cl
   14003b602:	push   rbx
   14003b603:	pop    rdi
   14003b604:	rex.B
   14003b605:	rex.WR
   14003b606:	rex.RB push r10
   14003b608:	push   rsp
   14003b609:	add    BYTE PTR [rax],al
   14003b60b:	add    BYTE PTR [rax],al
   14003b60d:	add    BYTE PTR [rax],al
   14003b60f:	add    BYTE PTR [rcx+0x53],cl
   14003b612:	push   rbx
   14003b613:	pop    rdi
   14003b614:	rex.RB push r10
   14003b616:	push   rdx
   14003b617:	rex.WRXB push r10
   14003b619:	add    BYTE PTR [rax],al
   14003b61b:	add    BYTE PTR [rax],al
   14003b61d:	add    BYTE PTR [rax],al
   14003b61f:	add    BYTE PTR [rcx+0x53],cl
   14003b622:	push   rbx
   14003b623:	pop    rdi
   14003b624:	push   rsp
   14003b625:	push   rdx
   14003b626:	rex.B
   14003b627:	rex.XB
   14003b628:	add    BYTE PTR [r8],r8b
   14003b62b:	add    BYTE PTR [rax],al
   14003b62d:	add    BYTE PTR [rax],al
   14003b62f:	add    BYTE PTR [rsp+rax*2+0x41],cl
   14003b633:	push   rax
   14003b634:	pop    rdi
   14003b635:	push   r13
   14003b637:	push   rsp
   14003b638:	rex.W pop rdi
   14003b63a:	rex.RX
   14003b63b:	rex.WB
   14003b63c:	rex.WR push rsp
   14003b63e:	rex.RB push r10
   14003b640:	pop    rdi
   14003b641:	push   rsp
   14003b642:	push   rdx
   14003b643:	rex.B
   14003b644:	rex.XB
   14003b645:	add    BYTE PTR [r8],r8b
   14003b648:	rex.WR
   14003b649:	rex.R
   14003b64a:	push   r8
   14003b64c:	pop    rdi
   14003b64d:	rex.RB push r10
   14003b64f:	push   rdx
   14003b650:	rex.WRXB push r10
   14003b652:	add    BYTE PTR [rax],al
   14003b654:	add    BYTE PTR [rax],al
   14003b656:	add    BYTE PTR [rax],al
   14003b658:	rex.WR
   14003b659:	rex.R
   14003b65a:	push   r8
   14003b65c:	pop    rdi
   14003b65d:	rex.WB
   14003b65e:	rex.WRX
   14003b65f:	rex.WB push r12
   14003b661:	add    BYTE PTR [rax],al
   14003b663:	add    BYTE PTR [rax],al
   14003b665:	add    BYTE PTR [rax],al
   14003b667:	add    BYTE PTR [rsp+rax*2+0x41],cl
   14003b66b:	push   rax
   14003b66c:	pop    rdi
   14003b66d:	rex.WRB
   14003b66e:	rex.RB
   14003b66f:	rex.WRB pop r15
   14003b671:	rex.R push rbp
   14003b673:	rex.WRB push r8
   14003b675:	add    BYTE PTR [rax],al
   14003b677:	add    BYTE PTR [rsp+rax*2+0x41],cl
   14003b67b:	push   rax
   14003b67c:	pop    rdi
   14003b67d:	push   rax
   14003b67e:	push   r10
   14003b680:	push   rbx
   14003b681:	rex.RB push r10
   14003b683:	add    BYTE PTR [rax],al
   14003b685:	add    BYTE PTR [rax],al
   14003b687:	add    BYTE PTR [rsp+rax*2+0x41],cl
   14003b68b:	push   rax
   14003b68c:	pop    rdi
   14003b68d:	push   rax
   14003b68e:	rex.WRXB
   14003b68f:	rex.WR
   14003b690:	rex.WB
   14003b691:	rex.XB pop r9
   14003b693:	add    BYTE PTR [rax],al
   14003b695:	add    BYTE PTR [rax],al
   14003b697:	add    BYTE PTR [rsp+rax*2+0x41],cl
   14003b69b:	push   rax
   14003b69c:	pop    rdi
   14003b69d:	push   rbx
   14003b69e:	rex.W push rbp
   14003b6a0:	push   rsp
   14003b6a1:	rex.R
   14003b6a2:	rex.WRXB push r15
   14003b6a4:	rex.WRX add BYTE PTR [rax],r8b
   14003b6a7:	add    BYTE PTR [rsp+rax*2+0x41],cl
   14003b6ab:	push   rax
   14003b6ac:	pop    rdi
   14003b6ad:	push   rbx
   14003b6ae:	push   rsp
   14003b6af:	push   r12
   14003b6b1:	rex.RB
   14003b6b2:	rex.WRB add BYTE PTR [r8],r8b
   14003b6b5:	add    BYTE PTR [rax],al
   14003b6b7:	add    BYTE PTR [rdi+rcx*2+0x47],cl
   14003b6bb:	pop    rdi
   14003b6bc:	pop    rax
   14003b6bd:	push   rax
   14003b6be:	push   r12
   14003b6c0:	rex.W pop rdi
   14003b6c2:	push   rcx
   14003b6c3:	push   rbp
   14003b6c4:	rex.RB push r10
   14003b6c6:	pop    rcx
   14003b6c7:	add    BYTE PTR [rbp+0x41],cl
   14003b6ca:	pop    rax
   14003b6cb:	pop    rdi
   14003b6cc:	rex.X
   14003b6cd:	rex.WR
   14003b6ce:	rex.WRXB
   14003b6cf:	rex.XB
   14003b6d0:	rex.WXB
   14003b6d1:	rex.WB
   14003b6d2:	rex.WRX
   14003b6d3:	rex.RXB pop r15
   14003b6d5:	push   rdi
   14003b6d6:	push   rdx
   14003b6d7:	rex.WB push r12
   14003b6d9:	rex.RB push r11
   14003b6db:	pop    rdi
   14003b6dc:	push   rax
   14003b6dd:	rex.RB push r10
   14003b6df:	rex.XB
   14003b6e0:	rex.RB
   14003b6e1:	rex.WRX push rsp
   14003b6e3:	add    BYTE PTR [rax],al
   14003b6e5:	add    BYTE PTR [rax],al
   14003b6e7:	add    BYTE PTR [rbp+0x41],cl
   14003b6ea:	pop    rax
   14003b6eb:	pop    rdi
   14003b6ec:	push   rdx
   14003b6ed:	rex.RB
   14003b6ee:	rex.RX pop rdi
   14003b6f0:	rex.XB
   14003b6f1:	rex.WRXB push r13
   14003b6f3:	rex.WRX push rsp
   14003b6f5:	add    BYTE PTR [rax],al
   14003b6f7:	add    BYTE PTR [rbp+0x41],cl
   14003b6fa:	pop    rax
   14003b6fb:	pop    rdi
   14003b6fc:	push   rbx
   14003b6fd:	rex.WB push r8
   14003b6ff:	pop    rdi
   14003b700:	rex.WRB
   14003b701:	rex.RB
   14003b702:	rex.R
   14003b703:	rex.WB
   14003b704:	pop    r15
   14003b706:	push   rax
   14003b707:	rex.WRXB push r10
   14003b709:	push   rsp
   14003b70a:	add    BYTE PTR [rax],al
   14003b70c:	add    BYTE PTR [rax],al
   14003b70e:	add    BYTE PTR [rax],al
   14003b710:	rex.WRB
   14003b711:	pop    r8
   14003b713:	pop    rdi
   14003b714:	push   rbx
   14003b715:	rex.WB push r8
   14003b717:	pop    rdi
   14003b718:	push   rdx
   14003b719:	rex.RB
   14003b71a:	rex.RXB
   14003b71b:	rex.WB push r11
   14003b71d:	push   rsp
   14003b71e:	push   rdx
   14003b71f:	push   r12
   14003b721:	rex.WB
   14003b722:	rex.WRXB
   14003b723:	rex.WRX pop rdi
   14003b725:	push   rax
   14003b726:	rex.WRXB push r10
   14003b728:	push   rsp
   14003b729:	add    BYTE PTR [rax],al
   14003b72b:	add    BYTE PTR [rax],al
   14003b72d:	add    BYTE PTR [rax],al
   14003b72f:	add    BYTE PTR [rbp+0x41],cl
   14003b732:	pop    rax
   14003b733:	pop    rdi
   14003b734:	push   rbx
   14003b735:	push   rsp
   14003b736:	push   r12
   14003b738:	rex.RB pop r15
   14003b73a:	rex.WRB
   14003b73b:	rex.B
   14003b73c:	rex.XB
   14003b73d:	rex.W
   14003b73e:	rex.WB
   14003b73f:	rex.WRX
   14003b740:	rex.RB pop r15
   14003b742:	push   rdx
   14003b743:	rex.RB
   14003b744:	rex.XB push r13
   14003b746:	push   rdx
   14003b747:	push   rbx
   14003b748:	rex.WB
   14003b749:	rex.WRXB
   14003b74a:	rex.WRX add BYTE PTR [rax],r8b
   14003b74d:	add    BYTE PTR [rax],al
   14003b74f:	add    BYTE PTR [rbp+0x45],cl
   14003b752:	rex.WRB
   14003b753:	rex.WRXB push r10
   14003b755:	pop    rcx
   14003b756:	pop    rdi
   14003b757:	rex.B
   14003b758:	rex.WR
   14003b759:	rex.WR
   14003b75a:	rex.WRXB
   14003b75b:	rex.XB pop r15
   14003b75d:	rex.RX
   14003b75e:	rex.B
   14003b75f:	rex.WB
   14003b760:	rex.WR push rbp
   14003b762:	push   rdx
   14003b763:	rex.RB pop r15
   14003b765:	push   rdx
   14003b766:	push   r12
   14003b768:	add    BYTE PTR [r8],r8b
   14003b76b:	add    BYTE PTR [rax],al
   14003b76d:	add    BYTE PTR [rax],al
   14003b76f:	add    BYTE PTR [rbp+0x45],cl
   14003b772:	rex.WRB
   14003b773:	rex.WRXB push r10
   14003b775:	pop    rcx
   14003b776:	pop    rdi
   14003b777:	rex.B
   14003b778:	rex.WR
   14003b779:	rex.WR
   14003b77a:	rex.WRXB
   14003b77b:	rex.XB pop r15
   14003b77d:	rex.WRB
   14003b77e:	pop    r8
   14003b780:	pop    rdi
   14003b781:	push   rbx
   14003b782:	rex.WB pop r10
   14003b784:	add    BYTE PTR [r8],r8b
   14003b787:	add    BYTE PTR [rbp+0x49],cl
   14003b78a:	rex.WRX pop rdi
   14003b78c:	push   rbx
   14003b78d:	rex.WB push r8
   14003b78f:	pop    rdi
   14003b790:	rex.WRB
   14003b791:	rex.RB
   14003b792:	rex.R
   14003b793:	rex.WB
   14003b794:	pop    r15
   14003b796:	push   rax
   14003b797:	rex.WRXB push r10
   14003b799:	push   rsp
   14003b79a:	add    BYTE PTR [rax],al
   14003b79c:	add    BYTE PTR [rax],al
   14003b79e:	add    BYTE PTR [rax],al
   14003b7a0:	rex.WRB
   14003b7a1:	rex.WB
   14003b7a2:	rex.WRX pop rdi
   14003b7a4:	push   rbx
   14003b7a5:	rex.WB push r8
   14003b7a7:	pop    rdi
   14003b7a8:	push   rdx
   14003b7a9:	rex.RB
   14003b7aa:	rex.RXB
   14003b7ab:	rex.WB push r11
   14003b7ad:	push   rsp
   14003b7ae:	push   rdx
   14003b7af:	push   r12
   14003b7b1:	rex.WB
   14003b7b2:	rex.WRXB
   14003b7b3:	rex.WRX pop rdi
   14003b7b5:	push   rax
   14003b7b6:	rex.WRXB push r10
   14003b7b8:	push   rsp
   14003b7b9:	add    BYTE PTR [rax],al
   14003b7bb:	add    BYTE PTR [rax],al
   14003b7bd:	add    BYTE PTR [rax],al
   14003b7bf:	add    BYTE PTR [rbp+0x4d],cl
   14003b7c2:	rex.XB pop r15
   14003b7c4:	rex.WR
   14003b7c5:	rex.WRXB
   14003b7c6:	rex.RXB pop r15
   14003b7c8:	push   rbx
   14003b7c9:	push   rsp
   14003b7ca:	push   r12
   14003b7cc:	push   rbp
   14003b7cd:	push   rbx
   14003b7ce:	pop    rdi
   14003b7cf:	rex.R
   14003b7d0:	rex.WB
   14003b7d1:	rex.B
   14003b7d2:	rex.WR
   14003b7d3:	rex.WRXB
   14003b7d4:	rex.RXB pop r15
   14003b7d6:	push   rdx
   14003b7d7:	rex.RB
   14003b7d8:	rex.RX push rdx
   14003b7da:	rex.RB push r11
   14003b7dc:	rex.W pop rdi
   14003b7de:	push   rdx
   14003b7df:	push   r12
   14003b7e1:	rex.RB pop r15
   14003b7e3:	push   rbx
   14003b7e4:	rex.RB
   14003b7e5:	rex.XB add BYTE PTR [r8],al
   14003b7e8:	rex.WRB push r11
   14003b7ea:	rex.R
   14003b7eb:	rex.RB push r10
   14003b7ed:	rex.RB
   14003b7ee:	rex.B
   14003b7ef:	rex.R
   14003b7f0:	rex.RB push r10
   14003b7f2:	pop    rdi
   14003b7f3:	rex.XB
   14003b7f4:	rex.B
   14003b7f5:	rex.XB
   14003b7f6:	rex.W
   14003b7f7:	rex.RB pop r15
   14003b7f9:	push   rbx
   14003b7fa:	rex.WB pop r10
   14003b7fc:	add    BYTE PTR [r8],r8b
   14003b7ff:	add    BYTE PTR [rsi+0x41],cl
   14003b802:	push   rax
   14003b803:	pop    rdi
   14003b804:	rex.R
   14003b805:	rex.WB push r11
   14003b807:	rex.XB
   14003b808:	rex.WRXB
   14003b809:	rex.WRX
   14003b80a:	rex.WRX
   14003b80b:	rex.RB
   14003b80c:	rex.XB push r12
   14003b80e:	pop    rdi
   14003b80f:	push   rdi
   14003b810:	rex.W
   14003b811:	rex.RB
   14003b812:	rex.WRX pop rdi
   14003b814:	push   rdx
   14003b815:	rex.RB push r12
   14003b817:	push   rbp
   14003b818:	push   rdx
   14003b819:	rex.WRX
   14003b81a:	rex.RB
   14003b81b:	rex.R pop rdi
   14003b81d:	push   rsp
   14003b81e:	rex.WRXB pop r15
   14003b820:	push   rcx
   14003b821:	push   rbp
   14003b822:	push   r10
   14003b824:	rex.B
   14003b825:	rex.WRX push rsp
   14003b827:	rex.WB
   14003b828:	rex.WRX
   14003b829:	add    BYTE PTR [r8],r8b
   14003b82c:	add    BYTE PTR [rax],al
   14003b82e:	add    BYTE PTR [rax],al
   14003b830:	rex.WRX
   14003b831:	rex.WRX push rsp
   14003b833:	push   rax
   14003b834:	pop    rdi
   14003b835:	rex.R push rbp
   14003b837:	rex.WRB push r8
   14003b839:	pop    rdi
   14003b83a:	rex.R
   14003b83b:	push   r12
   14003b83d:	add    BYTE PTR [r8],al
   14003b840:	rex.WRX
   14003b841:	rex.WRX push rsp
   14003b843:	push   rax
   14003b844:	pop    rdi
   14003b845:	rex.RX
   14003b846:	rex.WB
   14003b847:	rex.WR push rsp
   14003b849:	rex.RB push r10
   14003b84b:	pop    rdi
   14003b84c:	rex.WB
   14003b84d:	rex.WRX
   14003b84e:	rex.WB push r12
   14003b850:	pop    rdi
   14003b851:	rex.X push rdx
   14003b853:	rex.RB
   14003b854:	rex.B
   14003b855:	rex.WXB add BYTE PTR [r8],al
   14003b858:	rex.WRX
   14003b859:	rex.WRX push rsp
   14003b85b:	push   rax
   14003b85c:	pop    rdi
   14003b85d:	rex.RX push rbp
   14003b85f:	rex.WRX
   14003b860:	rex.XB pop r15
   14003b862:	rex.RB
   14003b863:	rex.WRX push rsp
   14003b865:	push   rdx
   14003b866:	rex.WB
   14003b867:	rex.RB push r11
   14003b869:	add    BYTE PTR [rax],al
   14003b86b:	add    BYTE PTR [rax],al
   14003b86d:	add    BYTE PTR [rax],al
   14003b86f:	add    BYTE PTR [rsi+0x4e],cl
   14003b872:	push   rsp
   14003b873:	push   rax
   14003b874:	pop    rdi
   14003b875:	rex.WB
   14003b876:	rex.WRX
   14003b877:	rex.RX
   14003b878:	rex.WRXB add BYTE PTR [r8],r8b
   14003b87b:	add    BYTE PTR [rax],al
   14003b87d:	add    BYTE PTR [rax],al
   14003b87f:	add    BYTE PTR [rsi+0x4e],cl
   14003b882:	push   rsp
   14003b883:	push   rax
   14003b884:	pop    rdi
   14003b885:	push   rax
   14003b886:	rex.WRXB
   14003b887:	rex.WR
   14003b888:	rex.WB
   14003b889:	rex.XB pop r9
   14003b88b:	add    BYTE PTR [rax],al
   14003b88d:	add    BYTE PTR [rax],al
   14003b88f:	add    BYTE PTR [rsi+0x4e],cl
   14003b892:	push   rsp
   14003b893:	push   rax
   14003b894:	pop    rdi
   14003b895:	push   rdi
   14003b896:	push   r10
   14003b898:	rex.WRX add BYTE PTR [rax],r8b
   14003b89b:	add    BYTE PTR [rax],al
   14003b89d:	add    BYTE PTR [rax],al
   14003b89f:	add    BYTE PTR [rsi+0x4f],cl
   14003b8a2:	pop    rdi
   14003b8a3:	push   rbx
   14003b8a4:	pop    rcx
   14003b8a5:	rex.WRB
   14003b8a6:	rex.X
   14003b8a7:	rex.WRXB
   14003b8a8:	rex.WR push rbx
   14003b8aa:	pop    rdi
   14003b8ab:	push   rbx
   14003b8ac:	rex.RB push r10
   14003b8ae:	push   rsi
   14003b8af:	rex.RB push r10
   14003b8b1:	add    BYTE PTR [rax],al
   14003b8b3:	add    BYTE PTR [rax],al
   14003b8b5:	add    BYTE PTR [rax],al
   14003b8b7:	add    BYTE PTR [rax+0x41],dl
   14003b8ba:	push   rdx
   14003b8bb:	rex.B
   14003b8bc:	rex.WRB
   14003b8bd:	rex.RB push r12
   14003b8bf:	rex.RB push r10
   14003b8c1:	push   rbx
   14003b8c2:	pop    rdi
   14003b8c3:	push   rax
   14003b8c4:	rex.RB push r10
   14003b8c6:	pop    rdi
   14003b8c7:	rex.RX push rdx
   14003b8c9:	rex.B
   14003b8ca:	rex.WRB
   14003b8cb:	add    BYTE PTR [r8],r8b
   14003b8ce:	add    BYTE PTR [rax],al
   14003b8d0:	push   rax
   14003b8d1:	rex.RB
   14003b8d2:	rex.WRX
   14003b8d3:	rex.R
   14003b8d4:	rex.WB
   14003b8d5:	rex.WRX
   14003b8d6:	rex.RXB pop r15
   14003b8d8:	push   rdx
   14003b8d9:	rex.RB
   14003b8da:	rex.RXB
   14003b8db:	rex.WB push r11
   14003b8dd:	push   rsp
   14003b8de:	push   rdx
   14003b8df:	push   r12
   14003b8e1:	rex.WB
   14003b8e2:	rex.WRXB
   14003b8e3:	rex.WRX push rbx
   14003b8e5:	pop    rdi
   14003b8e6:	rex.W
   14003b8e7:	push   r11
   14003b8e9:	rex.W pop rdi
   14003b8eb:	push   rbx
   14003b8ec:	rex.WB pop r10
   14003b8ee:	add    BYTE PTR [r8+0x46],r10b
   14003b8f2:	rex.XB
   14003b8f3:	rex.W pop rdi
   14003b8f5:	push   rbx
   14003b8f6:	push   rsp
   14003b8f7:	push   r10
   14003b8f9:	push   rsp
   14003b8fa:	push   rbp
   14003b8fb:	push   rax
   14003b8fc:	pop    rdi
   14003b8fd:	rex.W
   14003b8fe:	rex.WB
   14003b8ff:	rex.WRX push rsp
   14003b901:	add    BYTE PTR [rax],al
   14003b903:	add    BYTE PTR [rax],al
   14003b905:	add    BYTE PTR [rax],al
   14003b907:	add    BYTE PTR [rax+0x46],dl
   14003b90a:	rex.XB
   14003b90b:	rex.W pop rdi
   14003b90d:	push   rbx
   14003b90e:	push   rsp
   14003b90f:	rex.WRXB push r8
   14003b911:	pop    rdi
   14003b912:	rex.W
   14003b913:	rex.WB
   14003b914:	rex.WRX push rsp
   14003b916:	add    BYTE PTR [rax],al
   14003b918:	push   rax
   14003b919:	rex.RX
   14003b91a:	rex.XB
   14003b91b:	rex.W pop rdi
   14003b91d:	push   rsp
   14003b91e:	push   rdx
   14003b91f:	rex.B
   14003b920:	rex.XB
   14003b921:	rex.RB pop r15
   14003b923:	rex.RB
   14003b924:	rex.WRX push rsp
   14003b926:	push   rdx
   14003b927:	pop    rcx
	...
   14003b930:	push   rax
   14003b931:	rex.RX
   14003b932:	rex.XB
   14003b933:	rex.W pop rdi
   14003b935:	push   rsp
   14003b936:	push   rdx
   14003b937:	rex.B
   14003b938:	rex.XB
   14003b939:	rex.RB pop r15
   14003b93b:	rex.WR
   14003b93c:	rex.RB push r14
   14003b93e:	rex.RB
   14003b93f:	rex.WR add BYTE PTR [rax],r8b
   14003b942:	add    BYTE PTR [rax],al
   14003b944:	add    BYTE PTR [rax],al
   14003b946:	add    BYTE PTR [rax],al
   14003b948:	push   rax
   14003b949:	rex.WRXB
   14003b94a:	rex.WR
   14003b94b:	rex.WR pop rdi
   14003b94d:	push   rdx
   14003b94e:	push   r12
   14003b950:	add    BYTE PTR [r8],r8b
   14003b953:	add    BYTE PTR [rax],al
   14003b955:	add    BYTE PTR [rax],al
   14003b957:	add    BYTE PTR [rax+0x4f],dl
   14003b95a:	push   rdx
   14003b95b:	push   rsp
   14003b95c:	pop    rdi
   14003b95d:	rex.B
   14003b95e:	rex.WR
   14003b95f:	rex.WR
   14003b960:	rex.WRXB
   14003b961:	rex.XB
   14003b962:	push   r12
   14003b964:	rex.WB
   14003b965:	rex.WRXB
   14003b966:	rex.WRX pop rdi
   14003b968:	rex.XB
   14003b969:	rex.WRXB
   14003b96a:	rex.WRX push rsp
   14003b96c:	push   rdx
   14003b96d:	rex.WRXB
   14003b96e:	rex.WR pop rdi
   14003b970:	rex.RB
   14003b971:	rex.WRX
   14003b972:	rex.B
   14003b973:	rex.X
   14003b974:	rex.WR
   14003b975:	rex.RB
   14003b976:	add    BYTE PTR [rax+0x50],r10b
   14003b97a:	push   rsp
   14003b97b:	push   rax
   14003b97c:	pop    rdi
   14003b97d:	push   rbx
   14003b97e:	push   rsp
   14003b97f:	rex.WRXB push r8
   14003b981:	pop    rdi
   14003b982:	rex.WRXB
   14003b983:	rex.WRX pop rdi
   14003b985:	push   r11
   14003b987:	push   rbx
   14003b988:	push   rbp
   14003b989:	rex.WRB
   14003b98a:	add    BYTE PTR [r8],r8b
   14003b98d:	add    BYTE PTR [rax],al
   14003b98f:	add    BYTE PTR [rax+0x52],dl
   14003b992:	rex.WB
   14003b993:	rex.WRX push rsp
   14003b995:	pop    rdi
   14003b996:	rex.WRB
   14003b997:	rex.WRXB
   14003b998:	rex.R push rbp
   14003b99a:	rex.WR
   14003b99b:	rex.RB pop r15
   14003b99d:	rex.WRX
   14003b99e:	rex.B
   14003b99f:	rex.WRB
   14003b9a0:	add    BYTE PTR [r8],r8b
   14003b9a3:	add    BYTE PTR [rax],al
   14003b9a5:	add    BYTE PTR [rax],al
   14003b9a7:	add    BYTE PTR [rax+0x52],dl
   14003b9aa:	rex.WB
   14003b9ab:	rex.WRX push rsp
   14003b9ad:	pop    rdi
   14003b9ae:	push   rax
   14003b9af:	push   rdx
   14003b9b0:	rex.WRXB
   14003b9b1:	rex.XB
   14003b9b2:	rex.RB push r11
   14003b9b4:	push   rbx
   14003b9b5:	pop    rdi
   14003b9b6:	rex.WRX
   14003b9b7:	rex.B
   14003b9b8:	rex.WRB
   14003b9b9:	add    BYTE PTR [r8],r8b
   14003b9bc:	add    BYTE PTR [rax],al
   14003b9be:	add    BYTE PTR [rax],al
   14003b9c0:	push   rax
   14003b9c1:	push   rdx
   14003b9c2:	rex.WB
   14003b9c3:	rex.WRX push rsp
   14003b9c5:	pop    rdi
   14003b9c6:	push   rsp
   14003b9c7:	rex.W push rdx
   14003b9c9:	rex.RB
   14003b9ca:	rex.B
   14003b9cb:	rex.R pop rdi
   14003b9cd:	rex.WB
   14003b9ce:	add    BYTE PTR [rax+0x52],r10b
   14003b9d2:	rex.WB
   14003b9d3:	rex.WRX push rsp
   14003b9d5:	pop    rdi
   14003b9d6:	push   rsp
   14003b9d7:	rex.WB
   14003b9d8:	rex.XB
   14003b9d9:	rex.WXB pop r15
   14003b9db:	rex.XB
   14003b9dc:	rex.WRXB push r13
   14003b9de:	rex.WRX push rsp
	...
   14003b9e8:	push   rax
   14003b9e9:	push   rdx
   14003b9ea:	rex.WB
   14003b9eb:	rex.WRX push rsp
   14003b9ed:	pop    rdi
   14003b9ee:	push   rsp
   14003b9ef:	rex.WB
   14003b9f0:	rex.WRB
   14003b9f1:	add    BYTE PTR [r8],r8b
   14003b9f4:	add    BYTE PTR [rax],al
   14003b9f6:	add    BYTE PTR [rax],al
   14003b9f8:	push   rax
   14003b9f9:	push   rdx
   14003b9fa:	rex.WRXB pop r8
   14003b9fc:	pop    rcx
   14003b9fd:	pop    rdi
   14003b9fe:	rex.WR
   14003b9ff:	rex.WB push r11
   14003ba01:	push   rsp
   14003ba02:	rex.RB
   14003ba03:	rex.WRX
   14003ba04:	rex.RB push r10
   14003ba06:	pop    rdi
   14003ba07:	rex.RX
   14003ba08:	rex.WR
   14003ba09:	rex.WRXB
   14003ba0a:	rex.WRXB push r10
   14003ba0c:	pop    rdi
   14003ba0d:	push   rax
   14003ba0e:	rex.RB
   14003ba0f:	rex.WRX
   14003ba10:	rex.R
   14003ba11:	rex.WB
   14003ba12:	rex.WRX
   14003ba13:	rex.RXB pop r15
   14003ba15:	rex.B
   14003ba16:	rex.XB
   14003ba17:	rex.XB
   14003ba18:	rex.RB push r8
   14003ba1a:	push   rsp
   14003ba1b:	push   rbx
   14003ba1c:	add    BYTE PTR [rax],al
   14003ba1e:	add    BYTE PTR [rax],al
   14003ba20:	push   rax
   14003ba21:	push   rdx
   14003ba22:	rex.WRXB pop r8
   14003ba24:	pop    rcx
   14003ba25:	pop    rdi
   14003ba26:	rex.WR
   14003ba27:	rex.WB push r11
   14003ba29:	push   rsp
   14003ba2a:	rex.RB
   14003ba2b:	rex.WRX
   14003ba2c:	rex.RB push r10
   14003ba2e:	pop    rdi
   14003ba2f:	rex.WRB
   14003ba30:	pop    r8
   14003ba32:	pop    rdi
   14003ba33:	push   rax
   14003ba34:	rex.RB push r10
   14003ba36:	rex.XB
   14003ba37:	rex.RB
   14003ba38:	rex.WRX push rsp
   14003ba3a:	add    BYTE PTR [rax],al
   14003ba3c:	add    BYTE PTR [rax],al
   14003ba3e:	add    BYTE PTR [rax],al
   14003ba40:	push   rax
   14003ba41:	push   rdx
   14003ba42:	rex.WRXB pop r8
   14003ba44:	pop    rcx
   14003ba45:	pop    rdi
   14003ba46:	rex.WR
   14003ba47:	rex.WB push r11
   14003ba49:	push   rsp
   14003ba4a:	rex.RB
   14003ba4b:	rex.WRX
   14003ba4c:	rex.RB push r10
   14003ba4e:	pop    rdi
   14003ba4f:	rex.WRB
   14003ba50:	rex.WB
   14003ba51:	rex.WRX pop rdi
   14003ba53:	push   rax
   14003ba54:	rex.RB push r10
   14003ba56:	rex.XB
   14003ba57:	rex.RB
   14003ba58:	rex.WRX push rsp
   14003ba5a:	add    BYTE PTR [rax],al
   14003ba5c:	add    BYTE PTR [rax],al
   14003ba5e:	add    BYTE PTR [rax],al
   14003ba60:	push   rax
   14003ba61:	push   rdx
   14003ba62:	rex.WRXB pop r8
   14003ba64:	pop    rcx
   14003ba65:	pop    rdi
   14003ba66:	rex.WR
   14003ba67:	rex.WB push r11
   14003ba69:	push   rsp
   14003ba6a:	rex.RB
   14003ba6b:	rex.WRX
   14003ba6c:	rex.RB push r10
   14003ba6e:	pop    rdi
   14003ba6f:	push   rsp
   14003ba70:	rex.WRXB pop r15
   14003ba72:	rex.XB push r10
   14003ba74:	rex.RB
   14003ba75:	push   r12
   14003ba77:	rex.RB pop r15
   14003ba79:	push   rax
   14003ba7a:	rex.RB push r10
   14003ba7c:	rex.XB
   14003ba7d:	rex.RB
   14003ba7e:	rex.WRX push rsp
	...
   14003ba88:	push   rax
   14003ba89:	push   rdx
   14003ba8a:	rex.WRXB pop r8
   14003ba8c:	pop    rcx
   14003ba8d:	pop    rdi
   14003ba8e:	rex.WR
   14003ba8f:	rex.WB push r11
   14003ba91:	push   rsp
   14003ba92:	rex.RB
   14003ba93:	rex.WRX
   14003ba94:	rex.RB push r10
   14003ba96:	pop    rdi
   14003ba97:	push   rsp
   14003ba98:	rex.WRXB pop r15
   14003ba9a:	rex.WXB
   14003ba9b:	rex.WB
   14003ba9c:	rex.WR
   14003ba9d:	rex.WR pop rdi
   14003ba9f:	push   rax
   14003baa0:	rex.RB push r10
   14003baa2:	rex.XB
   14003baa3:	rex.RB
   14003baa4:	rex.WRX push rsp
   14003baa6:	add    BYTE PTR [rax],al
   14003baa8:	push   rcx
   14003baa9:	push   rbp
   14003baaa:	push   r10
   14003baac:	rex.B
   14003baad:	rex.WRX push rsp
   14003baaf:	rex.WB
   14003bab0:	rex.WRX
   14003bab1:	rex.RB pop r15
   14003bab3:	rex.RX
   14003bab4:	rex.WR push rsp
   14003bab6:	push   rdx
   14003bab7:	pop    rdi
   14003bab8:	rex.W
   14003bab9:	push   r11
   14003babb:	rex.W pop rdi
   14003babd:	rex.WR
   14003babe:	rex.RB
   14003babf:	rex.WRX
   14003bac0:	rex.RXB push r12
   14003bac2:	rex.W add BYTE PTR [rax],al
   14003bac5:	add    BYTE PTR [rax],al
   14003bac7:	add    BYTE PTR [rcx+0x55],dl
   14003baca:	push   r10
   14003bacc:	rex.B
   14003bacd:	rex.WRX push rsp
   14003bacf:	rex.WB
   14003bad0:	rex.WRX
   14003bad1:	rex.RB pop r15
   14003bad3:	rex.RX
   14003bad4:	rex.WR push rsp
   14003bad6:	push   rdx
   14003bad7:	pop    rdi
   14003bad8:	rex.W
   14003bad9:	push   r11
   14003badb:	rex.W pop rdi
   14003badd:	rex.WR
   14003bade:	rex.WRXB
   14003badf:	rex.XB
   14003bae0:	rex.WXB push r11
   14003bae2:	add    BYTE PTR [rax],al
   14003bae4:	add    BYTE PTR [rax],al
   14003bae6:	add    BYTE PTR [rax],al
   14003bae8:	push   rcx
   14003bae9:	push   rbp
   14003baea:	push   r10
   14003baec:	rex.B
   14003baed:	rex.WRX push rsp
   14003baef:	rex.WB
   14003baf0:	rex.WRX
   14003baf1:	rex.RB pop r15
   14003baf3:	rex.RX
   14003baf4:	rex.WR push rsp
   14003baf6:	push   rdx
   14003baf7:	pop    rdi
   14003baf8:	rex.WB
   14003baf9:	rex.WRX
   14003bafa:	rex.RX
   14003bafb:	rex.WRXB add BYTE PTR [r8],r8b
   14003bafe:	add    BYTE PTR [rax],al
   14003bb00:	push   rcx
   14003bb01:	push   rbp
   14003bb02:	push   r10
   14003bb04:	rex.B
   14003bb05:	rex.WRX push rsp
   14003bb07:	rex.WB
   14003bb08:	rex.WRX
   14003bb09:	rex.RB pop r15
   14003bb0b:	rex.RX
   14003bb0c:	rex.WR push rsp
   14003bb0e:	push   rdx
   14003bb0f:	pop    rdi
   14003bb10:	push   rdi
   14003bb11:	push   r10
   14003bb13:	rex.WRX add BYTE PTR [rax],r8b
   14003bb16:	add    BYTE PTR [rax],al
   14003bb18:	push   rcx
   14003bb19:	push   rbp
   14003bb1a:	rex.RB push r10
   14003bb1c:	pop    rcx
   14003bb1d:	pop    rdi
   14003bb1e:	rex.RX
   14003bb1f:	rex.WRXB push r10
   14003bb21:	pop    rdi
   14003bb22:	push   rbx
   14003bb23:	push   rsp
   14003bb24:	rex.WRXB
   14003bb25:	rex.WR
   14003bb26:	rex.RB
   14003bb27:	rex.WRX pop rdi
   14003bb29:	push   rax
   14003bb2a:	rex.WRXB push r10
   14003bb2c:	push   rsp
   14003bb2d:	add    BYTE PTR [rax],al
   14003bb2f:	add    BYTE PTR [rdx+0x41],dl
   14003bb32:	rex.R
   14003bb33:	rex.WB push r13
   14003bb35:	push   rbx
   14003bb36:	pop    rdi
   14003bb37:	push   r13
   14003bb39:	push   rsp
   14003bb3a:	rex.W pop rdi
   14003bb3c:	rex.RX
   14003bb3d:	rex.WB
   14003bb3e:	rex.WR push rsp
   14003bb40:	rex.RB push r10
   14003bb42:	pop    rdi
   14003bb43:	push   rsp
   14003bb44:	push   rdx
   14003bb45:	rex.B
   14003bb46:	rex.XB
   14003bb47:	add    BYTE PTR [r8],r8b
   14003bb4a:	add    BYTE PTR [rax],al
   14003bb4c:	add    BYTE PTR [rax],al
   14003bb4e:	add    BYTE PTR [rax],al
   14003bb50:	push   rdx
   14003bb51:	rex.B
   14003bb52:	rex.R
   14003bb53:	rex.WB push r13
   14003bb55:	push   rbx
   14003bb56:	pop    rdi
   14003bb57:	rex.WB
   14003bb58:	rex.WRX
   14003bb59:	rex.WB push r12
   14003bb5b:	pop    rdi
   14003bb5c:	rex.X push rdx
   14003bb5e:	rex.B
   14003bb5f:	rex.WXB
   14003bb60:	rex.RB pop r15
   14003bb62:	push   rax
   14003bb63:	rex.WRXB
   14003bb64:	rex.WB
   14003bb65:	rex.WRX push rsp
   14003bb67:	add    BYTE PTR [rdx+0x45],dl
   14003bb6a:	rex.RX
   14003bb6b:	rex.XB
   14003bb6c:	rex.WRXB push r13
   14003bb6e:	rex.WRX push rsp
	...
   14003bb78:	push   rdx
   14003bb79:	rex.RB
   14003bb7a:	rex.RX pop rdi
   14003bb7c:	rex.W
   14003bb7d:	rex.WB push r11
   14003bb7f:	push   rsp
   14003bb80:	pop    rdi
   14003bb81:	rex.B
   14003bb82:	rex.XB push r12
   14003bb84:	rex.WB push r14
   14003bb86:	push   r12
   14003bb88:	rex.RB
   14003bb89:	rex.R pop rdi
   14003bb8b:	rex.WB
   14003bb8c:	rex.WRX pop rdi
   14003bb8e:	rex.XB
   14003bb8f:	rex.W
   14003bb90:	rex.WXB add BYTE PTR [r8],al
   14003bb93:	add    BYTE PTR [rax],al
   14003bb95:	add    BYTE PTR [rax],al
   14003bb97:	add    BYTE PTR [rdx+0x45],dl
   14003bb9a:	rex.RX pop rdi
   14003bb9c:	rex.W
   14003bb9d:	rex.WB push r11
   14003bb9f:	push   rsp
   14003bba0:	pop    rdi
   14003bba1:	rex.B
   14003bba2:	rex.XB push r12
   14003bba4:	rex.WB push r14
   14003bba6:	push   r12
   14003bba8:	rex.RB
   14003bba9:	rex.R pop rdi
   14003bbab:	rex.WB
   14003bbac:	rex.WRX pop rdi
   14003bbae:	rex.RX push rdx
   14003bbb0:	add    BYTE PTR [r8],r8b
   14003bbb3:	add    BYTE PTR [rax],al
   14003bbb5:	add    BYTE PTR [rax],al
   14003bbb7:	add    BYTE PTR [rdx+0x45],dl
   14003bbba:	rex.RX pop rdi
   14003bbbc:	rex.W
   14003bbbd:	rex.WB push r11
   14003bbbf:	push   rsp
   14003bbc0:	pop    rdi
   14003bbc1:	rex.WRB
   14003bbc2:	pop    r8
   14003bbc4:	pop    rdi
   14003bbc5:	rex.WR
   14003bbc6:	rex.WRXB
   14003bbc7:	rex.RXB pop r15
   14003bbc9:	push   rbx
   14003bbca:	rex.WB pop r10
   14003bbcc:	rex.RB pop r15
   14003bbce:	rex.WRB
   14003bbcf:	rex.X add BYTE PTR [rax],al
   14003bbd2:	add    BYTE PTR [rax],al
   14003bbd4:	add    BYTE PTR [rax],al
   14003bbd6:	add    BYTE PTR [rax],al
   14003bbd8:	push   rdx
   14003bbd9:	rex.RB
   14003bbda:	rex.RX pop rdi
   14003bbdc:	rex.W
   14003bbdd:	rex.WB push r11
   14003bbdf:	push   rsp
   14003bbe0:	pop    rdi
   14003bbe1:	rex.WRB
   14003bbe2:	pop    r8
   14003bbe4:	pop    rdi
   14003bbe5:	push   rsp
   14003bbe6:	rex.WR push rbx
   14003bbe8:	pop    rdi
   14003bbe9:	rex.X push rbp
   14003bbeb:	rex.RX
   14003bbec:	rex.RX
   14003bbed:	rex.RB push r10
   14003bbef:	pop    rdi
   14003bbf0:	push   rdx
   14003bbf1:	rex.RB
   14003bbf2:	rex.XB
   14003bbf3:	rex.WRXB push r10
   14003bbf5:	rex.R push rbx
   14003bbf7:	add    BYTE PTR [rdx+0x45],dl
   14003bbfa:	rex.RX pop rdi
   14003bbfc:	rex.W
   14003bbfd:	rex.WB push r11
   14003bbff:	push   rsp
   14003bc00:	pop    rdi
   14003bc01:	rex.WRX push rbp
   14003bc03:	rex.WRB
   14003bc04:	rex.X
   14003bc05:	rex.RB push r10
   14003bc07:	pop    rdi
   14003bc08:	rex.WRXB
   14003bc09:	rex.RX pop rdi
   14003bc0b:	push   rbx
   14003bc0c:	rex.RB push r10
   14003bc0e:	rex.WB
   14003bc0f:	rex.B
   14003bc10:	rex.WR pop rdi
   14003bc12:	rex.RX
   14003bc13:	rex.WB
   14003bc14:	rex.WR
   14003bc15:	rex.RB push r11
   14003bc17:	add    BYTE PTR [rdx+0x45],dl
   14003bc1a:	rex.RX pop rdi
   14003bc1c:	rex.W
   14003bc1d:	rex.WB push r11
   14003bc1f:	push   rsp
   14003bc20:	pop    rdi
   14003bc21:	rex.WRX push rbp
   14003bc23:	rex.WRB pop r15
   14003bc25:	push   rbx
   14003bc26:	push   rsp
   14003bc27:	rex.B
   14003bc28:	rex.XB
   14003bc29:	rex.WXB pop r15
   14003bc2b:	rex.RX push rdx
   14003bc2d:	rex.B
   14003bc2e:	rex.WRB
   14003bc2f:	rex.RB push r11
   14003bc31:	add    BYTE PTR [rax],al
   14003bc33:	add    BYTE PTR [rax],al
   14003bc35:	add    BYTE PTR [rax],al
   14003bc37:	add    BYTE PTR [rdx+0x45],dl
   14003bc3a:	rex.RX pop rdi
   14003bc3c:	rex.W
   14003bc3d:	rex.WB push r11
   14003bc3f:	push   rsp
   14003bc40:	pop    rdi
   14003bc41:	rex.WRX push rbp
   14003bc43:	rex.WRB pop r15
   14003bc45:	push   rbx
   14003bc46:	push   rsp
   14003bc47:	rex.B
   14003bc48:	rex.XB
   14003bc49:	rex.WXB pop r15
   14003bc4b:	rex.RX push rdx
   14003bc4d:	rex.B
   14003bc4e:	rex.WRB
   14003bc4f:	rex.RB push r11
   14003bc51:	pop    rdi
   14003bc52:	rex.XB
   14003bc53:	rex.WRXB
   14003bc54:	rex.WRB add BYTE PTR [r8],r8b
   14003bc57:	add    BYTE PTR [rdx+0x45],dl
   14003bc5a:	rex.RX pop rdi
   14003bc5c:	rex.W
   14003bc5d:	rex.WB push r11
   14003bc5f:	push   rsp
   14003bc60:	pop    rdi
   14003bc61:	push   rsp
   14003bc62:	push   rdx
   14003bc63:	rex.B
   14003bc64:	rex.XB
   14003bc65:	rex.RB pop r15
   14003bc67:	rex.X push rbp
   14003bc69:	rex.RX
   14003bc6a:	rex.RX
   14003bc6b:	rex.RB push r10
   14003bc6d:	pop    rdi
   14003bc6e:	push   rbx
   14003bc6f:	rex.WB pop r10
   14003bc71:	rex.RB pop r15
   14003bc73:	rex.WXB
   14003bc74:	rex.X add BYTE PTR [rax],al
   14003bc77:	add    BYTE PTR [rdx+0x45],dl
   14003bc7a:	rex.RX pop rdi
   14003bc7c:	rex.W
   14003bc7d:	rex.WB push r11
   14003bc7f:	push   rsp
   14003bc80:	pop    rdi
   14003bc81:	push   rsp
   14003bc82:	push   rdx
   14003bc83:	rex.B
   14003bc84:	rex.XB
   14003bc85:	rex.RB pop r15
   14003bc87:	rex.WRB
   14003bc88:	pop    r8
   14003bc8a:	pop    rdi
   14003bc8b:	rex.X push rbp
   14003bc8d:	rex.RX
   14003bc8e:	rex.RX
   14003bc8f:	rex.RB push r10
   14003bc91:	push   rbx
   14003bc92:	add    BYTE PTR [rax],al
   14003bc94:	add    BYTE PTR [rax],al
   14003bc96:	add    BYTE PTR [rax],al
   14003bc98:	push   rdx
   14003bc99:	rex.RB
   14003bc9a:	rex.RXB
   14003bc9b:	rex.WB push r11
   14003bc9d:	push   rsp
   14003bc9e:	push   rdx
   14003bc9f:	push   r12
   14003bca1:	rex.WB
   14003bca2:	rex.WRXB
   14003bca3:	rex.WRX pop rdi
   14003bca5:	push   rdx
   14003bca6:	rex.RB push r9
   14003bca8:	push   rbp
   14003bca9:	rex.RB push r11
   14003bcab:	push   rsp
   14003bcac:	pop    rdi
   14003bcad:	rex.RB pop r8
   14003bcaf:	push   rax
   14003bcb0:	rex.WB push r10
   14003bcb2:	push   r12
   14003bcb4:	rex.WB
   14003bcb5:	rex.WRXB
   14003bcb6:	rex.WRX pop rdi
   14003bcb8:	push   rsp
   14003bcb9:	rex.WB
   14003bcba:	rex.WRB
   14003bcbb:	rex.RB
   14003bcbc:	rex.WRXB push r13
   14003bcbe:	push   rsp
   14003bcbf:	add    BYTE PTR [rdx+0x45],dl
   14003bcc2:	rex.WR
   14003bcc3:	rex.WRXB
   14003bcc4:	rex.B
   14003bcc5:	rex.R pop rdi
   14003bcc7:	push   rsp
   14003bcc8:	rex.RB
   14003bcc9:	rex.WRB push r8
   14003bccb:	rex.WR
   14003bccc:	push   r12
   14003bcce:	rex.RB push r11
	...
   14003bcd8:	push   rdx
   14003bcd9:	push   rax
   14003bcda:	rex.XB pop r15
   14003bcdc:	rex.XB
   14003bcdd:	rex.WRXB
   14003bcde:	rex.WRX
   14003bcdf:	rex.WRX
   14003bce0:	rex.RB
   14003bce1:	rex.XB push r12
   14003bce3:	rex.WB
   14003bce4:	rex.WRXB
   14003bce5:	rex.WRX add BYTE PTR [rax],r8b
   14003bce8:	push   rdx
   14003bce9:	push   rax
   14003bcea:	rex.XB pop r15
   14003bcec:	rex.WB
   14003bced:	rex.WRX
   14003bcee:	rex.X
   14003bcef:	rex.WRXB push r13
   14003bcf1:	rex.WRX
   14003bcf2:	rex.R
   14003bcf3:	rex.XB
   14003bcf4:	rex.WRXB
   14003bcf5:	rex.WRX
   14003bcf6:	rex.WRX
   14003bcf7:	rex.RB
   14003bcf8:	rex.XB push r12
   14003bcfa:	rex.WB
   14003bcfb:	rex.WRXB
   14003bcfc:	rex.WRX add BYTE PTR [rax],r8b
   14003bcff:	add    BYTE PTR [rdx+0x50],dl
   14003bd02:	rex.XB pop r15
   14003bd04:	rex.WRX
   14003bd05:	rex.WRXB push r12
   14003bd07:	rex.WB
   14003bd08:	rex.RX
   14003bd09:	rex.WB
   14003bd0a:	rex.XB
   14003bd0b:	push   r12
   14003bd0d:	rex.WB
   14003bd0e:	rex.WRXB
   14003bd0f:	rex.WRX add BYTE PTR [rax],r8b
   14003bd12:	add    BYTE PTR [rax],al
   14003bd14:	add    BYTE PTR [rax],al
   14003bd16:	add    BYTE PTR [rax],al
   14003bd18:	push   rdx
   14003bd19:	push   rax
   14003bd1a:	rex.XB pop r15
   14003bd1c:	rex.WRXB push r13
   14003bd1e:	push   rsp
   14003bd1f:	rex.X
   14003bd20:	rex.WRXB push r13
   14003bd22:	rex.WRX
   14003bd23:	rex.R
   14003bd24:	rex.XB
   14003bd25:	rex.WRXB
   14003bd26:	rex.WRX
   14003bd27:	rex.WRX
   14003bd28:	rex.RB
   14003bd29:	rex.XB push r12
   14003bd2b:	rex.WB
   14003bd2c:	rex.WRXB
   14003bd2d:	rex.WRX add BYTE PTR [rax],r8b
   14003bd30:	push   rdx
   14003bd31:	push   rax
   14003bd32:	rex.XB pop r15
   14003bd34:	push   rax
   14003bd35:	rex.B
   14003bd36:	rex.XB
   14003bd37:	rex.WXB
   14003bd38:	rex.RB push r12
   14003bd3a:	push   rbx
   14003bd3b:	add    BYTE PTR [rax],al
   14003bd3d:	add    BYTE PTR [rax],al
   14003bd3f:	add    BYTE PTR [rdx+0x50],dl
   14003bd42:	rex.XB pop r15
   14003bd44:	push   rax
   14003bd45:	push   rdx
   14003bd46:	rex.WRXB push r12
   14003bd48:	rex.WRXB
   14003bd49:	rex.XB
   14003bd4a:	rex.WRXB
   14003bd4b:	rex.WR push rbx
   14003bd4d:	add    BYTE PTR [rax],al
   14003bd4f:	add    BYTE PTR [rdx+0x50],dl
   14003bd52:	rex.XB pop r15
   14003bd54:	push   rbx
   14003bd55:	rex.RB push r11
   14003bd57:	push   rbx
   14003bd58:	rex.WB
   14003bd59:	rex.WRXB
   14003bd5a:	rex.WRX add BYTE PTR [rax],r8b
   14003bd5d:	add    BYTE PTR [rax],al
   14003bd5f:	add    BYTE PTR [rdx+0x50],dl
   14003bd62:	rex.XB pop r15
   14003bd64:	push   rbx
   14003bd65:	rex.W push rbp
   14003bd67:	push   rsp
   14003bd68:	rex.R
   14003bd69:	rex.WRXB push r15
   14003bd6b:	rex.WRX add BYTE PTR [rax],r8b
   14003bd6e:	add    BYTE PTR [rax],al
   14003bd70:	push   rdx
   14003bd71:	push   rax
   14003bd72:	rex.XB pop r15
   14003bd74:	push   rbx
   14003bd75:	push   rsp
   14003bd76:	rex.WRXB push r8
   14003bd78:	pop    rdi
   14003bd79:	rex.WRXB
   14003bd7a:	rex.WRX pop rdi
   14003bd7c:	push   r11
   14003bd7e:	push   rbx
   14003bd7f:	push   rbp
   14003bd80:	rex.WRB
   14003bd81:	add    BYTE PTR [r8],r8b
   14003bd84:	add    BYTE PTR [rax],al
   14003bd86:	add    BYTE PTR [rax],al
   14003bd88:	push   rdx
   14003bd89:	push   rax
   14003bd8a:	rex.XB pop r15
   14003bd8c:	push   rbp
   14003bd8d:	push   rbx
   14003bd8e:	rex.RB pop r15
   14003bd90:	rex.WR
   14003bd91:	rex.WRXB
   14003bd92:	rex.XB
   14003bd93:	rex.B
   14003bd94:	rex.WR
   14003bd95:	rex.W
   14003bd96:	rex.WRXB push r11
   14003bd98:	push   rsp
   14003bd99:	pop    rdi
   14003bd9a:	rex.RX
   14003bd9b:	rex.WRXB push r10
   14003bd9d:	pop    rdi
   14003bd9e:	rex.X
   14003bd9f:	rex.WB
   14003bda0:	rex.WRX
   14003bda1:	rex.R
   14003bda2:	rex.B
   14003bda3:	rex.XB
   14003bda4:	rex.WXB add BYTE PTR [r8],al
   14003bda7:	add    BYTE PTR [rbx+0x43],dl
   14003bdaa:	rex.WRB pop r15
   14003bdac:	rex.WR
   14003bdad:	rex.WRXB
   14003bdae:	rex.XB
   14003bdaf:	rex.WXB pop r15
   14003bdb1:	push   rdx
   14003bdb2:	rex.RB push r12
   14003bdb4:	push   rdx
   14003bdb5:	pop    rcx
   14003bdb6:	pop    rdi
   14003bdb7:	rex.R
   14003bdb8:	rex.RB
   14003bdb9:	rex.WR
   14003bdba:	pop    r9
   14003bdbc:	add    BYTE PTR [rax],al
   14003bdbe:	add    BYTE PTR [rax],al
   14003bdc0:	push   rbx
   14003bdc1:	rex.RB
   14003bdc2:	rex.XB push r13
   14003bdc4:	push   rdx
   14003bdc5:	rex.WB
   14003bdc6:	rex.R pop rdi
   14003bdc8:	push   r13
   14003bdca:	push   rsp
   14003bdcb:	rex.W pop rdi
   14003bdcd:	rex.RX
   14003bdce:	rex.WB
   14003bdcf:	rex.WR push rsp
   14003bdd1:	rex.RB push r10
   14003bdd3:	pop    rdi
   14003bdd4:	push   rsp
   14003bdd5:	push   rdx
   14003bdd6:	rex.B
   14003bdd7:	rex.XB
   14003bdd8:	add    BYTE PTR [r8],r8b
   14003bddb:	add    BYTE PTR [rax],al
   14003bddd:	add    BYTE PTR [rax],al
   14003bddf:	add    BYTE PTR [rbx+0x45],dl
   14003bde2:	rex.XB push r13
   14003bde4:	push   rdx
   14003bde5:	rex.WB
   14003bde6:	rex.R pop rdi
   14003bde8:	rex.WB
   14003bde9:	rex.WRX
   14003bdea:	rex.WB push r12
   14003bdec:	pop    rdi
   14003bded:	rex.X push rdx
   14003bdef:	rex.B
   14003bdf0:	rex.WXB
   14003bdf1:	rex.RB pop r15
   14003bdf3:	push   rax
   14003bdf4:	rex.WRXB
   14003bdf5:	rex.WB
   14003bdf6:	rex.WRX push rsp
	...
   14003be00:	push   rbx
   14003be01:	rex.RB
   14003be02:	rex.XB push r13
   14003be04:	push   rdx
   14003be05:	rex.WB
   14003be06:	rex.R pop rdi
   14003be08:	push   rsp
   14003be09:	push   rdx
   14003be0a:	rex.B
   14003be0b:	rex.XB
   14003be0c:	rex.RB pop r15
   14003be0e:	rex.RB
   14003be0f:	rex.WRX push rsp
   14003be11:	push   rdx
   14003be12:	pop    rcx
   14003be13:	add    BYTE PTR [rax],al
   14003be15:	add    BYTE PTR [rax],al
   14003be17:	add    BYTE PTR [rbx+0x45],dl
   14003be1a:	rex.WRX
   14003be1b:	rex.R pop rdi
   14003be1d:	push   rsp
   14003be1e:	push   rdx
   14003be1f:	rex.B
   14003be20:	rex.XB
   14003be21:	rex.RB push r11
   14003be23:	pop    rdi
   14003be24:	push   rsp
   14003be25:	rex.WRXB pop r15
   14003be27:	rex.R
   14003be28:	rex.RB
   14003be29:	rex.X push rbp
   14003be2b:	rex.RXB
   14003be2c:	rex.RXB
   14003be2d:	rex.RB push r10
   14003be2f:	add    BYTE PTR [rbx+0x45],dl
   14003be32:	push   rdx
   14003be33:	push   rsi
   14003be34:	rex.WB
   14003be35:	rex.XB
   14003be36:	rex.RB pop r15
   14003be38:	push   rbx
   14003be39:	push   rsp
   14003be3a:	push   r10
   14003be3c:	push   rsp
   14003be3d:	pop    rdi
   14003be3e:	push   r12
   14003be40:	push   rsp
   14003be41:	rex.RB
   14003be42:	rex.WRB push r8
   14003be44:	push   rsp
   14003be45:	push   rbx
   14003be46:	pop    rdi
   14003be47:	rex.WRXB
   14003be48:	rex.WRX pop rdi
   14003be4a:	push   rbx
   14003be4b:	rex.XB
   14003be4c:	rex.WRB pop r15
   14003be4e:	rex.WR
   14003be4f:	rex.WRXB
   14003be50:	rex.XB
   14003be51:	rex.WXB add BYTE PTR [r8],al
   14003be54:	add    BYTE PTR [rax],al
   14003be56:	add    BYTE PTR [rax],al
   14003be58:	push   rbx
   14003be59:	rex.RB push r12
   14003be5b:	push   rbp
   14003be5c:	push   rax
   14003be5d:	pop    rdi
   14003be5e:	push   r11
   14003be60:	push   rbx
   14003be61:	rex.RB push r10
   14003be63:	push   rsp
   14003be64:	pop    rdi
   14003be65:	rex.WRXB
   14003be66:	rex.WRX pop rdi
   14003be68:	rex.RB push r10
   14003be6a:	push   rdx
   14003be6b:	rex.WRXB push r10
   14003be6d:	add    BYTE PTR [rax],al
   14003be6f:	add    BYTE PTR [rbx+0x45],dl
   14003be72:	push   rsp
   14003be73:	push   rbp
   14003be74:	push   rax
   14003be75:	pop    rdi
   14003be76:	rex.R
   14003be77:	gs (bad) 
   14003be79:	jne    0x14003bee2
   14003be7b:	pop    rdi
   14003be7c:	rex.XB
   14003be7d:	add    BYTE PTR [r8],al
   14003be80:	push   rbx
   14003be81:	rex.RB push r12
   14003be83:	push   rbp
   14003be84:	push   rax
   14003be85:	pop    rdi
   14003be86:	rex.RB
   14003be87:	rex.WRX push rsp
   14003be89:	push   rdx
   14003be8a:	rex.WB
   14003be8b:	rex.RB push r11
   14003be8d:	add    BYTE PTR [rax],al
   14003be8f:	add    BYTE PTR [rbx+0x49],dl
   14003be92:	rex.WRB push r13
   14003be94:	rex.WR
   14003be95:	push   r12
   14003be97:	rex.RB pop r15
   14003be99:	rex.XB
   14003be9a:	rex.B
   14003be9b:	rex.WRX
   14003be9c:	rex.XB
   14003be9d:	rex.RB
   14003be9e:	rex.WR add BYTE PTR [rbx+0x49],r10b
   14003bea2:	rex.WRB push r13
   14003bea4:	rex.WR
   14003bea5:	push   r12
   14003bea7:	rex.RB pop r15
   14003bea9:	rex.WR
   14003beaa:	rex.WB
   14003beab:	rex.XB
   14003beac:	rex.RB
   14003bead:	rex.WRX push rbx
   14003beaf:	rex.RB pop r15
   14003beb1:	rex.RB pop r8
   14003beb3:	push   rax
   14003beb4:	rex.WB push r10
   14003beb6:	push   r12
   14003beb8:	rex.WB
   14003beb9:	rex.WRXB
   14003beba:	rex.WRX add BYTE PTR [rax],r8b
   14003bebd:	add    BYTE PTR [rax],al
   14003bebf:	add    BYTE PTR [rbx+0x4b],dl
   14003bec2:	rex.WB push r8
   14003bec4:	pop    rdi
   14003bec5:	rex.XB
   14003bec6:	rex.WRXB
   14003bec7:	rex.WR
   14003bec8:	rex.WR
   14003bec9:	rex.RB
   14003beca:	rex.XB push r12
   14003becc:	rex.WB
   14003becd:	rex.WRXB
   14003bece:	rex.WRX add BYTE PTR [rbx+0x4b],r10b
   14003bed2:	rex.WB push r8
   14003bed4:	pop    rdi
   14003bed5:	rex.XB
   14003bed6:	rex.WRXB
   14003bed7:	rex.WRX
   14003bed8:	rex.RX
   14003bed9:	rex.WB
   14003beda:	rex.RXB push r13
   14003bedc:	push   rdx
   14003bedd:	rex.WB
   14003bede:	rex.WRX
   14003bedf:	rex.RXB pop r15
   14003bee1:	push   rsi
   14003bee2:	push   rax
   14003bee3:	rex.WRX add BYTE PTR [rax],r8b
   14003bee6:	add    BYTE PTR [rax],al
   14003bee8:	push   rbx
   14003bee9:	rex.WXB
   14003beea:	rex.WB push r8
   14003beec:	pop    rdi
   14003beed:	push   rbp
   14003beee:	push   rax
   14003beef:	rex.WR
   14003bef0:	rex.WRXB
   14003bef1:	rex.B
   14003bef2:	add    BYTE PTR [rax],r8b
   14003bef5:	add    BYTE PTR [rax],al
   14003bef7:	add    BYTE PTR [rbx+0x4d],dl
   14003befa:	push   rsp
   14003befb:	push   rax
   14003befc:	rex.RX
   14003befd:	rex.WR push rsp
   14003beff:	push   rdx
   14003bf00:	pop    rdi
   14003bf01:	rex.RX
   14003bf02:	rex.WB
   14003bf03:	rex.WR push rsp
   14003bf05:	rex.RB push r10
   14003bf07:	pop    rdi
   14003bf08:	rex.WB
   14003bf09:	rex.WRX
   14003bf0a:	rex.WB push r12
   14003bf0c:	pop    rdi
   14003bf0d:	rex.X push rdx
   14003bf0f:	rex.RB
   14003bf10:	rex.B
   14003bf11:	rex.WXB add BYTE PTR [r8],al
   14003bf14:	add    BYTE PTR [rax],al
   14003bf16:	add    BYTE PTR [rax],al
   14003bf18:	push   rbx
   14003bf19:	rex.WRB push r12
   14003bf1b:	push   rax
   14003bf1c:	rex.RX
   14003bf1d:	rex.WR push rsp
   14003bf1f:	push   rdx
   14003bf20:	pop    rdi
   14003bf21:	rex.RX push rbp
   14003bf23:	rex.WRX
   14003bf24:	rex.XB pop r15
   14003bf26:	rex.RB
   14003bf27:	rex.WRX push rsp
   14003bf29:	push   rdx
   14003bf2a:	rex.WB
   14003bf2b:	rex.RB push r11
   14003bf2d:	add    BYTE PTR [rax],al
   14003bf2f:	add    BYTE PTR [rbx+0x4d],dl
   14003bf32:	push   rsp
   14003bf33:	push   rax
   14003bf34:	rex.RX
   14003bf35:	rex.WR push rsp
   14003bf37:	push   rdx
   14003bf38:	pop    rdi
   14003bf39:	push   rsp
   14003bf3a:	push   rdx
   14003bf3b:	rex.B
   14003bf3c:	rex.XB
   14003bf3d:	rex.RB pop r15
   14003bf3f:	rex.B
   14003bf40:	rex.R
   14003bf41:	rex.WRB
   14003bf42:	rex.WB
   14003bf43:	rex.WRX add BYTE PTR [rax],r8b
   14003bf46:	add    BYTE PTR [rax],al
   14003bf48:	push   rbx
   14003bf49:	rex.WRB push r12
   14003bf4b:	push   rax
   14003bf4c:	rex.RX
   14003bf4d:	rex.WR push rsp
   14003bf4f:	push   rdx
   14003bf50:	pop    rdi
   14003bf51:	push   rsp
   14003bf52:	push   rdx
   14003bf53:	rex.B
   14003bf54:	rex.XB
   14003bf55:	rex.RB pop r15
   14003bf57:	rex.R push rbp
   14003bf59:	rex.WRB push r8
   14003bf5b:	add    BYTE PTR [rax],al
   14003bf5d:	add    BYTE PTR [rax],al
   14003bf5f:	add    BYTE PTR [rbx+0x4d],dl
   14003bf62:	push   rsp
   14003bf63:	push   rax
   14003bf64:	rex.RX
   14003bf65:	rex.WR push rsp
   14003bf67:	push   rdx
   14003bf68:	pop    rdi
   14003bf69:	push   rsp
   14003bf6a:	push   rdx
   14003bf6b:	rex.B
   14003bf6c:	rex.XB
   14003bf6d:	rex.RB pop r15
   14003bf6f:	rex.RB pop r8
   14003bf71:	rex.XB
   14003bf72:	rex.B
   14003bf73:	rex.WR
   14003bf74:	rex.WR add BYTE PTR [rax],r8b
   14003bf77:	add    BYTE PTR [rbx+0x4d],dl
   14003bf7a:	push   rsp
   14003bf7b:	push   rax
   14003bf7c:	rex.RX
   14003bf7d:	rex.WR push rsp
   14003bf7f:	push   rdx
   14003bf80:	pop    rdi
   14003bf81:	push   rsp
   14003bf82:	push   rdx
   14003bf83:	rex.B
   14003bf84:	rex.XB
   14003bf85:	rex.RB pop r15
   14003bf87:	rex.RB pop r8
   14003bf89:	rex.RB
   14003bf8a:	rex.XB push r12
   14003bf8c:	rex.WB
   14003bf8d:	rex.WRB
   14003bf8e:	add    BYTE PTR [r11+0x4d],r10b
   14003bf92:	push   rsp
   14003bf93:	push   rax
   14003bf94:	rex.RX
   14003bf95:	rex.WR push rsp
   14003bf97:	push   rdx
   14003bf98:	pop    rdi
   14003bf99:	push   rsp
   14003bf9a:	push   rdx
   14003bf9b:	rex.B
   14003bf9c:	rex.XB
   14003bf9d:	rex.RB pop r15
   14003bf9f:	rex.WB
   14003bfa0:	rex.WRX
   14003bfa1:	rex.RX
   14003bfa2:	rex.WRXB add BYTE PTR [r8],r8b
   14003bfa5:	add    BYTE PTR [rax],al
   14003bfa7:	add    BYTE PTR [rbx+0x4d],dl
   14003bfaa:	push   rsp
   14003bfab:	push   rax
   14003bfac:	rex.RX
   14003bfad:	rex.WR push rsp
   14003bfaf:	push   rdx
   14003bfb0:	pop    rdi
   14003bfb1:	push   rsp
   14003bfb2:	push   rdx
   14003bfb3:	rex.B
   14003bfb4:	rex.XB
   14003bfb5:	rex.RB pop r15
   14003bfb7:	push   rax
   14003bfb8:	push   r11
   14003bfba:	push   rbx
   14003bfbb:	add    BYTE PTR [rax],al
   14003bfbd:	add    BYTE PTR [rax],al
   14003bfbf:	add    BYTE PTR [rbx+0x4d],dl
   14003bfc2:	push   rsp
   14003bfc3:	push   rax
   14003bfc4:	rex.RX
   14003bfc5:	rex.WR push rsp
   14003bfc7:	push   rdx
   14003bfc8:	pop    rdi
   14003bfc9:	push   rsp
   14003bfca:	push   rdx
   14003bfcb:	rex.B
   14003bfcc:	rex.XB
   14003bfcd:	rex.RB pop r15
   14003bfcf:	push   rax
   14003bfd0:	rex.WRXB
   14003bfd1:	rex.WR
   14003bfd2:	rex.WB
   14003bfd3:	rex.XB pop r9
   14003bfd5:	add    BYTE PTR [rax],al
   14003bfd7:	add    BYTE PTR [rbx+0x4d],dl
   14003bfda:	push   rsp
   14003bfdb:	push   rax
   14003bfdc:	rex.RX
   14003bfdd:	rex.WR push rsp
   14003bfdf:	push   rdx
   14003bfe0:	pop    rdi
   14003bfe1:	push   rsp
   14003bfe2:	push   rdx
   14003bfe3:	rex.B
   14003bfe4:	rex.XB
   14003bfe5:	rex.RB pop r15
   14003bfe7:	push   rdi
   14003bfe8:	push   r10
   14003bfea:	rex.WRX add BYTE PTR [rax],r8b
   14003bfed:	add    BYTE PTR [rax],al
   14003bfef:	add    BYTE PTR [rbx+0x4e],dl
   14003bff2:	rex.WRB push r8
   14003bff4:	pop    rdi
   14003bff5:	rex.WB
   14003bff6:	rex.WRX
   14003bff7:	rex.WB push r12
   14003bff9:	add    BYTE PTR [rax],al
   14003bffb:	add    BYTE PTR [rax],al
   14003bffd:	add    BYTE PTR [rax],al
   14003bfff:	add    BYTE PTR [rbx+0x4e],dl
   14003c002:	rex.WRB push r8
   14003c004:	pop    rdi
   14003c005:	push   rcx
   14003c006:	push   rbp
   14003c007:	rex.RB push r10
   14003c009:	pop    rcx
   14003c00a:	add    BYTE PTR [rax],al
   14003c00c:	add    BYTE PTR [rax],al
   14003c00e:	add    BYTE PTR [rax],al
   14003c010:	push   rbx
   14003c011:	rex.WRXB
   14003c012:	push   r8
   14003c014:	pop    rdi
   14003c015:	rex.R push rbp
   14003c017:	rex.WRB push r8
   14003c019:	pop    rdi
   14003c01a:	rex.R
   14003c01b:	push   r12
   14003c01d:	add    BYTE PTR [r8],al
   14003c020:	push   rbx
   14003c021:	rex.WRXB
   14003c022:	push   r8
   14003c024:	pop    rdi
   14003c025:	rex.RX
   14003c026:	rex.WB
   14003c027:	rex.WR push rsp
   14003c029:	rex.RB push r10
   14003c02b:	pop    rdi
   14003c02c:	rex.WB
   14003c02d:	rex.WRX
   14003c02e:	rex.WB push r12
   14003c030:	pop    rdi
   14003c031:	rex.X push rdx
   14003c033:	rex.RB
   14003c034:	rex.B
   14003c035:	rex.WXB add BYTE PTR [r8],al
   14003c038:	push   rbx
   14003c039:	rex.WRXB
   14003c03a:	push   r8
   14003c03c:	pop    rdi
   14003c03d:	rex.RX push rbp
   14003c03f:	rex.WRX
   14003c040:	rex.XB pop r15
   14003c042:	rex.RB
   14003c043:	rex.WRX push rsp
   14003c045:	push   rdx
   14003c046:	rex.WB
   14003c047:	rex.RB push r11
   14003c049:	add    BYTE PTR [rax],al
   14003c04b:	add    BYTE PTR [rax],al
   14003c04d:	add    BYTE PTR [rax],al
   14003c04f:	add    BYTE PTR [rbx+0x4f],dl
   14003c052:	push   r8
   14003c054:	pop    rdi
   14003c055:	rex.WB
   14003c056:	rex.WRX
   14003c057:	rex.RX
   14003c058:	rex.WRXB add BYTE PTR [r8],r8b
   14003c05b:	add    BYTE PTR [rax],al
   14003c05d:	add    BYTE PTR [rax],al
   14003c05f:	add    BYTE PTR [rbx+0x4f],dl
   14003c062:	push   r8
   14003c064:	pop    rdi
   14003c065:	push   rax
   14003c066:	rex.WRXB
   14003c067:	rex.WR
   14003c068:	rex.WB
   14003c069:	rex.XB pop r9
   14003c06b:	add    BYTE PTR [rax],al
   14003c06d:	add    BYTE PTR [rax],al
   14003c06f:	add    BYTE PTR [rbx+0x4f],dl
   14003c072:	push   r8
   14003c074:	pop    rdi
   14003c075:	push   rdi
   14003c076:	push   r10
   14003c078:	rex.WRX add BYTE PTR [rax],r8b
   14003c07b:	add    BYTE PTR [rax],al
   14003c07d:	add    BYTE PTR [rax],al
   14003c07f:	add    BYTE PTR [rbx+0x4f],dl
   14003c082:	rex.XB
   14003c083:	rex.WXB
   14003c084:	rex.RB push r12
   14003c086:	pop    rdi
   14003c087:	rex.WR
   14003c088:	rex.WB push r11
   14003c08a:	push   rsp
   14003c08b:	rex.WRX
   14003c08c:	rex.RB push r10
   14003c08e:	pop    rdi
   14003c08f:	rex.RB push r10
   14003c091:	push   rdx
   14003c092:	rex.WRXB push r10
   14003c094:	add    BYTE PTR [rax],al
   14003c096:	add    BYTE PTR [rax],al
   14003c098:	push   rbx
   14003c099:	rex.WRXB
   14003c09a:	rex.XB
   14003c09b:	rex.WXB push r11
   14003c09d:	pop    rdi
   14003c09e:	rex.RX
   14003c09f:	rex.WR push rsp
   14003c0a1:	push   rdx
   14003c0a2:	pop    rdi
   14003c0a3:	rex.W
   14003c0a4:	push   r11
   14003c0a6:	rex.W pop rdi
   14003c0a8:	rex.WR
   14003c0a9:	rex.RB
   14003c0aa:	rex.WRX
   14003c0ab:	rex.RXB push r12
   14003c0ad:	rex.W add BYTE PTR [rax],al
   14003c0b0:	push   rbx
   14003c0b1:	rex.WRXB
   14003c0b2:	rex.XB
   14003c0b3:	rex.WXB push r11
   14003c0b5:	pop    rdi
   14003c0b6:	rex.RX
   14003c0b7:	rex.WR push rsp
   14003c0b9:	push   rdx
   14003c0ba:	pop    rdi
   14003c0bb:	rex.W
   14003c0bc:	push   r11
   14003c0be:	rex.W pop rdi
   14003c0c0:	rex.WR
   14003c0c1:	rex.WRXB
   14003c0c2:	rex.XB
   14003c0c3:	rex.WXB push r11
   14003c0c5:	add    BYTE PTR [rax],al
   14003c0c7:	add    BYTE PTR [rbx+0x50],dl
   14003c0ca:	pop    rcx
   14003c0cb:	rex.WRX
   14003c0cc:	rex.RB push r12
   14003c0ce:	pop    rdi
   14003c0cf:	rex.WRB
   14003c0d0:	pop    r8
   14003c0d2:	pop    rdi
   14003c0d3:	push   rdx
   14003c0d4:	rex.RB push r8
   14003c0d6:	rex.WRXB push r10
   14003c0d8:	push   rsp
   14003c0d9:	push   rbx
   14003c0da:	pop    rdi
   14003c0db:	push   rax
   14003c0dc:	rex.RB push r10
   14003c0de:	rex.WB
   14003c0df:	rex.WRXB
   14003c0e0:	rex.R pop rdi
   14003c0e2:	push   rbx
   14003c0e3:	rex.RB
   14003c0e4:	rex.XB
   14003c0e5:	rex.WRXB
   14003c0e6:	rex.WRX
   14003c0e7:	rex.R push rbx
   14003c0e9:	add    BYTE PTR [rax],al
   14003c0eb:	add    BYTE PTR [rax],al
   14003c0ed:	add    BYTE PTR [rax],al
   14003c0ef:	add    BYTE PTR [rbx+0x50],dl
   14003c0f2:	pop    rcx
   14003c0f3:	rex.WRX
   14003c0f4:	rex.RB push r12
   14003c0f6:	pop    rdi
   14003c0f7:	rex.WRB
   14003c0f8:	pop    r8
   14003c0fa:	pop    rdi
   14003c0fb:	push   rdx
   14003c0fc:	rex.RB push r8
   14003c0fe:	rex.WRXB push r10
   14003c100:	push   rsp
   14003c101:	push   rbx
   14003c102:	pop    rdi
   14003c103:	push   rax
   14003c104:	rex.RB push r10
   14003c106:	pop    rdi
   14003c107:	push   rax
   14003c108:	rex.RB push r10
   14003c10a:	rex.WB
   14003c10b:	rex.WRXB
   14003c10c:	add    BYTE PTR [rax],r8b
   14003c10f:	add    BYTE PTR [rbx+0x53],dl
   14003c112:	rex.RB pop r15
   14003c114:	rex.XB
   14003c115:	rex.WRXB
   14003c116:	rex.WRX
   14003c117:	rex.WRX
   14003c118:	rex.RB
   14003c119:	rex.XB push r12
   14003c11b:	rex.WB
   14003c11c:	rex.WRXB
   14003c11d:	rex.WRX pop rdi
   14003c11f:	rex.XB
   14003c120:	rex.WRXB
   14003c121:	rex.WRB
   14003c122:	rex.WRB
   14003c123:	rex.B
   14003c124:	rex.WRX
   14003c125:	rex.R pop rdi
   14003c127:	push   rsp
   14003c128:	rex.WB
   14003c129:	rex.WRB
   14003c12a:	rex.RB
   14003c12b:	rex.WRXB push r13
   14003c12d:	push   rsp
   14003c12e:	pop    rdi
   14003c12f:	rex.WB
   14003c130:	rex.WRX pop rdi
   14003c132:	push   rbx
   14003c133:	rex.RB
   14003c134:	rex.XB
   14003c135:	rex.WRXB
   14003c136:	rex.WRX
   14003c137:	rex.R push rbx
   14003c139:	add    BYTE PTR [rax],al
   14003c13b:	add    BYTE PTR [rax],al
   14003c13d:	add    BYTE PTR [rax],al
   14003c13f:	add    BYTE PTR [rbx+0x54],dl
   14003c142:	rex.RB
   14003c143:	rex.B
   14003c144:	rex.WR pop rdi
   14003c146:	push   rax
   14003c147:	rex.WRXB push r10
   14003c149:	push   rsp
   14003c14a:	add    BYTE PTR [rax],al
   14003c14c:	add    BYTE PTR [rax],al
   14003c14e:	add    BYTE PTR [rax],al
   14003c150:	push   rbx
   14003c151:	push   rsp
   14003c152:	rex.RXB pop r15
   14003c154:	rex.B
   14003c155:	rex.R
   14003c156:	rex.B
   14003c157:	rex.WRB pop r15
   14003c159:	push   rax
   14003c15a:	rex.WRXB push r10
   14003c15c:	push   rsp
   14003c15d:	rex.X
   14003c15e:	rex.WB
   14003c15f:	rex.WRX
   14003c160:	rex.R pop rdi
   14003c162:	rex.WRB
   14003c163:	pop    r8
   14003c165:	pop    rdi
   14003c166:	push   rdx
   14003c167:	rex.RB push r12
   14003c169:	push   rdx
   14003c16a:	rex.WB
   14003c16b:	rex.RB push r11
   14003c16d:	add    BYTE PTR [rax],al
   14003c16f:	add    BYTE PTR [rbx+0x54],dl
   14003c172:	rex.RXB pop r15
   14003c174:	rex.B
   14003c175:	rex.R
   14003c176:	rex.B
   14003c177:	rex.WRB pop r15
   14003c179:	push   rax
   14003c17a:	rex.WRXB push r10
   14003c17c:	push   rsp
   14003c17d:	rex.X
   14003c17e:	rex.WB
   14003c17f:	rex.WRX
   14003c180:	rex.R pop rdi
   14003c182:	push   rax
   14003c183:	rex.WRXB
   14003c184:	rex.WR
   14003c185:	rex.WR pop rdi
   14003c187:	rex.WB
   14003c188:	rex.WRX push rsp
   14003c18a:	rex.RB push r10
   14003c18c:	push   rsi
   14003c18d:	rex.B
   14003c18e:	rex.WR add BYTE PTR [rbx+0x54],r10b
   14003c192:	rex.RXB pop r15
   14003c194:	rex.B
   14003c195:	rex.R
   14003c196:	rex.B
   14003c197:	rex.WRB pop r15
   14003c199:	push   rdx
   14003c19a:	rex.RB push r8
   14003c19c:	rex.WR push rbx
   14003c19e:	pop    rcx
   14003c19f:	rex.WRX
   14003c1a0:	rex.XB pop r15
   14003c1a2:	rex.RB pop r8
   14003c1a4:	push   rax
   14003c1a5:	pop    rdi
   14003c1a6:	rex.RX
   14003c1a7:	rex.B
   14003c1a8:	rex.XB push r12
   14003c1aa:	rex.WRXB push r10
   14003c1ac:	add    BYTE PTR [rax],al
   14003c1ae:	add    BYTE PTR [rax],al
   14003c1b0:	push   rbx
   14003c1b1:	push   rsp
   14003c1b2:	rex.RXB pop r15
   14003c1b4:	rex.B
   14003c1b5:	rex.R
   14003c1b6:	rex.B
   14003c1b7:	rex.WRB pop r15
   14003c1b9:	push   rdx
   14003c1ba:	rex.RB push r8
   14003c1bc:	rex.WR push rbx
   14003c1be:	pop    rcx
   14003c1bf:	rex.WRX
   14003c1c0:	rex.XB pop r15
   14003c1c2:	rex.WRB
   14003c1c3:	pop    r8
   14003c1c5:	pop    rdi
   14003c1c6:	push   rdx
   14003c1c7:	rex.RB push r12
   14003c1c9:	push   rdx
   14003c1ca:	rex.WB
   14003c1cb:	rex.RB push r11
   14003c1cd:	add    BYTE PTR [rax],al
   14003c1cf:	add    BYTE PTR [rbx+0x54],dl
   14003c1d2:	rex.RXB pop r15
   14003c1d4:	rex.B
   14003c1d5:	rex.R push rbx
   14003c1d7:	pop    rdi
   14003c1d8:	rex.WRX
   14003c1d9:	rex.WRXB pop r15
   14003c1db:	rex.RB
   14003c1dc:	rex.WRX
   14003c1dd:	rex.XB push r10
   14003c1df:	pop    rcx
   14003c1e0:	push   rax
   14003c1e1:	push   rsp
   14003c1e2:	rex.WB
   14003c1e3:	rex.WRXB
   14003c1e4:	rex.WRX add BYTE PTR [rax],r8b
   14003c1e7:	add    BYTE PTR [rbx+0x54],dl
   14003c1ea:	rex.RXB pop r15
   14003c1ec:	rex.B
   14003c1ed:	rex.R push rbx
   14003c1ef:	pop    rdi
   14003c1f0:	push   rbx
   14003c1f1:	rex.RB
   14003c1f2:	push   r10
   14003c1f4:	rex.XB
   14003c1f5:	rex.W pop rdi
   14003c1f7:	push   rax
   14003c1f8:	rex.B
   14003c1f9:	rex.RXB
   14003c1fa:	rex.RB pop r15
   14003c1fc:	push   rbx
   14003c1fd:	rex.WB pop r10
   14003c1ff:	add    BYTE PTR [r8],r8b
   14003c202:	add    BYTE PTR [rax],al
   14003c204:	add    BYTE PTR [rax],al
   14003c206:	add    BYTE PTR [rax],al
   14003c208:	push   rbx
   14003c209:	push   rsp
   14003c20a:	rex.RXB pop r15
   14003c20c:	rex.B
   14003c20d:	rex.R push rbx
   14003c20f:	pop    rdi
   14003c210:	push   rbp
   14003c211:	push   rbx
   14003c212:	rex.RB pop r15
   14003c214:	push   rbx
   14003c215:	push   rbp
   14003c216:	rex.X push rsp
   14003c218:	push   rdx
   14003c219:	rex.RB
   14003c21a:	rex.RB pop r15
   14003c21c:	rex.XB
   14003c21d:	rex.B
   14003c21e:	rex.XB
   14003c21f:	rex.W
   14003c220:	add    BYTE PTR [r8],r8b
   14003c223:	add    BYTE PTR [rax],al
   14003c225:	add    BYTE PTR [rax],al
   14003c227:	add    BYTE PTR [rbx+0x54],dl
   14003c22a:	rex.RXB pop r15
   14003c22c:	rex.R
   14003c22d:	rex.WB push r11
   14003c22f:	rex.B
   14003c230:	rex.X
   14003c231:	rex.WR
   14003c232:	rex.RB pop r15
   14003c234:	rex.WR
   14003c235:	rex.RB
   14003c236:	rex.B
   14003c237:	rex.WXB pop r15
   14003c239:	push   r11
   14003c23b:	push   rbx
   14003c23c:	rex.RB push r10
   14003c23e:	push   rsp
   14003c23f:	add    BYTE PTR [rbx+0x54],dl
   14003c242:	rex.RXB pop r15
   14003c244:	push   rbx
   14003c245:	push   rsp
   14003c246:	push   r10
   14003c248:	push   rsp
   14003c249:	push   rbp
   14003c24a:	push   rax
   14003c24b:	pop    rdi
   14003c24c:	rex.X push rdx
   14003c24e:	rex.RB
   14003c24f:	rex.B
   14003c250:	rex.WXB push r8
   14003c252:	rex.WRXB
   14003c253:	rex.WB
   14003c254:	rex.WRX push rsp
   14003c256:	add    BYTE PTR [rax],al
   14003c258:	push   rbx
   14003c259:	push   rsp
   14003c25a:	rex.RXB pop r15
   14003c25c:	push   rbx
   14003c25d:	push   rsp
   14003c25e:	push   r10
   14003c260:	push   rsp
   14003c261:	push   rbp
   14003c262:	push   rax
   14003c263:	pop    rdi
   14003c264:	rex.W
   14003c265:	rex.WB
   14003c266:	rex.WRX push rsp
	...
   14003c270:	push   rbx
   14003c271:	push   rsp
   14003c272:	rex.RXB pop r15
   14003c274:	push   rbx
   14003c275:	push   rsp
   14003c276:	rex.WRXB push r8
   14003c278:	pop    rdi
   14003c279:	rex.W
   14003c27a:	rex.WB
   14003c27b:	rex.WRX push rsp
   14003c27d:	add    BYTE PTR [rax],al
   14003c27f:	add    BYTE PTR [rbx+0x54],dl
   14003c282:	rex.RXB pop r15
   14003c284:	push   rsp
   14003c285:	push   rdx
   14003c286:	rex.B
   14003c287:	rex.XB
   14003c288:	add    BYTE PTR [r8],r8b
   14003c28b:	add    BYTE PTR [rax],al
   14003c28d:	add    BYTE PTR [rax],al
   14003c28f:	add    BYTE PTR [rbx+0x54],dl
   14003c292:	rex.RXB pop r15
   14003c294:	push   rdi
   14003c295:	push   rdx
   14003c296:	rex.WRX add BYTE PTR [rbx+0x54],r10b
   14003c29a:	push   rdx
   14003c29b:	rex.WRB pop r15
   14003c29d:	rex.XB
   14003c29e:	rex.W
   14003c29f:	rex.B
   14003c2a0:	rex.WRX
   14003c2a1:	rex.RXB
   14003c2a2:	rex.RB
   14003c2a3:	rex.R pop rdi
   14003c2a5:	push   rax
   14003c2a6:	rex.B
   14003c2a7:	rex.XB
   14003c2a8:	rex.WXB
   14003c2a9:	rex.RB push r12
   14003c2ab:	add    BYTE PTR [rax],al
   14003c2ad:	add    BYTE PTR [rax],al
   14003c2af:	add    BYTE PTR [rbx+0x54],dl
   14003c2b2:	push   rdx
   14003c2b3:	rex.WRB pop r15
   14003c2b5:	rex.R
   14003c2b6:	rex.WB push r11
   14003c2b8:	rex.B
   14003c2b9:	rex.X
   14003c2ba:	rex.WR
   14003c2bb:	rex.RB pop r15
   14003c2bd:	push   rbx
   14003c2be:	rex.R push rax
   14003c2c0:	pop    rdi
   14003c2c1:	rex.B
   14003c2c2:	rex.R
   14003c2c3:	rex.R push rdx
   14003c2c5:	pop    rdi
   14003c2c6:	push   rdx
   14003c2c7:	rex.RB push r8
   14003c2c9:	rex.WR
   14003c2ca:	rex.B
   14003c2cb:	rex.XB
   14003c2cc:	add    BYTE PTR [r8],r8b
   14003c2cf:	add    BYTE PTR [rbx+0x54],dl
   14003c2d2:	push   rdx
   14003c2d3:	rex.WRB pop r15
   14003c2d5:	rex.R
   14003c2d6:	rex.WB push r11
   14003c2d8:	rex.XB
   14003c2d9:	push   r10
   14003c2db:	rex.R pop rdi
   14003c2dd:	push   rax
   14003c2de:	rex.RB push r10
   14003c2e0:	rex.WRB
   14003c2e1:	rex.WB push r11
   14003c2e3:	push   rbx
   14003c2e4:	rex.WB
   14003c2e5:	rex.WRXB
   14003c2e6:	rex.WRX add BYTE PTR [rbx+0x54],r10b
   14003c2ea:	push   rdx
   14003c2eb:	rex.WRB pop r15
   14003c2ed:	rex.R push rbp
   14003c2ef:	rex.WRB push r8
   14003c2f1:	pop    rdi
   14003c2f2:	push   rdx
   14003c2f3:	push   rsp
   14003c2f4:	push   rbx
   14003c2f5:	push   rax
   14003c2f6:	add    BYTE PTR [rax],al
   14003c2f8:	push   rbx
   14003c2f9:	push   rsp
   14003c2fa:	push   rdx
   14003c2fb:	rex.WRB pop r15
   14003c2fd:	rex.WB
   14003c2fe:	rex.WRX
   14003c2ff:	rex.WB push r12
   14003c301:	add    BYTE PTR [rax],al
   14003c303:	add    BYTE PTR [rax],al
   14003c305:	add    BYTE PTR [rax],al
   14003c307:	add    BYTE PTR [rbx+0x54],dl
   14003c30a:	push   rdx
   14003c30b:	rex.WRB pop r15
   14003c30d:	rex.WRX
   14003c30e:	rex.RB push r15
   14003c310:	pop    rdi
   14003c311:	push   rax
   14003c312:	rex.RB push r10
   14003c314:	rex.WRB
   14003c315:	rex.WB push r11
   14003c317:	push   rbx
   14003c318:	rex.WB
   14003c319:	rex.WRXB
   14003c31a:	rex.WRX add BYTE PTR [rax],r8b
   14003c31d:	add    BYTE PTR [rax],al
   14003c31f:	add    BYTE PTR [rbx+0x54],dl
   14003c322:	push   rdx
   14003c323:	rex.WRB pop r15
   14003c325:	push   rbx
   14003c326:	rex.W push rbp
   14003c328:	push   rsp
   14003c329:	rex.R
   14003c32a:	rex.WRXB push r15
   14003c32c:	rex.WRX add BYTE PTR [rax],r8b
   14003c32f:	add    BYTE PTR [rbp+rax*2+0x53],dl
   14003c333:	push   rsp
   14003c334:	pop    rdi
   14003c335:	rex.WRB
   14003c336:	rex.WRXB
   14003c337:	rex.R
   14003c338:	add    BYTE PTR [r8],r8b
   14003c33b:	add    BYTE PTR [rax],al
   14003c33d:	add    BYTE PTR [rax],al
   14003c33f:	add    BYTE PTR [rbp+rax*2+0x53],dl
   14003c343:	push   rsp
   14003c344:	pop    rdi
   14003c345:	push   rbx
   14003c346:	push   rsp
   14003c347:	rex.RB push r8
   14003c349:	add    BYTE PTR [rax],al
   14003c34b:	add    BYTE PTR [rax],al
   14003c34d:	add    BYTE PTR [rax],al
   14003c34f:	add    BYTE PTR [rax+rcx*2+0x52],dl
   14003c353:	rex.RB
   14003c354:	rex.B
   14003c355:	rex.R pop rdi
   14003c357:	rex.RX push rdx
   14003c359:	rex.WRXB
   14003c35a:	rex.WRB pop r15
   14003c35c:	rex.R
   14003c35d:	rex.WR
   14003c35e:	rex.WR pop rdi
   14003c360:	rex.RB pop r8
   14003c362:	rex.WB push r12
   14003c364:	pop    rdi
   14003c365:	push   rsp
   14003c366:	rex.W push rdx
   14003c368:	rex.RB
   14003c369:	rex.B
   14003c36a:	rex.R pop rdi
   14003c36c:	push   rsp
   14003c36d:	rex.WB
   14003c36e:	rex.WRB
   14003c36f:	rex.RB
   14003c370:	rex.WRXB push r13
   14003c372:	push   rsp
   14003c373:	add    BYTE PTR [rax],al
   14003c375:	add    BYTE PTR [rax],al
   14003c377:	add    BYTE PTR [rbp+rcx*2+0x52],dl
   14003c37b:	pop    rdi
   14003c37c:	push   rbx
   14003c37d:	rex.RB push r14
   14003c37f:	rex.RB push r10
   14003c381:	rex.WB push r12
   14003c383:	pop    rcx
   14003c384:	pop    rdi
   14003c385:	push   rdi
   14003c386:	push   r10
   14003c388:	rex.WRX
   14003c389:	rex.WB
   14003c38a:	rex.WRX
   14003c38b:	rex.RXB add BYTE PTR [r8],r8b
   14003c38e:	add    BYTE PTR [rax],al
   14003c390:	push   rsp
   14003c391:	rex.WRB push r10
   14003c393:	pop    rdi
   14003c394:	push   rbx
   14003c395:	push   rax
   14003c396:	rex.WB
   14003c397:	rex.WRX
   14003c398:	rex.WR
   14003c399:	rex.WRXB
   14003c39a:	rex.XB
   14003c39b:	rex.WXB add BYTE PTR [r8],al
   14003c39e:	add    BYTE PTR [rax],al
   14003c3a0:	push   rsp
   14003c3a1:	rex.WRB push r10
   14003c3a3:	pop    rdi
   14003c3a4:	push   rsp
   14003c3a5:	rex.WB
   14003c3a6:	rex.WRB
   14003c3a7:	rex.RB
   14003c3a8:	rex.WRXB push r13
   14003c3aa:	push   rsp
   14003c3ab:	add    BYTE PTR [rax],al
   14003c3ad:	add    BYTE PTR [rax],al
   14003c3af:	add    BYTE PTR [rax+rdx*2+0x55],dl
   14003c3b3:	pop    rdi
   14003c3b4:	rex.X push rdx
   14003c3b6:	rex.RB
   14003c3b7:	rex.B
   14003c3b8:	rex.WXB pop r15
   14003c3ba:	rex.WRXB
   14003c3bb:	rex.WRX pop rdi
   14003c3bd:	push   r11
   14003c3bf:	push   rbx
   14003c3c0:	rex.RB push r10
   14003c3c2:	push   rsp
   14003c3c3:	push   rbx
   14003c3c4:	add    BYTE PTR [rax],al
   14003c3c6:	add    BYTE PTR [rax],al
   14003c3c8:	push   rsp
   14003c3c9:	push   rax
   14003c3ca:	push   rbp
   14003c3cb:	pop    rdi
   14003c3cc:	rex.XB
   14003c3cd:	push   r12
   14003c3cf:	pop    rdi
   14003c3d0:	rex.B
   14003c3d1:	rex.WR
   14003c3d2:	rex.RB push r10
   14003c3d4:	push   rsp
   14003c3d5:	add    BYTE PTR [rax],al
   14003c3d7:	add    BYTE PTR [rax+rdx*2+0x55],dl
   14003c3db:	pop    rdi
   14003c3dc:	rex.XB
   14003c3dd:	push   r12
   14003c3df:	pop    rdi
   14003c3e0:	rex.X push rdi
   14003c3e2:	rex.XB add BYTE PTR [r8],al
   14003c3e5:	add    BYTE PTR [rax],al
   14003c3e7:	add    BYTE PTR [rax+rdx*2+0x55],dl
   14003c3eb:	pop    rdi
   14003c3ec:	rex.XB
   14003c3ed:	push   r12
   14003c3ef:	pop    rdi
   14003c3f0:	rex.XB
   14003c3f1:	rex.WRXB
   14003c3f2:	rex.WRB add BYTE PTR [r8],r8b
   14003c3f5:	add    BYTE PTR [rax],al
   14003c3f7:	add    BYTE PTR [rax+rdx*2+0x55],dl
   14003c3fb:	pop    rdi
   14003c3fc:	rex.XB
   14003c3fd:	push   r12
   14003c3ff:	pop    rdi
   14003c400:	rex.R push rbx
   14003c402:	add    BYTE PTR [rax],al
   14003c404:	add    BYTE PTR [rax],al
   14003c406:	add    BYTE PTR [rax],al
   14003c408:	push   rsp
   14003c409:	push   rax
   14003c40a:	push   rbp
   14003c40b:	pop    rdi
   14003c40c:	rex.XB
   14003c40d:	push   r12
   14003c40f:	pop    rdi
   14003c410:	rex.R push rbp
   14003c412:	rex.WRB push r8
   14003c414:	add    BYTE PTR [rax],al
   14003c416:	add    BYTE PTR [rax],al
   14003c418:	push   rsp
   14003c419:	push   rax
   14003c41a:	push   rbp
   14003c41b:	pop    rdi
   14003c41c:	rex.XB
   14003c41d:	push   r12
   14003c41f:	pop    rdi
   14003c420:	rex.RB
   14003c421:	rex.WRX
   14003c422:	rex.RXB
   14003c423:	rex.WB
   14003c424:	rex.WRX
   14003c425:	add    BYTE PTR [r8],r8b
   14003c428:	push   rsp
   14003c429:	push   rax
   14003c42a:	push   rbp
   14003c42b:	pop    rdi
   14003c42c:	rex.XB
   14003c42d:	push   r12
   14003c42f:	pop    rdi
   14003c430:	rex.RB
   14003c431:	rex.WRX push rsp
   14003c433:	push   rdx
   14003c434:	pop    rcx
   14003c435:	add    BYTE PTR [rax],al
   14003c437:	add    BYTE PTR [rax+rdx*2+0x55],dl
   14003c43b:	pop    rdi
   14003c43c:	rex.XB
   14003c43d:	push   r12
   14003c43f:	pop    rdi
   14003c440:	rex.RB pop r8
   14003c442:	rex.WB push r12
   14003c444:	add    BYTE PTR [rax],al
   14003c446:	add    BYTE PTR [rax],al
   14003c448:	push   rsp
   14003c449:	push   rax
   14003c44a:	push   rbp
   14003c44b:	pop    rdi
   14003c44c:	rex.XB
   14003c44d:	push   r12
   14003c44f:	pop    rdi
   14003c450:	rex.WB
   14003c451:	rex.WRX
   14003c452:	rex.WB push r12
   14003c454:	add    BYTE PTR [rax],al
   14003c456:	add    BYTE PTR [rax],al
   14003c458:	push   rsp
   14003c459:	push   rax
   14003c45a:	push   rbp
   14003c45b:	pop    rdi
   14003c45c:	rex.XB
   14003c45d:	push   r12
   14003c45f:	pop    rdi
   14003c460:	rex.WRB
   14003c461:	rex.WB push r11
   14003c463:	rex.XB add BYTE PTR [r8],al
   14003c466:	add    BYTE PTR [rax],al
   14003c468:	push   rsp
   14003c469:	push   rax
   14003c46a:	push   rbp
   14003c46b:	pop    rdi
   14003c46c:	rex.XB
   14003c46d:	push   r12
   14003c46f:	pop    rdi
   14003c470:	rex.WRB
   14003c471:	rex.WRB
   14003c472:	rex.XB add BYTE PTR [r8],al
   14003c475:	add    BYTE PTR [rax],al
   14003c477:	add    BYTE PTR [rax+rdx*2+0x55],dl
   14003c47b:	pop    rdi
   14003c47c:	rex.XB
   14003c47d:	push   r12
   14003c47f:	pop    rdi
   14003c480:	push   rdx
   14003c481:	rex.RB push r8
   14003c483:	rex.WRXB push r10
   14003c485:	push   rsp
   14003c486:	rex.WB
   14003c487:	rex.WRX
   14003c488:	rex.RXB add BYTE PTR [r8],r8b
   14003c48b:	add    BYTE PTR [rax],al
   14003c48d:	add    BYTE PTR [rax],al
   14003c48f:	add    BYTE PTR [rax+rdx*2+0x55],dl
   14003c493:	pop    rdi
   14003c494:	rex.XB
   14003c495:	push   r12
   14003c497:	pop    rdi
   14003c498:	push   rbx
   14003c499:	rex.RB
   14003c49a:	rex.XB add BYTE PTR [r8],al
   14003c49d:	add    BYTE PTR [rax],al
   14003c49f:	add    BYTE PTR [rax+rdx*2+0x55],dl
   14003c4a3:	pop    rdi
   14003c4a4:	rex.XB
   14003c4a5:	push   r12
   14003c4a7:	pop    rdi
   14003c4a8:	push   rbx
   14003c4a9:	rex.WRXB
   14003c4aa:	rex.XB
   14003c4ab:	rex.WXB push r11
   14003c4ad:	add    BYTE PTR [rax],al
   14003c4af:	add    BYTE PTR [rax+rdx*2+0x55],dl
   14003c4b3:	pop    rdi
   14003c4b4:	rex.XB
   14003c4b5:	push   r12
   14003c4b7:	pop    rdi
   14003c4b8:	push   rbx
   14003c4b9:	push   rsp
   14003c4ba:	rex.RXB add BYTE PTR [r8],r8b
   14003c4bd:	add    BYTE PTR [rax],al
   14003c4bf:	add    BYTE PTR [rax+rdx*2+0x55],dl
   14003c4c3:	pop    rdi
   14003c4c4:	rex.XB
   14003c4c5:	push   r12
   14003c4c7:	pop    rdi
   14003c4c8:	push   rbx
   14003c4c9:	push   rsp
   14003c4ca:	rex.RXB pop r15
   14003c4cc:	rex.XB
   14003c4cd:	rex.WRXB
   14003c4ce:	rex.WRB add BYTE PTR [r8+rdx*2+0x55],r10b
   14003c4d3:	pop    rdi
   14003c4d4:	rex.XB
   14003c4d5:	push   r12
   14003c4d7:	pop    rdi
   14003c4d8:	push   rbx
   14003c4d9:	push   rsp
   14003c4da:	rex.RXB pop r15
   14003c4dc:	rex.RB pop r8
   14003c4de:	add    BYTE PTR [rax],al
   14003c4e0:	push   rsp
   14003c4e1:	push   rax
   14003c4e2:	push   rbp
   14003c4e3:	pop    rdi
   14003c4e4:	rex.XB
   14003c4e5:	push   r12
   14003c4e7:	pop    rdi
   14003c4e8:	push   rbx
   14003c4e9:	push   rsp
   14003c4ea:	rex.RXB pop r15
   14003c4ec:	rex.WRX push rsp
   14003c4ee:	add    BYTE PTR [rax+r10*2+0x55],r10b
   14003c4f3:	pop    rdi
   14003c4f4:	rex.XB
   14003c4f5:	push   r12
   14003c4f7:	pop    rdi
   14003c4f8:	push   rsp
   14003c4f9:	rex.WB
   14003c4fa:	rex.WRB
   14003c4fb:	add    BYTE PTR [r8],r8b
   14003c4fe:	add    BYTE PTR [rax],al
   14003c500:	push   rsp
   14003c501:	push   rax
   14003c502:	push   rbp
   14003c503:	pop    rdi
   14003c504:	rex.R
   14003c505:	rex.RB
   14003c506:	rex.X push rbp
   14003c508:	rex.RXB pop r15
   14003c50a:	rex.WR
   14003c50b:	rex.RB push r14
   14003c50d:	rex.RB
   14003c50e:	rex.WR add BYTE PTR [rax+rdx*2+0x55],r10b
   14003c513:	pop    rdi
   14003c514:	rex.RB
   14003c515:	rex.WRX
   14003c516:	rex.B
   14003c517:	rex.X
   14003c518:	rex.WR
   14003c519:	rex.RB pop r15
   14003c51b:	rex.R
   14003c51c:	rex.RB
   14003c51d:	rex.X push rbp
   14003c51f:	rex.RXB pop r15
   14003c521:	push   rax
   14003c522:	push   rdx
   14003c523:	rex.WB
   14003c524:	rex.WRX push rsp
   14003c526:	push   rbx
   14003c527:	add    BYTE PTR [rax+rdx*2+0x55],dl
   14003c52b:	pop    rdi
   14003c52c:	rex.WB
   14003c52d:	rex.RXB
   14003c52e:	rex.WRX
   14003c52f:	rex.WRXB push r10
   14003c531:	rex.RB pop r15
   14003c533:	push   r11
   14003c535:	push   rbx
   14003c536:	rex.RB push r10
   14003c538:	push   rsp
   14003c539:	push   rbx
   14003c53a:	add    BYTE PTR [rax],al
   14003c53c:	add    BYTE PTR [rax],al
   14003c53e:	add    BYTE PTR [rax],al
   14003c540:	push   rsp
   14003c541:	push   rax
   14003c542:	push   rbp
   14003c543:	pop    rdi
   14003c544:	push   rax
   14003c545:	push   rdx
   14003c546:	rex.WB
   14003c547:	rex.WRX push rsp
   14003c549:	pop    rdi
   14003c54a:	rex.R
   14003c54b:	rex.RB
   14003c54c:	rex.X push rbp
   14003c54e:	rex.RXB pop r15
   14003c550:	rex.WR
   14003c551:	rex.RB push r14
   14003c553:	rex.RB
   14003c554:	rex.WR add BYTE PTR [rax],r8b
   14003c557:	add    BYTE PTR [rdx+rdx*2+0x41],dl
   14003c55b:	rex.XB
   14003c55c:	rex.RB
   14003c55d:	rex.R push rbp
   14003c55f:	rex.WRB push r8
   14003c561:	pop    rdi
   14003c562:	rex.B
   14003c563:	rex.XB push r12
   14003c565:	rex.WB push r14
   14003c567:	add    BYTE PTR [r8],r8b
   14003c56a:	add    BYTE PTR [rax],al
   14003c56c:	add    BYTE PTR [rax],al
   14003c56e:	add    BYTE PTR [rax],al
   14003c570:	push   rsp
   14003c571:	push   rdx
   14003c572:	push   r14
   14003c574:	rex.RB push r10
   14003c576:	push   rbx
   14003c577:	rex.RB pop r15
   14003c579:	rex.XB
   14003c57a:	rex.WRXB
   14003c57b:	rex.WRX
   14003c57c:	rex.R
   14003c57d:	rex.WB push r12
   14003c57f:	rex.WB
   14003c580:	rex.WRXB
   14003c581:	rex.WRX pop rdi
   14003c583:	rex.WRB
   14003c584:	push   r12
   14003c586:	rex.XB
   14003c587:	rex.W pop rdi
   14003c589:	rex.RB pop r8
   14003c58b:	rex.B
   14003c58c:	rex.XB push r12
   14003c58e:	rex.WR pop rcx
	...
   14003c598:	push   rsp
   14003c599:	push   rdx
   14003c59a:	push   r14
   14003c59c:	rex.RB push r10
   14003c59e:	push   rbx
   14003c59f:	rex.RB pop r15
   14003c5a1:	rex.XB
   14003c5a2:	rex.WRXB
   14003c5a3:	rex.WRX
   14003c5a4:	rex.R
   14003c5a5:	rex.WB push r12
   14003c5a7:	rex.WB
   14003c5a8:	rex.WRXB
   14003c5a9:	rex.WRX pop rdi
   14003c5ab:	rex.WRXB push r8
   14003c5ad:	rex.RB push r10
   14003c5af:	push   r12
   14003c5b1:	rex.WB
   14003c5b2:	rex.WRXB
   14003c5b3:	rex.WRX add BYTE PTR [rax],r8b
   14003c5b6:	add    BYTE PTR [rax],al
   14003c5b8:	push   rbp
   14003c5b9:	push   rax
   14003c5ba:	rex.RXB push r10
   14003c5bc:	rex.B
   14003c5bd:	rex.R
   14003c5be:	rex.RB pop r15
   14003c5c0:	rex.WB
   14003c5c1:	rex.WRB push r8
   14003c5c3:	rex.WRXB push r10
   14003c5c5:	push   rsp
   14003c5c6:	pop    rdi
   14003c5c7:	push   rdi
   14003c5c8:	rex.WB pop r10
   14003c5ca:	push   r10
   14003c5cc:	rex.R pop rdi
   14003c5ce:	rex.RX
   14003c5cf:	rex.WRXB push r10
   14003c5d1:	rex.XB
   14003c5d2:	rex.RB pop r15
   14003c5d4:	rex.WB
   14003c5d5:	rex.WRB push r8
   14003c5d7:	rex.WRXB push r10
   14003c5d9:	push   rsp
   14003c5da:	pop    rdi
   14003c5db:	push   rdx
   14003c5dc:	rex.RB
   14003c5dd:	rex.RXB
   14003c5de:	push   r10
   14003c5e0:	rex.R
   14003c5e1:	rex.WR
   14003c5e2:	rex.RB push r11
   14003c5e4:	push   rbx
   14003c5e5:	pop    rdi
   14003c5e6:	rex.WRXB
   14003c5e7:	rex.RX pop rdi
   14003c5e9:	push   rbx
   14003c5ea:	rex.RB push r12
   14003c5ec:	push   rsp
   14003c5ed:	rex.WB
   14003c5ee:	rex.WRX
   14003c5ef:	rex.RXB push r11
   14003c5f1:	add    BYTE PTR [rax],al
   14003c5f3:	add    BYTE PTR [rax],al
   14003c5f5:	add    BYTE PTR [rax],al
   14003c5f7:	add    BYTE PTR [rbp+0x52],dl
   14003c5fa:	rex.WR pop rdi
   14003c5fc:	rex.XB
   14003c5fd:	push   r12
   14003c5ff:	rex.RB
   14003c600:	rex.RXB
   14003c601:	rex.WRXB push r10
   14003c603:	rex.WB pop r10
   14003c605:	rex.RB push r10
   14003c607:	pop    rdi
   14003c608:	push   rbp
   14003c609:	push   rbx
   14003c60a:	rex.RB pop r15
   14003c60c:	rex.WRB
   14003c60d:	rex.WRXB
   14003c60e:	rex.XB
   14003c60f:	rex.WXB add BYTE PTR [r8],al
   14003c612:	add    BYTE PTR [rax],al
   14003c614:	add    BYTE PTR [rax],al
   14003c616:	add    BYTE PTR [rax],al
   14003c618:	push   rbp
   14003c619:	push   rbx
   14003c61a:	rex.RB pop r15
   14003c61c:	rex.B
   14003c61d:	rex.WR push rsp
   14003c61f:	rex.RB push r10
   14003c621:	rex.WRX
   14003c622:	push   r12
   14003c624:	rex.RB pop r15
   14003c626:	push   rbp
   14003c627:	push   rdx
   14003c628:	rex.WR add BYTE PTR [rax],r8b
   14003c62b:	add    BYTE PTR [rax],al
   14003c62d:	add    BYTE PTR [rax],al
   14003c62f:	add    BYTE PTR [rbp+0x53],dl
   14003c632:	rex.RB pop r15
   14003c634:	rex.R
   14003c635:	rex.RB
   14003c636:	rex.X push rbp
   14003c638:	rex.RXB pop r15
   14003c63a:	push   rbp
   14003c63b:	push   rax
   14003c63c:	rex.R
   14003c63d:	push   r12
   14003c63f:	rex.RB pop r15
   14003c641:	push   rbx
   14003c642:	push   rsp
   14003c643:	push   r12
   14003c645:	push   rbp
   14003c646:	push   rbx
   14003c647:	pop    rdi
   14003c648:	push   rdx
   14003c649:	rex.RB
   14003c64a:	rex.RXB pop r15
   14003c64c:	rex.WXB
   14003c64d:	rex.RB pop r9
   14003c64f:	push   rbx
	...
   14003c658:	push   rbp
   14003c659:	push   rbx
   14003c65a:	rex.RB pop r15
   14003c65c:	push   rbx
   14003c65d:	pop    rcx
   14003c65e:	rex.WRB
   14003c65f:	rex.X
   14003c660:	rex.WRXB
   14003c661:	rex.WR push rbx
   14003c663:	pop    rdi
   14003c664:	rex.RB
   14003c665:	rex.WRX
   14003c666:	rex.RXB
   14003c667:	rex.WB
   14003c668:	rex.WRX
   14003c669:	add    BYTE PTR [r8],r8b
   14003c66c:	add    BYTE PTR [rax],al
   14003c66e:	add    BYTE PTR [rax],al
   14003c670:	push   rbp
   14003c671:	push   rbx
   14003c672:	rex.RB pop r15
   14003c674:	push   rsp
   14003c675:	push   rdx
   14003c676:	rex.B
   14003c677:	rex.WRX push rbx
   14003c679:	rex.RX
   14003c67a:	rex.WRXB push r10
   14003c67c:	rex.WRB
   14003c67d:	push   r12
   14003c67f:	rex.WB
   14003c680:	rex.WRXB
   14003c681:	rex.WRX pop rdi
   14003c683:	rex.RX
   14003c684:	rex.WB
   14003c685:	rex.WR
   14003c686:	add    BYTE PTR [r13+0x54],r10b
   14003c68a:	pop    rdi
   14003c68b:	push   rbx
   14003c68c:	push   rsp
   14003c68d:	rex.WRXB push r8
   14003c68f:	pop    rdi
   14003c690:	rex.WRXB
   14003c691:	rex.WRX pop rdi
   14003c693:	rex.WR
   14003c694:	rex.WRXB
   14003c695:	rex.RXB pop r15
   14003c697:	rex.RB push r10
   14003c699:	push   rdx
   14003c69a:	rex.WRXB push r10
   14003c69c:	add    BYTE PTR [rax],al
   14003c69e:	add    BYTE PTR [rax],al
   14003c6a0:	push   rsi
   14003c6a1:	rex.B
   14003c6a2:	rex.WR
   14003c6a3:	rex.WB
   14003c6a4:	rex.R
   14003c6a5:	push   r12
   14003c6a7:	rex.RB pop r15
   14003c6a9:	rex.XB
   14003c6aa:	pop    r15
   14003c6ac:	rex.XB
   14003c6ad:	rex.RB push r10
   14003c6af:	push   rsp
   14003c6b0:	rex.WB
   14003c6b1:	rex.RX
   14003c6b2:	rex.WB
   14003c6b3:	rex.XB
   14003c6b4:	push   r12
   14003c6b6:	rex.RB pop r15
   14003c6b8:	rex.RX push rdx
   14003c6ba:	rex.WRXB
   14003c6bb:	rex.WRB pop r15
   14003c6bd:	rex.WRB
   14003c6be:	rex.B
   14003c6bf:	rex.WB
   14003c6c0:	rex.WRX pop rdi
   14003c6c2:	push   rsp
   14003c6c3:	rex.W push rdx
   14003c6c5:	rex.RB
   14003c6c6:	rex.B
   14003c6c7:	rex.R pop rdi
   14003c6c9:	rex.WRXB
   14003c6ca:	rex.WRX
   14003c6cb:	rex.WR pop rcx
   14003c6cd:	add    BYTE PTR [rax],al
   14003c6cf:	add    BYTE PTR [rsi+0x50],dl
   14003c6d2:	rex.WRX pop rdi
   14003c6d4:	rex.W
   14003c6d5:	rex.RB
   14003c6d6:	rex.WR push rax
   14003c6d8:	rex.RB push r10
   14003c6da:	pop    rdi
   14003c6db:	rex.RB push r10
   14003c6dd:	push   rdx
   14003c6de:	rex.WRXB push r10
	...
   14003c6e8:	push   rsi
   14003c6e9:	push   rax
   14003c6ea:	rex.WRX pop rdi
   14003c6ec:	rex.W
   14003c6ed:	rex.RB
   14003c6ee:	rex.WR push rax
   14003c6f0:	rex.RB push r10
   14003c6f2:	pop    rdi
   14003c6f3:	push   rsp
   14003c6f4:	push   rdx
   14003c6f5:	rex.B
   14003c6f6:	rex.XB
   14003c6f7:	add    BYTE PTR [r8],r8b
   14003c6fa:	add    BYTE PTR [rax],al
   14003c6fc:	add    BYTE PTR [rax],al
   14003c6fe:	add    BYTE PTR [rax],al
   14003c700:	push   rsi
   14003c701:	push   rax
   14003c702:	rex.WRX pop rdi
   14003c704:	rex.WB push r11
   14003c706:	pop    rdi
   14003c707:	rex.WRX
   14003c708:	push   r8
   14003c70a:	pop    rdi
   14003c70b:	rex.XB
   14003c70c:	rex.WR
   14003c70d:	rex.WB
   14003c70e:	rex.RB
   14003c70f:	rex.WRX push rsp
   14003c711:	add    BYTE PTR [rax],al
   14003c713:	add    BYTE PTR [rax],al
   14003c715:	add    BYTE PTR [rax],al
   14003c717:	add    BYTE PTR [rsi+0x50],dl
   14003c71a:	rex.WRX pop rdi
   14003c71c:	rex.WB push r11
   14003c71e:	pop    rdi
   14003c71f:	push   rcx
   14003c720:	push   rbp
   14003c721:	push   r10
   14003c723:	rex.B
   14003c724:	rex.WRX push rsp
   14003c726:	rex.WB
   14003c727:	rex.WRX
   14003c728:	add    BYTE PTR [r8],r8b
   14003c72b:	add    BYTE PTR [rax],al
   14003c72d:	add    BYTE PTR [rax],al
   14003c72f:	add    BYTE PTR [rsi+0x50],dl
   14003c732:	push   rbx
   14003c733:	xor    bl,BYTE PTR [rdi+0x54]
   14003c736:	push   rdx
   14003c737:	rex.B
   14003c738:	rex.XB
   14003c739:	rex.RB pop r15
   14003c73b:	rex.B
   14003c73c:	rex.R
   14003c73d:	rex.WRB
   14003c73e:	rex.WB
   14003c73f:	rex.WRX add BYTE PTR [rax],r8b
   14003c742:	add    BYTE PTR [rax],al
   14003c744:	add    BYTE PTR [rax],al
   14003c746:	add    BYTE PTR [rax],al
   14003c748:	push   rsi
   14003c749:	push   rax
   14003c74a:	push   rbx
   14003c74b:	xor    bl,BYTE PTR [rdi+0x54]
   14003c74e:	push   rdx
   14003c74f:	rex.B
   14003c750:	rex.XB
   14003c751:	rex.RB pop r15
   14003c753:	rex.R push rbp
   14003c755:	rex.WRB push r8
   14003c757:	add    BYTE PTR [rsi+0x50],dl
   14003c75a:	push   rbx
   14003c75b:	xor    bl,BYTE PTR [rdi+0x54]
   14003c75e:	push   rdx
   14003c75f:	rex.B
   14003c760:	rex.XB
   14003c761:	rex.RB pop r15
   14003c763:	rex.RB pop r8
   14003c765:	rex.XB
   14003c766:	rex.B
   14003c767:	rex.WR
   14003c768:	rex.WR add BYTE PTR [rax],r8b
   14003c76b:	add    BYTE PTR [rax],al
   14003c76d:	add    BYTE PTR [rax],al
   14003c76f:	add    BYTE PTR [rsi+0x50],dl
   14003c772:	push   rbx
   14003c773:	xor    bl,BYTE PTR [rdi+0x54]
   14003c776:	push   rdx
   14003c777:	rex.B
   14003c778:	rex.XB
   14003c779:	rex.RB pop r15
   14003c77b:	rex.RB pop r8
   14003c77d:	rex.RB
   14003c77e:	rex.XB push r12
   14003c780:	rex.WB
   14003c781:	rex.WRB
   14003c782:	add    BYTE PTR [r8],r8b
   14003c785:	add    BYTE PTR [rax],al
   14003c787:	add    BYTE PTR [rsi+0x50],dl
   14003c78a:	push   rbx
   14003c78b:	xor    bl,BYTE PTR [rdi+0x54]
   14003c78e:	push   rdx
   14003c78f:	rex.B
   14003c790:	rex.XB
   14003c791:	rex.RB pop r15
   14003c793:	rex.WB
   14003c794:	rex.WRX
   14003c795:	rex.RX
   14003c796:	rex.WRXB add BYTE PTR [r14+0x50],r10b
   14003c79a:	push   rbx
   14003c79b:	xor    bl,BYTE PTR [rdi+0x54]
   14003c79e:	push   rdx
   14003c79f:	rex.B
   14003c7a0:	rex.XB
   14003c7a1:	rex.RB pop r15
   14003c7a3:	push   rax
   14003c7a4:	push   r11
   14003c7a6:	push   rbx
   14003c7a7:	add    BYTE PTR [rsi+0x50],dl
   14003c7aa:	push   rbx
   14003c7ab:	xor    bl,BYTE PTR [rdi+0x54]
   14003c7ae:	push   rdx
   14003c7af:	rex.B
   14003c7b0:	rex.XB
   14003c7b1:	rex.RB pop r15
   14003c7b3:	push   rax
   14003c7b4:	rex.WRXB
   14003c7b5:	rex.WR
   14003c7b6:	rex.WB
   14003c7b7:	rex.XB pop r9
   14003c7b9:	add    BYTE PTR [rax],al
   14003c7bb:	add    BYTE PTR [rax],al
   14003c7bd:	add    BYTE PTR [rax],al
   14003c7bf:	add    BYTE PTR [rsi+0x50],dl
   14003c7c2:	push   rbx
   14003c7c3:	xor    bl,BYTE PTR [rdi+0x54]
   14003c7c6:	push   rdx
   14003c7c7:	rex.B
   14003c7c8:	rex.XB
   14003c7c9:	rex.RB pop r15
   14003c7cb:	push   rdi
   14003c7cc:	push   r10
   14003c7ce:	rex.WRX add BYTE PTR [rdi+0x41],r10b
   14003c7d2:	push   rdi
   14003c7d3:	pop    rdi
   14003c7d4:	rex.RX
   14003c7d5:	rex.WRXB push r10
   14003c7d7:	rex.XB
   14003c7d8:	rex.RB pop r15
   14003c7da:	rex.R
   14003c7db:	rex.WRXB
   14003c7dc:	rex.WRB
   14003c7dd:	rex.B
   14003c7de:	rex.WB
   14003c7df:	rex.WRX add BYTE PTR [rax],r8b
   14003c7e2:	add    BYTE PTR [rax],al
   14003c7e4:	add    BYTE PTR [rax],al
   14003c7e6:	add    BYTE PTR [rax],al
   14003c7e8:	push   rdi
   14003c7e9:	rex.RB
   14003c7ea:	rex.X push rbp
   14003c7ec:	rex.WB pop r15
   14003c7ee:	rex.WB
   14003c7ef:	rex.WRX push rbx
   14003c7f1:	push   rsp
   14003c7f2:	rex.B
   14003c7f3:	rex.WR
   14003c7f4:	rex.WR pop rdi
   14003c7f6:	rex.B
   14003c7f7:	rex.WRX
   14003c7f8:	rex.R pop rdi
   14003c7fa:	push   rbp
   14003c7fb:	push   rbx
   14003c7fc:	add    BYTE PTR [r8],r8b
   14003c7ff:	add    BYTE PTR [rdi+0x45],dl
   14003c802:	rex.X push rbp
   14003c804:	rex.WB pop r15
   14003c806:	rex.WB
   14003c807:	rex.WRX push rsi
   14003c809:	rex.WRXB
   14003c80a:	rex.WXB
   14003c80b:	rex.RB push r10
   14003c80d:	pop    rdi
   14003c80e:	rex.RX
   14003c80f:	rex.WB push r10
   14003c811:	push   rbx
   14003c812:	push   rsp
   14003c813:	pop    rdi
   14003c814:	rex.XB
   14003c815:	rex.B
   14003c816:	rex.WR
   14003c817:	rex.WR add BYTE PTR [rax],r8b
   14003c81a:	add    BYTE PTR [rax],al
   14003c81c:	add    BYTE PTR [rax],al
   14003c81e:	add    BYTE PTR [rax],al
   14003c820:	push   rdi
   14003c821:	rex.RB
   14003c822:	rex.X push rbp
   14003c824:	rex.WB pop r15
   14003c826:	rex.WB
   14003c827:	rex.WRX push rsi
   14003c829:	rex.WRXB
   14003c82a:	rex.WXB
   14003c82b:	rex.RB push r10
   14003c82d:	pop    rdi
   14003c82e:	push   rdx
   14003c82f:	rex.RB
   14003c830:	rex.RXB push r13
   14003c832:	rex.WR
   14003c833:	push   r10
   14003c835:	pop    rdi
   14003c836:	rex.XB
   14003c837:	rex.B
   14003c838:	rex.WR
   14003c839:	rex.WR add BYTE PTR [rax],r8b
   14003c83c:	add    BYTE PTR [rax],al
   14003c83e:	add    BYTE PTR [rax],al
   14003c840:	push   rdi
   14003c841:	rex.RB
   14003c842:	rex.X push rbp
   14003c844:	rex.WB pop r15
   14003c846:	rex.WB
   14003c847:	rex.WRX push rsi
   14003c849:	rex.WRXB
   14003c84a:	rex.WXB
   14003c84b:	rex.RB push r10
   14003c84d:	pop    rdi
   14003c84e:	push   rdi
   14003c84f:	rex.B
   14003c850:	rex.WB push r12
   14003c852:	pop    rdi
   14003c853:	rex.RX
   14003c854:	rex.WRXB push r10
   14003c856:	pop    rdi
   14003c857:	push   rbx
   14003c858:	rex.RB push r10
   14003c85a:	push   rsi
   14003c85b:	rex.WB
   14003c85c:	rex.XB
   14003c85d:	rex.RB push r11
   14003c85f:	add    BYTE PTR [rdi+0x45],dl
   14003c862:	rex.X push rbp
   14003c864:	rex.WB pop r15
   14003c866:	rex.WRB
   14003c867:	pop    r8
   14003c869:	pop    rdi
   14003c86a:	push   rdi
   14003c86b:	rex.B
   14003c86c:	rex.WB push r12
   14003c86e:	push   rbx
   14003c86f:	pop    rdi
   14003c870:	rex.RX
   14003c871:	rex.WRXB push r10
   14003c873:	pop    rdi
   14003c874:	rex.R
   14003c875:	rex.RB push r8
   14003c877:	rex.RB
   14003c878:	rex.WRX
   14003c879:	rex.R pop rdi
   14003c87b:	push   rbx
   14003c87c:	rex.RB push r10
   14003c87e:	push   rsi
   14003c87f:	rex.WB
   14003c880:	rex.XB
   14003c881:	rex.RB push r11
   14003c883:	add    BYTE PTR [rax],al
   14003c885:	add    BYTE PTR [rax],al
   14003c887:	add    BYTE PTR [rdi+0x45],dl
   14003c88a:	rex.X push rbp
   14003c88c:	rex.WB pop r15
   14003c88e:	push   rcx
   14003c88f:	push   rbp
   14003c890:	rex.WRXB push r12
   14003c892:	pop    r15
   14003c894:	push   rsp
   14003c895:	push   rbx
   14003c896:	pop    rdi
   14003c897:	rex.B
   14003c898:	rex.XB push r12
   14003c89a:	rex.WB push r14
   14003c89c:	rex.RB pop r15
   14003c89e:	push   rbx
   14003c89f:	rex.RB push r11
   14003c8a1:	push   rbx
   14003c8a2:	rex.WB
   14003c8a3:	rex.WRXB
   14003c8a4:	rex.WRX add BYTE PTR [rax],r8b
   14003c8a7:	add    BYTE PTR [rdi+0x45],dl
   14003c8aa:	rex.X push rbp
   14003c8ac:	rex.WB pop r15
   14003c8ae:	push   rcx
   14003c8af:	push   rbp
   14003c8b0:	rex.WRXB push r12
   14003c8b2:	pop    r15
   14003c8b4:	push   rsp
   14003c8b5:	push   rbx
   14003c8b6:	pop    rdi
   14003c8b7:	rex.WB
   14003c8b8:	rex.R
   14003c8b9:	rex.WR
   14003c8ba:	rex.RB pop r15
   14003c8bc:	push   rbx
   14003c8bd:	rex.RB push r11
   14003c8bf:	push   rbx
   14003c8c0:	rex.WB
   14003c8c1:	rex.WRXB
   14003c8c2:	rex.WRX add BYTE PTR [rax],r8b
   14003c8c5:	add    BYTE PTR [rax],al
   14003c8c7:	add    BYTE PTR [rdi+0x45],dl
   14003c8ca:	rex.X push rbp
   14003c8cc:	rex.WB pop r15
   14003c8ce:	push   rcx
   14003c8cf:	push   rbp
   14003c8d0:	rex.WRXB push r12
   14003c8d2:	pop    r15
   14003c8d4:	push   rsp
   14003c8d5:	push   rbx
   14003c8d6:	pop    rdi
   14003c8d7:	push   rax
   14003c8d8:	push   rdx
   14003c8d9:	rex.WRXB
   14003c8da:	rex.WRB push r8
   14003c8dc:	push   rsp
   14003c8dd:	pop    rdi
   14003c8de:	rex.WR
   14003c8df:	rex.WRXB
   14003c8e0:	rex.RXB
   14003c8e1:	rex.WRXB
   14003c8e2:	rex.WRX pop rdi
   14003c8e4:	rex.R
   14003c8e5:	rex.WB
   14003c8e6:	rex.B
   14003c8e7:	rex.WR
   14003c8e8:	rex.WRXB
   14003c8e9:	rex.RXB add BYTE PTR [r8],r8b
   14003c8ec:	add    BYTE PTR [rax],al
   14003c8ee:	add    BYTE PTR [rax],al
   14003c8f0:	push   rdi
   14003c8f1:	push   rax
   14003c8f2:	rex.WR
   14003c8f3:	rex.X pop rdi
   14003c8f5:	rex.WB
   14003c8f6:	rex.WRX
   14003c8f7:	rex.RX
   14003c8f8:	rex.WRXB add BYTE PTR [r8],r8b
   14003c8fb:	add    BYTE PTR [rax],al
   14003c8fd:	add    BYTE PTR [rax],al
   14003c8ff:	add    BYTE PTR [rdi+0x50],dl
   14003c902:	rex.WR
   14003c903:	rex.X pop rdi
   14003c905:	rex.WRXB
   14003c906:	rex.WRX
   14003c907:	rex.WR
   14003c908:	rex.WB
   14003c909:	rex.WRX
   14003c90a:	rex.RB pop r15
   14003c90c:	rex.WRXB
   14003c90d:	rex.WRX pop rdi
   14003c90f:	rex.RB push r10
   14003c911:	push   rdx
   14003c912:	rex.WRXB push r10
   14003c914:	pop    rdi
   14003c915:	rex.XB
   14003c916:	rex.WRXB push r13
   14003c918:	rex.WRX push rsp
   14003c91a:	add    BYTE PTR [rax],al
   14003c91c:	add    BYTE PTR [rax],al
   14003c91e:	add    BYTE PTR [rax],al
   14003c920:	push   rdi
   14003c921:	push   rbx
   14003c922:	pop    r15
   14003c924:	rex.X
   14003c925:	rex.RB
   14003c926:	rex.W
   14003c927:	push   r14
   14003c929:	rex.WB
   14003c92a:	rex.WRXB push r10
   14003c92c:	pop    rdi
   14003c92d:	push   r13
   14003c92f:	push   rsp
   14003c930:	rex.WRXB pop r15
   14003c932:	push   rsp
   14003c933:	push   rbp
   14003c934:	rex.WRX
   14003c935:	rex.WB
   14003c936:	rex.WRX
   14003c937:	rex.RXB pop r15
   14003c939:	rex.WRB
   14003c93a:	rex.WRXB
   14003c93b:	rex.R
   14003c93c:	add    BYTE PTR [r8],r8b
   14003c93f:	add    BYTE PTR [rdi+0x53],dl
   14003c942:	push   rax
   14003c943:	pop    rdi
   14003c944:	rex.X push rdx
   14003c946:	rex.RB
   14003c947:	rex.B
   14003c948:	rex.WXB pop r15
   14003c94a:	rex.WRXB
   14003c94b:	rex.WRX pop rdi
   14003c94d:	push   rax
   14003c94e:	push   rdx
   14003c94f:	rex.WRXB
   14003c950:	rex.XB
   14003c951:	rex.RB push r11
   14003c953:	push   rbx
   14003c954:	pop    rdi
   14003c955:	push   r12
   14003c957:	push   rsp
   14003c958:	rex.B
   14003c959:	rex.XB
   14003c95a:	rex.W add BYTE PTR [rax],al
   14003c95d:	add    BYTE PTR [rax],al
   14003c95f:	add    BYTE PTR [rdi+0x53],dl
   14003c962:	push   rax
   14003c963:	pop    rdi
   14003c964:	rex.X push rdx
   14003c966:	rex.RB
   14003c967:	rex.B
   14003c968:	rex.WXB pop r15
   14003c96a:	rex.WRXB
   14003c96b:	rex.WRX pop rdi
   14003c96d:	push   rax
   14003c96e:	push   rdx
   14003c96f:	rex.WRXB
   14003c970:	rex.XB
   14003c971:	rex.RB push r11
   14003c973:	push   rbx
   14003c974:	pop    rdi
   14003c975:	rex.R
   14003c976:	rex.RB push r12
   14003c978:	rex.B
   14003c979:	rex.XB
   14003c97a:	rex.W add BYTE PTR [rax],al
   14003c97d:	add    BYTE PTR [rax],al
   14003c97f:	add    BYTE PTR [rdi+0x53],dl
   14003c982:	push   rax
   14003c983:	pop    rdi
   14003c984:	rex.XB
   14003c985:	rex.W
   14003c986:	rex.RB
   14003c987:	rex.XB
   14003c988:	rex.WXB pop r15
   14003c98a:	push   rax
   14003c98b:	rex.RB
   14003c98c:	rex.RB push r10
   14003c98e:	rex.WRX
   14003c98f:	rex.B
   14003c990:	rex.WRB
   14003c991:	add    BYTE PTR [r8],r8b
   14003c994:	add    BYTE PTR [rax],al
   14003c996:	add    BYTE PTR [rax],al
   14003c998:	push   rdi
   14003c999:	push   rbx
   14003c99a:	push   rax
   14003c99b:	pop    rdi
   14003c99c:	rex.XB
   14003c99d:	rex.WR
   14003c99e:	rex.RB
   14003c99f:	rex.B
   14003c9a0:	rex.WRX push rbp
   14003c9a2:	push   rax
   14003c9a3:	pop    rdi
   14003c9a4:	push   rsp
   14003c9a5:	rex.WB
   14003c9a6:	rex.WRB
   14003c9a7:	rex.RB
   14003c9a8:	rex.WRXB push r13
   14003c9aa:	push   rsp
   14003c9ab:	add    BYTE PTR [rax],al
   14003c9ad:	add    BYTE PTR [rax],al
   14003c9af:	add    BYTE PTR [rdi+0x53],dl
   14003c9b2:	push   rax
   14003c9b3:	pop    rdi
   14003c9b4:	rex.XB
   14003c9b5:	rex.WRXB
   14003c9b6:	rex.WRX push rsp
   14003c9b8:	push   rdx
   14003c9b9:	rex.WRXB
   14003c9ba:	rex.WR pop rdi
   14003c9bc:	push   rsp
   14003c9bd:	rex.W push rdx
   14003c9bf:	rex.RB
   14003c9c0:	rex.B
   14003c9c1:	rex.R pop rdi
   14003c9c3:	push   rsp
   14003c9c4:	rex.WB
   14003c9c5:	rex.WRB
   14003c9c6:	rex.RB
   14003c9c7:	rex.WRXB push r13
   14003c9c9:	push   rsp
   14003c9ca:	add    BYTE PTR [rax],al
   14003c9cc:	add    BYTE PTR [rax],al
   14003c9ce:	add    BYTE PTR [rax],al
   14003c9d0:	push   rdi
   14003c9d1:	push   rbx
   14003c9d2:	push   rax
   14003c9d3:	pop    rdi
   14003c9d4:	rex.XB push r12
   14003c9d6:	push   rdx
   14003c9d7:	rex.WR
   14003c9d8:	rex.XB
   14003c9d9:	rex.W
   14003c9da:	rex.B
   14003c9db:	rex.WRX add BYTE PTR [rax],r8b
   14003c9de:	add    BYTE PTR [rax],al
   14003c9e0:	push   rdi
   14003c9e1:	push   rbx
   14003c9e2:	push   rax
   14003c9e3:	pop    rdi
   14003c9e4:	rex.R
   14003c9e5:	rex.WR
   14003c9e6:	rex.WR
   14003c9e7:	rex.WRB
   14003c9e8:	rex.B
   14003c9e9:	rex.WB
   14003c9ea:	rex.WRX add BYTE PTR [rax],r8b
   14003c9ed:	add    BYTE PTR [rax],al
   14003c9ef:	add    BYTE PTR [rdi+0x53],dl
   14003c9f2:	push   rax
   14003c9f3:	pop    rdi
   14003c9f4:	rex.RB
   14003c9f5:	rex.WRX push rsp
   14003c9f7:	push   rdx
   14003c9f8:	rex.WB
   14003c9f9:	rex.RB push r11
   14003c9fb:	add    BYTE PTR [rax],al
   14003c9fd:	add    BYTE PTR [rax],al
   14003c9ff:	add    BYTE PTR [rdi+0x53],dl
   14003ca02:	push   rax
   14003ca03:	pop    rdi
   14003ca04:	rex.RXB
   14003ca05:	rex.WR
   14003ca06:	rex.WRXB
   14003ca07:	rex.X
   14003ca08:	rex.B
   14003ca09:	rex.WR push rbx
   14003ca0b:	add    BYTE PTR [rax],al
   14003ca0d:	add    BYTE PTR [rax],al
   14003ca0f:	add    BYTE PTR [rdi+0x53],dl
   14003ca12:	push   rax
   14003ca13:	pop    rdi
   14003ca14:	rex.WRX push rbx
   14003ca16:	push   rax
   14003ca17:	push   r8
   14003ca19:	rex.WB add BYTE PTR [r8],al
   14003ca1c:	add    BYTE PTR [rax],al
   14003ca1e:	add    BYTE PTR [rax],al
   14003ca20:	push   rdi
   14003ca21:	push   rbx
   14003ca22:	push   rax
   14003ca23:	pop    rdi
   14003ca24:	push   rbx
   14003ca25:	rex.RB
   14003ca26:	rex.XB push r13
   14003ca28:	push   rdx
   14003ca29:	rex.WB push r12
   14003ca2b:	pop    rcx
   14003ca2c:	add    BYTE PTR [rax],al
   14003ca2e:	add    BYTE PTR [rax],al
   14003ca30:	push   rdi
   14003ca31:	push   rbx
   14003ca32:	push   rax
   14003ca33:	pop    rdi
   14003ca34:	push   rbx
   14003ca35:	rex.WRXB
   14003ca36:	rex.XB
   14003ca37:	rex.WXB
   14003ca38:	rex.WB
   14003ca39:	rex.WRX
   14003ca3a:	rex.RX
   14003ca3b:	rex.WRXB add BYTE PTR [r8],r8b
   14003ca3e:	add    BYTE PTR [rax],al
   14003ca40:	push   rdi
   14003ca41:	push   rbx
   14003ca42:	push   rax
   14003ca43:	pop    rdi
   14003ca44:	push   rsp
   14003ca45:	push   rdx
   14003ca46:	pop    r9
   14003ca48:	pop    rdi
   14003ca49:	rex.WRX
   14003ca4a:	rex.WRXB push r12
   14003ca4c:	rex.WB
   14003ca4d:	rex.RX
   14003ca4e:	rex.WB
   14003ca4f:	rex.XB
   14003ca50:	push   r12
   14003ca52:	rex.WB
   14003ca53:	rex.WRXB
   14003ca54:	rex.WRX pop rdi
   14003ca56:	push   rsp
   14003ca57:	rex.WB
   14003ca58:	rex.WRB
   14003ca59:	rex.RB
   14003ca5a:	rex.WRXB push r13
   14003ca5c:	push   rsp
   14003ca5d:	add    BYTE PTR [rax],al
   14003ca5f:	add    BYTE PTR [rdi+0x53],dl
   14003ca62:	push   rax
   14003ca63:	pop    rdi
   14003ca64:	push   rdi
   14003ca65:	push   rbx
   14003ca66:	push   rax
   14003ca67:	push   r8
   14003ca69:	rex.WB add BYTE PTR [r8],al
   14003ca6c:	add    BYTE PTR [rax],al
   14003ca6e:	add    BYTE PTR [rax],al
   14003ca70:	pop    rax
   14003ca71:	push   rsp
   14003ca72:	push   rdx
   14003ca73:	push   r14
   14003ca75:	rex.RB push r10
   14003ca77:	push   rbx
   14003ca78:	rex.RB pop r15
   14003ca7a:	rex.XB
   14003ca7b:	rex.WRXB
   14003ca7c:	rex.WRX
   14003ca7d:	rex.R
   14003ca7e:	rex.WB push r12
   14003ca80:	rex.WB
   14003ca81:	rex.WRXB
   14003ca82:	rex.WRX pop rdi
   14003ca84:	rex.XB
   14003ca85:	rex.WR
   14003ca86:	push   r11
   14003ca88:	push   rbx
   14003ca89:	rex.WRX
   14003ca8a:	rex.B
   14003ca8b:	rex.WRB
   14003ca8c:	add    BYTE PTR [r8],r8b
   14003ca8f:	add    BYTE PTR [rax+0x54],bl
   14003ca92:	push   rdx
   14003ca93:	push   r14
   14003ca95:	rex.RB push r10
   14003ca97:	push   rbx
   14003ca98:	rex.RB pop r15
   14003ca9a:	rex.XB
   14003ca9b:	rex.WRXB
   14003ca9c:	rex.WRX
   14003ca9d:	rex.R
   14003ca9e:	rex.WB push r12
   14003caa0:	rex.WB
   14003caa1:	rex.WRXB
   14003caa2:	rex.WRX pop rdi
   14003caa4:	rex.WXB
   14003caa5:	rex.RB pop r9
   14003caa7:	add    BYTE PTR [rax+0x54],bl
   14003caaa:	push   rdx
   14003caab:	push   r14
   14003caad:	rex.RB push r10
   14003caaf:	push   rbx
   14003cab0:	rex.RB pop r15
   14003cab2:	rex.XB
   14003cab3:	rex.WRXB
   14003cab4:	rex.WRX
   14003cab5:	rex.R
   14003cab6:	rex.WB push r12
   14003cab8:	rex.WB
   14003cab9:	rex.WRXB
   14003caba:	rex.WRX pop rdi
   14003cabc:	push   rbx
   14003cabd:	push   rsp
   14003cabe:	rex.WRXB push r10
   14003cac0:	rex.B
   14003cac1:	rex.RXB
   14003cac2:	rex.RB
   14003cac3:	rex.WRX
   14003cac4:	rex.B
   14003cac5:	rex.WRB
   14003cac6:	add    BYTE PTR [r11+0x49],r10b
   14003caca:	push   rax
   14003cacb:	add    BYTE PTR [rbx+0x4f],al
   14003cace:	rex.WRB add BYTE PTR [r15+0x65],r10b
   14003cad2:	(bad)  
   14003cad3:	and    BYTE PTR [rsi+0x69],al
   14003cad6:	ins    BYTE PTR es:[rdi],dx
   14003cad7:	je     0x14003cb3e
   14003cad9:	jb     0x14003cb4e
   14003cadb:	add    BYTE PTR [rbp+0x49],dl
   14003cade:	add    BYTE PTR [rax],al
   14003cae0:	push   rdx
   14003cae1:	push   r12
   14003cae3:	and    BYTE PTR [rcx+0x6c],al
   14003cae6:	ins    BYTE PTR es:[rdi],dx
   14003cae7:	outs   dx,DWORD PTR ds:[rsi]
   14003cae8:	movsxd edx,DWORD PTR [rbx+0x70]
   14003caeb:	jns    0x14003caed
   14003caed:	add    BYTE PTR [rax],al
   14003caef:	add    BYTE PTR [rdx+0x41],dl
   14003caf2:	push   rsp
   14003caf3:	and    BYTE PTR [rcx+0x53],al
   14003caf6:	push   rbx
   14003caf7:	rex.RB push r10
   14003caf9:	push   rsp
   14003cafa:	and    BYTE PTR [rdi+0x4e],cl
   14003cafd:	and    BYTE PTR [rbp+0x56],al
   14003cb00:	rex.RB
   14003cb01:	rex.WRX push rsp
   14003cb03:	add    BYTE PTR [rbx+0x45],dl
   14003cb06:	push   rsp
   14003cb07:	push   rbp
   14003cb08:	push   rax
   14003cb09:	add    BYTE PTR [rax],al
   14003cb0b:	add    BYTE PTR [rbx+0x6f],al
   14003cb0e:	ins    DWORD PTR es:[rdi],dx
   14003cb0f:	ins    DWORD PTR es:[rdi],dx
   14003cb10:	outs   dx,DWORD PTR ds:[rsi]
   14003cb11:	outs   dx,BYTE PTR ds:[rsi]
   14003cb12:	add    BYTE PTR [rax],al
   14003cb14:	push   r12
   14003cb16:	rex.WR add BYTE PTR [rsp+rax*2+0x41],r9b
   14003cb1b:	push   rax
   14003cb1c:	pop    rdi
   14003cb1d:	imul   bp,WORD PTR [rsp+rsi*2+0x65],0x72
   14003cb24:	add    BYTE PTR [rax],al
   14003cb26:	add    BYTE PTR [rax],al
   14003cb28:	push   rdx
   14003cb29:	push   r12
   14003cb2b:	and    BYTE PTR [rbp+riz*2+0x62],al
   14003cb2f:	jne    0x14003cb98
   14003cb31:	and    BYTE PTR [rbx+0x65],dl
   14003cb34:	je     0x14003cbaa
   14003cb36:	imul   ebp,DWORD PTR [rsi+0x67],0x46000073
   14003cb3d:	ja     0x14003cba2
   14003cb3f:	push   rdi
   14003cb40:	jae    0x14003cbb2
   14003cb42:	add    BYTE PTR [rax],al
   14003cb44:	push   rbx
   14003cb45:	push   rcx
   14003cb46:	rex.WRB add BYTE PTR [r15+0x33],r10b
   14003cb4a:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x72
   14003cb53:	add    BYTE PTR [rax],al
   14003cb55:	add    BYTE PTR [rax],al
   14003cb57:	add    BYTE PTR [rbx+0x6f],al
   14003cb5a:	outs   dx,BYTE PTR ds:[rsi]
   14003cb5b:	outs   dx,BYTE PTR ds:[rsi]
   14003cb5c:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14003cb61:	outs   dx,BYTE PTR ds:[rsi]
   14003cb62:	push   rcx
   14003cb63:	jne    0x14003cbd4
   14003cb65:	je     0x14003cbc8
   14003cb67:	add    BYTE PTR [rcx+0x53],cl
   14003cb6a:	rex.B
   14003cb6b:	rex.XB push r12
   14003cb6d:	push   rdx
   14003cb6e:	rex.WR add BYTE PTR [rsi+0x53],r10b
   14003cb72:	push   rbx
   14003cb73:	add    BYTE PTR [rax],al
   14003cb75:	add    BYTE PTR [rax],al
   14003cb77:	add    BYTE PTR [rsi+rcx*2+0x53],al
   14003cb7b:	and    BYTE PTR [rsi+0x69],ah
   14003cb7e:	ins    BYTE PTR es:[rdi],dx
   14003cb7f:	je     0x14003cbe6
   14003cb81:	jb     0x14003cb83
   14003cb83:	add    BYTE PTR [rax],al
   14003cb85:	add    BYTE PTR [rax],al
   14003cb87:	add    BYTE PTR [rbp+0x56],al
   14003cb8a:	rex.B
   14003cb8b:	rex.WR push rbp
   14003cb8d:	push   r12
   14003cb8f:	rex.WB
   14003cb90:	rex.WRXB
   14003cb91:	rex.WRX add BYTE PTR [rax],r8b
   14003cb94:	add    BYTE PTR [rax],al
   14003cb96:	add    BYTE PTR [rax],al
   14003cb98:	push   rbp
   14003cb99:	jo     0x14003cc02
   14003cb9b:	jb     0x14003cbfe
   14003cb9d:	fs add BYTE PTR gs:[rsi+0x43],al
   14003cba2:	push   rbx
   14003cba3:	add    BYTE PTR [rax],al
   14003cba5:	add    BYTE PTR [rax],al
   14003cba7:	add    BYTE PTR [rsi+0x4c],al
   14003cbaa:	push   rsp
   14003cbab:	push   rdx
   14003cbac:	push   rbx
   14003cbad:	rex.WRX
   14003cbae:	rex.WXB xor QWORD PTR [r8],rax
   14003cbb1:	add    BYTE PTR [rax],al
   14003cbb3:	add    BYTE PTR [rax],al
   14003cbb5:	add    BYTE PTR [rax],al
   14003cbb7:	add    BYTE PTR [rsi+0x77],al
   14003cbba:	movsxd eax,DWORD PTR [rcx+0x67]
   14003cbbd:	outs   dx,BYTE PTR gs:[rsi]
   14003cbbf:	je     0x14003cbc1
   14003cbc1:	add    BYTE PTR [rax],al
   14003cbc3:	add    BYTE PTR [rax],al
   14003cbc5:	add    BYTE PTR [rax],al
   14003cbc7:	add    BYTE PTR [rsi+0x77],al
   14003cbca:	movsxd ecx,DWORD PTR [rbp+0x67]
   14003cbcd:	ins    DWORD PTR es:[rdi],dx
   14003cbce:	je     0x14003cbd0
   14003cbd0:	rex.RX ja 0x14003cc36
   14003cbd3:	imul   r12,QWORD PTR [rdx+0x0],0x53574600
   14003cbdb:	push   rdx
   14003cbdc:	push   rsi
   14003cbdd:	add    BYTE PTR [rax],al
   14003cbdf:	add    BYTE PTR [rdi+0x53],al
   14003cbe2:	push   rdi
   14003cbe3:	add    BYTE PTR [rax],al
   14003cbe5:	add    BYTE PTR [rax],al
   14003cbe7:	add    BYTE PTR [rax+0x33],cl
   14003cbea:	xor    dh,BYTE PTR [rbx]
   14003cbec:	and    BYTE PTR [rsi+0x69],al
   14003cbef:	ins    BYTE PTR es:[rdi],dx
   14003cbf0:	je     0x14003cc57
   14003cbf2:	jb     0x14003cbf4
   14003cbf4:	add    BYTE PTR [rax],al
   14003cbf6:	add    BYTE PTR [rax],al
   14003cbf8:	push   rdx
   14003cbf9:	push   r12
   14003cbfb:	and    BYTE PTR [rcx+0x6e],cl
   14003cbfe:	je     0x14003cc65
   14003cc00:	jb     0x14003cc4e
   14003cc02:	outs   dx,DWORD PTR ds:[rsi]
   14003cc03:	movsxd ebp,DWORD PTR [rbx+0x73]
   14003cc06:	add    BYTE PTR [rax],al
   14003cc08:	rex.WB push r8
   14003cc0a:	jbe    0x14003cc42
   14003cc0c:	add    BYTE PTR [rax],al
   14003cc0e:	add    BYTE PTR [rax],al
   14003cc10:	rex.WB push r11
   14003cc12:	push   rbx
   14003cc13:	and    BYTE PTR [rsi+0x69],ah
   14003cc16:	ins    BYTE PTR es:[rdi],dx
   14003cc17:	je     0x14003cc7e
   14003cc19:	jb     0x14003cc1b
   14003cc1b:	add    BYTE PTR [rax],al
   14003cc1d:	add    BYTE PTR [rax],al
   14003cc1f:	add    BYTE PTR [rdx+0x45],dl
   14003cc22:	push   rax
   14003cc23:	rex.WRXB push r10
   14003cc25:	push   rsp
   14003cc26:	rex.WB
   14003cc27:	rex.WRX
   14003cc28:	rex.RXB add BYTE PTR [r8],r8b
   14003cc2b:	add    BYTE PTR [rsi+0x41],cl
   14003cc2e:	push   rax
   14003cc2f:	add    BYTE PTR [rsi+0x4e],cl
   14003cc32:	push   rsp
   14003cc33:	push   rax
   14003cc34:	and    BYTE PTR [rsi+0x69],al
   14003cc37:	ins    BYTE PTR es:[rdi],dx
   14003cc38:	je     0x14003cc9f
   14003cc3a:	jb     0x14003cc3c
   14003cc3c:	add    BYTE PTR [rax],al
   14003cc3e:	add    BYTE PTR [rax],al
   14003cc40:	push   rax
   14003cc41:	jb     0x14003cca8
   14003cc43:	data16 gs je 0x14003ccaa
   14003cc47:	push   0x7265
   14003cc4c:	add    BYTE PTR [rax],al
   14003cc4e:	add    BYTE PTR [rax],al
   14003cc50:	push   rax
   14003cc51:	push   rax
   14003cc52:	push   rsp
   14003cc53:	push   rax
   14003cc54:	and    BYTE PTR [rsi+0x69],ah
   14003cc57:	ins    BYTE PTR es:[rdi],dx
   14003cc58:	je     0x14003ccbf
   14003cc5a:	jb     0x14003cc5c
   14003cc5c:	add    BYTE PTR [rax],al
   14003cc5e:	add    BYTE PTR [rax],al
   14003cc60:	push   rax
   14003cc61:	push   rdx
   14003cc62:	rex.WRXB pop r8
   14003cc64:	pop    rcx
   14003cc65:	pop    rdi
   14003cc66:	push   rdx
   14003cc67:	push   rdi
   14003cc68:	push   rbx
   14003cc69:	pop    rdi
   14003cc6a:	rex.WR
   14003cc6b:	rex.WB push r11
   14003cc6d:	push   rsp
   14003cc6e:	rex.RB
   14003cc6f:	rex.WRX
   14003cc70:	rex.RB push r10
   14003cc72:	push   rbx
   14003cc73:	add    BYTE PTR [rax],al
   14003cc75:	add    BYTE PTR [rax],al
   14003cc77:	add    BYTE PTR [rcx+0x75],dl
   14003cc7a:	(bad)  
   14003cc7b:	jb     0x14003ccde
   14003cc7d:	outs   dx,BYTE PTR ds:[rsi]
   14003cc7e:	je     0x14003cce9
   14003cc80:	outs   dx,BYTE PTR ds:[rsi]
   14003cc81:	and    BYTE PTR gs:[rsi+0x69],al
   14003cc85:	ins    BYTE PTR es:[rdi],dx
   14003cc86:	je     0x14003cced
   14003cc88:	jb     0x14003cc8a
   14003cc8a:	add    BYTE PTR [rax],al
   14003cc8c:	add    BYTE PTR [rax],al
   14003cc8e:	add    BYTE PTR [rax],al
   14003cc90:	rex.WRB push r11
   14003cc92:	push   rax
   14003cc93:	rex.W ins BYTE PTR es:[rdi],dx
   14003cc95:	jo     0x14003cd09
   14003cc97:	add    BYTE PTR [rdx+0x41],dl
   14003cc9a:	push   rsp
   14003cc9b:	and    BYTE PTR [rdx+0x65],dl
   14003cc9e:	data16 imul rsi,QWORD PTR [rbx+0x74],0x79726f
   14003cca7:	add    BYTE PTR [rdx+0x50],dl
   14003ccaa:	rex.XB and BYTE PTR [r14+0x69],al
   14003ccae:	ins    BYTE PTR es:[rdi],dx
   14003ccaf:	je     0x14003cd16
   14003ccb1:	jb     0x14003ccb3
   14003ccb3:	add    BYTE PTR [rax],al
   14003ccb5:	add    BYTE PTR [rax],al
   14003ccb7:	add    BYTE PTR [rbp+0x70],dl
   14003ccba:	fs (bad) 
   14003ccbc:	je     0x14003cd23
   14003ccbe:	and    BYTE PTR [rbx+0x65],al
   14003ccc1:	outs   dx,BYTE PTR ds:[rsi]
   14003ccc2:	je     0x14003cd29
   14003ccc4:	jb     0x14003ccc6
   14003ccc6:	add    BYTE PTR [rax],al
   14003ccc8:	push   r8
   14003ccca:	push   rax
   14003cccb:	rex.WR
   14003cccc:	rex.WB
   14003cccd:	rex.B
   14003ccce:	rex.WRX
   14003cccf:	rex.XB
   14003ccd0:	add    BYTE PTR [r8],r8b
   14003ccd3:	add    BYTE PTR [rax],al
   14003ccd5:	add    BYTE PTR [rax],al
   14003ccd7:	add    BYTE PTR [rbx+0x4d],dl
   14003ccda:	push   rsp
   14003ccdb:	push   rax
   14003ccdc:	rex.RX
   14003ccdd:	rex.WR push rsp
   14003ccdf:	push   rdx
   14003cce0:	add    BYTE PTR [rax],al
   14003cce2:	add    BYTE PTR [rax],al
   14003cce4:	rex.WB push r11
   14003cce6:	rex.B
   14003cce7:	rex.WRB
   14003cce8:	rex.WB
   14003cce9:	rex.X add BYTE PTR [rax],al
   14003ccec:	add    BYTE PTR [rax],al
   14003ccee:	add    BYTE PTR [rax],al
   14003ccf0:	push   rbx
   14003ccf1:	rex.WRXB
   14003ccf2:	push   r8
   14003ccf4:	and    BYTE PTR [rsi+0x69],al
   14003ccf7:	ins    BYTE PTR es:[rdi],dx
   14003ccf8:	je     0x14003cd5f
   14003ccfa:	jb     0x14003ccfc
   14003ccfc:	add    BYTE PTR [rax],al
   14003ccfe:	add    BYTE PTR [rax],al
   14003cd00:	push   rbx
   14003cd01:	rex.WRXB
   14003cd02:	rex.XB
   14003cd03:	rex.WXB
   14003cd04:	rex.RB push r12
   14003cd06:	and    BYTE PTR [rcx+rcx*2+0x53],cl
   14003cd0a:	push   rsp
   14003cd0b:	rex.WRX
   14003cd0c:	rex.RB push r10
   14003cd0e:	add    BYTE PTR [rax],al
   14003cd10:	push   rbx
   14003cd11:	rex.WRXB
   14003cd12:	rex.XB
   14003cd13:	rex.WXB push r11
   14003cd15:	rex.RX
   14003cd16:	rex.WR push rsp
   14003cd18:	push   rdx
   14003cd19:	add    BYTE PTR [rax],al
   14003cd1b:	add    BYTE PTR [rax],al
   14003cd1d:	add    BYTE PTR [rax],al
   14003cd1f:	add    BYTE PTR [rbx+0x74],dl
   14003cd22:	outs   dx,DWORD PTR ds:[rsi]
   14003cd23:	jb     0x14003cd86
   14003cd25:	add    BYTE PTR gs:[ecx+0x53],cl
   14003cd2a:	push   r11
   14003cd2c:	push   rsp
   14003cd2d:	rex.RXB add BYTE PTR [r8],r8b
   14003cd30:	push   rbx
   14003cd31:	je     0x14003cda5
   14003cd33:	gs (bad) 
   14003cd35:	ins    DWORD PTR es:[rdi],dx
   14003cd36:	imul   ebp,DWORD PTR [rsi+0x67],0x6c694620
   14003cd3d:	je     0x14003cda4
   14003cd3f:	jb     0x14003cd41
   14003cd41:	add    BYTE PTR [rax],al
   14003cd43:	add    BYTE PTR [rax],al
   14003cd45:	add    BYTE PTR [rax],al
   14003cd47:	add    BYTE PTR [rdx+0x41],dl
   14003cd4a:	push   rsp
   14003cd4b:	and    BYTE PTR [rcx+rbp*2+0x6d],dl
   14003cd4f:	gs jb  0x14003cdc5
   14003cd52:	add    BYTE PTR [rax],al
   14003cd54:	add    BYTE PTR [rax],al
   14003cd56:	add    BYTE PTR [rax],al
   14003cd58:	push   rsp
   14003cd59:	push   rax
   14003cd5a:	push   rbp
   14003cd5b:	and    BYTE PTR [rdi+0x65],al
   14003cd5e:	outs   dx,BYTE PTR ds:[rsi]
   14003cd5f:	gs jb  0x14003cdc3
   14003cd62:	ins    BYTE PTR es:[rdi],dx
   14003cd63:	add    BYTE PTR [rax],al
   14003cd65:	add    BYTE PTR [rax],al
   14003cd67:	add    BYTE PTR [rax+rdx*2+0x55],dl
   14003cd6b:	and    BYTE PTR [rbx+0x61],al
   14003cd6e:	je     0x14003cdd5
   14003cd70:	outs   dx,DWORD PTR ds:[esi]
   14003cd72:	jb     0x14003cddd
   14003cd74:	gs jae 0x14003cd77
   14003cd77:	add    BYTE PTR [rbp+0x4e],dl
   14003cd7a:	rex.WB push r12
   14003cd7c:	push   rsp
   14003cd7d:	rex.RB push r11
   14003cd7f:	push   rsp
	...
   14003cd88:	rex.W push rsp
   14003cd8a:	push   rsp
   14003cd8b:	push   rax
   14003cd8c:	push   rbx
   14003cd8d:	and    BYTE PTR [rcx+0x6e],ch
   14003cd90:	jae    0x14003ce02
   14003cd92:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14003cd97:	outs   dx,BYTE PTR ds:[rsi]
	...
   14003cda0:	push   rsi
   14003cda1:	push   rax
   14003cda2:	rex.WRX and BYTE PTR [rax+0x45],r9b
   14003cda6:	rex.WR push rax
   14003cda8:	rex.RB push r10
   14003cdaa:	add    BYTE PTR [rax],al
   14003cdac:	push   rsi
   14003cdad:	push   rax
   14003cdae:	push   rbx
   14003cdaf:	xor    al,BYTE PTR [rax]
   14003cdb1:	add    BYTE PTR [rax],al
   14003cdb3:	add    BYTE PTR [rdi+0x45],dl
   14003cdb6:	rex.X push rbp
   14003cdb8:	rex.WB add BYTE PTR [r8],al
   14003cdbb:	add    BYTE PTR [rax],al
   14003cdbd:	add    BYTE PTR [rax],al
   14003cdbf:	add    ch,ch
   14003cdc1:	mov    eax,DWORD PTR [rax-0x3d]
   14003cdc4:	mov    es,WORD PTR [rbx-0x29319966]
   14003cdca:	je     0x14003ce3f
   14003cdcc:	mov    ebx,DWORD PTR [rdx+0x3c4ca1]
   14003cdd2:	add    BYTE PTR [r13+0x0],r9b
   14003cdd6:	push   rax
   14003cdd7:	add    BYTE PTR [rax+rax*1+0x59],dl
   14003cddb:	add    BYTE PTR [rsi],bh
   14003cddd:	add    BYTE PTR [rax],al
   14003cddf:	add    BYTE PTR [rbx+0x0],al
   14003cde2:	rex.WRXB add BYTE PTR [r13+0x0],r9b
   14003cde6:	rex.WB add BYTE PTR [r14+0x0],bpl
   14003cdea:	je     0x14003cdec
   14003cdec:	add    BYTE PTR gs:[rdx+0x0],dh
   14003cdf0:	movsxd eax,DWORD PTR [rax]
   14003cdf2:	add    BYTE PTR gs:[rax+0x0],dh
   14003cdf6:	je     0x14003cdf8
   14003cdf8:	imul   eax,DWORD PTR [rax],0x6e006f
   14003cdfe:	push   rax
   14003cdff:	add    BYTE PTR [rdi+0x0],ch
   14003ce02:	imul   eax,DWORD PTR [rax],0x74006e
   14003ce08:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   14003ce0d:	add    BYTE PTR [rax+rax*1+0x0],ch
   14003ce11:	add    BYTE PTR [rax],al
   14003ce13:	add    BYTE PTR [rax],al
   14003ce15:	add    BYTE PTR [rax],al
   14003ce17:	add    BYTE PTR [rdi+0x0],al
   14003ce1a:	(bad)  
   14003ce1b:	add    BYTE PTR [rax+0x0],dh
   14003ce1e:	(bad)  
   14003ce1f:	add    BYTE PTR [rax+rax*1+0x65],dl
   14003ce23:	add    BYTE PTR [rbx+0x0],dh
   14003ce26:	je     0x14003ce28
   14003ce28:	push   rbp
   14003ce29:	add    BYTE PTR [rax+rax*1+0x69],dh
   14003ce2d:	add    BYTE PTR [rax+rax*1+0x73],ch
   14003ce31:	add    BYTE PTR [rsi],ch
   14003ce33:	add    BYTE PTR [rax+rax*1+0x6c],ah
   14003ce37:	add    BYTE PTR [rax+rax*1+0x0],ch
   14003ce3b:	add    BYTE PTR [rax],al
   14003ce3d:	add    BYTE PTR [rax],al
   14003ce3f:	add    dl,dl
   14003ce41:	in     eax,dx
   14003ce42:	mov    edi,0x2a67b7df
   14003ce47:	mov    eax,0x21c2c0c3
   14003ce4c:	(bad)  
   14003ce4d:	mov    bh,0x6e
   14003ce4f:	cli    
   14003ce50:	cli    
   14003ce51:	mov    dh,0x8d
   14003ce53:	ud0    ebp,edi
   14003ce56:	rex.WXB fimul DWORD PTR [r14-0x1108f0e8]
   14003ce5d:	pushf  
   14003ce5e:	rex.RX mov bl,0x4e
   14003ce61:	add    BYTE PTR [rcx+0x0],ch
   14003ce64:	jae    0x14003ce66
   14003ce66:	push   rbx
   14003ce67:	add    BYTE PTR [rdx+0x0],dh
   14003ce6a:	jbe    0x14003ce6c
   14003ce6c:	add    BYTE PTR [rax],al
   14003ce6e:	add    BYTE PTR [rax],al
   14003ce70:	push   rdi
   14003ce71:	add    BYTE PTR [rax+rax*1+0x4e],ah
   14003ce75:	add    BYTE PTR [rcx+0x0],ch
   14003ce78:	jae    0x14003ce7a
   14003ce7a:	push   rbx
   14003ce7b:	add    BYTE PTR [rsi+0x0],dh
   14003ce7e:	movsxd eax,DWORD PTR [rax]
	...
   14003ce90:	push   rbx
   14003ce91:	add    BYTE PTR [rcx+0x0],bl
   14003ce94:	push   rbx
   14003ce95:	add    BYTE PTR [rax+rax*1+0x45],dl
   14003ce99:	add    BYTE PTR [rbp+0x0],cl
   14003ce9c:	pop    rsp
   14003ce9d:	add    BYTE PTR [rbx+0x0],al
   14003cea0:	jne    0x14003cea2
   14003cea2:	jb     0x14003cea4
   14003cea4:	jb     0x14003cea6
   14003cea6:	add    BYTE PTR gs:[rsi+0x0],ch
   14003ceaa:	je     0x14003ceac
   14003ceac:	rex.XB add BYTE PTR [r15+0x0],bpl
   14003ceb0:	outs   dx,BYTE PTR ds:[rsi]
   14003ceb1:	add    BYTE PTR [rax+rax*1+0x72],dh
   14003ceb5:	add    BYTE PTR [rdi+0x0],ch
   14003ceb8:	ins    BYTE PTR es:[rdi],dx
   14003ceb9:	add    BYTE PTR [rbx+0x0],dl
   14003cebc:	add    BYTE PTR gs:[rax+rax*1+0x5c],dh
   14003cec1:	add    BYTE PTR [rbx+0x0],dl
   14003cec4:	add    BYTE PTR gs:[rdx+0x0],dh
   14003cec8:	jbe    0x14003ceca
   14003ceca:	imul   eax,DWORD PTR [rax],0x650063
   14003ced0:	jae    0x14003ced2
   14003ced2:	pop    rsp
   14003ced3:	add    BYTE PTR [rsi+0x0],cl
   14003ced6:	imul   eax,DWORD PTR [rax],0x530073
   14003cedc:	jb     0x14003cede
   14003cede:	jbe    0x14003cee0
   14003cee0:	pop    rsp
   14003cee1:	add    BYTE PTR [rax+0x0],dl
   14003cee4:	(bad)  
   14003cee5:	add    BYTE PTR [rdx+0x0],dh
   14003cee8:	(bad)  
   14003cee9:	add    BYTE PTR [rbp+0x0],ch
   14003ceec:	add    BYTE PTR gs:[rax+rax*1+0x65],dh
   14003cef1:	add    BYTE PTR [rdx+0x0],dh
   14003cef4:	jae    0x14003cef6
	...
   14003cefe:	add    BYTE PTR [rax],al
   14003cf00:	push   rbx
   14003cf01:	add    BYTE PTR [rcx+0x0],bl
   14003cf04:	push   rbx
   14003cf05:	add    BYTE PTR [rax+rax*1+0x45],dl
   14003cf09:	add    BYTE PTR [rbp+0x0],cl
   14003cf0c:	pop    rsp
   14003cf0d:	add    BYTE PTR [rbx+0x0],al
   14003cf10:	jne    0x14003cf12
   14003cf12:	jb     0x14003cf14
   14003cf14:	jb     0x14003cf16
   14003cf16:	add    BYTE PTR gs:[rsi+0x0],ch
   14003cf1a:	je     0x14003cf1c
   14003cf1c:	rex.XB add BYTE PTR [r15+0x0],bpl
   14003cf20:	outs   dx,BYTE PTR ds:[rsi]
   14003cf21:	add    BYTE PTR [rax+rax*1+0x72],dh
   14003cf25:	add    BYTE PTR [rdi+0x0],ch
   14003cf28:	ins    BYTE PTR es:[rdi],dx
   14003cf29:	add    BYTE PTR [rbx+0x0],dl
   14003cf2c:	add    BYTE PTR gs:[rax+rax*1+0x5c],dh
   14003cf31:	add    BYTE PTR [rbx+0x0],dl
   14003cf34:	add    BYTE PTR gs:[rdx+0x0],dh
   14003cf38:	jbe    0x14003cf3a
   14003cf3a:	imul   eax,DWORD PTR [rax],0x650063
   14003cf40:	jae    0x14003cf42
   14003cf42:	pop    rsp
   14003cf43:	add    BYTE PTR [rdi+0x0],dl
   14003cf46:	add    BYTE PTR fs:[rsi+0x0],cl
   14003cf4a:	imul   eax,DWORD PTR [rax],0x530073
   14003cf50:	jbe    0x14003cf52
   14003cf52:	movsxd eax,DWORD PTR [rax]
   14003cf54:	pop    rsp
   14003cf55:	add    BYTE PTR [rax+0x0],dl
   14003cf58:	(bad)  
   14003cf59:	add    BYTE PTR [rdx+0x0],dh
   14003cf5c:	(bad)  
   14003cf5d:	add    BYTE PTR [rbp+0x0],ch
   14003cf60:	add    BYTE PTR gs:[rax+rax*1+0x65],dh
   14003cf65:	add    BYTE PTR [rdx+0x0],dh
   14003cf68:	jae    0x14003cf6a
   14003cf6a:	add    BYTE PTR [rax],al
   14003cf6c:	add    BYTE PTR [rax],al
   14003cf6e:	add    BYTE PTR [rax],al
   14003cf70:	and    al,0x9
   14003cf72:	mov    DWORD PTR [rsi+rdx*1],ebp
   14003cf75:	rex.WXB
   14003cf76:	data16 mov ah,0x3d
   14003cf79:	sbb    BYTE PTR [rsi-0x7c320693],dh
   14003cf7f:	(bad)  
   14003cf80:	rex.WRX add BYTE PTR [rcx+0x0],r9b
   14003cf84:	push   rbx
   14003cf85:	add    BYTE PTR [rdi+0x0],bl
   14003cf88:	add    BYTE PTR [rcx+0x0],r13b
   14003cf8c:	jae    0x14003cf8e
   14003cf8e:	(bad)  
   14003cf8f:	add    BYTE PTR [rdx+0x0],ah
   14003cf92:	ins    BYTE PTR es:[rdi],dx
   14003cf93:	add    BYTE PTR [rbp+0x0],ah
   14003cf96:	push   rbx
   14003cf97:	add    BYTE PTR [rcx+0x0],ch
   14003cf9a:	add    BYTE PTR [esi+0x0],ch
   14003cf9e:	push   rsi
   14003cf9f:	add    BYTE PTR [rcx+0x0],ah
   14003cfa2:	ins    BYTE PTR es:[rdi],dx
   14003cfa3:	add    BYTE PTR [rcx+0x0],ch
   14003cfa6:	add    BYTE PTR fs:[rcx+0x0],ah
   14003cfaa:	je     0x14003cfac
   14003cfac:	imul   eax,DWORD PTR [rax],0x6e006f
   14003cfb2:	add    BYTE PTR [rax],al
   14003cfb4:	add    BYTE PTR [rax],al
   14003cfb6:	add    BYTE PTR [rax],al
   14003cfb8:	cmc    
   14003cfb9:	out    0xa8,al
   14003cfbb:	and    eax,DWORD PTR [rdx-0x599866ff]
   14003cfc1:	jnp    0x14003cffe
   14003cfc3:	push   rsp
   14003cfc4:	adc    DWORD PTR [rbx+0x300d99],ebp
   14003cfca:	add    BYTE PTR cs:[rax],dh
   14003cfcd:	add    BYTE PTR [rsi],ch
   14003cfcf:	add    BYTE PTR [rax],dh
   14003cfd1:	add    BYTE PTR [rsi],ch
   14003cfd3:	add    BYTE PTR [rax],dh
   14003cfd5:	add    BYTE PTR [rax],al
   14003cfd7:	add    BYTE PTR [rbp+0x0],al
   14003cfda:	jb     0x14003cfdc
   14003cfdc:	jb     0x14003cfde
   14003cfde:	outs   dx,DWORD PTR ds:[rsi]
   14003cfdf:	add    BYTE PTR [rdx+0x0],dh
   14003cfe2:	rex.RXB add BYTE PTR [r13+0x0],r12b
   14003cfe6:	je     0x14003cfe8
   14003cfe8:	je     0x14003cfea
   14003cfea:	imul   eax,DWORD PTR [rax],0x67006e
   14003cff0:	add    BYTE PTR [r8+0x0],sil
   14003cff4:	jo     0x14003cff6
   14003cff6:	ins    BYTE PTR es:[rdi],dx
   14003cff7:	add    BYTE PTR [rcx+0x0],ch
   14003cffa:	movsxd eax,DWORD PTR [rax]
   14003cffc:	(bad)  
   14003cffd:	add    BYTE PTR [rax+rax*1+0x69],dh
   14003d001:	add    BYTE PTR [rdi+0x0],ch
   14003d004:	outs   dx,BYTE PTR ds:[rsi]
   14003d005:	add    BYTE PTR [rax],al
   14003d007:	add    BYTE PTR [rcx+0x70],al
   14003d00a:	jo     0x14003d078
   14003d00c:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14003d013:	rex.WRX (bad) 
   14003d015:	ins    DWORD PTR es:[rdi],dx
   14003d016:	add    BYTE PTR gs:[rbx+0x65],dl
   14003d01a:	jae    0x14003d08f
   14003d01c:	imul   ebp,DWORD PTR [rdi+0x6e],0x72617453
   14003d023:	je     0x14003d069
   14003d025:	imul   esi,DWORD PTR [rdx+0x65],0x6f697463
   14003d02c:	outs   dx,BYTE PTR ds:[rsi]
   14003d02d:	add    BYTE PTR [rax],al
   14003d02f:	add    BYTE PTR [rbx+0x0],dl
   14003d032:	jo     0x14003d034
   14003d034:	jns    0x14003d036
   14003d036:	rex.WRX add BYTE PTR [rbp+0x0],r12b
   14003d03a:	je     0x14003d03c
   14003d03c:	and    BYTE PTR [rax],al
   14003d03e:	jb     0x14003d040
   14003d040:	add    BYTE PTR gs:[rax+0x0],dh
   14003d044:	outs   dx,DWORD PTR ds:[rsi]
   14003d045:	add    BYTE PTR [rdx+0x0],dh
   14003d048:	je     0x14003d04a
   14003d04a:	and    BYTE PTR [rax],al
   14003d04c:	ja     0x14003d04e
   14003d04e:	(bad)  
   14003d04f:	add    BYTE PTR [rbx+0x0],dh
   14003d052:	and    BYTE PTR [rax],al
   14003d054:	jae    0x14003d056
   14003d056:	jne    0x14003d058
   14003d058:	movsxd eax,DWORD PTR [rax]
   14003d05a:	movsxd eax,DWORD PTR [rax]
   14003d05c:	add    BYTE PTR gs:[rbx+0x0],dh
   14003d060:	jae    0x14003d062
   14003d062:	data16 add BYTE PTR [rbp+0x0],dh
   14003d066:	ins    BYTE PTR es:[rdi],dx
   14003d067:	add    BYTE PTR [rax+rax*1+0x79],ch
   14003d06b:	add    BYTE PTR [rax],ah
   14003d06d:	add    BYTE PTR [rbx+0x0],dh
   14003d070:	add    BYTE PTR gs:[rsi+0x0],ch
   14003d074:	je     0x14003d076
   14003d076:	add    BYTE PTR [rax],al
   14003d078:	rex.RXB (bad) 
   14003d07a:	jo     0x14003d0dd
   14003d07c:	rex.XB ins BYTE PTR es:[rdi],dx
   14003d07e:	imul   esp,DWORD PTR [rbp+0x6e],0x3a002e74
   14003d085:	and    BYTE PTR [rax],al
   14003d087:	add    BYTE PTR [rcx+0x74738c2c],al
   14003d08d:	xchg   cl,bl
   14003d08f:	mov    DWORD PTR [rcx-0x3bd9f552],esp
   14003d095:	out    dx,al
   14003d096:	cmp    al,0xf9
   14003d098:	ss push rax
   14003d09a:	mul    DWORD PTR [rbx+0x4ca0ec4a]
   14003d0a0:	xchg   esp,eax
   14003d0a1:	and    BYTE PTR [rsi+0x30],bh
   14003d0a4:	ins    BYTE PTR es:[rdi],dx
   14003d0a5:	movabs ds:0x3100380039c153,al
   14003d0ae:	cmp    BYTE PTR [rax],al
   14003d0b0:	cmp    BYTE PTR [rax],al
   14003d0b2:	cmp    DWORD PTR [rax],eax
   14003d0b4:	add    BYTE PTR [rax],al
   14003d0b6:	add    BYTE PTR [rax],al
   14003d0b8:	rex.WRX add BYTE PTR [rcx+0x0],r9b
   14003d0bc:	push   rbx
   14003d0bd:	add    BYTE PTR [rdi+0x0],bl
   14003d0c0:	add    BYTE PTR [rcx+0x0],r13b
   14003d0c4:	jae    0x14003d0c6
   14003d0c6:	(bad)  
   14003d0c7:	add    BYTE PTR [rdx+0x0],ah
   14003d0ca:	ins    BYTE PTR es:[rdi],dx
   14003d0cb:	add    BYTE PTR [rbp+0x0],ah
   14003d0ce:	rex.W add BYTE PTR [rdi+0x0],bpl
   14003d0d2:	je     0x14003d0d4
   14003d0d4:	data16 add BYTE PTR [rcx+0x0],ch
   14003d0d8:	js     0x14003d0da
   14003d0da:	push   rsi
   14003d0db:	add    BYTE PTR [rcx+0x0],ah
   14003d0de:	ins    BYTE PTR es:[rdi],dx
   14003d0df:	add    BYTE PTR [rcx+0x0],ch
   14003d0e2:	add    BYTE PTR fs:[rcx+0x0],ah
   14003d0e6:	je     0x14003d0e8
   14003d0e8:	imul   eax,DWORD PTR [rax],0x6e006f
   14003d0ee:	add    BYTE PTR [rax],al
   14003d0f0:	push   rax
   14003d0f1:	add    BYTE PTR [rcx+0x0],ah
   14003d0f4:	movsxd eax,DWORD PTR [rax]
   14003d0f6:	imul   eax,DWORD PTR [rax],0x61
   14003d0f9:	add    BYTE PTR [rdi+0x0],ah
   14003d0fc:	add    BYTE PTR gs:[rdi+0x0],bl
   14003d100:	data16 add BYTE PTR [rdi+0x0],ch
   14003d104:	jb     0x14003d106
   14003d106:	pop    rdi
   14003d107:	add    BYTE PTR [rbx+0x0],cl
   14003d10a:	rex.X add BYTE PTR [rip+0x73006c00],spl        # 0x1b3043d11
   14003d111:	add    BYTE PTR [rsi+0x0],bh
   14003d114:	add    BYTE PTR [rax],al
   14003d116:	add    BYTE PTR [rax],al
   14003d118:	rex.WRX add BYTE PTR [rcx+0x0],r9b
   14003d11c:	push   rbx
   14003d11d:	add    BYTE PTR [rdi+0x0],bl
   14003d120:	rex.XB add BYTE PTR [r10+0x0],spl
   14003d124:	jae    0x14003d126
   14003d126:	add    BYTE PTR [r8+rax*1+0x74],bpl
   14003d12b:	add    BYTE PTR [rbp+0x0],ah
   14003d12e:	jb     0x14003d130
   14003d130:	outs   dx,BYTE PTR ds:[rsi]
   14003d131:	add    BYTE PTR [rcx+0x0],ah
   14003d134:	je     0x14003d136
   14003d136:	add    BYTE PTR gs:[rdx+0x0],dl
   14003d13a:	add    BYTE PTR gs:[rdi+0x0],ah
   14003d13e:	rex.WXB add BYTE PTR [r13+0x0],spl
   14003d142:	jns    0x14003d144
	...
   14003d150:	push   rbx
   14003d151:	add    BYTE PTR [rdi+0x0],cl
   14003d154:	add    BYTE PTR [rax+r8*1+0x57],r10b
   14003d159:	add    BYTE PTR [rcx+0x0],al
   14003d15c:	push   rdx
   14003d15d:	add    BYTE PTR [rbp+0x0],al
   14003d160:	pop    rsp
   14003d161:	add    BYTE PTR [rbp+0x0],cl
   14003d164:	imul   eax,DWORD PTR [rax],0x720063
   14003d16a:	outs   dx,DWORD PTR ds:[rsi]
   14003d16b:	add    BYTE PTR [rbx+0x0],dh
   14003d16e:	outs   dx,DWORD PTR ds:[rsi]
   14003d16f:	add    BYTE PTR [rsi+0x0],ah
   14003d172:	je     0x14003d174
   14003d174:	pop    rsp
   14003d175:	add    BYTE PTR [rdi+0x0],dl
   14003d178:	imul   eax,DWORD PTR [rax],0x64006e
   14003d17e:	outs   dx,DWORD PTR ds:[rsi]
   14003d17f:	add    BYTE PTR [rdi+0x0],dh
   14003d182:	jae    0x14003d184
   14003d184:	pop    rsp
   14003d185:	add    BYTE PTR [rbx+0x0],al
   14003d188:	jne    0x14003d18a
   14003d18a:	jb     0x14003d18c
   14003d18c:	jb     0x14003d18e
   14003d18e:	add    BYTE PTR gs:[rsi+0x0],ch
   14003d192:	je     0x14003d194
   14003d194:	push   rsi
   14003d195:	add    BYTE PTR [rbp+0x0],ah
   14003d198:	jb     0x14003d19a
   14003d19a:	jae    0x14003d19c
   14003d19c:	imul   eax,DWORD PTR [rax],0x6e006f
   14003d1a2:	pop    rsp
   14003d1a3:	add    BYTE PTR [rbx+0x0],al
   14003d1a6:	outs   dx,DWORD PTR ds:[rsi]
   14003d1a7:	add    BYTE PTR [rbp+0x0],ch
   14003d1aa:	jo     0x14003d1ac
   14003d1ac:	outs   dx,DWORD PTR ds:[rsi]
   14003d1ad:	add    BYTE PTR [rsi+0x0],ch
   14003d1b0:	add    BYTE PTR gs:[rsi+0x0],ch
   14003d1b4:	je     0x14003d1b6
   14003d1b6:	and    BYTE PTR [rax],al
   14003d1b8:	rex.X add BYTE PTR [rcx+0x0],spl
   14003d1bc:	jae    0x14003d1be
   14003d1be:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   14003d1c3:	add    BYTE PTR [rbx+0x0],dl
   14003d1c6:	add    BYTE PTR gs:[rdx+0x0],dh
   14003d1ca:	jbe    0x14003d1cc
   14003d1cc:	imul   eax,DWORD PTR [rax],0x690063
   14003d1d2:	outs   dx,BYTE PTR ds:[rsi]
   14003d1d3:	add    BYTE PTR [rdi+0x0],ah
   14003d1d6:	pop    rsp
   14003d1d7:	add    BYTE PTR [rax+0x0],dl
   14003d1da:	(bad)  
   14003d1db:	add    BYTE PTR [rbx+0x0],ah
   14003d1de:	imul   eax,DWORD PTR [rax],0x61
   14003d1e1:	add    BYTE PTR [rdi+0x0],ah
   14003d1e4:	add    BYTE PTR gs:[rbx+0x0],dh
	...
   14003d1f0:	rex.XB add BYTE PTR [r13+0x0],sil
   14003d1f4:	jb     0x14003d1f6
   14003d1f6:	jb     0x14003d1f8
   14003d1f8:	add    BYTE PTR gs:[rsi+0x0],ch
   14003d1fc:	je     0x14003d1fe
   14003d1fe:	push   rbx
   14003d1ff:	add    BYTE PTR [rax+rax*1+0x61],dh
   14003d203:	add    BYTE PTR [rax+rax*1+0x65],dh
	...
   14003d20f:	add    BYTE PTR [rcx+0x0],cl
   14003d212:	outs   dx,BYTE PTR ds:[rsi]
   14003d213:	add    BYTE PTR [rbx+0x0],dh
   14003d216:	je     0x14003d218
   14003d218:	(bad)  
   14003d219:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14003d21d:	add    BYTE PTR [rax+rax*1+0x69],dl
   14003d221:	add    BYTE PTR [rbp+0x0],ch
   14003d224:	add    BYTE PTR gs:[rax+0x0],cl
   14003d228:	imul   eax,DWORD PTR [rax],0x680067
   14003d22e:	add    BYTE PTR [rax],al
   14003d230:	rex.WB add BYTE PTR [r14+0x0],bpl
   14003d234:	jae    0x14003d236
   14003d236:	je     0x14003d238
   14003d238:	(bad)  
   14003d239:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14003d23d:	add    BYTE PTR [rax+rax*1+0x69],dl
   14003d241:	add    BYTE PTR [rbp+0x0],ch
   14003d244:	add    BYTE PTR gs:[rax+rax*1+0x6f],cl
   14003d249:	add    BYTE PTR [rdi+0x0],dh
   14003d24c:	add    BYTE PTR [rax],al
   14003d24e:	add    BYTE PTR [rax],al
   14003d250:	rex.WRX je 0x14003d2a4
   14003d253:	jne    0x14003d2ba
   14003d255:	jb     0x14003d2d0
   14003d257:	push   rbx
   14003d258:	jns    0x14003d2cd
   14003d25a:	je     0x14003d2c1
   14003d25c:	ins    DWORD PTR es:[rdi],dx
   14003d25d:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14003d25f:	outs   dx,WORD PTR ds:[rsi]
   14003d261:	jb     0x14003d2d0
   14003d263:	(bad)  
   14003d264:	je     0x14003d2cf
   14003d266:	outs   dx,DWORD PTR ds:[rsi]
   14003d267:	outs   dx,BYTE PTR ds:[rsi]
	...
   14003d270:	outs   dx,BYTE PTR ds:[rsi]
   14003d271:	add    BYTE PTR [rax+rax*1+0x64],dh
   14003d275:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14003d279:	add    BYTE PTR [rsi],ch
   14003d27b:	add    BYTE PTR [rax+rax*1+0x6c],ah
   14003d27f:	add    BYTE PTR [rax+rax*1+0x0],ch
   14003d283:	add    BYTE PTR [rax],al
   14003d285:	add    BYTE PTR [rax],al
   14003d287:	add    BYTE PTR [rax+0x856ccc5],cl
   14003d28d:	(bad)
   14003d291:	fstp   DWORD PTR [rax]
   14003d293:	in     eax,0xc0
   14003d295:	pushf  
   14003d296:	push   rsp
   14003d297:	sub    al,0x2
   14003d299:	cmc    
   14003d29a:	stc    
   14003d29b:	ins    BYTE PTR es:[rdi],dx
   14003d29c:	ret    0xa6f1
   14003d29f:	xchg   esp,edi
   14003d2a1:	and    al,0xc5
   14003d2a3:	jo     0x14003d2bf
   14003d2a5:	cmp    al,BYTE PTR [rcx-0x71]
   14003d2a8:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14003d2ac:	jae    0x14003d2ae
   14003d2ae:	movsxd eax,DWORD PTR [rax]
   14003d2b0:	add    BYTE PTR gs:[rax+rax*1+0x6c],ch
   14003d2b5:	add    BYTE PTR [rcx+0x0],ah
   14003d2b8:	outs   dx,BYTE PTR ds:[rsi]
   14003d2b9:	add    BYTE PTR [rbp+0x0],ah
   14003d2bc:	outs   dx,DWORD PTR ds:[rsi]
   14003d2bd:	add    BYTE PTR [rbp+0x0],dh
   14003d2c0:	jae    0x14003d2c2
   14003d2c2:	and    BYTE PTR [rax],al
   14003d2c4:	rex.XB add BYTE PTR [r15+0x0],bpl
   14003d2c8:	outs   dx,BYTE PTR ds:[rsi]
   14003d2c9:	add    BYTE PTR [rsi+0x0],ah
   14003d2cc:	imul   eax,DWORD PTR [rax],0x750067
   14003d2d2:	jb     0x14003d2d4
   14003d2d4:	(bad)  
   14003d2d5:	add    BYTE PTR [rax+rax*1+0x69],dh
   14003d2d9:	add    BYTE PTR [rdi+0x0],ch
   14003d2dc:	outs   dx,BYTE PTR ds:[rsi]
   14003d2dd:	add    BYTE PTR [rax],al
   14003d2df:	add    BYTE PTR [rdi+0x5e9b80a2],al
   14003d2e5:	mov    edx,0x4101bbe3
   14003d2ea:	jb     0x14003d282
   14003d2ec:	cld    
   14003d2ed:	retf   
   14003d2ee:	jb     0x14003d308
   14003d2f0:	(bad)  
   14003d2f1:	mov    ecx,0xb65940b4
   14003d2f6:	mov    ch,0x74
   14003d2f8:	xchg   esi,eax
   14003d2f9:	cmp    DWORD PTR [rdi-0x370032b7],ebx
   14003d2ff:	loopne 0x14003d36c
   14003d301:	add    BYTE PTR [rbp+0x0],ah
   14003d304:	jb     0x14003d306
   14003d306:	outs   dx,BYTE PTR ds:[rsi]
   14003d307:	add    BYTE PTR [rbp+0x0],ah
   14003d30a:	ins    BYTE PTR es:[rdi],dx
   14003d30b:	add    BYTE PTR [rdx+0x0],ah
   14003d30e:	(bad)  
   14003d30f:	add    BYTE PTR [rbx+0x0],dh
   14003d312:	add    BYTE PTR gs:[rsi],ch
   14003d315:	add    BYTE PTR [rax+rax*1+0x6c],ah
   14003d319:	add    BYTE PTR [rax+rax*1+0x0],ch
   14003d31d:	add    BYTE PTR [rax],al
   14003d31f:	add    BYTE PTR [rbx+0x0],ch
   14003d322:	add    BYTE PTR gs:[rdx+0x0],dh
   14003d326:	outs   dx,BYTE PTR ds:[rsi]
   14003d327:	add    BYTE PTR [rbp+0x0],ah
   14003d32a:	ins    BYTE PTR es:[rdi],dx
   14003d32b:	add    BYTE PTR [rbx],dh
   14003d32d:	add    BYTE PTR [rdx],dh
   14003d32f:	add    BYTE PTR [rsi],ch
   14003d331:	add    BYTE PTR [rax+rax*1+0x6c],ah
   14003d335:	add    BYTE PTR [rax+rax*1+0x0],ch
   14003d339:	add    BYTE PTR [rax],al
   14003d33b:	add    BYTE PTR [rax],al
   14003d33d:	add    BYTE PTR [rax],al
   14003d33f:	add    BYTE PTR [rdi+0x65],al
   14003d342:	je     0x14003d38a
   14003d344:	imul   ebp,DWORD PTR [rbp+riz*2+0x56],0x69737265
   14003d34c:	outs   dx,DWORD PTR ds:[rsi]
   14003d34d:	outs   dx,BYTE PTR ds:[rsi]
   14003d34e:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14003d350:	outs   dx,WORD PTR ds:[rsi]
   14003d352:	push   rbx
   14003d353:	imul   edi,DWORD PTR [rdx+0x65],0x760057
   14003d35a:	add    BYTE PTR gs:[rdx+0x0],dh
   14003d35e:	jae    0x14003d360
   14003d360:	imul   eax,DWORD PTR [rax],0x6e006f
   14003d366:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   14003d36b:	add    BYTE PTR [rax+rax*1+0x0],ch
   14003d36f:	add    BYTE PTR [rdi+0x65],al
   14003d372:	je     0x14003d3ba
   14003d374:	imul   ebp,DWORD PTR [rbp+riz*2+0x56],0x69737265
   14003d37c:	outs   dx,DWORD PTR ds:[rsi]
   14003d37d:	outs   dx,BYTE PTR ds:[rsi]
   14003d37e:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14003d380:	outs   dx,WORD PTR ds:[rsi]
   14003d382:	push   rdi
   14003d383:	add    BYTE PTR [rax],al
   14003d385:	add    BYTE PTR [rax],al
   14003d387:	add    BYTE PTR [rdi+0x65],al
   14003d38a:	je     0x14003d3d2
   14003d38c:	imul   ebp,DWORD PTR [rbp+riz*2+0x56],0x69737265
   14003d394:	outs   dx,DWORD PTR ds:[rsi]
   14003d395:	outs   dx,BYTE PTR ds:[rsi]
   14003d396:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14003d398:	outs   dx,WORD PTR ds:[rsi]
   14003d39a:	push   rbx
   14003d39b:	imul   edi,DWORD PTR [rdx+0x65],0x577845
   14003d3a2:	add    BYTE PTR [rax],al
   14003d3a4:	add    BYTE PTR [rax],al
   14003d3a6:	add    BYTE PTR [rax],al
   14003d3a8:	rex.RXB
   14003d3a9:	gs je  0x14003d3f2
   14003d3ac:	imul   ebp,DWORD PTR [rbp+riz*2+0x56],0x69737265
   14003d3b4:	outs   dx,DWORD PTR ds:[rsi]
   14003d3b5:	outs   dx,BYTE PTR ds:[rsi]
   14003d3b6:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14003d3b8:	outs   dx,WORD PTR ds:[rsi]
   14003d3ba:	rex.RB js 0x14003d414
   14003d3bd:	add    BYTE PTR [rax],al
   14003d3bf:	add    BYTE PTR [rdx],bh
   14003d3c1:	int    0xd7
   14003d3c3:	or     eax,0xb4a08c45
   14003d3c8:	in     eax,dx
   14003d3c9:	add    eax,0x6281e14e
   14003d3ce:	xchg   esp,eax
   14003d3cf:	rex.WRX cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   14003d3d1:	(bad)  
   14003d3d2:	(bad)  
   14003d3d3:	ret    
   14003d3d4:	xchg   DWORD PTR [rcx+0x9],ecx
   14003d3d7:	iret   
   14003d3d8:	or     DWORD PTR [rax-0x6],esi
   14003d3db:	in     al,dx
   14003d3dc:	jge    0x14003d408
   14003d3de:	xchg   ebx,eax
   14003d3df:	ret    
   14003d3e0:	rex.RXB
   14003d3e1:	gs je  0x14003d437
   14003d3e4:	jns    0x14003d459
   14003d3e6:	je     0x14003d44d
   14003d3e8:	ins    DWORD PTR es:[rdi],dx
   14003d3e9:	push   rsp
   14003d3ea:	imul   ebp,DWORD PTR [rbp+0x65],0x63657250
   14003d3f1:	imul   esi,DWORD PTR [rbx+0x65],0x69467341
   14003d3f8:	ins    BYTE PTR es:[rdi],dx
   14003d3f9:	gs push rsp
   14003d3fb:	imul   ebp,DWORD PTR [rbp+0x65],0x5ff50000
   14003d402:	xor    al,0x4f
   14003d404:	fs rex.RB (bad) 
   14003d407:	ret    0x85de
   14003d40a:	ins    DWORD PTR es:[rdi],dx
   14003d40b:	ss out dx,al
   14003d40d:	cmp    cl,BYTE PTR [rbp+0x537e76b4]
   14003d413:	(bad)  [rbp-0x6cba6961]
   14003d419:	jae    0x14003d3ff
   14003d41b:	(bad)  
   14003d41c:	jb     0x14003d45e
   14003d41e:	cmp    DWORD PTR [rcx+0x72],ebx
   14003d424:	add    BYTE PTR [rax],al
   14003d426:	add    BYTE PTR [rax],al
   14003d428:	pop    rdi
   14003d429:	add    BYTE PTR [rdi+0x0],bl
   14003d42c:	rex.WRX add BYTE PTR [rdi+0x0],r9b
   14003d430:	pop    rdi
   14003d431:	add    BYTE PTR [rbx+0x0],dl
   14003d434:	push   rsp
   14003d435:	add    BYTE PTR [rdx+0x0],dl
   14003d438:	rex.WB add BYTE PTR [r14+0x0],cl
   14003d43c:	rex.RXB add BYTE PTR [r15+0x0],r11b
   14003d440:	add    BYTE PTR [r8+0x0],r11b
   14003d444:	push   rax
   14003d445:	add    BYTE PTR [rcx+0x0],al
   14003d448:	rex.WRX add BYTE PTR [rbx+0x0],r10b
   14003d44c:	rex.WB add BYTE PTR [r15+0x0],cl
   14003d450:	rex.WRX add BYTE PTR [rax],r8b
   14003d453:	add    BYTE PTR [rax],al
   14003d455:	add    BYTE PTR [rax],al
   14003d457:	add    BYTE PTR [rdx],ah
   14003d459:	add    eax,0x41993
   14003d45e:	add    BYTE PTR [rax],al
   14003d460:	call   0x14203d884
   14003d465:	add    BYTE PTR [rax],al
   14003d467:	add    BYTE PTR [rax],cl
   14003d469:	and    BYTE PTR [rax+rax*1],al
   14003d46c:	or     BYTE PTR [rax],al
   14003d46e:	add    BYTE PTR [rax],al
   14003d470:	(bad)  
   14003d471:	and    BYTE PTR [rax+rax*1],al
   14003d474:	and    BYTE PTR [rax],al
   14003d476:	add    BYTE PTR [rax],al
   14003d478:	add    BYTE PTR [rax],al
   14003d47a:	add    BYTE PTR [rax],al
   14003d47c:	add    DWORD PTR [rax],eax
	...
   14003d486:	loopne 0x14003d4c7
   14003d488:	add    BYTE PTR [rax],al
   14003d48a:	add    BYTE PTR [rax],al
   14003d48c:	add    BYTE PTR [rax],al
   14003d48e:	pop    rcx
   14003d48f:	add    BYTE PTR [rax],al
   14003d492:	add    BYTE PTR [rax],al
   14003d494:	add    BYTE PTR [rax],al
   14003d496:	lock rex.XB add BYTE PTR [r8],al
   14003d49a:	sbb    BYTE PTR [rdi+0x0],0x0
   14003d49e:	add    BYTE PTR [rax],al
   14003d4a0:	and    al,BYTE PTR [rip+0xa1993]        # 0x1400dee39
   14003d4a6:	add    BYTE PTR [rax],al
   14003d4a8:	cld    
   14003d4a9:	and    al,BYTE PTR [rax+rax*1]
   14003d4ac:	add    eax,DWORD PTR [rax]
   14003d4ae:	add    BYTE PTR [rax],al
   14003d4b0:	and    r8,QWORD PTR [rax+rax*1]
   14003d4b4:	and    BYTE PTR [rax],al
   14003d4b6:	add    BYTE PTR [rax],al
   14003d4b8:	shl    BYTE PTR [rbx],1
   14003d4ba:	add    al,0x0
   14003d4bc:	adc    BYTE PTR [rcx],al
   14003d4be:	add    BYTE PTR [rax],al
   14003d4c0:	add    BYTE PTR [rax],al
   14003d4c2:	add    BYTE PTR [rax],al
   14003d4c4:	add    DWORD PTR [rax],eax
   14003d4c6:	add    BYTE PTR [rax],al
   14003d4c8:	and    al,BYTE PTR [rip+0x11993]        # 0x14004ee61
   14003d4ce:	add    BYTE PTR [rax],al
   14003d4d0:	mov    ah,0x22
   14003d4d2:	add    al,0x0
	...
   14003d4dc:	add    eax,DWORD PTR [rax]
   14003d4de:	add    BYTE PTR [rax],al
   14003d4e0:	shl    BYTE PTR [rdx],0x4
   14003d4e3:	add    BYTE PTR [rax],ah
   14003d4e5:	add    BYTE PTR [rax],al
   14003d4e7:	add    BYTE PTR [rax],al
   14003d4e9:	add    BYTE PTR [rax],al
   14003d4eb:	add    BYTE PTR [rcx],al
   14003d4ed:	add    BYTE PTR [rax],al
   14003d4ef:	add    BYTE PTR [rdx],ah
   14003d4f1:	add    eax,0x21993
   14003d4f6:	add    BYTE PTR [rax],al
   14003d4f8:	adc    BYTE PTR [rdx],ah
   14003d4fa:	add    al,0x0
   14003d4fc:	add    DWORD PTR [rax],eax
   14003d4fe:	add    BYTE PTR [rax],al
   14003d500:	and    BYTE PTR [rdx],ah
   14003d502:	add    al,0x0
   14003d504:	(bad)  
   14003d505:	add    BYTE PTR [rax],al
   14003d507:	add    BYTE PTR [rax+0x22],cl
   14003d50a:	add    al,0x0
   14003d50c:	and    BYTE PTR [rax],al
   14003d50e:	add    BYTE PTR [rax],al
   14003d510:	add    BYTE PTR [rax],al
   14003d512:	add    BYTE PTR [rax],al
   14003d514:	add    DWORD PTR [rax],eax
   14003d516:	add    BYTE PTR [rax],al
   14003d518:	and    al,BYTE PTR [rip+0x51993]        # 0x14008eeb1
   14003d51e:	add    BYTE PTR [rax],al
   14003d520:	sbb    al,0x21
   14003d522:	add    al,0x0
   14003d524:	add    DWORD PTR [rax],eax
   14003d526:	add    BYTE PTR [rax],al
   14003d528:	and    DWORD PTR [rax+rax*1],r8d
   14003d52c:	sldt   WORD PTR [rax]
   14003d52f:	add    BYTE PTR [rax+0x21],dh
   14003d532:	add    al,0x0
   14003d534:	(bad)  
   14003d535:	add    BYTE PTR [rax],al
   14003d537:	add    BYTE PTR [rax],al
   14003d539:	add    BYTE PTR [rax],al
   14003d53b:	add    BYTE PTR [rcx],al
   14003d53d:	add    BYTE PTR [rax],al
   14003d53f:	add    BYTE PTR [rdx],ah
   14003d541:	add    eax,0x41993
   14003d546:	add    BYTE PTR [rax],al
   14003d548:	cld    
   14003d549:	sub    al,BYTE PTR [rax+rax*1]
   14003d54c:	add    DWORD PTR [rax],eax
   14003d54e:	add    BYTE PTR [rax],al
   14003d550:	sbb    al,0x2b
   14003d552:	add    al,0x0
   14003d554:	or     al,BYTE PTR [rax]
   14003d556:	add    BYTE PTR [rax],al
   14003d558:	push   rax
   14003d559:	sub    eax,DWORD PTR [rax+rax*1]
   14003d55c:	pop    rax
   14003d55d:	add    BYTE PTR [rax],al
   14003d55f:	add    BYTE PTR [rax],al
   14003d561:	add    BYTE PTR [rax],al
   14003d563:	add    BYTE PTR [rcx],al
   14003d565:	add    BYTE PTR [rax],al
   14003d567:	add    BYTE PTR [rdx],ah
   14003d569:	add    eax,0x21993
   14003d56e:	add    BYTE PTR [rax],al
   14003d570:	sub    BYTE PTR [rdx],0x4
	...
   14003d57b:	add    BYTE PTR [rip+0xffffffff90000000],al        # 0xd003d581
   14003d581:	sub    al,BYTE PTR [rax+rax*1]
   14003d584:	enter  0x0,0x0
   14003d588:	add    BYTE PTR [rax],al
   14003d58a:	add    BYTE PTR [rax],al
   14003d58c:	add    DWORD PTR [rax],eax
   14003d58e:	add    BYTE PTR [rax],al
   14003d590:	and    al,BYTE PTR [rip+0x61993]        # 0x14009ef29
   14003d596:	add    BYTE PTR [rax],al
   14003d598:	sub    DWORD PTR [rax+rax*1],r8d
   14003d59c:	add    al,BYTE PTR [rax]
   14003d59e:	add    BYTE PTR [rax],al
   14003d5a0:	je     0x14003d5cb
   14003d5a2:	add    al,0x0
   14003d5a4:	or     al,BYTE PTR [rax]
   14003d5a6:	add    BYTE PTR [rax],al
   14003d5a8:	shr    BYTE PTR [rcx],1
   14003d5aa:	add    al,0x0
   14003d5ac:	js     0x14003d5ae
   14003d5ae:	add    BYTE PTR [rax],al
   14003d5b0:	add    BYTE PTR [rax],al
   14003d5b2:	add    BYTE PTR [rax],al
   14003d5b4:	add    DWORD PTR [rax],eax
   14003d5b6:	add    BYTE PTR [rax],al
   14003d5b8:	and    al,BYTE PTR [rip+0x21993]        # 0x14005ef51
   14003d5be:	add    BYTE PTR [rax],al
   14003d5c0:	shr    BYTE PTR [rax],1
   14003d5c2:	add    al,0x0
	...
   14003d5cc:	add    eax,0xe0000000
   14003d5d1:	sub    BYTE PTR [rax+rax*1],al
   14003d5d4:	add    BYTE PTR [rax],al
   14003d5d7:	add    BYTE PTR [rax],al
   14003d5d9:	add    BYTE PTR [rax],al
   14003d5db:	add    BYTE PTR [rcx],al
   14003d5dd:	add    BYTE PTR [rax],al
   14003d5df:	add    BYTE PTR [rdx],ah
   14003d5e1:	add    eax,0x11993
   14003d5e6:	add    BYTE PTR [rax],al
   14003d5e8:	ins    BYTE PTR es:[rdi],dx
   14003d5e9:	sub    BYTE PTR [rax+rax*1],al
	...
   14003d5f4:	add    eax,DWORD PTR [rax]
   14003d5f6:	add    BYTE PTR [rax],al
   14003d5f8:	js     0x14003d622
   14003d5fa:	add    al,0x0
   14003d5fc:	and    BYTE PTR [rax],al
   14003d5fe:	add    BYTE PTR [rax],al
   14003d600:	add    BYTE PTR [rax],al
   14003d602:	add    BYTE PTR [rax],al
   14003d604:	add    DWORD PTR [rax],eax
   14003d606:	add    BYTE PTR [rax],al
   14003d608:	and    al,BYTE PTR [rip+0x61993]        # 0x14009efa1
   14003d60e:	add    BYTE PTR [rax],al
   14003d610:	push   0x2000427
   14003d615:	add    BYTE PTR [rax],al
   14003d617:	add    BYTE PTR [rax+0xa000427],bl
   14003d61d:	add    BYTE PTR [rax],al
   14003d61f:	add    al,dh
   14003d621:	(bad)  
   14003d622:	add    al,0x0
   14003d624:	push   rax
   14003d625:	add    BYTE PTR [rax],al
   14003d627:	add    BYTE PTR [rax],al
   14003d629:	add    BYTE PTR [rax],al
   14003d62b:	add    BYTE PTR [rcx],al
   14003d62d:	add    BYTE PTR [rax],al
   14003d62f:	add    BYTE PTR [rdx],ah
   14003d631:	add    eax,0x31993
   14003d636:	add    BYTE PTR [rax],al
   14003d638:	xchg   esp,eax
   14003d639:	es add al,0x0
	...
   14003d644:	add    eax,0xb0000000
   14003d649:	es add al,0x0
   14003d64c:	and    BYTE PTR [rax],al
   14003d64e:	add    BYTE PTR [rax],al
   14003d650:	add    BYTE PTR [rax],al
   14003d652:	add    BYTE PTR [rax],al
   14003d654:	add    DWORD PTR [rax],eax
   14003d656:	add    BYTE PTR [rax],al
   14003d658:	and    al,BYTE PTR [rip+0x21993]        # 0x14005eff1
   14003d65e:	add    BYTE PTR [rax],al
   14003d660:	adc    BYTE PTR [rdx],ah
   14003d662:	add    al,0x0
   14003d664:	add    DWORD PTR [rax],eax
   14003d666:	add    BYTE PTR [rax],al
   14003d668:	or     al,0x26
   14003d66a:	add    al,0x0
   14003d66c:	(bad)  
   14003d66d:	add    BYTE PTR [rax],al
   14003d66f:	add    BYTE PTR [rax],bh
   14003d671:	es add al,0x0
   14003d674:	and    BYTE PTR [rax],al
   14003d676:	add    BYTE PTR [rax],al
   14003d678:	add    BYTE PTR [rax],al
   14003d67a:	add    BYTE PTR [rax],al
   14003d67c:	add    DWORD PTR [rax],eax
   14003d67e:	add    BYTE PTR [rax],al
   14003d680:	and    al,BYTE PTR [rip+0x31993]        # 0x14006f019
   14003d686:	add    BYTE PTR [rax],al
   14003d688:	push   rsp
   14003d689:	and    eax,0x10004
   14003d68e:	add    BYTE PTR [rax],al
   14003d690:	ins    BYTE PTR es:[rdi],dx
   14003d691:	and    eax,0x80004
   14003d696:	add    BYTE PTR [rax],al
   14003d698:	movabs al,ds:0x58000425
   14003d6a1:	add    BYTE PTR [rax],al
   14003d6a3:	add    BYTE PTR [rcx],al
   14003d6a5:	add    BYTE PTR [rax],al
   14003d6a7:	add    BYTE PTR [rdx],ah
   14003d6a9:	add    eax,0x41993
   14003d6ae:	add    BYTE PTR [rax],al
   14003d6b0:	jl     0x14003d6f2
   14003d6b2:	add    al,0x0
   14003d6b4:	add    al,BYTE PTR [rax]
   14003d6b6:	add    BYTE PTR [rax],al
   14003d6b8:	pushf  
   14003d6b9:	add    al,0x0
   14003d6bc:	or     DWORD PTR [rax],eax
   14003d6be:	add    BYTE PTR [rax],al
   14003d6c0:	lock add al,0x0
   14003d6c4:	xor    BYTE PTR [rax],al
   14003d6c6:	add    BYTE PTR [rax],al
   14003d6c8:	add    BYTE PTR [rax],al
   14003d6ca:	add    BYTE PTR [rax],al
   14003d6cc:	add    DWORD PTR [rax],eax
   14003d6ce:	add    BYTE PTR [rax],al
   14003d6d0:	and    al,BYTE PTR [rip+0x21993]        # 0x14005f069
   14003d6d6:	add    BYTE PTR [rax],al
   14003d6d8:	adc    BYTE PTR [rdx],ah
   14003d6da:	add    al,0x0
   14003d6dc:	add    DWORD PTR [rax],eax
   14003d6de:	add    BYTE PTR [rax],al
   14003d6e0:	add    BYTE PTR [rax+0x4],al
   14003d6e3:	add    BYTE PTR [rip+0x28000000],al        # 0x16803d6e9
   14003d6e9:	add    al,0x0
   14003d6ec:	and    BYTE PTR [rax],al
   14003d6ee:	add    BYTE PTR [rax],al
   14003d6f0:	add    BYTE PTR [rax],al
   14003d6f2:	add    BYTE PTR [rax],al
   14003d6f4:	add    DWORD PTR [rax],eax
   14003d6f6:	add    BYTE PTR [rax],al
   14003d6f8:	and    al,BYTE PTR [rip+0x21993]        # 0x14005f091
   14003d6fe:	add    BYTE PTR [rax],al
   14003d700:	adc    BYTE PTR [rdx],ah
   14003d702:	add    al,0x0
   14003d704:	add    DWORD PTR [rax],eax
   14003d706:	add    BYTE PTR [rax],al
   14003d708:	nop
   14003d709:	(bad)  
   14003d70a:	add    al,0x0
   14003d70c:	add    eax,0xb8000000
   14003d711:	(bad)  
   14003d712:	add    al,0x0
   14003d714:	and    BYTE PTR [rax],al
   14003d716:	add    BYTE PTR [rax],al
   14003d718:	add    BYTE PTR [rax],al
   14003d71a:	add    BYTE PTR [rax],al
   14003d71c:	add    DWORD PTR [rax],eax
   14003d71e:	add    BYTE PTR [rax],al
   14003d720:	and    al,BYTE PTR [rip+0x21993]        # 0x14005f0b9
   14003d726:	add    BYTE PTR [rax],al
   14003d728:	adc    BYTE PTR [rdx],ah
   14003d72a:	add    al,0x0
   14003d72c:	add    DWORD PTR [rax],eax
   14003d72e:	add    BYTE PTR [rax],al
   14003d730:	sbb    al,0x3f
   14003d732:	add    al,0x0
   14003d734:	add    eax,0x48000000
   14003d739:	(bad)  
   14003d73a:	add    al,0x0
   14003d73c:	and    BYTE PTR [rax],al
   14003d73e:	add    BYTE PTR [rax],al
   14003d740:	add    BYTE PTR [rax],al
   14003d742:	add    BYTE PTR [rax],al
   14003d744:	add    DWORD PTR [rax],eax
   14003d746:	add    BYTE PTR [rax],al
   14003d748:	and    al,BYTE PTR [rip+0x11993]        # 0x14004f0e1
   14003d74e:	add    BYTE PTR [rax],al
   14003d750:	call   0x14003db93
   14003d755:	add    BYTE PTR [rax],al
   14003d757:	add    BYTE PTR [rax],al
   14003d759:	add    BYTE PTR [rax],al
   14003d75b:	add    BYTE PTR [rbx],al
   14003d75d:	add    BYTE PTR [rax],al
   14003d75f:	add    al,dh
   14003d761:	ds add al,0x0
   14003d764:	and    BYTE PTR [rax],al
   14003d766:	add    BYTE PTR [rax],al
   14003d768:	add    BYTE PTR [rax],al
   14003d76a:	add    BYTE PTR [rax],al
   14003d76c:	add    DWORD PTR [rax],eax
   14003d76e:	add    BYTE PTR [rax],al
   14003d770:	and    al,BYTE PTR [rip+0x41993]        # 0x14007f109
   14003d776:	add    BYTE PTR [rax],al
   14003d778:	call   0x14203db9c
   14003d77d:	add    BYTE PTR [rax],al
   14003d77f:	add    BYTE PTR [rsi+rdi*1],ah
   14003d782:	add    al,0x0
   14003d784:	or     BYTE PTR [rax],al
   14003d786:	add    BYTE PTR [rax],al
   14003d788:	cmp    BYTE PTR [rsi],0x4
   14003d78b:	add    BYTE PTR [rax],ah
   14003d78d:	add    BYTE PTR [rax],al
   14003d78f:	add    BYTE PTR [rax],al
   14003d791:	add    BYTE PTR [rax],al
   14003d793:	add    BYTE PTR [rcx],al
   14003d795:	add    BYTE PTR [rax],al
   14003d797:	add    BYTE PTR [rdx],ah
   14003d799:	add    eax,0x21993
   14003d79e:	add    BYTE PTR [rax],al
   14003d7a0:	adc    BYTE PTR [rdx],ah
   14003d7a2:	add    al,0x0
   14003d7a4:	add    DWORD PTR [rax],eax
   14003d7a6:	add    BYTE PTR [rax],al
   14003d7a8:	test   al,0x3d
   14003d7aa:	add    al,0x0
   14003d7ac:	add    eax,0xd0000000
   14003d7b1:	cmp    eax,0x200004
   14003d7b6:	add    BYTE PTR [rax],al
   14003d7b8:	add    BYTE PTR [rax],al
   14003d7ba:	add    BYTE PTR [rax],al
   14003d7bc:	add    DWORD PTR [rax],eax
   14003d7be:	add    BYTE PTR [rax],al
   14003d7c0:	and    al,BYTE PTR [rip+0x41993]        # 0x14007f159
   14003d7c6:	add    BYTE PTR [rax],al
   14003d7c8:	int3   
   14003d7c9:	cmp    al,0x4
   14003d7cb:	add    BYTE PTR [rcx],al
   14003d7cd:	add    BYTE PTR [rax],al
   14003d7cf:	add    ah,ch
   14003d7d1:	cmp    al,0x4
   14003d7d3:	add    BYTE PTR [rax+rax*1],cl
   14003d7d6:	add    BYTE PTR [rax],al
   14003d7d8:	and    BYTE PTR [rip+0x200004],bh        # 0x14023d7e2
   14003d7de:	add    BYTE PTR [rax],al
   14003d7e0:	add    BYTE PTR [rax],al
   14003d7e2:	add    BYTE PTR [rax],al
   14003d7e4:	add    DWORD PTR [rax],eax
   14003d7e6:	add    BYTE PTR [rax],al
   14003d7e8:	and    al,BYTE PTR [rip+0x21993]        # 0x14005f181
   14003d7ee:	add    BYTE PTR [rax],al
   14003d7f0:	adc    BYTE PTR [rdx],ah
   14003d7f2:	add    al,0x0
   14003d7f4:	add    DWORD PTR [rax],eax
   14003d7f6:	add    BYTE PTR [rax],al
   14003d7f8:	push   rax
   14003d7f9:	cmp    al,0x4
   14003d7fb:	add    BYTE PTR [rax+rax*1],al
   14003d7fe:	add    BYTE PTR [rax],al
   14003d800:	js     0x14003d83e
   14003d802:	add    al,0x0
   14003d804:	and    BYTE PTR [rax],al
   14003d806:	add    BYTE PTR [rax],al
   14003d808:	add    BYTE PTR [rax],al
   14003d80a:	add    BYTE PTR [rax],al
   14003d80c:	add    DWORD PTR [rax],eax
   14003d80e:	add    BYTE PTR [rax],al
   14003d810:	and    al,BYTE PTR [rip+0x21993]        # 0x14005f1a9
   14003d816:	add    BYTE PTR [rax],al
   14003d818:	adc    BYTE PTR [rdx],ah
   14003d81a:	add    al,0x0
   14003d81c:	add    DWORD PTR [rax],eax
   14003d81e:	add    BYTE PTR [rax],al
   14003d820:	fdivr  DWORD PTR [rbx]
   14003d822:	add    al,0x0
   14003d824:	add    eax,0x0
   14003d829:	cmp    al,0x4
   14003d82b:	add    BYTE PTR [rax],dh
   14003d82d:	add    BYTE PTR [rax],al
   14003d82f:	add    BYTE PTR [rax],al
   14003d831:	add    BYTE PTR [rax],al
   14003d833:	add    BYTE PTR [rcx],al
   14003d835:	add    BYTE PTR [rax],al
   14003d837:	add    BYTE PTR [rdx],ah
   14003d839:	add    eax,0x21993
   14003d83e:	add    BYTE PTR [rax],al
   14003d840:	adc    BYTE PTR [rdx],ah
   14003d842:	add    al,0x0
   14003d844:	add    DWORD PTR [rax],eax
   14003d846:	add    BYTE PTR [rax],al
   14003d848:	push   rsp
   14003d849:	cmp    eax,DWORD PTR [rax+rax*1]
   14003d84c:	add    eax,0x80000000
   14003d851:	cmp    eax,DWORD PTR [rax+rax*1]
   14003d854:	and    BYTE PTR [rax],al
   14003d856:	add    BYTE PTR [rax],al
   14003d858:	add    BYTE PTR [rax],al
   14003d85a:	add    BYTE PTR [rax],al
   14003d85c:	add    DWORD PTR [rax],eax
   14003d85e:	add    BYTE PTR [rax],al
   14003d860:	and    al,BYTE PTR [rip+0x21993]        # 0x14005f1f9
   14003d866:	add    BYTE PTR [rax],al
   14003d868:	adc    BYTE PTR [rdx],ah
   14003d86a:	add    al,0x0
   14003d86c:	add    DWORD PTR [rax],eax
   14003d86e:	add    BYTE PTR [rax],al
   14003d870:	(bad)  
   14003d871:	cmp    al,BYTE PTR [rax+rax*1]
   14003d874:	add    eax,0x0
   14003d879:	cmp    eax,DWORD PTR [rax+rax*1]
   14003d87c:	and    BYTE PTR [rax],al
   14003d87e:	add    BYTE PTR [rax],al
   14003d880:	add    BYTE PTR [rax],al
   14003d882:	add    BYTE PTR [rax],al
   14003d884:	add    DWORD PTR [rax],eax
   14003d886:	add    BYTE PTR [rax],al
   14003d888:	and    al,BYTE PTR [rip+0x51993]        # 0x14008f221
   14003d88e:	add    BYTE PTR [rax],al
   14003d890:	sub    BYTE PTR [rdx],bh
   14003d892:	add    al,0x0
	...
   14003d89c:	or     al,0x0
   14003d89e:	add    BYTE PTR [rax],al
   14003d8a0:	push   rax
   14003d8a1:	cmp    al,BYTE PTR [rax+rax*1]
   14003d8a4:	js     0x14003d8a6
   14003d8a6:	add    BYTE PTR [rax],al
   14003d8a8:	add    BYTE PTR [rax],al
   14003d8aa:	add    BYTE PTR [rax],al
   14003d8ac:	add    DWORD PTR [rax],eax
   14003d8ae:	add    BYTE PTR [rax],al
   14003d8b0:	and    al,BYTE PTR [rip+0x41993]        # 0x14007f249
   14003d8b6:	add    BYTE PTR [rax],al
   14003d8b8:	cmp    BYTE PTR [rcx],0x4
	...
   14003d8c3:	add    BYTE PTR [rdx],cl
   14003d8c5:	add    BYTE PTR [rax],al
   14003d8c7:	add    BYTE PTR [rax+0x78000439],ah
   14003d8cd:	add    BYTE PTR [rax],al
   14003d8cf:	add    BYTE PTR [rax],al
   14003d8d1:	add    BYTE PTR [rax],al
   14003d8d3:	add    BYTE PTR [rcx],al
   14003d8d5:	add    BYTE PTR [rax],al
   14003d8d7:	add    BYTE PTR [rdx],ah
   14003d8d9:	add    eax,0x31993
   14003d8de:	add    BYTE PTR [rax],al
   14003d8e0:	int3   
   14003d8e1:	cmp    BYTE PTR [rax+rax*1],al
	...
   14003d8ec:	or     eax,0xf0000000
   14003d8f1:	cmp    BYTE PTR [rax+rax*1],al
   14003d8f4:	(bad)  
   14003d8f5:	add    BYTE PTR [rax],al
   14003d8f7:	add    BYTE PTR [rax],al
   14003d8f9:	add    BYTE PTR [rax],al
   14003d8fb:	add    BYTE PTR [rcx],al
   14003d8fd:	add    BYTE PTR [rax],al
   14003d8ff:	add    BYTE PTR [rdx],ah
   14003d901:	add    eax,0x31993
   14003d906:	add    BYTE PTR [rax],al
   14003d908:	hlt    
   14003d909:	(bad)  
   14003d90a:	add    al,0x0
   14003d90c:	add    DWORD PTR [rax],eax
   14003d90e:	add    BYTE PTR [rax],al
   14003d910:	or     al,0x38
   14003d912:	add    al,0x0
   14003d914:	or     eax,DWORD PTR [rax]
   14003d916:	add    BYTE PTR [rax],al
   14003d918:	cmp    BYTE PTR [rax+rax*1],al
   14003d91c:	cmp    BYTE PTR [rax],al
   14003d91e:	add    BYTE PTR [rax],al
   14003d920:	add    BYTE PTR [rax],al
   14003d922:	add    BYTE PTR [rax],al
   14003d924:	add    DWORD PTR [rax],eax
   14003d926:	add    BYTE PTR [rax],al
   14003d928:	and    al,BYTE PTR [rip+0x31993]        # 0x14006f2c1
   14003d92e:	add    BYTE PTR [rax],al
   14003d930:	and    al,0x37
   14003d932:	add    al,0x0
   14003d934:	add    DWORD PTR [rax],eax
   14003d936:	add    BYTE PTR [rax],al
   14003d938:	cmp    al,0x37
   14003d93a:	add    al,0x0
   14003d93c:	or     eax,DWORD PTR [rax]
   14003d93e:	add    BYTE PTR [rax],al
   14003d940:	jo     0x14003d979
   14003d942:	add    al,0x0
   14003d944:	test   al,0x0
   14003d946:	add    BYTE PTR [rax],al
   14003d948:	add    BYTE PTR [rax],al
   14003d94a:	add    BYTE PTR [rax],al
   14003d94c:	add    DWORD PTR [rax],eax
   14003d94e:	add    BYTE PTR [rax],al
   14003d950:	and    al,BYTE PTR [rip+0x21993]        # 0x14005f2e9
   14003d956:	add    BYTE PTR [rax],al
   14003d958:	(bad)  
   14003d959:	ss add al,0x0
	...
   14003d964:	add    eax,0xd8000000
   14003d969:	ss add al,0x0
   14003d96c:	and    BYTE PTR [rax],al
   14003d96e:	add    BYTE PTR [rax],al
   14003d970:	add    BYTE PTR [rax],al
   14003d972:	add    BYTE PTR [rax],al
   14003d974:	add    DWORD PTR [rax],eax
   14003d976:	add    BYTE PTR [rax],al
   14003d978:	and    al,BYTE PTR [rip+0x31993]        # 0x14006f311
   14003d97e:	add    BYTE PTR [rax],al
   14003d980:	sbb    al,0x36
   14003d982:	add    al,0x0
	...
   14003d98c:	(bad)  
   14003d98d:	add    BYTE PTR [rax],al
   14003d98f:	add    BYTE PTR [rax+0x28000436],al
   14003d995:	add    BYTE PTR [rax],al
   14003d997:	add    BYTE PTR [rax],al
   14003d999:	add    BYTE PTR [rax],al
   14003d99b:	add    BYTE PTR [rcx],al
   14003d99d:	add    BYTE PTR [rax],al
   14003d99f:	add    BYTE PTR [rdx],ah
   14003d9a1:	add    eax,0x31993
   14003d9a6:	add    BYTE PTR [rax],al
   14003d9a8:	sbb    al,0x36
   14003d9aa:	add    al,0x0
	...
   14003d9b4:	(bad)  
   14003d9b5:	add    BYTE PTR [rax],al
   14003d9b7:	add    BYTE PTR [rax],bh
   14003d9b9:	ss add al,0x0
   14003d9bc:	sub    BYTE PTR [rax],al
   14003d9be:	add    BYTE PTR [rax],al
   14003d9c0:	add    BYTE PTR [rax],al
   14003d9c2:	add    BYTE PTR [rax],al
   14003d9c4:	add    DWORD PTR [rax],eax
   14003d9c6:	add    BYTE PTR [rax],al
   14003d9c8:	and    al,BYTE PTR [rip+0x11993]        # 0x14004f361
   14003d9ce:	add    BYTE PTR [rax],al
   14003d9d0:	in     al,0x35
   14003d9d2:	add    al,0x0
	...
   14003d9dc:	add    eax,DWORD PTR [rax]
   14003d9de:	add    BYTE PTR [rax],al
   14003d9e0:	lock xor eax,0x480004
   14003d9e6:	add    BYTE PTR [rax],al
   14003d9e8:	add    BYTE PTR [rax],al
   14003d9ea:	add    BYTE PTR [rax],al
   14003d9ec:	add    DWORD PTR [rax],eax
   14003d9ee:	add    BYTE PTR [rax],al
   14003d9f0:	and    al,BYTE PTR [rip+0x21993]        # 0x14005f389
   14003d9f6:	add    BYTE PTR [rax],al
   14003d9f8:	mov    BYTE PTR [rip+0x4],dh        # 0x14003da02
   14003d9fe:	add    BYTE PTR [rax],al
   14003da00:	add    BYTE PTR [rax],al
   14003da02:	add    BYTE PTR [rax],al
   14003da04:	add    eax,0x98000000
   14003da09:	xor    eax,0x200004
   14003da0e:	add    BYTE PTR [rax],al
   14003da10:	add    BYTE PTR [rax],al
   14003da12:	add    BYTE PTR [rax],al
   14003da14:	add    DWORD PTR [rax],eax
   14003da16:	add    BYTE PTR [rax],al
   14003da18:	and    al,BYTE PTR [rip+0x11993]        # 0x14004f3b1
   14003da1e:	add    BYTE PTR [rax],al
   14003da20:	cmp    BYTE PTR [rip+0x4],dh        # 0x14003da2a
   14003da26:	add    BYTE PTR [rax],al
   14003da28:	add    BYTE PTR [rax],al
   14003da2a:	add    BYTE PTR [rax],al
   14003da2c:	add    eax,0x40000000
   14003da31:	xor    eax,0x780004
   14003da36:	add    BYTE PTR [rax],al
   14003da38:	add    BYTE PTR [rax],al
   14003da3a:	add    BYTE PTR [rax],al
   14003da3c:	add    DWORD PTR [rax],eax
   14003da3e:	add    BYTE PTR [rax],al
   14003da40:	and    al,BYTE PTR [rip+0x71993]        # 0x1400af3d9
   14003da46:	add    BYTE PTR [rax],al
   14003da48:	jl     0x14003da7e
   14003da4a:	add    al,0x0
	...
   14003da54:	or     al,BYTE PTR [rax]
   14003da56:	add    BYTE PTR [rax],al
   14003da58:	shl    BYTE PTR [rsp+rax*1],0x0
   14003da5c:	push   rax
   14003da5d:	add    BYTE PTR [rax],al
   14003da5f:	add    BYTE PTR [rax],al
   14003da61:	add    BYTE PTR [rax],al
   14003da63:	add    BYTE PTR [rcx],al
   14003da65:	add    BYTE PTR [rax],al
   14003da67:	add    BYTE PTR [rdx],ah
   14003da69:	add    eax,0x31993
   14003da6e:	add    BYTE PTR [rax],al
   14003da70:	adc    BYTE PTR [rsp+rax*1],dh
	...
   14003da7b:	add    BYTE PTR [rsi],al
   14003da7d:	add    BYTE PTR [rax],al
   14003da7f:	add    BYTE PTR [rax],ch
   14003da81:	xor    al,0x4
   14003da83:	add    BYTE PTR [rax+0x0],al
   14003da86:	add    BYTE PTR [rax],al
   14003da88:	add    BYTE PTR [rax],al
   14003da8a:	add    BYTE PTR [rax],al
   14003da8c:	add    DWORD PTR [rax],eax
   14003da8e:	add    BYTE PTR [rax],al
   14003da90:	and    al,BYTE PTR [rip+0x31993]        # 0x14006f429
   14003da96:	add    BYTE PTR [rax],al
   14003da98:	nop
   14003da99:	xor    eax,DWORD PTR [rax+rax*1]
	...
   14003daa4:	or     BYTE PTR [rax],al
   14003daa6:	add    BYTE PTR [rax],al
   14003daa8:	mov    al,0x33
   14003daaa:	add    al,0x0
   14003daac:	xor    BYTE PTR [rax],al
   14003daae:	add    BYTE PTR [rax],al
   14003dab0:	add    BYTE PTR [rax],al
   14003dab2:	add    BYTE PTR [rax],al
   14003dab4:	add    DWORD PTR [rax],eax
   14003dab6:	add    BYTE PTR [rax],al
   14003dab8:	and    al,BYTE PTR [rip+0x21993]        # 0x14005f451
   14003dabe:	add    BYTE PTR [rax],al
   14003dac0:	rex xor eax,DWORD PTR [rax+rax*1]
	...
   14003dacc:	add    al,0x0
   14003dace:	add    BYTE PTR [rax],al
   14003dad0:	push   rax
   14003dad1:	xor    eax,DWORD PTR [rax+rax*1]
   14003dad4:	rex.W add BYTE PTR [rax],al
   14003dad7:	add    BYTE PTR [rax],al
   14003dad9:	add    BYTE PTR [rax],al
   14003dadb:	add    BYTE PTR [rcx],al
   14003dadd:	add    BYTE PTR [rax],al
   14003dadf:	add    BYTE PTR [rdx],ah
   14003dae1:	add    eax,0x111993
   14003dae6:	add    BYTE PTR [rax],al
   14003dae8:	test   al,0x30
   14003daea:	add    al,0x0
   14003daec:	add    al,BYTE PTR [rax]
   14003daee:	add    BYTE PTR [rax],al
   14003daf0:	xor    BYTE PTR [rcx],dh
   14003daf2:	add    al,0x0
   14003daf4:	add    BYTE PTR cs:[rax],al
   14003daf7:	add    BYTE PTR [rax-0x4ffffbcf],al
   14003dafd:	add    DWORD PTR [rax],eax
   14003daff:	add    BYTE PTR [rax],al
   14003db01:	add    BYTE PTR [rax],al
   14003db03:	add    BYTE PTR [rcx],al
   14003db05:	add    BYTE PTR [rax],al
   14003db07:	add    BYTE PTR [rdx],ah
   14003db09:	add    eax,0x51993
   14003db0e:	add    BYTE PTR [rax],al
   14003db10:	push   0x100042d
   14003db15:	add    BYTE PTR [rax],al
   14003db17:	add    BYTE PTR [rax+0x1200042d],dl
   14003db1d:	add    BYTE PTR [rax],al
   14003db1f:	add    al,al
   14003db21:	sub    eax,0x480004
   14003db26:	add    BYTE PTR [rax],al
   14003db28:	add    BYTE PTR [rax],al
   14003db2a:	add    BYTE PTR [rax],al
   14003db2c:	add    DWORD PTR [rax],eax
   14003db2e:	add    BYTE PTR [rax],al
   14003db30:	and    al,BYTE PTR [rip+0x61993]        # 0x14009f4c9
   14003db36:	add    BYTE PTR [rax],al
   14003db38:	sub    al,0x4
   14003db3b:	add    BYTE PTR [rcx],al
   14003db3d:	add    BYTE PTR [rax],al
   14003db3f:	add    BYTE PTR [rax+0x2c],dh
   14003db42:	add    al,0x0
   14003db44:	(bad)  
   14003db45:	add    BYTE PTR [rax],al
   14003db47:	add    BYTE PTR [rax-0x1ffffbd4],ah
   14003db4d:	add    BYTE PTR [rax],al
   14003db4f:	add    BYTE PTR [rax],al
   14003db51:	add    BYTE PTR [rax],al
   14003db53:	add    BYTE PTR [rcx],al
   14003db55:	add    BYTE PTR [rax],al
   14003db57:	add    BYTE PTR [rdx],ah
   14003db59:	add    eax,0xf1993
   14003db5e:	add    BYTE PTR [rax],al
   14003db60:	cwde   
   14003db61:	cs add al,0x0
   14003db64:	add    DWORD PTR [rax],eax
   14003db66:	add    BYTE PTR [rax],al
   14003db68:	adc    BYTE PTR [rdi],ch
   14003db6a:	add    al,0x0
   14003db6c:	and    al,BYTE PTR [rax]
   14003db6e:	add    BYTE PTR [rax],al
   14003db70:	rex (bad) 
   14003db72:	add    al,0x0
   14003db74:	sub    BYTE PTR [rcx],al
   14003db76:	add    BYTE PTR [rax],al
   14003db78:	add    BYTE PTR [rax],al
   14003db7a:	add    BYTE PTR [rax],al
   14003db7c:	add    DWORD PTR [rax],eax
   14003db7e:	add    BYTE PTR [rax],al
   14003db80:	and    al,BYTE PTR [rip+0x21993]        # 0x14005f519
   14003db86:	add    BYTE PTR [rax],al
   14003db88:	adc    BYTE PTR [rdx],ah
   14003db8a:	add    al,0x0
   14003db8c:	add    DWORD PTR [rax],eax
   14003db8e:	add    BYTE PTR [rax],al
   14003db90:	js     0x14003dbda
   14003db92:	add    al,0x0
   14003db94:	add    al,0x0
   14003db96:	add    BYTE PTR [rax],al
   14003db98:	movabs al,ds:0x20000448
   14003dba1:	add    BYTE PTR [rax],al
   14003dba3:	add    BYTE PTR [rcx],al
   14003dba5:	add    BYTE PTR [rax],al
   14003dba7:	add    BYTE PTR [rdx],ah
   14003dba9:	add    eax,0x71993
   14003dbae:	add    BYTE PTR [rax],al
   14003dbb0:	mov    WORD PTR [rdi+0x4],es
	...
   14003dbbb:	add    BYTE PTR [rdi],cl
   14003dbbd:	add    BYTE PTR [rax],al
   14003dbbf:	add    al,dl
   14003dbc1:	rex.RXB add al,0x0
   14003dbc4:	clc    
   14003dbc5:	add    BYTE PTR [rax],al
   14003dbc7:	add    BYTE PTR [rax],al
   14003dbc9:	add    BYTE PTR [rax],al
   14003dbcb:	add    BYTE PTR [rcx],al
   14003dbcd:	add    BYTE PTR [rax],al
   14003dbcf:	add    BYTE PTR [rdx],ah
   14003dbd1:	add    eax,0x71993
   14003dbd6:	add    BYTE PTR [rax],al
   14003dbd8:	cmp    al,0x46
   14003dbda:	add    al,0x0
   14003dbdc:	add    al,BYTE PTR [rax]
   14003dbde:	add    BYTE PTR [rax],al
   14003dbe0:	je     0x14003dc28
   14003dbe2:	add    al,0x0
   14003dbe4:	adc    BYTE PTR [rax],al
   14003dbe6:	add    BYTE PTR [rax],al
   14003dbe8:	rol    BYTE PTR [rsi+0x4],1
   14003dbeb:	add    BYTE PTR [rax+0x0],dh
   14003dbee:	add    BYTE PTR [rax],al
   14003dbf0:	add    BYTE PTR [rax],al
   14003dbf2:	add    BYTE PTR [rax],al
   14003dbf4:	add    DWORD PTR [rax],eax
   14003dbf6:	add    BYTE PTR [rax],al
   14003dbf8:	and    al,BYTE PTR [rip+0x11993]        # 0x14004f591
   14003dbfe:	add    BYTE PTR [rax],al
   14003dc00:	hlt    
   14003dc01:	rex.RB add al,0x0
	...
   14003dc0c:	add    eax,DWORD PTR [rax]
   14003dc0e:	add    BYTE PTR [rax],al
   14003dc10:	add    BYTE PTR [rsi+0x4],al
   14003dc13:	add    BYTE PTR [rax],bh
   14003dc15:	add    BYTE PTR [rax],al
   14003dc17:	add    BYTE PTR [rax],al
   14003dc19:	add    BYTE PTR [rax],al
   14003dc1b:	add    BYTE PTR [rcx],al
   14003dc1d:	add    BYTE PTR [rax],al
   14003dc1f:	add    BYTE PTR [rdx],ah
   14003dc21:	add    eax,0x41993
   14003dc26:	add    BYTE PTR [rax],al
   14003dc28:	adc    al,0x45
   14003dc2a:	add    al,0x0
   14003dc2c:	add    DWORD PTR [rax],eax
   14003dc2e:	add    BYTE PTR [rax],al
   14003dc30:	xor    al,0x45
   14003dc32:	add    al,0x0
   14003dc34:	or     al,0x0
   14003dc36:	add    BYTE PTR [rax],al
   14003dc38:	(bad)  
   14003dc39:	rex.RB add al,0x0
   14003dc3c:	and    BYTE PTR [rax],al
   14003dc3e:	add    BYTE PTR [rax],al
   14003dc40:	add    BYTE PTR [rax],al
   14003dc42:	add    BYTE PTR [rax],al
   14003dc44:	add    DWORD PTR [rax],eax
   14003dc46:	add    BYTE PTR [rax],al
   14003dc48:	and    al,BYTE PTR [rip+0x51993]        # 0x14008f5e1
   14003dc4e:	add    BYTE PTR [rax],al
   14003dc50:	cld    
   14003dc51:	rex.XB add al,0x0
   14003dc54:	add    DWORD PTR [rax],eax
   14003dc56:	add    BYTE PTR [rax],al
   14003dc58:	and    al,0x44
   14003dc5a:	add    al,0x0
   14003dc5c:	adc    al,BYTE PTR [rax]
   14003dc5e:	add    BYTE PTR [rax],al
   14003dc60:	push   rax
   14003dc61:	rex.R add al,0x0
   14003dc64:	push   rax
   14003dc65:	add    BYTE PTR [rax],al
   14003dc67:	add    BYTE PTR [rax],al
   14003dc69:	add    BYTE PTR [rax],al
   14003dc6b:	add    BYTE PTR [rcx],al
   14003dc6d:	add    BYTE PTR [rax],al
   14003dc6f:	add    BYTE PTR [rdx],ah
   14003dc71:	add    eax,0x21993
   14003dc76:	add    BYTE PTR [rax],al
   14003dc78:	nop
   14003dc79:	rex.XB add al,0x0
	...
   14003dc84:	add    eax,0xa0000000
   14003dc89:	rex.XB add al,0x0
   14003dc8c:	and    BYTE PTR [rax],al
   14003dc8e:	add    BYTE PTR [rax],al
   14003dc90:	add    BYTE PTR [rax],al
   14003dc92:	add    BYTE PTR [rax],al
   14003dc94:	add    DWORD PTR [rax],eax
   14003dc96:	add    BYTE PTR [rax],al
   14003dc98:	and    al,BYTE PTR [rip+0x11993]        # 0x14004f631
   14003dc9e:	add    BYTE PTR [rax],al
   14003dca0:	movabs al,ds:0x442
   14003dca9:	add    BYTE PTR [rax],al
   14003dcab:	add    BYTE PTR [rbx],al
   14003dcad:	add    BYTE PTR [rax],al
   14003dcaf:	add    BYTE PTR [rax+0x43],ah
   14003dcb2:	add    al,0x0
   14003dcb4:	and    BYTE PTR [rax],al
   14003dcb6:	add    BYTE PTR [rax],al
   14003dcb8:	add    BYTE PTR [rax],al
   14003dcba:	add    BYTE PTR [rax],al
   14003dcbc:	add    DWORD PTR [rax],eax
   14003dcbe:	add    BYTE PTR [rax],al
   14003dcc0:	and    al,BYTE PTR [rip+0x11993]        # 0x14004f659
   14003dcc6:	add    BYTE PTR [rax],al
   14003dcc8:	movabs al,ds:0x442
   14003dcd1:	add    BYTE PTR [rax],al
   14003dcd3:	add    BYTE PTR [rbx],al
   14003dcd5:	add    BYTE PTR [rax],al
   14003dcd7:	add    BYTE PTR [rax],bh
   14003dcd9:	rex.XB add al,0x0
   14003dcdc:	and    BYTE PTR [rax],al
   14003dcde:	add    BYTE PTR [rax],al
   14003dce0:	add    BYTE PTR [rax],al
   14003dce2:	add    BYTE PTR [rax],al
   14003dce4:	add    DWORD PTR [rax],eax
   14003dce6:	add    BYTE PTR [rax],al
   14003dce8:	and    al,BYTE PTR [rip+0x21993]        # 0x14005f681
   14003dcee:	add    BYTE PTR [rax],al
   14003dcf0:	in     al,0x42
   14003dcf2:	add    al,0x0
	...
   14003dcfc:	add    eax,0xf8000000
   14003dd01:	rex.X add al,0x0
   14003dd04:	mov    BYTE PTR [rax],al
   14003dd06:	add    BYTE PTR [rax],al
   14003dd08:	add    BYTE PTR [rax],al
   14003dd0a:	add    BYTE PTR [rax],al
   14003dd0c:	add    DWORD PTR [rax],eax
   14003dd0e:	add    BYTE PTR [rax],al
   14003dd10:	and    al,BYTE PTR [rip+0x11993]        # 0x14004f6a9
   14003dd16:	add    BYTE PTR [rax],al
   14003dd18:	movabs al,ds:0x442
   14003dd21:	add    BYTE PTR [rax],al
   14003dd23:	add    BYTE PTR [rbx],al
   14003dd25:	add    BYTE PTR [rax],al
   14003dd27:	add    BYTE PTR [rax+0x48000442],ch
   14003dd2d:	add    BYTE PTR [rax],al
   14003dd2f:	add    BYTE PTR [rax],al
   14003dd31:	add    BYTE PTR [rax],al
   14003dd33:	add    BYTE PTR [rcx],al
   14003dd35:	add    BYTE PTR [rax],al
   14003dd37:	add    BYTE PTR [rdx],ah
   14003dd39:	add    eax,0x11993
   14003dd3e:	add    BYTE PTR [rax],al
   14003dd40:	pop    rax
   14003dd41:	rex.X add al,0x0
	...
   14003dd4c:	add    eax,DWORD PTR [rax]
   14003dd4e:	add    BYTE PTR [rax],al
   14003dd50:	(bad)  
   14003dd51:	rex.X add al,0x0
   14003dd54:	rex.W add BYTE PTR [rax],al
   14003dd57:	add    BYTE PTR [rax],al
   14003dd59:	add    BYTE PTR [rax],al
   14003dd5b:	add    BYTE PTR [rcx],al
   14003dd5d:	add    BYTE PTR [rax],al
   14003dd5f:	add    BYTE PTR [rdx],ah
   14003dd61:	add    eax,0x51993
   14003dd66:	add    BYTE PTR [rax],al
   14003dd68:	mov    eax,0x441
   14003dd6d:	add    BYTE PTR [rax],al
   14003dd6f:	add    BYTE PTR [rax],al
   14003dd71:	add    BYTE PTR [rax],al
   14003dd73:	add    BYTE PTR [rbx],cl
   14003dd75:	add    BYTE PTR [rax],al
   14003dd77:	add    al,ah
   14003dd79:	rex.B add al,0x0
   14003dd7c:	add    BYTE PTR [rax],al
   14003dd7f:	add    BYTE PTR [rax],al
   14003dd81:	add    BYTE PTR [rax],al
   14003dd83:	add    BYTE PTR [rcx],al
   14003dd85:	add    BYTE PTR [rax],al
   14003dd87:	add    BYTE PTR [rdx],ah
   14003dd89:	add    eax,0x21993
   14003dd8e:	add    BYTE PTR [rax],al
   14003dd90:	adc    BYTE PTR [rdx],ah
   14003dd92:	add    al,0x0
   14003dd94:	add    DWORD PTR [rax],eax
   14003dd96:	add    BYTE PTR [rax],al
   14003dd98:	ror    BYTE PTR [rsp+rax*1+0x0],0x5
   14003dd9d:	add    BYTE PTR [rax],al
   14003dd9f:	add    al,ch
   14003dda1:	rex.WR add al,0x0
   14003dda4:	and    BYTE PTR [rax],al
   14003dda6:	add    BYTE PTR [rax],al
   14003dda8:	add    BYTE PTR [rax],al
   14003ddaa:	add    BYTE PTR [rax],al
   14003ddac:	add    DWORD PTR [rax],eax
   14003ddae:	add    BYTE PTR [rax],al
   14003ddb0:	and    al,BYTE PTR [rip+0x21993]        # 0x14005f749
   14003ddb6:	add    BYTE PTR [rax],al
   14003ddb8:	adc    BYTE PTR [rdx],ah
   14003ddba:	add    al,0x0
   14003ddbc:	add    DWORD PTR [rax],eax
   14003ddbe:	add    BYTE PTR [rax],al
   14003ddc0:	rex.WR
   14003ddc1:	rex.WR add al,0x0
   14003ddc4:	add    eax,0x78000000
   14003ddc9:	rex.WR add al,0x0
   14003ddcc:	and    BYTE PTR [rax],al
   14003ddce:	add    BYTE PTR [rax],al
   14003ddd0:	add    BYTE PTR [rax],al
   14003ddd2:	add    BYTE PTR [rax],al
   14003ddd4:	add    DWORD PTR [rax],eax
   14003ddd6:	add    BYTE PTR [rax],al
   14003ddd8:	and    al,BYTE PTR [rip+0x21993]        # 0x14005f771
   14003ddde:	add    BYTE PTR [rax],al
   14003dde0:	adc    BYTE PTR [rdx],ah
   14003dde2:	add    al,0x0
   14003dde4:	add    DWORD PTR [rax],eax
   14003dde6:	add    BYTE PTR [rax],al
   14003dde8:	ror    BYTE PTR [rbx+0x4],0x0
   14003ddec:	add    eax,0xe8000000
   14003ddf1:	rex.WXB add al,0x0
   14003ddf4:	and    BYTE PTR [rax],al
   14003ddf6:	add    BYTE PTR [rax],al
   14003ddf8:	add    BYTE PTR [rax],al
   14003ddfa:	add    BYTE PTR [rax],al
   14003ddfc:	add    DWORD PTR [rax],eax
   14003ddfe:	add    BYTE PTR [rax],al
   14003de00:	and    al,BYTE PTR [rip+0x21993]        # 0x14005f799
   14003de06:	add    BYTE PTR [rax],al
   14003de08:	adc    BYTE PTR [rdx],ah
   14003de0a:	add    al,0x0
   14003de0c:	add    DWORD PTR [rax],eax
   14003de0e:	add    BYTE PTR [rax],al
   14003de10:	rex
   14003de11:	rex.WXB add al,0x0
   14003de14:	add    eax,0x68000000
   14003de19:	rex.WXB add al,0x0
   14003de1c:	and    BYTE PTR [rax],al
   14003de1e:	add    BYTE PTR [rax],al
   14003de20:	add    BYTE PTR [rax],al
   14003de22:	add    BYTE PTR [rax],al
   14003de24:	add    DWORD PTR [rax],eax
   14003de26:	add    BYTE PTR [rax],al
   14003de28:	and    al,BYTE PTR [rip+0x11993]        # 0x14004f7c1
   14003de2e:	add    BYTE PTR [rax],al
   14003de30:	ror    BYTE PTR [rcx+0x4],1
	...
   14003de3b:	add    BYTE PTR [rbx],al
   14003de3d:	add    BYTE PTR [rax],al
   14003de3f:	add    al,bl
   14003de41:	rex.WB add al,0x0
   14003de44:	and    BYTE PTR [rax],al
   14003de46:	add    BYTE PTR [rax],al
   14003de48:	add    BYTE PTR [rax],al
   14003de4a:	add    BYTE PTR [rax],al
   14003de4c:	add    DWORD PTR [rax],eax
   14003de4e:	add    BYTE PTR [rax],al
   14003de50:	and    al,BYTE PTR [rip+0x21993]        # 0x14005f7e9
   14003de56:	add    BYTE PTR [rax],al
   14003de58:	or     BYTE PTR [rdx+0x4],cl
	...
   14003de63:	add    BYTE PTR [rip+0x18000000],al        # 0x15803de69
   14003de69:	rex.WX add al,0x0
   14003de6c:	sub    BYTE PTR [rax],al
   14003de6e:	add    BYTE PTR [rax],al
   14003de70:	add    BYTE PTR [rax],al
   14003de72:	add    BYTE PTR [rax],al
   14003de74:	add    DWORD PTR [rax],eax
   14003de76:	add    BYTE PTR [rax],al
   14003de78:	and    al,BYTE PTR [rip+0x21993]        # 0x14005f811
   14003de7e:	add    BYTE PTR [rax],al
   14003de80:	pop    rsp
   14003de81:	rex.WX add al,0x0
	...
   14003de8c:	add    eax,0x70000000
   14003de91:	rex.WX add al,0x0
   14003de94:	sub    BYTE PTR [rax],al
   14003de96:	add    BYTE PTR [rax],al
   14003de98:	add    BYTE PTR [rax],al
   14003de9a:	add    BYTE PTR [rax],al
   14003de9c:	add    DWORD PTR [rax],eax
   14003de9e:	add    BYTE PTR [rax],al
   14003dea0:	and    al,BYTE PTR [rip+0x11993]        # 0x14004f839
   14003dea6:	add    BYTE PTR [rax],al
   14003dea8:	movabs al,ds:0x442
   14003deb1:	add    BYTE PTR [rax],al
   14003deb3:	add    BYTE PTR [rbx],al
   14003deb5:	add    BYTE PTR [rax],al
   14003deb7:	add    BYTE PTR [rax+0x2000044a],dh
   14003debd:	add    BYTE PTR [rax],al
   14003debf:	add    BYTE PTR [rax],al
   14003dec1:	add    BYTE PTR [rax],al
   14003dec3:	add    BYTE PTR [rcx],al
   14003dec5:	add    BYTE PTR [rax],al
   14003dec7:	add    BYTE PTR [rdx],ah
   14003dec9:	add    eax,0x11993
   14003dece:	add    BYTE PTR [rax],al
   14003ded0:	movabs al,ds:0x442
   14003ded9:	add    BYTE PTR [rax],al
   14003dedb:	add    BYTE PTR [rip+0xffffffffd8000000],al        # 0x11803dee1
   14003dee1:	rex.WX add al,0x0
   14003dee4:	and    BYTE PTR [rax],al
   14003dee6:	add    BYTE PTR [rax],al
   14003dee8:	add    BYTE PTR [rax],al
   14003deea:	add    BYTE PTR [rax],al
   14003deec:	add    DWORD PTR [rax],eax
   14003deee:	add    BYTE PTR [rax],al
   14003def0:	and    al,BYTE PTR [rip+0xa1993]        # 0x1400df889
   14003def6:	add    BYTE PTR [rax],al
   14003def8:	in     al,0x48
   14003defa:	add    al,0x0
	...
   14003df04:	or     al,0x0
   14003df06:	add    BYTE PTR [rax],al
   14003df08:	rex
   14003df09:	rex.WB add al,0x0
   14003df0c:	xor    BYTE PTR [rax],al
   14003df0e:	add    BYTE PTR [rax],al
   14003df10:	add    BYTE PTR [rax],al
   14003df12:	add    BYTE PTR [rax],al
   14003df14:	add    DWORD PTR [rax],eax
   14003df16:	add    BYTE PTR [rax],al
   14003df18:	and    al,BYTE PTR [rip+0x21993]        # 0x14005f8b1
   14003df1e:	add    BYTE PTR [rax],al
   14003df20:	adc    BYTE PTR [rdx],ah
   14003df22:	add    al,0x0
   14003df24:	add    DWORD PTR [rax],eax
   14003df26:	add    BYTE PTR [rax],al
   14003df28:	(bad)  
   14003df29:	push   rbx
   14003df2a:	add    al,0x0
   14003df2c:	add    eax,0x0
   14003df31:	push   rsp
   14003df32:	add    al,0x0
   14003df34:	and    BYTE PTR [rax],al
   14003df36:	add    BYTE PTR [rax],al
   14003df38:	add    BYTE PTR [rax],al
   14003df3a:	add    BYTE PTR [rax],al
   14003df3c:	add    DWORD PTR [rax],eax
   14003df3e:	add    BYTE PTR [rax],al
   14003df40:	and    al,BYTE PTR [rip+0x21993]        # 0x14005f8d9
   14003df46:	add    BYTE PTR [rax],al
   14003df48:	adc    BYTE PTR [rdx],ah
   14003df4a:	add    al,0x0
   14003df4c:	add    DWORD PTR [rax],eax
   14003df4e:	add    BYTE PTR [rax],al
   14003df50:	pop    rsp
   14003df51:	push   rbx
   14003df52:	add    al,0x0
   14003df54:	add    eax,0x88000000
   14003df59:	push   rbx
   14003df5a:	add    al,0x0
   14003df5c:	and    BYTE PTR [rax],al
   14003df5e:	add    BYTE PTR [rax],al
   14003df60:	add    BYTE PTR [rax],al
   14003df62:	add    BYTE PTR [rax],al
   14003df64:	add    DWORD PTR [rax],eax
   14003df66:	add    BYTE PTR [rax],al
   14003df68:	and    al,BYTE PTR [rip+0x21993]        # 0x14005f901
   14003df6e:	add    BYTE PTR [rax],al
   14003df70:	adc    BYTE PTR [rdx],ah
   14003df72:	add    al,0x0
   14003df74:	add    DWORD PTR [rax],eax
   14003df76:	add    BYTE PTR [rax],al
   14003df78:	(bad)  
   14003df79:	push   rdx
   14003df7a:	add    al,0x0
   14003df7c:	add    eax,0x0
   14003df81:	push   rbx
   14003df82:	add    al,0x0
   14003df84:	and    BYTE PTR [rax],al
   14003df86:	add    BYTE PTR [rax],al
   14003df88:	add    BYTE PTR [rax],al
   14003df8a:	add    BYTE PTR [rax],al
   14003df8c:	add    DWORD PTR [rax],eax
   14003df8e:	add    BYTE PTR [rax],al
   14003df90:	and    al,BYTE PTR [rip+0x21993]        # 0x14005f929
   14003df96:	add    BYTE PTR [rax],al
   14003df98:	adc    BYTE PTR [rdx],ah
   14003df9a:	add    al,0x0
   14003df9c:	add    DWORD PTR [rax],eax
   14003df9e:	add    BYTE PTR [rax],al
   14003dfa0:	push   rsp
   14003dfa1:	push   rdx
   14003dfa2:	add    al,0x0
   14003dfa4:	add    eax,0x80000000
   14003dfa9:	push   rdx
   14003dfaa:	add    al,0x0
   14003dfac:	and    BYTE PTR [rax],al
   14003dfae:	add    BYTE PTR [rax],al
   14003dfb0:	add    BYTE PTR [rax],al
   14003dfb2:	add    BYTE PTR [rax],al
   14003dfb4:	add    DWORD PTR [rax],eax
   14003dfb6:	add    BYTE PTR [rax],al
   14003dfb8:	and    al,BYTE PTR [rip+0x21993]        # 0x14005f951
   14003dfbe:	add    BYTE PTR [rax],al
   14003dfc0:	adc    BYTE PTR [rdx],ah
   14003dfc2:	add    al,0x0
   14003dfc4:	add    DWORD PTR [rax],eax
   14003dfc6:	add    BYTE PTR [rax],al
   14003dfc8:	(bad)  
   14003dfc9:	push   rcx
   14003dfca:	add    al,0x0
   14003dfcc:	add    eax,0x0
   14003dfd1:	push   rdx
   14003dfd2:	add    al,0x0
   14003dfd4:	xor    BYTE PTR [rax],al
   14003dfd6:	add    BYTE PTR [rax],al
   14003dfd8:	add    BYTE PTR [rax],al
   14003dfda:	add    BYTE PTR [rax],al
   14003dfdc:	add    DWORD PTR [rax],eax
   14003dfde:	add    BYTE PTR [rax],al
   14003dfe0:	and    al,BYTE PTR [rip+0x21993]        # 0x14005f979
   14003dfe6:	add    BYTE PTR [rax],al
   14003dfe8:	jo     0x14003e03b
   14003dfea:	add    al,0x0
	...
   14003dff4:	add    al,0x0
   14003dff6:	add    BYTE PTR [rax],al
   14003dff8:	adc    BYTE PTR [rcx+0x4],0x0
   14003dffc:	xor    BYTE PTR [rax],al
   14003dffe:	add    BYTE PTR [rax],al
   14003e000:	add    BYTE PTR [rax],al
   14003e002:	add    BYTE PTR [rax],al
   14003e004:	add    DWORD PTR [rax],eax
   14003e006:	add    BYTE PTR [rax],al
   14003e008:	and    al,BYTE PTR [rip+0x11993]        # 0x14004f9a1
   14003e00e:	add    BYTE PTR [rax],al
   14003e010:	sbb    al,0x51
   14003e012:	add    al,0x0
	...
   14003e01c:	add    eax,DWORD PTR [rax]
   14003e01e:	add    BYTE PTR [rax],al
   14003e020:	sub    BYTE PTR [rcx+0x4],dl
   14003e023:	add    BYTE PTR [rax+0x0],al
   14003e026:	add    BYTE PTR [rax],al
   14003e028:	add    BYTE PTR [rax],al
   14003e02a:	add    BYTE PTR [rax],al
   14003e02c:	add    DWORD PTR [rax],eax
   14003e02e:	add    BYTE PTR [rax],al
   14003e030:	and    al,BYTE PTR [rip+0x21993]        # 0x14005f9c9
   14003e036:	add    BYTE PTR [rax],al
   14003e038:	test   BYTE PTR [rax+0x4],dl
	...
   14003e043:	add    BYTE PTR [rax],cl
   14003e045:	add    BYTE PTR [rax],al
   14003e047:	add    BYTE PTR [rax+0x38000450],ah
   14003e04d:	add    BYTE PTR [rax],al
   14003e04f:	add    BYTE PTR [rax],al
   14003e051:	add    BYTE PTR [rax],al
   14003e053:	add    BYTE PTR [rcx],al
   14003e055:	add    BYTE PTR [rax],al
   14003e057:	add    BYTE PTR [rdx],ah
   14003e059:	add    eax,0x31993
   14003e05e:	add    BYTE PTR [rax],al
   14003e060:	mov    eax,0x44f
   14003e065:	add    BYTE PTR [rax],al
   14003e067:	add    BYTE PTR [rax],al
   14003e069:	add    BYTE PTR [rax],al
   14003e06b:	add    BYTE PTR [rsi],al
   14003e06d:	add    BYTE PTR [rax],al
   14003e06f:	add    al,dl
   14003e071:	rex.WRXB add al,0x0
   14003e074:	js     0x14003e076
   14003e076:	add    BYTE PTR [rax],al
   14003e078:	add    BYTE PTR [rax],al
   14003e07a:	add    BYTE PTR [rax],al
   14003e07c:	add    DWORD PTR [rax],eax
   14003e07e:	add    BYTE PTR [rax],al
   14003e080:	and    al,BYTE PTR [rip+0x61993]        # 0x14009fa19
   14003e086:	add    BYTE PTR [rax],al
   14003e088:	movabs al,ds:0x44e
   14003e091:	add    BYTE PTR [rax],al
   14003e093:	add    BYTE PTR [rcx],bl
   14003e095:	add    BYTE PTR [rax],al
   14003e097:	add    al,dl
   14003e099:	rex.WRX add al,0x0
   14003e09c:	test   al,0x0
   14003e09e:	add    BYTE PTR [rax],al
   14003e0a0:	add    BYTE PTR [rax],al
   14003e0a2:	add    BYTE PTR [rax],al
   14003e0a4:	add    DWORD PTR [rax],eax
   14003e0a6:	add    BYTE PTR [rax],al
   14003e0a8:	and    al,BYTE PTR [rip+0x11993]        # 0x14004fa41
   14003e0ae:	add    BYTE PTR [rax],al
   14003e0b0:	push   rsp
   14003e0b1:	rex.WRX add al,0x0
	...
   14003e0bc:	add    eax,DWORD PTR [rax]
   14003e0be:	add    BYTE PTR [rax],al
   14003e0c0:	(bad)  
   14003e0c1:	rex.WRX add al,0x0
   14003e0c4:	and    BYTE PTR [rax],al
   14003e0c6:	add    BYTE PTR [rax],al
   14003e0c8:	add    BYTE PTR [rax],al
   14003e0ca:	add    BYTE PTR [rax],al
   14003e0cc:	add    DWORD PTR [rax],eax
   14003e0ce:	add    BYTE PTR [rax],al
   14003e0d0:	and    al,BYTE PTR [rip+0x21993]        # 0x14005fa69
   14003e0d6:	add    BYTE PTR [rax],al
   14003e0d8:	in     al,dx
   14003e0d9:	rex.WRB add al,0x0
	...
   14003e0e4:	(bad)  
   14003e0e5:	add    BYTE PTR [rax],al
   14003e0e7:	add    BYTE PTR [rax],al
   14003e0e9:	rex.WRX add al,0x0
   14003e0ec:	and    BYTE PTR [rax],al
   14003e0ee:	add    BYTE PTR [rax],al
   14003e0f0:	add    BYTE PTR [rax],al
   14003e0f2:	add    BYTE PTR [rax],al
   14003e0f4:	add    DWORD PTR [rax],eax
   14003e0f6:	add    BYTE PTR [rax],al
   14003e0f8:	and    al,BYTE PTR [rip+0x31993]        # 0x14006fa91
   14003e0fe:	add    BYTE PTR [rax],al
   14003e100:	rex
   14003e101:	rex.WRB add al,0x0
   14003e104:	add    DWORD PTR [rax],eax
   14003e106:	add    BYTE PTR [rax],al
   14003e108:	pop    rax
   14003e109:	rex.WRB add al,0x0
   14003e10c:	or     BYTE PTR [rax],al
   14003e10e:	add    BYTE PTR [rax],al
   14003e110:	or     BYTE PTR [rbp+0x4],0x0
   14003e114:	sub    BYTE PTR [rax],al
   14003e116:	add    BYTE PTR [rax],al
   14003e118:	add    BYTE PTR [rax],al
   14003e11a:	add    BYTE PTR [rax],al
   14003e11c:	add    DWORD PTR [rax],eax
   14003e11e:	add    BYTE PTR [rax],al
   14003e120:	and    al,BYTE PTR [rip+0x21993]        # 0x14005fab9
   14003e126:	add    BYTE PTR [rax],al
   14003e128:	adc    BYTE PTR [rdx],ah
   14003e12a:	add    al,0x0
   14003e12c:	add    DWORD PTR [rax],eax
   14003e12e:	add    BYTE PTR [rax],al
   14003e130:	and    al,0x55
   14003e132:	add    al,0x0
   14003e134:	add    eax,0x50000000
   14003e139:	push   rbp
   14003e13a:	add    al,0x0
   14003e13c:	and    BYTE PTR [rax],al
   14003e13e:	add    BYTE PTR [rax],al
   14003e140:	add    BYTE PTR [rax],al
   14003e142:	add    BYTE PTR [rax],al
   14003e144:	add    DWORD PTR [rax],eax
   14003e146:	add    BYTE PTR [rax],al
   14003e148:	and    al,BYTE PTR [rip+0x21993]        # 0x14005fae1
   14003e14e:	add    BYTE PTR [rax],al
   14003e150:	mov    eax,0x454
   14003e155:	add    BYTE PTR [rax],al
   14003e157:	add    BYTE PTR [rax],al
   14003e159:	add    BYTE PTR [rax],al
   14003e15b:	add    BYTE PTR [rip+0xffffffffc8000000],al        # 0x10803e161
   14003e161:	push   rsp
   14003e162:	add    al,0x0
   14003e164:	xor    BYTE PTR [rax],al
   14003e166:	add    BYTE PTR [rax],al
   14003e168:	add    BYTE PTR [rax],al
   14003e16a:	add    BYTE PTR [rax],al
   14003e16c:	add    DWORD PTR [rax],eax
   14003e16e:	add    BYTE PTR [rax],al
   14003e170:	and    al,BYTE PTR [rip+0x21993]        # 0x14005fb09
   14003e176:	add    BYTE PTR [rax],al
   14003e178:	fs push rsp
   14003e17a:	add    al,0x0
	...
   14003e184:	add    eax,0x78000000
   14003e189:	push   rsp
   14003e18a:	add    al,0x0
   14003e18c:	xor    BYTE PTR [rax],al
   14003e18e:	add    BYTE PTR [rax],al
   14003e190:	add    BYTE PTR [rax],al
   14003e192:	add    BYTE PTR [rax],al
   14003e194:	add    DWORD PTR [rax],eax
   14003e196:	add    BYTE PTR [rax],al
   14003e198:	and    al,BYTE PTR [rip+0x21993]        # 0x14005fb31
   14003e19e:	add    BYTE PTR [rax],al
   14003e1a0:	adc    BYTE PTR [rdx],ah
   14003e1a2:	add    al,0x0
   14003e1a4:	add    DWORD PTR [rax],eax
   14003e1a6:	add    BYTE PTR [rax],al
   14003e1a8:	rex.W pop rax
   14003e1aa:	add    al,0x0
   14003e1ac:	add    eax,0x70000000
   14003e1b1:	pop    rax
   14003e1b2:	add    al,0x0
   14003e1b4:	and    BYTE PTR [rax],al
   14003e1b6:	add    BYTE PTR [rax],al
   14003e1b8:	add    BYTE PTR [rax],al
   14003e1ba:	add    BYTE PTR [rax],al
   14003e1bc:	add    DWORD PTR [rax],eax
   14003e1be:	add    BYTE PTR [rax],al
   14003e1c0:	and    al,BYTE PTR [rip+0x21993]        # 0x14005fb59
   14003e1c6:	add    BYTE PTR [rax],al
   14003e1c8:	adc    BYTE PTR [rdx],ah
   14003e1ca:	add    al,0x0
   14003e1cc:	add    DWORD PTR [rax],eax
   14003e1ce:	add    BYTE PTR [rax],al
   14003e1d0:	mov    eax,0x5000457
   14003e1d5:	add    BYTE PTR [rax],al
   14003e1d7:	add    al,ah
   14003e1d9:	push   rdi
   14003e1da:	add    al,0x0
   14003e1dc:	and    BYTE PTR [rax],al
   14003e1de:	add    BYTE PTR [rax],al
   14003e1e0:	add    BYTE PTR [rax],al
   14003e1e2:	add    BYTE PTR [rax],al
   14003e1e4:	add    DWORD PTR [rax],eax
   14003e1e6:	add    BYTE PTR [rax],al
   14003e1e8:	and    al,BYTE PTR [rip+0x31993]        # 0x14006fb81
   14003e1ee:	add    BYTE PTR [rax],al
   14003e1f0:	add    BYTE PTR [rdi+0x4],dl
   14003e1f3:	add    BYTE PTR [rcx],al
   14003e1f5:	add    BYTE PTR [rax],al
   14003e1f7:	add    BYTE PTR [rax],bl
   14003e1f9:	push   rdi
   14003e1fa:	add    al,0x0
   14003e1fc:	or     al,BYTE PTR [rax]
   14003e1fe:	add    BYTE PTR [rax],al
   14003e200:	rex push rdi
   14003e202:	add    al,0x0
   14003e204:	(bad)  
   14003e205:	add    BYTE PTR [rax],al
   14003e207:	add    BYTE PTR [rax],al
   14003e209:	add    BYTE PTR [rax],al
   14003e20b:	add    BYTE PTR [rcx],al
   14003e20d:	add    BYTE PTR [rax],al
   14003e20f:	add    BYTE PTR [rdx],ah
   14003e211:	add    eax,0x21993
   14003e216:	add    BYTE PTR [rax],al
   14003e218:	adc    BYTE PTR [rdx],ah
   14003e21a:	add    al,0x0
   14003e21c:	add    DWORD PTR [rax],eax
   14003e21e:	add    BYTE PTR [rax],al
   14003e220:	js     0x14003e278
   14003e222:	add    al,0x0
   14003e224:	(bad)  
   14003e225:	add    BYTE PTR [rax],al
   14003e227:	add    BYTE PTR [rax+0x20000456],ah
   14003e22d:	add    BYTE PTR [rax],al
   14003e22f:	add    BYTE PTR [rax],al
   14003e231:	add    BYTE PTR [rax],al
   14003e233:	add    BYTE PTR [rcx],al
   14003e235:	add    BYTE PTR [rax],al
   14003e237:	add    BYTE PTR [rdx],ah
   14003e239:	add    eax,0x11993
   14003e23e:	add    BYTE PTR [rax],al
   14003e240:	test   al,0x55
   14003e242:	add    al,0x0
	...
   14003e24c:	add    eax,DWORD PTR [rax]
   14003e24e:	add    BYTE PTR [rax],al
   14003e250:	mov    al,0x55
   14003e252:	add    al,0x0
   14003e254:	and    BYTE PTR [rax],al
   14003e256:	add    BYTE PTR [rax],al
   14003e258:	add    BYTE PTR [rax],al
   14003e25a:	add    BYTE PTR [rax],al
   14003e25c:	add    DWORD PTR [rax],eax
   14003e25e:	add    BYTE PTR [rax],al
   14003e260:	and    al,BYTE PTR [rip+0x31993]        # 0x14006fbf9
   14003e266:	add    BYTE PTR [rax],al
   14003e268:	sbb    BYTE PTR [rsi+0x4],dl
	...
   14003e273:	add    BYTE PTR [rdi],al
   14003e275:	add    BYTE PTR [rax],al
   14003e277:	add    BYTE PTR [rax],dh
   14003e279:	push   rsi
   14003e27a:	add    al,0x0
   14003e27c:	add    BYTE PTR [rax],al
   14003e27f:	add    BYTE PTR [rax],al
   14003e281:	add    BYTE PTR [rax],al
   14003e283:	add    BYTE PTR [rcx],al
   14003e285:	add    BYTE PTR [rax],al
   14003e287:	add    BYTE PTR [rdx],ah
   14003e289:	add    eax,0x31993
   14003e28e:	add    BYTE PTR [rax],al
   14003e290:	sbb    al,0x5c
   14003e292:	add    al,0x0
   14003e294:	add    DWORD PTR [rax],eax
   14003e296:	add    BYTE PTR [rax],al
   14003e298:	xor    al,0x5c
   14003e29a:	add    al,0x0
   14003e29c:	(bad)  
   14003e29d:	add    BYTE PTR [rax],al
   14003e29f:	add    BYTE PTR [rax+0x5c],ah
   14003e2a2:	add    al,0x0
   14003e2a4:	and    BYTE PTR [rax],al
   14003e2a6:	add    BYTE PTR [rax],al
   14003e2a8:	add    BYTE PTR [rax],al
   14003e2aa:	add    BYTE PTR [rax],al
   14003e2ac:	add    DWORD PTR [rax],eax
   14003e2ae:	add    BYTE PTR [rax],al
   14003e2b0:	and    al,BYTE PTR [rip+0x21993]        # 0x14005fc49
   14003e2b6:	add    BYTE PTR [rax],al
   14003e2b8:	adc    BYTE PTR [rdx],ah
   14003e2ba:	add    al,0x0
   14003e2bc:	add    DWORD PTR [rax],eax
   14003e2be:	add    BYTE PTR [rax],al
   14003e2c0:	test   al,0x5b
   14003e2c2:	add    al,0x0
   14003e2c4:	add    eax,0xd0000000
   14003e2c9:	pop    rbx
   14003e2ca:	add    al,0x0
   14003e2cc:	xor    BYTE PTR [rax],al
   14003e2ce:	add    BYTE PTR [rax],al
   14003e2d0:	add    BYTE PTR [rax],al
   14003e2d2:	add    BYTE PTR [rax],al
   14003e2d4:	add    DWORD PTR [rax],eax
   14003e2d6:	add    BYTE PTR [rax],al
   14003e2d8:	and    al,BYTE PTR [rip+0x81993]        # 0x1400bfc71
   14003e2de:	add    BYTE PTR [rax],al
   14003e2e0:	cmp    al,0x5a
   14003e2e2:	add    al,0x0
   14003e2e4:	add    DWORD PTR [rax],eax
   14003e2e6:	add    BYTE PTR [rax],al
   14003e2e8:	jl     0x14003e344
   14003e2ea:	add    al,0x0
   14003e2ec:	(bad)  
   14003e2ed:	add    BYTE PTR [rax],al
   14003e2ef:	add    al,al
   14003e2f1:	pop    rdx
   14003e2f2:	add    al,0x0
   14003e2f4:	mov    BYTE PTR [rax],al
   14003e2f6:	add    BYTE PTR [rax],al
   14003e2f8:	add    BYTE PTR [rax],al
   14003e2fa:	add    BYTE PTR [rax],al
   14003e2fc:	add    DWORD PTR [rax],eax
   14003e2fe:	add    BYTE PTR [rax],al
   14003e300:	and    al,BYTE PTR [rip+0x11993]        # 0x14004fc99
   14003e306:	add    BYTE PTR [rax],al
   14003e308:	rcr    BYTE PTR [rax+0x4],1
	...
   14003e313:	add    BYTE PTR [rip+0xfffffffff0000000],al        # 0x13003e319
   14003e319:	pop    rcx
   14003e31a:	add    al,0x0
   14003e31c:	xor    BYTE PTR [rax],al
   14003e31e:	add    BYTE PTR [rax],al
   14003e320:	add    BYTE PTR [rax],al
   14003e322:	add    BYTE PTR [rax],al
   14003e324:	add    DWORD PTR [rax],eax
   14003e326:	add    BYTE PTR [rax],al
   14003e328:	and    al,BYTE PTR [rip+0x11993]        # 0x14004fcc1
   14003e32e:	add    BYTE PTR [rax],al
   14003e330:	rcr    BYTE PTR [rax+0x4],1
	...
   14003e33b:	add    BYTE PTR [rip+0x18000000],al        # 0x15803e341
   14003e341:	pop    rcx
   14003e342:	add    al,0x0
   14003e344:	xor    BYTE PTR [rax],al
   14003e346:	add    BYTE PTR [rax],al
   14003e348:	add    BYTE PTR [rax],al
   14003e34a:	add    BYTE PTR [rax],al
   14003e34c:	add    DWORD PTR [rax],eax
   14003e34e:	add    BYTE PTR [rax],al
   14003e350:	and    al,BYTE PTR [rip+0x11993]        # 0x14004fce9
   14003e356:	add    BYTE PTR [rax],al
   14003e358:	rcr    BYTE PTR [rax+0x4],1
	...
   14003e363:	add    BYTE PTR [rip+0xffffffffd8000000],al        # 0x11803e369
   14003e369:	pop    rax
   14003e36a:	add    al,0x0
   14003e36c:	xor    BYTE PTR [rax],al
   14003e36e:	add    BYTE PTR [rax],al
   14003e370:	add    BYTE PTR [rax],al
   14003e372:	add    BYTE PTR [rax],al
   14003e374:	add    DWORD PTR [rax],eax
   14003e376:	add    BYTE PTR [rax],al
   14003e378:	and    al,BYTE PTR [rip+0x51993]        # 0x14008fd11
   14003e37e:	add    BYTE PTR [rax],al
   14003e380:	fs pop rcx
   14003e382:	add    al,0x0
	...
   14003e38c:	or     BYTE PTR [rax],al
   14003e38e:	add    BYTE PTR [rax],al
   14003e390:	nop
   14003e391:	pop    rcx
   14003e392:	add    al,0x0
   14003e394:	pop    rax
   14003e395:	add    BYTE PTR [rax],al
   14003e397:	add    BYTE PTR [rax],al
   14003e399:	add    BYTE PTR [rax],al
   14003e39b:	add    BYTE PTR [rcx],al
   14003e39d:	add    BYTE PTR [rax],al
   14003e39f:	add    BYTE PTR [rdx],ah
   14003e3a1:	add    eax,0x21993
   14003e3a6:	add    BYTE PTR [rax],al
   14003e3a8:	adc    BYTE PTR [rdx],ah
   14003e3aa:	add    al,0x0
   14003e3ac:	add    DWORD PTR [rax],eax
   14003e3ae:	add    BYTE PTR [rax],al
   14003e3b0:	push   rsp
   14003e3b1:	(bad)  
   14003e3b2:	add    al,0x0
   14003e3b4:	or     BYTE PTR [rax],al
   14003e3b6:	add    BYTE PTR [rax],al
   14003e3b8:	and    BYTE PTR [rax+0x4],0x0
   14003e3bc:	and    BYTE PTR [rax],al
   14003e3be:	add    BYTE PTR [rax],al
   14003e3c0:	add    BYTE PTR [rax],al
   14003e3c2:	add    BYTE PTR [rax],al
   14003e3c4:	add    DWORD PTR [rax],eax
   14003e3c6:	add    BYTE PTR [rax],al
   14003e3c8:	and    al,BYTE PTR [rip+0x21993]        # 0x14005fd61
   14003e3ce:	add    BYTE PTR [rax],al
   14003e3d0:	adc    BYTE PTR [rdx],ah
   14003e3d2:	add    al,0x0
   14003e3d4:	add    DWORD PTR [rax],eax
   14003e3d6:	add    BYTE PTR [rax],al
   14003e3d8:	rcr    BYTE PTR [rdi+0x4],0x0
   14003e3dc:	or     BYTE PTR [rax],al
   14003e3de:	add    BYTE PTR [rax],al
   14003e3e0:	lock pop rdi
   14003e3e2:	add    al,0x0
   14003e3e4:	and    BYTE PTR [rax],al
   14003e3e6:	add    BYTE PTR [rax],al
   14003e3e8:	add    BYTE PTR [rax],al
   14003e3ea:	add    BYTE PTR [rax],al
   14003e3ec:	add    DWORD PTR [rax],eax
   14003e3ee:	add    BYTE PTR [rax],al
   14003e3f0:	and    al,BYTE PTR [rip+0x21993]        # 0x14005fd89
   14003e3f6:	add    BYTE PTR [rax],al
   14003e3f8:	adc    BYTE PTR [rdx],ah
   14003e3fa:	add    al,0x0
   14003e3fc:	add    DWORD PTR [rax],eax
   14003e3fe:	add    BYTE PTR [rax],al
   14003e400:	xor    al,0x5f
   14003e402:	add    al,0x0
   14003e404:	or     BYTE PTR [rax],al
   14003e406:	add    BYTE PTR [rax],al
   14003e408:	(bad)  
   14003e409:	pop    rdi
   14003e40a:	add    al,0x0
   14003e40c:	and    BYTE PTR [rax],al
   14003e40e:	add    BYTE PTR [rax],al
   14003e410:	add    BYTE PTR [rax],al
   14003e412:	add    BYTE PTR [rax],al
   14003e414:	add    DWORD PTR [rax],eax
   14003e416:	add    BYTE PTR [rax],al
   14003e418:	and    al,BYTE PTR [rip+0x11993]        # 0x14004fdb1
   14003e41e:	add    BYTE PTR [rax],al
   14003e420:	test   al,0x5e
   14003e422:	add    al,0x0
	...
   14003e42c:	add    eax,0xb0000000
   14003e431:	pop    rsi
   14003e432:	add    al,0x0
   14003e434:	add    BYTE PTR [rax],al
   14003e437:	add    BYTE PTR [rax],al
   14003e439:	add    BYTE PTR [rax],al
   14003e43b:	add    BYTE PTR [rcx],al
   14003e43d:	add    BYTE PTR [rax],al
   14003e43f:	add    BYTE PTR [rdx],ah
   14003e441:	add    eax,0x21993
   14003e446:	add    BYTE PTR [rax],al
   14003e448:	adc    BYTE PTR [rdx],ah
   14003e44a:	add    al,0x0
   14003e44c:	add    DWORD PTR [rax],eax
   14003e44e:	add    BYTE PTR [rax],al
   14003e450:	mov    eax,0x500045d
   14003e455:	add    BYTE PTR [rax],al
   14003e457:	add    al,ah
   14003e459:	pop    rbp
   14003e45a:	add    al,0x0
   14003e45c:	add    BYTE PTR [rax],al
   14003e45f:	add    BYTE PTR [rax],al
   14003e461:	add    BYTE PTR [rax],al
   14003e463:	add    BYTE PTR [rcx],al
   14003e465:	add    BYTE PTR [rax],al
   14003e467:	add    BYTE PTR [rdx],ah
   14003e469:	add    eax,0x81993
   14003e46e:	add    BYTE PTR [rax],al
   14003e470:	cld    
   14003e471:	pop    rsp
   14003e472:	add    al,0x0
	...
   14003e47c:	or     al,BYTE PTR [rax]
   14003e47e:	add    BYTE PTR [rax],al
   14003e480:	rex pop rbp
   14003e482:	add    al,0x0
   14003e484:	xor    BYTE PTR [rax],al
   14003e486:	add    BYTE PTR [rax],al
   14003e488:	add    BYTE PTR [rax],al
   14003e48a:	add    BYTE PTR [rax],al
   14003e48c:	add    DWORD PTR [rax],eax
   14003e48e:	add    BYTE PTR [rax],al
   14003e490:	and    al,BYTE PTR [rip+0x21993]        # 0x14005fe29
   14003e496:	add    BYTE PTR [rax],al
   14003e498:	adc    BYTE PTR [rdx],ah
   14003e49a:	add    al,0x0
   14003e49c:	add    DWORD PTR [rax],eax
   14003e49e:	add    BYTE PTR [rax],al
   14003e4a0:	clc    
   14003e4a1:	push   0x50004
   14003e4a6:	add    BYTE PTR [rax],al
   14003e4a8:	and    BYTE PTR [rcx+0x4],ch
   14003e4ab:	add    BYTE PTR [rax],ah
   14003e4ad:	add    BYTE PTR [rax],al
   14003e4af:	add    BYTE PTR [rax],al
   14003e4b1:	add    BYTE PTR [rax],al
   14003e4b3:	add    BYTE PTR [rcx],al
   14003e4b5:	add    BYTE PTR [rax],al
   14003e4b7:	add    BYTE PTR [rdx],ah
   14003e4b9:	add    eax,0x21993
   14003e4be:	add    BYTE PTR [rax],al
   14003e4c0:	adc    BYTE PTR [rdx],ah
   14003e4c2:	add    al,0x0
   14003e4c4:	add    DWORD PTR [rax],eax
   14003e4c6:	add    BYTE PTR [rax],al
   14003e4c8:	mov    BYTE PTR [rax+0x4],ch
   14003e4cb:	add    BYTE PTR [rip+0xffffffffb0000000],al        # 0xf003e4d1
   14003e4d1:	push   0x200004
   14003e4d6:	add    BYTE PTR [rax],al
   14003e4d8:	add    BYTE PTR [rax],al
   14003e4da:	add    BYTE PTR [rax],al
   14003e4dc:	add    DWORD PTR [rax],eax
   14003e4de:	add    BYTE PTR [rax],al
   14003e4e0:	and    al,BYTE PTR [rip+0x21993]        # 0x14005fe79
   14003e4e6:	add    BYTE PTR [rax],al
   14003e4e8:	adc    BYTE PTR [rdx],ah
   14003e4ea:	add    al,0x0
   14003e4ec:	add    DWORD PTR [rax],eax
   14003e4ee:	add    BYTE PTR [rax],al
   14003e4f0:	lock addr32 add al,0x0
   14003e4f4:	or     BYTE PTR [rax],al
   14003e4f6:	add    BYTE PTR [rax],al
   14003e4f8:	and    BYTE PTR [rax+0x4],ch
   14003e4fb:	add    BYTE PTR [rax],ah
   14003e4fd:	add    BYTE PTR [rax],al
   14003e4ff:	add    BYTE PTR [rax],al
   14003e501:	add    BYTE PTR [rax],al
   14003e503:	add    BYTE PTR [rcx],al
   14003e505:	add    BYTE PTR [rax],al
   14003e507:	add    BYTE PTR [rdx],ah
   14003e509:	add    eax,0x31993
   14003e50e:	add    BYTE PTR [rax],al
   14003e510:	shl    BYTE PTR [rsi+0x4],1
   14003e513:	add    BYTE PTR [rcx],al
   14003e515:	add    BYTE PTR [rax],al
   14003e517:	add    al,ch
   14003e519:	data16 add al,0x0
   14003e51c:	or     al,BYTE PTR [rax]
   14003e51e:	add    BYTE PTR [rax],al
   14003e520:	xor    BYTE PTR [rdi+0x4],ah
   14003e523:	add    BYTE PTR [rax+0x0],al
   14003e529:	add    BYTE PTR [rax],al
   14003e52b:	add    BYTE PTR [rcx],al
   14003e52d:	add    BYTE PTR [rax],al
   14003e52f:	add    BYTE PTR [rdx],ah
   14003e531:	add    eax,0x31993
   14003e536:	add    BYTE PTR [rax],al
   14003e538:	xor    al,0x66
   14003e53a:	add    al,0x0
	...
   14003e544:	(bad)  
   14003e545:	add    BYTE PTR [rax],al
   14003e547:	add    BYTE PTR [rax+0x66],dl
   14003e54a:	add    al,0x0
   14003e54c:	add    BYTE PTR [rax],0x0
   14003e54f:	add    BYTE PTR [rax],al
   14003e551:	add    BYTE PTR [rax],al
   14003e553:	add    BYTE PTR [rcx],al
   14003e555:	add    BYTE PTR [rax],al
   14003e557:	add    BYTE PTR [rdx],ah
   14003e559:	add    eax,0x21993
   14003e55e:	add    BYTE PTR [rax],al
   14003e560:	adc    BYTE PTR [rdx],ah
   14003e562:	add    al,0x0
   14003e564:	add    DWORD PTR [rax],eax
   14003e566:	add    BYTE PTR [rax],al
   14003e568:	pushf  
   14003e569:	gs add al,0x0
   14003e56c:	(bad)  
   14003e56d:	add    BYTE PTR [rax],al
   14003e56f:	add    al,cl
   14003e571:	gs add al,0x0
   14003e574:	and    BYTE PTR [rax],al
   14003e576:	add    BYTE PTR [rax],al
   14003e578:	add    BYTE PTR [rax],al
   14003e57a:	add    BYTE PTR [rax],al
   14003e57c:	add    DWORD PTR [rax],eax
   14003e57e:	add    BYTE PTR [rax],al
   14003e580:	and    al,BYTE PTR [rip+0x21993]        # 0x14005ff19
   14003e586:	add    BYTE PTR [rax],al
   14003e588:	adc    BYTE PTR [rdx],ah
   14003e58a:	add    al,0x0
   14003e58c:	add    DWORD PTR [rax],eax
   14003e58e:	add    BYTE PTR [rax],al
   14003e590:	sbb    al,0x65
   14003e592:	add    al,0x0
   14003e594:	(bad)  
   14003e595:	add    BYTE PTR [rax],al
   14003e597:	add    BYTE PTR [rax+0x65],cl
   14003e59a:	add    al,0x0
   14003e59c:	and    BYTE PTR [rax],al
   14003e59e:	add    BYTE PTR [rax],al
   14003e5a0:	add    BYTE PTR [rax],al
   14003e5a2:	add    BYTE PTR [rax],al
   14003e5a4:	add    DWORD PTR [rax],eax
   14003e5a6:	add    BYTE PTR [rax],al
   14003e5a8:	and    al,BYTE PTR [rip+0x21993]        # 0x14005ff41
   14003e5ae:	add    BYTE PTR [rax],al
   14003e5b0:	lods   al,BYTE PTR ds:[rsi]
   14003e5b1:	fs add al,0x0
	...
   14003e5bc:	add    eax,0xc0000000
   14003e5c1:	fs add al,0x0
   14003e5c4:	js     0x14003e5c6
   14003e5c6:	add    BYTE PTR [rax],al
   14003e5c8:	add    BYTE PTR [rax],al
   14003e5ca:	add    BYTE PTR [rax],al
   14003e5cc:	add    DWORD PTR [rax],eax
   14003e5ce:	add    BYTE PTR [rax],al
   14003e5d0:	and    al,BYTE PTR [rip+0x41993]        # 0x14007ff69
   14003e5d6:	add    BYTE PTR [rax],al
   14003e5d8:	mov    eax,0x1000463
   14003e5dd:	add    BYTE PTR [rax],al
   14003e5df:	add    al,bl
   14003e5e1:	movsxd eax,DWORD PTR [rax+rax*1]
   14003e5e4:	or     al,0x0
   14003e5e6:	add    BYTE PTR [rax],al
   14003e5e8:	add    BYTE PTR [rsp+rax*1+0x0],ah
   14003e5ec:	rex.W add BYTE PTR [rax],al
   14003e5ef:	add    BYTE PTR [rax],al
   14003e5f1:	add    BYTE PTR [rax],al
   14003e5f3:	add    BYTE PTR [rcx],al
   14003e5f5:	add    BYTE PTR [rax],al
   14003e5f7:	add    BYTE PTR [rdx],ah
   14003e5f9:	add    eax,0x41993
   14003e5fe:	add    BYTE PTR [rax],al
   14003e600:	lock (bad) 
   14003e602:	add    al,0x0
   14003e604:	add    DWORD PTR [rax],eax
   14003e606:	add    BYTE PTR [rax],al
   14003e608:	adc    BYTE PTR [rbx+0x4],ah
   14003e60b:	add    BYTE PTR [rcx],cl
   14003e60d:	add    BYTE PTR [rax],al
   14003e60f:	add    BYTE PTR [rax+0x63],al
   14003e612:	add    al,0x0
   14003e614:	add    BYTE PTR [rax],al
   14003e617:	add    BYTE PTR [rax],al
   14003e619:	add    BYTE PTR [rax],al
   14003e61b:	add    BYTE PTR [rcx],al
   14003e61d:	add    BYTE PTR [rax],al
   14003e61f:	add    BYTE PTR [rdx],ah
   14003e621:	add    eax,0x21993
   14003e626:	add    BYTE PTR [rax],al
   14003e628:	test   al,0x62
   14003e62a:	add    al,0x0
	...
   14003e634:	add    al,0x0
   14003e636:	add    BYTE PTR [rax],al
   14003e638:	mov    eax,0x20000462
   14003e63d:	add    BYTE PTR [rax],al
   14003e63f:	add    BYTE PTR [rax],al
   14003e641:	add    BYTE PTR [rax],al
   14003e643:	add    BYTE PTR [rcx],al
   14003e645:	add    BYTE PTR [rax],al
   14003e647:	add    BYTE PTR [rdx],ah
   14003e649:	add    eax,0xb1993
   14003e64e:	add    BYTE PTR [rax],al
   14003e650:	enter  0x461,0x0
	...
   14003e65c:	(bad)  
   14003e65d:	add    BYTE PTR [rax],al
   14003e65f:	add    BYTE PTR [rax],ah
   14003e661:	(bad)  
   14003e662:	add    al,0x0
   14003e664:	rex.W add BYTE PTR [rax],al
   14003e667:	add    BYTE PTR [rax],al
   14003e669:	add    BYTE PTR [rax],al
   14003e66b:	add    BYTE PTR [rcx],al
   14003e66d:	add    BYTE PTR [rax],al
   14003e66f:	add    BYTE PTR [rdx],ah
   14003e671:	add    eax,0x31993
   14003e676:	add    BYTE PTR [rax],al
   14003e678:	adc    BYTE PTR [rcx+0x4],ah
   14003e67b:	add    BYTE PTR [rcx],al
   14003e67d:	add    BYTE PTR [rax],al
   14003e67f:	add    BYTE PTR [rax],ch
   14003e681:	(bad)  
   14003e682:	add    al,0x0
   14003e684:	or     BYTE PTR [rax],al
   14003e686:	add    BYTE PTR [rax],al
   14003e688:	push   rax
   14003e689:	(bad)  
   14003e68a:	add    al,0x0
   14003e68c:	sub    BYTE PTR [rax],al
   14003e68e:	add    BYTE PTR [rax],al
   14003e690:	add    BYTE PTR [rax],al
   14003e692:	add    BYTE PTR [rax],al
   14003e694:	add    DWORD PTR [rax],eax
   14003e696:	add    BYTE PTR [rax],al
   14003e698:	and    al,BYTE PTR [rip+0x21993]        # 0x140060031
   14003e69e:	add    BYTE PTR [rax],al
   14003e6a0:	adc    BYTE PTR [rdx],ah
   14003e6a2:	add    al,0x0
   14003e6a4:	add    DWORD PTR [rax],eax
   14003e6a6:	add    BYTE PTR [rax],al
   14003e6a8:	jo     0x14003e717
   14003e6aa:	add    al,0x0
   14003e6ac:	or     BYTE PTR [rax],al
   14003e6ae:	add    BYTE PTR [rax],al
   14003e6b0:	mov    al,0x6d
   14003e6b2:	add    al,0x0
   14003e6b4:	pop    rax
   14003e6b5:	add    BYTE PTR [rax],al
   14003e6b7:	add    BYTE PTR [rax],al
   14003e6b9:	add    BYTE PTR [rax],al
   14003e6bb:	add    BYTE PTR [rcx],al
   14003e6bd:	add    BYTE PTR [rax],al
   14003e6bf:	add    BYTE PTR [rdx],ah
   14003e6c1:	add    eax,0x21993
   14003e6c6:	add    BYTE PTR [rax],al
   14003e6c8:	adc    BYTE PTR [rdx],ah
   14003e6ca:	add    al,0x0
   14003e6cc:	add    DWORD PTR [rax],eax
   14003e6ce:	add    BYTE PTR [rax],al
   14003e6d0:	rex.W ins BYTE PTR es:[rdi],dx
   14003e6d2:	add    al,0x0
   14003e6d4:	add    eax,0x70000000
   14003e6d9:	ins    BYTE PTR es:[rdi],dx
   14003e6da:	add    al,0x0
   14003e6dc:	sub    BYTE PTR [rax],al
   14003e6de:	add    BYTE PTR [rax],al
   14003e6e0:	add    BYTE PTR [rax],al
   14003e6e2:	add    BYTE PTR [rax],al
   14003e6e4:	add    DWORD PTR [rax],eax
   14003e6e6:	add    BYTE PTR [rax],al
   14003e6e8:	and    al,BYTE PTR [rip+0x11993]        # 0x140050081
   14003e6ee:	add    BYTE PTR [rax],al
   14003e6f0:	add    al,0x6c
   14003e6f2:	add    al,0x0
	...
   14003e6fc:	add    eax,DWORD PTR [rax]
   14003e6fe:	add    BYTE PTR [rax],al
   14003e700:	adc    BYTE PTR [rsp+rax*1+0x0],ch
   14003e704:	xor    BYTE PTR [rax],al
   14003e706:	add    BYTE PTR [rax],al
   14003e708:	add    BYTE PTR [rax],al
   14003e70a:	add    BYTE PTR [rax],al
   14003e70c:	add    DWORD PTR [rax],eax
   14003e70e:	add    BYTE PTR [rax],al
   14003e710:	and    al,BYTE PTR [rip+0x31993]        # 0x1400700a9
   14003e716:	add    BYTE PTR [rax],al
   14003e718:	call   0x14103eb87
   14003e71d:	add    BYTE PTR [rax],al
   14003e71f:	add    BYTE PTR [rax],al
   14003e721:	imul   eax,DWORD PTR [rax+rax*1],0x6
   14003e725:	add    BYTE PTR [rax],al
   14003e727:	add    BYTE PTR [rax],ch
   14003e729:	imul   eax,DWORD PTR [rax+rax*1],0x40
   14003e72d:	add    BYTE PTR [rax],al
   14003e72f:	add    BYTE PTR [rax],al
   14003e731:	add    BYTE PTR [rax],al
   14003e733:	add    BYTE PTR [rcx],al
   14003e735:	add    BYTE PTR [rax],al
   14003e737:	add    BYTE PTR [rdx],ah
   14003e739:	add    eax,0x71993
   14003e73e:	add    BYTE PTR [rax],al
   14003e740:	cmp    al,0x6a
   14003e742:	add    al,0x0
	...
   14003e74c:	or     DWORD PTR [rax],eax
   14003e74e:	add    BYTE PTR [rax],al
   14003e750:	sub    BYTE PTR [rdx+0x4],0x0
   14003e754:	and    BYTE PTR [rax],al
   14003e756:	add    BYTE PTR [rax],al
   14003e758:	add    BYTE PTR [rax],al
   14003e75a:	add    BYTE PTR [rax],al
   14003e75c:	add    DWORD PTR [rax],eax
   14003e75e:	add    BYTE PTR [rax],al
   14003e760:	and    al,BYTE PTR [rip+0x31993]        # 0x1400700f9
   14003e766:	add    BYTE PTR [rax],al
   14003e768:	nop
   14003e769:	imul   eax,DWORD PTR [rax+rax*1],0x1
   14003e770:	test   al,0x69
   14003e772:	add    al,0x0
   14003e774:	(bad)  
   14003e775:	add    BYTE PTR [rax],al
   14003e777:	add    al,dl
   14003e779:	imul   eax,DWORD PTR [rax+rax*1],0x20
   14003e780:	add    BYTE PTR [rax],al
   14003e782:	add    BYTE PTR [rax],al
   14003e784:	add    DWORD PTR [rax],eax
   14003e786:	add    BYTE PTR [rax],al
   14003e788:	and    al,BYTE PTR [rip+0x21993]        # 0x140060121
   14003e78e:	add    BYTE PTR [rax],al
   14003e790:	adc    BYTE PTR [rdx],ah
   14003e792:	add    al,0x0
   14003e794:	add    DWORD PTR [rax],eax
   14003e796:	add    BYTE PTR [rax],al
   14003e798:	sub    BYTE PTR [rbx+0x4],0x0
   14003e79c:	(bad)  
   14003e79d:	add    BYTE PTR [rax],al
   14003e79f:	add    BYTE PTR [rax+0x3000046b],ch
   14003e7a5:	add    BYTE PTR [rax],al
   14003e7a7:	add    BYTE PTR [rax],al
   14003e7a9:	add    BYTE PTR [rax],al
   14003e7ab:	add    BYTE PTR [rcx],al
   14003e7ad:	add    BYTE PTR [rax],al
   14003e7af:	add    BYTE PTR [rdx],ah
   14003e7b1:	add    eax,0x51993
   14003e7b6:	add    BYTE PTR [rax],al
   14003e7b8:	add    al,0x74
   14003e7ba:	add    al,0x0
   14003e7bc:	add    DWORD PTR [rax],eax
   14003e7be:	add    BYTE PTR [rax],al
   14003e7c0:	sub    al,0x74
   14003e7c2:	add    al,0x0
   14003e7c4:	sldt   WORD PTR [rax]
   14003e7c7:	add    BYTE PTR [rax+0x74],ah
   14003e7ca:	add    al,0x0
   14003e7cc:	cmp    BYTE PTR [rax],al
   14003e7ce:	add    BYTE PTR [rax],al
   14003e7d0:	add    BYTE PTR [rax],al
   14003e7d2:	add    BYTE PTR [rax],al
   14003e7d4:	add    DWORD PTR [rax],eax
   14003e7d6:	add    BYTE PTR [rax],al
   14003e7d8:	and    al,BYTE PTR [rip+0x31993]        # 0x140070171
   14003e7de:	add    BYTE PTR [rax],al
   14003e7e0:	rex.R jae 0x14003e7e7
   14003e7e3:	add    BYTE PTR [rcx],al
   14003e7e5:	add    BYTE PTR [rax],al
   14003e7e7:	add    BYTE PTR [rbx+rsi*2+0x4],bl
   14003e7eb:	add    BYTE PTR [rax],cl
   14003e7ed:	add    BYTE PTR [rax],al
   14003e7ef:	add    BYTE PTR [rax+0x28000473],dl
   14003e7f5:	add    BYTE PTR [rax],al
   14003e7f7:	add    BYTE PTR [rax],al
   14003e7f9:	add    BYTE PTR [rax],al
   14003e7fb:	add    BYTE PTR [rcx],al
   14003e7fd:	add    BYTE PTR [rax],al
   14003e7ff:	add    BYTE PTR [rdx],ah
   14003e801:	add    eax,0x51993
   14003e806:	add    BYTE PTR [rax],al
   14003e808:	pop    rax
   14003e809:	jb     0x14003e80f
   14003e80b:	add    BYTE PTR [rcx],al
   14003e80d:	add    BYTE PTR [rax],al
   14003e80f:	add    BYTE PTR [rax+0xd000472],al
   14003e815:	add    BYTE PTR [rax],al
   14003e817:	add    BYTE PTR [rax+0x38000472],dh
   14003e81d:	add    BYTE PTR [rax],al
   14003e81f:	add    BYTE PTR [rax],al
   14003e821:	add    BYTE PTR [rax],al
   14003e823:	add    BYTE PTR [rcx],al
   14003e825:	add    BYTE PTR [rax],al
   14003e827:	add    BYTE PTR [rdx],ah
   14003e829:	add    eax,0x21993
   14003e82e:	add    BYTE PTR [rax],al
   14003e830:	lods   al,BYTE PTR ds:[rsi]
   14003e831:	jno    0x14003e837
	...
   14003e83b:	add    BYTE PTR [rax+rax*1],al
   14003e83e:	add    BYTE PTR [rax],al
   14003e840:	shl    BYTE PTR [rcx+0x4],0x0
   14003e844:	xor    BYTE PTR [rax],al
   14003e846:	add    BYTE PTR [rax],al
   14003e848:	add    BYTE PTR [rax],al
   14003e84a:	add    BYTE PTR [rax],al
   14003e84c:	add    DWORD PTR [rax],eax
   14003e84e:	add    BYTE PTR [rax],al
   14003e850:	and    al,BYTE PTR [rip+0x31993]        # 0x1400701e9
   14003e856:	add    BYTE PTR [rax],al
   14003e858:	or     al,0x71
   14003e85a:	add    al,0x0
   14003e85c:	add    DWORD PTR [rax],eax
   14003e85e:	add    BYTE PTR [rax],al
   14003e860:	and    al,0x71
   14003e862:	add    al,0x0
   14003e864:	(bad)  
   14003e865:	add    BYTE PTR [rax],al
   14003e867:	add    BYTE PTR [rax+0x71],dl
   14003e86a:	add    al,0x0
   14003e86c:	sub    BYTE PTR [rax],al
   14003e86e:	add    BYTE PTR [rax],al
   14003e870:	add    BYTE PTR [rax],al
   14003e872:	add    BYTE PTR [rax],al
   14003e874:	add    DWORD PTR [rax],eax
   14003e876:	add    BYTE PTR [rax],al
   14003e878:	and    al,BYTE PTR [rip+0x31993]        # 0x140070211
   14003e87e:	add    BYTE PTR [rax],al
   14003e880:	ins    BYTE PTR es:[rdi],dx
   14003e881:	jo     0x14003e887
   14003e883:	add    BYTE PTR [rcx],al
   14003e885:	add    BYTE PTR [rax],al
   14003e887:	add    BYTE PTR [rax+rsi*2+0x60004],al
   14003e88e:	add    BYTE PTR [rax],al
   14003e890:	mov    al,0x70
   14003e892:	add    al,0x0
   14003e894:	cmp    BYTE PTR [rax],al
   14003e896:	add    BYTE PTR [rax],al
   14003e898:	add    BYTE PTR [rax],al
   14003e89a:	add    BYTE PTR [rax],al
   14003e89c:	add    DWORD PTR [rax],eax
   14003e89e:	add    BYTE PTR [rax],al
   14003e8a0:	and    al,BYTE PTR [rip+0x41993]        # 0x140080239
   14003e8a6:	add    BYTE PTR [rax],al
   14003e8a8:	jl     0x14003e8ea
   14003e8aa:	add    al,0x0
   14003e8ac:	add    al,BYTE PTR [rax]
   14003e8ae:	add    BYTE PTR [rax],al
   14003e8b0:	movabs al,ds:0xf00000000a00046f
   14003e8b9:	outs   dx,DWORD PTR ds:[rsi]
   14003e8ba:	add    al,0x0
   14003e8bc:	add    BYTE PTR [rax],0x0
   14003e8bf:	add    BYTE PTR [rax],al
   14003e8c1:	add    BYTE PTR [rax],al
   14003e8c3:	add    BYTE PTR [rcx],al
   14003e8c5:	add    BYTE PTR [rax],al
   14003e8c7:	add    BYTE PTR [rdx],ah
   14003e8c9:	add    eax,0x41993
   14003e8ce:	add    BYTE PTR [rax],al
   14003e8d0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003e8d1:	outs   dx,BYTE PTR ds:[rsi]
   14003e8d2:	add    al,0x0
   14003e8d4:	add    DWORD PTR [rax],eax
   14003e8d6:	add    BYTE PTR [rax],al
   14003e8d8:	(bad)  
   14003e8d9:	outs   dx,BYTE PTR ds:[rsi]
   14003e8da:	add    al,0x0
   14003e8dc:	sldt   WORD PTR [rax]
   14003e8df:	add    al,dh
   14003e8e1:	outs   dx,BYTE PTR ds:[rsi]
   14003e8e2:	add    al,0x0
   14003e8e4:	mov    BYTE PTR [rax],al
   14003e8e6:	add    BYTE PTR [rax],al
   14003e8e8:	add    BYTE PTR [rax],al
   14003e8ea:	add    BYTE PTR [rax],al
   14003e8ec:	add    DWORD PTR [rax],eax
   14003e8ee:	add    BYTE PTR [rax],al
   14003e8f0:	and    al,BYTE PTR [rip+0x11993]        # 0x140050289
   14003e8f6:	add    BYTE PTR [rax],al
   14003e8f8:	push   rax
   14003e8f9:	outs   dx,BYTE PTR ds:[rsi]
   14003e8fa:	add    al,0x0
	...
   14003e904:	add    eax,DWORD PTR [rax]
   14003e906:	add    BYTE PTR [rax],al
   14003e908:	pop    rax
   14003e909:	outs   dx,BYTE PTR ds:[rsi]
   14003e90a:	add    al,0x0
   14003e90c:	and    BYTE PTR [rax],al
   14003e90e:	add    BYTE PTR [rax],al
   14003e910:	add    BYTE PTR [rax],al
   14003e912:	add    BYTE PTR [rax],al
   14003e914:	add    DWORD PTR [rax],eax
   14003e916:	add    BYTE PTR [rax],al
   14003e918:	and    al,BYTE PTR [rip+0x21993]        # 0x1400602b1
   14003e91e:	add    BYTE PTR [rax],al
   14003e920:	add    BYTE PTR [rdx+0x4],dh
	...
   14003e92b:	add    BYTE PTR [rip+0x10000000],al        # 0x15003e931
   14003e931:	jb     0x14003e937
   14003e933:	add    BYTE PTR [rax],ah
   14003e935:	add    BYTE PTR [rax],al
   14003e937:	add    BYTE PTR [rax],al
   14003e939:	add    BYTE PTR [rax],al
   14003e93b:	add    BYTE PTR [rcx],al
   14003e93d:	add    BYTE PTR [rax],al
   14003e93f:	add    BYTE PTR [rdx],ah
   14003e941:	add    eax,0x21993
   14003e946:	add    BYTE PTR [rax],al
   14003e948:	adc    BYTE PTR [rdx],ah
   14003e94a:	add    al,0x0
   14003e94c:	add    DWORD PTR [rax],eax
   14003e94e:	add    BYTE PTR [rax],al
   14003e950:	mov    al,0x78
   14003e952:	add    al,0x0
   14003e954:	or     BYTE PTR [rax],al
   14003e956:	add    BYTE PTR [rax],al
   14003e958:	loopne 0x14003e9d2
   14003e95a:	add    al,0x0
   14003e95c:	and    BYTE PTR [rax],al
   14003e95e:	add    BYTE PTR [rax],al
   14003e960:	add    BYTE PTR [rax],al
   14003e962:	add    BYTE PTR [rax],al
   14003e964:	add    DWORD PTR [rax],eax
   14003e966:	add    BYTE PTR [rax],al
   14003e968:	and    al,BYTE PTR [rip+0x21993]        # 0x140060301
   14003e96e:	add    BYTE PTR [rax],al
   14003e970:	adc    BYTE PTR [rdx],ah
   14003e972:	add    al,0x0
   14003e974:	add    DWORD PTR [rax],eax
   14003e976:	add    BYTE PTR [rax],al
   14003e978:	and    BYTE PTR [rax+0x4],bh
   14003e97b:	add    BYTE PTR [rax],cl
   14003e97d:	add    BYTE PTR [rax],al
   14003e97f:	add    BYTE PTR [rax+0x78],dl
   14003e982:	add    al,0x0
   14003e984:	and    BYTE PTR [rax],al
   14003e986:	add    BYTE PTR [rax],al
   14003e988:	add    BYTE PTR [rax],al
   14003e98a:	add    BYTE PTR [rax],al
   14003e98c:	add    DWORD PTR [rax],eax
   14003e98e:	add    BYTE PTR [rax],al
   14003e990:	and    al,BYTE PTR [rip+0x21993]        # 0x140060329
   14003e996:	add    BYTE PTR [rax],al
   14003e998:	adc    BYTE PTR [rdx],ah
   14003e99a:	add    al,0x0
   14003e99c:	add    DWORD PTR [rax],eax
   14003e99e:	add    BYTE PTR [rax],al
   14003e9a0:	cwde   
   14003e9a1:	ja     0x14003e9a7
   14003e9a3:	add    BYTE PTR [rax],cl
   14003e9a5:	add    BYTE PTR [rax],al
   14003e9a7:	add    al,al
   14003e9a9:	ja     0x14003e9af
   14003e9ab:	add    BYTE PTR [rax],ah
   14003e9ad:	add    BYTE PTR [rax],al
   14003e9af:	add    BYTE PTR [rax],al
   14003e9b1:	add    BYTE PTR [rax],al
   14003e9b3:	add    BYTE PTR [rcx],al
   14003e9b5:	add    BYTE PTR [rax],al
   14003e9b7:	add    BYTE PTR [rdx],ah
   14003e9b9:	add    eax,0x11993
   14003e9be:	add    BYTE PTR [rax],al
   14003e9c0:	push   0x477
   14003e9c5:	add    BYTE PTR [rax],al
   14003e9c7:	add    BYTE PTR [rax],al
   14003e9c9:	add    BYTE PTR [rax],al
   14003e9cb:	add    BYTE PTR [rbx],al
   14003e9cd:	add    BYTE PTR [rax],al
   14003e9cf:	add    BYTE PTR [rax+0x77],dh
   14003e9d2:	add    al,0x0
   14003e9d4:	xor    BYTE PTR [rax],al
   14003e9d6:	add    BYTE PTR [rax],al
   14003e9d8:	add    BYTE PTR [rax],al
   14003e9da:	add    BYTE PTR [rax],al
   14003e9dc:	add    DWORD PTR [rax],eax
   14003e9de:	add    BYTE PTR [rax],al
   14003e9e0:	and    al,BYTE PTR [rip+0x11993]        # 0x140050379
   14003e9e6:	add    BYTE PTR [rax],al
   14003e9e8:	sbb    al,0x77
   14003e9ea:	add    al,0x0
	...
   14003e9f4:	add    eax,DWORD PTR [rax]
   14003e9f6:	add    BYTE PTR [rax],al
   14003e9f8:	sub    BYTE PTR [rdi+0x4],dh
   14003e9fb:	add    BYTE PTR [rax+0x0],dh
   14003e9fe:	add    BYTE PTR [rax],al
   14003ea00:	add    BYTE PTR [rax],al
   14003ea02:	add    BYTE PTR [rax],al
   14003ea04:	add    DWORD PTR [rax],eax
   14003ea06:	add    BYTE PTR [rax],al
   14003ea08:	and    al,BYTE PTR [rip+0x11993]        # 0x1400503a1
   14003ea0e:	add    BYTE PTR [rax],al
   14003ea10:	mov    ah,0x22
   14003ea12:	add    al,0x0
	...
   14003ea1c:	add    eax,DWORD PTR [rax]
   14003ea1e:	add    BYTE PTR [rax],al
   14003ea20:	shl    BYTE PTR [rsi+0x4],1
   14003ea23:	add    BYTE PTR [rax],ah
   14003ea25:	add    BYTE PTR [rax],al
   14003ea27:	add    BYTE PTR [rax],al
   14003ea29:	add    BYTE PTR [rax],al
   14003ea2b:	add    BYTE PTR [rcx],al
   14003ea2d:	add    BYTE PTR [rax],al
   14003ea2f:	add    BYTE PTR [rdx],ah
   14003ea31:	add    eax,0x11993
   14003ea36:	add    BYTE PTR [rax],al
   14003ea38:	pop    rsp
   14003ea39:	jbe    0x14003ea3f
	...
   14003ea43:	add    BYTE PTR [rbx],al
   14003ea45:	add    BYTE PTR [rax],al
   14003ea47:	add    BYTE PTR [rax+0x20000476],bl
   14003ea4d:	add    BYTE PTR [rax],al
   14003ea4f:	add    BYTE PTR [rax],al
   14003ea51:	add    BYTE PTR [rax],al
   14003ea53:	add    BYTE PTR [rcx],al
   14003ea55:	add    BYTE PTR [rax],al
   14003ea57:	add    BYTE PTR [rdx],ah
   14003ea59:	add    eax,0x11993
   14003ea5e:	add    BYTE PTR [rax],al
   14003ea60:	pop    rsp
   14003ea61:	jbe    0x14003ea67
	...
   14003ea6b:	add    BYTE PTR [rbx],al
   14003ea6d:	add    BYTE PTR [rax],al
   14003ea6f:	add    BYTE PTR [rax+0x76],ch
   14003ea72:	add    al,0x0
   14003ea74:	and    BYTE PTR [rax],al
   14003ea76:	add    BYTE PTR [rax],al
   14003ea78:	add    BYTE PTR [rax],al
   14003ea7a:	add    BYTE PTR [rax],al
   14003ea7c:	add    DWORD PTR [rax],eax
   14003ea7e:	add    BYTE PTR [rax],al
   14003ea80:	and    al,BYTE PTR [rip+0x11993]        # 0x140050419
   14003ea86:	add    BYTE PTR [rax],al
   14003ea88:	lock jne 0x14003ea8f
	...
   14003ea93:	add    BYTE PTR [rbx],al
   14003ea95:	add    BYTE PTR [rax],al
   14003ea97:	add    BYTE PTR [rax],dh
   14003ea99:	jbe    0x14003ea9f
   14003ea9b:	add    BYTE PTR [rax],ch
   14003ea9d:	add    BYTE PTR [rax],al
   14003ea9f:	add    BYTE PTR [rax],al
   14003eaa1:	add    BYTE PTR [rax],al
   14003eaa3:	add    BYTE PTR [rcx],al
   14003eaa5:	add    BYTE PTR [rax],al
   14003eaa7:	add    BYTE PTR [rdx],ah
   14003eaa9:	add    eax,0x11993
   14003eaae:	add    BYTE PTR [rax],al
   14003eab0:	lock jne 0x14003eab7
	...
   14003eabb:	add    BYTE PTR [rbx],al
   14003eabd:	add    BYTE PTR [rax],al
   14003eabf:	add    al,bh
   14003eac1:	jne    0x14003eac7
   14003eac3:	add    BYTE PTR [rax],ch
   14003eac5:	add    BYTE PTR [rax],al
   14003eac7:	add    BYTE PTR [rax],al
   14003eac9:	add    BYTE PTR [rax],al
   14003eacb:	add    BYTE PTR [rcx],al
   14003eacd:	add    BYTE PTR [rax],al
   14003eacf:	add    BYTE PTR [rdx],ah
   14003ead1:	add    eax,0x41993
   14003ead6:	add    BYTE PTR [rax],al
   14003ead8:	adc    BYTE PTR [rbp+0x4],dh
   14003eadb:	add    BYTE PTR [rcx],al
   14003eadd:	add    BYTE PTR [rax],al
   14003eadf:	add    BYTE PTR [rax],dh
   14003eae1:	jne    0x14003eae7
   14003eae3:	add    BYTE PTR [rcx],cl
   14003eae5:	add    BYTE PTR [rax],al
   14003eae7:	add    BYTE PTR [rax+0x75],ah
   14003eaea:	add    al,0x0
   14003eaec:	push   rax
   14003eaed:	add    BYTE PTR [rax],al
   14003eaef:	add    BYTE PTR [rax],al
   14003eaf1:	add    BYTE PTR [rax],al
   14003eaf3:	add    BYTE PTR [rcx],al
   14003eaf5:	add    BYTE PTR [rax],al
   14003eaf7:	add    BYTE PTR [rdx],ah
   14003eaf9:	add    eax,0x21993
   14003eafe:	add    BYTE PTR [rax],al
   14003eb00:	adc    BYTE PTR [rdx],ah
   14003eb02:	add    al,0x0
   14003eb04:	add    DWORD PTR [rax],eax
   14003eb06:	add    BYTE PTR [rax],al
   14003eb08:	loopne 0x14003eb83
   14003eb0a:	add    al,0x0
   14003eb0c:	(bad)  
   14003eb0d:	add    BYTE PTR [rax],al
   14003eb0f:	add    BYTE PTR [rax],cl
   14003eb11:	jp     0x14003eb17
   14003eb13:	add    BYTE PTR [rax],ch
   14003eb15:	add    BYTE PTR [rax],al
   14003eb17:	add    BYTE PTR [rax],al
   14003eb19:	add    BYTE PTR [rax],al
   14003eb1b:	add    BYTE PTR [rcx],al
   14003eb1d:	add    BYTE PTR [rax],al
   14003eb1f:	add    BYTE PTR [rdx],ah
   14003eb21:	add    eax,0x21993
   14003eb26:	add    BYTE PTR [rax],al
   14003eb28:	adc    BYTE PTR [rdx],ah
   14003eb2a:	add    al,0x0
   14003eb2c:	add    DWORD PTR [rax],eax
   14003eb2e:	add    BYTE PTR [rax],al
   14003eb30:	pop    rsp
   14003eb31:	jns    0x14003eb37
   14003eb33:	add    BYTE PTR [rsi],al
   14003eb35:	add    BYTE PTR [rax],al
   14003eb37:	add    BYTE PTR [rax+0x38000479],cl
   14003eb3d:	add    BYTE PTR [rax],al
   14003eb3f:	add    BYTE PTR [rax],al
   14003eb41:	add    BYTE PTR [rax],al
   14003eb43:	add    BYTE PTR [rcx],al
   14003eb45:	add    BYTE PTR [rax],al
   14003eb47:	add    BYTE PTR [rdx],ah
   14003eb49:	add    eax,0x21993
   14003eb4e:	add    BYTE PTR [rax],al
   14003eb50:	adc    BYTE PTR [rdx],ah
   14003eb52:	add    al,0x0
   14003eb54:	add    DWORD PTR [rax],eax
   14003eb56:	add    BYTE PTR [rax],al
   14003eb58:	(bad)  
   14003eb59:	jl     0x14003eb5f
   14003eb5b:	add    BYTE PTR [rbx],al
   14003eb5d:	add    BYTE PTR [rax],al
   14003eb5f:	add    al,dh
   14003eb61:	jl     0x14003eb67
   14003eb63:	add    BYTE PTR [rax],dh
   14003eb65:	add    BYTE PTR [rax],al
   14003eb67:	add    BYTE PTR [rax],al
   14003eb69:	add    BYTE PTR [rax],al
   14003eb6b:	add    BYTE PTR [rcx],al
   14003eb6d:	add    BYTE PTR [rax],al
   14003eb6f:	add    BYTE PTR [rdx],ah
   14003eb71:	add    eax,0x21993
   14003eb76:	add    BYTE PTR [rax],al
   14003eb78:	adc    BYTE PTR [rdx],ah
   14003eb7a:	add    al,0x0
   14003eb7c:	add    DWORD PTR [rax],eax
   14003eb7e:	add    BYTE PTR [rax],al
   14003eb80:	push   rax
   14003eb81:	jl     0x14003eb87
   14003eb83:	add    BYTE PTR [rip+0x78000000],al        # 0x1b803eb89
   14003eb89:	jl     0x14003eb8f
   14003eb8b:	add    BYTE PTR [rax],ah
   14003eb8d:	add    BYTE PTR [rax],al
   14003eb8f:	add    BYTE PTR [rax],al
   14003eb91:	add    BYTE PTR [rax],al
   14003eb93:	add    BYTE PTR [rcx],al
   14003eb95:	add    BYTE PTR [rax],al
   14003eb97:	add    BYTE PTR [rdx],ah
   14003eb99:	add    eax,0x21993
   14003eb9e:	add    BYTE PTR [rax],al
   14003eba0:	adc    BYTE PTR [rdx],ah
   14003eba2:	add    al,0x0
   14003eba4:	add    DWORD PTR [rax],eax
   14003eba6:	add    BYTE PTR [rax],al
   14003eba8:	loopne 0x14003ec25
   14003ebaa:	add    al,0x0
   14003ebac:	add    eax,0x8000000
   14003ebb1:	jl     0x14003ebb7
   14003ebb3:	add    BYTE PTR [rax],dh
   14003ebb5:	add    BYTE PTR [rax],al
   14003ebb7:	add    BYTE PTR [rax],al
   14003ebb9:	add    BYTE PTR [rax],al
   14003ebbb:	add    BYTE PTR [rcx],al
   14003ebbd:	add    BYTE PTR [rax],al
   14003ebbf:	add    BYTE PTR [rdx],ah
   14003ebc1:	add    eax,0x21993
   14003ebc6:	add    BYTE PTR [rax],al
   14003ebc8:	adc    BYTE PTR [rdx],ah
   14003ebca:	add    al,0x0
   14003ebcc:	add    DWORD PTR [rax],eax
   14003ebce:	add    BYTE PTR [rax],al
   14003ebd0:	push   0x500047b
   14003ebd5:	add    BYTE PTR [rax],al
   14003ebd7:	add    BYTE PTR [rax+0x2000047b],dl
   14003ebdd:	add    BYTE PTR [rax],al
   14003ebdf:	add    BYTE PTR [rax],al
   14003ebe1:	add    BYTE PTR [rax],al
   14003ebe3:	add    BYTE PTR [rcx],al
   14003ebe5:	add    BYTE PTR [rax],al
   14003ebe7:	add    BYTE PTR [rdx],ah
   14003ebe9:	add    eax,0x21993
   14003ebee:	add    BYTE PTR [rax],al
   14003ebf0:	adc    BYTE PTR [rdx],ah
   14003ebf2:	add    al,0x0
   14003ebf4:	add    DWORD PTR [rax],eax
   14003ebf6:	add    BYTE PTR [rax],al
   14003ebf8:	hlt    
   14003ebf9:	jp     0x14003ebff
   14003ebfb:	add    BYTE PTR [rip+0x20000000],al        # 0x16003ec01
   14003ec01:	jnp    0x14003ec07
   14003ec03:	add    BYTE PTR [rax],ah
   14003ec05:	add    BYTE PTR [rax],al
   14003ec07:	add    BYTE PTR [rax],al
   14003ec09:	add    BYTE PTR [rax],al
   14003ec0b:	add    BYTE PTR [rcx],al
   14003ec0d:	add    BYTE PTR [rax],al
   14003ec0f:	add    BYTE PTR [rdx],ah
   14003ec11:	add    eax,0x11993
   14003ec16:	add    BYTE PTR [rax],al
   14003ec18:	mov    ah,0x7a
   14003ec1a:	add    al,0x0
	...
   14003ec24:	add    eax,DWORD PTR [rax]
   14003ec26:	add    BYTE PTR [rax],al
   14003ec28:	sar    BYTE PTR [rdx+0x4],0x0
   14003ec2c:	and    BYTE PTR [rax],al
   14003ec2e:	add    BYTE PTR [rax],al
   14003ec30:	add    BYTE PTR [rax],al
   14003ec32:	add    BYTE PTR [rax],al
   14003ec34:	add    DWORD PTR [rax],eax
   14003ec36:	add    BYTE PTR [rax],al
   14003ec38:	and    al,BYTE PTR [rip+0x31993]        # 0x1400705d1
   14003ec3e:	add    BYTE PTR [rax],al
   14003ec40:	pop    rax
   14003ec41:	jp     0x14003ec47
	...
   14003ec4b:	add    BYTE PTR [rip+0x70000000],al        # 0x1b003ec51
   14003ec51:	jp     0x14003ec57
   14003ec53:	add    BYTE PTR [rax],ah
   14003ec55:	add    BYTE PTR [rax],al
   14003ec57:	add    BYTE PTR [rax],al
   14003ec59:	add    BYTE PTR [rax],al
   14003ec5b:	add    BYTE PTR [rcx],al
   14003ec5d:	add    BYTE PTR [rax],al
   14003ec5f:	add    BYTE PTR [rdx],ah
   14003ec61:	add    eax,0x31993
   14003ec66:	add    BYTE PTR [rax],al
   14003ec68:	test   al,0x82
   14003ec6a:	add    al,0x0
   14003ec6c:	add    DWORD PTR [rax],eax
   14003ec6e:	add    BYTE PTR [rax],al
   14003ec70:	rol    BYTE PTR [rdx+0x70004],0x0
   14003ec77:	add    al,ch
   14003ec79:	(bad)  
   14003ec7a:	add    al,0x0
   14003ec7c:	and    BYTE PTR [rax],al
   14003ec7e:	add    BYTE PTR [rax],al
   14003ec80:	add    BYTE PTR [rax],al
   14003ec82:	add    BYTE PTR [rax],al
   14003ec84:	add    DWORD PTR [rax],eax
   14003ec86:	add    BYTE PTR [rax],al
   14003ec88:	and    al,BYTE PTR [rip+0x21993]        # 0x140060621
   14003ec8e:	add    BYTE PTR [rax],al
   14003ec90:	adc    BYTE PTR [rdx],ah
   14003ec92:	add    al,0x0
   14003ec94:	add    DWORD PTR [rax],eax
   14003ec96:	add    BYTE PTR [rax],al
   14003ec98:	xor    al,0x82
   14003ec9a:	add    al,0x0
   14003ec9c:	add    al,0x0
   14003ec9e:	add    BYTE PTR [rax],al
   14003eca0:	(bad)  
   14003eca1:	(bad)  
   14003eca2:	add    al,0x0
   14003eca4:	and    BYTE PTR [rax],al
   14003eca6:	add    BYTE PTR [rax],al
   14003eca8:	add    BYTE PTR [rax],al
   14003ecaa:	add    BYTE PTR [rax],al
   14003ecac:	add    DWORD PTR [rax],eax
   14003ecae:	add    BYTE PTR [rax],al
   14003ecb0:	and    al,BYTE PTR [rip+0x11993]        # 0x140050649
   14003ecb6:	add    BYTE PTR [rax],al
   14003ecb8:	call   0x14003f13e
   14003ecbd:	add    BYTE PTR [rax],al
   14003ecbf:	add    BYTE PTR [rax],al
   14003ecc1:	add    BYTE PTR [rax],al
   14003ecc3:	add    BYTE PTR [rbx],al
   14003ecc5:	add    BYTE PTR [rax],al
   14003ecc7:	add    al,dh
   14003ecc9:	add    DWORD PTR [rax+rax*1],0x38
   14003ecd0:	add    BYTE PTR [rax],al
   14003ecd2:	add    BYTE PTR [rax],al
   14003ecd4:	add    DWORD PTR [rax],eax
   14003ecd6:	add    BYTE PTR [rax],al
   14003ecd8:	and    al,BYTE PTR [rip+0x21993]        # 0x140060671
   14003ecde:	add    BYTE PTR [rax],al
   14003ece0:	cwde   
   14003ece1:	add    DWORD PTR [rax+rax*1],0x0
   14003ece8:	add    BYTE PTR [rax],al
   14003ecea:	add    BYTE PTR [rax],al
   14003ecec:	add    eax,0xa8000000
   14003ecf1:	add    DWORD PTR [rax+rax*1],0x38
   14003ecf8:	add    BYTE PTR [rax],al
   14003ecfa:	add    BYTE PTR [rax],al
   14003ecfc:	add    DWORD PTR [rax],eax
   14003ecfe:	add    BYTE PTR [rax],al
   14003ed00:	and    al,BYTE PTR [rip+0x21993]        # 0x140060699
   14003ed06:	add    BYTE PTR [rax],al
   14003ed08:	add    QWORD PTR [rax+rax*1],0x0
   14003ed10:	add    BYTE PTR [rax],al
   14003ed12:	add    BYTE PTR [rax],al
   14003ed14:	add    eax,0x58000000
   14003ed19:	add    DWORD PTR [rax+rax*1],0x48
   14003ed20:	add    BYTE PTR [rax],al
   14003ed22:	add    BYTE PTR [rax],al
   14003ed24:	add    DWORD PTR [rax],eax
   14003ed26:	add    BYTE PTR [rax],al
   14003ed28:	and    al,BYTE PTR [rip+0x71993]        # 0x1400b06c1
   14003ed2e:	add    BYTE PTR [rax],al
   14003ed30:	ins    BYTE PTR es:[rdi],dx
   14003ed31:	add    BYTE PTR [rax+rax*1],0x0
   14003ed35:	add    BYTE PTR [rax],al
   14003ed37:	add    BYTE PTR [rax],al
   14003ed39:	add    BYTE PTR [rax],al
   14003ed3b:	add    BYTE PTR [rdi],cl
   14003ed3d:	add    BYTE PTR [rax],al
   14003ed3f:	add    BYTE PTR [rax-0x5ffffb80],dh
   14003ed45:	add    BYTE PTR [rax],al
   14003ed47:	add    BYTE PTR [rax],al
   14003ed49:	add    BYTE PTR [rax],al
   14003ed4b:	add    BYTE PTR [rcx],al
   14003ed4d:	add    BYTE PTR [rax],al
   14003ed4f:	add    BYTE PTR [rdx],ah
   14003ed51:	add    eax,0x31993
   14003ed56:	add    BYTE PTR [rax],al
   14003ed58:	fdivr  QWORD PTR [rdi+0x4]
	...
   14003ed63:	add    BYTE PTR [rcx],cl
   14003ed65:	add    BYTE PTR [rax],al
   14003ed67:	add    BYTE PTR [rax],al
   14003ed69:	add    BYTE PTR [rax+rax*1],0x48
   14003ed6d:	add    BYTE PTR [rax],al
   14003ed6f:	add    BYTE PTR [rax],al
   14003ed71:	add    BYTE PTR [rax],al
   14003ed73:	add    BYTE PTR [rcx],al
   14003ed75:	add    BYTE PTR [rax],al
   14003ed77:	add    BYTE PTR [rdx],ah
   14003ed79:	add    eax,0x21993
   14003ed7e:	add    BYTE PTR [rax],al
   14003ed80:	adc    BYTE PTR [rdx],ah
   14003ed82:	add    al,0x0
   14003ed84:	add    DWORD PTR [rax],eax
   14003ed86:	add    BYTE PTR [rax],al
   14003ed88:	ins    BYTE PTR es:[rdi],dx
   14003ed89:	add    DWORD PTR [rax+rax*1],0x8
   14003ed8d:	add    BYTE PTR [rax],al
   14003ed8f:	add    BYTE PTR [rax+0x20000483],ah
   14003ed95:	add    BYTE PTR [rax],al
   14003ed97:	add    BYTE PTR [rax],al
   14003ed99:	add    BYTE PTR [rax],al
   14003ed9b:	add    BYTE PTR [rcx],al
   14003ed9d:	add    BYTE PTR [rax],al
   14003ed9f:	add    BYTE PTR [rdx],ah
   14003eda1:	add    eax,0x21993
   14003eda6:	add    BYTE PTR [rax],al
   14003eda8:	adc    BYTE PTR [rdx],ah
   14003edaa:	add    al,0x0
   14003edac:	add    DWORD PTR [rax],eax
   14003edae:	add    BYTE PTR [rax],al
   14003edb0:	call   0x14503f23c
   14003edb5:	add    BYTE PTR [rax],al
   14003edb7:	add    BYTE PTR [rax],dl
   14003edb9:	mov    BYTE PTR [rax+rax*1],al
   14003edbc:	and    BYTE PTR [rax],al
   14003edbe:	add    BYTE PTR [rax],al
   14003edc0:	add    BYTE PTR [rax],al
   14003edc2:	add    BYTE PTR [rax],al
   14003edc4:	add    DWORD PTR [rax],eax
   14003edc6:	add    BYTE PTR [rax],al
   14003edc8:	and    al,BYTE PTR [rip+0x21993]        # 0x140060761
   14003edce:	add    BYTE PTR [rax],al
   14003edd0:	adc    BYTE PTR [rdx],ah
   14003edd2:	add    al,0x0
   14003edd4:	add    DWORD PTR [rax],eax
   14003edd6:	add    BYTE PTR [rax],al
   14003edd8:	(bad)  
   14003edd9:	xchg   DWORD PTR [rax+rax*1],eax
   14003eddc:	add    eax,0x88000000
   14003ede1:	xchg   DWORD PTR [rax+rax*1],eax
   14003ede4:	xor    BYTE PTR [rax],al
   14003ede6:	add    BYTE PTR [rax],al
   14003ede8:	add    BYTE PTR [rax],al
   14003edea:	add    BYTE PTR [rax],al
   14003edec:	add    DWORD PTR [rax],eax
   14003edee:	add    BYTE PTR [rax],al
   14003edf0:	and    al,BYTE PTR [rip+0x21993]        # 0x140060789
   14003edf6:	add    BYTE PTR [rax],al
   14003edf8:	adc    BYTE PTR [rdx],ah
   14003edfa:	add    al,0x0
   14003edfc:	add    DWORD PTR [rax],eax
   14003edfe:	add    BYTE PTR [rax],al
   14003ee00:	loopne 0x14003ed88
   14003ee02:	add    al,0x0
   14003ee04:	add    eax,0x8000000
   14003ee09:	xchg   DWORD PTR [rax+rax*1],eax
   14003ee0c:	and    BYTE PTR [rax],al
   14003ee0e:	add    BYTE PTR [rax],al
   14003ee10:	add    BYTE PTR [rax],al
   14003ee12:	add    BYTE PTR [rax],al
   14003ee14:	add    DWORD PTR [rax],eax
   14003ee16:	add    BYTE PTR [rax],al
   14003ee18:	and    al,BYTE PTR [rip+0x61993]        # 0x1400a07b1
   14003ee1e:	add    BYTE PTR [rax],al
   14003ee20:	hlt    
   14003ee21:	test   BYTE PTR [rax+rax*1],al
	...
   14003ee2c:	sub    eax,0x30000000
   14003ee31:	test   DWORD PTR [rax+rax*1],eax
   14003ee34:	loopne 0x14003ee36
   14003ee36:	add    BYTE PTR [rax],al
   14003ee38:	add    BYTE PTR [rax],al
   14003ee3a:	add    BYTE PTR [rax],al
   14003ee3c:	add    DWORD PTR [rax],eax
   14003ee3e:	add    BYTE PTR [rax],al
   14003ee40:	and    al,BYTE PTR [rip+0x31993]        # 0x1400707d9
   14003ee46:	add    BYTE PTR [rax],al
   14003ee48:	adc    al,0x84
   14003ee4a:	add    al,0x0
   14003ee4c:	add    DWORD PTR [rax],eax
   14003ee4e:	add    BYTE PTR [rax],al
   14003ee50:	sub    al,0x84
   14003ee52:	add    al,0x0
   14003ee54:	or     eax,DWORD PTR [rax]
   14003ee56:	add    BYTE PTR [rax],al
   14003ee58:	(bad)  
   14003ee59:	test   BYTE PTR [rax+rax*1],al
   14003ee5c:	rex.W add BYTE PTR [rax],al
   14003ee5f:	add    BYTE PTR [rax],al
   14003ee61:	add    BYTE PTR [rax],al
   14003ee63:	add    BYTE PTR [rcx],al
   14003ee65:	add    BYTE PTR [rax],al
   14003ee67:	add    BYTE PTR [rdx],ah
   14003ee69:	add    eax,0x21993
   14003ee6e:	add    BYTE PTR [rax],al
   14003ee70:	adc    BYTE PTR [rdx],ah
   14003ee72:	add    al,0x0
   14003ee74:	add    DWORD PTR [rax],eax
   14003ee76:	add    BYTE PTR [rax],al
   14003ee78:	ror    BYTE PTR [rcx+0x80004],0x0
   14003ee7f:	add    al,dh
   14003ee81:	mov    DWORD PTR [rax+rax*1],eax
   14003ee84:	and    BYTE PTR [rax],al
   14003ee86:	add    BYTE PTR [rax],al
   14003ee88:	add    BYTE PTR [rax],al
   14003ee8a:	add    BYTE PTR [rax],al
   14003ee8c:	add    DWORD PTR [rax],eax
   14003ee8e:	add    BYTE PTR [rax],al
   14003ee90:	and    al,BYTE PTR [rip+0x21993]        # 0x140060829
   14003ee96:	add    BYTE PTR [rax],al
   14003ee98:	or     BYTE PTR [rcx+0x4],0x0
   14003ee9f:	add    BYTE PTR [rax],al
   14003eea1:	add    BYTE PTR [rax],al
   14003eea3:	add    BYTE PTR [rax+rax*1],al
   14003eea6:	add    BYTE PTR [rax],al
   14003eea8:	nop
   14003eea9:	mov    DWORD PTR [rax+rax*1],eax
   14003eeac:	and    BYTE PTR [rax],al
   14003eeae:	add    BYTE PTR [rax],al
   14003eeb0:	add    BYTE PTR [rax],al
   14003eeb2:	add    BYTE PTR [rax],al
   14003eeb4:	add    DWORD PTR [rax],eax
   14003eeb6:	add    BYTE PTR [rax],al
   14003eeb8:	and    al,BYTE PTR [rip+0x21993]        # 0x140060851
   14003eebe:	add    BYTE PTR [rax],al
   14003eec0:	adc    BYTE PTR [rdx],ah
   14003eec2:	add    al,0x0
   14003eec4:	add    DWORD PTR [rax],eax
   14003eec6:	add    BYTE PTR [rax],al
   14003eec8:	mov    WORD PTR [rsi+0x50004],cs
   14003eece:	add    BYTE PTR [rax],al
   14003eed0:	mov    eax,0x2000048e
   14003eed5:	add    BYTE PTR [rax],al
   14003eed7:	add    BYTE PTR [rax],al
   14003eed9:	add    BYTE PTR [rax],al
   14003eedb:	add    BYTE PTR [rcx],al
   14003eedd:	add    BYTE PTR [rax],al
   14003eedf:	add    BYTE PTR [rdx],ah
   14003eee1:	add    eax,0x21993
   14003eee6:	add    BYTE PTR [rax],al
   14003eee8:	adc    BYTE PTR [rdx],ah
   14003eeea:	add    al,0x0
   14003eeec:	add    DWORD PTR [rax],eax
   14003eeee:	add    BYTE PTR [rax],al
   14003eef0:	lock lea eax,[rax+rax*1]
   14003eef4:	or     BYTE PTR [rax],al
   14003eef6:	add    BYTE PTR [rax],al
   14003eef8:	and    BYTE PTR [rsi+0x200004],cl
   14003eefe:	add    BYTE PTR [rax],al
   14003ef00:	add    BYTE PTR [rax],al
   14003ef02:	add    BYTE PTR [rax],al
   14003ef04:	add    DWORD PTR [rax],eax
   14003ef06:	add    BYTE PTR [rax],al
   14003ef08:	and    al,BYTE PTR [rip+0x21993]        # 0x1400608a1
   14003ef0e:	add    BYTE PTR [rax],al
   14003ef10:	adc    BYTE PTR [rdx],ah
   14003ef12:	add    al,0x0
   14003ef14:	add    DWORD PTR [rax],eax
   14003ef16:	add    BYTE PTR [rax],al
   14003ef18:	or     BYTE PTR [rbp+0x50004],0x0
   14003ef1f:	add    BYTE PTR [rax+0x2000048d],ch
   14003ef25:	add    BYTE PTR [rax],al
   14003ef27:	add    BYTE PTR [rax],al
   14003ef29:	add    BYTE PTR [rax],al
   14003ef2b:	add    BYTE PTR [rcx],al
   14003ef2d:	add    BYTE PTR [rax],al
   14003ef2f:	add    BYTE PTR [rdx],ah
   14003ef31:	add    eax,0x21993
   14003ef36:	add    BYTE PTR [rax],al
   14003ef38:	or     al,0x8d
   14003ef3a:	add    al,0x0
	...
   14003ef44:	add    eax,0x20000000
   14003ef49:	lea    eax,[rax+rax*1]
   14003ef4c:	and    BYTE PTR [rax],al
   14003ef4e:	add    BYTE PTR [rax],al
   14003ef50:	add    BYTE PTR [rax],al
   14003ef52:	add    BYTE PTR [rax],al
   14003ef54:	add    DWORD PTR [rax],eax
   14003ef56:	add    BYTE PTR [rax],al
   14003ef58:	and    al,BYTE PTR [rip+0x31993]        # 0x1400708f1
   14003ef5e:	add    BYTE PTR [rax],al
   14003ef60:	jo     0x14003eeee
   14003ef62:	add    al,0x0
	...
   14003ef6c:	or     DWORD PTR [rax],eax
   14003ef6e:	add    BYTE PTR [rax],al
   14003ef70:	nop
   14003ef71:	mov    WORD PTR [rax+rax*1],es
   14003ef74:	cmp    BYTE PTR [rax],al
   14003ef76:	add    BYTE PTR [rax],al
   14003ef78:	add    BYTE PTR [rax],al
   14003ef7a:	add    BYTE PTR [rax],al
   14003ef7c:	add    DWORD PTR [rax],eax
   14003ef7e:	add    BYTE PTR [rax],al
   14003ef80:	and    al,BYTE PTR [rip+0x31993]        # 0x140070919
   14003ef86:	add    BYTE PTR [rax],al
   14003ef88:	ror    BYTE PTR [rbx+0x10004],0x0
   14003ef8f:	add    al,bl
   14003ef91:	mov    eax,DWORD PTR [rax+rax*1]
   14003ef94:	or     BYTE PTR [rax],al
   14003ef96:	add    BYTE PTR [rax],al
   14003ef98:	add    BYTE PTR [rsp+rax*1+0x2000],cl
   14003ef9f:	add    BYTE PTR [rax],al
   14003efa1:	add    BYTE PTR [rax],al
   14003efa3:	add    BYTE PTR [rcx],al
   14003efa5:	add    BYTE PTR [rax],al
   14003efa7:	add    BYTE PTR [rdx],ah
   14003efa9:	add    eax,0x61993
   14003efae:	add    BYTE PTR [rax],al
   14003efb0:	fmul   QWORD PTR [rdx+0x10004]
   14003efb6:	add    BYTE PTR [rax],al
   14003efb8:	or     al,0x8b
   14003efba:	add    al,0x0
   14003efbc:	or     al,0x0
   14003efbe:	add    BYTE PTR [rax],al
   14003efc0:	rex mov eax,DWORD PTR [rax+rax*1]
   14003efc4:	and    BYTE PTR [rax],al
   14003efc6:	add    BYTE PTR [rax],al
   14003efc8:	add    BYTE PTR [rax],al
   14003efca:	add    BYTE PTR [rax],al
   14003efcc:	add    DWORD PTR [rax],eax
   14003efce:	add    BYTE PTR [rax],al
   14003efd0:	and    al,BYTE PTR [rip+0x31993]        # 0x140070969
   14003efd6:	add    BYTE PTR [rax],al
   14003efd8:	jl     0x14003ef64
   14003efda:	add    al,0x0
	...
   14003efe4:	add    eax,0x98000000
   14003efe9:	mov    al,BYTE PTR [rax+rax*1]
   14003efec:	xor    BYTE PTR [rax],al
   14003efee:	add    BYTE PTR [rax],al
   14003eff0:	add    BYTE PTR [rax],al
   14003eff2:	add    BYTE PTR [rax],al
   14003eff4:	add    DWORD PTR [rax],eax
	...
   14003f002:	add    BYTE PTR [rax],al
   14003f004:	(bad)  
   14003f005:	test   BYTE PTR [rsi],0x58
   14003f008:	add    BYTE PTR [rax],al
   14003f00a:	add    BYTE PTR [rax],al
   14003f00c:	add    al,BYTE PTR [rax]
   14003f00e:	add    BYTE PTR [rax],al
   14003f010:	and    eax,DWORD PTR [rax]
   14003f012:	add    BYTE PTR [rax],al
   14003f014:	fs sbb al,0x4
   14003f017:	add    BYTE PTR [rsp+rcx*1+0x4],ah
   14003f01b:	add    BYTE PTR [rax],al
   14003f01d:	add    BYTE PTR [rax],al
   14003f01f:	add    BYTE PTR [rdx+0x580ef6],bl
   14003f025:	add    BYTE PTR [rax],al
   14003f027:	add    BYTE PTR [rip+0xffffffff8c000000],cl        # 0xcc03f02d
   14003f02d:	add    al,BYTE PTR [rax]
   14003f02f:	add    BYTE PTR [rsp+rbx*1+0xc9c0004],bl
   14003f036:	add    al,0x0
	...
   14003f060:	movabs al,ds:0x0
	...
   14003f0b5:	add    BYTE PTR [rax],al
   14003f0b7:	add    BYTE PTR [rax],ah
   14003f0b9:	mov    al,0x4
   14003f0bb:	rex add DWORD PTR [rax],eax
	...
   14003f0ce:	add    BYTE PTR [rax],al
   14003f0d0:	test   al,0x26
   14003f0d2:	add    eax,DWORD PTR [rax+0x1]
   14003f0d5:	add    BYTE PTR [rax],al
   14003f0d7:	add    BYTE PTR [rax+0x1400326],dh
   14003f0dd:	add    BYTE PTR [rax],al
   14003f0df:	add    BYTE PTR [rax+0x27],bl
   14003f0e2:	add    eax,DWORD PTR [rax+0x1]
   14003f0e5:	add    BYTE PTR [rax],al
   14003f0e7:	add    bh,dh
	...
   14003f0f1:	xor    eax,0x0
	...
   14003f0fe:	add    BYTE PTR [rax],al
   14003f100:	movabs al,ds:0x4e7
   14003f109:	add    BYTE PTR [rax],al
   14003f10b:	add    bh,bh
   14003f10d:	(bad)  
   14003f10e:	(bad)  
   14003f10f:	inc    DWORD PTR [rax]
   14003f111:	add    BYTE PTR [rax],al
   14003f113:	add    BYTE PTR [rax+0x0],al
   14003f116:	add    BYTE PTR [rax],al
   14003f118:	lock repnz add eax,DWORD PTR [rax]
	...
   14003f130:	add    eax,DWORD PTR [rax]
   14003f132:	add    BYTE PTR [rax],al
   14003f134:	rex icebp 
   14003f136:	add    eax,DWORD PTR [rax]
	...
   14003f140:	cmp    dl,dh
   14003f142:	add    eax,DWORD PTR [rax]
   14003f144:	mov    cl,dh
   14003f146:	add    eax,DWORD PTR [rax]
   14003f148:	add    cl,dh
   14003f14a:	add    eax,DWORD PTR [rax]
	...
   14003f160:	add    DWORD PTR [rax],eax
	...
   14003f16a:	add    BYTE PTR [rax],al
   14003f16c:	shl    bh,1
   14003f16e:	add    al,0x0
   14003f170:	mov    eax,0x600003f2
   14003f175:	icebp  
   14003f176:	add    eax,DWORD PTR [rax]
	...
   14003f188:	shl    bh,1
   14003f18a:	add    al,0x0
   14003f18c:	add    DWORD PTR [rax],eax
   14003f18e:	add    BYTE PTR [rax],al
   14003f190:	add    BYTE PTR [rax],al
   14003f192:	add    BYTE PTR [rax],al
   14003f194:	(bad)  
   14003f195:	(bad)  
   14003f196:	(bad)  
   14003f197:	inc    DWORD PTR [rax]
   14003f199:	add    BYTE PTR [rax],al
   14003f19b:	add    BYTE PTR [rax+0x0],al
   14003f19e:	add    BYTE PTR [rax],al
   14003f1a0:	mov    eax,0x3f2
	...
   14003f1ad:	add    BYTE PTR [rax],al
   14003f1af:	add    BYTE PTR [rax],dh
   14003f1b1:	out    0x4,eax
   14003f1b3:	add    BYTE PTR [rdx],al
   14003f1b5:	add    BYTE PTR [rax],al
   14003f1b7:	add    BYTE PTR [rax],al
   14003f1b9:	add    BYTE PTR [rax],al
   14003f1bb:	add    bh,bh
   14003f1bd:	(bad)  
   14003f1be:	(bad)  
   14003f1bf:	inc    DWORD PTR [rax]
   14003f1c1:	add    BYTE PTR [rax],al
   14003f1c3:	add    BYTE PTR [rax+0x0],al
   14003f1c6:	add    BYTE PTR [rax],al
   14003f1c8:	(bad)  
   14003f1c9:	repnz add eax,DWORD PTR [rax]
	...
   14003f1d8:	add    DWORD PTR [rax],eax
	...
   14003f1e2:	add    BYTE PTR [rax],al
   14003f1e4:	movabs al,ds:0xd80003f2f00004e7
   14003f1ed:	icebp  
   14003f1ee:	add    eax,DWORD PTR [rax]
	...
   14003f200:	add    DWORD PTR [rax],eax
	...
   14003f20a:	add    BYTE PTR [rax],al
   14003f20c:	xor    bh,ah
   14003f20e:	add    al,0x0
   14003f210:	(bad)  
   14003f211:	repnz add eax,DWORD PTR [rax]
   14003f214:	add    dl,dh
   14003f216:	add    eax,DWORD PTR [rax]
	...
   14003f228:	add    cl,dh
   14003f22a:	add    eax,DWORD PTR [rax]
	...
   14003f238:	push   0x20004e7
   14003f23d:	add    BYTE PTR [rax],al
   14003f23f:	add    BYTE PTR [rax],al
   14003f241:	add    BYTE PTR [rax],al
   14003f243:	add    bh,bh
   14003f245:	(bad)  
   14003f246:	(bad)  
   14003f247:	inc    DWORD PTR [rax]
   14003f249:	add    BYTE PTR [rax],al
   14003f24b:	add    BYTE PTR [rax+0x0],al
   14003f24e:	add    BYTE PTR [rax],al
   14003f250:	sub    cl,dh
   14003f252:	add    eax,DWORD PTR [rax]
	...
   14003f268:	add    eax,DWORD PTR [rax]
   14003f26a:	add    BYTE PTR [rax],al
   14003f26c:	shl    dl,1
   14003f26e:	add    eax,DWORD PTR [rax]
	...
   14003f278:	add    DWORD PTR [rax],eax
	...
   14003f282:	add    BYTE PTR [rax],al
   14003f284:	push   0x280004e7
   14003f289:	icebp  
   14003f28a:	add    eax,DWORD PTR [rax]
   14003f28c:	js     0x14003f280
   14003f28e:	add    eax,DWORD PTR [rax]
	...
   14003f2a0:	mov    cl,dh
   14003f2a2:	add    eax,DWORD PTR [rax]
   14003f2a4:	add    cl,dh
   14003f2a6:	add    eax,DWORD PTR [rax]
	...
   14003f2c0:	add    al,BYTE PTR [rax]
   14003f2c2:	add    BYTE PTR [rax],al
   14003f2c4:	movabs al,ds:0x3f2
   14003f2cd:	add    BYTE PTR [rax],al
   14003f2cf:	add    BYTE PTR [rax-0x77fffc0f],dh
   14003f2d5:	icebp  
   14003f2d6:	add    eax,DWORD PTR [rax]
   14003f2d8:	add    cl,dh
   14003f2da:	add    eax,DWORD PTR [rax]
	...
   14003f2f8:	add    DWORD PTR [rax],eax
   14003f2fa:	add    BYTE PTR [rax],al
   14003f2fc:	sub    dl,dh
   14003f2fe:	add    eax,DWORD PTR [rax]
	...
   14003f308:	and    bl,dh
   14003f30a:	add    eax,DWORD PTR [rax]
   14003f30c:	fdiv   st,st(3)
   14003f30e:	add    eax,DWORD PTR [rax]
	...
   14003f320:	or     al,ch
   14003f322:	add    al,0x0
   14003f324:	add    DWORD PTR [rax],eax
   14003f326:	add    BYTE PTR [rax],al
   14003f328:	add    BYTE PTR [rax],al
   14003f32a:	add    BYTE PTR [rax],al
   14003f32c:	(bad)  
   14003f32d:	(bad)  
   14003f32e:	(bad)  
   14003f32f:	inc    DWORD PTR [rax]
   14003f331:	add    BYTE PTR [rax],al
   14003f333:	add    BYTE PTR [rax+0x0],al
   14003f336:	add    BYTE PTR [rax],al
   14003f338:	rex.W
   14003f339:	repz add eax,DWORD PTR [rax]
	...
   14003f350:	add    al,BYTE PTR [rax]
   14003f352:	add    BYTE PTR [rax],al
   14003f354:	or     bl,dh
   14003f356:	add    eax,DWORD PTR [rax]
	...
   14003f360:	add    DWORD PTR [rax],eax
	...
   14003f36a:	add    BYTE PTR [rax],al
   14003f36c:	or     al,ch
   14003f36e:	add    al,0x0
   14003f370:	rex.W
   14003f371:	repz add eax,DWORD PTR [rax]
   14003f374:	(bad)  
   14003f375:	repz add eax,DWORD PTR [rax]
	...
   14003f388:	sub    al,ch
   14003f38a:	add    al,0x0
   14003f38c:	add    DWORD PTR [rax],eax
   14003f38e:	add    BYTE PTR [rax],al
   14003f390:	add    BYTE PTR [rax],al
   14003f392:	add    BYTE PTR [rax],al
   14003f394:	(bad)  
   14003f395:	(bad)  
   14003f396:	(bad)  
   14003f397:	inc    DWORD PTR [rax]
   14003f399:	add    BYTE PTR [rax],al
   14003f39b:	add    BYTE PTR [rax+0x0],al
   14003f39e:	add    BYTE PTR [rax],al
   14003f3a0:	sbb    ah,dh
   14003f3a2:	add    eax,DWORD PTR [rax]
	...
   14003f3b0:	fdiv   st,st(3)
   14003f3b2:	add    eax,DWORD PTR [rax]
	...
   14003f3c8:	add    DWORD PTR [rax],eax
   14003f3ca:	add    BYTE PTR [rax],al
   14003f3cc:	mov    al,0xf3
   14003f3ce:	add    eax,DWORD PTR [rax]
	...
   14003f3d8:	push   rax
   14003f3d9:	call   0x14003f3e2
   14003f3de:	add    BYTE PTR [rax],al
   14003f3e0:	add    BYTE PTR [rax],al
   14003f3e2:	add    BYTE PTR [rax],al
   14003f3e4:	(bad)  
   14003f3e5:	(bad)  
   14003f3e6:	(bad)  
   14003f3e7:	inc    DWORD PTR [rax]
   14003f3e9:	add    BYTE PTR [rax],al
   14003f3eb:	add    BYTE PTR [rax+0x0],al
   14003f3ee:	add    BYTE PTR [rax],al
   14003f3f0:	shl    bl,0x3
	...
   14003f3ff:	add    BYTE PTR [rax-0x27fffc0d],cl
   14003f405:	repz add eax,DWORD PTR [rax]
	...
   14003f420:	add    al,BYTE PTR [rax]
   14003f422:	add    BYTE PTR [rax],al
   14003f424:	add    ah,dh
   14003f426:	add    eax,DWORD PTR [rax]
	...
   14003f430:	add    DWORD PTR [rax],eax
	...
   14003f43a:	add    BYTE PTR [rax],al
   14003f43c:	sub    al,ch
   14003f43e:	add    al,0x0
   14003f440:	sbb    ah,dh
   14003f442:	add    eax,DWORD PTR [rax]
   14003f444:	xor    ah,dh
   14003f446:	add    eax,DWORD PTR [rax]
	...
   14003f458:	mov    ch,dh
   14003f45a:	add    eax,DWORD PTR [rax]
   14003f45c:	(bad)  
   14003f45d:	cmc    
   14003f45e:	add    eax,DWORD PTR [rax]
   14003f460:	nop
   14003f461:	hlt    
   14003f462:	add    eax,DWORD PTR [rax]
   14003f464:	mov    al,0xf5
   14003f466:	add    eax,DWORD PTR [rax]
	...
   14003f480:	mov    al,0xf5
   14003f482:	add    eax,DWORD PTR [rax]
	...
   14003f490:	shr    al,0x4
   14003f493:	add    BYTE PTR [rax],al
   14003f495:	add    BYTE PTR [rax],al
   14003f497:	add    BYTE PTR [rax],cl
   14003f499:	add    BYTE PTR [rax],al
   14003f49b:	add    bh,bh
   14003f49d:	(bad)  
   14003f49e:	(bad)  
   14003f49f:	inc    DWORD PTR [rax]
   14003f4a1:	add    BYTE PTR [rax],al
   14003f4a3:	add    BYTE PTR [rax+0x0],al
   14003f4a6:	add    BYTE PTR [rax],al
   14003f4a8:	lock hlt 
   14003f4aa:	add    eax,DWORD PTR [rax]
	...
   14003f4b8:	jo     0x14003f4a2
   14003f4ba:	add    al,0x0
   14003f4bc:	add    DWORD PTR [rax],eax
   14003f4be:	add    BYTE PTR [rax],al
   14003f4c0:	add    BYTE PTR [rax],al
   14003f4c2:	add    BYTE PTR [rax],al
   14003f4c4:	(bad)  
   14003f4c5:	(bad)  
   14003f4c6:	(bad)  
   14003f4c7:	inc    DWORD PTR [rax]
   14003f4c9:	add    BYTE PTR [rax],al
   14003f4cb:	add    BYTE PTR [rax+0x0],al
   14003f4ce:	add    BYTE PTR [rax],al
   14003f4d0:	rex.W cmc 
   14003f4d2:	add    eax,DWORD PTR [rax]
	...
   14003f4e0:	or     ch,dh
   14003f4e2:	add    eax,DWORD PTR [rax]
	...
   14003f4f8:	add    DWORD PTR [rax],eax
   14003f4fa:	add    BYTE PTR [rax],al
   14003f4fc:	loopne 0x14003f4f2
   14003f4fe:	add    eax,DWORD PTR [rax]
	...
   14003f508:	shr    al,0x4
	...
   14003f513:	add    bh,bh
   14003f515:	(bad)  
   14003f516:	(bad)  
   14003f517:	inc    DWORD PTR [rax]
   14003f519:	add    BYTE PTR [rax],al
   14003f51b:	add    BYTE PTR [rax+0x0],al
   14003f51e:	add    BYTE PTR [rax],al
   14003f520:	lock hlt 
   14003f522:	add    eax,DWORD PTR [rax]
	...
   14003f530:	mov    eax,0x80003f4
   14003f535:	cmc    
   14003f536:	add    eax,DWORD PTR [rax]
	...
   14003f550:	add    al,BYTE PTR [rax]
   14003f552:	add    BYTE PTR [rax],al
   14003f554:	xor    ch,dh
   14003f556:	add    eax,DWORD PTR [rax]
	...
   14003f560:	jo     0x14003f54a
   14003f562:	add    al,0x0
   14003f564:	add    DWORD PTR [rax],eax
   14003f566:	add    BYTE PTR [rax],al
   14003f568:	or     BYTE PTR [rax],al
   14003f56a:	add    BYTE PTR [rax],al
   14003f56c:	(bad)  
   14003f56d:	(bad)  
   14003f56e:	(bad)  
   14003f56f:	inc    DWORD PTR [rax]
   14003f571:	add    BYTE PTR [rax],al
   14003f573:	add    BYTE PTR [rax+0x0],al
   14003f576:	add    BYTE PTR [rax],al
   14003f578:	rex.W cmc 
   14003f57a:	add    eax,DWORD PTR [rax]
	...
   14003f588:	lock call 0x14006f592
   14003f58e:	add    BYTE PTR [rax],al
   14003f590:	add    BYTE PTR [rax],al
   14003f592:	add    BYTE PTR [rax],al
   14003f594:	(bad)  
   14003f595:	(bad)  
   14003f596:	(bad)  
   14003f597:	inc    DWORD PTR [rax]
   14003f599:	add    BYTE PTR [rax],al
   14003f59b:	add    BYTE PTR [rax+0x0],al
   14003f59e:	add    BYTE PTR [rax],al
   14003f5a0:	fdiv   st,st(5)
   14003f5a2:	add    eax,DWORD PTR [rax]
	...
   14003f5b0:	sbb    cl,ch
   14003f5b2:	add    al,0x0
	...
   14003f5bc:	(bad)  
   14003f5bd:	(bad)  
   14003f5be:	(bad)  
   14003f5bf:	inc    DWORD PTR [rax]
   14003f5c1:	add    BYTE PTR [rax],al
   14003f5c3:	add    BYTE PTR [rax+0x0],al
   14003f5c6:	add    BYTE PTR [rax],al
   14003f5c8:	lock cmc 
   14003f5ca:	add    eax,DWORD PTR [rax]
	...
   14003f5dc:	add    DWORD PTR [rax],eax
   14003f5de:	add    BYTE PTR [rax],al
   14003f5e0:	add    al,0x0
   14003f5e2:	add    BYTE PTR [rax],al
   14003f5e4:	pop    rax
   14003f5e5:	hlt    
   14003f5e6:	add    eax,DWORD PTR [rax]
	...
   14003f5f8:	add    DWORD PTR [rax],eax
   14003f5fa:	add    BYTE PTR [rax],al
   14003f5fc:	xor    ah,0x3
	...
   14003f607:	add    BYTE PTR [rcx],al
	...
   14003f611:	add    BYTE PTR [rax],al
   14003f613:	add    al,dh
   14003f615:	call   0x135dbf61e
   14003f61a:	add    eax,DWORD PTR [rax]
   14003f61c:	or     dh,dh
   14003f61e:	add    eax,DWORD PTR [rax]
	...
   14003f630:	js     0x14003f628
   14003f632:	add    eax,DWORD PTR [rax]
   14003f634:	mov    ch,dh
   14003f636:	add    eax,DWORD PTR [rax]
   14003f638:	(bad)  
   14003f639:	cmc    
   14003f63a:	add    eax,DWORD PTR [rax]
   14003f63c:	nop
   14003f63d:	hlt    
   14003f63e:	add    eax,DWORD PTR [rax]
   14003f640:	mov    al,0xf5
   14003f642:	add    eax,DWORD PTR [rax]
	...
   14003f660:	movabs al,ds:0x3fa600003f6
	...
   14003f675:	add    BYTE PTR [rax],al
   14003f677:	add    BYTE PTR [rax-0x17],cl
   14003f67a:	add    al,0x0
   14003f67c:	add    al,0x0
   14003f67e:	add    BYTE PTR [rax],al
   14003f680:	add    BYTE PTR [rax],al
   14003f682:	add    BYTE PTR [rax],al
   14003f684:	(bad)  
   14003f685:	(bad)  
   14003f686:	(bad)  
   14003f687:	inc    DWORD PTR [rax]
   14003f689:	add    BYTE PTR [rax],al
   14003f68b:	add    BYTE PTR [rax+0x0],al
   14003f68e:	add    BYTE PTR [rax],al
   14003f690:	enter  0x3f6,0x0
	...
   14003f6a0:	sub    cl,0x4
   14003f6a3:	add    BYTE PTR [rcx],al
   14003f6a5:	add    BYTE PTR [rax],al
   14003f6a7:	add    BYTE PTR [rax],al
   14003f6a9:	add    BYTE PTR [rax],al
   14003f6ab:	add    bh,bh
   14003f6ad:	(bad)  
   14003f6ae:	(bad)  
   14003f6af:	inc    DWORD PTR [rax]
   14003f6b1:	add    BYTE PTR [rax],al
   14003f6b3:	add    BYTE PTR [rax+0x0],al
   14003f6b6:	add    BYTE PTR [rax],al
   14003f6b8:	loopne 0x14003f6b0
   14003f6ba:	add    eax,DWORD PTR [rax]
	...
   14003f6cc:	add    DWORD PTR [rax],eax
   14003f6ce:	add    BYTE PTR [rax],al
   14003f6d0:	add    eax,0x30000000
   14003f6d5:	test   BYTE PTR [rbx],0x0
	...
   14003f6e8:	add    al,BYTE PTR [rax]
   14003f6ea:	add    BYTE PTR [rax],al
   14003f6ec:	(bad)  
   14003f6ed:	test   BYTE PTR [rbx],0x0
	...
   14003f6f8:	add    DWORD PTR [rax],eax
	...
   14003f702:	add    BYTE PTR [rax],al
   14003f704:	jmp    0x136cbf70e
   14003f70a:	add    eax,DWORD PTR [rax]
   14003f70c:	clc    
   14003f70d:	test   BYTE PTR [rbx],0x0
	...
   14003f720:	add    DWORD PTR [rax],eax
	...
   14003f72a:	add    BYTE PTR [rax],al
   14003f72c:	sub    cl,0x4
   14003f72f:	add    al,ah
   14003f731:	test   BYTE PTR [rbx],0x0
   14003f734:	and    bh,dh
   14003f736:	add    eax,DWORD PTR [rax]
	...
   14003f748:	add    DWORD PTR [rax],eax
	...
   14003f752:	add    BYTE PTR [rax],al
   14003f754:	sbb    dl,ch
   14003f756:	add    al,0x0
   14003f758:	adc    al,bh
   14003f75a:	add    eax,DWORD PTR [rax]
   14003f75c:	test   QWORD PTR [rbx],0x0
	...
   14003f76f:	add    BYTE PTR [rax+0x30004e9],dh
   14003f775:	add    BYTE PTR [rax],al
   14003f777:	add    BYTE PTR [rax],al
   14003f779:	add    BYTE PTR [rax],al
   14003f77b:	add    bh,bh
   14003f77d:	(bad)  
   14003f77e:	(bad)  
   14003f77f:	inc    DWORD PTR [rax]
   14003f781:	add    BYTE PTR [rax],al
   14003f783:	add    BYTE PTR [rax+0x0],al
   14003f786:	add    BYTE PTR [rax],al
   14003f788:	lock clc 
   14003f78a:	add    eax,DWORD PTR [rax]
	...
   14003f798:	shl    bh,1
   14003f79a:	add    eax,DWORD PTR [rax]
   14003f79c:	sub    al,bh
   14003f79e:	add    eax,DWORD PTR [rax]
   14003f7a0:	movabs al,ds:0x3f8
	...
   14003f7bd:	add    BYTE PTR [rax],al
   14003f7bf:	add    BYTE PTR [rbx],al
   14003f7c1:	add    BYTE PTR [rax],al
   14003f7c3:	add    BYTE PTR [rax+0x3f7],bl
   14003f7c9:	add    BYTE PTR [rax],al
   14003f7cb:	add    BYTE PTR [rax],al
   14003f7cd:	add    BYTE PTR [rax],al
   14003f7cf:	add    al,bl
   14003f7d1:	jmp    0x14005f7da
   14003f7d6:	add    BYTE PTR [rax],al
   14003f7d8:	add    BYTE PTR [rax],al
   14003f7da:	add    BYTE PTR [rax],al
   14003f7dc:	(bad)  
   14003f7dd:	(bad)  
   14003f7de:	(bad)  
   14003f7df:	inc    DWORD PTR [rax]
   14003f7e1:	add    BYTE PTR [rax],al
   14003f7e3:	add    BYTE PTR [rax+0x0],al
   14003f7e6:	add    BYTE PTR [rax],al
   14003f7e8:	mov    eax,0x3f7
	...
   14003f7f5:	add    BYTE PTR [rax],al
   14003f7f7:	add    BYTE PTR [rax],ch
   14003f7f9:	clc    
   14003f7fa:	add    eax,DWORD PTR [rax]
   14003f7fc:	movabs al,ds:0x3f8
	...
   14003f815:	add    BYTE PTR [rax],al
   14003f817:	add    BYTE PTR [rdx],al
   14003f819:	add    BYTE PTR [rax],al
   14003f81b:	add    al,bh
   14003f81d:	test   DWORD PTR [rbx],0x0
   14003f823:	add    BYTE PTR [rax],al
   14003f825:	add    BYTE PTR [rax],al
   14003f827:	add    BYTE PTR [rax],bl
   14003f829:	(bad)  
   14003f82a:	add    al,0x0
   14003f82c:	add    DWORD PTR [rax],eax
   14003f82e:	add    BYTE PTR [rax],al
   14003f830:	add    BYTE PTR [rax],al
   14003f832:	add    BYTE PTR [rax],al
   14003f834:	(bad)  
   14003f835:	(bad)  
   14003f836:	(bad)  
   14003f837:	inc    DWORD PTR [rax]
   14003f839:	add    BYTE PTR [rax],al
   14003f83b:	add    BYTE PTR [rax+0x0],al
   14003f83e:	add    BYTE PTR [rax],al
   14003f840:	adc    al,bh
   14003f842:	add    eax,DWORD PTR [rax]
	...
   14003f850:	rex (bad) 
   14003f852:	add    al,0x0
	...
   14003f85c:	(bad)  
   14003f85d:	(bad)  
   14003f85e:	(bad)  
   14003f85f:	inc    DWORD PTR [rax]
   14003f861:	add    BYTE PTR [rax],al
   14003f863:	add    BYTE PTR [rax+0x0],al
   14003f866:	add    BYTE PTR [rax],al
   14003f868:	mov    al,bh
   14003f86a:	add    eax,DWORD PTR [rax]
	...
   14003f878:	push   rax
   14003f879:	clc    
   14003f87a:	add    eax,DWORD PTR [rax]
	...
   14003f890:	add    DWORD PTR [rax],eax
   14003f892:	add    BYTE PTR [rax],al
   14003f894:	js     0x14003f88e
   14003f896:	add    eax,DWORD PTR [rax]
	...
   14003f8a0:	rex (bad) 
   14003f8a2:	add    al,0x0
   14003f8a4:	add    BYTE PTR [rax],al
   14003f8a6:	add    BYTE PTR [rax],al
   14003f8a8:	or     BYTE PTR [rax],al
   14003f8aa:	add    BYTE PTR [rax],al
   14003f8ac:	(bad)  
   14003f8ad:	(bad)  
   14003f8ae:	(bad)  
   14003f8af:	inc    DWORD PTR [rax]
   14003f8b1:	add    BYTE PTR [rax],al
   14003f8b3:	add    BYTE PTR [rax+0x0],al
   14003f8b6:	add    BYTE PTR [rax],al
   14003f8b8:	mov    al,bh
   14003f8ba:	add    eax,DWORD PTR [rax]
	...
   14003f8c8:	jo     0x14003f8c1
   14003f8ca:	add    eax,DWORD PTR [rax]
   14003f8cc:	shl    bh,1
   14003f8ce:	add    eax,DWORD PTR [rax]
   14003f8d0:	sub    al,bh
   14003f8d2:	add    eax,DWORD PTR [rax]
   14003f8d4:	movabs al,ds:0x3f8
	...
   14003f8f5:	add    BYTE PTR [rax],al
   14003f8f7:	add    BYTE PTR [rax+rax*1],al
   14003f8fa:	add    BYTE PTR [rax],al
   14003f8fc:	enter  0x3f8,0x0
	...
   14003f908:	add    DWORD PTR [rax],eax
	...
   14003f912:	add    BYTE PTR [rax],al
   14003f914:	mov    al,0xe9
   14003f916:	add    al,0x0
   14003f918:	lock clc 
   14003f91a:	add    eax,DWORD PTR [rax]
   14003f91c:	or     cl,bh
   14003f91e:	add    eax,DWORD PTR [rax]
	...
   14003f930:	push   0x20004ea
   14003f935:	add    BYTE PTR [rax],al
   14003f937:	add    BYTE PTR [rax],al
   14003f939:	add    BYTE PTR [rax],al
   14003f93b:	add    bh,bh
   14003f93d:	(bad)  
   14003f93e:	(bad)  
   14003f93f:	inc    DWORD PTR [rax]
   14003f941:	add    BYTE PTR [rax],al
   14003f943:	add    BYTE PTR [rax+0x0],al
   14003f946:	add    BYTE PTR [rax],al
   14003f948:	and    dl,bh
   14003f94a:	add    eax,DWORD PTR [rax]
	...
   14003f958:	mov    cl,bh
   14003f95a:	add    eax,DWORD PTR [rax]
   14003f95c:	fdivr  st,st(1)
   14003f95e:	add    eax,DWORD PTR [rax]
	...
   14003f978:	add    al,BYTE PTR [rax]
   14003f97a:	add    BYTE PTR [rax],al
   14003f97c:	pop    rax
   14003f97d:	stc    
   14003f97e:	add    eax,DWORD PTR [rax]
	...
   14003f988:	nop
   14003f989:	(bad)  
   14003f98a:	add    al,0x0
   14003f98c:	add    DWORD PTR [rax],eax
   14003f98e:	add    BYTE PTR [rax],al
   14003f990:	add    BYTE PTR [rax],al
   14003f992:	add    BYTE PTR [rax],al
   14003f994:	(bad)  
   14003f995:	(bad)  
   14003f996:	(bad)  
   14003f997:	inc    DWORD PTR [rax]
   14003f999:	add    BYTE PTR [rax],al
   14003f99b:	add    BYTE PTR [rax+0x0],al
   14003f99e:	add    BYTE PTR [rax],al
   14003f9a0:	jo     0x14003f99b
   14003f9a2:	add    eax,DWORD PTR [rax]
	...
   14003f9b0:	fdivr  st,st(1)
   14003f9b2:	add    eax,DWORD PTR [rax]
	...
   14003f9c8:	add    DWORD PTR [rax],eax
   14003f9ca:	add    BYTE PTR [rax],al
   14003f9cc:	mov    al,0xf9
   14003f9ce:	add    eax,DWORD PTR [rax]
	...
   14003f9d8:	mov    eax,0x4ea
   14003f9dd:	add    BYTE PTR [rax],al
   14003f9df:	add    BYTE PTR [rax],al
   14003f9e1:	add    BYTE PTR [rax],al
   14003f9e3:	add    bh,bh
   14003f9e5:	(bad)  
   14003f9e6:	(bad)  
   14003f9e7:	inc    DWORD PTR [rax]
   14003f9e9:	add    BYTE PTR [rax],al
   14003f9eb:	add    BYTE PTR [rax+0x0],al
   14003f9ee:	add    BYTE PTR [rax],al
   14003f9f0:	sar    cl,0x3
	...
   14003f9ff:	add    BYTE PTR [rax],dh
   14003fa01:	stc    
   14003fa02:	add    eax,DWORD PTR [rax]
   14003fa04:	mov    cl,bh
   14003fa06:	add    eax,DWORD PTR [rax]
   14003fa08:	fdivr  st,st(1)
   14003fa0a:	add    eax,DWORD PTR [rax]
	...
   14003fa28:	add    eax,DWORD PTR [rax]
   14003fa2a:	add    BYTE PTR [rax],al
   14003fa2c:	add    dl,bh
   14003fa2e:	add    eax,DWORD PTR [rax]
	...
   14003fa38:	add    DWORD PTR [rax],eax
	...
   14003fa42:	add    BYTE PTR [rax],al
   14003fa44:	push   0x200004ea
   14003fa49:	cli    
   14003fa4a:	add    eax,DWORD PTR [rax]
   14003fa4c:	cmp    dl,bh
   14003fa4e:	add    eax,DWORD PTR [rax]
	...
   14003fa60:	add    bl,ch
   14003fa62:	add    al,0x0
	...
   14003fa6c:	(bad)  
   14003fa6d:	(bad)  
   14003fa6e:	(bad)  
   14003fa6f:	inc    DWORD PTR [rax]
   14003fa71:	add    BYTE PTR [rax],al
   14003fa73:	add    BYTE PTR [rax+0x0],al
   14003fa76:	add    BYTE PTR [rax],al
   14003fa78:	cwde   
   14003fa79:	cli    
   14003fa7a:	add    eax,DWORD PTR [rax]
	...
   14003fa88:	(bad)  
   14003fa89:	cli    
   14003fa8a:	add    eax,DWORD PTR [rax]
	...
   14003faa0:	add    DWORD PTR [rax],eax
   14003faa2:	add    BYTE PTR [rax],al
   14003faa4:	mov    dl,bh
   14003faa6:	add    eax,DWORD PTR [rax]
	...
   14003fab0:	add    DWORD PTR [rax],eax
	...
   14003faba:	add    BYTE PTR [rax],al
   14003fabc:	add    bl,ch
   14003fabe:	add    al,0x0
   14003fac0:	cwde   
   14003fac1:	cli    
   14003fac2:	add    eax,DWORD PTR [rax]
   14003fac4:	mov    al,0xfa
   14003fac6:	add    eax,DWORD PTR [rax]
	...
   14003fae0:	movabs al,ds:0x680003fc900003fb
   14003fae9:	cld    
   14003faea:	add    eax,DWORD PTR [rax]
   14003faec:	rex cld 
   14003faee:	add    eax,DWORD PTR [rax]
   14003faf0:	mov    eax,0x180003fc
   14003faf5:	cld    
   14003faf6:	add    eax,DWORD PTR [rax]
   14003faf8:	lock sti 
   14003fafa:	add    eax,DWORD PTR [rax]
   14003fafc:	enter  0x3fb,0x0
	...
   14003fb28:	nop
   14003fb29:	cld    
   14003fb2a:	add    eax,DWORD PTR [rax]
   14003fb2c:	push   0x400003fc
   14003fb31:	cld    
   14003fb32:	add    eax,DWORD PTR [rax]
   14003fb34:	mov    eax,0x180003fc
   14003fb39:	cld    
   14003fb3a:	add    eax,DWORD PTR [rax]
   14003fb3c:	lock sti 
   14003fb3e:	add    eax,DWORD PTR [rax]
   14003fb40:	enter  0x3fb,0x0
	...
   14003fb68:	mov    eax,0x3fc
	...
   14003fb75:	add    BYTE PTR [rax],al
   14003fb77:	add    al,ah
   14003fb79:	cld    
   14003fb7a:	add    eax,DWORD PTR [rax]
	...
   14003fb88:	or     ch,bh
   14003fb8a:	add    eax,DWORD PTR [rax]
   14003fb8c:	fdivr  st,st(1)
   14003fb8e:	add    eax,DWORD PTR [rax]
	...
   14003fba0:	sub    bl,ch
   14003fba2:	add    al,0x0
   14003fba4:	(bad)  
   14003fba5:	add    BYTE PTR [rax],al
   14003fba7:	add    BYTE PTR [rax],al
   14003fba9:	add    BYTE PTR [rax],al
   14003fbab:	add    bh,bh
   14003fbad:	(bad)  
   14003fbae:	(bad)  
   14003fbaf:	inc    DWORD PTR [rax]
   14003fbb1:	add    BYTE PTR [rax],al
   14003fbb3:	add    BYTE PTR [rax+0x0],al
   14003fbb6:	add    BYTE PTR [rax],al
   14003fbb8:	xor    ch,bh
   14003fbba:	add    eax,DWORD PTR [rax]
	...
   14003fbc8:	mov    eax,0x4ea
   14003fbcd:	add    BYTE PTR [rax],al
   14003fbcf:	add    BYTE PTR [rax],dl
   14003fbd1:	add    BYTE PTR [rax],al
   14003fbd3:	add    bh,bh
   14003fbd5:	(bad)  
   14003fbd6:	(bad)  
   14003fbd7:	inc    DWORD PTR [rax]
   14003fbd9:	add    BYTE PTR [rax],al
   14003fbdb:	add    BYTE PTR [rax+0x0],al
   14003fbde:	add    BYTE PTR [rax],al
   14003fbe0:	sar    cl,0x3
	...
   14003fbef:	add    al,bh
   14003fbf1:	jmp    0x14003fbf7
   14003fbf3:	add    BYTE PTR [rcx],al
   14003fbf5:	add    BYTE PTR [rax],al
   14003fbf7:	add    BYTE PTR [rax],dl
   14003fbf9:	add    BYTE PTR [rax],al
   14003fbfb:	add    bh,bh
   14003fbfd:	(bad)  
   14003fbfe:	(bad)  
   14003fbff:	inc    DWORD PTR [rax]
   14003fc01:	add    BYTE PTR [rax],al
   14003fc03:	add    BYTE PTR [rax+0x0],al
   14003fc06:	add    BYTE PTR [rax],al
   14003fc08:	nop
   14003fc09:	std    
   14003fc0a:	add    eax,DWORD PTR [rax]
	...
   14003fc18:	shr    bl,0x4
   14003fc1b:	add    BYTE PTR [rax],al
   14003fc1d:	add    BYTE PTR [rax],al
   14003fc1f:	add    BYTE PTR [rax],cl
   14003fc21:	add    BYTE PTR [rax],al
   14003fc23:	add    bh,bh
   14003fc25:	(bad)  
   14003fc26:	(bad)  
   14003fc27:	inc    DWORD PTR [rax]
   14003fc29:	add    BYTE PTR [rax],al
   14003fc2b:	add    BYTE PTR [rax+0x0],al
   14003fc2e:	add    BYTE PTR [rax],al
   14003fc30:	js     0x14003fc2f
   14003fc32:	add    eax,DWORD PTR [rax]
	...
   14003fc40:	shr    al,0x4
   14003fc43:	add    BYTE PTR [rax],al
   14003fc45:	add    BYTE PTR [rax],al
   14003fc47:	add    BYTE PTR [rax],bl
   14003fc49:	add    BYTE PTR [rax],al
   14003fc4b:	add    bh,bh
   14003fc4d:	(bad)  
   14003fc4e:	(bad)  
   14003fc4f:	inc    DWORD PTR [rax]
   14003fc51:	add    BYTE PTR [rax],al
   14003fc53:	add    BYTE PTR [rax+0x0],al
   14003fc56:	add    BYTE PTR [rax],al
   14003fc58:	lock hlt 
   14003fc5a:	add    eax,DWORD PTR [rax]
	...
   14003fc68:	jo     0x14003fc52
   14003fc6a:	add    al,0x0
   14003fc6c:	add    DWORD PTR [rax],eax
   14003fc6e:	add    BYTE PTR [rax],al
   14003fc70:	sbb    BYTE PTR [rax],al
   14003fc72:	add    BYTE PTR [rax],al
   14003fc74:	(bad)  
   14003fc75:	(bad)  
   14003fc76:	(bad)  
   14003fc77:	inc    DWORD PTR [rax]
   14003fc79:	add    BYTE PTR [rax],al
   14003fc7b:	add    BYTE PTR [rax+0x0],al
   14003fc7e:	add    BYTE PTR [rax],al
   14003fc80:	rex.W cmc 
   14003fc82:	add    eax,DWORD PTR [rax]
	...
   14003fc90:	push   0x60004eb
   14003fc95:	add    BYTE PTR [rax],al
   14003fc97:	add    BYTE PTR [rax],al
   14003fc99:	add    BYTE PTR [rax],al
   14003fc9b:	add    bh,bh
   14003fc9d:	(bad)  
   14003fc9e:	(bad)  
   14003fc9f:	inc    DWORD PTR [rax]
   14003fca1:	add    BYTE PTR [rax],al
   14003fca3:	add    BYTE PTR [rax+0x0],al
   14003fca6:	add    BYTE PTR [rax],al
   14003fca8:	rex.W std 
   14003fcaa:	add    eax,DWORD PTR [rax]
	...
   14003fcb8:	nop
   14003fcb9:	jmp    0x14003fcbf
	...
   14003fcc3:	add    bh,bh
   14003fcc5:	(bad)  
   14003fcc6:	(bad)  
   14003fcc7:	inc    DWORD PTR [rax]
   14003fcc9:	add    BYTE PTR [rax],al
   14003fccb:	add    BYTE PTR [rax+0x0],al
   14003fcce:	add    BYTE PTR [rax],al
   14003fcd0:	(bad)  
   14003fcd1:	std    
   14003fcd2:	add    eax,DWORD PTR [rax]
	...
   14003fce0:	shr    bl,0x4
	...
   14003fceb:	add    bh,bh
   14003fced:	(bad)  
   14003fcee:	(bad)  
   14003fcef:	inc    DWORD PTR [rax]
   14003fcf1:	add    BYTE PTR [rax],al
   14003fcf3:	add    BYTE PTR [rax+0x0],al
   14003fcf6:	add    BYTE PTR [rax],al
   14003fcf8:	js     0x14003fcf7
   14003fcfa:	add    eax,DWORD PTR [rax]
	...
   14003fd08:	clc    
   14003fd09:	jmp    0x14003fd0f
   14003fd0b:	add    BYTE PTR [rcx],al
   14003fd0d:	add    BYTE PTR [rax],al
   14003fd0f:	add    BYTE PTR [rax],al
   14003fd11:	add    BYTE PTR [rax],al
   14003fd13:	add    bh,bh
   14003fd15:	(bad)  
   14003fd16:	(bad)  
   14003fd17:	inc    DWORD PTR [rax]
   14003fd19:	add    BYTE PTR [rax],al
   14003fd1b:	add    BYTE PTR [rax+0x0],al
   14003fd1e:	add    BYTE PTR [rax],al
   14003fd20:	nop
   14003fd21:	std    
   14003fd22:	add    eax,DWORD PTR [rax]
	...
   14003fd34:	add    DWORD PTR [rax],eax
   14003fd36:	add    BYTE PTR [rax],al
   14003fd38:	or     BYTE PTR [rax],al
   14003fd3a:	add    BYTE PTR [rax],al
   14003fd3c:	loopne 0x14003fd38
   14003fd3e:	add    eax,DWORD PTR [rax]
	...
   14003fd4c:	add    DWORD PTR [rax],eax
   14003fd4e:	add    BYTE PTR [rax],al
   14003fd50:	(bad)  
   14003fd51:	add    BYTE PTR [rax],al
   14003fd53:	add    BYTE PTR [rax],ch
   14003fd55:	sti    
   14003fd56:	add    eax,DWORD PTR [rax]
	...
   14003fd68:	add    DWORD PTR [rax],eax
   14003fd6a:	add    BYTE PTR [rax],al
   14003fd6c:	push   0x3fb
	...
   14003fd7d:	add    BYTE PTR [rax],al
   14003fd7f:	add    BYTE PTR [rcx],al
   14003fd81:	add    BYTE PTR [rax],al
   14003fd83:	add    BYTE PTR [rax-0x5],bh
   14003fd86:	add    eax,DWORD PTR [rax]
	...
   14003fd98:	add    al,BYTE PTR [rax]
   14003fd9a:	add    BYTE PTR [rax],al
   14003fd9c:	mov    bl,bh
   14003fd9e:	add    eax,DWORD PTR [rax]
	...
   14003fda8:	add    DWORD PTR [rax],eax
   14003fdaa:	add    BYTE PTR [rax],al
   14003fdac:	adc    BYTE PTR [rax],al
   14003fdae:	add    BYTE PTR [rax],al
   14003fdb0:	add    BYTE PTR [rax],al
   14003fdb2:	add    BYTE PTR [rax],al
   14003fdb4:	sub    bl,ch
   14003fdb6:	add    al,0x0
   14003fdb8:	xor    ch,bh
   14003fdba:	add    eax,DWORD PTR [rax]
   14003fdbc:	test   al,0xfd
   14003fdbe:	add    eax,DWORD PTR [rax]
	...
   14003fdd0:	add    DWORD PTR [rax],eax
   14003fdd2:	add    BYTE PTR [rax],al
   14003fdd4:	or     BYTE PTR [rax],al
   14003fdd6:	add    BYTE PTR [rax],al
   14003fdd8:	add    BYTE PTR [rax],al
   14003fdda:	add    BYTE PTR [rax],al
   14003fddc:	sub    bl,ch
   14003fdde:	add    al,0x0
   14003fde0:	xor    ch,bh
   14003fde2:	add    eax,DWORD PTR [rax]
   14003fde4:	sar    ch,1
   14003fde6:	add    eax,DWORD PTR [rax]
	...
   14003fdf8:	add    DWORD PTR [rax],eax
	...
   14003fe02:	add    BYTE PTR [rax],al
   14003fe04:	sub    bl,ch
   14003fe06:	add    al,0x0
   14003fe08:	xor    ch,bh
   14003fe0a:	add    eax,DWORD PTR [rax]
   14003fe0c:	clc    
   14003fe0d:	std    
   14003fe0e:	add    eax,DWORD PTR [rax]
	...
   14003fe20:	add    DWORD PTR [rax],eax
   14003fe22:	add    BYTE PTR [rax],al
   14003fe24:	adc    BYTE PTR [rax],al
   14003fe26:	add    BYTE PTR [rax],al
   14003fe28:	add    BYTE PTR [rax],al
   14003fe2a:	add    BYTE PTR [rax],al
   14003fe2c:	push   0x480004eb
   14003fe31:	std    
   14003fe32:	add    eax,DWORD PTR [rax]
   14003fe34:	and    dh,bh
   14003fe36:	add    eax,DWORD PTR [rax]
	...
   14003fe48:	add    DWORD PTR [rax],eax
   14003fe4a:	add    BYTE PTR [rax],al
   14003fe4c:	or     BYTE PTR [rax],al
   14003fe4e:	add    BYTE PTR [rax],al
   14003fe50:	add    BYTE PTR [rax],al
   14003fe52:	add    BYTE PTR [rax],al
   14003fe54:	push   0x480004eb
   14003fe59:	std    
   14003fe5a:	add    eax,DWORD PTR [rax]
   14003fe5c:	rex.W inc BYTE PTR [rbx]
	...
   14003fe6f:	add    BYTE PTR [rcx],al
	...
   14003fe79:	add    BYTE PTR [rax],al
   14003fe7b:	add    BYTE PTR [rax-0x15],ch
   14003fe7e:	add    al,0x0
   14003fe80:	rex.W std 
   14003fe82:	add    eax,DWORD PTR [rax]
   14003fe84:	jo     0x14003fe84
   14003fe86:	add    eax,DWORD PTR [rax]
	...
   14003fea0:	test   al,0xff
   14003fea2:	add    eax,DWORD PTR [rax]
   14003fea4:	rol    BYTE PTR [rax],0x4
   14003fea7:	add    BYTE PTR [rax+0x70000400],bl
   14003fead:	add    BYTE PTR [rax+rax*1],al
   14003feb0:	call   0x1880402b5
   14003feb5:	add    BYTE PTR [rax+rax*1],al
   14003feb8:	and    BYTE PTR [rax],al
   14003feba:	add    al,0x0
   14003febc:	clc    
   14003febd:	inc    DWORD PTR [rbx]
   14003febf:	add    al,dl
   14003fec1:	inc    DWORD PTR [rbx]
	...
   14003feef:	add    al,al
   14003fef1:	add    BYTE PTR [rax+rax*1],al
   14003fef4:	cwde   
   14003fef5:	add    BYTE PTR [rax+rax*1],al
   14003fef8:	jo     0x14003fefa
   14003fefa:	add    al,0x0
   14003fefc:	call   0x188040301
   14003ff01:	add    BYTE PTR [rax+rax*1],al
   14003ff04:	and    BYTE PTR [rax],al
   14003ff06:	add    al,0x0
   14003ff08:	clc    
   14003ff09:	inc    DWORD PTR [rbx]
   14003ff0b:	add    al,dl
   14003ff0d:	inc    DWORD PTR [rbx]
	...
   14003ff37:	add    al,ch
   14003ff39:	add    BYTE PTR [rax+rax*1],al
	...
   14003ff48:	adc    BYTE PTR [rcx],al
   14003ff4a:	add    al,0x0
   14003ff4c:	cmp    BYTE PTR [rcx],al
   14003ff4e:	add    al,0x0
   14003ff50:	(bad)  
   14003ff51:	add    DWORD PTR [rax+rax*1],eax
   14003ff54:	fdivr  st,st(1)
   14003ff56:	add    eax,DWORD PTR [rax]
	...
   14003ff70:	cmp    BYTE PTR [rcx],al
   14003ff72:	add    al,0x0
   14003ff74:	(bad)  
   14003ff75:	add    DWORD PTR [rax+rax*1],eax
   14003ff78:	fdivr  st,st(1)
   14003ff7a:	add    eax,DWORD PTR [rax]
	...
   14003ff90:	(bad)  
   14003ff91:	add    DWORD PTR [rax+rax*1],eax
   14003ff94:	fdivr  st,st(1)
   14003ff96:	add    eax,DWORD PTR [rax]
	...
   14003ffa8:	and    ah,ch
   14003ffaa:	add    al,0x0
   14003ffac:	or     BYTE PTR [rax],al
   14003ffae:	add    BYTE PTR [rax],al
   14003ffb0:	add    BYTE PTR [rax],al
   14003ffb2:	add    BYTE PTR [rax],al
   14003ffb4:	(bad)  
   14003ffb5:	(bad)  
   14003ffb6:	(bad)  
   14003ffb7:	inc    DWORD PTR [rax]
   14003ffb9:	add    BYTE PTR [rax],al
   14003ffbb:	add    BYTE PTR [rax+0x0],al
   14003ffbe:	add    BYTE PTR [rax],al
   14003ffc0:	mov    BYTE PTR [rcx],al
   14003ffc2:	add    al,0x0
	...
   14003ffd0:	mov    eax,0x4ea
   14003ffd5:	add    BYTE PTR [rax],al
   14003ffd7:	add    BYTE PTR [rax],cl
   14003ffd9:	add    BYTE PTR [rax],al
   14003ffdb:	add    bh,bh
   14003ffdd:	(bad)  
   14003ffde:	(bad)  
   14003ffdf:	inc    DWORD PTR [rax]
   14003ffe1:	add    BYTE PTR [rax],al
   14003ffe3:	add    BYTE PTR [rax+0x0],al
   14003ffe6:	add    BYTE PTR [rax],al
   14003ffe8:	sar    cl,0x3
	...
   14003fff7:	add    BYTE PTR [rax],ah
   14003fff9:	in     eax,dx
   14003fffa:	add    al,0x0
   14003fffc:	add    DWORD PTR [rax],eax
   14003fffe:	add    BYTE PTR [rax],al
   140040000:	or     BYTE PTR [rax],al
   140040002:	add    BYTE PTR [rax],al
   140040004:	(bad)  
   140040005:	(bad)  
   140040006:	(bad)  
   140040007:	inc    DWORD PTR [rax]
   140040009:	add    BYTE PTR [rax],al
   14004000b:	add    BYTE PTR [rax+0x0],al
   14004000e:	add    BYTE PTR [rax],al
   140040010:	add    BYTE PTR [rdx],al
   140040012:	add    al,0x0
	...
   140040020:	lock in al,dx
   140040022:	add    al,0x0
   140040024:	add    al,BYTE PTR [rax]
   140040026:	add    BYTE PTR [rax],al
   140040028:	or     BYTE PTR [rax],al
   14004002a:	add    BYTE PTR [rax],al
   14004002c:	(bad)  
   14004002d:	(bad)  
   14004002e:	(bad)  
   14004002f:	inc    DWORD PTR [rax]
   140040031:	add    BYTE PTR [rax],al
   140040033:	add    BYTE PTR [rax+0x0],al
   140040036:	add    BYTE PTR [rax],al
   140040038:	call   0x14004043e
	...
   140040045:	add    BYTE PTR [rax],al
   140040047:	add    al,al
   140040049:	in     al,dx
   14004004a:	add    al,0x0
   14004004c:	add    eax,DWORD PTR [rax]
   14004004e:	add    BYTE PTR [rax],al
   140040050:	or     BYTE PTR [rax],al
   140040052:	add    BYTE PTR [rax],al
   140040054:	(bad)  
   140040055:	(bad)  
   140040056:	(bad)  
   140040057:	inc    DWORD PTR [rax]
   140040059:	add    BYTE PTR [rax],al
   14004005b:	add    BYTE PTR [rax+0x0],al
   14004005e:	add    BYTE PTR [rax],al
   140040060:	rol    BYTE PTR [rcx],1
   140040062:	add    al,0x0
	...
   140040070:	shr    al,0x4
   140040073:	add    BYTE PTR [rax],al
   140040075:	add    BYTE PTR [rax],al
   140040077:	add    BYTE PTR [rax],dl
   140040079:	add    BYTE PTR [rax],al
   14004007b:	add    bh,bh
   14004007d:	(bad)  
   14004007e:	(bad)  
   14004007f:	inc    DWORD PTR [rax]
   140040081:	add    BYTE PTR [rax],al
   140040083:	add    BYTE PTR [rax+0x0],al
   140040086:	add    BYTE PTR [rax],al
   140040088:	lock hlt 
   14004008a:	add    eax,DWORD PTR [rax]
	...
   140040098:	jo     0x140040082
   14004009a:	add    al,0x0
   14004009c:	add    DWORD PTR [rax],eax
   14004009e:	add    BYTE PTR [rax],al
   1400400a0:	adc    BYTE PTR [rax],al
   1400400a2:	add    BYTE PTR [rax],al
   1400400a4:	(bad)  
   1400400a5:	(bad)  
   1400400a6:	(bad)  
   1400400a7:	inc    DWORD PTR [rax]
   1400400a9:	add    BYTE PTR [rax],al
   1400400ab:	add    BYTE PTR [rax+0x0],al
   1400400ae:	add    BYTE PTR [rax],al
   1400400b0:	rex.W cmc 
   1400400b2:	add    eax,DWORD PTR [rax]
	...
   1400400c0:	(bad)  
   1400400c1:	in     al,dx
   1400400c2:	add    al,0x0
   1400400c4:	(bad)  
   1400400c5:	add    BYTE PTR [rax],al
   1400400c7:	add    BYTE PTR [rax],al
   1400400c9:	add    BYTE PTR [rax],al
   1400400cb:	add    bh,bh
   1400400cd:	(bad)  
   1400400ce:	(bad)  
   1400400cf:	inc    DWORD PTR [rax]
   1400400d1:	add    BYTE PTR [rax],al
   1400400d3:	add    BYTE PTR [rax+0x0],al
   1400400d6:	add    BYTE PTR [rax],al
   1400400d8:	movabs al,ds:0x401
   1400400e1:	add    BYTE PTR [rax],al
   1400400e3:	add    BYTE PTR [rax],al
   1400400e5:	add    BYTE PTR [rax],al
   1400400e7:	add    BYTE PTR [rax+0x4ec],dl
   1400400ed:	add    BYTE PTR [rax],al
   1400400ef:	add    BYTE PTR [rax],al
   1400400f1:	add    BYTE PTR [rax],al
   1400400f3:	add    bh,bh
   1400400f5:	(bad)  
   1400400f6:	(bad)  
   1400400f7:	inc    DWORD PTR [rax]
   1400400f9:	add    BYTE PTR [rax],al
   1400400fb:	add    BYTE PTR [rax+0x0],al
   1400400fe:	add    BYTE PTR [rax],al
   140040100:	mov    eax,0x401
	...
   14004010d:	add    BYTE PTR [rax],al
   14004010f:	add    al,al
   140040111:	in     al,dx
   140040112:	add    al,0x0
   140040114:	add    eax,DWORD PTR [rax]
   140040116:	add    BYTE PTR [rax],al
   140040118:	add    BYTE PTR [rax],al
   14004011a:	add    BYTE PTR [rax],al
   14004011c:	(bad)  
   14004011d:	(bad)  
   14004011e:	(bad)  
   14004011f:	inc    DWORD PTR [rax]
   140040121:	add    BYTE PTR [rax],al
   140040123:	add    BYTE PTR [rax+0x0],al
   140040126:	add    BYTE PTR [rax],al
   140040128:	rol    BYTE PTR [rcx],1
   14004012a:	add    al,0x0
	...
   140040138:	lock in al,dx
   14004013a:	add    al,0x0
   14004013c:	add    al,BYTE PTR [rax]
   14004013e:	add    BYTE PTR [rax],al
   140040140:	add    BYTE PTR [rax],al
   140040142:	add    BYTE PTR [rax],al
   140040144:	(bad)  
   140040145:	(bad)  
   140040146:	(bad)  
   140040147:	inc    DWORD PTR [rax]
   140040149:	add    BYTE PTR [rax],al
   14004014b:	add    BYTE PTR [rax+0x0],al
   14004014e:	add    BYTE PTR [rax],al
   140040150:	call   0x140040556
	...
   14004015d:	add    BYTE PTR [rax],al
   14004015f:	add    BYTE PTR [rax],ah
   140040161:	in     eax,dx
   140040162:	add    al,0x0
   140040164:	add    DWORD PTR [rax],eax
   140040166:	add    BYTE PTR [rax],al
   140040168:	add    BYTE PTR [rax],al
   14004016a:	add    BYTE PTR [rax],al
   14004016c:	(bad)  
   14004016d:	(bad)  
   14004016e:	(bad)  
   14004016f:	inc    DWORD PTR [rax]
   140040171:	add    BYTE PTR [rax],al
   140040173:	add    BYTE PTR [rax+0x0],al
   140040176:	add    BYTE PTR [rax],al
   140040178:	add    BYTE PTR [rdx],al
   14004017a:	add    al,0x0
	...
   14004018c:	add    DWORD PTR [rax],eax
   14004018e:	add    BYTE PTR [rax],al
   140040190:	or     DWORD PTR [rax],eax
   140040192:	add    BYTE PTR [rax],al
   140040194:	movabs al,ds:0x3fe
   14004019d:	add    BYTE PTR [rax],al
   14004019f:	add    BYTE PTR [rax],al
   1400401a1:	add    BYTE PTR [rax],al
   1400401a3:	add    BYTE PTR [rcx],al
   1400401a5:	add    BYTE PTR [rax],al
   1400401a7:	add    BYTE PTR [rax],cl
   1400401a9:	add    BYTE PTR [rax],al
   1400401ab:	add    al,dh
   1400401ad:	inc    BYTE PTR [rbx]
	...
   1400401bf:	add    BYTE PTR [rcx],al
   1400401c1:	add    BYTE PTR [rax],al
   1400401c3:	add    BYTE PTR [rax],bh
   1400401c5:	inc    DWORD PTR [rbx]
	...
   1400401d7:	add    BYTE PTR [rax+rax*1],al
   1400401da:	add    BYTE PTR [rax],al
   1400401dc:	inc    QWORD PTR [rbx]
	...
   1400401ef:	add    BYTE PTR [rbx],al
   1400401f1:	add    BYTE PTR [rax],al
   1400401f3:	add    BYTE PTR [rax-0x1],dh
   1400401f6:	add    eax,DWORD PTR [rax]
	...
   140040208:	add    al,BYTE PTR [rax]
   14004020a:	add    BYTE PTR [rax],al
   14004020c:	nop
   14004020d:	inc    DWORD PTR [rbx]
	...
   140040217:	add    BYTE PTR [rcx],al
   140040219:	add    BYTE PTR [rax],al
   14004021b:	add    BYTE PTR [rax],cl
   14004021d:	add    BYTE PTR [rax],al
   14004021f:	add    BYTE PTR [rax],al
   140040221:	add    BYTE PTR [rax],al
   140040223:	add    BYTE PTR [rax],ah
   140040225:	in     al,dx
   140040226:	add    al,0x0
   140040228:	mov    BYTE PTR [rcx],al
   14004022a:	add    al,0x0
   14004022c:	sbb    BYTE PTR [rdx],al
   14004022e:	add    al,0x0
	...
   140040240:	add    DWORD PTR [rax],eax
	...
   14004024a:	add    BYTE PTR [rax],al
   14004024c:	and    ah,ch
   14004024e:	add    al,0x0
   140040250:	mov    BYTE PTR [rcx],al
   140040252:	add    al,0x0
   140040254:	add    al,BYTE PTR [rax+rax*1]
	...
   140040268:	add    DWORD PTR [rax],eax
   14004026a:	add    BYTE PTR [rax],al
   14004026c:	or     BYTE PTR [rax],al
   14004026e:	add    BYTE PTR [rax],al
   140040270:	add    BYTE PTR [rax],al
   140040272:	add    BYTE PTR [rax],al
   140040274:	(bad)  
   140040275:	in     al,dx
   140040276:	add    al,0x0
   140040278:	movabs al,ds:0x40268000401
	...
   14004028d:	add    BYTE PTR [rax],al
   14004028f:	add    BYTE PTR [rcx],al
	...
   140040299:	add    BYTE PTR [rax],al
   14004029b:	add    BYTE PTR [rax-0x14],ah
   14004029e:	add    al,0x0
   1400402a0:	movabs al,ds:0x40290000401
	...
   1400402b5:	add    BYTE PTR [rax],al
   1400402b7:	add    al,dl
   1400402b9:	add    al,BYTE PTR [rax+rax*1]
   1400402bc:	cmp    BYTE PTR [rbx],al
   1400402be:	add    al,0x0
	...
   1400402d0:	push   rax
   1400402d1:	in     eax,dx
   1400402d2:	add    al,0x0
   1400402d4:	add    DWORD PTR [rax],eax
   1400402d6:	add    BYTE PTR [rax],al
   1400402d8:	add    BYTE PTR [rax],al
   1400402da:	add    BYTE PTR [rax],al
   1400402dc:	(bad)  
   1400402dd:	(bad)  
   1400402de:	(bad)  
   1400402df:	inc    DWORD PTR [rax]
   1400402e1:	add    BYTE PTR [rax],al
   1400402e3:	add    BYTE PTR [rax+0x0],al
   1400402e6:	add    BYTE PTR [rax],al
   1400402e8:	clc    
   1400402e9:	add    al,BYTE PTR [rax+rax*1]
	...
   140040300:	add    al,BYTE PTR [rax]
   140040302:	add    BYTE PTR [rax],al
   140040304:	mov    eax,0x402
   140040309:	add    BYTE PTR [rax],al
   14004030b:	add    BYTE PTR [rax],al
   14004030d:	add    BYTE PTR [rax],al
   14004030f:	add    BYTE PTR [rcx],al
	...
   140040319:	add    BYTE PTR [rax],al
   14004031b:	add    BYTE PTR [rax-0x13],dl
   14004031e:	add    al,0x0
   140040320:	clc    
   140040321:	add    al,BYTE PTR [rax+rax*1]
   140040324:	adc    BYTE PTR [rbx],al
   140040326:	add    al,0x0
	...
   140040338:	js     0x140040327
   14004033a:	add    al,0x0
	...
   140040344:	(bad)  
   140040345:	(bad)  
   140040346:	(bad)  
   140040347:	inc    DWORD PTR [rax]
   140040349:	add    BYTE PTR [rax],al
   14004034b:	add    BYTE PTR [rax+0x0],al
   14004034e:	add    BYTE PTR [rax],al
   140040350:	jo     0x140040355
   140040352:	add    al,0x0
	...
   140040360:	cmp    BYTE PTR [rbx],al
   140040362:	add    al,0x0
	...
   140040378:	add    DWORD PTR [rax],eax
   14004037a:	add    BYTE PTR [rax],al
   14004037c:	(bad)  
   14004037d:	add    eax,DWORD PTR [rax+rax*1]
	...
   140040388:	add    DWORD PTR [rax],eax
	...
   140040392:	add    BYTE PTR [rax],al
   140040394:	js     0x140040383
   140040396:	add    al,0x0
   140040398:	jo     0x14004039d
   14004039a:	add    al,0x0
   14004039c:	mov    BYTE PTR [rbx],al
   14004039e:	add    al,0x0
	...
   1400403b0:	fadd   DWORD PTR [rbx]
   1400403b2:	add    al,0x0
   1400403b4:	cmp    BYTE PTR [rbx],al
   1400403b6:	add    al,0x0
	...
   1400403c8:	add    BYTE PTR [rsp+rax*1],al
	...
   1400403d7:	add    BYTE PTR [rax+0x10004ed],ch
   1400403dd:	add    BYTE PTR [rax],al
   1400403df:	add    BYTE PTR [rax],al
   1400403e1:	add    BYTE PTR [rax],al
   1400403e3:	add    bh,bh
   1400403e5:	(bad)  
   1400403e6:	(bad)  
   1400403e7:	inc    DWORD PTR [rax]
   1400403e9:	add    BYTE PTR [rax],al
   1400403eb:	add    BYTE PTR [rax+0x0],al
   1400403ee:	add    BYTE PTR [rax],al
   1400403f0:	sub    BYTE PTR [rsp+rax*1],al
	...
   1400403ff:	add    al,dl
   140040401:	in     eax,dx
   140040402:	add    al,0x0
	...
   14004040c:	(bad)  
   14004040d:	(bad)  
   14004040e:	(bad)  
   14004040f:	inc    DWORD PTR [rax]
   140040411:	add    BYTE PTR [rax],al
   140040413:	add    BYTE PTR [rax+0x0],al
   140040416:	add    BYTE PTR [rax],al
   140040418:	add    al,0x4
	...
   14004042f:	add    BYTE PTR [rdx],al
   140040431:	add    BYTE PTR [rax],al
   140040433:	add    BYTE PTR [rax+0x403],dh
	...
   140040445:	add    BYTE PTR [rax],al
   140040447:	add    BYTE PTR [rcx],al
   140040449:	add    BYTE PTR [rax],al
   14004044b:	add    al,cl
   14004044d:	add    eax,DWORD PTR [rax+rax*1]
	...
   140040458:	add    DWORD PTR [rax],eax
	...
   140040462:	add    BYTE PTR [rax],al
   140040464:	test   al,0xed
   140040466:	add    al,0x0
   140040468:	sub    BYTE PTR [rsp+rax*1],al
   14004046b:	add    BYTE PTR [rax+0x4],bl
   14004046e:	add    al,0x0
	...
   140040480:	add    DWORD PTR [rax],eax
	...
   14004048a:	add    BYTE PTR [rax],al
   14004048c:	shr    ch,1
   14004048e:	add    al,0x0
   140040490:	add    al,0x4
   140040493:	add    BYTE PTR [rax+0x404],al
	...
   1400404a5:	add    BYTE PTR [rax],al
   1400404a7:	add    BYTE PTR [rax],bl
   1400404a9:	add    eax,0x3380004
   1400404ae:	add    al,0x0
	...
   1400404c0:	rex add eax,0x6b80004
   1400404c6:	add    al,0x0
   1400404c8:	cmp    BYTE PTR [rbx],al
   1400404ca:	add    al,0x0
	...
   1400404e0:	push   0x10000405
   1400404e5:	(bad)  
   1400404e6:	add    al,0x0
   1400404e8:	push   0x38000407
   1400404ed:	add    eax,DWORD PTR [rax+rax*1]
	...
   140040508:	nop
   140040509:	add    eax,0x4
	...
   140040516:	add    BYTE PTR [rax],al
   140040518:	add    dh,ch
   14004051a:	add    al,0x0
   14004051c:	add    DWORD PTR [rax],eax
   14004051e:	add    BYTE PTR [rax],al
   140040520:	add    BYTE PTR [rax],al
   140040522:	add    BYTE PTR [rax],al
   140040524:	(bad)  
   140040525:	(bad)  
   140040526:	(bad)  
   140040527:	inc    DWORD PTR [rax]
   140040529:	add    BYTE PTR [rax],al
   14004052b:	add    BYTE PTR [rax+0x0],al
   14004052e:	add    BYTE PTR [rax],al
   140040530:	mov    eax,0x405
	...
   14004053d:	add    BYTE PTR [rax],al
   14004053f:	add    BYTE PTR [rax],dh
   140040541:	out    dx,al
   140040542:	add    al,0x0
   140040544:	add    al,BYTE PTR [rax]
   140040546:	add    BYTE PTR [rax],al
   140040548:	add    BYTE PTR [rax],al
   14004054a:	add    BYTE PTR [rax],al
   14004054c:	(bad)  
   14004054d:	(bad)  
   14004054e:	(bad)  
   14004054f:	inc    DWORD PTR [rax]
   140040551:	add    BYTE PTR [rax],al
   140040553:	add    BYTE PTR [rax+0x0],al
   140040556:	add    BYTE PTR [rax],al
   140040558:	rol    BYTE PTR [rip+0x4],1        # 0x140040562
	...
   140040566:	add    BYTE PTR [rax],al
   140040568:	(bad)  
   140040569:	out    dx,al
   14004056a:	add    al,0x0
   14004056c:	add    eax,DWORD PTR [rax]
   14004056e:	add    BYTE PTR [rax],al
   140040570:	add    BYTE PTR [rax],al
   140040572:	add    BYTE PTR [rax],al
   140040574:	(bad)  
   140040575:	(bad)  
   140040576:	(bad)  
   140040577:	inc    DWORD PTR [rax]
   140040579:	add    BYTE PTR [rax],al
   14004057b:	add    BYTE PTR [rax+0x0],al
   14004057e:	add    BYTE PTR [rax],al
   140040580:	call   0x14004098a
	...
   14004058d:	add    BYTE PTR [rax],al
   14004058f:	add    BYTE PTR [rax+0x4ee],cl
   140040595:	add    BYTE PTR [rax],al
   140040597:	add    BYTE PTR [rax],al
   140040599:	add    BYTE PTR [rax],al
   14004059b:	add    bh,bh
   14004059d:	(bad)  
   14004059e:	(bad)  
   14004059f:	inc    DWORD PTR [rax]
   1400405a1:	add    BYTE PTR [rax],al
   1400405a3:	add    BYTE PTR [rax+0x0],al
   1400405a6:	add    BYTE PTR [rax],al
   1400405a8:	add    BYTE PTR [rsi],al
   1400405aa:	add    al,0x0
	...
   1400405c0:	add    al,BYTE PTR [rax]
   1400405c2:	add    BYTE PTR [rax],al
   1400405c4:	test   al,0x4
   1400405c6:	add    al,0x0
	...
   1400405d8:	add    eax,DWORD PTR [rax]
   1400405da:	add    BYTE PTR [rax],al
   1400405dc:	rol    BYTE PTR [rsp+rax*1],0x0
	...
   1400405f0:	add    al,0x0
   1400405f2:	add    BYTE PTR [rax],al
   1400405f4:	loopne 0x1400405fa
   1400405f6:	add    al,0x0
	...
   140040608:	add    DWORD PTR [rax],eax
   14004060a:	add    BYTE PTR [rax],al
   14004060c:	or     BYTE PTR [rip+0x4],al        # 0x140040616
   140040612:	add    BYTE PTR [rax],al
   140040614:	add    BYTE PTR [rax],al
   140040616:	add    BYTE PTR [rax],al
   140040618:	add    DWORD PTR [rax],eax
	...
   140040622:	add    BYTE PTR [rax],al
   140040624:	add    dh,ch
   140040626:	add    al,0x0
   140040628:	mov    eax,0x18000405
   14004062d:	(bad)  
   14004062e:	add    al,0x0
	...
   140040640:	add    DWORD PTR [rax],eax
	...
   14004064a:	add    BYTE PTR [rax],al
   14004064c:	xor    dh,ch
   14004064e:	add    al,0x0
   140040650:	rol    BYTE PTR [rip+0x6400004],1        # 0x14644065a
   140040656:	add    al,0x0
	...
   140040668:	add    DWORD PTR [rax],eax
	...
   140040672:	add    BYTE PTR [rax],al
   140040674:	(bad)  
   140040675:	out    dx,al
   140040676:	add    al,0x0
   140040678:	call   0x1a8040a82
   14004067d:	(bad)  
   14004067e:	add    al,0x0
	...
   140040690:	add    DWORD PTR [rax],eax
	...
   14004069a:	add    BYTE PTR [rax],al
   14004069c:	mov    dh,ch
   14004069e:	add    al,0x0
   1400406a0:	add    BYTE PTR [rsi],al
   1400406a2:	add    al,0x0
   1400406a4:	nop
   1400406a5:	(bad)  
   1400406a6:	add    al,0x0
	...
   1400406b8:	mov    al,0xee
   1400406ba:	add    al,0x0
   1400406bc:	add    DWORD PTR [rax],eax
   1400406be:	add    BYTE PTR [rax],al
   1400406c0:	add    BYTE PTR [rax],al
   1400406c2:	add    BYTE PTR [rax],al
   1400406c4:	(bad)  
   1400406c5:	(bad)  
   1400406c6:	(bad)  
   1400406c7:	inc    DWORD PTR [rax]
   1400406c9:	add    BYTE PTR [rax],al
   1400406cb:	add    BYTE PTR [rax+0x0],al
   1400406ce:	add    BYTE PTR [rax],al
   1400406d0:	clc    
   1400406d1:	(bad)  
   1400406d2:	add    al,0x0
	...
   1400406e0:	mov    eax,0x38000406
   1400406e5:	add    eax,DWORD PTR [rax+rax*1]
	...
   140040700:	add    al,BYTE PTR [rax]
   140040702:	add    BYTE PTR [rax],al
   140040704:	loopne 0x14004070c
   140040706:	add    al,0x0
	...
   140040710:	call   0x142040c03
   140040715:	add    BYTE PTR [rax],al
   140040717:	add    BYTE PTR [rax],al
   140040719:	add    BYTE PTR [rax],al
   14004071b:	add    bh,bh
   14004071d:	(bad)  
   14004071e:	(bad)  
   14004071f:	inc    DWORD PTR [rax]
   140040721:	add    BYTE PTR [rax],al
   140040723:	add    BYTE PTR [rax+0x0],al
   140040726:	add    BYTE PTR [rax],al
   140040728:	mov    al,0x7
   14004072a:	add    al,0x0
	...
   140040738:	push   0x38000407
   14004073d:	add    eax,DWORD PTR [rax+rax*1]
	...
   140040758:	add    al,BYTE PTR [rax]
   14004075a:	add    BYTE PTR [rax],al
   14004075c:	cmp    BYTE PTR [rdi],al
   14004075e:	add    al,0x0
	...
   140040768:	and    bh,ch
   14004076a:	add    al,0x0
   14004076c:	add    DWORD PTR [rax],eax
   14004076e:	add    BYTE PTR [rax],al
   140040770:	add    BYTE PTR [rax],al
   140040772:	add    BYTE PTR [rax],al
   140040774:	(bad)  
   140040775:	(bad)  
   140040776:	(bad)  
   140040777:	inc    DWORD PTR [rax]
   140040779:	add    BYTE PTR [rax],al
   14004077b:	add    BYTE PTR [rax+0x0],al
   14004077e:	add    BYTE PTR [rax],al
   140040780:	push   rax
   140040781:	(bad)  
   140040782:	add    al,0x0
	...
   140040790:	adc    BYTE PTR [rdi],al
   140040792:	add    al,0x0
   140040794:	push   0x38000407
   140040799:	add    eax,DWORD PTR [rax+rax*1]
	...
   1400407b8:	add    eax,DWORD PTR [rax]
   1400407ba:	add    BYTE PTR [rax],al
   1400407bc:	nop
   1400407bd:	(bad)  
   1400407be:	add    al,0x0
	...
   1400407c8:	xor    BYTE PTR [rax],cl
   1400407ca:	add    al,0x0
   1400407cc:	or     BYTE PTR [rax],0x4
   1400407cf:	add    BYTE PTR [rax],cl
   1400407d1:	or     BYTE PTR [rax+rax*1],al
	...
   1400407e8:	pop    rax
   1400407e9:	or     BYTE PTR [rax+rax*1],al
	...
   1400407f8:	or     BYTE PTR [rax],0x4
	...
   140040807:	add    BYTE PTR [rax+0x4ef],dl
   14004080d:	add    BYTE PTR [rax],al
   14004080f:	add    BYTE PTR [rax],cl
   140040811:	add    BYTE PTR [rax],al
   140040813:	add    bh,bh
   140040815:	(bad)  
   140040816:	(bad)  
   140040817:	inc    DWORD PTR [rax]
   140040819:	add    BYTE PTR [rax],al
   14004081b:	add    BYTE PTR [rbp+0x0],cl
   14004081e:	add    BYTE PTR [rax],al
   140040820:	ror    BYTE PTR [rax],0x4
	...
   14004082f:	add    BYTE PTR [rax-0x11],ah
   140040832:	add    al,0x0
   140040834:	add    al,BYTE PTR [rax]
   140040836:	add    BYTE PTR [rax],al
   140040838:	add    BYTE PTR [rax],al
   14004083a:	add    BYTE PTR [rax],al
   14004083c:	(bad)  
   14004083d:	(bad)  
   14004083e:	(bad)  
   14004083f:	inc    DWORD PTR [rax]
   140040841:	add    BYTE PTR [rax],al
   140040843:	add    BYTE PTR [rax+0x0],al
   140040846:	add    BYTE PTR [rax],al
   140040848:	test   al,0x8
   14004084a:	add    al,0x0
	...
   140040858:	nop
   140040859:	out    dx,eax
   14004085a:	add    al,0x0
	...
   140040864:	(bad)  
   140040865:	(bad)  
   140040866:	(bad)  
   140040867:	inc    DWORD PTR [rax]
   140040869:	add    BYTE PTR [rax],al
   14004086b:	add    BYTE PTR [rax+0x0],al
   14004086e:	add    BYTE PTR [rax],al
   140040870:	ror    BYTE PTR [rax],0x4
	...
   14004087f:	add    al,al
   140040881:	out    dx,eax
   140040882:	add    al,0x0
	...
   14004088c:	(bad)  
   14004088d:	(bad)  
   14004088e:	(bad)  
   14004088f:	inc    DWORD PTR [rax]
   140040891:	add    BYTE PTR [rax],al
   140040893:	add    BYTE PTR [rax+0x0],al
   140040896:	add    BYTE PTR [rax],al
   140040898:	fmul   DWORD PTR [rax]
   14004089a:	add    al,0x0
	...
   1400408ac:	add    DWORD PTR [rax],eax
   1400408ae:	add    BYTE PTR [rax],al
   1400408b0:	add    eax,DWORD PTR [rax]
   1400408b2:	add    BYTE PTR [rax],al
   1400408b4:	enter  0x407,0x0
	...
   1400408c8:	add    DWORD PTR [rax],eax
   1400408ca:	add    BYTE PTR [rax],al
   1400408cc:	call   0x140040cd8
	...
   1400408dd:	add    BYTE PTR [rax],al
   1400408df:	add    BYTE PTR [rcx],al
   1400408e1:	add    BYTE PTR [rax],al
   1400408e3:	add    al,bh
   1400408e5:	(bad)  
   1400408e6:	add    al,0x0
	...
   1400408f0:	add    DWORD PTR [rax],eax
   1400408f2:	add    BYTE PTR [rax],al
   1400408f4:	or     BYTE PTR [rax],al
   1400408f6:	add    BYTE PTR [rax],al
   1400408f8:	add    BYTE PTR [rax],al
   1400408fa:	add    BYTE PTR [rax],al
   1400408fc:	(bad)  
   1400408fd:	out    dx,eax
   1400408fe:	add    al,0x0
   140040900:	test   al,0x8
   140040902:	add    al,0x0
   140040904:	lock or BYTE PTR [rax+rax*1],al
	...
   140040918:	add    DWORD PTR [rax],eax
	...
   140040922:	add    BYTE PTR [rax],al
   140040924:	(bad)  
   140040925:	out    dx,eax
   140040926:	add    al,0x0
   140040928:	test   al,0x8
   14004092a:	add    al,0x0
   14004092c:	sbb    BYTE PTR [rcx],cl
   14004092e:	add    al,0x0
	...
   140040940:	add    DWORD PTR [rax],eax
	...
   14004094a:	add    BYTE PTR [rax],al
   14004094c:	nop
   14004094d:	out    dx,eax
   14004094e:	add    al,0x0
   140040950:	ror    BYTE PTR [rax],0x4
   140040953:	add    BYTE PTR [rax+0x9],al
   140040956:	add    al,0x0
	...
   140040968:	jo     0x140040974
   14004096a:	add    al,0x0
   14004096c:	cwde   
   14004096d:	or     al,BYTE PTR [rax+rax*1]
   140040970:	rex.W or al,BYTE PTR [rax+rax*1]
   140040974:	and    BYTE PTR [rdx],cl
   140040976:	add    al,0x0
   140040978:	clc    
   140040979:	or     DWORD PTR [rax+rax*1],eax
   14004097c:	ror    BYTE PTR [rcx],1
   14004097e:	add    al,0x0
	...
   1400409a0:	cwde   
   1400409a1:	or     al,BYTE PTR [rax+rax*1]
   1400409a4:	test   al,0xb
   1400409a6:	add    al,0x0
	...
   1400409b8:	ror    BYTE PTR [rdx],0x4
   1400409bb:	add    BYTE PTR [rax+0x40b],ch
	...
   1400409cd:	add    BYTE PTR [rax],al
   1400409cf:	add    BYTE PTR [rax-0x13],bh
   1400409d2:	add    al,0x0
   1400409d4:	add    BYTE PTR [rax],al
   1400409d6:	add    BYTE PTR [rax],al
   1400409d8:	adc    BYTE PTR [rax],al
   1400409da:	add    BYTE PTR [rax],al
   1400409dc:	(bad)  
   1400409dd:	(bad)  
   1400409de:	(bad)  
   1400409df:	inc    DWORD PTR [rax]
   1400409e1:	add    BYTE PTR [rax],al
   1400409e3:	add    BYTE PTR [rax+0x0],al
   1400409e6:	add    BYTE PTR [rax],al
   1400409e8:	jo     0x1400409ed
   1400409ea:	add    al,0x0
	...
   1400409f8:	mov    al,dh
   1400409fa:	add    al,0x0
   1400409fc:	add    BYTE PTR [rax],al
   1400409fe:	add    BYTE PTR [rax],al
   140040a00:	or     BYTE PTR [rax],al
   140040a02:	add    BYTE PTR [rax],al
   140040a04:	(bad)  
   140040a05:	(bad)  
   140040a06:	(bad)  
   140040a07:	inc    DWORD PTR [rax]
   140040a09:	add    BYTE PTR [rax],al
   140040a0b:	add    BYTE PTR [rdx+0x0],al
   140040a0e:	add    BYTE PTR [rax],al
   140040a10:	loopne 0x140040a1d
   140040a12:	add    al,0x0
	...
   140040a20:	pop    rax
   140040a21:	lock add al,0x0
   140040a24:	add    DWORD PTR [rax],eax
   140040a26:	add    BYTE PTR [rax],al
   140040a28:	or     BYTE PTR [rax],al
   140040a2a:	add    BYTE PTR [rax],al
   140040a2c:	(bad)  
   140040a2d:	(bad)  
   140040a2e:	(bad)  
   140040a2f:	inc    DWORD PTR [rax]
   140040a31:	add    BYTE PTR [rax],al
   140040a33:	add    BYTE PTR [rax+0x0],al
   140040a36:	add    BYTE PTR [rax],al
   140040a38:	sbb    BYTE PTR [rbx],cl
   140040a3a:	add    al,0x0
	...
   140040a48:	mov    al,dh
   140040a4a:	add    al,0x0
	...
   140040a54:	(bad)  
   140040a55:	(bad)  
   140040a56:	(bad)  
   140040a57:	inc    DWORD PTR [rax]
   140040a59:	add    BYTE PTR [rax],al
   140040a5b:	add    BYTE PTR [rdx+0x0],al
   140040a5e:	add    BYTE PTR [rax],al
   140040a60:	loopne 0x140040a6d
   140040a62:	add    al,0x0
	...
   140040a70:	lock out dx,eax
   140040a72:	add    al,0x0
   140040a74:	add    eax,0x0
   140040a79:	add    BYTE PTR [rax],al
   140040a7b:	add    bh,bh
   140040a7d:	(bad)  
   140040a7e:	(bad)  
   140040a7f:	inc    DWORD PTR [rax]
   140040a81:	add    BYTE PTR [rax],al
   140040a83:	add    BYTE PTR [rax+0x0],al
   140040a86:	add    BYTE PTR [rax],al
   140040a88:	call   0x140040e97
	...
   140040a95:	add    BYTE PTR [rax],al
   140040a97:	add    BYTE PTR [rax],ah
   140040a99:	lock add al,0x0
   140040a9c:	add    DWORD PTR [rax],eax
   140040a9e:	add    BYTE PTR [rax],al
   140040aa0:	add    BYTE PTR [rax],al
   140040aa2:	add    BYTE PTR [rax],al
   140040aa4:	(bad)  
   140040aa5:	(bad)  
   140040aa6:	(bad)  
   140040aa7:	inc    DWORD PTR [rax]
   140040aa9:	add    BYTE PTR [rax],al
   140040aab:	add    BYTE PTR [rax+0x0],al
   140040aae:	add    BYTE PTR [rax],al
   140040ab0:	add    BYTE PTR [rbx],cl
   140040ab2:	add    al,0x0
	...
   140040ac0:	pop    rax
   140040ac1:	lock add al,0x0
   140040ac4:	add    DWORD PTR [rax],eax
   140040ac6:	add    BYTE PTR [rax],al
   140040ac8:	add    BYTE PTR [rax],al
   140040aca:	add    BYTE PTR [rax],al
   140040acc:	(bad)  
   140040acd:	(bad)  
   140040ace:	(bad)  
   140040acf:	inc    DWORD PTR [rax]
   140040ad1:	add    BYTE PTR [rax],al
   140040ad3:	add    BYTE PTR [rax+0x0],al
   140040ad6:	add    BYTE PTR [rax],al
   140040ad8:	sbb    BYTE PTR [rbx],cl
   140040ada:	add    al,0x0
	...
   140040aec:	add    eax,0x6000000
   140040af1:	add    BYTE PTR [rax],al
   140040af3:	add    BYTE PTR [rax+0x9],ch
   140040af6:	add    al,0x0
	...
   140040b08:	add    al,BYTE PTR [rax]
   140040b0a:	add    BYTE PTR [rax],al
   140040b0c:	movabs al,ds:0x409
	...
   140040b1d:	add    BYTE PTR [rax],al
   140040b1f:	add    BYTE PTR [rdx],al
   140040b21:	add    BYTE PTR [rax],al
   140040b23:	add    BYTE PTR [rax+0x409],bh
   140040b29:	add    BYTE PTR [rax],al
   140040b2b:	add    BYTE PTR [rax],al
   140040b2d:	add    BYTE PTR [rax],al
   140040b2f:	add    BYTE PTR [rcx],al
   140040b31:	add    BYTE PTR [rax],al
   140040b33:	add    BYTE PTR [rax],dl
   140040b35:	add    BYTE PTR [rax],al
   140040b37:	add    BYTE PTR [rax],al
   140040b39:	add    BYTE PTR [rax],al
   140040b3b:	add    al,dh
   140040b3d:	out    dx,eax
   140040b3e:	add    al,0x0
   140040b40:	call   0x170040f4f
   140040b45:	or     eax,DWORD PTR [rax+rax*1]
	...
   140040b58:	add    DWORD PTR [rax],eax
   140040b5a:	add    BYTE PTR [rax],al
   140040b5c:	or     BYTE PTR [rax],al
   140040b5e:	add    BYTE PTR [rax],al
   140040b60:	add    BYTE PTR [rax],al
   140040b62:	add    BYTE PTR [rax],al
   140040b64:	lock out dx,eax
   140040b66:	add    al,0x0
   140040b68:	call   0x198040f77
   140040b6d:	or     eax,DWORD PTR [rax+rax*1]
	...
   140040b80:	add    DWORD PTR [rax],eax
	...
   140040b8a:	add    BYTE PTR [rax],al
   140040b8c:	lock out dx,eax
   140040b8e:	add    al,0x0
   140040b90:	call   0xc0040f9f
   140040b95:	or     eax,DWORD PTR [rax+rax*1]
	...
   140040ba8:	mov    al,dh
   140040baa:	add    al,0x0
	...
   140040bb4:	(bad)  
   140040bb5:	(bad)  
   140040bb6:	(bad)  
   140040bb7:	inc    DWORD PTR [rax]
   140040bb9:	add    BYTE PTR [rax],al
   140040bbb:	add    BYTE PTR [rax+0x0],al
   140040bbe:	add    BYTE PTR [rax],al
   140040bc0:	loopne 0x140040bcd
   140040bc2:	add    al,0x0
	...
   140040bd0:	test   al,0xb
   140040bd2:	add    al,0x0
	...
   140040be8:	add    DWORD PTR [rax],eax
   140040bea:	add    BYTE PTR [rax],al
   140040bec:	ror    BYTE PTR [rbx],1
   140040bee:	add    al,0x0
	...
   140040bf8:	add    DWORD PTR [rax],eax
	...
   140040c02:	add    BYTE PTR [rax],al
   140040c04:	mov    al,dh
   140040c06:	add    al,0x0
   140040c08:	loopne 0x140040c15
   140040c0a:	add    al,0x0
   140040c0c:	clc    
   140040c0d:	or     eax,DWORD PTR [rax+rax*1]
	...
   140040c20:	ror    BYTE PTR [rsp+rax*1],1
   140040c23:	add    BYTE PTR [rax],ah
   140040c25:	or     eax,0xca80004
   140040c2a:	add    al,0x0
   140040c2c:	or     BYTE PTR [rsp+rax*1],0x0
	...
   140040c48:	clc    
   140040c49:	or     al,0x4
   140040c4b:	add    BYTE PTR [rax+0xd],cl
   140040c4e:	add    al,0x0
	...
   140040c60:	and    BYTE PTR [rip+0x4],cl        # 0x140040c6a
	...
   140040c6e:	add    BYTE PTR [rax],al
   140040c70:	or     rax,0x4
	...
   140040c7e:	add    BYTE PTR [rax],al
   140040c80:	push   rax
   140040c81:	icebp  
   140040c82:	add    al,0x0
   140040c84:	add    BYTE PTR [rax],al
   140040c86:	add    BYTE PTR [rax],al
   140040c88:	or     BYTE PTR [rax],al
   140040c8a:	add    BYTE PTR [rax],al
   140040c8c:	(bad)  
   140040c8d:	(bad)  
   140040c8e:	(bad)  
   140040c8f:	inc    DWORD PTR [rax]
   140040c91:	add    BYTE PTR [rax],al
   140040c93:	add    BYTE PTR [rax+0x0],al
   140040c96:	add    BYTE PTR [rax],al
   140040c98:	mov    eax,0x40d
	...
   140040ca5:	add    BYTE PTR [rax],al
   140040ca7:	add    al,ch
   140040ca9:	lock add al,0x0
   140040cac:	add    DWORD PTR [rax],eax
   140040cae:	add    BYTE PTR [rax],al
   140040cb0:	or     BYTE PTR [rax],al
   140040cb2:	add    BYTE PTR [rax],al
   140040cb4:	(bad)  
   140040cb5:	(bad)  
   140040cb6:	(bad)  
   140040cb7:	inc    DWORD PTR [rax]
   140040cb9:	add    BYTE PTR [rax],al
   140040cbb:	add    BYTE PTR [rax+0x0],al
   140040cbe:	add    BYTE PTR [rax],al
   140040cc0:	mov    BYTE PTR [rip+0x4],cl        # 0x140040cca
	...
   140040cce:	add    BYTE PTR [rax],al
   140040cd0:	mov    eax,0x30004f0
   140040cd5:	add    BYTE PTR [rax],al
   140040cd7:	add    BYTE PTR [rax],al
   140040cd9:	add    BYTE PTR [rax],al
   140040cdb:	add    bh,bh
   140040cdd:	(bad)  
   140040cde:	(bad)  
   140040cdf:	inc    DWORD PTR [rax]
   140040ce1:	add    BYTE PTR [rax],al
   140040ce3:	add    BYTE PTR [rax+0x0],al
   140040ce6:	add    BYTE PTR [rax],al
   140040ce8:	jo     0x140040cf7
   140040cea:	add    al,0x0
	...
   140040cf8:	call   0x1410411ed
   140040cfd:	add    BYTE PTR [rax],al
   140040cff:	add    BYTE PTR [rax],al
   140040d01:	add    BYTE PTR [rax],al
   140040d03:	add    bh,bh
   140040d05:	(bad)  
   140040d06:	(bad)  
   140040d07:	inc    DWORD PTR [rax]
   140040d09:	add    BYTE PTR [rax],al
   140040d0b:	add    BYTE PTR [rax+0x0],al
   140040d0e:	add    BYTE PTR [rax],al
   140040d10:	mov    BYTE PTR [rip+0x4],cl        # 0x140040d1a
	...
   140040d1e:	add    BYTE PTR [rax],al
   140040d20:	sbb    cl,dh
   140040d22:	add    al,0x0
	...
   140040d2c:	(bad)  
   140040d2d:	(bad)  
   140040d2e:	(bad)  
   140040d2f:	inc    DWORD PTR [rax]
   140040d31:	add    BYTE PTR [rax],al
   140040d33:	add    BYTE PTR [rax+0x0],al
   140040d36:	add    BYTE PTR [rax],al
   140040d38:	movabs al,ds:0x40d
   140040d41:	add    BYTE PTR [rax],al
   140040d43:	add    BYTE PTR [rax],al
   140040d45:	add    BYTE PTR [rax],al
   140040d47:	add    BYTE PTR [rax-0xf],dl
   140040d4a:	add    al,0x0
	...
   140040d54:	(bad)  
   140040d55:	(bad)  
   140040d56:	(bad)  
   140040d57:	inc    DWORD PTR [rax]
   140040d59:	add    BYTE PTR [rax],al
   140040d5b:	add    BYTE PTR [rax+0x0],al
   140040d5e:	add    BYTE PTR [rax],al
   140040d60:	mov    eax,0x40d
	...
   140040d71:	add    BYTE PTR [rax],al
   140040d73:	add    BYTE PTR [rcx],al
   140040d75:	add    BYTE PTR [rax],al
   140040d77:	add    BYTE PTR [rax+rax*1],al
   140040d7a:	add    BYTE PTR [rax],al
   140040d7c:	and    BYTE PTR [rsp+rax*1],cl
	...
   140040d8f:	add    BYTE PTR [rdx],al
   140040d91:	add    BYTE PTR [rax],al
   140040d93:	add    BYTE PTR [rax+0xc],cl
   140040d96:	add    al,0x0
	...
   140040da8:	add    DWORD PTR [rax],eax
   140040daa:	add    BYTE PTR [rax],al
   140040dac:	(bad)  
   140040dad:	or     al,0x4
	...
   140040dbf:	add    BYTE PTR [rcx],al
   140040dc1:	add    BYTE PTR [rax],al
   140040dc3:	add    BYTE PTR [rax+0xc],dh
   140040dc6:	add    al,0x0
	...
   140040dd0:	add    DWORD PTR [rax],eax
   140040dd2:	add    BYTE PTR [rax],al
   140040dd4:	or     BYTE PTR [rax],al
   140040dd6:	add    BYTE PTR [rax],al
   140040dd8:	add    BYTE PTR [rax],al
   140040dda:	add    BYTE PTR [rax],al
   140040ddc:	mov    eax,0x700004f0
   140040de1:	or     eax,0xdd00004
   140040de6:	add    al,0x0
	...
   140040df8:	add    DWORD PTR [rax],eax
	...
   140040e02:	add    BYTE PTR [rax],al
   140040e04:	mov    eax,0x700004f0
   140040e09:	or     eax,0xdf80004
   140040e0e:	add    al,0x0
	...
   140040e20:	rex (bad) 
   140040e23:	add    BYTE PTR [rax],dh
   140040e25:	adc    BYTE PTR [rax+rax*1],al
   140040e28:	cmp    BYTE PTR [rbx],al
   140040e2a:	add    al,0x0
	...
   140040e40:	push   0x3000040f
   140040e45:	adc    BYTE PTR [rax+rax*1],al
   140040e48:	cmp    BYTE PTR [rbx],al
   140040e4a:	add    al,0x0
	...
   140040e60:	nop
   140040e61:	(bad)  
   140040e63:	add    BYTE PTR [rax],dh
   140040e65:	adc    BYTE PTR [rax+rax*1],al
   140040e68:	cmp    BYTE PTR [rbx],al
   140040e6a:	add    al,0x0
	...
   140040e80:	mov    eax,0x3000040f
   140040e85:	adc    BYTE PTR [rax+rax*1],al
   140040e88:	cmp    BYTE PTR [rbx],al
   140040e8a:	add    al,0x0
	...
   140040ea0:	loopne 0x140040eb1
   140040ea2:	add    al,0x0
   140040ea4:	xor    BYTE PTR [rax],dl
   140040ea6:	add    al,0x0
   140040ea8:	cmp    BYTE PTR [rbx],al
   140040eaa:	add    al,0x0
	...
   140040ec0:	or     BYTE PTR [rax],dl
   140040ec2:	add    al,0x0
   140040ec4:	xor    BYTE PTR [rax],dl
   140040ec6:	add    al,0x0
   140040ec8:	cmp    BYTE PTR [rbx],al
   140040eca:	add    al,0x0
	...
   140040ee0:	xor    BYTE PTR [rax],dl
   140040ee2:	add    al,0x0
   140040ee4:	cmp    BYTE PTR [rbx],al
   140040ee6:	add    al,0x0
	...
   140040ef8:	pop    rax
   140040ef9:	adc    BYTE PTR [rax+rax*1],al
   140040efc:	adc    BYTE PTR [rax],0x4
   140040eff:	add    BYTE PTR [rax+0x410],ch
	...
   140040f15:	add    BYTE PTR [rax],al
   140040f17:	add    BYTE PTR [rax-0x57fffbf0],al
   140040f1d:	adc    BYTE PTR [rax+rax*1],al
	...
   140040f30:	test   al,0x10
   140040f32:	add    al,0x0
	...
   140040f40:	js     0x140040f33
   140040f42:	add    al,0x0
   140040f44:	add    al,BYTE PTR [rax]
   140040f46:	add    BYTE PTR [rax],al
   140040f48:	add    BYTE PTR [rax],al
   140040f4a:	add    BYTE PTR [rax],al
   140040f4c:	(bad)  
   140040f4d:	(bad)  
   140040f4e:	(bad)  
   140040f4f:	inc    DWORD PTR [rax]
   140040f51:	add    BYTE PTR [rax],al
   140040f53:	add    BYTE PTR [rax+0x0],al
   140040f56:	add    BYTE PTR [rax],al
   140040f58:	rcl    BYTE PTR [rax],1
   140040f5a:	add    al,0x0
	...
   140040f68:	mov    eax,0x20004f1
   140040f6d:	add    BYTE PTR [rax],al
   140040f6f:	add    BYTE PTR [rax],al
   140040f71:	add    BYTE PTR [rax],al
   140040f73:	add    bh,bh
   140040f75:	(bad)  
   140040f76:	(bad)  
   140040f77:	inc    DWORD PTR [rax]
   140040f79:	add    BYTE PTR [rax],al
   140040f7b:	add    BYTE PTR [rax+0x0],al
   140040f7e:	add    BYTE PTR [rax],al
   140040f80:	call   0x140041395
	...
   140040f8d:	add    BYTE PTR [rax],al
   140040f8f:	add    al,dh
   140040f91:	icebp  
   140040f92:	add    al,0x0
   140040f94:	add    al,BYTE PTR [rax]
   140040f96:	add    BYTE PTR [rax],al
   140040f98:	add    BYTE PTR [rax],al
   140040f9a:	add    BYTE PTR [rax],al
   140040f9c:	(bad)  
   140040f9d:	(bad)  
   140040f9e:	(bad)  
   140040f9f:	inc    DWORD PTR [rax]
   140040fa1:	add    BYTE PTR [rax],al
   140040fa3:	add    BYTE PTR [rax+0x0],al
   140040fa6:	add    BYTE PTR [rax],al
   140040fa8:	add    BYTE PTR [rcx],dl
   140040faa:	add    al,0x0
	...
   140040fb8:	xor    dl,dh
   140040fba:	add    al,0x0
   140040fbc:	add    al,BYTE PTR [rax]
   140040fbe:	add    BYTE PTR [rax],al
   140040fc0:	add    BYTE PTR [rax],al
   140040fc2:	add    BYTE PTR [rax],al
   140040fc4:	(bad)  
   140040fc5:	(bad)  
   140040fc6:	(bad)  
   140040fc7:	inc    DWORD PTR [rax]
   140040fc9:	add    BYTE PTR [rax],al
   140040fcb:	add    BYTE PTR [rax+0x0],al
   140040fce:	add    BYTE PTR [rax],al
   140040fd0:	sbb    BYTE PTR [rcx],dl
   140040fd2:	add    al,0x0
	...
   140040fe0:	jo     0x140040fd4
   140040fe2:	add    al,0x0
   140040fe4:	add    al,BYTE PTR [rax]
   140040fe6:	add    BYTE PTR [rax],al
   140040fe8:	add    BYTE PTR [rax],al
   140040fea:	add    BYTE PTR [rax],al
   140040fec:	(bad)  
   140040fed:	(bad)  
   140040fee:	(bad)  
   140040fef:	inc    DWORD PTR [rax]
   140040ff1:	add    BYTE PTR [rax],al
   140040ff3:	add    BYTE PTR [rax+0x0],al
   140040ff6:	add    BYTE PTR [rax],al
   140040ff8:	xor    BYTE PTR [rcx],dl
   140040ffa:	add    al,0x0
	...
   140041008:	loopne 0x140040ffc
   14004100a:	add    al,0x0
   14004100c:	add    al,BYTE PTR [rax]
   14004100e:	add    BYTE PTR [rax],al
   140041010:	add    BYTE PTR [rax],al
   140041012:	add    BYTE PTR [rax],al
   140041014:	(bad)  
   140041015:	(bad)  
   140041016:	(bad)  
   140041017:	inc    DWORD PTR [rax]
   140041019:	add    BYTE PTR [rax],al
   14004101b:	add    BYTE PTR [rax+0x0],al
   14004101e:	add    BYTE PTR [rax],al
   140041020:	(bad)  
   140041021:	adc    DWORD PTR [rax+rax*1],eax
	...
   140041030:	test   al,0xf2
   140041032:	add    al,0x0
   140041034:	add    DWORD PTR [rax],eax
   140041036:	add    BYTE PTR [rax],al
   140041038:	add    BYTE PTR [rax],al
   14004103a:	add    BYTE PTR [rax],al
   14004103c:	(bad)  
   14004103d:	(bad)  
   14004103e:	(bad)  
   14004103f:	inc    DWORD PTR [rax]
   140041041:	add    BYTE PTR [rax],al
   140041043:	add    BYTE PTR [rax+0x0],al
   140041046:	add    BYTE PTR [rax],al
   140041048:	adc    QWORD PTR [rax+rax*1],rax
	...
   140041058:	jo     0x14004104d
   14004105a:	add    al,0x0
   14004105c:	add    al,BYTE PTR [rax]
   14004105e:	add    BYTE PTR [rax],al
   140041060:	add    BYTE PTR [rax],al
   140041062:	add    BYTE PTR [rax],al
   140041064:	(bad)  
   140041065:	(bad)  
   140041066:	(bad)  
   140041067:	inc    DWORD PTR [rax]
   140041069:	add    BYTE PTR [rax],al
   14004106b:	add    BYTE PTR [rax+0x0],al
   14004106e:	add    BYTE PTR [rax],al
   140041070:	nop
   140041071:	adc    DWORD PTR [rax+rax*1],eax
	...
   140041080:	and    bl,dh
   140041082:	add    al,0x0
   140041084:	add    DWORD PTR [rax],eax
   140041086:	add    BYTE PTR [rax],al
   140041088:	add    BYTE PTR [rax],al
   14004108a:	add    BYTE PTR [rax],al
   14004108c:	(bad)  
   14004108d:	(bad)  
   14004108e:	(bad)  
   14004108f:	inc    DWORD PTR [rax]
   140041091:	add    BYTE PTR [rax],al
   140041093:	add    BYTE PTR [rax+0x0],al
   140041096:	add    BYTE PTR [rax],al
   140041098:	js     0x1400410ab
   14004109a:	add    al,0x0
	...
   1400410a8:	movabs al,ds:0x4f3
   1400410b1:	add    BYTE PTR [rax],al
   1400410b3:	add    bh,bh
   1400410b5:	(bad)  
   1400410b6:	(bad)  
   1400410b7:	inc    DWORD PTR [rax]
   1400410b9:	add    BYTE PTR [rax],al
   1400410bb:	add    BYTE PTR [rax+0x0],al
   1400410be:	add    BYTE PTR [rax],al
   1400410c0:	test   al,0x11
   1400410c2:	add    al,0x0
	...
   1400410d8:	add    eax,DWORD PTR [rax]
   1400410da:	add    BYTE PTR [rax],al
   1400410dc:	and    BYTE PTR [rsi],cl
   1400410de:	add    al,0x0
	...
   1400410f0:	add    eax,DWORD PTR [rax]
   1400410f2:	add    BYTE PTR [rax],al
   1400410f4:	rex (bad) 
   1400410f6:	add    al,0x0
	...
   140041108:	add    eax,DWORD PTR [rax]
   14004110a:	add    BYTE PTR [rax],al
   14004110c:	(bad)  
   14004110d:	(bad)  
   14004110e:	add    al,0x0
	...
   140041120:	add    eax,DWORD PTR [rax]
   140041122:	add    BYTE PTR [rax],al
   140041124:	or     BYTE PTR [rsi],0x4
	...
   140041137:	add    BYTE PTR [rbx],al
   140041139:	add    BYTE PTR [rax],al
   14004113b:	add    BYTE PTR [rax+0x40e],ah
	...
   14004114d:	add    BYTE PTR [rax],al
   14004114f:	add    BYTE PTR [rdx],al
   140041151:	add    BYTE PTR [rax],al
   140041153:	add    al,ah
   140041155:	(bad)  
   140041156:	add    al,0x0
	...
   140041168:	add    eax,DWORD PTR [rax]
   14004116a:	add    BYTE PTR [rax],al
   14004116c:	ror    BYTE PTR [rsi],0x4
	...
   14004117f:	add    BYTE PTR [rdx],al
   140041181:	add    BYTE PTR [rax],al
   140041183:	add    BYTE PTR [rax],bl
   140041185:	(bad)  
	...
   140041197:	add    BYTE PTR [rbx],al
   140041199:	add    BYTE PTR [rax],al
   14004119b:	add    al,bh
   14004119d:	(bad)  
   14004119e:	add    al,0x0
	...
   1400411b0:	add    DWORD PTR [rax],eax
   1400411b2:	add    BYTE PTR [rax],al
   1400411b4:	xor    BYTE PTR [rdi],cl
   1400411b6:	add    al,0x0
	...
   1400411c0:	add    DWORD PTR [rax],eax
	...
   1400411ca:	add    BYTE PTR [rax],al
   1400411cc:	js     0x1400411bf
   1400411ce:	add    al,0x0
   1400411d0:	rcl    BYTE PTR [rax],1
   1400411d2:	add    al,0x0
   1400411d4:	rcl    BYTE PTR [rcx],0x4
	...
   1400411e7:	add    BYTE PTR [rcx],al
	...
   1400411f1:	add    BYTE PTR [rax],al
   1400411f3:	add    BYTE PTR [rax-0x17fffb0f],bh
   1400411f9:	adc    BYTE PTR [rax+rax*1],al
   1400411fc:	call   0x140041612
	...
   14004120d:	add    BYTE PTR [rax],al
   14004120f:	add    BYTE PTR [rcx],al
	...
   140041219:	add    BYTE PTR [rax],al
   14004121b:	add    al,dh
   14004121d:	icebp  
   14004121e:	add    al,0x0
   140041220:	add    BYTE PTR [rcx],dl
   140041222:	add    al,0x0
   140041224:	adc    BYTE PTR [rdx],dl
   140041226:	add    al,0x0
	...
   140041238:	add    DWORD PTR [rax],eax
	...
   140041242:	add    BYTE PTR [rax],al
   140041244:	xor    dl,dh
   140041246:	add    al,0x0
   140041248:	sbb    BYTE PTR [rcx],dl
   14004124a:	add    al,0x0
   14004124c:	cmp    BYTE PTR [rdx],dl
   14004124e:	add    al,0x0
	...
   140041260:	add    DWORD PTR [rax],eax
	...
   14004126a:	add    BYTE PTR [rax],al
   14004126c:	jo     0x140041260
   14004126e:	add    al,0x0
   140041270:	xor    BYTE PTR [rcx],dl
   140041272:	add    al,0x0
   140041274:	(bad)  
   140041275:	adc    al,BYTE PTR [rax+rax*1]
	...
   140041288:	add    DWORD PTR [rax],eax
	...
   140041292:	add    BYTE PTR [rax],al
   140041294:	loopne 0x140041288
   140041296:	add    al,0x0
   140041298:	(bad)  
   140041299:	adc    DWORD PTR [rax+rax*1],eax
   14004129c:	mov    BYTE PTR [rdx],dl
   14004129e:	add    al,0x0
	...
   1400412b0:	add    DWORD PTR [rax],eax
	...
   1400412ba:	add    BYTE PTR [rax],al
   1400412bc:	and    bl,dh
   1400412be:	add    al,0x0
   1400412c0:	js     0x1400412d3
   1400412c2:	add    al,0x0
   1400412c4:	mov    al,0x12
   1400412c6:	add    al,0x0
	...
   1400412d8:	add    DWORD PTR [rax],eax
	...
   1400412e2:	add    BYTE PTR [rax],al
   1400412e4:	jo     0x1400412d9
   1400412e6:	add    al,0x0
   1400412e8:	nop
   1400412e9:	adc    DWORD PTR [rax+rax*1],eax
   1400412ec:	fcom   DWORD PTR [rdx]
   1400412ee:	add    al,0x0
	...
   140041300:	adc    rax,QWORD PTR [rax+rax*1]
   140041304:	jo     0x140041319
   140041306:	add    al,0x0
   140041308:	(bad)  
   140041309:	cmc    
   14004130a:	add    eax,DWORD PTR [rax]
   14004130c:	nop
   14004130d:	hlt    
   14004130e:	add    eax,DWORD PTR [rax]
	...
   140041328:	jo     0x14004133d
   14004132a:	add    al,0x0
   14004132c:	(bad)  
   14004132d:	cmc    
   14004132e:	add    eax,DWORD PTR [rax]
   140041330:	nop
   140041331:	hlt    
   140041332:	add    eax,DWORD PTR [rax]
	...
   140041348:	shl    bl,1
   14004134a:	add    al,0x0
   14004134c:	add    eax,DWORD PTR [rax]
   14004134e:	add    BYTE PTR [rax],al
   140041350:	add    BYTE PTR [rax],al
   140041352:	add    BYTE PTR [rax],al
   140041354:	(bad)  
   140041355:	(bad)  
   140041356:	(bad)  
   140041357:	inc    DWORD PTR [rax]
   140041359:	add    BYTE PTR [rax],al
   14004135b:	add    BYTE PTR [rax+0x0],al
   14004135e:	add    BYTE PTR [rax],al
   140041360:	cwde   
   140041361:	adc    eax,DWORD PTR [rax+rax*1]
	...
   140041370:	adc    ah,dh
   140041372:	add    al,0x0
   140041374:	add    al,BYTE PTR [rax]
   140041376:	add    BYTE PTR [rax],al
   140041378:	add    BYTE PTR [rax],al
   14004137a:	add    BYTE PTR [rax],al
   14004137c:	(bad)  
   14004137d:	(bad)  
   14004137e:	(bad)  
   14004137f:	inc    DWORD PTR [rax]
   140041381:	add    BYTE PTR [rax],al
   140041383:	add    BYTE PTR [rax+0x0],al
   140041386:	add    BYTE PTR [rax],al
   140041388:	mov    al,0x13
   14004138a:	add    al,0x0
	...
   1400413a0:	add    al,0x0
   1400413a2:	add    BYTE PTR [rax],al
   1400413a4:	add    BYTE PTR [rbx],dl
   1400413a6:	add    al,0x0
	...
   1400413b8:	add    eax,DWORD PTR [rax]
   1400413ba:	add    BYTE PTR [rax],al
   1400413bc:	sub    BYTE PTR [rbx],dl
   1400413be:	add    al,0x0
	...
   1400413c8:	add    DWORD PTR [rax],eax
	...
   1400413d2:	add    BYTE PTR [rax],al
   1400413d4:	shl    bl,1
   1400413d6:	add    al,0x0
   1400413d8:	cwde   
   1400413d9:	adc    eax,DWORD PTR [rax+rax*1]
   1400413dc:	enter  0x413,0x0
	...
   1400413f0:	add    DWORD PTR [rax],eax
	...
   1400413fa:	add    BYTE PTR [rax],al
   1400413fc:	adc    ah,dh
   1400413fe:	add    al,0x0
   140041400:	mov    al,0x13
   140041402:	add    al,0x0
   140041404:	lock adc eax,DWORD PTR [rax+rax*1]
	...
   140041418:	push   rax
   140041419:	adc    al,0x4
   14004141b:	add    BYTE PTR [rax+0x14],bh
   14004141e:	add    al,0x0
   140041420:	fdivr  st,st(1)
   140041422:	add    eax,DWORD PTR [rax]
	...
   140041438:	js     0x14004144e
   14004143a:	add    al,0x0
   14004143c:	fdivr  st,st(1)
   14004143e:	add    eax,DWORD PTR [rax]
	...
   140041450:	rex hlt 
   140041452:	add    al,0x0
   140041454:	add    al,BYTE PTR [rax]
   140041456:	add    BYTE PTR [rax],al
   140041458:	add    BYTE PTR [rax],al
   14004145a:	add    BYTE PTR [rax],al
   14004145c:	(bad)  
   14004145d:	(bad)  
   14004145e:	(bad)  
   14004145f:	inc    DWORD PTR [rax]
   140041461:	add    BYTE PTR [rax],al
   140041463:	add    BYTE PTR [rax+0x0],al
   140041466:	add    BYTE PTR [rax],al
   140041468:	movabs al,ds:0x414
   140041471:	add    BYTE PTR [rax],al
   140041473:	add    BYTE PTR [rax],al
   140041475:	add    BYTE PTR [rax],al
   140041477:	add    BYTE PTR [rax-0xc],dh
   14004147a:	add    al,0x0
   14004147c:	add    DWORD PTR [rax],eax
   14004147e:	add    BYTE PTR [rax],al
   140041480:	add    BYTE PTR [rax],al
   140041482:	add    BYTE PTR [rax],al
   140041484:	(bad)  
   140041485:	(bad)  
   140041486:	(bad)  
   140041487:	inc    DWORD PTR [rax]
   140041489:	add    BYTE PTR [rax],al
   14004148b:	add    BYTE PTR [rax+0x0],al
   14004148e:	add    BYTE PTR [rax],al
   140041490:	mov    eax,0x414
	...
   1400414a5:	add    BYTE PTR [rax],al
   1400414a7:	add    BYTE PTR [rbx],al
   1400414a9:	add    BYTE PTR [rax],al
   1400414ab:	add    BYTE PTR [rax],bl
   1400414ad:	adc    al,0x4
	...
   1400414bf:	add    BYTE PTR [rdx],al
   1400414c1:	add    BYTE PTR [rax],al
   1400414c3:	add    BYTE PTR [rax],bh
   1400414c5:	adc    al,0x4
	...
   1400414cf:	add    BYTE PTR [rcx],al
	...
   1400414d9:	add    BYTE PTR [rax],al
   1400414db:	add    BYTE PTR [rax-0xc],al
   1400414de:	add    al,0x0
   1400414e0:	movabs al,ds:0x414d0000414
	...
   1400414f5:	add    BYTE PTR [rax],al
   1400414f7:	add    BYTE PTR [rax],dl
   1400414f9:	adc    eax,0x3380004
   1400414fe:	add    al,0x0
	...
   140041510:	movabs al,ds:0x10004f4
   140041519:	add    BYTE PTR [rax],al
   14004151b:	add    bh,bh
   14004151d:	(bad)  
   14004151e:	(bad)  
   14004151f:	inc    DWORD PTR [rax]
   140041521:	add    BYTE PTR [rax],al
   140041523:	add    BYTE PTR [rax+0x0],al
   140041526:	add    BYTE PTR [rax],al
   140041528:	cmp    BYTE PTR [rip+0x4],dl        # 0x140041532
	...
   14004153e:	add    BYTE PTR [rax],al
   140041540:	add    al,BYTE PTR [rax]
   140041542:	add    BYTE PTR [rax],al
   140041544:	clc    
   140041545:	adc    al,0x4
	...
   14004154f:	add    BYTE PTR [rcx],al
	...
   140041559:	add    BYTE PTR [rax],al
   14004155b:	add    BYTE PTR [rax+0x380004f4],ah
   140041561:	adc    eax,0x15500004
   140041566:	add    al,0x0
	...
   140041578:	add    DWORD PTR [rax],eax
	...
   140041582:	add    BYTE PTR [rax],al
   140041584:	test   al,0xf2
   140041586:	add    al,0x0
   140041588:	adc    QWORD PTR [rax+rax*1],rax
   14004158c:	js     0x1400415a3
   14004158e:	add    al,0x0
	...
   1400415a0:	sbb    BYTE PTR [rsi],dl
   1400415a2:	add    al,0x0
	...
   1400415b0:	add    DWORD PTR [rax],eax
	...
   1400415ba:	add    BYTE PTR [rax],al
   1400415bc:	enter  0x4f4,0x0
   1400415c0:	pop    rax
   1400415c1:	(bad)  
   1400415c2:	add    al,0x0
   1400415c4:	mov    al,0x15
   1400415c6:	add    al,0x0
	...
   1400415d8:	lock adc eax,0x16180004
   1400415de:	add    al,0x0
	...
   1400415f0:	clc    
   1400415f1:	hlt    
   1400415f2:	add    al,0x0
   1400415f4:	add    DWORD PTR [rax],eax
   1400415f6:	add    BYTE PTR [rax],al
   1400415f8:	add    BYTE PTR [rax],al
   1400415fa:	add    BYTE PTR [rax],al
   1400415fc:	(bad)  
   1400415fd:	(bad)  
   1400415fe:	(bad)  
   1400415ff:	inc    DWORD PTR [rax]
   140041601:	add    BYTE PTR [rax],al
   140041603:	add    BYTE PTR [rax+0x0],al
   140041606:	add    BYTE PTR [rax],al
   140041608:	rex (bad) 
   14004160a:	add    al,0x0
	...
   140041618:	enter  0x4f4,0x0
	...
   140041624:	(bad)  
   140041625:	(bad)  
   140041626:	(bad)  
   140041627:	inc    DWORD PTR [rax]
   140041629:	add    BYTE PTR [rax],al
   14004162b:	add    BYTE PTR [rax+0x0],al
   14004162e:	add    BYTE PTR [rax],al
   140041630:	pop    rax
   140041631:	(bad)  
   140041632:	add    al,0x0
	...
   140041648:	add    al,BYTE PTR [rax]
   14004164a:	add    BYTE PTR [rax],al
   14004164c:	fcom   DWORD PTR [rip+0x4]        # 0x140041656
	...
   14004165e:	add    BYTE PTR [rax],al
   140041660:	add    DWORD PTR [rax],eax
   140041662:	add    BYTE PTR [rax],al
   140041664:	movabs al,ds:0x415
   14004166d:	add    BYTE PTR [rax],al
   14004166f:	add    BYTE PTR [rcx],al
	...
   140041679:	add    BYTE PTR [rax],al
   14004167b:	add    al,bh
   14004167d:	hlt    
   14004167e:	add    al,0x0
   140041680:	rex (bad) 
   140041682:	add    al,0x0
   140041684:	jo     0x14004169c
   140041686:	add    al,0x0
	...
   140041698:	add    DWORD PTR [rax],eax
	...
   1400416a2:	add    BYTE PTR [rax],al
   1400416a4:	xor    ch,0x4
   1400416a7:	add    BYTE PTR [rax+0x17],dh
   1400416aa:	add    al,0x0
   1400416ac:	cwde   
   1400416ad:	(bad)  
   1400416ae:	add    al,0x0
	...
   1400416c0:	mov    eax,0x20004f5
   1400416c5:	add    BYTE PTR [rax],al
   1400416c7:	add    BYTE PTR [rax],al
   1400416c9:	add    BYTE PTR [rax],al
   1400416cb:	add    bh,bh
   1400416cd:	(bad)  
   1400416ce:	(bad)  
   1400416cf:	inc    DWORD PTR [rax]
   1400416d1:	add    BYTE PTR [rax],al
   1400416d3:	add    BYTE PTR [rax+0x0],al
   1400416d6:	add    BYTE PTR [rax],al
   1400416d8:	mov    BYTE PTR [rdi],dl
   1400416da:	add    al,0x0
	...
   1400416e8:	xor    ch,0x4
   1400416eb:	add    BYTE PTR [rcx],al
   1400416ed:	add    BYTE PTR [rax],al
   1400416ef:	add    BYTE PTR [rax],al
   1400416f1:	add    BYTE PTR [rax],al
   1400416f3:	add    bh,bh
   1400416f5:	(bad)  
   1400416f6:	(bad)  
   1400416f7:	inc    DWORD PTR [rax]
   1400416f9:	add    BYTE PTR [rax],al
   1400416fb:	add    BYTE PTR [rax+0x0],al
   1400416fe:	add    BYTE PTR [rax],al
   140041700:	jo     0x140041719
   140041702:	add    al,0x0
	...
   140041710:	call   0x118041b2b
   140041715:	repz add eax,DWORD PTR [rax]
	...
   140041728:	add    DWORD PTR [rax],eax
	...
   140041732:	add    BYTE PTR [rax],al
   140041734:	mov    eax,0x880004f5
   140041739:	(bad)  
   14004173a:	add    al,0x0
   14004173c:	sub    BYTE PTR [rdi],dl
   14004173e:	add    al,0x0
	...
   140041750:	rcl    BYTE PTR [rsi],0x4
   140041753:	add    al,ch
   140041755:	(bad)  
   140041756:	add    al,0x0
   140041758:	fdiv   st,st(3)
   14004175a:	add    eax,DWORD PTR [rax]
	...
   140041778:	add    al,BYTE PTR [rax]
   14004177a:	add    BYTE PTR [rax],al
   14004177c:	adc    BYTE PTR [rdi],dl
   14004177e:	add    al,0x0
	...
   140041790:	add    eax,DWORD PTR [rax]
   140041792:	add    BYTE PTR [rax],al
   140041794:	push   rax
   140041795:	(bad)  
   140041796:	add    al,0x0
	...
   1400417a0:	(bad)  
   1400417a1:	test   BYTE PTR [rax+rax*1],0x2
   1400417a5:	add    BYTE PTR [rax],al
   1400417a7:	add    BYTE PTR [rax],al
   1400417a9:	add    BYTE PTR [rax],al
   1400417ab:	add    bh,bh
   1400417ad:	(bad)  
   1400417ae:	(bad)  
   1400417af:	inc    DWORD PTR [rax]
   1400417b1:	add    BYTE PTR [rax],al
   1400417b3:	add    BYTE PTR [rax+0x0],al
   1400417b6:	add    BYTE PTR [rax],al
   1400417b8:	cmp    BYTE PTR [rax],bl
   1400417ba:	add    al,0x0
	...
   1400417d0:	add    al,BYTE PTR [rax]
   1400417d2:	add    BYTE PTR [rax],al
   1400417d4:	clc    
   1400417d5:	(bad)  
   1400417d6:	add    al,0x0
	...
   1400417e8:	add    al,0x0
   1400417ea:	add    BYTE PTR [rax],al
   1400417ec:	adc    BYTE PTR [rax],bl
   1400417ee:	add    al,0x0
	...
   1400417f8:	movabs al,ds:0x40ba8000418
	...
   14004180d:	add    BYTE PTR [rax],al
   14004180f:	add    BYTE PTR [rax+0x18],bh
   140041812:	add    al,0x0
   140041814:	movabs al,ds:0xa8000418a0000417
   14004181d:	or     eax,DWORD PTR [rax+rax*1]
	...
   140041840:	add    eax,DWORD PTR [rax]
   140041842:	add    BYTE PTR [rax],al
   140041844:	enter  0x418,0x0
	...
   140041850:	add    DWORD PTR [rax],eax
	...
   14004185a:	add    BYTE PTR [rax],al
   14004185c:	lock cmc 
   14004185e:	add    al,0x0
   140041860:	loopne 0x140041879
   140041862:	add    al,0x0
   140041864:	push   rax
   140041865:	sbb    BYTE PTR [rax+rax*1],al
	...
   140041878:	lock cmc 
   14004187a:	add    al,0x0
   14004187c:	add    eax,DWORD PTR [rax]
   14004187e:	add    BYTE PTR [rax],al
   140041880:	add    BYTE PTR [rax],al
   140041882:	add    BYTE PTR [rax],al
   140041884:	(bad)  
   140041885:	(bad)  
   140041886:	(bad)  
   140041887:	inc    DWORD PTR [rax]
   140041889:	add    BYTE PTR [rax],al
   14004188b:	add    BYTE PTR [rax+0x0],al
   14004188e:	add    BYTE PTR [rax],al
   140041890:	loopne 0x1400418a9
   140041892:	add    al,0x0
	...
   1400418a0:	sub    dh,dh
   1400418a2:	add    al,0x0
   1400418a4:	add    DWORD PTR [rax],eax
   1400418a6:	add    BYTE PTR [rax],al
   1400418a8:	add    BYTE PTR [rax],al
   1400418aa:	add    BYTE PTR [rax],al
   1400418ac:	(bad)  
   1400418ad:	(bad)  
   1400418ae:	(bad)  
   1400418af:	inc    DWORD PTR [rax]
   1400418b1:	add    BYTE PTR [rax],al
   1400418b3:	add    BYTE PTR [rax+0x0],al
   1400418b6:	add    BYTE PTR [rax],al
   1400418b8:	enter  0x417,0x0
	...
   1400418c8:	movabs al,ds:0xa8000418a0000417
   1400418d1:	or     eax,DWORD PTR [rax+rax*1]
	...
   1400418e8:	adc    BYTE PTR [rcx],bl
   1400418ea:	add    al,0x0
   1400418ec:	cmp    BYTE PTR [rdx],bl
   1400418ee:	add    al,0x0
   1400418f0:	call   0xe8041d10
   1400418f5:	or     eax,DWORD PTR [rax+rax*1]
	...
   140041910:	shl    dh,0x4
   140041913:	add    BYTE PTR [rbx],al
   140041915:	add    BYTE PTR [rax],al
   140041917:	add    BYTE PTR [rax],al
   140041919:	add    BYTE PTR [rax],al
   14004191b:	add    bh,bh
   14004191d:	(bad)  
   14004191e:	(bad)  
   14004191f:	inc    DWORD PTR [rax]
   140041921:	add    BYTE PTR [rax],al
   140041923:	add    BYTE PTR [rax+0x0],al
   140041926:	add    BYTE PTR [rax],al
   140041928:	(bad)  
   140041929:	sbb    eax,DWORD PTR [rax+rax*1]
	...
   140041938:	cmp    BYTE PTR [rdx],bl
   14004193a:	add    al,0x0
   14004193c:	call   0xe8041d5c
   140041941:	or     eax,DWORD PTR [rax+rax*1]
	...
   140041958:	movabs al,ds:0x20004f7
   140041961:	add    BYTE PTR [rax],al
   140041963:	add    bh,bh
   140041965:	(bad)  
   140041966:	(bad)  
   140041967:	inc    DWORD PTR [rax]
   140041969:	add    BYTE PTR [rax],al
   14004196b:	add    BYTE PTR [rax+0x0],al
   14004196e:	add    BYTE PTR [rax],al
   140041970:	and    BYTE PTR [rdx],bl
   140041972:	add    al,0x0
	...
   140041980:	pop    rax
   140041981:	sbb    DWORD PTR [rax+rax*1],eax
   140041984:	clc    
   140041985:	sbb    al,BYTE PTR [rax+rax*1]
   140041988:	test   al,0xb
   14004198a:	add    al,0x0
	...
   1400419a0:	add    DWORD PTR [rax],eax
	...
   1400419aa:	add    BYTE PTR [rax],al
   1400419ac:	mov    al,0xf8
   1400419ae:	add    al,0x0
   1400419b0:	sbb    rax,QWORD PTR [rax+rax*1]
   1400419b4:	movabs al,ds:0x419
	...
   1400419c5:	add    BYTE PTR [rax],al
   1400419c7:	add    BYTE PTR [rax+0x30004f8],dh
   1400419cd:	add    BYTE PTR [rax],al
   1400419cf:	add    BYTE PTR [rax],al
   1400419d1:	add    BYTE PTR [rax],al
   1400419d3:	add    bh,bh
   1400419d5:	(bad)  
   1400419d6:	(bad)  
   1400419d7:	inc    DWORD PTR [rax]
   1400419d9:	add    BYTE PTR [rax],al
   1400419db:	add    BYTE PTR [rax+0x0],al
   1400419de:	add    BYTE PTR [rax],al
   1400419e0:	sbb    rax,QWORD PTR [rax+rax*1]
	...
   1400419f8:	add    eax,DWORD PTR [rax]
   1400419fa:	add    BYTE PTR [rax],al
   1400419fc:	cmp    BYTE PTR [rcx],bl
   1400419fe:	add    al,0x0
	...
   140041a08:	call   0xe8041e28
   140041a0d:	or     eax,DWORD PTR [rax+rax*1]
	...
   140041a28:	add    eax,DWORD PTR [rax]
   140041a2a:	add    BYTE PTR [rax],al
   140041a2c:	sbb    BYTE PTR [rcx],0x4
	...
   140041a37:	add    BYTE PTR [rax],bh
   140041a39:	clc    
   140041a3a:	add    al,0x0
   140041a3c:	add    al,BYTE PTR [rax]
   140041a3e:	add    BYTE PTR [rax],al
   140041a40:	add    BYTE PTR [rax],al
   140041a42:	add    BYTE PTR [rax],al
   140041a44:	(bad)  
   140041a45:	(bad)  
   140041a46:	(bad)  
   140041a47:	inc    DWORD PTR [rax]
   140041a49:	add    BYTE PTR [rax],al
   140041a4b:	add    BYTE PTR [rax+0x0],al
   140041a4e:	add    BYTE PTR [rax],al
   140041a50:	lock sbb DWORD PTR [rax+rax*1],eax
	...
   140041a60:	add    DWORD PTR [rax],eax
	...
   140041a6a:	add    BYTE PTR [rax],al
   140041a6c:	push   rax
   140041a6d:	test   DWORD PTR [rax+rax*1],0x41bd0
   140041a74:	(bad)  
   140041a75:	sbb    al,BYTE PTR [rax+rax*1]
	...
   140041a90:	add    al,BYTE PTR [rax]
   140041a92:	add    BYTE PTR [rax],al
   140041a94:	or     BYTE PTR [rdx],bl
   140041a96:	add    al,0x0
	...
   140041aa8:	add    al,BYTE PTR [rax]
   140041aaa:	add    BYTE PTR [rax],al
   140041aac:	mov    eax,0x41b
	...
   140041abd:	add    BYTE PTR [rax],al
   140041abf:	add    BYTE PTR [rip+0x10000000],al        # 0x150041ac5
   140041ac5:	sbb    al,0x4
	...
   140041acf:	add    BYTE PTR [rax],bl
   140041ad1:	test   DWORD PTR [rax+rax*1],0x4
   140041ad8:	add    BYTE PTR [rax],al
   140041ada:	add    BYTE PTR [rax],al
   140041adc:	(bad)  
   140041add:	(bad)  
   140041ade:	(bad)  
   140041adf:	inc    DWORD PTR [rax]
   140041ae1:	add    BYTE PTR [rax],al
   140041ae3:	add    BYTE PTR [rax+0x0],al
   140041ae6:	add    BYTE PTR [rax],al
   140041ae8:	mov    eax,0x41a
	...
   140041af5:	add    BYTE PTR [rax],al
   140041af7:	add    BYTE PTR [rax-0x8],bh
   140041afa:	add    al,0x0
   140041afc:	add    DWORD PTR [rax],eax
   140041afe:	add    BYTE PTR [rax],al
   140041b00:	add    BYTE PTR [rax],al
   140041b02:	add    BYTE PTR [rax],al
   140041b04:	(bad)  
   140041b05:	(bad)  
   140041b06:	(bad)  
   140041b07:	inc    DWORD PTR [rax]
   140041b09:	add    BYTE PTR [rax],al
   140041b0b:	add    BYTE PTR [rax+0x0],al
   140041b0e:	add    BYTE PTR [rax],al
   140041b10:	movabs al,ds:0x41a
   140041b19:	add    BYTE PTR [rax],al
   140041b1b:	add    BYTE PTR [rax],al
   140041b1d:	add    BYTE PTR [rax],al
   140041b1f:	add    BYTE PTR [rax-0x9],dl
   140041b22:	add    al,0x0
   140041b24:	add    DWORD PTR [rax],eax
   140041b26:	add    BYTE PTR [rax],al
   140041b28:	add    BYTE PTR [rax],al
   140041b2a:	add    BYTE PTR [rax],al
   140041b2c:	(bad)  
   140041b2d:	(bad)  
   140041b2e:	(bad)  
   140041b2f:	inc    DWORD PTR [rax]
   140041b31:	add    BYTE PTR [rax],al
   140041b33:	add    BYTE PTR [rax+0x0],al
   140041b36:	add    BYTE PTR [rax],al
   140041b38:	rcr    BYTE PTR [rbx],1
   140041b3a:	add    al,0x0
	...
   140041b50:	add    al,0x0
   140041b52:	add    BYTE PTR [rax],al
   140041b54:	sbb    al,0x4
	...
   140041b67:	add    BYTE PTR [rax+rax*1],al
   140041b6a:	add    BYTE PTR [rax],al
   140041b6c:	call   0x140041f89
   140041b71:	add    BYTE PTR [rax],al
   140041b73:	add    BYTE PTR [rax],al
   140041b75:	add    BYTE PTR [rax],al
   140041b77:	add    BYTE PTR [rax],ah
   140041b79:	sbb    eax,DWORD PTR [rax+rax*1]
   140041b7c:	cmp    BYTE PTR [rbx],al
   140041b7e:	add    al,0x0
	...
   140041b90:	add    DWORD PTR [rax],eax
	...
   140041b9a:	add    BYTE PTR [rax],al
   140041b9c:	sbb    bh,dh
   140041b9e:	add    al,0x0
   140041ba0:	mov    eax,0x9000041a
   140041ba5:	sbb    eax,DWORD PTR [rax+rax*1]
	...
   140041bb8:	clc    
   140041bb9:	sbb    al,BYTE PTR [rax+rax*1]
   140041bbc:	test   al,0xb
   140041bbe:	add    al,0x0
	...
   140041bd8:	add    al,BYTE PTR [rax]
   140041bda:	add    BYTE PTR [rax],al
   140041bdc:	js     0x140041bf9
   140041bde:	add    al,0x0
	...
   140041be8:	clc    
   140041be9:	test   DWORD PTR [rax+rax*1],0x1
   140041bf0:	add    BYTE PTR [rax],al
   140041bf2:	add    BYTE PTR [rax],al
   140041bf4:	(bad)  
   140041bf5:	(bad)  
   140041bf6:	(bad)  
   140041bf7:	inc    DWORD PTR [rax]
   140041bf9:	add    BYTE PTR [rax],al
   140041bfb:	add    BYTE PTR [rax+0x0],al
   140041bfe:	add    BYTE PTR [rax],al
   140041c00:	mov    BYTE PTR [rdx],bl
   140041c02:	add    al,0x0
	...
   140041c10:	rcr    BYTE PTR [rdx],1
   140041c12:	add    al,0x0
   140041c14:	adc    BYTE PTR [rcx],bl
   140041c16:	add    al,0x0
   140041c18:	cmp    BYTE PTR [rdx],bl
   140041c1a:	add    al,0x0
   140041c1c:	call   0xe804203c
   140041c21:	or     eax,DWORD PTR [rax+rax*1]
	...
   140041c40:	enter  0x419,0x0
   140041c44:	pop    rax
   140041c45:	sbb    DWORD PTR [rax+rax*1],eax
   140041c48:	clc    
   140041c49:	sbb    al,BYTE PTR [rax+rax*1]
   140041c4c:	test   al,0xb
   140041c4e:	add    al,0x0
	...
   140041c64:	push   rdx
   140041c65:	push   rbx
   140041c66:	rex.R push rbx
   140041c68:	sub    DWORD PTR [rsi+0x4e],ebx
   140041c6b:	cdq    
   140041c6c:	out    0xa8,al
   140041c6e:	sbb    cl,BYTE PTR [rdi-0x57]
   140041c71:	imul   ebp,DWORD PTR [rsi+0xc],0xffffffa0
   140041c75:	rcl    DWORD PTR [rbx+0x13f],0x0
   140041c7c:	rex.WRX imul r14,QWORD PTR [rbx+0x53],0x702e7672
   140041c84:	fs (bad) 
	...
   140041c9a:	add    BYTE PTR [rax],al
   140041c9c:	rex.RXB
   140041c9d:	rex.XB push r12
   140041c9f:	rex.WR add BYTE PTR [rax],r10b
   140041ca2:	add    BYTE PTR [rax],al
   140041ca4:	push   rax
   140041ca5:	add    eax,DWORD PTR [rax]
   140041ca7:	add    BYTE PTR [rsi],ch
   140041ca9:	je     0x140041d10
   140041cab:	js     0x140041d21
   140041cad:	and    al,0x64
   140041caf:	imul   eax,DWORD PTR [rax],0x50000000
   140041cb5:	adc    eax,DWORD PTR [rax]
   140041cb7:	add    BYTE PTR [rax],bh
   140041cb9:	(bad)  
   140041cba:	add    al,BYTE PTR [rax]
   140041cbc:	cs je  0x140041d24
   140041cbf:	js     0x140041d35
   140041cc1:	and    al,0x6d
   140041cc3:	outs   dx,BYTE PTR ds:[rsi]
   140041cc4:	add    BYTE PTR [rax],al
   140041cc6:	add    BYTE PTR [rax],al
   140041cc8:	nop
   140041cc9:	call   0x140811cd0
   140041cce:	add    BYTE PTR [rax],al
   140041cd0:	cs je  0x140041d38
   140041cd3:	js     0x140041d49
   140041cd5:	and    al,0x6d
   140041cd7:	outs   dx,BYTE PTR ds:[rsi]
   140041cd8:	and    al,0x30
   140041cda:	xor    BYTE PTR [rax],al
   140041cdc:	adc    cl,ch
   140041cde:	add    al,BYTE PTR [rax]
   140041ce0:	lock sub eax,0x742e0000
   140041ce6:	gs js  0x140041d5d
   140041ce9:	and    al,0x78
   140041ceb:	add    BYTE PTR [rax],al
   140041ced:	(bad)  
   140041cee:	add    eax,DWORD PTR [rax]
   140041cf0:	mov    WORD PTR [rbx],es
   140041cf2:	add    BYTE PTR [rax],al
   140041cf4:	cs je  0x140041d5c
   140041cf7:	js     0x140041d6d
   140041cf9:	and    al,0x79
   140041cfb:	add    BYTE PTR fs:[rax],al
   140041cfe:	add    BYTE PTR [rax],al
   140041d00:	add    BYTE PTR [rax],ah
   140041d02:	add    eax,DWORD PTR [rax]
   140041d04:	test   al,0x6
   140041d06:	add    BYTE PTR [rax],al
   140041d08:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x352461
   140041d11:	add    BYTE PTR [rax],al
   140041d13:	add    BYTE PTR [rax+0x10000326],ch
   140041d19:	add    BYTE PTR [rax],al
   140041d1b:	add    BYTE PTR [rsi],ch
   140041d1d:	xor    BYTE PTR [rax],dh
   140041d1f:	movsxd esp,DWORD PTR [rsi+0x67]
   140041d22:	add    BYTE PTR [rax],al
   140041d24:	mov    eax,0x8000326
   140041d29:	add    BYTE PTR [rax],al
   140041d2b:	add    BYTE PTR [rsi],ch
   140041d2d:	rex.XB push r10
   140041d2f:	push   rsp
   140041d30:	and    al,0x58
   140041d32:	rex.XB
   140041d33:	add    BYTE PTR [r8],al
   140041d36:	add    BYTE PTR [rax],al
   140041d38:	shl    BYTE PTR [rsi],0x3
   140041d3b:	add    BYTE PTR [rax],cl
   140041d3d:	add    BYTE PTR [rax],al
   140041d3f:	add    BYTE PTR [rsi],ch
   140041d41:	rex.XB push r10
   140041d43:	push   rsp
   140041d44:	and    al,0x58
   140041d46:	rex.XB
   140041d47:	rex.B
   140041d48:	add    BYTE PTR [r8],al
   140041d4b:	add    al,cl
   140041d4d:	add    eax,DWORD PTR es:[rax]
   140041d50:	adc    BYTE PTR [rax],al
   140041d52:	add    BYTE PTR [rax],al
   140041d54:	cs rex.XB push r10
   140041d57:	push   rsp
   140041d58:	and    al,0x58
   140041d5a:	rex.XB
   140041d5b:	rex.XB add BYTE PTR [r8],al
   140041d5e:	add    BYTE PTR [rax],al
   140041d60:	fsub   DWORD PTR [rsi]
   140041d62:	add    eax,DWORD PTR [rax]
   140041d64:	adc    BYTE PTR [rax],al
   140041d66:	add    BYTE PTR [rax],al
   140041d68:	cs rex.XB push r10
   140041d6b:	push   rsp
   140041d6c:	and    al,0x58
   140041d6e:	rex.XB
   140041d6f:	rex.WR add BYTE PTR [rax],r8b
   140041d72:	add    BYTE PTR [rax],al
   140041d74:	call   0x18804209f
   140041d79:	add    BYTE PTR [rax],al
   140041d7b:	add    BYTE PTR [rsi],ch
   140041d7d:	rex.XB push r10
   140041d7f:	push   rsp
   140041d80:	and    al,0x58
   140041d82:	rex.XB push r13
   140041d84:	add    BYTE PTR [rax],al
   140041d86:	add    BYTE PTR [rax],al
   140041d88:	xor    BYTE PTR [rdi],ah
   140041d8a:	add    eax,DWORD PTR [rax]
   140041d8c:	or     BYTE PTR [rax],al
   140041d8e:	add    BYTE PTR [rax],al
   140041d90:	cs rex.XB push r10
   140041d93:	push   rsp
   140041d94:	and    al,0x58
   140041d96:	rex.XB pop r10
   140041d98:	add    BYTE PTR [rax],al
   140041d9a:	add    BYTE PTR [rax],al
   140041d9c:	cmp    BYTE PTR [rdi],ah
   140041d9e:	add    eax,DWORD PTR [rax]
   140041da0:	or     BYTE PTR [rax],al
   140041da2:	add    BYTE PTR [rax],al
   140041da4:	cs rex.XB push r10
   140041da7:	push   rsp
   140041da8:	and    al,0x58
   140041daa:	rex.WB
   140041dab:	add    BYTE PTR [r8],al
   140041dae:	add    BYTE PTR [rax],al
   140041db0:	rex (bad) 
   140041db2:	add    eax,DWORD PTR [rax]
   140041db4:	or     BYTE PTR [rax],al
   140041db6:	add    BYTE PTR [rax],al
   140041db8:	cs rex.XB push r10
   140041dbb:	push   rsp
   140041dbc:	and    al,0x58
   140041dbe:	rex.WB
   140041dbf:	rex.B
   140041dc0:	add    BYTE PTR [r8],al
   140041dc3:	add    BYTE PTR [rax+0x27],cl
   140041dc6:	add    eax,DWORD PTR [rax]
   140041dc8:	or     BYTE PTR [rax],al
   140041dca:	add    BYTE PTR [rax],al
   140041dcc:	cs rex.XB push r10
   140041dcf:	push   rsp
   140041dd0:	and    al,0x58
   140041dd2:	rex.WB pop r9
   140041dd4:	add    BYTE PTR [rax],al
   140041dd6:	add    BYTE PTR [rax],al
   140041dd8:	push   rax
   140041dd9:	(bad)  
   140041dda:	add    eax,DWORD PTR [rax]
   140041ddc:	or     BYTE PTR [rax],al
   140041dde:	add    BYTE PTR [rax],al
   140041de0:	cs rex.XB push r10
   140041de3:	push   rsp
   140041de4:	and    al,0x58
   140041de6:	rex.WB pop r10
   140041de8:	add    BYTE PTR [rax],al
   140041dea:	add    BYTE PTR [rax],al
   140041dec:	pop    rax
   140041ded:	(bad)  
   140041dee:	add    eax,DWORD PTR [rax]
   140041df0:	fadd   QWORD PTR [rbx]
   140041df2:	add    BYTE PTR [rax],al
   140041df4:	imul   sp,WORD PTR cs:[ebx+esi*2+0x24],0x78
   140041dfd:	add    BYTE PTR [rax],al
   140041dff:	add    BYTE PTR [rax+0x2b],al
   140041e02:	add    eax,DWORD PTR [rax]
   140041e04:	rol    ch,0x0
   140041e07:	add    BYTE PTR [rsi],ch
   140041e09:	jb     0x140041e6f
   140041e0b:	(bad)  
   140041e0c:	je     0x140041e6f
   140041e0e:	add    BYTE PTR [rax],al
   140041e10:	add    cl,dh
   140041e12:	add    eax,DWORD PTR [rax]
   140041e14:	sub    eax,DWORD PTR fs:[rax]
   140041e17:	add    BYTE PTR [rsi],ch
   140041e19:	jb     0x140041e7f
   140041e1b:	(bad)  
   140041e1c:	je     0x140041e7f
   140041e1e:	and    al,0x72
   140041e20:	add    BYTE PTR [rax],al
   140041e22:	add    BYTE PTR [rax],al
   140041e24:	fs sbb al,0x4
   140041e27:	add    ah,al
   140041e29:	add    al,BYTE PTR [rax]
   140041e2b:	add    BYTE PTR [rsi],ch
   140041e2d:	jb     0x140041e93
   140041e2f:	(bad)  
   140041e30:	je     0x140041e93
   140041e32:	and    al,0x7a
   140041e34:	jp     0x140041eb0
   140041e36:	fs (bad) 
   140041e38:	add    BYTE PTR [eax],al
   140041e3b:	add    BYTE PTR [rax],dh
   140041e3d:	(bad)  
   140041e3e:	add    al,0x0
   140041e40:	and    BYTE PTR [rcx+0x0],dh
   140041e43:	add    BYTE PTR [rsi],ch
   140041e45:	js     0x140041eab
   140041e47:	(bad)  
   140041e48:	je     0x140041eab
   140041e4a:	add    BYTE PTR [rax],al
   140041e4c:	push   rax
   140041e4d:	nop
   140041e4e:	add    al,0x0
   140041e50:	hlt    
   140041e51:	add    al,BYTE PTR [rax]
   140041e53:	add    BYTE PTR [rsi],ch
   140041e55:	js     0x140041ebb
   140041e57:	(bad)  
   140041e58:	je     0x140041ebb
   140041e5a:	and    al,0x78
   140041e5c:	add    BYTE PTR [rax],al
   140041e5e:	add    BYTE PTR [rax],al
   140041e60:	push   rax
   140041e61:	xchg   ebx,eax
   140041e62:	add    al,0x0
   140041e64:	jnp    0x140041e67
   140041e66:	add    BYTE PTR [rax],al
   140041e68:	cs gs fs (bad) 
   140041e6c:	je     0x140041ecf
   140041e6e:	add    BYTE PTR [rax],al
   140041e70:	int3   
   140041e71:	xchg   esp,eax
   140041e72:	add    al,0x0
   140041e74:	enter  0x0,0x0
   140041e78:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x322461
   140041e81:	add    BYTE PTR [rax],al
   140041e83:	add    BYTE PTR [rbp+rdx*4+0x140004],dl
   140041e8a:	add    BYTE PTR [rax],al
   140041e8c:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   140041e95:	add    BYTE PTR [rax],al
   140041e97:	add    BYTE PTR [rax-0x57fffb6b],ch
   140041e9d:	(bad)  
   140041e9e:	add    BYTE PTR [rax],al
   140041ea0:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x342461
   140041ea9:	add    BYTE PTR [rax],al
   140041eab:	add    BYTE PTR [rax-0x64],dl
   140041eae:	add    al,0x0
   140041eb0:	(bad)  
   140041eb1:	(bad)  
   140041eb2:	add    BYTE PTR [rax],al
   140041eb4:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x362461
   140041ebd:	add    BYTE PTR [rax],al
   140041ebf:	add    BYTE PTR [rax],al
   140041ec1:	mov    al,0x4
   140041ec3:	add    al,ah
   140041ec5:	add    BYTE PTR ss:[rax],al
   140041ec8:	cs fs (bad) 
   140041ecb:	je     0x140041f2e
   140041ecd:	add    BYTE PTR [rax],al
   140041ecf:	add    al,ah
   140041ed1:	out    0x4,al
   140041ed3:	add    BYTE PTR [rsi],al
   140041ed5:	adc    al,BYTE PTR [rax]
   140041ed7:	add    BYTE PTR [rsi],ch
   140041ed9:	fs (bad) 
   140041edb:	je     0x140041f3e
   140041edd:	and    al,0x72
   140041edf:	add    BYTE PTR [rax],al
   140041ee1:	stc    
   140041ee2:	add    al,0x0
   140041ee4:	(bad)  
   140041ee5:	or     al,BYTE PTR [rax]
   140041ee7:	add    BYTE PTR [rsi],ch
   140041ee9:	(bad)  
   140041eeb:	jae    0x140041eed
   140041eed:	add    BYTE PTR [rax],al
   140041eef:	add    BYTE PTR [rax],al
   140041ef1:	adc    BYTE PTR [rip+0x270000],al        # 0x1402b1ef7
   140041ef7:	add    BYTE PTR [rsi],ch
   140041ef9:	jo     0x140041f5f
   140041efb:	(bad)  
   140041efc:	je     0x140041f5f
   140041efe:	add    BYTE PTR [rax],al
   140041f00:	add    BYTE PTR [rax+0x5],al
   140041f03:	add    BYTE PTR [rcx+rax*1+0x0],cl
   140041f07:	add    BYTE PTR [rsi],ch
   140041f09:	jb     0x140041f7e
   140041f0b:	jb     0x140041f70
   140041f0d:	and    al,0x30
   140041f0f:	xor    DWORD PTR [rax],eax
   140041f11:	add    BYTE PTR [rax],al
   140041f13:	add    BYTE PTR [rax+0x41],dl
   140041f16:	add    eax,0x164000
   140041f1b:	add    BYTE PTR [rsi],ch
   140041f1d:	jb     0x140041f92
   140041f1f:	jb     0x140041f84
   140041f21:	and    al,0x30
   140041f23:	xor    al,BYTE PTR [rax]
	...
   140041f2d:	add    BYTE PTR [rax],al
   140041f2f:	add    BYTE PTR [rcx],al
   140041f31:	(bad)  
   140041f32:	add    al,BYTE PTR [rax]
   140041f34:	(bad)  
   140041f35:	xor    al,BYTE PTR [rdx]
   140041f37:	xor    BYTE PTR [rcx],al
   140041f39:	adc    eax,0x74150008
   140041f3e:	or     al,BYTE PTR [rax]
   140041f40:	adc    eax,0x15000964
   140041f45:	xor    al,0x8
   140041f47:	add    BYTE PTR [rip+0x1e01152],dl        # 0x141e4309f
   140041f4d:	or     al,BYTE PTR [rax+rax*1]
   140041f50:	or     dh,BYTE PTR [rax+rcx*1]
   140041f53:	add    BYTE PTR [rdx],cl
   140041f55:	push   rdx
   140041f56:	(bad)  
   140041f57:	jo     0x140041f5a
   140041f59:	(bad)  
   140041f5a:	add    al,BYTE PTR [rax]
   140041f5c:	(bad)  
   140041f5d:	push   rdx
   140041f5e:	add    dh,BYTE PTR [rax]
   140041f60:	add    DWORD PTR [rdx],ecx
   140041f62:	add    al,0x0
   140041f64:	or     dh,BYTE PTR [rsi+rax*1]
   140041f67:	add    BYTE PTR [rdx],cl
   140041f69:	xor    al,BYTE PTR [rsi]
   140041f6b:	jo     0x140041f6e
   140041f6d:	sbb    BYTE PTR [rdx],cl
   140041f6f:	add    BYTE PTR [rax],bl
   140041f71:	or     al,BYTE PTR fs:[rax]
   140041f74:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   140041f78:	sbb    BYTE PTR [rax+rcx*1],dh
   140041f7b:	add    BYTE PTR [rax],bl
   140041f7d:	xor    dl,BYTE PTR [rax+rsi*8]
   140041f80:	adc    ah,al
   140041f82:	adc    BYTE PTR [rax+0x19],dh
   140041f85:	and    al,0x9
   140041f87:	add    BYTE PTR [rdx],dl
   140041f89:	add    DWORD PTR [rax],esi
   140041f8b:	add    BYTE PTR [rbx],cl
   140041f8d:	lock or eax,esp
   140041f90:	(bad)  
   140041f91:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x143642408
   140041f98:	add    dh,BYTE PTR [rax]
   140041f9a:	add    BYTE PTR [rax],al
   140041f9c:	sub    bh,ah
   140041f9e:	add    al,BYTE PTR [rax]
   140041fa0:	jo     0x140041fa3
   140041fa2:	add    BYTE PTR [rax],al
   140041fa4:	add    DWORD PTR [rdi],ecx
   140041fa6:	(bad)  
   140041fa7:	add    BYTE PTR [rdi],cl
   140041fa9:	fs (bad) 
   140041fab:	add    BYTE PTR [rdi],cl
   140041fad:	xor    al,0x6
   140041faf:	add    BYTE PTR [rdi],cl
   140041fb1:	xor    cl,BYTE PTR [rbx]
   140041fb3:	jo     0x140041fb6
   140041fb5:	add    al,0x1
   140041fb7:	add    BYTE PTR [rdx+rax*2],al
   140041fba:	add    BYTE PTR [rax],al
   140041fbc:	add    DWORD PTR [rax+rcx*1],edx
   140041fbf:	add    BYTE PTR [rsp+riz*2],dl
   140041fc2:	or     BYTE PTR [rax],al
   140041fc4:	adc    al,0x54
   140041fc6:	(bad)  
   140041fc7:	add    BYTE PTR [rsp+rsi*1],dl
   140041fca:	(bad)  
   140041fcb:	add    BYTE PTR [rdx+rsi*1],dl
   140041fce:	adc    BYTE PTR [rax+0x19],dh
   140041fd1:	and    BYTE PTR [rip+0x14621800],al        # 0x1546637d7
   140041fd7:	loopne 0x140041feb
   140041fd9:	jo     0x140041fec
   140041fdb:	(bad)  
   140041fdc:	adc    BYTE PTR [rax],dh
   140041fde:	add    BYTE PTR [rax],al
   140041fe0:	out    0xe2,al
   140041fe2:	add    al,BYTE PTR [rax]
   140041fe4:	pop    rax
   140041fe5:	(bad)  
   140041fe6:	add    eax,DWORD PTR [rax]
   140041fe8:	(bad)  
   140041fe9:	(bad)  
   140041fea:	(bad)  
   140041feb:	inc    DWORD PTR [rax]
   140041fed:	add    BYTE PTR [rax],al
   140041fef:	add    bh,bh
   140041ff1:	(bad)  
   140041ff2:	(bad)  
   140041ff3:	inc    DWORD PTR [rax]
   140041ff5:	add    BYTE PTR [rax],al
   140041ff7:	add    BYTE PTR [rcx],al
   140041ff9:	add    BYTE PTR [rax],al
   140041ffb:	add    BYTE PTR [rax],al
   140041ffd:	add    BYTE PTR [rax],al
   140041fff:	add    BYTE PTR [rcx],al
	...
   14004200d:	add    BYTE PTR [rax],al
   14004200f:	add    BYTE PTR [rbx],al
   140042011:	add    BYTE PTR [rax],al
   140042013:	add    BYTE PTR [rcx],al
   140042015:	add    BYTE PTR [rax],al
   140042017:	add    BYTE PTR [rax],dh
   140042019:	and    BYTE PTR [rax+rax*1],al
   14004201c:	add    al,BYTE PTR [rax]
   14004201e:	add    BYTE PTR [rax],al
   140042020:	add    al,BYTE PTR [rax]
   140042022:	add    BYTE PTR [rax],al
   140042024:	add    eax,DWORD PTR [rax]
   140042026:	add    BYTE PTR [rax],al
   140042028:	add    DWORD PTR [rax],eax
   14004202a:	add    BYTE PTR [rax],al
   14004202c:	and    BYTE PTR [rax+rax*1],r8b
   140042030:	add    BYTE PTR [rax],al
	...
   14004203b:	add    BYTE PTR [rsi],dl
   14004203d:	jmp    0x1403c2044
   140042042:	add    BYTE PTR [rax],al
   140042044:	add    BYTE PTR [rax],al
	...
   14004204f:	add    BYTE PTR [rdi-0x17],dl
   140042052:	add    al,BYTE PTR [rax]
   140042054:	cmp    BYTE PTR [rax],al
	...
   14004205e:	add    BYTE PTR [rax],al
   140042060:	add    BYTE PTR [rsi],bl
   140042062:	add    BYTE PTR [rax],al
   140042064:	(bad)  
   140042065:	(bad)  
   140042066:	(bad)  
   140042067:	jmp    FWORD PTR [rdi+0x1e]
   14004206a:	add    BYTE PTR [rax],al
   14004206c:	add    BYTE PTR [rax],al
   14004206e:	add    BYTE PTR [rax],al
   140042070:	xchg   ecx,eax
   140042071:	(bad)  
   140042072:	add    BYTE PTR [rax],al
   140042074:	(bad)  
   140042075:	(bad)  
   140042076:	(bad)  
   140042077:	call   QWORD PTR [rsi]
   140042079:	jmp    0x140042080
   14004207e:	add    BYTE PTR [rax],al
   140042080:	and    ebp,ecx
   140042082:	add    al,BYTE PTR [rax]
   140042084:	add    DWORD PTR [rax],eax
   140042086:	add    BYTE PTR [rax],al
   140042088:	sub    ebp,ecx
   14004208a:	add    al,BYTE PTR [rax]
   14004208c:	add    al,BYTE PTR [rax]
   14004208e:	add    BYTE PTR [rax],al
   140042090:	rex.WB jmp 0x140042098
   140042096:	add    BYTE PTR [rax],al
   140042098:	fs jmp 0x1400720a0
   14004209e:	add    BYTE PTR [rax],al
   1400420a0:	sbb    DWORD PTR [rdx],ecx
   1400420a2:	add    al,BYTE PTR [rax]
   1400420a4:	or     dh,BYTE PTR [rdx]
   1400420a6:	(bad)  
   1400420a7:	push   rax
   1400420a8:	out    0xe2,al
   1400420aa:	add    al,BYTE PTR [rax]
   1400420ac:	pop    rax
   1400420ad:	(bad)  
   1400420ae:	add    eax,DWORD PTR [rax]
   1400420b0:	add    DWORD PTR [rcx+rax*1],eax
   1400420b3:	add    BYTE PTR [rdx+riz*2],al
   1400420b6:	add    BYTE PTR [rax],al
   1400420b8:	add    DWORD PTR [rbx],ecx
   1400420ba:	add    DWORD PTR [rax],eax
   1400420bc:	or     eax,DWORD PTR [rdx+0x4010000]
   1400420c2:	add    DWORD PTR [rax],eax
   1400420c4:	add    al,0x82
   1400420c6:	add    BYTE PTR [rax],al
   1400420c8:	add    DWORD PTR [rcx+rax*1],eax
   1400420cb:	add    BYTE PTR [rdx+riz*4],al
   1400420ce:	add    BYTE PTR [rax],al
   1400420d0:	add    DWORD PTR [rcx],edx
   1400420d2:	add    al,0x0
   1400420d4:	adc    DWORD PTR [rdx],esi
   1400420d6:	or     eax,0xb600c70
   1400420db:	xor    BYTE PTR [rcx],al
   1400420dd:	or     DWORD PTR [rcx],eax
   1400420df:	add    BYTE PTR [rcx],cl
   1400420e1:	ret    0x0
   1400420e4:	add    DWORD PTR [rip+0x74150008],edx        # 0x1b41920f2
   1400420ea:	or     BYTE PTR [rax],al
   1400420ec:	adc    eax,0x15000764
   1400420f1:	xor    al,0x6
   1400420f3:	add    BYTE PTR [rip+0x19e01132],dl        # 0x159e4322b
   1400420f9:	xor    DWORD PTR [rcx],ecx
   1400420fb:	add    BYTE PTR [rdi],bl
   1400420fd:	fs sbb eax,0x1c341b00
   140042103:	add    BYTE PTR [rdi],cl
   140042105:	add    DWORD PTR [rsi],edx
   140042107:	add    BYTE PTR [rax],cl
   140042109:	lock (bad) 
   14004210b:	loopne 0x140042111
   14004210d:	jo     0x14004210f
   14004210f:	add    ah,cl
   140042111:	out    0x2,eax
   140042113:	add    BYTE PTR [rax],bl
   140042115:	(bad)  
   140042116:	add    eax,DWORD PTR [rax]
   140042118:	movabs ds:0x82ffffffff000000,eax
   140042121:	jmp    0x140042128
   140042126:	add    BYTE PTR [rax],al
   140042128:	mov    gs,ecx
   14004212a:	add    al,BYTE PTR [rax]
   14004212c:	add    DWORD PTR [rax],eax
   14004212e:	add    BYTE PTR [rax],al
   140042130:	(bad)  
   140042131:	jmp    0x140042138
	...
   140042142:	add    BYTE PTR [rax],al
   140042144:	add    eax,DWORD PTR [rax]
   140042146:	add    BYTE PTR [rax],al
   140042148:	add    eax,DWORD PTR [rax]
   14004214a:	add    BYTE PTR [rax],al
   14004214c:	add    al,0x0
   14004214e:	add    BYTE PTR [rax],al
   140042150:	add    DWORD PTR [rax],eax
   140042152:	add    BYTE PTR [rax],al
   140042154:	pop    rax
   140042155:	and    DWORD PTR [rax+rax*1],eax
   140042158:	or     DWORD PTR [rax],eax
   14004215a:	add    BYTE PTR [rax],al
   14004215c:	push   rax
   14004215d:	call   0x1406c2166
   140042162:	add    BYTE PTR [rax],al
   140042164:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140042165:	jmp    0x1404c216c
   14004216a:	add    BYTE PTR [rax],al
   14004216c:	add    BYTE PTR [rax],al
   14004216e:	add    BYTE PTR [rax],al
   140042170:	pop    rax
   140042171:	and    eax,0xffff0000
   140042176:	(bad)  
   140042177:	call   FWORD PTR [rdx+0x25]
   14004217d:	add    BYTE PTR [rax],al
   14004217f:	add    BYTE PTR [rdi],al
   140042181:	add    BYTE PTR es:[rax],al
   140042184:	add    DWORD PTR [rax],eax
   140042186:	add    BYTE PTR [rax],al
   140042188:	sub    esp,DWORD PTR [rsi]
   14004218a:	add    BYTE PTR [rax],al
   14004218c:	add    al,BYTE PTR [rax]
   14004218e:	add    BYTE PTR [rax],al
   140042190:	scas   eax,DWORD PTR es:[rdi]
   140042191:	add    BYTE PTR es:[rax],al
   140042194:	add    DWORD PTR [rax],eax
   140042196:	add    BYTE PTR [rax],al
   140042198:	in     eax,0x26
   14004219a:	add    BYTE PTR [rax],al
   14004219c:	add    BYTE PTR [rax],al
   14004219e:	add    BYTE PTR [rax],al
   1400421a0:	add    BYTE PTR [rdi],ah
   1400421a2:	add    BYTE PTR [rax],al
   1400421a4:	add    eax,DWORD PTR [rax]
   1400421a6:	add    BYTE PTR [rax],al
   1400421a8:	retf   0x28
   1400421ab:	add    BYTE PTR [rax],al
   1400421ad:	add    BYTE PTR [rax],al
   1400421af:	add    BYTE PTR [rsi],ah
   1400421b1:	sub    DWORD PTR [rax],eax
   1400421b3:	add    bh,bh
   1400421b5:	(bad)  
   1400421b6:	(bad)  
   1400421b7:	jmp    FWORD PTR [rax]
   1400421b9:	sub    DWORD PTR [rax],eax
   1400421bb:	add    BYTE PTR [rdx],al
   1400421bd:	add    BYTE PTR [rax],al
   1400421bf:	add    BYTE PTR [rax],dh
   1400421c1:	sub    DWORD PTR [rax],eax
   1400421c3:	add    BYTE PTR [rax],al
   1400421c5:	add    BYTE PTR [rax],al
   1400421c7:	add    BYTE PTR [rax+0x29],dh
   1400421ca:	add    BYTE PTR [rax],al
   1400421cc:	(bad)  
   1400421cd:	(bad)  
   1400421ce:	(bad)  
   1400421cf:	jmp    QWORD PTR [rsi+0x2e9]
   1400421d5:	add    BYTE PTR [rax],al
   1400421d7:	add    BYTE PTR [rbx+0x40002e9],dh
   1400421dd:	add    BYTE PTR [rax],al
   1400421df:	add    BYTE PTR [rdi+0x2e9],bh
   1400421e5:	add    BYTE PTR [rax],al
   1400421e7:	add    BYTE PTR [rcx],bl
   1400421e9:	or     al,BYTE PTR [rdx]
   1400421eb:	add    BYTE PTR [rdx],cl
   1400421ed:	push   rdx
   1400421ee:	(bad)  
   1400421ef:	push   rax
   1400421f0:	out    0xe2,al
   1400421f2:	add    al,BYTE PTR [rax]
   1400421f4:	sbb    ch,dl
   1400421f6:	add    eax,DWORD PTR [rax]
   1400421f8:	sbb    DWORD PTR [rip+0x741d0006],ebx        # 0x1b4212204
   1400421fe:	or     eax,DWORD PTR [rax]
   140042200:	sbb    DWORD PTR [rdx+rcx*1],esi
   140042203:	add    BYTE PTR [rip+0xffffffffe6e00952],cl        # 0x126e42b5b
   140042209:	loop   0x14004220d
   14004220b:	add    al,dh
   14004220d:	(bad)  
   14004220e:	add    eax,DWORD PTR [rax]
   140042210:	(bad)  
   140042211:	(bad)  
   140042212:	(bad)  
   140042213:	inc    DWORD PTR [rax]
   140042215:	add    BYTE PTR [rax],al
   140042217:	add    bh,bh
   140042219:	(bad)  
   14004221a:	(bad)  
   14004221b:	inc    DWORD PTR [rax]
	...
   140042225:	add    BYTE PTR [rax],al
   140042227:	add    BYTE PTR [rcx],al
   140042229:	add    BYTE PTR [rax],al
   14004222b:	add    BYTE PTR [rcx],al
   14004222d:	add    BYTE PTR [rax],al
   14004222f:	add    BYTE PTR [rdx+riz*1],dh
   140042232:	add    al,0x0
   140042234:	or     DWORD PTR [rax],eax
   140042236:	add    BYTE PTR [rax],al
   140042238:	push   rax
   140042239:	call   0x1402c2242
   14004223e:	add    BYTE PTR [rax],al
   140042240:	shr    ecx,cl
   140042242:	add    al,BYTE PTR [rax]
   140042244:	cmp    BYTE PTR [rax],al
   140042246:	add    BYTE PTR [rax],al
   140042248:	movabs al,ds:0xcaffffffff000029
   140042251:	sub    DWORD PTR [rax],eax
   140042253:	add    BYTE PTR [rax],al
   140042255:	add    BYTE PTR [rax],al
   140042257:	add    ah,dh
   140042259:	sub    al,BYTE PTR [rax]
   14004225b:	add    bh,bh
   14004225d:	(bad)  
   14004225e:	(bad)  
   14004225f:	call   rbx
   140042261:	jmp    0x140042268
   140042266:	add    BYTE PTR [rax],al
   140042268:	loopne 0x140042253
   14004226a:	add    al,BYTE PTR [rax]
   14004226c:	add    DWORD PTR [rax],eax
   14004226e:	add    BYTE PTR [rax],al
   140042270:	in     al,dx
   140042271:	jmp    0x140042278
   140042276:	add    BYTE PTR [rax],al
   140042278:	sbb    DWORD PTR [rdx],ecx
   14004227a:	add    al,BYTE PTR [rax]
   14004227c:	or     dh,BYTE PTR [rdx]
   14004227e:	(bad)  
   14004227f:	push   rax
   140042280:	out    0xe2,al
   140042282:	add    al,BYTE PTR [rax]
   140042284:	lock (bad) 
   140042286:	add    eax,DWORD PTR [rax]
   140042288:	add    DWORD PTR [rdx],edx
   14004228a:	or     BYTE PTR [rax],al
   14004228c:	adc    dl,BYTE PTR [rcx+rdx*1+0x0]
   140042290:	adc    dh,BYTE PTR [rax+rdx*1]
   140042293:	add    BYTE PTR [rdx],dl
   140042295:	xchg   edx,eax
   140042296:	(bad)  
   140042297:	loopne 0x1400422a5
   140042299:	jo     0x1400422a6
   14004229b:	(bad)  
   14004229c:	adc    DWORD PTR [rax],ebx
   14004229e:	(bad)  
   14004229f:	add    BYTE PTR [rax],bl
   1400422a1:	or     al,BYTE PTR fs:[rax]
   1400422a4:	adc    al,0x34
   1400422a6:	or     DWORD PTR [rax],eax
   1400422a8:	or     BYTE PTR [rdx+0x4],dl
   1400422ab:	jo     0x140042293
   1400422ad:	loop   0x1400422b1
   1400422af:	add    al,cl
   1400422b1:	(bad)  
   1400422b2:	add    eax,DWORD PTR [rax]
   1400422b4:	(bad)  
   1400422b5:	(bad)  
   1400422b6:	(bad)  
   1400422b7:	inc    DWORD PTR [rax]
   1400422b9:	(bad)  
   1400422ba:	add    al,BYTE PTR [rax]
   1400422bc:	add    BYTE PTR [rax],al
   1400422be:	add    BYTE PTR [rax],al
   1400422c0:	rex
   1400422c1:	add    BYTE PTR cs:[rax],al
   1400422c4:	(bad)  
   1400422c5:	(bad)  
   1400422c6:	(bad)  
   1400422c7:	jmp    QWORD PTR [rcx+0x2e]
   1400422ca:	add    BYTE PTR [rax],al
   1400422cc:	add    BYTE PTR [rax],al
   1400422ce:	add    BYTE PTR [rax],al
   1400422d0:	movabs ds:0x19ffffffff00002e,eax
   1400422d9:	xor    ecx,DWORD PTR [rcx]
   1400422db:	add    BYTE PTR [rcx],ah
   1400422dd:	xor    al,0x38
   1400422df:	add    BYTE PTR [rdx],dl
   1400422e1:	add    DWORD PTR [rax],esi
   1400422e3:	add    BYTE PTR [rbx],cl
   1400422e5:	loopne 0x1400422f0
   1400422e7:	rol    BYTE PTR [rdi],1
   1400422e9:	rol    BYTE PTR [rip+0x600470],0x0        # 0x140642760
   1400422f0:	int3   
   1400422f1:	out    0x2,eax
   1400422f3:	add    BYTE PTR [rax+0x730003d4],ah
   1400422f9:	add    DWORD PTR [rax],eax
   1400422fb:	add    bh,bh
   1400422fd:	(bad)  
   1400422fe:	(bad)  
   1400422ff:	call   QWORD PTR [rdx]
   140042301:	(bad)  
   140042302:	add    al,BYTE PTR [rax]
   140042304:	add    BYTE PTR [rax],al
   140042306:	add    BYTE PTR [rax],al
   140042308:	(bad)  
   140042309:	(bad)  
   14004230a:	add    al,BYTE PTR [rax]
   14004230c:	add    DWORD PTR [rax],eax
   14004230e:	add    BYTE PTR [rax],al
   140042310:	sub    ch,dl
   140042312:	add    al,BYTE PTR [rax]
   140042314:	add    al,BYTE PTR [rax]
   140042316:	add    BYTE PTR [rax],al
   140042318:	ss (bad) 
   14004231a:	add    al,BYTE PTR [rax]
   14004231c:	add    eax,DWORD PTR [rax]
   14004231e:	add    BYTE PTR [rax],al
   140042320:	add    BYTE PTR [rax],al
   140042322:	add    BYTE PTR [rax],al
   140042324:	add    eax,DWORD PTR [rax]
   140042326:	add    BYTE PTR [rax],al
   140042328:	add    BYTE PTR [rax],al
   14004232a:	add    BYTE PTR [rax],al
   14004232c:	add    eax,DWORD PTR [rax]
   14004232e:	add    BYTE PTR [rax],al
   140042330:	add    BYTE PTR [rax],al
   140042332:	add    BYTE PTR [rax],al
   140042334:	add    eax,DWORD PTR [rax]
   140042336:	add    BYTE PTR [rax],al
   140042338:	add    BYTE PTR [rax],al
   14004233a:	add    BYTE PTR [rax],al
   14004233c:	add    eax,DWORD PTR [rax]
   14004233e:	add    BYTE PTR [rax],al
   140042340:	add    BYTE PTR [rax],al
   140042342:	add    BYTE PTR [rax],al
   140042344:	add    eax,DWORD PTR [rax]
   140042346:	add    BYTE PTR [rax],al
   140042348:	add    BYTE PTR [rax],al
   14004234a:	add    BYTE PTR [rax],al
   14004234c:	add    al,0x0
   14004234e:	add    BYTE PTR [rax],al
   140042350:	add    al,0x0
   140042352:	add    BYTE PTR [rax],al
   140042354:	add    eax,0x1000000
   140042359:	add    BYTE PTR [rax],al
   14004235b:	add    BYTE PTR [rax+0x6000423],cl
   140042361:	add    BYTE PTR [rax],al
   140042363:	add    BYTE PTR [rsi],al
   140042365:	add    BYTE PTR [rax],al
   140042367:	add    BYTE PTR [rdi],al
   140042369:	add    BYTE PTR [rax],al
   14004236b:	add    BYTE PTR [rcx],al
   14004236d:	add    BYTE PTR [rax],al
   14004236f:	add    BYTE PTR [rbx+riz*1+0x80004],bl
   140042376:	add    BYTE PTR [rax],al
   140042378:	or     BYTE PTR [rax],al
   14004237a:	add    BYTE PTR [rax],al
   14004237c:	or     DWORD PTR [rax],eax
   14004237e:	add    BYTE PTR [rax],al
   140042380:	add    DWORD PTR [rax],eax
   140042382:	add    BYTE PTR [rax],al
   140042384:	mov    al,0x23
   140042386:	add    al,0x0
   140042388:	or     DWORD PTR [rax],eax
   14004238a:	add    BYTE PTR [rax],al
   14004238c:	push   rax
   14004238d:	call   0x1410c2396
   140042392:	add    BYTE PTR [rax],al
   140042394:	rex.X (bad) 
   140042396:	add    al,BYTE PTR [rax]
   140042398:	cwde   
   140042399:	add    BYTE PTR [rax],al
   14004239b:	add    BYTE PTR [rcx],cl
   14004239d:	add    BYTE PTR [rax],al
   14004239f:	add    BYTE PTR [rax-0x18],dl
   1400423a2:	add    al,0x0
   1400423a4:	add    BYTE PTR [rcx],al
   1400423a6:	add    BYTE PTR [rax],al
   1400423a8:	icebp  
   1400423a9:	(bad)  
   1400423aa:	add    al,BYTE PTR [rax]
   1400423ac:	cwde   
   1400423ad:	add    BYTE PTR [rax],al
   1400423af:	add    BYTE PTR [rax],cl
   1400423b1:	add    BYTE PTR [rax],al
   1400423b3:	add    BYTE PTR [rax-0x18],dl
   1400423b6:	add    al,0x0
   1400423b8:	clc    
   1400423b9:	add    BYTE PTR [rax],al
   1400423bb:	add    BYTE PTR [rax-0x67fffd15],ah
	...
   1400423cd:	add    BYTE PTR [rax],al
   1400423cf:	add    al,ah
   1400423d1:	add    BYTE PTR cs:[rax],al
   1400423d4:	(bad)  
   1400423d5:	(bad)  
   1400423d6:	(bad)  
   1400423d7:	call   QWORD PTR [rbp+0x2f]
   1400423dd:	add    BYTE PTR [rax],al
   1400423df:	add    BYTE PTR [rdx-0xffffd1],dh
   1400423e5:	(bad)  
   1400423e6:	(bad)  
   1400423e7:	(bad)  
   1400423e8:	fisubr DWORD PTR [rdi]
   1400423ea:	add    BYTE PTR [rax],al
   1400423ec:	add    BYTE PTR [rax],al
   1400423ee:	add    BYTE PTR [rax],al
   1400423f0:	or     esi,DWORD PTR [rcx]
   1400423f2:	add    BYTE PTR [rax],al
   1400423f4:	add    DWORD PTR [rax],eax
   1400423f6:	add    BYTE PTR [rax],al
   1400423f8:	sbb    eax,0x2000031
   1400423fd:	add    BYTE PTR [rax],al
   1400423ff:	add    BYTE PTR [rdi],ch
   140042401:	xor    DWORD PTR [rax],eax
   140042403:	add    BYTE PTR [rbx],al
   140042405:	add    BYTE PTR [rax],al
   140042407:	add    BYTE PTR [rbx+0x31],cl
   14004240a:	add    BYTE PTR [rax],al
   14004240c:	add    al,0x0
   14004240e:	add    BYTE PTR [rax],al
   140042410:	in     al,0x31
   140042412:	add    BYTE PTR [rax],al
   140042414:	add    eax,DWORD PTR [rax]
   140042416:	add    BYTE PTR [rax],al
   140042418:	repz xor al,BYTE PTR [rax]
   14004241b:	add    BYTE PTR [rdx],al
   14004241d:	add    BYTE PTR [rax],al
   14004241f:	add    BYTE PTR [rcx],al
   140042421:	xor    eax,DWORD PTR [rax]
   140042423:	add    BYTE PTR [rcx],al
   140042425:	add    BYTE PTR [rax],al
   140042427:	add    BYTE PTR [rcx],ch
   140042429:	xor    eax,DWORD PTR [rax]
   14004242b:	add    BYTE PTR [rax],al
   14004242d:	add    BYTE PTR [rax],al
   14004242f:	add    BYTE PTR [rdi],dh
   140042431:	xor    eax,DWORD PTR [rax]
   140042433:	add    bh,bh
   140042435:	(bad)  
   140042436:	(bad)  
   140042437:	call   QWORD PTR [rbx+rsi*1+0x0]
   14004243b:	add    BYTE PTR [rbx],al
   14004243d:	add    BYTE PTR [rax],al
   14004243f:	add    BYTE PTR [rdi+0x6000033],ah
   140042445:	add    BYTE PTR [rax],al
   140042447:	add    BYTE PTR [rbx+0x8000034],ch
   14004244d:	add    BYTE PTR [rax],al
   14004244f:	add    dh,bl
   140042451:	xor    al,0x0
   140042453:	add    BYTE PTR [rbx],al
   140042455:	add    BYTE PTR [rax],al
   140042457:	add    BYTE PTR [rcx],ah
   140042459:	xor    eax,0x20000
   14004245e:	add    BYTE PTR [rax],al
   140042460:	(bad)  
   140042461:	xor    eax,0x10000
   140042466:	add    BYTE PTR [rax],al
   140042468:	push   rdi
   140042469:	xor    eax,0x0
   14004246e:	add    BYTE PTR [rax],al
   140042470:	gs xor eax,0xffff0000
   140042476:	(bad)  
   140042477:	dec    DWORD PTR [rcx+0x2000035]
   14004247d:	add    BYTE PTR [rax],al
   14004247f:	add    BYTE PTR [rdi+0x1000035],dl
   140042485:	add    BYTE PTR [rax],al
   140042487:	add    BYTE PTR [rdi+0x35],bh
   14004248d:	add    BYTE PTR [rax],al
   14004248f:	add    ch,cl
   140042491:	xor    eax,0xffff0000
   140042496:	(bad)  
   140042497:	inc    DWORD PTR [rdx-0x16]
   14004249a:	add    al,BYTE PTR [rax]
   14004249c:	add    BYTE PTR [rax],al
   14004249e:	add    BYTE PTR [rax],al
   1400424a0:	push   rcx
   1400424a1:	(bad)  
   1400424a2:	add    al,BYTE PTR [rax]
   1400424a4:	add    eax,0xe1000000
   1400424a9:	(bad)  
   1400424aa:	add    al,BYTE PTR [rax]
   1400424ac:	add    BYTE PTR [rax],al
   1400424ae:	add    BYTE PTR [rax],al
   1400424b0:	add    bl,ch
   1400424b2:	add    al,BYTE PTR [rax]
   1400424b4:	(bad)  
   1400424b5:	add    BYTE PTR [rax],al
   1400424b7:	add    BYTE PTR [rax+0x2eb],dl
   1400424bd:	add    BYTE PTR [rax],al
   1400424bf:	add    BYTE PTR [rdi+0x90002eb],ch
   1400424c5:	add    BYTE PTR [rax],al
   1400424c7:	add    BYTE PTR [rdx],dh
   1400424c9:	in     al,dx
   1400424ca:	add    al,BYTE PTR [rax]
   1400424cc:	add    BYTE PTR [rax],al
   1400424ce:	add    BYTE PTR [rax],al
   1400424d0:	sbb    DWORD PTR [rsp+rax*1],ecx
   1400424d3:	add    BYTE PTR [rdx+rdx*8],cl
   1400424d6:	or     BYTE PTR [rax+0x7],dh
   1400424d9:	push   rax
   1400424da:	(bad)  
   1400424db:	xor    dh,ah
   1400424dd:	loop   0x1400424e1
   1400424df:	add    BYTE PTR [rax+0x10003d4],ah
   1400424e5:	clts   
   1400424e7:	add    BYTE PTR [rdi],cl
   1400424e9:	fs or  eax,0xc340f00
   1400424ef:	add    BYTE PTR [rdi],cl
   1400424f1:	xchg   edx,eax
   1400424f2:	or     esi,DWORD PTR [rax+0x19]
   1400424f5:	adc    eax,0x92060002
   1400424fa:	add    dh,BYTE PTR [rax]
   1400424fc:	sub    bh,ah
   1400424fe:	add    al,BYTE PTR [rax]
   140042500:	rex.W add BYTE PTR [rax],al
   140042503:	add    BYTE PTR [rcx],al
   140042505:	(bad)  
   140042506:	add    al,BYTE PTR [rax]
   140042508:	(bad)  
   140042509:	xor    al,BYTE PTR [rdx]
   14004250b:	jo     0x14004250e
   14004250d:	and    BYTE PTR [rax+rax*1],cl
   140042510:	and    BYTE PTR [rdi+rdx*1+0x0],ah
   140042514:	and    BYTE PTR [rsi+rdx*1+0x0],dl
   140042518:	and    BYTE PTR [rsp+rdx*1],dh
   14004251b:	add    BYTE PTR [rax],ah
   14004251d:	rcr    BYTE PTR [rax+rsi*8],cl
   140042520:	sbb    ah,al
   140042522:	sbb    al,dl
   140042524:	(bad)  
   140042525:	rcl    BYTE PTR [rax+rsi*2],0x1
   140042529:	(bad)  
   14004252a:	add    al,BYTE PTR [rax]
   14004252c:	(bad)  
   14004252d:	xchg   edx,eax
   14004252e:	add    dh,BYTE PTR [rax]
   140042530:	sbb    DWORD PTR [rbx],esi
   140042532:	or     DWORD PTR [rax],eax
   140042534:	and    DWORD PTR [rdi+rsi*1+0x0],esi
   140042538:	sbb    eax,0x19003664
   14004253d:	xor    al,0x35
   14004253f:	add    BYTE PTR [rcx+rax*1],cl
   140042542:	xor    al,BYTE PTR [rax]
   140042544:	add    eax,0xcc0000e0
   140042549:	out    0x2,eax
   14004254b:	add    BYTE PTR [rax-0x7cfffc2a],al
   140042551:	add    DWORD PTR [rax],eax
   140042553:	add    bh,bh
   140042555:	(bad)  
   140042556:	(bad)  
   140042557:	inc    DWORD PTR [rax]
   140042559:	add    BYTE PTR [rax],al
   14004255b:	add    BYTE PTR [rax],al
   14004255d:	add    BYTE PTR [rax],al
   14004255f:	add    BYTE PTR [rax-0x14],cl
   140042562:	add    al,BYTE PTR [rax]
   140042564:	(bad)  
   140042565:	(bad)  
   140042566:	(bad)  
   140042567:	inc    DWORD PTR [rax]
   140042569:	add    BYTE PTR [rax],al
   14004256b:	add    BYTE PTR [rax],al
   14004256d:	add    BYTE PTR [rax],al
   14004256f:	add    BYTE PTR [rcx],al
   140042571:	add    BYTE PTR [rax],al
   140042573:	add    BYTE PTR [rdx],al
   140042575:	add    BYTE PTR [rax],al
   140042577:	add    BYTE PTR [rcx],al
   140042579:	add    BYTE PTR [rax],al
   14004257b:	add    BYTE PTR [rax+0x8000425],al
   140042581:	add    BYTE PTR [rax],al
   140042583:	add    BYTE PTR [rax-0x18],dl
   140042586:	add    al,0x0
   140042588:	push   rax
   140042589:	add    BYTE PTR [rax],al
   14004258b:	add    BYTE PTR [rsp+rbp*8+0x2],dl
   14004258f:	add    BYTE PTR [rax+0x0],ch
	...
   14004259e:	add    BYTE PTR [rax],al
   1400425a0:	adc    BYTE PTR [rax+0x0],al
   1400425a3:	add    bh,bh
   1400425a5:	(bad)  
   1400425a6:	(bad)  
   1400425a7:	jmp    rdi
   1400425a9:	add    BYTE PTR [rax],al
   1400425ac:	add    BYTE PTR [rax],al
   1400425ae:	add    BYTE PTR [rax],al
   1400425b0:	movabs ds:0xad00000001000042,al
   1400425b9:	rex.X add BYTE PTR [rax],al
   1400425bc:	add    BYTE PTR [rax],al
   1400425be:	add    BYTE PTR [rax],al
   1400425c0:	cld    
   1400425c1:	rex.X add BYTE PTR [rax],al
   1400425c4:	(bad)  
   1400425c5:	(bad)  
   1400425c6:	(bad)  
   1400425c7:	call   QWORD PTR [rsp+rbp*8+0x2]
   1400425cb:	add    BYTE PTR [rax],al
   1400425cd:	add    BYTE PTR [rax],al
   1400425cf:	add    BYTE PTR [rbx-0x14],ah
   1400425d2:	add    al,BYTE PTR [rax]
   1400425d4:	add    al,BYTE PTR [rax]
   1400425d6:	add    BYTE PTR [rax],al
   1400425d8:	mov    ch,0xec
   1400425da:	add    al,BYTE PTR [rax]
   1400425dc:	add    BYTE PTR [rax],al
   1400425de:	add    BYTE PTR [rax],al
   1400425e0:	sbb    DWORD PTR [rsp+rax*1],ecx
   1400425e3:	add    BYTE PTR [rdx+rsi*2],cl
   1400425e6:	or     BYTE PTR [rax+0x7],dh
   1400425e9:	push   rax
   1400425ea:	(bad)  
   1400425eb:	xor    dh,ah
   1400425ed:	loop   0x1400425f1
   1400425ef:	add    BYTE PTR [rax+0x190003d6],al
   1400425f5:	sbb    DWORD PTR [rsi],eax
   1400425f7:	add    BYTE PTR [rcx],bl
   1400425f9:	or     DWORD PTR fs:[rax],eax
   1400425fc:	adc    al,0x34
   1400425fe:	or     BYTE PTR [rax],al
   140042600:	(bad)  
   140042601:	push   rdx
   140042602:	add    dh,BYTE PTR [rax-0x1a]
   140042605:	loop   0x140042609
   140042607:	add    BYTE PTR [rax-0x2a],bl
   14004260a:	add    eax,DWORD PTR [rax]
	...
   140042614:	add    DWORD PTR [rax],eax
   140042616:	add    BYTE PTR [rax],al
   140042618:	add    DWORD PTR [rax],eax
   14004261a:	add    BYTE PTR [rax],al
   14004261c:	and    BYTE PTR [rsi],ah
   14004261e:	add    al,0x0
   140042620:	or     BYTE PTR [rax],al
   140042622:	add    BYTE PTR [rax],al
   140042624:	push   rax
   140042625:	call   0x1402c262e
   14004262a:	add    BYTE PTR [rax],al
   14004262c:	retf   
   14004262d:	in     al,dx
   14004262e:	add    al,BYTE PTR [rax]
   140042630:	rex.W add BYTE PTR [rax],al
   140042633:	add    BYTE PTR [rax],al
   140042635:	add    BYTE PTR [rax],al
   140042637:	add    BYTE PTR [rax+0x43],al
   14004263a:	add    BYTE PTR [rax],al
   14004263c:	(bad)  
   14004263d:	(bad)  
   14004263e:	(bad)  
   14004263f:	call   FWORD PTR [rcx+0x43]
   140042642:	add    BYTE PTR [rax],al
   140042644:	add    BYTE PTR [rax],al
   140042646:	add    BYTE PTR [rax],al
   140042648:	add    eax,0xff000044
   14004264d:	(bad)  
   14004264e:	(bad)  
   14004264f:	dec    ebx
   140042651:	in     al,dx
   140042652:	add    al,BYTE PTR [rax]
   140042654:	add    BYTE PTR [rax],al
   140042656:	add    BYTE PTR [rax],al
   140042658:	(bad)  
   14004265a:	add    al,BYTE PTR [rax]
   14004265c:	add    DWORD PTR [rax],eax
   14004265e:	add    BYTE PTR [rax],al
   140042660:	sub    al,0xed
   140042662:	add    al,BYTE PTR [rax]
   140042664:	add    BYTE PTR [rax],al
   140042666:	add    BYTE PTR [rax],al
   140042668:	sbb    DWORD PTR [rsp+rax*1],ecx
   14004266b:	add    BYTE PTR [rdx+rsi*1],cl
   14004266e:	or     BYTE PTR [rax+0x7],dh
   140042671:	push   rax
   140042672:	(bad)  
   140042673:	xor    dh,ah
   140042675:	loop   0x140042679
   140042677:	add    BYTE PTR [rax-0x2a],bl
   14004267a:	add    eax,DWORD PTR [rax]
   14004267c:	adc    DWORD PTR [rsi+rax*1],ebx
   14004267f:	add    BYTE PTR [rsp+riz*2],bl
   140042682:	or     al,BYTE PTR [rax]
   140042684:	sbb    BYTE PTR [rcx+rcx*1],dh
   140042687:	add    BYTE PTR [rdx+rdx*2],cl
   14004268a:	or     BYTE PTR [rax-0x1a],dh
   14004268d:	loop   0x140042691
   14004268f:	add    BYTE PTR [rax],dh
   140042691:	(bad)  
   140042692:	add    eax,DWORD PTR [rax]
   140042694:	(bad)  
   140042695:	(bad)  
   140042696:	(bad)  
   140042697:	inc    DWORD PTR [rdx-0x13]
   14004269a:	add    al,BYTE PTR [rax]
   14004269c:	add    BYTE PTR [rax],al
   14004269e:	add    BYTE PTR [rax],al
   1400426a0:	push   rdx
   1400426a1:	in     eax,dx
   1400426a2:	add    al,BYTE PTR [rax]
   1400426a4:	add    DWORD PTR [rax],eax
   1400426a6:	add    BYTE PTR [rax],al
   1400426a8:	(bad)  
   1400426a9:	in     eax,dx
   1400426aa:	add    al,BYTE PTR [rax]
   1400426ac:	add    BYTE PTR [rax],al
   1400426ae:	add    BYTE PTR [rax],al
   1400426b0:	(bad)  
   1400426b1:	add    BYTE PTR [rax],r8b
   1400426b4:	(bad)  
   1400426b5:	(bad)  
   1400426b6:	(bad)  
   1400426b7:	call   QWORD PTR [rdi+0x44]
   1400426bd:	add    BYTE PTR [rax],al
   1400426bf:	add    BYTE PTR [rbp+0x1000044],ah
   1400426c5:	add    BYTE PTR [rax],al
   1400426c7:	add    BYTE PTR [rcx+0x2000044],ch
   1400426cd:	add    BYTE PTR [rax],al
   1400426cf:	add    BYTE PTR [rbx],ah
   1400426d1:	add    BYTE PTR [r8],r8b
   1400426d4:	(bad)  
   1400426d5:	(bad)  
   1400426d6:	(bad)  
   1400426d7:	inc    DWORD PTR [rcx]
   1400426d9:	sbb    eax,0x741d000c
   1400426de:	or     eax,DWORD PTR [rax]
   1400426e0:	sbb    eax,0x1d000a64
   1400426e5:	push   rsp
   1400426e6:	or     DWORD PTR [rax],eax
   1400426e8:	sbb    eax,0x1d000834
   1400426ed:	xor    bl,BYTE PTR [rcx]
   1400426ef:	lock (bad) 
   1400426f1:	loopne 0x140042708
   1400426f3:	rol    BYTE PTR [rcx],0xf
   1400426f6:	(bad)  
   1400426f7:	add    BYTE PTR [rdi],cl
   1400426f9:	or     DWORD PTR fs:[rax],eax
   1400426fc:	sysenter 
   1400426fe:	or     BYTE PTR [rax],al
   140042700:	rsqrtps xmm1,XMMWORD PTR [rbx]
   140042703:	jo     0x14004271e
   140042705:	sub    al,0x9
   140042707:	add    BYTE PTR [rbx],bl
   140042709:	xor    al,0x60
   14004270b:	add    DWORD PTR [rbx],ebx
   14004270d:	add    DWORD PTR [rdx+0x1],ebx
   140042710:	or     al,0xf0
   140042712:	or     ah,al
   140042714:	or     BYTE PTR [rax+0x7],dh
   140042717:	(bad)  
   140042718:	(bad)  
   140042719:	push   rax
   14004271a:	add    BYTE PTR [rax],al
   14004271c:	sub    bh,ah
   14004271e:	add    al,BYTE PTR [rax]
   140042720:	ror    BYTE PTR [rdx],0x0
   140042723:	add    BYTE PTR [rcx],cl
   140042725:	add    al,0x1
   140042727:	add    BYTE PTR [rdx+riz*2],al
   14004272a:	add    BYTE PTR [rax],al
   14004272c:	(bad)  
   14004272d:	out    0x2,al
   14004272f:	add    BYTE PTR [rcx],al
   140042731:	add    BYTE PTR [rax],al
   140042733:	add    al,ch
   140042735:	rex.WRX add BYTE PTR [rax],r8b
   140042738:	test   BYTE PTR [rsi+0x0],0x0
   14004273c:	js     0x14004272b
   14004273e:	add    al,BYTE PTR [rax]
   140042740:	test   BYTE PTR [rsi+0x0],0x0
   140042744:	add    DWORD PTR [rsi],eax
   140042746:	add    al,BYTE PTR [rax]
   140042748:	(bad)  
   140042749:	xor    al,BYTE PTR [rdx]
   14004274b:	push   rax
   14004274c:	sbb    DWORD PTR [rsi],esp
   14004274e:	or     BYTE PTR [rax],al
   140042750:	(bad)  
   140042751:	mov    dl,0x1a
   140042753:	lock sbb al,ah
   140042756:	(bad)  
   140042757:	rcl    BYTE PTR [rax+rax*8],1
   14004275a:	adc    dh,BYTE PTR [rax+0x11]
   14004275d:	(bad)  
   14004275e:	adc    BYTE PTR [rax],dh
   140042760:	out    0xe2,al
   140042762:	add    al,BYTE PTR [rax]
   140042764:	or     dh,dl
   140042766:	add    eax,DWORD PTR [rax]
   140042768:	(bad)  
   140042769:	(bad)  
   14004276a:	(bad)  
   14004276b:	inc    DWORD PTR [rax]
   14004276d:	add    BYTE PTR [rax],al
   14004276f:	add    bh,bh
   140042771:	(bad)  
   140042772:	(bad)  
   140042773:	inc    DWORD PTR [rax]
   140042775:	add    BYTE PTR [rax],al
   140042777:	add    bh,bh
   140042779:	(bad)  
   14004277a:	(bad)  
   14004277b:	(bad)  
   14004277c:	mov    ecx,0x20002ed
   140042781:	add    BYTE PTR [rax],al
   140042783:	add    BYTE PTR [rax],al
   140042785:	add    BYTE PTR [rax],al
   140042787:	add    BYTE PTR [rdx],al
   140042789:	add    BYTE PTR [rax],al
   14004278b:	add    BYTE PTR [rax],al
   14004278d:	add    BYTE PTR [rax],al
   14004278f:	add    BYTE PTR [rdx],al
   140042791:	add    BYTE PTR [rax],al
   140042793:	add    al,ah
   140042795:	in     eax,dx
   140042796:	add    al,BYTE PTR [rax]
	...
   1400427a0:	add    DWORD PTR [rax],eax
   1400427a2:	add    BYTE PTR [rax],al
   1400427a4:	add    DWORD PTR [rax],eax
   1400427a6:	add    BYTE PTR [rax],al
   1400427a8:	shl    BYTE PTR [rdi],0x4
   1400427ab:	add    BYTE PTR [rbx],al
   1400427ad:	add    BYTE PTR [rax],al
   1400427af:	add    BYTE PTR [rbx],al
   1400427b1:	add    BYTE PTR [rax],al
   1400427b3:	add    BYTE PTR [rax+rax*1],al
   1400427b6:	add    BYTE PTR [rax],al
   1400427b8:	add    DWORD PTR [rax],eax
   1400427ba:	add    BYTE PTR [rax],al
   1400427bc:	(bad)  
   1400427bd:	(bad)  
   1400427be:	add    al,0x0
   1400427c0:	add    BYTE PTR [rax],al
	...
   1400427cb:	add    BYTE PTR [rsi+0x380002ed],bl
   1400427d1:	add    BYTE PTR [rax],al
   1400427d3:	add    BYTE PTR [rax+0x0],al
	...
   1400427de:	add    BYTE PTR [rax],al
   1400427e0:	(bad)
   1400427e3:	add    BYTE PTR [rax],bh
	...
   1400427ed:	add    BYTE PTR [rax],al
   1400427ef:	add    BYTE PTR [rax],dh
   1400427f1:	rex.WRXB add BYTE PTR [r8],r8b
   1400427f4:	(bad)  
   1400427f5:	(bad)  
   1400427f6:	(bad)  
   1400427f7:	call   FWORD PTR [rax+0x4f]
   1400427fd:	add    BYTE PTR [rax],al
   1400427ff:	add    BYTE PTR [rsi-0xffffb1],dh
   140042805:	(bad)  
   140042806:	(bad)  
   140042807:	jmp    rbx
   140042809:	rex.WRXB add BYTE PTR [r8],r8b
   14004280c:	add    al,BYTE PTR [rax]
   14004280e:	add    BYTE PTR [rax],al
   140042810:	or     edx,DWORD PTR [rax+0x0]
   140042813:	add    BYTE PTR [rbx],al
   140042815:	add    BYTE PTR [rax],al
   140042817:	add    BYTE PTR [rdi],ah
   140042819:	push   rax
   14004281a:	add    BYTE PTR [rax],al
   14004281c:	add    al,BYTE PTR [rax]
   14004281e:	add    BYTE PTR [rax],al
   140042820:	pop    rdi
   140042821:	push   rax
   140042822:	add    BYTE PTR [rax],al
   140042824:	add    eax,0x96000000
   140042829:	push   rcx
   14004282a:	add    BYTE PTR [rax],al
   14004282c:	add    al,BYTE PTR [rax]
   14004282e:	add    BYTE PTR [rax],al
   140042830:	movabs al,ds:0x9effffffff000051
   140042839:	in     eax,dx
   14004283a:	add    al,BYTE PTR [rax]
   14004283c:	add    BYTE PTR [rax],al
   14004283e:	add    BYTE PTR [rax],al
   140042840:	sbb    DWORD PTR [rdx],ecx
   140042842:	add    al,BYTE PTR [rax]
   140042844:	or     dh,BYTE PTR [rdx]
   140042846:	(bad)  
   140042847:	push   rax
   140042848:	out    0xe2,al
   14004284a:	add    al,BYTE PTR [rax]
   14004284c:	or     dh,dl
   14004284e:	add    eax,DWORD PTR [rax]
   140042850:	adc    DWORD PTR [rax+rcx*1],ebx
   140042853:	add    BYTE PTR [rsp+riz*2],bl
   140042856:	or     eax,DWORD PTR [rax]
   140042858:	sbb    BYTE PTR [rdx+rcx*1+0x0],dl
   14004285c:	adc    al,0x34
   14004285e:	or     BYTE PTR [rax],al
   140042860:	or     BYTE PTR [rdx+0x4],dl
   140042863:	jo     0x14004284b
   140042865:	loop   0x140042869
   140042867:	add    al,ah
   140042869:	(bad)  
   14004286a:	add    eax,DWORD PTR [rax]
   14004286c:	(bad)  
   14004286d:	(bad)  
   14004286e:	(bad)  
   14004286f:	push   rdx
   140042871:	in     eax,dx
   140042872:	add    al,BYTE PTR [rax]
   140042874:	add    BYTE PTR [rax],al
   140042876:	add    BYTE PTR [rax],al
   140042878:	rcl    BYTE PTR [rcx+0x0],1
   14004287b:	add    bh,bh
   14004287d:	(bad)  
   14004287e:	(bad)  
   14004287f:	dec    DWORD PTR [rdi]
   140042881:	push   rdx
   140042882:	add    BYTE PTR [rax],al
   140042884:	add    BYTE PTR [rax],al
   140042886:	add    BYTE PTR [rax],al
   140042888:	xor    eax,0xff000052
   14004288d:	(bad)  
   14004288e:	(bad)  
   14004288f:	inc    DWORD PTR [rcx]
   140042891:	sbb    DWORD PTR [rdx],ecx
   140042893:	add    BYTE PTR [rcx],bl
   140042895:	je     0x1400428a0
   140042897:	add    BYTE PTR [rcx],bl
   140042899:	or     BYTE PTR fs:[rax],al
   14004289c:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   1400428a0:	sbb    DWORD PTR [rsi+rax*1],esi
   1400428a3:	add    BYTE PTR [rcx],bl
   1400428a5:	xor    dl,BYTE PTR [rip+0xb3319e0]        # 0x14b37428b
   1400428ab:	add    BYTE PTR [rip+0x19001d34],ah        # 0x1590445e5
   1400428b1:	add    DWORD PTR [rax+rax*1],edx
   1400428b4:	(bad)  
   1400428b5:	lock or al,0xe0
   1400428b8:	or     dl,al
   1400428ba:	or     al,al
   1400428bc:	(bad)  
   1400428bd:	jo     0x1400428c4
   1400428bf:	(bad)  
   1400428c0:	add    al,0x50
   1400428c2:	add    BYTE PTR [rax],al
   1400428c4:	int3   
   1400428c5:	out    0x2,eax
   1400428c7:	add    BYTE PTR [rax-0x6dfffc2b],bh
   1400428cd:	add    BYTE PTR [rax],al
   1400428cf:	add    bh,bh
   1400428d1:	(bad)  
   1400428d2:	(bad)  
   1400428d3:	inc    DWORD PTR [rsi+rbp*8]
   1400428d6:	add    al,BYTE PTR [rax]
   1400428d8:	add    BYTE PTR [rax],al
   1400428da:	add    BYTE PTR [rax],al
   1400428dc:	adc    dh,ch
   1400428de:	add    al,BYTE PTR [rax]
   1400428e0:	xor    BYTE PTR [rax+rax*1+0x0],dl
   1400428e4:	(bad)  
   1400428e5:	(bad)  
   1400428e6:	(bad)  
   1400428e7:	dec    ebp
   1400428e9:	push   rsp
   1400428ea:	add    BYTE PTR [rax],al
   1400428ec:	add    BYTE PTR [rax],al
   1400428ee:	add    BYTE PTR [rax],al
   1400428f0:	adc    eax,0x1000056
   1400428f5:	add    BYTE PTR [rax],al
   1400428f7:	add    BYTE PTR [rax],dh
   1400428f9:	push   rsi
   1400428fa:	add    BYTE PTR [rax],al
   1400428fc:	add    BYTE PTR [rax],al
   1400428fe:	add    BYTE PTR [rax],al
   140042900:	(bad)  
   140042901:	push   rsi
   140042902:	add    BYTE PTR [rax],al
   140042904:	(bad)  
   140042905:	(bad)  
   140042906:	(bad)  
   140042907:	inc    DWORD PTR [rcx]
   140042909:	sbb    DWORD PTR [rdx],ecx
   14004290b:	add    BYTE PTR [rcx],bl
   14004290d:	je     0x140042918
   14004290f:	add    BYTE PTR [rcx],bl
   140042911:	or     BYTE PTR fs:[rax],al
   140042914:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   140042918:	sbb    DWORD PTR [rsi+rax*1],esi
   14004291b:	add    BYTE PTR [rcx],bl
   14004291d:	xor    dl,BYTE PTR [rip+0x93419f0]        # 0x149384313
   140042923:	add    BYTE PTR [rcx],bl
   140042925:	add    DWORD PTR [rsp+rax*1],esi
   140042928:	or     al,0xf0
   14004292a:	or     ah,al
   14004292c:	or     al,dl
   14004292e:	(bad)  
   14004292f:	rol    BYTE PTR [rax+rsi*2],0x3
   140042933:	(bad)  
   140042934:	add    dh,BYTE PTR [rax]
   140042936:	add    BYTE PTR [rax],al
   140042938:	int3   
   140042939:	out    0x2,eax
   14004293b:	add    BYTE PTR [rax-0x6cfffc2b],dl
   140042941:	and    DWORD PTR [rax],eax
   140042943:	add    bh,bh
   140042945:	(bad)  
   140042946:	(bad)  
   140042947:	jmp    QWORD PTR [rdx]
   140042949:	out    dx,al
   14004294a:	add    al,BYTE PTR [rax]
	...
   14004295c:	(bad)  
   14004295d:	(bad)  
   14004295e:	(bad)  
   14004295f:	dec    DWORD PTR [rcx-0x12]
   140042962:	add    al,BYTE PTR [rax]
   140042964:	add    eax,DWORD PTR [rax]
   140042966:	add    BYTE PTR [rax],al
   140042968:	add    BYTE PTR [rax],al
   14004296a:	add    BYTE PTR [rax],al
   14004296c:	add    eax,DWORD PTR [rax]
   14004296e:	add    BYTE PTR [rax],al
   140042970:	add    BYTE PTR [rax],al
   140042972:	add    BYTE PTR [rax],al
   140042974:	add    DWORD PTR [rax],eax
   140042976:	add    BYTE PTR [rax],al
   140042978:	add    DWORD PTR [rax],eax
   14004297a:	add    BYTE PTR [rax],al
   14004297c:	add    al,BYTE PTR [rax]
   14004297e:	add    BYTE PTR [rax],al
   140042980:	add    DWORD PTR [rax],eax
   140042982:	add    BYTE PTR [rax],al
   140042984:	pushf  
   140042985:	sub    DWORD PTR [rax+rax*1],eax
   140042988:	add    al,0x0
   14004298a:	add    BYTE PTR [rax],al
   14004298c:	add    al,0x0
   14004298e:	add    BYTE PTR [rax],al
   140042990:	add    eax,0x1000000
   140042995:	add    BYTE PTR [rax],al
   140042997:	add    BYTE PTR [rax+0x40000429],dh
	...
   1400429a5:	add    BYTE PTR [rax],al
   1400429a7:	add    BYTE PTR [rsi],ch
   1400429a9:	out    dx,al
   1400429aa:	add    al,BYTE PTR [rax]
   1400429ac:	rex.W add BYTE PTR [rax],al
   1400429af:	add    BYTE PTR [rax+0x0],al
	...
   1400429ba:	add    BYTE PTR [rax],al
   1400429bc:	push   rbp
   1400429bd:	out    dx,al
   1400429be:	add    al,BYTE PTR [rax]
   1400429c0:	rex.W add BYTE PTR [rax],al
	...
   1400429cf:	add    BYTE PTR [rax],dh
   1400429d1:	pop    rax
   1400429d2:	add    BYTE PTR [rax],al
   1400429d4:	(bad)  
   1400429d5:	(bad)  
   1400429d6:	(bad)  
   1400429d7:	call   QWORD PTR [rax+0x59]
   1400429da:	add    BYTE PTR [rax],al
   1400429dc:	add    DWORD PTR [rax],eax
   1400429de:	add    BYTE PTR [rax],al
   1400429e0:	movabs ds:0x9f00000000000059,eax
   1400429e9:	pop    rdx
   1400429ea:	add    BYTE PTR [rax],al
   1400429ec:	(bad)  
   1400429ed:	(bad)  
   1400429ee:	(bad)  
   1400429ef:	(bad)  
   1400429f0:	cmp    eax,0x400005b
   1400429f5:	add    BYTE PTR [rax],al
   1400429f7:	add    BYTE PTR [rdi+0x300005b],cl
   1400429fd:	add    BYTE PTR [rax],al
   1400429ff:	add    BYTE PTR [rbp-0xffffa5],bh
   140042a05:	(bad)  
   140042a06:	(bad)  
   140042a07:	jmp    rax
   140042a09:	pop    rbx
   140042a0a:	add    BYTE PTR [rax],al
   140042a0c:	add    eax,DWORD PTR [rax]
   140042a0e:	add    BYTE PTR [rax],al
   140042a10:	xchg   esp,eax
   140042a11:	pop    rsp
   140042a12:	add    BYTE PTR [rax],al
   140042a14:	(bad)  
   140042a15:	(bad)  
   140042a16:	(bad)  
   140042a17:	jmp    FWORD PTR [rsi]
   140042a19:	out    dx,al
   140042a1a:	add    al,BYTE PTR [rax]
   140042a1c:	add    BYTE PTR [rax],al
   140042a1e:	add    BYTE PTR [rax],al
   140042a20:	sbb    DWORD PTR [rdx],ecx
   140042a22:	add    al,BYTE PTR [rax]
   140042a24:	or     dl,BYTE PTR [rdx+0x6]
   140042a27:	push   rax
   140042a28:	out    0xe2,al
   140042a2a:	add    al,BYTE PTR [rax]
   140042a2c:	nop
   140042a2d:	(bad)  
   140042a2e:	add    eax,DWORD PTR [rax]
   140042a30:	sbb    DWORD PTR [rip+0x34130005],esp        # 0x174172a3b
   140042a36:	or     al,BYTE PTR [rbx+rdx*1]
   140042a39:	add    DWORD PTR [rsi],eax
   140042a3b:	add    al,0x6
   140042a3d:	jo     0x140042a3f
   140042a3f:	add    BYTE PTR [rax],ch
   140042a41:	out    0x2,eax
   140042a43:	add    BYTE PTR [rax],ah
   140042a45:	and    BYTE PTR [rax],al
   140042a47:	add    BYTE PTR [rcx],bl
   140042a49:	sub    BYTE PTR [rdi],al
   140042a4b:	add    BYTE PTR [rdi],dl
   140042a4d:	xor    al,0x56
   140042a4f:	add    BYTE PTR [rdi],dl
   140042a51:	add    DWORD PTR [rax+0x0],edx
   140042a54:	or     BYTE PTR [rax+0x7],dh
   140042a57:	(bad)  
   140042a58:	(bad)  
   140042a59:	push   rax
   140042a5a:	add    BYTE PTR [rax],al
   140042a5c:	sub    bh,ah
   140042a5e:	add    al,BYTE PTR [rax]
   140042a60:	jo     0x140042a64
   140042a62:	add    BYTE PTR [rax],al
   140042a64:	sbb    DWORD PTR [rbx],esi
   140042a66:	(bad)  
   140042a67:	add    BYTE PTR [rdx],bl
   140042a69:	add    DWORD PTR [rdi+0x4],ebx
   140042a6c:	add    eax,0x3600470
   140042a71:	xor    BYTE PTR [rdx],al
   140042a73:	push   rax
   140042a74:	int3   
   140042a75:	out    0x2,eax
   140042a77:	add    BYTE PTR [rax-0x2b],ch
   140042a7a:	add    eax,DWORD PTR [rax]
   140042a7c:	loop   0x140042aa0
   140042a7e:	add    BYTE PTR [rax],al
   140042a80:	(bad)  
   140042a81:	(bad)  
   140042a82:	(bad)  
   140042a83:	push   QWORD PTR [rsi-0x12]
   140042a86:	add    al,BYTE PTR [rax]
   140042a88:	add    BYTE PTR [rax],al
   140042a8a:	add    BYTE PTR [rax],al
   140042a8c:	(bad)  
   140042a8d:	out    dx,al
   140042a8e:	add    al,BYTE PTR [rax]
   140042a90:	or     BYTE PTR [rdx+0x0],ah
   140042a93:	add    bh,bh
   140042a95:	(bad)  
   140042a96:	(bad)  
   140042a97:	call   FWORD PTR [rdi+0x62]
   140042a9a:	add    BYTE PTR [rax],al
   140042a9c:	add    BYTE PTR [rax],al
   140042a9e:	add    BYTE PTR [rax],al
   140042aa0:	and    ah,BYTE PTR [rax+rax*1+0x0]
   140042aa4:	add    DWORD PTR [rax],eax
   140042aa6:	add    BYTE PTR [rax],al
   140042aa8:	rex.RX
   140042aa9:	add    BYTE PTR fs:[rax],al
   140042aac:	add    BYTE PTR [rax],al
   140042aae:	add    BYTE PTR [rax],al
   140042ab0:	mov    ah,0x69
   140042ab2:	add    BYTE PTR [rax],al
   140042ab4:	(bad)  
   140042ab5:	(bad)  
   140042ab6:	(bad)  
   140042ab7:	call   FWORD PTR [rcx]
   140042ab9:	(bad)  
   140042aba:	or     eax,DWORD PTR [rax]
   140042abc:	sbb    eax,0x1d041534
   140042ac1:	add    DWORD PTR [rdx],ecx
   140042ac3:	add    al,0x10
   140042ac5:	lock (bad) 
   140042ac7:	loopne 0x140042ad5
   140042ac9:	ror    BYTE PTR [rdx],1
   140042acb:	ror    BYTE PTR [rax],0x70
   140042ace:	(bad)  
   140042acf:	(bad)  
   140042ad0:	(bad)  
   140042ad1:	push   rax
   140042ad2:	add    BYTE PTR [rax],al
   140042ad4:	sub    bh,ah
   140042ad6:	add    al,BYTE PTR [rax]
   140042ad8:	and    BYTE PTR [rax],al
   140042adb:	add    BYTE PTR [rcx],bl
   140042add:	sub    eax,0x341b0007
   140042ae2:	xchg   esi,eax
   140042ae3:	add    BYTE PTR [rsi],cl
   140042ae5:	add    DWORD PTR [rdx+0x5e00700],edx
   140042aeb:	jo     0x140042af1
   140042aed:	(bad)  
   140042aee:	add    BYTE PTR [rax],al
   140042af0:	int3   
   140042af1:	out    0x2,eax
   140042af3:	add    BYTE PTR [rax-0x2b],al
   140042af6:	add    eax,DWORD PTR [rax]
   140042af8:	add    DWORD PTR [rax+rax*1],0x0
   140042afc:	(bad)  
   140042afd:	(bad)  
   140042afe:	(bad)  
   140042aff:	call   QWORD PTR [rsi+rbp*8+0x2]
   140042b06:	add    BYTE PTR [rax],al
   140042b08:	movabs al,ds:0x10002ee
   140042b11:	add    BYTE PTR [rax],al
   140042b13:	add    BYTE PTR [rcx],al
   140042b15:	add    BYTE PTR [rax],al
   140042b17:	add    BYTE PTR [rax],al
   140042b19:	add    BYTE PTR [rax],al
   140042b1b:	add    BYTE PTR [rdx],al
   140042b1d:	add    BYTE PTR [rax],al
   140042b1f:	add    BYTE PTR [rdx],al
   140042b21:	add    BYTE PTR [rax],al
   140042b23:	add    BYTE PTR [rbx],al
   140042b25:	add    BYTE PTR [rax],al
   140042b27:	add    BYTE PTR [rcx],al
   140042b29:	add    BYTE PTR [rax],al
   140042b2b:	add    BYTE PTR [rax],dh
   140042b2d:	sub    eax,DWORD PTR [rax+rax*1]
   140042b30:	add    BYTE PTR [rax],al
	...
   140042b3b:	add    BYTE PTR [rsi+rbp*8+0x480002],ch
	...
   140042b4e:	add    BYTE PTR [rax],al
   140042b50:	test   al,0x6b
   140042b52:	add    BYTE PTR [rax],al
   140042b54:	(bad)  
   140042b55:	(bad)  
   140042b56:	(bad)  
   140042b57:	jmp    rbp
   140042b59:	imul   eax,DWORD PTR [rax],0x0
   140042b5c:	add    BYTE PTR [rax],al
   140042b5e:	add    BYTE PTR [rax],al
   140042b60:	hlt    
   140042b61:	imul   eax,DWORD PTR [rax],0x0
   140042b64:	add    DWORD PTR [rax],eax
   140042b66:	add    BYTE PTR [rax],al
   140042b68:	jno    0x140042bd6
   140042b6a:	add    BYTE PTR [rax],al
   140042b6c:	add    BYTE PTR [rax],al
   140042b6e:	add    BYTE PTR [rax],al
   140042b70:	mov    BYTE PTR [rax+rax*1+0x0],ch
   140042b74:	(bad)  
   140042b75:	(bad)  
   140042b76:	(bad)  
   140042b77:	call   QWORD PTR [rdx+0x200006c]
   140042b7d:	add    BYTE PTR [rax],al
   140042b7f:	add    cl,bl
   140042b81:	ins    BYTE PTR es:[rdi],dx
   140042b82:	add    BYTE PTR [rax],al
   140042b84:	add    DWORD PTR [rax],eax
   140042b86:	add    BYTE PTR [rax],al
   140042b88:	rex.WR ins DWORD PTR es:[rdi],dx
   140042b8a:	add    BYTE PTR [rax],al
   140042b8c:	add    BYTE PTR [rax],al
   140042b8e:	add    BYTE PTR [rax],al
   140042b90:	movsxd ebp,DWORD PTR [rbp+0x0]
   140042b93:	add    bh,bh
   140042b95:	(bad)  
   140042b96:	(bad)  
   140042b97:	jmp    FWORD PTR [rsi+rbp*8+0x2]
   140042b9e:	add    BYTE PTR [rax],al
   140042ba0:	sbb    DWORD PTR [rdx],ecx
   140042ba2:	add    al,BYTE PTR [rax]
   140042ba4:	or     dl,BYTE PTR [rdx+0x6]
   140042ba7:	push   rax
   140042ba8:	out    0xe2,al
   140042baa:	add    al,BYTE PTR [rax]
   140042bac:	rex (bad) 
   140042bae:	add    eax,DWORD PTR [rax]
   140042bb0:	add    DWORD PTR [rsi],ecx
   140042bb2:	add    al,BYTE PTR [rax]
   140042bb4:	(bad)  
   140042bb5:	add    DWORD PTR [rdi],edx
   140042bb7:	add    BYTE PTR [rcx],al
   140042bb9:	(bad)  
   140042bba:	add    al,BYTE PTR [rax]
   140042bbc:	(bad)  
   140042bbd:	add    DWORD PTR [rip+0x2070100],edx        # 0x1420b2cc3
   140042bc3:	add    BYTE PTR [rdi],al
   140042bc5:	add    DWORD PTR [rcx],edx
   140042bc7:	add    BYTE PTR [rcx],al
   140042bc9:	or     al,BYTE PTR [rax+rax*1]
   140042bcc:	or     dh,BYTE PTR [rsp+rcx*1]
   140042bcf:	add    BYTE PTR [rdx],cl
   140042bd1:	xchg   edx,eax
   140042bd2:	(bad)  
   140042bd3:	(bad)  
   140042bd4:	add    DWORD PTR [rcx+rax*1],eax
   140042bd7:	add    BYTE PTR [rdx+rax*8],al
   140042bda:	add    BYTE PTR [rax],al
   140042bdc:	add    DWORD PTR [rbx],edx
   140042bde:	add    eax,DWORD PTR [rax]
   140042be0:	adc    eax,DWORD PTR [rcx]
   140042be2:	and    BYTE PTR [rax],al
   140042be4:	or     BYTE PTR [rax+0x0],dl
   140042be7:	add    BYTE PTR [rcx],al
   140042be9:	clts   
   140042beb:	add    BYTE PTR [rdi],cl
   140042bed:	push   rsp
   140042bee:	or     eax,DWORD PTR [rax]
   140042bf0:	sysenter 
   140042bf2:	or     al,BYTE PTR [rax]
   140042bf4:	rsqrtps xmm1,XMMWORD PTR [rbx]
   140042bf7:	jo     0x140042c12
   140042bf9:	(bad)  
   140042bfa:	(bad)  
   140042bfb:	add    BYTE PTR [rdi],cl
   140042bfd:	fs (bad) 
   140042bff:	add    BYTE PTR [rdi],cl
   140042c01:	xor    al,0xd
   140042c03:	add    BYTE PTR [rdi],cl
   140042c05:	xchg   edx,eax
   140042c06:	or     esi,DWORD PTR [rax+0x28]
   140042c09:	out    0x2,eax
   140042c0b:	add    BYTE PTR [rax+0x0],cl
   140042c0e:	add    BYTE PTR [rax],al
   140042c10:	add    DWORD PTR [rdi],ecx
   140042c12:	(bad)  
   140042c13:	add    BYTE PTR [rdi],cl
   140042c15:	or     eax,DWORD PTR fs:[rax]
   140042c18:	sysenter 
   140042c1a:	or     al,BYTE PTR [rax]
   140042c1c:	(bad)  
   140042c1e:	or     esi,DWORD PTR [rax+0x19]
   140042c21:	(bad)  
   140042c22:	(bad)  
   140042c23:	add    BYTE PTR [rip+0xe003034],bl        # 0x14e045c5d
   140042c29:	add    DWORD PTR [rdx],ebp
   140042c2b:	add    BYTE PTR [rdi],al
   140042c2d:	loopne 0x140042c34
   140042c2f:	jo     0x140042c35
   140042c31:	(bad)  
   140042c32:	add    BYTE PTR [rax],al
   140042c34:	int3   
   140042c35:	out    0x2,eax
   140042c37:	add    BYTE PTR [rax],dh
   140042c39:	fild   DWORD PTR [rbx]
   140042c3b:	add    BYTE PTR [rbx+0x1],al
   140042c3e:	add    BYTE PTR [rax],al
   140042c40:	(bad)  
   140042c41:	(bad)  
   140042c42:	(bad)  
   140042c43:	dec    ebp
   140042c45:	out    dx,al
   140042c46:	add    al,BYTE PTR [rax]
   140042c48:	add    BYTE PTR [rax],al
   140042c4a:	add    BYTE PTR [rax],al
   140042c4c:	fldz   
   140042c4e:	add    al,BYTE PTR [rax]
   140042c50:	add    DWORD PTR [rax],eax
   140042c52:	add    BYTE PTR [rax],al
   140042c54:	in     eax,0xee
   140042c56:	add    al,BYTE PTR [rax]
   140042c58:	add    al,BYTE PTR [rax]
   140042c5a:	add    BYTE PTR [rax],al
   140042c5c:	icebp  
   140042c5d:	out    dx,al
   140042c5e:	add    al,BYTE PTR [rax]
   140042c60:	add    eax,DWORD PTR [rax]
   140042c62:	add    BYTE PTR [rax],al
   140042c64:	add    BYTE PTR [rax],al
   140042c66:	add    BYTE PTR [rax],al
   140042c68:	add    eax,DWORD PTR [rax]
   140042c6a:	add    BYTE PTR [rax],al
   140042c6c:	add    BYTE PTR [rax],al
   140042c6e:	add    BYTE PTR [rax],al
   140042c70:	add    al,0x0
   140042c72:	add    BYTE PTR [rax],al
   140042c74:	add    al,0x0
   140042c76:	add    BYTE PTR [rax],al
   140042c78:	add    eax,0x1000000
   140042c7d:	add    BYTE PTR [rax],al
   140042c7f:	add    BYTE PTR [rsp+rbp*1+0x90004],al
   140042c86:	add    BYTE PTR [rax],al
   140042c88:	push   rax
   140042c89:	call   0x140742c92
   140042c8e:	add    BYTE PTR [rax],al
   140042c90:	std    
   140042c91:	out    dx,al
   140042c92:	add    al,BYTE PTR [rax]
   140042c94:	mov    BYTE PTR [rax],al
	...
   140042c9e:	add    BYTE PTR [rax],al
   140042ca0:	int3   
   140042ca1:	jl     0x140042ca3
   140042ca3:	add    bh,bh
   140042ca5:	(bad)  
   140042ca6:	(bad)  
   140042ca7:	(bad)  
   140042ca8:	cmp    DWORD PTR [rbp+0x0],edi
   140042cab:	add    BYTE PTR [rax],al
   140042cad:	add    BYTE PTR [rax],al
   140042caf:	add    BYTE PTR [rsi+0x7d],ch
   140042cb2:	add    BYTE PTR [rax],al
   140042cb4:	add    DWORD PTR [rax],eax
   140042cb6:	add    BYTE PTR [rax],al
   140042cb8:	jg     0x140042d37
   140042cba:	add    BYTE PTR [rax],al
   140042cbc:	add    al,BYTE PTR [rax]
   140042cbe:	add    BYTE PTR [rax],al
   140042cc0:	nop
   140042cc1:	jge    0x140042cc3
   140042cc3:	add    BYTE PTR [rbx],al
   140042cc5:	add    BYTE PTR [rax],al
   140042cc7:	add    BYTE PTR [rbx+0x400007d],ch
   140042ccd:	add    BYTE PTR [rax],al
   140042ccf:	add    BYTE PTR [rdi+0x7e],al
   140042cd2:	add    BYTE PTR [rax],al
   140042cd4:	add    eax,DWORD PTR [rax]
   140042cd6:	add    BYTE PTR [rax],al
   140042cd8:	push   rbp
   140042cd9:	jle    0x140042cdb
   140042cdb:	add    BYTE PTR [rdx],al
   140042cdd:	add    BYTE PTR [rax],al
   140042cdf:	add    BYTE PTR [rbx+0x7e],ah
   140042ce2:	add    BYTE PTR [rax],al
   140042ce4:	add    DWORD PTR [rax],eax
   140042ce6:	add    BYTE PTR [rax],al
   140042ce8:	ja     0x140042d68
   140042cea:	add    BYTE PTR [rax],al
   140042cec:	add    BYTE PTR [rax],al
   140042cee:	add    BYTE PTR [rax],al
   140042cf0:	xchg   esi,eax
   140042cf1:	jle    0x140042cf3
   140042cf3:	add    bh,bh
   140042cf5:	(bad)  
   140042cf6:	(bad)  
   140042cf7:	(bad)  
   140042cf8:	std    
   140042cf9:	out    dx,al
   140042cfa:	add    al,BYTE PTR [rax]
   140042cfc:	add    BYTE PTR [rax],al
   140042cfe:	add    BYTE PTR [rax],al
   140042d00:	or     al,0xef
   140042d02:	add    al,BYTE PTR [rax]
   140042d04:	add    eax,0x89000000
   140042d09:	out    dx,eax
   140042d0a:	add    al,BYTE PTR [rax]
   140042d0c:	add    BYTE PTR [rax],al
   140042d0e:	add    BYTE PTR [rax],al
   140042d10:	sbb    DWORD PTR [rsp+rax*1],ecx
   140042d13:	add    BYTE PTR [rdx+rsi*4],cl
   140042d16:	or     BYTE PTR [rax+0x7],dh
   140042d19:	push   rax
   140042d1a:	(bad)  
   140042d1b:	xor    dh,ah
   140042d1d:	loop   0x140042d21
   140042d1f:	add    BYTE PTR [rax],dh
   140042d21:	fild   DWORD PTR [rbx]
   140042d23:	add    BYTE PTR [rcx],bl
   140042d25:	sbb    al,0x6
   140042d27:	add    BYTE PTR [rip+0xd001034],cl        # 0x14d043d61
   140042d2d:	xchg   edx,eax
   140042d2e:	or     eax,esp
   140042d30:	(bad)  
   140042d31:	jo     0x140042d39
   140042d33:	(bad)  
   140042d34:	sub    bh,ah
   140042d36:	add    al,BYTE PTR [rax]
   140042d38:	rex.W add BYTE PTR [rax],al
   140042d3b:	add    BYTE PTR [rcx],al
   140042d3d:	clts   
   140042d3f:	add    BYTE PTR [rdi],cl
   140042d41:	or     BYTE PTR fs:[rax],al
   140042d44:	sysenter 
   140042d46:	(bad)  
   140042d47:	add    BYTE PTR [rdi],cl
   140042d49:	xor    cl,BYTE PTR [rbx]
   140042d4b:	jo     0x140042d66
   140042d4d:	sbb    ecx,DWORD PTR [rax]
   140042d4f:	add    BYTE PTR [rbx],bl
   140042d51:	xor    al,0x13
   140042d53:	add    BYTE PTR [rdi],cl
   140042d55:	mov    dl,0xb
   140042d57:	lock or eax,esp
   140042d5a:	(bad)  
   140042d5b:	rol    BYTE PTR [rip+0xffffffffe6600470],0xe2        # 0x1266431d2
   140042d62:	add    al,BYTE PTR [rax]
   140042d64:	or     bl,bl
   140042d66:	add    eax,DWORD PTR [rax]
   140042d68:	(bad)  
   140042d69:	(bad)  
   140042d6a:	(bad)  
   140042d6b:	call   FWORD PTR [rdi+0x2ef]
   140042d71:	add    BYTE PTR [rax],al
   140042d73:	add    BYTE PTR [rax],al
   140042d75:	add    BYTE PTR [rax],al
   140042d77:	add    BYTE PTR [rcx],al
   140042d79:	add    BYTE PTR [rax],al
   140042d7b:	add    BYTE PTR [rbx+0x10002ef],ch
   140042d81:	add    BYTE PTR [rax],al
   140042d83:	add    BYTE PTR [rdi+0x2ef],dh
   140042d89:	add    BYTE PTR [rax],al
   140042d8b:	add    BYTE PTR [rax],al
   140042d8d:	add    BYTE PTR [rax],al
   140042d8f:	add    BYTE PTR [rcx],al
   140042d91:	add    BYTE PTR [rax],al
   140042d93:	add    BYTE PTR [rbx],al
   140042d95:	add    BYTE PTR [rax],al
   140042d97:	add    BYTE PTR [rax+rax*1],al
   140042d9a:	add    BYTE PTR [rax],al
   140042d9c:	add    DWORD PTR [rax],eax
   140042d9e:	add    BYTE PTR [rax],al
   140042da0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140042da1:	sub    eax,0x80004
   140042da6:	add    BYTE PTR [rax],al
   140042da8:	push   rax
   140042da9:	call   0x140542db2
   140042dae:	add    BYTE PTR [rax],al
   140042db0:	ret    
   140042db1:	out    dx,eax
   140042db2:	add    al,BYTE PTR [rax]
   140042db4:	rex.W add BYTE PTR [rax],al
	...
   140042dbf:	add    BYTE PTR [rax-0xffff7e],dh
   140042dc5:	(bad)  
   140042dc6:	(bad)  
   140042dc7:	(bad)  
   140042dc8:	fiadd  DWORD PTR [rdx+0x0]
   140042dce:	add    BYTE PTR [rax],al
   140042dd0:	cli    
   140042dd1:	(bad)  
   140042dd2:	add    BYTE PTR [rax],al
   140042dd4:	(bad)  
   140042dd5:	(bad)  
   140042dd6:	(bad)  
   140042dd7:	jmp    QWORD PTR [rdx]
   140042dd9:	add    DWORD PTR [rax],0x0
   140042ddc:	add    BYTE PTR [rax],al
   140042dde:	add    BYTE PTR [rax],al
   140042de0:	cmp    BYTE PTR [rbx+0x10000],al
   140042de6:	add    BYTE PTR [rax],al
   140042de8:	add    DWORD PTR ds:[rax],0x0
   140042dec:	add    al,BYTE PTR [rax]
   140042dee:	add    BYTE PTR [rax],al
   140042df0:	jnp    0x140042d75
   140042df2:	add    BYTE PTR [rax],al
   140042df4:	add    DWORD PTR [rax],eax
   140042df6:	add    BYTE PTR [rax],al
   140042df8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140042df9:	add    DWORD PTR [rax],0x0
   140042dfc:	(bad)  
   140042dfd:	(bad)  
   140042dfe:	(bad)  
   140042dff:	dec    esp
   140042e01:	add    DWORD PTR [rax],0x0
   140042e04:	add    DWORD PTR [rax],eax
   140042e06:	add    BYTE PTR [rax],al
   140042e08:	in     al,dx
   140042e09:	add    DWORD PTR [rax],0x0
   140042e0c:	add    eax,DWORD PTR [rax]
   140042e0e:	add    BYTE PTR [rax],al
   140042e10:	or     eax,0xff000084
   140042e15:	(bad)  
   140042e16:	(bad)  
   140042e17:	push   QWORD PTR [rdi]
   140042e19:	test   BYTE PTR [rax],al
   140042e1b:	add    BYTE PTR [rbx],al
   140042e1d:	add    BYTE PTR [rax],al
   140042e1f:	add    BYTE PTR [rdx],bh
   140042e21:	test   BYTE PTR [rax],al
   140042e23:	add    bh,bh
   140042e25:	(bad)  
   140042e26:	(bad)  
   140042e27:	call   QWORD PTR [rax+0x84]
   140042e2d:	add    BYTE PTR [rax],al
   140042e2f:	add    dh,al
   140042e31:	test   BYTE PTR [rax],al
   140042e33:	add    bh,bh
   140042e35:	(bad)  
   140042e36:	(bad)  
   140042e37:	inc    ebx
   140042e39:	out    dx,eax
   140042e3a:	add    al,BYTE PTR [rax]
   140042e3c:	add    BYTE PTR [rax],al
   140042e3e:	add    BYTE PTR [rax],al
   140042e40:	shr    bh,1
   140042e42:	add    al,BYTE PTR [rax]
   140042e44:	add    al,0x0
   140042e46:	add    BYTE PTR [rax],al
   140042e48:	adc    eax,esi
   140042e4a:	add    al,BYTE PTR [rax]
   140042e4c:	add    BYTE PTR [rax],al
   140042e4e:	add    BYTE PTR [rax],al
   140042e50:	sbb    DWORD PTR [rdx],ecx
   140042e52:	add    al,BYTE PTR [rax]
   140042e54:	or     dl,BYTE PTR [rdx+0x6]
   140042e57:	push   rax
   140042e58:	out    0xe2,al
   140042e5a:	add    al,BYTE PTR [rax]
   140042e5c:	or     bl,bl
   140042e5e:	add    eax,DWORD PTR [rax]
   140042e60:	sbb    DWORD PTR [rdi],ebx
   140042e62:	(bad)  
   140042e63:	add    BYTE PTR [rcx],dl
   140042e65:	repnz (bad) 
   140042e67:	loopne 0x140042e6e
   140042e69:	jo     0x140042e6f
   140042e6b:	(bad)  
   140042e6c:	add    esi,DWORD PTR [rax]
   140042e6e:	add    dl,BYTE PTR [rax+0x28]
   140042e71:	out    0x2,eax
   140042e73:	add    BYTE PTR [rax+0x0],dh
   140042e76:	add    BYTE PTR [rax],al
   140042e78:	sbb    DWORD PTR [rdi],ebp
   140042e7a:	or     BYTE PTR [rax],al
   140042e7c:	adc    DWORD PTR [rcx],eax
   140042e7e:	(bad)  
   140042e7f:	add    BYTE PTR [rdx],cl
   140042e81:	lock or al,ah
   140042e84:	(bad)  
   140042e85:	rol    BYTE PTR [rax+rsi*2],1
   140042e88:	add    esp,DWORD PTR [rax+0x2]
   140042e8b:	xor    ah,cl
   140042e8d:	out    0x2,eax
   140042e8f:	add    BYTE PTR [rax-0x25],bl
   140042e92:	add    eax,DWORD PTR [rax]
   140042e94:	movabs ds:0x25ffffffff000001,eax
   140042e9d:	lock add al,BYTE PTR [rax]
   140042ea0:	add    BYTE PTR [rax],al
   140042ea2:	add    BYTE PTR [rax],al
   140042ea4:	xor    eax,esi
   140042ea6:	add    al,BYTE PTR [rax]
   140042ea8:	add    DWORD PTR [rax],eax
   140042eaa:	add    BYTE PTR [rax],al
   140042eac:	cmp    eax,0x10002f0
   140042eb1:	add    BYTE PTR [rax],al
   140042eb3:	add    BYTE PTR [rcx-0x10],cl
   140042eb6:	add    al,BYTE PTR [rax]
   140042eb8:	add    eax,DWORD PTR [rax]
   140042eba:	add    BYTE PTR [rax],al
   140042ebc:	push   rbp
   140042ebd:	lock add al,BYTE PTR [rax]
   140042ec0:	add    al,0x0
   140042ec2:	add    BYTE PTR [rax],al
   140042ec4:	(bad)  
   140042ec5:	lock add al,BYTE PTR [rax]
   140042ec8:	add    eax,DWORD PTR [rax]
   140042eca:	add    BYTE PTR [rax],al
   140042ecc:	ins    DWORD PTR es:[rdi],dx
   140042ecd:	lock add al,BYTE PTR [rax]
   140042ed0:	(bad)  
   140042ed1:	add    BYTE PTR [rax],al
   140042ed3:	add    BYTE PTR [rcx-0x10],bh
   140042ed6:	add    al,BYTE PTR [rax]
   140042ed8:	(bad)  
   140042ed9:	add    BYTE PTR [rax],al
   140042edb:	add    BYTE PTR [rax],al
   140042edd:	add    BYTE PTR [rax],al
   140042edf:	add    BYTE PTR [rdi],al
   140042ee1:	add    BYTE PTR [rax],al
   140042ee3:	add    BYTE PTR [rax],al
   140042ee5:	add    BYTE PTR [rax],al
   140042ee7:	add    BYTE PTR [rdi],al
   140042ee9:	add    BYTE PTR [rax],al
   140042eeb:	add    BYTE PTR [rip+0xa0002f1],dl        # 0x14a0431e2
   140042ef1:	add    BYTE PTR [rax],al
   140042ef3:	add    BYTE PTR [rcx],ah
   140042ef5:	icebp  
   140042ef6:	add    al,BYTE PTR [rax]
   140042ef8:	or     eax,DWORD PTR [rax]
   140042efa:	add    BYTE PTR [rax],al
   140042efc:	sub    eax,0xc0002f1
   140042f01:	add    BYTE PTR [rax],al
   140042f03:	add    BYTE PTR [rcx],bh
   140042f05:	icebp  
   140042f06:	add    al,BYTE PTR [rax]
   140042f08:	or     eax,0x45000000
   140042f0d:	icebp  
   140042f0e:	add    al,BYTE PTR [rax]
   140042f10:	or     BYTE PTR [rax],al
   140042f12:	add    BYTE PTR [rax],al
   140042f14:	or     BYTE PTR [rax],al
   140042f16:	add    BYTE PTR [rax],al
   140042f18:	or     DWORD PTR [rax],eax
   140042f1a:	add    BYTE PTR [rax],al
   140042f1c:	add    DWORD PTR [rax],eax
   140042f1e:	add    BYTE PTR [rax],al
   140042f20:	and    al,0x2f
   140042f22:	add    al,0x0
   140042f24:	or     DWORD PTR [rax],eax
   140042f26:	add    BYTE PTR [rax],al
   140042f28:	push   rax
   140042f29:	call   0x141242f32
   140042f2e:	add    BYTE PTR [rax],al
   140042f30:	test   eax,esi
   140042f32:	add    al,BYTE PTR [rax]
   140042f34:	js     0x140042f36
	...
   140042f3e:	add    BYTE PTR [rax],al
   140042f40:	pushf  
   140042f41:	xchg   BYTE PTR [rax],al
   140042f43:	add    bh,bh
   140042f45:	(bad)  
   140042f46:	(bad)  
   140042f47:	inc    DWORD PTR [rsi+0x87]
   140042f4d:	add    BYTE PTR [rax],al
   140042f4f:	add    bl,bl
   140042f51:	xchg   DWORD PTR [rax],eax
   140042f53:	add    BYTE PTR [rcx],al
   140042f55:	add    BYTE PTR [rax],al
   140042f57:	add    BYTE PTR [rdi-0x78],ah
   140042f5a:	add    BYTE PTR [rax],al
   140042f5c:	add    al,BYTE PTR [rax]
   140042f5e:	add    BYTE PTR [rax],al
   140042f60:	mov    DWORD PTR [rax+0x10000],ecx
   140042f66:	add    BYTE PTR [rax],al
   140042f68:	mov    cs,WORD PTR [rax+0x30000]
   140042f6e:	add    BYTE PTR [rax],al
   140042f70:	mov    ebx,0x4000088
   140042f75:	add    BYTE PTR [rax],al
   140042f77:	add    BYTE PTR [rcx+rcx*4],bh
   140042f7a:	add    BYTE PTR [rax],al
   140042f7c:	add    eax,0x66000000
   140042f81:	mov    DWORD PTR [rax],eax
   140042f83:	add    BYTE PTR [rax+rax*1],al
   140042f86:	add    BYTE PTR [rax],al
   140042f88:	imul   ecx,DWORD PTR [rcx+0x30000],0x0
   140042f8f:	add    BYTE PTR [rcx+rcx*4+0x60000],cl
   140042f96:	add    BYTE PTR [rax],al
   140042f98:	pushf  
   140042f99:	mov    DWORD PTR [rax],eax
   140042f9b:	add    BYTE PTR [rdi],al
   140042f9d:	add    BYTE PTR [rax],al
   140042f9f:	add    BYTE PTR [rcx+0x8000089],ch
   140042fa5:	add    BYTE PTR [rax],al
   140042fa7:	add    cl,dl
   140042fa9:	mov    DWORD PTR [rax],eax
   140042fab:	add    BYTE PTR [rdi],al
   140042fad:	add    BYTE PTR [rax],al
   140042faf:	add    dl,bl
   140042fb1:	mov    DWORD PTR [rax],eax
   140042fb3:	add    BYTE PTR [rdx],cl
   140042fb5:	add    BYTE PTR [rax],al
   140042fb7:	add    BYTE PTR [rbx-0x76],ch
   140042fba:	add    BYTE PTR [rax],al
   140042fbc:	or     eax,DWORD PTR [rax]
   140042fbe:	add    BYTE PTR [rax],al
   140042fc0:	(bad)  
   140042fc1:	mov    al,BYTE PTR [rax]
   140042fc3:	add    BYTE PTR [rax+rax*1],cl
   140042fc6:	add    BYTE PTR [rax],al
   140042fc8:	movabs eax,ds:0xba0000000d00008c
   140042fd1:	mov    WORD PTR [rax],es
   140042fd3:	add    BYTE PTR [rsi],cl
   140042fd5:	add    BYTE PTR [rax],al
   140042fd7:	add    BYTE PTR [rsi],cl
   140042fd9:	lea    eax,[rax]
   140042fdb:	add    BYTE PTR [rip+0x18000000],cl        # 0x158042fe1
   140042fe1:	lea    eax,[rax]
   140042fe3:	add    BYTE PTR [rax+rax*1],cl
   140042fe6:	add    BYTE PTR [rax],al
   140042fe8:	popf   
   140042fe9:	lea    eax,[rax]
   140042feb:	add    BYTE PTR [rbx],cl
   140042fed:	add    BYTE PTR [rax],al
   140042fef:	add    BYTE PTR [rax+0xa00008d],bh
   140042ff5:	add    BYTE PTR [rax],al
   140042ff7:	add    al,bh
   140042ff9:	lea    eax,[rax]
   140042ffb:	add    BYTE PTR [rdi],al
   140042ffd:	add    BYTE PTR [rax],al
   140042fff:	add    dl,bh
   140043001:	lea    eax,[rax]
   140043003:	add    BYTE PTR [rsi],al
   140043005:	add    BYTE PTR [rax],al
   140043007:	add    BYTE PTR [rip+0x300008e],al        # 0x14304309b
   14004300d:	add    BYTE PTR [rax],al
   14004300f:	add    BYTE PTR [rbx],dl
   140043011:	mov    es,WORD PTR [rax]
   140043013:	add    BYTE PTR [rcx],al
   140043015:	add    BYTE PTR [rax],al
   140043017:	add    BYTE PTR [rsi],bl
   140043019:	mov    es,WORD PTR [rax]
   14004301b:	add    BYTE PTR [rax],al
   14004301d:	add    BYTE PTR [rax],al
   14004301f:	add    BYTE PTR [rip+0xffffffffff00008e],ch        # 0x13f0430b3
   140043025:	(bad)  
   140043026:	(bad)  
   140043027:	call   QWORD PTR [rsi-0x72]
   14004302a:	add    BYTE PTR [rax],al
   14004302c:	add    BYTE PTR [rax],al
   14004302e:	add    BYTE PTR [rax],al
   140043030:	xchg   esi,eax
   140043031:	mov    es,WORD PTR [rax]
   140043033:	add    bh,bh
   140043035:	(bad)  
   140043036:	(bad)  
   140043037:	inc    DWORD PTR [rbp+0x2f0]
   14004303d:	add    BYTE PTR [rax],al
   14004303f:	add    BYTE PTR [rdx+0x90002f0],dl
   140043045:	add    BYTE PTR [rax],al
   140043047:	add    BYTE PTR [rdi],al
   140043049:	icebp  
   14004304a:	add    al,BYTE PTR [rax]
   14004304c:	add    BYTE PTR [rax],al
   14004304e:	add    BYTE PTR [rax],al
   140043050:	sbb    DWORD PTR [rdx],ecx
   140043052:	add    al,BYTE PTR [rax]
   140043054:	or     dh,BYTE PTR [rdx-0x1d19affa]
   14004305a:	add    al,BYTE PTR [rax]
   14004305c:	pop    rax
   14004305d:	fild   DWORD PTR [rbx]
   14004305f:	add    BYTE PTR [rcx],al
   140043061:	or     eax,0x340d0004
   140043066:	adc    al,BYTE PTR [rax]
   140043068:	or     eax,0x17006f2
   14004306d:	sbb    al,0xa
   14004306f:	add    BYTE PTR [rsp+rsi*1],bl
   140043072:	or     eax,0x15321c00
   140043077:	lock adc esp,eax
   14004307a:	adc    eax,edx
   14004307c:	xadd   BYTE PTR [rip+0xb600c70],cl        # 0x14b643cf3
   140043083:	push   rax
   140043084:	sbb    DWORD PTR [rcx],esi
   140043086:	or     DWORD PTR [rax],eax
   140043088:	adc    eax,DWORD PTR [rcx]
   14004308a:	pop    rax
   14004308b:	add    BYTE PTR [rax+rsi*8],cl
   14004308e:	or     ah,al
   140043090:	or     al,dl
   140043092:	(bad)  
   140043093:	rol    BYTE PTR [rax+rsi*2],0x3
   140043097:	(bad)  
   140043098:	add    dh,BYTE PTR [rax]
   14004309a:	add    BYTE PTR [rax],al
   14004309c:	int3   
   14004309d:	out    0x2,eax
   14004309f:	add    al,ah
   1400430a1:	fiadd  DWORD PTR [rbx]
   1400430a3:	add    BYTE PTR [rbx-0xfffffe],bh
   1400430a9:	(bad)  
   1400430aa:	(bad)  
   1400430ab:	call   QWORD PTR [rdi-0xf]
   1400430ae:	add    al,BYTE PTR [rax]
   1400430b0:	add    BYTE PTR [rax],al
   1400430b2:	add    BYTE PTR [rax],al
   1400430b4:	movsxd esi,ecx
   1400430b6:	add    al,BYTE PTR [rax]
   1400430b8:	add    DWORD PTR [rax],eax
   1400430ba:	add    BYTE PTR [rax],al
   1400430bc:	outs   dx,DWORD PTR ds:[rsi]
   1400430bd:	icebp  
   1400430be:	add    al,BYTE PTR [rax]
   1400430c0:	add    al,BYTE PTR [rax]
   1400430c2:	add    BYTE PTR [rax],al
   1400430c4:	jnp    0x1400430b7
   1400430c6:	add    al,BYTE PTR [rax]
   1400430c8:	add    eax,DWORD PTR [rax]
   1400430ca:	add    BYTE PTR [rax],al
   1400430cc:	add    BYTE PTR [rax],al
   1400430ce:	add    BYTE PTR [rax],al
   1400430d0:	add    al,0x0
   1400430d2:	add    BYTE PTR [rax],al
   1400430d4:	xchg   ecx,esi
   1400430d6:	add    al,BYTE PTR [rax]
   1400430d8:	add    eax,0x93000000
   1400430dd:	icebp  
   1400430de:	add    al,BYTE PTR [rax]
   1400430e0:	add    eax,0x9f000000
   1400430e5:	icebp  
   1400430e6:	add    al,BYTE PTR [rax]
   1400430e8:	(bad)  
   1400430e9:	add    BYTE PTR [rax],al
   1400430eb:	add    BYTE PTR [rbx+0x70002f1],ch
   1400430f1:	add    BYTE PTR [rax],al
   1400430f3:	add    BYTE PTR [rdi+0x70002f1],dh
   1400430f9:	add    BYTE PTR [rax],al
   1400430fb:	add    bl,al
   1400430fd:	icebp  
   1400430fe:	add    al,BYTE PTR [rax]
   140043100:	(bad)  
   140043101:	add    BYTE PTR [rax],al
   140043103:	add    bh,cl
   140043105:	icebp  
   140043106:	add    al,BYTE PTR [rax]
   140043108:	(bad)  
   140043109:	add    BYTE PTR [rax],al
   14004310b:	add    bl,bl
   14004310d:	icebp  
   14004310e:	add    al,BYTE PTR [rax]
   140043110:	or     al,0x0
   140043112:	add    BYTE PTR [rax],al
   140043114:	add    BYTE PTR [rax],al
   140043116:	add    BYTE PTR [rax],al
   140043118:	or     al,0x0
   14004311a:	add    BYTE PTR [rax],al
   14004311c:	add    BYTE PTR [rax],al
   14004311e:	add    BYTE PTR [rax],al
   140043120:	or     al,0x0
   140043122:	add    BYTE PTR [rax],al
   140043124:	pop    rbx
   140043125:	repnz add al,BYTE PTR [rax]
   140043128:	add    eax,DWORD PTR [rax]
   14004312a:	add    BYTE PTR [rax],al
   14004312c:	add    BYTE PTR [rax],al
   14004312e:	add    BYTE PTR [rax],al
   140043130:	or     eax,0xd000000
   140043135:	add    BYTE PTR [rax],al
   140043137:	add    BYTE PTR [rsi],cl
   140043139:	add    BYTE PTR [rax],al
   14004313b:	add    BYTE PTR [rcx],al
   14004313d:	add    BYTE PTR [rax],al
   14004313f:	add    BYTE PTR [rax+0x31],bl
   140043142:	add    al,0x0
   140043144:	add    al,0x0
   140043146:	add    BYTE PTR [rax],al
   140043148:	sldt   WORD PTR [rax]
   14004314b:	add    BYTE PTR [rax],dl
   14004314d:	add    BYTE PTR [rax],al
   14004314f:	add    BYTE PTR [rcx],al
   140043151:	add    BYTE PTR [rax],al
   140043153:	add    BYTE PTR [rcx+rsi*1+0x4],ch
   140043157:	add    BYTE PTR [rax],cl
   140043159:	add    BYTE PTR [rax],al
   14004315b:	add    BYTE PTR [rax-0x18],dl
   14004315e:	add    al,0x0
   140043160:	call   0x127043166
   140043165:	icebp  
   140043166:	add    al,BYTE PTR [rax]
   140043168:	pop    rax
   140043169:	add    BYTE PTR [rax],al
   14004316b:	add    BYTE PTR [rax],cl
   14004316d:	add    BYTE PTR [rax],al
   14004316f:	add    BYTE PTR [rax-0x18],dl
   140043172:	add    al,0x0
   140043174:	mov    eax,0x67000001
   140043179:	repnz add al,BYTE PTR [rax]
   14004317c:	push   0x20000000
   140043181:	xchg   edi,eax
   140043182:	add    BYTE PTR [rax],al
   140043184:	(bad)  
   140043185:	(bad)  
   140043186:	(bad)  
   140043187:	jmp    QWORD PTR [rdi]
   140043189:	cwde   
   14004318a:	add    BYTE PTR [rax],al
   14004318c:	add    BYTE PTR [rax],al
   14004318e:	add    BYTE PTR [rax],al
   140043190:	test   BYTE PTR [rax+0x10000],bl
   140043196:	add    BYTE PTR [rax],al
   140043198:	mov    dl,0x98
   14004319a:	add    BYTE PTR [rax],al
   14004319c:	add    al,BYTE PTR [rax]
   14004319e:	add    BYTE PTR [rax],al
   1400431a0:	loopne 0x14004313a
   1400431a2:	add    BYTE PTR [rax],al
   1400431a4:	add    eax,DWORD PTR [rax]
   1400431a6:	add    BYTE PTR [rax],al
   1400431a8:	pop    rdx
   1400431a9:	pushf  
   1400431aa:	add    BYTE PTR [rax],al
   1400431ac:	add    eax,0x67000000
   1400431b1:	pushf  
   1400431b2:	add    BYTE PTR [rax],al
   1400431b4:	(bad)  
   1400431b5:	add    BYTE PTR [rax],al
   1400431b7:	add    BYTE PTR [rbx-0x64],bh
   1400431ba:	add    BYTE PTR [rax],al
   1400431bc:	add    eax,0xd1000000
   1400431c1:	pushf  
   1400431c2:	add    BYTE PTR [rax],al
   1400431c4:	(bad)  
   1400431c5:	add    BYTE PTR [rax],al
   1400431c7:	add    BYTE PTR [rsi-0x63],bl
   1400431ca:	add    BYTE PTR [rax],al
   1400431cc:	add    eax,0xa8000000
   1400431d1:	popf   
   1400431d2:	add    BYTE PTR [rax],al
   1400431d4:	(bad)  
   1400431d5:	add    BYTE PTR [rax],al
   1400431d7:	add    BYTE PTR [rbp+0x500009d],dh
   1400431dd:	add    BYTE PTR [rax],al
   1400431df:	add    BYTE PTR [rsi-0x62],cl
   1400431e2:	add    BYTE PTR [rax],al
   1400431e4:	add    al,0x0
   1400431e6:	add    BYTE PTR [rax],al
   1400431e8:	xchg   BYTE PTR [rsi+0x20000],bl
   1400431ee:	add    BYTE PTR [rax],al
   1400431f0:	test   eax,0x100009e
   1400431f5:	add    BYTE PTR [rax],al
   1400431f7:	add    cl,cl
   1400431f9:	sahf   
   1400431fa:	add    BYTE PTR [rax],al
   1400431fc:	add    BYTE PTR [rax],al
   1400431fe:	add    BYTE PTR [rax],al
   140043200:	in     al,dx
   140043201:	sahf   
   140043202:	add    BYTE PTR [rax],al
   140043204:	(bad)  
   140043205:	(bad)  
   140043206:	(bad)  
   140043207:	call   QWORD PTR [rdi]
   140043209:	lahf   
   14004320a:	add    BYTE PTR [rax],al
   14004320c:	add    eax,0x1f000000
   140043211:	lahf   
   140043212:	add    BYTE PTR [rax],al
   140043214:	(bad)  
   140043215:	add    BYTE PTR [rax],al
   140043217:	add    BYTE PTR [rsi+0x800009f],cl
   14004321d:	add    BYTE PTR [rax],al
   14004321f:	add    BYTE PTR [rdx-0x60],al
   140043222:	add    BYTE PTR [rax],al
   140043224:	(bad)  
   140043225:	add    BYTE PTR [rax],al
   140043227:	add    BYTE PTR [rbp-0x60],bh
   14004322a:	add    BYTE PTR [rax],al
   14004322c:	or     DWORD PTR [rax],eax
   14004322e:	add    BYTE PTR [rax],al
   140043230:	xor    DWORD PTR [rcx+0x70000],esp
   140043236:	add    BYTE PTR [rax],al
   140043238:	ins    BYTE PTR es:[rdi],dx
   140043239:	movabs eax,ds:0xa2200000000a0000
   140043242:	add    BYTE PTR [rax],al
   140043244:	(bad)  
   140043245:	add    BYTE PTR [rax],al
   140043247:	add    BYTE PTR [rbx-0x5e],cl
   14004324a:	add    BYTE PTR [rax],al
   14004324c:	or     eax,DWORD PTR [rax]
   14004324e:	add    BYTE PTR [rax],al
   140043250:	lods   eax,DWORD PTR ds:[rsi]
   140043251:	movabs ds:0xa2dc000000070000,al
   14004325a:	add    BYTE PTR [rax],al
   14004325c:	or     eax,0xfa000000
   140043261:	movabs ds:0xa4060000000c0000,al
   14004326a:	add    BYTE PTR [rax],al
   14004326c:	sldt   WORD PTR [rax]
   14004326f:	add    BYTE PTR [rdi],bh
   140043271:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140043272:	add    BYTE PTR [rax],al
   140043274:	or     al,0x0
   140043276:	add    BYTE PTR [rax],al
   140043278:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004327a:	add    BYTE PTR [rax],al
   14004327c:	add    eax,0x16000000
   140043281:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140043282:	add    BYTE PTR [rax],al
   140043284:	add    al,BYTE PTR [rax]
   140043286:	add    BYTE PTR [rax],al
   140043288:	cmp    DWORD PTR [rdi+0x10000],esp
   14004328e:	add    BYTE PTR [rax],al
   140043290:	pop    rcx
   140043291:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140043292:	add    BYTE PTR [rax],al
   140043294:	add    BYTE PTR [rax],al
   140043296:	add    BYTE PTR [rax],al
   140043298:	jl     0x140043241
   14004329a:	add    BYTE PTR [rax],al
   14004329c:	(bad)  
   14004329d:	(bad)  
   14004329e:	(bad)  
   14004329f:	jmp    QWORD PTR [rdi+riz*4+0xa0000]
   1400432a6:	add    BYTE PTR [rax],al
   1400432a8:	lods   al,BYTE PTR ds:[rsi]
   1400432a9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400432aa:	add    BYTE PTR [rax],al
   1400432ac:	or     DWORD PTR [rax],eax
   1400432ae:	add    BYTE PTR [rax],al
   1400432b0:	mov    ah,0xa7
   1400432b2:	add    BYTE PTR [rax],al
   1400432b4:	or     BYTE PTR [rax],al
   1400432b6:	add    BYTE PTR [rax],al
   1400432b8:	mov    esp,0x30000a7
   1400432bd:	add    BYTE PTR [rax],al
   1400432bf:	add    ah,cl
   1400432c1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400432c2:	add    BYTE PTR [rax],al
   1400432c4:	add    BYTE PTR [rax],al
   1400432c6:	add    BYTE PTR [rax],al
   1400432c8:	adc    DWORD PTR [rax-0x10000],ebp
   1400432ce:	(bad)  
   1400432cf:	jmp    rdi
   1400432d1:	icebp  
   1400432d2:	add    al,BYTE PTR [rax]
   1400432d4:	add    BYTE PTR [rax],al
   1400432d6:	add    BYTE PTR [rax],al
   1400432d8:	div    cl
   1400432da:	add    al,BYTE PTR [rax]
   1400432dc:	(bad)  
   1400432dd:	add    BYTE PTR [rax],al
   1400432df:	add    BYTE PTR [rbx-0xe],cl
   1400432e2:	add    al,BYTE PTR [rax]
   1400432e4:	add    BYTE PTR [rax],al
   1400432e6:	add    BYTE PTR [rax],al
   1400432e8:	ja     0x1400432dc
   1400432ea:	add    al,BYTE PTR [rax]
   1400432ec:	adc    BYTE PTR [rax],al
   1400432ee:	add    BYTE PTR [rax],al
   1400432f0:	sbb    DWORD PTR [rsp+rax*1],ecx
   1400432f3:	add    BYTE PTR [rdx+rdx*2],cl
   1400432f6:	or     BYTE PTR [rax+0x7],dh
   1400432f9:	push   rax
   1400432fa:	(bad)  
   1400432fb:	xor    dh,ah
   1400432fd:	loop   0x140043301
   1400432ff:	add    al,ah
   140043301:	fiadd  DWORD PTR [rbx]
   140043303:	add    BYTE PTR [rcx],bl
   140043305:	or     eax,0x620d0005
   14004330a:	or     DWORD PTR [rax+0x8],esi
   14004330d:	(bad)  
   14004330e:	(bad)  
   14004330f:	push   rax
   140043310:	(bad)  
   140043311:	xor    BYTE PTR [rax],al
   140043313:	add    dh,ah
   140043315:	loop   0x140043319
   140043317:	add    al,ah
   140043319:	fiadd  DWORD PTR [rbx]
   14004331b:	add    BYTE PTR [rcx],bl
   14004331d:	(bad)  
   14004331e:	or     al,BYTE PTR [rax]
   140043320:	sbb    DWORD PTR [rcx],eax
   140043322:	(bad)  
   140043323:	add    BYTE PTR [rip+0x9e00bf0],cl        # 0x149e43f19
   140043329:	rol    BYTE PTR [rdi],1
   14004332b:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x1436437a2
   140043332:	add    dl,BYTE PTR [rax-0x34]
   140043335:	out    0x2,eax
   140043337:	add    BYTE PTR [rax-0x55fffc26],bh
   14004333d:	add    BYTE PTR [rax],al
   14004333f:	add    bh,bh
   140043341:	(bad)  
   140043342:	(bad)  
   140043343:	push   rsp
   140043345:	repnz add al,BYTE PTR [rax]
   140043348:	add    BYTE PTR [rax],al
   14004334a:	add    BYTE PTR [rax],al
   14004334c:	add    bl,dh
   14004334e:	add    al,BYTE PTR [rax]
   140043350:	cmp    al,0xa8
   140043352:	add    BYTE PTR [rax],al
   140043354:	(bad)  
   140043355:	(bad)  
   140043356:	(bad)  
   140043357:	call   FWORD PTR [rcx+0xa8]
   14004335d:	add    BYTE PTR [rax],al
   14004335f:	add    ah,ah
   140043361:	test   al,0x0
   140043363:	add    BYTE PTR [rcx],al
   140043365:	add    BYTE PTR [rax],al
   140043367:	add    BYTE PTR [rbx],dh
   140043369:	stos   BYTE PTR es:[rdi],al
   14004336a:	add    BYTE PTR [rax],al
   14004336c:	(bad)  
   14004336d:	(bad)  
   14004336e:	(bad)  
   14004336f:	call   QWORD PTR [rcx]
   140043371:	(bad)  
   140043372:	or     al,BYTE PTR [rax]
   140043374:	(bad)  
   140043375:	xor    al,0x11
   140043377:	add    BYTE PTR [rdx],dl
   140043379:	jb     0x140043389
   14004337b:	lock or al,0xe0
   14004337e:	or     dl,al
   140043380:	or     al,al
   140043382:	(bad)  
   140043383:	jo     0x14004338a
   140043385:	(bad)  
   140043386:	add    al,0x50
   140043388:	out    0xe2,al
   14004338a:	add    al,BYTE PTR [rax]
   14004338c:	nop
   14004338d:	fiadd  DWORD PTR [rbx]
   14004338f:	add    bh,bh
   140043391:	(bad)  
   140043392:	(bad)  
   140043393:	call   QWORD PTR [rdx]
   140043395:	repz add al,BYTE PTR [rax]
   140043398:	add    BYTE PTR [rax],al
   14004339a:	add    BYTE PTR [rax],al
   14004339c:	(bad)  
   14004339d:	repz add al,BYTE PTR [rax]
   1400433a0:	add    BYTE PTR [rax],al
   1400433a2:	add    BYTE PTR [rax],al
   1400433a4:	sub    dh,bl
   1400433a6:	add    al,BYTE PTR [rax]
	...
   1400433b0:	je     0x14004335c
   1400433b2:	add    BYTE PTR [rax],al
   1400433b4:	(bad)  
   1400433b5:	(bad)  
   1400433b6:	(bad)  
   1400433b7:	push   QWORD PTR [rdi+0xaa]
   1400433bd:	add    BYTE PTR [rax],al
   1400433bf:	add    al,ah
   1400433c1:	stos   BYTE PTR es:[rdi],al
   1400433c2:	add    BYTE PTR [rax],al
   1400433c4:	add    DWORD PTR [rax],eax
   1400433c6:	add    BYTE PTR [rax],al
   1400433c8:	jmp    0x140043374
   1400433ca:	add    BYTE PTR [rax],al
   1400433cc:	add    BYTE PTR [rax],al
   1400433ce:	add    BYTE PTR [rax],al
   1400433d0:	adc    DWORD PTR [rbx+0x20000],ebp
   1400433d6:	add    BYTE PTR [rax],al
   1400433d8:	iret   
   1400433d9:	lods   eax,DWORD PTR ds:[rsi]
   1400433da:	add    BYTE PTR [rax],al
   1400433dc:	(bad)  
   1400433dd:	(bad)  
   1400433de:	(bad)  
   1400433df:	(bad)  
   1400433e0:	out    dx,eax
   1400433e1:	lods   eax,DWORD PTR ds:[rsi]
   1400433e2:	add    BYTE PTR [rax],al
   1400433e4:	add    BYTE PTR [rax],al
   1400433e6:	add    BYTE PTR [rax],al
   1400433e8:	(bad)  
   1400433e9:	scas   al,BYTE PTR es:[rdi]
   1400433ea:	add    BYTE PTR [rax],al
   1400433ec:	(bad)  
   1400433ed:	(bad)  
   1400433ee:	(bad)  
   1400433ef:	call   QWORD PTR [rcx]
   1400433f1:	and    cl,BYTE PTR [rdx]
   1400433f3:	add    BYTE PTR [rdx],ah
   1400433f5:	adc    al,BYTE PTR fs:[rax]
   1400433f8:	(bad)  
   1400433f9:	xor    al,0x11
   1400433fb:	add    BYTE PTR [rdx],dl
   1400433fd:	xchg   edx,eax
   1400433fe:	or     esi,eax
   140043400:	or     eax,esp
   140043402:	(bad)  
   140043403:	rol    BYTE PTR [rip+0xffffffffe6500470],0xe2        # 0x12654387a
   14004340a:	add    al,BYTE PTR [rax]
   14004340c:	push   0xffffffffff0003da
   140043411:	(bad)  
   140043412:	(bad)  
   140043413:	(bad)  
   140043414:	cmp    al,0xf3
   140043416:	add    al,BYTE PTR [rax]
   140043418:	add    BYTE PTR [rax],al
   14004341a:	add    BYTE PTR [rax],al
   14004341c:	rex.W
   14004341d:	repz add al,BYTE PTR [rax]
   140043420:	add    DWORD PTR [rax],eax
   140043422:	add    BYTE PTR [rax],al
   140043424:	push   rsp
   140043425:	repz add al,BYTE PTR [rax]
   140043428:	loopne 0x1400433d9
   14004342a:	add    BYTE PTR [rax],al
   14004342c:	(bad)  
   14004342d:	(bad)  
   14004342e:	(bad)  
   14004342f:	jmp    QWORD PTR [rdi]
   140043431:	mov    al,0x0
   140043433:	add    BYTE PTR [rax],al
   140043435:	add    BYTE PTR [rax],al
   140043437:	add    BYTE PTR [rbx-0x50],bh
   14004343a:	add    BYTE PTR [rax],al
   14004343c:	add    DWORD PTR [rax],eax
   14004343e:	add    BYTE PTR [rax],al
   140043440:	(bad)  
   140043441:	mov    cl,0x0
   140043443:	add    BYTE PTR [rdx],al
   140043445:	add    BYTE PTR [rax],al
   140043447:	add    BYTE PTR [rbp-0x4f],al
   14004344a:	add    BYTE PTR [rax],al
   14004344c:	add    BYTE PTR [rax],al
   14004344e:	add    BYTE PTR [rax],al
   140043450:	mov    WORD PTR [rcx-0x10000],?
   140043456:	(bad)  
   140043457:	call   FWORD PTR [rcx]
   140043459:	sub    eax,0x1170009
   14004345e:	sbb    BYTE PTR [rax],al
   140043460:	or     esi,eax
   140043462:	or     eax,esp
   140043464:	(bad)  
   140043465:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x1436438dc
   14004346c:	add    dl,BYTE PTR [rax+0x0]
   14004346f:	add    ah,cl
   140043471:	out    0x2,eax
   140043473:	add    BYTE PTR [rax-0x26],al
   140043476:	add    eax,DWORD PTR [rax]
   140043478:	mov    dl,0x0
   14004347a:	add    BYTE PTR [rax],al
   14004347c:	(bad)  
   14004347d:	(bad)  
   14004347e:	(bad)  
   14004347f:	jmp    QWORD PTR [rsi-0xd]
   140043482:	add    al,BYTE PTR [rax]
   140043484:	add    BYTE PTR [rax],al
   140043486:	add    BYTE PTR [rax],al
   140043488:	jb     0x14004347d
   14004348a:	add    al,BYTE PTR [rax]
   14004348c:	add    DWORD PTR [rax],eax
   14004348e:	add    BYTE PTR [rax],al
   140043490:	jle    0x140043485
   140043492:	add    al,BYTE PTR [rax]
   140043494:	add    al,BYTE PTR [rax]
   140043496:	add    BYTE PTR [rax],al
   140043498:	mov    dh,bl
   14004349a:	add    al,BYTE PTR [rax]
   14004349c:	add    eax,DWORD PTR [rax]
   14004349e:	add    BYTE PTR [rax],al
   1400434a0:	add    BYTE PTR [rax],al
   1400434a2:	add    BYTE PTR [rax],al
   1400434a4:	add    al,BYTE PTR [rax]
   1400434a6:	add    BYTE PTR [rax],al
   1400434a8:	xchg   esi,eax
   1400434a9:	repz add al,BYTE PTR [rax]
   1400434ac:	add    DWORD PTR [rax],eax
   1400434ae:	add    BYTE PTR [rax],al
   1400434b0:	xchg   esi,eax
   1400434b1:	repz add al,BYTE PTR [rax]
	...
   1400434c0:	shl    BYTE PTR [rcx-0x10000],1
   1400434c6:	(bad)  
   1400434c7:	jmp    FWORD PTR [rax]
   1400434c9:	mov    dl,0x0
   1400434cb:	add    BYTE PTR [rax],al
   1400434cd:	add    BYTE PTR [rax],al
   1400434cf:	add    BYTE PTR [rsi-0x4e],dh
   1400434d2:	add    BYTE PTR [rax],al
   1400434d4:	add    DWORD PTR [rax],eax
   1400434d6:	add    BYTE PTR [rax],al
   1400434d8:	(bad)  
   1400434d9:	mov    dl,0x0
   1400434db:	add    BYTE PTR [rdx],al
   1400434dd:	add    BYTE PTR [rax],al
   1400434df:	add    BYTE PTR [rdx+rsi*4+0x30000],dl
   1400434e6:	add    BYTE PTR [rax],al
   1400434e8:	leave  
   1400434e9:	mov    dl,0x0
   1400434eb:	add    BYTE PTR [rsi],al
   1400434ed:	add    BYTE PTR [rax],al
   1400434ef:	add    ch,bh
   1400434f1:	mov    dl,0x0
   1400434f3:	add    BYTE PTR [rcx],al
   1400434f5:	add    BYTE PTR [rax],al
   1400434f7:	add    BYTE PTR [rbx],bl
   1400434f9:	mov    bl,0x0
   1400434fb:	add    bh,bh
   1400434fd:	(bad)  
   1400434fe:	(bad)  
   1400434ff:	push   QWORD PTR [rdi]
   140043501:	mov    bl,0x0
   140043503:	add    BYTE PTR [rax],al
   140043505:	add    BYTE PTR [rax],al
   140043507:	add    BYTE PTR [rdi-0x4d],dh
   14004350a:	add    BYTE PTR [rax],al
   14004350c:	(bad)  
   14004350d:	(bad)  
   14004350e:	(bad)  
   14004350f:	call   FWORD PTR [rcx]
   140043511:	xor    ecx,DWORD PTR [rbx]
   140043513:	add    BYTE PTR [rcx],ah
   140043515:	xor    al,0x1e
   140043517:	add    BYTE PTR [rip+0xe001601],dl        # 0x14e044b1e
   14004351d:	lock or al,0xe0
   140043520:	or     dl,al
   140043522:	or     al,al
   140043524:	(bad)  
   140043525:	jo     0x14004352c
   140043527:	(bad)  
   140043528:	add    al,0x50
   14004352a:	add    BYTE PTR [rax],al
   14004352c:	int3   
   14004352d:	out    0x2,eax
   14004352f:	add    BYTE PTR [rax],bl
   140043531:	fiadd  DWORD PTR [rbx]
   140043533:	add    BYTE PTR [rdx-0x1000000],ch
   140043539:	(bad)  
   14004353a:	(bad)  
   14004353b:	jmp    FWORD PTR [rax-0x63fffd0d]
   140043541:	mov    bl,0x0
   140043543:	add    bh,bh
   140043545:	(bad)  
   140043546:	(bad)  
   140043547:	inc    DWORD PTR [rax]
   140043549:	mov    ah,0x0
   14004354b:	add    BYTE PTR [rax],al
   14004354d:	add    BYTE PTR [rax],al
   14004354f:	add    BYTE PTR [rsi-0x4b],ah
   140043552:	add    BYTE PTR [rax],al
   140043554:	(bad)  
   140043555:	(bad)  
   140043556:	(bad)  
   140043557:	dec    DWORD PTR [rdx+0xb5]
   14004355d:	add    BYTE PTR [rax],al
   14004355f:	add    cl,ch
   140043561:	mov    dh,0x0
   140043563:	add    bh,bh
   140043565:	(bad)  
   140043566:	(bad)  
   140043567:	call   QWORD PTR [rcx]
   140043569:	and    ecx,DWORD PTR [rdx]
   14004356b:	add    BYTE PTR [rbx],ah
   14004356d:	je     0x140043582
   14004356f:	add    BYTE PTR [rdi],bl
   140043571:	adc    al,BYTE PTR fs:[rax]
   140043574:	sbb    esi,DWORD PTR [rcx+rdx*1]
   140043577:	add    BYTE PTR [rdi],cl
   140043579:	mov    dl,0x8
   14004357b:	loopne 0x140043583
   14004357d:	rol    BYTE PTR [rax+rdx*2],0xe6
   140043581:	loop   0x140043585
   140043583:	add    al,dh
   140043585:	fld    DWORD PTR [rbx]
   140043587:	add    bh,bh
   140043589:	(bad)  
   14004358a:	(bad)  
   14004358b:	(bad)  
   14004358c:	mov    edx,0x2f3
   140043591:	add    BYTE PTR [rax],al
   140043593:	add    dh,al
   140043595:	repz add al,BYTE PTR [rax]
   140043598:	sbb    al,0xb7
   14004359a:	add    BYTE PTR [rax],al
   14004359c:	(bad)  
   14004359d:	(bad)  
   14004359e:	(bad)  
   14004359f:	call   FWORD PTR [rdx-0x49]
   1400435a2:	add    BYTE PTR [rax],al
   1400435a4:	add    BYTE PTR [rax],al
   1400435a6:	add    BYTE PTR [rax],al
   1400435a8:	outs   dx,DWORD PTR ds:[rsi]
   1400435a9:	mov    bh,0x0
   1400435ab:	add    BYTE PTR [rcx],al
   1400435ad:	add    BYTE PTR [rax],al
   1400435af:	add    BYTE PTR [rax],al
   1400435b1:	mov    eax,0x0
   1400435b6:	add    BYTE PTR [rax],al
   1400435b8:	(bad)
   1400435bb:	add    bh,bh
   1400435bd:	(bad)  
   1400435be:	(bad)  
   1400435bf:	call   FWORD PTR [rcx]
   1400435c1:	xor    DWORD PTR [rcx],ecx
   1400435c3:	add    BYTE PTR [rbx],ah
   1400435c5:	je     0x1400435e0
   1400435c7:	add    BYTE PTR [rdi],bl
   1400435c9:	sbb    BYTE PTR fs:[rax],al
   1400435cc:	sbb    esi,DWORD PTR [rdi+rdx*1]
   1400435cf:	add    BYTE PTR [rdi],cl
   1400435d1:	add    DWORD PTR [rax+rax*1],edx
   1400435d4:	add    al,0x50
   1400435d6:	add    BYTE PTR [rax],al
   1400435d8:	int3   
   1400435d9:	out    0x2,eax
   1400435db:	add    al,cl
   1400435dd:	fld    DWORD PTR [rbx]
   1400435df:	add    BYTE PTR [rdx-0x1000000],dl
   1400435e5:	(bad)  
   1400435e6:	(bad)  
   1400435e7:	(bad)  
   1400435e8:	fdiv   st,st(3)
   1400435ea:	add    al,BYTE PTR [rax]
   1400435ec:	add    BYTE PTR [rax],al
   1400435ee:	add    BYTE PTR [rax],al
   1400435f0:	sbb    al,0xb9
   1400435f2:	add    BYTE PTR [rax],al
   1400435f4:	(bad)  
   1400435f5:	(bad)  
   1400435f6:	(bad)  
   1400435f7:	call   rcx
   1400435f9:	mov    ecx,0x0
   1400435fe:	add    BYTE PTR [rax],al
   140043600:	cld    
   140043601:	mov    edx,0xffff0000
   140043606:	(bad)  
   140043607:	call   QWORD PTR [rcx]
   140043609:	sbb    BYTE PTR [rax+rax*1],al
   14004360c:	sbb    BYTE PTR [rdx+rcx*1],dh
   14004360f:	add    BYTE PTR [rdx+rdx*2],cl
   140043612:	or     BYTE PTR [rax-0x1a],dh
   140043615:	loop   0x140043619
   140043617:	add    BYTE PTR [rax-0xfffc27],ah
   14004361d:	(bad)  
   14004361e:	(bad)  
   14004361f:	(bad)  
   140043620:	(bad)  
   140043621:	repz add al,BYTE PTR [rax]
   140043624:	add    BYTE PTR [rax],al
   140043626:	add    BYTE PTR [rax],al
   140043628:	adc    ah,dh
   14004362a:	add    al,BYTE PTR [rax]
   14004362c:	add    BYTE PTR [rax],al
   14004362e:	add    BYTE PTR [rax],al
   140043630:	sbb    al,0xf4
   140043632:	add    al,BYTE PTR [rax]
   140043634:	add    BYTE PTR [rax],al
   140043636:	add    BYTE PTR [rax],al
   140043638:	xor    al,0xbb
   14004363a:	add    BYTE PTR [rax],al
   14004363c:	(bad)  
   14004363d:	(bad)  
   14004363e:	(bad)  
   14004363f:	dec    DWORD PTR [rdi-0x45]
   140043642:	add    BYTE PTR [rax],al
   140043644:	add    BYTE PTR [rax],al
   140043646:	add    BYTE PTR [rax],al
   140043648:	cmp    DWORD PTR [rbx+0x10000],0xbba80000
   140043652:	add    BYTE PTR [rax],al
   140043654:	add    BYTE PTR [rax],al
   140043656:	add    BYTE PTR [rax],al
   140043658:	lods   eax,DWORD PTR ds:[rsi]
   140043659:	mov    ebx,0x20000
   14004365e:	add    BYTE PTR [rax],al
   140043660:	mov    ebx,0xbb
   140043665:	add    BYTE PTR [rax],al
   140043667:	add    BYTE PTR [rcx],dl
   140043669:	sbb    BYTE PTR [rax+rax*1],al
   14004366c:	sbb    BYTE PTR [rdx+rcx*1],dh
   14004366f:	add    BYTE PTR [rdx+rdx*2],cl
   140043672:	or     BYTE PTR [rax-0x1a],dh
   140043675:	loop   0x140043679
   140043677:	add    BYTE PTR [rax-0x27],bh
   14004367a:	add    eax,DWORD PTR [rax]
   14004367c:	add    BYTE PTR [rax],al
   14004367e:	add    BYTE PTR [rax],al
   140043680:	fdivr  QWORD PTR [rbx-0x10000]
   140043686:	(bad)  
   140043687:	push   rdi
   140043689:	mov    ebx,0x0
   14004368e:	add    BYTE PTR [rax],al
   140043690:	sub    DWORD PTR [rax+rax*1+0x100],edi
   140043697:	add    BYTE PTR [rax-0x44],dl
   14004369a:	add    BYTE PTR [rax],al
   14004369c:	add    BYTE PTR [rax],al
   14004369e:	add    BYTE PTR [rax],al
   1400436a0:	push   rbp
   1400436a1:	mov    esp,0x20000
   1400436a6:	add    BYTE PTR [rax],al
   1400436a8:	movsxd edi,DWORD PTR [rax+rax*1+0x0]
   1400436af:	add    BYTE PTR [rcx],dl
   1400436b1:	adc    al,0x4
   1400436b3:	add    BYTE PTR [rsp+rsi*1],dl
   1400436b6:	or     DWORD PTR [rax],eax
   1400436b8:	(bad)  
   1400436b9:	push   rdx
   1400436ba:	add    dh,BYTE PTR [rax-0x1a]
   1400436bd:	loop   0x1400436c1
   1400436bf:	add    BYTE PTR [rax-0x27],dl
   1400436c2:	add    eax,DWORD PTR [rax]
   1400436c4:	(bad)  
   1400436c5:	(bad)  
   1400436c6:	(bad)  
   1400436c7:	jmp    FWORD PTR [rsi]
   1400436c9:	hlt    
   1400436ca:	add    al,BYTE PTR [rax]
   1400436cc:	(bad)  
   1400436cd:	(bad)  
   1400436ce:	(bad)  
   1400436cf:	(bad)  
   1400436d0:	cmp    dh,ah
   1400436d2:	add    al,BYTE PTR [rax]
   1400436d4:	add    BYTE PTR [rax],al
   1400436d6:	add    BYTE PTR [rax],al
   1400436d8:	test   BYTE PTR [rax+rax*1-0x100],bh
   1400436df:	(bad)  
   1400436e0:	(bad)  
   1400436e1:	mov    esp,0x0
   1400436e6:	add    BYTE PTR [rax],al
   1400436e8:	and    eax,0xff0000bd
   1400436ed:	(bad)  
   1400436ee:	(bad)  
   1400436ef:	jmp    FWORD PTR [rdx]
   1400436f1:	mov    ebp,0x10000
   1400436f6:	add    BYTE PTR [rax],al
   1400436f8:	cmp    BYTE PTR [rbp-0x10000],bh
   1400436fe:	(bad)  
   1400436ff:	call   FWORD PTR [rcx]
   140043701:	and    al,0xb
   140043703:	add    BYTE PTR [rsp+rsi*2],ah
   140043706:	(bad)  
   140043707:	add    BYTE PTR [rax],ah
   140043709:	fs (bad) 
   14004370b:	add    BYTE PTR [rsp+rsi*1],bl
   14004370e:	sbb    eax,0x18011000
   140043713:	add    BYTE PTR [rcx],cl
   140043715:	lock (bad) 
   140043717:	loopne 0x14004371e
   140043719:	rol    BYTE PTR [rax],0x0
   14004371c:	out    0xe2,al
   14004371e:	add    al,BYTE PTR [rax]
   140043720:	sub    cl,bl
   140043722:	add    eax,DWORD PTR [rax]
   140043724:	(bad)  
   140043725:	(bad)  
   140043726:	(bad)  
   140043727:	dec    DWORD PTR [rsp+rsi*8+0x2]
	...
   14004373b:	add    BYTE PTR [rcx],al
   14004373d:	add    BYTE PTR [rax],al
   14004373f:	add    BYTE PTR [rcx],al
   140043741:	add    BYTE PTR [rax],al
   140043743:	add    BYTE PTR [rdx],al
   140043745:	add    BYTE PTR [rax],al
   140043747:	add    BYTE PTR [rcx],al
   140043749:	add    BYTE PTR [rax],al
   14004374b:	add    BYTE PTR [rax+0x37],dl
   14004374e:	add    al,0x0
   140043750:	or     DWORD PTR [rax],eax
   140043752:	add    BYTE PTR [rax],al
   140043754:	push   rax
   140043755:	call   0x140b4375e
   14004375a:	add    BYTE PTR [rax],al
   14004375c:	pop    rax
   14004375d:	hlt    
   14004375e:	add    al,BYTE PTR [rax]
   140043760:	mov    eax,0x0
	...
   14004376d:	add    BYTE PTR [rax],al
   14004376f:	add    BYTE PTR [rbp+rdi*4+0x0],dl
   140043773:	add    bh,bh
   140043775:	(bad)  
   140043776:	(bad)  
   140043777:	dec    DWORD PTR [rdx+0xbd]
   14004377d:	add    BYTE PTR [rax],al
   14004377f:	add    BYTE PTR [rbp-0xffff43],ch
   140043785:	(bad)  
   140043786:	(bad)  
   140043787:	(bad)  
   140043788:	fdivr  DWORD PTR [rbp+0x10000]
   14004378e:	add    BYTE PTR [rax],al
   140043790:	sar    BYTE PTR [rsi+0x0],1
   140043796:	add    BYTE PTR [rax],al
   140043798:	fnstsw WORD PTR [rsi-0x10000]
   14004379e:	(bad)  
   14004379f:	dec    DWORD PTR [rip+0xbf]        # 0x140043864
   1400437a5:	add    BYTE PTR [rax],al
   1400437a7:	add    BYTE PTR [rip+0xffffffffff0000bf],dl        # 0x13f04386c
   1400437ad:	(bad)  
   1400437ae:	(bad)  
   1400437af:	call   FWORD PTR [rax-0xc]
   1400437b2:	add    al,BYTE PTR [rax]
   1400437b4:	add    BYTE PTR [rax],al
   1400437b6:	add    BYTE PTR [rax],al
   1400437b8:	push   0x20002f4
   1400437bd:	add    BYTE PTR [rax],al
   1400437bf:	add    BYTE PTR [rdx-0xc],bh
   1400437c2:	add    al,BYTE PTR [rax]
   1400437c4:	add    BYTE PTR [rax],al
   1400437c6:	add    BYTE PTR [rax],al
   1400437c8:	sbb    DWORD PTR [rip+0x10d0003],ecx        # 0x1411137d1
   1400437ce:	adc    al,0x0
   1400437d0:	(bad)  
   1400437d1:	push   rax
   1400437d2:	add    BYTE PTR [rax],al
   1400437d4:	out    0xe2,al
   1400437d6:	add    al,BYTE PTR [rax]
   1400437d8:	sub    cl,bl
   1400437da:	add    eax,DWORD PTR [rax]
   1400437dc:	sbb    DWORD PTR [rax],ebx
   1400437de:	(bad)  
   1400437df:	add    BYTE PTR [rax],bl
   1400437e1:	fs (bad) 
   1400437e3:	add    BYTE PTR [rsp+rsi*1],dl
   1400437e6:	or     eax,0x4920800
   1400437eb:	jo     0x1400437d3
   1400437ed:	loop   0x1400437f1
   1400437ef:	add    BYTE PTR [rax],al
   1400437f1:	fld    DWORD PTR [rbx]
   1400437f3:	add    bh,bh
   1400437f5:	(bad)  
   1400437f6:	(bad)  
   1400437f7:	call   QWORD PTR [rcx+0x2f4]
	...
   140043809:	add    BYTE PTR [rax],al
   14004380b:	add    BYTE PTR [rcx],al
   14004380d:	add    BYTE PTR [rax],al
   14004380f:	add    BYTE PTR [rcx],al
   140043811:	add    BYTE PTR [rax],al
   140043813:	add    BYTE PTR [rdx],al
   140043815:	add    BYTE PTR [rax],al
   140043817:	add    BYTE PTR [rcx],al
   140043819:	add    BYTE PTR [rax],al
   14004381b:	add    BYTE PTR [rax],ah
   14004381d:	cmp    BYTE PTR [rax+rax*1],al
   140043820:	or     DWORD PTR [rax],eax
   140043822:	add    BYTE PTR [rax],al
   140043824:	push   rax
   140043825:	call   0x14044382e
   14004382a:	add    BYTE PTR [rax],al
   14004382c:	popf   
   14004382d:	hlt    
   14004382e:	add    al,BYTE PTR [rax]
   140043830:	rex.W add BYTE PTR [rax],al
	...
   14004383f:	add    BYTE PTR [rax-0x41],ah
   140043842:	add    BYTE PTR [rax],al
   140043844:	(bad)  
   140043845:	(bad)  
   140043846:	(bad)  
   140043847:	inc    DWORD PTR [rsi+0xbf]
   14004384d:	add    BYTE PTR [rax],al
   14004384f:	add    BYTE PTR [rsi-0xffff41],ah
   140043855:	(bad)  
   140043856:	(bad)  
   140043857:	dec    ebx
   140043859:	mov    edi,0x10000
   14004385e:	add    BYTE PTR [rax],al
   140043860:	call   0x140043924
   140043865:	add    BYTE PTR [rax],al
   140043867:	add    dl,dh
   140043869:	mov    edi,0xffff0000
   14004386e:	(bad)  
   14004386f:	call   FWORD PTR [rax+rax*8]
   140043872:	add    BYTE PTR [rax],al
   140043874:	add    BYTE PTR [rax],al
   140043876:	add    BYTE PTR [rax],al
   140043878:	and    eax,eax
   14004387a:	add    BYTE PTR [rax],al
   14004387c:	(bad)  
   14004387d:	(bad)  
   14004387e:	(bad)  
   14004387f:	call   FWORD PTR [rbp+0x2f4]
   140043885:	add    BYTE PTR [rax],al
   140043887:	add    BYTE PTR [rdx+0x20002f4],ch
   14004388d:	add    BYTE PTR [rax],al
   14004388f:	add    BYTE PTR [rsi+0x2f4],dh
   140043895:	add    BYTE PTR [rax],al
   140043897:	add    BYTE PTR [rcx],bl
   140043899:	or     al,BYTE PTR [rdx]
   14004389b:	add    BYTE PTR [rdx],cl
   14004389d:	push   rdx
   14004389e:	(bad)  
   14004389f:	push   rax
   1400438a0:	out    0xe2,al
   1400438a2:	add    al,BYTE PTR [rax]
   1400438a4:	add    cl,bl
   1400438a6:	add    eax,DWORD PTR [rax]
   1400438a8:	sbb    DWORD PTR [rdi],ebp
   1400438aa:	or     al,BYTE PTR [rax]
   1400438ac:	sbb    DWORD PTR [rcx],eax
   1400438ae:	adc    DWORD PTR [rax],eax
   1400438b0:	or     eax,0x9e00bf0
   1400438b5:	rol    BYTE PTR [rdi],1
   1400438b7:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x143643d2e
   1400438be:	add    dl,BYTE PTR [rax-0x34]
   1400438c1:	out    0x2,eax
   1400438c3:	add    al,bl
   1400438c5:	fadd   DWORD PTR [rbx]
   1400438c7:	add    BYTE PTR [rdx+0x0],bh
   1400438ca:	add    BYTE PTR [rax],al
   1400438cc:	(bad)  
   1400438cd:	(bad)  
   1400438ce:	(bad)  
   1400438cf:	dec    edx
   1400438d1:	hlt    
   1400438d2:	add    al,BYTE PTR [rax]
   1400438d4:	add    BYTE PTR [rax],al
   1400438d6:	add    BYTE PTR [rax],al
   1400438d8:	(bad)  
   1400438d9:	hlt    
   1400438da:	add    al,BYTE PTR [rax]
   1400438dc:	add    DWORD PTR [rax],eax
   1400438de:	add    BYTE PTR [rax],al
   1400438e0:	loop   0x1400438d6
   1400438e2:	add    al,BYTE PTR [rax]
	...
   1400438f0:	pop    rsp
   1400438f1:	rol    BYTE PTR [rax],0x0
   1400438f4:	(bad)  
   1400438f5:	(bad)  
   1400438f6:	(bad)  
   1400438f7:	jmp    FWORD PTR [rcx]
   1400438f9:	rol    DWORD PTR [rax],0x0
   1400438fc:	add    BYTE PTR [rax],al
   1400438fe:	add    BYTE PTR [rax],al
   140043900:	pop    rcx
   140043902:	add    BYTE PTR [rax],al
   140043904:	add    DWORD PTR [rax],eax
   140043906:	add    BYTE PTR [rax],al
   140043908:	rex.W ret 0x0
   14004390c:	add    al,BYTE PTR [rax]
   14004390e:	add    BYTE PTR [rax],al
   140043910:	pop    rsi
   140043911:	ret    
   140043912:	add    BYTE PTR [rax],al
   140043914:	add    DWORD PTR [rax],eax
   140043916:	add    BYTE PTR [rax],al
   140043918:	scas   eax,DWORD PTR es:[rdi]
   140043919:	ret    
   14004391a:	add    BYTE PTR [rax],al
   14004391c:	add    BYTE PTR [rax],al
   14004391e:	add    BYTE PTR [rax],al
   140043920:	ffreep st(3)
   140043922:	add    BYTE PTR [rax],al
   140043924:	add    al,BYTE PTR [rax]
   140043926:	add    BYTE PTR [rax],al
   140043928:	or     al,ah
   14004392a:	add    BYTE PTR [rax],al
   14004392c:	add    DWORD PTR [rax],eax
   14004392e:	add    BYTE PTR [rax],al
   140043930:	and    eax,0xc4
   140043935:	add    BYTE PTR [rax],al
   140043937:	add    BYTE PTR [rbp-0x3c],al
   14004393a:	add    BYTE PTR [rax],al
   14004393c:	add    al,BYTE PTR [rax]
   14004393e:	add    BYTE PTR [rax],al
   140043940:	pop    rax
   140043941:	(bad)  
   140043942:	add    BYTE PTR [rax],al
   140043944:	add    DWORD PTR [rax],eax
   140043946:	add    BYTE PTR [rax],al
   140043948:	push   0xc4
   14004394d:	add    BYTE PTR [rax],al
   14004394f:	add    BYTE PTR [rbp-0x3c],dh
   140043952:	add    BYTE PTR [rax],al
   140043954:	(bad)  
   140043955:	(bad)  
   140043956:	(bad)  
   140043957:	call   FWORD PTR [rcx]
   140043959:	xor    al,0xb
   14004395b:	add    BYTE PTR [rsi],ah
   14004395d:	fs (bad) 
   14004395f:	add    BYTE PTR [rdx],ah
   140043961:	xor    al,0x1e
   140043963:	add    BYTE PTR [rsi],dl
   140043965:	add    DWORD PTR [rsi],edx
   140043967:	add    BYTE PTR [rbx],cl
   140043969:	lock or eax,esp
   14004396c:	(bad)  
   14004396d:	rol    BYTE PTR [rip+0x500470],0x0        # 0x140543de4
   140043974:	int3   
   140043975:	out    0x2,eax
   140043977:	add    BYTE PTR [rax-0x5dfffc28],dh
   14004397d:	add    BYTE PTR [rax],al
   14004397f:	add    bh,bh
   140043981:	(bad)  
   140043982:	(bad)  
   140043983:	push   rsp
   140043985:	hlt    
   140043986:	add    al,BYTE PTR [rax]
   140043988:	add    BYTE PTR [rax],al
   14004398a:	add    BYTE PTR [rax],al
   14004398c:	add    ch,dh
   14004398e:	add    al,BYTE PTR [rax]
   140043990:	add    DWORD PTR [rax],eax
   140043992:	add    BYTE PTR [rax],al
   140043994:	or     al,0xf5
   140043996:	add    al,BYTE PTR [rax]
   140043998:	add    al,BYTE PTR [rax]
   14004399a:	add    BYTE PTR [rax],al
   14004399c:	sbb    ch,dh
   14004399e:	add    al,BYTE PTR [rax]
   1400439a0:	mov    esp,0xff0000c4
   1400439a5:	(bad)  
   1400439a6:	(bad)  
   1400439a7:	inc    ebp
   1400439a9:	(bad)
   1400439ac:	add    BYTE PTR [rax],al
   1400439ae:	add    BYTE PTR [rax],al
   1400439b0:	ffree  st(5)
   1400439b2:	add    BYTE PTR [rax],al
   1400439b4:	add    DWORD PTR [rax],eax
   1400439b6:	add    BYTE PTR [rax],al
   1400439b8:	(bad)
   1400439bc:	add    al,BYTE PTR [rax]
   1400439be:	add    BYTE PTR [rax],al
   1400439c0:	mov    bh,al
   1400439c2:	add    BYTE PTR [rax],al
   1400439c4:	add    eax,DWORD PTR [rax]
   1400439c6:	add    BYTE PTR [rax],al
   1400439c8:	xchg   ebp,eax
   1400439c9:	mov    DWORD PTR [rax],0x200
   1400439cf:	add    BYTE PTR [rdi+0x10000c7],ah
   1400439d5:	add    BYTE PTR [rax],al
   1400439d7:	add    ch,al
   1400439d9:	mov    DWORD PTR [rax],0x200
   1400439df:	add    ch,cl
   1400439e1:	mov    DWORD PTR [rax],0x0
   1400439e7:	add    al,ch
   1400439e9:	mov    DWORD PTR [rax],0xffffff00
   1400439ef:	inc    DWORD PTR [rcx]
   1400439f1:	or     eax,DWORD PTR [rsi]
   1400439f3:	add    BYTE PTR [rbx],cl
   1400439f5:	xor    al,BYTE PTR [rdi]
   1400439f7:	loopne 0x1400439fe
   1400439f9:	jo     0x1400439ff
   1400439fb:	(bad)  
   1400439fc:	add    edx,DWORD PTR [rax+0x2]
   1400439ff:	xor    BYTE PTR [rcx],bl
   140043a01:	xor    al,0xb
   140043a03:	add    BYTE PTR [rsi],ah
   140043a05:	fs (bad) 
   140043a07:	add    BYTE PTR [rdx],ah
   140043a09:	xor    al,0x1e
   140043a0b:	add    BYTE PTR [rsi],dl
   140043a0d:	add    DWORD PTR [rsi],edx
   140043a0f:	add    BYTE PTR [rbx],cl
   140043a11:	lock or eax,esp
   140043a14:	(bad)  
   140043a15:	rol    BYTE PTR [rip+0x500470],0x0        # 0x140543e8c
   140043a1c:	int3   
   140043a1d:	out    0x2,eax
   140043a1f:	add    BYTE PTR [rax-0x55fffc28],cl
   140043a25:	add    BYTE PTR [rax],al
   140043a27:	add    bh,bh
   140043a29:	(bad)  
   140043a2a:	(bad)  
   140043a2b:	jmp    FWORD PTR [rdx]
   140043a2d:	cmc    
   140043a2e:	add    al,BYTE PTR [rax]
   140043a30:	add    BYTE PTR [rax],al
   140043a32:	add    BYTE PTR [rax],al
   140043a34:	ss cmc 
   140043a36:	add    al,BYTE PTR [rax]
   140043a38:	add    DWORD PTR [rax],eax
   140043a3a:	add    BYTE PTR [rax],al
   140043a3c:	rex.X cmc 
   140043a3e:	add    al,BYTE PTR [rax]
   140043a40:	add    al,BYTE PTR [rax]
   140043a42:	add    BYTE PTR [rax],al
   140043a44:	rex.WRX cmc 
   140043a46:	add    al,BYTE PTR [rax]
   140043a48:	add    eax,DWORD PTR [rax]
   140043a4a:	add    BYTE PTR [rax],al
   140043a4c:	pop    rdx
   140043a4d:	cmc    
   140043a4e:	add    al,BYTE PTR [rax]
   140043a50:	pop    rax
   140043a51:	leave  
   140043a52:	add    BYTE PTR [rax],al
   140043a54:	(bad)  
   140043a55:	(bad)  
   140043a56:	(bad)  
   140043a57:	call   FWORD PTR [rcx+0xc9]
   140043a5d:	add    BYTE PTR [rax],al
   140043a5f:	add    BYTE PTR [rsi],cl
   140043a61:	retf   0x0
   140043a64:	add    DWORD PTR [rax],eax
   140043a66:	add    BYTE PTR [rax],al
   140043a68:	es retf 0x0
   140043a6c:	add    al,BYTE PTR [rax]
   140043a6e:	add    BYTE PTR [rax],al
   140043a70:	rex.X retf 0x0
   140043a74:	add    eax,DWORD PTR [rax]
   140043a76:	add    BYTE PTR [rax],al
   140043a78:	fcmovne st,st(3)
   140043a7a:	add    BYTE PTR [rax],al
   140043a7c:	add    al,0x0
   140043a7e:	add    BYTE PTR [rax],al
   140043a80:	call   0x143043b50
   140043a85:	add    BYTE PTR [rax],al
   140043a87:	add    dl,bh
   140043a89:	retf   
   140043a8a:	add    BYTE PTR [rax],al
   140043a8c:	add    al,BYTE PTR [rax]
   140043a8e:	add    BYTE PTR [rax],al
   140043a90:	(bad)  
   140043a91:	int3   
   140043a92:	add    BYTE PTR [rax],al
   140043a94:	add    eax,DWORD PTR [rax]
   140043a96:	add    BYTE PTR [rax],al
   140043a98:	(bad)  
   140043a99:	int3   
   140043a9a:	add    BYTE PTR [rax],al
   140043a9c:	add    DWORD PTR [rax],eax
   140043a9e:	add    BYTE PTR [rax],al
   140043aa0:	cmp    esp,ecx
   140043aa2:	add    BYTE PTR [rax],al
   140043aa4:	add    BYTE PTR [rax],al
   140043aa6:	add    BYTE PTR [rax],al
   140043aa8:	push   rsp
   140043aa9:	int3   
   140043aaa:	add    BYTE PTR [rax],al
   140043aac:	(bad)  
   140043aad:	(bad)  
   140043aae:	(bad)  
   140043aaf:	inc    DWORD PTR [rcx]
   140043ab1:	or     al,BYTE PTR [rax+rax*1]
   140043ab4:	or     dh,BYTE PTR [rdi+rax*1]
   140043ab7:	add    BYTE PTR [rdx],cl
   140043ab9:	xor    al,BYTE PTR [rsi]
   140043abb:	jo     0x140043ad6
   140043abd:	sbb    al,0x6
   140043abf:	add    BYTE PTR [rsp+riz*2],bl
   140043ac2:	or     al,BYTE PTR [rax]
   140043ac4:	sbb    BYTE PTR [rcx+rcx*1],dh
   140043ac7:	add    BYTE PTR [rdx+rdx*2],cl
   140043aca:	or     BYTE PTR [rax-0x1a],dh
   140043acd:	loop   0x140043ad1
   140043acf:	add    BYTE PTR [rax-0x28],ah
   140043ad2:	add    eax,DWORD PTR [rax]
	...
   140043adc:	add    DWORD PTR [rax],eax
   140043ade:	add    BYTE PTR [rax],al
   140043ae0:	add    DWORD PTR [rax],eax
   140043ae2:	add    BYTE PTR [rax],al
   140043ae4:	call   0x180043f23
	...
   140043af1:	add    BYTE PTR [rax],al
   140043af3:	add    BYTE PTR [rbp+rsi*8+0x2],ch
   140043af7:	add    BYTE PTR [rax],bh
   140043af9:	add    BYTE PTR [rax],al
   140043afb:	add    BYTE PTR [rax],al
   140043afd:	add    BYTE PTR [rax],al
   140043aff:	add    BYTE PTR [rax-0xffff2f],bl
   140043b05:	(bad)  
   140043b06:	(bad)  
   140043b07:	inc    DWORD PTR [rdx+0xd2]
   140043b0d:	add    BYTE PTR [rax],al
   140043b0f:	add    BYTE PTR [rsi-0xffff2e],bl
   140043b15:	(bad)  
   140043b16:	(bad)  
   140043b17:	jmp    FWORD PTR [rbp+rsi*8+0x2]
   140043b1b:	add    BYTE PTR [rax],al
   140043b1d:	add    BYTE PTR [rax],al
   140043b1f:	add    BYTE PTR [rcx-0xb],bh
   140043b22:	add    al,BYTE PTR [rax]
   140043b24:	add    DWORD PTR [rax],eax
   140043b26:	add    BYTE PTR [rax],al
   140043b28:	sbb    DWORD PTR [rdx],ecx
   140043b2a:	add    al,BYTE PTR [rax]
   140043b2c:	or     dh,BYTE PTR [rdx]
   140043b2e:	(bad)  
   140043b2f:	push   rax
   140043b30:	out    0xe2,al
   140043b32:	add    al,BYTE PTR [rax]
   140043b34:	(bad)  
   140043b35:	fadd   DWORD PTR [rbx]
   140043b37:	add    BYTE PTR [rcx],bl
   140043b39:	sbb    eax,0x741d0008
   140043b3e:	or     eax,DWORD PTR [rax]
   140043b40:	sbb    DWORD PTR [rdx+rcx*1+0x0],esp
   140043b44:	adc    eax,0x9000834
   140043b49:	push   rdx
   140043b4a:	add    eax,0x2e2e6e0
   140043b4f:	add    BYTE PTR [rax],bh
   140043b51:	fadd   DWORD PTR [rbx]
	...
   140043b5b:	add    BYTE PTR [rcx],al
   140043b5d:	add    BYTE PTR [rax],al
   140043b5f:	add    BYTE PTR [rcx],al
   140043b61:	add    BYTE PTR [rax],al
   140043b63:	add    BYTE PTR [rax+0x3b],ch
   140043b66:	add    al,0x0
   140043b68:	add    BYTE PTR [rax],al
	...
   140043b73:	add    BYTE PTR [rdx+0x380002f5],dl
   140043b79:	add    BYTE PTR [rax],al
   140043b7b:	add    BYTE PTR [rax],al
   140043b7d:	add    BYTE PTR [rax],al
   140043b7f:	add    al,dl
   140043b81:	rol    BYTE PTR [rax],cl
   140043b83:	add    bh,bh
   140043b85:	(bad)  
   140043b86:	(bad)  
   140043b87:	jmp    QWORD PTR [rdi]
   140043b89:	rol    DWORD PTR [rax],cl
   140043b8b:	add    BYTE PTR [rax],al
   140043b8d:	add    BYTE PTR [rax],al
   140043b8f:	add    BYTE PTR [rcx-0x2d],al
   140043b92:	add    BYTE PTR [rax],al
   140043b94:	(bad)  
   140043b95:	(bad)  
   140043b96:	(bad)  
   140043b97:	call   QWORD PTR [rdx+0x2f5]
   140043b9d:	add    BYTE PTR [rax],al
   140043b9f:	add    BYTE PTR [rdi+0x10002f5],bl
   140043ba5:	add    BYTE PTR [rax],al
   140043ba7:	add    BYTE PTR [rcx],bl
   140043ba9:	or     al,BYTE PTR [rdx]
   140043bab:	add    BYTE PTR [rdx],cl
   140043bad:	xor    al,BYTE PTR [rsi]
   140043baf:	push   rax
   140043bb0:	out    0xe2,al
   140043bb2:	add    al,BYTE PTR [rax]
   140043bb4:	cmp    al,bl
   140043bb6:	add    eax,DWORD PTR [rax]
   140043bb8:	sbb    DWORD PTR [rax],esp
   140043bba:	or     al,BYTE PTR [rax]
   140043bbc:	and    BYTE PTR [rax+rdx*1+0x0],ah
   140043bc0:	sbb    al,0x34
   140043bc2:	(bad)  
   140043bc3:	add    BYTE PTR [rax],dl
   140043bc5:	jb     0x140043bd3
   140043bc7:	lock or ah,al
   140043bca:	or     al,dl
   140043bcc:	(bad)  
   140043bcd:	rol    BYTE PTR [rax+rsi*2],0xe6
   140043bd1:	loop   0x140043bd5
   140043bd3:	add    BYTE PTR [rax],dl
   140043bd5:	fadd   DWORD PTR [rbx]
	...
   140043bdf:	add    BYTE PTR [rcx],al
   140043be1:	add    BYTE PTR [rax],al
   140043be3:	add    BYTE PTR [rcx],al
   140043be5:	add    BYTE PTR [rax],al
   140043be7:	add    ah,ch
   140043be9:	cmp    eax,DWORD PTR [rax+rax*1]
   140043bec:	add    BYTE PTR [rax],al
	...
   140043bf7:	add    BYTE PTR [rax+0x480002f5],bh
   140043bfd:	add    BYTE PTR [rax],al
   140043bff:	add    BYTE PTR [rax-0xffff2d],ah
   140043c05:	(bad)  
   140043c06:	(bad)  
   140043c07:	inc    DWORD PTR [rcx]
   140043c09:	(bad)  
   140043c0a:	add    BYTE PTR [rax],al
   140043c0c:	add    BYTE PTR [rax],al
   140043c0e:	add    BYTE PTR [rax],al
   140043c10:	adc    esp,edx
   140043c12:	add    BYTE PTR [rax],al
   140043c14:	(bad)  
   140043c15:	(bad)  
   140043c16:	(bad)  
   140043c17:	(bad)  
   140043c18:	mov    eax,0x2f5
   140043c1d:	add    BYTE PTR [rax],al
   140043c1f:	add    ch,al
   140043c21:	cmc    
   140043c22:	add    al,BYTE PTR [rax]
   140043c24:	add    DWORD PTR [rax],eax
   140043c26:	add    BYTE PTR [rax],al
   140043c28:	sbb    DWORD PTR [rdx],ecx
   140043c2a:	add    al,BYTE PTR [rax]
   140043c2c:	or     dl,BYTE PTR [rdx+0x6]
   140043c2f:	push   rax
   140043c30:	out    0xe2,al
   140043c32:	add    al,BYTE PTR [rax]
   140043c34:	adc    al,bl
   140043c36:	add    eax,DWORD PTR [rax]
   140043c38:	sbb    DWORD PTR [rcx],ebx
   140043c3a:	(bad)  
   140043c3b:	add    BYTE PTR [rax],dl
   140043c3d:	push   rdx
   140043c3e:	or     al,0xf0
   140043c40:	or     ah,al
   140043c42:	or     BYTE PTR [rax+0x7],dh
   140043c45:	(bad)  
   140043c46:	(bad)  
   140043c47:	xor    dh,ah
   140043c49:	loop   0x140043c4d
   140043c4b:	add    al,ch
   140043c4d:	xlat   BYTE PTR ds:[rbx]
   140043c4e:	add    eax,DWORD PTR [rax]
	...
   140043c58:	add    DWORD PTR [rax],eax
   140043c5a:	add    BYTE PTR [rax],al
   140043c5c:	add    DWORD PTR [rax],eax
   140043c5e:	add    BYTE PTR [rax],al
   140043c60:	fs cmp al,0x4
   140043c63:	add    BYTE PTR [rax+0x0],al
	...
   140043c6e:	add    BYTE PTR [rax],al
   140043c70:	fdivrp st(5),st
   140043c72:	add    al,BYTE PTR [rax]
   140043c74:	cmp    BYTE PTR [rax],al
   140043c76:	add    BYTE PTR [rax],al
   140043c78:	nop
   140043c79:	(bad)  
   140043c7a:	add    BYTE PTR [rax],al
   140043c7c:	(bad)  
   140043c7d:	(bad)  
   140043c7e:	(bad)  
   140043c7f:	dec    esi
   140043c81:	(bad)  
   140043c82:	add    BYTE PTR [rax],al
   140043c84:	add    BYTE PTR [rax],al
   140043c86:	add    BYTE PTR [rax],al
   140043c88:	adc    edx,ebp
   140043c8a:	add    BYTE PTR [rax],al
   140043c8c:	(bad)  
   140043c8d:	(bad)  
   140043c8e:	(bad)  
   140043c8f:	(bad)  
   140043c90:	fdivrp st(5),st
   140043c92:	add    al,BYTE PTR [rax]
   140043c94:	add    BYTE PTR [rax],al
   140043c96:	add    BYTE PTR [rax],al
   140043c98:	sbb    DWORD PTR [rdx],ecx
   140043c9a:	add    al,BYTE PTR [rax]
   140043c9c:	or     dh,BYTE PTR [rdx]
   140043c9e:	(bad)  
   140043c9f:	push   rax
   140043ca0:	out    0xe2,al
   140043ca2:	add    al,BYTE PTR [rax]
   140043ca4:	call   0x141044080
   140043ca9:	adc    al,0x6
   140043cab:	add    BYTE PTR [rsp+riz*2],dl
   140043cae:	(bad)  
   140043caf:	add    BYTE PTR [rsp+rsi*1],dl
   140043cb2:	(bad)  
   140043cb3:	add    BYTE PTR [rdx+rsi*1],dl
   140043cb6:	adc    BYTE PTR [rax+0x19],dh
   140043cb9:	adc    al,0x4
   140043cbb:	add    BYTE PTR [rsp+rsi*1],dl
   140043cbe:	or     BYTE PTR [rax],al
   140043cc0:	(bad)  
   140043cc1:	push   rdx
   140043cc2:	add    ah,BYTE PTR [rax-0x1a]
   140043cc5:	loop   0x140043cc9
   140043cc7:	add    al,al
   140043cc9:	xlat   BYTE PTR ds:[rbx]
   140043cca:	add    eax,DWORD PTR [rax]
   140043ccc:	(bad)  
   140043ccd:	(bad)  
   140043cce:	(bad)  
   140043ccf:	inc    DWORD PTR [rax]
   140043cd1:	add    BYTE PTR [rax],al
   140043cd3:	add    BYTE PTR [rax],al
   140043cd5:	add    BYTE PTR [rax],al
   140043cd7:	add    bh,bh
   140043cd9:	cmc    
   140043cda:	add    al,BYTE PTR [rax]
   140043cdc:	add    DWORD PTR [rax],eax
   140043cde:	add    BYTE PTR [rax],al
   140043ce0:	(bad)  
   140043ce1:	test   BYTE PTR [rdx],0x0
   140043ce4:	(bad)  
   140043ce5:	(bad)  
   140043ce6:	(bad)  
   140043ce7:	inc    DWORD PTR [rax]
   140043ce9:	add    BYTE PTR [rax],al
   140043ceb:	add    BYTE PTR [rax],al
   140043ced:	add    BYTE PTR [rax],al
   140043cef:	add    BYTE PTR [rdx],al
   140043cf1:	add    BYTE PTR [rax],al
   140043cf3:	add    BYTE PTR [rbx],al
   140043cf5:	add    BYTE PTR [rax],al
   140043cf7:	add    BYTE PTR [rcx],al
   140043cf9:	add    BYTE PTR [rax],al
   140043cfb:	add    BYTE PTR [rax],al
   140043cfd:	cmp    eax,0x90004
   140043d02:	add    BYTE PTR [rax],al
   140043d04:	push   rax
   140043d05:	call   0x1402c3d0e
   140043d0a:	add    BYTE PTR [rax],al
   140043d0c:	sub    dh,dh
   140043d0e:	add    al,BYTE PTR [rax]
   140043d10:	cmp    BYTE PTR [rax],al
	...
   140043d1e:	add    BYTE PTR [rax],al
   140043d20:	or     dh,dl
   140043d22:	add    BYTE PTR [rax],al
   140043d24:	(bad)  
   140043d25:	(bad)  
   140043d26:	(bad)  
   140043d27:	call   FWORD PTR [rdi]
   140043d29:	(bad)  
   140043d2a:	add    BYTE PTR [rax],al
   140043d2c:	add    BYTE PTR [rax],al
   140043d2e:	add    BYTE PTR [rax],al
   140043d30:	xor    dl,dh
   140043d32:	add    BYTE PTR [rax],al
   140043d34:	add    DWORD PTR [rax],eax
   140043d36:	add    BYTE PTR [rax],al
   140043d38:	cmp    edx,esi
   140043d3a:	add    BYTE PTR [rax],al
   140043d3c:	add    al,BYTE PTR [rax]
   140043d3e:	add    BYTE PTR [rax],al
   140043d40:	lods   eax,DWORD PTR ds:[rsi]
   140043d41:	(bad)  
   140043d42:	add    BYTE PTR [rax],al
   140043d44:	add    DWORD PTR [rax],eax
   140043d46:	add    BYTE PTR [rax],al
   140043d48:	mov    cl,0xd6
   140043d4a:	add    BYTE PTR [rax],al
   140043d4c:	add    BYTE PTR [rax],al
   140043d4e:	add    BYTE PTR [rax],al
   140043d50:	int    0xd6
   140043d52:	add    BYTE PTR [rax],al
   140043d54:	(bad)  
   140043d55:	(bad)  
   140043d56:	(bad)  
   140043d57:	dec    edi
   140043d59:	(bad)  
   140043d5a:	add    BYTE PTR [rax],al
   140043d5c:	add    BYTE PTR [rax],al
   140043d5e:	add    BYTE PTR [rax],al
   140043d60:	(bad)  
   140043d61:	(bad)  
   140043d62:	add    BYTE PTR [rax],al
   140043d64:	(bad)  
   140043d65:	(bad)  
   140043d66:	(bad)  
   140043d67:	jmp    rax
   140043d69:	(bad)  
   140043d6a:	add    BYTE PTR [rax],al
   140043d6c:	add    BYTE PTR [rax],al
   140043d6e:	add    BYTE PTR [rax],al
   140043d70:	(bad)  
   140043d71:	test   BYTE PTR [rdx],0x0
   140043d74:	add    eax,DWORD PTR [rax]
   140043d76:	add    BYTE PTR [rax],al
   140043d78:	rex.XB test BYTE PTR [r10],0x0
   140043d7c:	add    BYTE PTR [rax],al
   140043d7e:	add    BYTE PTR [rax],al
   140043d80:	sbb    DWORD PTR [rdx],ecx
   140043d82:	add    al,BYTE PTR [rax]
   140043d84:	or     dh,BYTE PTR [rdx]
   140043d86:	(bad)  
   140043d87:	push   rax
   140043d88:	out    0xe2,al
   140043d8a:	add    al,BYTE PTR [rax]
   140043d8c:	rcl    bh,0x3
   140043d8f:	add    BYTE PTR [rcx],bl
   140043d91:	and    BYTE PTR [rsi],al
   140043d93:	add    BYTE PTR [rax],ah
   140043d95:	or     DWORD PTR fs:[rax],eax
   140043d98:	sbb    al,0x34
   140043d9a:	or     BYTE PTR [rax],al
   140043d9c:	adc    BYTE PTR [rdx+0xc],dl
   140043d9f:	jo     0x140043d87
   140043da1:	loop   0x140043da5
   140043da3:	add    BYTE PTR [rax+0x3d7],bl
   140043da9:	add    BYTE PTR [rax],al
   140043dab:	add    BYTE PTR [rax],al
   140043dad:	add    BYTE PTR [rax],al
   140043daf:	add    BYTE PTR [rcx],al
   140043db1:	add    BYTE PTR [rax],al
   140043db3:	add    BYTE PTR [rcx],al
   140043db5:	add    BYTE PTR [rax],al
   140043db7:	add    BYTE PTR [rbp+rdi*1+0x400004],bh
	...
   140043dc6:	add    BYTE PTR [rax],al
   140043dc8:	push   rdi
   140043dc9:	test   BYTE PTR [rdx],0x0
   140043dcc:	rex.W add BYTE PTR [rax],al
   140043dcf:	add    ah,dh
   140043dd1:	(bad)  
   140043dd2:	add    BYTE PTR [rax],al
   140043dd4:	(bad)  
   140043dd5:	(bad)  
   140043dd6:	(bad)  
   140043dd7:	jmp    QWORD PTR [rdx]
   140043dd9:	xlat   BYTE PTR ds:[rbx]
   140043dda:	add    BYTE PTR [rax],al
   140043ddc:	add    BYTE PTR [rax],al
   140043dde:	add    BYTE PTR [rax],al
   140043de0:	rex.R xlat BYTE PTR ds:[rbx]
   140043de2:	add    BYTE PTR [rax],al
   140043de4:	(bad)  
   140043de5:	(bad)  
   140043de6:	(bad)  
   140043de7:	call   QWORD PTR [rdi-0xa]
   140043dea:	add    al,BYTE PTR [rax]
   140043dec:	add    BYTE PTR [rax],al
   140043dee:	add    BYTE PTR [rax],al
   140043df0:	test   BYTE PTR gs:[rdx],0x0
   140043df4:	add    DWORD PTR [rax],eax
   140043df6:	add    BYTE PTR [rax],al
   140043df8:	sbb    DWORD PTR [rbx],ecx
   140043dfa:	add    eax,DWORD PTR [rax]
   140043dfc:	or     eax,DWORD PTR [rdx+0x7]
   140043dff:	push   rax
   140043e00:	(bad)  
   140043e01:	xor    BYTE PTR [rax],al
   140043e03:	add    dh,ah
   140043e05:	loop   0x140043e09
   140043e07:	add    BYTE PTR [rax+0x190003d7],bl
   140043e0d:	and    al,BYTE PTR [rsi]
   140043e0f:	add    BYTE PTR [rdx],bl
   140043e11:	push   rdx
   140043e12:	(bad)  
   140043e13:	lock adc al,0xe0
   140043e16:	adc    dh,BYTE PTR [rax+0x11]
   140043e19:	(bad)  
   140043e1a:	adc    BYTE PTR [rax],dh
   140043e1c:	out    0xe2,al
   140043e1e:	add    al,BYTE PTR [rax]
   140043e20:	jo     0x140043df9
   140043e22:	add    eax,DWORD PTR [rax]
	...
   140043e2c:	add    eax,DWORD PTR [rax]
   140043e2e:	add    BYTE PTR [rax],al
   140043e30:	add    DWORD PTR [rax],eax
   140043e32:	add    BYTE PTR [rax],al
   140043e34:	rex.WR
   140043e35:	ds add al,0x0
   140043e38:	add    al,BYTE PTR [rax]
   140043e3a:	add    BYTE PTR [rax],al
   140043e3c:	add    al,BYTE PTR [rax]
   140043e3e:	add    BYTE PTR [rax],al
   140043e40:	add    eax,DWORD PTR [rax]
   140043e42:	add    BYTE PTR [rax],al
   140043e44:	add    DWORD PTR [rax],eax
   140043e46:	add    BYTE PTR [rax],al
   140043e48:	(bad)  
   140043e49:	ds add al,0x0
   140043e4c:	add    BYTE PTR [rax],al
	...
   140043e57:	add    BYTE PTR [rdi+0x380002f6],ah
   140043e5d:	add    BYTE PTR [rax],al
   140043e5f:	add    BYTE PTR [rax+0x0],al
	...
   140043e6a:	add    BYTE PTR [rax],al
   140043e6c:	hlt    
   140043e6d:	test   BYTE PTR [rdx],0x0
   140043e70:	cmp    BYTE PTR [rax],al
	...
   140043e7e:	add    BYTE PTR [rax],al
   140043e80:	sbb    cl,bl
   140043e82:	add    BYTE PTR [rax],al
   140043e84:	(bad)  
   140043e85:	(bad)  
   140043e86:	(bad)  
   140043e87:	dec    DWORD PTR [rcx+rbx*8+0x0]
   140043e8e:	add    BYTE PTR [rax],al
   140043e90:	mov    esp,0xff0000d9
   140043e95:	(bad)  
   140043e96:	(bad)  
   140043e97:	jmp    QWORD PTR [rdi+0x2f6]
   140043e9d:	add    BYTE PTR [rax],al
   140043e9f:	add    BYTE PTR [rsi+rsi*8+0x10002],dh
   140043ea6:	add    BYTE PTR [rax],al
   140043ea8:	mov    esp,0x20002f6
   140043ead:	add    BYTE PTR [rax],al
   140043eaf:	add    dh,ah
   140043eb1:	test   BYTE PTR [rdx],0x0
   140043eb4:	add    BYTE PTR [rax],al
   140043eb6:	add    BYTE PTR [rax],al
   140043eb8:	add    edi,esi
   140043eba:	add    al,BYTE PTR [rax]
   140043ebc:	add    eax,DWORD PTR [rax]
   140043ebe:	add    BYTE PTR [rax],al
   140043ec0:	sbb    DWORD PTR [rdx],ecx
   140043ec2:	add    al,BYTE PTR [rax]
   140043ec4:	or     dh,BYTE PTR [rdx]
   140043ec6:	(bad)  
   140043ec7:	push   rax
   140043ec8:	out    0xe2,al
   140043eca:	add    al,BYTE PTR [rax]
   140043ecc:	jo     0x140043ea5
   140043ece:	add    eax,DWORD PTR [rax]
   140043ed0:	adc    DWORD PTR [rcx],ebx
   140043ed2:	(bad)  
   140043ed3:	add    BYTE PTR [rcx],bl
   140043ed5:	or     al,BYTE PTR fs:[rax]
   140043ed8:	adc    al,0x34
   140043eda:	or     DWORD PTR [rax],eax
   140043edc:	(bad)  
   140043edd:	push   rdx
   140043ede:	add    dh,BYTE PTR [rax-0x1a]
   140043ee1:	loop   0x140043ee5
   140043ee3:	add    BYTE PTR [rax-0x29],cl
   140043ee6:	add    eax,DWORD PTR [rax]
   140043ee8:	(bad)  
   140043ee9:	(bad)  
   140043eea:	(bad)  
   140043eeb:	call   FWORD PTR [rdi]
   140043eed:	test   DWORD PTR [rdx],0xdd3800
   140043ef3:	add    bh,bh
   140043ef5:	(bad)  
   140043ef6:	(bad)  
   140043ef7:	jmp    QWORD PTR [rsi-0x23]
   140043efa:	add    BYTE PTR [rax],al
   140043efc:	add    BYTE PTR [rax],al
   140043efe:	add    BYTE PTR [rax],al
   140043f00:	ja     0x140043edf
   140043f02:	add    BYTE PTR [rax],al
   140043f04:	(bad)  
   140043f05:	(bad)  
   140043f06:	(bad)  
   140043f07:	call   FWORD PTR [rcx]
   140043f09:	sbb    BYTE PTR [rax+rax*1],al
   140043f0c:	sbb    BYTE PTR [rcx+rcx*1],dh
   140043f0f:	add    BYTE PTR [rdx],cl
   140043f11:	push   rdx
   140043f12:	(bad)  
   140043f13:	jo     0x140043efb
   140043f15:	loop   0x140043f19
   140043f17:	add    BYTE PTR [rax],ah
   140043f19:	xlat   BYTE PTR ds:[rbx]
   140043f1a:	add    eax,DWORD PTR [rax]
	...
   140043f24:	add    DWORD PTR [rax],eax
   140043f26:	add    BYTE PTR [rax],al
   140043f28:	add    DWORD PTR [rax],eax
   140043f2a:	add    BYTE PTR [rax],al
   140043f2c:	xor    BYTE PTR [rdi],bh
   140043f2e:	add    al,0x0
   140043f30:	add    BYTE PTR [rax],al
	...
   140043f3b:	add    BYTE PTR [rcx],dh
   140043f3d:	test   DWORD PTR [rdx],0x3800
   140043f43:	add    BYTE PTR [rax],al
   140043f45:	add    BYTE PTR [rax],al
   140043f47:	add    al,dl
   140043f49:	fiadd  WORD PTR [rax]
   140043f4b:	add    bh,bh
   140043f4d:	(bad)  
   140043f4e:	(bad)  
   140043f4f:	dec    DWORD PTR [rax]
   140043f51:	fild   WORD PTR [rax]
   140043f53:	add    BYTE PTR [rax],al
   140043f55:	add    BYTE PTR [rax],al
   140043f57:	add    BYTE PTR [rdi],dl
   140043f59:	fild   WORD PTR [rax]
   140043f5b:	add    bh,bh
   140043f5d:	(bad)  
   140043f5e:	(bad)  
   140043f5f:	push   QWORD PTR [rcx]
   140043f61:	test   DWORD PTR [rdx],0x0
   140043f67:	add    BYTE PTR [rsi],bh
   140043f69:	test   DWORD PTR [rdx],0x100
   140043f6f:	add    BYTE PTR [rcx],bl
   140043f71:	or     al,BYTE PTR [rdx]
   140043f73:	add    BYTE PTR [rdx],cl
   140043f75:	xor    al,BYTE PTR [rsi]
   140043f77:	push   rax
   140043f78:	out    0xe2,al
   140043f7a:	add    al,BYTE PTR [rax]
   140043f7c:	and    bh,dl
   140043f7e:	add    eax,DWORD PTR [rax]
   140043f80:	sbb    DWORD PTR [rip+0x62040001],ecx        # 0x1a2083f87
   140043f86:	add    BYTE PTR [rax],al
   140043f88:	out    0xe2,al
   140043f8a:	add    al,BYTE PTR [rax]
   140043f8c:	clc    
   140043f8d:	(bad)  
   140043f8e:	add    eax,DWORD PTR [rax]
	...
   140043f98:	add    DWORD PTR [rax],eax
   140043f9a:	add    BYTE PTR [rax],al
   140043f9c:	add    DWORD PTR [rax],eax
   140043f9e:	add    BYTE PTR [rax],al
   140043fa0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140043fa1:	(bad)  
   140043fa2:	add    al,0x0
   140043fa4:	add    BYTE PTR [rax],al
	...
   140043faf:	add    BYTE PTR [rdi-0x9],dl
   140043fb2:	add    al,BYTE PTR [rax]
   140043fb4:	cmp    BYTE PTR [rax],al
   140043fb6:	add    BYTE PTR [rax],al
   140043fb8:	sub    bh,bl
   140043fba:	add    BYTE PTR [rax],al
   140043fbc:	(bad)  
   140043fbd:	(bad)  
   140043fbe:	(bad)  
   140043fbf:	push   QWORD PTR [rip+0xdf]        # 0x1400440a4
   140043fc5:	add    BYTE PTR [rax],al
   140043fc7:	add    BYTE PTR [rdi-0x21],cl
   140043fca:	add    BYTE PTR [rax],al
   140043fcc:	(bad)  
   140043fcd:	(bad)  
   140043fce:	(bad)  
   140043fcf:	call   QWORD PTR [rdi-0x9]
   140043fd2:	add    al,BYTE PTR [rax]
   140043fd4:	add    BYTE PTR [rax],al
   140043fd6:	add    BYTE PTR [rax],al
   140043fd8:	test   DWORD PTR fs:[rdx],0x100
   140043fdf:	add    BYTE PTR [rcx],bl
   140043fe1:	or     al,BYTE PTR [rdx]
   140043fe3:	add    BYTE PTR [rdx],cl
   140043fe5:	xor    al,BYTE PTR [rsi]
   140043fe7:	push   rax
   140043fe8:	out    0xe2,al
   140043fea:	add    al,BYTE PTR [rax]
   140043fec:	clc    
   140043fed:	(bad)  
   140043fee:	add    eax,DWORD PTR [rax]
   140043ff0:	sbb    DWORD PTR [rip+0x62040001],ecx        # 0x1a2083ff7
   140043ff6:	add    BYTE PTR [rax],al
   140043ff8:	out    0xe2,al
   140043ffa:	add    al,BYTE PTR [rax]
   140043ffc:	rcl    dh,1
   140043ffe:	add    eax,DWORD PTR [rax]
	...
   140044008:	add    DWORD PTR [rax],eax
   14004400a:	add    BYTE PTR [rax],al
   14004400c:	add    DWORD PTR [rax],eax
   14004400e:	add    BYTE PTR [rax],al
   140044010:	adc    al,0x40
   140044012:	add    al,0x0
   140044014:	add    BYTE PTR [rax],al
	...
   14004401f:	add    BYTE PTR [rdi+rsi*8+0x2],dh
   140044023:	add    BYTE PTR [rax],bh
   140044025:	add    BYTE PTR [rax],al
   140044027:	add    BYTE PTR [rdi+rbx*8+0x0],bl
   14004402b:	add    bh,bh
   14004402d:	(bad)  
   14004402e:	(bad)  
   14004402f:	jmp    FWORD PTR [rcx-0x21]
   140044032:	add    BYTE PTR [rax],al
   140044034:	add    BYTE PTR [rax],al
   140044036:	add    BYTE PTR [rax],al
   140044038:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140044039:	fild   WORD PTR [rax]
   14004403b:	add    bh,bh
   14004403d:	(bad)  
   14004403e:	(bad)  
   14004403f:	push   QWORD PTR [rdi+rsi*8+0x2]
   140044043:	add    BYTE PTR [rax],al
   140044045:	add    BYTE PTR [rax],al
   140044047:	add    BYTE PTR [rcx+0x10002f7],al
   14004404d:	add    BYTE PTR [rax],al
   14004404f:	add    BYTE PTR [rcx],bl
   140044051:	or     al,BYTE PTR [rdx]
   140044053:	add    BYTE PTR [rdx],cl
   140044055:	xor    al,BYTE PTR [rsi]
   140044057:	push   rax
   140044058:	out    0xe2,al
   14004405a:	add    al,BYTE PTR [rax]
   14004405c:	rcl    dh,1
   14004405e:	add    eax,DWORD PTR [rax]
   140044060:	sbb    DWORD PTR [rdx],esp
   140044062:	or     BYTE PTR [rax],al
   140044064:	sbb    DWORD PTR [rdx+0x15],esi
   140044067:	lock adc esp,eax
   14004406a:	adc    eax,edx
   14004406c:	xadd   BYTE PTR [rip+0xb600c70],cl        # 0x14b644ce3
   140044073:	xor    dh,ah
   140044075:	loop   0x140044079
   140044077:	add    BYTE PTR [rax-0xfffc2a],ch
   14004407d:	(bad)  
   14004407e:	(bad)  
   14004407f:	inc    DWORD PTR [rax]
   140044081:	add    BYTE PTR [rax],al
   140044083:	add    bh,bh
   140044085:	(bad)  
   140044086:	(bad)  
   140044087:	inc    DWORD PTR [rax]
   140044089:	add    BYTE PTR [rax],al
   14004408b:	add    bh,bh
   14004408d:	(bad)  
   14004408e:	(bad)  
   14004408f:	inc    DWORD PTR [rax]
   140044091:	add    BYTE PTR [rax],al
   140044093:	add    bh,bh
   140044095:	(bad)  
   140044096:	(bad)  
   140044097:	inc    DWORD PTR [rax]
	...
   1400440a1:	add    BYTE PTR [rax],al
   1400440a3:	add    BYTE PTR [rcx],al
   1400440a5:	add    BYTE PTR [rax],al
   1400440a7:	add    BYTE PTR [rcx],al
   1400440a9:	add    BYTE PTR [rax],al
   1400440ab:	add    ah,al
   1400440ad:	add    al,0x0
   1400440b0:	add    al,BYTE PTR [rax]
   1400440b2:	add    BYTE PTR [rax],al
   1400440b4:	add    al,BYTE PTR [rax]
   1400440b6:	add    BYTE PTR [rax],al
   1400440b8:	add    eax,DWORD PTR [rax]
   1400440ba:	add    BYTE PTR [rax],al
   1400440bc:	add    DWORD PTR [rax],eax
   1400440be:	add    BYTE PTR [rax],al
   1400440c0:	fadd   DWORD PTR [rax+0x4]
   1400440c3:	add    BYTE PTR [rax+0x0],al
	...
   1400440ce:	add    BYTE PTR [rax],al
   1400440d0:	xchg   ecx,eax
   1400440d1:	test   DWORD PTR [rdx],0x4800
   1400440d7:	add    BYTE PTR [rax+0x0],al
	...
   1400440e2:	add    BYTE PTR [rax],al
   1400440e4:	mov    ah,0xf7
   1400440e6:	add    al,BYTE PTR [rax]
   1400440e8:	rex.W add BYTE PTR [rax],al
   1400440eb:	add    BYTE PTR [rax],al
   1400440ed:	add    BYTE PTR [rax],al
   1400440ef:	add    BYTE PTR [rdi+rbx*8-0x10000],dh
   1400440f6:	(bad)  
   1400440f7:	jmp    QWORD PTR [rax+0xe0]
   1400440fd:	add    BYTE PTR [rax],al
   1400440ff:	add    cl,ah
   140044101:	loopne 0x140044103
   140044103:	add    bh,bh
   140044105:	(bad)  
   140044106:	(bad)  
   140044107:	call   FWORD PTR [rcx-0x1f]
   14004410a:	add    BYTE PTR [rax],al
   14004410c:	add    al,BYTE PTR [rax]
   14004410e:	add    BYTE PTR [rax],al
   140044110:	and    cl,0x0
   140044113:	add    bh,bh
   140044115:	(bad)  
   140044116:	(bad)  
   140044117:	call   QWORD PTR [rcx+0x2f7]
   14004411d:	add    BYTE PTR [rax],al
   14004411f:	add    BYTE PTR [rsi+0x10002f7],bl
   140044125:	add    BYTE PTR [rax],al
   140044127:	add    BYTE PTR [rdi+rsi*8+0x2],dh
   14004412e:	add    BYTE PTR [rax],al
   140044130:	shl    edi,0x2
   140044133:	add    BYTE PTR [rbx],al
   140044135:	add    BYTE PTR [rax],al
   140044137:	add    BYTE PTR [rcx],bl
   140044139:	or     al,BYTE PTR [rdx]
   14004413b:	add    BYTE PTR [rdx],cl
   14004413d:	push   rdx
   14004413e:	(bad)  
   14004413f:	push   rax
   140044140:	out    0xe2,al
   140044142:	add    al,BYTE PTR [rax]
   140044144:	test   al,0xd6
   140044146:	add    eax,DWORD PTR [rax]
   140044148:	add    DWORD PTR [rbx],ecx
   14004414a:	add    DWORD PTR [rax],eax
   14004414c:	or     esp,DWORD PTR [rdx+0x12010000]
   140044152:	add    al,0x0
   140044154:	adc    dh,BYTE PTR [rdx+rdx*1]
   140044157:	add    BYTE PTR [rdx],dl
   140044159:	repnz or esp,DWORD PTR [rax+0x1]
   14004415d:	adc    al,BYTE PTR [rip+0x1a341200]        # 0x15a385363
   140044163:	add    BYTE PTR [rdx],dl
   140044165:	add    DWORD PTR [rax],ebx
   140044167:	add    BYTE PTR [rbx],cl
   140044169:	jo     0x14004416b
   14004416b:	add    BYTE PTR [rcx],al
   14004416d:	or     eax,DWORD PTR [rcx]
   14004416f:	add    BYTE PTR [rbx],cl
   140044171:	ret    0x0
   140044174:	add    DWORD PTR [rdi],ebx
   140044176:	or     eax,0x24641f00
   14004417b:	add    BYTE PTR [rdi],bl
   14004417d:	push   rsp
   14004417e:	and    eax,DWORD PTR [rax]
   140044180:	(bad)  
   140044181:	xor    al,0x22
   140044183:	add    BYTE PTR [rdi],bl
   140044185:	add    DWORD PTR [rax+rax*1],ebx
   140044188:	sbb    al,dh
   14004418a:	(bad)  
   14004418b:	loopne 0x1400441a1
   14004418d:	rcl    BYTE PTR [rdx],1
   14004418f:	rcl    BYTE PTR [rax],0x70
   140044192:	add    BYTE PTR [rax],al
   140044194:	adc    DWORD PTR [rsi],esp
   140044196:	or     eax,DWORD PTR [rax]
   140044198:	es sbb al,BYTE PTR fs:[rax]
   14004419c:	and    dh,BYTE PTR [rcx+rbx*1]
   14004419f:	add    BYTE PTR [rsi],dl
   1400441a1:	add    DWORD PTR [rdx],edx
   1400441a3:	add    BYTE PTR [rbx],cl
   1400441a5:	lock or eax,esp
   1400441a8:	(bad)  
   1400441a9:	rol    BYTE PTR [rip+0x500470],0x0        # 0x140544620
   1400441b0:	out    0xe2,al
   1400441b2:	add    al,BYTE PTR [rax]
   1400441b4:	(bad)  
   1400441b5:	fld    QWORD PTR [rbx]
   1400441b7:	add    bh,bh
   1400441b9:	(bad)  
   1400441ba:	(bad)  
   1400441bb:	call   rcx
   1400441bd:	test   DWORD PTR [rdx],0x0
   1400441c3:	add    ch,bl
   1400441c5:	test   DWORD PTR [rdx],0x100
   1400441cb:	add    cl,ch
   1400441cd:	test   DWORD PTR [rdx],0x200
   1400441d3:	add    ch,dh
   1400441d5:	test   DWORD PTR [rdx],0x300
   1400441db:	add    BYTE PTR [rcx],al
   1400441dd:	clc    
   1400441de:	add    al,BYTE PTR [rax]
   1400441e0:	fsub   st(2),st
   1400441e2:	add    BYTE PTR [rax],al
   1400441e4:	(bad)  
   1400441e5:	(bad)  
   1400441e6:	(bad)  
   1400441e7:	call   QWORD PTR [rdi-0x15]
   1400441ea:	add    BYTE PTR [rax],al
   1400441ec:	add    BYTE PTR [rax],al
   1400441ee:	add    BYTE PTR [rax],al
   1400441f0:	shr    bl,cl
   1400441f2:	add    BYTE PTR [rax],al
   1400441f4:	add    DWORD PTR [rax],eax
   1400441f6:	add    BYTE PTR [rax],al
   1400441f8:	out    dx,al
   1400441f9:	jmp    0x1400441fb
   1400441fb:	add    BYTE PTR [rdx],al
   1400441fd:	add    BYTE PTR [rax],al
   1400441ff:	add    BYTE PTR [rsp+rbp*8],cl
   140044202:	add    BYTE PTR [rax],al
   140044204:	add    eax,DWORD PTR [rax]
   140044206:	add    BYTE PTR [rax],al
   140044208:	sub    eax,0x40000ec
   14004420d:	add    BYTE PTR [rax],al
   14004420f:	add    BYTE PTR [rcx-0x14],cl
   140044212:	add    BYTE PTR [rax],al
   140044214:	add    eax,DWORD PTR [rax]
   140044216:	add    BYTE PTR [rax],al
   140044218:	push   0x20000ec
   14004421d:	add    BYTE PTR [rax],al
   14004421f:	add    BYTE PTR [rbx+0x10000ec],al
   140044225:	add    BYTE PTR [rax],al
   140044227:	add    BYTE PTR [rbp+0xec],cl
   14004422d:	add    BYTE PTR [rax],al
   14004422f:	add    BYTE PTR [rdi-0xffff14],ch
   140044235:	(bad)  
   140044236:	(bad)  
   140044237:	call   QWORD PTR [rcx]
   140044239:	and    ecx,DWORD PTR [rdx]
   14004423b:	add    BYTE PTR [rbx],ah
   14004423d:	je     0x140044250
   14004423f:	add    BYTE PTR [rdi],bl
   140044241:	adc    BYTE PTR fs:[rax],al
   140044244:	sbb    esi,DWORD PTR [rsi+rcx*1]
   140044247:	add    BYTE PTR [rdi],cl
   140044249:	xchg   edx,eax
   14004424a:	or     al,dh
   14004424c:	(bad)  
   14004424d:	loopne 0x140044253
   14004424f:	push   rax
   140044250:	out    0xe2,al
   140044252:	add    al,BYTE PTR [rax]
   140044254:	cmp    ch,bl
   140044256:	add    eax,DWORD PTR [rax]
   140044258:	(bad)  
   140044259:	(bad)  
   14004425a:	(bad)  
   14004425b:	call   QWORD PTR [rbx]
   14004425d:	clc    
   14004425e:	add    al,BYTE PTR [rax]
   140044260:	(bad)  
   140044261:	in     al,dx
   140044262:	add    BYTE PTR [rax],al
   140044264:	(bad)  
   140044265:	(bad)  
   140044266:	(bad)  
   140044267:	call   QWORD PTR [rdi+0xed]
   14004426d:	add    BYTE PTR [rax],al
   14004426f:	add    BYTE PTR [rdi-0x11],dh
   140044272:	add    BYTE PTR [rax],al
   140044274:	(bad)  
   140044275:	(bad)  
   140044276:	(bad)  
   140044277:	call   FWORD PTR [rcx]
   140044279:	xor    ecx,DWORD PTR [rbx]
   14004427b:	add    BYTE PTR [rcx],ah
   14004427d:	xor    al,0x1c
   14004427f:	add    BYTE PTR [rip+0xe001201],dl        # 0x14e045486
   140044285:	lock or al,0xe0
   140044288:	or     dl,al
   14004428a:	or     al,al
   14004428c:	(bad)  
   14004428d:	jo     0x140044294
   14004428f:	(bad)  
   140044290:	add    al,0x50
   140044292:	add    BYTE PTR [rax],al
   140044294:	int3   
   140044295:	out    0x2,eax
   140044297:	add    BYTE PTR [rax],dl
   140044299:	fld    QWORD PTR [rbx]
   14004429b:	add    BYTE PTR [rdx-0x1000000],al
   1400442a1:	(bad)  
   1400442a2:	(bad)  
   1400442a3:	jmp    QWORD PTR [rip+0xfffffffff80002f8]        # 0x1380445a1
   1400442a9:	out    dx,eax
   1400442aa:	add    BYTE PTR [rax],al
   1400442ac:	(bad)  
   1400442ad:	(bad)  
   1400442ae:	(bad)  
   1400442af:	inc    DWORD PTR [rbp-0xe]
   1400442b2:	add    BYTE PTR [rax],al
   1400442b4:	add    BYTE PTR [rax],al
   1400442b6:	add    BYTE PTR [rax],al
   1400442b8:	xchg   edi,eax
   1400442b9:	repnz add BYTE PTR [rax],al
   1400442bc:	(bad)  
   1400442bd:	(bad)  
   1400442be:	(bad)  
   1400442bf:	call   QWORD PTR [rcx]
   1400442c1:	sub    DWORD PTR [rbx],ecx
   1400442c3:	add    BYTE PTR [rcx],ch
   1400442c5:	xor    al,0x1f
   1400442c7:	add    BYTE PTR [rip+0x12001601],bl        # 0x1520458ce
   1400442cd:	lock adc al,ah
   1400442d0:	(bad)  
   1400442d1:	ror    BYTE PTR [rax+rax*8],1
   1400442d4:	or     dh,BYTE PTR [rax+0x9]
   1400442d7:	(bad)  
   1400442d8:	or     BYTE PTR [rax+0x0],dl
   1400442db:	add    dh,ah
   1400442dd:	loop   0x1400442e1
   1400442df:	add    al,ch
   1400442e1:	fadd   QWORD PTR [rbx]
   1400442e3:	add    bh,bh
   1400442e5:	(bad)  
   1400442e6:	(bad)  
   1400442e7:	push   QWORD PTR [rdi]
   1400442e9:	clc    
   1400442ea:	add    al,BYTE PTR [rax]
   1400442ec:	add    BYTE PTR [rax],al
   1400442ee:	add    BYTE PTR [rax],al
   1400442f0:	rex.XB clc 
   1400442f2:	add    al,BYTE PTR [rax]
   1400442f4:	add    BYTE PTR [rax],al
   1400442f6:	add    BYTE PTR [rax],al
   1400442f8:	shl    ah,1
   1400442fa:	add    BYTE PTR [rax],al
   1400442fc:	(bad)  
   1400442fd:	(bad)  
   1400442fe:	(bad)  
   1400442ff:	jmp    QWORD PTR [rax]
   140044301:	cmc    
   140044302:	add    BYTE PTR [rax],al
   140044304:	add    BYTE PTR [rax],al
   140044306:	add    BYTE PTR [rax],al
   140044308:	add    eax,0x10000f8
   14004430d:	add    BYTE PTR [rax],al
   14004430f:	add    BYTE PTR [rax+rdi*8],bh
   140044312:	add    BYTE PTR [rax],al
   140044314:	add    BYTE PTR [rax],al
   140044316:	add    BYTE PTR [rax],al
   140044318:	or     ebx,edi
   14004431a:	add    BYTE PTR [rax],al
   14004431c:	(bad)  
   14004431d:	(bad)  
   14004431e:	(bad)  
   14004431f:	call   QWORD PTR [rcx]
   140044321:	adc    al,0x4
   140044323:	add    BYTE PTR [rsp+rsi*1],dl
   140044326:	or     DWORD PTR [rax],eax
   140044328:	(bad)  
   140044329:	push   rdx
   14004432a:	add    dh,BYTE PTR [rax-0x1a]
   14004432d:	loop   0x140044331
   14004432f:	add    al,al
   140044331:	fadd   QWORD PTR [rbx]
   140044333:	add    BYTE PTR [rax],al
   140044335:	add    BYTE PTR [rax],al
   140044337:	add    BYTE PTR [rax-0x5],dl
   14004433a:	add    BYTE PTR [rax],al
   14004433c:	(bad)  
   14004433d:	(bad)  
   14004433e:	(bad)  
   14004433f:	dec    DWORD PTR [rbx+rdi*8+0x0]
   140044346:	add    BYTE PTR [rax],al
   140044348:	mov    dl,0xfb
   14004434a:	add    BYTE PTR [rax],al
   14004434c:	(bad)  
   14004434d:	(bad)  
   14004434e:	(bad)  
   14004434f:	call   QWORD PTR [rcx]
   140044351:	lar    eax,WORD PTR [rax]
   140044354:	(bad)  
   140044355:	push   rdx
   140044356:	add    dh,BYTE PTR [rax]
   140044358:	out    0xe2,al
   14004435a:	add    al,BYTE PTR [rax]
   14004435c:	cwde   
   14004435d:	fadd   QWORD PTR [rbx]
   14004435f:	add    al,ah
   140044361:	sti    
   140044362:	add    BYTE PTR [rax],al
   140044364:	(bad)  
   140044365:	(bad)  
   140044366:	(bad)  
   140044367:	call   FWORD PTR [rbx]
   140044369:	cld    
   14004436a:	add    BYTE PTR [rax],al
   14004436c:	add    BYTE PTR [rax],al
   14004436e:	add    BYTE PTR [rax],al
   140044370:	cmp    esp,edi
   140044372:	add    BYTE PTR [rax],al
   140044374:	(bad)  
   140044375:	(bad)  
   140044376:	(bad)  
   140044377:	call   QWORD PTR [rcx]
   140044379:	sbb    BYTE PTR [rsi],al
   14004437b:	add    BYTE PTR [rax],bl
   14004437d:	or     eax,DWORD PTR fs:[rax]
   140044380:	adc    al,0x34
   140044382:	or     al,BYTE PTR [rax]
   140044384:	or     BYTE PTR [rdx+0x4],dl
   140044387:	jo     0x14004436f
   140044389:	loop   0x14004438d
   14004438b:	add    BYTE PTR [rax-0x24],dh
   14004438e:	add    eax,DWORD PTR [rax]
   140044390:	(bad)  
   140044391:	(bad)  
   140044392:	(bad)  
   140044393:	call   QWORD PTR [rbp-0x8]
   140044396:	add    al,BYTE PTR [rax]
   140044398:	add    BYTE PTR [rax],al
   14004439a:	add    BYTE PTR [rax],al
   14004439c:	(bad)  
   14004439d:	clc    
   14004439e:	add    al,BYTE PTR [rax]
   1400443a0:	(bad)  
   1400443a1:	cld    
   1400443a2:	add    BYTE PTR [rax],al
   1400443a4:	(bad)  
   1400443a5:	(bad)  
   1400443a6:	(bad)  
   1400443a7:	call   QWORD PTR [rdi+0xfc]
   1400443ad:	add    BYTE PTR [rax],al
   1400443af:	add    ch,bl
   1400443b1:	cld    
   1400443b2:	add    BYTE PTR [rax],al
   1400443b4:	add    DWORD PTR [rax],eax
   1400443b6:	add    BYTE PTR [rax],al
   1400443b8:	(bad)  
   1400443b9:	cld    
   1400443ba:	add    BYTE PTR [rax],al
   1400443bc:	add    BYTE PTR [rax],al
   1400443be:	add    BYTE PTR [rax],al
   1400443c0:	(bad)  
   1400443c1:	std    
   1400443c2:	add    BYTE PTR [rax],al
   1400443c4:	(bad)  
   1400443c5:	(bad)  
   1400443c6:	(bad)  
   1400443c7:	inc    DWORD PTR [rcx]
   1400443c9:	sbb    DWORD PTR [rdx],ecx
   1400443cb:	add    BYTE PTR [rcx],bl
   1400443cd:	je     0x1400443da
   1400443cf:	add    BYTE PTR [rcx],bl
   1400443d1:	or     al,BYTE PTR fs:[rax]
   1400443d4:	sbb    DWORD PTR [rcx+rcx*1+0x0],edx
   1400443d8:	sbb    DWORD PTR [rax+rcx*1],esi
   1400443db:	add    BYTE PTR [rcx],bl
   1400443dd:	push   rdx
   1400443de:	adc    eax,0x82a19e0
   1400443e3:	add    BYTE PTR [rdx],ah
   1400443e5:	mov    dl,0x1e
   1400443e7:	lock sbb al,0xe0
   1400443ea:	sbb    dl,al
   1400443ec:	sbb    al,al
   1400443ee:	(bad)  
   1400443ef:	jo     0x140044406
   1400443f1:	(bad)  
   1400443f2:	adc    al,0x30
   1400443f4:	out    0xe2,al
   1400443f6:	add    al,BYTE PTR [rax]
   1400443f8:	rex.W fadd QWORD PTR [rbx]
   1400443fb:	add    bh,bh
   1400443fd:	(bad)  
   1400443fe:	(bad)  
   1400443ff:	push   QWORD PTR [rbx-0x8]
   140044402:	add    al,BYTE PTR [rax]
   140044404:	add    BYTE PTR [rax],al
   140044406:	add    BYTE PTR [rax],al
   140044408:	jg     0x140044402
   14004440a:	add    al,BYTE PTR [rax]
   14004440c:	add    DWORD PTR [rax],eax
   14004440e:	add    BYTE PTR [rax],al
   140044410:	mov    edi,eax
   140044412:	add    al,BYTE PTR [rax]
   140044414:	add    al,BYTE PTR [rax]
   140044416:	add    BYTE PTR [rax],al
   140044418:	add    BYTE PTR [rax],al
   14004441a:	add    BYTE PTR [rax],al
   14004441c:	add    al,BYTE PTR [rax]
   14004441e:	add    BYTE PTR [rax],al
   140044420:	add    BYTE PTR [rax],al
   140044422:	add    BYTE PTR [rax],al
   140044424:	add    eax,DWORD PTR [rax]
   140044426:	add    BYTE PTR [rax],al
   140044428:	add    eax,DWORD PTR [rax]
   14004442a:	add    BYTE PTR [rax],al
   14004442c:	add    al,0x0
   14004442e:	add    BYTE PTR [rax],al
   140044430:	add    DWORD PTR [rax],eax
   140044432:	add    BYTE PTR [rax],al
   140044434:	cmp    BYTE PTR [rsp+rax*1+0x0],al
   140044438:	or     BYTE PTR [rax],al
   14004443a:	add    BYTE PTR [rax],al
   14004443c:	push   rax
   14004443d:	call   0x1405c4446
   140044442:	add    BYTE PTR [rax],al
   140044444:	xchg   edi,eax
   140044445:	clc    
   140044446:	add    al,BYTE PTR [rax]
   140044448:	rex.W add BYTE PTR [rax],al
   14004444b:	add    BYTE PTR [rax],al
   14004444d:	add    BYTE PTR [rax],al
   14004444f:	add    al,al
   140044451:	std    
   140044452:	add    BYTE PTR [rax],al
   140044454:	(bad)  
   140044455:	(bad)  
   140044456:	(bad)  
   140044457:	(bad)  
   140044458:	stc    
   140044459:	std    
   14004445a:	add    BYTE PTR [rax],al
   14004445c:	add    BYTE PTR [rax],al
   14004445e:	add    BYTE PTR [rax],al
   140044460:	(bad)  
   140044461:	inc    BYTE PTR [rax]
   140044463:	add    bh,bh
   140044465:	(bad)  
   140044466:	(bad)  
   140044467:	dec    DWORD PTR [rax-0x2]
   14004446a:	add    BYTE PTR [rax],al
   14004446c:	add    BYTE PTR [rax],al
   14004446e:	add    BYTE PTR [rax],al
   140044470:	xor    eax,0x10000ff
   140044475:	add    BYTE PTR [rax],al
   140044477:	add    ah,bl
   140044479:	inc    DWORD PTR [rax]
   14004447b:	add    BYTE PTR [rax],al
   14004447d:	add    BYTE PTR [rax],al
   14004447f:	add    BYTE PTR [rdx],bl
   140044481:	add    BYTE PTR [rcx],al
   140044483:	add    bh,bh
   140044485:	(bad)  
   140044486:	(bad)  
   140044487:	dec    DWORD PTR [rcx+0x0]
   14004448a:	add    DWORD PTR [rax],eax
   14004448c:	add    al,BYTE PTR [rax]
   14004448e:	add    BYTE PTR [rax],al
   140044490:	(bad)  
   140044491:	add    DWORD PTR [rcx],eax
   140044493:	add    BYTE PTR [rbx],al
   140044495:	add    BYTE PTR [rax],al
   140044497:	add    BYTE PTR [rsi],bh
   140044499:	add    DWORD PTR [rcx],eax
   14004449b:	add    BYTE PTR [rdx],al
   14004449d:	add    BYTE PTR [rax],al
   14004449f:	add    BYTE PTR [rsi+0x1],bl
   1400444a2:	add    DWORD PTR [rax],eax
   1400444a4:	add    DWORD PTR [rax],eax
   1400444a6:	add    BYTE PTR [rax],al
   1400444a8:	add    DWORD PTR [rcx],0x1
   1400444ab:	add    BYTE PTR [rax],al
   1400444ad:	add    BYTE PTR [rax],al
   1400444af:	add    BYTE PTR [rdi+0x2000101],bl
   1400444b5:	add    BYTE PTR [rax],al
   1400444b7:	add    ch,dl
   1400444b9:	add    DWORD PTR [rcx],eax
   1400444bb:	add    BYTE PTR [rax],al
   1400444bd:	add    BYTE PTR [rax],al
   1400444bf:	add    BYTE PTR [rsi],cl
   1400444c1:	add    al,BYTE PTR [rcx]
   1400444c3:	add    bh,bh
   1400444c5:	(bad)  
   1400444c6:	(bad)  
   1400444c7:	call   QWORD PTR [rdi+0x2f8]
   1400444cd:	add    BYTE PTR [rax],al
   1400444cf:	add    BYTE PTR [rsi+0x40002f8],ah
   1400444d5:	add    BYTE PTR [rax],al
   1400444d7:	add    al,bh
   1400444d9:	clc    
   1400444da:	add    al,BYTE PTR [rax]
   1400444dc:	add    BYTE PTR [rax],al
   1400444de:	add    BYTE PTR [rax],al
   1400444e0:	sbb    DWORD PTR [rsp+rax*1],ecx
   1400444e3:	add    BYTE PTR [rdx+rsi*1],cl
   1400444e6:	or     BYTE PTR [rax+0x7],dh
   1400444e9:	push   rax
   1400444ea:	(bad)  
   1400444eb:	xor    dh,ah
   1400444ed:	loop   0x1400444f1
   1400444ef:	add    BYTE PTR [rax-0x24],cl
   1400444f2:	add    eax,DWORD PTR [rax]
   1400444f4:	sbb    DWORD PTR [rdx+rcx*1],esp
   1400444f7:	add    BYTE PTR [rsp+riz*2],ah
   1400444fa:	adc    al,BYTE PTR [rax]
   1400444fc:	and    BYTE PTR [rcx+rdx*1],dh
   1400444ff:	add    BYTE PTR [rdx+rdx*4],dl
   140044502:	adc    al,dh
   140044504:	(bad)  
   140044505:	loopne 0x140044513
   140044507:	ror    BYTE PTR [rdx],1
   140044509:	ror    BYTE PTR [rax],0x70
   14004450c:	out    0xe2,al
   14004450e:	add    al,BYTE PTR [rax]
   140044510:	and    ah,bl
   140044512:	add    eax,DWORD PTR [rax]
   140044514:	(bad)  
   140044515:	(bad)  
   140044516:	(bad)  
   140044517:	dec    DWORD PTR [rsi]
   140044519:	stc    
   14004451a:	add    al,BYTE PTR [rax]
	...
   140044530:	mov    edi,ecx
   140044532:	add    al,BYTE PTR [rax]
   140044534:	add    DWORD PTR [rax],eax
   140044536:	add    BYTE PTR [rax],al
   140044538:	add    DWORD PTR [rax],eax
   14004453a:	add    BYTE PTR [rax],al
   14004453c:	add    al,BYTE PTR [rax]
   14004453e:	add    BYTE PTR [rax],al
   140044540:	add    DWORD PTR [rax],eax
   140044542:	add    BYTE PTR [rax],al
   140044544:	rex.W
   140044545:	rex.RB add al,0x0
   140044548:	or     BYTE PTR [rax],al
   14004454a:	add    BYTE PTR [rax],al
   14004454c:	push   rax
   14004454d:	call   0x1402c4556
   140044552:	add    BYTE PTR [rax],al
   140044554:	sbb    bh,cl
   140044556:	add    al,BYTE PTR [rax]
   140044558:	rex.W add BYTE PTR [rax],al
   14004455b:	add    BYTE PTR [rax],al
   14004455d:	add    BYTE PTR [rax],al
   14004455f:	add    BYTE PTR [rax+0x2],dl
   140044562:	add    DWORD PTR [rax],eax
   140044564:	(bad)  
   140044565:	(bad)  
   140044566:	(bad)  
   140044567:	inc    DWORD PTR [rdi+0x102]
   14004456d:	add    BYTE PTR [rax],al
   14004456f:	add    BYTE PTR [rbx-0xfffefe],ch
   140044575:	(bad)  
   140044576:	(bad)  
   140044577:	call   rsi
   140044579:	add    al,BYTE PTR [rcx]
   14004457b:	add    BYTE PTR [rax],al
   14004457d:	add    BYTE PTR [rax],al
   14004457f:	add    BYTE PTR [rbx+rax*1+0x1],dh
   140044583:	add    BYTE PTR [rcx],al
   140044585:	add    BYTE PTR [rax],al
   140044587:	add    BYTE PTR [rcx+0x103],dl
   14004458d:	add    BYTE PTR [rax],al
   14004458f:	add    dl,dl
   140044591:	add    eax,DWORD PTR [rcx]
   140044593:	add    BYTE PTR [rbx],al
   140044595:	add    BYTE PTR [rax],al
   140044597:	add    bh,ch
   140044599:	add    eax,DWORD PTR [rcx]
   14004459b:	add    BYTE PTR [rax],al
   14004459d:	add    BYTE PTR [rax],al
   14004459f:	add    cl,bh
   1400445a1:	add    eax,DWORD PTR [rcx]
   1400445a3:	add    bh,bh
   1400445a5:	(bad)  
   1400445a6:	(bad)  
   1400445a7:	call   FWORD PTR [rdx]
   1400445a9:	stc    
   1400445aa:	add    al,BYTE PTR [rax]
   1400445ac:	add    BYTE PTR [rax],al
   1400445ae:	add    BYTE PTR [rax],al
   1400445b0:	sub    ecx,edi
   1400445b2:	add    al,BYTE PTR [rax]
   1400445b4:	add    al,BYTE PTR [rax]
   1400445b6:	add    BYTE PTR [rax],al
   1400445b8:	jnp    0x1400445b3
   1400445ba:	add    al,BYTE PTR [rax]
   1400445bc:	add    BYTE PTR [rax],al
   1400445be:	add    BYTE PTR [rax],al
   1400445c0:	sbb    DWORD PTR [rsp+rax*1],ecx
   1400445c3:	add    BYTE PTR [rdx+rsi*1],cl
   1400445c6:	or     BYTE PTR [rax+0x7],dh
   1400445c9:	push   rax
   1400445ca:	(bad)  
   1400445cb:	xor    dh,ah
   1400445cd:	loop   0x1400445d1
   1400445cf:	add    BYTE PTR [rax],ah
   1400445d1:	fadd   QWORD PTR [rbx]
   1400445d3:	add    BYTE PTR [rcx],dl
   1400445d5:	(bad)  
   1400445d6:	or     al,BYTE PTR [rax]
   1400445d8:	(bad)  
   1400445d9:	push   rsp
   1400445da:	adc    BYTE PTR [rax],al
   1400445dc:	sbb    esi,DWORD PTR [rsi+rcx*1]
   1400445df:	add    BYTE PTR [rdi],cl
   1400445e1:	jb     0x1400445ee
   1400445e3:	lock or eax,esp
   1400445e6:	(bad)  
   1400445e7:	rol    BYTE PTR [rip+0xffffffffe6600470],0xe2        # 0x126644a5e
   1400445ee:	add    al,BYTE PTR [rax]
   1400445f0:	clc    
   1400445f1:	fild   DWORD PTR [rbx]
   1400445f3:	add    bh,bh
   1400445f5:	(bad)  
   1400445f6:	(bad)  
   1400445f7:	call   FWORD PTR [rbp+0x2f9]
   1400445fd:	add    BYTE PTR [rax],al
   1400445ff:	add    BYTE PTR [rax-0xfffefc],bl
   140044605:	(bad)  
   140044606:	(bad)  
   140044607:	jmp    QWORD PTR [rdi]
   140044609:	add    eax,0x1
   14004460e:	add    BYTE PTR [rax],al
   140044610:	scas   eax,DWORD PTR es:[rdi]
   140044611:	add    eax,0xffff0001
   140044616:	(bad)  
   140044617:	call   FWORD PTR [rcx]
   140044619:	or     DWORD PTR cs:[rax],eax
   14004461c:	adc    eax,DWORD PTR [rcx]
   14004461e:	sbb    BYTE PTR [rax],al
   140044620:	or     al,0xf0
   140044622:	or     ah,al
   140044624:	or     al,dl
   140044626:	(bad)  
   140044627:	rol    BYTE PTR [rax+rsi*2],0x3
   14004462b:	(bad)  
   14004462c:	add    dh,BYTE PTR [rax]
   14004462e:	add    BYTE PTR [rax],al
   140044630:	int3   
   140044631:	out    0x2,eax
   140044633:	add    al,dl
   140044635:	fild   DWORD PTR [rbx]
   140044637:	add    BYTE PTR [rbx-0x1000000],bh
   14004463d:	(bad)  
   14004463e:	(bad)  
   14004463f:	jmp    FWORD PTR [rdi+0x2f9]
   140044645:	add    BYTE PTR [rax],al
   140044647:	add    BYTE PTR [rbx+0x10002f9],bh
   14004464d:	add    BYTE PTR [rax],al
   14004464f:	add    bh,al
   140044651:	stc    
   140044652:	add    al,BYTE PTR [rax]
   140044654:	add    DWORD PTR [rax],eax
   140044656:	add    BYTE PTR [rax],al
   140044658:	add    BYTE PTR [rax],al
   14004465a:	add    BYTE PTR [rax],al
   14004465c:	add    DWORD PTR [rax],eax
   14004465e:	add    BYTE PTR [rax],al
   140044660:	add    BYTE PTR [rax],al
   140044662:	add    BYTE PTR [rax],al
   140044664:	add    DWORD PTR [rax],eax
   140044666:	add    BYTE PTR [rax],al
   140044668:	add    BYTE PTR [rax],al
   14004466a:	add    BYTE PTR [rax],al
   14004466c:	add    DWORD PTR [rax],eax
   14004466e:	add    BYTE PTR [rax],al
   140044670:	add    BYTE PTR [rax],al
   140044672:	add    BYTE PTR [rax],al
   140044674:	add    eax,DWORD PTR [rax]
   140044676:	add    BYTE PTR [rax],al
   140044678:	add    eax,DWORD PTR [rax]
   14004467a:	add    BYTE PTR [rax],al
   14004467c:	add    al,0x0
   14004467e:	add    BYTE PTR [rax],al
   140044680:	add    DWORD PTR [rax],eax
   140044682:	add    BYTE PTR [rax],al
   140044684:	pushf  
   140044685:	rex.RX add al,0x0
   140044688:	add    eax,0x5000000
   14004468d:	add    BYTE PTR [rax],al
   14004468f:	add    BYTE PTR [rsi],al
   140044691:	add    BYTE PTR [rax],al
   140044693:	add    BYTE PTR [rcx],al
   140044695:	add    BYTE PTR [rax],al
   140044697:	add    BYTE PTR [rax+0x8000446],dh
   14004469d:	add    BYTE PTR [rax],al
   14004469f:	add    BYTE PTR [rax-0x18],dl
   1400446a2:	add    al,0x0
   1400446a4:	add    BYTE PTR [rax],0x0
   1400446a7:	add    bl,dl
   1400446a9:	stc    
   1400446aa:	add    al,BYTE PTR [rax]
   1400446ac:	pop    rax
   1400446ad:	add    BYTE PTR [rax],al
   1400446af:	add    BYTE PTR [rcx],cl
   1400446b1:	add    BYTE PTR [rax],al
   1400446b3:	add    BYTE PTR [rax-0x18],dl
   1400446b6:	add    al,0x0
   1400446b8:	js     0x1400446ba
   1400446ba:	add    BYTE PTR [rax],al
   1400446bc:	rex.RXB cli 
   1400446be:	add    al,BYTE PTR [rax]
   1400446c0:	pop    rax
	...
   1400446cd:	add    BYTE PTR [rax],al
   1400446cf:	add    ah,ch
   1400446d1:	add    eax,0xffff0001
   1400446d6:	(bad)  
   1400446d7:	jmp    FWORD PTR [rbx+0x6]
   1400446da:	add    DWORD PTR [rax],eax
   1400446dc:	add    BYTE PTR [rax],al
   1400446de:	add    BYTE PTR [rax],al
   1400446e0:	test   al,0x6
   1400446e2:	add    DWORD PTR [rax],eax
   1400446e4:	add    DWORD PTR [rax],eax
   1400446e6:	add    BYTE PTR [rax],al
   1400446e8:	lea    eax,[rdi]
   1400446ea:	add    DWORD PTR [rax],eax
   1400446ec:	add    al,BYTE PTR [rax]
   1400446ee:	add    BYTE PTR [rax],al
   1400446f0:	mov    al,0x7
   1400446f2:	add    DWORD PTR [rax],eax
   1400446f4:	add    DWORD PTR [rax],eax
   1400446f6:	add    BYTE PTR [rax],al
   1400446f8:	and    BYTE PTR [rax],cl
   1400446fa:	add    DWORD PTR [rax],eax
   1400446fc:	add    eax,DWORD PTR [rax]
   1400446fe:	add    BYTE PTR [rax],al
   140044700:	cmp    BYTE PTR [rax],cl
   140044702:	add    DWORD PTR [rax],eax
   140044704:	add    DWORD PTR [rax],eax
   140044706:	add    BYTE PTR [rax],al
   140044708:	(bad)  
   140044709:	or     BYTE PTR [rcx],al
   14004470b:	add    BYTE PTR [rip+0x75000000],al        # 0x1b5044711
   140044711:	or     BYTE PTR [rcx],al
   140044713:	add    BYTE PTR [rcx],al
   140044715:	add    BYTE PTR [rax],al
   140044717:	add    BYTE PTR [rcx+0x8],bh
   14004471a:	add    DWORD PTR [rax],eax
   14004471c:	add    BYTE PTR [rax],al
   14004471e:	add    BYTE PTR [rax],al
   140044720:	scas   al,BYTE PTR es:[rdi]
   140044721:	or     BYTE PTR [rcx],al
   140044723:	add    bh,bh
   140044725:	(bad)  
   140044726:	(bad)  
   140044727:	call   rbx
   140044729:	stc    
   14004472a:	add    al,BYTE PTR [rax]
   14004472c:	add    BYTE PTR [rax],al
   14004472e:	add    BYTE PTR [rax],al
   140044730:	loop   0x14004472b
   140044732:	add    al,BYTE PTR [rax]
   140044734:	add    al,0x0
   140044736:	add    BYTE PTR [rax],al
   140044738:	(bad)  
   140044739:	cli    
   14004473a:	add    al,BYTE PTR [rax]
   14004473c:	add    BYTE PTR [rax],al
   14004473e:	add    BYTE PTR [rax],al
   140044740:	push   rsi
   140044741:	cli    
   140044742:	add    al,BYTE PTR [rax]
   140044744:	(bad)  
   140044745:	add    BYTE PTR [rax],al
   140044747:	add    BYTE PTR [rax+0x2fa],ch
   14004474d:	add    BYTE PTR [rax],al
   14004474f:	add    BYTE PTR [rcx],bl
   140044751:	or     al,0x4
   140044753:	add    BYTE PTR [rdx+rdx*2],cl
   140044756:	or     BYTE PTR [rax+0x7],dh
   140044759:	push   rax
   14004475a:	(bad)  
   14004475b:	xor    dh,ah
   14004475d:	loop   0x140044761
   14004475f:	add    al,dl
   140044761:	fild   DWORD PTR [rbx]
   140044763:	add    BYTE PTR [rcx],dl
   140044765:	sub    ecx,DWORD PTR [rip+0x29742b00]        # 0x16978726b
   14004476b:	add    BYTE PTR [rdi],ah
   14004476d:	fs (bad) 
   14004476f:	add    BYTE PTR [rbx],ah
   140044771:	xor    al,0x26
   140044773:	add    BYTE PTR [rdi],dl
   140044775:	add    DWORD PTR [rax],esp
   140044777:	add    BYTE PTR [rax+rsi*8],cl
   14004477a:	or     ah,al
   14004477c:	or     al,dl
   14004477e:	(bad)  
   14004477f:	rol    BYTE PTR [rax+rdx*2],0x0
   140044783:	add    dh,ah
   140044785:	loop   0x140044789
   140044787:	add    BYTE PTR [rax-0xfffc25],ch
   14004478d:	(bad)  
   14004478e:	(bad)  
   14004478f:	(bad)  
   140044790:	mov    esi,0x2fa
   140044795:	add    BYTE PTR [rax],al
   140044797:	add    dl,cl
   140044799:	cli    
   14004479a:	add    al,BYTE PTR [rax]
   14004479c:	add    DWORD PTR [rax],eax
   14004479e:	add    BYTE PTR [rax],al
   1400447a0:	(bad)  
   1400447a1:	cli    
   1400447a2:	add    al,BYTE PTR [rax]
   1400447a4:	add    al,BYTE PTR [rax]
   1400447a6:	add    BYTE PTR [rax],al
   1400447a8:	loop   0x1400447a4
   1400447aa:	add    al,BYTE PTR [rax]
   1400447ac:	add    eax,DWORD PTR [rax]
   1400447ae:	add    BYTE PTR [rax],al
   1400447b0:	out    dx,al
   1400447b1:	cli    
   1400447b2:	add    al,BYTE PTR [rax]
   1400447b4:	add    al,0x0
   1400447b6:	add    BYTE PTR [rax],al
   1400447b8:	cli    
   1400447b9:	cli    
   1400447ba:	add    al,BYTE PTR [rax]
   1400447bc:	add    eax,0x6000000
   1400447c1:	sti    
   1400447c2:	add    al,BYTE PTR [rax]
	...
   1400447d0:	cmp    al,0x9
   1400447d2:	add    DWORD PTR [rax],eax
   1400447d4:	(bad)  
   1400447d5:	(bad)  
   1400447d6:	(bad)  
   1400447d7:	(bad)  
   1400447d8:	(bad)  [rcx]
   1400447da:	add    DWORD PTR [rax],eax
   1400447dc:	add    BYTE PTR [rax],al
   1400447de:	add    BYTE PTR [rax],al
   1400447e0:	fisttp QWORD PTR [rcx]
   1400447e2:	add    DWORD PTR [rax],eax
   1400447e4:	add    DWORD PTR [rax],eax
   1400447e6:	add    BYTE PTR [rax],al
   1400447e8:	cmp    ecx,DWORD PTR [rdx]
   1400447ea:	add    DWORD PTR [rax],eax
   1400447ec:	add    al,BYTE PTR [rax]
   1400447ee:	add    BYTE PTR [rax],al
   1400447f0:	ret    0x10a
   1400447f3:	add    BYTE PTR [rbx],al
   1400447f5:	add    BYTE PTR [rax],al
   1400447f7:	add    cl,dh
   1400447f9:	or     al,BYTE PTR [rcx]
   1400447fb:	add    BYTE PTR [rax+rax*1],al
   1400447fe:	add    BYTE PTR [rax],al
   140044800:	cmc    
   140044801:	or     al,BYTE PTR [rcx]
   140044803:	add    BYTE PTR [rip+0x42000000],al        # 0x182044809
   140044809:	or     al,0x1
   14004480b:	add    BYTE PTR [rsi],al
   14004480d:	add    BYTE PTR [rax],al
   14004480f:	add    BYTE PTR [rsi+0xd],dh
   140044812:	add    DWORD PTR [rax],eax
   140044814:	add    eax,0x81000000
   140044819:	or     eax,0x40001
   14004481e:	add    BYTE PTR [rax],al
   140044820:	mov    WORD PTR [rip+0x30001],cs        # 0x140074827
   140044826:	add    BYTE PTR [rax],al
   140044828:	xchg   edi,eax
   140044829:	or     eax,0x20001
   14004482e:	add    BYTE PTR [rax],al
   140044830:	movabs ds:0xad0000000100010d,al
   140044839:	or     eax,0x1
   14004483e:	add    BYTE PTR [rax],al
   140044840:	mov    eax,0xff00010d
   140044845:	(bad)  
   140044846:	(bad)  
   140044847:	inc    DWORD PTR [rcx]
   140044849:	sbb    DWORD PTR [rdx],ecx
   14004484b:	add    BYTE PTR [rcx],bl
   14004484d:	je     0x14004485c
   14004484f:	add    BYTE PTR [rcx],bl
   140044851:	fs or  al,0x0
   140044854:	sbb    DWORD PTR [rbx+rcx*1+0x0],edx
   140044858:	sbb    DWORD PTR [rdx+rcx*1],esi
   14004485b:	add    BYTE PTR [rcx],bl
   14004485d:	jb     0x140044874
   14004485f:	loopne 0x14004487a
   140044861:	sbb    DWORD PTR [rsi],eax
   140044863:	add    BYTE PTR [rax],dl
   140044865:	push   rdx
   140044866:	or     al,0xf0
   140044868:	or     ah,al
   14004486a:	or     BYTE PTR [rax+0x7],dh
   14004486d:	(bad)  
   14004486e:	(bad)  
   14004486f:	xor    dh,ah
   140044871:	loop   0x140044875
   140044873:	add    BYTE PTR [rax+0x3db],al
   140044879:	add    BYTE PTR [rax],al
   14004487b:	add    BYTE PTR [rax],al
   14004487d:	add    BYTE PTR [rax],al
   14004487f:	add    BYTE PTR [rcx],al
   140044881:	add    BYTE PTR [rax],al
   140044883:	add    BYTE PTR [rcx],al
   140044885:	add    BYTE PTR [rax],al
   140044887:	add    BYTE PTR [rax+rcx*2+0x400004],cl
	...
   140044896:	add    BYTE PTR [rax],al
   140044898:	sbb    bl,bh
   14004489a:	add    al,BYTE PTR [rax]
   14004489c:	cmp    BYTE PTR [rax],al
   14004489e:	add    BYTE PTR [rax],al
   1400448a0:	sbb    al,0x12
   1400448a2:	add    DWORD PTR [rax],eax
   1400448a4:	(bad)  
   1400448a5:	(bad)  
   1400448a6:	(bad)  
   1400448a7:	call   FWORD PTR [rdx+rdx*1+0x1]
   1400448ab:	add    BYTE PTR [rax],al
   1400448ad:	add    BYTE PTR [rax],al
   1400448af:	add    BYTE PTR [rbx+rdx*1+0x1],al
   1400448b3:	add    bh,bh
   1400448b5:	(bad)  
   1400448b6:	(bad)  
   1400448b7:	call   FWORD PTR [rax]
   1400448b9:	sti    
   1400448ba:	add    al,BYTE PTR [rax]
   1400448bc:	add    BYTE PTR [rax],al
   1400448be:	add    BYTE PTR [rax],al
   1400448c0:	sbb    DWORD PTR [rdx],ecx
   1400448c2:	add    al,BYTE PTR [rax]
   1400448c4:	or     dh,BYTE PTR [rdx]
   1400448c6:	(bad)  
   1400448c7:	push   rax
   1400448c8:	out    0xe2,al
   1400448ca:	add    al,BYTE PTR [rax]
   1400448cc:	sbb    bl,0x3
   1400448cf:	add    BYTE PTR [rcx],dl
   1400448d1:	adc    eax,0x720c0004
   1400448d6:	or     BYTE PTR [rax+0x7],dh
   1400448d9:	(bad)  
   1400448da:	(bad)  
   1400448db:	xor    dh,ah
   1400448dd:	loop   0x1400448e1
   1400448df:	add    al,dh
   1400448e1:	fiadd  WORD PTR [rbx]
   1400448e3:	add    bh,bh
   1400448e5:	(bad)  
   1400448e6:	(bad)  
   1400448e7:	(bad)  
   1400448e8:	cmp    ebx,edi
   1400448ea:	add    al,BYTE PTR [rax]
   1400448ec:	add    BYTE PTR [rax],al
   1400448ee:	add    BYTE PTR [rax],al
   1400448f0:	rex.RB sti 
   1400448f2:	add    al,BYTE PTR [rax]
   1400448f4:	add    DWORD PTR [rax],eax
   1400448f6:	add    BYTE PTR [rax],al
   1400448f8:	pop    rax
   1400448f9:	sti    
   1400448fa:	add    al,BYTE PTR [rax]
   1400448fc:	add    al,BYTE PTR [rax]
   1400448fe:	add    BYTE PTR [rax],al
   140044900:	imul   edi,ebx,0x2
   140044903:	add    BYTE PTR [rbx],al
   140044905:	add    BYTE PTR [rax],al
   140044907:	add    BYTE PTR [rsi-0x5],bh
   14004490a:	add    al,BYTE PTR [rax]
   14004490c:	add    al,0x0
   14004490e:	add    BYTE PTR [rax],al
   140044910:	mov    bh,bl
   140044912:	add    al,BYTE PTR [rax]
   140044914:	add    eax,DWORD PTR [rax]
   140044916:	add    BYTE PTR [rax],al
   140044918:	(bad)  
   140044919:	sti    
   14004491a:	add    al,BYTE PTR [rax]
   14004491c:	(bad)  
   14004491d:	add    BYTE PTR [rax],al
   14004491f:	add    BYTE PTR [rbp+0x70002fb],ch
   140044925:	add    BYTE PTR [rax],al
   140044927:	add    al,al
   140044929:	sti    
   14004492a:	add    al,BYTE PTR [rax]
   14004492c:	or     BYTE PTR [rax],al
   14004492e:	add    BYTE PTR [rax],al
   140044930:	sar    ebx,cl
   140044932:	add    al,BYTE PTR [rax]
	...
   140044940:	cmp    BYTE PTR [rip+0xffffffffffff0001],dl        # 0x140034947
   140044946:	(bad)  
   140044947:	call   QWORD PTR [rbp+0x15]
   14004494a:	add    DWORD PTR [rax],eax
   14004494c:	add    BYTE PTR [rax],al
   14004494e:	add    BYTE PTR [rax],al
   140044950:	jb     0x140044967
   140044952:	add    DWORD PTR [rax],eax
   140044954:	add    DWORD PTR [rax],eax
   140044956:	add    BYTE PTR [rax],al
   140044958:	jns    0x14004496f
   14004495a:	add    DWORD PTR [rax],eax
   14004495c:	add    al,BYTE PTR [rax]
   14004495e:	add    BYTE PTR [rax],al
   140044960:	adc    BYTE PTR [rip+0x30001],0x0        # 0x140074968
   140044967:	add    BYTE PTR [rsi+0x4000115],ah
   14004496d:	add    BYTE PTR [rax],al
   14004496f:	add    BYTE PTR [rbp+0x5000115],dh
   140044975:	add    BYTE PTR [rax],al
   140044977:	add    BYTE PTR [rcx+0x16],al
   14004497a:	add    DWORD PTR [rax],eax
   14004497c:	(bad)  
   14004497d:	add    BYTE PTR [rax],al
   14004497f:	add    BYTE PTR [rdi+0x16],cl
   140044982:	add    DWORD PTR [rax],eax
   140044984:	(bad)  
   140044985:	add    BYTE PTR [rax],al
   140044987:	add    BYTE PTR [rdi+0x16],dl
   14004498a:	add    DWORD PTR [rax],eax
   14004498c:	or     BYTE PTR [rax],al
   14004498e:	add    BYTE PTR [rax],al
   140044990:	adc    BYTE PTR [rsi],0x1
   140044993:	add    BYTE PTR [rcx],cl
   140044995:	add    BYTE PTR [rax],al
   140044997:	add    ah,al
   140044999:	(bad)  
   14004499a:	add    DWORD PTR [rax],eax
   14004499c:	(bad)  
   14004499d:	(bad)  
   14004499e:	(bad)  
   14004499f:	inc    DWORD PTR [rcx]
   1400449a1:	(bad)  
   1400449a2:	or     al,BYTE PTR [rax]
   1400449a4:	(bad)  
   1400449a5:	xor    al,0x11
   1400449a7:	add    BYTE PTR [rdi],dl
   1400449a9:	jb     0x1400449bb
   1400449ab:	lock (bad) 
   1400449ad:	loopne 0x1400449bb
   1400449af:	ror    BYTE PTR [rdx],1
   1400449b1:	ror    BYTE PTR [rax],0x70
   1400449b4:	(bad)  
   1400449b5:	(bad)  
   1400449b6:	(bad)  
   1400449b7:	push   rax
   1400449b8:	adc    DWORD PTR [rsi],edx
   1400449ba:	(bad)  
   1400449bb:	add    BYTE PTR [rsi],dl
   1400449bd:	xor    al,0xb
   1400449bf:	add    BYTE PTR [rax],cl
   1400449c1:	push   rdx
   1400449c2:	add    al,0x70
   1400449c4:	add    esp,DWORD PTR [rax+0x2]
   1400449c7:	push   rax
   1400449c8:	out    0xe2,al
   1400449ca:	add    al,BYTE PTR [rax]
   1400449cc:	sub    dh,bl
   1400449ce:	add    eax,DWORD PTR [rax]
   1400449d0:	(bad)  
   1400449d1:	(bad)  
   1400449d2:	(bad)  
   1400449d3:	(bad)  
   1400449d4:	in     al,dx
   1400449d5:	sti    
   1400449d6:	add    al,BYTE PTR [rax]
   1400449d8:	pop    rsp
   1400449d9:	sbb    al,BYTE PTR [rcx]
   1400449db:	add    bh,bh
   1400449dd:	(bad)  
   1400449de:	(bad)  
   1400449df:	call   QWORD PTR [rdi+0x11a]
   1400449e5:	add    BYTE PTR [rax],al
   1400449e7:	add    bl,cl
   1400449e9:	sbb    al,BYTE PTR [rcx]
   1400449eb:	add    bh,bh
   1400449ed:	(bad)  
   1400449ee:	(bad)  
   1400449ef:	call   QWORD PTR [rcx]
   1400449f1:	(bad)  
   1400449f2:	(bad)  
   1400449f3:	add    BYTE PTR [rsi],dl
   1400449f5:	xor    al,0xb
   1400449f7:	add    BYTE PTR [rax],cl
   1400449f9:	push   rdx
   1400449fa:	add    al,0x70
   1400449fc:	add    esp,DWORD PTR [rax+0x2]
   1400449ff:	push   rax
   140044a00:	out    0xe2,al
   140044a02:	add    al,BYTE PTR [rax]
   140044a04:	push   rax
   140044a05:	fiadd  WORD PTR [rbx]
   140044a07:	add    bh,bh
   140044a09:	(bad)  
   140044a0a:	(bad)  
   140044a0b:	(bad)  
   140044a0c:	(bad)  
   140044a0d:	sti    
   140044a0e:	add    al,BYTE PTR [rax]
   140044a10:	add    BYTE PTR [rax],al
   140044a12:	add    BYTE PTR [rax],al
   140044a14:	or     bh,ah
   140044a16:	add    al,BYTE PTR [rax]
   140044a18:	add    BYTE PTR [rbx],bl
   140044a1a:	add    DWORD PTR [rax],eax
   140044a1c:	(bad)  
   140044a1d:	(bad)  
   140044a1e:	(bad)  
   140044a1f:	(bad)  
   140044a20:	cmp    al,0x1b
   140044a22:	add    DWORD PTR [rax],eax
   140044a24:	add    BYTE PTR [rax],al
   140044a26:	add    BYTE PTR [rax],al
   140044a28:	rex.X sbb eax,DWORD PTR [rcx]
   140044a2b:	add    BYTE PTR [rcx],al
   140044a2d:	add    BYTE PTR [rax],al
   140044a2f:	add    ah,cl
   140044a31:	sbb    eax,DWORD PTR [rcx]
   140044a33:	add    BYTE PTR [rax],al
   140044a35:	add    BYTE PTR [rax],al
   140044a37:	add    bh,ah
   140044a39:	sbb    eax,DWORD PTR [rcx]
   140044a3b:	add    bh,bh
   140044a3d:	(bad)  
   140044a3e:	(bad)  
   140044a3f:	call   QWORD PTR [rcx]
   140044a41:	sbb    ecx,DWORD PTR [rax]
   140044a43:	add    BYTE PTR [rbx],bl
   140044a45:	push   rsp
   140044a46:	or     al,0x0
   140044a48:	(bad)  
   140044a49:	xor    al,0xb
   140044a4b:	add    BYTE PTR [rbx],cl
   140044a4d:	push   rdx
   140044a4e:	(bad)  
   140044a4f:	loopne 0x140044a56
   140044a51:	jo     0x140044a57
   140044a53:	(bad)  
   140044a54:	out    0xe2,al
   140044a56:	add    al,BYTE PTR [rax]
   140044a58:	js     0x140044a38
   140044a5a:	add    eax,DWORD PTR [rax]
   140044a5c:	(bad)  
   140044a5d:	(bad)  
   140044a5e:	(bad)  
   140044a5f:	call   FWORD PTR [rsp+rdi*8]
   140044a62:	add    al,BYTE PTR [rax]
   140044a64:	add    BYTE PTR [rax],al
   140044a66:	add    BYTE PTR [rax],al
   140044a68:	sub    ah,bh
   140044a6a:	add    al,BYTE PTR [rax]
   140044a6c:	add    BYTE PTR [rax],al
   140044a6e:	add    BYTE PTR [rax],al
   140044a70:	sbb    BYTE PTR [rcx+rax*1],bl
   140044a73:	add    bh,bh
   140044a75:	(bad)  
   140044a76:	(bad)  
   140044a77:	call   FWORD PTR [rbx+0x1c]
   140044a7a:	add    DWORD PTR [rax],eax
   140044a7c:	add    BYTE PTR [rax],al
   140044a7e:	add    BYTE PTR [rax],al
   140044a80:	(bad)  
   140044a81:	sbb    al,0x1
   140044a83:	add    BYTE PTR [rcx],al
   140044a85:	add    BYTE PTR [rax],al
   140044a87:	add    cl,ah
   140044a89:	sbb    al,0x1
   140044a8b:	add    BYTE PTR [rax],al
   140044a8d:	add    BYTE PTR [rax],al
   140044a8f:	add    ah,bh
   140044a91:	sbb    al,0x1
   140044a93:	add    bh,bh
   140044a95:	(bad)  
   140044a96:	(bad)  
   140044a97:	call   QWORD PTR [rcx]
   140044a99:	sbb    BYTE PTR [rsi],al
   140044a9b:	add    BYTE PTR [rax],bl
   140044a9d:	or     al,BYTE PTR fs:[rax]
   140044aa0:	adc    al,0x34
   140044aa2:	or     DWORD PTR [rax],eax
   140044aa4:	or     BYTE PTR [rdx+0x4],dl
   140044aa7:	jo     0x140044a8f
   140044aa9:	loop   0x140044aad
   140044aab:	add    BYTE PTR [rax+0x300003de],ah
   140044ab1:	sbb    eax,0xffff0001
   140044ab6:	(bad)  
   140044ab7:	jmp    FWORD PTR [rdx+0x1d]
   140044aba:	add    DWORD PTR [rax],eax
   140044abc:	add    BYTE PTR [rax],al
   140044abe:	add    BYTE PTR [rax],al
   140044ac0:	mov    bl,0x1d
   140044ac2:	add    DWORD PTR [rax],eax
   140044ac4:	(bad)  
   140044ac5:	(bad)  
   140044ac6:	(bad)  
   140044ac7:	call   QWORD PTR [rcx]
   140044ac9:	lar    eax,WORD PTR [rax]
   140044acc:	(bad)  
   140044acd:	push   rdx
   140044ace:	add    dh,BYTE PTR [rax]
   140044ad0:	out    0xe2,al
   140044ad2:	add    al,BYTE PTR [rax]
   140044ad4:	enter  0x3de,0x0
   140044ad8:	in     al,0x1d
   140044ada:	add    DWORD PTR [rax],eax
   140044adc:	(bad)  
   140044add:	(bad)  
   140044ade:	(bad)  
   140044adf:	call   FWORD PTR [rsi+rbx*1]
   140044ae2:	add    DWORD PTR [rax],eax
   140044ae4:	add    BYTE PTR [rax],al
   140044ae6:	add    BYTE PTR [rax],al
   140044ae8:	ds (bad) 
   140044aea:	add    DWORD PTR [rax],eax
   140044aec:	(bad)  
   140044aed:	(bad)  
   140044aee:	(bad)  
   140044aef:	call   FWORD PTR [rbx+0x1e]
   140044af2:	add    DWORD PTR [rax],eax
   140044af4:	add    BYTE PTR [rax],al
   140044af6:	add    BYTE PTR [rax],al
   140044af8:	fwait
   140044af9:	(bad)  
   140044afa:	add    DWORD PTR [rax],eax
   140044afc:	(bad)  
   140044afd:	(bad)  
   140044afe:	(bad)  
   140044aff:	inc    DWORD PTR [rcx]
   140044b01:	sbb    BYTE PTR [rdx],cl
   140044b03:	add    BYTE PTR [rax],bl
   140044b05:	or     eax,DWORD PTR fs:[rax]
   140044b08:	sbb    BYTE PTR [rdx+rcx*1+0x0],dl
   140044b0c:	sbb    BYTE PTR [rcx+rcx*1],dh
   140044b0f:	add    BYTE PTR [rax],bl
   140044b11:	xor    dl,BYTE PTR [rax+rsi*8]
   140044b14:	adc    ah,al
   140044b16:	adc    BYTE PTR [rax+0x1],dh
   140044b19:	adc    eax,0x34150008
   140044b1e:	or     eax,DWORD PTR [rax]
   140044b20:	adc    eax,0xff01132
   140044b25:	loopne 0x140044b34
   140044b27:	jo     0x140044b35
   140044b29:	(bad)  
   140044b2a:	or     edx,DWORD PTR [rax+0x19]
   140044b2d:	sbb    BYTE PTR [rax+rax*1],al
   140044b30:	sbb    BYTE PTR [rcx+rcx*1],dh
   140044b33:	add    BYTE PTR [rdx],cl
   140044b35:	push   rdx
   140044b36:	(bad)  
   140044b37:	jo     0x140044b1f
   140044b39:	loop   0x140044b3d
   140044b3b:	add    BYTE PTR [rax],al
   140044b3d:	fiadd  WORD PTR [rbx]
	...
   140044b47:	add    BYTE PTR [rcx],al
   140044b49:	add    BYTE PTR [rax],al
   140044b4b:	add    BYTE PTR [rcx],al
   140044b4d:	add    BYTE PTR [rax],al
   140044b4f:	add    BYTE PTR [rbx+rcx*2+0x4],dl
   140044b53:	add    BYTE PTR [rax+0x0],al
	...
   140044b5e:	add    BYTE PTR [rax],al
   140044b60:	cmp    bh,ah
   140044b62:	add    al,BYTE PTR [rax]
   140044b64:	cmp    BYTE PTR [rax],al
   140044b66:	add    BYTE PTR [rax],al
   140044b68:	xchg   esp,eax
   140044b69:	and    al,BYTE PTR [rcx]
   140044b6b:	add    bh,bh
   140044b6d:	(bad)  
   140044b6e:	(bad)  
   140044b6f:	dec    esp
   140044b71:	and    al,BYTE PTR [rcx]
   140044b73:	add    BYTE PTR [rax],al
   140044b75:	add    BYTE PTR [rax],al
   140044b77:	add    bl,bl
   140044b79:	and    al,BYTE PTR [rcx]
   140044b7b:	add    bh,bh
   140044b7d:	(bad)  
   140044b7e:	(bad)  
   140044b7f:	(bad)  
   140044b80:	cmp    bh,ah
   140044b82:	add    al,BYTE PTR [rax]
   140044b84:	add    BYTE PTR [rax],al
   140044b86:	add    BYTE PTR [rax],al
   140044b88:	rex.RXB cld 
   140044b8a:	add    al,BYTE PTR [rax]
   140044b8c:	add    DWORD PTR [rax],eax
   140044b8e:	add    BYTE PTR [rax],al
   140044b90:	sbb    DWORD PTR [rdx],ecx
   140044b92:	add    al,BYTE PTR [rax]
   140044b94:	or     dh,BYTE PTR [rdx]
   140044b96:	(bad)  
   140044b97:	push   rax
   140044b98:	out    0xe2,al
   140044b9a:	add    al,BYTE PTR [rax]
   140044b9c:	add    dh,bl
   140044b9e:	add    eax,DWORD PTR [rax]
   140044ba0:	sbb    DWORD PTR [rcx],esp
   140044ba2:	or     al,BYTE PTR [rax]
   140044ba4:	and    DWORD PTR [rbp+rcx*1+0x0],esi
   140044ba8:	sbb    eax,0x19000c64
   140044bad:	xor    al,0xb
   140044baf:	add    BYTE PTR [rip+0x7f00952],cl        # 0x147f45507
   140044bb5:	loopne 0x140044bbc
   140044bb7:	shl    dh,1
   140044bb9:	loop   0x140044bbd
   140044bbb:	add    al,bl
   140044bbd:	fld    QWORD PTR [rbx]
	...
   140044bc7:	add    BYTE PTR [rcx],al
   140044bc9:	add    BYTE PTR [rax],al
   140044bcb:	add    BYTE PTR [rcx],al
   140044bcd:	add    BYTE PTR [rax],al
   140044bcf:	add    ah,dl
   140044bd1:	rex.WXB add al,0x0
   140044bd4:	add    BYTE PTR [rax],al
	...
   140044bdf:	add    BYTE PTR [rax-0x4],ah
   140044be2:	add    al,BYTE PTR [rax]
   140044be4:	cmp    BYTE PTR [rax],al
   140044be6:	add    BYTE PTR [rax],al
   140044be8:	in     al,dx
   140044be9:	and    al,BYTE PTR [rcx]
   140044beb:	add    bh,bh
   140044bed:	(bad)  
   140044bee:	(bad)  
   140044bef:	call   QWORD PTR [rsi]
   140044bf1:	and    eax,DWORD PTR [rcx]
   140044bf3:	add    BYTE PTR [rax],al
   140044bf5:	add    BYTE PTR [rax],al
   140044bf7:	add    al,al
   140044bf9:	and    eax,DWORD PTR [rcx]
   140044bfb:	add    bh,bh
   140044bfd:	(bad)  
   140044bfe:	(bad)  
   140044bff:	jmp    QWORD PTR [rsp+0x1]
   140044c06:	add    BYTE PTR [rax],al
   140044c08:	ins    DWORD PTR es:[rdi],dx
   140044c09:	cld    
   140044c0a:	add    al,BYTE PTR [rax]
   140044c0c:	add    DWORD PTR [rax],eax
   140044c0e:	add    BYTE PTR [rax],al
   140044c10:	sbb    DWORD PTR [rdx],ecx
   140044c12:	add    al,BYTE PTR [rax]
   140044c14:	or     dh,BYTE PTR [rdx]
   140044c16:	(bad)  
   140044c17:	push   rax
   140044c18:	out    0xe2,al
   140044c1a:	add    al,BYTE PTR [rax]
   140044c1c:	fcomp  st(5)
   140044c1e:	add    eax,DWORD PTR [rax]
   140044c20:	add    DWORD PTR [rdi],ecx
   140044c22:	(bad)  
   140044c23:	add    BYTE PTR [rdi],cl
   140044c25:	fs or  eax,0xc340f00
   140044c2b:	add    BYTE PTR [rdi],cl
   140044c2d:	jb     0x140044c3a
   140044c2f:	jo     0x140044c4a
   140044c31:	and    ecx,DWORD PTR [rax]
   140044c33:	add    BYTE PTR [rbx],ah
   140044c35:	xor    al,0xd
   140044c37:	add    BYTE PTR [rdi],dl
   140044c39:	push   rdx
   140044c3a:	adc    esi,eax
   140044c3c:	adc    eax,esp
   140044c3e:	xadd   BYTE PTR [rip+0xffffffffe6600c70],cl        # 0x1266458b5
   140044c45:	loop   0x140044c49
   140044c47:	add    BYTE PTR [rax+0x3dd],dh
   140044c4d:	add    BYTE PTR [rax],al
   140044c4f:	add    BYTE PTR [rax],al
   140044c51:	add    BYTE PTR [rax],al
   140044c53:	add    BYTE PTR [rcx],al
   140044c55:	add    BYTE PTR [rax],al
   140044c57:	add    BYTE PTR [rcx],al
   140044c59:	add    BYTE PTR [rax],al
   140044c5b:	add    BYTE PTR [rax+0x4c],ah
   140044c5e:	add    al,0x0
   140044c60:	add    BYTE PTR [rax],al
	...
   140044c6b:	add    BYTE PTR [rbp-0x4],bh
   140044c6e:	add    al,BYTE PTR [rax]
   140044c70:	cmp    BYTE PTR [rax],al
   140044c72:	add    BYTE PTR [rax],al
   140044c74:	add    BYTE PTR [rax],al
   140044c76:	add    BYTE PTR [rax],al
   140044c78:	mov    ah,0x25
   140044c7a:	add    DWORD PTR [rax],eax
   140044c7c:	(bad)  
   140044c7d:	(bad)  
   140044c7e:	(bad)  
   140044c7f:	jmp    rax
   140044c81:	and    eax,0x1
   140044c86:	add    BYTE PTR [rax],al
   140044c88:	(bad)  
   140044c89:	add    DWORD PTR es:[rax],eax
   140044c8c:	(bad)  
   140044c8d:	(bad)  
   140044c8e:	(bad)  
   140044c8f:	jmp    FWORD PTR [rdi+riz*1+0x1]
   140044c93:	add    BYTE PTR [rax],al
   140044c95:	add    BYTE PTR [rax],al
   140044c97:	add    BYTE PTR [rdx+0x10002fc],cl
   140044c9d:	add    BYTE PTR [rax],al
   140044c9f:	add    BYTE PTR [rcx],bl
   140044ca1:	or     al,BYTE PTR [rdx]
   140044ca3:	add    BYTE PTR [rdx],cl
   140044ca5:	xor    al,BYTE PTR [rsi]
   140044ca7:	push   rax
   140044ca8:	out    0xe2,al
   140044caa:	add    al,BYTE PTR [rax]
   140044cac:	mov    al,0xdd
   140044cae:	add    eax,DWORD PTR [rax]
   140044cb0:	sbb    DWORD PTR [rbx],edx
   140044cb2:	add    al,BYTE PTR [rax]
   140044cb4:	or     dl,BYTE PTR [rdx+0x6]
   140044cb7:	xor    dh,ah
   140044cb9:	loop   0x140044cbd
   140044cbb:	add    BYTE PTR [rax+0x3dd],cl
   140044cc1:	add    BYTE PTR [rax],al
   140044cc3:	add    BYTE PTR [rax],al
   140044cc5:	add    BYTE PTR [rax],al
   140044cc7:	add    BYTE PTR [rcx],al
   140044cc9:	add    BYTE PTR [rax],al
   140044ccb:	add    BYTE PTR [rcx],al
   140044ccd:	add    BYTE PTR [rax],al
   140044ccf:	add    ah,dl
   140044cd1:	rex.WR add al,0x0
   140044cd4:	add    BYTE PTR [rax],al
	...
   140044cdf:	add    BYTE PTR [rdi+0x380002fc],ah
   140044ce5:	add    BYTE PTR [rax],al
   140044ce7:	add    BYTE PTR [rax+rbp*1],al
   140044cea:	add    DWORD PTR [rax],eax
   140044cec:	(bad)  
   140044ced:	(bad)  
   140044cee:	(bad)  
   140044cef:	jmp    QWORD PTR [rax+rbp*1]
   140044cf2:	add    DWORD PTR [rax],eax
   140044cf4:	add    BYTE PTR [rax],al
   140044cf6:	add    BYTE PTR [rax],al
   140044cf8:	sub    BYTE PTR [rcx],al
   140044cfb:	add    bh,bh
   140044cfd:	(bad)  
   140044cfe:	(bad)  
   140044cff:	jmp    QWORD PTR [rdi+0x2fc]
   140044d05:	add    BYTE PTR [rax],al
   140044d07:	add    BYTE PTR [rsp+rdi*8+0x10002],dh
   140044d0e:	add    BYTE PTR [rax],al
   140044d10:	sbb    DWORD PTR [rdx],ecx
   140044d12:	add    al,BYTE PTR [rax]
   140044d14:	or     dh,BYTE PTR [rdx]
   140044d16:	(bad)  
   140044d17:	push   rax
   140044d18:	out    0xe2,al
   140044d1a:	add    al,BYTE PTR [rax]
   140044d1c:	mov    ch,bl
   140044d1e:	add    eax,DWORD PTR [rax]
   140044d20:	sbb    DWORD PTR [rdx],ebp
   140044d22:	or     BYTE PTR [rax],al
   140044d24:	sbb    esi,DWORD PTR [rsi+rdx*1]
   140044d27:	add    BYTE PTR [rdi],cl
   140044d29:	ror    BYTE PTR [rbx],cl
   140044d2b:	lock or eax,esp
   140044d2e:	(bad)  
   140044d2f:	rol    BYTE PTR [rip+0xffffffffcc600470],0xe7        # 0x10c6451a6
   140044d36:	add    al,BYTE PTR [rax]
   140044d38:	clc    
   140044d39:	loopne 0x140044d3e
   140044d3b:	add    BYTE PTR [rbx+0x0],ah
   140044d3e:	add    BYTE PTR [rax],al
   140044d40:	(bad)  
   140044d41:	(bad)  
   140044d42:	(bad)  
   140044d43:	inc    DWORD PTR [rax]
   140044d45:	add    BYTE PTR [rax],al
   140044d47:	add    BYTE PTR [rax],al
   140044d49:	add    BYTE PTR [rax],al
   140044d4b:	add    ch,cl
   140044d4d:	cld    
   140044d4e:	add    al,BYTE PTR [rax]
   140044d50:	(bad)  
   140044d51:	(bad)  
   140044d52:	(bad)  
   140044d53:	inc    DWORD PTR [rax]
   140044d55:	add    BYTE PTR [rax],al
   140044d57:	add    BYTE PTR [rax],al
   140044d59:	add    BYTE PTR [rax],al
   140044d5b:	add    BYTE PTR [rcx],al
   140044d5d:	add    BYTE PTR [rax],al
   140044d5f:	add    BYTE PTR [rdx],al
   140044d61:	add    BYTE PTR [rax],al
   140044d63:	add    BYTE PTR [rcx],al
   140044d65:	add    BYTE PTR [rax],al
   140044d67:	add    BYTE PTR [rbp+rcx*2+0x4],ch
   140044d6b:	add    BYTE PTR [rcx],cl
   140044d6d:	add    BYTE PTR [rax],al
   140044d6f:	add    BYTE PTR [rax-0x18],dl
   140044d72:	add    al,0x0
   140044d74:	xor    BYTE PTR [rax],al
   140044d76:	add    BYTE PTR [rax],al
   140044d78:	frndint 
   140044d7a:	add    al,BYTE PTR [rax]
   140044d7c:	cmp    BYTE PTR [rax],al
   140044d7e:	add    BYTE PTR [rax],al
   140044d80:	in     al,0x29
   140044d82:	add    DWORD PTR [rax],eax
   140044d84:	(bad)  
   140044d85:	(bad)  
   140044d86:	(bad)  
   140044d87:	jmp    QWORD PTR [rdx+0x2a]
   140044d8a:	add    DWORD PTR [rax],eax
   140044d8c:	add    BYTE PTR [rax],al
   140044d8e:	add    BYTE PTR [rax],al
   140044d90:	add    al,0x2b
   140044d92:	add    DWORD PTR [rax],eax
   140044d94:	add    DWORD PTR [rax],eax
   140044d96:	add    BYTE PTR [rax],al
   140044d98:	cmp    BYTE PTR [rbx],ch
   140044d9a:	add    DWORD PTR [rax],eax
   140044d9c:	add    BYTE PTR [rax],al
   140044d9e:	add    BYTE PTR [rax],al
   140044da0:	pop    rax
   140044da1:	sub    eax,DWORD PTR [rcx]
   140044da3:	add    bh,bh
   140044da5:	(bad)  
   140044da6:	(bad)  
   140044da7:	(bad)  
   140044da8:	frndint 
   140044daa:	add    al,BYTE PTR [rax]
   140044dac:	add    BYTE PTR [rax],al
   140044dae:	add    BYTE PTR [rax],al
   140044db0:	out    0xfc,al
   140044db2:	add    al,BYTE PTR [rax]
   140044db4:	add    al,BYTE PTR [rax]
   140044db6:	add    BYTE PTR [rax],al
   140044db8:	repnz cld 
   140044dba:	add    al,BYTE PTR [rax]
   140044dbc:	add    BYTE PTR [rax],al
   140044dbe:	add    BYTE PTR [rax],al
   140044dc0:	sbb    DWORD PTR [rdx],ecx
   140044dc2:	add    al,BYTE PTR [rax]
   140044dc4:	or     dh,BYTE PTR [rdx]
   140044dc6:	(bad)  
   140044dc7:	push   rax
   140044dc8:	out    0xe2,al
   140044dca:	add    al,BYTE PTR [rax]
   140044dcc:	clc    
   140044dcd:	loopne 0x140044dd2
   140044dcf:	add    BYTE PTR [rcx],dl
   140044dd1:	sbb    cl,BYTE PTR [rax]
   140044dd3:	add    BYTE PTR [rdx],dl
   140044dd5:	jb     0x140044de2
   140044dd7:	lock or eax,esp
   140044dda:	(bad)  
   140044ddb:	rol    BYTE PTR [rip+0x3600470],1        # 0x143645251
   140044de1:	xor    BYTE PTR [rdx],al
   140044de3:	push   rax
   140044de4:	out    0xe2,al
   140044de6:	add    al,BYTE PTR [rax]
   140044de8:	shl    al,1
   140044dea:	add    eax,DWORD PTR [rax]
   140044dec:	(bad)  
   140044ded:	(bad)  
   140044dee:	(bad)  
   140044def:	inc    DWORD PTR [rsi]
   140044df1:	std    
   140044df2:	add    al,BYTE PTR [rax]
   140044df4:	add    BYTE PTR [rax],al
   140044df6:	add    BYTE PTR [rax],al
   140044df8:	adc    bh,ch
   140044dfa:	add    al,BYTE PTR [rax]
   140044dfc:	add    BYTE PTR [rax],al
   140044dfe:	add    BYTE PTR [rax],al
   140044e00:	pop    rax
   140044e01:	sub    al,0x1
   140044e03:	add    bh,bh
   140044e05:	(bad)  
   140044e06:	(bad)  
   140044e07:	(bad)  
   140044e08:	jg     0x140044e36
   140044e0a:	add    DWORD PTR [rax],eax
   140044e0c:	add    BYTE PTR [rax],al
   140044e0e:	add    BYTE PTR [rax],al
   140044e10:	cli    
   140044e11:	sub    al,0x1
   140044e13:	add    BYTE PTR [rcx],al
   140044e15:	add    BYTE PTR [rax],al
   140044e17:	add    BYTE PTR [rsi+rbp*1+0x1],dh
   140044e1b:	add    BYTE PTR [rax],al
   140044e1d:	add    BYTE PTR [rax],al
   140044e1f:	add    BYTE PTR [rbx+0x100012e],bl
   140044e25:	add    BYTE PTR [rax],al
   140044e27:	add    BYTE PTR [rdi+0x12e],ah
   140044e2d:	add    BYTE PTR [rax],al
   140044e2f:	add    BYTE PTR [rbx-0xfffed2],ch
   140044e35:	(bad)  
   140044e36:	(bad)  
   140044e37:	call   QWORD PTR [rcx]
   140044e39:	sbb    al,0x8
   140044e3b:	add    BYTE PTR [rsp+rdx*2],bl
   140044e3e:	(bad)  
   140044e3f:	add    BYTE PTR [rax],bl
   140044e41:	xor    al,0xd
   140044e43:	add    BYTE PTR [rdx+rsi*2],cl
   140044e46:	or     al,ah
   140044e48:	(bad)  
   140044e49:	rol    BYTE PTR [rax+rsi*2],0xe6
   140044e4d:	loop   0x140044e51
   140044e4f:	add    BYTE PTR [rax-0xfffc20],ch
   140044e55:	(bad)  
   140044e56:	(bad)  
   140044e57:	jmp    QWORD PTR [rdi*8+0x2]
   140044e5e:	add    BYTE PTR [rax],al
   140044e60:	call   0x13f044f93
   140044e65:	(bad)  
   140044e66:	(bad)  
   140044e67:	call   QWORD PTR [rcx]
   140044e69:	(bad)  
   140044e6a:	add    DWORD PTR [rax],eax
   140044e6c:	add    BYTE PTR [rax],al
   140044e6e:	add    BYTE PTR [rax],al
   140044e70:	(bad)  
   140044e71:	xor    BYTE PTR [rcx],al
   140044e73:	add    bh,bh
   140044e75:	(bad)  
   140044e76:	(bad)  
   140044e77:	call   FWORD PTR [rcx]
   140044e79:	xor    ecx,DWORD PTR [rbx]
   140044e7b:	add    BYTE PTR [rip+0x19002634],ah        # 0x1590474b5
   140044e81:	add    DWORD PTR [rax+rax*1],ebx
   140044e84:	(bad)  
   140044e85:	lock or al,0xe0
   140044e88:	or     dl,al
   140044e8a:	or     al,al
   140044e8c:	(bad)  
   140044e8d:	jo     0x140044e94
   140044e8f:	(bad)  
   140044e90:	add    al,0x50
   140044e92:	add    BYTE PTR [rax],al
   140044e94:	int3   
   140044e95:	out    0x2,eax
   140044e97:	add    BYTE PTR [rax-0x2dfffc20],al
   140044e9d:	add    BYTE PTR [rax],al
   140044e9f:	add    bh,bh
   140044ea1:	(bad)  
   140044ea2:	(bad)  
   140044ea3:	push   QWORD PTR [rsi]
   140044ea5:	std    
   140044ea6:	add    al,BYTE PTR [rax]
   140044ea8:	add    BYTE PTR [rax],al
   140044eaa:	add    BYTE PTR [rax],al
   140044eac:	rex.X std 
   140044eae:	add    al,BYTE PTR [rax]
   140044eb0:	add    DWORD PTR [rax],eax
   140044eb2:	add    BYTE PTR [rax],al
   140044eb4:	rex.WRX std 
   140044eb6:	add    al,BYTE PTR [rax]
   140044eb8:	add    al,BYTE PTR [rax]
   140044eba:	add    BYTE PTR [rax],al
   140044ebc:	pop    rdx
   140044ebd:	std    
   140044ebe:	add    al,BYTE PTR [rax]
   140044ec0:	add    eax,DWORD PTR [rax]
   140044ec2:	add    BYTE PTR [rax],al
   140044ec4:	data16 std 
   140044ec6:	add    al,BYTE PTR [rax]
   140044ec8:	add    al,0x0
   140044eca:	add    BYTE PTR [rax],al
   140044ecc:	jb     0x140044ecb
   140044ece:	add    al,BYTE PTR [rax]
   140044ed0:	in     al,0x30
   140044ed2:	add    DWORD PTR [rax],eax
   140044ed4:	(bad)  
   140044ed5:	(bad)  
   140044ed6:	(bad)  
   140044ed7:	push   QWORD PTR [rdi+0x31]
   140044eda:	add    DWORD PTR [rax],eax
   140044edc:	add    BYTE PTR [rax],al
   140044ede:	add    BYTE PTR [rax],al
   140044ee0:	lahf   
   140044ee1:	xor    DWORD PTR [rcx],eax
   140044ee3:	add    BYTE PTR [rcx],al
   140044ee5:	add    BYTE PTR [rax],al
   140044ee7:	add    bl,dh
   140044ee9:	xor    DWORD PTR [rcx],eax
   140044eeb:	add    BYTE PTR [rdx],al
   140044eed:	add    BYTE PTR [rax],al
   140044eef:	add    BYTE PTR [rcx],dh
   140044ef1:	xor    al,BYTE PTR [rcx]
   140044ef3:	add    BYTE PTR [rcx],al
   140044ef5:	add    BYTE PTR [rax],al
   140044ef7:	add    BYTE PTR [rdx+rsi*1],bh
   140044efa:	add    DWORD PTR [rax],eax
   140044efc:	add    BYTE PTR [rax],al
   140044efe:	add    BYTE PTR [rax],al
   140044f00:	pop    rbx
   140044f01:	xor    al,BYTE PTR [rcx]
   140044f03:	add    bh,bh
   140044f05:	(bad)  
   140044f06:	(bad)  
   140044f07:	inc    DWORD PTR [rdx+0x2000132]
   140044f0d:	add    BYTE PTR [rax],al
   140044f0f:	add    BYTE PTR [rsi+0x3000132],al
   140044f15:	add    BYTE PTR [rax],al
   140044f17:	add    BYTE PTR [rsi+0x2000132],bh
   140044f1d:	add    BYTE PTR [rax],al
   140044f1f:	add    bl,al
   140044f21:	xor    al,BYTE PTR [rcx]
   140044f23:	add    BYTE PTR [rbx],al
   140044f25:	add    BYTE PTR [rax],al
   140044f27:	add    BYTE PTR [rsi],ah
   140044f29:	xor    eax,DWORD PTR [rcx]
   140044f2b:	add    BYTE PTR [rax+rax*1],al
   140044f2e:	add    BYTE PTR [rax],al
   140044f30:	cmp    esi,DWORD PTR [rbx]
   140044f32:	add    DWORD PTR [rax],eax
   140044f34:	add    eax,0x9b000000
   140044f39:	xor    eax,DWORD PTR [rcx]
   140044f3b:	add    BYTE PTR [rax+rax*1],al
   140044f3e:	add    BYTE PTR [rax],al
   140044f40:	shl    DWORD PTR [rbx],1
   140044f42:	add    DWORD PTR [rax],eax
   140044f44:	add    eax,DWORD PTR [rax]
   140044f46:	add    BYTE PTR [rax],al
   140044f48:	sbb    al,0x34
   140044f4a:	add    DWORD PTR [rax],eax
   140044f4c:	add    al,BYTE PTR [rax]
   140044f4e:	add    BYTE PTR [rax],al
   140044f50:	rex.RXB xor al,0x1
   140044f53:	add    BYTE PTR [rcx],al
   140044f55:	add    BYTE PTR [rax],al
   140044f57:	add    BYTE PTR [rdx+0x34],dl
   140044f5a:	add    DWORD PTR [rax],eax
   140044f5c:	add    BYTE PTR [rax],al
   140044f5e:	add    BYTE PTR [rax],al
   140044f60:	jno    0x140044f96
   140044f62:	add    DWORD PTR [rax],eax
   140044f64:	(bad)  
   140044f65:	(bad)  
   140044f66:	(bad)  
   140044f67:	(bad)  
   140044f68:	mov    ecx,0x5000134
   140044f6d:	add    BYTE PTR [rax],al
   140044f6f:	add    dh,al
   140044f71:	xor    al,0x1
   140044f73:	add    BYTE PTR [rbx],al
   140044f75:	add    BYTE PTR [rax],al
   140044f77:	add    BYTE PTR [rip+0x2000135],al        # 0x1420450b2
   140044f7d:	add    BYTE PTR [rax],al
   140044f7f:	add    BYTE PTR [rip+0x1000135],cl        # 0x1410450ba
   140044f85:	add    BYTE PTR [rax],al
   140044f87:	add    BYTE PTR [rip+0x135],bl        # 0x1400450c2
   140044f8d:	add    BYTE PTR [rax],al
   140044f8f:	add    BYTE PTR [rip+0xffffffffff000135],ah        # 0x13f0450ca
   140044f95:	(bad)  
   140044f96:	(bad)  
   140044f97:	call   QWORD PTR [rcx]
   140044f99:	and    DWORD PTR [rdx],ecx
   140044f9b:	add    BYTE PTR [rcx],bl
   140044f9d:	add    DWORD PTR [rbx],edx
   140044f9f:	add    BYTE PTR [rip+0x9e00bf0],cl        # 0x149e45b95
   140044fa5:	rol    BYTE PTR [rdi],1
   140044fa7:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x14364541e
   140044fae:	add    dl,BYTE PTR [rax-0x1a]
   140044fb1:	loop   0x140044fb5
   140044fb3:	add    BYTE PTR [rax-0x20],bl
   140044fb6:	add    eax,DWORD PTR [rax]
   140044fb8:	(bad)  
   140044fb9:	(bad)  
   140044fba:	(bad)  
   140044fbb:	inc    DWORD PTR [rbp+rdi*8+0x2]
   140044fc2:	add    BYTE PTR [rax],al
   140044fc4:	nop
   140044fc5:	std    
   140044fc6:	add    al,BYTE PTR [rax]
   140044fc8:	add    DWORD PTR [rax],eax
   140044fca:	add    BYTE PTR [rax],al
   140044fcc:	pushf  
   140044fcd:	std    
   140044fce:	add    al,BYTE PTR [rax]
   140044fd0:	call   0x13f04510a
   140044fd5:	(bad)  
   140044fd6:	(bad)  
   140044fd7:	(bad)  
   140044fd8:	cmp    dh,BYTE PTR [rsi]
   140044fda:	add    DWORD PTR [rax],eax
   140044fdc:	add    BYTE PTR [rax],al
   140044fde:	add    BYTE PTR [rax],al
   140044fe0:	ds add DWORD PTR ss:[rax],eax
   140044fe4:	add    DWORD PTR [rax],eax
   140044fe6:	add    BYTE PTR [rax],al
   140044fe8:	pop    rsp
   140044fe9:	cmp    al,BYTE PTR [rcx]
   140044feb:	add    BYTE PTR [rdx],al
   140044fed:	add    BYTE PTR [rax],al
   140044fef:	add    BYTE PTR [rdx+rdi*1+0x1],dl
   140044ff6:	add    BYTE PTR [rax],al
   140044ff8:	popf   
   140044ff9:	cmp    al,BYTE PTR [rcx]
   140044ffb:	add    bh,bh
   140044ffd:	(bad)  
   140044ffe:	(bad)  
   140044fff:	call   FWORD PTR [rcx]
   140045001:	and    eax,0x1170009
   140045006:	adc    al,BYTE PTR [rax]
   140045008:	or     esi,eax
   14004500a:	or     eax,esp
   14004500c:	(bad)  
   14004500d:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x143645484
   140045014:	add    dl,BYTE PTR [rax+0x0]
   140045017:	add    BYTE PTR [rax],ch
   140045019:	out    0x2,eax
   14004501b:	add    BYTE PTR [rax+0x19000000],al
   140045021:	and    eax,0x3417000a
   140045026:	sbb    DWORD PTR [rax],eax
   140045028:	(bad)  
   140045029:	rcl    BYTE PTR [rax],cl
   14004502b:	lock (bad) 
   14004502d:	loopne 0x14004503b
   14004502f:	ror    BYTE PTR [rdx],1
   140045031:	ror    BYTE PTR [rax],0x70
   140045034:	(bad)  
   140045035:	(bad)  
   140045036:	(bad)  
   140045037:	push   rax
   140045038:	sub    bh,ah
   14004503a:	add    al,BYTE PTR [rax]
   14004503c:	(bad)  
   14004503d:	add    BYTE PTR [rax],al
   14004503f:	add    BYTE PTR [rcx],bl
   140045041:	and    ecx,DWORD PTR [rdx]
   140045043:	add    BYTE PTR [rsp+rsi*1],dl
   140045046:	(bad)  
   140045047:	add    BYTE PTR [rdx+rdx*8],dl
   14004504a:	adc    al,dh
   14004504c:	(bad)  
   14004504d:	loopne 0x14004505b
   14004504f:	ror    BYTE PTR [rdx],1
   140045051:	ror    BYTE PTR [rax],0x70
   140045054:	(bad)  
   140045055:	(bad)  
   140045056:	(bad)  
   140045057:	push   rax
   140045058:	sub    bh,ah
   14004505a:	add    al,BYTE PTR [rax]
   14004505c:	(bad)  
   14004505d:	add    BYTE PTR [rax],al
   14004505f:	add    BYTE PTR [rcx],bl
   140045061:	(bad)  
   140045062:	or     al,BYTE PTR [rax]
   140045064:	sbb    DWORD PTR [rcx],eax
   140045066:	adc    DWORD PTR [rax],eax
   140045068:	or     eax,0x9e00bf0
   14004506d:	rol    BYTE PTR [rdi],1
   14004506f:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x1436454e6
   140045076:	add    dl,BYTE PTR [rax-0x34]
   140045079:	out    0x2,eax
   14004507b:	add    BYTE PTR [rax],dh
   14004507d:	loopne 0x140045082
   14004507f:	add    BYTE PTR [rdx+0x0],bh
   140045082:	add    BYTE PTR [rax],al
   140045084:	(bad)  
   140045085:	(bad)  
   140045086:	(bad)  
   140045087:	jmp    FWORD PTR [rsi+0x2fd]
   14004508d:	add    BYTE PTR [rax],al
   14004508f:	add    BYTE PTR [rdx+0x2fd],bh
	...
   14004509d:	add    BYTE PTR [rax],al
   14004509f:	add    ah,al
   1400450a1:	rex add DWORD PTR [rax],eax
   1400450a4:	(bad)  
   1400450a5:	(bad)  
   1400450a6:	(bad)  
   1400450a7:	jmp    FWORD PTR [rcx+rax*2+0x1]
   1400450ab:	add    BYTE PTR [rax],al
   1400450ad:	add    BYTE PTR [rax],al
   1400450af:	add    BYTE PTR [rax+0x41],dh
   1400450b2:	add    DWORD PTR [rax],eax
   1400450b4:	add    DWORD PTR [rax],eax
   1400450b6:	add    BYTE PTR [rax],al
   1400450b8:	test   eax,0x142
   1400450bd:	add    BYTE PTR [rax],al
   1400450bf:	add    BYTE PTR [rdx-0xfffebe],dh
   1400450c5:	(bad)  
   1400450c6:	(bad)  
   1400450c7:	(bad)  
   1400450c8:	mov    edx,0x1000142
   1400450cd:	add    BYTE PTR [rax],al
   1400450cf:	add    BYTE PTR [rbx+rax*2+0x1],cl
   1400450d3:	add    BYTE PTR [rax],al
   1400450d5:	add    BYTE PTR [rax],al
   1400450d7:	add    BYTE PTR [rbp+0x43],dl
   1400450da:	add    DWORD PTR [rax],eax
   1400450dc:	(bad)  
   1400450dd:	(bad)  
   1400450de:	(bad)  
   1400450df:	call   FWORD PTR [rcx]
   1400450e1:	(bad)  
   1400450e2:	or     BYTE PTR [rax],al
   1400450e4:	adc    BYTE PTR [rsp+rdx*1],dh
   1400450e7:	add    BYTE PTR [rax],dl
   1400450e9:	ror    BYTE PTR [rax+rsi*8],cl
   1400450ec:	or     ah,al
   1400450ee:	or     BYTE PTR [rax+0x7],dh
   1400450f1:	(bad)  
   1400450f2:	(bad)  
   1400450f3:	push   rax
   1400450f4:	sub    bh,ah
   1400450f6:	add    al,BYTE PTR [rax]
   1400450f8:	(bad)  
   1400450f9:	add    BYTE PTR [rax],al
   1400450fb:	add    BYTE PTR [rcx],dl
   1400450fd:	and    DWORD PTR [rdx],ecx
   1400450ff:	add    BYTE PTR [rcx],ah
   140045101:	je     0x140045112
   140045103:	add    BYTE PTR [rip+0x19000e64],bl        # 0x159045f6d
   140045109:	push   rsp
   14004510a:	or     eax,0xc341500
   14004510f:	add    BYTE PTR [rcx],cl
   140045111:	xchg   edx,eax
   140045112:	add    eax,0x2e2e6e0
   140045117:	add    BYTE PTR [rax],cl
   140045119:	loopne 0x14004511e
   14004511b:	add    bh,bh
   14004511d:	(bad)  
   14004511e:	(bad)  
   14004511f:	dec    esp
   140045121:	std    
   140045122:	add    al,BYTE PTR [rax]
   140045124:	add    BYTE PTR [rax],al
   140045126:	add    BYTE PTR [rax],al
   140045128:	add    al,0x45
   14004512a:	add    DWORD PTR [rax],eax
   14004512c:	(bad)  
   14004512d:	(bad)  
   14004512e:	(bad)  
   14004512f:	(bad)  
   140045130:	jns    0x140045177
   140045132:	add    DWORD PTR [rax],eax
   140045134:	add    BYTE PTR [rax],al
   140045136:	add    BYTE PTR [rax],al
   140045138:	mov    bl,0x45
   14004513a:	add    DWORD PTR [rax],eax
   14004513c:	(bad)  
   14004513d:	(bad)  
   14004513e:	(bad)  
   14004513f:	call   FWORD PTR [rcx]
   140045141:	and    DWORD PTR [rax],ecx
   140045143:	add    BYTE PTR [rbx],dl
   140045145:	xor    al,0x11
   140045147:	add    BYTE PTR [rbx],dl
   140045149:	xchg   edx,eax
   14004514a:	or     al,0xf0
   14004514c:	or     ah,al
   14004514e:	or     BYTE PTR [rax+0x7],dh
   140045151:	(bad)  
   140045152:	(bad)  
   140045153:	push   rax
   140045154:	sub    bh,ah
   140045156:	add    al,BYTE PTR [rax]
   140045158:	rex.W add BYTE PTR [rax],al
   14004515b:	add    BYTE PTR [rcx],dl
   14004515d:	sbb    BYTE PTR [rax+rax*1],al
   140045160:	sbb    BYTE PTR [rcx*1+0x6720a00],dh
   140045167:	jo     0x14004514f
   140045169:	loop   0x14004516d
   14004516b:	add    al,ah
   14004516d:	fild   WORD PTR [rbx]
   14004516f:	add    bh,bh
   140045171:	(bad)  
   140045172:	(bad)  
   140045173:	(bad)  
   140045174:	fdivp  st(5),st
   140045176:	add    al,BYTE PTR [rax]
   140045178:	add    BYTE PTR [rax],al
   14004517a:	add    BYTE PTR [rax],al
   14004517c:	(bad)  
   14004517d:	std    
   14004517e:	add    al,BYTE PTR [rax]
   140045180:	(bad)  
   140045181:	add    QWORD PTR [r8],rax
   140045184:	(bad)  
   140045185:	(bad)  
   140045186:	(bad)  
   140045187:	push   rbp
   140045189:	add    QWORD PTR [r8],rax
   14004518c:	add    BYTE PTR [rax],al
   14004518e:	add    BYTE PTR [rax],al
   140045190:	add    al,0x4a
   140045192:	add    DWORD PTR [rax],eax
   140045194:	add    DWORD PTR [rax],eax
   140045196:	add    BYTE PTR [rax],al
   140045198:	lea    ecx,[rdx+0x1]
   14004519b:	add    bh,bh
   14004519d:	(bad)  
   14004519e:	(bad)  
   14004519f:	inc    DWORD PTR [rcx]
   1400451a1:	adc    cl,BYTE PTR [rax]
   1400451a3:	add    BYTE PTR [rdx],dl
   1400451a5:	push   rsp
   1400451a6:	or     al,BYTE PTR [rax]
   1400451a8:	adc    dh,BYTE PTR [rcx+rcx*1]
   1400451ab:	add    BYTE PTR [rdx],dl
   1400451ad:	xor    cl,BYTE PTR [rsi]
   1400451af:	loopne 0x1400451bd
   1400451b1:	jo     0x1400451be
   1400451b3:	(bad)  
   1400451b4:	sbb    DWORD PTR [rcx],esp
   1400451b6:	or     al,BYTE PTR [rax]
   1400451b8:	and    DWORD PTR [rdi+rcx*1+0x0],esi
   1400451bc:	sbb    eax,0x19000e64
   1400451c1:	xor    al,0xc
   1400451c3:	add    BYTE PTR [rip+0x7f00972],cl        # 0x147f45b3b
   1400451c9:	loopne 0x1400451d0
   1400451cb:	shl    dh,0xe2
   1400451ce:	add    al,BYTE PTR [rax]
   1400451d0:	mov    eax,0x3df
   1400451d5:	add    BYTE PTR [rax],al
   1400451d7:	add    BYTE PTR [rax],al
   1400451d9:	add    BYTE PTR [rax],al
   1400451db:	add    BYTE PTR [rcx],al
   1400451dd:	add    BYTE PTR [rax],al
   1400451df:	add    BYTE PTR [rcx],al
   1400451e1:	add    BYTE PTR [rax],al
   1400451e3:	add    al,ch
   1400451e5:	push   rcx
   1400451e6:	add    al,0x0
   1400451e8:	add    BYTE PTR [rax],al
	...
   1400451f3:	add    BYTE PTR [rax],al
   1400451f5:	inc    BYTE PTR [rdx]
   1400451f7:	add    BYTE PTR [rax+0x0],cl
   1400451fa:	add    BYTE PTR [rax],al
   1400451fc:	add    BYTE PTR [rax],al
   1400451fe:	add    BYTE PTR [rax],al
   140045200:	push   0xffffffffff00014d
   140045205:	(bad)  
   140045206:	(bad)  
   140045207:	inc    esi
   140045209:	add    QWORD PTR [r8],r8
   14004520c:	add    BYTE PTR [rax],al
   14004520e:	add    BYTE PTR [rax],al
   140045210:	(bad)  
   140045211:	add    QWORD PTR [r8],r8
   140045214:	(bad)  
   140045215:	(bad)  
   140045216:	(bad)  
   140045217:	inc    DWORD PTR [rax]
   140045219:	inc    BYTE PTR [rdx]
   14004521b:	add    BYTE PTR [rax],al
   14004521d:	add    BYTE PTR [rax],al
   14004521f:	add    BYTE PTR [rip+0x10002fe],cl        # 0x141045523
   140045225:	add    BYTE PTR [rax],al
   140045227:	add    BYTE PTR [rcx],bl
   140045229:	or     al,BYTE PTR [rdx]
   14004522b:	add    BYTE PTR [rdx],cl
   14004522d:	push   rdx
   14004522e:	(bad)  
   14004522f:	push   rax
   140045230:	out    0xe2,al
   140045232:	add    al,BYTE PTR [rax]
   140045234:	mov    eax,0x190003df
   140045239:	sbb    eax,0x741d0008
   14004523e:	or     eax,DWORD PTR [rax]
   140045240:	sbb    DWORD PTR [rdx+rcx*1+0x0],esp
   140045244:	adc    eax,0x9000834
   140045249:	push   rdx
   14004524a:	add    eax,0x2e2e6e0
   14004524f:	add    BYTE PTR [rax+0x3df],dl
   140045255:	add    BYTE PTR [rax],al
   140045257:	add    BYTE PTR [rax],al
   140045259:	add    BYTE PTR [rax],al
   14004525b:	add    BYTE PTR [rcx],al
   14004525d:	add    BYTE PTR [rax],al
   14004525f:	add    BYTE PTR [rcx],al
   140045261:	add    BYTE PTR [rax],al
   140045263:	add    BYTE PTR [rax+0x52],ch
   140045266:	add    al,0x0
   140045268:	add    BYTE PTR [rax],al
	...
   140045273:	add    BYTE PTR [rsi],ah
   140045275:	inc    BYTE PTR [rdx]
   140045277:	add    BYTE PTR [rax],bh
   140045279:	add    BYTE PTR [rax],al
   14004527b:	add    BYTE PTR [rax],al
   14004527d:	add    BYTE PTR [rax],al
   14004527f:	add    BYTE PTR [rax+0x4e],dl
   140045282:	add    DWORD PTR [rax],eax
   140045284:	(bad)  
   140045285:	(bad)  
   140045286:	(bad)  
   140045287:	jmp    FWORD PTR [rdx+0x14e]
   14004528d:	add    BYTE PTR [rax],al
   14004528f:	add    dl,al
   140045291:	rex.WRX add QWORD PTR [rax],r8
   140045294:	(bad)  
   140045295:	(bad)  
   140045296:	(bad)  
   140045297:	jmp    QWORD PTR [rsi]
   140045299:	inc    BYTE PTR [rdx]
   14004529b:	add    BYTE PTR [rax],al
   14004529d:	add    BYTE PTR [rax],al
   14004529f:	add    BYTE PTR [rbx],dh
   1400452a1:	inc    BYTE PTR [rdx]
   1400452a3:	add    BYTE PTR [rcx],al
   1400452a5:	add    BYTE PTR [rax],al
   1400452a7:	add    BYTE PTR [rcx],bl
   1400452a9:	or     al,BYTE PTR [rdx]
   1400452ab:	add    BYTE PTR [rdx],cl
   1400452ad:	xor    al,BYTE PTR [rsi]
   1400452af:	push   rax
   1400452b0:	out    0xe2,al
   1400452b2:	add    al,BYTE PTR [rax]
   1400452b4:	nop
   1400452b5:	fild   WORD PTR [rbx]
   1400452b7:	add    BYTE PTR [rcx],bl
   1400452b9:	and    cl,BYTE PTR [rax]
   1400452bb:	add    BYTE PTR [rcx],bl
   1400452bd:	push   rdx
   1400452be:	adc    eax,0x11e013f0
   1400452c3:	ror    BYTE PTR [rdi],1
   1400452c5:	ror    BYTE PTR [rip+0xb600c70],0x30        # 0x14b645f3c
   1400452cc:	out    0xe2,al
   1400452ce:	add    al,BYTE PTR [rax]
   1400452d0:	push   0x3df
   1400452d5:	add    BYTE PTR [rax],al
   1400452d7:	add    BYTE PTR [rax],al
   1400452d9:	add    BYTE PTR [rax],al
   1400452db:	add    BYTE PTR [rcx],al
   1400452dd:	add    BYTE PTR [rax],al
   1400452df:	add    BYTE PTR [rcx],al
   1400452e1:	add    BYTE PTR [rax],al
   1400452e3:	add    al,ch
   1400452e5:	push   rdx
   1400452e6:	add    al,0x0
   1400452e8:	add    BYTE PTR [rax],al
	...
   1400452f3:	add    BYTE PTR [rsi+rdi*8+0x2],cl
   1400452f7:	add    BYTE PTR [rax],bh
   1400452f9:	add    BYTE PTR [rax],al
   1400452fb:	add    BYTE PTR [rax],al
   1400452fd:	add    BYTE PTR [rax],al
   1400452ff:	add    BYTE PTR [rdi+rcx*2],cl
   140045302:	add    DWORD PTR [rax],eax
   140045304:	(bad)  
   140045305:	(bad)  
   140045306:	(bad)  
   140045307:	(bad)  
   140045308:	cmp    cl,BYTE PTR [rdi+0x1]
   14004530b:	add    BYTE PTR [rax],al
   14004530d:	add    BYTE PTR [rax],al
   14004530f:	add    BYTE PTR [rdx+0x50],dl
   140045312:	add    DWORD PTR [rax],eax
   140045314:	(bad)  
   140045315:	(bad)  
   140045316:	(bad)  
   140045317:	jmp    rdi
   140045319:	push   rax
   14004531a:	add    DWORD PTR [rax],eax
   14004531c:	add    BYTE PTR [rax],al
   14004531e:	add    BYTE PTR [rax],al
   140045320:	pop    rcx
   140045321:	inc    BYTE PTR [rdx]
   140045323:	add    BYTE PTR [rcx],al
   140045325:	add    BYTE PTR [rax],al
   140045327:	add    BYTE PTR [rcx],bl
   140045329:	or     al,BYTE PTR [rdx]
   14004532b:	add    BYTE PTR [rdx],cl
   14004532d:	xor    al,BYTE PTR [rsi]
   14004532f:	push   rax
   140045330:	out    0xe2,al
   140045332:	add    al,BYTE PTR [rax]
   140045334:	push   0x10003df
   140045339:	adc    al,0x8
   14004533b:	add    BYTE PTR [rsp+riz*2],dl
   14004533e:	or     DWORD PTR [rax],eax
   140045340:	adc    al,0x54
   140045342:	or     BYTE PTR [rax],al
   140045344:	adc    al,0x34
   140045346:	(bad)  
   140045347:	add    BYTE PTR [rdx+rsi*1],dl
   14004534a:	adc    BYTE PTR [rax+0x19],dh
   14004534d:	(bad)  
   14004534e:	add    DWORD PTR [rax],eax
   140045350:	(bad)  
   140045351:	(bad)  
   140045352:	add    BYTE PTR [rax],al
   140045354:	out    0xe2,al
   140045356:	add    al,BYTE PTR [rax]
   140045358:	rex fild WORD PTR [rbx]
	...
   140045363:	add    BYTE PTR [rcx],al
   140045365:	add    BYTE PTR [rax],al
   140045367:	add    BYTE PTR [rcx],al
   140045369:	add    BYTE PTR [rax],al
   14004536b:	add    BYTE PTR [rax+0x53],dh
   14004536e:	add    al,0x0
   140045370:	add    BYTE PTR [rax],al
	...
   14004537b:	add    BYTE PTR [rcx-0x2],bh
   14004537e:	add    al,BYTE PTR [rax]
   140045380:	rex.W add BYTE PTR [rax],al
   140045383:	add    BYTE PTR [rax],al
   140045385:	add    BYTE PTR [rax],al
   140045387:	add    BYTE PTR [rdx+rdx*2+0x1],bh
   14004538b:	add    bh,bh
   14004538d:	(bad)  
   14004538e:	(bad)  
   14004538f:	call   FWORD PTR [rax+0x152]
   140045395:	add    BYTE PTR [rax],al
   140045397:	add    BYTE PTR [rbx-0xfffeae],bh
   14004539d:	(bad)  
   14004539e:	(bad)  
   14004539f:	(bad)  
   1400453a0:	jns    0x1400453a0
   1400453a2:	add    al,BYTE PTR [rax]
   1400453a4:	add    BYTE PTR [rax],al
   1400453a6:	add    BYTE PTR [rax],al
   1400453a8:	xchg   esi,edi
   1400453aa:	add    al,BYTE PTR [rax]
   1400453ac:	add    DWORD PTR [rax],eax
   1400453ae:	add    BYTE PTR [rax],al
   1400453b0:	sbb    DWORD PTR [rbx],ecx
   1400453b2:	add    eax,DWORD PTR [rax]
   1400453b4:	or     eax,DWORD PTR [rdx+0x7]
   1400453b7:	push   rax
   1400453b8:	(bad)  
   1400453b9:	xor    BYTE PTR [rax],al
   1400453bb:	add    dh,ah
   1400453bd:	loop   0x1400453c1
   1400453bf:	add    BYTE PTR [rax-0x21],al
   1400453c2:	add    eax,DWORD PTR [rax]
   1400453c4:	sbb    DWORD PTR [rbx],edx
   1400453c6:	add    al,BYTE PTR [rax]
   1400453c8:	or     dl,BYTE PTR [rdx+0x6]
   1400453cb:	xor    dh,ah
   1400453cd:	loop   0x1400453d1
   1400453cf:	add    BYTE PTR [rax],bl
   1400453d1:	fild   WORD PTR [rbx]
	...
   1400453db:	add    BYTE PTR [rcx],al
   1400453dd:	add    BYTE PTR [rax],al
   1400453df:	add    BYTE PTR [rcx],al
   1400453e1:	add    BYTE PTR [rax],al
   1400453e3:	add    al,ch
   1400453e5:	push   rbx
   1400453e6:	add    al,0x0
   1400453e8:	add    BYTE PTR [rax],al
	...
   1400453f3:	add    cl,al
   1400453f5:	inc    BYTE PTR [rdx]
   1400453f7:	add    BYTE PTR [rax],bh
   1400453f9:	add    BYTE PTR [rax],al
   1400453fb:	add    BYTE PTR [rax],al
   1400453fd:	add    BYTE PTR [rax],al
   1400453ff:	add    ah,cl
   140045401:	push   rdx
   140045402:	add    DWORD PTR [rax],eax
   140045404:	(bad)  
   140045405:	(bad)  
   140045406:	(bad)  
   140045407:	(bad)  
   140045408:	in     al,dx
   140045409:	push   rdx
   14004540a:	add    DWORD PTR [rax],eax
   14004540c:	add    BYTE PTR [rax],al
   14004540e:	add    BYTE PTR [rax],al
   140045410:	or     DWORD PTR [rbx+0x1],edx
   140045413:	add    bh,bh
   140045415:	(bad)  
   140045416:	(bad)  
   140045417:	inc    ecx
   140045419:	inc    BYTE PTR [rdx]
   14004541b:	add    BYTE PTR [rax],al
   14004541d:	add    BYTE PTR [rax],al
   14004541f:	add    dh,cl
   140045421:	inc    BYTE PTR [rdx]
   140045423:	add    BYTE PTR [rcx],al
   140045425:	add    BYTE PTR [rax],al
   140045427:	add    BYTE PTR [rcx],bl
   140045429:	or     al,BYTE PTR [rdx]
   14004542b:	add    BYTE PTR [rdx],cl
   14004542d:	xor    al,BYTE PTR [rsi]
   14004542f:	push   rax
   140045430:	out    0xe2,al
   140045432:	add    al,BYTE PTR [rax]
   140045434:	sbb    bh,bl
   140045436:	add    eax,DWORD PTR [rax]
   140045438:	add    DWORD PTR [rdi],ecx
   14004543a:	(bad)  
   14004543b:	add    BYTE PTR [rdi],cl
   14004543d:	or     BYTE PTR fs:[rax],al
   140045440:	sysenter 
   140045442:	(bad)  
   140045443:	add    BYTE PTR [rdi],cl
   140045445:	xor    cl,BYTE PTR [rbx]
   140045447:	jo     0x14004545a
   140045449:	sbb    cl,BYTE PTR [rax]
   14004544b:	add    BYTE PTR [rdx],dl
   14004544d:	jb     0x14004545a
   14004544f:	lock or eax,esp
   140045452:	(bad)  
   140045453:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x1436458ca
   14004545a:	add    dl,BYTE PTR [rax-0x1a]
   14004545d:	loop   0x140045461
   14004545f:	add    BYTE PTR [rax-0x1f],dh
   140045462:	add    eax,DWORD PTR [rax]
   140045464:	(bad)  
   140045465:	(bad)  
   140045466:	(bad)  
   140045467:	jmp    rdi
   140045469:	inc    BYTE PTR [rdx]
   14004546b:	add    BYTE PTR [rax],al
   14004546d:	add    BYTE PTR [rax],al
   14004546f:	add    bl,dh
   140045471:	inc    BYTE PTR [rdx]
   140045473:	add    BYTE PTR [rax],al
   140045475:	add    BYTE PTR [rax],al
   140045477:	add    al,dl
   140045479:	push   rbx
   14004547a:	add    DWORD PTR [rax],eax
   14004547c:	(bad)  
   14004547d:	(bad)  
   14004547e:	(bad)  
   14004547f:	inc    DWORD PTR [rdx]
   140045481:	push   rsp
   140045482:	add    DWORD PTR [rax],eax
   140045484:	add    BYTE PTR [rax],al
   140045486:	add    BYTE PTR [rax],al
   140045488:	(bad)  
   140045489:	push   rsp
   14004548a:	add    DWORD PTR [rax],eax
   14004548c:	add    DWORD PTR [rax],eax
   14004548e:	add    BYTE PTR [rax],al
   140045490:	push   rbp
   140045491:	push   rbp
   140045492:	add    DWORD PTR [rax],eax
   140045494:	add    BYTE PTR [rax],al
   140045496:	add    BYTE PTR [rax],al
   140045498:	js     0x1400454ef
   14004549a:	add    DWORD PTR [rax],eax
   14004549c:	(bad)  
   14004549d:	(bad)  
   14004549e:	(bad)  
   14004549f:	call   FWORD PTR [rcx]
   1400454a1:	and    eax,DWORD PTR [rax+rax*1]
   1400454a4:	adc    al,0x34
   1400454a6:	adc    al,BYTE PTR [rax]
   1400454a8:	or     dl,dl
   1400454aa:	add    al,0x70
   1400454ac:	int3   
   1400454ad:	out    0x2,eax
   1400454af:	add    BYTE PTR [rax-0x1f],cl
   1400454b2:	add    eax,DWORD PTR [rax]
   1400454b4:	(bad)  
   1400454b5:	add    BYTE PTR [rax],al
   1400454b7:	add    bh,bh
   1400454b9:	(bad)  
   1400454ba:	(bad)  
   1400454bb:	inc    DWORD PTR [rip+0x2ff]        # 0x1400457c0
   1400454c1:	add    BYTE PTR [rax],al
   1400454c3:	add    BYTE PTR [rcx],dl
   1400454c5:	inc    DWORD PTR [rdx]
   1400454c7:	add    BYTE PTR [rax-0xfffeab],bl
   1400454cd:	(bad)  
   1400454ce:	(bad)  
   1400454cf:	(bad)  
   1400454d0:	fist   DWORD PTR [rbp+0x1]
   1400454d3:	add    BYTE PTR [rax],al
   1400454d5:	add    BYTE PTR [rax],al
   1400454d7:	add    al,dh
   1400454d9:	push   rbp
   1400454da:	add    DWORD PTR [rax],eax
   1400454dc:	add    DWORD PTR [rax],eax
   1400454de:	add    BYTE PTR [rax],al
   1400454e0:	pop    rsp
   1400454e1:	push   rsi
   1400454e2:	add    DWORD PTR [rax],eax
   1400454e4:	add    BYTE PTR [rax],al
   1400454e6:	add    BYTE PTR [rax],al
   1400454e8:	jle    0x140045540
   1400454ea:	add    DWORD PTR [rax],eax
   1400454ec:	(bad)  
   1400454ed:	(bad)  
   1400454ee:	(bad)  
   1400454ef:	inc    DWORD PTR [rcx]
   1400454f1:	sbb    DWORD PTR [rbx],ecx
   1400454f3:	add    BYTE PTR [rcx],bl
   1400454f5:	je     0x1400454fe
   1400454f7:	add    BYTE PTR [rcx],bl
   1400454f9:	fs (bad) 
   1400454fb:	add    BYTE PTR [rcx],bl
   1400454fd:	push   rsp
   1400454fe:	add    eax,0x4341900
   140045503:	add    BYTE PTR [rcx],bl
   140045505:	lock (bad) 
   140045507:	loopne 0x14004551e
   140045509:	rol    BYTE PTR [rax],0x0
   14004550c:	sbb    DWORD PTR [rdi],ebx
   14004550e:	(bad)  
   14004550f:	add    BYTE PTR [rdi],bl
   140045511:	xor    al,0xb
   140045513:	add    BYTE PTR [rbx],dl
   140045515:	push   rdx
   140045516:	pavgb  mm1,QWORD PTR [rip+0xffffffffe6600c70]        # 0x12664618d
   14004551d:	loop   0x140045521
   14004551f:	add    BYTE PTR [rax],ah
   140045521:	loope  0x140045526
	...
   14004552b:	add    BYTE PTR [rcx],al
   14004552d:	add    BYTE PTR [rax],al
   14004552f:	add    BYTE PTR [rcx],al
   140045531:	add    BYTE PTR [rax],al
   140045533:	add    BYTE PTR [rax],bh
   140045535:	push   rbp
   140045536:	add    al,0x0
   140045538:	add    BYTE PTR [rax],al
	...
   140045543:	add    BYTE PTR [rbx],ah
   140045545:	inc    DWORD PTR [rdx]
   140045547:	add    BYTE PTR [rax],bh
   140045549:	add    BYTE PTR [rax],al
   14004554b:	add    BYTE PTR [rax],al
   14004554d:	add    BYTE PTR [rax],al
   14004554f:	add    ah,dh
   140045551:	push   rdi
   140045552:	add    DWORD PTR [rax],eax
   140045554:	(bad)  
   140045555:	(bad)  
   140045556:	(bad)  
   140045557:	call   FWORD PTR [rax+rbx*2]
   14004555a:	add    DWORD PTR [rax],eax
   14004555c:	add    BYTE PTR [rax],al
   14004555e:	add    BYTE PTR [rax],al
   140045560:	xor    bl,BYTE PTR [rcx+0x1]
   140045563:	add    bh,bh
   140045565:	(bad)  
   140045566:	(bad)  
   140045567:	inc    ebp
   140045569:	pop    rcx
   14004556a:	add    DWORD PTR [rax],eax
   14004556c:	add    BYTE PTR [rax],al
   14004556e:	add    BYTE PTR [rax],al
   140045570:	xor    bh,bh
   140045572:	add    al,BYTE PTR [rax]
   140045574:	add    DWORD PTR [rax],eax
   140045576:	add    BYTE PTR [rax],al
   140045578:	sbb    DWORD PTR [rdx],ecx
   14004557a:	add    al,BYTE PTR [rax]
   14004557c:	or     dh,BYTE PTR [rdx]
   14004557e:	(bad)  
   14004557f:	push   rax
   140045580:	out    0xe2,al
   140045582:	add    al,BYTE PTR [rax]
   140045584:	and    cl,ah
   140045586:	add    eax,DWORD PTR [rax]
   140045588:	adc    DWORD PTR [rbx],esp
   14004558a:	or     al,BYTE PTR [rax]
   14004558c:	and    edx,DWORD PTR [rsi+rcx*1+0x0]
   140045590:	(bad)  
   140045591:	xor    al,0xd
   140045593:	add    BYTE PTR [rbx],dl
   140045595:	push   rdx
   140045596:	(bad)  
   140045598:	or     eax,0x9c00be0
   14004559d:	jo     0x1400455a7
   14004559f:	(bad)  
   1400455a0:	out    0xe2,al
   1400455a2:	add    al,BYTE PTR [rax]
   1400455a4:	cmp    dl,ah
   1400455a6:	add    eax,DWORD PTR [rax]
   1400455a8:	(bad)  
   1400455a9:	(bad)  
   1400455aa:	(bad)  
   1400455ab:	dec    DWORD PTR [rbp-0x1]
   1400455ae:	add    al,BYTE PTR [rax]
   1400455b0:	je     0x14004560d
   1400455b2:	add    DWORD PTR [rax],eax
   1400455b4:	(bad)  
   1400455b5:	(bad)  
   1400455b6:	(bad)  
   1400455b7:	push   QWORD PTR [rbp+0x15b]
   1400455bd:	add    BYTE PTR [rax],al
   1400455bf:	add    BYTE PTR [rsi],bl
   1400455c1:	pop    rsp
   1400455c2:	add    DWORD PTR [rax],eax
   1400455c4:	(bad)  
   1400455c5:	(bad)  
   1400455c6:	(bad)  
   1400455c7:	call   FWORD PTR [rcx]
   1400455c9:	(bad)  
   1400455ca:	or     BYTE PTR [rax],al
   1400455cc:	adc    BYTE PTR [rdi+rdx*1],dh
   1400455cf:	add    BYTE PTR [rax],dl
   1400455d1:	ror    BYTE PTR [rax+riz*8],cl
   1400455d4:	or     dl,al
   1400455d6:	or     BYTE PTR [rax+0x7],dh
   1400455d9:	(bad)  
   1400455da:	(bad)  
   1400455db:	push   rax
   1400455dc:	sub    bh,ah
   1400455de:	add    al,BYTE PTR [rax]
   1400455e0:	(bad)  
   1400455e1:	add    BYTE PTR [rax],al
   1400455e3:	add    BYTE PTR [rcx],al
   1400455e5:	or     al,0x6
   1400455e7:	add    BYTE PTR [rsp+rsi*1],cl
   1400455ea:	or     al,BYTE PTR [rax]
   1400455ec:	or     al,0x32
   1400455ee:	or     BYTE PTR [rax+0x7],dh
   1400455f1:	(bad)  
   1400455f2:	(bad)  
   1400455f3:	push   rax
   1400455f4:	sbb    DWORD PTR [rcx],esi
   1400455f6:	or     DWORD PTR [rax],eax
   1400455f8:	(bad)  
   1400455f9:	push   rsp
   1400455fa:	sbb    al,BYTE PTR [rax]
   1400455fc:	sbb    esi,DWORD PTR [rcx+rbx*1]
   1400455ff:	add    BYTE PTR [rdi],cl
   140045601:	add    DWORD PTR [rax+rax*1],edx
   140045604:	or     al,dh
   140045606:	(bad)  
   140045607:	loopne 0x14004560d
   140045609:	jo     0x14004560b
   14004560b:	add    ah,cl
   14004560d:	out    0x2,eax
   14004560f:	add    BYTE PTR [rax-0x1e],ah
   140045612:	add    eax,DWORD PTR [rax]
   140045614:	(bad)  
   140045615:	add    BYTE PTR [rax],al
   140045617:	add    bh,bh
   140045619:	(bad)  
   14004561a:	(bad)  
   14004561b:	jmp    QWORD PTR [rbx-0x1]
   14004561e:	add    al,BYTE PTR [rax]
   140045620:	add    BYTE PTR [rax],al
   140045622:	add    BYTE PTR [rax],al
   140045624:	outs   dx,DWORD PTR ds:[rsi]
   140045625:	inc    DWORD PTR [rdx]
   140045627:	add    BYTE PTR [rax],al
   140045629:	add    BYTE PTR [rax],al
   14004562b:	add    BYTE PTR [rbx-0x1],bh
   14004562e:	add    al,BYTE PTR [rax]
   140045630:	test   BYTE PTR [rdi+0x1],bl
   140045633:	add    bh,bh
   140045635:	(bad)  
   140045636:	(bad)  
   140045637:	inc    DWORD PTR [rdx]
   140045639:	(bad)  
   14004563a:	add    DWORD PTR [rax],eax
   14004563c:	add    BYTE PTR [rax],al
   14004563e:	add    BYTE PTR [rax],al
   140045640:	(bad)  
   140045641:	(bad)  
   140045642:	add    DWORD PTR [rax],eax
   140045644:	add    DWORD PTR [rax],eax
   140045646:	add    BYTE PTR [rax],al
   140045648:	and    BYTE PTR [rax+0x1],0x0
   14004564c:	add    BYTE PTR [rax],al
   14004564e:	add    BYTE PTR [rax],al
   140045650:	mov    ah,BYTE PTR [rax+0x1]
   140045653:	add    BYTE PTR [rdx],al
   140045655:	add    BYTE PTR [rax],al
   140045657:	add    BYTE PTR [rdx],cl
   140045659:	(bad)  
   14004565a:	add    DWORD PTR [rax],eax
   14004565c:	add    BYTE PTR [rax],al
   14004565e:	add    BYTE PTR [rax],al
   140045660:	(bad)  
   140045662:	add    DWORD PTR [rax],eax
   140045664:	(bad)  
   140045665:	(bad)  
   140045666:	(bad)  
   140045667:	call   FWORD PTR [rcx]
   140045669:	lar    eax,WORD PTR [rax]
   14004566c:	(bad)  
   14004566d:	push   rdx
   14004566e:	add    dh,BYTE PTR [rax]
   140045670:	out    0xe2,al
   140045672:	add    al,BYTE PTR [rax]
   140045674:	adc    dl,ah
   140045676:	add    eax,DWORD PTR [rax]
	...
   140045680:	add    DWORD PTR [rax],eax
   140045682:	add    BYTE PTR [rax],al
   140045684:	add    DWORD PTR [rax],eax
   140045686:	add    BYTE PTR [rax],al
   140045688:	mov    WORD PTR [rsi+0x4],ss
   14004568b:	add    BYTE PTR [rcx],cl
   14004568d:	add    BYTE PTR [rax],al
   14004568f:	add    BYTE PTR [rax-0x18],dl
   140045692:	add    al,0x0
   140045694:	sub    BYTE PTR [rax],al
   140045696:	add    BYTE PTR [rax],al
   140045698:	(bad)  
   140045699:	inc    DWORD PTR [rdx]
   14004569b:	add    BYTE PTR [rax],bh
   14004569d:	add    BYTE PTR [rax],al
   14004569f:	add    BYTE PTR [rax-0xfffe9e],ah
   1400456a5:	(bad)  
   1400456a6:	(bad)  
   1400456a7:	jmp    rcx
   1400456a9:	(bad)  
   1400456ab:	add    BYTE PTR [rax],al
   1400456ad:	add    BYTE PTR [rax],al
   1400456af:	add    dl,ch
   1400456b1:	(bad)  
   1400456b3:	add    bh,bh
   1400456b5:	(bad)  
   1400456b6:	(bad)  
   1400456b7:	dec    DWORD PTR [rbp+0x2ff]
   1400456bd:	add    BYTE PTR [rax],al
   1400456bf:	add    BYTE PTR [rdx+0x10002ff],bl
   1400456c5:	add    BYTE PTR [rax],al
   1400456c7:	add    BYTE PTR [rsi+0x2ff],ah
   1400456cd:	add    BYTE PTR [rax],al
   1400456cf:	add    BYTE PTR [rcx],bl
   1400456d1:	or     al,BYTE PTR [rdx]
   1400456d3:	add    BYTE PTR [rdx],cl
   1400456d5:	xor    al,BYTE PTR [rsi]
   1400456d7:	push   rax
   1400456d8:	out    0xe2,al
   1400456da:	add    al,BYTE PTR [rax]
   1400456dc:	adc    dl,ah
   1400456de:	add    eax,DWORD PTR [rax]
   1400456e0:	sbb    DWORD PTR [rcx+rcx*1],esp
   1400456e3:	add    BYTE PTR [rsp+rsi*1],ah
   1400456e6:	sbb    BYTE PTR [rcx],al
   1400456e8:	(bad)  
   1400456e9:	add    DWORD PTR [rax],edx
   1400456eb:	add    DWORD PTR [rax],edx
   1400456ed:	lock (bad) 
   1400456ef:	loopne 0x1400456fd
   1400456f1:	ror    BYTE PTR [rdx],1
   1400456f3:	ror    BYTE PTR [rax],0x70
   1400456f6:	add    BYTE PTR [rax],al
   1400456f8:	out    0xe2,al
   1400456fa:	add    al,BYTE PTR [rax]
   1400456fc:	call   0x13f045ae2
   140045701:	(bad)  
   140045702:	(bad)  
   140045703:	(bad)  
   140045704:	mov    edx,0x2ff
	...
   140045715:	add    BYTE PTR [rax],al
   140045717:	add    BYTE PTR [rcx],al
   140045719:	add    BYTE PTR [rax],al
   14004571b:	add    BYTE PTR [rcx],al
   14004571d:	add    BYTE PTR [rax],al
   14004571f:	add    BYTE PTR [rdx],al
   140045721:	add    BYTE PTR [rax],al
   140045723:	add    BYTE PTR [rcx],al
   140045725:	add    BYTE PTR [rax],al
   140045727:	add    BYTE PTR [rdi+rdx*2],ch
   14004572a:	add    al,0x0
   14004572c:	or     DWORD PTR [rax],eax
   14004572e:	add    BYTE PTR [rax],al
   140045730:	push   rax
   140045731:	call   0x1405c573a
   140045736:	add    BYTE PTR [rax],al
   140045738:	(bad)  
   140045739:	inc    DWORD PTR [rdx]
   14004573b:	add    BYTE PTR [rax+0x0],cl
   14004573e:	add    BYTE PTR [rax],al
   140045740:	xor    BYTE PTR [rbx+0x1],ah
   140045743:	add    bh,bh
   140045745:	(bad)  
   140045746:	(bad)  
   140045747:	call   QWORD PTR [rbp+0x163]
   14004574d:	add    BYTE PTR [rax],al
   14004574f:	add    BYTE PTR [rax+0x1000163],bl
   140045755:	add    BYTE PTR [rax],al
   140045757:	add    ch,bh
   140045759:	movsxd eax,DWORD PTR [rcx]
   14004575b:	add    bh,bh
   14004575d:	(bad)  
   14004575e:	(bad)  
   14004575f:	dec    DWORD PTR [rsp+riz*2]
   140045762:	add    DWORD PTR [rax],eax
   140045764:	add    DWORD PTR [rax],eax
   140045766:	add    BYTE PTR [rax],al
   140045768:	(bad)  
   140045769:	add    DWORD PTR gs:[rax],eax
   14004576c:	add    BYTE PTR [rax],al
   14004576e:	add    BYTE PTR [rax],al
   140045770:	rex.RXB
   140045771:	add    DWORD PTR [eax],eax
   140045774:	(bad)  
   140045775:	(bad)  
   140045776:	(bad)  
   140045777:	inc    esi
   140045779:	inc    DWORD PTR [rdx]
   14004577b:	add    BYTE PTR [rax],al
   14004577d:	add    BYTE PTR [rax],al
   14004577f:	add    bl,dl
   140045781:	inc    DWORD PTR [rdx]
   140045783:	add    BYTE PTR [rdx],al
   140045785:	add    BYTE PTR [rax],al
   140045787:	add    dl,ah
   140045789:	inc    DWORD PTR [rdx]
   14004578b:	add    BYTE PTR [rax],al
   14004578d:	add    BYTE PTR [rax],al
   14004578f:	add    BYTE PTR [rcx],bl
   140045791:	or     al,BYTE PTR [rdx]
   140045793:	add    BYTE PTR [rdx],cl
   140045795:	push   rdx
   140045796:	(bad)  
   140045797:	push   rax
   140045798:	out    0xe2,al
   14004579a:	add    al,BYTE PTR [rax]
   14004579c:	call   0x159045b82
   1400457a1:	sbb    al,0x6
   1400457a3:	add    BYTE PTR [rsp+riz*2],bl
   1400457a6:	or     al,BYTE PTR [rax]
   1400457a8:	sbb    BYTE PTR [rcx+rcx*1],dh
   1400457ab:	add    BYTE PTR [rdx+rdx*2],cl
   1400457ae:	or     BYTE PTR [rax-0x1a],dh
   1400457b1:	loop   0x1400457b5
   1400457b3:	add    al,al
   1400457b5:	loope  0x1400457ba
	...
   1400457bf:	add    BYTE PTR [rcx],al
   1400457c1:	add    BYTE PTR [rax],al
   1400457c3:	add    BYTE PTR [rcx],al
   1400457c5:	add    BYTE PTR [rax],al
   1400457c7:	add    ah,cl
   1400457c9:	push   rdi
   1400457ca:	add    al,0x0
   1400457cc:	add    BYTE PTR [rax],al
	...
   1400457d7:	add    dh,dh
   1400457d9:	inc    DWORD PTR [rdx]
   1400457db:	add    BYTE PTR [rax],bh
   1400457dd:	add    BYTE PTR [rax],al
   1400457df:	add    BYTE PTR [rax+0x67],dh
   1400457e2:	add    DWORD PTR [rax],eax
   1400457e4:	(bad)  
   1400457e5:	(bad)  
   1400457e6:	(bad)  
   1400457e7:	push   QWORD PTR [rdi]
   1400457e9:	push   0x1
   1400457ee:	add    BYTE PTR [rax],al
   1400457f0:	rex.WR push 0xffffffffffff0001
   1400457f6:	(bad)  
   1400457f7:	push   rsi
   1400457f9:	inc    DWORD PTR [rdx]
   1400457fb:	add    BYTE PTR [rax],al
   1400457fd:	add    BYTE PTR [rax],al
   1400457ff:	add    BYTE PTR [rbx],al
   140045801:	add    BYTE PTR [rbx],al
   140045803:	add    BYTE PTR [rcx],al
   140045805:	add    BYTE PTR [rax],al
   140045807:	add    BYTE PTR [rcx],bl
   140045809:	or     al,BYTE PTR [rdx]
   14004580b:	add    BYTE PTR [rdx],cl
   14004580d:	xor    al,BYTE PTR [rsi]
   14004580f:	push   rax
   140045810:	out    0xe2,al
   140045812:	add    al,BYTE PTR [rax]
   140045814:	shl    cl,0x3
   140045817:	add    BYTE PTR [rcx],al
   140045819:	adc    eax,0x74150008
   14004581e:	(bad)  
   14004581f:	add    BYTE PTR [rip+0x15000d64],dl        # 0x155046589
   140045825:	xor    al,0xc
   140045827:	add    BYTE PTR [rip+0x19e01192],dl        # 0x159e469bf
   14004582d:	sbb    eax,0x741d0008
   140045832:	or     eax,DWORD PTR [rax]
   140045834:	sbb    DWORD PTR [rdx+rcx*1+0x0],esp
   140045838:	adc    eax,0x9000834
   14004583d:	push   rdx
   14004583e:	add    eax,0x2e2e6e0
   140045843:	add    BYTE PTR [rax+0x3e1],bl
   140045849:	add    BYTE PTR [rax],al
   14004584b:	add    BYTE PTR [rax],al
   14004584d:	add    BYTE PTR [rax],al
   14004584f:	add    BYTE PTR [rcx],al
   140045851:	add    BYTE PTR [rax],al
   140045853:	add    BYTE PTR [rcx],al
   140045855:	add    BYTE PTR [rax],al
   140045857:	add    BYTE PTR [rax+rbx*2+0x4],bl
   14004585b:	add    BYTE PTR [rax+0x0],al
	...
   140045866:	add    BYTE PTR [rax],al
   140045868:	sbb    al,0x0
   14004586a:	add    eax,DWORD PTR [rax]
   14004586c:	cmp    BYTE PTR [rax],al
   14004586e:	add    BYTE PTR [rax],al
   140045870:	int3   
   140045871:	imul   eax,DWORD PTR [rcx],0xffffff00
   140045877:	call   FWORD PTR [rcx]
   140045879:	push   0x1
   14004587b:	add    BYTE PTR [rax],al
   14004587d:	add    BYTE PTR [rax],al
   14004587f:	add    BYTE PTR [rip+0xffffffffff00016a],ch        # 0x13f0459ef
   140045885:	(bad)  
   140045886:	(bad)  
   140045887:	call   FWORD PTR [rax+rax*1]
   14004588a:	add    eax,DWORD PTR [rax]
   14004588c:	add    BYTE PTR [rax],al
   14004588e:	add    BYTE PTR [rax],al
   140045890:	sub    DWORD PTR [rax],eax
   140045892:	add    eax,DWORD PTR [rax]
   140045894:	add    DWORD PTR [rax],eax
   140045896:	add    BYTE PTR [rax],al
   140045898:	sbb    DWORD PTR [rdx],ecx
   14004589a:	add    al,BYTE PTR [rax]
   14004589c:	or     dh,BYTE PTR [rdx]
   14004589e:	(bad)  
   14004589f:	push   rax
   1400458a0:	out    0xe2,al
   1400458a2:	add    al,BYTE PTR [rax]
   1400458a4:	cwde   
   1400458a5:	loope  0x1400458aa
   1400458a7:	add    BYTE PTR [rcx],al
   1400458a9:	adc    eax,0x74150008
   1400458ae:	or     DWORD PTR [rax],eax
   1400458b0:	adc    eax,0x15000864
   1400458b5:	xor    al,0x7
   1400458b7:	add    BYTE PTR [rip+0x11e01132],dl        # 0x151e469ef
   1400458bd:	adc    al,BYTE PTR [rbx]
   1400458bf:	add    BYTE PTR [rdx],cl
   1400458c1:	(bad)  
   1400458c2:	add    esi,DWORD PTR [rax]
   1400458c4:	add    dl,BYTE PTR [rax+0x0]
   1400458c7:	add    dh,ah
   1400458c9:	loop   0x1400458cd
   1400458cb:	add    BYTE PTR [rax-0x1d],dl
   1400458ce:	add    eax,DWORD PTR [rax]
   1400458d0:	(bad)  
   1400458d1:	(bad)  
   1400458d2:	(bad)  
   1400458d3:	inc    DWORD PTR [rdx+0x0]
   1400458d6:	add    eax,DWORD PTR [rax]
   1400458d8:	cwde   
   1400458d9:	ins    DWORD PTR es:[rdi],dx
   1400458da:	add    DWORD PTR [rax],eax
   1400458dc:	(bad)  
   1400458dd:	(bad)  
   1400458de:	(bad)  
   1400458df:	push   QWORD PTR [rbp+rbp*2+0x1]
   1400458e6:	add    BYTE PTR [rax],al
   1400458e8:	sub    BYTE PTR [rsi+0x1],ch
   1400458eb:	add    bh,bh
   1400458ed:	(bad)  
   1400458ee:	(bad)  
   1400458ef:	(bad)  
   1400458f0:	cmp    al,0x6e
   1400458f2:	add    DWORD PTR [rax],eax
   1400458f4:	add    BYTE PTR [rax],al
   1400458f6:	add    BYTE PTR [rax],al
   1400458f8:	rex.R outs dx,BYTE PTR ds:[rsi]
   1400458fa:	add    DWORD PTR [rax],eax
   1400458fc:	(bad)  
   1400458fd:	(bad)  
   1400458fe:	(bad)  
   1400458ff:	call   QWORD PTR [rcx]
   140045901:	adc    al,BYTE PTR [rbx]
   140045903:	add    BYTE PTR [rdx],cl
   140045905:	(bad)  
   140045906:	add    esi,DWORD PTR [rax]
   140045908:	add    dl,BYTE PTR [rax+0x0]
   14004590b:	add    dh,ah
   14004590d:	loop   0x140045911
   14004590f:	add    BYTE PTR [rax],ch
   140045911:	jrcxz  0x140045916
   140045913:	add    BYTE PTR [rax],al
   140045915:	add    BYTE PTR [rax],al
   140045917:	add    BYTE PTR [rsi+rbp*2+0x1],dl
   14004591b:	add    bh,bh
   14004591d:	(bad)  
   14004591e:	(bad)  
   14004591f:	push   QWORD PTR [rax+0x6e]
   140045922:	add    DWORD PTR [rax],eax
   140045924:	add    BYTE PTR [rax],al
   140045926:	add    BYTE PTR [rax],al
   140045928:	loop   0x140045998
   14004592a:	add    DWORD PTR [rax],eax
   14004592c:	(bad)  
   14004592d:	(bad)  
   14004592e:	(bad)  
   14004592f:	push   rbp
   140045931:	outs   dx,BYTE PTR ds:[rsi]
   140045932:	add    DWORD PTR [rax],eax
   140045934:	add    BYTE PTR [rax],al
   140045936:	add    BYTE PTR [rax],al
   140045938:	std    
   140045939:	outs   dx,BYTE PTR ds:[rsi]
   14004593a:	add    DWORD PTR [rax],eax
   14004593c:	(bad)  
   14004593d:	(bad)  
   14004593e:	(bad)  
   14004593f:	call   FWORD PTR [rcx]
   140045941:	xor    DWORD PTR [rcx],ecx
   140045943:	add    BYTE PTR [rbx],ah
   140045945:	je     0x140045960
   140045947:	add    BYTE PTR [rdi],bl
   140045949:	sbb    BYTE PTR fs:[rax],al
   14004594c:	sbb    esi,DWORD PTR [rdi+rdx*1]
   14004594f:	add    BYTE PTR [rdi],cl
   140045951:	add    DWORD PTR [rax+rax*1],edx
   140045954:	add    al,0x50
   140045956:	add    BYTE PTR [rax],al
   140045958:	int3   
   140045959:	out    0x2,eax
   14004595b:	add    BYTE PTR [rax-0x1d],bh
   14004595e:	add    eax,DWORD PTR [rax]
   140045960:	xchg   edx,eax
   140045961:	add    BYTE PTR [rax],al
   140045963:	add    bh,bh
   140045965:	(bad)  
   140045966:	(bad)  
   140045967:	call   QWORD PTR [rax+rax*1+0x3]
   14004596b:	add    BYTE PTR [rax],al
   14004596d:	add    BYTE PTR [rax],al
   14004596f:	add    BYTE PTR [rax+0x0],ah
   140045972:	add    eax,DWORD PTR [rax]
   140045974:	add    DWORD PTR [rax],eax
   140045976:	add    BYTE PTR [rax],al
   140045978:	ins    BYTE PTR es:[rdi],dx
   140045979:	add    BYTE PTR [rbx],al
   14004597b:	add    BYTE PTR [rdx],al
   14004597d:	add    BYTE PTR [rax],al
   14004597f:	add    BYTE PTR [rax+0x0],bh
   140045982:	add    eax,DWORD PTR [rax]
   140045984:	add    eax,DWORD PTR [rax]
	...
   14004598e:	add    BYTE PTR [rax],al
   140045990:	or     al,0x6f
   140045992:	add    DWORD PTR [rax],eax
   140045994:	(bad)  
   140045995:	(bad)  
   140045996:	(bad)  
   140045997:	dec    DWORD PTR [rbp+0x6f]
   14004599a:	add    DWORD PTR [rax],eax
   14004599c:	add    BYTE PTR [rax],al
   14004599e:	add    BYTE PTR [rax],al
   1400459a0:	jb     0x140045a11
   1400459a2:	add    DWORD PTR [rax],eax
   1400459a4:	add    DWORD PTR [rax],eax
   1400459a6:	add    BYTE PTR [rax],al
   1400459a8:	mov    edi,0x200016f
   1400459ad:	add    BYTE PTR [rax],al
   1400459af:	add    dh,cl
   1400459b1:	outs   dx,DWORD PTR ds:[rsi]
   1400459b2:	add    DWORD PTR [rax],eax
   1400459b4:	add    eax,DWORD PTR [rax]
   1400459b6:	add    BYTE PTR [rax],al
   1400459b8:	(bad)  
   1400459b9:	outs   dx,DWORD PTR ds:[rsi]
   1400459ba:	add    DWORD PTR [rax],eax
   1400459bc:	add    DWORD PTR [rax],eax
   1400459be:	add    BYTE PTR [rax],al
   1400459c0:	(bad)  
   1400459c1:	jo     0x1400459c4
   1400459c3:	add    BYTE PTR [rax],al
   1400459c5:	add    BYTE PTR [rax],al
   1400459c7:	add    BYTE PTR [rdi],ch
   1400459c9:	jo     0x1400459cc
   1400459cb:	add    bh,bh
   1400459cd:	(bad)  
   1400459ce:	(bad)  
   1400459cf:	inc    DWORD PTR [rcx]
   1400459d1:	or     eax,DWORD PTR [rax+rax*1]
   1400459d4:	or     esi,DWORD PTR [rdx+0x4]
   1400459d7:	jo     0x1400459dc
   1400459d9:	xor    BYTE PTR [rdx],al
   1400459db:	push   rax
   1400459dc:	adc    DWORD PTR [rdx],edx
   1400459de:	add    eax,DWORD PTR [rax]
   1400459e0:	or     al,BYTE PTR [rdx+0x50023003]
   1400459e6:	add    BYTE PTR [rax],al
   1400459e8:	out    0xe2,al
   1400459ea:	add    al,BYTE PTR [rax]
   1400459ec:	add    bl,ah
   1400459ee:	add    eax,DWORD PTR [rax]
   1400459f0:	fs jno 0x1400459f4
   1400459f3:	add    bh,bh
   1400459f5:	(bad)  
   1400459f6:	(bad)  
   1400459f7:	inc    DWORD PTR [rax+0x171]
   1400459fd:	add    BYTE PTR [rax],al
   1400459ff:	add    dl,dh
   140045a01:	jno    0x140045a04
   140045a03:	add    bh,bh
   140045a05:	(bad)  
   140045a06:	(bad)  
   140045a07:	inc    DWORD PTR [rip+0x172]        # 0x140045b7f
   140045a0d:	add    BYTE PTR [rax],al
   140045a0f:	add    BYTE PTR [rip+0xffffffffff000172],cl        # 0x13f045b87
   140045a15:	(bad)  
   140045a16:	(bad)  
   140045a17:	call   FWORD PTR [rcx]
   140045a19:	xor    al,0x9
   140045a1b:	add    BYTE PTR [rdx],ah
   140045a1d:	xor    al,0x2a
   140045a1f:	add    BYTE PTR [rbx],dl
   140045a21:	add    DWORD PTR [rdx],esp
   140045a23:	add    BYTE PTR [rax+rsi*8],cl
   140045a26:	or     ah,al
   140045a28:	or     al,dl
   140045a2a:	(bad)  
   140045a2b:	rol    BYTE PTR [rax+riz*2],0x0
   140045a2f:	add    ah,cl
   140045a31:	out    0x2,eax
   140045a33:	add    al,bl
   140045a35:	loop   0x140045a3a
   140045a37:	add    BYTE PTR [rbx],cl
   140045a39:	add    DWORD PTR [rax],eax
   140045a3b:	add    bh,bh
   140045a3d:	(bad)  
   140045a3e:	(bad)  
   140045a3f:	dec    DWORD PTR [rdx+0x300]
   140045a45:	add    BYTE PTR [rax],al
   140045a47:	add    BYTE PTR [rsi+0x1000300],dl
   140045a4d:	add    BYTE PTR [rax],al
   140045a4f:	add    BYTE PTR [rdx+0x2000300],ah
   140045a55:	add    BYTE PTR [rax],al
   140045a57:	add    BYTE PTR [rax],al
   140045a59:	add    BYTE PTR [rax],al
   140045a5b:	add    BYTE PTR [rbx],al
   140045a5d:	add    BYTE PTR [rax],al
   140045a5f:	add    BYTE PTR [rsi+0x4000300],ch
   140045a65:	add    BYTE PTR [rax],al
   140045a67:	add    BYTE PTR [rdx+0x4000300],bh
   140045a6d:	add    BYTE PTR [rax],al
   140045a6f:	add    dh,dl
   140045a71:	add    BYTE PTR [rbx],al
   140045a73:	add    BYTE PTR [rdx],al
   140045a75:	add    BYTE PTR [rax],al
   140045a77:	add    BYTE PTR [rax],al
   140045a79:	add    BYTE PTR [rax],al
   140045a7b:	add    BYTE PTR [rbx],al
   140045a7d:	add    BYTE PTR [rax],al
   140045a7f:	add    BYTE PTR [rsi],al
   140045a81:	add    BYTE PTR [rax],al
   140045a83:	add    BYTE PTR [rdi],al
   140045a85:	add    BYTE PTR [rax],al
   140045a87:	add    BYTE PTR [rdx],al
   140045a89:	add    BYTE PTR [rax],al
   140045a8b:	add    BYTE PTR [rax+0x900045a],dl
   140045a91:	add    BYTE PTR [rax],al
   140045a93:	add    al,bl
   140045a95:	(bad)  
   140045a96:	add    al,0x0
   140045a98:	js     0x140045a9a
   140045a9a:	add    BYTE PTR [rax],al
   140045a9c:	repnz add BYTE PTR [rbx],al
   140045a9f:	add    BYTE PTR [rax+0x0],cl
   140045aa2:	add    BYTE PTR [rax],al
   140045aa4:	or     DWORD PTR [rax],eax
   140045aa6:	add    BYTE PTR [rax],al
   140045aa8:	push   rax
   140045aa9:	call   0x140845ab2
   140045aae:	add    BYTE PTR [rax],al
   140045ab0:	(bad)  
   140045ab1:	add    DWORD PTR [rbx],eax
   140045ab3:	add    BYTE PTR [rax+0x0],cl
	...
   140045abe:	add    BYTE PTR [rax],al
   140045ac0:	sbb    al,0x72
   140045ac2:	add    DWORD PTR [rax],eax
   140045ac4:	(bad)  
   140045ac5:	(bad)  
   140045ac6:	(bad)  
   140045ac7:	jmp    QWORD PTR [rdi+0x72]
   140045aca:	add    DWORD PTR [rax],eax
   140045acc:	add    BYTE PTR [rax],al
   140045ace:	add    BYTE PTR [rax],al
   140045ad0:	loopne 0x140045b44
   140045ad2:	add    DWORD PTR [rax],eax
   140045ad4:	add    DWORD PTR [rax],eax
   140045ad6:	add    BYTE PTR [rax],al
   140045ad8:	push   0x2000173
   140045add:	add    BYTE PTR [rax],al
   140045adf:	add    BYTE PTR [rbx+0x1000173],bl
   140045ae5:	add    BYTE PTR [rax],al
   140045ae7:	add    BYTE PTR [rbx+rsi*2+0x1],ch
   140045aee:	add    BYTE PTR [rax],al
   140045af0:	mov    ebp,0xff000173
   140045af5:	(bad)  
   140045af6:	(bad)  
   140045af7:	call   rsi
   140045af9:	jae    0x140045afc
   140045afb:	add    BYTE PTR [rdx],al
   140045afd:	add    BYTE PTR [rax],al
   140045aff:	add    BYTE PTR [rax],dh
   140045b01:	je     0x140045b04
   140045b03:	add    BYTE PTR [rbx],al
   140045b05:	add    BYTE PTR [rax],al
   140045b07:	add    BYTE PTR [rcx+0x74],ah
   140045b0a:	add    DWORD PTR [rax],eax
   140045b0c:	add    al,0x0
   140045b0e:	add    BYTE PTR [rax],al
   140045b10:	add    DWORD PTR [rbp+0x1],esi
   140045b13:	add    BYTE PTR [rip+0x43000000],al        # 0x183045b19
   140045b19:	jne    0x140045b1c
   140045b1b:	add    BYTE PTR [rax+rax*1],al
   140045b1e:	add    BYTE PTR [rax],al
   140045b20:	ret    
   140045b21:	jne    0x140045b24
   140045b23:	add    BYTE PTR [rsi],al
   140045b25:	add    BYTE PTR [rax],al
   140045b27:	add    ch,bh
   140045b29:	jne    0x140045b2c
   140045b2b:	add    BYTE PTR [rax+rax*1],al
   140045b2e:	add    BYTE PTR [rax],al
   140045b30:	add    dh,BYTE PTR [rsi+0x1]
   140045b33:	add    BYTE PTR [rbx],al
   140045b35:	add    BYTE PTR [rax],al
   140045b37:	add    BYTE PTR [rsi+rsi*2],cl
   140045b3a:	add    DWORD PTR [rax],eax
   140045b3c:	add    al,BYTE PTR [rax]
   140045b3e:	add    BYTE PTR [rax],al
   140045b40:	xor    BYTE PTR [rsi+0x1],dh
   140045b43:	add    BYTE PTR [rcx],al
   140045b45:	add    BYTE PTR [rax],al
   140045b47:	add    BYTE PTR [rcx+0x76],cl
   140045b4a:	add    DWORD PTR [rax],eax
   140045b4c:	(bad)  
   140045b4d:	(bad)  
   140045b4e:	(bad)  
   140045b4f:	push   rdx
   140045b51:	add    BYTE PTR [rbx],al
   140045b53:	add    BYTE PTR [rax],al
   140045b55:	add    BYTE PTR [rax],al
   140045b57:	add    bh,bh
   140045b59:	add    BYTE PTR [rbx],al
   140045b5b:	add    BYTE PTR [rdi],al
   140045b5d:	add    BYTE PTR [rax],al
   140045b5f:	add    BYTE PTR [rax],cl
   140045b61:	add    DWORD PTR [rbx],eax
   140045b63:	add    BYTE PTR [rax],al
   140045b65:	add    BYTE PTR [rax],al
   140045b67:	add    BYTE PTR [rbx],ah
   140045b69:	add    DWORD PTR [rbx],eax
   140045b6b:	add    BYTE PTR [rdi],al
   140045b6d:	add    BYTE PTR [rax],al
   140045b6f:	add    BYTE PTR [rdx],dh
   140045b71:	add    DWORD PTR [rbx],eax
   140045b73:	add    BYTE PTR [rax],al
   140045b75:	add    BYTE PTR [rax],al
   140045b77:	add    BYTE PTR [rcx],bl
   140045b79:	or     al,BYTE PTR [rdx]
   140045b7b:	add    BYTE PTR [rdx],cl
   140045b7d:	push   rdx
   140045b7e:	(bad)  
   140045b7f:	push   rax
   140045b80:	out    0xe2,al
   140045b82:	add    al,BYTE PTR [rax]
   140045b84:	fsub   st,st(2)
   140045b86:	add    eax,DWORD PTR [rax]
   140045b88:	sbb    DWORD PTR [rcx],esp
   140045b8a:	or     al,BYTE PTR [rax]
   140045b8c:	and    DWORD PTR [rdi+rcx*1+0x0],esi
   140045b90:	sbb    eax,0x19000e64
   140045b95:	xor    al,0xc
   140045b97:	add    BYTE PTR [rip+0x7f00972],cl        # 0x147f4650f
   140045b9d:	loopne 0x140045ba4
   140045b9f:	shl    dh,0xe2
   140045ba2:	add    al,BYTE PTR [rax]
   140045ba4:	mov    al,0xe2
   140045ba6:	add    eax,DWORD PTR [rax]
	...
   140045bb0:	add    DWORD PTR [rax],eax
   140045bb2:	add    BYTE PTR [rax],al
   140045bb4:	add    DWORD PTR [rax],eax
   140045bb6:	add    BYTE PTR [rax],al
   140045bb8:	mov    esp,0x4000045b
	...
   140045bc5:	add    BYTE PTR [rax],al
   140045bc7:	add    BYTE PTR [rsi+0x1],al
   140045bca:	add    eax,DWORD PTR [rax]
   140045bcc:	rex.W add BYTE PTR [rax],al
   140045bcf:	add    BYTE PTR [rax-0xfffe8a],bh
   140045bd5:	(bad)  
   140045bd6:	(bad)  
   140045bd7:	call   QWORD PTR [rsi]
   140045bd9:	ja     0x140045bdc
   140045bdb:	add    BYTE PTR [rax],al
   140045bdd:	add    BYTE PTR [rax],al
   140045bdf:	add    BYTE PTR [rsi],ah
   140045be1:	ja     0x140045be4
   140045be3:	add    bh,bh
   140045be5:	(bad)  
   140045be6:	(bad)  
   140045be7:	inc    DWORD PTR [rsi+0x1]
   140045bea:	add    eax,DWORD PTR [rax]
   140045bec:	add    BYTE PTR [rax],al
   140045bee:	add    BYTE PTR [rax],al
   140045bf0:	push   rbx
   140045bf1:	add    DWORD PTR [rbx],eax
   140045bf3:	add    BYTE PTR [rcx],al
   140045bf5:	add    BYTE PTR [rax],al
   140045bf7:	add    BYTE PTR [rcx],bl
   140045bf9:	or     al,BYTE PTR [rdx]
   140045bfb:	add    BYTE PTR [rdx],cl
   140045bfd:	push   rdx
   140045bfe:	(bad)  
   140045bff:	push   rax
   140045c00:	out    0xe2,al
   140045c02:	add    al,BYTE PTR [rax]
   140045c04:	mov    al,0xe2
   140045c06:	add    eax,DWORD PTR [rax]
   140045c08:	sbb    DWORD PTR [rdx],ebx
   140045c0a:	add    al,0x0
   140045c0c:	adc    DWORD PTR [rdx+0xd],edx
   140045c0f:	jo     0x140045c1d
   140045c11:	(bad)  
   140045c12:	or     esi,DWORD PTR [rax]
   140045c14:	out    0xe2,al
   140045c16:	add    al,BYTE PTR [rax]
   140045c18:	mov    dl,ah
   140045c1a:	add    eax,DWORD PTR [rax]
   140045c1c:	(bad)  
   140045c1d:	(bad)  
   140045c1e:	(bad)  
   140045c1f:	inc    DWORD PTR [rax]
   140045c21:	add    BYTE PTR [rax],al
   140045c23:	add    BYTE PTR [rax],al
   140045c25:	add    BYTE PTR [rax],al
   140045c27:	add    BYTE PTR [rcx+rax*1+0x3],ch
   140045c2b:	add    bh,bh
   140045c2d:	(bad)  
   140045c2e:	(bad)  
   140045c2f:	inc    DWORD PTR [rax]
   140045c31:	add    BYTE PTR [rax],al
   140045c33:	add    BYTE PTR [rax],al
   140045c35:	add    BYTE PTR [rax],al
   140045c37:	add    BYTE PTR [rcx],al
   140045c39:	add    BYTE PTR [rax],al
   140045c3b:	add    BYTE PTR [rdx],al
   140045c3d:	add    BYTE PTR [rax],al
   140045c3f:	add    BYTE PTR [rcx],al
   140045c41:	add    BYTE PTR [rax],al
   140045c43:	add    BYTE PTR [rax+0x5c],cl
   140045c46:	add    al,0x0
   140045c48:	add    BYTE PTR [rax],al
	...
   140045c53:	add    BYTE PTR [rax+0x48000301],cl
   140045c59:	add    BYTE PTR [rax],al
   140045c5b:	add    BYTE PTR [rax],al
   140045c5d:	add    BYTE PTR [rax],al
   140045c5f:	add    BYTE PTR [rdi+rsi*2-0xffff],cl
   140045c66:	(bad)  
   140045c67:	push   QWORD PTR [rdi+rsi*2+0x1]
   140045c6e:	add    BYTE PTR [rax],al
   140045c70:	mov    esi,0x1000177
   140045c75:	add    BYTE PTR [rax],al
   140045c77:	add    cl,bh
   140045c79:	ja     0x140045c7c
   140045c7b:	add    BYTE PTR [rax],al
   140045c7d:	add    BYTE PTR [rax],al
   140045c7f:	add    BYTE PTR [rax],cl
   140045c81:	js     0x140045c84
   140045c83:	add    bh,bh
   140045c85:	(bad)  
   140045c86:	(bad)  
   140045c87:	dec    DWORD PTR [rax+0x301]
   140045c8d:	add    BYTE PTR [rax],al
   140045c8f:	add    BYTE PTR [rsi+0x2000301],dl
   140045c95:	add    BYTE PTR [rax],al
   140045c97:	add    BYTE PTR [rcx],bl
   140045c99:	or     eax,DWORD PTR [rbx]
   140045c9b:	add    BYTE PTR [rbx],cl
   140045c9d:	rex.X (bad) 
   140045c9f:	push   rax
   140045ca0:	(bad)  
   140045ca1:	xor    BYTE PTR [rax],al
   140045ca3:	add    dh,ah
   140045ca5:	loop   0x140045ca9
   140045ca7:	add    BYTE PTR [rax+0x10003e2],cl
   140045cad:	or     eax,DWORD PTR [rcx]
   140045caf:	add    BYTE PTR [rbx],cl
   140045cb1:	loop   0x140045cb3
   140045cb3:	add    BYTE PTR [rcx],al
   140045cb5:	sbb    eax,0x741d000c
   140045cba:	ltr    WORD PTR [rip+0x1d000e64]        # 0x15d046b25
   140045cc1:	push   rsp
   140045cc2:	or     eax,0xc341d00
   140045cc7:	add    BYTE PTR [rip+0x17f01972],bl        # 0x157f4763f
   140045ccd:	loopne 0x140045ce4
   140045ccf:	rol    BYTE PTR [rcx],0xf
   140045cd2:	(bad)  
   140045cd3:	add    BYTE PTR [rdi],cl
   140045cd5:	fs or  al,0x0
   140045cd8:	sysenter 
   140045cda:	or     eax,DWORD PTR [rax]
   140045cdc:	(bad)  
   140045cde:	or     esi,DWORD PTR [rax+0x11]
   140045ce1:	(bad)  
   140045ce2:	or     BYTE PTR [rax],al
   140045ce4:	(bad)  
   140045ce5:	xchg   edx,eax
   140045ce6:	(bad)  
   140045ce8:	or     eax,0x9c00be0
   140045ced:	jo     0x140045cf7
   140045cef:	(bad)  
   140045cf0:	(bad)  
   140045cf1:	xor    BYTE PTR [rsi],al
   140045cf3:	push   rax
   140045cf4:	out    0xe2,al
   140045cf6:	add    al,BYTE PTR [rax]
   140045cf8:	push   0xffffffffff0003e4
   140045cfd:	(bad)  
   140045cfe:	(bad)  
   140045cff:	(bad)  
   140045d00:	mov    edi,0x301
   140045d05:	add    BYTE PTR [rax],al
   140045d07:	add    bh,cl
   140045d09:	add    DWORD PTR [rbx],eax
   140045d0b:	add    BYTE PTR [rcx],al
   140045d0d:	add    BYTE PTR [rax],al
   140045d0f:	add    dl,ah
   140045d11:	add    DWORD PTR [rbx],eax
   140045d13:	add    BYTE PTR [rdx],al
   140045d15:	add    BYTE PTR [rax],al
   140045d17:	add    ch,dh
   140045d19:	add    DWORD PTR [rbx],eax
   140045d1b:	add    BYTE PTR [rbx],al
   140045d1d:	add    BYTE PTR [rax],al
   140045d1f:	add    BYTE PTR [rax],cl
   140045d21:	add    al,BYTE PTR [rbx]
   140045d23:	add    BYTE PTR [rax+rax*1],al
   140045d26:	add    BYTE PTR [rax],al
   140045d28:	sbb    eax,DWORD PTR [rdx]
   140045d2a:	add    eax,DWORD PTR [rax]
   140045d2c:	add    eax,0x2e000000
   140045d31:	add    al,BYTE PTR [rbx]
   140045d33:	add    BYTE PTR [rsi],al
   140045d35:	add    BYTE PTR [rax],al
   140045d37:	add    BYTE PTR [rcx+0x2],al
   140045d3a:	add    eax,DWORD PTR [rax]
   140045d3c:	add    BYTE PTR [rax],al
   140045d3e:	add    BYTE PTR [rax],al
   140045d40:	loopne 0x140045cc3
   140045d42:	add    DWORD PTR [rax],eax
   140045d44:	(bad)  
   140045d45:	(bad)  
   140045d46:	(bad)  
   140045d47:	call   QWORD PTR [rdx]
   140045d49:	(bad)  
   140045d4a:	add    DWORD PTR [rax],eax
   140045d4c:	add    BYTE PTR [rax],al
   140045d4e:	add    BYTE PTR [rax],al
   140045d50:	sub    DWORD PTR [rdx+0x10001],eax
   140045d56:	add    BYTE PTR [rax],al
   140045d58:	cmp    al,0x82
   140045d5a:	add    DWORD PTR [rax],eax
   140045d5c:	add    al,BYTE PTR [rax]
   140045d5e:	add    BYTE PTR [rax],al
   140045d60:	rex.XB (bad) 
   140045d62:	add    DWORD PTR [rax],eax
   140045d64:	add    eax,DWORD PTR [rax]
   140045d66:	add    BYTE PTR [rax],al
   140045d68:	pop    rdx
   140045d69:	(bad)  
   140045d6a:	add    DWORD PTR [rax],eax
   140045d6c:	add    al,0x0
   140045d6e:	add    BYTE PTR [rax],al
   140045d70:	(bad)  
   140045d71:	(bad)  
   140045d72:	add    DWORD PTR [rax],eax
   140045d74:	add    eax,0x8b000000
   140045d79:	(bad)  
   140045d7a:	add    DWORD PTR [rax],eax
   140045d7c:	(bad)  
   140045d7d:	add    BYTE PTR [rax],al
   140045d7f:	add    BYTE PTR [rsi+0x7000182],ch
   140045d85:	add    BYTE PTR [rax],al
   140045d87:	add    BYTE PTR [rax],bh
   140045d89:	test   BYTE PTR [rcx],al
   140045d8b:	add    bh,bh
   140045d8d:	(bad)  
   140045d8e:	(bad)  
   140045d8f:	inc    DWORD PTR [rcx]
   140045d91:	sbb    DWORD PTR [rdx],ecx
   140045d93:	add    BYTE PTR [rcx],bl
   140045d95:	add    DWORD PTR [rbx],ebx
   140045d97:	add    BYTE PTR [rip+0x9e00bf0],cl        # 0x149e4698d
   140045d9d:	rol    BYTE PTR [rdi],1
   140045d9f:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x143646216
   140045da6:	add    dl,BYTE PTR [rax+0x19]
   140045da9:	adc    eax,DWORD PTR [rdx]
   140045dab:	add    BYTE PTR [rdx],cl
   140045dad:	xchg   edx,eax
   140045dae:	(bad)  
   140045daf:	xor    dh,ah
   140045db1:	loop   0x140045db5
   140045db3:	add    BYTE PTR [rax-0x1c],al
   140045db6:	add    eax,DWORD PTR [rax]
	...
   140045dc0:	add    DWORD PTR [rax],eax
   140045dc2:	add    BYTE PTR [rax],al
   140045dc4:	add    DWORD PTR [rax],eax
   140045dc6:	add    BYTE PTR [rax],al
   140045dc8:	int3   
   140045dc9:	pop    rbp
   140045dca:	add    al,0x0
   140045dcc:	or     BYTE PTR [rax],al
   140045dce:	add    BYTE PTR [rax],al
   140045dd0:	push   rax
   140045dd1:	call   0x140045dda
   140045dd6:	add    BYTE PTR [rax],al
   140045dd8:	pop    rdx
   140045dd9:	add    al,BYTE PTR [rbx]
   140045ddb:	add    BYTE PTR [rax+0x0],bl
   140045dde:	add    BYTE PTR [rax],al
   140045de0:	nop
   140045de1:	mov    DWORD PTR [rcx],eax
   140045de3:	add    bh,bh
   140045de5:	(bad)  
   140045de6:	(bad)  
   140045de7:	jmp    QWORD PTR [rsi+0x189]
   140045ded:	add    BYTE PTR [rax],al
   140045def:	add    bh,ch
   140045df1:	mov    DWORD PTR [rcx],eax
   140045df3:	add    bh,bh
   140045df5:	(bad)  
   140045df6:	(bad)  
   140045df7:	call   FWORD PTR [rdx+0x2]
   140045dfa:	add    eax,DWORD PTR [rax]
   140045dfc:	add    BYTE PTR [rax],al
   140045dfe:	add    BYTE PTR [rax],al
   140045e00:	add    al,BYTE PTR [ebx]
   140045e03:	add    BYTE PTR [rcx],al
   140045e05:	add    BYTE PTR [rax],al
   140045e07:	add    BYTE PTR [rcx],bl
   140045e09:	or     al,BYTE PTR [rdx]
   140045e0b:	add    BYTE PTR [rdx],cl
   140045e0d:	jb     0x140045e15
   140045e0f:	push   rax
   140045e10:	out    0xe2,al
   140045e12:	add    al,BYTE PTR [rax]
   140045e14:	in     al,0x3
   140045e17:	add    BYTE PTR [rcx],al
   140045e19:	(bad)  
   140045e1a:	or     BYTE PTR [rax],al
   140045e1c:	(bad)  
   140045e1d:	push   rdx
   140045e1e:	(bad)  
   140045e20:	or     eax,0x9c00be0
   140045e25:	jo     0x140045e2f
   140045e27:	(bad)  
   140045e28:	(bad)  
   140045e29:	xor    BYTE PTR [rsi],al
   140045e2b:	push   rax
   140045e2c:	add    DWORD PTR [rax],ebx
   140045e2e:	or     al,BYTE PTR [rax]
   140045e30:	sbb    BYTE PTR [rsp+rcx*1+0x0],ah
   140045e34:	sbb    BYTE PTR [rbx+rcx*1+0x0],dl
   140045e38:	sbb    BYTE PTR [rdx+rcx*1],dh
   140045e3b:	add    BYTE PTR [rax],bl
   140045e3d:	push   rdx
   140045e3e:	adc    al,0xf0
   140045e40:	adc    ah,al
   140045e42:	adc    BYTE PTR [rax+0x1],dh
   140045e45:	(bad)  
   140045e46:	or     al,BYTE PTR [rax]
   140045e48:	(bad)  
   140045e49:	xor    al,0x10
   140045e4b:	add    BYTE PTR [rdi],dl
   140045e4d:	jb     0x140045e5f
   140045e4f:	lock (bad) 
   140045e51:	loopne 0x140045e5f
   140045e53:	ror    BYTE PTR [rdx],1
   140045e55:	ror    BYTE PTR [rax],0x70
   140045e58:	(bad)  
   140045e59:	(bad)  
   140045e5a:	(bad)  
   140045e5b:	push   rax
   140045e5c:	add    DWORD PTR [rsi],ecx
   140045e5e:	(bad)  
   140045e5f:	add    BYTE PTR [rsi],cl
   140045e61:	xor    al,BYTE PTR [rdi]
   140045e63:	loopne 0x140045e6a
   140045e65:	jo     0x140045e6b
   140045e67:	(bad)  
   140045e68:	add    esi,DWORD PTR [rax]
   140045e6a:	add    dl,BYTE PTR [rax+0x1]
   140045e6d:	sbb    al,0xc
   140045e6f:	add    BYTE PTR [rsp+riz*2],bl
   140045e72:	adc    al,0x0
   140045e74:	sbb    al,0x54
   140045e76:	adc    eax,DWORD PTR [rax]
   140045e78:	sbb    al,0x34
   140045e7a:	adc    al,BYTE PTR [rax]
   140045e7c:	sbb    al,0xb2
   140045e7e:	sbb    al,dh
   140045e80:	(bad)  
   140045e81:	loopne 0x140045e97
   140045e83:	rcl    BYTE PTR [rdx],1
   140045e85:	rcl    BYTE PTR [rax],0x70
   140045e88:	adc    DWORD PTR [rdi],ebx
   140045e8a:	or     al,BYTE PTR [rax]
   140045e8c:	(bad)  
   140045e8d:	push   rsp
   140045e8e:	adc    DWORD PTR [rax],eax
   140045e90:	sbb    esi,DWORD PTR [rax+rdx*1]
   140045e93:	add    BYTE PTR [rdi],cl
   140045e95:	xchg   edx,eax
   140045e96:	or     esi,eax
   140045e98:	or     eax,esp
   140045e9a:	(bad)  
   140045e9b:	rol    BYTE PTR [rip+0xffffffffe6600470],1        # 0x126646311
   140045ea1:	loop   0x140045ea5
   140045ea3:	add    BYTE PTR [rax],bl
   140045ea5:	in     al,0x3
   140045ea7:	add    bh,bh
   140045ea9:	(bad)  
   140045eaa:	(bad)  
   140045eab:	inc    DWORD PTR [rax+0x48000302]
   140045eb1:	(bad)  
   140045eb2:	add    DWORD PTR [rax],eax
   140045eb4:	(bad)  
   140045eb5:	(bad)  
   140045eb6:	(bad)  
   140045eb7:	(bad)  
   140045eb8:	jge    0x140045e54
   140045eba:	add    DWORD PTR [rax],eax
   140045ebc:	add    BYTE PTR [rax],al
   140045ebe:	add    BYTE PTR [rax],al
   140045ec0:	jrcxz  0x140045e5e
   140045ec2:	add    DWORD PTR [rax],eax
   140045ec4:	(bad)  
   140045ec5:	(bad)  
   140045ec6:	(bad)  
   140045ec7:	(bad)  
   140045ec8:	out    dx,al
   140045ec9:	pushf  
   140045eca:	add    DWORD PTR [rax],eax
   140045ecc:	add    BYTE PTR [rax],al
   140045ece:	add    BYTE PTR [rax],al
   140045ed0:	stc    
   140045ed1:	pushf  
   140045ed2:	add    DWORD PTR [rax],eax
   140045ed4:	(bad)  
   140045ed5:	(bad)  
   140045ed6:	(bad)  
   140045ed7:	inc    DWORD PTR [rcx]
   140045ed9:	sbb    DWORD PTR [rdx],ecx
   140045edb:	add    BYTE PTR [rcx],bl
   140045edd:	xor    al,0xd
   140045edf:	add    BYTE PTR [rcx],bl
   140045ee1:	xor    dl,BYTE PTR [rip+0x11e013f0]        # 0x151e472d7
   140045ee7:	ror    BYTE PTR [rdi],1
   140045ee9:	ror    BYTE PTR [rip+0xb600c70],0x50        # 0x14b646b60
   140045ef0:	add    DWORD PTR [rsi],eax
   140045ef2:	add    al,BYTE PTR [rax]
   140045ef4:	(bad)  
   140045ef5:	jb     0x140045ef9
   140045ef7:	xor    BYTE PTR [rcx],al
   140045ef9:	adc    BYTE PTR [rax],cl
   140045efb:	add    BYTE PTR [rax],dl
   140045efd:	xor    al,0xd
   140045eff:	add    BYTE PTR [rax],dl
   140045f01:	push   rdx
   140045f02:	or     al,0xf0
   140045f04:	or     ah,al
   140045f06:	or     BYTE PTR [rax+0x7],dh
   140045f09:	(bad)  
   140045f0a:	(bad)  
   140045f0b:	push   rax
   140045f0c:	add    DWORD PTR [rdi],edx
   140045f0e:	or     al,BYTE PTR [rax]
   140045f10:	(bad)  
   140045f11:	push   rsp
   140045f12:	or     al,0x0
   140045f14:	(bad)  
   140045f15:	xor    al,0xb
   140045f17:	add    BYTE PTR [rdi],dl
   140045f19:	xor    dl,BYTE PTR [rbx]
   140045f1b:	lock adc eax,esp
   140045f1e:	xadd   BYTE PTR [rip+0x19600c70],cl        # 0x159646b95
   140045f25:	lar    eax,WORD PTR [rax]
   140045f28:	(bad)  
   140045f29:	push   rdx
   140045f2a:	add    dh,BYTE PTR [rax]
   140045f2c:	out    0xe2,al
   140045f2e:	add    al,BYTE PTR [rax]
   140045f30:	lock jrcxz 0x140045f36
	...
   140045f3b:	add    BYTE PTR [rcx],al
   140045f3d:	add    BYTE PTR [rax],al
   140045f3f:	add    BYTE PTR [rcx],al
   140045f41:	add    BYTE PTR [rax],al
   140045f43:	add    BYTE PTR [rax+0x5f],cl
   140045f46:	add    al,0x0
   140045f48:	or     DWORD PTR [rax],eax
   140045f4a:	add    BYTE PTR [rax],al
   140045f4c:	push   rax
   140045f4d:	call   0x1402c5f56
   140045f52:	add    BYTE PTR [rax],al
   140045f54:	xchg   edx,eax
   140045f55:	add    al,BYTE PTR [rbx]
   140045f57:	add    BYTE PTR [rax],bh
   140045f59:	add    BYTE PTR [rax],al
   140045f5b:	add    BYTE PTR [rax],al
   140045f5d:	add    BYTE PTR [rax],al
   140045f5f:	add    BYTE PTR [rsi+riz*4-0xffff],ah
   140045f66:	(bad)  
   140045f67:	push   QWORD PTR [rsi+0x1a6]
   140045f6d:	add    BYTE PTR [rax],al
   140045f6f:	add    BYTE PTR [rsi],dl
   140045f71:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140045f72:	add    DWORD PTR [rax],eax
   140045f74:	(bad)  
   140045f75:	(bad)  
   140045f76:	(bad)  
   140045f77:	call   FWORD PTR [rax]
   140045f79:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140045f7a:	add    DWORD PTR [rax],eax
   140045f7c:	add    BYTE PTR [rax],al
   140045f7e:	add    BYTE PTR [rax],al
   140045f80:	(bad)  
   140045f81:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140045f82:	add    DWORD PTR [rax],eax
   140045f84:	(bad)  
   140045f85:	(bad)  
   140045f86:	(bad)  
   140045f87:	jmp    FWORD PTR [rcx]
   140045f89:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140045f8a:	add    DWORD PTR [rax],eax
   140045f8c:	add    BYTE PTR [rax],al
   140045f8e:	add    BYTE PTR [rax],al
   140045f90:	lahf   
   140045f91:	add    al,BYTE PTR [rbx]
   140045f93:	add    BYTE PTR [rcx],al
   140045f95:	add    BYTE PTR [rax],al
   140045f97:	add    BYTE PTR [rbx+0x302],ch
   140045f9d:	add    BYTE PTR [rax],al
   140045f9f:	add    BYTE PTR [rcx],bl
   140045fa1:	or     al,BYTE PTR [rdx]
   140045fa3:	add    BYTE PTR [rdx],cl
   140045fa5:	xor    al,BYTE PTR [rsi]
   140045fa7:	push   rax
   140045fa8:	out    0xe2,al
   140045faa:	add    al,BYTE PTR [rax]
   140045fac:	lock jrcxz 0x140045fb2
   140045faf:	add    BYTE PTR [rcx],bl
   140045fb1:	lar    eax,WORD PTR [rax]
   140045fb4:	(bad)  
   140045fb5:	push   rdx
   140045fb6:	add    dh,BYTE PTR [rax]
   140045fb8:	out    0xe2,al
   140045fba:	add    al,BYTE PTR [rax]
   140045fbc:	enter  0x3e3,0x0
	...
   140045fc8:	add    DWORD PTR [rax],eax
   140045fca:	add    BYTE PTR [rax],al
   140045fcc:	add    DWORD PTR [rax],eax
   140045fce:	add    BYTE PTR [rax],al
   140045fd0:	(bad)  
   140045fd1:	pop    rdi
   140045fd2:	add    al,0x0
   140045fd4:	or     DWORD PTR [rax],eax
   140045fd6:	add    BYTE PTR [rax],al
   140045fd8:	push   rax
   140045fd9:	call   0x1402c5fe2
   140045fde:	add    BYTE PTR [rax],al
   140045fe0:	mov    edi,0x38000302
	...
   140045fed:	add    BYTE PTR [rax],al
   140045fef:	add    BYTE PTR [rax],bh
   140045ff1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140045ff2:	add    DWORD PTR [rax],eax
   140045ff4:	(bad)  
   140045ff5:	(bad)  
   140045ff6:	(bad)  
   140045ff7:	dec    DWORD PTR [rdx-0x59]
   140045ffa:	add    DWORD PTR [rax],eax
   140045ffc:	add    BYTE PTR [rax],al
   140045ffe:	add    BYTE PTR [rax],al
   140046000:	(bad)
   140046003:	add    bh,bh
   140046005:	(bad)  
   140046006:	(bad)  
   140046007:	inc    edi
   140046009:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004600a:	add    DWORD PTR [rax],eax
   14004600c:	add    BYTE PTR [rax],al
   14004600e:	add    BYTE PTR [rax],al
   140046010:	(bad)  
   140046011:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140046012:	add    DWORD PTR [rax],eax
   140046014:	(bad)  
   140046015:	(bad)  
   140046016:	(bad)  
   140046017:	(bad)  
   140046018:	fsub   DWORD PTR [rdi+0x1]
   14004601e:	add    BYTE PTR [rax],al
   140046020:	int3   
   140046021:	add    al,BYTE PTR [rbx]
   140046023:	add    BYTE PTR [rcx],al
   140046025:	add    BYTE PTR [rax],al
   140046027:	add    al,bl
   140046029:	add    al,BYTE PTR [rbx]
   14004602b:	add    BYTE PTR [rax],al
   14004602d:	add    BYTE PTR [rax],al
   14004602f:	add    BYTE PTR [rcx],bl
   140046031:	or     al,BYTE PTR [rdx]
   140046033:	add    BYTE PTR [rdx],cl
   140046035:	xor    al,BYTE PTR [rsi]
   140046037:	push   rax
   140046038:	out    0xe2,al
   14004603a:	add    al,BYTE PTR [rax]
   14004603c:	enter  0x3e3,0x0
   140046040:	sbb    DWORD PTR [rsp+rax*1],edx
   140046043:	add    BYTE PTR [rsp+rsi*1],dl
   140046046:	or     BYTE PTR [rax],al
   140046048:	(bad)  
   140046049:	push   rdx
   14004604a:	add    dh,BYTE PTR [rax-0x1a]
   14004604d:	loop   0x140046051
   14004604f:	add    BYTE PTR [rax+0x3e3],ah
   140046055:	add    BYTE PTR [rax],al
   140046057:	add    BYTE PTR [rax],al
   140046059:	add    BYTE PTR [rax],al
   14004605b:	add    BYTE PTR [rcx],al
   14004605d:	add    BYTE PTR [rax],al
   14004605f:	add    BYTE PTR [rcx],al
   140046061:	add    BYTE PTR [rax],al
   140046063:	add    BYTE PTR [rax+0x60],ch
   140046066:	add    al,0x0
   140046068:	or     DWORD PTR [rax],eax
   14004606a:	add    BYTE PTR [rax],al
   14004606c:	push   rax
   14004606d:	call   0x1402c6076
   140046072:	add    BYTE PTR [rax],al
   140046074:	in     al,dx
   140046075:	add    al,BYTE PTR [rbx]
   140046077:	add    BYTE PTR [rax],bh
   140046079:	add    BYTE PTR [rax],al
   14004607b:	add    BYTE PTR [rax],al
   14004607d:	add    BYTE PTR [rax],al
   14004607f:	add    al,ch
   140046081:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140046082:	add    DWORD PTR [rax],eax
   140046084:	(bad)  
   140046085:	(bad)  
   140046086:	(bad)  
   140046087:	(bad)  
   140046088:	jmp    QWORD PTR [rdi+0x1]
   14004608e:	add    BYTE PTR [rax],al
   140046090:	jle    0x14004603a
   140046092:	add    DWORD PTR [rax],eax
   140046094:	(bad)  
   140046095:	(bad)  
   140046096:	(bad)  
   140046097:	inc    DWORD PTR [rax+0x1a8]
   14004609d:	add    BYTE PTR [rax],al
   14004609f:	add    BYTE PTR [rdi-0xfffe58],al
   1400460a5:	(bad)  
   1400460a6:	(bad)  
   1400460a7:	call   QWORD PTR [rcx+0x1a8]
   1400460ad:	add    BYTE PTR [rax],al
   1400460af:	add    cl,bh
   1400460b1:	add    al,BYTE PTR [rbx]
   1400460b3:	add    BYTE PTR [rcx],al
   1400460b5:	add    BYTE PTR [rax],al
   1400460b7:	add    BYTE PTR [rip+0x303],al        # 0x1400463c0
   1400460bd:	add    BYTE PTR [rax],al
   1400460bf:	add    BYTE PTR [rcx],bl
   1400460c1:	or     al,BYTE PTR [rdx]
   1400460c3:	add    BYTE PTR [rdx],cl
   1400460c5:	xor    al,BYTE PTR [rsi]
   1400460c7:	push   rax
   1400460c8:	out    0xe2,al
   1400460ca:	add    al,BYTE PTR [rax]
   1400460cc:	movabs al,ds:0x13000313010003e3
   1400460d5:	add    DWORD PTR [rdx],ebp
   1400460d7:	add    BYTE PTR [rax],cl
   1400460d9:	push   rax
   1400460da:	add    BYTE PTR [rax],al
   1400460dc:	add    DWORD PTR [rax],ebx
   1400460de:	or     DWORD PTR [rax],eax
   1400460e0:	sbb    BYTE PTR [rsi+rdx*1+0x0],dh
   1400460e4:	sbb    BYTE PTR [rbp+rdx*1+0x0],ah
   1400460e8:	sbb    BYTE PTR [rsp+rdx*1],dh
   1400460eb:	add    BYTE PTR [rax],bl
   1400460ed:	add    DWORD PTR [rdx],edx
   1400460ef:	add    BYTE PTR [rcx],dl
   1400460f1:	loopne 0x1400460f3
   1400460f3:	add    BYTE PTR [rcx],al
   1400460f5:	or     DWORD PTR [rcx],eax
   1400460f7:	add    BYTE PTR [rcx],cl
   1400460f9:	movabs ds:0x3414000414190000,al
   140046102:	or     DWORD PTR [rax],eax
   140046104:	(bad)  
   140046105:	push   rdx
   140046106:	add    dh,BYTE PTR [rax-0x1a]
   140046109:	loop   0x14004610d
   14004610b:	add    BYTE PTR [rax-0x1a],dh
   14004610e:	add    eax,DWORD PTR [rax]
   140046110:	(bad)  
   140046111:	(bad)  
   140046112:	(bad)  
   140046113:	inc    DWORD PTR [rax]
   140046115:	add    BYTE PTR [rax],al
   140046117:	add    BYTE PTR [rax],al
   140046119:	add    BYTE PTR [rax],al
   14004611b:	add    BYTE PTR [rcx],bl
   14004611d:	add    eax,DWORD PTR [rbx]
   14004611f:	add    bh,bh
   140046121:	(bad)  
   140046122:	(bad)  
   140046123:	inc    DWORD PTR [rax]
   140046125:	add    BYTE PTR [rax],al
   140046127:	add    BYTE PTR [rax],al
   140046129:	add    BYTE PTR [rax],al
   14004612b:	add    BYTE PTR [rcx],al
   14004612d:	add    BYTE PTR [rax],al
   14004612f:	add    BYTE PTR [rdx],al
   140046131:	add    BYTE PTR [rax],al
   140046133:	add    BYTE PTR [rcx],al
   140046135:	add    BYTE PTR [rax],al
   140046137:	add    BYTE PTR [rcx+riz*2],bh
   14004613a:	add    al,0x0
   14004613c:	or     BYTE PTR [rax],al
   14004613e:	add    BYTE PTR [rax],al
   140046140:	push   rax
   140046141:	call   0x14024614a
   140046146:	add    BYTE PTR [rax],al
   140046148:	and    eax,0x48000303
   14004614d:	add    BYTE PTR [rax],al
   14004614f:	add    BYTE PTR [rax],bh
   140046151:	scas   al,BYTE PTR es:[rdi]
   140046152:	add    DWORD PTR [rax],eax
   140046154:	(bad)  
   140046155:	(bad)  
   140046156:	(bad)  
   140046157:	jmp    QWORD PTR [rax-0x52]
   14004615a:	add    DWORD PTR [rax],eax
   14004615c:	add    BYTE PTR [rax],al
   14004615e:	add    BYTE PTR [rax],al
   140046160:	outs   dx,DWORD PTR ds:[rsi]
   140046161:	scas   al,BYTE PTR es:[rdi]
   140046162:	add    DWORD PTR [rax],eax
   140046164:	add    DWORD PTR [rax],eax
   140046166:	add    BYTE PTR [rax],al
   140046168:	jge    0x140046118
   14004616a:	add    DWORD PTR [rax],eax
   14004616c:	add    BYTE PTR [rax],al
   14004616e:	add    BYTE PTR [rax],al
   140046170:	cwde   
   140046171:	scas   al,BYTE PTR es:[rdi]
   140046172:	add    DWORD PTR [rax],eax
   140046174:	(bad)  
   140046175:	(bad)  
   140046176:	(bad)  
   140046177:	jmp    QWORD PTR [rbx+0x1ae]
   14004617d:	add    BYTE PTR [rax],al
   14004617f:	add    BYTE PTR [rbx+rax*1],dh
   140046182:	add    eax,DWORD PTR [rax]
   140046184:	add    al,BYTE PTR [rax]
   140046186:	add    BYTE PTR [rax],al
   140046188:	xchg   esi,eax
   140046189:	add    eax,DWORD PTR [rbx]
   14004618b:	add    BYTE PTR [rax],al
   14004618d:	add    BYTE PTR [rax],al
   14004618f:	add    BYTE PTR [rcx],bl
   140046191:	or     al,0x4
   140046193:	add    BYTE PTR [rdx+rsi*1],cl
   140046196:	or     BYTE PTR [rax+0x7],dh
   140046199:	push   rax
   14004619a:	(bad)  
   14004619b:	xor    dh,ah
   14004619d:	loop   0x1400461a1
   14004619f:	add    BYTE PTR [rax-0x1a],dh
   1400461a2:	add    eax,DWORD PTR [rax]
   1400461a4:	sbb    DWORD PTR [rdi],ebp
   1400461a6:	or     DWORD PTR [rax],eax
   1400461a8:	and    DWORD PTR [rdx+riz*1],esi
   1400461ab:	add    BYTE PTR [rip+0xa001a01],dl        # 0x14a047bb2
   1400461b1:	lock or al,ah
   1400461b4:	(bad)  
   1400461b5:	jo     0x1400461bc
   1400461b7:	(bad)  
   1400461b8:	add    al,0x50
   1400461ba:	add    BYTE PTR [rax],al
   1400461bc:	int3   
   1400461bd:	out    0x2,eax
   1400461bf:	add    BYTE PTR [rax-0x1a],cl
   1400461c2:	add    eax,DWORD PTR [rax]
   1400461c4:	ret    0x0
   1400461c7:	add    bh,bh
   1400461c9:	(bad)  
   1400461ca:	(bad)  
   1400461cb:	jmp    FWORD PTR [rbx+rax*1+0x3]
   1400461d2:	add    BYTE PTR [rax],al
   1400461d4:	mov    esp,0x1000303
   1400461d9:	add    BYTE PTR [rax],al
   1400461db:	add    ah,cl
   1400461dd:	add    eax,DWORD PTR [rbx]
   1400461df:	add    BYTE PTR [rdx],al
   1400461e1:	add    BYTE PTR [rax],al
   1400461e3:	add    ah,bl
   1400461e5:	add    eax,DWORD PTR [rbx]
   1400461e7:	add    BYTE PTR [rbx],al
   1400461e9:	add    BYTE PTR [rax],al
   1400461eb:	add    al,ch
   1400461ed:	add    eax,DWORD PTR [rbx]
   1400461ef:	add    BYTE PTR [rdx],al
   1400461f1:	add    BYTE PTR [rax],al
   1400461f3:	add    al,bh
   1400461f5:	add    eax,DWORD PTR [rbx]
   1400461f7:	add    BYTE PTR [rip+0x8000000],al        # 0x1480461fd
   1400461fd:	add    al,0x3
   1400461ff:	add    BYTE PTR [rsi],al
   140046201:	add    BYTE PTR [rax],al
   140046203:	add    BYTE PTR [rax],bl
   140046205:	add    al,0x3
   140046207:	add    BYTE PTR [rdi],al
   140046209:	add    BYTE PTR [rax],al
   14004620b:	add    BYTE PTR [rax],ch
   14004620d:	add    al,0x3
   14004620f:	add    BYTE PTR [rdi],al
   140046211:	add    BYTE PTR [rax],al
   140046213:	add    BYTE PTR [rsp+rax*1],dh
   140046216:	add    eax,DWORD PTR [rax]
   140046218:	or     DWORD PTR [rax],eax
   14004621a:	add    BYTE PTR [rax],al
   14004621c:	rex.RXB add al,0x3
   14004621f:	add    BYTE PTR [rax-0xfffe52],bh
   140046225:	(bad)  
   140046226:	(bad)  
   140046227:	push   rbp
   140046229:	scas   al,BYTE PTR es:[rdi]
   14004622a:	add    DWORD PTR [rax],eax
   14004622c:	add    BYTE PTR [rax],al
   14004622e:	add    BYTE PTR [rax],al
   140046230:	sub    eax,0x10001af
   140046235:	add    BYTE PTR [rax],al
   140046237:	add    BYTE PTR [rcx],dh
   140046239:	scas   eax,DWORD PTR es:[rdi]
   14004623a:	add    DWORD PTR [rax],eax
   14004623c:	add    al,BYTE PTR [rax]
   14004623e:	add    BYTE PTR [rax],al
   140046240:	rex.WRB scas rax,QWORD PTR es:[rdi]
   140046242:	add    DWORD PTR [rax],eax
   140046244:	add    eax,DWORD PTR [rax]
   140046246:	add    BYTE PTR [rax],al
   140046248:	pop    rsp
   140046249:	scas   eax,DWORD PTR es:[rdi]
   14004624a:	add    DWORD PTR [rax],eax
   14004624c:	add    al,0x0
   14004624e:	add    BYTE PTR [rax],al
   140046250:	in     eax,0xaf
   140046252:	add    DWORD PTR [rax],eax
   140046254:	add    eax,0xf1000000
   140046259:	scas   eax,DWORD PTR es:[rdi]
   14004625a:	add    DWORD PTR [rax],eax
   14004625c:	(bad)  
   14004625d:	add    BYTE PTR [rax],al
   14004625f:	add    BYTE PTR [rax],bl
   140046261:	mov    al,0x1
   140046263:	add    BYTE PTR [rdi],al
   140046265:	add    BYTE PTR [rax],al
   140046267:	add    BYTE PTR [rax+rsi*4],ch
   14004626a:	add    DWORD PTR [rax],eax
   14004626c:	or     BYTE PTR [rax],al
   14004626e:	add    BYTE PTR [rax],al
   140046270:	(bad)  
   140046271:	mov    al,0x1
   140046273:	add    BYTE PTR [rcx],cl
   140046275:	add    BYTE PTR [rax],al
   140046277:	add    BYTE PTR [rdi+0xa0001b1],al
   14004627d:	add    BYTE PTR [rax],al
   14004627f:	add    BYTE PTR [rbp+0x90001b1],dl
   140046285:	add    BYTE PTR [rax],al
   140046287:	add    BYTE PTR [rbx-0xfffe4f],bh
   14004628d:	(bad)  
   14004628e:	(bad)  
   14004628f:	call   QWORD PTR [rcx]
   140046291:	sbb    al,0x6
   140046293:	add    BYTE PTR [rsp+riz*2],bl
   140046296:	or     al,BYTE PTR [rax]
   140046298:	sbb    BYTE PTR [rcx+rcx*1],dh
   14004629b:	add    BYTE PTR [rdx+rdx*2],cl
   14004629e:	or     BYTE PTR [rax-0x1a],dh
   1400462a1:	loop   0x1400462a5
   1400462a3:	add    BYTE PTR [rax],ah
   1400462a5:	out    0x3,al
   1400462a7:	add    bh,bh
   1400462a9:	(bad)  
   1400462aa:	(bad)  
   1400462ab:	call   FWORD PTR [rcx+0x4]
   1400462ae:	add    eax,DWORD PTR [rax]
   1400462b0:	add    BYTE PTR [rax],al
   1400462b2:	add    BYTE PTR [rax],al
   1400462b4:	imul   eax,DWORD PTR [rbx+rax*1],0x1b28400
   1400462bb:	add    bh,bh
   1400462bd:	(bad)  
   1400462be:	(bad)  
   1400462bf:	(bad)  
   1400462c0:	mov    eax,0x10001b2
   1400462c5:	add    BYTE PTR [rax],al
   1400462c7:	add    BYTE PTR [rax-0x4d],cl
   1400462ca:	add    DWORD PTR [rax],eax
   1400462cc:	add    BYTE PTR [rax],al
   1400462ce:	add    BYTE PTR [rax],al
   1400462d0:	addr32 mov bl,0x1
   1400462d3:	add    bh,bh
   1400462d5:	(bad)  
   1400462d6:	(bad)  
   1400462d7:	call   FWORD PTR [rcx]
   1400462d9:	sbb    al,0x6
   1400462db:	add    BYTE PTR [rsp+rsi*1],bl
   1400462de:	adc    BYTE PTR [rax],al
   1400462e0:	adc    BYTE PTR [rdx-0x1ff50ff4],dl
   1400462e6:	or     BYTE PTR [rax-0x1a],ah
   1400462e9:	loop   0x1400462ed
   1400462eb:	add    al,bh
   1400462ed:	in     eax,0x3
   1400462ef:	add    bh,bh
   1400462f1:	(bad)  
   1400462f2:	(bad)  
   1400462f3:	(bad)  
   1400462f4:	jg     0x1400462fa
   1400462f6:	add    eax,DWORD PTR [rax]
   1400462f8:	add    BYTE PTR [rax],al
   1400462fa:	add    BYTE PTR [rax],al
   1400462fc:	mov    eax,DWORD PTR [rbx+rax*1]
   1400462ff:	add    BYTE PTR [rcx],al
   140046301:	add    BYTE PTR [rax],al
   140046303:	add    BYTE PTR [rax],al
   140046305:	add    BYTE PTR [rax],al
   140046307:	add    BYTE PTR [rcx],al
   140046309:	add    BYTE PTR [rax],al
   14004630b:	add    BYTE PTR [rax],al
   14004630d:	add    BYTE PTR [rax],al
   14004630f:	add    BYTE PTR [rdx],al
   140046311:	add    BYTE PTR [rax],al
   140046313:	add    BYTE PTR [rdx],al
   140046315:	add    BYTE PTR [rax],al
   140046317:	add    BYTE PTR [rbx],al
   140046319:	add    BYTE PTR [rax],al
   14004631b:	add    BYTE PTR [rcx],al
   14004631d:	add    BYTE PTR [rax],al
   14004631f:	add    BYTE PTR [rbx+riz*2],ah
   140046322:	add    al,0x0
   140046324:	or     DWORD PTR [rax],eax
   140046326:	add    BYTE PTR [rax],al
   140046328:	push   rax
   140046329:	call   0x1404c6332
   14004632e:	add    BYTE PTR [rax],al
   140046330:	xchg   edi,eax
   140046331:	add    al,0x3
   140046333:	add    BYTE PTR [rax+0x0],cl
	...
   14004633e:	add    BYTE PTR [rax],al
   140046340:	nop
   140046341:	mov    bl,0x1
   140046343:	add    bh,bh
   140046345:	(bad)  
   140046346:	(bad)  
   140046347:	inc    edi
   140046349:	mov    bl,0x1
   14004634b:	add    BYTE PTR [rax],al
   14004634d:	add    BYTE PTR [rax],al
   14004634f:	add    BYTE PTR [rbx],ch
   140046351:	mov    ah,0x1
   140046353:	add    BYTE PTR [rdx],al
   140046355:	add    BYTE PTR [rax],al
   140046357:	add    BYTE PTR [rsi-0x4c],cl
   14004635a:	add    DWORD PTR [rax],eax
   14004635c:	add    DWORD PTR [rax],eax
   14004635e:	add    BYTE PTR [rax],al
   140046360:	scas   eax,DWORD PTR es:[rdi]
   140046361:	mov    ch,0x1
   140046363:	add    BYTE PTR [rax],al
   140046365:	add    BYTE PTR [rax],al
   140046367:	add    ch,dh
   140046369:	mov    ch,0x1
   14004636b:	add    bh,bh
   14004636d:	(bad)  
   14004636e:	(bad)  
   14004636f:	call   QWORD PTR [rdi+0x304]
   140046375:	add    BYTE PTR [rax],al
   140046377:	add    BYTE PTR [rsp+rax*1+0x30003],ah
   14004637e:	add    BYTE PTR [rax],al
   140046380:	mov    al,0x4
   140046382:	add    eax,DWORD PTR [rax]
   140046384:	add    BYTE PTR [rax],al
   140046386:	add    BYTE PTR [rax],al
   140046388:	sbb    DWORD PTR [rdx],ecx
   14004638a:	add    al,BYTE PTR [rax]
   14004638c:	or     dl,BYTE PTR [rdx+0x6]
   14004638f:	push   rax
   140046390:	out    0xe2,al
   140046392:	add    al,BYTE PTR [rax]
   140046394:	clc    
   140046395:	in     eax,0x3
   140046397:	add    BYTE PTR [rcx],bl
   140046399:	and    al,0xa
   14004639b:	add    BYTE PTR [rsp+riz*2],ah
   14004639e:	adc    al,0x0
   1400463a0:	and    BYTE PTR [rbx+rdx*1],dh
   1400463a3:	add    BYTE PTR [rdx+rsi*4],dl
   1400463a6:	adc    al,dh
   1400463a8:	(bad)  
   1400463a9:	loopne 0x1400463b7
   1400463ab:	ror    BYTE PTR [rdx],1
   1400463ad:	ror    BYTE PTR [rax],0x70
   1400463b0:	out    0xe2,al
   1400463b2:	add    al,BYTE PTR [rax]
   1400463b4:	shl    ch,1
   1400463b6:	add    eax,DWORD PTR [rax]
   1400463b8:	(bad)  
   1400463b9:	(bad)  
   1400463ba:	(bad)  
   1400463bb:	inc    esp
   1400463bd:	add    al,0x3
   1400463bf:	add    BYTE PTR [rax],al
   1400463c1:	add    BYTE PTR [rax],al
   1400463c3:	add    al,dl
   1400463c5:	add    al,0x3
   1400463c7:	add    BYTE PTR [rcx],al
   1400463c9:	add    BYTE PTR [rax],al
   1400463cb:	add    BYTE PTR [rax],al
   1400463cd:	add    BYTE PTR [rax],al
   1400463cf:	add    BYTE PTR [rcx],al
   1400463d1:	add    BYTE PTR [rax],al
   1400463d3:	add    BYTE PTR [rax],al
   1400463d5:	add    BYTE PTR [rax],al
   1400463d7:	add    BYTE PTR [rdx],al
   1400463d9:	add    BYTE PTR [rax],al
   1400463db:	add    BYTE PTR [rdx],al
   1400463dd:	add    BYTE PTR [rax],al
   1400463df:	add    BYTE PTR [rbx],al
   1400463e1:	add    BYTE PTR [rax],al
   1400463e3:	add    BYTE PTR [rcx],al
   1400463e5:	add    BYTE PTR [rax],al
   1400463e7:	add    ah,ch
   1400463e9:	movsxd eax,DWORD PTR [rax+rax*1]
   1400463ec:	or     DWORD PTR [rax],eax
   1400463ee:	add    BYTE PTR [rax],al
   1400463f0:	push   rax
   1400463f1:	call   0x1405c63fa
   1400463f6:	add    BYTE PTR [rax],al
   1400463f8:	fadd   QWORD PTR [rbx+rax*1]
   1400463fb:	add    BYTE PTR [rax+0x0],cl
   1400463fe:	add    BYTE PTR [rax],al
   140046400:	jo     0x1400463b8
   140046402:	add    DWORD PTR [rax],eax
   140046404:	(bad)  
   140046405:	(bad)  
   140046406:	(bad)  
   140046407:	jmp    FWORD PTR [rbp+0x1b6]
   14004640d:	add    BYTE PTR [rax],al
   14004640f:	add    BYTE PTR [rsi+0x10001b6],dh
   140046415:	add    BYTE PTR [rax],al
   140046417:	add    BYTE PTR [rax],al
   140046419:	mov    bh,0x1
   14004641b:	add    BYTE PTR [rax],al
   14004641d:	add    BYTE PTR [rax],al
   14004641f:	add    BYTE PTR [rcx],ah
   140046421:	mov    bh,0x1
   140046423:	add    bh,bh
   140046425:	(bad)  
   140046426:	(bad)  
   140046427:	jmp    QWORD PTR [rsi]
   140046429:	mov    bh,0x1
   14004642b:	add    BYTE PTR [rdx],al
   14004642d:	add    BYTE PTR [rax],al
   14004642f:	add    BYTE PTR [rax+rdi*4],ah
   140046432:	add    DWORD PTR [rax],eax
   140046434:	add    DWORD PTR [rax],eax
   140046436:	add    BYTE PTR [rax],al
   140046438:	leave  
   140046439:	mov    eax,0x1
   14004643e:	add    BYTE PTR [rax],al
   140046440:	out    dx,al
   140046441:	mov    eax,0xffff0001
   140046446:	(bad)  
   140046447:	(bad)  
   140046448:	fadd   QWORD PTR [rbx+rax*1]
   14004644b:	add    BYTE PTR [rax],al
   14004644d:	add    BYTE PTR [rax],al
   14004644f:	add    cl,ch
   140046451:	add    al,0x3
   140046453:	add    BYTE PTR [rbx],al
   140046455:	add    BYTE PTR [rax],al
   140046457:	add    al,bh
   140046459:	add    al,0x3
   14004645b:	add    BYTE PTR [rax],al
   14004645d:	add    BYTE PTR [rax],al
   14004645f:	add    BYTE PTR [rcx],bl
   140046461:	or     al,BYTE PTR [rdx]
   140046463:	add    BYTE PTR [rdx],cl
   140046465:	push   rdx
   140046466:	(bad)  
   140046467:	push   rax
   140046468:	out    0xe2,al
   14004646a:	add    al,BYTE PTR [rax]
   14004646c:	shl    ch,1
   14004646e:	add    eax,DWORD PTR [rax]
   140046470:	add    DWORD PTR [rdi],edx
   140046472:	or     eax,DWORD PTR [rax]
   140046474:	(bad)  
   140046475:	xor    al,0x21
   140046477:	add    BYTE PTR [rdi],dl
   140046479:	add    DWORD PTR [rsi],edx
   14004647b:	add    BYTE PTR [rax],dl
   14004647d:	lock (bad) 
   14004647f:	loopne 0x14004648d
   140046481:	ror    BYTE PTR [rdx],1
   140046483:	ror    BYTE PTR [rax],0x70
   140046486:	(bad)  
   140046487:	(bad)  
   140046488:	(bad)  
   140046489:	push   rax
   14004648a:	add    BYTE PTR [rax],al
   14004648c:	adc    DWORD PTR [rdx],esp
   14004648e:	or     al,BYTE PTR [rax]
   140046490:	and    dl,BYTE PTR [rax+rbx*1+0x0]
   140046494:	(bad)  
   140046495:	xor    al,0x17
   140046497:	add    BYTE PTR [rdx],dl
   140046499:	repnz or esi,eax
   14004649c:	or     eax,esp
   14004649e:	(bad)  
   14004649f:	rol    BYTE PTR [rip+0xffffffffe6600470],0xe2        # 0x126646916
   1400464a6:	add    al,BYTE PTR [rax]
   1400464a8:	test   al,0xe5
   1400464aa:	add    eax,DWORD PTR [rax]
   1400464ac:	(bad)  
   1400464ad:	(bad)  
   1400464ae:	(bad)  
   1400464af:	dec    DWORD PTR [rax*1+0x3]
   1400464b6:	add    BYTE PTR [rax],al
   1400464b8:	sbb    BYTE PTR [rip+0x3],al        # 0x1400464c1
   1400464be:	add    BYTE PTR [rax],al
   1400464c0:	sar    BYTE PTR [rcx+rax*1-0x100],0xff
   1400464c8:	repz mov esp,0x1
   1400464ce:	add    BYTE PTR [rax],al
   1400464d0:	pop    rdx
   1400464d1:	mov    ebp,0x10001
   1400464d6:	add    BYTE PTR [rax],al
   1400464d8:	fstp   TBYTE PTR [rbp+0x1]
   1400464de:	add    BYTE PTR [rax],al
   1400464e0:	(bad)  
   1400464e1:	mov    esi,0xffff0001
   1400464e6:	(bad)  
   1400464e7:	call   FWORD PTR [rcx]
   1400464e9:	or     eax,DWORD PTR cs:[rax]
   1400464ec:	sbb    al,0x74
   1400464ee:	(bad)  
   1400464ef:	add    BYTE PTR [rsp+riz*2],bl
   1400464f2:	(bad)  
   1400464f3:	add    BYTE PTR [rsp+rsi*1],bl
   1400464f6:	sbb    eax,0x18011c00
   1400464fb:	add    BYTE PTR [rip+0x11e013f0],dl        # 0x151e478f1
   140046501:	rol    BYTE PTR [rax],0x0
   140046504:	sub    bh,ah
   140046506:	add    al,BYTE PTR [rax]
   140046508:	mov    al,0x0
   14004650a:	add    BYTE PTR [rax],al
   14004650c:	sbb    DWORD PTR [rip+0x62040001],ecx        # 0x1a2086513
   140046512:	add    BYTE PTR [rax],al
   140046514:	out    0xe2,al
   140046516:	add    al,BYTE PTR [rax]
   140046518:	and    ch,0x3
	...
   140046523:	add    BYTE PTR [rcx],al
   140046525:	add    BYTE PTR [rax],al
   140046527:	add    BYTE PTR [rcx],al
   140046529:	add    BYTE PTR [rax],al
   14004652b:	add    BYTE PTR [rax],dh
   14004652d:	gs add al,0x0
   140046530:	or     BYTE PTR [rax],al
   140046532:	add    BYTE PTR [rax],al
   140046534:	push   rax
   140046535:	call   0x1402c653e
   14004653a:	add    BYTE PTR [rax],al
   14004653c:	sub    al,BYTE PTR [rip+0x480003]        # 0x1404c6545
   140046542:	add    BYTE PTR [rax],al
   140046544:	add    BYTE PTR [rax],al
   140046546:	add    BYTE PTR [rax],al
   140046548:	lock rol BYTE PTR [rcx],0x0
   14004654c:	(bad)  
   14004654d:	(bad)  
   14004654e:	(bad)  
   14004654f:	(bad)  
   140046550:	std    
   140046551:	rol    BYTE PTR [rcx],0x0
   140046554:	add    BYTE PTR [rax],al
   140046556:	add    BYTE PTR [rax],al
   140046558:	adc    al,cl
   14004655a:	add    DWORD PTR [rax],eax
   14004655c:	(bad)  
   14004655d:	(bad)  
   14004655e:	(bad)  
   14004655f:	jmp    FWORD PTR [rdx]
   140046561:	add    eax,0x3
   140046566:	add    BYTE PTR [rax],al
   140046568:	cmp    DWORD PTR [rip+0x10003],eax        # 0x140056571
   14004656e:	add    BYTE PTR [rax],al
   140046570:	mov    eax,DWORD PTR [rip+0x3]        # 0x140046579
   140046576:	add    BYTE PTR [rax],al
   140046578:	sbb    DWORD PTR [rsp+rax*1],ecx
   14004657b:	add    BYTE PTR [rdx+rsi*1],cl
   14004657e:	or     BYTE PTR [rax+0x7],dh
   140046581:	push   rax
   140046582:	(bad)  
   140046583:	xor    dh,ah
   140046585:	loop   0x140046589
   140046587:	add    BYTE PTR [rax+0x190003e5],al
   14004658d:	or     eax,0x62040001
   140046592:	add    BYTE PTR [rax],al
   140046594:	out    0xe2,al
   140046596:	add    al,BYTE PTR [rax]
   140046598:	pop    rax
   140046599:	in     eax,0x3
	...
   1400465a3:	add    BYTE PTR [rcx],al
   1400465a5:	add    BYTE PTR [rax],al
   1400465a7:	add    BYTE PTR [rcx],al
   1400465a9:	add    BYTE PTR [rax],al
   1400465ab:	add    BYTE PTR [rax+0x8000465],dh
   1400465b1:	add    BYTE PTR [rax],al
   1400465b3:	add    BYTE PTR [rax-0x18],dl
   1400465b6:	add    al,0x0
   1400465b8:	sub    BYTE PTR [rax],al
   1400465ba:	add    BYTE PTR [rax],al
   1400465bc:	movabs eax,ds:0x48000305
   1400465c5:	add    BYTE PTR [rax],al
   1400465c7:	add    BYTE PTR [rax],ah
   1400465c9:	rol    DWORD PTR [rcx],0x0
   1400465cc:	(bad)  
   1400465cd:	(bad)  
   1400465ce:	(bad)  
   1400465cf:	push   QWORD PTR [rcx+rax*8]
   1400465d2:	add    DWORD PTR [rax],eax
   1400465d4:	add    BYTE PTR [rax],al
   1400465d6:	add    BYTE PTR [rax],al
   1400465d8:	rol    DWORD PTR ds:[rcx],0x0
   1400465dc:	(bad)  
   1400465dd:	(bad)  
   1400465de:	(bad)  
   1400465df:	jmp    QWORD PTR [rcx+0x305]
   1400465e5:	add    BYTE PTR [rax],al
   1400465e7:	add    BYTE PTR [rax+0x1000305],dh
   1400465ed:	add    BYTE PTR [rax],al
   1400465ef:	add    BYTE PTR [rdx],al
   1400465f1:	(bad)  
   1400465f2:	add    eax,DWORD PTR [rax]
   1400465f4:	add    BYTE PTR [rax],al
   1400465f6:	add    BYTE PTR [rax],al
   1400465f8:	sbb    DWORD PTR [rsp+rax*1],ecx
   1400465fb:	add    BYTE PTR [rdx+rsi*1],cl
   1400465fe:	or     BYTE PTR [rax+0x7],dh
   140046601:	push   rax
   140046602:	(bad)  
   140046603:	xor    dh,ah
   140046605:	loop   0x140046609
   140046607:	add    BYTE PTR [rax-0x1b],bl
   14004660a:	add    eax,DWORD PTR [rax]
   14004660c:	sbb    DWORD PTR [rbx],esi
   14004660e:	or     eax,DWORD PTR [rax]
   140046610:	and    eax,0x19002334
   140046615:	add    DWORD PTR [rdx],ebx
   140046617:	add    BYTE PTR [rsi],cl
   140046619:	lock or al,0xe0
   14004661c:	or     dl,al
   14004661e:	or     al,al
   140046620:	(bad)  
   140046621:	jo     0x140046628
   140046623:	(bad)  
   140046624:	add    al,0x50
   140046626:	add    BYTE PTR [rax],al
   140046628:	int3   
   140046629:	out    0x2,eax
   14004662b:	add    BYTE PTR [rax],dh
   14004662d:	in     eax,0x3
   14004662f:	add    dl,cl
   140046631:	add    BYTE PTR [rax],al
   140046633:	add    bh,bh
   140046635:	(bad)  
   140046636:	(bad)  
   140046637:	call   FWORD PTR [rax]
   140046639:	(bad)  
   14004663a:	add    eax,DWORD PTR [rax]
   14004663c:	add    BYTE PTR [rax],al
   14004663e:	add    BYTE PTR [rax],al
   140046640:	and    al,0x6
   140046642:	add    eax,DWORD PTR [rax]
   140046644:	add    DWORD PTR [rax],eax
   140046646:	add    BYTE PTR [rax],al
   140046648:	xor    BYTE PTR [rsi],al
   14004664a:	add    eax,DWORD PTR [rax]
   14004664c:	add    BYTE PTR [rax],al
   14004664e:	add    BYTE PTR [rax],al
   140046650:	rex.WR rol QWORD PTR [rcx],0x0
   140046654:	(bad)  
   140046655:	(bad)  
   140046656:	(bad)  
   140046657:	jmp    FWORD PTR [rcx+rax*8+0x1]
   14004665e:	add    BYTE PTR [rax],al
   140046660:	(bad)  
   140046661:	ret    
   140046662:	add    DWORD PTR [rax],eax
   140046664:	add    DWORD PTR [rax],eax
   140046666:	add    BYTE PTR [rax],al
   140046668:	pop    rax
   140046669:	(bad)
   14004666d:	add    BYTE PTR [rax],al
   14004666f:	add    cl,cl
   140046671:	(bad)
   140046675:	add    BYTE PTR [rax],al
   140046677:	add    BYTE PTR [rbp-0x3a],ch
   14004667a:	add    DWORD PTR [rax],eax
   14004667c:	add    BYTE PTR [rax],al
   14004667e:	add    BYTE PTR [rax],al
   140046680:	test   eax,0xff0001c6
   140046685:	(bad)  
   140046686:	(bad)  
   140046687:	inc    DWORD PTR [rcx]
   140046689:	(bad)  
   14004668a:	or     al,BYTE PTR [rax]
   14004668c:	(bad)  
   14004668d:	xor    al,0x12
   14004668f:	add    BYTE PTR [rsi],dl
   140046691:	jb     0x1400466a5
   140046693:	lock adc al,ah
   140046696:	(bad)  
   140046697:	ror    BYTE PTR [rax+rax*8],1
   14004669a:	or     dh,BYTE PTR [rax+0x9]
   14004669d:	(bad)  
   14004669e:	or     BYTE PTR [rax+0x1],dl
   1400466a1:	adc    DWORD PTR [rsi],eax
   1400466a3:	add    BYTE PTR [rcx],dl
   1400466a5:	xor    al,0xc
   1400466a7:	add    BYTE PTR [rcx],dl
   1400466a9:	push   rdx
   1400466aa:	or     eax,0xb600c70
   1400466af:	push   rax
   1400466b0:	sbb    DWORD PTR [rcx],esp
   1400466b2:	or     DWORD PTR [rax],eax
   1400466b4:	sbb    DWORD PTR [rcx],eax
   1400466b6:	adc    al,0x0
   1400466b8:	adc    dh,al
   1400466ba:	adc    al,ah
   1400466bc:	(bad)  
   1400466bd:	ror    BYTE PTR [rax+rax*8],1
   1400466c0:	or     dh,BYTE PTR [rax+0x9]
   1400466c3:	(bad)  
   1400466c4:	or     BYTE PTR [rax],dh
   1400466c6:	add    BYTE PTR [rax],al
   1400466c8:	out    0xe2,al
   1400466ca:	add    al,BYTE PTR [rax]
   1400466cc:	or     ch,ah
   1400466ce:	add    eax,DWORD PTR [rax]
   1400466d0:	(bad)  
   1400466d1:	(bad)  
   1400466d2:	(bad)  
   1400466d3:	inc    DWORD PTR [rdx+0x6]
   1400466d6:	add    eax,DWORD PTR [rax]
	...
   1400466e8:	add    DWORD PTR [rax],eax
   1400466ea:	add    BYTE PTR [rax],al
   1400466ec:	add    DWORD PTR [rax],eax
   1400466ee:	add    BYTE PTR [rax],al
   1400466f0:	add    al,BYTE PTR [rax]
   1400466f2:	add    BYTE PTR [rax],al
   1400466f4:	add    al,BYTE PTR [rax]
   1400466f6:	add    BYTE PTR [rax],al
   1400466f8:	cld    
   1400466f9:	data16 add al,0x0
   1400466fc:	or     DWORD PTR [rax],eax
   1400466fe:	add    BYTE PTR [rax],al
   140046700:	fsubr  st,st(2)
   140046702:	add    al,0x0
   140046704:	mov    BYTE PTR [rax],al
   140046706:	add    BYTE PTR [rax],al
   140046708:	rex.WRX (bad) 
   14004670a:	add    eax,DWORD PTR [rax]
   14004670c:	push   0x9000000
   140046711:	add    BYTE PTR [rax],al
   140046713:	add    BYTE PTR [rax-0x18],dl
   140046716:	add    al,0x0
   140046718:	nop
   140046719:	add    BYTE PTR [rax],al
   14004671b:	add    BYTE PTR [rax+0x6],bh
   14004671e:	add    eax,DWORD PTR [rax]
   140046720:	push   0x0
	...
   14004672d:	add    BYTE PTR [rax],al
   14004672f:	add    BYTE PTR [rax-0x35],dl
   140046732:	add    DWORD PTR [rax],eax
   140046734:	(bad)  
   140046735:	(bad)  
   140046736:	(bad)  
   140046737:	(bad)  
   140046738:	mov    ebx,0x1cb
   14004673d:	add    BYTE PTR [rax],al
   14004673f:	add    cl,dl
   140046741:	retf   
   140046742:	add    DWORD PTR [rax],eax
   140046744:	add    DWORD PTR [rax],eax
   140046746:	add    BYTE PTR [rax],al
   140046748:	lock int3 
   14004674a:	add    DWORD PTR [rax],eax
   14004674c:	add    BYTE PTR [rax],al
   14004674e:	add    BYTE PTR [rax],al
   140046750:	adc    eax,0xff0001cd
   140046755:	(bad)  
   140046756:	(bad)  
   140046757:	dec    DWORD PTR [rsi+0x6]
   14004675a:	add    eax,DWORD PTR [rax]
   14004675c:	add    BYTE PTR [rax],al
   14004675e:	add    BYTE PTR [rax],al
   140046760:	pop    rbx
   140046761:	(bad)  
   140046762:	add    eax,DWORD PTR [rax]
   140046764:	add    al,BYTE PTR [rax]
   140046766:	add    BYTE PTR [rax],al
   140046768:	push   0x6
   14004676a:	add    eax,DWORD PTR [rax]
   14004676c:	add    BYTE PTR [rax],al
   14004676e:	add    BYTE PTR [rax],al
   140046770:	test   DWORD PTR [rsi],eax
   140046772:	add    eax,DWORD PTR [rax]
   140046774:	add    al,BYTE PTR [rax]
   140046776:	add    BYTE PTR [rax],al
   140046778:	xchg   edi,eax
   140046779:	(bad)  
   14004677a:	add    eax,DWORD PTR [rax]
   14004677c:	add    BYTE PTR [rax],al
   14004677e:	add    BYTE PTR [rax],al
   140046780:	sbb    DWORD PTR [rdx],ecx
   140046782:	add    al,BYTE PTR [rax]
   140046784:	or     dl,BYTE PTR [rdx-0x1d19affa]
   14004678a:	add    al,BYTE PTR [rax]
   14004678c:	or     ch,ah
   14004678e:	add    eax,DWORD PTR [rax]
   140046790:	add    DWORD PTR [rdi],ecx
   140046792:	add    al,0x0
   140046794:	sysenter 
   140046796:	(bad)  
   140046797:	add    BYTE PTR [rdi],cl
   140046799:	xor    cl,BYTE PTR [rbx]
   14004679b:	jo     0x14004679e
   14004679d:	adc    ecx,DWORD PTR [rax]
   14004679f:	add    BYTE PTR [rbx],dl
   1400467a1:	xor    al,0x10
   1400467a3:	add    BYTE PTR [rbx],dl
   1400467a5:	jb     0x1400467b3
   1400467a7:	lock or ah,al
   1400467aa:	or     BYTE PTR [rax+0x7],dh
   1400467ad:	(bad)  
   1400467ae:	(bad)  
   1400467af:	push   rax
   1400467b0:	add    DWORD PTR [rdi],edx
   1400467b2:	or     BYTE PTR [rax],al
   1400467b4:	(bad)  
   1400467b5:	push   rsp
   1400467b6:	or     DWORD PTR [rax],eax
   1400467b8:	(bad)  
   1400467b9:	xor    al,0x8
   1400467bb:	add    BYTE PTR [rdi],dl
   1400467bd:	xor    dl,BYTE PTR [rbx]
   1400467bf:	loopne 0x1400467d2
   1400467c1:	jo     0x1400467d3
   1400467c3:	(bad)  
   1400467c4:	add    DWORD PTR [rsp+rcx*1],ebx
   1400467c7:	add    BYTE PTR [rsp+riz*2],bl
   1400467ca:	or     eax,0xc541c00
   1400467cf:	add    BYTE PTR [rsp+rsi*1],bl
   1400467d2:	or     eax,DWORD PTR [rax]
   1400467d4:	sbb    al,0x32
   1400467d6:	sbb    al,dh
   1400467d8:	(bad)  
   1400467d9:	loopne 0x1400467ef
   1400467db:	rcl    BYTE PTR [rdx],1
   1400467dd:	rcl    BYTE PTR [rax],0x70
   1400467e0:	sbb    DWORD PTR [rdi],ecx
   1400467e2:	add    al,BYTE PTR [rax]
   1400467e4:	(bad)  
   1400467e5:	push   rdx
   1400467e6:	add    dh,BYTE PTR [rax]
   1400467e8:	out    0xe2,al
   1400467ea:	add    al,BYTE PTR [rax]
   1400467ec:	loopne 0x1400467d2
   1400467ee:	add    eax,DWORD PTR [rax]
	...
   1400467f8:	add    DWORD PTR [rax],eax
   1400467fa:	add    BYTE PTR [rax],al
   1400467fc:	add    DWORD PTR [rax],eax
   1400467fe:	add    BYTE PTR [rax],al
   140046800:	add    al,0x68
   140046802:	add    al,0x0
   140046804:	or     DWORD PTR [rax],eax
   140046806:	add    BYTE PTR [rax],al
   140046808:	push   rax
   140046809:	call   0x1402c6812
   14004680e:	add    BYTE PTR [rax],al
   140046810:	stos   DWORD PTR es:[rdi],eax
   140046811:	(bad)  
   140046812:	add    eax,DWORD PTR [rax]
   140046814:	cmp    BYTE PTR [rax],al
	...
   14004681e:	add    BYTE PTR [rax],al
   140046820:	mov    ch,dl
   140046822:	add    DWORD PTR [rax],eax
   140046824:	(bad)  
   140046825:	(bad)  
   140046826:	(bad)  
   140046827:	call   FWORD PTR [rdx+0x1d5]
   14004682d:	add    BYTE PTR [rax],al
   14004682f:	add    BYTE PTR [rsi+rdx*8],ah
   140046832:	add    DWORD PTR [rax],eax
   140046834:	(bad)  
   140046835:	(bad)  
   140046836:	(bad)  
   140046837:	jmp    QWORD PTR [rsi]
   140046839:	(bad)  
   14004683a:	add    DWORD PTR [rax],eax
   14004683c:	add    BYTE PTR [rax],al
   14004683e:	add    BYTE PTR [rax],al
   140046840:	sub    eax,0xff0001d6
   140046845:	(bad)  
   140046846:	(bad)  
   140046847:	push   QWORD PTR [rdi]
   140046849:	(bad)  
   14004684a:	add    DWORD PTR [rax],eax
   14004684c:	add    BYTE PTR [rax],al
   14004684e:	add    BYTE PTR [rax],al
   140046850:	mov    eax,0x1000306
   140046855:	add    BYTE PTR [rax],al
   140046857:	add    ah,al
   140046859:	(bad)  
   14004685a:	add    eax,DWORD PTR [rax]
   14004685c:	add    BYTE PTR [rax],al
   14004685e:	add    BYTE PTR [rax],al
   140046860:	sbb    DWORD PTR [rdx],ecx
   140046862:	add    al,BYTE PTR [rax]
   140046864:	or     dh,BYTE PTR [rdx]
   140046866:	(bad)  
   140046867:	push   rax
   140046868:	out    0xe2,al
   14004686a:	add    al,BYTE PTR [rax]
   14004686c:	loopne 0x140046852
   14004686e:	add    eax,DWORD PTR [rax]
   140046870:	sbb    DWORD PTR [rdi],ebx
   140046872:	(bad)  
   140046873:	add    BYTE PTR [rdi],bl
   140046875:	xor    al,0xb
   140046877:	add    BYTE PTR [rbx],dl
   140046879:	push   rdx
   14004687a:	pavgb  mm1,QWORD PTR [rip+0xffffffffe6600c70]        # 0x1266474f1
   140046881:	loop   0x140046885
   140046883:	add    BYTE PTR [rax+0x3e4],bh
   140046889:	add    BYTE PTR [rax],al
   14004688b:	add    BYTE PTR [rax],al
   14004688d:	add    BYTE PTR [rax],al
   14004688f:	add    BYTE PTR [rcx],al
   140046891:	add    BYTE PTR [rax],al
   140046893:	add    BYTE PTR [rcx],al
   140046895:	add    BYTE PTR [rax],al
   140046897:	add    BYTE PTR [rax+rbp*2+0x400004],bl
	...
   1400468a6:	add    BYTE PTR [rax],al
   1400468a8:	fadd   DWORD PTR [rsi]
   1400468aa:	add    eax,DWORD PTR [rax]
   1400468ac:	cmp    BYTE PTR [rax],al
   1400468ae:	add    BYTE PTR [rax],al
   1400468b0:	rex.R (bad) 
   1400468b2:	add    DWORD PTR [rax],eax
   1400468b4:	(bad)  
   1400468b5:	(bad)  
   1400468b6:	(bad)  
   1400468b7:	jmp    FWORD PTR [rsi+rdx*8+0x1]
   1400468bb:	add    BYTE PTR [rax],al
   1400468bd:	add    BYTE PTR [rax],al
   1400468bf:	add    BYTE PTR [rbx],ah
   1400468c1:	xlat   BYTE PTR ds:[rbx]
   1400468c2:	add    DWORD PTR [rax],eax
   1400468c4:	(bad)  
   1400468c5:	(bad)  
   1400468c6:	(bad)  
   1400468c7:	(bad)  
   1400468c8:	mov    ebx,0x1d7
   1400468cd:	add    BYTE PTR [rax],al
   1400468cf:	add    ch,ah
   1400468d1:	(bad)  
   1400468d2:	add    eax,DWORD PTR [rax]
   1400468d4:	add    DWORD PTR [rax],eax
   1400468d6:	add    BYTE PTR [rax],al
   1400468d8:	sbb    DWORD PTR [rdx],ecx
   1400468da:	add    al,BYTE PTR [rax]
   1400468dc:	or     dh,BYTE PTR [rdx]
   1400468de:	(bad)  
   1400468df:	push   rax
   1400468e0:	out    0xe2,al
   1400468e2:	add    al,BYTE PTR [rax]
   1400468e4:	mov    eax,0x190003e4
   1400468e9:	adc    eax,DWORD PTR [rdx]
   1400468eb:	add    BYTE PTR [rdx],cl
   1400468ed:	push   rdx
   1400468ee:	(bad)  
   1400468ef:	xor    dh,ah
   1400468f1:	loop   0x1400468f5
   1400468f3:	add    BYTE PTR [rax+0x3e4],dl
   1400468f9:	add    BYTE PTR [rax],al
   1400468fb:	add    BYTE PTR [rax],al
   1400468fd:	add    BYTE PTR [rax],al
   1400468ff:	add    BYTE PTR [rcx],al
   140046901:	add    BYTE PTR [rax],al
   140046903:	add    BYTE PTR [rcx],al
   140046905:	add    BYTE PTR [rax],al
   140046907:	add    BYTE PTR [rcx+rbp*2],cl
   14004690a:	add    al,0x0
   14004690c:	add    BYTE PTR [rax],al
	...
   140046917:	add    BYTE PTR [rdx],al
   140046919:	(bad)  
   14004691a:	add    eax,DWORD PTR [rax]
   14004691c:	cmp    BYTE PTR [rax],al
   14004691e:	add    BYTE PTR [rax],al
   140046920:	fcomp  st(0)
   140046922:	add    DWORD PTR [rax],eax
   140046924:	(bad)  
   140046925:	(bad)  
   140046926:	(bad)  
   140046927:	(bad)  
   140046928:	clc    
   140046929:	fadd   DWORD PTR [rcx]
   14004692b:	add    BYTE PTR [rax],al
   14004692d:	add    BYTE PTR [rax],al
   14004692f:	add    BYTE PTR [rcx+rbx*8],dl
   140046932:	add    DWORD PTR [rax],eax
   140046934:	(bad)  
   140046935:	(bad)  
   140046936:	(bad)  
   140046937:	inc    DWORD PTR [rdx]
   140046939:	(bad)  
   14004693a:	add    eax,DWORD PTR [rax]
   14004693c:	add    BYTE PTR [rax],al
   14004693e:	add    BYTE PTR [rax],al
   140046940:	sysret 
   140046942:	add    eax,DWORD PTR [rax]
   140046944:	add    DWORD PTR [rax],eax
   140046946:	add    BYTE PTR [rax],al
   140046948:	sbb    DWORD PTR [rdx],ecx
   14004694a:	add    al,BYTE PTR [rax]
   14004694c:	or     dh,BYTE PTR [rdx]
   14004694e:	(bad)  
   14004694f:	push   rax
   140046950:	out    0xe2,al
   140046952:	add    al,BYTE PTR [rax]
   140046954:	nop
   140046955:	in     al,0x3
   140046957:	add    BYTE PTR [rcx],bl
   140046959:	sub    DWORD PTR [rdi],eax
   14004695b:	add    BYTE PTR [rbx],bl
   14004695d:	je     0x140046974
   14004695f:	add    BYTE PTR [rbx],bl
   140046961:	xor    al,0x14
   140046963:	add    BYTE PTR [rbx],bl
   140046965:	add    DWORD PTR [rdx],edx
   140046967:	add    BYTE PTR [rax],dl
   140046969:	push   rax
   14004696a:	add    BYTE PTR [rax],al
   14004696c:	sub    bh,ah
   14004696e:	add    al,BYTE PTR [rax]
   140046970:	add    BYTE PTR [rax],0x0
   140046973:	add    BYTE PTR [rcx],bl
   140046975:	and    DWORD PTR [rax],ecx
   140046977:	add    BYTE PTR [rcx],ah
   140046979:	je     0x140046986
   14004697b:	add    BYTE PTR [rip+0x19000a64],bl        # 0x1590473e5
   140046981:	xor    al,0x9
   140046983:	add    BYTE PTR [rip+0xffffffffe6e00952],cl        # 0x126e472db
   140046989:	loop   0x14004698d
   14004698b:	add    BYTE PTR [rax-0x19],ah
   14004698e:	add    eax,DWORD PTR [rax]
   140046990:	(bad)  
   140046991:	(bad)  
   140046992:	(bad)  
   140046993:	jmp    FWORD PTR [rax]
   140046995:	(bad)  
   140046996:	add    eax,DWORD PTR [rax]
	...
   1400469a8:	add    DWORD PTR [rax],eax
   1400469aa:	add    BYTE PTR [rax],al
   1400469ac:	add    DWORD PTR [rax],eax
   1400469ae:	add    BYTE PTR [rax],al
   1400469b0:	add    al,BYTE PTR [rax]
   1400469b2:	add    BYTE PTR [rax],al
   1400469b4:	add    DWORD PTR [rax],eax
   1400469b6:	add    BYTE PTR [rax],al
   1400469b8:	mov    esp,0x8000469
   1400469bd:	add    BYTE PTR [rax],al
   1400469bf:	add    BYTE PTR [rax-0x18],dl
   1400469c2:	add    al,0x0
   1400469c4:	sub    BYTE PTR [rax],al
   1400469c6:	add    BYTE PTR [rax],al
   1400469c8:	xor    al,0x7
   1400469ca:	add    eax,DWORD PTR [rax]
   1400469cc:	rex.W add BYTE PTR [rax],al
   1400469cf:	add    BYTE PTR [rax-0xfffe24],al
   1400469d5:	(bad)  
   1400469d6:	(bad)  
   1400469d7:	jmp    FWORD PTR [rbx+0x1dc]
   1400469dd:	add    BYTE PTR [rax],al
   1400469df:	add    BYTE PTR [rdx+0x10001dc],dh
   1400469e5:	add    BYTE PTR [rax],al
   1400469e7:	add    cl,cl
   1400469e9:	fadd   QWORD PTR [rcx]
   1400469eb:	add    BYTE PTR [rax],al
   1400469ed:	add    BYTE PTR [rax],al
   1400469ef:	add    dh,ah
   1400469f1:	fadd   QWORD PTR [rcx]
   1400469f3:	add    bh,bh
   1400469f5:	(bad)  
   1400469f6:	(bad)  
   1400469f7:	push   QWORD PTR [rdi+rax*1]
   1400469fa:	add    eax,DWORD PTR [rax]
   1400469fc:	add    BYTE PTR [rax],al
   1400469fe:	add    BYTE PTR [rax],al
   140046a00:	rex.XB (bad) 
   140046a02:	add    eax,DWORD PTR [rax]
   140046a04:	add    al,BYTE PTR [rax]
   140046a06:	add    BYTE PTR [rax],al
   140046a08:	sbb    DWORD PTR [rsp+rax*1],ecx
   140046a0b:	add    BYTE PTR [rdx+rsi*1],cl
   140046a0e:	or     BYTE PTR [rax+0x7],dh
   140046a11:	push   rax
   140046a12:	(bad)  
   140046a13:	xor    dh,ah
   140046a15:	loop   0x140046a19
   140046a17:	add    BYTE PTR [rax-0x19],ah
   140046a1a:	add    eax,DWORD PTR [rax]
   140046a1c:	adc    DWORD PTR [rdx+rcx*1],esp
   140046a1f:	add    BYTE PTR [rsp+riz*2],ah
   140046a22:	or     eax,0xc542000
   140046a27:	add    BYTE PTR [rsp+rsi*1],bl
   140046a2a:	or     eax,DWORD PTR [rax]
   140046a2c:	adc    BYTE PTR [rdx+0xc],dl
   140046a2f:	lock or ah,al
   140046a32:	or     BYTE PTR [rax-0x1a],dh
   140046a35:	loop   0x140046a39
   140046a37:	add    BYTE PTR [rax],bh
   140046a39:	out    0x3,eax
   140046a3b:	add    bh,bh
   140046a3d:	(bad)  
   140046a3e:	(bad)  
   140046a3f:	jmp    QWORD PTR [rdi+rax*1+0x3]
   140046a46:	add    BYTE PTR [rax],al
   140046a48:	mov    al,0x7
   140046a4a:	add    eax,DWORD PTR [rax]
   140046a4c:	add    DWORD PTR [rax],eax
   140046a4e:	add    BYTE PTR [rax],al
   140046a50:	rol    BYTE PTR [rdi],0x3
   140046a53:	add    BYTE PTR [rdx],al
   140046a55:	add    BYTE PTR [rax],al
   140046a57:	add    al,dl
   140046a59:	(bad)  
   140046a5a:	add    eax,DWORD PTR [rax]
   140046a5c:	add    eax,DWORD PTR [rax]
   140046a5e:	add    BYTE PTR [rax],al
   140046a60:	loopne 0x140046a69
   140046a62:	add    eax,DWORD PTR [rax]
   140046a64:	add    al,0x0
   140046a66:	add    BYTE PTR [rax],al
   140046a68:	lock (bad) 
   140046a6a:	add    eax,DWORD PTR [rax]
   140046a6c:	add    eax,0x3000000
   140046a71:	or     BYTE PTR [rbx],al
	...
   140046a7f:	add    BYTE PTR [rbp+rbx*8+0x1],bl
   140046a83:	add    bh,bh
   140046a85:	(bad)  
   140046a86:	(bad)  
   140046a87:	jmp    QWORD PTR [rbx+0x60001dd]
   140046a8d:	add    BYTE PTR [rax],al
   140046a8f:	add    BYTE PTR [rcx],bl
   140046a91:	fild   WORD PTR [rcx]
   140046a93:	add    BYTE PTR [rip+0x30000000],al        # 0x170046a99
   140046a99:	fild   WORD PTR [rcx]
   140046a9b:	add    BYTE PTR [rax+rax*1],al
   140046a9e:	add    BYTE PTR [rax],al
   140046aa0:	fild   WORD PTR ds:[rcx]
   140046aa3:	add    BYTE PTR [rbx],al
   140046aa5:	add    BYTE PTR [rax],al
   140046aa7:	add    BYTE PTR [rbp-0x21],bl
   140046aaa:	add    DWORD PTR [rax],eax
   140046aac:	add    al,BYTE PTR [rax]
   140046aae:	add    BYTE PTR [rax],al
   140046ab0:	jl     0x140046a91
   140046ab2:	add    DWORD PTR [rax],eax
   140046ab4:	add    DWORD PTR [rax],eax
   140046ab6:	add    BYTE PTR [rax],al
   140046ab8:	xchg   edi,ebx
   140046aba:	add    DWORD PTR [rax],eax
   140046abc:	add    BYTE PTR [rax],al
   140046abe:	add    BYTE PTR [rax],al
   140046ac0:	xchg   edx,eax
   140046ac1:	fild   WORD PTR [rcx]
   140046ac3:	add    bh,bh
   140046ac5:	(bad)  
   140046ac6:	(bad)  
   140046ac7:	call   FWORD PTR [rcx]
   140046ac9:	and    BYTE PTR [rdx],cl
   140046acb:	add    BYTE PTR [rax],ah
   140046acd:	adc    al,BYTE PTR fs:[rax]
   140046ad0:	sbb    al,0x34
   140046ad2:	adc    DWORD PTR [rax],eax
   140046ad4:	adc    BYTE PTR [rdx-0x1ff50ff4],dl
   140046ada:	or     al,dl
   140046adc:	(bad)  
   140046add:	rol    BYTE PTR [rax+rsi*2],0xe6
   140046ae1:	loop   0x140046ae5
   140046ae3:	add    BYTE PTR [rax],dl
   140046ae5:	out    0x3,eax
   140046ae7:	add    bh,bh
   140046ae9:	(bad)  
   140046aea:	(bad)  
   140046aeb:	inc    DWORD PTR [rax]
   140046aed:	add    BYTE PTR [rax],al
   140046aef:	add    BYTE PTR [rax],al
   140046af1:	add    BYTE PTR [rax],al
   140046af3:	add    BYTE PTR [rax+rcx*1],bl
   140046af6:	add    eax,DWORD PTR [rax]
   140046af8:	(bad)  
   140046af9:	(bad)  
   140046afa:	(bad)  
   140046afb:	inc    DWORD PTR [rax]
   140046afd:	add    BYTE PTR [rax],al
   140046aff:	add    BYTE PTR [rax],al
   140046b01:	add    BYTE PTR [rax],al
   140046b03:	add    BYTE PTR [rcx],al
   140046b05:	add    BYTE PTR [rax],al
   140046b07:	add    BYTE PTR [rdx],al
   140046b09:	add    BYTE PTR [rax],al
   140046b0b:	add    BYTE PTR [rcx],al
   140046b0d:	add    BYTE PTR [rax],al
   140046b0f:	add    BYTE PTR [rbx+rbp*2],dl
   140046b12:	add    al,0x0
   140046b14:	or     BYTE PTR [rax],al
   140046b16:	add    BYTE PTR [rax],al
   140046b18:	push   rax
   140046b19:	call   0x1404c6b22
   140046b1e:	add    BYTE PTR [rax],al
   140046b20:	sub    BYTE PTR [rax],cl
   140046b22:	add    eax,DWORD PTR [rax]
   140046b24:	push   0xffffffffb4000000
   140046b29:	fild   WORD PTR [rcx]
   140046b2b:	add    bh,bh
   140046b2d:	(bad)  
   140046b2e:	(bad)  
   140046b2f:	inc    DWORD PTR [rdx-0x20]
   140046b32:	add    DWORD PTR [rax],eax
   140046b34:	add    BYTE PTR [rax],al
   140046b36:	add    BYTE PTR [rax],al
   140046b38:	push   rsp
   140046b39:	loopne 0x140046b3c
   140046b3b:	add    BYTE PTR [rcx],al
   140046b3d:	add    BYTE PTR [rax],al
   140046b3f:	add    BYTE PTR [rdx-0x20],ah
   140046b42:	add    DWORD PTR [rax],eax
   140046b44:	(bad)  
   140046b45:	(bad)  
   140046b46:	(bad)  
   140046b47:	jmp    FWORD PTR [rax]
   140046b49:	or     BYTE PTR [rbx],al
   140046b4b:	add    BYTE PTR [rax],al
   140046b4d:	add    BYTE PTR [rax],al
   140046b4f:	add    BYTE PTR [rdi],dh
   140046b51:	or     BYTE PTR [rbx],al
   140046b53:	add    BYTE PTR [rdx],al
   140046b55:	add    BYTE PTR [rax],al
   140046b57:	add    BYTE PTR [rcx],bl
   140046b59:	or     al,0x4
   140046b5b:	add    BYTE PTR [rdx+rsi*2],cl
   140046b5e:	or     BYTE PTR [rax+0x7],dh
   140046b61:	push   rax
   140046b62:	(bad)  
   140046b63:	xor    dh,ah
   140046b65:	loop   0x140046b69
   140046b67:	add    BYTE PTR [rax],dl
   140046b69:	out    0x3,eax
   140046b6b:	add    BYTE PTR [rcx],bl
   140046b6d:	sbb    al,BYTE PTR [rax+rax*1]
   140046b70:	adc    dh,BYTE PTR [rdx+0xe]
   140046b73:	jo     0x140046b82
   140046b75:	(bad)  
   140046b76:	or     al,0x30
   140046b78:	out    0xe2,al
   140046b7a:	add    al,BYTE PTR [rax]
   140046b7c:	mov    bh,ah
   140046b7e:	add    eax,DWORD PTR [rax]
	...
   140046b88:	add    DWORD PTR [rax],eax
   140046b8a:	add    BYTE PTR [rax],al
   140046b8c:	add    DWORD PTR [rax],eax
   140046b8e:	add    BYTE PTR [rax],al
   140046b90:	xchg   esp,eax
   140046b91:	imul   eax,DWORD PTR [rax+rax*1],0x8
   140046b95:	add    BYTE PTR [rax],al
   140046b97:	add    BYTE PTR [rax-0x18],dl
   140046b9a:	add    al,0x0
   140046b9c:	add    BYTE PTR [rax],al
   140046b9e:	add    BYTE PTR [rax],al
   140046ba0:	cwde   
   140046ba1:	or     BYTE PTR [rbx],al
   140046ba3:	add    BYTE PTR [rax+0x0],bl
   140046ba6:	add    BYTE PTR [rax],al
   140046ba8:	test   al,0xe1
   140046baa:	add    DWORD PTR [rax],eax
   140046bac:	(bad)  
   140046bad:	(bad)  
   140046bae:	(bad)  
   140046baf:	dec    esp
   140046bb1:	loope  0x140046bb4
   140046bb3:	add    BYTE PTR [rax],al
   140046bb5:	add    BYTE PTR [rax],al
   140046bb7:	add    BYTE PTR [rbp-0x1d],al
   140046bba:	add    DWORD PTR [rax],eax
   140046bbc:	(bad)  
   140046bbd:	(bad)  
   140046bbe:	(bad)  
   140046bbf:	call   FWORD PTR [rax+0x308]
   140046bc5:	add    BYTE PTR [rax],al
   140046bc7:	add    BYTE PTR [rsi+0x1000308],ah
   140046bcd:	add    BYTE PTR [rax],al
   140046bcf:	add    BYTE PTR [rbp+0x9],cl
   140046bd2:	add    eax,DWORD PTR [rax]
   140046bd4:	add    BYTE PTR [rax],al
   140046bd6:	add    BYTE PTR [rax],al
   140046bd8:	sbb    DWORD PTR [rbx],ecx
   140046bda:	add    eax,DWORD PTR [rax]
   140046bdc:	or     esp,DWORD PTR [rdx+0x7]
   140046bdf:	push   rax
   140046be0:	(bad)  
   140046be1:	xor    BYTE PTR [rax],al
   140046be3:	add    dh,ah
   140046be5:	loop   0x140046be9
   140046be7:	add    BYTE PTR [rax+0x110003e7],cl
   140046bed:	sbb    BYTE PTR [rsi],al
   140046bef:	add    BYTE PTR [rax],bl
   140046bf1:	fs or  al,0x0
   140046bf4:	adc    al,0x34
   140046bf6:	or     eax,DWORD PTR [rax]
   140046bf8:	or     BYTE PTR [rdx+0x4],dh
   140046bfb:	jo     0x140046be3
   140046bfd:	loop   0x140046c01
   140046bff:	add    al,ch
   140046c01:	out    0x3,al
   140046c03:	add    bh,bh
   140046c05:	(bad)  
   140046c06:	(bad)  
   140046c07:	jmp    QWORD PTR [rdx+0x9]
   140046c0a:	add    eax,DWORD PTR [rax]
   140046c0c:	add    BYTE PTR [rax],al
   140046c0e:	add    BYTE PTR [rax],al
   140046c10:	push   rsp
   140046c11:	jrcxz  0x140046c14
   140046c13:	add    bh,bh
   140046c15:	(bad)  
   140046c16:	(bad)  
   140046c17:	(bad)  
   140046c18:	js     0x140046bfd
   140046c1a:	add    DWORD PTR [rax],eax
   140046c1c:	add    BYTE PTR [rax],al
   140046c1e:	add    BYTE PTR [rax],al
   140046c20:	in     al,0xe5
   140046c22:	add    DWORD PTR [rax],eax
   140046c24:	(bad)  
   140046c25:	(bad)  
   140046c26:	(bad)  
   140046c27:	call   FWORD PTR [rcx]
   140046c29:	sub    cl,BYTE PTR [rax]
   140046c2b:	add    BYTE PTR [rbx],bl
   140046c2d:	xor    al,0x14
   140046c2f:	add    BYTE PTR [rdi],cl
   140046c31:	mov    dl,0xb
   140046c33:	lock or eax,esp
   140046c36:	(bad)  
   140046c37:	rol    BYTE PTR [rip+0xffffffffcc600470],0xe7        # 0x10c6470ae
   140046c3e:	add    al,BYTE PTR [rax]
   140046c40:	shl    dh,0x3
   140046c43:	add    BYTE PTR [rbx+0x0],bl
	...
   140046c4e:	add    BYTE PTR [rax],al
   140046c50:	add    DWORD PTR [rax],eax
   140046c52:	add    BYTE PTR [rax],al
   140046c54:	add    DWORD PTR [rax],eax
   140046c56:	add    BYTE PTR [rax],al
   140046c58:	pop    rsp
   140046c59:	ins    BYTE PTR es:[rdi],dx
   140046c5a:	add    al,0x0
   140046c5c:	or     BYTE PTR [rax],al
   140046c5e:	add    BYTE PTR [rax],al
   140046c60:	push   rax
   140046c61:	call   0x140046c6a
   140046c66:	add    BYTE PTR [rax],al
   140046c68:	je     0x140046c73
   140046c6a:	add    eax,DWORD PTR [rax]
   140046c6c:	cmp    BYTE PTR [rax],al
   140046c6e:	add    BYTE PTR [rax],al
   140046c70:	sbb    al,0xe6
   140046c72:	add    DWORD PTR [rax],eax
   140046c74:	(bad)  
   140046c75:	(bad)  
   140046c76:	(bad)  
   140046c77:	dec    DWORD PTR [rsi-0x1a]
   140046c7a:	add    DWORD PTR [rax],eax
   140046c7c:	add    BYTE PTR [rax],al
   140046c7e:	add    BYTE PTR [rax],al
   140046c80:	out    dx,eax
   140046c81:	out    0x1,eax
   140046c83:	add    bh,bh
   140046c85:	(bad)  
   140046c86:	(bad)  
   140046c87:	push   QWORD PTR [rcx+rcx*1+0x3]
   140046c8b:	add    BYTE PTR [rax],al
   140046c8d:	add    BYTE PTR [rax],al
   140046c8f:	add    BYTE PTR [rcx+0x1000309],al
   140046c95:	add    BYTE PTR [rax],al
   140046c97:	add    BYTE PTR [rcx],bl
   140046c99:	or     al,BYTE PTR [rdx]
   140046c9b:	add    BYTE PTR [rdx],cl
   140046c9d:	xor    al,BYTE PTR [rsi]
   140046c9f:	push   rax
   140046ca0:	out    0xe2,al
   140046ca2:	add    al,BYTE PTR [rax]
   140046ca4:	shl    dh,0x3
   140046ca7:	add    BYTE PTR [rcx],bl
   140046ca9:	sbb    eax,DWORD PTR [rsi]
   140046cab:	add    BYTE PTR [rsp+rsi*1],cl
   140046cae:	adc    BYTE PTR [rax],al
   140046cb0:	or     al,0x92
   140046cb2:	or     BYTE PTR [rax+0x7],dh
   140046cb5:	(bad)  
   140046cb6:	(bad)  
   140046cb7:	push   rax
   140046cb8:	sub    bh,ah
   140046cba:	add    al,BYTE PTR [rax]
   140046cbc:	rex.W add BYTE PTR [rax],al
   140046cbf:	add    BYTE PTR [rcx],bl
   140046cc1:	(bad)  
   140046cc2:	or     BYTE PTR [rax],al
   140046cc4:	adc    BYTE PTR [rsp+rdx*1],dh
   140046cc7:	add    BYTE PTR [rax],dl
   140046cc9:	mov    dl,0xc
   140046ccb:	lock or ah,al
   140046cce:	or     BYTE PTR [rax+0x7],dh
   140046cd1:	(bad)  
   140046cd2:	(bad)  
   140046cd3:	push   rax
   140046cd4:	sub    bh,ah
   140046cd6:	add    al,BYTE PTR [rax]
   140046cd8:	pop    rax
   140046cd9:	add    BYTE PTR [rax],al
   140046cdb:	add    BYTE PTR [rcx],bl
   140046cdd:	and    DWORD PTR [rdi],eax
   140046cdf:	add    BYTE PTR [rdi],cl
   140046ce1:	xor    al,0x19
   140046ce3:	add    BYTE PTR [rdi],cl
   140046ce5:	add    DWORD PTR [rax+rax*1],edx
   140046ce8:	or     BYTE PTR [rax+0x7],dh
   140046ceb:	(bad)  
   140046cec:	(bad)  
   140046ced:	push   rax
   140046cee:	add    BYTE PTR [rax],al
   140046cf0:	sub    bh,ah
   140046cf2:	add    al,BYTE PTR [rax]
   140046cf4:	nop
   140046cf5:	add    BYTE PTR [rax],al
   140046cf7:	add    BYTE PTR [rcx],bl
   140046cf9:	(bad)  
   140046cfa:	add    eax,0x17340d00
   140046cff:	add    BYTE PTR [rip+0x6001401],cl        # 0x146048106
   140046d05:	jo     0x140046d07
   140046d07:	add    BYTE PTR [rax],ch
   140046d09:	out    0x2,eax
   140046d0b:	add    BYTE PTR [rax+0x19000000],dl
   140046d11:	(bad)  
   140046d12:	add    eax,0x18340d00
   140046d17:	add    BYTE PTR [rip+0x6001401],cl        # 0x14604811e
   140046d1d:	jo     0x140046d1f
   140046d1f:	add    BYTE PTR [rax],ch
   140046d21:	out    0x2,eax
   140046d23:	add    BYTE PTR [rax+0x19000000],dl
   140046d29:	sbb    eax,DWORD PTR [rbx]
   140046d2b:	add    BYTE PTR [rcx],cl
   140046d2d:	add    DWORD PTR [rdx],ebx
   140046d2f:	add    BYTE PTR [rdx],al
   140046d31:	xor    BYTE PTR [rax],al
   140046d33:	add    BYTE PTR [rax],ch
   140046d35:	out    0x2,eax
   140046d37:	add    al,al
   140046d39:	add    BYTE PTR [rax],al
   140046d3b:	add    BYTE PTR [rcx],bl
   140046d3d:	sbb    DWORD PTR [rax+rax*1],eax
   140046d40:	or     dh,BYTE PTR [rcx*1+0x6720a00]
   140046d47:	jo     0x140046d71
   140046d49:	out    0x2,eax
   140046d4b:	add    BYTE PTR [rax],dh
   140046d4d:	add    BYTE PTR [rax],al
   140046d4f:	add    BYTE PTR [rcx],bl
   140046d51:	sub    eax,0x341b0007
   140046d56:	push   rsi
   140046d57:	add    BYTE PTR [rsi],cl
   140046d59:	add    DWORD PTR [rax+0x0],edx
   140046d5c:	(bad)  
   140046d5d:	loopne 0x140046d64
   140046d5f:	jo     0x140046d65
   140046d61:	(bad)  
   140046d62:	add    BYTE PTR [rax],al
   140046d64:	int3   
   140046d65:	out    0x2,eax
   140046d67:	add    BYTE PTR [rax+0x730003e6],bl
   140046d6d:	add    al,BYTE PTR [rax]
	...
   140046d77:	add    BYTE PTR [rcx],al
   140046d79:	add    BYTE PTR [rax],al
   140046d7b:	add    BYTE PTR [rdx],al
   140046d7d:	add    BYTE PTR [rax],al
   140046d7f:	add    BYTE PTR [rbp+rbp*2+0x90004],al
   140046d86:	add    BYTE PTR [rax],al
   140046d88:	fsubr  st,st(2)
   140046d8a:	add    al,0x0
   140046d8c:	push   rax
   140046d8d:	add    BYTE PTR [rax],al
   140046d8f:	add    BYTE PTR [rax+0x58000309],ah
   140046d95:	add    BYTE PTR [rax],al
   140046d97:	add    BYTE PTR [rcx],cl
   140046d99:	add    BYTE PTR [rax],al
   140046d9b:	add    BYTE PTR [rax-0x18],dl
   140046d9e:	add    al,0x0
   140046da0:	rex.W add BYTE PTR [rax],al
   140046da3:	add    ah,al
   140046da5:	or     DWORD PTR [rbx],eax
   140046da7:	add    BYTE PTR [rax+0x0],bl
   140046daa:	add    BYTE PTR [rax],al
   140046dac:	add    BYTE PTR [rax],al
   140046dae:	add    BYTE PTR [rax],al
   140046db0:	shl    bl,1
   140046db2:	add    DWORD PTR [rax],eax
   140046db4:	(bad)  
   140046db5:	(bad)  
   140046db6:	(bad)  
   140046db7:	call   QWORD PTR [rdi]
   140046db9:	hlt    
   140046dba:	add    DWORD PTR [rax],eax
   140046dbc:	add    BYTE PTR [rax],al
   140046dbe:	add    BYTE PTR [rax],al
   140046dc0:	jge    0x140046db7
   140046dc2:	add    DWORD PTR [rax],eax
   140046dc4:	(bad)  
   140046dc5:	(bad)  
   140046dc6:	(bad)  
   140046dc7:	(bad)  
   140046dc8:	mov    esi,0x1f5
   140046dcd:	add    BYTE PTR [rax],al
   140046dcf:	add    BYTE PTR [rbp+0x1000309],ch
   140046dd5:	add    BYTE PTR [rax],al
   140046dd7:	add    BYTE PTR [rsi+0x309],dh
   140046ddd:	add    BYTE PTR [rax],al
   140046ddf:	add    cl,dl
   140046de1:	or     DWORD PTR [rbx],eax
   140046de3:	add    BYTE PTR [rcx],al
   140046de5:	add    BYTE PTR [rax],al
   140046de7:	add    ch,bl
   140046de9:	or     DWORD PTR [rbx],eax
   140046deb:	add    BYTE PTR [rax],al
   140046ded:	add    BYTE PTR [rax],al
   140046def:	add    BYTE PTR [rcx],bl
   140046df1:	or     al,BYTE PTR [rdx]
   140046df3:	add    BYTE PTR [rdx],cl
   140046df5:	jb     0x140046dfd
   140046df7:	push   rax
   140046df8:	out    0xe2,al
   140046dfa:	add    al,BYTE PTR [rax]
   140046dfc:	cwde   
   140046dfd:	out    0x3,al
   140046dff:	add    BYTE PTR [rcx],al
   140046e01:	clts   
   140046e03:	add    BYTE PTR [rdi],cl
   140046e05:	or     DWORD PTR fs:[rax],eax
   140046e08:	sysenter 
   140046e0a:	(bad)  
   140046e0b:	add    BYTE PTR [rdi],cl
   140046e0d:	xor    cl,BYTE PTR [rbx]
   140046e0f:	jo     0x140046e2a
   140046e11:	(bad)  
   140046e12:	(bad)  
   140046e13:	add    BYTE PTR [rsi],dl
   140046e15:	add    DWORD PTR [rsi+0x5e00700],ecx
   140046e1b:	jo     0x140046e21
   140046e1d:	(bad)  
   140046e1e:	add    esi,DWORD PTR [rax]
   140046e20:	add    dl,BYTE PTR [rax+0x0]
   140046e23:	add    BYTE PTR [rax],ch
   140046e25:	out    0x2,eax
   140046e27:	add    BYTE PTR [rax+0x4],ah
   140046e2a:	add    BYTE PTR [rax],al
   140046e2c:	sbb    DWORD PTR [rip+0x72060002],edx        # 0x1b20a6e34
   140046e32:	add    dh,BYTE PTR [rax]
   140046e34:	sub    bh,ah
   140046e36:	add    al,BYTE PTR [rax]
   140046e38:	cmp    BYTE PTR [rax],al
   140046e3a:	add    BYTE PTR [rax],al
   140046e3c:	adc    DWORD PTR [rax],ebx
   140046e3e:	add    al,0x0
   140046e40:	sbb    BYTE PTR [rcx+rcx*1],dh
   140046e43:	add    BYTE PTR [rdx],cl
   140046e45:	push   rdx
   140046e46:	(bad)  
   140046e47:	jo     0x140046e2f
   140046e49:	loop   0x140046e4d
   140046e4b:	add    al,dh
   140046e4d:	call   0x140036e55
   140046e52:	(bad)  
   140046e53:	push   rcx
   140046e55:	or     DWORD PTR [rbx],eax
   140046e57:	add    BYTE PTR [rdx+rdi*8],dh
   140046e5a:	add    DWORD PTR [rax],eax
   140046e5c:	(bad)  
   140046e5d:	(bad)  
   140046e5e:	(bad)  
   140046e5f:	jmp    QWORD PTR [rdx+rdi*8+0x1]
   140046e63:	add    BYTE PTR [rax],al
   140046e65:	add    BYTE PTR [rax],al
   140046e67:	add    BYTE PTR [rbx-0xfffe06],cl
   140046e6d:	(bad)  
   140046e6e:	(bad)  
   140046e6f:	inc    DWORD PTR [rcx]
   140046e71:	(bad)  
   140046e72:	add    al,BYTE PTR [rax]
   140046e74:	(bad)  
   140046e75:	add    DWORD PTR [rcx],edx
   140046e77:	add    BYTE PTR [rcx],al
   140046e79:	(bad)  
   140046e7a:	add    al,BYTE PTR [rax]
   140046e7c:	(bad)  
   140046e7d:	add    DWORD PTR [rbx],edx
   140046e7f:	add    BYTE PTR [rcx],bl
   140046e81:	(bad)  
   140046e82:	or     DWORD PTR [rax],eax
   140046e84:	adc    eax,0xe001801
   140046e89:	lock or al,0xe0
   140046e8c:	or     dl,al
   140046e8e:	or     al,al
   140046e90:	(bad)  
   140046e91:	jo     0x140046e98
   140046e93:	(bad)  
   140046e94:	add    al,0x30
   140046e96:	add    BYTE PTR [rax],al
   140046e98:	int3   
   140046e99:	out    0x2,eax
   140046e9b:	add    al,cl
   140046e9d:	call   0x140bf6ea5
   140046ea2:	add    BYTE PTR [rax],al
   140046ea4:	(bad)  
   140046ea5:	(bad)  
   140046ea6:	(bad)  
   140046ea7:	inc    DWORD PTR [rdi]
   140046ea9:	or     al,BYTE PTR [rbx]
	...
   140046eb3:	add    BYTE PTR [rcx],al
   140046eb5:	add    BYTE PTR [rax],al
   140046eb7:	add    BYTE PTR [rbx],dl
   140046eb9:	or     al,BYTE PTR [rbx]
	...
   140046ec3:	add    BYTE PTR [rcx],al
   140046ec5:	add    BYTE PTR [rax],al
   140046ec7:	add    BYTE PTR [rdx],al
   140046ec9:	add    BYTE PTR [rax],al
   140046ecb:	add    BYTE PTR [rbx],al
   140046ecd:	add    BYTE PTR [rax],al
   140046ecf:	add    BYTE PTR [rcx],al
   140046ed1:	add    BYTE PTR [rax],al
   140046ed3:	add    al,bl
   140046ed5:	outs   dx,BYTE PTR ds:[rsi]
   140046ed6:	add    al,0x0
   140046ed8:	or     BYTE PTR [rax],al
   140046eda:	add    BYTE PTR [rax],al
   140046edc:	push   rax
   140046edd:	call   0x1406c6ee6
   140046ee2:	add    BYTE PTR [rax],al
   140046ee4:	(bad)  
   140046ee5:	or     al,BYTE PTR [rbx]
   140046ee7:	add    BYTE PTR [rax+0x0],bh
   140046eea:	add    BYTE PTR [rax],al
   140046eec:	add    BYTE PTR [rax],al
   140046eee:	add    BYTE PTR [rax],al
   140046ef0:	nop
   140046ef1:	std    
   140046ef2:	add    DWORD PTR [rax],eax
   140046ef4:	(bad)  
   140046ef5:	(bad)  
   140046ef6:	(bad)  
   140046ef7:	inc    DWORD PTR [rax]
   140046ef9:	inc    BYTE PTR [rcx]
   140046efb:	add    BYTE PTR [rax],al
   140046efd:	add    BYTE PTR [rax],al
   140046eff:	add    BYTE PTR [rdx],cl
   140046f01:	inc    BYTE PTR [rcx]
   140046f03:	add    bh,bh
   140046f05:	(bad)  
   140046f06:	(bad)  
   140046f07:	call   FWORD PTR [rax]
   140046f09:	inc    BYTE PTR [rcx]
   140046f0b:	add    BYTE PTR [rax],al
   140046f0d:	add    BYTE PTR [rax],al
   140046f0f:	add    bh,bl
   140046f11:	inc    BYTE PTR [rcx]
   140046f13:	add    BYTE PTR [rcx],al
   140046f15:	add    BYTE PTR [rax],al
   140046f17:	add    BYTE PTR [rdx],dh
   140046f19:	inc    DWORD PTR [rcx]
   140046f1b:	add    bh,bh
   140046f1d:	(bad)  
   140046f1e:	(bad)  
   140046f1f:	inc    DWORD PTR [rbp-0x1]
   140046f22:	add    DWORD PTR [rax],eax
   140046f24:	add    DWORD PTR [rax],eax
   140046f26:	add    BYTE PTR [rax],al
   140046f28:	popf   
   140046f29:	inc    DWORD PTR [rcx]
   140046f2b:	add    bh,bh
   140046f2d:	(bad)  
   140046f2e:	(bad)  
   140046f2f:	jmp    FWORD PTR [rbp+0x10001ff]
   140046f35:	add    BYTE PTR [rax],al
   140046f37:	add    BYTE PTR [rsi+0x2000200],dl
   140046f3d:	add    BYTE PTR [rax],al
   140046f3f:	add    BYTE PTR [rsi+0x2],dh
   140046f42:	add    al,BYTE PTR [rax]
   140046f44:	add    DWORD PTR [rax],eax
   140046f46:	add    BYTE PTR [rax],al
   140046f48:	(bad)  
   140046f49:	add    al,BYTE PTR [rdx]
   140046f4b:	add    bh,bh
   140046f4d:	(bad)  
   140046f4e:	(bad)  
   140046f4f:	call   FWORD PTR [rdi]
   140046f51:	or     al,BYTE PTR [rbx]
   140046f53:	add    BYTE PTR [rax],al
   140046f55:	add    BYTE PTR [rax],al
   140046f57:	add    BYTE PTR [rsi],ch
   140046f59:	or     al,BYTE PTR [rbx]
   140046f5b:	add    BYTE PTR [rbx],al
   140046f5d:	add    BYTE PTR [rax],al
   140046f5f:	add    BYTE PTR [rax+0x30a],dl
   140046f65:	add    BYTE PTR [rax],al
   140046f67:	add    BYTE PTR [rcx],bl
   140046f69:	or     al,0x4
   140046f6b:	add    BYTE PTR [rdx+rdx*4],cl
   140046f6e:	or     BYTE PTR [rax+0x7],dh
   140046f71:	push   rax
   140046f72:	(bad)  
   140046f73:	xor    dh,ah
   140046f75:	loop   0x140046f79
   140046f77:	add    al,cl
   140046f79:	call   0x1711d6f81
   140046f7e:	or     DWORD PTR [rax],eax
   140046f80:	adc    eax,DWORD PTR [rcx]
   140046f82:	sbb    al,0x0
   140046f84:	or     al,0xf0
   140046f86:	or     ah,al
   140046f88:	or     al,dl
   140046f8a:	(bad)  
   140046f8b:	rol    BYTE PTR [rax+rsi*2],0x3
   140046f8f:	(bad)  
   140046f90:	add    dh,BYTE PTR [rax]
   140046f92:	add    BYTE PTR [rax],al
   140046f94:	int3   
   140046f95:	out    0x2,eax
   140046f97:	add    BYTE PTR [rax-0x24fffc18],ah
	...
   140046fa5:	add    BYTE PTR [rax],al
   140046fa7:	add    BYTE PTR [rcx],al
   140046fa9:	add    BYTE PTR [rax],al
   140046fab:	add    BYTE PTR [rcx],al
   140046fad:	add    BYTE PTR [rax],al
   140046faf:	add    al,cl
   140046fb1:	outs   dx,DWORD PTR ds:[rsi]
   140046fb2:	add    al,0x0
   140046fb4:	add    al,BYTE PTR [rax]
   140046fb6:	add    BYTE PTR [rax],al
   140046fb8:	add    al,BYTE PTR [rax]
   140046fba:	add    BYTE PTR [rax],al
   140046fbc:	add    eax,DWORD PTR [rax]
   140046fbe:	add    BYTE PTR [rax],al
   140046fc0:	add    DWORD PTR [rax],eax
   140046fc2:	add    BYTE PTR [rax],al
   140046fc4:	fsubr  QWORD PTR [rdi+0x4]
   140046fc7:	add    BYTE PTR [rax],cl
   140046fc9:	add    BYTE PTR [rax],al
   140046fcb:	add    BYTE PTR [rax],cl
   140046fcd:	call   0x140746fd6
   140046fd2:	add    BYTE PTR [rax],al
   140046fd4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140046fd5:	or     al,BYTE PTR [rbx]
   140046fd7:	add    BYTE PTR [rax+0x0],bl
   140046fda:	add    BYTE PTR [rax],al
   140046fdc:	or     BYTE PTR [rax],al
   140046fde:	add    BYTE PTR [rax],al
   140046fe0:	or     al,ch
   140046fe2:	add    al,0x0
   140046fe4:	js     0x140046fe6
   140046fe6:	add    BYTE PTR [rax],al
   140046fe8:	sbb    cl,BYTE PTR [rbx]
   140046fea:	add    eax,DWORD PTR [rax]
   140046fec:	pop    rax
   140046fed:	add    BYTE PTR [rax],al
   140046fef:	add    ah,bh
   140046ff1:	add    al,BYTE PTR [rdx]
   140046ff3:	add    bh,bh
   140046ff5:	(bad)  
   140046ff6:	(bad)  
   140046ff7:	push   QWORD PTR [rdx+0x203]
   140046ffd:	add    BYTE PTR [rax],al
   140046fff:	add    BYTE PTR [rip+0xffffffffff000204],ah        # 0x13f047209
   140047005:	(bad)  
   140047006:	(bad)  
   140047007:	call   QWORD PTR [rsp+rax*1+0x20002]
   14004700e:	add    BYTE PTR [rax],al
   140047010:	and    DWORD PTR [rip+0xffffffffffff0002],eax        # 0x140037018
   140047016:	(bad)  
   140047017:	jmp    QWORD PTR [rsi+0x30a]
   14004701d:	add    BYTE PTR [rax],al
   14004701f:	add    BYTE PTR [rbp+0x100030a],dh
   140047025:	add    BYTE PTR [rax],al
   140047027:	add    BYTE PTR [rdx],cl
   140047029:	or     eax,DWORD PTR [rbx]
   14004702b:	add    BYTE PTR [rax],al
   14004702d:	add    BYTE PTR [rax],al
   14004702f:	add    BYTE PTR [rcx],ch
   140047031:	or     eax,DWORD PTR [rbx]
   140047033:	add    BYTE PTR [rbx],al
   140047035:	add    BYTE PTR [rax],al
   140047037:	add    BYTE PTR [rbx+0xb],bh
   14004703a:	add    eax,DWORD PTR [rax]
   14004703c:	add    BYTE PTR [rax],al
   14004703e:	add    BYTE PTR [rax],al
   140047040:	sbb    DWORD PTR [rsp+rax*1],ecx
   140047043:	add    BYTE PTR [rdx+rdx*2],cl
   140047046:	or     BYTE PTR [rax+0x7],dh
   140047049:	push   rax
   14004704a:	(bad)  
   14004704b:	xor    dh,ah
   14004704d:	loop   0x140047051
   14004704f:	add    BYTE PTR [rax+0x190003e8],ah
   140047055:	(bad)  
   140047056:	(bad)  
   140047057:	add    BYTE PTR [rdi],dl
   140047059:	xor    al,0xe
   14004705b:	add    BYTE PTR [rcx],cl
   14004705d:	jb     0x140047064
   14004705f:	loopne 0x140047064
   140047061:	jo     0x140047065
   140047063:	(bad)  
   140047064:	out    0xe2,al
   140047066:	add    al,BYTE PTR [rax]
   140047068:	js     0x140047052
   14004706a:	add    eax,DWORD PTR [rax]
   14004706c:	(bad)  
   14004706d:	(bad)  
   14004706e:	(bad)  
   14004706f:	call   QWORD PTR [rcx+0x30b]
	...
   140047081:	add    BYTE PTR [rax],al
   140047083:	add    BYTE PTR [rcx],al
   140047085:	add    BYTE PTR [rax],al
   140047087:	add    BYTE PTR [rcx],al
   140047089:	add    BYTE PTR [rax],al
   14004708b:	add    BYTE PTR [rdx],al
   14004708d:	add    BYTE PTR [rax],al
   14004708f:	add    BYTE PTR [rcx],al
   140047091:	add    BYTE PTR [rax],al
   140047093:	add    BYTE PTR [rax+0x8000470],bl
   140047099:	add    BYTE PTR [rax],al
   14004709b:	add    BYTE PTR [rax-0x18],dl
   14004709e:	add    al,0x0
   1400470a0:	xor    BYTE PTR [rax],al
   1400470a2:	add    BYTE PTR [rax],al
   1400470a4:	popf   
   1400470a5:	or     eax,DWORD PTR [rbx]
   1400470a7:	add    BYTE PTR [rax+0x0],bl
   1400470aa:	add    BYTE PTR [rax],al
   1400470ac:	add    BYTE PTR [rax],al
   1400470ae:	add    BYTE PTR [rax],al
   1400470b0:	loopne 0x1400470b7
   1400470b2:	add    al,BYTE PTR [rax]
   1400470b4:	(bad)  
   1400470b5:	(bad)  
   1400470b6:	(bad)  
   1400470b7:	call   FWORD PTR [rax]
   1400470b9:	(bad)  
   1400470ba:	add    al,BYTE PTR [rax]
   1400470bc:	add    DWORD PTR [rax],eax
   1400470be:	add    BYTE PTR [rax],al
   1400470c0:	add    al,0x7
   1400470c2:	add    al,BYTE PTR [rax]
   1400470c4:	(bad)  
   1400470c5:	(bad)  
   1400470c6:	(bad)  
   1400470c7:	call   FWORD PTR [rbp+0x30b]
   1400470cd:	add    BYTE PTR [rax],al
   1400470cf:	add    BYTE PTR [rbx+rcx*1+0x20003],ch
   1400470d6:	add    BYTE PTR [rax],al
   1400470d8:	(bad)  
   1400470d9:	or     al,0x3
   1400470db:	add    BYTE PTR [rax],al
   1400470dd:	add    BYTE PTR [rax],al
   1400470df:	add    BYTE PTR [rcx],bl
   1400470e1:	or     al,0x4
   1400470e3:	add    BYTE PTR [rdx+rdx*2],cl
   1400470e6:	or     BYTE PTR [rax+0x7],dh
   1400470e9:	push   rax
   1400470ea:	(bad)  
   1400470eb:	xor    dh,ah
   1400470ed:	loop   0x1400470f1
   1400470ef:	add    BYTE PTR [rax-0x18],bh
   1400470f2:	add    eax,DWORD PTR [rax]
   1400470f4:	sbb    DWORD PTR [rdi],edx
   1400470f6:	(bad)  
   1400470f7:	add    BYTE PTR [rdi],dl
   1400470f9:	xor    al,0xc
   1400470fb:	add    BYTE PTR [rcx],cl
   1400470fd:	push   rdx
   1400470fe:	add    eax,0x27003e0
   140047103:	(bad)  
   140047104:	out    0xe2,al
   140047106:	add    al,BYTE PTR [rax]
   140047108:	push   rax
   140047109:	call   0x140037111
   14004710e:	(bad)  
   14004710f:	jmp    QWORD PTR [rsp+rcx*1]
   140047112:	add    eax,DWORD PTR [rax]
	...
   140047124:	add    DWORD PTR [rax],eax
   140047126:	add    BYTE PTR [rax],al
   140047128:	add    DWORD PTR [rax],eax
   14004712a:	add    BYTE PTR [rax],al
   14004712c:	add    al,BYTE PTR [rax]
   14004712e:	add    BYTE PTR [rax],al
   140047130:	add    DWORD PTR [rax],eax
   140047132:	add    BYTE PTR [rax],al
   140047134:	cmp    BYTE PTR [rcx+0x4],dh
   140047137:	add    BYTE PTR [rax],cl
   140047139:	add    BYTE PTR [rax],al
   14004713b:	add    BYTE PTR [rax-0x18],dl
   14004713e:	add    al,0x0
   140047140:	and    BYTE PTR [rax],al
   140047142:	add    BYTE PTR [rax],al
   140047144:	xor    BYTE PTR [rbx+rax*1],cl
   140047147:	add    BYTE PTR [rax+0x0],cl
   14004714a:	add    BYTE PTR [rax],al
   14004714c:	add    BYTE PTR [rax],al
   14004714e:	add    BYTE PTR [rax],al
   140047150:	rex (bad) 
   140047152:	add    al,BYTE PTR [rax]
   140047154:	(bad)  
   140047155:	(bad)  
   140047156:	(bad)  
   140047157:	push   QWORD PTR [rbp+0x7]
   14004715a:	add    al,BYTE PTR [rax]
   14004715c:	add    DWORD PTR [rax],eax
   14004715e:	add    BYTE PTR [rax],al
   140047160:	rex.WR or BYTE PTR [rdx],r8b
   140047163:	add    bh,bh
   140047165:	(bad)  
   140047166:	(bad)  
   140047167:	push   QWORD PTR [rax]
   140047169:	or     al,0x3
   14004716b:	add    BYTE PTR [rax],al
   14004716d:	add    BYTE PTR [rax],al
   14004716f:	add    BYTE PTR [rdi],bh
   140047171:	or     al,0x3
   140047173:	add    BYTE PTR [rdx],al
   140047175:	add    BYTE PTR [rax],al
   140047177:	add    BYTE PTR [rcx+0x30c],ah
   14004717d:	add    BYTE PTR [rax],al
   14004717f:	add    BYTE PTR [rcx],bl
   140047181:	or     al,0x4
   140047183:	add    BYTE PTR [rdx+rsi*1],cl
   140047186:	or     BYTE PTR [rax+0x7],dh
   140047189:	push   rax
   14004718a:	(bad)  
   14004718b:	xor    dh,ah
   14004718d:	loop   0x140047191
   14004718f:	add    BYTE PTR [rax-0x18],dl
   140047192:	add    eax,DWORD PTR [rax]
   140047194:	adc    DWORD PTR [rsi+rax*1],ebx
   140047197:	add    BYTE PTR [rsp+riz*2],bl
   14004719a:	or     al,0x0
   14004719c:	sbb    BYTE PTR [rbx+rcx*1],dh
   14004719f:	add    BYTE PTR [rdx+rsi*2],cl
   1400471a2:	or     BYTE PTR [rax-0x1a],dh
   1400471a5:	loop   0x1400471a9
   1400471a7:	add    BYTE PTR [rax],ch
   1400471a9:	call   0x1400371b1
   1400471ae:	(bad)  
   1400471af:	push   QWORD PTR [rdi+0x30c]
   1400471b5:	add    BYTE PTR [rax],al
   1400471b7:	add    bh,al
   1400471b9:	or     al,0x3
   1400471bb:	add    BYTE PTR [rax],al
   1400471bd:	add    BYTE PTR [rax],al
   1400471bf:	add    BYTE PTR [rax+rcx*1+0x2],bh
   1400471c3:	add    bh,bh
   1400471c5:	(bad)  
   1400471c6:	(bad)  
   1400471c7:	(bad)  
   1400471c8:	mov    esp,0x208
   1400471cd:	add    BYTE PTR [rax],al
   1400471cf:	add    bl,ah
   1400471d1:	or     BYTE PTR [rdx],al
   1400471d3:	add    BYTE PTR [rcx],al
   1400471d5:	add    BYTE PTR [rax],al
   1400471d7:	add    BYTE PTR [rsi+0x9],bl
   1400471da:	add    al,BYTE PTR [rax]
   1400471dc:	(bad)  
   1400471dd:	(bad)  
   1400471de:	(bad)  
   1400471df:	call   QWORD PTR [rcx]
   1400471e1:	and    cl,BYTE PTR [rdx]
   1400471e3:	add    BYTE PTR [rdx],ah
   1400471e5:	xor    al,0xe
   1400471e7:	add    BYTE PTR [rdx+rdx*2],dl
   1400471ea:	adc    al,dh
   1400471ec:	(bad)  
   1400471ed:	loopne 0x1400471fb
   1400471ef:	ror    BYTE PTR [rdx],1
   1400471f1:	ror    BYTE PTR [rax],0x70
   1400471f4:	(bad)  
   1400471f5:	(bad)  
   1400471f6:	(bad)  
   1400471f7:	push   rax
   1400471f8:	out    0xe2,al
   1400471fa:	add    al,BYTE PTR [rax]
   1400471fc:	sbb    cl,ch
   1400471fe:	add    eax,DWORD PTR [rax]
   140047200:	(bad)  
   140047201:	(bad)  
   140047202:	(bad)  
   140047203:	(bad)  
   140047204:	sti    
   140047205:	or     al,0x3
   140047207:	add    bh,bh
   140047209:	(bad)  
   14004720a:	(bad)  
   14004720b:	inc    DWORD PTR [rdi]
   14004720d:	or     eax,0x9a00003
   140047212:	add    al,BYTE PTR [rax]
   140047214:	(bad)  
   140047215:	(bad)  
   140047216:	(bad)  
   140047217:	jmp    QWORD PTR [rdx+rcx*1]
   14004721a:	add    al,BYTE PTR [rax]
   14004721c:	add    BYTE PTR [rax],al
   14004721e:	add    BYTE PTR [rax],al
   140047220:	xor    cl,BYTE PTR [rdx]
   140047222:	add    al,BYTE PTR [rax]
   140047224:	(bad)  
   140047225:	(bad)  
   140047226:	(bad)  
   140047227:	inc    DWORD PTR [rsi+0xa]
   14004722a:	add    al,BYTE PTR [rax]
   14004722c:	add    DWORD PTR [rax],eax
   14004722e:	add    BYTE PTR [rax],al
   140047230:	out    0xa,eax
   140047232:	add    al,BYTE PTR [rax]
   140047234:	(bad)  
   140047235:	(bad)  
   140047236:	(bad)  
   140047237:	call   FWORD PTR [rcx]
   140047239:	or     BYTE PTR cs:[rax],al
   14004723c:	(bad)  
   14004723d:	fs (bad) 
   14004723f:	add    BYTE PTR [rbx],bl
   140047241:	xor    al,0x15
   140047243:	add    BYTE PTR [rdi],cl
   140047245:	repnz or al,dh
   140047248:	(bad)  
   140047249:	loopne 0x14004724f
   14004724b:	jo     0x140047219
   14004724d:	out    0x2,eax
   14004724f:	add    BYTE PTR [rax],al
   140047251:	call   0x1407f7259
   140047256:	add    BYTE PTR [rax],al
   140047258:	(bad)  
   140047259:	(bad)  
   14004725a:	(bad)  
   14004725b:	call   FWORD PTR [rcx]
   14004725d:	or     eax,0x3
   140047262:	add    BYTE PTR [rax],al
   140047264:	add    BYTE PTR [rax],al
   140047266:	add    BYTE PTR [rax],al
   140047268:	add    DWORD PTR [rax],eax
   14004726a:	add    BYTE PTR [rax],al
   14004726c:	and    eax,0x200030d
   140047271:	add    BYTE PTR [rax],al
   140047273:	add    BYTE PTR [rcx],dh
   140047275:	or     eax,0x3
   14004727a:	add    BYTE PTR [rax],al
   14004727c:	add    BYTE PTR [rax],al
   14004727e:	add    BYTE PTR [rax],al
   140047280:	add    DWORD PTR [rax],eax
   140047282:	add    BYTE PTR [rax],al
   140047284:	add    eax,DWORD PTR [rax]
   140047286:	add    BYTE PTR [rax],al
   140047288:	add    al,0x0
   14004728a:	add    BYTE PTR [rax],al
   14004728c:	add    DWORD PTR [rax],eax
   14004728e:	add    BYTE PTR [rax],al
   140047290:	xchg   esp,eax
   140047291:	jb     0x140047297
   140047293:	add    BYTE PTR [rax],cl
   140047295:	add    BYTE PTR [rax],al
   140047297:	add    BYTE PTR [rax-0x18],dl
   14004729a:	add    al,0x0
   14004729c:	sub    BYTE PTR [rax],al
   14004729e:	add    BYTE PTR [rax],al
   1400472a0:	cmp    eax,0x4800030d
	...
   1400472ad:	add    BYTE PTR [rax],al
   1400472af:	add    BYTE PTR [rax+0xb],al
   1400472b2:	add    al,BYTE PTR [rax]
   1400472b4:	(bad)  
   1400472b5:	(bad)  
   1400472b6:	(bad)  
   1400472b7:	dec    DWORD PTR [rbp+0x20b]
   1400472bd:	add    BYTE PTR [rax],al
   1400472bf:	add    BYTE PTR [rdx+0x100020b],ch
   1400472c5:	add    BYTE PTR [rax],al
   1400472c7:	add    al,ah
   1400472c9:	or     eax,DWORD PTR [rdx]
   1400472cb:	add    bh,bh
   1400472cd:	(bad)  
   1400472ce:	(bad)  
   1400472cf:	push   rax
   1400472d1:	or     eax,DWORD PTR [rdx]
   1400472d3:	add    BYTE PTR [rcx],al
   1400472d5:	add    BYTE PTR [rax],al
   1400472d7:	add    BYTE PTR [rbx],al
   1400472d9:	or     al,0x2
   1400472db:	add    BYTE PTR [rdx],al
   1400472dd:	add    BYTE PTR [rax],al
   1400472df:	add    BYTE PTR [rsi],dl
   1400472e1:	or     al,0x2
   1400472e3:	add    BYTE PTR [rbx],al
   1400472e5:	add    BYTE PTR [rax],al
   1400472e7:	add    BYTE PTR [rbx+0x200020c],ch
   1400472ed:	add    BYTE PTR [rax],al
   1400472ef:	add    BYTE PTR [rbp+0x100020c],dh
   1400472f5:	add    BYTE PTR [rax],al
   1400472f7:	add    BYTE PTR [rdi-0xfffdf4],bh
   1400472fd:	(bad)  
   1400472fe:	(bad)  
   1400472ff:	(bad)  
   140047300:	cmp    eax,0x30d
   140047305:	add    BYTE PTR [rax],al
   140047307:	add    BYTE PTR [rbp+rcx*1+0x3],cl
   14004730b:	add    BYTE PTR [rax+rax*1],al
   14004730e:	add    BYTE PTR [rax],al
   140047310:	scas   al,BYTE PTR es:[rdi]
   140047311:	or     eax,0x3
   140047316:	add    BYTE PTR [rax],al
   140047318:	sbb    DWORD PTR [rsp+rax*1],ecx
   14004731b:	add    BYTE PTR [rdx+rsi*1],cl
   14004731e:	or     BYTE PTR [rax+0x7],dh
   140047321:	push   rax
   140047322:	(bad)  
   140047323:	xor    dh,ah
   140047325:	loop   0x140047329
   140047327:	add    BYTE PTR [rax],al
   140047329:	call   0x1571d7331
   14004732e:	(bad)  
   14004732f:	add    BYTE PTR [rdi],dl
   140047331:	xor    al,0xb
   140047333:	add    BYTE PTR [rcx],cl
   140047335:	push   rdx
   140047336:	add    eax,0x27003e0
   14004733b:	(bad)  
   14004733c:	out    0xe2,al
   14004733e:	add    al,BYTE PTR [rax]
   140047340:	fsub   st,st(7)
   140047342:	add    eax,DWORD PTR [rax]
   140047344:	(bad)  
   140047345:	(bad)  
   140047346:	(bad)  
   140047347:	inc    esp
   140047349:	or     eax,0x3
	...
   14004735a:	add    BYTE PTR [rax],al
   14004735c:	add    DWORD PTR [rax],eax
   14004735e:	add    BYTE PTR [rax],al
   140047360:	add    DWORD PTR [rax],eax
   140047362:	add    BYTE PTR [rax],al
   140047364:	add    al,BYTE PTR [rax]
   140047366:	add    BYTE PTR [rax],al
   140047368:	add    DWORD PTR [rax],eax
   14004736a:	add    BYTE PTR [rax],al
   14004736c:	jo     0x1400473e1
   14004736e:	add    al,0x0
   140047370:	or     BYTE PTR [rax],al
   140047372:	add    BYTE PTR [rax],al
   140047374:	push   rax
   140047375:	call   0x14024737e
   14004737a:	add    BYTE PTR [rax],al
   14004737c:	ror    BYTE PTR [rip+0x480003],1        # 0x1404c7385
	...
   14004738e:	add    BYTE PTR [rax],al
   140047390:	adc    BYTE PTR [rip+0xffffffffffff0002],cl        # 0x140037398
   140047396:	(bad)  
   140047397:	dec    DWORD PTR [rax+0xd]
   14004739a:	add    al,BYTE PTR [rax]
   14004739c:	add    BYTE PTR [rax],al
   14004739e:	add    BYTE PTR [rax],al
   1400473a0:	jle    0x1400473af
   1400473a2:	add    al,BYTE PTR [rax]
   1400473a4:	(bad)  
   1400473a5:	(bad)  
   1400473a6:	(bad)  
   1400473a7:	dec    DWORD PTR [rsi+0x100020d]
   1400473ad:	add    BYTE PTR [rax],al
   1400473af:	add    BYTE PTR [rbp+rcx*1-0xfffe],ch
   1400473b6:	(bad)  
   1400473b7:	call   rax
   1400473b9:	or     eax,0x3
   1400473be:	add    BYTE PTR [rax],al
   1400473c0:	fisttp WORD PTR [rip+0x20003]        # 0x1400673c9
   1400473c6:	add    BYTE PTR [rax],al
   1400473c8:	rex.B (bad) 
   1400473ca:	add    eax,DWORD PTR [rax]
   1400473cc:	add    BYTE PTR [rax],al
   1400473ce:	add    BYTE PTR [rax],al
   1400473d0:	sbb    DWORD PTR [rsp+rax*1],ecx
   1400473d3:	add    BYTE PTR [rdx+rsi*1],cl
   1400473d6:	or     BYTE PTR [rax+0x7],dh
   1400473d9:	push   rax
   1400473da:	(bad)  
   1400473db:	xor    dh,ah
   1400473dd:	loop   0x1400473e1
   1400473df:	add    al,bl
   1400473e1:	out    0x3,eax
   1400473e3:	add    BYTE PTR [rcx],bl
   1400473e5:	or     BYTE PTR cs:[rax],al
   1400473e8:	(bad)  
   1400473e9:	fs (bad) 
   1400473eb:	add    BYTE PTR [rbx],bl
   1400473ed:	xor    al,0x15
   1400473ef:	add    BYTE PTR [rdi],cl
   1400473f1:	repnz or al,dh
   1400473f4:	(bad)  
   1400473f5:	loopne 0x1400473fb
   1400473f7:	jo     0x1400473c5
   1400473f9:	out    0x2,eax
   1400473fb:	add    BYTE PTR [rax+0x7b0003e7],dh
   140047401:	add    BYTE PTR [rax],al
   140047403:	add    bh,bh
   140047405:	(bad)  
   140047406:	(bad)  
   140047407:	call   QWORD PTR [rdi+0xe]
   14004740a:	add    eax,DWORD PTR [rax]
	...
   140047414:	add    DWORD PTR [rax],eax
   140047416:	add    BYTE PTR [rax],al
   140047418:	movsxd ecx,DWORD PTR [rsi]
   14004741a:	add    eax,DWORD PTR [rax]
   14004741c:	add    al,BYTE PTR [rax]
   14004741e:	add    BYTE PTR [rax],al
   140047420:	outs   dx,DWORD PTR ds:[rsi]
   140047421:	(bad)  
   140047422:	add    eax,DWORD PTR [rax]
	...
   14004742c:	add    DWORD PTR [rax],eax
   14004742e:	add    BYTE PTR [rax],al
   140047430:	add    eax,DWORD PTR [rax]
   140047432:	add    BYTE PTR [rax],al
   140047434:	add    al,0x0
   140047436:	add    BYTE PTR [rax],al
   140047438:	add    DWORD PTR [rax],eax
   14004743a:	add    BYTE PTR [rax],al
   14004743c:	rex je 0x140047443
   14004743f:	add    BYTE PTR [rax],cl
   140047441:	add    BYTE PTR [rax],al
   140047443:	add    BYTE PTR [rax-0x18],dl
   140047446:	add    al,0x0
   140047448:	sub    BYTE PTR [rax],al
   14004744a:	add    BYTE PTR [rax],al
   14004744c:	jnp    0x14004745c
   14004744e:	add    eax,DWORD PTR [rax]
   140047450:	rex.W add BYTE PTR [rax],al
	...
   14004745f:	add    al,ah
   140047461:	or     eax,0xffff0002
   140047466:	(bad)  
   140047467:	jmp    FWORD PTR [rbx]
   140047469:	(bad)  
   14004746a:	add    al,BYTE PTR [rax]
   14004746c:	add    BYTE PTR [rax],al
   14004746e:	add    BYTE PTR [rax],al
   140047470:	(bad)  
   140047471:	(bad)  
   140047472:	add    al,BYTE PTR [rax]
   140047474:	(bad)  
   140047475:	(bad)  
   140047476:	(bad)  
   140047477:	push   QWORD PTR [rcx+0xe]
   14004747a:	add    al,BYTE PTR [rax]
   14004747c:	add    DWORD PTR [rax],eax
   14004747e:	add    BYTE PTR [rax],al
   140047480:	test   BYTE PTR [rsi],cl
   140047482:	add    al,BYTE PTR [rax]
   140047484:	add    al,BYTE PTR [rax]
   140047486:	add    BYTE PTR [rax],al
   140047488:	xchg   edi,eax
   140047489:	(bad)  
   14004748a:	add    al,BYTE PTR [rax]
   14004748c:	add    eax,DWORD PTR [rax]
   14004748e:	add    BYTE PTR [rax],al
   140047490:	and    eax,0x200020f
   140047495:	add    BYTE PTR [rax],al
   140047497:	add    BYTE PTR [rdi],ch
   140047499:	lar    eax,WORD PTR [rax]
   14004749c:	add    DWORD PTR [rax],eax
   14004749e:	add    BYTE PTR [rax],al
   1400474a0:	cmp    DWORD PTR [rdi],ecx
   1400474a2:	add    al,BYTE PTR [rax]
   1400474a4:	add    BYTE PTR [rax],al
   1400474a6:	add    BYTE PTR [rax],al
   1400474a8:	lar    eax,WORD PTR ds:[rax]
   1400474ac:	add    al,BYTE PTR [rax]
   1400474ae:	add    BYTE PTR [rax],al
   1400474b0:	lar    rax,WORD PTR [rax]
   1400474b4:	add    DWORD PTR [rax],eax
   1400474b6:	add    BYTE PTR [rax],al
   1400474b8:	push   rdx
   1400474b9:	lar    eax,WORD PTR [rax]
   1400474bc:	(bad)  
   1400474bd:	(bad)  
   1400474be:	(bad)  
   1400474bf:	(bad)  
   1400474c0:	jnp    0x1400474d0
   1400474c2:	add    eax,DWORD PTR [rax]
   1400474c4:	add    BYTE PTR [rax],al
   1400474c6:	add    BYTE PTR [rax],al
   1400474c8:	mov    cl,BYTE PTR [rsi]
   1400474ca:	add    eax,DWORD PTR [rax]
   1400474cc:	add    al,0x0
   1400474ce:	add    BYTE PTR [rax],al
   1400474d0:	in     al,dx
   1400474d1:	(bad)  
   1400474d2:	add    eax,DWORD PTR [rax]
   1400474d4:	add    BYTE PTR [rax],al
   1400474d6:	add    BYTE PTR [rax],al
   1400474d8:	sbb    DWORD PTR [rsp+rax*1],ecx
   1400474db:	add    BYTE PTR [rdx+rsi*1],cl
   1400474de:	or     BYTE PTR [rax+0x7],dh
   1400474e1:	push   rax
   1400474e2:	(bad)  
   1400474e3:	xor    dh,ah
   1400474e5:	loop   0x1400474e9
   1400474e7:	add    BYTE PTR [rax+0x190003e7],dh
   1400474ed:	xor    DWORD PTR [rcx],ecx
   1400474ef:	add    BYTE PTR [rdi],bl
   1400474f1:	xor    al,0x2a
   1400474f3:	add    BYTE PTR [rdx],dl
   1400474f5:	add    DWORD PTR [rdx],esp
   1400474f7:	add    BYTE PTR [rbx],cl
   1400474f9:	lock or eax,esp
   1400474fc:	(bad)  
   1400474fd:	rol    BYTE PTR [rip+0x600470],0x0        # 0x140647974
   140047504:	int3   
   140047505:	out    0x2,eax
   140047507:	add    al,dl
   140047509:	(bad)  
   14004750a:	add    eax,DWORD PTR [rax]
   14004750c:	or     eax,DWORD PTR [rcx]
   14004750e:	add    BYTE PTR [rax],al
   140047510:	(bad)  
   140047511:	(bad)  
   140047512:	(bad)  
   140047513:	inc    DWORD PTR [rax]
   140047515:	add    BYTE PTR [rax],al
   140047517:	add    BYTE PTR [rax],al
   140047519:	add    BYTE PTR [rax],al
   14004751b:	add    BYTE PTR [rdx],al
   14004751d:	lsl    eax,WORD PTR [rax]
   140047520:	add    DWORD PTR [rax],eax
   140047522:	add    BYTE PTR [rax],al
   140047524:	(bad)  
   140047525:	lsl    eax,WORD PTR [rax]
   140047528:	(bad)  
   140047529:	(bad)  
   14004752a:	(bad)  
   14004752b:	inc    DWORD PTR [rax]
   14004752d:	add    BYTE PTR [rax],al
   14004752f:	add    BYTE PTR [rax],al
   140047531:	add    BYTE PTR [rax],al
   140047533:	add    BYTE PTR [rdx],al
   140047535:	add    BYTE PTR [rax],al
   140047537:	add    BYTE PTR [rbx],al
   140047539:	add    BYTE PTR [rax],al
   14004753b:	add    BYTE PTR [rcx],al
   14004753d:	add    BYTE PTR [rax],al
   14004753f:	add    BYTE PTR [rbp+rsi*2+0x4],al
   140047543:	add    BYTE PTR [rcx],cl
   140047545:	add    BYTE PTR [rax],al
   140047547:	add    BYTE PTR [rax-0x18],dl
   14004754a:	add    al,0x0
   14004754c:	rex.W add BYTE PTR [rax],al
   14004754f:	add    BYTE PTR [rdx],bl
   140047551:	lsl    eax,WORD PTR [rax]
   140047554:	rex.W add BYTE PTR [rax],al
	...
   14004755f:	add    BYTE PTR [rax-0xfffdea],al
   140047565:	(bad)  
   140047566:	(bad)  
   140047567:	(bad)  
   140047568:	mov    esp,0x216
   14004756d:	add    BYTE PTR [rax],al
   14004756f:	add    BYTE PTR [rsi],bh
   140047571:	(bad)  
   140047572:	add    al,BYTE PTR [rax]
   140047574:	add    DWORD PTR [rax],eax
   140047576:	add    BYTE PTR [rax],al
   140047578:	pop    rcx
   140047579:	(bad)  
   14004757a:	add    al,BYTE PTR [rax]
   14004757c:	add    al,BYTE PTR [rax]
   14004757e:	add    BYTE PTR [rax],al
   140047580:	xor    bl,BYTE PTR [rax]
   140047582:	add    al,BYTE PTR [rax]
   140047584:	add    DWORD PTR [rax],eax
   140047586:	add    BYTE PTR [rax],al
   140047588:	adc    ebx,DWORD PTR [rcx]
   14004758a:	add    al,BYTE PTR [rax]
   14004758c:	(bad)  
   14004758d:	(bad)  
   14004758e:	(bad)  
   14004758f:	call   FWORD PTR [rdx]
   140047591:	lsl    eax,WORD PTR [rax]
   140047594:	add    BYTE PTR [rax],al
   140047596:	add    BYTE PTR [rax],al
   140047598:	(bad)  
   140047599:	lsl    eax,WORD PTR [rax]
   14004759c:	add    eax,DWORD PTR [rax]
   14004759e:	add    BYTE PTR [rax],al
   1400475a0:	xor    ecx,DWORD PTR [rdi]
   1400475a2:	add    eax,DWORD PTR [rax]
   1400475a4:	add    BYTE PTR [rax],al
   1400475a6:	add    BYTE PTR [rax],al
   1400475a8:	sbb    DWORD PTR [rdx],ecx
   1400475aa:	add    al,BYTE PTR [rax]
   1400475ac:	or     dl,BYTE PTR [rdx+0x6]
   1400475af:	push   rax
   1400475b0:	out    0xe2,al
   1400475b2:	add    al,BYTE PTR [rax]
   1400475b4:	shr    dl,1
   1400475b6:	add    eax,DWORD PTR [rax]
   1400475b8:	add    DWORD PTR [rdi],ecx
   1400475ba:	(bad)  
   1400475bb:	add    BYTE PTR [rdi],cl
   1400475bd:	xor    al,0x8
   1400475bf:	add    BYTE PTR [rdi],cl
   1400475c1:	xor    cl,BYTE PTR [rax]
   1400475c3:	jo     0x1400475cc
   1400475c5:	(bad)  
   1400475c6:	(bad)  
   1400475c7:	push   rax
   1400475c8:	sbb    DWORD PTR [rsi],esi
   1400475ca:	or     eax,DWORD PTR [rax]
   1400475cc:	and    al,0x74
   1400475ce:	(bad)  
   1400475cf:	add    BYTE PTR [rax],ah
   1400475d1:	fs (bad) 
   1400475d3:	add    BYTE PTR [rsp+rdx*2],bl
   1400475d6:	adc    eax,0x14341800
   1400475db:	add    BYTE PTR [rcx+rax*1],cl
   1400475de:	adc    al,BYTE PTR [rax]
   1400475e0:	add    eax,0xcc0000e0
   1400475e5:	out    0x2,eax
   1400475e7:	add    BYTE PTR [rax-0x7dfffc16],ch
   1400475ed:	add    BYTE PTR [rax],al
   1400475ef:	add    bh,bh
   1400475f1:	(bad)  
   1400475f2:	(bad)  
   1400475f3:	inc    DWORD PTR [rdi+0xf]
   1400475f6:	add    eax,DWORD PTR [rax]
   1400475f8:	and    BYTE PTR [rdx+rax*1],bl
   1400475fb:	add    bh,bh
   1400475fd:	(bad)  
   1400475fe:	(bad)  
   1400475ff:	(bad)  
   140047600:	jmp    0x140047821
   140047605:	add    BYTE PTR [rax],al
   140047607:	add    BYTE PTR [rcx-0xfffde2],al
   14004760d:	(bad)  
   14004760e:	(bad)  
   14004760f:	call   FWORD PTR [rcx]
   140047611:	sub    eax,0x541b0007
   140047616:	adc    eax,0x14341700
   14004761b:	add    BYTE PTR [rbx],cl
   14004761d:	add    DWORD PTR [rdx],edx
   14004761f:	add    BYTE PTR [rax+rsi*2],al
   140047622:	add    BYTE PTR [rax],al
   140047624:	int3   
   140047625:	out    0x2,eax
   140047627:	add    BYTE PTR [rax-0x7dfffc16],al
   14004762d:	add    BYTE PTR [rax],al
   14004762f:	add    al,dh
   140047631:	(bad)  
   140047632:	add    al,BYTE PTR [rax]
   140047634:	(bad)  
   140047635:	(bad)  
   140047636:	(bad)  
   140047637:	(bad)  
   140047638:	mov    eax,0x21f
   14004763d:	add    BYTE PTR [rax],al
   14004763f:	add    cl,dl
   140047641:	and    BYTE PTR [rdx],al
   140047643:	add    bh,bh
   140047645:	(bad)  
   140047646:	(bad)  
   140047647:	call   QWORD PTR [rcx]
   140047649:	sbb    al,0x4
   14004764b:	add    BYTE PTR [rsp+rsi*1],bl
   14004764e:	or     BYTE PTR [rax],al
   140047650:	adc    BYTE PTR [rdx+0xc],dl
   140047653:	jo     0x14004763b
   140047655:	loop   0x140047659
   140047657:	add    BYTE PTR [rax-0x16],bl
   14004765a:	add    eax,DWORD PTR [rax]
   14004765c:	(bad)  
   14004765d:	(bad)  
   14004765e:	(bad)  
   14004765f:	call   FWORD PTR [rcx+0xf]
   140047662:	add    eax,DWORD PTR [rax]
   140047664:	add    BYTE PTR [rax],al
   140047666:	add    BYTE PTR [rax],al
   140047668:	adc    BYTE PTR [rdx],ah
   14004766a:	add    al,BYTE PTR [rax]
   14004766c:	(bad)  
   14004766d:	(bad)  
   14004766e:	(bad)  
   14004766f:	push   QWORD PTR [rcx]
   140047671:	and    al,BYTE PTR [rdx]
   140047673:	add    BYTE PTR [rax],al
   140047675:	add    BYTE PTR [rax],al
   140047677:	add    BYTE PTR [rdi-0xfffdde],cl
   14004767d:	(bad)  
   14004767e:	(bad)  
   14004767f:	call   QWORD PTR [rcx]
   140047681:	sbb    al,0x4
   140047683:	add    BYTE PTR [rsp+rsi*1],bl
   140047686:	or     BYTE PTR [rax],al
   140047688:	adc    BYTE PTR [rdx+0xc],dl
   14004768b:	jo     0x140047673
   14004768d:	loop   0x140047691
   14004768f:	add    BYTE PTR [rax],dh
   140047691:	(bad)  
   140047692:	add    eax,DWORD PTR [rax]
   140047694:	add    BYTE PTR [rax],al
   140047696:	add    BYTE PTR [rax],al
   140047698:	shl    BYTE PTR [rdx],0x2
   14004769b:	add    bh,bh
   14004769d:	(bad)  
   14004769e:	(bad)  
   14004769f:	jmp    rcx
   1400476a1:	and    al,BYTE PTR [rdx]
   1400476a3:	add    BYTE PTR [rax],al
   1400476a5:	add    BYTE PTR [rax],al
   1400476a7:	add    BYTE PTR [rdi],bh
   1400476a9:	and    eax,DWORD PTR [rdx]
   1400476ab:	add    bh,bh
   1400476ad:	(bad)  
   1400476ae:	(bad)  
   1400476af:	call   QWORD PTR [rcx]
   1400476b1:	sbb    al,0x8
   1400476b3:	add    BYTE PTR [rsp+riz*2],bl
   1400476b6:	or     eax,DWORD PTR [rax]
   1400476b8:	sbb    BYTE PTR [rdx+rcx*1+0x0],dl
   1400476bc:	adc    al,0x34
   1400476be:	or     DWORD PTR [rax],eax
   1400476c0:	or     BYTE PTR [rdx+0x4],dl
   1400476c3:	jo     0x1400476ab
   1400476c5:	loop   0x1400476c9
   1400476c7:	add    BYTE PTR [rax],cl
   1400476c9:	(bad)  
   1400476ca:	add    eax,DWORD PTR [rax]
   1400476cc:	add    BYTE PTR [rax],al
   1400476ce:	add    BYTE PTR [rax],al
   1400476d0:	jo     0x1400476f5
   1400476d2:	add    al,BYTE PTR [rax]
   1400476d4:	(bad)  
   1400476d5:	(bad)  
   1400476d6:	(bad)  
   1400476d7:	jmp    FWORD PTR [rdx+0x223]
   1400476dd:	add    BYTE PTR [rax],al
   1400476df:	add    ch,dl
   1400476e1:	and    al,0x2
   1400476e3:	add    bh,bh
   1400476e5:	(bad)  
   1400476e6:	(bad)  
   1400476e7:	call   FWORD PTR [rcx]
   1400476e9:	sbb    DWORD PTR [rax+rax*1],eax
   1400476ec:	or     dh,BYTE PTR [rdi+rcx*1]
   1400476ef:	add    BYTE PTR [rdx],cl
   1400476f1:	mov    dl,0x6
   1400476f3:	jo     0x14004771d
   1400476f5:	out    0x2,eax
   1400476f7:	add    BYTE PTR [rax+0x0],bl
   1400476fa:	add    BYTE PTR [rax],al
   1400476fc:	adc    DWORD PTR [rdx+rcx*1],esp
   1400476ff:	add    BYTE PTR [rsp+rsi*1],ah
   140047702:	sbb    BYTE PTR [rax],al
   140047704:	sbb    dl,dh
   140047706:	(bad)  
   140047707:	lock or al,0xe0
   14004770a:	or     dl,al
   14004770c:	or     al,al
   14004770e:	(bad)  
   14004770f:	jo     0x140047716
   140047711:	(bad)  
   140047712:	add    al,0x50
   140047714:	out    0xe2,al
   140047716:	add    al,BYTE PTR [rax]
   140047718:	loopne 0x140047703
   14004771a:	add    eax,DWORD PTR [rax]
   14004771c:	(bad)  
   14004771d:	(bad)  
   14004771e:	(bad)  
   14004771f:	jmp    FWORD PTR [rbx+0xf]
   140047722:	add    eax,DWORD PTR [rax]
   140047724:	add    BYTE PTR [rax],al
   140047726:	add    BYTE PTR [rax],al
   140047728:	mov    ah,0x27
   14004772a:	add    al,BYTE PTR [rax]
   14004772c:	(bad)  
   14004772d:	(bad)  
   14004772e:	(bad)  
   14004772f:	push   rbp
   140047731:	(bad)  
   140047732:	add    al,BYTE PTR [rax]
   140047734:	add    BYTE PTR [rax],al
   140047736:	add    BYTE PTR [rax],al
   140047738:	ins    DWORD PTR es:[rdi],dx
   140047739:	sub    eax,DWORD PTR [rdx]
   14004773b:	add    bh,bh
   14004773d:	(bad)  
   14004773e:	(bad)  
   14004773f:	call   FWORD PTR [rcx]
   140047741:	xor    eax,0xe427000b
   140047746:	(bad)  
   140047747:	add    BYTE PTR [rbx],ah
   140047749:	je     0x140047761
   14004774b:	add    BYTE PTR [rdi],bl
   14004774d:	fs adc eax,0x14341b00
   140047753:	add    BYTE PTR [rdi],cl
   140047755:	add    DWORD PTR [rdx],edx
   140047757:	add    BYTE PTR [rax+rdx*2],al
   14004775a:	add    BYTE PTR [rax],al
   14004775c:	int3   
   14004775d:	out    0x2,eax
   14004775f:	add    BYTE PTR [rax-0x75fffc17],bh
   140047765:	add    BYTE PTR [rax],al
   140047767:	add    bh,bh
   140047769:	(bad)  
   14004776a:	(bad)  
   14004776b:	(bad)  
   14004776c:	jge    0x14004777d
   14004776e:	add    eax,DWORD PTR [rax]
   140047770:	shr    BYTE PTR [rbx],1
   140047772:	add    al,BYTE PTR [rax]
   140047774:	(bad)  
   140047775:	(bad)  
   140047776:	(bad)  
   140047777:	dec    DWORD PTR [rbx]
   140047779:	sub    al,0x2
   14004777b:	add    BYTE PTR [rax],al
   14004777d:	add    BYTE PTR [rax],al
   14004777f:	add    BYTE PTR [rsi+0x2d],ah
   140047782:	add    al,BYTE PTR [rax]
   140047784:	(bad)  
   140047785:	(bad)  
   140047786:	(bad)  
   140047787:	call   FWORD PTR [rcx]
   140047789:	lar    eax,WORD PTR [rax]
   14004778c:	(bad)  
   14004778d:	push   rdx
   14004778e:	add    dh,BYTE PTR [rax]
   140047790:	out    0xe2,al
   140047792:	add    al,BYTE PTR [rax]
   140047794:	nop
   140047795:	jmp    0x14004779d
   14004779a:	add    BYTE PTR [rax],al
   14004779c:	add    BYTE PTR [rax],al
   14004779e:	add    BYTE PTR [rax],al
   1400477a0:	add    DWORD PTR [rax],eax
   1400477a2:	add    BYTE PTR [rax],al
   1400477a4:	add    DWORD PTR [rax],eax
   1400477a6:	add    BYTE PTR [rax],al
   1400477a8:	lods   al,BYTE PTR ds:[rsi]
   1400477a9:	ja     0x1400477af
   1400477ab:	add    BYTE PTR [rcx],cl
   1400477ad:	add    BYTE PTR [rax],al
   1400477af:	add    BYTE PTR [rax-0x18],dl
   1400477b2:	add    al,0x0
   1400477b4:	sub    BYTE PTR [rax],al
   1400477b6:	add    BYTE PTR [rax],al
   1400477b8:	(bad)  
   1400477b9:	lsl    eax,WORD PTR [rax]
   1400477bc:	cmp    BYTE PTR [rax],al
   1400477be:	add    BYTE PTR [rax],al
   1400477c0:	push   rax
   1400477c1:	(bad)  
   1400477c2:	add    al,BYTE PTR [rax]
   1400477c4:	(bad)  
   1400477c5:	(bad)  
   1400477c6:	(bad)  
   1400477c7:	jmp    QWORD PTR [rdx+0x2f]
   1400477ca:	add    al,BYTE PTR [rax]
   1400477cc:	add    BYTE PTR [rax],al
   1400477ce:	add    BYTE PTR [rax],al
   1400477d0:	retf   
   1400477d1:	(bad)  
   1400477d2:	add    al,BYTE PTR [rax]
   1400477d4:	(bad)  
   1400477d5:	(bad)  
   1400477d6:	(bad)  
   1400477d7:	dec    ebp
   1400477d9:	(bad)  
   1400477da:	add    al,BYTE PTR [rax]
   1400477dc:	add    BYTE PTR [rax],al
   1400477de:	add    BYTE PTR [rax],al
   1400477e0:	(bad)  
   1400477e1:	(bad)  
   1400477e2:	add    al,BYTE PTR [rax]
   1400477e4:	(bad)  
   1400477e5:	(bad)  
   1400477e6:	(bad)  
   1400477e7:	(bad)  
   1400477e8:	fisubr WORD PTR [rdi]
   1400477ea:	add    al,BYTE PTR [rax]
   1400477ec:	add    BYTE PTR [rax],al
   1400477ee:	add    BYTE PTR [rax],al
   1400477f0:	pushf  
   1400477f1:	lsl    eax,WORD PTR [rax]
   1400477f4:	add    DWORD PTR [rax],eax
   1400477f6:	add    BYTE PTR [rax],al
   1400477f8:	test   al,0xf
   1400477fa:	add    eax,DWORD PTR [rax]
   1400477fc:	add    BYTE PTR [rax],al
   1400477fe:	add    BYTE PTR [rax],al
   140047800:	sbb    DWORD PTR [rdx],ecx
   140047802:	add    al,BYTE PTR [rax]
   140047804:	or     dh,BYTE PTR [rdx]
   140047806:	(bad)  
   140047807:	push   rax
   140047808:	out    0xe2,al
   14004780a:	add    al,BYTE PTR [rax]
   14004780c:	nop
   14004780d:	jmp    0x14f1d7815
   140047812:	add    al,BYTE PTR [rax]
   140047814:	(bad)  
   140047815:	push   rdx
   140047816:	add    dh,BYTE PTR [rax]
   140047818:	out    0xe2,al
   14004781a:	add    al,BYTE PTR [rax]
   14004781c:	push   0x3e9
   140047821:	add    BYTE PTR [rax],al
   140047823:	add    BYTE PTR [rax],al
   140047825:	add    BYTE PTR [rax],al
   140047827:	add    BYTE PTR [rcx],al
   140047829:	add    BYTE PTR [rax],al
   14004782b:	add    BYTE PTR [rcx],al
   14004782d:	add    BYTE PTR [rax],al
   14004782f:	add    BYTE PTR [rax+rdi*2],dh
   140047832:	add    al,0x0
   140047834:	or     DWORD PTR [rax],eax
   140047836:	add    BYTE PTR [rax],al
   140047838:	push   rax
   140047839:	call   0x1402c7842
   14004783e:	add    BYTE PTR [rax],al
   140047840:	mov    esp,0x3800030f
	...
   14004784d:	add    BYTE PTR [rax],al
   14004784f:	add    ah,ch
   140047851:	(bad)  
   140047852:	add    al,BYTE PTR [rax]
   140047854:	(bad)  
   140047855:	(bad)  
   140047856:	(bad)  
   140047857:	(bad)  
   140047858:	(bad)  
   140047859:	(bad)  
   14004785a:	add    al,BYTE PTR [rax]
   14004785c:	add    BYTE PTR [rax],al
   14004785e:	add    BYTE PTR [rax],al
   140047860:	xor    BYTE PTR [edx],al
   140047863:	add    bh,bh
   140047865:	(bad)  
   140047866:	(bad)  
   140047867:	jmp    FWORD PTR [rcx+0x30]
   14004786a:	add    al,BYTE PTR [rax]
   14004786c:	add    BYTE PTR [rax],al
   14004786e:	add    BYTE PTR [rax],al
   140047870:	jo     0x1400478a2
   140047872:	add    al,BYTE PTR [rax]
   140047874:	(bad)  
   140047875:	(bad)  
   140047876:	(bad)  
   140047877:	(bad)  
   140047878:	jp     0x1400478aa
   14004787a:	add    al,BYTE PTR [rax]
   14004787c:	add    BYTE PTR [rax],al
   14004787e:	add    BYTE PTR [rax],al
   140047880:	leave  
   140047881:	lsl    eax,WORD PTR [rax]
   140047884:	add    DWORD PTR [rax],eax
   140047886:	add    BYTE PTR [rax],al
   140047888:	(bad)  
   140047889:	lsl    eax,WORD PTR [rax]
   14004788c:	add    BYTE PTR [rax],al
   14004788e:	add    BYTE PTR [rax],al
   140047890:	sbb    DWORD PTR [rdx],ecx
   140047892:	add    al,BYTE PTR [rax]
   140047894:	or     dh,BYTE PTR [rdx]
   140047896:	(bad)  
   140047897:	push   rax
   140047898:	out    0xe2,al
   14004789a:	add    al,BYTE PTR [rax]
   14004789c:	push   0x190003e9
   1400478a1:	lar    eax,WORD PTR [rax]
   1400478a4:	(bad)  
   1400478a5:	push   rdx
   1400478a6:	add    dh,BYTE PTR [rax]
   1400478a8:	out    0xe2,al
   1400478aa:	add    al,BYTE PTR [rax]
   1400478ac:	rex jmp 0x1400478b5
   1400478b2:	add    BYTE PTR [rax],al
   1400478b4:	add    BYTE PTR [rax],al
   1400478b6:	add    BYTE PTR [rax],al
   1400478b8:	add    DWORD PTR [rax],eax
   1400478ba:	add    BYTE PTR [rax],al
   1400478bc:	add    DWORD PTR [rax],eax
   1400478be:	add    BYTE PTR [rax],al
   1400478c0:	(bad)  
   1400478c1:	js     0x1400478c7
   1400478c3:	add    BYTE PTR [rcx],cl
   1400478c5:	add    BYTE PTR [rax],al
   1400478c7:	add    BYTE PTR [rax-0x18],dl
   1400478ca:	add    al,0x0
   1400478cc:	sub    BYTE PTR [rax],al
   1400478ce:	add    BYTE PTR [rax],al
   1400478d0:	jmp    0x178047be4
	...
   1400478dd:	add    BYTE PTR [rax],al
   1400478df:	add    BYTE PTR [rax-0xfffdd0],cl
   1400478e5:	(bad)  
   1400478e6:	(bad)  
   1400478e7:	call   FWORD PTR [rdx+0x230]
   1400478ed:	add    BYTE PTR [rax],al
   1400478ef:	add    BYTE PTR [rbx],al
   1400478f1:	xor    DWORD PTR [rdx],eax
   1400478f3:	add    bh,bh
   1400478f5:	(bad)  
   1400478f6:	(bad)  
   1400478f7:	inc    DWORD PTR [rip+0x231]        # 0x140047b2e
   1400478fd:	add    BYTE PTR [rax],al
   1400478ff:	add    BYTE PTR [rcx+rsi*1],cl
   140047902:	add    al,BYTE PTR [rax]
   140047904:	(bad)  
   140047905:	(bad)  
   140047906:	(bad)  
   140047907:	call   QWORD PTR [rsi]
   140047909:	xor    DWORD PTR [rdx],eax
   14004790b:	add    BYTE PTR [rax],al
   14004790d:	add    BYTE PTR [rax],al
   14004790f:	add    dh,dh
   140047911:	lsl    eax,WORD PTR [rax]
   140047914:	add    DWORD PTR [rax],eax
   140047916:	add    BYTE PTR [rax],al
   140047918:	add    dl,BYTE PTR [rax]
   14004791a:	add    eax,DWORD PTR [rax]
   14004791c:	add    BYTE PTR [rax],al
   14004791e:	add    BYTE PTR [rax],al
   140047920:	sbb    DWORD PTR [rdx],ecx
   140047922:	add    al,BYTE PTR [rax]
   140047924:	or     dh,BYTE PTR [rdx]
   140047926:	(bad)  
   140047927:	push   rax
   140047928:	out    0xe2,al
   14004792a:	add    al,BYTE PTR [rax]
   14004792c:	rex jmp 0x150057935
   140047932:	add    al,0x0
   140047934:	adc    BYTE PTR [rsi+rax*1],dh
   140047937:	add    BYTE PTR [rax],dl
   140047939:	xor    cl,BYTE PTR [rax+rsi*2]
   14004793c:	sbb    DWORD PTR [rsi],ebp
   14004793e:	or     BYTE PTR [rax],al
   140047940:	(bad)  
   140047941:	xor    al,0x13
   140047943:	add    BYTE PTR [rbx],dl
   140047945:	mov    dl,0xf
   140047947:	lock or eax,0x9c00be0
   14004794d:	jo     0x140047957
   14004794f:	(bad)  
   140047950:	int3   
   140047951:	out    0x2,eax
   140047953:	add    BYTE PTR [rax],ah
   140047955:	jmp    0x14004795a
   140047957:	add    BYTE PTR [rbx+0x0],dl
	...
   140047962:	add    BYTE PTR [rax],al
   140047964:	add    DWORD PTR [rax],eax
   140047966:	add    BYTE PTR [rax],al
   140047968:	add    DWORD PTR [rax],eax
   14004796a:	add    BYTE PTR [rax],al
   14004796c:	jo     0x1400479e7
   14004796e:	add    al,0x0
   140047970:	or     DWORD PTR [rax],eax
   140047972:	add    BYTE PTR [rax],al
   140047974:	push   rax
   140047975:	call   0x14044797e
   14004797a:	add    BYTE PTR [rax],al
   14004797c:	(bad)  
   14004797d:	adc    BYTE PTR [rbx],al
   14004797f:	add    BYTE PTR [rax],bh
   140047981:	add    BYTE PTR [rax],al
   140047983:	add    BYTE PTR [rax],al
   140047985:	add    BYTE PTR [rax],al
   140047987:	add    BYTE PTR [rcx+rsi*1-0xfffe],bh
   14004798e:	(bad)  
   14004798f:	push   QWORD PTR [rsi]
   140047991:	xor    eax,DWORD PTR [rdx]
   140047993:	add    BYTE PTR [rax],al
   140047995:	add    BYTE PTR [rax],al
   140047997:	add    BYTE PTR [rdi],bh
   140047999:	xor    eax,DWORD PTR [rdx]
   14004799b:	add    bh,bh
   14004799d:	(bad)  
   14004799e:	(bad)  
   14004799f:	call   QWORD PTR [rsi]
   1400479a1:	adc    BYTE PTR [rbx],al
   1400479a3:	add    BYTE PTR [rax],al
   1400479a5:	add    BYTE PTR [rax],al
   1400479a7:	add    BYTE PTR [rbx],ah
   1400479a9:	adc    BYTE PTR [rbx],al
   1400479ab:	add    BYTE PTR [rcx],al
   1400479ad:	add    BYTE PTR [rax],al
   1400479af:	add    BYTE PTR [rdi],ch
   1400479b1:	adc    BYTE PTR [rbx],al
   1400479b3:	add    BYTE PTR [rax],al
   1400479b5:	add    BYTE PTR [rax],al
   1400479b7:	add    BYTE PTR [rcx],bl
   1400479b9:	or     al,BYTE PTR [rdx]
   1400479bb:	add    BYTE PTR [rdx],cl
   1400479bd:	xor    al,BYTE PTR [rsi]
   1400479bf:	push   rax
   1400479c0:	out    0xe2,al
   1400479c2:	add    al,BYTE PTR [rax]
   1400479c4:	and    bl,ch
   1400479c6:	add    eax,DWORD PTR [rax]
   1400479c8:	sbb    DWORD PTR [rdx],esp
   1400479ca:	(bad)  
   1400479cb:	add    BYTE PTR [rdx],bl
   1400479cd:	jb     0x1400479e5
   1400479cf:	lock adc al,0xe0
   1400479d2:	adc    dh,BYTE PTR [rax+0x11]
   1400479d5:	(bad)  
   1400479d6:	adc    BYTE PTR [rax],dh
   1400479d8:	out    0xe2,al
   1400479da:	add    al,BYTE PTR [rax]
   1400479dc:	clc    
   1400479dd:	(bad)  
   1400479de:	add    eax,DWORD PTR [rax]
	...
   1400479e8:	add    DWORD PTR [rax],eax
   1400479ea:	add    BYTE PTR [rax],al
   1400479ec:	add    DWORD PTR [rax],eax
   1400479ee:	add    BYTE PTR [rax],al
   1400479f0:	hlt    
   1400479f1:	jns    0x1400479f7
   1400479f3:	add    BYTE PTR [rcx],cl
   1400479f5:	add    BYTE PTR [rax],al
   1400479f7:	add    BYTE PTR [rax-0x18],dl
   1400479fa:	add    al,0x0
   1400479fc:	xor    BYTE PTR [rax],al
   1400479fe:	add    BYTE PTR [rax],al
   140047a00:	rex.XB adc BYTE PTR [r11],al
   140047a03:	add    BYTE PTR [rax],bh
   140047a05:	add    BYTE PTR [rax],al
   140047a07:	add    BYTE PTR [rax+0x34],cl
   140047a0a:	add    al,BYTE PTR [rax]
   140047a0c:	(bad)  
   140047a0d:	(bad)  
   140047a0e:	(bad)  
   140047a0f:	(bad)  
   140047a10:	call   0x140047c49
   140047a15:	add    BYTE PTR [rax],al
   140047a17:	add    dh,bh
   140047a19:	xor    al,0x2
   140047a1b:	add    bh,bh
   140047a1d:	(bad)  
   140047a1e:	(bad)  
   140047a1f:	inc    DWORD PTR [rbx+0x10]
   140047a22:	add    eax,DWORD PTR [rax]
   140047a24:	add    BYTE PTR [rax],al
   140047a26:	add    BYTE PTR [rax],al
   140047a28:	push   rax
   140047a29:	adc    BYTE PTR [rbx],al
   140047a2b:	add    BYTE PTR [rcx],al
   140047a2d:	add    BYTE PTR [rax],al
   140047a2f:	add    BYTE PTR [rdi+0x10],bl
   140047a32:	add    eax,DWORD PTR [rax]
   140047a34:	add    BYTE PTR [rax],al
   140047a36:	add    BYTE PTR [rax],al
   140047a38:	sbb    DWORD PTR [rdx],ecx
   140047a3a:	add    al,BYTE PTR [rax]
   140047a3c:	or     dh,BYTE PTR [rdx]
   140047a3e:	(bad)  
   140047a3f:	push   rax
   140047a40:	out    0xe2,al
   140047a42:	add    al,BYTE PTR [rax]
   140047a44:	clc    
   140047a45:	(bad)  
   140047a46:	add    eax,DWORD PTR [rax]
   140047a48:	adc    DWORD PTR [rdi],ecx
   140047a4a:	add    al,BYTE PTR [rax]
   140047a4c:	(bad)  
   140047a4d:	push   rdx
   140047a4e:	add    dh,BYTE PTR [rax-0x1a]
   140047a51:	loop   0x140047a55
   140047a53:	add    BYTE PTR [rax],bh
   140047a55:	in     al,dx
   140047a56:	add    eax,DWORD PTR [rax]
   140047a58:	(bad)  
   140047a59:	(bad)  
   140047a5a:	(bad)  
   140047a5b:	push   QWORD PTR [rbx+0x10]
   140047a5e:	add    eax,DWORD PTR [rax]
   140047a60:	add    BYTE PTR [rax],al
   140047a62:	add    BYTE PTR [rax],al
   140047a64:	mov    DWORD PTR [rax],edx
   140047a66:	add    eax,DWORD PTR [rax]
   140047a68:	add    DWORD PTR [rax],eax
   140047a6a:	add    BYTE PTR [rax],al
   140047a6c:	xchg   ebp,eax
   140047a6d:	adc    BYTE PTR [rbx],al
   140047a6f:	add    BYTE PTR [rax+0x35],cl
   140047a72:	add    al,BYTE PTR [rax]
   140047a74:	(bad)  
   140047a75:	(bad)  
   140047a76:	(bad)  
   140047a77:	push   QWORD PTR [rcx+0x35]
   140047a7a:	add    al,BYTE PTR [rax]
   140047a7c:	add    BYTE PTR [rax],al
   140047a7e:	add    BYTE PTR [rax],al
   140047a80:	lea    esi,[rip+0x20002]        # 0x140067a88
   140047a86:	add    BYTE PTR [rax],al
   140047a88:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140047a89:	xor    eax,0x2
   140047a8e:	add    BYTE PTR [rax],al
   140047a90:	mov    cl,0x35
   140047a92:	add    al,BYTE PTR [rax]
   140047a94:	(bad)  
   140047a95:	(bad)  
   140047a96:	(bad)  
   140047a97:	inc    DWORD PTR [rcx]
   140047a99:	add    al,BYTE PTR [rcx]
   140047a9b:	add    BYTE PTR [rdx],al
   140047a9d:	push   rax
   140047a9e:	add    BYTE PTR [rax],al
   140047aa0:	adc    DWORD PTR [rdi],edx
   140047aa2:	add    al,0x0
   140047aa4:	(bad)  
   140047aa5:	xor    al,0xa
   140047aa7:	add    BYTE PTR [rbx],cl
   140047aa9:	jb     0x140047ab2
   140047aab:	jo     0x140047a93
   140047aad:	loop   0x140047ab1
   140047aaf:	add    BYTE PTR [rax],dl
   140047ab1:	in     al,dx
   140047ab2:	add    eax,DWORD PTR [rax]
   140047ab4:	(bad)  
   140047ab5:	(bad)  
   140047ab6:	(bad)  
   140047ab7:	jmp    FWORD PTR [rbx+0x310]
   140047abd:	add    BYTE PTR [rax],al
   140047abf:	add    al,al
   140047ac1:	xor    eax,0xffff0002
   140047ac6:	(bad)  
   140047ac7:	push   rbp
   140047ac9:	xor    eax,0x2
   140047ace:	add    BYTE PTR [rax],al
   140047ad0:	(bad)  
   140047ad1:	add    al,BYTE PTR ss:[rax]
   140047ad4:	(bad)  
   140047ad5:	(bad)  
   140047ad6:	(bad)  
   140047ad7:	inc    DWORD PTR [rcx]
   140047ad9:	or     al,BYTE PTR [rax+rax*1]
   140047adc:	or     dh,BYTE PTR [rdi+rcx*1]
   140047adf:	add    BYTE PTR [rdx],cl
   140047ae1:	mov    dl,0x6
   140047ae3:	jo     0x140047afe
   140047ae5:	adc    al,BYTE PTR [rcx]
   140047ae7:	add    BYTE PTR [rcx],cl
   140047ae9:	(bad)  
   140047aea:	add    BYTE PTR [rax],al
   140047aec:	out    0xe2,al
   140047aee:	add    al,BYTE PTR [rax]
   140047af0:	call   0x140047ee0
   140047af5:	add    BYTE PTR [rax],al
   140047af7:	add    BYTE PTR [rax],al
   140047af9:	add    BYTE PTR [rax],al
   140047afb:	add    BYTE PTR [rcx],al
   140047afd:	add    BYTE PTR [rax],al
   140047aff:	add    BYTE PTR [rcx],al
   140047b01:	add    BYTE PTR [rax],al
   140047b03:	add    BYTE PTR [rax],cl
   140047b05:	jnp    0x140047b0b
   140047b07:	add    BYTE PTR [rax+0x0],al
	...
   140047b12:	add    BYTE PTR [rax],al
   140047b14:	mov    ebp,0x38000310
   140047b19:	add    BYTE PTR [rax],al
   140047b1b:	add    BYTE PTR [rax],al
   140047b1d:	add    BYTE PTR [rax],al
   140047b1f:	add    BYTE PTR [rax+0x37],bh
   140047b22:	add    al,BYTE PTR [rax]
   140047b24:	(bad)  
   140047b25:	(bad)  
   140047b26:	(bad)  
   140047b27:	call   FWORD PTR [rcx+0x237]
   140047b2d:	add    BYTE PTR [rax],al
   140047b2f:	add    BYTE PTR [rdi+rsi*1-0xfffe],dh
   140047b36:	(bad)  
   140047b37:	(bad)  
   140047b38:	mov    ebp,0x310
   140047b3d:	add    BYTE PTR [rax],al
   140047b3f:	add    dl,cl
   140047b41:	adc    BYTE PTR [rbx],al
   140047b43:	add    BYTE PTR [rcx],al
   140047b45:	add    BYTE PTR [rax],al
   140047b47:	add    BYTE PTR [rcx],bl
   140047b49:	or     al,BYTE PTR [rdx]
   140047b4b:	add    BYTE PTR [rdx],cl
   140047b4d:	xor    al,BYTE PTR [rsi]
   140047b4f:	push   rax
   140047b50:	out    0xe2,al
   140047b52:	add    al,BYTE PTR [rax]
   140047b54:	call   0x159047f44
   140047b59:	lar    eax,WORD PTR [rax]
   140047b5c:	(bad)  
   140047b5d:	push   rdx
   140047b5e:	add    dh,BYTE PTR [rax]
   140047b60:	out    0xe2,al
   140047b62:	add    al,BYTE PTR [rax]
   140047b64:	shr    bl,0x3
	...
   140047b6f:	add    BYTE PTR [rcx],al
   140047b71:	add    BYTE PTR [rax],al
   140047b73:	add    BYTE PTR [rcx],al
   140047b75:	add    BYTE PTR [rax],al
   140047b77:	add    BYTE PTR [rbx+rdi*2+0x4],bh
   140047b7b:	add    BYTE PTR [rax+0x0],al
	...
   140047b86:	add    BYTE PTR [rax],al
   140047b88:	jrcxz  0x140047b9a
   140047b8a:	add    eax,DWORD PTR [rax]
   140047b8c:	cmp    BYTE PTR [rax],al
   140047b8e:	add    BYTE PTR [rax],al
   140047b90:	enter  0x237,0x0
   140047b94:	(bad)  
   140047b95:	(bad)  
   140047b96:	(bad)  
   140047b97:	(bad)  
   140047b98:	(bad)  
   140047b99:	(bad)  
   140047b9a:	add    al,BYTE PTR [rax]
   140047b9c:	add    BYTE PTR [rax],al
   140047b9e:	add    BYTE PTR [rax],al
   140047ba0:	add    bh,BYTE PTR [rax]
   140047ba2:	add    al,BYTE PTR [rax]
   140047ba4:	(bad)  
   140047ba5:	(bad)  
   140047ba6:	(bad)  
   140047ba7:	jmp    rbx
   140047ba9:	adc    BYTE PTR [rbx],al
   140047bab:	add    BYTE PTR [rax],al
   140047bad:	add    BYTE PTR [rax],al
   140047baf:	add    al,dh
   140047bb1:	adc    BYTE PTR [rbx],al
   140047bb3:	add    BYTE PTR [rcx],al
   140047bb5:	add    BYTE PTR [rax],al
   140047bb7:	add    BYTE PTR [rcx],bl
   140047bb9:	or     al,BYTE PTR [rdx]
   140047bbb:	add    BYTE PTR [rdx],cl
   140047bbd:	xor    al,BYTE PTR [rsi]
   140047bbf:	push   rax
   140047bc0:	out    0xe2,al
   140047bc2:	add    al,BYTE PTR [rax]
   140047bc4:	shr    bl,0x3
   140047bc7:	add    BYTE PTR [rcx],bl
   140047bc9:	sbb    BYTE PTR [rsi],al
   140047bcb:	add    BYTE PTR [rax],bl
   140047bcd:	fs or  eax,0xc341400
   140047bd3:	add    BYTE PTR [rax],cl
   140047bd5:	xchg   edx,eax
   140047bd6:	add    al,0x70
   140047bd8:	out    0xe2,al
   140047bda:	add    al,BYTE PTR [rax]
   140047bdc:	cwde   
   140047bdd:	jmp    0x140047be2
	...
   140047be7:	add    BYTE PTR [rcx],al
   140047be9:	add    BYTE PTR [rax],al
   140047beb:	add    BYTE PTR [rcx],al
   140047bed:	add    BYTE PTR [rax],al
   140047bef:	add    ah,dh
   140047bf1:	jnp    0x140047bf7
   140047bf3:	add    BYTE PTR [rax+0x0],al
	...
   140047bfe:	add    BYTE PTR [rax],al
   140047c00:	or     DWORD PTR [rcx],edx
   140047c02:	add    eax,DWORD PTR [rax]
   140047c04:	rex.W add BYTE PTR [rax],al
   140047c07:	add    BYTE PTR [rax],dl
   140047c09:	cmp    BYTE PTR [rdx],al
   140047c0b:	add    bh,bh
   140047c0d:	(bad)  
   140047c0e:	(bad)  
   140047c0f:	push   QWORD PTR [rcx]
   140047c11:	cmp    BYTE PTR [rdx],al
   140047c13:	add    BYTE PTR [rax],al
   140047c15:	add    BYTE PTR [rax],al
   140047c17:	add    ah,dh
   140047c19:	cmp    DWORD PTR [rdx],eax
   140047c1b:	add    bh,bh
   140047c1d:	(bad)  
   140047c1e:	(bad)  
   140047c1f:	call   FWORD PTR [rdx]
   140047c21:	cmp    al,BYTE PTR [rdx]
   140047c23:	add    BYTE PTR [rax],al
   140047c25:	add    BYTE PTR [rax],al
   140047c27:	add    BYTE PTR [rsi],dl
   140047c29:	adc    DWORD PTR [rbx],eax
   140047c2b:	add    BYTE PTR [rcx],al
   140047c2d:	add    BYTE PTR [rax],al
   140047c2f:	add    BYTE PTR [rcx],bl
   140047c31:	or     al,BYTE PTR [rdx]
   140047c33:	add    BYTE PTR [rdx],cl
   140047c35:	push   rdx
   140047c36:	(bad)  
   140047c37:	push   rax
   140047c38:	out    0xe2,al
   140047c3a:	add    al,BYTE PTR [rax]
   140047c3c:	cwde   
   140047c3d:	jmp    0x140047c42
   140047c3f:	add    BYTE PTR [rcx],bl
   140047c41:	lar    eax,WORD PTR [rax]
   140047c44:	(bad)  
   140047c45:	push   rdx
   140047c46:	add    dh,BYTE PTR [rax]
   140047c48:	out    0xe2,al
   140047c4a:	add    al,BYTE PTR [rax]
   140047c4c:	jo     0x140047c39
   140047c4e:	add    eax,DWORD PTR [rax]
	...
   140047c58:	add    DWORD PTR [rax],eax
   140047c5a:	add    BYTE PTR [rax],al
   140047c5c:	add    DWORD PTR [rax],eax
   140047c5e:	add    BYTE PTR [rax],al
   140047c60:	fs jl  0x140047c67
   140047c63:	add    BYTE PTR [rax+0x0],al
	...
   140047c6e:	add    BYTE PTR [rax],al
   140047c70:	xor    dl,BYTE PTR [rcx]
   140047c72:	add    eax,DWORD PTR [rax]
   140047c74:	cmp    BYTE PTR [rax],al
   140047c76:	add    BYTE PTR [rax],al
   140047c78:	xor    al,0x3a
   140047c7a:	add    al,BYTE PTR [rax]
   140047c7c:	(bad)  
   140047c7d:	(bad)  
   140047c7e:	(bad)  
   140047c7f:	call   FWORD PTR [rax+0x3a]
   140047c82:	add    al,BYTE PTR [rax]
   140047c84:	add    BYTE PTR [rax],al
   140047c86:	add    BYTE PTR [rax],al
   140047c88:	jns    0x140047cc4
   140047c8a:	add    al,BYTE PTR [rax]
   140047c8c:	(bad)  
   140047c8d:	(bad)  
   140047c8e:	(bad)  
   140047c8f:	push   QWORD PTR [rdx]
   140047c91:	adc    DWORD PTR [rbx],eax
   140047c93:	add    BYTE PTR [rax],al
   140047c95:	add    BYTE PTR [rax],al
   140047c97:	add    BYTE PTR [rdi],bh
   140047c99:	adc    DWORD PTR [rbx],eax
   140047c9b:	add    BYTE PTR [rcx],al
   140047c9d:	add    BYTE PTR [rax],al
   140047c9f:	add    BYTE PTR [rcx],bl
   140047ca1:	or     al,BYTE PTR [rdx]
   140047ca3:	add    BYTE PTR [rdx],cl
   140047ca5:	xor    al,BYTE PTR [rsi]
   140047ca7:	push   rax
   140047ca8:	out    0xe2,al
   140047caa:	add    al,BYTE PTR [rax]
   140047cac:	jo     0x140047c99
   140047cae:	add    eax,DWORD PTR [rax]
   140047cb0:	sbb    DWORD PTR [rsp+rax*1],edx
   140047cb3:	add    BYTE PTR [rsp+rsi*1],dl
   140047cb6:	or     eax,DWORD PTR [rax]
   140047cb8:	(bad)  
   140047cb9:	jb     0x140047cbd
   140047cbb:	jo     0x140047ca3
   140047cbd:	loop   0x140047cc1
   140047cbf:	add    BYTE PTR [rax-0x15],cl
   140047cc2:	add    eax,DWORD PTR [rax]
	...
   140047ccc:	add    DWORD PTR [rax],eax
   140047cce:	add    BYTE PTR [rax],al
   140047cd0:	add    DWORD PTR [rax],eax
   140047cd2:	add    BYTE PTR [rax],al
   140047cd4:	fdivr  DWORD PTR [rsp+rax*1+0x0]
   140047cd8:	add    BYTE PTR [rax],al
	...
   140047ce3:	add    BYTE PTR [rax+0x11],bl
   140047ce6:	add    eax,DWORD PTR [rax]
   140047ce8:	rex.W add BYTE PTR [rax],al
   140047ceb:	add    BYTE PTR [rax],al
   140047ced:	add    BYTE PTR [rax],al
   140047cef:	add    BYTE PTR [rdi*1-0xfffe],cl
   140047cf6:	(bad)  
   140047cf7:	jmp    QWORD PTR [rsi]
   140047cf9:	cmp    eax,0x2
   140047cfe:	add    BYTE PTR [rax],al
   140047d00:	adc    DWORD PTR gs:[rbx],eax
   140047d03:	add    BYTE PTR [rcx],al
   140047d05:	add    BYTE PTR [rax],al
   140047d07:	add    BYTE PTR [rcx],bl
   140047d09:	or     al,BYTE PTR [rdx]
   140047d0b:	add    BYTE PTR [rdx],cl
   140047d0d:	push   rdx
   140047d0e:	(bad)  
   140047d0f:	push   rax
   140047d10:	out    0xe2,al
   140047d12:	add    al,BYTE PTR [rax]
   140047d14:	rex.W jmp 0x140047d1a
   140047d17:	add    BYTE PTR [rcx],al
   140047d19:	adc    al,BYTE PTR [rip+0xe421200]        # 0x14e468f1f
   140047d1f:	jo     0x140047d2e
   140047d21:	(bad)  
   140047d22:	or     al,0x50
   140047d24:	or     esi,DWORD PTR [rax]
   140047d26:	add    BYTE PTR [rax],al
   140047d28:	add    DWORD PTR [rip+0x42150009],edx        # 0x182197d37
   140047d2e:	adc    eax,esi
   140047d30:	pavgb  mm1,QWORD PTR [rip+0x9c00bd0]        # 0x149c48907
   140047d37:	jo     0x140047d41
   140047d39:	(bad)  
   140047d3a:	(bad)  
   140047d3b:	push   rax
   140047d3c:	(bad)  
   140047d3d:	xor    BYTE PTR [rax],al
   140047d3f:	add    BYTE PTR [rcx],al
   140047d41:	and    ecx,DWORD PTR [rax+rax*1]
   140047d44:	and    esi,DWORD PTR [rbp+rdx*1+0x0]
   140047d48:	and    esp,DWORD PTR [rsp+rdx*1+0x0]
   140047d4c:	and    esi,DWORD PTR [rdx+rdx*1]
   140047d4f:	add    BYTE PTR [rbx],ah
   140047d51:	mov    dl,0x1c
   140047d53:	lock sbb ah,al
   140047d56:	sbb    al,dl
   140047d58:	(bad)  
   140047d59:	rcl    BYTE PTR [rax+rdx*2],0x1
   140047d5d:	(bad)  
   140047d5e:	add    DWORD PTR [rax],eax
   140047d60:	(bad)  
   140047d61:	movabs ds:0x7415000815010000,al
   140047d6a:	lldt   WORD PTR [rip+0x15000e64]        # 0x155048bd5
   140047d71:	xor    al,0xc
   140047d73:	add    BYTE PTR [rip+0x9e01192],dl        # 0x149e48f0b
   140047d79:	add    al,0x1
   140047d7b:	add    BYTE PTR [rdx+rax*4],al
   140047d7e:	add    BYTE PTR [rax],al
   140047d80:	(bad)  
   140047d81:	out    0x2,al
   140047d83:	add    BYTE PTR [rcx],al
   140047d85:	add    BYTE PTR [rax],al
   140047d87:	add    BYTE PTR [rax+rcx*2+0x48b60002],ch
   140047d8e:	add    al,BYTE PTR [rax]
   140047d90:	jle    0x140047da3
   140047d92:	add    eax,DWORD PTR [rax]
   140047d94:	mov    dh,0x48
   140047d96:	add    al,BYTE PTR [rax]
   140047d98:	add    DWORD PTR [rsi],eax
   140047d9a:	add    al,BYTE PTR [rax]
   140047d9c:	(bad)  
   140047d9d:	jb     0x140047da1
   140047d9f:	push   rax
   140047da0:	or     DWORD PTR [rcx+rax*1],eax
   140047da3:	add    BYTE PTR [rdx+rax*4],al
   140047da6:	add    BYTE PTR [rax],al
   140047da8:	(bad)  
   140047da9:	out    0x2,al
   140047dab:	add    BYTE PTR [rcx],al
   140047dad:	add    BYTE PTR [rax],al
   140047daf:	add    BYTE PTR [rcx+rcx*2],cl
   140047db2:	add    al,BYTE PTR [rax]
   140047db4:	(bad)  
   140047db5:	rex.WB add al,BYTE PTR [r8]
   140047db8:	jle    0x140047dcb
   140047dba:	add    eax,DWORD PTR [rax]
   140047dbc:	(bad)  
   140047dbd:	rex.WB add al,BYTE PTR [r8]
   140047dc0:	or     DWORD PTR [rcx+rax*1],eax
   140047dc3:	add    BYTE PTR [rdx+rax*4],al
   140047dc6:	add    BYTE PTR [rax],al
   140047dc8:	(bad)  
   140047dc9:	out    0x2,al
   140047dcb:	add    BYTE PTR [rcx],al
   140047dcd:	add    BYTE PTR [rax],al
   140047dcf:	add    BYTE PTR [rcx+rcx*2+0x2],ch
   140047dd3:	add    BYTE PTR [rdi+0x49],dh
   140047dd6:	add    al,BYTE PTR [rax]
   140047dd8:	jle    0x140047deb
   140047dda:	add    eax,DWORD PTR [rax]
   140047ddc:	ja     0x140047e27
   140047dde:	add    al,BYTE PTR [rax]
   140047de0:	or     DWORD PTR [rcx+rax*1],eax
   140047de3:	add    BYTE PTR [rdx+rax*4],al
   140047de6:	add    BYTE PTR [rax],al
   140047de8:	(bad)  
   140047de9:	out    0x2,al
   140047deb:	add    BYTE PTR [rcx],al
   140047ded:	add    BYTE PTR [rax],al
   140047def:	add    ah,cl
   140047df1:	rex.WB add al,BYTE PTR [r8]
   140047df4:	(bad)  
   140047df5:	rex.WB add al,BYTE PTR [r8]
   140047df8:	jle    0x140047e0b
   140047dfa:	add    eax,DWORD PTR [rax]
   140047dfc:	(bad)  
   140047dfd:	rex.WB add al,BYTE PTR [r8]
   140047e00:	or     DWORD PTR [rcx+rax*1],eax
   140047e03:	add    BYTE PTR [rdx+rax*4],al
   140047e06:	add    BYTE PTR [rax],al
   140047e08:	(bad)  
   140047e09:	out    0x2,al
   140047e0b:	add    BYTE PTR [rcx],al
   140047e0d:	add    BYTE PTR [rax],al
   140047e0f:	add    BYTE PTR [rdx+rcx*2],ch
   140047e12:	add    al,BYTE PTR [rax]
   140047e14:	(bad)  
   140047e15:	rex.WX add al,BYTE PTR [rax]
   140047e18:	jle    0x140047e2b
   140047e1a:	add    eax,DWORD PTR [rax]
   140047e1c:	(bad)  
   140047e1d:	rex.WX add al,BYTE PTR [rax]
   140047e20:	or     DWORD PTR [rcx+rax*1],eax
   140047e23:	add    BYTE PTR [rdx+rax*4],al
   140047e26:	add    BYTE PTR [rax],al
   140047e28:	(bad)  
   140047e29:	out    0x2,al
   140047e2b:	add    BYTE PTR [rcx],al
   140047e2d:	add    BYTE PTR [rax],al
   140047e2f:	add    BYTE PTR [rdx+rcx*2+0x4a960002],cl
   140047e36:	add    al,BYTE PTR [rax]
   140047e38:	jle    0x140047e4b
   140047e3a:	add    eax,DWORD PTR [rax]
   140047e3c:	xchg   esi,eax
   140047e3d:	rex.WX add al,BYTE PTR [rax]
   140047e40:	or     DWORD PTR [rcx+rax*1],eax
   140047e43:	add    BYTE PTR [rdx+rax*4],al
   140047e46:	add    BYTE PTR [rax],al
   140047e48:	(bad)  
   140047e49:	out    0x2,al
   140047e4b:	add    BYTE PTR [rcx],al
   140047e4d:	add    BYTE PTR [rax],al
   140047e4f:	add    ah,ch
   140047e51:	rex.WX add al,BYTE PTR [rax]
   140047e54:	cmc    
   140047e55:	rex.WX add al,BYTE PTR [rax]
   140047e58:	jle    0x140047e6b
   140047e5a:	add    eax,DWORD PTR [rax]
   140047e5c:	cmc    
   140047e5d:	rex.WX add al,BYTE PTR [rax]
   140047e60:	or     DWORD PTR [rcx+rax*1],eax
   140047e63:	add    BYTE PTR [rdx+rax*4],al
   140047e66:	add    BYTE PTR [rax],al
   140047e68:	(bad)  
   140047e69:	out    0x2,al
   140047e6b:	add    BYTE PTR [rcx],al
   140047e6d:	add    BYTE PTR [rax],al
   140047e6f:	add    BYTE PTR [rbx+rcx*2+0x2],cl
   140047e73:	add    BYTE PTR [rbp+0x4b],dl
   140047e76:	add    al,BYTE PTR [rax]
   140047e78:	jle    0x140047e8b
   140047e7a:	add    eax,DWORD PTR [rax]
   140047e7c:	push   rbp
   140047e7d:	rex.WXB add al,BYTE PTR [r8]
   140047e80:	or     DWORD PTR [rcx+rax*1],eax
   140047e83:	add    BYTE PTR [rdx+rax*4],al
   140047e86:	add    BYTE PTR [rax],al
   140047e88:	(bad)  
   140047e89:	out    0x2,al
   140047e8b:	add    BYTE PTR [rcx],al
   140047e8d:	add    BYTE PTR [rax],al
   140047e8f:	add    BYTE PTR [rbx+rcx*2+0x4bb50002],ch
   140047e96:	add    al,BYTE PTR [rax]
   140047e98:	jle    0x140047eab
   140047e9a:	add    eax,DWORD PTR [rax]
   140047e9c:	mov    ch,0x4b
   140047e9e:	add    al,BYTE PTR [rax]
   140047ea0:	or     DWORD PTR [rcx+rax*1],eax
   140047ea3:	add    BYTE PTR [rdx+rax*4],al
   140047ea6:	add    BYTE PTR [rax],al
   140047ea8:	(bad)  
   140047ea9:	out    0x2,al
   140047eab:	add    BYTE PTR [rcx],al
   140047ead:	add    BYTE PTR [rax],al
   140047eaf:	add    BYTE PTR [rsp+rcx*2],cl
   140047eb2:	add    al,BYTE PTR [rax]
   140047eb4:	adc    eax,0x7e00024c
   140047eb9:	adc    DWORD PTR [rbx],eax
   140047ebb:	add    BYTE PTR [rip+0x900024c],dl        # 0x14904810d
   140047ec1:	add    al,0x1
   140047ec3:	add    BYTE PTR [rdx+rax*4],al
   140047ec6:	add    BYTE PTR [rax],al
   140047ec8:	(bad)  
   140047ec9:	out    0x2,al
   140047ecb:	add    BYTE PTR [rcx],al
   140047ecd:	add    BYTE PTR [rax],al
   140047ecf:	add    BYTE PTR [rsp+rcx*2+0x2],ch
   140047ed3:	add    BYTE PTR [rsi+0x4c],dh
   140047ed6:	add    al,BYTE PTR [rax]
   140047ed8:	jle    0x140047eeb
   140047eda:	add    eax,DWORD PTR [rax]
   140047edc:	jbe    0x140047f2a
   140047ede:	add    al,BYTE PTR [rax]
   140047ee0:	or     DWORD PTR [rcx+rax*1],eax
   140047ee3:	add    BYTE PTR [rdx+rax*4],al
   140047ee6:	add    BYTE PTR [rax],al
   140047ee8:	(bad)  
   140047ee9:	out    0x2,al
   140047eeb:	add    BYTE PTR [rcx],al
   140047eed:	add    BYTE PTR [rax],al
   140047eef:	add    ah,cl
   140047ef1:	rex.WR add r8b,BYTE PTR [rax]
   140047ef4:	(bad)  
   140047ef5:	rex.WR add r8b,BYTE PTR [rax]
   140047ef8:	jle    0x140047f0b
   140047efa:	add    eax,DWORD PTR [rax]
   140047efc:	(bad)  
   140047efd:	rex.WR add r8b,BYTE PTR [rax]
   140047f00:	or     DWORD PTR [rcx+rax*1],eax
   140047f03:	add    BYTE PTR [rdx+rax*4],al
   140047f06:	add    BYTE PTR [rax],al
   140047f08:	(bad)  
   140047f09:	out    0x2,al
   140047f0b:	add    BYTE PTR [rcx],al
   140047f0d:	add    BYTE PTR [rax],al
   140047f0f:	add    BYTE PTR [rcx*2+0x4d3b0002],ch
   140047f16:	add    al,BYTE PTR [rax]
   140047f18:	jle    0x140047f2b
   140047f1a:	add    eax,DWORD PTR [rax]
   140047f1c:	cmp    ecx,DWORD PTR [rbp+0x2]
   140047f1f:	add    BYTE PTR [rcx],bl
   140047f21:	(bad)  
   140047f22:	add    eax,0x32340d00
   140047f27:	add    BYTE PTR [rip+0x6003001],cl        # 0x14604af2e
   140047f2d:	jo     0x140047f2f
   140047f2f:	add    BYTE PTR [rax],ch
   140047f31:	out    0x2,eax
   140047f33:	add    BYTE PTR [rax+0x1],dh
   140047f36:	add    BYTE PTR [rax],al
   140047f38:	add    DWORD PTR [rdi],ecx
   140047f3a:	(bad)  
   140047f3b:	add    BYTE PTR [rdi],cl
   140047f3d:	je     0x140047f42
   140047f3f:	add    BYTE PTR [rdx],cl
   140047f41:	add    al,BYTE PTR fs:[rax]
   140047f44:	add    eax,0x1000134
   140047f49:	clts   
   140047f4b:	add    BYTE PTR [rdi],cl
   140047f4d:	fs (bad) 
   140047f4f:	add    BYTE PTR [rdi],cl
   140047f51:	xor    al,0xc
   140047f53:	add    BYTE PTR [rdi],cl
   140047f55:	xchg   edx,eax
   140047f56:	or     esi,DWORD PTR [rax+0x1]
   140047f59:	or     BYTE PTR [rcx],al
   140047f5b:	add    BYTE PTR [rax],cl
   140047f5d:	movabs ds:0x920a00020a010000,al
   140047f66:	(bad)  
   140047f67:	xor    BYTE PTR [rcx],al
   140047f69:	adc    eax,0x74150008
   140047f6e:	lldt   WORD PTR [rip+0x15000e64]        # 0x155048dd9
   140047f75:	xor    al,0xc
   140047f77:	add    BYTE PTR [rip+0x1c01192],dl        # 0x141c4910f
   140047f7d:	sbb    al,0xa
   140047f7f:	add    BYTE PTR [rsp+riz*2],bl
   140047f82:	adc    DWORD PTR [rax],eax
   140047f84:	sbb    al,0x54
   140047f86:	ltr    WORD PTR [rsp+rsi*1]
   140047f8a:	(bad)  
   140047f8b:	add    BYTE PTR [rdx+rdx*4],bl
   140047f8e:	sbb    al,ah
   140047f90:	(bad)  
   140047f91:	rcl    BYTE PTR [rax+rsi*2],1
   140047f94:	add    DWORD PTR [rax],edx
   140047f96:	(bad)  
   140047f97:	add    BYTE PTR [rax],dl
   140047f99:	adc    DWORD PTR fs:[rax],eax
   140047f9c:	adc    BYTE PTR [rax+rdx*1],dh
   140047f9f:	add    BYTE PTR [rax],dl
   140047fa1:	mov    dl,0xc
   140047fa3:	jo     0x140047fa6
   140047fa5:	(bad)  
   140047fa6:	or     BYTE PTR [rax],al
   140047fa8:	(bad)  
   140047fa9:	push   rsp
   140047faa:	or     eax,0xc341700
   140047faf:	add    BYTE PTR [rdi],dl
   140047fb1:	jb     0x140047fc6
   140047fb3:	loopne 0x140047fc6
   140047fb5:	jo     0x140047fc7
   140047fb7:	(bad)  
   140047fb8:	sbb    DWORD PTR [rdi],ebp
   140047fba:	or     DWORD PTR [rax],eax
   140047fbc:	sbb    eax,0x11001834
   140047fc1:	add    DWORD PTR [rdx],edx
   140047fc3:	add    BYTE PTR [rdx],cl
   140047fc5:	lock or al,ah
   140047fc8:	(bad)  
   140047fc9:	jo     0x140047fd0
   140047fcb:	(bad)  
   140047fcc:	add    al,0x50
   140047fce:	add    BYTE PTR [rax],al
   140047fd0:	int3   
   140047fd1:	out    0x2,eax
   140047fd3:	add    BYTE PTR [rax-0x13],dl
   140047fd6:	add    eax,DWORD PTR [rax]
   140047fd8:	(bad)  
   140047fd9:	add    BYTE PTR [rax],al
   140047fdb:	add    bh,bh
   140047fdd:	(bad)  
   140047fde:	(bad)  
   140047fdf:	jmp    QWORD PTR [rcx+rdx*1+0x3]
   140047fe6:	add    BYTE PTR [rax],al
   140047fe8:	mov    al,0x11
   140047fea:	add    eax,DWORD PTR [rax]
   140047fec:	add    DWORD PTR [rax],eax
   140047fee:	add    BYTE PTR [rax],al
   140047ff0:	mov    esp,0x311
	...
   140048001:	movsxd eax,DWORD PTR [rdx]
   140048003:	add    bh,bh
   140048005:	(bad)  
   140048006:	(bad)  
   140048007:	push   QWORD PTR [rbx+0x263]
   14004800d:	add    BYTE PTR [rax],al
   14004800f:	add    BYTE PTR [rbx+riz*2+0x10002],bh
   140048016:	add    BYTE PTR [rax],al
   140048018:	and    BYTE PTR [rdx+rax*1+0x0],ah
   14004801c:	add    al,BYTE PTR [rax]
   14004801e:	add    BYTE PTR [rax],al
   140048020:	cs add al,BYTE PTR fs:[rax]
   140048024:	add    DWORD PTR [rax],eax
   140048026:	add    BYTE PTR [rax],al
   140048028:	rex.RB
   140048029:	add    al,BYTE PTR fs:[rax]
   14004802c:	add    al,BYTE PTR [rax]
   14004802e:	add    BYTE PTR [rax],al
   140048030:	rex.WB
   140048031:	add    al,BYTE PTR fs:[rax]
   140048034:	add    DWORD PTR [rax],eax
   140048036:	add    BYTE PTR [rax],al
   140048038:	sbb    al,0x65
   14004803a:	add    al,BYTE PTR [rax]
   14004803c:	add    BYTE PTR [rax],al
   14004803e:	add    BYTE PTR [rax],al
   140048040:	and    eax,0xff000265
   140048045:	(bad)  
   140048046:	(bad)  
   140048047:	call   FWORD PTR [rcx]
   140048049:	or     DWORD PTR cs:[rax],eax
   14004804c:	sbb    BYTE PTR [rcx],al
   14004804e:	and    BYTE PTR [rax],al
   140048050:	or     al,0xf0
   140048052:	or     ah,al
   140048054:	or     al,dl
   140048056:	(bad)  
   140048057:	rol    BYTE PTR [rax+rsi*2],0x3
   14004805b:	xor    BYTE PTR [rdx],al
   14004805d:	push   rax
   14004805e:	add    BYTE PTR [rax],al
   140048060:	int3   
   140048061:	out    0x2,eax
   140048063:	add    BYTE PTR [rax],ch
   140048065:	in     eax,dx
   140048066:	add    eax,DWORD PTR [rax]
   140048068:	repnz add BYTE PTR [rax],al
   14004806b:	add    bh,bh
   14004806d:	(bad)  
   14004806e:	(bad)  
   14004806f:	dec    esi
   140048071:	adc    DWORD PTR [rbx],eax
   140048073:	add    BYTE PTR [rax],al
   140048075:	add    BYTE PTR [rax],al
   140048077:	add    dl,bl
   140048079:	adc    DWORD PTR [rbx],eax
   14004807b:	add    BYTE PTR [rcx],al
   14004807d:	add    BYTE PTR [rax],al
   14004807f:	add    dh,ah
   140048081:	adc    DWORD PTR [rbx],eax
   140048083:	add    BYTE PTR [rdx],al
   140048085:	add    BYTE PTR [rax],al
   140048087:	add    dl,dh
   140048089:	adc    DWORD PTR [rbx],eax
   14004808b:	add    BYTE PTR [rbx],al
   14004808d:	add    BYTE PTR [rax],al
   14004808f:	add    dh,bh
   140048091:	adc    DWORD PTR [rbx],eax
   140048093:	add    BYTE PTR [rax+rax*1],al
   140048096:	add    BYTE PTR [rax],al
   140048098:	or     dl,BYTE PTR [rdx]
   14004809a:	add    eax,DWORD PTR [rax]
   14004809c:	add    eax,0x16000000
   1400480a1:	adc    al,BYTE PTR [rbx]
	...
   1400480af:	add    BYTE PTR [rsi+riz*2],ah
   1400480b2:	add    al,BYTE PTR [rax]
   1400480b4:	(bad)  
   1400480b5:	(bad)  
   1400480b6:	(bad)  
   1400480b7:	(bad)  
   1400480b8:	mov    ebp,0x266
   1400480bd:	add    BYTE PTR [rax],al
   1400480bf:	add    cl,al
   1400480c1:	data16 add al,BYTE PTR [rax]
   1400480c4:	add    DWORD PTR [rax],eax
   1400480c6:	add    BYTE PTR [rax],al
   1400480c8:	popf   
   1400480c9:	add    al,BYTE PTR [eax]
   1400480cc:	add    al,BYTE PTR [rax]
   1400480ce:	add    BYTE PTR [rax],al
   1400480d0:	(bad)  
   1400480d1:	push   0x30002
   1400480d6:	add    BYTE PTR [rax],al
   1400480d8:	jle    0x140048145
   1400480da:	add    al,BYTE PTR [rax]
   1400480dc:	add    al,0x0
   1400480de:	add    BYTE PTR [rax],al
   1400480e0:	(bad)  
   1400480e1:	imul   eax,DWORD PTR [rdx],0x0
   1400480e4:	add    eax,0x6d000000
   1400480e9:	ins    DWORD PTR es:[rdi],dx
   1400480ea:	add    al,BYTE PTR [rax]
   1400480ec:	(bad)  
   1400480ed:	add    BYTE PTR [rax],al
   1400480ef:	add    BYTE PTR [rsi+0x500026e],al
   1400480f5:	add    BYTE PTR [rax],al
   1400480f7:	add    bl,ah
   1400480f9:	outs   dx,BYTE PTR ds:[rsi]
   1400480fa:	add    al,BYTE PTR [rax]
   1400480fc:	add    al,0x0
   1400480fe:	add    BYTE PTR [rax],al
   140048100:	out    dx,al
   140048101:	outs   dx,BYTE PTR ds:[rsi]
   140048102:	add    al,BYTE PTR [rax]
   140048104:	add    eax,DWORD PTR [rax]
   140048106:	add    BYTE PTR [rax],al
   140048108:	stc    
   140048109:	outs   dx,BYTE PTR ds:[rsi]
   14004810a:	add    al,BYTE PTR [rax]
   14004810c:	add    al,BYTE PTR [rax]
   14004810e:	add    BYTE PTR [rax],al
   140048110:	add    al,0x6f
   140048112:	add    al,BYTE PTR [rax]
   140048114:	add    DWORD PTR [rax],eax
   140048116:	add    BYTE PTR [rax],al
   140048118:	movq   mm0,QWORD PTR [rdx]
   14004811b:	add    BYTE PTR [rax],al
   14004811d:	add    BYTE PTR [rax],al
   14004811f:	add    BYTE PTR [rsi],ch
   140048121:	outs   dx,DWORD PTR ds:[rsi]
   140048122:	add    al,BYTE PTR [rax]
   140048124:	(bad)  
   140048125:	(bad)  
   140048126:	(bad)  
   140048127:	call   FWORD PTR [rcx]
   140048129:	(bad)  
   14004812a:	or     BYTE PTR [rax],al
   14004812c:	and    DWORD PTR [rsi+rdx*1+0x0],esp
   140048130:	sbb    eax,0x11001534
   140048135:	repnz (bad) 
   140048137:	loopne 0x14004813e
   140048139:	jo     0x14004813f
   14004813b:	push   rax
   14004813c:	int3   
   14004813d:	out    0x2,eax
   14004813f:	add    BYTE PTR [rax],al
   140048141:	in     eax,dx
   140048142:	add    eax,DWORD PTR [rax]
   140048144:	jp     0x140048146
   140048146:	add    BYTE PTR [rax],al
   140048148:	(bad)  
   140048149:	(bad)  
   14004814a:	(bad)  
   14004814b:	jmp    FWORD PTR [rax]
   14004814d:	adc    al,BYTE PTR [rbx]
   14004814f:	add    BYTE PTR [rax],al
   140048151:	add    BYTE PTR [rax],al
   140048153:	add    BYTE PTR [rdx+rdx*1],dh
   140048156:	add    eax,DWORD PTR [rax]
   140048158:	push   0xffffffffff00026f
   14004815d:	(bad)  
   14004815e:	(bad)  
   14004815f:	call   FWORD PTR [rdi+0x26f]
   140048165:	add    BYTE PTR [rax],al
   140048167:	add    BYTE PTR [rdi+rbp*2+0x10002],ah
   14004816e:	add    BYTE PTR [rax],al
   140048170:	adc    eax,0x270
   140048175:	add    BYTE PTR [rax],al
   140048177:	add    BYTE PTR [rax],al
   140048179:	jno    0x14004817d
   14004817b:	add    bh,bh
   14004817d:	(bad)  
   14004817e:	(bad)  
   14004817f:	call   FWORD PTR [rcx]
   140048181:	and    eax,DWORD PTR [rax+rax*1]
   140048184:	adc    al,0x34
   140048186:	adc    BYTE PTR [rax],al
   140048188:	or     dl,dl
   14004818a:	add    al,0x70
   14004818c:	int3   
   14004818d:	out    0x2,eax
   14004818f:	add    al,bl
   140048191:	in     al,dx
   140048192:	add    eax,DWORD PTR [rax]
   140048194:	push   0x0
   140048196:	add    BYTE PTR [rax],al
   140048198:	(bad)  
   140048199:	(bad)  
   14004819a:	(bad)  
   14004819b:	inc    DWORD PTR [rsi+0x12]
   14004819e:	add    eax,DWORD PTR [rax]
   1400481a0:	(bad)  
   1400481a1:	(bad)  
   1400481a2:	(bad)  
   1400481a3:	call   QWORD PTR [rdx+0x12]
   1400481a6:	add    eax,DWORD PTR [rax]
   1400481a8:	xor    al,0x71
   1400481aa:	add    al,BYTE PTR [rax]
   1400481ac:	(bad)  
   1400481ad:	(bad)  
   1400481ae:	(bad)  
   1400481af:	call   rax
   1400481b1:	jno    0x1400481b5
   1400481b3:	add    BYTE PTR [rax],al
   1400481b5:	add    BYTE PTR [rax],al
   1400481b7:	add    bh,dh
   1400481b9:	jno    0x1400481bd
   1400481bb:	add    bh,bh
   1400481bd:	(bad)  
   1400481be:	(bad)  
   1400481bf:	(bad)  
   1400481c0:	cld    
   1400481c1:	jno    0x1400481c5
   1400481c3:	add    BYTE PTR [rcx],al
   1400481c5:	add    BYTE PTR [rax],al
   1400481c7:	add    BYTE PTR [rdi],cl
   1400481c9:	jb     0x1400481cd
   1400481cb:	add    bh,bh
   1400481cd:	(bad)  
   1400481ce:	(bad)  
   1400481cf:	call   FWORD PTR [rcx]
   1400481d1:	and    BYTE PTR [rax+rax*1],al
   1400481d4:	or     dl,dl
   1400481d6:	add    al,0x70
   1400481d8:	add    esp,DWORD PTR [rax+0x2]
   1400481db:	xor    ah,cl
   1400481dd:	out    0x2,eax
   1400481df:	add    BYTE PTR [rax+0x6a0003ec],dh
   1400481e5:	add    BYTE PTR [rax],al
   1400481e7:	add    bh,bh
   1400481e9:	(bad)  
   1400481ea:	(bad)  
   1400481eb:	jmp    QWORD PTR [rdx+rdx*1+0x3]
   1400481ef:	add    BYTE PTR [rdx+rsi*2],bh
   1400481f2:	add    al,BYTE PTR [rax]
   1400481f4:	(bad)  
   1400481f5:	(bad)  
   1400481f6:	(bad)  
   1400481f7:	inc    DWORD PTR [rsi+0x272]
   1400481fd:	add    BYTE PTR [rax],al
   1400481ff:	add    BYTE PTR [rbx+rsi*2-0xfffe],dl
   140048206:	(bad)  
   140048207:	inc    DWORD PTR [rcx]
   140048209:	(bad)  
   14004820a:	or     BYTE PTR [rax],al
   14004820c:	(bad)  
   14004820d:	xor    al,0x13
   14004820f:	add    BYTE PTR [rsi],bl
   140048211:	mov    dl,0x17
   140048213:	lock adc eax,0x11c013e0
   140048219:	jo     0x14004822b
   14004821b:	push   rax
   14004821c:	sbb    DWORD PTR [rcx],ebx
   14004821e:	(bad)  
   14004821f:	add    BYTE PTR [rax],dl
   140048221:	push   rdx
   140048222:	or     al,0xf0
   140048224:	or     ah,al
   140048226:	or     BYTE PTR [rax+0x7],dh
   140048229:	(bad)  
   14004822a:	(bad)  
   14004822b:	xor    dh,ah
   14004822d:	loop   0x140048231
   14004822f:	add    BYTE PTR [rax+0x3ec],cl
   140048235:	add    BYTE PTR [rax],al
   140048237:	add    BYTE PTR [rax],al
   140048239:	add    BYTE PTR [rax],al
   14004823b:	add    BYTE PTR [rcx],al
   14004823d:	add    BYTE PTR [rax],al
   14004823f:	add    BYTE PTR [rcx],al
   140048241:	add    BYTE PTR [rax],al
   140048243:	add    BYTE PTR [rax-0x7e],cl
   140048246:	add    al,0x0
   140048248:	add    BYTE PTR [rax],al
	...
   140048253:	add    BYTE PTR [rsi+0x12],dh
   140048256:	add    eax,DWORD PTR [rax]
   140048258:	cmp    BYTE PTR [rax],al
   14004825a:	add    BYTE PTR [rax],al
   14004825c:	add    BYTE PTR [rax],al
   14004825e:	add    BYTE PTR [rax],al
   140048260:	(bad)  
   140048261:	js     0x140048265
   140048263:	add    bh,bh
   140048265:	(bad)  
   140048266:	(bad)  
   140048267:	inc    DWORD PTR [rdx]
   140048269:	jns    0x14004826d
   14004826b:	add    BYTE PTR [rax],al
   14004826d:	add    BYTE PTR [rax],al
   14004826f:	add    BYTE PTR [rbx+0x79],cl
   140048272:	add    al,BYTE PTR [rax]
   140048274:	(bad)  
   140048275:	(bad)  
   140048276:	(bad)  
   140048277:	push   QWORD PTR [rsi+0x12]
   14004827a:	add    eax,DWORD PTR [rax]
   14004827c:	add    BYTE PTR [rax],al
   14004827e:	add    BYTE PTR [rax],al
   140048280:	sbb    DWORD PTR [rdx],ecx
   140048282:	add    al,BYTE PTR [rax]
   140048284:	or     dh,BYTE PTR [rdx]
   140048286:	(bad)  
   140048287:	push   rax
   140048288:	out    0xe2,al
   14004828a:	add    al,BYTE PTR [rax]
   14004828c:	mov    ah,ch
   14004828e:	add    eax,DWORD PTR [rax]
   140048290:	sbb    DWORD PTR [rbx],ebx
   140048292:	(bad)  
   140048293:	add    BYTE PTR [rbx],bl
   140048295:	xor    al,0xc
   140048297:	add    BYTE PTR [rip+0x7e00952],cl        # 0x147e48bef
   14004829d:	jo     0x1400482a5
   14004829f:	(bad)  
   1400482a0:	out    0xe2,al
   1400482a2:	add    al,BYTE PTR [rax]
   1400482a4:	(bad)  
   1400482a5:	in     al,dx
   1400482a6:	add    eax,DWORD PTR [rax]
   1400482a8:	(bad)  
   1400482a9:	(bad)  
   1400482aa:	(bad)  
   1400482ab:	call   QWORD PTR [rdi+0x312]
	...
   1400482bd:	add    BYTE PTR [rax],al
   1400482bf:	add    BYTE PTR [rcx],al
   1400482c1:	add    BYTE PTR [rax],al
   1400482c3:	add    BYTE PTR [rcx],al
   1400482c5:	add    BYTE PTR [rax],al
   1400482c7:	add    BYTE PTR [rdx],al
   1400482c9:	add    BYTE PTR [rax],al
   1400482cb:	add    BYTE PTR [rcx],al
   1400482cd:	add    BYTE PTR [rax],al
   1400482cf:	add    ah,dl
   1400482d1:	(bad)  
   1400482d2:	add    al,0x0
   1400482d4:	add    BYTE PTR [rax],al
	...
   1400482df:	add    BYTE PTR [rbx+0x38000312],ah
   1400482e5:	add    BYTE PTR [rax],al
   1400482e7:	add    BYTE PTR [rcx+rdi*2-0xfffe],dh
   1400482ee:	(bad)  
   1400482ef:	jmp    rbx
   1400482f1:	jns    0x1400482f5
   1400482f3:	add    BYTE PTR [rcx],al
   1400482f5:	add    BYTE PTR [rax],al
   1400482f7:	add    BYTE PTR [rbx],cl
   1400482f9:	jp     0x1400482fd
   1400482fb:	add    BYTE PTR [rax],al
   1400482fd:	add    BYTE PTR [rax],al
   1400482ff:	add    BYTE PTR [rsi],bl
   140048301:	jp     0x140048305
   140048303:	add    bh,bh
   140048305:	(bad)  
   140048306:	(bad)  
   140048307:	jmp    FWORD PTR [rip+0x27a]        # 0x140048587
   14004830d:	add    BYTE PTR [rax],al
   14004830f:	add    BYTE PTR [rbx+0x7a],ch
   140048312:	add    al,BYTE PTR [rax]
   140048314:	(bad)  
   140048315:	(bad)  
   140048316:	(bad)  
   140048317:	jmp    QWORD PTR [rbx+0x312]
   14004831d:	add    BYTE PTR [rax],al
   14004831f:	add    BYTE PTR [rcx],bl
   140048321:	or     al,BYTE PTR [rdx]
   140048323:	add    BYTE PTR [rdx],cl
   140048325:	xor    al,BYTE PTR [rsi]
   140048327:	push   rax
   140048328:	out    0xe2,al
   14004832a:	add    al,BYTE PTR [rax]
   14004832c:	(bad)  
   14004832d:	in     al,dx
   14004832e:	add    eax,DWORD PTR [rax]
   140048330:	add    DWORD PTR [rax+rcx*1],edx
   140048333:	add    BYTE PTR [rsp+riz*2],dl
   140048336:	or     al,BYTE PTR [rax]
   140048338:	adc    al,0x54
   14004833a:	or     DWORD PTR [rax],eax
   14004833c:	adc    al,0x34
   14004833e:	or     BYTE PTR [rax],al
   140048340:	adc    al,0x52
   140048342:	adc    BYTE PTR [rax+0x19],dh
   140048345:	sbb    eax,0x340f0006
   14004834a:	adc    al,BYTE PTR [rax]
   14004834c:	psrld  mm1,QWORD PTR [rax]
   14004834f:	jo     0x140048358
   140048351:	(bad)  
   140048352:	(bad)  
   140048353:	push   rax
   140048354:	sub    bh,ah
   140048356:	add    al,BYTE PTR [rax]
   140048358:	(bad)  
   140048359:	add    BYTE PTR [rax],al
   14004835b:	add    BYTE PTR [rcx],bl
   14004835d:	lar    eax,WORD PTR [rax]
   140048360:	(bad)  
   140048361:	push   rdx
   140048362:	add    dh,BYTE PTR [rax]
   140048364:	out    0xe2,al
   140048366:	add    al,BYTE PTR [rax]
   140048368:	js     0x140048357
   14004836a:	add    eax,DWORD PTR [rax]
	...
   140048374:	add    DWORD PTR [rax],eax
   140048376:	add    BYTE PTR [rax],al
   140048378:	add    DWORD PTR [rax],eax
   14004837a:	add    BYTE PTR [rax],al
   14004837c:	add    BYTE PTR [rbx+0x90004],0x0
   140048383:	add    BYTE PTR [rax-0x18],dl
   140048386:	add    al,0x0
   140048388:	sub    BYTE PTR [rax],al
   14004838a:	add    BYTE PTR [rax],al
   14004838c:	(bad)  
   14004838d:	adc    al,BYTE PTR [rbx]
   14004838f:	add    BYTE PTR [rax],bh
	...
   14004839d:	add    BYTE PTR [rax],al
   14004839f:	add    BYTE PTR [rdi+rdi*2],al
   1400483a2:	add    al,BYTE PTR [rax]
   1400483a4:	(bad)  
   1400483a5:	(bad)  
   1400483a6:	(bad)  
   1400483a7:	call   QWORD PTR [rsi]
   1400483a9:	jg     0x1400483ad
   1400483ab:	add    BYTE PTR [rax],al
   1400483ad:	add    BYTE PTR [rax],al
   1400483af:	add    BYTE PTR [rdi+0x7f],dl
   1400483b2:	add    al,BYTE PTR [rax]
   1400483b4:	(bad)  
   1400483b5:	(bad)  
   1400483b6:	(bad)  
   1400483b7:	call   FWORD PTR [rcx+0x7f]
   1400483ba:	add    al,BYTE PTR [rax]
   1400483bc:	add    BYTE PTR [rax],al
   1400483be:	add    BYTE PTR [rax],al
   1400483c0:	(bad)  
   1400483c1:	jg     0x1400483c5
   1400483c3:	add    bh,bh
   1400483c5:	(bad)  
   1400483c6:	(bad)  
   1400483c7:	jmp    FWORD PTR [rdx+0x7f]
   1400483ca:	add    al,BYTE PTR [rax]
   1400483cc:	add    BYTE PTR [rax],al
   1400483ce:	add    BYTE PTR [rax],al
   1400483d0:	rcl    DWORD PTR [rdx],1
   1400483d2:	add    eax,DWORD PTR [rax]
   1400483d4:	add    DWORD PTR [rax],eax
   1400483d6:	add    BYTE PTR [rax],al
   1400483d8:	fst    QWORD PTR [rdx]
   1400483da:	add    eax,DWORD PTR [rax]
   1400483dc:	add    BYTE PTR [rax],al
   1400483de:	add    BYTE PTR [rax],al
   1400483e0:	sbb    DWORD PTR [rdx],ecx
   1400483e2:	add    al,BYTE PTR [rax]
   1400483e4:	or     dh,BYTE PTR [rdx]
   1400483e6:	(bad)  
   1400483e7:	push   rax
   1400483e8:	out    0xe2,al
   1400483ea:	add    al,BYTE PTR [rax]
   1400483ec:	js     0x1400483db
   1400483ee:	add    eax,DWORD PTR [rax]
   1400483f0:	sbb    DWORD PTR [rbx],esi
   1400483f2:	or     DWORD PTR [rax],eax
   1400483f4:	and    DWORD PTR [rsp+rsi*1+0x0],esi
   1400483f8:	sbb    eax,0x19003364
   1400483fd:	xor    al,0x32
   1400483ff:	add    BYTE PTR [rcx+rax*1],cl
   140048402:	xor    BYTE PTR [rax],al
   140048404:	add    eax,0xcc0000e0
   140048409:	out    0x2,eax
   14004840b:	add    BYTE PTR [rax-0x12],al
   14004840e:	add    eax,DWORD PTR [rax]
   140048410:	jae    0x140048413
   140048412:	add    BYTE PTR [rax],al
   140048414:	(bad)  
   140048415:	(bad)  
   140048416:	(bad)  
   140048417:	push   rcx
   140048419:	adc    al,BYTE PTR [rbx]
	...
   14004842b:	add    BYTE PTR [rcx],al
   14004842d:	add    BYTE PTR [rax],al
   14004842f:	add    BYTE PTR [rcx],al
   140048431:	add    BYTE PTR [rax],al
   140048433:	add    BYTE PTR [rdx],al
   140048435:	add    BYTE PTR [rax],al
   140048437:	add    BYTE PTR [rcx],al
   140048439:	add    BYTE PTR [rax],al
   14004843b:	add    BYTE PTR [rax-0x7c],al
   14004843e:	add    al,0x0
   140048440:	or     BYTE PTR [rax],al
   140048442:	add    BYTE PTR [rax],al
   140048444:	push   rax
   140048445:	call   0x14044844e
   14004844a:	add    BYTE PTR [rax],al
   14004844c:	std    
   14004844d:	adc    al,BYTE PTR [rbx]
   14004844f:	add    BYTE PTR [rax],bh
	...
   14004845d:	add    BYTE PTR [rax],al
   14004845f:	add    BYTE PTR [rax+0x7f],bh
   140048462:	add    al,BYTE PTR [rax]
   140048464:	(bad)  
   140048465:	(bad)  
   140048466:	(bad)  
   140048467:	call   QWORD PTR [rbx-0x80]
   14004846a:	add    al,BYTE PTR [rax]
   14004846c:	add    BYTE PTR [rax],al
   14004846e:	add    BYTE PTR [rax],al
   140048470:	loop   0x1400483f2
   140048472:	add    al,BYTE PTR [rax]
   140048474:	add    DWORD PTR [rax],eax
   140048476:	add    BYTE PTR [rax],al
   140048478:	repnz add BYTE PTR [rdx],0x0
   14004847c:	(bad)  
   14004847d:	(bad)  
   14004847e:	(bad)  
   14004847f:	dec    DWORD PTR [rax]
   140048481:	add    DWORD PTR [rdx],0x0
   140048487:	add    BYTE PTR [rcx+rax*4],ah
   14004848a:	add    al,BYTE PTR [rax]
   14004848c:	(bad)  
   14004848d:	(bad)  
   14004848e:	(bad)  
   14004848f:	(bad)  
   140048490:	cmp    BYTE PTR [rcx+0x2],al
   140048496:	add    BYTE PTR [rax],al
   140048498:	rex.R add DWORD PTR [rdx],0xffffff00
   14004849f:	(bad)  
   1400484a0:	std    
   1400484a1:	adc    al,BYTE PTR [rbx]
   1400484a3:	add    BYTE PTR [rax],al
   1400484a5:	add    BYTE PTR [rax],al
   1400484a7:	add    BYTE PTR [rdx],cl
   1400484a9:	adc    eax,DWORD PTR [rbx]
   1400484ab:	add    BYTE PTR [rdx],al
   1400484ad:	add    BYTE PTR [rax],al
   1400484af:	add    BYTE PTR [rsi],dl
   1400484b1:	adc    eax,DWORD PTR [rbx]
   1400484b3:	add    BYTE PTR [rax],al
   1400484b5:	add    BYTE PTR [rax],al
   1400484b7:	add    BYTE PTR [rcx],bl
   1400484b9:	or     al,BYTE PTR [rdx]
   1400484bb:	add    BYTE PTR [rdx],cl
   1400484bd:	xor    al,BYTE PTR [rsi]
   1400484bf:	push   rax
   1400484c0:	out    0xe2,al
   1400484c2:	add    al,BYTE PTR [rax]
   1400484c4:	out    dx,al
   1400484c6:	add    eax,DWORD PTR [rax]
   1400484c8:	sbb    DWORD PTR [rdi],edi
   1400484ca:	or     eax,0x93742e00
   1400484cf:	add    BYTE PTR [rdx],ch
   1400484d1:	fs xchg edx,eax
   1400484d3:	add    BYTE PTR [rsi],ah
   1400484d5:	xor    al,0x91
   1400484d7:	add    BYTE PTR [rdx],bl
   1400484d9:	add    DWORD PTR [rdx+0xaf00c00],ecx
   1400484df:	loopne 0x1400484e9
   1400484e1:	rol    BYTE PTR [rsi],1
   1400484e3:	rol    BYTE PTR [rax+rdx*2],0x0
   1400484e7:	add    ah,cl
   1400484e9:	out    0x2,eax
   1400484eb:	add    BYTE PTR [rax],bl
   1400484ed:	out    dx,al
   1400484ee:	add    eax,DWORD PTR [rax]
   1400484f0:	rex.X add al,0x0
   1400484f3:	add    bh,bh
   1400484f5:	(bad)  
   1400484f6:	(bad)  
   1400484f7:	jmp    FWORD PTR [rdx]
   1400484f9:	adc    eax,DWORD PTR [rbx]
   1400484fb:	add    BYTE PTR [rax],al
   1400484fd:	add    BYTE PTR [rax],al
   1400484ff:	add    BYTE PTR [rsi],dh
   140048501:	adc    eax,DWORD PTR [rbx]
   140048503:	add    BYTE PTR [rcx],al
   140048505:	add    BYTE PTR [rax],al
   140048507:	add    BYTE PTR [rdx+0x13],al
   14004850a:	add    eax,DWORD PTR [rax]
   14004850c:	add    BYTE PTR [rax],al
   14004850e:	add    BYTE PTR [rax],al
   140048510:	rex.WRX adc r8,QWORD PTR [rbx]
   140048513:	add    BYTE PTR [rbx],al
   140048515:	add    BYTE PTR [rax],al
   140048517:	add    BYTE PTR [rdx+0x13],bl
   14004851a:	add    eax,DWORD PTR [rax]
   14004851c:	add    al,0x0
   14004851e:	add    BYTE PTR [rax],al
   140048520:	adc    ax,WORD PTR [rbx]
	...
   14004852f:	add    BYTE PTR [rax-0xfffd7f],cl
   140048535:	(bad)  
   140048536:	(bad)  
   140048537:	push   rdx
   140048539:	add    DWORD PTR [rdx],0x0
   14004853f:	add    BYTE PTR [rsi],dl
   140048541:	(bad)  
   140048542:	add    al,BYTE PTR [rax]
   140048544:	add    DWORD PTR [rax],eax
   140048546:	add    BYTE PTR [rax],al
   140048548:	rex.WX (bad) 
   14004854a:	add    al,BYTE PTR [rax]
   14004854c:	add    al,BYTE PTR [rax]
   14004854e:	add    BYTE PTR [rax],al
   140048550:	jo     0x1400484d5
   140048552:	add    al,BYTE PTR [rax]
   140048554:	add    DWORD PTR [rax],eax
   140048556:	add    BYTE PTR [rax],al
   140048558:	(bad)  
   140048559:	add    DWORD PTR [rdx],0x0
   14004855c:	add    BYTE PTR [rax],al
   14004855e:	add    BYTE PTR [rax],al
   140048560:	mov    ebp,0x2000283
   140048565:	add    BYTE PTR [rax],al
   140048567:	add    cl,cl
   140048569:	add    DWORD PTR [rdx],0x0
   14004856c:	add    BYTE PTR [rax],al
   14004856e:	add    BYTE PTR [rax],al
   140048570:	fiadd  DWORD PTR [rbx-0xfffe]
   140048576:	(bad)  
   140048577:	jmp    QWORD PTR [rax]
   140048579:	test   BYTE PTR [rdx],al
   14004857b:	add    BYTE PTR [rax],al
   14004857d:	add    BYTE PTR [rax],al
   14004857f:	add    BYTE PTR [rdx],dh
   140048581:	test   BYTE PTR [rdx],al
   140048583:	add    BYTE PTR [rbx],al
   140048585:	add    BYTE PTR [rax],al
   140048587:	add    BYTE PTR [rsi],dh
   140048589:	test   BYTE PTR [rdx],al
   14004858b:	add    BYTE PTR [rax+rax*1],al
   14004858e:	add    BYTE PTR [rax],al
   140048590:	test   al,0x84
   140048592:	add    al,BYTE PTR [rax]
   140048594:	add    eax,DWORD PTR [rax]
   140048596:	add    BYTE PTR [rax],al
   140048598:	mov    bh,0x84
   14004859a:	add    al,BYTE PTR [rax]
   14004859c:	add    BYTE PTR [rax],al
   14004859e:	add    BYTE PTR [rax],al
   1400485a0:	mov    BYTE PTR [rdx+rax*1-0x100],0xff
   1400485a8:	or     DWORD PTR [rbp+0x40002],eax
   1400485ae:	add    BYTE PTR [rax],al
   1400485b0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400485b1:	test   DWORD PTR [rdx],eax
   1400485b3:	add    BYTE PTR [rbx],al
   1400485b5:	add    BYTE PTR [rax],al
   1400485b7:	add    BYTE PTR [rbx+0x285],dh
   1400485bd:	add    BYTE PTR [rax],al
   1400485bf:	add    dl,al
   1400485c1:	test   DWORD PTR [rdx],eax
   1400485c3:	add    bh,bh
   1400485c5:	(bad)  
   1400485c6:	(bad)  
   1400485c7:	inc    DWORD PTR [rip+0x4000286]        # 0x144048853
   1400485cd:	add    BYTE PTR [rax],al
   1400485cf:	add    BYTE PTR [rax-0x79],dl
   1400485d2:	add    al,BYTE PTR [rax]
   1400485d4:	add    eax,0x56000000
   1400485d9:	mov    DWORD PTR [rdx],eax
   1400485db:	add    BYTE PTR [rax+rax*1],al
   1400485de:	add    BYTE PTR [rax],al
   1400485e0:	cwde   
   1400485e1:	mov    DWORD PTR [rdx],eax
   1400485e3:	add    BYTE PTR [rbx],al
   1400485e5:	add    BYTE PTR [rax],al
   1400485e7:	add    BYTE PTR [rdi+0x289],ah
   1400485ed:	add    BYTE PTR [rax],al
   1400485ef:	add    BYTE PTR [rsi-0xfffd77],dh
   1400485f5:	(bad)  
   1400485f6:	(bad)  
   1400485f7:	(bad)  
   1400485f8:	(bad)  [rcx+0x40002]
   1400485fe:	add    BYTE PTR [rax],al
   140048600:	call   0x14304888e
   140048605:	add    BYTE PTR [rax],al
   140048607:	add    bh,dh
   140048609:	mov    DWORD PTR [rdx],eax
   14004860b:	add    BYTE PTR [rax],al
   14004860d:	add    BYTE PTR [rax],al
   14004860f:	add    BYTE PTR [rsi],al
   140048611:	mov    al,BYTE PTR [rdx]
   140048613:	add    bh,bh
   140048615:	(bad)  
   140048616:	(bad)  
   140048617:	call   FWORD PTR [rdi]
   140048619:	mov    al,BYTE PTR [rdx]
   14004861b:	add    BYTE PTR [rax+rax*1],al
   14004861e:	add    BYTE PTR [rax],al
   140048620:	xor    DWORD PTR [rdx+0x30002],ecx
   140048626:	add    BYTE PTR [rax],al
   140048628:	mov    al,BYTE PTR [rdx]
   14004862b:	add    BYTE PTR [rax],al
   14004862d:	add    BYTE PTR [rax],al
   14004862f:	add    BYTE PTR [rdi-0x76],cl
   140048632:	add    al,BYTE PTR [rax]
   140048634:	(bad)  
   140048635:	(bad)  
   140048636:	(bad)  
   140048637:	call   QWORD PTR [rdx+0x400028a]
   14004863d:	add    BYTE PTR [rax],al
   14004863f:	add    BYTE PTR [rbx+0x300028a],ah
   140048645:	add    BYTE PTR [rax],al
   140048647:	add    BYTE PTR [rdx+rcx*4+0x2],dh
   14004864e:	add    BYTE PTR [rax],al
   140048650:	(bad)
   140048653:	add    bh,bh
   140048655:	(bad)  
   140048656:	(bad)  
   140048657:	dec    DWORD PTR [rax]
   140048659:	mov    eax,DWORD PTR [rdx]
   14004865b:	add    BYTE PTR [rax+rax*1],al
   14004865e:	add    BYTE PTR [rax],al
   140048660:	sbb    BYTE PTR [rbx+0x30002],cl
   140048666:	add    BYTE PTR [rax],al
   140048668:	sub    BYTE PTR [rbx+0x2],cl
   14004866e:	add    BYTE PTR [rax],al
   140048670:	cmp    BYTE PTR [rbx-0xfffe],cl
   140048676:	(bad)  
   140048677:	(bad)  
   140048678:	jge    0x140048605
   14004867a:	add    al,BYTE PTR [rax]
   14004867c:	add    al,0x0
   14004867e:	add    BYTE PTR [rax],al
   140048680:	cdq    
   140048681:	mov    eax,DWORD PTR [rdx]
   140048683:	add    BYTE PTR [rbx],al
   140048685:	add    BYTE PTR [rax],al
   140048687:	add    BYTE PTR [rax+0x28b],ch
   14004868d:	add    BYTE PTR [rax],al
   14004868f:	add    BYTE PTR [rdi-0xfffd75],dh
   140048695:	(bad)  
   140048696:	(bad)  
   140048697:	call   FWORD PTR [rcx]
   140048699:	adc    eax,0xb2060002
   14004869e:	add    dh,BYTE PTR [rax]
   1400486a0:	sub    bh,ah
   1400486a2:	add    al,BYTE PTR [rax]
   1400486a4:	pop    rax
   1400486a5:	add    BYTE PTR [rax],al
   1400486a7:	add    BYTE PTR [rcx],bl
   1400486a9:	and    al,0x8
   1400486ab:	add    BYTE PTR [rip+0x15000f34],dl        # 0x1550495e5
   1400486b1:	push   rdx
   1400486b2:	adc    eax,esi
   1400486b4:	pavgb  mm1,QWORD PTR [rip+0xb600c70]        # 0x14b64932b
   1400486bb:	push   rax
   1400486bc:	sub    bh,ah
   1400486be:	add    al,BYTE PTR [rax]
   1400486c0:	and    BYTE PTR [rax],al
   1400486c2:	add    BYTE PTR [rax],al
   1400486c4:	sbb    DWORD PTR [rip+0x741d0008],ebx        # 0x1b42186d2
   1400486ca:	or     eax,DWORD PTR [rax]
   1400486cc:	sbb    DWORD PTR [rdx+rcx*1+0x0],esp
   1400486d0:	adc    eax,0x9000834
   1400486d5:	push   rdx
   1400486d6:	add    eax,0x2e2e6e0
   1400486db:	add    al,dh
   1400486dd:	in     eax,dx
   1400486de:	add    eax,DWORD PTR [rax]
	...
   1400486e8:	add    DWORD PTR [rax],eax
   1400486ea:	add    BYTE PTR [rax],al
   1400486ec:	add    DWORD PTR [rax],eax
   1400486ee:	add    BYTE PTR [rax],al
   1400486f0:	hlt    
   1400486f1:	xchg   BYTE PTR [rax+rax*1],al
   1400486f4:	add    BYTE PTR [rax],al
	...
   1400486ff:	add    BYTE PTR [rax+0x13],bh
   140048702:	add    eax,DWORD PTR [rax]
   140048704:	cmp    BYTE PTR [rax],al
   140048706:	add    BYTE PTR [rax],al
   140048708:	push   0xffffffffff00028f
   14004870d:	(bad)  
   14004870e:	(bad)  
   14004870f:	inc    edx
   140048711:	pop    QWORD PTR [rdx]
   140048713:	add    BYTE PTR [rax],al
   140048715:	add    BYTE PTR [rax],al
   140048717:	add    dl,bl
   140048719:	pop    QWORD PTR [rdx]
   14004871b:	add    bh,bh
   14004871d:	(bad)  
   14004871e:	(bad)  
   14004871f:	(bad)  
   140048720:	js     0x140048735
   140048722:	add    eax,DWORD PTR [rax]
   140048724:	add    BYTE PTR [rax],al
   140048726:	add    BYTE PTR [rax],al
   140048728:	test   DWORD PTR [rbx],edx
   14004872a:	add    eax,DWORD PTR [rax]
   14004872c:	add    DWORD PTR [rax],eax
   14004872e:	add    BYTE PTR [rax],al
   140048730:	sbb    DWORD PTR [rdx],ecx
   140048732:	add    al,BYTE PTR [rax]
   140048734:	or     dh,BYTE PTR [rdx]
   140048736:	(bad)  
   140048737:	push   rax
   140048738:	out    0xe2,al
   14004873a:	add    al,BYTE PTR [rax]
   14004873c:	lock in eax,dx
   14004873e:	add    eax,DWORD PTR [rax]
   140048740:	sbb    DWORD PTR [rax],esp
   140048742:	or     al,BYTE PTR [rax]
   140048744:	and    BYTE PTR [rax+rdx*1+0x0],ah
   140048748:	sbb    al,0x34
   14004874a:	(bad)  
   14004874b:	add    BYTE PTR [rax],dl
   14004874d:	jb     0x14004875b
   14004874f:	lock or ah,al
   140048752:	or     al,dl
   140048754:	(bad)  
   140048755:	rol    BYTE PTR [rax+rsi*2],0xe6
   140048759:	loop   0x14004875d
   14004875b:	add    al,cl
   14004875d:	in     eax,dx
   14004875e:	add    eax,DWORD PTR [rax]
	...
   140048768:	add    DWORD PTR [rax],eax
   14004876a:	add    BYTE PTR [rax],al
   14004876c:	add    DWORD PTR [rax],eax
   14004876e:	add    BYTE PTR [rax],al
   140048770:	je     0x1400486f9
   140048772:	add    al,0x0
   140048774:	add    BYTE PTR [rax],al
	...
   14004877f:	add    BYTE PTR [rsi+0x48000313],bl
   140048785:	add    BYTE PTR [rax],al
   140048787:	add    BYTE PTR [rax+rdx*4],ah
   14004878a:	add    al,BYTE PTR [rax]
   14004878c:	(bad)  
   14004878d:	(bad)  
   14004878e:	(bad)  
   14004878f:	inc    DWORD PTR [rbp+0x290]
   140048795:	add    BYTE PTR [rax],al
   140048797:	add    BYTE PTR [rbp-0xfffd70],dl
   14004879d:	(bad)  
   14004879e:	(bad)  
   14004879f:	call   FWORD PTR [rsi+0x313]
   1400487a5:	add    BYTE PTR [rax],al
   1400487a7:	add    BYTE PTR [rbx+0x1000313],ch
   1400487ad:	add    BYTE PTR [rax],al
   1400487af:	add    BYTE PTR [rcx],bl
   1400487b1:	or     al,BYTE PTR [rdx]
   1400487b3:	add    BYTE PTR [rdx],cl
   1400487b5:	push   rdx
   1400487b6:	(bad)  
   1400487b7:	push   rax
   1400487b8:	out    0xe2,al
   1400487ba:	add    al,BYTE PTR [rax]
   1400487bc:	enter  0x3ed,0x0
   1400487c0:	add    DWORD PTR [rsi+rax*1],edx
   1400487c3:	add    BYTE PTR [rsp+riz*2],dl
   1400487c6:	or     DWORD PTR [rax],eax
   1400487c8:	adc    al,0x34
   1400487ca:	(bad)  
   1400487cb:	add    BYTE PTR [rdx+rsi*1],dl
   1400487ce:	adc    BYTE PTR [rax+0x19],dh
   1400487d1:	and    BYTE PTR [rsi],al
   1400487d3:	add    BYTE PTR [rax],ah
   1400487d5:	or     DWORD PTR fs:[rax],eax
   1400487d8:	sbb    al,0x34
   1400487da:	or     BYTE PTR [rax],al
   1400487dc:	adc    BYTE PTR [rdx+0xc],dl
   1400487df:	jo     0x1400487c7
   1400487e1:	loop   0x1400487e5
   1400487e3:	add    BYTE PTR [rax+0x3ed],ah
   1400487e9:	add    BYTE PTR [rax],al
   1400487eb:	add    BYTE PTR [rax],al
   1400487ed:	add    BYTE PTR [rax],al
   1400487ef:	add    BYTE PTR [rcx],al
   1400487f1:	add    BYTE PTR [rax],al
   1400487f3:	add    BYTE PTR [rcx],al
   1400487f5:	add    BYTE PTR [rax],al
   1400487f7:	add    ah,bh
   1400487f9:	xchg   DWORD PTR [rax+rax*1],eax
   1400487fc:	add    BYTE PTR [rax],al
	...
   140048807:	add    ah,al
   140048809:	adc    eax,DWORD PTR [rbx]
   14004880b:	add    BYTE PTR [rax+0x0],cl
   14004880e:	add    BYTE PTR [rax],al
   140048810:	cwde   
   140048811:	xchg   ecx,eax
   140048812:	add    al,BYTE PTR [rax]
   140048814:	(bad)  
   140048815:	(bad)  
   140048816:	(bad)  
   140048817:	inc    esi
   140048819:	xchg   ecx,eax
   14004881a:	add    al,BYTE PTR [rax]
   14004881c:	add    BYTE PTR [rax],al
   14004881e:	add    BYTE PTR [rax],al
   140048820:	call   0x13f048ab6
   140048825:	(bad)  
   140048826:	(bad)  
   140048827:	inc    esp
   140048829:	adc    eax,DWORD PTR [rbx]
   14004882b:	add    BYTE PTR [rax],al
   14004882d:	add    BYTE PTR [rax],al
   14004882f:	add    dl,dl
   140048831:	adc    eax,DWORD PTR [rbx]
   140048833:	add    BYTE PTR [rcx],al
   140048835:	add    BYTE PTR [rax],al
   140048837:	add    BYTE PTR [rcx],bl
   140048839:	or     eax,DWORD PTR [rbx]
   14004883b:	add    BYTE PTR [rbx],cl
   14004883d:	rex.X (bad) 
   14004883f:	push   rax
   140048840:	(bad)  
   140048841:	xor    BYTE PTR [rax],al
   140048843:	add    dh,ah
   140048845:	loop   0x140048849
   140048847:	add    BYTE PTR [rax+0x190003ed],ah
   14004884d:	sbb    al,BYTE PTR [rip+0x5e20c00]        # 0x145e69453
   140048853:	jo     0x140048859
   140048855:	(bad)  
   140048856:	add    esi,DWORD PTR [rax]
   140048858:	add    dl,BYTE PTR [rax+0x0]
   14004885b:	add    BYTE PTR [rax],ch
   14004885d:	out    0x2,eax
   14004885f:	add    BYTE PTR [rax+0x0],ah
   140048862:	add    BYTE PTR [rax],al
   140048864:	add    DWORD PTR [rdi],ecx
   140048866:	(bad)  
   140048867:	add    BYTE PTR [rdi],cl
   140048869:	xor    al,0xc
   14004886b:	add    BYTE PTR [rdi],cl
   14004886d:	jb     0x140048877
   14004886f:	jo     0x140048878
   140048871:	(bad)  
   140048872:	(bad)  
   140048873:	push   rax
   140048874:	add    DWORD PTR [rdx],ecx
   140048876:	add    al,0x0
   140048878:	or     dh,BYTE PTR [rdx+rcx*1]
   14004887b:	add    BYTE PTR [rdx],cl
   14004887d:	jb     0x140048885
   14004887f:	jo     0x14004889a
   140048881:	and    al,0x7
   140048883:	add    BYTE PTR [rdx],dl
   140048885:	rex.WR add BYTE PTR fs:[rdx],r10b
   140048889:	xor    al,0x4b
   14004888b:	add    BYTE PTR [rdx],dl
   14004888d:	add    DWORD PTR [rax+0x0],ecx
   140048890:	or     esi,DWORD PTR [rax+0x0]
   140048893:	add    BYTE PTR [rax],ch
   140048895:	out    0x2,eax
   140048897:	add    BYTE PTR [rax],dh
   140048899:	add    al,BYTE PTR [rax]
   14004889b:	add    BYTE PTR [rcx],al
   14004889d:	or     al,0x2
   14004889f:	add    BYTE PTR [rdx+rsi*2],cl
   1400488a2:	or     BYTE PTR [rax],dh
   1400488a4:	sbb    DWORD PTR [rdi],esp
   1400488a6:	or     DWORD PTR [rax],eax
   1400488a8:	adc    eax,0x15005154
   1400488ad:	xor    al,0x50
   1400488af:	add    BYTE PTR [rip+0xe004a01],dl        # 0x14e04d2b6
   1400488b5:	loopne 0x1400488c3
   1400488b7:	jo     0x1400488c4
   1400488b9:	(bad)  
   1400488ba:	add    BYTE PTR [rax],al
   1400488bc:	sub    bh,ah
   1400488be:	add    al,BYTE PTR [rax]
   1400488c0:	add    al,BYTE PTR [rax]
   1400488c3:	add    BYTE PTR [rcx],al
   1400488c5:	(bad)  
   1400488c6:	or     BYTE PTR [rax],al
   1400488c8:	(bad)  
   1400488c9:	push   rsp
   1400488ca:	or     al,0x0
   1400488cc:	(bad)  
   1400488cd:	xor    al,0xa
   1400488cf:	add    BYTE PTR [rdi],dl
   1400488d1:	push   rdx
   1400488d2:	adc    esp,eax
   1400488d4:	adc    DWORD PTR [rax+0x10],esi
   1400488d7:	(bad)  
   1400488d8:	add    DWORD PTR [rax],edx
   1400488da:	(bad)  
   1400488db:	add    BYTE PTR [rax],dl
   1400488dd:	or     eax,DWORD PTR fs:[rax]
   1400488e0:	adc    BYTE PTR [rdx+rcx*1],dh
   1400488e3:	add    BYTE PTR [rax],dl
   1400488e5:	jb     0x1400488f3
   1400488e7:	jo     0x1400488ea
   1400488e9:	or     al,0x4
   1400488eb:	add    BYTE PTR [rsp+rsi*1],cl
   1400488ee:	or     DWORD PTR [rax],eax
   1400488f0:	or     al,0x52
   1400488f2:	or     BYTE PTR [rax+0x1],dh
   1400488f5:	adc    eax,DWORD PTR [rcx]
   1400488f7:	add    BYTE PTR [rbx],dl
   1400488f9:	rex.X add BYTE PTR [rax],al
   1400488fc:	sbb    DWORD PTR [rsi],esp
   1400488fe:	or     al,BYTE PTR [rax]
   140048900:	adc    al,0x1
   140048902:	rex.WRB add BYTE PTR [rip+0x9e00bf0],r9b        # 0x149e494f9
   140048909:	rol    BYTE PTR [rdi],1
   14004890b:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x143648d82
   140048912:	add    dh,BYTE PTR [rax]
   140048914:	sub    bh,ah
   140048916:	add    al,BYTE PTR [rax]
   140048918:	push   rax
   140048919:	add    al,BYTE PTR [rax]
   14004891b:	add    BYTE PTR [rcx],al
   14004891d:	adc    al,0x6
   14004891f:	add    BYTE PTR [rsp+riz*2],dl
   140048922:	or     al,BYTE PTR [rax]
   140048924:	adc    al,0x34
   140048926:	or     BYTE PTR [rax],al
   140048928:	adc    al,0x52
   14004892a:	adc    BYTE PTR [rax+0x1],dh
   14004892d:	clts   
   14004892f:	add    BYTE PTR [rdi],cl
   140048931:	fs (bad) 
   140048933:	add    BYTE PTR [rdi],cl
   140048935:	push   rsp
   140048936:	(bad)  
   140048937:	add    BYTE PTR [rdi],cl
   140048939:	xor    cl,BYTE PTR [rbx]
   14004893b:	jo     0x14004893e
   14004893d:	sbb    DWORD PTR [rdx],ecx
   14004893f:	add    BYTE PTR [rcx],bl
   140048941:	je     0x14004894f
   140048943:	add    BYTE PTR [rcx],bl
   140048945:	push   rsp
   140048946:	or     eax,DWORD PTR [rax]
   140048948:	sbb    DWORD PTR [rdx+rcx*1],esi
   14004894b:	add    BYTE PTR [rcx],bl
   14004894d:	push   rdx
   14004894e:	adc    eax,0x11e013f0
   140048953:	rol    BYTE PTR [rcx],0x8
   140048956:	add    al,BYTE PTR [rax]
   140048958:	or     BYTE PTR [rdx+0x4],dh
   14004895b:	xor    BYTE PTR [rcx],al
   14004895d:	adc    al,BYTE PTR [rsi]
   14004895f:	add    BYTE PTR [rdx],dl
   140048961:	je     0x14004896e
   140048963:	add    BYTE PTR [rdx],dl
   140048965:	xor    al,0xa
   140048967:	add    BYTE PTR [rdx],dl
   140048969:	jb     0x140048976
   14004896b:	push   rax
   14004896c:	adc    DWORD PTR [rax],ebx
   14004896e:	add    al,0x0
   140048970:	sbb    BYTE PTR [rcx+rcx*1],dh
   140048973:	add    BYTE PTR [rdx],cl
   140048975:	push   rdx
   140048976:	(bad)  
   140048977:	jo     0x14004895f
   140048979:	loop   0x14004897d
   14004897b:	add    BYTE PTR [rax-0xfffc12],dl
   140048981:	(bad)  
   140048982:	(bad)  
   140048983:	call   QWORD PTR [rsp+rdx*1]
   140048986:	add    eax,DWORD PTR [rax]
   140048988:	add    BYTE PTR [rax],al
   14004898a:	add    BYTE PTR [rax],al
   14004898c:	and    BYTE PTR [rbx+rax*1],dl
   14004898f:	add    BYTE PTR [rax-0xfffd48],al
   140048995:	(bad)  
   140048996:	(bad)  
   140048997:	jmp    QWORD PTR [rdi+0x10002b8]
   14004899d:	add    BYTE PTR [rax],al
   14004899f:	add    BYTE PTR [rax+rdi*4+0x2],bh
   1400489a6:	add    BYTE PTR [rax],al
   1400489a8:	sar    BYTE PTR [rax-0xfffe],1
   1400489ae:	(bad)  
   1400489af:	call   FWORD PTR [rcx]
   1400489b1:	lar    eax,WORD PTR [rax]
   1400489b4:	(bad)  
   1400489b5:	push   rdx
   1400489b6:	add    dh,BYTE PTR [rax]
   1400489b8:	out    0xe2,al
   1400489ba:	add    al,BYTE PTR [rax]
   1400489bc:	push   0x3ee
   1400489c1:	add    BYTE PTR [rax],al
   1400489c3:	add    BYTE PTR [rax],al
   1400489c5:	add    BYTE PTR [rax],al
   1400489c7:	add    BYTE PTR [rcx],al
   1400489c9:	add    BYTE PTR [rax],al
   1400489cb:	add    BYTE PTR [rcx],al
   1400489cd:	add    BYTE PTR [rax],al
   1400489cf:	add    ah,dl
   1400489d1:	mov    DWORD PTR [rax+rax*1],eax
   1400489d4:	or     DWORD PTR [rax],eax
   1400489d6:	add    BYTE PTR [rax],al
   1400489d8:	push   rax
   1400489d9:	call   0x1402c89e2
   1400489de:	add    BYTE PTR [rax],al
   1400489e0:	ss adc al,0x3
   1400489e3:	add    BYTE PTR [rax],bh
	...
   1400489ed:	add    BYTE PTR [rax],al
   1400489ef:	add    BYTE PTR [rax-0x47],ah
   1400489f2:	add    al,BYTE PTR [rax]
   1400489f4:	(bad)  
   1400489f5:	(bad)  
   1400489f6:	(bad)  
   1400489f7:	push   QWORD PTR [rdx-0x47]
   1400489fa:	add    al,BYTE PTR [rax]
   1400489fc:	add    BYTE PTR [rax],al
   1400489fe:	add    BYTE PTR [rax],al
   140048a00:	leave  
   140048a01:	mov    ecx,0xffff0002
   140048a06:	(bad)  
   140048a07:	dec    ebx
   140048a09:	mov    ecx,0x2
   140048a0e:	add    BYTE PTR [rax],al
   140048a10:	sar    BYTE PTR [rcx-0xfffe],cl
   140048a16:	(bad)  
   140048a17:	(bad)  
   140048a18:	fdivr  QWORD PTR [rcx+0x2]
   140048a1e:	add    BYTE PTR [rax],al
   140048a20:	rex.XB adc al,0x3
   140048a23:	add    BYTE PTR [rcx],al
   140048a25:	add    BYTE PTR [rax],al
   140048a27:	add    BYTE PTR [rdi+0x14],cl
   140048a2a:	add    eax,DWORD PTR [rax]
   140048a2c:	add    BYTE PTR [rax],al
   140048a2e:	add    BYTE PTR [rax],al
   140048a30:	sbb    DWORD PTR [rdx],ecx
   140048a32:	add    al,BYTE PTR [rax]
   140048a34:	or     dh,BYTE PTR [rdx]
   140048a36:	(bad)  
   140048a37:	push   rax
   140048a38:	out    0xe2,al
   140048a3a:	add    al,BYTE PTR [rax]
   140048a3c:	push   0x10003ee
   140048a41:	adc    cl,BYTE PTR [rax]
   140048a43:	add    BYTE PTR [rdx],dl
   140048a45:	push   rsp
   140048a46:	or     DWORD PTR [rax],eax
   140048a48:	adc    dh,BYTE PTR [rax+rcx*1]
   140048a4b:	add    BYTE PTR [rdx],dl
   140048a4d:	xor    cl,BYTE PTR [rsi]
   140048a4f:	loopne 0x140048a5d
   140048a51:	jo     0x140048a5e
   140048a53:	(bad)  
   140048a54:	add    DWORD PTR [rdi],ecx
   140048a56:	add    al,0x0
   140048a58:	sysenter 
   140048a5a:	add    eax,DWORD PTR [rax]
   140048a5c:	or     al,0x70
   140048a5e:	or     edx,DWORD PTR [rax+0x1]
   140048a61:	or     DWORD PTR [rcx],eax
   140048a63:	add    BYTE PTR [rcx],cl
   140048a65:	rex.X add BYTE PTR [rax],al
   140048a68:	adc    DWORD PTR [rip+0x720c0004],edx        # 0x1b2108a72
   140048a6e:	or     BYTE PTR [rax+0x7],dh
   140048a71:	(bad)  
   140048a72:	(bad)  
   140048a73:	xor    dh,ah
   140048a75:	loop   0x140048a79
   140048a77:	add    al,dl
   140048a79:	out    dx,eax
   140048a7a:	add    eax,DWORD PTR [rax]
   140048a7c:	(bad)  
   140048a7d:	(bad)  
   140048a7e:	(bad)  
   140048a7f:	jmp    QWORD PTR [rbx+0x14]
   140048a82:	add    eax,DWORD PTR [rax]
   140048a84:	add    BYTE PTR [rax],al
   140048a86:	add    BYTE PTR [rax],al
   140048a88:	outs   dx,DWORD PTR ds:[rsi]
   140048a89:	adc    al,0x3
   140048a8b:	add    BYTE PTR [rcx],al
   140048a8d:	add    BYTE PTR [rax],al
   140048a8f:	add    BYTE PTR [rbx+0x14],bh
   140048a92:	add    eax,DWORD PTR [rax]
   140048a94:	add    BYTE PTR [rax],al
   140048a96:	add    BYTE PTR [rax],al
   140048a98:	js     0x140048a57
   140048a9a:	add    al,BYTE PTR [rax]
   140048a9c:	(bad)  
   140048a9d:	(bad)  
   140048a9e:	(bad)  
   140048a9f:	call   QWORD PTR [rbp+0x2bd]
   140048aa5:	add    BYTE PTR [rax],al
   140048aa7:	add    BYTE PTR [rbp+rdi*4+0x10002],bh
   140048aae:	add    BYTE PTR [rax],al
   140048ab0:	retf   
   140048ab1:	mov    ebp,0x20002
   140048ab6:	add    BYTE PTR [rax],al
   140048ab8:	push   rsp
   140048ab9:	mov    esi,0xffff0002
   140048abe:	(bad)  
   140048abf:	call   FWORD PTR [rcx]
   140048ac1:	and    BYTE PTR [rax],cl
   140048ac3:	add    BYTE PTR [rax],ah
   140048ac5:	fs or  eax,0xc341c00
   140048acb:	add    BYTE PTR [rax],dl
   140048acd:	push   rdx
   140048ace:	or     al,0xf0
   140048ad0:	or     ah,al
   140048ad2:	or     BYTE PTR [rax-0x1a],dh
   140048ad5:	loop   0x140048ad9
   140048ad7:	add    BYTE PTR [rax-0xfffc11],ch
   140048add:	(bad)  
   140048ade:	(bad)  
   140048adf:	inc    DWORD PTR [rax]
   140048ae1:	add    BYTE PTR [rax],al
   140048ae3:	add    BYTE PTR [rax],al
   140048ae5:	add    BYTE PTR [rax],al
   140048ae7:	add    BYTE PTR [rcx+0x1000314],dl
   140048aed:	add    BYTE PTR [rax],al
   140048aef:	add    BYTE PTR [rbp+0x2000314],bl
   140048af5:	add    BYTE PTR [rax],al
   140048af7:	add    BYTE PTR [rcx+0x314],ch
   140048afd:	add    BYTE PTR [rax],al
   140048aff:	add    BYTE PTR [rcx-0xfffcec],bh
   140048b05:	(bad)  
   140048b06:	(bad)  
   140048b07:	inc    DWORD PTR [rax]
   140048b09:	add    BYTE PTR [rax],al
   140048b0b:	add    BYTE PTR [rax],al
   140048b0d:	add    BYTE PTR [rax],al
   140048b0f:	add    BYTE PTR [rax+rax*1],al
   140048b12:	add    BYTE PTR [rax],al
   140048b14:	add    eax,0x1000000
   140048b19:	add    BYTE PTR [rax],al
   140048b1b:	add    BYTE PTR [rax],ah
   140048b1d:	mov    eax,DWORD PTR [rax+rax*1]
   140048b20:	or     DWORD PTR [rax],eax
   140048b22:	add    BYTE PTR [rax],al
   140048b24:	push   rax
   140048b25:	call   0x1402c8b2e
   140048b2a:	add    BYTE PTR [rax],al
   140048b2c:	(bad)
   140048b2f:	add    BYTE PTR [rax],bh
	...
   140048b3d:	add    BYTE PTR [rax],al
   140048b3f:	add    BYTE PTR [rax-0xfffd42],ch
   140048b45:	(bad)  
   140048b46:	(bad)  
   140048b47:	dec    DWORD PTR [rdi+rdi*4]
   140048b4a:	add    al,BYTE PTR [rax]
   140048b4c:	add    BYTE PTR [rax],al
   140048b4e:	add    BYTE PTR [rax],al
   140048b50:	(bad)  
   140048b51:	mov    edi,0x10002
   140048b56:	add    BYTE PTR [rax],al
   140048b58:	and    DWORD PTR [rdi+0x20002],edi
   140048b5e:	add    BYTE PTR [rax],al
   140048b60:	cmp    BYTE PTR [rdi+0x30002],bh
   140048b66:	add    BYTE PTR [rax],al
   140048b68:	rex.RB mov r15d,0x2
   140048b6e:	add    BYTE PTR [rax],al
   140048b70:	pop    rsi
   140048b71:	mov    edi,0x40002
   140048b76:	add    BYTE PTR [rax],al
   140048b78:	push   0xffffffffffffffbf
   140048b7a:	add    al,BYTE PTR [rax]
   140048b7c:	add    BYTE PTR [rax],al
   140048b7e:	add    BYTE PTR [rax],al
   140048b80:	sahf   
   140048b81:	mov    edi,0xffff0002
   140048b86:	(bad)  
   140048b87:	inc    ebp
   140048b89:	adc    al,0x3
   140048b8b:	add    BYTE PTR [rax],al
   140048b8d:	add    BYTE PTR [rax],al
   140048b8f:	add    dl,dl
   140048b91:	adc    al,0x3
   140048b93:	add    BYTE PTR [rip+0xffffffffde000000],al        # 0x11e048b99
   140048b99:	adc    al,0x3
   140048b9b:	add    BYTE PTR [rax],al
   140048b9d:	add    BYTE PTR [rax],al
   140048b9f:	add    BYTE PTR [rcx],bl
   140048ba1:	or     al,BYTE PTR [rdx]
   140048ba3:	add    BYTE PTR [rdx],cl
   140048ba5:	xor    al,BYTE PTR [rsi]
   140048ba7:	push   rax
   140048ba8:	out    0xe2,al
   140048baa:	add    al,BYTE PTR [rax]
   140048bac:	test   al,0xef
   140048bae:	add    eax,DWORD PTR [rax]
   140048bb0:	sbb    DWORD PTR [rdi],ecx
   140048bb2:	add    al,BYTE PTR [rax]
   140048bb4:	(bad)  
   140048bb5:	push   rdx
   140048bb6:	add    dh,BYTE PTR [rax]
   140048bb8:	out    0xe2,al
   140048bba:	add    al,BYTE PTR [rax]
   140048bbc:	sub    bh,0x3
   140048bbf:	add    bh,bh
   140048bc1:	(bad)  
   140048bc2:	(bad)  
   140048bc3:	inc    DWORD PTR [rax]
   140048bc5:	add    BYTE PTR [rax],al
   140048bc7:	add    BYTE PTR [rax],al
   140048bc9:	add    BYTE PTR [rax],al
   140048bcb:	add    dl,dh
   140048bcd:	adc    al,0x3
   140048bcf:	add    bh,bh
   140048bd1:	(bad)  
   140048bd2:	(bad)  
   140048bd3:	inc    DWORD PTR [rax]
   140048bd5:	add    BYTE PTR [rax],al
   140048bd7:	add    BYTE PTR [rax],al
   140048bd9:	add    BYTE PTR [rax],al
   140048bdb:	add    BYTE PTR [rcx],al
   140048bdd:	add    BYTE PTR [rax],al
   140048bdf:	add    BYTE PTR [rdx],al
   140048be1:	add    BYTE PTR [rax],al
   140048be3:	add    BYTE PTR [rcx],al
   140048be5:	add    BYTE PTR [rax],al
   140048be7:	add    ah,ch
   140048be9:	mov    eax,DWORD PTR [rax+rax*1]
   140048bec:	or     DWORD PTR [rax],eax
   140048bee:	add    BYTE PTR [rax],al
   140048bf0:	push   rax
   140048bf1:	call   0x1402c8bfa
   140048bf6:	add    BYTE PTR [rax],al
   140048bf8:	(bad)  
   140048bf9:	adc    al,0x3
   140048bfb:	add    BYTE PTR [rax],bh
   140048bfd:	add    BYTE PTR [rax],al
   140048bff:	add    ah,bl
   140048c01:	rol    BYTE PTR [rdx],0x0
   140048c04:	(bad)  
   140048c05:	(bad)  
   140048c06:	(bad)  
   140048c07:	(bad)  
   140048c08:	out    dx,al
   140048c09:	rol    BYTE PTR [rdx],0x0
   140048c0c:	add    BYTE PTR [rax],al
   140048c0e:	add    BYTE PTR [rax],al
   140048c10:	std    
   140048c11:	rol    BYTE PTR [rdx],0x0
   140048c14:	add    DWORD PTR [rax],eax
   140048c16:	add    BYTE PTR [rax],al
   140048c18:	(bad)  
   140048c19:	rol    DWORD PTR [rdx],0x0
   140048c1c:	add    BYTE PTR [rax],al
   140048c1e:	add    BYTE PTR [rax],al
   140048c20:	and    al,cl
   140048c22:	add    al,BYTE PTR [rax]
   140048c24:	(bad)  
   140048c25:	(bad)  
   140048c26:	(bad)  
   140048c27:	(bad)  
   140048c28:	(bad)  
   140048c29:	adc    al,0x3
   140048c2b:	add    BYTE PTR [rax],al
   140048c2d:	add    BYTE PTR [rax],al
   140048c2f:	add    BYTE PTR [rbx],cl
   140048c31:	adc    eax,0x20003
   140048c36:	add    BYTE PTR [rax],al
   140048c38:	(bad)  
   140048c39:	adc    eax,0x3
   140048c3e:	add    BYTE PTR [rax],al
   140048c40:	sbb    DWORD PTR [rdx],ecx
   140048c42:	add    al,BYTE PTR [rax]
   140048c44:	or     dh,BYTE PTR [rdx]
   140048c46:	(bad)  
   140048c47:	push   rax
   140048c48:	out    0xe2,al
   140048c4a:	add    al,BYTE PTR [rax]
   140048c4c:	sub    bh,0x3
   140048c4f:	add    BYTE PTR [rcx],dl
   140048c51:	(bad)  
   140048c52:	or     al,BYTE PTR [rax]
   140048c54:	(bad)  
   140048c55:	je     0x140048c68
   140048c57:	add    BYTE PTR [rbx],ah
   140048c59:	xor    al,0x10
   140048c5b:	add    BYTE PTR [rdi],dl
   140048c5d:	xchg   edx,eax
   140048c5e:	adc    al,dh
   140048c60:	(bad)  
   140048c61:	loopne 0x140048c6f
   140048c63:	ror    BYTE PTR [rdx],1
   140048c65:	ror    BYTE PTR [rax],0x50
   140048c68:	out    0xe2,al
   140048c6a:	add    al,BYTE PTR [rax]
   140048c6c:	pop    rax
   140048c6d:	out    dx,eax
   140048c6e:	add    eax,DWORD PTR [rax]
   140048c70:	(bad)  
   140048c71:	(bad)  
   140048c72:	(bad)  
   140048c73:	jmp    FWORD PTR [rbx]
   140048c75:	adc    eax,0x3
   140048c7a:	add    BYTE PTR [rax],al
   140048c7c:	(bad)  
   140048c7d:	adc    eax,0x10003
   140048c82:	add    BYTE PTR [rax],al
   140048c84:	rex.XB adc eax,0x3
   140048c8a:	add    BYTE PTR [rax],al
   140048c8c:	add    BYTE PTR [rax],al
   140048c8e:	add    BYTE PTR [rax],al
   140048c90:	rex.W ret 0x2
   140048c94:	(bad)  
   140048c95:	(bad)  
   140048c96:	(bad)  
   140048c97:	dec    DWORD PTR [rdx+rax*8+0x2]
   140048c9e:	add    BYTE PTR [rax],al
   140048ca0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140048ca1:	ret    0x2
   140048ca4:	add    DWORD PTR [rax],eax
   140048ca6:	add    BYTE PTR [rax],al
   140048ca8:	xor    eax,ebx
   140048caa:	add    al,BYTE PTR [rax]
   140048cac:	add    al,BYTE PTR [rax]
   140048cae:	add    BYTE PTR [rax],al
   140048cb0:	mov    bh,0xc3
   140048cb2:	add    al,BYTE PTR [rax]
   140048cb4:	add    DWORD PTR [rax],eax
   140048cb6:	add    BYTE PTR [rax],al
   140048cb8:	iret   
   140048cb9:	ret    
   140048cba:	add    al,BYTE PTR [rax]
   140048cbc:	add    al,BYTE PTR [rax]
   140048cbe:	add    BYTE PTR [rax],al
   140048cc0:	(bad)  
   140048cc1:	ret    
   140048cc2:	add    al,BYTE PTR [rax]
   140048cc4:	add    DWORD PTR [rax],eax
   140048cc6:	add    BYTE PTR [rax],al
   140048cc8:	cld    
   140048cc9:	ret    
   140048cca:	add    al,BYTE PTR [rax]
   140048ccc:	add    BYTE PTR [rax],al
   140048cce:	add    BYTE PTR [rax],al
   140048cd0:	or     eax,esp
   140048cd2:	add    al,BYTE PTR [rax]
   140048cd4:	(bad)  
   140048cd5:	(bad)  
   140048cd6:	(bad)  
   140048cd7:	inc    DWORD PTR [rcx]
   140048cd9:	(bad)  
   140048cda:	or     al,BYTE PTR [rax]
   140048cdc:	(bad)  
   140048cdd:	fs (bad) 
   140048cdf:	add    BYTE PTR [rsi],bl
   140048ce1:	xor    al,0xd
   140048ce3:	add    BYTE PTR [rsi],bl
   140048ce5:	push   rdx
   140048ce6:	(bad)  
   140048ce7:	lock adc eax,0x11c013e0
   140048ced:	jo     0x140048cff
   140048cef:	push   rax
   140048cf0:	adc    DWORD PTR [rbx],ebx
   140048cf2:	or     BYTE PTR [rax],al
   140048cf4:	sbb    edx,DWORD PTR [rax+rdx*1+0x0]
   140048cf8:	(bad)  
   140048cf9:	xor    al,0xe
   140048cfb:	add    BYTE PTR [rbx],cl
   140048cfd:	xchg   edx,eax
   140048cfe:	(bad)  
   140048cff:	loopne 0x140048d06
   140048d01:	jo     0x140048d07
   140048d03:	(bad)  
   140048d04:	out    0xe2,al
   140048d06:	add    al,BYTE PTR [rax]
   140048d08:	xor    bh,ch
   140048d0a:	add    eax,DWORD PTR [rax]
   140048d0c:	(bad)  
   140048d0d:	(bad)  
   140048d0e:	(bad)  
   140048d0f:	call   QWORD PTR [rbp+0x15]
   140048d12:	add    eax,DWORD PTR [rax]
   140048d14:	add    BYTE PTR [rax],al
   140048d16:	add    BYTE PTR [rax],al
   140048d18:	(bad)  
   140048d19:	adc    eax,0x3
   140048d1e:	add    BYTE PTR [rax],al
   140048d20:	mov    edi,es
   140048d22:	add    al,BYTE PTR [rax]
   140048d24:	(bad)  
   140048d25:	(bad)  
   140048d26:	(bad)  
   140048d27:	dec    esp
   140048d29:	mov    DWORD PTR [rdx],0x0
   140048d2f:	add    bl,bh
   140048d31:	mov    DWORD PTR [rdx],0x100
   140048d37:	add    BYTE PTR [rip+0x2c8],dl        # 0x140049005
   140048d3d:	add    BYTE PTR [rax],al
   140048d3f:	add    BYTE PTR [rdx-0x38],bl
   140048d42:	add    al,BYTE PTR [rax]
   140048d44:	(bad)  
   140048d45:	(bad)  
   140048d46:	(bad)  
   140048d47:	inc    DWORD PTR [rcx]
   140048d49:	(bad)  
   140048d4a:	or     al,BYTE PTR [rax]
   140048d4c:	(bad)  
   140048d4d:	push   rsp
   140048d4e:	or     al,0x0
   140048d50:	(bad)  
   140048d51:	xor    al,0xb
   140048d53:	add    BYTE PTR [rsi],dl
   140048d55:	xor    dl,BYTE PTR [rdx]
   140048d57:	lock adc al,ah
   140048d5a:	(bad)  
   140048d5b:	ror    BYTE PTR [rax+rsi*2],0xb
   140048d5f:	(bad)  
   140048d60:	sbb    DWORD PTR [rcx],esp
   140048d62:	or     al,BYTE PTR [rax]
   140048d64:	and    DWORD PTR [rsp+rcx*1+0x0],esi
   140048d68:	sbb    eax,0x19000b64
   140048d6d:	xor    al,0xa
   140048d6f:	add    BYTE PTR [rip+0x7f00952],cl        # 0x147f496c7
   140048d75:	loopne 0x140048d7c
   140048d77:	shl    dh,1
   140048d79:	loop   0x140048d7d
   140048d7b:	add    BYTE PTR [rax],cl
   140048d7d:	out    dx,eax
   140048d7e:	add    eax,DWORD PTR [rax]
	...
   140048d88:	add    DWORD PTR [rax],eax
   140048d8a:	add    BYTE PTR [rax],al
   140048d8c:	add    DWORD PTR [rax],eax
   140048d8e:	add    BYTE PTR [rax],al
   140048d90:	xchg   esp,eax
   140048d91:	lea    eax,[rax+rax*1]
   140048d94:	add    BYTE PTR [rax],al
	...
   140048d9f:	add    BYTE PTR [rbx+0x15],dh
   140048da2:	add    eax,DWORD PTR [rax]
   140048da4:	cmp    BYTE PTR [rax],al
   140048da6:	add    BYTE PTR [rax],al
   140048da8:	pop    rsp
   140048da9:	retf   
   140048daa:	add    al,BYTE PTR [rax]
   140048dac:	(bad)  
   140048dad:	(bad)  
   140048dae:	(bad)  
   140048daf:	inc    DWORD PTR [rsi+0x2cb]
   140048db5:	add    BYTE PTR [rax],al
   140048db7:	add    dl,dh
   140048db9:	retf   
   140048dba:	add    al,BYTE PTR [rax]
   140048dbc:	(bad)  
   140048dbd:	(bad)  
   140048dbe:	(bad)  
   140048dbf:	(bad)  
   140048dc0:	fxch   st(4)
   140048dc2:	add    al,BYTE PTR [rax]
   140048dc4:	add    BYTE PTR [rax],al
   140048dc6:	add    BYTE PTR [rax],al
   140048dc8:	adc    BYTE PTR [rip+0x10003],0x0        # 0x140058dd2
   140048dcf:	add    BYTE PTR [rcx],bl
   140048dd1:	or     al,BYTE PTR [rdx]
   140048dd3:	add    BYTE PTR [rdx],cl
   140048dd5:	xor    al,BYTE PTR [rsi]
   140048dd7:	push   rax
   140048dd8:	out    0xe2,al
   140048dda:	add    al,BYTE PTR [rax]
   140048ddc:	or     bh,ch
   140048dde:	add    eax,DWORD PTR [rax]
   140048de0:	sbb    DWORD PTR [rdi],ecx
   140048de2:	add    al,BYTE PTR [rax]
   140048de4:	(bad)  
   140048de5:	push   rdx
   140048de6:	add    dh,BYTE PTR [rax]
   140048de8:	out    0xe2,al
   140048dea:	add    al,BYTE PTR [rax]
   140048dec:	loopne 0x140048ddc
   140048dee:	add    eax,DWORD PTR [rax]
	...
   140048df8:	add    DWORD PTR [rax],eax
   140048dfa:	add    BYTE PTR [rax],al
   140048dfc:	add    DWORD PTR [rax],eax
   140048dfe:	add    BYTE PTR [rax],al
   140048e00:	add    al,0x8e
   140048e02:	add    al,0x0
   140048e04:	or     DWORD PTR [rax],eax
   140048e06:	add    BYTE PTR [rax],al
   140048e08:	push   rax
   140048e09:	call   0x1402c8e12
   140048e0e:	add    BYTE PTR [rax],al
   140048e10:	nop
   140048e11:	adc    eax,0x380003
	...
   140048e1e:	add    BYTE PTR [rax],al
   140048e20:	call   0x13f0490f2
   140048e25:	(bad)  
   140048e26:	(bad)  
   140048e27:	(bad)  
   140048e28:	cli    
   140048e29:	int    0x2
   140048e2b:	add    BYTE PTR [rax],al
   140048e2d:	add    BYTE PTR [rax],al
   140048e2f:	add    BYTE PTR [rbx],bh
   140048e31:	(bad)  
   140048e32:	add    al,BYTE PTR [rax]
   140048e34:	(bad)  
   140048e35:	(bad)  
   140048e36:	(bad)  
   140048e37:	(bad)  
   140048e38:	cmp    eax,0x2ce
   140048e3d:	add    BYTE PTR [rax],al
   140048e3f:	add    BYTE PTR [rsi+rcx*8+0x2],al
   140048e43:	add    bh,bh
   140048e45:	(bad)  
   140048e46:	(bad)  
   140048e47:	dec    DWORD PTR [rsi-0x32]
   140048e4a:	add    al,BYTE PTR [rax]
   140048e4c:	add    BYTE PTR [rax],al
   140048e4e:	add    BYTE PTR [rax],al
   140048e50:	popf   
   140048e51:	adc    eax,0x10003
   140048e56:	add    BYTE PTR [rax],al
   140048e58:	test   eax,0x315
   140048e5d:	add    BYTE PTR [rax],al
   140048e5f:	add    BYTE PTR [rcx],bl
   140048e61:	or     al,BYTE PTR [rdx]
   140048e63:	add    BYTE PTR [rdx],cl
   140048e65:	xor    al,BYTE PTR [rsi]
   140048e67:	push   rax
   140048e68:	out    0xe2,al
   140048e6a:	add    al,BYTE PTR [rax]
   140048e6c:	loopne 0x140048e5c
   140048e6e:	add    eax,DWORD PTR [rax]
   140048e70:	sbb    DWORD PTR [rax+rcx*1],esp
   140048e73:	add    BYTE PTR [rsp+riz*2],ah
   140048e76:	or     al,0x0
   140048e78:	and    BYTE PTR [rbx+rcx*1],dh
   140048e7b:	add    BYTE PTR [rdx+rdx*2],dl
   140048e7e:	adc    al,dh
   140048e80:	(bad)  
   140048e81:	loopne 0x140048e8f
   140048e83:	jo     0x140048e6b
   140048e85:	loop   0x140048e89
   140048e87:	add    BYTE PTR [rax+0x3ee],bh
   140048e8d:	add    BYTE PTR [rax],al
   140048e8f:	add    BYTE PTR [rax],al
   140048e91:	add    BYTE PTR [rax],al
   140048e93:	add    BYTE PTR [rcx],al
   140048e95:	add    BYTE PTR [rax],al
   140048e97:	add    BYTE PTR [rcx],al
   140048e99:	add    BYTE PTR [rax],al
   140048e9b:	add    BYTE PTR [rax+0x4000048e],ah
	...
   140048ea9:	add    BYTE PTR [rax],al
   140048eab:	add    BYTE PTR [rbp+0x38000315],bh
   140048eb1:	add    BYTE PTR [rax],al
   140048eb3:	add    BYTE PTR [rax],al
   140048eb5:	add    BYTE PTR [rax],al
   140048eb7:	add    BYTE PTR [rsi+rcx*8+0x2],bl
   140048ebb:	add    bh,bh
   140048ebd:	(bad)  
   140048ebe:	(bad)  
   140048ebf:	dec    DWORD PTR [rcx+0x2ce]
   140048ec5:	add    BYTE PTR [rax],al
   140048ec7:	add    BYTE PTR [rdx],al
   140048ec9:	iret   
   140048eca:	add    al,BYTE PTR [rax]
   140048ecc:	(bad)  
   140048ecd:	(bad)  
   140048ece:	(bad)  
   140048ecf:	call   FWORD PTR [rdx+0x2cf]
   140048ed5:	add    BYTE PTR [rax],al
   140048ed7:	add    dl,cl
   140048ed9:	adc    eax,0x10003
   140048ede:	add    BYTE PTR [rax],al
   140048ee0:	sbb    DWORD PTR [rdx],ecx
   140048ee2:	add    al,BYTE PTR [rax]
   140048ee4:	or     dh,BYTE PTR [rdx]
   140048ee6:	(bad)  
   140048ee7:	push   rax
   140048ee8:	out    0xe2,al
   140048eea:	add    al,BYTE PTR [rax]
   140048eec:	mov    eax,0x10003ee
   140048ef1:	or     al,BYTE PTR [rdx]
   140048ef3:	add    BYTE PTR [rdx],cl
   140048ef5:	xor    al,BYTE PTR [rsi]
   140048ef7:	xor    BYTE PTR [rcx],cl
   140048ef9:	sbb    DWORD PTR [rdx],ecx
   140048efb:	add    BYTE PTR [rcx],bl
   140048efd:	(bad)  
   140048efe:	or     eax,DWORD PTR [rax]
   140048f00:	sbb    DWORD PTR [rdx+rcx*1+0x0],esi
   140048f04:	sbb    DWORD PTR [rcx+rcx*1+0x0],esp
   140048f08:	sbb    DWORD PTR [rax+rcx*1],esi
   140048f0b:	add    BYTE PTR [rcx],bl
   140048f0d:	push   rdx
   140048f0e:	adc    eax,0x2e616e0
   140048f13:	add    BYTE PTR [rcx],al
   140048f15:	add    BYTE PTR [rax],al
   140048f17:	add    BYTE PTR [rcx],cl
   140048f19:	fild   DWORD PTR [rdx]
   140048f1b:	add    BYTE PTR [rdx-0x24],bh
   140048f1e:	add    al,BYTE PTR [rax]
   140048f20:	out    0x15,eax
   140048f22:	add    eax,DWORD PTR [rax]
   140048f24:	jp     0x140048f02
   140048f26:	add    al,BYTE PTR [rax]
   140048f28:	add    DWORD PTR [rax],eax
   140048f2a:	add    BYTE PTR [rax],al
   140048f2c:	adc    DWORD PTR [rax],ebx
   140048f2e:	add    eax,0x14621800
   140048f33:	loopne 0x140048f47
   140048f35:	jo     0x140048f48
   140048f37:	(bad)  
   140048f38:	adc    BYTE PTR [rax],dh
   140048f3a:	add    BYTE PTR [rax],al
   140048f3c:	(bad)  
   140048f3d:	out    0x2,al
   140048f3f:	add    BYTE PTR [rcx],al
   140048f41:	add    BYTE PTR [rax],al
   140048f43:	add    BYTE PTR [rdi-0x23],dl
   140048f46:	add    al,BYTE PTR [rax]
   140048f48:	test   ch,bl
   140048f4a:	add    al,BYTE PTR [rax]
   140048f4c:	or     edx,DWORD PTR [rsi]
   140048f4e:	add    eax,DWORD PTR [rax]
   140048f50:	add    BYTE PTR [rax],al
   140048f52:	add    BYTE PTR [rax],al
   140048f54:	or     DWORD PTR [rdi],edx
   140048f56:	(bad)  
   140048f57:	add    BYTE PTR [rdi],dl
   140048f59:	xor    al,0xd
   140048f5b:	add    BYTE PTR [rdi],dl
   140048f5d:	jb     0x140048f72
   140048f5f:	loopne 0x140048f72
   140048f61:	jo     0x140048f73
   140048f63:	(bad)  
   140048f64:	(bad)  
   140048f65:	out    0x2,al
   140048f67:	add    BYTE PTR [rcx],al
   140048f69:	add    BYTE PTR [rax],al
   140048f6b:	add    BYTE PTR [rdi-0x25fffd23],dh
   140048f71:	fld    QWORD PTR [rdx]
   140048f73:	add    BYTE PTR [rip+0xffffffffda000316],bh        # 0x11a04928f
   140048f79:	fld    QWORD PTR [rdx]
   140048f7b:	add    BYTE PTR [rcx],dl
   140048f7d:	or     al,BYTE PTR [rax+rax*1]
   140048f80:	or     dh,BYTE PTR [rsi+rax*1]
   140048f83:	add    BYTE PTR [rdx],cl
   140048f85:	xor    al,BYTE PTR [rsi]
   140048f87:	jo     0x140048f9f
   140048f89:	out    0x2,al
   140048f8b:	add    BYTE PTR [rcx],al
   140048f8d:	add    BYTE PTR [rax],al
   140048f8f:	add    BYTE PTR [rcx],dh
   140048f91:	fiadd  WORD PTR [rdx]
   140048f93:	add    BYTE PTR [rsi-0x22],dh
   140048f96:	add    al,BYTE PTR [rax]
   140048f98:	test   DWORD PTR [rsi],edx
   140048f9a:	add    eax,DWORD PTR [rax]
   140048f9c:	add    BYTE PTR [rax],al
   140048f9e:	add    BYTE PTR [rax],al
   140048fa0:	add    DWORD PTR [rcx+rax*1],eax
   140048fa3:	add    BYTE PTR [rdx+riz*8],al
   140048fa6:	add    BYTE PTR [rax],al
   140048fa8:	add    DWORD PTR [rdx+rax*1],ecx
   140048fab:	add    BYTE PTR [rcx+rax*1],cl
   140048fae:	adc    DWORD PTR [rax],eax
   140048fb0:	adc    DWORD PTR [rax+rcx*1],ebx
   140048fb3:	add    BYTE PTR [rsp+riz*2],bl
   140048fb6:	or     eax,0xc341c00
   140048fbb:	add    BYTE PTR [rdx+rdx*2],bl
   140048fbe:	sbb    al,dh
   140048fc0:	(bad)  
   140048fc1:	loopne 0x140048fd7
   140048fc3:	jo     0x140048fdb
   140048fc5:	out    0x2,al
   140048fc7:	add    BYTE PTR [rcx],al
   140048fc9:	add    BYTE PTR [rax],al
   140048fcb:	add    BYTE PTR [rax-0x4bfffd1e],cl
   140048fd1:	loop   0x140048fd5
   140048fd3:	add    BYTE PTR [rsi+0x316],ah
   140048fd9:	add    BYTE PTR [rax],al
   140048fdb:	add    BYTE PTR [rcx],cl
   140048fdd:	add    al,0x1
   140048fdf:	add    BYTE PTR [rdx+riz*1],al
   140048fe2:	add    BYTE PTR [rax],al
   140048fe4:	(bad)  
   140048fe5:	out    0x2,al
   140048fe7:	add    BYTE PTR [rcx],al
   140048fe9:	add    BYTE PTR [rax],al
   140048feb:	add    BYTE PTR [rbx+riz*8-0x1c1dfffe],ch
   140048ff2:	add    al,BYTE PTR [rax]
   140048ff4:	add    DWORD PTR [rax],eax
   140048ff6:	add    BYTE PTR [rax],al
   140048ff8:	loop   0x140048fdd
   140048ffa:	add    al,BYTE PTR [rax]
   140048ffc:	or     DWORD PTR [rdx],ecx
   140048ffe:	add    al,0x0
   140049000:	or     dh,BYTE PTR [rsi+rax*1]
   140049003:	add    BYTE PTR [rdx],cl
   140049005:	xor    al,BYTE PTR [rsi]
   140049007:	jo     0x14004901f
   140049009:	out    0x2,al
   14004900b:	add    BYTE PTR [rcx],al
   14004900d:	add    BYTE PTR [rax],al
   14004900f:	add    BYTE PTR [rbp-0x1ffffd1c],ch
   140049015:	in     al,0x2
   140049017:	add    al,ah
   140049019:	(bad)  
   14004901a:	add    eax,DWORD PTR [rax]
   14004901c:	loopne 0x140049002
   14004901e:	add    al,BYTE PTR [rax]
   140049020:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x17411902a
   140049026:	or     DWORD PTR [rax],eax
   140049028:	or     eax,0x19500632
   14004902d:	sbb    eax,DWORD PTR [rbx]
   14004902f:	add    BYTE PTR [rcx],cl
   140049031:	add    DWORD PTR [rax+0x300200],ebp
   140049037:	add    BYTE PTR [rax],ch
   140049039:	out    0x2,eax
   14004903b:	add    BYTE PTR [rax],dh
   14004903d:	add    eax,0x10000
   140049042:	add    BYTE PTR [rax],al
   140049044:	add    BYTE PTR [rax],al
   140049046:	add    BYTE PTR [rax],al
   140049048:	add    DWORD PTR [rcx+rax*1],eax
   14004904b:	add    BYTE PTR [rdx+rdx*1],al
   14004904e:	add    BYTE PTR [rax],al
   140049050:	add    BYTE PTR [rax],al
   140049052:	add    BYTE PTR [rax],al
   140049054:	loopne 0x14004903c
   140049056:	add    al,0x0
   140049058:	add    BYTE PTR [rax],al
   14004905a:	add    BYTE PTR [rax],al
   14004905c:	(bad)  
   14004905d:	(bad)  
   14004905e:	(bad)  
   14004905f:	inc    DWORD PTR [rax]
   140049061:	add    BYTE PTR [rax],al
   140049063:	add    BYTE PTR [rax],bl
   140049065:	add    BYTE PTR [rax],al
   140049067:	add    BYTE PTR [rdi+rdx*8+0x2],cl
	...
   14004907b:	add    BYTE PTR [rdi+rdx*8+0x2],ch
   140049082:	add    BYTE PTR [rax],al
   140049084:	cwde   
   140049085:	nop
   140049086:	add    al,0x0
	...
   140049098:	add    eax,DWORD PTR [rax]
   14004909a:	add    BYTE PTR [rax],al
   14004909c:	mov    eax,0x50000490
   1400490a1:	nop
   1400490a2:	add    al,0x0
   1400490a4:	rcl    BYTE PTR [rcx+0x4],0x0
	...
   1400490bb:	add    BYTE PTR [rax],cl
   1400490bd:	out    0x4,eax
   1400490bf:	add    BYTE PTR [rax],al
   1400490c1:	add    BYTE PTR [rax],al
   1400490c3:	add    bh,bh
   1400490c5:	(bad)  
   1400490c6:	(bad)  
   1400490c7:	inc    DWORD PTR [rax]
   1400490c9:	add    BYTE PTR [rax],al
   1400490cb:	add    BYTE PTR [rax],bl
   1400490cd:	add    BYTE PTR [rax],al
   1400490cf:	add    BYTE PTR [rdi+rdx*8+0x2],cl
	...
   1400490e3:	add    BYTE PTR [rdi+rdx*8+0x2],ch
   1400490ea:	add    BYTE PTR [rax],al
   1400490ec:	add    BYTE PTR [rcx+0x4],dl
	...
   1400490fe:	add    BYTE PTR [rax],al
   140049100:	add    eax,DWORD PTR [rax]
   140049102:	add    BYTE PTR [rax],al
   140049104:	and    BYTE PTR [rcx-0x6faffffc],dl
   14004910a:	add    al,0x0
   14004910c:	rcl    BYTE PTR [rcx+0x4],0x0
	...
   140049123:	add    BYTE PTR [rax-0xb],bl
   140049126:	add    al,0x0
   140049128:	add    BYTE PTR [rax],al
   14004912a:	add    BYTE PTR [rax],al
   14004912c:	(bad)  
   14004912d:	(bad)  
   14004912e:	(bad)  
   14004912f:	inc    DWORD PTR [rax]
   140049131:	add    BYTE PTR [rax],al
   140049133:	add    BYTE PTR [rax],bl
   140049135:	add    BYTE PTR [rax],al
   140049137:	add    BYTE PTR [rdi+rdx*8+0x2],cl
	...
   14004914b:	add    BYTE PTR [rax],cl
   14004914d:	call   0x140049156
   140049152:	add    BYTE PTR [rax],al
   140049154:	(bad)  
   140049155:	(bad)  
   140049156:	(bad)  
   140049157:	inc    DWORD PTR [rax]
   140049159:	add    BYTE PTR [rax],al
   14004915b:	add    BYTE PTR [rax],ch
   14004915d:	add    BYTE PTR [rax],al
   14004915f:	add    BYTE PTR [rax],cl
   140049161:	and    DWORD PTR [rax],eax
	...
   14004916f:	add    BYTE PTR [rdx],al
   140049171:	add    BYTE PTR [rax],al
   140049173:	add    BYTE PTR [rax-0x6f],cl
   140049176:	add    al,0x0
   140049178:	rcl    BYTE PTR [rcx+0x4],0x0
	...
   14004918b:	add    BYTE PTR [rax+0x22],ch
   14004918e:	add    BYTE PTR [rax],al
   140049190:	add    BYTE PTR [rax],al
   140049192:	add    BYTE PTR [rax],al
   140049194:	jo     0x140049127
   140049196:	add    al,0x0
	...
   1400491a8:	add    al,BYTE PTR [rax]
   1400491aa:	add    BYTE PTR [rax],al
   1400491ac:	call   0x100049642
   1400491b1:	xchg   ecx,eax
   1400491b2:	add    al,0x0
	...
   1400491c4:	push   rax
   1400491c5:	call   0x1400491ce
   1400491ca:	add    BYTE PTR [rax],al
   1400491cc:	(bad)  
   1400491cd:	(bad)  
   1400491ce:	(bad)  
   1400491cf:	inc    DWORD PTR [rax]
   1400491d1:	add    BYTE PTR [rax],al
   1400491d3:	add    BYTE PTR [rax],bl
   1400491d5:	add    BYTE PTR [rax],al
   1400491d7:	add    BYTE PTR [rax],ch
   1400491d9:	fild   WORD PTR [rdx]
	...
   1400491e7:	add    BYTE PTR [rax],dl
   1400491e9:	add    BYTE PTR [rax],al
   1400491eb:	add    BYTE PTR [rax],ch
   1400491ed:	call   0x1400491f6
   1400491f2:	add    BYTE PTR [rax],al
   1400491f4:	(bad)  
   1400491f5:	(bad)  
   1400491f6:	(bad)  
   1400491f7:	inc    DWORD PTR [rax]
   1400491f9:	add    BYTE PTR [rax],al
   1400491fb:	add    BYTE PTR [rax],bl
   1400491fd:	add    BYTE PTR [rax],al
   1400491ff:	add    BYTE PTR [rdi+rbx*1+0x0],ch
	...
   140049212:	add    BYTE PTR [rax],al
   140049214:	js     0x140049238
   140049216:	add    BYTE PTR [rax],al
   140049218:	add    BYTE PTR [rax],al
   14004921a:	add    BYTE PTR [rax],al
   14004921c:	test   al,0x91
   14004921e:	add    al,0x0
	...
   140049234:	fsubr  st,st(2)
   140049236:	add    al,0x0
   140049238:	add    BYTE PTR [rax],al
   14004923a:	add    BYTE PTR [rax],al
   14004923c:	(bad)  
   14004923d:	(bad)  
   14004923e:	(bad)  
   14004923f:	inc    DWORD PTR [rax]
   140049241:	add    BYTE PTR [rax],al
   140049243:	add    BYTE PTR [rax+rax*1],al
	...
   140049256:	add    BYTE PTR [rax],al
   140049258:	add    DWORD PTR [rax],eax
   14004925a:	add    BYTE PTR [rax],al
   14004925c:	xor    BYTE PTR [rdx+0x4],dl
	...
   140049272:	add    BYTE PTR [rax],al
   140049274:	pop    rax
   140049275:	xchg   edx,eax
   140049276:	add    al,0x0
	...
   140049288:	add    DWORD PTR [rax],eax
   14004928a:	add    BYTE PTR [rax],al
   14004928c:	rcl    BYTE PTR [rcx+0x4],0x0
	...
   14004929b:	add    BYTE PTR [rdi+rbx*8],bl
   14004929e:	add    al,BYTE PTR [rax]
   1400492a0:	add    BYTE PTR [rax],al
   1400492a2:	add    BYTE PTR [rax],al
   1400492a4:	mov    BYTE PTR [rdx+0x4],dl
	...
   1400492ba:	add    BYTE PTR [rax],al
   1400492bc:	mov    eax,0x4f5
   1400492c1:	add    BYTE PTR [rax],al
   1400492c3:	add    bh,bh
   1400492c5:	(bad)  
   1400492c6:	(bad)  
   1400492c7:	inc    DWORD PTR [rax]
   1400492c9:	add    BYTE PTR [rax],al
   1400492cb:	add    BYTE PTR [rax],ah
   1400492cd:	add    BYTE PTR [rax],al
   1400492cf:	add    BYTE PTR [rax],al
   1400492d1:	sahf   
   1400492d2:	add    al,BYTE PTR [rax]
	...
   1400492e4:	rex.WR popf 
   1400492e6:	add    al,BYTE PTR [rax]
   1400492e8:	add    BYTE PTR [rax],al
   1400492ea:	add    BYTE PTR [rax],al
   1400492ec:	add    BYTE PTR [rbx+0x4],dl
	...
   1400492fe:	add    BYTE PTR [rax],al
   140049300:	add    eax,DWORD PTR [rax]
   140049302:	add    BYTE PTR [rax],al
   140049304:	mov    eax,0x20000492
   140049309:	xchg   ebx,eax
   14004930a:	add    al,0x0
   14004930c:	rcl    BYTE PTR [rcx+0x4],0x0
	...
   140049323:	add    BYTE PTR [rax+0x4f5],al
   140049329:	add    BYTE PTR [rax],al
   14004932b:	add    bh,bh
   14004932d:	(bad)  
   14004932e:	(bad)  
   14004932f:	inc    DWORD PTR [rax]
   140049331:	add    BYTE PTR [rax],al
   140049333:	add    BYTE PTR [rax],bl
   140049335:	add    BYTE PTR [rax],al
   140049337:	add    BYTE PTR [rsi+rbx*4],bh
   14004933a:	add    al,BYTE PTR [rax]
	...
   140049354:	mov    ?,esi
   140049356:	(bad)  
   140049357:	pop    rax
   140049358:	add    BYTE PTR [rax],al
   14004935a:	add    BYTE PTR [rax],al
   14004935c:	rcl    BYTE PTR [rbx+0x10004],cl
   140049362:	add    BYTE PTR [rax],al
   140049364:	or     DWORD PTR [rax],eax
   140049366:	add    BYTE PTR [rax],al
   140049368:	or     DWORD PTR [rax],eax
   14004936a:	add    BYTE PTR [rax],al
   14004936c:	js     0x140049301
   14004936e:	add    al,0x0
   140049370:	pushf  
   140049371:	xchg   ebx,eax
   140049372:	add    al,0x0
   140049374:	rcl    BYTE PTR [rbx+0x51000004],0x2
   14004937b:	add    BYTE PTR [rax+0x50],dl
   14004937e:	add    al,BYTE PTR [rax]
   140049380:	(bad)  
   140049381:	adc    eax,DWORD PTR [rax]
   140049383:	add    BYTE PTR [rax+0x13],ah
   140049386:	add    BYTE PTR [rax],al
   140049388:	mov    al,0x53
   14004938a:	add    al,BYTE PTR [rax]
   14004938c:	and    BYTE PTR [rax+0x2],dl
   14004938f:	add    BYTE PTR [rax+0x13],ah
   140049392:	add    BYTE PTR [rax],al
   140049394:	rcl    BYTE PTR [rcx+0x2],0x0
   140049398:	rex push rcx
   14004939a:	add    al,BYTE PTR [rax]
   14004939c:	fst    QWORD PTR [rbx-0x6c0cfffc]
   1400493a2:	add    al,0x0
   1400493a4:	(bad)  
   1400493a5:	xchg   esp,eax
   1400493a6:	add    al,0x0
   1400493a8:	sbb    edx,DWORD PTR [rsp+rax*1+0x4943000]
   1400493af:	add    BYTE PTR [rsp+rdx*4+0x4],cl
   1400493b3:	add    BYTE PTR [rdx-0x6c],ah
   1400493b6:	add    al,0x0
   1400493b8:	jnp    0x14004934e
   1400493ba:	add    al,0x0
   1400493bc:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400493bd:	xchg   esp,eax
   1400493be:	add    al,0x0
   1400493c0:	add    BYTE PTR [rax],al
   1400493c2:	add    DWORD PTR [rax],eax
   1400493c4:	add    al,BYTE PTR [rax]
   1400493c6:	add    eax,DWORD PTR [rax]
   1400493c8:	add    al,0x0
   1400493ca:	add    eax,0x7000600
   1400493cf:	add    BYTE PTR [rax],cl
   1400493d1:	add    BYTE PTR [rsi+0x69],cl
   1400493d4:	jae    0x140049429
   1400493d6:	jb     0x14004944e
   1400493d8:	cs gs js 0x140049441
   1400493dc:	add    BYTE PTR [rdi],bh
   1400493de:	rex.RXB
   1400493df:	gs je  0x14004942a
   1400493e2:	(bad)  
   1400493e3:	jae    0x14004944d
   1400493e5:	push   rax
   1400493e6:	jb     0x140049451
   1400493e8:	ins    DWORD PTR es:[rdi],dx
   1400493e9:	gs rex
   1400493eb:	rex pop rcx
   1400493ed:	rex.B
   1400493ee:	rex.WXB
   1400493ef:	rex.WXB
   1400493f0:	rex pop rdx
   1400493f2:	add    BYTE PTR [rdi],bh
   1400493f4:	push   rdx
   1400493f5:	(bad)  
   1400493f6:	je     0x14004943b
   1400493f8:	ins    BYTE PTR es:[rdi],dx
   1400493f9:	gs (bad) 
   1400493fb:	outs   dx,BYTE PTR ds:[rsi]
   1400493fc:	jne    0x14004946e
   1400493fe:	rex
   1400493ff:	rex pop rcx
   140049401:	rex.B
   140049402:	rex.W pop rax
   140049404:	pop    rdx
   140049405:	add    BYTE PTR [rdi],bh
   140049407:	push   rdx
   140049408:	(bad)  
   140049409:	je     0x14004944f
   14004940b:	ins    BYTE PTR es:[rdi],dx
   14004940c:	ins    BYTE PTR es:[rdi],dx
   14004940d:	rex.B je 0x140049484
   140049410:	(bad)  
   140049411:	movsxd ebp,DWORD PTR [rax+0x40]
   140049414:	rex pop rcx
   140049416:	pop    r8
   140049418:	pop    rax
   140049419:	pop    rdx
   14004941a:	add    BYTE PTR [rdi],bh
   14004941c:	push   rdx
   14004941d:	(bad)  
   14004941e:	je     0x140049464
   140049420:	ins    BYTE PTR es:[rdi],dx
   140049421:	ins    BYTE PTR es:[rdi],dx
   140049422:	rex.R
   140049423:	gs je  0x140049487
   140049426:	movsxd ebp,DWORD PTR [rax+0x40]
   140049429:	rex pop rcx
   14004942b:	pop    r8
   14004942d:	pop    rax
   14004942e:	pop    rdx
   14004942f:	add    BYTE PTR [rdi],bh
   140049431:	push   rdx
   140049432:	(bad)  
   140049433:	je     0x14004947b
   140049435:	imul   ebp,DWORD PTR [rsi+0x64],0x67616c46
   14004943c:	rex
   14004943d:	rex pop rcx
   14004943f:	push   r8
   140049441:	rex.RB
   140049442:	rex.B
   140049443:	rex.WXB
   140049444:	rex.WXB push r8
   140049446:	rex.RB
   140049447:	rex.X
   140049448:	rex.R
   140049449:	rex pop rdx
   14004944b:	add    BYTE PTR [rdi],bh
   14004944d:	push   rdx
   14004944e:	(bad)  
   14004944f:	je     0x14004949a
   140049451:	outs   dx,BYTE PTR ds:[rsi]
   140049452:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14004945a:	rex
   14004945b:	rex pop rcx
   14004945d:	rex.B
   14004945e:	rex.WX pop rax
   140049460:	pop    rdx
   140049461:	add    BYTE PTR [rdi],bh
   140049463:	push   rdx
   140049464:	(bad)  
   140049465:	je     0x1400494b9
   140049467:	gs ins BYTE PTR es:[rdi],dx
   140049469:	outs   dx,DWORD PTR ds:[rsi]
   14004946a:	(bad)  
   14004946b:	fs push rbx
   14004946d:	jns    0x1400494dc
   14004946f:	(bad)  
   140049470:	outs   dx,DWORD PTR ds:[rsi]
   140049471:	ins    BYTE PTR es:[rdi],dx
   140049472:	jae    0x1400494b4
   140049474:	rex pop rcx
   140049476:	pop    r8
   140049478:	pop    rax
   140049479:	pop    rdx
   14004947a:	add    BYTE PTR [rdi],bh
   14004947c:	push   rdx
   14004947d:	(bad)  
   14004947e:	je     0x1400494d3
   140049480:	gs je  0x1400494d8
   140049483:	outs   dx,BYTE PTR ds:[rsi]
   140049484:	addr32 jb 0x1400494e8
   140049487:	movsxd esp,DWORD PTR [rbp+0x66]
   14004948a:	jne    0x1400494f8
   14004948c:	push   rax
   14004948d:	jb     0x1400494fe
   14004948f:	movsxd esp,DWORD PTR [rbp+0x73]
   140049492:	jae    0x1400494e8
   140049494:	gs jb  0x140049504
   140049497:	imul   ebp,DWORD PTR [rsi+0x61],0x6e6f6974
   14004949e:	rex
   14004949f:	rex pop rcx
   1400494a1:	pop    r8
   1400494a3:	pop    rax
   1400494a4:	pop    rdx
   1400494a5:	add    BYTE PTR [rdi],bh
   1400494a7:	push   rdx
   1400494a8:	(bad)  
   1400494a9:	je     0x140049502
   1400494ab:	(bad)  
   1400494ac:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x6e695372
   1400494b4:	ins    BYTE PTR es:[edi],dx
   1400494b6:	gs rex.WRXB (bad) 
   1400494b9:	push   0x65
   1400494bb:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   1400494bf:	pop    rcx
   1400494c0:	rex.B
   1400494c1:	rex.WXB push r8
   1400494c3:	rex.RB
   1400494c4:	pop    r8
   1400494c6:	rex.WXB
   1400494c7:	rex.WXB
   1400494c8:	rex pop rdx
   1400494ca:	add    BYTE PTR [rax],al
   1400494cc:	test   al,0x95
   1400494ce:	add    al,0x0
	...
   1400494d8:	int3   
   1400494d9:	popf   
   1400494da:	add    al,0x0
   1400494dc:	add    BYTE PTR [rax],ah
   1400494de:	add    eax,DWORD PTR [rax]
   1400494e0:	adc    BYTE PTR [rsi+0x4],0x0
   1400494e7:	add    BYTE PTR [rax],al
   1400494e9:	add    BYTE PTR [rax],al
   1400494eb:	add    al,ah
   1400494ed:	movabs al,ds:0x9a38000320d80004
   1400494f6:	add    al,0x0
	...
   140049500:	add    BYTE PTR [rbx+0x24900004],ah
   140049506:	add    eax,DWORD PTR [rax]
   140049508:	mov    al,0x98
   14004950a:	add    al,0x0
	...
   140049514:	or     ah,BYTE PTR [rsp+rax*1+0x3230800]
   14004951b:	add    al,ch
   14004951d:	fwait
   14004951e:	add    al,0x0
	...
   140049528:	pop    rax
   140049529:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004952a:	add    al,0x0
   14004952c:	rex
   14004952d:	add    eax,DWORD PTR es:[rax]
   140049530:	rex cdq 
   140049532:	add    al,0x0
	...
   14004953c:	(bad)  
   14004953d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004953e:	add    al,0x0
   140049540:	cwde   
   140049541:	and    eax,DWORD PTR [rbx]
   140049543:	add    al,bh
   140049545:	cwde   
   140049546:	add    al,0x0
	...
   140049550:	mov    fs,WORD PTR [rsp+rax*1+0x3235000]
   140049557:	add    BYTE PTR [rax],cl
   140049559:	pushf  
   14004955a:	add    al,0x0
	...
   140049564:	(bad)  
   140049565:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140049566:	add    al,0x0
   140049568:	(bad)  
   140049569:	add    eax,DWORD PTR es:[rax]
   14004956c:	push   0x499
   140049571:	add    BYTE PTR [rax],al
   140049573:	add    BYTE PTR [rax],al
   140049575:	add    BYTE PTR [rax],al
   140049577:	add    BYTE PTR [rax-0x59],ah
   14004957a:	add    al,0x0
   14004957c:	shl    BYTE PTR [rbx],0x3
   14004957f:	add    BYTE PTR [rax-0x67],bl
   140049582:	add    al,0x0
	...
   14004958c:	hlt    
   14004958d:	stos   BYTE PTR es:[rdi],al
   14004958e:	add    al,0x0
   140049590:	mov    al,0x23
   140049592:	add    eax,DWORD PTR [rax]
	...
   1400495a8:	push   rax
   1400495a9:	pushf  
   1400495aa:	add    al,0x0
   1400495ac:	add    BYTE PTR [rax],al
   1400495ae:	add    BYTE PTR [rax],al
   1400495b0:	pushfw 
   1400495b2:	add    al,0x0
   1400495b4:	add    BYTE PTR [rax],al
   1400495b6:	add    BYTE PTR [rax],al
   1400495b8:	jle    0x140049556
   1400495ba:	add    al,0x0
   1400495bc:	add    BYTE PTR [rax],al
   1400495be:	add    BYTE PTR [rax],al
   1400495c0:	xchg   esp,eax
   1400495c1:	pushf  
   1400495c2:	add    al,0x0
   1400495c4:	add    BYTE PTR [rax],al
   1400495c6:	add    BYTE PTR [rax],al
   1400495c8:	stos   BYTE PTR es:[rdi],al
   1400495c9:	pushf  
   1400495ca:	add    al,0x0
   1400495cc:	add    BYTE PTR [rax],al
   1400495ce:	add    BYTE PTR [rax],al
   1400495d0:	mov    edx,0x49c
   1400495d5:	add    BYTE PTR [rax],al
   1400495d7:	add    al,cl
   1400495d9:	pushf  
   1400495da:	add    al,0x0
   1400495dc:	add    BYTE PTR [rax],al
   1400495de:	add    BYTE PTR [rax],al
   1400495e0:	loopne 0x14004957e
   1400495e2:	add    al,0x0
   1400495e4:	add    BYTE PTR [rax],al
   1400495e6:	add    BYTE PTR [rax],al
   1400495e8:	out    dx,al
   1400495e9:	pushf  
   1400495ea:	add    al,0x0
   1400495ec:	add    BYTE PTR [rax],al
   1400495ee:	add    BYTE PTR [rax],al
   1400495f0:	add    bl,BYTE PTR [rbp+0x4]
   1400495f6:	add    BYTE PTR [rax],al
   1400495f8:	adc    bl,BYTE PTR [rbp+0x4]
   1400495fe:	add    BYTE PTR [rax],al
   140049600:	and    bl,BYTE PTR [rbp+0x4]
   140049606:	add    BYTE PTR [rax],al
   140049608:	xor    al,0x9d
   14004960a:	add    al,0x0
   14004960c:	add    BYTE PTR [rax],al
   14004960e:	add    BYTE PTR [rax],al
   140049610:	rex.RX popf 
   140049612:	add    al,0x0
   140049614:	add    BYTE PTR [rax],al
   140049616:	add    BYTE PTR [rax],al
   140049618:	pop    rax
   140049619:	popf   
   14004961a:	add    al,0x0
   14004961c:	add    BYTE PTR [rax],al
   14004961e:	add    BYTE PTR [rax],al
   140049620:	jbe    0x1400495bf
   140049622:	add    al,0x0
   140049624:	add    BYTE PTR [rax],al
   140049626:	add    BYTE PTR [rax],al
   140049628:	test   BYTE PTR [rbp+0x4],bl
   14004962e:	add    BYTE PTR [rax],al
   140049630:	xchg   esp,eax
   140049631:	popf   
   140049632:	add    al,0x0
   140049634:	add    BYTE PTR [rax],al
   140049636:	add    BYTE PTR [rax],al
   140049638:	sahf   
   140049639:	popf   
   14004963a:	add    al,0x0
   14004963c:	add    BYTE PTR [rax],al
   14004963e:	add    BYTE PTR [rax],al
   140049640:	mov    eax,0x49d
   140049645:	add    BYTE PTR [rax],al
   140049647:	add    BYTE PTR [rax+0x4a7],bl
   14004964d:	add    BYTE PTR [rax],al
   14004964f:	add    BYTE PTR [rdx+0x4a7],dh
   140049655:	add    BYTE PTR [rax],al
   140049657:	add    dh,al
   140049659:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004965a:	add    al,0x0
   14004965c:	add    BYTE PTR [rax],al
   14004965e:	add    BYTE PTR [rax],al
   140049660:	out    0xa7,al
   140049662:	add    al,0x0
   140049664:	add    BYTE PTR [rax],al
   140049666:	add    BYTE PTR [rax],al
   140049668:	cli    
   140049669:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004966a:	add    al,0x0
   14004966c:	add    BYTE PTR [rax],al
   14004966e:	add    BYTE PTR [rax],al
   140049670:	mov    BYTE PTR [rdi+0x4],ah
	...
   14004967e:	add    BYTE PTR [rax],al
   140049680:	movabs ds:0xb60000000000049e,al
   140049689:	sahf   
   14004968a:	add    al,0x0
   14004968c:	add    BYTE PTR [rax],al
   14004968e:	add    BYTE PTR [rax],al
   140049690:	(bad)  
   140049691:	sahf   
   140049692:	add    al,0x0
   140049694:	add    BYTE PTR [rax],al
   140049696:	add    BYTE PTR [rax],al
   140049698:	(bad)  
   140049699:	sahf   
   14004969a:	add    al,0x0
   14004969c:	add    BYTE PTR [rax],al
   14004969e:	add    BYTE PTR [rax],al
   1400496a0:	loop   0x140049640
   1400496a2:	add    al,0x0
   1400496a4:	add    BYTE PTR [rax],al
   1400496a6:	add    BYTE PTR [rax],al
   1400496a8:	cli    
   1400496a9:	sahf   
   1400496aa:	add    al,0x0
   1400496ac:	add    BYTE PTR [rax],al
   1400496ae:	add    BYTE PTR [rax],al
   1400496b0:	or     al,0x9f
   1400496b2:	add    al,0x0
   1400496b4:	add    BYTE PTR [rax],al
   1400496b6:	add    BYTE PTR [rax],al
   1400496b8:	and    al,0x9f
   1400496ba:	add    al,0x0
   1400496bc:	add    BYTE PTR [rax],al
   1400496be:	add    BYTE PTR [rax],al
   1400496c0:	cmp    bl,BYTE PTR [rdi+0x4]
   1400496c6:	add    BYTE PTR [rax],al
   1400496c8:	rex.WR lahf 
   1400496ca:	add    al,0x0
   1400496cc:	add    BYTE PTR [rax],al
   1400496ce:	add    BYTE PTR [rax],al
   1400496d0:	pop    rsp
   1400496d1:	lahf   
   1400496d2:	add    al,0x0
   1400496d4:	add    BYTE PTR [rax],al
   1400496d6:	add    BYTE PTR [rax],al
   1400496d8:	outs   dx,BYTE PTR ds:[rsi]
   1400496d9:	lahf   
   1400496da:	add    al,0x0
   1400496dc:	add    BYTE PTR [rax],al
   1400496de:	add    BYTE PTR [rax],al
   1400496e0:	test   BYTE PTR [rdi+0x4],bl
   1400496e6:	add    BYTE PTR [rax],al
   1400496e8:	movabs al,ds:0xb80000000000049f
   1400496f1:	lahf   
   1400496f2:	add    al,0x0
   1400496f4:	add    BYTE PTR [rax],al
   1400496f6:	add    BYTE PTR [rax],al
   1400496f8:	rcr    BYTE PTR [rdi+0x4],1
   1400496fe:	add    BYTE PTR [rax],al
   140049700:	in     al,dx
   140049701:	lahf   
   140049702:	add    al,0x0
   140049704:	add    BYTE PTR [rax],al
   140049706:	add    BYTE PTR [rax],al
   140049708:	cli    
   140049709:	lahf   
   14004970a:	add    al,0x0
   14004970c:	add    BYTE PTR [rax],al
   14004970e:	add    BYTE PTR [rax],al
   140049710:	add    ah,BYTE PTR [rax+0x4]
   140049716:	add    BYTE PTR [rax],al
   140049718:	sbb    al,0xa0
   14004971a:	add    al,0x0
   14004971c:	add    BYTE PTR [rax],al
   14004971e:	add    BYTE PTR [rax],al
   140049720:	movabs al,cs:0xa042000000000004
   14004972a:	add    al,0x0
   14004972c:	add    BYTE PTR [rax],al
   14004972e:	add    BYTE PTR [rax],al
   140049730:	pop    rax
   140049731:	movabs al,ds:0xa06c000000000004
   14004973a:	add    al,0x0
   14004973c:	add    BYTE PTR [rax],al
   14004973e:	add    BYTE PTR [rax],al
   140049740:	js     0x1400496e2
   140049742:	add    al,0x0
   140049744:	add    BYTE PTR [rax],al
   140049746:	add    BYTE PTR [rax],al
   140049748:	mov    BYTE PTR [rax+0x4],ah
   14004974e:	add    BYTE PTR [rax],al
   140049750:	xchg   esi,eax
   140049751:	movabs al,ds:0xa0b2000000000004
   14004975a:	add    al,0x0
   14004975c:	add    BYTE PTR [rax],al
   14004975e:	add    BYTE PTR [rax],al
   140049760:	mov    esi,0x4a0
   140049765:	add    BYTE PTR [rax],al
   140049767:	add    al,dl
   140049769:	movabs al,ds:0xa8c0000000000004
   140049772:	add    al,0x0
   140049774:	add    BYTE PTR [rax],al
   140049776:	add    BYTE PTR [rax],al
   140049778:	stos   BYTE PTR es:[rdi],al
   140049779:	test   al,0x4
   14004977b:	add    BYTE PTR [rax],al
   14004977d:	add    BYTE PTR [rax],al
   14004977f:	add    BYTE PTR [rax+rbp*4+0x4],dl
   140049786:	add    BYTE PTR [rax],al
   140049788:	jp     0x140049732
   14004978a:	add    al,0x0
   14004978c:	add    BYTE PTR [rax],al
   14004978e:	add    BYTE PTR [rax],al
   140049790:	data16 test al,0x4
   140049793:	add    BYTE PTR [rax],al
   140049795:	add    BYTE PTR [rax],al
   140049797:	add    BYTE PTR [rdx+0x49e],dl
   14004979d:	add    BYTE PTR [rax],al
   14004979f:	add    BYTE PTR [rdx+rbp*4+0x4],cl
   1400497a3:	add    BYTE PTR [rax],al
   1400497a5:	add    BYTE PTR [rax],al
   1400497a7:	add    BYTE PTR [rax-0x56],al
   1400497aa:	add    al,0x0
   1400497ac:	add    BYTE PTR [rax],al
   1400497ae:	add    BYTE PTR [rax],al
   1400497b0:	sub    ch,BYTE PTR [rdx+0x4]
   1400497b6:	add    BYTE PTR [rax],al
   1400497b8:	adc    al,0xaa
   1400497ba:	add    al,0x0
   1400497bc:	add    BYTE PTR [rax],al
   1400497be:	add    BYTE PTR [rax],al
   1400497c0:	(bad)  
   1400497c1:	test   eax,0x4
   1400497c6:	add    BYTE PTR [rax],al
   1400497c8:	in     al,dx
   1400497c9:	test   eax,0x4
   1400497ce:	add    BYTE PTR [rax],al
   1400497d0:	(bad)  
   1400497d1:	test   eax,0x4
   1400497d6:	add    BYTE PTR [rax],al
   1400497d8:	(bad)  
   1400497d9:	test   eax,0x4
   1400497de:	add    BYTE PTR [rax],al
   1400497e0:	rex.W test al,0x4
   1400497e3:	add    BYTE PTR [rax],al
   1400497e5:	add    BYTE PTR [rax],al
   1400497e7:	add    BYTE PTR [rax+rbp*4],ch
   1400497ea:	add    al,0x0
   1400497ec:	add    BYTE PTR [rax],al
   1400497ee:	add    BYTE PTR [rax],al
   1400497f0:	(bad)  
   1400497f1:	test   al,0x4
   1400497f3:	add    BYTE PTR [rax],al
   1400497f5:	add    BYTE PTR [rax],al
   1400497f7:	add    BYTE PTR [rsi+0x4a9],ch
   1400497fd:	add    BYTE PTR [rax],al
   1400497ff:	add    BYTE PTR [rax+0x4a9],ah
   140049805:	add    BYTE PTR [rax],al
   140049807:	add    BYTE PTR [rax+0x4a9],dl
   14004980d:	add    BYTE PTR [rax],al
   14004980f:	add    BYTE PTR [rdx-0x57],bh
   140049812:	add    al,0x0
   140049814:	add    BYTE PTR [rax],al
   140049816:	add    BYTE PTR [rax],al
   140049818:	push   0xffffffffffffff9e
   14004981a:	add    al,0x0
   14004981c:	add    BYTE PTR [rax],al
   14004981e:	add    BYTE PTR [rax],al
   140049820:	push   rdx
   140049821:	sahf   
   140049822:	add    al,0x0
   140049824:	add    BYTE PTR [rax],al
   140049826:	add    BYTE PTR [rax],al
   140049828:	rex.R sahf 
   14004982a:	add    al,0x0
   14004982c:	add    BYTE PTR [rax],al
   14004982e:	add    BYTE PTR [rax],al
   140049830:	xor    al,0x9e
   140049832:	add    al,0x0
   140049834:	add    BYTE PTR [rax],al
   140049836:	add    BYTE PTR [rax],al
   140049838:	(bad)  
   140049839:	sahf   
   14004983a:	add    al,0x0
   14004983c:	add    BYTE PTR [rax],al
   14004983e:	add    BYTE PTR [rax],al
   140049840:	adc    BYTE PTR [rsi+0x4],bl
   140049846:	add    BYTE PTR [rax],al
   140049848:	(bad)  
   140049849:	popf   
   14004984a:	add    al,0x0
   14004984c:	add    BYTE PTR [rax],al
   14004984e:	add    BYTE PTR [rax],al
   140049850:	out    dx,al
   140049851:	popf   
   140049852:	add    al,0x0
   140049854:	add    BYTE PTR [rax],al
   140049856:	add    BYTE PTR [rax],al
   140049858:	ficomp DWORD PTR [rbp+0x4]
   14004985e:	add    BYTE PTR [rax],al
   140049860:	(bad)  
   140049861:	test   eax,0x4
   140049866:	add    BYTE PTR [rax],al
   140049868:	push   rdx
   140049869:	test   eax,0x4
   14004986e:	add    BYTE PTR [rax],al
   140049870:	rex test eax,0x4
   140049876:	add    BYTE PTR [rax],al
   140049878:	xor    BYTE PTR [rcx+0x4],ch
   14004987e:	add    BYTE PTR [rax],al
   140049880:	(bad)  
   140049881:	test   eax,0x4
   140049886:	add    BYTE PTR [rax],al
   140049888:	(bad)  
   140049889:	test   eax,0x4
   14004988e:	add    BYTE PTR [rax],al
   140049890:	clc    
   140049891:	test   al,0x4
   140049893:	add    BYTE PTR [rax],al
   140049895:	add    BYTE PTR [rax],al
   140049897:	add    dh,ah
   140049899:	test   al,0x4
   14004989b:	add    BYTE PTR [rax],al
   14004989d:	add    BYTE PTR [rax],al
   14004989f:	add    al,dl
   1400498a1:	test   al,0x4
	...
   1400498af:	add    al,dh
   1400498b1:	movabs ds:0xa3d6000000000004,eax
   1400498ba:	add    al,0x0
   1400498bc:	add    BYTE PTR [rax],al
   1400498be:	add    BYTE PTR [rax],al
   1400498c0:	shl    BYTE PTR [rbx+0x4],0x0
   1400498c7:	add    BYTE PTR [rbx+riz*4+0x4],ah
   1400498cb:	add    BYTE PTR [rax],al
   1400498cd:	add    BYTE PTR [rax],al
   1400498cf:	add    BYTE PTR [rax-0x5d],bh
   1400498d2:	add    al,0x0
   1400498d4:	add    BYTE PTR [rax],al
   1400498d6:	add    BYTE PTR [rax],al
   1400498d8:	nop
   1400498d9:	movabs ds:0xa3a2000000000004,eax
   1400498e2:	add    al,0x0
   1400498e4:	add    BYTE PTR [rax],al
   1400498e6:	add    BYTE PTR [rax],al
   1400498e8:	mov    al,0xa3
   1400498ea:	add    al,0x0
	...
   1400498f8:	(bad)  
   1400498f9:	add    BYTE PTR [rax],al
   1400498fb:	add    BYTE PTR [rax],al
   1400498fd:	add    BYTE PTR [rax],al
   1400498ff:	adc    BYTE PTR [rip+0x1],0x0        # 0x140049907
   140049906:	add    BYTE PTR [rax+0x2],al
   14004990c:	add    BYTE PTR [rax],al
   14004990e:	add    BYTE PTR [rax+0x96],al
   140049914:	add    BYTE PTR [rax],al
   140049916:	add    BYTE PTR [rax+0x7],al
   14004991c:	add    BYTE PTR [rax],al
   14004991e:	add    BYTE PTR [rax+0x4],al
   140049924:	add    BYTE PTR [rax],al
   140049926:	add    BYTE PTR [rax+0x139],al
   14004992c:	add    BYTE PTR [rax],al
   14004992e:	add    BYTE PTR [rax+0x95],al
   140049934:	add    BYTE PTR [rax],al
   140049936:	add    BYTE PTR [rax+0x0],al
   14004993c:	add    BYTE PTR [rax],al
   14004993e:	add    BYTE PTR [rax],al
   140049940:	(bad)  
   140049941:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140049942:	add    al,0x0
   140049944:	add    BYTE PTR [rax],al
   140049946:	add    BYTE PTR [rax],al
   140049948:	outs   dx,BYTE PTR ds:[rsi]
   140049949:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004994a:	add    al,0x0
	...
   140049958:	loop   0x140049904
   14004995a:	add    al,0x0
	...
   140049968:	cli    
   140049969:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004996a:	add    al,0x0
   14004996c:	add    BYTE PTR [rax],al
   14004996e:	add    BYTE PTR [rax],al
   140049970:	loopne 0x140049918
   140049972:	add    al,0x0
   140049974:	add    BYTE PTR [rax],al
   140049976:	add    BYTE PTR [rax],al
   140049978:	shl    BYTE PTR [rsi+0x4],1
   14004997e:	add    BYTE PTR [rax],al
   140049980:	mov    al,0xa6
   140049982:	add    al,0x0
   140049984:	add    BYTE PTR [rax],al
   140049986:	add    BYTE PTR [rax],al
   140049988:	xchg   esp,eax
   140049989:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004998a:	add    al,0x0
   14004998c:	add    BYTE PTR [rax],al
   14004998e:	add    BYTE PTR [rax],al
   140049990:	jl     0x140049938
   140049992:	add    al,0x0
   140049994:	add    BYTE PTR [rax],al
   140049996:	add    BYTE PTR [rax],al
   140049998:	ins    BYTE PTR es:[rdi],dx
   140049999:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004999a:	add    al,0x0
   14004999c:	add    BYTE PTR [rax],al
   14004999e:	add    BYTE PTR [rax],al
   1400499a0:	push   rsp
   1400499a1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400499a2:	add    al,0x0
   1400499a4:	add    BYTE PTR [rax],al
   1400499a6:	add    BYTE PTR [rax],al
   1400499a8:	(bad)  
   1400499a9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400499aa:	add    al,0x0
   1400499ac:	add    BYTE PTR [rax],al
   1400499ae:	add    BYTE PTR [rax],al
   1400499b0:	outs   dx,BYTE PTR ds:[rsi]
   1400499b1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400499b2:	add    al,0x0
   1400499b4:	add    BYTE PTR [rax],al
   1400499b6:	add    BYTE PTR [rax],al
   1400499b8:	push   rax
   1400499b9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400499ba:	add    al,0x0
   1400499bc:	add    BYTE PTR [rax],al
   1400499be:	add    BYTE PTR [rax],al
   1400499c0:	cmp    al,0xa6
   1400499c2:	add    al,0x0
   1400499c4:	add    BYTE PTR [rax],al
   1400499c6:	add    BYTE PTR [rax],al
   1400499c8:	and    al,0xa6
   1400499ca:	add    al,0x0
   1400499cc:	add    BYTE PTR [rax],al
   1400499ce:	add    BYTE PTR [rax],al
   1400499d0:	adc    BYTE PTR [rsi+0x4],ah
   1400499d6:	add    BYTE PTR [rax],al
   1400499d8:	add    BYTE PTR [rsi+0x4],ah
   1400499de:	add    BYTE PTR [rax],al
   1400499e0:	(bad)  
   1400499e1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400499e2:	add    al,0x0
   1400499e4:	add    BYTE PTR [rax],al
   1400499e6:	add    BYTE PTR [rax],al
   1400499e8:	shl    BYTE PTR [rbp+0x4],cl
   1400499ee:	add    BYTE PTR [rax],al
   1400499f0:	ret    0x4a5
   1400499f3:	add    BYTE PTR [rax],al
   1400499f5:	add    BYTE PTR [rax],al
   1400499f7:	add    BYTE PTR [rbp+riz*4+0x4],ah
   1400499fe:	add    BYTE PTR [rax],al
   140049a00:	mov    WORD PTR [rbp+0x4],fs
   140049a06:	add    BYTE PTR [rax],al
   140049a08:	jb     0x1400499af
   140049a0a:	add    al,0x0
   140049a0c:	add    BYTE PTR [rax],al
   140049a0e:	add    BYTE PTR [rax],al
   140049a10:	push   rsi
   140049a11:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140049a12:	add    al,0x0
   140049a14:	add    BYTE PTR [rax],al
   140049a16:	add    BYTE PTR [rax],al
   140049a18:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140049a1a:	add    al,0x0
   140049a1c:	add    BYTE PTR [rax],al
   140049a1e:	add    BYTE PTR [rax],al
   140049a20:	cmps   DWORD PTR cs:[rsi],DWORD PTR es:[rdi]
   140049a22:	add    al,0x0
   140049a24:	add    BYTE PTR [rax],al
   140049a26:	add    BYTE PTR [rax],al
   140049a28:	sub    BYTE PTR [rbp+0x4],ah
	...
   140049a36:	add    BYTE PTR [rax],al
   140049a38:	adc    ch,BYTE PTR [rbx+0x4]
   140049a3e:	add    BYTE PTR [rax],al
   140049a40:	add    BYTE PTR [rbx+0x4],ch
   140049a46:	add    BYTE PTR [rax],al
   140049a48:	out    dx,al
   140049a49:	movabs al,ds:0xa0f8000000000004
   140049a52:	add    al,0x0
   140049a54:	add    BYTE PTR [rax],al
   140049a56:	add    BYTE PTR [rax],al
   140049a58:	add    al,0xa1
   140049a5a:	add    al,0x0
   140049a5c:	add    BYTE PTR [rax],al
   140049a5e:	add    BYTE PTR [rax],al
   140049a60:	and    ah,BYTE PTR [rcx+0x4]
   140049a66:	add    BYTE PTR [rax],al
   140049a68:	cmp    ah,BYTE PTR [rcx+0x4]
   140049a6e:	add    BYTE PTR [rax],al
   140049a70:	pop    rdx
   140049a71:	movabs eax,ds:0xaac6000000000004
   140049a7a:	add    al,0x0
   140049a7c:	add    BYTE PTR [rax],al
   140049a7e:	add    BYTE PTR [rax],al
   140049a80:	pop    rdx
   140049a81:	movabs ds:0xa350000000000004,eax
   140049a8a:	add    al,0x0
   140049a8c:	add    BYTE PTR [rax],al
   140049a8e:	add    BYTE PTR [rax],al
   140049a90:	cmp    BYTE PTR [rbx+0x4],ah
   140049a96:	add    BYTE PTR [rax],al
   140049a98:	movabs cs:0xa320000000000004,eax
   140049aa2:	add    al,0x0
   140049aa4:	add    BYTE PTR [rax],al
   140049aa6:	add    BYTE PTR [rax],al
   140049aa8:	or     al,0xa3
   140049aaa:	add    al,0x0
   140049aac:	add    BYTE PTR [rax],al
   140049aae:	add    BYTE PTR [rax],al
   140049ab0:	hlt    
   140049ab1:	movabs ds:0xa2ea000000000004,al
   140049aba:	add    al,0x0
   140049abc:	add    BYTE PTR [rax],al
   140049abe:	add    BYTE PTR [rax],al
   140049ac0:	shl    BYTE PTR [rdx+0x4],cl
   140049ac6:	add    BYTE PTR [rax],al
   140049ac8:	(bad)  
   140049ac9:	movabs ds:0xa2b2000000000004,al
   140049ad2:	add    al,0x0
   140049ad4:	add    BYTE PTR [rax],al
   140049ad6:	add    BYTE PTR [rax],al
   140049ad8:	test   al,0xa2
   140049ada:	add    al,0x0
   140049adc:	add    BYTE PTR [rax],al
   140049ade:	add    BYTE PTR [rax],al
   140049ae0:	movabs al,ds:0x98000000000004a2
   140049ae9:	movabs ds:0xa286000000000004,al
   140049af2:	add    al,0x0
   140049af4:	add    BYTE PTR [rax],al
   140049af6:	add    BYTE PTR [rax],al
   140049af8:	je     0x140049a9c
   140049afa:	add    al,0x0
   140049afc:	add    BYTE PTR [rax],al
   140049afe:	add    BYTE PTR [rax],al
   140049b00:	data16 movabs ds:0xa258000000000004,al
   140049b0a:	add    al,0x0
   140049b0c:	add    BYTE PTR [rax],al
   140049b0e:	add    BYTE PTR [rax],al
   140049b10:	rex.WRX movabs ds:0xa246000000000004,al
   140049b1a:	add    al,0x0
   140049b1c:	add    BYTE PTR [rax],al
   140049b1e:	add    BYTE PTR [rax],al
   140049b20:	movabs es:0xa21c000000000004,al
   140049b2a:	add    al,0x0
   140049b2c:	add    BYTE PTR [rax],al
   140049b2e:	add    BYTE PTR [rax],al
   140049b30:	(bad)  
   140049b31:	movabs ds:0xa1f0000000000004,al
   140049b3a:	add    al,0x0
   140049b3c:	add    BYTE PTR [rax],al
   140049b3e:	add    BYTE PTR [rax],al
   140049b40:	sbb    al,0xab
   140049b42:	add    al,0x0
   140049b44:	add    BYTE PTR [rax],al
   140049b46:	add    BYTE PTR [rax],al
   140049b48:	out    0xa1,al
   140049b4a:	add    al,0x0
   140049b4c:	add    BYTE PTR [rax],al
   140049b4e:	add    BYTE PTR [rax],al
   140049b50:	fisub  DWORD PTR [rcx+0x4]
   140049b56:	add    BYTE PTR [rax],al
   140049b58:	shl    BYTE PTR [rcx+0x4],1
   140049b5e:	add    BYTE PTR [rax],al
   140049b60:	enter  0x4a1,0x0
   140049b64:	add    BYTE PTR [rax],al
   140049b66:	add    BYTE PTR [rax],al
   140049b68:	mov    esp,0x4a1
   140049b6d:	add    BYTE PTR [rax],al
   140049b6f:	add    BYTE PTR [rcx+riz*4+0x4],dh
   140049b76:	add    BYTE PTR [rax],al
   140049b78:	stos   BYTE PTR es:[rdi],al
   140049b79:	movabs eax,ds:0xa19e000000000004
   140049b82:	add    al,0x0
   140049b84:	add    BYTE PTR [rax],al
   140049b86:	add    BYTE PTR [rax],al
   140049b88:	nop
   140049b89:	movabs eax,ds:0xa178000000000004
   140049b92:	add    al,0x0
   140049b94:	add    BYTE PTR [rax],al
   140049b96:	add    BYTE PTR [rax],al
   140049b98:	pop    rsp
   140049b99:	stos   BYTE PTR es:[rdi],al
   140049b9a:	add    al,0x0
   140049b9c:	add    BYTE PTR [rax],al
   140049b9e:	add    BYTE PTR [rax],al
   140049ba0:	push   0xffffffffffffffaa
   140049ba2:	add    al,0x0
   140049ba4:	add    BYTE PTR [rax],al
   140049ba6:	add    BYTE PTR [rax],al
   140049ba8:	jbe    0x140049b54
   140049baa:	add    al,0x0
   140049bac:	add    BYTE PTR [rax],al
   140049bae:	add    BYTE PTR [rax],al
   140049bb0:	sub    BYTE PTR [rdx+0x4],0x0
   140049bb7:	add    BYTE PTR [rdx+0x4aa],cl
   140049bbd:	add    BYTE PTR [rax],al
   140049bbf:	add    BYTE PTR [rdx+rbp*4+0x4],bl
   140049bc6:	add    BYTE PTR [rax],al
   140049bc8:	test   al,0xaa
   140049bca:	add    al,0x0
   140049bcc:	add    BYTE PTR [rax],al
   140049bce:	add    BYTE PTR [rax],al
   140049bd0:	mov    al,0xaa
   140049bd2:	add    al,0x0
   140049bd4:	add    BYTE PTR [rax],al
   140049bd6:	add    BYTE PTR [rax],al
   140049bd8:	mov    edx,0x4aa
	...
   140049be5:	add    BYTE PTR [rax],al
   140049be7:	add    BYTE PTR [rdx],ch
   140049be9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140049bea:	add    al,0x0
   140049bec:	add    BYTE PTR [rax],al
   140049bee:	add    BYTE PTR [rax],al
   140049bf0:	rex.R movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140049bf2:	add    al,0x0
   140049bf4:	add    BYTE PTR [rax],al
   140049bf6:	add    BYTE PTR [rax],al
   140049bf8:	(bad)  
   140049bf9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140049bfa:	add    al,0x0
	...
   140049c08:	pushf  
   140049c09:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140049c0a:	add    al,0x0
   140049c0c:	add    BYTE PTR [rax],al
   140049c0e:	add    BYTE PTR [rax],al
   140049c10:	lods   al,BYTE PTR ds:[rsi]
   140049c11:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140049c12:	add    al,0x0
   140049c14:	add    BYTE PTR [rax],al
   140049c16:	add    BYTE PTR [rax],al
   140049c18:	shl    BYTE PTR [rsp+rax*1+0x0],0x0
   140049c20:	shr    BYTE PTR [rdx+0x4],1
   140049c26:	add    BYTE PTR [rax],al
   140049c28:	shl    BYTE PTR [rsp+rax*1+0x0],cl
   140049c2f:	add    dh,ah
   140049c31:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140049c32:	add    al,0x0
   140049c34:	add    BYTE PTR [rax],al
   140049c36:	add    BYTE PTR [rax],al
   140049c38:	clc    
   140049c39:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140049c3a:	add    al,0x0
   140049c3c:	add    BYTE PTR [rax],al
   140049c3e:	add    BYTE PTR [rax],al
   140049c40:	or     BYTE PTR [rbp+0x4],ah
	...
   140049c4e:	add    BYTE PTR [rax],al
   140049c50:	jo     0x140049c53
   140049c52:	rex.RXB
   140049c53:	gs je  0x140049caa
   140049c56:	jb     0x140049cb9
   140049c58:	movsxd esp,DWORD PTR [rbp+0x45]
   140049c5b:	outs   dx,BYTE PTR ds:[rsi]
   140049c5c:	(bad)  
   140049c5d:	(bad)  
   140049c5e:	ins    BYTE PTR es:[rdi],dx
   140049c5f:	gs rex.RX ins BYTE PTR es:[rdi],dx
   140049c62:	(bad)  
   140049c63:	addr32 jae 0x140049c66
   140049c66:	jb     0x140049c69
   140049c68:	rex.RXB
   140049c69:	gs je  0x140049cc0
   140049c6c:	jb     0x140049ccf
   140049c6e:	movsxd esp,DWORD PTR [rbp+0x4c]
   140049c71:	outs   dx,DWORD PTR ds:[rsi]
   140049c72:	addr32 addr32 gs jb 0x140049cbf
   140049c77:	(bad)  
   140049c78:	outs   dx,BYTE PTR ds:[rsi]
   140049c79:	fs ins BYTE PTR es:[rdi],dx
   140049c7b:	add    BYTE PTR gs:[rax],al
   140049c7e:	jno    0x140049c81
   140049c80:	rex.RXB
   140049c81:	gs je  0x140049cd8
   140049c84:	jb     0x140049ce7
   140049c86:	movsxd esp,DWORD PTR [rbp+0x45]
   140049c89:	outs   dx,BYTE PTR ds:[rsi]
   140049c8a:	(bad)  
   140049c8b:	(bad)  
   140049c8c:	ins    BYTE PTR es:[rdi],dx
   140049c8d:	gs rex.WR
   140049c8f:	gs jbe 0x140049cf7
   140049c92:	ins    BYTE PTR es:[rdi],dx
   140049c93:	add    BYTE PTR [rdi+0x67655202],ch
   140049c99:	imul   esi,DWORD PTR [rbx+0x74],0x72547265
   140049ca0:	(bad)  
   140049ca1:	movsxd esp,DWORD PTR [rbp+0x47]
   140049ca4:	jne    0x140049d0f
   140049ca6:	fs jae 0x140049d00
   140049ca9:	add    BYTE PTR [rax],ah
   140049cab:	add    edx,DWORD PTR [rdx+rsi*2+0x61]
   140049caf:	movsxd esp,DWORD PTR [rbp+0x4d]
   140049cb2:	gs jae 0x140049d28
   140049cb5:	(bad)  
   140049cb6:	add    BYTE PTR gs:[eax],al
   140049cba:	(bad)  
   140049cbb:	add    edx,DWORD PTR [rdx+rsi*2+0x61]
   140049cbf:	movsxd esp,DWORD PTR [rbp+0x45]
   140049cc2:	jbe    0x140049d29
   140049cc4:	outs   dx,BYTE PTR ds:[rsi]
   140049cc5:	je     0x140049cc7
   140049cc7:	add    BYTE PTR [rip+0x726e5503],ch        # 0x1b272f1d0
   140049ccd:	imul   esi,DWORD PTR gs:[ebx+0x74],0x72547265
   140049cd6:	(bad)  
   140049cd7:	movsxd esp,DWORD PTR [rbp+0x47]
   140049cda:	jne    0x140049d45
   140049cdc:	fs jae 0x140049cdf
   140049cdf:	add    BYTE PTR [rbp+0x2],dl
   140049ce2:	push   rdx
   140049ce3:	gs rex.XB ins BYTE PTR es:[edi],dx
   140049ce7:	outs   dx,DWORD PTR ds:[rsi]
   140049ce8:	jae    0x140049d4f
   140049cea:	rex.WXB
   140049ceb:	gs jns 0x140049cee
   140049cee:	lea    eax,[rdx]
   140049cf0:	push   rdx
   140049cf1:	gs addr32 push rcx
   140049cf4:	jne    0x140049d5b
   140049cf6:	jb     0x140049d71
   140049cf8:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140049cfa:	outs   dx,WORD PTR ds:[rsi]
   140049cfc:	rex.WXB
   140049cfd:	gs jns 0x140049d57
   140049d00:	add    BYTE PTR [rax],al
   140049d02:	je     0x140049d06
   140049d04:	push   rdx
   140049d05:	rex.RB outs dx,BYTE PTR gs:[esi]
   140049d09:	jne    0x140049d78
   140049d0b:	rex.WXB
   140049d0c:	gs jns 0x140049d54
   140049d0f:	js     0x140049d68
   140049d11:	add    BYTE PTR [rsi+0x67655202],al
   140049d17:	rex.WRXB jo 0x140049d7f
   140049d1a:	outs   dx,BYTE PTR ds:[rsi]
   140049d1b:	rex.WXB
   140049d1c:	gs jns 0x140049d64
   140049d1f:	js     0x140049d78
   140049d21:	add    BYTE PTR [rbx+0x67655202],ah
   140049d27:	push   rbx
   140049d28:	gs je  0x140049d81
   140049d2b:	(bad)  
   140049d2c:	ins    BYTE PTR es:[rdi],dx
   140049d2d:	jne    0x140049d94
   140049d2f:	rex.RB js 0x140049d89
   140049d32:	add    BYTE PTR [rax],al
   140049d34:	pop    rsi
   140049d35:	add    dl,BYTE PTR [rdx+0x65]
   140049d38:	addr32 rex.XB jb 0x140049da1
   140049d3c:	(bad)  
   140049d3d:	je     0x140049da4
   140049d3f:	rex.WXB
   140049d40:	gs jns 0x140049d88
   140049d43:	js     0x140049d9c
   140049d45:	add    BYTE PTR [rbp+0x2],ch
   140049d48:	push   rdx
   140049d49:	gs addr32 rex.R
   140049d4c:	gs ins BYTE PTR es:[rdi],dx
   140049d4e:	gs je  0x140049db6
   140049d51:	push   rsi
   140049d52:	(bad)  
   140049d53:	ins    BYTE PTR es:[rdi],dx
   140049d54:	jne    0x140049dbb
   140049d56:	push   rdi
   140049d57:	add    dl,dh
   140049d59:	add    dl,BYTE PTR [rbx+0x74]
   140049d5c:	(bad)  
   140049d5d:	jb     0x140049dd3
   140049d5f:	push   rbx
   140049d60:	gs jb  0x140049dd9
   140049d63:	imul   esp,DWORD PTR [rbx+0x65],0x6c727443
   140049d6a:	imul   r14d,DWORD PTR [rbx+0x70],0x68637461
   140049d72:	gs jb  0x140049dcc
   140049d75:	add    BYTE PTR [rcx+rax*1+0x61567349],bl
   140049d7c:	ins    BYTE PTR es:[rdi],dx
   140049d7d:	imul   esp,DWORD PTR [rbx+rdx*2+0x69],0x4a000064
   140049d85:	add    DWORD PTR [rdi+0x65],eax
   140049d88:	je     0x140049dd6
   140049d8a:	outs   dx,BYTE PTR gs:[rsi]
   140049d8c:	addr32 je 0x140049df7
   140049d8f:	push   rbx
   140049d90:	imul   esp,DWORD PTR [rax+rax*1+0x0],0x6f430085
   140049d98:	jo     0x140049e13
   140049d9a:	push   rbx
   140049d9b:	imul   esp,DWORD PTR [rax+rax*1+0x7b],0x6e6f4300
   140049da3:	jbe    0x140049e0a
   140049da5:	jb     0x140049e1b
   140049da7:	push   rbx
   140049da8:	imul   esp,DWORD PTR [rsp+rdx*2+0x6f],0x69727453
   140049db0:	outs   dx,BYTE PTR ds:[rsi]
   140049db1:	addr32 push rbx
   140049db3:	imul   esp,DWORD PTR [rdi+rdx*2+0x0],0x4c01a700
   140049dbb:	outs   dx,DWORD PTR ds:[rsi]
   140049dbc:	outs   dx,DWORD PTR ds:[rsi]
   140049dbd:	imul   esi,DWORD PTR [rbp+0x70],0x41
   140049dc1:	movsxd esp,DWORD PTR [rbx+0x6f]
   140049dc4:	jne    0x140049e34
   140049dc6:	je     0x140049e1b
   140049dc8:	imul   esp,DWORD PTR [rdi+rdx*2+0x0],0x41564441
   140049dd0:	push   rax
   140049dd1:	xor    rsi,QWORD PTR [r10]
   140049dd4:	cs fs ins BYTE PTR es:[rdi],dx
   140049dd7:	ins    BYTE PTR es:[rdi],dx
   140049dd8:	add    BYTE PTR [rax],al
   140049dda:	outs   dx,BYTE PTR ds:[rsi]
   140049ddb:	add    al,BYTE PTR [rdi+0x65]
   140049dde:	je     0x140049e2d
   140049de0:	outs   dx,DWORD PTR ds:[rsi]
   140049de1:	fs jne 0x140049e50
   140049de4:	gs rex.W (bad) 
   140049de7:	outs   dx,BYTE PTR ds:[rsi]
   140049de8:	fs ins BYTE PTR es:[rdi],dx
   140049dea:	gs push rdi
   140049dec:	add    BYTE PTR [rax],al
   140049dee:	adc    al,BYTE PTR [rbx]
   140049df0:	rex.RXB
   140049df1:	gs je  0x140049e4a
   140049df4:	gs jb  0x140049e6a
   140049df7:	imul   ebp,DWORD PTR [rdi+0x6e],0x577845
   140049dfe:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140049dff:	add    al,BYTE PTR [rdi+0x65]
   140049e02:	je     0x140049e54
   140049e04:	jb     0x140049e75
   140049e06:	movsxd eax,DWORD PTR [rcx+0x64]
   140049e09:	fs jb  0x140049e71
   140049e0c:	jae    0x140049e81
   140049e0e:	add    BYTE PTR [rax],al
   140049e10:	add    ecx,DWORD PTR ds:[rax+0x65]
   140049e14:	(bad)  
   140049e15:	jo     0x140049e5a
   140049e17:	jb     0x140049e7e
   140049e19:	(bad)  
   140049e1a:	je     0x140049e81
   140049e1c:	add    BYTE PTR [rax],al
   140049e1e:	add    r9d,DWORD PTR [rax+0x65]
   140049e22:	(bad)  
   140049e23:	jo     0x140049e78
   140049e25:	gs je  0x140049e71
   140049e28:	outs   dx,BYTE PTR ds:[rsi]
   140049e29:	outs   dx,WORD PTR ds:[rsi]
   140049e2b:	jb     0x140049e9a
   140049e2d:	(bad)  
   140049e2e:	je     0x140049e99
   140049e30:	outs   dx,DWORD PTR ds:[rsi]
   140049e31:	outs   dx,BYTE PTR ds:[rsi]
   140049e32:	add    BYTE PTR [rax],al
   140049e34:	push   rdi
   140049e35:	add    al,BYTE PTR [rdi+0x65]
   140049e38:	je     0x140049e86
   140049e3a:	(bad)  
   140049e3b:	jae    0x140049eb1
   140049e3d:	rex.RB jb 0x140049eb2
   140049e40:	outs   dx,DWORD PTR ds:[rsi]
   140049e41:	jb     0x140049e43
   140049e43:	add    BYTE PTR [rdi],bh
   140049e45:	add    ecx,DWORD PTR [rax+0x65]
   140049e48:	(bad)  
   140049e49:	jo     0x140049e8f
   140049e4b:	gs jae 0x140049ec2
   140049e4e:	jb     0x140049ebf
   140049e50:	jns    0x140049e52
   140049e52:	add    eax,0x6c654401
   140049e57:	gs je  0x140049ebf
   140049e5a:	rex.XB jb 0x140049ec6
   140049e5d:	je     0x140049ec8
   140049e5f:	movsxd esp,DWORD PTR [rcx+0x6c]
   140049e62:	push   rbx
   140049e63:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140049e68:	outs   dx,BYTE PTR ds:[rsi]
   140049e69:	add    BYTE PTR [rbp+0x3],dl
   140049e6c:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140049e6e:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140049e76:	rex.XB jb 0x140049ee2
   140049e79:	je     0x140049ee4
   140049e7b:	movsxd esp,DWORD PTR [rcx+0x6c]
   140049e7e:	push   rbx
   140049e7f:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140049e84:	outs   dx,BYTE PTR ds:[rsi]
   140049e85:	rex.B outs dx,BYTE PTR ds:[rsi]
   140049e87:	fs push rbx
   140049e89:	jo     0x140049ef4
   140049e8b:	outs   dx,BYTE PTR ds:[rsi]
   140049e8c:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140049e8e:	jne    0x140049efe
   140049e90:	je     0x140049e92
   140049e92:	lods   eax,DWORD PTR ds:[rsi]
   140049e93:	add    al,BYTE PTR [rdi+0x65]
   140049e96:	je     0x140049ee8
   140049e98:	jb     0x140049f09
   140049e9a:	movsxd esp,DWORD PTR [rbp+0x73]
   140049e9d:	jae    0x140049ee8
   140049e9f:	add    BYTE PTR fs:[rax],al
   140049ea2:	adc    BYTE PTR [rdx],al
   140049ea4:	rex.RXB
   140049ea5:	gs je  0x140049eeb
   140049ea8:	jne    0x140049f1c
   140049eaa:	jb     0x140049f11
   140049eac:	outs   dx,BYTE PTR ds:[rsi]
   140049ead:	je     0x140049eff
   140049eaf:	jb     0x140049f20
   140049eb1:	movsxd esp,DWORD PTR [rbp+0x73]
   140049eb4:	jae    0x140049eb6
   140049eb6:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140049eb7:	add    DWORD PTR [rsi+0x72],eax
   140049eba:	gs imul r12,QWORD PTR gs:[rdx+0x72],0x797261
   140049ec4:	scas   al,BYTE PTR es:[rdi]
   140049ec5:	add    ecx,DWORD PTR [rdi+rbp*2+0x61]
   140049ec9:	imul   r12,QWORD PTR fs:[rdx+0x72],0x45797261
   140049ed2:	js     0x140049f2b
   140049ed4:	add    BYTE PTR [rax],al
   140049ed6:	and    eax,0x74736c06
   140049edb:	jb     0x140049f40
   140049edd:	ins    DWORD PTR es:[rdi],dx
   140049ede:	jo     0x140049f49
   140049ee0:	push   rdi
   140049ee1:	add    BYTE PTR [rcx+0x61654c03],ch
   140049ee7:	jbe    0x140049f4e
   140049ee9:	rex.XB jb 0x140049f55
   140049eec:	je     0x140049f57
   140049eee:	movsxd esp,DWORD PTR [rcx+0x6c]
   140049ef1:	push   rbx
   140049ef2:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140049ef7:	outs   dx,BYTE PTR ds:[rsi]
   140049ef8:	add    BYTE PTR [rax],al
   140049efa:	rex.WR add al,0x52
   140049efd:	(bad)  
   140049efe:	imul   esi,DWORD PTR [rbx+0x65],0x65637845
   140049f05:	jo     0x140049f7b
   140049f07:	imul   ebp,DWORD PTR [rdi+0x6e],0x1290000
   140049f0e:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140049f10:	je     0x140049f77
   140049f12:	jb     0x140049f57
   140049f14:	jb     0x140049f7f
   140049f16:	je     0x140049f81
   140049f18:	movsxd esp,DWORD PTR [rcx+0x6c]
   140049f1b:	push   rbx
   140049f1c:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140049f21:	outs   dx,BYTE PTR ds:[rsi]
   140049f22:	add    BYTE PTR [rax],al
   140049f24:	fadd   DWORD PTR [rbx]
   140049f26:	rex.WRB jne 0x140049f95
   140049f29:	je     0x140049f94
   140049f2b:	rex.X jns 0x140049fa2
   140049f2e:	gs push rsp
   140049f30:	outs   dx,DWORD PTR ds:[rsi]
   140049f31:	push   rdi
   140049f32:	imul   esp,DWORD PTR [rbp+riz*2+0x43],0x726168
   140049f3a:	ins    BYTE PTR es:[rdi],dx
   140049f3b:	add    eax,0x657a6953
   140049f40:	outs   dx,DWORD PTR ds:[rsi]
   140049f41:	push   dx
   140049f43:	gs jae 0x140049fb5
   140049f46:	jne    0x140049fba
   140049f48:	movsxd esp,DWORD PTR [rbp+0x0]
   140049f4b:	add    BYTE PTR [rdx+0x616f4c03],dh
   140049f51:	fs push rdx
   140049f53:	gs jae 0x140049fc5
   140049f56:	jne    0x140049fca
   140049f58:	movsxd esp,DWORD PTR [rbp+0x0]
   140049f5b:	add    BYTE PTR [rsi+0x6e694601],cl
   140049f61:	fs push rdx
   140049f63:	gs jae 0x140049fd5
   140049f66:	jne    0x140049fda
   140049f68:	movsxd esp,DWORD PTR [rbp+0x45]
   140049f6b:	js     0x140049fc4
   140049f6d:	add    BYTE PTR [rdx+0x2],ch
   140049f70:	rex.RXB
   140049f71:	gs je  0x140049fc1
   140049f74:	outs   dx,DWORD PTR ds:[rsi]
   140049f75:	fs jne 0x140049fe4
   140049f78:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x57656d61
   140049f82:	add    BYTE PTR [rax],al
   140049f84:	push   rsp
   140049f85:	add    ecx,DWORD PTR [rcx+0x6e]
   140049f88:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140049f90:	rex.XB jb 0x140049ffc
   140049f93:	je     0x140049ffe
   140049f95:	movsxd esp,DWORD PTR [rcx+0x6c]
   140049f98:	push   rbx
   140049f99:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140049f9e:	outs   dx,BYTE PTR ds:[rsi]
   140049f9f:	add    BYTE PTR [rdi],cl
   140049fa1:	add    DWORD PTR [rbp+riz*2+0x6c],eax
   140049fa5:	gs je  0x14004a00d
   140049fa8:	push   rsp
   140049fa9:	imul   ebp,DWORD PTR [rbp+0x65],0x65755172
   140049fb0:	jne    0x14004a017
   140049fb2:	push   rsp
   140049fb3:	imul   ebp,DWORD PTR [rbp+0x65],0xee0072
   140049fba:	rex.XB jb 0x14004a022
   140049fbd:	(bad)  
   140049fbe:	je     0x14004a025
   140049fc0:	push   rsp
   140049fc1:	imul   ebp,DWORD PTR [rbp+0x65],0x65755172
   140049fc8:	jne    0x14004a02f
   140049fca:	push   rsp
   140049fcb:	imul   ebp,DWORD PTR [rbp+0x65],0x5370072
   140049fd2:	push   rbx
   140049fd3:	gs je  0x14004a026
   140049fd6:	jb     0x14004a047
   140049fd8:	movsxd esp,DWORD PTR [rbp+0x73]
   140049fdb:	jae    0x14004a034
   140049fdd:	outs   dx,DWORD PTR ds:[rsi]
   140049fde:	jb     0x14004a04b
   140049fe0:	imul   ebp,DWORD PTR [rsi+0x67],0x53746553
   140049fe7:	imul   edi,DWORD PTR [rdx+0x65],0x7d0000
   140049fee:	rex.XB ins BYTE PTR es:[rdi],dx
   140049ff0:	outs   dx,DWORD PTR ds:[rsi]
   140049ff1:	jae    0x14004a058
   140049ff3:	rex.W (bad) 
   140049ff5:	outs   dx,BYTE PTR ds:[rsi]
   140049ff6:	fs ins BYTE PTR es:[rdi],dx
   140049ff8:	add    BYTE PTR gs:[rbp+0x5],ch
   140049ffc:	push   rbx
   140049ffd:	ins    BYTE PTR es:[rdi],dx
   140049ffe:	gs gs jo 0x14004a002
   14004a002:	loopne 0x14004a006
   14004a004:	rex.RXB
   14004a005:	gs je  0x14004a05b
   14004a008:	jns    0x14004a07d
   14004a00a:	je     0x14004a071
   14004a00c:	ins    DWORD PTR es:[rdi],dx
   14004a00d:	push   rsp
   14004a00e:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   14004a015:	ins    BYTE PTR es:[rdi],dx
   14004a016:	gs push rsp
   14004a018:	imul   ebp,DWORD PTR [rbp+0x65],0x44011500
   14004a01f:	gs jbe 0x14004a08b
   14004a022:	movsxd esp,DWORD PTR [rbp+0x49]
   14004a025:	outs   dx,DWORD PTR ds:[rsi]
   14004a026:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14004a028:	outs   dx,BYTE PTR ds:[rsi]
   14004a029:	je     0x14004a09d
   14004a02b:	outs   dx,DWORD PTR ds:[rsi]
   14004a02c:	ins    BYTE PTR es:[rdi],dx
   14004a02d:	add    al,ah
   14004a02f:	add    BYTE PTR [rbx+0x72],al
   14004a032:	gs (bad) 
   14004a034:	je     0x14004a09b
   14004a036:	push   rbx
   14004a037:	gs ins DWORD PTR es:[rdi],dx
   14004a039:	(bad)  
   14004a03a:	jo     0x14004a0a4
   14004a03c:	outs   dx,DWORD PTR ds:[rsi]
   14004a03d:	jb     0x14004a0a4
   14004a03f:	push   rdi
   14004a040:	add    BYTE PTR [rax],al
   14004a042:	enter  0x5705,0x61
   14004a046:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x6e695372
   14004a04e:	ins    BYTE PTR es:[edi],dx
   14004a050:	gs rex.WRXB (bad) 
   14004a053:	push   0x65
   14004a055:	movsxd esi,DWORD PTR [rax+rax*1-0x63]
   14004a059:	add    al,0x52
   14004a05b:	gs ins BYTE PTR es:[rdi],dx
   14004a05d:	gs (bad) 
   14004a05f:	jae    0x14004a0c6
   14004a061:	push   rbx
   14004a062:	gs ins DWORD PTR es:[rdi],dx
   14004a064:	(bad)  
   14004a065:	jo     0x14004a0cf
   14004a067:	outs   dx,DWORD PTR ds:[rsi]
   14004a068:	jb     0x14004a0cf
   14004a06a:	add    BYTE PTR [rax],al
   14004a06c:	or     BYTE PTR [rip+0x45746553],al        # 0x1857905c5
   14004a072:	jbe    0x14004a0d9
   14004a074:	outs   dx,BYTE PTR ds:[rsi]
   14004a075:	je     0x14004a077
   14004a077:	add    BYTE PTR [rax+rax*1+0x61657243],dh
   14004a07e:	je     0x14004a0e5
   14004a080:	rex.RB jbe 0x14004a0e8
   14004a083:	outs   dx,BYTE PTR ds:[rsi]
   14004a084:	je     0x14004a0dd
   14004a086:	add    BYTE PTR [rax],al
   14004a088:	scas   eax,DWORD PTR es:[rdi]
   14004a089:	add    al,0x52
   14004a08b:	gs jae 0x14004a0f3
   14004a08e:	je     0x14004a0d5
   14004a090:	jbe    0x14004a0f7
   14004a092:	outs   dx,BYTE PTR ds:[rsi]
   14004a093:	je     0x14004a095
   14004a095:	add    BYTE PTR [rbx+0x1],bl
   14004a098:	rex.RB js 0x14004a10b
   14004a09b:	(bad)  
   14004a09c:	outs   dx,BYTE PTR ds:[rsi]
   14004a09d:	rex.RB outs dx,BYTE PTR fs:[rsi]
   14004a0a0:	jbe    0x14004a10b
   14004a0a2:	jb     0x14004a113
   14004a0a4:	outs   dx,BYTE PTR ds:[rsi]
   14004a0a5:	ins    DWORD PTR es:[rdi],dx
   14004a0a6:	outs   dx,BYTE PTR gs:[rsi]
   14004a0a8:	je     0x14004a0fd
   14004a0aa:	je     0x14004a11e
   14004a0ac:	imul   ebp,DWORD PTR [rsi+0x67],0xb9005773
   14004a0b3:	add    ecx,DWORD PTR [rdi+rbp*2+0x63]
   14004a0b7:	(bad)  
   14004a0b8:	ins    BYTE PTR es:[rdi],dx
   14004a0b9:	rex.RX jb 0x14004a121
   14004a0bc:	add    BYTE PTR gs:[rsi],ch
   14004a0bf:	add    al,0x51
   14004a0c1:	jne    0x14004a128
   14004a0c3:	jb     0x14004a13e
   14004a0c5:	rex.R outs dx,DWORD PTR ds:[rsi]
   14004a0c7:	jae    0x14004a10d
   14004a0c9:	gs jbe 0x14004a135
   14004a0cc:	movsxd esp,DWORD PTR [rbp+0x57]
   14004a0cf:	add    BYTE PTR [rdi],al
   14004a0d1:	add    eax,0x45746553
   14004a0d6:	jb     0x14004a14a
   14004a0d8:	outs   dx,DWORD PTR ds:[rsi]
   14004a0d9:	jb     0x14004a128
   14004a0db:	outs   dx,DWORD PTR ds:[rsi]
   14004a0dc:	fs add BYTE PTR gs:[rax],al
   14004a0e0:	rex.WXB
   14004a0e1:	rex.RB push r10
   14004a0e3:	rex.WRX
   14004a0e4:	rex.RB
   14004a0e5:	xor    r14,QWORD PTR [rdx]
   14004a0e8:	cs fs ins BYTE PTR es:[rdi],dx
   14004a0eb:	ins    BYTE PTR es:[rdi],dx
   14004a0ec:	add    BYTE PTR [rax],al
   14004a0ee:	xchg   esp,eax
   14004a0ef:	add    al,0x6d
   14004a0f1:	gs ins DWORD PTR es:[rdi],dx
   14004a0f3:	ins    DWORD PTR es:[rdi],dx
   14004a0f4:	outs   dx,DWORD PTR ds:[rsi]
   14004a0f5:	jbe    0x14004a15c
   14004a0f7:	add    BYTE PTR [rsi+0x75705f02],bl
   14004a0fd:	jb     0x14004a164
   14004a0ff:	movsxd esp,DWORD PTR [rcx+0x6c]
   14004a102:	ins    BYTE PTR es:[rdi],dx
   14004a103:	add    BYTE PTR [rcx],dh
   14004a105:	add    BYTE PTR [rdi],bh
   14004a107:	ja     0x14004a171
   14004a109:	(bad)  
   14004a10a:	je     0x14004a14c
   14004a10c:	gs js  0x14004a172
   14004a10f:	gs jo  0x14004a186
   14004a112:	imul   ebp,DWORD PTR [rdi+0x6e],0x45554040
   14004a119:	rex.X
   14004a11a:	push   r8
   14004a11c:	rex.RB
   14004a11d:	rex.X
   14004a11e:	rex.R pop rax
   14004a120:	pop    rdx
   14004a121:	add    BYTE PTR [rcx],dl
   14004a123:	add    BYTE PTR [rdi],bh
   14004a125:	(bad)  
   14004a126:	xor    DWORD PTR [rbp+0x78],esp
   14004a129:	movsxd esp,DWORD PTR [rbp+0x70]
   14004a12c:	je     0x14004a197
   14004a12e:	outs   dx,DWORD PTR ds:[rsi]
   14004a12f:	outs   dx,BYTE PTR ds:[rsi]
   14004a130:	rex
   14004a131:	rex push rbp
   14004a133:	rex.RB
   14004a134:	rex.B
   14004a135:	rex.B
   14004a136:	rex pop rax
   14004a138:	pop    rdx
   14004a139:	add    BYTE PTR [rbx],cl
   14004a13b:	add    BYTE PTR [rdi],bh
   14004a13d:	(bad)  
   14004a13e:	xor    BYTE PTR [rbp+0x78],ah
   14004a141:	movsxd esp,DWORD PTR [rbp+0x70]
   14004a144:	je     0x14004a1af
   14004a146:	outs   dx,DWORD PTR ds:[rsi]
   14004a147:	outs   dx,BYTE PTR ds:[rsi]
   14004a148:	rex
   14004a149:	rex push rcx
   14004a14b:	rex.RB
   14004a14c:	rex.B
   14004a14d:	rex.B
   14004a14e:	rex
   14004a14f:	rex.B
   14004a150:	rex.RB
   14004a151:	rex.X push rcx
   14004a153:	rex.RB
   14004a154:	rex.X
   14004a155:	rex.R
   14004a156:	rex.W
   14004a157:	rex pop rdx
   14004a159:	add    BYTE PTR [rax+rax*1],cl
   14004a15c:	(bad)  
   14004a15d:	(bad)  
   14004a15e:	xor    BYTE PTR [rbp+0x78],ah
   14004a161:	movsxd esp,DWORD PTR [rbp+0x70]
   14004a164:	je     0x14004a1cf
   14004a166:	outs   dx,DWORD PTR ds:[rsi]
   14004a167:	outs   dx,BYTE PTR ds:[rsi]
   14004a168:	rex
   14004a169:	rex push rcx
   14004a16b:	rex.RB
   14004a16c:	rex.B
   14004a16d:	rex.B
   14004a16e:	rex
   14004a16f:	rex.B
   14004a170:	rex.RB
   14004a171:	rex.X push rsi
   14004a173:	xor    BYTE PTR [rax+0x40],al
   14004a176:	pop    rdx
   14004a177:	add    BYTE PTR [rip+0x303f3f00],cl        # 0x17043e07d
   14004a17d:	gs js  0x14004a1e3
   14004a180:	gs jo  0x14004a1f7
   14004a183:	imul   ebp,DWORD PTR [rdi+0x6e],0x45514040
   14004a18a:	rex.B
   14004a18b:	rex.B
   14004a18c:	rex pop rax
   14004a18e:	pop    rdx
   14004a18f:	add    BYTE PTR [rbx+0x3],ah
   14004a192:	pop    rdi
   14004a193:	jbe    0x14004a208
   14004a195:	outs   dx,BYTE PTR ds:[rsi]
   14004a196:	jo     0x14004a20a
   14004a198:	imul   ebp,DWORD PTR [rsi+0x74],0xd000066
   14004a19f:	add    eax,0x6e736377
   14004a1a4:	movsxd esi,DWORD PTR [rax+0x79]
   14004a1a7:	pop    rdi
   14004a1a8:	jae    0x14004a1aa
   14004a1aa:	xchg   BYTE PTR [rbp*2+0x6f6c6c61],al
   14004a1b1:	movsxd eax,DWORD PTR [rax]
   14004a1b3:	add    BYTE PTR [rsp+rax*1+0x66],cl
   14004a1b7:	jb     0x14004a21e
   14004a1b9:	add    BYTE PTR gs:[rax],al
   14004a1bc:	xchg   ebx,eax
   14004a1bd:	add    al,0x6d
   14004a1bf:	gs ins DWORD PTR es:[rdi],dx
   14004a1c1:	movsxd esi,DWORD PTR [rax+0x79]
   14004a1c4:	pop    rdi
   14004a1c5:	jae    0x14004a1c7
   14004a1c7:	add    BYTE PTR [rsi+0x4],bh
   14004a1ca:	ins    BYTE PTR es:[rdi],dx
   14004a1cb:	imul   esi,DWORD PTR fs:[rsi+0x0],0x77051b00
   14004a1d3:	movsxd esi,DWORD PTR [rbx+0x74]
   14004a1d6:	outs   dx,DWORD PTR ds:[rsi]
   14004a1d7:	jne    0x14004a245
   14004a1d9:	add    BYTE PTR [rbx+rax*1+0x7363775f],dl
   14004a1e0:	outs   dx,BYTE PTR ds:[rsi]
   14004a1e1:	imul   esp,DWORD PTR [rbx+0x6d],0x4960070
   14004a1e8:	ins    DWORD PTR es:[rdi],dx
   14004a1e9:	gs ins DWORD PTR es:[rdi],dx
   14004a1eb:	jae    0x14004a252
   14004a1ed:	je     0x14004a1ef
   14004a1ef:	add    BYTE PTR [rbx+0x0],cl
   14004a1f2:	pop    rdi
   14004a1f3:	rex.XB js 0x14004a26e
   14004a1f6:	push   rsp
   14004a1f7:	push   0x45776f72
   14004a1fc:	js     0x14004a261
   14004a1fe:	gs jo  0x14004a275
   14004a201:	imul   ebp,DWORD PTR [rdi+0x6e],0x5b0000
   14004a208:	pop    rdi
   14004a209:	pop    rdi
   14004a20a:	rex.XB js 0x14004a285
   14004a20d:	rex.RX jb 0x14004a271
   14004a210:	ins    DWORD PTR es:[rdi],dx
   14004a211:	gs rex.W (bad) 
   14004a214:	outs   dx,BYTE PTR ds:[rsi]
   14004a215:	fs ins BYTE PTR es:[rdi],dx
   14004a217:	gs jb  0x14004a24d
   14004a21a:	add    BYTE PTR [rax],al
   14004a21c:	xchg   edx,eax
   14004a21d:	add    al,0x6d
   14004a21f:	gs ins DWORD PTR es:[rdi],dx
   14004a221:	movsxd esi,DWORD PTR [rax+0x79]
   14004a224:	add    BYTE PTR [rax],al
   14004a226:	or     al,BYTE PTR [rax]
   14004a228:	(bad)  
   14004a229:	(bad)  
   14004a22a:	xor    BYTE PTR [rbp+0x78],ah
   14004a22d:	movsxd esp,DWORD PTR [rbp+0x70]
   14004a230:	je     0x14004a29b
   14004a232:	outs   dx,DWORD PTR ds:[rsi]
   14004a233:	outs   dx,BYTE PTR ds:[rsi]
   14004a234:	rex
   14004a235:	rex push rcx
   14004a237:	rex.RB
   14004a238:	rex.B
   14004a239:	rex.B
   14004a23a:	rex
   14004a23b:	rex.B
   14004a23c:	rex.RB
   14004a23d:	rex.X push rcx
   14004a23f:	rex.RB
   14004a240:	rex.X
   14004a241:	rex.R
   14004a242:	rex pop rdx
   14004a244:	add    BYTE PTR [rax],al
   14004a246:	out    0x1,al
   14004a248:	pop    rdi
   14004a249:	ins    BYTE PTR es:[rdi],dx
   14004a24a:	outs   dx,DWORD PTR ds:[rsi]
   14004a24b:	movsxd ebp,DWORD PTR [rbx+0x0]
   14004a24e:	add    ebx,DWORD PTR [r15+0x75]
   14004a252:	outs   dx,BYTE PTR ds:[rsi]
   14004a253:	ins    BYTE PTR es:[rdi],dx
   14004a254:	outs   dx,DWORD PTR ds:[rsi]
   14004a255:	movsxd ebp,DWORD PTR [rbx+0x0]
   14004a258:	push   rbp
   14004a259:	add    BYTE PTR [rdi+0x58],bl
   14004a25c:	movsxd esi,DWORD PTR [rax+0x74]
   14004a25f:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   14004a268:	pop    rdi
   14004a269:	(bad)  
   14004a26a:	ins    DWORD PTR es:[rdi],dx
   14004a26b:	jae    0x14004a2d4
   14004a26d:	pop    rdi
   14004a26e:	gs js  0x14004a2da
   14004a271:	je     0x14004a273
   14004a273:	add    BYTE PTR [rbp+0x775f5f00],bl
   14004a279:	addr32 gs je 0x14004a2ea
   14004a27d:	(bad)  
   14004a27e:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   14004a285:	add    BYTE PTR [rsi+0x735f5f00],cl
   14004a28b:	gs je  0x14004a2ed
   14004a28e:	(bad)  
   14004a28f:	jo     0x14004a301
   14004a291:	pop    rdi
   14004a292:	je     0x14004a30d
   14004a294:	jo     0x14004a2fb
   14004a296:	add    BYTE PTR [rax],al
   14004a298:	xor    al,BYTE PTR [riz*2+0x746978]
   14004a29f:	add    BYTE PTR [rsi],cl
   14004a2a1:	add    DWORD PTR [rdi+0x65],ebx
   14004a2a4:	js     0x14004a30f
   14004a2a6:	je     0x14004a2a8
   14004a2a8:	rol    DWORD PTR [rax],0x5f
   14004a2ab:	movsxd esp,DWORD PTR [rbp+0x78]
   14004a2ae:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x5f5f0090
   14004a2b6:	jae    0x14004a31d
   14004a2b8:	je     0x14004a32f
   14004a2ba:	jae    0x14004a321
   14004a2bc:	jb     0x14004a32b
   14004a2be:	(bad)  
   14004a2bf:	je     0x14004a329
   14004a2c1:	gs jb  0x14004a336
   14004a2c4:	add    BYTE PTR [rax],al
   14004a2c6:	jge    0x14004a2c9
   14004a2c8:	pop    rdi
   14004a2c9:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   14004a2d0:	ins    DWORD PTR es:[rdi],dx
   14004a2d1:	add    BYTE PTR [rdi+0x0],dl
   14004a2d4:	pop    rdi
   14004a2d5:	pop    rdi
   14004a2d6:	rex.XB pop r15
   14004a2d8:	jae    0x14004a34a
   14004a2da:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14004a2de:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   14004a2e5:	ins    BYTE PTR es:[rdi],dx
   14004a2e6:	gs jb  0x14004a2e9
   14004a2e9:	add    BYTE PTR [rdi],ah
   14004a2eb:	add    DWORD PTR [rdi+0x66],ebx
   14004a2ee:	ins    DWORD PTR es:[rdi],dx
   14004a2ef:	outs   dx,DWORD PTR ds:[rsi]
   14004a2f0:	fs add BYTE PTR gs:[rax],al
   14004a2f4:	rol    BYTE PTR [rax],cl
   14004a2f6:	pop    rdi
   14004a2f7:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14004a2fa:	ins    DWORD PTR es:[rdi],dx
   14004a2fb:	outs   dx,DWORD PTR ds:[rsi]
   14004a2fc:	fs add BYTE PTR gs:[rax],al
   14004a300:	ins    DWORD PTR es:[rdi],dx
   14004a301:	jae    0x14004a379
   14004a303:	movsxd esi,DWORD PTR [rdx+0x74]
   14004a306:	cs fs ins BYTE PTR es:[rdi],dx
   14004a309:	ins    BYTE PTR es:[rdi],dx
   14004a30a:	add    BYTE PTR [rax],al
   14004a30c:	(bad)  
   14004a30d:	add    BYTE PTR [rdi],bh
   14004a30f:	je     0x14004a376
   14004a311:	jb     0x14004a380
   14004a313:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   14004a31a:	pop    rcx
   14004a31b:	pop    r8
   14004a31d:	pop    rax
   14004a31e:	pop    rdx
   14004a31f:	add    BYTE PTR [rbx+0x0],bh
   14004a322:	pop    rdi
   14004a323:	pop    rdi
   14004a324:	fs ins BYTE PTR es:[rdi],dx
   14004a326:	ins    BYTE PTR es:[rdi],dx
   14004a327:	outs   dx,DWORD PTR ds:[rsi]
   14004a328:	outs   dx,BYTE PTR ds:[rsi]
   14004a329:	gs js  0x14004a395
   14004a32c:	je     0x14004a32e
   14004a32e:	nop
   14004a32f:	add    bl,BYTE PTR [rdi+0x6f]
   14004a332:	outs   dx,BYTE PTR ds:[rsi]
   14004a333:	gs js  0x14004a39f
   14004a336:	je     0x14004a338
   14004a338:	adc    al,BYTE PTR [rax]
   14004a33a:	(bad)  
   14004a33b:	(bad)  
   14004a33c:	xor    DWORD PTR [rcx+rdi*2+0x70],esi
   14004a340:	gs pop rdi
   14004a342:	imul   ebp,DWORD PTR [rsi+0x66],0x5540406f
   14004a349:	rex.RB
   14004a34a:	rex.B
   14004a34b:	rex.B
   14004a34c:	rex pop rax
   14004a34e:	pop    rdx
   14004a34f:	add    BYTE PTR [rip+0x72655f01],al        # 0x1b26a0256
   14004a355:	jb     0x14004a3c5
   14004a357:	outs   dx,DWORD PTR ds:[rsi]
   14004a358:	add    BYTE PTR [rax],al
   14004a35a:	test   eax,0x61657204
   14004a35f:	ins    BYTE PTR es:[rdi],dx
   14004a360:	ins    BYTE PTR es:[rdi],dx
   14004a361:	outs   dx,DWORD PTR ds:[rsi]
   14004a362:	movsxd eax,DWORD PTR [rax]
   14004a364:	add    DWORD PTR [rax],eax
   14004a366:	rex.WRX imul r14,QWORD PTR [rbx+0x4c],0x6e49676f
   14004a36e:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14004a376:	add    BYTE PTR [rax],al
   14004a378:	add    eax,0x73694e00
   14004a37d:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14004a37f:	rex.WRXB outs dx,BYTE PTR ds:[esi]
   14004a382:	push   rbx
   14004a383:	gs jb  0x14004a3fc
   14004a386:	imul   esp,DWORD PTR [rbx+0x65],0x72617453
   14004a38d:	je     0x14004a38f
   14004a38f:	add    BYTE PTR [rax],cl
   14004a391:	add    BYTE PTR [rsi+0x69],cl
   14004a394:	jae    0x14004a3e2
   14004a396:	outs   dx,DWORD PTR ds:[rsi]
   14004a397:	addr32 push rbx
   14004a399:	push   rax
   14004a39a:	jb     0x14004a405
   14004a39c:	outs   dx,BYTE PTR ds:[rsi]
   14004a39d:	je     0x14004a405
   14004a39f:	push   rdi
   14004a3a0:	add    BYTE PTR [rax],al
   14004a3a2:	or     DWORD PTR [rax],eax
   14004a3a4:	rex.WRX imul r14,QWORD PTR [rbx+0x4c],0x7257676f
   14004a3ac:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x694e0000
   14004a3b4:	jae    0x14004a402
   14004a3b6:	outs   dx,DWORD PTR ds:[rsi]
   14004a3b7:	rex.XB ins BYTE PTR es:[edi],dx
   14004a3ba:	gs (bad) 
   14004a3bc:	outs   dx,BYTE PTR ds:[rsi]
   14004a3bd:	jne    0x14004a42f
   14004a3bf:	add    BYTE PTR [rax+rax*1],al
   14004a3c2:	rex.WRX imul r14,QWORD PTR [rbx+0x4c],0x6e4f676f
   14004a3ca:	push   rax
   14004a3cb:	(bad)  
   14004a3cc:	jb     0x14004a441
   14004a3ce:	gs rex.RB jb 0x14004a444
   14004a3d2:	outs   dx,DWORD PTR ds:[rsi]
   14004a3d3:	jb     0x14004a3d5
   14004a3d5:	add    BYTE PTR [rdi],al
   14004a3d7:	add    BYTE PTR [rsi+0x69],cl
   14004a3da:	jae    0x14004a428
   14004a3dc:	outs   dx,DWORD PTR ds:[rsi]
   14004a3dd:	rex.WRXB outs dx,BYTE PTR ds:[esi]
   14004a3e0:	push   rbx
   14004a3e1:	imul   esp,DWORD PTR [rdi+0x6e],0x72757461
   14004a3e8:	gs rex.WRB (bad) 
   14004a3eb:	je     0x14004a450
   14004a3ed:	push   0x60000
   14004a3f2:	rex.WRX imul r14,QWORD PTR [rbx+0x4c],0x6e4f676f
   14004a3fa:	push   rbx
   14004a3fb:	imul   esp,DWORD PTR [rdi+0x6e],0x72757461
   14004a402:	rex.RB outs dx,BYTE PTR gs:[rsi]
   14004a405:	je     0x14004a479
   14004a407:	jns    0x14004a409
   14004a409:	add    BYTE PTR [rsi+0x69],cl
   14004a40c:	jae    0x14004a45a
   14004a40e:	outs   dx,DWORD PTR ds:[rsi]
   14004a40f:	cs fs ins BYTE PTR es:[edi],dx
   14004a413:	ins    BYTE PTR es:[rdi],dx
   14004a414:	add    BYTE PTR [rax],al
   14004a416:	mov    BYTE PTR [rdx],0x52
   14004a419:	je     0x14004a487
   14004a41b:	rex.XB (bad) 
   14004a41d:	jo     0x14004a493
   14004a41f:	jne    0x14004a493
   14004a421:	rex.XB outs dx,DWORD PTR gs:[rsi]
   14004a424:	outs   dx,BYTE PTR ds:[rsi]
   14004a425:	je     0x14004a48c
   14004a427:	js     0x14004a49d
   14004a429:	add    BYTE PTR [rdi+0x4],dh
   14004a42c:	push   rdx
   14004a42d:	je     0x14004a49b
   14004a42f:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14004a431:	outs   dx,DWORD PTR ds:[rsi]
   14004a432:	imul   esi,DWORD PTR [rbp+0x70],0x46
   14004a436:	jne    0x14004a4a6
   14004a438:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14004a43c:	outs   dx,BYTE PTR ds:[rsi]
   14004a43d:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14004a43f:	je     0x14004a4b3
   14004a441:	jns    0x14004a443
   14004a443:	add    BYTE PTR [rbx+0x6c745205],cl
   14004a449:	push   rsi
   14004a44a:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   14004a451:	outs   dx,BYTE PTR ds:[rsi]
   14004a452:	ja     0x14004a4bd
   14004a454:	outs   dx,BYTE PTR ds:[rsi]
   14004a455:	add    BYTE PTR fs:[rax],al
   14004a458:	outs   dx,BYTE PTR ds:[rsi]
   14004a459:	je     0x14004a4bf
   14004a45b:	ins    BYTE PTR es:[rdi],dx
   14004a45c:	ins    BYTE PTR es:[rdi],dx
   14004a45d:	cs fs ins BYTE PTR es:[rdi],dx
   14004a460:	ins    BYTE PTR es:[rdi],dx
   14004a461:	add    BYTE PTR [rcx],dh
   14004a463:	add    BYTE PTR [rbx+0x68],al
   14004a466:	(bad)  
   14004a467:	jb     0x14004a4b7
   14004a469:	gs js  0x14004a4e0
   14004a46c:	push   rdi
   14004a46d:	add    BYTE PTR [rbx+rax*1+0x55],dh
   14004a471:	outs   dx,BYTE PTR ds:[rsi]
   14004a472:	jb     0x14004a4d9
   14004a474:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
   14004a47c:	(bad)  
   14004a47d:	jae    0x14004a4f2
   14004a47f:	add    BYTE PTR [r8],al
   14004a482:	push   rbp
   14004a483:	push   rbx
   14004a484:	rex.RB push r10
   14004a486:	xor    esi,DWORD PTR [rdx]
   14004a488:	cs fs ins BYTE PTR es:[rdi],dx
   14004a48b:	ins    BYTE PTR es:[rdi],dx
   14004a48c:	add    BYTE PTR [rax],al
   14004a48e:	rex.WRXB
   14004a48f:	rex.WR
   14004a490:	rex.RB
   14004a491:	push   r13
   14004a493:	push   rsp
   14004a494:	xor    esi,DWORD PTR [rdx]
   14004a496:	cs fs ins BYTE PTR es:[rdi],dx
   14004a499:	ins    BYTE PTR es:[rdi],dx
   14004a49a:	add    BYTE PTR [rax],al
   14004a49c:	mov    WORD PTR [rax],es
   14004a49e:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14004a4a0:	push   rsp
   14004a4a1:	(bad)  
   14004a4a2:	jae    0x14004a50f
   14004a4a4:	rex.WRB
   14004a4a5:	gs ins DWORD PTR es:[rdi],dx
   14004a4a7:	rex.RX jb 0x14004a50f
   14004a4aa:	add    BYTE PTR gs:[rbp+0x546f4300],cl
   14004a4b1:	(bad)  
   14004a4b2:	jae    0x14004a51f
   14004a4b4:	rex.WRB
   14004a4b5:	gs ins DWORD PTR es:[rdi],dx
   14004a4b7:	push   rdx
   14004a4b8:	gs (bad) 
   14004a4ba:	ins    BYTE PTR es:[rdi],dx
   14004a4bb:	ins    BYTE PTR es:[rdi],dx
   14004a4bc:	outs   dx,DWORD PTR ds:[rsi]
   14004a4bd:	movsxd eax,DWORD PTR [rax]
   14004a4bf:	add    BYTE PTR [rbx+0x546f4300],cl
   14004a4c5:	(bad)  
   14004a4c6:	jae    0x14004a533
   14004a4c8:	rex.WRB
   14004a4c9:	gs ins DWORD PTR es:[rdi],dx
   14004a4cb:	rex.B ins BYTE PTR es:[rdi],dx
   14004a4cd:	ins    BYTE PTR es:[rdi],dx
   14004a4ce:	outs   dx,DWORD PTR ds:[rsi]
   14004a4cf:	movsxd eax,DWORD PTR [rax]
   14004a4d1:	add    BYTE PTR [rbx],ch
   14004a4d3:	add    BYTE PTR [rbx+0x6f],al
   14004a4d6:	rex.XB jb 0x14004a53e
   14004a4d9:	(bad)  
   14004a4da:	je     0x14004a541
   14004a4dc:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14004a4de:	jae    0x14004a554
   14004a4e0:	(bad)  
   14004a4e1:	outs   dx,BYTE PTR ds:[rsi]
   14004a4e2:	movsxd esp,DWORD PTR [rbp+0x0]
   14004a4e5:	add    BYTE PTR [rax+0x556f4300],dl
   14004a4eb:	outs   dx,BYTE PTR ds:[rsi]
   14004a4ec:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   14004a4f3:	imul   edi,DWORD PTR [rdx+0x65],0x13d0000
   14004a4fa:	rex.WB
   14004a4fb:	rex.WB
   14004a4fc:	rex.R
   14004a4fd:	rex.RX jb 0x14004a56f
   14004a500:	ins    DWORD PTR es:[rdi],dx
   14004a501:	push   rbx
   14004a502:	je     0x14004a576
   14004a504:	imul   ebp,DWORD PTR [rsi+0x67],0x43008200
   14004a50b:	outs   dx,DWORD PTR ds:[rsi]
   14004a50c:	push   rdx
   14004a50d:	gs jbe 0x14004a57f
   14004a510:	imul   esp,DWORD PTR [rbp+0x43],0x6c
   14004a514:	(bad)  
   14004a515:	jae    0x14004a58a
   14004a517:	rex.WRXB (bad) 
   14004a519:	push   0x65
   14004a51b:	movsxd esi,DWORD PTR [rax+rax*1+0x6f]
   14004a51f:	ins    BYTE PTR es:[rdi],dx
   14004a520:	xor    esi,DWORD PTR gs:[rdx]
   14004a523:	cs fs ins BYTE PTR es:[rdi],dx
   14004a526:	ins    BYTE PTR es:[rdi],dx
   14004a527:	add    BYTE PTR [rsi],cl
   14004a529:	add    BYTE PTR [rbp+0x70],cl
   14004a52c:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14004a52e:	outs   dx,BYTE PTR ds:[rsi]
   14004a52f:	imul   sp,WORD PTR [rdi+0x49],0x696e
   14004a535:	je     0x14004a5a0
   14004a537:	(bad)  
   14004a538:	ins    BYTE PTR es:[rdi],dx
   14004a539:	imul   edi,DWORD PTR [rdx+0x65],0x480000
   14004a540:	rex.WRB jo 0x14004a597
   14004a543:	gs ins BYTE PTR es:[rdi],dx
   14004a545:	gs ins DWORD PTR es:[rdi],dx
   14004a547:	gs je  0x14004a5bc
   14004a54a:	jns    0x14004a595
   14004a54c:	outs   dx,BYTE PTR ds:[rsi]
   14004a54d:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14004a555:	add    BYTE PTR [rdi+0x0],al
   14004a558:	rex.WRB jo 0x14004a5af
   14004a55b:	gs ins BYTE PTR es:[rdi],dx
   14004a55d:	gs ins DWORD PTR es:[rdi],dx
   14004a55f:	gs je  0x14004a5d4
   14004a562:	jns    0x14004a5ad
   14004a564:	outs   dx,BYTE PTR ds:[rsi]
   14004a565:	movsxd esi,DWORD PTR [rdx+0x65]
   14004a568:	ins    DWORD PTR es:[rdi],dx
   14004a569:	outs   dx,BYTE PTR gs:[rsi]
   14004a56b:	je     0x14004a5b1
   14004a56d:	push   rdi
   14004a56e:	rex.WRXB push r10
   14004a570:	add    BYTE PTR [rdx+0x0],r11b
   14004a574:	rex.WRB jo 0x14004a5cb
   14004a577:	gs ins BYTE PTR es:[rdi],dx
   14004a579:	gs ins DWORD PTR es:[rdi],dx
   14004a57b:	gs je  0x14004a5f0
   14004a57e:	jns    0x14004a5d5
   14004a580:	outs   dx,BYTE PTR ds:[rsi]
   14004a581:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   14004a588:	imul   edi,DWORD PTR [rdx+0x65],0x4d001500
   14004a58f:	jo     0x14004a5d4
   14004a591:	outs   dx,DWORD PTR ds:[rsi]
   14004a592:	outs   dx,BYTE PTR ds:[rsi]
   14004a593:	imul   sp,WORD PTR [rdi+0x55],0x696e
   14004a599:	outs   dx,BYTE PTR ds:[rsi]
   14004a59a:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14004a5a2:	add    BYTE PTR [rax],al
   14004a5a4:	or     BYTE PTR [rax],al
   14004a5a6:	rex.WRB jo 0x14004a5ec
   14004a5a9:	ins    BYTE PTR es:[rdi],dx
   14004a5aa:	imul   esp,DWORD PTR [rbp+0x6e],0x69745574
   14004a5b1:	ins    BYTE PTR es:[rdi],dx
   14004a5b2:	rex.RB js 0x14004a625
   14004a5b5:	outs   dx,DWORD PTR ds:[rsi]
   14004a5b6:	jb     0x14004a62c
   14004a5b8:	rex.RX jne 0x14004a629
   14004a5bb:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14004a5bf:	outs   dx,BYTE PTR ds:[rsi]
   14004a5c0:	jae    0x14004a5c2
   14004a5c2:	(bad)  
   14004a5c3:	add    BYTE PTR [rbp+0x70],cl
   14004a5c6:	rex.RX jb 0x14004a62e
   14004a5c9:	gs rex.WRB
   14004a5cb:	gs ins DWORD PTR es:[rdi],dx
   14004a5cd:	outs   dx,DWORD PTR ds:[rsi]
   14004a5ce:	jb     0x14004a649
   14004a5d0:	add    BYTE PTR [rax],al
   14004a5d2:	pop    rcx
   14004a5d3:	add    BYTE PTR [rbp+0x70],cl
   14004a5d6:	push   rsp
   14004a5d7:	gs ins BYTE PTR es:[rdi],dx
   14004a5d9:	gs ins DWORD PTR es:[rdi],dx
   14004a5db:	gs je  0x14004a650
   14004a5de:	jns    0x14004a633
   14004a5e0:	gs je  0x14004a636
   14004a5e3:	je     0x14004a657
   14004a5e5:	imul   ebp,DWORD PTR [rsi+0x67],0x550000
   14004a5ec:	rex.WRB jo 0x14004a643
   14004a5ef:	gs ins BYTE PTR es:[rdi],dx
   14004a5f1:	gs ins DWORD PTR es:[rdi],dx
   14004a5f3:	gs je  0x14004a668
   14004a5f6:	jns    0x14004a64b
   14004a5f8:	gs je  0x14004a63f
   14004a5fb:	push   rdi
   14004a5fc:	rex.WRXB push r10
   14004a5fe:	add    BYTE PTR [rdx],r10b
   14004a601:	add    BYTE PTR [rbp+0x70],cl
   14004a604:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14004a606:	outs   dx,BYTE PTR ds:[rsi]
   14004a607:	imul   sp,WORD PTR [rdi+0x4f],0x6570
   14004a60d:	outs   dx,BYTE PTR ds:[rsi]
   14004a60e:	add    BYTE PTR [rax],al
   14004a610:	or     al,0x0
   14004a612:	rex.WRB jo 0x14004a658
   14004a615:	outs   dx,DWORD PTR ds:[rsi]
   14004a616:	outs   dx,BYTE PTR ds:[rsi]
   14004a617:	imul   sp,WORD PTR [rdi+0x47],0x7465
   14004a61d:	push   rsi
   14004a61e:	(bad)  
   14004a61f:	ins    BYTE PTR es:[rdi],dx
   14004a620:	jne    0x14004a687
   14004a622:	add    BYTE PTR [rax],al
   14004a624:	or     eax,0x43704d00
   14004a629:	outs   dx,DWORD PTR ds:[rsi]
   14004a62a:	outs   dx,BYTE PTR ds:[rsi]
   14004a62b:	imul   sp,WORD PTR [rdi+0x47],0x7465
   14004a631:	push   rsi
   14004a632:	(bad)  
   14004a633:	ins    BYTE PTR es:[rdi],dx
   14004a634:	jne    0x14004a69b
   14004a636:	rex.B ins BYTE PTR es:[rdi],dx
   14004a638:	ins    BYTE PTR es:[rdi],dx
   14004a639:	outs   dx,DWORD PTR ds:[rsi]
   14004a63a:	movsxd eax,DWORD PTR [rax]
   14004a63c:	adc    DWORD PTR [rax],eax
   14004a63e:	rex.WRB jo 0x14004a684
   14004a641:	outs   dx,DWORD PTR ds:[rsi]
   14004a642:	outs   dx,BYTE PTR ds:[rsi]
   14004a643:	imul   sp,WORD PTR [rdi+0x49],0x6574
   14004a649:	jb     0x14004a6ac
   14004a64b:	je     0x14004a6bc
   14004a64d:	jb     0x14004a69e
   14004a64f:	jo     0x14004a6b6
   14004a651:	outs   dx,BYTE PTR ds:[rsi]
   14004a652:	add    BYTE PTR [rax],al
   14004a654:	adc    BYTE PTR [rax],al
   14004a656:	rex.WRB jo 0x14004a69c
   14004a659:	outs   dx,DWORD PTR ds:[rsi]
   14004a65a:	outs   dx,BYTE PTR ds:[rsi]
   14004a65b:	imul   sp,WORD PTR [rdi+0x49],0x6574
   14004a661:	jb     0x14004a6c4
   14004a663:	je     0x14004a6d4
   14004a665:	jb     0x14004a6ac
   14004a667:	outs   dx,BYTE PTR ds:[rsi]
   14004a668:	jne    0x14004a6d7
   14004a66a:	add    BYTE PTR [rax],al
   14004a66c:	or     al,BYTE PTR [rax]
   14004a66e:	rex.WRB jo 0x14004a6b4
   14004a671:	outs   dx,DWORD PTR ds:[rsi]
   14004a672:	outs   dx,BYTE PTR ds:[rsi]
   14004a673:	imul   sp,WORD PTR [rdi+0x43],0x6f6c
   14004a679:	jae    0x14004a6e0
   14004a67b:	add    BYTE PTR [rdi],cl
   14004a67d:	add    BYTE PTR [rbp+0x70],cl
   14004a680:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14004a682:	outs   dx,BYTE PTR ds:[rsi]
   14004a683:	imul   sp,WORD PTR [rdi+0x49],0x6574
   14004a689:	jb     0x14004a6ec
   14004a68b:	je     0x14004a6fc
   14004a68d:	jb     0x14004a6d2
   14004a68f:	ins    BYTE PTR es:[rdi],dx
   14004a690:	outs   dx,DWORD PTR ds:[rsi]
   14004a691:	jae    0x14004a6f8
   14004a693:	add    BYTE PTR [rdi+0x0],dl
   14004a696:	rex.WRB jo 0x14004a6ed
   14004a699:	gs ins BYTE PTR es:[rdi],dx
   14004a69b:	gs ins DWORD PTR es:[rdi],dx
   14004a69d:	gs je  0x14004a712
   14004a6a0:	jns    0x14004a6f5
   14004a6a2:	gs je  0x14004a6ee
   14004a6a5:	data16 rex.WRB (bad) 
   14004a6a8:	js     0x14004a6ee
   14004a6aa:	push   rdi
   14004a6ab:	rex.WRXB push r10
   14004a6ad:	add    BYTE PTR [rax],r8b
   14004a6b0:	rex.XB add BYTE PTR [r13+0x70],cl
   14004a6b4:	push   rsp
   14004a6b5:	gs ins BYTE PTR es:[rdi],dx
   14004a6b7:	gs ins DWORD PTR es:[rdi],dx
   14004a6b9:	gs je  0x14004a72e
   14004a6bc:	jns    0x14004a6ff
   14004a6be:	fs fs push rsp
   14004a6c1:	outs   dx,DWORD PTR ds:[rsi]
   14004a6c2:	rex.B jbe 0x14004a72a
   14004a6c5:	jb     0x14004a728
   14004a6c7:	addr32 gs rex.R push rdi
   14004a6cb:	rex.WRXB push r10
   14004a6cd:	add    BYTE PTR [rax],r8b
   14004a6d0:	add    BYTE PTR cs:[rbp+0x70],cl
   14004a6d4:	rex.WRB (bad) 
   14004a6d6:	outs   dx,BYTE PTR ds:[rsi]
   14004a6d7:	(bad)  
   14004a6d8:	addr32 gs jb 0x14004a72b
   14004a6dc:	jo     0x14004a743
   14004a6de:	outs   dx,BYTE PTR ds:[rsi]
   14004a6df:	add    BYTE PTR [rbx],dh
   14004a6e1:	add    BYTE PTR [rbp+0x70],cl
   14004a6e4:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14004a6e6:	je     0x14004a751
   14004a6e8:	imul   sp,WORD PTR [rbx+0x61],0x6974
   14004a6ee:	outs   dx,DWORD PTR ds:[rsi]
   14004a6ef:	outs   dx,BYTE PTR ds:[rsi]
   14004a6f0:	push   rdx
   14004a6f1:	imul   esi,DWORD PTR gs:[ebx+0x74],0x7265
   14004a6fa:	adc    eax,DWORD PTR [rax]
   14004a6fc:	rex.WRB jo 0x14004a742
   14004a6ff:	outs   dx,DWORD PTR ds:[rsi]
   14004a700:	outs   dx,BYTE PTR ds:[rsi]
   14004a701:	imul   sp,WORD PTR [rdi+0x52],0x6765
   14004a707:	imul   esi,DWORD PTR [rbx+0x74],0x6f467265
   14004a70e:	jb     0x14004a75e
   14004a710:	outs   dx,DWORD PTR ds:[rsi]
   14004a711:	je     0x14004a77c
   14004a713:	imul   sp,WORD PTR [rbx+0x61],0x6974
   14004a719:	outs   dx,DWORD PTR ds:[rsi]
   14004a71a:	outs   dx,BYTE PTR ds:[rsi]
   14004a71b:	jae    0x14004a71d
   14004a71d:	add    BYTE PTR [rdx],ch
   14004a71f:	add    BYTE PTR [rbp+0x70],cl
   14004a722:	rex.W (bad) 
   14004a724:	outs   dx,BYTE PTR ds:[rsi]
   14004a725:	fs ins BYTE PTR es:[rdi],dx
   14004a727:	gs rex.XB ins BYTE PTR es:[rdi],dx
   14004a72a:	outs   dx,DWORD PTR ds:[rsi]
   14004a72b:	jae    0x14004a792
   14004a72d:	add    BYTE PTR [rsi],dl
   14004a72f:	add    BYTE PTR [rbp+0x70],cl
   14004a732:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14004a734:	outs   dx,BYTE PTR ds:[rsi]
   14004a735:	imul   sp,WORD PTR [rdi+0x55],0x726e
   14004a73b:	imul   esi,DWORD PTR gs:[ebx+0x74],0x6f4e7265
   14004a744:	je     0x14004a7af
   14004a746:	imul   sp,WORD PTR [rbx+0x61],0x6974
   14004a74c:	outs   dx,DWORD PTR ds:[rsi]
   14004a74d:	outs   dx,BYTE PTR ds:[rsi]
   14004a74e:	jae    0x14004a750
   14004a750:	add    DWORD PTR [rax],eax
   14004a752:	rex.WRB jo 0x14004a796
   14004a755:	ins    BYTE PTR es:[rdi],dx
   14004a756:	ins    BYTE PTR es:[rdi],dx
   14004a757:	outs   dx,DWORD PTR ds:[rsi]
   14004a758:	movsxd ecx,DWORD PTR [rbp+0x65]
   14004a75b:	ins    DWORD PTR es:[rdi],dx
   14004a75c:	outs   dx,DWORD PTR ds:[rsi]
   14004a75d:	jb     0x14004a7d8
   14004a75f:	add    BYTE PTR [rbp+0x70],ch
   14004a762:	movsxd ebp,DWORD PTR [rcx+rbp*2+0x65]
   14004a766:	outs   dx,BYTE PTR ds:[rsi]
   14004a767:	je     0x14004a797
   14004a769:	fs ins BYTE PTR es:[rdi],dx
   14004a76b:	ins    BYTE PTR es:[rdi],dx
   14004a76c:	add    BYTE PTR [rax],al
   14004a76e:	push   0x0
   14004a770:	rex.WRB jo 0x14004a7c8
   14004a773:	je     0x14004a7de
   14004a775:	ins    BYTE PTR es:[rdi],dx
   14004a776:	jae    0x14004a7bd
   14004a778:	js     0x14004a7ea
   14004a77a:	outs   dx,DWORD PTR ds:[rsi]
   14004a77b:	jb     0x14004a7f1
   14004a77d:	rex.RX jne 0x14004a7ee
   14004a780:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14004a784:	outs   dx,BYTE PTR ds:[rsi]
   14004a785:	jae    0x14004a787
   14004a787:	add    BYTE PTR [rbp+0x67655202],al
   14004a78d:	rex.WRXB jo 0x14004a7f5
   14004a790:	outs   dx,BYTE PTR ds:[rsi]
   14004a791:	rex.WXB
   14004a792:	gs jns 0x14004a7da
   14004a795:	js     0x14004a7d8
   14004a797:	add    BYTE PTR [rdx+0x67655202],al
   14004a79d:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14004a79f:	je     0x14004a80a
   14004a7a1:	data16 jns 0x14004a7e7
   14004a7a4:	push   0x65676e61
   14004a7a9:	rex.WXB
   14004a7aa:	gs jns 0x14004a803
   14004a7ad:	(bad)  
   14004a7ae:	ins    BYTE PTR es:[rdi],dx
   14004a7af:	jne    0x14004a816
   14004a7b1:	add    BYTE PTR [rdx+0x67655202],dl
   14004a7b7:	push   rcx
   14004a7b8:	jne    0x14004a81f
   14004a7ba:	jb     0x14004a835
   14004a7bc:	push   rsi
   14004a7bd:	(bad)  
   14004a7be:	ins    BYTE PTR es:[rdi],dx
   14004a7bf:	jne    0x14004a826
   14004a7c1:	rex.RB js 0x14004a805
   14004a7c4:	add    BYTE PTR [rax],al
   14004a7c6:	lods   al,BYTE PTR ds:[rsi]
   14004a7c7:	add    dl,BYTE PTR [rdx+0x65]
   14004a7ca:	imul   esi,DWORD PTR [ebx+0x74],0x65537265
   14004a7d2:	jb     0x14004a84a
   14004a7d4:	imul   esp,DWORD PTR [rbx+0x65],0x6c727443
   14004a7db:	rex.W (bad) 
   14004a7dd:	outs   dx,BYTE PTR ds:[rsi]
   14004a7de:	fs ins BYTE PTR es:[rdi],dx
   14004a7e0:	gs jb  0x14004a828
   14004a7e3:	js     0x14004a83c
   14004a7e5:	add    dl,ch
   14004a7e7:	add    dl,BYTE PTR [rbx+0x65]
   14004a7ea:	je     0x14004a83f
   14004a7ec:	gs jb  0x14004a865
   14004a7ef:	imul   esp,DWORD PTR [rbx+0x65],0x74617453
   14004a7f6:	jne    0x14004a86b
   14004a7f8:	add    BYTE PTR [rax],al
   14004a7fa:	xchg   ebx,eax
   14004a7fb:	add    dl,BYTE PTR [rdx+0x65]
   14004a7fe:	addr32 push rcx
   14004a800:	jne    0x14004a867
   14004a802:	jb     0x14004a87d
   14004a804:	push   rsi
   14004a805:	(bad)  
   14004a806:	ins    BYTE PTR es:[rdi],dx
   14004a807:	jne    0x14004a86e
   14004a809:	rex.RB js 0x14004a863
   14004a80c:	add    BYTE PTR [rax],al
   14004a80e:	push   rsi
   14004a80f:	add    ecx,DWORD PTR [rcx+0x6e]
   14004a812:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14004a81a:	rex.XB jb 0x14004a886
   14004a81d:	je     0x14004a888
   14004a81f:	movsxd esp,DWORD PTR [rcx+0x6c]
   14004a822:	push   rbx
   14004a823:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14004a828:	outs   dx,BYTE PTR ds:[rsi]
   14004a829:	rex.RB js 0x14004a82c
   14004a82c:	sahf   
   14004a82d:	add    eax,0x61686e55
   14004a832:	outs   dx,BYTE PTR ds:[rsi]
   14004a833:	fs ins BYTE PTR es:[rdi],dx
   14004a835:	gs fs rex.RB js 0x14004a89d
   14004a83a:	gs jo  0x14004a8b1
   14004a83d:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14004a844:	gs jb  0x14004a847
   14004a847:	add    BYTE PTR [rsi+0x5],bl
   14004a84a:	push   rbx
   14004a84b:	gs je  0x14004a8a3
   14004a84e:	outs   dx,BYTE PTR ds:[rsi]
   14004a84f:	push   0x6c646e61
   14004a854:	gs fs rex.RB js 0x14004a8bc
   14004a859:	gs jo  0x14004a8d0
   14004a85c:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14004a863:	gs jb  0x14004a866
   14004a866:	jl     0x14004a86d
   14004a868:	push   rsp
   14004a869:	gs jb  0x14004a8d9
   14004a86c:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   14004a873:	outs   dx,DWORD PTR ds:[rsi]
   14004a874:	movsxd esp,DWORD PTR [rbp+0x73]
   14004a877:	jae    0x14004a879
   14004a879:	add    BYTE PTR [rsi],dh
   14004a87b:	add    al,0x51
   14004a87d:	jne    0x14004a8e4
   14004a87f:	jb     0x14004a8fa
   14004a881:	push   rax
   14004a882:	gs jb  0x14004a8eb
   14004a885:	outs   dx,DWORD PTR ds:[rsi]
   14004a886:	jb     0x14004a8f5
   14004a888:	(bad)  
   14004a889:	outs   dx,BYTE PTR ds:[rsi]
   14004a88a:	movsxd esp,DWORD PTR [rbp+0x43]
   14004a88d:	outs   dx,DWORD PTR ds:[rsi]
   14004a88e:	jne    0x14004a8fe
   14004a890:	je     0x14004a8f7
   14004a892:	jb     0x14004a894
   14004a894:	adc    DWORD PTR [rdx],eax
   14004a896:	rex.RXB
   14004a897:	gs je  0x14004a8dd
   14004a89a:	jne    0x14004a90e
   14004a89c:	jb     0x14004a903
   14004a89e:	outs   dx,BYTE PTR ds:[rsi]
   14004a89f:	je     0x14004a8f1
   14004a8a1:	jb     0x14004a912
   14004a8a3:	movsxd esp,DWORD PTR [rbp+0x73]
   14004a8a6:	jae    0x14004a8f1
   14004a8a8:	add    BYTE PTR fs:[rip+0x74654702],dl        # 0x1b469efb1
   14004a8af:	rex.XB jne 0x14004a924
   14004a8b2:	jb     0x14004a919
   14004a8b4:	outs   dx,BYTE PTR ds:[rsi]
   14004a8b5:	je     0x14004a90b
   14004a8b7:	push   0x64616572
   14004a8bc:	rex.WB
   14004a8bd:	add    BYTE PTR fs:[rax],al
   14004a8c0:	std    
   14004a8c1:	add    al,BYTE PTR [rdi+0x65]
   14004a8c4:	je     0x14004a91a
   14004a8c6:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   14004a8cd:	je     0x14004a8cf
   14004a8cf:	add    BYTE PTR [rcx],al
   14004a8d1:	add    al,0x4f
   14004a8d3:	jne    0x14004a949
   14004a8d5:	jo     0x14004a94c
   14004a8d7:	je     0x14004a91d
   14004a8d9:	gs (bad) 
   14004a8db:	jne    0x14004a944
   14004a8dd:	push   rbx
   14004a8de:	je     0x14004a952
   14004a8e0:	imul   ebp,DWORD PTR [rsi+0x67],0xa1000041
   14004a8e7:	add    eax,0x616d6e55
   14004a8ec:	jo     0x14004a944
   14004a8ee:	imul   esp,DWORD PTR [rbp+0x77],0x6946664f
   14004a8f5:	ins    BYTE PTR es:[rdi],dx
   14004a8f6:	add    BYTE PTR gs:[rbp+0x65724300],bh
   14004a8fd:	(bad)  
   14004a8fe:	je     0x14004a965
   14004a900:	imul   r13d,DWORD PTR [rbp+r12*2+0x4d],0x69707061
   14004a909:	outs   dx,BYTE PTR ds:[rsi]
   14004a90a:	addr32 push rdi
   14004a90c:	add    BYTE PTR [rax],al
   14004a90e:	mov    DWORD PTR [rbx],0x5670614d
   14004a914:	imul   esp,DWORD PTR [rbp+0x77],0x6946664f
   14004a91b:	ins    BYTE PTR es:[rdi],dx
   14004a91c:	add    BYTE PTR gs:[rbx],ah
   14004a91f:	add    DWORD PTR [rbp+rsi*2+0x70],eax
   14004a923:	ins    BYTE PTR es:[rdi],dx
   14004a924:	imul   esp,DWORD PTR [rbx+0x61],0x61486574
   14004a92b:	outs   dx,BYTE PTR ds:[rsi]
   14004a92c:	fs ins BYTE PTR es:[rdi],dx
   14004a92e:	add    BYTE PTR gs:[rbx+rax*1+0x64616f4c],ch
   14004a936:	imul   r12,QWORD PTR [rdx+0x72],0x41797261
   14004a93e:	add    BYTE PTR [rax],al
   14004a940:	stos   DWORD PTR es:[rdi],eax
   14004a941:	add    al,BYTE PTR [rdi+0x65]
   14004a944:	je     0x14004a996
   14004a946:	jb     0x14004a9b7
   14004a948:	movsxd esp,DWORD PTR [rbp+0x73]
   14004a94b:	jae    0x14004a995
   14004a94d:	gs (bad) 
   14004a94f:	jo     0x14004a951
   14004a951:	add    BYTE PTR [rcx+0x65724300],dh
   14004a957:	(bad)  
   14004a958:	je     0x14004a9bf
   14004a95a:	rex.RB jbe 0x14004a9c2
   14004a95d:	outs   dx,BYTE PTR ds:[rsi]
   14004a95e:	je     0x14004a9a1
   14004a960:	add    BYTE PTR [rax],al
   14004a962:	leave  
   14004a963:	add    eax,0x74696157
   14004a968:	rex.RX outs dx,DWORD PTR ds:[rsi]
   14004a96a:	jb     0x14004a9bf
   14004a96c:	imul   ebp,DWORD PTR [rsi+0x67],0x624f656c
   14004a973:	push   0x65
   14004a975:	movsxd esi,DWORD PTR [rbp+rax*2+0x78]
   14004a979:	add    BYTE PTR [rbp+0x2],ch
   14004a97c:	rex.RXB
   14004a97d:	gs je  0x14004a9cd
   14004a980:	outs   dx,DWORD PTR ds:[rsi]
   14004a981:	fs jne 0x14004a9f0
   14004a984:	gs rex.W (bad) 
   14004a987:	outs   dx,BYTE PTR ds:[rsi]
   14004a988:	fs ins BYTE PTR es:[rdi],dx
   14004a98a:	gs rex.RB js 0x14004a9e5
   14004a98e:	add    BYTE PTR [rax],al
   14004a990:	scas   eax,DWORD PTR es:[rdi]
   14004a991:	add    ecx,DWORD PTR [rdi+rbp*2+0x61]
   14004a995:	imul   r12,QWORD PTR fs:[rdx+0x72],0x57797261
   14004a99e:	add    BYTE PTR [rax],al
   14004a9a0:	rol    BYTE PTR [rax],0x43
   14004a9a3:	jb     0x14004aa0a
   14004a9a5:	(bad)  
   14004a9a6:	je     0x14004aa0d
   14004a9a8:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x5605b200
   14004a9b1:	gs jb  0x14004aa07
   14004a9b4:	gs je  0x14004a9fa
   14004a9b7:	outs   dx,DWORD PTR ds:[rsi]
   14004a9b8:	outs   dx,BYTE PTR ds:[rsi]
   14004a9b9:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x73614d6e
   14004a9c2:	imul   eax,DWORD PTR [rax],0xffffff8d
   14004a9c5:	add    BYTE PTR [rbx+0x6f],al
   14004a9c8:	ins    DWORD PTR es:[rdi],dx
   14004a9c9:	jo     0x14004aa2c
   14004a9cb:	jb     0x14004aa32
   14004a9cd:	imul   r13d,DWORD PTR [rbp+r12*2+0x54],0x656d69
   14004a9d6:	mov    dh,0x5
   14004a9d8:	push   rsi
   14004a9d9:	gs jb  0x14004aa45
   14004a9dc:	data16 jns 0x14004aa35
   14004a9df:	gs jb  0x14004aa55
   14004a9e2:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f666e49
   14004a9e9:	push   rdi
   14004a9ea:	add    BYTE PTR [rax],al
   14004a9ec:	ja     0x14004a9f3
   14004a9ee:	push   rbx
   14004a9ef:	ja     0x14004aa5a
   14004a9f1:	je     0x14004aa56
   14004a9f3:	push   0x68546f54
   14004a9f8:	jb     0x14004aa5f
   14004a9fa:	(bad)  
   14004a9fb:	add    BYTE PTR fs:[rax],al
   14004a9fe:	jnp    0x14004aa02
   14004aa00:	rex.RXB
   14004aa01:	gs je  0x14004aa52
   14004aa04:	(bad)  
   14004aa05:	je     0x14004aa70
   14004aa07:	jbe    0x14004aa6e
   14004aa09:	push   rbx
   14004aa0a:	jns    0x14004aa7f
   14004aa0c:	je     0x14004aa73
   14004aa0e:	ins    DWORD PTR es:[rdi],dx
   14004aa0f:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14004aa11:	outs   dx,WORD PTR ds:[rsi]
   14004aa13:	add    bh,dl
   14004aa15:	add    al,BYTE PTR [rdi+0x65]
   14004aa18:	je     0x14004aa6d
   14004aa1a:	jns    0x14004aa8f
   14004aa1c:	je     0x14004aa83
   14004aa1e:	ins    DWORD PTR es:[rdi],dx
   14004aa1f:	imul   r14d,DWORD PTR [rdx+0x65],0x726f7463
   14004aa27:	jns    0x14004aa80
   14004aa29:	add    BYTE PTR [rip+0x74654702],bh        # 0x1b469f131
   14004aa2f:	imul   r13d,DWORD PTR [rbp+r12*2+0x41],0x69727474
   14004aa38:	(bad)  
   14004aa39:	jne    0x14004aaaf
   14004aa3b:	gs jae 0x14004aa95
   14004aa3e:	add    BYTE PTR [rax],al
   14004aa40:	pop    rsp
   14004aa41:	add    al,0x52
   14004aa43:	gs (bad) 
   14004aa45:	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x0],0x47024400
   14004aa4f:	gs je  0x14004aa98
   14004aa52:	imul   ebp,DWORD PTR [rbp+riz*2+0x53],0x45657a69
   14004aa5a:	js     0x14004aa5c
   14004aa5c:	imul   eax,DWORD PTR [rbx],0x6e73765f
   14004aa62:	ja     0x14004aad4
   14004aa64:	jb     0x14004aacf
   14004aa66:	outs   dx,BYTE PTR ds:[rsi]
   14004aa67:	je     0x14004aacf
   14004aa69:	add    BYTE PTR [rdx+0x63775f03],cl
   14004aa6f:	jae    0x14004aada
   14004aa71:	movsxd ebp,DWORD PTR [rbp+0x70]
   14004aa74:	add    BYTE PTR [rax],al
   14004aa76:	add    DWORD PTR [rip+0x63736377],eax        # 0x1a3780df3
   14004aa7c:	push   0xffffffffc3000072
   14004aa81:	add    ebx,DWORD PTR [rdi+0x77]
   14004aa84:	outs   dx,WORD PTR ds:[rsi]
   14004aa86:	jo     0x14004aaed
   14004aa88:	outs   dx,BYTE PTR ds:[rsi]
   14004aa89:	add    BYTE PTR [rax+rax*1+0x6765625f],bh
   14004aa90:	imul   ebp,DWORD PTR [rsi+0x74],0x61657268
   14004aa97:	fs gs js 0x14004aa9b
   14004aa9b:	add    bl,ch
   14004aa9d:	add    al,0x74
   14004aa9f:	outs   dx,DWORD PTR ds:[rsi]
   14004aaa0:	ja     0x14004ab0e
   14004aaa2:	outs   dx,DWORD PTR ds:[rsi]
   14004aaa3:	ja     0x14004ab0a
   14004aaa5:	jb     0x14004aaa7
   14004aaa7:	add    BYTE PTR [rdi],dh
   14004aaa9:	add    al,0x66
   14004aaab:	outs   dx,DWORD PTR gs:[rsi]
   14004aaad:	data16 add BYTE PTR [rax],al
   14004aab0:	ds add al,0x66
   14004aab3:	addr32 gs je 0x14004ab2e
   14004aab7:	jae    0x14004aab9
   14004aab9:	add    BYTE PTR [rax+0x4],bh
   14004aabc:	imul   esi,DWORD PTR [rbx+0x77],0x63617073
   14004aac3:	add    BYTE PTR gs:[rax],al
   14004aac6:	ss add al,0x66
   14004aac9:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
   14004aacd:	add    BYTE PTR gs:[rax],al
   14004aad0:	(bad)  
   14004aad1:	add    BYTE PTR [rbx+0x6f],al
   14004aad4:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14004aad6:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14004aade:	rex.RB js 0x14004aae1
   14004aae1:	add    BYTE PTR [rax],dl
   14004aae3:	add    BYTE PTR [rsi+0x65],dl
   14004aae6:	jb     0x14004ab39
   14004aae8:	jne    0x14004ab4f
   14004aaea:	jb     0x14004ab65
   14004aaec:	push   rsi
   14004aaed:	(bad)  
   14004aaee:	ins    BYTE PTR es:[rdi],dx
   14004aaef:	jne    0x14004ab56
   14004aaf1:	push   rdi
   14004aaf2:	add    BYTE PTR [rax],al
   14004aaf4:	push   rsi
   14004aaf5:	rex.RB push r10
   14004aaf7:	push   rbx
   14004aaf8:	rex.WB
   14004aaf9:	rex.WRXB
   14004aafa:	rex.WRX
   14004aafb:	cs fs ins BYTE PTR es:[rdi],dx
   14004aafe:	ins    BYTE PTR es:[rdi],dx
   14004aaff:	add    BYTE PTR [rax+0x0],ch
   14004ab02:	pop    rdi
   14004ab03:	pop    rdi
   14004ab04:	push   rdx
   14004ab05:	push   rsp
   14004ab06:	rex.R jns 0x14004ab77
   14004ab09:	(bad)  
   14004ab0a:	ins    DWORD PTR es:[rdi],dx
   14004ab0b:	imul   esp,DWORD PTR [rbx+0x43],0x747361
   14004ab12:	xchg   ecx,eax
   14004ab13:	add    al,0x6d
   14004ab15:	gs ins DWORD PTR es:[rdi],dx
   14004ab17:	movsxd ebp,DWORD PTR [rbp+0x70]
   14004ab1a:	add    BYTE PTR [rax],al
   14004ab1c:	add    al,BYTE PTR [rip+0x63736377]        # 0x1a3780e99
   14004ab22:	ins    DWORD PTR es:[rdi],dx
   14004ab23:	jo     0x14004ab25
	...

Disassembly of section .data:

000000014004b000 <.data>:
   14004b000:	(bad)  
   14004b001:	(bad)  
   14004b002:	(bad)  
   14004b003:	inc    DWORD PTR [rax]
	...
   14004b00d:	add    BYTE PTR [rax],al
   14004b00f:	add    BYTE PTR [rax-0x21],al
   14004b012:	add    al,BYTE PTR [rax+0x1]
   14004b015:	add    BYTE PTR [rax],al
   14004b017:	add    BYTE PTR [rcx],al
   14004b019:	add    BYTE PTR [rax],al
   14004b01b:	add    BYTE PTR [rax],al
   14004b01d:	add    BYTE PTR [rax],al
   14004b01f:	add    BYTE PTR [rdx],dh
   14004b021:	movabs ds:0x5dcd00002b992ddf,al
   14004b02a:	and    dl,dl
   14004b02c:	data16 (bad) 
   14004b02e:	(bad)  
   14004b02f:	inc    DWORD PTR [rax]
	...
   14004b059:	add    BYTE PTR [rbx],al
   14004b05b:	add    BYTE PTR [rax],al
   14004b05d:	add    BYTE PTR [rax],al
   14004b05f:	add    al,al
   14004b061:	inc    DWORD PTR [rax+rax*2]
   14004b064:	add    DWORD PTR [rax],eax
   14004b066:	add    BYTE PTR [rax],al
   14004b068:	rol    BYTE PTR [rdx+0x3],0x40
   14004b06c:	add    DWORD PTR [rax],eax
   14004b06e:	add    BYTE PTR [rax],al
   14004b070:	mov    WORD PTR [rsi],?
   14004b072:	add    eax,DWORD PTR [rax+0x1]
   14004b075:	add    BYTE PTR [rax],al
   14004b077:	add    BYTE PTR [rax-0x50],bh
   14004b07a:	add    al,0x40
   14004b07c:	add    DWORD PTR [rax],eax
   14004b07e:	add    BYTE PTR [rax],al
   14004b080:	rcr    BYTE PTR [rax],0x0
   14004b083:	rex add DWORD PTR [rax],eax
   14004b086:	add    BYTE PTR [rax],al
   14004b088:	add    DWORD PTR [rax],eax
   14004b08a:	add    BYTE PTR [rax],al
   14004b08c:	add    BYTE PTR [rax],al
   14004b08e:	add    BYTE PTR [rax],al
   14004b090:	or     BYTE PTR [rdi+0x14003],0x0
   14004b097:	add    al,cl
   14004b099:	retf   0x4003
   14004b09c:	add    DWORD PTR [rax],eax
   14004b09e:	add    BYTE PTR [rax],al
   14004b0a0:	call   0x14004b0a8
   14004b0a5:	add    BYTE PTR [rax],al
   14004b0a7:	add    BYTE PTR [rax+0x140038f],ah
   14004b0ad:	add    BYTE PTR [rax],al
   14004b0af:	add    ah,cl
   14004b0b1:	retf   0x4003
   14004b0b4:	add    DWORD PTR [rax],eax
	...
   14004b0be:	add    BYTE PTR [rax],al
   14004b0c0:	enter  0x38f,0x40
   14004b0c4:	add    DWORD PTR [rax],eax
   14004b0c6:	add    BYTE PTR [rax],al
   14004b0c8:	ror    dl,1
   14004b0ca:	add    eax,DWORD PTR [rax+0x1]
	...
   14004b0d5:	add    BYTE PTR [rax],al
   14004b0d7:	add    al,ch
   14004b0d9:	pop    QWORD PTR [rbx]
   14004b0db:	rex add DWORD PTR [rax],eax
   14004b0de:	add    BYTE PTR [rax],al
   14004b0e0:	fmul   st(2),st
   14004b0e2:	add    eax,DWORD PTR [rax+0x1]
   14004b0e5:	add    BYTE PTR [rax],al
   14004b0e7:	add    BYTE PTR [rcx],al
   14004b0e9:	add    BYTE PTR [rax],al
   14004b0eb:	add    BYTE PTR [rax],al
   14004b0ed:	add    BYTE PTR [rax],al
   14004b0ef:	add    al,bh
   14004b0f1:	pop    QWORD PTR [rbx]
   14004b0f3:	rex add DWORD PTR [rax],eax
   14004b0f6:	add    BYTE PTR [rax],al
   14004b0f8:	loopne 0x14004b0c4
   14004b0fa:	add    eax,DWORD PTR [rax+0x1]
   14004b0fd:	add    BYTE PTR [rax],al
   14004b0ff:	add    BYTE PTR [rcx],al
   14004b101:	add    BYTE PTR [rax],al
   14004b103:	add    BYTE PTR [rax],al
   14004b105:	add    BYTE PTR [rax],al
   14004b107:	add    BYTE PTR [rax],cl
   14004b109:	nop
   14004b10a:	add    eax,DWORD PTR [rax+0x1]
   14004b10d:	add    BYTE PTR [rax],al
   14004b10f:	add    al,ah
   14004b111:	retf   0x4003
   14004b114:	add    DWORD PTR [rax],eax
	...
   14004b11e:	add    BYTE PTR [rax],al
   14004b120:	sub    BYTE PTR [rax+0x14003],dl
   14004b126:	add    BYTE PTR [rax],al
   14004b128:	lock retf 0x4003
   14004b12c:	add    DWORD PTR [rax],eax
	...
   14004b136:	add    BYTE PTR [rax],al
   14004b138:	rex xchg eax,eax
   14004b13a:	add    eax,DWORD PTR [rax+0x1]
   14004b13d:	add    BYTE PTR [rax],al
   14004b13f:	add    al,dh
   14004b141:	retf   0x4003
   14004b144:	add    DWORD PTR [rax],eax
	...
   14004b14e:	add    BYTE PTR [rax],al
   14004b150:	pop    rax
   14004b151:	nop
   14004b152:	add    eax,DWORD PTR [rax+0x1]
   14004b155:	add    BYTE PTR [rax],al
   14004b157:	add    al,dh
   14004b159:	retf   0x4003
   14004b15c:	add    DWORD PTR [rax],eax
	...
   14004b166:	add    BYTE PTR [rax],al
   14004b168:	jo     0x14004b0fa
   14004b16a:	add    eax,DWORD PTR [rax+0x1]
   14004b16d:	add    BYTE PTR [rax],al
   14004b16f:	add    al,dh
   14004b171:	retf   0x4003
   14004b174:	add    DWORD PTR [rax],eax
	...
   14004b17e:	add    BYTE PTR [rax],al
   14004b180:	mov    BYTE PTR [rax+0x14003],dl
   14004b186:	add    BYTE PTR [rax],al
   14004b188:	lock retf 0x4003
   14004b18c:	add    DWORD PTR [rax],eax
	...
   14004b196:	add    BYTE PTR [rax],al
   14004b198:	movabs al,ds:0x400000001400390
   14004b1a1:	retf   
   14004b1a2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004b1ad:	add    BYTE PTR [rax],al
   14004b1af:	add    BYTE PTR [rax+0x1400390],bh
   14004b1b5:	add    BYTE PTR [rax],al
   14004b1b7:	add    BYTE PTR [rbx+rcx*8],cl
   14004b1ba:	add    eax,DWORD PTR [rax+0x1]
	...
   14004b1c5:	add    BYTE PTR [rax],al
   14004b1c7:	add    al,bl
   14004b1c9:	nop
   14004b1ca:	add    eax,DWORD PTR [rax+0x1]
   14004b1cd:	add    BYTE PTR [rax],al
   14004b1cf:	add    ah,cl
   14004b1d1:	retf   0x4003
   14004b1d4:	add    DWORD PTR [rax],eax
	...
   14004b1de:	add    BYTE PTR [rax],al
   14004b1e0:	clc    
   14004b1e1:	nop
   14004b1e2:	add    eax,DWORD PTR [rax+0x1]
   14004b1e5:	add    BYTE PTR [rax],al
   14004b1e7:	add    BYTE PTR [rbx+rcx*8],dl
   14004b1ea:	add    eax,DWORD PTR [rax+0x1]
	...
   14004b1f5:	add    BYTE PTR [rax],al
   14004b1f7:	add    BYTE PTR [rax],dl
   14004b1f9:	xchg   ecx,eax
   14004b1fa:	add    eax,DWORD PTR [rax+0x1]
   14004b1fd:	add    BYTE PTR [rax],al
   14004b1ff:	add    BYTE PTR [rbx+rcx*8],dl
   14004b202:	add    eax,DWORD PTR [rax+0x1]
	...
   14004b20d:	add    BYTE PTR [rax],al
   14004b20f:	add    BYTE PTR [rax],ah
   14004b211:	xchg   ecx,eax
   14004b212:	add    eax,DWORD PTR [rax+0x1]
   14004b215:	add    BYTE PTR [rax],al
   14004b217:	add    BYTE PTR [rax],bl
   14004b219:	retf   
   14004b21a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004b225:	add    BYTE PTR [rax],al
   14004b227:	add    BYTE PTR [rax],dh
   14004b229:	xchg   ecx,eax
   14004b22a:	add    eax,DWORD PTR [rax+0x1]
   14004b22d:	add    BYTE PTR [rax],al
   14004b22f:	add    BYTE PTR [rax],ch
   14004b231:	retf   
   14004b232:	add    eax,DWORD PTR [rax+0x1]
   14004b235:	add    BYTE PTR [rax],al
   14004b237:	add    BYTE PTR [rcx],al
   14004b239:	add    BYTE PTR [rax],al
   14004b23b:	add    BYTE PTR [rax],al
   14004b23d:	add    BYTE PTR [rax],al
   14004b23f:	add    BYTE PTR [rax-0x6f],cl
   14004b242:	add    eax,DWORD PTR [rax+0x1]
   14004b245:	add    BYTE PTR [rax],al
   14004b247:	add    BYTE PTR [rax],ch
   14004b249:	retf   
   14004b24a:	add    eax,DWORD PTR [rax+0x1]
   14004b24d:	add    BYTE PTR [rax],al
   14004b24f:	add    BYTE PTR [rcx],al
   14004b251:	add    BYTE PTR [rax],al
   14004b253:	add    BYTE PTR [rax],al
   14004b255:	add    BYTE PTR [rax],al
   14004b257:	add    BYTE PTR [rax-0x6f],ah
   14004b25a:	add    eax,DWORD PTR [rax+0x1]
   14004b25d:	add    BYTE PTR [rax],al
   14004b25f:	add    ah,bl
   14004b261:	retf   0x4003
   14004b264:	add    DWORD PTR [rax],eax
   14004b266:	add    BYTE PTR [rax],al
   14004b268:	add    DWORD PTR [rax],eax
   14004b26a:	add    BYTE PTR [rax],al
   14004b26c:	add    BYTE PTR [rax],al
   14004b26e:	add    BYTE PTR [rax],al
   14004b270:	add    BYTE PTR [rsi+0x14003],cl
   14004b276:	add    BYTE PTR [rax],al
   14004b278:	sub    bl,cl
   14004b27a:	add    eax,DWORD PTR [rax+0x1]
   14004b27d:	add    BYTE PTR [rax],al
   14004b27f:	add    bh,bh
   14004b281:	(bad)  
   14004b282:	(bad)  
   14004b283:	inc    DWORD PTR [rax]
   14004b285:	add    BYTE PTR [rax],al
   14004b287:	add    BYTE PTR [rax-0x6f],dh
   14004b28a:	add    eax,DWORD PTR [rax+0x1]
   14004b28d:	add    BYTE PTR [rax],al
   14004b28f:	add    BYTE PTR [rbx+rcx*8],bh
   14004b292:	add    eax,DWORD PTR [rax+0x1]
	...
   14004b29d:	add    BYTE PTR [rax],al
   14004b29f:	add    BYTE PTR [rax+0x1400391],cl
   14004b2a5:	add    BYTE PTR [rax],al
   14004b2a7:	add    BYTE PTR [rbx+rcx*8],bh
   14004b2aa:	add    eax,DWORD PTR [rax+0x1]
	...
   14004b2b5:	add    BYTE PTR [rax],al
   14004b2b7:	add    BYTE PTR [rax+0x1400391],bl
   14004b2bd:	add    BYTE PTR [rax],al
   14004b2bf:	add    BYTE PTR [rbx+rcx*8],bh
   14004b2c2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004b2cd:	add    BYTE PTR [rax],al
   14004b2cf:	add    BYTE PTR [rax+0x1400391],ch
   14004b2d5:	add    BYTE PTR [rax],al
   14004b2d7:	add    BYTE PTR [rbx+rcx*8],bh
   14004b2da:	add    eax,DWORD PTR [rax+0x1]
	...
   14004b2e5:	add    BYTE PTR [rax],al
   14004b2e7:	add    BYTE PTR [rax+0x1400391],bh
   14004b2ed:	add    BYTE PTR [rax],al
   14004b2ef:	add    BYTE PTR [rbx+rcx*8+0x3],al
   14004b2f3:	rex add DWORD PTR [rax],eax
   14004b2f6:	add    BYTE PTR [rax],al
   14004b2f8:	adc    BYTE PTR [rcx+0x1],0x0
   14004b2fc:	add    BYTE PTR [rax],al
   14004b2fe:	add    BYTE PTR [rax],al
   14004b300:	enter  0x391,0x40
   14004b304:	add    DWORD PTR [rax],eax
   14004b306:	add    BYTE PTR [rax],al
   14004b308:	or     al,0xcb
   14004b30a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004b315:	add    BYTE PTR [rax],al
   14004b317:	add    al,bl
   14004b319:	xchg   ecx,eax
   14004b31a:	add    eax,DWORD PTR [rax+0x1]
   14004b31d:	add    BYTE PTR [rax],al
   14004b31f:	add    BYTE PTR [rbx+rcx*8],cl
   14004b322:	add    eax,DWORD PTR [rax+0x1]
	...
   14004b32d:	add    BYTE PTR [rax],al
   14004b32f:	add    al,ch
   14004b331:	xchg   ecx,eax
   14004b332:	add    eax,DWORD PTR [rax+0x1]
   14004b335:	add    BYTE PTR [rax],al
   14004b337:	add    al,dl
   14004b339:	retf   0x4003
   14004b33c:	add    DWORD PTR [rax],eax
	...
   14004b346:	add    BYTE PTR [rax],al
   14004b348:	add    BYTE PTR [rdx+0x14003],dl
   14004b34e:	add    BYTE PTR [rax],al
   14004b350:	rex.W retf 
   14004b352:	add    eax,DWORD PTR [rax+0x1]
   14004b355:	add    BYTE PTR [rax],al
   14004b357:	add    al,dl
   14004b359:	(bad)  
   14004b35a:	add    BYTE PTR [rax],al
   14004b35c:	add    BYTE PTR [rax],al
   14004b35e:	add    BYTE PTR [rax],al
   14004b360:	and    BYTE PTR [rdx+0x14003],dl
   14004b366:	add    BYTE PTR [rax],al
   14004b368:	rex.W retf 
   14004b36a:	add    eax,DWORD PTR [rax+0x1]
   14004b36d:	add    BYTE PTR [rax],al
   14004b36f:	add    BYTE PTR [rax],al
   14004b371:	add    DWORD PTR [rax],eax
   14004b373:	add    BYTE PTR [rax],al
   14004b375:	add    BYTE PTR [rax],al
   14004b377:	add    BYTE PTR [rax-0x6e],al
   14004b37a:	add    eax,DWORD PTR [rax+0x1]
   14004b37d:	add    BYTE PTR [rax],al
   14004b37f:	add    BYTE PTR [rax-0x35],cl
   14004b382:	add    eax,DWORD PTR [rax+0x1]
   14004b385:	add    BYTE PTR [rax],al
   14004b387:	add    al,cl
   14004b389:	add    BYTE PTR [rax],al
   14004b38b:	add    BYTE PTR [rax],al
   14004b38d:	add    BYTE PTR [rax],al
   14004b38f:	add    BYTE PTR [rax-0x6e],ah
   14004b392:	add    eax,DWORD PTR [rax+0x1]
   14004b395:	add    BYTE PTR [rax],al
   14004b397:	add    BYTE PTR [rax-0x35],cl
   14004b39a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004b3a5:	add    BYTE PTR [rax],al
   14004b3a7:	add    BYTE PTR [rax-0x6e],bh
   14004b3aa:	add    eax,DWORD PTR [rax+0x1]
   14004b3ad:	add    BYTE PTR [rax],al
   14004b3af:	add    BYTE PTR [rbx+rcx*8],cl
   14004b3b2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004b3bd:	add    BYTE PTR [rax],al
   14004b3bf:	add    BYTE PTR [rax+0x1400392],cl
   14004b3c5:	add    BYTE PTR [rax],al
   14004b3c7:	add    BYTE PTR [rax-0x35],bl
   14004b3ca:	add    eax,DWORD PTR [rax+0x1]
   14004b3cd:	add    BYTE PTR [rax],al
   14004b3cf:	add    BYTE PTR [rax+0x1],ch
   14004b3d2:	add    BYTE PTR [rax],al
   14004b3d4:	add    BYTE PTR [rax],al
   14004b3d6:	add    BYTE PTR [rax],al
   14004b3d8:	movabs al,ds:0x5800000001400392
   14004b3e1:	retf   
   14004b3e2:	add    eax,DWORD PTR [rax+0x1]
   14004b3e5:	add    BYTE PTR [rax],al
   14004b3e7:	add    BYTE PTR [rip+0x8],al        # 0x14004b3f5
   14004b3ed:	add    BYTE PTR [rax],al
   14004b3ef:	add    BYTE PTR [rax+0x1400392],bh
   14004b3f5:	add    BYTE PTR [rax],al
   14004b3f7:	add    BYTE PTR [rax-0x35],bl
   14004b3fa:	add    eax,DWORD PTR [rax+0x1]
   14004b3fd:	add    BYTE PTR [rax],al
   14004b3ff:	add    BYTE PTR [rdi+0x0],bh
   14004b402:	add    BYTE PTR [rax],al
   14004b404:	add    BYTE PTR [rax],al
   14004b406:	add    BYTE PTR [rax],al
   14004b408:	rcl    BYTE PTR [rdx+0x14003],1
   14004b40e:	add    BYTE PTR [rax],al
   14004b410:	ror    dl,1
   14004b412:	add    eax,DWORD PTR [rax+0x1]
	...
   14004b41d:	add    BYTE PTR [rax],al
   14004b41f:	add    al,dh
   14004b421:	xchg   edx,eax
   14004b422:	add    eax,DWORD PTR [rax+0x1]
   14004b425:	add    BYTE PTR [rax],al
   14004b427:	add    al,dl
   14004b429:	retf   0x4003
   14004b42c:	add    DWORD PTR [rax],eax
   14004b42e:	add    BYTE PTR [rax],al
   14004b430:	add    al,BYTE PTR [rax]
   14004b432:	add    BYTE PTR [rax],al
   14004b434:	add    BYTE PTR [rax],al
   14004b436:	add    BYTE PTR [rax],al
   14004b438:	or     BYTE PTR [rbx+0x14003],dl
   14004b43e:	add    BYTE PTR [rax],al
   14004b440:	ror    dl,1
   14004b442:	add    eax,DWORD PTR [rax+0x1]
   14004b445:	add    BYTE PTR [rax],al
   14004b447:	add    BYTE PTR [rax+0x93a],al
   14004b44d:	add    BYTE PTR [rax],al
   14004b44f:	add    BYTE PTR [rax],ah
   14004b451:	xchg   ebx,eax
   14004b452:	add    eax,DWORD PTR [rax+0x1]
   14004b455:	add    BYTE PTR [rax],al
   14004b457:	add    al,dl
   14004b459:	retf   0x4003
   14004b45c:	add    DWORD PTR [rax],eax
	...
   14004b466:	add    BYTE PTR [rax],al
   14004b468:	cmp    BYTE PTR [rbx+0x14003],dl
   14004b46e:	add    BYTE PTR [rax],al
   14004b470:	ror    dl,1
   14004b472:	add    eax,DWORD PTR [rax+0x1]
	...
   14004b47d:	add    BYTE PTR [rax],al
   14004b47f:	add    BYTE PTR [rax-0x6d],bl
   14004b482:	add    eax,DWORD PTR [rax+0x1]
   14004b485:	add    BYTE PTR [rax],al
   14004b487:	add    BYTE PTR [rax-0x35],ch
   14004b48a:	add    eax,DWORD PTR [rax+0x1]
   14004b48d:	add    BYTE PTR [rax],al
   14004b48f:	add    BYTE PTR [rax+rax*1+0x0],ah
   14004b493:	add    BYTE PTR [rax],al
   14004b495:	add    BYTE PTR [rax],al
   14004b497:	add    BYTE PTR [rax+0x1400393],al
   14004b49d:	add    BYTE PTR [rax],al
   14004b49f:	add    BYTE PTR [rax-0x35],ch
   14004b4a2:	add    eax,DWORD PTR [rax+0x1]
   14004b4a5:	add    BYTE PTR [rax],al
   14004b4a7:	add    BYTE PTR [rcx+rax*1],ch
   14004b4aa:	add    BYTE PTR [rax],al
   14004b4ac:	add    BYTE PTR [rax],al
   14004b4ae:	add    BYTE PTR [rax],al
   14004b4b0:	mov    al,0x93
   14004b4b2:	add    eax,DWORD PTR [rax+0x1]
   14004b4b5:	add    BYTE PTR [rax],al
   14004b4b7:	add    BYTE PTR [rax-0x35],ch
   14004b4ba:	add    eax,DWORD PTR [rax+0x1]
   14004b4bd:	add    BYTE PTR [rax],al
   14004b4bf:	add    BYTE PTR [rax+rax*1],bh
   14004b4c2:	add    BYTE PTR [rax],al
   14004b4c4:	add    BYTE PTR [rax],al
   14004b4c6:	add    BYTE PTR [rax],al
   14004b4c8:	call   0x14144b860
   14004b4cd:	add    BYTE PTR [rax],al
   14004b4cf:	add    BYTE PTR [rax-0x35],ch
   14004b4d2:	add    eax,DWORD PTR [rax+0x1]
   14004b4d5:	add    BYTE PTR [rax],al
   14004b4d7:	add    BYTE PTR [rdi],cl
   14004b4d9:	add    BYTE PTR [rax],al
   14004b4db:	add    BYTE PTR [rax],al
   14004b4dd:	add    BYTE PTR [rax],al
   14004b4df:	add    BYTE PTR [rax],bl
   14004b4e1:	xchg   esp,eax
   14004b4e2:	add    eax,DWORD PTR [rax+0x1]
   14004b4e5:	add    BYTE PTR [rax],al
   14004b4e7:	add    BYTE PTR [rax-0x35],ch
   14004b4ea:	add    eax,DWORD PTR [rax+0x1]
	...
   14004b4f5:	add    BYTE PTR [rax],al
   14004b4f7:	add    BYTE PTR [rax],dh
   14004b4f9:	xchg   esp,eax
   14004b4fa:	add    eax,DWORD PTR [rax+0x1]
   14004b4fd:	add    BYTE PTR [rax],al
   14004b4ff:	add    BYTE PTR [rax-0x35],ch
   14004b502:	add    eax,DWORD PTR [rax+0x1]
   14004b505:	add    BYTE PTR [rax],al
   14004b507:	add    al,al
   14004b509:	(bad)  
   14004b50a:	add    DWORD PTR [rax],eax
   14004b50c:	add    BYTE PTR [rax],al
   14004b50e:	add    BYTE PTR [rax],al
   14004b510:	pop    rax
   14004b511:	xchg   esp,eax
   14004b512:	add    eax,DWORD PTR [rax+0x1]
   14004b515:	add    BYTE PTR [rax],al
   14004b517:	add    BYTE PTR [rax-0x35],ch
   14004b51a:	add    eax,DWORD PTR [rax+0x1]
   14004b51d:	add    BYTE PTR [rax],al
   14004b51f:	add    al,dl
   14004b521:	(bad)  
   14004b522:	add    BYTE PTR [rax],al
   14004b524:	add    BYTE PTR [rax],al
   14004b526:	add    BYTE PTR [rax],al
   14004b528:	js     0x14004b4be
   14004b52a:	add    eax,DWORD PTR [rax+0x1]
   14004b52d:	add    BYTE PTR [rax],al
   14004b52f:	add    BYTE PTR [rax-0x35],ch
   14004b532:	add    eax,DWORD PTR [rax+0x1]
   14004b535:	add    BYTE PTR [rax],al
   14004b537:	add    BYTE PTR [rax],cl
   14004b539:	add    BYTE PTR [rax],al
   14004b53b:	add    BYTE PTR [rax],al
   14004b53d:	add    BYTE PTR [rax],al
   14004b53f:	add    BYTE PTR [rax+0x1400394],dl
   14004b545:	add    BYTE PTR [rax],al
   14004b547:	add    BYTE PTR [rax-0x35],ch
   14004b54a:	add    eax,DWORD PTR [rax+0x1]
   14004b54d:	add    BYTE PTR [rax],al
   14004b54f:	add    BYTE PTR [rip+0x0],al        # 0x14004b555
   14004b555:	add    BYTE PTR [rax],al
   14004b557:	add    al,al
   14004b559:	xchg   esp,eax
   14004b55a:	add    eax,DWORD PTR [rax+0x1]
   14004b55d:	add    BYTE PTR [rax],al
   14004b55f:	add    BYTE PTR [rax-0x35],ch
   14004b562:	add    eax,DWORD PTR [rax+0x1]
   14004b565:	add    BYTE PTR [rax],al
   14004b567:	add    BYTE PTR [rax+0x2],bl
   14004b56a:	add    BYTE PTR [rax],al
   14004b56c:	add    BYTE PTR [rax],al
   14004b56e:	add    BYTE PTR [rax],al
   14004b570:	add    BYTE PTR [rbp+0x14003],dl
   14004b576:	add    BYTE PTR [rax],al
   14004b578:	push   0x14003cb
   14004b57d:	add    BYTE PTR [rax],al
   14004b57f:	add    BYTE PTR [rax+rax*1],dl
   14004b582:	add    BYTE PTR [rax],al
   14004b584:	add    BYTE PTR [rax],al
   14004b586:	add    BYTE PTR [rax],al
   14004b588:	cmp    BYTE PTR [rbp+0x14003],dl
   14004b58e:	add    BYTE PTR [rax],al
   14004b590:	push   0x14003cb
   14004b595:	add    BYTE PTR [rax],al
   14004b597:	add    BYTE PTR [rip+0x0],al        # 0x14004b59d
   14004b59d:	add    BYTE PTR [rax],al
   14004b59f:	add    BYTE PTR [rax-0x6b],ah
   14004b5a2:	add    eax,DWORD PTR [rax+0x1]
   14004b5a5:	add    BYTE PTR [rax],al
   14004b5a7:	add    BYTE PTR [rax-0x35],ch
   14004b5aa:	add    eax,DWORD PTR [rax+0x1]
   14004b5ad:	add    BYTE PTR [rax],al
   14004b5af:	add    BYTE PTR [rax],al
   14004b5b1:	add    BYTE PTR [rax],bl
   14004b5b3:	add    BYTE PTR [rax],al
   14004b5b5:	add    BYTE PTR [rax],al
   14004b5b7:	add    BYTE PTR [rax+0x1400395],al
   14004b5bd:	add    BYTE PTR [rax],al
   14004b5bf:	add    BYTE PTR [rax-0x35],ch
   14004b5c2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004b5cd:	add    BYTE PTR [rax],al
   14004b5cf:	add    BYTE PTR [rax+0x1400395],dh
   14004b5d5:	add    BYTE PTR [rax],al
   14004b5d7:	add    BYTE PTR [rax-0x35],ch
   14004b5da:	add    eax,DWORD PTR [rax+0x1]
   14004b5dd:	add    BYTE PTR [rax],al
   14004b5df:	add    BYTE PTR [rcx],al
   14004b5e1:	add    BYTE PTR [rax],al
   14004b5e3:	add    BYTE PTR [rax],al
   14004b5e5:	add    BYTE PTR [rax],al
   14004b5e7:	add    al,dl
   14004b5e9:	xchg   ebp,eax
   14004b5ea:	add    eax,DWORD PTR [rax+0x1]
   14004b5ed:	add    BYTE PTR [rax],al
   14004b5ef:	add    BYTE PTR [rax-0x35],ch
   14004b5f2:	add    eax,DWORD PTR [rax+0x1]
   14004b5f5:	add    BYTE PTR [rax],al
   14004b5f7:	add    BYTE PTR [rbx],al
	...
   14004b601:	xchg   esi,eax
   14004b602:	add    eax,DWORD PTR [rax+0x1]
   14004b605:	add    BYTE PTR [rax],al
   14004b607:	add    BYTE PTR [rax-0x35],ch
   14004b60a:	add    eax,DWORD PTR [rax+0x1]
   14004b60d:	add    BYTE PTR [rax],al
   14004b60f:	add    BYTE PTR [rax+0xb],bh
   14004b615:	add    BYTE PTR [rax],al
   14004b617:	add    BYTE PTR [rax],ch
   14004b619:	xchg   esi,eax
   14004b61a:	add    eax,DWORD PTR [rax+0x1]
   14004b61d:	add    BYTE PTR [rax],al
   14004b61f:	add    BYTE PTR [rax-0x35],ch
   14004b622:	add    eax,DWORD PTR [rax+0x1]
   14004b625:	add    BYTE PTR [rax],al
   14004b627:	add    BYTE PTR [rax],dl
   14004b629:	(bad)  
   14004b62a:	add    BYTE PTR [rax],al
   14004b62c:	add    BYTE PTR [rax],al
   14004b62e:	add    BYTE PTR [rax],al
   14004b630:	push   rax
   14004b631:	xchg   esi,eax
   14004b632:	add    eax,DWORD PTR [rax+0x1]
   14004b635:	add    BYTE PTR [rax],al
   14004b637:	add    BYTE PTR [rax-0x35],ch
   14004b63a:	add    eax,DWORD PTR [rax+0x1]
   14004b63d:	add    BYTE PTR [rax],al
   14004b63f:	add    al,al
   14004b641:	(bad)  
   14004b642:	add    DWORD PTR [rax],eax
   14004b644:	add    BYTE PTR [rax],al
   14004b646:	add    BYTE PTR [rax],al
   14004b648:	adc    BYTE PTR [rsi+0x14003],0x0
   14004b64f:	add    BYTE PTR [rax-0x35],ch
   14004b652:	add    eax,DWORD PTR [rax+0x1]
   14004b655:	add    BYTE PTR [rax],al
   14004b657:	add    al,ah
   14004b659:	xchg   ebx,eax
   14004b65a:	add    al,0x0
   14004b65c:	add    BYTE PTR [rax],al
   14004b65e:	add    BYTE PTR [rax],al
   14004b660:	mov    al,0x96
   14004b662:	add    eax,DWORD PTR [rax+0x1]
   14004b665:	add    BYTE PTR [rax],al
   14004b667:	add    BYTE PTR [rax-0x35],ch
   14004b66a:	add    eax,DWORD PTR [rax+0x1]
   14004b66d:	add    BYTE PTR [rax],al
   14004b66f:	add    BYTE PTR [rax+0x3a],bl
   14004b675:	add    BYTE PTR [rax],al
   14004b677:	add    al,bl
   14004b679:	xchg   esi,eax
   14004b67a:	add    eax,DWORD PTR [rax+0x1]
   14004b67d:	add    BYTE PTR [rax],al
   14004b67f:	add    BYTE PTR [rax-0x35],ch
   14004b682:	add    eax,DWORD PTR [rax+0x1]
	...
   14004b68d:	add    BYTE PTR [rax],al
   14004b68f:	add    al,bh
   14004b691:	xchg   esi,eax
   14004b692:	add    eax,DWORD PTR [rax+0x1]
   14004b695:	add    BYTE PTR [rax],al
   14004b697:	add    BYTE PTR [rax-0x35],ch
   14004b69a:	add    eax,DWORD PTR [rax+0x1]
   14004b69d:	add    BYTE PTR [rax],al
   14004b69f:	add    BYTE PTR [rcx],al
   14004b6a1:	add    BYTE PTR [rax],al
   14004b6a3:	add    BYTE PTR [rax],al
   14004b6a5:	add    BYTE PTR [rax],al
   14004b6a7:	add    BYTE PTR [rax],ah
   14004b6a9:	xchg   edi,eax
   14004b6aa:	add    eax,DWORD PTR [rax+0x1]
   14004b6ad:	add    BYTE PTR [rax],al
   14004b6af:	add    BYTE PTR [rax-0x35],ch
   14004b6b2:	add    eax,DWORD PTR [rax+0x1]
   14004b6b5:	add    BYTE PTR [rax],al
   14004b6b7:	add    BYTE PTR [rcx],al
   14004b6b9:	add    BYTE PTR [rax],al
   14004b6bb:	add    BYTE PTR [rax],al
   14004b6bd:	add    BYTE PTR [rax],al
   14004b6bf:	add    BYTE PTR [rax-0x69],cl
   14004b6c2:	add    eax,DWORD PTR [rax+0x1]
   14004b6c5:	add    BYTE PTR [rax],al
   14004b6c7:	add    BYTE PTR [rax-0x35],ch
   14004b6ca:	add    eax,DWORD PTR [rax+0x1]
   14004b6cd:	add    BYTE PTR [rax],al
   14004b6cf:	add    BYTE PTR [rip+0x0],al        # 0x14004b6d5
   14004b6d5:	add    BYTE PTR [rax],al
   14004b6d7:	add    BYTE PTR [rax-0x69],dh
   14004b6da:	add    eax,DWORD PTR [rax+0x1]
   14004b6dd:	add    BYTE PTR [rax],al
   14004b6df:	add    BYTE PTR [rax-0x35],ch
   14004b6e2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004b6ed:	add    BYTE PTR [rax],al
   14004b6ef:	add    BYTE PTR [rax+0x1400397],ah
   14004b6f5:	add    BYTE PTR [rax],al
   14004b6f7:	add    BYTE PTR [rax-0x35],ch
   14004b6fa:	add    eax,DWORD PTR [rax+0x1]
   14004b6fd:	add    BYTE PTR [rax],al
   14004b6ff:	add    BYTE PTR [rax+rax*1+0x0],ah
   14004b703:	add    BYTE PTR [rax],al
   14004b705:	add    BYTE PTR [rax],al
   14004b707:	add    al,al
   14004b709:	xchg   edi,eax
   14004b70a:	add    eax,DWORD PTR [rax+0x1]
   14004b70d:	add    BYTE PTR [rax],al
   14004b70f:	add    BYTE PTR [rax-0x35],ch
   14004b712:	add    eax,DWORD PTR [rax+0x1]
	...
   14004b71d:	add    BYTE PTR [rax],al
   14004b71f:	add    al,dh
   14004b721:	xchg   edi,eax
   14004b722:	add    eax,DWORD PTR [rax+0x1]
   14004b725:	add    BYTE PTR [rax],al
   14004b727:	add    BYTE PTR [rax-0x35],ch
   14004b72a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004b735:	add    BYTE PTR [rax],al
   14004b737:	add    BYTE PTR [rax],ah
   14004b739:	cwde   
   14004b73a:	add    eax,DWORD PTR [rax+0x1]
   14004b73d:	add    BYTE PTR [rax],al
   14004b73f:	add    BYTE PTR [rax-0x35],ch
   14004b742:	add    eax,DWORD PTR [rax+0x1]
   14004b745:	add    BYTE PTR [rax],al
   14004b747:	add    BYTE PTR [rax],al
   14004b749:	add    DWORD PTR [rax],eax
   14004b74b:	add    BYTE PTR [rax],al
   14004b74d:	add    BYTE PTR [rax],al
   14004b74f:	add    BYTE PTR [rax-0x68],al
   14004b752:	add    eax,DWORD PTR [rax+0x1]
   14004b755:	add    BYTE PTR [rax],al
   14004b757:	add    BYTE PTR [rax-0x35],ch
   14004b75a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004b765:	add    BYTE PTR [rax],al
   14004b767:	add    BYTE PTR [rax-0x68],ch
   14004b76a:	add    eax,DWORD PTR [rax+0x1]
   14004b76d:	add    BYTE PTR [rax],al
   14004b76f:	add    BYTE PTR [rax-0x35],ch
   14004b772:	add    eax,DWORD PTR [rax+0x1]
	...
   14004b77d:	add    BYTE PTR [rax],al
   14004b77f:	add    BYTE PTR [rax+0x1400398],al
   14004b785:	add    BYTE PTR [rax],al
   14004b787:	add    BYTE PTR [rax-0x35],ch
   14004b78a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004b795:	add    BYTE PTR [rax],al
   14004b797:	add    BYTE PTR [rax+0x1400398],bl
   14004b79d:	add    BYTE PTR [rax],al
   14004b79f:	add    BYTE PTR [rax-0x35],ch
   14004b7a2:	add    eax,DWORD PTR [rax+0x1]
   14004b7a5:	add    BYTE PTR [rax],al
   14004b7a7:	add    BYTE PTR [rcx+rax*1],ch
   14004b7aa:	add    BYTE PTR [rax],al
   14004b7ac:	add    BYTE PTR [rax],al
   14004b7ae:	add    BYTE PTR [rax],al
   14004b7b0:	mov    al,0x98
   14004b7b2:	add    eax,DWORD PTR [rax+0x1]
   14004b7b5:	add    BYTE PTR [rax],al
   14004b7b7:	add    BYTE PTR [rax-0x35],ch
   14004b7ba:	add    eax,DWORD PTR [rax+0x1]
   14004b7bd:	add    BYTE PTR [rax],al
   14004b7bf:	add    BYTE PTR [rdx],dh
   14004b7c1:	add    BYTE PTR [rax],al
   14004b7c3:	add    BYTE PTR [rax],al
   14004b7c5:	add    BYTE PTR [rax],al
   14004b7c7:	add    al,al
   14004b7c9:	cwde   
   14004b7ca:	add    eax,DWORD PTR [rax+0x1]
   14004b7cd:	add    BYTE PTR [rax],al
   14004b7cf:	add    BYTE PTR [rax-0x35],ch
   14004b7d2:	add    eax,DWORD PTR [rax+0x1]
   14004b7d5:	add    BYTE PTR [rax],al
   14004b7d7:	add    al,dl
   14004b7d9:	(bad)  
   14004b7da:	add    BYTE PTR [rax],al
   14004b7dc:	add    BYTE PTR [rax],al
   14004b7de:	add    BYTE PTR [rax],al
   14004b7e0:	loopne 0x14004b77a
   14004b7e2:	add    eax,DWORD PTR [rax+0x1]
   14004b7e5:	add    BYTE PTR [rax],al
   14004b7e7:	add    al,cl
   14004b7e9:	retf   0x4003
   14004b7ec:	add    DWORD PTR [rax],eax
	...
   14004b7f6:	add    BYTE PTR [rax],al
   14004b7f8:	clc    
   14004b7f9:	cwde   
   14004b7fa:	add    eax,DWORD PTR [rax+0x1]
   14004b7fd:	add    BYTE PTR [rax],al
   14004b7ff:	add    al,cl
   14004b801:	retf   0x4003
   14004b804:	add    DWORD PTR [rax],eax
	...
   14004b80e:	add    BYTE PTR [rax],al
   14004b810:	adc    BYTE PTR [rcx+0x14003],bl
   14004b816:	add    BYTE PTR [rax],al
   14004b818:	enter  0x3ca,0x40
   14004b81c:	add    DWORD PTR [rax],eax
	...
   14004b826:	add    BYTE PTR [rax],al
   14004b828:	xor    BYTE PTR [rcx+0x14003],bl
   14004b82e:	add    BYTE PTR [rax],al
   14004b830:	rex.W retf 
   14004b832:	add    eax,DWORD PTR [rax+0x1]
	...
   14004b83d:	add    BYTE PTR [rax],al
   14004b83f:	add    BYTE PTR [rax-0x67],al
   14004b842:	add    eax,DWORD PTR [rax+0x1]
   14004b845:	add    BYTE PTR [rax],al
   14004b847:	add    BYTE PTR [rax-0x35],cl
   14004b84a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004b855:	add    BYTE PTR [rax],al
   14004b857:	add    BYTE PTR [rax-0x67],dl
   14004b85a:	add    eax,DWORD PTR [rax+0x1]
   14004b85d:	add    BYTE PTR [rax],al
   14004b85f:	add    BYTE PTR [rax-0x35],cl
   14004b862:	add    eax,DWORD PTR [rax+0x1]
	...
   14004b86d:	add    BYTE PTR [rax],al
   14004b86f:	add    BYTE PTR [rax-0x67],ah
   14004b872:	add    eax,DWORD PTR [rax+0x1]
   14004b875:	add    BYTE PTR [rax],al
   14004b877:	add    BYTE PTR [rax-0x35],cl
   14004b87a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004b885:	add    BYTE PTR [rax],al
   14004b887:	add    BYTE PTR [rax-0x67],dh
   14004b88a:	add    eax,DWORD PTR [rax+0x1]
   14004b88d:	add    BYTE PTR [rax],al
   14004b88f:	add    BYTE PTR [rax-0x35],cl
   14004b892:	add    eax,DWORD PTR [rax+0x1]
   14004b895:	add    BYTE PTR [rax],al
   14004b897:	add    BYTE PTR [rcx],al
   14004b899:	add    BYTE PTR [rax],al
   14004b89b:	add    BYTE PTR [rax],al
   14004b89d:	add    BYTE PTR [rax],al
   14004b89f:	add    BYTE PTR [rax+0x1400399],al
   14004b8a5:	add    BYTE PTR [rax],al
   14004b8a7:	add    BYTE PTR [rax-0x35],cl
   14004b8aa:	add    eax,DWORD PTR [rax+0x1]
	...
   14004b8b5:	add    BYTE PTR [rax],al
   14004b8b7:	add    BYTE PTR [rax+0x1400399],dl
   14004b8bd:	add    BYTE PTR [rax],al
   14004b8bf:	add    BYTE PTR [rax-0x35],cl
   14004b8c2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004b8cd:	add    BYTE PTR [rax],al
   14004b8cf:	add    BYTE PTR [rax+0x1400399],ah
   14004b8d5:	add    BYTE PTR [rax],al
   14004b8d7:	add    BYTE PTR [rax-0x35],cl
   14004b8da:	add    eax,DWORD PTR [rax+0x1]
	...
   14004b8e5:	add    BYTE PTR [rax],al
   14004b8e7:	add    BYTE PTR [rax+0x1400399],dh
   14004b8ed:	add    BYTE PTR [rax],al
   14004b8ef:	add    BYTE PTR [rax-0x35],cl
   14004b8f2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004b8fd:	add    BYTE PTR [rax],al
   14004b8ff:	add    al,al
   14004b901:	cdq    
   14004b902:	add    eax,DWORD PTR [rax+0x1]
   14004b905:	add    BYTE PTR [rax],al
   14004b907:	add    BYTE PTR [rax-0x35],cl
   14004b90a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004b915:	add    BYTE PTR [rax],al
   14004b917:	add    al,dl
   14004b919:	cdq    
   14004b91a:	add    eax,DWORD PTR [rax+0x1]
   14004b91d:	add    BYTE PTR [rax],al
   14004b91f:	add    BYTE PTR [rax-0x35],cl
   14004b922:	add    eax,DWORD PTR [rax+0x1]
   14004b925:	add    BYTE PTR [rax],al
   14004b927:	add    BYTE PTR [rcx+rax*1],ch
   14004b92a:	add    BYTE PTR [rax],al
   14004b92c:	add    BYTE PTR [rax],al
   14004b92e:	add    BYTE PTR [rax],al
   14004b930:	lock cdq 
   14004b932:	add    eax,DWORD PTR [rax+0x1]
   14004b935:	add    BYTE PTR [rax],al
   14004b937:	add    BYTE PTR [rax-0x35],cl
   14004b93a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004b949:	(bad)  
   14004b94a:	add    eax,DWORD PTR [rax+0x1]
   14004b94d:	add    BYTE PTR [rax],al
   14004b94f:	add    BYTE PTR [rax-0x35],cl
   14004b952:	add    eax,DWORD PTR [rax+0x1]
	...
   14004b95d:	add    BYTE PTR [rax],al
   14004b95f:	add    BYTE PTR [rax],bl
   14004b961:	(bad)  
   14004b962:	add    eax,DWORD PTR [rax+0x1]
   14004b965:	add    BYTE PTR [rax],al
   14004b967:	add    BYTE PTR [rax-0x35],cl
   14004b96a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004b975:	add    BYTE PTR [rax],al
   14004b977:	add    BYTE PTR [rax],ch
   14004b979:	(bad)  
   14004b97a:	add    eax,DWORD PTR [rax+0x1]
   14004b97d:	add    BYTE PTR [rax],al
   14004b97f:	add    BYTE PTR [rax-0x35],cl
   14004b982:	add    eax,DWORD PTR [rax+0x1]
	...
   14004b98d:	add    BYTE PTR [rax],al
   14004b98f:	add    BYTE PTR [rax],bh
   14004b991:	(bad)  
   14004b992:	add    eax,DWORD PTR [rax+0x1]
   14004b995:	add    BYTE PTR [rax],al
   14004b997:	add    BYTE PTR [rax-0x35],cl
   14004b99a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004b9a5:	add    BYTE PTR [rax],al
   14004b9a7:	add    BYTE PTR [rax-0x66],cl
   14004b9aa:	add    eax,DWORD PTR [rax+0x1]
   14004b9ad:	add    BYTE PTR [rax],al
   14004b9af:	add    BYTE PTR [rax-0x35],cl
   14004b9b2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004b9bd:	add    BYTE PTR [rax],al
   14004b9bf:	add    BYTE PTR [rax-0x66],bl
   14004b9c2:	add    eax,DWORD PTR [rax+0x1]
   14004b9c5:	add    BYTE PTR [rax],al
   14004b9c7:	add    BYTE PTR [rax-0x35],cl
   14004b9ca:	add    eax,DWORD PTR [rax+0x1]
	...
   14004b9d5:	add    BYTE PTR [rax],al
   14004b9d7:	add    BYTE PTR [rax-0x66],ch
   14004b9da:	add    eax,DWORD PTR [rax+0x1]
   14004b9dd:	add    BYTE PTR [rax],al
   14004b9df:	add    BYTE PTR [rax-0x35],cl
   14004b9e2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004b9ed:	add    BYTE PTR [rax],al
   14004b9ef:	add    BYTE PTR [rax-0x66],bh
   14004b9f2:	add    eax,DWORD PTR [rax+0x1]
   14004b9f5:	add    BYTE PTR [rax],al
   14004b9f7:	add    BYTE PTR [rax-0x35],cl
   14004b9fa:	add    eax,DWORD PTR [rax+0x1]
	...
   14004ba05:	add    BYTE PTR [rax],al
   14004ba07:	add    BYTE PTR [rax+0x140039a],bl
   14004ba0d:	add    BYTE PTR [rax],al
   14004ba0f:	add    BYTE PTR [rax-0x35],cl
   14004ba12:	add    eax,DWORD PTR [rax+0x1]
	...
   14004ba1d:	add    BYTE PTR [rax],al
   14004ba1f:	add    BYTE PTR [rax+0x140039a],ch
   14004ba25:	add    BYTE PTR [rax],al
   14004ba27:	add    al,cl
   14004ba29:	retf   0x4003
   14004ba2c:	add    DWORD PTR [rax],eax
   14004ba2e:	add    BYTE PTR [rax],al
   14004ba30:	adc    BYTE PTR [rsi],cl
   14004ba32:	add    BYTE PTR [rax],al
   14004ba34:	add    BYTE PTR [rax],al
   14004ba36:	add    BYTE PTR [rax],al
   14004ba38:	rcr    BYTE PTR [rdx+0x14003],1
   14004ba3e:	add    BYTE PTR [rax],al
   14004ba40:	jo     0x14004ba0d
   14004ba42:	add    eax,DWORD PTR [rax+0x1]
	...
   14004ba4d:	add    BYTE PTR [rax],al
   14004ba4f:	add    al,ch
   14004ba51:	(bad)  
   14004ba52:	add    eax,DWORD PTR [rax+0x1]
   14004ba55:	add    BYTE PTR [rax],al
   14004ba57:	add    BYTE PTR [rax-0x35],dh
   14004ba5a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004ba69:	fwait
   14004ba6a:	add    eax,DWORD PTR [rax+0x1]
   14004ba6d:	add    BYTE PTR [rax],al
   14004ba6f:	add    BYTE PTR [rax-0x35],dh
   14004ba72:	add    eax,DWORD PTR [rax+0x1]
	...
   14004ba7d:	add    BYTE PTR [rax],al
   14004ba7f:	add    BYTE PTR [rax],bl
   14004ba81:	fwait
   14004ba82:	add    eax,DWORD PTR [rax+0x1]
   14004ba85:	add    BYTE PTR [rax],al
   14004ba87:	add    BYTE PTR [rax-0x35],dh
   14004ba8a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004ba95:	add    BYTE PTR [rax],al
   14004ba97:	add    BYTE PTR [rax],bh
   14004ba99:	fwait
   14004ba9a:	add    eax,DWORD PTR [rax+0x1]
   14004ba9d:	add    BYTE PTR [rax],al
   14004ba9f:	add    al,cl
   14004baa1:	retf   0x4003
   14004baa4:	add    DWORD PTR [rax],eax
   14004baa6:	add    BYTE PTR [rax],al
   14004baa8:	sub    BYTE PTR [rcx+0x3],0x0
   14004baaf:	add    BYTE PTR [rax-0x65],bl
   14004bab2:	add    eax,DWORD PTR [rax+0x1]
   14004bab5:	add    BYTE PTR [rax],al
   14004bab7:	add    al,cl
   14004bab9:	retf   0x4003
   14004babc:	add    DWORD PTR [rax],eax
   14004babe:	add    BYTE PTR [rax],al
   14004bac0:	loopne 0x14004ba55
   14004bac2:	add    al,0x0
   14004bac4:	add    BYTE PTR [rax],al
   14004bac6:	add    BYTE PTR [rax],al
   14004bac8:	sbb    BYTE PTR [rbx+0x14003],0x0
   14004bacf:	add    al,cl
   14004bad1:	retf   0x4003
   14004bad4:	add    DWORD PTR [rax],eax
   14004bad6:	add    BYTE PTR [rax],al
   14004bad8:	and    BYTE PTR [rdi+0x2],bh
   14004bade:	add    BYTE PTR [rax],al
   14004bae0:	cwde   
   14004bae1:	fwait
   14004bae2:	add    eax,DWORD PTR [rax+0x1]
   14004bae5:	add    BYTE PTR [rax],al
   14004bae7:	add    BYTE PTR [rax],ch
   14004bae9:	retf   
   14004baea:	add    eax,DWORD PTR [rax+0x1]
	...
   14004baf5:	add    BYTE PTR [rax],al
   14004baf7:	add    BYTE PTR [rax+0x140039b],dh
   14004bafd:	add    BYTE PTR [rax],al
   14004baff:	add    BYTE PTR [rax-0x35],bh
   14004bb02:	add    eax,DWORD PTR [rax+0x1]
	...
   14004bb0d:	add    BYTE PTR [rax],al
   14004bb0f:	add    al,al
   14004bb11:	fwait
   14004bb12:	add    eax,DWORD PTR [rax+0x1]
   14004bb15:	add    BYTE PTR [rax],al
   14004bb17:	add    BYTE PTR [rax-0x35],bh
   14004bb1a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004bb25:	add    BYTE PTR [rax],al
   14004bb27:	add    al,bl
   14004bb29:	fwait
   14004bb2a:	add    eax,DWORD PTR [rax+0x1]
   14004bb2d:	add    BYTE PTR [rax],al
   14004bb2f:	add    BYTE PTR [rax-0x35],bh
   14004bb32:	add    eax,DWORD PTR [rax+0x1]
	...
   14004bb3d:	add    BYTE PTR [rax],al
   14004bb3f:	add    al,dh
   14004bb41:	fwait
   14004bb42:	add    eax,DWORD PTR [rax+0x1]
   14004bb45:	add    BYTE PTR [rax],al
   14004bb47:	add    BYTE PTR [rax-0x35],bh
   14004bb4a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004bb55:	add    BYTE PTR [rax],al
   14004bb57:	add    BYTE PTR [rax],cl
   14004bb59:	pushf  
   14004bb5a:	add    eax,DWORD PTR [rax+0x1]
   14004bb5d:	add    BYTE PTR [rax],al
   14004bb5f:	add    BYTE PTR [rax-0x35],bh
   14004bb62:	add    eax,DWORD PTR [rax+0x1]
	...
   14004bb6d:	add    BYTE PTR [rax],al
   14004bb6f:	add    BYTE PTR [rax],ah
   14004bb71:	pushf  
   14004bb72:	add    eax,DWORD PTR [rax+0x1]
   14004bb75:	add    BYTE PTR [rax],al
   14004bb77:	add    BYTE PTR [rax-0x35],bh
   14004bb7a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004bb85:	add    BYTE PTR [rax],al
   14004bb87:	add    BYTE PTR [rax-0x64],al
   14004bb8a:	add    eax,DWORD PTR [rax+0x1]
   14004bb8d:	add    BYTE PTR [rax],al
   14004bb8f:	add    BYTE PTR [rax-0x35],bh
   14004bb92:	add    eax,DWORD PTR [rax+0x1]
	...
   14004bb9d:	add    BYTE PTR [rax],al
   14004bb9f:	add    BYTE PTR [rax-0x64],dl
   14004bba2:	add    eax,DWORD PTR [rax+0x1]
   14004bba5:	add    BYTE PTR [rax],al
   14004bba7:	add    BYTE PTR [rax-0x35],bh
   14004bbaa:	add    eax,DWORD PTR [rax+0x1]
	...
   14004bbb5:	add    BYTE PTR [rax],al
   14004bbb7:	add    BYTE PTR [rax-0x64],ch
   14004bbba:	add    eax,DWORD PTR [rax+0x1]
   14004bbbd:	add    BYTE PTR [rax],al
   14004bbbf:	add    BYTE PTR [rax-0x35],bh
   14004bbc2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004bbcd:	add    BYTE PTR [rax],al
   14004bbcf:	add    BYTE PTR [rax-0x64],bh
   14004bbd2:	add    eax,DWORD PTR [rax+0x1]
   14004bbd5:	add    BYTE PTR [rax],al
   14004bbd7:	add    BYTE PTR [rax-0x35],bh
   14004bbda:	add    eax,DWORD PTR [rax+0x1]
	...
   14004bbe5:	add    BYTE PTR [rax],al
   14004bbe7:	add    BYTE PTR [rax+0x140039c],dl
   14004bbed:	add    BYTE PTR [rax],al
   14004bbef:	add    BYTE PTR [rax-0x35],bh
   14004bbf2:	add    eax,DWORD PTR [rax+0x1]
   14004bbf5:	add    BYTE PTR [rax],al
   14004bbf7:	add    BYTE PTR [rax+rax*1+0x0],ah
   14004bbfb:	add    BYTE PTR [rax],al
   14004bbfd:	add    BYTE PTR [rax],al
   14004bbff:	add    BYTE PTR [rax+0x140039c],dh
   14004bc05:	add    BYTE PTR [rax],al
   14004bc07:	add    BYTE PTR [rax-0x35],bh
   14004bc0a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004bc15:	add    BYTE PTR [rax],al
   14004bc17:	add    al,cl
   14004bc19:	pushf  
   14004bc1a:	add    eax,DWORD PTR [rax+0x1]
   14004bc1d:	add    BYTE PTR [rax],al
   14004bc1f:	add    BYTE PTR [rax-0x35],bh
   14004bc22:	add    eax,DWORD PTR [rax+0x1]
	...
   14004bc2d:	add    BYTE PTR [rax],al
   14004bc2f:	add    al,ah
   14004bc31:	pushf  
   14004bc32:	add    eax,DWORD PTR [rax+0x1]
   14004bc35:	add    BYTE PTR [rax],al
   14004bc37:	add    BYTE PTR [rax-0x35],bh
   14004bc3a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004bc45:	add    BYTE PTR [rax],al
   14004bc47:	add    al,dh
   14004bc49:	pushf  
   14004bc4a:	add    eax,DWORD PTR [rax+0x1]
   14004bc4d:	add    BYTE PTR [rax],al
   14004bc4f:	add    BYTE PTR [rax-0x35],bh
   14004bc52:	add    eax,DWORD PTR [rax+0x1]
	...
   14004bc5d:	add    BYTE PTR [rax],al
   14004bc5f:	add    BYTE PTR [rax],cl
   14004bc61:	popf   
   14004bc62:	add    eax,DWORD PTR [rax+0x1]
   14004bc65:	add    BYTE PTR [rax],al
   14004bc67:	add    al,dl
   14004bc69:	retf   0x4003
   14004bc6c:	add    DWORD PTR [rax],eax
	...
   14004bc76:	add    BYTE PTR [rax],al
   14004bc78:	and    BYTE PTR [rbp+0x14003],bl
   14004bc7e:	add    BYTE PTR [rax],al
   14004bc80:	loopne 0x14004bc4c
   14004bc82:	add    eax,DWORD PTR [rax+0x1]
   14004bc85:	add    BYTE PTR [rax],al
   14004bc87:	add    BYTE PTR [rcx],al
   14004bc89:	add    BYTE PTR [rax],al
   14004bc8b:	add    BYTE PTR [rax],al
   14004bc8d:	add    BYTE PTR [rax],al
   14004bc8f:	add    BYTE PTR [rax],dh
   14004bc91:	popf   
   14004bc92:	add    eax,DWORD PTR [rax+0x1]
   14004bc95:	add    BYTE PTR [rax],al
   14004bc97:	add    al,ah
   14004bc99:	retf   0x4003
   14004bc9c:	add    DWORD PTR [rax],eax
	...
   14004bca6:	add    BYTE PTR [rax],al
   14004bca8:	rex.W popf 
   14004bcaa:	add    eax,DWORD PTR [rax+0x1]
   14004bcad:	add    BYTE PTR [rax],al
   14004bcaf:	add    al,dl
   14004bcb1:	retf   0x4003
   14004bcb4:	add    DWORD PTR [rax],eax
   14004bcb6:	add    BYTE PTR [rax],al
   14004bcb8:	add    BYTE PTR [rax],dl
   14004bcba:	add    BYTE PTR [rax],al
   14004bcbc:	add    BYTE PTR [rax],al
   14004bcbe:	add    BYTE PTR [rax],al
   14004bcc0:	js     0x14004bc5f
   14004bcc2:	add    eax,DWORD PTR [rax+0x1]
   14004bcc5:	add    BYTE PTR [rax],al
   14004bcc7:	add    al,dl
   14004bcc9:	retf   0x4003
   14004bccc:	add    DWORD PTR [rax],eax
   14004bcce:	add    BYTE PTR [rax],al
   14004bcd0:	add    al,0x0
   14004bcd2:	add    BYTE PTR [rax],al
   14004bcd4:	add    BYTE PTR [rax],al
   14004bcd6:	add    BYTE PTR [rax],al
   14004bcd8:	movabs al,ds:0xd00000000140039d
   14004bce1:	retf   0x4003
   14004bce4:	add    DWORD PTR [rax],eax
	...
   14004bcee:	add    BYTE PTR [rax],al
   14004bcf0:	mov    eax,0x140039d
   14004bcf5:	add    BYTE PTR [rax],al
   14004bcf7:	add    al,dl
   14004bcf9:	retf   0x4003
   14004bcfc:	add    DWORD PTR [rax],eax
   14004bcfe:	add    BYTE PTR [rax],al
   14004bd00:	add    DWORD PTR [rax],eax
   14004bd02:	add    BYTE PTR [rax],al
   14004bd04:	add    BYTE PTR [rax],al
   14004bd06:	add    BYTE PTR [rax],al
   14004bd08:	call   0x14144c0aa
   14004bd0d:	add    BYTE PTR [rax],al
   14004bd0f:	add    al,dl
   14004bd11:	retf   0x4003
   14004bd14:	add    DWORD PTR [rax],eax
   14004bd16:	add    BYTE PTR [rax],al
   14004bd18:	add    DWORD PTR [rax],eax
   14004bd1a:	add    BYTE PTR [rax],al
   14004bd1c:	add    BYTE PTR [rax],al
   14004bd1e:	add    BYTE PTR [rax],al
   14004bd20:	adc    BYTE PTR [rsi+0x14003],bl
   14004bd26:	add    BYTE PTR [rax],al
   14004bd28:	ror    dl,1
   14004bd2a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004bd35:	add    BYTE PTR [rax],al
   14004bd37:	add    BYTE PTR [rax-0x62],al
   14004bd3a:	add    eax,DWORD PTR [rax+0x1]
   14004bd3d:	add    BYTE PTR [rax],al
   14004bd3f:	add    al,dl
   14004bd41:	retf   0x4003
   14004bd44:	add    DWORD PTR [rax],eax
	...
   14004bd4e:	add    BYTE PTR [rax],al
   14004bd50:	push   0x140039e
   14004bd55:	add    BYTE PTR [rax],al
   14004bd57:	add    al,dl
   14004bd59:	retf   0x4003
   14004bd5c:	add    DWORD PTR [rax],eax
   14004bd5e:	add    BYTE PTR [rax],al
   14004bd60:	add    DWORD PTR [rax],eax
   14004bd62:	add    BYTE PTR [rax],al
   14004bd64:	add    BYTE PTR [rax],al
   14004bd66:	add    BYTE PTR [rax],al
   14004bd68:	nop
   14004bd69:	sahf   
   14004bd6a:	add    eax,DWORD PTR [rax+0x1]
   14004bd6d:	add    BYTE PTR [rax],al
   14004bd6f:	add    al,dl
   14004bd71:	retf   0x4003
   14004bd74:	add    DWORD PTR [rax],eax
	...
   14004bd7e:	add    BYTE PTR [rax],al
   14004bd80:	enter  0x39e,0x40
   14004bd84:	add    DWORD PTR [rax],eax
   14004bd86:	add    BYTE PTR [rax],al
   14004bd88:	ror    dl,1
   14004bd8a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004bd95:	add    BYTE PTR [rax],al
   14004bd97:	add    al,bh
   14004bd99:	sahf   
   14004bd9a:	add    eax,DWORD PTR [rax+0x1]
   14004bd9d:	add    BYTE PTR [rax],al
   14004bd9f:	add    al,dl
   14004bda1:	retf   0x4003
   14004bda4:	add    DWORD PTR [rax],eax
   14004bda6:	add    BYTE PTR [rax],al
   14004bda8:	mov    eax,0xb
   14004bdad:	add    BYTE PTR [rax],al
   14004bdaf:	add    BYTE PTR [rax],ah
   14004bdb1:	lahf   
   14004bdb2:	add    eax,DWORD PTR [rax+0x1]
   14004bdb5:	add    BYTE PTR [rax],al
   14004bdb7:	add    al,dl
   14004bdb9:	retf   0x4003
   14004bdbc:	add    DWORD PTR [rax],eax
   14004bdbe:	add    BYTE PTR [rax],al
   14004bdc0:	adc    al,0x0
   14004bdc2:	add    BYTE PTR [rax],al
   14004bdc4:	add    BYTE PTR [rax],al
   14004bdc6:	add    BYTE PTR [rax],al
   14004bdc8:	push   rax
   14004bdc9:	lahf   
   14004bdca:	add    eax,DWORD PTR [rax+0x1]
   14004bdcd:	add    BYTE PTR [rax],al
   14004bdcf:	add    al,dl
   14004bdd1:	retf   0x4003
   14004bdd4:	add    DWORD PTR [rax],eax
   14004bdd6:	add    BYTE PTR [rax],al
   14004bdd8:	adc    al,0x0
   14004bdda:	add    BYTE PTR [rax],al
   14004bddc:	add    BYTE PTR [rax],al
   14004bdde:	add    BYTE PTR [rax],al
   14004bde0:	sbb    BYTE PTR [rdi+0x14003],0x0
   14004bde7:	add    al,dl
   14004bde9:	retf   0x4003
   14004bdec:	add    DWORD PTR [rax],eax
   14004bdee:	add    BYTE PTR [rax],al
   14004bdf0:	adc    al,0x0
   14004bdf2:	add    BYTE PTR [rax],al
   14004bdf4:	add    BYTE PTR [rax],al
   14004bdf6:	add    BYTE PTR [rax],al
   14004bdf8:	mov    eax,0x140039f
   14004bdfd:	add    BYTE PTR [rax],al
   14004bdff:	add    al,dl
   14004be01:	retf   0x4003
   14004be04:	add    DWORD PTR [rax],eax
   14004be06:	add    BYTE PTR [rax],al
   14004be08:	add    BYTE PTR [rax],al
   14004be0a:	adc    BYTE PTR [rax],al
   14004be0c:	add    BYTE PTR [rax],al
   14004be0e:	add    BYTE PTR [rax],al
   14004be10:	call   0x14144c1b4
   14004be15:	add    BYTE PTR [rax],al
   14004be17:	add    al,dl
   14004be19:	retf   0x4003
   14004be1c:	add    DWORD PTR [rax],eax
   14004be1e:	add    BYTE PTR [rax],al
   14004be20:	add    BYTE PTR [rax],al
   14004be22:	and    BYTE PTR [rbx],al
   14004be24:	add    BYTE PTR [rax],al
   14004be26:	add    BYTE PTR [rax],al
   14004be28:	and    BYTE PTR [rax+0x14003],ah
   14004be2e:	add    BYTE PTR [rax],al
   14004be30:	ror    dl,1
   14004be32:	add    eax,DWORD PTR [rax+0x1]
   14004be35:	add    BYTE PTR [rax],al
   14004be37:	add    BYTE PTR [rax],al
   14004be39:	add    BYTE PTR [rax],cl
   14004be3b:	add    BYTE PTR [rax],al
   14004be3d:	add    BYTE PTR [rax],al
   14004be3f:	add    BYTE PTR [rax-0x60],dh
   14004be42:	add    eax,DWORD PTR [rax+0x1]
   14004be45:	add    BYTE PTR [rax],al
   14004be47:	add    al,dl
   14004be49:	retf   0x4003
   14004be4c:	add    DWORD PTR [rax],eax
   14004be4e:	add    BYTE PTR [rax],al
   14004be50:	add    BYTE PTR [rax],al
   14004be52:	add    al,BYTE PTR [rax]
   14004be54:	add    BYTE PTR [rax],al
   14004be56:	add    BYTE PTR [rax],al
   14004be58:	shl    BYTE PTR [rax+0x14003],0x0
   14004be5f:	add    al,dl
   14004be61:	retf   0x4003
   14004be64:	add    DWORD PTR [rax],eax
   14004be66:	add    BYTE PTR [rax],al
   14004be68:	add    BYTE PTR [rax],al
   14004be6a:	add    DWORD PTR [rax],eax
   14004be6c:	add    BYTE PTR [rax],al
   14004be6e:	add    BYTE PTR [rax],al
   14004be70:	adc    BYTE PTR [rcx+0x14003],ah
   14004be76:	add    BYTE PTR [rax],al
   14004be78:	ror    dl,1
   14004be7a:	add    eax,DWORD PTR [rax+0x1]
   14004be7d:	add    BYTE PTR [rax],al
   14004be7f:	add    BYTE PTR [rax],al
   14004be81:	add    BYTE PTR [rcx],al
   14004be83:	add    BYTE PTR [rax],al
   14004be85:	add    BYTE PTR [rax],al
   14004be87:	add    BYTE PTR [rax-0x5f],bl
   14004be8a:	add    eax,DWORD PTR [rax+0x1]
   14004be8d:	add    BYTE PTR [rax],al
   14004be8f:	add    al,dl
   14004be91:	retf   0x4003
   14004be94:	add    DWORD PTR [rax],eax
   14004be96:	add    BYTE PTR [rax],al
   14004be98:	add    BYTE PTR [rax+rax*1],al
   14004be9b:	add    BYTE PTR [rax],al
   14004be9d:	add    BYTE PTR [rax],al
   14004be9f:	add    BYTE PTR [rax+0x14003a1],bl
   14004bea5:	add    BYTE PTR [rax],al
   14004bea7:	add    al,dl
   14004bea9:	retf   0x4003
   14004beac:	add    DWORD PTR [rax],eax
   14004beae:	add    BYTE PTR [rax],al
   14004beb0:	add    eax,0x0
   14004beb5:	add    BYTE PTR [rax],al
   14004beb7:	add    BYTE PTR [rax+0x14003a1],dh
   14004bebd:	add    BYTE PTR [rax],al
   14004bebf:	add    al,dl
   14004bec1:	retf   0x4003
   14004bec4:	add    DWORD PTR [rax],eax
	...
   14004bece:	add    BYTE PTR [rax],al
   14004bed0:	fsub   DWORD PTR [rcx+0x14003]
   14004bed6:	add    BYTE PTR [rax],al
   14004bed8:	ror    dl,1
   14004beda:	add    eax,DWORD PTR [rax+0x1]
   14004bedd:	add    BYTE PTR [rax],al
   14004bedf:	add    BYTE PTR [rdx],dh
   14004bee1:	add    BYTE PTR [rax],al
   14004bee3:	add    BYTE PTR [rax],al
   14004bee5:	add    BYTE PTR [rax],al
   14004bee7:	add    al,bh
   14004bee9:	movabs eax,ds:0xcad0000000014003
   14004bef2:	add    eax,DWORD PTR [rax+0x1]
   14004bef5:	add    BYTE PTR [rax],al
   14004bef7:	add    BYTE PTR [rax+rax*1+0x0],ah
   14004befb:	add    BYTE PTR [rax],al
   14004befd:	add    BYTE PTR [rax],al
   14004beff:	add    BYTE PTR [rax],ah
   14004bf01:	movabs ds:0xcad0000000014003,al
   14004bf0a:	add    eax,DWORD PTR [rax+0x1]
   14004bf0d:	add    BYTE PTR [rax],al
   14004bf0f:	add    ah,dh
   14004bf11:	add    DWORD PTR [rax],eax
   14004bf13:	add    BYTE PTR [rax],al
   14004bf15:	add    BYTE PTR [rax],al
   14004bf17:	add    BYTE PTR [rax-0x5e],al
   14004bf1a:	add    eax,DWORD PTR [rax+0x1]
   14004bf1d:	add    BYTE PTR [rax],al
   14004bf1f:	add    al,dl
   14004bf21:	retf   0x4003
   14004bf24:	add    DWORD PTR [rax],eax
   14004bf26:	add    BYTE PTR [rax],al
   14004bf28:	mov    BYTE PTR [rbx],dl
   14004bf2a:	add    BYTE PTR [rax],al
   14004bf2c:	add    BYTE PTR [rax],al
   14004bf2e:	add    BYTE PTR [rax],al
   14004bf30:	(bad)  
   14004bf31:	movabs ds:0xcad0000000014003,al
   14004bf3a:	add    eax,DWORD PTR [rax+0x1]
   14004bf3d:	add    BYTE PTR [rax],al
   14004bf3f:	add    BYTE PTR [rcx],al
   14004bf41:	add    BYTE PTR [rax],al
   14004bf43:	add    BYTE PTR [rax],al
   14004bf45:	add    BYTE PTR [rax],al
   14004bf47:	add    BYTE PTR [rax+0x14003a2],cl
   14004bf4d:	add    BYTE PTR [rax],al
   14004bf4f:	add    al,dl
   14004bf51:	retf   0x4003
   14004bf54:	add    DWORD PTR [rax],eax
   14004bf56:	add    BYTE PTR [rax],al
   14004bf58:	add    DWORD PTR [rax],eax
   14004bf5a:	add    BYTE PTR [rax],al
   14004bf5c:	add    BYTE PTR [rax],al
   14004bf5e:	add    BYTE PTR [rax],al
   14004bf60:	test   al,0xa2
   14004bf62:	add    eax,DWORD PTR [rax+0x1]
   14004bf65:	add    BYTE PTR [rax],al
   14004bf67:	add    al,dl
   14004bf69:	retf   0x4003
   14004bf6c:	add    DWORD PTR [rax],eax
	...
   14004bf76:	add    BYTE PTR [rax],al
   14004bf78:	enter  0x3a2,0x40
   14004bf7c:	add    DWORD PTR [rax],eax
   14004bf7e:	add    BYTE PTR [rax],al
   14004bf80:	fmul   st(2),st
   14004bf82:	add    eax,DWORD PTR [rax+0x1]
	...
   14004bf8d:	add    BYTE PTR [rax],al
   14004bf8f:	add    al,dh
   14004bf91:	movabs ds:0xcb48000000014003,al
   14004bf9a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004bfa5:	add    BYTE PTR [rax],al
   14004bfa7:	add    BYTE PTR [rax],cl
   14004bfa9:	movabs ds:0xcb88000000014003,eax
   14004bfb2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004bfbd:	add    BYTE PTR [rax],al
   14004bfbf:	add    BYTE PTR [rax],bl
   14004bfc1:	movabs ds:0xcb98000000014003,eax
   14004bfca:	add    eax,DWORD PTR [rax+0x1]
	...
   14004bfd5:	add    BYTE PTR [rax],al
   14004bfd7:	add    BYTE PTR [rax],bh
   14004bfd9:	movabs ds:0xcb70000000014003,eax
   14004bfe2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004bfed:	add    BYTE PTR [rax],al
   14004bfef:	add    BYTE PTR [rax-0x5d],cl
   14004bff2:	add    eax,DWORD PTR [rax+0x1]
   14004bff5:	add    BYTE PTR [rax],al
   14004bff7:	add    BYTE PTR [rax-0x35],dh
   14004bffa:	add    eax,DWORD PTR [rax+0x1]
	...
   14004c005:	add    BYTE PTR [rax],al
   14004c007:	add    BYTE PTR [rax-0x5d],ah
   14004c00a:	add    eax,DWORD PTR [rax+0x1]
   14004c00d:	add    BYTE PTR [rax],al
   14004c00f:	add    BYTE PTR [rax-0x35],dh
   14004c012:	add    eax,DWORD PTR [rax+0x1]
	...
   14004c01d:	add    BYTE PTR [rax],al
   14004c01f:	add    BYTE PTR [rax-0x5d],bh
   14004c022:	add    eax,DWORD PTR [rax+0x1]
   14004c025:	add    BYTE PTR [rax],al
   14004c027:	add    BYTE PTR [rax-0x35],dh
   14004c02a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004c035:	add    BYTE PTR [rax],al
   14004c037:	add    BYTE PTR [rax+0x14003a3],dl
   14004c03d:	add    BYTE PTR [rax],al
   14004c03f:	add    BYTE PTR [rax-0x35],dh
   14004c042:	add    eax,DWORD PTR [rax+0x1]
	...
   14004c04d:	add    BYTE PTR [rax],al
   14004c04f:	add    BYTE PTR [rax+0x14003a3],dh
   14004c055:	add    BYTE PTR [rax],al
   14004c057:	add    BYTE PTR [rax+0x14003cb],ah
   14004c05d:	add    BYTE PTR [rax],al
   14004c05f:	add    BYTE PTR [rax+rax*1+0x0],ah
   14004c063:	add    BYTE PTR [rax],al
   14004c065:	add    BYTE PTR [rax],al
   14004c067:	add    al,dl
   14004c069:	movabs ds:0xcba0000000014003,eax
   14004c072:	add    eax,DWORD PTR [rax+0x1]
   14004c075:	add    BYTE PTR [rax],al
   14004c077:	add    BYTE PTR [rdi],cl
   14004c079:	add    BYTE PTR [rax],al
   14004c07b:	add    BYTE PTR [rax],al
   14004c07d:	add    BYTE PTR [rax],al
   14004c07f:	add    al,dh
   14004c081:	movabs ds:0xcba0000000014003,eax
   14004c08a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004c095:	add    BYTE PTR [rax],al
   14004c097:	add    BYTE PTR [rax],cl
   14004c099:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004c09a:	add    eax,DWORD PTR [rax+0x1]
   14004c09d:	add    BYTE PTR [rax],al
   14004c09f:	add    BYTE PTR [rax+0x14003cb],ah
   14004c0a5:	add    BYTE PTR [rax],al
   14004c0a7:	add    BYTE PTR [rcx+rax*1],ch
   14004c0aa:	add    BYTE PTR [rax],al
   14004c0ac:	add    BYTE PTR [rax],al
   14004c0ae:	add    BYTE PTR [rax],al
   14004c0b0:	and    BYTE PTR [rbx+rax*1+0x140],ah
   14004c0b7:	add    BYTE PTR [rax+0x14003cb],ah
   14004c0bd:	add    BYTE PTR [rax],al
   14004c0bf:	add    BYTE PTR [rdx],dh
   14004c0c1:	add    BYTE PTR [rax],al
   14004c0c3:	add    BYTE PTR [rax],al
   14004c0c5:	add    BYTE PTR [rax],al
   14004c0c7:	add    BYTE PTR [rax],dh
   14004c0c9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004c0ca:	add    eax,DWORD PTR [rax+0x1]
   14004c0cd:	add    BYTE PTR [rax],al
   14004c0cf:	add    BYTE PTR [rax],ch
   14004c0d1:	retf   
   14004c0d2:	add    eax,DWORD PTR [rax+0x1]
   14004c0d5:	add    BYTE PTR [rax],al
   14004c0d7:	add    BYTE PTR [rcx],al
   14004c0d9:	add    BYTE PTR [rax],al
   14004c0db:	add    BYTE PTR [rax],al
   14004c0dd:	add    BYTE PTR [rax],al
   14004c0df:	add    BYTE PTR [rax-0x5c],al
   14004c0e2:	add    eax,DWORD PTR [rax+0x1]
   14004c0e5:	add    BYTE PTR [rax],al
   14004c0e7:	add    BYTE PTR [rax],ch
   14004c0e9:	retf   
   14004c0ea:	add    eax,DWORD PTR [rax+0x1]
	...
   14004c0f5:	add    BYTE PTR [rax],al
   14004c0f7:	add    BYTE PTR [rax-0x5c],dl
   14004c0fa:	add    eax,DWORD PTR [rax+0x1]
   14004c0fd:	add    BYTE PTR [rax],al
   14004c0ff:	add    BYTE PTR [rax],ch
   14004c101:	retf   
   14004c102:	add    eax,DWORD PTR [rax+0x1]
   14004c105:	add    BYTE PTR [rax],al
   14004c107:	add    BYTE PTR [rcx],al
   14004c109:	add    BYTE PTR [rax],al
   14004c10b:	add    BYTE PTR [rax],al
   14004c10d:	add    BYTE PTR [rax],al
   14004c10f:	add    BYTE PTR [rax-0x5c],dh
   14004c112:	add    eax,DWORD PTR [rax+0x1]
   14004c115:	add    BYTE PTR [rax],al
   14004c117:	add    BYTE PTR [rax+0x14003cb],ch
	...
   14004c125:	add    BYTE PTR [rax],al
   14004c127:	add    BYTE PTR [rax+0x14003a4],cl
   14004c12d:	add    BYTE PTR [rax],al
   14004c12f:	add    BYTE PTR [rax+0x14003cb],ch
	...
   14004c13d:	add    BYTE PTR [rax],al
   14004c13f:	add    BYTE PTR [rax+0x14003a4],ah
   14004c145:	add    BYTE PTR [rax],al
   14004c147:	add    BYTE PTR [rax+0x14003cb],ch
	...
   14004c155:	add    BYTE PTR [rax],al
   14004c157:	add    BYTE PTR [rax+0x14003a4],bh
   14004c15d:	add    BYTE PTR [rax],al
   14004c15f:	add    BYTE PTR [rax+0x14003cb],ch
	...
   14004c16d:	add    BYTE PTR [rax],al
   14004c16f:	add    al,dl
   14004c171:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004c172:	add    eax,DWORD PTR [rax+0x1]
   14004c175:	add    BYTE PTR [rax],al
   14004c177:	add    BYTE PTR [rax+0x14003cb],ch
	...
   14004c185:	add    BYTE PTR [rax],al
   14004c187:	add    al,ch
   14004c189:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004c18a:	add    eax,DWORD PTR [rax+0x1]
   14004c18d:	add    BYTE PTR [rax],al
   14004c18f:	add    BYTE PTR [rax+0x14003cb],ch
	...
   14004c1a1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004c1a2:	add    eax,DWORD PTR [rax+0x1]
   14004c1a5:	add    BYTE PTR [rax],al
   14004c1a7:	add    BYTE PTR [rax+0x14003cb],ch
	...
   14004c1b5:	add    BYTE PTR [rax],al
   14004c1b7:	add    BYTE PTR [rax],bl
   14004c1b9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004c1ba:	add    eax,DWORD PTR [rax+0x1]
   14004c1bd:	add    BYTE PTR [rax],al
   14004c1bf:	add    BYTE PTR [rax+0x14003cb],ch
	...
   14004c1cd:	add    BYTE PTR [rax],al
   14004c1cf:	add    BYTE PTR [rax],dh
   14004c1d1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004c1d2:	add    eax,DWORD PTR [rax+0x1]
   14004c1d5:	add    BYTE PTR [rax],al
   14004c1d7:	add    al,ah
   14004c1d9:	retf   0x4003
   14004c1dc:	add    DWORD PTR [rax],eax
   14004c1de:	add    BYTE PTR [rax],al
   14004c1e0:	sub    BYTE PTR [rax],al
   14004c1e2:	add    BYTE PTR [rax],al
   14004c1e4:	add    BYTE PTR [rax],al
   14004c1e6:	add    BYTE PTR [rax],al
   14004c1e8:	movs   QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   14004c1ea:	add    eax,DWORD PTR [rax+0x1]
   14004c1ed:	add    BYTE PTR [rax],al
   14004c1ef:	add    BYTE PTR [rax],ch
   14004c1f1:	retf   
   14004c1f2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004c1fd:	add    BYTE PTR [rax],al
   14004c1ff:	add    BYTE PTR [rax-0x5b],bl
   14004c202:	add    eax,DWORD PTR [rax+0x1]
   14004c205:	add    BYTE PTR [rax],al
   14004c207:	add    BYTE PTR [rax+0x14003cb],bh
	...
   14004c215:	add    BYTE PTR [rax],al
   14004c217:	add    BYTE PTR [rax-0x5b],ch
   14004c21a:	add    eax,DWORD PTR [rax+0x1]
   14004c21d:	add    BYTE PTR [rax],al
   14004c21f:	add    BYTE PTR [rax+0x14003cb],bh
	...
   14004c22d:	add    BYTE PTR [rax],al
   14004c22f:	add    BYTE PTR [rax-0x5b],bh
   14004c232:	add    eax,DWORD PTR [rax+0x1]
   14004c235:	add    BYTE PTR [rax],al
   14004c237:	add    al,cl
   14004c239:	retf   
   14004c23a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004c245:	add    BYTE PTR [rax],al
   14004c247:	add    BYTE PTR [rax+0x14003a5],dl
   14004c24d:	add    BYTE PTR [rax],al
   14004c24f:	add    BYTE PTR [rax+0x14003cb],bh
	...
   14004c25d:	add    BYTE PTR [rax],al
   14004c25f:	add    BYTE PTR [rax+0x14003a5],ah
   14004c265:	add    BYTE PTR [rax],al
   14004c267:	add    al,dl
   14004c269:	retf   
   14004c26a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004c275:	add    BYTE PTR [rax],al
   14004c277:	add    BYTE PTR [rax+0x14003a5],bh
   14004c27d:	add    BYTE PTR [rax],al
   14004c27f:	add    al,dl
   14004c281:	retf   
   14004c282:	add    eax,DWORD PTR [rax+0x1]
	...
   14004c28d:	add    BYTE PTR [rax],al
   14004c28f:	add    al,cl
   14004c291:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004c292:	add    eax,DWORD PTR [rax+0x1]
   14004c295:	add    BYTE PTR [rax],al
   14004c297:	add    BYTE PTR [rax+0x14003cb],bh
	...
   14004c2a5:	add    BYTE PTR [rax],al
   14004c2a7:	add    al,bl
   14004c2a9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004c2aa:	add    eax,DWORD PTR [rax+0x1]
   14004c2ad:	add    BYTE PTR [rax],al
   14004c2af:	add    BYTE PTR [rax+0x14003cb],bh
	...
   14004c2c1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004c2c2:	add    eax,DWORD PTR [rax+0x1]
   14004c2c5:	add    BYTE PTR [rax],al
   14004c2c7:	add    BYTE PTR [rax+0x14003cb],bh
	...
   14004c2d5:	add    BYTE PTR [rax],al
   14004c2d7:	add    BYTE PTR [rax],bl
   14004c2d9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004c2da:	add    eax,DWORD PTR [rax+0x1]
   14004c2dd:	add    BYTE PTR [rax],al
   14004c2df:	add    al,dl
   14004c2e1:	retf   
   14004c2e2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004c2ed:	add    BYTE PTR [rax],al
   14004c2ef:	add    BYTE PTR [rax],dh
   14004c2f1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004c2f2:	add    eax,DWORD PTR [rax+0x1]
   14004c2f5:	add    BYTE PTR [rax],al
   14004c2f7:	add    al,dl
   14004c2f9:	retf   
   14004c2fa:	add    eax,DWORD PTR [rax+0x1]
	...
   14004c305:	add    BYTE PTR [rax],al
   14004c307:	add    BYTE PTR [rax-0x5a],al
   14004c30a:	add    eax,DWORD PTR [rax+0x1]
   14004c30d:	add    BYTE PTR [rax],al
   14004c30f:	add    BYTE PTR [rax+0x14003cb],bh
   14004c315:	add    BYTE PTR [rax],al
   14004c317:	add    BYTE PTR [rax+0x1],ch
   14004c31a:	add    BYTE PTR [rax],al
   14004c31c:	add    BYTE PTR [rax],al
   14004c31e:	add    BYTE PTR [rax],al
   14004c320:	(bad)  
   14004c321:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004c322:	add    eax,DWORD PTR [rax+0x1]
   14004c325:	add    BYTE PTR [rax],al
   14004c327:	add    al,dl
   14004c329:	retf   
   14004c32a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004c335:	add    BYTE PTR [rax],al
   14004c337:	add    BYTE PTR [rax-0x5a],bh
   14004c33a:	add    eax,DWORD PTR [rax+0x1]
   14004c33d:	add    BYTE PTR [rax],al
   14004c33f:	add    al,dl
   14004c341:	retf   
   14004c342:	add    eax,DWORD PTR [rax+0x1]
	...
   14004c34d:	add    BYTE PTR [rax],al
   14004c34f:	add    BYTE PTR [rax+0x14003a6],cl
   14004c355:	add    BYTE PTR [rax],al
   14004c357:	add    BYTE PTR [rax+0x14003cb],bh
	...
   14004c365:	add    BYTE PTR [rax],al
   14004c367:	add    BYTE PTR [rax+0x14003a6],bl
   14004c36d:	add    BYTE PTR [rax],al
   14004c36f:	add    BYTE PTR [rax+0x14003cb],bh
	...
   14004c37d:	add    BYTE PTR [rax],al
   14004c37f:	add    BYTE PTR [rax+0x14003a6],ch
   14004c385:	add    BYTE PTR [rax],al
   14004c387:	add    BYTE PTR [rax+0x14003cb],bh
	...
   14004c395:	add    BYTE PTR [rax],al
   14004c397:	add    BYTE PTR [rax+0x14003a6],bh
   14004c39d:	add    BYTE PTR [rax],al
   14004c39f:	add    BYTE PTR [rax+0x14003cb],bh
	...
   14004c3ad:	add    BYTE PTR [rax],al
   14004c3af:	add    al,cl
   14004c3b1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004c3b2:	add    eax,DWORD PTR [rax+0x1]
   14004c3b5:	add    BYTE PTR [rax],al
   14004c3b7:	add    al,dl
   14004c3b9:	retf   
   14004c3ba:	add    eax,DWORD PTR [rax+0x1]
	...
   14004c3c5:	add    BYTE PTR [rax],al
   14004c3c7:	add    al,bl
   14004c3c9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004c3ca:	add    eax,DWORD PTR [rax+0x1]
   14004c3cd:	add    BYTE PTR [rax],al
   14004c3cf:	add    al,dl
   14004c3d1:	retf   
   14004c3d2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004c3dd:	add    BYTE PTR [rax],al
   14004c3df:	add    al,ch
   14004c3e1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004c3e2:	add    eax,DWORD PTR [rax+0x1]
   14004c3e5:	add    BYTE PTR [rax],al
   14004c3e7:	add    al,bl
   14004c3e9:	retf   
   14004c3ea:	add    eax,DWORD PTR [rax+0x1]
   14004c3ed:	add    BYTE PTR [rax],al
   14004c3ef:	add    al,ch
   14004c3f1:	std    
   14004c3f2:	add    BYTE PTR [rax],al
   14004c3f4:	add    BYTE PTR [rax],al
   14004c3f6:	add    BYTE PTR [rax],al
   14004c3f8:	add    BYTE PTR [rdi+0x14003],ah
   14004c3fe:	add    BYTE PTR [rax],al
   14004c400:	fmul   st,st(3)
   14004c402:	add    eax,DWORD PTR [rax+0x1]
	...
   14004c40d:	add    BYTE PTR [rax],al
   14004c40f:	add    BYTE PTR [rax],bl
   14004c411:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004c412:	add    eax,DWORD PTR [rax+0x1]
   14004c415:	add    BYTE PTR [rax],al
   14004c417:	add    al,bl
   14004c419:	retf   
   14004c41a:	add    eax,DWORD PTR [rax+0x1]
   14004c41d:	add    BYTE PTR [rax],al
   14004c41f:	add    BYTE PTR [rax],al
   14004c421:	add    al,0x0
   14004c423:	add    BYTE PTR [rax],al
   14004c425:	add    BYTE PTR [rax],al
   14004c427:	add    BYTE PTR [rax],dh
   14004c429:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004c42a:	add    eax,DWORD PTR [rax+0x1]
   14004c42d:	add    BYTE PTR [rax],al
   14004c42f:	add    al,bl
   14004c431:	retf   
   14004c432:	add    eax,DWORD PTR [rax+0x1]
	...
   14004c43d:	add    BYTE PTR [rax],al
   14004c43f:	add    BYTE PTR [rax-0x59],cl
   14004c442:	add    eax,DWORD PTR [rax+0x1]
   14004c445:	add    BYTE PTR [rax],al
   14004c447:	add    al,bl
   14004c449:	retf   
   14004c44a:	add    eax,DWORD PTR [rax+0x1]
   14004c44d:	add    BYTE PTR [rax],al
   14004c44f:	add    BYTE PTR [rax+rax*1],bh
   14004c452:	add    BYTE PTR [rax],al
   14004c454:	add    BYTE PTR [rax],al
   14004c456:	add    BYTE PTR [rax],al
   14004c458:	push   0x14003a7
   14004c45d:	add    BYTE PTR [rax],al
   14004c45f:	add    al,bl
   14004c461:	retf   
   14004c462:	add    eax,DWORD PTR [rax+0x1]
	...
   14004c46d:	add    BYTE PTR [rax],al
   14004c46f:	add    BYTE PTR [rax+0x14003a7],bl
   14004c475:	add    BYTE PTR [rax],al
   14004c477:	add    al,bl
   14004c479:	retf   
   14004c47a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004c485:	add    BYTE PTR [rax],al
   14004c487:	add    BYTE PTR [rax+0x14003a7],bh
   14004c48d:	add    BYTE PTR [rax],al
   14004c48f:	add    al,bl
   14004c491:	retf   
   14004c492:	add    eax,DWORD PTR [rax+0x1]
	...
   14004c49d:	add    BYTE PTR [rax],al
   14004c49f:	add    al,cl
   14004c4a1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004c4a2:	add    eax,DWORD PTR [rax+0x1]
   14004c4a5:	add    BYTE PTR [rax],al
   14004c4a7:	add    al,bl
   14004c4a9:	retf   
   14004c4aa:	add    eax,DWORD PTR [rax+0x1]
	...
   14004c4b5:	add    BYTE PTR [rax],al
   14004c4b7:	add    al,bl
   14004c4b9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004c4ba:	add    eax,DWORD PTR [rax+0x1]
   14004c4bd:	add    BYTE PTR [rax],al
   14004c4bf:	add    al,bl
   14004c4c1:	retf   
   14004c4c2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004c4cd:	add    BYTE PTR [rax],al
   14004c4cf:	add    al,dh
   14004c4d1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004c4d2:	add    eax,DWORD PTR [rax+0x1]
   14004c4d5:	add    BYTE PTR [rax],al
   14004c4d7:	add    al,bl
   14004c4d9:	retf   
   14004c4da:	add    eax,DWORD PTR [rax+0x1]
   14004c4dd:	add    BYTE PTR [rax],al
   14004c4df:	add    BYTE PTR [rax+0xdbb],ah
   14004c4e5:	add    BYTE PTR [rax],al
   14004c4e7:	add    BYTE PTR [rax],ah
   14004c4e9:	test   al,0x3
   14004c4eb:	rex add DWORD PTR [rax],eax
   14004c4ee:	add    BYTE PTR [rax],al
   14004c4f0:	fmul   st,st(3)
   14004c4f2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004c4fd:	add    BYTE PTR [rax],al
   14004c4ff:	add    BYTE PTR [rax-0x58],cl
   14004c502:	add    eax,DWORD PTR [rax+0x1]
   14004c505:	add    BYTE PTR [rax],al
   14004c507:	add    al,bl
   14004c509:	retf   
   14004c50a:	add    eax,DWORD PTR [rax+0x1]
   14004c50d:	add    BYTE PTR [rax],al
   14004c50f:	add    BYTE PTR [rdx],cl
   14004c511:	add    BYTE PTR [rax],al
   14004c513:	add    BYTE PTR [rax],al
   14004c515:	add    BYTE PTR [rax],al
   14004c517:	add    BYTE PTR [rax-0x58],dh
   14004c51a:	add    eax,DWORD PTR [rax+0x1]
   14004c51d:	add    BYTE PTR [rax],al
   14004c51f:	add    al,bl
   14004c521:	retf   
   14004c522:	add    eax,DWORD PTR [rax+0x1]
   14004c525:	add    BYTE PTR [rax],al
   14004c527:	add    BYTE PTR [rdi+0x0],bh
   14004c52a:	add    BYTE PTR [rax],al
   14004c52c:	add    BYTE PTR [rax],al
   14004c52e:	add    BYTE PTR [rax],al
   14004c530:	mov    BYTE PTR [rax+0x14003],ch
   14004c536:	add    BYTE PTR [rax],al
   14004c538:	fmul   st,st(3)
   14004c53a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004c545:	add    BYTE PTR [rax],al
   14004c547:	add    BYTE PTR [rax+0x14003a8],bl
   14004c54d:	add    BYTE PTR [rax],al
   14004c54f:	add    al,bl
   14004c551:	retf   
   14004c552:	add    eax,DWORD PTR [rax+0x1]
   14004c555:	add    BYTE PTR [rax],al
   14004c557:	add    BYTE PTR [rax],ah
   14004c559:	mov    edi,0x2
   14004c55e:	add    BYTE PTR [rax],al
   14004c560:	mov    eax,0x14003a8
   14004c565:	add    BYTE PTR [rax],al
   14004c567:	add    al,bl
   14004c569:	retf   
   14004c56a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004c575:	add    BYTE PTR [rax],al
   14004c577:	add    al,cl
   14004c579:	test   al,0x3
   14004c57b:	rex add DWORD PTR [rax],eax
   14004c57e:	add    BYTE PTR [rax],al
   14004c580:	fmul   st,st(3)
   14004c582:	add    eax,DWORD PTR [rax+0x1]
   14004c585:	add    BYTE PTR [rax],al
   14004c587:	add    BYTE PTR [rax+rax*1+0x0],ah
   14004c58b:	add    BYTE PTR [rax],al
   14004c58d:	add    BYTE PTR [rax],al
   14004c58f:	add    al,ch
   14004c591:	test   al,0x3
   14004c593:	rex add DWORD PTR [rax],eax
   14004c596:	add    BYTE PTR [rax],al
   14004c598:	fmul   st,st(3)
   14004c59a:	add    eax,DWORD PTR [rax+0x1]
   14004c59d:	add    BYTE PTR [rax],al
   14004c59f:	add    al,al
   14004c5a1:	(bad)  
   14004c5a2:	or     DWORD PTR [rax],eax
   14004c5a4:	add    BYTE PTR [rax],al
   14004c5a6:	add    BYTE PTR [rax],al
   14004c5a8:	adc    BYTE PTR [rcx+0x14003],ch
   14004c5ae:	add    BYTE PTR [rax],al
   14004c5b0:	fmul   st,st(3)
   14004c5b2:	add    eax,DWORD PTR [rax+0x1]
   14004c5b5:	add    BYTE PTR [rax],al
   14004c5b7:	add    BYTE PTR [rax],al
   14004c5b9:	pop    rsp
   14004c5ba:	es add eax,0x0
   14004c5c0:	xor    BYTE PTR [rcx+0x14003],ch
   14004c5c6:	add    BYTE PTR [rax],al
   14004c5c8:	fmul   st,st(3)
   14004c5ca:	add    eax,DWORD PTR [rax+0x1]
	...
   14004c5d5:	add    BYTE PTR [rax],al
   14004c5d7:	add    BYTE PTR [rax-0x57],dl
   14004c5da:	add    eax,DWORD PTR [rax+0x1]
   14004c5dd:	add    BYTE PTR [rax],al
   14004c5df:	add    al,bl
   14004c5e1:	retf   
   14004c5e2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004c5ed:	add    BYTE PTR [rax],al
   14004c5ef:	add    BYTE PTR [rax-0x57],bh
   14004c5f2:	add    eax,DWORD PTR [rax+0x1]
   14004c5f5:	add    BYTE PTR [rax],al
   14004c5f7:	add    al,bl
   14004c5f9:	retf   
   14004c5fa:	add    eax,DWORD PTR [rax+0x1]
	...
   14004c605:	add    BYTE PTR [rax],al
   14004c607:	add    BYTE PTR [rax+0x14003a9],ah
   14004c60d:	add    BYTE PTR [rax],al
   14004c60f:	add    al,bl
   14004c611:	retf   
   14004c612:	add    eax,DWORD PTR [rax+0x1]
   14004c615:	add    BYTE PTR [rax],al
   14004c617:	add    BYTE PTR [rax+rax*1],bh
   14004c61a:	add    BYTE PTR [rax],al
   14004c61c:	add    BYTE PTR [rax],al
   14004c61e:	add    BYTE PTR [rax],al
   14004c620:	shr    BYTE PTR [rcx+0x14003],0x0
   14004c627:	add    al,bl
   14004c629:	retf   
   14004c62a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004c635:	add    BYTE PTR [rax],al
   14004c637:	add    al,dl
   14004c639:	test   eax,0x14003
   14004c63e:	add    BYTE PTR [rax],al
   14004c640:	fmul   st,st(3)
   14004c642:	add    eax,DWORD PTR [rax+0x1]
	...
   14004c64d:	add    BYTE PTR [rax],al
   14004c64f:	add    al,ah
   14004c651:	test   eax,0x14003
   14004c656:	add    BYTE PTR [rax],al
   14004c658:	fmul   st,st(3)
   14004c65a:	add    eax,DWORD PTR [rax+0x1]
   14004c65d:	add    BYTE PTR [rax],al
   14004c65f:	add    BYTE PTR [rax],dl
   14004c661:	(bad)  
   14004c662:	add    BYTE PTR [rax],al
   14004c664:	add    BYTE PTR [rax],al
   14004c666:	add    BYTE PTR [rax],al
   14004c668:	add    BYTE PTR [rdx+0x14003],ch
   14004c66e:	add    BYTE PTR [rax],al
   14004c670:	fmul   st,st(3)
   14004c672:	add    eax,DWORD PTR [rax+0x1]
   14004c675:	add    BYTE PTR [rax],al
   14004c677:	add    BYTE PTR [rcx],al
   14004c679:	add    BYTE PTR [rax],al
   14004c67b:	add    BYTE PTR [rax],al
   14004c67d:	add    BYTE PTR [rax],al
   14004c67f:	add    BYTE PTR [rax],ch
   14004c681:	stos   BYTE PTR es:[rdi],al
   14004c682:	add    eax,DWORD PTR [rax+0x1]
   14004c685:	add    BYTE PTR [rax],al
   14004c687:	add    al,bl
   14004c689:	retf   
   14004c68a:	add    eax,DWORD PTR [rax+0x1]
   14004c68d:	add    BYTE PTR [rax],al
   14004c68f:	add    bh,bh
   14004c691:	add    eax,DWORD PTR [rax]
   14004c693:	add    BYTE PTR [rax],al
   14004c695:	add    BYTE PTR [rax],al
   14004c697:	add    BYTE PTR [rax-0x56],cl
   14004c69a:	add    eax,DWORD PTR [rax+0x1]
   14004c69d:	add    BYTE PTR [rax],al
   14004c69f:	add    al,bl
   14004c6a1:	retf   
   14004c6a2:	add    eax,DWORD PTR [rax+0x1]
   14004c6a5:	add    BYTE PTR [rax],al
   14004c6a7:	add    BYTE PTR [rip+0x0],al        # 0x14004c6ad
   14004c6ad:	add    BYTE PTR [rax],al
   14004c6af:	add    BYTE PTR [rax-0x56],ah
   14004c6b2:	add    eax,DWORD PTR [rax+0x1]
   14004c6b5:	add    BYTE PTR [rax],al
   14004c6b7:	add    al,bl
   14004c6b9:	retf   
   14004c6ba:	add    eax,DWORD PTR [rax+0x1]
   14004c6bd:	add    BYTE PTR [rax],al
   14004c6bf:	add    BYTE PTR [rdx],cl
   14004c6c1:	add    BYTE PTR [rax],al
   14004c6c3:	add    BYTE PTR [rax],al
   14004c6c5:	add    BYTE PTR [rax],al
   14004c6c7:	add    BYTE PTR [rax+0x14003aa],cl
   14004c6cd:	add    BYTE PTR [rax],al
   14004c6cf:	add    al,bl
   14004c6d1:	retf   
   14004c6d2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004c6dd:	add    BYTE PTR [rax],al
   14004c6df:	add    BYTE PTR [rax+0x14003aa],ch
   14004c6e5:	add    BYTE PTR [rax],al
   14004c6e7:	add    al,bl
   14004c6e9:	retf   
   14004c6ea:	add    eax,DWORD PTR [rax+0x1]
	...
   14004c6f5:	add    BYTE PTR [rax],al
   14004c6f7:	add    al,cl
   14004c6f9:	stos   BYTE PTR es:[rdi],al
   14004c6fa:	add    eax,DWORD PTR [rax+0x1]
   14004c6fd:	add    BYTE PTR [rax],al
   14004c6ff:	add    al,bl
   14004c701:	retf   
   14004c702:	add    eax,DWORD PTR [rax+0x1]
   14004c705:	add    BYTE PTR [rax],al
   14004c707:	add    BYTE PTR [rcx],al
   14004c709:	add    BYTE PTR [rax],al
   14004c70b:	add    BYTE PTR [rax],al
   14004c70d:	add    BYTE PTR [rax],al
   14004c70f:	add    al,dh
   14004c711:	stos   BYTE PTR es:[rdi],al
   14004c712:	add    eax,DWORD PTR [rax+0x1]
   14004c715:	add    BYTE PTR [rax],al
   14004c717:	add    al,bl
   14004c719:	retf   
   14004c71a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004c725:	add    BYTE PTR [rax],al
   14004c727:	add    al,bh
   14004c729:	stos   BYTE PTR es:[rdi],al
   14004c72a:	add    eax,DWORD PTR [rax+0x1]
   14004c72d:	add    BYTE PTR [rax],al
   14004c72f:	add    al,bl
   14004c731:	retf   
   14004c732:	add    eax,DWORD PTR [rax+0x1]
   14004c735:	add    BYTE PTR [rax],al
   14004c737:	add    BYTE PTR [rax+0x54],ah
   14004c73a:	add    BYTE PTR [rax],al
   14004c73c:	add    BYTE PTR [rax],al
   14004c73e:	add    BYTE PTR [rax],al
   14004c740:	adc    BYTE PTR [rbx+0x14003],ch
   14004c746:	add    BYTE PTR [rax],al
   14004c748:	fmul   st,st(3)
   14004c74a:	add    eax,DWORD PTR [rax+0x1]
   14004c74d:	add    BYTE PTR [rax],al
   14004c74f:	add    BYTE PTR [rax+0x1],ch
   14004c752:	add    BYTE PTR [rax],al
   14004c754:	add    BYTE PTR [rax],al
   14004c756:	add    BYTE PTR [rax],al
   14004c758:	sub    BYTE PTR [rbx+0x14003],ch
   14004c75e:	add    BYTE PTR [rax],al
   14004c760:	fmul   st,st(3)
   14004c762:	add    eax,DWORD PTR [rax+0x1]
	...
   14004c76d:	add    BYTE PTR [rax],al
   14004c76f:	add    BYTE PTR [rax],bh
   14004c771:	stos   DWORD PTR es:[rdi],eax
   14004c772:	add    eax,DWORD PTR [rax+0x1]
   14004c775:	add    BYTE PTR [rax],al
   14004c777:	add    al,bl
   14004c779:	retf   
   14004c77a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004c785:	add    BYTE PTR [rax],al
   14004c787:	add    BYTE PTR [rax-0x55],cl
   14004c78a:	add    eax,DWORD PTR [rax+0x1]
   14004c78d:	add    BYTE PTR [rax],al
   14004c78f:	add    al,bl
   14004c791:	retf   
   14004c792:	add    eax,DWORD PTR [rax+0x1]
	...
   14004c79d:	add    BYTE PTR [rax],al
   14004c79f:	add    BYTE PTR [rax-0x55],dh
   14004c7a2:	add    eax,DWORD PTR [rax+0x1]
   14004c7a5:	add    BYTE PTR [rax],al
   14004c7a7:	add    al,bl
   14004c7a9:	retf   
   14004c7aa:	add    eax,DWORD PTR [rax+0x1]
   14004c7ad:	add    BYTE PTR [rax],al
   14004c7af:	add    BYTE PTR [rip+0x0],al        # 0x14004c7b5
   14004c7b5:	add    BYTE PTR [rax],al
   14004c7b7:	add    BYTE PTR [rax+0x14003ab],dl
   14004c7bd:	add    BYTE PTR [rax],al
   14004c7bf:	add    al,bl
   14004c7c1:	retf   
   14004c7c2:	add    eax,DWORD PTR [rax+0x1]
   14004c7c5:	add    BYTE PTR [rax],al
   14004c7c7:	add    BYTE PTR [rcx],al
   14004c7c9:	add    BYTE PTR [rax],al
   14004c7cb:	add    BYTE PTR [rax],al
   14004c7cd:	add    BYTE PTR [rax],al
   14004c7cf:	add    BYTE PTR [rax+0x14003ab],dh
   14004c7d5:	add    BYTE PTR [rax],al
   14004c7d7:	add    al,bl
   14004c7d9:	retf   
   14004c7da:	add    eax,DWORD PTR [rax+0x1]
   14004c7dd:	add    BYTE PTR [rax],al
   14004c7df:	add    BYTE PTR [rax+rax*1+0x0],ah
   14004c7e3:	add    BYTE PTR [rax],al
   14004c7e5:	add    BYTE PTR [rax],al
   14004c7e7:	add    al,dl
   14004c7e9:	stos   DWORD PTR es:[rdi],eax
   14004c7ea:	add    eax,DWORD PTR [rax+0x1]
   14004c7ed:	add    BYTE PTR [rax],al
   14004c7ef:	add    al,bl
   14004c7f1:	retf   
   14004c7f2:	add    eax,DWORD PTR [rax+0x1]
   14004c7f5:	add    BYTE PTR [rax],al
   14004c7f7:	add    BYTE PTR [rdi],cl
   14004c7f9:	add    BYTE PTR [rax],al
   14004c7fb:	add    BYTE PTR [rax],al
   14004c7fd:	add    BYTE PTR [rax],al
   14004c7ff:	add    al,dh
   14004c801:	stos   DWORD PTR es:[rdi],eax
   14004c802:	add    eax,DWORD PTR [rax+0x1]
   14004c805:	add    BYTE PTR [rax],al
   14004c807:	add    al,bl
   14004c809:	retf   
   14004c80a:	add    eax,DWORD PTR [rax+0x1]
   14004c80d:	add    BYTE PTR [rax],al
   14004c80f:	add    BYTE PTR [rip+0x0],al        # 0x14004c815
   14004c815:	add    BYTE PTR [rax],al
   14004c817:	add    BYTE PTR [rax],dl
   14004c819:	lods   al,BYTE PTR ds:[rsi]
   14004c81a:	add    eax,DWORD PTR [rax+0x1]
   14004c81d:	add    BYTE PTR [rax],al
   14004c81f:	add    al,bl
   14004c821:	retf   
   14004c822:	add    eax,DWORD PTR [rax+0x1]
   14004c825:	add    BYTE PTR [rax],al
   14004c827:	add    BYTE PTR [rip+0x0],al        # 0x14004c82d
   14004c82d:	add    BYTE PTR [rax],al
   14004c82f:	add    BYTE PTR [rax],dh
   14004c831:	lods   al,BYTE PTR ds:[rsi]
   14004c832:	add    eax,DWORD PTR [rax+0x1]
   14004c835:	add    BYTE PTR [rax],al
   14004c837:	add    al,bl
   14004c839:	retf   
   14004c83a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004c845:	add    BYTE PTR [rax],al
   14004c847:	add    BYTE PTR [rax-0x54],dl
   14004c84a:	add    eax,DWORD PTR [rax+0x1]
   14004c84d:	add    BYTE PTR [rax],al
   14004c84f:	add    al,bl
   14004c851:	retf   
   14004c852:	add    eax,DWORD PTR [rax+0x1]
	...
   14004c85d:	add    BYTE PTR [rax],al
   14004c85f:	add    BYTE PTR [rax-0x54],ah
   14004c862:	add    eax,DWORD PTR [rax+0x1]
   14004c865:	add    BYTE PTR [rax],al
   14004c867:	add    al,bl
   14004c869:	retf   
   14004c86a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004c875:	add    BYTE PTR [rax],al
   14004c877:	add    BYTE PTR [rax-0x54],ch
   14004c87a:	add    eax,DWORD PTR [rax+0x1]
   14004c87d:	add    BYTE PTR [rax],al
   14004c87f:	add    al,bl
   14004c881:	retf   
   14004c882:	add    eax,DWORD PTR [rax+0x1]
	...
   14004c88d:	add    BYTE PTR [rax],al
   14004c88f:	add    BYTE PTR [rax+0x14003ac],al
   14004c895:	add    BYTE PTR [rax],al
   14004c897:	add    al,bl
   14004c899:	retf   
   14004c89a:	add    eax,DWORD PTR [rax+0x1]
   14004c89d:	add    BYTE PTR [rax],al
   14004c89f:	add    BYTE PTR [rax],ah
   14004c8a1:	rex.WRX add BYTE PTR [rax],r8b
   14004c8a4:	add    BYTE PTR [rax],al
   14004c8a6:	add    BYTE PTR [rax],al
   14004c8a8:	cwde   
   14004c8a9:	lods   al,BYTE PTR ds:[rsi]
   14004c8aa:	add    eax,DWORD PTR [rax+0x1]
   14004c8ad:	add    BYTE PTR [rax],al
   14004c8af:	add    al,bl
   14004c8b1:	retf   
   14004c8b2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004c8bd:	add    BYTE PTR [rax],al
   14004c8bf:	add    BYTE PTR [rax+0x14003ac],ch
   14004c8c5:	add    BYTE PTR [rax],al
   14004c8c7:	add    al,bl
   14004c8c9:	retf   
   14004c8ca:	add    eax,DWORD PTR [rax+0x1]
	...
   14004c8d5:	add    BYTE PTR [rax],al
   14004c8d7:	add    BYTE PTR [rax+0x14003ac],bh
   14004c8dd:	add    BYTE PTR [rax],al
   14004c8df:	add    al,bl
   14004c8e1:	retf   
   14004c8e2:	add    eax,DWORD PTR [rax+0x1]
   14004c8e5:	add    BYTE PTR [rax],al
   14004c8e7:	add    BYTE PTR [rax+0x1f],al
   14004c8ea:	add    BYTE PTR [rax],al
   14004c8ec:	add    BYTE PTR [rax],al
   14004c8ee:	add    BYTE PTR [rax],al
   14004c8f0:	call   0x14144cca1
   14004c8f5:	add    BYTE PTR [rax],al
   14004c8f7:	add    al,bl
   14004c8f9:	retf   
   14004c8fa:	add    eax,DWORD PTR [rax+0x1]
	...
   14004c905:	add    BYTE PTR [rax],al
   14004c907:	add    al,bh
   14004c909:	lods   al,BYTE PTR ds:[rsi]
   14004c90a:	add    eax,DWORD PTR [rax+0x1]
   14004c90d:	add    BYTE PTR [rax],al
   14004c90f:	add    al,bl
   14004c911:	retf   
   14004c912:	add    eax,DWORD PTR [rax+0x1]
   14004c915:	add    BYTE PTR [rax],al
   14004c917:	add    BYTE PTR [rax],al
   14004c919:	add    BYTE PTR [rcx],al
   14004c91b:	add    BYTE PTR [rax],al
   14004c91d:	add    BYTE PTR [rax],al
   14004c91f:	add    BYTE PTR [rax],bl
   14004c921:	lods   eax,DWORD PTR ds:[rsi]
   14004c922:	add    eax,DWORD PTR [rax+0x1]
   14004c925:	add    BYTE PTR [rax],al
   14004c927:	add    al,bl
   14004c929:	retf   
   14004c92a:	add    eax,DWORD PTR [rax+0x1]
   14004c92d:	add    BYTE PTR [rax],al
   14004c92f:	add    bh,bh
   14004c931:	(bad)  
   14004c932:	add    BYTE PTR [rax],al
   14004c934:	add    BYTE PTR [rax],al
   14004c936:	add    BYTE PTR [rax],al
   14004c938:	cmp    BYTE PTR [rbp+0x14003],ch
   14004c93e:	add    BYTE PTR [rax],al
   14004c940:	fmul   st,st(3)
   14004c942:	add    eax,DWORD PTR [rax+0x1]
   14004c945:	add    BYTE PTR [rax],al
   14004c947:	add    BYTE PTR [rcx],cl
   14004c949:	add    al,BYTE PTR [rax]
   14004c94b:	add    BYTE PTR [rax],al
   14004c94d:	add    BYTE PTR [rax],al
   14004c94f:	add    BYTE PTR [rax-0x53],bl
   14004c952:	add    eax,DWORD PTR [rax+0x1]
   14004c955:	add    BYTE PTR [rax],al
   14004c957:	add    al,bl
   14004c959:	retf   
   14004c95a:	add    eax,DWORD PTR [rax+0x1]
   14004c95d:	add    BYTE PTR [rax],al
   14004c95f:	add    BYTE PTR [rdx],dh
   14004c961:	add    BYTE PTR [rax],al
   14004c963:	add    BYTE PTR [rax],al
   14004c965:	add    BYTE PTR [rax],al
   14004c967:	add    BYTE PTR [rax-0x53],bh
   14004c96a:	add    eax,DWORD PTR [rax+0x1]
   14004c96d:	add    BYTE PTR [rax],al
   14004c96f:	add    al,bl
   14004c971:	retf   
   14004c972:	add    eax,DWORD PTR [rax+0x1]
   14004c975:	add    BYTE PTR [rax],al
   14004c977:	add    BYTE PTR [rdx],dh
   14004c979:	add    BYTE PTR [rax],al
   14004c97b:	add    BYTE PTR [rax],al
   14004c97d:	add    BYTE PTR [rax],al
   14004c97f:	add    BYTE PTR [rax+0x14003ad],bl
   14004c985:	add    BYTE PTR [rax],al
   14004c987:	add    al,bl
   14004c989:	retf   
   14004c98a:	add    eax,DWORD PTR [rax+0x1]
   14004c98d:	add    BYTE PTR [rax],al
   14004c98f:	add    al,ch
   14004c991:	add    eax,DWORD PTR [rax]
   14004c993:	add    BYTE PTR [rax],al
   14004c995:	add    BYTE PTR [rax],al
   14004c997:	add    BYTE PTR [rax+0x14003ad],bh
   14004c99d:	add    BYTE PTR [rax],al
   14004c99f:	add    al,bl
   14004c9a1:	retf   
   14004c9a2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004c9ad:	add    BYTE PTR [rax],al
   14004c9af:	add    al,ch
   14004c9b1:	lods   eax,DWORD PTR ds:[rsi]
   14004c9b2:	add    eax,DWORD PTR [rax+0x1]
   14004c9b5:	add    BYTE PTR [rax],al
   14004c9b7:	add    al,bl
   14004c9b9:	retf   
   14004c9ba:	add    eax,DWORD PTR [rax+0x1]
   14004c9bd:	add    BYTE PTR [rax],al
   14004c9bf:	add    BYTE PTR [rdx],cl
   14004c9c1:	add    BYTE PTR [rax],al
   14004c9c3:	add    BYTE PTR [rax],al
   14004c9c5:	add    BYTE PTR [rax],al
   14004c9c7:	add    BYTE PTR [rax],dl
   14004c9c9:	scas   al,BYTE PTR es:[rdi]
   14004c9ca:	add    eax,DWORD PTR [rax+0x1]
   14004c9cd:	add    BYTE PTR [rax],al
   14004c9cf:	add    al,bl
   14004c9d1:	retf   
   14004c9d2:	add    eax,DWORD PTR [rax+0x1]
   14004c9d5:	add    BYTE PTR [rax],al
   14004c9d7:	add    BYTE PTR [rdx],cl
   14004c9d9:	add    BYTE PTR [rax],al
   14004c9db:	add    BYTE PTR [rax],al
   14004c9dd:	add    BYTE PTR [rax],al
   14004c9df:	add    BYTE PTR [rax],bh
   14004c9e1:	scas   al,BYTE PTR es:[rdi]
   14004c9e2:	add    eax,DWORD PTR [rax+0x1]
   14004c9e5:	add    BYTE PTR [rax],al
   14004c9e7:	add    al,bl
   14004c9e9:	retf   
   14004c9ea:	add    eax,DWORD PTR [rax+0x1]
	...
   14004c9f5:	add    BYTE PTR [rax],al
   14004c9f7:	add    BYTE PTR [rax-0x52],dl
   14004c9fa:	add    eax,DWORD PTR [rax+0x1]
   14004c9fd:	add    BYTE PTR [rax],al
   14004c9ff:	add    al,bl
   14004ca01:	retf   
   14004ca02:	add    eax,DWORD PTR [rax+0x1]
   14004ca05:	add    BYTE PTR [rax],al
   14004ca07:	add    BYTE PTR [rax+rax*1],bh
   14004ca0a:	add    BYTE PTR [rax],al
   14004ca0c:	add    BYTE PTR [rax],al
   14004ca0e:	add    BYTE PTR [rax],al
   14004ca10:	mov    BYTE PTR [rsi+0x14003],ch
   14004ca16:	add    BYTE PTR [rax],al
   14004ca18:	fmul   st,st(3)
   14004ca1a:	add    eax,DWORD PTR [rax+0x1]
   14004ca1d:	add    BYTE PTR [rax],al
   14004ca1f:	add    BYTE PTR [rdx],al
   14004ca21:	add    BYTE PTR [rax],al
   14004ca23:	add    BYTE PTR [rax],al
   14004ca25:	add    BYTE PTR [rax],al
   14004ca27:	add    BYTE PTR [rax+0x14003ae],bh
   14004ca2d:	add    BYTE PTR [rax],al
   14004ca2f:	add    al,bl
   14004ca31:	retf   
   14004ca32:	add    eax,DWORD PTR [rax+0x1]
   14004ca35:	add    BYTE PTR [rax],al
   14004ca37:	add    BYTE PTR [rdi],cl
   14004ca39:	add    BYTE PTR [rax],al
   14004ca3b:	add    BYTE PTR [rax],al
   14004ca3d:	add    BYTE PTR [rax],al
   14004ca3f:	add    al,ah
   14004ca41:	scas   al,BYTE PTR es:[rdi]
   14004ca42:	add    eax,DWORD PTR [rax+0x1]
   14004ca45:	add    BYTE PTR [rax],al
   14004ca47:	add    al,bl
   14004ca49:	retf   
   14004ca4a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004ca55:	add    BYTE PTR [rax],al
   14004ca57:	add    al,dh
   14004ca59:	scas   al,BYTE PTR es:[rdi]
   14004ca5a:	add    eax,DWORD PTR [rax+0x1]
   14004ca5d:	add    BYTE PTR [rax],al
   14004ca5f:	add    al,bl
   14004ca61:	retf   
   14004ca62:	add    eax,DWORD PTR [rax+0x1]
   14004ca65:	add    BYTE PTR [rax],al
   14004ca67:	add    BYTE PTR [rax+0x17],dh
   14004ca6a:	add    BYTE PTR [rax],al
   14004ca6c:	add    BYTE PTR [rax],al
   14004ca6e:	add    BYTE PTR [rax],al
   14004ca70:	or     BYTE PTR [rdi+0x14003],ch
   14004ca76:	add    BYTE PTR [rax],al
   14004ca78:	fmul   st,st(3)
   14004ca7a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004ca85:	add    BYTE PTR [rax],al
   14004ca87:	add    BYTE PTR [rax],dl
   14004ca89:	scas   eax,DWORD PTR es:[rdi]
   14004ca8a:	add    eax,DWORD PTR [rax+0x1]
   14004ca8d:	add    BYTE PTR [rax],al
   14004ca8f:	add    al,bl
   14004ca91:	retf   
   14004ca92:	add    eax,DWORD PTR [rax+0x1]
   14004ca95:	add    BYTE PTR [rax],al
   14004ca97:	add    BYTE PTR [rax+0xdbb],ah
   14004ca9d:	add    BYTE PTR [rax],al
   14004ca9f:	add    BYTE PTR [rax],dh
   14004caa1:	scas   eax,DWORD PTR es:[rdi]
   14004caa2:	add    eax,DWORD PTR [rax+0x1]
   14004caa5:	add    BYTE PTR [rax],al
   14004caa7:	add    al,bl
   14004caa9:	retf   
   14004caaa:	add    eax,DWORD PTR [rax+0x1]
	...
   14004cab5:	add    BYTE PTR [rax],al
   14004cab7:	add    BYTE PTR [rax-0x51],al
   14004caba:	add    eax,DWORD PTR [rax+0x1]
   14004cabd:	add    BYTE PTR [rax],al
   14004cabf:	add    al,bl
   14004cac1:	retf   
   14004cac2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004cacd:	add    BYTE PTR [rax],al
   14004cacf:	add    BYTE PTR [rax-0x51],bl
   14004cad2:	add    eax,DWORD PTR [rax+0x1]
   14004cad5:	add    BYTE PTR [rax],al
   14004cad7:	add    al,bl
   14004cad9:	retf   
   14004cada:	add    eax,DWORD PTR [rax+0x1]
	...
   14004cae5:	add    BYTE PTR [rax],al
   14004cae7:	add    BYTE PTR [rax-0x51],ch
   14004caea:	add    eax,DWORD PTR [rax+0x1]
   14004caed:	add    BYTE PTR [rax],al
   14004caef:	add    al,bl
   14004caf1:	retf   
   14004caf2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004cafd:	add    BYTE PTR [rax],al
   14004caff:	add    BYTE PTR [rax-0x51],dh
   14004cb02:	add    eax,DWORD PTR [rax+0x1]
   14004cb05:	add    BYTE PTR [rax],al
   14004cb07:	add    al,bl
   14004cb09:	retf   
   14004cb0a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004cb15:	add    BYTE PTR [rax],al
   14004cb17:	add    BYTE PTR [rax+0x14003af],ah
   14004cb1d:	add    BYTE PTR [rax],al
   14004cb1f:	add    al,bl
   14004cb21:	retf   
   14004cb22:	add    eax,DWORD PTR [rax+0x1]
   14004cb25:	add    BYTE PTR [rax],al
   14004cb27:	add    BYTE PTR [rax-0x16],ah
   14004cb2a:	add    BYTE PTR [rax],al
   14004cb2c:	add    BYTE PTR [rax],al
   14004cb2e:	add    BYTE PTR [rax],al
   14004cb30:	shr    BYTE PTR [rdi+0x14003],0x0
   14004cb37:	add    al,bl
   14004cb39:	retf   
   14004cb3a:	add    eax,DWORD PTR [rax+0x1]
   14004cb3d:	add    BYTE PTR [rax],al
   14004cb3f:	add    BYTE PTR [rax+0x13],cl
   14004cb45:	add    BYTE PTR [rax],al
   14004cb47:	add    al,ah
   14004cb49:	scas   eax,DWORD PTR es:[rdi]
   14004cb4a:	add    eax,DWORD PTR [rax+0x1]
   14004cb4d:	add    BYTE PTR [rax],al
   14004cb4f:	add    al,bl
   14004cb51:	retf   
   14004cb52:	add    eax,DWORD PTR [rax+0x1]
	...
   14004cb5d:	add    BYTE PTR [rax],al
   14004cb5f:	add    al,dh
   14004cb61:	scas   eax,DWORD PTR es:[rdi]
   14004cb62:	add    eax,DWORD PTR [rax+0x1]
   14004cb65:	add    BYTE PTR [rax],al
   14004cb67:	add    al,bl
   14004cb69:	retf   
   14004cb6a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004cb79:	mov    al,0x3
   14004cb7b:	rex add DWORD PTR [rax],eax
   14004cb7e:	add    BYTE PTR [rax],al
   14004cb80:	fmul   st,st(3)
   14004cb82:	add    eax,DWORD PTR [rax+0x1]
	...
   14004cb8d:	add    BYTE PTR [rax],al
   14004cb8f:	add    BYTE PTR [rax],dl
   14004cb91:	mov    al,0x3
   14004cb93:	rex add DWORD PTR [rax],eax
   14004cb96:	add    BYTE PTR [rax],al
   14004cb98:	fmul   st,st(3)
   14004cb9a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004cba5:	add    BYTE PTR [rax],al
   14004cba7:	add    BYTE PTR [rax],bh
   14004cba9:	mov    al,0x3
   14004cbab:	rex add DWORD PTR [rax],eax
   14004cbae:	add    BYTE PTR [rax],al
   14004cbb0:	fmul   st,st(3)
   14004cbb2:	add    eax,DWORD PTR [rax+0x1]
   14004cbb5:	add    BYTE PTR [rax],al
   14004cbb7:	add    BYTE PTR [rdi],al
   14004cbb9:	add    al,0x0
   14004cbbb:	add    BYTE PTR [rax],al
   14004cbbd:	add    BYTE PTR [rax],al
   14004cbbf:	add    BYTE PTR [rax-0x50],bl
   14004cbc2:	add    eax,DWORD PTR [rax+0x1]
   14004cbc5:	add    BYTE PTR [rax],al
   14004cbc7:	add    al,bl
   14004cbc9:	retf   
   14004cbca:	add    eax,DWORD PTR [rax+0x1]
   14004cbcd:	add    BYTE PTR [rax],al
   14004cbcf:	add    BYTE PTR [rdi],bl
   14004cbd1:	add    BYTE PTR [rax],al
   14004cbd3:	add    BYTE PTR [rax],al
   14004cbd5:	add    BYTE PTR [rax],al
   14004cbd7:	add    BYTE PTR [rax-0x50],bh
   14004cbda:	add    eax,DWORD PTR [rax+0x1]
   14004cbdd:	add    BYTE PTR [rax],al
   14004cbdf:	add    al,bl
   14004cbe1:	retf   
   14004cbe2:	add    eax,DWORD PTR [rax+0x1]
   14004cbe5:	add    BYTE PTR [rax],al
   14004cbe7:	add    BYTE PTR [rax],al
   14004cbe9:	add    DWORD PTR [rax],eax
   14004cbeb:	add    BYTE PTR [rax],al
   14004cbed:	add    BYTE PTR [rax],al
   14004cbef:	add    BYTE PTR [rax+0x14003b0],bl
   14004cbf5:	add    BYTE PTR [rax],al
   14004cbf7:	add    al,bl
   14004cbf9:	retf   
   14004cbfa:	add    eax,DWORD PTR [rax+0x1]
   14004cbfd:	add    BYTE PTR [rax],al
   14004cbff:	add    BYTE PTR [rcx],dl
   14004cc01:	(bad)  
   14004cc02:	add    BYTE PTR [rax],al
   14004cc04:	add    BYTE PTR [rax],al
   14004cc06:	add    BYTE PTR [rax],al
   14004cc08:	shl    BYTE PTR [rax+0x14003],0x0
   14004cc0f:	add    al,bl
   14004cc11:	retf   
   14004cc12:	add    eax,DWORD PTR [rax+0x1]
	...
   14004cc1d:	add    BYTE PTR [rax],al
   14004cc1f:	add    al,ch
   14004cc21:	mov    al,0x3
   14004cc23:	rex add DWORD PTR [rax],eax
   14004cc26:	add    BYTE PTR [rax],al
   14004cc28:	fmul   st,st(3)
   14004cc2a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004cc35:	add    BYTE PTR [rax],al
   14004cc37:	add    al,bh
   14004cc39:	mov    al,0x3
   14004cc3b:	rex add DWORD PTR [rax],eax
   14004cc3e:	add    BYTE PTR [rax],al
   14004cc40:	fmul   st,st(3)
   14004cc42:	add    eax,DWORD PTR [rax+0x1]
	...
   14004cc4d:	add    BYTE PTR [rax],al
   14004cc4f:	add    BYTE PTR [rax],dl
   14004cc51:	mov    cl,0x3
   14004cc53:	rex add DWORD PTR [rax],eax
   14004cc56:	add    BYTE PTR [rax],al
   14004cc58:	fmul   st,st(3)
   14004cc5a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004cc65:	add    BYTE PTR [rax],al
   14004cc67:	add    BYTE PTR [rax],ch
   14004cc69:	mov    cl,0x3
   14004cc6b:	rex add DWORD PTR [rax],eax
   14004cc6e:	add    BYTE PTR [rax],al
   14004cc70:	fmul   st,st(3)
   14004cc72:	add    eax,DWORD PTR [rax+0x1]
	...
   14004cc7d:	add    BYTE PTR [rax],al
   14004cc7f:	add    BYTE PTR [rax-0x4f],al
   14004cc82:	add    eax,DWORD PTR [rax+0x1]
   14004cc85:	add    BYTE PTR [rax],al
   14004cc87:	add    al,bl
   14004cc89:	retf   
   14004cc8a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004cc95:	add    BYTE PTR [rax],al
   14004cc97:	add    BYTE PTR [rax-0x4f],ah
   14004cc9a:	add    eax,DWORD PTR [rax+0x1]
   14004cc9d:	add    BYTE PTR [rax],al
   14004cc9f:	add    al,bl
   14004cca1:	retf   
   14004cca2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004ccad:	add    BYTE PTR [rax],al
   14004ccaf:	add    BYTE PTR [rax-0x4f],dh
   14004ccb2:	add    eax,DWORD PTR [rax+0x1]
   14004ccb5:	add    BYTE PTR [rax],al
   14004ccb7:	add    al,bl
   14004ccb9:	retf   
   14004ccba:	add    eax,DWORD PTR [rax+0x1]
	...
   14004ccc5:	add    BYTE PTR [rax],al
   14004ccc7:	add    BYTE PTR [rax+0x14003b1],cl
   14004cccd:	add    BYTE PTR [rax],al
   14004cccf:	add    al,bl
   14004ccd1:	retf   
   14004ccd2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004ccdd:	add    BYTE PTR [rax],al
   14004ccdf:	add    BYTE PTR [rax+0x14003b1],bl
   14004cce5:	add    BYTE PTR [rax],al
   14004cce7:	add    al,bl
   14004cce9:	retf   
   14004ccea:	add    eax,DWORD PTR [rax+0x1]
	...
   14004ccf5:	add    BYTE PTR [rax],al
   14004ccf7:	add    BYTE PTR [rax+0x14003b1],dh
   14004ccfd:	add    BYTE PTR [rax],al
   14004ccff:	add    al,bl
   14004cd01:	retf   
   14004cd02:	add    eax,DWORD PTR [rax+0x1]
	...
   14004cd0d:	add    BYTE PTR [rax],al
   14004cd0f:	add    al,cl
   14004cd11:	mov    cl,0x3
   14004cd13:	rex add DWORD PTR [rax],eax
   14004cd16:	add    BYTE PTR [rax],al
   14004cd18:	fmul   st,st(3)
   14004cd1a:	add    eax,DWORD PTR [rax+0x1]
   14004cd1d:	add    BYTE PTR [rax],al
   14004cd1f:	add    bh,bh
   14004cd21:	add    eax,DWORD PTR [rax]
   14004cd23:	add    BYTE PTR [rax],al
   14004cd25:	add    BYTE PTR [rax],al
   14004cd27:	add    al,dh
   14004cd29:	mov    cl,0x3
   14004cd2b:	rex add DWORD PTR [rax],eax
   14004cd2e:	add    BYTE PTR [rax],al
   14004cd30:	fmul   st,st(3)
   14004cd32:	add    eax,DWORD PTR [rax+0x1]
	...
   14004cd41:	mov    dl,0x3
   14004cd43:	rex add DWORD PTR [rax],eax
   14004cd46:	add    BYTE PTR [rax],al
   14004cd48:	fmul   st,st(3)
   14004cd4a:	add    eax,DWORD PTR [rax+0x1]
   14004cd4d:	add    BYTE PTR [rax],al
   14004cd4f:	add    BYTE PTR [rax+rax*1],bh
   14004cd52:	add    BYTE PTR [rax],al
   14004cd54:	add    BYTE PTR [rax],al
   14004cd56:	add    BYTE PTR [rax],al
   14004cd58:	and    BYTE PTR [rdx+0x14003],dh
   14004cd5e:	add    BYTE PTR [rax],al
   14004cd60:	fmul   st,st(3)
   14004cd62:	add    eax,DWORD PTR [rax+0x1]
	...
   14004cd6d:	add    BYTE PTR [rax],al
   14004cd6f:	add    BYTE PTR [rax],dh
   14004cd71:	mov    dl,0x3
   14004cd73:	rex add DWORD PTR [rax],eax
   14004cd76:	add    BYTE PTR [rax],al
   14004cd78:	fmul   st,st(3)
   14004cd7a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004cd85:	add    BYTE PTR [rax],al
   14004cd87:	add    BYTE PTR [rax-0x4e],al
   14004cd8a:	add    eax,DWORD PTR [rax+0x1]
   14004cd8d:	add    BYTE PTR [rax],al
   14004cd8f:	add    al,bl
   14004cd91:	retf   
   14004cd92:	add    eax,DWORD PTR [rax+0x1]
	...
   14004cd9d:	add    BYTE PTR [rax],al
   14004cd9f:	add    BYTE PTR [rax-0x4e],dl
   14004cda2:	add    eax,DWORD PTR [rax+0x1]
   14004cda5:	add    BYTE PTR [rax],al
   14004cda7:	add    al,bl
   14004cda9:	retf   
   14004cdaa:	add    eax,DWORD PTR [rax+0x1]
	...
   14004cdb5:	add    BYTE PTR [rax],al
   14004cdb7:	add    BYTE PTR [rax-0x4e],ah
   14004cdba:	add    eax,DWORD PTR [rax+0x1]
   14004cdbd:	add    BYTE PTR [rax],al
   14004cdbf:	add    al,bl
   14004cdc1:	retf   
   14004cdc2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004cdcd:	add    BYTE PTR [rax],al
   14004cdcf:	add    BYTE PTR [rax-0x4e],dh
   14004cdd2:	add    eax,DWORD PTR [rax+0x1]
   14004cdd5:	add    BYTE PTR [rax],al
   14004cdd7:	add    al,bl
   14004cdd9:	retf   
   14004cdda:	add    eax,DWORD PTR [rax+0x1]
	...
   14004cde5:	add    BYTE PTR [rax],al
   14004cde7:	add    BYTE PTR [rax+0x14003b2],al
   14004cded:	add    BYTE PTR [rax],al
   14004cdef:	add    al,bl
   14004cdf1:	retf   
   14004cdf2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004cdfd:	add    BYTE PTR [rax],al
   14004cdff:	add    BYTE PTR [rax+0x14003b2],dl
   14004ce05:	add    BYTE PTR [rax],al
   14004ce07:	add    al,bl
   14004ce09:	retf   
   14004ce0a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004ce15:	add    BYTE PTR [rax],al
   14004ce17:	add    BYTE PTR [rax+0x14003b2],ch
   14004ce1d:	add    BYTE PTR [rax],al
   14004ce1f:	add    al,bl
   14004ce21:	retf   
   14004ce22:	add    eax,DWORD PTR [rax+0x1]
   14004ce25:	add    BYTE PTR [rax],al
   14004ce27:	add    BYTE PTR [rcx+rax*1],ch
   14004ce2a:	add    BYTE PTR [rax],al
   14004ce2c:	add    BYTE PTR [rax],al
   14004ce2e:	add    BYTE PTR [rax],al
   14004ce30:	shl    BYTE PTR [rdx+0x14003],0x0
   14004ce37:	add    al,bl
   14004ce39:	retf   
   14004ce3a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004ce45:	add    BYTE PTR [rax],al
   14004ce47:	add    al,ah
   14004ce49:	mov    dl,0x3
   14004ce4b:	rex add DWORD PTR [rax],eax
   14004ce4e:	add    BYTE PTR [rax],al
   14004ce50:	fmul   st,st(3)
   14004ce52:	add    eax,DWORD PTR [rax+0x1]
	...
   14004ce5d:	add    BYTE PTR [rax],al
   14004ce5f:	add    al,dh
   14004ce61:	mov    dl,0x3
   14004ce63:	rex add DWORD PTR [rax],eax
   14004ce66:	add    BYTE PTR [rax],al
   14004ce68:	fmul   st,st(3)
   14004ce6a:	add    eax,DWORD PTR [rax+0x1]
   14004ce6d:	add    BYTE PTR [rax],al
   14004ce6f:	add    BYTE PTR [rdx],dh
	...
   14004ce79:	mov    bl,0x3
   14004ce7b:	rex add DWORD PTR [rax],eax
   14004ce7e:	add    BYTE PTR [rax],al
   14004ce80:	fmul   st,st(3)
   14004ce82:	add    eax,DWORD PTR [rax+0x1]
   14004ce85:	add    BYTE PTR [rax],al
   14004ce87:	add    BYTE PTR [rax],dl
   14004ce89:	(bad)  
   14004ce8a:	add    BYTE PTR [rax],al
   14004ce8c:	add    BYTE PTR [rax],al
   14004ce8e:	add    BYTE PTR [rax],al
   14004ce90:	xor    BYTE PTR [rbx+0x14003],dh
   14004ce96:	add    BYTE PTR [rax],al
   14004ce98:	fmul   st,st(3)
   14004ce9a:	add    eax,DWORD PTR [rax+0x1]
   14004ce9d:	add    BYTE PTR [rax],al
   14004ce9f:	add    al,al
   14004cea1:	(bad)  
   14004cea2:	or     DWORD PTR [rax],eax
   14004cea4:	add    BYTE PTR [rax],al
   14004cea6:	add    BYTE PTR [rax],al
   14004cea8:	(bad)  
   14004cea9:	mov    bl,0x3
   14004ceab:	rex add DWORD PTR [rax],eax
   14004ceae:	add    BYTE PTR [rax],al
   14004ceb0:	fmul   st,st(3)
   14004ceb2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004cebd:	add    BYTE PTR [rax],al
   14004cebf:	add    BYTE PTR [rax-0x4d],bh
   14004cec2:	add    eax,DWORD PTR [rax+0x1]
   14004cec5:	add    BYTE PTR [rax],al
   14004cec7:	add    al,bl
   14004cec9:	retf   
   14004ceca:	add    eax,DWORD PTR [rax+0x1]
	...
   14004ced5:	add    BYTE PTR [rax],al
   14004ced7:	add    BYTE PTR [rax+0x14003b3],dl
   14004cedd:	add    BYTE PTR [rax],al
   14004cedf:	add    al,bl
   14004cee1:	retf   
   14004cee2:	add    eax,DWORD PTR [rax+0x1]
   14004cee5:	add    BYTE PTR [rax],al
   14004cee7:	add    BYTE PTR [rax+0xb],bh
   14004ceed:	add    BYTE PTR [rax],al
   14004ceef:	add    BYTE PTR [rax+0x14003b3],bh
   14004cef5:	add    BYTE PTR [rax],al
   14004cef7:	add    al,bl
   14004cef9:	retf   
   14004cefa:	add    eax,DWORD PTR [rax+0x1]
   14004cefd:	add    BYTE PTR [rax],al
   14004ceff:	add    BYTE PTR [rax+0xb],bh
   14004cf05:	add    BYTE PTR [rax],al
   14004cf07:	add    al,bl
   14004cf09:	mov    bl,0x3
   14004cf0b:	rex add DWORD PTR [rax],eax
   14004cf0e:	add    BYTE PTR [rax],al
   14004cf10:	fmul   st,st(3)
   14004cf12:	add    eax,DWORD PTR [rax+0x1]
	...
   14004cf1d:	add    BYTE PTR [rax],al
   14004cf1f:	add    al,ch
   14004cf21:	mov    bl,0x3
   14004cf23:	rex add DWORD PTR [rax],eax
   14004cf26:	add    BYTE PTR [rax],al
   14004cf28:	fmul   st,st(3)
   14004cf2a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004cf35:	add    BYTE PTR [rax],al
   14004cf37:	add    al,bh
   14004cf39:	mov    bl,0x3
   14004cf3b:	rex add DWORD PTR [rax],eax
   14004cf3e:	add    BYTE PTR [rax],al
   14004cf40:	fmul   st,st(3)
   14004cf42:	add    eax,DWORD PTR [rax+0x1]
   14004cf45:	add    BYTE PTR [rax],al
   14004cf47:	add    BYTE PTR [rax-0x16],ah
   14004cf4a:	add    BYTE PTR [rax],al
   14004cf4c:	add    BYTE PTR [rax],al
   14004cf4e:	add    BYTE PTR [rax],al
   14004cf50:	sbb    BYTE PTR [rbx+rax*1+0x140],dh
   14004cf57:	add    al,bl
   14004cf59:	retf   
   14004cf5a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004cf65:	add    BYTE PTR [rax],al
   14004cf67:	add    BYTE PTR [rax],ah
   14004cf69:	mov    ah,0x3
   14004cf6b:	rex add DWORD PTR [rax],eax
   14004cf6e:	add    BYTE PTR [rax],al
   14004cf70:	fmul   st,st(3)
   14004cf72:	add    eax,DWORD PTR [rax+0x1]
   14004cf75:	add    BYTE PTR [rax],al
   14004cf77:	add    al,al
   14004cf79:	(bad)  
   14004cf7a:	add    DWORD PTR [rax],eax
   14004cf7c:	add    BYTE PTR [rax],al
   14004cf7e:	add    BYTE PTR [rax],al
   14004cf80:	(bad)  
   14004cf81:	mov    ah,0x3
   14004cf83:	rex add DWORD PTR [rax],eax
   14004cf86:	add    BYTE PTR [rax],al
   14004cf88:	fmul   st,st(3)
   14004cf8a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004cf95:	add    BYTE PTR [rax],al
   14004cf97:	add    BYTE PTR [rax+0x14003b4],bl
   14004cf9d:	add    BYTE PTR [rax],al
   14004cf9f:	add    al,bl
   14004cfa1:	retf   
   14004cfa2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004cfad:	add    BYTE PTR [rax],al
   14004cfaf:	add    BYTE PTR [rax+0x14003b4],ch
   14004cfb5:	add    BYTE PTR [rax],al
   14004cfb7:	add    al,bl
   14004cfb9:	retf   
   14004cfba:	add    eax,DWORD PTR [rax+0x1]
	...
   14004cfc5:	add    BYTE PTR [rax],al
   14004cfc7:	add    BYTE PTR [rax+0x14003b4],bh
   14004cfcd:	add    BYTE PTR [rax],al
   14004cfcf:	add    al,bl
   14004cfd1:	retf   
   14004cfd2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004cfdd:	add    BYTE PTR [rax],al
   14004cfdf:	add    al,cl
   14004cfe1:	mov    ah,0x3
   14004cfe3:	rex add DWORD PTR [rax],eax
   14004cfe6:	add    BYTE PTR [rax],al
   14004cfe8:	loopne 0x14004cfb5
   14004cfea:	add    eax,DWORD PTR [rax+0x1]
   14004cfed:	add    BYTE PTR [rax],al
   14004cfef:	add    BYTE PTR [rcx],al
   14004cff1:	add    BYTE PTR [rax],al
   14004cff3:	add    BYTE PTR [rax],al
   14004cff5:	add    BYTE PTR [rax],al
   14004cff7:	add    al,ch
   14004cff9:	mov    ah,0x3
   14004cffb:	rex add DWORD PTR [rax],eax
   14004cffe:	add    BYTE PTR [rax],al
   14004d000:	call   0x14144d3d0
	...
   14004d011:	mov    ch,0x3
   14004d013:	rex add DWORD PTR [rax],eax
   14004d016:	add    BYTE PTR [rax],al
   14004d018:	call   0x14144d3e8
	...
   14004d025:	add    BYTE PTR [rax],al
   14004d027:	add    BYTE PTR [rax],dl
   14004d029:	mov    ch,0x3
   14004d02b:	rex add DWORD PTR [rax],eax
   14004d02e:	add    BYTE PTR [rax],al
   14004d030:	ror    dl,1
   14004d032:	add    eax,DWORD PTR [rax+0x1]
   14004d035:	add    BYTE PTR [rax],al
   14004d037:	add    BYTE PTR [rcx],al
   14004d039:	add    BYTE PTR [rax],al
   14004d03b:	add    BYTE PTR [rax],al
   14004d03d:	add    BYTE PTR [rax],al
   14004d03f:	add    BYTE PTR [rax],ch
   14004d041:	mov    ch,0x3
   14004d043:	rex add DWORD PTR [rax],eax
   14004d046:	add    BYTE PTR [rax],al
   14004d048:	fmul   st(2),st
   14004d04a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004d055:	add    BYTE PTR [rax],al
   14004d057:	add    BYTE PTR [rax-0x4b],al
   14004d05a:	add    eax,DWORD PTR [rax+0x1]
   14004d05d:	add    BYTE PTR [rax],al
   14004d05f:	add    ah,cl
   14004d061:	retf   0x4003
   14004d064:	add    DWORD PTR [rax],eax
	...
   14004d06e:	add    BYTE PTR [rax],al
   14004d070:	(bad)  
   14004d071:	mov    ch,0x3
   14004d073:	rex add DWORD PTR [rax],eax
   14004d076:	add    BYTE PTR [rax],al
   14004d078:	add    al,0xcb
   14004d07a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004d085:	add    BYTE PTR [rax],al
   14004d087:	add    BYTE PTR [rax+0x14003b5],cl
   14004d08d:	add    BYTE PTR [rax],al
   14004d08f:	add    al,ah
   14004d091:	retf   0x4003
   14004d094:	add    DWORD PTR [rax],eax
	...
   14004d09e:	add    BYTE PTR [rax],al
   14004d0a0:	cwde   
   14004d0a1:	mov    ch,0x3
   14004d0a3:	rex add DWORD PTR [rax],eax
   14004d0a6:	add    BYTE PTR [rax],al
   14004d0a8:	clc    
   14004d0a9:	retf   
   14004d0aa:	add    eax,DWORD PTR [rax+0x1]
   14004d0ad:	add    BYTE PTR [rax],al
   14004d0af:	add    BYTE PTR [rdx],cl
   14004d0b1:	add    BYTE PTR [rax],al
   14004d0b3:	add    BYTE PTR [rax],al
   14004d0b5:	add    BYTE PTR [rax],al
   14004d0b7:	add    BYTE PTR [rax+0x14003b5],bh
   14004d0bd:	add    BYTE PTR [rax],al
   14004d0bf:	add    al,bh
   14004d0c1:	retf   
   14004d0c2:	add    eax,DWORD PTR [rax+0x1]
   14004d0c5:	add    BYTE PTR [rax],al
   14004d0c7:	add    BYTE PTR [rax],dl
   14004d0c9:	(bad)  
   14004d0ca:	add    BYTE PTR [rax],al
   14004d0cc:	add    BYTE PTR [rax],al
   14004d0ce:	add    BYTE PTR [rax],al
   14004d0d0:	fdiv   DWORD PTR [rbp+0x14003]
   14004d0d6:	add    BYTE PTR [rax],al
   14004d0d8:	or     ah,cl
   14004d0da:	add    eax,DWORD PTR [rax+0x1]
	...
   14004d0e5:	add    BYTE PTR [rax],al
   14004d0e7:	add    al,ch
   14004d0e9:	mov    ch,0x3
   14004d0eb:	rex add DWORD PTR [rax],eax
   14004d0ee:	add    BYTE PTR [rax],al
   14004d0f0:	or     ah,cl
   14004d0f2:	add    eax,DWORD PTR [rax+0x1]
   14004d0f5:	add    BYTE PTR [rax],al
   14004d0f7:	add    BYTE PTR [rcx],al
	...
   14004d101:	mov    dh,0x3
   14004d103:	rex add DWORD PTR [rax],eax
   14004d106:	add    BYTE PTR [rax],al
   14004d108:	adc    ah,cl
   14004d10a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004d115:	add    BYTE PTR [rax],al
   14004d117:	add    BYTE PTR [rax],dl
   14004d119:	mov    dh,0x3
   14004d11b:	rex add DWORD PTR [rax],eax
   14004d11e:	add    BYTE PTR [rax],al
   14004d120:	adc    ah,cl
   14004d122:	add    eax,DWORD PTR [rax+0x1]
	...
   14004d12d:	add    BYTE PTR [rax],al
   14004d12f:	add    BYTE PTR [rax],ah
   14004d131:	mov    dh,0x3
   14004d133:	rex add DWORD PTR [rax],eax
   14004d136:	add    BYTE PTR [rax],al
   14004d138:	adc    ah,cl
   14004d13a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004d145:	add    BYTE PTR [rax],al
   14004d147:	add    BYTE PTR [rax],dh
   14004d149:	mov    dh,0x3
   14004d14b:	rex add DWORD PTR [rax],eax
   14004d14e:	add    BYTE PTR [rax],al
   14004d150:	ror    dl,1
   14004d152:	add    eax,DWORD PTR [rax+0x1]
	...
   14004d15d:	add    BYTE PTR [rax],al
   14004d15f:	add    BYTE PTR [rax-0x4a],cl
   14004d162:	add    eax,DWORD PTR [rax+0x1]
   14004d165:	add    BYTE PTR [rax],al
   14004d167:	add    BYTE PTR [rax],bl
   14004d169:	retf   
   14004d16a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004d175:	add    BYTE PTR [rax],al
   14004d177:	add    BYTE PTR [rax-0x4a],bl
   14004d17a:	add    eax,DWORD PTR [rax+0x1]
   14004d17d:	add    BYTE PTR [rax],al
   14004d17f:	add    BYTE PTR [rax],bl
   14004d181:	retf   
   14004d182:	add    eax,DWORD PTR [rax+0x1]
	...
   14004d18d:	add    BYTE PTR [rax],al
   14004d18f:	add    BYTE PTR [rax-0x4a],ch
   14004d192:	add    eax,DWORD PTR [rax+0x1]
   14004d195:	add    BYTE PTR [rax],al
   14004d197:	add    BYTE PTR [rax],bl
   14004d199:	retf   
   14004d19a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004d1a5:	add    BYTE PTR [rax],al
   14004d1a7:	add    BYTE PTR [rax-0x4a],bh
   14004d1aa:	add    eax,DWORD PTR [rax+0x1]
   14004d1ad:	add    BYTE PTR [rax],al
   14004d1af:	add    BYTE PTR [rax],bl
   14004d1b1:	retf   
   14004d1b2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004d1bd:	add    BYTE PTR [rax],al
   14004d1bf:	add    BYTE PTR [rax+0x14003b6],cl
   14004d1c5:	add    BYTE PTR [rax],al
   14004d1c7:	add    BYTE PTR [rax],bl
   14004d1c9:	retf   
   14004d1ca:	add    eax,DWORD PTR [rax+0x1]
	...
   14004d1d5:	add    BYTE PTR [rax],al
   14004d1d7:	add    BYTE PTR [rax+0x14003b6],bl
   14004d1dd:	add    BYTE PTR [rax],al
   14004d1df:	add    BYTE PTR [rax],bl
   14004d1e1:	retf   
   14004d1e2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004d1ed:	add    BYTE PTR [rax],al
   14004d1ef:	add    BYTE PTR [rax+0x14003b6],ch
   14004d1f5:	add    BYTE PTR [rax],al
   14004d1f7:	add    BYTE PTR [rax],bl
   14004d1f9:	retf   
   14004d1fa:	add    eax,DWORD PTR [rax+0x1]
	...
   14004d205:	add    BYTE PTR [rax],al
   14004d207:	add    BYTE PTR [rax+0x14003b6],bh
   14004d20d:	add    BYTE PTR [rax],al
   14004d20f:	add    BYTE PTR [rax+0x14003cb],bl
	...
   14004d21d:	add    BYTE PTR [rax],al
   14004d21f:	add    al,cl
   14004d221:	mov    dh,0x3
   14004d223:	rex add DWORD PTR [rax],eax
   14004d226:	add    BYTE PTR [rax],al
   14004d228:	rex.W retf 
   14004d22a:	add    eax,DWORD PTR [rax+0x1]
   14004d22d:	add    BYTE PTR [rax],al
   14004d22f:	add    BYTE PTR [rdx+0x0],bl
   14004d232:	add    BYTE PTR [rax],al
   14004d234:	add    BYTE PTR [rax],al
   14004d236:	add    BYTE PTR [rax],al
   14004d238:	call   0x14144d5f3
   14004d23d:	add    BYTE PTR [rax],al
   14004d23f:	add    BYTE PTR [rax],ch
   14004d241:	retf   
   14004d242:	add    eax,DWORD PTR [rax+0x1]
   14004d245:	add    BYTE PTR [rax],al
   14004d247:	add    BYTE PTR [rax+0x4],dh
   14004d24d:	add    BYTE PTR [rax],al
   14004d24f:	add    al,bh
   14004d251:	mov    dh,0x3
   14004d253:	rex add DWORD PTR [rax],eax
   14004d256:	add    BYTE PTR [rax],al
   14004d258:	enter  0x3ca,0x40
   14004d25c:	add    DWORD PTR [rax],eax
   14004d25e:	add    BYTE PTR [rax],al
   14004d260:	(bad)  
   14004d261:	adc    eax,DWORD PTR [rax]
   14004d263:	add    BYTE PTR [rax],al
   14004d265:	add    BYTE PTR [rax],al
   14004d267:	add    BYTE PTR [rax],dl
   14004d269:	mov    bh,0x3
   14004d26b:	rex add DWORD PTR [rax],eax
   14004d26e:	add    BYTE PTR [rax],al
   14004d270:	enter  0x3ca,0x40
   14004d274:	add    DWORD PTR [rax],eax
   14004d276:	add    BYTE PTR [rax],al
   14004d278:	enter  0x13,0x0
   14004d27c:	add    BYTE PTR [rax],al
   14004d27e:	add    BYTE PTR [rax],al
   14004d280:	xor    BYTE PTR [rdi+0x14003],dh
   14004d286:	add    BYTE PTR [rax],al
   14004d288:	rex.W retf 
   14004d28a:	add    eax,DWORD PTR [rax+0x1]
   14004d28d:	add    BYTE PTR [rax],al
   14004d28f:	add    BYTE PTR [rax+rax*1],dl
   14004d292:	add    BYTE PTR [rax],al
   14004d294:	add    BYTE PTR [rax],al
   14004d296:	add    BYTE PTR [rax],al
   14004d298:	push   rax
   14004d299:	mov    bh,0x3
   14004d29b:	rex add DWORD PTR [rax],eax
   14004d29e:	add    BYTE PTR [rax],al
   14004d2a0:	sub    bl,cl
   14004d2a2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004d2ad:	add    BYTE PTR [rax],al
   14004d2af:	add    BYTE PTR [rax-0x49],dh
   14004d2b2:	add    eax,DWORD PTR [rax+0x1]
   14004d2b5:	add    BYTE PTR [rax],al
   14004d2b7:	add    BYTE PTR [rax],ch
   14004d2b9:	retf   
   14004d2ba:	add    eax,DWORD PTR [rax+0x1]
   14004d2bd:	add    BYTE PTR [rax],al
   14004d2bf:	add    bh,bh
   14004d2c1:	(bad)  
   14004d2c2:	(bad)  
   14004d2c3:	inc    DWORD PTR [rax]
   14004d2c5:	add    BYTE PTR [rax],al
   14004d2c7:	add    BYTE PTR [rax+0x14003b7],cl
   14004d2cd:	add    BYTE PTR [rax],al
   14004d2cf:	add    al,cl
   14004d2d1:	retf   0x4003
   14004d2d4:	add    DWORD PTR [rax],eax
   14004d2d6:	add    BYTE PTR [rax],al
   14004d2d8:	leave  
   14004d2d9:	adc    eax,DWORD PTR [rax]
   14004d2db:	add    BYTE PTR [rax],al
   14004d2dd:	add    BYTE PTR [rax],al
   14004d2df:	add    BYTE PTR [rax+0x14003b7],ah
   14004d2e5:	add    BYTE PTR [rax],al
   14004d2e7:	add    al,cl
   14004d2e9:	retf   0x4003
   14004d2ec:	add    DWORD PTR [rax],eax
   14004d2ee:	add    BYTE PTR [rax],al
   14004d2f0:	(bad)  
   14004d2f1:	adc    eax,DWORD PTR [rax]
   14004d2f3:	add    BYTE PTR [rax],al
   14004d2f5:	add    BYTE PTR [rax],al
   14004d2f7:	add    al,al
   14004d2f9:	mov    bh,0x3
   14004d2fb:	rex add DWORD PTR [rax],eax
   14004d2fe:	add    BYTE PTR [rax],al
   14004d300:	int3   
   14004d301:	retf   0x4003
   14004d304:	add    DWORD PTR [rax],eax
   14004d306:	add    BYTE PTR [rax],al
   14004d308:	sldt   WORD PTR [rax]
   14004d30b:	add    BYTE PTR [rax],al
   14004d30d:	add    BYTE PTR [rax],al
   14004d30f:	add    al,ch
   14004d311:	mov    bh,0x3
   14004d313:	rex add DWORD PTR [rax],eax
   14004d316:	add    BYTE PTR [rax],al
   14004d318:	and    ah,cl
   14004d31a:	add    eax,DWORD PTR [rax+0x1]
   14004d31d:	add    BYTE PTR [rax],al
   14004d31f:	add    BYTE PTR [rax],dl
   14004d321:	(bad)  
   14004d322:	add    BYTE PTR [rax],al
   14004d324:	add    BYTE PTR [rax],al
   14004d326:	add    BYTE PTR [rax],al
   14004d328:	add    BYTE PTR [rax+0x14003],bh
   14004d32e:	add    BYTE PTR [rax],al
   14004d330:	sub    al,0xcc
   14004d332:	add    eax,DWORD PTR [rax+0x1]
   14004d335:	add    BYTE PTR [rax],al
   14004d337:	add    BYTE PTR [rcx],al
   14004d339:	add    BYTE PTR [rax],al
   14004d33b:	add    BYTE PTR [rax],al
   14004d33d:	add    BYTE PTR [rax],al
   14004d33f:	add    BYTE PTR [rax],dh
   14004d341:	mov    eax,0x14003
   14004d346:	add    BYTE PTR [rax],al
   14004d348:	xor    ah,cl
   14004d34a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004d355:	add    BYTE PTR [rax],al
   14004d357:	add    BYTE PTR [rax-0x48],al
   14004d35a:	add    eax,DWORD PTR [rax+0x1]
   14004d35d:	add    BYTE PTR [rax],al
   14004d35f:	add    BYTE PTR [rax],dh
   14004d361:	int3   
   14004d362:	add    eax,DWORD PTR [rax+0x1]
	...
   14004d36d:	add    BYTE PTR [rax],al
   14004d36f:	add    BYTE PTR [rax-0x48],bl
   14004d372:	add    eax,DWORD PTR [rax+0x1]
   14004d375:	add    BYTE PTR [rax],al
   14004d377:	add    BYTE PTR [rax],dh
   14004d379:	int3   
   14004d37a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004d385:	add    BYTE PTR [rax],al
   14004d387:	add    BYTE PTR [rax-0x48],dh
   14004d38a:	add    eax,DWORD PTR [rax+0x1]
   14004d38d:	add    BYTE PTR [rax],al
   14004d38f:	add    BYTE PTR [rax],dh
   14004d391:	int3   
   14004d392:	add    eax,DWORD PTR [rax+0x1]
	...
   14004d39d:	add    BYTE PTR [rax],al
   14004d39f:	add    BYTE PTR [rax+0x14003b8],al
   14004d3a5:	add    BYTE PTR [rax],al
   14004d3a7:	add    BYTE PTR [rax],dh
   14004d3a9:	int3   
   14004d3aa:	add    eax,DWORD PTR [rax+0x1]
	...
   14004d3b5:	add    BYTE PTR [rax],al
   14004d3b7:	add    BYTE PTR [rax+0x14003b8],dl
   14004d3bd:	add    BYTE PTR [rax],al
   14004d3bf:	add    BYTE PTR [rax],dh
   14004d3c1:	int3   
   14004d3c2:	add    eax,DWORD PTR [rax+0x1]
   14004d3c5:	add    BYTE PTR [rax],al
   14004d3c7:	add    BYTE PTR [rcx],al
   14004d3c9:	add    BYTE PTR [rax],al
   14004d3cb:	add    BYTE PTR [rax],al
   14004d3cd:	add    BYTE PTR [rax],al
   14004d3cf:	add    BYTE PTR [rax+0x14003b8],ah
   14004d3d5:	add    BYTE PTR [rax],al
   14004d3d7:	add    BYTE PTR [rax],ch
   14004d3d9:	retf   
   14004d3da:	add    eax,DWORD PTR [rax+0x1]
   14004d3dd:	add    BYTE PTR [rax],al
   14004d3df:	add    BYTE PTR [rcx],al
   14004d3e1:	add    BYTE PTR [rax],al
   14004d3e3:	add    BYTE PTR [rax],al
   14004d3e5:	add    BYTE PTR [rax],al
   14004d3e7:	add    BYTE PTR [rax+0x14003b8],bh
   14004d3ed:	add    BYTE PTR [rax],al
   14004d3ef:	add    al,ah
   14004d3f1:	retf   0x4003
   14004d3f4:	add    DWORD PTR [rax],eax
   14004d3f6:	add    BYTE PTR [rax],al
   14004d3f8:	add    al,BYTE PTR [rax]
   14004d3fa:	add    BYTE PTR [rax],al
   14004d3fc:	add    BYTE PTR [rax],al
   14004d3fe:	add    BYTE PTR [rax],al
   14004d400:	sar    BYTE PTR [rax+0x14003],1
   14004d406:	add    BYTE PTR [rax],al
   14004d408:	enter  0x3ca,0x40
   14004d40c:	add    DWORD PTR [rax],eax
   14004d40e:	add    BYTE PTR [rax],al
   14004d410:	add    BYTE PTR fs:[rax],al
   14004d413:	add    BYTE PTR [rax],al
   14004d415:	add    BYTE PTR [rax],al
   14004d417:	add    al,dh
   14004d419:	mov    eax,0x14003
   14004d41e:	add    BYTE PTR [rax],al
   14004d420:	rex int3 
   14004d422:	add    eax,DWORD PTR [rax+0x1]
   14004d425:	add    BYTE PTR [rax],al
   14004d427:	add    BYTE PTR [rcx+rax*1],ch
   14004d42a:	add    BYTE PTR [rax],al
   14004d42c:	add    BYTE PTR [rax],al
   14004d42e:	add    BYTE PTR [rax],al
   14004d430:	or     BYTE PTR [rcx+0x14003],bh
   14004d436:	add    BYTE PTR [rax],al
   14004d438:	rex int3 
   14004d43a:	add    eax,DWORD PTR [rax+0x1]
   14004d43d:	add    BYTE PTR [rax],al
   14004d43f:	add    BYTE PTR [rdx],dh
   14004d441:	add    BYTE PTR [rax],al
   14004d443:	add    BYTE PTR [rax],al
   14004d445:	add    BYTE PTR [rax],al
   14004d447:	add    BYTE PTR [rax],bl
   14004d449:	mov    ecx,0x14003
   14004d44e:	add    BYTE PTR [rax],al
   14004d450:	rex int3 
   14004d452:	add    eax,DWORD PTR [rax+0x1]
	...
   14004d45d:	add    BYTE PTR [rax],al
   14004d45f:	add    BYTE PTR [rax],dh
   14004d461:	mov    ecx,0x14003
   14004d466:	add    BYTE PTR [rax],al
   14004d468:	rex int3 
   14004d46a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004d475:	add    BYTE PTR [rax],al
   14004d477:	add    BYTE PTR [rax-0x47],cl
   14004d47a:	add    eax,DWORD PTR [rax+0x1]
   14004d47d:	add    BYTE PTR [rax],al
   14004d47f:	add    BYTE PTR [rbx+rcx*8+0x3],al
   14004d483:	rex add DWORD PTR [rax],eax
   14004d486:	add    BYTE PTR [rax],al
   14004d488:	and    BYTE PTR [rax+rax*1],bl
   14004d48b:	add    BYTE PTR [rax],al
   14004d48d:	add    BYTE PTR [rax],al
   14004d48f:	add    BYTE PTR [rax-0x47],bl
   14004d492:	add    eax,DWORD PTR [rax+0x1]
   14004d495:	add    BYTE PTR [rax],al
   14004d497:	add    al,cl
   14004d499:	retf   0x4003
   14004d49c:	add    DWORD PTR [rax],eax
	...
   14004d4a6:	add    BYTE PTR [rax],al
   14004d4a8:	js     0x14004d463
   14004d4aa:	add    eax,DWORD PTR [rax+0x1]
   14004d4ad:	add    BYTE PTR [rax],al
   14004d4af:	add    BYTE PTR [rax-0x34],dl
   14004d4b2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004d4bd:	add    BYTE PTR [rax],al
   14004d4bf:	add    BYTE PTR [rax+0x14003b9],dl
   14004d4c5:	add    BYTE PTR [rax],al
   14004d4c7:	add    BYTE PTR [rax],ch
   14004d4c9:	retf   
   14004d4ca:	add    eax,DWORD PTR [rax+0x1]
	...
   14004d4d5:	add    BYTE PTR [rax],al
   14004d4d7:	add    BYTE PTR [rax+0x14003b9],ch
   14004d4dd:	add    BYTE PTR [rax],al
   14004d4df:	add    BYTE PTR [rax],ch
   14004d4e1:	retf   
   14004d4e2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004d4ed:	add    BYTE PTR [rax],al
   14004d4ef:	add    al,al
   14004d4f1:	mov    ecx,0x14003
   14004d4f6:	add    BYTE PTR [rax],al
   14004d4f8:	sub    bl,cl
   14004d4fa:	add    eax,DWORD PTR [rax+0x1]
	...
   14004d505:	add    BYTE PTR [rax],al
   14004d507:	add    al,dl
   14004d509:	mov    ecx,0x14003
   14004d50e:	add    BYTE PTR [rax],al
   14004d510:	sub    bl,cl
   14004d512:	add    eax,DWORD PTR [rax+0x1]
	...
   14004d51d:	add    BYTE PTR [rax],al
   14004d51f:	add    al,ch
   14004d521:	mov    ecx,0x14003
   14004d526:	add    BYTE PTR [rax],al
   14004d528:	sub    bl,cl
   14004d52a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004d535:	add    BYTE PTR [rax],al
   14004d537:	add    al,bh
   14004d539:	mov    ecx,0x14003
   14004d53e:	add    BYTE PTR [rax],al
   14004d540:	(bad)  
   14004d541:	int3   
   14004d542:	add    eax,DWORD PTR [rax+0x1]
   14004d545:	add    BYTE PTR [rax],al
   14004d547:	add    BYTE PTR [rcx+rax*1],ch
   14004d54a:	add    BYTE PTR [rax],al
   14004d54c:	add    BYTE PTR [rax],al
   14004d54e:	add    BYTE PTR [rax],al
   14004d550:	and    BYTE PTR [rdx+0x14003],bh
   14004d556:	add    BYTE PTR [rax],al
   14004d558:	(bad)  
   14004d559:	int3   
   14004d55a:	add    eax,DWORD PTR [rax+0x1]
   14004d55d:	add    BYTE PTR [rax],al
   14004d55f:	add    BYTE PTR [rdx],dh
   14004d561:	add    BYTE PTR [rax],al
   14004d563:	add    BYTE PTR [rax],al
   14004d565:	add    BYTE PTR [rax],al
   14004d567:	add    BYTE PTR [rax-0x46],al
   14004d56a:	add    eax,DWORD PTR [rax+0x1]
   14004d56d:	add    BYTE PTR [rax],al
   14004d56f:	add    BYTE PTR [rax-0x34],ah
   14004d572:	add    eax,DWORD PTR [rax+0x1]
   14004d575:	add    BYTE PTR [rax],al
   14004d577:	add    BYTE PTR [rax+rax*1],al
   14004d57a:	add    BYTE PTR [rax],al
   14004d57c:	add    BYTE PTR [rax],al
   14004d57e:	add    BYTE PTR [rax],al
   14004d580:	(bad)  
   14004d581:	mov    edx,0x14003
   14004d586:	add    BYTE PTR [rax],al
   14004d588:	(bad)  
   14004d589:	int3   
   14004d58a:	add    eax,DWORD PTR [rax+0x1]
   14004d58d:	add    BYTE PTR [rax],al
   14004d58f:	add    BYTE PTR [rdx],cl
   14004d591:	add    BYTE PTR [rax],al
   14004d593:	add    BYTE PTR [rax],al
   14004d595:	add    BYTE PTR [rax],al
   14004d597:	add    BYTE PTR [rax+0x14003ba],cl
   14004d59d:	add    BYTE PTR [rax],al
   14004d59f:	add    BYTE PTR [rax-0x34],ah
   14004d5a2:	add    eax,DWORD PTR [rax+0x1]
   14004d5a5:	add    BYTE PTR [rax],al
   14004d5a7:	add    BYTE PTR [rdx],cl
   14004d5a9:	add    BYTE PTR [rax],al
   14004d5ab:	add    BYTE PTR [rax],al
   14004d5ad:	add    BYTE PTR [rax],al
   14004d5af:	add    BYTE PTR [rax+0x14003ba],ch
   14004d5b5:	add    BYTE PTR [rax],al
   14004d5b7:	add    BYTE PTR [rax-0x34],bh
   14004d5ba:	add    eax,DWORD PTR [rax+0x1]
   14004d5bd:	add    BYTE PTR [rax],al
   14004d5bf:	add    BYTE PTR [rdi],al
   14004d5c1:	add    al,0x0
   14004d5c3:	add    BYTE PTR [rax],al
   14004d5c5:	add    BYTE PTR [rax],al
   14004d5c7:	add    al,cl
   14004d5c9:	mov    edx,0x14003
   14004d5ce:	add    BYTE PTR [rax],al
   14004d5d0:	js     0x14004d59e
   14004d5d2:	add    eax,DWORD PTR [rax+0x1]
   14004d5d5:	add    BYTE PTR [rax],al
   14004d5d7:	add    BYTE PTR [rdi],bl
   14004d5d9:	add    BYTE PTR [rax],al
   14004d5db:	add    BYTE PTR [rax],al
   14004d5dd:	add    BYTE PTR [rax],al
   14004d5df:	add    al,ch
   14004d5e1:	mov    edx,0x14003
   14004d5e6:	add    BYTE PTR [rax],al
   14004d5e8:	js     0x14004d5b6
   14004d5ea:	add    eax,DWORD PTR [rax+0x1]
	...
   14004d5f9:	mov    ebx,0x14003
   14004d5fe:	add    BYTE PTR [rax],al
   14004d600:	js     0x14004d5ce
   14004d602:	add    eax,DWORD PTR [rax+0x1]
	...
   14004d60d:	add    BYTE PTR [rax],al
   14004d60f:	add    BYTE PTR [rax],bl
   14004d611:	mov    ebx,0x14003
   14004d616:	add    BYTE PTR [rax],al
   14004d618:	nop
   14004d619:	int3   
   14004d61a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004d625:	add    BYTE PTR [rax],al
   14004d627:	add    BYTE PTR [rax],dh
   14004d629:	mov    ebx,0x14003
   14004d62e:	add    BYTE PTR [rax],al
   14004d630:	ror    dl,1
   14004d632:	add    eax,DWORD PTR [rax+0x1]
	...
   14004d63d:	add    BYTE PTR [rax],al
   14004d63f:	add    BYTE PTR [rax-0x45],dl
   14004d642:	add    eax,DWORD PTR [rax+0x1]
   14004d645:	add    BYTE PTR [rax],al
   14004d647:	add    al,dl
   14004d649:	retf   0x4003
   14004d64c:	add    DWORD PTR [rax],eax
	...
   14004d656:	add    BYTE PTR [rax],al
   14004d658:	push   0x14003bb
   14004d65d:	add    BYTE PTR [rax],al
   14004d65f:	add    BYTE PTR [rbx+rcx*8],cl
   14004d662:	add    eax,DWORD PTR [rax+0x1]
	...
   14004d66d:	add    BYTE PTR [rax],al
   14004d66f:	add    BYTE PTR [rax-0x45],bh
   14004d672:	add    eax,DWORD PTR [rax+0x1]
   14004d675:	add    BYTE PTR [rax],al
   14004d677:	add    BYTE PTR [rax+0x14003cc],bl
   14004d67d:	add    BYTE PTR [rax],al
   14004d67f:	add    BYTE PTR [rcx],al
   14004d681:	add    BYTE PTR [rax],al
   14004d683:	add    BYTE PTR [rax],al
   14004d685:	add    BYTE PTR [rax],al
   14004d687:	add    BYTE PTR [rax+0x14003bb],bl
   14004d68d:	add    BYTE PTR [rax],al
   14004d68f:	add    BYTE PTR [rax+0x14003cc],bl
	...
   14004d69d:	add    BYTE PTR [rax],al
   14004d69f:	add    BYTE PTR [rax+0x14003bb],bh
   14004d6a5:	add    BYTE PTR [rax],al
   14004d6a7:	add    BYTE PTR [rax+0x14003cc],bl
   14004d6ad:	add    BYTE PTR [rax],al
   14004d6af:	add    BYTE PTR [rax+0x1],dl
   14004d6b5:	add    BYTE PTR [rax],al
   14004d6b7:	add    al,bl
   14004d6b9:	mov    ebx,0x14003
   14004d6be:	add    BYTE PTR [rax],al
   14004d6c0:	cwde   
   14004d6c1:	int3   
   14004d6c2:	add    eax,DWORD PTR [rax+0x1]
   14004d6c5:	add    BYTE PTR [rax],al
   14004d6c7:	add    BYTE PTR [rsi],al
   14004d6c9:	add    BYTE PTR [rax],al
   14004d6cb:	add    BYTE PTR [rax],al
   14004d6cd:	add    BYTE PTR [rax],al
   14004d6cf:	add    al,bh
   14004d6d1:	mov    ebx,0x14003
   14004d6d6:	add    BYTE PTR [rax],al
   14004d6d8:	cwde   
   14004d6d9:	int3   
   14004d6da:	add    eax,DWORD PTR [rax+0x1]
   14004d6dd:	add    BYTE PTR [rax],al
   14004d6df:	add    BYTE PTR [rdx],al
   14004d6e1:	add    BYTE PTR [rax],al
   14004d6e3:	add    BYTE PTR [rax],al
   14004d6e5:	add    BYTE PTR [rax],al
   14004d6e7:	add    BYTE PTR [rax],bl
   14004d6e9:	mov    esp,0x14003
   14004d6ee:	add    BYTE PTR [rax],al
   14004d6f0:	cwde   
   14004d6f1:	int3   
   14004d6f2:	add    eax,DWORD PTR [rax+0x1]
   14004d6f5:	add    BYTE PTR [rax],al
   14004d6f7:	add    BYTE PTR [rip+0x0],al        # 0x14004d6fd
   14004d6fd:	add    BYTE PTR [rax],al
   14004d6ff:	add    BYTE PTR [rax],bh
   14004d701:	mov    esp,0x14003
   14004d706:	add    BYTE PTR [rax],al
   14004d708:	int3   
   14004d709:	retf   0x4003
   14004d70c:	add    DWORD PTR [rax],eax
   14004d70e:	add    BYTE PTR [rax],al
   14004d710:	or     al,0x0
   14004d712:	add    BYTE PTR [rax],al
   14004d714:	add    BYTE PTR [rax],al
   14004d716:	add    BYTE PTR [rax],al
   14004d718:	pop    rax
   14004d719:	mov    esp,0x14003
   14004d71e:	add    BYTE PTR [rax],al
   14004d720:	cwde   
   14004d721:	int3   
   14004d722:	add    eax,DWORD PTR [rax+0x1]
   14004d725:	add    BYTE PTR [rax],al
   14004d727:	add    BYTE PTR [rax+0x0],al
   14004d72a:	add    BYTE PTR [rax],al
   14004d72c:	add    BYTE PTR [rax],al
   14004d72e:	add    BYTE PTR [rax],al
   14004d730:	js     0x14004d6ee
   14004d732:	add    eax,DWORD PTR [rax+0x1]
   14004d735:	add    BYTE PTR [rax],al
   14004d737:	add    BYTE PTR [rax+0x14003cc],bl
   14004d73d:	add    BYTE PTR [rax],al
   14004d73f:	add    al,cl
   14004d741:	add    BYTE PTR [rax],al
   14004d743:	add    BYTE PTR [rax],al
   14004d745:	add    BYTE PTR [rax],al
   14004d747:	add    BYTE PTR [rax+0x14003bc],bl
   14004d74d:	add    BYTE PTR [rax],al
   14004d74f:	add    al,cl
   14004d751:	retf   0x4003
   14004d754:	add    DWORD PTR [rax],eax
   14004d756:	add    BYTE PTR [rax],al
   14004d758:	(bad)  
   14004d759:	add    BYTE PTR [rax],al
   14004d75b:	add    BYTE PTR [rax],al
   14004d75d:	add    BYTE PTR [rax],al
   14004d75f:	add    al,al
   14004d761:	mov    esp,0x14003
   14004d766:	add    BYTE PTR [rax],al
   14004d768:	rex.W retf 
   14004d76a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004d775:	add    BYTE PTR [rax],al
   14004d777:	add    al,bl
   14004d779:	mov    esp,0x14003
   14004d77e:	add    BYTE PTR [rax],al
   14004d780:	test   al,0xcc
   14004d782:	add    eax,DWORD PTR [rax+0x1]
	...
   14004d78d:	add    BYTE PTR [rax],al
   14004d78f:	add    al,ch
   14004d791:	mov    esp,0x14003
   14004d796:	add    BYTE PTR [rax],al
   14004d798:	test   al,0xcc
   14004d79a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004d7a9:	mov    ebp,0x14003
   14004d7ae:	add    BYTE PTR [rax],al
   14004d7b0:	test   al,0xcc
   14004d7b2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004d7bd:	add    BYTE PTR [rax],al
   14004d7bf:	add    BYTE PTR [rax],bl
   14004d7c1:	mov    ebp,0x14003
   14004d7c6:	add    BYTE PTR [rax],al
   14004d7c8:	test   al,0xcc
   14004d7ca:	add    eax,DWORD PTR [rax+0x1]
	...
   14004d7d5:	add    BYTE PTR [rax],al
   14004d7d7:	add    BYTE PTR [rax],dh
   14004d7d9:	mov    ebp,0x14003
   14004d7de:	add    BYTE PTR [rax],al
   14004d7e0:	test   al,0xcc
   14004d7e2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004d7ed:	add    BYTE PTR [rax],al
   14004d7ef:	add    BYTE PTR [rax-0x43],al
   14004d7f2:	add    eax,DWORD PTR [rax+0x1]
   14004d7f5:	add    BYTE PTR [rax],al
   14004d7f7:	add    BYTE PTR [rax+0x14003cc],ch
	...
   14004d805:	add    BYTE PTR [rax],al
   14004d807:	add    BYTE PTR [rax-0x43],dl
   14004d80a:	add    eax,DWORD PTR [rax+0x1]
   14004d80d:	add    BYTE PTR [rax],al
   14004d80f:	add    BYTE PTR [rax+0x14003cc],ch
	...
   14004d81d:	add    BYTE PTR [rax],al
   14004d81f:	add    BYTE PTR [rax-0x43],ah
   14004d822:	add    eax,DWORD PTR [rax+0x1]
   14004d825:	add    BYTE PTR [rax],al
   14004d827:	add    BYTE PTR [rax+0x14003cc],ch
	...
   14004d835:	add    BYTE PTR [rax],al
   14004d837:	add    BYTE PTR [rax-0x43],dh
   14004d83a:	add    eax,DWORD PTR [rax+0x1]
   14004d83d:	add    BYTE PTR [rax],al
   14004d83f:	add    BYTE PTR [rax+0x14003cc],ch
   14004d845:	add    BYTE PTR [rax],al
   14004d847:	add    BYTE PTR [rcx],al
   14004d849:	add    BYTE PTR [rax],al
   14004d84b:	add    BYTE PTR [rax],al
   14004d84d:	add    BYTE PTR [rax],al
   14004d84f:	add    BYTE PTR [rax+0x14003bd],cl
   14004d855:	add    BYTE PTR [rax],al
   14004d857:	add    BYTE PTR [rax+0x14003cc],ch
   14004d85d:	add    BYTE PTR [rax],al
   14004d85f:	add    BYTE PTR [rcx],al
   14004d861:	add    BYTE PTR [rax],al
   14004d863:	add    BYTE PTR [rax],al
   14004d865:	add    BYTE PTR [rax],al
   14004d867:	add    BYTE PTR [rax+0x14003bd],ch
   14004d86d:	add    BYTE PTR [rax],al
   14004d86f:	add    BYTE PTR [rbx+rcx*8],cl
   14004d872:	add    eax,DWORD PTR [rax+0x1]
   14004d875:	add    BYTE PTR [rax],al
   14004d877:	add    al,ch
   14004d879:	add    eax,DWORD PTR [rax]
   14004d87b:	add    BYTE PTR [rax],al
   14004d87d:	add    BYTE PTR [rax],al
   14004d87f:	add    al,al
   14004d881:	mov    ebp,0x14003
   14004d886:	add    BYTE PTR [rax],al
   14004d888:	ror    dl,1
   14004d88a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004d895:	add    BYTE PTR [rax],al
   14004d897:	add    al,ah
   14004d899:	mov    ebp,0x14003
   14004d89e:	add    BYTE PTR [rax],al
   14004d8a0:	ror    dl,1
   14004d8a2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004d8b1:	mov    esi,0x14003
   14004d8b6:	add    BYTE PTR [rax],al
   14004d8b8:	ror    dl,1
   14004d8ba:	add    eax,DWORD PTR [rax+0x1]
	...
   14004d8c5:	add    BYTE PTR [rax],al
   14004d8c7:	add    BYTE PTR [rax],bl
   14004d8c9:	mov    esi,0x14003
   14004d8ce:	add    BYTE PTR [rax],al
   14004d8d0:	sub    bl,cl
   14004d8d2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004d8dd:	add    BYTE PTR [rax],al
   14004d8df:	add    BYTE PTR [rax],dh
   14004d8e1:	mov    esi,0x14003
   14004d8e6:	add    BYTE PTR [rax],al
   14004d8e8:	or     al,0xcb
   14004d8ea:	add    eax,DWORD PTR [rax+0x1]
   14004d8ed:	add    BYTE PTR [rax],al
   14004d8ef:	add    BYTE PTR [rbx],al
   14004d8f1:	add    BYTE PTR [rax],al
   14004d8f3:	add    BYTE PTR [rax],al
   14004d8f5:	add    BYTE PTR [rax],al
   14004d8f7:	add    BYTE PTR [rax-0x42],bl
   14004d8fa:	add    eax,DWORD PTR [rax+0x1]
   14004d8fd:	add    BYTE PTR [rax],al
   14004d8ff:	add    BYTE PTR [rbx+rcx*8],al
   14004d902:	add    eax,DWORD PTR [rax+0x1]
	...
   14004d90d:	add    BYTE PTR [rax],al
   14004d90f:	add    BYTE PTR [rax-0x42],dh
   14004d912:	add    eax,DWORD PTR [rax+0x1]
   14004d915:	add    BYTE PTR [rax],al
   14004d917:	add    BYTE PTR [rbx+rcx*8],al
   14004d91a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004d925:	add    BYTE PTR [rax],al
   14004d927:	add    BYTE PTR [rax+0x14003be],al
   14004d92d:	add    BYTE PTR [rax],al
   14004d92f:	add    BYTE PTR [rbx+rcx*8],al
   14004d932:	add    eax,DWORD PTR [rax+0x1]
	...
   14004d93d:	add    BYTE PTR [rax],al
   14004d93f:	add    BYTE PTR [rax+0x14003be],dl
   14004d945:	add    BYTE PTR [rax],al
   14004d947:	add    BYTE PTR [rax+0x14003cc],bh
	...
   14004d955:	add    BYTE PTR [rax],al
   14004d957:	add    BYTE PTR [rax+0x14003be],ah
   14004d95d:	add    BYTE PTR [rax],al
   14004d95f:	add    BYTE PTR [rax+0x14003cc],bh
	...
   14004d96d:	add    BYTE PTR [rax],al
   14004d96f:	add    al,al
   14004d971:	mov    esi,0x14003
   14004d976:	add    BYTE PTR [rax],al
   14004d978:	rex.R retf 
   14004d97a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004d985:	add    BYTE PTR [rax],al
   14004d987:	add    al,dl
   14004d989:	mov    esi,0x14003
   14004d98e:	add    BYTE PTR [rax],al
   14004d990:	enter  0x3cc,0x40
   14004d994:	add    DWORD PTR [rax],eax
	...
   14004d99e:	add    BYTE PTR [rax],al
   14004d9a0:	call   0x14144dd63
   14004d9a5:	add    BYTE PTR [rax],al
   14004d9a7:	add    BYTE PTR [rbx+rcx*8+0x3],al
   14004d9ab:	rex add DWORD PTR [rax],eax
	...
   14004d9b6:	add    BYTE PTR [rax],al
   14004d9b8:	clc    
   14004d9b9:	mov    esi,0x14003
   14004d9be:	add    BYTE PTR [rax],al
   14004d9c0:	fmul   st,st(4)
   14004d9c2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004d9cd:	add    BYTE PTR [rax],al
   14004d9cf:	add    BYTE PTR [rax],bl
   14004d9d1:	mov    edi,0x14003
   14004d9d6:	add    BYTE PTR [rax],al
   14004d9d8:	fmul   st,st(4)
   14004d9da:	add    eax,DWORD PTR [rax+0x1]
	...
   14004d9e5:	add    BYTE PTR [rax],al
   14004d9e7:	add    BYTE PTR [rax],dh
   14004d9e9:	mov    edi,0x14003
   14004d9ee:	add    BYTE PTR [rax],al
   14004d9f0:	fmul   st,st(4)
   14004d9f2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004d9fd:	add    BYTE PTR [rax],al
   14004d9ff:	add    BYTE PTR [rax-0x41],cl
   14004da02:	add    eax,DWORD PTR [rax+0x1]
   14004da05:	add    BYTE PTR [rax],al
   14004da07:	add    al,bl
   14004da09:	int3   
   14004da0a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004da15:	add    BYTE PTR [rax],al
   14004da17:	add    BYTE PTR [rax-0x41],ah
   14004da1a:	add    eax,DWORD PTR [rax+0x1]
   14004da1d:	add    BYTE PTR [rax],al
   14004da1f:	add    al,bl
   14004da21:	int3   
   14004da22:	add    eax,DWORD PTR [rax+0x1]
	...
   14004da2d:	add    BYTE PTR [rax],al
   14004da2f:	add    BYTE PTR [rax-0x41],bh
   14004da32:	add    eax,DWORD PTR [rax+0x1]
   14004da35:	add    BYTE PTR [rax],al
   14004da37:	add    al,bl
   14004da39:	int3   
   14004da3a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004da45:	add    BYTE PTR [rax],al
   14004da47:	add    BYTE PTR [rax+0x14003bf],dl
   14004da4d:	add    BYTE PTR [rax],al
   14004da4f:	add    al,bl
   14004da51:	int3   
   14004da52:	add    eax,DWORD PTR [rax+0x1]
	...
   14004da5d:	add    BYTE PTR [rax],al
   14004da5f:	add    BYTE PTR [rax+0x14003bf],ch
   14004da65:	add    BYTE PTR [rax],al
   14004da67:	add    al,bl
   14004da69:	int3   
   14004da6a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004da75:	add    BYTE PTR [rax],al
   14004da77:	add    al,al
   14004da79:	mov    edi,0x14003
   14004da7e:	add    BYTE PTR [rax],al
   14004da80:	fmul   st,st(4)
   14004da82:	add    eax,DWORD PTR [rax+0x1]
	...
   14004da8d:	add    BYTE PTR [rax],al
   14004da8f:	add    al,bl
   14004da91:	mov    edi,0x14003
   14004da96:	add    BYTE PTR [rax],al
   14004da98:	fmul   st,st(4)
   14004da9a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004daa5:	add    BYTE PTR [rax],al
   14004daa7:	add    al,dh
   14004daa9:	mov    edi,0x14003
   14004daae:	add    BYTE PTR [rax],al
   14004dab0:	in     al,0xcc
   14004dab2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004dac1:	rol    BYTE PTR [rbx],0x40
   14004dac4:	add    DWORD PTR [rax],eax
   14004dac6:	add    BYTE PTR [rax],al
   14004dac8:	in     al,0xcc
   14004daca:	add    eax,DWORD PTR [rax+0x1]
	...
   14004dad5:	add    BYTE PTR [rax],al
   14004dad7:	add    BYTE PTR [rax],dl
   14004dad9:	rol    BYTE PTR [rbx],0x40
   14004dadc:	add    DWORD PTR [rax],eax
   14004dade:	add    BYTE PTR [rax],al
   14004dae0:	lock int3 
   14004dae2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004daed:	add    BYTE PTR [rax],al
   14004daef:	add    BYTE PTR [rax],ah
   14004daf1:	rol    BYTE PTR [rbx],0x40
   14004daf4:	add    DWORD PTR [rax],eax
   14004daf6:	add    BYTE PTR [rax],al
   14004daf8:	lock int3 
   14004dafa:	add    eax,DWORD PTR [rax+0x1]
	...
   14004db05:	add    BYTE PTR [rax],al
   14004db07:	add    BYTE PTR [rax],bh
   14004db09:	rol    BYTE PTR [rbx],0x40
   14004db0c:	add    DWORD PTR [rax],eax
   14004db0e:	add    BYTE PTR [rax],al
   14004db10:	lock int3 
   14004db12:	add    eax,DWORD PTR [rax+0x1]
	...
   14004db1d:	add    BYTE PTR [rax],al
   14004db1f:	add    BYTE PTR [rax-0x40],dl
   14004db22:	add    eax,DWORD PTR [rax+0x1]
   14004db25:	add    BYTE PTR [rax],al
   14004db27:	add    al,dh
   14004db29:	int3   
   14004db2a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004db35:	add    BYTE PTR [rax],al
   14004db37:	add    BYTE PTR [rax-0x40],ah
   14004db3a:	add    eax,DWORD PTR [rax+0x1]
   14004db3d:	add    BYTE PTR [rax],al
   14004db3f:	add    al,dh
   14004db41:	int3   
   14004db42:	add    eax,DWORD PTR [rax+0x1]
	...
   14004db4d:	add    BYTE PTR [rax],al
   14004db4f:	add    BYTE PTR [rax-0x40],dh
   14004db52:	add    eax,DWORD PTR [rax+0x1]
   14004db55:	add    BYTE PTR [rax],al
   14004db57:	add    al,dh
   14004db59:	int3   
   14004db5a:	add    eax,DWORD PTR [rax+0x1]
   14004db5d:	add    BYTE PTR [rax],al
   14004db5f:	add    BYTE PTR [rcx],al
   14004db61:	add    BYTE PTR [rax],al
   14004db63:	add    BYTE PTR [rax],al
   14004db65:	add    BYTE PTR [rax],al
   14004db67:	add    BYTE PTR [rax+0x14003c0],al
   14004db6d:	add    BYTE PTR [rax],al
   14004db6f:	add    BYTE PTR [rax],al
   14004db71:	int    0x3
   14004db73:	rex add DWORD PTR [rax],eax
	...
   14004db7e:	add    BYTE PTR [rax],al
   14004db80:	cwde   
   14004db81:	rol    BYTE PTR [rbx],0x40
   14004db84:	add    DWORD PTR [rax],eax
   14004db86:	add    BYTE PTR [rax],al
   14004db88:	adc    ch,cl
   14004db8a:	add    eax,DWORD PTR [rax+0x1]
   14004db8d:	add    BYTE PTR [rax],al
   14004db8f:	add    BYTE PTR [rdi],al
   14004db91:	add    al,0x0
   14004db93:	add    BYTE PTR [rax],al
   14004db95:	add    BYTE PTR [rax],al
   14004db97:	add    BYTE PTR [rax+0x14003c0],dh
   14004db9d:	add    BYTE PTR [rax],al
   14004db9f:	add    BYTE PTR [rax],dl
   14004dba1:	int    0x3
   14004dba3:	rex add DWORD PTR [rax],eax
   14004dba6:	add    BYTE PTR [rax],al
   14004dba8:	(bad)  
   14004dba9:	add    BYTE PTR [rax],al
   14004dbab:	add    BYTE PTR [rax],al
   14004dbad:	add    BYTE PTR [rax],al
   14004dbaf:	add    al,cl
   14004dbb1:	rol    BYTE PTR [rbx],0x40
   14004dbb4:	add    DWORD PTR [rax],eax
   14004dbb6:	add    BYTE PTR [rax],al
   14004dbb8:	ror    dl,1
   14004dbba:	add    eax,DWORD PTR [rax+0x1]
   14004dbbd:	add    BYTE PTR [rax],al
   14004dbbf:	add    BYTE PTR [rax],dl
   14004dbc1:	(bad)  
   14004dbc2:	add    BYTE PTR [rax],al
   14004dbc4:	add    BYTE PTR [rax],al
   14004dbc6:	add    BYTE PTR [rax],al
   14004dbc8:	lock rol BYTE PTR [rbx],0x40
   14004dbcc:	add    DWORD PTR [rax],eax
   14004dbce:	add    BYTE PTR [rax],al
   14004dbd0:	ror    dl,1
   14004dbd2:	add    eax,DWORD PTR [rax+0x1]
   14004dbd5:	add    BYTE PTR [rax],al
   14004dbd7:	add    BYTE PTR [rdx],dh
   14004dbd9:	add    BYTE PTR [rax],al
   14004dbdb:	add    BYTE PTR [rax],al
   14004dbdd:	add    BYTE PTR [rax],al
   14004dbdf:	add    BYTE PTR [rax],dl
   14004dbe1:	rol    DWORD PTR [rbx],0x40
   14004dbe4:	add    DWORD PTR [rax],eax
   14004dbe6:	add    BYTE PTR [rax],al
   14004dbe8:	and    ah,cl
   14004dbea:	add    eax,DWORD PTR [rax+0x1]
   14004dbed:	add    BYTE PTR [rax],al
   14004dbef:	add    BYTE PTR [rax],cl
   14004dbf1:	(bad)  
   14004dbf2:	add    BYTE PTR [rax],al
   14004dbf4:	add    BYTE PTR [rax],al
   14004dbf6:	add    BYTE PTR [rax],al
   14004dbf8:	rex rol DWORD PTR [rbx],0x40
   14004dbfc:	add    DWORD PTR [rax],eax
   14004dbfe:	add    BYTE PTR [rax],al
   14004dc00:	nop
   14004dc01:	int3   
   14004dc02:	add    eax,DWORD PTR [rax+0x1]
	...
   14004dc0d:	add    BYTE PTR [rax],al
   14004dc0f:	add    BYTE PTR [rax-0x3f],dl
   14004dc12:	add    eax,DWORD PTR [rax+0x1]
   14004dc15:	add    BYTE PTR [rax],al
   14004dc17:	add    BYTE PTR [rax],ah
   14004dc19:	int    0x3
   14004dc1b:	rex add DWORD PTR [rax],eax
   14004dc1e:	add    BYTE PTR [rax],al
   14004dc20:	or     al,BYTE PTR [rax]
   14004dc22:	add    BYTE PTR [rax],al
   14004dc24:	add    BYTE PTR [rax],al
   14004dc26:	add    BYTE PTR [rax],al
   14004dc28:	jo     0x14004dbeb
   14004dc2a:	add    eax,DWORD PTR [rax+0x1]
   14004dc2d:	add    BYTE PTR [rax],al
   14004dc2f:	add    BYTE PTR [rax],ah
   14004dc31:	int    0x3
   14004dc33:	rex add DWORD PTR [rax],eax
   14004dc36:	add    BYTE PTR [rax],al
   14004dc38:	call   0x14004dc40
   14004dc3d:	add    BYTE PTR [rax],al
   14004dc3f:	add    BYTE PTR [rax+0x14003c1],dl
   14004dc45:	add    BYTE PTR [rax],al
   14004dc47:	add    BYTE PTR [rax],ah
   14004dc49:	int    0x3
   14004dc4b:	rex add DWORD PTR [rax],eax
   14004dc4e:	add    BYTE PTR [rax],al
   14004dc50:	rol    BYTE PTR [rdi],1
   14004dc52:	add    BYTE PTR [rax],al
   14004dc54:	add    BYTE PTR [rax],al
   14004dc56:	add    BYTE PTR [rax],al
   14004dc58:	mov    al,0xc1
   14004dc5a:	add    eax,DWORD PTR [rax+0x1]
   14004dc5d:	add    BYTE PTR [rax],al
   14004dc5f:	add    BYTE PTR [rax],ah
   14004dc61:	int    0x3
   14004dc63:	rex add DWORD PTR [rax],eax
   14004dc66:	add    BYTE PTR [rax],al
   14004dc68:	add    eax,0x0
   14004dc6d:	add    BYTE PTR [rax],al
   14004dc6f:	add    al,dl
   14004dc71:	rol    DWORD PTR [rbx],0x40
   14004dc74:	add    DWORD PTR [rax],eax
   14004dc76:	add    BYTE PTR [rax],al
   14004dc78:	and    ch,cl
   14004dc7a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004dc85:	add    BYTE PTR [rax],al
   14004dc87:	add    al,ch
   14004dc89:	rol    DWORD PTR [rbx],0x40
   14004dc8c:	add    DWORD PTR [rax],eax
   14004dc8e:	add    BYTE PTR [rax],al
   14004dc90:	and    ch,cl
   14004dc92:	add    eax,DWORD PTR [rax+0x1]
   14004dc95:	add    BYTE PTR [rax],al
   14004dc97:	add    ah,dh
   14004dc99:	add    DWORD PTR [rax],eax
   14004dc9b:	add    BYTE PTR [rax],al
   14004dc9d:	add    BYTE PTR [rax],al
   14004dc9f:	add    BYTE PTR [rax],cl
   14004dca1:	ret    0x4003
   14004dca4:	add    DWORD PTR [rax],eax
   14004dca6:	add    BYTE PTR [rax],al
   14004dca8:	and    ch,cl
   14004dcaa:	add    eax,DWORD PTR [rax+0x1]
   14004dcad:	add    BYTE PTR [rax],al
   14004dcaf:	add    BYTE PTR [rcx],al
   14004dcb1:	add    BYTE PTR [rax],al
   14004dcb3:	add    BYTE PTR [rax],al
   14004dcb5:	add    BYTE PTR [rax],al
   14004dcb7:	add    BYTE PTR [rax],ch
   14004dcb9:	ret    0x4003
   14004dcbc:	add    DWORD PTR [rax],eax
   14004dcbe:	add    BYTE PTR [rax],al
   14004dcc0:	and    ch,cl
   14004dcc2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004dccd:	add    BYTE PTR [rax],al
   14004dccf:	add    BYTE PTR [rax-0x3e],al
   14004dcd2:	add    eax,DWORD PTR [rax+0x1]
   14004dcd5:	add    BYTE PTR [rax],al
   14004dcd7:	add    BYTE PTR [rax],ch
   14004dcd9:	int    0x3
   14004dcdb:	rex add DWORD PTR [rax],eax
	...
   14004dce6:	add    BYTE PTR [rax],al
   14004dce8:	pop    rax
   14004dce9:	ret    0x4003
   14004dcec:	add    DWORD PTR [rax],eax
   14004dcee:	add    BYTE PTR [rax],al
   14004dcf0:	sub    ch,cl
   14004dcf2:	add    eax,DWORD PTR [rax+0x1]
   14004dcf5:	add    BYTE PTR [rax],al
   14004dcf7:	add    BYTE PTR [rcx+rax*1],ch
   14004dcfa:	add    BYTE PTR [rax],al
   14004dcfc:	add    BYTE PTR [rax],al
   14004dcfe:	add    BYTE PTR [rax],al
   14004dd00:	jo     0x14004dcc4
   14004dd02:	add    eax,DWORD PTR [rax+0x1]
   14004dd05:	add    BYTE PTR [rax],al
   14004dd07:	add    BYTE PTR [rax],ch
   14004dd09:	int    0x3
   14004dd0b:	rex add DWORD PTR [rax],eax
   14004dd0e:	add    BYTE PTR [rax],al
   14004dd10:	xor    al,BYTE PTR [rax]
   14004dd12:	add    BYTE PTR [rax],al
   14004dd14:	add    BYTE PTR [rax],al
   14004dd16:	add    BYTE PTR [rax],al
   14004dd18:	add    dl,0x3
   14004dd1b:	rex add DWORD PTR [rax],eax
   14004dd1e:	add    BYTE PTR [rax],al
   14004dd20:	sub    ch,cl
   14004dd22:	add    eax,DWORD PTR [rax+0x1]
	...
   14004dd2d:	add    BYTE PTR [rax],al
   14004dd2f:	add    BYTE PTR [rax+0x14003c2],dl
   14004dd35:	add    BYTE PTR [rax],al
   14004dd37:	add    BYTE PTR [rax],ch
   14004dd39:	int    0x3
   14004dd3b:	rex add DWORD PTR [rax],eax
	...
   14004dd46:	add    BYTE PTR [rax],al
   14004dd48:	cwde   
   14004dd49:	ret    0x4003
   14004dd4c:	add    DWORD PTR [rax],eax
   14004dd4e:	add    BYTE PTR [rax],al
   14004dd50:	xor    ch,cl
   14004dd52:	add    eax,DWORD PTR [rax+0x1]
	...
   14004dd5d:	add    BYTE PTR [rax],al
   14004dd5f:	add    BYTE PTR [rax+0x14003c2],dh
   14004dd65:	add    BYTE PTR [rax],al
   14004dd67:	add    BYTE PTR [rax],dh
   14004dd69:	int    0x3
   14004dd6b:	rex add DWORD PTR [rax],eax
	...
   14004dd76:	add    BYTE PTR [rax],al
   14004dd78:	rol    dl,1
   14004dd7a:	add    eax,DWORD PTR [rax+0x1]
   14004dd7d:	add    BYTE PTR [rax],al
   14004dd7f:	add    BYTE PTR [rax],dh
   14004dd81:	int    0x3
   14004dd83:	rex add DWORD PTR [rax],eax
	...
   14004dd8e:	add    BYTE PTR [rax],al
   14004dd90:	call   0x14144e157
   14004dd95:	add    BYTE PTR [rax],al
   14004dd97:	add    BYTE PTR [rax],dh
   14004dd99:	int    0x3
   14004dd9b:	rex add DWORD PTR [rax],eax
	...
   14004dda6:	add    BYTE PTR [rax],al
   14004dda8:	clc    
   14004dda9:	ret    0x4003
   14004ddac:	add    DWORD PTR [rax],eax
   14004ddae:	add    BYTE PTR [rax],al
   14004ddb0:	xor    ch,cl
   14004ddb2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004ddbd:	add    BYTE PTR [rax],al
   14004ddbf:	add    BYTE PTR [rax],cl
   14004ddc1:	ret    
   14004ddc2:	add    eax,DWORD PTR [rax+0x1]
   14004ddc5:	add    BYTE PTR [rax],al
   14004ddc7:	add    BYTE PTR [rax],dh
   14004ddc9:	int    0x3
   14004ddcb:	rex add DWORD PTR [rax],eax
	...
   14004ddd6:	add    BYTE PTR [rax],al
   14004ddd8:	and    bl,al
   14004ddda:	add    eax,DWORD PTR [rax+0x1]
   14004dddd:	add    BYTE PTR [rax],al
   14004dddf:	add    BYTE PTR [rax],dh
   14004dde1:	int    0x3
   14004dde3:	rex add DWORD PTR [rax],eax
	...
   14004ddee:	add    BYTE PTR [rax],al
   14004ddf0:	xor    bl,al
   14004ddf2:	add    eax,DWORD PTR [rax+0x1]
   14004ddf5:	add    BYTE PTR [rax],al
   14004ddf7:	add    BYTE PTR [rax+0x14003cc],bh
	...
   14004de05:	add    BYTE PTR [rax],al
   14004de07:	add    BYTE PTR [rax-0x3d],al
   14004de0a:	add    eax,DWORD PTR [rax+0x1]
   14004de0d:	add    BYTE PTR [rax],al
   14004de0f:	add    BYTE PTR [rax+0x14003cc],bh
	...
   14004de1d:	add    BYTE PTR [rax],al
   14004de1f:	add    BYTE PTR [rax-0x3d],dl
   14004de22:	add    eax,DWORD PTR [rax+0x1]
   14004de25:	add    BYTE PTR [rax],al
   14004de27:	add    BYTE PTR [rax],ch
   14004de29:	retf   
   14004de2a:	add    eax,DWORD PTR [rax+0x1]
   14004de2d:	add    BYTE PTR [rax],al
   14004de2f:	add    ah,al
   14004de31:	or     DWORD PTR [rax],eax
   14004de33:	add    BYTE PTR [rax],al
   14004de35:	add    BYTE PTR [rax],al
   14004de37:	add    BYTE PTR [rax-0x3d],bh
   14004de3a:	add    eax,DWORD PTR [rax+0x1]
   14004de3d:	add    BYTE PTR [rax],al
   14004de3f:	add    BYTE PTR [rax-0x33],cl
   14004de42:	add    eax,DWORD PTR [rax+0x1]
   14004de45:	add    BYTE PTR [rax],al
   14004de47:	add    BYTE PTR [rcx],al
   14004de49:	add    BYTE PTR [rax],al
   14004de4b:	add    BYTE PTR [rax],al
   14004de4d:	add    BYTE PTR [rax],al
   14004de4f:	add    BYTE PTR [rax+0x14003c3],dl
   14004de55:	add    BYTE PTR [rax],al
   14004de57:	add    BYTE PTR [rax-0x33],cl
   14004de5a:	add    eax,DWORD PTR [rax+0x1]
   14004de5d:	add    BYTE PTR [rax],al
   14004de5f:	add    BYTE PTR [rax+0xf],ah
   14004de65:	add    BYTE PTR [rax],al
   14004de67:	add    BYTE PTR [rax+0x14003c3],ah
   14004de6d:	add    BYTE PTR [rax],al
   14004de6f:	add    BYTE PTR [rax-0x33],cl
   14004de72:	add    eax,DWORD PTR [rax+0x1]
	...
   14004de7d:	add    BYTE PTR [rax],al
   14004de7f:	add    BYTE PTR [rax+0x14003c3],dh
   14004de85:	add    BYTE PTR [rax],al
   14004de87:	add    BYTE PTR [rax-0x33],bl
   14004de8a:	add    eax,DWORD PTR [rax+0x1]
   14004de8d:	add    BYTE PTR [rax],al
   14004de8f:	add    BYTE PTR [rcx],al
   14004de91:	add    BYTE PTR [rax],al
   14004de93:	add    BYTE PTR [rax],al
   14004de95:	add    BYTE PTR [rax],al
   14004de97:	add    al,cl
   14004de99:	ret    
   14004de9a:	add    eax,DWORD PTR [rax+0x1]
   14004de9d:	add    BYTE PTR [rax],al
   14004de9f:	add    BYTE PTR [rax-0x33],ch
   14004dea2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004dead:	add    BYTE PTR [rax],al
   14004deaf:	add    al,bl
   14004deb1:	ret    
   14004deb2:	add    eax,DWORD PTR [rax+0x1]
   14004deb5:	add    BYTE PTR [rax],al
   14004deb7:	add    BYTE PTR [rax-0x33],ch
   14004deba:	add    eax,DWORD PTR [rax+0x1]
	...
   14004dec5:	add    BYTE PTR [rax],al
   14004dec7:	add    al,ch
   14004dec9:	ret    
   14004deca:	add    eax,DWORD PTR [rax+0x1]
   14004decd:	add    BYTE PTR [rax],al
   14004decf:	add    BYTE PTR [rax-0x33],ch
   14004ded2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004dedd:	add    BYTE PTR [rax],al
   14004dedf:	add    al,bh
   14004dee1:	ret    
   14004dee2:	add    eax,DWORD PTR [rax+0x1]
   14004dee5:	add    BYTE PTR [rax],al
   14004dee7:	add    BYTE PTR [rax-0x33],ch
   14004deea:	add    eax,DWORD PTR [rax+0x1]
	...
   14004def5:	add    BYTE PTR [rax],al
   14004def7:	add    BYTE PTR [rax],cl
   14004def9:	(bad)
   14004defd:	add    BYTE PTR [rax],al
   14004deff:	add    BYTE PTR [rax-0x33],ch
   14004df02:	add    eax,DWORD PTR [rax+0x1]
	...
   14004df0d:	add    BYTE PTR [rax],al
   14004df0f:	add    BYTE PTR [rax],bl
   14004df11:	(bad)
   14004df15:	add    BYTE PTR [rax],al
   14004df17:	add    BYTE PTR [rax-0x33],ch
   14004df1a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004df25:	add    BYTE PTR [rax],al
   14004df27:	add    BYTE PTR [rax],ch
   14004df29:	(bad)
   14004df2d:	add    BYTE PTR [rax],al
   14004df2f:	add    BYTE PTR [rax-0x33],ch
   14004df32:	add    eax,DWORD PTR [rax+0x1]
	...
   14004df3d:	add    BYTE PTR [rax],al
   14004df3f:	add    BYTE PTR [rax],bh
   14004df41:	(bad)
   14004df45:	add    BYTE PTR [rax],al
   14004df47:	add    BYTE PTR [rax-0x33],ch
   14004df4a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004df55:	add    BYTE PTR [rax],al
   14004df57:	add    BYTE PTR [rax-0x3c],cl
   14004df5a:	add    eax,DWORD PTR [rax+0x1]
   14004df5d:	add    BYTE PTR [rax],al
   14004df5f:	add    BYTE PTR [rax-0x33],ch
   14004df62:	add    eax,DWORD PTR [rax+0x1]
	...
   14004df6d:	add    BYTE PTR [rax],al
   14004df6f:	add    BYTE PTR [rax-0x3c],bl
   14004df72:	add    eax,DWORD PTR [rax+0x1]
   14004df75:	add    BYTE PTR [rax],al
   14004df77:	add    BYTE PTR [rax-0x33],ch
   14004df7a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004df85:	add    BYTE PTR [rax],al
   14004df87:	add    BYTE PTR [rax-0x3c],ch
   14004df8a:	add    eax,DWORD PTR [rax+0x1]
   14004df8d:	add    BYTE PTR [rax],al
   14004df8f:	add    BYTE PTR [rax-0x33],ch
   14004df92:	add    eax,DWORD PTR [rax+0x1]
	...
   14004df9d:	add    BYTE PTR [rax],al
   14004df9f:	add    BYTE PTR [rax-0x3c],bh
   14004dfa2:	add    eax,DWORD PTR [rax+0x1]
   14004dfa5:	add    BYTE PTR [rax],al
   14004dfa7:	add    BYTE PTR [rax-0x33],ch
   14004dfaa:	add    eax,DWORD PTR [rax+0x1]
	...
   14004dfb5:	add    BYTE PTR [rax],al
   14004dfb7:	add    BYTE PTR [rax+0x14003c4],dl
   14004dfbd:	add    BYTE PTR [rax],al
   14004dfbf:	add    BYTE PTR [rax-0x33],ch
   14004dfc2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004dfcd:	add    BYTE PTR [rax],al
   14004dfcf:	add    BYTE PTR [rax+0x14003c4],ah
   14004dfd5:	add    BYTE PTR [rax],al
   14004dfd7:	add    BYTE PTR [rax-0x33],ch
   14004dfda:	add    eax,DWORD PTR [rax+0x1]
	...
   14004dfe5:	add    BYTE PTR [rax],al
   14004dfe7:	add    BYTE PTR [rax+0x14003c4],dh
   14004dfed:	add    BYTE PTR [rax],al
   14004dfef:	add    BYTE PTR [rax-0x33],ch
   14004dff2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004dffd:	add    BYTE PTR [rax],al
   14004dfff:	add    al,al
   14004e001:	(bad)
   14004e005:	add    BYTE PTR [rax],al
   14004e007:	add    BYTE PTR [rax-0x33],ch
   14004e00a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004e015:	add    BYTE PTR [rax],al
   14004e017:	add    al,dl
   14004e019:	(bad)
   14004e01d:	add    BYTE PTR [rax],al
   14004e01f:	add    BYTE PTR [rax-0x33],ch
   14004e022:	add    eax,DWORD PTR [rax+0x1]
	...
   14004e02d:	add    BYTE PTR [rax],al
   14004e02f:	add    al,ah
   14004e031:	(bad)
   14004e035:	add    BYTE PTR [rax],al
   14004e037:	add    BYTE PTR [rax-0x33],ch
   14004e03a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004e045:	add    BYTE PTR [rax],al
   14004e047:	add    al,dh
   14004e049:	(bad)
   14004e04d:	add    BYTE PTR [rax],al
   14004e04f:	add    BYTE PTR [rax-0x33],ch
   14004e052:	add    eax,DWORD PTR [rax+0x1]
	...
   14004e061:	(bad)
   14004e064:	add    DWORD PTR [rax],eax
   14004e066:	add    BYTE PTR [rax],al
   14004e068:	pop    rax
   14004e069:	int    0x3
   14004e06b:	rex add DWORD PTR [rax],eax
	...
   14004e076:	add    BYTE PTR [rax],al
   14004e078:	adc    ch,al
   14004e07a:	add    eax,DWORD PTR [rax+0x1]
   14004e07d:	add    BYTE PTR [rax],al
   14004e07f:	add    BYTE PTR [rax-0x33],bl
   14004e082:	add    eax,DWORD PTR [rax+0x1]
   14004e085:	add    BYTE PTR [rax],al
   14004e087:	add    BYTE PTR [rcx],al
   14004e089:	add    BYTE PTR [rax],al
   14004e08b:	add    BYTE PTR [rax],al
   14004e08d:	add    BYTE PTR [rax],al
   14004e08f:	add    BYTE PTR [rax],ch
   14004e091:	(bad)
   14004e094:	add    DWORD PTR [rax],eax
   14004e096:	add    BYTE PTR [rax],al
   14004e098:	pop    rax
   14004e099:	int    0x3
   14004e09b:	rex add DWORD PTR [rax],eax
	...
   14004e0a6:	add    BYTE PTR [rax],al
   14004e0a8:	(bad)
   14004e0ac:	add    DWORD PTR [rax],eax
   14004e0ae:	add    BYTE PTR [rax],al
   14004e0b0:	pop    rax
   14004e0b1:	int    0x3
   14004e0b3:	rex add DWORD PTR [rax],eax
	...
   14004e0be:	add    BYTE PTR [rax],al
   14004e0c0:	pop    rax
   14004e0c1:	(bad)
   14004e0c4:	add    DWORD PTR [rax],eax
   14004e0c6:	add    BYTE PTR [rax],al
   14004e0c8:	or     al,0xcb
   14004e0ca:	add    eax,DWORD PTR [rax+0x1]
   14004e0cd:	add    BYTE PTR [rax],al
   14004e0cf:	add    BYTE PTR [rcx],al
   14004e0d1:	add    BYTE PTR [rax],al
   14004e0d3:	add    BYTE PTR [rax],al
   14004e0d5:	add    BYTE PTR [rax],al
   14004e0d7:	add    BYTE PTR [rax-0x3b],dh
   14004e0da:	add    eax,DWORD PTR [rax+0x1]
   14004e0dd:	add    BYTE PTR [rax],al
   14004e0df:	add    ah,cl
   14004e0e1:	retf   0x4003
   14004e0e4:	add    DWORD PTR [rax],eax
   14004e0e6:	add    BYTE PTR [rax],al
   14004e0e8:	add    DWORD PTR [rax],eax
   14004e0ea:	add    BYTE PTR [rax],al
   14004e0ec:	add    BYTE PTR [rax],al
   14004e0ee:	add    BYTE PTR [rax],al
   14004e0f0:	cwde   
   14004e0f1:	(bad)
   14004e0f4:	add    DWORD PTR [rax],eax
   14004e0f6:	add    BYTE PTR [rax],al
   14004e0f8:	int3   
   14004e0f9:	retf   0x4003
   14004e0fc:	add    DWORD PTR [rax],eax
   14004e0fe:	add    BYTE PTR [rax],al
   14004e100:	(bad)  
   14004e101:	add    BYTE PTR [rax],al
   14004e103:	add    BYTE PTR [rax],al
   14004e105:	add    BYTE PTR [rax],al
   14004e107:	add    BYTE PTR [rax+0x14003c5],bh
   14004e10d:	add    BYTE PTR [rax],al
   14004e10f:	add    ah,cl
   14004e111:	retf   0x4003
   14004e114:	add    DWORD PTR [rax],eax
	...
   14004e11e:	add    BYTE PTR [rax],al
   14004e120:	clc    
   14004e121:	(bad)
   14004e124:	add    DWORD PTR [rax],eax
   14004e126:	add    BYTE PTR [rax],al
   14004e128:	rex.W retf 
   14004e12a:	add    eax,DWORD PTR [rax+0x1]
   14004e12d:	add    BYTE PTR [rax],al
   14004e12f:	add    BYTE PTR [rcx],al
   14004e131:	add    BYTE PTR [rax],al
   14004e133:	add    BYTE PTR [rax],al
   14004e135:	add    BYTE PTR [rax],al
   14004e137:	add    BYTE PTR [rax],bl
   14004e139:	mov    BYTE PTR [rbx],0x40
   14004e13c:	add    DWORD PTR [rax],eax
   14004e13e:	add    BYTE PTR [rax],al
   14004e140:	rex.R retf 
   14004e142:	add    eax,DWORD PTR [rax+0x1]
	...
   14004e14d:	add    BYTE PTR [rax],al
   14004e14f:	add    BYTE PTR [rax],dh
   14004e151:	mov    BYTE PTR [rbx],0x40
   14004e154:	add    DWORD PTR [rax],eax
   14004e156:	add    BYTE PTR [rax],al
   14004e158:	mov    eax,0x14003cc
	...
   14004e165:	add    BYTE PTR [rax],al
   14004e167:	add    BYTE PTR [rax-0x3a],bl
   14004e16a:	add    eax,DWORD PTR [rax+0x1]
   14004e16d:	add    BYTE PTR [rax],al
   14004e16f:	add    BYTE PTR [rax],ch
   14004e171:	retf   
   14004e172:	add    eax,DWORD PTR [rax+0x1]
	...
   14004e17d:	add    BYTE PTR [rax],al
   14004e17f:	add    BYTE PTR [rax-0x3a],dh
   14004e182:	add    eax,DWORD PTR [rax+0x1]
   14004e185:	add    BYTE PTR [rax],al
   14004e187:	add    BYTE PTR [rax+0x14003cb],bl
	...
   14004e195:	add    BYTE PTR [rax],al
   14004e197:	add    BYTE PTR [rax+0x14003c6],cl
   14004e19d:	add    BYTE PTR [rax],al
   14004e19f:	add    BYTE PTR [rax-0x33],bh
   14004e1a2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004e1ad:	add    BYTE PTR [rax],al
   14004e1af:	add    BYTE PTR [rax+0x14003c6],ah
   14004e1b5:	add    BYTE PTR [rax],al
   14004e1b7:	add    BYTE PTR [rax+0x14003cd],cl
	...
   14004e1c5:	add    BYTE PTR [rax],al
   14004e1c7:	add    al,dl
   14004e1c9:	mov    BYTE PTR [rbx],0x40
   14004e1cc:	add    DWORD PTR [rax],eax
   14004e1ce:	add    BYTE PTR [rax],al
   14004e1d0:	movabs al,ds:0x14003cd
   14004e1d9:	add    BYTE PTR [rax],al
   14004e1db:	add    BYTE PTR [rax],al
   14004e1dd:	add    BYTE PTR [rax],al
   14004e1df:	add    al,ch
   14004e1e1:	mov    BYTE PTR [rbx],0x40
   14004e1e4:	add    DWORD PTR [rax],eax
   14004e1e6:	add    BYTE PTR [rax],al
   14004e1e8:	movabs al,ds:0x14003cd
	...
   14004e1f9:	mov    DWORD PTR [rbx],0x140
   14004e1ff:	add    BYTE PTR [rsp+rcx*8],ch
   14004e202:	add    eax,DWORD PTR [rax+0x1]
	...
   14004e20d:	add    BYTE PTR [rax],al
   14004e20f:	add    BYTE PTR [rax],bl
   14004e211:	mov    DWORD PTR [rbx],0x140
   14004e217:	add    BYTE PTR [rsp+rcx*8],ch
   14004e21a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004e225:	add    BYTE PTR [rax],al
   14004e227:	add    BYTE PTR [rax],dh
   14004e229:	mov    DWORD PTR [rbx],0x140
   14004e22f:	add    BYTE PTR [rbp+rcx*8+0x14003],ch
	...
   14004e23e:	add    BYTE PTR [rax],al
   14004e240:	mov    QWORD PTR [rbx],0x140
   14004e247:	add    BYTE PTR [rbp+rcx*8+0x14003],ch
	...
   14004e256:	add    BYTE PTR [rax],al
   14004e258:	pop    rax
   14004e259:	mov    DWORD PTR [rbx],0x140
   14004e25f:	add    BYTE PTR [rbp+rcx*8+0x14003],ch
	...
   14004e26e:	add    BYTE PTR [rax],al
   14004e270:	jo     0x14004e239
   14004e272:	add    eax,DWORD PTR [rax+0x1]
   14004e275:	add    BYTE PTR [rax],al
   14004e277:	add    BYTE PTR [rbp+rcx*8+0x14003],ch
	...
   14004e286:	add    BYTE PTR [rax],al
   14004e288:	mov    bh,al
   14004e28a:	add    eax,DWORD PTR [rax+0x1]
   14004e28d:	add    BYTE PTR [rax],al
   14004e28f:	add    BYTE PTR [rbp+rcx*8+0x14003],ch
	...
   14004e29e:	add    BYTE PTR [rax],al
   14004e2a0:	cwde   
   14004e2a1:	mov    DWORD PTR [rbx],0x140
   14004e2a7:	add    BYTE PTR [rbp+rcx*8+0x14003],ch
	...
   14004e2b6:	add    BYTE PTR [rax],al
   14004e2b8:	test   al,0xc7
   14004e2ba:	add    eax,DWORD PTR [rax+0x1]
   14004e2bd:	add    BYTE PTR [rax],al
   14004e2bf:	add    BYTE PTR [rbp+rcx*8+0x14003],ch
	...
   14004e2ce:	add    BYTE PTR [rax],al
   14004e2d0:	rol    bh,0x3
   14004e2d3:	rex add DWORD PTR [rax],eax
   14004e2d6:	add    BYTE PTR [rax],al
   14004e2d8:	lods   al,BYTE PTR ds:[rsi]
   14004e2d9:	int    0x3
   14004e2db:	rex add DWORD PTR [rax],eax
	...
   14004e2e6:	add    BYTE PTR [rax],al
   14004e2e8:	rol    bh,1
   14004e2ea:	add    eax,DWORD PTR [rax+0x1]
   14004e2ed:	add    BYTE PTR [rax],al
   14004e2ef:	add    ah,bl
   14004e2f1:	retf   0x4003
   14004e2f4:	add    DWORD PTR [rax],eax
	...
   14004e2fe:	add    BYTE PTR [rax],al
   14004e300:	call   0x14144e6cc
   14004e305:	add    BYTE PTR [rax],al
   14004e307:	add    BYTE PTR [rbp+rcx*8+0x14003],dh
	...
   14004e316:	add    BYTE PTR [rax],al
   14004e318:	add    al,cl
   14004e31a:	add    eax,DWORD PTR [rax+0x1]
   14004e31d:	add    BYTE PTR [rax],al
   14004e31f:	add    BYTE PTR [rbp+rcx*8+0x14003],dh
   14004e326:	add    BYTE PTR [rax],al
   14004e328:	cmp    al,0x0
   14004e32a:	add    BYTE PTR [rax],al
   14004e32c:	add    BYTE PTR [rax],al
   14004e32e:	add    BYTE PTR [rax],al
   14004e330:	and    al,cl
   14004e332:	add    eax,DWORD PTR [rax+0x1]
   14004e335:	add    BYTE PTR [rax],al
   14004e337:	add    BYTE PTR [rbp+rcx*8+0x14003],dh
   14004e33e:	add    BYTE PTR [rax],al
   14004e340:	cmp    BYTE PTR [rax],al
   14004e343:	add    BYTE PTR [rax],al
   14004e345:	add    BYTE PTR [rax],al
   14004e347:	add    BYTE PTR [rax-0x38],al
   14004e34a:	add    eax,DWORD PTR [rax+0x1]
   14004e34d:	add    BYTE PTR [rax],al
   14004e34f:	add    BYTE PTR [rbp+rcx*8+0x14003],dh
   14004e356:	add    BYTE PTR [rax],al
   14004e358:	cmp    al,0x0
   14004e35a:	add    BYTE PTR [rax],al
   14004e35c:	add    BYTE PTR [rax],al
   14004e35e:	add    BYTE PTR [rax],al
   14004e360:	(bad)  
   14004e361:	enter  0x4003,0x1
   14004e365:	add    BYTE PTR [rax],al
   14004e367:	add    BYTE PTR [rbp+rcx*8+0x14003],dh
   14004e36e:	add    BYTE PTR [rax],al
   14004e370:	sbb    DWORD PTR [rax],eax
   14004e372:	add    BYTE PTR [rax],al
   14004e374:	add    BYTE PTR [rax],al
   14004e376:	add    BYTE PTR [rax],al
   14004e378:	mov    al,cl
   14004e37a:	add    eax,DWORD PTR [rax+0x1]
   14004e37d:	add    BYTE PTR [rax],al
   14004e37f:	add    BYTE PTR [rbp+rcx*8+0x14003],dh
   14004e386:	add    BYTE PTR [rax],al
   14004e388:	rex ja 0x14004e3a6
   14004e38b:	add    BYTE PTR [rax],al
   14004e38d:	add    BYTE PTR [rax],al
   14004e38f:	add    BYTE PTR [rax+0x14003c8],ch
   14004e395:	add    BYTE PTR [rax],al
   14004e397:	add    BYTE PTR [rbp+rcx*8+0x14003],dh
   14004e39e:	add    BYTE PTR [rax],al
   14004e3a0:	movabs al,ds:0xc800000000000dbb
   14004e3a9:	enter  0x4003,0x1
   14004e3ad:	add    BYTE PTR [rax],al
   14004e3af:	add    BYTE PTR [rbp+rcx*8+0x14003],dh
   14004e3b6:	add    BYTE PTR [rax],al
   14004e3b8:	(bad)  
   14004e3b9:	(bad)  
   14004e3ba:	add    BYTE PTR [rax],al
   14004e3bc:	add    BYTE PTR [rax],al
   14004e3be:	add    BYTE PTR [rax],al
   14004e3c0:	lock enter 0x4003,0x1
   14004e3c5:	add    BYTE PTR [rax],al
   14004e3c7:	add    al,dl
   14004e3c9:	retf   0x4003
   14004e3cc:	add    DWORD PTR [rax],eax
	...
   14004e3d6:	add    BYTE PTR [rax],al
   14004e3d8:	add    cl,cl
   14004e3da:	add    eax,DWORD PTR [rax+0x1]
   14004e3dd:	add    BYTE PTR [rax],al
   14004e3df:	add    al,dl
   14004e3e1:	retf   0x4003
   14004e3e4:	add    DWORD PTR [rax],eax
   14004e3e6:	add    BYTE PTR [rax],al
   14004e3e8:	add    eax,DWORD PTR [rax]
   14004e3ea:	add    BYTE PTR [rax],al
   14004e3ec:	add    BYTE PTR [rax],al
   14004e3ee:	add    BYTE PTR [rax],al
   14004e3f0:	and    cl,cl
   14004e3f2:	add    eax,DWORD PTR [rax+0x1]
   14004e3f5:	add    BYTE PTR [rax],al
   14004e3f7:	add    BYTE PTR [rax-0x35],cl
   14004e3fa:	add    eax,DWORD PTR [rax+0x1]
   14004e3fd:	add    BYTE PTR [rax],al
   14004e3ff:	add    BYTE PTR [rcx],al
   14004e401:	add    BYTE PTR [rax],al
   14004e403:	add    BYTE PTR [rax],al
   14004e405:	add    BYTE PTR [rax],al
   14004e407:	add    BYTE PTR [rax-0x37],al
   14004e40a:	add    eax,DWORD PTR [rax+0x1]
   14004e40d:	add    BYTE PTR [rax],al
   14004e40f:	add    BYTE PTR [rbx+rcx*8],bh
   14004e412:	add    eax,DWORD PTR [rax+0x1]
	...
   14004e41d:	add    BYTE PTR [rax],al
   14004e41f:	add    BYTE PTR [rax-0x37],ah
   14004e422:	add    eax,DWORD PTR [rax+0x1]
   14004e425:	add    BYTE PTR [rax],al
   14004e427:	add    BYTE PTR [rbx+rcx*8],bh
   14004e42a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004e435:	add    BYTE PTR [rax],al
   14004e437:	add    BYTE PTR [rax+0x14003c9],al
   14004e43d:	add    BYTE PTR [rax],al
   14004e43f:	add    BYTE PTR [rbx+rcx*8],bh
   14004e442:	add    eax,DWORD PTR [rax+0x1]
   14004e445:	add    BYTE PTR [rax],al
   14004e447:	add    BYTE PTR [rcx],al
   14004e449:	add    BYTE PTR [rax],al
   14004e44b:	add    BYTE PTR [rax],al
   14004e44d:	add    BYTE PTR [rax],al
   14004e44f:	add    BYTE PTR [rax+0x14003c9],bl
   14004e455:	add    BYTE PTR [rax],al
   14004e457:	add    BYTE PTR [rbx+rcx*8],bh
   14004e45a:	add    eax,DWORD PTR [rax+0x1]
   14004e45d:	add    BYTE PTR [rax],al
   14004e45f:	add    ah,al
   14004e461:	or     DWORD PTR [rax],eax
   14004e463:	add    BYTE PTR [rax],al
   14004e465:	add    BYTE PTR [rax],al
   14004e467:	add    BYTE PTR [rax+0x14003c9],dh
   14004e46d:	add    BYTE PTR [rax],al
   14004e46f:	add    BYTE PTR [rbx+rcx*8],bh
   14004e472:	add    eax,DWORD PTR [rax+0x1]
   14004e475:	add    BYTE PTR [rax],al
   14004e477:	add    BYTE PTR [rax+0x3a],bl
   14004e47d:	add    BYTE PTR [rax],al
   14004e47f:	add    al,dl
   14004e481:	leave  
   14004e482:	add    eax,DWORD PTR [rax+0x1]
   14004e485:	add    BYTE PTR [rax],al
   14004e487:	add    BYTE PTR [rbx+rcx*8],bh
   14004e48a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004e495:	add    BYTE PTR [rax],al
   14004e497:	add    al,ah
   14004e499:	leave  
   14004e49a:	add    eax,DWORD PTR [rax+0x1]
   14004e49d:	add    BYTE PTR [rax],al
   14004e49f:	add    BYTE PTR [rbx+rcx*8],bh
   14004e4a2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004e4ad:	add    BYTE PTR [rax],al
   14004e4af:	add    al,dh
   14004e4b1:	leave  
   14004e4b2:	add    eax,DWORD PTR [rax+0x1]
   14004e4b5:	add    BYTE PTR [rax],al
   14004e4b7:	add    BYTE PTR [rbx+rcx*8],bh
   14004e4ba:	add    eax,DWORD PTR [rax+0x1]
	...
   14004e4c9:	retf   0x4003
   14004e4cc:	add    DWORD PTR [rax],eax
   14004e4ce:	add    BYTE PTR [rax],al
   14004e4d0:	cmp    al,0xcb
   14004e4d2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004e4dd:	add    BYTE PTR [rax],al
   14004e4df:	add    BYTE PTR [rax],dl
   14004e4e1:	retf   0x4003
   14004e4e4:	add    DWORD PTR [rax],eax
   14004e4e6:	add    BYTE PTR [rax],al
   14004e4e8:	cmp    al,0xcb
   14004e4ea:	add    eax,DWORD PTR [rax+0x1]
	...
   14004e4f5:	add    BYTE PTR [rax],al
   14004e4f7:	add    BYTE PTR [rax],ah
   14004e4f9:	retf   0x4003
   14004e4fc:	add    DWORD PTR [rax],eax
   14004e4fe:	add    BYTE PTR [rax],al
   14004e500:	cmp    al,0xcb
   14004e502:	add    eax,DWORD PTR [rax+0x1]
	...
   14004e50d:	add    BYTE PTR [rax],al
   14004e50f:	add    BYTE PTR [rax],dh
   14004e511:	retf   0x4003
   14004e514:	add    DWORD PTR [rax],eax
   14004e516:	add    BYTE PTR [rax],al
   14004e518:	cmp    al,0xcb
   14004e51a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004e525:	add    BYTE PTR [rax],al
   14004e527:	add    BYTE PTR [rax-0x36],al
   14004e52a:	add    eax,DWORD PTR [rax+0x1]
   14004e52d:	add    BYTE PTR [rax],al
   14004e52f:	add    BYTE PTR [rbx+rcx*8],bh
   14004e532:	add    eax,DWORD PTR [rax+0x1]
   14004e535:	add    BYTE PTR [rax],al
   14004e537:	add    BYTE PTR [rax],ah
   14004e539:	rex.WRX add BYTE PTR [rax],r8b
   14004e53c:	add    BYTE PTR [rax],al
   14004e53e:	add    BYTE PTR [rax],al
   14004e540:	(bad)  
   14004e541:	retf   0x4003
   14004e544:	add    DWORD PTR [rax],eax
   14004e546:	add    BYTE PTR [rax],al
   14004e548:	cmp    al,0xcb
   14004e54a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004e555:	add    BYTE PTR [rax],al
   14004e557:	add    BYTE PTR [rax-0x36],dh
   14004e55a:	add    eax,DWORD PTR [rax+0x1]
   14004e55d:	add    BYTE PTR [rax],al
   14004e55f:	add    ah,cl
   14004e561:	retf   0x4003
   14004e564:	add    DWORD PTR [rax],eax
	...
   14004e56e:	add    BYTE PTR [rax],al
   14004e570:	nop
   14004e571:	retf   0x4003
   14004e574:	add    DWORD PTR [rax],eax
   14004e576:	add    BYTE PTR [rax],al
   14004e578:	int3   
   14004e579:	retf   0x4003
   14004e57c:	add    DWORD PTR [rax],eax
	...
   14004e586:	add    BYTE PTR [rax],al
   14004e588:	test   al,0xca
   14004e58a:	add    eax,DWORD PTR [rax+0x1]
   14004e58d:	add    BYTE PTR [rax],al
   14004e58f:	add    ah,cl
   14004e591:	retf   0x4003
   14004e594:	add    DWORD PTR [rax],eax
	...
   14004e5b6:	add    BYTE PTR [rax],al
   14004e5b8:	test   al,0xd0
   14004e5ba:	add    eax,DWORD PTR [rax+0x1]
   14004e5bd:	add    BYTE PTR [rax],al
   14004e5bf:	add    BYTE PTR [rsi],al
   14004e5c1:	add    BYTE PTR [rax],al
   14004e5c3:	add    BYTE PTR [rcx],al
   14004e5c5:	add    BYTE PTR [rax],al
   14004e5c7:	add    BYTE PTR [rax],al
   14004e5c9:	add    BYTE PTR [rax],al
   14004e5cb:	add    BYTE PTR [rsi],al
   14004e5cd:	add    BYTE PTR [rax],al
   14004e5cf:	add    al,ah
   14004e5d1:	add    eax,DWORD PTR [r8+0x1]
   14004e5d5:	add    BYTE PTR [rax],al
   14004e5d7:	add    BYTE PTR [rax],ch
   14004e5d9:	rex.X add eax,DWORD PTR [rax+0x1]
   14004e5dd:	add    BYTE PTR [rax],al
   14004e5df:	add    BYTE PTR [rax+0x140033e],ch
	...
   14004e5ed:	add    BYTE PTR [rax],al
   14004e5ef:	add    BYTE PTR [rax],ch
   14004e5f1:	rex.RX add r8d,DWORD PTR [rax+0x1]
   14004e5f5:	add    BYTE PTR [rax],al
   14004e5f7:	add    BYTE PTR [rax],al
   14004e5f9:	add    BYTE PTR [rax],al
   14004e5fb:	add    BYTE PTR [rax],0x0
	...
   14004e63e:	add    BYTE PTR [rax],al
   14004e640:	jo     0x14004e628
   14004e642:	add    al,0x40
   14004e644:	add    DWORD PTR [rax],eax
   14004e646:	add    BYTE PTR [rax],al
   14004e648:	loopne 0x14004e5d7
   14004e64a:	add    eax,DWORD PTR [rax+0x1]
   14004e64d:	add    BYTE PTR [rax],al
   14004e64f:	add    al,al
   14004e651:	mov    WORD PTR [rbx],es
   14004e653:	rex add DWORD PTR [rax],eax
   14004e656:	add    BYTE PTR [rax],al
   14004e658:	loopne 0x14004e5e6
   14004e65a:	add    eax,DWORD PTR [rax+0x1]
   14004e65d:	add    BYTE PTR [rax],al
   14004e65f:	add    BYTE PTR [rcx],al
   14004e661:	add    al,BYTE PTR [rax]
	...
   14004e69f:	add    bh,bh
   14004e6a1:	(bad)  
   14004e6a2:	(bad)  
   14004e6a3:	inc    DWORD PTR [rax]
	...
   14004e6dd:	add    BYTE PTR [rax],al
   14004e6df:	add    BYTE PTR [rax+0x3e],al
   14004e6e2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004e6ed:	add    BYTE PTR [rax],al
   14004e6ef:	add    BYTE PTR [rsi],ch
   14004e6f1:	(bad)  
   14004e6f2:	push   r14
   14004e6f4:	ins    BYTE PTR es:[rdi],dx
   14004e6f5:	outs   dx,DWORD PTR ds:[rsi]
   14004e6f6:	imul   esp,DWORD PTR [ebx+0x5f],0x6f727265
   14004e6fe:	jb     0x14004e740
   14004e700:	jae    0x14004e776
   14004e702:	fs rex
   14004e704:	add    BYTE PTR [rax],al
   14004e707:	add    BYTE PTR [rax+0x3e],al
   14004e70a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004e715:	add    BYTE PTR [rax],al
   14004e717:	add    BYTE PTR [rsi],ch
   14004e719:	(bad)  
   14004e71a:	push   r14
   14004e71c:	ins    BYTE PTR es:[rdi],dx
   14004e71d:	outs   dx,BYTE PTR gs:[rsi]
   14004e71f:	addr32 je 0x14004e78a
   14004e722:	pop    rdi
   14004e723:	gs jb  0x14004e798
   14004e726:	outs   dx,DWORD PTR ds:[rsi]
   14004e727:	jb     0x14004e769
   14004e729:	jae    0x14004e79f
   14004e72b:	fs rex
   14004e72d:	add    BYTE PTR [rax],al
   14004e730:	rex
   14004e731:	add    eax,DWORD PTR ds:[rax+0x1]
	...
   14004e73d:	add    BYTE PTR [rax],al
   14004e73f:	add    BYTE PTR [rsi],ch
   14004e741:	(bad)  
   14004e742:	push   r14
   14004e744:	pop    rdi
   14004e745:	rex.WB outs dx,DWORD PTR ds:[rsi]
   14004e747:	jae    0x14004e7bd
   14004e749:	jb     0x14004e7b0
   14004e74b:	(bad)  
   14004e74c:	ins    DWORD PTR es:[rdi],dx
   14004e74d:	pop    rdi
   14004e74e:	gs jb  0x14004e7c3
   14004e751:	outs   dx,DWORD PTR ds:[rsi]
   14004e752:	jb     0x14004e7b3
   14004e754:	movsxd esp,DWORD PTR [rcx+0x74]
   14004e757:	outs   dx,DWORD PTR gs:[esi]
   14004e75a:	jb     0x14004e7d5
   14004e75c:	rex jae 0x14004e7d3
   14004e75f:	fs rex
   14004e761:	add    BYTE PTR [rax],al
   14004e764:	add    BYTE PTR [rax],al
   14004e766:	add    BYTE PTR [rax],al
   14004e768:	rex
   14004e769:	add    eax,DWORD PTR ds:[rax+0x1]
	...
   14004e775:	add    BYTE PTR [rax],al
   14004e777:	add    BYTE PTR [rsi],ch
   14004e779:	(bad)  
   14004e77a:	push   r14
   14004e77c:	pop    rdi
   14004e77d:	push   rbx
   14004e77e:	jns    0x14004e7f3
   14004e780:	je     0x14004e7e7
   14004e782:	ins    DWORD PTR es:[rdi],dx
   14004e783:	pop    rdi
   14004e784:	gs jb  0x14004e7f9
   14004e787:	outs   dx,DWORD PTR ds:[rsi]
   14004e788:	jb     0x14004e7e9
   14004e78a:	movsxd esp,DWORD PTR [rcx+0x74]
   14004e78d:	outs   dx,DWORD PTR gs:[esi]
   14004e790:	jb     0x14004e80b
   14004e792:	rex jae 0x14004e809
   14004e795:	fs rex
   14004e797:	add    BYTE PTR [rax],al
   14004e79a:	add    BYTE PTR [rax],al
   14004e79c:	add    BYTE PTR [rax],al
   14004e79e:	add    BYTE PTR [rax],al
   14004e7a0:	rex
   14004e7a1:	add    eax,DWORD PTR ds:[rax+0x1]
	...
   14004e7ad:	add    BYTE PTR [rax],al
   14004e7af:	add    BYTE PTR [rsi],ch
   14004e7b1:	(bad)  
   14004e7b2:	push   r14
   14004e7b4:	gs jb  0x14004e829
   14004e7b7:	outs   dx,DWORD PTR ds:[rsi]
   14004e7b8:	jb     0x14004e819
   14004e7ba:	movsxd esp,DWORD PTR [rcx+0x74]
   14004e7bd:	outs   dx,DWORD PTR gs:[esi]
   14004e7c0:	jb     0x14004e83b
   14004e7c2:	rex jae 0x14004e839
   14004e7c5:	fs rex
   14004e7c7:	add    BYTE PTR [rax],al
   14004e7ca:	add    BYTE PTR [rax],al
   14004e7cc:	add    BYTE PTR [rax],al
   14004e7ce:	add    BYTE PTR [rax],al
   14004e7d0:	rex
   14004e7d1:	add    eax,DWORD PTR ds:[rax+0x1]
	...
   14004e7dd:	add    BYTE PTR [rax],al
   14004e7df:	add    BYTE PTR [rsi],ch
   14004e7e1:	(bad)  
   14004e7e2:	push   r14
   14004e7e4:	pop    rdi
   14004e7e5:	rex.RXB
   14004e7e6:	outs   dx,BYTE PTR gs:[rsi]
   14004e7e8:	gs jb  0x14004e854
   14004e7eb:	movsxd ebx,DWORD PTR [rdi+0x65]
   14004e7ee:	jb     0x14004e862
   14004e7f0:	outs   dx,DWORD PTR ds:[rsi]
   14004e7f1:	jb     0x14004e852
   14004e7f3:	movsxd esp,DWORD PTR [rcx+0x74]
   14004e7f6:	outs   dx,DWORD PTR gs:[esi]
   14004e7f9:	jb     0x14004e874
   14004e7fb:	rex jae 0x14004e872
   14004e7fe:	fs rex
   14004e800:	add    BYTE PTR [rax],al
   14004e803:	add    BYTE PTR [rax],al
   14004e805:	add    BYTE PTR [rax],al
   14004e807:	add    BYTE PTR [rax+0x3e],al
   14004e80a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004e815:	add    BYTE PTR [rax],al
   14004e817:	add    BYTE PTR [rsi],ch
   14004e819:	(bad)  
   14004e81a:	push   r14
   14004e81c:	push   0x72655f72
   14004e821:	jb     0x14004e892
   14004e823:	jb     0x14004e865
   14004e825:	add    BYTE PTR [rax],al
   14004e828:	rex
   14004e829:	add    eax,DWORD PTR ds:[rax+0x1]
	...
   14004e835:	add    BYTE PTR [rax],al
   14004e837:	add    BYTE PTR [rsi],ch
   14004e839:	(bad)  
   14004e83a:	push   r14
   14004e83c:	(bad)
   14004e841:	ins    BYTE PTR es:[rdi],dx
   14004e842:	ins    BYTE PTR es:[rdi],dx
   14004e843:	outs   dx,DWORD PTR ds:[rsi]
   14004e844:	movsxd eax,DWORD PTR [rax+0x73]
   14004e847:	je     0x14004e8ad
   14004e849:	rex
   14004e84a:	add    BYTE PTR [rax],al
   14004e84d:	add    BYTE PTR [rax],al
   14004e84f:	add    BYTE PTR [rax+0x3e],al
   14004e852:	add    eax,DWORD PTR [rax+0x1]
	...
   14004e85d:	add    BYTE PTR [rax],al
   14004e85f:	add    BYTE PTR [rsi],ch
   14004e861:	(bad)  
   14004e862:	push   r14
   14004e864:	gs js  0x14004e8ca
   14004e867:	gs jo  0x14004e8de
   14004e86a:	imul   ebp,DWORD PTR [rdi+0x6e],0x40004040
   14004e871:	add    eax,DWORD PTR ds:[rax+0x1]
	...
   14004e87d:	add    BYTE PTR [rax],al
   14004e87f:	add    BYTE PTR [rsi],ch
   14004e881:	(bad)  
   14004e882:	push   r14
   14004e884:	(bad)  
   14004e885:	and    al,0x43
   14004e887:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14004e889:	ins    DWORD PTR es:[rdi],dx
   14004e88a:	rex.WRXB (bad) 
   14004e88c:	push   0x65
   14004e88e:	movsxd esi,DWORD PTR [rdx+rdx*2+0x6f]
   14004e892:	outs   dx,DWORD PTR ds:[rsi]
   14004e893:	je     0x14004e8da
   14004e895:	js     0x14004e8d7
   14004e897:	push   rsi
   14004e898:	rex.XB
   14004e899:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14004e89b:	ins    DWORD PTR es:[rdi],dx
   14004e89c:	rex.WRB jne 0x14004e90b
   14004e89f:	je     0x14004e90a
   14004e8a1:	push   rsp
   14004e8a2:	push   0x64616572
   14004e8a7:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14004e8a9:	fs gs ins BYTE PTR es:[rdi],dx
   14004e8ac:	rex
   14004e8ad:	push   r12
   14004e8af:	rex.WR
   14004e8b0:	rex
   14004e8b1:	rex
   14004e8b2:	rex
   14004e8b3:	push   r12
   14004e8b5:	rex.WR
   14004e8b6:	rex
   14004e8b7:	add    BYTE PTR [rax],al
   14004e8ba:	add    BYTE PTR [rax],al
   14004e8bc:	add    BYTE PTR [rax],al
   14004e8be:	add    BYTE PTR [rax],al
   14004e8c0:	rex
   14004e8c1:	add    eax,DWORD PTR ds:[rax+0x1]
	...
   14004e8cd:	add    BYTE PTR [rax],al
   14004e8cf:	add    BYTE PTR [rsi],ch
   14004e8d1:	(bad)  
   14004e8d2:	push   r14
   14004e8d4:	rex.XB
   14004e8d5:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14004e8d7:	ins    DWORD PTR es:[rdi],dx
   14004e8d8:	rex.WRXB (bad) 
   14004e8da:	push   0x65
   14004e8dc:	movsxd esi,DWORD PTR [rdx+rdx*2+0x6f]
   14004e8e0:	outs   dx,DWORD PTR ds:[rsi]
   14004e8e1:	je     0x14004e925
   14004e8e3:	(bad)  
   14004e8e4:	jae    0x14004e94b
   14004e8e6:	rex
   14004e8e7:	push   r12
   14004e8e9:	rex.WR
   14004e8ea:	rex
   14004e8eb:	add    BYTE PTR [rax],al
   14004e8ee:	add    BYTE PTR [rax],al
   14004e8f0:	rex
   14004e8f1:	add    eax,DWORD PTR ds:[rax+0x1]
	...
   14004e8fd:	add    BYTE PTR [rax],al
   14004e8ff:	add    BYTE PTR [rsi],ch
   14004e901:	(bad)  
   14004e902:	push   r14
   14004e904:	rex.XB
   14004e905:	rex.WRX imul r14,QWORD PTR [rbx+0x50],0x6674616c
   14004e90d:	outs   dx,DWORD PTR ds:[rsi]
   14004e90e:	jb     0x14004e97d
   14004e910:	rex
   14004e911:	add    BYTE PTR [rax],al
   14004e914:	add    BYTE PTR [rax],al
   14004e916:	add    BYTE PTR [rax],al
   14004e918:	rex
   14004e919:	add    eax,DWORD PTR ds:[rax+0x1]
	...
   14004e925:	add    BYTE PTR [rax],al
   14004e927:	add    BYTE PTR [rsi],ch
   14004e929:	(bad)  
   14004e92a:	push   r14
   14004e92c:	rex.WB
   14004e92d:	rex.WB jo 0x14004e9a3
   14004e930:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14004e932:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14004e935:	ins    DWORD PTR es:[rdi],dx
   14004e936:	imul   ebp,DWORD PTR [rsi+0x67],0x7373654d
   14004e93d:	(bad)  
   14004e93e:	addr32 gs jae 0x14004e982
   14004e942:	add    BYTE PTR [rax],al
   14004e945:	add    BYTE PTR [rax],al
   14004e947:	add    BYTE PTR [rax+0x3e],al
   14004e94a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004e955:	add    BYTE PTR [rax],al
   14004e957:	add    BYTE PTR [rsi],ch
   14004e959:	(bad)  
   14004e95a:	push   r14
   14004e95c:	(bad)  
   14004e95d:	and    al,0x43
   14004e95f:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14004e961:	ins    DWORD PTR es:[rdi],dx
   14004e962:	rex.WRXB (bad) 
   14004e964:	push   0x65
   14004e966:	movsxd esi,DWORD PTR [rax+rax*2+0x56]
   14004e96a:	rex.XB
   14004e96b:	rex.WRX imul r14,QWORD PTR [rbx+0x50],0x6674616c
   14004e973:	outs   dx,DWORD PTR ds:[rsi]
   14004e974:	jb     0x14004e9e3
   14004e976:	rex
   14004e977:	rex
   14004e978:	rex
   14004e979:	push   r12
   14004e97b:	rex.WR
   14004e97c:	rex
   14004e97d:	add    BYTE PTR [rax],al
   14004e980:	rex
   14004e981:	add    eax,DWORD PTR ds:[rax+0x1]
	...
   14004e98d:	add    BYTE PTR [rax],al
   14004e98f:	add    BYTE PTR [rsi],ch
   14004e991:	(bad)  
   14004e992:	push   r14
   14004e994:	rex.XB
   14004e995:	rex.WRX imul r14,QWORD PTR [rbx+0x50],0x6674616c
   14004e99d:	outs   dx,DWORD PTR ds:[rsi]
   14004e99e:	jb     0x14004ea0d
   14004e9a0:	push   rbx
   14004e9a1:	gs jb  0x14004ea1a
   14004e9a4:	imul   esp,DWORD PTR [rbx+0x65],0x4040
   14004e9ab:	add    BYTE PTR [rax],al
   14004e9ad:	add    BYTE PTR [rax],al
   14004e9af:	add    BYTE PTR [rax+0x3e],al
   14004e9b2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004e9bd:	add    BYTE PTR [rax],al
   14004e9bf:	add    BYTE PTR [rsi],ch
   14004e9c1:	(bad)  
   14004e9c2:	push   r14
   14004e9c4:	rex.XB
   14004e9c5:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14004e9c7:	ins    DWORD PTR es:[rdi],dx
   14004e9c8:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14004e9ca:	fs jne 0x14004ea39
   14004e9cd:	gs rex
   14004e9cf:	push   r12
   14004e9d1:	rex.WR
   14004e9d2:	rex
   14004e9d3:	add    BYTE PTR [rax],al
   14004e9d6:	add    BYTE PTR [rax],al
   14004e9d8:	rex
   14004e9d9:	add    eax,DWORD PTR ds:[rax+0x1]
	...
   14004e9e5:	add    BYTE PTR [rax],al
   14004e9e7:	add    BYTE PTR [rsi],ch
   14004e9e9:	(bad)  
   14004e9ea:	push   r14
   14004e9ec:	(bad)  
   14004e9ed:	and    al,0x43
   14004e9ef:	rex.B je 0x14004ea5e
   14004e9f2:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14004e9f4:	fs jne 0x14004ea63
   14004e9f7:	gs push rsp
   14004e9f9:	rex push rsi
   14004e9fb:	rex.XB
   14004e9fc:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14004e9fe:	ins    DWORD PTR es:[rdi],dx
   14004e9ff:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14004ea01:	fs jne 0x14004ea70
   14004ea04:	gs rex
   14004ea06:	push   r12
   14004ea08:	rex.WR
   14004ea09:	rex
   14004ea0a:	rex
   14004ea0b:	rex
   14004ea0c:	push   r12
   14004ea0e:	rex.WR
   14004ea0f:	rex
   14004ea10:	add    BYTE PTR [rax],al
   14004ea13:	add    BYTE PTR [rax],al
   14004ea15:	add    BYTE PTR [rax],al
   14004ea17:	add    BYTE PTR [rax+0x3e],al
   14004ea1a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004ea25:	add    BYTE PTR [rax],al
   14004ea27:	add    BYTE PTR [rsi],ch
   14004ea29:	(bad)  
   14004ea2a:	push   r14
   14004ea2c:	rex.XB
   14004ea2d:	rex.B je 0x14004ea9c
   14004ea30:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14004ea32:	fs jne 0x14004eaa1
   14004ea35:	gs rex
   14004ea37:	push   r12
   14004ea39:	rex.WR
   14004ea3a:	rex
   14004ea3b:	add    BYTE PTR [rax],al
   14004ea3e:	add    BYTE PTR [rax],al
   14004ea40:	rex
   14004ea41:	add    eax,DWORD PTR ds:[rax+0x1]
	...
   14004ea4d:	add    BYTE PTR [rax],al
   14004ea4f:	add    BYTE PTR [rsi],ch
   14004ea51:	(bad)  
   14004ea52:	push   r13
   14004ea54:	pop    rdi
   14004ea55:	push   r12
   14004ea57:	rex.WR pop rdi
   14004ea59:	rex.WRB
   14004ea5a:	rex.WRXB
   14004ea5b:	rex.R push rbp
   14004ea5d:	rex.WR
   14004ea5e:	rex.RB (bad) 
   14004ea60:	xor    BYTE PTR [rax+0x41],al
   14004ea63:	push   rsp
   14004ea64:	rex.WR
   14004ea65:	rex
   14004ea66:	add    BYTE PTR [rax+0x3e],al
   14004ea6a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004ea75:	add    BYTE PTR [rax],al
   14004ea77:	add    BYTE PTR [rsi],ch
   14004ea79:	(bad)  
   14004ea7a:	push   r14
   14004ea7c:	rex.XB push r10
   14004ea7e:	gs addr32 rex.WRXB (bad) 
   14004ea82:	push   0x65
   14004ea84:	movsxd esi,DWORD PTR [rax+rax*2+0x41]
   14004ea88:	push   rsp
   14004ea89:	rex.WR
   14004ea8a:	rex
   14004ea8b:	add    BYTE PTR [rax],al
   14004ea8e:	add    BYTE PTR [rax],al
   14004ea90:	rex
   14004ea91:	add    eax,DWORD PTR ds:[rax+0x1]
	...
   14004ea9d:	add    BYTE PTR [rax],al
   14004ea9f:	add    BYTE PTR [rsi],ch
   14004eaa1:	(bad)  
   14004eaa2:	push   r13
   14004eaa4:	rex.WB push r10
   14004eaa6:	imul   esi,DWORD PTR gs:[ebx+0x74],0x42726172
   14004eaaf:	(bad)  
   14004eab0:	jae    0x14004eb17
   14004eab2:	rex
   14004eab3:	add    BYTE PTR [rax],al
   14004eab6:	add    BYTE PTR [rax],al
   14004eab8:	rex
   14004eab9:	add    eax,DWORD PTR ds:[rax+0x1]
	...
   14004eac5:	add    BYTE PTR [rax],al
   14004eac7:	add    BYTE PTR [rsi],ch
   14004eac9:	(bad)  
   14004eaca:	push   r13
   14004eacc:	rex.WB push r13
   14004eace:	outs   dx,BYTE PTR ds:[rsi]
   14004eacf:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   14004ead3:	outs   dx,BYTE PTR ds:[rsi]
   14004ead4:	rex
   14004ead5:	add    BYTE PTR [rax],al
   14004ead8:	rex
   14004ead9:	add    eax,DWORD PTR ds:[rax+0x1]
	...
   14004eae5:	add    BYTE PTR [rax],al
   14004eae7:	add    BYTE PTR [rsi],ch
   14004eae9:	(bad)  
   14004eaea:	push   r14
   14004eaec:	rex.XB
   14004eaed:	rex.B je 0x14004eb5c
   14004eaf0:	rex.RB js 0x14004eb56
   14004eaf3:	gs jo  0x14004eb6a
   14004eaf6:	imul   ebp,DWORD PTR [rdi+0x6e],0x4c544140
   14004eafd:	rex
   14004eafe:	add    BYTE PTR [rax+0x3e],al
   14004eb02:	add    eax,DWORD PTR [rax+0x1]
	...
   14004eb0d:	add    BYTE PTR [rax],al
   14004eb0f:	add    BYTE PTR [rsi],ch
   14004eb11:	(bad)  
   14004eb12:	push   r14
   14004eb14:	rex.XB push r10
   14004eb16:	(bad)  
   14004eb17:	je     0x14004eb6c
   14004eb19:	gs jb  0x14004eb92
   14004eb1c:	imul   esp,DWORD PTR [rbx+0x65],0x4040
   14004eb23:	add    BYTE PTR [rax],al
   14004eb25:	add    BYTE PTR [rax],al
   14004eb27:	add    BYTE PTR [rax+0x3e],al
   14004eb2a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004eb35:	add    BYTE PTR [rax],al
   14004eb37:	add    BYTE PTR [rsi],ch
   14004eb39:	(bad)  
   14004eb3a:	push   r14
   14004eb3c:	(bad)  
   14004eb3d:	and    al,0x43
   14004eb3f:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14004eb41:	ins    DWORD PTR es:[rdi],dx
   14004eb42:	rex.WRXB (bad) 
   14004eb44:	push   0x65
   14004eb46:	movsxd esi,DWORD PTR [rax+rax*2+0x56]
   14004eb4a:	rex.XB
   14004eb4b:	rex.WRX imul r14,QWORD PTR [rbx+0x49],0x6570736e
   14004eb53:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14004eb57:	outs   dx,BYTE PTR ds:[rsi]
   14004eb58:	rex
   14004eb59:	rex
   14004eb5a:	rex
   14004eb5b:	push   r12
   14004eb5d:	rex.WR
   14004eb5e:	rex
   14004eb5f:	add    BYTE PTR [rax],al
   14004eb62:	add    BYTE PTR [rax],al
   14004eb64:	add    BYTE PTR [rax],al
   14004eb66:	add    BYTE PTR [rax],al
   14004eb68:	rex
   14004eb69:	add    eax,DWORD PTR ds:[rax+0x1]
	...
   14004eb75:	add    BYTE PTR [rax],al
   14004eb77:	add    BYTE PTR [rsi],ch
   14004eb79:	(bad)  
   14004eb7a:	push   r14
   14004eb7c:	rex.XB
   14004eb7d:	rex.WRX imul r14,QWORD PTR [rbx+0x49],0x6570736e
   14004eb85:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14004eb89:	outs   dx,BYTE PTR ds:[rsi]
   14004eb8a:	rex
   14004eb8b:	add    BYTE PTR [rax],al
   14004eb8e:	add    BYTE PTR [rax],al
   14004eb90:	rex
   14004eb91:	add    eax,DWORD PTR ds:[rax+0x1]
	...
   14004eb9d:	add    BYTE PTR [rax],al
   14004eb9f:	add    BYTE PTR [rsi],ch
   14004eba1:	(bad)  
   14004eba2:	push   r14
   14004eba4:	rex.WB
   14004eba5:	rex.WRX imul r14,QWORD PTR [rbx+0x49],0x6570736e
   14004ebad:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14004ebb1:	outs   dx,BYTE PTR ds:[rsi]
   14004ebb2:	rex.RX ins BYTE PTR es:[rdi],dx
   14004ebb4:	outs   dx,DWORD PTR ds:[rsi]
   14004ebb5:	ja     0x14004ec04
   14004ebb7:	(bad)  
   14004ebb8:	outs   dx,BYTE PTR ds:[rsi]
   14004ebb9:	(bad)  
   14004ebba:	addr32 gs jb 0x14004ebfe
   14004ebbe:	add    BYTE PTR [rax+0x3e],al
   14004ebc2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004ebcd:	add    BYTE PTR [rax],al
   14004ebcf:	add    BYTE PTR [rsi],ch
   14004ebd1:	(bad)  
   14004ebd2:	push   r14
   14004ebd4:	rex.WB
   14004ebd5:	rex.WRX imul r14,QWORD PTR [rbx+0x49],0x7265746e
   14004ebdd:	movsxd esp,DWORD PTR [rbp+0x70]
   14004ebe0:	je     0x14004ec4b
   14004ebe2:	outs   dx,DWORD PTR ds:[rsi]
   14004ebe3:	outs   dx,BYTE PTR ds:[rsi]
   14004ebe4:	rex.XB ins BYTE PTR es:[rdi],dx
   14004ebe6:	imul   esp,DWORD PTR [rbp+0x6e],0x65764574
   14004ebed:	outs   dx,BYTE PTR ds:[rsi]
   14004ebee:	je     0x14004ec63
   14004ebf0:	rex
   14004ebf1:	add    BYTE PTR [rax],al
   14004ebf4:	add    BYTE PTR [rax],al
   14004ebf6:	add    BYTE PTR [rax],al
   14004ebf8:	rex
   14004ebf9:	add    eax,DWORD PTR ds:[rax+0x1]
	...
   14004ec05:	add    BYTE PTR [rax],al
   14004ec07:	add    BYTE PTR [rsi],ch
   14004ec09:	(bad)  
   14004ec0a:	push   r13
   14004ec0c:	rex.WB
   14004ec0d:	rex.RXB (bad) 
   14004ec0f:	jo     0x14004ec72
   14004ec11:	rex.W outs dx,DWORD PTR ds:[rsi]
   14004ec13:	jae    0x14004ec89
   14004ec15:	rex.XB (bad) 
   14004ec17:	ins    BYTE PTR es:[rdi],dx
   14004ec18:	ins    BYTE PTR es:[rdi],dx
   14004ec19:	(bad)  
   14004ec1b:	movsxd ebp,DWORD PTR [rbx+0x40]
   14004ec1e:	add    BYTE PTR [rax+0x3e],al
   14004ec22:	add    eax,DWORD PTR [rax+0x1]
	...
   14004ec2d:	add    BYTE PTR [rax],al
   14004ec2f:	add    BYTE PTR [rsi],ch
   14004ec31:	(bad)  
   14004ec32:	push   r14
   14004ec34:	(bad)  
   14004ec35:	and    al,0x43
   14004ec37:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14004ec39:	ins    DWORD PTR es:[rdi],dx
   14004ec3a:	rex.WRXB (bad) 
   14004ec3c:	push   0x65
   14004ec3e:	movsxd esi,DWORD PTR [rax+rax*2+0x56]
   14004ec42:	rex.XB
   14004ec43:	rex.WRX imul r14,QWORD PTR [rbx+0x49],0x6570736e
   14004ec4b:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14004ec4f:	outs   dx,BYTE PTR ds:[rsi]
   14004ec50:	rex.RX ins BYTE PTR es:[rdi],dx
   14004ec52:	outs   dx,DWORD PTR ds:[rsi]
   14004ec53:	ja     0x14004ec95
   14004ec55:	rex
   14004ec56:	rex
   14004ec57:	push   r12
   14004ec59:	rex.WR
   14004ec5a:	rex
   14004ec5b:	add    BYTE PTR [rax],al
   14004ec5e:	add    BYTE PTR [rax],al
   14004ec60:	rex
   14004ec61:	add    eax,DWORD PTR ds:[rax+0x1]
	...
   14004ec6d:	add    BYTE PTR [rax],al
   14004ec6f:	add    BYTE PTR [rsi],ch
   14004ec71:	(bad)  
   14004ec72:	push   r14
   14004ec74:	rex.XB
   14004ec75:	rex.WRX imul r14,QWORD PTR [rbx+0x49],0x6570736e
   14004ec7d:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14004ec81:	outs   dx,BYTE PTR ds:[rsi]
   14004ec82:	rex.RX ins BYTE PTR es:[rdi],dx
   14004ec84:	outs   dx,DWORD PTR ds:[rsi]
   14004ec85:	ja     0x14004ecc7
   14004ec87:	add    BYTE PTR [rax],al
   14004ec8a:	add    BYTE PTR [rax],al
   14004ec8c:	add    BYTE PTR [rax],al
   14004ec8e:	add    BYTE PTR [rax],al
   14004ec90:	rex
   14004ec91:	add    eax,DWORD PTR ds:[rax+0x1]
	...
   14004ec9d:	add    BYTE PTR [rax],al
   14004ec9f:	add    BYTE PTR [rsi],ch
   14004eca1:	(bad)  
   14004eca2:	push   r14
   14004eca4:	rex.WB
   14004eca5:	rex.WRX imul r14,QWORD PTR [rbx+0x49],0x6570736e
   14004ecad:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14004ecb1:	outs   dx,BYTE PTR ds:[rsi]
   14004ecb2:	rex.RX ins BYTE PTR es:[rdi],dx
   14004ecb4:	outs   dx,DWORD PTR ds:[rsi]
   14004ecb5:	ja     0x14004ecf7
   14004ecb7:	add    BYTE PTR [rax],al
   14004ecba:	add    BYTE PTR [rax],al
   14004ecbc:	add    BYTE PTR [rax],al
   14004ecbe:	add    BYTE PTR [rax],al
   14004ecc0:	rex
   14004ecc1:	add    eax,DWORD PTR ds:[rax+0x1]
	...
   14004eccd:	add    BYTE PTR [rax],al
   14004eccf:	add    BYTE PTR [rsi],ch
   14004ecd1:	(bad)  
   14004ecd2:	push   r13
   14004ecd4:	rex.WB
   14004ecd5:	rex.RXB (bad) 
   14004ecd7:	jo     0x14004ed3a
   14004ecd9:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14004ecdb:	jae    0x14004ed4d
   14004ecdd:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14004ece2:	outs   dx,BYTE PTR ds:[rsi]
   14004ece3:	rex.XB (bad) 
   14004ece5:	ins    BYTE PTR es:[rdi],dx
   14004ece6:	ins    BYTE PTR es:[rdi],dx
   14004ece7:	(bad)  
   14004ece9:	movsxd ebp,DWORD PTR [rbx+0x32]
   14004ecec:	rex
   14004eced:	add    BYTE PTR [rax],al
   14004ecf0:	rex
   14004ecf1:	add    eax,DWORD PTR ds:[rax+0x1]
	...
   14004ecfd:	add    BYTE PTR [rax],al
   14004ecff:	add    BYTE PTR [rsi],ch
   14004ed01:	(bad)  
   14004ed02:	push   r13
   14004ed04:	rex.WB
   14004ed05:	rex.RXB (bad) 
   14004ed07:	jo     0x14004ed6a
   14004ed09:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14004ed0b:	jae    0x14004ed7d
   14004ed0d:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14004ed12:	outs   dx,BYTE PTR ds:[rsi]
   14004ed13:	rex.XB (bad) 
   14004ed15:	ins    BYTE PTR es:[rdi],dx
   14004ed16:	ins    BYTE PTR es:[rdi],dx
   14004ed17:	(bad)  
   14004ed19:	movsxd ebp,DWORD PTR [rbx+0x40]
   14004ed1c:	add    BYTE PTR [rax],al
   14004ed1f:	add    BYTE PTR [rax+0x3e],al
   14004ed22:	add    eax,DWORD PTR [rax+0x1]
	...
   14004ed2d:	add    BYTE PTR [rax],al
   14004ed2f:	add    BYTE PTR [rsi],ch
   14004ed31:	(bad)  
   14004ed32:	push   r13
   14004ed34:	rex.WB
   14004ed35:	rex.RXB (bad) 
   14004ed37:	jo     0x14004ed9a
   14004ed39:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14004ed3b:	movsxd esi,DWORD PTR [r9d+ebp*2+0x76]
   14004ed41:	imul   esi,DWORD PTR [rcx+rdi*2+0x43],0x626c6c61
   14004ed49:	(bad)  
   14004ed4a:	movsxd ebp,DWORD PTR [rbx+0x40]
   14004ed4d:	add    BYTE PTR [rax],al
   14004ed50:	rex
   14004ed51:	add    eax,DWORD PTR ds:[rax+0x1]
	...
   14004ed5d:	add    BYTE PTR [rax],al
   14004ed5f:	add    BYTE PTR [rsi],ch
   14004ed61:	(bad)  
   14004ed62:	push   r14
   14004ed64:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14004ed66:	imul   ebp,DWORD PTR [esi+0x65],0x6f666e49
   14004ed6e:	rex
   14004ed6f:	add    BYTE PTR [rax],al
   14004ed72:	add    BYTE PTR [rax],al
   14004ed74:	add    BYTE PTR [rax],al
   14004ed76:	add    BYTE PTR [rax],al
   14004ed78:	rex
   14004ed79:	add    eax,DWORD PTR ds:[rax+0x1]
	...
   14004ed85:	add    BYTE PTR [rax],al
   14004ed87:	add    BYTE PTR [rsi],ch
   14004ed89:	(bad)  
   14004ed8a:	push   r14
   14004ed8c:	rex.XB push r10
   14004ed8e:	gs data16 rex.WRXB (bad) 
   14004ed92:	push   0x65
   14004ed94:	movsxd esi,DWORD PTR [rax+rax*2+0x43]
   14004ed98:	outs   dx,DWORD PTR ds:[rsi]
   14004ed99:	ins    DWORD PTR es:[rdi],dx
   14004ed9a:	ins    DWORD PTR es:[rdi],dx
   14004ed9b:	outs   dx,DWORD PTR ds:[rsi]
   14004ed9c:	outs   dx,BYTE PTR ds:[rsi]
   14004ed9d:	push   rbp
   14004ed9e:	je     0x14004ee09
   14004eda0:	ins    BYTE PTR es:[rdi],dx
   14004eda1:	rex
   14004eda2:	add    BYTE PTR [rax],al
   14004eda5:	add    BYTE PTR [rax],al
   14004eda7:	add    BYTE PTR [rax+0x3e],al
   14004edaa:	add    eax,DWORD PTR [rax+0x1]
	...
   14004edb5:	add    BYTE PTR [rax],al
   14004edb7:	add    BYTE PTR [rsi],ch
   14004edb9:	(bad)  
   14004edba:	push   r14
   14004edbc:	rex.XB
   14004edbd:	rex.WRX imul r14,QWORD PTR [rbx+0x49],0x6f507370
   14004edc5:	ins    BYTE PTR es:[rdi],dx
   14004edc6:	imul   esp,DWORD PTR [rbx+0x79],0x4040
   14004edcd:	add    BYTE PTR [rax],al
   14004edcf:	add    BYTE PTR [rax+0x3e],al
   14004edd2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004eddd:	add    BYTE PTR [rax],al
   14004eddf:	add    BYTE PTR [rsi],ch
   14004ede1:	(bad)  
   14004ede2:	push   r14
   14004ede4:	rex.XB
   14004ede5:	rex.WRX imul r14,QWORD PTR [rbx+0x53],0x616e6769
   14004eded:	je     0x14004ee64
   14004edef:	jb     0x14004ee56
   14004edf1:	push   rax
   14004edf2:	outs   dx,DWORD PTR ds:[rsi]
   14004edf3:	ins    BYTE PTR es:[rdi],dx
   14004edf4:	imul   esp,DWORD PTR [rbx+0x79],0x4040
   14004edfb:	add    BYTE PTR [rax],al
   14004edfd:	add    BYTE PTR [rax],al
   14004edff:	add    BYTE PTR [rax+0x3e],al
   14004ee02:	add    eax,DWORD PTR [rax+0x1]
	...
   14004ee0d:	add    BYTE PTR [rax],al
   14004ee0f:	add    BYTE PTR [rsi],ch
   14004ee11:	(bad)  
   14004ee12:	push   r14
   14004ee14:	rex.XB
   14004ee15:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14004ee17:	ins    DWORD PTR es:[rdi],dx
   14004ee18:	jo     0x14004ee86
   14004ee1a:	gs je  0x14004ee86
   14004ee1d:	outs   dx,DWORD PTR ds:[rsi]
   14004ee1e:	outs   dx,BYTE PTR ds:[rsi]
   14004ee1f:	push   rsp
   14004ee20:	push   0x64616572
   14004ee25:	jae    0x14004ee67
   14004ee27:	add    BYTE PTR [rax],al
   14004ee2a:	add    BYTE PTR [rax],al
   14004ee2c:	add    BYTE PTR [rax],al
   14004ee2e:	add    BYTE PTR [rax],al
   14004ee30:	rex
   14004ee31:	add    eax,DWORD PTR ds:[rax+0x1]
	...
   14004ee3d:	add    BYTE PTR [rax],al
   14004ee3f:	add    BYTE PTR [rsi],ch
   14004ee41:	(bad)  
   14004ee42:	push   r14
   14004ee44:	rex.XB
   14004ee45:	rex.B jae 0x14004eec1
   14004ee48:	outs   dx,BYTE PTR ds:[rsi]
   14004ee49:	movsxd ecx,DWORD PTR [rcx+0x6e]
   14004ee4c:	jae    0x14004eebe
   14004ee4e:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14004ee53:	outs   dx,BYTE PTR ds:[rsi]
   14004ee54:	push   rdi
   14004ee55:	outs   dx,DWORD PTR ds:[rsi]
   14004ee56:	jb     0x14004eec3
   14004ee58:	rex
   14004ee59:	add    BYTE PTR [rax],al
   14004ee5c:	add    BYTE PTR [rax],al
   14004ee5e:	add    BYTE PTR [rax],al
   14004ee60:	rex
   14004ee61:	add    eax,DWORD PTR ds:[rax+0x1]
	...
   14004ee6d:	add    BYTE PTR [rax],al
   14004ee6f:	add    BYTE PTR [rsi],ch
   14004ee71:	(bad)  
   14004ee72:	push   r14
   14004ee74:	rex.XB
   14004ee75:	rex.R jb 0x14004eee1
   14004ee78:	jbe    0x14004eedf
   14004ee7a:	jb     0x14004eec9
   14004ee7c:	jae    0x14004eee5
   14004ee7e:	rex
   14004ee7f:	add    BYTE PTR [rax],al
   14004ee82:	add    BYTE PTR [rax],al
   14004ee84:	add    BYTE PTR [rax],al
   14004ee86:	add    BYTE PTR [rax],al
   14004ee88:	rex
   14004ee89:	add    eax,DWORD PTR ds:[rax+0x1]
	...
   14004ee95:	add    BYTE PTR [rax],al
   14004ee97:	add    BYTE PTR [rsi],ch
   14004ee99:	(bad)  
   14004ee9a:	push   r14
   14004ee9c:	rex.XB
   14004ee9d:	rex.WRX imul r14,QWORD PTR [rbx+0x44],0x63697665
   14004eea5:	gs rex.WRB
   14004eea7:	addr32 jb 0x14004eeea
   14004eeaa:	add    BYTE PTR [rax],al
   14004eead:	add    BYTE PTR [rax],al
   14004eeaf:	add    BYTE PTR [rax+0x3e],al
   14004eeb2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004eebd:	add    BYTE PTR [rax],al
   14004eebf:	add    BYTE PTR [rsi],ch
   14004eec1:	(bad)  
   14004eec2:	push   r14
   14004eec4:	rex.XB
   14004eec5:	rex.WRB jo 0x14004ef1c
   14004eec8:	push   0x64616572
   14004eecd:	push   rax
   14004eece:	outs   dx,DWORD PTR ds:[rsi]
   14004eecf:	outs   dx,DWORD PTR ds:[rsi]
   14004eed0:	ins    BYTE PTR es:[rdi],dx
   14004eed1:	rex.WB je 0x14004ef39
   14004eed4:	ins    DWORD PTR es:[rdi],dx
   14004eed5:	rex.X (bad) 
   14004eed7:	jae    0x14004ef3e
   14004eed9:	rex
   14004eeda:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14004eedc:	ins    DWORD PTR es:[rdi],dx
   14004eedd:	ins    DWORD PTR es:[rdi],dx
   14004eede:	outs   dx,DWORD PTR ds:[rsi]
   14004eedf:	outs   dx,BYTE PTR ds:[rsi]
   14004eee0:	push   rbp
   14004eee1:	je     0x14004ef4c
   14004eee3:	ins    BYTE PTR es:[rdi],dx
   14004eee4:	rex
   14004eee5:	add    BYTE PTR [rax],al
   14004eee8:	rex
   14004eee9:	add    eax,DWORD PTR ds:[rax+0x1]
	...
   14004eef5:	add    BYTE PTR [rax],al
   14004eef7:	add    BYTE PTR [rsi],ch
   14004eef9:	(bad)  
   14004eefa:	push   r14
   14004eefc:	rex.XB
   14004eefd:	rex.WRB jo 0x14004ef4f
   14004ef00:	jbe    0x14004ef67
   14004ef02:	jb     0x14004ef70
   14004ef04:	(bad)  
   14004ef05:	jo     0x14004ef77
   14004ef07:	gs fs rex.X (bad) 
   14004ef0b:	jae    0x14004ef72
   14004ef0d:	rex
   14004ef0e:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14004ef10:	ins    DWORD PTR es:[rdi],dx
   14004ef11:	ins    DWORD PTR es:[rdi],dx
   14004ef12:	outs   dx,DWORD PTR ds:[rsi]
   14004ef13:	outs   dx,BYTE PTR ds:[rsi]
   14004ef14:	push   rbp
   14004ef15:	je     0x14004ef80
   14004ef17:	ins    BYTE PTR es:[rdi],dx
   14004ef18:	rex
   14004ef19:	add    BYTE PTR [rax],al
   14004ef1c:	add    BYTE PTR [rax],al
   14004ef1e:	add    BYTE PTR [rax],al
   14004ef20:	rex
   14004ef21:	add    eax,DWORD PTR ds:[rax+0x1]
	...
   14004ef2d:	add    BYTE PTR [rax],al
   14004ef2f:	add    BYTE PTR [rsi],ch
   14004ef31:	(bad)  
   14004ef32:	push   r14
   14004ef34:	rex.XB
   14004ef35:	rex.WRB jo 0x14004ef87
   14004ef38:	jbe    0x14004ef9f
   14004ef3a:	jb     0x14004efa8
   14004ef3c:	(bad)  
   14004ef3d:	jo     0x14004efaf
   14004ef3f:	gs rex.XB outs dx,DWORD PTR fs:[rsi]
   14004ef43:	ins    DWORD PTR es:[rdi],dx
   14004ef44:	ins    DWORD PTR es:[rdi],dx
   14004ef45:	outs   dx,DWORD PTR ds:[rsi]
   14004ef46:	outs   dx,BYTE PTR ds:[rsi]
   14004ef47:	rex.X (bad) 
   14004ef49:	jae    0x14004efb0
   14004ef4b:	rex
   14004ef4c:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14004ef4e:	ins    DWORD PTR es:[rdi],dx
   14004ef4f:	ins    DWORD PTR es:[rdi],dx
   14004ef50:	outs   dx,DWORD PTR ds:[rsi]
   14004ef51:	outs   dx,BYTE PTR ds:[rsi]
   14004ef52:	push   rbp
   14004ef53:	je     0x14004efbe
   14004ef55:	ins    BYTE PTR es:[rdi],dx
   14004ef56:	rex
   14004ef57:	add    BYTE PTR [rax],al
   14004ef5a:	add    BYTE PTR [rax],al
   14004ef5c:	add    BYTE PTR [rax],al
   14004ef5e:	add    BYTE PTR [rax],al
   14004ef60:	rex
   14004ef61:	add    eax,DWORD PTR ds:[rax+0x1]
	...
   14004ef6d:	add    BYTE PTR [rax],al
   14004ef6f:	add    BYTE PTR [rsi],ch
   14004ef71:	(bad)  
   14004ef72:	push   r14
   14004ef74:	rex.XB
   14004ef75:	rex.WRX imul r14,QWORD PTR [rbx+0x43],0x656e6e6f
   14004ef7d:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14004ef81:	outs   dx,BYTE PTR ds:[rsi]
   14004ef82:	jae    0x14004efd1
   14004ef84:	(bad)  
   14004ef85:	outs   dx,BYTE PTR ds:[rsi]
   14004ef86:	(bad)  
   14004ef87:	addr32 gs jb 0x14004efcb
   14004ef8b:	add    BYTE PTR [rax],al
   14004ef8e:	add    BYTE PTR [rax],al
   14004ef90:	rex
   14004ef91:	add    eax,DWORD PTR ds:[rax+0x1]
	...
   14004ef9d:	add    BYTE PTR [rax],al
   14004ef9f:	add    BYTE PTR [rsi],ch
   14004efa1:	(bad)  
   14004efa2:	push   r14
   14004efa4:	rex.WB
   14004efa5:	rex.WRX imul r14,QWORD PTR [rbx+0x44],0x63697665
   14004efad:	gs rex.WRB
   14004efaf:	addr32 jb 0x14004eff7
   14004efb2:	jbe    0x14004f019
   14004efb4:	outs   dx,BYTE PTR ds:[rsi]
   14004efb5:	je     0x14004f02a
   14004efb7:	rex
   14004efb8:	add    BYTE PTR [rax],al
   14004efbb:	add    BYTE PTR [rax],al
   14004efbd:	add    BYTE PTR [rax],al
   14004efbf:	add    BYTE PTR [rax+0x3e],al
   14004efc2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004efcd:	add    BYTE PTR [rax],al
   14004efcf:	add    BYTE PTR [rsi],ch
   14004efd1:	(bad)  
   14004efd2:	push   r14
   14004efd4:	rex.WB
   14004efd5:	rex.WRX imul r14,QWORD PTR [rbx+0x49],0x7265746e
   14004efdd:	movsxd esp,DWORD PTR [rbp+0x70]
   14004efe0:	je     0x14004f04b
   14004efe2:	outs   dx,DWORD PTR ds:[rsi]
   14004efe3:	outs   dx,BYTE PTR ds:[rsi]
   14004efe4:	push   rax
   14004efe5:	outs   dx,DWORD PTR ds:[rsi]
   14004efe6:	imul   ebp,DWORD PTR [rsi+0x74],0x4040
   14004efed:	add    BYTE PTR [rax],al
   14004efef:	add    BYTE PTR [rax+0x3e],al
   14004eff2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004effd:	add    BYTE PTR [rax],al
   14004efff:	add    BYTE PTR [rsi],ch
   14004f001:	(bad)  
   14004f002:	push   r14
   14004f004:	rex.XB
   14004f005:	rex.WRX imul r14,QWORD PTR [rbx+0x49],0x7265746e
   14004f00d:	movsxd esp,DWORD PTR [rbp+0x70]
   14004f010:	je     0x14004f077
   14004f012:	rex.XB outs dx,DWORD PTR fs:[rsi]
   14004f015:	outs   dx,BYTE PTR ds:[rsi]
   14004f016:	outs   dx,BYTE PTR ds:[rsi]
   14004f017:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14004f01c:	outs   dx,BYTE PTR ds:[rsi]
   14004f01d:	rex
   14004f01e:	add    BYTE PTR [rax+0x3e],al
   14004f022:	add    eax,DWORD PTR [rax+0x1]
	...
   14004f02d:	add    BYTE PTR [rax],al
   14004f02f:	add    BYTE PTR [rsi],ch
   14004f031:	(bad)  
   14004f032:	push   r14
   14004f034:	rex.WB
   14004f035:	rex.WRX imul r14,QWORD PTR [rbx+0x49],0x7265746e
   14004f03d:	movsxd esp,DWORD PTR [rbp+0x70]
   14004f040:	je     0x14004f0ab
   14004f042:	outs   dx,DWORD PTR ds:[rsi]
   14004f043:	outs   dx,BYTE PTR ds:[rsi]
   14004f044:	push   rax
   14004f045:	outs   dx,DWORD PTR ds:[rsi]
   14004f046:	imul   ebp,DWORD PTR [rsi+0x74],0x6e6e6f43
   14004f04d:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14004f052:	outs   dx,BYTE PTR ds:[rsi]
   14004f053:	rex
   14004f054:	add    BYTE PTR [rax],al
   14004f057:	add    BYTE PTR [rax+0x3e],al
   14004f05a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004f065:	add    BYTE PTR [rax],al
   14004f067:	add    BYTE PTR [rsi],ch
   14004f069:	(bad)  
   14004f06a:	push   r14
   14004f06c:	rex.WB
   14004f06d:	rex.WRX imul r14,QWORD PTR [rbx+0x43],0x656e6e6f
   14004f075:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14004f079:	outs   dx,BYTE PTR ds:[rsi]
   14004f07a:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14004f07c:	outs   dx,WORD PTR ds:[rsi]
   14004f07e:	rex
   14004f07f:	add    BYTE PTR [rax],al
   14004f082:	add    BYTE PTR [rax],al
   14004f084:	add    BYTE PTR [rax],al
   14004f086:	add    BYTE PTR [rax],al
   14004f088:	rex
   14004f089:	add    eax,DWORD PTR ds:[rax+0x1]
	...
   14004f095:	add    BYTE PTR [rax],al
   14004f097:	add    BYTE PTR [rsi],ch
   14004f099:	(bad)  
   14004f09a:	push   r13
   14004f09c:	rex.WB push r10
   14004f09e:	gs data16 rex.WRXB (bad) 
   14004f0a2:	push   0x65
   14004f0a4:	movsxd esi,DWORD PTR [rax+rax*2+0x43]
   14004f0a8:	outs   dx,DWORD PTR ds:[rsi]
   14004f0a9:	ins    DWORD PTR es:[rdi],dx
   14004f0aa:	ins    DWORD PTR es:[rdi],dx
   14004f0ab:	outs   dx,DWORD PTR ds:[rsi]
   14004f0ac:	outs   dx,BYTE PTR ds:[rsi]
   14004f0ad:	push   rbp
   14004f0ae:	je     0x14004f119
   14004f0b0:	ins    BYTE PTR es:[rdi],dx
   14004f0b1:	rex
   14004f0b2:	add    BYTE PTR [rax],al
   14004f0b5:	add    BYTE PTR [rax],al
   14004f0b7:	add    BYTE PTR [rax+0x3e],al
   14004f0ba:	add    eax,DWORD PTR [rax+0x1]
	...
   14004f0c5:	add    BYTE PTR [rax],al
   14004f0c7:	add    BYTE PTR [rsi],ch
   14004f0c9:	(bad)  
   14004f0ca:	push   r14
   14004f0cc:	rex.XB
   14004f0cd:	rex.WRX imul r14,QWORD PTR [rbx+0x43],0x656e6e6f
   14004f0d5:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14004f0d9:	outs   dx,BYTE PTR ds:[rsi]
   14004f0da:	rex.RX ins BYTE PTR es:[rdi],dx
   14004f0dc:	outs   dx,DWORD PTR ds:[rsi]
   14004f0dd:	ja     0x14004f11f
   14004f0df:	add    BYTE PTR [rax],al
   14004f0e2:	add    BYTE PTR [rax],al
   14004f0e4:	add    BYTE PTR [rax],al
   14004f0e6:	add    BYTE PTR [rax],al
   14004f0e8:	rex
   14004f0e9:	add    eax,DWORD PTR ds:[rax+0x1]
	...
   14004f0f5:	add    BYTE PTR [rax],al
   14004f0f7:	add    BYTE PTR [rsi],ch
   14004f0f9:	(bad)  
   14004f0fa:	push   r14
   14004f0fc:	rex.WB
   14004f0fd:	rex.WRX imul r14,QWORD PTR [rbx+0x46],0x43776f6c
   14004f105:	outs   dx,DWORD PTR ds:[rsi]
   14004f106:	outs   dx,BYTE PTR ds:[rsi]
   14004f107:	je     0x14004f16e
   14004f109:	js     0x14004f17f
   14004f10b:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14004f10d:	je     0x14004f174
   14004f10f:	jb     0x14004f17f
   14004f111:	(bad)  
   14004f112:	ins    BYTE PTR es:[rdi],dx
   14004f113:	rex
   14004f114:	add    BYTE PTR [rax],al
   14004f117:	add    BYTE PTR [rax+0x3e],al
   14004f11a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004f125:	add    BYTE PTR [rax],al
   14004f127:	add    BYTE PTR [rsi],ch
   14004f129:	(bad)  
   14004f12a:	push   r14
   14004f12c:	rex.WB
   14004f12d:	rex.WRX imul r14,QWORD PTR [rbx+0x49],0x7265746e
   14004f135:	movsxd esp,DWORD PTR [rbp+0x70]
   14004f138:	je     0x14004f1a3
   14004f13a:	outs   dx,DWORD PTR ds:[rsi]
   14004f13b:	outs   dx,BYTE PTR ds:[rsi]
   14004f13c:	rex.XB ins BYTE PTR es:[rdi],dx
   14004f13e:	imul   esp,DWORD PTR [rbp+0x6e],0x6e6f4374
   14004f145:	outs   dx,BYTE PTR ds:[rsi]
   14004f146:	rex.RB jbe 0x14004f1ae
   14004f149:	outs   dx,BYTE PTR ds:[rsi]
   14004f14a:	je     0x14004f1bf
   14004f14c:	rex
   14004f14d:	add    BYTE PTR [rax],al
   14004f150:	rex
   14004f151:	add    eax,DWORD PTR ds:[rax+0x1]
	...
   14004f15d:	add    BYTE PTR [rax],al
   14004f15f:	add    BYTE PTR [rsi],ch
   14004f161:	(bad)  
   14004f162:	push   r14
   14004f164:	rex.WB
   14004f165:	rex.WRX imul r14,QWORD PTR [rbx+0x46],0x43776f6c
   14004f16d:	outs   dx,DWORD PTR ds:[rsi]
   14004f16e:	outs   dx,BYTE PTR ds:[rsi]
   14004f16f:	je     0x14004f1d6
   14004f171:	js     0x14004f1e7
   14004f173:	rex
   14004f174:	add    BYTE PTR [rax],al
   14004f177:	add    BYTE PTR [rax+0x3e],al
   14004f17a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004f185:	add    BYTE PTR [rax],al
   14004f187:	add    BYTE PTR [rsi],ch
   14004f189:	(bad)  
   14004f18a:	push   r14
   14004f18c:	rex.XB
   14004f18d:	rex.WRB jo 0x14004f1dd
   14004f190:	gs jae 0x14004f206
   14004f193:	(bad)  
   14004f194:	addr32 gs push rdx
   14004f197:	gs jo  0x14004f209
   14004f19a:	jb     0x14004f210
   14004f19c:	rex.X ins DWORD PTR es:[rdi],dx
   14004f19e:	rex.R
   14004f19f:	gs je  0x14004f207
   14004f1a2:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14004f1a6:	outs   dx,BYTE PTR ds:[rsi]
   14004f1a7:	jae    0x14004f1e9
   14004f1a9:	rex.WRB jo 0x14004f1f5
   14004f1ac:	jo     0x14004f221
   14004f1ae:	rex
   14004f1af:	add    BYTE PTR [rax],al
   14004f1b2:	add    BYTE PTR [rax],al
   14004f1b4:	add    BYTE PTR [rax],al
   14004f1b6:	add    BYTE PTR [rax],al
   14004f1b8:	rex
   14004f1b9:	add    eax,DWORD PTR ds:[rax+0x1]
	...
   14004f1c5:	add    BYTE PTR [rax],al
   14004f1c7:	add    BYTE PTR [rsi],ch
   14004f1c9:	(bad)  
   14004f1ca:	push   r14
   14004f1cc:	rex.XB
   14004f1cd:	rex.WRB jo 0x14004f21d
   14004f1d0:	gs jae 0x14004f246
   14004f1d3:	(bad)  
   14004f1d4:	addr32 gs push rbx
   14004f1d7:	imul   esp,DWORD PTR [rdi+0x6e],0x72757461
   14004f1de:	gs push rbp
   14004f1e0:	jo     0x14004f246
   14004f1e2:	(bad)  
   14004f1e3:	je     0x14004f24a
   14004f1e5:	rex
   14004f1e6:	rex.WRB jo 0x14004f232
   14004f1e9:	jo     0x14004f25e
   14004f1eb:	rex
   14004f1ec:	add    BYTE PTR [rax],al
   14004f1ef:	add    BYTE PTR [rax+0x3e],al
   14004f1f2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004f1fd:	add    BYTE PTR [rax],al
   14004f1ff:	add    BYTE PTR [rsi],ch
   14004f201:	(bad)  
   14004f202:	push   r14
   14004f204:	rex.XB
   14004f205:	rex.WRB jo 0x14004f255
   14004f208:	gs jae 0x14004f27e
   14004f20b:	(bad)  
   14004f20c:	addr32 gs push rdx
   14004f20f:	gs jo  0x14004f281
   14004f212:	jb     0x14004f288
   14004f214:	push   rsp
   14004f215:	push   0x74616572
   14004f21a:	rex.R
   14004f21b:	gs je  0x14004f283
   14004f21e:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14004f222:	outs   dx,BYTE PTR ds:[rsi]
   14004f223:	rex
   14004f224:	rex.WRB jo 0x14004f270
   14004f227:	jo     0x14004f29c
   14004f229:	rex
   14004f22a:	add    BYTE PTR [rax],al
   14004f22d:	add    BYTE PTR [rax],al
   14004f22f:	add    BYTE PTR [rax+0x3e],al
   14004f232:	add    eax,DWORD PTR [rax+0x1]
	...
   14004f23d:	add    BYTE PTR [rax],al
   14004f23f:	add    BYTE PTR [rsi],ch
   14004f241:	(bad)  
   14004f242:	push   r14
   14004f244:	rex.XB
   14004f245:	rex.WRB jo 0x14004f295
   14004f248:	gs jae 0x14004f2be
   14004f24b:	(bad)  
   14004f24c:	addr32 gs push rbx
   14004f24f:	imul   esp,DWORD PTR [rdi+0x6e],0x72757461
   14004f256:	gs push rbp
   14004f258:	jo     0x14004f2be
   14004f25a:	(bad)  
   14004f25b:	je     0x14004f2c2
   14004f25d:	rex.B jo 0x14004f2d0
   14004f260:	ins    BYTE PTR es:[rdi],dx
   14004f261:	imul   esp,DWORD PTR [rbp+0x64],0x49704d40
   14004f268:	jo     0x14004f2dd
   14004f26a:	rex
   14004f26b:	add    BYTE PTR [rax],al
   14004f26e:	add    BYTE PTR [rax],al
   14004f270:	rex
   14004f271:	add    eax,DWORD PTR ds:[rax+0x1]
	...
   14004f27d:	add    BYTE PTR [rax],al
   14004f27f:	add    BYTE PTR [rsi],ch
   14004f281:	(bad)  
   14004f282:	push   r14
   14004f284:	rex.XB
   14004f285:	rex.WRB jo 0x14004f2d5
   14004f288:	gs jae 0x14004f2fe
   14004f28b:	(bad)  
   14004f28c:	addr32 gs rex.R
   14004f28f:	gs (bad) 
   14004f291:	jne    0x14004f2fa
   14004f293:	rex.WRB
   14004f294:	gs jae 0x14004f30a
   14004f297:	(bad)  
   14004f298:	addr32 gs rex
   14004f29b:	rex.WRB jo 0x14004f2e7
   14004f29e:	jo     0x14004f313
   14004f2a0:	rex
   14004f2a1:	add    BYTE PTR [rax],al
   14004f2a4:	add    BYTE PTR [rax],al
   14004f2a6:	add    BYTE PTR [rax],al
   14004f2a8:	rex
   14004f2a9:	add    eax,DWORD PTR ds:[rax+0x1]
	...
   14004f2b5:	add    BYTE PTR [rax],al
   14004f2b7:	add    BYTE PTR [rsi],ch
   14004f2b9:	(bad)  
   14004f2ba:	push   r14
   14004f2bc:	rex.XB
   14004f2bd:	rex.R
   14004f2be:	gs (bad) 
   14004f2c0:	jne    0x14004f329
   14004f2c2:	rex.WRB
   14004f2c3:	gs jae 0x14004f339
   14004f2c6:	(bad)  
   14004f2c7:	addr32 gs rex.X (bad) 
   14004f2cb:	jae    0x14004f332
   14004f2cd:	rex
   14004f2ce:	rex.WRB jo 0x14004f324
   14004f2d1:	gs jb  0x14004f34a
   14004f2d4:	imul   esp,DWORD PTR [rbx+0x65],0x4040
   14004f2db:	add    BYTE PTR [rax],al
   14004f2dd:	add    BYTE PTR [rax],al
   14004f2df:	add    BYTE PTR [rax+0x3e],al
   14004f2e2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004f2ed:	add    BYTE PTR [rax],al
   14004f2ef:	add    BYTE PTR [rsi],ch
   14004f2f1:	(bad)  
   14004f2f2:	push   r14
   14004f2f4:	rex.XB
   14004f2f5:	rex.WRB jo 0x14004f345
   14004f2f8:	gs jae 0x14004f36e
   14004f2fb:	(bad)  
   14004f2fc:	addr32 gs push rbx
   14004f2ff:	je     0x14004f362
   14004f301:	je     0x14004f378
   14004f303:	jae    0x14004f357
   14004f305:	gs jo  0x14004f377
   14004f308:	jb     0x14004f37e
   14004f30a:	rex
   14004f30b:	rex.WRB jo 0x14004f357
   14004f30e:	jo     0x14004f383
   14004f310:	rex
   14004f311:	add    BYTE PTR [rax],al
	...
   14004f320:	rex
   14004f321:	add    eax,DWORD PTR ds:[rax+0x1]
	...
   14004f32d:	add    BYTE PTR [rax],al
   14004f32f:	add    BYTE PTR [rsi],ch
   14004f331:	(bad)  
   14004f332:	push   r14
   14004f334:	(bad)  
   14004f335:	and    al,0x43
   14004f337:	push   rdx
   14004f338:	gs data16 rex.WRXB (bad) 
   14004f33c:	push   0x65
   14004f33e:	movsxd esi,DWORD PTR [rsi+rax*2+0x6f]
   14004f342:	jb     0x14004f384
   14004f344:	push   rsi
   14004f345:	rex.WB
   14004f346:	rex.WB jo 0x14004f3bc
   14004f349:	rex.WRXB jne 0x14004f3c0
   14004f34c:	outs   dx,DWORD PTR ds:[esi]
   14004f34e:	imul   ebp,DWORD PTR [rsi+0x67],0x7373654d
   14004f355:	(bad)  
   14004f356:	addr32 gs jae 0x14004f39a
   14004f35a:	rex
   14004f35b:	rex
   14004f35c:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14004f35e:	ins    DWORD PTR es:[rdi],dx
   14004f35f:	ins    DWORD PTR es:[rdi],dx
   14004f360:	outs   dx,DWORD PTR ds:[rsi]
   14004f361:	outs   dx,BYTE PTR ds:[rsi]
   14004f362:	push   rbp
   14004f363:	je     0x14004f3ce
   14004f365:	ins    BYTE PTR es:[rdi],dx
   14004f366:	rex
   14004f367:	add    BYTE PTR [rax],al
   14004f36a:	add    BYTE PTR [rax],al
   14004f36c:	add    BYTE PTR [rax],al
   14004f36e:	add    BYTE PTR [rax],al
   14004f370:	rex
   14004f371:	add    eax,DWORD PTR ds:[rax+0x1]
	...
   14004f37d:	add    BYTE PTR [rax],al
   14004f37f:	add    BYTE PTR [rsi],ch
   14004f381:	(bad)  
   14004f382:	push   r14
   14004f384:	rex.XB
   14004f385:	rex.WB jo 0x14004f3fb
   14004f388:	rex.WRB jo 0x14004f3d8
   14004f38b:	gs jae 0x14004f401
   14004f38e:	(bad)  
   14004f38f:	imul   ebp,DWORD PTR [esi+0x67],0x49704d40
   14004f397:	jo     0x14004f40c
   14004f399:	rex
   14004f39a:	add    BYTE PTR [rax],al
   14004f39d:	add    BYTE PTR [rax],al
   14004f39f:	add    BYTE PTR [rax+0x3e],al
   14004f3a2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004f3ad:	add    BYTE PTR [rax],al
   14004f3af:	add    BYTE PTR [rsi],ch
   14004f3b1:	(bad)  
   14004f3b2:	push   r14
   14004f3b4:	rex.WB
   14004f3b5:	rex.WB jo 0x14004f42b
   14004f3b8:	rex.WRXB jne 0x14004f42f
   14004f3bb:	outs   dx,DWORD PTR ds:[esi]
   14004f3bd:	imul   ebp,DWORD PTR [rsi+0x67],0x7373654d
   14004f3c4:	(bad)  
   14004f3c5:	addr32 gs jae 0x14004f409
   14004f3c9:	add    BYTE PTR [rax],al
   14004f3cc:	add    BYTE PTR [rax],al
   14004f3ce:	add    BYTE PTR [rax],al
   14004f3d0:	rex
   14004f3d1:	add    eax,DWORD PTR ds:[rax+0x1]
	...
   14004f3dd:	add    BYTE PTR [rax],al
   14004f3df:	add    BYTE PTR [rsi],ch
   14004f3e1:	(bad)  
   14004f3e2:	push   r14
   14004f3e4:	(bad)  
   14004f3e5:	and    al,0x43
   14004f3e7:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14004f3e9:	ins    DWORD PTR es:[rdi],dx
   14004f3ea:	rex.WRXB (bad) 
   14004f3ec:	push   0x65
   14004f3ee:	movsxd esi,DWORD PTR [rax+rax*2+0x56]
   14004f3f2:	rex.XB
   14004f3f3:	rex.WRX imul r14,QWORD PTR [rbx+0x54],0x6d656c65
   14004f3fb:	gs je  0x14004f470
   14004f3fe:	jns    0x14004f44d
   14004f400:	(bad)  
   14004f401:	outs   dx,BYTE PTR ds:[rsi]
   14004f402:	(bad)  
   14004f403:	addr32 gs jb 0x14004f447
   14004f407:	rex
   14004f408:	rex
   14004f409:	push   r12
   14004f40b:	rex.WR
   14004f40c:	rex
   14004f40d:	add    BYTE PTR [rax],al
   14004f410:	rex
   14004f411:	add    eax,DWORD PTR ds:[rax+0x1]
	...
   14004f41d:	add    BYTE PTR [rax],al
   14004f41f:	add    BYTE PTR [rsi],ch
   14004f421:	(bad)  
   14004f422:	push   r14
   14004f424:	rex.XB
   14004f425:	rex.WRX imul r14,QWORD PTR [rbx+0x54],0x6d656c65
   14004f42d:	gs je  0x14004f4a2
   14004f430:	jns    0x14004f47f
   14004f432:	(bad)  
   14004f433:	outs   dx,BYTE PTR ds:[rsi]
   14004f434:	(bad)  
   14004f435:	addr32 gs jb 0x14004f479
   14004f439:	add    BYTE PTR [rax],al
   14004f43c:	add    BYTE PTR [rax],al
   14004f43e:	add    BYTE PTR [rax],al
   14004f440:	rex
   14004f441:	add    eax,DWORD PTR ds:[rax+0x1]
	...
   14004f44d:	add    BYTE PTR [rax],al
   14004f44f:	add    BYTE PTR [rsi],ch
   14004f451:	(bad)  
   14004f452:	push   r14
   14004f454:	rex.XB push r11
   14004f456:	jo     0x14004f4d1
   14004f458:	rex.WRX
   14004f459:	gs je  0x14004f4ae
   14004f45c:	gs jo  0x14004f4ce
   14004f45f:	jb     0x14004f4d5
   14004f461:	push   rbx
   14004f462:	outs   dx,BYTE PTR gs:[rsi]
   14004f464:	fs gs jb 0x14004f4a8
   14004f468:	add    BYTE PTR [rax],al
   14004f46b:	add    BYTE PTR [rax],al
   14004f46d:	add    BYTE PTR [rax],al
   14004f46f:	add    BYTE PTR [rax+0x3e],al
   14004f472:	add    eax,DWORD PTR [rax+0x1]
	...
   14004f47d:	add    BYTE PTR [rax],al
   14004f47f:	add    BYTE PTR [rsi],ch
   14004f481:	(bad)  
   14004f482:	push   r13
   14004f484:	rex.WB
   14004f485:	rex.RXB (bad) 
   14004f487:	jo     0x14004f4ea
   14004f489:	push   rsp
   14004f48a:	gs ins BYTE PTR es:[rdi],dx
   14004f48c:	gs ins DWORD PTR es:[rdi],dx
   14004f48e:	gs je  0x14004f503
   14004f491:	jns    0x14004f4e6
   14004f493:	outs   dx,BYTE PTR gs:[rsi]
   14004f495:	fs gs jb 0x14004f4d9
   14004f499:	add    BYTE PTR [rax],al
   14004f49c:	add    BYTE PTR [rax],al
   14004f49e:	add    BYTE PTR [rax],al
   14004f4a0:	rex
   14004f4a1:	add    eax,DWORD PTR ds:[rax+0x1]
	...
   14004f4ad:	add    BYTE PTR [rax],al
   14004f4af:	add    BYTE PTR [rsi],ch
   14004f4b1:	(bad)  
   14004f4b2:	push   r14
   14004f4b4:	rex.XB push r11
   14004f4b6:	jo     0x14004f531
   14004f4b8:	rex.WRX
   14004f4b9:	gs je  0x14004f4ff
   14004f4bc:	ins    BYTE PTR es:[rdi],dx
   14004f4bd:	imul   esp,DWORD PTR [rbp+0x6e],0x404074
   14004f4c4:	add    BYTE PTR [rax],al
   14004f4c6:	add    BYTE PTR [rax],al
   14004f4c8:	rex
   14004f4c9:	add    eax,DWORD PTR ds:[rax+0x1]
	...
   14004f4d5:	add    BYTE PTR [rax],al
   14004f4d7:	add    BYTE PTR [rsi],ch
   14004f4d9:	(bad)  
   14004f4da:	push   r14
   14004f4dc:	rex.XB
   14004f4dd:	rex.WRB jo 0x14004f533
   14004f4e0:	push   0x65747475
   14004f4e5:	jb     0x14004f527
   14004f4e7:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14004f4e9:	ins    DWORD PTR es:[rdi],dx
   14004f4ea:	ins    DWORD PTR es:[rdi],dx
   14004f4eb:	outs   dx,DWORD PTR ds:[rsi]
   14004f4ec:	outs   dx,BYTE PTR ds:[rsi]
   14004f4ed:	push   rbp
   14004f4ee:	je     0x14004f559
   14004f4f0:	ins    BYTE PTR es:[rdi],dx
   14004f4f1:	rex
   14004f4f2:	add    BYTE PTR [rax],al
   14004f4f5:	add    BYTE PTR [rax],al
   14004f4f7:	add    BYTE PTR [rax+0x3e],al
   14004f4fa:	add    eax,DWORD PTR [rax+0x1]
	...
   14004f505:	add    BYTE PTR [rax],al
   14004f507:	add    BYTE PTR [rsi],ch
   14004f509:	(bad)  
   14004f50a:	push   r14
   14004f50c:	rex.XB
   14004f50d:	rex.WRB jo 0x14004f563
   14004f510:	push   0x65747475
   14004f515:	jb     0x14004f56e
   14004f517:	(bad)  
   14004f518:	imul   esi,DWORD PTR [rax+rax*2+0x43],0x6f6d6d6f
   14004f520:	outs   dx,BYTE PTR ds:[rsi]
   14004f521:	push   rbp
   14004f522:	je     0x14004f58d
   14004f524:	ins    BYTE PTR es:[rdi],dx
   14004f525:	rex
   14004f526:	add    BYTE PTR [rax+0x3e],al
   14004f52a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004f535:	add    BYTE PTR [rax],al
   14004f537:	add    BYTE PTR [rsi],ch
   14004f539:	(bad)  
   14004f53a:	push   r14
   14004f53c:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
   14004f543:	pop    rdi
   14004f544:	(bad)  
   14004f545:	jb     0x14004f5ae
   14004f547:	jne    0x14004f5b6
   14004f549:	outs   dx,BYTE PTR gs:[rsi]
   14004f54b:	je     0x14004f58d
   14004f54d:	jae    0x14004f5c3
   14004f54f:	fs rex
   14004f551:	add    BYTE PTR [rax],al
   14004f554:	add    BYTE PTR [rax],al
   14004f556:	add    BYTE PTR [rax],al
   14004f558:	rex
   14004f559:	add    eax,DWORD PTR ds:[rax+0x1]
	...
   14004f565:	add    BYTE PTR [rax],al
   14004f567:	add    BYTE PTR [rsi],ch
   14004f569:	(bad)  
   14004f56a:	push   r14
   14004f56c:	outs   dx,DWORD PTR ds:[rsi]
   14004f56d:	jne    0x14004f5e3
   14004f56f:	pop    rdi
   14004f570:	outs   dx,DWORD PTR ds:[rsi]
   14004f571:	pop    di
   14004f573:	jb     0x14004f5d6
   14004f575:	outs   dx,BYTE PTR ds:[rsi]
   14004f576:	addr32 gs rex jae 0x14004f5ef
   14004f57b:	fs rex
   14004f57d:	add    BYTE PTR [rax],al
   14004f580:	rex
   14004f581:	add    eax,DWORD PTR ds:[rax+0x1]
	...
   14004f58d:	add    BYTE PTR [rax],al
   14004f58f:	add    BYTE PTR [rsi],ch
   14004f591:	(bad)  
   14004f592:	push   r14
   14004f594:	rex.XB
   14004f595:	rex.W push rdx
   14004f597:	gs jae 0x14004f60f
   14004f59a:	ins    BYTE PTR es:[rdi],dx
   14004f59b:	je     0x14004f5e2
   14004f59d:	js     0x14004f602
   14004f59f:	gs jo  0x14004f616
   14004f5a2:	imul   ebp,DWORD PTR [rdi+0x6e],0x6d6f4340
   14004f5a9:	ins    DWORD PTR es:[rdi],dx
   14004f5aa:	outs   dx,DWORD PTR ds:[rsi]
   14004f5ab:	outs   dx,BYTE PTR ds:[rsi]
   14004f5ac:	push   rbp
   14004f5ad:	je     0x14004f618
   14004f5af:	ins    BYTE PTR es:[rdi],dx
   14004f5b0:	rex
   14004f5b1:	add    BYTE PTR [rax],al
   14004f5b4:	add    BYTE PTR [rax],al
   14004f5b6:	add    BYTE PTR [rax],al
   14004f5b8:	rex
   14004f5b9:	add    eax,DWORD PTR ds:[rax+0x1]
	...
   14004f5c5:	add    BYTE PTR [rax],al
   14004f5c7:	add    BYTE PTR [rsi],ch
   14004f5c9:	(bad)  
   14004f5ca:	push   r14
   14004f5cc:	rex.XB
   14004f5cd:	rex.W push rdx
   14004f5cf:	gs jae 0x14004f647
   14004f5d2:	ins    BYTE PTR es:[rdi],dx
   14004f5d3:	je     0x14004f61a
   14004f5d5:	js     0x14004f63a
   14004f5d7:	gs jo  0x14004f64e
   14004f5da:	imul   ebp,DWORD PTR [rdi+0x6e],0x6c706d49
   14004f5e1:	rex
   14004f5e2:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14004f5e4:	ins    DWORD PTR es:[rdi],dx
   14004f5e5:	ins    DWORD PTR es:[rdi],dx
   14004f5e6:	outs   dx,DWORD PTR ds:[rsi]
   14004f5e7:	outs   dx,BYTE PTR ds:[rsi]
   14004f5e8:	push   rbp
   14004f5e9:	je     0x14004f654
   14004f5eb:	ins    BYTE PTR es:[rdi],dx
   14004f5ec:	rex
   14004f5ed:	add    BYTE PTR [rax],al
   14004f5f0:	rex
   14004f5f1:	add    eax,DWORD PTR ds:[rax+0x1]
	...
   14004f5fd:	add    BYTE PTR [rax],al
   14004f5ff:	add    BYTE PTR [rsi],ch
   14004f601:	(bad)  
   14004f602:	push   r14
   14004f604:	rex.XB
   14004f605:	rex.WRB jo 0x14004f657
   14004f608:	jbe    0x14004f66f
   14004f60a:	jb     0x14004f678
   14004f60c:	(bad)  
   14004f60d:	jo     0x14004f67f
   14004f60f:	gs imul r14,QWORD PTR fs:[rbx+0x74],0x6d6f4340
   14004f619:	ins    DWORD PTR es:[rdi],dx
   14004f61a:	outs   dx,DWORD PTR ds:[rsi]
   14004f61b:	outs   dx,BYTE PTR ds:[rsi]
   14004f61c:	push   rbp
   14004f61d:	je     0x14004f688
   14004f61f:	ins    BYTE PTR es:[rdi],dx
   14004f620:	rex
   14004f621:	add    BYTE PTR [rax],al
   14004f624:	add    BYTE PTR [rax],al
   14004f626:	add    BYTE PTR [rax],al
   14004f628:	rex
   14004f629:	add    eax,DWORD PTR ds:[rax+0x1]
	...
   14004f635:	add    BYTE PTR [rax],al
   14004f637:	add    BYTE PTR [rsi],ch
   14004f639:	(bad)  
   14004f63a:	push   r13
   14004f63c:	rex.WB
   14004f63d:	rex.WRB jo 0x14004f68f
   14004f640:	jbe    0x14004f6a7
   14004f642:	jb     0x14004f6b0
   14004f644:	(bad)  
   14004f645:	jo     0x14004f6b7
   14004f647:	gs imul r14,QWORD PTR fs:[rbx+0x74],0x6d6f4340
   14004f651:	ins    DWORD PTR es:[rdi],dx
   14004f652:	outs   dx,DWORD PTR ds:[rsi]
   14004f653:	outs   dx,BYTE PTR ds:[rsi]
   14004f654:	push   rbp
   14004f655:	je     0x14004f6c0
   14004f657:	ins    BYTE PTR es:[rdi],dx
   14004f658:	rex
   14004f659:	add    BYTE PTR [rax],al
   14004f65c:	add    BYTE PTR [rax],al
   14004f65e:	add    BYTE PTR [rax],al
   14004f660:	rex
   14004f661:	add    eax,DWORD PTR ds:[rax+0x1]
	...
   14004f66d:	add    BYTE PTR [rax],al
   14004f66f:	add    BYTE PTR [rsi],ch
   14004f671:	(bad)  
   14004f672:	push   r14
   14004f674:	(bad)  
   14004f675:	and    al,0x43
   14004f677:	push   rdx
   14004f678:	gs data16 rex.WRXB (bad) 
   14004f67c:	push   0x65
   14004f67e:	movsxd esi,DWORD PTR [rsi+rax*2+0x6f]
   14004f682:	jb     0x14004f6c4
   14004f684:	push   rbp
   14004f685:	rex.WB
   14004f686:	rex.WRB jo 0x14004f6d8
   14004f689:	jbe    0x14004f6f0
   14004f68b:	jb     0x14004f6f9
   14004f68d:	(bad)  
   14004f68e:	jo     0x14004f700
   14004f690:	gs imul r14,QWORD PTR fs:[rbx+0x74],0x6d6f4340
   14004f69a:	ins    DWORD PTR es:[rdi],dx
   14004f69b:	outs   dx,DWORD PTR ds:[rsi]
   14004f69c:	outs   dx,BYTE PTR ds:[rsi]
   14004f69d:	push   rbp
   14004f69e:	je     0x14004f709
   14004f6a0:	ins    BYTE PTR es:[rdi],dx
   14004f6a1:	rex
   14004f6a2:	rex
   14004f6a3:	rex
   14004f6a4:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14004f6a6:	ins    DWORD PTR es:[rdi],dx
   14004f6a7:	ins    DWORD PTR es:[rdi],dx
   14004f6a8:	outs   dx,DWORD PTR ds:[rsi]
   14004f6a9:	outs   dx,BYTE PTR ds:[rsi]
   14004f6aa:	push   rbp
   14004f6ab:	je     0x14004f716
   14004f6ad:	ins    BYTE PTR es:[rdi],dx
   14004f6ae:	rex
   14004f6af:	add    BYTE PTR [rax],al
	...
   14004f6be:	add    BYTE PTR [rax],al
   14004f6c0:	rex
   14004f6c1:	add    eax,DWORD PTR ds:[rax+0x1]
	...
   14004f6cd:	add    BYTE PTR [rax],al
   14004f6cf:	add    BYTE PTR [rsi],ch
   14004f6d1:	(bad)  
   14004f6d2:	push   r14
   14004f6d4:	(bad)  
   14004f6d5:	and    al,0x43
   14004f6d7:	push   rdx
   14004f6d8:	gs data16 rex.WRXB (bad) 
   14004f6dc:	push   0x65
   14004f6de:	movsxd esi,DWORD PTR [rsi+rax*2+0x6f]
   14004f6e2:	jb     0x14004f724
   14004f6e4:	push   rbp
   14004f6e5:	(bad)  
   14004f6e6:	and    al,0x49
   14004f6e8:	rex.RX outs dx,DWORD PTR ds:[rsi]
   14004f6ea:	jb     0x14004f763
   14004f6ec:	(bad)  
   14004f6ed:	jb     0x14004f753
   14004f6ef:	rex.WB je 0x14004f757
   14004f6f2:	jb     0x14004f755
   14004f6f4:	je     0x14004f765
   14004f6f6:	jb     0x14004f738
   14004f6f8:	and    al,0x24
   14004f6fa:	rex.XB
   14004f6fb:	rex.X
   14004f6fc:	rex.RXB
   14004f6fd:	rex
   14004f6fe:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14004f700:	ins    DWORD PTR es:[rdi],dx
   14004f701:	ins    DWORD PTR es:[rdi],dx
   14004f702:	outs   dx,DWORD PTR ds:[rsi]
   14004f703:	outs   dx,BYTE PTR ds:[rsi]
   14004f704:	push   rbp
   14004f705:	je     0x14004f770
   14004f707:	ins    BYTE PTR es:[rdi],dx
   14004f708:	rex
   14004f709:	rex
   14004f70a:	rex
   14004f70b:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14004f70d:	ins    DWORD PTR es:[rdi],dx
   14004f70e:	ins    DWORD PTR es:[rdi],dx
   14004f70f:	outs   dx,DWORD PTR ds:[rsi]
   14004f710:	outs   dx,BYTE PTR ds:[rsi]
   14004f711:	push   rbp
   14004f712:	je     0x14004f77d
   14004f714:	ins    BYTE PTR es:[rdi],dx
   14004f715:	rex
   14004f716:	add    BYTE PTR [rax+0x3e],al
   14004f71a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004f725:	add    BYTE PTR [rax],al
   14004f727:	add    BYTE PTR [rsi],ch
   14004f729:	(bad)  
   14004f72a:	push   r14
   14004f72c:	rex.XB
   14004f72d:	rex.B jb 0x14004f797
   14004f730:	jbe    0x14004f77b
   14004f732:	je     0x14004f799
   14004f734:	jb     0x14004f776
   14004f736:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14004f738:	ins    DWORD PTR es:[rdi],dx
   14004f739:	ins    DWORD PTR es:[rdi],dx
   14004f73a:	outs   dx,DWORD PTR ds:[rsi]
   14004f73b:	outs   dx,BYTE PTR ds:[rsi]
   14004f73c:	push   rbp
   14004f73d:	je     0x14004f7a8
   14004f73f:	ins    BYTE PTR es:[rdi],dx
   14004f740:	rex
   14004f741:	add    BYTE PTR [rax],al
	...
   14004f750:	rex
   14004f751:	add    eax,DWORD PTR ds:[rax+0x1]
	...
   14004f75d:	add    BYTE PTR [rax],al
   14004f75f:	add    BYTE PTR [rsi],ch
   14004f761:	(bad)  
   14004f762:	push   r14
   14004f764:	rex.XB push r11
   14004f766:	imul   ebp,DWORD PTR [rbp+0x70],0x614d656c
   14004f76d:	jo     0x14004f7b8
   14004f76f:	je     0x14004f7d6
   14004f771:	ins    DWORD PTR es:[rdi],dx
   14004f772:	rex
   14004f773:	rex.XB
   14004f774:	rex.XB ins DWORD PTR es:[rdi],dx
   14004f776:	fs rex.WRXB jo 0x14004f7ee
   14004f77a:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f6f4c73
   14004f781:	imul   esi,DWORD PTR [rbp+0x70],0x4d
   14004f785:	(bad)  
   14004f786:	jo     0x14004f7c8
   14004f788:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14004f78a:	ins    DWORD PTR es:[rdi],dx
   14004f78b:	ins    DWORD PTR es:[rdi],dx
   14004f78c:	outs   dx,DWORD PTR ds:[rsi]
   14004f78d:	outs   dx,BYTE PTR ds:[rsi]
   14004f78e:	push   rbp
   14004f78f:	je     0x14004f7fa
   14004f791:	ins    BYTE PTR es:[rdi],dx
   14004f792:	rex
   14004f793:	add    BYTE PTR [rax],al
	...
   14004f79e:	add    BYTE PTR [rax],al
   14004f7a0:	rex
   14004f7a1:	add    eax,DWORD PTR ds:[rax+0x1]
	...
   14004f7ad:	add    BYTE PTR [rax],al
   14004f7af:	add    BYTE PTR [rsi],ch
   14004f7b1:	(bad)  
   14004f7b2:	push   r14
   14004f7b4:	(bad)  
   14004f7b5:	and    al,0x43
   14004f7b7:	push   rdx
   14004f7b8:	gs data16 rex.WRXB (bad) 
   14004f7bc:	push   0x65
   14004f7be:	movsxd esi,DWORD PTR [rsi+rax*2+0x6f]
   14004f7c2:	jb     0x14004f804
   14004f7c4:	push   rbp
   14004f7c5:	rex.WB
   14004f7c6:	rex.XB ins DWORD PTR es:[rdi],dx
   14004f7c8:	fs rex.WRXB jo 0x14004f840
   14004f7cc:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f6f4c73
   14004f7d3:	imul   esi,DWORD PTR [rbp+0x70],0x40
   14004f7d7:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14004f7d9:	ins    DWORD PTR es:[rdi],dx
   14004f7da:	ins    DWORD PTR es:[rdi],dx
   14004f7db:	outs   dx,DWORD PTR ds:[rsi]
   14004f7dc:	outs   dx,BYTE PTR ds:[rsi]
   14004f7dd:	push   rbp
   14004f7de:	je     0x14004f849
   14004f7e0:	ins    BYTE PTR es:[rdi],dx
   14004f7e1:	rex
   14004f7e2:	rex
   14004f7e3:	rex
   14004f7e4:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14004f7e6:	ins    DWORD PTR es:[rdi],dx
   14004f7e7:	ins    DWORD PTR es:[rdi],dx
   14004f7e8:	outs   dx,DWORD PTR ds:[rsi]
   14004f7e9:	outs   dx,BYTE PTR ds:[rsi]
   14004f7ea:	push   rbp
   14004f7eb:	je     0x14004f856
   14004f7ed:	ins    BYTE PTR es:[rdi],dx
   14004f7ee:	rex
   14004f7ef:	add    BYTE PTR [rax],al
   14004f7f2:	add    BYTE PTR [rax],al
   14004f7f4:	add    BYTE PTR [rax],al
   14004f7f6:	add    BYTE PTR [rax],al
   14004f7f8:	rex
   14004f7f9:	add    eax,DWORD PTR ds:[rax+0x1]
	...
   14004f805:	add    BYTE PTR [rax],al
   14004f807:	add    BYTE PTR [rsi],ch
   14004f809:	(bad)  
   14004f80a:	push   r13
   14004f80c:	(bad)  
   14004f80d:	and    al,0x49
   14004f80f:	push   rbx
   14004f810:	imul   ebp,DWORD PTR [rbp+0x70],0x7449656c
   14004f817:	gs jb  0x14004f87b
   14004f81a:	je     0x14004f88b
   14004f81c:	jb     0x14004f85e
   14004f81e:	and    al,0x24
   14004f820:	rex.XB
   14004f821:	rex.X
   14004f822:	rex.RXB
   14004f823:	rex
   14004f824:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14004f826:	ins    DWORD PTR es:[rdi],dx
   14004f827:	ins    DWORD PTR es:[rdi],dx
   14004f828:	outs   dx,DWORD PTR ds:[rsi]
   14004f829:	outs   dx,BYTE PTR ds:[rsi]
   14004f82a:	push   rbp
   14004f82b:	je     0x14004f896
   14004f82d:	ins    BYTE PTR es:[rdi],dx
   14004f82e:	rex
   14004f82f:	add    BYTE PTR [rax],al
   14004f832:	add    BYTE PTR [rax],al
   14004f834:	add    BYTE PTR [rax],al
   14004f836:	add    BYTE PTR [rax],al
   14004f838:	rex
   14004f839:	add    eax,DWORD PTR ds:[rax+0x1]
	...
   14004f845:	add    BYTE PTR [rax],al
   14004f847:	add    BYTE PTR [rsi],ch
   14004f849:	(bad)  
   14004f84a:	push   r13
   14004f84c:	(bad)  
   14004f84d:	and    al,0x49
   14004f84f:	rex.RX outs dx,DWORD PTR ds:[rsi]
   14004f851:	jb     0x14004f8ca
   14004f853:	(bad)  
   14004f854:	jb     0x14004f8ba
   14004f856:	rex.WB je 0x14004f8be
   14004f859:	jb     0x14004f8bc
   14004f85b:	je     0x14004f8cc
   14004f85d:	jb     0x14004f89f
   14004f85f:	and    al,0x24
   14004f861:	rex.XB
   14004f862:	rex.X
   14004f863:	rex.RXB
   14004f864:	rex
   14004f865:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14004f867:	ins    DWORD PTR es:[rdi],dx
   14004f868:	ins    DWORD PTR es:[rdi],dx
   14004f869:	outs   dx,DWORD PTR ds:[rsi]
   14004f86a:	outs   dx,BYTE PTR ds:[rsi]
   14004f86b:	push   rbp
   14004f86c:	je     0x14004f8d7
   14004f86e:	ins    BYTE PTR es:[rdi],dx
   14004f86f:	rex
   14004f870:	add    BYTE PTR [rax],al
   14004f873:	add    BYTE PTR [rax],al
   14004f875:	add    BYTE PTR [rax],al
   14004f877:	add    BYTE PTR [rax+0x3e],al
   14004f87a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004f885:	add    BYTE PTR [rax],al
   14004f887:	add    BYTE PTR [rsi],ch
   14004f889:	(bad)  
   14004f88a:	push   r13
   14004f88c:	rex.WB
   14004f88d:	rex.XB ins DWORD PTR es:[rdi],dx
   14004f88f:	fs rex.WRXB jo 0x14004f907
   14004f893:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f6f4c73
   14004f89a:	imul   esi,DWORD PTR [rbp+0x70],0x40
   14004f89e:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14004f8a0:	ins    DWORD PTR es:[rdi],dx
   14004f8a1:	ins    DWORD PTR es:[rdi],dx
   14004f8a2:	outs   dx,DWORD PTR ds:[rsi]
   14004f8a3:	outs   dx,BYTE PTR ds:[rsi]
   14004f8a4:	push   rbp
   14004f8a5:	je     0x14004f910
   14004f8a7:	ins    BYTE PTR es:[rdi],dx
   14004f8a8:	rex
   14004f8a9:	add    BYTE PTR [rax],al
   14004f8ac:	add    BYTE PTR [rax],al
   14004f8ae:	add    BYTE PTR [rax],al
   14004f8b0:	rex
   14004f8b1:	add    eax,DWORD PTR ds:[rax+0x1]
	...
   14004f8bd:	add    BYTE PTR [rax],al
   14004f8bf:	add    BYTE PTR [rsi],ch
   14004f8c1:	(bad)  
   14004f8c2:	push   r14
   14004f8c4:	rex.XB
   14004f8c5:	rex.XB ins DWORD PTR es:[rdi],dx
   14004f8c7:	fs rex.WRXB jo 0x14004f93f
   14004f8cb:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f6f4c73
   14004f8d2:	imul   esi,DWORD PTR [rbp+0x70],0x4d
   14004f8d6:	(bad)  
   14004f8d7:	jo     0x14004f919
   14004f8d9:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14004f8db:	ins    DWORD PTR es:[rdi],dx
   14004f8dc:	ins    DWORD PTR es:[rdi],dx
   14004f8dd:	outs   dx,DWORD PTR ds:[rsi]
   14004f8de:	outs   dx,BYTE PTR ds:[rsi]
   14004f8df:	push   rbp
   14004f8e0:	je     0x14004f94b
   14004f8e2:	ins    BYTE PTR es:[rdi],dx
   14004f8e3:	rex
   14004f8e4:	add    BYTE PTR [rax],al
	...

Disassembly of section .pdata:

0000000140051000 <.pdata>:
   140051000:	xor    BYTE PTR [rax],dl
   140051002:	add    BYTE PTR [rax],al
   140051004:	mov    ebx,0xb4000010
   140051009:	(bad)  
   14005100a:	add    al,0x0
   14005100c:	lock adc BYTE PTR [rax],al
   14005100f:	add    BYTE PTR [rbx+0x4000011],cl
   140051015:	and    eax,0x11900004
   14005101a:	add    BYTE PTR [rax],al
   14005101c:	(bad)  
   14005101d:	adc    al,BYTE PTR [rax]
   14005101f:	add    BYTE PTR [rax],dh
   140051021:	(bad)  
   140051022:	add    al,0x0
   140051024:	xor    BYTE PTR [rdx],dl
   140051026:	add    BYTE PTR [rax],al
   140051028:	pushf  
   140051029:	adc    al,BYTE PTR [rax]
   14005102b:	add    BYTE PTR [rdi+rbx*1+0x13300004],dh
   140051032:	add    BYTE PTR [rax],al
   140051034:	push   rax
   140051035:	adc    eax,DWORD PTR [rax]
   140051037:	add    BYTE PTR [rdi+rbx*1+0x13800004],dh
   14005103e:	add    BYTE PTR [rax],al
   140051040:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140051041:	adc    eax,DWORD PTR [rax]
   140051043:	add    BYTE PTR [rax],dh
   140051045:	(bad)  
   140051046:	add    al,0x0
   140051048:	rcl    BYTE PTR [rbx],1
   14005104a:	add    BYTE PTR [rax],al
   14005104c:	cmp    dl,BYTE PTR [rax+rax*1]
   14005104f:	add    BYTE PTR [rax],bh
   140051051:	(bad)  
   140051052:	add    al,0x0
   140051054:	jo     0x14005106a
   140051056:	add    BYTE PTR [rax],al
   140051058:	rcl    DWORD PTR [rax+rax*1],cl
   14005105b:	add    BYTE PTR [rdi+rbx*1+0x4],cl
   14005105f:	add    al,dh
   140051061:	adc    al,0x0
   140051063:	add    BYTE PTR [rsi],dh
   140051065:	adc    eax,0x1f580000
   14005106a:	add    al,0x0
   14005106c:	push   rax
   14005106d:	adc    eax,0x15b30000
   140051072:	add    BYTE PTR [rax],al
   140051074:	rex.WR (bad) 
   140051076:	add    al,0x0
   140051078:	rcl    BYTE PTR [rip+0x15ff0000],0x0        # 0x15604107f
   14005107f:	add    BYTE PTR [rax+0x1f],ah
   140051082:	add    al,0x0
   140051084:	adc    BYTE PTR [rsi],dl
   140051086:	add    BYTE PTR [rax],al
   140051088:	jae    0x1400510a1
   14005108a:	add    BYTE PTR [rax],al
   14005108c:	ins    BYTE PTR es:[rdi],dx
   14005108d:	(bad)  
   14005108e:	add    al,0x0
   140051090:	adc    BYTE PTR [rdi],0x0
   140051093:	add    BYTE PTR [rdx+0x60000018],dh
   140051099:	(bad)  
   14005109a:	add    al,0x0
   14005109c:	rcr    BYTE PTR [rax],0x0
   14005109f:	add    BYTE PTR [rbx-0x7bffffe6],dh
   1400510a5:	(bad)  
   1400510a6:	add    al,0x0
   1400510a8:	mov    esp,0x1500001a
   1400510ad:	sbb    eax,DWORD PTR [rax]
   1400510af:	add    BYTE PTR [rdi+rbx*1+0x1b1c0004],ah
   1400510b6:	add    BYTE PTR [rax],al
   1400510b8:	sbb    BYTE PTR [rax+rax*1],bl
   1400510bb:	add    BYTE PTR [rdi+rbx*1+0x1c200004],ah
   1400510c2:	add    BYTE PTR [rax],al
   1400510c4:	xor    DWORD PTR [rax+rax*1],ebx
   1400510c7:	add    BYTE PTR [rdi+rbx*1+0x1c380004],dh
   1400510ce:	add    BYTE PTR [rax],al
   1400510d0:	rex.RX sbb eax,0x1fbc0000
   1400510d6:	add    al,0x0
   1400510d8:	rex.WR sbb rax,0x1d5d0000
   1400510de:	add    BYTE PTR [rax],al
   1400510e0:	mov    ah,0x1f
   1400510e2:	add    al,0x0
   1400510e4:	fs sbb eax,0x1df90000
   1400510ea:	add    BYTE PTR [rax],al
   1400510ec:	(bad)  
   1400510ed:	(bad)  
   1400510ee:	add    al,0x0
   1400510f0:	add    BYTE PTR [rsi],bl
   1400510f2:	add    BYTE PTR [rax],al
   1400510f4:	add    BYTE PTR [rdi],bl
   1400510f6:	add    BYTE PTR [rax],al
   1400510f8:	rcr    BYTE PTR [rdi],1
   1400510fa:	add    al,0x0
   1400510fc:	or     BYTE PTR [rdi],bl
   1400510fe:	add    BYTE PTR [rax],al
   140051100:	es (bad) 
   140051102:	add    BYTE PTR [rax],al
   140051104:	mov    al,0x20
   140051106:	add    al,0x0
   140051108:	sub    al,0x1f
   14005110a:	add    BYTE PTR [rax],al
   14005110c:	addr32 (bad) 
   14005110e:	add    BYTE PTR [rax],al
   140051110:	mov    eax,0x70000420
   140051115:	(bad)  
   140051116:	add    BYTE PTR [rax],al
   140051118:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140051119:	(bad)  
   14005111a:	add    BYTE PTR [rax],al
   14005111c:	mov    eax,0xac000420
   140051121:	(bad)  
   140051122:	add    BYTE PTR [rax],al
   140051124:	(bad)  
   140051125:	(bad)  
   140051126:	add    BYTE PTR [rax],al
   140051128:	xor    BYTE PTR [rdi],bl
   14005112a:	add    al,0x0
   14005112c:	(bad)  
   14005112d:	(bad)  
   14005112e:	add    BYTE PTR [rax],al
   140051130:	xor    esp,DWORD PTR [rax]
   140051132:	add    BYTE PTR [rax],al
   140051134:	pop    rax
   140051135:	(bad)  
   140051136:	add    al,0x0
   140051138:	cmp    al,0x20
   14005113a:	add    BYTE PTR [rax],al
   14005113c:	pop    rsp
   14005113d:	and    BYTE PTR [rax],al
   14005113f:	add    al,al
   140051141:	and    BYTE PTR [rax+rax*1],al
   140051144:	and    BYTE PTR fs:[rax],al
   140051147:	add    cl,cl
   140051149:	and    BYTE PTR [rax],al
   14005114b:	add    BYTE PTR [rax+0x1f],ah
   14005114e:	add    al,0x0
   140051150:	shl    BYTE PTR [rax],1
   140051152:	add    BYTE PTR [rax],al
   140051154:	add    DWORD PTR [rcx],esp
   140051156:	add    BYTE PTR [rax],al
   140051158:	(bad)  
   140051159:	(bad)  
   14005115a:	add    al,0x0
   14005115c:	or     BYTE PTR [rcx],ah
   14005115e:	add    BYTE PTR [rax],al
   140051160:	rex and DWORD PTR [rax],eax
   140051163:	add    BYTE PTR [rax+0x1f],ah
   140051166:	add    al,0x0
   140051168:	push   rax
   140051169:	and    DWORD PTR [rax],eax
   14005116b:	add    BYTE PTR [rsi+0x30000021],al
   140051171:	(bad)  
   140051172:	add    al,0x0
   140051174:	mov    WORD PTR [rcx],fs
   140051176:	add    BYTE PTR [rax],al
   140051178:	in     eax,0x21
   14005117a:	add    BYTE PTR [rax],al
   14005117c:	enter  0x420,0x0
   140051180:	in     al,dx
   140051181:	and    DWORD PTR [rax],eax
   140051183:	add    BYTE PTR [rdi+0x22],bl
   140051186:	add    BYTE PTR [rax],al
   140051188:	shl    BYTE PTR [rax],1
   14005118a:	add    al,0x0
   14005118c:	nop
   14005118d:	and    al,BYTE PTR [rax]
   14005118f:	add    bl,cl
   140051191:	and    al,BYTE PTR [rax]
   140051193:	add    BYTE PTR [rax+0x1f],ah
   140051196:	add    al,0x0
   140051198:	(bad)  
   140051199:	and    al,BYTE PTR [rax]
   14005119b:	add    BYTE PTR [rip+0x30000023],cl        # 0x1700511c4
   1400511a1:	(bad)  
   1400511a2:	add    al,0x0
   1400511a4:	adc    al,0x23
   1400511a6:	add    BYTE PTR [rax],al
   1400511a8:	int    0x23
   1400511aa:	add    BYTE PTR [rax],al
   1400511ac:	fsub   QWORD PTR [rax]
   1400511ae:	add    al,0x0
   1400511b0:	loopne 0x1400511d5
   1400511b2:	add    BYTE PTR [rax],al
   1400511b4:	adc    BYTE PTR [rax+rax*1],ah
   1400511b7:	add    BYTE PTR [rax+0x1f],ah
   1400511ba:	add    al,0x0
   1400511bc:	sbb    BYTE PTR [rax+rax*1],ah
   1400511bf:	add    BYTE PTR [rax+0x25],dl
   1400511c2:	add    BYTE PTR [rax],al
   1400511c4:	in     al,0x20
   1400511c6:	add    al,0x0
   1400511c8:	pop    rax
   1400511c9:	and    eax,0x29990000
   1400511ce:	add    BYTE PTR [rax],al
   1400511d0:	clc    
   1400511d1:	and    BYTE PTR [rax+rax*1],al
   1400511d4:	movabs al,ds:0xf800002c2e000029
   1400511dd:	and    DWORD PTR [rax+rax*1],eax
   1400511e0:	sub    al,0x0
   1400511e3:	add    BYTE PTR [rcx-0x77ffffd3],ah
   1400511e9:	and    al,BYTE PTR [rax+rax*1]
   1400511ec:	mov    al,0x2d
   1400511ee:	add    BYTE PTR [rax],al
   1400511f0:	and    DWORD PTR [rsi],ebp
   1400511f2:	add    BYTE PTR [rax],al
   1400511f4:	xor    BYTE PTR [rdi],bl
   1400511f6:	add    al,0x0
   1400511f8:	rex
   1400511f9:	add    BYTE PTR cs:[rax],al
   1400511fc:	shr    DWORD PTR [rsi],cl
   1400511fe:	add    BYTE PTR [rax],al
   140051200:	pushf  
   140051201:	and    al,BYTE PTR [rax+rax*1]
   140051204:	loopne 0x140051234
   140051206:	add    BYTE PTR [rax],al
   140051208:	sub    DWORD PTR [rsi],esi
   14005120a:	add    BYTE PTR [rax],al
   14005120c:	fsub   DWORD PTR [rdx]
   14005120e:	add    al,0x0
   140051210:	xor    BYTE PTR [rsi],dh
   140051212:	add    BYTE PTR [rax],al
   140051214:	imul   esi,DWORD PTR [rsi],0x0
   140051217:	add    BYTE PTR [rdi+rbx*1+0x36740004],dh
   14005121e:	add    BYTE PTR [rax],al
   140051220:	lahf   
   140051221:	add    BYTE PTR ss:[rax],al
   140051224:	xor    BYTE PTR [rdi],bl
   140051226:	add    al,0x0
   140051228:	test   al,0x36
   14005122a:	add    BYTE PTR [rax],al
   14005122c:	fidiv  DWORD PTR [rsi]
   14005122e:	add    BYTE PTR [rax],al
   140051230:	(bad)  
   140051231:	(bad)  
   140051232:	add    al,0x0
   140051234:	loopne 0x14005126c
   140051236:	add    BYTE PTR [rax],al
   140051238:	pop    rax
   140051239:	(bad)  
   14005123a:	add    BYTE PTR [rax],al
   14005123c:	mov    esp,0x7000041f
   140051241:	(bad)  
   140051242:	add    BYTE PTR [rax],al
   140051244:	fdiv   DWORD PTR [rdi]
   140051246:	add    BYTE PTR [rax],al
   140051248:	mov    esp,0xe000041f
   14005124d:	(bad)  
   14005124e:	add    BYTE PTR [rax],al
   140051250:	adc    BYTE PTR [rax],bh
   140051252:	add    BYTE PTR [rax],al
   140051254:	xor    BYTE PTR [rdi],bl
   140051256:	add    al,0x0
   140051258:	sbb    BYTE PTR [rax],bh
   14005125a:	add    BYTE PTR [rax],al
   14005125c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005125d:	cmp    BYTE PTR [rax],al
   14005125f:	add    ah,ah
   140051261:	and    al,0x4
   140051263:	add    BYTE PTR [rax-0x28ffffc8],dh
   140051269:	cmp    BYTE PTR [rax],al
   14005126b:	add    BYTE PTR [rdi+rbx*1+0x38e00004],dh
   140051272:	add    BYTE PTR [rax],al
   140051274:	xor    al,0x39
   140051276:	add    BYTE PTR [rax],al
   140051278:	shl    BYTE PTR [rax],0x4
   14005127b:	add    BYTE PTR [rax+0x39],dl
   14005127e:	add    BYTE PTR [rax],al
   140051280:	mov    edx,0xf4000039
   140051285:	and    al,0x4
   140051287:	add    al,al
   140051289:	cmp    DWORD PTR [rax],eax
   14005128b:	add    ch,bl
   14005128d:	cmp    DWORD PTR [rax],eax
   14005128f:	add    BYTE PTR [rdi+rbx*1+0x39f00004],dh
   140051296:	add    BYTE PTR [rax],al
   140051298:	outs   dx,DWORD PTR ds:[rsi]
   140051299:	cmp    al,BYTE PTR [rax]
   14005129b:	add    BYTE PTR [rdi+rbx*1+0x3a800004],ah
   1400512a2:	add    BYTE PTR [rax],al
   1400512a4:	call   0xfc0512e3
   1400512a9:	(bad)  
   1400512aa:	add    al,0x0
   1400512ac:	lock cmp al,BYTE PTR [rax]
   1400512af:	add    BYTE PTR [rdi+0xc00003e],dl
   1400512b5:	and    eax,0x3ea00004
   1400512ba:	add    BYTE PTR [rax],al
   1400512bc:	sar    DWORD PTR [rsi],0x0
   1400512bf:	add    BYTE PTR [rdi+rbx*1+0x3ed00004],dh
   1400512c6:	add    BYTE PTR [rax],al
   1400512c8:	add    eax,DWORD PTR [rax+0x0]
   1400512cb:	add    BYTE PTR [rax],ch
   1400512cd:	and    eax,0x40100004
   1400512d2:	add    BYTE PTR [rax],al
   1400512d4:	(bad)  
   1400512d5:	rex.XB add BYTE PTR [r8],al
   1400512d8:	xor    BYTE PTR [rip+0x43400004],ah        # 0x1834512e2
   1400512de:	add    BYTE PTR [rax],al
   1400512e0:	sbb    al,BYTE PTR [rax+rax*1+0x0]
   1400512e4:	hlt    
   1400512e5:	and    eax,0x44200004
   1400512ea:	add    BYTE PTR [rax],al
   1400512ec:	pop    rax
   1400512ed:	add    BYTE PTR [rax],r8b
   1400512f0:	(bad)  
   1400512f1:	(bad)  
   1400512f2:	add    al,0x0
   1400512f4:	(bad)  
   1400512f5:	add    BYTE PTR [rax],r8b
   1400512f8:	rex.WXB
   1400512f9:	add    BYTE PTR [r8],r8b
   1400512fc:	jl     0x140051324
   1400512fe:	add    al,0x0
   140051300:	add    BYTE PTR [rbp+0x0],0x0
   140051304:	in     al,0x45
   140051306:	add    BYTE PTR [rax],al
   140051308:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140051309:	(bad)  
   14005130a:	add    al,0x0
   14005130c:	adc    BYTE PTR [rsi+0x0],al
   14005130f:	add    BYTE PTR [rsi+rax*2+0x0],bl
   140051313:	add    BYTE PTR [rax+0x1f],ah
   140051316:	add    al,0x0
   140051318:	rex.RX add BYTE PTR fs:[rax],r8b
   14005131c:	movabs al,ds:0xb0000426d8000047
   140051325:	rex.RXB add BYTE PTR [r8],r8b
   140051328:	loopne 0x140051371
   14005132a:	add    BYTE PTR [rax],al
   14005132c:	(bad)  
   14005132d:	(bad)  
   14005132e:	add    al,0x0
   140051330:	call   0xe505137c
   140051335:	rex.W add BYTE PTR [rax],al
   140051338:	in     al,0x20
   14005133a:	add    al,0x0
   14005133c:	mov    al,0x48
   14005133e:	add    BYTE PTR [rax],al
   140051340:	(bad)  
   140051341:	rex.W add BYTE PTR [rax],al
   140051344:	(bad)  
   140051345:	(bad)  
   140051346:	add    al,0x0
   140051348:	rex
   140051349:	rex.WB add BYTE PTR [r8],al
   14005134c:	mov    esi,0xf4000049
   140051351:	es add al,0x0
   140051354:	ror    BYTE PTR [rcx+0x0],1
   140051357:	add    BYTE PTR [rsi],cl
   140051359:	rex.WX add BYTE PTR [rax],al
   14005135c:	(bad)  
   14005135d:	(bad)  
   14005135e:	add    al,0x0
   140051360:	sub    al,0x4a
   140051362:	add    BYTE PTR [rax],al
   140051364:	ror    DWORD PTR [rax+rax*1+0x0],1
   140051368:	add    al,0x27
   14005136a:	add    al,0x0
   14005136c:	xor    BYTE PTR [rbp+0x0],cl
   14005136f:	add    BYTE PTR [rax+0x4d],ah
   140051372:	add    BYTE PTR [rax],al
   140051374:	(bad)  
   140051375:	(bad)  
   140051376:	add    al,0x0
   140051378:	push   0xa00004d
   14005137d:	rex.WRX add BYTE PTR [rax],r8b
   140051380:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140051381:	(bad)  
   140051382:	add    al,0x0
   140051384:	adc    BYTE PTR [rsi+0x0],cl
   140051387:	add    BYTE PTR [rbx+0x4e],cl
   14005138a:	add    BYTE PTR [rax],al
   14005138c:	(bad)  
   14005138d:	(bad)  
   14005138e:	add    al,0x0
   140051390:	push   rsp
   140051391:	rex.WRX add BYTE PTR [rax],r8b
   140051394:	fisttp QWORD PTR [rsi+0x0]
   140051397:	add    BYTE PTR [rax+0x1f],ah
   14005139a:	add    al,0x0
   14005139c:	in     al,0x4e
   14005139e:	add    BYTE PTR [rax],al
   1400513a0:	add    al,0x4f
   1400513a2:	add    BYTE PTR [rax],al
   1400513a4:	and    al,0x27
   1400513a6:	add    al,0x0
   1400513a8:	or     al,0x4f
   1400513aa:	add    BYTE PTR [rax],al
   1400513ac:	sub    BYTE PTR [rdi+0x0],cl
   1400513af:	add    BYTE PTR [rax],dh
   1400513b1:	(bad)  
   1400513b2:	add    al,0x0
   1400513b4:	xor    BYTE PTR [rdi+0x0],cl
   1400513b7:	add    BYTE PTR [rdi+0x4c000051],bh
   1400513bd:	(bad)  
   1400513be:	add    al,0x0
   1400513c0:	rcl    BYTE PTR [rcx+0x0],1
   1400513c3:	add    BYTE PTR [rcx+0x52],dl
   1400513c6:	add    BYTE PTR [rax],al
   1400513c8:	push   rax
   1400513c9:	sub    BYTE PTR [rax+rax*1],al
   1400513cc:	push   0x7f000052
   1400513d1:	push   rdx
   1400513d2:	add    BYTE PTR [rax],al
   1400513d4:	mov    ah,0x1f
   1400513d6:	add    al,0x0
   1400513d8:	mov    BYTE PTR [rdx+0x0],dl
   1400513db:	add    BYTE PTR [rbx+0x30000052],dh
   1400513e1:	(bad)  
   1400513e2:	add    al,0x0
   1400513e4:	mov    esp,0xda000052
   1400513e9:	push   rdx
   1400513ea:	add    BYTE PTR [rax],al
   1400513ec:	mov    ah,0x1f
   1400513ee:	add    al,0x0
   1400513f0:	or     al,0x53
   1400513f2:	add    BYTE PTR [rax],al
   1400513f4:	(bad)  
   1400513f5:	push   rsp
   1400513f6:	add    BYTE PTR [rax],al
   1400513f8:	nop
   1400513f9:	sub    BYTE PTR [rax+rax*1],al
   1400513fc:	xor    BYTE PTR [rax+rax*1+0x0],dl
   140051400:	not    DWORD PTR [rsi+0x0]
   140051403:	add    BYTE PTR [rax+0x428],ch
   140051409:	push   rdi
   14005140a:	add    BYTE PTR [rax],al
   14005140c:	clc    
   14005140d:	push   rdi
   14005140e:	add    BYTE PTR [rax],al
   140051410:	or     BYTE PTR [rcx],ch
   140051412:	add    al,0x0
   140051414:	add    BYTE PTR [rax+0x0],bl
   140051417:	add    BYTE PTR [rdx],ch
   140051419:	pop    rax
   14005141a:	add    BYTE PTR [rax],al
   14005141c:	xor    BYTE PTR [rdi],bl
   14005141e:	add    al,0x0
   140051420:	xor    BYTE PTR [rax+0x0],bl
   140051423:	add    BYTE PTR [rsi],bh
   140051425:	pop    rbp
   140051426:	add    BYTE PTR [rax],al
   140051428:	and    BYTE PTR [rcx],ch
   14005142a:	add    al,0x0
   14005142c:	push   rax
   14005142d:	pop    rbp
   14005142e:	add    BYTE PTR [rax],al
   140051430:	js     0x14005148f
   140051432:	add    BYTE PTR [rax],al
   140051434:	mov    ah,0x1f
   140051436:	add    al,0x0
   140051438:	sbb    BYTE PTR [rbp+0x0],0x0
   14005143c:	and    ebx,DWORD PTR [rsi+0x0]
   14005143f:	add    BYTE PTR [rax],dh
   140051441:	sub    al,BYTE PTR [rax+rax*1]
   140051444:	sub    al,0x5e
   140051446:	add    BYTE PTR [rax],al
   140051448:	movsxd ebx,DWORD PTR [rdi+0x0]
   14005144b:	add    BYTE PTR [rax+0x2a],cl
   14005144e:	add    al,0x0
   140051450:	ins    BYTE PTR es:[rdi],dx
   140051451:	pop    rdi
   140051452:	add    BYTE PTR [rax],al
   140051454:	lea    ebx,[rdi+0x0]
   140051457:	add    BYTE PTR [rax],dh
   140051459:	(bad)  
   14005145a:	add    al,0x0
   14005145c:	xchg   esp,eax
   14005145d:	pop    rdi
   14005145e:	add    BYTE PTR [rax],al
   140051460:	pop    rsi
   140051461:	(bad)  
   140051462:	add    BYTE PTR [rax],al
   140051464:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140051465:	(bad)  
   140051466:	add    al,0x0
   140051468:	js     0x1400514ca
   14005146a:	add    BYTE PTR [rax],al
   14005146c:	add    ah,BYTE PTR [rdx+0x0]
   14005146f:	add    al,bl
   140051471:	es add al,0x0
   140051474:	or     BYTE PTR [rdx+0x0],ah
   140051477:	add    bh,bl
   140051479:	imul   eax,DWORD PTR [rax],0x42a6400
   14005147f:	add    al,ch
   140051481:	imul   eax,DWORD PTR [rax],0x6ba000
   140051487:	add    BYTE PTR [rax-0x57fffbd6],bh
   14005148d:	imul   eax,DWORD PTR [rax],0x0
   140051490:	mov    DWORD PTR [rbp+0x0],ebp
   140051493:	add    ah,bl
   140051495:	sub    al,BYTE PTR [rax+rax*1]
   140051498:	nop
   140051499:	ins    DWORD PTR es:[rdi],dx
   14005149a:	add    BYTE PTR [rax],al
   14005149c:	rex.WRB jo 0x14005149f
   14005149f:	add    BYTE PTR [rdi+riz*1],al
   1400514a2:	add    al,0x0
   1400514a4:	xor    BYTE PTR [rax+0x0],0x0
   1400514a8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400514a9:	jo     0x1400514ab
   1400514ab:	add    BYTE PTR [rax],dh
   1400514ad:	(bad)  
   1400514ae:	add    al,0x0
   1400514b0:	mov    al,0x70
   1400514b2:	add    BYTE PTR [rax],al
   1400514b4:	rex.WX jno 0x1400514b7
   1400514b7:	add    BYTE PTR [rax+0x5000042b],dh
   1400514bd:	jno    0x1400514bf
   1400514bf:	add    al,ah
   1400514c1:	jno    0x1400514c3
   1400514c3:	add    BYTE PTR [rax-0x17fffbd5],bh
   1400514c9:	jno    0x1400514cb
   1400514cb:	add    BYTE PTR [rbp+0x72],bl
   1400514ce:	add    BYTE PTR [rax],al
   1400514d0:	shl    BYTE PTR [rax],0x4
   1400514d3:	add    BYTE PTR [rdx+rsi*2+0x0],ah
   1400514d7:	add    bh,ch
   1400514d9:	jb     0x1400514db
   1400514db:	add    al,cl
   1400514dd:	and    BYTE PTR [rax+rax*1],al
   1400514e0:	clc    
   1400514e1:	jb     0x1400514e3
   1400514e3:	add    bl,cl
   1400514e5:	jae    0x1400514e7
   1400514e7:	add    al,al
   1400514e9:	sub    eax,DWORD PTR [rax+rax*1]
   1400514ec:	(bad)  
   1400514ed:	jae    0x1400514ef
   1400514ef:	add    BYTE PTR [rbx-0x37ffff8c],dh
   1400514f5:	sub    eax,DWORD PTR [rax+rax*1]
   1400514f8:	mov    esp,0x64000074
   1400514fd:	jne    0x1400514ff
   1400514ff:	add    ah,dl
   140051501:	sub    eax,DWORD PTR [rax+rax*1]
   140051504:	ins    BYTE PTR es:[rdi],dx
   140051505:	jne    0x140051507
   140051507:	add    BYTE PTR [rax-0x3fffff8b],bl
   14005150d:	and    BYTE PTR [rax+rax*1],al
   140051510:	movabs al,ds:0xdc00007692000075
   140051519:	sub    eax,DWORD PTR [rax+rax*1]
   14005151c:	cwde   
   14005151d:	jbe    0x14005151f
   14005151f:	add    bl,al
   140051521:	js     0x140051523
   140051523:	add    al,ch
   140051525:	sub    eax,DWORD PTR [rax+rax*1]
   140051528:	sar    BYTE PTR [rax+0x0],1
   14005152b:	add    BYTE PTR [rax],al
   14005152d:	jns    0x14005152f
   14005152f:	add    BYTE PTR [rax+0x1f],ah
   140051532:	add    al,0x0
   140051534:	or     BYTE PTR [rcx+0x0],bh
   140051537:	add    BYTE PTR [rax+0x7a],ch
   14005153a:	add    BYTE PTR [rax],al
   14005153c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005153d:	(bad)  
   14005153e:	add    al,0x0
   140051540:	jo     0x1400515bc
   140051542:	add    BYTE PTR [rax],al
   140051544:	cmp    eax,0xf800007b
   140051549:	sub    eax,DWORD PTR [rax+rax*1]
   14005154c:	rex.R jnp 0x14005154f
   14005154f:	add    dh,bh
   140051551:	jnp    0x140051553
   140051553:	add    BYTE PTR [rdi+rbx*1+0x7c100004],bh
   14005155a:	add    BYTE PTR [rax],al
   14005155c:	and    edi,DWORD PTR [rax+rax*1+0x0]
   140051560:	mov    ah,0x1f
   140051562:	add    al,0x0
   140051564:	sub    al,0x7c
   140051566:	add    BYTE PTR [rax],al
   140051568:	(bad)  
   140051569:	jl     0x14005156b
   14005156b:	add    BYTE PTR [rax],dl
   14005156d:	sub    al,0x4
   14005156f:	add    ah,cl
   140051571:	jl     0x140051573
   140051573:	add    bl,al
   140051575:	jle    0x140051577
   140051577:	add    BYTE PTR [rax],ah
   140051579:	sub    al,0x4
   14005157b:	add    ah,cl
   14005157d:	jle    0x14005157f
   14005157f:	add    BYTE PTR [rcx],ch
   140051581:	add    BYTE PTR [rax],0x0
   140051584:	and    al,0x2d
   140051586:	add    al,0x0
   140051588:	xor    BYTE PTR [rax-0x7f3a0000],al
   14005158e:	add    BYTE PTR [rax],al
   140051590:	xor    BYTE PTR [rdi],bl
   140051592:	add    al,0x0
   140051594:	rol    BYTE PTR [rax-0x7e3b0000],1
   14005159a:	add    BYTE PTR [rax],al
   14005159c:	nop
   14005159d:	sub    BYTE PTR [rax+rax*1],al
   1400515a0:	rol    BYTE PTR [rcx-0x7d570000],1
   1400515a6:	add    BYTE PTR [rax],al
   1400515a8:	cmp    al,0x2d
   1400515aa:	add    al,0x0
   1400515ac:	mov    al,0x82
   1400515ae:	add    BYTE PTR [rax],al
   1400515b0:	add    BYTE PTR [rbp+0x2d4c0000],al
   1400515b6:	add    al,0x0
   1400515b8:	or     BYTE PTR [rbp-0x796b0000],al
   1400515be:	add    BYTE PTR [rax],al
   1400515c0:	(bad)  
   1400515c1:	cs add al,0x0
   1400515c4:	pushf  
   1400515c5:	xchg   BYTE PTR [rax],al
   1400515c7:	add    BYTE PTR [rdi+0x7800008e],dh
   1400515cd:	cs add al,0x0
   1400515d0:	ror    BYTE PTR [rsi-0x704e0000],0x0
   1400515d7:	add    BYTE PTR [rax+0x30],ah
   1400515da:	add    al,0x0
   1400515dc:	mov    eax,0x1900008f
   1400515e1:	xchg   edi,eax
   1400515e2:	add    BYTE PTR [rax],al
   1400515e4:	ins    BYTE PTR es:[rdi],dx
   1400515e5:	xor    BYTE PTR [rax+rax*1],al
   1400515e8:	and    BYTE PTR [rdi-0x57cc0000],dl
   1400515ee:	add    BYTE PTR [rax],al
   1400515f0:	test   BYTE PTR [rax],dh
   1400515f2:	add    al,0x0
   1400515f4:	cmp    al,0xa8
   1400515f6:	add    BYTE PTR [rax],al
   1400515f8:	ins    DWORD PTR es:[rdi],dx
   1400515f9:	stos   BYTE PTR es:[rdi],al
   1400515fa:	add    BYTE PTR [rax],al
   1400515fc:	sbb    al,0x33
   1400515fe:	add    al,0x0
   140051600:	je     0x1400515ac
   140051602:	add    BYTE PTR [rax],al
   140051604:	rex.RXB scas al,BYTE PTR es:[rdi]
   140051606:	add    BYTE PTR [rax],al
   140051608:	jo     0x14005163d
   14005160a:	add    al,0x0
   14005160c:	push   rax
   14005160d:	scas   al,BYTE PTR es:[rdi]
   14005160e:	add    BYTE PTR [rax],al
   140051610:	(bad)  
   140051611:	scas   eax,DWORD PTR es:[rdi]
   140051612:	add    BYTE PTR [rax],al
   140051614:	nop
   140051615:	sub    BYTE PTR [rax+rax*1],al
   140051618:	loopne 0x1400515c9
   14005161a:	add    BYTE PTR [rax],al
   14005161c:	enter  0xb1,0x0
   140051620:	lock xor eax,DWORD PTR [rax+rax*1]
   140051624:	shl    BYTE PTR [rcx-0x4c6b0000],1
   14005162a:	add    BYTE PTR [rax],al
   14005162c:	pop    rax
   14005162d:	xor    al,0x4
   14005162f:	add    BYTE PTR [rbx+rsi*4-0x48ec0000],bl
   140051636:	add    BYTE PTR [rax],al
   140051638:	adc    BYTE PTR [rip+0xffffffffb71c0004],dh        # 0xf7211642
   14005163e:	add    BYTE PTR [rax],al
   140051640:	adc    edi,DWORD PTR [rcx+0x35680000]
   140051646:	add    al,0x0
   140051648:	sbb    al,0xb9
   14005164a:	add    BYTE PTR [rax],al
   14005164c:	sub    eax,0xc00000bb
   140051651:	xor    eax,0xbb340004
   140051656:	add    BYTE PTR [rax],al
   140051658:	(bad)  
   140051659:	mov    ebx,0x36080000
   14005165e:	add    al,0x0
   140051660:	fdivr  QWORD PTR [rbx-0x43840000]
   140051666:	add    BYTE PTR [rax],al
   140051668:	push   0xffffffff84000436
   14005166d:	mov    esp,0xbd4d0000
   140051672:	add    BYTE PTR [rax],al
   140051674:	mov    al,0x36
   140051676:	add    al,0x0
   140051678:	push   rsp
   140051679:	mov    ebp,0xbf580000
   14005167e:	add    BYTE PTR [rax],al
   140051680:	add    BYTE PTR [rdi],dh
   140051682:	add    al,0x0
   140051684:	(bad)  
   140051685:	mov    edi,0xc0530000
   14005168a:	add    BYTE PTR [rax],al
   14005168c:	fdiv   QWORD PTR [rdi]
   14005168e:	add    al,0x0
   140051690:	pop    rsp
   140051691:	rol    BYTE PTR [rax],0x0
   140051694:	mov    bl,0xc4
   140051696:	add    BYTE PTR [rax],al
   140051698:	test   al,0x38
   14005169a:	add    al,0x0
   14005169c:	mov    esp,0x1f0000c4
   1400516a1:	enter  0x0,0x58
   1400516a5:	cmp    DWORD PTR [rax+rax*1],eax
   1400516a8:	sub    al,cl
   1400516aa:	add    BYTE PTR [rax],al
   1400516ac:	(bad)  
   1400516ad:	enter  0x0,0xb4
   1400516b1:	(bad)  
   1400516b2:	add    al,0x0
   1400516b4:	rex.W enter 0x0,0x52
   1400516b9:	leave  
   1400516ba:	add    BYTE PTR [rax],al
   1400516bc:	lock cmp DWORD PTR [rax+rax*1],eax
   1400516c0:	pop    rax
   1400516c1:	leave  
   1400516c2:	add    BYTE PTR [rax],al
   1400516c4:	(bad)  
   1400516c5:	int3   
   1400516c6:	add    BYTE PTR [rax],al
   1400516c8:	add    BYTE PTR [rdx],bh
   1400516ca:	add    al,0x0
   1400516cc:	movabs al,ds:0x600000cdd20000cc
   1400516d5:	(bad)  
   1400516d6:	add    al,0x0
   1400516d8:	fmul   st,st(5)
   1400516da:	add    BYTE PTR [rax],al
   1400516dc:	xor    esi,ecx
   1400516de:	add    BYTE PTR [rax],al
   1400516e0:	(bad)  
   1400516e1:	(bad)  
   1400516e2:	add    al,0x0
   1400516e4:	cmp    dh,cl
   1400516e6:	add    BYTE PTR [rax],al
   1400516e8:	(bad)  
   1400516e9:	(bad)  
   1400516ea:	add    BYTE PTR [rax],al
   1400516ec:	(bad)  
   1400516ed:	(bad)  
   1400516ee:	add    al,0x0
   1400516f0:	mov    dh,cl
   1400516f2:	add    BYTE PTR [rax],al
   1400516f4:	mov    edx,0x600000ce
   1400516f9:	(bad)  
   1400516fa:	add    al,0x0
   1400516fc:	ror    dh,0x0
   1400516ff:	add    dl,ah
   140051701:	(bad)  
   140051702:	add    BYTE PTR [rax],al
   140051704:	xor    BYTE PTR [rdi],bl
   140051706:	add    al,0x0
   140051708:	call   0x1460517db
   14005170d:	rol    BYTE PTR [rax],1
   14005170f:	add    BYTE PTR [rax+0x1f],ah
   140051712:	add    al,0x0
   140051714:	xor    al,dl
   140051716:	add    BYTE PTR [rax],al
   140051718:	xchg   esp,eax
   140051719:	rol    BYTE PTR [rax],1
   14005171b:	add    BYTE PTR [rdi+rbx*1-0x2f43fffc],ah
   140051722:	add    BYTE PTR [rax],al
   140051724:	add    eax,0xb00000d1
   140051729:	cmp    al,BYTE PTR [rax+rax*1]
   14005172c:	or     al,0xd1
   14005172e:	add    BYTE PTR [rax],al
   140051730:	and    edx,ecx
   140051732:	add    BYTE PTR [rax],al
   140051734:	mov    ah,0x1f
   140051736:	add    al,0x0
   140051738:	xor    cl,dl
   14005173a:	add    BYTE PTR [rax],al
   14005173c:	xchg   edx,eax
   14005173d:	rol    DWORD PTR [rax],1
   14005173f:	add    BYTE PTR [rax+0x1f],ah
   140051742:	add    al,0x0
   140051744:	cwde   
   140051745:	rol    DWORD PTR [rax],1
   140051747:	add    bh,al
   140051749:	rol    BYTE PTR [rax],cl
   14005174b:	add    BYTE PTR [rdx+rdi*1-0x2d2ffffc],bh
   140051752:	add    BYTE PTR [rax],al
   140051754:	(bad)  
   140051755:	rol    DWORD PTR [rax],cl
   140051757:	add    BYTE PTR [rax],bh
   140051759:	cmp    eax,DWORD PTR [rax+rax*1]
   14005175c:	mov    bl,dl
   14005175e:	add    BYTE PTR [rax],al
   140051760:	cdq    
   140051761:	rol    DWORD PTR [rax],cl
   140051763:	add    BYTE PTR [rdi+rbx*1-0x2c5ffffc],dh
   14005176a:	add    BYTE PTR [rax],al
   14005176c:	mov    dl,ah
   14005176e:	add    BYTE PTR [rax],al
   140051770:	mov    eax,0x9000043b
   140051775:	(bad)  
   140051776:	add    BYTE PTR [rax],al
   140051778:	jae    0x14005174f
   14005177a:	add    BYTE PTR [rax],al
   14005177c:	cmp    BYTE PTR [rsp+rax*1],bh
   14005177f:	add    BYTE PTR [rbp+rdx*8+0x0],bh
   140051783:	add    BYTE PTR [rcx],al
   140051785:	(bad)  
   140051786:	add    BYTE PTR [rax],al
   140051788:	test   al,0x3c
   14005178a:	add    al,0x0
   14005178c:	or     dh,dl
   14005178e:	add    BYTE PTR [rax],al
   140051790:	in     al,dx
   140051791:	(bad)  
   140051792:	add    BYTE PTR [rax],al
   140051794:	mov    eax,0xf400043c
   140051799:	(bad)  
   14005179a:	add    BYTE PTR [rax],al
   14005179c:	push   rdi
   14005179d:	xlat   BYTE PTR ds:[rbx]
   14005179e:	add    BYTE PTR [rax],al
   1400517a0:	nop
   1400517a1:	cmp    eax,0xd7a00004
   1400517a6:	add    BYTE PTR [rax],al
   1400517a8:	adc    cl,bl
   1400517aa:	add    BYTE PTR [rax],al
   1400517ac:	nop
   1400517ad:	sub    BYTE PTR [rax+rax*1],al
   1400517b0:	sbb    cl,bl
   1400517b2:	add    BYTE PTR [rax],al
   1400517b4:	fiadd  DWORD PTR cs:[rax]
   1400517b7:	add    BYTE PTR [rsi+rdi*1],cl
   1400517ba:	add    al,0x0
   1400517bc:	xor    al,0xda
   1400517be:	add    BYTE PTR [rax],al
   1400517c0:	pop    rdx
   1400517c1:	fild   DWORD PTR [rax]
   1400517c3:	add    BYTE PTR [rdi+rbx*1-0x249ffffc],bh
   1400517ca:	add    BYTE PTR [rax],al
   1400517cc:	fadd   QWORD PTR es:[rax]
   1400517cf:	add    BYTE PTR [rdi+rbx*1-0x23d3fffc],ah
   1400517d6:	add    BYTE PTR [rax],al
   1400517d8:	xor    ebp,ebx
   1400517da:	add    BYTE PTR [rax],al
   1400517dc:	ins    BYTE PTR es:[rdi],dx
   1400517dd:	(bad)  
   1400517de:	add    al,0x0
   1400517e0:	cmp    ch,bl
   1400517e2:	add    BYTE PTR [rax],al
   1400517e4:	fcmovu st,st(5)
   1400517e6:	add    BYTE PTR [rax],al
   1400517e8:	sar    BYTE PTR [rsi],1
   1400517ea:	add    al,0x0
   1400517ec:	sub    al,0xde
   1400517ee:	add    BYTE PTR [rax],al
   1400517f0:	xchg   ecx,eax
   1400517f1:	fiadd  WORD PTR [rax]
   1400517f3:	add    BYTE PTR [rax-0x67fffbc6],dh
   1400517f9:	fiadd  WORD PTR [rax]
   1400517fb:	add    BYTE PTR [rdx-0x4bffff22],bh
   140051801:	(bad)  
   140051802:	add    al,0x0
   140051804:	rcr    dh,1
   140051806:	add    BYTE PTR [rax],al
   140051808:	and    bl,bh
   14005180a:	add    BYTE PTR [rax],al
   14005180c:	or     BYTE PTR [rdi],bh
   14005180e:	add    al,0x0
   140051810:	sub    bh,bl
   140051812:	add    BYTE PTR [rax],al
   140051814:	push   rsp
   140051815:	fild   WORD PTR [rax]
   140051817:	add    BYTE PTR [rax+0x5c00043f],al
   14005181d:	fild   WORD PTR [rax]
   14005181f:	add    BYTE PTR [rdi+rbx*8+0x3ff00000],ch
   140051826:	add    al,0x0
   140051828:	mov    ah,0xdf
   14005182a:	add    BYTE PTR [rax],al
   14005182c:	rex.WR loop 0x14005182f
   14005182f:	add    BYTE PTR [rax+0x40],ah
   140051832:	add    al,0x0
   140051834:	push   rsp
   140051835:	loop   0x140051837
   140051837:	add    BYTE PTR [rdi-0x1e],dh
   14005183a:	add    BYTE PTR [rax],al
   14005183c:	mov    ah,0x1f
   14005183e:	add    al,0x0
   140051840:	and    dl,0x0
   140051843:	add    BYTE PTR [rdx],dl
   140051845:	jrcxz  0x140051847
   140051847:	add    BYTE PTR [rbp*1-0x1ce7fffc],bh
   14005184e:	add    BYTE PTR [rax],al
   140051850:	push   0x480000e3
   140051855:	rex.B add al,0x0
   140051858:	jo     0x14005183d
   14005185a:	add    BYTE PTR [rax],al
   14005185c:	or     ah,ah
   14005185e:	add    BYTE PTR [rax],al
   140051860:	enter  0x420,0x0
   140051864:	adc    ah,ah
   140051866:	add    BYTE PTR [rax],al
   140051868:	cmp    ah,ch
   14005186a:	add    BYTE PTR [rax],al
   14005186c:	push   rax
   14005186d:	rex.B add al,0x0
   140051870:	rex in eax,0x0
   140051873:	add    dh,cl
   140051875:	out    0x0,al
   140051877:	add    BYTE PTR [rcx+rax*2+0x4],bl
   14005187b:	add    ah,dl
   14005187d:	out    0x0,al
   14005187f:	add    BYTE PTR [rip+0x6c0000e7],ch        # 0x1ac05196c
   140051885:	rex.B add al,0x0
   140051888:	xor    al,0xe7
   14005188a:	add    BYTE PTR [rax],al
   14005188c:	ret    0xe8
   14005188f:	add    BYTE PTR [rcx+rax*2+0x4],bl
   140051893:	add    al,cl
   140051895:	call   0x12ad9189a
   14005189a:	add    BYTE PTR [rax],al
   14005189c:	je     0x1400518df
   14005189e:	add    al,0x0
   1400518a0:	fsub   st(2),st
   1400518a2:	add    BYTE PTR [rax],al
   1400518a4:	retf   
   1400518a5:	in     al,dx
   1400518a6:	add    BYTE PTR [rax],al
   1400518a8:	xchg   esp,eax
   1400518a9:	rex.B add al,0x0
   1400518ac:	(bad)  
   1400518ad:	in     al,dx
   1400518ae:	add    BYTE PTR [rax],al
   1400518b0:	icebp  
   1400518b1:	out    dx,eax
   1400518b2:	add    BYTE PTR [rax],al
   1400518b4:	cmp    BYTE PTR [rdx+0x4],al
   1400518b7:	add    al,bh
   1400518b9:	out    dx,eax
   1400518ba:	add    BYTE PTR [rax],al
   1400518bc:	adc    esi,esp
   1400518be:	add    BYTE PTR [rax],al
   1400518c0:	js     0x140051904
   1400518c2:	add    al,0x0
   1400518c4:	sbb    al,0xf4
   1400518c6:	add    BYTE PTR [rax],al
   1400518c8:	retf   0xf4
   1400518cb:	add    BYTE PTR [rdi+rbx*1-0xb2ffffc],ah
   1400518d2:	add    BYTE PTR [rax],al
   1400518d4:	rex.XB sti 
   1400518d6:	add    BYTE PTR [rax],al
   1400518d8:	rol    BYTE PTR [rdx+0x4],0x0
   1400518dc:	push   rax
   1400518dd:	sti    
   1400518de:	add    BYTE PTR [rax],al
   1400518e0:	(bad)  
   1400518e2:	add    BYTE PTR [rax],al
   1400518e4:	and    BYTE PTR [rbx+0x4],al
   1400518e7:	add    al,ah
   1400518e9:	sti    
   1400518ea:	add    BYTE PTR [rax],al
   1400518ec:	pop    rdx
   1400518ed:	cld    
   1400518ee:	add    BYTE PTR [rax],al
   1400518f0:	push   rax
   1400518f1:	rex.XB add al,0x0
   1400518f4:	(bad)  
   1400518f5:	cld    
   1400518f6:	add    BYTE PTR [rax],al
   1400518f8:	rex.WB std 
   1400518fa:	add    BYTE PTR [rax],al
   1400518fc:	js     0x140051941
   1400518fe:	add    al,0x0
   140051900:	push   rax
   140051901:	std    
   140051902:	add    BYTE PTR [rax],al
   140051904:	mov    eax,0xc80000fd
   140051909:	rex.XB add al,0x0
   14005190c:	sar    ch,0x0
   14005190f:	add    BYTE PTR [rdi+0x2],al
   140051912:	add    DWORD PTR [rax],eax
   140051914:	loopne 0x140051959
   140051916:	add    al,0x0
   140051918:	push   rax
   140051919:	add    al,BYTE PTR [rcx]
   14005191b:	add    BYTE PTR [rax],bh
   14005191d:	add    al,0x1
   14005191f:	add    ah,dh
   140051921:	rex.R add al,0x0
   140051924:	add    al,0x1
   140051927:	add    BYTE PTR [rdi-0x4bfffefc],cl
   14005192d:	(bad)  
   14005192e:	add    al,0x0
   140051930:	cwde   
   140051931:	add    al,0x1
   140051933:	add    bl,ah
   140051935:	add    eax,0x45d40001
   14005193a:	add    al,0x0
   14005193c:	in     al,dx
   14005193d:	add    eax,0x9340001
   140051942:	add    DWORD PTR [rax],eax
   140051944:	sbb    BYTE PTR [rsi+0x4],al
   140051947:	add    BYTE PTR [rcx+rcx*1],bh
   14005194a:	add    DWORD PTR [rax],eax
   14005194c:	repz or eax,0x47640001
   140051952:	add    al,0x0
   140051954:	add    BYTE PTR [rsi],cl
   140051956:	add    DWORD PTR [rax],eax
   140051958:	rex.R (bad) 
   14005195a:	add    DWORD PTR [rax],eax
   14005195c:	xor    BYTE PTR [rdi],bl
   14005195e:	add    al,0x0
   140051960:	push   rax
   140051961:	(bad)  
   140051962:	add    DWORD PTR [rax],eax
   140051964:	xchg   esp,eax
   140051965:	sgdt   [rax]
   140051968:	rex.W
   140051969:	rex.W add al,0x0
   14005196c:	pushf  
   14005196d:	sgdt   [rax]
   140051970:	mov    ah,0xf
   140051972:	add    DWORD PTR [rax],eax
   140051974:	mov    ah,0x1f
   140051976:	add    al,0x0
   140051978:	mov    esp,0x400010f
   14005197d:	adc    BYTE PTR [rcx],al
   14005197f:	add    BYTE PTR [rax+0x3000043a],dh
   140051985:	adc    BYTE PTR [rcx],al
   140051987:	add    BYTE PTR [rax+rdx*1+0x1fa40001],dl
   14005198e:	add    al,0x0
   140051990:	rcl    BYTE PTR [rax],0x1
   140051993:	add    BYTE PTR [rdi],dl
   140051995:	adc    DWORD PTR [rcx],eax
   140051997:	add    BYTE PTR [rax+0x1f],ah
   14005199a:	add    al,0x0
   14005199c:	and    BYTE PTR [rcx],dl
   14005199e:	add    DWORD PTR [rax],eax
   1400519a0:	adc    edx,DWORD PTR [rdx]
   1400519a2:	add    DWORD PTR [rax],eax
   1400519a4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400519a5:	(bad)  
   1400519a6:	add    al,0x0
   1400519a8:	sbb    al,0x12
   1400519aa:	add    DWORD PTR [rax],eax
   1400519ac:	test   al,0x13
   1400519ae:	add    DWORD PTR [rax],eax
   1400519b0:	(bad)  
   1400519b1:	rex.W add al,0x0
   1400519b4:	rcl    BYTE PTR [rbx],1
   1400519b6:	add    DWORD PTR [rax],eax
   1400519b8:	xor    DWORD PTR [rip+0x26d80001],edx        # 0x166dd19bf
   1400519be:	add    al,0x0
   1400519c0:	cmp    BYTE PTR [rip+0x16cf0001],dl        # 0x156d419c7
   1400519c6:	add    DWORD PTR [rax],eax
   1400519c8:	ror    BYTE PTR [rax+0x4],1
   1400519cb:	add    al,ah
   1400519cd:	(bad)  
   1400519ce:	add    DWORD PTR [rax],eax
   1400519d0:	sub    BYTE PTR [rax],bl
   1400519d2:	add    DWORD PTR [rax],eax
   1400519d4:	mov    esp,0x3000041f
   1400519d9:	sbb    BYTE PTR [rcx],al
   1400519db:	add    BYTE PTR [rax+rbx*1+0x1],ah
   1400519df:	add    BYTE PTR [rax],dh
   1400519e1:	(bad)  
   1400519e2:	add    al,0x0
   1400519e4:	ins    BYTE PTR es:[rdi],dx
   1400519e5:	sbb    BYTE PTR [rcx],al
   1400519e7:	add    BYTE PTR [rbx+0x1a],dl
   1400519ea:	add    DWORD PTR [rax],eax
   1400519ec:	movabs al,ds:0xf700011a5c000449
   1400519f5:	sbb    al,BYTE PTR [rcx]
   1400519f7:	add    BYTE PTR [rax+0x449],bh
   1400519fd:	sbb    eax,DWORD PTR [rcx]
   1400519ff:	add    BYTE PTR [rdx],dl
   140051a01:	sbb    al,0x1
   140051a03:	add    al,dh
   140051a05:	rex.WB add al,0x0
   140051a08:	sbb    BYTE PTR [rcx+rax*1],bl
   140051a0b:	add    BYTE PTR [rdx],ch
   140051a0d:	sbb    eax,0x4a400001
   140051a12:	add    al,0x0
   140051a14:	xor    BYTE PTR [rip+0x1dde0001],bl        # 0x15de31a1b
   140051a1a:	add    DWORD PTR [rax],eax
   140051a1c:	cwde   
   140051a1d:	rex.WX add al,0x0
   140051a20:	in     al,0x1d
   140051a22:	add    DWORD PTR [rax],eax
   140051a24:	movabs eax,ds:0xa800044ac800011e
   140051a2d:	(bad)  
   140051a2e:	add    DWORD PTR [rax],eax
   140051a30:	movabs al,ds:0xa800044b00000120
   140051a39:	and    BYTE PTR [rcx],al
   140051a3b:	add    BYTE PTR [rcx+riz*1+0x4b180001],bh
   140051a42:	add    al,0x0
   140051a44:	(bad)
   140051a48:	mul    DWORD PTR [rcx]
   140051a4a:	add    DWORD PTR [rax],eax
   140051a4c:	(bad)  
   140051a4d:	(bad)  
   140051a4e:	add    al,0x0
   140051a50:	add    BYTE PTR [rdx],ah
   140051a52:	add    DWORD PTR [rax],eax
   140051a54:	mov    WORD PTR [rdx],fs
   140051a56:	add    DWORD PTR [rax],eax
   140051a58:	nop
   140051a59:	sub    BYTE PTR [rax+rax*1],al
   140051a5c:	xchg   esp,eax
   140051a5d:	and    al,BYTE PTR [rcx]
   140051a5f:	add    dh,ah
   140051a61:	and    al,BYTE PTR [rcx]
   140051a63:	add    BYTE PTR [rbx+rcx*2],ch
   140051a66:	add    al,0x0
   140051a68:	in     al,dx
   140051a69:	and    al,BYTE PTR [rcx]
   140051a6b:	add    BYTE PTR [rdi-0x5ffffedc],bh
   140051a71:	rex.WXB add al,0x0
   140051a74:	enter  0x124,0x0
   140051a78:	lods   eax,DWORD PTR ds:[rsi]
   140051a79:	and    eax,0x4c200001
   140051a7e:	add    al,0x0
   140051a80:	mov    ah,0x25
   140051a82:	add    DWORD PTR [rax],eax
   140051a84:	jg     0x140051aad
   140051a86:	add    DWORD PTR [rax],eax
   140051a88:	xor    BYTE PTR [rsp+rax*1+0x0],cl
   140051a8c:	mov    BYTE PTR [rdi],ah
   140051a8e:	add    DWORD PTR [rax],eax
   140051a90:	(bad)  
   140051a91:	(bad)  
   140051a92:	add    DWORD PTR [rax],eax
   140051a94:	in     al,0x20
   140051a96:	add    al,0x0
   140051a98:	add    al,0x28
   140051a9a:	add    DWORD PTR [rax],eax
   140051a9c:	rex.RX sub BYTE PTR [rcx],r8b
   140051a9f:	add    BYTE PTR [rax+0x5000044c],dh
   140051aa5:	sub    BYTE PTR [rcx],al
   140051aa7:	add    BYTE PTR [rdi+0x28],dh
   140051aaa:	add    DWORD PTR [rax],eax
   140051aac:	xor    BYTE PTR [rdi],bl
   140051aae:	add    al,0x0
   140051ab0:	xchg   esp,eax
   140051ab1:	sub    BYTE PTR [rcx],al
   140051ab3:	add    BYTE PTR [rcx+rbp*1],ch
   140051ab6:	add    DWORD PTR [rax],eax
   140051ab8:	enter  0x420,0x0
   140051abc:	xor    al,0x29
   140051abe:	add    DWORD PTR [rax],eax
   140051ac0:	fisubr WORD PTR [rcx]
   140051ac2:	add    DWORD PTR [rax],eax
   140051ac4:	(bad)  
   140051ac5:	sub    eax,DWORD PTR [rax+rax*1]
   140051ac8:	in     al,0x29
   140051aca:	add    DWORD PTR [rax],eax
   140051acc:	mov    WORD PTR [rbx],gs
   140051ace:	add    DWORD PTR [rax],eax
   140051ad0:	and    BYTE PTR [rbp+0x4],cl
   140051ad3:	add    BYTE PTR [rbx+rbp*1+0x2c0e0001],dl
   140051ada:	add    DWORD PTR [rax],eax
   140051adc:	(bad)  
   140051add:	(bad)  
   140051ade:	add    al,0x0
   140051ae0:	and    BYTE PTR [rcx+rax*1],ch
   140051ae3:	add    BYTE PTR [rax+0x2c],dl
   140051ae6:	add    DWORD PTR [rax],eax
   140051ae8:	(bad)  
   140051ae9:	(bad)  
   140051aea:	add    al,0x0
   140051aec:	pop    rax
   140051aed:	sub    al,0x1
   140051aef:	add    dl,ah
   140051af1:	add    DWORD PTR cs:[rax],eax
   140051af4:	ror    BYTE PTR [rbp+0x4],1
   140051af7:	add    al,ch
   140051af9:	add    DWORD PTR cs:[rax],eax
   140051afc:	fnsave [rax]
   140051afe:	add    DWORD PTR [rax],eax
   140051b00:	cmp    BYTE PTR [rsi+0x4],cl
   140051b03:	add    ah,ah
   140051b05:	xor    BYTE PTR [rcx],al
   140051b07:	add    bh,bl
   140051b09:	xor    eax,0x4e780001
   140051b0e:	add    al,0x0
   140051b10:	call   0xfa051c4a
   140051b15:	cmp    al,BYTE PTR [rcx]
   140051b17:	add    BYTE PTR [rax-0x3ffffbb1],bl
   140051b1d:	cmp    al,BYTE PTR [rcx]
   140051b1f:	add    BYTE PTR [rax+0x3d],dl
   140051b22:	add    DWORD PTR [rax],eax
   140051b24:	add    BYTE PTR [rax+0x4],dl
   140051b27:	add    BYTE PTR [rax+0x3d],bl
   140051b2a:	add    DWORD PTR [rax],eax
   140051b2c:	jae    0x140051b6d
   140051b2e:	add    DWORD PTR [rax],eax
   140051b30:	and    BYTE PTR [rax+0x4],dl
   140051b33:	add    BYTE PTR [rdi+rdi*1+0x1],bh
   140051b37:	add    BYTE PTR [rbx+0x40000140],bh
   140051b3d:	push   rax
   140051b3e:	add    al,0x0
   140051b40:	(bad)  
   140051b41:	rex add DWORD PTR [rax],eax
   140051b44:	ja     0x140051b89
   140051b46:	add    DWORD PTR [rax],eax
   140051b48:	(bad)  
   140051b49:	push   rax
   140051b4a:	add    al,0x0
   140051b4c:	add    BYTE PTR [rbx+0x1],0x0
   140051b50:	lahf   
   140051b51:	add    DWORD PTR [rax],r8d
   140051b54:	loopne 0x140051ba6
   140051b56:	add    al,0x0
   140051b58:	test   al,0x44
   140051b5a:	add    DWORD PTR [rax],eax
   140051b5c:	std    
   140051b5d:	add    DWORD PTR [rax],r8d
   140051b60:	mov    al,0x3a
   140051b62:	add    al,0x0
   140051b64:	add    al,0x45
   140051b66:	add    DWORD PTR [rax],eax
   140051b68:	(bad)  
   140051b69:	add    DWORD PTR [r8],r8d
   140051b6c:	cld    
   140051b6d:	push   rax
   140051b6e:	add    al,0x0
   140051b70:	(bad)  
   140051b71:	add    DWORD PTR [r8],r8d
   140051b74:	rex.RX add DWORD PTR cs:[rax],r8d
   140051b78:	xor    BYTE PTR [rdi],bl
   140051b7a:	add    al,0x0
   140051b7c:	rex
   140051b7d:	rex.RX add DWORD PTR [rax],r8d
   140051b80:	jo     0x140051bc8
   140051b82:	add    DWORD PTR [rax],eax
   140051b84:	(bad)  
   140051b85:	(bad)  
   140051b86:	add    al,0x0
   140051b88:	js     0x140051bd0
   140051b8a:	add    DWORD PTR [rax],eax
   140051b8c:	mov    esp,0x40000149
   140051b91:	push   rcx
   140051b92:	add    al,0x0
   140051b94:	(bad)  
   140051b95:	add    QWORD PTR [r8],rax
   140051b98:	fwait
   140051b99:	rex.WX add QWORD PTR [rax],rax
   140051b9c:	pop    rsp
   140051b9d:	push   rcx
   140051b9e:	add    al,0x0
   140051ba0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140051ba1:	rex.WX add QWORD PTR [rax],rax
   140051ba4:	jg     0x140051bf1
   140051ba6:	add    DWORD PTR [rax],eax
   140051ba8:	ins    BYTE PTR es:[rdi],dx
   140051ba9:	(bad)  
   140051baa:	add    al,0x0
   140051bac:	mov    BYTE PTR [rbx+0x1],cl
   140051baf:	add    BYTE PTR [rsp+rcx*2],dl
   140051bb2:	add    DWORD PTR [rax],eax
   140051bb4:	cmp    al,0x2d
   140051bb6:	add    al,0x0
   140051bb8:	sbb    al,0x4c
   140051bba:	add    DWORD PTR [rax],eax
   140051bbc:	jne    0x140051c0a
   140051bbe:	add    DWORD PTR [rax],eax
   140051bc0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140051bc1:	(bad)  
   140051bc2:	add    al,0x0
   140051bc4:	jl     0x140051c12
   140051bc6:	add    DWORD PTR [rax],eax
   140051bc8:	(bad)
   140051bcb:	add    BYTE PTR [rax-0x33fffbc6],dh
   140051bd1:	add    QWORD PTR [rax],r8
   140051bd4:	(bad)  
   140051bd5:	add    QWORD PTR [r8],r8
   140051bd8:	movabs al,ds:0x4700014d68000451
   140051be1:	rex.WRX add QWORD PTR [rax],r8
   140051be4:	mov    ah,0x51
   140051be6:	add    al,0x0
   140051be8:	push   rax
   140051be9:	rex.WRX add QWORD PTR [rax],r8
   140051bec:	add    al,0x4f
   140051bee:	add    DWORD PTR [rax],eax
   140051bf0:	cmp    BYTE PTR [rdx+0x4],dl
   140051bf3:	add    BYTE PTR [rdi+rcx*2],cl
   140051bf6:	add    DWORD PTR [rax],eax
   140051bf8:	clc    
   140051bf9:	push   rax
   140051bfa:	add    DWORD PTR [rax],eax
   140051bfc:	mov    eax,0x452
   140051c01:	push   rcx
   140051c02:	add    DWORD PTR [rax],eax
   140051c04:	mov    dl,BYTE PTR [rcx+0x1]
   140051c07:	add    BYTE PTR [rax],bh
   140051c09:	push   rbx
   140051c0a:	add    al,0x0
   140051c0c:	nop
   140051c0d:	push   rcx
   140051c0e:	add    DWORD PTR [rax],eax
   140051c10:	jne    0x140051c64
   140051c12:	add    DWORD PTR [rax],eax
   140051c14:	and    BYTE PTR [rsp+rax*1+0x0],cl
   140051c18:	jl     0x140051c6c
   140051c1a:	add    DWORD PTR [rax],eax
   140051c1c:	ret    
   140051c1d:	push   rdx
   140051c1e:	add    DWORD PTR [rax],eax
   140051c20:	rex.WR push rbx
   140051c22:	add    al,0x0
   140051c24:	int3   
   140051c25:	push   rdx
   140051c26:	add    DWORD PTR [rax],eax
   140051c28:	rcpps  xmm0,XMMWORD PTR [rcx]
   140051c2b:	add    ah,al
   140051c2d:	push   rbx
   140051c2e:	add    al,0x0
   140051c30:	sbb    BYTE PTR [rbx+0x1],dl
   140051c33:	add    BYTE PTR [rdi],ch
   140051c35:	push   rbx
   140051c36:	add    DWORD PTR [rax],eax
   140051c38:	mov    ah,0x1f
   140051c3a:	add    al,0x0
   140051c3c:	cmp    BYTE PTR [rbx+0x1],dl
   140051c3f:	add    bh,al
   140051c41:	push   rbx
   140051c42:	add    DWORD PTR [rax],eax
   140051c44:	cmp    BYTE PTR [rsp+rax*1+0x0],dl
   140051c48:	rcl    BYTE PTR [rbx+0x1],1
   140051c4b:	add    BYTE PTR [rdx+0x48000155],dl
   140051c51:	push   rsp
   140051c52:	add    al,0x0
   140051c54:	cwde   
   140051c55:	push   rbp
   140051c56:	add    DWORD PTR [rax],eax
   140051c58:	movabs ds:0xa8000454a0000156,al
   140051c61:	push   rsi
   140051c62:	add    DWORD PTR [rax],eax
   140051c64:	int3   
   140051c65:	push   rsi
   140051c66:	add    DWORD PTR [rax],eax
   140051c68:	mov    ah,0x1f
   140051c6a:	add    al,0x0
   140051c6c:	(bad)  
   140051c6d:	push   rsi
   140051c6e:	add    DWORD PTR [rax],eax
   140051c70:	out    dx,al
   140051c71:	push   rdi
   140051c72:	add    DWORD PTR [rax],eax
   140051c74:	lock push rsp
   140051c76:	add    al,0x0
   140051c78:	hlt    
   140051c79:	push   rdi
   140051c7a:	add    DWORD PTR [rax],eax
   140051c7c:	(bad)  
   140051c7d:	pop    rcx
   140051c7e:	add    DWORD PTR [rax],eax
   140051c80:	or     al,0x55
   140051c82:	add    al,0x0
   140051c84:	fcomp  QWORD PTR [rcx+0x1]
   140051c87:	add    BYTE PTR [rcx],bh
   140051c89:	pop    rdx
   140051c8a:	add    DWORD PTR [rax],eax
   140051c8c:	mov    al,0x3a
   140051c8e:	add    al,0x0
   140051c90:	rex pop rdx
   140051c92:	add    DWORD PTR [rax],eax
   140051c94:	and    eax,0x2000015b
   140051c99:	rex.WR add al,0x0
   140051c9c:	sub    al,0x5b
   140051c9e:	add    DWORD PTR [rax],eax
   140051ca0:	outs   dx,BYTE PTR ds:[rsi]
   140051ca1:	pop    rbx
   140051ca2:	add    DWORD PTR [rax],eax
   140051ca4:	rex.W
   140051ca5:	rex.B add al,0x0
   140051ca8:	je     0x140051d05
   140051caa:	add    DWORD PTR [rax],eax
   140051cac:	cmp    BYTE PTR [rcx+rax*1+0x0],bl
   140051cb0:	mov    BYTE PTR [rbp+0x4],dl
   140051cb3:	add    BYTE PTR [rsp+rbx*2+0x1],cl
   140051cb7:	add    BYTE PTR [rsi+0x5e],cl
   140051cba:	add    DWORD PTR [rax],eax
   140051cbc:	enter  0x455,0x0
   140051cc0:	push   rsp
   140051cc1:	pop    rsi
   140051cc2:	add    DWORD PTR [rax],eax
   140051cc4:	out    0x5e,al
   140051cc6:	add    DWORD PTR [rax],eax
   140051cc8:	in     al,0x55
   140051cca:	add    al,0x0
   140051ccc:	in     al,dx
   140051ccd:	pop    rsi
   140051cce:	add    DWORD PTR [rax],eax
   140051cd0:	jge    0x140051d31
   140051cd2:	add    DWORD PTR [rax],eax
   140051cd4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140051cd5:	(bad)  
   140051cd6:	add    al,0x0
   140051cd8:	test   BYTE PTR [rdi+0x1],bl
   140051cdb:	add    BYTE PTR [rdx+riz*2+0x55f40001],dl
   140051ce2:	add    al,0x0
   140051ce4:	movabs al,ds:0x680001632a000162
   140051ced:	push   rsi
   140051cee:	add    al,0x0
   140051cf0:	xor    BYTE PTR [rbx+0x1],ah
   140051cf3:	add    BYTE PTR [rdx+0x67],ch
   140051cf6:	add    DWORD PTR [rax],eax
   140051cf8:	loopne 0x140051d50
   140051cfa:	add    al,0x0
   140051cfc:	jo     0x140051d65
   140051cfe:	add    DWORD PTR [rax],eax
   140051d00:	pushw  0x1
   140051d04:	movabs al,ds:0x810001686c000457
   140051d0d:	imul   eax,DWORD PTR [rcx],0x4581800
   140051d13:	add    BYTE PTR [rax-0x3cfffe97],cl
   140051d19:	imul   eax,DWORD PTR [rcx],0x41f3000
   140051d1f:	add    ah,cl
   140051d21:	imul   eax,DWORD PTR [rcx],0x16a6b00
   140051d27:	add    BYTE PTR [rax+rbx*2],ch
   140051d2a:	add    al,0x0
   140051d2c:	je     0x140051d98
   140051d2e:	add    DWORD PTR [rax],eax
   140051d30:	icebp  
   140051d31:	push   0x1
   140051d33:	add    BYTE PTR [rax+0x1f],ah
   140051d36:	add    al,0x0
   140051d38:	cmp    al,0x6b
   140051d3a:	add    DWORD PTR [rax],eax
   140051d3c:	loopne 0x140051da9
   140051d3e:	add    DWORD PTR [rax],eax
   140051d40:	test   al,0x58
   140051d42:	add    al,0x0
   140051d44:	call   0x1b8051eb4
   140051d49:	ins    DWORD PTR es:[rdi],dx
   140051d4a:	add    DWORD PTR [rax],eax
   140051d4c:	ins    BYTE PTR es:[rdi],dx
   140051d4d:	(bad)  
   140051d4e:	add    al,0x0
   140051d50:	sub    BYTE PTR [rbp+0x1],0x0
   140051d54:	xchg   ecx,eax
   140051d55:	ins    DWORD PTR es:[rdi],dx
   140051d56:	add    DWORD PTR [rax],eax
   140051d58:	mov    ah,0x1f
   140051d5a:	add    al,0x0
   140051d5c:	cwde   
   140051d5d:	ins    DWORD PTR es:[rdi],dx
   140051d5e:	add    DWORD PTR [rax],eax
   140051d60:	rex.WXB outs dx,BYTE PTR ds:[rsi]
   140051d62:	add    DWORD PTR [rax],eax
   140051d64:	mov    esp,0x54000458
   140051d69:	outs   dx,BYTE PTR ds:[rsi]
   140051d6a:	add    DWORD PTR [rax],eax
   140051d6c:	add    al,0x6f
   140051d6e:	add    DWORD PTR [rax],eax
   140051d70:	add    BYTE PTR [rcx+0x4],bl
   140051d73:	add    BYTE PTR [rdi+rbp*2],cl
   140051d76:	add    DWORD PTR [rax],eax
   140051d78:	data16 jo 0x140051d7c
   140051d7b:	add    BYTE PTR [rax+0x59],al
   140051d7e:	add    al,0x0
   140051d80:	ins    BYTE PTR es:[rdi],dx
   140051d81:	jo     0x140051d84
   140051d83:	add    BYTE PTR [rcx+rsi*2+0x1],bl
   140051d87:	add    al,dl
   140051d89:	pop    rcx
   140051d8a:	add    al,0x0
   140051d8c:	fs jno 0x140051d90
   140051d8f:	add    BYTE PTR [rdx+rsi*2],dl
   140051d92:	add    DWORD PTR [rax],eax
   140051d94:	fcomp  QWORD PTR [rcx+0x4]
   140051d97:	add    BYTE PTR [rdx+rsi*2],bl
   140051d9a:	add    DWORD PTR [rax],eax
   140051d9c:	jb     0x140051e14
   140051d9e:	add    DWORD PTR [rax],eax
   140051da0:	sbb    BYTE PTR [rdx+0x4],bl
   140051da3:	add    BYTE PTR [rax+0x76],bh
   140051da6:	add    DWORD PTR [rax],eax
   140051da8:	(bad)  
   140051da9:	jbe    0x140051dac
   140051dab:	add    BYTE PTR [rdi+rbx*1+0x76980004],dh
   140051db2:	add    DWORD PTR [rax],eax
   140051db4:	scas   eax,DWORD PTR es:[rdi]
   140051db5:	jbe    0x140051db8
   140051db7:	add    BYTE PTR [rdi+rbx*1+0x76b80004],dh
   140051dbe:	add    DWORD PTR [rax],eax
   140051dc0:	xchg   BYTE PTR [rdi+0x1],dh
   140051dc3:	add    BYTE PTR [rax-0x73fffba5],cl
   140051dc9:	ja     0x140051dcc
   140051dcb:	add    BYTE PTR [rbx],dl
   140051dcd:	js     0x140051dd0
   140051dcf:	add    BYTE PTR [rax],cl
   140051dd1:	pop    rsp
   140051dd2:	add    al,0x0
   140051dd4:	sbb    al,0x78
   140051dd6:	add    DWORD PTR [rax],eax
   140051dd8:	rex.WB jns 0x140051ddc
   140051ddb:	add    BYTE PTR [rdi+rbx*1+0x79600004],bh
   140051de2:	add    DWORD PTR [rax],eax
   140051de4:	(bad)  
   140051de7:	add    BYTE PTR [rsp+rbx*2+0x79cc0004],ch
   140051dee:	add    DWORD PTR [rax],eax
   140051df0:	push   0x7a
   140051df2:	add    DWORD PTR [rax],eax
   140051df4:	mov    al,0x2b
   140051df6:	add    al,0x0
   140051df8:	jo     0x140051e74
   140051dfa:	add    DWORD PTR [rax],eax
   140051dfc:	stos   DWORD PTR es:[rdi],eax
   140051dfd:	jp     0x140051e00
   140051dff:	add    BYTE PTR [rax-0x4bfffbe0],bh
   140051e05:	jp     0x140051e08
   140051e07:	add    BYTE PTR [rcx],cl
   140051e09:	jnp    0x140051e0c
   140051e0b:	add    BYTE PTR [rcx+rax*2+0x4],ch
   140051e0f:	add    BYTE PTR [rax],dl
   140051e11:	jnp    0x140051e14
   140051e13:	add    BYTE PTR [rcx+0x7b],ch
   140051e16:	add    DWORD PTR [rax],eax
   140051e18:	ins    BYTE PTR es:[rdi],dx
   140051e19:	rex.B add al,0x0
   140051e1c:	jo     0x140051e99
   140051e1e:	add    DWORD PTR [rax],eax
   140051e20:	mov    ecx,0x4800017b
   140051e25:	rex.B add al,0x0
   140051e28:	sar    BYTE PTR [rbx+0x1],0x0
   140051e2c:	adc    eax,0x6c00017c
   140051e31:	rex.B add al,0x0
   140051e34:	sbb    al,0x7c
   140051e36:	add    DWORD PTR [rax],eax
   140051e38:	mov    ah,0x7c
   140051e3a:	add    DWORD PTR [rax],eax
   140051e3c:	mov    al,0x2b
   140051e3e:	add    al,0x0
   140051e40:	sar    BYTE PTR [rcx+rax*1+0x0],0x5
   140051e45:	jge    0x140051e48
   140051e47:	add    BYTE PTR [rax+0x1f],ah
   140051e4a:	add    al,0x0
   140051e4c:	adc    BYTE PTR [rbp+0x1],bh
   140051e4f:	add    BYTE PTR [rdi],dh
   140051e51:	jg     0x140051e54
   140051e53:	add    BYTE PTR [rsp+rbx*2+0x7f400004],dh
   140051e5a:	add    DWORD PTR [rax],eax
   140051e5c:	adc    BYTE PTR [rcx+0x2c100001],al
   140051e62:	add    al,0x0
   140051e64:	sbb    BYTE PTR [rcx-0x7e26ffff],al
   140051e6a:	add    DWORD PTR [rax],eax
   140051e6c:	rcr    BYTE PTR [rsp+rax*1+0x0],1
   140051e70:	loopne 0x140051df3
   140051e72:	add    DWORD PTR [rax],eax
   140051e74:	rex.WX test BYTE PTR [rcx],al
   140051e77:	add    al,ah
   140051e79:	pop    rsp
   140051e7a:	add    al,0x0
   140051e7c:	push   rax
   140051e7d:	test   BYTE PTR [rcx],al
   140051e7f:	add    BYTE PTR [rax+0x60000184],al
   140051e85:	(bad)  
   140051e86:	add    al,0x0
   140051e88:	mov    BYTE PTR [rcx+rax*1+0x184a000],al
   140051e8f:	add    BYTE PTR [rdi+rbx*1-0x7b57fffc],dh
   140051e96:	add    DWORD PTR [rax],eax
   140051e98:	sti    
   140051e99:	test   DWORD PTR [rcx],eax
   140051e9b:	add    BYTE PTR [rdi+rbx*1-0x79fbfffc],ah
   140051ea2:	add    DWORD PTR [rax],eax
   140051ea4:	mov    BYTE PTR [rcx+0x5d900001],cl
   140051eaa:	add    al,0x0
   140051eac:	nop
   140051ead:	mov    DWORD PTR [rcx],eax
   140051eaf:	add    ch,dh
   140051eb1:	mov    DWORD PTR [rcx],eax
   140051eb3:	add    BYTE PTR [rax-0x3fffba3],ch
   140051eb9:	mov    DWORD PTR [rcx],eax
   140051ebb:	add    bl,bl
   140051ebd:	mov    al,BYTE PTR [rcx]
   140051ebf:	add    BYTE PTR [rdi+rbx*1-0x750ffffc],ah
   140051ec6:	add    DWORD PTR [rax],eax
   140051ec8:	and    BYTE PTR [rbx+0x1f600001],cl
   140051ece:	add    al,0x0
   140051ed0:	sub    BYTE PTR [rbx-0x7477ffff],cl
   140051ed6:	add    DWORD PTR [rax],eax
   140051ed8:	xor    BYTE PTR [rdi],bl
   140051eda:	add    al,0x0
   140051edc:	nop
   140051edd:	mov    eax,DWORD PTR [rcx]
   140051edf:	add    dh,ah
   140051ee1:	mov    eax,DWORD PTR [rcx]
   140051ee3:	add    BYTE PTR [rax],dh
   140051ee5:	(bad)  
   140051ee6:	add    al,0x0
   140051ee8:	in     al,dx
   140051ee9:	mov    eax,DWORD PTR [rcx]
   140051eeb:	add    BYTE PTR [rax],dl
   140051eed:	lea    eax,[rcx]
   140051eef:	add    BYTE PTR [rax],bl
   140051ef1:	pop    rsi
   140051ef2:	add    al,0x0
   140051ef4:	and    BYTE PTR [rbp-0x7231ffff],cl
   140051efa:	add    DWORD PTR [rax],eax
   140051efc:	mov    esp,0xe000041f
   140051f01:	lea    eax,[rcx]
   140051f03:	add    BYTE PTR [rsi],dl
   140051f05:	mov    es,WORD PTR [rcx]
   140051f07:	add    BYTE PTR [rax+0x1f],ah
   140051f0a:	add    al,0x0
   140051f0c:	sbb    al,0x8e
   140051f0e:	add    DWORD PTR [rax],eax
   140051f10:	xchg   cx,ax
   140051f12:	add    DWORD PTR [rax],eax
   140051f14:	sub    al,0x5e
   140051f16:	add    al,0x0
   140051f18:	ins    BYTE PTR es:[rdi],dx
   140051f19:	xchg   ecx,eax
   140051f1a:	add    DWORD PTR [rax],eax
   140051f1c:	gs xchg ebp,eax
   140051f1e:	add    DWORD PTR [rax],eax
   140051f20:	rex.R pop rsi
   140051f22:	add    al,0x0
   140051f24:	ins    BYTE PTR es:[rdi],dx
   140051f25:	xchg   ebp,eax
   140051f26:	add    DWORD PTR [rax],eax
   140051f28:	xor    BYTE PTR [rdi+0x5e5c0001],dl
   140051f2e:	add    al,0x0
   140051f30:	cmp    BYTE PTR [rdi-0x6863ffff],dl
   140051f36:	add    DWORD PTR [rax],eax
   140051f38:	shl    BYTE PTR [rax],0x4
   140051f3b:	add    BYTE PTR [rdi+rdx*4-0x65bdffff],ah
   140051f42:	add    DWORD PTR [rax],eax
   140051f44:	ins    BYTE PTR es:[rdi],dx
   140051f45:	pop    rsi
   140051f46:	add    al,0x0
   140051f48:	rex.W (bad) 
   140051f4a:	add    DWORD PTR [rax],eax
   140051f4c:	adc    bl,BYTE PTR [rbp+0x5e880001]
   140051f52:	add    al,0x0
   140051f54:	sbb    BYTE PTR [rbp-0x60fcffff],bl
   140051f5a:	add    DWORD PTR [rax],eax
   140051f5c:	enter  0x443,0x0
   140051f60:	or     al,0x9f
   140051f62:	add    DWORD PTR [rax],eax
   140051f64:	jp     0x140051f05
   140051f66:	add    DWORD PTR [rax],eax
   140051f68:	mov    ah,0x1f
   140051f6a:	add    al,0x0
   140051f6c:	sbb    BYTE PTR [rdi-0x5e28ffff],0x1
   140051f73:	add    al,bl
   140051f75:	pop    rsi
   140051f76:	add    al,0x0
   140051f78:	loopne 0x140051f1b
   140051f7a:	add    DWORD PTR [rax],eax
   140051f7c:	rex.WRX movabs ds:0xa25400045ef00001,al
   140051f86:	add    DWORD PTR [rax],eax
   140051f88:	shl    BYTE PTR [rdx+0x1f600001],cl
   140051f8e:	add    al,0x0
   140051f90:	fsub   DWORD PTR [rdx-0x5d06ffff]
   140051f96:	add    DWORD PTR [rax],eax
   140051f98:	xor    BYTE PTR [rdi],bl
   140051f9a:	add    al,0x0
   140051f9c:	add    BYTE PTR [rbx-0x5cb8ffff],ah
   140051fa2:	add    DWORD PTR [rax],eax
   140051fa4:	(bad)  
   140051fa5:	(bad)  
   140051fa6:	add    al,0x0
   140051fa8:	push   rax
   140051fa9:	movabs ds:0x1f600001a3aa0001,eax
   140051fb2:	add    al,0x0
   140051fb4:	mov    al,0xa3
   140051fb6:	add    DWORD PTR [rax],eax
   140051fb8:	lods   al,BYTE PTR ds:[rsi]
   140051fb9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140051fba:	add    DWORD PTR [rax],eax
   140051fbc:	clc    
   140051fbd:	pop    rsi
   140051fbe:	add    al,0x0
   140051fc0:	mov    ah,0xa5
   140051fc2:	add    DWORD PTR [rax],eax
   140051fc4:	popf   
   140051fc5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140051fc6:	add    DWORD PTR [rax],eax
   140051fc8:	or     al,0x5f
   140051fca:	add    al,0x0
   140051fcc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140051fcd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140051fce:	add    DWORD PTR [rax],eax
   140051fd0:	xor    BYTE PTR [rdi+0x5f240001],ah
   140051fd6:	add    al,0x0
   140051fd8:	cmp    BYTE PTR [rdi-0x5820ffff],ah
   140051fde:	add    DWORD PTR [rax],eax
   140051fe0:	mov    al,0x5f
   140051fe2:	add    al,0x0
   140051fe4:	call   0xdd052190
   140051fe9:	test   al,0x1
   140051feb:	add    BYTE PTR [rax+0x60],al
   140051fee:	add    al,0x0
   140051ff0:	shr    BYTE PTR [rax-0x56eaffff],0x1
   140051ff7:	add    BYTE PTR [rax+0x1f],ah
   140051ffa:	add    al,0x0
   140051ffc:	push   rax
   140051ffd:	test   eax,0xa9770001
   140052002:	add    DWORD PTR [rax],eax
   140052004:	xor    BYTE PTR [rdi],bl
   140052006:	add    al,0x0
   140052008:	sub    BYTE PTR [rcx-0x5630ffff],0x1
   14005200f:	add    BYTE PTR [rdi+rbx*1-0x5627fffc],ah
   140052016:	add    DWORD PTR [rax],eax
   140052018:	(bad)  
   140052019:	stos   DWORD PTR es:[rdi],eax
   14005201a:	add    DWORD PTR [rax],eax
   14005201c:	shl    BYTE PTR [rax+0x4],1
   14005201f:	add    BYTE PTR [rbx+rbp*4],ah
   140052022:	add    DWORD PTR [rax],eax
   140052024:	lods   eax,DWORD PTR ds:[rsi]
   140052025:	lods   al,BYTE PTR ds:[rsi]
   140052026:	add    DWORD PTR [rax],eax
   140052028:	fsub   QWORD PTR [rax+0x4]
   14005202b:	add    BYTE PTR [rsp+rbp*4-0x52e6ffff],dh
   140052032:	add    DWORD PTR [rax],eax
   140052034:	lods   al,BYTE PTR ds:[rsi]
   140052035:	pop    rsp
   140052036:	add    al,0x0
   140052038:	and    BYTE PTR [rbp-0x52abffff],ch
   14005203e:	add    DWORD PTR [rax],eax
   140052040:	mov    eax,0x5c000420
   140052045:	lods   eax,DWORD PTR ds:[rsi]
   140052046:	add    DWORD PTR [rax],eax
   140052048:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140052049:	lods   eax,DWORD PTR ds:[rsi]
   14005204a:	add    DWORD PTR [rax],eax
   14005204c:	rex.W
   14005204d:	rex.B add al,0x0
   140052050:	mov    al,0xad
   140052052:	add    DWORD PTR [rax],eax
   140052054:	xor    BYTE PTR [rsi+0x60f40001],ch
   14005205a:	add    al,0x0
   14005205c:	cmp    BYTE PTR [rsi-0x5150ffff],ch
   140052062:	add    DWORD PTR [rax],eax
   140052064:	cld    
   140052065:	(bad)  
   140052066:	add    al,0x0
   140052068:	mov    eax,0xe10001ae
   14005206d:	mov    cl,0x1
   14005206f:	add    BYTE PTR [rcx+riz*2-0x4e17fffc],ah
   140052076:	add    DWORD PTR [rax],eax
   140052078:	sbb    BYTE PTR [rdx+0x1f600001],dh
   14005207e:	add    al,0x0
   140052080:	and    BYTE PTR [rdx-0x4da1ffff],dh
   140052086:	add    DWORD PTR [rax],eax
   140052088:	xor    BYTE PTR [rdi],bl
   14005208a:	add    al,0x0
   14005208c:	fs mov dl,0x1
   14005208f:	add    BYTE PTR [rdx+rsi*4+0x1],bh
   140052093:	add    BYTE PTR [rdi+rbx*1-0x4d7bfffc],dh
   14005209a:	add    DWORD PTR [rax],eax
   14005209c:	(bad)  
   14005209d:	mov    bl,0x1
   14005209f:	add    BYTE PTR [rax-0x6ffffb9e],dl
   1400520a5:	mov    bl,0x1
   1400520a7:	add    BYTE PTR [rsi+rsi*4+0x1],ah
   1400520ab:	add    al,bl
   1400520ad:	(bad)  
   1400520ae:	add    al,0x0
   1400520b0:	jo     0x140052068
   1400520b2:	add    DWORD PTR [rax],eax
   1400520b4:	movabs r9,0xb950000463980001
   1400520be:	add    DWORD PTR [rax],eax
   1400520c0:	mov    edx,0x700001bc
   1400520c5:	fs add al,0x0
   1400520c8:	sar    BYTE PTR [rcx+rax*1+0x1be5600],0x0
   1400520d0:	mov    WORD PTR [rsp+rax*1+0x0],fs
   1400520d4:	(bad)  
   1400520d5:	mov    esi,0xc0e60001
   1400520da:	add    DWORD PTR [rax],eax
   1400520dc:	call   0x130052545
   1400520e1:	rol    BYTE PTR [rcx],0x0
   1400520e4:	(bad)  
   1400520e5:	rol    DWORD PTR [rcx],0x0
   1400520e8:	or     al,0x65
   1400520ea:	add    al,0x0
   1400520ec:	and    cl,al
   1400520ee:	add    DWORD PTR [rax],eax
   1400520f0:	rex.XB rol DWORD PTR [r9],0x0
   1400520f4:	mov    WORD PTR [rbp+0x4],fs
   1400520f7:	add    BYTE PTR [rcx+rax*8+0x1],cl
   1400520fb:	add    BYTE PTR [rdi],dl
   1400520fd:	mov    DWORD PTR [rcx],0x4660c00
   140052103:	add    BYTE PTR [rax],ah
   140052105:	mov    DWORD PTR [rcx],0x1c77e00
   14005210b:	add    BYTE PTR [rax+0x1f],ah
   14005210e:	add    al,0x0
   140052110:	test   bh,al
   140052112:	add    DWORD PTR [rax],eax
   140052114:	push   rcx
   140052115:	leave  
   140052116:	add    DWORD PTR [rax],eax
   140052118:	mov    BYTE PTR [rsi+0x4],ah
   14005211b:	add    BYTE PTR [rax-0x37],bl
   14005211e:	add    DWORD PTR [rax],eax
   140052120:	rex.WB retf 
   140052122:	add    DWORD PTR [rax],eax
   140052124:	movabs al,ds:0x5a0001cb50000466
   14005212d:	int    0x1
   14005212f:	add    BYTE PTR [rax+0x60000466],dh
   140052135:	int    0x1
   140052137:	add    BYTE PTR [rsi+0x600001cd],dl
   14005213d:	(bad)  
   14005213e:	add    al,0x0
   140052140:	pushf  
   140052141:	int    0x1
   140052143:	add    BYTE PTR [rdi-0x32],ah
   140052146:	add    DWORD PTR [rax],eax
   140052148:	nop
   140052149:	addr32 add al,0x0
   14005214c:	jo     0x14005211c
   14005214e:	add    DWORD PTR [rax],eax
   140052150:	lock iret 
   140052152:	add    DWORD PTR [rax],eax
   140052154:	pushf  
   140052155:	addr32 add al,0x0
   140052158:	clc    
   140052159:	iret   
   14005215a:	add    DWORD PTR [rax],eax
   14005215c:	(bad)  
   14005215d:	rol    BYTE PTR [rcx],1
   14005215f:	add    BYTE PTR [rbp*1-0x2f2ffffc],bh
   140052166:	add    DWORD PTR [rax],eax
   140052168:	sub    eax,0x600001d1
   14005216d:	(bad)  
   14005216e:	add    al,0x0
   140052170:	xor    al,0xd1
   140052172:	add    DWORD PTR [rax],eax
   140052174:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140052175:	rol    DWORD PTR [rcx],1
   140052177:	add    BYTE PTR [rdi+rbx*1-0x2e53fffc],ah
   14005217e:	add    DWORD PTR [rax],eax
   140052180:	cmp    edx,edx
   140052182:	add    DWORD PTR [rax],eax
   140052184:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140052185:	(bad)  
   140052186:	add    al,0x0
   140052188:	rex.R rol BYTE PTR [rcx],cl
   14005218b:	add    BYTE PTR [rcx-0x2e],ah
   14005218e:	add    DWORD PTR [rax],eax
   140052190:	xor    BYTE PTR [rdi],bl
   140052192:	add    al,0x0
   140052194:	push   0x1e0001d2
   140052199:	rol    DWORD PTR [rcx],cl
   14005219b:	add    BYTE PTR [rax+0x24000467],dh
   1400521a1:	rol    DWORD PTR [rcx],cl
   1400521a3:	add    dl,dl
   1400521a5:	rol    DWORD PTR [rcx],cl
   1400521a7:	add    BYTE PTR [rax+0x10000428],dl
   1400521ad:	(bad)  
   1400521ae:	add    DWORD PTR [rax],eax
   1400521b0:	adc    ch,0x1
   1400521b3:	add    ah,al
   1400521b5:	addr32 add al,0x0
   1400521b8:	mov    ch,dl
   1400521ba:	add    DWORD PTR [rax],eax
   1400521bc:	ds (bad) 
   1400521be:	add    DWORD PTR [rax],eax
   1400521c0:	loopne 0x140052229
   1400521c2:	add    al,0x0
   1400521c4:	rex.R (bad) 
   1400521c6:	add    DWORD PTR [rax],eax
   1400521c8:	retf   0x1d7
   1400521cb:	add    BYTE PTR [rax+0x68],dh
   1400521ce:	add    al,0x0
   1400521d0:	rcl    bh,1
   1400521d2:	add    DWORD PTR [rax],eax
   1400521d4:	out    0xd7,al
   1400521d6:	add    DWORD PTR [rax],eax
   1400521d8:	mov    ah,0x1f
   1400521da:	add    al,0x0
   1400521dc:	in     al,dx
   1400521dd:	xlat   BYTE PTR ds:[rbx]
   1400521de:	add    DWORD PTR [rax],eax
   1400521e0:	rcr    eax,1
   1400521e2:	add    DWORD PTR [rax],eax
   1400521e4:	and    BYTE PTR [rsp+rax*1+0x0],cl
   1400521e8:	fcomp  st(0)
   1400521ea:	add    DWORD PTR [rax],eax
   1400521ec:	sbb    bl,cl
   1400521ee:	add    DWORD PTR [rax],eax
   1400521f0:	call   0x17005265d
   1400521f5:	fld    DWORD PTR [rcx]
   1400521f7:	add    BYTE PTR [rdx-0x27],ch
   1400521fa:	add    DWORD PTR [rax],eax
   1400521fc:	xor    BYTE PTR [rdi],bl
   1400521fe:	add    al,0x0
   140052200:	jo     0x1400521db
   140052202:	add    DWORD PTR [rax],eax
   140052204:	sbb    edx,0x1
   140052207:	add    BYTE PTR [rax+0x69],bl
   14005220a:	add    al,0x0
   14005220c:	mov    edx,ds
   14005220e:	add    DWORD PTR [rax],eax
   140052210:	mov    eax,0x300001da
   140052215:	(bad)  
   140052216:	add    al,0x0
   140052218:	lock fiadd DWORD PTR [rcx]
   14005221b:	add    BYTE PTR [rdi-0x25],al
   14005221e:	add    DWORD PTR [rax],eax
   140052220:	(bad)  
   140052221:	(bad)  
   140052222:	add    al,0x0
   140052224:	push   rax
   140052225:	fild   DWORD PTR [rcx]
   140052227:	add    BYTE PTR [rbp+0x6c0001db],ch
   14005222d:	rex.B add al,0x0
   140052230:	mov    ah,0xdb
   140052232:	add    DWORD PTR [rax],eax
   140052234:	sbb    eax,0xac0001dc
   140052239:	pop    rsp
   14005223a:	add    al,0x0
   14005223c:	and    al,0xdc
   14005223e:	add    DWORD PTR [rax],eax
   140052240:	jns    0x14005221e
   140052242:	add    DWORD PTR [rax],eax
   140052244:	ins    BYTE PTR es:[rdi],dx
   140052245:	rex.B add al,0x0
   140052248:	sbb    ah,0x1
   14005224b:	add    bh,bh
   14005224d:	fadd   QWORD PTR [rcx]
   14005224f:	add    BYTE PTR [rcx+rbp*2+0x4],dh
   140052253:	add    BYTE PTR [rax],dl
   140052255:	fld    QWORD PTR [rcx]
   140052257:	add    BYTE PTR [rax-0x23],al
   14005225a:	add    DWORD PTR [rax],eax
   14005225c:	(bad)  
   14005225d:	(bad)  
   14005225e:	add    al,0x0
   140052260:	pop    rsp
   140052261:	fld    QWORD PTR [rcx]
   140052263:	add    BYTE PTR [rsi+0x1c0001df],ch
   140052269:	push   0x4
   14005226b:	add    BYTE PTR [rdi+rbx*8-0x1f15ffff],dh
   140052272:	add    DWORD PTR [rax],eax
   140052274:	enter  0x46a,0x0
   140052278:	lock loopne 0x14005227c
   14005227b:	add    BYTE PTR [rax-0x1bfffe1f],ah
   140052281:	and    BYTE PTR [rax+rax*1],al
   140052284:	test   al,0xe1
   140052286:	add    DWORD PTR [rax],eax
   140052288:	rex.WRB jrcxz 0x14005228c
   14005228b:	add    BYTE PTR [rbx+rbp*2+0x4],ch
   14005228f:	add    BYTE PTR [rbx+riz*8+0x1],dl
   140052293:	add    BYTE PTR [rsi+riz*8],dl
   140052296:	add    DWORD PTR [rax],eax
   140052298:	in     al,dx
   140052299:	imul   eax,DWORD PTR [rax+rax*1],0x1c
   14005229d:	out    0x1,al
   14005229f:	add    BYTE PTR [rcx],dl
   1400522a1:	call   0x1ac2d22a7
   1400522a6:	add    al,0x0
   1400522a8:	sbb    al,ch
   1400522aa:	add    DWORD PTR [rax],eax
   1400522ac:	out    0xe8,al
   1400522ae:	add    DWORD PTR [rax],eax
   1400522b0:	test   al,0x6c
   1400522b2:	add    al,0x0
   1400522b4:	in     al,dx
   1400522b5:	call   0x12a5a22bb
   1400522ba:	add    DWORD PTR [rax],eax
   1400522bc:	shr    BYTE PTR [rsp+rax*1+0x0],0x60
   1400522c1:	(bad)  
   1400522c2:	add    DWORD PTR [rax],eax
   1400522c4:	cmp    ch,bl
   1400522c6:	add    DWORD PTR [rax],eax
   1400522c8:	fsubr  QWORD PTR [rsp+rax*1+0x0]
   1400522cc:	rex jmp 0x1400522d0
   1400522cf:	add    BYTE PTR [rbx],ah
   1400522d1:	in     al,dx
   1400522d2:	add    DWORD PTR [rax],eax
   1400522d4:	fsubr  QWORD PTR [rsp+rax*1+0x0]
   1400522d8:	xor    ah,ch
   1400522da:	add    DWORD PTR [rax],eax
   1400522dc:	adc    ebp,ebp
   1400522de:	add    DWORD PTR [rax],eax
   1400522e0:	fsubr  QWORD PTR [rsp+rax*1+0x0]
   1400522e4:	and    ch,ch
   1400522e6:	add    DWORD PTR [rax],eax
   1400522e8:	cmc    
   1400522e9:	in     eax,dx
   1400522ea:	add    DWORD PTR [rax],eax
   1400522ec:	clc    
   1400522ed:	ins    BYTE PTR es:[rdi],dx
   1400522ee:	add    al,0x0
   1400522f0:	cld    
   1400522f1:	in     eax,dx
   1400522f2:	add    DWORD PTR [rax],eax
   1400522f4:	mov    ah,0xee
   1400522f6:	add    DWORD PTR [rax],eax
   1400522f8:	adc    BYTE PTR [rbp+0x4],ch
   1400522fb:	add    BYTE PTR [rax-0x11],al
   1400522fe:	add    DWORD PTR [rax],eax
   140052300:	clc    
   140052301:	out    dx,eax
   140052302:	add    DWORD PTR [rax],eax
   140052304:	adc    BYTE PTR [rbp+0x4],ch
   140052307:	add    BYTE PTR [rax],al
   140052309:	lock add DWORD PTR [rax],eax
   14005230c:	rex.R
   14005230d:	lock add DWORD PTR [rax],eax
   140052310:	mov    al,0x20
   140052312:	add    al,0x0
   140052314:	rex.WR
   140052315:	lock add DWORD PTR [rax],eax
   140052318:	outs   dx,BYTE PTR ds:[rsi]
   140052319:	icebp  
   14005231a:	add    DWORD PTR [rax],eax
   14005231c:	sub    BYTE PTR [rbp+0x4],ch
   14005231f:	add    BYTE PTR [rax-0xbfffe0f],dh
   140052325:	icebp  
   140052326:	add    DWORD PTR [rax],eax
   140052328:	mov    al,0x20
   14005232a:	add    al,0x0
   14005232c:	add    dl,dh
   14005232e:	add    DWORD PTR [rax],eax
   140052330:	movabs ds:0xb000046d3c0001f2,eax
   140052339:	repnz add DWORD PTR [rax],eax
   14005233c:	push   rbx
   14005233d:	repz add DWORD PTR [rax],eax
   140052340:	cmp    al,0x6d
   140052342:	add    al,0x0
   140052344:	shl    bl,1
   140052346:	add    DWORD PTR [rax],eax
   140052348:	jrcxz  0x14005233f
   14005234a:	add    DWORD PTR [rax],eax
   14005234c:	push   rax
   14005234d:	ins    DWORD PTR es:[rdi],dx
   14005234e:	add    al,0x0
   140052350:	adc    dh,dh
   140052352:	add    DWORD PTR [rax],eax
   140052354:	(bad)  
   140052355:	test   BYTE PTR [rcx],0x0
   140052358:	add    BYTE PTR [rsi+0x4],ch
   14005235b:	add    al,dl
   14005235d:	test   BYTE PTR [rcx],0x0
   140052360:	or     al,0xf8
   140052362:	add    DWORD PTR [rax],eax
   140052364:	adc    BYTE PTR [rsi+0x4],ch
   140052367:	add    BYTE PTR [rax+rdi*8],dh
   14005236a:	add    DWORD PTR [rax],eax
   14005236c:	movabs eax,ds:0xa8000420e40001f8
   140052375:	clc    
   140052376:	add    DWORD PTR [rax],eax
   140052378:	push   0xfffffffffffffff9
   14005237a:	add    DWORD PTR [rax],eax
   14005237c:	sub    al,0x6e
   14005237e:	add    al,0x0
   140052380:	mov    al,0xf9
   140052382:	add    DWORD PTR [rax],eax
   140052384:	xlat   BYTE PTR ds:[rbx]
   140052385:	stc    
   140052386:	add    DWORD PTR [rax],eax
   140052388:	xor    BYTE PTR [rdi],bl
   14005238a:	add    al,0x0
   14005238c:	loopne 0x140052387
   14005238e:	add    DWORD PTR [rax],eax
   140052390:	cs cli 
   140052392:	add    DWORD PTR [rax],eax
   140052394:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140052395:	(bad)  
   140052396:	add    al,0x0
   140052398:	xor    al,0xfa
   14005239a:	add    DWORD PTR [rax],eax
   14005239c:	mov    ah,0xfa
   14005239e:	add    DWORD PTR [rax],eax
   1400523a0:	cmp    al,0x6e
   1400523a2:	add    al,0x0
   1400523a4:	sar    dl,0x1
   1400523a7:	add    al,dh
   1400523a9:	cli    
   1400523aa:	add    DWORD PTR [rax],eax
   1400523ac:	(bad)  
   1400523ad:	(bad)  
   1400523ae:	add    al,0x0
   1400523b0:	clc    
   1400523b1:	cli    
   1400523b2:	add    DWORD PTR [rax],eax
   1400523b4:	rex.W sti 
   1400523b6:	add    DWORD PTR [rax],eax
   1400523b8:	rex.W
   1400523b9:	rex.B add al,0x0
   1400523bc:	push   rax
   1400523bd:	sti    
   1400523be:	add    DWORD PTR [rax],eax
   1400523c0:	(bad)  
   1400523c1:	sti    
   1400523c2:	add    DWORD PTR [rax],eax
   1400523c4:	jo     0x140052434
   1400523c6:	add    al,0x0
   1400523c8:	int3   
   1400523c9:	sti    
   1400523ca:	add    DWORD PTR [rax],eax
   1400523cc:	and    eax,0x6c0001fc
   1400523d1:	rex.B add al,0x0
   1400523d4:	sub    al,0xfc
   1400523d6:	add    DWORD PTR [rax],eax
   1400523d8:	xchg   ebp,eax
   1400523d9:	cld    
   1400523da:	add    DWORD PTR [rax],eax
   1400523dc:	lods   al,BYTE PTR ds:[rsi]
   1400523dd:	pop    rsp
   1400523de:	add    al,0x0
   1400523e0:	pushf  
   1400523e1:	cld    
   1400523e2:	add    DWORD PTR [rax],eax
   1400523e4:	add    ch,bh
   1400523e6:	add    DWORD PTR [rax],eax
   1400523e8:	lods   al,BYTE PTR ds:[rsi]
   1400523e9:	pop    rsp
   1400523ea:	add    al,0x0
   1400523ec:	or     ch,bh
   1400523ee:	add    DWORD PTR [rax],eax
   1400523f0:	mov    bh,ch
   1400523f2:	add    DWORD PTR [rax],eax
   1400523f4:	js     0x140052464
   1400523f6:	add    al,0x0
   1400523f8:	nop
   1400523f9:	std    
   1400523fa:	add    DWORD PTR [rax],eax
   1400523fc:	repz add al,BYTE PTR [rdx]
   1400523ff:	add    BYTE PTR [rax-0x3fffb92],al
   140052405:	add    al,BYTE PTR [rdx]
   140052407:	add    BYTE PTR [rbp+rax*1+0x2],al
   14005240b:	add    BYTE PTR [rdi+rbp*2+0x4],bh
   14005240f:	add    BYTE PTR [rbp+rax*1+0x2],cl
   140052413:	add    dh,dl
   140052415:	add    eax,0x1fbc0002
   14005241a:	add    al,0x0
   14005241c:	loopne 0x140052423
   14005241e:	add    al,BYTE PTR [rax]
   140052420:	cs (bad) 
   140052422:	add    al,BYTE PTR [rax]
   140052424:	push   rsp
   140052425:	jo     0x14005242b
   140052427:	add    BYTE PTR [rax+0x7],al
   14005242a:	add    al,BYTE PTR [rax]
   14005242c:	jbe    0x140052436
   14005242e:	add    al,BYTE PTR [rax]
   140052430:	hlt    
   140052431:	jo     0x140052437
   140052433:	add    BYTE PTR [rax+rcx*1+0x2],bh
   140052437:	add    BYTE PTR [rcx+0x9],dh
   14005243a:	add    al,BYTE PTR [rax]
   14005243c:	xchg   esp,eax
   14005243d:	jno    0x140052443
   14005243f:	add    BYTE PTR [rax-0x68fffdf7],al
   140052445:	or     DWORD PTR [rdx],eax
   140052447:	add    BYTE PTR [rax],dh
   140052449:	(bad)  
   14005244a:	add    al,0x0
   14005244c:	movabs al,ds:0xe000020b30000209
   140052455:	jno    0x14005245b
   140052457:	add    BYTE PTR [rax+0xb],al
   14005245a:	add    al,BYTE PTR [rax]
   14005245c:	add    DWORD PTR [rip+0x72380002],ecx        # 0x1b23d2464
   140052462:	add    al,0x0
   140052464:	adc    BYTE PTR [rip+0xdd60002],cl        # 0x14ddb246c
   14005246a:	add    al,BYTE PTR [rax]
   14005246c:	sub    al,0x73
   14005246e:	add    al,0x0
   140052470:	loopne 0x14005247f
   140052472:	add    al,BYTE PTR [rax]
   140052474:	xchg   esp,eax
   140052475:	lar    eax,WORD PTR [rax]
   140052478:	in     al,0x73
   14005247a:	add    al,0x0
   14005247c:	movabs al,ds:0x600002101200020f
   140052485:	(bad)  
   140052486:	add    al,0x0
   140052488:	xor    BYTE PTR [rax],dl
   14005248a:	add    al,BYTE PTR [rax]
   14005248c:	(bad)  
   14005248d:	adc    BYTE PTR [rdx],al
   14005248f:	add    BYTE PTR [rax+0x1f],ah
   140052492:	add    al,0x0
   140052494:	movabs al,ds:0xbc00021299000210
   14005249d:	(bad)  
   14005249e:	add    al,0x0
   1400524a0:	movabs al,ds:0xbc0002133f000212
   1400524a9:	(bad)  
   1400524aa:	add    al,0x0
   1400524ac:	push   rax
   1400524ad:	adc    eax,DWORD PTR [rdx]
   1400524af:	add    BYTE PTR [rdi+0x60000213],dl
   1400524b5:	(bad)  
   1400524b6:	add    al,0x0
   1400524b8:	movabs al,ds:0x60000213ea000213
   1400524c1:	(bad)  
   1400524c2:	add    al,0x0
   1400524c4:	lock adc eax,DWORD PTR [rdx]
   1400524c7:	add    BYTE PTR [rsp+rdx*1+0x1f6c0002],ch
   1400524ce:	add    al,0x0
   1400524d0:	rcl    BYTE PTR [rdx+rax*1],0x0
   1400524d4:	lock adc al,0x2
   1400524d7:	add    BYTE PTR [rax+0x1f],ah
   1400524da:	add    al,0x0
   1400524dc:	add    BYTE PTR [rip+0x153a0002],dl        # 0x1553f24e4
   1400524e2:	add    al,BYTE PTR [rax]
   1400524e4:	(bad)  
   1400524e5:	(bad)  
   1400524e6:	add    al,0x0
   1400524e8:	rex adc eax,0x157a0002
   1400524ee:	add    al,BYTE PTR [rax]
   1400524f0:	(bad)  
   1400524f1:	(bad)  
   1400524f2:	add    al,0x0
   1400524f4:	adc    BYTE PTR [rip+0x15ba0002],0x2        # 0x155bf24fd
   1400524fb:	add    BYTE PTR [rax+0x1f],ah
   1400524fe:	add    al,0x0
   140052500:	rcl    BYTE PTR [rip+0x15fa0002],0x2        # 0x155ff2509
   140052507:	add    BYTE PTR [rax+0x1f],ah
   14005250a:	add    al,0x0
   14005250c:	add    BYTE PTR [rsi],dl
   14005250e:	add    al,BYTE PTR [rax]
   140052510:	cmp    dl,BYTE PTR [rsi]
   140052512:	add    al,BYTE PTR [rax]
   140052514:	(bad)  
   140052515:	(bad)  
   140052516:	add    al,0x0
   140052518:	rex (bad) 
   14005251a:	add    al,BYTE PTR [rax]
   14005251c:	jp     0x140052534
   14005251e:	add    al,BYTE PTR [rax]
   140052520:	(bad)  
   140052521:	(bad)  
   140052522:	add    al,0x0
   140052524:	adc    BYTE PTR [rsi],0x2
   140052527:	add    BYTE PTR [rbp+0x19],al
   14005252a:	add    al,BYTE PTR [rax]
   14005252c:	in     al,dx
   14005252d:	je     0x140052533
   14005252f:	add    BYTE PTR [rcx+rbx*1+0x2],cl
   140052533:	add    BYTE PTR [rdi],cl
   140052535:	sbb    al,BYTE PTR [rdx]
   140052537:	add    BYTE PTR [rdi+rbx*1+0x1a200004],ah
   14005253e:	add    al,BYTE PTR [rax]
   140052540:	fcomp  QWORD PTR [rdx]
   140052542:	add    al,BYTE PTR [rax]
   140052544:	(bad)  
   140052545:	(bad)  
   140052546:	add    al,0x0
   140052548:	lock sbb al,BYTE PTR [rdx]
   14005254b:	add    BYTE PTR [rcx],dl
   14005254d:	sbb    al,0x2
   14005254f:	add    BYTE PTR [rax+0x20000475],bh
   140052555:	sbb    al,0x2
   140052557:	add    dh,ah
   140052559:	(bad)  
   14005255a:	add    al,BYTE PTR [rax]
   14005255c:	enter  0x475,0x0
   140052560:	lock (bad) 
   140052562:	add    al,BYTE PTR [rax]
   140052564:	sub    DWORD PTR [rcx],esp
   140052566:	add    al,BYTE PTR [rax]
   140052568:	adc    BYTE PTR [rsi+0x4],dh
   14005256b:	add    BYTE PTR [rax],dh
   14005256d:	and    DWORD PTR [rdx],eax
   14005256f:	add    ch,bh
   140052571:	and    DWORD PTR [rdx],eax
   140052573:	add    ah,ah
   140052575:	and    BYTE PTR [rax+rax*1],al
   140052578:	adc    BYTE PTR [rdx],ah
   14005257a:	add    al,BYTE PTR [rax]
   14005257c:	mov    ah,0x22
   14005257e:	add    al,BYTE PTR [rax]
   140052580:	rex.W jbe 0x140052587
   140052583:	add    al,al
   140052585:	and    al,BYTE PTR [rdx]
   140052587:	add    BYTE PTR [rbx+riz*1+0x2],ah
   14005258b:	add    BYTE PTR [rax+0x70000476],al
   140052591:	and    eax,DWORD PTR [rdx]
   140052593:	add    BYTE PTR ds:0x76b00002,dl
   14005259a:	add    al,0x0
   14005259c:	sbb    al,0x25
   14005259e:	add    al,BYTE PTR [rax]
   1400525a0:	lods   al,BYTE PTR ds:[rsi]
   1400525a1:	(bad)  
   1400525a2:	add    al,BYTE PTR [rax]
   1400525a4:	call   0xf4052a1f
   1400525a9:	(bad)  
   1400525aa:	add    al,BYTE PTR [rax]
   1400525ac:	(bad)
   1400525af:	add    ah,bh
   1400525b1:	jbe    0x1400525b7
   1400525b3:	add    al,dl
   1400525b5:	sub    eax,DWORD PTR [rdx]
   1400525b7:	add    bl,cl
   1400525b9:	sub    eax,0x77400002
   1400525be:	add    al,0x0
   1400525c0:	(bad)  
   1400525c1:	sub    eax,0x2e600002
   1400525c6:	add    al,BYTE PTR [rax]
   1400525c8:	xor    BYTE PTR [rdi],bl
   1400525ca:	add    al,0x0
   1400525cc:	movabs al,ds:0x6000022ef700022e
   1400525d5:	(bad)  
   1400525d6:	add    al,0x0
   1400525d8:	add    BYTE PTR [rdi],ch
   1400525da:	add    al,BYTE PTR [rax]
   1400525dc:	(bad)  
   1400525dd:	(bad)  
   1400525de:	add    al,BYTE PTR [rax]
   1400525e0:	mov    ah,0x1f
   1400525e2:	add    al,0x0
   1400525e4:	and    BYTE PTR [rdi],ch
   1400525e6:	add    al,BYTE PTR [rax]
   1400525e8:	rex.RXB (bad) 
   1400525ea:	add    al,BYTE PTR [rax]
   1400525ec:	xor    BYTE PTR [rdi],bl
   1400525ee:	add    al,0x0
   1400525f0:	push   rax
   1400525f1:	(bad)  
   1400525f2:	add    al,BYTE PTR [rax]
   1400525f4:	in     eax,0x2f
   1400525f6:	add    al,BYTE PTR [rax]
   1400525f8:	mov    BYTE PTR [rdi+0x4],dh
   1400525fb:	add    ah,ch
   1400525fd:	(bad)  
   1400525fe:	add    al,BYTE PTR [rax]
   140052600:	xor    DWORD PTR [rax],0x78100002
   140052606:	add    al,0x0
   140052608:	mov    BYTE PTR [rax],dh
   14005260a:	add    al,BYTE PTR [rax]
   14005260c:	sbb    eax,0xa0000231
   140052611:	js     0x140052617
   140052613:	add    BYTE PTR [rcx+rsi*1],ah
   140052616:	add    al,BYTE PTR [rax]
   140052618:	mov    ch,0x31
   14005261a:	add    al,BYTE PTR [rax]
   14005261c:	xor    BYTE PTR [rcx+0x4],bh
   14005261f:	add    BYTE PTR [rcx+rsi*1+0x343f0002],bh
   140052626:	add    al,BYTE PTR [rax]
   140052628:	cmp    al,0x79
   14005262a:	add    al,0x0
   14005262c:	rex.W xor al,0x2
   14005262f:	add    BYTE PTR [rcx+0x35],al
   140052632:	add    al,BYTE PTR [rax]
   140052634:	enter  0x479,0x0
   140052638:	xor    rax,0x35ba0002
   14005263e:	add    al,BYTE PTR [rax]
   140052640:	rex.W jp 0x140052647
   140052643:	add    al,al
   140052645:	xor    eax,0x36220002
   14005264a:	add    al,BYTE PTR [rax]
   14005264c:	movabs al,ds:0x8b0002362800047a
   140052655:	add    al,BYTE PTR ss:[rax]
   140052658:	mov    ah,0x1f
   14005265a:	add    al,0x0
   14005265c:	xchg   esp,eax
   14005265d:	add    al,BYTE PTR ss:[rax]
   140052660:	iret   
   140052661:	add    al,BYTE PTR ss:[rax]
   140052664:	mov    ah,0x1f
   140052666:	add    al,0x0
   140052668:	fdiv   DWORD PTR [rsi]
   14005266a:	add    al,BYTE PTR [rax]
   14005266c:	jb     0x1400526a5
   14005266e:	add    al,BYTE PTR [rax]
   140052670:	fdivr  DWORD PTR [rdx+0x4]
   140052673:	add    BYTE PTR [rax+0x37],bh
   140052676:	add    al,BYTE PTR [rax]
   140052678:	mov    edi,0xe4000237
   14005267d:	jp     0x140052683
   14005267f:	add    al,cl
   140052681:	(bad)  
   140052682:	add    al,BYTE PTR [rax]
   140052684:	or     BYTE PTR [rax],bh
   140052686:	add    al,BYTE PTR [rax]
   140052688:	pop    rax
   140052689:	jnp    0x14005268f
   14005268b:	add    BYTE PTR [rax],dl
   14005268d:	cmp    BYTE PTR [rdx],al
   14005268f:	add    BYTE PTR [rbx],ch
   140052691:	cmp    al,BYTE PTR [rdx]
   140052693:	add    al,cl
   140052695:	jnp    0x14005269b
   140052697:	add    BYTE PTR [rdx+rdi*1],dh
   14005269a:	add    al,BYTE PTR [rax]
   14005269c:	(bad)  
   14005269d:	cmp    al,BYTE PTR [rdx]
   14005269f:	add    BYTE PTR [rax+0x7c],al
   1400526a2:	add    al,0x0
   1400526a4:	mov    BYTE PTR [rdx],bh
   1400526a6:	add    al,BYTE PTR [rax]
   1400526a8:	add    eax,0x6000023d
   1400526ad:	(bad)  
   1400526ae:	add    al,0x0
   1400526b0:	or     al,0x3d
   1400526b2:	add    al,BYTE PTR [rax]
   1400526b4:	and    eax,0xb000023e
   1400526b9:	jl     0x1400526bf
   1400526bb:	add    BYTE PTR [rsi+rdi*1],ch
   1400526be:	add    al,BYTE PTR [rax]
   1400526c0:	jnp    0x140052700
   1400526c2:	add    al,BYTE PTR [rax]
   1400526c4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400526c5:	(bad)  
   1400526c6:	add    al,0x0
   1400526c8:	test   BYTE PTR [rsi],bh
   1400526ca:	add    al,BYTE PTR [rax]
   1400526cc:	(bad)  
   1400526cd:	(bad)  
   1400526ce:	add    al,BYTE PTR [rax]
   1400526d0:	(bad)  
   1400526d1:	(bad)  
   1400526d2:	add    al,0x0
   1400526d4:	adc    BYTE PTR [rdi],bh
   1400526d6:	add    al,BYTE PTR [rax]
   1400526d8:	rex (bad) 
   1400526da:	add    al,BYTE PTR [rax]
   1400526dc:	shl    BYTE PTR [rax],0x4
   1400526df:	add    BYTE PTR [rax+0x3f],bl
   1400526e2:	add    al,BYTE PTR [rax]
   1400526e4:	(bad)  
   1400526e5:	add    al,BYTE PTR [rax]
   1400526e8:	hlt    
   1400526e9:	es add al,0x0
   1400526ec:	push   0xffffffffdf000240
   1400526f1:	add    al,BYTE PTR [rax]
   1400526f4:	sbb    BYTE PTR [rbp+0x4],bh
   1400526f7:	add    al,ch
   1400526f9:	add    al,BYTE PTR [rax]
   1400526fc:	sti    
   1400526fd:	rex.X add al,BYTE PTR [rax]
   140052700:	sub    BYTE PTR [rbp+0x4],bh
   140052703:	add    BYTE PTR [rbx+rax*2],al
   140052706:	add    al,BYTE PTR [rax]
   140052708:	and    BYTE PTR [rsi+0x2],al
   14005270b:	add    BYTE PTR [rax+0x7d],al
   14005270e:	add    al,0x0
   140052710:	nop
   140052711:	rex.RX add r8b,BYTE PTR [rax]
   140052714:	rol    DWORD PTR [rsi+0x2],1
   140052717:	add    BYTE PTR [rbp+rdi*2+0x4],bl
   14005271b:	add    al,bl
   14005271d:	rex.RX add r8b,BYTE PTR [rax]
   140052720:	ins    DWORD PTR es:[rdi],dx
   140052721:	rex.RXB add r8b,BYTE PTR [r8]
   140052724:	sub    BYTE PTR [rip+0x47740004],ah        # 0x18779272e
   14005272a:	add    al,BYTE PTR [rax]
   14005272c:	movabs ds:0xa800047d64000248,al
   140052735:	rex.W add al,BYTE PTR [rax]
   140052738:	add    BYTE PTR [rcx+0x2],cl
   14005273b:	add    BYTE PTR [rax+0x7d],bh
   14005273e:	add    al,0x0
   140052740:	or     BYTE PTR [rcx+0x2],cl
   140052743:	add    BYTE PTR [rax+0x49],ah
   140052746:	add    al,BYTE PTR [rax]
   140052748:	movabs al,ds:0xc10002496800047d
   140052751:	rex.WB add al,BYTE PTR [r8]
   140052754:	sar    BYTE PTR [rbp+0x4],0x0
   140052758:	enter  0x249,0x0
   14005275c:	and    BYTE PTR [rdx+0x2],cl
   14005275f:	add    al,ah
   140052761:	jge    0x140052767
   140052763:	add    BYTE PTR [rax],ch
   140052765:	rex.WX add al,BYTE PTR [rax]
   140052768:	or     DWORD PTR [rdx+0x2],0x47e0000
   14005276f:	add    BYTE PTR [rax-0x1ffffdb6],cl
   140052775:	rex.WX add al,BYTE PTR [rax]
   140052778:	and    BYTE PTR [rsi+0x4],bh
   14005277b:	add    al,ch
   14005277d:	rex.WX add al,BYTE PTR [rax]
   140052780:	(bad)  
   140052781:	rex.WXB add al,BYTE PTR [r8]
   140052784:	rex jle 0x14005278b
   140052787:	add    BYTE PTR [rax+0x4b],cl
   14005278a:	add    al,BYTE PTR [rax]
   14005278c:	lahf   
   14005278d:	rex.WXB add al,BYTE PTR [r8]
   140052790:	(bad)  
   140052791:	jle    0x140052797
   140052793:	add    BYTE PTR [rax-0xfffdb5],ch
   140052799:	rex.WXB add al,BYTE PTR [r8]
   14005279c:	cmp    BYTE PTR [rsi+0x4],0x0
   1400527a0:	or     BYTE PTR [rdx+rax*1+0x0],cl
   1400527a4:	pop    rdi
   1400527a5:	rex.WR add r8b,BYTE PTR [rax]
   1400527a8:	movabs al,ds:0xc000024c6800047e
   1400527b1:	rex.WR add r8b,BYTE PTR [rax]
   1400527b4:	sar    BYTE PTR [rsi+0x4],0x0
   1400527b8:	enter  0x24c,0x0
   1400527bc:	and    BYTE PTR [rbp+0x2],cl
   1400527bf:	add    al,ah
   1400527c1:	jle    0x1400527c7
   1400527c3:	add    BYTE PTR [rax],ch
   1400527c5:	rex.WRB add r8b,BYTE PTR [r8]
   1400527c8:	test   DWORD PTR [rbp+0x2],ecx
   1400527cb:	add    BYTE PTR [rax],al
   1400527cd:	jg     0x1400527d3
   1400527cf:	add    BYTE PTR [rbp+rcx*2+0x4f480002],cl
   1400527d6:	add    al,BYTE PTR [rax]
   1400527d8:	and    BYTE PTR [rdi+0x4],bh
   1400527db:	add    BYTE PTR [rax+0x4f],dl
   1400527de:	add    al,BYTE PTR [rax]
   1400527e0:	(bad)  
   1400527e1:	push   rax
   1400527e2:	add    al,BYTE PTR [rax]
   1400527e4:	lock pop rsi
   1400527e6:	add    al,0x0
   1400527e8:	and    BYTE PTR [rax+0x2],dl
   1400527eb:	add    BYTE PTR [rax+rdx*2+0x2],al
   1400527ef:	add    BYTE PTR [rdi+rbx*1+0x50500004],dh
   1400527f6:	add    al,BYTE PTR [rax]
   1400527f8:	out    dx,eax
   1400527f9:	push   rax
   1400527fa:	add    al,BYTE PTR [rax]
   1400527fc:	(bad)  
   1400527fd:	(bad)  
   1400527fe:	add    al,0x0
   140052800:	rex push rcx
   140052802:	add    al,BYTE PTR [rax]
   140052804:	mov    bl,0x51
   140052806:	add    al,BYTE PTR [rax]
   140052808:	nop
   140052809:	sub    BYTE PTR [rax+rax*1],al
   14005280c:	(bad)  
   14005280d:	push   rcx
   14005280e:	add    al,BYTE PTR [rax]
   140052810:	mov    dl,BYTE PTR [rdx+0x2]
   140052813:	add    BYTE PTR [rax+0x1f],ah
   140052816:	add    al,0x0
   140052818:	nop
   140052819:	push   rdx
   14005281a:	add    al,BYTE PTR [rax]
   14005281c:	fist   DWORD PTR [rdx+0x2]
   14005281f:	add    BYTE PTR [rax-0x1bfffbe0],dh
   140052825:	push   rdx
   140052826:	add    al,BYTE PTR [rax]
   140052828:	stos   BYTE PTR es:[rdi],al
   140052829:	push   rbx
   14005282a:	add    al,BYTE PTR [rax]
   14005282c:	movabs al,ds:0x7a000253b0000466
   140052835:	push   rsp
   140052836:	add    al,BYTE PTR [rax]
   140052838:	cmp    BYTE PTR [rdi+0x4],bh
   14005283b:	add    BYTE PTR [rax-0xcfffdac],al
   140052841:	push   rsp
   140052842:	add    al,BYTE PTR [rax]
   140052844:	enter  0x420,0x0
   140052848:	cld    
   140052849:	push   rsp
   14005284a:	add    al,BYTE PTR [rax]
   14005284c:	rex.WRXB push r14
   14005284e:	add    al,BYTE PTR [rax]
   140052850:	rex.W jg 0x140052857
   140052853:	add    BYTE PTR [rax+0x56],bl
   140052856:	add    al,BYTE PTR [rax]
   140052858:	(bad)  
   140052859:	push   rdi
   14005285a:	add    al,BYTE PTR [rax]
   14005285c:	pop    rax
   14005285d:	jg     0x140052863
   14005285f:	add    ah,dl
   140052861:	push   rdi
   140052862:	add    al,BYTE PTR [rax]
   140052864:	pop    rbp
   140052865:	pop    rcx
   140052866:	add    al,BYTE PTR [rax]
   140052868:	(bad)  
   140052869:	jg     0x14005286f
   14005286b:	add    BYTE PTR [rcx+rbx*2+0x2],ah
   14005286f:	add    BYTE PTR [rbp+0x6800025a],dh
   140052875:	jg     0x14005287b
   140052877:	add    BYTE PTR [rdx+rbx*2+0x5d520002],bh
   14005287e:	add    al,BYTE PTR [rax]
   140052880:	jl     0x140052901
   140052882:	add    al,0x0
   140052884:	pop    rax
   140052885:	pop    rbp
   140052886:	add    al,BYTE PTR [rax]
   140052888:	lock pop rbp
   14005288a:	add    al,BYTE PTR [rax]
   14005288c:	enter  0x420,0x0
   140052890:	clc    
   140052891:	pop    rbp
   140052892:	add    al,BYTE PTR [rax]
   140052894:	scas   eax,DWORD PTR es:[rdi]
   140052895:	pop    rsi
   140052896:	add    al,BYTE PTR [rax]
   140052898:	enter  0x420,0x0
   14005289c:	mov    eax,0xdf00025e
   1400528a1:	pop    rdi
   1400528a2:	add    al,BYTE PTR [rax]
   1400528a4:	xchg   esp,eax
   1400528a5:	jg     0x1400528ab
   1400528a7:	add    al,ch
   1400528a9:	pop    rdi
   1400528aa:	add    al,BYTE PTR [rax]
   1400528ac:	(bad)  
   1400528ad:	(bad)  
   1400528ae:	add    al,BYTE PTR [rax]
   1400528b0:	sub    BYTE PTR [rip+0x60980004],ah        # 0x1a09d28ba
   1400528b6:	add    al,BYTE PTR [rax]
   1400528b8:	rex.WXB (bad) 
   1400528ba:	add    al,BYTE PTR [rax]
   1400528bc:	(bad)  
   1400528bd:	sub    eax,DWORD PTR [rax+rax*1]
   1400528c0:	push   rsp
   1400528c1:	(bad)  
   1400528c2:	add    al,BYTE PTR [rax]
   1400528c4:	stc    
   1400528c5:	(bad)  
   1400528c7:	add    BYTE PTR [rdi+rdi*2+0x63000004],ah
   1400528ce:	add    al,BYTE PTR [rax]
   1400528d0:	rex.WR
   1400528d1:	add    al,BYTE PTR gs:[rax]
   1400528d4:	mov    eax,0x6000047f
   1400528d9:	add    al,BYTE PTR gs:[rax]
   1400528dc:	nop
   1400528dd:	add    al,BYTE PTR gs:[rax]
   1400528e0:	(bad)  
   1400528e1:	(bad)  
   1400528e2:	add    al,0x0
   1400528e4:	cwde   
   1400528e5:	add    al,BYTE PTR gs:[rax]
   1400528e8:	sbb    esp,DWORD PTR [rsi+0x2]
   1400528eb:	add    BYTE PTR [rdi+rbx*1+0x66240004],ah
   1400528f2:	add    al,BYTE PTR [rax]
   1400528f4:	(bad)  
   1400528f5:	outs   dx,DWORD PTR ds:[rsi]
   1400528f6:	add    al,BYTE PTR [rax]
   1400528f8:	rex.W add BYTE PTR [rax+rax*1],0x68
   1400528fd:	outs   dx,DWORD PTR ds:[rsi]
   1400528fe:	add    al,BYTE PTR [rax]
   140052900:	sub    eax,0x28000271
   140052905:	add    DWORD PTR [rax+rax*1],0x27134
   14005290c:	xor    al,0x72
   14005290e:	add    al,BYTE PTR [rax]
   140052910:	add    BYTE PTR [rcx+0x723c0004],0x2
   140052917:	add    BYTE PTR [rcx-0x2ffffd8d],dh
   14005291d:	add    DWORD PTR [rax+rax*1],0x273b8
   140052924:	cli    
   140052925:	ja     0x140052929
   140052927:	add    BYTE PTR [rax],cl
   140052929:	(bad)  
   14005292a:	add    al,0x0
   14005292c:	add    BYTE PTR [rax+0x2],bh
   14005292f:	add    BYTE PTR [rax+rdi*2+0x2],ah
   140052933:	add    BYTE PTR [rdi+rbx*1+0x78700004],ah
   14005293a:	add    al,BYTE PTR [rax]
   14005293c:	mov    esp,0x60000278
   140052941:	(bad)  
   140052942:	add    al,0x0
   140052944:	(bad)  
   140052945:	js     0x140052949
   140052947:	add    BYTE PTR [rbx+0x1c000279],ch
   14005294d:	(bad)  
   14005294e:	add    al,0x0
   140052950:	mov    ah,0x79
   140052952:	add    al,BYTE PTR [rax]
   140052954:	test   BYTE PTR [rdx+0x2],bh
   140052957:	add    BYTE PTR [rax-0x73fffb7e],dl
   14005295d:	jp     0x140052961
   14005295f:	add    BYTE PTR [rcx],ah
   140052961:	jnp    0x140052965
   140052963:	add    BYTE PTR [rax],dh
   140052965:	add    DWORD PTR [rax+rax*1],0x30
   140052969:	jnp    0x14005296d
   14005296b:	add    BYTE PTR [rsi+0x7b],bh
   14005296e:	add    al,BYTE PTR [rax]
   140052970:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140052971:	(bad)  
   140052972:	add    al,0x0
   140052974:	nop
   140052975:	jnp    0x140052979
   140052977:	add    al,al
   140052979:	jnp    0x14005297d
   14005297b:	add    BYTE PTR [rax+0x1f],ah
   14005297e:	add    al,0x0
   140052980:	enter  0x27b,0x0
   140052984:	xchg   ecx,eax
   140052985:	jl     0x140052989
   140052987:	add    BYTE PTR [rdi+rbx*1+0x7c980004],ah
   14005298e:	add    al,BYTE PTR [rax]
   140052990:	mov    ?,WORD PTR [rbp+0x2]
   140052993:	add    BYTE PTR [rax],bh
   140052995:	push   rbx
   140052996:	add    al,0x0
   140052998:	movabs al,ds:0x4400027e7800027d
   1400529a1:	add    DWORD PTR [rax+rax*1],0xffffff80
   1400529a5:	jle    0x1400529a9
   1400529a7:	add    bl,bh
   1400529a9:	jle    0x1400529ad
   1400529ab:	add    BYTE PTR [rax+0x1f],ah
   1400529ae:	add    al,0x0
   1400529b0:	add    al,0x7f
   1400529b2:	add    al,BYTE PTR [rax]
   1400529b4:	jno    0x140052a35
   1400529b6:	add    al,BYTE PTR [rax]
   1400529b8:	pop    rsp
   1400529b9:	add    DWORD PTR [rax+rax*1],0x78
   1400529bd:	jg     0x1400529c1
   1400529bf:	add    BYTE PTR [rax-0xffffd7f],al
   1400529c5:	add    DWORD PTR [rax+rax*1],0xffffff88
   1400529c9:	add    DWORD PTR [rdx],0x28c0300
   1400529cf:	add    al,cl
   1400529d1:	test   BYTE PTR [rax+rax*1],al
   1400529d4:	or     al,0x8c
   1400529d6:	add    al,BYTE PTR [rax]
   1400529d8:	test   eax,0x9800028c
   1400529dd:	xchg   BYTE PTR [rax+rax*1],al
   1400529e0:	mov    al,0x8c
   1400529e2:	add    al,BYTE PTR [rax]
   1400529e4:	jmp    0x1a0052c76
   1400529e9:	(bad)  
   1400529ea:	add    al,0x0
   1400529ec:	lock lea eax,[rdx]
   1400529ef:	add    BYTE PTR [rdi+rcx*4],al
   1400529f2:	add    al,BYTE PTR [rax]
   1400529f4:	test   al,0x86
   1400529f6:	add    al,0x0
   1400529f8:	or     al,0x8f
   1400529fa:	add    al,BYTE PTR [rax]
   1400529fc:	(bad)  
   1400529fd:	pop    QWORD PTR [rdx]
   1400529ff:	add    BYTE PTR [rax+0x6800043c],ch
   140052a05:	pop    QWORD PTR [rdx]
   140052a07:	add    BYTE PTR [rax+rdx*4],bl
   140052a0a:	add    al,BYTE PTR [rax]
   140052a0c:	(bad)  
   140052a0d:	xchg   BYTE PTR [rax+rax*1],al
   140052a10:	and    al,0x90
   140052a12:	add    al,BYTE PTR [rax]
   140052a14:	(bad)  
   140052a15:	xchg   ecx,eax
   140052a16:	add    al,BYTE PTR [rax]
   140052a18:	rex xchg DWORD PTR [rax+rax*1],eax
   140052a1c:	adc    al,0x91
   140052a1e:	add    al,BYTE PTR [rax]
   140052a20:	nop
   140052a21:	xchg   ecx,eax
   140052a22:	add    al,BYTE PTR [rax]
   140052a24:	rol    BYTE PTR [rdi-0x6e67fffc],0x2
   140052a2b:	add    bl,bh
   140052a2d:	xchg   ecx,eax
   140052a2e:	add    al,BYTE PTR [rax]
   140052a30:	rol    BYTE PTR [rdi-0x6deffffc],1
   140052a36:	add    al,BYTE PTR [rax]
   140052a38:	rex xchg edx,eax
   140052a3a:	add    al,BYTE PTR [rax]
   140052a3c:	(bad)  
   140052a3d:	(bad)  
   140052a3e:	add    al,0x0
   140052a40:	xchg   rdx,rax
   140052a42:	add    al,BYTE PTR [rax]
   140052a44:	jo     0x1400529d8
   140052a46:	add    al,BYTE PTR [rax]
   140052a48:	xor    BYTE PTR [rdi],bl
   140052a4a:	add    al,0x0
   140052a4c:	js     0x1400529e0
   140052a4e:	add    al,BYTE PTR [rax]
   140052a50:	mov    bl,0x92
   140052a52:	add    al,BYTE PTR [rax]
   140052a54:	xor    BYTE PTR [rdi],bl
   140052a56:	add    al,0x0
   140052a58:	mov    esp,0xb000292
   140052a5d:	xchg   esp,eax
   140052a5e:	add    al,BYTE PTR [rax]
   140052a60:	(bad)  
   140052a61:	addr32 add al,0x0
   140052a64:	adc    al,0x94
   140052a66:	add    al,BYTE PTR [rax]
   140052a68:	(bad)  
   140052a69:	xchg   esp,eax
   140052a6a:	add    al,BYTE PTR [rax]
   140052a6c:	cmp    BYTE PTR [rsp+rax*1+0x0],dl
   140052a70:	(bad)  
   140052a71:	xchg   esp,eax
   140052a72:	add    al,BYTE PTR [rax]
   140052a74:	adc    DWORD PTR [rbp+0x1f300002],edx
   140052a7a:	add    al,0x0
   140052a7c:	sbb    BYTE PTR [rbp-0x6a6efffe],dl
   140052a82:	add    al,BYTE PTR [rax]
   140052a84:	mov    al,0x20
   140052a86:	add    al,0x0
   140052a88:	cwde   
   140052a89:	xchg   ebp,eax
   140052a8a:	add    al,BYTE PTR [rax]
   140052a8c:	stc    
   140052a8d:	xchg   ebp,eax
   140052a8e:	add    al,BYTE PTR [rax]
   140052a90:	mov    al,0x20
   140052a92:	add    al,0x0
   140052a94:	add    BYTE PTR [rsi-0x69aafffe],dl
   140052a9a:	add    al,BYTE PTR [rax]
   140052a9c:	mov    al,0x20
   140052a9e:	add    al,0x0
   140052aa0:	pop    rsp
   140052aa1:	xchg   esi,eax
   140052aa2:	add    al,BYTE PTR [rax]
   140052aa4:	fist   WORD PTR [rsi+0x1fa40002]
   140052aaa:	add    al,0x0
   140052aac:	sub    al,0x97
   140052aae:	add    al,BYTE PTR [rax]
   140052ab0:	mov    ss,WORD PTR [rdi+0x43c80002]
   140052ab6:	add    al,0x0
   140052ab8:	xchg   esp,eax
   140052ab9:	xchg   edi,eax
   140052aba:	add    al,BYTE PTR [rax]
   140052abc:	mov    bl,BYTE PTR [rax-0x77b3fffe]
   140052ac2:	add    al,0x0
   140052ac4:	nop
   140052ac5:	cwde   
   140052ac6:	add    al,BYTE PTR [rax]
   140052ac8:	jle    0x140052a63
   140052aca:	add    al,BYTE PTR [rax]
   140052acc:	mov    BYTE PTR fs:[rax+rax*1],al
   140052ad0:	test   BYTE PTR [rcx-0x6652fffe],bl
   140052ad6:	add    al,BYTE PTR [rax]
   140052ad8:	xor    BYTE PTR [rdi],bl
   140052ada:	add    al,0x0
   140052adc:	mov    ah,0x99
   140052ade:	add    al,BYTE PTR [rax]
   140052ae0:	out    dx,al
   140052ae1:	cdq    
   140052ae2:	add    al,BYTE PTR [rax]
   140052ae4:	xor    BYTE PTR [rdi],bl
   140052ae6:	add    al,0x0
   140052ae8:	sbb    BYTE PTR [rdx-0x6558fffe],0x2
   140052aef:	add    BYTE PTR [rax],dh
   140052af1:	(bad)  
   140052af2:	add    al,0x0
   140052af4:	call   0x147052d93
   140052af9:	fwait
   140052afa:	add    al,BYTE PTR [rax]
   140052afc:	mov    ah,0x1f
   140052afe:	add    al,0x0
   140052b00:	adc    BYTE PTR [rbx-0x64bffffe],bl
   140052b06:	add    al,BYTE PTR [rax]
   140052b08:	(bad)  
   140052b09:	(bad)  
   140052b0a:	add    al,0x0
   140052b0c:	rex.W
   140052b0d:	fwait
   140052b0e:	add    al,BYTE PTR [rax]
   140052b10:	jge    0x140052aad
   140052b12:	add    al,BYTE PTR [rax]
   140052b14:	xor    BYTE PTR [rdi],bl
   140052b16:	add    al,0x0
   140052b18:	test   BYTE PTR [rbx-0x637efffe],bl
   140052b1e:	add    al,BYTE PTR [rax]
   140052b20:	mov    al,0x3a
   140052b22:	add    al,0x0
   140052b24:	nop
   140052b25:	pushf  
   140052b26:	add    al,BYTE PTR [rax]
   140052b28:	mov    ecx,0x3000029c
   140052b2d:	(bad)  
   140052b2e:	add    al,0x0
   140052b30:	rcr    BYTE PTR [rdx+rax*1+0x29cfb00],0x0
   140052b38:	(bad)  
   140052b39:	(bad)  
   140052b3a:	add    al,0x0
   140052b3c:	add    al,0x9d
   140052b3e:	add    al,BYTE PTR [rax]
   140052b40:	xor    al,0x9d
   140052b42:	add    al,BYTE PTR [rax]
   140052b44:	(bad)  
   140052b45:	(bad)  
   140052b46:	add    al,0x0
   140052b48:	fs popf 
   140052b4a:	add    al,BYTE PTR [rax]
   140052b4c:	clc    
   140052b4d:	popf   
   140052b4e:	add    al,BYTE PTR [rax]
   140052b50:	je     0x140052ada
   140052b52:	add    al,0x0
   140052b54:	add    BYTE PTR [rsi-0x61cbfffe],bl
   140052b5a:	add    al,BYTE PTR [rax]
   140052b5c:	(bad)  
   140052b5d:	(bad)  
   140052b5e:	add    al,0x0
   140052b60:	cmp    al,0x9e
   140052b62:	add    al,BYTE PTR [rax]
   140052b64:	pop    rsi
   140052b65:	sahf   
   140052b66:	add    al,BYTE PTR [rax]
   140052b68:	xor    BYTE PTR [rdi],bl
   140052b6a:	add    al,0x0
   140052b6c:	fs sahf 
   140052b6e:	add    al,BYTE PTR [rax]
   140052b70:	jle    0x140052b10
   140052b72:	add    al,BYTE PTR [rax]
   140052b74:	mov    ah,0x1f
   140052b76:	add    al,0x0
   140052b78:	test   BYTE PTR [rsi-0x60a2fffe],bl
   140052b7e:	add    al,BYTE PTR [rax]
   140052b80:	rex.WR (bad) 
   140052b82:	add    al,0x0
   140052b84:	fs lahf 
   140052b86:	add    al,BYTE PTR [rax]
   140052b88:	or     al,0xa0
   140052b8a:	add    al,BYTE PTR [rax]
   140052b8c:	(bad)  
   140052b8d:	sub    eax,DWORD PTR [rax+rax*1]
   140052b90:	adc    al,0xa0
   140052b92:	add    al,BYTE PTR [rax]
   140052b94:	test   DWORD PTR [rax+0x20c80002],esp
   140052b9a:	add    al,0x0
   140052b9c:	mov    WORD PTR [rax-0x5f2afffe],fs
   140052ba2:	add    al,BYTE PTR [rax]
   140052ba4:	mov    ah,0x1f
   140052ba6:	add    al,0x0
   140052ba8:	fsub   QWORD PTR [rax-0x5eddfffe]
   140052bae:	add    al,BYTE PTR [rax]
   140052bb0:	xor    BYTE PTR [rdi],bl
   140052bb2:	add    al,0x0
   140052bb4:	sub    BYTE PTR [rcx-0x5e8efffe],ah
   140052bba:	add    al,BYTE PTR [rax]
   140052bbc:	mov    ah,0x1f
   140052bbe:	add    al,0x0
   140052bc0:	js     0x140052b63
   140052bc2:	add    al,BYTE PTR [rax]
   140052bc4:	repnz movabs eax,ds:0xa1f800041f580002
   140052bce:	add    al,BYTE PTR [rax]
   140052bd0:	addr32 mov ds:0x1fa40002,al
   140052bd6:	add    al,0x0
   140052bd8:	jo     0x140052b7c
   140052bda:	add    al,BYTE PTR [rax]
   140052bdc:	adc    ah,BYTE PTR [rbx+0x26f40002]
   140052be2:	add    al,0x0
   140052be4:	sbb    BYTE PTR [rbx-0x5c47fffe],ah
   140052bea:	add    al,BYTE PTR [rax]
   140052bec:	or     BYTE PTR [rax-0x5c3ffffc],0x2
   140052bf3:	add    BYTE PTR [rax-0x5c],bl
   140052bf6:	add    al,BYTE PTR [rax]
   140052bf8:	rex.WR (bad) 
   140052bfa:	add    al,0x0
   140052bfc:	(bad)  
   140052bfd:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140052bfe:	add    al,BYTE PTR [rax]
   140052c00:	sbb    ah,BYTE PTR [rbp+0x1f380002]
   140052c06:	add    al,0x0
   140052c08:	and    BYTE PTR [rbp-0x5a89fffe],ah
   140052c0e:	add    al,BYTE PTR [rax]
   140052c10:	rex.WR (bad) 
   140052c12:	add    al,0x0
   140052c14:	jl     0x140052bbb
   140052c16:	add    al,BYTE PTR [rax]
   140052c18:	(bad)  
   140052c19:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140052c1a:	add    al,BYTE PTR [rax]
   140052c1c:	je     0x140052ba6
   140052c1e:	add    al,0x0
   140052c20:	rex.W cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140052c22:	add    al,BYTE PTR [rax]
   140052c24:	mul    DWORD PTR [rsi+0x1f4c0002]
   140052c2a:	add    al,0x0
   140052c2c:	add    BYTE PTR [rdi-0x5878fffe],ah
   140052c32:	add    al,BYTE PTR [rax]
   140052c34:	pushf  
   140052c35:	mov    BYTE PTR [rax+rax*1],al
   140052c38:	nop
   140052c39:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140052c3a:	add    al,BYTE PTR [rax]
   140052c3c:	mul    BYTE PTR [rdi+0x1f300002]
   140052c42:	add    al,0x0
   140052c44:	cld    
   140052c45:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140052c46:	add    al,BYTE PTR [rax]
   140052c48:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140052c49:	test   al,0x2
   140052c4b:	add    BYTE PTR [rax],dh
   140052c4d:	add    DWORD PTR [rax+rax*1],0xffffffb0
   140052c51:	test   al,0x2
   140052c53:	add    BYTE PTR [rbp-0x5bfffd57],ch
   140052c59:	mov    BYTE PTR [rax+rax*1],al
   140052c5c:	mov    ah,0xa9
   140052c5e:	add    al,BYTE PTR [rax]
   140052c60:	mov    DWORD PTR [rdx+0x1f4c0002],ebp
   140052c66:	add    al,0x0
   140052c68:	nop
   140052c69:	stos   BYTE PTR es:[rdi],al
   140052c6a:	add    al,BYTE PTR [rax]
   140052c6c:	jb     0x140052c19
   140052c6e:	add    al,BYTE PTR [rax]
   140052c70:	(bad)  
   140052c71:	mov    BYTE PTR [rax+rax*1],al
   140052c74:	js     0x140052c21
   140052c76:	add    al,BYTE PTR [rax]
   140052c78:	lock stos DWORD PTR es:[rdi],eax
   140052c7a:	add    al,BYTE PTR [rax]
   140052c7c:	rex.WR (bad) 
   140052c7e:	add    al,0x0
   140052c80:	clc    
   140052c81:	stos   DWORD PTR es:[rdi],eax
   140052c82:	add    al,BYTE PTR [rax]
   140052c84:	add    ch,BYTE PTR [rbp-0x7ccffffe]
   140052c8a:	add    al,0x0
   140052c8c:	or     BYTE PTR [rbp-0x51f2fffe],ch
   140052c92:	add    al,BYTE PTR [rax]
   140052c94:	fmul   DWORD PTR [rax-0x51ebfffc]
   140052c9a:	add    al,BYTE PTR [rax]
   140052c9c:	jne    0x140052c4c
   140052c9e:	add    al,BYTE PTR [rax]
   140052ca0:	call   0x1bc05312d
   140052ca5:	scas   al,BYTE PTR es:[rdi]
   140052ca6:	add    al,BYTE PTR [rax]
   140052ca8:	in     eax,dx
   140052ca9:	scas   al,BYTE PTR es:[rdi]
   140052caa:	add    al,BYTE PTR [rax]
   140052cac:	rex.WR (bad) 
   140052cae:	add    al,0x0
   140052cb0:	hlt    
   140052cb1:	scas   al,BYTE PTR es:[rdi]
   140052cb2:	add    al,BYTE PTR [rax]
   140052cb4:	(bad)  
   140052cb5:	scas   eax,DWORD PTR es:[rdi]
   140052cb6:	add    al,BYTE PTR [rax]
   140052cb8:	hlt    
   140052cb9:	mov    BYTE PTR [rax+rax*1],al
   140052cbc:	and    al,0xaf
   140052cbe:	add    al,BYTE PTR [rax]
   140052cc0:	and    DWORD PTR [rcx-0x7703fffe],esi
   140052cc6:	add    al,0x0
   140052cc8:	sub    BYTE PTR [rcx-0x4eaefffe],dh
   140052cce:	add    al,BYTE PTR [rax]
   140052cd0:	mov    ah,0x1f
   140052cd2:	add    al,0x0
   140052cd4:	pop    rax
   140052cd5:	mov    cl,0x2
   140052cd7:	add    BYTE PTR [rcx+rsi*4+0x1f300002],bh
   140052cde:	add    al,0x0
   140052ce0:	(bad)  
   140052ce1:	mov    cl,0x2
   140052ce3:	add    BYTE PTR [rbx+0x300002b2],al
   140052ce9:	(bad)  
   140052cea:	add    al,0x0
   140052cec:	mov    WORD PTR [rdx-0x4d5bfffe],?
   140052cf2:	add    al,BYTE PTR [rax]
   140052cf4:	mov    ah,0x1f
   140052cf6:	add    al,0x0
   140052cf8:	lods   al,BYTE PTR ds:[rsi]
   140052cf9:	mov    dl,0x2
   140052cfb:	add    BYTE PTR [rbx+rsi*4-0x76e3fffe],bh
   140052d02:	add    al,0x0
   140052d04:	(bad)  
   140052d05:	mov    bl,0x2
   140052d07:	add    BYTE PTR [rdi-0x4c],bl
   140052d0a:	add    al,BYTE PTR [rax]
   140052d0c:	sub    al,0x89
   140052d0e:	add    al,0x0
   140052d10:	push   0xffffffffe90002b4
   140052d15:	mov    ch,0x2
   140052d17:	add    BYTE PTR [rcx+rcx*4],bh
   140052d1a:	add    al,0x0
   140052d1c:	lock mov ch,0x2
   140052d1f:	add    BYTE PTR [rcx-0x4a],cl
   140052d22:	add    al,BYTE PTR [rax]
   140052d24:	push   rsp
   140052d25:	mov    DWORD PTR [rax+rax*1],eax
   140052d28:	push   rax
   140052d29:	mov    dh,0x2
   140052d2b:	add    BYTE PTR [rdx-0x5bfffd4a],ah
   140052d31:	(bad)  
   140052d32:	add    al,0x0
   140052d34:	mov    al,0xb6
   140052d36:	add    al,BYTE PTR [rax]
   140052d38:	in     eax,dx
   140052d39:	mov    dh,0x2
   140052d3b:	add    BYTE PTR [rax+0x1f],ah
   140052d3e:	add    al,0x0
   140052d40:	add    BYTE PTR [rdi-0x4790fffe],dh
   140052d46:	add    al,BYTE PTR [rax]
   140052d48:	pop    rsp
   140052d49:	mov    DWORD PTR [rax+rax*1],eax
   140052d4c:	cmp    BYTE PTR [rax-0x4708fffe],0x2
   140052d53:	add    BYTE PTR [rcx+rcx*4+0x4],ch
   140052d57:	add    BYTE PTR [rax],al
   140052d59:	mov    ecx,0xb9570002
   140052d5e:	add    al,BYTE PTR [rax]
   140052d60:	(bad)  
   140052d61:	(bad)  
   140052d62:	add    al,0x0
   140052d64:	(bad)  
   140052d65:	mov    ecx,0xb9e30002
   140052d6a:	add    al,BYTE PTR [rax]
   140052d6c:	mov    al,0x89
   140052d6e:	add    al,0x0
   140052d70:	in     al,dx
   140052d71:	mov    ecx,0xba570002
   140052d76:	add    al,BYTE PTR [rax]
   140052d78:	nop
   140052d79:	sub    BYTE PTR [rax+rax*1],al
   140052d7c:	(bad)  
   140052d7d:	mov    edx,0xbae60002
   140052d82:	add    al,BYTE PTR [rax]
   140052d84:	mov    al,BYTE PTR [rax+rax*1]
   140052d88:	in     al,dx
   140052d89:	mov    edx,0xbd220002
   140052d8e:	add    al,BYTE PTR [rax]
   140052d90:	push   rsp
   140052d91:	mov    al,BYTE PTR [rax+rax*1]
   140052d94:	sub    BYTE PTR [rbp-0x4290fffe],bh
   140052d9a:	add    al,BYTE PTR [rax]
   140052d9c:	(bad)  
   140052d9d:	mov    al,BYTE PTR [rax+rax*1]
   140052da0:	js     0x140052d5f
   140052da2:	add    al,BYTE PTR [rax]
   140052da4:	pop    rdi
   140052da5:	mov    esi,0x8a680002
   140052daa:	add    al,0x0
   140052dac:	jo     0x140052d6c
   140052dae:	add    al,BYTE PTR [rax]
   140052db0:	lahf   
   140052db1:	mov    esi,0x8a600002
   140052db6:	add    al,0x0
   140052db8:	test   al,0xbe
   140052dba:	add    al,BYTE PTR [rax]
   140052dbc:	mov    esi,0xc00002bf
   140052dc1:	mov    al,BYTE PTR [rax+rax*1]
   140052dc4:	loopne 0x140052d85
   140052dc6:	add    al,BYTE PTR [rax]
   140052dc8:	rex.RXB rol BYTE PTR [r10],0x0
   140052dcc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140052dcd:	(bad)  
   140052dce:	add    al,0x0
   140052dd0:	push   rax
   140052dd1:	rol    BYTE PTR [rdx],0x0
   140052dd4:	(bad)  
   140052dd5:	rol    BYTE PTR [rdx],0x0
   140052dd8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140052dd9:	(bad)  
   140052dda:	add    al,0x0
   140052ddc:	fadd   st(0),st
   140052dde:	add    al,BYTE PTR [rax]
   140052de0:	xor    al,0xc1
   140052de2:	add    al,BYTE PTR [rax]
   140052de4:	mov    al,0x8b
   140052de6:	add    al,0x0
   140052de8:	cmp    al,0xc1
   140052dea:	add    al,BYTE PTR [rax]
   140052dec:	xchg   ecx,eax
   140052dee:	add    al,BYTE PTR [rax]
   140052df0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140052df1:	(bad)  
   140052df2:	add    al,0x0
   140052df4:	nop
   140052df5:	rol    DWORD PTR [rdx],0x0
   140052df8:	rex.B ret 0x2
   140052dfc:	ins    BYTE PTR es:[rdi],dx
   140052dfd:	(bad)  
   140052dfe:	add    al,0x0
   140052e00:	rex.W ret 0x2
   140052e04:	cmp    ah,al
   140052e06:	add    al,BYTE PTR [rax]
   140052e08:	push   rax
   140052e09:	mov    WORD PTR [rax+rax*1],es
   140052e0c:	(bad)
   140052e11:	(bad)
   140052e14:	fmul   DWORD PTR [rsp+rax*1+0x2c66c00]
   140052e1b:	add    BYTE PTR [rbx-0x37fffd39],al
   140052e21:	rex.XB add al,0x0
   140052e24:	mov    edi,es
   140052e26:	add    al,BYTE PTR [rax]
   140052e28:	lods   al,BYTE PTR ds:[rsi]
   140052e29:	enter  0x2,0xf0
   140052e2d:	mov    WORD PTR [rax+rax*1],es
   140052e30:	mov    ah,0xc8
   140052e32:	add    al,BYTE PTR [rax]
   140052e34:	rex.WB leave 
   140052e36:	add    al,BYTE PTR [rax]
   140052e38:	in     al,0x20
   140052e3a:	add    al,0x0
   140052e3c:	push   rax
   140052e3d:	leave  
   140052e3e:	add    al,BYTE PTR [rax]
   140052e40:	addr32 leave 
   140052e42:	add    al,BYTE PTR [rax]
   140052e44:	mov    ah,0x1f
   140052e46:	add    al,0x0
   140052e48:	or     cl,0x2
   140052e4b:	add    dl,bl
   140052e4d:	leave  
   140052e4e:	add    al,BYTE PTR [rax]
   140052e50:	(bad)  
   140052e51:	(bad)  
   140052e52:	add    al,0x0
   140052e54:	loopne 0x140052e1f
   140052e56:	add    al,BYTE PTR [rax]
   140052e58:	(bad)  
   140052e59:	retf   0x2
   140052e5c:	lea    rax,[rax+rax*1]
   140052e60:	movabs al,ds:0x900002cb530002ca
   140052e69:	sub    BYTE PTR [rax+rax*1],al
   140052e6c:	pop    rsp
   140052e6d:	retf   
   140052e6e:	add    al,BYTE PTR [rax]
   140052e70:	hlt    
   140052e71:	int3   
   140052e72:	add    al,BYTE PTR [rax]
   140052e74:	(bad)  
   140052e75:	lea    eax,[rax+rax*1]
   140052e78:	cld    
   140052e79:	int3   
   140052e7a:	add    al,BYTE PTR [rax]
   140052e7c:	loope  0x140052e4b
   140052e7e:	add    al,BYTE PTR [rax]
   140052e80:	and    BYTE PTR [rsp+rax*1+0x0],cl
   140052e84:	call   0x195053156
   140052e89:	(bad)  
   140052e8a:	add    al,BYTE PTR [rax]
   140052e8c:	loopne 0x140052e1b
   140052e8e:	add    al,0x0
   140052e90:	pop    rsp
   140052e91:	(bad)  
   140052e92:	add    al,BYTE PTR [rax]
   140052e94:	scas   eax,DWORD PTR es:[rdi]
   140052e95:	iret   
   140052e96:	add    al,BYTE PTR [rax]
   140052e98:	jo     0x140052e28
   140052e9a:	add    al,0x0
   140052e9c:	mov    eax,0x530002cf
   140052ea1:	rol    BYTE PTR [rdx],1
   140052ea3:	add    BYTE PTR [rdi+rbx*1-0x2fa3fffc],bh
   140052eaa:	add    al,BYTE PTR [rax]
   140052eac:	leave  
   140052ead:	rol    BYTE PTR [rdx],1
   140052eaf:	add    ah,ah
   140052eb1:	push   rbp
   140052eb2:	add    al,0x0
   140052eb4:	rcl    al,1
   140052eb6:	add    al,BYTE PTR [rax]
   140052eb8:	xor    ecx,edx
   140052eba:	add    al,BYTE PTR [rax]
   140052ebc:	call   0x178053349
   140052ec1:	rol    DWORD PTR [rdx],1
   140052ec3:	add    BYTE PTR [rcx-0x2f],bl
   140052ec6:	add    al,BYTE PTR [rax]
   140052ec8:	hlt    
   140052ec9:	mov    BYTE PTR [rax+rax*1],al
   140052ecc:	(bad)  
   140052ecd:	rol    DWORD PTR [rdx],1
   140052ecf:	add    BYTE PTR [rsi-0x2d],dl
   140052ed2:	add    al,BYTE PTR [rax]
   140052ed4:	cld    
   140052ed5:	mov    BYTE PTR [rax+rax*1],al
   140052ed8:	pop    rsp
   140052ed9:	rol    DWORD PTR [rdx],cl
   140052edb:	add    BYTE PTR [rax+0x600002d3],ah
   140052ee1:	(bad)  
   140052ee2:	add    al,0x0
   140052ee4:	test   al,0xd3
   140052ee6:	add    al,BYTE PTR [rax]
   140052ee8:	(bad)  
   140052ee9:	rol    DWORD PTR [rdx],cl
   140052eeb:	add    BYTE PTR [rdi+rbx*1-0x2bfbfffc],bh
   140052ef2:	add    al,BYTE PTR [rax]
   140052ef4:	imul   edx,esp,0x2
   140052ef7:	add    BYTE PTR [rax+0x74000428],dl
   140052efd:	(bad)  
   140052efe:	add    al,BYTE PTR [rax]
   140052f00:	retf   0x2d4
   140052f03:	add    ah,dh
   140052f05:	es add al,0x0
   140052f08:	rcl    ah,1
   140052f0a:	add    al,BYTE PTR [rax]
   140052f0c:	(bad)  
   140052f0e:	add    al,BYTE PTR [rax]
   140052f10:	mov    esp,0xf000041f
   140052f15:	(bad)  
   140052f16:	add    al,BYTE PTR [rax]
   140052f18:	(bad)  
   140052f19:	(bad)  
   140052f1a:	add    al,BYTE PTR [rax]
   140052f1c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140052f1d:	(bad)  
   140052f1e:	add    al,0x0
   140052f20:	mov    dh,dl
   140052f22:	add    al,BYTE PTR [rax]
   140052f24:	iret   
   140052f25:	(bad)  
   140052f26:	add    al,BYTE PTR [rax]
   140052f28:	mov    ah,0x1f
   140052f2a:	add    al,0x0
   140052f2c:	rex.WR xlat BYTE PTR ds:[rbx]
   140052f2e:	add    al,BYTE PTR [rax]
   140052f30:	ins    DWORD PTR es:[rdi],dx
   140052f31:	xlat   BYTE PTR ds:[rbx]
   140052f32:	add    al,BYTE PTR [rax]
   140052f34:	xor    BYTE PTR [rdi],bl
   140052f36:	add    al,0x0
   140052f38:	je     0x140052f11
   140052f3a:	add    al,BYTE PTR [rax]
   140052f3c:	movabs ds:0xc000048ef00002d7,eax
   140052f45:	xlat   BYTE PTR ds:[rbx]
   140052f46:	add    al,BYTE PTR [rax]
   140052f48:	out    dx,eax
   140052f49:	xlat   BYTE PTR ds:[rbx]
   140052f4a:	add    al,BYTE PTR [rax]
   140052f4c:	(bad)  
   140052f4d:	(bad)  
   140052f4e:	add    al,0x0
   140052f50:	clc    
   140052f51:	xlat   BYTE PTR ds:[rbx]
   140052f52:	add    al,BYTE PTR [rax]
   140052f54:	sbb    ebx,eax
   140052f56:	add    al,BYTE PTR [rax]
   140052f58:	shl    BYTE PTR [rax],0x4
   140052f5b:	add    BYTE PTR [rax+rbx*8],ah
   140052f5e:	add    al,BYTE PTR [rax]
   140052f60:	rex.RXB fadd DWORD PTR [r10]
   140052f63:	add    al,al
   140052f65:	and    BYTE PTR [rax+rax*1],al
   140052f68:	push   rax
   140052f69:	fadd   DWORD PTR [rdx]
   140052f6b:	add    BYTE PTR [rax+rbx*8+0x1fa40002],bl
   140052f72:	add    al,0x0
   140052f74:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140052f75:	fadd   DWORD PTR [rdx]
   140052f77:	add    dl,ah
   140052f79:	fadd   DWORD PTR [rdx]
   140052f7b:	add    BYTE PTR [rax],dh
   140052f7d:	(bad)  
   140052f7e:	add    al,0x0
   140052f80:	call   0x16b05325d
   140052f85:	fld    DWORD PTR [rdx]
   140052f87:	add    BYTE PTR [rax+0x1f],ah
   140052f8a:	add    al,0x0
   140052f8c:	xor    al,0xd9
   140052f8e:	add    al,BYTE PTR [rax]
   140052f90:	imul   ebx,ecx,0x1fb40002
   140052f96:	add    al,0x0
   140052f98:	rcr    cl,0x2
   140052f9b:	add    BYTE PTR [rdi-0x4bfffd26],cl
   140052fa1:	(bad)  
   140052fa2:	add    al,0x0
   140052fa4:	movabs al,ds:0xb00002dae90002da
   140052fad:	and    BYTE PTR [rax+rax*1],al
   140052fb0:	lock fiadd DWORD PTR [rdx]
   140052fb3:	add    dl,al
   140052fb5:	fadd   QWORD PTR [rdx]
   140052fb7:	add    al,bh
   140052fb9:	mov    es,WORD PTR [rax+rax*1]
   140052fbc:	rcr    ah,1
   140052fbe:	add    al,BYTE PTR [rax]
   140052fc0:	loop   0x140052f9e
   140052fc2:	add    al,BYTE PTR [rax]
   140052fc4:	mov    ah,0x1f
   140052fc6:	add    al,0x0
   140052fc8:	add    ch,bl
   140052fca:	add    al,BYTE PTR [rax]
   140052fcc:	(bad)  
   140052fcd:	fld    QWORD PTR [rdx]
   140052fcf:	add    BYTE PTR [rax],ch
   140052fd1:	pop    QWORD PTR [rax+rax*1]
   140052fd4:	and    al,0xdd
   140052fd6:	add    al,BYTE PTR [rax]
   140052fd8:	mov    ds,ebp
   140052fda:	add    al,BYTE PTR [rax]
   140052fdc:	sub    al,0x8f
   140052fde:	add    al,0x0
   140052fe0:	xchg   esp,eax
   140052fe1:	fld    QWORD PTR [rdx]
   140052fe3:	add    al,ch
   140052fe5:	fld    QWORD PTR [rdx]
   140052fe7:	add    BYTE PTR [rdi+rcx*4+0x4],dl
   140052feb:	add    al,dh
   140052fed:	fld    QWORD PTR [rdx]
   140052fef:	add    BYTE PTR [rsi+0x7c0002de],cl
   140052ff5:	pop    QWORD PTR [rax+rax*1]
   140052ff8:	xchg   esp,eax
   140052ff9:	fiadd  WORD PTR [rdx]
   140052ffb:	add    BYTE PTR [rbx-0x4bfffd22],ch
   140053001:	(bad)  
   140053002:	add    al,0x0
   140053004:	rcr    dh,1
   140053006:	add    al,BYTE PTR [rax]
   140053008:	add    bh,bl
   14005300a:	add    al,BYTE PTR [rax]
   14005300c:	(bad)  
   14005300d:	(bad)  
   14005300e:	add    al,0x0
   140053010:	rex fild WORD PTR [rdx]
   140053013:	add    BYTE PTR [rcx-0x4ffffd21],dl
   140053019:	and    BYTE PTR [rax+rax*1],al
   14005301c:	cwde   
   14005301d:	fild   WORD PTR [rdx]
   14005301f:	add    ah,cl
   140053021:	fild   WORD PTR [rdx]
   140053023:	add    BYTE PTR [rax],dh
   140053025:	(bad)  
   140053026:	add    al,0x0
   140053028:	loopne 0x140053009
   14005302a:	add    al,BYTE PTR [rax]
   14005302c:	push   rcx
   14005302d:	loope  0x140053031
   14005302f:	add    BYTE PTR [rax+0x5800048f],ch
   140053035:	loope  0x140053039
   140053037:	add    BYTE PTR [rdi-0x1e],cl
   14005303a:	add    al,BYTE PTR [rax]
   14005303c:	movabs al,ds:0xc80002e25800048f
   140053045:	loop   0x140053049
   140053047:	add    BYTE PTR [rax+0x3000048f],dh
   14005304d:	jrcxz  0x140053051
   14005304f:	add    BYTE PTR [rcx-0x1d],ch
   140053052:	add    al,BYTE PTR [rax]
   140053054:	mov    ah,0x1f
   140053056:	add    al,0x0
   140053058:	jo     0x14005303d
   14005305a:	add    al,BYTE PTR [rax]
   14005305c:	mov    bl,ah
   14005305e:	add    al,BYTE PTR [rax]
   140053060:	mov    ah,0x1f
   140053062:	add    al,0x0
   140053064:	pushf  
   140053065:	jrcxz  0x140053069
   140053067:	add    al,dh
   140053069:	jrcxz  0x14005306d
   14005306b:	add    ah,bl
   14005306d:	pop    QWORD PTR [rax+rax*1]
   140053070:	clc    
   140053071:	jrcxz  0x140053075
   140053073:	add    BYTE PTR [rip+0x300002e4],bh        # 0x17005335d
   140053079:	(bad)  
   14005307a:	add    al,0x0
   14005307c:	movabs al,ds:0xfc0002e4ed0002e4
   140053085:	pop    QWORD PTR [rax+rax*1]
   140053088:	xor    al,0xe5
   14005308a:	add    al,BYTE PTR [rax]
   14005308c:	add    al,0xe6
   14005308e:	add    al,BYTE PTR [rax]
   140053090:	and    BYTE PTR [rax-0x19b7fffc],dl
   140053096:	add    al,BYTE PTR [rax]
   140053098:	or     esp,edi
   14005309a:	add    al,BYTE PTR [rax]
   14005309c:	sub    al,0x90
   14005309e:	add    al,0x0
   1400530a0:	sub    bh,ah
   1400530a2:	add    al,BYTE PTR [rax]
   1400530a4:	rex.RB out 0x2,eax
   1400530a7:	add    BYTE PTR [rdi+rbx*1-0x18b3fffc],dh
   1400530ae:	add    al,BYTE PTR [rax]
   1400530b0:	scas   eax,DWORD PTR es:[rdi]
   1400530b1:	out    0x2,eax
   1400530b3:	add    BYTE PTR [rax],dh
   1400530b5:	(bad)  
   1400530b6:	add    al,0x0
   1400530b8:	int3   
   1400530b9:	out    0x2,eax
   1400530bb:	add    BYTE PTR [rbx-0x18],bl
   1400530be:	add    al,BYTE PTR [rax]
   1400530c0:	nop
   1400530c1:	sub    BYTE PTR [rax+rax*1],al
   1400530c4:	movabs al,ds:0x400002e8a20002e8
   1400530cd:	nop
   1400530ce:	add    al,0x0
   1400530d0:	shr    al,0x2
   1400530d3:	add    BYTE PTR [rip+0x480002e9],cl        # 0x1880533c2
   1400530d9:	nop
   1400530da:	add    al,0x0
   1400530dc:	(bad)  
   1400530dd:	jmp    0x1295c30e4
   1400530e2:	add    al,BYTE PTR [rax]
   1400530e4:	movabs al,ds:0x7c0002e957000420
   1400530ed:	jmp    0x160a530f4
   1400530f2:	add    al,0x0
   1400530f4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400530f5:	jmp    0x129d230fc
   1400530fa:	add    al,BYTE PTR [rax]
   1400530fc:	call   0x113053522
   140053101:	jmp    0x129ff3108
   140053106:	add    al,BYTE PTR [rax]
   140053108:	js     0x14005312c
   14005310a:	add    al,0x0
   14005310c:	rex.X (bad) 
   14005310e:	add    al,BYTE PTR [rax]
   140053110:	icebp  
   140053111:	(bad)  
   140053112:	add    al,BYTE PTR [rax]
   140053114:	shl    BYTE PTR [rsp+rax*1],1
   140053117:	add    cl,dh
   140053119:	(bad)  
   14005311a:	add    al,BYTE PTR [rax]
   14005311c:	movabs al,ds:0xa0000424d00002eb
   140053125:	jmp    0x140053129
   140053127:	add    BYTE PTR [rdx-0x14],al
   14005312a:	add    al,BYTE PTR [rax]
   14005312c:	shl    BYTE PTR [rsp+rax*1],1
   14005312f:	add    BYTE PTR [rsp+rbp*8+0x2],dl
   140053133:	add    ch,al
   140053135:	in     al,dx
   140053136:	add    al,BYTE PTR [rax]
   140053138:	loopne 0x14005315f
   14005313a:	add    al,0x0
   14005313c:	retf   
   14005313d:	in     al,dx
   14005313e:	add    al,BYTE PTR [rax]
   140053140:	cmp    al,0xed
   140053142:	add    al,BYTE PTR [rax]
   140053144:	push   0x78000426
   140053149:	in     eax,dx
   14005314a:	add    al,BYTE PTR [rax]
   14005314c:	cwde   
   14005314d:	in     eax,dx
   14005314e:	add    al,BYTE PTR [rax]
   140053150:	rex.R (bad) 
   140053152:	add    al,0x0
   140053154:	sahf   
   140053155:	in     eax,dx
   140053156:	add    al,BYTE PTR [rax]
   140053158:	mov    ecx,0x400002ed
   14005315d:	sub    BYTE PTR [rax+rax*1],al
   140053160:	(bad)
   140053163:	add    al,ah
   140053165:	in     eax,dx
   140053166:	add    al,BYTE PTR [rax]
   140053168:	sub    BYTE PTR [rax+rax*1],al
   14005316c:	cs out dx,al
   14005316e:	add    al,BYTE PTR [rax]
   140053170:	rex.WB out dx,al
   140053172:	add    al,BYTE PTR [rax]
   140053174:	and    BYTE PTR [rdx],ch
   140053176:	add    al,0x0
   140053178:	push   rbp
   140053179:	out    dx,al
   14005317a:	add    al,BYTE PTR [rax]
   14005317c:	jo     0x14005316c
   14005317e:	add    al,BYTE PTR [rax]
   140053180:	and    BYTE PTR [rdx],ch
   140053182:	add    al,0x0
   140053184:	lods   al,BYTE PTR ds:[rsi]
   140053185:	out    dx,al
   140053186:	add    al,BYTE PTR [rax]
   140053188:	(bad)  
   140053189:	out    dx,al
   14005318a:	add    al,BYTE PTR [rax]
   14005318c:	movabs al,ds:0x990002eefd00042b
   140053195:	out    dx,eax
   140053196:	add    al,BYTE PTR [rax]
   140053198:	adc    BYTE PTR [rip+0xffffffffefc30004],ch        # 0x12fc831a2
   14005319e:	add    al,BYTE PTR [rax]
   1400531a0:	(bad)  
   1400531a1:	lock add al,BYTE PTR [rax]
   1400531a4:	push   rax
   1400531a5:	cs add al,0x0
   1400531a8:	test   eax,esi
   1400531aa:	add    al,BYTE PTR [rax]
   1400531ac:	adc    eax,0x500002f1
   1400531b1:	xor    BYTE PTR [rax+rax*1],al
   1400531b4:	out    0xf1,eax
   1400531b6:	add    al,BYTE PTR [rax]
   1400531b8:	pop    rbx
   1400531b9:	repnz add al,BYTE PTR [rax]
   1400531bc:	lock xor al,BYTE PTR [rax+rax*1]
   1400531c0:	repnz add al,BYTE PTR [eax]
   1400531c4:	out    dx,al
   1400531c5:	repnz add al,BYTE PTR [rax]
   1400531c8:	add    al,0x33
   1400531ca:	add    al,0x0
   1400531cc:	(bad)  
   1400531cd:	repz add al,BYTE PTR [rax]
   1400531d0:	adc    ah,dh
   1400531d2:	add    al,BYTE PTR [rax]
   1400531d4:	rex.R (bad) 
   1400531d6:	add    al,0x0
   1400531d8:	pop    rax
   1400531d9:	hlt    
   1400531da:	add    al,BYTE PTR [rax]
   1400531dc:	mov    esi,esp
   1400531de:	add    al,BYTE PTR [rax]
   1400531e0:	enter  0x437,0x0
   1400531e4:	popf   
   1400531e5:	hlt    
   1400531e6:	add    al,BYTE PTR [rax]
   1400531e8:	(bad)  
   1400531e9:	hlt    
   1400531ea:	add    al,BYTE PTR [rax]
   1400531ec:	cwde   
   1400531ed:	cmp    BYTE PTR [rax+rax*1],al
   1400531f0:	ins    BYTE PTR es:[rdi],dx
   1400531f1:	cmc    
   1400531f2:	add    al,BYTE PTR [rax]
   1400531f4:	mov    ebp,?
   1400531f6:	add    al,BYTE PTR [rax]
   1400531f8:	sub    BYTE PTR [rbx],bh
   1400531fa:	add    al,0x0
   1400531fc:	xchg   edx,eax
   1400531fd:	cmc    
   1400531fe:	add    al,BYTE PTR [rax]
   140053200:	mov    dl,0xf5
   140053202:	add    al,BYTE PTR [rax]
   140053204:	test   al,0x3b
   140053206:	add    al,0x0
   140053208:	mov    eax,0xd80002f5
   14005320d:	cmc    
   14005320e:	add    al,BYTE PTR [rax]
   140053210:	sub    BYTE PTR [rsp+rax*1],bh
   140053213:	add    dh,bl
   140053215:	cmc    
   140053216:	add    al,BYTE PTR [rax]
   140053218:	stc    
   140053219:	cmc    
   14005321a:	add    al,BYTE PTR [rax]
   14005321c:	cwde   
   14005321d:	cmp    al,0x4
   14005321f:	add    bh,bh
   140053221:	cmc    
   140053222:	add    al,BYTE PTR [rax]
   140053224:	(bad)  
   140053225:	test   BYTE PTR [rdx],0x0
   140053228:	rex.R (bad) 
   14005322a:	add    al,0x0
   14005322c:	sub    dh,dh
   14005322e:	add    al,BYTE PTR [rax]
   140053230:	push   rcx
   140053231:	test   BYTE PTR [rdx],0x0
   140053234:	cmp    BYTE PTR [rip+0xfffffffff6570004],0x2        # 0x1365c323f
   14005323b:	add    BYTE PTR [rcx-0x7fffd0a],ah
   140053241:	cmp    eax,0xf6a70004
   140053246:	add    al,BYTE PTR [rax]
   140053248:	hlt    
   140053249:	test   BYTE PTR [rdx],0x0
   14005324c:	sar    BYTE PTR [rsi],0x4
   14005324f:	add    ah,dh
   140053251:	test   BYTE PTR [rdx],0x0
   140053254:	sbb    edi,esi
   140053256:	add    al,BYTE PTR [rax]
   140053258:	sar    BYTE PTR [rsi],0x4
   14005325b:	add    BYTE PTR [rcx],dh
   14005325d:	test   DWORD PTR [rdx],0x2f75100
   140053263:	add    BYTE PTR [rax+0x3f],dh
   140053266:	add    al,0x0
   140053268:	push   rdi
   140053269:	test   DWORD PTR [rdx],0x2f76e00
   14005326f:	add    al,ah
   140053271:	(bad)  
   140053272:	add    al,0x0
   140053274:	je     0x14005326d
   140053276:	add    al,BYTE PTR [rax]
   140053278:	mov    esi,edi
   14005327a:	add    al,BYTE PTR [rax]
   14005327c:	push   rax
   14005327d:	add    al,0x0
   140053280:	xchg   ecx,eax
   140053281:	test   DWORD PTR [rdx],0x2f7b400
   140053287:	add    BYTE PTR [rax],bh
   140053289:	rex.B add al,0x0
   14005328c:	mov    ah,0xf7
   14005328e:	add    al,BYTE PTR [rax]
   140053290:	retf   
   140053291:	test   DWORD PTR [rdx],0x4413800
   140053297:	add    BYTE PTR [rdi+0x80002f8],dl
   14005329d:	stc    
   14005329e:	add    al,BYTE PTR [rax]
   1400532a0:	loopne 0x1400532e6
   1400532a2:	add    al,0x0
   1400532a4:	sbb    bh,cl
   1400532a6:	add    al,BYTE PTR [rax]
   1400532a8:	mov    edi,ecx
   1400532aa:	add    al,BYTE PTR [rax]
   1400532ac:	rol    BYTE PTR [rbp+0x4],0x0
   1400532b0:	sar    ecx,cl
   1400532b2:	add    al,BYTE PTR [rax]
   1400532b4:	rex.RXB cli 
   1400532b6:	add    al,BYTE PTR [rax]
   1400532b8:	push   rax
   1400532b9:	rex.RXB add al,0x0
   1400532bc:	rex.RXB cli 
   1400532be:	add    al,BYTE PTR [rax]
   1400532c0:	mov    eax,0x500002fa
   1400532c5:	rex.RXB add al,0x0
   1400532c8:	sbb    bl,bh
   1400532ca:	add    al,BYTE PTR [rax]
   1400532cc:	xor    edi,ebx
   1400532ce:	add    al,BYTE PTR [rax]
   1400532d0:	ror    BYTE PTR [rax+0x4],0x0
   1400532d4:	cmp    bh,ah
   1400532d6:	add    al,BYTE PTR [rax]
   1400532d8:	pop    rdx
   1400532d9:	cld    
   1400532da:	add    al,BYTE PTR [rax]
   1400532dc:	nop
   1400532dd:	rex.WXB add al,0x0
   1400532e0:	(bad)  
   1400532e1:	cld    
   1400532e2:	add    al,BYTE PTR [rax]
   1400532e4:	ja     0x1400532e2
   1400532e6:	add    al,BYTE PTR [rax]
   1400532e8:	adc    BYTE PTR [rsp+rax*1+0x0],cl
   1400532ec:	jge    0x1400532ea
   1400532ee:	add    al,BYTE PTR [rax]
   1400532f0:	movabs eax,ds:0xa700044ca00002fc
   1400532f9:	cld    
   1400532fa:	add    al,BYTE PTR [rax]
   1400532fc:	(bad)  
   1400532fd:	cld    
   1400532fe:	add    al,BYTE PTR [rax]
   140053300:	adc    BYTE PTR [rbp+0x4],cl
   140053303:	add    cl,bl
   140053305:	cld    
   140053306:	add    al,BYTE PTR [rax]
   140053308:	add    ch,bh
   14005330a:	add    al,BYTE PTR [rax]
   14005330c:	ror    BYTE PTR [rbp+0x4],0x0
   140053310:	add    dh,bh
   140053312:	add    al,BYTE PTR [rax]
   140053314:	and    dh,bh
   140053316:	add    al,BYTE PTR [rax]
   140053318:	sub    BYTE PTR [rdx+0x4],dl
   14005331b:	add    BYTE PTR [rsi],ah
   14005331d:	inc    BYTE PTR [rdx]
   14005331f:	add    BYTE PTR [rsi-0x2],al
   140053322:	add    al,BYTE PTR [rax]
   140053324:	test   al,0x52
   140053326:	add    al,0x0
   140053328:	rex.WR inc BYTE PTR [rdx]
   14005332b:	add    BYTE PTR [rbx-0x2],dh
   14005332e:	add    al,BYTE PTR [rax]
   140053330:	sub    BYTE PTR [rbx+0x4],dl
   140053333:	add    BYTE PTR [rcx-0x2],bh
   140053336:	add    al,BYTE PTR [rax]
   140053338:	mov    ebx,0xb00002fe
   14005333d:	push   rbx
   14005333e:	add    al,0x0
   140053340:	sar    esi,0x2
   140053343:	add    cl,ah
   140053345:	inc    BYTE PTR [rdx]
   140053347:	add    BYTE PTR [rax],ch
   140053349:	push   rsp
   14005334a:	add    al,0x0
   14005334c:	and    edi,edi
   14005334e:	add    al,BYTE PTR [rax]
   140053350:	rex.RXB inc DWORD PTR [r10]
   140053353:	add    BYTE PTR [rax+0x55],bh
   140053356:	add    al,0x0
   140053358:	(bad)  
   140053359:	inc    DWORD PTR [rdx]
   14005335b:	add    BYTE PTR [rdi+rdi*8+0x56d00002],dh
   140053362:	add    al,0x0
   140053364:	(bad)  
   140053365:	inc    DWORD PTR [rdx]
   140053367:	add    al,dh
   140053369:	inc    DWORD PTR [rdx]
   14005336b:	add    BYTE PTR [rax-0x9fffba9],dl
   140053371:	inc    DWORD PTR [rdx]
   140053373:	add    BYTE PTR [rsi],dl
   140053375:	add    BYTE PTR [rbx],al
   140053377:	add    BYTE PTR [rax],cl
   140053379:	pop    rax
   14005337a:	add    al,0x0
   14005337c:	sbb    al,0x0
   14005337e:	add    eax,DWORD PTR [rax]
   140053380:	cmp    al,0x0
   140053382:	add    eax,DWORD PTR [rax]
   140053384:	cwde   
   140053385:	pop    rax
   140053386:	add    al,0x0
   140053388:	mov    edx,0xd6000300
   14005338d:	add    BYTE PTR [rbx],al
   14005338f:	add    BYTE PTR [rdi+riz*1+0x4],al
   140053393:	add    dh,dl
   140053395:	add    BYTE PTR [rbx],al
   140053397:	add    dl,dh
   140053399:	add    BYTE PTR [rbx],al
   14005339b:	add    BYTE PTR [rdi+riz*1+0x4],al
   14005339f:	add    dl,dh
   1400533a1:	add    BYTE PTR [rbx],al
   1400533a3:	add    BYTE PTR [rsi],dl
   1400533a5:	add    DWORD PTR [rbx],eax
   1400533a7:	add    BYTE PTR [rax+0x5b],bh
   1400533aa:	add    al,0x0
   1400533ac:	(bad)  
   1400533ad:	add    DWORD PTR [rbx],eax
   1400533af:	add    BYTE PTR [rax+0x1],al
   1400533b2:	add    eax,DWORD PTR [rax]
   1400533b4:	js     0x140053411
   1400533b6:	add    al,0x0
   1400533b8:	rex.RX add DWORD PTR [rbx],r8d
   1400533bb:	add    BYTE PTR [rsi+0x1],ah
   1400533be:	add    eax,DWORD PTR [rax]
   1400533c0:	clc    
   1400533c1:	pop    rbx
   1400533c2:	add    al,0x0
   1400533c4:	ins    BYTE PTR es:[rdi],dx
   1400533c5:	add    DWORD PTR [rbx],eax
   1400533c7:	add    BYTE PTR [rax+0x44000301],cl
   1400533cd:	(bad)  
   1400533ce:	add    al,0x0
   1400533d0:	mov    BYTE PTR [rcx],al
   1400533d2:	add    eax,DWORD PTR [rax]
   1400533d4:	mov    ecx,0x98000301
   1400533d9:	pop    rsp
   1400533da:	add    al,0x0
   1400533dc:	pop    rdx
   1400533dd:	add    al,BYTE PTR [rbx]
   1400533df:	add    BYTE PTR [rdx+0x2],bh
   1400533e2:	add    eax,DWORD PTR [rax]
   1400533e4:	or     BYTE PTR [rsi+0x4],bl
   1400533e7:	add    BYTE PTR [rdx-0x46fffcfe],dl
   1400533ed:	add    al,BYTE PTR [rbx]
   1400533ef:	add    BYTE PTR [rax-0x40fffba1],ah
   1400533f5:	add    al,BYTE PTR [rbx]
   1400533f7:	add    dh,ah
   1400533f9:	add    al,BYTE PTR [rbx]
   1400533fb:	add    BYTE PTR [rax],dh
   1400533fd:	(bad)  
   1400533fe:	add    al,0x0
   140053400:	in     al,dx
   140053401:	add    al,BYTE PTR [rbx]
   140053403:	add    BYTE PTR [rbx],dl
   140053405:	add    eax,DWORD PTR [rbx]
   140053407:	add    al,al
   140053409:	(bad)  
   14005340a:	add    al,0x0
   14005340c:	and    eax,0xa6000303
   140053411:	add    eax,DWORD PTR [rbx]
   140053413:	add    BYTE PTR [rax-0x68fffb9f],dl
   140053419:	add    al,0x3
   14005341b:	add    BYTE PTR [rsi-0x77fffcfc],bh
   140053421:	movsxd eax,DWORD PTR [rax+rax*1]
   140053424:	fadd   QWORD PTR [rbx+rax*1]
   140053427:	add    BYTE PTR [rsi],al
   140053429:	add    eax,0x64600003
   14005342e:	add    al,0x0
   140053430:	sub    al,BYTE PTR [rip+0x59b0003]        # 0x145a03439
   140053436:	add    eax,DWORD PTR [rax]
   140053438:	js     0x14005349f
   14005343a:	add    al,0x0
   14005343c:	movabs eax,ds:0xf800030612000305
   140053445:	gs add al,0x0
   140053448:	rex.WRX (bad) 
   14005344a:	add    eax,DWORD PTR [rax]
   14005344c:	js     0x140053454
   14005344e:	add    eax,DWORD PTR [rax]
   140053450:	and    BYTE PTR [rdi+0x4],0x0
   140053454:	js     0x14005345c
   140053456:	add    eax,DWORD PTR [rax]
   140053458:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140053459:	(bad)  
   14005345a:	add    eax,DWORD PTR [rax]
   14005345c:	and    BYTE PTR [rdi+0x4],0x0
   140053460:	stos   DWORD PTR es:[rdi],eax
   140053461:	(bad)  
   140053462:	add    eax,DWORD PTR [rax]
   140053464:	rol    BYTE PTR [rsi],cl
   140053466:	add    eax,DWORD PTR [rax]
   140053468:	(bad)  
   140053469:	push   0x6d80004
   14005346e:	add    eax,DWORD PTR [rax]
   140053470:	cld    
   140053471:	(bad)  
   140053472:	add    eax,DWORD PTR [rax]
   140053474:	fsubr  DWORD PTR [rax+0x4]
   140053477:	add    BYTE PTR [rdx],al
   140053479:	(bad)  
   14005347a:	add    eax,DWORD PTR [rax]
   14005347c:	and    al,BYTE PTR [rdi]
   14005347e:	add    eax,DWORD PTR [rax]
   140053480:	imul   rax,QWORD PTR [rax+rax*1],0x30734
   140053488:	sahf   
   140053489:	(bad)  
   14005348a:	add    eax,DWORD PTR [rax]
   14005348c:	or     BYTE PTR [rdx+0x4],ch
   14005348f:	add    BYTE PTR [rax],ch
   140053491:	or     BYTE PTR [rbx],al
   140053493:	add    BYTE PTR [rdx+0x58000308],dl
   140053499:	imul   eax,DWORD PTR [rax+rax*1],0xffffff98
   14005349d:	or     BYTE PTR [rbx],al
   14005349f:	add    BYTE PTR [rcx+rcx*1+0x3],bl
   1400534a3:	add    al,bl
   1400534a5:	imul   eax,DWORD PTR [rax+rax*1],0x74
   1400534a9:	or     DWORD PTR [rbx],eax
   1400534ab:	add    BYTE PTR [rdx-0x67fffcf7],bl
   1400534b1:	ins    BYTE PTR es:[rdi],dx
   1400534b2:	add    al,0x0
   1400534b4:	movabs al,ds:0xf0000309c4000309
   1400534bd:	ins    DWORD PTR es:[rdi],dx
   1400534be:	add    al,0x0
   1400534c0:	(bad)  
   1400534c1:	or     DWORD PTR [rbx],eax
   1400534c3:	add    bl,ch
   1400534c5:	or     DWORD PTR [rbx],eax
   1400534c7:	add    al,dh
   1400534c9:	ins    DWORD PTR es:[rdi],dx
   1400534ca:	add    al,0x0
   1400534cc:	(bad)  
   1400534cd:	or     al,BYTE PTR [rbx]
   1400534cf:	add    BYTE PTR [rax+0x6800030a],ah
   1400534d5:	outs   dx,DWORD PTR ds:[rsi]
   1400534d6:	add    al,0x0
   1400534d8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400534d9:	or     al,BYTE PTR [rbx]
   1400534db:	add    BYTE PTR [rdx],bl
   1400534dd:	or     eax,DWORD PTR [rbx]
   1400534df:	add    BYTE PTR [rax+0x70],al
   1400534e2:	add    al,0x0
   1400534e4:	sbb    cl,BYTE PTR [rbx]
   1400534e6:	add    eax,DWORD PTR [rax]
   1400534e8:	mov    ecx,DWORD PTR [rbx]
   1400534ea:	add    eax,DWORD PTR [rax]
   1400534ec:	rex jo 0x1400534f3
   1400534ef:	add    BYTE PTR [rbp+0x1e00030b],bl
   1400534f5:	or     al,0x3
   1400534f7:	add    al,ah
   1400534f9:	jo     0x1400534ff
   1400534fb:	add    BYTE PTR [rax],dh
   1400534fd:	or     al,0x3
   1400534ff:	add    BYTE PTR [rcx-0x7ffffcf4],dh
   140053505:	jno    0x14005350b
   140053507:	add    bh,al
   140053509:	or     al,0x3
   14005350b:	add    ch,dh
   14005350d:	or     al,0x3
   14005350f:	add    BYTE PTR [rdi+riz*1+0x4],al
   140053513:	add    BYTE PTR [rip+0xffffffffbe00030d],bh        # 0xfe053826
   140053519:	or     eax,0x73180003
   14005351e:	add    al,0x0
   140053520:	ror    BYTE PTR [rip+0xe510003],1        # 0x14e563529
   140053526:	add    eax,DWORD PTR [rax]
   140053528:	shl    BYTE PTR [rbx+0x4],1
   14005352b:	add    BYTE PTR [rbx+0xe],bh
   14005352e:	add    eax,DWORD PTR [rax]
   140053530:	cld    
   140053531:	(bad)  
   140053532:	add    eax,DWORD PTR [rax]
   140053534:	fdiv   DWORD PTR [rsp+rax*1+0x0]
   140053538:	sbb    cl,BYTE PTR [rdi]
   14005353a:	add    eax,DWORD PTR [rax]
   14005353c:	lsl    eax,WORD PTR [r8]
   140053540:	test   al,0x75
   140053542:	add    al,0x0
   140053544:	(bad)  
   140053545:	lsl    eax,WORD PTR [rax]
   140053548:	mov    dh,0xf
   14005354a:	add    eax,DWORD PTR [rax]
   14005354c:	add    BYTE PTR [rax+0x4],bh
   14005354f:	add    BYTE PTR [rdi+rcx*1+0xfe30003],bh
   140053556:	add    eax,DWORD PTR [rax]
   140053558:	nop
   140053559:	js     0x14005355f
   14005355b:	add    cl,ch
   14005355d:	lsl    eax,WORD PTR [rax]
   140053560:	adc    BYTE PTR [rax],dl
   140053562:	add    eax,DWORD PTR [rax]
   140053564:	and    BYTE PTR [rcx+0x4],bh
   140053567:	add    BYTE PTR [rsi],dl
   140053569:	adc    BYTE PTR [rbx],al
   14005356b:	add    BYTE PTR [rip+0xffffffffb8000310],bh        # 0xf8053881
   140053571:	jns    0x140053577
   140053573:	add    BYTE PTR [rbx+0x10],al
   140053576:	add    eax,DWORD PTR [rax]
   140053578:	ins    DWORD PTR es:[rdi],dx
   140053579:	adc    BYTE PTR [rbx],al
   14005357b:	add    BYTE PTR [rax],bh
   14005357d:	jp     0x140053583
   14005357f:	add    BYTE PTR [rbx+0x10],dh
   140053582:	add    eax,DWORD PTR [rax]
   140053584:	mov    DWORD PTR [rax],edx
   140053586:	add    eax,DWORD PTR [rax]
   140053588:	cwde   
   140053589:	jp     0x14005358f
   14005358b:	add    BYTE PTR [rbp-0x22fffcf0],bh
   140053591:	adc    BYTE PTR [rbx],al
   140053593:	add    BYTE PTR [rax+0x7b],cl
   140053596:	add    al,0x0
   140053598:	jrcxz  0x1400535aa
   14005359a:	add    eax,DWORD PTR [rax]
   14005359c:	add    edx,DWORD PTR [rcx]
   14005359e:	add    eax,DWORD PTR [rax]
   1400535a0:	mov    eax,0x900047b
   1400535a5:	adc    DWORD PTR [rbx],eax
   1400535a7:	add    BYTE PTR [rcx+rdx*1],ch
   1400535aa:	add    eax,DWORD PTR [rax]
   1400535ac:	xor    BYTE PTR [rsp+rax*1+0x0],bh
   1400535b0:	xor    dl,BYTE PTR [rcx]
   1400535b2:	add    eax,DWORD PTR [rax]
   1400535b4:	push   rdx
   1400535b5:	adc    DWORD PTR [rbx],eax
   1400535b7:	add    BYTE PTR [rax+0x5800047c],ah
   1400535bd:	adc    DWORD PTR [rbx],eax
   1400535bf:	add    BYTE PTR [rax+0x11],bh
   1400535c2:	add    eax,DWORD PTR [rax]
   1400535c4:	or     BYTE PTR [rbp+0x4],bh
   1400535c7:	add    BYTE PTR [rsi+0x11],bh
   1400535ca:	add    eax,DWORD PTR [rax]
   1400535cc:	sahf   
   1400535cd:	adc    DWORD PTR [rbx],eax
   1400535cf:	add    BYTE PTR [rax+0x7600047d],bl
   1400535d5:	adc    al,BYTE PTR [rbx]
   1400535d7:	add    BYTE PTR [rcx-0x7ffffcee],dl
   1400535dd:	(bad)  
   1400535de:	add    al,0x0
   1400535e0:	movabs ds:0x20000312be000312,eax
   1400535e9:	add    DWORD PTR [rax+rax*1],0xffffffc4
   1400535ed:	adc    al,BYTE PTR [rbx]
   1400535ef:	add    bl,ch
   1400535f1:	adc    al,BYTE PTR [rbx]
   1400535f3:	add    al,ah
   1400535f5:	add    DWORD PTR [rax+rax*1],0xfffffffd
   1400535f9:	adc    al,BYTE PTR [rbx]
   1400535fb:	add    BYTE PTR [rbx+rdx*1],ah
   1400535fe:	add    eax,DWORD PTR [rax]
   140053600:	mov    eax,0x78000484
   140053605:	adc    eax,DWORD PTR [rbx]
   140053607:	add    BYTE PTR [rax+0x30000313],bl
   14005360d:	xchg   DWORD PTR [rax+rax*1],eax
   140053610:	sahf   
   140053611:	adc    eax,DWORD PTR [rbx]
   140053613:	add    BYTE PTR [rsi-0x4ffffced],bh
   140053619:	xchg   DWORD PTR [rax+rax*1],eax
   14005361c:	(bad)  
   14005361d:	adc    eax,DWORD PTR [rbx]
   14005361f:	add    BYTE PTR [rsi],cl
   140053621:	adc    al,0x3
   140053623:	add    BYTE PTR [rax],bh
   140053625:	mov    BYTE PTR [rax+rax*1],al
   140053628:	ss adc al,0x3
   14005362b:	add    BYTE PTR [rbp+0x14],bl
   14005362e:	add    eax,DWORD PTR [rax]
   140053630:	xor    BYTE PTR [rdx+0x14c50004],cl
   140053636:	add    eax,DWORD PTR [rax]
   140053638:	in     al,dx
   140053639:	adc    al,0x3
   14005363b:	add    BYTE PTR [rax-0x1fffb75],ah
   140053641:	adc    al,0x3
   140053643:	add    BYTE PTR [rip+0x40000315],ah        # 0x18005395e
   140053649:	mov    WORD PTR [rax+rax*1],es
   14005364c:	jae    0x140053663
   14005364e:	add    eax,DWORD PTR [rax]
   140053650:	mov    dl,BYTE PTR [rip+0xffffffff8dd00003]        # 0xcdd53659
   140053656:	add    al,0x0
   140053658:	nop
   140053659:	adc    eax,0x15b70003
   14005365e:	add    eax,DWORD PTR [rax]
   140053660:	(bad)  
   140053661:	mov    es,WORD PTR [rax+rax*1]
   140053664:	mov    ebp,0xe1000315
   140053669:	adc    eax,0x8ee00003
   14005366e:	add    al,0x0
   140053670:	out    0x15,eax
   140053672:	add    eax,DWORD PTR [rax]
   140053674:	add    eax,0x44000316
   140053679:	(bad)  
   14005367a:	add    al,0x0
   14005367c:	or     edx,DWORD PTR [rsi]
   14005367e:	add    eax,DWORD PTR [rax]
   140053680:	(bad)  
   140053681:	(bad)  
   140053682:	add    eax,DWORD PTR [rax]
   140053684:	rex.R (bad) 
   140053686:	add    al,0x0
   140053688:	cmp    eax,0x7f000316
   14005368d:	(bad)  
   14005368e:	add    eax,DWORD PTR [rax]
   140053690:	rex.R (bad) 
   140053692:	add    al,0x0
   140053694:	test   DWORD PTR [rsi],edx
   140053696:	add    eax,DWORD PTR [rax]
   140053698:	movabs al,ds:0xa600042744000316
   1400536a1:	(bad)  
   1400536a2:	add    eax,DWORD PTR [rax]
   1400536a4:	rcl    BYTE PTR [rsi],cl
   1400536a6:	add    eax,DWORD PTR [rax]
   1400536a8:	rex.R (bad) 
   1400536aa:	add    al,0x0
   1400536ac:	loopne 0x1400536c4
   1400536ae:	add    eax,DWORD PTR [rax]
   1400536b0:	add    BYTE PTR [rdi],dl
   1400536b2:	add    eax,DWORD PTR [rax]
   1400536b4:	rex.R (bad) 
   1400536b6:	add    al,0x0
   1400536b8:	jo     0x1400536d1
   1400536ba:	add    eax,DWORD PTR [rax]
   1400536bc:	xchg   ebx,eax
   1400536bd:	(bad)  
   1400536be:	add    eax,DWORD PTR [rax]
   1400536c0:	mov    ah,0x1f
   1400536c2:	add    al,0x0
   1400536c4:	movabs al,ds:0xb4000317ed000317
   1400536cd:	(bad)  
   1400536ce:	add    al,0x0
   1400536d0:	add    BYTE PTR [rax],bl
   1400536d2:	add    eax,DWORD PTR [rax]
   1400536d4:	sbb    BYTE PTR [rbx],r8b
   1400536d7:	add    BYTE PTR [rax+0x1f],ah
   1400536da:	add    al,0x0
   1400536dc:	jo     0x1400536f6
   1400536de:	add    eax,DWORD PTR [rax]
   1400536e0:	or     al,0x19
   1400536e2:	add    eax,DWORD PTR [rax]
   1400536e4:	(bad)  
   1400536e5:	(bad)  
   1400536e6:	add    al,0x0
   1400536e8:	and    BYTE PTR [rcx],bl
   1400536ea:	add    eax,DWORD PTR [rax]
   1400536ec:	pop    rsi
   1400536ed:	sbb    DWORD PTR [rbx],eax
   1400536ef:	add    BYTE PTR [rdi+rbx*1+0x19700004],dh
   1400536f6:	add    eax,DWORD PTR [rax]
   1400536f8:	push   rcx
   1400536f9:	sbb    al,BYTE PTR [rbx]
   1400536fb:	.byte 0x0
   1400536fc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400536fd:	(bad)  
   1400536fe:	add    al,0x0

Disassembly of section .rsrc:

0000000140054000 <.rsrc>:
	...
   14005400c:	add    DWORD PTR [rax],eax
   14005400e:	add    eax,DWORD PTR [rax]
   140054010:	xor    BYTE PTR [rcx],al
   140054012:	add    BYTE PTR [rax-0x7fffffd0],al
   140054018:	or     eax,DWORD PTR [rax]
   14005401a:	add    BYTE PTR [rax],al
   14005401c:	rex.W add BYTE PTR [rax],al
   14005401f:	adc    BYTE PTR [rax],0x0
   140054022:	add    BYTE PTR [rax],al
   140054024:	(bad)  
   140054025:	add    BYTE PTR [rax],al
   140054027:	sbb    BYTE PTR [rax],0x0
   14005402a:	add    BYTE PTR [rax],al
   14005402c:	js     0x14005402e
   14005402e:	add    BYTE PTR [rax+0x0],al
	...
   14005403c:	add    BYTE PTR [rax],al
   14005403e:	add    DWORD PTR [rax],eax
   140054040:	add    DWORD PTR [rax],eax
   140054042:	add    BYTE PTR [rax],al
   140054044:	nop
   140054045:	add    BYTE PTR [rax],al
   140054047:	add    BYTE PTR [rax],0x0
	...
   140054056:	add    DWORD PTR [rax],eax
   140054058:	add    DWORD PTR [rax],eax
   14005405a:	add    BYTE PTR [rax],al
   14005405c:	test   al,0x0
   14005405e:	add    BYTE PTR [rax+0x0],al
	...
   14005406c:	add    BYTE PTR [rax],al
   14005406e:	add    DWORD PTR [rax],eax
   140054070:	add    DWORD PTR [rax],eax
   140054072:	add    BYTE PTR [rax],al
   140054074:	rol    BYTE PTR [rax],0x0
   140054077:	add    BYTE PTR [rax],0x0
	...
   140054086:	add    DWORD PTR [rax],eax
   140054088:	add    DWORD PTR [rax],eax
   14005408a:	add    BYTE PTR [rax],al
   14005408c:	fadd   DWORD PTR [rax]
   14005408e:	add    BYTE PTR [rax+0x0],al
	...
   14005409c:	add    BYTE PTR [rax],al
   14005409e:	add    DWORD PTR [rax],eax
   1400540a0:	or     DWORD PTR [rax+rax*1],eax
   1400540a3:	add    al,dh
	...
   1400540b5:	add    BYTE PTR [rcx],al
   1400540b7:	add    BYTE PTR [rcx],cl
   1400540b9:	add    al,0x0
   1400540bb:	add    BYTE PTR [rax],al
   1400540bd:	add    DWORD PTR [rax],eax
	...
   1400540cb:	add    BYTE PTR [rax],al
   1400540cd:	add    BYTE PTR [rcx],al
   1400540cf:	add    BYTE PTR [rcx],cl
   1400540d1:	add    al,0x0
   1400540d3:	add    BYTE PTR [rax],dl
   1400540d5:	add    DWORD PTR [rax],eax
	...
   1400540e3:	add    BYTE PTR [rax],al
   1400540e5:	add    BYTE PTR [rcx],al
   1400540e7:	add    BYTE PTR [rcx],cl
   1400540e9:	add    al,0x0
   1400540eb:	add    BYTE PTR [rax],ah
   1400540ed:	add    DWORD PTR [rax],eax
   1400540ef:	add    BYTE PTR [rax],dl
   1400540f1:	rex.WR add rax,0xb7a00
	...
   1400540ff:	add    al,dh
   140054101:	rex.WX add rax,0x12000
	...
   14005410f:	add    BYTE PTR [rax],dh
   140054111:	rex.RXB add eax,0x3c000
	...
   14005411f:	add    BYTE PTR [rax+0x41],dl
   140054122:	add    eax,0x5dd00
	...
   14005412f:	add    BYTE PTR [rip+0x45005700],cl        # 0x185059835
   140054135:	add    BYTE PTR [rsi+0x0],dl
   140054138:	push   rsp
   140054139:	add    BYTE PTR [rdi+0x0],bl
   14005413c:	push   rsp
   14005413d:	add    BYTE PTR [rbp+0x0],al
   140054140:	rex.WRB add BYTE PTR [r8+0x0],r10b
   140054144:	rex.WR add BYTE PTR [rcx+0x0],r8b
   140054148:	push   rsp
   140054149:	add    BYTE PTR [rbp+0x0],al
   14005414c:	add    BYTE PTR [rax],al
   14005414e:	add    BYTE PTR [rax],al
   140054150:	cmp    al,0x3f
   140054152:	js     0x1400541c1
   140054154:	ins    BYTE PTR es:[rdi],dx
   140054155:	and    BYTE PTR [rsi+0x65],dh
   140054158:	jb     0x1400541cd
   14005415a:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   140054161:	xor    BYTE PTR [rdx],ah
   140054163:	and    BYTE PTR [rbp+0x6e],ah
   140054166:	movsxd ebp,DWORD PTR [rdi+0x64]
   140054169:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   140054170:	rex.RX sub eax,0x3f202238
   140054176:	and    BYTE PTR ds:[rip+0x2d213c0a],cl        # 0x16d267d87
   14005417d:	sub    eax,0x706f4320
   140054182:	jns    0x1400541f6
   140054184:	imul   esp,DWORD PTR [rdi+0x68],0x63282074
   14005418b:	sub    DWORD PTR [rax],esp
   14005418d:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   140054195:	je     0x1400541b7
   140054197:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140054199:	jb     0x14005420b
   14005419b:	outs   dx,DWORD PTR ds:[rsi]
   14005419c:	jb     0x1400541ff
   14005419e:	je     0x140054209
   1400541a0:	outs   dx,DWORD PTR ds:[rsi]
   1400541a1:	outs   dx,BYTE PTR ds:[rsi]
   1400541a2:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a127fd5
   1400541a8:	cmp    al,0x61
   1400541aa:	jae    0x14005421f
   1400541ac:	gs ins DWORD PTR es:[rdi],dx
   1400541ae:	(bad)  
   1400541af:	ins    BYTE PTR es:[rdi],dx
   1400541b0:	jns    0x1400541d2
   1400541b2:	js     0x140054221
   1400541b4:	ins    BYTE PTR es:[rdi],dx
   1400541b5:	outs   dx,BYTE PTR ds:[rsi]
   1400541b6:	jae    0x1400541f5
   1400541b8:	and    dh,BYTE PTR [rbp+0x72]
   1400541bb:	outs   dx,BYTE PTR ds:[rsi]
   1400541bc:	cmp    dh,BYTE PTR [rbx+0x63]
   1400541bf:	push   0x73616d65
   1400541c4:	sub    eax,0x7263696d
   1400541c9:	outs   dx,DWORD PTR ds:[rsi]
   1400541ca:	jae    0x14005423b
   1400541cc:	data16 je 0x1400541fc
   1400541cf:	movsxd ebp,DWORD PTR [rdi+0x6d]
   1400541d2:	cmp    ah,BYTE PTR [rcx+0x73]
   1400541d5:	ins    DWORD PTR es:[rdi],dx
   1400541d6:	cs jbe 0x14005420a
   1400541d9:	and    ah,BYTE PTR [rax]
   1400541db:	ins    DWORD PTR es:[rdi],dx
   1400541dc:	(bad)  
   1400541dd:	outs   dx,BYTE PTR ds:[rsi]
   1400541de:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   1400541e5:	jb     0x14005425a
   1400541e7:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   1400541ee:	xor    BYTE PTR [rdx],ah
   1400541f0:	ds or  eax,0x2020200a
   1400541f6:	and    BYTE PTR [rsp+rsi*2],bh
   1400541f9:	jb     0x140054270
   1400541fb:	jae    0x140054271
   1400541fd:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400541ff:	outs   dx,WORD PTR ds:[rsi]
   140054201:	and    BYTE PTR [rax+0x6d],bh
   140054204:	ins    BYTE PTR es:[rdi],dx
   140054205:	outs   dx,BYTE PTR ds:[rsi]
   140054206:	jae    0x140054245
   140054208:	and    dh,BYTE PTR [rbp+0x72]
   14005420b:	outs   dx,BYTE PTR ds:[rsi]
   14005420c:	cmp    dh,BYTE PTR [rbx+0x63]
   14005420f:	push   0x73616d65
   140054214:	sub    eax,0x7263696d
   140054219:	outs   dx,DWORD PTR ds:[rsi]
   14005421a:	jae    0x14005428b
   14005421c:	data16 je 0x14005424c
   14005421f:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140054222:	cmp    ah,BYTE PTR [rcx+0x73]
   140054225:	ins    DWORD PTR es:[rdi],dx
   140054226:	cs jbe 0x14005425c
   140054229:	and    bh,BYTE PTR [rsi]
   14005422b:	or     eax,0x2020200a
   140054230:	and    BYTE PTR [rax],ah
   140054232:	and    BYTE PTR [rax],ah
   140054234:	and    BYTE PTR [rbx+rsi*2],bh
   140054237:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14005423b:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   140054243:	and    BYTE PTR [rax],ah
   140054245:	and    BYTE PTR [rax],ah
   140054247:	and    BYTE PTR [rax],ah
   140054249:	and    BYTE PTR [rax],ah
   14005424b:	and    BYTE PTR [rax],ah
   14005424d:	cmp    al,0x72
   14005424f:	gs jno 0x1400542c7
   140054252:	gs jae 0x1400542c9
   140054255:	gs fs push rax
   140054258:	jb     0x1400542c3
   14005425a:	jbe    0x1400542c5
   14005425c:	ins    BYTE PTR es:[rdi],dx
   14005425d:	gs addr32 gs jae 0x1400542a0
   140054262:	or     eax,0x2020200a
   140054267:	and    BYTE PTR [rax],ah
   140054269:	and    BYTE PTR [rax],ah
   14005426b:	and    BYTE PTR [rax],ah
   14005426d:	and    BYTE PTR [rax],ah
   14005426f:	and    BYTE PTR [rax],ah
   140054271:	and    BYTE PTR [rax],ah
   140054273:	and    BYTE PTR [rdx+rsi*2],bh
   140054276:	gs jno 0x1400542ee
   140054279:	gs jae 0x1400542f0
   14005427c:	gs fs rex.RB js 0x1400542e6
   140054281:	movsxd esi,DWORD PTR [rbp+0x74]
   140054284:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14005428b:	ins    BYTE PTR es:[rdi],dx
   14005428c:	and    BYTE PTR [rbp+riz*2+0x76],ch
   140054290:	gs ins BYTE PTR es:[rdi],dx
   140054292:	cmp    eax,0x49736122
   140054297:	outs   dx,BYTE PTR ds:[rsi]
   140054298:	jbe    0x140054309
   14005429a:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14005429e:	and    BYTE PTR [rbp+0x69],dh
   1400542a1:	movsxd esp,DWORD PTR [r11+0x65]
   1400542a5:	jae    0x14005431a
   1400542a7:	cmp    eax,0x6c616622
   1400542ac:	jae    0x140054313
   1400542ae:	and    ah,BYTE PTR [rax]
   1400542b0:	(bad)  
   1400542b1:	and    BYTE PTR ds:[rip+0x2020200a],cl        # 0x1602562c2
   1400542b8:	and    BYTE PTR [rax],ah
   1400542ba:	and    BYTE PTR [rax],ah
   1400542bc:	and    BYTE PTR [rax],ah
   1400542be:	and    BYTE PTR [rax],ah
   1400542c0:	and    BYTE PTR [rdi+rbp*1],bh
   1400542c3:	jb     0x14005432a
   1400542c5:	jno    0x14005433c
   1400542c7:	gs jae 0x14005433e
   1400542ca:	gs fs push rax
   1400542cd:	jb     0x140054338
   1400542cf:	jbe    0x14005433a
   1400542d1:	ins    BYTE PTR es:[rdi],dx
   1400542d2:	gs addr32 gs jae 0x140054315
   1400542d7:	or     eax,0x2020200a
   1400542dc:	and    BYTE PTR [rax],ah
   1400542de:	and    BYTE PTR [rax],ah
   1400542e0:	and    BYTE PTR [rdi+rbp*1],bh
   1400542e3:	jae    0x14005434a
   1400542e5:	movsxd esi,DWORD PTR [rbp+0x72]
   1400542e8:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   1400542f0:	and    BYTE PTR [rax],ah
   1400542f2:	cmp    al,0x2f
   1400542f4:	je     0x140054368
   1400542f6:	jne    0x14005436b
   1400542f8:	je     0x140054343
   1400542fa:	outs   dx,BYTE PTR ds:[rsi]
   1400542fb:	outs   dx,WORD PTR ds:[rsi]
   1400542fd:	ds or  eax,0x2020200a
   140054303:	and    BYTE PTR [rbx+riz*2],bh
   140054306:	outs   dx,DWORD PTR ds:[rsi]
   140054307:	ins    DWORD PTR es:[rdi],dx
   140054308:	jo     0x14005436b
   14005430a:	je     0x140054375
   14005430c:	(bad)  
   14005430d:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x6d782079
   140054315:	ins    BYTE PTR es:[rdi],dx
   140054316:	outs   dx,BYTE PTR ds:[rsi]
   140054317:	jae    0x140054356
   140054319:	and    dh,BYTE PTR [rbp+0x72]
   14005431c:	outs   dx,BYTE PTR ds:[rsi]
   14005431d:	cmp    dh,BYTE PTR [rbx+0x63]
   140054320:	push   0x73616d65
   140054325:	sub    eax,0x7263696d
   14005432a:	outs   dx,DWORD PTR ds:[rsi]
   14005432b:	jae    0x14005439c
   14005432d:	data16 je 0x14005435d
   140054330:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140054333:	cmp    ah,BYTE PTR [rbx+0x6f]
   140054336:	ins    DWORD PTR es:[rdi],dx
   140054337:	jo     0x14005439a
   140054339:	je     0x1400543a4
   14005433b:	(bad)  
   14005433c:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x31762e79
   140054344:	and    bh,BYTE PTR [rsi]
   140054346:	and    BYTE PTR [rip+0x2020200a],cl        # 0x160256356
   14005434c:	and    BYTE PTR [rax],ah
   14005434e:	and    BYTE PTR [rax],ah
   140054350:	and    BYTE PTR [rcx+riz*2],bh
   140054353:	jo     0x1400543c5
   140054355:	ins    BYTE PTR es:[rdi],dx
   140054356:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14005435d:	and    BYTE PTR ds:[rip+0x2020200a],cl        # 0x16025636e
   140054364:	and    BYTE PTR [rax],ah
   140054366:	and    BYTE PTR [rax],ah
   140054368:	and    BYTE PTR [rax],ah
   14005436a:	and    BYTE PTR [rax],ah
   14005436c:	and    BYTE PTR [rcx+riz*1],bh
   14005436f:	sub    eax,0x6968542d
   140054374:	jae    0x140054396
   140054376:	rex.WB
   140054377:	and    BYTE PTR fs:[rsi+0x61],dh
   14005437b:	ins    BYTE PTR es:[rdi],dx
   14005437c:	jne    0x1400543e3
   14005437e:	and    BYTE PTR [rcx+0x6e],ch
   140054381:	imul   esp,DWORD PTR fs:[rbx+0x61],0x20736574
   140054389:	je     0x1400543f3
   14005438b:	and    BYTE PTR gs:[rcx+0x70],ah
   14005438f:	jo     0x1400543fd
   140054391:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140054398:	and    BYTE PTR [rbx+0x75],dh
   14005439b:	jo     0x14005440d
   14005439d:	outs   dx,DWORD PTR ds:[rsi]
   14005439e:	jb     0x140054414
   1400543a0:	jae    0x1400543c2
   1400543a2:	push   rdi
   1400543a3:	imul   ebp,DWORD PTR [rsi+0x64],0x2073776f
   1400543aa:	push   rsi
   1400543ab:	imul   esi,DWORD PTR [rbx+0x74],0x65532f61
   1400543b2:	jb     0x14005442a
   1400543b4:	gs jb  0x1400543d7
   1400543b7:	xor    dh,BYTE PTR [rax]
   1400543b9:	xor    BYTE PTR [rax],bh
   1400543bb:	and    BYTE PTR [rsi+0x75],ah
   1400543be:	outs   dx,BYTE PTR ds:[rsi]
   1400543bf:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   1400543c3:	outs   dx,BYTE PTR ds:[rsi]
   1400543c4:	(bad)  
   1400543c5:	ins    BYTE PTR es:[rdi],dx
   1400543c6:	imul   esi,DWORD PTR [rcx+rdi*2+0x20],0xd3e2d2d
   1400543ce:	or     ah,BYTE PTR [rax]
   1400543d0:	and    BYTE PTR [rax],ah
   1400543d2:	and    BYTE PTR [rax],ah
   1400543d4:	and    BYTE PTR [rax],ah
   1400543d6:	and    BYTE PTR [rax],ah
   1400543d8:	and    BYTE PTR [rax],ah
   1400543da:	and    BYTE PTR [rbx+rsi*2],bh
   1400543dd:	jne    0x14005444f
   1400543df:	jo     0x140054450
   1400543e1:	jb     0x140054457
   1400543e3:	gs fs rex.WRXB push r11
   1400543e7:	and    BYTE PTR [rcx+0x64],cl
   1400543ea:	cmp    eax,0x32657b22
   1400543ef:	xor    BYTE PTR [rcx],dh
   1400543f1:	xor    DWORD PTR [rsi*1+0x35312d37],esi
   1400543f8:	xor    al,0x36
   1400543fa:	sub    eax,0x35633334
   1400543ff:	sub    eax,0x65663561
   140054404:	sub    eax,0x64383030
   140054409:	gs gs xor esp,DWORD PTR gs:[rbx+rsi*1+0x66]
   140054410:	xor    BYTE PTR [rbp+0x22],bh
   140054413:	(bad)  
   140054414:	and    BYTE PTR ds:[rip+0x2020200a],cl        # 0x160256425
   14005441b:	and    BYTE PTR [rax],ah
   14005441d:	and    BYTE PTR [rax],ah
   14005441f:	and    BYTE PTR [rax],ah
   140054421:	and    BYTE PTR [rax],ah
   140054423:	and    BYTE PTR [rcx+riz*1],bh
   140054426:	sub    eax,0x6968542d
   14005442b:	jae    0x14005444d
   14005442d:	rex.WB
   14005442e:	and    BYTE PTR fs:[rsi+0x61],dh
   140054432:	ins    BYTE PTR es:[rdi],dx
   140054433:	jne    0x14005449a
   140054435:	and    BYTE PTR [rcx+0x6e],ch
   140054438:	imul   esp,DWORD PTR fs:[rbx+0x61],0x20736574
   140054440:	je     0x1400544aa
   140054442:	and    BYTE PTR gs:[rcx+0x70],ah
   140054446:	jo     0x1400544b4
   140054448:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14005444f:	and    BYTE PTR [rbx+0x75],dh
   140054452:	jo     0x1400544c4
   140054454:	outs   dx,DWORD PTR ds:[rsi]
   140054455:	jb     0x1400544cb
   140054457:	jae    0x140054479
   140054459:	push   rdi
   14005445a:	imul   ebp,DWORD PTR [rsi+0x64],0x2073776f
   140054461:	(bad)  
   140054462:	(bad)  
   140054463:	push   rbx
   140054464:	gs jb  0x1400544dd
   140054467:	gs jb  0x14005448a
   14005446a:	xor    dh,BYTE PTR [rax]
   14005446c:	xor    BYTE PTR [rax],bh
   14005446e:	and    BYTE PTR [rdx+0x32],dl
   140054471:	and    BYTE PTR [rsi+0x75],ah
   140054474:	outs   dx,BYTE PTR ds:[rsi]
   140054475:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140054479:	outs   dx,BYTE PTR ds:[rsi]
   14005447a:	(bad)  
   14005447b:	ins    BYTE PTR es:[rdi],dx
   14005447c:	imul   esi,DWORD PTR [rcx+rdi*2+0x2d],0xa0d3e2d
   140054484:	and    BYTE PTR [rax],ah
   140054486:	and    BYTE PTR [rax],ah
   140054488:	and    BYTE PTR [rax],ah
   14005448a:	and    BYTE PTR [rax],ah
   14005448c:	and    BYTE PTR [rax],ah
   14005448e:	and    BYTE PTR [rax],ah
   140054490:	cmp    al,0x73
   140054492:	jne    0x140054504
   140054494:	jo     0x140054505
   140054496:	jb     0x14005450c
   140054498:	gs fs rex.WRXB push r11
   14005449c:	and    BYTE PTR [rcx+0x64],cl
   14005449f:	cmp    eax,0x35337b22
   1400544a4:	xor    DWORD PTR [rbx],esi
   1400544a6:	cmp    BYTE PTR [rdx+0x39],ah
   1400544a9:	(bad)  
   1400544aa:	sub    eax,0x36396435
   1400544af:	sub    eax,0x64626634
   1400544b4:	sub    eax,0x64326538
   1400544b9:	sub    eax,0x34343261
   1400544be:	xor    BYTE PTR [rdx],dh
   1400544c0:	xor    dh,BYTE PTR [rip+0x61333966]        # 0x1a1387e2c
   1400544c6:	jge    0x1400544ea
   1400544c8:	(bad)  
   1400544c9:	ds or  eax,0x2020200a
   1400544cf:	and    BYTE PTR [rax],ah
   1400544d1:	and    BYTE PTR [rax],ah
   1400544d3:	and    BYTE PTR [rax],ah
   1400544d5:	and    BYTE PTR [rax],ah
   1400544d7:	and    BYTE PTR [rcx+riz*1],bh
   1400544da:	sub    eax,0x6968542d
   1400544df:	jae    0x140054501
   1400544e1:	rex.WB
   1400544e2:	and    BYTE PTR fs:[rsi+0x61],dh
   1400544e6:	ins    BYTE PTR es:[rdi],dx
   1400544e7:	jne    0x14005454e
   1400544e9:	and    BYTE PTR [rcx+0x6e],ch
   1400544ec:	imul   esp,DWORD PTR fs:[rbx+0x61],0x20736574
   1400544f4:	je     0x14005455e
   1400544f6:	and    BYTE PTR gs:[rcx+0x70],ah
   1400544fa:	jo     0x140054568
   1400544fc:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140054503:	and    BYTE PTR [rbx+0x75],dh
   140054506:	jo     0x140054578
   140054508:	outs   dx,DWORD PTR ds:[rsi]
   140054509:	jb     0x14005457f
   14005450b:	jae    0x14005452d
   14005450d:	push   rdi
   14005450e:	imul   ebp,DWORD PTR [rsi+0x64],0x2073776f
   140054515:	cmp    BYTE PTR [rdi],ch
   140054517:	push   rbx
   140054518:	gs jb  0x140054591
   14005451b:	gs jb  0x14005453e
   14005451e:	xor    dh,BYTE PTR [rax]
   140054520:	xor    DWORD PTR [rdx],esi
   140054522:	and    BYTE PTR [rsi+0x75],ah
   140054525:	outs   dx,BYTE PTR ds:[rsi]
   140054526:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14005452a:	outs   dx,BYTE PTR ds:[rsi]
   14005452b:	(bad)  
   14005452c:	ins    BYTE PTR es:[rdi],dx
   14005452d:	imul   esi,DWORD PTR [rcx+rdi*2+0x2d],0xa0d3e2d
   140054535:	and    BYTE PTR [rax],ah
   140054537:	and    BYTE PTR [rax],ah
   140054539:	and    BYTE PTR [rax],ah
   14005453b:	and    BYTE PTR [rax],ah
   14005453d:	and    BYTE PTR [rax],ah
   14005453f:	and    BYTE PTR [rax],ah
   140054541:	cmp    al,0x73
   140054543:	jne    0x1400545b5
   140054545:	jo     0x1400545b6
   140054547:	jb     0x1400545bd
   140054549:	gs fs rex.WRXB push r11
   14005454d:	and    BYTE PTR [rcx+0x64],cl
   140054550:	cmp    eax,0x61347b22
   140054555:	xor    ah,BYTE PTR [rsi+0x32]
   140054558:	cmp    BYTE PTR [rbp+0x33],ah
   14005455b:	sub    eax,0x39623335
   140054560:	sub    eax,0x31343434
   140054565:	sub    eax,0x63396162
   14005456a:	sub    eax,0x64393664
   14005456f:	xor    al,0x61
   140054571:	xor    al,0x61
   140054573:	ss xor edi,DWORD PTR gs:[rax]
   140054577:	jge    0x14005459b
   140054579:	(bad)  
   14005457a:	ds or  eax,0x2020200a
   140054580:	and    BYTE PTR [rcx],cl
   140054582:	and    BYTE PTR [rax],ah
   140054584:	and    BYTE PTR [rax],ah
   140054586:	cmp    al,0x21
   140054588:	sub    eax,0x6854202d
   14005458d:	imul   esi,DWORD PTR [rbx+0x20],0x76206449
   140054594:	(bad)  
   140054595:	ins    BYTE PTR es:[rdi],dx
   140054596:	jne    0x1400545fd
   140054598:	and    BYTE PTR [rcx+0x6e],ch
   14005459b:	imul   esp,DWORD PTR fs:[rbx+0x61],0x20736574
   1400545a3:	je     0x14005460d
   1400545a5:	and    BYTE PTR gs:[rcx+0x70],ah
   1400545a9:	jo     0x140054617
   1400545ab:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   1400545b2:	and    BYTE PTR [rbx+0x75],dh
   1400545b5:	jo     0x140054627
   1400545b7:	outs   dx,DWORD PTR ds:[rsi]
   1400545b8:	jb     0x14005462e
   1400545ba:	jae    0x1400545dc
   1400545bc:	push   rdi
   1400545bd:	imul   ebp,DWORD PTR [rsi+0x64],0x2073776f
   1400545c4:	rex.X ins BYTE PTR es:[rdi],dx
   1400545c6:	jne    0x14005462d
   1400545c8:	(bad)  
   1400545c9:	push   rbx
   1400545ca:	gs jb  0x140054643
   1400545cd:	gs jb  0x1400545f0
   1400545d0:	xor    dh,BYTE PTR [rax]
   1400545d2:	xor    DWORD PTR [rdx],esi
   1400545d4:	and    BYTE PTR [rdx+0x32],dl
   1400545d7:	and    BYTE PTR [rsi+0x75],ah
   1400545da:	outs   dx,BYTE PTR ds:[rsi]
   1400545db:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   1400545df:	outs   dx,BYTE PTR ds:[rsi]
   1400545e0:	(bad)  
   1400545e1:	ins    BYTE PTR es:[rdi],dx
   1400545e2:	imul   esi,DWORD PTR [rcx+rdi*2+0x2d],0x20203e2d
   1400545ea:	and    BYTE PTR [rax],ah
   1400545ec:	and    BYTE PTR [rax],ah
   1400545ee:	and    BYTE PTR [rax],ah
   1400545f0:	and    BYTE PTR [rax],ah
   1400545f2:	and    BYTE PTR [rax],ah
   1400545f4:	or     eax,0x2020200a
   1400545f9:	and    BYTE PTR [rcx],cl
   1400545fb:	and    BYTE PTR [rax],ah
   1400545fd:	and    BYTE PTR [rax],ah
   1400545ff:	cmp    al,0x73
   140054601:	jne    0x140054673
   140054603:	jo     0x140054674
   140054605:	jb     0x14005467b
   140054607:	gs fs rex.WRXB push r11
   14005460b:	and    BYTE PTR [rcx+0x64],cl
   14005460e:	cmp    eax,0x66317b22
   140054613:	ss (bad) 
   140054615:	movsxd esi,DWORD PTR ss:[rdi]
   140054618:	ss sub eax,0x31653038
   14005461e:	sub    eax,0x39333234
   140054623:	sub    eax,0x62623539
   140054628:	sub    eax,0x30643338
   14005462d:	data16 ss xor BYTE PTR fs:[rcx+riz*2+0x37],ah
   140054634:	cmp    BYTE PTR [rbp+0x22],bh
   140054637:	(bad)  
   140054638:	ds or  eax,0x2020200a
   14005463e:	and    BYTE PTR [rcx],cl
   140054640:	and    BYTE PTR [rax],ah
   140054642:	and    BYTE PTR [rax],ah
   140054644:	cmp    al,0x21
   140054646:	sub    eax,0x6854202d
   14005464b:	imul   esi,DWORD PTR [rbx+0x20],0x76206449
   140054652:	(bad)  
   140054653:	ins    BYTE PTR es:[rdi],dx
   140054654:	jne    0x1400546bb
   140054656:	and    BYTE PTR [rcx+0x6e],ch
   140054659:	imul   esp,DWORD PTR fs:[rbx+0x61],0x20736574
   140054661:	je     0x1400546cb
   140054663:	and    BYTE PTR gs:[rcx+0x70],ah
   140054667:	jo     0x1400546d5
   140054669:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140054670:	and    BYTE PTR [rbx+0x75],dh
   140054673:	jo     0x1400546e5
   140054675:	outs   dx,DWORD PTR ds:[rsi]
   140054676:	jb     0x1400546ec
   140054678:	jae    0x14005469a
   14005467a:	push   rdi
   14005467b:	imul   ebp,DWORD PTR [rsi+0x64],0x2073776f
   140054682:	push   rsp
   140054683:	push   0x68736572
   140054688:	outs   dx,DWORD PTR ds:[rsi]
   140054689:	ins    BYTE PTR es:[rdi],dx
   14005468a:	and    BYTE PTR fs:[rsi+0x75],ah
   14005468e:	outs   dx,BYTE PTR ds:[rsi]
   14005468f:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140054693:	outs   dx,BYTE PTR ds:[rsi]
   140054694:	(bad)  
   140054695:	ins    BYTE PTR es:[rdi],dx
   140054696:	imul   esi,DWORD PTR [rcx+rdi*2+0x2d],0x20203e2d
   14005469e:	and    BYTE PTR [rax],ah
   1400546a0:	and    BYTE PTR [rax],ah
   1400546a2:	and    BYTE PTR [rax],ah
   1400546a4:	and    BYTE PTR [rax],ah
   1400546a6:	and    BYTE PTR [rax],ah
   1400546a8:	or     eax,0x2020200a
   1400546ad:	and    BYTE PTR [rcx],cl
   1400546af:	and    BYTE PTR [rax],ah
   1400546b1:	and    BYTE PTR [rax],ah
   1400546b3:	cmp    al,0x73
   1400546b5:	jne    0x140054727
   1400546b7:	jo     0x140054728
   1400546b9:	jb     0x14005472f
   1400546bb:	gs fs rex.WRXB push r11
   1400546bf:	and    BYTE PTR [rcx+0x64],cl
   1400546c2:	cmp    eax,0x65387b22
   1400546c7:	xor    BYTE PTR [rsi+0x37],ah
   1400546ca:	(bad)  
   1400546cb:	xor    DWORD PTR [rdx],esi
   1400546cd:	sub    eax,0x33626662
   1400546d2:	sub    eax,0x38656634
   1400546d7:	sub    eax,0x35613962
   1400546dc:	sub    eax,0x64663834
   1400546e1:	xor    eax,0x35316130
   1400546e6:	(bad)  
   1400546e7:	cmp    DWORD PTR [rcx+0x7d],esp
   1400546ea:	and    ch,BYTE PTR [rdi]
   1400546ec:	ds or  eax,0x2020200a
   1400546f2:	and    BYTE PTR [rax],ah
   1400546f4:	and    BYTE PTR [rax],ah
   1400546f6:	and    BYTE PTR [rdi+rbp*1],bh
   1400546f9:	(bad)  
   1400546fa:	jo     0x14005476c
   1400546fc:	ins    BYTE PTR es:[rdi],dx
   1400546fd:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140054704:	and    BYTE PTR ds:[rip+0x2020200a],cl        # 0x160256715
   14005470b:	and    BYTE PTR [rdi+rbp*1],bh
   14005470e:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140054711:	jo     0x140054774
   140054713:	je     0x14005477e
   140054715:	(bad)  
   140054716:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0xa0d3e79
   14005471e:	cmp    al,0x2f
   140054720:	(bad)  
   140054721:	jae    0x140054796
   140054723:	gs ins DWORD PTR es:[rdi],dx
   140054725:	(bad)  
   140054726:	ins    BYTE PTR es:[rdi],dx
   140054727:	jns    0x140054767
   140054729:	or     eax,0xa0d0a
   14005472e:	add    BYTE PTR [rax],al
   140054730:	rol    BYTE PTR [rbx],0x34
   140054733:	add    BYTE PTR [rax],al
   140054735:	add    BYTE PTR [rsi+0x0],dl
   140054738:	push   rbx
   140054739:	add    BYTE PTR [rdi+0x0],bl
   14005473c:	push   rsi
   14005473d:	add    BYTE PTR [rbp+0x0],al
   140054740:	push   rdx
   140054741:	add    BYTE PTR [rbx+0x0],dl
   140054744:	rex.WB add BYTE PTR [r15+0x0],cl
   140054748:	rex.WRX add BYTE PTR [rdi+0x0],r11b
   14005474c:	rex.WB add BYTE PTR [r14+0x0],cl
   140054750:	rex.RX add BYTE PTR [rdi+0x0],r9b
   140054754:	add    BYTE PTR [rax],al
   140054756:	add    BYTE PTR [rax],al
   140054758:	mov    ebp,0xfeef04
   14005475d:	add    BYTE PTR [rcx],al
   14005475f:	add    BYTE PTR [rax],cl
   140054761:	add    BYTE PTR [rax+rax*1],al
   140054764:	and    BYTE PTR [rbx+0x0],al
   140054767:	sub    BYTE PTR [rax],cl
   140054769:	add    BYTE PTR [rax+rax*1],al
   14005476c:	and    BYTE PTR [rbx+0x0],al
   14005476f:	sub    BYTE PTR [rdi],bh
   140054771:	add    BYTE PTR [rax],al
   140054773:	add    BYTE PTR [rax],al
   140054775:	add    BYTE PTR [rax],al
   140054777:	add    BYTE PTR [rax+rax*1],al
   14005477a:	add    al,0x0
   14005477c:	add    DWORD PTR [rax],eax
	...
   14005478a:	add    BYTE PTR [rax],al
   14005478c:	and    BYTE PTR [rbx],al
   14005478e:	add    BYTE PTR [rax],al
   140054790:	add    DWORD PTR [rax],eax
   140054792:	push   rbx
   140054793:	add    BYTE PTR [rax+rax*1+0x72],dh
   140054797:	add    BYTE PTR [rcx+0x0],ch
   14005479a:	outs   dx,BYTE PTR ds:[rsi]
   14005479b:	add    BYTE PTR [rdi+0x0],ah
   14005479e:	rex.RX add BYTE PTR [rcx+0x0],r13b
   1400547a2:	ins    BYTE PTR es:[rdi],dx
   1400547a3:	add    BYTE PTR [rbp+0x0],ah
   1400547a6:	rex.WB add BYTE PTR [r14+0x0],bpl
   1400547aa:	data16 add BYTE PTR [rdi+0x0],ch
   1400547ae:	add    BYTE PTR [rax],al
   1400547b0:	cld    
   1400547b1:	add    al,BYTE PTR [rax]
   1400547b3:	add    BYTE PTR [rcx],al
   1400547b5:	add    BYTE PTR [rax],dh
   1400547b7:	add    BYTE PTR [rax+rax*1],dh
   1400547ba:	xor    BYTE PTR [rax],al
   1400547bc:	cmp    DWORD PTR [rax],eax
   1400547be:	xor    BYTE PTR [rax],al
   1400547c0:	xor    al,0x0
   1400547c2:	rex.X add BYTE PTR [rax],sil
   1400547c5:	add    BYTE PTR [rax],al
   1400547c7:	add    BYTE PTR [rax+rax*1+0x16],cl
   1400547cb:	add    BYTE PTR [rcx],al
   1400547cd:	add    BYTE PTR [rbx+0x0],al
   1400547d0:	outs   dx,DWORD PTR ds:[rsi]
   1400547d1:	add    BYTE PTR [rbp+0x0],ch
   1400547d4:	jo     0x1400547d6
   1400547d6:	(bad)  
   1400547d7:	add    BYTE PTR [rsi+0x0],ch
   1400547da:	jns    0x1400547dc
   1400547dc:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   1400547e0:	ins    DWORD PTR es:[rdi],dx
   1400547e1:	add    BYTE PTR [rbp+0x0],ah
   1400547e4:	add    BYTE PTR [rax],al
   1400547e6:	add    BYTE PTR [rax],al
   1400547e8:	rex.WRB add BYTE PTR [r9+0x0],r13b
   1400547ec:	movsxd eax,DWORD PTR [rax]
   1400547ee:	jb     0x1400547f0
   1400547f0:	outs   dx,DWORD PTR ds:[rsi]
   1400547f1:	add    BYTE PTR [rbx+0x0],dh
   1400547f4:	outs   dx,DWORD PTR ds:[rsi]
   1400547f5:	add    BYTE PTR [rsi+0x0],ah
   1400547f8:	je     0x1400547fa
   1400547fa:	and    BYTE PTR [rax],al
   1400547fc:	rex.XB add BYTE PTR [r15+0x0],bpl
   140054800:	jb     0x140054802
   140054802:	jo     0x140054804
   140054804:	outs   dx,DWORD PTR ds:[rsi]
   140054805:	add    BYTE PTR [rdx+0x0],dh
   140054808:	(bad)  
   140054809:	add    BYTE PTR [rax+rax*1+0x69],dh
   14005480d:	add    BYTE PTR [rdi+0x0],ch
   140054810:	outs   dx,BYTE PTR ds:[rsi]
   140054811:	add    BYTE PTR [rax],al
   140054813:	add    BYTE PTR [rax+rax*1+0x1002e],al
   14005481a:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14005481e:	ins    BYTE PTR es:[rdi],dx
   14005481f:	add    BYTE PTR [rbp+0x0],ah
   140054822:	add    BYTE PTR [rbp+0x0],r12b
   140054826:	jae    0x140054828
   140054828:	movsxd eax,DWORD PTR [rax]
   14005482a:	jb     0x14005482c
   14005482c:	imul   eax,DWORD PTR [rax],0x740070
   140054832:	imul   eax,DWORD PTR [rax],0x6e006f
   140054838:	add    BYTE PTR [rax],al
   14005483a:	add    BYTE PTR [rax],al
   14005483c:	rex.WRB add BYTE PTR [r9+0x0],r13b
   140054840:	movsxd eax,DWORD PTR [rax]
   140054842:	jb     0x140054844
   140054844:	outs   dx,DWORD PTR ds:[rsi]
   140054845:	add    BYTE PTR [rbx+0x0],dh
   140054848:	outs   dx,DWORD PTR ds:[rsi]
   140054849:	add    BYTE PTR [rsi+0x0],ah
   14005484c:	je     0x14005484e
   14005484e:	and    BYTE PTR [rax],al
   140054850:	rex.WRX add BYTE PTR [rbp+0x0],r12b
   140054854:	je     0x140054856
   140054856:	ja     0x140054858
   140054858:	outs   dx,DWORD PTR ds:[rsi]
   140054859:	add    BYTE PTR [rdx+0x0],dh
   14005485c:	imul   eax,DWORD PTR [rax],0x20
   14005485f:	add    BYTE PTR [rdx+0x0],dl
   140054862:	add    BYTE PTR gs:[rcx+0x0],ah
   140054866:	ins    BYTE PTR es:[rdi],dx
   140054867:	add    BYTE PTR [rax+rax*1+0x69],dh
   14005486b:	add    BYTE PTR [rbp+0x0],ch
   14005486e:	add    BYTE PTR gs:[rax],ah
   140054871:	add    BYTE PTR [rcx+0x0],cl
   140054874:	outs   dx,BYTE PTR ds:[rsi]
   140054875:	add    BYTE PTR [rbx+0x0],dh
   140054878:	jo     0x14005487a
   14005487a:	add    BYTE PTR gs:[rbx+0x0],ah
   14005487e:	je     0x140054880
   140054880:	imul   eax,DWORD PTR [rax],0x6e006f
   140054886:	and    BYTE PTR [rax],al
   140054888:	push   rbx
   140054889:	add    BYTE PTR [rbp+0x0],ah
   14005488c:	jb     0x14005488e
   14005488e:	jbe    0x140054890
   140054890:	imul   eax,DWORD PTR [rax],0x650063
   140054896:	add    BYTE PTR [rax],al
   140054898:	ins    BYTE PTR es:[rdi],dx
   140054899:	add    BYTE PTR [rsi],ah
   14005489b:	add    BYTE PTR [rcx],al
   14005489d:	add    BYTE PTR [rsi+0x0],al
   1400548a0:	imul   eax,DWORD PTR [rax],0x65006c
   1400548a6:	push   rsi
   1400548a7:	add    BYTE PTR [rbp+0x0],ah
   1400548aa:	jb     0x1400548ac
   1400548ac:	jae    0x1400548ae
   1400548ae:	imul   eax,DWORD PTR [rax],0x6e006f
   1400548b4:	add    BYTE PTR [rax],al
   1400548b6:	add    BYTE PTR [rax],al
   1400548b8:	xor    al,0x0
   1400548ba:	add    BYTE PTR cs:[rax],bh
   1400548bd:	add    BYTE PTR [rsi],ch
   1400548bf:	add    BYTE PTR [rcx],dh
   1400548c1:	add    BYTE PTR [rax],dh
   1400548c3:	add    BYTE PTR [rdx],dh
   1400548c5:	add    BYTE PTR [rax+rax*1],dh
   1400548c8:	xor    BYTE PTR [rax],al
   1400548ca:	add    BYTE PTR cs:[rcx],dh
   1400548cd:	add    BYTE PTR [rdi],dh
   1400548cf:	add    BYTE PTR [rcx],dh
   1400548d1:	add    BYTE PTR [rax],bh
   1400548d3:	add    BYTE PTR [rax+rax*1],dh
   1400548d6:	and    BYTE PTR [rax],al
   1400548d8:	sub    BYTE PTR [rax],al
   1400548da:	je     0x1400548dc
   1400548dc:	push   0x5f003100
   1400548e1:	add    BYTE PTR [rbx+0x0],dh
   1400548e4:	je     0x1400548e6
   1400548e6:	xor    DWORD PTR [rax],eax
   1400548e8:	add    BYTE PTR cs:[rcx],dh
   1400548eb:	add    BYTE PTR [rsi],dh
   1400548ed:	add    BYTE PTR [rcx],dh
   1400548ef:	add    BYTE PTR [rax],dh
   1400548f1:	add    BYTE PTR [rdx],dh
   1400548f3:	add    BYTE PTR [rax+rax*1],dh
   1400548f6:	sub    eax,0x38003100
   1400548fb:	add    BYTE PTR [rdx],dh
   1400548fd:	add    BYTE PTR [rax],dh
   1400548ff:	add    BYTE PTR [rcx],ch
   140054901:	add    BYTE PTR [rax],al
   140054903:	add    BYTE PTR [rsi],dh
   140054905:	add    BYTE PTR [rbx],cl
   140054907:	add    BYTE PTR [rcx],al
   140054909:	add    BYTE PTR [rcx+0x0],cl
   14005490c:	outs   dx,BYTE PTR ds:[rsi]
   14005490d:	add    BYTE PTR [rax+rax*1+0x65],dh
   140054911:	add    BYTE PTR [rdx+0x0],dh
   140054914:	outs   dx,BYTE PTR ds:[rsi]
   140054915:	add    BYTE PTR [rcx+0x0],ah
   140054918:	ins    BYTE PTR es:[rdi],dx
   140054919:	add    BYTE PTR [rsi+0x0],cl
   14005491c:	(bad)  
   14005491d:	add    BYTE PTR [rbp+0x0],ch
   140054920:	add    BYTE PTR gs:[rax],al
   140054923:	add    BYTE PTR [rsi+0x0],cl
   140054926:	imul   eax,DWORD PTR [rax],0x530073
   14005492c:	jb     0x14005492e
   14005492e:	jbe    0x140054930
   140054930:	add    BYTE PTR cs:[rbp+0x0],ah
   140054934:	js     0x140054936
   140054936:	add    BYTE PTR gs:[rax],al
   140054939:	add    BYTE PTR [rax],al
   14005493b:	add    BYTE PTR [rax+0x1002e00],al
   140054941:	add    BYTE PTR [rax+rax*1+0x65],cl
   140054945:	add    BYTE PTR [rdi+0x0],ah
   140054948:	(bad)  
   140054949:	add    BYTE PTR [rax+rax*1+0x43],ch
   14005494d:	add    BYTE PTR [rdi+0x0],ch
   140054950:	jo     0x140054952
   140054952:	jns    0x140054954
   140054954:	jb     0x140054956
   140054956:	imul   eax,DWORD PTR [rax],0x680067
   14005495c:	je     0x14005495e
   14005495e:	add    BYTE PTR [rax],al
   140054960:	test   eax,0x4d002000
   140054965:	add    BYTE PTR [rcx+0x0],ch
   140054968:	movsxd eax,DWORD PTR [rax]
   14005496a:	jb     0x14005496c
   14005496c:	outs   dx,DWORD PTR ds:[rsi]
   14005496d:	add    BYTE PTR [rbx+0x0],dh
   140054970:	outs   dx,DWORD PTR ds:[rsi]
   140054971:	add    BYTE PTR [rsi+0x0],ah
   140054974:	je     0x140054976
   140054976:	and    BYTE PTR [rax],al
   140054978:	rex.XB add BYTE PTR [r15+0x0],bpl
   14005497c:	jb     0x14005497e
   14005497e:	jo     0x140054980
   140054980:	outs   dx,DWORD PTR ds:[rsi]
   140054981:	add    BYTE PTR [rdx+0x0],dh
   140054984:	(bad)  
   140054985:	add    BYTE PTR [rax+rax*1+0x69],dh
   140054989:	add    BYTE PTR [rdi+0x0],ch
   14005498c:	outs   dx,BYTE PTR ds:[rsi]
   14005498d:	add    BYTE PTR [rsi],ch
   14005498f:	add    BYTE PTR [rax],ah
   140054991:	add    BYTE PTR [rcx+0x0],al
   140054994:	ins    BYTE PTR es:[rdi],dx
   140054995:	add    BYTE PTR [rax+rax*1+0x20],ch
   140054999:	add    BYTE PTR [rdx+0x0],dh
   14005499c:	imul   eax,DWORD PTR [rax],0x680067
   1400549a2:	je     0x1400549a4
   1400549a4:	jae    0x1400549a6
   1400549a6:	and    BYTE PTR [rax],al
   1400549a8:	jb     0x1400549aa
   1400549aa:	add    BYTE PTR gs:[rbx+0x0],dh
   1400549ae:	add    BYTE PTR gs:[rdx+0x0],dh
   1400549b2:	jbe    0x1400549b4
   1400549b4:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   1400549b9:	add    BYTE PTR [rax],al
   1400549bb:	add    BYTE PTR [rsi],bh
   1400549bd:	add    BYTE PTR [rbx],cl
   1400549bf:	add    BYTE PTR [rcx],al
   1400549c1:	add    BYTE PTR [rdi+0x0],cl
   1400549c4:	jb     0x1400549c6
   1400549c6:	imul   eax,DWORD PTR [rax],0x690067
   1400549cc:	outs   dx,BYTE PTR ds:[rsi]
   1400549cd:	add    BYTE PTR [rcx+0x0],ah
   1400549d0:	ins    BYTE PTR es:[rdi],dx
   1400549d1:	add    BYTE PTR [rsi+0x0],al
   1400549d4:	imul   eax,DWORD PTR [rax],0x65006c
   1400549da:	outs   dx,BYTE PTR ds:[rsi]
   1400549db:	add    BYTE PTR [rcx+0x0],ah
   1400549de:	ins    DWORD PTR es:[rdi],dx
   1400549df:	add    BYTE PTR [rbp+0x0],ah
   1400549e2:	add    BYTE PTR [rax],al
   1400549e4:	rex.WRX add BYTE PTR [rcx+0x0],r13b
   1400549e8:	jae    0x1400549ea
   1400549ea:	push   rbx
   1400549eb:	add    BYTE PTR [rdx+0x0],dh
   1400549ee:	jbe    0x1400549f0
   1400549f0:	add    BYTE PTR cs:[rbp+0x0],ah
   1400549f4:	js     0x1400549f6
   1400549f6:	add    BYTE PTR gs:[rax],al
   1400549f9:	add    BYTE PTR [rax],al
   1400549fb:	add    BYTE PTR [rdx+0x0],ch
   1400549fe:	and    eax,0x50000100
   140054a03:	add    BYTE PTR [rdx+0x0],dh
   140054a06:	outs   dx,DWORD PTR ds:[rsi]
   140054a07:	add    BYTE PTR [rax+rax*1+0x75],ah
   140054a0b:	add    BYTE PTR [rbx+0x0],ah
   140054a0e:	je     0x140054a10
   140054a10:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140054a14:	ins    DWORD PTR es:[rdi],dx
   140054a15:	add    BYTE PTR [rbp+0x0],ah
   140054a18:	add    BYTE PTR [rax],al
   140054a1a:	add    BYTE PTR [rax],al
   140054a1c:	rex.WRB add BYTE PTR [r9+0x0],r13b
   140054a20:	movsxd eax,DWORD PTR [rax]
   140054a22:	jb     0x140054a24
   140054a24:	outs   dx,DWORD PTR ds:[rsi]
   140054a25:	add    BYTE PTR [rbx+0x0],dh
   140054a28:	outs   dx,DWORD PTR ds:[rsi]
   140054a29:	add    BYTE PTR [rsi+0x0],ah
   140054a2c:	je     0x140054a2e
   140054a2e:	scas   al,BYTE PTR es:[rdi]
   140054a2f:	add    BYTE PTR [rax],ah
   140054a31:	add    BYTE PTR [rdi+0x0],dl
   140054a34:	imul   eax,DWORD PTR [rax],0x64006e
   140054a3a:	outs   dx,DWORD PTR ds:[rsi]
   140054a3b:	add    BYTE PTR [rdi+0x0],dh
   140054a3e:	jae    0x140054a40
   140054a40:	scas   al,BYTE PTR es:[rdi]
   140054a41:	add    BYTE PTR [rax],ah
   140054a43:	add    BYTE PTR [rdi+0x0],cl
   140054a46:	jo     0x140054a48
   140054a48:	add    BYTE PTR gs:[rdx+0x0],dh
   140054a4c:	(bad)  
   140054a4d:	add    BYTE PTR [rax+rax*1+0x69],dh
   140054a51:	add    BYTE PTR [rsi+0x0],ch
   140054a54:	add    BYTE PTR [eax],ah
   140054a57:	add    BYTE PTR [rbx+0x0],dl
   140054a5a:	jns    0x140054a5c
   140054a5c:	jae    0x140054a5e
   140054a5e:	je     0x140054a60
   140054a60:	add    BYTE PTR gs:[rbp+0x0],ch
   140054a64:	add    BYTE PTR [rax],al
   140054a66:	add    BYTE PTR [rax],al
   140054a68:	add    BYTE PTR [rax],r10b
   140054a6b:	add    BYTE PTR [rcx],al
   140054a6d:	add    BYTE PTR [rax+0x0],dl
   140054a70:	jb     0x140054a72
   140054a72:	outs   dx,DWORD PTR ds:[rsi]
   140054a73:	add    BYTE PTR [rax+rax*1+0x75],ah
   140054a77:	add    BYTE PTR [rbx+0x0],ah
   140054a7a:	je     0x140054a7c
   140054a7c:	push   rsi
   140054a7d:	add    BYTE PTR [rbp+0x0],ah
   140054a80:	jb     0x140054a82
   140054a82:	jae    0x140054a84
   140054a84:	imul   eax,DWORD PTR [rax],0x6e006f
   140054a8a:	add    BYTE PTR [rax],al
   140054a8c:	xor    al,0x0
   140054a8e:	add    BYTE PTR cs:[rax],bh
   140054a91:	add    BYTE PTR [rsi],ch
   140054a93:	add    BYTE PTR [rcx],dh
   140054a95:	add    BYTE PTR [rax],dh
   140054a97:	add    BYTE PTR [rdx],dh
   140054a99:	add    BYTE PTR [rax+rax*1],dh
   140054a9c:	xor    BYTE PTR [rax],al
   140054a9e:	add    BYTE PTR cs:[rcx],dh
   140054aa1:	add    BYTE PTR [rdi],dh
   140054aa3:	add    BYTE PTR [rcx],dh
   140054aa5:	add    BYTE PTR [rax],bh
   140054aa7:	add    BYTE PTR [rax+rax*1],dh
   140054aaa:	add    BYTE PTR [rax],al
   140054aac:	add    BYTE PTR [rax],r8b
   140054aaf:	add    BYTE PTR [rcx],al
   140054ab1:	add    BYTE PTR [rsi+0x0],dl
   140054ab4:	(bad)  
   140054ab5:	add    BYTE PTR [rdx+0x0],dh
   140054ab8:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140054abc:	ins    BYTE PTR es:[rdi],dx
   140054abd:	add    BYTE PTR [rbp+0x0],ah
   140054ac0:	rex.WB add BYTE PTR [r14+0x0],bpl
   140054ac4:	data16 add BYTE PTR [rdi+0x0],ch
   140054ac8:	add    BYTE PTR [rax],al
   140054aca:	add    BYTE PTR [rax],al
   140054acc:	and    al,0x0
   140054ace:	add    al,0x0
   140054ad0:	add    BYTE PTR [rax],al
   140054ad2:	push   rsp
   140054ad3:	add    BYTE PTR [rdx+0x0],dh
   140054ad6:	(bad)  
   140054ad7:	add    BYTE PTR [rsi+0x0],ch
   140054ada:	jae    0x140054adc
   140054adc:	ins    BYTE PTR es:[rdi],dx
   140054add:	add    BYTE PTR [rcx+0x0],ah
   140054ae0:	je     0x140054ae2
   140054ae2:	imul   eax,DWORD PTR [rax],0x6e006f
   140054ae8:	add    BYTE PTR [rax],al
   140054aea:	add    BYTE PTR [rax],al
   140054aec:	or     DWORD PTR [rax+rsi*4],eax
   140054aef:	add    al,0x3
   140054af1:	add    BYTE PTR [rax],al
   140054af3:	add    BYTE PTR [rax],al
   140054af5:	add    BYTE PTR [rax],al
   140054af7:	xor    BYTE PTR [rax+rax*1],al
   140054afa:	add    BYTE PTR [rax],dh
   140054afc:	sub    BYTE PTR [rax],al
   140054afe:	add    BYTE PTR [rax],al
   140054b00:	add    eax,DWORD PTR [rax]
   140054b02:	add    BYTE PTR [rax+0x5],dl
   140054b05:	add    BYTE PTR [rax],al
   140054b07:	push   rax
   140054b08:	xchg   esp,eax
   140054b09:	add    BYTE PTR [rax],al
   140054b0b:	add    BYTE PTR [rcx],al
   140054b0d:	add    BYTE PTR [rax],al
   140054b0f:	nop
   140054b10:	add    DWORD PTR [rax],eax
   140054b12:	add    BYTE PTR [rax+0xe4],dl
   140054b18:	adc    al,0x0
   140054b1a:	add    DWORD PTR [rax],eax
   140054b1c:	rex.WB add BYTE PTR [r14+0x0],bpl
   140054b20:	data16 add BYTE PTR [rdi+0x0],ch
   140054b24:	or     eax,0xa00
   140054b29:	add    BYTE PTR [rax],al
   140054b2b:	add    BYTE PTR [rax+rax*1],dl
   140054b2e:	add    DWORD PTR [rax],eax
   140054b30:	push   rbx
   140054b31:	add    BYTE PTR [rax+rax*1+0x61],dh
   140054b35:	add    BYTE PTR [rdx+0x0],dh
   140054b38:	je     0x140054b3a
   140054b3a:	or     eax,0xa00
   140054b3f:	add    BYTE PTR [rax+rax*1],dl
   140054b42:	add    DWORD PTR [rax],eax
   140054b44:	push   rbx
   140054b45:	add    BYTE PTR [rax+rax*1+0x6f],dh
   140054b49:	add    BYTE PTR [rax+0x0],dh
   140054b4c:	or     eax,0xa00
   140054b51:	add    BYTE PTR [rax],al
   140054b53:	add    BYTE PTR [rax],bl
   140054b55:	add    BYTE PTR [rcx],al
   140054b57:	add    BYTE PTR [rax+rax*1+0x43],al
   140054b5b:	add    BYTE PTR [rbx+0x0],dl
   140054b5e:	je     0x140054b60
   140054b60:	(bad)  
   140054b61:	add    BYTE PTR [rdx+0x0],dh
   140054b64:	je     0x140054b66
   140054b66:	or     eax,0xa00
   140054b6b:	add    BYTE PTR [rax],bl
   140054b6d:	add    BYTE PTR [rcx],al
   140054b6f:	add    BYTE PTR [rax+rax*1+0x43],al
   140054b73:	add    BYTE PTR [rbx+0x0],dl
   140054b76:	je     0x140054b78
   140054b78:	outs   dx,DWORD PTR ds:[rsi]
   140054b79:	add    BYTE PTR [rax+0x0],dh
   140054b7c:	or     eax,0xa00
   140054b81:	add    BYTE PTR [rax],al
   140054b83:	add    BYTE PTR [rax],bl
   140054b85:	add    BYTE PTR [rcx],al
   140054b87:	add    BYTE PTR [rdi+0x0],dl
   140054b8a:	(bad)  
   140054b8b:	add    BYTE PTR [rdx+0x0],dh
   140054b8e:	outs   dx,BYTE PTR ds:[rsi]
   140054b8f:	add    BYTE PTR [rcx+0x0],ch
   140054b92:	outs   dx,BYTE PTR ds:[rsi]
   140054b93:	add    BYTE PTR [rdi+0x0],ah
   140054b96:	or     eax,0xa00
   140054b9b:	add    BYTE PTR [rax],ah
   140054b9d:	add    BYTE PTR [rcx],al
   140054b9f:	add    BYTE PTR [rcx+0x0],cl
   140054ba2:	outs   dx,BYTE PTR ds:[rsi]
   140054ba3:	add    BYTE PTR [rsi+0x0],ah
   140054ba6:	outs   dx,DWORD PTR ds:[rsi]
   140054ba7:	add    BYTE PTR [rdx+0x0],dh
   140054baa:	ins    DWORD PTR es:[rdi],dx
   140054bab:	add    BYTE PTR [rcx+0x0],ah
   140054bae:	je     0x140054bb0
   140054bb0:	imul   eax,DWORD PTR [rax],0x6e006f
   140054bb6:	or     eax,0xa00
   140054bbb:	add    BYTE PTR [rax],bl
   140054bbd:	add    BYTE PTR [rcx],al
   140054bbf:	add    BYTE PTR [rsi+0x0],dl
   140054bc2:	add    BYTE PTR gs:[rdx+0x0],dh
   140054bc6:	(bad)  
   140054bc7:	add    BYTE PTR [rdi+0x0],ch
   140054bca:	jae    0x140054bcc
   140054bcc:	add    BYTE PTR gs:[rip+0xa00],cl        # 0x1400555d3
   140054bd3:	add    BYTE PTR [rax+rax*1],bh
   140054bd6:	add    DWORD PTR [rax],eax
   140054bd8:	rex.WRB add BYTE PTR [r9+0x0],r13b
   140054bdc:	movsxd eax,DWORD PTR [rax]
   140054bde:	jb     0x140054be0
   140054be0:	outs   dx,DWORD PTR ds:[rsi]
   140054be1:	add    BYTE PTR [rbx+0x0],dh
   140054be4:	outs   dx,DWORD PTR ds:[rsi]
   140054be5:	add    BYTE PTR [rsi+0x0],ah
   140054be8:	je     0x140054bea
   140054bea:	sub    eax,0x6e004100
   140054bef:	add    BYTE PTR [rax+rax*1+0x69],dh
   140054bf3:	add    BYTE PTR [rbp+0x0],ch
   140054bf6:	(bad)  
   140054bf7:	add    BYTE PTR [rax+rax*1+0x77],ch
   140054bfb:	add    BYTE PTR [rcx+0x0],ah
   140054bfe:	jb     0x140054c00
   140054c00:	add    BYTE PTR gs:[rip+0x49004e00],ch        # 0x189059a07
   140054c07:	add    BYTE PTR [rbx+0x0],dl
   140054c0a:	or     eax,0xa00
   140054c0f:	add    BYTE PTR [rbx+0x52],al
   140054c12:	rex.WB
   140054c13:	rex.WRB js 0x140054c21
   140054c16:	add    BYTE PTR [rax],al
   140054c18:	add    eax,DWORD PTR [rax]
   140054c1a:	add    DWORD PTR [rax],eax
   140054c1c:	add    DWORD PTR [rax],eax
   140054c1e:	add    BYTE PTR [rax],al
   140054c20:	or     ch,BYTE PTR [rbx-0x6263efd6]
   140054c26:	xchg   DWORD PTR [rax-0x58],ecx
   140054c29:	(bad)  
   140054c2a:	push   rbp
   140054c2b:	fidiv  WORD PTR [rbx]
   140054c2d:	mov    ecx,0x249565
   140054c32:	add    BYTE PTR [rax],al
   140054c34:	push   rdi
   140054c35:	rex.RB push r14
   140054c37:	push   rsp
   140054c38:	push   rsp
   140054c39:	or     eax,DWORD PTR [rax]
   140054c3b:	add    BYTE PTR [rcx],al
   140054c3d:	add    BYTE PTR [rax],al
   140054c3f:	nop
   140054c40:	(bad)  
   140054c41:	add    BYTE PTR [rax],al
   140054c43:	add    BYTE PTR [rdi],al
   140054c45:	add    BYTE PTR [rax],al
   140054c47:	add    BYTE PTR [rax+rax*1+0x20000],cl
   140054c4e:	add    BYTE PTR [rax],al
   140054c50:	or     al,0x2
   140054c52:	add    BYTE PTR [rax],al
   140054c54:	add    BYTE PTR [rax],al
   140054c56:	add    BYTE PTR [rax],al
   140054c58:	fadd   DWORD PTR [rdx]
   140054c5a:	add    BYTE PTR [rax],al
   140054c5c:	add    DWORD PTR [rax],eax
   140054c5e:	add    BYTE PTR [rax],al
   140054c60:	push   0x3000003
   140054c65:	add    BYTE PTR [rax],al
   140054c67:	add    al,cl
   140054c69:	(bad)  
   140054c6a:	add    BYTE PTR [rax],al
   140054c6c:	add    al,0x0
   140054c6e:	add    BYTE PTR [rax],al
   140054c70:	fadd   DWORD PTR [rdi]
	...
   140054c9a:	add    BYTE PTR [rax],al
   140054c9c:	push   rsp
   140054c9d:	push   rsp
   140054c9e:	rex.X
   140054c9f:	rex.WR add BYTE PTR [rcx],0x0
   140054ca3:	add    BYTE PTR [rcx],al
   140054ca5:	add    BYTE PTR [rax],al
   140054ca7:	add    BYTE PTR [rbp+rax*2+0x4d],dl
   140054cab:	push   rax
   140054cac:	je     0x140054caf
   140054cae:	add    BYTE PTR [rax],al
   140054cb0:	add    eax,DWORD PTR [rax]
   140054cb2:	add    BYTE PTR [rax],al
   140054cb4:	add    eax,DWORD PTR [rax]
   140054cb6:	add    BYTE PTR [rax],al
   140054cb8:	pushf  
   140054cb9:	add    DWORD PTR [rax],eax
   140054cbb:	add    BYTE PTR [rcx],al
   140054cbd:	add    BYTE PTR [rax],al
   140054cbf:	add    BYTE PTR [rcx+0x6b126193],dh
   140054cc5:	pop    rbx
   140054cc6:	ins    BYTE PTR es:[rdi],dx
   140054cc7:	or     edi,DWORD PTR [rcx+0x56]
   140054cca:	ins    BYTE PTR es:[rdi],dx
   140054ccb:	and    esi,edx
   140054ccd:	mov    dl,bh
   140054ccf:	jno    0x140054ce0
   140054cd1:	add    DWORD PTR [rcx],eax
   140054cd3:	add    BYTE PTR [rcx],al
   140054cd5:	(bad)  
   140054cd6:	call   rax
   140054cd8:	add    BYTE PTR [rax],al
   140054cda:	add    BYTE PTR [rdx+rax*4+0x9],al
   140054cde:	add    BYTE PTR [rbp+0x0],al
   140054ce1:	jbe    0x140054ce3
   140054ce3:	add    BYTE PTR gs:[rsi+0x0],ch
   140054ce7:	je     0x140054ce9
   140054ce9:	add    BYTE PTR [rcx+0x0],r12b
   140054ced:	je     0x140054cef
   140054cef:	(bad)  
   140054cf0:	add    BYTE PTR [rax],al
   140054cf2:	add    BYTE PTR [rdx],al
   140054cf4:	rex.B (bad) 
   140054cf6:	(bad)  
   140054cf7:	cmp    DWORD PTR [rax],eax
   140054cf9:	add    BYTE PTR [rax],al
   140054cfb:	mov    ch,BYTE PTR [rdi+0x4]
   140054cfe:	add    BYTE PTR [rax+rax*1+0x61],al
   140054d02:	add    BYTE PTR [rax+rax*1+0x61],dh
   140054d06:	add    BYTE PTR [rax],al
   140054d08:	add    BYTE PTR [rcx],ah
   140054d0a:	add    BYTE PTR [rax],al
   140054d0c:	add    BYTE PTR [rsi],al
   140054d0e:	rex.WXB xchg r13,rax
   140054d10:	add    al,0x0
   140054d12:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140054d16:	ins    DWORD PTR es:[rdi],dx
   140054d17:	add    BYTE PTR [rbp+0x0],ah
   140054d1a:	add    BYTE PTR [rax],al
   140054d1c:	add    eax,0x43000701
   140054d21:	add    BYTE PTR [rdi+0x0],ch
   140054d24:	outs   dx,BYTE PTR ds:[rsi]
   140054d25:	add    BYTE PTR [rax+rax*1+0x65],dh
   140054d29:	add    BYTE PTR [rax+0x0],bh
   140054d2c:	je     0x140054d2e
   140054d2e:	add    cl,BYTE PTR [rip+0x40a0000]        # 0x1440f4d34
   140054d34:	rex.B (bad) 
   140054d36:	push   QWORD PTR [rip+0xffffffff8a000000]        # 0xca054d3c
   140054d3c:	outs   dx,DWORD PTR ds:[rsi]
   140054d3d:	add    al,0x0
   140054d3f:	add    BYTE PTR [rcx+0x0],r12b
   140054d43:	je     0x140054d45
   140054d45:	(bad)  
   140054d46:	add    BYTE PTR [rax],al
   140054d48:	add    BYTE PTR [rip+0x6000000],bl        # 0x146054d4e
   140054d4e:	rex.WXB xchg r13,rax
   140054d50:	add    al,0x0
   140054d52:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140054d56:	ins    DWORD PTR es:[rdi],dx
   140054d57:	add    BYTE PTR [rbp+0x0],ah
   140054d5a:	add    BYTE PTR [rax],al
   140054d5c:	add    eax,0x53000501
   140054d61:	add    BYTE PTR [rax+rax*1+0x61],dh
   140054d65:	add    BYTE PTR [rdi+0x0],ah
   140054d68:	add    BYTE PTR gs:[rdx],al
   140054d6b:	or     eax,0x4010001
   140054d70:	rex.B (bad) 
   140054d72:	push   QWORD PTR [rbx]
   140054d74:	add    BYTE PTR [rax],al
   140054d76:	add    BYTE PTR [rdx+0x4400046f],cl
   140054d7c:	add    BYTE PTR [rcx+0x0],ah
   140054d7f:	je     0x140054d81
   140054d81:	(bad)  
   140054d82:	add    BYTE PTR [rax],al
   140054d84:	add    BYTE PTR [rbx],bl
   140054d86:	add    BYTE PTR [rax],al
   140054d88:	add    BYTE PTR [rsi],al
   140054d8a:	rex.WXB xchg r13,rax
   140054d8c:	add    al,0x0
   140054d8e:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140054d92:	ins    DWORD PTR es:[rdi],dx
   140054d93:	add    BYTE PTR [rbp+0x0],ah
   140054d96:	add    BYTE PTR [rax],al
   140054d98:	add    eax,0x44000401
   140054d9d:	add    BYTE PTR [rcx+0x0],ah
   140054da0:	je     0x140054da2
   140054da2:	(bad)  
   140054da3:	add    BYTE PTR [rdx],al
   140054da5:	or     eax,0x4080002
   140054daa:	add    al,0x0
   140054dac:	add    BYTE PTR [rax],al
   140054dae:	add    BYTE PTR [rax],al
   140054db0:	or     cl,BYTE PTR [rdx]
	...
   140054dba:	add    BYTE PTR [rax],al
   140054dbc:	fadd   DWORD PTR [rcx]
   140054dbe:	add    BYTE PTR [rax],al
   140054dc0:	add    BYTE PTR [rax],al
   140054dc2:	add    BYTE PTR [rax],al
   140054dc4:	add    DWORD PTR [rcx],eax
	...
   140054dce:	add    BYTE PTR [rax],al
   140054dd0:	in     al,dx
   140054dd1:	add    DWORD PTR [rax],eax
   140054dd3:	add    BYTE PTR [rax],al
   140054dd5:	add    BYTE PTR [rax],al
   140054dd7:	add    BYTE PTR [rax],cl
   140054dd9:	or     BYTE PTR [rax],al
	...
   140054de3:	add    ah,bh
   140054de5:	add    DWORD PTR [rax],eax
   140054de7:	add    BYTE PTR [rax+rax*1],dl
   140054dea:	add    BYTE PTR [rax],al
   140054dec:	rex.XB add BYTE PTR [r15+0x0],bpl
   140054df0:	outs   dx,BYTE PTR ds:[rsi]
   140054df1:	add    BYTE PTR [rax+rax*1+0x65],dh
   140054df5:	add    BYTE PTR [rax+0x0],bh
   140054df8:	je     0x140054dfa
   140054dfa:	add    BYTE PTR [rax],al
   140054dfc:	adc    BYTE PTR [rax],al
   140054dfe:	add    BYTE PTR [rax],al
   140054e00:	push   rbx
   140054e01:	add    BYTE PTR [rax+rax*1+0x61],dh
   140054e05:	add    BYTE PTR [rdi+0x0],ah
   140054e08:	add    BYTE PTR gs:[rax],al
   140054e0b:	add    BYTE PTR [rax],dl
   140054e0d:	add    BYTE PTR [rax],al
   140054e0f:	add    BYTE PTR [rax+rax*1+0x61],al
   140054e13:	add    BYTE PTR [rax+rax*1+0x61],dh
   140054e17:	add    BYTE PTR [rax],al
   140054e19:	add    BYTE PTR [rax],al
   140054e1b:	add    BYTE PTR [rdi+0x50],cl
   140054e1e:	rex.XB
   140054e1f:	rex.WRXB int3 
   140054e21:	add    BYTE PTR [rax],al
   140054e23:	add    BYTE PTR [rip+0x0],al        # 0x140054e29
   140054e29:	add    BYTE PTR [rax],al
   140054e2b:	add    BYTE PTR [rax],al
   140054e2d:	add    BYTE PTR [rax],al
   140054e2f:	xor    BYTE PTR [rdx+rax*1+0x0],dl
   140054e33:	add    BYTE PTR [rax],al
   140054e35:	add    BYTE PTR [rcx],al
   140054e37:	add    BYTE PTR [rcx],al
   140054e39:	add    BYTE PTR [rax],al
   140054e3b:	xor    BYTE PTR [rdx+rax*1+0x0],ch
   140054e3f:	add    BYTE PTR [rax],al
   140054e41:	add    BYTE PTR [rdx],al
   140054e43:	add    BYTE PTR [rdx],al
   140054e45:	add    BYTE PTR [rax],al
   140054e47:	xor    BYTE PTR [rdx+rax*1+0x0],al
   140054e4e:	add    eax,DWORD PTR [rax]
   140054e50:	add    eax,DWORD PTR [rax]
   140054e52:	add    BYTE PTR [rax],dh
   140054e54:	pushf  
   140054e55:	add    al,BYTE PTR [rax]
   140054e57:	add    BYTE PTR [rax],al
   140054e59:	add    BYTE PTR [rax+rax*1],al
   140054e5c:	add    al,0x0
   140054e5e:	add    BYTE PTR [rax],dh
   140054e60:	mov    esp,0x18000002
   140054e65:	add    BYTE PTR [rax],al
   140054e67:	add    BYTE PTR [rdi+0x0],dh
   140054e6a:	imul   eax,DWORD PTR [rax],0x3a006e
   140054e70:	rex.WB add BYTE PTR [r14+0x0],bpl
   140054e74:	data16 add BYTE PTR [rdi+0x0],ch
   140054e78:	add    BYTE PTR [rax],al
   140054e7a:	add    BYTE PTR [rax],al
   140054e7c:	sbb    BYTE PTR [rax],al
   140054e7e:	add    BYTE PTR [rax],al
   140054e80:	ja     0x140054e82
   140054e82:	imul   eax,DWORD PTR [rax],0x3a006e
   140054e88:	push   rbx
   140054e89:	add    BYTE PTR [rax+rax*1+0x61],dh
   140054e8d:	add    BYTE PTR [rdx+0x0],dh
   140054e90:	je     0x140054e92
   140054e92:	add    BYTE PTR [rax],al
   140054e94:	sbb    BYTE PTR [rax],al
   140054e96:	add    BYTE PTR [rax],al
   140054e98:	ja     0x140054e9a
   140054e9a:	imul   eax,DWORD PTR [rax],0x3a006e
   140054ea0:	push   rbx
   140054ea1:	add    BYTE PTR [rax+rax*1+0x6f],dh
   140054ea5:	add    BYTE PTR [rax+0x0],dh
   140054ea8:	add    BYTE PTR [rax],al
   140054eaa:	add    BYTE PTR [rax],al
   140054eac:	and    BYTE PTR [rax],al
   140054eae:	add    BYTE PTR [rax],al
   140054eb0:	ja     0x140054eb2
   140054eb2:	imul   eax,DWORD PTR [rax],0x3a006e
   140054eb8:	add    BYTE PTR [rbx+0x0],r8b
   140054ebc:	pop    rdi
   140054ebd:	add    BYTE PTR [rbx+0x0],dl
   140054ec0:	je     0x140054ec2
   140054ec2:	(bad)  
   140054ec3:	add    BYTE PTR [rdx+0x0],dh
   140054ec6:	je     0x140054ec8
   140054ec8:	add    BYTE PTR [rax],al
   140054eca:	add    BYTE PTR [rax],al
   140054ecc:	sbb    al,0x0
   140054ece:	add    BYTE PTR [rax],al
   140054ed0:	ja     0x140054ed2
   140054ed2:	imul   eax,DWORD PTR [rax],0x3a006e
   140054ed8:	add    BYTE PTR [rbx+0x0],r8b
   140054edc:	pop    rdi
   140054edd:	add    BYTE PTR [rbx+0x0],dl
   140054ee0:	je     0x140054ee2
   140054ee2:	outs   dx,DWORD PTR ds:[rsi]
   140054ee3:	add    BYTE PTR [rax+0x0],dh
   140054ee6:	add    BYTE PTR [rax],al
   140054ee8:	rex.WR
   140054ee9:	rex.RB push r14
   140054eeb:	rex.WR xchg rax,rax
   140054eed:	add    BYTE PTR [rax],al
   140054eef:	add    BYTE PTR [rbx],al
   140054ef1:	add    BYTE PTR [rax],al
   140054ef3:	add    BYTE PTR [rbx],al
   140054ef5:	add    BYTE PTR [rax],al
   140054ef7:	add    BYTE PTR [rbx],al
   140054ef9:	add    BYTE PTR [rax],al
   140054efb:	push   rax
   140054efc:	or     BYTE PTR [rbx],al
   140054efe:	add    BYTE PTR [rax],al
   140054f00:	add    al,0x0
   140054f02:	add    BYTE PTR [rax],al
   140054f04:	add    al,0x0
   140054f06:	add    BYTE PTR [rax+0x24],dl
   140054f09:	add    eax,DWORD PTR [rax]
   140054f0b:	add    BYTE PTR [rip+0x5000000],al        # 0x145054f11
   140054f11:	add    BYTE PTR [rax],al
   140054f13:	push   rax
   140054f14:	add    r8,QWORD PTR [rax]
   140054f17:	add    BYTE PTR [rax+rax*1],bl
   140054f1a:	add    BYTE PTR [rax],al
   140054f1c:	ja     0x140054f1e
   140054f1e:	imul   eax,DWORD PTR [rax],0x3a006e
   140054f24:	push   rdi
   140054f25:	add    BYTE PTR [rcx+0x0],ah
   140054f28:	jb     0x140054f2a
   140054f2a:	outs   dx,BYTE PTR ds:[rsi]
   140054f2b:	add    BYTE PTR [rcx+0x0],ch
   140054f2e:	outs   dx,BYTE PTR ds:[rsi]
   140054f2f:	add    BYTE PTR [rdi+0x0],ah
   140054f32:	add    BYTE PTR [rax],al
   140054f34:	sub    BYTE PTR [rax],al
   140054f36:	add    BYTE PTR [rax],al
   140054f38:	ja     0x140054f3a
   140054f3a:	imul   eax,DWORD PTR [rax],0x3a006e
   140054f40:	rex.WB add BYTE PTR [r14+0x0],bpl
   140054f44:	data16 add BYTE PTR [rdi+0x0],ch
   140054f48:	jb     0x140054f4a
   140054f4a:	ins    DWORD PTR es:[rdi],dx
   140054f4b:	add    BYTE PTR [rcx+0x0],ah
   140054f4e:	je     0x140054f50
   140054f50:	imul   eax,DWORD PTR [rax],0x6e006f
   140054f56:	(bad)  
   140054f57:	add    BYTE PTR [rax+rax*1+0x0],ch
   140054f5b:	add    BYTE PTR [rax+rax*1],bl
   140054f5e:	add    BYTE PTR [rax],al
   140054f60:	ja     0x140054f62
   140054f62:	imul   eax,DWORD PTR [rax],0x3a006e
   140054f68:	push   rsi
   140054f69:	add    BYTE PTR [rbp+0x0],ah
   140054f6c:	jb     0x140054f6e
   140054f6e:	(bad)  
   140054f6f:	add    BYTE PTR [rdi+0x0],ch
   140054f72:	jae    0x140054f74
   140054f74:	add    BYTE PTR gs:[rax],al
   140054f77:	add    BYTE PTR [rcx+rax*2+0x53],dl
   140054f7b:	rex.WXB (bad) 
   140054f7d:	add    al,0x0
   140054f7f:	add    BYTE PTR [rax],dl
   140054f81:	add    BYTE PTR [rax],al
   140054f83:	add    BYTE PTR [rcx],al
   140054f85:	add    BYTE PTR [rax],al
   140054f87:	add    bh,bh
   140054f89:	(bad)  
   140054f8a:	(bad)  
   140054f8b:	call   FWORD PTR [rsi]
   140054f8d:	add    al,0x3e
   140054f8f:	mov    bl,0x75
   140054f91:	cmp    dl,BYTE PTR [rdx+0x4f]
   140054f94:	mov    edi,0x95dc80e
   140054f99:	movsxd esi,DWORD PTR [rdi+0x534fb]
   140054f9f:	add    BYTE PTR [rdx],al
   140054fa1:	add    BYTE PTR [rax],al
   140054fa3:	add    bh,bh
   140054fa5:	(bad)  
   140054fa6:	(bad)  
   140054fa7:	(bad)  
   140054fa8:	cmp    BYTE PTR [rbp+riz*2+0x7c],al
   140054fac:	(bad)  
   140054fad:	or     ebx,DWORD PTR [rcx+0x45]
   140054fb0:	mov    bh,0x2
   140054fb2:	jge    0x140054fe8
   140054fb4:	rex.WRXB sbb al,0x84
   140054fb7:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140054fb8:	pop    rsp
   140054fb9:	add    eax,0x30000
   140054fbe:	add    BYTE PTR [rax],al
   140054fc0:	(bad)  
   140054fc1:	(bad)  
   140054fc2:	(bad)  
   140054fc3:	call   FWORD PTR [rdx+0x71]
   140054fc6:	push   rdx
   140054fc7:	(bad)  
   140054fc8:	sub    al,0xb5
   140054fca:	retf   
   140054fcb:	rex.RB movabs ds:0x88024e7fcd74cbee,eax
   140054fd5:	add    eax,0x40000
   140054fda:	add    BYTE PTR [rax],al
   140054fdc:	(bad)  
   140054fdd:	(bad)  
   140054fde:	(bad)  
   140054fdf:	(bad)  
   140054fe0:	jns    0x140054fbf
   140054fe2:	iret   
   140054fe3:	xor    al,bh
   140054fe5:	pop    rsp
   140054fe6:	cmp    al,0x4f
   140054fe8:	test   DWORD PTR [rdx+0x50],ebp
   140054feb:	sar    DWORD PTR [rdi-0x3b7b7438],0x5
   140054ff2:	add    BYTE PTR [rax],al
   140054ff4:	add    eax,0xff000000
   140054ff9:	(bad)  
   140054ffa:	(bad)  
   140054ffb:	inc    DWORD PTR [rsi+0x60126246]
   140055001:	sbb    DWORD PTR [rbp+0x22eb8d43],edx
   140055007:	jno    0x14005504d
   140055009:	jp     0x140054fed
   14005500b:	sti    
   14005500c:	add    al,0x6
   14005500e:	add    BYTE PTR [rax],al
   140055010:	(bad)  
   140055011:	add    BYTE PTR [rax],al
   140055013:	add    bh,bh
   140055015:	(bad)  
   140055016:	(bad)  
   140055017:	jmp    QWORD PTR [rbp-0x1ca86f2e]
   14005501d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005501e:	rex.R
   14005501f:	mov    r11d,0xc4472b6e
   140055025:	mov    ch,0xb0
   140055027:	test   DWORD PTR [rsi+rax*1],ebp
   14005502a:	add    BYTE PTR [rax],al
   14005502c:	(bad)  
   14005502d:	add    BYTE PTR [rax],al
   14005502f:	add    bh,bh
   140055031:	(bad)  
   140055032:	(bad)  
   140055033:	(bad)  
   140055034:	(bad)  
   140055035:	mov    esi,edx
   140055037:	adc    BYTE PTR [rdi+rax*4],bl
   14005503a:	push   0x77c19247
   14005503f:	rex.WR outs dx,BYTE PTR ds:[rsi]
   140055041:	sbb    eax,esi
   140055043:	jmp    0x14005509d
   140055045:	(bad)  
   140055046:	add    BYTE PTR [rax],al
   140055048:	or     BYTE PTR [rax],al
   14005504a:	add    BYTE PTR [rax],al
   14005504c:	(bad)  
   14005504d:	(bad)  
   14005504e:	(bad)  
   14005504f:	(bad)  
   140055050:	jge    0x1400550c1
   140055052:	sbb    DWORD PTR [rdi+0x4c2f71b7],0xffffffa6
   140055059:	jbe    0x1400550a1
   14005505b:	push   0x54102b7b
   140055060:	jl     0x140055068
   140055062:	add    BYTE PTR [rax],al
   140055064:	or     DWORD PTR [rax],eax
   140055066:	add    BYTE PTR [rax],al
   140055068:	(bad)  
   140055069:	(bad)  
   14005506a:	(bad)  
   14005506b:	jmp    QWORD PTR [rax+0x6f]
   14005506e:	and    eax,0x41cddd32
   140055073:	rex.WR movabs rdi,0xa4b09de3cc7537f7
   14005507d:	(bad)  
   14005507e:	add    BYTE PTR [rax],al
   140055080:	or     al,BYTE PTR [rax]
   140055082:	add    BYTE PTR [rax],al
   140055084:	(bad)  
   140055085:	(bad)  
   140055086:	(bad)  
   140055087:	(bad)  
   140055088:	jmp    0x113d95de4
   14005508d:	mov    DWORD PTR [rbx],ebp
   14005508f:	rex.WR mov bpl,0x41
   140055092:	rex.WR xor r12b,sil
   140055095:	int    0x12
   140055097:	sub    DWORD PTR [rax+0xb000006],edi
   14005509d:	add    BYTE PTR [rax],al
   14005509f:	add    bh,bh
   1400550a1:	(bad)  
   1400550a2:	(bad)  
   1400550a3:	call   FWORD PTR [rbx+0x48]
   1400550a6:	cli    
   1400550a7:	pop    rdi
   1400550a8:	(bad)  
   1400550a9:	fcomp  DWORD PTR [rdx]
   1400550ab:	rex.WXB add QWORD PTR [r15+0x60],0xfffffffffffffffc
   1400550b0:	(bad)  
   1400550b1:	xchg   esp,eax
   1400550b2:	mov    dl,0xb
   1400550b4:	hlt    
   1400550b5:	(bad)  
   1400550b6:	add    BYTE PTR [rax],al
   1400550b8:	or     al,0x0
   1400550ba:	add    BYTE PTR [rax],al
   1400550bc:	(bad)  
   1400550bd:	(bad)  
   1400550be:	(bad)  
   1400550bf:	(bad)  
   1400550c0:	std    
   1400550c1:	call   rbx
   1400550c3:	mov    ebx,0x44705a7e
   1400550c8:	pushf  
   1400550c9:	(bad)  
   1400550ca:	mov    dl,BYTE PTR [rax-0x3cd3719e]
   1400550d0:	sbb    BYTE PTR [rdi],al
   1400550d2:	add    BYTE PTR [rax],al
   1400550d4:	or     eax,0xff000000
   1400550d9:	(bad)  
   1400550da:	(bad)  
   1400550db:	call   QWORD PTR [rdx]
   1400550dd:	mov    dh,BYTE PTR [rcx-0x46]
   1400550e0:	cdq    
   1400550e1:	(bad)  
   1400550e2:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400550e3:	xchg   r9,rax
   1400550e5:	pop    rdi
   1400550e6:	lahf   
   1400550e7:	add    eax,0x8b3f9fb7
   1400550ec:	rex.R (bad) 
   1400550ee:	add    BYTE PTR [rax],al
   1400550f0:	(bad)  
   1400550f1:	add    BYTE PTR [rax],al
   1400550f3:	add    bh,bh
   1400550f5:	(bad)  
   1400550f6:	(bad)  
   1400550f7:	call   FWORD PTR [rdx]
   1400550f9:	in     al,0x11
   1400550fb:	(bad)  
   1400550fc:	pop    rdi
   1400550fd:	push   rbp
   1400550fe:	nop
   1400550ff:	rex.RX stos DWORD PTR es:[rdi],eax
   140055101:	adc    eax,DWORD PTR [rbp+0x7a8c4bca]
   140055107:	xchg   ebx,eax
   140055108:	push   0xf000007
   14005510d:	add    BYTE PTR [rax],al
   14005510f:	add    bh,bh
   140055111:	(bad)  
   140055112:	(bad)  
   140055113:	dec    DWORD PTR [rsi+0x31]
   140055116:	mov    bh,0x3
   140055118:	mov    edi,0xa14f3030
   14005511d:	rcr    bh,0x9
   140055120:	shl    DWORD PTR [rip+0x798153b],1        # 0x1479d6661
   140055126:	add    BYTE PTR [rax],al
   140055128:	adc    BYTE PTR [rax],al
   14005512a:	add    BYTE PTR [rax],al
   14005512c:	(bad)  
   14005512d:	(bad)  
   14005512e:	(bad)  
   14005512f:	dec    DWORD PTR [rcx+0x33]
   140055132:	add    eax,DWORD PTR [rbx-0x79]
   140055135:	pop    rcx
   140055136:	rex
   140055137:	rex.XB cmp BYTE PTR [r13+0x3b],cl
   14005513b:	adc    eax,0xa24365bc
   140055140:	mov    ah,0x7
   140055142:	add    BYTE PTR [rax],al
   140055144:	sub    BYTE PTR [rax],al
   140055146:	add    BYTE PTR [rax],al
   140055148:	rex.WRX add BYTE PTR [rcx+0x0],r9b
   14005514c:	push   rbx
   14005514d:	add    BYTE PTR [rbx+0x0],dl
   140055150:	imul   eax,DWORD PTR [rax],0x6e0067
   140055156:	(bad)  
   140055157:	add    BYTE PTR [rax+rax*1+0x75],dh
   14005515b:	add    BYTE PTR [rdx+0x0],dh
   14005515e:	add    BYTE PTR gs:[rbp+0x0],cl
   140055162:	(bad)  
   140055163:	add    BYTE PTR [rax+rax*1+0x63],dh
   140055167:	add    BYTE PTR [rax+0x0],ch
   14005516a:	add    BYTE PTR [rax],al
   14005516c:	sub    al,0x0
   14005516e:	add    BYTE PTR [rax],al
   140055170:	rex.WRX add BYTE PTR [rcx+0x0],r9b
   140055174:	push   rbx
   140055175:	add    BYTE PTR [rbx+0x0],al
   140055178:	outs   dx,DWORD PTR ds:[rsi]
   140055179:	add    BYTE PTR [rsi+0x0],ch
   14005517c:	outs   dx,BYTE PTR ds:[rsi]
   14005517d:	add    BYTE PTR [rbp+0x0],ah
   140055180:	movsxd eax,DWORD PTR [rax]
   140055182:	je     0x140055184
   140055184:	imul   eax,DWORD PTR [rax],0x6e006f
   14005518a:	add    BYTE PTR [rax+r8*1+0x6f],bpl
   14005518f:	add    BYTE PTR [rbx+0x0],ah
   140055192:	imul   eax,DWORD PTR [rax],0x0
   140055195:	add    BYTE PTR [rax],al
   140055197:	add    BYTE PTR [rax+rax*1],bh
   14005519a:	add    BYTE PTR [rax],al
   14005519c:	rex.WRX add BYTE PTR [rcx+0x0],r9b
   1400551a0:	push   rbx
   1400551a1:	add    BYTE PTR [rcx+0x0],cl
   1400551a4:	outs   dx,BYTE PTR ds:[rsi]
   1400551a5:	add    BYTE PTR [rax+rax*1+0x65],dh
   1400551a9:	add    BYTE PTR [rdx+0x0],dh
   1400551ac:	movsxd eax,DWORD PTR [rax]
   1400551ae:	add    BYTE PTR gs:[rax+0x0],dh
   1400551b2:	je     0x1400551b4
   1400551b4:	imul   eax,DWORD PTR [rax],0x6e006f
   1400551ba:	push   rax
   1400551bb:	add    BYTE PTR [rdi+0x0],ch
   1400551be:	imul   eax,DWORD PTR [rax],0x74006e
   1400551c4:	add    BYTE PTR [r14+0x0],r13b
   1400551c8:	(bad)  
   1400551c9:	add    BYTE PTR [rdx+0x0],ah
   1400551cc:	ins    BYTE PTR es:[rdi],dx
   1400551cd:	add    BYTE PTR [rbp+0x0],ah
   1400551d0:	add    BYTE PTR fs:[rax],al
   1400551d3:	add    BYTE PTR [rax+0x0],al
   1400551d6:	add    BYTE PTR [rax],al
   1400551d8:	rex.WRX add BYTE PTR [rcx+0x0],r9b
   1400551dc:	push   rbx
   1400551dd:	add    BYTE PTR [rcx+0x0],cl
   1400551e0:	outs   dx,BYTE PTR ds:[rsi]
   1400551e1:	add    BYTE PTR [rax+rax*1+0x65],dh
   1400551e5:	add    BYTE PTR [rdx+0x0],dh
   1400551e8:	movsxd eax,DWORD PTR [rax]
   1400551ea:	add    BYTE PTR gs:[rax+0x0],dh
   1400551ee:	je     0x1400551f0
   1400551f0:	imul   eax,DWORD PTR [rax],0x6e006f
   1400551f6:	push   rax
   1400551f7:	add    BYTE PTR [rdi+0x0],ch
   1400551fa:	imul   eax,DWORD PTR [rax],0x74006e
   140055200:	add    BYTE PTR [rcx+0x0],r13b
   140055204:	jae    0x140055206
   140055206:	(bad)  
   140055207:	add    BYTE PTR [rdx+0x0],ah
   14005520a:	ins    BYTE PTR es:[rdi],dx
   14005520b:	add    BYTE PTR [rbp+0x0],ah
   14005520e:	add    BYTE PTR fs:[rax],al
   140055211:	add    BYTE PTR [rax],al
   140055213:	add    BYTE PTR [rax],ch
   140055215:	add    BYTE PTR [rax],al
   140055217:	add    BYTE PTR [rsi+0x0],cl
   14005521a:	rex.WB add BYTE PTR [r11+0x0],dl
   14005521e:	rex.RXB add BYTE PTR [r9+0x0],r12b
   140055222:	jo     0x140055224
   140055224:	(bad)  
   140055225:	add    BYTE PTR [rbp+0x0],al
   140055228:	outs   dx,BYTE PTR ds:[rsi]
   140055229:	add    BYTE PTR [rdi+0x0],ah
   14005522c:	imul   eax,DWORD PTR [rax],0x65006e
   140055232:	rex.WR add BYTE PTR [rdi+0x0],r13b
   140055236:	(bad)  
   140055237:	add    BYTE PTR [rax+rax*1+0x0],ah
   14005523b:	add    BYTE PTR [rax+rax*1],ch
   14005523e:	add    BYTE PTR [rax],al
   140055240:	rex.WRX add BYTE PTR [rcx+0x0],r9b
   140055244:	push   rbx
   140055245:	add    BYTE PTR [rdi+0x0],al
   140055248:	(bad)  
   140055249:	add    BYTE PTR [rax+0x0],dh
   14005524c:	(bad)  
   14005524d:	add    BYTE PTR [rbp+0x0],al
   140055250:	outs   dx,BYTE PTR ds:[rsi]
   140055251:	add    BYTE PTR [rdi+0x0],ah
   140055254:	imul   eax,DWORD PTR [rax],0x65006e
   14005525a:	push   rbp
   14005525b:	add    BYTE PTR [rsi+0x0],ch
   14005525e:	ins    BYTE PTR es:[rdi],dx
   14005525f:	add    BYTE PTR [rdi+0x0],ch
   140055262:	(bad)  
   140055263:	add    BYTE PTR [rax+rax*1+0x0],ah
   140055267:	add    BYTE PTR [rax+rax*1],ah
   14005526a:	add    BYTE PTR [rax],al
   14005526c:	rex.WRX add BYTE PTR [rcx+0x0],r9b
   140055270:	push   rbx
   140055271:	add    BYTE PTR [rbx+0x0],al
   140055274:	outs   dx,DWORD PTR ds:[rsi]
   140055275:	add    BYTE PTR [rsi+0x0],ch
   140055278:	jae    0x14005527a
   14005527a:	jne    0x14005527c
   14005527c:	ins    DWORD PTR es:[rdi],dx
   14005527d:	add    BYTE PTR [rbp+0x0],ah
   140055280:	jb     0x140055282
   140055282:	rex.WR add BYTE PTR [rdi+0x0],r13b
   140055286:	(bad)  
   140055287:	add    BYTE PTR [rax+rax*1+0x0],ah
   14005528b:	add    BYTE PTR [rax],ch
   14005528d:	add    BYTE PTR [rax],al
   14005528f:	add    BYTE PTR [rsi+0x0],cl
   140055292:	rex.WB add BYTE PTR [r11+0x0],dl
   140055296:	rex.XB add BYTE PTR [r15+0x0],bpl
   14005529a:	outs   dx,BYTE PTR ds:[rsi]
   14005529b:	add    BYTE PTR [rbx+0x0],dh
   14005529e:	jne    0x1400552a0
   1400552a0:	ins    DWORD PTR es:[rdi],dx
   1400552a1:	add    BYTE PTR [rbp+0x0],ah
   1400552a4:	jb     0x1400552a6
   1400552a6:	push   rbp
   1400552a7:	add    BYTE PTR [rsi+0x0],ch
   1400552aa:	ins    BYTE PTR es:[rdi],dx
   1400552ab:	add    BYTE PTR [rdi+0x0],ch
   1400552ae:	(bad)  
   1400552af:	add    BYTE PTR [rax+rax*1+0x0],ah
   1400552b3:	add    BYTE PTR [rax+rax*1],dl
   1400552b6:	add    BYTE PTR [rax],al
   1400552b8:	push   rbx
   1400552b9:	add    BYTE PTR [rbp+0x0],ah
   1400552bc:	jb     0x1400552be
   1400552be:	jbe    0x1400552c0
   1400552c0:	imul   eax,DWORD PTR [rax],0x650063
   1400552c6:	add    BYTE PTR [rax],al
   1400552c8:	cmp    al,0x0
   1400552ca:	add    BYTE PTR [rax],al
   1400552cc:	rex.XB add BYTE PTR [r15+0x0],bpl
   1400552d0:	outs   dx,BYTE PTR ds:[rsi]
   1400552d1:	add    BYTE PTR [rsi+0x0],ah
   1400552d4:	imul   eax,DWORD PTR [rax],0x750067
   1400552da:	jb     0x1400552dc
   1400552dc:	(bad)  
   1400552dd:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400552e1:	add    BYTE PTR [rdi+0x0],ch
   1400552e4:	outs   dx,BYTE PTR ds:[rsi]
   1400552e5:	add    BYTE PTR [rdx+0x0],dl
   1400552e8:	add    BYTE PTR gs:[rax+rax*1+0x6f],ch
   1400552ed:	add    BYTE PTR [rcx+0x0],ah
   1400552f0:	add    BYTE PTR fs:[rsi+0x0],al
   1400552f4:	(bad)  
   1400552f5:	add    BYTE PTR [rcx+0x0],ch
   1400552f8:	ins    BYTE PTR es:[rdi],dx
   1400552f9:	add    BYTE PTR [rbp+0x0],dh
   1400552fc:	jb     0x1400552fe
   1400552fe:	add    BYTE PTR gs:[rax],al
   140055301:	add    BYTE PTR [rax],al
   140055303:	add    BYTE PTR [rax+rax*1],ah
   140055306:	add    BYTE PTR [rax],al
   140055308:	add    BYTE PTR [rdx+0x0],r14b
   14005530c:	imul   eax,DWORD PTR [rax],0x650076
   140055312:	jb     0x140055314
   140055314:	rex.WRB add BYTE PTR [r11+0x0],r14b
   140055318:	add    BYTE PTR [edx+0x0],al
   14005531c:	jne    0x14005531e
   14005531e:	data16 add BYTE PTR [rsi+0x0],ah
   140055322:	add    BYTE PTR gs:[rdx+0x0],dh
   140055326:	add    BYTE PTR [rax],al
   140055328:	sub    al,0x0
   14005532a:	add    BYTE PTR [rax],al
   14005532c:	add    BYTE PTR [rdx+0x0],r14b
   140055330:	imul   eax,DWORD PTR [rax],0x650076
   140055336:	jb     0x140055338
   140055338:	rex.WRB add BYTE PTR [r11+0x0],r14b
   14005533c:	add    BYTE PTR [edx+0x0],al
   140055340:	jne    0x140055342
   140055342:	data16 add BYTE PTR [rsi+0x0],ah
   140055346:	add    BYTE PTR gs:[rdx+0x0],dh
   14005534a:	rex.WR add BYTE PTR [rdi+0x0],r13b
   14005534e:	jae    0x140055350
   140055350:	je     0x140055352
   140055352:	add    BYTE PTR [rax],al
   140055354:	and    al,0x0
   140055356:	add    BYTE PTR [rax],al
   140055358:	rex.RX add BYTE PTR [rdx+0x0],r14b
   14005535c:	(bad)  
   14005535d:	add    BYTE PTR [rbp+0x0],ch
   140055360:	add    BYTE PTR gs:[rdi+0x0],cl
   140055364:	jne    0x140055366
   140055366:	je     0x140055368
   140055368:	rex.WRXB add BYTE PTR [r14+0x0],r12b
   14005536c:	rex.WRXB add BYTE PTR [r10+0x0],r14b
   140055370:	add    BYTE PTR fs:[rbp+0x0],ah
   140055374:	jb     0x140055376
   140055376:	add    BYTE PTR [rax],al
   140055378:	xor    BYTE PTR [rax],al
   14005537a:	add    BYTE PTR [rax],al
   14005537c:	rex.XB add BYTE PTR [r15+0x0],bpl
   140055380:	outs   dx,BYTE PTR ds:[rsi]
   140055381:	add    BYTE PTR [rsi+0x0],ch
   140055384:	add    BYTE PTR gs:[rbx+0x0],ah
   140055388:	je     0x14005538a
   14005538a:	imul   eax,DWORD PTR [rax],0x6e006f
   140055390:	push   rdx
   140055391:	add    BYTE PTR [rbp+0x0],ah
   140055394:	rex.XB add BYTE PTR [r10+0x0],sil
   140055398:	add    BYTE PTR gs:[rcx+0x0],ah
   14005539c:	je     0x14005539e
   14005539e:	imul   eax,DWORD PTR [rax],0x6e006f
   1400553a4:	add    BYTE PTR [rax],al
   1400553a6:	add    BYTE PTR [rax],al
   1400553a8:	sbb    al,0x0
   1400553aa:	add    BYTE PTR [rax],al
   1400553ac:	rex.XB add BYTE PTR [r15+0x0],bpl
   1400553b0:	outs   dx,BYTE PTR ds:[rsi]
   1400553b1:	add    BYTE PTR [rsi+0x0],ch
   1400553b4:	add    BYTE PTR gs:[rbx+0x0],ah
   1400553b8:	je     0x1400553ba
   1400553ba:	imul   eax,DWORD PTR [rax],0x6e006f
   1400553c0:	add    BYTE PTR [rax],al
   1400553c2:	add    BYTE PTR [rax],al
   1400553c4:	adc    al,0x0
   1400553c6:	add    BYTE PTR [rax],al
   1400553c8:	push   rbp
   1400553c9:	add    BYTE PTR [rbp+0x0],cl
   1400553cc:	add    BYTE PTR [rax+r8*1+0x6f],r13b
   1400553d1:	add    BYTE PTR [rdi+0x0],dh
   1400553d4:	add    BYTE PTR [rax],al
   1400553d6:	add    BYTE PTR [rax],al
   1400553d8:	rex.WXB
   1400553d9:	rex.RB pop r9
   1400553db:	push   rdi
	...
   1400553e8:	rex.RB push r14
   1400553ea:	rex.WRX push rsp
   1400553ec:	movabs al,ds:0x13000003
   1400553f5:	add    BYTE PTR [rax],al
   1400553f7:	add    BYTE PTR [rcx],al
   1400553f9:	add    BYTE PTR [rax],al
   1400553fb:	add    BYTE PTR [rax+rax*1],al
   1400553fe:	add    DWORD PTR [rax],eax
	...
   140055408:	(bad)  
   140055409:	(bad)  
   14005540a:	(bad)  
   14005540b:	inc    DWORD PTR [rax]
   14005540d:	add    BYTE PTR [rax],al
   14005540f:	add    BYTE PTR [rax],bl
   140055411:	add    al,BYTE PTR [rax]
   140055413:	add    al,dh
   140055415:	add    al,BYTE PTR [rax]
   140055417:	add    BYTE PTR [rbx+rax*1+0x0],dh
	...
   140055427:	add    BYTE PTR [rdx],al
   140055429:	add    BYTE PTR [rax],al
   14005542b:	add    BYTE PTR [rax+rax*1],al
   14005542e:	add    al,BYTE PTR [rax]
	...
   140055438:	(bad)  
   140055439:	(bad)  
   14005543a:	(bad)  
   14005543b:	inc    DWORD PTR [rax]
   14005543d:	add    BYTE PTR [rax],al
   14005543f:	add    BYTE PTR [rax],bl
   140055441:	add    al,BYTE PTR [rax]
   140055443:	add    al,dh
   140055445:	add    al,BYTE PTR [rax]
   140055447:	add    BYTE PTR [rax+0x3],dl
	...
   140055455:	add    BYTE PTR [rax],al
   140055457:	add    BYTE PTR [rbx],al
   140055459:	add    BYTE PTR [rax],al
   14005545b:	add    BYTE PTR [rax+rax*1],al
   14005545e:	add    eax,DWORD PTR [rax]
	...
   140055468:	(bad)  
   140055469:	(bad)  
   14005546a:	(bad)  
   14005546b:	inc    DWORD PTR [rax]
   14005546d:	add    BYTE PTR [rax],al
   14005546f:	add    BYTE PTR [rax],bl
   140055471:	add    al,BYTE PTR [rax]
   140055473:	add    al,dh
   140055475:	add    al,BYTE PTR [rax]
   140055477:	add    BYTE PTR [rbx+rax*1+0x0],ch
	...
   140055486:	add    BYTE PTR [rax],al
   140055488:	add    al,0x0
   14005548a:	add    BYTE PTR [rax],al
   14005548c:	add    al,0x0
   14005548e:	add    al,0x0
	...
   140055498:	(bad)  
   140055499:	(bad)  
   14005549a:	(bad)  
   14005549b:	inc    DWORD PTR [rax]
   14005549d:	add    BYTE PTR [rax],al
   14005549f:	add    BYTE PTR [rax],bl
   1400554a1:	add    al,BYTE PTR [rax]
   1400554a3:	add    al,dh
   1400554a5:	add    al,BYTE PTR [rax]
   1400554a7:	add    al,cl
   1400554a9:	add    eax,DWORD PTR [rax]
	...
   1400554b7:	add    BYTE PTR [rip+0x4000000],al        # 0x1440554bd
   1400554bd:	add    BYTE PTR [rip+0x0],al        # 0x1400554c3
   1400554c3:	add    BYTE PTR [rax],al
   1400554c5:	add    BYTE PTR [rax],al
   1400554c7:	add    bh,bh
   1400554c9:	(bad)  
   1400554ca:	(bad)  
   1400554cb:	inc    DWORD PTR [rax]
   1400554cd:	add    BYTE PTR [rax],al
   1400554cf:	add    BYTE PTR [rax],bl
   1400554d1:	add    al,BYTE PTR [rax]
   1400554d3:	add    al,dh
   1400554d5:	add    al,BYTE PTR [rax]
   1400554d7:	add    ah,ah
   1400554d9:	add    eax,DWORD PTR [rax]
	...
   1400554e7:	add    BYTE PTR [rsi],al
   1400554e9:	add    BYTE PTR [rax],al
   1400554eb:	add    BYTE PTR [rax+rax*1],al
   1400554ee:	(bad)  
	...
   1400554f7:	add    bh,bh
   1400554f9:	(bad)  
   1400554fa:	(bad)  
   1400554fb:	inc    DWORD PTR [rax]
   1400554fd:	add    BYTE PTR [rax],al
   1400554ff:	add    BYTE PTR [rax],bl
   140055501:	add    al,BYTE PTR [rax]
   140055503:	add    al,dh
   140055505:	add    al,BYTE PTR [rax]
   140055507:	add    BYTE PTR [rax],al
   140055509:	add    al,0x0
	...
   140055517:	add    BYTE PTR [rdi],al
   140055519:	add    BYTE PTR [rax],al
   14005551b:	add    BYTE PTR [rax+rax*1],al
   14005551e:	(bad)  
	...
   140055527:	add    bh,bh
   140055529:	(bad)  
   14005552a:	(bad)  
   14005552b:	inc    DWORD PTR [rax]
   14005552d:	add    BYTE PTR [rax],al
   14005552f:	add    BYTE PTR [rax],bl
   140055531:	add    al,BYTE PTR [rax]
   140055533:	add    al,dh
   140055535:	add    al,BYTE PTR [rax]
   140055537:	add    BYTE PTR [rsp+rax*1],bl
	...
   140055546:	add    BYTE PTR [rax],al
   140055548:	or     BYTE PTR [rax],al
   14005554a:	add    BYTE PTR [rax],al
   14005554c:	add    al,0x0
   14005554e:	or     BYTE PTR [rax],al
	...
   140055558:	(bad)  
   140055559:	(bad)  
   14005555a:	(bad)  
   14005555b:	inc    DWORD PTR [rax]
   14005555d:	add    BYTE PTR [rax],al
   14005555f:	add    BYTE PTR [rax],bl
   140055561:	add    al,BYTE PTR [rax]
   140055563:	add    al,dh
   140055565:	add    al,BYTE PTR [rax]
   140055567:	add    BYTE PTR [rax],bh
   140055569:	add    al,0x0
	...
   140055577:	add    BYTE PTR [rcx],cl
   140055579:	add    BYTE PTR [rax],al
   14005557b:	add    BYTE PTR [rbx+rax*1],al
   14005557e:	or     DWORD PTR [rax],eax
	...
   140055588:	(bad)  
   140055589:	(bad)  
   14005558a:	(bad)  
   14005558b:	inc    DWORD PTR [rax]
   14005558d:	add    BYTE PTR [rax],al
   14005558f:	add    BYTE PTR [rdx+rax*1],bh
   140055592:	add    BYTE PTR [rax],al
   140055594:	lock add al,BYTE PTR [rax]
   140055597:	add    BYTE PTR [rsp+rax*1+0x0],dl
	...
   1400555a7:	add    BYTE PTR [rdx],cl
   1400555a9:	add    BYTE PTR [rax],al
   1400555ab:	add    BYTE PTR [rsp+rax*1],al
   1400555ae:	or     DWORD PTR [rax],eax
	...
   1400555b8:	(bad)  
   1400555b9:	(bad)  
   1400555ba:	(bad)  
   1400555bb:	inc    DWORD PTR [rax]
   1400555bd:	add    BYTE PTR [rax],al
   1400555bf:	add    BYTE PTR [rax+0x2],cl
   1400555c2:	add    BYTE PTR [rax],al
   1400555c4:	lock add al,BYTE PTR [rax]
   1400555c7:	add    BYTE PTR [rsp+rax*1+0x0],dl
	...
   1400555d7:	add    BYTE PTR [rbx],cl
   1400555d9:	add    BYTE PTR [rax],al
   1400555db:	add    BYTE PTR [rax+rax*1],al
   1400555de:	or     al,BYTE PTR [rax]
	...
   1400555e8:	(bad)  
   1400555e9:	(bad)  
   1400555ea:	(bad)  
   1400555eb:	inc    DWORD PTR [rax]
   1400555ed:	add    BYTE PTR [rax],al
   1400555ef:	add    BYTE PTR [rax],bl
   1400555f1:	add    al,BYTE PTR [rax]
   1400555f3:	add    al,dh
   1400555f5:	add    al,BYTE PTR [rax]
   1400555f7:	add    BYTE PTR [rax+0x4],dh
	...
   140055606:	add    BYTE PTR [rax],al
   140055608:	or     al,0x0
   14005560a:	add    BYTE PTR [rax],al
   14005560c:	add    eax,0xb01
   140055611:	add    BYTE PTR [rax],al
   140055613:	add    BYTE PTR [rax],al
   140055615:	add    BYTE PTR [rax],al
   140055617:	add    bh,bh
   140055619:	(bad)  
   14005561a:	(bad)  
   14005561b:	inc    DWORD PTR [rax]
   14005561d:	add    BYTE PTR [rax],al
   14005561f:	add    BYTE PTR [rdx+rax*1],ah
   140055622:	add    BYTE PTR [rax],al
   140055624:	cld    
   140055625:	add    al,BYTE PTR [rax]
   140055627:	add    BYTE PTR [rsp+rax*1+0x0],cl
	...
   140055636:	add    BYTE PTR [rax],al
   140055638:	or     eax,0x5000000
   14005563d:	add    cl,BYTE PTR [rbx]
	...
   140055647:	add    bh,bh
   140055649:	(bad)  
   14005564a:	(bad)  
   14005564b:	inc    DWORD PTR [rax]
   14005564d:	add    BYTE PTR [rax],al
   14005564f:	add    BYTE PTR [rax],dh
   140055651:	add    al,BYTE PTR [rax]
   140055653:	add    ah,bh
   140055655:	add    al,BYTE PTR [rax]
   140055657:	add    BYTE PTR [rsp+rax*1+0x0],cl
	...
   140055666:	add    BYTE PTR [rax],al
   140055668:	(bad)  
   140055669:	add    BYTE PTR [rax],al
   14005566b:	add    BYTE PTR [rbx],al
   14005566d:	add    BYTE PTR [rax+rax*1],cl
	...
   140055678:	(bad)  
   140055679:	(bad)  
   14005567a:	(bad)  
   14005567b:	inc    DWORD PTR [rax]
   14005567d:	add    BYTE PTR [rax],al
   14005567f:	add    BYTE PTR [rax],bl
   140055681:	add    al,BYTE PTR [rax]
   140055683:	add    ah,ah
   140055685:	add    al,BYTE PTR [rax]
   140055687:	add    BYTE PTR [rax+0x4],ch
	...
   140055695:	add    BYTE PTR [rax],al
   140055697:	add    BYTE PTR [rdi],cl
   140055699:	add    BYTE PTR [rax],al
   14005569b:	add    BYTE PTR [rbx],al
   14005569d:	add    BYTE PTR [rip+0x0],cl        # 0x1400556a3
   1400556a3:	add    BYTE PTR [rax],al
   1400556a5:	add    BYTE PTR [rax],al
   1400556a7:	add    bh,bh
   1400556a9:	(bad)  
   1400556aa:	(bad)  
   1400556ab:	inc    DWORD PTR [rax]
   1400556ad:	add    BYTE PTR [rax],al
   1400556af:	add    BYTE PTR [rax],bl
   1400556b1:	add    al,BYTE PTR [rax]
   1400556b3:	add    ah,ah
   1400556b5:	add    al,BYTE PTR [rax]
   1400556b7:	add    ah,al
   1400556b9:	add    al,0x0
	...
   1400556c7:	add    BYTE PTR [rax],dl
   1400556c9:	add    BYTE PTR [rax],al
   1400556cb:	add    BYTE PTR [rbx],al
   1400556cd:	add    BYTE PTR [rsi],cl
	...
   1400556d7:	add    bh,bh
   1400556d9:	(bad)  
   1400556da:	(bad)  
   1400556db:	inc    DWORD PTR [rax]
   1400556dd:	add    BYTE PTR [rax],al
   1400556df:	add    BYTE PTR [rax],bl
   1400556e1:	add    al,BYTE PTR [rax]
   1400556e3:	add    ah,ah
   1400556e5:	add    al,BYTE PTR [rax]
   1400556e7:	add    al,ah
   1400556e9:	add    al,0x0
	...
   1400556f7:	add    BYTE PTR [rcx],dl
   1400556f9:	add    BYTE PTR [rax],al
   1400556fb:	add    BYTE PTR [rcx+rax*1],al
   1400556fe:	sldt   WORD PTR [rax]
   140055701:	add    BYTE PTR [rax],al
   140055703:	add    BYTE PTR [rax],al
   140055705:	add    BYTE PTR [rax],al
   140055707:	add    bh,bh
   140055709:	(bad)  
   14005570a:	(bad)  
   14005570b:	inc    DWORD PTR [rax]
   14005570d:	add    BYTE PTR [rax],al
   14005570f:	add    BYTE PTR [rdx+rax*1],ah
   140055712:	add    BYTE PTR [rax],al
   140055714:	lock add al,BYTE PTR [rax]
   140055717:	add    ah,bh
   140055719:	add    al,0x0
	...
   140055727:	add    BYTE PTR [rdx],dl
   140055729:	add    BYTE PTR [rax],al
   14005572b:	add    BYTE PTR [rdx+rax*1],al
   14005572e:	sldt   WORD PTR [rax]
   140055731:	add    BYTE PTR [rax],al
   140055733:	add    BYTE PTR [rax],al
   140055735:	add    BYTE PTR [rax],al
   140055737:	add    bh,bh
   140055739:	(bad)  
   14005573a:	(bad)  
   14005573b:	inc    DWORD PTR [rax]
   14005573d:	add    BYTE PTR [rax],al
   14005573f:	add    BYTE PTR [rax],dh
   140055741:	add    al,BYTE PTR [rax]
   140055743:	add    al,dh
   140055745:	add    al,BYTE PTR [rax]
   140055747:	add    ah,bh
   140055749:	add    al,0x0
	...
   140055757:	add    BYTE PTR [rbx],dl
   140055759:	add    BYTE PTR [rax],al
   14005575b:	add    BYTE PTR [rax+rax*1],al
   14005575e:	adc    BYTE PTR [rax],al
	...
   140055768:	(bad)  
   140055769:	(bad)  
   14005576a:	(bad)  
   14005576b:	call   FWORD PTR [rax+0x18000000]
   140055771:	add    al,BYTE PTR [rax]
   140055773:	add    al,dh
   140055775:	add    al,BYTE PTR [rax]
   140055777:	add    BYTE PTR [rax],bl
   140055779:	add    eax,0x0
	...

Disassembly of section .reloc:

0000000140056000 <.reloc>:
   140056000:	add    BYTE PTR [rax],ah
   140056002:	add    eax,DWORD PTR [rax]
   140056004:	rol    BYTE PTR [rax],0x0
   140056007:	add    BYTE PTR [rax-0x3f594f5a],ch
   14005600d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005600e:	enter  0xd0a6,0xa6
   140056012:	fsub   DWORD PTR [rsi-0x59175920]
   140056018:	lock cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005601a:	clc    
   14005601b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005601c:	add    BYTE PTR [rdi-0x58ef58f8],ah
   140056022:	sbb    BYTE PTR [rdi-0x58d758e0],ah
   140056028:	rex cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005602a:	cmps   QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   14005602c:	stos   QWORD PTR es:[rdi],rax
   14005602e:	pop    rax
   14005602f:	stos   DWORD PTR es:[rdi],eax
   140056030:	push   0xffffffff88ab78ab
   140056035:	stos   DWORD PTR es:[rdi],eax
   140056036:	cwde   
   140056037:	stos   DWORD PTR es:[rdi],eax
   140056038:	test   al,0xab
   14005603a:	mov    eax,0xd8abc8ab
   14005603f:	stos   DWORD PTR es:[rdi],eax
   140056040:	call   0x148b158f0
   140056045:	lods   al,BYTE PTR ds:[rsi]
   140056046:	sbb    BYTE PTR [rax+rbp*1+0x48ac38ac],ch
   14005604d:	lods   al,BYTE PTR ds:[rsi]
   14005604e:	pop    rax
   14005604f:	lods   al,BYTE PTR ds:[rsi]
   140056050:	push   0xffffffff88ac78ac
   140056055:	lods   al,BYTE PTR ds:[rsi]
   140056056:	cwde   
   140056057:	lods   al,BYTE PTR ds:[rsi]
   140056058:	test   al,0xac
   14005605a:	mov    eax,0xd8acc8ac
   14005605f:	lods   al,BYTE PTR ds:[rsi]
   140056060:	call   0x148b25911
   140056065:	lods   eax,DWORD PTR ds:[rsi]
   140056066:	sbb    BYTE PTR [rbp-0x52c752d8],ch
   14005606c:	lods   rax,QWORD PTR ds:[rsi]
   14005606e:	pop    rax
   14005606f:	lods   eax,DWORD PTR ds:[rsi]
   140056070:	push   0xffffffff88ad78ad
   140056075:	lods   eax,DWORD PTR ds:[rsi]
   140056076:	cwde   
   140056077:	lods   eax,DWORD PTR ds:[rsi]
   140056078:	test   al,0xad
   14005607a:	mov    eax,0xd8adc8ad
   14005607f:	lods   eax,DWORD PTR ds:[rsi]
   140056080:	call   0x148b35932
   140056085:	scas   al,BYTE PTR es:[rdi]
   140056086:	sbb    BYTE PTR [rsi-0x51c751d8],ch
   14005608c:	rex.W scas al,BYTE PTR es:[rdi]
   14005608e:	pop    rax
   14005608f:	scas   al,BYTE PTR es:[rdi]
   140056090:	push   0xffffffff88ae78ae
   140056095:	scas   al,BYTE PTR es:[rdi]
   140056096:	cwde   
   140056097:	scas   al,BYTE PTR es:[rdi]
   140056098:	test   al,0xae
   14005609a:	mov    eax,0xd8aec8ae
   14005609f:	scas   al,BYTE PTR es:[rdi]
   1400560a0:	call   0x148b45953
   1400560a5:	scas   eax,DWORD PTR es:[rdi]
   1400560a6:	sbb    BYTE PTR [rdi-0x50c750d8],ch
   1400560ac:	scas   rax,QWORD PTR es:[rdi]
   1400560ae:	pop    rax
   1400560af:	scas   eax,DWORD PTR es:[rdi]
   1400560b0:	push   0xffffffff88af78af
   1400560b5:	scas   eax,DWORD PTR es:[rdi]
   1400560b6:	cwde   
   1400560b7:	scas   eax,DWORD PTR es:[rdi]
   1400560b8:	test   al,0xaf
   1400560ba:	mov    eax,0xd8afc8af
   1400560bf:	scas   eax,DWORD PTR es:[rdi]
   1400560c0:	add    BYTE PTR [rax],dh
   1400560c2:	add    eax,DWORD PTR [rax]
   1400560c4:	mov    esp,0x38000000
   1400560c9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400560ca:	rex.W movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400560cc:	pop    rax
   1400560cd:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400560ce:	push   0xffffffff88a478a4
   1400560d3:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400560d4:	cwde   
   1400560d5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400560d6:	test   al,0xa4
   1400560d8:	mov    eax,0xd8a4c8a4
   1400560dd:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400560de:	call   0x148aa5987
   1400560e3:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400560e4:	sbb    BYTE PTR [rbp-0x5ac75ad8],ah
   1400560ea:	movs   QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   1400560ec:	pop    rax
   1400560ed:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400560ee:	push   0xffffffff88a578a5
   1400560f3:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400560f4:	cwde   
   1400560f5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400560f6:	test   al,0xa5
   1400560f8:	mov    eax,0xd8a5c8a5
   1400560fd:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400560fe:	call   0x148ab59a8
   140056103:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140056104:	sbb    BYTE PTR [rsi-0x59c759d8],ah
   14005610a:	rex.W cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005610c:	pop    rax
   14005610d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005610e:	push   0xffffffff88a678a6
   140056113:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140056114:	cwde   
   140056115:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140056116:	test   al,0xa6
   140056118:	mov    eax,0xd8a6c8a6
   14005611d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005611e:	call   0x148ac59c9
   140056123:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140056124:	sbb    BYTE PTR [rdi-0x58c758d8],ah
   14005612a:	cmps   QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   14005612c:	pop    rax
   14005612d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005612e:	push   0xffffffff88a778a7
   140056133:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140056134:	cwde   
   140056135:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140056136:	test   al,0xa7
   140056138:	mov    eax,0xd8a7c8a7
   14005613d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005613e:	call   0x148ad59ea
   140056143:	test   al,0x18
   140056145:	test   al,0x28
   140056147:	test   al,0x38
   140056149:	test   al,0x48
   14005614b:	test   al,0x58
   14005614d:	test   al,0x68
   14005614f:	test   al,0x78
   140056151:	test   al,0x88
   140056153:	test   al,0x98
   140056155:	test   al,0xa8
   140056157:	test   al,0xb8
   140056159:	test   al,0xc8
   14005615b:	test   al,0xd8
   14005615d:	test   al,0xe8
   14005615f:	test   al,0xf8
   140056161:	test   al,0x8
   140056163:	test   eax,0xae38ae30
   140056168:	scas   al,BYTE PTR es:[rdi]
   14005616a:	rex.W scas al,BYTE PTR es:[rdi]
   14005616c:	push   rax
   14005616d:	scas   al,BYTE PTR es:[rdi]
   14005616e:	movabs al,ds:0xc0aeb8aeb0aea8ae
   140056177:	scas   al,BYTE PTR es:[rdi]
   140056178:	enter  0xd0ae,0xae
   14005617c:	add    BYTE PTR [rax+0x3],al
   14005617f:	add    al,dl
   140056181:	add    al,BYTE PTR [rax]
   140056183:	add    al,bl
   140056185:	movabs eax,ds:0xa1f8a1f0a1e8a1e0
   14005618e:	add    BYTE PTR [rdx-0x5ddf5df8],ah
   140056194:	sub    BYTE PTR [rdx-0x5dc75dd0],ah
   14005619a:	movabs ds:0xa260a258a250a248,al
   1400561a4:	push   0x78a270a2
   1400561a9:	movabs ds:0xa328a320a288a280,al
   1400561b2:	xor    BYTE PTR [rbx-0x5cbf5cc8],ah
   1400561b8:	movabs ds:0xa368a360a358a350,rax
   1400561c2:	jo     0x140056167
   1400561c4:	js     0x140056169
   1400561c6:	and    BYTE PTR [rax+rbp*1+0x38a430a4],ah
   1400561cd:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400561ce:	rex movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400561d0:	rex.W movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400561d2:	push   rax
   1400561d3:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400561d4:	pop    rax
   1400561d5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400561d6:	(bad)  
   1400561d7:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400561d8:	push   0x78a470a4
   1400561dd:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400561de:	and    BYTE PTR [rax+rcx*4-0x675b6f5c],0xa4
   1400561e6:	movabs al,ds:0xc0a4b8a4b0a4a8a4
   1400561ef:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400561f0:	enter  0xd0a4,0xa4
   1400561f4:	fsub   DWORD PTR [rax+riz*8-0xf5b175c]
   1400561fb:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400561fc:	clc    
   1400561fd:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400561fe:	add    BYTE PTR [rbp-0x5aef5af8],ah
   140056204:	sbb    BYTE PTR [rbp-0x5ad75ae0],ah
   14005620a:	xor    BYTE PTR [rbp-0x5abf5ac8],ah
   140056210:	movs   QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   140056212:	push   rax
   140056213:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140056214:	pop    rax
   140056215:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140056216:	(bad)  
   140056217:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140056218:	push   0x78a570a5
   14005621d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14005621e:	and    BYTE PTR [rbp-0x5a6f5a78],0x98
   140056225:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140056226:	movabs al,ds:0xc0a5b8a5b0a5a8a5
   14005622f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140056230:	enter  0xd0a5,0xa5
   140056234:	fsub   DWORD PTR [rbp-0x5a175a20]
   14005623a:	lock movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14005623c:	clc    
   14005623d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14005623e:	add    BYTE PTR [rsi-0x59ef59f8],ah
   140056244:	sbb    BYTE PTR [rsi-0x59d759e0],ah
   14005624a:	xor    BYTE PTR [rsi-0x59bf59c8],ah
   140056250:	rex.W cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140056252:	push   rax
   140056253:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140056254:	pop    rax
   140056255:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140056256:	(bad)  
   140056257:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140056258:	push   0x78a670a6
   14005625d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005625e:	and    BYTE PTR [rsi-0x596f5978],0x98
   140056265:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140056266:	movabs al,ds:0xc0a6b8a6b0a6a8a6
   14005626f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140056270:	enter  0xd0a6,0xa6
   140056274:	fsub   DWORD PTR [rsi-0x59175920]
   14005627a:	lock cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005627c:	clc    
   14005627d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005627e:	add    BYTE PTR [rdi-0x58ef58f8],ah
   140056284:	sbb    BYTE PTR [rdi-0x58d758e0],ah
   14005628a:	xor    BYTE PTR [rdi-0x58bf58c8],ah
   140056290:	cmps   QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   140056292:	push   rax
   140056293:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140056294:	pop    rax
   140056295:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140056296:	(bad)  
   140056297:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140056298:	push   0x78a770a7
   14005629d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005629e:	and    BYTE PTR [rdi-0x586f5878],0x98
   1400562a5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400562a6:	movabs al,ds:0xc0a7b8a7b0a7a8a7
   1400562af:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400562b0:	enter  0xd0a7,0xa7
   1400562b4:	fsub   DWORD PTR [rdi-0x58175820]
   1400562ba:	lock cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400562bc:	clc    
   1400562bd:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400562be:	add    BYTE PTR [rax-0x57ef57f8],ch
   1400562c4:	sbb    BYTE PTR [rax-0x57d757e0],ch
   1400562ca:	xor    BYTE PTR [rax-0x57bf57c8],ch
   1400562d0:	rex.W test al,0x50
   1400562d3:	test   al,0x58
   1400562d5:	test   al,0x60
   1400562d7:	test   al,0x68
   1400562d9:	test   al,0x70
   1400562db:	test   al,0x78
   1400562dd:	test   al,0x80
   1400562df:	test   al,0x88
   1400562e1:	test   al,0x90
   1400562e3:	test   al,0x98
   1400562e5:	test   al,0xa0
   1400562e7:	test   al,0xa8
   1400562e9:	test   al,0xb0
   1400562eb:	test   al,0xb8
   1400562ed:	test   al,0xc0
   1400562ef:	test   al,0xc8
   1400562f1:	test   al,0xd0
   1400562f3:	test   al,0xd8
   1400562f5:	test   al,0xe0
   1400562f7:	test   al,0xe8
   1400562f9:	test   al,0xf0
   1400562fb:	test   al,0xf8
   1400562fd:	test   al,0x0
   1400562ff:	test   eax,0xa910a908
   140056304:	sbb    BYTE PTR [rcx-0x56d756e0],ch
   14005630a:	xor    BYTE PTR [rcx-0x56bf56c8],ch
   140056310:	test   rax,0xffffffffa958a950
   140056316:	(bad)  
   140056317:	test   eax,0xa970a968
   14005631c:	js     0x1400562c7
   14005631e:	sub    BYTE PTR [rcx-0x566f5678],0x98
   140056325:	test   eax,0xa9a8a9a0
   14005632a:	mov    al,0xa9
   14005632c:	mov    eax,0xc8a9c0a9
   140056331:	test   eax,0xa9d8a9d0
   140056336:	loopne 0x1400562e1
   140056338:	call   0x138af53e6
   14005633d:	test   eax,0xaa08aa00
   140056342:	adc    BYTE PTR [rdx-0x55df55e8],ch
   140056348:	sub    BYTE PTR [rdx-0x55c755d0],ch
   14005634e:	stos   BYTE PTR es:[rdi],al
   140056350:	rex.W stos BYTE PTR es:[rdi],al
   140056352:	push   rax
   140056353:	stos   BYTE PTR es:[rdi],al
   140056354:	pop    rax
   140056355:	stos   BYTE PTR es:[rdi],al
   140056356:	(bad)  
   140056357:	stos   BYTE PTR es:[rdi],al
   140056358:	push   0x78aa70aa
   14005635d:	stos   BYTE PTR es:[rdi],al
   14005635e:	sub    BYTE PTR [rdx-0x556f5578],0x98
   140056365:	stos   BYTE PTR es:[rdi],al
   140056366:	movabs al,ds:0xc0aab8aab0aaa8aa
   14005636f:	stos   BYTE PTR es:[rdi],al
   140056370:	enter  0xd0aa,0xaa
   140056374:	fsubr  DWORD PTR [rdx-0x55175520]
   14005637a:	lock stos BYTE PTR es:[rdi],al
   14005637c:	clc    
   14005637d:	stos   BYTE PTR es:[rdi],al
   14005637e:	add    BYTE PTR [rbx-0x54ef54f8],ch
   140056384:	sbb    BYTE PTR [rbx-0x54d754e0],ch
   14005638a:	xor    BYTE PTR [rbx-0x54bf54c8],ch
   140056390:	stos   QWORD PTR es:[rdi],rax
   140056392:	push   rax
   140056393:	stos   DWORD PTR es:[rdi],eax
   140056394:	pop    rax
   140056395:	stos   DWORD PTR es:[rdi],eax
   140056396:	(bad)  
   140056397:	stos   DWORD PTR es:[rdi],eax
   140056398:	push   0x78ab70ab
   14005639d:	stos   DWORD PTR es:[rdi],eax
   14005639e:	sub    BYTE PTR [rbx-0x546f5478],0x98
   1400563a5:	stos   DWORD PTR es:[rdi],eax
   1400563a6:	movabs al,ds:0xc0abb8abb0aba8ab
   1400563af:	stos   DWORD PTR es:[rdi],eax
   1400563b0:	enter  0xd0ab,0xab
   1400563b4:	fsubr  DWORD PTR [rbx-0x54175420]
   1400563ba:	lock stos DWORD PTR es:[rdi],eax
   1400563bc:	clc    
   1400563bd:	stos   DWORD PTR es:[rdi],eax
   1400563be:	add    BYTE PTR [rax+rcx*1+0x18ac10ac],ch
   1400563c5:	lods   al,BYTE PTR ds:[rsi]
   1400563c6:	and    BYTE PTR [rax+rbp*1+0x38ac30ac],ch
   1400563cd:	lods   al,BYTE PTR ds:[rsi]
   1400563ce:	lods   al,BYTE PTR ds:[rsi]
   1400563d0:	rex.W lods al,BYTE PTR ds:[rsi]
   1400563d2:	push   rax
   1400563d3:	lods   al,BYTE PTR ds:[rsi]
   1400563d4:	pop    rax
   1400563d5:	lods   al,BYTE PTR ds:[rsi]
   1400563d6:	(bad)  
   1400563d7:	lods   al,BYTE PTR ds:[rsi]
   1400563d8:	push   0x78ac70ac
   1400563dd:	lods   al,BYTE PTR ds:[rsi]
   1400563de:	sub    BYTE PTR [rax+rcx*4-0x67536f54],0xac
   1400563e6:	movabs al,ds:0xc0acb8acb0aca8ac
   1400563ef:	lods   al,BYTE PTR ds:[rsi]
   1400563f0:	enter  0xd0ac,0xac
   1400563f4:	fsubr  DWORD PTR [rax+riz*8-0xf531754]
   1400563fb:	lods   al,BYTE PTR ds:[rsi]
   1400563fc:	clc    
   1400563fd:	lods   al,BYTE PTR ds:[rsi]
   1400563fe:	add    BYTE PTR [rbp-0x52ef52f8],ch
   140056404:	sbb    BYTE PTR [rbp-0x52d752e0],ch
   14005640a:	xor    BYTE PTR [rbp-0x52bf52c8],ch
   140056410:	lods   rax,QWORD PTR ds:[rsi]
   140056412:	push   rax
   140056413:	lods   eax,DWORD PTR ds:[rsi]
   140056414:	pop    rax
   140056415:	lods   eax,DWORD PTR ds:[rsi]
   140056416:	(bad)  
   140056417:	lods   eax,DWORD PTR ds:[rsi]
   140056418:	push   0x78ad70ad
   14005641d:	lods   eax,DWORD PTR ds:[rsi]
   14005641e:	sub    BYTE PTR [rbp-0x526f5278],0x98
   140056425:	lods   eax,DWORD PTR ds:[rsi]
   140056426:	movabs al,ds:0xc0adb8adb0ada8ad
   14005642f:	lods   eax,DWORD PTR ds:[rsi]
   140056430:	enter  0xd0ad,0xad
   140056434:	fsubr  DWORD PTR [rbp-0x52175220]
   14005643a:	lock lods eax,DWORD PTR ds:[rsi]
   14005643c:	clc    
   14005643d:	lods   eax,DWORD PTR ds:[rsi]
   14005643e:	add    BYTE PTR [rsi-0x51ef51f8],ch
   140056444:	sbb    BYTE PTR [rsi-0x51d751e0],ch
   14005644a:	add    BYTE PTR [rax],al
   14005644c:	add    BYTE PTR [rax+0x3],dl
   14005644f:	add    BYTE PTR [rax+rax*1],ah
   140056452:	add    BYTE PTR [rax],al
   140056454:	add    BYTE PTR [rdi-0x58df58f0],ah
   14005645a:	xor    BYTE PTR [rdi-0x58af58c0],ah
   140056460:	(bad)  
   140056461:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140056462:	jo     0x14005640b
   140056464:	and    BYTE PTR [rdi-0x585f5870],0xb0
   14005646b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005646c:	shl    BYTE PTR [rdi+0x6000a7d0],0x3
   140056473:	add    BYTE PTR [rax+rax*1],cl
   140056476:	add    BYTE PTR [rax],al
   140056478:	add    BYTE PTR [rdx+0x7000aa18],ch
   14005647e:	add    eax,DWORD PTR [rax]
   140056480:	adc    al,0x0
   140056482:	add    BYTE PTR [rax],al
   140056484:	shl    BYTE PTR [rax-0x573f5f18],1
   14005648a:	enter  0xd0a8,0xa8
   14005648e:	fsubr  DWORD PTR [rax+0x3f000]
   140056494:	adc    BYTE PTR [rax],al
   140056496:	add    BYTE PTR [rax],al
   140056498:	mov    eax,0xd8a0d0a0
   14005649d:	movabs al,ds:0x2a80004b000a0e0
   1400564a6:	add    BYTE PTR [rax],al
   1400564a8:	adc    BYTE PTR [rax-0x5f975fa0],ah
   1400564ae:	jo     0x140056450
   1400564b0:	js     0x140056452
   1400564b2:	and    BYTE PTR [rax-0x5f675f70],0xa8
   1400564b9:	movabs al,ds:0xa0d8a0c8a0c0a0b0
   1400564c2:	loopne 0x140056464
   1400564c4:	lock movabs al,ds:0xa120a110a108a0f8
   1400564ce:	sub    BYTE PTR [rcx-0x5ebf5ec8],ah
   1400564d4:	push   rax
   1400564d5:	movabs eax,ds:0xa180a170a168a158
   1400564de:	mov    BYTE PTR [rcx-0x5e5f5e68],ah
   1400564e4:	mov    al,0xa1
   1400564e6:	mov    eax,0xd0a1c8a1
   1400564eb:	movabs eax,ds:0xa200a1f8a1e8a1e0
   1400564f4:	adc    BYTE PTR [rdx-0x5dd75de8],ah
   1400564fa:	xor    BYTE PTR [rdx-0x5db75dc0],ah
   140056500:	pop    rax
   140056501:	movabs ds:0xa288a278a270a260,al
   14005650a:	nop
   14005650b:	movabs ds:0xa2c0a2b8a2a8a2a0,al
   140056514:	shl    BYTE PTR [rdx-0x5d175d28],1
   14005651a:	lock movabs ds:0xa320a318a308a300,al
   140056524:	xor    BYTE PTR [rbx-0x5cb75cc8],ah
   14005652a:	push   rax
   14005652b:	movabs ds:0xa380a378a368a360,eax
   140056534:	nop
   140056535:	movabs ds:0xa3c0a3b0a3a8a398,eax
   14005653e:	enter  0xd8a3,0xa3
   140056542:	loopne 0x1400564e7
   140056544:	lock movabs ds:0xa420a410a408a3f8,eax
   14005654e:	sub    BYTE PTR [rax+rdi*1+0x50a440a4],ah
   140056555:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140056556:	pop    rax
   140056557:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140056558:	push   0xffffffff80a470a4
   14005655d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005655e:	mov    BYTE PTR [rax+rbx*4-0x4f5b5f5c],ah
   140056565:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140056566:	mov    eax,0xd0a4c8a4
   14005656b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005656c:	loopne 0x140056512
   14005656e:	call   0x140aa5e17
   140056573:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140056574:	adc    BYTE PTR [rbp-0x5ad75ae8],ah
   14005657a:	xor    BYTE PTR [rbp-0x5ab75ac0],ah
   140056580:	pop    rax
   140056581:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140056582:	(bad)  
   140056583:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140056584:	jo     0x14005652b
   140056586:	js     0x14005652d
   140056588:	mov    BYTE PTR [rbp-0x5a5f5a70],ah
   14005658e:	test   al,0xa5
   140056590:	mov    eax,0xd0a5c0a5
   140056595:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140056596:	fsub   DWORD PTR [rbp-0x5a0f5a18]
   14005659c:	add    BYTE PTR [rsi-0x59e759f8],ah
   1400565a2:	and    BYTE PTR [rsi-0x59c759d0],ah
   1400565a8:	rex.W cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400565aa:	push   rax
   1400565ab:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400565ac:	(bad)  
   1400565ad:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400565ae:	push   0xffffffff80a678a6
   1400565b3:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400565b4:	nop
   1400565b5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400565b6:	cwde   
   1400565b7:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400565b8:	test   al,0xa6
   1400565ba:	mov    al,0xa6
   1400565bc:	shl    BYTE PTR [rsi-0x59275938],0xe0
   1400565c3:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400565c4:	lock cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400565c6:	clc    
   1400565c7:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400565c8:	or     BYTE PTR [rdi-0x58df58f0],ah
   1400565ce:	sub    BYTE PTR [rdi-0x58bf58c8],ah
   1400565d4:	push   rax
   1400565d5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400565d6:	pop    rax
   1400565d7:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400565d8:	push   0xffffffff80a770a7
   1400565dd:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400565de:	mov    BYTE PTR [rdi-0x585f5868],ah
   1400565e4:	mov    al,0xa7
   1400565e6:	mov    eax,0xd0a7c8a7
   1400565eb:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400565ec:	loopne 0x140056595
   1400565ee:	call   0x140ad5e9a
   1400565f3:	test   al,0x10
   1400565f5:	test   al,0x18
   1400565f7:	test   al,0x28
   1400565f9:	test   al,0x30
   1400565fb:	test   al,0x40
   1400565fd:	test   al,0x48
   1400565ff:	test   al,0x58
   140056601:	test   al,0x60
   140056603:	test   al,0x70
   140056605:	test   al,0x78
   140056607:	test   al,0x88
   140056609:	test   al,0x90
   14005660b:	test   al,0xa0
   14005660d:	test   al,0xa8
   14005660f:	test   al,0xb8
   140056611:	test   al,0xc0
   140056613:	test   al,0xd0
   140056615:	test   al,0xd8
   140056617:	test   al,0xe8
   140056619:	test   al,0xf0
   14005661b:	test   al,0x0
   14005661d:	test   eax,0xa918a908
   140056622:	and    BYTE PTR [rcx-0x56c756d0],ch
   140056628:	test   rax,0xffffffffa960a950
   14005662e:	push   0xffffffff80a978a9
   140056633:	test   eax,0xa998a990
   140056638:	test   al,0xa9
   14005663a:	mov    al,0xa9
   14005663c:	shr    BYTE PTR [rcx-0x56275638],0xe0
   140056643:	test   eax,0xa9f8a9f0
   140056648:	or     BYTE PTR [rdx-0x55df55f0],ch
   14005664e:	sub    BYTE PTR [rdx-0x55bf55c8],ch
   140056654:	push   rax
   140056655:	stos   BYTE PTR es:[rdi],al
   140056656:	pop    rax
   140056657:	stos   BYTE PTR es:[rdi],al
   140056658:	push   0xffffffff80aa70aa
   14005665d:	stos   BYTE PTR es:[rdi],al
   14005665e:	mov    BYTE PTR [rdx-0x555f5568],ch
   140056664:	mov    al,0xaa
   140056666:	mov    eax,0xd0aac8aa
   14005666b:	stos   BYTE PTR es:[rdi],al
   14005666c:	loopne 0x140056618
   14005666e:	call   0x140b05f1d
   140056673:	stos   DWORD PTR es:[rdi],eax
   140056674:	adc    BYTE PTR [rbx-0x54d754e8],ch
   14005667a:	xor    BYTE PTR [rbx-0x54b754c0],ch
   140056680:	pop    rax
   140056681:	stos   DWORD PTR es:[rdi],eax
   140056682:	(bad)  
   140056683:	stos   DWORD PTR es:[rdi],eax
   140056684:	jo     0x140056631
   140056686:	js     0x140056633
   140056688:	mov    BYTE PTR [rbx-0x545f5470],ch
   14005668e:	test   al,0xab
   140056690:	mov    eax,0xd0abc0ab
   140056695:	stos   DWORD PTR es:[rdi],eax
   140056696:	fsubr  DWORD PTR [rbx-0x540f5418]
   14005669c:	add    BYTE PTR [rax+rcx*1+0x20ac18ac],ch
   1400566a3:	lods   al,BYTE PTR ds:[rsi]
   1400566a4:	xor    BYTE PTR [rax+rdi*1+0x50ac48ac],ch
   1400566ab:	lods   al,BYTE PTR ds:[rsi]
   1400566ac:	(bad)  
   1400566ad:	lods   al,BYTE PTR ds:[rsi]
   1400566ae:	push   0xffffffff80ac78ac
   1400566b3:	lods   al,BYTE PTR ds:[rsi]
   1400566b4:	nop
   1400566b5:	lods   al,BYTE PTR ds:[rsi]
   1400566b6:	cwde   
   1400566b7:	lods   al,BYTE PTR ds:[rsi]
   1400566b8:	test   al,0xac
   1400566ba:	mov    al,0xac
   1400566bc:	shr    BYTE PTR [rax+rcx*8-0x1f532754],0xac
   1400566c4:	lock lods al,BYTE PTR ds:[rsi]
   1400566c6:	clc    
   1400566c7:	lods   al,BYTE PTR ds:[rsi]
   1400566c8:	or     BYTE PTR [rbp-0x52df52f0],ch
   1400566ce:	sub    BYTE PTR [rbp-0x52bf52c8],ch
   1400566d4:	push   rax
   1400566d5:	lods   eax,DWORD PTR ds:[rsi]
   1400566d6:	pop    rax
   1400566d7:	lods   eax,DWORD PTR ds:[rsi]
   1400566d8:	push   0xffffffff80ad70ad
   1400566dd:	lods   eax,DWORD PTR ds:[rsi]
   1400566de:	mov    BYTE PTR [rbp-0x525f5268],ch
   1400566e4:	mov    al,0xad
   1400566e6:	mov    eax,0xd0adc8ad
   1400566eb:	lods   eax,DWORD PTR ds:[rsi]
   1400566ec:	loopne 0x14005669b
   1400566ee:	call   0x140b35fa0
   1400566f3:	scas   al,BYTE PTR es:[rdi]
   1400566f4:	adc    BYTE PTR [rsi-0x51d751e8],ch
   1400566fa:	xor    BYTE PTR [rsi-0x51b751c0],ch
   140056700:	pop    rax
   140056701:	scas   al,BYTE PTR es:[rdi]
   140056702:	(bad)  
   140056703:	scas   al,BYTE PTR es:[rdi]
   140056704:	jo     0x1400566b4
   140056706:	js     0x1400566b6
   140056708:	mov    BYTE PTR [rsi-0x515f5170],ch
   14005670e:	test   al,0xae
   140056710:	mov    eax,0xd0aec0ae
   140056715:	scas   al,BYTE PTR es:[rdi]
   140056716:	fsubr  DWORD PTR [rsi-0x510f5118]
   14005671c:	add    BYTE PTR [rdi-0x50e750f8],ch
   140056722:	and    BYTE PTR [rdi-0x50c750d0],ch
   140056728:	scas   rax,QWORD PTR es:[rdi]
   14005672a:	push   rax
   14005672b:	scas   eax,DWORD PTR es:[rdi]
   14005672c:	(bad)  
   14005672d:	scas   eax,DWORD PTR es:[rdi]
   14005672e:	push   0xffffffff80af78af
   140056733:	scas   eax,DWORD PTR es:[rdi]
   140056734:	nop
   140056735:	scas   eax,DWORD PTR es:[rdi]
   140056736:	cwde   
   140056737:	scas   eax,DWORD PTR es:[rdi]
   140056738:	test   al,0xaf
   14005673a:	mov    al,0xaf
   14005673c:	shr    BYTE PTR [rdi-0x50275038],0xe0
   140056743:	scas   eax,DWORD PTR es:[rdi]
   140056744:	lock scas eax,DWORD PTR es:[rdi]
   140056746:	clc    
   140056747:	scas   eax,DWORD PTR es:[rdi]
   140056748:	add    al,al
   14005674a:	add    al,0x0
   14005674c:	mov    ah,0x2
   14005674e:	add    BYTE PTR [rax],al
   140056750:	or     BYTE PTR [rax-0x5fdf5ff0],ah
   140056756:	sub    BYTE PTR [rax-0x5fbf5fc8],ah
   14005675c:	push   rax
   14005675d:	movabs al,ds:0xa080a070a068a058
   140056766:	mov    BYTE PTR [rax-0x5f5f5f68],ah
   14005676c:	mov    al,0xa0
   14005676e:	mov    eax,0xd0a0c8a0
   140056773:	movabs al,ds:0xa100a0f8a0e8a0e0
   14005677c:	adc    BYTE PTR [rcx-0x5ed75ee8],ah
   140056782:	xor    BYTE PTR [rcx-0x5eb75ec0],ah
   140056788:	pop    rax
   140056789:	movabs eax,ds:0xa188a178a170a160
   140056792:	nop
   140056793:	movabs eax,ds:0xa1c0a1b8a1a8a1a0
   14005679c:	shl    BYTE PTR [rcx-0x5e175e28],1
   1400567a2:	lock movabs eax,ds:0xa220a218a208a200
   1400567ac:	xor    BYTE PTR [rdx-0x5db75dc8],ah
   1400567b2:	push   rax
   1400567b3:	movabs ds:0xa280a278a268a260,al
   1400567bc:	nop
   1400567bd:	movabs ds:0xa2c0a2b0a2a8a298,al
   1400567c6:	enter  0xd8a2,0xa2
   1400567ca:	loopne 0x14005676e
   1400567cc:	lock movabs ds:0xa320a310a308a2f8,al
   1400567d6:	sub    BYTE PTR [rbx-0x5cbf5cc8],ah
   1400567dc:	push   rax
   1400567dd:	movabs ds:0xa380a370a368a358,eax
   1400567e6:	mov    BYTE PTR [rbx-0x5c5f5c68],ah
   1400567ec:	mov    al,0xa3
   1400567ee:	mov    eax,0xd0a3c8a3
   1400567f3:	movabs ds:0xa400a3f8a3e8a3e0,eax
   1400567fc:	adc    BYTE PTR [rax+rbx*1+0x30a428a4],ah
   140056803:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140056804:	rex movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140056806:	rex.W movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140056808:	pop    rax
   140056809:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005680a:	(bad)  
   14005680b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005680c:	jo     0x1400567b2
   14005680e:	js     0x1400567b4
   140056810:	mov    BYTE PTR [rax+rdx*4-0x575b5f5c],ah
   140056817:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140056818:	mov    eax,0xd0a4c0a4
   14005681d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005681e:	fsub   DWORD PTR [rax+rbp*8+0xa4f0a4]
   140056825:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140056826:	or     BYTE PTR [rbp-0x5adf5ae8],ah
   14005682c:	xor    BYTE PTR [rbp-0x5ab75ac8],ah
   140056832:	push   rax
   140056833:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140056834:	(bad)  
   140056835:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140056836:	push   0xffffffff80a578a5
   14005683b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14005683c:	nop
   14005683d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14005683e:	cwde   
   14005683f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140056840:	test   al,0xa5
   140056842:	mov    al,0xa5
   140056844:	shl    BYTE PTR [rbp-0x5a275a38],0xe0
   14005684b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14005684c:	lock movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14005684e:	clc    
   14005684f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140056850:	or     BYTE PTR [rsi-0x59df59f0],ah
   140056856:	sub    BYTE PTR [rsi-0x59bf59c8],ah
   14005685c:	push   rax
   14005685d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005685e:	pop    rax
   14005685f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140056860:	push   0xffffffff80a670a6
   140056865:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140056866:	mov    BYTE PTR [rsi-0x595f5968],ah
   14005686c:	mov    al,0xa6
   14005686e:	mov    eax,0xd0a6c8a6
   140056873:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140056874:	loopne 0x14005681c
   140056876:	call   0x140ac6121
   14005687b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005687c:	adc    BYTE PTR [rdi-0x58d758e8],ah
   140056882:	xor    BYTE PTR [rdi-0x58b758c0],ah
   140056888:	pop    rax
   140056889:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005688a:	(bad)  
   14005688b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005688c:	jo     0x140056835
   14005688e:	js     0x140056837
   140056890:	mov    BYTE PTR [rdi-0x585f5870],ah
   140056896:	test   al,0xa7
   140056898:	mov    eax,0xd0a7c0a7
   14005689d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005689e:	fsub   DWORD PTR [rdi-0x580f5818]
   1400568a4:	add    BYTE PTR [rax-0x57e757f8],ch
   1400568aa:	and    BYTE PTR [rax-0x57c757d0],ch
   1400568b0:	rex.W test al,0x50
   1400568b3:	test   al,0x60
   1400568b5:	test   al,0x68
   1400568b7:	test   al,0x78
   1400568b9:	test   al,0x80
   1400568bb:	test   al,0x90
   1400568bd:	test   al,0x98
   1400568bf:	test   al,0xa8
   1400568c1:	test   al,0xb0
   1400568c3:	test   al,0xc0
   1400568c5:	test   al,0xc8
   1400568c7:	test   al,0xd8
   1400568c9:	test   al,0xe0
   1400568cb:	test   al,0xf0
   1400568cd:	test   al,0xf8
   1400568cf:	test   al,0x8
   1400568d1:	test   eax,0xa920a910
   1400568d6:	sub    BYTE PTR [rcx-0x56bf56c8],ch
   1400568dc:	push   rax
   1400568dd:	test   eax,0xa968a958
   1400568e2:	jo     0x14005688d
   1400568e4:	sub    BYTE PTR [rcx-0x56675678],0xa0
   1400568eb:	test   eax,0xa9b8a9b0
   1400568f0:	enter  0xd0a9,0xa9
   1400568f4:	loopne 0x14005689f
   1400568f6:	call   0x140af61a4
   1400568fb:	stos   BYTE PTR es:[rdi],al
   1400568fc:	adc    BYTE PTR [rdx-0x55d755e8],ch
   140056902:	xor    BYTE PTR [rdx-0x55b755c0],ch
   140056908:	pop    rax
   140056909:	stos   BYTE PTR es:[rdi],al
   14005690a:	(bad)  
   14005690b:	stos   BYTE PTR es:[rdi],al
   14005690c:	jo     0x1400568b8
   14005690e:	js     0x1400568ba
   140056910:	mov    BYTE PTR [rdx-0x555f5570],ch
   140056916:	test   al,0xaa
   140056918:	mov    eax,0xd0aac0aa
   14005691d:	stos   BYTE PTR es:[rdi],al
   14005691e:	fsubr  DWORD PTR [rdx-0x550f5518]
   140056924:	add    BYTE PTR [rbx-0x54e754f8],ch
   14005692a:	and    BYTE PTR [rbx-0x54c754d0],ch
   140056930:	stos   QWORD PTR es:[rdi],rax
   140056932:	push   rax
   140056933:	stos   DWORD PTR es:[rdi],eax
   140056934:	(bad)  
   140056935:	stos   DWORD PTR es:[rdi],eax
   140056936:	push   0xffffffff80ab78ab
   14005693b:	stos   DWORD PTR es:[rdi],eax
   14005693c:	nop
   14005693d:	stos   DWORD PTR es:[rdi],eax
   14005693e:	cwde   
   14005693f:	stos   DWORD PTR es:[rdi],eax
   140056940:	test   al,0xab
   140056942:	mov    al,0xab
   140056944:	shr    BYTE PTR [rbx-0x54275438],0xe0
   14005694b:	stos   DWORD PTR es:[rdi],eax
   14005694c:	lock stos DWORD PTR es:[rdi],eax
   14005694e:	clc    
   14005694f:	stos   DWORD PTR es:[rdi],eax
   140056950:	or     BYTE PTR [rax+rdx*1+0x28ac20ac],ch
   140056957:	lods   al,BYTE PTR ds:[rsi]
   140056958:	cmp    BYTE PTR [rax+rax*2+0x58ac50ac],ch
   14005695f:	lods   al,BYTE PTR ds:[rsi]
   140056960:	push   0xffffffff80ac70ac
   140056965:	lods   al,BYTE PTR ds:[rsi]
   140056966:	mov    BYTE PTR [rax+rbx*4-0x4f535f54],ch
   14005696d:	lods   al,BYTE PTR ds:[rsi]
   14005696e:	mov    eax,0xd0acc8ac
   140056973:	lods   al,BYTE PTR ds:[rsi]
   140056974:	loopne 0x140056922
   140056976:	call   0x140b26227
   14005697b:	lods   eax,DWORD PTR ds:[rsi]
   14005697c:	adc    BYTE PTR [rbp-0x52d752e8],ch
   140056982:	xor    BYTE PTR [rbp-0x52b752c0],ch
   140056988:	pop    rax
   140056989:	lods   eax,DWORD PTR ds:[rsi]
   14005698a:	(bad)  
   14005698b:	lods   eax,DWORD PTR ds:[rsi]
   14005698c:	jo     0x14005693b
   14005698e:	js     0x14005693d
   140056990:	mov    BYTE PTR [rbp-0x525f5270],ch
   140056996:	test   al,0xad
   140056998:	mov    eax,0xd0adc0ad
   14005699d:	lods   eax,DWORD PTR ds:[rsi]
   14005699e:	fsubr  DWORD PTR [rbp-0x520f5218]
   1400569a4:	add    BYTE PTR [rsi-0x51e751f8],ch
   1400569aa:	and    BYTE PTR [rsi-0x51c751d0],ch
   1400569b0:	rex.W scas al,BYTE PTR es:[rdi]
   1400569b2:	push   rax
   1400569b3:	scas   al,BYTE PTR es:[rdi]
   1400569b4:	(bad)  
   1400569b5:	scas   al,BYTE PTR es:[rdi]
   1400569b6:	push   0xffffffff80ae78ae
   1400569bb:	scas   al,BYTE PTR es:[rdi]
   1400569bc:	nop
   1400569bd:	scas   al,BYTE PTR es:[rdi]
   1400569be:	cwde   
   1400569bf:	scas   al,BYTE PTR es:[rdi]
   1400569c0:	test   al,0xae
   1400569c2:	mov    al,0xae
   1400569c4:	shr    BYTE PTR [rsi-0x51275138],0xe0
   1400569cb:	scas   al,BYTE PTR es:[rdi]
   1400569cc:	lock scas al,BYTE PTR es:[rdi]
   1400569ce:	clc    
   1400569cf:	scas   al,BYTE PTR es:[rdi]
   1400569d0:	or     BYTE PTR [rdi-0x50df50f0],ch
   1400569d6:	sub    BYTE PTR [rdi-0x50bf50c8],ch
   1400569dc:	push   rax
   1400569dd:	scas   eax,DWORD PTR es:[rdi]
   1400569de:	pop    rax
   1400569df:	scas   eax,DWORD PTR es:[rdi]
   1400569e0:	push   0xffffffff80af70af
   1400569e5:	scas   eax,DWORD PTR es:[rdi]
   1400569e6:	mov    BYTE PTR [rdi-0x505f5068],ch
   1400569ec:	mov    al,0xaf
   1400569ee:	mov    eax,0xd0afc8af
   1400569f3:	scas   eax,DWORD PTR es:[rdi]
   1400569f4:	loopne 0x1400569a5
   1400569f6:	call   0x140b562aa
   1400569fb:	add    BYTE PTR [rax],al
   1400569fd:	rol    BYTE PTR [rax+rax*1],1
   140056a00:	mov    ah,0x2
   140056a02:	add    BYTE PTR [rax],al
   140056a04:	add    BYTE PTR [rax-0x5fe75ff0],ah
   140056a0a:	sub    BYTE PTR [rax-0x5fbf5fd0],ah
   140056a10:	rex.W movabs al,ds:0xa078a070a060a058
   140056a1a:	mov    BYTE PTR [rax-0x5f5f5f70],ah
   140056a20:	test   al,0xa0
   140056a22:	mov    eax,0xd0a0c0a0
   140056a27:	movabs al,ds:0xa100a0f0a0e8a0d8
   140056a30:	or     BYTE PTR [rcx-0x5edf5ee8],ah
   140056a36:	xor    BYTE PTR [rcx-0x5eb75ec8],ah
   140056a3c:	push   rax
   140056a3d:	movabs eax,ds:0xa180a178a168a160
   140056a46:	nop
   140056a47:	movabs eax,ds:0xa1c0a1b0a1a8a198
   140056a50:	enter  0xd8a1,0xa1
   140056a54:	loopne 0x1400569f7
   140056a56:	lock movabs eax,ds:0xa220a210a208a1f8
   140056a60:	sub    BYTE PTR [rdx-0x5dbf5dc8],ah
   140056a66:	push   rax
   140056a67:	movabs ds:0xa280a270a268a258,al
   140056a70:	mov    BYTE PTR [rdx-0x5d5f5d68],ah
   140056a76:	mov    al,0xa2
   140056a78:	mov    eax,0xd0a2c8a2
   140056a7d:	movabs ds:0xa300a2f8a2e8a2e0,al
   140056a86:	adc    BYTE PTR [rbx-0x5cd75ce8],ah
   140056a8c:	xor    BYTE PTR [rbx-0x5cb75cc0],ah
   140056a92:	pop    rax
   140056a93:	movabs ds:0xa388a378a370a360,eax
   140056a9c:	nop
   140056a9d:	movabs ds:0xa3c0a3b8a3a8a3a0,eax
   140056aa6:	shl    BYTE PTR [rbx-0x5c175c28],1
   140056aac:	lock movabs ds:0xa420a418a408a400,eax
   140056ab6:	xor    BYTE PTR [rax+rdi*1+0x50a448a4],ah
   140056abd:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140056abe:	(bad)  
   140056abf:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140056ac0:	push   0xffffffff80a478a4
   140056ac5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140056ac6:	nop
   140056ac7:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140056ac8:	cwde   
   140056ac9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140056aca:	test   al,0xa4
   140056acc:	mov    al,0xa4
   140056ace:	shl    BYTE PTR [rax+rcx*8-0x1f5b275c],0xa4
   140056ad6:	lock movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140056ad8:	clc    
   140056ad9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140056ada:	or     BYTE PTR [rbp-0x5adf5af0],ah
   140056ae0:	sub    BYTE PTR [rbp-0x5abf5ac8],ah
   140056ae6:	push   rax
   140056ae7:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140056ae8:	pop    rax
   140056ae9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140056aea:	push   0xffffffff80a570a5
   140056aef:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140056af0:	mov    BYTE PTR [rbp-0x5a5f5a68],ah
   140056af6:	mov    al,0xa5
   140056af8:	mov    eax,0xd0a5c8a5
   140056afd:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140056afe:	loopne 0x140056aa5
   140056b00:	call   0x140ab63aa
   140056b05:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140056b06:	adc    BYTE PTR [rsi-0x59d759e8],ah
   140056b0c:	xor    BYTE PTR [rsi-0x59b759c0],ah
   140056b12:	pop    rax
   140056b13:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140056b14:	(bad)  
   140056b15:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140056b16:	jo     0x140056abe
   140056b18:	js     0x140056ac0
   140056b1a:	mov    BYTE PTR [rsi-0x595f5970],ah
   140056b20:	test   al,0xa6
   140056b22:	mov    eax,0xd0a6c0a6
   140056b27:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140056b28:	fsub   DWORD PTR [rsi-0x590f5918]
   140056b2e:	add    BYTE PTR [rdi-0x58e758f8],ah
   140056b34:	and    BYTE PTR [rdi-0x58c758d0],ah
   140056b3a:	cmps   QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   140056b3c:	push   rax
   140056b3d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140056b3e:	(bad)  
   140056b3f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140056b40:	push   0xffffffff80a778a7
   140056b45:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140056b46:	nop
   140056b47:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140056b48:	cwde   
   140056b49:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140056b4a:	test   al,0xa7
   140056b4c:	mov    al,0xa7
   140056b4e:	shl    BYTE PTR [rdi-0x58275838],0xe0
   140056b55:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140056b56:	lock cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140056b58:	clc    
   140056b59:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140056b5a:	or     BYTE PTR [rax-0x57df57f0],ch
   140056b60:	sub    BYTE PTR [rax-0x57bf57c8],ch
   140056b66:	push   rax
   140056b67:	test   al,0x58
   140056b69:	test   al,0x68
   140056b6b:	test   al,0x70
   140056b6d:	test   al,0x80
   140056b6f:	test   al,0x88
   140056b71:	test   al,0x98
   140056b73:	test   al,0xa0
   140056b75:	test   al,0xb0
   140056b77:	test   al,0xb8
   140056b79:	test   al,0xc8
   140056b7b:	test   al,0xd0
   140056b7d:	test   al,0xe0
   140056b7f:	test   al,0xe8
   140056b81:	test   al,0xf8
   140056b83:	test   al,0x0
   140056b85:	test   eax,0xa918a910
   140056b8a:	sub    BYTE PTR [rcx-0x56bf56d0],ch
   140056b90:	test   rax,0xffffffffa960a958
   140056b96:	jo     0x140056b41
   140056b98:	js     0x140056b43
   140056b9a:	mov    BYTE PTR [rcx-0x565f5670],ch
   140056ba0:	test   al,0xa9
   140056ba2:	mov    eax,0xd0a9c0a9
   140056ba7:	test   eax,0xa9e8a9d8
   140056bac:	lock test eax,0xaa08aa00
   140056bb2:	sbb    BYTE PTR [rdx-0x55cf55e0],ch
   140056bb8:	cmp    BYTE PTR [rdx-0x55af55b8],ch
   140056bbe:	(bad)  
   140056bbf:	stos   BYTE PTR es:[rdi],al
   140056bc0:	push   0xffffffff80aa78aa
   140056bc5:	stos   BYTE PTR es:[rdi],al
   140056bc6:	nop
   140056bc7:	stos   BYTE PTR es:[rdi],al
   140056bc8:	cwde   
   140056bc9:	stos   BYTE PTR es:[rdi],al
   140056bca:	test   al,0xaa
   140056bcc:	mov    al,0xaa
   140056bce:	shr    BYTE PTR [rdx-0x55275538],0xe0
   140056bd5:	stos   BYTE PTR es:[rdi],al
   140056bd6:	lock stos BYTE PTR es:[rdi],al
   140056bd8:	clc    
   140056bd9:	stos   BYTE PTR es:[rdi],al
   140056bda:	or     BYTE PTR [rbx-0x54df54f0],ch
   140056be0:	sub    BYTE PTR [rbx-0x54bf54c8],ch
   140056be6:	push   rax
   140056be7:	stos   DWORD PTR es:[rdi],eax
   140056be8:	pop    rax
   140056be9:	stos   DWORD PTR es:[rdi],eax
   140056bea:	push   0xffffffff80ab70ab
   140056bef:	stos   DWORD PTR es:[rdi],eax
   140056bf0:	mov    BYTE PTR [rbx-0x545f5468],ch
   140056bf6:	mov    al,0xab
   140056bf8:	mov    eax,0xd0abc8ab
   140056bfd:	stos   DWORD PTR es:[rdi],eax
   140056bfe:	loopne 0x140056bab
   140056c00:	call   0x140b164b0
   140056c05:	lods   al,BYTE PTR ds:[rsi]
   140056c06:	adc    BYTE PTR [rax+rbx*1+0x30ac28ac],ch
   140056c0d:	lods   al,BYTE PTR ds:[rsi]
   140056c0e:	lods   al,BYTE PTR ds:[rsi]
   140056c10:	rex.W lods al,BYTE PTR ds:[rsi]
   140056c12:	pop    rax
   140056c13:	lods   al,BYTE PTR ds:[rsi]
   140056c14:	(bad)  
   140056c15:	lods   al,BYTE PTR ds:[rsi]
   140056c16:	jo     0x140056bc4
   140056c18:	js     0x140056bc6
   140056c1a:	mov    BYTE PTR [rax+rdx*4-0x57535f54],ch
   140056c21:	lods   al,BYTE PTR ds:[rsi]
   140056c22:	mov    eax,0xd0acc0ac
   140056c27:	lods   al,BYTE PTR ds:[rsi]
   140056c28:	fsubr  DWORD PTR [rax+rbp*8+0xacf0ac]
   140056c2f:	lods   eax,DWORD PTR ds:[rsi]
   140056c30:	or     BYTE PTR [rbp-0x52df52e8],ch
   140056c36:	xor    BYTE PTR [rbp-0x52b752c8],ch
   140056c3c:	push   rax
   140056c3d:	lods   eax,DWORD PTR ds:[rsi]
   140056c3e:	(bad)  
   140056c3f:	lods   eax,DWORD PTR ds:[rsi]
   140056c40:	push   0xffffffff80ad78ad
   140056c45:	lods   eax,DWORD PTR ds:[rsi]
   140056c46:	nop
   140056c47:	lods   eax,DWORD PTR ds:[rsi]
   140056c48:	cwde   
   140056c49:	lods   eax,DWORD PTR ds:[rsi]
   140056c4a:	test   al,0xad
   140056c4c:	mov    al,0xad
   140056c4e:	shr    BYTE PTR [rbp-0x52275238],0xe0
   140056c55:	lods   eax,DWORD PTR ds:[rsi]
   140056c56:	lock lods eax,DWORD PTR ds:[rsi]
   140056c58:	clc    
   140056c59:	lods   eax,DWORD PTR ds:[rsi]
   140056c5a:	or     BYTE PTR [rsi-0x51df51f0],ch
   140056c60:	sub    BYTE PTR [rsi-0x51bf51c8],ch
   140056c66:	push   rax
   140056c67:	scas   al,BYTE PTR es:[rdi]
   140056c68:	pop    rax
   140056c69:	scas   al,BYTE PTR es:[rdi]
   140056c6a:	push   0xffffffff80ae70ae
   140056c6f:	scas   al,BYTE PTR es:[rdi]
   140056c70:	mov    BYTE PTR [rsi-0x515f5168],ch
   140056c76:	mov    al,0xae
   140056c78:	mov    eax,0xd0aec8ae
   140056c7d:	scas   al,BYTE PTR es:[rdi]
   140056c7e:	loopne 0x140056c2e
   140056c80:	call   0x140b46533
   140056c85:	scas   eax,DWORD PTR es:[rdi]
   140056c86:	adc    BYTE PTR [rdi-0x50d750e8],ch
   140056c8c:	xor    BYTE PTR [rdi-0x50b750c0],ch
   140056c92:	pop    rax
   140056c93:	scas   eax,DWORD PTR es:[rdi]
   140056c94:	(bad)  
   140056c95:	scas   eax,DWORD PTR es:[rdi]
   140056c96:	jo     0x140056c47
   140056c98:	js     0x140056c49
   140056c9a:	mov    BYTE PTR [rdi-0x505f5070],ch
   140056ca0:	test   al,0xaf
   140056ca2:	mov    eax,0xd0afc0af
   140056ca7:	scas   eax,DWORD PTR es:[rdi]
   140056ca8:	fsubr  DWORD PTR [rdi-0x500f5018]
   140056cae:	add    BYTE PTR [rax],al
   140056cb0:	add    al,ah
   140056cb2:	add    al,0x0
   140056cb4:	jo     0x140056cb7
   140056cb6:	add    BYTE PTR [rax],al
   140056cb8:	add    BYTE PTR [rax-0x5fe75ff8],ah
   140056cbe:	and    BYTE PTR [rax-0x5fc75fd0],ah
   140056cc4:	rex.W movabs al,ds:0xa078a068a060a050
   140056cce:	and    BYTE PTR [rax-0x5f675f70],0xa8
   140056cd5:	movabs al,ds:0xa0d8a0c8a0c0a0b0
   140056cde:	loopne 0x140056c80
   140056ce0:	lock movabs al,ds:0xa120a110a108a0f8
   140056cea:	sub    BYTE PTR [rcx-0x5ebf5ec8],ah
   140056cf0:	push   rax
   140056cf1:	movabs eax,ds:0xa180a170a168a158
   140056cfa:	mov    BYTE PTR [rcx-0x5e5f5e68],ah
   140056d00:	mov    al,0xa1
   140056d02:	mov    eax,0xd0a1c8a1
   140056d07:	movabs eax,ds:0xa200a1f8a1e8a1e0
   140056d10:	adc    BYTE PTR [rdx-0x5dd75de8],ah
   140056d16:	xor    BYTE PTR [rdx-0x5db75dc0],ah
   140056d1c:	pop    rax
   140056d1d:	movabs ds:0xa288a278a270a260,al
   140056d26:	nop
   140056d27:	movabs ds:0xa2c0a2b8a2a8a2a0,al
   140056d30:	shl    BYTE PTR [rdx-0x5d175d28],1
   140056d36:	lock movabs ds:0xa320a318a308a300,al
   140056d40:	xor    BYTE PTR [rbx-0x5cb75cc8],ah
   140056d46:	push   rax
   140056d47:	movabs ds:0xa380a378a368a360,eax
   140056d50:	nop
   140056d51:	movabs ds:0xa3c0a3b0a3a8a398,eax
   140056d5a:	enter  0xd8a3,0xa3
   140056d5e:	loopne 0x140056d03
   140056d60:	lock movabs ds:0xa420a410a408a3f8,eax
   140056d6a:	sub    BYTE PTR [rax+rdi*1+0x50a440a4],ah
   140056d71:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140056d72:	pop    rax
   140056d73:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140056d74:	push   0xffffffff80a470a4
   140056d79:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140056d7a:	mov    BYTE PTR [rax+rbx*4-0x4f5b5f5c],ah
   140056d81:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140056d82:	mov    eax,0xd0a4c8a4
   140056d87:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140056d88:	loopne 0x140056d2e
   140056d8a:	call   0x140aa6633
   140056d8f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140056d90:	adc    BYTE PTR [rbp-0x5ad75ae8],ah
   140056d96:	xor    BYTE PTR [rbp-0x5ab75ac0],ah
   140056d9c:	pop    rax
   140056d9d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140056d9e:	(bad)  
   140056d9f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140056da0:	jo     0x140056d47
   140056da2:	js     0x140056d49
   140056da4:	mov    BYTE PTR [rbp-0x5a475a70],ah
   140056daa:	shl    BYTE PTR [rbp-0x5a1f5a28],1
   140056db0:	lock movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140056db2:	rex cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140056db4:	rex.W cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140056db6:	push   rax
   140056db7:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140056db8:	pop    rax
   140056db9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140056dba:	loopne 0x140056d62
   140056dbc:	or     BYTE PTR [rdi-0x589758d0],ah
   140056dc2:	movabs al,ds:0x50a828a808a7d0a7
   140056dcb:	test   al,0x70
   140056dcd:	test   al,0xc0
   140056dcf:	test   al,0xf0
   140056dd1:	test   al,0x18
   140056dd3:	test   eax,0xa980a948
   140056dd8:	mov    al,0xa9
   140056dda:	fsubr  DWORD PTR [rcx-0x55bf55e8]
   140056de0:	push   0xffffffffb8aa90aa
   140056de5:	stos   BYTE PTR es:[rdi],al
   140056de6:	fsubr  DWORD PTR [rdx-0x54d75500]
   140056dec:	push   0xffffffffc0ab90ab
   140056df1:	stos   DWORD PTR es:[rdi],eax
   140056df2:	clc    
   140056df3:	stos   DWORD PTR es:[rdi],eax
   140056df4:	and    BYTE PTR [rax+riz*2-0x3f536f54],ch
   140056dfb:	lods   al,BYTE PTR ds:[rsi]
   140056dfc:	lock lods al,BYTE PTR ds:[rsi]
   140056dfe:	and    BYTE PTR [rbp-0x528752b0],ch
   140056e04:	test   al,0xad
   140056e06:	shr    BYTE PTR [rbp-0x51cf5200],1
   140056e0c:	(bad)  
   140056e0d:	scas   al,BYTE PTR es:[rdi]
   140056e0e:	mov    BYTE PTR [rsi-0x51175150],ch
   140056e14:	and    BYTE PTR [rdi-0x506f50a0],ch
   140056e1a:	shr    BYTE PTR [rdi+0xaff0],0x0
   140056e21:	lock add al,0x0
   140056e24:	pop    rax
   140056e25:	add    BYTE PTR [rax],al
   140056e27:	add    BYTE PTR [rax],ah
   140056e29:	movabs al,ds:0xa0e8a0b8a088a058
   140056e32:	sbb    BYTE PTR [rcx-0x5e875eb0],ah
   140056e38:	mov    eax,0x30a1f0a1
   140056e3d:	movabs ds:0xa320a2e0a2a8a270,al
   140056e46:	jo     0x140056deb
   140056e48:	movabs al,ds:0x70a440a410a3d0a3
   140056e51:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140056e52:	movabs al,ds:0x58a528a4f8a4c8a4
   140056e5b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140056e5c:	and    BYTE PTR [rbp-0x5a0f5a48],0x28
   140056e63:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140056e64:	(bad)  
   140056e65:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140056e66:	shl    BYTE PTR [rsi-0x58af58e8],0xa0
   140056e6d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140056e6e:	clc    
   140056e6f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140056e70:	cmp    BYTE PTR [rax-0x574f5788],ch
	...
