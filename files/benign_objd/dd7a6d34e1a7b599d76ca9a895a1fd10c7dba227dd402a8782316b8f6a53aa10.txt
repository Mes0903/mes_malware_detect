
dd7a6d34e1a7b599d76ca9a895a1fd10c7dba227dd402a8782316b8f6a53aa10.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	and    esp,0xfffffff8
  401006:	sub    esp,0x254
  40100c:	mov    eax,ds:0x43e020
  401011:	xor    eax,esp
  401013:	mov    DWORD PTR [esp+0x250],eax
  40101a:	mov    eax,DWORD PTR [ebp+0x10]
  40101d:	push   ebx
  40101e:	push   esi
  40101f:	push   edi
  401020:	push   eax
  401021:	lea    ecx,[esp+0x30]
  401025:	call   DWORD PTR ds:0x430268
  40102b:	push   0x0
  40102d:	call   DWORD PTR ds:0x43045c
  401033:	push   0x0
  401035:	push   0x0
  401037:	push   0x0
  401039:	push   0x0
  40103b:	call   DWORD PTR ds:0x4303dc
  401041:	xor    eax,eax
  401043:	push   0x208
  401048:	push   eax
  401049:	lea    ecx,[esp+0x52]
  40104d:	push   ecx
  40104e:	mov    WORD PTR [esp+0x54],ax
  401053:	call   0x429f9c
  401058:	add    esp,0xc
  40105b:	push   0x104
  401060:	lea    edx,[esp+0x4c]
  401064:	push   edx
  401065:	push   0x0
  401067:	call   DWORD PTR ds:0x430108
  40106d:	lea    eax,[esp+0x48]
  401071:	push   0x5c
  401073:	push   eax
  401074:	call   DWORD PTR ds:0x430378
  40107a:	add    esp,0x8
  40107d:	test   eax,eax
  40107f:	je     0x401091
  401081:	lea    edx,[esp+0x48]
  401085:	xor    ecx,ecx
  401087:	push   edx
  401088:	mov    WORD PTR [eax],cx
  40108b:	call   DWORD PTR ds:0x430100
  401091:	push   0x0
  401093:	push   0x0
  401095:	push   0x430a74
  40109a:	call   DWORD PTR ds:0x4303c0
  4010a0:	call   0x4036c0
  4010a5:	mov    ecx,DWORD PTR ds:0x43fe7c
  4010ab:	mov    eax,DWORD PTR [ecx]
  4010ad:	mov    edx,DWORD PTR [eax+0x8]
  4010b0:	push   0x430c34
  4010b5:	call   edx
  4010b7:	mov    ecx,DWORD PTR ds:0x43fe7c
  4010bd:	mov    eax,DWORD PTR [ecx]
  4010bf:	mov    edx,DWORD PTR [eax+0x4]
  4010c2:	push   0x430c38
  4010c7:	call   edx
  4010c9:	call   DWORD PTR ds:0x4300e8
  4010cf:	mov    ds:0x43fe9c,eax
  4010d4:	call   0x4200a0
  4010d9:	call   0x421950
  4010de:	lea    ecx,[esp+0x2c]
  4010e2:	call   0x4011b0
  4010e7:	mov    esi,DWORD PTR ds:0x4303e0
  4010ed:	xor    eax,eax
  4010ef:	push   eax
  4010f0:	push   eax
  4010f1:	push   eax
  4010f2:	mov    DWORD PTR [esp+0x20],eax
  4010f6:	mov    DWORD PTR [esp+0x24],eax
  4010fa:	mov    DWORD PTR [esp+0x28],eax
  4010fe:	mov    DWORD PTR [esp+0x2c],eax
  401102:	mov    DWORD PTR [esp+0x30],eax
  401106:	mov    DWORD PTR [esp+0x34],eax
  40110a:	lea    eax,[esp+0x1c]
  40110e:	push   eax
  40110f:	mov    DWORD PTR [esp+0x20],0x0
  401117:	call   esi
  401119:	test   eax,eax
  40111b:	je     0x40114f
  40111d:	mov    edi,DWORD PTR ds:0x4303d8
  401123:	mov    ebx,DWORD PTR ds:0x4303e4
  401129:	lea    esp,[esp+0x0]
  401130:	lea    ecx,[esp+0x10]
  401134:	push   ecx
  401135:	call   edi
  401137:	lea    edx,[esp+0x10]
  40113b:	push   edx
  40113c:	call   ebx
  40113e:	push   0x0
  401140:	push   0x0
  401142:	push   0x0
  401144:	lea    eax,[esp+0x1c]
  401148:	push   eax
  401149:	call   esi
  40114b:	test   eax,eax
  40114d:	jne    0x401130
  40114f:	call   DWORD PTR ds:0x430458
  401155:	mov    esi,DWORD PTR [esp+0x18]
  401159:	lea    ecx,[esp+0x2c]
  40115d:	call   DWORD PTR ds:0x430264
  401163:	mov    ecx,DWORD PTR [esp+0x25c]
  40116a:	pop    edi
  40116b:	mov    eax,esi
  40116d:	pop    esi
  40116e:	pop    ebx
  40116f:	xor    ecx,esp
  401171:	call   0x42503a
  401176:	mov    esp,ebp
  401178:	pop    ebp
  401179:	ret    0x10
  40117c:	int3   
  40117d:	int3   
  40117e:	int3   
  40117f:	int3   
  401180:	push   esi
  401181:	mov    esi,ecx
  401183:	mov    DWORD PTR [esi],0x430b78
  401189:	mov    DWORD PTR ds:0x4400a4,0x0
  401193:	call   0x4029b0
  401198:	test   BYTE PTR [esp+0x8],0x1
  40119d:	je     0x4011a8
  40119f:	push   esi
  4011a0:	call   0x42504a
  4011a5:	add    esp,0x4
  4011a8:	mov    eax,esi
  4011aa:	pop    esi
  4011ab:	ret    0x4
  4011ae:	int3   
  4011af:	int3   
  4011b0:	push   0xffffffff
  4011b2:	push   0x42f192
  4011b7:	mov    eax,fs:0x0
  4011bd:	push   eax
  4011be:	sub    esp,0x54
  4011c1:	mov    eax,ds:0x43e020
  4011c6:	xor    eax,esp
  4011c8:	mov    DWORD PTR [esp+0x50],eax
  4011cc:	push   ebx
  4011cd:	push   ebp
  4011ce:	push   esi
  4011cf:	push   edi
  4011d0:	mov    eax,ds:0x43e020
  4011d5:	xor    eax,esp
  4011d7:	push   eax
  4011d8:	lea    eax,[esp+0x68]
  4011dc:	mov    fs:0x0,eax
  4011e2:	mov    ebx,ecx
  4011e4:	cmp    DWORD PTR [ebx+0x18],0x8
  4011e8:	mov    BYTE PTR [esp+0x16],0x0
  4011ed:	mov    BYTE PTR [esp+0x15],0x0
  4011f2:	mov    BYTE PTR [esp+0x17],0x0
  4011f7:	jb     0x4011fe
  4011f9:	mov    eax,DWORD PTR [ebx+0x4]
  4011fc:	jmp    0x401201
  4011fe:	lea    eax,[ebx+0x4]
  401201:	lea    ecx,[esp+0x18]
  401205:	push   ecx
  401206:	push   eax
  401207:	call   DWORD PTR ds:0x4303cc
  40120d:	xor    esi,esi
  40120f:	cmp    DWORD PTR [esp+0x18],esi
  401213:	mov    ebp,eax
  401215:	jle    0x40129d
  40121b:	mov    edi,DWORD PTR ds:0x430120
  401221:	mov    edx,DWORD PTR [ebp+esi*4+0x0]
  401225:	push   edx
  401226:	lea    ecx,[esp+0x30]
  40122a:	call   DWORD PTR ds:0x430268
  401230:	lea    eax,[esp+0x2c]
  401234:	push   0x430ae8
  401239:	push   eax
  40123a:	mov    DWORD PTR [esp+0x78],0x0
  401242:	call   edi
  401244:	add    esp,0x8
  401247:	test   al,al
  401249:	je     0x401252
  40124b:	mov    BYTE PTR [esp+0x16],0x1
  401250:	jmp    0x401284
  401252:	lea    ecx,[esp+0x2c]
  401256:	push   0x430b00
  40125b:	push   ecx
  40125c:	call   edi
  40125e:	add    esp,0x8
  401261:	test   al,al
  401263:	je     0x40126c
  401265:	mov    BYTE PTR [esp+0x15],0x1
  40126a:	jmp    0x401284
  40126c:	lea    edx,[esp+0x2c]
  401270:	push   0x430b28
  401275:	push   edx
  401276:	call   edi
  401278:	add    esp,0x8
  40127b:	test   al,al
  40127d:	je     0x401284
  40127f:	mov    BYTE PTR [esp+0x17],0x1
  401284:	lea    ecx,[esp+0x2c]
  401288:	mov    DWORD PTR [esp+0x70],0xffffffff
  401290:	call   DWORD PTR ds:0x430264
  401296:	inc    esi
  401297:	cmp    esi,DWORD PTR [esp+0x18]
  40129b:	jl     0x401221
  40129d:	push   ebp
  40129e:	call   DWORD PTR ds:0x4300fc
  4012a4:	push   ebx
  4012a5:	lea    ecx,[esp+0x4c]
  4012a9:	call   DWORD PTR ds:0x430118
  4012af:	lea    eax,[esp+0x48]
  4012b3:	push   eax
  4012b4:	mov    DWORD PTR [esp+0x74],0x1
  4012bc:	call   0x401530
  4012c1:	add    esp,0x4
  4012c4:	call   0x4013d0
  4012c9:	mov    bl,BYTE PTR [esp+0x16]
  4012cd:	mov    esi,eax
  4012cf:	mov    BYTE PTR [esi+0x53],bl
  4012d2:	test   bl,bl
  4012d4:	je     0x401357
  4012da:	mov    ecx,DWORD PTR [esi+0x24]
  4012dd:	mov    edx,DWORD PTR [ecx]
  4012df:	mov    eax,DWORD PTR [edx+0xc]
  4012e2:	push   0x0
  4012e4:	push   0x431294
  4012e9:	call   eax
  4012eb:	mov    ecx,DWORD PTR [esi+0x24]
  4012ee:	mov    edx,DWORD PTR [ecx]
  4012f0:	mov    eax,DWORD PTR [edx+0xc]
  4012f3:	push   0x0
  4012f5:	push   0x431184
  4012fa:	call   eax
  4012fc:	mov    ecx,DWORD PTR [esi+0x4]
  4012ff:	xor    eax,eax
  401301:	mov    DWORD PTR [esp+0x20],eax
  401305:	mov    DWORD PTR [esp+0x24],eax
  401309:	mov    DWORD PTR [esp+0x28],eax
  40130d:	mov    DWORD PTR [esp+0x1c],0x0
  401315:	mov    edx,DWORD PTR [ecx]
  401317:	mov    eax,DWORD PTR [edx+0x18]
  40131a:	call   eax
  40131c:	lea    ecx,[esp+0x1c]
  401320:	push   ecx
  401321:	push   eax
  401322:	call   DWORD PTR ds:0x430428
  401328:	mov    eax,DWORD PTR [esp+0x28]
  40132c:	sub    eax,DWORD PTR [esp+0x20]
  401330:	mov    ecx,DWORD PTR [esi+0x24]
  401333:	mov    edx,DWORD PTR [ecx]
  401335:	mov    edx,DWORD PTR [edx+0x14]
  401338:	push   eax
  401339:	mov    eax,DWORD PTR [esp+0x28]
  40133d:	sub    eax,DWORD PTR [esp+0x20]
  401341:	push   eax
  401342:	call   edx
  401344:	mov    ecx,DWORD PTR [esi+0x4]
  401347:	mov    eax,DWORD PTR [ecx]
  401349:	mov    edx,DWORD PTR [eax+0x14]
  40134c:	call   edx
  40134e:	mov    edx,DWORD PTR [eax]
  401350:	mov    ecx,eax
  401352:	mov    eax,DWORD PTR [edx+0x4c]
  401355:	call   eax
  401357:	mov    cl,BYTE PTR [esp+0x15]
  40135b:	mov    BYTE PTR [esi+0x54],cl
  40135e:	test   bl,bl
  401360:	jne    0x401375
  401362:	mov    ecx,DWORD PTR [esi+0x4]
  401365:	mov    edx,DWORD PTR [ecx]
  401367:	mov    eax,DWORD PTR [edx+0x10]
  40136a:	push   0x5
  40136c:	call   eax
  40136e:	mov    eax,esi
  401370:	call   0x40b160
  401375:	lea    ecx,[esp+0x48]
  401379:	push   ecx
  40137a:	mov    ecx,0x43ff2c
  40137f:	call   DWORD PTR ds:0x43017c
  401385:	cmp    BYTE PTR [esp+0x17],0x0
  40138a:	je     0x401393
  40138c:	call   0x412280
  401391:	jmp    0x401398
  401393:	call   0x40e070
  401398:	lea    ecx,[esp+0x48]
  40139c:	mov    DWORD PTR [esp+0x70],0xffffffff
  4013a4:	call   DWORD PTR ds:0x430264
  4013aa:	mov    ecx,DWORD PTR [esp+0x68]
  4013ae:	mov    DWORD PTR fs:0x0,ecx
  4013b5:	pop    ecx
  4013b6:	pop    edi
  4013b7:	pop    esi
  4013b8:	pop    ebp
  4013b9:	pop    ebx
  4013ba:	mov    ecx,DWORD PTR [esp+0x50]
  4013be:	xor    ecx,esp
  4013c0:	call   0x42503a
  4013c5:	add    esp,0x60
  4013c8:	ret    
  4013c9:	int3   
  4013ca:	int3   
  4013cb:	int3   
  4013cc:	int3   
  4013cd:	int3   
  4013ce:	int3   
  4013cf:	int3   
  4013d0:	push   0xffffffff
  4013d2:	push   0x42defb
  4013d7:	mov    eax,fs:0x0
  4013dd:	push   eax
  4013de:	push   ecx
  4013df:	push   ebx
  4013e0:	push   esi
  4013e1:	mov    eax,ds:0x43e020
  4013e6:	xor    eax,esp
  4013e8:	push   eax
  4013e9:	lea    eax,[esp+0x10]
  4013ed:	mov    fs:0x0,eax
  4013f3:	mov    eax,ds:0x4400a4
  4013f8:	xor    ebx,ebx
  4013fa:	cmp    eax,ebx
  4013fc:	jne    0x401457
  4013fe:	push   0x5c
  401400:	call   0x425050
  401405:	mov    esi,eax
  401407:	add    esp,0x4
  40140a:	mov    DWORD PTR [esp+0xc],esi
  40140e:	mov    DWORD PTR [esp+0x18],ebx
  401412:	cmp    esi,ebx
  401414:	je     0x40143d
  401416:	push   esi
  401417:	call   0x402a40
  40141c:	mov    DWORD PTR [esi],0x430b5c
  401422:	mov    DWORD PTR [esi+0x44],0x1
  401429:	mov    DWORD PTR [esi+0x48],ebx
  40142c:	mov    DWORD PTR [esi+0x4c],ebx
  40142f:	mov    BYTE PTR [esi+0x50],bl
  401432:	mov    BYTE PTR [esi+0x52],bl
  401435:	mov    BYTE PTR [esi+0x53],bl
  401438:	mov    DWORD PTR [esi+0x58],ebx
  40143b:	jmp    0x40143f
  40143d:	xor    esi,esi
  40143f:	mov    DWORD PTR [esp+0x18],0xffffffff
  401447:	mov    DWORD PTR ds:0x4400a4,esi
  40144d:	call   0x401470
  401452:	mov    eax,ds:0x4400a4
  401457:	mov    ecx,DWORD PTR [esp+0x10]
  40145b:	mov    DWORD PTR fs:0x0,ecx
  401462:	pop    ecx
  401463:	pop    esi
  401464:	pop    ebx
  401465:	add    esp,0x10
  401468:	ret    
  401469:	int3   
  40146a:	int3   
  40146b:	int3   
  40146c:	int3   
  40146d:	int3   
  40146e:	int3   
  40146f:	int3   
  401470:	push   0xffffffff
  401472:	push   0x42dec2
  401477:	mov    eax,fs:0x0
  40147d:	push   eax
  40147e:	sub    esp,0x40
  401481:	mov    eax,ds:0x43e020
  401486:	xor    eax,esp
  401488:	mov    DWORD PTR [esp+0x3c],eax
  40148c:	push   ebx
  40148d:	mov    eax,ds:0x43e020
  401492:	xor    eax,esp
  401494:	push   eax
  401495:	lea    eax,[esp+0x48]
  401499:	mov    fs:0x0,eax
  40149f:	mov    ebx,DWORD PTR ds:0x4400a4
  4014a5:	lea    ecx,[esp+0x28]
  4014a9:	call   DWORD PTR ds:0x430254
  4014af:	lea    ecx,[esp+0xc]
  4014b3:	mov    DWORD PTR [esp+0x50],0x0
  4014bb:	call   DWORD PTR ds:0x430254
  4014c1:	push   0x430f78
  4014c6:	lea    ecx,[esp+0x2c]
  4014ca:	mov    BYTE PTR [esp+0x54],0x1
  4014cf:	call   DWORD PTR ds:0x4301c0
  4014d5:	push   0x430f8c
  4014da:	lea    ecx,[esp+0x10]
  4014de:	call   DWORD PTR ds:0x4301c0
  4014e4:	lea    eax,[esp+0xc]
  4014e8:	push   eax
  4014e9:	lea    ecx,[esp+0x2c]
  4014ed:	call   0x40a790
  4014f2:	lea    ecx,[esp+0xc]
  4014f6:	mov    BYTE PTR [esp+0x50],0x0
  4014fb:	call   DWORD PTR ds:0x430264
  401501:	lea    ecx,[esp+0x28]
  401505:	mov    DWORD PTR [esp+0x50],0xffffffff
  40150d:	call   DWORD PTR ds:0x430264
  401513:	mov    ecx,DWORD PTR [esp+0x48]
  401517:	mov    DWORD PTR fs:0x0,ecx
  40151e:	pop    ecx
  40151f:	pop    ebx
  401520:	mov    ecx,DWORD PTR [esp+0x3c]
  401524:	xor    ecx,esp
  401526:	call   0x42503a
  40152b:	add    esp,0x4c
  40152e:	ret    
  40152f:	int3   
  401530:	sub    esp,0x10
  401533:	push   esi
  401534:	mov    eax,0x430ae4
  401539:	push   edi
  40153a:	lea    edx,[eax+0x2]
  40153d:	lea    ecx,[ecx+0x0]
  401540:	mov    cx,WORD PTR [eax]
  401543:	add    eax,0x2
  401546:	test   cx,cx
  401549:	jne    0x401540
  40154b:	sub    eax,edx
  40154d:	sar    eax,1
  40154f:	lea    edi,[eax*2+0x430ae4]
  401556:	mov    eax,0x430ae8
  40155b:	mov    esi,0x430ae4
  401560:	lea    edx,[eax+0x2]
  401563:	mov    cx,WORD PTR [eax]
  401566:	add    eax,0x2
  401569:	test   cx,cx
  40156c:	jne    0x401563
  40156e:	sub    eax,edx
  401570:	push   edi
  401571:	sar    eax,1
  401573:	push   esi
  401574:	mov    esi,DWORD PTR [esp+0x24]
  401578:	lea    ecx,[eax*2+0x430ae8]
  40157f:	sub    esp,0xc
  401582:	mov    eax,esp
  401584:	mov    edx,0x430ae8
  401589:	mov    DWORD PTR [eax],edx
  40158b:	mov    DWORD PTR [eax+0x4],ecx
  40158e:	mov    ecx,DWORD PTR [esp+0x28]
  401592:	mov    DWORD PTR [eax+0x8],ecx
  401595:	call   0x4015b0
  40159a:	add    esp,0x14
  40159d:	pop    edi
  40159e:	pop    esi
  40159f:	add    esp,0x10
  4015a2:	ret    
  4015a3:	int3   
  4015a4:	int3   
  4015a5:	int3   
  4015a6:	int3   
  4015a7:	int3   
  4015a8:	int3   
  4015a9:	int3   
  4015aa:	int3   
  4015ab:	int3   
  4015ac:	int3   
  4015ad:	int3   
  4015ae:	int3   
  4015af:	int3   
  4015b0:	sub    esp,0x20
  4015b3:	lea    eax,[esp]
  4015b6:	push   eax
  4015b7:	mov    ecx,esi
  4015b9:	call   DWORD PTR ds:0x430124
  4015bf:	lea    ecx,[esp+0x8]
  4015c3:	push   ecx
  4015c4:	mov    ecx,esi
  4015c6:	call   DWORD PTR ds:0x430128
  4015cc:	mov    edx,DWORD PTR [esp+0x4]
  4015d0:	mov    eax,DWORD PTR [esp]
  4015d3:	mov    ecx,DWORD PTR [esp+0xc]
  4015d7:	push   edx
  4015d8:	mov    edx,DWORD PTR [esp+0xc]
  4015dc:	push   eax
  4015dd:	push   ecx
  4015de:	push   edx
  4015df:	lea    eax,[esp+0x20]
  4015e3:	push   eax
  4015e4:	lea    ecx,[esp+0x38]
  4015e8:	push   ecx
  4015e9:	call   0x401640
  4015ee:	mov    edx,DWORD PTR [eax]
  4015f0:	sub    esp,0x10
  4015f3:	mov    ecx,esp
  4015f5:	mov    DWORD PTR [ecx],edx
  4015f7:	mov    edx,DWORD PTR [eax+0x4]
  4015fa:	mov    DWORD PTR [ecx+0x4],edx
  4015fd:	mov    edx,DWORD PTR [eax+0x8]
  401600:	mov    eax,DWORD PTR [eax+0xc]
  401603:	mov    DWORD PTR [ecx+0x8],edx
  401606:	mov    edx,DWORD PTR [esp+0x40]
  40160a:	mov    DWORD PTR [ecx+0xc],eax
  40160d:	mov    ecx,DWORD PTR [esp+0x44]
  401611:	push   ecx
  401612:	mov    ecx,DWORD PTR [esp+0x38]
  401616:	push   edx
  401617:	mov    edx,DWORD PTR [esp+0x40]
  40161b:	sub    esp,0xc
  40161e:	mov    eax,esp
  401620:	mov    DWORD PTR [eax],ecx
  401622:	mov    ecx,DWORD PTR [esp+0x50]
  401626:	mov    DWORD PTR [eax+0x4],edx
  401629:	push   esi
  40162a:	mov    DWORD PTR [eax+0x8],ecx
  40162d:	call   0x401790
  401632:	add    esp,0x48
  401635:	ret    
  401636:	int3   
  401637:	int3   
  401638:	int3   
  401639:	int3   
  40163a:	int3   
  40163b:	int3   
  40163c:	int3   
  40163d:	int3   
  40163e:	int3   
  40163f:	int3   
  401640:	sub    esp,0x8
  401643:	push   ebx
  401644:	mov    ebx,DWORD PTR ds:0x430390
  40164a:	push   ebp
  40164b:	push   esi
  40164c:	mov    esi,DWORD PTR [esp+0x20]
  401650:	push   edi
  401651:	mov    edi,DWORD PTR [esp+0x28]
  401655:	mov    DWORD PTR [esp+0x10],esi
  401659:	mov    DWORD PTR [esp+0x14],edi
  40165d:	lea    ecx,[ecx+0x0]
  401660:	cmp    esi,0xfffffffc
  401663:	je     0x401671
  401665:	test   esi,esi
  401667:	je     0x40166f
  401669:	cmp    esi,DWORD PTR [esp+0x2c]
  40166d:	je     0x401671
  40166f:	call   ebx
  401671:	mov    edx,DWORD PTR [esp+0x30]
  401675:	cmp    edi,edx
  401677:	je     0x401772
  40167d:	mov    ecx,DWORD PTR [esp+0x1c]
  401681:	mov    eax,DWORD PTR [ecx]
  401683:	cmp    eax,DWORD PTR [ecx+0x4]
  401686:	je     0x401772
  40168c:	mov    ebp,eax
  40168e:	mov    edi,edi
  401690:	cmp    esi,0xfffffffc
  401693:	je     0x4016a1
  401695:	test   esi,esi
  401697:	je     0x40169f
  401699:	cmp    esi,DWORD PTR [esp+0x2c]
  40169d:	je     0x4016a1
  40169f:	call   ebx
  4016a1:	cmp    edi,DWORD PTR [esp+0x30]
  4016a5:	je     0x40170b
  4016a7:	mov    eax,DWORD PTR [esp+0x1c]
  4016ab:	cmp    ebp,DWORD PTR [eax+0x4]
  4016ae:	je     0x40170b
  4016b0:	cmp    esi,0xfffffffc
  4016b3:	je     0x4016d5
  4016b5:	test   esi,esi
  4016b7:	jne    0x4016bb
  4016b9:	call   ebx
  4016bb:	cmp    DWORD PTR [esi+0x18],0x8
  4016bf:	jb     0x4016c6
  4016c1:	mov    eax,DWORD PTR [esi+0x4]
  4016c4:	jmp    0x4016c9
  4016c6:	lea    eax,[esi+0x4]
  4016c9:	mov    ecx,DWORD PTR [esi+0x14]
  4016cc:	lea    edx,[eax+ecx*2]
  4016cf:	cmp    edi,edx
  4016d1:	jb     0x4016d5
  4016d3:	call   ebx
  4016d5:	mov    ax,WORD PTR [edi]
  4016d8:	cmp    ax,WORD PTR [ebp+0x0]
  4016dc:	jne    0x40170b
  4016de:	cmp    esi,0xfffffffc
  4016e1:	je     0x401703
  4016e3:	test   esi,esi
  4016e5:	jne    0x4016e9
  4016e7:	call   ebx
  4016e9:	cmp    DWORD PTR [esi+0x18],0x8
  4016ed:	jb     0x4016f4
  4016ef:	mov    eax,DWORD PTR [esi+0x4]
  4016f2:	jmp    0x4016f7
  4016f4:	lea    eax,[esi+0x4]
  4016f7:	mov    ecx,DWORD PTR [esi+0x14]
  4016fa:	lea    edx,[eax+ecx*2]
  4016fd:	cmp    edi,edx
  4016ff:	jb     0x401703
  401701:	call   ebx
  401703:	add    edi,0x2
  401706:	add    ebp,0x2
  401709:	jmp    0x401690
  40170b:	mov    eax,DWORD PTR [esp+0x1c]
  40170f:	cmp    ebp,DWORD PTR [eax+0x4]
  401712:	je     0x401751
  401714:	mov    esi,DWORD PTR [esp+0x10]
  401718:	cmp    esi,0xfffffffc
  40171b:	je     0x40173f
  40171d:	test   esi,esi
  40171f:	jne    0x401723
  401721:	call   ebx
  401723:	cmp    DWORD PTR [esi+0x18],0x8
  401727:	jb     0x40172e
  401729:	mov    eax,DWORD PTR [esi+0x4]
  40172c:	jmp    0x401731
  40172e:	lea    eax,[esi+0x4]
  401731:	mov    ecx,DWORD PTR [esi+0x14]
  401734:	lea    edx,[eax+ecx*2]
  401737:	cmp    DWORD PTR [esp+0x14],edx
  40173b:	jb     0x40173f
  40173d:	call   ebx
  40173f:	add    DWORD PTR [esp+0x14],0x2
  401744:	mov    edi,DWORD PTR [esp+0x14]
  401748:	mov    esi,DWORD PTR [esp+0x10]
  40174c:	jmp    0x401660
  401751:	mov    eax,DWORD PTR [esp+0x20]
  401755:	mov    ecx,DWORD PTR [esp+0x10]
  401759:	mov    edx,DWORD PTR [esp+0x14]
  40175d:	mov    DWORD PTR [eax+0x8],esi
  401760:	mov    DWORD PTR [eax+0xc],edi
  401763:	mov    DWORD PTR [eax],ecx
  401765:	mov    DWORD PTR [eax+0x4],edx
  401768:	pop    edi
  401769:	pop    esi
  40176a:	pop    ebp
  40176b:	pop    ebx
  40176c:	add    esp,0x8
  40176f:	ret    0x18
  401772:	mov    eax,DWORD PTR [esp+0x20]
  401776:	mov    ecx,DWORD PTR [esp+0x2c]
  40177a:	pop    edi
  40177b:	pop    esi
  40177c:	pop    ebp
  40177d:	mov    DWORD PTR [eax+0xc],edx
  401780:	mov    DWORD PTR [eax+0x8],ecx
  401783:	mov    DWORD PTR [eax],ecx
  401785:	mov    DWORD PTR [eax+0x4],edx
  401788:	pop    ebx
  401789:	add    esp,0x8
  40178c:	ret    0x18
  40178f:	int3   
  401790:	sub    esp,0x10
  401793:	mov    ecx,DWORD PTR [esp+0x2c]
  401797:	push   ebx
  401798:	mov    ebx,DWORD PTR [esp+0x3c]
  40179c:	push   esi
  40179d:	mov    esi,DWORD PTR [esp+0x38]
  4017a1:	push   edi
  4017a2:	mov    edi,DWORD PTR [esp+0x40]
  4017a6:	mov    DWORD PTR [esp+0xc],ecx
  4017aa:	mov    DWORD PTR [esp+0x14],edi
  4017ae:	cmp    ecx,0xfffffffc
  4017b1:	je     0x4017c9
  4017b3:	test   ecx,ecx
  4017b5:	je     0x4017bb
  4017b7:	cmp    ecx,edi
  4017b9:	je     0x4017c9
  4017bb:	call   DWORD PTR ds:0x430390
  4017c1:	mov    edi,DWORD PTR [esp+0x40]
  4017c5:	mov    ecx,DWORD PTR [esp+0x38]
  4017c9:	cmp    esi,ebx
  4017cb:	je     0x401817
  4017cd:	mov    edx,DWORD PTR [esp+0x34]
  4017d1:	mov    esi,DWORD PTR [esp+0x30]
  4017d5:	push   edx
  4017d6:	push   esi
  4017d7:	sub    esp,0x10
  4017da:	mov    eax,esp
  4017dc:	mov    DWORD PTR [eax],ecx
  4017de:	mov    ecx,DWORD PTR [esp+0x54]
  4017e2:	mov    DWORD PTR [eax+0x4],ecx
  4017e5:	mov    ecx,DWORD PTR [esp+0x5c]
  4017e9:	push   edx
  4017ea:	mov    edx,DWORD PTR [esp+0x40]
  4017ee:	mov    DWORD PTR [eax+0x8],edi
  4017f1:	mov    DWORD PTR [eax+0xc],ecx
  4017f4:	mov    ecx,DWORD PTR [esp+0x44]
  4017f8:	push   esi
  4017f9:	sub    esp,0xc
  4017fc:	mov    eax,esp
  4017fe:	mov    DWORD PTR [eax],edx
  401800:	mov    edx,DWORD PTR [esp+0x58]
  401804:	mov    DWORD PTR [eax+0x4],ecx
  401807:	mov    DWORD PTR [eax+0x8],edx
  40180a:	mov    eax,DWORD PTR [esp+0x4c]
  40180e:	push   eax
  40180f:	call   0x401820
  401814:	add    esp,0x30
  401817:	pop    edi
  401818:	pop    esi
  401819:	pop    ebx
  40181a:	add    esp,0x10
  40181d:	ret    
  40181e:	int3   
  40181f:	int3   
  401820:	push   0xffffffff
  401822:	push   0x42cca2
  401827:	mov    eax,fs:0x0
  40182d:	push   eax
  40182e:	sub    esp,0x6c
  401831:	push   ebx
  401832:	push   ebp
  401833:	push   esi
  401834:	push   edi
  401835:	mov    eax,ds:0x43e020
  40183a:	xor    eax,esp
  40183c:	push   eax
  40183d:	lea    eax,[esp+0x80]
  401844:	mov    fs:0x0,eax
  40184a:	mov    ebx,DWORD PTR [esp+0x90]
  401851:	mov    eax,DWORD PTR [esp+0xb0]
  401858:	mov    ecx,DWORD PTR [esp+0xb8]
  40185f:	mov    edx,DWORD PTR [esp+0xbc]
  401866:	mov    ebp,DWORD PTR [esp+0xa8]
  40186d:	mov    edi,DWORD PTR [esp+0xac]
  401874:	mov    esi,DWORD PTR [esp+0xb4]
  40187b:	push   0x4
  40187d:	mov    DWORD PTR [esp+0x50],eax
  401881:	mov    DWORD PTR [esp+0x58],ecx
  401885:	mov    DWORD PTR [esp+0x5c],edx
  401889:	call   0x425050
  40188e:	xor    ecx,ecx
  401890:	add    esp,0x4
  401893:	cmp    eax,ecx
  401895:	je     0x40189f
  401897:	lea    edx,[esp+0x60]
  40189b:	mov    DWORD PTR [eax],edx
  40189d:	jmp    0x4018a1
  40189f:	xor    eax,eax
  4018a1:	mov    DWORD PTR [esp+0x60],eax
  4018a5:	mov    DWORD PTR [esp+0x70],ecx
  4018a9:	mov    DWORD PTR [esp+0x74],ecx
  4018ad:	mov    DWORD PTR [esp+0x78],ecx
  4018b1:	mov    DWORD PTR [esp+0x7c],ecx
  4018b5:	lea    eax,[esp+0x1c]
  4018b9:	mov    DWORD PTR [esp+0x88],ecx
  4018c0:	push   eax
  4018c1:	mov    ecx,ebx
  4018c3:	call   DWORD PTR ds:0x430128
  4018c9:	lea    ecx,[esp+0x24]
  4018cd:	push   ecx
  4018ce:	mov    ecx,ebx
  4018d0:	call   DWORD PTR ds:0x430128
  4018d6:	cmp    ebp,0xfffffffc
  4018d9:	je     0x4018eb
  4018db:	test   ebp,ebp
  4018dd:	je     0x4018e5
  4018df:	cmp    ebp,DWORD PTR [esp+0x4c]
  4018e3:	je     0x4018eb
  4018e5:	call   DWORD PTR ds:0x430390
  4018eb:	cmp    edi,esi
  4018ed:	je     0x4019f4
  4018f3:	mov    edx,DWORD PTR [esp+0x28]
  4018f7:	mov    eax,DWORD PTR [esp+0x24]
  4018fb:	mov    ecx,DWORD PTR [esp+0x20]
  4018ff:	push   edi
  401900:	push   ebp
  401901:	push   edx
  401902:	mov    edx,DWORD PTR [esp+0x28]
  401906:	push   eax
  401907:	push   ecx
  401908:	push   edx
  401909:	lea    eax,[esp+0x2c]
  40190d:	push   eax
  40190e:	lea    eax,[esp+0x7c]
  401912:	call   0x401c30
  401917:	mov    ecx,DWORD PTR [esp+0x14]
  40191b:	mov    eax,DWORD PTR [esp+0x4c]
  40191f:	mov    edx,DWORD PTR [esp+0x18]
  401923:	mov    DWORD PTR [esp+0x1c],ecx
  401927:	mov    ecx,DWORD PTR [esp+0x7c]
  40192b:	mov    DWORD PTR [esp+0x24],eax
  40192f:	mov    eax,DWORD PTR [esp+0x78]
  401933:	lea    edi,[ecx+eax*1]
  401936:	mov    DWORD PTR [esp+0x20],edx
  40193a:	mov    DWORD PTR [esp+0x28],esi
  40193e:	cmp    eax,edi
  401940:	jbe    0x401948
  401942:	call   DWORD PTR ds:0x430390
  401948:	mov    eax,DWORD PTR [esp+0x60]
  40194c:	mov    edx,DWORD PTR [esp+0xb8]
  401953:	push   edi
  401954:	push   eax
  401955:	mov    eax,DWORD PTR [esp+0x60]
  401959:	push   edx
  40195a:	push   eax
  40195b:	lea    ecx,[esp+0x70]
  40195f:	push   ecx
  401960:	mov    ecx,DWORD PTR [esp+0x68]
  401964:	call   0x4022e0
  401969:	lea    edx,[esp+0x2c]
  40196d:	push   edx
  40196e:	mov    ecx,ebx
  401970:	call   DWORD PTR ds:0x430124
  401976:	mov    eax,DWORD PTR [esp+0x30]
  40197a:	mov    ecx,DWORD PTR [esp+0x2c]
  40197e:	mov    edx,DWORD PTR [esp+0x28]
  401982:	push   eax
  401983:	mov    eax,DWORD PTR [esp+0x28]
  401987:	push   ecx
  401988:	push   edx
  401989:	push   eax
  40198a:	lea    ecx,[esp+0x44]
  40198e:	push   ecx
  40198f:	lea    edx,[esp+0xa8]
  401996:	push   edx
  401997:	call   0x401640
  40199c:	mov    ecx,DWORD PTR [eax]
  40199e:	mov    ebx,DWORD PTR [eax+0xc]
  4019a1:	mov    edx,DWORD PTR [eax+0x8]
  4019a4:	mov    edi,DWORD PTR [eax+0x4]
  4019a7:	mov    esi,ebx
  4019a9:	mov    ebp,ecx
  4019ab:	mov    DWORD PTR [esp+0x4c],edx
  4019af:	mov    DWORD PTR [esp+0x50],esi
  4019b3:	cmp    ecx,0xfffffffc
  4019b6:	je     0x4019ca
  4019b8:	test   ecx,ecx
  4019ba:	je     0x4019c0
  4019bc:	cmp    ecx,edx
  4019be:	je     0x4019ca
  4019c0:	call   DWORD PTR ds:0x430390
  4019c6:	mov    esi,DWORD PTR [esp+0x50]
  4019ca:	cmp    edi,ebx
  4019cc:	mov    ebx,DWORD PTR [esp+0x90]
  4019d3:	je     0x4018d6
  4019d9:	mov    eax,DWORD PTR [esp+0xa0]
  4019e0:	mov    ecx,DWORD PTR [esp+0xa4]
  4019e7:	mov    DWORD PTR [esp+0x54],eax
  4019eb:	mov    DWORD PTR [esp+0x58],ecx
  4019ef:	jmp    0x4018d6
  4019f4:	lea    edx,[esp+0x2c]
  4019f8:	push   edx
  4019f9:	mov    ecx,ebx
  4019fb:	call   DWORD PTR ds:0x430124
  401a01:	mov    eax,DWORD PTR [esp+0x30]
  401a05:	mov    ecx,DWORD PTR [esp+0x2c]
  401a09:	mov    edx,DWORD PTR [esp+0x28]
  401a0d:	push   eax
  401a0e:	mov    eax,DWORD PTR [esp+0x28]
  401a12:	push   ecx
  401a13:	mov    ecx,DWORD PTR [esp+0x28]
  401a17:	push   edx
  401a18:	mov    edx,DWORD PTR [esp+0x28]
  401a1c:	push   eax
  401a1d:	push   ecx
  401a1e:	push   edx
  401a1f:	lea    eax,[esp+0x2c]
  401a23:	push   eax
  401a24:	lea    eax,[esp+0x7c]
  401a28:	call   0x401c30
  401a2d:	mov    ecx,DWORD PTR [esp+0x14]
  401a31:	mov    edx,DWORD PTR [esp+0x18]
  401a35:	mov    DWORD PTR [esp+0x1c],ecx
  401a39:	mov    ecx,DWORD PTR [esp+0x7c]
  401a3d:	mov    DWORD PTR [esp+0x20],edx
  401a41:	test   ecx,ecx
  401a43:	jne    0x401a75
  401a45:	lea    eax,[esp+0x2c]
  401a49:	push   eax
  401a4a:	mov    ecx,ebx
  401a4c:	call   DWORD PTR ds:0x430124
  401a52:	mov    ecx,DWORD PTR [esp+0x30]
  401a56:	mov    edx,DWORD PTR [esp+0x2c]
  401a5a:	mov    eax,DWORD PTR [esp+0x20]
  401a5e:	push   ecx
  401a5f:	mov    ecx,DWORD PTR [esp+0x20]
  401a63:	push   edx
  401a64:	push   eax
  401a65:	push   ecx
  401a66:	lea    edx,[esp+0x24]
  401a6a:	push   edx
  401a6b:	mov    ecx,ebx
  401a6d:	call   DWORD PTR ds:0x43013c
  401a73:	jmp    0x401ad8
  401a75:	mov    eax,DWORD PTR [esp+0x78]
  401a79:	lea    edx,[ecx+eax*1]
  401a7c:	mov    DWORD PTR [esp+0x14],edx
  401a80:	cmp    eax,edx
  401a82:	jbe    0x401a92
  401a84:	call   DWORD PTR ds:0x430390
  401a8a:	mov    ecx,DWORD PTR [esp+0x7c]
  401a8e:	mov    eax,DWORD PTR [esp+0x78]
  401a92:	mov    edi,DWORD PTR [esp+0x60]
  401a96:	add    ecx,eax
  401a98:	mov    ebp,eax
  401a9a:	cmp    eax,ecx
  401a9c:	jbe    0x401aa4
  401a9e:	call   DWORD PTR ds:0x430390
  401aa4:	mov    esi,DWORD PTR [esp+0x60]
  401aa8:	lea    eax,[esp+0x2c]
  401aac:	push   eax
  401aad:	mov    ecx,ebx
  401aaf:	call   DWORD PTR ds:0x430124
  401ab5:	mov    ecx,DWORD PTR [esp+0x14]
  401ab9:	mov    eax,DWORD PTR [esp+0x30]
  401abd:	mov    edx,DWORD PTR [esp+0xb8]
  401ac4:	push   ecx
  401ac5:	mov    ecx,DWORD PTR [esp+0x30]
  401ac9:	push   edi
  401aca:	push   ebp
  401acb:	push   esi
  401acc:	push   eax
  401acd:	push   ecx
  401ace:	push   eax
  401acf:	push   ecx
  401ad0:	push   edx
  401ad1:	mov    esi,ebx
  401ad3:	call   0x402670
  401ad8:	lea    esi,[esp+0x60]
  401adc:	mov    DWORD PTR [esp+0x88],0x1
  401ae7:	call   0x401b60
  401aec:	mov    eax,DWORD PTR [esp+0x60]
  401af0:	push   eax
  401af1:	call   0x42504a
  401af6:	add    esp,0x4
  401af9:	mov    ecx,DWORD PTR [esp+0x80]
  401b00:	mov    DWORD PTR fs:0x0,ecx
  401b07:	pop    ecx
  401b08:	pop    edi
  401b09:	pop    esi
  401b0a:	pop    ebp
  401b0b:	pop    ebx
  401b0c:	add    esp,0x78
  401b0f:	ret    
  401b10:	push   0xffffffff
  401b12:	push   0x42b4e8
  401b17:	mov    eax,fs:0x0
  401b1d:	push   eax
  401b1e:	push   esi
  401b1f:	mov    eax,ds:0x43e020
  401b24:	xor    eax,esp
  401b26:	push   eax
  401b27:	lea    eax,[esp+0x8]
  401b2b:	mov    fs:0x0,eax
  401b31:	mov    esi,DWORD PTR [esp+0x18]
  401b35:	mov    DWORD PTR [esp+0x10],0x0
  401b3d:	call   0x401b60
  401b42:	mov    eax,DWORD PTR [esi]
  401b44:	push   eax
  401b45:	call   0x42504a
  401b4a:	add    esp,0x4
  401b4d:	mov    ecx,DWORD PTR [esp+0x8]
  401b51:	mov    DWORD PTR fs:0x0,ecx
  401b58:	pop    ecx
  401b59:	pop    esi
  401b5a:	add    esp,0xc
  401b5d:	ret    0x4
  401b60:	push   ebx
  401b61:	xor    ebx,ebx
  401b63:	push   edi
  401b64:	cmp    DWORD PTR [esi+0x1c],ebx
  401b67:	je     0x401baf
  401b69:	or     edi,0xffffffff
  401b6c:	lea    esp,[esp+0x0]
  401b70:	mov    eax,DWORD PTR [esi+0x1c]
  401b73:	cmp    eax,ebx
  401b75:	je     0x401baa
  401b77:	mov    ecx,DWORD PTR [esi+0x18]
  401b7a:	mov    edx,DWORD PTR [esi+0x14]
  401b7d:	lea    ecx,[eax+ecx*1-0x1]
  401b81:	mov    eax,ecx
  401b83:	shr    eax,0x3
  401b86:	cmp    edx,eax
  401b88:	ja     0x401b8c
  401b8a:	sub    eax,edx
  401b8c:	mov    edx,DWORD PTR [esi+0x10]
  401b8f:	mov    eax,DWORD PTR [edx+eax*4]
  401b92:	and    ecx,0x7
  401b95:	lea    ecx,[eax+ecx*2]
  401b98:	push   ecx
  401b99:	lea    ecx,[esi+0xc]
  401b9c:	call   DWORD PTR ds:0x430138
  401ba2:	add    DWORD PTR [esi+0x1c],edi
  401ba5:	jne    0x401baa
  401ba7:	mov    DWORD PTR [esi+0x18],ebx
  401baa:	cmp    DWORD PTR [esi+0x1c],ebx
  401bad:	jne    0x401b70
  401baf:	mov    edi,DWORD PTR [esi+0x14]
  401bb2:	cmp    edi,ebx
  401bb4:	jbe    0x401bd4
  401bb6:	mov    edx,DWORD PTR [esi+0x10]
  401bb9:	dec    edi
  401bba:	cmp    DWORD PTR [edx+edi*4],ebx
  401bbd:	lea    eax,[edx+edi*4]
  401bc0:	je     0x401bd0
  401bc2:	mov    eax,DWORD PTR [eax]
  401bc4:	push   0x8
  401bc6:	push   eax
  401bc7:	lea    ecx,[esi+0xc]
  401bca:	call   DWORD PTR ds:0x43024c
  401bd0:	cmp    edi,ebx
  401bd2:	ja     0x401bb6
  401bd4:	mov    eax,DWORD PTR [esi+0x10]
  401bd7:	cmp    eax,ebx
  401bd9:	je     0x401be4
  401bdb:	push   eax
  401bdc:	call   0x42504a
  401be1:	add    esp,0x4
  401be4:	pop    edi
  401be5:	mov    DWORD PTR [esi+0x10],ebx
  401be8:	mov    DWORD PTR [esi+0x14],ebx
  401beb:	pop    ebx
  401bec:	ret    
  401bed:	int3   
  401bee:	int3   
  401bef:	int3   
  401bf0:	mov    eax,DWORD PTR [esi+0x1c]
  401bf3:	test   eax,eax
  401bf5:	je     0x401c2f
  401bf7:	mov    ecx,DWORD PTR [esi+0x18]
  401bfa:	mov    edx,DWORD PTR [esi+0x14]
  401bfd:	lea    ecx,[eax+ecx*1-0x1]
  401c01:	mov    eax,ecx
  401c03:	shr    eax,0x3
  401c06:	cmp    edx,eax
  401c08:	ja     0x401c0c
  401c0a:	sub    eax,edx
  401c0c:	mov    edx,DWORD PTR [esi+0x10]
  401c0f:	mov    eax,DWORD PTR [edx+eax*4]
  401c12:	and    ecx,0x7
  401c15:	lea    ecx,[eax+ecx*2]
  401c18:	push   ecx
  401c19:	lea    ecx,[esi+0xc]
  401c1c:	call   DWORD PTR ds:0x430138
  401c22:	add    DWORD PTR [esi+0x1c],0xffffffff
  401c26:	jne    0x401c2f
  401c28:	mov    DWORD PTR [esi+0x18],0x0
  401c2f:	ret    
  401c30:	mov    ecx,DWORD PTR [esp+0x10]
  401c34:	mov    edx,DWORD PTR [esp+0xc]
  401c38:	sub    esp,0x8
  401c3b:	push   ebx
  401c3c:	push   ebp
  401c3d:	push   esi
  401c3e:	push   edi
  401c3f:	mov    esi,eax
  401c41:	mov    eax,DWORD PTR [esp+0x2c]
  401c45:	push   eax
  401c46:	mov    eax,DWORD PTR [esp+0x24]
  401c4a:	push   ecx
  401c4b:	push   edx
  401c4c:	push   eax
  401c4d:	lea    edi,[esp+0x20]
  401c51:	call   0x4021b0
  401c56:	add    esp,0x10
  401c59:	cmp    DWORD PTR [esi+0x1c],0x0
  401c5d:	jne    0x401cd1
  401c5f:	mov    esi,DWORD PTR [esp+0x10]
  401c63:	cmp    esi,0xfffffffc
  401c66:	je     0x401c78
  401c68:	test   esi,esi
  401c6a:	je     0x401c72
  401c6c:	cmp    esi,DWORD PTR [esp+0x28]
  401c70:	je     0x401c78
  401c72:	call   DWORD PTR ds:0x430390
  401c78:	mov    eax,DWORD PTR [esp+0x14]
  401c7c:	mov    ebx,DWORD PTR [esp+0x2c]
  401c80:	cmp    eax,ebx
  401c82:	jne    0x401c9f
  401c84:	mov    eax,DWORD PTR [esp+0x1c]
  401c88:	mov    ecx,DWORD PTR [esp+0x30]
  401c8c:	mov    edx,DWORD PTR [esp+0x34]
  401c90:	mov    DWORD PTR [eax],ecx
  401c92:	mov    DWORD PTR [eax+0x4],edx
  401c95:	pop    edi
  401c96:	pop    esi
  401c97:	pop    ebp
  401c98:	pop    ebx
  401c99:	add    esp,0x8
  401c9c:	ret    0x1c
  401c9f:	mov    ecx,DWORD PTR [esp+0x1c]
  401ca3:	mov    edx,DWORD PTR [esp+0x1c]
  401ca7:	mov    edi,DWORD PTR [esp+0x1c]
  401cab:	push   eax
  401cac:	push   esi
  401cad:	mov    BYTE PTR [esp+0x18],0x0
  401cb2:	mov    eax,DWORD PTR [esp+0x18]
  401cb6:	push   eax
  401cb7:	mov    eax,DWORD PTR [esp+0x40]
  401cbb:	push   ecx
  401cbc:	push   edx
  401cbd:	call   0x4025e0
  401cc2:	add    esp,0x14
  401cc5:	mov    eax,edi
  401cc7:	pop    edi
  401cc8:	pop    esi
  401cc9:	pop    ebp
  401cca:	pop    ebx
  401ccb:	add    esp,0x8
  401cce:	ret    0x1c
  401cd1:	mov    edi,DWORD PTR [esp+0x10]
  401cd5:	mov    ebp,DWORD PTR [esp+0x14]
  401cd9:	lea    esp,[esp+0x0]
  401ce0:	cmp    edi,0xfffffffc
  401ce3:	je     0x401cf5
  401ce5:	test   edi,edi
  401ce7:	je     0x401cef
  401ce9:	cmp    edi,DWORD PTR [esp+0x30]
  401ced:	je     0x401cf5
  401cef:	call   DWORD PTR ds:0x430390
  401cf5:	cmp    ebp,DWORD PTR [esp+0x34]
  401cf9:	je     0x401e0f
  401cff:	cmp    edi,0xfffffffc
  401d02:	je     0x401d2c
  401d04:	test   edi,edi
  401d06:	jne    0x401d0e
  401d08:	call   DWORD PTR ds:0x430390
  401d0e:	cmp    DWORD PTR [edi+0x18],0x8
  401d12:	jb     0x401d19
  401d14:	mov    eax,DWORD PTR [edi+0x4]
  401d17:	jmp    0x401d1c
  401d19:	lea    eax,[edi+0x4]
  401d1c:	mov    ecx,DWORD PTR [edi+0x14]
  401d1f:	lea    edx,[eax+ecx*2]
  401d22:	cmp    ebp,edx
  401d24:	jb     0x401d2c
  401d26:	call   DWORD PTR ds:0x430390
  401d2c:	push   ebp
  401d2d:	mov    eax,esi
  401d2f:	call   0x401e80
  401d34:	mov    ebx,DWORD PTR [esi+0x18]
  401d37:	mov    eax,DWORD PTR [esi+0x1c]
  401d3a:	add    eax,ebx
  401d3c:	cmp    ebx,eax
  401d3e:	jbe    0x401d46
  401d40:	call   DWORD PTR ds:0x430390
  401d46:	mov    ecx,DWORD PTR [esi]
  401d48:	lea    eax,[esp+0x10]
  401d4c:	mov    DWORD PTR [esp+0x10],ecx
  401d50:	mov    DWORD PTR [esp+0x14],ebx
  401d54:	call   0x402120
  401d59:	mov    ebx,eax
  401d5b:	cmp    edi,0xfffffffc
  401d5e:	je     0x401d88
  401d60:	test   edi,edi
  401d62:	jne    0x401d6a
  401d64:	call   DWORD PTR ds:0x430390
  401d6a:	cmp    DWORD PTR [edi+0x18],0x8
  401d6e:	jb     0x401d75
  401d70:	mov    eax,DWORD PTR [edi+0x4]
  401d73:	jmp    0x401d78
  401d75:	lea    eax,[edi+0x4]
  401d78:	mov    edx,DWORD PTR [edi+0x14]
  401d7b:	lea    eax,[eax+edx*2]
  401d7e:	cmp    ebp,eax
  401d80:	jb     0x401d88
  401d82:	call   DWORD PTR ds:0x430390
  401d88:	mov    cx,WORD PTR [ebx]
  401d8b:	mov    WORD PTR [ebp+0x0],cx
  401d8f:	cmp    DWORD PTR [esi+0x1c],0x0
  401d93:	je     0x401dda
  401d95:	mov    eax,DWORD PTR [esi+0x18]
  401d98:	mov    ecx,DWORD PTR [esi+0x10]
  401d9b:	mov    edx,eax
  401d9d:	shr    edx,0x3
  401da0:	mov    edx,DWORD PTR [ecx+edx*4]
  401da3:	and    eax,0x7
  401da6:	lea    eax,[edx+eax*2]
  401da9:	push   eax
  401daa:	lea    ecx,[esi+0xc]
  401dad:	call   DWORD PTR ds:0x430138
  401db3:	mov    ecx,DWORD PTR [esi+0x14]
  401db6:	inc    DWORD PTR [esi+0x18]
  401db9:	mov    eax,DWORD PTR [esi+0x18]
  401dbc:	add    ecx,ecx
  401dbe:	add    ecx,ecx
  401dc0:	add    ecx,ecx
  401dc2:	cmp    ecx,eax
  401dc4:	ja     0x401dcd
  401dc6:	mov    DWORD PTR [esi+0x18],0x0
  401dcd:	add    DWORD PTR [esi+0x1c],0xffffffff
  401dd1:	jne    0x401dda
  401dd3:	mov    DWORD PTR [esi+0x18],0x0
  401dda:	cmp    edi,0xfffffffc
  401ddd:	je     0x401e07
  401ddf:	test   edi,edi
  401de1:	jne    0x401de9
  401de3:	call   DWORD PTR ds:0x430390
  401de9:	cmp    DWORD PTR [edi+0x18],0x8
  401ded:	jb     0x401df4
  401def:	mov    eax,DWORD PTR [edi+0x4]
  401df2:	jmp    0x401df7
  401df4:	lea    eax,[edi+0x4]
  401df7:	mov    edx,DWORD PTR [edi+0x14]
  401dfa:	lea    eax,[eax+edx*2]
  401dfd:	cmp    ebp,eax
  401dff:	jb     0x401e07
  401e01:	call   DWORD PTR ds:0x430390
  401e07:	add    ebp,0x2
  401e0a:	jmp    0x401ce0
  401e0f:	mov    eax,DWORD PTR [esp+0x1c]
  401e13:	mov    DWORD PTR [eax],edi
  401e15:	pop    edi
  401e16:	pop    esi
  401e17:	mov    DWORD PTR [eax+0x4],ebp
  401e1a:	pop    ebp
  401e1b:	pop    ebx
  401e1c:	add    esp,0x8
  401e1f:	ret    0x1c
  401e22:	int3   
  401e23:	int3   
  401e24:	int3   
  401e25:	int3   
  401e26:	int3   
  401e27:	int3   
  401e28:	int3   
  401e29:	int3   
  401e2a:	int3   
  401e2b:	int3   
  401e2c:	int3   
  401e2d:	int3   
  401e2e:	int3   
  401e2f:	int3   
  401e30:	cmp    DWORD PTR [esi+0x1c],0x0
  401e34:	je     0x401e7b
  401e36:	mov    eax,DWORD PTR [esi+0x18]
  401e39:	mov    edx,DWORD PTR [esi+0x10]
  401e3c:	mov    ecx,eax
  401e3e:	shr    ecx,0x3
  401e41:	mov    ecx,DWORD PTR [edx+ecx*4]
  401e44:	and    eax,0x7
  401e47:	lea    edx,[ecx+eax*2]
  401e4a:	push   edx
  401e4b:	lea    ecx,[esi+0xc]
  401e4e:	call   DWORD PTR ds:0x430138
  401e54:	mov    ecx,DWORD PTR [esi+0x14]
  401e57:	inc    DWORD PTR [esi+0x18]
  401e5a:	mov    eax,DWORD PTR [esi+0x18]
  401e5d:	add    ecx,ecx
  401e5f:	add    ecx,ecx
  401e61:	add    ecx,ecx
  401e63:	cmp    ecx,eax
  401e65:	ja     0x401e6e
  401e67:	mov    DWORD PTR [esi+0x18],0x0
  401e6e:	add    DWORD PTR [esi+0x1c],0xffffffff
  401e72:	jne    0x401e7b
  401e74:	mov    DWORD PTR [esi+0x18],0x0
  401e7b:	ret    
  401e7c:	int3   
  401e7d:	int3   
  401e7e:	int3   
  401e7f:	int3   
  401e80:	push   ecx
  401e81:	push   ebx
  401e82:	mov    ebx,eax
  401e84:	mov    eax,DWORD PTR [ebx+0x1c]
  401e87:	mov    ecx,DWORD PTR [ebx+0x18]
  401e8a:	add    ecx,eax
  401e8c:	push   esi
  401e8d:	push   edi
  401e8e:	test   cl,0x7
  401e91:	jne    0x401ea3
  401e93:	add    eax,0x8
  401e96:	shr    eax,0x3
  401e99:	cmp    DWORD PTR [ebx+0x14],eax
  401e9c:	ja     0x401ea3
  401e9e:	call   0x401f00
  401ea3:	mov    esi,DWORD PTR [ebx+0x18]
  401ea6:	add    esi,DWORD PTR [ebx+0x1c]
  401ea9:	mov    eax,DWORD PTR [ebx+0x14]
  401eac:	mov    edi,esi
  401eae:	shr    edi,0x3
  401eb1:	cmp    eax,edi
  401eb3:	ja     0x401eb7
  401eb5:	sub    edi,eax
  401eb7:	mov    edx,DWORD PTR [ebx+0x10]
  401eba:	cmp    DWORD PTR [edx+edi*4],0x0
  401ebe:	jne    0x401ed1
  401ec0:	push   0x8
  401ec2:	lea    ecx,[ebx+0xc]
  401ec5:	call   DWORD PTR ds:0x430114
  401ecb:	mov    ecx,DWORD PTR [ebx+0x10]
  401ece:	mov    DWORD PTR [ecx+edi*4],eax
  401ed1:	mov    eax,DWORD PTR [ebx+0x10]
  401ed4:	mov    edx,DWORD PTR [esp+0x14]
  401ed8:	mov    ecx,DWORD PTR [eax+edi*4]
  401edb:	push   edx
  401edc:	and    esi,0x7
  401edf:	lea    edx,[ecx+esi*2]
  401ee2:	push   edx
  401ee3:	lea    ecx,[ebx+0xc]
  401ee6:	call   DWORD PTR ds:0x430134
  401eec:	inc    DWORD PTR [ebx+0x1c]
  401eef:	pop    edi
  401ef0:	pop    esi
  401ef1:	pop    ebx
  401ef2:	pop    ecx
  401ef3:	ret    0x4
  401ef6:	int3   
  401ef7:	int3   
  401ef8:	int3   
  401ef9:	int3   
  401efa:	int3   
  401efb:	int3   
  401efc:	int3   
  401efd:	int3   
  401efe:	int3   
  401eff:	int3   
  401f00:	sub    esp,0x8
  401f03:	mov    eax,DWORD PTR [ebx+0x14]
  401f06:	push   ebp
  401f07:	mov    ecx,0xfffffff
  401f0c:	sub    ecx,eax
  401f0e:	push   esi
  401f0f:	push   edi
  401f10:	mov    DWORD PTR [esp+0xc],0x1
  401f18:	cmp    ecx,0x1
  401f1b:	jae    0x401f22
  401f1d:	call   0x402060
  401f22:	mov    ecx,eax
  401f24:	shr    ecx,1
  401f26:	cmp    ecx,0x8
  401f29:	jae    0x401f32
  401f2b:	mov    ecx,0x8
  401f30:	jmp    0x401f37
  401f32:	cmp    ecx,0x1
  401f35:	jbe    0x401f46
  401f37:	mov    edx,0xfffffff
  401f3c:	sub    edx,ecx
  401f3e:	cmp    eax,edx
  401f40:	ja     0x401f46
  401f42:	mov    DWORD PTR [esp+0xc],ecx
  401f46:	mov    ebp,DWORD PTR [ebx+0x18]
  401f49:	mov    ecx,DWORD PTR [esp+0xc]
  401f4d:	add    ecx,eax
  401f4f:	shr    ebp,0x3
  401f52:	call   0x4020c0
  401f57:	mov    ecx,DWORD PTR [ebx+0x10]
  401f5a:	mov    DWORD PTR [esp+0x10],eax
  401f5e:	lea    esi,[ebp*4+0x0]
  401f65:	lea    edi,[esi+eax*1]
  401f68:	mov    eax,DWORD PTR [ebx+0x14]
  401f6b:	add    eax,eax
  401f6d:	add    eax,eax
  401f6f:	lea    edx,[esi+ecx*1]
  401f72:	sub    eax,edx
  401f74:	add    eax,ecx
  401f76:	sar    eax,0x2
  401f79:	lea    ecx,[eax*4+0x0]
  401f80:	add    edi,ecx
  401f82:	test   eax,eax
  401f84:	jbe    0x401f9a
  401f86:	push   ecx
  401f87:	push   edx
  401f88:	mov    edx,DWORD PTR [esp+0x18]
  401f8c:	push   ecx
  401f8d:	lea    eax,[esi+edx*1]
  401f90:	push   eax
  401f91:	call   DWORD PTR ds:0x430394
  401f97:	add    esp,0x10
  401f9a:	mov    eax,DWORD PTR [esp+0xc]
  401f9e:	cmp    ebp,eax
  401fa0:	ja     0x401fdf
  401fa2:	mov    eax,DWORD PTR [ebx+0x10]
  401fa5:	sar    esi,0x2
  401fa8:	mov    ecx,esi
  401faa:	lea    edx,[ecx*4+0x0]
  401fb1:	lea    esi,[edx+edi*1]
  401fb4:	test   ecx,ecx
  401fb6:	jbe    0x401fc5
  401fb8:	push   edx
  401fb9:	push   eax
  401fba:	push   edx
  401fbb:	push   edi
  401fbc:	call   DWORD PTR ds:0x430394
  401fc2:	add    esp,0x10
  401fc5:	mov    ecx,DWORD PTR [esp+0xc]
  401fc9:	sub    ecx,ebp
  401fcb:	je     0x401fd3
  401fcd:	xor    eax,eax
  401fcf:	mov    edi,esi
  401fd1:	rep stos DWORD PTR es:[edi],eax
  401fd3:	test   ebp,ebp
  401fd5:	jbe    0x40203b
  401fd7:	mov    edi,DWORD PTR [esp+0x10]
  401fdb:	mov    ecx,ebp
  401fdd:	jmp    0x402037
  401fdf:	mov    ecx,DWORD PTR [ebx+0x10]
  401fe2:	lea    ebp,[eax*4+0x0]
  401fe9:	mov    eax,ebp
  401feb:	sar    eax,0x2
  401fee:	test   eax,eax
  401ff0:	jbe    0x402003
  401ff2:	add    eax,eax
  401ff4:	add    eax,eax
  401ff6:	push   eax
  401ff7:	push   ecx
  401ff8:	push   eax
  401ff9:	push   edi
  401ffa:	call   DWORD PTR ds:0x430394
  402000:	add    esp,0x10
  402003:	mov    eax,DWORD PTR [ebx+0x10]
  402006:	mov    edx,DWORD PTR [esp+0x10]
  40200a:	lea    ecx,[eax+ebp*1]
  40200d:	sub    esi,ecx
  40200f:	add    esi,eax
  402011:	sar    esi,0x2
  402014:	lea    eax,[esi*4+0x0]
  40201b:	lea    edi,[eax+edx*1]
  40201e:	test   esi,esi
  402020:	jbe    0x40202f
  402022:	push   eax
  402023:	push   ecx
  402024:	push   eax
  402025:	push   edx
  402026:	call   DWORD PTR ds:0x430394
  40202c:	add    esp,0x10
  40202f:	mov    ecx,DWORD PTR [esp+0xc]
  402033:	test   ecx,ecx
  402035:	jbe    0x40203b
  402037:	xor    eax,eax
  402039:	rep stos DWORD PTR es:[edi],eax
  40203b:	mov    eax,DWORD PTR [ebx+0x10]
  40203e:	test   eax,eax
  402040:	je     0x40204b
  402042:	push   eax
  402043:	call   0x42504a
  402048:	add    esp,0x4
  40204b:	mov    eax,DWORD PTR [esp+0x10]
  40204f:	mov    ecx,DWORD PTR [esp+0xc]
  402053:	add    DWORD PTR [ebx+0x14],ecx
  402056:	pop    edi
  402057:	pop    esi
  402058:	mov    DWORD PTR [ebx+0x10],eax
  40205b:	pop    ebp
  40205c:	add    esp,0x8
  40205f:	ret    
  402060:	push   0xffffffff
  402062:	push   0x42beb9
  402067:	mov    eax,fs:0x0
  40206d:	push   eax
  40206e:	sub    esp,0x44
  402071:	mov    eax,ds:0x43e020
  402076:	xor    eax,esp
  402078:	push   eax
  402079:	lea    eax,[esp+0x48]
  40207d:	mov    fs:0x0,eax
  402083:	push   0x430b44
  402088:	lea    ecx,[esp+0x8]
  40208c:	call   DWORD PTR ds:0x43011c
  402092:	lea    eax,[esp+0x4]
  402096:	push   eax
  402097:	lea    ecx,[esp+0x24]
  40209b:	mov    DWORD PTR [esp+0x54],0x0
  4020a3:	call   0x402940
  4020a8:	push   0x435684
  4020ad:	lea    ecx,[esp+0x24]
  4020b1:	push   ecx
  4020b2:	mov    DWORD PTR [esp+0x28],0x430604
  4020ba:	call   0x429e76
  4020bf:	int3   
  4020c0:	sub    esp,0x10
  4020c3:	test   ecx,ecx
  4020c5:	ja     0x4020dd
  4020c7:	xor    ecx,ecx
  4020c9:	lea    edx,[ecx*4+0x0]
  4020d0:	push   edx
  4020d1:	call   0x425050
  4020d6:	add    esp,0x4
  4020d9:	add    esp,0x10
  4020dc:	ret    
  4020dd:	or     eax,0xffffffff
  4020e0:	xor    edx,edx
  4020e2:	div    ecx
  4020e4:	cmp    eax,0x4
  4020e7:	jae    0x4020c9
  4020e9:	lea    eax,[esp]
  4020ec:	push   eax
  4020ed:	lea    ecx,[esp+0x8]
  4020f1:	mov    DWORD PTR [esp+0x4],0x0
  4020f9:	call   DWORD PTR ds:0x430398
  4020ff:	push   0x4356bc
  402104:	lea    ecx,[esp+0x8]
  402108:	push   ecx
  402109:	mov    DWORD PTR [esp+0xc],0x4305ec
  402111:	call   0x429e76
  402116:	int3   
  402117:	int3   
  402118:	int3   
  402119:	int3   
  40211a:	int3   
  40211b:	int3   
  40211c:	int3   
  40211d:	int3   
  40211e:	int3   
  40211f:	int3   
  402120:	push   ebx
  402121:	mov    ebx,DWORD PTR ds:0x430390
  402127:	push   ebp
  402128:	push   esi
  402129:	mov    esi,eax
  40212b:	mov    eax,DWORD PTR [esi+0x4]
  40212e:	push   edi
  40212f:	mov    edi,eax
  402131:	and    eax,0x7
  402134:	mov    ebp,eax
  402136:	mov    eax,DWORD PTR [esi]
  402138:	shr    edi,0x3
  40213b:	test   eax,eax
  40213d:	jne    0x402147
  40213f:	call   ebx
  402141:	mov    eax,DWORD PTR [esi]
  402143:	test   eax,eax
  402145:	je     0x40214b
  402147:	mov    ecx,DWORD PTR [eax]
  402149:	jmp    0x40214d
  40214b:	xor    ecx,ecx
  40214d:	test   eax,eax
  40214f:	je     0x402155
  402151:	mov    eax,DWORD PTR [eax]
  402153:	jmp    0x402157
  402155:	xor    eax,eax
  402157:	mov    eax,DWORD PTR [eax+0x1c]
  40215a:	add    eax,DWORD PTR [ecx+0x18]
  40215d:	cmp    DWORD PTR [esi+0x4],eax
  402160:	jb     0x402164
  402162:	call   ebx
  402164:	mov    esi,DWORD PTR [esi]
  402166:	test   esi,esi
  402168:	je     0x40216e
  40216a:	mov    eax,DWORD PTR [esi]
  40216c:	jmp    0x402170
  40216e:	xor    eax,eax
  402170:	cmp    DWORD PTR [eax+0x14],edi
  402173:	ja     0x402182
  402175:	test   esi,esi
  402177:	je     0x40217d
  402179:	mov    eax,DWORD PTR [esi]
  40217b:	jmp    0x40217f
  40217d:	xor    eax,eax
  40217f:	sub    edi,DWORD PTR [eax+0x14]
  402182:	test   esi,esi
  402184:	je     0x402196
  402186:	mov    esi,DWORD PTR [esi]
  402188:	mov    ecx,DWORD PTR [esi+0x10]
  40218b:	mov    edx,DWORD PTR [ecx+edi*4]
  40218e:	pop    edi
  40218f:	pop    esi
  402190:	lea    eax,[edx+ebp*2]
  402193:	pop    ebp
  402194:	pop    ebx
  402195:	ret    
  402196:	xor    esi,esi
  402198:	mov    ecx,DWORD PTR [esi+0x10]
  40219b:	mov    edx,DWORD PTR [ecx+edi*4]
  40219e:	pop    edi
  40219f:	pop    esi
  4021a0:	lea    eax,[edx+ebp*2]
  4021a3:	pop    ebp
  4021a4:	pop    ebx
  4021a5:	ret    
  4021a6:	int3   
  4021a7:	int3   
  4021a8:	int3   
  4021a9:	int3   
  4021aa:	int3   
  4021ab:	int3   
  4021ac:	int3   
  4021ad:	int3   
  4021ae:	int3   
  4021af:	int3   
  4021b0:	mov    eax,DWORD PTR [esp+0x4]
  4021b4:	mov    ecx,DWORD PTR [esp+0x8]
  4021b8:	sub    esp,0xc
  4021bb:	push   ebx
  4021bc:	push   ebp
  4021bd:	xor    ebp,ebp
  4021bf:	mov    DWORD PTR [edi],eax
  4021c1:	mov    DWORD PTR [edi+0x4],ecx
  4021c4:	cmp    DWORD PTR [esi+0x1c],ebp
  4021c7:	je     0x4022d7
  4021cd:	lea    ecx,[ecx+0x0]
  4021d0:	mov    eax,DWORD PTR [edi]
  4021d2:	cmp    eax,0xfffffffc
  4021d5:	je     0x4021e7
  4021d7:	cmp    eax,ebp
  4021d9:	je     0x4021e1
  4021db:	cmp    eax,DWORD PTR [esp+0x20]
  4021df:	je     0x4021e7
  4021e1:	call   DWORD PTR ds:0x430390
  4021e7:	mov    edx,DWORD PTR [edi+0x4]
  4021ea:	cmp    edx,DWORD PTR [esp+0x24]
  4021ee:	je     0x4022d7
  4021f4:	mov    ebx,DWORD PTR [esi+0x18]
  4021f7:	mov    eax,DWORD PTR [esi+0x1c]
  4021fa:	add    eax,ebx
  4021fc:	cmp    ebx,eax
  4021fe:	jbe    0x402206
  402200:	call   DWORD PTR ds:0x430390
  402206:	mov    ecx,DWORD PTR [esi]
  402208:	lea    eax,[esp+0x8]
  40220c:	mov    DWORD PTR [esp+0x8],ecx
  402210:	mov    DWORD PTR [esp+0xc],ebx
  402214:	call   0x402120
  402219:	mov    ebx,eax
  40221b:	mov    eax,DWORD PTR [edi]
  40221d:	cmp    eax,0xfffffffc
  402220:	je     0x40224d
  402222:	cmp    eax,ebp
  402224:	jne    0x40222c
  402226:	call   DWORD PTR ds:0x430390
  40222c:	mov    eax,DWORD PTR [edi]
  40222e:	cmp    DWORD PTR [eax+0x18],0x8
  402232:	jb     0x402239
  402234:	mov    ecx,DWORD PTR [eax+0x4]
  402237:	jmp    0x40223c
  402239:	lea    ecx,[eax+0x4]
  40223c:	mov    edx,DWORD PTR [eax+0x14]
  40223f:	lea    eax,[ecx+edx*2]
  402242:	cmp    DWORD PTR [edi+0x4],eax
  402245:	jb     0x40224d
  402247:	call   DWORD PTR ds:0x430390
  40224d:	mov    ecx,DWORD PTR [edi+0x4]
  402250:	mov    dx,WORD PTR [ebx]
  402253:	mov    WORD PTR [ecx],dx
  402256:	cmp    DWORD PTR [esi+0x1c],ebp
  402259:	je     0x402298
  40225b:	mov    eax,DWORD PTR [esi+0x18]
  40225e:	mov    edx,DWORD PTR [esi+0x10]
  402261:	mov    ecx,eax
  402263:	shr    ecx,0x3
  402266:	mov    ecx,DWORD PTR [edx+ecx*4]
  402269:	and    eax,0x7
  40226c:	lea    edx,[ecx+eax*2]
  40226f:	push   edx
  402270:	lea    ecx,[esi+0xc]
  402273:	call   DWORD PTR ds:0x430138
  402279:	mov    ecx,DWORD PTR [esi+0x14]
  40227c:	inc    DWORD PTR [esi+0x18]
  40227f:	mov    eax,DWORD PTR [esi+0x18]
  402282:	add    ecx,ecx
  402284:	add    ecx,ecx
  402286:	add    ecx,ecx
  402288:	cmp    ecx,eax
  40228a:	ja     0x40228f
  40228c:	mov    DWORD PTR [esi+0x18],ebp
  40228f:	add    DWORD PTR [esi+0x1c],0xffffffff
  402293:	jne    0x402298
  402295:	mov    DWORD PTR [esi+0x18],ebp
  402298:	mov    eax,DWORD PTR [edi]
  40229a:	cmp    eax,0xfffffffc
  40229d:	je     0x4022ca
  40229f:	cmp    eax,ebp
  4022a1:	jne    0x4022a9
  4022a3:	call   DWORD PTR ds:0x430390
  4022a9:	mov    eax,DWORD PTR [edi]
  4022ab:	cmp    DWORD PTR [eax+0x18],0x8
  4022af:	jb     0x4022b6
  4022b1:	mov    ecx,DWORD PTR [eax+0x4]
  4022b4:	jmp    0x4022b9
  4022b6:	lea    ecx,[eax+0x4]
  4022b9:	mov    edx,DWORD PTR [eax+0x14]
  4022bc:	lea    eax,[ecx+edx*2]
  4022bf:	cmp    DWORD PTR [edi+0x4],eax
  4022c2:	jb     0x4022ca
  4022c4:	call   DWORD PTR ds:0x430390
  4022ca:	add    DWORD PTR [edi+0x4],0x2
  4022ce:	cmp    DWORD PTR [esi+0x1c],ebp
  4022d1:	jne    0x4021d0
  4022d7:	pop    ebp
  4022d8:	mov    eax,edi
  4022da:	pop    ebx
  4022db:	add    esp,0xc
  4022de:	ret    
  4022df:	int3   
  4022e0:	push   ebp
  4022e1:	mov    ebp,esp
  4022e3:	push   0xffffffff
  4022e5:	push   0x42c3a0
  4022ea:	mov    eax,fs:0x0
  4022f0:	push   eax
  4022f1:	sub    esp,0x8
  4022f4:	push   ebx
  4022f5:	push   esi
  4022f6:	push   edi
  4022f7:	mov    eax,ds:0x43e020
  4022fc:	xor    eax,ebp
  4022fe:	push   eax
  4022ff:	lea    eax,[ebp-0xc]
  402302:	mov    fs:0x0,eax
  402308:	mov    DWORD PTR [ebp-0x10],esp
  40230b:	mov    edi,ecx
  40230d:	mov    esi,DWORD PTR [ebp+0x8]
  402310:	mov    ebx,DWORD PTR [esi+0x18]
  402313:	mov    eax,DWORD PTR [esi+0x1c]
  402316:	add    eax,ebx
  402318:	cmp    ebx,eax
  40231a:	jbe    0x402322
  40231c:	call   DWORD PTR ds:0x430390
  402322:	mov    ecx,DWORD PTR [ebp+0x14]
  402325:	mov    eax,DWORD PTR [esi]
  402327:	test   ecx,ecx
  402329:	je     0x40232f
  40232b:	cmp    ecx,eax
  40232d:	je     0x402335
  40232f:	call   DWORD PTR ds:0x430390
  402335:	mov    eax,DWORD PTR [ebp+0x18]
  402338:	mov    ecx,DWORD PTR [esi+0x1c]
  40233b:	sub    eax,ebx
  40233d:	mov    ebx,eax
  40233f:	mov    eax,ecx
  402341:	sub    eax,ebx
  402343:	mov    DWORD PTR [ebp-0x14],ecx
  402346:	cmp    edi,DWORD PTR [ebp+0xc]
  402349:	je     0x40241e
  40234f:	cmp    ebx,eax
  402351:	jae    0x4023b3
  402353:	mov    DWORD PTR [ebp-0x4],0x0
  40235a:	lea    ebx,[ebx+0x0]
  402360:	cmp    edi,DWORD PTR [ebp+0xc]
  402363:	je     0x402393
  402365:	push   edi
  402366:	mov    eax,esi
  402368:	call   0x402440
  40236d:	add    edi,0x2
  402370:	jmp    0x402360
  402372:	mov    esi,DWORD PTR [ebp+0x8]
  402375:	mov    edi,DWORD PTR [ebp-0x14]
  402378:	cmp    edi,DWORD PTR [esi+0x1c]
  40237b:	jae    0x40238a
  40237d:	lea    ecx,[ecx+0x0]
  402380:	call   0x401e30
  402385:	cmp    edi,DWORD PTR [esi+0x1c]
  402388:	jb     0x402380
  40238a:	push   0x0
  40238c:	push   0x0
  40238e:	call   0x429e76
  402393:	mov    eax,DWORD PTR [esi+0x1c]
  402396:	sub    eax,DWORD PTR [ebp-0x14]
  402399:	test   ebx,ebx
  40239b:	jbe    0x4023ae
  40239d:	lea    edi,[eax+ebx*1]
  4023a0:	push   edi
  4023a1:	push   eax
  4023a2:	mov    eax,esi
  4023a4:	call   0x4024c0
  4023a9:	push   edi
  4023aa:	push   0x0
  4023ac:	jmp    0x402417
  4023ae:	push   eax
  4023af:	push   0x0
  4023b1:	jmp    0x402417
  4023b3:	mov    DWORD PTR [ebp-0x4],0x2
  4023ba:	lea    ebx,[ebx+0x0]
  4023c0:	cmp    edi,DWORD PTR [ebp+0xc]
  4023c3:	je     0x4023f3
  4023c5:	push   edi
  4023c6:	mov    eax,esi
  4023c8:	call   0x401e80
  4023cd:	add    edi,0x2
  4023d0:	jmp    0x4023c0
  4023d2:	mov    esi,DWORD PTR [ebp+0x8]
  4023d5:	mov    edi,DWORD PTR [ebp-0x14]
  4023d8:	cmp    edi,DWORD PTR [esi+0x1c]
  4023db:	jae    0x4023ea
  4023dd:	lea    ecx,[ecx+0x0]
  4023e0:	call   0x401bf0
  4023e5:	cmp    edi,DWORD PTR [esi+0x1c]
  4023e8:	jb     0x4023e0
  4023ea:	push   0x0
  4023ec:	push   0x0
  4023ee:	call   0x429e76
  4023f3:	mov    eax,DWORD PTR [ebp-0x14]
  4023f6:	cmp    ebx,eax
  4023f8:	jae    0x40241e
  4023fa:	push   eax
  4023fb:	push   ebx
  4023fc:	mov    eax,esi
  4023fe:	call   0x4024c0
  402403:	mov    ecx,DWORD PTR [esi+0x1c]
  402406:	mov    edx,DWORD PTR [ebp-0x14]
  402409:	push   ecx
  40240a:	push   edx
  40240b:	mov    eax,esi
  40240d:	call   0x4024c0
  402412:	mov    eax,DWORD PTR [esi+0x1c]
  402415:	push   eax
  402416:	push   ebx
  402417:	mov    eax,esi
  402419:	call   0x4024c0
  40241e:	mov    ecx,DWORD PTR [ebp-0xc]
  402421:	mov    DWORD PTR fs:0x0,ecx
  402428:	pop    ecx
  402429:	pop    edi
  40242a:	pop    esi
  40242b:	pop    ebx
  40242c:	mov    esp,ebp
  40242e:	pop    ebp
  40242f:	ret    0x14
  402432:	int3   
  402433:	int3   
  402434:	int3   
  402435:	int3   
  402436:	int3   
  402437:	int3   
  402438:	int3   
  402439:	int3   
  40243a:	int3   
  40243b:	int3   
  40243c:	int3   
  40243d:	int3   
  40243e:	int3   
  40243f:	int3   
  402440:	push   ecx
  402441:	push   ebx
  402442:	mov    ebx,eax
  402444:	test   BYTE PTR [ebx+0x18],0x7
  402448:	push   esi
  402449:	push   edi
  40244a:	jne    0x40245f
  40244c:	mov    eax,DWORD PTR [ebx+0x1c]
  40244f:	add    eax,0x8
  402452:	shr    eax,0x3
  402455:	cmp    DWORD PTR [ebx+0x14],eax
  402458:	ja     0x40245f
  40245a:	call   0x401f00
  40245f:	mov    edi,DWORD PTR [ebx+0x18]
  402462:	test   edi,edi
  402464:	jne    0x40246f
  402466:	mov    edi,DWORD PTR [ebx+0x14]
  402469:	add    edi,edi
  40246b:	add    edi,edi
  40246d:	add    edi,edi
  40246f:	mov    ecx,DWORD PTR [ebx+0x10]
  402472:	dec    edi
  402473:	mov    esi,edi
  402475:	shr    esi,0x3
  402478:	cmp    DWORD PTR [ecx+esi*4],0x0
  40247c:	jne    0x40248f
  40247e:	push   0x8
  402480:	lea    ecx,[ebx+0xc]
  402483:	call   DWORD PTR ds:0x430114
  402489:	mov    edx,DWORD PTR [ebx+0x10]
  40248c:	mov    DWORD PTR [edx+esi*4],eax
  40248f:	mov    eax,DWORD PTR [esp+0x14]
  402493:	mov    ecx,DWORD PTR [ebx+0x10]
  402496:	push   eax
  402497:	mov    eax,DWORD PTR [ecx+esi*4]
  40249a:	mov    edx,edi
  40249c:	and    edx,0x7
  40249f:	lea    ecx,[eax+edx*2]
  4024a2:	push   ecx
  4024a3:	lea    ecx,[ebx+0xc]
  4024a6:	call   DWORD PTR ds:0x430134
  4024ac:	inc    DWORD PTR [ebx+0x1c]
  4024af:	mov    DWORD PTR [ebx+0x18],edi
  4024b2:	pop    edi
  4024b3:	pop    esi
  4024b4:	pop    ebx
  4024b5:	pop    ecx
  4024b6:	ret    0x4
  4024b9:	int3   
  4024ba:	int3   
  4024bb:	int3   
  4024bc:	int3   
  4024bd:	int3   
  4024be:	int3   
  4024bf:	int3   
  4024c0:	sub    esp,0x24
  4024c3:	push   ebx
  4024c4:	push   ebp
  4024c5:	push   esi
  4024c6:	mov    esi,eax
  4024c8:	mov    ebx,DWORD PTR [esi+0x18]
  4024cb:	mov    eax,DWORD PTR [esi+0x1c]
  4024ce:	add    eax,ebx
  4024d0:	push   edi
  4024d1:	mov    edi,DWORD PTR ds:0x430390
  4024d7:	cmp    ebx,eax
  4024d9:	jbe    0x4024dd
  4024db:	call   edi
  4024dd:	mov    ecx,DWORD PTR [esp+0x38]
  4024e1:	mov    eax,DWORD PTR [esp+0x3c]
  4024e5:	mov    esi,DWORD PTR [esi]
  4024e7:	cmp    ecx,eax
  4024e9:	je     0x4025d5
  4024ef:	lea    edx,[ebx+ecx*1]
  4024f2:	mov    DWORD PTR [esp+0x14],edx
  4024f6:	lea    ebp,[ebx+eax*1]
  4024f9:	jmp    0x40250e
  4024fb:	jmp    0x402500
  4024fd:	lea    ecx,[ecx+0x0]
  402500:	mov    eax,DWORD PTR [esp+0x3c]
  402504:	mov    edi,DWORD PTR ds:0x430390
  40250a:	mov    ecx,DWORD PTR [esp+0x38]
  40250e:	dec    eax
  40250f:	dec    ebp
  402510:	mov    DWORD PTR [esp+0x3c],eax
  402514:	cmp    ecx,eax
  402516:	je     0x4025d5
  40251c:	mov    DWORD PTR [esp+0x2c],ebx
  402520:	test   esi,esi
  402522:	jne    0x40253c
  402524:	call   edi
  402526:	xor    eax,eax
  402528:	xor    ecx,ecx
  40252a:	mov    ecx,DWORD PTR [ecx+0x1c]
  40252d:	add    ecx,DWORD PTR [eax+0x18]
  402530:	cmp    ebp,ecx
  402532:	ja     0x402549
  402534:	test   esi,esi
  402536:	je     0x402542
  402538:	mov    eax,DWORD PTR [esi]
  40253a:	jmp    0x402544
  40253c:	mov    eax,DWORD PTR [esi]
  40253e:	mov    ecx,eax
  402540:	jmp    0x40252a
  402542:	xor    eax,eax
  402544:	cmp    ebp,DWORD PTR [eax+0x18]
  402547:	jae    0x40254b
  402549:	call   edi
  40254b:	lea    eax,[esp+0x18]
  40254f:	mov    DWORD PTR [esp+0x18],esi
  402553:	mov    DWORD PTR [esp+0x1c],ebp
  402557:	call   0x402120
  40255c:	mov    edi,eax
  40255e:	mov    DWORD PTR [esp+0x2c],ebx
  402562:	test   esi,esi
  402564:	jne    0x402586
  402566:	call   DWORD PTR ds:0x430390
  40256c:	xor    eax,eax
  40256e:	xor    ecx,ecx
  402570:	mov    edx,DWORD PTR [ecx+0x1c]
  402573:	add    edx,DWORD PTR [eax+0x18]
  402576:	mov    ecx,DWORD PTR [esp+0x14]
  40257a:	cmp    ecx,edx
  40257c:	ja     0x402593
  40257e:	test   esi,esi
  402580:	je     0x40258c
  402582:	mov    eax,DWORD PTR [esi]
  402584:	jmp    0x40258e
  402586:	mov    eax,DWORD PTR [esi]
  402588:	mov    ecx,eax
  40258a:	jmp    0x402570
  40258c:	xor    eax,eax
  40258e:	cmp    ecx,DWORD PTR [eax+0x18]
  402591:	jae    0x40259d
  402593:	call   DWORD PTR ds:0x430390
  402599:	mov    ecx,DWORD PTR [esp+0x14]
  40259d:	lea    eax,[esp+0x20]
  4025a1:	mov    DWORD PTR [esp+0x20],esi
  4025a5:	mov    DWORD PTR [esp+0x24],ecx
  4025a9:	call   0x402120
  4025ae:	cmp    eax,edi
  4025b0:	je     0x4025be
  4025b2:	movzx  ecx,WORD PTR [eax]
  4025b5:	mov    dx,WORD PTR [edi]
  4025b8:	mov    WORD PTR [eax],dx
  4025bb:	mov    WORD PTR [edi],cx
  4025be:	mov    eax,DWORD PTR [esp+0x38]
  4025c2:	inc    DWORD PTR [esp+0x14]
  4025c6:	inc    eax
  4025c7:	mov    DWORD PTR [esp+0x38],eax
  4025cb:	cmp    eax,DWORD PTR [esp+0x3c]
  4025cf:	jne    0x402500
  4025d5:	pop    edi
  4025d6:	pop    esi
  4025d7:	pop    ebp
  4025d8:	pop    ebx
  4025d9:	add    esp,0x24
  4025dc:	ret    0x8
  4025df:	int3   
  4025e0:	sub    esp,0x8
  4025e3:	mov    ecx,DWORD PTR [esp+0x1c]
  4025e7:	sub    eax,ebx
  4025e9:	push   ebp
  4025ea:	sar    eax,1
  4025ec:	push   esi
  4025ed:	mov    esi,eax
  4025ef:	mov    eax,DWORD PTR [esp+0x20]
  4025f3:	mov    DWORD PTR [esp+0xc],ecx
  4025f7:	push   esi
  4025f8:	lea    ecx,[esp+0xc]
  4025fc:	mov    DWORD PTR [esp+0xc],eax
  402600:	call   0x402830
  402605:	mov    edx,DWORD PTR [esp+0x8]
  402609:	mov    eax,DWORD PTR [esp+0xc]
  40260d:	mov    DWORD PTR [edi],edx
  40260f:	mov    DWORD PTR [edi+0x4],eax
  402612:	test   esi,esi
  402614:	jle    0x40265f
  402616:	mov    eax,DWORD PTR [esp+0x20]
  40261a:	cmp    eax,0xfffffffc
  40261d:	je     0x40264b
  40261f:	mov    ebp,DWORD PTR ds:0x430390
  402625:	test   eax,eax
  402627:	jne    0x40262f
  402629:	call   ebp
  40262b:	mov    eax,DWORD PTR [esp+0x20]
  40262f:	cmp    DWORD PTR [eax+0x18],0x8
  402633:	jb     0x40263a
  402635:	mov    ecx,DWORD PTR [eax+0x4]
  402638:	jmp    0x40263d
  40263a:	lea    ecx,[eax+0x4]
  40263d:	mov    edx,DWORD PTR [eax+0x14]
  402640:	lea    eax,[ecx+edx*2]
  402643:	cmp    DWORD PTR [esp+0x24],eax
  402647:	jb     0x40264b
  402649:	call   ebp
  40264b:	mov    ecx,DWORD PTR [esp+0x24]
  40264f:	lea    eax,[esi+esi*1]
  402652:	push   eax
  402653:	push   ebx
  402654:	push   eax
  402655:	push   ecx
  402656:	call   DWORD PTR ds:0x430394
  40265c:	add    esp,0x10
  40265f:	pop    esi
  402660:	mov    eax,edi
  402662:	pop    ebp
  402663:	add    esp,0x8
  402666:	ret    
  402667:	int3   
  402668:	int3   
  402669:	int3   
  40266a:	int3   
  40266b:	int3   
  40266c:	int3   
  40266d:	int3   
  40266e:	int3   
  40266f:	int3   
  402670:	push   0xffffffff
  402672:	push   0x42c369
  402677:	mov    eax,fs:0x0
  40267d:	push   eax
  40267e:	sub    esp,0x28
  402681:	mov    eax,ds:0x43e020
  402686:	xor    eax,esp
  402688:	mov    DWORD PTR [esp+0x24],eax
  40268c:	push   ebx
  40268d:	push   edi
  40268e:	mov    eax,ds:0x43e020
  402693:	xor    eax,esp
  402695:	push   eax
  402696:	lea    eax,[esp+0x34]
  40269a:	mov    fs:0x0,eax
  4026a0:	mov    edi,DWORD PTR [esp+0x58]
  4026a4:	mov    ebx,DWORD PTR [esp+0x5c]
  4026a8:	push   0x0
  4026aa:	push   0x0
  4026ac:	lea    ecx,[esp+0x1c]
  4026b0:	call   DWORD PTR ds:0x430250
  4026b6:	mov    eax,DWORD PTR [esp+0x64]
  4026ba:	mov    ecx,DWORD PTR [esp+0x60]
  4026be:	mov    edx,DWORD PTR [esp+0x10]
  4026c2:	push   eax
  4026c3:	push   ecx
  4026c4:	push   ebx
  4026c5:	push   edi
  4026c6:	push   edx
  4026c7:	lea    eax,[esp+0x28]
  4026cb:	push   eax
  4026cc:	call   0x402730
  4026d1:	mov    DWORD PTR [esp+0x3c],0x0
  4026d9:	mov    edx,DWORD PTR [esp+0x54]
  4026dd:	mov    eax,DWORD PTR [esp+0x50]
  4026e1:	lea    ecx,[esp+0x14]
  4026e5:	push   ecx
  4026e6:	mov    ecx,DWORD PTR [esp+0x50]
  4026ea:	push   edx
  4026eb:	mov    edx,DWORD PTR [esp+0x50]
  4026ef:	push   eax
  4026f0:	push   ecx
  4026f1:	push   edx
  4026f2:	mov    ecx,esi
  4026f4:	call   DWORD PTR ds:0x430130
  4026fa:	lea    ecx,[esp+0x14]
  4026fe:	mov    DWORD PTR [esp+0x3c],0xffffffff
  402706:	call   DWORD PTR ds:0x430264
  40270c:	mov    eax,esi
  40270e:	mov    ecx,DWORD PTR [esp+0x34]
  402712:	mov    DWORD PTR fs:0x0,ecx
  402719:	pop    ecx
  40271a:	pop    edi
  40271b:	pop    ebx
  40271c:	mov    ecx,DWORD PTR [esp+0x24]
  402720:	xor    ecx,esp
  402722:	call   0x42503a
  402727:	add    esp,0x34
  40272a:	ret    0x24
  40272d:	int3   
  40272e:	int3   
  40272f:	int3   
  402730:	push   ebp
  402731:	mov    ebp,esp
  402733:	push   0xffffffff
  402735:	push   0x42c340
  40273a:	mov    eax,fs:0x0
  402740:	push   eax
  402741:	sub    esp,0xc
  402744:	push   ebx
  402745:	push   esi
  402746:	push   edi
  402747:	mov    eax,ds:0x43e020
  40274c:	xor    eax,ebp
  40274e:	push   eax
  40274f:	lea    eax,[ebp-0xc]
  402752:	mov    fs:0x0,eax
  402758:	mov    DWORD PTR [ebp-0x10],esp
  40275b:	mov    eax,DWORD PTR [ebp+0x18]
  40275e:	mov    ecx,DWORD PTR [ebp+0x10]
  402761:	mov    esi,DWORD PTR [ebp+0x1c]
  402764:	mov    edi,DWORD PTR [ebp+0x14]
  402767:	mov    DWORD PTR [ebp-0x18],eax
  40276a:	mov    DWORD PTR [ebp-0x18],ecx
  40276d:	test   eax,eax
  40276f:	je     0x402775
  402771:	cmp    eax,ecx
  402773:	je     0x40277f
  402775:	mov    ebx,DWORD PTR ds:0x430390
  40277b:	call   ebx
  40277d:	jmp    0x402785
  40277f:	mov    ebx,DWORD PTR ds:0x430390
  402785:	sub    esi,edi
  402787:	push   esi
  402788:	mov    esi,DWORD PTR [ebp+0x8]
  40278b:	mov    ecx,esi
  40278d:	call   DWORD PTR ds:0x43012c
  402793:	mov    DWORD PTR [ebp-0x4],0x0
  40279a:	mov    edx,DWORD PTR [ebp+0x10]
  40279d:	mov    edi,0x1
  4027a2:	test   edx,edx
  4027a4:	je     0x4027ab
  4027a6:	cmp    edx,DWORD PTR [ebp+0x18]
  4027a9:	je     0x4027ad
  4027ab:	call   ebx
  4027ad:	mov    eax,DWORD PTR [ebp+0x14]
  4027b0:	cmp    eax,DWORD PTR [ebp+0x1c]
  4027b3:	je     0x40280f
  4027b5:	lea    eax,[ebp+0x10]
  4027b8:	call   0x402120
  4027bd:	movzx  ecx,WORD PTR [eax]
  4027c0:	push   ecx
  4027c1:	push   edi
  4027c2:	mov    ecx,esi
  4027c4:	call   DWORD PTR ds:0x430110
  4027ca:	mov    edx,DWORD PTR [ebp+0x10]
  4027cd:	test   edx,edx
  4027cf:	jne    0x4027da
  4027d1:	call   ebx
  4027d3:	mov    edx,DWORD PTR [ebp+0x10]
  4027d6:	test   edx,edx
  4027d8:	je     0x4027e0
  4027da:	mov    eax,DWORD PTR [edx]
  4027dc:	mov    ecx,eax
  4027de:	jmp    0x4027e4
  4027e0:	xor    eax,eax
  4027e2:	xor    ecx,ecx
  4027e4:	mov    ecx,DWORD PTR [ecx+0x1c]
  4027e7:	add    ecx,DWORD PTR [eax+0x18]
  4027ea:	cmp    DWORD PTR [ebp+0x14],ecx
  4027ed:	jb     0x4027f4
  4027ef:	call   ebx
  4027f1:	mov    edx,DWORD PTR [ebp+0x10]
  4027f4:	add    DWORD PTR [ebp+0x14],edi
  4027f7:	jmp    0x4027a2
  4027f9:	mov    ecx,DWORD PTR [ebp+0x8]
  4027fc:	push   0x0
  4027fe:	push   0x1
  402800:	call   DWORD PTR ds:0x430250
  402806:	push   0x0
  402808:	push   0x0
  40280a:	call   0x429e76
  40280f:	mov    ecx,DWORD PTR [ebp-0xc]
  402812:	mov    DWORD PTR fs:0x0,ecx
  402819:	pop    ecx
  40281a:	pop    edi
  40281b:	pop    esi
  40281c:	pop    ebx
  40281d:	mov    esp,ebp
  40281f:	pop    ebp
  402820:	ret    0x18
  402823:	int3   
  402824:	int3   
  402825:	int3   
  402826:	int3   
  402827:	int3   
  402828:	int3   
  402829:	int3   
  40282a:	int3   
  40282b:	int3   
  40282c:	int3   
  40282d:	int3   
  40282e:	int3   
  40282f:	int3   
  402830:	push   ebx
  402831:	mov    ebx,DWORD PTR [esp+0x8]
  402835:	push   esi
  402836:	mov    esi,ecx
  402838:	mov    eax,DWORD PTR [esi]
  40283a:	cmp    eax,0xfffffffc
  40283d:	je     0x402883
  40283f:	test   eax,eax
  402841:	jne    0x402849
  402843:	call   DWORD PTR ds:0x430390
  402849:	mov    eax,DWORD PTR [esi]
  40284b:	cmp    DWORD PTR [eax+0x18],0x8
  40284f:	jb     0x402856
  402851:	mov    edx,DWORD PTR [eax+0x4]
  402854:	jmp    0x402859
  402856:	lea    edx,[eax+0x4]
  402859:	mov    ecx,DWORD PTR [esi+0x4]
  40285c:	push   ebp
  40285d:	mov    ebp,DWORD PTR [eax+0x14]
  402860:	lea    edx,[edx+ebp*2]
  402863:	lea    ecx,[ecx+ebx*2]
  402866:	pop    ebp
  402867:	cmp    ecx,edx
  402869:	ja     0x40287d
  40286b:	cmp    DWORD PTR [eax+0x18],0x8
  40286f:	jb     0x402876
  402871:	mov    eax,DWORD PTR [eax+0x4]
  402874:	jmp    0x402879
  402876:	add    eax,0x4
  402879:	cmp    ecx,eax
  40287b:	jae    0x402883
  40287d:	call   DWORD PTR ds:0x430390
  402883:	lea    eax,[ebx+ebx*1]
  402886:	add    DWORD PTR [esi+0x4],eax
  402889:	mov    eax,esi
  40288b:	pop    esi
  40288c:	pop    ebx
  40288d:	ret    0x4
  402890:	push   esi
  402891:	mov    esi,ecx
  402893:	lea    ecx,[esi+0xc]
  402896:	mov    DWORD PTR [esi],0x4305f8
  40289c:	call   DWORD PTR ds:0x43025c
  4028a2:	mov    ecx,esi
  4028a4:	pop    esi
  4028a5:	jmp    DWORD PTR ds:0x4303a8
  4028ab:	int3   
  4028ac:	int3   
  4028ad:	int3   
  4028ae:	int3   
  4028af:	int3   
  4028b0:	mov    eax,DWORD PTR [esp+0x4]
  4028b4:	push   esi
  4028b5:	push   eax
  4028b6:	mov    esi,ecx
  4028b8:	call   0x4028d0
  4028bd:	mov    DWORD PTR [esi],0x430604
  4028c3:	mov    eax,esi
  4028c5:	pop    esi
  4028c6:	ret    0x4
  4028c9:	int3   
  4028ca:	int3   
  4028cb:	int3   
  4028cc:	int3   
  4028cd:	int3   
  4028ce:	int3   
  4028cf:	int3   
  4028d0:	push   0xffffffff
  4028d2:	push   0x42af89
  4028d7:	mov    eax,fs:0x0
  4028dd:	push   eax
  4028de:	push   ecx
  4028df:	push   esi
  4028e0:	push   edi
  4028e1:	mov    eax,ds:0x43e020
  4028e6:	xor    eax,esp
  4028e8:	push   eax
  4028e9:	lea    eax,[esp+0x10]
  4028ed:	mov    fs:0x0,eax
  4028f3:	mov    esi,ecx
  4028f5:	mov    DWORD PTR [esp+0xc],esi
  4028f9:	mov    edi,DWORD PTR [esp+0x20]
  4028fd:	push   edi
  4028fe:	call   DWORD PTR ds:0x4303a0
  402904:	add    edi,0xc
  402907:	mov    DWORD PTR [esp+0x18],0x0
  40290f:	push   edi
  402910:	lea    ecx,[esi+0xc]
  402913:	mov    DWORD PTR [esi],0x4305f8
  402919:	call   DWORD PTR ds:0x430258
  40291f:	mov    eax,esi
  402921:	mov    ecx,DWORD PTR [esp+0x10]
  402925:	mov    DWORD PTR fs:0x0,ecx
  40292c:	pop    ecx
  40292d:	pop    edi
  40292e:	pop    esi
  40292f:	add    esp,0x10
  402932:	ret    0x4
  402935:	int3   
  402936:	int3   
  402937:	int3   
  402938:	int3   
  402939:	int3   
  40293a:	int3   
  40293b:	int3   
  40293c:	int3   
  40293d:	int3   
  40293e:	int3   
  40293f:	int3   
  402940:	push   0xffffffff
  402942:	push   0x42acc9
  402947:	mov    eax,fs:0x0
  40294d:	push   eax
  40294e:	push   ecx
  40294f:	push   esi
  402950:	mov    eax,ds:0x43e020
  402955:	xor    eax,esp
  402957:	push   eax
  402958:	lea    eax,[esp+0xc]
  40295c:	mov    fs:0x0,eax
  402962:	mov    esi,ecx
  402964:	mov    DWORD PTR [esp+0x8],esi
  402968:	call   DWORD PTR ds:0x4303ac
  40296e:	mov    eax,DWORD PTR [esp+0x1c]
  402972:	mov    DWORD PTR [esp+0x14],0x0
  40297a:	push   eax
  40297b:	lea    ecx,[esi+0xc]
  40297e:	mov    DWORD PTR [esi],0x4305f8
  402984:	call   DWORD PTR ds:0x430258
  40298a:	mov    eax,esi
  40298c:	mov    ecx,DWORD PTR [esp+0xc]
  402990:	mov    DWORD PTR fs:0x0,ecx
  402997:	pop    ecx
  402998:	pop    esi
  402999:	add    esp,0x10
  40299c:	ret    0x4
  40299f:	int3   
  4029a0:	ret    
  4029a1:	int3   
  4029a2:	int3   
  4029a3:	int3   
  4029a4:	int3   
  4029a5:	int3   
  4029a6:	int3   
  4029a7:	int3   
  4029a8:	int3   
  4029a9:	int3   
  4029aa:	int3   
  4029ab:	int3   
  4029ac:	int3   
  4029ad:	int3   
  4029ae:	int3   
  4029af:	int3   
  4029b0:	push   0xffffffff
  4029b2:	push   0x42b8cd
  4029b7:	mov    eax,fs:0x0
  4029bd:	push   eax
  4029be:	push   ecx
  4029bf:	push   esi
  4029c0:	mov    eax,ds:0x43e020
  4029c5:	xor    eax,esp
  4029c7:	push   eax
  4029c8:	lea    eax,[esp+0xc]
  4029cc:	mov    fs:0x0,eax
  4029d2:	mov    esi,ecx
  4029d4:	mov    DWORD PTR [esp+0x8],esi
  4029d8:	mov    DWORD PTR [esi],0x430b94
  4029de:	lea    eax,[esi+0x24]
  4029e1:	push   eax
  4029e2:	mov    DWORD PTR [esp+0x18],0x0
  4029ea:	call   0x40b540
  4029ef:	add    esi,0x4
  4029f2:	push   esi
  4029f3:	mov    DWORD PTR [esp+0x18],0xffffffff
  4029fb:	call   0x40b540
  402a00:	mov    ecx,DWORD PTR [esp+0xc]
  402a04:	mov    DWORD PTR fs:0x0,ecx
  402a0b:	pop    ecx
  402a0c:	pop    esi
  402a0d:	add    esp,0x10
  402a10:	ret    
  402a11:	int3   
  402a12:	int3   
  402a13:	int3   
  402a14:	int3   
  402a15:	int3   
  402a16:	int3   
  402a17:	int3   
  402a18:	int3   
  402a19:	int3   
  402a1a:	int3   
  402a1b:	int3   
  402a1c:	int3   
  402a1d:	int3   
  402a1e:	int3   
  402a1f:	int3   
  402a20:	push   esi
  402a21:	mov    esi,ecx
  402a23:	call   0x4029b0
  402a28:	test   BYTE PTR [esp+0x8],0x1
  402a2d:	je     0x402a38
  402a2f:	push   esi
  402a30:	call   0x42504a
  402a35:	add    esp,0x4
  402a38:	mov    eax,esi
  402a3a:	pop    esi
  402a3b:	ret    0x4
  402a3e:	int3   
  402a3f:	int3   
  402a40:	push   0xffffffff
  402a42:	push   0x42c31d
  402a47:	mov    eax,fs:0x0
  402a4d:	push   eax
  402a4e:	push   esi
  402a4f:	mov    eax,ds:0x43e020
  402a54:	xor    eax,esp
  402a56:	push   eax
  402a57:	lea    eax,[esp+0x8]
  402a5b:	mov    fs:0x0,eax
  402a61:	mov    esi,DWORD PTR [esp+0x18]
  402a65:	mov    DWORD PTR [esi],0x430b94
  402a6b:	lea    ecx,[esi+0x8]
  402a6e:	mov    DWORD PTR [esi+0x4],0x0
  402a75:	call   DWORD PTR ds:0x430260
  402a7b:	mov    DWORD PTR [esp+0x10],0x0
  402a83:	lea    ecx,[esi+0x28]
  402a86:	mov    DWORD PTR [esi+0x24],0x0
  402a8d:	call   DWORD PTR ds:0x430260
  402a93:	mov    eax,esi
  402a95:	mov    ecx,DWORD PTR [esp+0x8]
  402a99:	mov    DWORD PTR fs:0x0,ecx
  402aa0:	pop    ecx
  402aa1:	pop    esi
  402aa2:	add    esp,0xc
  402aa5:	ret    0x4
  402aa8:	int3   
  402aa9:	int3   
  402aaa:	int3   
  402aab:	int3   
  402aac:	int3   
  402aad:	int3   
  402aae:	int3   
  402aaf:	int3   
  402ab0:	push   esi
  402ab1:	mov    esi,ecx
  402ab3:	mov    eax,DWORD PTR [esi]
  402ab5:	cmp    eax,0xfffffffc
  402ab8:	je     0x402ae5
  402aba:	push   edi
  402abb:	mov    edi,DWORD PTR ds:0x430390
  402ac1:	test   eax,eax
  402ac3:	jne    0x402ac7
  402ac5:	call   edi
  402ac7:	mov    eax,DWORD PTR [esi]
  402ac9:	cmp    DWORD PTR [eax+0x18],0x8
  402acd:	jb     0x402ad4
  402acf:	mov    ecx,DWORD PTR [eax+0x4]
  402ad2:	jmp    0x402ad7
  402ad4:	lea    ecx,[eax+0x4]
  402ad7:	mov    eax,DWORD PTR [eax+0x14]
  402ada:	lea    ecx,[ecx+eax*2]
  402add:	cmp    DWORD PTR [esi+0x4],ecx
  402ae0:	jb     0x402ae4
  402ae2:	call   edi
  402ae4:	pop    edi
  402ae5:	mov    eax,DWORD PTR [esi+0x4]
  402ae8:	pop    esi
  402ae9:	ret    
  402aea:	int3   
  402aeb:	int3   
  402aec:	int3   
  402aed:	int3   
  402aee:	int3   
  402aef:	int3   
  402af0:	mov    DWORD PTR [ecx],0x4305ec
  402af6:	jmp    DWORD PTR ds:0x4303a8
  402afc:	int3   
  402afd:	int3   
  402afe:	int3   
  402aff:	int3   
  402b00:	push   esi
  402b01:	mov    esi,ecx
  402b03:	mov    DWORD PTR [esi],0x4305ec
  402b09:	call   DWORD PTR ds:0x4303a8
  402b0f:	test   BYTE PTR [esp+0x8],0x1
  402b14:	je     0x402b1f
  402b16:	push   esi
  402b17:	call   0x42504a
  402b1c:	add    esp,0x4
  402b1f:	mov    eax,esi
  402b21:	pop    esi
  402b22:	ret    0x4
  402b25:	int3   
  402b26:	int3   
  402b27:	int3   
  402b28:	int3   
  402b29:	int3   
  402b2a:	int3   
  402b2b:	int3   
  402b2c:	int3   
  402b2d:	int3   
  402b2e:	int3   
  402b2f:	int3   
  402b30:	mov    eax,DWORD PTR [esp+0x4]
  402b34:	push   esi
  402b35:	push   eax
  402b36:	mov    esi,ecx
  402b38:	call   DWORD PTR ds:0x4303a0
  402b3e:	mov    DWORD PTR [esi],0x4305ec
  402b44:	mov    eax,esi
  402b46:	pop    esi
  402b47:	ret    0x4
  402b4a:	int3   
  402b4b:	int3   
  402b4c:	int3   
  402b4d:	int3   
  402b4e:	int3   
  402b4f:	int3   
  402b50:	push   0xffffffff
  402b52:	push   0x42c2f0
  402b57:	mov    eax,fs:0x0
  402b5d:	push   eax
  402b5e:	push   ecx
  402b5f:	push   ebx
  402b60:	push   ebp
  402b61:	push   esi
  402b62:	mov    eax,ds:0x43e020
  402b67:	xor    eax,esp
  402b69:	push   eax
  402b6a:	lea    eax,[esp+0x14]
  402b6e:	mov    fs:0x0,eax
  402b74:	mov    ebp,DWORD PTR [esp+0x24]
  402b78:	xor    esi,esi
  402b7a:	xor    ebx,ebx
  402b7c:	mov    DWORD PTR [esp+0x10],esi
  402b80:	mov    DWORD PTR [esp+0x1c],ebx
  402b84:	mov    ecx,DWORD PTR [ebp+0x4]
  402b87:	cmp    ecx,ebx
  402b89:	je     0x402bca
  402b8b:	mov    eax,DWORD PTR [ecx]
  402b8d:	mov    eax,DWORD PTR [eax+0x14]
  402b90:	lea    edx,[esp+0x24]
  402b94:	push   edx
  402b95:	call   eax
  402b97:	mov    BYTE PTR [esp+0x1c],0x1
  402b9c:	mov    ecx,DWORD PTR [eax]
  402b9e:	mov    esi,ecx
  402ba0:	mov    DWORD PTR [esp+0x10],esi
  402ba4:	cmp    ecx,ebx
  402ba6:	je     0x402baf
  402ba8:	mov    edx,DWORD PTR [ecx]
  402baa:	mov    eax,DWORD PTR [edx+0xc]
  402bad:	call   eax
  402baf:	mov    BYTE PTR [esp+0x1c],bl
  402bb3:	mov    ecx,DWORD PTR [esp+0x24]
  402bb7:	cmp    ecx,ebx
  402bb9:	je     0x402bca
  402bbb:	mov    edx,DWORD PTR [ecx]
  402bbd:	mov    eax,DWORD PTR [edx+0x10]
  402bc0:	call   eax
  402bc2:	test   al,al
  402bc4:	je     0x402bca
  402bc6:	mov    DWORD PTR [esp+0x24],ebx
  402bca:	mov    ecx,DWORD PTR [ebp+0xc]
  402bcd:	mov    DWORD PTR [edi+0xc],ecx
  402bd0:	mov    edx,DWORD PTR [ebp+0x10]
  402bd3:	mov    DWORD PTR [edi+0x10],edx
  402bd6:	mov    eax,DWORD PTR [ebp+0x8]
  402bd9:	mov    DWORD PTR [edi+0x8],eax
  402bdc:	mov    ecx,DWORD PTR [edi+0x4]
  402bdf:	cmp    ecx,ebx
  402be1:	je     0x402bf1
  402be3:	mov    edx,DWORD PTR [ecx]
  402be5:	mov    eax,DWORD PTR [edx+0x10]
  402be8:	call   eax
  402bea:	test   al,al
  402bec:	je     0x402bf1
  402bee:	mov    DWORD PTR [edi+0x4],ebx
  402bf1:	mov    DWORD PTR [edi+0x4],esi
  402bf4:	cmp    esi,ebx
  402bf6:	je     0x402c01
  402bf8:	mov    edx,DWORD PTR [esi]
  402bfa:	mov    eax,DWORD PTR [edx+0xc]
  402bfd:	mov    ecx,esi
  402bff:	call   eax
  402c01:	mov    DWORD PTR [esp+0x1c],0xffffffff
  402c09:	cmp    esi,ebx
  402c0b:	je     0x402c16
  402c0d:	mov    edx,DWORD PTR [esi]
  402c0f:	mov    eax,DWORD PTR [edx+0x10]
  402c12:	mov    ecx,esi
  402c14:	call   eax
  402c16:	mov    ecx,DWORD PTR [esp+0x14]
  402c1a:	mov    DWORD PTR fs:0x0,ecx
  402c21:	pop    ecx
  402c22:	pop    esi
  402c23:	pop    ebp
  402c24:	pop    ebx
  402c25:	add    esp,0x10
  402c28:	ret    
  402c29:	int3   
  402c2a:	int3   
  402c2b:	int3   
  402c2c:	int3   
  402c2d:	int3   
  402c2e:	int3   
  402c2f:	int3   
  402c30:	push   0xffffffff
  402c32:	push   0x42cc73
  402c37:	mov    eax,fs:0x0
  402c3d:	push   eax
  402c3e:	push   esi
  402c3f:	push   edi
  402c40:	mov    eax,ds:0x43e020
  402c45:	xor    eax,esp
  402c47:	push   eax
  402c48:	lea    eax,[esp+0xc]
  402c4c:	mov    fs:0x0,eax
  402c52:	mov    esi,DWORD PTR [esp+0x1c]
  402c56:	push   ebx
  402c57:	mov    ecx,esi
  402c59:	call   0x402fa0
  402c5e:	xor    eax,eax
  402c60:	mov    DWORD PTR [esp+0x14],eax
  402c64:	mov    DWORD PTR [esi+0x24],0x430bd8
  402c6b:	mov    BYTE PTR [esp+0x14],0x1
  402c70:	lea    edi,[esi+0x10]
  402c73:	mov    DWORD PTR [esi],0x430c14
  402c79:	mov    DWORD PTR [edi],0x430c20
  402c7f:	mov    DWORD PTR [esi+0x24],0x430c28
  402c86:	cmp    ebx,eax
  402c88:	je     0x402c8d
  402c8a:	lea    eax,[ebx+0x10]
  402c8d:	push   eax
  402c8e:	call   0x402b50
  402c93:	add    esp,0x4
  402c96:	mov    eax,esi
  402c98:	mov    ecx,DWORD PTR [esp+0xc]
  402c9c:	mov    DWORD PTR fs:0x0,ecx
  402ca3:	pop    ecx
  402ca4:	pop    edi
  402ca5:	pop    esi
  402ca6:	add    esp,0xc
  402ca9:	ret    0x4
  402cac:	int3   
  402cad:	int3   
  402cae:	int3   
  402caf:	int3   
  402cb0:	push   ecx
  402cb1:	push   esi
  402cb2:	mov    DWORD PTR [esp+0x4],0x0
  402cba:	call   0x402c30
  402cbf:	mov    eax,esi
  402cc1:	pop    ecx
  402cc2:	ret    
  402cc3:	int3   
  402cc4:	int3   
  402cc5:	int3   
  402cc6:	int3   
  402cc7:	int3   
  402cc8:	int3   
  402cc9:	int3   
  402cca:	int3   
  402ccb:	int3   
  402ccc:	int3   
  402ccd:	int3   
  402cce:	int3   
  402ccf:	int3   
  402cd0:	push   ecx
  402cd1:	push   ebx
  402cd2:	xor    ebx,ebx
  402cd4:	push   edi
  402cd5:	mov    ecx,esi
  402cd7:	mov    DWORD PTR [esp+0x8],ebx
  402cdb:	call   DWORD PTR ds:0x4303a0
  402ce1:	mov    DWORD PTR [esi],0x430be8
  402ce7:	mov    eax,DWORD PTR [edi+0xc]
  402cea:	mov    DWORD PTR [esi+0xc],eax
  402ced:	mov    DWORD PTR [esi+0x10],0x430bd0
  402cf4:	mov    DWORD PTR [esi+0x14],ebx
  402cf7:	mov    DWORD PTR [esi+0x18],ebx
  402cfa:	mov    DWORD PTR [esi+0x1c],ebx
  402cfd:	mov    DWORD PTR [esi+0x20],0xffffffff
  402d04:	mov    DWORD PTR [esi],0x430c00
  402d0a:	mov    DWORD PTR [esi+0x10],0x430c0c
  402d11:	mov    eax,esi
  402d13:	pop    ebx
  402d14:	pop    ecx
  402d15:	ret    
  402d16:	int3   
  402d17:	int3   
  402d18:	int3   
  402d19:	int3   
  402d1a:	int3   
  402d1b:	int3   
  402d1c:	int3   
  402d1d:	int3   
  402d1e:	int3   
  402d1f:	int3   
  402d20:	push   esi
  402d21:	mov    esi,ecx
  402d23:	mov    DWORD PTR [esi+0x24],0x430bd8
  402d2a:	mov    DWORD PTR [esi],0x430c00
  402d30:	mov    DWORD PTR [esi+0x10],0x430c0c
  402d37:	mov    DWORD PTR [esi+0x10],0x430bd0
  402d3e:	mov    ecx,DWORD PTR [esi+0x14]
  402d41:	test   ecx,ecx
  402d43:	je     0x402d57
  402d45:	mov    eax,DWORD PTR [ecx]
  402d47:	mov    edx,DWORD PTR [eax+0x10]
  402d4a:	call   edx
  402d4c:	test   al,al
  402d4e:	je     0x402d57
  402d50:	mov    DWORD PTR [esi+0x14],0x0
  402d57:	mov    DWORD PTR [esi],0x430be8
  402d5d:	mov    ecx,esi
  402d5f:	pop    esi
  402d60:	jmp    DWORD PTR ds:0x4303a8
  402d66:	int3   
  402d67:	int3   
  402d68:	int3   
  402d69:	int3   
  402d6a:	int3   
  402d6b:	int3   
  402d6c:	int3   
  402d6d:	int3   
  402d6e:	int3   
  402d6f:	int3   
  402d70:	mov    DWORD PTR [esi],0x430c00
  402d76:	mov    DWORD PTR [esi+0x10],0x430c0c
  402d7d:	mov    DWORD PTR [esi+0x10],0x430bd0
  402d84:	mov    ecx,DWORD PTR [esi+0x14]
  402d87:	test   ecx,ecx
  402d89:	je     0x402d9d
  402d8b:	mov    eax,DWORD PTR [ecx]
  402d8d:	mov    edx,DWORD PTR [eax+0x10]
  402d90:	call   edx
  402d92:	test   al,al
  402d94:	je     0x402d9d
  402d96:	mov    DWORD PTR [esi+0x14],0x0
  402d9d:	mov    DWORD PTR [esi],0x430be8
  402da3:	mov    ecx,esi
  402da5:	jmp    DWORD PTR ds:0x4303a8
  402dab:	int3   
  402dac:	int3   
  402dad:	int3   
  402dae:	int3   
  402daf:	int3   
  402db0:	mov    DWORD PTR [ecx],0x430bd8
  402db6:	ret    
  402db7:	int3   
  402db8:	int3   
  402db9:	int3   
  402dba:	int3   
  402dbb:	int3   
  402dbc:	int3   
  402dbd:	int3   
  402dbe:	int3   
  402dbf:	int3   
  402dc0:	sub    ecx,0x10
  402dc3:	jmp    0x402e90
  402dc8:	int3   
  402dc9:	int3   
  402dca:	int3   
  402dcb:	int3   
  402dcc:	int3   
  402dcd:	int3   
  402dce:	int3   
  402dcf:	int3   
  402dd0:	push   0xffffffff
  402dd2:	push   0x42defb
  402dd7:	mov    eax,fs:0x0
  402ddd:	push   eax
  402dde:	push   ecx
  402ddf:	push   esi
  402de0:	push   edi
  402de1:	mov    eax,ds:0x43e020
  402de6:	xor    eax,esp
  402de8:	push   eax
  402de9:	lea    eax,[esp+0x10]
  402ded:	mov    fs:0x0,eax
  402df3:	mov    edi,ecx
  402df5:	push   0x28
  402df7:	call   0x425050
  402dfc:	mov    esi,eax
  402dfe:	add    esp,0x4
  402e01:	mov    DWORD PTR [esp+0xc],esi
  402e05:	xor    eax,eax
  402e07:	mov    DWORD PTR [esp+0x18],eax
  402e0b:	cmp    esi,eax
  402e0d:	je     0x402e36
  402e0f:	lea    eax,[edi-0x24]
  402e12:	push   eax
  402e13:	mov    ecx,esi
  402e15:	call   0x402fa0
  402e1a:	lea    eax,[esi+0x24]
  402e1d:	mov    DWORD PTR [eax],0x430bd8
  402e23:	mov    DWORD PTR [esi],0x430c14
  402e29:	mov    DWORD PTR [esi+0x10],0x430c20
  402e30:	mov    DWORD PTR [eax],0x430c28
  402e36:	mov    ecx,DWORD PTR [esp+0x10]
  402e3a:	mov    DWORD PTR fs:0x0,ecx
  402e41:	pop    ecx
  402e42:	pop    edi
  402e43:	pop    esi
  402e44:	add    esp,0x10
  402e47:	ret    
  402e48:	int3   
  402e49:	int3   
  402e4a:	int3   
  402e4b:	int3   
  402e4c:	int3   
  402e4d:	int3   
  402e4e:	int3   
  402e4f:	int3   
  402e50:	push   ebp
  402e51:	mov    ebp,esp
  402e53:	and    esp,0xfffffff8
  402e56:	sub    esp,0x28
  402e59:	lea    eax,[ecx-0x24]
  402e5c:	push   eax
  402e5d:	lea    ecx,[esp+0x4]
  402e61:	call   0x402fa0
  402e66:	push   0x435794
  402e6b:	lea    eax,[esp+0x4]
  402e6f:	push   eax
  402e70:	mov    DWORD PTR [esp+0x8],0x430c14
  402e78:	mov    DWORD PTR [esp+0x18],0x430c20
  402e80:	mov    DWORD PTR [esp+0x2c],0x430c28
  402e88:	call   0x429e76
  402e8d:	int3   
  402e8e:	int3   
  402e8f:	int3   
  402e90:	push   esi
  402e91:	mov    esi,ecx
  402e93:	mov    DWORD PTR [esi+0x24],0x430bd8
  402e9a:	mov    DWORD PTR [esi],0x430c00
  402ea0:	mov    DWORD PTR [esi+0x10],0x430c0c
  402ea7:	mov    DWORD PTR [esi+0x10],0x430bd0
  402eae:	mov    ecx,DWORD PTR [esi+0x14]
  402eb1:	test   ecx,ecx
  402eb3:	je     0x402ec7
  402eb5:	mov    eax,DWORD PTR [ecx]
  402eb7:	mov    edx,DWORD PTR [eax+0x10]
  402eba:	call   edx
  402ebc:	test   al,al
  402ebe:	je     0x402ec7
  402ec0:	mov    DWORD PTR [esi+0x14],0x0
  402ec7:	mov    ecx,esi
  402ec9:	mov    DWORD PTR [esi],0x430be8
  402ecf:	call   DWORD PTR ds:0x4303a8
  402ed5:	test   BYTE PTR [esp+0x8],0x1
  402eda:	je     0x402ee5
  402edc:	push   esi
  402edd:	call   0x42504a
  402ee2:	add    esp,0x4
  402ee5:	mov    eax,esi
  402ee7:	pop    esi
  402ee8:	ret    0x4
  402eeb:	int3   
  402eec:	int3   
  402eed:	int3   
  402eee:	int3   
  402eef:	int3   
  402ef0:	sub    ecx,0x24
  402ef3:	jmp    0x402e90
  402ef8:	int3   
  402ef9:	int3   
  402efa:	int3   
  402efb:	int3   
  402efc:	int3   
  402efd:	int3   
  402efe:	int3   
  402eff:	int3   
  402f00:	mov    eax,DWORD PTR [esp+0x4]
  402f04:	push   esi
  402f05:	push   eax
  402f06:	mov    esi,ecx
  402f08:	call   0x402fa0
  402f0d:	mov    DWORD PTR [esi+0x24],0x430bd8
  402f14:	mov    DWORD PTR [esi],0x430c14
  402f1a:	mov    DWORD PTR [esi+0x10],0x430c20
  402f21:	mov    DWORD PTR [esi+0x24],0x430c28
  402f28:	mov    eax,esi
  402f2a:	pop    esi
  402f2b:	ret    0x4
  402f2e:	int3   
  402f2f:	int3   
  402f30:	push   esi
  402f31:	mov    esi,ecx
  402f33:	mov    DWORD PTR [esi],0x430c00
  402f39:	mov    DWORD PTR [esi+0x10],0x430c0c
  402f40:	mov    DWORD PTR [esi+0x10],0x430bd0
  402f47:	mov    ecx,DWORD PTR [esi+0x14]
  402f4a:	test   ecx,ecx
  402f4c:	je     0x402f60
  402f4e:	mov    eax,DWORD PTR [ecx]
  402f50:	mov    edx,DWORD PTR [eax+0x10]
  402f53:	call   edx
  402f55:	test   al,al
  402f57:	je     0x402f60
  402f59:	mov    DWORD PTR [esi+0x14],0x0
  402f60:	mov    ecx,esi
  402f62:	mov    DWORD PTR [esi],0x430be8
  402f68:	call   DWORD PTR ds:0x4303a8
  402f6e:	test   BYTE PTR [esp+0x8],0x1
  402f73:	je     0x402f7e
  402f75:	push   esi
  402f76:	call   0x42504a
  402f7b:	add    esp,0x4
  402f7e:	mov    eax,esi
  402f80:	pop    esi
  402f81:	ret    0x4
  402f84:	int3   
  402f85:	int3   
  402f86:	int3   
  402f87:	int3   
  402f88:	int3   
  402f89:	int3   
  402f8a:	int3   
  402f8b:	int3   
  402f8c:	int3   
  402f8d:	int3   
  402f8e:	int3   
  402f8f:	int3   
  402f90:	sub    ecx,0x10
  402f93:	jmp    0x402f30
  402f98:	int3   
  402f99:	int3   
  402f9a:	int3   
  402f9b:	int3   
  402f9c:	int3   
  402f9d:	int3   
  402f9e:	int3   
  402f9f:	int3   
  402fa0:	push   0xffffffff
  402fa2:	push   0x42c978
  402fa7:	mov    eax,fs:0x0
  402fad:	push   eax
  402fae:	push   ecx
  402faf:	push   esi
  402fb0:	push   edi
  402fb1:	mov    eax,ds:0x43e020
  402fb6:	xor    eax,esp
  402fb8:	push   eax
  402fb9:	lea    eax,[esp+0x10]
  402fbd:	mov    fs:0x0,eax
  402fc3:	mov    esi,ecx
  402fc5:	mov    DWORD PTR [esp+0xc],esi
  402fc9:	mov    edi,DWORD PTR [esp+0x20]
  402fcd:	push   edi
  402fce:	call   DWORD PTR ds:0x4303a0
  402fd4:	mov    DWORD PTR [esi],0x430be8
  402fda:	mov    eax,DWORD PTR [edi+0xc]
  402fdd:	mov    DWORD PTR [esi+0xc],eax
  402fe0:	mov    DWORD PTR [esi],0x430bf4
  402fe6:	mov    DWORD PTR [esp+0x18],0x0
  402fee:	mov    DWORD PTR [esi+0x10],0x430bd0
  402ff5:	mov    ecx,DWORD PTR [edi+0x14]
  402ff8:	mov    DWORD PTR [esi+0x14],ecx
  402ffb:	test   ecx,ecx
  402ffd:	je     0x403006
  402fff:	mov    edx,DWORD PTR [ecx]
  403001:	mov    eax,DWORD PTR [edx+0xc]
  403004:	call   eax
  403006:	mov    ecx,DWORD PTR [edi+0x18]
  403009:	mov    DWORD PTR [esi+0x18],ecx
  40300c:	mov    edx,DWORD PTR [edi+0x1c]
  40300f:	mov    DWORD PTR [esi+0x1c],edx
  403012:	mov    eax,DWORD PTR [edi+0x20]
  403015:	mov    DWORD PTR [esi+0x20],eax
  403018:	mov    DWORD PTR [esi],0x430c00
  40301e:	mov    DWORD PTR [esi+0x10],0x430c0c
  403025:	mov    eax,esi
  403027:	mov    ecx,DWORD PTR [esp+0x10]
  40302b:	mov    DWORD PTR fs:0x0,ecx
  403032:	pop    ecx
  403033:	pop    edi
  403034:	pop    esi
  403035:	add    esp,0x10
  403038:	ret    0x4
  40303b:	int3   
  40303c:	int3   
  40303d:	int3   
  40303e:	int3   
  40303f:	int3   
  403040:	push   esi
  403041:	push   edi
  403042:	mov    edi,DWORD PTR [esp+0xc]
  403046:	push   edi
  403047:	mov    esi,ecx
  403049:	call   DWORD PTR ds:0x4303a0
  40304f:	mov    DWORD PTR [esi],0x430be8
  403055:	mov    eax,DWORD PTR [edi+0xc]
  403058:	mov    DWORD PTR [esi+0xc],eax
  40305b:	pop    edi
  40305c:	mov    DWORD PTR [esi],0x430bf4
  403062:	mov    eax,esi
  403064:	pop    esi
  403065:	ret    0x4
  403068:	int3   
  403069:	int3   
  40306a:	int3   
  40306b:	int3   
  40306c:	int3   
  40306d:	int3   
  40306e:	int3   
  40306f:	int3   
  403070:	push   esi
  403071:	push   edi
  403072:	mov    edi,DWORD PTR [esp+0xc]
  403076:	push   edi
  403077:	mov    esi,ecx
  403079:	call   DWORD PTR ds:0x4303a0
  40307f:	mov    DWORD PTR [esi],0x430be8
  403085:	mov    eax,DWORD PTR [edi+0xc]
  403088:	mov    DWORD PTR [esi+0xc],eax
  40308b:	pop    edi
  40308c:	mov    eax,esi
  40308e:	pop    esi
  40308f:	ret    0x4
  403092:	int3   
  403093:	int3   
  403094:	int3   
  403095:	int3   
  403096:	int3   
  403097:	int3   
  403098:	int3   
  403099:	int3   
  40309a:	int3   
  40309b:	int3   
  40309c:	int3   
  40309d:	int3   
  40309e:	int3   
  40309f:	int3   
  4030a0:	mov    ecx,DWORD PTR [esi]
  4030a2:	test   ecx,ecx
  4030a4:	je     0x4030b7
  4030a6:	mov    eax,DWORD PTR [ecx]
  4030a8:	mov    edx,DWORD PTR [eax+0x10]
  4030ab:	call   edx
  4030ad:	test   al,al
  4030af:	je     0x4030b7
  4030b1:	mov    DWORD PTR [esi],0x0
  4030b7:	ret    
  4030b8:	int3   
  4030b9:	int3   
  4030ba:	int3   
  4030bb:	int3   
  4030bc:	int3   
  4030bd:	int3   
  4030be:	int3   
  4030bf:	int3   
  4030c0:	push   esi
  4030c1:	mov    esi,ecx
  4030c3:	push   edi
  4030c4:	mov    edi,DWORD PTR [esp+0xc]
  4030c8:	mov    DWORD PTR [esi],0x430bd0
  4030ce:	mov    ecx,DWORD PTR [edi+0x4]
  4030d1:	mov    DWORD PTR [esi+0x4],ecx
  4030d4:	test   ecx,ecx
  4030d6:	je     0x4030df
  4030d8:	mov    eax,DWORD PTR [ecx]
  4030da:	mov    edx,DWORD PTR [eax+0xc]
  4030dd:	call   edx
  4030df:	mov    eax,DWORD PTR [edi+0x8]
  4030e2:	mov    DWORD PTR [esi+0x8],eax
  4030e5:	mov    ecx,DWORD PTR [edi+0xc]
  4030e8:	mov    DWORD PTR [esi+0xc],ecx
  4030eb:	mov    edx,DWORD PTR [edi+0x10]
  4030ee:	pop    edi
  4030ef:	mov    DWORD PTR [esi+0x10],edx
  4030f2:	mov    eax,esi
  4030f4:	pop    esi
  4030f5:	ret    0x4
  4030f8:	int3   
  4030f9:	int3   
  4030fa:	int3   
  4030fb:	int3   
  4030fc:	int3   
  4030fd:	int3   
  4030fe:	int3   
  4030ff:	int3   
  403100:	test   BYTE PTR [esp+0x4],0x1
  403105:	push   esi
  403106:	mov    esi,ecx
  403108:	mov    DWORD PTR [esi],0x430bd8
  40310e:	je     0x403119
  403110:	push   esi
  403111:	call   0x42504a
  403116:	add    esp,0x4
  403119:	mov    eax,esi
  40311b:	pop    esi
  40311c:	ret    0x4
  40311f:	int3   
  403120:	mov    eax,ecx
  403122:	mov    DWORD PTR [eax],0x430bd8
  403128:	ret    0x4
  40312b:	int3   
  40312c:	int3   
  40312d:	int3   
  40312e:	int3   
  40312f:	int3   
  403130:	push   0xffffffff
  403132:	push   0x42de88
  403137:	mov    eax,fs:0x0
  40313d:	push   eax
  40313e:	sub    esp,0x4c
  403141:	push   ebx
  403142:	push   esi
  403143:	mov    eax,ds:0x43e020
  403148:	xor    eax,esp
  40314a:	push   eax
  40314b:	lea    eax,[esp+0x58]
  40314f:	mov    fs:0x0,eax
  403155:	lea    esi,[esp+0xc]
  403159:	call   0x402cd0
  40315e:	mov    ebx,eax
  403160:	lea    esi,[esp+0x30]
  403164:	mov    DWORD PTR [esp+0x60],0x0
  40316c:	call   0x402cb0
  403171:	push   0x435794
  403176:	mov    eax,esi
  403178:	push   eax
  403179:	call   0x429e76
  40317e:	int3   
  40317f:	int3   
  403180:	push   esi
  403181:	mov    esi,ecx
  403183:	mov    DWORD PTR [esi],0x430be8
  403189:	call   DWORD PTR ds:0x4303a8
  40318f:	test   BYTE PTR [esp+0x8],0x1
  403194:	je     0x40319f
  403196:	push   esi
  403197:	call   0x42504a
  40319c:	add    esp,0x4
  40319f:	mov    eax,esi
  4031a1:	pop    esi
  4031a2:	ret    0x4
  4031a5:	int3   
  4031a6:	int3   
  4031a7:	int3   
  4031a8:	int3   
  4031a9:	int3   
  4031aa:	int3   
  4031ab:	int3   
  4031ac:	int3   
  4031ad:	int3   
  4031ae:	int3   
  4031af:	int3   
  4031b0:	mov    eax,0x430bac
  4031b5:	ret    
  4031b6:	int3   
  4031b7:	int3   
  4031b8:	int3   
  4031b9:	int3   
  4031ba:	int3   
  4031bb:	int3   
  4031bc:	int3   
  4031bd:	int3   
  4031be:	int3   
  4031bf:	int3   
  4031c0:	push   ebp
  4031c1:	mov    ebp,esp
  4031c3:	and    esp,0xfffffff8
  4031c6:	push   0xffffffff
  4031c8:	push   0x42e7c8
  4031cd:	mov    eax,fs:0x0
  4031d3:	push   eax
  4031d4:	sub    esp,0x24
  4031d7:	push   esi
  4031d8:	push   edi
  4031d9:	mov    eax,ds:0x43e020
  4031de:	xor    eax,esp
  4031e0:	push   eax
  4031e1:	lea    eax,[esp+0x30]
  4031e5:	mov    fs:0x0,eax
  4031eb:	mov    esi,DWORD PTR ds:0x4300f8
  4031f1:	xor    edi,edi
  4031f3:	push   edi
  4031f4:	push   0x7fffffff
  4031f9:	push   edi
  4031fa:	push   edi
  4031fb:	call   esi
  4031fd:	cmp    eax,edi
  4031ff:	jne    0x403224
  403201:	lea    ecx,[esp+0xc]
  403205:	call   DWORD PTR ds:0x4303ac
  40320b:	mov    DWORD PTR [esp+0x18],edi
  40320f:	mov    DWORD PTR [esp+0xc],0x430bf4
  403217:	mov    DWORD PTR [esp+0x38],edi
  40321b:	lea    edi,[esp+0xc]
  40321f:	call   0x403130
  403224:	push   edi
  403225:	push   0x7fffffff
  40322a:	push   edi
  40322b:	push   edi
  40322c:	mov    ds:0x43fe70,eax
  403231:	call   esi
  403233:	cmp    eax,edi
  403235:	jne    0x40325e
  403237:	lea    ecx,[esp+0xc]
  40323b:	call   DWORD PTR ds:0x4303ac
  403241:	mov    DWORD PTR [esp+0x18],edi
  403245:	mov    DWORD PTR [esp+0xc],0x430bf4
  40324d:	lea    edi,[esp+0xc]
  403251:	mov    DWORD PTR [esp+0x38],0x1
  403259:	call   0x403130
  40325e:	push   edi
  40325f:	push   0x7fffffff
  403264:	push   edi
  403265:	push   edi
  403266:	mov    ds:0x43fe74,eax
  40326b:	call   esi
  40326d:	cmp    eax,edi
  40326f:	jne    0x403298
  403271:	lea    ecx,[esp+0x1c]
  403275:	call   DWORD PTR ds:0x4303ac
  40327b:	mov    DWORD PTR [esp+0x28],edi
  40327f:	mov    DWORD PTR [esp+0x1c],0x430bf4
  403287:	lea    edi,[esp+0x1c]
  40328b:	mov    DWORD PTR [esp+0x38],0x2
  403293:	call   0x403130
  403298:	mov    ds:0x43fe78,eax
  40329d:	mov    DWORD PTR ds:0x43fe6c,edi
  4032a3:	mov    eax,0x43fe6c
  4032a8:	mov    ecx,DWORD PTR [esp+0x30]
  4032ac:	mov    DWORD PTR fs:0x0,ecx
  4032b3:	pop    ecx
  4032b4:	pop    edi
  4032b5:	pop    esi
  4032b6:	mov    esp,ebp
  4032b8:	pop    ebp
  4032b9:	ret    
  4032ba:	int3   
  4032bb:	int3   
  4032bc:	int3   
  4032bd:	int3   
  4032be:	int3   
  4032bf:	int3   
  4032c0:	test   BYTE PTR [esp+0x4],0x1
  4032c5:	push   esi
  4032c6:	mov    esi,ecx
  4032c8:	mov    DWORD PTR [esi],0x430d90
  4032ce:	je     0x4032d9
  4032d0:	push   esi
  4032d1:	call   0x42504a
  4032d6:	add    esp,0x4
  4032d9:	mov    eax,esi
  4032db:	pop    esi
  4032dc:	ret    0x4
  4032df:	int3   
  4032e0:	push   0xffffffff
  4032e2:	push   0x42b898
  4032e7:	mov    eax,fs:0x0
  4032ed:	push   eax
  4032ee:	push   esi
  4032ef:	mov    eax,ds:0x43e020
  4032f4:	xor    eax,esp
  4032f6:	push   eax
  4032f7:	lea    eax,[esp+0x8]
  4032fb:	mov    fs:0x0,eax
  403301:	mov    esi,DWORD PTR [esp+0x18]
  403305:	mov    DWORD PTR [esi],0x430da0
  40330b:	mov    DWORD PTR [esp+0x10],0x0
  403313:	mov    eax,DWORD PTR [esi+0x8]
  403316:	test   eax,eax
  403318:	je     0x40333a
  40331a:	test   al,0x1
  40331c:	jne    0x403333
  40331e:	and    eax,0xfffffffe
  403321:	mov    eax,DWORD PTR [eax]
  403323:	lea    ecx,[esi+0x10]
  403326:	test   eax,eax
  403328:	je     0x403333
  40332a:	push   0x2
  40332c:	push   ecx
  40332d:	push   ecx
  40332e:	call   eax
  403330:	add    esp,0xc
  403333:	mov    DWORD PTR [esi+0x8],0x0
  40333a:	mov    DWORD PTR [esi],0x430d90
  403340:	mov    ecx,DWORD PTR [esp+0x8]
  403344:	mov    DWORD PTR fs:0x0,ecx
  40334b:	pop    ecx
  40334c:	pop    esi
  40334d:	add    esp,0xc
  403350:	ret    0x4
  403353:	int3   
  403354:	int3   
  403355:	int3   
  403356:	int3   
  403357:	int3   
  403358:	int3   
  403359:	int3   
  40335a:	int3   
  40335b:	int3   
  40335c:	int3   
  40335d:	int3   
  40335e:	int3   
  40335f:	int3   
  403360:	push   ebp
  403361:	mov    ebp,esp
  403363:	push   0xfffffffe
  403365:	push   0x439190
  40336a:	push   0x4256c9
  40336f:	mov    eax,fs:0x0
  403375:	push   eax
  403376:	sub    esp,0x8
  403379:	push   ebx
  40337a:	push   esi
  40337b:	push   edi
  40337c:	mov    eax,ds:0x43e020
  403381:	xor    DWORD PTR [ebp-0x8],eax
  403384:	xor    eax,ebp
  403386:	push   eax
  403387:	lea    eax,[ebp-0x10]
  40338a:	mov    fs:0x0,eax
  403390:	mov    DWORD PTR [ebp-0x18],esp
  403393:	add    ecx,0x8
  403396:	mov    eax,DWORD PTR [ecx]
  403398:	neg    eax
  40339a:	sbb    eax,eax
  40339c:	test   eax,0x4029a0
  4033a1:	je     0x4033cd
  4033a3:	mov    DWORD PTR [ebp-0x4],0x0
  4033aa:	call   0x403980
  4033af:	jmp    0x4033c6
  4033b1:	mov    eax,DWORD PTR [ebp-0x14]
  4033b4:	mov    ecx,DWORD PTR [eax]
  4033b6:	mov    ecx,DWORD PTR [ecx]
  4033b8:	push   eax
  4033b9:	push   ecx
  4033ba:	call   0x404c00
  4033bf:	add    esp,0x8
  4033c2:	ret    
  4033c3:	mov    esp,DWORD PTR [ebp-0x18]
  4033c6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  4033cd:	mov    ecx,DWORD PTR [ebp-0x10]
  4033d0:	mov    DWORD PTR fs:0x0,ecx
  4033d7:	pop    ecx
  4033d8:	pop    edi
  4033d9:	pop    esi
  4033da:	pop    ebx
  4033db:	mov    esp,ebp
  4033dd:	pop    ebp
  4033de:	ret    
  4033df:	int3   
  4033e0:	push   esi
  4033e1:	mov    esi,ecx
  4033e3:	push   esi
  4033e4:	call   0x4032e0
  4033e9:	test   BYTE PTR [esp+0x8],0x1
  4033ee:	je     0x4033f9
  4033f0:	push   esi
  4033f1:	call   0x42504a
  4033f6:	add    esp,0x4
  4033f9:	mov    eax,esi
  4033fb:	pop    esi
  4033fc:	ret    0x4
  4033ff:	int3   
  403400:	push   0xffffffff
  403402:	push   0x42cc39
  403407:	mov    eax,fs:0x0
  40340d:	push   eax
  40340e:	push   esi
  40340f:	push   edi
  403410:	mov    eax,ds:0x43e020
  403415:	xor    eax,esp
  403417:	push   eax
  403418:	lea    eax,[esp+0xc]
  40341c:	mov    fs:0x0,eax
  403422:	push   0x28
  403424:	call   0x425050
  403429:	add    esp,0x4
  40342c:	test   eax,eax
  40342e:	je     0x403441
  403430:	mov    DWORD PTR [eax],0x430da0
  403436:	mov    DWORD PTR [eax+0x8],0x0
  40343d:	mov    edi,eax
  40343f:	jmp    0x403443
  403441:	xor    edi,edi
  403443:	mov    ecx,DWORD PTR [esp+0x1c]
  403447:	lea    edx,[edi+0x8]
  40344a:	call   0x4038a0
  40344f:	mov    esi,DWORD PTR ds:0x43fe7c
  403455:	push   0x22
  403457:	push   0x430c3c
  40345c:	push   0x430c5c
  403461:	lea    ecx,[esp+0x28]
  403465:	call   DWORD PTR ds:0x430000
  40346b:	push   edi
  40346c:	mov    DWORD PTR [esp+0x18],0x0
  403474:	mov    edx,DWORD PTR [esi]
  403476:	push   eax
  403477:	mov    eax,DWORD PTR [edx+0x1c]
  40347a:	push   0x430c34
  40347f:	mov    ecx,esi
  403481:	call   eax
  403483:	lea    ecx,[esp+0x1c]
  403487:	mov    DWORD PTR [esp+0x14],0xffffffff
  40348f:	call   DWORD PTR ds:0x430004
  403495:	mov    ecx,DWORD PTR [esp+0xc]
  403499:	mov    DWORD PTR fs:0x0,ecx
  4034a0:	pop    ecx
  4034a1:	pop    edi
  4034a2:	pop    esi
  4034a3:	add    esp,0xc
  4034a6:	ret    0x4
  4034a9:	int3   
  4034aa:	int3   
  4034ab:	int3   
  4034ac:	int3   
  4034ad:	int3   
  4034ae:	int3   
  4034af:	int3   
  4034b0:	push   0xffffffff
  4034b2:	push   0x42cc39
  4034b7:	mov    eax,fs:0x0
  4034bd:	push   eax
  4034be:	push   esi
  4034bf:	push   edi
  4034c0:	mov    eax,ds:0x43e020
  4034c5:	xor    eax,esp
  4034c7:	push   eax
  4034c8:	lea    eax,[esp+0xc]
  4034cc:	mov    fs:0x0,eax
  4034d2:	push   0x28
  4034d4:	call   0x425050
  4034d9:	add    esp,0x4
  4034dc:	test   eax,eax
  4034de:	je     0x4034f1
  4034e0:	mov    DWORD PTR [eax],0x430da0
  4034e6:	mov    DWORD PTR [eax+0x8],0x0
  4034ed:	mov    edi,eax
  4034ef:	jmp    0x4034f3
  4034f1:	xor    edi,edi
  4034f3:	mov    ecx,DWORD PTR [esp+0x1c]
  4034f7:	lea    edx,[edi+0x8]
  4034fa:	call   0x4038a0
  4034ff:	mov    esi,DWORD PTR ds:0x43fe7c
  403505:	push   0x29
  403507:	push   0x430c74
  40350c:	push   0x430c5c
  403511:	lea    ecx,[esp+0x28]
  403515:	call   DWORD PTR ds:0x430000
  40351b:	push   edi
  40351c:	mov    DWORD PTR [esp+0x18],0x0
  403524:	mov    edx,DWORD PTR [esi]
  403526:	push   eax
  403527:	mov    eax,DWORD PTR [edx+0x1c]
  40352a:	push   0x430c38
  40352f:	mov    ecx,esi
  403531:	call   eax
  403533:	lea    ecx,[esp+0x1c]
  403537:	mov    DWORD PTR [esp+0x14],0xffffffff
  40353f:	call   DWORD PTR ds:0x430004
  403545:	mov    ecx,DWORD PTR [esp+0xc]
  403549:	mov    DWORD PTR fs:0x0,ecx
  403550:	pop    ecx
  403551:	pop    edi
  403552:	pop    esi
  403553:	add    esp,0xc
  403556:	ret    0x4
  403559:	int3   
  40355a:	int3   
  40355b:	int3   
  40355c:	int3   
  40355d:	int3   
  40355e:	int3   
  40355f:	int3   
  403560:	push   0xffffffff
  403562:	push   0x42cc39
  403567:	mov    eax,fs:0x0
  40356d:	push   eax
  40356e:	push   esi
  40356f:	push   edi
  403570:	mov    eax,ds:0x43e020
  403575:	xor    eax,esp
  403577:	push   eax
  403578:	lea    eax,[esp+0xc]
  40357c:	mov    fs:0x0,eax
  403582:	push   0x28
  403584:	call   0x425050
  403589:	add    esp,0x4
  40358c:	test   eax,eax
  40358e:	je     0x4035a1
  403590:	mov    DWORD PTR [eax],0x430da0
  403596:	mov    DWORD PTR [eax+0x8],0x0
  40359d:	mov    edi,eax
  40359f:	jmp    0x4035a3
  4035a1:	xor    edi,edi
  4035a3:	mov    ecx,DWORD PTR [esp+0x1c]
  4035a7:	lea    edx,[edi+0x8]
  4035aa:	call   0x4038a0
  4035af:	mov    esi,DWORD PTR ds:0x43fe7c
  4035b5:	push   0x30
  4035b7:	push   0x430c94
  4035bc:	push   0x430c5c
  4035c1:	lea    ecx,[esp+0x28]
  4035c5:	call   DWORD PTR ds:0x430000
  4035cb:	push   0x3e8
  4035d0:	push   edi
  4035d1:	mov    DWORD PTR [esp+0x1c],0x0
  4035d9:	mov    edx,DWORD PTR [esi]
  4035db:	push   eax
  4035dc:	mov    eax,DWORD PTR [edx+0x20]
  4035df:	push   0x430c34
  4035e4:	mov    ecx,esi
  4035e6:	call   eax
  4035e8:	lea    ecx,[esp+0x1c]
  4035ec:	mov    esi,eax
  4035ee:	mov    DWORD PTR [esp+0x14],0xffffffff
  4035f6:	call   DWORD PTR ds:0x430004
  4035fc:	mov    eax,esi
  4035fe:	mov    ecx,DWORD PTR [esp+0xc]
  403602:	mov    DWORD PTR fs:0x0,ecx
  403609:	pop    ecx
  40360a:	pop    edi
  40360b:	pop    esi
  40360c:	add    esp,0xc
  40360f:	ret    0x4
  403612:	int3   
  403613:	int3   
  403614:	int3   
  403615:	int3   
  403616:	int3   
  403617:	int3   
  403618:	int3   
  403619:	int3   
  40361a:	int3   
  40361b:	int3   
  40361c:	int3   
  40361d:	int3   
  40361e:	int3   
  40361f:	int3   
  403620:	push   0xffffffff
  403622:	push   0x42b23c
  403627:	mov    eax,fs:0x0
  40362d:	push   eax
  40362e:	push   ecx
  40362f:	mov    eax,ds:0x43e020
  403634:	xor    eax,esp
  403636:	push   eax
  403637:	lea    eax,[esp+0x8]
  40363b:	mov    fs:0x0,eax
  403641:	mov    DWORD PTR [esp+0x4],0x43fe7c
  403649:	mov    DWORD PTR [esp+0x10],0x0
  403651:	mov    ecx,DWORD PTR ds:0x43fe7c
  403657:	test   ecx,ecx
  403659:	je     0x403693
  40365b:	cmp    DWORD PTR ds:0x43fe94,0x0
  403662:	jne    0x40366e
  403664:	mov    eax,DWORD PTR [ecx]
  403666:	mov    edx,DWORD PTR [eax]
  403668:	push   0x1
  40366a:	call   edx
  40366c:	jmp    0x403689
  40366e:	cmp    DWORD PTR ds:0x43fe98,0x10
  403675:	mov    eax,ds:0x43fe84
  40367a:	jae    0x403681
  40367c:	mov    eax,0x43fe84
  403681:	push   ecx
  403682:	push   eax
  403683:	call   DWORD PTR ds:0x4303bc
  403689:	mov    DWORD PTR ds:0x43fe7c,0x0
  403693:	mov    ecx,0x43fe80
  403698:	mov    DWORD PTR [esp+0x10],0xffffffff
  4036a0:	call   DWORD PTR ds:0x43025c
  4036a6:	mov    ecx,DWORD PTR [esp+0x8]
  4036aa:	mov    DWORD PTR fs:0x0,ecx
  4036b1:	pop    ecx
  4036b2:	add    esp,0x10
  4036b5:	ret    
  4036b6:	int3   
  4036b7:	int3   
  4036b8:	int3   
  4036b9:	int3   
  4036ba:	int3   
  4036bb:	int3   
  4036bc:	int3   
  4036bd:	int3   
  4036be:	int3   
  4036bf:	int3   
  4036c0:	push   0xffffffff
  4036c2:	push   0x42b016
  4036c7:	mov    eax,fs:0x0
  4036cd:	push   eax
  4036ce:	sub    esp,0x50
  4036d1:	mov    eax,ds:0x43e020
  4036d6:	xor    eax,esp
  4036d8:	mov    DWORD PTR [esp+0x4c],eax
  4036dc:	mov    eax,ds:0x43e020
  4036e1:	xor    eax,esp
  4036e3:	push   eax
  4036e4:	lea    eax,[esp+0x54]
  4036e8:	mov    fs:0x0,eax
  4036ee:	cmp    DWORD PTR ds:0x43fe7c,0x0
  4036f5:	je     0x403792
  4036fb:	lea    ecx,[esp+0x18]
  4036ff:	call   DWORD PTR ds:0x430260
  403705:	push   0x43fe80
  40370a:	lea    eax,[esp+0x38]
  40370e:	push   0x430cb4
  403713:	push   eax
  403714:	mov    DWORD PTR [esp+0x68],0x0
  40371c:	call   DWORD PTR ds:0x430170
  403722:	add    esp,0xc
  403725:	push   eax
  403726:	lea    ecx,[esp+0x1c]
  40372a:	mov    BYTE PTR [esp+0x60],0x1
  40372f:	call   DWORD PTR ds:0x430174
  403735:	lea    ecx,[esp+0x34]
  403739:	mov    BYTE PTR [esp+0x5c],0x0
  40373e:	call   DWORD PTR ds:0x43025c
  403744:	push   0x2a
  403746:	push   0x430cf0
  40374b:	push   0x430d24
  403750:	lea    ecx,[esp+0x10]
  403754:	call   DWORD PTR ds:0x430000
  40375a:	mov    BYTE PTR [esp+0x5c],0x2
  40375f:	cmp    DWORD PTR [esp+0x30],0x10
  403764:	mov    eax,DWORD PTR [esp+0x1c]
  403768:	jae    0x40376e
  40376a:	lea    eax,[esp+0x1c]
  40376e:	push   0x10000010
  403773:	push   eax
  403774:	lea    ecx,[esp+0xc]
  403778:	push   ecx
  403779:	lea    ecx,[esp+0x18]
  40377d:	call   DWORD PTR ds:0x430008
  403783:	push   0x43581c
  403788:	lea    edx,[esp+0x10]
  40378c:	push   edx
  40378d:	call   0x429e76
  403792:	push   0x430ac0
  403797:	mov    ecx,0x43fe80
  40379c:	call   DWORD PTR ds:0x430178
  4037a2:	push   0x430ac0
  4037a7:	call   DWORD PTR ds:0x4303b8
  4037ad:	mov    ds:0x43fe7c,eax
  4037b2:	test   eax,eax
  4037b4:	jne    0x403851
  4037ba:	lea    ecx,[esp+0x34]
  4037be:	call   DWORD PTR ds:0x430260
  4037c4:	push   0x43fe80
  4037c9:	lea    eax,[esp+0x1c]
  4037cd:	push   0x430d64
  4037d2:	push   eax
  4037d3:	mov    DWORD PTR [esp+0x68],0x3
  4037db:	call   DWORD PTR ds:0x430170
  4037e1:	add    esp,0xc
  4037e4:	push   eax
  4037e5:	lea    ecx,[esp+0x38]
  4037e9:	mov    BYTE PTR [esp+0x60],0x4
  4037ee:	call   DWORD PTR ds:0x430174
  4037f4:	lea    ecx,[esp+0x18]
  4037f8:	mov    BYTE PTR [esp+0x5c],0x3
  4037fd:	call   DWORD PTR ds:0x43025c
  403803:	push   0x33
  403805:	push   0x430cf0
  40380a:	push   0x430d24
  40380f:	lea    ecx,[esp+0x14]
  403813:	call   DWORD PTR ds:0x430000
  403819:	mov    BYTE PTR [esp+0x5c],0x5
  40381e:	cmp    DWORD PTR [esp+0x4c],0x10
  403823:	mov    eax,DWORD PTR [esp+0x38]
  403827:	jae    0x40382d
  403829:	lea    eax,[esp+0x38]
  40382d:	push   0x10000010
  403832:	push   eax
  403833:	lea    ecx,[esp+0x10]
  403837:	push   ecx
  403838:	lea    ecx,[esp+0x18]
  40383c:	call   DWORD PTR ds:0x430008
  403842:	push   0x43581c
  403847:	lea    edx,[esp+0x10]
  40384b:	push   edx
  40384c:	call   0x429e76
  403851:	mov    eax,0x1
  403856:	mov    ecx,DWORD PTR [esp+0x54]
  40385a:	mov    DWORD PTR fs:0x0,ecx
  403861:	pop    ecx
  403862:	mov    ecx,DWORD PTR [esp+0x4c]
  403866:	xor    ecx,esp
  403868:	call   0x42503a
  40386d:	add    esp,0x5c
  403870:	ret    
  403871:	int3   
  403872:	int3   
  403873:	int3   
  403874:	int3   
  403875:	int3   
  403876:	int3   
  403877:	int3   
  403878:	int3   
  403879:	int3   
  40387a:	int3   
  40387b:	int3   
  40387c:	int3   
  40387d:	int3   
  40387e:	int3   
  40387f:	int3   
  403880:	mov    DWORD PTR [eax],0x430d90
  403886:	ret    
  403887:	int3   
  403888:	int3   
  403889:	int3   
  40388a:	int3   
  40388b:	int3   
  40388c:	int3   
  40388d:	int3   
  40388e:	int3   
  40388f:	int3   
  403890:	jmp    0x403360
  403895:	int3   
  403896:	int3   
  403897:	int3   
  403898:	int3   
  403899:	int3   
  40389a:	int3   
  40389b:	int3   
  40389c:	int3   
  40389d:	int3   
  40389e:	int3   
  40389f:	int3   
  4038a0:	push   ebp
  4038a1:	mov    ebp,esp
  4038a3:	and    esp,0xfffffff8
  4038a6:	push   0xffffffff
  4038a8:	push   0x42c2b8
  4038ad:	mov    eax,fs:0x0
  4038b3:	push   eax
  4038b4:	sub    esp,0x24
  4038b7:	push   esi
  4038b8:	push   edi
  4038b9:	mov    eax,ds:0x43e020
  4038be:	xor    eax,esp
  4038c0:	push   eax
  4038c1:	lea    eax,[esp+0x30]
  4038c5:	mov    fs:0x0,eax
  4038cb:	mov    esi,edx
  4038cd:	mov    eax,DWORD PTR [ecx]
  4038cf:	mov    DWORD PTR [esp+0xc],0x0
  4038d7:	test   eax,eax
  4038d9:	je     0x403924
  4038db:	mov    DWORD PTR [esp+0xc],eax
  4038df:	test   al,0x1
  4038e1:	je     0x40390f
  4038e3:	mov    eax,DWORD PTR [ecx+0x8]
  4038e6:	mov    edx,DWORD PTR [ecx+0xc]
  4038e9:	mov    DWORD PTR [esp+0x14],eax
  4038ed:	mov    eax,DWORD PTR [ecx+0x10]
  4038f0:	mov    DWORD PTR [esp+0x18],edx
  4038f4:	mov    edx,DWORD PTR [ecx+0x14]
  4038f7:	mov    DWORD PTR [esp+0x1c],eax
  4038fb:	mov    eax,DWORD PTR [ecx+0x18]
  4038fe:	mov    ecx,DWORD PTR [ecx+0x1c]
  403901:	mov    DWORD PTR [esp+0x20],edx
  403905:	mov    DWORD PTR [esp+0x24],eax
  403909:	mov    DWORD PTR [esp+0x28],ecx
  40390d:	jmp    0x403924
  40390f:	push   0x0
  403911:	lea    edx,[esp+0x18]
  403915:	and    eax,0xfffffffe
  403918:	mov    eax,DWORD PTR [eax]
  40391a:	push   edx
  40391b:	add    ecx,0x8
  40391e:	push   ecx
  40391f:	call   eax
  403921:	add    esp,0xc
  403924:	lea    edi,[esp+0xc]
  403928:	mov    DWORD PTR [esp+0x38],0x0
  403930:	call   0x4039f0
  403935:	mov    DWORD PTR [esp+0x38],0xffffffff
  40393d:	mov    eax,DWORD PTR [esp+0xc]
  403941:	test   eax,eax
  403943:	je     0x403961
  403945:	test   al,0x1
  403947:	jne    0x403961
  403949:	and    eax,0xfffffffe
  40394c:	mov    eax,DWORD PTR [eax]
  40394e:	test   eax,eax
  403950:	je     0x403961
  403952:	lea    ecx,[esp+0x14]
  403956:	push   0x2
  403958:	push   ecx
  403959:	mov    edx,ecx
  40395b:	push   edx
  40395c:	call   eax
  40395e:	add    esp,0xc
  403961:	mov    eax,esi
  403963:	mov    ecx,DWORD PTR [esp+0x30]
  403967:	mov    DWORD PTR fs:0x0,ecx
  40396e:	pop    ecx
  40396f:	pop    edi
  403970:	pop    esi
  403971:	mov    esp,ebp
  403973:	pop    ebp
  403974:	ret    
  403975:	int3   
  403976:	int3   
  403977:	int3   
  403978:	int3   
  403979:	int3   
  40397a:	int3   
  40397b:	int3   
  40397c:	int3   
  40397d:	int3   
  40397e:	int3   
  40397f:	int3   
  403980:	push   ebp
  403981:	mov    ebp,esp
  403983:	and    esp,0xfffffff8
  403986:	push   0xffffffff
  403988:	push   0x42d5f8
  40398d:	mov    eax,fs:0x0
  403993:	push   eax
  403994:	sub    esp,0x2c
  403997:	mov    eax,ds:0x43e020
  40399c:	xor    eax,esp
  40399e:	push   eax
  40399f:	lea    eax,[esp+0x30]
  4039a3:	mov    fs:0x0,eax
  4039a9:	mov    eax,DWORD PTR [ecx]
  4039ab:	test   eax,eax
  4039ad:	jne    0x4039c7
  4039af:	lea    eax,[esp+0x4]
  4039b3:	push   eax
  4039b4:	call   0x404050
  4039b9:	push   eax
  4039ba:	mov    DWORD PTR [esp+0x3c],0x0
  4039c2:	call   0x403ba0
  4039c7:	add    ecx,0x8
  4039ca:	and    eax,0xfffffffe
  4039cd:	push   ecx
  4039ce:	mov    ecx,DWORD PTR [eax+0x4]
  4039d1:	call   ecx
  4039d3:	add    esp,0x4
  4039d6:	mov    ecx,DWORD PTR [esp+0x30]
  4039da:	mov    DWORD PTR fs:0x0,ecx
  4039e1:	pop    ecx
  4039e2:	mov    esp,ebp
  4039e4:	pop    ebp
  4039e5:	ret    
  4039e6:	int3   
  4039e7:	int3   
  4039e8:	int3   
  4039e9:	int3   
  4039ea:	int3   
  4039eb:	int3   
  4039ec:	int3   
  4039ed:	int3   
  4039ee:	int3   
  4039ef:	int3   
  4039f0:	push   0xffffffff
  4039f2:	push   0x42c288
  4039f7:	mov    eax,fs:0x0
  4039fd:	push   eax
  4039fe:	sub    esp,0x24
  403a01:	mov    eax,ds:0x43e020
  403a06:	xor    eax,esp
  403a08:	push   eax
  403a09:	lea    eax,[esp+0x28]
  403a0d:	mov    fs:0x0,eax
  403a13:	cmp    esi,edi
  403a15:	je     0x403a71
  403a17:	mov    DWORD PTR [esp+0x4],0x0
  403a1f:	lea    eax,[esp+0x4]
  403a23:	push   eax
  403a24:	mov    ecx,edi
  403a26:	mov    DWORD PTR [esp+0x34],0x0
  403a2e:	call   0x403a90
  403a33:	push   edi
  403a34:	mov    ecx,esi
  403a36:	call   0x403a90
  403a3b:	push   esi
  403a3c:	lea    ecx,[esp+0x8]
  403a40:	call   0x403a90
  403a45:	mov    DWORD PTR [esp+0x30],0xffffffff
  403a4d:	mov    eax,DWORD PTR [esp+0x4]
  403a51:	test   eax,eax
  403a53:	je     0x403a71
  403a55:	test   al,0x1
  403a57:	jne    0x403a71
  403a59:	and    eax,0xfffffffe
  403a5c:	mov    eax,DWORD PTR [eax]
  403a5e:	test   eax,eax
  403a60:	je     0x403a71
  403a62:	lea    ecx,[esp+0xc]
  403a66:	push   0x2
  403a68:	push   ecx
  403a69:	mov    edx,ecx
  403a6b:	push   edx
  403a6c:	call   eax
  403a6e:	add    esp,0xc
  403a71:	mov    ecx,DWORD PTR [esp+0x28]
  403a75:	mov    DWORD PTR fs:0x0,ecx
  403a7c:	pop    ecx
  403a7d:	add    esp,0x30
  403a80:	ret    
  403a81:	int3   
  403a82:	int3   
  403a83:	int3   
  403a84:	int3   
  403a85:	int3   
  403a86:	int3   
  403a87:	int3   
  403a88:	int3   
  403a89:	int3   
  403a8a:	int3   
  403a8b:	int3   
  403a8c:	int3   
  403a8d:	int3   
  403a8e:	int3   
  403a8f:	int3   
  403a90:	push   ebp
  403a91:	mov    ebp,esp
  403a93:	push   0xffffffff
  403a95:	push   0x42c260
  403a9a:	mov    eax,fs:0x0
  403aa0:	push   eax
  403aa1:	push   ecx
  403aa2:	push   ebx
  403aa3:	push   esi
  403aa4:	push   edi
  403aa5:	mov    eax,ds:0x43e020
  403aaa:	xor    eax,ebp
  403aac:	push   eax
  403aad:	lea    eax,[ebp-0xc]
  403ab0:	mov    fs:0x0,eax
  403ab6:	mov    DWORD PTR [ebp-0x10],esp
  403ab9:	mov    edi,ecx
  403abb:	mov    esi,DWORD PTR [ebp+0x8]
  403abe:	cmp    edi,esi
  403ac0:	je     0x403b6d
  403ac6:	mov    DWORD PTR [ebp-0x4],0x0
  403acd:	mov    eax,DWORD PTR [edi]
  403acf:	test   eax,eax
  403ad1:	je     0x403b48
  403ad3:	mov    DWORD PTR [esi],eax
  403ad5:	test   al,0x1
  403ad7:	je     0x403b1a
  403ad9:	mov    ecx,DWORD PTR [edi+0x8]
  403adc:	mov    DWORD PTR [esi+0x8],ecx
  403adf:	mov    edx,DWORD PTR [edi+0xc]
  403ae2:	lea    eax,[esi+0x8]
  403ae5:	mov    DWORD PTR [eax+0x4],edx
  403ae8:	mov    ecx,DWORD PTR [edi+0x10]
  403aeb:	mov    DWORD PTR [eax+0x8],ecx
  403aee:	mov    edx,DWORD PTR [edi+0x14]
  403af1:	mov    DWORD PTR [eax+0xc],edx
  403af4:	mov    ecx,DWORD PTR [edi+0x18]
  403af7:	mov    DWORD PTR [eax+0x10],ecx
  403afa:	mov    edx,DWORD PTR [edi+0x1c]
  403afd:	mov    DWORD PTR [eax+0x14],edx
  403b00:	mov    DWORD PTR [edi],0x0
  403b06:	mov    ecx,DWORD PTR [ebp-0xc]
  403b09:	mov    DWORD PTR fs:0x0,ecx
  403b10:	pop    ecx
  403b11:	pop    edi
  403b12:	pop    esi
  403b13:	pop    ebx
  403b14:	mov    esp,ebp
  403b16:	pop    ebp
  403b17:	ret    0x4
  403b1a:	push   0x1
  403b1c:	add    esi,0x8
  403b1f:	and    eax,0xfffffffe
  403b22:	mov    edx,DWORD PTR [eax]
  403b24:	lea    ecx,[edi+0x8]
  403b27:	push   esi
  403b28:	push   ecx
  403b29:	call   edx
  403b2b:	add    esp,0xc
  403b2e:	mov    DWORD PTR [edi],0x0
  403b34:	mov    ecx,DWORD PTR [ebp-0xc]
  403b37:	mov    DWORD PTR fs:0x0,ecx
  403b3e:	pop    ecx
  403b3f:	pop    edi
  403b40:	pop    esi
  403b41:	pop    ebx
  403b42:	mov    esp,ebp
  403b44:	pop    ebp
  403b45:	ret    0x4
  403b48:	mov    eax,DWORD PTR [esi]
  403b4a:	test   eax,eax
  403b4c:	je     0x403b6d
  403b4e:	test   al,0x1
  403b50:	jne    0x403b67
  403b52:	and    eax,0xfffffffe
  403b55:	mov    eax,DWORD PTR [eax]
  403b57:	lea    ecx,[esi+0x8]
  403b5a:	test   eax,eax
  403b5c:	je     0x403b67
  403b5e:	push   0x2
  403b60:	push   ecx
  403b61:	push   ecx
  403b62:	call   eax
  403b64:	add    esp,0xc
  403b67:	mov    DWORD PTR [esi],0x0
  403b6d:	mov    ecx,DWORD PTR [ebp-0xc]
  403b70:	mov    DWORD PTR fs:0x0,ecx
  403b77:	pop    ecx
  403b78:	pop    edi
  403b79:	pop    esi
  403b7a:	pop    ebx
  403b7b:	mov    esp,ebp
  403b7d:	pop    ebp
  403b7e:	ret    0x4
  403b81:	mov    eax,DWORD PTR [ebp+0x8]
  403b84:	push   0x0
  403b86:	push   0x0
  403b88:	mov    DWORD PTR [eax],0x0
  403b8e:	call   0x429e76
  403b93:	int3   
  403b94:	int3   
  403b95:	int3   
  403b96:	int3   
  403b97:	int3   
  403b98:	int3   
  403b99:	int3   
  403b9a:	int3   
  403b9b:	int3   
  403b9c:	int3   
  403b9d:	int3   
  403b9e:	int3   
  403b9f:	int3   
  403ba0:	push   0xffffffff
  403ba2:	push   0x42d5cb
  403ba7:	mov    eax,fs:0x0
  403bad:	push   eax
  403bae:	sub    esp,0x80
  403bb4:	push   ebx
  403bb5:	push   esi
  403bb6:	mov    eax,ds:0x43e020
  403bbb:	xor    eax,esp
  403bbd:	push   eax
  403bbe:	lea    eax,[esp+0x8c]
  403bc5:	mov    fs:0x0,eax
  403bcb:	mov    eax,DWORD PTR [esp+0x9c]
  403bd2:	lea    esi,[esp+0xc]
  403bd6:	call   0x403f20
  403bdb:	mov    ebx,eax
  403bdd:	lea    esi,[esp+0x48]
  403be1:	mov    DWORD PTR [esp+0x94],0x0
  403bec:	call   0x403f60
  403bf1:	push   0x4358a0
  403bf6:	mov    eax,esi
  403bf8:	push   eax
  403bf9:	call   0x429e76
  403bfe:	int3   
  403bff:	int3   
  403c00:	mov    eax,DWORD PTR [esp+0x4]
  403c04:	push   esi
  403c05:	push   eax
  403c06:	mov    esi,ecx
  403c08:	call   0x403c30
  403c0d:	mov    DWORD PTR [esi+0x3c],0x430bd8
  403c14:	mov    DWORD PTR [esi],0x430dc4
  403c1a:	mov    DWORD PTR [esi+0x28],0x430dd0
  403c21:	mov    DWORD PTR [esi+0x3c],0x430dd8
  403c28:	mov    eax,esi
  403c2a:	pop    esi
  403c2b:	ret    0x4
  403c2e:	int3   
  403c2f:	int3   
  403c30:	push   0xffffffff
  403c32:	push   0x42cc08
  403c37:	mov    eax,fs:0x0
  403c3d:	push   eax
  403c3e:	push   ecx
  403c3f:	push   esi
  403c40:	push   edi
  403c41:	mov    eax,ds:0x43e020
  403c46:	xor    eax,esp
  403c48:	push   eax
  403c49:	lea    eax,[esp+0x10]
  403c4d:	mov    fs:0x0,eax
  403c53:	mov    esi,ecx
  403c55:	mov    DWORD PTR [esp+0xc],esi
  403c59:	mov    edi,DWORD PTR [esp+0x20]
  403c5d:	push   edi
  403c5e:	call   0x4043b0
  403c63:	mov    DWORD PTR [esi],0x430f30
  403c69:	mov    DWORD PTR [esp+0x18],0x0
  403c71:	test   edi,edi
  403c73:	je     0x403c7a
  403c75:	add    edi,0x28
  403c78:	jmp    0x403c7c
  403c7a:	xor    edi,edi
  403c7c:	mov    DWORD PTR [esi+0x28],0x430bd0
  403c83:	mov    ecx,DWORD PTR [edi+0x4]
  403c86:	mov    DWORD PTR [esi+0x2c],ecx
  403c89:	test   ecx,ecx
  403c8b:	je     0x403c94
  403c8d:	mov    eax,DWORD PTR [ecx]
  403c8f:	mov    edx,DWORD PTR [eax+0xc]
  403c92:	call   edx
  403c94:	mov    eax,DWORD PTR [edi+0x8]
  403c97:	mov    DWORD PTR [esi+0x30],eax
  403c9a:	mov    ecx,DWORD PTR [edi+0xc]
  403c9d:	mov    DWORD PTR [esi+0x34],ecx
  403ca0:	mov    edx,DWORD PTR [edi+0x10]
  403ca3:	mov    DWORD PTR [esi+0x38],edx
  403ca6:	mov    DWORD PTR [esi],0x430db0
  403cac:	mov    DWORD PTR [esi+0x28],0x430dbc
  403cb3:	mov    eax,esi
  403cb5:	mov    ecx,DWORD PTR [esp+0x10]
  403cb9:	mov    DWORD PTR fs:0x0,ecx
  403cc0:	pop    ecx
  403cc1:	pop    edi
  403cc2:	pop    esi
  403cc3:	add    esp,0x10
  403cc6:	ret    0x4
  403cc9:	int3   
  403cca:	int3   
  403ccb:	int3   
  403ccc:	int3   
  403ccd:	int3   
  403cce:	int3   
  403ccf:	int3   
  403cd0:	mov    eax,DWORD PTR [esp+0x4]
  403cd4:	push   esi
  403cd5:	push   eax
  403cd6:	mov    esi,ecx
  403cd8:	call   0x4043b0
  403cdd:	mov    DWORD PTR [esi],0x430f30
  403ce3:	mov    eax,esi
  403ce5:	pop    esi
  403ce6:	ret    0x4
  403ce9:	int3   
  403cea:	int3   
  403ceb:	int3   
  403cec:	int3   
  403ced:	int3   
  403cee:	int3   
  403cef:	int3   
  403cf0:	push   esi
  403cf1:	mov    esi,ecx
  403cf3:	mov    DWORD PTR [esi+0x3c],0x430bd8
  403cfa:	mov    DWORD PTR [esi],0x430db0
  403d00:	mov    DWORD PTR [esi+0x28],0x430dbc
  403d07:	mov    DWORD PTR [esi+0x28],0x430bd0
  403d0e:	mov    ecx,DWORD PTR [esi+0x2c]
  403d11:	test   ecx,ecx
  403d13:	je     0x403d27
  403d15:	mov    eax,DWORD PTR [ecx]
  403d17:	mov    edx,DWORD PTR [eax+0x10]
  403d1a:	call   edx
  403d1c:	test   al,al
  403d1e:	je     0x403d27
  403d20:	mov    DWORD PTR [esi+0x2c],0x0
  403d27:	lea    ecx,[esi+0xc]
  403d2a:	mov    DWORD PTR [esi],0x430530
  403d30:	call   DWORD PTR ds:0x43025c
  403d36:	mov    ecx,esi
  403d38:	call   DWORD PTR ds:0x4303a8
  403d3e:	test   BYTE PTR [esp+0x8],0x1
  403d43:	je     0x403d4e
  403d45:	push   esi
  403d46:	call   0x42504a
  403d4b:	add    esp,0x4
  403d4e:	mov    eax,esi
  403d50:	pop    esi
  403d51:	ret    0x4
  403d54:	int3   
  403d55:	int3   
  403d56:	int3   
  403d57:	int3   
  403d58:	int3   
  403d59:	int3   
  403d5a:	int3   
  403d5b:	int3   
  403d5c:	int3   
  403d5d:	int3   
  403d5e:	int3   
  403d5f:	int3   
  403d60:	push   esi
  403d61:	mov    esi,ecx
  403d63:	mov    DWORD PTR [esi],0x430db0
  403d69:	mov    DWORD PTR [esi+0x28],0x430dbc
  403d70:	mov    DWORD PTR [esi+0x28],0x430bd0
  403d77:	mov    ecx,DWORD PTR [esi+0x2c]
  403d7a:	test   ecx,ecx
  403d7c:	je     0x403d90
  403d7e:	mov    eax,DWORD PTR [ecx]
  403d80:	mov    edx,DWORD PTR [eax+0x10]
  403d83:	call   edx
  403d85:	test   al,al
  403d87:	je     0x403d90
  403d89:	mov    DWORD PTR [esi+0x2c],0x0
  403d90:	lea    ecx,[esi+0xc]
  403d93:	mov    DWORD PTR [esi],0x430530
  403d99:	call   DWORD PTR ds:0x43025c
  403d9f:	mov    ecx,esi
  403da1:	call   DWORD PTR ds:0x4303a8
  403da7:	test   BYTE PTR [esp+0x8],0x1
  403dac:	je     0x403db7
  403dae:	push   esi
  403daf:	call   0x42504a
  403db4:	add    esp,0x4
  403db7:	mov    eax,esi
  403db9:	pop    esi
  403dba:	ret    0x4
  403dbd:	int3   
  403dbe:	int3   
  403dbf:	int3   
  403dc0:	mov    DWORD PTR [esi],0x430db0
  403dc6:	mov    DWORD PTR [esi+0x28],0x430dbc
  403dcd:	mov    DWORD PTR [esi+0x28],0x430bd0
  403dd4:	mov    ecx,DWORD PTR [esi+0x2c]
  403dd7:	test   ecx,ecx
  403dd9:	je     0x403ded
  403ddb:	mov    eax,DWORD PTR [ecx]
  403ddd:	mov    edx,DWORD PTR [eax+0x10]
  403de0:	call   edx
  403de2:	test   al,al
  403de4:	je     0x403ded
  403de6:	mov    DWORD PTR [esi+0x2c],0x0
  403ded:	lea    ecx,[esi+0xc]
  403df0:	mov    DWORD PTR [esi],0x430530
  403df6:	call   DWORD PTR ds:0x43025c
  403dfc:	mov    ecx,esi
  403dfe:	jmp    DWORD PTR ds:0x4303a8
  403e04:	int3   
  403e05:	int3   
  403e06:	int3   
  403e07:	int3   
  403e08:	int3   
  403e09:	int3   
  403e0a:	int3   
  403e0b:	int3   
  403e0c:	int3   
  403e0d:	int3   
  403e0e:	int3   
  403e0f:	int3   
  403e10:	push   esi
  403e11:	mov    esi,ecx
  403e13:	mov    DWORD PTR [esi+0x3c],0x430bd8
  403e1a:	mov    DWORD PTR [esi],0x430db0
  403e20:	mov    DWORD PTR [esi+0x28],0x430dbc
  403e27:	mov    DWORD PTR [esi+0x28],0x430bd0
  403e2e:	mov    ecx,DWORD PTR [esi+0x2c]
  403e31:	test   ecx,ecx
  403e33:	je     0x403e47
  403e35:	mov    eax,DWORD PTR [ecx]
  403e37:	mov    edx,DWORD PTR [eax+0x10]
  403e3a:	call   edx
  403e3c:	test   al,al
  403e3e:	je     0x403e47
  403e40:	mov    DWORD PTR [esi+0x2c],0x0
  403e47:	lea    ecx,[esi+0xc]
  403e4a:	mov    DWORD PTR [esi],0x430530
  403e50:	call   DWORD PTR ds:0x43025c
  403e56:	mov    ecx,esi
  403e58:	pop    esi
  403e59:	jmp    DWORD PTR ds:0x4303a8
  403e5f:	int3   
  403e60:	push   0xffffffff
  403e62:	push   0x42defb
  403e67:	mov    eax,fs:0x0
  403e6d:	push   eax
  403e6e:	push   ecx
  403e6f:	push   esi
  403e70:	push   edi
  403e71:	mov    eax,ds:0x43e020
  403e76:	xor    eax,esp
  403e78:	push   eax
  403e79:	lea    eax,[esp+0x10]
  403e7d:	mov    fs:0x0,eax
  403e83:	mov    edi,ecx
  403e85:	push   0x40
  403e87:	call   0x425050
  403e8c:	mov    esi,eax
  403e8e:	add    esp,0x4
  403e91:	mov    DWORD PTR [esp+0xc],esi
  403e95:	xor    eax,eax
  403e97:	mov    DWORD PTR [esp+0x18],eax
  403e9b:	cmp    esi,eax
  403e9d:	je     0x403ec6
  403e9f:	lea    eax,[edi-0x3c]
  403ea2:	push   eax
  403ea3:	mov    ecx,esi
  403ea5:	call   0x403c30
  403eaa:	lea    eax,[esi+0x3c]
  403ead:	mov    DWORD PTR [eax],0x430bd8
  403eb3:	mov    DWORD PTR [esi],0x430dc4
  403eb9:	mov    DWORD PTR [esi+0x28],0x430dd0
  403ec0:	mov    DWORD PTR [eax],0x430dd8
  403ec6:	mov    ecx,DWORD PTR [esp+0x10]
  403eca:	mov    DWORD PTR fs:0x0,ecx
  403ed1:	pop    ecx
  403ed2:	pop    edi
  403ed3:	pop    esi
  403ed4:	add    esp,0x10
  403ed7:	ret    
  403ed8:	int3   
  403ed9:	int3   
  403eda:	int3   
  403edb:	int3   
  403edc:	int3   
  403edd:	int3   
  403ede:	int3   
  403edf:	int3   
  403ee0:	push   ebp
  403ee1:	mov    ebp,esp
  403ee3:	and    esp,0xfffffff8
  403ee6:	sub    esp,0x40
  403ee9:	lea    eax,[ecx-0x3c]
  403eec:	push   eax
  403eed:	lea    ecx,[esp+0x4]
  403ef1:	call   0x403c30
  403ef6:	push   0x4358a0
  403efb:	lea    eax,[esp+0x4]
  403eff:	push   eax
  403f00:	mov    DWORD PTR [esp+0x8],0x430dc4
  403f08:	mov    DWORD PTR [esp+0x30],0x430dd0
  403f10:	mov    DWORD PTR [esp+0x44],0x430dd8
  403f18:	call   0x429e76
  403f1d:	int3   
  403f1e:	int3   
  403f1f:	int3   
  403f20:	push   ecx
  403f21:	push   edi
  403f22:	xor    edi,edi
  403f24:	push   eax
  403f25:	mov    ecx,esi
  403f27:	mov    DWORD PTR [esp+0x8],edi
  403f2b:	call   0x4043b0
  403f30:	mov    DWORD PTR [esi+0x28],0x430bd0
  403f37:	mov    DWORD PTR [esi+0x2c],edi
  403f3a:	mov    DWORD PTR [esi+0x30],edi
  403f3d:	mov    DWORD PTR [esi+0x34],edi
  403f40:	mov    DWORD PTR [esi+0x38],0xffffffff
  403f47:	mov    DWORD PTR [esi],0x430db0
  403f4d:	mov    DWORD PTR [esi+0x28],0x430dbc
  403f54:	mov    eax,esi
  403f56:	pop    edi
  403f57:	pop    ecx
  403f58:	ret    
  403f59:	int3   
  403f5a:	int3   
  403f5b:	int3   
  403f5c:	int3   
  403f5d:	int3   
  403f5e:	int3   
  403f5f:	int3   
  403f60:	push   ecx
  403f61:	push   esi
  403f62:	mov    DWORD PTR [esp+0x4],0x0
  403f6a:	call   0x403f80
  403f6f:	mov    eax,esi
  403f71:	pop    ecx
  403f72:	ret    
  403f73:	int3   
  403f74:	int3   
  403f75:	int3   
  403f76:	int3   
  403f77:	int3   
  403f78:	int3   
  403f79:	int3   
  403f7a:	int3   
  403f7b:	int3   
  403f7c:	int3   
  403f7d:	int3   
  403f7e:	int3   
  403f7f:	int3   
  403f80:	push   0xffffffff
  403f82:	push   0x42d5a3
  403f87:	mov    eax,fs:0x0
  403f8d:	push   eax
  403f8e:	push   esi
  403f8f:	push   edi
  403f90:	mov    eax,ds:0x43e020
  403f95:	xor    eax,esp
  403f97:	push   eax
  403f98:	lea    eax,[esp+0xc]
  403f9c:	mov    fs:0x0,eax
  403fa2:	mov    esi,DWORD PTR [esp+0x1c]
  403fa6:	push   ebx
  403fa7:	mov    ecx,esi
  403fa9:	call   0x403c30
  403fae:	xor    eax,eax
  403fb0:	mov    DWORD PTR [esp+0x14],eax
  403fb4:	mov    DWORD PTR [esi+0x3c],0x430bd8
  403fbb:	mov    BYTE PTR [esp+0x14],0x1
  403fc0:	lea    edi,[esi+0x28]
  403fc3:	mov    DWORD PTR [esi],0x430dc4
  403fc9:	mov    DWORD PTR [edi],0x430dd0
  403fcf:	mov    DWORD PTR [esi+0x3c],0x430dd8
  403fd6:	cmp    ebx,eax
  403fd8:	je     0x403fdd
  403fda:	lea    eax,[ebx+0x28]
  403fdd:	push   eax
  403fde:	call   0x402b50
  403fe3:	add    esp,0x4
  403fe6:	mov    eax,esi
  403fe8:	mov    ecx,DWORD PTR [esp+0xc]
  403fec:	mov    DWORD PTR fs:0x0,ecx
  403ff3:	pop    ecx
  403ff4:	pop    edi
  403ff5:	pop    esi
  403ff6:	add    esp,0xc
  403ff9:	ret    0x4
  403ffc:	int3   
  403ffd:	int3   
  403ffe:	int3   
  403fff:	int3   
  404000:	sub    ecx,0x28
  404003:	jmp    0x403d60
  404008:	int3   
  404009:	int3   
  40400a:	int3   
  40400b:	int3   
  40400c:	int3   
  40400d:	int3   
  40400e:	int3   
  40400f:	int3   
  404010:	sub    ecx,0x3c
  404013:	jmp    0x403cf0
  404018:	int3   
  404019:	int3   
  40401a:	int3   
  40401b:	int3   
  40401c:	int3   
  40401d:	int3   
  40401e:	int3   
  40401f:	int3   
  404020:	sub    ecx,0x28
  404023:	jmp    0x403cf0
  404028:	int3   
  404029:	int3   
  40402a:	int3   
  40402b:	int3   
  40402c:	int3   
  40402d:	int3   
  40402e:	int3   
  40402f:	int3   
  404030:	lea    ecx,[esi+0xc]
  404033:	mov    DWORD PTR [esi],0x430530
  404039:	call   DWORD PTR ds:0x43025c
  40403f:	mov    ecx,esi
  404041:	jmp    DWORD PTR ds:0x4303a8
  404047:	int3   
  404048:	int3   
  404049:	int3   
  40404a:	int3   
  40404b:	int3   
  40404c:	int3   
  40404d:	int3   
  40404e:	int3   
  40404f:	int3   
  404050:	push   0xffffffff
  404052:	push   0x42afc1
  404057:	mov    eax,fs:0x0
  40405d:	push   eax
  40405e:	sub    esp,0x1c
  404061:	push   esi
  404062:	mov    eax,ds:0x43e020
  404067:	xor    eax,esp
  404069:	push   eax
  40406a:	lea    eax,[esp+0x24]
  40406e:	mov    fs:0x0,eax
  404074:	mov    esi,DWORD PTR [esp+0x34]
  404078:	push   0x430de4
  40407d:	lea    ecx,[esp+0xc]
  404081:	call   DWORD PTR ds:0x43011c
  404087:	lea    eax,[esp+0x8]
  40408b:	push   eax
  40408c:	mov    ecx,esi
  40408e:	mov    DWORD PTR [esp+0x30],0x0
  404096:	call   0x404350
  40409b:	lea    ecx,[esp+0x8]
  40409f:	mov    BYTE PTR [esp+0x2c],0x2
  4040a4:	call   DWORD PTR ds:0x43025c
  4040aa:	mov    DWORD PTR [esi],0x430f30
  4040b0:	mov    eax,esi
  4040b2:	mov    ecx,DWORD PTR [esp+0x24]
  4040b6:	mov    DWORD PTR fs:0x0,ecx
  4040bd:	pop    ecx
  4040be:	pop    esi
  4040bf:	add    esp,0x28
  4040c2:	ret    0x4
  4040c5:	int3   
  4040c6:	int3   
  4040c7:	int3   
  4040c8:	int3   
  4040c9:	int3   
  4040ca:	int3   
  4040cb:	int3   
  4040cc:	int3   
  4040cd:	int3   
  4040ce:	int3   
  4040cf:	int3   
  4040d0:	call   0x4045f0
  4040d5:	mov    ecx,DWORD PTR [esi]
  4040d7:	cmp    ecx,DWORD PTR [eax+0x2c]
  4040da:	jl     0x4040fb
  4040dc:	mov    eax,DWORD PTR [esp+0x4]
  4040e0:	mov    ecx,DWORD PTR [esi+0x4]
  4040e3:	lea    edx,[esp+0x8]
  4040e7:	push   edx
  4040e8:	push   eax
  4040e9:	add    ecx,0x64
  4040ec:	push   0xf9b
  4040f1:	push   ecx
  4040f2:	call   DWORD PTR ds:0x4302d8
  4040f8:	add    esp,0x10
  4040fb:	ret    
  4040fc:	int3   
  4040fd:	int3   
  4040fe:	int3   
  4040ff:	int3   
  404100:	test   esi,esi
  404102:	je     0x404155
  404104:	mov    eax,esi
  404106:	lea    edx,[eax+0x1]
  404109:	lea    esp,[esp+0x0]
  404110:	mov    cl,BYTE PTR [eax]
  404112:	inc    eax
  404113:	test   cl,cl
  404115:	jne    0x404110
  404117:	sub    eax,edx
  404119:	mov    edx,0xffffffff
  40411e:	mov    ecx,eax
  404120:	js     0x404131
  404122:	cmp    BYTE PTR [ecx+esi*1],0x5c
  404126:	je     0x40412f
  404128:	sub    ecx,0x1
  40412b:	jns    0x404122
  40412d:	jmp    0x404131
  40412f:	mov    edx,ecx
  404131:	sub    eax,edx
  404133:	dec    eax
  404134:	test   eax,eax
  404136:	jle    0x404155
  404138:	cmp    eax,0x27
  40413b:	jle    0x404142
  40413d:	mov    eax,0x27
  404142:	mov    ecx,DWORD PTR [esp+0x4]
  404146:	push   eax
  404147:	lea    eax,[edx+esi*1+0x1]
  40414b:	push   eax
  40414c:	push   ecx
  40414d:	call   0x42a018
  404152:	add    esp,0xc
  404155:	ret    
  404156:	int3   
  404157:	int3   
  404158:	int3   
  404159:	int3   
  40415a:	int3   
  40415b:	int3   
  40415c:	int3   
  40415d:	int3   
  40415e:	int3   
  40415f:	int3   
  404160:	mov    DWORD PTR [edi],eax
  404162:	mov    DWORD PTR [edi+0x4],0x0
  404169:	call   0x4045f0
  40416e:	mov    ecx,DWORD PTR [edi]
  404170:	cmp    ecx,DWORD PTR [eax+0x2c]
  404173:	jl     0x4041b1
  404175:	push   0x1000
  40417a:	call   0x425050
  40417f:	push   0x1000
  404184:	push   0x0
  404186:	push   eax
  404187:	mov    DWORD PTR [edi+0x4],eax
  40418a:	call   0x429f9c
  40418f:	mov    edx,DWORD PTR [edi+0x4]
  404192:	push   edx
  404193:	call   0x404100
  404198:	mov    eax,DWORD PTR [esp+0x18]
  40419c:	mov    ecx,DWORD PTR [edi+0x4]
  40419f:	push   0x3b
  4041a1:	push   eax
  4041a2:	add    ecx,0x28
  4041a5:	push   0x3c
  4041a7:	push   ecx
  4041a8:	call   DWORD PTR ds:0x430384
  4041ae:	add    esp,0x24
  4041b1:	mov    eax,edi
  4041b3:	ret    0x4
  4041b6:	int3   
  4041b7:	int3   
  4041b8:	int3   
  4041b9:	int3   
  4041ba:	int3   
  4041bb:	int3   
  4041bc:	int3   
  4041bd:	int3   
  4041be:	int3   
  4041bf:	int3   
  4041c0:	sub    esp,0x10
  4041c3:	xor    eax,eax
  4041c5:	lea    ecx,[esp]
  4041c8:	push   ecx
  4041c9:	mov    WORD PTR [esp+0x4],ax
  4041ce:	mov    DWORD PTR [esp+0x6],eax
  4041d2:	mov    DWORD PTR [esp+0xa],eax
  4041d6:	mov    DWORD PTR [esp+0xe],eax
  4041da:	mov    WORD PTR [esp+0x12],ax
  4041df:	call   DWORD PTR ds:0x4300e0
  4041e5:	movzx  edx,WORD PTR [esp+0xc]
  4041ea:	movzx  eax,WORD PTR [esp+0xa]
  4041ef:	movzx  ecx,WORD PTR [esp+0x8]
  4041f4:	push   edx
  4041f5:	movzx  edx,WORD PTR [esp+0xa]
  4041fa:	push   eax
  4041fb:	movzx  eax,WORD PTR [esp+0xa]
  404200:	push   ecx
  404201:	mov    ecx,DWORD PTR [esp+0x20]
  404205:	push   edx
  404206:	push   eax
  404207:	push   0x430e18
  40420c:	push   ecx
  40420d:	call   DWORD PTR ds:0x430388
  404213:	add    esp,0x2c
  404216:	ret    0x4
  404219:	int3   
  40421a:	int3   
  40421b:	int3   
  40421c:	int3   
  40421d:	int3   
  40421e:	int3   
  40421f:	int3   
  404220:	push   0xffffffff
  404222:	push   0x42b868
  404227:	mov    eax,fs:0x0
  40422d:	push   eax
  40422e:	push   edi
  40422f:	mov    eax,ds:0x43e020
  404234:	xor    eax,esp
  404236:	push   eax
  404237:	lea    eax,[esp+0x8]
  40423b:	mov    fs:0x0,eax
  404241:	mov    edi,DWORD PTR [esp+0x18]
  404245:	mov    DWORD PTR [edi],esi
  404247:	mov    eax,DWORD PTR [esi]
  404249:	mov    ecx,DWORD PTR [eax+0x4]
  40424c:	mov    ecx,DWORD PTR [ecx+esi*1+0x28]
  404250:	test   ecx,ecx
  404252:	je     0x40425a
  404254:	call   DWORD PTR ds:0x4302c4
  40425a:	mov    DWORD PTR [esp+0x10],0x0
  404262:	mov    edx,DWORD PTR [esi]
  404264:	mov    eax,DWORD PTR [edx+0x4]
  404267:	add    eax,esi
  404269:	cmp    DWORD PTR [eax+0x8],0x0
  40426d:	jne    0x40427e
  40426f:	mov    eax,DWORD PTR [eax+0x2c]
  404272:	test   eax,eax
  404274:	je     0x40427e
  404276:	mov    ecx,eax
  404278:	call   DWORD PTR ds:0x43015c
  40427e:	mov    ecx,DWORD PTR [esi]
  404280:	mov    edx,DWORD PTR [ecx+0x4]
  404283:	cmp    DWORD PTR [edx+esi*1+0x8],0x0
  404288:	sete   al
  40428b:	mov    BYTE PTR [edi+0x4],al
  40428e:	mov    eax,edi
  404290:	mov    ecx,DWORD PTR [esp+0x8]
  404294:	mov    DWORD PTR fs:0x0,ecx
  40429b:	pop    ecx
  40429c:	pop    edi
  40429d:	add    esp,0xc
  4042a0:	ret    0x4
  4042a3:	int3   
  4042a4:	int3   
  4042a5:	int3   
  4042a6:	int3   
  4042a7:	int3   
  4042a8:	int3   
  4042a9:	int3   
  4042aa:	int3   
  4042ab:	int3   
  4042ac:	int3   
  4042ad:	int3   
  4042ae:	int3   
  4042af:	int3   
  4042b0:	mov    eax,DWORD PTR [eax]
  4042b2:	mov    ecx,DWORD PTR [eax]
  4042b4:	mov    edx,DWORD PTR [ecx+0x4]
  4042b7:	mov    eax,DWORD PTR [edx+eax*1+0x28]
  4042bb:	test   eax,eax
  4042bd:	je     0x4042c7
  4042bf:	mov    ecx,eax
  4042c1:	jmp    DWORD PTR ds:0x430164
  4042c7:	ret    
  4042c8:	int3   
  4042c9:	int3   
  4042ca:	int3   
  4042cb:	int3   
  4042cc:	int3   
  4042cd:	int3   
  4042ce:	int3   
  4042cf:	int3   
  4042d0:	push   0xffffffff
  4042d2:	push   0x42b868
  4042d7:	mov    eax,fs:0x0
  4042dd:	push   eax
  4042de:	push   esi
  4042df:	mov    eax,ds:0x43e020
  4042e4:	xor    eax,esp
  4042e6:	push   eax
  4042e7:	lea    eax,[esp+0x8]
  4042eb:	mov    fs:0x0,eax
  4042f1:	mov    esi,DWORD PTR [esp+0x18]
  4042f5:	mov    DWORD PTR [esp+0x10],0x0
  4042fd:	call   DWORD PTR ds:0x430160
  404303:	test   al,al
  404305:	jne    0x40430f
  404307:	mov    ecx,DWORD PTR [esi]
  404309:	call   DWORD PTR ds:0x430158
  40430f:	mov    DWORD PTR [esp+0x10],0xffffffff
  404317:	mov    eax,DWORD PTR [esi]
  404319:	mov    ecx,DWORD PTR [eax]
  40431b:	mov    edx,DWORD PTR [ecx+0x4]
  40431e:	mov    eax,DWORD PTR [edx+eax*1+0x28]
  404322:	test   eax,eax
  404324:	je     0x40432e
  404326:	mov    ecx,eax
  404328:	call   DWORD PTR ds:0x430164
  40432e:	mov    ecx,DWORD PTR [esp+0x8]
  404332:	mov    DWORD PTR fs:0x0,ecx
  404339:	pop    ecx
  40433a:	pop    esi
  40433b:	add    esp,0xc
  40433e:	ret    0x4
  404341:	int3   
  404342:	int3   
  404343:	int3   
  404344:	int3   
  404345:	int3   
  404346:	int3   
  404347:	int3   
  404348:	int3   
  404349:	int3   
  40434a:	int3   
  40434b:	int3   
  40434c:	int3   
  40434d:	int3   
  40434e:	int3   
  40434f:	int3   
  404350:	push   0xffffffff
  404352:	push   0x42acc9
  404357:	mov    eax,fs:0x0
  40435d:	push   eax
  40435e:	push   ecx
  40435f:	push   esi
  404360:	mov    eax,ds:0x43e020
  404365:	xor    eax,esp
  404367:	push   eax
  404368:	lea    eax,[esp+0xc]
  40436c:	mov    fs:0x0,eax
  404372:	mov    esi,ecx
  404374:	mov    DWORD PTR [esp+0x8],esi
  404378:	call   DWORD PTR ds:0x4303ac
  40437e:	mov    eax,DWORD PTR [esp+0x1c]
  404382:	mov    DWORD PTR [esp+0x14],0x0
  40438a:	push   eax
  40438b:	lea    ecx,[esi+0xc]
  40438e:	mov    DWORD PTR [esi],0x430530
  404394:	call   DWORD PTR ds:0x430258
  40439a:	mov    eax,esi
  40439c:	mov    ecx,DWORD PTR [esp+0xc]
  4043a0:	mov    DWORD PTR fs:0x0,ecx
  4043a7:	pop    ecx
  4043a8:	pop    esi
  4043a9:	add    esp,0x10
  4043ac:	ret    0x4
  4043af:	int3   
  4043b0:	push   0xffffffff
  4043b2:	push   0x42af89
  4043b7:	mov    eax,fs:0x0
  4043bd:	push   eax
  4043be:	push   ecx
  4043bf:	push   esi
  4043c0:	push   edi
  4043c1:	mov    eax,ds:0x43e020
  4043c6:	xor    eax,esp
  4043c8:	push   eax
  4043c9:	lea    eax,[esp+0x10]
  4043cd:	mov    fs:0x0,eax
  4043d3:	mov    esi,ecx
  4043d5:	mov    DWORD PTR [esp+0xc],esi
  4043d9:	mov    edi,DWORD PTR [esp+0x20]
  4043dd:	push   edi
  4043de:	call   DWORD PTR ds:0x4303a0
  4043e4:	add    edi,0xc
  4043e7:	mov    DWORD PTR [esp+0x18],0x0
  4043ef:	push   edi
  4043f0:	lea    ecx,[esi+0xc]
  4043f3:	mov    DWORD PTR [esi],0x430530
  4043f9:	call   DWORD PTR ds:0x430258
  4043ff:	mov    eax,esi
  404401:	mov    ecx,DWORD PTR [esp+0x10]
  404405:	mov    DWORD PTR fs:0x0,ecx
  40440c:	pop    ecx
  40440d:	pop    edi
  40440e:	pop    esi
  40440f:	add    esp,0x10
  404412:	ret    0x4
  404415:	int3   
  404416:	int3   
  404417:	int3   
  404418:	int3   
  404419:	int3   
  40441a:	int3   
  40441b:	int3   
  40441c:	int3   
  40441d:	int3   
  40441e:	int3   
  40441f:	int3   
  404420:	push   ebp
  404421:	mov    ebp,esp
  404423:	push   0xffffffff
  404425:	push   0x42c242
  40442a:	mov    eax,fs:0x0
  404430:	push   eax
  404431:	sub    esp,0x14
  404434:	push   ebx
  404435:	push   esi
  404436:	push   edi
  404437:	mov    eax,ds:0x43e020
  40443c:	xor    eax,ebp
  40443e:	push   eax
  40443f:	lea    eax,[ebp-0xc]
  404442:	mov    fs:0x0,eax
  404448:	mov    DWORD PTR [ebp-0x10],esp
  40444b:	mov    esi,DWORD PTR [ebp+0x8]
  40444e:	mov    eax,DWORD PTR [ebp+0xc]
  404451:	xor    ebx,ebx
  404453:	mov    DWORD PTR [ebp-0x14],ebx
  404456:	lea    edx,[eax+0x1]
  404459:	lea    esp,[esp+0x0]
  404460:	mov    cl,BYTE PTR [eax]
  404462:	inc    eax
  404463:	test   cl,cl
  404465:	jne    0x404460
  404467:	sub    eax,edx
  404469:	mov    edi,eax
  40446b:	mov    eax,DWORD PTR [esi]
  40446d:	mov    ecx,DWORD PTR [eax+0x4]
  404470:	mov    eax,DWORD PTR [ecx+esi*1+0x18]
  404474:	cmp    eax,ebx
  404476:	jle    0x404480
  404478:	cmp    eax,edi
  40447a:	jle    0x404480
  40447c:	sub    eax,edi
  40447e:	mov    ebx,eax
  404480:	lea    edx,[ebp-0x20]
  404483:	push   edx
  404484:	call   0x404220
  404489:	mov    DWORD PTR [ebp-0x4],0x0
  404490:	cmp    BYTE PTR [ebp-0x1c],0x0
  404494:	jne    0x40449f
  404496:	mov    DWORD PTR [ebp-0x14],0x4
  40449d:	jmp    0x404518
  40449f:	mov    BYTE PTR [ebp-0x4],0x1
  4044a3:	mov    eax,DWORD PTR [esi]
  4044a5:	mov    ecx,DWORD PTR [eax+0x4]
  4044a8:	mov    eax,DWORD PTR [ecx+esi*1+0x10]
  4044ac:	and    eax,0x1c0
  4044b1:	cmp    eax,0x40
  4044b4:	je     0x4044ea
  4044b6:	test   ebx,ebx
  4044b8:	jle    0x4044e4
  4044ba:	mov    edx,DWORD PTR [esi]
  4044bc:	mov    eax,DWORD PTR [edx+0x4]
  4044bf:	mov    cl,BYTE PTR [eax+esi*1+0x30]
  4044c3:	add    eax,esi
  4044c5:	mov    eax,DWORD PTR [eax+0x28]
  4044c8:	mov    BYTE PTR [ebp-0x18],cl
  4044cb:	mov    edx,DWORD PTR [ebp-0x18]
  4044ce:	push   edx
  4044cf:	mov    ecx,eax
  4044d1:	call   DWORD PTR ds:0x430150
  4044d7:	cmp    eax,0xffffffff
  4044da:	jne    0x404576
  4044e0:	or     DWORD PTR [ebp-0x14],0x4
  4044e4:	cmp    DWORD PTR [ebp-0x14],0x0
  4044e8:	jne    0x404509
  4044ea:	mov    eax,DWORD PTR [esi]
  4044ec:	mov    ecx,DWORD PTR [eax+0x4]
  4044ef:	mov    edx,DWORD PTR [ebp+0xc]
  4044f2:	mov    ecx,DWORD PTR [ecx+esi*1+0x28]
  4044f6:	push   edi
  4044f7:	push   edx
  4044f8:	call   DWORD PTR ds:0x430154
  4044fe:	cmp    eax,edi
  404500:	je     0x404580
  404502:	mov    DWORD PTR [ebp-0x14],0x4
  404509:	mov    eax,DWORD PTR [esi]
  40450b:	mov    eax,DWORD PTR [eax+0x4]
  40450e:	add    eax,esi
  404510:	xor    ecx,ecx
  404512:	mov    DWORD PTR [eax+0x18],ecx
  404515:	mov    DWORD PTR [ebp-0x4],ecx
  404518:	mov    ecx,DWORD PTR [ebp-0x14]
  40451b:	mov    edx,DWORD PTR [esi]
  40451d:	push   0x0
  40451f:	push   ecx
  404520:	mov    ecx,DWORD PTR [edx+0x4]
  404523:	add    ecx,esi
  404525:	call   DWORD PTR ds:0x43014c
  40452b:	mov    DWORD PTR [ebp-0x4],0x3
  404532:	call   DWORD PTR ds:0x430160
  404538:	test   al,al
  40453a:	jne    0x404545
  40453c:	mov    ecx,DWORD PTR [ebp-0x20]
  40453f:	call   DWORD PTR ds:0x430158
  404545:	mov    DWORD PTR [ebp-0x4],0xffffffff
  40454c:	mov    eax,DWORD PTR [ebp-0x20]
  40454f:	mov    ecx,DWORD PTR [eax]
  404551:	mov    edx,DWORD PTR [ecx+0x4]
  404554:	mov    ecx,DWORD PTR [edx+eax*1+0x28]
  404558:	test   ecx,ecx
  40455a:	je     0x404562
  40455c:	call   DWORD PTR ds:0x430164
  404562:	mov    eax,esi
  404564:	mov    ecx,DWORD PTR [ebp-0xc]
  404567:	mov    DWORD PTR fs:0x0,ecx
  40456e:	pop    ecx
  40456f:	pop    edi
  404570:	pop    esi
  404571:	pop    ebx
  404572:	mov    esp,ebp
  404574:	pop    ebp
  404575:	ret    
  404576:	dec    ebx
  404577:	jmp    0x4044b6
  40457c:	lea    esp,[esp+0x0]
  404580:	test   ebx,ebx
  404582:	jle    0x404509
  404584:	mov    eax,DWORD PTR [esi]
  404586:	mov    ecx,DWORD PTR [eax+0x4]
  404589:	mov    dl,BYTE PTR [ecx+esi*1+0x30]
  40458d:	lea    eax,[ecx+esi*1]
  404590:	mov    eax,DWORD PTR [eax+0x28]
  404593:	mov    BYTE PTR [ebp-0x18],dl
  404596:	mov    ecx,DWORD PTR [ebp-0x18]
  404599:	push   ecx
  40459a:	mov    ecx,eax
  40459c:	call   DWORD PTR ds:0x430150
  4045a2:	cmp    eax,0xffffffff
  4045a5:	jne    0x4045b0
  4045a7:	or     DWORD PTR [ebp-0x14],0x4
  4045ab:	jmp    0x404509
  4045b0:	dec    ebx
  4045b1:	jmp    0x404580
  4045b3:	mov    eax,DWORD PTR [ebp+0x8]
  4045b6:	mov    edx,DWORD PTR [eax]
  4045b8:	mov    ecx,DWORD PTR [edx+0x4]
  4045bb:	push   0x1
  4045bd:	push   0x4
  4045bf:	add    ecx,eax
  4045c1:	call   DWORD PTR ds:0x43014c
  4045c7:	mov    DWORD PTR [ebp-0x4],0x0
  4045ce:	mov    eax,0x4045d4
  4045d3:	ret    
  4045d4:	mov    esi,DWORD PTR [ebp+0x8]
  4045d7:	jmp    0x404518
  4045dc:	int3   
  4045dd:	int3   
  4045de:	int3   
  4045df:	int3   
  4045e0:	mov    eax,DWORD PTR [esp+0x4]
  4045e4:	push   eax
  4045e5:	call   DWORD PTR ds:0x4300bc
  4045eb:	ret    
  4045ec:	int3   
  4045ed:	int3   
  4045ee:	int3   
  4045ef:	int3   
  4045f0:	push   0xffffffff
  4045f2:	push   0x42c20e
  4045f7:	mov    eax,fs:0x0
  4045fd:	push   eax
  4045fe:	mov    eax,ds:0x43e020
  404603:	xor    eax,esp
  404605:	push   eax
  404606:	lea    eax,[esp+0x4]
  40460a:	mov    fs:0x0,eax
  404610:	mov    eax,0x1
  404615:	test   BYTE PTR ds:0x4400d8,al
  40461b:	jne    0x404663
  40461d:	or     DWORD PTR ds:0x4400d8,eax
  404623:	mov    ecx,0x4400b8
  404628:	mov    DWORD PTR [esp+0xc],0x0
  404630:	call   DWORD PTR ds:0x430260
  404636:	xor    eax,eax
  404638:	mov    ds:0x4400b4,eax
  40463d:	push   0x42f4e0
  404642:	mov    ds:0x4400a8,eax
  404647:	mov    ds:0x4400ac,eax
  40464c:	mov    ds:0x4400b0,eax
  404651:	mov    DWORD PTR ds:0x4400b4,0x4045e0
  40465b:	call   0x425159
  404660:	add    esp,0x4
  404663:	mov    eax,0x4400a8
  404668:	mov    ecx,DWORD PTR [esp+0x4]
  40466c:	mov    DWORD PTR fs:0x0,ecx
  404673:	pop    ecx
  404674:	add    esp,0xc
  404677:	ret    
  404678:	int3   
  404679:	int3   
  40467a:	int3   
  40467b:	int3   
  40467c:	int3   
  40467d:	int3   
  40467e:	int3   
  40467f:	int3   
  404680:	push   ebp
  404681:	mov    ebp,esp
  404683:	and    esp,0xfffffff8
  404686:	push   0xffffffff
  404688:	push   0x42d558
  40468d:	mov    eax,fs:0x0
  404693:	push   eax
  404694:	sub    esp,0xb8
  40469a:	mov    eax,ds:0x43e020
  40469f:	xor    eax,esp
  4046a1:	mov    DWORD PTR [esp+0xb0],eax
  4046a8:	push   ebx
  4046a9:	push   esi
  4046aa:	push   edi
  4046ab:	mov    eax,ds:0x43e020
  4046b0:	xor    eax,esp
  4046b2:	push   eax
  4046b3:	lea    eax,[esp+0xc8]
  4046ba:	mov    fs:0x0,eax
  4046c0:	mov    esi,ecx
  4046c2:	call   0x4045f0
  4046c7:	mov    eax,DWORD PTR [eax+0x2c]
  4046ca:	mov    ebx,DWORD PTR [esi]
  4046cc:	cmp    ebx,eax
  4046ce:	jl     0x404866
  4046d4:	cmp    DWORD PTR [esi+0x4],0x0
  4046d8:	je     0x404866
  4046de:	mov    edi,DWORD PTR [esi+0x4]
  4046e1:	call   0x4045f0
  4046e6:	mov    eax,DWORD PTR [eax+0x8]
  4046e9:	test   eax,eax
  4046eb:	je     0x404700
  4046ed:	push   ebx
  4046ee:	lea    ecx,[edi+0x28]
  4046f1:	push   ecx
  4046f2:	push   edi
  4046f3:	call   eax
  4046f5:	add    esp,0xc
  4046f8:	test   al,al
  4046fa:	je     0x404866
  404700:	push   0x1
  404702:	push   0x2
  404704:	lea    ecx,[esp+0x34]
  404708:	call   DWORD PTR ds:0x43016c
  40470e:	xor    eax,eax
  404710:	mov    DWORD PTR [esp+0xd0],0x0
  40471b:	mov    DWORD PTR [esp+0xad],eax
  404722:	mov    DWORD PTR [esp+0xb1],eax
  404729:	mov    DWORD PTR [esp+0xb5],eax
  404730:	mov    DWORD PTR [esp+0xb9],eax
  404737:	mov    WORD PTR [esp+0xbd],ax
  40473f:	mov    BYTE PTR [esp+0xbf],al
  404746:	lea    eax,[esp+0xac]
  40474d:	push   eax
  40474e:	mov    BYTE PTR [esp+0xb0],0x0
  404756:	call   0x4041c0
  40475b:	mov    eax,DWORD PTR [esi+0x4]
  40475e:	mov    edx,DWORD PTR [esi]
  404760:	push   0x430e04
  404765:	push   ecx
  404766:	lea    ecx,[eax+0x64]
  404769:	push   ecx
  40476a:	push   ecx
  40476b:	push   0x430e08
  404770:	push   ecx
  404771:	lea    ecx,[edx*8+0x430a04]
  404778:	push   ecx
  404779:	push   ecx
  40477a:	push   0x430e0c
  40477f:	push   ecx
  404780:	lea    edx,[eax+0x28]
  404783:	push   edx
  404784:	push   ecx
  404785:	push   0x430e10
  40478a:	push   ecx
  40478b:	push   eax
  40478c:	push   ecx
  40478d:	push   0x430e10
  404792:	push   ecx
  404793:	lea    eax,[esp+0xf4]
  40479a:	push   eax
  40479b:	push   ecx
  40479c:	lea    ecx,[esp+0x7c]
  4047a0:	push   0x430e14
  4047a5:	push   ecx
  4047a6:	call   0x404420
  4047ab:	add    esp,0xc
  4047ae:	push   eax
  4047af:	call   0x404420
  4047b4:	add    esp,0xc
  4047b7:	push   eax
  4047b8:	call   0x404420
  4047bd:	add    esp,0xc
  4047c0:	push   eax
  4047c1:	call   0x404420
  4047c6:	add    esp,0xc
  4047c9:	push   eax
  4047ca:	call   0x404420
  4047cf:	add    esp,0xc
  4047d2:	push   eax
  4047d3:	call   0x404420
  4047d8:	add    esp,0xc
  4047db:	push   eax
  4047dc:	call   0x404420
  4047e1:	add    esp,0xc
  4047e4:	push   eax
  4047e5:	call   0x404420
  4047ea:	add    esp,0xc
  4047ed:	push   eax
  4047ee:	call   0x404420
  4047f3:	add    esp,0xc
  4047f6:	push   eax
  4047f7:	call   0x404420
  4047fc:	add    esp,0xc
  4047ff:	push   eax
  404800:	call   0x404420
  404805:	add    esp,0x8
  404808:	lea    edx,[esp+0x10]
  40480c:	push   edx
  40480d:	lea    ecx,[esp+0x30]
  404811:	call   DWORD PTR ds:0x430148
  404817:	mov    BYTE PTR [esp+0xd0],0x1
  40481f:	cmp    DWORD PTR [eax+0x18],0x10
  404823:	jb     0x40482a
  404825:	mov    edi,DWORD PTR [eax+0x4]
  404828:	jmp    0x40482d
  40482a:	lea    edi,[eax+0x4]
  40482d:	call   0x4045f0
  404832:	mov    eax,DWORD PTR [eax+0xc]
  404835:	test   eax,eax
  404837:	je     0x40483f
  404839:	push   edi
  40483a:	call   eax
  40483c:	add    esp,0x4
  40483f:	lea    ecx,[esp+0x10]
  404843:	mov    BYTE PTR [esp+0xd0],0x0
  40484b:	call   DWORD PTR ds:0x43025c
  404851:	lea    ecx,[esp+0x2c]
  404855:	mov    DWORD PTR [esp+0xd0],0xffffffff
  404860:	call   DWORD PTR ds:0x430168
  404866:	mov    esi,DWORD PTR [esi+0x4]
  404869:	test   esi,esi
  40486b:	je     0x404876
  40486d:	push   esi
  40486e:	call   0x42504a
  404873:	add    esp,0x4
  404876:	mov    ecx,DWORD PTR [esp+0xc8]
  40487d:	mov    DWORD PTR fs:0x0,ecx
  404884:	pop    ecx
  404885:	pop    edi
  404886:	pop    esi
  404887:	pop    ebx
  404888:	mov    ecx,DWORD PTR [esp+0xb0]
  40488f:	xor    ecx,esp
  404891:	call   0x42503a
  404896:	mov    esp,ebp
  404898:	pop    ebp
  404899:	ret    
  40489a:	int3   
  40489b:	int3   
  40489c:	int3   
  40489d:	int3   
  40489e:	int3   
  40489f:	int3   
  4048a0:	cmp    BYTE PTR [esi+0x4],0x0
  4048a4:	je     0x4048b9
  4048a6:	mov    eax,DWORD PTR [esi]
  4048a8:	test   eax,eax
  4048aa:	je     0x4048b9
  4048ac:	push   eax
  4048ad:	call   DWORD PTR ds:0x4300c0
  4048b3:	mov    DWORD PTR [esi],0x0
  4048b9:	ret    
  4048ba:	int3   
  4048bb:	int3   
  4048bc:	int3   
  4048bd:	int3   
  4048be:	int3   
  4048bf:	int3   
  4048c0:	sub    esp,0x44
  4048c3:	mov    eax,ds:0x43e020
  4048c8:	xor    eax,esp
  4048ca:	mov    DWORD PTR [esp+0x3c],eax
  4048ce:	xor    eax,eax
  4048d0:	mov    DWORD PTR [esp+0x10],eax
  4048d4:	mov    DWORD PTR [esp+0x16],eax
  4048d8:	mov    DWORD PTR [esp+0x1a],eax
  4048dc:	mov    DWORD PTR [esp+0x1e],eax
  4048e0:	mov    DWORD PTR [esp+0x22],eax
  4048e4:	mov    DWORD PTR [esp+0x26],eax
  4048e8:	mov    DWORD PTR [esp+0x2a],eax
  4048ec:	mov    DWORD PTR [esp+0x2e],eax
  4048f0:	mov    DWORD PTR [esp+0x32],eax
  4048f4:	mov    DWORD PTR [esp+0x36],eax
  4048f8:	mov    WORD PTR [esp+0x3a],ax
  4048fd:	mov    DWORD PTR [esp+0x2],eax
  404901:	mov    DWORD PTR [esp+0x6],eax
  404905:	mov    DWORD PTR [esp+0xa],eax
  404909:	mov    WORD PTR [esp+0xe],ax
  40490e:	lea    eax,[esp]
  404911:	xor    ecx,ecx
  404913:	xor    edx,edx
  404915:	push   eax
  404916:	mov    WORD PTR [esp+0x18],cx
  40491b:	mov    WORD PTR [esp+0x4],dx
  404920:	call   DWORD PTR ds:0x4300e0
  404926:	movzx  ecx,WORD PTR [esp+0xc]
  40492b:	movzx  edx,WORD PTR [esp+0xa]
  404930:	movzx  eax,WORD PTR [esp+0x8]
  404935:	push   ecx
  404936:	movzx  ecx,WORD PTR [esp+0xa]
  40493b:	push   edx
  40493c:	movzx  edx,WORD PTR [esp+0xa]
  404941:	push   eax
  404942:	movzx  eax,WORD PTR [esp+0xc]
  404947:	push   ecx
  404948:	push   edx
  404949:	push   eax
  40494a:	lea    ecx,[esp+0x2c]
  40494e:	push   0x430e60
  404953:	push   ecx
  404954:	call   DWORD PTR ds:0x430438
  40495a:	add    esp,0x20
  40495d:	lea    edx,[esp+0x14]
  404961:	push   edx
  404962:	mov    ecx,esi
  404964:	call   DWORD PTR ds:0x430268
  40496a:	mov    ecx,DWORD PTR [esp+0x3c]
  40496e:	xor    ecx,esp
  404970:	mov    eax,esi
  404972:	call   0x42503a
  404977:	add    esp,0x44
  40497a:	ret    
  40497b:	int3   
  40497c:	int3   
  40497d:	int3   
  40497e:	int3   
  40497f:	int3   
  404980:	push   0xffffffff
  404982:	push   0x42b82f
  404987:	mov    eax,fs:0x0
  40498d:	push   eax
  40498e:	sub    esp,0x234
  404994:	mov    eax,ds:0x43e020
  404999:	xor    eax,esp
  40499b:	mov    DWORD PTR [esp+0x230],eax
  4049a2:	push   ebx
  4049a3:	push   esi
  4049a4:	mov    eax,ds:0x43e020
  4049a9:	xor    eax,esp
  4049ab:	push   eax
  4049ac:	lea    eax,[esp+0x240]
  4049b3:	mov    fs:0x0,eax
  4049b9:	xor    ebx,ebx
  4049bb:	push   0x206
  4049c0:	mov    DWORD PTR [esp+0x24c],ebx
  4049c7:	lea    ecx,[esp+0x3a]
  4049cb:	xor    eax,eax
  4049cd:	push   ebx
  4049ce:	mov    DWORD PTR [esp+0x18],ebx
  4049d2:	push   ecx
  4049d3:	mov    DWORD PTR [esp+0x20],edi
  4049d7:	mov    WORD PTR [esp+0x40],ax
  4049dc:	call   0x429f9c
  4049e1:	add    esp,0xc
  4049e4:	push   0x104
  4049e9:	lea    edx,[esp+0x38]
  4049ed:	push   edx
  4049ee:	push   ebx
  4049ef:	call   DWORD PTR ds:0x430108
  4049f5:	lea    eax,[esp+0x34]
  4049f9:	push   eax
  4049fa:	mov    ecx,edi
  4049fc:	call   DWORD PTR ds:0x430268
  404a02:	mov    DWORD PTR [esp+0x248],ebx
  404a09:	lea    esi,[esp+0x18]
  404a0d:	mov    DWORD PTR [esp+0x10],0x1
  404a15:	call   0x4048c0
  404a1a:	mov    ecx,esi
  404a1c:	push   ecx
  404a1d:	mov    ecx,edi
  404a1f:	mov    DWORD PTR [esp+0x24c],0x1
  404a2a:	call   DWORD PTR ds:0x430144
  404a30:	push   0x430e84
  404a35:	mov    ecx,edi
  404a37:	call   DWORD PTR ds:0x430140
  404a3d:	mov    ecx,esi
  404a3f:	mov    BYTE PTR [esp+0x248],bl
  404a46:	call   DWORD PTR ds:0x430264
  404a4c:	mov    eax,edi
  404a4e:	mov    ecx,DWORD PTR [esp+0x240]
  404a55:	mov    DWORD PTR fs:0x0,ecx
  404a5c:	pop    ecx
  404a5d:	pop    esi
  404a5e:	pop    ebx
  404a5f:	mov    ecx,DWORD PTR [esp+0x230]
  404a66:	xor    ecx,esp
  404a68:	call   0x42503a
  404a6d:	add    esp,0x240
  404a73:	ret    
  404a74:	int3   
  404a75:	int3   
  404a76:	int3   
  404a77:	int3   
  404a78:	int3   
  404a79:	int3   
  404a7a:	int3   
  404a7b:	int3   
  404a7c:	int3   
  404a7d:	int3   
  404a7e:	int3   
  404a7f:	int3   
  404a80:	mov    eax,DWORD PTR [esi]
  404a82:	test   eax,eax
  404a84:	je     0x404a93
  404a86:	push   eax
  404a87:	call   DWORD PTR ds:0x4300f4
  404a8d:	mov    DWORD PTR [esi],0x0
  404a93:	ret    
  404a94:	int3   
  404a95:	int3   
  404a96:	int3   
  404a97:	int3   
  404a98:	int3   
  404a99:	int3   
  404a9a:	int3   
  404a9b:	int3   
  404a9c:	int3   
  404a9d:	int3   
  404a9e:	int3   
  404a9f:	int3   
  404aa0:	push   0xffffffff
  404aa2:	push   0x42c1c9
  404aa7:	mov    eax,fs:0x0
  404aad:	push   eax
  404aae:	sub    esp,0x40
  404ab1:	mov    eax,ds:0x43e020
  404ab6:	xor    eax,esp
  404ab8:	mov    DWORD PTR [esp+0x3c],eax
  404abc:	push   ebx
  404abd:	push   ebp
  404abe:	push   esi
  404abf:	push   edi
  404ac0:	mov    eax,ds:0x43e020
  404ac5:	xor    eax,esp
  404ac7:	push   eax
  404ac8:	lea    eax,[esp+0x54]
  404acc:	mov    fs:0x0,eax
  404ad2:	mov    eax,DWORD PTR [esp+0x64]
  404ad6:	xor    ebx,ebx
  404ad8:	mov    DWORD PTR [esp+0x2c],eax
  404adc:	mov    DWORD PTR [esp+0x14],ebx
  404ae0:	mov    BYTE PTR [esp+0x18],bl
  404ae4:	push   0x430e34
  404ae9:	mov    DWORD PTR [esp+0x60],ebx
  404aed:	call   DWORD PTR ds:0x4300c4
  404af3:	mov    ebp,eax
  404af5:	cmp    ebp,ebx
  404af7:	jne    0x404b13
  404af9:	push   0x430e34
  404afe:	call   DWORD PTR ds:0x4300d8
  404b04:	mov    ebp,eax
  404b06:	mov    BYTE PTR [esp+0x18],0x1
  404b0b:	cmp    ebp,ebx
  404b0d:	je     0x404bdf
  404b13:	mov    DWORD PTR [esp+0x14],ebp
  404b17:	cmp    ebp,ebx
  404b19:	je     0x404bce
  404b1f:	push   0x430e4c
  404b24:	push   ebp
  404b25:	call   DWORD PTR ds:0x4300dc
  404b2b:	mov    DWORD PTR [esp+0x28],eax
  404b2f:	cmp    eax,ebx
  404b31:	je     0x404bce
  404b37:	lea    edi,[esp+0x34]
  404b3b:	call   0x404980
  404b40:	mov    BYTE PTR [esp+0x5c],0x2
  404b45:	cmp    DWORD PTR [esp+0x4c],0x8
  404b4a:	mov    eax,DWORD PTR [esp+0x38]
  404b4e:	jae    0x404b54
  404b50:	lea    eax,[esp+0x38]
  404b54:	push   ebx
  404b55:	push   0x80
  404b5a:	push   0x2
  404b5c:	push   ebx
  404b5d:	push   0x3
  404b5f:	push   0xc0000000
  404b64:	push   eax
  404b65:	call   DWORD PTR ds:0x4300e4
  404b6b:	mov    esi,eax
  404b6d:	cmp    esi,0xffffffff
  404b70:	je     0x404bc0
  404b72:	cmp    esi,ebx
  404b74:	je     0x404bc0
  404b76:	xor    eax,eax
  404b78:	mov    DWORD PTR [esp+0x30],esi
  404b7c:	mov    DWORD PTR [esp+0x1c],ebx
  404b80:	mov    DWORD PTR [esp+0x20],eax
  404b84:	mov    DWORD PTR [esp+0x24],eax
  404b88:	call   DWORD PTR ds:0x4300e8
  404b8e:	mov    ecx,DWORD PTR [esp+0x2c]
  404b92:	push   ebx
  404b93:	push   ebx
  404b94:	lea    edx,[esp+0x24]
  404b98:	push   edx
  404b99:	push   ebx
  404b9a:	push   esi
  404b9b:	mov    DWORD PTR [esp+0x30],eax
  404b9f:	mov    DWORD PTR [esp+0x34],ecx
  404ba3:	mov    DWORD PTR [esp+0x38],ebx
  404ba7:	call   DWORD PTR ds:0x4300ec
  404bad:	push   eax
  404bae:	call   DWORD PTR ds:0x4300f0
  404bb4:	push   eax
  404bb5:	call   DWORD PTR [esp+0x44]
  404bb9:	push   esi
  404bba:	call   DWORD PTR ds:0x4300f4
  404bc0:	lea    ecx,[esp+0x34]
  404bc4:	mov    BYTE PTR [esp+0x5c],bl
  404bc8:	call   DWORD PTR ds:0x430264
  404bce:	cmp    BYTE PTR [esp+0x18],bl
  404bd2:	je     0x404bdf
  404bd4:	cmp    ebp,ebx
  404bd6:	je     0x404bdf
  404bd8:	push   ebp
  404bd9:	call   DWORD PTR ds:0x4300c0
  404bdf:	mov    ecx,DWORD PTR [esp+0x54]
  404be3:	mov    DWORD PTR fs:0x0,ecx
  404bea:	pop    ecx
  404beb:	pop    edi
  404bec:	pop    esi
  404bed:	pop    ebp
  404bee:	pop    ebx
  404bef:	mov    ecx,DWORD PTR [esp+0x3c]
  404bf3:	xor    ecx,esp
  404bf5:	call   0x42503a
  404bfa:	add    esp,0x4c
  404bfd:	ret    
  404bfe:	int3   
  404bff:	int3   
  404c00:	push   ebp
  404c01:	mov    ebp,esp
  404c03:	and    esp,0xfffffff8
  404c06:	push   0xffffffff
  404c08:	push   0x42de53
  404c0d:	mov    eax,fs:0x0
  404c13:	push   eax
  404c14:	sub    esp,0x50
  404c17:	mov    eax,ds:0x43e020
  404c1c:	xor    eax,esp
  404c1e:	mov    DWORD PTR [esp+0x48],eax
  404c22:	push   ebx
  404c23:	push   esi
  404c24:	push   edi
  404c25:	mov    eax,ds:0x43e020
  404c2a:	xor    eax,esp
  404c2c:	push   eax
  404c2d:	lea    eax,[esp+0x60]
  404c31:	mov    fs:0x0,eax
  404c37:	mov    eax,DWORD PTR [ebp+0xc]
  404c3a:	lea    ecx,[esp+0x3c]
  404c3e:	mov    DWORD PTR [esp+0x1c],eax
  404c42:	call   DWORD PTR ds:0x430260
  404c48:	xor    ebx,ebx
  404c4a:	cmp    DWORD PTR [ebp+0x8],0xc0000005
  404c51:	mov    DWORD PTR [esp+0x68],ebx
  404c55:	jne    0x404c76
  404c57:	lea    ecx,[esp+0x3c]
  404c5b:	push   ecx
  404c5c:	lea    edx,[esp+0x24]
  404c60:	push   0x430e90
  404c65:	push   edx
  404c66:	call   DWORD PTR ds:0x430170
  404c6c:	add    esp,0xc
  404c6f:	mov    BYTE PTR [esp+0x68],0x1
  404c74:	jmp    0x404c93
  404c76:	lea    eax,[esp+0x3c]
  404c7a:	push   eax
  404c7b:	lea    ecx,[esp+0x24]
  404c7f:	push   0x430eb8
  404c84:	push   ecx
  404c85:	call   DWORD PTR ds:0x430170
  404c8b:	add    esp,0xc
  404c8e:	mov    BYTE PTR [esp+0x68],0x2
  404c93:	push   eax
  404c94:	lea    ecx,[esp+0x40]
  404c98:	call   DWORD PTR ds:0x430174
  404c9e:	lea    ecx,[esp+0x20]
  404ca2:	mov    BYTE PTR [esp+0x68],bl
  404ca6:	call   DWORD PTR ds:0x43025c
  404cac:	call   0x4045f0
  404cb1:	mov    eax,DWORD PTR [eax+0x2c]
  404cb4:	cmp    eax,0x4
  404cb7:	jg     0x404d52
  404cbd:	mov    DWORD PTR [esp+0x14],0x4
  404cc5:	mov    DWORD PTR [esp+0x18],ebx
  404cc9:	call   0x4045f0
  404cce:	cmp    DWORD PTR [eax+0x2c],0x4
  404cd2:	jg     0x404d1a
  404cd4:	push   0x1000
  404cd9:	call   0x425050
  404cde:	add    esp,0x4
  404ce1:	push   0x1000
  404ce6:	mov    edi,eax
  404ce8:	push   ebx
  404ce9:	push   edi
  404cea:	mov    DWORD PTR [esp+0x24],edi
  404cee:	call   0x429f9c
  404cf3:	add    esp,0xc
  404cf6:	push   edi
  404cf7:	mov    esi,0x430edc
  404cfc:	call   0x404100
  404d01:	add    esp,0x4
  404d04:	push   0x3b
  404d06:	push   0x430ec8
  404d0b:	lea    eax,[edi+0x28]
  404d0e:	push   0x3c
  404d10:	push   eax
  404d11:	call   DWORD PTR ds:0x430384
  404d17:	add    esp,0x10
  404d1a:	mov    BYTE PTR [esp+0x68],0x3
  404d1f:	cmp    DWORD PTR [esp+0x54],0x10
  404d24:	mov    esi,DWORD PTR [esp+0x40]
  404d28:	jae    0x404d2e
  404d2a:	lea    esi,[esp+0x40]
  404d2e:	call   DWORD PTR ds:0x4300e8
  404d34:	push   eax
  404d35:	push   esi
  404d36:	push   0x430f0c
  404d3b:	lea    esi,[esp+0x20]
  404d3f:	call   0x4040d0
  404d44:	add    esp,0xc
  404d47:	mov    ecx,esi
  404d49:	mov    BYTE PTR [esp+0x68],bl
  404d4d:	call   0x404680
  404d52:	mov    edx,DWORD PTR [esp+0x1c]
  404d56:	push   edx
  404d57:	call   0x404aa0
  404d5c:	add    esp,0x4
  404d5f:	lea    ecx,[esp+0x3c]
  404d63:	mov    DWORD PTR [esp+0x68],0xffffffff
  404d6b:	call   DWORD PTR ds:0x43025c
  404d71:	mov    eax,0x1
  404d76:	mov    ecx,DWORD PTR [esp+0x60]
  404d7a:	mov    DWORD PTR fs:0x0,ecx
  404d81:	pop    ecx
  404d82:	pop    edi
  404d83:	pop    esi
  404d84:	pop    ebx
  404d85:	mov    ecx,DWORD PTR [esp+0x48]
  404d89:	xor    ecx,esp
  404d8b:	call   0x42503a
  404d90:	mov    esp,ebp
  404d92:	pop    ebp
  404d93:	ret    
  404d94:	int3   
  404d95:	int3   
  404d96:	int3   
  404d97:	int3   
  404d98:	int3   
  404d99:	int3   
  404d9a:	int3   
  404d9b:	int3   
  404d9c:	int3   
  404d9d:	int3   
  404d9e:	int3   
  404d9f:	int3   
  404da0:	push   0xffffffff
  404da2:	push   0x42d517
  404da7:	mov    eax,fs:0x0
  404dad:	push   eax
  404dae:	sub    esp,0x60
  404db1:	push   ebx
  404db2:	push   ebp
  404db3:	push   esi
  404db4:	push   edi
  404db5:	mov    eax,ds:0x43e020
  404dba:	xor    eax,esp
  404dbc:	push   eax
  404dbd:	lea    eax,[esp+0x74]
  404dc1:	mov    fs:0x0,eax
  404dc7:	mov    esi,ecx
  404dc9:	mov    ebp,DWORD PTR [esp+0x84]
  404dd0:	xor    edi,edi
  404dd2:	mov    DWORD PTR [esp+0x7c],edi
  404dd6:	mov    ecx,ebp
  404dd8:	mov    DWORD PTR [esp+0x1c],ebp
  404ddc:	mov    DWORD PTR [esp+0x18],edi
  404de0:	call   DWORD PTR ds:0x430254
  404de6:	cmp    esi,0x3e8
  404dec:	mov    DWORD PTR [esp+0x7c],edi
  404df0:	mov    ebx,DWORD PTR ds:0x4301a0
  404df6:	mov    ecx,esi
  404df8:	mov    DWORD PTR [esp+0x18],0x1
  404e00:	mov    DWORD PTR [esp+0x14],ecx
  404e04:	jl     0x404ebd
  404e0a:	lea    ebx,[ebx+0x0]
  404e10:	mov    eax,0x10624dd3
  404e15:	imul   ecx
  404e17:	sar    edx,0x6
  404e1a:	mov    edi,edx
  404e1c:	shr    edi,0x1f
  404e1f:	add    edi,edx
  404e21:	mov    eax,edi
  404e23:	imul   eax,eax,0x3e8
  404e29:	sub    ecx,eax
  404e2b:	lea    edx,[esp+0x14]
  404e2f:	lea    esi,[esp+0x3c]
  404e33:	mov    DWORD PTR [esp+0x14],ecx
  404e37:	call   0x4075f0
  404e3c:	push   eax
  404e3d:	lea    ecx,[esp+0x24]
  404e41:	push   0x430f3c
  404e46:	push   ecx
  404e47:	mov    DWORD PTR [esp+0x88],0x1
  404e52:	call   DWORD PTR ds:0x43019c
  404e58:	add    esp,0xc
  404e5b:	push   ebp
  404e5c:	push   eax
  404e5d:	lea    edx,[esp+0x60]
  404e61:	push   edx
  404e62:	mov    BYTE PTR [esp+0x88],0x2
  404e6a:	call   ebx
  404e6c:	add    esp,0xc
  404e6f:	push   eax
  404e70:	mov    ecx,ebp
  404e72:	mov    BYTE PTR [esp+0x80],0x3
  404e7a:	call   DWORD PTR ds:0x43017c
  404e80:	lea    ecx,[esp+0x58]
  404e84:	mov    BYTE PTR [esp+0x7c],0x2
  404e89:	call   DWORD PTR ds:0x430264
  404e8f:	lea    ecx,[esp+0x20]
  404e93:	mov    BYTE PTR [esp+0x7c],0x1
  404e98:	call   DWORD PTR ds:0x430264
  404e9e:	mov    ecx,esi
  404ea0:	mov    BYTE PTR [esp+0x7c],0x0
  404ea5:	call   DWORD PTR ds:0x430264
  404eab:	mov    ecx,edi
  404ead:	cmp    ecx,0x3e8
  404eb3:	jge    0x404e10
  404eb9:	mov    DWORD PTR [esp+0x14],ecx
  404ebd:	lea    edx,[esp+0x14]
  404ec1:	lea    esi,[esp+0x20]
  404ec5:	call   0x4075f0
  404eca:	push   ebp
  404ecb:	push   eax
  404ecc:	lea    eax,[esp+0x44]
  404ed0:	push   eax
  404ed1:	mov    DWORD PTR [esp+0x88],0x4
  404edc:	call   ebx
  404ede:	add    esp,0xc
  404ee1:	push   eax
  404ee2:	mov    ecx,ebp
  404ee4:	mov    BYTE PTR [esp+0x80],0x5
  404eec:	call   DWORD PTR ds:0x43017c
  404ef2:	lea    ecx,[esp+0x3c]
  404ef6:	mov    BYTE PTR [esp+0x7c],0x4
  404efb:	call   DWORD PTR ds:0x430264
  404f01:	mov    ecx,esi
  404f03:	mov    BYTE PTR [esp+0x7c],0x0
  404f08:	call   DWORD PTR ds:0x430264
  404f0e:	mov    eax,ebp
  404f10:	mov    ecx,DWORD PTR [esp+0x74]
  404f14:	mov    DWORD PTR fs:0x0,ecx
  404f1b:	pop    ecx
  404f1c:	pop    edi
  404f1d:	pop    esi
  404f1e:	pop    ebp
  404f1f:	pop    ebx
  404f20:	add    esp,0x6c
  404f23:	ret    
  404f24:	int3   
  404f25:	int3   
  404f26:	int3   
  404f27:	int3   
  404f28:	int3   
  404f29:	int3   
  404f2a:	int3   
  404f2b:	int3   
  404f2c:	int3   
  404f2d:	int3   
  404f2e:	int3   
  404f2f:	int3   
  404f30:	push   0xffffffff
  404f32:	push   0x42de06
  404f37:	mov    eax,fs:0x0
  404f3d:	push   eax
  404f3e:	sub    esp,0x7c
  404f41:	push   ebp
  404f42:	push   esi
  404f43:	mov    eax,ds:0x43e020
  404f48:	xor    eax,esp
  404f4a:	push   eax
  404f4b:	lea    eax,[esp+0x88]
  404f52:	mov    fs:0x0,eax
  404f58:	mov    esi,ecx
  404f5a:	cmp    esi,0x100000
  404f60:	jle    0x4050af
  404f66:	mov    eax,esi
  404f68:	cdq    
  404f69:	and    edx,0x3ff
  404f6f:	add    eax,edx
  404f71:	sar    eax,0xa
  404f74:	cdq    
  404f75:	and    edx,0x3ff
  404f7b:	add    eax,edx
  404f7d:	mov    ecx,eax
  404f7f:	lea    eax,[esp+0x18]
  404f83:	sar    ecx,0xa
  404f86:	push   eax
  404f87:	call   0x404da0
  404f8c:	add    esp,0x4
  404f8f:	push   eax
  404f90:	mov    ecx,edi
  404f92:	mov    DWORD PTR [esp+0x94],0x0
  404f9d:	call   DWORD PTR ds:0x43017c
  404fa3:	lea    ecx,[esp+0x18]
  404fa7:	mov    DWORD PTR [esp+0x90],0xffffffff
  404fb2:	call   DWORD PTR ds:0x430264
  404fb8:	push   0x430f40
  404fbd:	mov    ecx,edi
  404fbf:	call   DWORD PTR ds:0x430140
  404fc5:	mov    ecx,esi
  404fc7:	and    ecx,0x800fffff
  404fcd:	jns    0x404fd7
  404fcf:	dec    ecx
  404fd0:	or     ecx,0xfff00000
  404fd6:	inc    ecx
  404fd7:	mov    eax,0xa0003c01
  404fdc:	imul   ecx
  404fde:	add    edx,ecx
  404fe0:	sar    edx,0x10
  404fe3:	mov    ecx,edx
  404fe5:	shr    ecx,0x1f
  404fe8:	add    ecx,edx
  404fea:	mov    eax,0xa0003c01
  404fef:	imul   esi
  404ff1:	add    edx,esi
  404ff3:	sar    edx,0x10
  404ff6:	mov    eax,edx
  404ff8:	shr    eax,0x1f
  404ffb:	add    eax,edx
  404ffd:	imul   eax,eax,0x19999
  405003:	sub    esi,eax
  405005:	mov    eax,0x6401db09
  40500a:	imul   esi
  40500c:	sar    edx,0xc
  40500f:	mov    DWORD PTR [esp+0x14],ecx
  405013:	mov    ecx,edx
  405015:	shr    ecx,0x1f
  405018:	add    ecx,edx
  40501a:	lea    edx,[esp+0x10]
  40501e:	lea    esi,[esp+0x50]
  405022:	mov    DWORD PTR [esp+0x10],ecx
  405026:	call   0x4075f0
  40502b:	mov    ebp,eax
  40502d:	lea    edx,[esp+0x14]
  405031:	lea    esi,[esp+0x34]
  405035:	mov    DWORD PTR [esp+0x90],0x1
  405040:	call   0x4075f0
  405045:	push   ebp
  405046:	push   eax
  405047:	lea    edx,[esp+0x20]
  40504b:	push   edx
  40504c:	mov    BYTE PTR [esp+0x9c],0x2
  405054:	call   DWORD PTR ds:0x4301a0
  40505a:	add    esp,0xc
  40505d:	push   eax
  40505e:	mov    ecx,edi
  405060:	mov    BYTE PTR [esp+0x94],0x3
  405068:	call   DWORD PTR ds:0x430144
  40506e:	lea    ecx,[esp+0x18]
  405072:	mov    BYTE PTR [esp+0x90],0x2
  40507a:	call   DWORD PTR ds:0x430264
  405080:	mov    ecx,esi
  405082:	mov    BYTE PTR [esp+0x90],0x1
  40508a:	call   DWORD PTR ds:0x430264
  405090:	lea    ecx,[esp+0x50]
  405094:	mov    DWORD PTR [esp+0x90],0xffffffff
  40509f:	call   DWORD PTR ds:0x430264
  4050a5:	push   0x430f44
  4050aa:	jmp    0x405141
  4050af:	cmp    esi,0x400
  4050b5:	jle    0x405104
  4050b7:	mov    eax,esi
  4050b9:	cdq    
  4050ba:	and    edx,0x3ff
  4050c0:	add    eax,edx
  4050c2:	mov    ecx,eax
  4050c4:	lea    eax,[esp+0x50]
  4050c8:	sar    ecx,0xa
  4050cb:	push   eax
  4050cc:	call   0x404da0
  4050d1:	add    esp,0x4
  4050d4:	push   eax
  4050d5:	mov    ecx,edi
  4050d7:	mov    DWORD PTR [esp+0x94],0x4
  4050e2:	call   DWORD PTR ds:0x43017c
  4050e8:	lea    ecx,[esp+0x50]
  4050ec:	mov    DWORD PTR [esp+0x90],0xffffffff
  4050f7:	call   DWORD PTR ds:0x430264
  4050fd:	push   0x430f4c
  405102:	jmp    0x405141
  405104:	lea    ecx,[esp+0x6c]
  405108:	push   ecx
  405109:	mov    ecx,esi
  40510b:	call   0x404da0
  405110:	add    esp,0x4
  405113:	push   eax
  405114:	mov    ecx,edi
  405116:	mov    DWORD PTR [esp+0x94],0x5
  405121:	call   DWORD PTR ds:0x43017c
  405127:	lea    ecx,[esp+0x6c]
  40512b:	mov    DWORD PTR [esp+0x90],0xffffffff
  405136:	call   DWORD PTR ds:0x430264
  40513c:	push   0x430ae0
  405141:	mov    ecx,ebx
  405143:	call   DWORD PTR ds:0x4301c0
  405149:	mov    ecx,DWORD PTR [esp+0x88]
  405150:	mov    DWORD PTR fs:0x0,ecx
  405157:	pop    ecx
  405158:	pop    esi
  405159:	pop    ebp
  40515a:	add    esp,0x88
  405160:	ret    
  405161:	int3   
  405162:	int3   
  405163:	int3   
  405164:	int3   
  405165:	int3   
  405166:	int3   
  405167:	int3   
  405168:	int3   
  405169:	int3   
  40516a:	int3   
  40516b:	int3   
  40516c:	int3   
  40516d:	int3   
  40516e:	int3   
  40516f:	int3   
  405170:	push   0xffffffff
  405172:	push   0x42d4a1
  405177:	mov    eax,fs:0x0
  40517d:	push   eax
  40517e:	sub    esp,0x194
  405184:	push   ebx
  405185:	push   ebp
  405186:	push   esi
  405187:	push   edi
  405188:	mov    eax,ds:0x43e020
  40518d:	xor    eax,esp
  40518f:	push   eax
  405190:	lea    eax,[esp+0x1a8]
  405197:	mov    fs:0x0,eax
  40519d:	mov    ecx,DWORD PTR [esp+0x1b8]
  4051a4:	cmp    ecx,0xe10
  4051aa:	jl     0x4053fb
  4051b0:	mov    eax,0x91a2b3c5
  4051b5:	imul   ecx
  4051b7:	add    edx,ecx
  4051b9:	sar    edx,0xb
  4051bc:	mov    eax,edx
  4051be:	shr    eax,0x1f
  4051c1:	add    eax,edx
  4051c3:	mov    DWORD PTR [esp+0x1c],eax
  4051c7:	imul   eax,eax,0xe10
  4051cd:	sub    ecx,eax
  4051cf:	mov    eax,0x88888889
  4051d4:	imul   ecx
  4051d6:	add    edx,ecx
  4051d8:	sar    edx,0x5
  4051db:	mov    eax,edx
  4051dd:	shr    eax,0x1f
  4051e0:	add    eax,edx
  4051e2:	push   0x430f54
  4051e7:	lea    ecx,[esp+0x40]
  4051eb:	mov    DWORD PTR [esp+0x1c],eax
  4051ef:	call   DWORD PTR ds:0x43011c
  4051f5:	push   0x430f64
  4051fa:	lea    ecx,[esp+0x24]
  4051fe:	mov    DWORD PTR [esp+0x1b4],0x0
  405209:	call   DWORD PTR ds:0x43011c
  40520f:	mov    BYTE PTR [esp+0x1b0],0x1
  405217:	call   0x41f6c0
  40521c:	mov    ecx,DWORD PTR ds:0x43ff8c
  405222:	mov    eax,DWORD PTR [esp+0x40]
  405226:	mov    ebx,0x10
  40522b:	cmp    DWORD PTR [esp+0x54],ebx
  40522f:	jae    0x405235
  405231:	lea    eax,[esp+0x40]
  405235:	mov    edx,DWORD PTR [ecx]
  405237:	push   eax
  405238:	mov    eax,DWORD PTR [edx+0x8]
  40523b:	call   eax
  40523d:	push   eax
  40523e:	lea    ecx,[esp+0xe8]
  405245:	call   DWORD PTR ds:0x430268
  40524b:	mov    ebp,eax
  40524d:	lea    edx,[esp+0x18]
  405251:	lea    esi,[esp+0xac]
  405258:	mov    BYTE PTR [esp+0x1b0],0x2
  405260:	call   0x4075f0
  405265:	mov    DWORD PTR [esp+0x18],eax
  405269:	mov    BYTE PTR [esp+0x1b0],0x3
  405271:	call   0x41f6c0
  405276:	mov    ecx,DWORD PTR ds:0x43ff8c
  40527c:	mov    eax,DWORD PTR [esp+0x24]
  405280:	cmp    DWORD PTR [esp+0x38],ebx
  405284:	jae    0x40528a
  405286:	lea    eax,[esp+0x24]
  40528a:	mov    edx,DWORD PTR [ecx]
  40528c:	push   eax
  40528d:	mov    eax,DWORD PTR [edx+0x8]
  405290:	call   eax
  405292:	push   eax
  405293:	lea    ecx,[esp+0x94]
  40529a:	call   DWORD PTR ds:0x430268
  4052a0:	mov    edi,eax
  4052a2:	lea    edx,[esp+0x1c]
  4052a6:	lea    esi,[esp+0x100]
  4052ad:	mov    BYTE PTR [esp+0x1b0],0x4
  4052b5:	call   0x4075f0
  4052ba:	push   edi
  4052bb:	push   eax
  4052bc:	lea    ecx,[esp+0x124]
  4052c3:	mov    BYTE PTR [esp+0x1b8],0x5
  4052cb:	mov    esi,DWORD PTR ds:0x4301a0
  4052d1:	push   ecx
  4052d2:	call   esi
  4052d4:	add    esp,0xc
  4052d7:	push   0x430f60
  4052dc:	push   eax
  4052dd:	lea    edx,[esp+0x7c]
  4052e1:	push   edx
  4052e2:	mov    BYTE PTR [esp+0x1bc],0x6
  4052ea:	call   DWORD PTR ds:0x4301a4
  4052f0:	add    esp,0xc
  4052f3:	mov    BYTE PTR [esp+0x1b0],0x7
  4052fb:	mov    ecx,DWORD PTR [esp+0x18]
  4052ff:	push   ecx
  405300:	push   eax
  405301:	lea    edx,[esp+0x140]
  405308:	push   edx
  405309:	call   esi
  40530b:	add    esp,0xc
  40530e:	push   ebp
  40530f:	push   eax
  405310:	lea    eax,[esp+0xd0]
  405317:	mov    bl,0x8
  405319:	push   eax
  40531a:	mov    BYTE PTR [esp+0x1bc],bl
  405321:	call   esi
  405323:	add    esp,0xc
  405326:	mov    ecx,DWORD PTR [esp+0x1bc]
  40532d:	push   eax
  40532e:	mov    BYTE PTR [esp+0x1b4],0x9
  405336:	call   DWORD PTR ds:0x43017c
  40533c:	lea    ecx,[esp+0xc8]
  405343:	mov    BYTE PTR [esp+0x1b0],bl
  40534a:	call   DWORD PTR ds:0x430264
  405350:	lea    ecx,[esp+0x138]
  405357:	mov    BYTE PTR [esp+0x1b0],0x7
  40535f:	call   DWORD PTR ds:0x430264
  405365:	lea    ecx,[esp+0x74]
  405369:	mov    BYTE PTR [esp+0x1b0],0x6
  405371:	call   DWORD PTR ds:0x430264
  405377:	lea    ecx,[esp+0x11c]
  40537e:	mov    BYTE PTR [esp+0x1b0],0x5
  405386:	call   DWORD PTR ds:0x430264
  40538c:	lea    ecx,[esp+0x100]
  405393:	mov    BYTE PTR [esp+0x1b0],0x4
  40539b:	call   DWORD PTR ds:0x430264
  4053a1:	lea    ecx,[esp+0x90]
  4053a8:	mov    BYTE PTR [esp+0x1b0],0x3
  4053b0:	call   DWORD PTR ds:0x430264
  4053b6:	lea    ecx,[esp+0xac]
  4053bd:	mov    BYTE PTR [esp+0x1b0],0x2
  4053c5:	call   DWORD PTR ds:0x430264
  4053cb:	lea    ecx,[esp+0xe4]
  4053d2:	mov    BYTE PTR [esp+0x1b0],0x1
  4053da:	call   DWORD PTR ds:0x430264
  4053e0:	lea    ecx,[esp+0x20]
  4053e4:	mov    BYTE PTR [esp+0x1b0],0x0
  4053ec:	call   DWORD PTR ds:0x43025c
  4053f2:	lea    ecx,[esp+0x3c]
  4053f6:	jmp    0x405745
  4053fb:	cmp    ecx,0x3c
  4053fe:	jl     0x40566f
  405404:	mov    eax,0x91a2b3c5
  405409:	imul   ecx
  40540b:	add    edx,ecx
  40540d:	sar    edx,0xb
  405410:	mov    eax,edx
  405412:	shr    eax,0x1f
  405415:	add    eax,edx
  405417:	imul   eax,eax,0xe10
  40541d:	mov    esi,ecx
  40541f:	sub    esi,eax
  405421:	mov    eax,0x88888889
  405426:	imul   esi
  405428:	add    edx,esi
  40542a:	sar    edx,0x5
  40542d:	mov    eax,edx
  40542f:	shr    eax,0x1f
  405432:	add    eax,edx
  405434:	mov    DWORD PTR [esp+0x18],eax
  405438:	mov    eax,0x88888889
  40543d:	imul   ecx
  40543f:	add    edx,ecx
  405441:	sar    edx,0x5
  405444:	mov    eax,edx
  405446:	shr    eax,0x1f
  405449:	add    eax,edx
  40544b:	mov    edx,eax
  40544d:	shl    edx,0x4
  405450:	sub    edx,eax
  405452:	add    edx,edx
  405454:	add    edx,edx
  405456:	sub    ecx,edx
  405458:	mov    DWORD PTR [esp+0x1c],ecx
  40545c:	push   0x430f6c
  405461:	lea    ecx,[esp+0x24]
  405465:	call   DWORD PTR ds:0x43011c
  40546b:	push   0x430f54
  405470:	lea    ecx,[esp+0x40]
  405474:	mov    DWORD PTR [esp+0x1b4],0xa
  40547f:	call   DWORD PTR ds:0x43011c
  405485:	mov    BYTE PTR [esp+0x1b0],0xb
  40548d:	call   0x41f6c0
  405492:	mov    ecx,DWORD PTR ds:0x43ff8c
  405498:	mov    eax,DWORD PTR [esp+0x24]
  40549c:	mov    ebx,0x10
  4054a1:	cmp    DWORD PTR [esp+0x38],ebx
  4054a5:	jae    0x4054ab
  4054a7:	lea    eax,[esp+0x24]
  4054ab:	mov    edx,DWORD PTR [ecx]
  4054ad:	push   eax
  4054ae:	mov    eax,DWORD PTR [edx+0x8]
  4054b1:	call   eax
  4054b3:	push   eax
  4054b4:	lea    ecx,[esp+0xcc]
  4054bb:	call   DWORD PTR ds:0x430268
  4054c1:	mov    ebp,eax
  4054c3:	lea    edx,[esp+0x1c]
  4054c7:	lea    esi,[esp+0x138]
  4054ce:	mov    BYTE PTR [esp+0x1b0],0xc
  4054d6:	call   0x4075f0
  4054db:	mov    DWORD PTR [esp+0x1c],eax
  4054df:	mov    BYTE PTR [esp+0x1b0],0xd
  4054e7:	call   0x41f6c0
  4054ec:	mov    ecx,DWORD PTR ds:0x43ff8c
  4054f2:	mov    eax,DWORD PTR [esp+0x40]
  4054f6:	cmp    DWORD PTR [esp+0x54],ebx
  4054fa:	jae    0x405500
  4054fc:	lea    eax,[esp+0x40]
  405500:	mov    edx,DWORD PTR [ecx]
  405502:	push   eax
  405503:	mov    eax,DWORD PTR [edx+0x8]
  405506:	call   eax
  405508:	push   eax
  405509:	lea    ecx,[esp+0x78]
  40550d:	call   DWORD PTR ds:0x430268
  405513:	mov    edi,eax
  405515:	lea    edx,[esp+0x18]
  405519:	lea    esi,[esp+0x11c]
  405520:	mov    BYTE PTR [esp+0x1b0],0xe
  405528:	call   0x4075f0
  40552d:	push   edi
  40552e:	push   eax
  40552f:	lea    ecx,[esp+0x108]
  405536:	mov    BYTE PTR [esp+0x1b8],0xf
  40553e:	mov    esi,DWORD PTR ds:0x4301a0
  405544:	push   ecx
  405545:	call   esi
  405547:	add    esp,0xc
  40554a:	push   0x430f60
  40554f:	push   eax
  405550:	lea    edx,[esp+0x98]
  405557:	push   edx
  405558:	mov    BYTE PTR [esp+0x1bc],bl
  40555f:	call   DWORD PTR ds:0x4301a4
  405565:	add    esp,0xc
  405568:	mov    BYTE PTR [esp+0x1b0],0x11
  405570:	mov    ecx,DWORD PTR [esp+0x1c]
  405574:	push   ecx
  405575:	push   eax
  405576:	lea    edx,[esp+0xb4]
  40557d:	push   edx
  40557e:	call   esi
  405580:	add    esp,0xc
  405583:	push   ebp
  405584:	push   eax
  405585:	lea    eax,[esp+0xec]
  40558c:	push   eax
  40558d:	mov    BYTE PTR [esp+0x1bc],0x12
  405595:	call   esi
  405597:	add    esp,0xc
  40559a:	mov    ecx,DWORD PTR [esp+0x1bc]
  4055a1:	push   eax
  4055a2:	mov    BYTE PTR [esp+0x1b4],0x13
  4055aa:	call   DWORD PTR ds:0x43017c
  4055b0:	lea    ecx,[esp+0xe4]
  4055b7:	mov    BYTE PTR [esp+0x1b0],0x12
  4055bf:	call   DWORD PTR ds:0x430264
  4055c5:	lea    ecx,[esp+0xac]
  4055cc:	mov    BYTE PTR [esp+0x1b0],0x11
  4055d4:	call   DWORD PTR ds:0x430264
  4055da:	lea    ecx,[esp+0x90]
  4055e1:	mov    BYTE PTR [esp+0x1b0],bl
  4055e8:	call   DWORD PTR ds:0x430264
  4055ee:	lea    ecx,[esp+0x100]
  4055f5:	mov    BYTE PTR [esp+0x1b0],0xf
  4055fd:	call   DWORD PTR ds:0x430264
  405603:	lea    ecx,[esp+0x11c]
  40560a:	mov    BYTE PTR [esp+0x1b0],0xe
  405612:	call   DWORD PTR ds:0x430264
  405618:	lea    ecx,[esp+0x74]
  40561c:	mov    BYTE PTR [esp+0x1b0],0xd
  405624:	call   DWORD PTR ds:0x430264
  40562a:	lea    ecx,[esp+0x138]
  405631:	mov    BYTE PTR [esp+0x1b0],0xc
  405639:	call   DWORD PTR ds:0x430264
  40563f:	lea    ecx,[esp+0xc8]
  405646:	mov    BYTE PTR [esp+0x1b0],0xb
  40564e:	call   DWORD PTR ds:0x430264
  405654:	lea    ecx,[esp+0x3c]
  405658:	mov    BYTE PTR [esp+0x1b0],0xa
  405660:	call   DWORD PTR ds:0x43025c
  405666:	lea    ecx,[esp+0x20]
  40566a:	jmp    0x405745
  40566f:	push   0x430f6c
  405674:	lea    ecx,[esp+0x5c]
  405678:	call   DWORD PTR ds:0x43011c
  40567e:	mov    DWORD PTR [esp+0x1b0],0x14
  405689:	call   0x41f6c0
  40568e:	cmp    DWORD PTR [esp+0x70],0x10
  405693:	mov    ecx,DWORD PTR ds:0x43ff8c
  405699:	mov    eax,DWORD PTR [esp+0x5c]
  40569d:	jae    0x4056a3
  40569f:	lea    eax,[esp+0x5c]
  4056a3:	mov    edx,DWORD PTR [ecx]
  4056a5:	push   eax
  4056a6:	mov    eax,DWORD PTR [edx+0x8]
  4056a9:	call   eax
  4056ab:	push   eax
  4056ac:	lea    ecx,[esp+0x190]
  4056b3:	call   DWORD PTR ds:0x430268
  4056b9:	mov    edi,eax
  4056bb:	lea    edx,[esp+0x1b8]
  4056c2:	lea    esi,[esp+0x170]
  4056c9:	mov    BYTE PTR [esp+0x1b0],0x15
  4056d1:	call   0x4075f0
  4056d6:	push   edi
  4056d7:	push   eax
  4056d8:	lea    ecx,[esp+0x15c]
  4056df:	mov    bl,0x16
  4056e1:	push   ecx
  4056e2:	mov    BYTE PTR [esp+0x1bc],bl
  4056e9:	call   DWORD PTR ds:0x4301a0
  4056ef:	add    esp,0xc
  4056f2:	mov    ecx,DWORD PTR [esp+0x1bc]
  4056f9:	push   eax
  4056fa:	mov    BYTE PTR [esp+0x1b4],0x17
  405702:	call   DWORD PTR ds:0x43017c
  405708:	lea    ecx,[esp+0x154]
  40570f:	mov    BYTE PTR [esp+0x1b0],bl
  405716:	call   DWORD PTR ds:0x430264
  40571c:	mov    ecx,esi
  40571e:	mov    BYTE PTR [esp+0x1b0],0x15
  405726:	call   DWORD PTR ds:0x430264
  40572c:	lea    ecx,[esp+0x18c]
  405733:	mov    BYTE PTR [esp+0x1b0],0x14
  40573b:	call   DWORD PTR ds:0x430264
  405741:	lea    ecx,[esp+0x58]
  405745:	mov    DWORD PTR [esp+0x1b0],0xffffffff
  405750:	call   DWORD PTR ds:0x43025c
  405756:	mov    ecx,DWORD PTR [esp+0x1a8]
  40575d:	mov    DWORD PTR fs:0x0,ecx
  405764:	pop    ecx
  405765:	pop    edi
  405766:	pop    esi
  405767:	pop    ebp
  405768:	pop    ebx
  405769:	add    esp,0x1a0
  40576f:	ret    
  405770:	push   ebp
  405771:	mov    ebp,esp
  405773:	and    esp,0xfffffff8
  405776:	push   0xffffffff
  405778:	push   0x42f091
  40577d:	mov    eax,fs:0x0
  405783:	push   eax
  405784:	sub    esp,0xd8
  40578a:	mov    eax,ds:0x43e020
  40578f:	xor    eax,esp
  405791:	mov    DWORD PTR [esp+0xd0],eax
  405798:	push   ebx
  405799:	push   esi
  40579a:	push   edi
  40579b:	mov    eax,ds:0x43e020
  4057a0:	xor    eax,esp
  4057a2:	push   eax
  4057a3:	lea    eax,[esp+0xe8]
  4057aa:	mov    fs:0x0,eax
  4057b0:	mov    ebx,ecx
  4057b2:	xor    esi,esi
  4057b4:	mov    DWORD PTR [esp+0x10],esi
  4057b8:	mov    edi,ebx
  4057ba:	mov    BYTE PTR [ebx+0x51],0x0
  4057be:	call   0x40b0c0
  4057c3:	push   0x430fac
  4057c8:	lea    ecx,[esp+0x18]
  4057cc:	call   DWORD PTR ds:0x43011c
  4057d2:	push   0x430fb8
  4057d7:	lea    ecx,[esp+0x34]
  4057db:	mov    DWORD PTR [esp+0xf4],esi
  4057e2:	call   DWORD PTR ds:0x43011c
  4057e8:	mov    BYTE PTR [esp+0xf0],0x1
  4057f0:	call   0x41f6c0
  4057f5:	cmp    DWORD PTR [esp+0x2c],0x10
  4057fa:	mov    ecx,DWORD PTR ds:0x43ff8c
  405800:	mov    eax,DWORD PTR [esp+0x18]
  405804:	jae    0x40580a
  405806:	lea    eax,[esp+0x18]
  40580a:	mov    edx,DWORD PTR [ecx]
  40580c:	push   eax
  40580d:	mov    eax,DWORD PTR [edx+0x8]
  405810:	call   eax
  405812:	push   eax
  405813:	lea    ecx,[esp+0x50]
  405817:	call   DWORD PTR ds:0x430268
  40581d:	push   eax
  40581e:	lea    ecx,[esp+0x34]
  405822:	mov    edi,ebx
  405824:	mov    BYTE PTR [esp+0xf4],0x2
  40582c:	call   0x40af10
  405831:	lea    ecx,[esp+0x4c]
  405835:	mov    BYTE PTR [esp+0xf0],0x1
  40583d:	call   DWORD PTR ds:0x430264
  405843:	lea    ecx,[esp+0x30]
  405847:	mov    BYTE PTR [esp+0xf0],0x0
  40584f:	call   DWORD PTR ds:0x43025c
  405855:	or     esi,0xffffffff
  405858:	lea    ecx,[esp+0x14]
  40585c:	mov    DWORD PTR [esp+0xf0],esi
  405863:	call   DWORD PTR ds:0x43025c
  405869:	push   0x430fcc
  40586e:	lea    ecx,[esp+0x18]
  405872:	call   DWORD PTR ds:0x43011c
  405878:	push   0x430fdc
  40587d:	lea    ecx,[esp+0x34]
  405881:	mov    DWORD PTR [esp+0xf4],0x3
  40588c:	call   DWORD PTR ds:0x43011c
  405892:	mov    BYTE PTR [esp+0xf0],0x4
  40589a:	call   0x41f6c0
  40589f:	cmp    DWORD PTR [esp+0x2c],0x10
  4058a4:	mov    ecx,DWORD PTR ds:0x43ff8c
  4058aa:	mov    eax,DWORD PTR [esp+0x18]
  4058ae:	jae    0x4058b4
  4058b0:	lea    eax,[esp+0x18]
  4058b4:	mov    edx,DWORD PTR [ecx]
  4058b6:	push   eax
  4058b7:	mov    eax,DWORD PTR [edx+0x8]
  4058ba:	call   eax
  4058bc:	push   eax
  4058bd:	lea    ecx,[esp+0x50]
  4058c1:	call   DWORD PTR ds:0x430268
  4058c7:	lea    ecx,[esp+0x30]
  4058cb:	push   ecx
  4058cc:	push   ebx
  4058cd:	mov    edi,eax
  4058cf:	mov    BYTE PTR [esp+0xf8],0x5
  4058d7:	call   0x40aff0
  4058dc:	lea    ecx,[esp+0x4c]
  4058e0:	mov    BYTE PTR [esp+0xf0],0x4
  4058e8:	call   DWORD PTR ds:0x430264
  4058ee:	lea    ecx,[esp+0x30]
  4058f2:	mov    BYTE PTR [esp+0xf0],0x3
  4058fa:	call   DWORD PTR ds:0x43025c
  405900:	lea    ecx,[esp+0x14]
  405904:	mov    DWORD PTR [esp+0xf0],esi
  40590b:	call   DWORD PTR ds:0x43025c
  405911:	push   0x430fec
  405916:	lea    ecx,[esp+0x18]
  40591a:	call   DWORD PTR ds:0x43011c
  405920:	push   0x430ff4
  405925:	lea    ecx,[esp+0x34]
  405929:	mov    DWORD PTR [esp+0xf4],0x6
  405934:	call   DWORD PTR ds:0x43011c
  40593a:	mov    BYTE PTR [esp+0xf0],0x7
  405942:	call   0x41f6c0
  405947:	cmp    DWORD PTR [esp+0x2c],0x10
  40594c:	mov    ecx,DWORD PTR ds:0x43ff8c
  405952:	mov    eax,DWORD PTR [esp+0x18]
  405956:	jae    0x40595c
  405958:	lea    eax,[esp+0x18]
  40595c:	mov    edx,DWORD PTR [ecx]
  40595e:	push   eax
  40595f:	mov    eax,DWORD PTR [edx+0x8]
  405962:	call   eax
  405964:	push   eax
  405965:	lea    ecx,[esp+0x50]
  405969:	call   DWORD PTR ds:0x430268
  40596f:	lea    ecx,[esp+0x30]
  405973:	push   ecx
  405974:	push   ebx
  405975:	mov    edi,eax
  405977:	mov    BYTE PTR [esp+0xf8],0x8
  40597f:	call   0x40aff0
  405984:	lea    ecx,[esp+0x4c]
  405988:	mov    BYTE PTR [esp+0xf0],0x7
  405990:	call   DWORD PTR ds:0x430264
  405996:	lea    ecx,[esp+0x30]
  40599a:	mov    BYTE PTR [esp+0xf0],0x6
  4059a2:	call   DWORD PTR ds:0x43025c
  4059a8:	lea    ecx,[esp+0x14]
  4059ac:	mov    DWORD PTR [esp+0xf0],esi
  4059b3:	call   DWORD PTR ds:0x43025c
  4059b9:	push   0x431004
  4059be:	lea    ecx,[esp+0x18]
  4059c2:	call   DWORD PTR ds:0x43011c
  4059c8:	push   0x43100c
  4059cd:	lea    ecx,[esp+0x34]
  4059d1:	mov    DWORD PTR [esp+0xf4],0x9
  4059dc:	call   DWORD PTR ds:0x43011c
  4059e2:	mov    BYTE PTR [esp+0xf0],0xa
  4059ea:	call   0x41f6c0
  4059ef:	cmp    DWORD PTR [esp+0x2c],0x10
  4059f4:	mov    ecx,DWORD PTR ds:0x43ff8c
  4059fa:	mov    eax,DWORD PTR [esp+0x18]
  4059fe:	jae    0x405a04
  405a00:	lea    eax,[esp+0x18]
  405a04:	mov    edx,DWORD PTR [ecx]
  405a06:	push   eax
  405a07:	mov    eax,DWORD PTR [edx+0x8]
  405a0a:	call   eax
  405a0c:	push   eax
  405a0d:	lea    ecx,[esp+0x50]
  405a11:	call   DWORD PTR ds:0x430268
  405a17:	lea    ecx,[esp+0x30]
  405a1b:	push   ecx
  405a1c:	push   ebx
  405a1d:	mov    edi,eax
  405a1f:	mov    BYTE PTR [esp+0xf8],0xb
  405a27:	call   0x40aff0
  405a2c:	lea    ecx,[esp+0x4c]
  405a30:	mov    BYTE PTR [esp+0xf0],0xa
  405a38:	call   DWORD PTR ds:0x430264
  405a3e:	lea    ecx,[esp+0x30]
  405a42:	mov    BYTE PTR [esp+0xf0],0x9
  405a4a:	call   DWORD PTR ds:0x43025c
  405a50:	lea    ecx,[esp+0x14]
  405a54:	mov    DWORD PTR [esp+0xf0],esi
  405a5b:	call   DWORD PTR ds:0x43025c
  405a61:	push   0x43101c
  405a66:	lea    ecx,[esp+0x18]
  405a6a:	call   DWORD PTR ds:0x43011c
  405a70:	push   0x431024
  405a75:	lea    ecx,[esp+0x34]
  405a79:	mov    DWORD PTR [esp+0xf4],0xc
  405a84:	call   DWORD PTR ds:0x43011c
  405a8a:	mov    BYTE PTR [esp+0xf0],0xd
  405a92:	call   0x41f6c0
  405a97:	cmp    DWORD PTR [esp+0x2c],0x10
  405a9c:	mov    ecx,DWORD PTR ds:0x43ff8c
  405aa2:	mov    eax,DWORD PTR [esp+0x18]
  405aa6:	jae    0x405aac
  405aa8:	lea    eax,[esp+0x18]
  405aac:	mov    edx,DWORD PTR [ecx]
  405aae:	push   eax
  405aaf:	mov    eax,DWORD PTR [edx+0x8]
  405ab2:	call   eax
  405ab4:	push   eax
  405ab5:	lea    ecx,[esp+0x50]
  405ab9:	call   DWORD PTR ds:0x430268
  405abf:	lea    ecx,[esp+0x30]
  405ac3:	push   ecx
  405ac4:	push   ebx
  405ac5:	mov    edi,eax
  405ac7:	mov    BYTE PTR [esp+0xf8],0xe
  405acf:	call   0x40aff0
  405ad4:	lea    ecx,[esp+0x4c]
  405ad8:	mov    BYTE PTR [esp+0xf0],0xd
  405ae0:	call   DWORD PTR ds:0x430264
  405ae6:	lea    ecx,[esp+0x30]
  405aea:	mov    BYTE PTR [esp+0xf0],0xc
  405af2:	call   DWORD PTR ds:0x43025c
  405af8:	lea    ecx,[esp+0x14]
  405afc:	mov    DWORD PTR [esp+0xf0],esi
  405b03:	call   DWORD PTR ds:0x43025c
  405b09:	push   0x431034
  405b0e:	lea    ecx,[esp+0x18]
  405b12:	call   DWORD PTR ds:0x43011c
  405b18:	push   0x431048
  405b1d:	lea    ecx,[esp+0x34]
  405b21:	mov    DWORD PTR [esp+0xf4],0xf
  405b2c:	call   DWORD PTR ds:0x43011c
  405b32:	mov    BYTE PTR [esp+0xf0],0x10
  405b3a:	call   0x41f6c0
  405b3f:	cmp    DWORD PTR [esp+0x2c],0x10
  405b44:	mov    ecx,DWORD PTR ds:0x43ff8c
  405b4a:	mov    eax,DWORD PTR [esp+0x18]
  405b4e:	jae    0x405b54
  405b50:	lea    eax,[esp+0x18]
  405b54:	mov    edx,DWORD PTR [ecx]
  405b56:	push   eax
  405b57:	mov    eax,DWORD PTR [edx+0x8]
  405b5a:	call   eax
  405b5c:	push   eax
  405b5d:	lea    ecx,[esp+0x50]
  405b61:	call   DWORD PTR ds:0x430268
  405b67:	lea    ecx,[esp+0x30]
  405b6b:	push   ecx
  405b6c:	push   ebx
  405b6d:	mov    edi,eax
  405b6f:	mov    BYTE PTR [esp+0xf8],0x11
  405b77:	call   0x40aff0
  405b7c:	lea    ecx,[esp+0x4c]
  405b80:	mov    BYTE PTR [esp+0xf0],0x10
  405b88:	call   DWORD PTR ds:0x430264
  405b8e:	lea    ecx,[esp+0x30]
  405b92:	mov    BYTE PTR [esp+0xf0],0xf
  405b9a:	call   DWORD PTR ds:0x43025c
  405ba0:	lea    ecx,[esp+0x14]
  405ba4:	mov    DWORD PTR [esp+0xf0],esi
  405bab:	call   DWORD PTR ds:0x43025c
  405bb1:	push   0x430ff4
  405bb6:	lea    ecx,[esp+0x18]
  405bba:	call   DWORD PTR ds:0x43011c
  405bc0:	mov    DWORD PTR [esp+0xf0],0x12
  405bcb:	mov    ecx,DWORD PTR [ebx+0x4]
  405bce:	mov    edx,DWORD PTR [ecx]
  405bd0:	mov    eax,DWORD PTR [edx+0x14]
  405bd3:	call   eax
  405bd5:	test   eax,eax
  405bd7:	jne    0x405bdd
  405bd9:	xor    edi,edi
  405bdb:	jmp    0x405bf8
  405bdd:	cmp    DWORD PTR [esp+0x2c],0x10
  405be2:	mov    ecx,DWORD PTR [esp+0x18]
  405be6:	jae    0x405bec
  405be8:	lea    ecx,[esp+0x18]
  405bec:	mov    edx,DWORD PTR [eax]
  405bee:	push   ecx
  405bef:	mov    ecx,eax
  405bf1:	mov    eax,DWORD PTR [edx+0x48]
  405bf4:	call   eax
  405bf6:	mov    edi,eax
  405bf8:	lea    ecx,[esp+0x14]
  405bfc:	mov    DWORD PTR [esp+0xf0],esi
  405c03:	call   DWORD PTR ds:0x43025c
  405c09:	test   edi,edi
  405c0b:	je     0x405c42
  405c0d:	mov    eax,0x406300
  405c12:	push   ebx
  405c13:	push   eax
  405c14:	lea    esi,[esp+0x54]
  405c18:	call   0x4076c0
  405c1d:	mov    DWORD PTR [esp+0xf0],0x13
  405c28:	mov    edx,DWORD PTR [edi]
  405c2a:	mov    edx,DWORD PTR [edx+0xa8]
  405c30:	mov    eax,esi
  405c32:	push   eax
  405c33:	mov    ecx,edi
  405c35:	mov    DWORD PTR [esp+0x14],0x1
  405c3d:	call   edx
  405c3f:	or     esi,0xffffffff
  405c42:	mov    DWORD PTR [esp+0xf0],esi
  405c49:	test   BYTE PTR [esp+0x10],0x1
  405c4e:	je     0x405c79
  405c50:	mov    eax,DWORD PTR [esp+0x4c]
  405c54:	and    DWORD PTR [esp+0x10],0xfffffffe
  405c59:	test   eax,eax
  405c5b:	je     0x405c79
  405c5d:	test   al,0x1
  405c5f:	jne    0x405c79
  405c61:	and    eax,0xfffffffe
  405c64:	mov    eax,DWORD PTR [eax]
  405c66:	test   eax,eax
  405c68:	je     0x405c79
  405c6a:	lea    ecx,[esp+0x54]
  405c6e:	push   0x2
  405c70:	push   ecx
  405c71:	mov    edx,ecx
  405c73:	push   edx
  405c74:	call   eax
  405c76:	add    esp,0xc
  405c79:	push   0x43100c
  405c7e:	lea    ecx,[esp+0x18]
  405c82:	call   DWORD PTR ds:0x43011c
  405c88:	mov    DWORD PTR [esp+0xf0],0x14
  405c93:	mov    ecx,DWORD PTR [ebx+0x4]
  405c96:	mov    eax,DWORD PTR [ecx]
  405c98:	mov    edx,DWORD PTR [eax+0x14]
  405c9b:	call   edx
  405c9d:	test   eax,eax
  405c9f:	jne    0x405ca5
  405ca1:	xor    edi,edi
  405ca3:	jmp    0x405cc0
  405ca5:	cmp    DWORD PTR [esp+0x2c],0x10
  405caa:	mov    ecx,DWORD PTR [esp+0x18]
  405cae:	jae    0x405cb4
  405cb0:	lea    ecx,[esp+0x18]
  405cb4:	mov    edx,DWORD PTR [eax]
  405cb6:	push   ecx
  405cb7:	mov    ecx,eax
  405cb9:	mov    eax,DWORD PTR [edx+0x48]
  405cbc:	call   eax
  405cbe:	mov    edi,eax
  405cc0:	lea    ecx,[esp+0x14]
  405cc4:	mov    DWORD PTR [esp+0xf0],esi
  405ccb:	call   DWORD PTR ds:0x43025c
  405cd1:	test   edi,edi
  405cd3:	je     0x405d07
  405cd5:	mov    eax,0x406480
  405cda:	push   ebx
  405cdb:	push   eax
  405cdc:	lea    esi,[esp+0x54]
  405ce0:	call   0x4076c0
  405ce5:	mov    DWORD PTR [esp+0xf0],0x15
  405cf0:	mov    edx,DWORD PTR [edi]
  405cf2:	mov    edx,DWORD PTR [edx+0xa8]
  405cf8:	or     DWORD PTR [esp+0x10],0x2
  405cfd:	mov    eax,esi
  405cff:	push   eax
  405d00:	mov    ecx,edi
  405d02:	call   edx
  405d04:	or     esi,0xffffffff
  405d07:	mov    DWORD PTR [esp+0xf0],esi
  405d0e:	test   BYTE PTR [esp+0x10],0x2
  405d13:	je     0x405d3e
  405d15:	mov    eax,DWORD PTR [esp+0x4c]
  405d19:	and    DWORD PTR [esp+0x10],0xfffffffd
  405d1e:	test   eax,eax
  405d20:	je     0x405d3e
  405d22:	test   al,0x1
  405d24:	jne    0x405d3e
  405d26:	and    eax,0xfffffffe
  405d29:	mov    eax,DWORD PTR [eax]
  405d2b:	test   eax,eax
  405d2d:	je     0x405d3e
  405d2f:	lea    ecx,[esp+0x54]
  405d33:	push   0x2
  405d35:	push   ecx
  405d36:	mov    edx,ecx
  405d38:	push   edx
  405d39:	call   eax
  405d3b:	add    esp,0xc
  405d3e:	push   0x431024
  405d43:	lea    ecx,[esp+0x18]
  405d47:	call   DWORD PTR ds:0x43011c
  405d4d:	mov    DWORD PTR [esp+0xf0],0x16
  405d58:	mov    ecx,DWORD PTR [ebx+0x4]
  405d5b:	mov    eax,DWORD PTR [ecx]
  405d5d:	mov    edx,DWORD PTR [eax+0x14]
  405d60:	call   edx
  405d62:	test   eax,eax
  405d64:	jne    0x405d6a
  405d66:	xor    edi,edi
  405d68:	jmp    0x405d85
  405d6a:	cmp    DWORD PTR [esp+0x2c],0x10
  405d6f:	mov    ecx,DWORD PTR [esp+0x18]
  405d73:	jae    0x405d79
  405d75:	lea    ecx,[esp+0x18]
  405d79:	mov    edx,DWORD PTR [eax]
  405d7b:	push   ecx
  405d7c:	mov    ecx,eax
  405d7e:	mov    eax,DWORD PTR [edx+0x48]
  405d81:	call   eax
  405d83:	mov    edi,eax
  405d85:	lea    ecx,[esp+0x14]
  405d89:	mov    DWORD PTR [esp+0xf0],esi
  405d90:	call   DWORD PTR ds:0x43025c
  405d96:	test   edi,edi
  405d98:	je     0x405dcc
  405d9a:	mov    eax,0x4062f0
  405d9f:	push   ebx
  405da0:	push   eax
  405da1:	lea    esi,[esp+0x54]
  405da5:	call   0x4076c0
  405daa:	mov    DWORD PTR [esp+0xf0],0x17
  405db5:	mov    edx,DWORD PTR [edi]
  405db7:	mov    edx,DWORD PTR [edx+0xa8]
  405dbd:	or     DWORD PTR [esp+0x10],0x4
  405dc2:	mov    eax,esi
  405dc4:	push   eax
  405dc5:	mov    ecx,edi
  405dc7:	call   edx
  405dc9:	or     esi,0xffffffff
  405dcc:	mov    DWORD PTR [esp+0xf0],esi
  405dd3:	test   BYTE PTR [esp+0x10],0x4
  405dd8:	je     0x405dfe
  405dda:	mov    eax,DWORD PTR [esp+0x4c]
  405dde:	test   eax,eax
  405de0:	je     0x405dfe
  405de2:	test   al,0x1
  405de4:	jne    0x405dfe
  405de6:	and    eax,0xfffffffe
  405de9:	mov    eax,DWORD PTR [eax]
  405deb:	test   eax,eax
  405ded:	je     0x405dfe
  405def:	lea    ecx,[esp+0x54]
  405df3:	push   0x2
  405df5:	push   ecx
  405df6:	mov    edx,ecx
  405df8:	push   edx
  405df9:	call   eax
  405dfb:	add    esp,0xc
  405dfe:	push   0x431058
  405e03:	lea    ecx,[esp+0x18]
  405e07:	call   DWORD PTR ds:0x43011c
  405e0d:	mov    DWORD PTR [esp+0xf0],0x18
  405e18:	mov    ecx,DWORD PTR [ebx+0x4]
  405e1b:	mov    eax,DWORD PTR [ecx]
  405e1d:	mov    edx,DWORD PTR [eax+0x14]
  405e20:	xor    edi,edi
  405e22:	call   edx
  405e24:	test   eax,eax
  405e26:	je     0x405e55
  405e28:	cmp    DWORD PTR [esp+0x2c],0x10
  405e2d:	mov    ecx,DWORD PTR [esp+0x18]
  405e31:	jae    0x405e37
  405e33:	lea    ecx,[esp+0x18]
  405e37:	mov    edx,DWORD PTR [eax]
  405e39:	push   ecx
  405e3a:	mov    ecx,eax
  405e3c:	mov    eax,DWORD PTR [edx+0x48]
  405e3f:	call   eax
  405e41:	test   eax,eax
  405e43:	je     0x405e55
  405e45:	mov    edx,DWORD PTR [eax]
  405e47:	mov    ecx,eax
  405e49:	mov    eax,DWORD PTR [edx+0x4]
  405e4c:	push   0x43144c
  405e51:	call   eax
  405e53:	mov    edi,eax
  405e55:	lea    ecx,[esp+0x14]
  405e59:	mov    DWORD PTR [esp+0xf0],esi
  405e60:	call   DWORD PTR ds:0x43025c
  405e66:	test   edi,edi
  405e68:	je     0x405f15
  405e6e:	mov    edx,DWORD PTR [edi]
  405e70:	mov    eax,DWORD PTR [edx+0x14]
  405e73:	push   0x1
  405e75:	mov    ecx,edi
  405e77:	call   eax
  405e79:	mov    edx,DWORD PTR [edi]
  405e7b:	mov    eax,DWORD PTR [edx+0x40]
  405e7e:	push   0x1
  405e80:	mov    ecx,edi
  405e82:	call   eax
  405e84:	push   0x5c
  405e86:	lea    ecx,[esp+0x80]
  405e8d:	push   0x0
  405e8f:	push   ecx
  405e90:	call   0x429f9c
  405e95:	add    esp,0xc
  405e98:	push   0x431074
  405e9d:	lea    ecx,[esp+0x34]
  405ea1:	mov    DWORD PTR [esp+0x80],0x5c
  405eac:	mov    DWORD PTR [esp+0x84],0x40000000
  405eb7:	mov    DWORD PTR [esp+0x94],0xffffff
  405ec2:	call   DWORD PTR ds:0x43011c
  405ec8:	mov    DWORD PTR [esp+0xf0],0x19
  405ed3:	call   0x41f6c0
  405ed8:	cmp    DWORD PTR [esp+0x48],0x10
  405edd:	mov    ecx,DWORD PTR ds:0x43ff8c
  405ee3:	mov    eax,DWORD PTR [esp+0x34]
  405ee7:	jae    0x405eed
  405ee9:	lea    eax,[esp+0x34]
  405eed:	mov    edx,DWORD PTR [ecx]
  405eef:	push   eax
  405ef0:	mov    eax,DWORD PTR [edx+0x8]
  405ef3:	call   eax
  405ef5:	mov    edx,DWORD PTR [edi]
  405ef7:	mov    edx,DWORD PTR [edx+0x8]
  405efa:	lea    ecx,[esp+0x7c]
  405efe:	push   ecx
  405eff:	push   eax
  405f00:	mov    ecx,edi
  405f02:	call   edx
  405f04:	lea    ecx,[esp+0x30]
  405f08:	mov    DWORD PTR [esp+0xf0],esi
  405f0f:	call   DWORD PTR ds:0x43025c
  405f15:	push   0x430fdc
  405f1a:	lea    ecx,[esp+0x34]
  405f1e:	call   DWORD PTR ds:0x43011c
  405f24:	mov    DWORD PTR [esp+0xf0],0x1a
  405f2f:	mov    ecx,DWORD PTR [ebx+0x4]
  405f32:	mov    eax,DWORD PTR [ecx]
  405f34:	mov    edx,DWORD PTR [eax+0x14]
  405f37:	xor    edi,edi
  405f39:	call   edx
  405f3b:	test   eax,eax
  405f3d:	je     0x405f6c
  405f3f:	cmp    DWORD PTR [esp+0x48],0x10
  405f44:	mov    ecx,DWORD PTR [esp+0x34]
  405f48:	jae    0x405f4e
  405f4a:	lea    ecx,[esp+0x34]
  405f4e:	mov    edx,DWORD PTR [eax]
  405f50:	push   ecx
  405f51:	mov    ecx,eax
  405f53:	mov    eax,DWORD PTR [edx+0x48]
  405f56:	call   eax
  405f58:	test   eax,eax
  405f5a:	je     0x405f6c
  405f5c:	mov    edx,DWORD PTR [eax]
  405f5e:	mov    ecx,eax
  405f60:	mov    eax,DWORD PTR [edx+0x4]
  405f63:	push   0x431460
  405f68:	call   eax
  405f6a:	mov    edi,eax
  405f6c:	lea    ecx,[esp+0x30]
  405f70:	mov    DWORD PTR [esp+0xf0],esi
  405f77:	call   DWORD PTR ds:0x43025c
  405f7d:	test   edi,edi
  405f7f:	je     0x405f8c
  405f81:	mov    edx,DWORD PTR [edi]
  405f83:	mov    eax,DWORD PTR [edx+0x4]
  405f86:	push   0x1
  405f88:	mov    ecx,edi
  405f8a:	call   eax
  405f8c:	mov    eax,0x4064a0
  405f91:	push   ebx
  405f92:	push   eax
  405f93:	lea    esi,[esp+0x54]
  405f97:	call   0x407720
  405f9c:	mov    DWORD PTR [esp+0xf0],0x1b
  405fa7:	mov    ecx,DWORD PTR [ebx+0x4]
  405faa:	mov    edx,DWORD PTR [ecx]
  405fac:	mov    edx,DWORD PTR [edx+0x20]
  405faf:	mov    eax,esi
  405fb1:	push   eax
  405fb2:	call   edx
  405fb4:	mov    DWORD PTR [esp+0xf0],0xffffffff
  405fbf:	mov    eax,DWORD PTR [esp+0x4c]
  405fc3:	test   eax,eax
  405fc5:	je     0x405fe3
  405fc7:	test   al,0x1
  405fc9:	jne    0x405fe3
  405fcb:	and    eax,0xfffffffe
  405fce:	mov    eax,DWORD PTR [eax]
  405fd0:	test   eax,eax
  405fd2:	je     0x405fe3
  405fd4:	lea    ecx,[esp+0x54]
  405fd8:	push   0x2
  405fda:	push   ecx
  405fdb:	mov    edx,ecx
  405fdd:	push   edx
  405fde:	call   eax
  405fe0:	add    esp,0xc
  405fe3:	mov    ecx,DWORD PTR [ebx+0x4]
  405fe6:	mov    eax,DWORD PTR [ecx]
  405fe8:	mov    edx,DWORD PTR [eax+0x18]
  405feb:	call   edx
  405fed:	mov    esi,eax
  405fef:	xor    eax,eax
  405ff1:	mov    DWORD PTR [esp+0x70],eax
  405ff5:	mov    DWORD PTR [esp+0x74],eax
  405ff9:	mov    DWORD PTR [esp+0x78],eax
  405ffd:	lea    eax,[esp+0x6c]
  406001:	push   eax
  406002:	push   esi
  406003:	mov    DWORD PTR [esp+0x74],0x0
  40600b:	call   DWORD PTR ds:0x430424
  406011:	mov    eax,DWORD PTR [esp+0x74]
  406015:	sub    eax,DWORD PTR [esp+0x6c]
  406019:	push   0x16
  40601b:	push   0xaa
  406020:	push   eax
  406021:	push   0x0
  406023:	push   0x0
  406025:	push   0x0
  406027:	push   esi
  406028:	call   DWORD PTR ds:0x430420
  40602e:	mov    esi,ebx
  406030:	call   0x40ae90
  406035:	mov    ecx,DWORD PTR [esp+0xe8]
  40603c:	mov    DWORD PTR fs:0x0,ecx
  406043:	pop    ecx
  406044:	pop    edi
  406045:	pop    esi
  406046:	pop    ebx
  406047:	mov    ecx,DWORD PTR [esp+0xd0]
  40604e:	xor    ecx,esp
  406050:	call   0x42503a
  406055:	mov    esp,ebp
  406057:	pop    ebp
  406058:	ret    
  406059:	int3   
  40605a:	int3   
  40605b:	int3   
  40605c:	int3   
  40605d:	int3   
  40605e:	int3   
  40605f:	int3   
  406060:	push   ebp
  406061:	mov    ebp,esp
  406063:	and    esp,0xfffffff8
  406066:	push   0xffffffff
  406068:	push   0x42ed1a
  40606d:	mov    eax,fs:0x0
  406073:	push   eax
  406074:	sub    esp,0xdc
  40607a:	mov    eax,ds:0x43e020
  40607f:	xor    eax,esp
  406081:	mov    DWORD PTR [esp+0xd4],eax
  406088:	push   ebx
  406089:	push   esi
  40608a:	mov    eax,ds:0x43e020
  40608f:	xor    eax,esp
  406091:	push   eax
  406092:	lea    eax,[esp+0xe8]
  406099:	mov    fs:0x0,eax
  40609f:	mov    ecx,DWORD PTR [edi+0x4]
  4060a2:	mov    eax,DWORD PTR [ecx]
  4060a4:	mov    edx,DWORD PTR [eax+0x10]
  4060a7:	push   0x0
  4060a9:	call   edx
  4060ab:	lea    esi,[esp+0x10]
  4060af:	mov    DWORD PTR [esp+0x10],0x43fe6c
  4060b7:	mov    BYTE PTR [esp+0x14],0x0
  4060bc:	call   0x407550
  4060c1:	push   0x430f38
  4060c6:	mov    DWORD PTR [esp+0xf4],0x0
  4060d1:	call   0x41fb20
  4060d6:	mov    ebx,DWORD PTR ds:0x4301a4
  4060dc:	push   eax
  4060dd:	lea    eax,[esp+0x78]
  4060e1:	push   eax
  4060e2:	call   ebx
  4060e4:	add    esp,0xc
  4060e7:	push   0x431088
  4060ec:	push   eax
  4060ed:	lea    ecx,[esp+0xcc]
  4060f4:	push   ecx
  4060f5:	mov    BYTE PTR [esp+0xfc],0x1
  4060fd:	call   ebx
  4060ff:	add    esp,0xc
  406102:	lea    ecx,[esp+0x70]
  406106:	mov    BYTE PTR [esp+0xf0],0x3
  40610e:	call   DWORD PTR ds:0x430264
  406114:	lea    ecx,[esp+0xa8]
  40611b:	call   DWORD PTR ds:0x430254
  406121:	mov    BYTE PTR [esp+0xf0],0x4
  406129:	cmp    BYTE PTR [edi+0x52],0x0
  40612d:	jne    0x406141
  40612f:	push   0x4310a0
  406134:	lea    ecx,[esp+0xac]
  40613b:	call   DWORD PTR ds:0x4301c0
  406141:	cmp    BYTE PTR [edi+0x51],0x0
  406145:	je     0x4061b8
  406147:	lea    esi,[esp+0x54]
  40614b:	call   0x412390
  406150:	push   0x431088
  406155:	push   eax
  406156:	lea    edx,[esp+0x94]
  40615d:	push   edx
  40615e:	mov    BYTE PTR [esp+0xfc],0x5
  406166:	call   ebx
  406168:	add    esp,0xc
  40616b:	push   eax
  40616c:	lea    ecx,[esp+0xc8]
  406173:	mov    BYTE PTR [esp+0xf4],0x6
  40617b:	call   DWORD PTR ds:0x43017c
  406181:	lea    ecx,[esp+0x8c]
  406188:	mov    BYTE PTR [esp+0xf0],0x5
  406190:	call   DWORD PTR ds:0x430264
  406196:	mov    ecx,esi
  406198:	mov    BYTE PTR [esp+0xf0],0x4
  4061a0:	call   DWORD PTR ds:0x430264
  4061a6:	push   0x4310c0
  4061ab:	lea    ecx,[esp+0xac]
  4061b2:	call   DWORD PTR ds:0x430140
  4061b8:	lea    esi,[esp+0x54]
  4061bc:	call   0x411b00
  4061c1:	push   eax
  4061c2:	lea    ecx,[esp+0xac]
  4061c9:	mov    BYTE PTR [esp+0xf4],0x7
  4061d1:	call   DWORD PTR ds:0x430144
  4061d7:	mov    ecx,esi
  4061d9:	mov    BYTE PTR [esp+0xf0],0x4
  4061e1:	call   DWORD PTR ds:0x430264
  4061e7:	push   0x38
  4061e9:	xor    esi,esi
  4061eb:	lea    eax,[esp+0x20]
  4061ef:	push   esi
  4061f0:	push   eax
  4061f1:	call   0x429f9c
  4061f6:	mov    eax,0x8
  4061fb:	add    esp,0xc
  4061fe:	mov    DWORD PTR [esp+0x18],0x3c
  406206:	mov    DWORD PTR [esp+0x1c],0x2008040
  40620e:	mov    DWORD PTR [esp+0x20],esi
  406212:	mov    DWORD PTR [esp+0x24],esi
  406216:	cmp    DWORD PTR [esp+0xdc],eax
  40621d:	jb     0x40622c
  40621f:	mov    ecx,DWORD PTR [esp+0xc8]
  406226:	mov    DWORD PTR [esp+0x28],ecx
  40622a:	jmp    0x406237
  40622c:	lea    edx,[esp+0xc8]
  406233:	mov    DWORD PTR [esp+0x28],edx
  406237:	cmp    DWORD PTR [esp+0xc0],eax
  40623e:	jb     0x40624d
  406240:	mov    eax,DWORD PTR [esp+0xac]
  406247:	mov    DWORD PTR [esp+0x2c],eax
  40624b:	jmp    0x406258
  40624d:	lea    ecx,[esp+0xac]
  406254:	mov    DWORD PTR [esp+0x2c],ecx
  406258:	lea    edx,[esp+0x18]
  40625c:	push   edx
  40625d:	mov    DWORD PTR [esp+0x34],esi
  406261:	mov    DWORD PTR [esp+0x38],0x5
  406269:	mov    DWORD PTR [esp+0x3c],esi
  40626d:	call   DWORD PTR ds:0x4303c8
  406273:	mov    eax,DWORD PTR [esp+0x50]
  406277:	cmp    eax,esi
  406279:	je     0x406282
  40627b:	push   eax
  40627c:	call   DWORD PTR ds:0x4300f4
  406282:	lea    ecx,[esp+0xa8]
  406289:	mov    BYTE PTR [esp+0xf0],0x3
  406291:	call   DWORD PTR ds:0x430264
  406297:	lea    ecx,[esp+0xc4]
  40629e:	mov    BYTE PTR [esp+0xf0],0x0
  4062a6:	call   DWORD PTR ds:0x430264
  4062ac:	cmp    BYTE PTR [esp+0x14],0x0
  4062b1:	je     0x4062bd
  4062b3:	mov    eax,DWORD PTR [esp+0x10]
  4062b7:	push   eax
  4062b8:	call   0x40a680
  4062bd:	push   esi
  4062be:	call   DWORD PTR ds:0x430434
  4062c4:	mov    ecx,DWORD PTR [esp+0xe8]
  4062cb:	mov    DWORD PTR fs:0x0,ecx
  4062d2:	pop    ecx
  4062d3:	pop    esi
  4062d4:	pop    ebx
  4062d5:	mov    ecx,DWORD PTR [esp+0xd4]
  4062dc:	xor    ecx,esp
  4062de:	call   0x42503a
  4062e3:	mov    esp,ebp
  4062e5:	pop    ebp
  4062e6:	ret    
  4062e7:	int3   
  4062e8:	int3   
  4062e9:	int3   
  4062ea:	int3   
  4062eb:	int3   
  4062ec:	int3   
  4062ed:	int3   
  4062ee:	int3   
  4062ef:	int3   
  4062f0:	push   edi
  4062f1:	mov    edi,ecx
  4062f3:	call   0x406060
  4062f8:	pop    edi
  4062f9:	ret    0x4
  4062fc:	int3   
  4062fd:	int3   
  4062fe:	int3   
  4062ff:	int3   
  406300:	push   0xffffffff
  406302:	push   0x42eec4
  406307:	mov    eax,fs:0x0
  40630d:	push   eax
  40630e:	sub    esp,0x74
  406311:	mov    eax,ds:0x43e020
  406316:	xor    eax,esp
  406318:	mov    DWORD PTR [esp+0x70],eax
  40631c:	push   ebp
  40631d:	push   esi
  40631e:	push   edi
  40631f:	mov    eax,ds:0x43e020
  406324:	xor    eax,esp
  406326:	push   eax
  406327:	lea    eax,[esp+0x84]
  40632e:	mov    fs:0x0,eax
  406334:	mov    ebp,ecx
  406336:	push   0x4310e8
  40633b:	lea    ecx,[esp+0x14]
  40633f:	call   DWORD PTR ds:0x43011c
  406345:	mov    DWORD PTR [esp+0x8c],0x0
  406350:	call   0x41f6c0
  406355:	cmp    DWORD PTR [esp+0x28],0x10
  40635a:	mov    ecx,DWORD PTR ds:0x43ff8c
  406360:	mov    eax,DWORD PTR [esp+0x14]
  406364:	jae    0x40636a
  406366:	lea    eax,[esp+0x14]
  40636a:	mov    edx,DWORD PTR [ecx]
  40636c:	push   eax
  40636d:	mov    eax,DWORD PTR [edx+0x8]
  406370:	call   eax
  406372:	mov    ecx,DWORD PTR [ebp+0x48]
  406375:	mov    edx,DWORD PTR [ebp+0x44]
  406378:	push   ecx
  406379:	push   edx
  40637a:	push   eax
  40637b:	lea    esi,[esp+0x70]
  40637f:	call   0x40a710
  406384:	add    esp,0xc
  406387:	lea    ecx,[esp+0x10]
  40638b:	mov    BYTE PTR [esp+0x8c],0x2
  406393:	call   DWORD PTR ds:0x43025c
  406399:	cmp    DWORD PTR [esp+0x7c],0x8
  40639e:	mov    eax,DWORD PTR [esp+0x68]
  4063a2:	jae    0x4063a8
  4063a4:	lea    eax,[esp+0x68]
  4063a8:	push   eax
  4063a9:	lea    ecx,[esp+0x30]
  4063ad:	call   DWORD PTR ds:0x430268
  4063b3:	push   0x4310f4
  4063b8:	lea    ecx,[esp+0x4c]
  4063bc:	mov    BYTE PTR [esp+0x90],0x3
  4063c4:	call   DWORD PTR ds:0x43011c
  4063ca:	lea    eax,[esp+0x48]
  4063ce:	push   eax
  4063cf:	push   ebp
  4063d0:	lea    edi,[esp+0x34]
  4063d4:	mov    BYTE PTR [esp+0x94],0x4
  4063dc:	call   0x40aff0
  4063e1:	lea    ecx,[esp+0x48]
  4063e5:	mov    BYTE PTR [esp+0x8c],0x3
  4063ed:	call   DWORD PTR ds:0x43025c
  4063f3:	mov    ecx,edi
  4063f5:	mov    BYTE PTR [esp+0x8c],0x2
  4063fd:	call   DWORD PTR ds:0x430264
  406403:	mov    ecx,DWORD PTR [ebp+0x24]
  406406:	mov    edx,DWORD PTR [ecx]
  406408:	mov    eax,DWORD PTR [edx+0xc]
  40640b:	push   0x1
  40640d:	push   0x431108
  406412:	call   eax
  406414:	mov    ecx,DWORD PTR [ebp+0x24]
  406417:	mov    edx,DWORD PTR [ecx]
  406419:	mov    eax,DWORD PTR [edx+0xc]
  40641c:	push   0x0
  40641e:	push   0x43112c
  406423:	call   eax
  406425:	mov    ecx,DWORD PTR [ebp+0x24]
  406428:	mov    edx,DWORD PTR [ecx]
  40642a:	mov    eax,DWORD PTR [edx+0xc]
  40642d:	push   0x0
  40642f:	push   0x431150
  406434:	call   eax
  406436:	mov    esi,ebp
  406438:	call   0x40ae90
  40643d:	call   0x40e100
  406442:	lea    ecx,[esp+0x64]
  406446:	mov    DWORD PTR [esp+0x8c],0xffffffff
  406451:	call   DWORD PTR ds:0x430264
  406457:	mov    ecx,DWORD PTR [esp+0x84]
  40645e:	mov    DWORD PTR fs:0x0,ecx
  406465:	pop    ecx
  406466:	pop    edi
  406467:	pop    esi
  406468:	pop    ebp
  406469:	mov    ecx,DWORD PTR [esp+0x70]
  40646d:	xor    ecx,esp
  40646f:	call   0x42503a
  406474:	add    esp,0x80
  40647a:	ret    0x4
  40647d:	int3   
  40647e:	int3   
  40647f:	int3   
  406480:	mov    ecx,DWORD PTR [ecx+0x4]
  406483:	mov    eax,DWORD PTR [ecx]
  406485:	mov    edx,DWORD PTR [eax+0x18]
  406488:	call   edx
  40648a:	push   0x0
  40648c:	push   0x0
  40648e:	push   0x10
  406490:	push   eax
  406491:	call   DWORD PTR ds:0x430430
  406497:	ret    0x4
  40649a:	int3   
  40649b:	int3   
  40649c:	int3   
  40649d:	int3   
  40649e:	int3   
  40649f:	int3   
  4064a0:	push   ebp
  4064a1:	mov    ebp,esp
  4064a3:	and    esp,0xfffffff8
  4064a6:	sub    esp,0x8
  4064a9:	cmp    BYTE PTR [ecx+0x50],0x0
  4064ad:	push   esi
  4064ae:	push   edi
  4064af:	je     0x4064c0
  4064b1:	mov    edi,ecx
  4064b3:	call   0x406060
  4064b8:	pop    edi
  4064b9:	pop    esi
  4064ba:	mov    esp,ebp
  4064bc:	pop    ebp
  4064bd:	ret    0x8
  4064c0:	lea    esi,[esp+0x8]
  4064c4:	mov    DWORD PTR [esp+0x8],0x43fe6c
  4064cc:	mov    BYTE PTR [esp+0xc],0x0
  4064d1:	call   0x407550
  4064d6:	cmp    BYTE PTR [esp+0xc],0x0
  4064db:	mov    eax,DWORD PTR [ebp+0xc]
  4064de:	mov    BYTE PTR ds:0x43ff48,0x1
  4064e5:	mov    DWORD PTR [eax],0x4
  4064eb:	je     0x4064f7
  4064ed:	mov    ecx,DWORD PTR [esp+0x8]
  4064f1:	push   ecx
  4064f2:	call   0x40a680
  4064f7:	pop    edi
  4064f8:	pop    esi
  4064f9:	mov    esp,ebp
  4064fb:	pop    ebp
  4064fc:	ret    0x8
  4064ff:	int3   
  406500:	push   0xffffffff
  406502:	push   0x42cbdb
  406507:	mov    eax,fs:0x0
  40650d:	push   eax
  40650e:	sub    esp,0x54
  406511:	push   esi
  406512:	push   edi
  406513:	mov    eax,ds:0x43e020
  406518:	xor    eax,esp
  40651a:	push   eax
  40651b:	lea    eax,[esp+0x60]
  40651f:	mov    fs:0x0,eax
  406525:	mov    esi,ecx
  406527:	push   0x431170
  40652c:	lea    ecx,[esp+0x10]
  406530:	mov    BYTE PTR [esi+0x50],0x1
  406534:	call   DWORD PTR ds:0x43011c
  40653a:	push   0x430fdc
  40653f:	lea    ecx,[esp+0x2c]
  406543:	mov    DWORD PTR [esp+0x6c],0x0
  40654b:	call   DWORD PTR ds:0x43011c
  406551:	mov    BYTE PTR [esp+0x68],0x1
  406556:	call   0x41f6c0
  40655b:	cmp    DWORD PTR [esp+0x24],0x10
  406560:	mov    ecx,DWORD PTR ds:0x43ff8c
  406566:	mov    eax,DWORD PTR [esp+0x10]
  40656a:	jae    0x406570
  40656c:	lea    eax,[esp+0x10]
  406570:	mov    edx,DWORD PTR [ecx]
  406572:	push   eax
  406573:	mov    eax,DWORD PTR [edx+0x8]
  406576:	call   eax
  406578:	push   eax
  406579:	lea    ecx,[esp+0x48]
  40657d:	call   DWORD PTR ds:0x430268
  406583:	lea    ecx,[esp+0x28]
  406587:	push   ecx
  406588:	push   esi
  406589:	mov    edi,eax
  40658b:	mov    BYTE PTR [esp+0x70],0x2
  406590:	call   0x40aff0
  406595:	lea    ecx,[esp+0x44]
  406599:	mov    BYTE PTR [esp+0x68],0x1
  40659e:	call   DWORD PTR ds:0x430264
  4065a4:	lea    ecx,[esp+0x28]
  4065a8:	mov    BYTE PTR [esp+0x68],0x0
  4065ad:	call   DWORD PTR ds:0x43025c
  4065b3:	lea    ecx,[esp+0xc]
  4065b7:	mov    DWORD PTR [esp+0x68],0xffffffff
  4065bf:	call   DWORD PTR ds:0x43025c
  4065c5:	cmp    BYTE PTR [esi+0x53],0x0
  4065c9:	je     0x4065fc
  4065cb:	mov    ecx,DWORD PTR [esi+0x4]
  4065ce:	mov    BYTE PTR [esi+0x50],0x0
  4065d2:	mov    edx,DWORD PTR [ecx]
  4065d4:	mov    eax,DWORD PTR [edx+0x18]
  4065d7:	call   eax
  4065d9:	push   0x0
  4065db:	push   0x0
  4065dd:	push   0x10
  4065df:	push   eax
  4065e0:	call   DWORD PTR ds:0x430430
  4065e6:	mov    ecx,DWORD PTR [esi+0x24]
  4065e9:	mov    edx,DWORD PTR [ecx]
  4065eb:	mov    eax,DWORD PTR [edx+0xc]
  4065ee:	push   0x1
  4065f0:	push   0x431184
  4065f5:	call   eax
  4065f7:	call   0x40ae90
  4065fc:	mov    ecx,DWORD PTR [esp+0x60]
  406600:	mov    DWORD PTR fs:0x0,ecx
  406607:	pop    ecx
  406608:	pop    edi
  406609:	pop    esi
  40660a:	add    esp,0x60
  40660d:	ret    
  40660e:	int3   
  40660f:	int3   
  406610:	push   0xffffffff
  406612:	push   0x42f0db
  406617:	mov    eax,fs:0x0
  40661d:	push   eax
  40661e:	sub    esp,0x60
  406621:	mov    eax,ds:0x43e020
  406626:	xor    eax,esp
  406628:	mov    DWORD PTR [esp+0x58],eax
  40662c:	push   ebx
  40662d:	push   ebp
  40662e:	push   esi
  40662f:	push   edi
  406630:	mov    eax,ds:0x43e020
  406635:	xor    eax,esp
  406637:	push   eax
  406638:	lea    eax,[esp+0x74]
  40663c:	mov    fs:0x0,eax
  406642:	mov    eax,DWORD PTR [esp+0x8c]
  406649:	mov    ebx,DWORD PTR [esp+0x84]
  406650:	mov    esi,DWORD PTR [esp+0x88]
  406657:	mov    ebp,ecx
  406659:	push   0x4311a4
  40665e:	lea    ecx,[esp+0x38]
  406662:	mov    DWORD PTR [ebp+0x48],eax
  406665:	call   DWORD PTR ds:0x43011c
  40666b:	mov    eax,0x8
  406670:	mov    DWORD PTR [esp+0x7c],0x0
  406678:	cmp    DWORD PTR [esi+0x18],eax
  40667b:	jb     0x406682
  40667d:	mov    edi,DWORD PTR [esi+0x4]
  406680:	jmp    0x406685
  406682:	lea    edi,[esi+0x4]
  406685:	cmp    DWORD PTR [ebx+0x18],eax
  406688:	jb     0x40668f
  40668a:	mov    esi,DWORD PTR [ebx+0x4]
  40668d:	jmp    0x406692
  40668f:	lea    esi,[ebx+0x4]
  406692:	call   0x41f6c0
  406697:	cmp    DWORD PTR [esp+0x4c],0x10
  40669c:	mov    ecx,DWORD PTR ds:0x43ff8c
  4066a2:	mov    eax,DWORD PTR [esp+0x38]
  4066a6:	jae    0x4066ac
  4066a8:	lea    eax,[esp+0x38]
  4066ac:	mov    edx,DWORD PTR [ecx]
  4066ae:	push   eax
  4066af:	mov    eax,DWORD PTR [edx+0x8]
  4066b2:	call   eax
  4066b4:	push   edi
  4066b5:	push   esi
  4066b6:	push   eax
  4066b7:	lea    esi,[esp+0x5c]
  4066bb:	call   0x40a710
  4066c0:	add    esp,0xc
  4066c3:	mov    bl,0x2
  4066c5:	lea    ecx,[esp+0x34]
  4066c9:	mov    BYTE PTR [esp+0x7c],bl
  4066cd:	call   DWORD PTR ds:0x43025c
  4066d3:	push   0x430fdc
  4066d8:	lea    ecx,[esp+0x1c]
  4066dc:	call   DWORD PTR ds:0x43011c
  4066e2:	lea    ecx,[esp+0x18]
  4066e6:	push   ecx
  4066e7:	push   ebp
  4066e8:	mov    edi,esi
  4066ea:	mov    BYTE PTR [esp+0x84],0x3
  4066f2:	call   0x40aff0
  4066f7:	lea    ecx,[esp+0x18]
  4066fb:	mov    BYTE PTR [esp+0x7c],bl
  4066ff:	call   DWORD PTR ds:0x43025c
  406705:	mov    ecx,DWORD PTR [ebp+0x4]
  406708:	mov    edx,DWORD PTR [ecx]
  40670a:	mov    eax,DWORD PTR [edx+0x18]
  40670d:	call   eax
  40670f:	lea    ecx,[esp+0x18]
  406713:	mov    esi,eax
  406715:	xor    eax,eax
  406717:	push   ecx
  406718:	push   esi
  406719:	mov    DWORD PTR [esp+0x20],0x0
  406721:	mov    DWORD PTR [esp+0x24],eax
  406725:	mov    DWORD PTR [esp+0x28],eax
  406729:	mov    DWORD PTR [esp+0x2c],eax
  40672d:	call   DWORD PTR ds:0x430424
  406733:	mov    eax,DWORD PTR [esp+0x20]
  406737:	sub    eax,DWORD PTR [esp+0x18]
  40673b:	push   0x16
  40673d:	push   0xbe
  406742:	push   eax
  406743:	push   0x0
  406745:	push   0x0
  406747:	push   0x0
  406749:	push   esi
  40674a:	call   DWORD PTR ds:0x430420
  406750:	mov    ecx,DWORD PTR [ebp+0x24]
  406753:	mov    edx,DWORD PTR [ecx]
  406755:	mov    eax,DWORD PTR [edx+0xc]
  406758:	push   0x1
  40675a:	push   0x4311b0
  40675f:	call   eax
  406761:	mov    ecx,DWORD PTR [ebp+0x24]
  406764:	mov    edx,DWORD PTR [ecx]
  406766:	mov    eax,DWORD PTR [edx+0xc]
  406769:	push   0x1
  40676b:	push   0x431150
  406770:	call   eax
  406772:	mov    esi,ebp
  406774:	call   0x40ae90
  406779:	cmp    BYTE PTR [ebp+0x53],0x0
  40677d:	je     0x406788
  40677f:	push   0x0
  406781:	mov    ecx,ebp
  406783:	call   0x406300
  406788:	lea    ecx,[esp+0x50]
  40678c:	mov    DWORD PTR [esp+0x7c],0xffffffff
  406794:	call   DWORD PTR ds:0x430264
  40679a:	mov    ecx,DWORD PTR [esp+0x74]
  40679e:	mov    DWORD PTR fs:0x0,ecx
  4067a5:	pop    ecx
  4067a6:	pop    edi
  4067a7:	pop    esi
  4067a8:	pop    ebp
  4067a9:	pop    ebx
  4067aa:	mov    ecx,DWORD PTR [esp+0x58]
  4067ae:	xor    ecx,esp
  4067b0:	call   0x42503a
  4067b5:	add    esp,0x6c
  4067b8:	ret    0xc
  4067bb:	int3   
  4067bc:	int3   
  4067bd:	int3   
  4067be:	int3   
  4067bf:	int3   
  4067c0:	push   0xffffffff
  4067c2:	push   0x42c181
  4067c7:	mov    eax,fs:0x0
  4067cd:	push   eax
  4067ce:	sub    esp,0x90
  4067d4:	mov    eax,ds:0x43e020
  4067d9:	xor    eax,esp
  4067db:	mov    DWORD PTR [esp+0x8c],eax
  4067e2:	push   ebp
  4067e3:	push   esi
  4067e4:	push   edi
  4067e5:	mov    eax,ds:0x43e020
  4067ea:	xor    eax,esp
  4067ec:	push   eax
  4067ed:	lea    eax,[esp+0xa0]
  4067f4:	mov    fs:0x0,eax
  4067fa:	mov    eax,DWORD PTR [esp+0xb0]
  406801:	mov    ebp,ecx
  406803:	push   0x4310e8
  406808:	lea    ecx,[esp+0x4c]
  40680c:	mov    DWORD PTR [ebp+0x44],eax
  40680f:	call   DWORD PTR ds:0x43011c
  406815:	mov    DWORD PTR [esp+0xa8],0x0
  406820:	call   0x41f6c0
  406825:	cmp    DWORD PTR [esp+0x60],0x10
  40682a:	mov    ecx,DWORD PTR ds:0x43ff8c
  406830:	mov    eax,DWORD PTR [esp+0x4c]
  406834:	jae    0x40683a
  406836:	lea    eax,[esp+0x4c]
  40683a:	mov    edx,DWORD PTR [ecx]
  40683c:	push   eax
  40683d:	mov    eax,DWORD PTR [edx+0x8]
  406840:	call   eax
  406842:	mov    ecx,DWORD PTR [ebp+0x48]
  406845:	mov    edx,DWORD PTR [ebp+0x44]
  406848:	push   ecx
  406849:	push   edx
  40684a:	push   eax
  40684b:	lea    esi,[esp+0x8c]
  406852:	call   0x40a710
  406857:	add    esp,0xc
  40685a:	lea    ecx,[esp+0x48]
  40685e:	mov    BYTE PTR [esp+0xa8],0x2
  406866:	call   DWORD PTR ds:0x43025c
  40686c:	cmp    DWORD PTR [esp+0x98],0x8
  406874:	mov    eax,DWORD PTR [esp+0x84]
  40687b:	jae    0x406884
  40687d:	lea    eax,[esp+0x84]
  406884:	push   eax
  406885:	lea    ecx,[esp+0x30]
  406889:	call   DWORD PTR ds:0x430268
  40688f:	push   0x4310f4
  406894:	lea    ecx,[esp+0x14]
  406898:	mov    BYTE PTR [esp+0xac],0x3
  4068a0:	call   DWORD PTR ds:0x43011c
  4068a6:	lea    eax,[esp+0x10]
  4068aa:	push   eax
  4068ab:	push   ebp
  4068ac:	lea    edi,[esp+0x34]
  4068b0:	mov    BYTE PTR [esp+0xb0],0x4
  4068b8:	call   0x40aff0
  4068bd:	lea    ecx,[esp+0x10]
  4068c1:	mov    BYTE PTR [esp+0xa8],0x3
  4068c9:	call   DWORD PTR ds:0x43025c
  4068cf:	mov    ecx,edi
  4068d1:	mov    BYTE PTR [esp+0xa8],0x2
  4068d9:	call   DWORD PTR ds:0x430264
  4068df:	push   0x431034
  4068e4:	lea    ecx,[esp+0x14]
  4068e8:	call   DWORD PTR ds:0x43011c
  4068ee:	push   0x431048
  4068f3:	lea    ecx,[esp+0x30]
  4068f7:	mov    BYTE PTR [esp+0xac],0x5
  4068ff:	call   DWORD PTR ds:0x43011c
  406905:	mov    BYTE PTR [esp+0xa8],0x6
  40690d:	call   0x41f6c0
  406912:	cmp    DWORD PTR [esp+0x28],0x10
  406917:	mov    ecx,DWORD PTR ds:0x43ff8c
  40691d:	mov    eax,DWORD PTR [esp+0x14]
  406921:	jae    0x406927
  406923:	lea    eax,[esp+0x14]
  406927:	mov    edx,DWORD PTR [ecx]
  406929:	push   eax
  40692a:	mov    eax,DWORD PTR [edx+0x8]
  40692d:	call   eax
  40692f:	push   eax
  406930:	lea    ecx,[esp+0x68]
  406934:	call   DWORD PTR ds:0x430268
  40693a:	lea    ecx,[esp+0x2c]
  40693e:	push   ecx
  40693f:	push   ebp
  406940:	mov    edi,eax
  406942:	mov    BYTE PTR [esp+0xb0],0x7
  40694a:	call   0x40aff0
  40694f:	lea    ecx,[esp+0x64]
  406953:	mov    BYTE PTR [esp+0xa8],0x6
  40695b:	call   DWORD PTR ds:0x430264
  406961:	lea    ecx,[esp+0x2c]
  406965:	mov    BYTE PTR [esp+0xa8],0x5
  40696d:	call   DWORD PTR ds:0x43025c
  406973:	lea    ecx,[esp+0x10]
  406977:	mov    BYTE PTR [esp+0xa8],0x2
  40697f:	call   DWORD PTR ds:0x43025c
  406985:	push   0x4311e0
  40698a:	lea    ecx,[esp+0x14]
  40698e:	call   DWORD PTR ds:0x43011c
  406994:	mov    BYTE PTR [esp+0xa8],0x8
  40699c:	mov    ecx,DWORD PTR [ebp+0x4]
  40699f:	mov    edx,DWORD PTR [ecx]
  4069a1:	mov    eax,DWORD PTR [edx+0x14]
  4069a4:	xor    esi,esi
  4069a6:	call   eax
  4069a8:	test   eax,eax
  4069aa:	je     0x4069d9
  4069ac:	cmp    DWORD PTR [esp+0x28],0x10
  4069b1:	mov    ecx,DWORD PTR [esp+0x14]
  4069b5:	jae    0x4069bb
  4069b7:	lea    ecx,[esp+0x14]
  4069bb:	mov    edx,DWORD PTR [eax]
  4069bd:	push   ecx
  4069be:	mov    ecx,eax
  4069c0:	mov    eax,DWORD PTR [edx+0x48]
  4069c3:	call   eax
  4069c5:	test   eax,eax
  4069c7:	je     0x4069d9
  4069c9:	mov    edx,DWORD PTR [eax]
  4069cb:	mov    ecx,eax
  4069cd:	mov    eax,DWORD PTR [edx+0x4]
  4069d0:	push   0x431474
  4069d5:	call   eax
  4069d7:	mov    esi,eax
  4069d9:	lea    ecx,[esp+0x10]
  4069dd:	mov    BYTE PTR [esp+0xa8],0x2
  4069e5:	call   DWORD PTR ds:0x43025c
  4069eb:	test   esi,esi
  4069ed:	je     0x406a07
  4069ef:	mov    edx,DWORD PTR [esi]
  4069f1:	mov    eax,DWORD PTR [edx+0xc]
  4069f4:	push   0x1
  4069f6:	push   0x0
  4069f8:	mov    ecx,esi
  4069fa:	call   eax
  4069fc:	mov    edx,DWORD PTR [esi]
  4069fe:	mov    eax,DWORD PTR [edx+0x4]
  406a01:	push   0x0
  406a03:	mov    ecx,esi
  406a05:	call   eax
  406a07:	lea    ecx,[esp+0x80]
  406a0e:	mov    DWORD PTR [esp+0xa8],0xffffffff
  406a19:	call   DWORD PTR ds:0x430264
  406a1f:	mov    ecx,DWORD PTR [esp+0xa0]
  406a26:	mov    DWORD PTR fs:0x0,ecx
  406a2d:	pop    ecx
  406a2e:	pop    edi
  406a2f:	pop    esi
  406a30:	pop    ebp
  406a31:	mov    ecx,DWORD PTR [esp+0x8c]
  406a38:	xor    ecx,esp
  406a3a:	call   0x42503a
  406a3f:	add    esp,0x9c
  406a45:	ret    0x4
  406a48:	int3   
  406a49:	int3   
  406a4a:	int3   
  406a4b:	int3   
  406a4c:	int3   
  406a4d:	int3   
  406a4e:	int3   
  406a4f:	int3   
  406a50:	push   0xffffffff
  406a52:	push   0x42e4a0
  406a57:	mov    eax,fs:0x0
  406a5d:	push   eax
  406a5e:	sub    esp,0x1c8
  406a64:	mov    eax,ds:0x43e020
  406a69:	xor    eax,esp
  406a6b:	mov    DWORD PTR [esp+0x1c4],eax
  406a72:	push   ebx
  406a73:	push   ebp
  406a74:	push   esi
  406a75:	push   edi
  406a76:	mov    eax,ds:0x43e020
  406a7b:	xor    eax,esp
  406a7d:	push   eax
  406a7e:	lea    eax,[esp+0x1dc]
  406a85:	mov    fs:0x0,eax
  406a8b:	mov    esi,ecx
  406a8d:	mov    ebp,DWORD PTR [esp+0x1ec]
  406a94:	lea    ecx,[esp+0x184]
  406a9b:	call   DWORD PTR ds:0x430254
  406aa1:	lea    ecx,[esp+0x14c]
  406aa8:	mov    DWORD PTR [esp+0x1e4],0x0
  406ab3:	call   DWORD PTR ds:0x430254
  406ab9:	lea    ecx,[esp+0x130]
  406ac0:	mov    BYTE PTR [esp+0x1e4],0x1
  406ac8:	call   DWORD PTR ds:0x430254
  406ace:	lea    ecx,[esp+0x168]
  406ad5:	mov    BYTE PTR [esp+0x1e4],0x2
  406add:	call   DWORD PTR ds:0x430254
  406ae3:	lea    ecx,[esp+0x1bc]
  406aea:	mov    BYTE PTR [esp+0x1e4],0x3
  406af2:	call   DWORD PTR ds:0x430254
  406af8:	lea    ecx,[esp+0x1a0]
  406aff:	mov    BYTE PTR [esp+0x1e4],0x4
  406b07:	call   DWORD PTR ds:0x430254
  406b0d:	mov    ecx,DWORD PTR [esp+0x1f0]
  406b14:	lea    ebx,[esp+0x168]
  406b1b:	lea    edi,[esp+0x130]
  406b22:	mov    BYTE PTR [esp+0x1e4],0x5
  406b2a:	call   0x404f30
  406b2f:	mov    ecx,DWORD PTR [esp+0x1f4]
  406b36:	lea    ebx,[esp+0x14c]
  406b3d:	lea    edi,[esp+0x184]
  406b44:	call   0x404f30
  406b49:	fldz   
  406b4b:	fld    QWORD PTR [esp+0x1f8]
  406b52:	fcom   st(1)
  406b54:	fnstsw ax
  406b56:	fstp   st(1)
  406b58:	test   ah,0x1
  406b5b:	jne    0x406b8f
  406b5d:	fild   DWORD PTR [ebp+0x58]
  406b60:	fmul   QWORD PTR ds:0x433030
  406b66:	fxch   st(1)
  406b68:	fmul   QWORD PTR ds:0x433028
  406b6e:	faddp  st(1),st
  406b70:	call   0x42a020
  406b75:	lea    ebx,[esp+0x1a0]
  406b7c:	lea    edi,[esp+0x1bc]
  406b83:	mov    ecx,eax
  406b85:	mov    DWORD PTR [ebp+0x58],eax
  406b88:	call   0x404f30
  406b8d:	jmp    0x406b91
  406b8f:	fstp   st(0)
  406b91:	push   0x4311fc
  406b96:	lea    ecx,[esp+0xfc]
  406b9d:	call   DWORD PTR ds:0x430268
  406ba3:	mov    BYTE PTR [esp+0x1e4],0x6
  406bab:	test   esi,esi
  406bad:	jl     0x406bc0
  406baf:	lea    eax,[esp+0xf8]
  406bb6:	push   eax
  406bb7:	push   esi
  406bb8:	call   0x405170
  406bbd:	add    esp,0x8
  406bc0:	push   0x431208
  406bc5:	lea    ecx,[esp+0x38]
  406bc9:	call   DWORD PTR ds:0x43011c
  406bcf:	lea    ecx,[esp+0x168]
  406bd6:	push   ecx
  406bd7:	lea    edx,[esp+0x134]
  406bde:	push   edx
  406bdf:	lea    eax,[esp+0x74]
  406be3:	mov    BYTE PTR [esp+0x1ec],0x7
  406beb:	mov    esi,DWORD PTR ds:0x4301a0
  406bf1:	push   eax
  406bf2:	call   esi
  406bf4:	add    esp,0xc
  406bf7:	push   0x431200
  406bfc:	push   eax
  406bfd:	lea    ecx,[esp+0xe4]
  406c04:	mov    ebx,0x8
  406c09:	push   ecx
  406c0a:	mov    BYTE PTR [esp+0x1f0],bl
  406c11:	call   DWORD PTR ds:0x4301a4
  406c17:	add    esp,0xc
  406c1a:	lea    edx,[esp+0x184]
  406c21:	push   edx
  406c22:	push   eax
  406c23:	lea    eax,[esp+0xc8]
  406c2a:	push   eax
  406c2b:	mov    BYTE PTR [esp+0x1f0],0x9
  406c33:	call   esi
  406c35:	add    esp,0xc
  406c38:	lea    ecx,[esp+0x14c]
  406c3f:	push   ecx
  406c40:	push   eax
  406c41:	lea    edx,[esp+0xac]
  406c48:	push   edx
  406c49:	mov    BYTE PTR [esp+0x1f0],0xa
  406c51:	call   esi
  406c53:	add    esp,0xc
  406c56:	mov    edi,eax
  406c58:	lea    eax,[esp+0x1a0]
  406c5f:	push   eax
  406c60:	lea    ecx,[esp+0x1c0]
  406c67:	push   ecx
  406c68:	lea    edx,[esp+0x90]
  406c6f:	push   edx
  406c70:	mov    BYTE PTR [esp+0x1f0],0xb
  406c78:	call   esi
  406c7a:	add    esp,0xc
  406c7d:	mov    BYTE PTR [esp+0x1e4],0xc
  406c85:	cmp    DWORD PTR [esp+0x110],ebx
  406c8c:	jb     0x406c9b
  406c8e:	mov    ecx,DWORD PTR [esp+0xfc]
  406c95:	mov    DWORD PTR [esp+0x14],ecx
  406c99:	jmp    0x406ca6
  406c9b:	lea    edx,[esp+0xfc]
  406ca2:	mov    DWORD PTR [esp+0x14],edx
  406ca6:	cmp    DWORD PTR [edi+0x18],ebx
  406ca9:	jb     0x406cb0
  406cab:	mov    edi,DWORD PTR [edi+0x4]
  406cae:	jmp    0x406cb3
  406cb0:	add    edi,0x4
  406cb3:	cmp    DWORD PTR [eax+0x18],ebx
  406cb6:	jb     0x406cbd
  406cb8:	mov    esi,DWORD PTR [eax+0x4]
  406cbb:	jmp    0x406cc0
  406cbd:	lea    esi,[eax+0x4]
  406cc0:	call   0x41f6c0
  406cc5:	cmp    DWORD PTR [esp+0x4c],0x10
  406cca:	mov    ecx,DWORD PTR ds:0x43ff8c
  406cd0:	mov    eax,DWORD PTR [esp+0x38]
  406cd4:	jae    0x406cda
  406cd6:	lea    eax,[esp+0x38]
  406cda:	mov    edx,DWORD PTR [ecx]
  406cdc:	push   eax
  406cdd:	mov    eax,DWORD PTR [edx+0x8]
  406ce0:	call   eax
  406ce2:	mov    ecx,DWORD PTR [esp+0x14]
  406ce6:	push   ecx
  406ce7:	push   edi
  406ce8:	push   esi
  406ce9:	push   eax
  406cea:	lea    esi,[esp+0x124]
  406cf1:	call   0x40a710
  406cf6:	add    esp,0x10
  406cf9:	lea    ecx,[esp+0x88]
  406d00:	mov    BYTE PTR [esp+0x1e4],0xe
  406d08:	call   DWORD PTR ds:0x430264
  406d0e:	lea    ecx,[esp+0xa4]
  406d15:	mov    BYTE PTR [esp+0x1e4],0xf
  406d1d:	call   DWORD PTR ds:0x430264
  406d23:	lea    ecx,[esp+0xc0]
  406d2a:	mov    BYTE PTR [esp+0x1e4],0x10
  406d32:	call   DWORD PTR ds:0x430264
  406d38:	lea    ecx,[esp+0xdc]
  406d3f:	mov    BYTE PTR [esp+0x1e4],0x11
  406d47:	call   DWORD PTR ds:0x430264
  406d4d:	lea    ecx,[esp+0x6c]
  406d51:	mov    BYTE PTR [esp+0x1e4],0x12
  406d59:	call   DWORD PTR ds:0x430264
  406d5f:	lea    ecx,[esp+0x34]
  406d63:	mov    BYTE PTR [esp+0x1e4],0x13
  406d6b:	call   DWORD PTR ds:0x43025c
  406d71:	mov    eax,DWORD PTR [esp+0x118]
  406d78:	cmp    DWORD PTR [esp+0x12c],ebx
  406d7f:	jae    0x406d88
  406d81:	lea    eax,[esp+0x118]
  406d88:	push   eax
  406d89:	lea    ecx,[esp+0x54]
  406d8d:	call   DWORD PTR ds:0x430268
  406d93:	mov    bl,0x14
  406d95:	push   0x43121c
  406d9a:	lea    ecx,[esp+0x1c]
  406d9e:	mov    BYTE PTR [esp+0x1e8],bl
  406da5:	call   DWORD PTR ds:0x43011c
  406dab:	lea    edx,[esp+0x18]
  406daf:	push   edx
  406db0:	push   ebp
  406db1:	lea    edi,[esp+0x58]
  406db5:	mov    BYTE PTR [esp+0x1ec],0x15
  406dbd:	call   0x40aff0
  406dc2:	lea    ecx,[esp+0x18]
  406dc6:	mov    BYTE PTR [esp+0x1e4],bl
  406dcd:	call   DWORD PTR ds:0x43025c
  406dd3:	mov    ecx,edi
  406dd5:	mov    BYTE PTR [esp+0x1e4],0x13
  406ddd:	call   DWORD PTR ds:0x430264
  406de3:	push   0x4311e0
  406de8:	lea    ecx,[esp+0x1c]
  406dec:	call   DWORD PTR ds:0x43011c
  406df2:	mov    BYTE PTR [esp+0x1e4],0x16
  406dfa:	mov    ecx,DWORD PTR [ebp+0x4]
  406dfd:	mov    eax,DWORD PTR [ecx]
  406dff:	mov    edx,DWORD PTR [eax+0x14]
  406e02:	xor    esi,esi
  406e04:	call   edx
  406e06:	test   eax,eax
  406e08:	je     0x406e37
  406e0a:	cmp    DWORD PTR [esp+0x30],0x10
  406e0f:	mov    ecx,DWORD PTR [esp+0x1c]
  406e13:	jae    0x406e19
  406e15:	lea    ecx,[esp+0x1c]
  406e19:	mov    edx,DWORD PTR [eax]
  406e1b:	push   ecx
  406e1c:	mov    ecx,eax
  406e1e:	mov    eax,DWORD PTR [edx+0x48]
  406e21:	call   eax
  406e23:	test   eax,eax
  406e25:	je     0x406e37
  406e27:	mov    edx,DWORD PTR [eax]
  406e29:	mov    ecx,eax
  406e2b:	mov    eax,DWORD PTR [edx+0x4]
  406e2e:	push   0x431474
  406e33:	call   eax
  406e35:	mov    esi,eax
  406e37:	lea    ecx,[esp+0x18]
  406e3b:	mov    BYTE PTR [esp+0x1e4],0x13
  406e43:	call   DWORD PTR ds:0x43025c
  406e49:	test   esi,esi
  406e4b:	je     0x406e75
  406e4d:	mov    eax,DWORD PTR [esp+0x1f4]
  406e54:	test   eax,eax
  406e56:	jle    0x406e75
  406e58:	mov    edx,DWORD PTR [esi]
  406e5a:	push   eax
  406e5b:	mov    eax,DWORD PTR [edx+0xc]
  406e5e:	push   0x0
  406e60:	mov    ecx,esi
  406e62:	call   eax
  406e64:	mov    edx,DWORD PTR [esi]
  406e66:	mov    eax,DWORD PTR [esp+0x1f0]
  406e6d:	mov    edx,DWORD PTR [edx+0x4]
  406e70:	push   eax
  406e71:	mov    ecx,esi
  406e73:	call   edx
  406e75:	lea    ecx,[esp+0x114]
  406e7c:	mov    BYTE PTR [esp+0x1e4],0x6
  406e84:	call   DWORD PTR ds:0x430264
  406e8a:	lea    ecx,[esp+0xf8]
  406e91:	mov    BYTE PTR [esp+0x1e4],0x5
  406e99:	call   DWORD PTR ds:0x430264
  406e9f:	lea    ecx,[esp+0x1a0]
  406ea6:	mov    BYTE PTR [esp+0x1e4],0x4
  406eae:	call   DWORD PTR ds:0x430264
  406eb4:	lea    ecx,[esp+0x1bc]
  406ebb:	mov    BYTE PTR [esp+0x1e4],0x3
  406ec3:	call   DWORD PTR ds:0x430264
  406ec9:	lea    ecx,[esp+0x168]
  406ed0:	mov    BYTE PTR [esp+0x1e4],0x2
  406ed8:	call   DWORD PTR ds:0x430264
  406ede:	lea    ecx,[esp+0x130]
  406ee5:	mov    BYTE PTR [esp+0x1e4],0x1
  406eed:	call   DWORD PTR ds:0x430264
  406ef3:	lea    ecx,[esp+0x14c]
  406efa:	mov    BYTE PTR [esp+0x1e4],0x0
  406f02:	call   DWORD PTR ds:0x430264
  406f08:	lea    ecx,[esp+0x184]
  406f0f:	mov    DWORD PTR [esp+0x1e4],0xffffffff
  406f1a:	call   DWORD PTR ds:0x430264
  406f20:	mov    ecx,DWORD PTR [esp+0x1dc]
  406f27:	mov    DWORD PTR fs:0x0,ecx
  406f2e:	pop    ecx
  406f2f:	pop    edi
  406f30:	pop    esi
  406f31:	pop    ebp
  406f32:	pop    ebx
  406f33:	mov    ecx,DWORD PTR [esp+0x1c4]
  406f3a:	xor    ecx,esp
  406f3c:	call   0x42503a
  406f41:	add    esp,0x1d4
  406f47:	ret    0x14
  406f4a:	int3   
  406f4b:	int3   
  406f4c:	int3   
  406f4d:	int3   
  406f4e:	int3   
  406f4f:	int3   
  406f50:	push   0xffffffff
  406f52:	push   0x42c100
  406f57:	mov    eax,fs:0x0
  406f5d:	push   eax
  406f5e:	sub    esp,0x8c
  406f64:	push   ebx
  406f65:	push   ebp
  406f66:	push   esi
  406f67:	push   edi
  406f68:	mov    eax,ds:0x43e020
  406f6d:	xor    eax,esp
  406f6f:	push   eax
  406f70:	lea    eax,[esp+0xa0]
  406f77:	mov    fs:0x0,eax
  406f7d:	mov    ebp,ecx
  406f7f:	mov    ebx,0x1
  406f84:	push   0x431230
  406f89:	lea    ecx,[esp+0x18]
  406f8d:	mov    DWORD PTR [ebp+0x58],ebx
  406f90:	call   DWORD PTR ds:0x43011c
  406f96:	push   0x431048
  406f9b:	lea    ecx,[esp+0x6c]
  406f9f:	mov    DWORD PTR [esp+0xac],0x0
  406faa:	call   DWORD PTR ds:0x43011c
  406fb0:	mov    eax,DWORD PTR [esp+0xb0]
  406fb7:	mov    BYTE PTR [esp+0xa8],bl
  406fbe:	cmp    DWORD PTR [eax+0x18],0x8
  406fc2:	jb     0x406fc9
  406fc4:	mov    esi,DWORD PTR [eax+0x4]
  406fc7:	jmp    0x406fcc
  406fc9:	lea    esi,[eax+0x4]
  406fcc:	call   0x41f6c0
  406fd1:	cmp    DWORD PTR [esp+0x2c],0x10
  406fd6:	mov    ecx,DWORD PTR ds:0x43ff8c
  406fdc:	mov    eax,DWORD PTR [esp+0x18]
  406fe0:	jae    0x406fe6
  406fe2:	lea    eax,[esp+0x18]
  406fe6:	mov    edx,DWORD PTR [ecx]
  406fe8:	push   eax
  406fe9:	mov    eax,DWORD PTR [edx+0x8]
  406fec:	call   eax
  406fee:	push   esi
  406fef:	push   eax
  406ff0:	lea    esi,[esp+0x8c]
  406ff7:	call   0x40a710
  406ffc:	add    esp,0x8
  406fff:	lea    ecx,[esp+0x68]
  407003:	push   ecx
  407004:	push   ebp
  407005:	mov    edi,eax
  407007:	mov    BYTE PTR [esp+0xb0],0x2
  40700f:	call   0x40aff0
  407014:	mov    ecx,esi
  407016:	mov    BYTE PTR [esp+0xa8],bl
  40701d:	call   DWORD PTR ds:0x430264
  407023:	lea    ecx,[esp+0x68]
  407027:	mov    BYTE PTR [esp+0xa8],0x0
  40702f:	call   DWORD PTR ds:0x43025c
  407035:	or     esi,0xffffffff
  407038:	lea    ecx,[esp+0x14]
  40703c:	mov    DWORD PTR [esp+0xa8],esi
  407043:	call   DWORD PTR ds:0x43025c
  407049:	push   0x430ae4
  40704e:	lea    ecx,[esp+0x50]
  407052:	call   DWORD PTR ds:0x430268
  407058:	mov    ebx,0x3
  40705d:	push   0x43121c
  407062:	lea    ecx,[esp+0x34]
  407066:	mov    DWORD PTR [esp+0xac],ebx
  40706d:	call   DWORD PTR ds:0x43011c
  407073:	lea    edx,[esp+0x30]
  407077:	push   edx
  407078:	push   ebp
  407079:	lea    edi,[esp+0x54]
  40707d:	mov    BYTE PTR [esp+0xb0],0x4
  407085:	call   0x40aff0
  40708a:	lea    ecx,[esp+0x30]
  40708e:	mov    BYTE PTR [esp+0xa8],bl
  407095:	call   DWORD PTR ds:0x43025c
  40709b:	mov    ecx,edi
  40709d:	mov    DWORD PTR [esp+0xa8],esi
  4070a4:	call   DWORD PTR ds:0x430264
  4070aa:	mov    ecx,DWORD PTR [esp+0xa0]
  4070b1:	mov    DWORD PTR fs:0x0,ecx
  4070b8:	pop    ecx
  4070b9:	pop    edi
  4070ba:	pop    esi
  4070bb:	pop    ebp
  4070bc:	pop    ebx
  4070bd:	add    esp,0x98
  4070c3:	ret    0x4
  4070c6:	int3   
  4070c7:	int3   
  4070c8:	int3   
  4070c9:	int3   
  4070ca:	int3   
  4070cb:	int3   
  4070cc:	int3   
  4070cd:	int3   
  4070ce:	int3   
  4070cf:	int3   
  4070d0:	push   0xffffffff
  4070d2:	push   0x42cb9b
  4070d7:	mov    eax,fs:0x0
  4070dd:	push   eax
  4070de:	sub    esp,0x58
  4070e1:	push   ebx
  4070e2:	push   esi
  4070e3:	push   edi
  4070e4:	mov    eax,ds:0x43e020
  4070e9:	xor    eax,esp
  4070eb:	push   eax
  4070ec:	lea    eax,[esp+0x68]
  4070f0:	mov    fs:0x0,eax
  4070f6:	mov    esi,ecx
  4070f8:	mov    ebx,0x1
  4070fd:	push   0x431240
  407102:	lea    ecx,[esp+0x18]
  407106:	mov    BYTE PTR [esi+0x52],bl
  407109:	call   DWORD PTR ds:0x43011c
  40710f:	mov    DWORD PTR [esp+0x70],0x0
  407117:	call   0x41f6c0
  40711c:	cmp    DWORD PTR [esp+0x2c],0x10
  407121:	mov    ecx,DWORD PTR ds:0x43ff8c
  407127:	mov    eax,DWORD PTR [esp+0x18]
  40712b:	jae    0x407131
  40712d:	lea    eax,[esp+0x18]
  407131:	mov    edx,DWORD PTR [ecx]
  407133:	push   eax
  407134:	mov    eax,DWORD PTR [edx+0x8]
  407137:	call   eax
  407139:	push   eax
  40713a:	lea    ecx,[esp+0x50]
  40713e:	call   DWORD PTR ds:0x430268
  407144:	push   0x430fdc
  407149:	lea    ecx,[esp+0x34]
  40714d:	mov    BYTE PTR [esp+0x74],bl
  407151:	call   DWORD PTR ds:0x43011c
  407157:	lea    ecx,[esp+0x30]
  40715b:	push   ecx
  40715c:	push   esi
  40715d:	lea    edi,[esp+0x54]
  407161:	mov    BYTE PTR [esp+0x78],0x2
  407166:	call   0x40aff0
  40716b:	lea    ecx,[esp+0x30]
  40716f:	mov    BYTE PTR [esp+0x70],bl
  407173:	call   DWORD PTR ds:0x43025c
  407179:	mov    ecx,edi
  40717b:	mov    BYTE PTR [esp+0x70],0x0
  407180:	call   DWORD PTR ds:0x430264
  407186:	lea    ecx,[esp+0x14]
  40718a:	mov    DWORD PTR [esp+0x70],0xffffffff
  407192:	call   DWORD PTR ds:0x43025c
  407198:	mov    ecx,DWORD PTR [esi+0x24]
  40719b:	mov    edx,DWORD PTR [ecx]
  40719d:	mov    eax,DWORD PTR [edx+0xc]
  4071a0:	push   0x0
  4071a2:	push   0x431108
  4071a7:	call   eax
  4071a9:	mov    ecx,DWORD PTR [esi+0x24]
  4071ac:	mov    edx,DWORD PTR [ecx]
  4071ae:	mov    eax,DWORD PTR [edx+0xc]
  4071b1:	push   0x0
  4071b3:	push   0x431254
  4071b8:	call   eax
  4071ba:	mov    ecx,DWORD PTR [esi+0x24]
  4071bd:	mov    edx,DWORD PTR [ecx]
  4071bf:	mov    eax,DWORD PTR [edx+0xc]
  4071c2:	push   ebx
  4071c3:	push   0x43112c
  4071c8:	call   eax
  4071ca:	mov    ecx,DWORD PTR [esi+0x24]
  4071cd:	mov    edx,DWORD PTR [ecx]
  4071cf:	mov    eax,DWORD PTR [edx+0xc]
  4071d2:	push   ebx
  4071d3:	push   0x431274
  4071d8:	call   eax
  4071da:	call   0x40ae90
  4071df:	cmp    BYTE PTR [esi+0x53],0x0
  4071e3:	je     0x4071eb
  4071e5:	mov    BYTE PTR [esi+0x50],0x0
  4071e9:	jmp    0x4071f4
  4071eb:	cmp    BYTE PTR [esi+0x54],0x0
  4071ef:	je     0x40720b
  4071f1:	mov    BYTE PTR [esi+0x50],bl
  4071f4:	mov    ecx,DWORD PTR [esi+0x4]
  4071f7:	mov    edx,DWORD PTR [ecx]
  4071f9:	mov    eax,DWORD PTR [edx+0x18]
  4071fc:	call   eax
  4071fe:	push   0x0
  407200:	push   0x0
  407202:	push   0x10
  407204:	push   eax
  407205:	call   DWORD PTR ds:0x430430
  40720b:	mov    ecx,DWORD PTR [esp+0x68]
  40720f:	mov    DWORD PTR fs:0x0,ecx
  407216:	pop    ecx
  407217:	pop    edi
  407218:	pop    esi
  407219:	pop    ebx
  40721a:	add    esp,0x64
  40721d:	ret    
  40721e:	int3   
  40721f:	int3   
  407220:	push   ebp
  407221:	mov    ebp,esp
  407223:	and    esp,0xfffffff8
  407226:	push   0xffffffff
  407228:	push   0x42cb59
  40722d:	mov    eax,fs:0x0
  407233:	push   eax
  407234:	sub    esp,0x24
  407237:	push   esi
  407238:	push   edi
  407239:	mov    eax,ds:0x43e020
  40723e:	xor    eax,esp
  407240:	push   eax
  407241:	lea    eax,[esp+0x30]
  407245:	mov    fs:0x0,eax
  40724b:	mov    esi,ecx
  40724d:	push   0x430fdc
  407252:	lea    ecx,[esp+0x14]
  407256:	mov    BYTE PTR [esi+0x50],0x1
  40725a:	call   DWORD PTR ds:0x43011c
  407260:	mov    edi,DWORD PTR [ebp+0xc]
  407263:	lea    eax,[esp+0x10]
  407267:	push   eax
  407268:	push   esi
  407269:	mov    DWORD PTR [esp+0x40],0x0
  407271:	call   0x40aff0
  407276:	lea    ecx,[esp+0x10]
  40727a:	mov    DWORD PTR [esp+0x38],0xffffffff
  407282:	call   DWORD PTR ds:0x43025c
  407288:	mov    ecx,DWORD PTR [esi+0x24]
  40728b:	mov    edx,DWORD PTR [ecx]
  40728d:	mov    eax,DWORD PTR [edx+0xc]
  407290:	push   0x0
  407292:	push   0x431108
  407297:	call   eax
  407299:	mov    ecx,DWORD PTR [esi+0x24]
  40729c:	mov    edx,DWORD PTR [ecx]
  40729e:	mov    eax,DWORD PTR [edx+0xc]
  4072a1:	push   0x1
  4072a3:	push   0x43112c
  4072a8:	call   eax
  4072aa:	call   0x40ae90
  4072af:	cmp    BYTE PTR [esi+0x53],0x0
  4072b3:	je     0x4072e6
  4072b5:	mov    ecx,DWORD PTR [esi+0x4]
  4072b8:	mov    BYTE PTR [esi+0x50],0x0
  4072bc:	mov    edx,DWORD PTR [ecx]
  4072be:	mov    eax,DWORD PTR [edx+0x18]
  4072c1:	call   eax
  4072c3:	push   0x0
  4072c5:	push   0x0
  4072c7:	push   0x10
  4072c9:	push   eax
  4072ca:	call   DWORD PTR ds:0x430430
  4072d0:	mov    ecx,DWORD PTR [esi+0x24]
  4072d3:	mov    edx,DWORD PTR [ecx]
  4072d5:	mov    eax,DWORD PTR [edx+0xc]
  4072d8:	push   0x1
  4072da:	push   0x431184
  4072df:	call   eax
  4072e1:	call   0x40ae90
  4072e6:	mov    ecx,DWORD PTR [esp+0x30]
  4072ea:	mov    DWORD PTR fs:0x0,ecx
  4072f1:	pop    ecx
  4072f2:	pop    edi
  4072f3:	pop    esi
  4072f4:	mov    esp,ebp
  4072f6:	pop    ebp
  4072f7:	ret    0x8
  4072fa:	int3   
  4072fb:	int3   
  4072fc:	int3   
  4072fd:	int3   
  4072fe:	int3   
  4072ff:	int3   
  407300:	push   0xffffffff
  407302:	push   0x42b7cc
  407307:	mov    eax,fs:0x0
  40730d:	push   eax
  40730e:	sub    esp,0x7c
  407311:	mov    eax,ds:0x43e020
  407316:	xor    eax,esp
  407318:	mov    DWORD PTR [esp+0x78],eax
  40731c:	push   ebx
  40731d:	push   esi
  40731e:	push   edi
  40731f:	mov    eax,ds:0x43e020
  407324:	xor    eax,esp
  407326:	push   eax
  407327:	lea    eax,[esp+0x8c]
  40732e:	mov    fs:0x0,eax
  407334:	mov    ebx,DWORD PTR [esp+0x9c]
  40733b:	mov    edi,ecx
  40733d:	push   0x431058
  407342:	lea    ecx,[esp+0x14]
  407346:	call   DWORD PTR ds:0x43011c
  40734c:	mov    DWORD PTR [esp+0x94],0x0
  407357:	mov    ecx,DWORD PTR [edi+0x4]
  40735a:	mov    eax,DWORD PTR [ecx]
  40735c:	mov    edx,DWORD PTR [eax+0x14]
  40735f:	xor    esi,esi
  407361:	call   edx
  407363:	test   eax,eax
  407365:	je     0x407394
  407367:	cmp    DWORD PTR [esp+0x28],0x10
  40736c:	mov    ecx,DWORD PTR [esp+0x14]
  407370:	jae    0x407376
  407372:	lea    ecx,[esp+0x14]
  407376:	mov    edx,DWORD PTR [eax]
  407378:	push   ecx
  407379:	mov    ecx,eax
  40737b:	mov    eax,DWORD PTR [edx+0x48]
  40737e:	call   eax
  407380:	test   eax,eax
  407382:	je     0x407394
  407384:	mov    edx,DWORD PTR [eax]
  407386:	mov    ecx,eax
  407388:	mov    eax,DWORD PTR [edx+0x4]
  40738b:	push   0x43144c
  407390:	call   eax
  407392:	mov    esi,eax
  407394:	lea    ecx,[esp+0x10]
  407398:	mov    DWORD PTR [esp+0x94],0xffffffff
  4073a3:	call   DWORD PTR ds:0x43025c
  4073a9:	test   esi,esi
  4073ab:	je     0x40740b
  4073ad:	push   0x5c
  4073af:	lea    ecx,[esp+0x30]
  4073b3:	push   0x0
  4073b5:	push   ecx
  4073b6:	call   0x429f9c
  4073bb:	add    esp,0xc
  4073be:	cmp    DWORD PTR [ebx+0x18],0x8
  4073c2:	mov    DWORD PTR [esp+0x2c],0x5c
  4073ca:	mov    DWORD PTR [esp+0x30],0x40000000
  4073d2:	mov    DWORD PTR [esp+0x40],0xffffff
  4073da:	jb     0x4073e1
  4073dc:	mov    ebx,DWORD PTR [ebx+0x4]
  4073df:	jmp    0x4073e4
  4073e1:	add    ebx,0x4
  4073e4:	mov    edx,DWORD PTR [esi]
  4073e6:	mov    edx,DWORD PTR [edx+0x8]
  4073e9:	lea    eax,[esp+0x2c]
  4073ed:	push   eax
  4073ee:	push   ebx
  4073ef:	mov    ecx,esi
  4073f1:	call   edx
  4073f3:	mov    eax,DWORD PTR [esi]
  4073f5:	mov    edx,DWORD PTR [eax+0x60]
  4073f8:	push   0x0
  4073fa:	push   0x0
  4073fc:	mov    ecx,esi
  4073fe:	call   edx
  407400:	mov    eax,DWORD PTR [esi]
  407402:	mov    edx,DWORD PTR [eax+0x78]
  407405:	push   0x0
  407407:	mov    ecx,esi
  407409:	call   edx
  40740b:	mov    ecx,DWORD PTR [esp+0x8c]
  407412:	mov    DWORD PTR fs:0x0,ecx
  407419:	pop    ecx
  40741a:	pop    edi
  40741b:	pop    esi
  40741c:	pop    ebx
  40741d:	mov    ecx,DWORD PTR [esp+0x78]
  407421:	xor    ecx,esp
  407423:	call   0x42503a
  407428:	add    esp,0x88
  40742e:	ret    0x4
  407431:	int3   
  407432:	int3   
  407433:	int3   
  407434:	int3   
  407435:	int3   
  407436:	int3   
  407437:	int3   
  407438:	int3   
  407439:	int3   
  40743a:	int3   
  40743b:	int3   
  40743c:	int3   
  40743d:	int3   
  40743e:	int3   
  40743f:	int3   
  407440:	push   0xffffffff
  407442:	push   0x42cb32
  407447:	mov    eax,fs:0x0
  40744d:	push   eax
  40744e:	sub    esp,0x3c
  407451:	push   esi
  407452:	push   edi
  407453:	mov    eax,ds:0x43e020
  407458:	xor    eax,esp
  40745a:	push   eax
  40745b:	lea    eax,[esp+0x48]
  40745f:	mov    fs:0x0,eax
  407465:	mov    esi,ecx
  407467:	push   0x4312b4
  40746c:	lea    ecx,[esp+0x30]
  407470:	mov    BYTE PTR [esi+0x50],0x1
  407474:	mov    BYTE PTR [esi+0x51],0x1
  407478:	mov    BYTE PTR [esi+0x52],0x1
  40747c:	call   DWORD PTR ds:0x430268
  407482:	push   0x430fdc
  407487:	lea    ecx,[esp+0x14]
  40748b:	mov    DWORD PTR [esp+0x54],0x0
  407493:	call   DWORD PTR ds:0x43011c
  407499:	lea    eax,[esp+0x10]
  40749d:	push   eax
  40749e:	push   esi
  40749f:	lea    edi,[esp+0x34]
  4074a3:	mov    BYTE PTR [esp+0x58],0x1
  4074a8:	call   0x40aff0
  4074ad:	lea    ecx,[esp+0x10]
  4074b1:	mov    BYTE PTR [esp+0x50],0x0
  4074b6:	call   DWORD PTR ds:0x43025c
  4074bc:	mov    ecx,edi
  4074be:	mov    DWORD PTR [esp+0x50],0xffffffff
  4074c6:	call   DWORD PTR ds:0x430264
  4074cc:	cmp    BYTE PTR [esi+0x53],0x0
  4074d0:	je     0x407503
  4074d2:	mov    ecx,DWORD PTR [esi+0x4]
  4074d5:	mov    BYTE PTR [esi+0x50],0x0
  4074d9:	mov    edx,DWORD PTR [ecx]
  4074db:	mov    eax,DWORD PTR [edx+0x18]
  4074de:	call   eax
  4074e0:	push   0x0
  4074e2:	push   0x0
  4074e4:	push   0x10
  4074e6:	push   eax
  4074e7:	call   DWORD PTR ds:0x430430
  4074ed:	mov    ecx,DWORD PTR [esi+0x24]
  4074f0:	mov    edx,DWORD PTR [ecx]
  4074f2:	mov    eax,DWORD PTR [edx+0xc]
  4074f5:	push   0x1
  4074f7:	push   0x431294
  4074fc:	call   eax
  4074fe:	call   0x40ae90
  407503:	mov    ecx,DWORD PTR [esp+0x48]
  407507:	mov    DWORD PTR fs:0x0,ecx
  40750e:	pop    ecx
  40750f:	pop    edi
  407510:	pop    esi
  407511:	add    esp,0x48
  407514:	ret    
  407515:	int3   
  407516:	int3   
  407517:	int3   
  407518:	int3   
  407519:	int3   
  40751a:	int3   
  40751b:	int3   
  40751c:	int3   
  40751d:	int3   
  40751e:	int3   
  40751f:	int3   
  407520:	push   esi
  407521:	mov    esi,eax
  407523:	mov    DWORD PTR [esi],0x43fe6c
  407529:	mov    BYTE PTR [esi+0x4],0x0
  40752d:	call   0x407550
  407532:	mov    eax,esi
  407534:	pop    esi
  407535:	ret    
  407536:	int3   
  407537:	int3   
  407538:	int3   
  407539:	int3   
  40753a:	int3   
  40753b:	int3   
  40753c:	int3   
  40753d:	int3   
  40753e:	int3   
  40753f:	int3   
  407540:	cmp    BYTE PTR [eax+0x4],0x0
  407544:	je     0x40754e
  407546:	mov    eax,DWORD PTR [eax]
  407548:	push   eax
  407549:	call   0x40a680
  40754e:	ret    
  40754f:	int3   
  407550:	push   ebp
  407551:	mov    ebp,esp
  407553:	and    esp,0xfffffff8
  407556:	push   0xffffffff
  407558:	push   0x42eca8
  40755d:	mov    eax,fs:0x0
  407563:	push   eax
  407564:	sub    esp,0x24
  407567:	push   ebx
  407568:	push   edi
  407569:	mov    eax,ds:0x43e020
  40756e:	xor    eax,esp
  407570:	push   eax
  407571:	lea    eax,[esp+0x30]
  407575:	mov    fs:0x0,eax
  40757b:	mov    al,BYTE PTR [esi+0x4]
  40757e:	xor    ebx,ebx
  407580:	cmp    al,bl
  407582:	je     0x4075a7
  407584:	lea    ecx,[esp+0x1c]
  407588:	call   DWORD PTR ds:0x4303ac
  40758e:	mov    DWORD PTR [esp+0x28],ebx
  407592:	mov    DWORD PTR [esp+0x1c],0x4314a8
  40759a:	lea    edi,[esp+0x1c]
  40759e:	mov    DWORD PTR [esp+0x38],ebx
  4075a2:	call   0x40a630
  4075a7:	mov    ebx,DWORD PTR [esi]
  4075a9:	or     eax,0xffffffff
  4075ac:	mov    DWORD PTR [esp+0x14],eax
  4075b0:	mov    DWORD PTR [esp+0x10],eax
  4075b4:	lea    eax,[esp+0x14]
  4075b8:	lea    ecx,[esp+0x10]
  4075bc:	lea    edi,[esp+0x1c]
  4075c0:	mov    DWORD PTR [esp+0x18],0x7fffffff
  4075c8:	call   0x408e50
  4075cd:	push   ebx
  4075ce:	mov    ebx,edi
  4075d0:	call   0x4088e0
  4075d5:	mov    BYTE PTR [esi+0x4],0x1
  4075d9:	mov    ecx,DWORD PTR [esp+0x30]
  4075dd:	mov    DWORD PTR fs:0x0,ecx
  4075e4:	pop    ecx
  4075e5:	pop    edi
  4075e6:	pop    ebx
  4075e7:	mov    esp,ebp
  4075e9:	pop    ebp
  4075ea:	ret    
  4075eb:	int3   
  4075ec:	int3   
  4075ed:	int3   
  4075ee:	int3   
  4075ef:	int3   
  4075f0:	push   ecx
  4075f1:	mov    ecx,esi
  4075f3:	mov    DWORD PTR [esp],0x0
  4075fa:	call   0x407610
  4075ff:	mov    eax,esi
  407601:	pop    ecx
  407602:	ret    
  407603:	int3   
  407604:	int3   
  407605:	int3   
  407606:	int3   
  407607:	int3   
  407608:	int3   
  407609:	int3   
  40760a:	int3   
  40760b:	int3   
  40760c:	int3   
  40760d:	int3   
  40760e:	int3   
  40760f:	int3   
  407610:	push   0xffffffff
  407612:	push   0x42d35a
  407617:	mov    eax,fs:0x0
  40761d:	push   eax
  40761e:	sub    esp,0x3c
  407621:	mov    eax,ds:0x43e020
  407626:	xor    eax,esp
  407628:	mov    DWORD PTR [esp+0x38],eax
  40762c:	push   esi
  40762d:	push   edi
  40762e:	mov    eax,ds:0x43e020
  407633:	xor    eax,esp
  407635:	push   eax
  407636:	lea    eax,[esp+0x48]
  40763a:	mov    fs:0x0,eax
  407640:	mov    DWORD PTR [esp+0x50],0x0
  407648:	mov    esi,ecx
  40764a:	mov    DWORD PTR [esp+0x10],esi
  40764e:	mov    edi,edx
  407650:	mov    DWORD PTR [esp+0x14],0x0
  407658:	call   DWORD PTR ds:0x430254
  40765e:	mov    DWORD PTR [esp+0x50],0x0
  407666:	mov    edi,DWORD PTR [edi]
  407668:	mov    DWORD PTR [esp+0x14],0x1
  407670:	mov    edx,edi
  407672:	test   edi,edi
  407674:	jge    0x407678
  407676:	neg    edx
  407678:	lea    ecx,[esp+0x40]
  40767c:	call   0x407b50
  407681:	test   edi,edi
  407683:	jge    0x407690
  407685:	sub    eax,0x2
  407688:	mov    ecx,0x2d
  40768d:	mov    WORD PTR [eax],cx
  407690:	mov    edx,DWORD PTR [esp+0x10]
  407694:	push   edx
  407695:	lea    ecx,[esp+0x44]
  407699:	push   ecx
  40769a:	push   eax
  40769b:	call   0x407e70
  4076a0:	mov    eax,esi
  4076a2:	mov    ecx,DWORD PTR [esp+0x48]
  4076a6:	mov    DWORD PTR fs:0x0,ecx
  4076ad:	pop    ecx
  4076ae:	pop    edi
  4076af:	pop    esi
  4076b0:	mov    ecx,DWORD PTR [esp+0x38]
  4076b4:	xor    ecx,esp
  4076b6:	call   0x42503a
  4076bb:	add    esp,0x48
  4076be:	ret    
  4076bf:	int3   
  4076c0:	sub    esp,0xc
  4076c3:	mov    eax,DWORD PTR [esp+0x10]
  4076c7:	mov    ecx,DWORD PTR [esp+0x14]
  4076cb:	lea    edx,[esp]
  4076ce:	push   edx
  4076cf:	mov    DWORD PTR [esi],0x0
  4076d5:	mov    DWORD PTR [esp+0x4],eax
  4076d9:	mov    DWORD PTR [esp+0x8],ecx
  4076dd:	call   0x408050
  4076e2:	add    esp,0x4
  4076e5:	test   al,al
  4076e7:	jne    0x40770e
  4076e9:	lea    eax,[esi+0x8]
  4076ec:	test   eax,eax
  4076ee:	je     0x4076fc
  4076f0:	mov    ecx,DWORD PTR [esp]
  4076f3:	mov    edx,DWORD PTR [esp+0x4]
  4076f7:	mov    DWORD PTR [eax],ecx
  4076f9:	mov    DWORD PTR [eax+0x4],edx
  4076fc:	mov    eax,0x4312d4
  407701:	or     eax,0x1
  407704:	mov    DWORD PTR [esi],eax
  407706:	mov    eax,esi
  407708:	add    esp,0xc
  40770b:	ret    0x8
  40770e:	mov    DWORD PTR [esi],0x0
  407714:	mov    eax,esi
  407716:	add    esp,0xc
  407719:	ret    0x8
  40771c:	int3   
  40771d:	int3   
  40771e:	int3   
  40771f:	int3   
  407720:	sub    esp,0xc
  407723:	mov    eax,DWORD PTR [esp+0x10]
  407727:	mov    ecx,DWORD PTR [esp+0x14]
  40772b:	lea    edx,[esp]
  40772e:	push   edx
  40772f:	mov    DWORD PTR [esi],0x0
  407735:	mov    DWORD PTR [esp+0x4],eax
  407739:	mov    DWORD PTR [esp+0x8],ecx
  40773d:	call   0x408050
  407742:	add    esp,0x4
  407745:	test   al,al
  407747:	jne    0x40776e
  407749:	lea    eax,[esi+0x8]
  40774c:	test   eax,eax
  40774e:	je     0x40775c
  407750:	mov    ecx,DWORD PTR [esp]
  407753:	mov    edx,DWORD PTR [esp+0x4]
  407757:	mov    DWORD PTR [eax],ecx
  407759:	mov    DWORD PTR [eax+0x4],edx
  40775c:	mov    eax,0x4312dc
  407761:	or     eax,0x1
  407764:	mov    DWORD PTR [esi],eax
  407766:	mov    eax,esi
  407768:	add    esp,0xc
  40776b:	ret    0x8
  40776e:	mov    DWORD PTR [esi],0x0
  407774:	mov    eax,esi
  407776:	add    esp,0xc
  407779:	ret    0x8
  40777c:	int3   
  40777d:	int3   
  40777e:	int3   
  40777f:	int3   
  407780:	push   0xffffffff
  407782:	push   0x42d318
  407787:	mov    eax,fs:0x0
  40778d:	push   eax
  40778e:	sub    esp,0x54
  407791:	push   ebx
  407792:	push   esi
  407793:	mov    eax,ds:0x43e020
  407798:	xor    eax,esp
  40779a:	push   eax
  40779b:	lea    eax,[esp+0x60]
  40779f:	mov    fs:0x0,eax
  4077a5:	lea    esi,[esp+0xc]
  4077a9:	call   0x407ae0
  4077ae:	mov    ebx,eax
  4077b0:	lea    esi,[esp+0x34]
  4077b4:	mov    DWORD PTR [esp+0x68],0x0
  4077bc:	call   0x407b30
  4077c1:	push   0x435978
  4077c6:	mov    eax,esi
  4077c8:	push   eax
  4077c9:	call   0x429e76
  4077ce:	int3   
  4077cf:	int3   
  4077d0:	mov    eax,DWORD PTR [esp+0x4]
  4077d4:	push   esi
  4077d5:	push   eax
  4077d6:	mov    esi,ecx
  4077d8:	call   0x407800
  4077dd:	mov    DWORD PTR [esi+0x28],0x430bd8
  4077e4:	mov    DWORD PTR [esi],0x4312fc
  4077ea:	mov    DWORD PTR [esi+0x14],0x431308
  4077f1:	mov    DWORD PTR [esi+0x28],0x431310
  4077f8:	mov    eax,esi
  4077fa:	pop    esi
  4077fb:	ret    0x4
  4077fe:	int3   
  4077ff:	int3   
  407800:	push   0xffffffff
  407802:	push   0x42caf8
  407807:	mov    eax,fs:0x0
  40780d:	push   eax
  40780e:	push   ecx
  40780f:	push   esi
  407810:	push   edi
  407811:	mov    eax,ds:0x43e020
  407816:	xor    eax,esp
  407818:	push   eax
  407819:	lea    eax,[esp+0x10]
  40781d:	mov    fs:0x0,eax
  407823:	mov    esi,ecx
  407825:	mov    DWORD PTR [esp+0xc],esi
  407829:	mov    edi,DWORD PTR [esp+0x20]
  40782d:	push   edi
  40782e:	call   DWORD PTR ds:0x430380
  407834:	mov    DWORD PTR [esi],0x43149c
  40783a:	mov    eax,DWORD PTR [edi+0xc]
  40783d:	mov    DWORD PTR [esi+0xc],eax
  407840:	mov    ecx,DWORD PTR [edi+0x10]
  407843:	mov    DWORD PTR [esi+0x10],ecx
  407846:	mov    DWORD PTR [esp+0x18],0x0
  40784e:	mov    DWORD PTR [esi+0x14],0x430bd0
  407855:	mov    ecx,DWORD PTR [edi+0x18]
  407858:	mov    DWORD PTR [esi+0x18],ecx
  40785b:	test   ecx,ecx
  40785d:	je     0x407866
  40785f:	mov    edx,DWORD PTR [ecx]
  407861:	mov    eax,DWORD PTR [edx+0xc]
  407864:	call   eax
  407866:	mov    ecx,DWORD PTR [edi+0x1c]
  407869:	mov    DWORD PTR [esi+0x1c],ecx
  40786c:	mov    edx,DWORD PTR [edi+0x20]
  40786f:	mov    DWORD PTR [esi+0x20],edx
  407872:	mov    eax,DWORD PTR [edi+0x24]
  407875:	mov    DWORD PTR [esi+0x24],eax
  407878:	mov    DWORD PTR [esi],0x4312e8
  40787e:	mov    DWORD PTR [esi+0x14],0x4312f4
  407885:	mov    eax,esi
  407887:	mov    ecx,DWORD PTR [esp+0x10]
  40788b:	mov    DWORD PTR fs:0x0,ecx
  407892:	pop    ecx
  407893:	pop    edi
  407894:	pop    esi
  407895:	add    esp,0x10
  407898:	ret    0x4
  40789b:	int3   
  40789c:	int3   
  40789d:	int3   
  40789e:	int3   
  40789f:	int3   
  4078a0:	push   esi
  4078a1:	push   edi
  4078a2:	mov    edi,DWORD PTR [esp+0xc]
  4078a6:	push   edi
  4078a7:	mov    esi,ecx
  4078a9:	call   DWORD PTR ds:0x430380
  4078af:	mov    DWORD PTR [esi],0x43149c
  4078b5:	mov    eax,DWORD PTR [edi+0xc]
  4078b8:	mov    DWORD PTR [esi+0xc],eax
  4078bb:	mov    ecx,DWORD PTR [edi+0x10]
  4078be:	pop    edi
  4078bf:	mov    DWORD PTR [esi+0x10],ecx
  4078c2:	mov    eax,esi
  4078c4:	pop    esi
  4078c5:	ret    0x4
  4078c8:	int3   
  4078c9:	int3   
  4078ca:	int3   
  4078cb:	int3   
  4078cc:	int3   
  4078cd:	int3   
  4078ce:	int3   
  4078cf:	int3   
  4078d0:	push   esi
  4078d1:	mov    esi,ecx
  4078d3:	mov    DWORD PTR [esi+0x28],0x430bd8
  4078da:	mov    DWORD PTR [esi],0x4312e8
  4078e0:	mov    DWORD PTR [esi+0x14],0x4312f4
  4078e7:	mov    DWORD PTR [esi+0x14],0x430bd0
  4078ee:	mov    ecx,DWORD PTR [esi+0x18]
  4078f1:	test   ecx,ecx
  4078f3:	je     0x407907
  4078f5:	mov    eax,DWORD PTR [ecx]
  4078f7:	mov    edx,DWORD PTR [eax+0x10]
  4078fa:	call   edx
  4078fc:	test   al,al
  4078fe:	je     0x407907
  407900:	mov    DWORD PTR [esi+0x18],0x0
  407907:	mov    ecx,esi
  407909:	mov    DWORD PTR [esi],0x43149c
  40790f:	call   DWORD PTR ds:0x430364
  407915:	test   BYTE PTR [esp+0x8],0x1
  40791a:	je     0x407925
  40791c:	push   esi
  40791d:	call   0x42504a
  407922:	add    esp,0x4
  407925:	mov    eax,esi
  407927:	pop    esi
  407928:	ret    0x4
  40792b:	int3   
  40792c:	int3   
  40792d:	int3   
  40792e:	int3   
  40792f:	int3   
  407930:	push   esi
  407931:	mov    esi,ecx
  407933:	mov    DWORD PTR [esi],0x4312e8
  407939:	mov    DWORD PTR [esi+0x14],0x4312f4
  407940:	mov    DWORD PTR [esi+0x14],0x430bd0
  407947:	mov    ecx,DWORD PTR [esi+0x18]
  40794a:	test   ecx,ecx
  40794c:	je     0x407960
  40794e:	mov    eax,DWORD PTR [ecx]
  407950:	mov    edx,DWORD PTR [eax+0x10]
  407953:	call   edx
  407955:	test   al,al
  407957:	je     0x407960
  407959:	mov    DWORD PTR [esi+0x18],0x0
  407960:	mov    ecx,esi
  407962:	mov    DWORD PTR [esi],0x43149c
  407968:	call   DWORD PTR ds:0x430364
  40796e:	test   BYTE PTR [esp+0x8],0x1
  407973:	je     0x40797e
  407975:	push   esi
  407976:	call   0x42504a
  40797b:	add    esp,0x4
  40797e:	mov    eax,esi
  407980:	pop    esi
  407981:	ret    0x4
  407984:	int3   
  407985:	int3   
  407986:	int3   
  407987:	int3   
  407988:	int3   
  407989:	int3   
  40798a:	int3   
  40798b:	int3   
  40798c:	int3   
  40798d:	int3   
  40798e:	int3   
  40798f:	int3   
  407990:	mov    DWORD PTR [esi],0x4312e8
  407996:	mov    DWORD PTR [esi+0x14],0x4312f4
  40799d:	mov    DWORD PTR [esi+0x14],0x430bd0
  4079a4:	mov    ecx,DWORD PTR [esi+0x18]
  4079a7:	test   ecx,ecx
  4079a9:	je     0x4079bd
  4079ab:	mov    eax,DWORD PTR [ecx]
  4079ad:	mov    edx,DWORD PTR [eax+0x10]
  4079b0:	call   edx
  4079b2:	test   al,al
  4079b4:	je     0x4079bd
  4079b6:	mov    DWORD PTR [esi+0x18],0x0
  4079bd:	mov    DWORD PTR [esi],0x43149c
  4079c3:	mov    ecx,esi
  4079c5:	jmp    DWORD PTR ds:0x430364
  4079cb:	int3   
  4079cc:	int3   
  4079cd:	int3   
  4079ce:	int3   
  4079cf:	int3   
  4079d0:	push   esi
  4079d1:	mov    esi,ecx
  4079d3:	mov    DWORD PTR [esi+0x28],0x430bd8
  4079da:	mov    DWORD PTR [esi],0x4312e8
  4079e0:	mov    DWORD PTR [esi+0x14],0x4312f4
  4079e7:	mov    DWORD PTR [esi+0x14],0x430bd0
  4079ee:	mov    ecx,DWORD PTR [esi+0x18]
  4079f1:	test   ecx,ecx
  4079f3:	je     0x407a07
  4079f5:	mov    eax,DWORD PTR [ecx]
  4079f7:	mov    edx,DWORD PTR [eax+0x10]
  4079fa:	call   edx
  4079fc:	test   al,al
  4079fe:	je     0x407a07
  407a00:	mov    DWORD PTR [esi+0x18],0x0
  407a07:	mov    DWORD PTR [esi],0x43149c
  407a0d:	mov    ecx,esi
  407a0f:	pop    esi
  407a10:	jmp    DWORD PTR ds:0x430364
  407a16:	int3   
  407a17:	int3   
  407a18:	int3   
  407a19:	int3   
  407a1a:	int3   
  407a1b:	int3   
  407a1c:	int3   
  407a1d:	int3   
  407a1e:	int3   
  407a1f:	int3   
  407a20:	push   0xffffffff
  407a22:	push   0x42defb
  407a27:	mov    eax,fs:0x0
  407a2d:	push   eax
  407a2e:	push   ecx
  407a2f:	push   esi
  407a30:	push   edi
  407a31:	mov    eax,ds:0x43e020
  407a36:	xor    eax,esp
  407a38:	push   eax
  407a39:	lea    eax,[esp+0x10]
  407a3d:	mov    fs:0x0,eax
  407a43:	mov    edi,ecx
  407a45:	push   0x2c
  407a47:	call   0x425050
  407a4c:	mov    esi,eax
  407a4e:	add    esp,0x4
  407a51:	mov    DWORD PTR [esp+0xc],esi
  407a55:	xor    eax,eax
  407a57:	mov    DWORD PTR [esp+0x18],eax
  407a5b:	cmp    esi,eax
  407a5d:	je     0x407a86
  407a5f:	lea    eax,[edi-0x28]
  407a62:	push   eax
  407a63:	mov    ecx,esi
  407a65:	call   0x407800
  407a6a:	lea    eax,[esi+0x28]
  407a6d:	mov    DWORD PTR [eax],0x430bd8
  407a73:	mov    DWORD PTR [esi],0x4312fc
  407a79:	mov    DWORD PTR [esi+0x14],0x431308
  407a80:	mov    DWORD PTR [eax],0x431310
  407a86:	mov    ecx,DWORD PTR [esp+0x10]
  407a8a:	mov    DWORD PTR fs:0x0,ecx
  407a91:	pop    ecx
  407a92:	pop    edi
  407a93:	pop    esi
  407a94:	add    esp,0x10
  407a97:	ret    
  407a98:	int3   
  407a99:	int3   
  407a9a:	int3   
  407a9b:	int3   
  407a9c:	int3   
  407a9d:	int3   
  407a9e:	int3   
  407a9f:	int3   
  407aa0:	sub    esp,0x2c
  407aa3:	lea    eax,[ecx-0x28]
  407aa6:	push   eax
  407aa7:	lea    ecx,[esp+0x4]
  407aab:	call   0x407800
  407ab0:	push   0x435978
  407ab5:	lea    eax,[esp+0x4]
  407ab9:	push   eax
  407aba:	mov    DWORD PTR [esp+0x8],0x4312fc
  407ac2:	mov    DWORD PTR [esp+0x1c],0x431308
  407aca:	mov    DWORD PTR [esp+0x30],0x431310
  407ad2:	call   0x429e76
  407ad7:	int3   
  407ad8:	int3   
  407ad9:	int3   
  407ada:	int3   
  407adb:	int3   
  407adc:	int3   
  407add:	int3   
  407ade:	int3   
  407adf:	int3   
  407ae0:	push   ecx
  407ae1:	push   ebx
  407ae2:	xor    ebx,ebx
  407ae4:	push   edi
  407ae5:	mov    ecx,esi
  407ae7:	mov    DWORD PTR [esp+0x8],ebx
  407aeb:	call   DWORD PTR ds:0x430380
  407af1:	mov    DWORD PTR [esi],0x43149c
  407af7:	mov    eax,DWORD PTR [edi+0xc]
  407afa:	mov    DWORD PTR [esi+0xc],eax
  407afd:	mov    ecx,DWORD PTR [edi+0x10]
  407b00:	mov    DWORD PTR [esi+0x10],ecx
  407b03:	mov    DWORD PTR [esi+0x14],0x430bd0
  407b0a:	mov    DWORD PTR [esi+0x18],ebx
  407b0d:	mov    DWORD PTR [esi+0x1c],ebx
  407b10:	mov    DWORD PTR [esi+0x20],ebx
  407b13:	mov    DWORD PTR [esi+0x24],0xffffffff
  407b1a:	mov    DWORD PTR [esi],0x4312e8
  407b20:	mov    DWORD PTR [esi+0x14],0x4312f4
  407b27:	mov    eax,esi
  407b29:	pop    ebx
  407b2a:	pop    ecx
  407b2b:	ret    
  407b2c:	int3   
  407b2d:	int3   
  407b2e:	int3   
  407b2f:	int3   
  407b30:	push   ecx
  407b31:	push   esi
  407b32:	mov    DWORD PTR [esp+0x4],0x0
  407b3a:	call   0x407cf0
  407b3f:	mov    eax,esi
  407b41:	pop    ecx
  407b42:	ret    
  407b43:	int3   
  407b44:	int3   
  407b45:	int3   
  407b46:	int3   
  407b47:	int3   
  407b48:	int3   
  407b49:	int3   
  407b4a:	int3   
  407b4b:	int3   
  407b4c:	int3   
  407b4d:	int3   
  407b4e:	int3   
  407b4f:	int3   
  407b50:	push   0xffffffff
  407b52:	push   0x42af52
  407b57:	mov    eax,fs:0x0
  407b5d:	push   eax
  407b5e:	sub    esp,0x2c
  407b61:	mov    eax,ds:0x43e020
  407b66:	xor    eax,esp
  407b68:	mov    DWORD PTR [esp+0x28],eax
  407b6c:	push   ebx
  407b6d:	push   ebp
  407b6e:	push   esi
  407b6f:	push   edi
  407b70:	mov    eax,ds:0x43e020
  407b75:	xor    eax,esp
  407b77:	push   eax
  407b78:	lea    eax,[esp+0x40]
  407b7c:	mov    fs:0x0,eax
  407b82:	mov    edi,ecx
  407b84:	lea    ecx,[esp+0x14]
  407b88:	mov    esi,edx
  407b8a:	call   DWORD PTR ds:0x43018c
  407b90:	mov    DWORD PTR [esp+0x48],0x0
  407b98:	call   DWORD PTR ds:0x4301ac
  407b9e:	push   eax
  407b9f:	lea    ecx,[esp+0x18]
  407ba3:	call   DWORD PTR ds:0x4301a8
  407ba9:	test   al,al
  407bab:	je     0x407ca0
  407bb1:	lea    ecx,[esp+0x14]
  407bb5:	call   0x408060
  407bba:	mov    ebp,eax
  407bbc:	lea    eax,[esp+0x20]
  407bc0:	push   eax
  407bc1:	mov    ecx,ebp
  407bc3:	call   DWORD PTR ds:0x4301b8
  407bc9:	mov    BYTE PTR [esp+0x48],0x1
  407bce:	mov    eax,DWORD PTR [esp+0x34]
  407bd2:	mov    DWORD PTR [esp+0x18],eax
  407bd6:	test   eax,eax
  407bd8:	je     0x407c90
  407bde:	mov    eax,DWORD PTR [esp+0x24]
  407be2:	mov    ebx,0x10
  407be7:	cmp    DWORD PTR [esp+0x38],ebx
  407beb:	jae    0x407bf1
  407bed:	lea    eax,[esp+0x24]
  407bf1:	cmp    BYTE PTR [eax],0x0
  407bf4:	jle    0x407c90
  407bfa:	mov    ecx,ebp
  407bfc:	call   DWORD PTR ds:0x4301bc
  407c02:	movzx  ecx,ax
  407c05:	mov    eax,DWORD PTR [esp+0x24]
  407c09:	xor    ebp,ebp
  407c0b:	mov    DWORD PTR [esp+0x1c],ecx
  407c0f:	cmp    DWORD PTR [esp+0x38],ebx
  407c13:	jae    0x407c19
  407c15:	lea    eax,[esp+0x24]
  407c19:	mov    bl,BYTE PTR [eax]
  407c1b:	mov    cl,bl
  407c1d:	test   cl,cl
  407c1f:	jne    0x407c5b
  407c21:	inc    ebp
  407c22:	cmp    ebp,DWORD PTR [esp+0x18]
  407c26:	jae    0x407c4e
  407c28:	cmp    ebp,DWORD PTR [esp+0x34]
  407c2c:	jbe    0x407c34
  407c2e:	call   DWORD PTR ds:0x430390
  407c34:	cmp    DWORD PTR [esp+0x38],0x10
  407c39:	mov    eax,DWORD PTR [esp+0x24]
  407c3d:	jae    0x407c43
  407c3f:	lea    eax,[esp+0x24]
  407c43:	mov    al,BYTE PTR [eax+ebp*1]
  407c46:	mov    bl,0x7f
  407c48:	test   al,al
  407c4a:	jle    0x407c4e
  407c4c:	mov    bl,al
  407c4e:	mov    dx,WORD PTR [esp+0x1c]
  407c53:	sub    edi,0x2
  407c56:	mov    cl,bl
  407c58:	mov    WORD PTR [edi],dx
  407c5b:	mov    eax,0xcccccccd
  407c60:	mul    esi
  407c62:	shr    edx,0x3
  407c65:	lea    eax,[edx+edx*4]
  407c68:	add    eax,eax
  407c6a:	sub    esi,eax
  407c6c:	movzx  eax,si
  407c6f:	sub    edi,0x2
  407c72:	add    eax,0x30
  407c75:	mov    esi,edx
  407c77:	dec    cl
  407c79:	mov    WORD PTR [edi],ax
  407c7c:	test   esi,esi
  407c7e:	jne    0x407c1d
  407c80:	lea    ecx,[esp+0x20]
  407c84:	mov    BYTE PTR [esp+0x48],dl
  407c88:	call   DWORD PTR ds:0x43025c
  407c8e:	jmp    0x407cc0
  407c90:	lea    ecx,[esp+0x20]
  407c94:	mov    BYTE PTR [esp+0x48],0x0
  407c99:	call   DWORD PTR ds:0x43025c
  407c9f:	nop
  407ca0:	mov    eax,0xcccccccd
  407ca5:	mul    esi
  407ca7:	shr    edx,0x3
  407caa:	lea    ecx,[edx+edx*4]
  407cad:	add    ecx,ecx
  407caf:	sub    esi,ecx
  407cb1:	add    esi,0x30
  407cb4:	sub    edi,0x2
  407cb7:	mov    WORD PTR [edi],si
  407cba:	mov    esi,edx
  407cbc:	test   esi,esi
  407cbe:	jne    0x407ca0
  407cc0:	lea    ecx,[esp+0x14]
  407cc4:	call   DWORD PTR ds:0x430180
  407cca:	mov    eax,edi
  407ccc:	mov    ecx,DWORD PTR [esp+0x40]
  407cd0:	mov    DWORD PTR fs:0x0,ecx
  407cd7:	pop    ecx
  407cd8:	pop    edi
  407cd9:	pop    esi
  407cda:	pop    ebp
  407cdb:	pop    ebx
  407cdc:	mov    ecx,DWORD PTR [esp+0x28]
  407ce0:	xor    ecx,esp
  407ce2:	call   0x42503a
  407ce7:	add    esp,0x38
  407cea:	ret    
  407ceb:	int3   
  407cec:	int3   
  407ced:	int3   
  407cee:	int3   
  407cef:	int3   
  407cf0:	push   0xffffffff
  407cf2:	push   0x42d2f3
  407cf7:	mov    eax,fs:0x0
  407cfd:	push   eax
  407cfe:	push   esi
  407cff:	push   edi
  407d00:	mov    eax,ds:0x43e020
  407d05:	xor    eax,esp
  407d07:	push   eax
  407d08:	lea    eax,[esp+0xc]
  407d0c:	mov    fs:0x0,eax
  407d12:	mov    esi,DWORD PTR [esp+0x1c]
  407d16:	push   ebx
  407d17:	mov    ecx,esi
  407d19:	call   0x407800
  407d1e:	xor    eax,eax
  407d20:	mov    DWORD PTR [esp+0x14],eax
  407d24:	mov    DWORD PTR [esi+0x28],0x430bd8
  407d2b:	mov    BYTE PTR [esp+0x14],0x1
  407d30:	lea    edi,[esi+0x14]
  407d33:	mov    DWORD PTR [esi],0x4312fc
  407d39:	mov    DWORD PTR [edi],0x431308
  407d3f:	mov    DWORD PTR [esi+0x28],0x431310
  407d46:	cmp    ebx,eax
  407d48:	je     0x407d4d
  407d4a:	lea    eax,[ebx+0x14]
  407d4d:	push   eax
  407d4e:	call   0x402b50
  407d53:	add    esp,0x4
  407d56:	mov    eax,esi
  407d58:	mov    ecx,DWORD PTR [esp+0xc]
  407d5c:	mov    DWORD PTR fs:0x0,ecx
  407d63:	pop    ecx
  407d64:	pop    edi
  407d65:	pop    esi
  407d66:	add    esp,0xc
  407d69:	ret    0x4
  407d6c:	int3   
  407d6d:	int3   
  407d6e:	int3   
  407d6f:	int3   
  407d70:	mov    eax,DWORD PTR [esp+0xc]
  407d74:	xor    ecx,ecx
  407d76:	cmp    eax,0x4
  407d79:	je     0x407dc6
  407d7b:	cmp    eax,ecx
  407d7d:	je     0x407daf
  407d7f:	cmp    eax,0x1
  407d82:	je     0x407daf
  407d84:	cmp    eax,0x2
  407d87:	je     0x407dd6
  407d89:	cmp    eax,0x3
  407d8c:	jne    0x407dc6
  407d8e:	push   esi
  407d8f:	mov    esi,DWORD PTR [esp+0xc]
  407d93:	mov    ecx,DWORD PTR [esi]
  407d95:	push   0x43e8a0
  407d9a:	call   DWORD PTR ds:0x4302d4
  407da0:	movzx  eax,al
  407da3:	neg    eax
  407da5:	sbb    eax,eax
  407da7:	and    eax,DWORD PTR [esp+0x8]
  407dab:	mov    DWORD PTR [esi],eax
  407dad:	pop    esi
  407dae:	ret    
  407daf:	mov    eax,DWORD PTR [esp+0x8]
  407db3:	cmp    eax,ecx
  407db5:	je     0x407dd6
  407db7:	mov    ecx,DWORD PTR [esp+0x4]
  407dbb:	mov    edx,DWORD PTR [ecx]
  407dbd:	mov    DWORD PTR [eax],edx
  407dbf:	mov    ecx,DWORD PTR [ecx+0x4]
  407dc2:	mov    DWORD PTR [eax+0x4],ecx
  407dc5:	ret    
  407dc6:	mov    eax,DWORD PTR [esp+0x8]
  407dca:	mov    BYTE PTR [eax+0x5],cl
  407dcd:	mov    BYTE PTR [eax+0x4],cl
  407dd0:	mov    DWORD PTR [eax],0x43e8a0
  407dd6:	ret    
  407dd7:	int3   
  407dd8:	int3   
  407dd9:	int3   
  407dda:	int3   
  407ddb:	int3   
  407ddc:	int3   
  407ddd:	int3   
  407dde:	int3   
  407ddf:	int3   
  407de0:	mov    eax,DWORD PTR [esp+0x8]
  407de4:	push   eax
  407de5:	mov    eax,DWORD PTR [esp+0x8]
  407de9:	mov    ecx,DWORD PTR [eax+0x4]
  407dec:	mov    edx,DWORD PTR [eax]
  407dee:	call   edx
  407df0:	ret    
  407df1:	int3   
  407df2:	int3   
  407df3:	int3   
  407df4:	int3   
  407df5:	int3   
  407df6:	int3   
  407df7:	int3   
  407df8:	int3   
  407df9:	int3   
  407dfa:	int3   
  407dfb:	int3   
  407dfc:	int3   
  407dfd:	int3   
  407dfe:	int3   
  407dff:	int3   
  407e00:	mov    eax,DWORD PTR [esp+0xc]
  407e04:	xor    ecx,ecx
  407e06:	cmp    eax,0x4
  407e09:	je     0x407e56
  407e0b:	cmp    eax,ecx
  407e0d:	je     0x407e3f
  407e0f:	cmp    eax,0x1
  407e12:	je     0x407e3f
  407e14:	cmp    eax,0x2
  407e17:	je     0x407e66
  407e19:	cmp    eax,0x3
  407e1c:	jne    0x407e56
  407e1e:	push   esi
  407e1f:	mov    esi,DWORD PTR [esp+0xc]
  407e23:	mov    ecx,DWORD PTR [esi]
  407e25:	push   0x43e940
  407e2a:	call   DWORD PTR ds:0x4302d4
  407e30:	movzx  eax,al
  407e33:	neg    eax
  407e35:	sbb    eax,eax
  407e37:	and    eax,DWORD PTR [esp+0x8]
  407e3b:	mov    DWORD PTR [esi],eax
  407e3d:	pop    esi
  407e3e:	ret    
  407e3f:	mov    eax,DWORD PTR [esp+0x8]
  407e43:	cmp    eax,ecx
  407e45:	je     0x407e66
  407e47:	mov    ecx,DWORD PTR [esp+0x4]
  407e4b:	mov    edx,DWORD PTR [ecx]
  407e4d:	mov    DWORD PTR [eax],edx
  407e4f:	mov    ecx,DWORD PTR [ecx+0x4]
  407e52:	mov    DWORD PTR [eax+0x4],ecx
  407e55:	ret    
  407e56:	mov    eax,DWORD PTR [esp+0x8]
  407e5a:	mov    BYTE PTR [eax+0x5],cl
  407e5d:	mov    BYTE PTR [eax+0x4],cl
  407e60:	mov    DWORD PTR [eax],0x43e940
  407e66:	ret    
  407e67:	int3   
  407e68:	int3   
  407e69:	int3   
  407e6a:	int3   
  407e6b:	int3   
  407e6c:	int3   
  407e6d:	int3   
  407e6e:	int3   
  407e6f:	int3   
  407e70:	push   ebp
  407e71:	mov    ebp,esp
  407e73:	and    esp,0xfffffff8
  407e76:	sub    esp,0x10
  407e79:	push   ebx
  407e7a:	push   edi
  407e7b:	lea    eax,[esp+0x8]
  407e7f:	push   eax
  407e80:	mov    ecx,esi
  407e82:	call   DWORD PTR ds:0x430124
  407e88:	mov    edi,DWORD PTR [eax]
  407e8a:	mov    ebx,DWORD PTR [eax+0x4]
  407e8d:	lea    ecx,[esp+0x10]
  407e91:	push   ecx
  407e92:	mov    ecx,esi
  407e94:	call   DWORD PTR ds:0x430128
  407e9a:	mov    edx,DWORD PTR [esp+0x8]
  407e9e:	mov    ecx,DWORD PTR [ebp+0xc]
  407ea1:	push   edx
  407ea2:	mov    edx,DWORD PTR [ebp+0x8]
  407ea5:	push   ecx
  407ea6:	mov    ecx,DWORD PTR [eax+0x4]
  407ea9:	push   edx
  407eaa:	mov    edx,DWORD PTR [eax]
  407eac:	push   ebx
  407ead:	push   edi
  407eae:	push   ecx
  407eaf:	push   edx
  407eb0:	mov    ecx,esi
  407eb2:	call   0x407ec0
  407eb7:	pop    edi
  407eb8:	pop    ebx
  407eb9:	mov    esp,ebp
  407ebb:	pop    ebp
  407ebc:	ret    0xc
  407ebf:	int3   
  407ec0:	push   ebp
  407ec1:	mov    ebp,esp
  407ec3:	and    esp,0xfffffff8
  407ec6:	push   0xffffffff
  407ec8:	push   0x42b789
  407ecd:	mov    eax,fs:0x0
  407ed3:	push   eax
  407ed4:	sub    esp,0x28
  407ed7:	mov    eax,ds:0x43e020
  407edc:	xor    eax,esp
  407ede:	mov    DWORD PTR [esp+0x20],eax
  407ee2:	push   ebx
  407ee3:	push   esi
  407ee4:	push   edi
  407ee5:	mov    eax,ds:0x43e020
  407eea:	xor    eax,esp
  407eec:	push   eax
  407eed:	lea    eax,[esp+0x38]
  407ef1:	mov    fs:0x0,eax
  407ef7:	mov    edi,DWORD PTR [ebp+0x18]
  407efa:	mov    ebx,DWORD PTR [ebp+0x1c]
  407efd:	push   0x0
  407eff:	mov    esi,ecx
  407f01:	push   0x0
  407f03:	lea    ecx,[esp+0x1c]
  407f07:	call   DWORD PTR ds:0x430250
  407f0d:	mov    eax,DWORD PTR [esp+0x10]
  407f11:	push   eax
  407f12:	push   ebx
  407f13:	push   edi
  407f14:	lea    ecx,[esp+0x20]
  407f18:	call   0x407f80
  407f1d:	mov    DWORD PTR [esp+0x40],0x0
  407f25:	mov    edx,DWORD PTR [ebp+0x14]
  407f28:	mov    eax,DWORD PTR [ebp+0x10]
  407f2b:	lea    ecx,[esp+0x14]
  407f2f:	push   ecx
  407f30:	mov    ecx,DWORD PTR [ebp+0xc]
  407f33:	push   edx
  407f34:	mov    edx,DWORD PTR [ebp+0x8]
  407f37:	push   eax
  407f38:	push   ecx
  407f39:	push   edx
  407f3a:	mov    ecx,esi
  407f3c:	call   DWORD PTR ds:0x430130
  407f42:	lea    ecx,[esp+0x14]
  407f46:	mov    DWORD PTR [esp+0x40],0xffffffff
  407f4e:	call   DWORD PTR ds:0x430264
  407f54:	mov    eax,esi
  407f56:	mov    ecx,DWORD PTR [esp+0x38]
  407f5a:	mov    DWORD PTR fs:0x0,ecx
  407f61:	pop    ecx
  407f62:	pop    edi
  407f63:	pop    esi
  407f64:	pop    ebx
  407f65:	mov    ecx,DWORD PTR [esp+0x20]
  407f69:	xor    ecx,esp
  407f6b:	call   0x42503a
  407f70:	mov    esp,ebp
  407f72:	pop    ebp
  407f73:	ret    0x1c
  407f76:	int3   
  407f77:	int3   
  407f78:	int3   
  407f79:	int3   
  407f7a:	int3   
  407f7b:	int3   
  407f7c:	int3   
  407f7d:	int3   
  407f7e:	int3   
  407f7f:	int3   
  407f80:	push   ebp
  407f81:	mov    ebp,esp
  407f83:	push   0xffffffff
  407f85:	push   0x42b760
  407f8a:	mov    eax,fs:0x0
  407f90:	push   eax
  407f91:	sub    esp,0x8
  407f94:	push   ebx
  407f95:	push   esi
  407f96:	push   edi
  407f97:	mov    eax,ds:0x43e020
  407f9c:	xor    eax,ebp
  407f9e:	push   eax
  407f9f:	lea    eax,[ebp-0xc]
  407fa2:	mov    fs:0x0,eax
  407fa8:	mov    DWORD PTR [ebp-0x10],esp
  407fab:	mov    edi,ecx
  407fad:	mov    DWORD PTR [ebp-0x14],edi
  407fb0:	mov    ebx,DWORD PTR [ebp+0xc]
  407fb3:	mov    esi,DWORD PTR [ebp+0x8]
  407fb6:	mov    eax,ebx
  407fb8:	sub    eax,esi
  407fba:	sar    eax,1
  407fbc:	push   eax
  407fbd:	call   DWORD PTR ds:0x43012c
  407fc3:	mov    DWORD PTR [ebp-0x4],0x0
  407fca:	lea    ebx,[ebx+0x0]
  407fd0:	cmp    esi,ebx
  407fd2:	je     0x407ffd
  407fd4:	movzx  eax,WORD PTR [esi]
  407fd7:	push   eax
  407fd8:	push   0x1
  407fda:	mov    ecx,edi
  407fdc:	call   DWORD PTR ds:0x430110
  407fe2:	add    esi,0x2
  407fe5:	jmp    0x407fd0
  407fe7:	mov    ecx,DWORD PTR [ebp-0x14]
  407fea:	push   0x0
  407fec:	push   0x1
  407fee:	call   DWORD PTR ds:0x430250
  407ff4:	push   0x0
  407ff6:	push   0x0
  407ff8:	call   0x429e76
  407ffd:	mov    ecx,DWORD PTR [ebp-0xc]
  408000:	mov    DWORD PTR fs:0x0,ecx
  408007:	pop    ecx
  408008:	pop    edi
  408009:	pop    esi
  40800a:	pop    ebx
  40800b:	mov    esp,ebp
  40800d:	pop    ebp
  40800e:	ret    0xc
  408011:	int3   
  408012:	int3   
  408013:	int3   
  408014:	int3   
  408015:	int3   
  408016:	int3   
  408017:	int3   
  408018:	int3   
  408019:	int3   
  40801a:	int3   
  40801b:	int3   
  40801c:	int3   
  40801d:	int3   
  40801e:	int3   
  40801f:	int3   
  408020:	sub    ecx,0x28
  408023:	jmp    0x4078d0
  408028:	int3   
  408029:	int3   
  40802a:	int3   
  40802b:	int3   
  40802c:	int3   
  40802d:	int3   
  40802e:	int3   
  40802f:	int3   
  408030:	sub    ecx,0x14
  408033:	jmp    0x4078d0
  408038:	int3   
  408039:	int3   
  40803a:	int3   
  40803b:	int3   
  40803c:	int3   
  40803d:	int3   
  40803e:	int3   
  40803f:	int3   
  408040:	sub    ecx,0x14
  408043:	jmp    0x407930
  408048:	int3   
  408049:	int3   
  40804a:	int3   
  40804b:	int3   
  40804c:	int3   
  40804d:	int3   
  40804e:	int3   
  40804f:	int3   
  408050:	xor    al,al
  408052:	ret    
  408053:	int3   
  408054:	int3   
  408055:	int3   
  408056:	int3   
  408057:	int3   
  408058:	int3   
  408059:	int3   
  40805a:	int3   
  40805b:	int3   
  40805c:	int3   
  40805d:	int3   
  40805e:	int3   
  40805f:	int3   
  408060:	push   0xffffffff
  408062:	push   0x42af19
  408067:	mov    eax,fs:0x0
  40806d:	push   eax
  40806e:	sub    esp,0x14
  408071:	push   esi
  408072:	push   edi
  408073:	mov    eax,ds:0x43e020
  408078:	xor    eax,esp
  40807a:	push   eax
  40807b:	lea    eax,[esp+0x20]
  40807f:	mov    fs:0x0,eax
  408085:	mov    edi,ecx
  408087:	push   0x0
  408089:	lea    ecx,[esp+0x14]
  40808d:	call   DWORD PTR ds:0x430188
  408093:	mov    DWORD PTR [esp+0x28],0x0
  40809b:	mov    eax,ds:0x4400dc
  4080a0:	mov    ecx,DWORD PTR ds:0x4301b4
  4080a6:	mov    DWORD PTR [esp+0xc],eax
  4080aa:	call   DWORD PTR ds:0x430198
  4080b0:	push   eax
  4080b1:	mov    ecx,edi
  4080b3:	call   DWORD PTR ds:0x430194
  4080b9:	mov    esi,eax
  4080bb:	test   esi,esi
  4080bd:	jne    0x408116
  4080bf:	mov    esi,DWORD PTR [esp+0xc]
  4080c3:	test   esi,esi
  4080c5:	jne    0x408116
  4080c7:	lea    ecx,[esp+0xc]
  4080cb:	push   edi
  4080cc:	push   ecx
  4080cd:	call   DWORD PTR ds:0x4301b0
  4080d3:	add    esp,0x8
  4080d6:	cmp    eax,0xffffffff
  4080d9:	jne    0x4080f9
  4080db:	push   0x43131c
  4080e0:	lea    ecx,[esp+0x18]
  4080e4:	call   DWORD PTR ds:0x430360
  4080ea:	push   0x4359b0
  4080ef:	lea    edx,[esp+0x18]
  4080f3:	push   edx
  4080f4:	call   0x429e76
  4080f9:	mov    ecx,DWORD PTR [esp+0xc]
  4080fd:	mov    esi,ecx
  4080ff:	mov    DWORD PTR ds:0x4400dc,ecx
  408105:	mov    edi,ecx
  408107:	call   DWORD PTR ds:0x430190
  40810d:	push   edi
  40810e:	call   0x424fe5
  408113:	add    esp,0x4
  408116:	lea    ecx,[esp+0x10]
  40811a:	mov    DWORD PTR [esp+0x28],0xffffffff
  408122:	call   DWORD PTR ds:0x430184
  408128:	mov    eax,esi
  40812a:	mov    ecx,DWORD PTR [esp+0x20]
  40812e:	mov    DWORD PTR fs:0x0,ecx
  408135:	pop    ecx
  408136:	pop    edi
  408137:	pop    esi
  408138:	add    esp,0x20
  40813b:	ret    
  40813c:	int3   
  40813d:	int3   
  40813e:	int3   
  40813f:	int3   
  408140:	mov    DWORD PTR [ecx],0x43149c
  408146:	jmp    DWORD PTR ds:0x430364
  40814c:	int3   
  40814d:	int3   
  40814e:	int3   
  40814f:	int3   
  408150:	push   esi
  408151:	mov    esi,ecx
  408153:	mov    DWORD PTR [esi],0x43149c
  408159:	call   DWORD PTR ds:0x430364
  40815f:	test   BYTE PTR [esp+0x8],0x1
  408164:	je     0x40816f
  408166:	push   esi
  408167:	call   0x42504a
  40816c:	add    esp,0x4
  40816f:	mov    eax,esi
  408171:	pop    esi
  408172:	ret    0x4
  408175:	int3   
  408176:	int3   
  408177:	int3   
  408178:	int3   
  408179:	int3   
  40817a:	int3   
  40817b:	int3   
  40817c:	int3   
  40817d:	int3   
  40817e:	int3   
  40817f:	int3   
  408180:	mov    eax,0x431328
  408185:	ret    
  408186:	int3   
  408187:	int3   
  408188:	int3   
  408189:	int3   
  40818a:	int3   
  40818b:	int3   
  40818c:	int3   
  40818d:	int3   
  40818e:	int3   
  40818f:	int3   
  408190:	sub    esp,0x4c
  408193:	push   ebx
  408194:	push   ebp
  408195:	push   esi
  408196:	push   edi
  408197:	mov    edi,eax
  408199:	lea    eax,[esp+0x18]
  40819d:	push   eax
  40819e:	call   DWORD PTR ds:0x4300b4
  4081a4:	mov    eax,DWORD PTR [esp+0x18]
  4081a8:	mov    ecx,DWORD PTR [esp+0x1c]
  4081ac:	push   0x0
  4081ae:	add    eax,0x2ac18000
  4081b3:	push   0xa
  4081b5:	adc    ecx,0xfe624e21
  4081bb:	push   ecx
  4081bc:	push   eax
  4081bd:	call   0x429fb0
  4081c2:	push   0x0
  4081c4:	push   0xf4240
  4081c9:	push   edx
  4081ca:	push   eax
  4081cb:	call   0x42a0d0
  4081d0:	mov    ebp,ecx
  4081d2:	lea    ecx,[esp+0x34]
  4081d6:	mov    DWORD PTR [esp+0x24],edx
  4081da:	push   ecx
  4081db:	lea    edx,[esp+0x24]
  4081df:	push   edx
  4081e0:	mov    DWORD PTR [esp+0x34],ebx
  4081e4:	mov    DWORD PTR [esp+0x28],eax
  4081e8:	call   0x408740
  4081ed:	mov    esi,eax
  4081ef:	movzx  eax,WORD PTR [esi+0xc]
  4081f3:	add    esp,0x4
  4081f6:	mov    edx,0x1
  4081fb:	mov    ecx,esp
  4081fd:	mov    WORD PTR [ecx],dx
  408200:	movzx  edx,ax
  408203:	inc    edx
  408204:	cmp    edx,0x2
  408207:	jge    0x40820e
  408209:	call   0x4096b0
  40820e:	cmp    ax,0x1f
  408212:	jbe    0x408219
  408214:	call   0x4096b0
  408219:	mov    WORD PTR [ecx],ax
  40821c:	mov    ax,WORD PTR [esi+0x10]
  408220:	inc    ax
  408222:	push   ecx
  408223:	movzx  eax,ax
  408226:	mov    edx,0x1
  40822b:	mov    ecx,esp
  40822d:	mov    WORD PTR [ecx],dx
  408230:	movzx  edx,ax
  408233:	inc    edx
  408234:	cmp    edx,0x2
  408237:	jge    0x40823e
  408239:	call   0x409c00
  40823e:	cmp    ax,0xc
  408242:	jbe    0x408249
  408244:	call   0x409c00
  408249:	mov    WORD PTR [ecx],ax
  40824c:	mov    eax,0x76c
  408251:	add    ax,WORD PTR [esi+0x14]
  408255:	push   ecx
  408256:	movzx  eax,ax
  408259:	mov    edx,0x578
  40825e:	mov    ecx,esp
  408260:	mov    WORD PTR [ecx],dx
  408263:	movzx  edx,ax
  408266:	inc    edx
  408267:	cmp    edx,0x579
  40826d:	jge    0x408274
  40826f:	call   0x40a1a0
  408274:	mov    edx,0x2710
  408279:	cmp    ax,dx
  40827c:	jbe    0x408283
  40827e:	call   0x40a1a0
  408283:	lea    ebx,[esp+0x20]
  408287:	mov    WORD PTR [ecx],ax
  40828a:	call   0x4090b0
  40828f:	mov    eax,DWORD PTR [esi+0x4]
  408292:	mov    ecx,DWORD PTR [esi]
  408294:	push   0x0
  408296:	push   ebp
  408297:	push   eax
  408298:	mov    eax,DWORD PTR [esi+0x8]
  40829b:	call   0x408bf0
  4082a0:	mov    ecx,DWORD PTR [esp+0x20]
  4082a4:	mov    DWORD PTR [esp+0x34],eax
  4082a8:	mov    DWORD PTR [esp+0x20],ecx
  4082ac:	add    esp,0xc
  4082af:	lea    eax,[esp+0x28]
  4082b3:	lea    ecx,[esp+0x14]
  4082b7:	mov    DWORD PTR [esp+0x2c],edx
  4082bb:	call   0x408e50
  4082c0:	mov    eax,edi
  4082c2:	pop    edi
  4082c3:	pop    esi
  4082c4:	pop    ebp
  4082c5:	pop    ebx
  4082c6:	add    esp,0x4c
  4082c9:	ret    
  4082ca:	int3   
  4082cb:	int3   
  4082cc:	int3   
  4082cd:	int3   
  4082ce:	int3   
  4082cf:	int3   
  4082d0:	push   0xffffffff
  4082d2:	push   0x42cad3
  4082d7:	mov    eax,fs:0x0
  4082dd:	push   eax
  4082de:	push   esi
  4082df:	push   edi
  4082e0:	mov    eax,ds:0x43e020
  4082e5:	xor    eax,esp
  4082e7:	push   eax
  4082e8:	lea    eax,[esp+0xc]
  4082ec:	mov    fs:0x0,eax
  4082f2:	mov    esi,DWORD PTR [esp+0x1c]
  4082f6:	push   ebx
  4082f7:	mov    ecx,esi
  4082f9:	call   0x408640
  4082fe:	xor    eax,eax
  408300:	mov    DWORD PTR [esp+0x14],eax
  408304:	mov    DWORD PTR [esi+0x3c],0x430bd8
  40830b:	mov    BYTE PTR [esp+0x14],0x1
  408310:	lea    edi,[esi+0x28]
  408313:	mov    DWORD PTR [esi],0x4314ec
  408319:	mov    DWORD PTR [edi],0x4314f8
  40831f:	mov    DWORD PTR [esi+0x3c],0x431500
  408326:	cmp    ebx,eax
  408328:	je     0x40832d
  40832a:	lea    eax,[ebx+0x28]
  40832d:	push   eax
  40832e:	call   0x402b50
  408333:	add    esp,0x4
  408336:	mov    eax,esi
  408338:	mov    ecx,DWORD PTR [esp+0xc]
  40833c:	mov    DWORD PTR fs:0x0,ecx
  408343:	pop    ecx
  408344:	pop    edi
  408345:	pop    esi
  408346:	add    esp,0xc
  408349:	ret    0x4
  40834c:	int3   
  40834d:	int3   
  40834e:	int3   
  40834f:	int3   
  408350:	push   ecx
  408351:	push   esi
  408352:	mov    DWORD PTR [esp+0x4],0x0
  40835a:	call   0x4082d0
  40835f:	mov    eax,esi
  408361:	pop    ecx
  408362:	ret    
  408363:	int3   
  408364:	int3   
  408365:	int3   
  408366:	int3   
  408367:	int3   
  408368:	int3   
  408369:	int3   
  40836a:	int3   
  40836b:	int3   
  40836c:	int3   
  40836d:	int3   
  40836e:	int3   
  40836f:	int3   
  408370:	push   ecx
  408371:	push   edi
  408372:	xor    edi,edi
  408374:	push   eax
  408375:	mov    ecx,esi
  408377:	mov    DWORD PTR [esp+0x8],edi
  40837b:	call   0x4043b0
  408380:	mov    DWORD PTR [esi+0x28],0x430bd0
  408387:	mov    DWORD PTR [esi+0x2c],edi
  40838a:	mov    DWORD PTR [esi+0x30],edi
  40838d:	mov    DWORD PTR [esi+0x34],edi
  408390:	mov    DWORD PTR [esi+0x38],0xffffffff
  408397:	mov    DWORD PTR [esi],0x4314d8
  40839d:	mov    DWORD PTR [esi+0x28],0x4314e4
  4083a4:	mov    eax,esi
  4083a6:	pop    edi
  4083a7:	pop    ecx
  4083a8:	ret    
  4083a9:	int3   
  4083aa:	int3   
  4083ab:	int3   
  4083ac:	int3   
  4083ad:	int3   
  4083ae:	int3   
  4083af:	int3   
  4083b0:	push   esi
  4083b1:	mov    esi,ecx
  4083b3:	mov    DWORD PTR [esi+0x3c],0x430bd8
  4083ba:	mov    DWORD PTR [esi],0x4314d8
  4083c0:	mov    DWORD PTR [esi+0x28],0x4314e4
  4083c7:	mov    DWORD PTR [esi+0x28],0x430bd0
  4083ce:	mov    ecx,DWORD PTR [esi+0x2c]
  4083d1:	test   ecx,ecx
  4083d3:	je     0x4083e7
  4083d5:	mov    eax,DWORD PTR [ecx]
  4083d7:	mov    edx,DWORD PTR [eax+0x10]
  4083da:	call   edx
  4083dc:	test   al,al
  4083de:	je     0x4083e7
  4083e0:	mov    DWORD PTR [esi+0x2c],0x0
  4083e7:	lea    ecx,[esi+0xc]
  4083ea:	mov    DWORD PTR [esi],0x430530
  4083f0:	call   DWORD PTR ds:0x43025c
  4083f6:	mov    ecx,esi
  4083f8:	pop    esi
  4083f9:	jmp    DWORD PTR ds:0x4303a8
  4083ff:	int3   
  408400:	mov    DWORD PTR [esi],0x4314d8
  408406:	mov    DWORD PTR [esi+0x28],0x4314e4
  40840d:	mov    DWORD PTR [esi+0x28],0x430bd0
  408414:	mov    ecx,DWORD PTR [esi+0x2c]
  408417:	test   ecx,ecx
  408419:	je     0x40842d
  40841b:	mov    eax,DWORD PTR [ecx]
  40841d:	mov    edx,DWORD PTR [eax+0x10]
  408420:	call   edx
  408422:	test   al,al
  408424:	je     0x40842d
  408426:	mov    DWORD PTR [esi+0x2c],0x0
  40842d:	lea    ecx,[esi+0xc]
  408430:	mov    DWORD PTR [esi],0x430530
  408436:	call   DWORD PTR ds:0x43025c
  40843c:	mov    ecx,esi
  40843e:	jmp    DWORD PTR ds:0x4303a8
  408444:	int3   
  408445:	int3   
  408446:	int3   
  408447:	int3   
  408448:	int3   
  408449:	int3   
  40844a:	int3   
  40844b:	int3   
  40844c:	int3   
  40844d:	int3   
  40844e:	int3   
  40844f:	int3   
  408450:	sub    ecx,0x28
  408453:	jmp    0x408520
  408458:	int3   
  408459:	int3   
  40845a:	int3   
  40845b:	int3   
  40845c:	int3   
  40845d:	int3   
  40845e:	int3   
  40845f:	int3   
  408460:	push   0xffffffff
  408462:	push   0x42defb
  408467:	mov    eax,fs:0x0
  40846d:	push   eax
  40846e:	push   ecx
  40846f:	push   esi
  408470:	push   edi
  408471:	mov    eax,ds:0x43e020
  408476:	xor    eax,esp
  408478:	push   eax
  408479:	lea    eax,[esp+0x10]
  40847d:	mov    fs:0x0,eax
  408483:	mov    edi,ecx
  408485:	push   0x40
  408487:	call   0x425050
  40848c:	mov    esi,eax
  40848e:	add    esp,0x4
  408491:	mov    DWORD PTR [esp+0xc],esi
  408495:	xor    eax,eax
  408497:	mov    DWORD PTR [esp+0x18],eax
  40849b:	cmp    esi,eax
  40849d:	je     0x4084c6
  40849f:	lea    eax,[edi-0x3c]
  4084a2:	push   eax
  4084a3:	mov    ecx,esi
  4084a5:	call   0x408640
  4084aa:	lea    eax,[esi+0x3c]
  4084ad:	mov    DWORD PTR [eax],0x430bd8
  4084b3:	mov    DWORD PTR [esi],0x4314ec
  4084b9:	mov    DWORD PTR [esi+0x28],0x4314f8
  4084c0:	mov    DWORD PTR [eax],0x431500
  4084c6:	mov    ecx,DWORD PTR [esp+0x10]
  4084ca:	mov    DWORD PTR fs:0x0,ecx
  4084d1:	pop    ecx
  4084d2:	pop    edi
  4084d3:	pop    esi
  4084d4:	add    esp,0x10
  4084d7:	ret    
  4084d8:	int3   
  4084d9:	int3   
  4084da:	int3   
  4084db:	int3   
  4084dc:	int3   
  4084dd:	int3   
  4084de:	int3   
  4084df:	int3   
  4084e0:	push   ebp
  4084e1:	mov    ebp,esp
  4084e3:	and    esp,0xfffffff8
  4084e6:	sub    esp,0x40
  4084e9:	lea    eax,[ecx-0x3c]
  4084ec:	push   eax
  4084ed:	lea    ecx,[esp+0x4]
  4084f1:	call   0x408640
  4084f6:	push   0x435a14
  4084fb:	lea    eax,[esp+0x4]
  4084ff:	push   eax
  408500:	mov    DWORD PTR [esp+0x8],0x4314ec
  408508:	mov    DWORD PTR [esp+0x30],0x4314f8
  408510:	mov    DWORD PTR [esp+0x44],0x431500
  408518:	call   0x429e76
  40851d:	int3   
  40851e:	int3   
  40851f:	int3   
  408520:	push   esi
  408521:	mov    esi,ecx
  408523:	mov    DWORD PTR [esi+0x3c],0x430bd8
  40852a:	mov    DWORD PTR [esi],0x4314d8
  408530:	mov    DWORD PTR [esi+0x28],0x4314e4
  408537:	mov    DWORD PTR [esi+0x28],0x430bd0
  40853e:	mov    ecx,DWORD PTR [esi+0x2c]
  408541:	test   ecx,ecx
  408543:	je     0x408557
  408545:	mov    eax,DWORD PTR [ecx]
  408547:	mov    edx,DWORD PTR [eax+0x10]
  40854a:	call   edx
  40854c:	test   al,al
  40854e:	je     0x408557
  408550:	mov    DWORD PTR [esi+0x2c],0x0
  408557:	lea    ecx,[esi+0xc]
  40855a:	mov    DWORD PTR [esi],0x430530
  408560:	call   DWORD PTR ds:0x43025c
  408566:	mov    ecx,esi
  408568:	call   DWORD PTR ds:0x4303a8
  40856e:	test   BYTE PTR [esp+0x8],0x1
  408573:	je     0x40857e
  408575:	push   esi
  408576:	call   0x42504a
  40857b:	add    esp,0x4
  40857e:	mov    eax,esi
  408580:	pop    esi
  408581:	ret    0x4
  408584:	int3   
  408585:	int3   
  408586:	int3   
  408587:	int3   
  408588:	int3   
  408589:	int3   
  40858a:	int3   
  40858b:	int3   
  40858c:	int3   
  40858d:	int3   
  40858e:	int3   
  40858f:	int3   
  408590:	sub    ecx,0x3c
  408593:	jmp    0x408520
  408598:	int3   
  408599:	int3   
  40859a:	int3   
  40859b:	int3   
  40859c:	int3   
  40859d:	int3   
  40859e:	int3   
  40859f:	int3   
  4085a0:	mov    eax,DWORD PTR [esp+0x4]
  4085a4:	push   esi
  4085a5:	push   eax
  4085a6:	mov    esi,ecx
  4085a8:	call   0x408640
  4085ad:	mov    DWORD PTR [esi+0x3c],0x430bd8
  4085b4:	mov    DWORD PTR [esi],0x4314ec
  4085ba:	mov    DWORD PTR [esi+0x28],0x4314f8
  4085c1:	mov    DWORD PTR [esi+0x3c],0x431500
  4085c8:	mov    eax,esi
  4085ca:	pop    esi
  4085cb:	ret    0x4
  4085ce:	int3   
  4085cf:	int3   
  4085d0:	push   esi
  4085d1:	mov    esi,ecx
  4085d3:	mov    DWORD PTR [esi],0x4314d8
  4085d9:	mov    DWORD PTR [esi+0x28],0x4314e4
  4085e0:	mov    DWORD PTR [esi+0x28],0x430bd0
  4085e7:	mov    ecx,DWORD PTR [esi+0x2c]
  4085ea:	test   ecx,ecx
  4085ec:	je     0x408600
  4085ee:	mov    eax,DWORD PTR [ecx]
  4085f0:	mov    edx,DWORD PTR [eax+0x10]
  4085f3:	call   edx
  4085f5:	test   al,al
  4085f7:	je     0x408600
  4085f9:	mov    DWORD PTR [esi+0x2c],0x0
  408600:	lea    ecx,[esi+0xc]
  408603:	mov    DWORD PTR [esi],0x430530
  408609:	call   DWORD PTR ds:0x43025c
  40860f:	mov    ecx,esi
  408611:	call   DWORD PTR ds:0x4303a8
  408617:	test   BYTE PTR [esp+0x8],0x1
  40861c:	je     0x408627
  40861e:	push   esi
  40861f:	call   0x42504a
  408624:	add    esp,0x4
  408627:	mov    eax,esi
  408629:	pop    esi
  40862a:	ret    0x4
  40862d:	int3   
  40862e:	int3   
  40862f:	int3   
  408630:	sub    ecx,0x28
  408633:	jmp    0x4085d0
  408638:	int3   
  408639:	int3   
  40863a:	int3   
  40863b:	int3   
  40863c:	int3   
  40863d:	int3   
  40863e:	int3   
  40863f:	int3   
  408640:	push   0xffffffff
  408642:	push   0x42ca98
  408647:	mov    eax,fs:0x0
  40864d:	push   eax
  40864e:	push   ecx
  40864f:	push   esi
  408650:	push   edi
  408651:	mov    eax,ds:0x43e020
  408656:	xor    eax,esp
  408658:	push   eax
  408659:	lea    eax,[esp+0x10]
  40865d:	mov    fs:0x0,eax
  408663:	mov    esi,ecx
  408665:	mov    DWORD PTR [esp+0xc],esi
  408669:	mov    edi,DWORD PTR [esp+0x20]
  40866d:	push   edi
  40866e:	call   0x4043b0
  408673:	mov    DWORD PTR [esp+0x18],0x0
  40867b:	test   edi,edi
  40867d:	je     0x408684
  40867f:	add    edi,0x28
  408682:	jmp    0x408686
  408684:	xor    edi,edi
  408686:	mov    DWORD PTR [esi+0x28],0x430bd0
  40868d:	mov    ecx,DWORD PTR [edi+0x4]
  408690:	mov    DWORD PTR [esi+0x2c],ecx
  408693:	test   ecx,ecx
  408695:	je     0x40869e
  408697:	mov    eax,DWORD PTR [ecx]
  408699:	mov    edx,DWORD PTR [eax+0xc]
  40869c:	call   edx
  40869e:	mov    eax,DWORD PTR [edi+0x8]
  4086a1:	mov    DWORD PTR [esi+0x30],eax
  4086a4:	mov    ecx,DWORD PTR [edi+0xc]
  4086a7:	mov    DWORD PTR [esi+0x34],ecx
  4086aa:	mov    edx,DWORD PTR [edi+0x10]
  4086ad:	mov    DWORD PTR [esi+0x38],edx
  4086b0:	mov    DWORD PTR [esi],0x4314d8
  4086b6:	mov    DWORD PTR [esi+0x28],0x4314e4
  4086bd:	mov    eax,esi
  4086bf:	mov    ecx,DWORD PTR [esp+0x10]
  4086c3:	mov    DWORD PTR fs:0x0,ecx
  4086ca:	pop    ecx
  4086cb:	pop    edi
  4086cc:	pop    esi
  4086cd:	add    esp,0x10
  4086d0:	ret    0x4
  4086d3:	int3   
  4086d4:	int3   
  4086d5:	int3   
  4086d6:	int3   
  4086d7:	int3   
  4086d8:	int3   
  4086d9:	int3   
  4086da:	int3   
  4086db:	int3   
  4086dc:	int3   
  4086dd:	int3   
  4086de:	int3   
  4086df:	int3   
  4086e0:	push   0xffffffff
  4086e2:	push   0x42ddab
  4086e7:	mov    eax,fs:0x0
  4086ed:	push   eax
  4086ee:	sub    esp,0x80
  4086f4:	push   ebx
  4086f5:	push   esi
  4086f6:	mov    eax,ds:0x43e020
  4086fb:	xor    eax,esp
  4086fd:	push   eax
  4086fe:	lea    eax,[esp+0x8c]
  408705:	mov    fs:0x0,eax
  40870b:	mov    eax,DWORD PTR [esp+0x9c]
  408712:	lea    esi,[esp+0xc]
  408716:	call   0x408370
  40871b:	mov    ebx,eax
  40871d:	lea    esi,[esp+0x48]
  408721:	mov    DWORD PTR [esp+0x94],0x0
  40872c:	call   0x408350
  408731:	push   0x435a14
  408736:	mov    eax,esi
  408738:	push   eax
  408739:	call   0x429e76
  40873e:	int3   
  40873f:	int3   
  408740:	push   ebp
  408741:	mov    ebp,esp
  408743:	and    esp,0xfffffff8
  408746:	push   0xffffffff
  408748:	push   0x42e3c1
  40874d:	mov    eax,fs:0x0
  408753:	push   eax
  408754:	sub    esp,0x4c
  408757:	mov    eax,ds:0x43e020
  40875c:	xor    eax,esp
  40875e:	push   eax
  40875f:	lea    eax,[esp+0x50]
  408763:	mov    fs:0x0,eax
  408769:	mov    eax,DWORD PTR [ebp+0x8]
  40876c:	push   eax
  40876d:	call   DWORD PTR ds:0x4302d0
  408773:	add    esp,0x4
  408776:	test   eax,eax
  408778:	jne    0x4087aa
  40877a:	push   0x431384
  40877f:	lea    ecx,[esp+0xc]
  408783:	call   DWORD PTR ds:0x43011c
  408789:	lea    ecx,[esp+0x8]
  40878d:	push   ecx
  40878e:	lea    ecx,[esp+0x28]
  408792:	mov    DWORD PTR [esp+0x5c],0x0
  40879a:	call   0x404350
  40879f:	push   eax
  4087a0:	mov    BYTE PTR [esp+0x5c],0x1
  4087a5:	call   0x4086e0
  4087aa:	mov    ecx,DWORD PTR [esp+0x50]
  4087ae:	mov    DWORD PTR fs:0x0,ecx
  4087b5:	pop    ecx
  4087b6:	mov    esp,ebp
  4087b8:	pop    ebp
  4087b9:	ret    
  4087ba:	int3   
  4087bb:	int3   
  4087bc:	int3   
  4087bd:	int3   
  4087be:	int3   
  4087bf:	int3   
  4087c0:	mov    ecx,DWORD PTR [eax]
  4087c2:	sub    esp,0x20
  4087c5:	push   esi
  4087c6:	mov    esi,DWORD PTR [eax+0x4]
  4087c9:	test   ecx,ecx
  4087cb:	jne    0x4087d5
  4087cd:	cmp    esi,0x80000000
  4087d3:	je     0x40884a
  4087d5:	cmp    ecx,0xffffffff
  4087d8:	jne    0x4087e2
  4087da:	cmp    esi,0x7fffffff
  4087e0:	je     0x40884a
  4087e2:	cmp    ecx,0xfffffffe
  4087e5:	jne    0x4087ef
  4087e7:	cmp    esi,0x7fffffff
  4087ed:	je     0x40884a
  4087ef:	mov    ecx,DWORD PTR [edx]
  4087f1:	mov    esi,DWORD PTR [edx+0x4]
  4087f4:	test   ecx,ecx
  4087f6:	jne    0x408800
  4087f8:	cmp    esi,0x80000000
  4087fe:	je     0x40884a
  408800:	cmp    ecx,0xffffffff
  408803:	jne    0x40880d
  408805:	cmp    esi,0x7fffffff
  40880b:	je     0x40884a
  40880d:	cmp    ecx,0xfffffffe
  408810:	jne    0x40881a
  408812:	cmp    esi,0x7fffffff
  408818:	je     0x40884a
  40881a:	mov    ecx,DWORD PTR [eax]
  40881c:	mov    esi,DWORD PTR [edx]
  40881e:	mov    eax,DWORD PTR [eax+0x4]
  408821:	mov    edx,DWORD PTR [edx+0x4]
  408824:	sub    ecx,esi
  408826:	sbb    eax,edx
  408828:	js     0x408830
  40882a:	jg     0x40883e
  40882c:	test   ecx,ecx
  40882e:	jae    0x40883e
  408830:	neg    ecx
  408832:	adc    eax,0x0
  408835:	neg    eax
  408837:	neg    ecx
  408839:	adc    eax,0x0
  40883c:	neg    eax
  40883e:	mov    DWORD PTR [edi+0x4],eax
  408841:	mov    DWORD PTR [edi],ecx
  408843:	mov    eax,edi
  408845:	pop    esi
  408846:	add    esp,0x20
  408849:	ret    
  40884a:	mov    ecx,DWORD PTR [edx]
  40884c:	mov    edx,DWORD PTR [edx+0x4]
  40884f:	mov    DWORD PTR [esp+0x14],edx
  408853:	mov    edx,DWORD PTR [eax+0x4]
  408856:	mov    DWORD PTR [esp+0x10],ecx
  40885a:	mov    ecx,DWORD PTR [eax]
  40885c:	lea    eax,[esp+0x8]
  408860:	mov    DWORD PTR [esp+0xc],edx
  408864:	push   eax
  408865:	lea    edx,[esp+0x14]
  408869:	lea    esi,[esp+0x1c]
  40886d:	mov    DWORD PTR [esp+0xc],ecx
  408871:	call   0x408a90
  408876:	mov    ecx,DWORD PTR [eax]
  408878:	mov    eax,DWORD PTR [eax+0x4]
  40887b:	cmp    ecx,0xfffffffe
  40887e:	jne    0x408897
  408880:	cmp    eax,0x7fffffff
  408885:	jne    0x408897
  408887:	xor    ecx,ecx
  408889:	mov    eax,edi
  40888b:	call   0x408f00
  408890:	mov    eax,edi
  408892:	pop    esi
  408893:	add    esp,0x20
  408896:	ret    
  408897:	test   ecx,ecx
  408899:	jne    0x4088b5
  40889b:	cmp    eax,0x80000000
  4088a0:	jne    0x4088b5
  4088a2:	mov    ecx,0x1
  4088a7:	mov    eax,edi
  4088a9:	call   0x408f00
  4088ae:	mov    eax,edi
  4088b0:	pop    esi
  4088b1:	add    esp,0x20
  4088b4:	ret    
  4088b5:	cmp    ecx,0xffffffff
  4088b8:	jne    0x4088c6
  4088ba:	mov    ecx,0x2
  4088bf:	cmp    eax,0x7fffffff
  4088c4:	je     0x4088cb
  4088c6:	mov    ecx,0x5
  4088cb:	mov    eax,edi
  4088cd:	call   0x408f00
  4088d2:	mov    eax,edi
  4088d4:	pop    esi
  4088d5:	add    esp,0x20
  4088d8:	ret    
  4088d9:	int3   
  4088da:	int3   
  4088db:	int3   
  4088dc:	int3   
  4088dd:	int3   
  4088de:	int3   
  4088df:	int3   
  4088e0:	push   0xffffffff
  4088e2:	push   0x42ec78
  4088e7:	mov    eax,fs:0x0
  4088ed:	push   eax
  4088ee:	sub    esp,0x24
  4088f1:	push   ebp
  4088f2:	push   esi
  4088f3:	push   edi
  4088f4:	mov    eax,ds:0x43e020
  4088f9:	xor    eax,esp
  4088fb:	push   eax
  4088fc:	lea    eax,[esp+0x34]
  408900:	mov    fs:0x0,eax
  408906:	mov    ebp,DWORD PTR [esp+0x44]
  40890a:	lea    ebx,[ebx+0x0]
  408910:	mov    esi,DWORD PTR [ebp+0x0]
  408913:	mov    eax,esi
  408915:	test   esi,0x4007ff
  40891b:	jne    0x408924
  40891d:	or     eax,0x400000
  408922:	jmp    0x408947
  408924:	and    eax,0xff000000
  408929:	add    eax,0x1000000
  40892e:	xor    eax,esi
  408930:	and    eax,0x7f000000
  408935:	xor    eax,esi
  408937:	test   eax,0x7f000000
  40893c:	je     0x4089f1
  408942:	or     eax,0x80000000
  408947:	mov    ecx,eax
  408949:	mov    edx,ebp
  40894b:	mov    eax,esi
  40894d:	lock cmpxchg DWORD PTR [edx],ecx
  408951:	cmp    eax,esi
  408953:	je     0x408959
  408955:	mov    esi,eax
  408957:	jmp    0x408913
  408959:	test   esi,0x4007ff
  40895f:	je     0x408a16
  408965:	cmp    DWORD PTR [ebx],0xffffffff
  408968:	jne    0x408978
  40896a:	cmp    DWORD PTR [ebx+0x4],0x7fffffff
  408971:	jne    0x408978
  408973:	or     eax,0xffffffff
  408976:	jmp    0x4089c2
  408978:	lea    eax,[esp+0x14]
  40897c:	call   0x408190
  408981:	mov    eax,DWORD PTR [ebx+0x4]
  408984:	mov    edx,DWORD PTR [esp+0x18]
  408988:	cmp    edx,eax
  40898a:	mov    ecx,DWORD PTR [ebx]
  40898c:	jl     0x40899c
  40898e:	jg     0x408998
  408990:	mov    eax,DWORD PTR [esp+0x14]
  408994:	cmp    eax,ecx
  408996:	jb     0x40899c
  408998:	xor    eax,eax
  40899a:	jmp    0x4089c2
  40899c:	lea    edx,[esp+0x14]
  4089a0:	mov    eax,ebx
  4089a2:	lea    edi,[esp+0x1c]
  4089a6:	call   0x4087c0
  4089ab:	mov    ecx,DWORD PTR [esp+0x20]
  4089af:	mov    edx,DWORD PTR [esp+0x1c]
  4089b3:	push   0x0
  4089b5:	push   0x3e8
  4089ba:	push   ecx
  4089bb:	push   edx
  4089bc:	call   0x429e80
  4089c1:	inc    eax
  4089c2:	push   eax
  4089c3:	push   0x1
  4089c5:	lea    eax,[ebp+0x4]
  4089c8:	push   eax
  4089c9:	push   0x2
  4089cb:	call   DWORD PTR ds:0x430090
  4089d1:	cmp    eax,0x102
  4089d6:	jne    0x408910
  4089dc:	lea    esp,[esp+0x0]
  4089e0:	mov    eax,esi
  4089e2:	test   esi,0x4007ff
  4089e8:	jne    0x408a2d
  4089ea:	or     eax,0x400000
  4089ef:	jmp    0x408a52
  4089f1:	lea    ecx,[esp+0x1c]
  4089f5:	call   DWORD PTR ds:0x4303ac
  4089fb:	xor    eax,eax
  4089fd:	mov    DWORD PTR [esp+0x28],eax
  408a01:	mov    DWORD PTR [esp+0x1c],0x4314a8
  408a09:	lea    edi,[esp+0x1c]
  408a0d:	mov    DWORD PTR [esp+0x3c],eax
  408a11:	call   0x40a630
  408a16:	mov    al,0x1
  408a18:	mov    ecx,DWORD PTR [esp+0x34]
  408a1c:	mov    DWORD PTR fs:0x0,ecx
  408a23:	pop    ecx
  408a24:	pop    edi
  408a25:	pop    esi
  408a26:	pop    ebp
  408a27:	add    esp,0x30
  408a2a:	ret    0x4
  408a2d:	mov    ecx,esi
  408a2f:	shr    ecx,0x18
  408a32:	test   cl,0x7f
  408a35:	je     0x408a52
  408a37:	lea    eax,[ecx-0x1]
  408a3a:	shl    eax,0x18
  408a3d:	xor    eax,esi
  408a3f:	and    eax,0x7f000000
  408a44:	xor    eax,esi
  408a46:	test   eax,0x7f000000
  408a4b:	jne    0x408a52
  408a4d:	and    eax,0x7fffffff
  408a52:	mov    ecx,eax
  408a54:	mov    edx,ebp
  408a56:	mov    eax,esi
  408a58:	lock cmpxchg DWORD PTR [edx],ecx
  408a5c:	cmp    eax,esi
  408a5e:	je     0x408a67
  408a60:	mov    esi,eax
  408a62:	jmp    0x4089e0
  408a67:	test   esi,0x4007ff
  408a6d:	je     0x408a16
  408a6f:	xor    al,al
  408a71:	mov    ecx,DWORD PTR [esp+0x34]
  408a75:	mov    DWORD PTR fs:0x0,ecx
  408a7c:	pop    ecx
  408a7d:	pop    edi
  408a7e:	pop    esi
  408a7f:	pop    ebp
  408a80:	add    esp,0x30
  408a83:	ret    0x4
  408a86:	int3   
  408a87:	int3   
  408a88:	int3   
  408a89:	int3   
  408a8a:	int3   
  408a8b:	int3   
  408a8c:	int3   
  408a8d:	int3   
  408a8e:	int3   
  408a8f:	int3   
  408a90:	sub    esp,0xc
  408a93:	mov    ecx,DWORD PTR [esp+0x10]
  408a97:	mov    eax,DWORD PTR [ecx+0x4]
  408a9a:	push   ebx
  408a9b:	mov    ebx,DWORD PTR [ecx]
  408a9d:	push   ebp
  408a9e:	push   edi
  408a9f:	mov    DWORD PTR [esp+0x14],eax
  408aa3:	test   ebx,ebx
  408aa5:	jne    0x408aae
  408aa7:	cmp    eax,0x80000000
  408aac:	je     0x408afd
  408aae:	cmp    ebx,0xffffffff
  408ab1:	jne    0x408aba
  408ab3:	cmp    eax,0x7fffffff
  408ab8:	je     0x408afd
  408aba:	cmp    ebx,0xfffffffe
  408abd:	jne    0x408aca
  408abf:	cmp    eax,0x7fffffff
  408ac4:	je     0x408bd8
  408aca:	mov    edi,DWORD PTR [edx]
  408acc:	mov    ebp,DWORD PTR [edx+0x4]
  408acf:	test   edi,edi
  408ad1:	jne    0x408adb
  408ad3:	cmp    ebp,0x80000000
  408ad9:	je     0x408afd
  408adb:	cmp    edi,0xffffffff
  408ade:	jne    0x408ae8
  408ae0:	cmp    ebp,0x7fffffff
  408ae6:	je     0x408afd
  408ae8:	cmp    edi,0xfffffffe
  408aeb:	jne    0x408bc4
  408af1:	cmp    ebp,0x7fffffff
  408af7:	jne    0x408bc4
  408afd:	cmp    ebx,0xfffffffe
  408b00:	jne    0x408b0d
  408b02:	cmp    eax,0x7fffffff
  408b07:	je     0x408bd8
  408b0d:	mov    edi,DWORD PTR [edx]
  408b0f:	mov    ebp,DWORD PTR [edx+0x4]
  408b12:	cmp    edi,0xfffffffe
  408b15:	jne    0x408b23
  408b17:	cmp    ebp,0x7fffffff
  408b1d:	je     0x408bd8
  408b23:	cmp    ebx,0xffffffff
  408b26:	jne    0x408b3b
  408b28:	cmp    eax,0x7fffffff
  408b2d:	jne    0x408b3b
  408b2f:	cmp    edi,ebx
  408b31:	jne    0x408b3b
  408b33:	cmp    ebp,eax
  408b35:	je     0x408bd8
  408b3b:	test   ebx,ebx
  408b3d:	jne    0x408b52
  408b3f:	cmp    eax,0x80000000
  408b44:	jne    0x408b52
  408b46:	test   edi,edi
  408b48:	jne    0x408b52
  408b4a:	cmp    ebp,eax
  408b4c:	je     0x408bd8
  408b52:	call   0x408d20
  408b57:	test   al,al
  408b59:	je     0x408b74
  408b5b:	mov    eax,DWORD PTR [esp+0x1c]
  408b5f:	mov    ecx,DWORD PTR [eax]
  408b61:	mov    edx,DWORD PTR [eax+0x4]
  408b64:	mov    DWORD PTR [esi],ecx
  408b66:	mov    DWORD PTR [esi+0x4],edx
  408b69:	mov    eax,esi
  408b6b:	pop    edi
  408b6c:	pop    ebp
  408b6d:	pop    ebx
  408b6e:	add    esp,0xc
  408b71:	ret    0x4
  408b74:	push   ebp
  408b75:	push   edi
  408b76:	call   0x408ce0
  408b7b:	add    esp,0x8
  408b7e:	test   al,al
  408b80:	je     0x408b9a
  408b82:	mov    DWORD PTR [esi],0x0
  408b88:	mov    DWORD PTR [esi+0x4],0x80000000
  408b8f:	mov    eax,esi
  408b91:	pop    edi
  408b92:	pop    ebp
  408b93:	pop    ebx
  408b94:	add    esp,0xc
  408b97:	ret    0x4
  408b9a:	push   ebp
  408b9b:	push   edi
  408b9c:	call   0x408d00
  408ba1:	add    esp,0x8
  408ba4:	test   al,al
  408ba6:	je     0x408bc0
  408ba8:	mov    DWORD PTR [esi],0xffffffff
  408bae:	mov    DWORD PTR [esi+0x4],0x7fffffff
  408bb5:	mov    eax,esi
  408bb7:	pop    edi
  408bb8:	pop    ebp
  408bb9:	pop    ebx
  408bba:	add    esp,0xc
  408bbd:	ret    0x4
  408bc0:	mov    eax,DWORD PTR [esp+0x14]
  408bc4:	sub    ebx,edi
  408bc6:	sbb    eax,ebp
  408bc8:	mov    DWORD PTR [esi+0x4],eax
  408bcb:	mov    DWORD PTR [esi],ebx
  408bcd:	mov    eax,esi
  408bcf:	pop    edi
  408bd0:	pop    ebp
  408bd1:	pop    ebx
  408bd2:	add    esp,0xc
  408bd5:	ret    0x4
  408bd8:	pop    edi
  408bd9:	pop    ebp
  408bda:	mov    DWORD PTR [esi],0xfffffffe
  408be0:	mov    DWORD PTR [esi+0x4],0x7fffffff
  408be7:	mov    eax,esi
  408be9:	pop    ebx
  408bea:	add    esp,0xc
  408bed:	ret    0x4
  408bf0:	push   ecx
  408bf1:	push   ebx
  408bf2:	push   ebp
  408bf3:	mov    ebp,DWORD PTR [esp+0x10]
  408bf7:	push   esi
  408bf8:	mov    esi,DWORD PTR [esp+0x1c]
  408bfc:	push   edi
  408bfd:	mov    edi,DWORD PTR [esp+0x1c]
  408c01:	mov    ebx,ecx
  408c03:	test   eax,eax
  408c05:	jl     0x408c66
  408c07:	test   ebp,ebp
  408c09:	jl     0x408c6c
  408c0b:	test   ebx,ebx
  408c0d:	jl     0x408c68
  408c0f:	test   esi,esi
  408c11:	jl     0x408c68
  408c13:	jg     0x408c19
  408c15:	test   edi,edi
  408c17:	jb     0x408c68
  408c19:	push   0x0
  408c1b:	cdq    
  408c1c:	push   0x3c
  408c1e:	push   edx
  408c1f:	push   eax
  408c20:	call   0x429f30
  408c25:	mov    ecx,eax
  408c27:	mov    eax,edx
  408c29:	mov    DWORD PTR [esp+0x10],eax
  408c2d:	mov    eax,ebp
  408c2f:	cdq    
  408c30:	add    ecx,eax
  408c32:	mov    eax,DWORD PTR [esp+0x10]
  408c36:	push   0x0
  408c38:	push   0x3c
  408c3a:	adc    eax,edx
  408c3c:	push   eax
  408c3d:	push   ecx
  408c3e:	call   0x429f30
  408c43:	mov    ecx,eax
  408c45:	mov    ebp,edx
  408c47:	mov    eax,ebx
  408c49:	cdq    
  408c4a:	push   0x0
  408c4c:	add    ecx,eax
  408c4e:	push   0xf4240
  408c53:	adc    ebp,edx
  408c55:	push   ebp
  408c56:	push   ecx
  408c57:	call   0x429f30
  408c5c:	add    eax,edi
  408c5e:	adc    edx,esi
  408c60:	pop    edi
  408c61:	pop    esi
  408c62:	pop    ebp
  408c63:	pop    ebx
  408c64:	pop    ecx
  408c65:	ret    
  408c66:	neg    eax
  408c68:	test   ebp,ebp
  408c6a:	jge    0x408c6e
  408c6c:	neg    ebp
  408c6e:	test   ebx,ebx
  408c70:	jge    0x408c74
  408c72:	neg    ebx
  408c74:	test   esi,esi
  408c76:	jg     0x408c85
  408c78:	jl     0x408c7e
  408c7a:	test   edi,edi
  408c7c:	jae    0x408c85
  408c7e:	neg    edi
  408c80:	adc    esi,0x0
  408c83:	neg    esi
  408c85:	push   0x0
  408c87:	cdq    
  408c88:	push   0x3c
  408c8a:	push   edx
  408c8b:	push   eax
  408c8c:	call   0x429f30
  408c91:	mov    ecx,eax
  408c93:	mov    eax,edx
  408c95:	mov    DWORD PTR [esp+0x10],eax
  408c99:	mov    eax,ebp
  408c9b:	cdq    
  408c9c:	add    ecx,eax
  408c9e:	mov    eax,DWORD PTR [esp+0x10]
  408ca2:	push   0x0
  408ca4:	push   0x3c
  408ca6:	adc    eax,edx
  408ca8:	push   eax
  408ca9:	push   ecx
  408caa:	call   0x429f30
  408caf:	mov    ecx,eax
  408cb1:	mov    ebp,edx
  408cb3:	mov    eax,ebx
  408cb5:	cdq    
  408cb6:	push   0x0
  408cb8:	add    ecx,eax
  408cba:	push   0xf4240
  408cbf:	adc    ebp,edx
  408cc1:	push   ebp
  408cc2:	push   ecx
  408cc3:	call   0x429f30
  408cc8:	neg    edi
  408cca:	adc    esi,0x0
  408ccd:	neg    esi
  408ccf:	sub    edi,eax
  408cd1:	sbb    esi,edx
  408cd3:	mov    eax,edi
  408cd5:	pop    edi
  408cd6:	mov    edx,esi
  408cd8:	pop    esi
  408cd9:	pop    ebp
  408cda:	pop    ebx
  408cdb:	pop    ecx
  408cdc:	ret    
  408cdd:	int3   
  408cde:	int3   
  408cdf:	int3   
  408ce0:	cmp    DWORD PTR [esp+0x4],0xffffffff
  408ce5:	jne    0x408cf7
  408ce7:	cmp    DWORD PTR [esp+0x8],0x7fffffff
  408cef:	jne    0x408cf7
  408cf1:	mov    eax,0x1
  408cf6:	ret    
  408cf7:	xor    eax,eax
  408cf9:	ret    
  408cfa:	int3   
  408cfb:	int3   
  408cfc:	int3   
  408cfd:	int3   
  408cfe:	int3   
  408cff:	int3   
  408d00:	cmp    DWORD PTR [esp+0x4],0x0
  408d05:	jne    0x408d17
  408d07:	cmp    DWORD PTR [esp+0x8],0x80000000
  408d0f:	jne    0x408d17
  408d11:	mov    eax,0x1
  408d16:	ret    
  408d17:	xor    eax,eax
  408d19:	ret    
  408d1a:	int3   
  408d1b:	int3   
  408d1c:	int3   
  408d1d:	int3   
  408d1e:	int3   
  408d1f:	int3   
  408d20:	mov    eax,DWORD PTR [ecx]
  408d22:	mov    ecx,DWORD PTR [ecx+0x4]
  408d25:	test   eax,eax
  408d27:	jne    0x408d31
  408d29:	cmp    ecx,0x80000000
  408d2f:	je     0x408d41
  408d31:	cmp    eax,0xffffffff
  408d34:	jne    0x408d3e
  408d36:	cmp    ecx,0x7fffffff
  408d3c:	je     0x408d41
  408d3e:	xor    eax,eax
  408d40:	ret    
  408d41:	mov    eax,0x1
  408d46:	ret    
  408d47:	int3   
  408d48:	int3   
  408d49:	int3   
  408d4a:	int3   
  408d4b:	int3   
  408d4c:	int3   
  408d4d:	int3   
  408d4e:	int3   
  408d4f:	int3   
  408d50:	push   ecx
  408d51:	mov    ecx,DWORD PTR [esp+0x8]
  408d55:	push   ebx
  408d56:	mov    ebx,DWORD PTR [ecx]
  408d58:	push   ebp
  408d59:	mov    ebp,DWORD PTR [ecx+0x4]
  408d5c:	push   edi
  408d5d:	test   ebx,ebx
  408d5f:	jne    0x408d69
  408d61:	cmp    ebp,0x80000000
  408d67:	je     0x408d9b
  408d69:	cmp    ebx,0xffffffff
  408d6c:	jne    0x408d76
  408d6e:	cmp    ebp,0x7fffffff
  408d74:	je     0x408d9b
  408d76:	cmp    ebx,0xfffffffe
  408d79:	jne    0x408d87
  408d7b:	cmp    ebp,0x7fffffff
  408d81:	je     0x408e3a
  408d87:	mov    edi,DWORD PTR [eax]
  408d89:	test   edi,edi
  408d8b:	je     0x408d9b
  408d8d:	cmp    edi,0xffffffff
  408d90:	je     0x408d9b
  408d92:	cmp    edi,0xfffffffe
  408d95:	jne    0x408e26
  408d9b:	cmp    ebx,0xfffffffe
  408d9e:	jne    0x408dac
  408da0:	cmp    ebp,0x7fffffff
  408da6:	je     0x408e3a
  408dac:	mov    edi,DWORD PTR [eax]
  408dae:	cmp    edi,0xfffffffe
  408db1:	je     0x408e3a
  408db7:	cmp    ebx,0xffffffff
  408dba:	jne    0x408dc8
  408dbc:	cmp    ebp,0x7fffffff
  408dc2:	jne    0x408dc8
  408dc4:	test   edi,edi
  408dc6:	je     0x408e3a
  408dc8:	test   ebx,ebx
  408dca:	jne    0x408dd9
  408dcc:	cmp    ebp,0x80000000
  408dd2:	jne    0x408dd9
  408dd4:	cmp    edi,0xffffffff
  408dd7:	je     0x408e3a
  408dd9:	call   0x408d20
  408dde:	test   al,al
  408de0:	je     0x408df9
  408de2:	mov    eax,DWORD PTR [esp+0x14]
  408de6:	mov    ecx,DWORD PTR [eax]
  408de8:	mov    edx,DWORD PTR [eax+0x4]
  408deb:	mov    DWORD PTR [esi],ecx
  408ded:	mov    DWORD PTR [esi+0x4],edx
  408df0:	mov    eax,esi
  408df2:	pop    edi
  408df3:	pop    ebp
  408df4:	pop    ebx
  408df5:	pop    ecx
  408df6:	ret    0x4
  408df9:	cmp    edi,0xffffffff
  408dfc:	jne    0x408e10
  408dfe:	mov    DWORD PTR [esi],edi
  408e00:	mov    DWORD PTR [esi+0x4],0x7fffffff
  408e07:	mov    eax,esi
  408e09:	pop    edi
  408e0a:	pop    ebp
  408e0b:	pop    ebx
  408e0c:	pop    ecx
  408e0d:	ret    0x4
  408e10:	test   edi,edi
  408e12:	jne    0x408e26
  408e14:	mov    DWORD PTR [esi],edi
  408e16:	mov    DWORD PTR [esi+0x4],0x80000000
  408e1d:	mov    eax,esi
  408e1f:	pop    edi
  408e20:	pop    ebp
  408e21:	pop    ebx
  408e22:	pop    ecx
  408e23:	ret    0x4
  408e26:	xor    eax,eax
  408e28:	add    edi,ebx
  408e2a:	adc    eax,ebp
  408e2c:	mov    DWORD PTR [esi+0x4],eax
  408e2f:	mov    DWORD PTR [esi],edi
  408e31:	mov    eax,esi
  408e33:	pop    edi
  408e34:	pop    ebp
  408e35:	pop    ebx
  408e36:	pop    ecx
  408e37:	ret    0x4
  408e3a:	pop    edi
  408e3b:	pop    ebp
  408e3c:	mov    DWORD PTR [esi],0xfffffffe
  408e42:	mov    DWORD PTR [esi+0x4],0x7fffffff
  408e49:	mov    eax,esi
  408e4b:	pop    ebx
  408e4c:	pop    ecx
  408e4d:	ret    0x4
  408e50:	sub    esp,0x1c
  408e53:	mov    DWORD PTR [edi],0x1
  408e59:	mov    DWORD PTR [edi+0x4],0x0
  408e60:	mov    ecx,DWORD PTR [ecx]
  408e62:	push   ebx
  408e63:	push   esi
  408e64:	test   ecx,ecx
  408e66:	je     0x408ec2
  408e68:	cmp    ecx,0xffffffff
  408e6b:	je     0x408ec2
  408e6d:	cmp    ecx,0xfffffffe
  408e70:	je     0x408ec2
  408e72:	mov    edx,DWORD PTR [eax]
  408e74:	mov    esi,DWORD PTR [eax+0x4]
  408e77:	test   edx,edx
  408e79:	jne    0x408e83
  408e7b:	cmp    esi,0x80000000
  408e81:	je     0x408ec2
  408e83:	cmp    edx,0xffffffff
  408e86:	jne    0x408e90
  408e88:	cmp    esi,0x7fffffff
  408e8e:	je     0x408ec2
  408e90:	cmp    edx,0xfffffffe
  408e93:	jne    0x408e9d
  408e95:	cmp    esi,0x7fffffff
  408e9b:	je     0x408ec2
  408e9d:	mov    ebx,DWORD PTR [eax+0x4]
  408ea0:	push   0x14
  408ea2:	push   0x1dd76000
  408ea7:	push   0x0
  408ea9:	push   ecx
  408eaa:	mov    esi,edx
  408eac:	call   0x429f30
  408eb1:	add    eax,esi
  408eb3:	adc    edx,ebx
  408eb5:	mov    DWORD PTR [edi],eax
  408eb7:	mov    DWORD PTR [edi+0x4],edx
  408eba:	mov    eax,edi
  408ebc:	pop    esi
  408ebd:	pop    ebx
  408ebe:	add    esp,0x1c
  408ec1:	ret    
  408ec2:	mov    edx,DWORD PTR [eax]
  408ec4:	mov    eax,DWORD PTR [eax+0x4]
  408ec7:	mov    DWORD PTR [esp+0xc],ecx
  408ecb:	lea    ecx,[esp+0x10]
  408ecf:	mov    DWORD PTR [esp+0x14],eax
  408ed3:	push   ecx
  408ed4:	lea    eax,[esp+0x10]
  408ed8:	lea    esi,[esp+0x1c]
  408edc:	mov    DWORD PTR [esp+0x14],edx
  408ee0:	call   0x408d50
  408ee5:	mov    edx,DWORD PTR [eax]
  408ee7:	mov    DWORD PTR [edi],edx
  408ee9:	mov    eax,DWORD PTR [eax+0x4]
  408eec:	pop    esi
  408eed:	mov    DWORD PTR [edi+0x4],eax
  408ef0:	mov    eax,edi
  408ef2:	pop    ebx
  408ef3:	add    esp,0x1c
  408ef6:	ret    
  408ef7:	int3   
  408ef8:	int3   
  408ef9:	int3   
  408efa:	int3   
  408efb:	int3   
  408efc:	int3   
  408efd:	int3   
  408efe:	int3   
  408eff:	int3   
  408f00:	cmp    ecx,0x4
  408f03:	ja     0x408f44
  408f05:	jmp    DWORD PTR [ecx*4+0x408f54]
  408f0c:	mov    DWORD PTR [eax],0x0
  408f12:	mov    DWORD PTR [eax+0x4],0x80000000
  408f19:	ret    
  408f1a:	mov    DWORD PTR [eax],0xffffffff
  408f20:	mov    DWORD PTR [eax+0x4],0x7fffffff
  408f27:	ret    
  408f28:	mov    DWORD PTR [eax],0xfffffffd
  408f2e:	mov    DWORD PTR [eax+0x4],0x7fffffff
  408f35:	ret    
  408f36:	mov    DWORD PTR [eax],0x1
  408f3c:	mov    DWORD PTR [eax+0x4],0x80000000
  408f43:	ret    
  408f44:	mov    DWORD PTR [eax],0xfffffffe
  408f4a:	mov    DWORD PTR [eax+0x4],0x7fffffff
  408f51:	ret    
  408f52:	mov    edi,edi
  408f54:	inc    esp
  408f55:	pop    DWORD PTR [eax+0x0]
  408f58:	or     al,0x8f
  408f5a:	inc    eax
  408f5b:	add    BYTE PTR [edx],bl
  408f5d:	pop    DWORD PTR [eax+0x0]
  408f60:	pop    DWORD PTR ss:[eax+0x0]
  408f64:	sub    BYTE PTR [edi-0x3333ffc0],cl
  408f6a:	int3   
  408f6b:	int3   
  408f6c:	int3   
  408f6d:	int3   
  408f6e:	int3   
  408f6f:	int3   
  408f70:	push   ebx
  408f71:	push   edi
  408f72:	movzx  edi,WORD PTR [esi+0x2]
  408f76:	movzx  eax,di
  408f79:	mov    ecx,0xe
  408f7e:	sub    ecx,eax
  408f80:	mov    eax,0x2aaaaaab
  408f85:	imul   ecx
  408f87:	sar    edx,1
  408f89:	mov    ecx,edx
  408f8b:	shr    ecx,0x1f
  408f8e:	add    ecx,edx
  408f90:	mov    dx,WORD PTR [esi]
  408f93:	movzx  eax,cx
  408f96:	sub    dx,ax
  408f99:	mov    ecx,0x12c0
  408f9e:	add    dx,cx
  408fa1:	movzx  ecx,dx
  408fa4:	lea    edx,[eax+eax*2]
  408fa7:	lea    eax,[edi+edx*4-0x3]
  408fab:	movzx  edx,ax
  408fae:	imul   edx,edx,0x99
  408fb4:	add    edx,0x2
  408fb7:	mov    eax,0x66666667
  408fbc:	imul   edx
  408fbe:	sar    edx,1
  408fc0:	mov    edi,edx
  408fc2:	shr    edi,0x1f
  408fc5:	add    edi,edx
  408fc7:	mov    eax,0x51eb851f
  408fcc:	imul   ecx
  408fce:	sar    edx,0x7
  408fd1:	add    edi,edx
  408fd3:	mov    ebx,edx
  408fd5:	mov    eax,0x51eb851f
  408fda:	imul   ecx
  408fdc:	sar    edx,0x5
  408fdf:	shr    ebx,0x1f
  408fe2:	mov    eax,edx
  408fe4:	shr    eax,0x1f
  408fe7:	add    ebx,edi
  408fe9:	add    eax,edx
  408feb:	movzx  edx,WORD PTR [esi+0x4]
  408fef:	sub    ebx,eax
  408ff1:	mov    eax,ecx
  408ff3:	imul   eax,eax,0x16d
  408ff9:	add    ebx,edx
  408ffb:	add    ebx,eax
  408ffd:	shr    ecx,0x2
  409000:	pop    edi
  409001:	lea    eax,[ebx+ecx*1-0x7d2d]
  409008:	pop    ebx
  409009:	ret    
  40900a:	int3   
  40900b:	int3   
  40900c:	int3   
  40900d:	int3   
  40900e:	int3   
  40900f:	int3   
  409010:	movzx  ecx,WORD PTR [esp+0x4]
  409015:	mov    eax,ecx
  409017:	and    eax,0x80000003
  40901c:	jns    0x409023
  40901e:	dec    eax
  40901f:	or     eax,0xfffffffc
  409022:	inc    eax
  409023:	jne    0x409049
  409025:	mov    eax,ecx
  409027:	push   esi
  409028:	cdq    
  409029:	mov    esi,0x64
  40902e:	idiv   esi
  409030:	pop    esi
  409031:	test   edx,edx
  409033:	jne    0x409043
  409035:	mov    eax,ecx
  409037:	cdq    
  409038:	mov    ecx,0x190
  40903d:	idiv   ecx
  40903f:	test   edx,edx
  409041:	jne    0x409049
  409043:	mov    eax,0x1
  409048:	ret    
  409049:	xor    eax,eax
  40904b:	ret    
  40904c:	int3   
  40904d:	int3   
  40904e:	int3   
  40904f:	int3   
  409050:	movzx  eax,WORD PTR [esp+0x8]
  409055:	add    eax,0xfffffffe
  409058:	cmp    eax,0x9
  40905b:	ja     0x40908e
  40905d:	movzx  eax,BYTE PTR [eax+0x4090a0]
  409064:	jmp    DWORD PTR [eax*4+0x409094]
  40906b:	mov    ecx,DWORD PTR [esp+0x4]
  40906f:	push   ecx
  409070:	call   0x409010
  409075:	add    esp,0x4
  409078:	test   al,al
  40907a:	je     0x409082
  40907c:	mov    eax,0x1d
  409081:	ret    
  409082:	mov    eax,0x1c
  409087:	ret    
  409088:	mov    eax,0x1e
  40908d:	ret    
  40908e:	mov    eax,0x1f
  409093:	ret    
  409094:	imul   edx,DWORD PTR [eax-0x6f77ffc0],0x40
  40909b:	add    BYTE PTR [esi+0x4090],cl
  4090a1:	add    al,BYTE PTR [ecx]
  4090a3:	add    al,BYTE PTR [ecx]
  4090a5:	add    al,BYTE PTR [edx]
  4090a7:	add    DWORD PTR [edx],eax
  4090a9:	add    esp,ecx
  4090ab:	int3   
  4090ac:	int3   
  4090ad:	int3   
  4090ae:	int3   
  4090af:	int3   
  4090b0:	push   0xffffffff
  4090b2:	push   0x42dd81
  4090b7:	mov    eax,fs:0x0
  4090bd:	push   eax
  4090be:	sub    esp,0x50
  4090c1:	push   esi
  4090c2:	push   edi
  4090c3:	mov    eax,ds:0x43e020
  4090c8:	xor    eax,esp
  4090ca:	push   eax
  4090cb:	lea    eax,[esp+0x5c]
  4090cf:	mov    fs:0x0,eax
  4090d5:	mov    ax,WORD PTR [esp+0x6c]
  4090da:	mov    cx,WORD PTR [esp+0x70]
  4090df:	mov    di,WORD PTR [esp+0x74]
  4090e4:	lea    esi,[esp+0xe]
  4090e8:	mov    WORD PTR [esp+0xe],ax
  4090ed:	mov    WORD PTR [esp+0x10],cx
  4090f2:	mov    WORD PTR [esp+0x12],di
  4090f7:	call   0x408f70
  4090fc:	mov    edx,DWORD PTR [esp+0x70]
  409100:	mov    DWORD PTR [ebx],eax
  409102:	mov    eax,DWORD PTR [esp+0x6c]
  409106:	push   edx
  409107:	push   eax
  409108:	call   0x409050
  40910d:	add    esp,0x8
  409110:	cmp    ax,di
  409113:	jae    0x40914d
  409115:	push   0x431428
  40911a:	lea    ecx,[esp+0x18]
  40911e:	call   DWORD PTR ds:0x43011c
  409124:	push   eax
  409125:	lea    ecx,[esp+0x34]
  409129:	mov    DWORD PTR [esp+0x68],0x0
  409131:	call   0x402940
  409136:	mov    DWORD PTR [esp+0x30],0x4314b4
  40913e:	lea    ecx,[esp+0x30]
  409142:	push   ecx
  409143:	mov    BYTE PTR [esp+0x68],0x1
  409148:	call   0x4095a0
  40914d:	mov    eax,ebx
  40914f:	mov    ecx,DWORD PTR [esp+0x5c]
  409153:	mov    DWORD PTR fs:0x0,ecx
  40915a:	pop    ecx
  40915b:	pop    edi
  40915c:	pop    esi
  40915d:	add    esp,0x5c
  409160:	ret    0xc
  409163:	int3   
  409164:	int3   
  409165:	int3   
  409166:	int3   
  409167:	int3   
  409168:	int3   
  409169:	int3   
  40916a:	int3   
  40916b:	int3   
  40916c:	int3   
  40916d:	int3   
  40916e:	int3   
  40916f:	int3   
  409170:	push   0xffffffff
  409172:	push   0x42ca73
  409177:	mov    eax,fs:0x0
  40917d:	push   eax
  40917e:	push   esi
  40917f:	push   edi
  409180:	mov    eax,ds:0x43e020
  409185:	xor    eax,esp
  409187:	push   eax
  409188:	lea    eax,[esp+0xc]
  40918c:	mov    fs:0x0,eax
  409192:	mov    esi,DWORD PTR [esp+0x1c]
  409196:	push   ebx
  409197:	mov    ecx,esi
  409199:	call   0x4094e0
  40919e:	xor    eax,eax
  4091a0:	mov    DWORD PTR [esp+0x14],eax
  4091a4:	mov    DWORD PTR [esi+0x3c],0x430bd8
  4091ab:	mov    BYTE PTR [esp+0x14],0x1
  4091b0:	lea    edi,[esi+0x28]
  4091b3:	mov    DWORD PTR [esi],0x431524
  4091b9:	mov    DWORD PTR [edi],0x431530
  4091bf:	mov    DWORD PTR [esi+0x3c],0x431538
  4091c6:	cmp    ebx,eax
  4091c8:	je     0x4091cd
  4091ca:	lea    eax,[ebx+0x28]
  4091cd:	push   eax
  4091ce:	call   0x402b50
  4091d3:	add    esp,0x4
  4091d6:	mov    eax,esi
  4091d8:	mov    ecx,DWORD PTR [esp+0xc]
  4091dc:	mov    DWORD PTR fs:0x0,ecx
  4091e3:	pop    ecx
  4091e4:	pop    edi
  4091e5:	pop    esi
  4091e6:	add    esp,0xc
  4091e9:	ret    0x4
  4091ec:	int3   
  4091ed:	int3   
  4091ee:	int3   
  4091ef:	int3   
  4091f0:	push   ecx
  4091f1:	push   esi
  4091f2:	mov    DWORD PTR [esp+0x4],0x0
  4091fa:	call   0x409170
  4091ff:	mov    eax,esi
  409201:	pop    ecx
  409202:	ret    
  409203:	int3   
  409204:	int3   
  409205:	int3   
  409206:	int3   
  409207:	int3   
  409208:	int3   
  409209:	int3   
  40920a:	int3   
  40920b:	int3   
  40920c:	int3   
  40920d:	int3   
  40920e:	int3   
  40920f:	int3   
  409210:	push   ecx
  409211:	push   edi
  409212:	xor    edi,edi
  409214:	push   eax
  409215:	mov    ecx,esi
  409217:	mov    DWORD PTR [esp+0x8],edi
  40921b:	call   0x4028d0
  409220:	mov    DWORD PTR [esi+0x28],0x430bd0
  409227:	mov    DWORD PTR [esi+0x2c],edi
  40922a:	mov    DWORD PTR [esi+0x30],edi
  40922d:	mov    DWORD PTR [esi+0x34],edi
  409230:	mov    DWORD PTR [esi+0x38],0xffffffff
  409237:	mov    DWORD PTR [esi],0x431510
  40923d:	mov    DWORD PTR [esi+0x28],0x43151c
  409244:	mov    eax,esi
  409246:	pop    edi
  409247:	pop    ecx
  409248:	ret    
  409249:	int3   
  40924a:	int3   
  40924b:	int3   
  40924c:	int3   
  40924d:	int3   
  40924e:	int3   
  40924f:	int3   
  409250:	push   esi
  409251:	mov    esi,ecx
  409253:	mov    DWORD PTR [esi+0x3c],0x430bd8
  40925a:	mov    DWORD PTR [esi],0x431510
  409260:	mov    DWORD PTR [esi+0x28],0x43151c
  409267:	mov    DWORD PTR [esi+0x28],0x430bd0
  40926e:	mov    ecx,DWORD PTR [esi+0x2c]
  409271:	test   ecx,ecx
  409273:	je     0x409287
  409275:	mov    eax,DWORD PTR [ecx]
  409277:	mov    edx,DWORD PTR [eax+0x10]
  40927a:	call   edx
  40927c:	test   al,al
  40927e:	je     0x409287
  409280:	mov    DWORD PTR [esi+0x2c],0x0
  409287:	lea    ecx,[esi+0xc]
  40928a:	mov    DWORD PTR [esi],0x4305f8
  409290:	call   DWORD PTR ds:0x43025c
  409296:	mov    ecx,esi
  409298:	pop    esi
  409299:	jmp    DWORD PTR ds:0x4303a8
  40929f:	int3   
  4092a0:	mov    DWORD PTR [esi],0x431510
  4092a6:	mov    DWORD PTR [esi+0x28],0x43151c
  4092ad:	mov    DWORD PTR [esi+0x28],0x430bd0
  4092b4:	mov    ecx,DWORD PTR [esi+0x2c]
  4092b7:	test   ecx,ecx
  4092b9:	je     0x4092cd
  4092bb:	mov    eax,DWORD PTR [ecx]
  4092bd:	mov    edx,DWORD PTR [eax+0x10]
  4092c0:	call   edx
  4092c2:	test   al,al
  4092c4:	je     0x4092cd
  4092c6:	mov    DWORD PTR [esi+0x2c],0x0
  4092cd:	lea    ecx,[esi+0xc]
  4092d0:	mov    DWORD PTR [esi],0x4305f8
  4092d6:	call   DWORD PTR ds:0x43025c
  4092dc:	mov    ecx,esi
  4092de:	jmp    DWORD PTR ds:0x4303a8
  4092e4:	int3   
  4092e5:	int3   
  4092e6:	int3   
  4092e7:	int3   
  4092e8:	int3   
  4092e9:	int3   
  4092ea:	int3   
  4092eb:	int3   
  4092ec:	int3   
  4092ed:	int3   
  4092ee:	int3   
  4092ef:	int3   
  4092f0:	sub    ecx,0x28
  4092f3:	jmp    0x4093c0
  4092f8:	int3   
  4092f9:	int3   
  4092fa:	int3   
  4092fb:	int3   
  4092fc:	int3   
  4092fd:	int3   
  4092fe:	int3   
  4092ff:	int3   
  409300:	push   0xffffffff
  409302:	push   0x42defb
  409307:	mov    eax,fs:0x0
  40930d:	push   eax
  40930e:	push   ecx
  40930f:	push   esi
  409310:	push   edi
  409311:	mov    eax,ds:0x43e020
  409316:	xor    eax,esp
  409318:	push   eax
  409319:	lea    eax,[esp+0x10]
  40931d:	mov    fs:0x0,eax
  409323:	mov    edi,ecx
  409325:	push   0x40
  409327:	call   0x425050
  40932c:	mov    esi,eax
  40932e:	add    esp,0x4
  409331:	mov    DWORD PTR [esp+0xc],esi
  409335:	xor    eax,eax
  409337:	mov    DWORD PTR [esp+0x18],eax
  40933b:	cmp    esi,eax
  40933d:	je     0x409366
  40933f:	lea    eax,[edi-0x3c]
  409342:	push   eax
  409343:	mov    ecx,esi
  409345:	call   0x4094e0
  40934a:	lea    eax,[esi+0x3c]
  40934d:	mov    DWORD PTR [eax],0x430bd8
  409353:	mov    DWORD PTR [esi],0x431524
  409359:	mov    DWORD PTR [esi+0x28],0x431530
  409360:	mov    DWORD PTR [eax],0x431538
  409366:	mov    ecx,DWORD PTR [esp+0x10]
  40936a:	mov    DWORD PTR fs:0x0,ecx
  409371:	pop    ecx
  409372:	pop    edi
  409373:	pop    esi
  409374:	add    esp,0x10
  409377:	ret    
  409378:	int3   
  409379:	int3   
  40937a:	int3   
  40937b:	int3   
  40937c:	int3   
  40937d:	int3   
  40937e:	int3   
  40937f:	int3   
  409380:	push   ebp
  409381:	mov    ebp,esp
  409383:	and    esp,0xfffffff8
  409386:	sub    esp,0x40
  409389:	lea    eax,[ecx-0x3c]
  40938c:	push   eax
  40938d:	lea    ecx,[esp+0x4]
  409391:	call   0x4094e0
  409396:	push   0x435a9c
  40939b:	lea    eax,[esp+0x4]
  40939f:	push   eax
  4093a0:	mov    DWORD PTR [esp+0x8],0x431524
  4093a8:	mov    DWORD PTR [esp+0x30],0x431530
  4093b0:	mov    DWORD PTR [esp+0x44],0x431538
  4093b8:	call   0x429e76
  4093bd:	int3   
  4093be:	int3   
  4093bf:	int3   
  4093c0:	push   esi
  4093c1:	mov    esi,ecx
  4093c3:	mov    DWORD PTR [esi+0x3c],0x430bd8
  4093ca:	mov    DWORD PTR [esi],0x431510
  4093d0:	mov    DWORD PTR [esi+0x28],0x43151c
  4093d7:	mov    DWORD PTR [esi+0x28],0x430bd0
  4093de:	mov    ecx,DWORD PTR [esi+0x2c]
  4093e1:	test   ecx,ecx
  4093e3:	je     0x4093f7
  4093e5:	mov    eax,DWORD PTR [ecx]
  4093e7:	mov    edx,DWORD PTR [eax+0x10]
  4093ea:	call   edx
  4093ec:	test   al,al
  4093ee:	je     0x4093f7
  4093f0:	mov    DWORD PTR [esi+0x2c],0x0
  4093f7:	lea    ecx,[esi+0xc]
  4093fa:	mov    DWORD PTR [esi],0x4305f8
  409400:	call   DWORD PTR ds:0x43025c
  409406:	mov    ecx,esi
  409408:	call   DWORD PTR ds:0x4303a8
  40940e:	test   BYTE PTR [esp+0x8],0x1
  409413:	je     0x40941e
  409415:	push   esi
  409416:	call   0x42504a
  40941b:	add    esp,0x4
  40941e:	mov    eax,esi
  409420:	pop    esi
  409421:	ret    0x4
  409424:	int3   
  409425:	int3   
  409426:	int3   
  409427:	int3   
  409428:	int3   
  409429:	int3   
  40942a:	int3   
  40942b:	int3   
  40942c:	int3   
  40942d:	int3   
  40942e:	int3   
  40942f:	int3   
  409430:	sub    ecx,0x3c
  409433:	jmp    0x4093c0
  409438:	int3   
  409439:	int3   
  40943a:	int3   
  40943b:	int3   
  40943c:	int3   
  40943d:	int3   
  40943e:	int3   
  40943f:	int3   
  409440:	mov    eax,DWORD PTR [esp+0x4]
  409444:	push   esi
  409445:	push   eax
  409446:	mov    esi,ecx
  409448:	call   0x4094e0
  40944d:	mov    DWORD PTR [esi+0x3c],0x430bd8
  409454:	mov    DWORD PTR [esi],0x431524
  40945a:	mov    DWORD PTR [esi+0x28],0x431530
  409461:	mov    DWORD PTR [esi+0x3c],0x431538
  409468:	mov    eax,esi
  40946a:	pop    esi
  40946b:	ret    0x4
  40946e:	int3   
  40946f:	int3   
  409470:	push   esi
  409471:	mov    esi,ecx
  409473:	mov    DWORD PTR [esi],0x431510
  409479:	mov    DWORD PTR [esi+0x28],0x43151c
  409480:	mov    DWORD PTR [esi+0x28],0x430bd0
  409487:	mov    ecx,DWORD PTR [esi+0x2c]
  40948a:	test   ecx,ecx
  40948c:	je     0x4094a0
  40948e:	mov    eax,DWORD PTR [ecx]
  409490:	mov    edx,DWORD PTR [eax+0x10]
  409493:	call   edx
  409495:	test   al,al
  409497:	je     0x4094a0
  409499:	mov    DWORD PTR [esi+0x2c],0x0
  4094a0:	lea    ecx,[esi+0xc]
  4094a3:	mov    DWORD PTR [esi],0x4305f8
  4094a9:	call   DWORD PTR ds:0x43025c
  4094af:	mov    ecx,esi
  4094b1:	call   DWORD PTR ds:0x4303a8
  4094b7:	test   BYTE PTR [esp+0x8],0x1
  4094bc:	je     0x4094c7
  4094be:	push   esi
  4094bf:	call   0x42504a
  4094c4:	add    esp,0x4
  4094c7:	mov    eax,esi
  4094c9:	pop    esi
  4094ca:	ret    0x4
  4094cd:	int3   
  4094ce:	int3   
  4094cf:	int3   
  4094d0:	sub    ecx,0x28
  4094d3:	jmp    0x409470
  4094d8:	int3   
  4094d9:	int3   
  4094da:	int3   
  4094db:	int3   
  4094dc:	int3   
  4094dd:	int3   
  4094de:	int3   
  4094df:	int3   
  4094e0:	push   0xffffffff
  4094e2:	push   0x42ca08
  4094e7:	mov    eax,fs:0x0
  4094ed:	push   eax
  4094ee:	push   ecx
  4094ef:	push   esi
  4094f0:	push   edi
  4094f1:	mov    eax,ds:0x43e020
  4094f6:	xor    eax,esp
  4094f8:	push   eax
  4094f9:	lea    eax,[esp+0x10]
  4094fd:	mov    fs:0x0,eax
  409503:	mov    esi,ecx
  409505:	mov    DWORD PTR [esp+0xc],esi
  409509:	mov    edi,DWORD PTR [esp+0x20]
  40950d:	push   edi
  40950e:	call   0x4028d0
  409513:	mov    DWORD PTR [esi],0x4314b4
  409519:	mov    DWORD PTR [esp+0x18],0x0
  409521:	test   edi,edi
  409523:	je     0x40952a
  409525:	add    edi,0x28
  409528:	jmp    0x40952c
  40952a:	xor    edi,edi
  40952c:	mov    DWORD PTR [esi+0x28],0x430bd0
  409533:	mov    ecx,DWORD PTR [edi+0x4]
  409536:	mov    DWORD PTR [esi+0x2c],ecx
  409539:	test   ecx,ecx
  40953b:	je     0x409544
  40953d:	mov    eax,DWORD PTR [ecx]
  40953f:	mov    edx,DWORD PTR [eax+0xc]
  409542:	call   edx
  409544:	mov    eax,DWORD PTR [edi+0x8]
  409547:	mov    DWORD PTR [esi+0x30],eax
  40954a:	mov    ecx,DWORD PTR [edi+0xc]
  40954d:	mov    DWORD PTR [esi+0x34],ecx
  409550:	mov    edx,DWORD PTR [edi+0x10]
  409553:	mov    DWORD PTR [esi+0x38],edx
  409556:	mov    DWORD PTR [esi],0x431510
  40955c:	mov    DWORD PTR [esi+0x28],0x43151c
  409563:	mov    eax,esi
  409565:	mov    ecx,DWORD PTR [esp+0x10]
  409569:	mov    DWORD PTR fs:0x0,ecx
  409570:	pop    ecx
  409571:	pop    edi
  409572:	pop    esi
  409573:	add    esp,0x10
  409576:	ret    0x4
  409579:	int3   
  40957a:	int3   
  40957b:	int3   
  40957c:	int3   
  40957d:	int3   
  40957e:	int3   
  40957f:	int3   
  409580:	mov    eax,DWORD PTR [esp+0x4]
  409584:	push   esi
  409585:	push   eax
  409586:	mov    esi,ecx
  409588:	call   0x4028d0
  40958d:	mov    DWORD PTR [esi],0x4314b4
  409593:	mov    eax,esi
  409595:	pop    esi
  409596:	ret    0x4
  409599:	int3   
  40959a:	int3   
  40959b:	int3   
  40959c:	int3   
  40959d:	int3   
  40959e:	int3   
  40959f:	int3   
  4095a0:	push   0xffffffff
  4095a2:	push   0x42dd4b
  4095a7:	mov    eax,fs:0x0
  4095ad:	push   eax
  4095ae:	sub    esp,0x80
  4095b4:	push   ebx
  4095b5:	push   esi
  4095b6:	mov    eax,ds:0x43e020
  4095bb:	xor    eax,esp
  4095bd:	push   eax
  4095be:	lea    eax,[esp+0x8c]
  4095c5:	mov    fs:0x0,eax
  4095cb:	mov    eax,DWORD PTR [esp+0x9c]
  4095d2:	lea    esi,[esp+0xc]
  4095d6:	call   0x409210
  4095db:	mov    ebx,eax
  4095dd:	lea    esi,[esp+0x48]
  4095e1:	mov    DWORD PTR [esp+0x94],0x0
  4095ec:	call   0x4091f0
  4095f1:	push   0x435a9c
  4095f6:	mov    eax,esi
  4095f8:	push   eax
  4095f9:	call   0x429e76
  4095fe:	int3   
  4095ff:	int3   
  409600:	push   esi
  409601:	mov    esi,ecx
  409603:	lea    ecx,[esi+0xc]
  409606:	mov    DWORD PTR [esi],0x4305f8
  40960c:	call   DWORD PTR ds:0x43025c
  409612:	mov    ecx,esi
  409614:	call   DWORD PTR ds:0x4303a8
  40961a:	test   BYTE PTR [esp+0x8],0x1
  40961f:	je     0x40962a
  409621:	push   esi
  409622:	call   0x42504a
  409627:	add    esp,0x4
  40962a:	mov    eax,esi
  40962c:	pop    esi
  40962d:	ret    0x4
  409630:	push   0xffffffff
  409632:	push   0x42b741
  409637:	mov    eax,fs:0x0
  40963d:	push   eax
  40963e:	sub    esp,0x1c
  409641:	push   esi
  409642:	mov    eax,ds:0x43e020
  409647:	xor    eax,esp
  409649:	push   eax
  40964a:	lea    eax,[esp+0x24]
  40964e:	mov    fs:0x0,eax
  409654:	mov    esi,DWORD PTR [esp+0x34]
  409658:	push   0x4313b0
  40965d:	lea    ecx,[esp+0xc]
  409661:	call   DWORD PTR ds:0x43011c
  409667:	push   eax
  409668:	mov    ecx,esi
  40966a:	mov    DWORD PTR [esp+0x30],0x0
  409672:	call   0x402940
  409677:	mov    DWORD PTR [esi],0x431490
  40967d:	lea    ecx,[esp+0x8]
  409681:	mov    BYTE PTR [esp+0x2c],0x2
  409686:	call   DWORD PTR ds:0x43025c
  40968c:	mov    DWORD PTR [esi],0x4314b4
  409692:	mov    eax,esi
  409694:	mov    ecx,DWORD PTR [esp+0x24]
  409698:	mov    DWORD PTR fs:0x0,ecx
  40969f:	pop    ecx
  4096a0:	pop    esi
  4096a1:	add    esp,0x28
  4096a4:	ret    0x4
  4096a7:	int3   
  4096a8:	int3   
  4096a9:	int3   
  4096aa:	int3   
  4096ab:	int3   
  4096ac:	int3   
  4096ad:	int3   
  4096ae:	int3   
  4096af:	int3   
  4096b0:	push   0xffffffff
  4096b2:	push   0x42e388
  4096b7:	mov    eax,fs:0x0
  4096bd:	push   eax
  4096be:	sub    esp,0x2c
  4096c1:	mov    eax,ds:0x43e020
  4096c6:	xor    eax,esp
  4096c8:	push   eax
  4096c9:	lea    eax,[esp+0x30]
  4096cd:	mov    fs:0x0,eax
  4096d3:	lea    eax,[esp+0x8]
  4096d7:	push   eax
  4096d8:	call   0x409630
  4096dd:	push   eax
  4096de:	mov    DWORD PTR [esp+0x3c],0x0
  4096e6:	call   0x4095a0
  4096eb:	int3   
  4096ec:	int3   
  4096ed:	int3   
  4096ee:	int3   
  4096ef:	int3   
  4096f0:	push   0xffffffff
  4096f2:	push   0x42ca43
  4096f7:	mov    eax,fs:0x0
  4096fd:	push   eax
  4096fe:	push   esi
  4096ff:	push   edi
  409700:	mov    eax,ds:0x43e020
  409705:	xor    eax,esp
  409707:	push   eax
  409708:	lea    eax,[esp+0xc]
  40970c:	mov    fs:0x0,eax
  409712:	mov    esi,DWORD PTR [esp+0x1c]
  409716:	push   ebx
  409717:	mov    ecx,esi
  409719:	call   0x409a60
  40971e:	xor    eax,eax
  409720:	mov    DWORD PTR [esp+0x14],eax
  409724:	mov    DWORD PTR [esi+0x3c],0x430bd8
  40972b:	mov    BYTE PTR [esp+0x14],0x1
  409730:	lea    edi,[esi+0x28]
  409733:	mov    DWORD PTR [esi],0x4315cc
  409739:	mov    DWORD PTR [edi],0x4315d8
  40973f:	mov    DWORD PTR [esi+0x3c],0x4315e0
  409746:	cmp    ebx,eax
  409748:	je     0x40974d
  40974a:	lea    eax,[ebx+0x28]
  40974d:	push   eax
  40974e:	call   0x402b50
  409753:	add    esp,0x4
  409756:	mov    eax,esi
  409758:	mov    ecx,DWORD PTR [esp+0xc]
  40975c:	mov    DWORD PTR fs:0x0,ecx
  409763:	pop    ecx
  409764:	pop    edi
  409765:	pop    esi
  409766:	add    esp,0xc
  409769:	ret    0x4
  40976c:	int3   
  40976d:	int3   
  40976e:	int3   
  40976f:	int3   
  409770:	push   ecx
  409771:	push   esi
  409772:	mov    DWORD PTR [esp+0x4],0x0
  40977a:	call   0x4096f0
  40977f:	mov    eax,esi
  409781:	pop    ecx
  409782:	ret    
  409783:	int3   
  409784:	int3   
  409785:	int3   
  409786:	int3   
  409787:	int3   
  409788:	int3   
  409789:	int3   
  40978a:	int3   
  40978b:	int3   
  40978c:	int3   
  40978d:	int3   
  40978e:	int3   
  40978f:	int3   
  409790:	push   ecx
  409791:	push   edi
  409792:	xor    edi,edi
  409794:	push   eax
  409795:	mov    ecx,esi
  409797:	mov    DWORD PTR [esp+0x8],edi
  40979b:	call   0x4028d0
  4097a0:	mov    DWORD PTR [esi+0x28],0x430bd0
  4097a7:	mov    DWORD PTR [esi+0x2c],edi
  4097aa:	mov    DWORD PTR [esi+0x30],edi
  4097ad:	mov    DWORD PTR [esi+0x34],edi
  4097b0:	mov    DWORD PTR [esi+0x38],0xffffffff
  4097b7:	mov    DWORD PTR [esi],0x4315b8
  4097bd:	mov    DWORD PTR [esi+0x28],0x4315c4
  4097c4:	mov    eax,esi
  4097c6:	pop    edi
  4097c7:	pop    ecx
  4097c8:	ret    
  4097c9:	int3   
  4097ca:	int3   
  4097cb:	int3   
  4097cc:	int3   
  4097cd:	int3   
  4097ce:	int3   
  4097cf:	int3   
  4097d0:	push   esi
  4097d1:	mov    esi,ecx
  4097d3:	mov    DWORD PTR [esi+0x3c],0x430bd8
  4097da:	mov    DWORD PTR [esi],0x4315b8
  4097e0:	mov    DWORD PTR [esi+0x28],0x4315c4
  4097e7:	mov    DWORD PTR [esi+0x28],0x430bd0
  4097ee:	mov    ecx,DWORD PTR [esi+0x2c]
  4097f1:	test   ecx,ecx
  4097f3:	je     0x409807
  4097f5:	mov    eax,DWORD PTR [ecx]
  4097f7:	mov    edx,DWORD PTR [eax+0x10]
  4097fa:	call   edx
  4097fc:	test   al,al
  4097fe:	je     0x409807
  409800:	mov    DWORD PTR [esi+0x2c],0x0
  409807:	lea    ecx,[esi+0xc]
  40980a:	mov    DWORD PTR [esi],0x4305f8
  409810:	call   DWORD PTR ds:0x43025c
  409816:	mov    ecx,esi
  409818:	pop    esi
  409819:	jmp    DWORD PTR ds:0x4303a8
  40981f:	int3   
  409820:	mov    DWORD PTR [esi],0x4315b8
  409826:	mov    DWORD PTR [esi+0x28],0x4315c4
  40982d:	mov    DWORD PTR [esi+0x28],0x430bd0
  409834:	mov    ecx,DWORD PTR [esi+0x2c]
  409837:	test   ecx,ecx
  409839:	je     0x40984d
  40983b:	mov    eax,DWORD PTR [ecx]
  40983d:	mov    edx,DWORD PTR [eax+0x10]
  409840:	call   edx
  409842:	test   al,al
  409844:	je     0x40984d
  409846:	mov    DWORD PTR [esi+0x2c],0x0
  40984d:	lea    ecx,[esi+0xc]
  409850:	mov    DWORD PTR [esi],0x4305f8
  409856:	call   DWORD PTR ds:0x43025c
  40985c:	mov    ecx,esi
  40985e:	jmp    DWORD PTR ds:0x4303a8
  409864:	int3   
  409865:	int3   
  409866:	int3   
  409867:	int3   
  409868:	int3   
  409869:	int3   
  40986a:	int3   
  40986b:	int3   
  40986c:	int3   
  40986d:	int3   
  40986e:	int3   
  40986f:	int3   
  409870:	sub    ecx,0x28
  409873:	jmp    0x409940
  409878:	int3   
  409879:	int3   
  40987a:	int3   
  40987b:	int3   
  40987c:	int3   
  40987d:	int3   
  40987e:	int3   
  40987f:	int3   
  409880:	push   0xffffffff
  409882:	push   0x42defb
  409887:	mov    eax,fs:0x0
  40988d:	push   eax
  40988e:	push   ecx
  40988f:	push   esi
  409890:	push   edi
  409891:	mov    eax,ds:0x43e020
  409896:	xor    eax,esp
  409898:	push   eax
  409899:	lea    eax,[esp+0x10]
  40989d:	mov    fs:0x0,eax
  4098a3:	mov    edi,ecx
  4098a5:	push   0x40
  4098a7:	call   0x425050
  4098ac:	mov    esi,eax
  4098ae:	add    esp,0x4
  4098b1:	mov    DWORD PTR [esp+0xc],esi
  4098b5:	xor    eax,eax
  4098b7:	mov    DWORD PTR [esp+0x18],eax
  4098bb:	cmp    esi,eax
  4098bd:	je     0x4098e6
  4098bf:	lea    eax,[edi-0x3c]
  4098c2:	push   eax
  4098c3:	mov    ecx,esi
  4098c5:	call   0x409a60
  4098ca:	lea    eax,[esi+0x3c]
  4098cd:	mov    DWORD PTR [eax],0x430bd8
  4098d3:	mov    DWORD PTR [esi],0x4315cc
  4098d9:	mov    DWORD PTR [esi+0x28],0x4315d8
  4098e0:	mov    DWORD PTR [eax],0x4315e0
  4098e6:	mov    ecx,DWORD PTR [esp+0x10]
  4098ea:	mov    DWORD PTR fs:0x0,ecx
  4098f1:	pop    ecx
  4098f2:	pop    edi
  4098f3:	pop    esi
  4098f4:	add    esp,0x10
  4098f7:	ret    
  4098f8:	int3   
  4098f9:	int3   
  4098fa:	int3   
  4098fb:	int3   
  4098fc:	int3   
  4098fd:	int3   
  4098fe:	int3   
  4098ff:	int3   
  409900:	push   ebp
  409901:	mov    ebp,esp
  409903:	and    esp,0xfffffff8
  409906:	sub    esp,0x40
  409909:	lea    eax,[ecx-0x3c]
  40990c:	push   eax
  40990d:	lea    ecx,[esp+0x4]
  409911:	call   0x409a60
  409916:	push   0x435c30
  40991b:	lea    eax,[esp+0x4]
  40991f:	push   eax
  409920:	mov    DWORD PTR [esp+0x8],0x4315cc
  409928:	mov    DWORD PTR [esp+0x30],0x4315d8
  409930:	mov    DWORD PTR [esp+0x44],0x4315e0
  409938:	call   0x429e76
  40993d:	int3   
  40993e:	int3   
  40993f:	int3   
  409940:	push   esi
  409941:	mov    esi,ecx
  409943:	mov    DWORD PTR [esi+0x3c],0x430bd8
  40994a:	mov    DWORD PTR [esi],0x4315b8
  409950:	mov    DWORD PTR [esi+0x28],0x4315c4
  409957:	mov    DWORD PTR [esi+0x28],0x430bd0
  40995e:	mov    ecx,DWORD PTR [esi+0x2c]
  409961:	test   ecx,ecx
  409963:	je     0x409977
  409965:	mov    eax,DWORD PTR [ecx]
  409967:	mov    edx,DWORD PTR [eax+0x10]
  40996a:	call   edx
  40996c:	test   al,al
  40996e:	je     0x409977
  409970:	mov    DWORD PTR [esi+0x2c],0x0
  409977:	lea    ecx,[esi+0xc]
  40997a:	mov    DWORD PTR [esi],0x4305f8
  409980:	call   DWORD PTR ds:0x43025c
  409986:	mov    ecx,esi
  409988:	call   DWORD PTR ds:0x4303a8
  40998e:	test   BYTE PTR [esp+0x8],0x1
  409993:	je     0x40999e
  409995:	push   esi
  409996:	call   0x42504a
  40999b:	add    esp,0x4
  40999e:	mov    eax,esi
  4099a0:	pop    esi
  4099a1:	ret    0x4
  4099a4:	int3   
  4099a5:	int3   
  4099a6:	int3   
  4099a7:	int3   
  4099a8:	int3   
  4099a9:	int3   
  4099aa:	int3   
  4099ab:	int3   
  4099ac:	int3   
  4099ad:	int3   
  4099ae:	int3   
  4099af:	int3   
  4099b0:	sub    ecx,0x3c
  4099b3:	jmp    0x409940
  4099b8:	int3   
  4099b9:	int3   
  4099ba:	int3   
  4099bb:	int3   
  4099bc:	int3   
  4099bd:	int3   
  4099be:	int3   
  4099bf:	int3   
  4099c0:	mov    eax,DWORD PTR [esp+0x4]
  4099c4:	push   esi
  4099c5:	push   eax
  4099c6:	mov    esi,ecx
  4099c8:	call   0x409a60
  4099cd:	mov    DWORD PTR [esi+0x3c],0x430bd8
  4099d4:	mov    DWORD PTR [esi],0x4315cc
  4099da:	mov    DWORD PTR [esi+0x28],0x4315d8
  4099e1:	mov    DWORD PTR [esi+0x3c],0x4315e0
  4099e8:	mov    eax,esi
  4099ea:	pop    esi
  4099eb:	ret    0x4
  4099ee:	int3   
  4099ef:	int3   
  4099f0:	push   esi
  4099f1:	mov    esi,ecx
  4099f3:	mov    DWORD PTR [esi],0x4315b8
  4099f9:	mov    DWORD PTR [esi+0x28],0x4315c4
  409a00:	mov    DWORD PTR [esi+0x28],0x430bd0
  409a07:	mov    ecx,DWORD PTR [esi+0x2c]
  409a0a:	test   ecx,ecx
  409a0c:	je     0x409a20
  409a0e:	mov    eax,DWORD PTR [ecx]
  409a10:	mov    edx,DWORD PTR [eax+0x10]
  409a13:	call   edx
  409a15:	test   al,al
  409a17:	je     0x409a20
  409a19:	mov    DWORD PTR [esi+0x2c],0x0
  409a20:	lea    ecx,[esi+0xc]
  409a23:	mov    DWORD PTR [esi],0x4305f8
  409a29:	call   DWORD PTR ds:0x43025c
  409a2f:	mov    ecx,esi
  409a31:	call   DWORD PTR ds:0x4303a8
  409a37:	test   BYTE PTR [esp+0x8],0x1
  409a3c:	je     0x409a47
  409a3e:	push   esi
  409a3f:	call   0x42504a
  409a44:	add    esp,0x4
  409a47:	mov    eax,esi
  409a49:	pop    esi
  409a4a:	ret    0x4
  409a4d:	int3   
  409a4e:	int3   
  409a4f:	int3   
  409a50:	sub    ecx,0x28
  409a53:	jmp    0x4099f0
  409a58:	int3   
  409a59:	int3   
  409a5a:	int3   
  409a5b:	int3   
  409a5c:	int3   
  409a5d:	int3   
  409a5e:	int3   
  409a5f:	int3   
  409a60:	push   0xffffffff
  409a62:	push   0x42ca08
  409a67:	mov    eax,fs:0x0
  409a6d:	push   eax
  409a6e:	push   ecx
  409a6f:	push   esi
  409a70:	push   edi
  409a71:	mov    eax,ds:0x43e020
  409a76:	xor    eax,esp
  409a78:	push   eax
  409a79:	lea    eax,[esp+0x10]
  409a7d:	mov    fs:0x0,eax
  409a83:	mov    esi,ecx
  409a85:	mov    DWORD PTR [esp+0xc],esi
  409a89:	mov    edi,DWORD PTR [esp+0x20]
  409a8d:	push   edi
  409a8e:	call   0x4028d0
  409a93:	mov    DWORD PTR [esi],0x4314cc
  409a99:	mov    DWORD PTR [esp+0x18],0x0
  409aa1:	test   edi,edi
  409aa3:	je     0x409aaa
  409aa5:	add    edi,0x28
  409aa8:	jmp    0x409aac
  409aaa:	xor    edi,edi
  409aac:	mov    DWORD PTR [esi+0x28],0x430bd0
  409ab3:	mov    ecx,DWORD PTR [edi+0x4]
  409ab6:	mov    DWORD PTR [esi+0x2c],ecx
  409ab9:	test   ecx,ecx
  409abb:	je     0x409ac4
  409abd:	mov    eax,DWORD PTR [ecx]
  409abf:	mov    edx,DWORD PTR [eax+0xc]
  409ac2:	call   edx
  409ac4:	mov    eax,DWORD PTR [edi+0x8]
  409ac7:	mov    DWORD PTR [esi+0x30],eax
  409aca:	mov    ecx,DWORD PTR [edi+0xc]
  409acd:	mov    DWORD PTR [esi+0x34],ecx
  409ad0:	mov    edx,DWORD PTR [edi+0x10]
  409ad3:	mov    DWORD PTR [esi+0x38],edx
  409ad6:	mov    DWORD PTR [esi],0x4315b8
  409adc:	mov    DWORD PTR [esi+0x28],0x4315c4
  409ae3:	mov    eax,esi
  409ae5:	mov    ecx,DWORD PTR [esp+0x10]
  409ae9:	mov    DWORD PTR fs:0x0,ecx
  409af0:	pop    ecx
  409af1:	pop    edi
  409af2:	pop    esi
  409af3:	add    esp,0x10
  409af6:	ret    0x4
  409af9:	int3   
  409afa:	int3   
  409afb:	int3   
  409afc:	int3   
  409afd:	int3   
  409afe:	int3   
  409aff:	int3   
  409b00:	mov    eax,DWORD PTR [esp+0x4]
  409b04:	push   esi
  409b05:	push   eax
  409b06:	mov    esi,ecx
  409b08:	call   0x4028d0
  409b0d:	mov    DWORD PTR [esi],0x4314cc
  409b13:	mov    eax,esi
  409b15:	pop    esi
  409b16:	ret    0x4
  409b19:	int3   
  409b1a:	int3   
  409b1b:	int3   
  409b1c:	int3   
  409b1d:	int3   
  409b1e:	int3   
  409b1f:	int3   
  409b20:	push   0xffffffff
  409b22:	push   0x42dd1b
  409b27:	mov    eax,fs:0x0
  409b2d:	push   eax
  409b2e:	sub    esp,0x80
  409b34:	push   ebx
  409b35:	push   esi
  409b36:	mov    eax,ds:0x43e020
  409b3b:	xor    eax,esp
  409b3d:	push   eax
  409b3e:	lea    eax,[esp+0x8c]
  409b45:	mov    fs:0x0,eax
  409b4b:	mov    eax,DWORD PTR [esp+0x9c]
  409b52:	lea    esi,[esp+0xc]
  409b56:	call   0x409790
  409b5b:	mov    ebx,eax
  409b5d:	lea    esi,[esp+0x48]
  409b61:	mov    DWORD PTR [esp+0x94],0x0
  409b6c:	call   0x409770
  409b71:	push   0x435c30
  409b76:	mov    eax,esi
  409b78:	push   eax
  409b79:	call   0x429e76
  409b7e:	int3   
  409b7f:	int3   
  409b80:	push   0xffffffff
  409b82:	push   0x42b741
  409b87:	mov    eax,fs:0x0
  409b8d:	push   eax
  409b8e:	sub    esp,0x1c
  409b91:	push   esi
  409b92:	mov    eax,ds:0x43e020
  409b97:	xor    eax,esp
  409b99:	push   eax
  409b9a:	lea    eax,[esp+0x24]
  409b9e:	mov    fs:0x0,eax
  409ba4:	mov    esi,DWORD PTR [esp+0x34]
  409ba8:	push   0x431404
  409bad:	lea    ecx,[esp+0xc]
  409bb1:	call   DWORD PTR ds:0x43011c
  409bb7:	push   eax
  409bb8:	mov    ecx,esi
  409bba:	mov    DWORD PTR [esp+0x30],0x0
  409bc2:	call   0x402940
  409bc7:	mov    DWORD PTR [esi],0x431490
  409bcd:	lea    ecx,[esp+0x8]
  409bd1:	mov    BYTE PTR [esp+0x2c],0x2
  409bd6:	call   DWORD PTR ds:0x43025c
  409bdc:	mov    DWORD PTR [esi],0x4314cc
  409be2:	mov    eax,esi
  409be4:	mov    ecx,DWORD PTR [esp+0x24]
  409be8:	mov    DWORD PTR fs:0x0,ecx
  409bef:	pop    ecx
  409bf0:	pop    esi
  409bf1:	add    esp,0x28
  409bf4:	ret    0x4
  409bf7:	int3   
  409bf8:	int3   
  409bf9:	int3   
  409bfa:	int3   
  409bfb:	int3   
  409bfc:	int3   
  409bfd:	int3   
  409bfe:	int3   
  409bff:	int3   
  409c00:	push   0xffffffff
  409c02:	push   0x42e388
  409c07:	mov    eax,fs:0x0
  409c0d:	push   eax
  409c0e:	sub    esp,0x2c
  409c11:	mov    eax,ds:0x43e020
  409c16:	xor    eax,esp
  409c18:	push   eax
  409c19:	lea    eax,[esp+0x30]
  409c1d:	mov    fs:0x0,eax
  409c23:	lea    eax,[esp+0x8]
  409c27:	push   eax
  409c28:	call   0x409b80
  409c2d:	push   eax
  409c2e:	mov    DWORD PTR [esp+0x3c],0x0
  409c36:	call   0x409b20
  409c3b:	int3   
  409c3c:	int3   
  409c3d:	int3   
  409c3e:	int3   
  409c3f:	int3   
  409c40:	push   0xffffffff
  409c42:	push   0x42c9e3
  409c47:	mov    eax,fs:0x0
  409c4d:	push   eax
  409c4e:	push   esi
  409c4f:	push   edi
  409c50:	mov    eax,ds:0x43e020
  409c55:	xor    eax,esp
  409c57:	push   eax
  409c58:	lea    eax,[esp+0xc]
  409c5c:	mov    fs:0x0,eax
  409c62:	mov    esi,DWORD PTR [esp+0x1c]
  409c66:	push   ebx
  409c67:	mov    ecx,esi
  409c69:	call   0x409fc0
  409c6e:	xor    eax,eax
  409c70:	mov    DWORD PTR [esp+0x14],eax
  409c74:	mov    DWORD PTR [esi+0x3c],0x430bd8
  409c7b:	mov    BYTE PTR [esp+0x14],0x1
  409c80:	lea    edi,[esi+0x28]
  409c83:	mov    DWORD PTR [esi],0x431594
  409c89:	mov    DWORD PTR [edi],0x4315a0
  409c8f:	mov    DWORD PTR [esi+0x3c],0x4315a8
  409c96:	cmp    ebx,eax
  409c98:	je     0x409c9d
  409c9a:	lea    eax,[ebx+0x28]
  409c9d:	push   eax
  409c9e:	call   0x402b50
  409ca3:	add    esp,0x4
  409ca6:	mov    eax,esi
  409ca8:	mov    ecx,DWORD PTR [esp+0xc]
  409cac:	mov    DWORD PTR fs:0x0,ecx
  409cb3:	pop    ecx
  409cb4:	pop    edi
  409cb5:	pop    esi
  409cb6:	add    esp,0xc
  409cb9:	ret    0x4
  409cbc:	int3   
  409cbd:	int3   
  409cbe:	int3   
  409cbf:	int3   
  409cc0:	push   ecx
  409cc1:	push   esi
  409cc2:	mov    DWORD PTR [esp+0x4],0x0
  409cca:	call   0x409c40
  409ccf:	mov    eax,esi
  409cd1:	pop    ecx
  409cd2:	ret    
  409cd3:	int3   
  409cd4:	int3   
  409cd5:	int3   
  409cd6:	int3   
  409cd7:	int3   
  409cd8:	int3   
  409cd9:	int3   
  409cda:	int3   
  409cdb:	int3   
  409cdc:	int3   
  409cdd:	int3   
  409cde:	int3   
  409cdf:	int3   
  409ce0:	push   ecx
  409ce1:	push   edi
  409ce2:	xor    edi,edi
  409ce4:	push   eax
  409ce5:	mov    ecx,esi
  409ce7:	mov    DWORD PTR [esp+0x8],edi
  409ceb:	call   0x4028d0
  409cf0:	mov    DWORD PTR [esi+0x28],0x430bd0
  409cf7:	mov    DWORD PTR [esi+0x2c],edi
  409cfa:	mov    DWORD PTR [esi+0x30],edi
  409cfd:	mov    DWORD PTR [esi+0x34],edi
  409d00:	mov    DWORD PTR [esi+0x38],0xffffffff
  409d07:	mov    DWORD PTR [esi],0x431580
  409d0d:	mov    DWORD PTR [esi+0x28],0x43158c
  409d14:	mov    eax,esi
  409d16:	pop    edi
  409d17:	pop    ecx
  409d18:	ret    
  409d19:	int3   
  409d1a:	int3   
  409d1b:	int3   
  409d1c:	int3   
  409d1d:	int3   
  409d1e:	int3   
  409d1f:	int3   
  409d20:	push   esi
  409d21:	mov    esi,ecx
  409d23:	mov    DWORD PTR [esi+0x3c],0x430bd8
  409d2a:	mov    DWORD PTR [esi],0x431580
  409d30:	mov    DWORD PTR [esi+0x28],0x43158c
  409d37:	mov    DWORD PTR [esi+0x28],0x430bd0
  409d3e:	mov    ecx,DWORD PTR [esi+0x2c]
  409d41:	test   ecx,ecx
  409d43:	je     0x409d57
  409d45:	mov    eax,DWORD PTR [ecx]
  409d47:	mov    edx,DWORD PTR [eax+0x10]
  409d4a:	call   edx
  409d4c:	test   al,al
  409d4e:	je     0x409d57
  409d50:	mov    DWORD PTR [esi+0x2c],0x0
  409d57:	lea    ecx,[esi+0xc]
  409d5a:	mov    DWORD PTR [esi],0x4305f8
  409d60:	call   DWORD PTR ds:0x43025c
  409d66:	mov    ecx,esi
  409d68:	pop    esi
  409d69:	jmp    DWORD PTR ds:0x4303a8
  409d6f:	int3   
  409d70:	mov    DWORD PTR [esi],0x431580
  409d76:	mov    DWORD PTR [esi+0x28],0x43158c
  409d7d:	mov    DWORD PTR [esi+0x28],0x430bd0
  409d84:	mov    ecx,DWORD PTR [esi+0x2c]
  409d87:	test   ecx,ecx
  409d89:	je     0x409d9d
  409d8b:	mov    eax,DWORD PTR [ecx]
  409d8d:	mov    edx,DWORD PTR [eax+0x10]
  409d90:	call   edx
  409d92:	test   al,al
  409d94:	je     0x409d9d
  409d96:	mov    DWORD PTR [esi+0x2c],0x0
  409d9d:	lea    ecx,[esi+0xc]
  409da0:	mov    DWORD PTR [esi],0x4305f8
  409da6:	call   DWORD PTR ds:0x43025c
  409dac:	mov    ecx,esi
  409dae:	jmp    DWORD PTR ds:0x4303a8
  409db4:	int3   
  409db5:	int3   
  409db6:	int3   
  409db7:	int3   
  409db8:	int3   
  409db9:	int3   
  409dba:	int3   
  409dbb:	int3   
  409dbc:	int3   
  409dbd:	int3   
  409dbe:	int3   
  409dbf:	int3   
  409dc0:	sub    ecx,0x28
  409dc3:	jmp    0x409e90
  409dc8:	int3   
  409dc9:	int3   
  409dca:	int3   
  409dcb:	int3   
  409dcc:	int3   
  409dcd:	int3   
  409dce:	int3   
  409dcf:	int3   
  409dd0:	push   0xffffffff
  409dd2:	push   0x42defb
  409dd7:	mov    eax,fs:0x0
  409ddd:	push   eax
  409dde:	push   ecx
  409ddf:	push   esi
  409de0:	push   edi
  409de1:	mov    eax,ds:0x43e020
  409de6:	xor    eax,esp
  409de8:	push   eax
  409de9:	lea    eax,[esp+0x10]
  409ded:	mov    fs:0x0,eax
  409df3:	mov    edi,ecx
  409df5:	push   0x40
  409df7:	call   0x425050
  409dfc:	mov    esi,eax
  409dfe:	add    esp,0x4
  409e01:	mov    DWORD PTR [esp+0xc],esi
  409e05:	xor    eax,eax
  409e07:	mov    DWORD PTR [esp+0x18],eax
  409e0b:	cmp    esi,eax
  409e0d:	je     0x409e36
  409e0f:	lea    eax,[edi-0x3c]
  409e12:	push   eax
  409e13:	mov    ecx,esi
  409e15:	call   0x409fc0
  409e1a:	lea    eax,[esi+0x3c]
  409e1d:	mov    DWORD PTR [eax],0x430bd8
  409e23:	mov    DWORD PTR [esi],0x431594
  409e29:	mov    DWORD PTR [esi+0x28],0x4315a0
  409e30:	mov    DWORD PTR [eax],0x4315a8
  409e36:	mov    ecx,DWORD PTR [esp+0x10]
  409e3a:	mov    DWORD PTR fs:0x0,ecx
  409e41:	pop    ecx
  409e42:	pop    edi
  409e43:	pop    esi
  409e44:	add    esp,0x10
  409e47:	ret    
  409e48:	int3   
  409e49:	int3   
  409e4a:	int3   
  409e4b:	int3   
  409e4c:	int3   
  409e4d:	int3   
  409e4e:	int3   
  409e4f:	int3   
  409e50:	push   ebp
  409e51:	mov    ebp,esp
  409e53:	and    esp,0xfffffff8
  409e56:	sub    esp,0x40
  409e59:	lea    eax,[ecx-0x3c]
  409e5c:	push   eax
  409e5d:	lea    ecx,[esp+0x4]
  409e61:	call   0x409fc0
  409e66:	push   0x435ba8
  409e6b:	lea    eax,[esp+0x4]
  409e6f:	push   eax
  409e70:	mov    DWORD PTR [esp+0x8],0x431594
  409e78:	mov    DWORD PTR [esp+0x30],0x4315a0
  409e80:	mov    DWORD PTR [esp+0x44],0x4315a8
  409e88:	call   0x429e76
  409e8d:	int3   
  409e8e:	int3   
  409e8f:	int3   
  409e90:	push   esi
  409e91:	mov    esi,ecx
  409e93:	mov    DWORD PTR [esi+0x3c],0x430bd8
  409e9a:	mov    DWORD PTR [esi],0x431580
  409ea0:	mov    DWORD PTR [esi+0x28],0x43158c
  409ea7:	mov    DWORD PTR [esi+0x28],0x430bd0
  409eae:	mov    ecx,DWORD PTR [esi+0x2c]
  409eb1:	test   ecx,ecx
  409eb3:	je     0x409ec7
  409eb5:	mov    eax,DWORD PTR [ecx]
  409eb7:	mov    edx,DWORD PTR [eax+0x10]
  409eba:	call   edx
  409ebc:	test   al,al
  409ebe:	je     0x409ec7
  409ec0:	mov    DWORD PTR [esi+0x2c],0x0
  409ec7:	lea    ecx,[esi+0xc]
  409eca:	mov    DWORD PTR [esi],0x4305f8
  409ed0:	call   DWORD PTR ds:0x43025c
  409ed6:	mov    ecx,esi
  409ed8:	call   DWORD PTR ds:0x4303a8
  409ede:	test   BYTE PTR [esp+0x8],0x1
  409ee3:	je     0x409eee
  409ee5:	push   esi
  409ee6:	call   0x42504a
  409eeb:	add    esp,0x4
  409eee:	mov    eax,esi
  409ef0:	pop    esi
  409ef1:	ret    0x4
  409ef4:	int3   
  409ef5:	int3   
  409ef6:	int3   
  409ef7:	int3   
  409ef8:	int3   
  409ef9:	int3   
  409efa:	int3   
  409efb:	int3   
  409efc:	int3   
  409efd:	int3   
  409efe:	int3   
  409eff:	int3   
  409f00:	sub    ecx,0x3c
  409f03:	jmp    0x409e90
  409f08:	int3   
  409f09:	int3   
  409f0a:	int3   
  409f0b:	int3   
  409f0c:	int3   
  409f0d:	int3   
  409f0e:	int3   
  409f0f:	int3   
  409f10:	mov    eax,DWORD PTR [esp+0x4]
  409f14:	push   esi
  409f15:	push   eax
  409f16:	mov    esi,ecx
  409f18:	call   0x409fc0
  409f1d:	mov    DWORD PTR [esi+0x3c],0x430bd8
  409f24:	mov    DWORD PTR [esi],0x431594
  409f2a:	mov    DWORD PTR [esi+0x28],0x4315a0
  409f31:	mov    DWORD PTR [esi+0x3c],0x4315a8
  409f38:	mov    eax,esi
  409f3a:	pop    esi
  409f3b:	ret    0x4
  409f3e:	int3   
  409f3f:	int3   
  409f40:	push   esi
  409f41:	mov    esi,ecx
  409f43:	mov    DWORD PTR [esi],0x431580
  409f49:	mov    DWORD PTR [esi+0x28],0x43158c
  409f50:	mov    DWORD PTR [esi+0x28],0x430bd0
  409f57:	mov    ecx,DWORD PTR [esi+0x2c]
  409f5a:	test   ecx,ecx
  409f5c:	je     0x409f70
  409f5e:	mov    eax,DWORD PTR [ecx]
  409f60:	mov    edx,DWORD PTR [eax+0x10]
  409f63:	call   edx
  409f65:	test   al,al
  409f67:	je     0x409f70
  409f69:	mov    DWORD PTR [esi+0x2c],0x0
  409f70:	lea    ecx,[esi+0xc]
  409f73:	mov    DWORD PTR [esi],0x4305f8
  409f79:	call   DWORD PTR ds:0x43025c
  409f7f:	mov    ecx,esi
  409f81:	call   DWORD PTR ds:0x4303a8
  409f87:	test   BYTE PTR [esp+0x8],0x1
  409f8c:	je     0x409f97
  409f8e:	push   esi
  409f8f:	call   0x42504a
  409f94:	add    esp,0x4
  409f97:	mov    eax,esi
  409f99:	pop    esi
  409f9a:	ret    0x4
  409f9d:	int3   
  409f9e:	int3   
  409f9f:	int3   
  409fa0:	sub    ecx,0x28
  409fa3:	jmp    0x409f40
  409fa8:	int3   
  409fa9:	int3   
  409faa:	int3   
  409fab:	int3   
  409fac:	int3   
  409fad:	int3   
  409fae:	int3   
  409faf:	int3   
  409fb0:	int3   
  409fb1:	int3   
  409fb2:	int3   
  409fb3:	int3   
  409fb4:	int3   
  409fb5:	int3   
  409fb6:	int3   
  409fb7:	int3   
  409fb8:	int3   
  409fb9:	int3   
  409fba:	int3   
  409fbb:	int3   
  409fbc:	int3   
  409fbd:	int3   
  409fbe:	int3   
  409fbf:	int3   
  409fc0:	push   0xffffffff
  409fc2:	push   0x42ca08
  409fc7:	mov    eax,fs:0x0
  409fcd:	push   eax
  409fce:	push   ecx
  409fcf:	push   esi
  409fd0:	push   edi
  409fd1:	mov    eax,ds:0x43e020
  409fd6:	xor    eax,esp
  409fd8:	push   eax
  409fd9:	lea    eax,[esp+0x10]
  409fdd:	mov    fs:0x0,eax
  409fe3:	mov    esi,ecx
  409fe5:	mov    DWORD PTR [esp+0xc],esi
  409fe9:	mov    edi,DWORD PTR [esp+0x20]
  409fed:	push   edi
  409fee:	call   0x4028d0
  409ff3:	mov    DWORD PTR [esi],0x4314c0
  409ff9:	mov    DWORD PTR [esp+0x18],0x0
  40a001:	test   edi,edi
  40a003:	je     0x40a00a
  40a005:	add    edi,0x28
  40a008:	jmp    0x40a00c
  40a00a:	xor    edi,edi
  40a00c:	mov    DWORD PTR [esi+0x28],0x430bd0
  40a013:	mov    ecx,DWORD PTR [edi+0x4]
  40a016:	mov    DWORD PTR [esi+0x2c],ecx
  40a019:	test   ecx,ecx
  40a01b:	je     0x40a024
  40a01d:	mov    eax,DWORD PTR [ecx]
  40a01f:	mov    edx,DWORD PTR [eax+0xc]
  40a022:	call   edx
  40a024:	mov    eax,DWORD PTR [edi+0x8]
  40a027:	mov    DWORD PTR [esi+0x30],eax
  40a02a:	mov    ecx,DWORD PTR [edi+0xc]
  40a02d:	mov    DWORD PTR [esi+0x34],ecx
  40a030:	mov    edx,DWORD PTR [edi+0x10]
  40a033:	mov    DWORD PTR [esi+0x38],edx
  40a036:	mov    DWORD PTR [esi],0x431580
  40a03c:	mov    DWORD PTR [esi+0x28],0x43158c
  40a043:	mov    eax,esi
  40a045:	mov    ecx,DWORD PTR [esp+0x10]
  40a049:	mov    DWORD PTR fs:0x0,ecx
  40a050:	pop    ecx
  40a051:	pop    edi
  40a052:	pop    esi
  40a053:	add    esp,0x10
  40a056:	ret    0x4
  40a059:	int3   
  40a05a:	int3   
  40a05b:	int3   
  40a05c:	int3   
  40a05d:	int3   
  40a05e:	int3   
  40a05f:	int3   
  40a060:	mov    eax,DWORD PTR [esp+0x4]
  40a064:	push   esi
  40a065:	push   eax
  40a066:	mov    esi,ecx
  40a068:	call   0x4028d0
  40a06d:	mov    DWORD PTR [esi],0x4314c0
  40a073:	mov    eax,esi
  40a075:	pop    esi
  40a076:	ret    0x4
  40a079:	int3   
  40a07a:	int3   
  40a07b:	int3   
  40a07c:	int3   
  40a07d:	int3   
  40a07e:	int3   
  40a07f:	int3   
  40a080:	mov    eax,DWORD PTR [esp+0x4]
  40a084:	push   esi
  40a085:	push   eax
  40a086:	mov    esi,ecx
  40a088:	call   0x4028d0
  40a08d:	mov    DWORD PTR [esi],0x431490
  40a093:	mov    eax,esi
  40a095:	pop    esi
  40a096:	ret    0x4
  40a099:	int3   
  40a09a:	int3   
  40a09b:	int3   
  40a09c:	int3   
  40a09d:	int3   
  40a09e:	int3   
  40a09f:	int3   
  40a0a0:	push   0xffffffff
  40a0a2:	push   0x42dceb
  40a0a7:	mov    eax,fs:0x0
  40a0ad:	push   eax
  40a0ae:	sub    esp,0x80
  40a0b4:	push   ebx
  40a0b5:	push   esi
  40a0b6:	mov    eax,ds:0x43e020
  40a0bb:	xor    eax,esp
  40a0bd:	push   eax
  40a0be:	lea    eax,[esp+0x8c]
  40a0c5:	mov    fs:0x0,eax
  40a0cb:	mov    eax,DWORD PTR [esp+0x9c]
  40a0d2:	lea    esi,[esp+0xc]
  40a0d6:	call   0x409ce0
  40a0db:	mov    ebx,eax
  40a0dd:	lea    esi,[esp+0x48]
  40a0e1:	mov    DWORD PTR [esp+0x94],0x0
  40a0ec:	call   0x409cc0
  40a0f1:	push   0x435ba8
  40a0f6:	mov    eax,esi
  40a0f8:	push   eax
  40a0f9:	call   0x429e76
  40a0fe:	int3   
  40a0ff:	int3   
  40a100:	push   0xffffffff
  40a102:	push   0x42b741
  40a107:	mov    eax,fs:0x0
  40a10d:	push   eax
  40a10e:	sub    esp,0x1c
  40a111:	push   esi
  40a112:	mov    eax,ds:0x43e020
  40a117:	xor    eax,esp
  40a119:	push   eax
  40a11a:	lea    eax,[esp+0x24]
  40a11e:	mov    fs:0x0,eax
  40a124:	mov    esi,DWORD PTR [esp+0x34]
  40a128:	push   0x4313dc
  40a12d:	lea    ecx,[esp+0xc]
  40a131:	call   DWORD PTR ds:0x43011c
  40a137:	push   eax
  40a138:	mov    ecx,esi
  40a13a:	mov    DWORD PTR [esp+0x30],0x0
  40a142:	call   0x402940
  40a147:	mov    DWORD PTR [esi],0x431490
  40a14d:	lea    ecx,[esp+0x8]
  40a151:	mov    BYTE PTR [esp+0x2c],0x2
  40a156:	call   DWORD PTR ds:0x43025c
  40a15c:	mov    DWORD PTR [esi],0x4314c0
  40a162:	mov    eax,esi
  40a164:	mov    ecx,DWORD PTR [esp+0x24]
  40a168:	mov    DWORD PTR fs:0x0,ecx
  40a16f:	pop    ecx
  40a170:	pop    esi
  40a171:	add    esp,0x28
  40a174:	ret    0x4
  40a177:	int3   
  40a178:	int3   
  40a179:	int3   
  40a17a:	int3   
  40a17b:	int3   
  40a17c:	int3   
  40a17d:	int3   
  40a17e:	int3   
  40a17f:	int3   
  40a180:	lea    ecx,[esi+0xc]
  40a183:	mov    DWORD PTR [esi],0x4305f8
  40a189:	call   DWORD PTR ds:0x43025c
  40a18f:	mov    ecx,esi
  40a191:	jmp    DWORD PTR ds:0x4303a8
  40a197:	int3   
  40a198:	int3   
  40a199:	int3   
  40a19a:	int3   
  40a19b:	int3   
  40a19c:	int3   
  40a19d:	int3   
  40a19e:	int3   
  40a19f:	int3   
  40a1a0:	push   0xffffffff
  40a1a2:	push   0x42e388
  40a1a7:	mov    eax,fs:0x0
  40a1ad:	push   eax
  40a1ae:	sub    esp,0x2c
  40a1b1:	mov    eax,ds:0x43e020
  40a1b6:	xor    eax,esp
  40a1b8:	push   eax
  40a1b9:	lea    eax,[esp+0x30]
  40a1bd:	mov    fs:0x0,eax
  40a1c3:	lea    eax,[esp+0x8]
  40a1c7:	push   eax
  40a1c8:	call   0x40a100
  40a1cd:	push   eax
  40a1ce:	mov    DWORD PTR [esp+0x3c],0x0
  40a1d6:	call   0x40a0a0
  40a1db:	int3   
  40a1dc:	int3   
  40a1dd:	int3   
  40a1de:	int3   
  40a1df:	int3   
  40a1e0:	push   0xffffffff
  40a1e2:	push   0x42c9b3
  40a1e7:	mov    eax,fs:0x0
  40a1ed:	push   eax
  40a1ee:	push   esi
  40a1ef:	push   edi
  40a1f0:	mov    eax,ds:0x43e020
  40a1f5:	xor    eax,esp
  40a1f7:	push   eax
  40a1f8:	lea    eax,[esp+0xc]
  40a1fc:	mov    fs:0x0,eax
  40a202:	mov    esi,DWORD PTR [esp+0x1c]
  40a206:	push   ebx
  40a207:	mov    ecx,esi
  40a209:	call   0x40a550
  40a20e:	xor    eax,eax
  40a210:	mov    DWORD PTR [esp+0x14],eax
  40a214:	mov    DWORD PTR [esi+0x24],0x430bd8
  40a21b:	mov    BYTE PTR [esp+0x14],0x1
  40a220:	lea    edi,[esi+0x10]
  40a223:	mov    DWORD PTR [esi],0x43155c
  40a229:	mov    DWORD PTR [edi],0x431568
  40a22f:	mov    DWORD PTR [esi+0x24],0x431570
  40a236:	cmp    ebx,eax
  40a238:	je     0x40a23d
  40a23a:	lea    eax,[ebx+0x10]
  40a23d:	push   eax
  40a23e:	call   0x402b50
  40a243:	add    esp,0x4
  40a246:	mov    eax,esi
  40a248:	mov    ecx,DWORD PTR [esp+0xc]
  40a24c:	mov    DWORD PTR fs:0x0,ecx
  40a253:	pop    ecx
  40a254:	pop    edi
  40a255:	pop    esi
  40a256:	add    esp,0xc
  40a259:	ret    0x4
  40a25c:	int3   
  40a25d:	int3   
  40a25e:	int3   
  40a25f:	int3   
  40a260:	push   ecx
  40a261:	push   esi
  40a262:	mov    DWORD PTR [esp+0x4],0x0
  40a26a:	call   0x40a1e0
  40a26f:	mov    eax,esi
  40a271:	pop    ecx
  40a272:	ret    
  40a273:	int3   
  40a274:	int3   
  40a275:	int3   
  40a276:	int3   
  40a277:	int3   
  40a278:	int3   
  40a279:	int3   
  40a27a:	int3   
  40a27b:	int3   
  40a27c:	int3   
  40a27d:	int3   
  40a27e:	int3   
  40a27f:	int3   
  40a280:	push   ecx
  40a281:	push   ebx
  40a282:	xor    ebx,ebx
  40a284:	push   edi
  40a285:	mov    ecx,esi
  40a287:	mov    DWORD PTR [esp+0x8],ebx
  40a28b:	call   DWORD PTR ds:0x4303a0
  40a291:	mov    DWORD PTR [esi],0x430be8
  40a297:	mov    eax,DWORD PTR [edi+0xc]
  40a29a:	mov    DWORD PTR [esi+0xc],eax
  40a29d:	mov    DWORD PTR [esi+0x10],0x430bd0
  40a2a4:	mov    DWORD PTR [esi+0x14],ebx
  40a2a7:	mov    DWORD PTR [esi+0x18],ebx
  40a2aa:	mov    DWORD PTR [esi+0x1c],ebx
  40a2ad:	mov    DWORD PTR [esi+0x20],0xffffffff
  40a2b4:	mov    DWORD PTR [esi],0x431548
  40a2ba:	mov    DWORD PTR [esi+0x10],0x431554
  40a2c1:	mov    eax,esi
  40a2c3:	pop    ebx
  40a2c4:	pop    ecx
  40a2c5:	ret    
  40a2c6:	int3   
  40a2c7:	int3   
  40a2c8:	int3   
  40a2c9:	int3   
  40a2ca:	int3   
  40a2cb:	int3   
  40a2cc:	int3   
  40a2cd:	int3   
  40a2ce:	int3   
  40a2cf:	int3   
  40a2d0:	push   esi
  40a2d1:	mov    esi,ecx
  40a2d3:	mov    DWORD PTR [esi+0x24],0x430bd8
  40a2da:	mov    DWORD PTR [esi],0x431548
  40a2e0:	mov    DWORD PTR [esi+0x10],0x431554
  40a2e7:	mov    DWORD PTR [esi+0x10],0x430bd0
  40a2ee:	mov    ecx,DWORD PTR [esi+0x14]
  40a2f1:	test   ecx,ecx
  40a2f3:	je     0x40a307
  40a2f5:	mov    eax,DWORD PTR [ecx]
  40a2f7:	mov    edx,DWORD PTR [eax+0x10]
  40a2fa:	call   edx
  40a2fc:	test   al,al
  40a2fe:	je     0x40a307
  40a300:	mov    DWORD PTR [esi+0x14],0x0
  40a307:	mov    DWORD PTR [esi],0x430be8
  40a30d:	mov    ecx,esi
  40a30f:	pop    esi
  40a310:	jmp    DWORD PTR ds:0x4303a8
  40a316:	int3   
  40a317:	int3   
  40a318:	int3   
  40a319:	int3   
  40a31a:	int3   
  40a31b:	int3   
  40a31c:	int3   
  40a31d:	int3   
  40a31e:	int3   
  40a31f:	int3   
  40a320:	mov    DWORD PTR [esi],0x431548
  40a326:	mov    DWORD PTR [esi+0x10],0x431554
  40a32d:	mov    DWORD PTR [esi+0x10],0x430bd0
  40a334:	mov    ecx,DWORD PTR [esi+0x14]
  40a337:	test   ecx,ecx
  40a339:	je     0x40a34d
  40a33b:	mov    eax,DWORD PTR [ecx]
  40a33d:	mov    edx,DWORD PTR [eax+0x10]
  40a340:	call   edx
  40a342:	test   al,al
  40a344:	je     0x40a34d
  40a346:	mov    DWORD PTR [esi+0x14],0x0
  40a34d:	mov    DWORD PTR [esi],0x430be8
  40a353:	mov    ecx,esi
  40a355:	jmp    DWORD PTR ds:0x4303a8
  40a35b:	int3   
  40a35c:	int3   
  40a35d:	int3   
  40a35e:	int3   
  40a35f:	int3   
  40a360:	sub    ecx,0x10
  40a363:	jmp    0x40a430
  40a368:	int3   
  40a369:	int3   
  40a36a:	int3   
  40a36b:	int3   
  40a36c:	int3   
  40a36d:	int3   
  40a36e:	int3   
  40a36f:	int3   
  40a370:	push   0xffffffff
  40a372:	push   0x42defb
  40a377:	mov    eax,fs:0x0
  40a37d:	push   eax
  40a37e:	push   ecx
  40a37f:	push   esi
  40a380:	push   edi
  40a381:	mov    eax,ds:0x43e020
  40a386:	xor    eax,esp
  40a388:	push   eax
  40a389:	lea    eax,[esp+0x10]
  40a38d:	mov    fs:0x0,eax
  40a393:	mov    edi,ecx
  40a395:	push   0x28
  40a397:	call   0x425050
  40a39c:	mov    esi,eax
  40a39e:	add    esp,0x4
  40a3a1:	mov    DWORD PTR [esp+0xc],esi
  40a3a5:	xor    eax,eax
  40a3a7:	mov    DWORD PTR [esp+0x18],eax
  40a3ab:	cmp    esi,eax
  40a3ad:	je     0x40a3d6
  40a3af:	lea    eax,[edi-0x24]
  40a3b2:	push   eax
  40a3b3:	mov    ecx,esi
  40a3b5:	call   0x40a550
  40a3ba:	lea    eax,[esi+0x24]
  40a3bd:	mov    DWORD PTR [eax],0x430bd8
  40a3c3:	mov    DWORD PTR [esi],0x43155c
  40a3c9:	mov    DWORD PTR [esi+0x10],0x431568
  40a3d0:	mov    DWORD PTR [eax],0x431570
  40a3d6:	mov    ecx,DWORD PTR [esp+0x10]
  40a3da:	mov    DWORD PTR fs:0x0,ecx
  40a3e1:	pop    ecx
  40a3e2:	pop    edi
  40a3e3:	pop    esi
  40a3e4:	add    esp,0x10
  40a3e7:	ret    
  40a3e8:	int3   
  40a3e9:	int3   
  40a3ea:	int3   
  40a3eb:	int3   
  40a3ec:	int3   
  40a3ed:	int3   
  40a3ee:	int3   
  40a3ef:	int3   
  40a3f0:	push   ebp
  40a3f1:	mov    ebp,esp
  40a3f3:	and    esp,0xfffffff8
  40a3f6:	sub    esp,0x28
  40a3f9:	lea    eax,[ecx-0x24]
  40a3fc:	push   eax
  40a3fd:	lea    ecx,[esp+0x4]
  40a401:	call   0x40a550
  40a406:	push   0x435b20
  40a40b:	lea    eax,[esp+0x4]
  40a40f:	push   eax
  40a410:	mov    DWORD PTR [esp+0x8],0x43155c
  40a418:	mov    DWORD PTR [esp+0x18],0x431568
  40a420:	mov    DWORD PTR [esp+0x2c],0x431570
  40a428:	call   0x429e76
  40a42d:	int3   
  40a42e:	int3   
  40a42f:	int3   
  40a430:	push   esi
  40a431:	mov    esi,ecx
  40a433:	mov    DWORD PTR [esi+0x24],0x430bd8
  40a43a:	mov    DWORD PTR [esi],0x431548
  40a440:	mov    DWORD PTR [esi+0x10],0x431554
  40a447:	mov    DWORD PTR [esi+0x10],0x430bd0
  40a44e:	mov    ecx,DWORD PTR [esi+0x14]
  40a451:	test   ecx,ecx
  40a453:	je     0x40a467
  40a455:	mov    eax,DWORD PTR [ecx]
  40a457:	mov    edx,DWORD PTR [eax+0x10]
  40a45a:	call   edx
  40a45c:	test   al,al
  40a45e:	je     0x40a467
  40a460:	mov    DWORD PTR [esi+0x14],0x0
  40a467:	mov    ecx,esi
  40a469:	mov    DWORD PTR [esi],0x430be8
  40a46f:	call   DWORD PTR ds:0x4303a8
  40a475:	test   BYTE PTR [esp+0x8],0x1
  40a47a:	je     0x40a485
  40a47c:	push   esi
  40a47d:	call   0x42504a
  40a482:	add    esp,0x4
  40a485:	mov    eax,esi
  40a487:	pop    esi
  40a488:	ret    0x4
  40a48b:	int3   
  40a48c:	int3   
  40a48d:	int3   
  40a48e:	int3   
  40a48f:	int3   
  40a490:	sub    ecx,0x24
  40a493:	jmp    0x40a430
  40a498:	int3   
  40a499:	int3   
  40a49a:	int3   
  40a49b:	int3   
  40a49c:	int3   
  40a49d:	int3   
  40a49e:	int3   
  40a49f:	int3   
  40a4a0:	mov    eax,DWORD PTR [esp+0x4]
  40a4a4:	push   esi
  40a4a5:	push   eax
  40a4a6:	mov    esi,ecx
  40a4a8:	call   0x40a550
  40a4ad:	mov    DWORD PTR [esi+0x24],0x430bd8
  40a4b4:	mov    DWORD PTR [esi],0x43155c
  40a4ba:	mov    DWORD PTR [esi+0x10],0x431568
  40a4c1:	mov    DWORD PTR [esi+0x24],0x431570
  40a4c8:	mov    eax,esi
  40a4ca:	pop    esi
  40a4cb:	ret    0x4
  40a4ce:	int3   
  40a4cf:	int3   
  40a4d0:	mov    DWORD PTR [ecx],0x430be8
  40a4d6:	jmp    DWORD PTR ds:0x4303a8
  40a4dc:	int3   
  40a4dd:	int3   
  40a4de:	int3   
  40a4df:	int3   
  40a4e0:	push   esi
  40a4e1:	mov    esi,ecx
  40a4e3:	mov    DWORD PTR [esi],0x431548
  40a4e9:	mov    DWORD PTR [esi+0x10],0x431554
  40a4f0:	mov    DWORD PTR [esi+0x10],0x430bd0
  40a4f7:	mov    ecx,DWORD PTR [esi+0x14]
  40a4fa:	test   ecx,ecx
  40a4fc:	je     0x40a510
  40a4fe:	mov    eax,DWORD PTR [ecx]
  40a500:	mov    edx,DWORD PTR [eax+0x10]
  40a503:	call   edx
  40a505:	test   al,al
  40a507:	je     0x40a510
  40a509:	mov    DWORD PTR [esi+0x14],0x0
  40a510:	mov    ecx,esi
  40a512:	mov    DWORD PTR [esi],0x430be8
  40a518:	call   DWORD PTR ds:0x4303a8
  40a51e:	test   BYTE PTR [esp+0x8],0x1
  40a523:	je     0x40a52e
  40a525:	push   esi
  40a526:	call   0x42504a
  40a52b:	add    esp,0x4
  40a52e:	mov    eax,esi
  40a530:	pop    esi
  40a531:	ret    0x4
  40a534:	int3   
  40a535:	int3   
  40a536:	int3   
  40a537:	int3   
  40a538:	int3   
  40a539:	int3   
  40a53a:	int3   
  40a53b:	int3   
  40a53c:	int3   
  40a53d:	int3   
  40a53e:	int3   
  40a53f:	int3   
  40a540:	sub    ecx,0x10
  40a543:	jmp    0x40a4e0
  40a548:	int3   
  40a549:	int3   
  40a54a:	int3   
  40a54b:	int3   
  40a54c:	int3   
  40a54d:	int3   
  40a54e:	int3   
  40a54f:	int3   
  40a550:	push   0xffffffff
  40a552:	push   0x42c978
  40a557:	mov    eax,fs:0x0
  40a55d:	push   eax
  40a55e:	push   ecx
  40a55f:	push   esi
  40a560:	push   edi
  40a561:	mov    eax,ds:0x43e020
  40a566:	xor    eax,esp
  40a568:	push   eax
  40a569:	lea    eax,[esp+0x10]
  40a56d:	mov    fs:0x0,eax
  40a573:	mov    esi,ecx
  40a575:	mov    DWORD PTR [esp+0xc],esi
  40a579:	mov    edi,DWORD PTR [esp+0x20]
  40a57d:	push   edi
  40a57e:	call   DWORD PTR ds:0x4303a0
  40a584:	mov    DWORD PTR [esi],0x430be8
  40a58a:	mov    eax,DWORD PTR [edi+0xc]
  40a58d:	mov    DWORD PTR [esi+0xc],eax
  40a590:	mov    DWORD PTR [esi],0x4314a8
  40a596:	mov    DWORD PTR [esp+0x18],0x0
  40a59e:	mov    DWORD PTR [esi+0x10],0x430bd0
  40a5a5:	mov    ecx,DWORD PTR [edi+0x14]
  40a5a8:	mov    DWORD PTR [esi+0x14],ecx
  40a5ab:	test   ecx,ecx
  40a5ad:	je     0x40a5b6
  40a5af:	mov    edx,DWORD PTR [ecx]
  40a5b1:	mov    eax,DWORD PTR [edx+0xc]
  40a5b4:	call   eax
  40a5b6:	mov    ecx,DWORD PTR [edi+0x18]
  40a5b9:	mov    DWORD PTR [esi+0x18],ecx
  40a5bc:	mov    edx,DWORD PTR [edi+0x1c]
  40a5bf:	mov    DWORD PTR [esi+0x1c],edx
  40a5c2:	mov    eax,DWORD PTR [edi+0x20]
  40a5c5:	mov    DWORD PTR [esi+0x20],eax
  40a5c8:	mov    DWORD PTR [esi],0x431548
  40a5ce:	mov    DWORD PTR [esi+0x10],0x431554
  40a5d5:	mov    eax,esi
  40a5d7:	mov    ecx,DWORD PTR [esp+0x10]
  40a5db:	mov    DWORD PTR fs:0x0,ecx
  40a5e2:	pop    ecx
  40a5e3:	pop    edi
  40a5e4:	pop    esi
  40a5e5:	add    esp,0x10
  40a5e8:	ret    0x4
  40a5eb:	int3   
  40a5ec:	int3   
  40a5ed:	int3   
  40a5ee:	int3   
  40a5ef:	int3   
  40a5f0:	mov    eax,0x431370
  40a5f5:	ret    
  40a5f6:	int3   
  40a5f7:	int3   
  40a5f8:	int3   
  40a5f9:	int3   
  40a5fa:	int3   
  40a5fb:	int3   
  40a5fc:	int3   
  40a5fd:	int3   
  40a5fe:	int3   
  40a5ff:	int3   
  40a600:	push   esi
  40a601:	push   edi
  40a602:	mov    edi,DWORD PTR [esp+0xc]
  40a606:	push   edi
  40a607:	mov    esi,ecx
  40a609:	call   DWORD PTR ds:0x4303a0
  40a60f:	mov    DWORD PTR [esi],0x430be8
  40a615:	mov    eax,DWORD PTR [edi+0xc]
  40a618:	mov    DWORD PTR [esi+0xc],eax
  40a61b:	pop    edi
  40a61c:	mov    DWORD PTR [esi],0x4314a8
  40a622:	mov    eax,esi
  40a624:	pop    esi
  40a625:	ret    0x4
  40a628:	int3   
  40a629:	int3   
  40a62a:	int3   
  40a62b:	int3   
  40a62c:	int3   
  40a62d:	int3   
  40a62e:	int3   
  40a62f:	int3   
  40a630:	push   0xffffffff
  40a632:	push   0x42dcb8
  40a637:	mov    eax,fs:0x0
  40a63d:	push   eax
  40a63e:	sub    esp,0x4c
  40a641:	push   ebx
  40a642:	push   esi
  40a643:	mov    eax,ds:0x43e020
  40a648:	xor    eax,esp
  40a64a:	push   eax
  40a64b:	lea    eax,[esp+0x58]
  40a64f:	mov    fs:0x0,eax
  40a655:	lea    esi,[esp+0xc]
  40a659:	call   0x40a280
  40a65e:	mov    ebx,eax
  40a660:	lea    esi,[esp+0x30]
  40a664:	mov    DWORD PTR [esp+0x60],0x0
  40a66c:	call   0x40a260
  40a671:	push   0x435b20
  40a676:	mov    eax,esi
  40a678:	push   eax
  40a679:	call   0x429e76
  40a67e:	int3   
  40a67f:	int3   
  40a680:	push   ebx
  40a681:	push   ebp
  40a682:	mov    ebp,DWORD PTR [esp+0xc]
  40a686:	push   esi
  40a687:	mov    esi,DWORD PTR [ebp+0x0]
  40a68a:	push   edi
  40a68b:	jmp    0x40a690
  40a68d:	lea    ecx,[ecx+0x0]
  40a690:	mov    eax,esi
  40a692:	and    eax,0xffbfffff
  40a697:	mov    ecx,eax
  40a699:	shr    ecx,0x18
  40a69c:	test   cl,0x7f
  40a69f:	je     0x40a6af
  40a6a1:	dec    ecx
  40a6a2:	and    ecx,0x7f
  40a6a5:	shl    ecx,0x18
  40a6a8:	and    eax,0xffffff
  40a6ad:	or     eax,ecx
  40a6af:	and    eax,0xffc007ff
  40a6b4:	mov    edx,eax
  40a6b6:	mov    ecx,ebp
  40a6b8:	mov    eax,esi
  40a6ba:	lock cmpxchg DWORD PTR [ecx],edx
  40a6be:	cmp    eax,esi
  40a6c0:	je     0x40a6c6
  40a6c2:	mov    esi,eax
  40a6c4:	jmp    0x40a690
  40a6c6:	mov    ebx,DWORD PTR ds:0x4300b8
  40a6cc:	mov    edi,esi
  40a6ce:	shr    edi,0x18
  40a6d1:	and    edi,0x7f
  40a6d4:	je     0x40a6e0
  40a6d6:	mov    edx,DWORD PTR [ebp+0x8]
  40a6d9:	push   0x0
  40a6db:	push   0x1
  40a6dd:	push   edx
  40a6de:	call   ebx
  40a6e0:	shr    esi,0xb
  40a6e3:	and    esi,0x7ff
  40a6e9:	jne    0x40a6ef
  40a6eb:	test   edi,edi
  40a6ed:	je     0x40a701
  40a6ef:	mov    ecx,DWORD PTR [ebp+0x4]
  40a6f2:	xor    eax,eax
  40a6f4:	test   edi,edi
  40a6f6:	setne  al
  40a6f9:	push   0x0
  40a6fb:	add    eax,esi
  40a6fd:	push   eax
  40a6fe:	push   ecx
  40a6ff:	call   ebx
  40a701:	pop    edi
  40a702:	pop    esi
  40a703:	pop    ebp
  40a704:	pop    ebx
  40a705:	ret    0x4
  40a708:	int3   
  40a709:	int3   
  40a70a:	int3   
  40a70b:	int3   
  40a70c:	int3   
  40a70d:	int3   
  40a70e:	int3   
  40a70f:	int3   
  40a710:	mov    eax,0x2008
  40a715:	call   0x429f70
  40a71a:	mov    eax,ds:0x43e020
  40a71f:	xor    eax,esp
  40a721:	mov    DWORD PTR [esp+0x2004],eax
  40a728:	xor    eax,eax
  40a72a:	push   0x1ffe
  40a72f:	push   eax
  40a730:	lea    ecx,[esp+0xe]
  40a734:	push   ecx
  40a735:	mov    DWORD PTR [esp+0xc],0x0
  40a73d:	mov    WORD PTR [esp+0x10],ax
  40a742:	call   0x429f9c
  40a747:	mov    eax,DWORD PTR [esp+0x2018]
  40a74e:	lea    edx,[esp+0x201c]
  40a755:	push   edx
  40a756:	push   eax
  40a757:	lea    ecx,[esp+0x18]
  40a75b:	push   0x1000
  40a760:	push   ecx
  40a761:	call   DWORD PTR ds:0x4302cc
  40a767:	add    esp,0x1c
  40a76a:	lea    edx,[esp+0x4]
  40a76e:	push   edx
  40a76f:	mov    ecx,esi
  40a771:	call   DWORD PTR ds:0x430268
  40a777:	mov    ecx,DWORD PTR [esp+0x2004]
  40a77e:	xor    ecx,esp
  40a780:	mov    eax,esi
  40a782:	call   0x42503a
  40a787:	add    esp,0x2008
  40a78d:	ret    
  40a78e:	int3   
  40a78f:	int3   
  40a790:	push   0xffffffff
  40a792:	push   0x42dc75
  40a797:	mov    eax,fs:0x0
  40a79d:	push   eax
  40a79e:	sub    esp,0x124
  40a7a4:	mov    eax,ds:0x43e020
  40a7a9:	xor    eax,esp
  40a7ab:	mov    DWORD PTR [esp+0x11c],eax
  40a7b2:	push   ebp
  40a7b3:	push   esi
  40a7b4:	push   edi
  40a7b5:	mov    eax,ds:0x43e020
  40a7ba:	xor    eax,esp
  40a7bc:	push   eax
  40a7bd:	lea    eax,[esp+0x134]
  40a7c4:	mov    fs:0x0,eax
  40a7ca:	mov    ebp,DWORD PTR [esp+0x144]
  40a7d1:	lea    esi,[esp+0xbc]
  40a7d8:	mov    edi,ecx
  40a7da:	call   0x41faf0
  40a7df:	mov    eax,esi
  40a7e1:	push   0x430f38
  40a7e6:	push   eax
  40a7e7:	lea    ecx,[esp+0x68]
  40a7eb:	mov    DWORD PTR [esp+0x144],0x0
  40a7f6:	mov    esi,DWORD PTR ds:0x4301a4
  40a7fc:	push   ecx
  40a7fd:	call   esi
  40a7ff:	add    esp,0xc
  40a802:	push   edi
  40a803:	push   eax
  40a804:	lea    edx,[esp+0x118]
  40a80b:	mov    BYTE PTR [esp+0x144],0x1
  40a813:	mov    edi,DWORD PTR ds:0x4301a0
  40a819:	push   edx
  40a81a:	call   edi
  40a81c:	add    esp,0xc
  40a81f:	lea    ecx,[esp+0x60]
  40a823:	mov    BYTE PTR [esp+0x13c],0x3
  40a82b:	call   DWORD PTR ds:0x430264
  40a831:	push   0x430f38
  40a836:	lea    eax,[esp+0xc0]
  40a83d:	push   eax
  40a83e:	lea    ecx,[esp+0x4c]
  40a842:	push   ecx
  40a843:	call   esi
  40a845:	add    esp,0xc
  40a848:	push   ebp
  40a849:	push   eax
  40a84a:	lea    edx,[esp+0xfc]
  40a851:	push   edx
  40a852:	mov    BYTE PTR [esp+0x148],0x4
  40a85a:	call   edi
  40a85c:	add    esp,0xc
  40a85f:	lea    ecx,[esp+0x44]
  40a863:	mov    BYTE PTR [esp+0x13c],0x6
  40a86b:	call   DWORD PTR ds:0x430264
  40a871:	xor    eax,eax
  40a873:	lea    ebp,[ebx+0x4]
  40a876:	mov    edi,0x430914
  40a87b:	mov    ecx,ebp
  40a87d:	mov    DWORD PTR [esp+0x14],eax
  40a881:	mov    DWORD PTR [esp+0x18],eax
  40a885:	call   0x40b1e0
  40a88a:	mov    eax,0x40af00
  40a88f:	push   ebx
  40a890:	push   eax
  40a891:	lea    esi,[esp+0x84]
  40a898:	call   0x40b780
  40a89d:	mov    BYTE PTR [esp+0x13c],0x7
  40a8a5:	mov    ecx,DWORD PTR [ebp+0x0]
  40a8a8:	mov    eax,DWORD PTR [ecx]
  40a8aa:	mov    eax,DWORD PTR [eax+0x2c]
  40a8ad:	mov    edx,esi
  40a8af:	push   edx
  40a8b0:	call   eax
  40a8b2:	mov    BYTE PTR [esp+0x13c],0x6
  40a8ba:	mov    eax,DWORD PTR [esp+0x7c]
  40a8be:	xor    edi,edi
  40a8c0:	cmp    eax,edi
  40a8c2:	je     0x40a8e3
  40a8c4:	test   al,0x1
  40a8c6:	jne    0x40a8e3
  40a8c8:	and    eax,0xfffffffe
  40a8cb:	mov    eax,DWORD PTR [eax]
  40a8cd:	cmp    eax,edi
  40a8cf:	je     0x40a8e3
  40a8d1:	lea    ecx,[esp+0x84]
  40a8d8:	push   0x2
  40a8da:	push   ecx
  40a8db:	mov    edx,ecx
  40a8dd:	push   edx
  40a8de:	call   eax
  40a8e0:	add    esp,0xc
  40a8e3:	mov    eax,0x40aef0
  40a8e8:	push   ebx
  40a8e9:	push   eax
  40a8ea:	lea    esi,[esp+0x84]
  40a8f1:	call   0x40b780
  40a8f6:	mov    BYTE PTR [esp+0x13c],0x8
  40a8fe:	mov    ecx,DWORD PTR [ebp+0x0]
  40a901:	mov    eax,DWORD PTR [ecx]
  40a903:	mov    eax,DWORD PTR [eax+0x30]
  40a906:	mov    edx,esi
  40a908:	push   edx
  40a909:	call   eax
  40a90b:	mov    BYTE PTR [esp+0x13c],0x6
  40a913:	mov    eax,DWORD PTR [esp+0x7c]
  40a917:	cmp    eax,edi
  40a919:	je     0x40a93a
  40a91b:	test   al,0x1
  40a91d:	jne    0x40a93a
  40a91f:	and    eax,0xfffffffe
  40a922:	mov    eax,DWORD PTR [eax]
  40a924:	cmp    eax,edi
  40a926:	je     0x40a93a
  40a928:	lea    ecx,[esp+0x84]
  40a92f:	push   0x2
  40a931:	push   ecx
  40a932:	mov    edx,ecx
  40a934:	push   edx
  40a935:	call   eax
  40a937:	add    esp,0xc
  40a93a:	lea    ecx,[esp+0x80]
  40a941:	mov    DWORD PTR [esp+0x7c],edi
  40a945:	call   DWORD PTR ds:0x430260
  40a94b:	lea    ecx,[esp+0x7c]
  40a94f:	mov    BYTE PTR [esp+0x13c],0x9
  40a957:	call   0x40b5d0
  40a95c:	lea    ecx,[esp+0xa0]
  40a963:	call   DWORD PTR ds:0x430260
  40a969:	lea    eax,[esp+0x110]
  40a970:	push   eax
  40a971:	lea    ecx,[esp+0xa4]
  40a978:	mov    BYTE PTR [esp+0x140],0xa
  40a980:	call   0x420220
  40a985:	mov    eax,DWORD PTR [esp+0xa4]
  40a98c:	mov    esi,0x10
  40a991:	cmp    DWORD PTR [esp+0xb8],esi
  40a998:	jae    0x40a9a1
  40a99a:	lea    eax,[esp+0xa4]
  40a9a1:	mov    ecx,DWORD PTR [esp+0x7c]
  40a9a5:	mov    edx,DWORD PTR [ecx]
  40a9a7:	push   eax
  40a9a8:	mov    eax,DWORD PTR [edx+0x4]
  40a9ab:	call   eax
  40a9ad:	test   al,al
  40a9af:	jne    0x40a9dd
  40a9b1:	lea    ecx,[esp+0xa0]
  40a9b8:	mov    BYTE PTR [esp+0x13c],0x9
  40a9c0:	call   DWORD PTR ds:0x43025c
  40a9c6:	lea    ecx,[esp+0x7c]
  40a9ca:	push   ecx
  40a9cb:	mov    BYTE PTR [esp+0x140],0x6
  40a9d3:	call   0x40b540
  40a9d8:	jmp    0x40ac1a
  40a9dd:	mov    ecx,DWORD PTR [esp+0x7c]
  40a9e1:	mov    edx,DWORD PTR [ecx]
  40a9e3:	mov    edx,DWORD PTR [edx+0xc]
  40a9e6:	lea    eax,[esp+0x14]
  40a9ea:	push   eax
  40a9eb:	call   edx
  40a9ed:	mov    ecx,DWORD PTR [esp+0x7c]
  40a9f1:	mov    eax,DWORD PTR [ecx]
  40a9f3:	mov    edx,DWORD PTR [eax+0x8]
  40a9f6:	call   edx
  40a9f8:	push   eax
  40a9f9:	lea    ecx,[esp+0xdc]
  40aa00:	call   DWORD PTR ds:0x43011c
  40aa06:	mov    BYTE PTR [esp+0x13c],0xb
  40aa0e:	mov    eax,DWORD PTR [ebx]
  40aa10:	mov    eax,DWORD PTR [eax+0x14]
  40aa13:	lea    ecx,[esp+0x14]
  40aa17:	push   ecx
  40aa18:	lea    edx,[esp+0x20]
  40aa1c:	push   edx
  40aa1d:	mov    ecx,ebx
  40aa1f:	mov    DWORD PTR [esp+0x24],edi
  40aa23:	mov    DWORD PTR [esp+0x28],edi
  40aa27:	call   eax
  40aa29:	mov    eax,DWORD PTR [esp+0x1c]
  40aa2d:	mov    edx,DWORD PTR [esp+0x14]
  40aa31:	mov    ecx,DWORD PTR [esp+0x20]
  40aa35:	mov    DWORD PTR [esp+0x24],eax
  40aa39:	add    eax,edx
  40aa3b:	mov    DWORD PTR [esp+0x2c],eax
  40aa3f:	mov    eax,DWORD PTR [esp+0x18]
  40aa43:	add    eax,ecx
  40aa45:	mov    DWORD PTR [esp+0x28],ecx
  40aa49:	mov    ecx,DWORD PTR [ebp+0x0]
  40aa4c:	mov    DWORD PTR [esp+0x30],eax
  40aa50:	mov    eax,DWORD PTR [esp+0xdc]
  40aa57:	cmp    DWORD PTR [esp+0xf0],esi
  40aa5e:	jae    0x40aa67
  40aa60:	lea    eax,[esp+0xdc]
  40aa67:	mov    edx,DWORD PTR [ecx]
  40aa69:	push   eax
  40aa6a:	mov    eax,DWORD PTR [edx+0x4]
  40aa6d:	call   eax
  40aa6f:	mov    ecx,DWORD PTR [ebp+0x0]
  40aa72:	mov    edx,DWORD PTR [ecx]
  40aa74:	mov    edx,DWORD PTR [edx+0xc]
  40aa77:	push   edi
  40aa78:	lea    eax,[esp+0x28]
  40aa7c:	push   eax
  40aa7d:	push   edi
  40aa7e:	call   edx
  40aa80:	mov    eax,DWORD PTR [esp+0x7c]
  40aa84:	mov    ecx,DWORD PTR [ebp+0x0]
  40aa87:	mov    esi,DWORD PTR [eax]
  40aa89:	mov    edi,eax
  40aa8b:	mov    eax,DWORD PTR [ecx]
  40aa8d:	mov    edx,DWORD PTR [eax+0x14]
  40aa90:	add    esi,0x10
  40aa93:	call   edx
  40aa95:	push   eax
  40aa96:	mov    eax,DWORD PTR [esi]
  40aa98:	mov    ecx,edi
  40aa9a:	call   eax
  40aa9c:	lea    ecx,[esp+0xd8]
  40aaa3:	mov    BYTE PTR [esp+0x13c],0xa
  40aaab:	call   DWORD PTR ds:0x43025c
  40aab1:	lea    ecx,[esp+0xa0]
  40aab8:	mov    BYTE PTR [esp+0x13c],0x9
  40aac0:	call   DWORD PTR ds:0x43025c
  40aac6:	lea    ecx,[esp+0x7c]
  40aaca:	push   ecx
  40aacb:	mov    BYTE PTR [esp+0x140],0x6
  40aad3:	call   0x40b540
  40aad8:	lea    ecx,[esp+0xa0]
  40aadf:	call   DWORD PTR ds:0x430260
  40aae5:	lea    edx,[esp+0xf4]
  40aaec:	push   edx
  40aaed:	lea    ecx,[esp+0xa4]
  40aaf4:	mov    BYTE PTR [esp+0x140],0xc
  40aafc:	call   0x420220
  40ab01:	lea    esi,[ebx+0x24]
  40ab04:	mov    ecx,esi
  40ab06:	call   0x40b390
  40ab0b:	mov    eax,DWORD PTR [esi]
  40ab0d:	mov    ecx,DWORD PTR [ebp+0x0]
  40ab10:	mov    edi,DWORD PTR [eax]
  40ab12:	mov    DWORD PTR [esp+0x1c],eax
  40ab16:	mov    eax,DWORD PTR [ecx]
  40ab18:	mov    edx,DWORD PTR [eax+0x14]
  40ab1b:	add    edi,0x4
  40ab1e:	call   edx
  40ab20:	mov    ecx,DWORD PTR [esp+0x1c]
  40ab24:	push   eax
  40ab25:	mov    eax,DWORD PTR [edi]
  40ab27:	call   eax
  40ab29:	cmp    DWORD PTR [esp+0xb8],0x10
  40ab31:	mov    ecx,DWORD PTR [esi]
  40ab33:	mov    eax,DWORD PTR [esp+0xa4]
  40ab3a:	jae    0x40ab43
  40ab3c:	lea    eax,[esp+0xa4]
  40ab43:	mov    edx,DWORD PTR [ecx]
  40ab45:	push   eax
  40ab46:	mov    eax,DWORD PTR [edx+0x8]
  40ab49:	call   eax
  40ab4b:	mov    esi,DWORD PTR [esi]
  40ab4d:	mov    eax,DWORD PTR [esp+0x18]
  40ab51:	mov    ecx,DWORD PTR [esp+0x14]
  40ab55:	mov    edx,DWORD PTR [esi]
  40ab57:	mov    edx,DWORD PTR [edx+0x14]
  40ab5a:	push   eax
  40ab5b:	push   ecx
  40ab5c:	mov    ecx,esi
  40ab5e:	call   edx
  40ab60:	lea    ecx,[esp+0xa0]
  40ab67:	mov    BYTE PTR [esp+0x13c],0x6
  40ab6f:	call   DWORD PTR ds:0x43025c
  40ab75:	mov    ecx,DWORD PTR [ebp+0x0]
  40ab78:	mov    eax,DWORD PTR [ecx]
  40ab7a:	mov    edx,DWORD PTR [eax+0x14]
  40ab7d:	call   edx
  40ab7f:	mov    edi,eax
  40ab81:	test   edi,edi
  40ab83:	je     0x40abe0
  40ab85:	mov    eax,0x40ae10
  40ab8a:	push   ebx
  40ab8b:	push   eax
  40ab8c:	lea    esi,[esp+0x2c]
  40ab90:	call   0x40b7e0
  40ab95:	mov    BYTE PTR [esp+0x13c],0xd
  40ab9d:	mov    eax,DWORD PTR [edi]
  40ab9f:	mov    edx,DWORD PTR [eax+0xb0]
  40aba5:	mov    ecx,esi
  40aba7:	push   ecx
  40aba8:	mov    ecx,edi
  40abaa:	call   edx
  40abac:	mov    BYTE PTR [esp+0x13c],0x6
  40abb4:	mov    eax,DWORD PTR [esp+0x24]
  40abb8:	test   eax,eax
  40abba:	je     0x40abe0
  40abbc:	test   al,0x1
  40abbe:	jne    0x40abd8
  40abc0:	and    eax,0xfffffffe
  40abc3:	mov    eax,DWORD PTR [eax]
  40abc5:	test   eax,eax
  40abc7:	je     0x40abd8
  40abc9:	lea    ecx,[esp+0x2c]
  40abcd:	push   0x2
  40abcf:	push   ecx
  40abd0:	mov    edx,ecx
  40abd2:	push   edx
  40abd3:	call   eax
  40abd5:	add    esp,0xc
  40abd8:	mov    DWORD PTR [esp+0x24],0x0
  40abe0:	mov    eax,DWORD PTR [ebx]
  40abe2:	mov    edx,DWORD PTR [eax+0xc]
  40abe5:	mov    ecx,ebx
  40abe7:	call   edx
  40abe9:	mov    ebp,DWORD PTR [ebp+0x0]
  40abec:	mov    eax,DWORD PTR [ebp+0x0]
  40abef:	mov    edx,DWORD PTR [eax+0x14]
  40abf2:	mov    ecx,ebp
  40abf4:	call   edx
  40abf6:	mov    edx,DWORD PTR [eax]
  40abf8:	mov    ecx,eax
  40abfa:	mov    eax,DWORD PTR [edx+0x4]
  40abfd:	push   0x431684
  40ac02:	call   eax
  40ac04:	test   eax,eax
  40ac06:	je     0x40ac11
  40ac08:	push   eax
  40ac09:	call   0x40ac90
  40ac0e:	add    esp,0x4
  40ac11:	mov    edx,DWORD PTR [ebx]
  40ac13:	mov    eax,DWORD PTR [edx+0x4]
  40ac16:	mov    ecx,ebx
  40ac18:	call   eax
  40ac1a:	lea    ecx,[esp+0xf4]
  40ac21:	mov    BYTE PTR [esp+0x13c],0x3
  40ac29:	call   DWORD PTR ds:0x430264
  40ac2f:	lea    ecx,[esp+0x110]
  40ac36:	mov    BYTE PTR [esp+0x13c],0x0
  40ac3e:	call   DWORD PTR ds:0x430264
  40ac44:	lea    ecx,[esp+0xbc]
  40ac4b:	mov    DWORD PTR [esp+0x13c],0xffffffff
  40ac56:	call   DWORD PTR ds:0x430264
  40ac5c:	mov    ecx,DWORD PTR [esp+0x134]
  40ac63:	mov    DWORD PTR fs:0x0,ecx
  40ac6a:	pop    ecx
  40ac6b:	pop    edi
  40ac6c:	pop    esi
  40ac6d:	pop    ebp
  40ac6e:	mov    ecx,DWORD PTR [esp+0x11c]
  40ac75:	xor    ecx,esp
  40ac77:	call   0x42503a
  40ac7c:	add    esp,0x130
  40ac82:	ret    0x4
  40ac85:	int3   
  40ac86:	int3   
  40ac87:	int3   
  40ac88:	int3   
  40ac89:	int3   
  40ac8a:	int3   
  40ac8b:	int3   
  40ac8c:	int3   
  40ac8d:	int3   
  40ac8e:	int3   
  40ac8f:	int3   
  40ac90:	push   0xffffffff
  40ac92:	push   0x42b6fb
  40ac97:	mov    eax,fs:0x0
  40ac9d:	push   eax
  40ac9e:	sub    esp,0x64
  40aca1:	mov    eax,ds:0x43e020
  40aca6:	xor    eax,esp
  40aca8:	mov    DWORD PTR [esp+0x60],eax
  40acac:	push   ebx
  40acad:	push   esi
  40acae:	push   edi
  40acaf:	mov    eax,ds:0x43e020
  40acb4:	xor    eax,esp
  40acb6:	push   eax
  40acb7:	lea    eax,[esp+0x74]
  40acbb:	mov    fs:0x0,eax
  40acc1:	mov    edi,DWORD PTR [esp+0x84]
  40acc8:	mov    eax,DWORD PTR [edi]
  40acca:	mov    edx,DWORD PTR [eax+0x4]
  40accd:	mov    ecx,edi
  40accf:	mov    DWORD PTR [esp+0x18],edi
  40acd3:	call   edx
  40acd5:	mov    DWORD PTR [esp+0x14],eax
  40acd9:	test   eax,eax
  40acdb:	jle    0x40adee
  40ace1:	mov    ebx,DWORD PTR ds:0x4301c4
  40ace7:	mov    DWORD PTR [esp+0x10],0x0
  40acef:	mov    ecx,DWORD PTR [esp+0x10]
  40acf3:	mov    eax,DWORD PTR [edi]
  40acf5:	mov    edx,DWORD PTR [eax+0x8]
  40acf8:	push   ecx
  40acf9:	mov    ecx,edi
  40acfb:	call   edx
  40acfd:	mov    esi,eax
  40acff:	test   esi,esi
  40ad01:	je     0x40addb
  40ad07:	mov    eax,DWORD PTR [esi]
  40ad09:	mov    edx,DWORD PTR [eax+0x88]
  40ad0f:	mov    ecx,esi
  40ad11:	call   edx
  40ad13:	push   eax
  40ad14:	lea    ecx,[esp+0x20]
  40ad18:	call   DWORD PTR ds:0x43011c
  40ad1e:	push   0x4315ec
  40ad23:	push   eax
  40ad24:	lea    eax,[esp+0x40]
  40ad28:	push   eax
  40ad29:	mov    DWORD PTR [esp+0x88],0x0
  40ad34:	call   ebx
  40ad36:	add    esp,0xc
  40ad39:	mov    edi,eax
  40ad3b:	mov    BYTE PTR [esp+0x7c],0x1
  40ad40:	call   0x41f6c0
  40ad45:	cmp    DWORD PTR [edi+0x18],0x10
  40ad49:	mov    ecx,DWORD PTR ds:0x43ff8c
  40ad4f:	jb     0x40ad56
  40ad51:	mov    edi,DWORD PTR [edi+0x4]
  40ad54:	jmp    0x40ad59
  40ad56:	add    edi,0x4
  40ad59:	mov    edx,DWORD PTR [ecx]
  40ad5b:	mov    eax,DWORD PTR [edx+0x8]
  40ad5e:	push   edi
  40ad5f:	call   eax
  40ad61:	push   eax
  40ad62:	lea    ecx,[esp+0x58]
  40ad66:	call   DWORD PTR ds:0x430268
  40ad6c:	lea    ecx,[esp+0x38]
  40ad70:	mov    BYTE PTR [esp+0x7c],0x3
  40ad75:	call   DWORD PTR ds:0x43025c
  40ad7b:	lea    ecx,[esp+0x1c]
  40ad7f:	mov    BYTE PTR [esp+0x7c],0x4
  40ad84:	call   DWORD PTR ds:0x43025c
  40ad8a:	cmp    DWORD PTR [esp+0x68],0x0
  40ad8f:	je     0x40adaa
  40ad91:	cmp    DWORD PTR [esp+0x6c],0x8
  40ad96:	mov    eax,DWORD PTR [esp+0x58]
  40ad9a:	jae    0x40ada0
  40ad9c:	lea    eax,[esp+0x58]
  40ada0:	mov    edx,DWORD PTR [esi]
  40ada2:	push   eax
  40ada3:	mov    eax,DWORD PTR [edx+0x28]
  40ada6:	mov    ecx,esi
  40ada8:	call   eax
  40adaa:	mov    edx,DWORD PTR [esi]
  40adac:	mov    eax,DWORD PTR [edx+0x4]
  40adaf:	push   0x431684
  40adb4:	mov    ecx,esi
  40adb6:	call   eax
  40adb8:	test   eax,eax
  40adba:	je     0x40adc5
  40adbc:	push   eax
  40adbd:	call   0x40ac90
  40adc2:	add    esp,0x4
  40adc5:	lea    ecx,[esp+0x54]
  40adc9:	mov    DWORD PTR [esp+0x7c],0xffffffff
  40add1:	call   DWORD PTR ds:0x430264
  40add7:	mov    edi,DWORD PTR [esp+0x18]
  40addb:	mov    eax,DWORD PTR [esp+0x10]
  40addf:	inc    eax
  40ade0:	cmp    eax,DWORD PTR [esp+0x14]
  40ade4:	mov    DWORD PTR [esp+0x10],eax
  40ade8:	jl     0x40acef
  40adee:	mov    ecx,DWORD PTR [esp+0x74]
  40adf2:	mov    DWORD PTR fs:0x0,ecx
  40adf9:	pop    ecx
  40adfa:	pop    edi
  40adfb:	pop    esi
  40adfc:	pop    ebx
  40adfd:	mov    ecx,DWORD PTR [esp+0x60]
  40ae01:	xor    ecx,esp
  40ae03:	call   0x42503a
  40ae08:	add    esp,0x70
  40ae0b:	ret    
  40ae0c:	int3   
  40ae0d:	int3   
  40ae0e:	int3   
  40ae0f:	int3   
  40ae10:	sub    esp,0x14
  40ae13:	push   esi
  40ae14:	xor    eax,eax
  40ae16:	mov    esi,ecx
  40ae18:	mov    ecx,DWORD PTR [esi+0x4]
  40ae1b:	push   edi
  40ae1c:	mov    DWORD PTR [esp+0x8],eax
  40ae20:	mov    DWORD PTR [esp+0xc],eax
  40ae24:	mov    DWORD PTR [esp+0x10],eax
  40ae28:	mov    DWORD PTR [esp+0x14],eax
  40ae2c:	cmp    ecx,eax
  40ae2e:	je     0x40ae6c
  40ae30:	mov    eax,DWORD PTR [ecx]
  40ae32:	mov    edx,DWORD PTR [eax+0x18]
  40ae35:	call   edx
  40ae37:	mov    edi,eax
  40ae39:	push   edi
  40ae3a:	call   DWORD PTR ds:0x43042c
  40ae40:	test   eax,eax
  40ae42:	je     0x40ae6c
  40ae44:	lea    eax,[esp+0x8]
  40ae48:	push   eax
  40ae49:	push   edi
  40ae4a:	call   DWORD PTR ds:0x430428
  40ae50:	mov    eax,DWORD PTR [esp+0x14]
  40ae54:	sub    eax,DWORD PTR [esp+0xc]
  40ae58:	mov    ecx,DWORD PTR [esi+0x24]
  40ae5b:	mov    edx,DWORD PTR [ecx]
  40ae5d:	mov    edx,DWORD PTR [edx+0x14]
  40ae60:	push   eax
  40ae61:	mov    eax,DWORD PTR [esp+0x14]
  40ae65:	sub    eax,DWORD PTR [esp+0xc]
  40ae69:	push   eax
  40ae6a:	call   edx
  40ae6c:	mov    eax,DWORD PTR [esi]
  40ae6e:	mov    edx,DWORD PTR [eax+0x8]
  40ae71:	mov    ecx,esi
  40ae73:	call   edx
  40ae75:	mov    ecx,DWORD PTR [esi+0x4]
  40ae78:	mov    eax,DWORD PTR [ecx]
  40ae7a:	mov    edx,DWORD PTR [eax+0x14]
  40ae7d:	call   edx
  40ae7f:	mov    edx,DWORD PTR [eax]
  40ae81:	mov    ecx,eax
  40ae83:	mov    eax,DWORD PTR [edx+0x4c]
  40ae86:	call   eax
  40ae88:	pop    edi
  40ae89:	pop    esi
  40ae8a:	add    esp,0x14
  40ae8d:	ret    0x8
  40ae90:	sub    esp,0x14
  40ae93:	mov    ecx,DWORD PTR [esi+0x4]
  40ae96:	xor    eax,eax
  40ae98:	mov    DWORD PTR [esp],eax
  40ae9b:	mov    DWORD PTR [esp+0x4],eax
  40ae9f:	mov    DWORD PTR [esp+0x8],eax
  40aea3:	mov    DWORD PTR [esp+0xc],eax
  40aea7:	mov    eax,DWORD PTR [ecx]
  40aea9:	mov    edx,DWORD PTR [eax+0x18]
  40aeac:	call   edx
  40aeae:	lea    ecx,[esp]
  40aeb1:	push   ecx
  40aeb2:	push   eax
  40aeb3:	call   DWORD PTR ds:0x430428
  40aeb9:	mov    eax,DWORD PTR [esp+0xc]
  40aebd:	sub    eax,DWORD PTR [esp+0x4]
  40aec1:	mov    ecx,DWORD PTR [esi+0x24]
  40aec4:	mov    edx,DWORD PTR [ecx]
  40aec6:	mov    edx,DWORD PTR [edx+0x14]
  40aec9:	push   eax
  40aeca:	mov    eax,DWORD PTR [esp+0xc]
  40aece:	sub    eax,DWORD PTR [esp+0x4]
  40aed2:	push   eax
  40aed3:	call   edx
  40aed5:	mov    ecx,DWORD PTR [esi+0x4]
  40aed8:	mov    eax,DWORD PTR [ecx]
  40aeda:	mov    edx,DWORD PTR [eax+0x14]
  40aedd:	call   edx
  40aedf:	mov    edx,DWORD PTR [eax]
  40aee1:	mov    ecx,eax
  40aee3:	mov    eax,DWORD PTR [edx+0x4c]
  40aee6:	call   eax
  40aee8:	add    esp,0x14
  40aeeb:	ret    
  40aeec:	int3   
  40aeed:	int3   
  40aeee:	int3   
  40aeef:	int3   
  40aef0:	mov    eax,DWORD PTR [ecx]
  40aef2:	mov    edx,DWORD PTR [eax+0x10]
  40aef5:	jmp    edx
  40aef7:	int3   
  40aef8:	int3   
  40aef9:	int3   
  40aefa:	int3   
  40aefb:	int3   
  40aefc:	int3   
  40aefd:	int3   
  40aefe:	int3   
  40aeff:	int3   
  40af00:	test   ecx,ecx
  40af02:	je     0x40af0c
  40af04:	mov    eax,DWORD PTR [ecx]
  40af06:	mov    edx,DWORD PTR [eax]
  40af08:	push   0x1
  40af0a:	call   edx
  40af0c:	ret    
  40af0d:	int3   
  40af0e:	int3   
  40af0f:	int3   
  40af10:	push   0xffffffff
  40af12:	push   0x42c0a9
  40af17:	mov    eax,fs:0x0
  40af1d:	push   eax
  40af1e:	sub    esp,0x1c
  40af21:	push   ebx
  40af22:	push   ebp
  40af23:	push   esi
  40af24:	mov    eax,ds:0x43e020
  40af29:	xor    eax,esp
  40af2b:	push   eax
  40af2c:	lea    eax,[esp+0x2c]
  40af30:	mov    fs:0x0,eax
  40af36:	mov    ebp,DWORD PTR [esp+0x3c]
  40af3a:	mov    esi,ecx
  40af3c:	mov    ecx,DWORD PTR [edi+0x4]
  40af3f:	mov    eax,DWORD PTR [ecx]
  40af41:	mov    edx,DWORD PTR [eax+0x18]
  40af44:	call   edx
  40af46:	cmp    DWORD PTR [ebp+0x18],0x8
  40af4a:	lea    ebx,[ebp+0x4]
  40af4d:	jb     0x40af53
  40af4f:	mov    ecx,DWORD PTR [ebx]
  40af51:	jmp    0x40af55
  40af53:	mov    ecx,ebx
  40af55:	push   ecx
  40af56:	push   eax
  40af57:	call   DWORD PTR ds:0x43041c
  40af5d:	cmp    DWORD PTR [esi+0x18],0x10
  40af61:	jb     0x40af68
  40af63:	mov    eax,DWORD PTR [esi+0x4]
  40af66:	jmp    0x40af6b
  40af68:	lea    eax,[esi+0x4]
  40af6b:	push   eax
  40af6c:	lea    ecx,[esp+0x14]
  40af70:	call   DWORD PTR ds:0x43011c
  40af76:	xor    esi,esi
  40af78:	mov    DWORD PTR [esp+0x34],esi
  40af7c:	mov    ecx,DWORD PTR [edi+0x4]
  40af7f:	mov    eax,DWORD PTR [ecx]
  40af81:	mov    edx,DWORD PTR [eax+0x14]
  40af84:	call   edx
  40af86:	cmp    eax,esi
  40af88:	je     0x40afa5
  40af8a:	cmp    DWORD PTR [esp+0x28],0x10
  40af8f:	mov    ecx,DWORD PTR [esp+0x14]
  40af93:	jae    0x40af99
  40af95:	lea    ecx,[esp+0x14]
  40af99:	mov    edx,DWORD PTR [eax]
  40af9b:	push   ecx
  40af9c:	mov    ecx,eax
  40af9e:	mov    eax,DWORD PTR [edx+0x48]
  40afa1:	call   eax
  40afa3:	mov    esi,eax
  40afa5:	lea    ecx,[esp+0x10]
  40afa9:	mov    DWORD PTR [esp+0x34],0xffffffff
  40afb1:	call   DWORD PTR ds:0x43025c
  40afb7:	test   esi,esi
  40afb9:	je     0x40afd1
  40afbb:	cmp    DWORD PTR [ebp+0x18],0x8
  40afbf:	jb     0x40afc5
  40afc1:	mov    eax,DWORD PTR [ebx]
  40afc3:	jmp    0x40afc7
  40afc5:	mov    eax,ebx
  40afc7:	mov    edx,DWORD PTR [esi]
  40afc9:	push   eax
  40afca:	mov    eax,DWORD PTR [edx+0x28]
  40afcd:	mov    ecx,esi
  40afcf:	call   eax
  40afd1:	mov    ecx,DWORD PTR [esp+0x2c]
  40afd5:	mov    DWORD PTR fs:0x0,ecx
  40afdc:	pop    ecx
  40afdd:	pop    esi
  40afde:	pop    ebp
  40afdf:	pop    ebx
  40afe0:	add    esp,0x28
  40afe3:	ret    0x4
  40afe6:	int3   
  40afe7:	int3   
  40afe8:	int3   
  40afe9:	int3   
  40afea:	int3   
  40afeb:	int3   
  40afec:	int3   
  40afed:	int3   
  40afee:	int3   
  40afef:	int3   
  40aff0:	push   0xffffffff
  40aff2:	push   0x42c079
  40aff7:	mov    eax,fs:0x0
  40affd:	push   eax
  40affe:	sub    esp,0x1c
  40b001:	push   esi
  40b002:	mov    eax,ds:0x43e020
  40b007:	xor    eax,esp
  40b009:	push   eax
  40b00a:	lea    eax,[esp+0x24]
  40b00e:	mov    fs:0x0,eax
  40b014:	mov    eax,DWORD PTR [esp+0x38]
  40b018:	mov    esi,0x10
  40b01d:	cmp    DWORD PTR [eax+0x18],esi
  40b020:	jb     0x40b027
  40b022:	mov    eax,DWORD PTR [eax+0x4]
  40b025:	jmp    0x40b02a
  40b027:	add    eax,0x4
  40b02a:	push   eax
  40b02b:	lea    ecx,[esp+0xc]
  40b02f:	call   DWORD PTR ds:0x43011c
  40b035:	mov    eax,DWORD PTR [esp+0x34]
  40b039:	mov    DWORD PTR [esp+0x2c],0x0
  40b041:	mov    ecx,DWORD PTR [eax+0x4]
  40b044:	mov    edx,DWORD PTR [ecx]
  40b046:	mov    eax,DWORD PTR [edx+0x14]
  40b049:	call   eax
  40b04b:	test   eax,eax
  40b04d:	jne    0x40b053
  40b04f:	xor    esi,esi
  40b051:	jmp    0x40b06d
  40b053:	mov    ecx,DWORD PTR [esp+0xc]
  40b057:	cmp    DWORD PTR [esp+0x20],esi
  40b05b:	jae    0x40b061
  40b05d:	lea    ecx,[esp+0xc]
  40b061:	mov    edx,DWORD PTR [eax]
  40b063:	push   ecx
  40b064:	mov    ecx,eax
  40b066:	mov    eax,DWORD PTR [edx+0x48]
  40b069:	call   eax
  40b06b:	mov    esi,eax
  40b06d:	lea    ecx,[esp+0x8]
  40b071:	mov    DWORD PTR [esp+0x2c],0xffffffff
  40b079:	call   DWORD PTR ds:0x43025c
  40b07f:	test   esi,esi
  40b081:	je     0x40b09b
  40b083:	cmp    DWORD PTR [edi+0x18],0x8
  40b087:	jb     0x40b08e
  40b089:	mov    eax,DWORD PTR [edi+0x4]
  40b08c:	jmp    0x40b091
  40b08e:	lea    eax,[edi+0x4]
  40b091:	mov    edx,DWORD PTR [esi]
  40b093:	push   eax
  40b094:	mov    eax,DWORD PTR [edx+0x28]
  40b097:	mov    ecx,esi
  40b099:	call   eax
  40b09b:	mov    ecx,DWORD PTR [esp+0x24]
  40b09f:	mov    DWORD PTR fs:0x0,ecx
  40b0a6:	pop    ecx
  40b0a7:	pop    esi
  40b0a8:	add    esp,0x28
  40b0ab:	ret    0x8
  40b0ae:	int3   
  40b0af:	int3   
  40b0b0:	push   ebx
  40b0b1:	mov    ebx,DWORD PTR [esp+0x8]
  40b0b5:	call   0x41f230
  40b0ba:	pop    ebx
  40b0bb:	ret    0x8
  40b0be:	int3   
  40b0bf:	int3   
  40b0c0:	sub    esp,0x1c
  40b0c3:	mov    ecx,DWORD PTR [edi+0x4]
  40b0c6:	xor    eax,eax
  40b0c8:	mov    DWORD PTR [esp+0x8],0x0
  40b0d0:	mov    DWORD PTR [esp+0xc],eax
  40b0d4:	mov    DWORD PTR [esp+0x10],eax
  40b0d8:	mov    DWORD PTR [esp+0x14],eax
  40b0dc:	mov    eax,DWORD PTR [ecx]
  40b0de:	mov    edx,DWORD PTR [eax+0x18]
  40b0e1:	push   ebx
  40b0e2:	push   esi
  40b0e3:	call   edx
  40b0e5:	lea    ecx,[esp+0x10]
  40b0e9:	push   ecx
  40b0ea:	push   eax
  40b0eb:	call   DWORD PTR ds:0x430424
  40b0f1:	lea    ebx,[esp+0x8]
  40b0f5:	mov    DWORD PTR [esp+0x8],0x0
  40b0fd:	mov    DWORD PTR [esp+0xc],0x0
  40b105:	call   0x41f230
  40b10a:	mov    eax,DWORD PTR [esp+0x18]
  40b10e:	sub    eax,DWORD PTR [esp+0x10]
  40b112:	mov    esi,DWORD PTR [esp+0x8]
  40b116:	cdq    
  40b117:	mov    ecx,DWORD PTR [edi+0x4]
  40b11a:	sub    eax,edx
  40b11c:	sar    eax,1
  40b11e:	sub    esi,eax
  40b120:	mov    eax,DWORD PTR [esp+0x1c]
  40b124:	sub    eax,DWORD PTR [esp+0x14]
  40b128:	push   0x201
  40b12d:	cdq    
  40b12e:	sub    eax,edx
  40b130:	mov    edx,eax
  40b132:	mov    eax,DWORD PTR [esp+0x10]
  40b136:	push   0x0
  40b138:	sar    edx,1
  40b13a:	sub    eax,edx
  40b13c:	push   0x0
  40b13e:	push   eax
  40b13f:	mov    eax,DWORD PTR [ecx]
  40b141:	mov    edx,DWORD PTR [eax+0x18]
  40b144:	push   esi
  40b145:	push   0x0
  40b147:	call   edx
  40b149:	push   eax
  40b14a:	call   DWORD PTR ds:0x430420
  40b150:	pop    esi
  40b151:	pop    ebx
  40b152:	add    esp,0x1c
  40b155:	ret    
  40b156:	int3   
  40b157:	int3   
  40b158:	int3   
  40b159:	int3   
  40b15a:	int3   
  40b15b:	int3   
  40b15c:	int3   
  40b15d:	int3   
  40b15e:	int3   
  40b15f:	int3   
  40b160:	mov    ecx,DWORD PTR [eax+0x4]
  40b163:	mov    edx,DWORD PTR [ecx]
  40b165:	mov    eax,DWORD PTR [edx+0x18]
  40b168:	push   ebx
  40b169:	push   ebp
  40b16a:	push   esi
  40b16b:	push   edi
  40b16c:	call   eax
  40b16e:	mov    esi,eax
  40b170:	push   esi
  40b171:	call   DWORD PTR ds:0x430418
  40b177:	mov    edi,DWORD PTR ds:0x430414
  40b17d:	test   eax,eax
  40b17f:	jne    0x40b186
  40b181:	push   0x5
  40b183:	push   esi
  40b184:	call   edi
  40b186:	push   esi
  40b187:	call   DWORD PTR ds:0x430410
  40b18d:	test   eax,eax
  40b18f:	je     0x40b196
  40b191:	push   0x9
  40b193:	push   esi
  40b194:	call   edi
  40b196:	mov    ebx,DWORD PTR ds:0x43040c
  40b19c:	push   0x0
  40b19e:	push   esi
  40b19f:	call   ebx
  40b1a1:	push   0x0
  40b1a3:	mov    edi,eax
  40b1a5:	call   DWORD PTR ds:0x430408
  40b1ab:	push   eax
  40b1ac:	call   ebx
  40b1ae:	mov    ebp,DWORD PTR ds:0x430404
  40b1b4:	push   0x1
  40b1b6:	mov    ebx,eax
  40b1b8:	push   ebx
  40b1b9:	push   edi
  40b1ba:	call   ebp
  40b1bc:	push   esi
  40b1bd:	call   DWORD PTR ds:0x430400
  40b1c3:	push   esi
  40b1c4:	call   DWORD PTR ds:0x4303fc
  40b1ca:	push   0x0
  40b1cc:	push   ebx
  40b1cd:	push   edi
  40b1ce:	call   ebp
  40b1d0:	pop    edi
  40b1d1:	pop    esi
  40b1d2:	pop    ebp
  40b1d3:	pop    ebx
  40b1d4:	ret    
  40b1d5:	int3   
  40b1d6:	int3   
  40b1d7:	int3   
  40b1d8:	int3   
  40b1d9:	int3   
  40b1da:	int3   
  40b1db:	int3   
  40b1dc:	int3   
  40b1dd:	int3   
  40b1de:	int3   
  40b1df:	int3   
  40b1e0:	push   0xffffffff
  40b1e2:	push   0x42aee6
  40b1e7:	mov    eax,fs:0x0
  40b1ed:	push   eax
  40b1ee:	sub    esp,0x50
  40b1f1:	mov    eax,ds:0x43e020
  40b1f6:	xor    eax,esp
  40b1f8:	mov    DWORD PTR [esp+0x4c],eax
  40b1fc:	push   ebp
  40b1fd:	push   esi
  40b1fe:	mov    eax,ds:0x43e020
  40b203:	xor    eax,esp
  40b205:	push   eax
  40b206:	lea    eax,[esp+0x5c]
  40b20a:	mov    fs:0x0,eax
  40b210:	mov    esi,ecx
  40b212:	cmp    DWORD PTR [esi],0x0
  40b215:	je     0x40b2b1
  40b21b:	lea    ecx,[esp+0x20]
  40b21f:	call   DWORD PTR ds:0x430260
  40b225:	add    esi,0x4
  40b228:	push   esi
  40b229:	lea    eax,[esp+0x40]
  40b22d:	push   0x430cb4
  40b232:	push   eax
  40b233:	mov    DWORD PTR [esp+0x70],0x0
  40b23b:	call   DWORD PTR ds:0x430170
  40b241:	add    esp,0xc
  40b244:	push   eax
  40b245:	lea    ecx,[esp+0x24]
  40b249:	mov    BYTE PTR [esp+0x68],0x1
  40b24e:	call   DWORD PTR ds:0x430174
  40b254:	lea    ecx,[esp+0x3c]
  40b258:	mov    BYTE PTR [esp+0x64],0x0
  40b25d:	call   DWORD PTR ds:0x43025c
  40b263:	push   0x2a
  40b265:	push   0x4315f4
  40b26a:	push   0x430d24
  40b26f:	lea    ecx,[esp+0x18]
  40b273:	call   DWORD PTR ds:0x430000
  40b279:	mov    BYTE PTR [esp+0x64],0x2
  40b27e:	cmp    DWORD PTR [esp+0x38],0x10
  40b283:	mov    eax,DWORD PTR [esp+0x24]
  40b287:	jae    0x40b28d
  40b289:	lea    eax,[esp+0x24]
  40b28d:	push   0x10000010
  40b292:	push   eax
  40b293:	lea    ecx,[esp+0x14]
  40b297:	push   ecx
  40b298:	lea    ecx,[esp+0x20]
  40b29c:	call   DWORD PTR ds:0x430008
  40b2a2:	push   0x43581c
  40b2a7:	lea    edx,[esp+0x18]
  40b2ab:	push   edx
  40b2ac:	call   0x429e76
  40b2b1:	lea    ebp,[esi+0x4]
  40b2b4:	push   edi
  40b2b5:	mov    ecx,ebp
  40b2b7:	call   DWORD PTR ds:0x430178
  40b2bd:	push   edi
  40b2be:	call   DWORD PTR ds:0x4303b8
  40b2c4:	mov    DWORD PTR [esi],eax
  40b2c6:	test   eax,eax
  40b2c8:	jne    0x40b361
  40b2ce:	lea    ecx,[esp+0x3c]
  40b2d2:	call   DWORD PTR ds:0x430260
  40b2d8:	push   ebp
  40b2d9:	lea    eax,[esp+0x24]
  40b2dd:	push   0x430d64
  40b2e2:	push   eax
  40b2e3:	mov    DWORD PTR [esp+0x70],0x3
  40b2eb:	call   DWORD PTR ds:0x430170
  40b2f1:	add    esp,0xc
  40b2f4:	push   eax
  40b2f5:	lea    ecx,[esp+0x40]
  40b2f9:	mov    BYTE PTR [esp+0x68],0x4
  40b2fe:	call   DWORD PTR ds:0x430174
  40b304:	lea    ecx,[esp+0x20]
  40b308:	mov    BYTE PTR [esp+0x64],0x3
  40b30d:	call   DWORD PTR ds:0x43025c
  40b313:	push   0x33
  40b315:	push   0x4315f4
  40b31a:	push   0x430d24
  40b31f:	lea    ecx,[esp+0x1c]
  40b323:	call   DWORD PTR ds:0x430000
  40b329:	mov    BYTE PTR [esp+0x64],0x5
  40b32e:	cmp    DWORD PTR [esp+0x54],0x10
  40b333:	mov    eax,DWORD PTR [esp+0x40]
  40b337:	jae    0x40b33d
  40b339:	lea    eax,[esp+0x40]
  40b33d:	push   0x10000010
  40b342:	push   eax
  40b343:	lea    ecx,[esp+0x18]
  40b347:	push   ecx
  40b348:	lea    ecx,[esp+0x20]
  40b34c:	call   DWORD PTR ds:0x430008
  40b352:	push   0x43581c
  40b357:	lea    edx,[esp+0x18]
  40b35b:	push   edx
  40b35c:	call   0x429e76
  40b361:	mov    eax,0x1
  40b366:	mov    ecx,DWORD PTR [esp+0x5c]
  40b36a:	mov    DWORD PTR fs:0x0,ecx
  40b371:	pop    ecx
  40b372:	pop    esi
  40b373:	pop    ebp
  40b374:	mov    ecx,DWORD PTR [esp+0x4c]
  40b378:	xor    ecx,esp
  40b37a:	call   0x42503a
  40b37f:	add    esp,0x5c
  40b382:	ret    
  40b383:	int3   
  40b384:	int3   
  40b385:	int3   
  40b386:	int3   
  40b387:	int3   
  40b388:	int3   
  40b389:	int3   
  40b38a:	int3   
  40b38b:	int3   
  40b38c:	int3   
  40b38d:	int3   
  40b38e:	int3   
  40b38f:	int3   
  40b390:	push   0xffffffff
  40b392:	push   0x42aee6
  40b397:	mov    eax,fs:0x0
  40b39d:	push   eax
  40b39e:	sub    esp,0x50
  40b3a1:	mov    eax,ds:0x43e020
  40b3a6:	xor    eax,esp
  40b3a8:	mov    DWORD PTR [esp+0x4c],eax
  40b3ac:	push   esi
  40b3ad:	push   edi
  40b3ae:	mov    eax,ds:0x43e020
  40b3b3:	xor    eax,esp
  40b3b5:	push   eax
  40b3b6:	lea    eax,[esp+0x5c]
  40b3ba:	mov    fs:0x0,eax
  40b3c0:	mov    esi,ecx
  40b3c2:	cmp    DWORD PTR [esi],0x0
  40b3c5:	je     0x40b461
  40b3cb:	lea    ecx,[esp+0x20]
  40b3cf:	call   DWORD PTR ds:0x430260
  40b3d5:	add    esi,0x4
  40b3d8:	push   esi
  40b3d9:	lea    eax,[esp+0x40]
  40b3dd:	push   0x430cb4
  40b3e2:	push   eax
  40b3e3:	mov    DWORD PTR [esp+0x70],0x0
  40b3eb:	call   DWORD PTR ds:0x430170
  40b3f1:	add    esp,0xc
  40b3f4:	push   eax
  40b3f5:	lea    ecx,[esp+0x24]
  40b3f9:	mov    BYTE PTR [esp+0x68],0x1
  40b3fe:	call   DWORD PTR ds:0x430174
  40b404:	lea    ecx,[esp+0x3c]
  40b408:	mov    BYTE PTR [esp+0x64],0x0
  40b40d:	call   DWORD PTR ds:0x43025c
  40b413:	push   0x2a
  40b415:	push   0x43161c
  40b41a:	push   0x430d24
  40b41f:	lea    ecx,[esp+0x18]
  40b423:	call   DWORD PTR ds:0x430000
  40b429:	mov    BYTE PTR [esp+0x64],0x2
  40b42e:	cmp    DWORD PTR [esp+0x38],0x10
  40b433:	mov    eax,DWORD PTR [esp+0x24]
  40b437:	jae    0x40b43d
  40b439:	lea    eax,[esp+0x24]
  40b43d:	push   0x10000010
  40b442:	push   eax
  40b443:	lea    ecx,[esp+0x14]
  40b447:	push   ecx
  40b448:	lea    ecx,[esp+0x20]
  40b44c:	call   DWORD PTR ds:0x430008
  40b452:	push   0x43581c
  40b457:	lea    edx,[esp+0x18]
  40b45b:	push   edx
  40b45c:	call   0x429e76
  40b461:	lea    edi,[esi+0x4]
  40b464:	push   0x4309e0
  40b469:	mov    ecx,edi
  40b46b:	call   DWORD PTR ds:0x430178
  40b471:	push   0x4309e0
  40b476:	call   DWORD PTR ds:0x4303b8
  40b47c:	mov    DWORD PTR [esi],eax
  40b47e:	test   eax,eax
  40b480:	jne    0x40b519
  40b486:	lea    ecx,[esp+0x3c]
  40b48a:	call   DWORD PTR ds:0x430260
  40b490:	push   edi
  40b491:	lea    eax,[esp+0x24]
  40b495:	push   0x430d64
  40b49a:	push   eax
  40b49b:	mov    DWORD PTR [esp+0x70],0x3
  40b4a3:	call   DWORD PTR ds:0x430170
  40b4a9:	add    esp,0xc
  40b4ac:	push   eax
  40b4ad:	lea    ecx,[esp+0x40]
  40b4b1:	mov    BYTE PTR [esp+0x68],0x4
  40b4b6:	call   DWORD PTR ds:0x430174
  40b4bc:	lea    ecx,[esp+0x20]
  40b4c0:	mov    BYTE PTR [esp+0x64],0x3
  40b4c5:	call   DWORD PTR ds:0x43025c
  40b4cb:	push   0x33
  40b4cd:	push   0x43161c
  40b4d2:	push   0x430d24
  40b4d7:	lea    ecx,[esp+0x1c]
  40b4db:	call   DWORD PTR ds:0x430000
  40b4e1:	mov    BYTE PTR [esp+0x64],0x5
  40b4e6:	cmp    DWORD PTR [esp+0x54],0x10
  40b4eb:	mov    eax,DWORD PTR [esp+0x40]
  40b4ef:	jae    0x40b4f5
  40b4f1:	lea    eax,[esp+0x40]
  40b4f5:	push   0x10000010
  40b4fa:	push   eax
  40b4fb:	lea    ecx,[esp+0x18]
  40b4ff:	push   ecx
  40b500:	lea    ecx,[esp+0x20]
  40b504:	call   DWORD PTR ds:0x430008
  40b50a:	push   0x43581c
  40b50f:	lea    edx,[esp+0x18]
  40b513:	push   edx
  40b514:	call   0x429e76
  40b519:	mov    eax,0x1
  40b51e:	mov    ecx,DWORD PTR [esp+0x5c]
  40b522:	mov    DWORD PTR fs:0x0,ecx
  40b529:	pop    ecx
  40b52a:	pop    edi
  40b52b:	pop    esi
  40b52c:	mov    ecx,DWORD PTR [esp+0x4c]
  40b530:	xor    ecx,esp
  40b532:	call   0x42503a
  40b537:	add    esp,0x5c
  40b53a:	ret    
  40b53b:	int3   
  40b53c:	int3   
  40b53d:	int3   
  40b53e:	int3   
  40b53f:	int3   
  40b540:	push   0xffffffff
  40b542:	push   0x42ac0c
  40b547:	mov    eax,fs:0x0
  40b54d:	push   eax
  40b54e:	push   esi
  40b54f:	mov    eax,ds:0x43e020
  40b554:	xor    eax,esp
  40b556:	push   eax
  40b557:	lea    eax,[esp+0x8]
  40b55b:	mov    fs:0x0,eax
  40b561:	mov    esi,DWORD PTR [esp+0x18]
  40b565:	mov    DWORD PTR [esp+0x10],0x0
  40b56d:	mov    ecx,DWORD PTR [esi]
  40b56f:	test   ecx,ecx
  40b571:	je     0x40b59f
  40b573:	cmp    DWORD PTR [esi+0x18],0x0
  40b577:	jne    0x40b583
  40b579:	mov    eax,DWORD PTR [ecx]
  40b57b:	mov    edx,DWORD PTR [eax]
  40b57d:	push   0x1
  40b57f:	call   edx
  40b581:	jmp    0x40b599
  40b583:	cmp    DWORD PTR [esi+0x1c],0x10
  40b587:	jb     0x40b58e
  40b589:	mov    eax,DWORD PTR [esi+0x8]
  40b58c:	jmp    0x40b591
  40b58e:	lea    eax,[esi+0x8]
  40b591:	push   ecx
  40b592:	push   eax
  40b593:	call   DWORD PTR ds:0x4303bc
  40b599:	mov    DWORD PTR [esi],0x0
  40b59f:	lea    ecx,[esi+0x4]
  40b5a2:	mov    DWORD PTR [esp+0x10],0xffffffff
  40b5aa:	call   DWORD PTR ds:0x43025c
  40b5b0:	mov    ecx,DWORD PTR [esp+0x8]
  40b5b4:	mov    DWORD PTR fs:0x0,ecx
  40b5bb:	pop    ecx
  40b5bc:	pop    esi
  40b5bd:	add    esp,0xc
  40b5c0:	ret    0x4
  40b5c3:	int3   
  40b5c4:	int3   
  40b5c5:	int3   
  40b5c6:	int3   
  40b5c7:	int3   
  40b5c8:	int3   
  40b5c9:	int3   
  40b5ca:	int3   
  40b5cb:	int3   
  40b5cc:	int3   
  40b5cd:	int3   
  40b5ce:	int3   
  40b5cf:	int3   
  40b5d0:	push   0xffffffff
  40b5d2:	push   0x42aee6
  40b5d7:	mov    eax,fs:0x0
  40b5dd:	push   eax
  40b5de:	sub    esp,0x50
  40b5e1:	mov    eax,ds:0x43e020
  40b5e6:	xor    eax,esp
  40b5e8:	mov    DWORD PTR [esp+0x4c],eax
  40b5ec:	push   esi
  40b5ed:	push   edi
  40b5ee:	mov    eax,ds:0x43e020
  40b5f3:	xor    eax,esp
  40b5f5:	push   eax
  40b5f6:	lea    eax,[esp+0x5c]
  40b5fa:	mov    fs:0x0,eax
  40b600:	mov    esi,ecx
  40b602:	cmp    DWORD PTR [esi],0x0
  40b605:	je     0x40b6a1
  40b60b:	lea    ecx,[esp+0x20]
  40b60f:	call   DWORD PTR ds:0x430260
  40b615:	add    esi,0x4
  40b618:	push   esi
  40b619:	lea    eax,[esp+0x40]
  40b61d:	push   0x430cb4
  40b622:	push   eax
  40b623:	mov    DWORD PTR [esp+0x70],0x0
  40b62b:	call   DWORD PTR ds:0x430170
  40b631:	add    esp,0xc
  40b634:	push   eax
  40b635:	lea    ecx,[esp+0x24]
  40b639:	mov    BYTE PTR [esp+0x68],0x1
  40b63e:	call   DWORD PTR ds:0x430174
  40b644:	lea    ecx,[esp+0x3c]
  40b648:	mov    BYTE PTR [esp+0x64],0x0
  40b64d:	call   DWORD PTR ds:0x43025c
  40b653:	push   0x2a
  40b655:	push   0x431648
  40b65a:	push   0x430d24
  40b65f:	lea    ecx,[esp+0x18]
  40b663:	call   DWORD PTR ds:0x430000
  40b669:	mov    BYTE PTR [esp+0x64],0x2
  40b66e:	cmp    DWORD PTR [esp+0x38],0x10
  40b673:	mov    eax,DWORD PTR [esp+0x24]
  40b677:	jae    0x40b67d
  40b679:	lea    eax,[esp+0x24]
  40b67d:	push   0x10000010
  40b682:	push   eax
  40b683:	lea    ecx,[esp+0x14]
  40b687:	push   ecx
  40b688:	lea    ecx,[esp+0x20]
  40b68c:	call   DWORD PTR ds:0x430008
  40b692:	push   0x43581c
  40b697:	lea    edx,[esp+0x18]
  40b69b:	push   edx
  40b69c:	call   0x429e76
  40b6a1:	lea    edi,[esi+0x4]
  40b6a4:	push   0x4309f0
  40b6a9:	mov    ecx,edi
  40b6ab:	call   DWORD PTR ds:0x430178
  40b6b1:	push   0x4309f0
  40b6b6:	call   DWORD PTR ds:0x4303b8
  40b6bc:	mov    DWORD PTR [esi],eax
  40b6be:	test   eax,eax
  40b6c0:	jne    0x40b759
  40b6c6:	lea    ecx,[esp+0x3c]
  40b6ca:	call   DWORD PTR ds:0x430260
  40b6d0:	push   edi
  40b6d1:	lea    eax,[esp+0x24]
  40b6d5:	push   0x430d64
  40b6da:	push   eax
  40b6db:	mov    DWORD PTR [esp+0x70],0x3
  40b6e3:	call   DWORD PTR ds:0x430170
  40b6e9:	add    esp,0xc
  40b6ec:	push   eax
  40b6ed:	lea    ecx,[esp+0x40]
  40b6f1:	mov    BYTE PTR [esp+0x68],0x4
  40b6f6:	call   DWORD PTR ds:0x430174
  40b6fc:	lea    ecx,[esp+0x20]
  40b700:	mov    BYTE PTR [esp+0x64],0x3
  40b705:	call   DWORD PTR ds:0x43025c
  40b70b:	push   0x33
  40b70d:	push   0x431648
  40b712:	push   0x430d24
  40b717:	lea    ecx,[esp+0x1c]
  40b71b:	call   DWORD PTR ds:0x430000
  40b721:	mov    BYTE PTR [esp+0x64],0x5
  40b726:	cmp    DWORD PTR [esp+0x54],0x10
  40b72b:	mov    eax,DWORD PTR [esp+0x40]
  40b72f:	jae    0x40b735
  40b731:	lea    eax,[esp+0x40]
  40b735:	push   0x10000010
  40b73a:	push   eax
  40b73b:	lea    ecx,[esp+0x18]
  40b73f:	push   ecx
  40b740:	lea    ecx,[esp+0x20]
  40b744:	call   DWORD PTR ds:0x430008
  40b74a:	push   0x43581c
  40b74f:	lea    edx,[esp+0x18]
  40b753:	push   edx
  40b754:	call   0x429e76
  40b759:	mov    eax,0x1
  40b75e:	mov    ecx,DWORD PTR [esp+0x5c]
  40b762:	mov    DWORD PTR fs:0x0,ecx
  40b769:	pop    ecx
  40b76a:	pop    edi
  40b76b:	pop    esi
  40b76c:	mov    ecx,DWORD PTR [esp+0x4c]
  40b770:	xor    ecx,esp
  40b772:	call   0x42503a
  40b777:	add    esp,0x5c
  40b77a:	ret    
  40b77b:	int3   
  40b77c:	int3   
  40b77d:	int3   
  40b77e:	int3   
  40b77f:	int3   
  40b780:	sub    esp,0xc
  40b783:	mov    eax,DWORD PTR [esp+0x10]
  40b787:	mov    ecx,DWORD PTR [esp+0x14]
  40b78b:	lea    edx,[esp]
  40b78e:	push   edx
  40b78f:	mov    DWORD PTR [esi],0x0
  40b795:	mov    DWORD PTR [esp+0x4],eax
  40b799:	mov    DWORD PTR [esp+0x8],ecx
  40b79d:	call   0x408050
  40b7a2:	add    esp,0x4
  40b7a5:	test   al,al
  40b7a7:	jne    0x40b7ce
  40b7a9:	lea    eax,[esi+0x8]
  40b7ac:	test   eax,eax
  40b7ae:	je     0x40b7bc
  40b7b0:	mov    ecx,DWORD PTR [esp]
  40b7b3:	mov    edx,DWORD PTR [esp+0x4]
  40b7b7:	mov    DWORD PTR [eax],ecx
  40b7b9:	mov    DWORD PTR [eax+0x4],edx
  40b7bc:	mov    eax,0x431674
  40b7c1:	or     eax,0x1
  40b7c4:	mov    DWORD PTR [esi],eax
  40b7c6:	mov    eax,esi
  40b7c8:	add    esp,0xc
  40b7cb:	ret    0x8
  40b7ce:	mov    DWORD PTR [esi],0x0
  40b7d4:	mov    eax,esi
  40b7d6:	add    esp,0xc
  40b7d9:	ret    0x8
  40b7dc:	int3   
  40b7dd:	int3   
  40b7de:	int3   
  40b7df:	int3   
  40b7e0:	sub    esp,0xc
  40b7e3:	mov    eax,DWORD PTR [esp+0x10]
  40b7e7:	mov    ecx,DWORD PTR [esp+0x14]
  40b7eb:	lea    edx,[esp]
  40b7ee:	push   edx
  40b7ef:	mov    DWORD PTR [esi],0x0
  40b7f5:	mov    DWORD PTR [esp+0x4],eax
  40b7f9:	mov    DWORD PTR [esp+0x8],ecx
  40b7fd:	call   0x408050
  40b802:	add    esp,0x4
  40b805:	test   al,al
  40b807:	jne    0x40b82e
  40b809:	lea    eax,[esi+0x8]
  40b80c:	test   eax,eax
  40b80e:	je     0x40b81c
  40b810:	mov    ecx,DWORD PTR [esp]
  40b813:	mov    edx,DWORD PTR [esp+0x4]
  40b817:	mov    DWORD PTR [eax],ecx
  40b819:	mov    DWORD PTR [eax+0x4],edx
  40b81c:	mov    eax,0x43167c
  40b821:	or     eax,0x1
  40b824:	mov    DWORD PTR [esi],eax
  40b826:	mov    eax,esi
  40b828:	add    esp,0xc
  40b82b:	ret    0x8
  40b82e:	mov    DWORD PTR [esi],0x0
  40b834:	mov    eax,esi
  40b836:	add    esp,0xc
  40b839:	ret    0x8
  40b83c:	int3   
  40b83d:	int3   
  40b83e:	int3   
  40b83f:	int3   
  40b840:	mov    eax,DWORD PTR [esp+0xc]
  40b844:	xor    ecx,ecx
  40b846:	cmp    eax,0x4
  40b849:	je     0x40b896
  40b84b:	cmp    eax,ecx
  40b84d:	je     0x40b87f
  40b84f:	cmp    eax,0x1
  40b852:	je     0x40b87f
  40b854:	cmp    eax,0x2
  40b857:	je     0x40b8a6
  40b859:	cmp    eax,0x3
  40b85c:	jne    0x40b896
  40b85e:	push   esi
  40b85f:	mov    esi,DWORD PTR [esp+0xc]
  40b863:	mov    ecx,DWORD PTR [esi]
  40b865:	push   0x43eef0
  40b86a:	call   DWORD PTR ds:0x4302d4
  40b870:	movzx  eax,al
  40b873:	neg    eax
  40b875:	sbb    eax,eax
  40b877:	and    eax,DWORD PTR [esp+0x8]
  40b87b:	mov    DWORD PTR [esi],eax
  40b87d:	pop    esi
  40b87e:	ret    
  40b87f:	mov    eax,DWORD PTR [esp+0x8]
  40b883:	cmp    eax,ecx
  40b885:	je     0x40b8a6
  40b887:	mov    ecx,DWORD PTR [esp+0x4]
  40b88b:	mov    edx,DWORD PTR [ecx]
  40b88d:	mov    DWORD PTR [eax],edx
  40b88f:	mov    ecx,DWORD PTR [ecx+0x4]
  40b892:	mov    DWORD PTR [eax+0x4],ecx
  40b895:	ret    
  40b896:	mov    eax,DWORD PTR [esp+0x8]
  40b89a:	mov    BYTE PTR [eax+0x5],cl
  40b89d:	mov    BYTE PTR [eax+0x4],cl
  40b8a0:	mov    DWORD PTR [eax],0x43eef0
  40b8a6:	ret    
  40b8a7:	int3   
  40b8a8:	int3   
  40b8a9:	int3   
  40b8aa:	int3   
  40b8ab:	int3   
  40b8ac:	int3   
  40b8ad:	int3   
  40b8ae:	int3   
  40b8af:	int3   
  40b8b0:	mov    eax,DWORD PTR [esp+0xc]
  40b8b4:	xor    ecx,ecx
  40b8b6:	cmp    eax,0x4
  40b8b9:	je     0x40b906
  40b8bb:	cmp    eax,ecx
  40b8bd:	je     0x40b8ef
  40b8bf:	cmp    eax,0x1
  40b8c2:	je     0x40b8ef
  40b8c4:	cmp    eax,0x2
  40b8c7:	je     0x40b916
  40b8c9:	cmp    eax,0x3
  40b8cc:	jne    0x40b906
  40b8ce:	push   esi
  40b8cf:	mov    esi,DWORD PTR [esp+0xc]
  40b8d3:	mov    ecx,DWORD PTR [esi]
  40b8d5:	push   0x43ef70
  40b8da:	call   DWORD PTR ds:0x4302d4
  40b8e0:	movzx  eax,al
  40b8e3:	neg    eax
  40b8e5:	sbb    eax,eax
  40b8e7:	and    eax,DWORD PTR [esp+0x8]
  40b8eb:	mov    DWORD PTR [esi],eax
  40b8ed:	pop    esi
  40b8ee:	ret    
  40b8ef:	mov    eax,DWORD PTR [esp+0x8]
  40b8f3:	cmp    eax,ecx
  40b8f5:	je     0x40b916
  40b8f7:	mov    ecx,DWORD PTR [esp+0x4]
  40b8fb:	mov    edx,DWORD PTR [ecx]
  40b8fd:	mov    DWORD PTR [eax],edx
  40b8ff:	mov    ecx,DWORD PTR [ecx+0x4]
  40b902:	mov    DWORD PTR [eax+0x4],ecx
  40b905:	ret    
  40b906:	mov    eax,DWORD PTR [esp+0x8]
  40b90a:	mov    BYTE PTR [eax+0x5],cl
  40b90d:	mov    BYTE PTR [eax+0x4],cl
  40b910:	mov    DWORD PTR [eax],0x43ef70
  40b916:	ret    
  40b917:	int3   
  40b918:	int3   
  40b919:	int3   
  40b91a:	int3   
  40b91b:	int3   
  40b91c:	int3   
  40b91d:	int3   
  40b91e:	int3   
  40b91f:	int3   
  40b920:	mov    ecx,esi
  40b922:	call   DWORD PTR ds:0x4303ac
  40b928:	mov    eax,DWORD PTR [esp+0x4]
  40b92c:	mov    ecx,DWORD PTR [esp+0x8]
  40b930:	mov    DWORD PTR [esi+0xc],eax
  40b933:	mov    DWORD PTR [esi],0x43294c
  40b939:	mov    DWORD PTR [esi+0x10],ecx
  40b93c:	mov    eax,esi
  40b93e:	ret    0x8
  40b941:	int3   
  40b942:	int3   
  40b943:	int3   
  40b944:	int3   
  40b945:	int3   
  40b946:	int3   
  40b947:	int3   
  40b948:	int3   
  40b949:	int3   
  40b94a:	int3   
  40b94b:	int3   
  40b94c:	int3   
  40b94d:	int3   
  40b94e:	int3   
  40b94f:	int3   
  40b950:	mov    eax,DWORD PTR [ecx+0xc]
  40b953:	ret    
  40b954:	int3   
  40b955:	int3   
  40b956:	int3   
  40b957:	int3   
  40b958:	int3   
  40b959:	int3   
  40b95a:	int3   
  40b95b:	int3   
  40b95c:	int3   
  40b95d:	int3   
  40b95e:	int3   
  40b95f:	int3   
  40b960:	push   esi
  40b961:	mov    esi,ecx
  40b963:	call   DWORD PTR ds:0x4303a8
  40b969:	test   BYTE PTR [esp+0x8],0x1
  40b96e:	je     0x40b979
  40b970:	push   esi
  40b971:	call   0x42504a
  40b976:	add    esp,0x4
  40b979:	mov    eax,esi
  40b97b:	pop    esi
  40b97c:	ret    0x4
  40b97f:	int3   
  40b980:	jmp    DWORD PTR ds:0x4303a8
  40b986:	int3   
  40b987:	int3   
  40b988:	int3   
  40b989:	int3   
  40b98a:	int3   
  40b98b:	int3   
  40b98c:	int3   
  40b98d:	int3   
  40b98e:	int3   
  40b98f:	int3   
  40b990:	push   0xffffffff
  40b992:	push   0x42ae8a
  40b997:	mov    eax,fs:0x0
  40b99d:	push   eax
  40b99e:	sub    esp,0x8
  40b9a1:	push   ebx
  40b9a2:	push   edi
  40b9a3:	mov    eax,ds:0x43e020
  40b9a8:	xor    eax,esp
  40b9aa:	push   eax
  40b9ab:	lea    eax,[esp+0x14]
  40b9af:	mov    fs:0x0,eax
  40b9b5:	mov    DWORD PTR [esp+0x1c],0x0
  40b9bd:	mov    edi,ecx
  40b9bf:	mov    ecx,esi
  40b9c1:	mov    DWORD PTR [esp+0x10],esi
  40b9c5:	mov    DWORD PTR [esp+0xc],0x0
  40b9cd:	call   DWORD PTR ds:0x430260
  40b9d3:	mov    DWORD PTR [esp+0x1c],0x0
  40b9db:	mov    eax,DWORD PTR [edi+0x14]
  40b9de:	lea    ebx,[eax+eax*2+0x1]
  40b9e2:	push   ebx
  40b9e3:	mov    ecx,esi
  40b9e5:	mov    DWORD PTR [esp+0x10],0x1
  40b9ed:	call   DWORD PTR ds:0x4301d0
  40b9f3:	cmp    DWORD PTR [esi+0x18],0x10
  40b9f7:	jb     0x40b9fe
  40b9f9:	mov    eax,DWORD PTR [esi+0x4]
  40b9fc:	jmp    0x40ba01
  40b9fe:	lea    eax,[esi+0x4]
  40ba01:	cmp    DWORD PTR [edi+0x18],0x8
  40ba05:	jb     0x40ba0c
  40ba07:	mov    edi,DWORD PTR [edi+0x4]
  40ba0a:	jmp    0x40ba0f
  40ba0c:	add    edi,0x4
  40ba0f:	push   0x0
  40ba11:	push   0x0
  40ba13:	push   ebx
  40ba14:	push   eax
  40ba15:	push   0xffffffff
  40ba17:	push   edi
  40ba18:	push   0x0
  40ba1a:	push   0xfde9
  40ba1f:	call   DWORD PTR ds:0x430074
  40ba25:	test   eax,eax
  40ba27:	je     0x40ba33
  40ba29:	dec    eax
  40ba2a:	push   eax
  40ba2b:	mov    ecx,esi
  40ba2d:	call   DWORD PTR ds:0x4301d0
  40ba33:	mov    eax,esi
  40ba35:	mov    ecx,DWORD PTR [esp+0x14]
  40ba39:	mov    DWORD PTR fs:0x0,ecx
  40ba40:	pop    ecx
  40ba41:	pop    edi
  40ba42:	pop    ebx
  40ba43:	add    esp,0x14
  40ba46:	ret    
  40ba47:	int3   
  40ba48:	int3   
  40ba49:	int3   
  40ba4a:	int3   
  40ba4b:	int3   
  40ba4c:	int3   
  40ba4d:	int3   
  40ba4e:	int3   
  40ba4f:	int3   
  40ba50:	push   0xffffffff
  40ba52:	push   0x42ae4a
  40ba57:	mov    eax,fs:0x0
  40ba5d:	push   eax
  40ba5e:	sub    esp,0x8
  40ba61:	push   ebp
  40ba62:	push   edi
  40ba63:	mov    eax,ds:0x43e020
  40ba68:	xor    eax,esp
  40ba6a:	push   eax
  40ba6b:	lea    eax,[esp+0x14]
  40ba6f:	mov    fs:0x0,eax
  40ba75:	mov    ebp,DWORD PTR [esp+0x24]
  40ba79:	mov    DWORD PTR [esp+0x1c],0x0
  40ba81:	mov    ecx,esi
  40ba83:	mov    DWORD PTR [esp+0x10],esi
  40ba87:	mov    DWORD PTR [esp+0xc],0x0
  40ba8f:	call   DWORD PTR ds:0x430254
  40ba95:	mov    eax,ebp
  40ba97:	mov    DWORD PTR [esp+0x1c],0x0
  40ba9f:	mov    DWORD PTR [esp+0xc],0x1
  40baa7:	lea    edx,[eax+0x1]
  40baaa:	lea    ebx,[ebx+0x0]
  40bab0:	mov    cl,BYTE PTR [eax]
  40bab2:	inc    eax
  40bab3:	test   cl,cl
  40bab5:	jne    0x40bab0
  40bab7:	sub    eax,edx
  40bab9:	lea    edi,[eax+eax*1+0x2]
  40babd:	push   edi
  40babe:	mov    ecx,esi
  40bac0:	call   DWORD PTR ds:0x4301dc
  40bac6:	cmp    DWORD PTR [esi+0x18],0x8
  40baca:	jb     0x40bad1
  40bacc:	mov    eax,DWORD PTR [esi+0x4]
  40bacf:	jmp    0x40bad4
  40bad1:	lea    eax,[esi+0x4]
  40bad4:	push   edi
  40bad5:	push   eax
  40bad6:	push   0xffffffff
  40bad8:	push   ebp
  40bad9:	push   0x0
  40badb:	push   0xfde9
  40bae0:	call   DWORD PTR ds:0x430048
  40bae6:	test   eax,eax
  40bae8:	je     0x40baf4
  40baea:	dec    eax
  40baeb:	push   eax
  40baec:	mov    ecx,esi
  40baee:	call   DWORD PTR ds:0x4301dc
  40baf4:	mov    eax,esi
  40baf6:	mov    ecx,DWORD PTR [esp+0x14]
  40bafa:	mov    DWORD PTR fs:0x0,ecx
  40bb01:	pop    ecx
  40bb02:	pop    edi
  40bb03:	pop    ebp
  40bb04:	add    esp,0x14
  40bb07:	ret    
  40bb08:	int3   
  40bb09:	int3   
  40bb0a:	int3   
  40bb0b:	int3   
  40bb0c:	int3   
  40bb0d:	int3   
  40bb0e:	int3   
  40bb0f:	int3   
  40bb10:	push   0xffffffff
  40bb12:	push   0x42add9
  40bb17:	mov    eax,fs:0x0
  40bb1d:	push   eax
  40bb1e:	sub    esp,0x1c
  40bb21:	push   esi
  40bb22:	mov    eax,ds:0x43e020
  40bb27:	xor    eax,esp
  40bb29:	push   eax
  40bb2a:	lea    eax,[esp+0x24]
  40bb2e:	mov    fs:0x0,eax
  40bb34:	mov    eax,DWORD PTR [esp+0x34]
  40bb38:	cmp    DWORD PTR [eax+0x18],0x10
  40bb3c:	jb     0x40bb43
  40bb3e:	mov    eax,DWORD PTR [eax+0x4]
  40bb41:	jmp    0x40bb46
  40bb43:	add    eax,0x4
  40bb46:	mov    ecx,DWORD PTR [ecx]
  40bb48:	test   eax,eax
  40bb4a:	je     0x40bb55
  40bb4c:	push   eax
  40bb4d:	push   ecx
  40bb4e:	call   0x412400
  40bb53:	jmp    0x40bb58
  40bb55:	mov    eax,DWORD PTR [ecx+0x18]
  40bb58:	test   eax,eax
  40bb5a:	jne    0x40bb71
  40bb5c:	xor    al,al
  40bb5e:	mov    ecx,DWORD PTR [esp+0x24]
  40bb62:	mov    DWORD PTR fs:0x0,ecx
  40bb69:	pop    ecx
  40bb6a:	pop    esi
  40bb6b:	add    esp,0x28
  40bb6e:	ret    0x8
  40bb71:	mov    eax,DWORD PTR [eax+0x4]
  40bb74:	test   eax,eax
  40bb76:	jne    0x40bb7d
  40bb78:	mov    eax,0x4400e0
  40bb7d:	push   eax
  40bb7e:	lea    esi,[esp+0xc]
  40bb82:	call   0x40ba50
  40bb87:	add    esp,0x4
  40bb8a:	mov    ecx,DWORD PTR [esp+0x38]
  40bb8e:	push   eax
  40bb8f:	mov    DWORD PTR [esp+0x30],0x0
  40bb97:	call   DWORD PTR ds:0x43017c
  40bb9d:	mov    ecx,esi
  40bb9f:	mov    DWORD PTR [esp+0x2c],0xffffffff
  40bba7:	call   DWORD PTR ds:0x430264
  40bbad:	mov    al,0x1
  40bbaf:	mov    ecx,DWORD PTR [esp+0x24]
  40bbb3:	mov    DWORD PTR fs:0x0,ecx
  40bbba:	pop    ecx
  40bbbb:	pop    esi
  40bbbc:	add    esp,0x28
  40bbbf:	ret    0x8
  40bbc2:	int3   
  40bbc3:	int3   
  40bbc4:	int3   
  40bbc5:	int3   
  40bbc6:	int3   
  40bbc7:	int3   
  40bbc8:	int3   
  40bbc9:	int3   
  40bbca:	int3   
  40bbcb:	int3   
  40bbcc:	int3   
  40bbcd:	int3   
  40bbce:	int3   
  40bbcf:	int3   
  40bbd0:	push   0xffffffff
  40bbd2:	push   0x42b6a9
  40bbd7:	mov    eax,fs:0x0
  40bbdd:	push   eax
  40bbde:	sub    esp,0x24
  40bbe1:	mov    eax,ds:0x43e020
  40bbe6:	xor    eax,esp
  40bbe8:	mov    DWORD PTR [esp+0x20],eax
  40bbec:	push   ebx
  40bbed:	push   ebp
  40bbee:	push   esi
  40bbef:	push   edi
  40bbf0:	mov    eax,ds:0x43e020
  40bbf5:	xor    eax,esp
  40bbf7:	push   eax
  40bbf8:	lea    eax,[esp+0x38]
  40bbfc:	mov    fs:0x0,eax
  40bc02:	mov    esi,DWORD PTR [esp+0x48]
  40bc06:	mov    ebx,edx
  40bc08:	cmp    DWORD PTR [ebx+0x18],0x10
  40bc0c:	mov    DWORD PTR [esp+0x14],ecx
  40bc10:	lea    ebp,[ebx+0x4]
  40bc13:	jb     0x40bc1a
  40bc15:	mov    eax,DWORD PTR [ebp+0x0]
  40bc18:	jmp    0x40bc1c
  40bc1a:	mov    eax,ebp
  40bc1c:	mov    ecx,DWORD PTR [ecx]
  40bc1e:	test   eax,eax
  40bc20:	je     0x40bc2d
  40bc22:	push   eax
  40bc23:	push   ecx
  40bc24:	call   0x412400
  40bc29:	mov    edi,eax
  40bc2b:	jmp    0x40bc30
  40bc2d:	mov    edi,DWORD PTR [ecx+0x18]
  40bc30:	mov    ecx,esi
  40bc32:	lea    esi,[esp+0x18]
  40bc36:	call   0x40b990
  40bc3b:	mov    DWORD PTR [esp+0x40],0x0
  40bc43:	test   edi,edi
  40bc45:	je     0x40bc54
  40bc47:	mov    eax,DWORD PTR [esp+0x14]
  40bc4b:	mov    eax,DWORD PTR [eax]
  40bc4d:	mov    edx,edi
  40bc4f:	call   0x4124e0
  40bc54:	cmp    DWORD PTR [ebx+0x18],0x10
  40bc58:	jb     0x40bc5f
  40bc5a:	mov    edi,DWORD PTR [ebp+0x0]
  40bc5d:	jmp    0x40bc61
  40bc5f:	mov    edi,ebp
  40bc61:	mov    ecx,DWORD PTR [esp+0x14]
  40bc65:	mov    ecx,DWORD PTR [ecx]
  40bc67:	mov    eax,DWORD PTR [ecx+0x10]
  40bc6a:	test   eax,eax
  40bc6c:	je     0x40bc79
  40bc6e:	mov    edi,edi
  40bc70:	mov    ecx,eax
  40bc72:	mov    eax,DWORD PTR [ecx+0x10]
  40bc75:	test   eax,eax
  40bc77:	jne    0x40bc70
  40bc79:	cmp    BYTE PTR [edi],0x0
  40bc7c:	mov    esi,DWORD PTR [ecx+0x14]
  40bc7f:	mov    eax,edi
  40bc81:	je     0x40bc89
  40bc83:	inc    eax
  40bc84:	cmp    BYTE PTR [eax],0x0
  40bc87:	jne    0x40bc83
  40bc89:	sub    eax,edi
  40bc8b:	inc    eax
  40bc8c:	neg    esi
  40bc8e:	sbb    esi,esi
  40bc90:	not    esi
  40bc92:	and    esi,ecx
  40bc94:	mov    ebx,eax
  40bc96:	add    esi,0x30
  40bc99:	call   0x413670
  40bc9e:	mov    ebp,eax
  40bca0:	test   ebx,ebx
  40bca2:	jbe    0x40bcb1
  40bca4:	sub    edi,ebp
  40bca6:	mov    dl,BYTE PTR [edi+eax*1]
  40bca9:	mov    BYTE PTR [eax],dl
  40bcab:	inc    eax
  40bcac:	sub    ebx,0x1
  40bcaf:	jne    0x40bca6
  40bcb1:	cmp    DWORD PTR [esp+0x30],0x10
  40bcb6:	mov    edi,DWORD PTR [esp+0x1c]
  40bcba:	jae    0x40bcc0
  40bcbc:	lea    edi,[esp+0x1c]
  40bcc0:	mov    eax,DWORD PTR [esp+0x14]
  40bcc4:	mov    ecx,DWORD PTR [eax]
  40bcc6:	mov    eax,DWORD PTR [ecx+0x10]
  40bcc9:	test   eax,eax
  40bccb:	je     0x40bcd9
  40bccd:	lea    ecx,[ecx+0x0]
  40bcd0:	mov    ecx,eax
  40bcd2:	mov    eax,DWORD PTR [ecx+0x10]
  40bcd5:	test   eax,eax
  40bcd7:	jne    0x40bcd0
  40bcd9:	cmp    BYTE PTR [edi],0x0
  40bcdc:	mov    esi,DWORD PTR [ecx+0x14]
  40bcdf:	mov    eax,edi
  40bce1:	je     0x40bce9
  40bce3:	inc    eax
  40bce4:	cmp    BYTE PTR [eax],0x0
  40bce7:	jne    0x40bce3
  40bce9:	sub    eax,edi
  40bceb:	inc    eax
  40bcec:	neg    esi
  40bcee:	sbb    esi,esi
  40bcf0:	not    esi
  40bcf2:	and    esi,ecx
  40bcf4:	mov    ebx,eax
  40bcf6:	add    esi,0x30
  40bcf9:	call   0x413670
  40bcfe:	test   ebx,ebx
  40bd00:	jbe    0x40bd1b
  40bd02:	mov    esi,edi
  40bd04:	mov    ecx,eax
  40bd06:	sub    esi,eax
  40bd08:	mov    edi,ebx
  40bd0a:	lea    ebx,[ebx+0x0]
  40bd10:	mov    dl,BYTE PTR [esi+ecx*1]
  40bd13:	mov    BYTE PTR [ecx],dl
  40bd15:	inc    ecx
  40bd16:	sub    edi,0x1
  40bd19:	jne    0x40bd10
  40bd1b:	mov    ebx,DWORD PTR [esp+0x14]
  40bd1f:	mov    ecx,DWORD PTR [ebx]
  40bd21:	mov    edx,DWORD PTR [ecx+0x10]
  40bd24:	test   edx,edx
  40bd26:	je     0x40bd31
  40bd28:	mov    ecx,edx
  40bd2a:	mov    edx,DWORD PTR [ecx+0x10]
  40bd2d:	test   edx,edx
  40bd2f:	jne    0x40bd28
  40bd31:	mov    esi,DWORD PTR [ecx+0x14]
  40bd34:	neg    esi
  40bd36:	sbb    esi,esi
  40bd38:	not    esi
  40bd3a:	push   eax
  40bd3b:	and    esi,ecx
  40bd3d:	push   0x1
  40bd3f:	add    esi,0x30
  40bd42:	mov    edi,ebp
  40bd44:	call   0x4125c0
  40bd49:	mov    ecx,DWORD PTR [ebx]
  40bd4b:	xor    edx,edx
  40bd4d:	cmp    DWORD PTR [ecx+0x18],edx
  40bd50:	je     0x40bd60
  40bd52:	mov    esi,DWORD PTR [ecx+0x1c]
  40bd55:	mov    DWORD PTR [eax+0x28],esi
  40bd58:	mov    esi,DWORD PTR [ecx+0x1c]
  40bd5b:	mov    DWORD PTR [esi+0x2c],eax
  40bd5e:	jmp    0x40bd66
  40bd60:	mov    DWORD PTR [eax+0x28],edx
  40bd63:	mov    DWORD PTR [ecx+0x18],eax
  40bd66:	mov    DWORD PTR [ecx+0x1c],eax
  40bd69:	mov    DWORD PTR [eax+0x10],ecx
  40bd6c:	lea    ecx,[esp+0x18]
  40bd70:	mov    DWORD PTR [eax+0x2c],edx
  40bd73:	mov    DWORD PTR [esp+0x40],0xffffffff
  40bd7b:	call   DWORD PTR ds:0x43025c
  40bd81:	mov    ecx,DWORD PTR [esp+0x38]
  40bd85:	mov    DWORD PTR fs:0x0,ecx
  40bd8c:	pop    ecx
  40bd8d:	pop    edi
  40bd8e:	pop    esi
  40bd8f:	pop    ebp
  40bd90:	pop    ebx
  40bd91:	mov    ecx,DWORD PTR [esp+0x20]
  40bd95:	xor    ecx,esp
  40bd97:	call   0x42503a
  40bd9c:	add    esp,0x30
  40bd9f:	ret    0x4
  40bda2:	int3   
  40bda3:	int3   
  40bda4:	int3   
  40bda5:	int3   
  40bda6:	int3   
  40bda7:	int3   
  40bda8:	int3   
  40bda9:	int3   
  40bdaa:	int3   
  40bdab:	int3   
  40bdac:	int3   
  40bdad:	int3   
  40bdae:	int3   
  40bdaf:	int3   
  40bdb0:	push   0xffffffff
  40bdb2:	push   0x42b6a9
  40bdb7:	mov    eax,fs:0x0
  40bdbd:	push   eax
  40bdbe:	sub    esp,0x24
  40bdc1:	mov    eax,ds:0x43e020
  40bdc6:	xor    eax,esp
  40bdc8:	mov    DWORD PTR [esp+0x20],eax
  40bdcc:	push   ebx
  40bdcd:	push   ebp
  40bdce:	push   esi
  40bdcf:	push   edi
  40bdd0:	mov    eax,ds:0x43e020
  40bdd5:	xor    eax,esp
  40bdd7:	push   eax
  40bdd8:	lea    eax,[esp+0x38]
  40bddc:	mov    fs:0x0,eax
  40bde2:	mov    esi,DWORD PTR [esp+0x48]
  40bde6:	mov    ebx,edx
  40bde8:	cmp    DWORD PTR [ebx+0x18],0x10
  40bdec:	mov    DWORD PTR [esp+0x14],ecx
  40bdf0:	lea    ebp,[ebx+0x4]
  40bdf3:	jb     0x40bdfa
  40bdf5:	mov    eax,DWORD PTR [ebp+0x0]
  40bdf8:	jmp    0x40bdfc
  40bdfa:	mov    eax,ebp
  40bdfc:	mov    ecx,DWORD PTR [ecx]
  40bdfe:	test   eax,eax
  40be00:	je     0x40be0d
  40be02:	push   eax
  40be03:	push   ecx
  40be04:	call   0x412470
  40be09:	mov    edi,eax
  40be0b:	jmp    0x40be10
  40be0d:	mov    edi,DWORD PTR [ecx+0x20]
  40be10:	mov    ecx,esi
  40be12:	lea    esi,[esp+0x18]
  40be16:	call   0x40b990
  40be1b:	mov    DWORD PTR [esp+0x40],0x0
  40be23:	test   edi,edi
  40be25:	je     0x40be34
  40be27:	mov    eax,DWORD PTR [esp+0x14]
  40be2b:	mov    ecx,DWORD PTR [eax]
  40be2d:	mov    edx,edi
  40be2f:	call   0x412550
  40be34:	cmp    DWORD PTR [ebx+0x18],0x10
  40be38:	jb     0x40be3f
  40be3a:	mov    edi,DWORD PTR [ebp+0x0]
  40be3d:	jmp    0x40be41
  40be3f:	mov    edi,ebp
  40be41:	mov    ecx,DWORD PTR [esp+0x14]
  40be45:	mov    ecx,DWORD PTR [ecx]
  40be47:	mov    eax,DWORD PTR [ecx+0x10]
  40be4a:	test   eax,eax
  40be4c:	je     0x40be59
  40be4e:	mov    edi,edi
  40be50:	mov    ecx,eax
  40be52:	mov    eax,DWORD PTR [ecx+0x10]
  40be55:	test   eax,eax
  40be57:	jne    0x40be50
  40be59:	cmp    BYTE PTR [edi],0x0
  40be5c:	mov    esi,DWORD PTR [ecx+0x14]
  40be5f:	mov    eax,edi
  40be61:	je     0x40be69
  40be63:	inc    eax
  40be64:	cmp    BYTE PTR [eax],0x0
  40be67:	jne    0x40be63
  40be69:	sub    eax,edi
  40be6b:	inc    eax
  40be6c:	neg    esi
  40be6e:	sbb    esi,esi
  40be70:	not    esi
  40be72:	and    esi,ecx
  40be74:	mov    ebx,eax
  40be76:	add    esi,0x30
  40be79:	call   0x413670
  40be7e:	mov    ebp,eax
  40be80:	test   ebx,ebx
  40be82:	jbe    0x40be91
  40be84:	sub    edi,ebp
  40be86:	mov    dl,BYTE PTR [edi+eax*1]
  40be89:	mov    BYTE PTR [eax],dl
  40be8b:	inc    eax
  40be8c:	sub    ebx,0x1
  40be8f:	jne    0x40be86
  40be91:	cmp    DWORD PTR [esp+0x30],0x10
  40be96:	mov    edi,DWORD PTR [esp+0x1c]
  40be9a:	jae    0x40bea0
  40be9c:	lea    edi,[esp+0x1c]
  40bea0:	mov    eax,DWORD PTR [esp+0x14]
  40bea4:	mov    ecx,DWORD PTR [eax]
  40bea6:	mov    eax,DWORD PTR [ecx+0x10]
  40bea9:	test   eax,eax
  40beab:	je     0x40beb9
  40bead:	lea    ecx,[ecx+0x0]
  40beb0:	mov    ecx,eax
  40beb2:	mov    eax,DWORD PTR [ecx+0x10]
  40beb5:	test   eax,eax
  40beb7:	jne    0x40beb0
  40beb9:	cmp    BYTE PTR [edi],0x0
  40bebc:	mov    esi,DWORD PTR [ecx+0x14]
  40bebf:	mov    eax,edi
  40bec1:	je     0x40bec9
  40bec3:	inc    eax
  40bec4:	cmp    BYTE PTR [eax],0x0
  40bec7:	jne    0x40bec3
  40bec9:	sub    eax,edi
  40becb:	inc    eax
  40becc:	neg    esi
  40bece:	sbb    esi,esi
  40bed0:	not    esi
  40bed2:	and    esi,ecx
  40bed4:	mov    ebx,eax
  40bed6:	add    esi,0x30
  40bed9:	call   0x413670
  40bede:	test   ebx,ebx
  40bee0:	jbe    0x40befb
  40bee2:	mov    esi,edi
  40bee4:	mov    ecx,eax
  40bee6:	sub    esi,eax
  40bee8:	mov    edi,ebx
  40beea:	lea    ebx,[ebx+0x0]
  40bef0:	mov    dl,BYTE PTR [esi+ecx*1]
  40bef3:	mov    BYTE PTR [ecx],dl
  40bef5:	inc    ecx
  40bef6:	sub    edi,0x1
  40bef9:	jne    0x40bef0
  40befb:	mov    ebx,DWORD PTR [esp+0x14]
  40beff:	mov    ecx,DWORD PTR [ebx]
  40bf01:	mov    edx,DWORD PTR [ecx+0x10]
  40bf04:	test   edx,edx
  40bf06:	je     0x40bf11
  40bf08:	mov    ecx,edx
  40bf0a:	mov    edx,DWORD PTR [ecx+0x10]
  40bf0d:	test   edx,edx
  40bf0f:	jne    0x40bf08
  40bf11:	mov    esi,DWORD PTR [ecx+0x14]
  40bf14:	neg    esi
  40bf16:	sbb    esi,esi
  40bf18:	not    esi
  40bf1a:	and    esi,ecx
  40bf1c:	push   eax
  40bf1d:	add    esi,0x30
  40bf20:	mov    edi,ebp
  40bf22:	call   0x412680
  40bf27:	mov    ecx,DWORD PTR [ebx]
  40bf29:	xor    edx,edx
  40bf2b:	cmp    DWORD PTR [ecx+0x20],edx
  40bf2e:	je     0x40bf3e
  40bf30:	mov    esi,DWORD PTR [ecx+0x24]
  40bf33:	mov    DWORD PTR [eax+0x14],esi
  40bf36:	mov    esi,DWORD PTR [ecx+0x24]
  40bf39:	mov    DWORD PTR [esi+0x18],eax
  40bf3c:	jmp    0x40bf44
  40bf3e:	mov    DWORD PTR [eax+0x14],edx
  40bf41:	mov    DWORD PTR [ecx+0x20],eax
  40bf44:	mov    DWORD PTR [ecx+0x24],eax
  40bf47:	mov    DWORD PTR [eax+0x10],ecx
  40bf4a:	lea    ecx,[esp+0x18]
  40bf4e:	mov    DWORD PTR [eax+0x18],edx
  40bf51:	mov    DWORD PTR [esp+0x40],0xffffffff
  40bf59:	call   DWORD PTR ds:0x43025c
  40bf5f:	mov    ecx,DWORD PTR [esp+0x38]
  40bf63:	mov    DWORD PTR fs:0x0,ecx
  40bf6a:	pop    ecx
  40bf6b:	pop    edi
  40bf6c:	pop    esi
  40bf6d:	pop    ebp
  40bf6e:	pop    ebx
  40bf6f:	mov    ecx,DWORD PTR [esp+0x20]
  40bf73:	xor    ecx,esp
  40bf75:	call   0x42503a
  40bf7a:	add    esp,0x30
  40bf7d:	ret    0x4
  40bf80:	push   0xffffffff
  40bf82:	push   0x42add9
  40bf87:	mov    eax,fs:0x0
  40bf8d:	push   eax
  40bf8e:	sub    esp,0x1c
  40bf91:	push   esi
  40bf92:	mov    eax,ds:0x43e020
  40bf97:	xor    eax,esp
  40bf99:	push   eax
  40bf9a:	lea    eax,[esp+0x24]
  40bf9e:	mov    fs:0x0,eax
  40bfa4:	mov    eax,DWORD PTR [esp+0x34]
  40bfa8:	cmp    DWORD PTR [eax+0x18],0x10
  40bfac:	jb     0x40bfb3
  40bfae:	mov    eax,DWORD PTR [eax+0x4]
  40bfb1:	jmp    0x40bfb6
  40bfb3:	add    eax,0x4
  40bfb6:	mov    ecx,DWORD PTR [ecx]
  40bfb8:	test   eax,eax
  40bfba:	je     0x40bfc5
  40bfbc:	push   eax
  40bfbd:	push   ecx
  40bfbe:	call   0x412470
  40bfc3:	jmp    0x40bfc8
  40bfc5:	mov    eax,DWORD PTR [ecx+0x20]
  40bfc8:	test   eax,eax
  40bfca:	jne    0x40bfe1
  40bfcc:	xor    al,al
  40bfce:	mov    ecx,DWORD PTR [esp+0x24]
  40bfd2:	mov    DWORD PTR fs:0x0,ecx
  40bfd9:	pop    ecx
  40bfda:	pop    esi
  40bfdb:	add    esp,0x28
  40bfde:	ret    0x8
  40bfe1:	mov    eax,DWORD PTR [eax+0x4]
  40bfe4:	test   eax,eax
  40bfe6:	jne    0x40bfed
  40bfe8:	mov    eax,0x4400e0
  40bfed:	push   eax
  40bfee:	lea    esi,[esp+0xc]
  40bff2:	call   0x40ba50
  40bff7:	add    esp,0x4
  40bffa:	mov    ecx,DWORD PTR [esp+0x38]
  40bffe:	push   eax
  40bfff:	mov    DWORD PTR [esp+0x30],0x0
  40c007:	call   DWORD PTR ds:0x43017c
  40c00d:	mov    ecx,esi
  40c00f:	mov    DWORD PTR [esp+0x2c],0xffffffff
  40c017:	call   DWORD PTR ds:0x430264
  40c01d:	mov    al,0x1
  40c01f:	mov    ecx,DWORD PTR [esp+0x24]
  40c023:	mov    DWORD PTR fs:0x0,ecx
  40c02a:	pop    ecx
  40c02b:	pop    esi
  40c02c:	add    esp,0x28
  40c02f:	ret    0x8
  40c032:	int3   
  40c033:	int3   
  40c034:	int3   
  40c035:	int3   
  40c036:	int3   
  40c037:	int3   
  40c038:	int3   
  40c039:	int3   
  40c03a:	int3   
  40c03b:	int3   
  40c03c:	int3   
  40c03d:	int3   
  40c03e:	int3   
  40c03f:	int3   
  40c040:	sub    esp,0x8
  40c043:	push   ebp
  40c044:	mov    ebp,DWORD PTR [esp+0x14]
  40c048:	cmp    DWORD PTR [ebp+0x18],0x10
  40c04c:	jb     0x40c053
  40c04e:	mov    eax,DWORD PTR [ebp+0x4]
  40c051:	jmp    0x40c056
  40c053:	lea    eax,[ebp+0x4]
  40c056:	mov    ecx,DWORD PTR [esp+0x10]
  40c05a:	mov    ecx,DWORD PTR [ecx]
  40c05c:	test   eax,eax
  40c05e:	je     0x40c069
  40c060:	push   eax
  40c061:	push   ecx
  40c062:	call   0x412400
  40c067:	jmp    0x40c06c
  40c069:	mov    eax,DWORD PTR [ecx+0x18]
  40c06c:	test   eax,eax
  40c06e:	je     0x40c186
  40c074:	push   ebx
  40c075:	push   esi
  40c076:	push   edi
  40c077:	jmp    0x40c084
  40c079:	lea    esp,[esp+0x0]
  40c080:	mov    ebp,DWORD PTR [esp+0x20]
  40c084:	cmp    DWORD PTR [ebp+0x18],0x10
  40c088:	mov    esi,eax
  40c08a:	mov    DWORD PTR [esp+0x14],esi
  40c08e:	jb     0x40c098
  40c090:	add    ebp,0x4
  40c093:	mov    ebp,DWORD PTR [ebp+0x0]
  40c096:	jmp    0x40c09b
  40c098:	add    ebp,0x4
  40c09b:	test   ebp,ebp
  40c09d:	je     0x40c10d
  40c09f:	cmp    BYTE PTR [ebp+0x0],0x0
  40c0a3:	mov    ecx,ebp
  40c0a5:	je     0x40c0ad
  40c0a7:	inc    ecx
  40c0a8:	cmp    BYTE PTR [ecx],0x0
  40c0ab:	jne    0x40c0a7
  40c0ad:	mov    edi,DWORD PTR [eax+0x2c]
  40c0b0:	lea    ebx,[eax+0x2c]
  40c0b3:	sub    ecx,ebp
  40c0b5:	mov    DWORD PTR [esp+0x10],ebx
  40c0b9:	test   edi,edi
  40c0bb:	je     0x40c109
  40c0bd:	lea    ecx,[ecx+0x0]
  40c0c0:	mov    eax,DWORD PTR [edi]
  40c0c2:	test   eax,eax
  40c0c4:	je     0x40c0cb
  40c0c6:	mov    esi,DWORD PTR [edi+0x8]
  40c0c9:	jmp    0x40c0cd
  40c0cb:	xor    esi,esi
  40c0cd:	test   eax,eax
  40c0cf:	jne    0x40c0d6
  40c0d1:	mov    eax,0x4400e0
  40c0d6:	mov    edx,ebp
  40c0d8:	cmp    esi,ecx
  40c0da:	jne    0x40c0fe
  40c0dc:	add    esi,eax
  40c0de:	cmp    eax,esi
  40c0e0:	jae    0x40c0f2
  40c0e2:	mov    bl,BYTE PTR [eax]
  40c0e4:	cmp    bl,BYTE PTR [edx]
  40c0e6:	jne    0x40c0fa
  40c0e8:	inc    eax
  40c0e9:	inc    edx
  40c0ea:	cmp    eax,esi
  40c0ec:	jb     0x40c0e2
  40c0ee:	mov    ebx,DWORD PTR [esp+0x10]
  40c0f2:	mov    esi,DWORD PTR [esp+0x14]
  40c0f6:	mov    eax,edi
  40c0f8:	jmp    0x40c112
  40c0fa:	mov    ebx,DWORD PTR [esp+0x10]
  40c0fe:	mov    edi,DWORD PTR [edi+0x2c]
  40c101:	test   edi,edi
  40c103:	jne    0x40c0c0
  40c105:	mov    esi,DWORD PTR [esp+0x14]
  40c109:	xor    eax,eax
  40c10b:	jmp    0x40c112
  40c10d:	lea    ebx,[eax+0x2c]
  40c110:	mov    eax,DWORD PTR [ebx]
  40c112:	mov    edx,DWORD PTR [esp+0x1c]
  40c116:	mov    ecx,DWORD PTR [edx]
  40c118:	mov    edx,DWORD PTR [ecx+0x18]
  40c11b:	cmp    esi,edx
  40c11d:	jne    0x40c13e
  40c11f:	mov    esi,DWORD PTR [edx+0x2c]
  40c122:	mov    DWORD PTR [ecx+0x18],esi
  40c125:	mov    esi,DWORD PTR [edx+0x2c]
  40c128:	xor    edi,edi
  40c12a:	cmp    esi,edi
  40c12c:	je     0x40c136
  40c12e:	mov    DWORD PTR [esi+0x28],edi
  40c131:	mov    DWORD PTR [edx+0x10],edi
  40c134:	jmp    0x40c17b
  40c136:	mov    DWORD PTR [ecx+0x1c],edi
  40c139:	mov    DWORD PTR [edx+0x10],edi
  40c13c:	jmp    0x40c17b
  40c13e:	mov    edx,DWORD PTR [ecx+0x1c]
  40c141:	cmp    esi,edx
  40c143:	jne    0x40c164
  40c145:	mov    esi,DWORD PTR [edx+0x28]
  40c148:	xor    edi,edi
  40c14a:	cmp    esi,edi
  40c14c:	je     0x40c15c
  40c14e:	mov    DWORD PTR [ecx+0x1c],esi
  40c151:	mov    ecx,DWORD PTR [edx+0x28]
  40c154:	mov    DWORD PTR [ecx+0x2c],edi
  40c157:	mov    DWORD PTR [edx+0x10],edi
  40c15a:	jmp    0x40c17b
  40c15c:	mov    DWORD PTR [ecx+0x18],edi
  40c15f:	mov    DWORD PTR [edx+0x10],edi
  40c162:	jmp    0x40c17b
  40c164:	mov    edx,DWORD PTR [esi+0x28]
  40c167:	mov    ecx,DWORD PTR [ebx]
  40c169:	mov    DWORD PTR [edx+0x2c],ecx
  40c16c:	mov    edx,DWORD PTR [ebx]
  40c16e:	mov    ecx,DWORD PTR [esi+0x28]
  40c171:	mov    DWORD PTR [edx+0x28],ecx
  40c174:	mov    DWORD PTR [esi+0x10],0x0
  40c17b:	test   eax,eax
  40c17d:	jne    0x40c080
  40c183:	pop    edi
  40c184:	pop    esi
  40c185:	pop    ebx
  40c186:	pop    ebp
  40c187:	add    esp,0x8
  40c18a:	ret    0x8
  40c18d:	int3   
  40c18e:	int3   
  40c18f:	int3   
  40c190:	push   edi
  40c191:	mov    edi,eax
  40c193:	test   edi,edi
  40c195:	je     0x40c1a0
  40c197:	push   edi
  40c198:	push   ebx
  40c199:	call   0x412400
  40c19e:	jmp    0x40c1a3
  40c1a0:	mov    eax,DWORD PTR [ebx+0x18]
  40c1a3:	test   eax,eax
  40c1a5:	jne    0x40c200
  40c1a7:	mov    ecx,DWORD PTR [ebx+0x10]
  40c1aa:	mov    eax,ebx
  40c1ac:	test   ecx,ecx
  40c1ae:	je     0x40c1b9
  40c1b0:	mov    eax,ecx
  40c1b2:	mov    ecx,DWORD PTR [eax+0x10]
  40c1b5:	test   ecx,ecx
  40c1b7:	jne    0x40c1b0
  40c1b9:	push   esi
  40c1ba:	mov    esi,DWORD PTR [eax+0x14]
  40c1bd:	neg    esi
  40c1bf:	sbb    esi,esi
  40c1c1:	not    esi
  40c1c3:	push   0x431697
  40c1c8:	and    esi,eax
  40c1ca:	push   0x1
  40c1cc:	add    esi,0x30
  40c1cf:	call   0x4125c0
  40c1d4:	cmp    DWORD PTR [ebx+0x18],0x0
  40c1d8:	pop    esi
  40c1d9:	je     0x40c1e9
  40c1db:	mov    ecx,DWORD PTR [ebx+0x1c]
  40c1de:	mov    DWORD PTR [eax+0x28],ecx
  40c1e1:	mov    edx,DWORD PTR [ebx+0x1c]
  40c1e4:	mov    DWORD PTR [edx+0x2c],eax
  40c1e7:	jmp    0x40c1f3
  40c1e9:	mov    DWORD PTR [eax+0x28],0x0
  40c1f0:	mov    DWORD PTR [ebx+0x18],eax
  40c1f3:	mov    DWORD PTR [ebx+0x1c],eax
  40c1f6:	mov    DWORD PTR [eax+0x10],ebx
  40c1f9:	mov    DWORD PTR [eax+0x2c],0x0
  40c200:	mov    ecx,DWORD PTR [esp+0x8]
  40c204:	mov    DWORD PTR [ecx],eax
  40c206:	mov    eax,ecx
  40c208:	pop    edi
  40c209:	ret    0x4
  40c20c:	int3   
  40c20d:	int3   
  40c20e:	int3   
  40c20f:	int3   
  40c210:	push   esi
  40c211:	mov    esi,eax
  40c213:	add    esi,0x30
  40c216:	call   0x413610
  40c21b:	pop    esi
  40c21c:	ret    
  40c21d:	int3   
  40c21e:	int3   
  40c21f:	int3   
  40c220:	push   0xffffffff
  40c222:	push   0x42af89
  40c227:	mov    eax,fs:0x0
  40c22d:	push   eax
  40c22e:	push   ecx
  40c22f:	push   esi
  40c230:	push   edi
  40c231:	mov    eax,ds:0x43e020
  40c236:	xor    eax,esp
  40c238:	push   eax
  40c239:	lea    eax,[esp+0x10]
  40c23d:	mov    fs:0x0,eax
  40c243:	mov    esi,ecx
  40c245:	mov    DWORD PTR [esp+0xc],esi
  40c249:	mov    edi,DWORD PTR [esp+0x20]
  40c24d:	push   edi
  40c24e:	call   DWORD PTR ds:0x4303a0
  40c254:	add    edi,0xc
  40c257:	mov    DWORD PTR [esp+0x18],0x0
  40c25f:	push   edi
  40c260:	lea    ecx,[esi+0xc]
  40c263:	mov    DWORD PTR [esi],0x4329c0
  40c269:	call   DWORD PTR ds:0x430258
  40c26f:	mov    eax,esi
  40c271:	mov    ecx,DWORD PTR [esp+0x10]
  40c275:	mov    DWORD PTR fs:0x0,ecx
  40c27c:	pop    ecx
  40c27d:	pop    edi
  40c27e:	pop    esi
  40c27f:	add    esp,0x10
  40c282:	ret    0x4
  40c285:	int3   
  40c286:	int3   
  40c287:	int3   
  40c288:	int3   
  40c289:	int3   
  40c28a:	int3   
  40c28b:	int3   
  40c28c:	int3   
  40c28d:	int3   
  40c28e:	int3   
  40c28f:	int3   
  40c290:	push   0xffffffff
  40c292:	push   0x42dbbd
  40c297:	mov    eax,fs:0x0
  40c29d:	push   eax
  40c29e:	sub    esp,0x3c
  40c2a1:	mov    eax,ds:0x43e020
  40c2a6:	xor    eax,esp
  40c2a8:	mov    DWORD PTR [esp+0x38],eax
  40c2ac:	push   ebx
  40c2ad:	push   ebp
  40c2ae:	push   esi
  40c2af:	push   edi
  40c2b0:	mov    eax,ds:0x43e020
  40c2b5:	xor    eax,esp
  40c2b7:	push   eax
  40c2b8:	lea    eax,[esp+0x50]
  40c2bc:	mov    fs:0x0,eax
  40c2c2:	mov    esi,DWORD PTR [esp+0x60]
  40c2c6:	mov    ebp,ecx
  40c2c8:	push   0x4316e4
  40c2cd:	lea    ecx,[esp+0x34]
  40c2d1:	call   DWORD PTR ds:0x43011c
  40c2d7:	push   0x4316f8
  40c2dc:	lea    ecx,[esp+0x18]
  40c2e0:	mov    DWORD PTR [esp+0x5c],0x0
  40c2e8:	call   DWORD PTR ds:0x43011c
  40c2ee:	cmp    BYTE PTR [esp+0x64],0x0
  40c2f3:	je     0x40c33c
  40c2f5:	lea    eax,[esp+0x14]
  40c2f9:	lea    ecx,[ebp+0x4]
  40c2fc:	push   eax
  40c2fd:	mov    ebx,esi
  40c2ff:	mov    BYTE PTR [esp+0x5c],0x1
  40c304:	call   0x416ae0
  40c309:	xor    bl,bl
  40c30b:	lea    ecx,[esp+0x14]
  40c30f:	mov    BYTE PTR [esp+0x58],bl
  40c313:	call   DWORD PTR ds:0x43025c
  40c319:	push   0x431700
  40c31e:	lea    ecx,[esp+0x18]
  40c322:	call   DWORD PTR ds:0x43011c
  40c328:	add    ebp,0x8
  40c32b:	push   ebp
  40c32c:	lea    edi,[esp+0x18]
  40c330:	mov    BYTE PTR [esp+0x5c],0x3
  40c335:	call   0x416c00
  40c33a:	jmp    0x40c37c
  40c33c:	lea    ebx,[ebp+0x4]
  40c33f:	lea    edi,[esp+0x14]
  40c343:	mov    BYTE PTR [esp+0x58],0x2
  40c348:	call   0x416b70
  40c34d:	xor    bl,bl
  40c34f:	mov    ecx,edi
  40c351:	mov    BYTE PTR [esp+0x58],bl
  40c355:	call   DWORD PTR ds:0x43025c
  40c35b:	push   0x431700
  40c360:	lea    ecx,[esp+0x18]
  40c364:	call   DWORD PTR ds:0x43011c
  40c36a:	add    ebp,0x8
  40c36d:	push   ebp
  40c36e:	lea    edi,[esp+0x18]
  40c372:	mov    BYTE PTR [esp+0x5c],0x4
  40c377:	call   0x416c80
  40c37c:	lea    ecx,[esp+0x14]
  40c380:	mov    BYTE PTR [esp+0x58],bl
  40c384:	call   DWORD PTR ds:0x43025c
  40c38a:	lea    ecx,[esp+0x30]
  40c38e:	mov    DWORD PTR [esp+0x58],0xffffffff
  40c396:	call   DWORD PTR ds:0x43025c
  40c39c:	mov    ecx,DWORD PTR [esp+0x50]
  40c3a0:	mov    DWORD PTR fs:0x0,ecx
  40c3a7:	pop    ecx
  40c3a8:	pop    edi
  40c3a9:	pop    esi
  40c3aa:	pop    ebp
  40c3ab:	pop    ebx
  40c3ac:	mov    ecx,DWORD PTR [esp+0x38]
  40c3b0:	xor    ecx,esp
  40c3b2:	call   0x42503a
  40c3b7:	add    esp,0x48
  40c3ba:	ret    0x8
  40c3bd:	int3   
  40c3be:	int3   
  40c3bf:	int3   
  40c3c0:	push   0xffffffff
  40c3c2:	push   0x42db61
  40c3c7:	mov    eax,fs:0x0
  40c3cd:	push   eax
  40c3ce:	sub    esp,0x44
  40c3d1:	mov    eax,ds:0x43e020
  40c3d6:	xor    eax,esp
  40c3d8:	mov    DWORD PTR [esp+0x40],eax
  40c3dc:	push   ebx
  40c3dd:	push   ebp
  40c3de:	push   esi
  40c3df:	push   edi
  40c3e0:	mov    eax,ds:0x43e020
  40c3e5:	xor    eax,esp
  40c3e7:	push   eax
  40c3e8:	lea    eax,[esp+0x58]
  40c3ec:	mov    fs:0x0,eax
  40c3f2:	mov    esi,DWORD PTR [esp+0x68]
  40c3f6:	mov    ebx,ecx
  40c3f8:	push   0x43170c
  40c3fd:	lea    ecx,[esp+0x3c]
  40c401:	mov    DWORD PTR [esp+0x1c],ebx
  40c405:	call   DWORD PTR ds:0x43011c
  40c40b:	push   0x43171c
  40c410:	lea    ecx,[esp+0x20]
  40c414:	mov    DWORD PTR [esp+0x64],0x0
  40c41c:	call   DWORD PTR ds:0x43011c
  40c422:	cmp    BYTE PTR [esp+0x6c],0x0
  40c427:	je     0x40c4b7
  40c42d:	lea    ebp,[ebx+0x4]
  40c430:	push   ebp
  40c431:	lea    edi,[esp+0x20]
  40c435:	mov    BYTE PTR [esp+0x64],0x1
  40c43a:	call   0x416c00
  40c43f:	mov    ecx,edi
  40c441:	mov    BYTE PTR [esp+0x60],0x0
  40c446:	call   DWORD PTR ds:0x43025c
  40c44c:	push   0x431724
  40c451:	lea    ecx,[esp+0x20]
  40c455:	call   DWORD PTR ds:0x43011c
  40c45b:	lea    edx,[ebx+0x58]
  40c45e:	lea    ebx,[esp+0x1c]
  40c462:	mov    edi,esi
  40c464:	mov    BYTE PTR [esp+0x60],0x3
  40c469:	call   0x416d30
  40c46e:	mov    ecx,ebx
  40c470:	mov    BYTE PTR [esp+0x60],0x0
  40c475:	call   DWORD PTR ds:0x43025c
  40c47b:	push   0x431730
  40c480:	lea    ecx,[esp+0x20]
  40c484:	call   DWORD PTR ds:0x43011c
  40c48a:	mov    edi,DWORD PTR [esp+0x18]
  40c48e:	lea    eax,[esp+0x1c]
  40c492:	lea    ecx,[edi+0x5c]
  40c495:	push   eax
  40c496:	mov    ebx,esi
  40c498:	mov    BYTE PTR [esp+0x64],0x5
  40c49d:	call   0x416ae0
  40c4a2:	xor    ebx,ebx
  40c4a4:	lea    ecx,[esp+0x1c]
  40c4a8:	mov    BYTE PTR [esp+0x60],bl
  40c4ac:	call   DWORD PTR ds:0x43025c
  40c4b2:	jmp    0x40c53a
  40c4b7:	lea    ebp,[ebx+0x4]
  40c4ba:	push   ebp
  40c4bb:	lea    edi,[esp+0x20]
  40c4bf:	mov    BYTE PTR [esp+0x64],0x2
  40c4c4:	call   0x416c80
  40c4c9:	mov    ecx,edi
  40c4cb:	mov    BYTE PTR [esp+0x60],0x0
  40c4d0:	call   DWORD PTR ds:0x43025c
  40c4d6:	push   0x431724
  40c4db:	lea    ecx,[esp+0x20]
  40c4df:	call   DWORD PTR ds:0x43011c
  40c4e5:	add    ebx,0x58
  40c4e8:	lea    edi,[esp+0x1c]
  40c4ec:	mov    BYTE PTR [esp+0x60],0x4
  40c4f1:	call   0x416db0
  40c4f6:	mov    ecx,edi
  40c4f8:	mov    BYTE PTR [esp+0x60],0x0
  40c4fd:	call   DWORD PTR ds:0x43025c
  40c503:	push   0x431730
  40c508:	lea    ecx,[esp+0x20]
  40c50c:	call   DWORD PTR ds:0x43011c
  40c512:	mov    ebx,DWORD PTR [esp+0x18]
  40c516:	add    ebx,0x5c
  40c519:	lea    edi,[esp+0x1c]
  40c51d:	mov    BYTE PTR [esp+0x60],0x6
  40c522:	call   0x416b70
  40c527:	mov    ecx,edi
  40c529:	mov    BYTE PTR [esp+0x60],0x0
  40c52e:	call   DWORD PTR ds:0x43025c
  40c534:	mov    edi,DWORD PTR [esp+0x18]
  40c538:	xor    ebx,ebx
  40c53a:	mov    ecx,DWORD PTR ds:0x4301e0
  40c540:	mov    edx,DWORD PTR [ecx]
  40c542:	push   edx
  40c543:	push   0x40
  40c545:	mov    ecx,ebp
  40c547:	call   DWORD PTR ds:0x43021c
  40c54d:	mov    ecx,DWORD PTR ds:0x4301e0
  40c553:	cmp    eax,DWORD PTR [ecx]
  40c555:	je     0x40c58c
  40c557:	push   eax
  40c558:	push   ebx
  40c559:	lea    edx,[esp+0x24]
  40c55d:	push   edx
  40c55e:	mov    ecx,ebp
  40c560:	call   DWORD PTR ds:0x430218
  40c566:	push   eax
  40c567:	lea    ecx,[edi+0x20]
  40c56a:	mov    BYTE PTR [esp+0x64],0x7
  40c56f:	call   DWORD PTR ds:0x43017c
  40c575:	lea    ecx,[esp+0x1c]
  40c579:	mov    BYTE PTR [esp+0x60],bl
  40c57d:	call   DWORD PTR ds:0x430264
  40c583:	push   ebp
  40c584:	call   0x416e40
  40c589:	add    esp,0x4
  40c58c:	mov    eax,ds:0x4301e0
  40c591:	mov    ecx,DWORD PTR [eax]
  40c593:	push   ecx
  40c594:	push   0x430f38
  40c599:	mov    ecx,ebp
  40c59b:	call   DWORD PTR ds:0x430220
  40c5a1:	mov    ecx,DWORD PTR ds:0x4301e0
  40c5a7:	cmp    eax,DWORD PTR [ecx]
  40c5a9:	je     0x40c5dc
  40c5ab:	mov    edx,DWORD PTR [ecx]
  40c5ad:	push   edx
  40c5ae:	inc    eax
  40c5af:	push   eax
  40c5b0:	lea    eax,[esp+0x24]
  40c5b4:	push   eax
  40c5b5:	mov    ecx,ebp
  40c5b7:	call   DWORD PTR ds:0x430218
  40c5bd:	push   eax
  40c5be:	lea    ecx,[edi+0x3c]
  40c5c1:	mov    BYTE PTR [esp+0x64],0x8
  40c5c6:	call   DWORD PTR ds:0x43017c
  40c5cc:	lea    ecx,[esp+0x1c]
  40c5d0:	mov    BYTE PTR [esp+0x60],bl
  40c5d4:	call   DWORD PTR ds:0x430264
  40c5da:	jmp    0x40c5e6
  40c5dc:	push   ebp
  40c5dd:	lea    ecx,[edi+0x3c]
  40c5e0:	call   DWORD PTR ds:0x43017c
  40c5e6:	lea    ecx,[esp+0x38]
  40c5ea:	mov    DWORD PTR [esp+0x60],0xffffffff
  40c5f2:	call   DWORD PTR ds:0x43025c
  40c5f8:	mov    ecx,DWORD PTR [esp+0x58]
  40c5fc:	mov    DWORD PTR fs:0x0,ecx
  40c603:	pop    ecx
  40c604:	pop    edi
  40c605:	pop    esi
  40c606:	pop    ebp
  40c607:	pop    ebx
  40c608:	mov    ecx,DWORD PTR [esp+0x40]
  40c60c:	xor    ecx,esp
  40c60e:	call   0x42503a
  40c613:	add    esp,0x50
  40c616:	ret    0x8
  40c619:	int3   
  40c61a:	int3   
  40c61b:	int3   
  40c61c:	int3   
  40c61d:	int3   
  40c61e:	int3   
  40c61f:	int3   
  40c620:	push   0xffffffff
  40c622:	push   0x42e34b
  40c627:	mov    eax,fs:0x0
  40c62d:	push   eax
  40c62e:	sub    esp,0x3c
  40c631:	mov    eax,ds:0x43e020
  40c636:	xor    eax,esp
  40c638:	mov    DWORD PTR [esp+0x38],eax
  40c63c:	push   esi
  40c63d:	push   edi
  40c63e:	mov    eax,ds:0x43e020
  40c643:	xor    eax,esp
  40c645:	push   eax
  40c646:	lea    eax,[esp+0x48]
  40c64a:	mov    fs:0x0,eax
  40c650:	mov    edi,DWORD PTR [esp+0x58]
  40c654:	mov    esi,ecx
  40c656:	push   0x43173c
  40c65b:	lea    ecx,[esp+0x2c]
  40c65f:	call   DWORD PTR ds:0x43011c
  40c665:	push   0x431750
  40c66a:	lea    ecx,[esp+0x10]
  40c66e:	mov    DWORD PTR [esp+0x54],0x0
  40c676:	call   DWORD PTR ds:0x43011c
  40c67c:	cmp    BYTE PTR [esp+0x5c],0x0
  40c681:	je     0x40c699
  40c683:	add    esi,0x4
  40c686:	push   esi
  40c687:	lea    eax,[esp+0x10]
  40c68b:	push   eax
  40c68c:	push   edi
  40c68d:	mov    BYTE PTR [esp+0x5c],0x1
  40c692:	call   0x416eb0
  40c697:	jmp    0x40c6ad
  40c699:	add    esi,0x4
  40c69c:	push   esi
  40c69d:	lea    edx,[esp+0x10]
  40c6a1:	mov    ecx,edi
  40c6a3:	mov    BYTE PTR [esp+0x54],0x2
  40c6a8:	call   0x417090
  40c6ad:	lea    ecx,[esp+0xc]
  40c6b1:	mov    BYTE PTR [esp+0x50],0x0
  40c6b6:	call   DWORD PTR ds:0x43025c
  40c6bc:	lea    ecx,[esp+0x28]
  40c6c0:	mov    DWORD PTR [esp+0x50],0xffffffff
  40c6c8:	call   DWORD PTR ds:0x43025c
  40c6ce:	mov    ecx,DWORD PTR [esp+0x48]
  40c6d2:	mov    DWORD PTR fs:0x0,ecx
  40c6d9:	pop    ecx
  40c6da:	pop    edi
  40c6db:	pop    esi
  40c6dc:	mov    ecx,DWORD PTR [esp+0x38]
  40c6e0:	xor    ecx,esp
  40c6e2:	call   0x42503a
  40c6e7:	add    esp,0x48
  40c6ea:	ret    0x8
  40c6ed:	int3   
  40c6ee:	int3   
  40c6ef:	int3   
  40c6f0:	push   0xffffffff
  40c6f2:	push   0x42d2c0
  40c6f7:	mov    eax,fs:0x0
  40c6fd:	push   eax
  40c6fe:	push   ecx
  40c6ff:	push   esi
  40c700:	mov    eax,ds:0x43e020
  40c705:	xor    eax,esp
  40c707:	push   eax
  40c708:	lea    eax,[esp+0xc]
  40c70c:	mov    fs:0x0,eax
  40c712:	mov    esi,DWORD PTR [esp+0x1c]
  40c716:	mov    DWORD PTR [esi],0x432970
  40c71c:	lea    ecx,[esi+0xc]
  40c71f:	mov    DWORD PTR [esi+0x4],0x432958
  40c726:	mov    DWORD PTR [esi+0x8],0x0
  40c72d:	call   DWORD PTR ds:0x430254
  40c733:	lea    eax,[esi+0x28]
  40c736:	push   eax
  40c737:	mov    DWORD PTR [esp+0x18],0x0
  40c73f:	call   0x413bb0
  40c744:	lea    ecx,[esi+0x48]
  40c747:	mov    BYTE PTR [esp+0x14],0x1
  40c74c:	call   DWORD PTR ds:0x430254
  40c752:	lea    ecx,[esi+0x64]
  40c755:	mov    BYTE PTR [esp+0x14],0x2
  40c75a:	call   DWORD PTR ds:0x430254
  40c760:	lea    ecx,[esi+0x80]
  40c766:	push   ecx
  40c767:	mov    BYTE PTR [esp+0x18],0x3
  40c76c:	call   0x413870
  40c771:	mov    eax,esi
  40c773:	mov    ecx,DWORD PTR [esp+0xc]
  40c777:	mov    DWORD PTR fs:0x0,ecx
  40c77e:	pop    ecx
  40c77f:	pop    esi
  40c780:	add    esp,0x10
  40c783:	ret    0x4
  40c786:	int3   
  40c787:	int3   
  40c788:	int3   
  40c789:	int3   
  40c78a:	int3   
  40c78b:	int3   
  40c78c:	int3   
  40c78d:	int3   
  40c78e:	int3   
  40c78f:	int3   
  40c790:	push   0xffffffff
  40c792:	push   0x42d268
  40c797:	mov    eax,fs:0x0
  40c79d:	push   eax
  40c79e:	sub    esp,0x8
  40c7a1:	push   esi
  40c7a2:	push   edi
  40c7a3:	mov    eax,ds:0x43e020
  40c7a8:	xor    eax,esp
  40c7aa:	push   eax
  40c7ab:	lea    eax,[esp+0x14]
  40c7af:	mov    fs:0x0,eax
  40c7b5:	mov    edi,DWORD PTR [esp+0x24]
  40c7b9:	mov    DWORD PTR [edi],0x432970
  40c7bf:	mov    DWORD PTR [esp+0x1c],0x0
  40c7c7:	lea    esi,[edi+0x80]
  40c7cd:	mov    DWORD PTR [esp+0x10],esi
  40c7d1:	mov    BYTE PTR [esp+0x1c],0x4
  40c7d6:	call   0x413b70
  40c7db:	mov    esi,DWORD PTR [esi]
  40c7dd:	push   esi
  40c7de:	call   0x42504a
  40c7e3:	add    esp,0x4
  40c7e6:	lea    ecx,[edi+0x64]
  40c7e9:	mov    BYTE PTR [esp+0x1c],0x2
  40c7ee:	call   DWORD PTR ds:0x430264
  40c7f4:	lea    ecx,[edi+0x48]
  40c7f7:	mov    BYTE PTR [esp+0x1c],0x1
  40c7fc:	call   DWORD PTR ds:0x430264
  40c802:	lea    eax,[edi+0x28]
  40c805:	push   eax
  40c806:	mov    BYTE PTR [esp+0x20],0x0
  40c80b:	call   0x4127d0
  40c810:	lea    ecx,[edi+0xc]
  40c813:	mov    DWORD PTR [esp+0x1c],0xffffffff
  40c81b:	call   DWORD PTR ds:0x430264
  40c821:	mov    ecx,DWORD PTR [esp+0x14]
  40c825:	mov    DWORD PTR fs:0x0,ecx
  40c82c:	pop    ecx
  40c82d:	pop    edi
  40c82e:	pop    esi
  40c82f:	add    esp,0x14
  40c832:	ret    0x4
  40c835:	int3   
  40c836:	int3   
  40c837:	int3   
  40c838:	int3   
  40c839:	int3   
  40c83a:	int3   
  40c83b:	int3   
  40c83c:	int3   
  40c83d:	int3   
  40c83e:	int3   
  40c83f:	int3   
  40c840:	push   0xffffffff
  40c842:	push   0x42e77d
  40c847:	mov    eax,fs:0x0
  40c84d:	push   eax
  40c84e:	sub    esp,0x44
  40c851:	mov    eax,ds:0x43e020
  40c856:	xor    eax,esp
  40c858:	mov    DWORD PTR [esp+0x40],eax
  40c85c:	push   ebx
  40c85d:	push   ebp
  40c85e:	push   esi
  40c85f:	push   edi
  40c860:	mov    eax,ds:0x43e020
  40c865:	xor    eax,esp
  40c867:	push   eax
  40c868:	lea    eax,[esp+0x58]
  40c86c:	mov    fs:0x0,eax
  40c872:	mov    esi,DWORD PTR [esp+0x68]
  40c876:	mov    ebp,ecx
  40c878:	push   0x431758
  40c87d:	lea    ecx,[esp+0x3c]
  40c881:	mov    DWORD PTR [esp+0x1c],esi
  40c885:	call   DWORD PTR ds:0x43011c
  40c88b:	push   0x431730
  40c890:	lea    ecx,[esp+0x20]
  40c894:	mov    DWORD PTR [esp+0x64],0x0
  40c89c:	call   DWORD PTR ds:0x43011c
  40c8a2:	cmp    BYTE PTR [esp+0x6c],0x0
  40c8a7:	je     0x40c8ce
  40c8a9:	lea    eax,[esp+0x1c]
  40c8ad:	lea    ecx,[ebp+0x40]
  40c8b0:	push   eax
  40c8b1:	mov    ebx,esi
  40c8b3:	mov    BYTE PTR [esp+0x64],0x1
  40c8b8:	call   0x416ae0
  40c8bd:	lea    ecx,[esp+0x1c]
  40c8c1:	mov    BYTE PTR [esp+0x60],0x0
  40c8c6:	call   DWORD PTR ds:0x43025c
  40c8cc:	jmp    0x40c8f0
  40c8ce:	lea    ebx,[ebp+0x40]
  40c8d1:	lea    edi,[esp+0x1c]
  40c8d5:	mov    BYTE PTR [esp+0x60],0x2
  40c8da:	call   0x416b70
  40c8df:	mov    ecx,edi
  40c8e1:	mov    BYTE PTR [esp+0x60],0x0
  40c8e6:	call   DWORD PTR ds:0x43025c
  40c8ec:	mov    esi,DWORD PTR [esp+0x18]
  40c8f0:	mov    ebx,DWORD PTR [esi]
  40c8f2:	lea    ecx,[esp+0x14]
  40c8f6:	push   ecx
  40c8f7:	mov    eax,0x431764
  40c8fc:	call   0x40c190
  40c901:	mov    ebx,DWORD PTR [esp+0x6c]
  40c905:	mov    edx,DWORD PTR [ebp+0x4]
  40c908:	mov    edx,DWORD PTR [edx]
  40c90a:	lea    ecx,[ebp+0x4]
  40c90d:	push   ebx
  40c90e:	lea    eax,[esp+0x18]
  40c912:	push   eax
  40c913:	call   edx
  40c915:	lea    eax,[esp+0x20]
  40c919:	push   eax
  40c91a:	mov    DWORD PTR [esp+0x20],0x432968
  40c922:	call   0x413bb0
  40c927:	test   bl,bl
  40c929:	je     0x40c975
  40c92b:	lea    ecx,[esp+0x20]
  40c92f:	lea    ebx,[ebp+0x28]
  40c932:	push   ecx
  40c933:	mov    BYTE PTR [esp+0x64],0x3
  40c938:	call   0x412850
  40c93d:	mov    esi,DWORD PTR [esi]
  40c93f:	lea    edx,[esp+0x14]
  40c943:	push   edx
  40c944:	mov    eax,0x43176c
  40c949:	mov    ebx,esi
  40c94b:	call   0x40c190
  40c950:	mov    eax,DWORD PTR [esp+0x6c]
  40c954:	push   eax
  40c955:	lea    ecx,[esp+0x18]
  40c959:	push   ecx
  40c95a:	lea    ecx,[esp+0x24]
  40c95e:	call   0x40c620
  40c963:	lea    edx,[esp+0x20]
  40c967:	xor    bl,bl
  40c969:	push   edx
  40c96a:	mov    BYTE PTR [esp+0x64],bl
  40c96e:	call   0x4127d0
  40c973:	jmp    0x40c9b9
  40c975:	mov    BYTE PTR [esp+0x60],0x4
  40c97a:	mov    esi,DWORD PTR [esi]
  40c97c:	lea    ecx,[esp+0x14]
  40c980:	push   ecx
  40c981:	mov    eax,0x43176c
  40c986:	mov    ebx,esi
  40c988:	call   0x40c190
  40c98d:	push   0x0
  40c98f:	lea    edx,[esp+0x18]
  40c993:	push   edx
  40c994:	lea    ecx,[esp+0x24]
  40c998:	call   0x40c620
  40c99d:	lea    eax,[ebp+0x28]
  40c9a0:	push   eax
  40c9a1:	lea    ebx,[esp+0x24]
  40c9a5:	call   0x412850
  40c9aa:	mov    ecx,ebx
  40c9ac:	push   ecx
  40c9ad:	mov    BYTE PTR [esp+0x64],0x0
  40c9b2:	call   0x4127d0
  40c9b7:	xor    bl,bl
  40c9b9:	mov    esi,ebp
  40c9bb:	call   0x40ca50
  40c9c0:	push   0x431774
  40c9c5:	lea    ecx,[esp+0x20]
  40c9c9:	call   DWORD PTR ds:0x43011c
  40c9cf:	cmp    BYTE PTR [esp+0x6c],bl
  40c9d3:	je     0x40c9ed
  40c9d5:	mov    esi,DWORD PTR [esp+0x18]
  40c9d9:	add    ebp,0x48
  40c9dc:	push   ebp
  40c9dd:	lea    edi,[esp+0x20]
  40c9e1:	mov    BYTE PTR [esp+0x64],0x5
  40c9e6:	call   0x417250
  40c9eb:	jmp    0x40ca03
  40c9ed:	mov    esi,DWORD PTR [esp+0x18]
  40c9f1:	add    ebp,0x48
  40c9f4:	push   ebp
  40c9f5:	lea    edi,[esp+0x20]
  40c9f9:	mov    BYTE PTR [esp+0x64],0x6
  40c9fe:	call   0x4172d0
  40ca03:	lea    ecx,[esp+0x1c]
  40ca07:	mov    BYTE PTR [esp+0x60],bl
  40ca0b:	call   DWORD PTR ds:0x43025c
  40ca11:	lea    ecx,[esp+0x38]
  40ca15:	mov    DWORD PTR [esp+0x60],0xffffffff
  40ca1d:	call   DWORD PTR ds:0x43025c
  40ca23:	mov    ecx,DWORD PTR [esp+0x58]
  40ca27:	mov    DWORD PTR fs:0x0,ecx
  40ca2e:	pop    ecx
  40ca2f:	pop    edi
  40ca30:	pop    esi
  40ca31:	pop    ebp
  40ca32:	pop    ebx
  40ca33:	mov    ecx,DWORD PTR [esp+0x40]
  40ca37:	xor    ecx,esp
  40ca39:	call   0x42503a
  40ca3e:	add    esp,0x50
  40ca41:	ret    0x8
  40ca44:	int3   
  40ca45:	int3   
  40ca46:	int3   
  40ca47:	int3   
  40ca48:	int3   
  40ca49:	int3   
  40ca4a:	int3   
  40ca4b:	int3   
  40ca4c:	int3   
  40ca4d:	int3   
  40ca4e:	int3   
  40ca4f:	int3   
  40ca50:	push   ebp
  40ca51:	mov    ebp,esp
  40ca53:	and    esp,0xfffffff8
  40ca56:	sub    esp,0x8
  40ca59:	push   ebx
  40ca5a:	push   edi
  40ca5b:	mov    eax,esi
  40ca5d:	call   0x40cb40
  40ca62:	mov    eax,DWORD PTR [esi+0x98]
  40ca68:	mov    ecx,DWORD PTR [eax+0x4]
  40ca6b:	lea    edi,[esi+0x80]
  40ca71:	push   ecx
  40ca72:	mov    ecx,edi
  40ca74:	call   0x413b30
  40ca79:	mov    eax,DWORD PTR [edi+0x18]
  40ca7c:	mov    DWORD PTR [eax+0x4],eax
  40ca7f:	mov    eax,DWORD PTR [edi+0x18]
  40ca82:	xor    ebx,ebx
  40ca84:	mov    DWORD PTR [edi+0x1c],ebx
  40ca87:	mov    DWORD PTR [eax],eax
  40ca89:	mov    eax,DWORD PTR [edi+0x18]
  40ca8c:	mov    DWORD PTR [eax+0x8],eax
  40ca8f:	mov    ecx,DWORD PTR [esi+0x38]
  40ca92:	sub    ecx,DWORD PTR [esi+0x34]
  40ca95:	mov    eax,0x2aaaaaab
  40ca9a:	imul   ecx
  40ca9c:	sar    edx,0x4
  40ca9f:	mov    eax,edx
  40caa1:	shr    eax,0x1f
  40caa4:	add    eax,edx
  40caa6:	test   eax,eax
  40caa8:	jle    0x40cb3a
  40caae:	mov    DWORD PTR [esp+0x8],ebx
  40cab2:	mov    ecx,DWORD PTR [esi+0x38]
  40cab5:	sub    ecx,DWORD PTR [esi+0x34]
  40cab8:	mov    eax,0x2aaaaaab
  40cabd:	imul   ecx
  40cabf:	sar    edx,0x4
  40cac2:	mov    ecx,edx
  40cac4:	shr    ecx,0x1f
  40cac7:	add    ecx,edx
  40cac9:	cmp    ebx,ecx
  40cacb:	jb     0x40cad3
  40cacd:	call   DWORD PTR ds:0x430390
  40cad3:	mov    eax,DWORD PTR [esi+0x34]
  40cad6:	add    eax,DWORD PTR [esp+0x8]
  40cada:	mov    ecx,DWORD PTR [esi+0x38]
  40cadd:	sub    ecx,DWORD PTR [esi+0x34]
  40cae0:	mov    DWORD PTR [esp+0xc],eax
  40cae4:	mov    eax,0x2aaaaaab
  40cae9:	imul   ecx
  40caeb:	sar    edx,0x4
  40caee:	mov    eax,edx
  40caf0:	shr    eax,0x1f
  40caf3:	add    eax,edx
  40caf5:	cmp    ebx,eax
  40caf7:	jb     0x40caff
  40caf9:	call   DWORD PTR ds:0x430390
  40caff:	mov    eax,DWORD PTR [esi+0x34]
  40cb02:	add    eax,DWORD PTR [esp+0x8]
  40cb06:	add    eax,0x4
  40cb09:	push   eax
  40cb0a:	call   0x412a50
  40cb0f:	mov    ecx,DWORD PTR [esp+0xc]
  40cb13:	add    DWORD PTR [esp+0x8],0x60
  40cb18:	mov    DWORD PTR [eax],ecx
  40cb1a:	mov    ecx,DWORD PTR [esi+0x38]
  40cb1d:	sub    ecx,DWORD PTR [esi+0x34]
  40cb20:	mov    eax,0x2aaaaaab
  40cb25:	imul   ecx
  40cb27:	sar    edx,0x4
  40cb2a:	mov    eax,edx
  40cb2c:	shr    eax,0x1f
  40cb2f:	inc    ebx
  40cb30:	add    eax,edx
  40cb32:	cmp    ebx,eax
  40cb34:	jl     0x40cab2
  40cb3a:	pop    edi
  40cb3b:	pop    ebx
  40cb3c:	mov    esp,ebp
  40cb3e:	pop    ebp
  40cb3f:	ret    
  40cb40:	push   ecx
  40cb41:	push   ebx
  40cb42:	push   ebp
  40cb43:	push   esi
  40cb44:	mov    esi,eax
  40cb46:	mov    ebx,DWORD PTR [esi+0x38]
  40cb49:	push   edi
  40cb4a:	cmp    DWORD PTR [esi+0x34],ebx
  40cb4d:	jbe    0x40cb55
  40cb4f:	call   DWORD PTR ds:0x430390
  40cb55:	mov    edi,DWORD PTR [esi+0x34]
  40cb58:	mov    ebp,DWORD PTR [esi+0x28]
  40cb5b:	cmp    edi,DWORD PTR [esi+0x38]
  40cb5e:	jbe    0x40cb66
  40cb60:	call   DWORD PTR ds:0x430390
  40cb66:	mov    esi,DWORD PTR [esi+0x28]
  40cb69:	test   ebp,ebp
  40cb6b:	je     0x40cb71
  40cb6d:	cmp    ebp,esi
  40cb6f:	je     0x40cb77
  40cb71:	call   DWORD PTR ds:0x430390
  40cb77:	mov    ecx,ebx
  40cb79:	sub    ecx,edi
  40cb7b:	mov    eax,0x2aaaaaab
  40cb80:	imul   ecx
  40cb82:	sar    edx,0x4
  40cb85:	mov    eax,edx
  40cb87:	shr    eax,0x1f
  40cb8a:	push   0x40cbb0
  40cb8f:	add    eax,edx
  40cb91:	push   eax
  40cb92:	push   ebx
  40cb93:	push   edi
  40cb94:	call   0x4189e0
  40cb99:	add    esp,0x10
  40cb9c:	pop    edi
  40cb9d:	pop    esi
  40cb9e:	pop    ebp
  40cb9f:	pop    ebx
  40cba0:	pop    ecx
  40cba1:	ret    
  40cba2:	int3   
  40cba3:	int3   
  40cba4:	int3   
  40cba5:	int3   
  40cba6:	int3   
  40cba7:	int3   
  40cba8:	int3   
  40cba9:	int3   
  40cbaa:	int3   
  40cbab:	int3   
  40cbac:	int3   
  40cbad:	int3   
  40cbae:	int3   
  40cbaf:	int3   
  40cbb0:	mov    eax,DWORD PTR [esp+0x8]
  40cbb4:	mov    ecx,DWORD PTR [esp+0x4]
  40cbb8:	add    eax,0x4
  40cbbb:	push   eax
  40cbbc:	add    ecx,0x4
  40cbbf:	call   DWORD PTR ds:0x430214
  40cbc5:	xor    ecx,ecx
  40cbc7:	test   eax,eax
  40cbc9:	setl   cl
  40cbcc:	mov    eax,ecx
  40cbce:	ret    
  40cbcf:	int3   
  40cbd0:	add    eax,0x4
  40cbd3:	push   eax
  40cbd4:	call   0x4127d0
  40cbd9:	ret    
  40cbda:	int3   
  40cbdb:	int3   
  40cbdc:	int3   
  40cbdd:	int3   
  40cbde:	int3   
  40cbdf:	int3   
  40cbe0:	sub    esp,0x8
  40cbe3:	push   esi
  40cbe4:	push   edi
  40cbe5:	mov    esi,ecx
  40cbe7:	mov    DWORD PTR [esp+0xc],0x0
  40cbef:	call   0x426930
  40cbf4:	mov    eax,DWORD PTR [eax]
  40cbf6:	mov    edi,DWORD PTR [esp+0x14]
  40cbfa:	push   eax
  40cbfb:	push   edi
  40cbfc:	mov    ecx,esi
  40cbfe:	call   0x40cc10
  40cc03:	mov    eax,edi
  40cc05:	pop    edi
  40cc06:	pop    esi
  40cc07:	add    esp,0x8
  40cc0a:	ret    0x4
  40cc0d:	int3   
  40cc0e:	int3   
  40cc0f:	int3   
  40cc10:	push   0xffffffff
  40cc12:	push   0x42c04a
  40cc17:	mov    eax,fs:0x0
  40cc1d:	push   eax
  40cc1e:	sub    esp,0x1c
  40cc21:	push   ebx
  40cc22:	push   ebp
  40cc23:	push   esi
  40cc24:	push   edi
  40cc25:	mov    eax,ds:0x43e020
  40cc2a:	xor    eax,esp
  40cc2c:	push   eax
  40cc2d:	lea    eax,[esp+0x30]
  40cc31:	mov    fs:0x0,eax
  40cc37:	mov    ebp,DWORD PTR [esp+0x40]
  40cc3b:	mov    eax,DWORD PTR [esp+0x44]
  40cc3f:	xor    ebx,ebx
  40cc41:	mov    DWORD PTR [esp+0x38],ebx
  40cc45:	mov    esi,ecx
  40cc47:	mov    ecx,ebp
  40cc49:	mov    DWORD PTR [esp+0x1c],ebp
  40cc4d:	mov    DWORD PTR [esp+0x18],eax
  40cc51:	mov    DWORD PTR [esp+0x14],ebx
  40cc55:	call   DWORD PTR ds:0x430260
  40cc5b:	mov    DWORD PTR [esp+0x38],ebx
  40cc5f:	mov    DWORD PTR [esp+0x14],0x1
  40cc67:	cmp    DWORD PTR [esi+0x14],ebx
  40cc6a:	je     0x40cd0e
  40cc70:	lea    ecx,[esp+0x20]
  40cc74:	push   ecx
  40cc75:	mov    ecx,esi
  40cc77:	call   DWORD PTR ds:0x430230
  40cc7d:	mov    edi,eax
  40cc7f:	mov    eax,DWORD PTR [edi]
  40cc81:	cmp    eax,0xfffffffc
  40cc84:	je     0x40ccb1
  40cc86:	cmp    eax,ebx
  40cc88:	jne    0x40cc90
  40cc8a:	call   DWORD PTR ds:0x430390
  40cc90:	mov    eax,DWORD PTR [edi]
  40cc92:	cmp    DWORD PTR [eax+0x18],0x8
  40cc96:	jb     0x40cc9d
  40cc98:	mov    ecx,DWORD PTR [eax+0x4]
  40cc9b:	jmp    0x40cca0
  40cc9d:	lea    ecx,[eax+0x4]
  40cca0:	mov    edx,DWORD PTR [eax+0x14]
  40cca3:	lea    eax,[ecx+edx*2]
  40cca6:	cmp    DWORD PTR [edi+0x4],eax
  40cca9:	jb     0x40ccb1
  40ccab:	call   DWORD PTR ds:0x430390
  40ccb1:	mov    edi,DWORD PTR [edi+0x4]
  40ccb4:	mov    ebx,DWORD PTR [esi+0x14]
  40ccb7:	lea    ecx,[esp+0x28]
  40ccbb:	push   ecx
  40ccbc:	mov    ecx,esi
  40ccbe:	call   DWORD PTR ds:0x430230
  40ccc4:	mov    esi,eax
  40ccc6:	mov    eax,DWORD PTR [esi]
  40ccc8:	cmp    eax,0xfffffffc
  40cccb:	je     0x40ccf8
  40cccd:	test   eax,eax
  40cccf:	jne    0x40ccd7
  40ccd1:	call   DWORD PTR ds:0x430390
  40ccd7:	mov    eax,DWORD PTR [esi]
  40ccd9:	cmp    DWORD PTR [eax+0x18],0x8
  40ccdd:	jb     0x40cce4
  40ccdf:	mov    ecx,DWORD PTR [eax+0x4]
  40cce2:	jmp    0x40cce7
  40cce4:	lea    ecx,[eax+0x4]
  40cce7:	mov    edx,DWORD PTR [eax+0x14]
  40ccea:	lea    eax,[ecx+edx*2]
  40cced:	cmp    DWORD PTR [esi+0x4],eax
  40ccf0:	jb     0x40ccf8
  40ccf2:	call   DWORD PTR ds:0x430390
  40ccf8:	mov    ecx,DWORD PTR [esp+0x18]
  40ccfc:	mov    esi,DWORD PTR [esi+0x4]
  40ccff:	push   ecx
  40cd00:	push   ebp
  40cd01:	lea    edx,[edi+ebx*2]
  40cd04:	push   edx
  40cd05:	push   esi
  40cd06:	call   0x426010
  40cd0b:	add    esp,0x10
  40cd0e:	mov    eax,ebp
  40cd10:	mov    ecx,DWORD PTR [esp+0x30]
  40cd14:	mov    DWORD PTR fs:0x0,ecx
  40cd1b:	pop    ecx
  40cd1c:	pop    edi
  40cd1d:	pop    esi
  40cd1e:	pop    ebp
  40cd1f:	pop    ebx
  40cd20:	add    esp,0x28
  40cd23:	ret    0x8
  40cd26:	int3   
  40cd27:	int3   
  40cd28:	int3   
  40cd29:	int3   
  40cd2a:	int3   
  40cd2b:	int3   
  40cd2c:	int3   
  40cd2d:	int3   
  40cd2e:	int3   
  40cd2f:	int3   
  40cd30:	jmp    DWORD PTR ds:0x430264
  40cd36:	int3   
  40cd37:	int3   
  40cd38:	int3   
  40cd39:	int3   
  40cd3a:	int3   
  40cd3b:	int3   
  40cd3c:	int3   
  40cd3d:	int3   
  40cd3e:	int3   
  40cd3f:	int3   
  40cd40:	push   0xffffffff
  40cd42:	push   0x42b681
  40cd47:	mov    eax,fs:0x0
  40cd4d:	push   eax
  40cd4e:	sub    esp,0x20
  40cd51:	push   esi
  40cd52:	mov    eax,ds:0x43e020
  40cd57:	xor    eax,esp
  40cd59:	push   eax
  40cd5a:	lea    eax,[esp+0x28]
  40cd5e:	mov    fs:0x0,eax
  40cd64:	mov    eax,DWORD PTR [esp+0x3c]
  40cd68:	push   eax
  40cd69:	lea    ecx,[esp+0x10]
  40cd6d:	mov    DWORD PTR [esp+0xc],0x0
  40cd75:	call   DWORD PTR ds:0x430118
  40cd7b:	mov    ecx,DWORD PTR [esp+0x40]
  40cd7f:	push   ecx
  40cd80:	lea    ecx,[esp+0x10]
  40cd84:	mov    DWORD PTR [esp+0x34],0x1
  40cd8c:	call   0x426c50
  40cd91:	mov    esi,DWORD PTR [esp+0x38]
  40cd95:	push   eax
  40cd96:	mov    ecx,esi
  40cd98:	call   DWORD PTR ds:0x430118
  40cd9e:	lea    ecx,[esp+0xc]
  40cda2:	mov    DWORD PTR [esp+0x8],0x1
  40cdaa:	mov    BYTE PTR [esp+0x30],0x0
  40cdaf:	call   DWORD PTR ds:0x430264
  40cdb5:	mov    eax,esi
  40cdb7:	mov    ecx,DWORD PTR [esp+0x28]
  40cdbb:	mov    DWORD PTR fs:0x0,ecx
  40cdc2:	pop    ecx
  40cdc3:	pop    esi
  40cdc4:	add    esp,0x2c
  40cdc7:	ret    
  40cdc8:	int3   
  40cdc9:	int3   
  40cdca:	int3   
  40cdcb:	int3   
  40cdcc:	int3   
  40cdcd:	int3   
  40cdce:	int3   
  40cdcf:	int3   
  40cdd0:	push   0xffffffff
  40cdd2:	push   0x42b638
  40cdd7:	mov    eax,fs:0x0
  40cddd:	push   eax
  40cdde:	sub    esp,0xc
  40cde1:	push   esi
  40cde2:	mov    eax,ds:0x43e020
  40cde7:	xor    eax,esp
  40cde9:	push   eax
  40cdea:	lea    eax,[esp+0x14]
  40cdee:	mov    fs:0x0,eax
  40cdf4:	mov    esi,ecx
  40cdf6:	mov    DWORD PTR [esp+0x8],esi
  40cdfa:	lea    eax,[esi+0x24]
  40cdfd:	push   eax
  40cdfe:	lea    ecx,[esp+0x10]
  40ce02:	push   ecx
  40ce03:	mov    DWORD PTR [esp+0x24],0x0
  40ce0b:	call   0x427000
  40ce10:	add    esp,0x8
  40ce13:	mov    ecx,esi
  40ce15:	mov    DWORD PTR [esp+0x1c],0xffffffff
  40ce1d:	call   DWORD PTR ds:0x430264
  40ce23:	mov    ecx,DWORD PTR [esp+0x14]
  40ce27:	mov    DWORD PTR fs:0x0,ecx
  40ce2e:	pop    ecx
  40ce2f:	pop    esi
  40ce30:	add    esp,0x18
  40ce33:	ret    
  40ce34:	int3   
  40ce35:	int3   
  40ce36:	int3   
  40ce37:	int3   
  40ce38:	int3   
  40ce39:	int3   
  40ce3a:	int3   
  40ce3b:	int3   
  40ce3c:	int3   
  40ce3d:	int3   
  40ce3e:	int3   
  40ce3f:	int3   
  40ce40:	push   0xffffffff
  40ce42:	push   0x42c953
  40ce47:	mov    eax,fs:0x0
  40ce4d:	push   eax
  40ce4e:	sub    esp,0x8
  40ce51:	push   ebx
  40ce52:	push   esi
  40ce53:	push   edi
  40ce54:	mov    eax,ds:0x43e020
  40ce59:	xor    eax,esp
  40ce5b:	push   eax
  40ce5c:	lea    eax,[esp+0x18]
  40ce60:	mov    fs:0x0,eax
  40ce66:	mov    edi,ecx
  40ce68:	mov    DWORD PTR [esp+0x10],edi
  40ce6c:	push   0x28
  40ce6e:	call   0x425050
  40ce73:	mov    esi,eax
  40ce75:	add    esp,0x4
  40ce78:	mov    DWORD PTR [esp+0x14],esi
  40ce7c:	xor    ebx,ebx
  40ce7e:	mov    DWORD PTR [esp+0x20],ebx
  40ce82:	cmp    esi,ebx
  40ce84:	je     0x40ce99
  40ce86:	mov    ecx,esi
  40ce88:	call   DWORD PTR ds:0x430254
  40ce8e:	mov    DWORD PTR [esi+0x1c],ebx
  40ce91:	mov    DWORD PTR [esi+0x20],ebx
  40ce94:	mov    DWORD PTR [esi+0x24],ebx
  40ce97:	jmp    0x40ce9b
  40ce99:	xor    esi,esi
  40ce9b:	mov    DWORD PTR [esp+0x20],0xffffffff
  40cea3:	push   esi
  40cea4:	lea    ecx,[edi+0x4]
  40cea7:	mov    DWORD PTR [edi],esi
  40cea9:	call   0x418b20
  40ceae:	push   esi
  40ceaf:	push   esi
  40ceb0:	push   edi
  40ceb1:	call   0x4029a0
  40ceb6:	mov    eax,DWORD PTR [esp+0x34]
  40ceba:	push   ebx
  40cebb:	push   eax
  40cebc:	push   edi
  40cebd:	mov    DWORD PTR [esp+0x38],0x1
  40cec5:	call   0x428ad0
  40ceca:	add    esp,0x18
  40cecd:	mov    eax,edi
  40cecf:	mov    ecx,DWORD PTR [esp+0x18]
  40ced3:	mov    DWORD PTR fs:0x0,ecx
  40ceda:	pop    ecx
  40cedb:	pop    edi
  40cedc:	pop    esi
  40cedd:	pop    ebx
  40cede:	add    esp,0x14
  40cee1:	ret    0x4
  40cee4:	int3   
  40cee5:	int3   
  40cee6:	int3   
  40cee7:	int3   
  40cee8:	int3   
  40cee9:	int3   
  40ceea:	int3   
  40ceeb:	int3   
  40ceec:	int3   
  40ceed:	int3   
  40ceee:	int3   
  40ceef:	int3   
  40cef0:	push   esi
  40cef1:	mov    esi,DWORD PTR [ecx+0x4]
  40cef4:	test   esi,esi
  40cef6:	je     0x40cf23
  40cef8:	lea    eax,[esi+0x4]
  40cefb:	or     ecx,0xffffffff
  40cefe:	lock xadd DWORD PTR [eax],ecx
  40cf02:	jne    0x40cf23
  40cf04:	mov    edx,DWORD PTR [esi]
  40cf06:	mov    eax,DWORD PTR [edx+0x4]
  40cf09:	mov    ecx,esi
  40cf0b:	call   eax
  40cf0d:	lea    ecx,[esi+0x8]
  40cf10:	or     edx,0xffffffff
  40cf13:	lock xadd DWORD PTR [ecx],edx
  40cf17:	jne    0x40cf23
  40cf19:	mov    eax,DWORD PTR [esi]
  40cf1b:	mov    edx,DWORD PTR [eax+0x8]
  40cf1e:	mov    ecx,esi
  40cf20:	pop    esi
  40cf21:	jmp    edx
  40cf23:	pop    esi
  40cf24:	ret    
  40cf25:	int3   
  40cf26:	int3   
  40cf27:	int3   
  40cf28:	int3   
  40cf29:	int3   
  40cf2a:	int3   
  40cf2b:	int3   
  40cf2c:	int3   
  40cf2d:	int3   
  40cf2e:	int3   
  40cf2f:	int3   
  40cf30:	push   0xffffffff
  40cf32:	push   0x42daf1
  40cf37:	mov    eax,fs:0x0
  40cf3d:	push   eax
  40cf3e:	sub    esp,0x14
  40cf41:	push   ebx
  40cf42:	push   ebp
  40cf43:	push   esi
  40cf44:	push   edi
  40cf45:	mov    eax,ds:0x43e020
  40cf4a:	xor    eax,esp
  40cf4c:	push   eax
  40cf4d:	lea    eax,[esp+0x28]
  40cf51:	mov    fs:0x0,eax
  40cf57:	mov    esi,ecx
  40cf59:	xor    edi,edi
  40cf5b:	mov    DWORD PTR [esp+0x14],edi
  40cf5f:	test   BYTE PTR [esi+0x1c],0x2
  40cf63:	je     0x40cf6e
  40cf65:	and    DWORD PTR [esi+0x1c],0xfffffffd
  40cf69:	jmp    0x40d020
  40cf6e:	mov    eax,esi
  40cf70:	call   0x413c10
  40cf75:	mov    eax,DWORD PTR [eax]
  40cf77:	push   edi
  40cf78:	lea    ecx,[esp+0x1c]
  40cf7c:	push   ecx
  40cf7d:	mov    ecx,eax
  40cf7f:	call   0x4285b0
  40cf84:	cmp    DWORD PTR [esp+0x18],0x3
  40cf89:	jne    0x40d020
  40cf8f:	mov    eax,esi
  40cf91:	call   0x413c10
  40cf96:	mov    eax,DWORD PTR [eax]
  40cf98:	push   edi
  40cf99:	lea    edx,[esp+0x1c]
  40cf9d:	push   edx
  40cf9e:	mov    ecx,eax
  40cfa0:	call   0x428620
  40cfa5:	cmp    DWORD PTR [esp+0x18],0x4
  40cfaa:	jne    0x40cfb2
  40cfac:	test   BYTE PTR [esi+0x1c],0x1
  40cfb0:	je     0x40d020
  40cfb2:	mov    eax,esi
  40cfb4:	call   0x413c10
  40cfb9:	mov    eax,DWORD PTR [eax]
  40cfbb:	push   eax
  40cfbc:	lea    ecx,[esp+0x1c]
  40cfc0:	call   0x40ce40
  40cfc5:	mov    ebx,esi
  40cfc7:	mov    DWORD PTR [esp+0x30],edi
  40cfcb:	call   0x413c80
  40cfd0:	lea    ecx,[esp+0x18]
  40cfd4:	mov    DWORD PTR [esp+0x30],0xffffffff
  40cfdc:	call   0x40cef0
  40cfe1:	xor    edi,edi
  40cfe3:	mov    eax,esi
  40cfe5:	mov    DWORD PTR [esp+0x18],edi
  40cfe9:	mov    DWORD PTR [esp+0x1c],edi
  40cfed:	call   0x413c10
  40cff2:	cmp    DWORD PTR [eax],edi
  40cff4:	lea    ecx,[esp+0x18]
  40cff8:	setne  bl
  40cffb:	call   0x40cef0
  40d000:	test   bl,bl
  40d002:	je     0x40d01b
  40d004:	inc    DWORD PTR [esi+0x18]
  40d007:	mov    ecx,DWORD PTR [esp+0x28]
  40d00b:	mov    DWORD PTR fs:0x0,ecx
  40d012:	pop    ecx
  40d013:	pop    edi
  40d014:	pop    esi
  40d015:	pop    ebp
  40d016:	pop    ebx
  40d017:	add    esp,0x20
  40d01a:	ret    
  40d01b:	call   0x412b30
  40d020:	mov    edi,DWORD PTR [esi+0x10]
  40d023:	mov    eax,DWORD PTR [esi+0xc]
  40d026:	mov    ecx,edi
  40d028:	sub    ecx,eax
  40d02a:	test   ecx,0xfffffff8
  40d030:	je     0x40d0c1
  40d036:	xor    ecx,ecx
  40d038:	mov    DWORD PTR [esp+0x18],ecx
  40d03c:	mov    DWORD PTR [esp+0x1c],ecx
  40d040:	mov    DWORD PTR [esp+0x30],0x2
  40d048:	or     DWORD PTR [esp+0x14],0x1
  40d04d:	cmp    eax,edi
  40d04f:	jbe    0x40d057
  40d051:	call   DWORD PTR ds:0x430390
  40d057:	mov    ebx,DWORD PTR [esi]
  40d059:	mov    ebp,ebx
  40d05b:	mov    DWORD PTR [esp+0x24],edi
  40d05f:	test   ebx,ebx
  40d061:	jne    0x40d07b
  40d063:	call   DWORD PTR ds:0x430390
  40d069:	xor    eax,eax
  40d06b:	lea    ecx,[edi-0x8]
  40d06e:	cmp    ecx,DWORD PTR [eax+0x10]
  40d071:	ja     0x40d086
  40d073:	test   ebx,ebx
  40d075:	je     0x40d07f
  40d077:	mov    ebx,DWORD PTR [ebx]
  40d079:	jmp    0x40d081
  40d07b:	mov    eax,DWORD PTR [ebx]
  40d07d:	jmp    0x40d06b
  40d07f:	xor    ebx,ebx
  40d081:	cmp    ecx,DWORD PTR [ebx+0xc]
  40d084:	jae    0x40d090
  40d086:	mov    ebx,DWORD PTR ds:0x430390
  40d08c:	call   ebx
  40d08e:	jmp    0x40d096
  40d090:	mov    ebx,DWORD PTR ds:0x430390
  40d096:	add    edi,0xfffffff8
  40d099:	test   ebp,ebp
  40d09b:	jne    0x40d0bc
  40d09d:	call   ebx
  40d09f:	xor    eax,eax
  40d0a1:	cmp    edi,DWORD PTR [eax+0x10]
  40d0a4:	jb     0x40d0a8
  40d0a6:	call   ebx
  40d0a8:	push   0x0
  40d0aa:	push   edi
  40d0ab:	call   0x428680
  40d0b0:	add    esp,0x8
  40d0b3:	cmp    DWORD PTR [edi],0x0
  40d0b6:	jne    0x40d0c1
  40d0b8:	mov    bl,0x1
  40d0ba:	jmp    0x40d0c3
  40d0bc:	mov    eax,DWORD PTR [ebp+0x0]
  40d0bf:	jmp    0x40d0a1
  40d0c1:	xor    bl,bl
  40d0c3:	or     ebp,0xffffffff
  40d0c6:	mov    DWORD PTR [esp+0x30],ebp
  40d0ca:	test   BYTE PTR [esp+0x14],0x1
  40d0cf:	je     0x40d106
  40d0d1:	mov    edi,DWORD PTR [esp+0x1c]
  40d0d5:	and    DWORD PTR [esp+0x14],0xfffffffe
  40d0da:	test   edi,edi
  40d0dc:	je     0x40d106
  40d0de:	lea    edx,[edi+0x4]
  40d0e1:	mov    eax,ebp
  40d0e3:	lock xadd DWORD PTR [edx],eax
  40d0e7:	jne    0x40d106
  40d0e9:	mov    edx,DWORD PTR [edi]
  40d0eb:	mov    eax,DWORD PTR [edx+0x4]
  40d0ee:	mov    ecx,edi
  40d0f0:	call   eax
  40d0f2:	lea    ecx,[edi+0x8]
  40d0f5:	mov    edx,ebp
  40d0f7:	lock xadd DWORD PTR [ecx],edx
  40d0fb:	jne    0x40d106
  40d0fd:	mov    eax,DWORD PTR [edi]
  40d0ff:	mov    edx,DWORD PTR [eax+0x8]
  40d102:	mov    ecx,edi
  40d104:	call   edx
  40d106:	test   bl,bl
  40d108:	je     0x40d007
  40d10e:	mov    ebx,DWORD PTR [esi+0x10]
  40d111:	mov    eax,ebx
  40d113:	sub    eax,DWORD PTR [esi+0xc]
  40d116:	test   eax,0xfffffff8
  40d11b:	je     0x40d131
  40d11d:	mov    ecx,DWORD PTR [esp+0x18]
  40d121:	push   ecx
  40d122:	lea    eax,[ebx-0x8]
  40d125:	call   0x419670
  40d12a:	add    esp,0x4
  40d12d:	add    DWORD PTR [esi+0x10],0xfffffff8
  40d131:	add    DWORD PTR [esi+0x18],ebp
  40d134:	jmp    0x40d020
  40d139:	int3   
  40d13a:	int3   
  40d13b:	int3   
  40d13c:	int3   
  40d13d:	int3   
  40d13e:	int3   
  40d13f:	int3   
  40d140:	push   0xffffffff
  40d142:	push   0x42daab
  40d147:	mov    eax,fs:0x0
  40d14d:	push   eax
  40d14e:	sub    esp,0x8
  40d151:	push   ebx
  40d152:	push   esi
  40d153:	push   edi
  40d154:	mov    eax,ds:0x43e020
  40d159:	xor    eax,esp
  40d15b:	push   eax
  40d15c:	lea    eax,[esp+0x18]
  40d160:	mov    fs:0x0,eax
  40d166:	mov    esi,DWORD PTR [esp+0x28]
  40d16a:	push   0x20
  40d16c:	call   0x425050
  40d171:	mov    edi,eax
  40d173:	add    esp,0x4
  40d176:	mov    DWORD PTR [esp+0x10],edi
  40d17a:	xor    ebx,ebx
  40d17c:	mov    DWORD PTR [esp+0x20],ebx
  40d180:	cmp    edi,ebx
  40d182:	je     0x40d192
  40d184:	push   edi
  40d185:	call   0x413bb0
  40d18a:	mov    DWORD PTR [edi+0x18],ebx
  40d18d:	mov    DWORD PTR [edi+0x1c],ebx
  40d190:	jmp    0x40d194
  40d192:	xor    edi,edi
  40d194:	mov    DWORD PTR [esp+0x20],0xffffffff
  40d19c:	push   edi
  40d19d:	lea    ecx,[esi+0x4]
  40d1a0:	mov    DWORD PTR [esi],edi
  40d1a2:	call   0x418bb0
  40d1a7:	push   edi
  40d1a8:	push   edi
  40d1a9:	push   esi
  40d1aa:	call   0x4029a0
  40d1af:	add    esp,0xc
  40d1b2:	mov    DWORD PTR [esp+0x20],0x1
  40d1ba:	mov    eax,DWORD PTR [esi]
  40d1bc:	mov    DWORD PTR [eax+0x1c],ebx
  40d1bf:	mov    eax,DWORD PTR [esp+0x2c]
  40d1c3:	push   eax
  40d1c4:	lea    ecx,[esp+0x14]
  40d1c8:	call   0x40ce40
  40d1cd:	mov    BYTE PTR [esp+0x20],0x2
  40d1d2:	mov    ebx,DWORD PTR [esi]
  40d1d4:	call   0x413c80
  40d1d9:	mov    BYTE PTR [esp+0x20],0x1
  40d1de:	mov    eax,DWORD PTR [esp+0x14]
  40d1e2:	test   eax,eax
  40d1e4:	je     0x40d212
  40d1e6:	mov    edi,eax
  40d1e8:	add    eax,0x4
  40d1eb:	or     ecx,0xffffffff
  40d1ee:	lock xadd DWORD PTR [eax],ecx
  40d1f2:	jne    0x40d212
  40d1f4:	mov    edx,DWORD PTR [edi]
  40d1f6:	mov    eax,DWORD PTR [edx+0x4]
  40d1f9:	mov    ecx,edi
  40d1fb:	call   eax
  40d1fd:	lea    ecx,[edi+0x8]
  40d200:	or     edx,0xffffffff
  40d203:	lock xadd DWORD PTR [ecx],edx
  40d207:	jne    0x40d212
  40d209:	mov    eax,DWORD PTR [edi]
  40d20b:	mov    edx,DWORD PTR [eax+0x8]
  40d20e:	mov    ecx,edi
  40d210:	call   edx
  40d212:	mov    eax,DWORD PTR [esi]
  40d214:	call   0x413c10
  40d219:	cmp    DWORD PTR [eax],0x0
  40d21c:	sete   al
  40d21f:	test   al,al
  40d221:	mov    eax,esi
  40d223:	je     0x40d22c
  40d225:	call   0x412b60
  40d22a:	mov    eax,esi
  40d22c:	mov    ecx,DWORD PTR [esp+0x18]
  40d230:	mov    DWORD PTR fs:0x0,ecx
  40d237:	pop    ecx
  40d238:	pop    edi
  40d239:	pop    esi
  40d23a:	pop    ebx
  40d23b:	add    esp,0x14
  40d23e:	ret    0x8
  40d241:	int3   
  40d242:	int3   
  40d243:	int3   
  40d244:	int3   
  40d245:	int3   
  40d246:	int3   
  40d247:	int3   
  40d248:	int3   
  40d249:	int3   
  40d24a:	int3   
  40d24b:	int3   
  40d24c:	int3   
  40d24d:	int3   
  40d24e:	int3   
  40d24f:	int3   
  40d250:	push   0xffffffff
  40d252:	push   0x42ae09
  40d257:	mov    eax,fs:0x0
  40d25d:	push   eax
  40d25e:	push   esi
  40d25f:	mov    eax,ds:0x43e020
  40d264:	xor    eax,esp
  40d266:	push   eax
  40d267:	lea    eax,[esp+0x8]
  40d26b:	mov    fs:0x0,eax
  40d271:	mov    esi,DWORD PTR [esp+0x18]
  40d275:	mov    ecx,esi
  40d277:	call   DWORD PTR ds:0x4303ac
  40d27d:	mov    ecx,DWORD PTR [esp+0x20]
  40d281:	mov    eax,DWORD PTR [esp+0x1c]
  40d285:	mov    DWORD PTR [esp+0x10],0x0
  40d28d:	push   ecx
  40d28e:	lea    ecx,[esi+0x10]
  40d291:	mov    DWORD PTR [esi],0x432978
  40d297:	mov    DWORD PTR [esi+0xc],eax
  40d29a:	call   DWORD PTR ds:0x430118
  40d2a0:	mov    eax,esi
  40d2a2:	mov    ecx,DWORD PTR [esp+0x8]
  40d2a6:	mov    DWORD PTR fs:0x0,ecx
  40d2ad:	pop    ecx
  40d2ae:	pop    esi
  40d2af:	add    esp,0xc
  40d2b2:	ret    0xc
  40d2b5:	int3   
  40d2b6:	int3   
  40d2b7:	int3   
  40d2b8:	int3   
  40d2b9:	int3   
  40d2ba:	int3   
  40d2bb:	int3   
  40d2bc:	int3   
  40d2bd:	int3   
  40d2be:	int3   
  40d2bf:	int3   
  40d2c0:	push   0xffffffff
  40d2c2:	push   0x42ae09
  40d2c7:	mov    eax,fs:0x0
  40d2cd:	push   eax
  40d2ce:	push   esi
  40d2cf:	mov    eax,ds:0x43e020
  40d2d4:	xor    eax,esp
  40d2d6:	push   eax
  40d2d7:	lea    eax,[esp+0x8]
  40d2db:	mov    fs:0x0,eax
  40d2e1:	mov    esi,DWORD PTR [esp+0x18]
  40d2e5:	mov    DWORD PTR [esi],0x432978
  40d2eb:	lea    ecx,[esi+0x10]
  40d2ee:	mov    DWORD PTR [esp+0x10],0x0
  40d2f6:	call   DWORD PTR ds:0x430264
  40d2fc:	mov    ecx,esi
  40d2fe:	mov    DWORD PTR [esp+0x10],0xffffffff
  40d306:	call   DWORD PTR ds:0x4303a8
  40d30c:	mov    ecx,DWORD PTR [esp+0x8]
  40d310:	mov    DWORD PTR fs:0x0,ecx
  40d317:	pop    ecx
  40d318:	pop    esi
  40d319:	add    esp,0xc
  40d31c:	ret    0x4
  40d31f:	int3   
  40d320:	push   0xffffffff
  40d322:	push   0x42ce49
  40d327:	mov    eax,fs:0x0
  40d32d:	push   eax
  40d32e:	push   esi
  40d32f:	mov    eax,ds:0x43e020
  40d334:	xor    eax,esp
  40d336:	push   eax
  40d337:	lea    eax,[esp+0x8]
  40d33b:	mov    fs:0x0,eax
  40d341:	mov    esi,DWORD PTR [esp+0x18]
  40d345:	mov    ecx,esi
  40d347:	call   DWORD PTR ds:0x430254
  40d34d:	xor    eax,eax
  40d34f:	mov    DWORD PTR [esp+0x10],eax
  40d353:	lea    ecx,[esi+0x20]
  40d356:	mov    DWORD PTR [esi+0x1c],eax
  40d359:	call   DWORD PTR ds:0x430260
  40d35f:	mov    eax,esi
  40d361:	mov    ecx,DWORD PTR [esp+0x8]
  40d365:	mov    DWORD PTR fs:0x0,ecx
  40d36c:	pop    ecx
  40d36d:	pop    esi
  40d36e:	add    esp,0xc
  40d371:	ret    0x4
  40d374:	int3   
  40d375:	int3   
  40d376:	int3   
  40d377:	int3   
  40d378:	int3   
  40d379:	int3   
  40d37a:	int3   
  40d37b:	int3   
  40d37c:	int3   
  40d37d:	int3   
  40d37e:	int3   
  40d37f:	int3   
  40d380:	push   0xffffffff
  40d382:	push   0x42ce49
  40d387:	mov    eax,fs:0x0
  40d38d:	push   eax
  40d38e:	push   esi
  40d38f:	mov    eax,ds:0x43e020
  40d394:	xor    eax,esp
  40d396:	push   eax
  40d397:	lea    eax,[esp+0x8]
  40d39b:	mov    fs:0x0,eax
  40d3a1:	mov    esi,DWORD PTR [esp+0x18]
  40d3a5:	mov    DWORD PTR [esp+0x10],0x0
  40d3ad:	mov    ecx,DWORD PTR [esi+0x1c]
  40d3b0:	test   ecx,ecx
  40d3b2:	je     0x40d3e2
  40d3b4:	cmp    DWORD PTR [esi+0x34],0x0
  40d3b8:	jne    0x40d3c5
  40d3ba:	push   ecx
  40d3bb:	call   0x42504a
  40d3c0:	add    esp,0x4
  40d3c3:	jmp    0x40d3db
  40d3c5:	cmp    DWORD PTR [esi+0x38],0x10
  40d3c9:	jb     0x40d3d0
  40d3cb:	mov    eax,DWORD PTR [esi+0x24]
  40d3ce:	jmp    0x40d3d3
  40d3d0:	lea    eax,[esi+0x24]
  40d3d3:	push   ecx
  40d3d4:	push   eax
  40d3d5:	call   DWORD PTR ds:0x4303bc
  40d3db:	mov    DWORD PTR [esi+0x1c],0x0
  40d3e2:	lea    ecx,[esi+0x20]
  40d3e5:	call   DWORD PTR ds:0x43025c
  40d3eb:	mov    ecx,esi
  40d3ed:	mov    DWORD PTR [esp+0x10],0xffffffff
  40d3f5:	call   DWORD PTR ds:0x430264
  40d3fb:	mov    ecx,DWORD PTR [esp+0x8]
  40d3ff:	mov    DWORD PTR fs:0x0,ecx
  40d406:	pop    ecx
  40d407:	pop    esi
  40d408:	add    esp,0xc
  40d40b:	ret    0x4
  40d40e:	int3   
  40d40f:	int3   
  40d410:	push   0xffffffff
  40d412:	push   0x42add9
  40d417:	mov    eax,fs:0x0
  40d41d:	push   eax
  40d41e:	sub    esp,0x1c
  40d421:	push   esi
  40d422:	mov    eax,ds:0x43e020
  40d427:	xor    eax,esp
  40d429:	push   eax
  40d42a:	lea    eax,[esp+0x24]
  40d42e:	mov    fs:0x0,eax
  40d434:	mov    esi,ecx
  40d436:	mov    eax,DWORD PTR [esi+0x1c]
  40d439:	add    esi,0x1c
  40d43c:	test   eax,eax
  40d43e:	je     0x40d46d
  40d440:	cmp    DWORD PTR [esi+0x18],0x0
  40d444:	jne    0x40d451
  40d446:	push   eax
  40d447:	call   0x42504a
  40d44c:	add    esp,0x4
  40d44f:	jmp    0x40d467
  40d451:	cmp    DWORD PTR [esi+0x1c],0x10
  40d455:	jb     0x40d45c
  40d457:	mov    ecx,DWORD PTR [esi+0x8]
  40d45a:	jmp    0x40d45f
  40d45c:	lea    ecx,[esi+0x8]
  40d45f:	push   eax
  40d460:	push   ecx
  40d461:	call   DWORD PTR ds:0x4303bc
  40d467:	mov    DWORD PTR [esi],0x0
  40d46d:	mov    ecx,esi
  40d46f:	call   0x412bc0
  40d474:	cmp    DWORD PTR [edi+0x18],0x8
  40d478:	mov    ecx,DWORD PTR [esi]
  40d47a:	jb     0x40d481
  40d47c:	mov    eax,DWORD PTR [edi+0x4]
  40d47f:	jmp    0x40d484
  40d481:	lea    eax,[edi+0x4]
  40d484:	mov    edx,DWORD PTR [ecx]
  40d486:	push   0x50
  40d488:	push   eax
  40d489:	mov    eax,DWORD PTR [edx]
  40d48b:	call   eax
  40d48d:	mov    esi,DWORD PTR [esi]
  40d48f:	push   edi
  40d490:	lea    ecx,[esp+0xc]
  40d494:	push   0x43179c
  40d499:	push   ecx
  40d49a:	call   DWORD PTR ds:0x43019c
  40d4a0:	add    esp,0xc
  40d4a3:	mov    DWORD PTR [esp+0x2c],0x0
  40d4ab:	cmp    DWORD PTR [eax+0x18],0x8
  40d4af:	jb     0x40d4b6
  40d4b1:	mov    eax,DWORD PTR [eax+0x4]
  40d4b4:	jmp    0x40d4b9
  40d4b6:	add    eax,0x4
  40d4b9:	mov    edx,DWORD PTR [esi]
  40d4bb:	push   eax
  40d4bc:	mov    eax,DWORD PTR [edx+0x1c]
  40d4bf:	mov    ecx,esi
  40d4c1:	call   eax
  40d4c3:	lea    ecx,[esp+0x8]
  40d4c7:	mov    DWORD PTR [esp+0x2c],0xffffffff
  40d4cf:	call   DWORD PTR ds:0x430264
  40d4d5:	mov    ecx,DWORD PTR [esp+0x24]
  40d4d9:	mov    DWORD PTR fs:0x0,ecx
  40d4e0:	pop    ecx
  40d4e1:	pop    esi
  40d4e2:	add    esp,0x28
  40d4e5:	ret    
  40d4e6:	int3   
  40d4e7:	int3   
  40d4e8:	int3   
  40d4e9:	int3   
  40d4ea:	int3   
  40d4eb:	int3   
  40d4ec:	int3   
  40d4ed:	int3   
  40d4ee:	int3   
  40d4ef:	int3   
  40d4f0:	push   0xffffffff
  40d4f2:	push   0x42d20d
  40d4f7:	mov    eax,fs:0x0
  40d4fd:	push   eax
  40d4fe:	sub    esp,0x8
  40d501:	push   esi
  40d502:	mov    eax,ds:0x43e020
  40d507:	xor    eax,esp
  40d509:	push   eax
  40d50a:	lea    eax,[esp+0x10]
  40d50e:	mov    fs:0x0,eax
  40d514:	mov    DWORD PTR [esp+0x8],0x43fec0
  40d51c:	mov    ecx,0x43ff6c
  40d521:	mov    DWORD PTR [esp+0x18],0x3
  40d529:	call   DWORD PTR ds:0x430264
  40d52f:	mov    esi,0x43ff4c
  40d534:	mov    DWORD PTR [esp+0xc],esi
  40d538:	mov    BYTE PTR [esp+0x18],0x4
  40d53d:	call   0x4140b0
  40d542:	mov    eax,ds:0x43ff4c
  40d547:	push   eax
  40d548:	call   0x42504a
  40d54d:	add    esp,0x4
  40d550:	mov    ecx,0x43ff2c
  40d555:	mov    BYTE PTR [esp+0x18],0x1
  40d55a:	call   DWORD PTR ds:0x430264
  40d560:	push   0x43ff0c
  40d565:	mov    BYTE PTR [esp+0x1c],0x0
  40d56a:	call   0x412dd0
  40d56f:	push   0x43fed0
  40d574:	mov    DWORD PTR [esp+0x1c],0xffffffff
  40d57c:	call   0x40d380
  40d581:	mov    ecx,DWORD PTR [esp+0x10]
  40d585:	mov    DWORD PTR fs:0x0,ecx
  40d58c:	pop    ecx
  40d58d:	pop    esi
  40d58e:	add    esp,0x14
  40d591:	ret    
  40d592:	int3   
  40d593:	int3   
  40d594:	int3   
  40d595:	int3   
  40d596:	int3   
  40d597:	int3   
  40d598:	int3   
  40d599:	int3   
  40d59a:	int3   
  40d59b:	int3   
  40d59c:	int3   
  40d59d:	int3   
  40d59e:	int3   
  40d59f:	int3   
  40d5a0:	push   esi
  40d5a1:	mov    esi,ecx
  40d5a3:	push   esi
  40d5a4:	call   0x40d2c0
  40d5a9:	test   BYTE PTR [esp+0x8],0x1
  40d5ae:	je     0x40d5b9
  40d5b0:	push   esi
  40d5b1:	call   0x42504a
  40d5b6:	add    esp,0x4
  40d5b9:	mov    eax,esi
  40d5bb:	pop    esi
  40d5bc:	ret    0x4
  40d5bf:	int3   
  40d5c0:	push   0xffffffff
  40d5c2:	push   0x42bf98
  40d5c7:	mov    eax,fs:0x0
  40d5cd:	push   eax
  40d5ce:	push   ecx
  40d5cf:	push   esi
  40d5d0:	mov    eax,ds:0x43e020
  40d5d5:	xor    eax,esp
  40d5d7:	push   eax
  40d5d8:	lea    eax,[esp+0xc]
  40d5dc:	mov    fs:0x0,eax
  40d5e2:	mov    esi,DWORD PTR [esp+0x1c]
  40d5e6:	mov    DWORD PTR [esp+0x14],0x0
  40d5ee:	call   0x4140b0
  40d5f3:	mov    eax,DWORD PTR [esi]
  40d5f5:	push   eax
  40d5f6:	call   0x42504a
  40d5fb:	add    esp,0x4
  40d5fe:	mov    ecx,DWORD PTR [esp+0xc]
  40d602:	mov    DWORD PTR fs:0x0,ecx
  40d609:	pop    ecx
  40d60a:	pop    esi
  40d60b:	add    esp,0x10
  40d60e:	ret    0x4
  40d611:	int3   
  40d612:	int3   
  40d613:	int3   
  40d614:	int3   
  40d615:	int3   
  40d616:	int3   
  40d617:	int3   
  40d618:	int3   
  40d619:	int3   
  40d61a:	int3   
  40d61b:	int3   
  40d61c:	int3   
  40d61d:	int3   
  40d61e:	int3   
  40d61f:	int3   
  40d620:	push   0xffffffff
  40d622:	push   0x42c014
  40d627:	mov    eax,fs:0x0
  40d62d:	push   eax
  40d62e:	push   esi
  40d62f:	push   edi
  40d630:	mov    eax,ds:0x43e020
  40d635:	xor    eax,esp
  40d637:	push   eax
  40d638:	lea    eax,[esp+0xc]
  40d63c:	mov    fs:0x0,eax
  40d642:	mov    esi,DWORD PTR [esp+0x1c]
  40d646:	mov    ecx,esi
  40d648:	call   DWORD PTR ds:0x430260
  40d64e:	xor    eax,eax
  40d650:	mov    DWORD PTR [esp+0x14],eax
  40d654:	lea    edi,[esi+0x1c]
  40d657:	mov    DWORD PTR [edi],eax
  40d659:	mov    DWORD PTR [edi+0x4],eax
  40d65c:	mov    DWORD PTR [edi+0x10],eax
  40d65f:	mov    DWORD PTR [edi+0x14],eax
  40d662:	mov    DWORD PTR [edi+0x18],eax
  40d665:	mov    DWORD PTR [edi+0x20],eax
  40d668:	lea    edx,[edi+0x1003c]
  40d66e:	mov    DWORD PTR [edx],eax
  40d670:	mov    DWORD PTR [edi+0x10040],eax
  40d676:	lea    ecx,[edi+0x3c]
  40d679:	mov    eax,ecx
  40d67b:	neg    eax
  40d67d:	and    eax,0x3
  40d680:	add    eax,ecx
  40d682:	mov    DWORD PTR [edi+0x30],ecx
  40d685:	mov    DWORD PTR [edi+0x34],eax
  40d688:	mov    DWORD PTR [edi+0x38],edx
  40d68b:	mov    eax,DWORD PTR [esp+0x20]
  40d68f:	push   eax
  40d690:	mov    ecx,esi
  40d692:	mov    BYTE PTR [esp+0x18],0x1
  40d697:	call   DWORD PTR ds:0x430174
  40d69d:	cmp    DWORD PTR [esi+0x18],0x10
  40d6a1:	jb     0x40d6a8
  40d6a3:	mov    eax,DWORD PTR [esi+0x4]
  40d6a6:	jmp    0x40d6ab
  40d6a8:	lea    eax,[esi+0x4]
  40d6ab:	push   eax
  40d6ac:	call   0x4168c0
  40d6b1:	mov    eax,esi
  40d6b3:	mov    ecx,DWORD PTR [esp+0xc]
  40d6b7:	mov    DWORD PTR fs:0x0,ecx
  40d6be:	pop    ecx
  40d6bf:	pop    edi
  40d6c0:	pop    esi
  40d6c1:	add    esp,0xc
  40d6c4:	ret    0x8
  40d6c7:	int3   
  40d6c8:	int3   
  40d6c9:	int3   
  40d6ca:	int3   
  40d6cb:	int3   
  40d6cc:	int3   
  40d6cd:	int3   
  40d6ce:	int3   
  40d6cf:	int3   
  40d6d0:	push   ebp
  40d6d1:	mov    ebp,esp
  40d6d3:	and    esp,0xfffffff8
  40d6d6:	push   0xffffffff
  40d6d8:	push   0x42e312
  40d6dd:	mov    eax,fs:0x0
  40d6e3:	push   eax
  40d6e4:	sub    esp,0x28
  40d6e7:	push   ebx
  40d6e8:	push   esi
  40d6e9:	push   edi
  40d6ea:	mov    eax,ds:0x43e020
  40d6ef:	xor    eax,esp
  40d6f1:	push   eax
  40d6f2:	lea    eax,[esp+0x38]
  40d6f6:	mov    fs:0x0,eax
  40d6fc:	mov    esi,ecx
  40d6fe:	lea    eax,[esp+0x1c]
  40d702:	push   eax
  40d703:	call   0x413bb0
  40d708:	push   0x1
  40d70a:	sub    esp,0xc
  40d70d:	mov    eax,esp
  40d70f:	mov    DWORD PTR [esp+0x50],0x0
  40d717:	mov    DWORD PTR [esp+0x28],esp
  40d71b:	call   0x416a90
  40d720:	lea    ecx,[ebp+0x8]
  40d723:	push   ecx
  40d724:	lea    ebx,[esp+0x30]
  40d728:	call   0x4169c0
  40d72d:	mov    ecx,DWORD PTR [esp+0x40]
  40d731:	mov    edi,DWORD PTR [esp+0x3c]
  40d735:	sub    ecx,edi
  40d737:	mov    eax,0x92492493
  40d73c:	imul   ecx
  40d73e:	add    edx,ecx
  40d740:	sar    edx,0x4
  40d743:	mov    eax,edx
  40d745:	shr    eax,0x1f
  40d748:	add    eax,edx
  40d74a:	add    esp,0x14
  40d74d:	cmp    eax,0x1
  40d750:	jne    0x40d784
  40d752:	mov    edi,DWORD PTR [ebp+0x8]
  40d755:	push   esi
  40d756:	call   0x40d8a0
  40d75b:	mov    edx,ebx
  40d75d:	push   edx
  40d75e:	mov    esi,eax
  40d760:	mov    DWORD PTR [esp+0x44],0xffffffff
  40d768:	call   0x4123b0
  40d76d:	mov    eax,esi
  40d76f:	mov    ecx,DWORD PTR [esp+0x38]
  40d773:	mov    DWORD PTR fs:0x0,ecx
  40d77a:	pop    ecx
  40d77b:	pop    edi
  40d77c:	pop    esi
  40d77d:	pop    ebx
  40d77e:	mov    esp,ebp
  40d780:	pop    ebp
  40d781:	ret    0x4
  40d784:	test   eax,eax
  40d786:	ja     0x40d792
  40d788:	call   DWORD PTR ds:0x430390
  40d78e:	mov    edi,DWORD PTR [esp+0x28]
  40d792:	cmp    DWORD PTR [edi+0x18],0x10
  40d796:	jb     0x40d79d
  40d798:	mov    edi,DWORD PTR [edi+0x4]
  40d79b:	jmp    0x40d7a0
  40d79d:	add    edi,0x4
  40d7a0:	push   esi
  40d7a1:	call   0x40d8a0
  40d7a6:	mov    esi,DWORD PTR [esp+0x2c]
  40d7aa:	mov    edi,DWORD PTR [esp+0x28]
  40d7ae:	mov    DWORD PTR [esp+0x14],eax
  40d7b2:	mov    ecx,esi
  40d7b4:	sub    ecx,edi
  40d7b6:	mov    eax,0x92492493
  40d7bb:	imul   ecx
  40d7bd:	add    edx,ecx
  40d7bf:	sar    edx,0x4
  40d7c2:	mov    eax,edx
  40d7c4:	shr    eax,0x1f
  40d7c7:	mov    ebx,0x1
  40d7cc:	add    eax,edx
  40d7ce:	cmp    eax,ebx
  40d7d0:	jle    0x40d833
  40d7d2:	lea    esi,[ebx+0x1b]
  40d7d5:	jmp    0x40d7db
  40d7d7:	mov    esi,DWORD PTR [esp+0x18]
  40d7db:	cmp    ebx,eax
  40d7dd:	jb     0x40d7e9
  40d7df:	call   DWORD PTR ds:0x430390
  40d7e5:	mov    edi,DWORD PTR [esp+0x28]
  40d7e9:	cmp    DWORD PTR [esi+edi*1+0x18],0x10
  40d7ee:	jb     0x40d7f6
  40d7f0:	mov    edi,DWORD PTR [esi+edi*1+0x4]
  40d7f4:	jmp    0x40d7fa
  40d7f6:	lea    edi,[esi+edi*1+0x4]
  40d7fa:	mov    eax,DWORD PTR [esp+0x14]
  40d7fe:	push   eax
  40d7ff:	call   0x40d950
  40d804:	mov    edi,DWORD PTR [esp+0x28]
  40d808:	add    esi,0x1c
  40d80b:	mov    DWORD PTR [esp+0x14],eax
  40d80f:	mov    DWORD PTR [esp+0x18],esi
  40d813:	mov    esi,DWORD PTR [esp+0x2c]
  40d817:	mov    ecx,esi
  40d819:	sub    ecx,edi
  40d81b:	mov    eax,0x92492493
  40d820:	imul   ecx
  40d822:	add    edx,ecx
  40d824:	sar    edx,0x4
  40d827:	mov    eax,edx
  40d829:	shr    eax,0x1f
  40d82c:	inc    ebx
  40d82d:	add    eax,edx
  40d82f:	cmp    ebx,eax
  40d831:	jl     0x40d7d7
  40d833:	xor    ebx,ebx
  40d835:	mov    DWORD PTR [esp+0x40],0x1
  40d83d:	cmp    edi,ebx
  40d83f:	je     0x40d861
  40d841:	cmp    edi,esi
  40d843:	je     0x40d858
  40d845:	mov    ecx,edi
  40d847:	call   DWORD PTR ds:0x43025c
  40d84d:	add    edi,0x1c
  40d850:	cmp    edi,esi
  40d852:	jne    0x40d845
  40d854:	mov    edi,DWORD PTR [esp+0x28]
  40d858:	push   edi
  40d859:	call   0x42504a
  40d85e:	add    esp,0x4
  40d861:	mov    ecx,DWORD PTR [esp+0x1c]
  40d865:	push   ecx
  40d866:	mov    DWORD PTR [esp+0x2c],ebx
  40d86a:	mov    DWORD PTR [esp+0x30],ebx
  40d86e:	mov    DWORD PTR [esp+0x34],ebx
  40d872:	call   0x42504a
  40d877:	mov    eax,DWORD PTR [esp+0x18]
  40d87b:	add    esp,0x4
  40d87e:	mov    ecx,DWORD PTR [esp+0x38]
  40d882:	mov    DWORD PTR fs:0x0,ecx
  40d889:	pop    ecx
  40d88a:	pop    edi
  40d88b:	pop    esi
  40d88c:	pop    ebx
  40d88d:	mov    esp,ebp
  40d88f:	pop    ebp
  40d890:	ret    0x4
  40d893:	int3   
  40d894:	int3   
  40d895:	int3   
  40d896:	int3   
  40d897:	int3   
  40d898:	int3   
  40d899:	int3   
  40d89a:	int3   
  40d89b:	int3   
  40d89c:	int3   
  40d89d:	int3   
  40d89e:	int3   
  40d89f:	int3   
  40d8a0:	push   0xffffffff
  40d8a2:	push   0x42b608
  40d8a7:	mov    eax,fs:0x0
  40d8ad:	push   eax
  40d8ae:	sub    esp,0x54
  40d8b1:	push   esi
  40d8b2:	mov    eax,ds:0x43e020
  40d8b7:	xor    eax,esp
  40d8b9:	push   eax
  40d8ba:	lea    eax,[esp+0x5c]
  40d8be:	mov    fs:0x0,eax
  40d8c4:	mov    eax,DWORD PTR [esp+0x6c]
  40d8c8:	add    eax,0x1c
  40d8cb:	test   edi,edi
  40d8cd:	je     0x40d8d8
  40d8cf:	push   edi
  40d8d0:	push   eax
  40d8d1:	call   0x412400
  40d8d6:	jmp    0x40d8db
  40d8d8:	mov    eax,DWORD PTR [eax+0x18]
  40d8db:	test   eax,eax
  40d8dd:	jne    0x40d937
  40d8df:	lea    eax,[esp+0x30]
  40d8e3:	push   eax
  40d8e4:	call   0x41f0c0
  40d8e9:	mov    esi,eax
  40d8eb:	push   edi
  40d8ec:	push   0x4316c0
  40d8f1:	mov    DWORD PTR [esp+0x6c],0x0
  40d8f9:	call   DWORD PTR ds:0x43004c
  40d8ff:	push   eax
  40d900:	push   0x2e
  40d902:	push   0x4317b0
  40d907:	push   0x431698
  40d90c:	call   0x41f120
  40d911:	add    esp,0x10
  40d914:	mov    esi,eax
  40d916:	call   0x41f120
  40d91b:	add    esp,0x8
  40d91e:	push   eax
  40d91f:	lea    ecx,[esp+0xc]
  40d923:	call   0x40c220
  40d928:	push   0x435c68
  40d92d:	lea    ecx,[esp+0xc]
  40d931:	push   ecx
  40d932:	call   0x429e76
  40d937:	mov    ecx,DWORD PTR [esp+0x5c]
  40d93b:	mov    DWORD PTR fs:0x0,ecx
  40d942:	pop    ecx
  40d943:	pop    esi
  40d944:	add    esp,0x60
  40d947:	ret    0x4
  40d94a:	int3   
  40d94b:	int3   
  40d94c:	int3   
  40d94d:	int3   
  40d94e:	int3   
  40d94f:	int3   
  40d950:	push   0xffffffff
  40d952:	push   0x42b608
  40d957:	mov    eax,fs:0x0
  40d95d:	push   eax
  40d95e:	sub    esp,0x54
  40d961:	push   esi
  40d962:	mov    eax,ds:0x43e020
  40d967:	xor    eax,esp
  40d969:	push   eax
  40d96a:	lea    eax,[esp+0x5c]
  40d96e:	mov    fs:0x0,eax
  40d974:	mov    eax,DWORD PTR [esp+0x6c]
  40d978:	test   edi,edi
  40d97a:	je     0x40d985
  40d97c:	push   edi
  40d97d:	push   eax
  40d97e:	call   0x412400
  40d983:	jmp    0x40d988
  40d985:	mov    eax,DWORD PTR [eax+0x18]
  40d988:	test   eax,eax
  40d98a:	jne    0x40d9e4
  40d98c:	lea    eax,[esp+0x30]
  40d990:	push   eax
  40d991:	call   0x41f0c0
  40d996:	mov    esi,eax
  40d998:	push   edi
  40d999:	push   0x4316c0
  40d99e:	mov    DWORD PTR [esp+0x6c],0x0
  40d9a6:	call   DWORD PTR ds:0x43004c
  40d9ac:	push   eax
  40d9ad:	push   0x39
  40d9af:	push   0x4317cc
  40d9b4:	push   0x431698
  40d9b9:	call   0x41f120
  40d9be:	add    esp,0x10
  40d9c1:	mov    esi,eax
  40d9c3:	call   0x41f120
  40d9c8:	add    esp,0x8
  40d9cb:	push   eax
  40d9cc:	lea    ecx,[esp+0xc]
  40d9d0:	call   0x40c220
  40d9d5:	push   0x435c68
  40d9da:	lea    ecx,[esp+0xc]
  40d9de:	push   ecx
  40d9df:	call   0x429e76
  40d9e4:	mov    ecx,DWORD PTR [esp+0x5c]
  40d9e8:	mov    DWORD PTR fs:0x0,ecx
  40d9ef:	pop    ecx
  40d9f0:	pop    esi
  40d9f1:	add    esp,0x60
  40d9f4:	ret    0x4
  40d9f7:	int3   
  40d9f8:	int3   
  40d9f9:	int3   
  40d9fa:	int3   
  40d9fb:	int3   
  40d9fc:	int3   
  40d9fd:	int3   
  40d9fe:	int3   
  40d9ff:	int3   
  40da00:	push   0xffffffff
  40da02:	push   0x42d1a2
  40da07:	mov    eax,fs:0x0
  40da0d:	push   eax
  40da0e:	sub    esp,0x3c
  40da11:	mov    eax,ds:0x43e020
  40da16:	xor    eax,esp
  40da18:	mov    DWORD PTR [esp+0x38],eax
  40da1c:	push   ebx
  40da1d:	mov    eax,ds:0x43e020
  40da22:	xor    eax,esp
  40da24:	push   eax
  40da25:	lea    eax,[esp+0x44]
  40da29:	mov    fs:0x0,eax
  40da2f:	mov    eax,DWORD PTR [esp+0x54]
  40da33:	push   eax
  40da34:	lea    ecx,[esp+0xc]
  40da38:	call   DWORD PTR ds:0x430118
  40da3e:	lea    eax,[esp+0x8]
  40da42:	push   eax
  40da43:	mov    ebx,0x430f38
  40da48:	mov    edx,0x4317ec
  40da4d:	mov    DWORD PTR [esp+0x50],0x0
  40da55:	call   0x417380
  40da5a:	mov    ecx,DWORD PTR ds:0x4301e0
  40da60:	mov    edx,DWORD PTR [ecx]
  40da62:	add    esp,0x4
  40da65:	push   edx
  40da66:	push   0x5c
  40da68:	lea    ecx,[esp+0x10]
  40da6c:	call   DWORD PTR ds:0x430224
  40da72:	mov    ecx,DWORD PTR ds:0x4301e0
  40da78:	cmp    eax,DWORD PTR [ecx]
  40da7a:	lea    ecx,[esp+0x8]
  40da7e:	je     0x40dac0
  40da80:	inc    eax
  40da81:	push   eax
  40da82:	push   0x0
  40da84:	lea    edx,[esp+0x2c]
  40da88:	push   edx
  40da89:	call   DWORD PTR ds:0x430218
  40da8f:	mov    BYTE PTR [esp+0x4c],0x1
  40da94:	cmp    DWORD PTR [esp+0x3c],0x8
  40da99:	mov    eax,DWORD PTR [esp+0x28]
  40da9d:	jae    0x40daa3
  40da9f:	lea    eax,[esp+0x28]
  40daa3:	push   eax
  40daa4:	call   DWORD PTR ds:0x430014
  40daaa:	add    esp,0x4
  40daad:	lea    ecx,[esp+0x24]
  40dab1:	mov    BYTE PTR [esp+0x4c],0x0
  40dab6:	call   DWORD PTR ds:0x430264
  40dabc:	lea    ecx,[esp+0x8]
  40dac0:	mov    DWORD PTR [esp+0x4c],0xffffffff
  40dac8:	call   DWORD PTR ds:0x430264
  40dace:	mov    ecx,DWORD PTR [esp+0x44]
  40dad2:	mov    DWORD PTR fs:0x0,ecx
  40dad9:	pop    ecx
  40dada:	pop    ebx
  40dadb:	mov    ecx,DWORD PTR [esp+0x38]
  40dadf:	xor    ecx,esp
  40dae1:	call   0x42503a
  40dae6:	add    esp,0x48
  40dae9:	ret    
  40daea:	int3   
  40daeb:	int3   
  40daec:	int3   
  40daed:	int3   
  40daee:	int3   
  40daef:	int3   
  40daf0:	push   ecx
  40daf1:	push   esi
  40daf2:	push   edi
  40daf3:	lea    edi,[esp+0x8]
  40daf7:	call   0x4173e0
  40dafc:	mov    esi,DWORD PTR [ebx+0x10]
  40daff:	sub    esi,DWORD PTR [ebx+0xc]
  40db02:	jne    0x40db0a
  40db04:	call   DWORD PTR ds:0x430390
  40db0a:	mov    eax,DWORD PTR [ebx+0xc]
  40db0d:	mov    ecx,DWORD PTR [esp+0x8]
  40db11:	lea    edx,[eax+esi*1]
  40db14:	cmp    eax,edx
  40db16:	jae    0x40db2f
  40db18:	movzx  esi,BYTE PTR [eax]
  40db1b:	movzx  edi,cl
  40db1e:	xor    esi,edi
  40db20:	shr    ecx,0x8
  40db23:	xor    ecx,DWORD PTR [esi*4+0x4400e8]
  40db2a:	inc    eax
  40db2b:	cmp    eax,edx
  40db2d:	jb     0x40db18
  40db2f:	not    ecx
  40db31:	cmp    ecx,DWORD PTR [esp+0x10]
  40db35:	pop    edi
  40db36:	sete   al
  40db39:	pop    esi
  40db3a:	pop    ecx
  40db3b:	ret    
  40db3c:	int3   
  40db3d:	int3   
  40db3e:	int3   
  40db3f:	int3   
  40db40:	sub    esp,0x260
  40db46:	mov    eax,ds:0x43e020
  40db4b:	xor    eax,esp
  40db4d:	mov    DWORD PTR [esp+0x25c],eax
  40db54:	xor    eax,eax
  40db56:	push   0x256
  40db5b:	push   eax
  40db5c:	lea    ecx,[esp+0xe]
  40db60:	mov    DWORD PTR [esp+0x8],0x0
  40db68:	push   ecx
  40db69:	mov    DWORD PTR [esp+0xc],0x12c
  40db71:	mov    WORD PTR [esp+0x10],ax
  40db76:	call   0x429f9c
  40db7b:	mov    ecx,DWORD PTR [esp+0x270]
  40db82:	lea    edx,[esp+0xc]
  40db86:	push   edx
  40db87:	lea    eax,[esp+0x14]
  40db8b:	push   eax
  40db8c:	push   ecx
  40db8d:	call   DWORD PTR ds:0x430444
  40db93:	add    esp,0x18
  40db96:	lea    edx,[esp+0x4]
  40db9a:	push   edx
  40db9b:	mov    ecx,esi
  40db9d:	call   DWORD PTR ds:0x430268
  40dba3:	mov    ecx,DWORD PTR [esp+0x25c]
  40dbaa:	xor    ecx,esp
  40dbac:	mov    eax,esi
  40dbae:	call   0x42503a
  40dbb3:	add    esp,0x260
  40dbb9:	ret    
  40dbba:	int3   
  40dbbb:	int3   
  40dbbc:	int3   
  40dbbd:	int3   
  40dbbe:	int3   
  40dbbf:	int3   
  40dbc0:	push   0xffffffff
  40dbc2:	push   0x42adac
  40dbc7:	mov    eax,fs:0x0
  40dbcd:	push   eax
  40dbce:	push   esi
  40dbcf:	push   edi
  40dbd0:	mov    eax,ds:0x43e020
  40dbd5:	xor    eax,esp
  40dbd7:	push   eax
  40dbd8:	lea    eax,[esp+0xc]
  40dbdc:	mov    fs:0x0,eax
  40dbe2:	mov    esi,DWORD PTR [esp+0x1c]
  40dbe6:	lea    edi,[esi+0x4]
  40dbe9:	mov    ecx,edi
  40dbeb:	mov    DWORD PTR [esi],0x0
  40dbf1:	call   DWORD PTR ds:0x430254
  40dbf7:	mov    eax,DWORD PTR [esp+0x20]
  40dbfb:	push   eax
  40dbfc:	mov    ecx,edi
  40dbfe:	mov    DWORD PTR [esp+0x18],0x0
  40dc06:	call   DWORD PTR ds:0x43017c
  40dc0c:	mov    eax,esi
  40dc0e:	mov    ecx,DWORD PTR [esp+0xc]
  40dc12:	mov    DWORD PTR fs:0x0,ecx
  40dc19:	pop    ecx
  40dc1a:	pop    edi
  40dc1b:	pop    esi
  40dc1c:	add    esp,0xc
  40dc1f:	ret    0x8
  40dc22:	int3   
  40dc23:	int3   
  40dc24:	int3   
  40dc25:	int3   
  40dc26:	int3   
  40dc27:	int3   
  40dc28:	int3   
  40dc29:	int3   
  40dc2a:	int3   
  40dc2b:	int3   
  40dc2c:	int3   
  40dc2d:	int3   
  40dc2e:	int3   
  40dc2f:	int3   
  40dc30:	push   esi
  40dc31:	mov    esi,eax
  40dc33:	mov    eax,DWORD PTR [esi]
  40dc35:	cmp    eax,0xffffffff
  40dc38:	je     0x40dc47
  40dc3a:	push   eax
  40dc3b:	call   DWORD PTR ds:0x4300f4
  40dc41:	mov    DWORD PTR [esi],0x0
  40dc47:	add    esi,0x4
  40dc4a:	cmp    DWORD PTR [esi+0x18],0x8
  40dc4e:	jb     0x40dc55
  40dc50:	mov    eax,DWORD PTR [esi+0x4]
  40dc53:	jmp    0x40dc58
  40dc55:	lea    eax,[esi+0x4]
  40dc58:	push   0x0
  40dc5a:	push   eax
  40dc5b:	call   DWORD PTR ds:0x4302e0
  40dc61:	add    esp,0x8
  40dc64:	test   eax,eax
  40dc66:	jne    0x40dc7d
  40dc68:	cmp    DWORD PTR [esi+0x18],0x8
  40dc6c:	jb     0x40dc73
  40dc6e:	mov    eax,DWORD PTR [esi+0x4]
  40dc71:	jmp    0x40dc76
  40dc73:	lea    eax,[esi+0x4]
  40dc76:	push   eax
  40dc77:	call   DWORD PTR ds:0x430054
  40dc7d:	mov    ecx,esi
  40dc7f:	pop    esi
  40dc80:	jmp    DWORD PTR ds:0x430264
  40dc86:	int3   
  40dc87:	int3   
  40dc88:	int3   
  40dc89:	int3   
  40dc8a:	int3   
  40dc8b:	int3   
  40dc8c:	int3   
  40dc8d:	int3   
  40dc8e:	int3   
  40dc8f:	int3   
  40dc90:	push   0xffffffff
  40dc92:	push   0x42d174
  40dc97:	mov    eax,fs:0x0
  40dc9d:	push   eax
  40dc9e:	sub    esp,0x8
  40dca1:	push   ebx
  40dca2:	mov    eax,ds:0x43e020
  40dca7:	xor    eax,esp
  40dca9:	push   eax
  40dcaa:	lea    eax,[esp+0x10]
  40dcae:	mov    fs:0x0,eax
  40dcb4:	xor    ebx,ebx
  40dcb6:	push   0x43fed0
  40dcbb:	mov    DWORD PTR [esp+0xc],0x43fec0
  40dcc3:	mov    DWORD PTR ds:0x43fec0,ebx
  40dcc9:	mov    DWORD PTR ds:0x43fec4,ebx
  40dccf:	mov    DWORD PTR ds:0x43fec8,ebx
  40dcd5:	mov    DWORD PTR ds:0x43fecc,ebx
  40dcdb:	call   0x40d320
  40dce0:	push   0x43ff0c
  40dce5:	mov    DWORD PTR [esp+0x1c],ebx
  40dce9:	call   0x412d70
  40dcee:	mov    BYTE PTR [esp+0x18],0x1
  40dcf3:	mov    ecx,0x43ff2c
  40dcf8:	mov    DWORD PTR ds:0x43ff24,ebx
  40dcfe:	mov    BYTE PTR ds:0x43ff28,bl
  40dd04:	call   DWORD PTR ds:0x430254
  40dd0a:	mov    BYTE PTR [esp+0x18],0x2
  40dd0f:	push   0x43ff4c
  40dd14:	mov    BYTE PTR ds:0x43ff48,bl
  40dd1a:	call   0x413db0
  40dd1f:	mov    ecx,0x43ff6c
  40dd24:	mov    BYTE PTR [esp+0x18],0x3
  40dd29:	call   DWORD PTR ds:0x430254
  40dd2f:	mov    BYTE PTR [esp+0x18],0x4
  40dd34:	call   DWORD PTR ds:0x430448
  40dd3a:	sub    esp,0x1c
  40dd3d:	mov    ecx,esp
  40dd3f:	mov    DWORD PTR [esp+0x28],esp
  40dd43:	push   0x430ae4
  40dd48:	mov    ds:0x43fec0,eax
  40dd4d:	call   DWORD PTR ds:0x430268
  40dd53:	push   0x43fec0
  40dd58:	call   0x412320
  40dd5d:	mov    eax,0x43fec0
  40dd62:	mov    ecx,DWORD PTR [esp+0x10]
  40dd66:	mov    DWORD PTR fs:0x0,ecx
  40dd6d:	pop    ecx
  40dd6e:	pop    ebx
  40dd6f:	add    esp,0x14
  40dd72:	ret    
  40dd73:	int3   
  40dd74:	int3   
  40dd75:	int3   
  40dd76:	int3   
  40dd77:	int3   
  40dd78:	int3   
  40dd79:	int3   
  40dd7a:	int3   
  40dd7b:	int3   
  40dd7c:	int3   
  40dd7d:	int3   
  40dd7e:	int3   
  40dd7f:	int3   
  40dd80:	push   ebp
  40dd81:	mov    ebp,esp
  40dd83:	push   0xffffffff
  40dd85:	push   0x42f149
  40dd8a:	mov    eax,fs:0x0
  40dd90:	push   eax
  40dd91:	sub    esp,0x7c
  40dd94:	mov    eax,ds:0x43e020
  40dd99:	xor    eax,ebp
  40dd9b:	mov    DWORD PTR [ebp-0x14],eax
  40dd9e:	push   ebx
  40dd9f:	push   esi
  40dda0:	push   edi
  40dda1:	push   eax
  40dda2:	lea    eax,[ebp-0xc]
  40dda5:	mov    fs:0x0,eax
  40ddab:	mov    DWORD PTR [ebp-0x10],esp
  40ddae:	mov    esi,DWORD PTR ds:0x4400a4
  40ddb4:	mov    edi,ecx
  40ddb6:	push   edi
  40ddb7:	mov    DWORD PTR [ebp-0x3c],esi
  40ddba:	mov    DWORD PTR [ebp-0x4],0x0
  40ddc1:	call   0x40f580
  40ddc6:	or     ebx,0xffffffff
  40ddc9:	mov    DWORD PTR [ebp-0x4],ebx
  40ddcc:	test   al,al
  40ddce:	jne    0x40de34
  40ddd0:	test   esi,esi
  40ddd2:	je     0x40de18
  40ddd4:	mov    eax,0x406500
  40ddd9:	push   esi
  40ddda:	push   eax
  40dddb:	lea    eax,[ebp-0x60]
  40ddde:	call   0x417420
  40dde3:	lea    eax,[ebp-0x60]
  40dde6:	push   eax
  40dde7:	mov    DWORD PTR [ebp-0x4],0x2
  40ddee:	call   0x403400
  40ddf3:	mov    DWORD PTR [ebp-0x4],ebx
  40ddf6:	mov    eax,DWORD PTR [ebp-0x60]
  40ddf9:	test   eax,eax
  40ddfb:	je     0x40de18
  40ddfd:	test   al,0x1
  40ddff:	jne    0x40de18
  40de01:	and    eax,0xfffffffe
  40de04:	mov    eax,DWORD PTR [eax]
  40de06:	test   eax,eax
  40de08:	je     0x40de18
  40de0a:	lea    ecx,[ebp-0x58]
  40de0d:	push   0x2
  40de0f:	push   ecx
  40de10:	mov    edx,ecx
  40de12:	push   edx
  40de13:	call   eax
  40de15:	add    esp,0xc
  40de18:	mov    ecx,DWORD PTR [ebp-0xc]
  40de1b:	mov    DWORD PTR fs:0x0,ecx
  40de22:	pop    ecx
  40de23:	pop    edi
  40de24:	pop    esi
  40de25:	pop    ebx
  40de26:	mov    ecx,DWORD PTR [ebp-0x14]
  40de29:	xor    ecx,ebp
  40de2b:	call   0x42503a
  40de30:	mov    esp,ebp
  40de32:	pop    ebp
  40de33:	ret    
  40de34:	test   esi,esi
  40de36:	je     0x40de18
  40de38:	mov    ebx,DWORD PTR [edi+0x5c]
  40de3b:	sub    ebx,DWORD PTR [edi+0x58]
  40de3e:	mov    ecx,DWORD PTR [edi]
  40de40:	sub    esp,0x44
  40de43:	mov    eax,esp
  40de45:	mov    DWORD PTR [ebp-0x38],esp
  40de48:	sub    esp,0x1c
  40de4b:	mov    esi,esp
  40de4d:	mov    DWORD PTR [ebp-0x64],esp
  40de50:	push   ecx
  40de51:	sar    ebx,0x3
  40de54:	mov    DWORD PTR [ebp-0x38],eax
  40de57:	call   0x40db40
  40de5c:	sub    esp,0x18
  40de5f:	mov    DWORD PTR [ebp-0x4],0x3
  40de66:	mov    edx,DWORD PTR [edi+0x4]
  40de69:	mov    esi,esp
  40de6b:	mov    DWORD PTR [ebp-0x34],esp
  40de6e:	push   edx
  40de6f:	call   0x40db40
  40de74:	mov    eax,DWORD PTR [ebp-0x3c]
  40de77:	add    esp,0x4
  40de7a:	push   eax
  40de7b:	mov    eax,DWORD PTR [ebp-0x38]
  40de7e:	mov    ecx,ebx
  40de80:	mov    esi,eax
  40de82:	mov    DWORD PTR [ebp-0x4],0xffffffff
  40de89:	call   0x417440
  40de8e:	add    esp,0x3c
  40de91:	lea    esi,[ebp-0x60]
  40de94:	call   0x417550
  40de99:	mov    ecx,esi
  40de9b:	push   ecx
  40de9c:	mov    DWORD PTR [ebp-0x4],0x4
  40dea3:	call   0x403400
  40dea8:	mov    DWORD PTR [ebp-0x4],0xffffffff
  40deaf:	mov    eax,DWORD PTR [ebp-0x60]
  40deb2:	test   eax,eax
  40deb4:	je     0x40ded1
  40deb6:	test   al,0x1
  40deb8:	jne    0x40ded1
  40deba:	and    eax,0xfffffffe
  40debd:	mov    eax,DWORD PTR [eax]
  40debf:	test   eax,eax
  40dec1:	je     0x40ded1
  40dec3:	lea    edx,[ebp-0x58]
  40dec6:	push   0x2
  40dec8:	push   edx
  40dec9:	mov    ecx,edx
  40decb:	push   ecx
  40decc:	call   eax
  40dece:	add    esp,0xc
  40ded1:	lea    ecx,[ebp-0x30]
  40ded4:	call   DWORD PTR ds:0x430254
  40deda:	mov    ebx,0x5
  40dedf:	mov    DWORD PTR [ebp-0x4],ebx
  40dee2:	mov    edx,DWORD PTR [edi+0x5c]
  40dee5:	sub    edx,DWORD PTR [edi+0x58]
  40dee8:	xor    esi,esi
  40deea:	test   edx,0xfffffff8
  40def0:	jle    0x40df51
  40def2:	mov    eax,DWORD PTR [edi+0x5c]
  40def5:	sub    eax,DWORD PTR [edi+0x58]
  40def8:	sar    eax,0x3
  40defb:	cmp    esi,eax
  40defd:	jb     0x40df05
  40deff:	call   DWORD PTR ds:0x430390
  40df05:	mov    ecx,DWORD PTR [edi+0x58]
  40df08:	lea    eax,[ecx+esi*8]
  40df0b:	mov    eax,DWORD PTR [eax]
  40df0d:	add    eax,0x48
  40df10:	push   eax
  40df11:	lea    edx,[ebp-0x84]
  40df17:	push   0x4317f0
  40df1c:	push   edx
  40df1d:	call   DWORD PTR ds:0x43019c
  40df23:	add    esp,0xc
  40df26:	push   eax
  40df27:	lea    ecx,[ebp-0x30]
  40df2a:	mov    BYTE PTR [ebp-0x4],0x6
  40df2e:	call   DWORD PTR ds:0x430144
  40df34:	lea    ecx,[ebp-0x84]
  40df3a:	mov    BYTE PTR [ebp-0x4],bl
  40df3d:	call   DWORD PTR ds:0x430264
  40df43:	mov    eax,DWORD PTR [edi+0x5c]
  40df46:	sub    eax,DWORD PTR [edi+0x58]
  40df49:	inc    esi
  40df4a:	sar    eax,0x3
  40df4d:	cmp    esi,eax
  40df4f:	jl     0x40def2
  40df51:	sub    esp,0x24
  40df54:	mov    DWORD PTR [ebp-0x34],esp
  40df57:	mov    esi,esp
  40df59:	sub    esp,0x1c
  40df5c:	lea    edx,[ebp-0x30]
  40df5f:	mov    ecx,esp
  40df61:	mov    DWORD PTR [ebp-0x34],esp
  40df64:	push   edx
  40df65:	call   DWORD PTR ds:0x430118
  40df6b:	mov    eax,DWORD PTR [ebp-0x3c]
  40df6e:	push   eax
  40df6f:	push   0x407300
  40df74:	call   0x4175d0
  40df79:	add    esp,0x24
  40df7c:	lea    esi,[ebp-0x88]
  40df82:	call   0x417690
  40df87:	mov    ecx,esi
  40df89:	push   ecx
  40df8a:	mov    BYTE PTR [ebp-0x4],0x7
  40df8e:	call   0x403400
  40df93:	mov    BYTE PTR [ebp-0x4],bl
  40df96:	mov    eax,DWORD PTR [ebp-0x88]
  40df9c:	test   eax,eax
  40df9e:	je     0x40dfc5
  40dfa0:	test   al,0x1
  40dfa2:	jne    0x40dfbb
  40dfa4:	and    eax,0xfffffffe
  40dfa7:	mov    eax,DWORD PTR [eax]
  40dfa9:	test   eax,eax
  40dfab:	je     0x40dfbb
  40dfad:	lea    edx,[ebp-0x80]
  40dfb0:	push   0x2
  40dfb2:	push   edx
  40dfb3:	mov    ecx,edx
  40dfb5:	push   ecx
  40dfb6:	call   eax
  40dfb8:	add    esp,0xc
  40dfbb:	mov    DWORD PTR [ebp-0x88],0x0
  40dfc5:	lea    ecx,[ebp-0x30]
  40dfc8:	mov    DWORD PTR [ebp-0x4],0xffffffff
  40dfcf:	call   DWORD PTR ds:0x430264
  40dfd5:	jmp    0x40de18
  40dfda:	mov    eax,0x40de18
  40dfdf:	ret    
  40dfe0:	add    eax,0x4
  40dfe3:	push   eax
  40dfe4:	call   0x40e010
  40dfe9:	ret    
  40dfea:	int3   
  40dfeb:	int3   
  40dfec:	int3   
  40dfed:	int3   
  40dfee:	int3   
  40dfef:	int3   
  40dff0:	push   eax
  40dff1:	call   0x40e010
  40dff6:	ret    
  40dff7:	int3   
  40dff8:	int3   
  40dff9:	int3   
  40dffa:	int3   
  40dffb:	int3   
  40dffc:	int3   
  40dffd:	int3   
  40dffe:	int3   
  40dfff:	int3   
  40e000:	add    ecx,0x4
  40e003:	jmp    DWORD PTR ds:0x430264
  40e009:	int3   
  40e00a:	int3   
  40e00b:	int3   
  40e00c:	int3   
  40e00d:	int3   
  40e00e:	int3   
  40e00f:	int3   
  40e010:	push   0xffffffff
  40e012:	push   0x42b5d8
  40e017:	mov    eax,fs:0x0
  40e01d:	push   eax
  40e01e:	push   esi
  40e01f:	mov    eax,ds:0x43e020
  40e024:	xor    eax,esp
  40e026:	push   eax
  40e027:	lea    eax,[esp+0x8]
  40e02b:	mov    fs:0x0,eax
  40e031:	mov    esi,DWORD PTR [esp+0x18]
  40e035:	lea    ecx,[esi+0x20]
  40e038:	mov    DWORD PTR [esp+0x10],0x0
  40e040:	call   DWORD PTR ds:0x430264
  40e046:	lea    ecx,[esi+0x4]
  40e049:	mov    DWORD PTR [esp+0x10],0xffffffff
  40e051:	call   DWORD PTR ds:0x430264
  40e057:	mov    ecx,DWORD PTR [esp+0x8]
  40e05b:	mov    DWORD PTR fs:0x0,ecx
  40e062:	pop    ecx
  40e063:	pop    esi
  40e064:	add    esp,0xc
  40e067:	ret    0x4
  40e06a:	int3   
  40e06b:	int3   
  40e06c:	int3   
  40e06d:	int3   
  40e06e:	int3   
  40e06f:	int3   
  40e070:	push   ebp
  40e071:	mov    ebp,esp
  40e073:	and    esp,0xfffffff8
  40e076:	push   0xffffffff
  40e078:	push   0x42c2b8
  40e07d:	mov    eax,fs:0x0
  40e083:	push   eax
  40e084:	sub    esp,0x28
  40e087:	push   esi
  40e088:	mov    eax,ds:0x43e020
  40e08d:	xor    eax,esp
  40e08f:	push   eax
  40e090:	lea    eax,[esp+0x30]
  40e094:	mov    fs:0x0,eax
  40e09a:	mov    ecx,0x43fec0
  40e09f:	mov    eax,0x40dd80
  40e0a4:	push   ecx
  40e0a5:	push   eax
  40e0a6:	lea    esi,[esp+0x14]
  40e0aa:	call   0x418e90
  40e0af:	mov    eax,esi
  40e0b1:	push   eax
  40e0b2:	mov    DWORD PTR [esp+0x3c],0x0
  40e0ba:	call   0x4034b0
  40e0bf:	mov    DWORD PTR [esp+0x38],0xffffffff
  40e0c7:	mov    eax,DWORD PTR [esp+0xc]
  40e0cb:	test   eax,eax
  40e0cd:	je     0x40e0eb
  40e0cf:	test   al,0x1
  40e0d1:	jne    0x40e0eb
  40e0d3:	and    eax,0xfffffffe
  40e0d6:	mov    eax,DWORD PTR [eax]
  40e0d8:	test   eax,eax
  40e0da:	je     0x40e0eb
  40e0dc:	lea    ecx,[esp+0x14]
  40e0e0:	push   0x2
  40e0e2:	push   ecx
  40e0e3:	mov    edx,ecx
  40e0e5:	push   edx
  40e0e6:	call   eax
  40e0e8:	add    esp,0xc
  40e0eb:	mov    ecx,DWORD PTR [esp+0x30]
  40e0ef:	mov    DWORD PTR fs:0x0,ecx
  40e0f6:	pop    ecx
  40e0f7:	pop    esi
  40e0f8:	mov    esp,ebp
  40e0fa:	pop    ebp
  40e0fb:	ret    
  40e0fc:	int3   
  40e0fd:	int3   
  40e0fe:	int3   
  40e0ff:	int3   
  40e100:	push   ebp
  40e101:	mov    ebp,esp
  40e103:	and    esp,0xfffffff8
  40e106:	push   0xffffffff
  40e108:	push   0x42c2b8
  40e10d:	mov    eax,fs:0x0
  40e113:	push   eax
  40e114:	sub    esp,0x28
  40e117:	push   esi
  40e118:	mov    eax,ds:0x43e020
  40e11d:	xor    eax,esp
  40e11f:	push   eax
  40e120:	lea    eax,[esp+0x30]
  40e124:	mov    fs:0x0,eax
  40e12a:	mov    ecx,0x43fec0
  40e12f:	mov    eax,0x40e740
  40e134:	push   ecx
  40e135:	push   eax
  40e136:	lea    esi,[esp+0x14]
  40e13a:	call   0x418e90
  40e13f:	mov    eax,esi
  40e141:	push   eax
  40e142:	mov    DWORD PTR [esp+0x3c],0x0
  40e14a:	call   0x4034b0
  40e14f:	mov    DWORD PTR [esp+0x38],0xffffffff
  40e157:	mov    eax,DWORD PTR [esp+0xc]
  40e15b:	test   eax,eax
  40e15d:	je     0x40e17b
  40e15f:	test   al,0x1
  40e161:	jne    0x40e17b
  40e163:	and    eax,0xfffffffe
  40e166:	mov    eax,DWORD PTR [eax]
  40e168:	test   eax,eax
  40e16a:	je     0x40e17b
  40e16c:	lea    ecx,[esp+0x14]
  40e170:	push   0x2
  40e172:	push   ecx
  40e173:	mov    edx,ecx
  40e175:	push   edx
  40e176:	call   eax
  40e178:	add    esp,0xc
  40e17b:	mov    ecx,DWORD PTR [esp+0x30]
  40e17f:	mov    DWORD PTR fs:0x0,ecx
  40e186:	pop    ecx
  40e187:	pop    esi
  40e188:	mov    esp,ebp
  40e18a:	pop    ebp
  40e18b:	ret    
  40e18c:	int3   
  40e18d:	int3   
  40e18e:	int3   
  40e18f:	int3   
  40e190:	push   0xffffffff
  40e192:	push   0x42b5a3
  40e197:	mov    eax,fs:0x0
  40e19d:	push   eax
  40e19e:	sub    esp,0x28
  40e1a1:	mov    eax,ds:0x43e020
  40e1a6:	xor    eax,esp
  40e1a8:	mov    DWORD PTR [esp+0x24],eax
  40e1ac:	mov    eax,ds:0x43e020
  40e1b1:	xor    eax,esp
  40e1b3:	push   eax
  40e1b4:	lea    eax,[esp+0x2c]
  40e1b8:	mov    fs:0x0,eax
  40e1be:	mov    DWORD PTR [esp+0x8],esi
  40e1c2:	mov    DWORD PTR [esp+0x4],0x0
  40e1ca:	call   0x41fc00
  40e1cf:	push   eax
  40e1d0:	lea    ecx,[esp+0x10]
  40e1d4:	call   DWORD PTR ds:0x430118
  40e1da:	push   0x4317f4
  40e1df:	lea    eax,[esp+0x10]
  40e1e3:	push   eax
  40e1e4:	push   esi
  40e1e5:	mov    DWORD PTR [esp+0x40],0x1
  40e1ed:	call   DWORD PTR ds:0x4301a4
  40e1f3:	add    esp,0xc
  40e1f6:	lea    ecx,[esp+0xc]
  40e1fa:	mov    DWORD PTR [esp+0x4],0x1
  40e202:	mov    BYTE PTR [esp+0x34],0x0
  40e207:	call   DWORD PTR ds:0x430264
  40e20d:	mov    eax,esi
  40e20f:	mov    ecx,DWORD PTR [esp+0x2c]
  40e213:	mov    DWORD PTR fs:0x0,ecx
  40e21a:	pop    ecx
  40e21b:	mov    ecx,DWORD PTR [esp+0x24]
  40e21f:	xor    ecx,esp
  40e221:	call   0x42503a
  40e226:	add    esp,0x34
  40e229:	ret    
  40e22a:	int3   
  40e22b:	int3   
  40e22c:	int3   
  40e22d:	int3   
  40e22e:	int3   
  40e22f:	int3   
  40e230:	push   0xffffffff
  40e232:	push   0x42da65
  40e237:	mov    eax,fs:0x0
  40e23d:	push   eax
  40e23e:	sub    esp,0x60
  40e241:	mov    eax,ds:0x43e020
  40e246:	xor    eax,esp
  40e248:	mov    DWORD PTR [esp+0x5c],eax
  40e24c:	push   esi
  40e24d:	mov    eax,ds:0x43e020
  40e252:	xor    eax,esp
  40e254:	push   eax
  40e255:	lea    eax,[esp+0x68]
  40e259:	mov    fs:0x0,eax
  40e25f:	mov    esi,ecx
  40e261:	mov    DWORD PTR [esp+0xc],edi
  40e265:	mov    DWORD PTR [esp+0x8],0x0
  40e26d:	call   0x41fc00
  40e272:	push   eax
  40e273:	lea    ecx,[esp+0x4c]
  40e277:	call   DWORD PTR ds:0x430118
  40e27d:	lea    edx,[esi+0x8]
  40e280:	lea    esi,[esp+0x10]
  40e284:	mov    DWORD PTR [esp+0x70],0x1
  40e28c:	call   0x4075f0
  40e291:	mov    esi,eax
  40e293:	push   0x431808
  40e298:	lea    eax,[esp+0x4c]
  40e29c:	push   eax
  40e29d:	lea    ecx,[esp+0x34]
  40e2a1:	push   ecx
  40e2a2:	mov    BYTE PTR [esp+0x7c],0x2
  40e2a7:	call   DWORD PTR ds:0x4301a4
  40e2ad:	add    esp,0xc
  40e2b0:	push   esi
  40e2b1:	push   eax
  40e2b2:	push   edi
  40e2b3:	mov    BYTE PTR [esp+0x7c],0x3
  40e2b8:	call   DWORD PTR ds:0x4301a0
  40e2be:	add    esp,0xc
  40e2c1:	lea    ecx,[esp+0x2c]
  40e2c5:	mov    DWORD PTR [esp+0x8],0x1
  40e2cd:	mov    BYTE PTR [esp+0x70],0x2
  40e2d2:	call   DWORD PTR ds:0x430264
  40e2d8:	lea    ecx,[esp+0x10]
  40e2dc:	mov    BYTE PTR [esp+0x70],0x1
  40e2e1:	call   DWORD PTR ds:0x430264
  40e2e7:	lea    ecx,[esp+0x48]
  40e2eb:	mov    BYTE PTR [esp+0x70],0x0
  40e2f0:	call   DWORD PTR ds:0x430264
  40e2f6:	mov    eax,edi
  40e2f8:	mov    ecx,DWORD PTR [esp+0x68]
  40e2fc:	mov    DWORD PTR fs:0x0,ecx
  40e303:	pop    ecx
  40e304:	pop    esi
  40e305:	mov    ecx,DWORD PTR [esp+0x5c]
  40e309:	xor    ecx,esp
  40e30b:	call   0x42503a
  40e310:	add    esp,0x6c
  40e313:	ret    
  40e314:	int3   
  40e315:	int3   
  40e316:	int3   
  40e317:	int3   
  40e318:	int3   
  40e319:	int3   
  40e31a:	int3   
  40e31b:	int3   
  40e31c:	int3   
  40e31d:	int3   
  40e31e:	int3   
  40e31f:	int3   
  40e320:	push   0xffffffff
  40e322:	push   0x42b5a3
  40e327:	mov    eax,fs:0x0
  40e32d:	push   eax
  40e32e:	sub    esp,0x28
  40e331:	mov    eax,ds:0x43e020
  40e336:	xor    eax,esp
  40e338:	mov    DWORD PTR [esp+0x24],eax
  40e33c:	mov    eax,ds:0x43e020
  40e341:	xor    eax,esp
  40e343:	push   eax
  40e344:	lea    eax,[esp+0x2c]
  40e348:	mov    fs:0x0,eax
  40e34e:	mov    DWORD PTR [esp+0x8],esi
  40e352:	mov    DWORD PTR [esp+0x4],0x0
  40e35a:	call   0x41fc80
  40e35f:	push   eax
  40e360:	lea    ecx,[esp+0x10]
  40e364:	call   DWORD PTR ds:0x430118
  40e36a:	push   0x43181c
  40e36f:	lea    eax,[esp+0x10]
  40e373:	push   eax
  40e374:	push   esi
  40e375:	mov    DWORD PTR [esp+0x40],0x1
  40e37d:	call   DWORD PTR ds:0x4301a4
  40e383:	add    esp,0xc
  40e386:	lea    ecx,[esp+0xc]
  40e38a:	mov    DWORD PTR [esp+0x4],0x1
  40e392:	mov    BYTE PTR [esp+0x34],0x0
  40e397:	call   DWORD PTR ds:0x430264
  40e39d:	mov    eax,esi
  40e39f:	mov    ecx,DWORD PTR [esp+0x2c]
  40e3a3:	mov    DWORD PTR fs:0x0,ecx
  40e3aa:	pop    ecx
  40e3ab:	mov    ecx,DWORD PTR [esp+0x24]
  40e3af:	xor    ecx,esp
  40e3b1:	call   0x42503a
  40e3b6:	add    esp,0x34
  40e3b9:	ret    
  40e3ba:	int3   
  40e3bb:	int3   
  40e3bc:	int3   
  40e3bd:	int3   
  40e3be:	int3   
  40e3bf:	int3   
  40e3c0:	push   0xffffffff
  40e3c2:	push   0x42b5a3
  40e3c7:	mov    eax,fs:0x0
  40e3cd:	push   eax
  40e3ce:	sub    esp,0x28
  40e3d1:	mov    eax,ds:0x43e020
  40e3d6:	xor    eax,esp
  40e3d8:	mov    DWORD PTR [esp+0x24],eax
  40e3dc:	mov    eax,ds:0x43e020
  40e3e1:	xor    eax,esp
  40e3e3:	push   eax
  40e3e4:	lea    eax,[esp+0x2c]
  40e3e8:	mov    fs:0x0,eax
  40e3ee:	mov    DWORD PTR [esp+0x8],esi
  40e3f2:	mov    DWORD PTR [esp+0x4],0x0
  40e3fa:	call   0x41fc00
  40e3ff:	push   eax
  40e400:	lea    ecx,[esp+0x10]
  40e404:	call   DWORD PTR ds:0x430118
  40e40a:	push   0x431838
  40e40f:	lea    eax,[esp+0x10]
  40e413:	push   eax
  40e414:	push   esi
  40e415:	mov    DWORD PTR [esp+0x40],0x1
  40e41d:	call   DWORD PTR ds:0x4301a4
  40e423:	add    esp,0xc
  40e426:	lea    ecx,[esp+0xc]
  40e42a:	mov    DWORD PTR [esp+0x4],0x1
  40e432:	mov    BYTE PTR [esp+0x34],0x0
  40e437:	call   DWORD PTR ds:0x430264
  40e43d:	mov    eax,esi
  40e43f:	mov    ecx,DWORD PTR [esp+0x2c]
  40e443:	mov    DWORD PTR fs:0x0,ecx
  40e44a:	pop    ecx
  40e44b:	mov    ecx,DWORD PTR [esp+0x24]
  40e44f:	xor    ecx,esp
  40e451:	call   0x42503a
  40e456:	add    esp,0x34
  40e459:	ret    
  40e45a:	int3   
  40e45b:	int3   
  40e45c:	int3   
  40e45d:	int3   
  40e45e:	int3   
  40e45f:	int3   
  40e460:	push   0xffffffff
  40e462:	push   0x42b54c
  40e467:	mov    eax,fs:0x0
  40e46d:	push   eax
  40e46e:	sub    esp,0x254
  40e474:	mov    eax,ds:0x43e020
  40e479:	xor    eax,esp
  40e47b:	mov    DWORD PTR [esp+0x250],eax
  40e482:	push   ebx
  40e483:	push   esi
  40e484:	push   edi
  40e485:	mov    eax,ds:0x43e020
  40e48a:	xor    eax,esp
  40e48c:	push   eax
  40e48d:	lea    eax,[esp+0x264]
  40e494:	mov    fs:0x0,eax
  40e49a:	call   0x41fc00
  40e49f:	push   eax
  40e4a0:	lea    ecx,[esp+0x34]
  40e4a4:	call   DWORD PTR ds:0x430118
  40e4aa:	mov    DWORD PTR [esp+0x26c],0x0
  40e4b5:	mov    eax,DWORD PTR [esp+0x34]
  40e4b9:	mov    ebx,0x8
  40e4be:	cmp    DWORD PTR [esp+0x48],ebx
  40e4c2:	jae    0x40e4c8
  40e4c4:	lea    eax,[esp+0x34]
  40e4c8:	push   0x0
  40e4ca:	push   eax
  40e4cb:	call   DWORD PTR ds:0x4302e0
  40e4d1:	add    esp,0x8
  40e4d4:	test   eax,eax
  40e4d6:	jne    0x40e58f
  40e4dc:	push   0x210
  40e4e1:	push   eax
  40e4e2:	lea    ecx,[esp+0x56]
  40e4e6:	push   ecx
  40e4e7:	mov    WORD PTR [esp+0x58],ax
  40e4ec:	call   0x429f9c
  40e4f1:	mov    eax,DWORD PTR [esp+0x40]
  40e4f5:	add    esp,0xc
  40e4f8:	cmp    DWORD PTR [esp+0x48],ebx
  40e4fc:	jae    0x40e502
  40e4fe:	lea    eax,[esp+0x34]
  40e502:	mov    edx,DWORD PTR [esp+0x44]
  40e506:	lea    ecx,[edx+edx*1]
  40e509:	push   ecx
  40e50a:	push   eax
  40e50b:	lea    edx,[esp+0x54]
  40e50f:	push   edx
  40e510:	call   0x42a018
  40e515:	mov    edi,DWORD PTR ds:0x4303d0
  40e51b:	xor    eax,eax
  40e51d:	mov    DWORD PTR [esp+0x20],eax
  40e521:	mov    DWORD PTR [esp+0x24],eax
  40e525:	mov    DWORD PTR [esp+0x2c],eax
  40e529:	add    esp,0xc
  40e52c:	mov    DWORD PTR [esp+0x1c],eax
  40e530:	mov    DWORD PTR [esp+0x24],eax
  40e534:	mov    DWORD PTR [esp+0x28],eax
  40e538:	mov    WORD PTR [esp+0x2c],ax
  40e53d:	lea    edx,[esp+0x10]
  40e541:	lea    eax,[esp+0x4c]
  40e545:	mov    ecx,0x614
  40e54a:	push   edx
  40e54b:	mov    DWORD PTR [esp+0x14],0x0
  40e553:	mov    DWORD PTR [esp+0x18],0x3
  40e55b:	mov    DWORD PTR [esp+0x1c],eax
  40e55f:	mov    WORD PTR [esp+0x24],cx
  40e564:	call   edi
  40e566:	xor    esi,esi
  40e568:	test   eax,eax
  40e56a:	je     0x40e58f
  40e56c:	mov    ebx,DWORD PTR ds:0x430050
  40e572:	cmp    esi,0xa
  40e575:	jge    0x40e5e5
  40e577:	push   0x7d0
  40e57c:	inc    esi
  40e57d:	call   ebx
  40e57f:	lea    eax,[esp+0x10]
  40e583:	push   eax
  40e584:	call   edi
  40e586:	test   eax,eax
  40e588:	jne    0x40e572
  40e58a:	mov    ebx,0x8
  40e58f:	mov    eax,DWORD PTR [esp+0x34]
  40e593:	cmp    DWORD PTR [esp+0x48],ebx
  40e597:	jae    0x40e59d
  40e599:	lea    eax,[esp+0x34]
  40e59d:	push   eax
  40e59e:	call   DWORD PTR ds:0x430014
  40e5a4:	add    esp,0x4
  40e5a7:	lea    ecx,[esp+0x30]
  40e5ab:	mov    DWORD PTR [esp+0x26c],0xffffffff
  40e5b6:	call   DWORD PTR ds:0x430264
  40e5bc:	mov    al,0x1
  40e5be:	mov    ecx,DWORD PTR [esp+0x264]
  40e5c5:	mov    DWORD PTR fs:0x0,ecx
  40e5cc:	pop    ecx
  40e5cd:	pop    edi
  40e5ce:	pop    esi
  40e5cf:	pop    ebx
  40e5d0:	mov    ecx,DWORD PTR [esp+0x250]
  40e5d7:	xor    ecx,esp
  40e5d9:	call   0x42503a
  40e5de:	add    esp,0x260
  40e5e4:	ret    
  40e5e5:	test   eax,eax
  40e5e7:	je     0x40e58a
  40e5e9:	lea    ecx,[esp+0x30]
  40e5ed:	mov    DWORD PTR [esp+0x26c],0xffffffff
  40e5f8:	call   DWORD PTR ds:0x430264
  40e5fe:	xor    al,al
  40e600:	jmp    0x40e5be
  40e602:	int3   
  40e603:	int3   
  40e604:	int3   
  40e605:	int3   
  40e606:	int3   
  40e607:	int3   
  40e608:	int3   
  40e609:	int3   
  40e60a:	int3   
  40e60b:	int3   
  40e60c:	int3   
  40e60d:	int3   
  40e60e:	int3   
  40e60f:	int3   
  40e610:	push   0xffffffff
  40e612:	push   0x42ad7b
  40e617:	mov    eax,fs:0x0
  40e61d:	push   eax
  40e61e:	sub    esp,0x38
  40e621:	push   esi
  40e622:	mov    eax,ds:0x43e020
  40e627:	xor    eax,esp
  40e629:	push   eax
  40e62a:	lea    eax,[esp+0x40]
  40e62e:	mov    fs:0x0,eax
  40e634:	push   0x0
  40e636:	push   0x43184c
  40e63b:	mov    ecx,ebx
  40e63d:	call   DWORD PTR ds:0x430228
  40e643:	mov    ecx,DWORD PTR ds:0x4301e0
  40e649:	cmp    eax,DWORD PTR [ecx]
  40e64b:	je     0x40e72b
  40e651:	lea    esi,[eax+0x3]
  40e654:	mov    eax,DWORD PTR [ecx]
  40e656:	push   eax
  40e657:	push   esi
  40e658:	lea    ecx,[esp+0x10]
  40e65c:	push   ecx
  40e65d:	mov    ecx,ebx
  40e65f:	call   DWORD PTR ds:0x430218
  40e665:	push   eax
  40e666:	mov    ecx,edi
  40e668:	mov    DWORD PTR [esp+0x4c],0x0
  40e670:	call   DWORD PTR ds:0x43017c
  40e676:	lea    ecx,[esp+0x8]
  40e67a:	mov    DWORD PTR [esp+0x48],0xffffffff
  40e682:	call   DWORD PTR ds:0x430264
  40e688:	push   0x0
  40e68a:	push   0x4317ec
  40e68f:	mov    ecx,edi
  40e691:	call   DWORD PTR ds:0x430228
  40e697:	mov    edx,DWORD PTR ds:0x4301e0
  40e69d:	cmp    eax,DWORD PTR [edx]
  40e69f:	je     0x40e72b
  40e6a5:	push   eax
  40e6a6:	add    esi,eax
  40e6a8:	push   0x0
  40e6aa:	lea    eax,[esp+0x10]
  40e6ae:	push   eax
  40e6af:	mov    ecx,edi
  40e6b1:	call   DWORD PTR ds:0x430218
  40e6b7:	push   eax
  40e6b8:	mov    ecx,edi
  40e6ba:	mov    DWORD PTR [esp+0x4c],0x1
  40e6c2:	call   DWORD PTR ds:0x43017c
  40e6c8:	lea    ecx,[esp+0x8]
  40e6cc:	mov    DWORD PTR [esp+0x48],0xffffffff
  40e6d4:	call   DWORD PTR ds:0x430264
  40e6da:	mov    ecx,DWORD PTR ds:0x4301e0
  40e6e0:	mov    edx,DWORD PTR [ecx]
  40e6e2:	push   edx
  40e6e3:	push   esi
  40e6e4:	lea    eax,[esp+0x2c]
  40e6e8:	push   eax
  40e6e9:	mov    ecx,ebx
  40e6eb:	call   DWORD PTR ds:0x430218
  40e6f1:	mov    ecx,DWORD PTR [esp+0x50]
  40e6f5:	push   eax
  40e6f6:	mov    DWORD PTR [esp+0x4c],0x2
  40e6fe:	call   DWORD PTR ds:0x43017c
  40e704:	lea    ecx,[esp+0x24]
  40e708:	mov    DWORD PTR [esp+0x48],0xffffffff
  40e710:	call   DWORD PTR ds:0x430264
  40e716:	mov    al,0x1
  40e718:	mov    ecx,DWORD PTR [esp+0x40]
  40e71c:	mov    DWORD PTR fs:0x0,ecx
  40e723:	pop    ecx
  40e724:	pop    esi
  40e725:	add    esp,0x44
  40e728:	ret    0x4
  40e72b:	xor    al,al
  40e72d:	mov    ecx,DWORD PTR [esp+0x40]
  40e731:	mov    DWORD PTR fs:0x0,ecx
  40e738:	pop    ecx
  40e739:	pop    esi
  40e73a:	add    esp,0x44
  40e73d:	ret    0x4
  40e740:	push   ebp
  40e741:	mov    ebp,esp
  40e743:	push   0xffffffff
  40e745:	push   0x42ee6f
  40e74a:	mov    eax,fs:0x0
  40e750:	push   eax
  40e751:	sub    esp,0x184
  40e757:	mov    eax,ds:0x43e020
  40e75c:	xor    eax,ebp
  40e75e:	mov    DWORD PTR [ebp-0x14],eax
  40e761:	push   ebx
  40e762:	push   esi
  40e763:	push   edi
  40e764:	push   eax
  40e765:	lea    eax,[ebp-0xc]
  40e768:	mov    fs:0x0,eax
  40e76e:	mov    DWORD PTR [ebp-0x10],esp
  40e771:	lea    esi,[ebp-0x13c]
  40e777:	mov    DWORD PTR [ebp-0x90],ecx
  40e77d:	call   0x40e320
  40e782:	push   eax
  40e783:	lea    eax,[ebp-0x70]
  40e786:	xor    esi,esi
  40e788:	push   eax
  40e789:	mov    DWORD PTR [ebp-0x4],esi
  40e78c:	call   0x40dbc0
  40e791:	lea    ecx,[ebp-0x13c]
  40e797:	mov    BYTE PTR [ebp-0x4],0x2
  40e79b:	call   DWORD PTR ds:0x430264
  40e7a1:	mov    eax,DWORD PTR [ebp-0x70]
  40e7a4:	cmp    eax,0xffffffff
  40e7a7:	je     0x40e7b3
  40e7a9:	push   eax
  40e7aa:	call   DWORD PTR ds:0x4300f4
  40e7b0:	mov    DWORD PTR [ebp-0x70],esi
  40e7b3:	cmp    DWORD PTR [ebp-0x54],0x8
  40e7b7:	mov    eax,DWORD PTR [ebp-0x68]
  40e7ba:	jae    0x40e7bf
  40e7bc:	lea    eax,[ebp-0x68]
  40e7bf:	push   esi
  40e7c0:	push   esi
  40e7c1:	push   0x2
  40e7c3:	push   esi
  40e7c4:	push   esi
  40e7c5:	push   0x10000000
  40e7ca:	push   eax
  40e7cb:	call   DWORD PTR ds:0x4300e4
  40e7d1:	mov    DWORD PTR [ebp-0x70],eax
  40e7d4:	cmp    eax,0xffffffff
  40e7d7:	jne    0x40e87c
  40e7dd:	call   0x4045f0
  40e7e2:	mov    eax,DWORD PTR [eax+0x2c]
  40e7e5:	cmp    eax,0x4
  40e7e8:	jg     0x40e822
  40e7ea:	push   0x431854
  40e7ef:	mov    esi,0x431878
  40e7f4:	mov    eax,0x4
  40e7f9:	lea    edi,[ebp-0x9c]
  40e7ff:	call   0x404160
  40e804:	push   0x431898
  40e809:	mov    esi,eax
  40e80b:	mov    BYTE PTR [ebp-0x4],0x3
  40e80f:	call   0x4040d0
  40e814:	add    esp,0x4
  40e817:	mov    ecx,edi
  40e819:	mov    BYTE PTR [ebp-0x4],0x2
  40e81d:	call   0x404680
  40e822:	push   0x4318dc
  40e827:	lea    ecx,[ebp-0x30]
  40e82a:	mov    BYTE PTR [ebp-0x4],0x4
  40e82e:	call   DWORD PTR ds:0x43011c
  40e834:	mov    BYTE PTR [ebp-0x4],0x5
  40e838:	call   0x41f6c0
  40e83d:	cmp    DWORD PTR [ebp-0x18],0x10
  40e841:	mov    ecx,DWORD PTR ds:0x43ff8c
  40e847:	mov    eax,DWORD PTR [ebp-0x2c]
  40e84a:	jae    0x40e84f
  40e84c:	lea    eax,[ebp-0x2c]
  40e84f:	mov    edx,DWORD PTR [ecx]
  40e851:	push   eax
  40e852:	mov    eax,DWORD PTR [edx+0x8]
  40e855:	call   eax
  40e857:	sub    esp,0x1c
  40e85a:	mov    ecx,esp
  40e85c:	mov    DWORD PTR [ebp-0x94],esp
  40e862:	push   eax
  40e863:	call   DWORD PTR ds:0x430268
  40e869:	mov    ebx,DWORD PTR [ebp-0x90]
  40e86f:	push   0xb
  40e871:	call   0x40fde0
  40e876:	mov    eax,0x40ef0d
  40e87b:	ret    
  40e87c:	mov    BYTE PTR [ebp-0x4],0x7
  40e880:	call   0x40fd60
  40e885:	test   al,al
  40e887:	jne    0x40e8d9
  40e889:	push   0x4318f0
  40e88e:	lea    ecx,[ebp-0x30]
  40e891:	call   DWORD PTR ds:0x43011c
  40e897:	mov    BYTE PTR [ebp-0x4],0x8
  40e89b:	call   0x41f6c0
  40e8a0:	cmp    DWORD PTR [ebp-0x18],0x10
  40e8a4:	mov    ecx,DWORD PTR ds:0x43ff8c
  40e8aa:	mov    eax,DWORD PTR [ebp-0x2c]
  40e8ad:	jae    0x40e8b2
  40e8af:	lea    eax,[ebp-0x2c]
  40e8b2:	mov    edx,DWORD PTR [ecx]
  40e8b4:	push   eax
  40e8b5:	mov    eax,DWORD PTR [edx+0x8]
  40e8b8:	call   eax
  40e8ba:	sub    esp,0x1c
  40e8bd:	mov    ecx,esp
  40e8bf:	mov    DWORD PTR [ebp-0x94],esp
  40e8c5:	push   eax
  40e8c6:	call   DWORD PTR ds:0x430268
  40e8cc:	mov    ebx,DWORD PTR [ebp-0x90]
  40e8d2:	push   0x11
  40e8d4:	call   0x40fde0
  40e8d9:	mov    esi,DWORD PTR [ebp-0x90]
  40e8df:	mov    ecx,DWORD PTR [esi+0x5c]
  40e8e2:	sub    ecx,DWORD PTR [esi+0x58]
  40e8e5:	lea    ebx,[esi+0x4c]
  40e8e8:	mov    DWORD PTR [ebp-0xcc],ebx
  40e8ee:	test   ecx,0xfffffff8
  40e8f4:	jne    0x40e942
  40e8f6:	push   0x4318dc
  40e8fb:	lea    ecx,[ebp-0x30]
  40e8fe:	call   DWORD PTR ds:0x43011c
  40e904:	mov    BYTE PTR [ebp-0x4],0x9
  40e908:	call   0x41f6c0
  40e90d:	cmp    DWORD PTR [ebp-0x18],0x10
  40e911:	mov    ecx,DWORD PTR ds:0x43ff8c
  40e917:	mov    eax,DWORD PTR [ebp-0x2c]
  40e91a:	jae    0x40e91f
  40e91c:	lea    eax,[ebp-0x2c]
  40e91f:	mov    edx,DWORD PTR [ecx]
  40e921:	push   eax
  40e922:	mov    eax,DWORD PTR [edx+0x8]
  40e925:	call   eax
  40e927:	sub    esp,0x1c
  40e92a:	mov    ecx,esp
  40e92c:	mov    DWORD PTR [ebp-0x94],esp
  40e932:	push   eax
  40e933:	call   DWORD PTR ds:0x430268
  40e939:	push   0x10
  40e93b:	mov    ebx,esi
  40e93d:	call   0x40fde0
  40e942:	call   0x40e460
  40e947:	movzx  eax,al
  40e94a:	test   eax,eax
  40e94c:	jne    0x40ea04
  40e952:	call   0x4045f0
  40e957:	mov    eax,DWORD PTR [eax+0x2c]
  40e95a:	cmp    eax,0x4
  40e95d:	jg     0x40e9af
  40e95f:	push   0x431854
  40e964:	mov    esi,0x431878
  40e969:	mov    eax,0x4
  40e96e:	lea    edi,[ebp-0x9c]
  40e974:	call   0x404160
  40e979:	mov    esi,eax
  40e97b:	mov    BYTE PTR [ebp-0x4],0xa
  40e97f:	call   0x41fc00
  40e984:	cmp    DWORD PTR [eax+0x18],0x8
  40e988:	jb     0x40e98f
  40e98a:	mov    eax,DWORD PTR [eax+0x4]
  40e98d:	jmp    0x40e992
  40e98f:	add    eax,0x4
  40e992:	push   eax
  40e993:	push   0x431910
  40e998:	call   0x4040d0
  40e99d:	add    esp,0x8
  40e9a0:	lea    ecx,[ebp-0x9c]
  40e9a6:	mov    BYTE PTR [ebp-0x4],0x7
  40e9aa:	call   0x404680
  40e9af:	push   0x431930
  40e9b4:	lea    ecx,[ebp-0x118]
  40e9ba:	call   DWORD PTR ds:0x43011c
  40e9c0:	mov    BYTE PTR [ebp-0x4],0xb
  40e9c4:	call   0x41fc00
  40e9c9:	cmp    DWORD PTR [eax+0x18],0x8
  40e9cd:	jb     0x40e9d4
  40e9cf:	mov    edi,DWORD PTR [eax+0x4]
  40e9d2:	jmp    0x40e9d7
  40e9d4:	lea    edi,[eax+0x4]
  40e9d7:	lea    esi,[ebp-0x118]
  40e9dd:	call   0x41f690
  40e9e2:	sub    esp,0x1c
  40e9e5:	mov    esi,esp
  40e9e7:	mov    DWORD PTR [ebp-0x94],esp
  40e9ed:	push   edi
  40e9ee:	push   eax
  40e9ef:	call   0x40a710
  40e9f4:	mov    ebx,DWORD PTR [ebp-0x90]
  40e9fa:	add    esp,0x8
  40e9fd:	push   0x9
  40e9ff:	call   0x40fde0
  40ea04:	push   0x49
  40ea06:	call   DWORD PTR ds:0x430450
  40ea0c:	mov    esi,DWORD PTR [ebx+0x10]
  40ea0f:	add    esp,0x4
  40ea12:	neg    al
  40ea14:	sbb    al,al
  40ea16:	sub    esi,DWORD PTR [ebx+0xc]
  40ea19:	and    al,0xf9
  40ea1b:	add    al,0x50
  40ea1d:	mov    BYTE PTR [ebp-0xa8],al
  40ea23:	sar    esi,0x3
  40ea26:	call   DWORD PTR ds:0x430448
  40ea2c:	mov    ecx,DWORD PTR [ebp-0xa8]
  40ea32:	push   esi
  40ea33:	push   ecx
  40ea34:	push   eax
  40ea35:	call   0x421040
  40ea3a:	mov    ecx,DWORD PTR [ebp-0x90]
  40ea40:	mov    eax,DWORD PTR [ecx]
  40ea42:	mov    DWORD PTR [ecx+0x8],eax
  40ea45:	mov    DWORD PTR [ecx+0xc],eax
  40ea48:	mov    edi,0x1
  40ea4d:	lea    ecx,[ecx+0x0]
  40ea50:	mov    edx,DWORD PTR [ebx+0x10]
  40ea53:	sub    edx,DWORD PTR [ebx+0xc]
  40ea56:	test   edx,0xfffffff8
  40ea5c:	je     0x40f012
  40ea62:	mov    edx,DWORD PTR ds:0x4400a4
  40ea68:	mov    DWORD PTR ds:0x4400a0,edi
  40ea6e:	test   edx,edx
  40ea70:	je     0x40ead3
  40ea72:	sub    esp,0xc
  40ea75:	mov    eax,esp
  40ea77:	mov    ecx,0x4067c0
  40ea7c:	mov    DWORD PTR [eax],ecx
  40ea7e:	mov    esi,edi
  40ea80:	mov    DWORD PTR [eax+0x4],edx
  40ea83:	mov    DWORD PTR [eax+0x8],esi
  40ea86:	lea    esi,[ebp-0xc8]
  40ea8c:	mov    DWORD PTR [ebp-0xc8],0x0
  40ea96:	call   0x41a7a0
  40ea9b:	mov    eax,esi
  40ea9d:	push   eax
  40ea9e:	mov    BYTE PTR [ebp-0x4],0xc
  40eaa2:	call   0x403400
  40eaa7:	mov    BYTE PTR [ebp-0x4],0x7
  40eaab:	mov    eax,DWORD PTR [ebp-0xc8]
  40eab1:	test   eax,eax
  40eab3:	je     0x40ead3
  40eab5:	test   al,0x1
  40eab7:	jne    0x40ead3
  40eab9:	and    eax,0xfffffffe
  40eabc:	mov    eax,DWORD PTR [eax]
  40eabe:	test   eax,eax
  40eac0:	je     0x40ead3
  40eac2:	lea    ecx,[ebp-0xc0]
  40eac8:	push   0x2
  40eaca:	push   ecx
  40eacb:	mov    edx,ecx
  40eacd:	push   edx
  40eace:	call   eax
  40ead0:	add    esp,0xc
  40ead3:	mov    eax,DWORD PTR [ebp-0x90]
  40ead9:	mov    ecx,DWORD PTR [eax+0xc]
  40eadc:	mov    DWORD PTR [eax+0x8],ecx
  40eadf:	mov    edx,DWORD PTR [ebx+0x10]
  40eae2:	sub    edx,DWORD PTR [ebx+0xc]
  40eae5:	inc    edi
  40eae6:	sar    edx,0x3
  40eae9:	mov    DWORD PTR [ebp-0x94],edi
  40eaef:	test   edx,edx
  40eaf1:	ja     0x40eaf9
  40eaf3:	call   DWORD PTR ds:0x430390
  40eaf9:	mov    eax,DWORD PTR [ebx+0xc]
  40eafc:	mov    ecx,DWORD PTR [eax]
  40eafe:	mov    eax,DWORD PTR [eax+0x4]
  40eb01:	mov    DWORD PTR [ebp-0x9c],ecx
  40eb07:	mov    DWORD PTR [ebp-0x98],eax
  40eb0d:	test   eax,eax
  40eb0f:	je     0x40eb1d
  40eb11:	add    eax,0x4
  40eb14:	mov    edx,0x1
  40eb19:	lock xadd DWORD PTR [eax],edx
  40eb1d:	mov    BYTE PTR [ebp-0x4],0xd
  40eb21:	mov    esi,DWORD PTR [ebx+0xc]
  40eb24:	cmp    esi,DWORD PTR [ebx+0x10]
  40eb27:	jbe    0x40eb2f
  40eb29:	call   DWORD PTR ds:0x430390
  40eb2f:	mov    eax,DWORD PTR [ebx]
  40eb31:	push   esi
  40eb32:	push   eax
  40eb33:	lea    edi,[ebp-0x120]
  40eb39:	mov    esi,ebx
  40eb3b:	call   0x412ed0
  40eb40:	mov    esi,DWORD PTR [ebp-0x9c]
  40eb46:	mov    edi,DWORD PTR [ebp-0x90]
  40eb4c:	lea    eax,[esi+0x8]
  40eb4f:	mov    DWORD PTR [ebp-0xa8],eax
  40eb55:	mov    eax,DWORD PTR [eax]
  40eb57:	mov    DWORD PTR [edi+0xc],eax
  40eb5a:	mov    eax,0x411a60
  40eb5f:	push   edi
  40eb60:	push   eax
  40eb61:	lea    eax,[ebp-0xc8]
  40eb67:	call   0x417710
  40eb6c:	lea    ecx,[ebp-0xc8]
  40eb72:	push   ecx
  40eb73:	mov    BYTE PTR [ebp-0x4],0xe
  40eb77:	call   0x403560
  40eb7c:	mov    DWORD PTR [edi+0x64],eax
  40eb7f:	mov    BYTE PTR [ebp-0x4],0xd
  40eb83:	mov    eax,DWORD PTR [ebp-0xc8]
  40eb89:	test   eax,eax
  40eb8b:	je     0x40ebab
  40eb8d:	test   al,0x1
  40eb8f:	jne    0x40ebab
  40eb91:	and    eax,0xfffffffe
  40eb94:	mov    eax,DWORD PTR [eax]
  40eb96:	test   eax,eax
  40eb98:	je     0x40ebab
  40eb9a:	lea    edx,[ebp-0xc0]
  40eba0:	push   0x2
  40eba2:	push   edx
  40eba3:	mov    ecx,edx
  40eba5:	push   ecx
  40eba6:	call   eax
  40eba8:	add    esp,0xc
  40ebab:	lea    ebx,[esi+0x64]
  40ebae:	lea    esi,[edi+0x10]
  40ebb1:	push   ebx
  40ebb2:	mov    ecx,esi
  40ebb4:	call   DWORD PTR ds:0x43017c
  40ebba:	lea    ecx,[ebp-0x30]
  40ebbd:	call   DWORD PTR ds:0x430254
  40ebc3:	lea    ecx,[ebp-0x8c]
  40ebc9:	mov    BYTE PTR [ebp-0x4],0xf
  40ebcd:	call   DWORD PTR ds:0x430254
  40ebd3:	lea    edx,[ebp-0x8c]
  40ebd9:	push   edx
  40ebda:	lea    edi,[ebp-0x30]
  40ebdd:	mov    BYTE PTR [ebp-0x4],0x10
  40ebe1:	call   0x40e610
  40ebe6:	test   al,al
  40ebe8:	jne    0x40ec46
  40ebea:	push   0x431948
  40ebef:	lea    ecx,[ebp-0x118]
  40ebf5:	call   DWORD PTR ds:0x43011c
  40ebfb:	mov    BYTE PTR [ebp-0x4],0x11
  40ebff:	call   0x41f6c0
  40ec04:	cmp    DWORD PTR [ebp-0x100],0x10
  40ec0b:	mov    ecx,DWORD PTR ds:0x43ff8c
  40ec11:	mov    eax,DWORD PTR [ebp-0x114]
  40ec17:	jae    0x40ec1f
  40ec19:	lea    eax,[ebp-0x114]
  40ec1f:	mov    edx,DWORD PTR [ecx]
  40ec21:	push   eax
  40ec22:	mov    eax,DWORD PTR [edx+0x8]
  40ec25:	call   eax
  40ec27:	sub    esp,0x1c
  40ec2a:	mov    ecx,esp
  40ec2c:	mov    DWORD PTR [ebp-0x94],esp
  40ec32:	push   eax
  40ec33:	call   DWORD PTR ds:0x430268
  40ec39:	mov    ebx,DWORD PTR [ebp-0x90]
  40ec3f:	push   0xa
  40ec41:	call   0x40fde0
  40ec46:	lea    edi,[ebp-0x30]
  40ec49:	mov    ecx,esi
  40ec4b:	call   0x40d410
  40ec50:	mov    edi,DWORD PTR [ebp-0xa8]
  40ec56:	lea    esi,[ebp-0x174]
  40ec5c:	call   0x417730
  40ec61:	mov    edi,eax
  40ec63:	lea    esi,[ebp-0x190]
  40ec69:	mov    BYTE PTR [ebp-0x4],0x12
  40ec6d:	call   0x40e190
  40ec72:	push   0x431974
  40ec77:	push   eax
  40ec78:	lea    ecx,[ebp-0x158]
  40ec7e:	mov    BYTE PTR [ebp-0x4],0x13
  40ec82:	mov    esi,DWORD PTR ds:0x4301a4
  40ec88:	push   ecx
  40ec89:	call   esi
  40ec8b:	add    esp,0xc
  40ec8e:	push   edi
  40ec8f:	push   eax
  40ec90:	lea    edx,[ebp-0x118]
  40ec96:	push   edx
  40ec97:	mov    BYTE PTR [ebp-0x4],0x14
  40ec9b:	call   DWORD PTR ds:0x4301a0
  40eca1:	add    esp,0xc
  40eca4:	push   0x431964
  40eca9:	push   eax
  40ecaa:	lea    eax,[ebp-0x4c]
  40ecad:	push   eax
  40ecae:	mov    BYTE PTR [ebp-0x4],0x15
  40ecb2:	call   esi
  40ecb4:	add    esp,0xc
  40ecb7:	lea    ecx,[ebp-0x118]
  40ecbd:	mov    BYTE PTR [ebp-0x4],0x17
  40ecc1:	call   DWORD PTR ds:0x430264
  40ecc7:	lea    ecx,[ebp-0x158]
  40eccd:	mov    BYTE PTR [ebp-0x4],0x18
  40ecd1:	call   DWORD PTR ds:0x430264
  40ecd7:	lea    ecx,[ebp-0x190]
  40ecdd:	mov    BYTE PTR [ebp-0x4],0x19
  40ece1:	call   DWORD PTR ds:0x430264
  40ece7:	lea    ecx,[ebp-0x174]
  40eced:	mov    BYTE PTR [ebp-0x4],0x1a
  40ecf1:	call   DWORD PTR ds:0x430264
  40ecf7:	lea    ecx,[ebp-0x4c]
  40ecfa:	push   ecx
  40ecfb:	call   0x40da00
  40ed00:	mov    edi,DWORD PTR [ebp-0x90]
  40ed06:	mov    ecx,DWORD PTR [edi+0x2c]
  40ed09:	mov    edx,DWORD PTR [ebp-0x48]
  40ed0c:	mov    eax,0x8
  40ed11:	add    esp,0x4
  40ed14:	cmp    DWORD PTR [ebp-0x34],eax
  40ed17:	jae    0x40ed1c
  40ed19:	lea    edx,[ebp-0x48]
  40ed1c:	cmp    DWORD PTR [ebp-0x74],eax
  40ed1f:	mov    eax,DWORD PTR [ebp-0x88]
  40ed25:	jae    0x40ed2d
  40ed27:	lea    eax,[ebp-0x88]
  40ed2d:	mov    esi,DWORD PTR [ecx]
  40ed2f:	push   edx
  40ed30:	mov    edx,DWORD PTR [esi+0x4]
  40ed33:	push   eax
  40ed34:	call   edx
  40ed36:	test   eax,eax
  40ed38:	jne    0x40ed75
  40ed3a:	push   0x431948
  40ed3f:	lea    ecx,[ebp-0xc4]
  40ed45:	call   DWORD PTR ds:0x43011c
  40ed4b:	lea    esi,[ebp-0xc4]
  40ed51:	mov    BYTE PTR [ebp-0x4],0x1b
  40ed55:	call   0x41f690
  40ed5a:	sub    esp,0x1c
  40ed5d:	mov    ecx,esp
  40ed5f:	mov    DWORD PTR [ebp-0x94],esp
  40ed65:	push   eax
  40ed66:	call   DWORD PTR ds:0x430268
  40ed6c:	push   0xa
  40ed6e:	mov    ebx,edi
  40ed70:	call   0x40fde0
  40ed75:	mov    eax,DWORD PTR [edi+0x64]
  40ed78:	test   eax,eax
  40ed7a:	je     0x40edc0
  40ed7c:	mov    ecx,DWORD PTR ds:0x43fe7c
  40ed82:	mov    edx,DWORD PTR [ecx]
  40ed84:	push   eax
  40ed85:	mov    eax,DWORD PTR [edx+0x28]
  40ed88:	push   0x430c34
  40ed8d:	call   eax
  40ed8f:	mov    eax,0x4119a0
  40ed94:	push   edi
  40ed95:	push   eax
  40ed96:	lea    eax,[ebp-0xc8]
  40ed9c:	call   0x417710
  40eda1:	lea    ecx,[ebp-0xc8]
  40eda7:	push   ecx
  40eda8:	mov    BYTE PTR [ebp-0x4],0x1c
  40edac:	call   0x403400
  40edb1:	lea    esi,[ebp-0xc8]
  40edb7:	mov    BYTE PTR [ebp-0x4],0x1a
  40edbb:	call   0x421a20
  40edc0:	lea    edx,[ebp-0xfc]
  40edc6:	push   edx
  40edc7:	call   0x413bb0
  40edcc:	lea    eax,[ebp-0xe4]
  40edd2:	push   eax
  40edd3:	mov    BYTE PTR [ebp-0x4],0x1d
  40edd7:	call   0x413bb0
  40eddc:	lea    ecx,[ebp-0xe4]
  40ede2:	push   ecx
  40ede3:	lea    edx,[ebp-0xfc]
  40ede9:	mov    bl,0x1e
  40edeb:	push   edx
  40edec:	lea    eax,[ebp-0x9c]
  40edf2:	mov    BYTE PTR [ebp-0x4],bl
  40edf5:	call   0x40fee0
  40edfa:	mov    ecx,DWORD PTR [ebp-0xec]
  40ee00:	sub    ecx,DWORD PTR [ebp-0xf0]
  40ee06:	mov    eax,0x2aaaaaab
  40ee0b:	imul   ecx
  40ee0d:	sar    edx,0x4
  40ee10:	mov    eax,edx
  40ee12:	shr    eax,0x1f
  40ee15:	add    eax,edx
  40ee17:	jne    0x40ee73
  40ee19:	mov    ecx,DWORD PTR [ebp-0xd4]
  40ee1f:	sub    ecx,DWORD PTR [ebp-0xd8]
  40ee25:	mov    eax,0x2aaaaaab
  40ee2a:	imul   ecx
  40ee2c:	sar    edx,0x4
  40ee2f:	mov    ecx,edx
  40ee31:	shr    ecx,0x1f
  40ee34:	add    ecx,edx
  40ee36:	jne    0x40ee73
  40ee38:	push   0x431988
  40ee3d:	lea    ecx,[ebp-0xc4]
  40ee43:	call   DWORD PTR ds:0x43011c
  40ee49:	lea    esi,[ebp-0xc4]
  40ee4f:	mov    BYTE PTR [ebp-0x4],0x1f
  40ee53:	call   0x41f690
  40ee58:	sub    esp,0x1c
  40ee5b:	mov    ecx,esp
  40ee5d:	mov    DWORD PTR [ebp-0x94],esp
  40ee63:	push   eax
  40ee64:	call   DWORD PTR ds:0x430268
  40ee6a:	push   0x2
  40ee6c:	mov    ebx,edi
  40ee6e:	call   0x40fde0
  40ee73:	push   0x0
  40ee75:	call   0x4213e0
  40ee7a:	cmp    BYTE PTR [edi+0x88],0x0
  40ee81:	jne    0x40eeb4
  40ee83:	lea    eax,[ebp-0xa4]
  40ee89:	call   0x407520
  40ee8e:	mov    BYTE PTR [ebp-0x4],0x20
  40ee92:	cmp    BYTE PTR [edi+0x88],0x0
  40ee99:	je     0x40ef38
  40ee9f:	cmp    BYTE PTR [ebp-0xa0],0x0
  40eea6:	je     0x40eeb4
  40eea8:	mov    ecx,DWORD PTR [ebp-0xa4]
  40eeae:	push   ecx
  40eeaf:	call   0x40a680
  40eeb4:	lea    edx,[ebp-0xe4]
  40eeba:	push   edx
  40eebb:	mov    BYTE PTR [ebp-0x4],0x1d
  40eebf:	call   0x4127d0
  40eec4:	lea    eax,[ebp-0xfc]
  40eeca:	push   eax
  40eecb:	mov    BYTE PTR [ebp-0x4],0x1a
  40eecf:	call   0x4127d0
  40eed4:	lea    ecx,[ebp-0x4c]
  40eed7:	mov    BYTE PTR [ebp-0x4],0x10
  40eedb:	call   DWORD PTR ds:0x430264
  40eee1:	lea    ecx,[ebp-0x8c]
  40eee7:	mov    BYTE PTR [ebp-0x4],0xf
  40eeeb:	call   DWORD PTR ds:0x430264
  40eef1:	lea    ecx,[ebp-0x30]
  40eef4:	mov    BYTE PTR [ebp-0x4],0xd
  40eef8:	call   DWORD PTR ds:0x430264
  40eefe:	lea    eax,[ebp-0x9c]
  40ef04:	mov    BYTE PTR [ebp-0x4],0x7
  40ef08:	call   0x411e30
  40ef0d:	lea    eax,[ebp-0x70]
  40ef10:	mov    DWORD PTR [ebp-0x4],0xffffffff
  40ef17:	call   0x40dc30
  40ef1c:	mov    ecx,DWORD PTR [ebp-0xc]
  40ef1f:	mov    DWORD PTR fs:0x0,ecx
  40ef26:	pop    ecx
  40ef27:	pop    edi
  40ef28:	pop    esi
  40ef29:	pop    ebx
  40ef2a:	mov    ecx,DWORD PTR [ebp-0x14]
  40ef2d:	xor    ecx,ebp
  40ef2f:	call   0x42503a
  40ef34:	mov    esp,ebp
  40ef36:	pop    ebp
  40ef37:	ret    
  40ef38:	mov    BYTE PTR [edi+0x68],0x1
  40ef3c:	mov    ecx,DWORD PTR ds:0x44003c
  40ef42:	mov    edx,DWORD PTR [ecx]
  40ef44:	mov    eax,DWORD PTR [edx+0xc]
  40ef47:	call   eax
  40ef49:	push   edi
  40ef4a:	lea    ecx,[ebp-0xe4]
  40ef50:	call   0x410390
  40ef55:	test   al,al
  40ef57:	je     0x40ee9f
  40ef5d:	push   edi
  40ef5e:	lea    edx,[ebp-0x4c]
  40ef61:	lea    ecx,[ebp-0xfc]
  40ef67:	call   0x410c50
  40ef6c:	test   al,al
  40ef6e:	je     0x40ee9f
  40ef74:	mov    ecx,edi
  40ef76:	call   0x410220
  40ef7b:	call   0x41ff70
  40ef80:	push   0x64
  40ef82:	mov    BYTE PTR [edi+0x68],0x0
  40ef86:	call   0x4213e0
  40ef8b:	mov    BYTE PTR [ebp-0x4],bl
  40ef8e:	cmp    BYTE PTR [ebp-0xa0],0x0
  40ef95:	je     0x40efa3
  40ef97:	mov    ecx,DWORD PTR [ebp-0xa4]
  40ef9d:	push   ecx
  40ef9e:	call   0x40a680
  40efa3:	call   0x421540
  40efa8:	lea    edx,[ebp-0xe4]
  40efae:	push   edx
  40efaf:	mov    BYTE PTR [ebp-0x4],0x1d
  40efb3:	call   0x4127d0
  40efb8:	lea    eax,[ebp-0xfc]
  40efbe:	push   eax
  40efbf:	mov    BYTE PTR [ebp-0x4],0x1a
  40efc3:	call   0x4127d0
  40efc8:	lea    ecx,[ebp-0x4c]
  40efcb:	mov    BYTE PTR [ebp-0x4],0x10
  40efcf:	call   DWORD PTR ds:0x430264
  40efd5:	lea    ecx,[ebp-0x8c]
  40efdb:	mov    BYTE PTR [ebp-0x4],0xf
  40efdf:	call   DWORD PTR ds:0x430264
  40efe5:	lea    ecx,[ebp-0x30]
  40efe8:	mov    BYTE PTR [ebp-0x4],0xd
  40efec:	call   DWORD PTR ds:0x430264
  40eff2:	lea    eax,[ebp-0x9c]
  40eff8:	mov    BYTE PTR [ebp-0x4],0x7
  40effc:	call   0x411e30
  40f001:	mov    ebx,DWORD PTR [ebp-0xcc]
  40f007:	mov    edi,DWORD PTR [ebp-0x94]
  40f00d:	jmp    0x40ea50
  40f012:	mov    eax,ds:0x4400a4
  40f017:	test   eax,eax
  40f019:	je     0x40ef0d
  40f01f:	push   eax
  40f020:	mov    ecx,0x4070d0
  40f025:	push   ecx
  40f026:	lea    eax,[ebp-0xc8]
  40f02c:	call   0x417420
  40f031:	lea    ecx,[ebp-0xc8]
  40f037:	push   ecx
  40f038:	mov    BYTE PTR [ebp-0x4],0x21
  40f03c:	call   0x403400
  40f041:	mov    BYTE PTR [ebp-0x4],0x7
  40f045:	mov    eax,DWORD PTR [ebp-0xc8]
  40f04b:	test   eax,eax
  40f04d:	je     0x40ef0d
  40f053:	test   al,0x1
  40f055:	jne    0x40f071
  40f057:	and    eax,0xfffffffe
  40f05a:	mov    eax,DWORD PTR [eax]
  40f05c:	test   eax,eax
  40f05e:	je     0x40f071
  40f060:	lea    edx,[ebp-0xc0]
  40f066:	push   0x2
  40f068:	push   edx
  40f069:	mov    ecx,edx
  40f06b:	push   ecx
  40f06c:	call   eax
  40f06e:	add    esp,0xc
  40f071:	mov    DWORD PTR [ebp-0xc8],0x0
  40f07b:	jmp    0x40ef0d
  40f080:	mov    esi,DWORD PTR [ebp-0x90]
  40f086:	mov    eax,DWORD PTR [esi+0x64]
  40f089:	test   eax,eax
  40f08b:	je     0x40f0a7
  40f08d:	mov    ecx,DWORD PTR ds:0x43fe7c
  40f093:	mov    edx,DWORD PTR [ecx]
  40f095:	push   eax
  40f096:	mov    eax,DWORD PTR [edx+0x28]
  40f099:	push   0x430c34
  40f09e:	call   eax
  40f0a0:	mov    DWORD PTR [esi+0x64],0x0
  40f0a7:	mov    eax,0x40ef0d
  40f0ac:	ret    
  40f0ad:	int3   
  40f0ae:	int3   
  40f0af:	int3   
  40f0b0:	push   0xffffffff
  40f0b2:	push   0x42e2cd
  40f0b7:	mov    eax,fs:0x0
  40f0bd:	push   eax
  40f0be:	sub    esp,0x150
  40f0c4:	mov    eax,ds:0x43e020
  40f0c9:	xor    eax,esp
  40f0cb:	mov    DWORD PTR [esp+0x14c],eax
  40f0d2:	push   ebx
  40f0d3:	push   ebp
  40f0d4:	push   esi
  40f0d5:	push   edi
  40f0d6:	mov    eax,ds:0x43e020
  40f0db:	xor    eax,esp
  40f0dd:	push   eax
  40f0de:	lea    eax,[esp+0x164]
  40f0e5:	mov    fs:0x0,eax
  40f0eb:	mov    ebp,ecx
  40f0ed:	xor    ebx,ebx
  40f0ef:	mov    DWORD PTR [esp+0x16c],ebx
  40f0f6:	mov    DWORD PTR [esp+0x24],ebx
  40f0fa:	mov    DWORD PTR [esp+0x28],ebx
  40f0fe:	lea    eax,[esp+0x48]
  40f102:	push   eax
  40f103:	lea    ecx,[esp+0x178]
  40f10a:	mov    BYTE PTR [esp+0x170],0x1
  40f112:	call   0x40cbe0
  40f117:	lea    ecx,[esp+0x2c]
  40f11b:	push   ecx
  40f11c:	mov    edi,eax
  40f11e:	mov    BYTE PTR [esp+0x170],0x2
  40f126:	call   0x417750
  40f12b:	lea    edx,[esp+0x2c]
  40f12f:	push   edx
  40f130:	lea    ecx,[esp+0x18]
  40f134:	mov    BYTE PTR [esp+0x170],0x3
  40f13c:	call   0x40ce40
  40f141:	lea    ecx,[esp+0x2c]
  40f145:	mov    BYTE PTR [esp+0x16c],0x5
  40f14d:	call   DWORD PTR ds:0x430264
  40f153:	lea    ecx,[esp+0x48]
  40f157:	mov    BYTE PTR [esp+0x16c],0x6
  40f15f:	call   DWORD PTR ds:0x43025c
  40f165:	mov    esi,DWORD PTR [esp+0x14]
  40f169:	cmp    esi,ebx
  40f16b:	je     0x40f418
  40f171:	mov    ebx,DWORD PTR ds:0x4301a0
  40f177:	jmp    0x40f180
  40f179:	lea    esp,[esp+0x0]
  40f180:	lea    ecx,[esp+0x128]
  40f187:	call   DWORD PTR ds:0x430254
  40f18d:	mov    BYTE PTR [esp+0x16c],0x7
  40f195:	call   0x426930
  40f19a:	mov    eax,DWORD PTR [eax]
  40f19c:	push   eax
  40f19d:	lea    eax,[esp+0x12c]
  40f1a4:	push   eax
  40f1a5:	push   esi
  40f1a6:	call   0x426de0
  40f1ab:	push   0x0
  40f1ad:	lea    ecx,[esp+0x138]
  40f1b4:	push   ecx
  40f1b5:	lea    edx,[esp+0x30]
  40f1b9:	push   edx
  40f1ba:	mov    BYTE PTR [esp+0x184],0x8
  40f1c2:	call   0x428370
  40f1c7:	add    esp,0x18
  40f1ca:	cmp    DWORD PTR [eax],0x3
  40f1cd:	jne    0x40f1f2
  40f1cf:	sub    esp,0x1c
  40f1d2:	lea    eax,[esp+0x144]
  40f1d9:	mov    DWORD PTR [esp+0x3c],esp
  40f1dd:	mov    ecx,esp
  40f1df:	push   eax
  40f1e0:	call   DWORD PTR ds:0x430118
  40f1e6:	mov    ecx,ebp
  40f1e8:	call   0x40f0b0
  40f1ed:	jmp    0x40f3e6
  40f1f2:	lea    ecx,[esp+0x128]
  40f1f9:	push   ecx
  40f1fa:	lea    ecx,[esp+0x110]
  40f201:	call   DWORD PTR ds:0x430118
  40f207:	lea    edi,[esp+0x9c]
  40f20e:	mov    ecx,ebp
  40f210:	mov    BYTE PTR [esp+0x16c],0x9
  40f218:	call   0x40e230
  40f21d:	mov    BYTE PTR [esp+0x16c],0xa
  40f225:	mov    edx,DWORD PTR ds:0x4301e0
  40f22b:	mov    ecx,DWORD PTR [edx]
  40f22d:	mov    eax,DWORD PTR [eax+0x14]
  40f230:	push   ecx
  40f231:	push   eax
  40f232:	lea    edx,[esp+0x6c]
  40f236:	push   edx
  40f237:	lea    ecx,[esp+0x118]
  40f23e:	call   DWORD PTR ds:0x430218
  40f244:	push   eax
  40f245:	mov    BYTE PTR [esp+0x170],0xb
  40f24d:	call   0x41fb20
  40f252:	push   eax
  40f253:	lea    eax,[esp+0xf8]
  40f25a:	push   eax
  40f25b:	call   ebx
  40f25d:	add    esp,0xc
  40f260:	lea    ecx,[esp+0x64]
  40f264:	mov    BYTE PTR [esp+0x16c],0xd
  40f26c:	call   DWORD PTR ds:0x430264
  40f272:	mov    ecx,edi
  40f274:	mov    BYTE PTR [esp+0x16c],0xe
  40f27c:	call   DWORD PTR ds:0x430264
  40f282:	lea    edi,[esp+0x80]
  40f289:	mov    ecx,ebp
  40f28b:	call   0x40e230
  40f290:	mov    BYTE PTR [esp+0x16c],0xf
  40f298:	mov    ecx,DWORD PTR ds:0x4301e0
  40f29e:	mov    edx,DWORD PTR [ecx]
  40f2a0:	mov    eax,DWORD PTR [eax+0x14]
  40f2a3:	push   edx
  40f2a4:	push   eax
  40f2a5:	lea    eax,[esp+0xdc]
  40f2ac:	push   eax
  40f2ad:	lea    ecx,[esp+0x118]
  40f2b4:	call   DWORD PTR ds:0x430218
  40f2ba:	mov    edi,eax
  40f2bc:	lea    esi,[esp+0xb8]
  40f2c3:	mov    BYTE PTR [esp+0x16c],0x10
  40f2cb:	call   0x40e3c0
  40f2d0:	push   edi
  40f2d1:	push   eax
  40f2d2:	lea    ecx,[esp+0x14c]
  40f2d9:	push   ecx
  40f2da:	mov    BYTE PTR [esp+0x178],0x11
  40f2e2:	call   ebx
  40f2e4:	add    esp,0xc
  40f2e7:	mov    ecx,esi
  40f2e9:	mov    BYTE PTR [esp+0x16c],0x13
  40f2f1:	call   DWORD PTR ds:0x430264
  40f2f7:	lea    ecx,[esp+0xd4]
  40f2fe:	mov    BYTE PTR [esp+0x16c],0x14
  40f306:	call   DWORD PTR ds:0x430264
  40f30c:	lea    ecx,[esp+0x80]
  40f313:	mov    BYTE PTR [esp+0x16c],0x15
  40f31b:	call   DWORD PTR ds:0x430264
  40f321:	lea    edx,[esp+0x144]
  40f328:	push   edx
  40f329:	call   0x40da00
  40f32e:	mov    ecx,DWORD PTR [esp+0x14c]
  40f335:	mov    esi,0x8
  40f33a:	add    esp,0x4
  40f33d:	cmp    DWORD PTR [esp+0x15c],esi
  40f344:	jae    0x40f34d
  40f346:	lea    ecx,[esp+0x148]
  40f34d:	mov    eax,DWORD PTR [esp+0xf4]
  40f354:	cmp    DWORD PTR [esp+0x108],esi
  40f35b:	jae    0x40f364
  40f35d:	lea    eax,[esp+0xf4]
  40f364:	push   ecx
  40f365:	push   eax
  40f366:	call   DWORD PTR ds:0x4302e4
  40f36c:	mov    ecx,DWORD PTR [esp+0xfc]
  40f373:	add    esp,0x8
  40f376:	cmp    DWORD PTR [esp+0x108],esi
  40f37d:	jae    0x40f386
  40f37f:	lea    ecx,[esp+0xf4]
  40f386:	mov    eax,DWORD PTR [esp+0x110]
  40f38d:	cmp    DWORD PTR [esp+0x124],esi
  40f394:	jae    0x40f39d
  40f396:	lea    eax,[esp+0x110]
  40f39d:	push   0x3
  40f39f:	push   ecx
  40f3a0:	push   eax
  40f3a1:	call   DWORD PTR ds:0x430058
  40f3a7:	lea    ecx,[esp+0x144]
  40f3ae:	mov    BYTE PTR [esp+0x16c],0xe
  40f3b6:	call   DWORD PTR ds:0x430264
  40f3bc:	lea    ecx,[esp+0xf0]
  40f3c3:	mov    BYTE PTR [esp+0x16c],0x9
  40f3cb:	call   DWORD PTR ds:0x430264
  40f3d1:	lea    ecx,[esp+0x10c]
  40f3d8:	mov    BYTE PTR [esp+0x16c],0x8
  40f3e0:	call   DWORD PTR ds:0x430264
  40f3e6:	lea    ecx,[esp+0x128]
  40f3ed:	mov    BYTE PTR [esp+0x16c],0x6
  40f3f5:	call   DWORD PTR ds:0x430264
  40f3fb:	lea    eax,[esp+0x14]
  40f3ff:	push   0x0
  40f401:	push   eax
  40f402:	call   0x428680
  40f407:	mov    esi,DWORD PTR [esp+0x1c]
  40f40b:	add    esp,0x8
  40f40e:	test   esi,esi
  40f410:	jne    0x40f180
  40f416:	xor    ebx,ebx
  40f418:	mov    BYTE PTR [esp+0x16c],0x1
  40f420:	mov    esi,DWORD PTR [esp+0x18]
  40f424:	cmp    esi,ebx
  40f426:	je     0x40f452
  40f428:	lea    ecx,[esi+0x4]
  40f42b:	or     edx,0xffffffff
  40f42e:	lock xadd DWORD PTR [ecx],edx
  40f432:	jne    0x40f452
  40f434:	mov    eax,DWORD PTR [esi]
  40f436:	mov    edx,DWORD PTR [eax+0x4]
  40f439:	mov    ecx,esi
  40f43b:	call   edx
  40f43d:	lea    eax,[esi+0x8]
  40f440:	or     ecx,0xffffffff
  40f443:	lock xadd DWORD PTR [eax],ecx
  40f447:	jne    0x40f452
  40f449:	mov    edx,DWORD PTR [esi]
  40f44b:	mov    eax,DWORD PTR [edx+0x8]
  40f44e:	mov    ecx,esi
  40f450:	call   eax
  40f452:	lea    ecx,[esp+0x174]
  40f459:	mov    DWORD PTR [esp+0x16c],0xffffffff
  40f464:	call   DWORD PTR ds:0x430264
  40f46a:	mov    ecx,DWORD PTR [esp+0x164]
  40f471:	mov    DWORD PTR fs:0x0,ecx
  40f478:	pop    ecx
  40f479:	pop    edi
  40f47a:	pop    esi
  40f47b:	pop    ebp
  40f47c:	pop    ebx
  40f47d:	mov    ecx,DWORD PTR [esp+0x14c]
  40f484:	xor    ecx,esp
  40f486:	call   0x42503a
  40f48b:	add    esp,0x15c
  40f491:	ret    0x1c
  40f494:	int3   
  40f495:	int3   
  40f496:	int3   
  40f497:	int3   
  40f498:	int3   
  40f499:	int3   
  40f49a:	int3   
  40f49b:	int3   
  40f49c:	int3   
  40f49d:	int3   
  40f49e:	int3   
  40f49f:	int3   
  40f4a0:	push   0xffffffff
  40f4a2:	push   0x42e711
  40f4a7:	mov    eax,fs:0x0
  40f4ad:	push   eax
  40f4ae:	sub    esp,0x48
  40f4b1:	mov    eax,ds:0x43e020
  40f4b6:	xor    eax,esp
  40f4b8:	mov    DWORD PTR [esp+0x44],eax
  40f4bc:	push   edi
  40f4bd:	mov    eax,ds:0x43e020
  40f4c2:	xor    eax,esp
  40f4c4:	push   eax
  40f4c5:	lea    eax,[esp+0x50]
  40f4c9:	mov    fs:0x0,eax
  40f4cf:	mov    ecx,DWORD PTR ds:0x44003c
  40f4d5:	mov    eax,DWORD PTR [ecx]
  40f4d7:	mov    edx,DWORD PTR [eax+0xc]
  40f4da:	call   edx
  40f4dc:	lea    edi,[esp+0x14]
  40f4e0:	mov    ecx,esi
  40f4e2:	call   0x40e230
  40f4e7:	push   eax
  40f4e8:	lea    ecx,[esp+0x34]
  40f4ec:	mov    DWORD PTR [esp+0x5c],0x0
  40f4f4:	call   DWORD PTR ds:0x430118
  40f4fa:	mov    ecx,edi
  40f4fc:	mov    BYTE PTR [esp+0x58],0x2
  40f501:	call   DWORD PTR ds:0x430264
  40f507:	push   0x0
  40f509:	lea    eax,[esp+0x34]
  40f50d:	push   eax
  40f50e:	lea    ecx,[esp+0x18]
  40f512:	push   ecx
  40f513:	call   0x428370
  40f518:	mov    eax,DWORD PTR [eax]
  40f51a:	add    esp,0xc
  40f51d:	test   eax,eax
  40f51f:	je     0x40f541
  40f521:	cmp    eax,0x1
  40f524:	je     0x40f541
  40f526:	sub    esp,0x1c
  40f529:	lea    edx,[esp+0x4c]
  40f52d:	mov    DWORD PTR [esp+0x28],esp
  40f531:	mov    ecx,esp
  40f533:	push   edx
  40f534:	call   DWORD PTR ds:0x430118
  40f53a:	mov    ecx,esi
  40f53c:	call   0x40f0b0
  40f541:	call   0x41ff70
  40f546:	lea    ecx,[esp+0x30]
  40f54a:	mov    DWORD PTR [esp+0x58],0xffffffff
  40f552:	call   DWORD PTR ds:0x430264
  40f558:	mov    ecx,DWORD PTR [esp+0x50]
  40f55c:	mov    DWORD PTR fs:0x0,ecx
  40f563:	pop    ecx
  40f564:	pop    edi
  40f565:	mov    ecx,DWORD PTR [esp+0x44]
  40f569:	xor    ecx,esp
  40f56b:	call   0x42503a
  40f570:	add    esp,0x54
  40f573:	ret    
  40f574:	int3   
  40f575:	int3   
  40f576:	int3   
  40f577:	int3   
  40f578:	int3   
  40f579:	int3   
  40f57a:	int3   
  40f57b:	int3   
  40f57c:	int3   
  40f57d:	int3   
  40f57e:	int3   
  40f57f:	int3   
  40f580:	push   ebp
  40f581:	mov    ebp,esp
  40f583:	push   0xffffffff
  40f585:	push   0x42e97a
  40f58a:	mov    eax,fs:0x0
  40f590:	push   eax
  40f591:	push   ecx
  40f592:	mov    eax,0x101ec
  40f597:	call   0x429f70
  40f59c:	mov    eax,ds:0x43e020
  40f5a1:	xor    eax,ebp
  40f5a3:	mov    DWORD PTR [ebp-0x18],eax
  40f5a6:	push   ebx
  40f5a7:	push   esi
  40f5a8:	push   edi
  40f5a9:	push   eax
  40f5aa:	lea    eax,[ebp-0xc]
  40f5ad:	mov    fs:0x0,eax
  40f5b3:	mov    DWORD PTR [ebp-0x10],esp
  40f5b6:	mov    eax,DWORD PTR [ebp+0x8]
  40f5b9:	xor    ebx,ebx
  40f5bb:	lea    ecx,[ebp-0x34]
  40f5be:	mov    DWORD PTR [ebp-0x10124],eax
  40f5c4:	mov    BYTE PTR [ebp-0x1010d],0x0
  40f5cb:	mov    DWORD PTR [ebp-0x38],ebx
  40f5ce:	call   DWORD PTR ds:0x430260
  40f5d4:	lea    ecx,[ebp-0x38]
  40f5d7:	mov    DWORD PTR [ebp-0x4],ebx
  40f5da:	call   0x4133d0
  40f5df:	mov    ecx,DWORD PTR [ebp-0x38]
  40f5e2:	mov    edx,DWORD PTR [ecx]
  40f5e4:	mov    eax,DWORD PTR [edx+0x2c]
  40f5e7:	push   0x200000
  40f5ec:	call   eax
  40f5ee:	lea    ecx,[ebp-0x8c]
  40f5f4:	call   DWORD PTR ds:0x430254
  40f5fa:	mov    edi,0x1f4
  40f5ff:	xor    ecx,ecx
  40f601:	mov    eax,edi
  40f603:	mov    edx,0x2
  40f608:	mul    edx
  40f60a:	seto   cl
  40f60d:	mov    BYTE PTR [ebp-0x4],0x1
  40f611:	mov    DWORD PTR [ebp-0x1011c],edi
  40f617:	neg    ecx
  40f619:	or     ecx,eax
  40f61b:	push   ecx
  40f61c:	call   0x425023
  40f621:	mov    esi,eax
  40f623:	add    esp,0x4
  40f626:	lea    eax,[ebp-0x1011c]
  40f62c:	push   eax
  40f62d:	push   esi
  40f62e:	call   DWORD PTR ds:0x430440
  40f634:	add    esp,0x8
  40f637:	push   esi
  40f638:	lea    ecx,[ebp-0x8c]
  40f63e:	call   DWORD PTR ds:0x4301c0
  40f644:	push   esi
  40f645:	call   0x42517c
  40f64a:	mov    eax,DWORD PTR [ebp-0x88]
  40f650:	add    esp,0x4
  40f653:	cmp    DWORD PTR [ebp-0x74],0x8
  40f657:	jae    0x40f65f
  40f659:	lea    eax,[ebp-0x88]
  40f65f:	mov    ecx,DWORD PTR [ebp-0x38]
  40f662:	mov    edx,DWORD PTR [ecx]
  40f664:	push   eax
  40f665:	mov    eax,DWORD PTR [edx]
  40f667:	call   eax
  40f669:	mov    DWORD PTR [ebp-0x10120],ebx
  40f66f:	xor    bl,bl
  40f671:	test   eax,eax
  40f673:	je     0x40f705
  40f679:	mov    ecx,DWORD PTR [ebp-0x38]
  40f67c:	mov    edx,DWORD PTR [ecx]
  40f67e:	mov    edx,DWORD PTR [edx+0x8]
  40f681:	lea    eax,[ebp-0x10120]
  40f687:	push   eax
  40f688:	call   edx
  40f68a:	test   eax,eax
  40f68c:	je     0x40f705
  40f68e:	mov    eax,0x51eb851f
  40f693:	mul    DWORD PTR [ebp-0x10120]
  40f699:	shr    edx,0x5
  40f69c:	cmp    edx,0x3
  40f69f:	jne    0x40f705
  40f6a1:	lea    eax,[ebp-0x1013c]
  40f6a7:	push   eax
  40f6a8:	call   0x413bb0
  40f6ad:	mov    BYTE PTR [ebp-0x4],0x2
  40f6b1:	mov    ecx,DWORD PTR [ebp-0x38]
  40f6b4:	mov    edx,DWORD PTR [ecx]
  40f6b6:	mov    edx,DWORD PTR [edx+0x14]
  40f6b9:	lea    eax,[ebp-0x1013c]
  40f6bf:	push   eax
  40f6c0:	push   0x2
  40f6c2:	call   edx
  40f6c4:	test   eax,eax
  40f6c6:	je     0x40f6f1
  40f6c8:	mov    eax,DWORD PTR [ebp-0x1012c]
  40f6ce:	sub    eax,DWORD PTR [ebp-0x10130]
  40f6d4:	jne    0x40f6dc
  40f6d6:	call   DWORD PTR ds:0x430390
  40f6dc:	mov    ecx,DWORD PTR [ebp-0x10130]
  40f6e2:	push   ecx
  40f6e3:	lea    ecx,[ebp-0x8c]
  40f6e9:	call   DWORD PTR ds:0x4301c0
  40f6ef:	mov    bl,0x1
  40f6f1:	lea    edx,[ebp-0x1013c]
  40f6f7:	push   edx
  40f6f8:	mov    BYTE PTR [ebp-0x4],0x1
  40f6fc:	call   0x412740
  40f701:	test   bl,bl
  40f703:	jne    0x40f74f
  40f705:	xor    ecx,ecx
  40f707:	mov    eax,edi
  40f709:	mov    edx,0x2
  40f70e:	mul    edx
  40f710:	seto   cl
  40f713:	mov    DWORD PTR [ebp-0x1011c],edi
  40f719:	neg    ecx
  40f71b:	or     ecx,eax
  40f71d:	push   ecx
  40f71e:	call   0x425023
  40f723:	mov    esi,eax
  40f725:	add    esp,0x4
  40f728:	lea    eax,[ebp-0x1011c]
  40f72e:	push   eax
  40f72f:	push   esi
  40f730:	call   DWORD PTR ds:0x43044c
  40f736:	add    esp,0x8
  40f739:	push   esi
  40f73a:	lea    ecx,[ebp-0x8c]
  40f740:	call   DWORD PTR ds:0x4301c0
  40f746:	push   esi
  40f747:	call   0x42517c
  40f74c:	add    esp,0x4
  40f74f:	lea    ecx,[ebp-0x1015c]
  40f755:	push   ecx
  40f756:	call   0x413db0
  40f75b:	lea    edx,[ebp-0x8c]
  40f761:	push   edx
  40f762:	lea    ecx,[ebp-0x54]
  40f765:	mov    BYTE PTR [ebp-0x4],0x3
  40f769:	call   DWORD PTR ds:0x430118
  40f76f:	mov    BYTE PTR [ebp-0x4],0x4
  40f773:	cmp    DWORD PTR [ebp-0x40],0x0
  40f777:	je     0x40f927
  40f77d:	mov    ebx,DWORD PTR [ebp-0x10144]
  40f783:	mov    edi,DWORD PTR [ebp-0x1015c]
  40f789:	lea    eax,[ebp-0x54]
  40f78c:	push   eax
  40f78d:	lea    ecx,[ebp-0x10164]
  40f793:	push   ecx
  40f794:	lea    esi,[ebp-0x1015c]
  40f79a:	call   0x413070
  40f79f:	mov    esi,eax
  40f7a1:	mov    eax,DWORD PTR [esi]
  40f7a3:	test   eax,eax
  40f7a5:	je     0x40f7ab
  40f7a7:	cmp    eax,edi
  40f7a9:	je     0x40f7b1
  40f7ab:	call   DWORD PTR ds:0x430390
  40f7b1:	cmp    DWORD PTR [esi+0x4],ebx
  40f7b4:	je     0x40f8b1
  40f7ba:	call   0x4045f0
  40f7bf:	mov    esi,0x4
  40f7c4:	cmp    DWORD PTR [eax+0x2c],esi
  40f7c7:	jg     0x40f852
  40f7cd:	mov    DWORD PTR [ebp-0x10118],esi
  40f7d3:	mov    DWORD PTR [ebp-0x10114],0x0
  40f7dd:	call   0x4045f0
  40f7e2:	cmp    DWORD PTR [eax+0x2c],esi
  40f7e5:	jg     0x40f830
  40f7e7:	push   0x1000
  40f7ec:	call   0x425050
  40f7f1:	add    esp,0x4
  40f7f4:	push   0x1000
  40f7f9:	mov    edi,eax
  40f7fb:	push   0x0
  40f7fd:	push   edi
  40f7fe:	mov    DWORD PTR [ebp-0x10114],edi
  40f804:	call   0x429f9c
  40f809:	add    esp,0xc
  40f80c:	push   edi
  40f80d:	mov    esi,0x431878
  40f812:	call   0x404100
  40f817:	add    esp,0x4
  40f81a:	push   0x3b
  40f81c:	push   0x4319b8
  40f821:	add    edi,0x28
  40f824:	push   0x3c
  40f826:	push   edi
  40f827:	call   DWORD PTR ds:0x430384
  40f82d:	add    esp,0x10
  40f830:	push   0x4319e8
  40f835:	lea    esi,[ebp-0x10118]
  40f83b:	mov    BYTE PTR [ebp-0x4],0x5
  40f83f:	call   0x4040d0
  40f844:	add    esp,0x4
  40f847:	mov    ecx,esi
  40f849:	mov    BYTE PTR [ebp-0x4],0x4
  40f84d:	call   0x404680
  40f852:	push   0x431a10
  40f857:	lea    ecx,[ebp-0x70]
  40f85a:	call   DWORD PTR ds:0x43011c
  40f860:	mov    BYTE PTR [ebp-0x4],0x6
  40f864:	cmp    DWORD PTR [ebp-0x3c],0x8
  40f868:	mov    edi,DWORD PTR [ebp-0x50]
  40f86b:	jae    0x40f870
  40f86d:	lea    edi,[ebp-0x50]
  40f870:	call   0x41f6c0
  40f875:	cmp    DWORD PTR [ebp-0x58],0x10
  40f879:	mov    ecx,DWORD PTR ds:0x43ff8c
  40f87f:	mov    eax,DWORD PTR [ebp-0x6c]
  40f882:	jae    0x40f887
  40f884:	lea    eax,[ebp-0x6c]
  40f887:	mov    edx,DWORD PTR [ecx]
  40f889:	push   eax
  40f88a:	mov    eax,DWORD PTR [edx+0x8]
  40f88d:	call   eax
  40f88f:	sub    esp,0x1c
  40f892:	mov    esi,esp
  40f894:	mov    DWORD PTR [ebp-0x1011c],esp
  40f89a:	push   edi
  40f89b:	push   eax
  40f89c:	call   0x40a710
  40f8a1:	mov    ebx,DWORD PTR [ebp-0x10124]
  40f8a7:	add    esp,0x8
  40f8aa:	push   0xf
  40f8ac:	call   0x40fde0
  40f8b1:	lea    ecx,[ebp-0x54]
  40f8b4:	push   ecx
  40f8b5:	lea    edx,[ebp-0x1015c]
  40f8bb:	push   edx
  40f8bc:	lea    ebx,[ebp-0x10170]
  40f8c2:	call   0x412f50
  40f8c7:	xor    esi,esi
  40f8c9:	mov    edi,0x12c
  40f8ce:	xor    bl,bl
  40f8d0:	cmp    DWORD PTR [ebp-0x3c],0x8
  40f8d4:	mov    eax,DWORD PTR [ebp-0x50]
  40f8d7:	jae    0x40f8dc
  40f8d9:	lea    eax,[ebp-0x50]
  40f8dc:	mov    ecx,DWORD PTR [ebp-0x38]
  40f8df:	mov    edx,DWORD PTR [ecx]
  40f8e1:	push   eax
  40f8e2:	mov    eax,DWORD PTR [edx]
  40f8e4:	call   eax
  40f8e6:	test   eax,eax
  40f8e8:	je     0x40fc9a
  40f8ee:	test   bl,bl
  40f8f0:	jne    0x40f927
  40f8f2:	lea    ecx,[ebp-0x1013c]
  40f8f8:	push   ecx
  40f8f9:	call   0x413bb0
  40f8fe:	mov    BYTE PTR [ebp-0x4],0x7
  40f902:	mov    ecx,DWORD PTR [ebp-0x38]
  40f905:	mov    edx,DWORD PTR [ecx]
  40f907:	mov    edx,DWORD PTR [edx+0x10]
  40f90a:	lea    eax,[ebp-0x1013c]
  40f910:	push   eax
  40f911:	call   edx
  40f913:	test   eax,eax
  40f915:	jne    0x40f98c
  40f917:	lea    eax,[ebp-0x1013c]
  40f91d:	mov    BYTE PTR [ebp-0x4],0x4
  40f921:	push   eax
  40f922:	call   0x412740
  40f927:	lea    ecx,[ebp-0x54]
  40f92a:	mov    BYTE PTR [ebp-0x4],0x3
  40f92e:	call   DWORD PTR ds:0x430264
  40f934:	lea    esi,[ebp-0x1015c]
  40f93a:	mov    BYTE PTR [ebp-0x4],0x14
  40f93e:	call   0x4140b0
  40f943:	mov    edx,DWORD PTR [ebp-0x1015c]
  40f949:	push   edx
  40f94a:	call   0x42504a
  40f94f:	add    esp,0x4
  40f952:	lea    ecx,[ebp-0x8c]
  40f958:	mov    BYTE PTR [ebp-0x4],0x0
  40f95c:	call   DWORD PTR ds:0x430264
  40f962:	mov    DWORD PTR [ebp-0x4],0xffffffff
  40f969:	mov    eax,DWORD PTR [ebp-0x38]
  40f96c:	test   eax,eax
  40f96e:	je     0x40fcc9
  40f974:	cmp    DWORD PTR [ebp-0x20],0x0
  40f978:	jne    0x40fcae
  40f97e:	push   eax
  40f97f:	call   0x42504a
  40f984:	add    esp,0x4
  40f987:	jmp    0x40fcc2
  40f98c:	push   0xa0
  40f991:	mov    BYTE PTR [ebp-0x4],0x8
  40f995:	call   0x425050
  40f99a:	add    esp,0x4
  40f99d:	mov    DWORD PTR [ebp-0x10120],eax
  40f9a3:	mov    BYTE PTR [ebp-0x4],0x9
  40f9a7:	test   eax,eax
  40f9a9:	je     0x40f9b5
  40f9ab:	push   eax
  40f9ac:	call   0x40c6f0
  40f9b1:	mov    esi,eax
  40f9b3:	jmp    0x40f9b7
  40f9b5:	xor    esi,esi
  40f9b7:	mov    BYTE PTR [ebp-0x4],0x8
  40f9bb:	push   esi
  40f9bc:	lea    ecx,[ebp-0x10114]
  40f9c2:	mov    DWORD PTR [ebp-0x10118],esi
  40f9c8:	call   0x418fb0
  40f9cd:	push   esi
  40f9ce:	lea    ecx,[ebp-0x10118]
  40f9d4:	push   esi
  40f9d5:	push   ecx
  40f9d6:	call   0x4029a0
  40f9db:	add    esp,0xc
  40f9de:	mov    BYTE PTR [ebp-0x4],0xa
  40f9e2:	mov    eax,DWORD PTR [ebp-0x1012c]
  40f9e8:	mov    ecx,DWORD PTR [ebp-0x10130]
  40f9ee:	mov    ebx,eax
  40f9f0:	cmp    ecx,eax
  40f9f2:	jbe    0x40fa06
  40f9f4:	call   DWORD PTR ds:0x430390
  40f9fa:	mov    eax,DWORD PTR [ebp-0x1012c]
  40fa00:	mov    ecx,DWORD PTR [ebp-0x10130]
  40fa06:	mov    esi,DWORD PTR [ebp-0x1013c]
  40fa0c:	mov    edi,ecx
  40fa0e:	cmp    ecx,eax
  40fa10:	jbe    0x40fa18
  40fa12:	call   DWORD PTR ds:0x430390
  40fa18:	mov    edx,DWORD PTR [ebp-0x1013c]
  40fa1e:	push   ebx
  40fa1f:	push   esi
  40fa20:	push   edi
  40fa21:	push   edx
  40fa22:	lea    esi,[ebp-0xa8]
  40fa28:	call   0x4177b0
  40fa2d:	push   0x0
  40fa2f:	push   0x1
  40fa31:	mov    ecx,esi
  40fa33:	mov    BYTE PTR [ebp-0x4],0xb
  40fa37:	call   DWORD PTR ds:0x4301d4
  40fa3d:	mov    eax,esi
  40fa3f:	push   eax
  40fa40:	lea    ecx,[ebp-0x1010c]
  40fa46:	push   ecx
  40fa47:	call   0x40d620
  40fa4c:	push   0x431a2c
  40fa51:	lea    ecx,[ebp-0x1010c]
  40fa57:	mov    BYTE PTR [ebp-0x4],0xc
  40fa5b:	call   0x40d6d0
  40fa60:	push   0x431a3c
  40fa65:	lea    ecx,[ebp-0x1010c]
  40fa6b:	call   0x40d6d0
  40fa70:	push   0x4316f8
  40fa75:	lea    ecx,[ebp-0x1010c]
  40fa7b:	call   0x40d6d0
  40fa80:	mov    ecx,DWORD PTR [ebp-0x10118]
  40fa86:	mov    DWORD PTR [ebp-0x1011c],eax
  40fa8c:	mov    edx,DWORD PTR [ecx]
  40fa8e:	mov    edx,DWORD PTR [edx]
  40fa90:	push   0x0
  40fa92:	lea    eax,[ebp-0x1011c]
  40fa98:	push   eax
  40fa99:	call   edx
  40fa9b:	lea    eax,[ebp-0x54]
  40fa9e:	push   eax
  40fa9f:	lea    ecx,[ebp-0x70]
  40faa2:	call   DWORD PTR ds:0x430118
  40faa8:	lea    ecx,[ebp-0x70]
  40faab:	push   ecx
  40faac:	mov    ebx,0x4317ec
  40fab1:	mov    edx,0x430f38
  40fab6:	mov    BYTE PTR [ebp-0x4],0xd
  40faba:	call   0x417380
  40fabf:	mov    edx,DWORD PTR ds:0x4301e0
  40fac5:	mov    eax,DWORD PTR [edx]
  40fac7:	add    esp,0x4
  40faca:	push   eax
  40facb:	push   0x2f
  40facd:	lea    ecx,[ebp-0x70]
  40fad0:	call   DWORD PTR ds:0x430224
  40fad6:	mov    ecx,DWORD PTR ds:0x4301e0
  40fadc:	cmp    eax,DWORD PTR [ecx]
  40fade:	je     0x40fb11
  40fae0:	push   eax
  40fae1:	push   0x0
  40fae3:	lea    edx,[ebp-0x1018c]
  40fae9:	push   edx
  40faea:	lea    ecx,[ebp-0x70]
  40faed:	call   DWORD PTR ds:0x430218
  40faf3:	push   eax
  40faf4:	lea    ecx,[ebp-0x70]
  40faf7:	mov    BYTE PTR [ebp-0x4],0xe
  40fafb:	call   DWORD PTR ds:0x43017c
  40fb01:	lea    ecx,[ebp-0x1018c]
  40fb07:	mov    BYTE PTR [ebp-0x4],0xd
  40fb0b:	call   DWORD PTR ds:0x430264
  40fb11:	mov    edi,DWORD PTR [ebp-0x10118]
  40fb17:	add    edi,0x8
  40fb1a:	lea    esi,[ebp-0x101e0]
  40fb20:	call   0x417730
  40fb25:	mov    esi,eax
  40fb27:	push   0x431a4c
  40fb2c:	lea    eax,[ebp-0x70]
  40fb2f:	push   eax
  40fb30:	lea    ecx,[ebp-0x101fc]
  40fb36:	mov    BYTE PTR [ebp-0x4],0xf
  40fb3a:	mov    edi,DWORD PTR ds:0x4301a4
  40fb40:	push   ecx
  40fb41:	call   edi
  40fb43:	add    esp,0xc
  40fb46:	push   esi
  40fb47:	push   eax
  40fb48:	lea    edx,[ebp-0x101c4]
  40fb4e:	push   edx
  40fb4f:	mov    BYTE PTR [ebp-0x4],0x10
  40fb53:	call   DWORD PTR ds:0x4301a0
  40fb59:	add    esp,0xc
  40fb5c:	push   0x431964
  40fb61:	push   eax
  40fb62:	lea    eax,[ebp-0x101a8]
  40fb68:	mov    bl,0x11
  40fb6a:	push   eax
  40fb6b:	mov    BYTE PTR [ebp-0x4],bl
  40fb6e:	call   edi
  40fb70:	add    esp,0xc
  40fb73:	mov    BYTE PTR [ebp-0x4],0x12
  40fb77:	mov    ecx,DWORD PTR [ebp-0x10118]
  40fb7d:	push   eax
  40fb7e:	add    ecx,0x64
  40fb81:	call   DWORD PTR ds:0x43017c
  40fb87:	lea    ecx,[ebp-0x101a8]
  40fb8d:	mov    BYTE PTR [ebp-0x4],bl
  40fb90:	call   DWORD PTR ds:0x430264
  40fb96:	lea    ecx,[ebp-0x101c4]
  40fb9c:	mov    BYTE PTR [ebp-0x4],0x10
  40fba0:	call   DWORD PTR ds:0x430264
  40fba6:	lea    ecx,[ebp-0x101fc]
  40fbac:	mov    BYTE PTR [ebp-0x4],0xf
  40fbb0:	call   DWORD PTR ds:0x430264
  40fbb6:	lea    ecx,[ebp-0x101e0]
  40fbbc:	mov    BYTE PTR [ebp-0x4],0xd
  40fbc0:	call   DWORD PTR ds:0x430264
  40fbc6:	lea    ecx,[ebp-0x70]
  40fbc9:	mov    BYTE PTR [ebp-0x4],0xc
  40fbcd:	call   DWORD PTR ds:0x430264
  40fbd3:	mov    esi,DWORD PTR [ebp-0x10124]
  40fbd9:	lea    ebx,[esi+0x4c]
  40fbdc:	lea    eax,[ebp-0x10118]
  40fbe2:	call   0x412e50
  40fbe7:	mov    ecx,DWORD PTR [ebp-0x10118]
  40fbed:	add    ecx,0xc
  40fbf0:	push   ecx
  40fbf1:	lea    ecx,[ebp-0x54]
  40fbf4:	call   DWORD PTR ds:0x43017c
  40fbfa:	mov    edx,DWORD PTR [ebp-0x10118]
  40fc00:	mov    eax,DWORD PTR [edx+0x8]
  40fc03:	lea    ecx,[ebp-0x1010c]
  40fc09:	push   ecx
  40fc0a:	mov    DWORD PTR [esi+0x4],eax
  40fc0d:	mov    BYTE PTR [ebp-0x1010d],0x1
  40fc14:	mov    BYTE PTR [ebp-0x4],0xb
  40fc18:	call   0x40fd00
  40fc1d:	lea    ecx,[ebp-0xa8]
  40fc23:	mov    BYTE PTR [ebp-0x4],0xa
  40fc27:	call   DWORD PTR ds:0x43025c
  40fc2d:	mov    BYTE PTR [ebp-0x4],0x8
  40fc31:	mov    esi,DWORD PTR [ebp-0x10114]
  40fc37:	test   esi,esi
  40fc39:	je     0x40fc65
  40fc3b:	lea    edx,[esi+0x4]
  40fc3e:	or     eax,0xffffffff
  40fc41:	lock xadd DWORD PTR [edx],eax
  40fc45:	jne    0x40fc65
  40fc47:	mov    edx,DWORD PTR [esi]
  40fc49:	mov    eax,DWORD PTR [edx+0x4]
  40fc4c:	mov    ecx,esi
  40fc4e:	call   eax
  40fc50:	lea    ecx,[esi+0x8]
  40fc53:	or     edx,0xffffffff
  40fc56:	lock xadd DWORD PTR [ecx],edx
  40fc5a:	jne    0x40fc65
  40fc5c:	mov    eax,DWORD PTR [esi]
  40fc5e:	mov    edx,DWORD PTR [eax+0x8]
  40fc61:	mov    ecx,esi
  40fc63:	call   edx
  40fc65:	lea    eax,[ebp-0x1013c]
  40fc6b:	push   eax
  40fc6c:	mov    DWORD PTR [ebp-0x4],0x4
  40fc73:	call   0x412740
  40fc78:	jmp    0x40f773
  40fc7d:	mov    DWORD PTR [ebp-0x4],0x7
  40fc84:	mov    eax,0x40fc8a
  40fc89:	ret    
  40fc8a:	lea    ecx,[ebp-0x1013c]
  40fc90:	mov    BYTE PTR [ebp-0x4],0x4
  40fc94:	push   ecx
  40fc95:	jmp    0x40f922
  40fc9a:	inc    esi
  40fc9b:	cmp    esi,0x3
  40fc9e:	jl     0x40fca2
  40fca0:	mov    bl,0x1
  40fca2:	push   edi
  40fca3:	call   DWORD PTR ds:0x430050
  40fca9:	jmp    0x40f8d0
  40fcae:	cmp    DWORD PTR [ebp-0x1c],0x10
  40fcb2:	mov    ecx,DWORD PTR [ebp-0x30]
  40fcb5:	jae    0x40fcba
  40fcb7:	lea    ecx,[ebp-0x30]
  40fcba:	push   eax
  40fcbb:	push   ecx
  40fcbc:	call   DWORD PTR ds:0x4303bc
  40fcc2:	mov    DWORD PTR [ebp-0x38],0x0
  40fcc9:	lea    ecx,[ebp-0x34]
  40fccc:	call   DWORD PTR ds:0x43025c
  40fcd2:	mov    al,BYTE PTR [ebp-0x1010d]
  40fcd8:	mov    ecx,DWORD PTR [ebp-0xc]
  40fcdb:	mov    DWORD PTR fs:0x0,ecx
  40fce2:	pop    ecx
  40fce3:	pop    edi
  40fce4:	pop    esi
  40fce5:	pop    ebx
  40fce6:	mov    ecx,DWORD PTR [ebp-0x18]
  40fce9:	xor    ecx,ebp
  40fceb:	call   0x42503a
  40fcf0:	mov    esp,ebp
  40fcf2:	pop    ebp
  40fcf3:	ret    0x4
  40fcf6:	int3   
  40fcf7:	int3   
  40fcf8:	int3   
  40fcf9:	int3   
  40fcfa:	int3   
  40fcfb:	int3   
  40fcfc:	int3   
  40fcfd:	int3   
  40fcfe:	int3   
  40fcff:	int3   
  40fd00:	push   0xffffffff
  40fd02:	push   0x42b519
  40fd07:	mov    eax,fs:0x0
  40fd0d:	push   eax
  40fd0e:	push   esi
  40fd0f:	push   edi
  40fd10:	mov    eax,ds:0x43e020
  40fd15:	xor    eax,esp
  40fd17:	push   eax
  40fd18:	lea    eax,[esp+0xc]
  40fd1c:	mov    fs:0x0,eax
  40fd22:	mov    edi,DWORD PTR [esp+0x1c]
  40fd26:	lea    esi,[edi+0x4c]
  40fd29:	mov    DWORD PTR [esp+0x14],0x0
  40fd31:	call   0x413610
  40fd36:	mov    ecx,edi
  40fd38:	mov    DWORD PTR [esp+0x14],0xffffffff
  40fd40:	call   DWORD PTR ds:0x43025c
  40fd46:	mov    ecx,DWORD PTR [esp+0xc]
  40fd4a:	mov    DWORD PTR fs:0x0,ecx
  40fd51:	pop    ecx
  40fd52:	pop    edi
  40fd53:	pop    esi
  40fd54:	add    esp,0xc
  40fd57:	ret    0x4
  40fd5a:	int3   
  40fd5b:	int3   
  40fd5c:	int3   
  40fd5d:	int3   
  40fd5e:	int3   
  40fd5f:	int3   
  40fd60:	push   esi
  40fd61:	push   edi
  40fd62:	mov    edi,DWORD PTR ds:0x430050
  40fd68:	xor    esi,esi
  40fd6a:	lea    ebx,[ebx+0x0]
  40fd70:	mov    ecx,0x431088
  40fd75:	call   0x41f490
  40fd7a:	test   eax,eax
  40fd7c:	jne    0x40fd8c
  40fd7e:	mov    ecx,0x431088
  40fd83:	call   0x41f2b0
  40fd88:	test   eax,eax
  40fd8a:	je     0x40fd99
  40fd8c:	push   0x12c
  40fd91:	call   edi
  40fd93:	inc    esi
  40fd94:	cmp    esi,0xa
  40fd97:	jl     0x40fd70
  40fd99:	xor    esi,esi
  40fd9b:	jmp    0x40fda0
  40fd9d:	lea    ecx,[ecx+0x0]
  40fda0:	mov    ecx,0x431a60
  40fda5:	call   0x41f490
  40fdaa:	test   eax,eax
  40fdac:	jne    0x40fdbc
  40fdae:	mov    ecx,0x431a60
  40fdb3:	call   0x41f2b0
  40fdb8:	test   eax,eax
  40fdba:	je     0x40fdc9
  40fdbc:	push   0x12c
  40fdc1:	call   edi
  40fdc3:	inc    esi
  40fdc4:	cmp    esi,0xa
  40fdc7:	jl     0x40fda0
  40fdc9:	mov    ecx,0x431088
  40fdce:	call   0x41f2b0
  40fdd3:	test   eax,eax
  40fdd5:	pop    edi
  40fdd6:	sete   al
  40fdd9:	pop    esi
  40fdda:	ret    
  40fddb:	int3   
  40fddc:	int3   
  40fddd:	int3   
  40fdde:	int3   
  40fddf:	int3   
  40fde0:	push   0xffffffff
  40fde2:	push   0x42e87c
  40fde7:	mov    eax,fs:0x0
  40fded:	push   eax
  40fdee:	sub    esp,0x30
  40fdf1:	push   ebp
  40fdf2:	push   esi
  40fdf3:	push   edi
  40fdf4:	mov    eax,ds:0x43e020
  40fdf9:	xor    eax,esp
  40fdfb:	push   eax
  40fdfc:	lea    eax,[esp+0x40]
  40fe00:	mov    fs:0x0,eax
  40fe06:	mov    ebp,DWORD PTR [esp+0x50]
  40fe0a:	push   ebp
  40fe0b:	mov    DWORD PTR [esp+0x4c],0x0
  40fe13:	call   0x4215f0
  40fe18:	mov    edi,DWORD PTR ds:0x4400a4
  40fe1e:	test   edi,edi
  40fe20:	je     0x40fe8b
  40fe22:	sub    esp,0x28
  40fe25:	mov    DWORD PTR [esp+0x3c],esp
  40fe29:	mov    esi,esp
  40fe2b:	sub    esp,0x1c
  40fe2e:	lea    eax,[esp+0x98]
  40fe35:	mov    ecx,esp
  40fe37:	mov    DWORD PTR [esp+0x58],esp
  40fe3b:	push   eax
  40fe3c:	call   DWORD PTR ds:0x430118
  40fe42:	push   ebp
  40fe43:	push   edi
  40fe44:	call   0x4177f0
  40fe49:	add    esp,0x24
  40fe4c:	lea    esi,[esp+0x44]
  40fe50:	call   0x4178c0
  40fe55:	mov    ecx,esi
  40fe57:	push   ecx
  40fe58:	mov    BYTE PTR [esp+0x4c],0x1
  40fe5d:	call   0x403400
  40fe62:	mov    BYTE PTR [esp+0x48],0x0
  40fe67:	mov    eax,DWORD PTR [esp+0x1c]
  40fe6b:	test   eax,eax
  40fe6d:	je     0x40fe8b
  40fe6f:	test   al,0x1
  40fe71:	jne    0x40fe8b
  40fe73:	and    eax,0xfffffffe
  40fe76:	mov    eax,DWORD PTR [eax]
  40fe78:	test   eax,eax
  40fe7a:	je     0x40fe8b
  40fe7c:	lea    edx,[esp+0x24]
  40fe80:	push   0x2
  40fe82:	push   edx
  40fe83:	mov    ecx,edx
  40fe85:	push   ecx
  40fe86:	call   eax
  40fe88:	add    esp,0xc
  40fe8b:	cmp    BYTE PTR [ebx+0x68],0x0
  40fe8f:	je     0x40fe9c
  40fe91:	mov    esi,ebx
  40fe93:	call   0x40f4a0
  40fe98:	mov    BYTE PTR [ebx+0x68],0x0
  40fe9c:	push   0x2c
  40fe9e:	call   0x425050
  40fea3:	add    esp,0x4
  40fea6:	mov    DWORD PTR [esp+0x18],eax
  40feaa:	mov    BYTE PTR [esp+0x48],0x2
  40feaf:	test   eax,eax
  40feb1:	je     0x40fec1
  40feb3:	lea    edx,[esp+0x54]
  40feb7:	push   edx
  40feb8:	push   ebp
  40feb9:	push   eax
  40feba:	call   0x40d250
  40febf:	jmp    0x40fec3
  40fec1:	xor    eax,eax
  40fec3:	mov    BYTE PTR [esp+0x48],0x0
  40fec8:	mov    DWORD PTR [esp+0x14],eax
  40fecc:	push   0x435cdc
  40fed1:	lea    eax,[esp+0x18]
  40fed5:	push   eax
  40fed6:	call   0x429e76
  40fedb:	int3   
  40fedc:	int3   
  40fedd:	int3   
  40fede:	int3   
  40fedf:	int3   
  40fee0:	push   ebp
  40fee1:	mov    ebp,esp
  40fee3:	and    esp,0xfffffff8
  40fee6:	push   ecx
  40fee7:	push   ebx
  40fee8:	push   esi
  40fee9:	mov    esi,DWORD PTR [eax]
  40feeb:	mov    ecx,DWORD PTR [esi+0x38]
  40feee:	sub    ecx,DWORD PTR [esi+0x34]
  40fef1:	add    esi,0x28
  40fef4:	mov    eax,0x2aaaaaab
  40fef9:	imul   ecx
  40fefb:	sar    edx,0x4
  40fefe:	mov    eax,edx
  40ff00:	shr    eax,0x1f
  40ff03:	add    eax,edx
  40ff05:	xor    ebx,ebx
  40ff07:	push   edi
  40ff08:	test   eax,eax
  40ff0a:	jle    0x40ffa4
  40ff10:	xor    edi,edi
  40ff12:	mov    DWORD PTR [esp+0xc],edi
  40ff16:	jmp    0x40ff1c
  40ff18:	mov    edi,DWORD PTR [esp+0xc]
  40ff1c:	cmp    ebx,eax
  40ff1e:	jb     0x40ff26
  40ff20:	call   DWORD PTR ds:0x430390
  40ff26:	mov    eax,DWORD PTR [esi+0xc]
  40ff29:	mov    ecx,DWORD PTR [esi+0x10]
  40ff2c:	sub    ecx,eax
  40ff2e:	test   BYTE PTR [edi+eax*1+0x58],0x8
  40ff33:	mov    eax,0x2aaaaaab
  40ff38:	je     0x40ff5b
  40ff3a:	imul   ecx
  40ff3c:	sar    edx,0x4
  40ff3f:	mov    ecx,edx
  40ff41:	shr    ecx,0x1f
  40ff44:	add    ecx,edx
  40ff46:	cmp    ebx,ecx
  40ff48:	jb     0x40ff50
  40ff4a:	call   DWORD PTR ds:0x430390
  40ff50:	mov    edx,DWORD PTR [esi+0xc]
  40ff53:	add    edx,edi
  40ff55:	mov    edi,DWORD PTR [ebp+0xc]
  40ff58:	push   edx
  40ff59:	jmp    0x40ff7a
  40ff5b:	imul   ecx
  40ff5d:	sar    edx,0x4
  40ff60:	mov    eax,edx
  40ff62:	shr    eax,0x1f
  40ff65:	add    eax,edx
  40ff67:	cmp    ebx,eax
  40ff69:	jb     0x40ff71
  40ff6b:	call   DWORD PTR ds:0x430390
  40ff71:	mov    ecx,DWORD PTR [esi+0xc]
  40ff74:	add    ecx,edi
  40ff76:	mov    edi,DWORD PTR [ebp+0x8]
  40ff79:	push   ecx
  40ff7a:	call   0x4129b0
  40ff7f:	mov    ecx,DWORD PTR [esi+0x10]
  40ff82:	sub    ecx,DWORD PTR [esi+0xc]
  40ff85:	add    DWORD PTR [esp+0xc],0x60
  40ff8a:	mov    eax,0x2aaaaaab
  40ff8f:	imul   ecx
  40ff91:	sar    edx,0x4
  40ff94:	mov    eax,edx
  40ff96:	shr    eax,0x1f
  40ff99:	inc    ebx
  40ff9a:	add    eax,edx
  40ff9c:	cmp    ebx,eax
  40ff9e:	jl     0x40ff18
  40ffa4:	pop    edi
  40ffa5:	pop    esi
  40ffa6:	pop    ebx
  40ffa7:	mov    esp,ebp
  40ffa9:	pop    ebp
  40ffaa:	ret    0x8
  40ffad:	int3   
  40ffae:	int3   
  40ffaf:	int3   
  40ffb0:	push   0xffffffff
  40ffb2:	push   0x42e9ec
  40ffb7:	mov    eax,fs:0x0
  40ffbd:	push   eax
  40ffbe:	sub    esp,0x98
  40ffc4:	mov    eax,ds:0x43e020
  40ffc9:	xor    eax,esp
  40ffcb:	mov    DWORD PTR [esp+0x94],eax
  40ffd2:	push   ebx
  40ffd3:	push   ebp
  40ffd4:	push   esi
  40ffd5:	push   edi
  40ffd6:	mov    eax,ds:0x43e020
  40ffdb:	xor    eax,esp
  40ffdd:	push   eax
  40ffde:	lea    eax,[esp+0xac]
  40ffe5:	mov    fs:0x0,eax
  40ffeb:	mov    ebp,DWORD PTR [esp+0xbc]
  40fff2:	push   0x430f38
  40fff7:	mov    edi,ecx
  40fff9:	mov    esi,edx
  40fffb:	call   0x41fb20
  410000:	mov    ebx,DWORD PTR ds:0x4301a4
  410006:	push   eax
  410007:	lea    eax,[esp+0x5c]
  41000b:	push   eax
  41000c:	call   ebx
  41000e:	add    esp,0xc
  410011:	push   esi
  410012:	push   eax
  410013:	lea    ecx,[esp+0x78]
  410017:	push   ecx
  410018:	mov    DWORD PTR [esp+0xc0],0x0
  410023:	call   DWORD PTR ds:0x4301a0
  410029:	add    esp,0xc
  41002c:	lea    ecx,[esp+0x54]
  410030:	mov    BYTE PTR [esp+0xb4],0x2
  410038:	call   DWORD PTR ds:0x430264
  41003e:	cmp    DWORD PTR [esp+0x88],0x8
  410046:	mov    ecx,DWORD PTR [edi]
  410048:	mov    eax,DWORD PTR [esp+0x74]
  41004c:	jae    0x410052
  41004e:	lea    eax,[esp+0x74]
  410052:	mov    edx,DWORD PTR [ecx]
  410054:	push   eax
  410055:	mov    eax,DWORD PTR [edx+0x24]
  410058:	call   eax
  41005a:	test   al,al
  41005c:	jne    0x4100f0
  410062:	mov    ecx,DWORD PTR [edi]
  410064:	mov    eax,DWORD PTR [esp+0x74]
  410068:	mov    edi,0x8
  41006d:	cmp    DWORD PTR [esp+0x88],edi
  410074:	jae    0x41007a
  410076:	lea    eax,[esp+0x74]
  41007a:	mov    edx,DWORD PTR [ecx]
  41007c:	push   0x0
  41007e:	push   0x0
  410080:	push   eax
  410081:	mov    eax,DWORD PTR [edx+0x4]
  410084:	call   eax
  410086:	test   al,al
  410088:	jne    0x4100f0
  41008a:	push   0x431a8c
  41008f:	lea    ecx,[esp+0x20]
  410093:	call   DWORD PTR ds:0x43011c
  410099:	mov    BYTE PTR [esp+0xb4],0x3
  4100a1:	cmp    DWORD PTR [esp+0x88],edi
  4100a8:	mov    edi,DWORD PTR [esp+0x74]
  4100ac:	jae    0x4100b2
  4100ae:	lea    edi,[esp+0x74]
  4100b2:	call   0x41f6c0
  4100b7:	cmp    DWORD PTR [esp+0x34],0x10
  4100bc:	mov    ecx,DWORD PTR ds:0x43ff8c
  4100c2:	mov    eax,DWORD PTR [esp+0x20]
  4100c6:	jae    0x4100cc
  4100c8:	lea    eax,[esp+0x20]
  4100cc:	mov    edx,DWORD PTR [ecx]
  4100ce:	push   eax
  4100cf:	mov    eax,DWORD PTR [edx+0x8]
  4100d2:	call   eax
  4100d4:	sub    esp,0x1c
  4100d7:	mov    esi,esp
  4100d9:	mov    DWORD PTR [esp+0x34],esp
  4100dd:	push   edi
  4100de:	push   eax
  4100df:	call   0x40a710
  4100e4:	add    esp,0x8
  4100e7:	push   0x12
  4100e9:	mov    ebx,ebp
  4100eb:	call   0x40fde0
  4100f0:	lea    edi,[esp+0x38]
  4100f4:	mov    ecx,ebp
  4100f6:	call   0x40e230
  4100fb:	push   0x430f38
  410100:	push   eax
  410101:	lea    ecx,[esp+0x24]
  410105:	push   ecx
  410106:	mov    BYTE PTR [esp+0xc0],0x4
  41010e:	call   ebx
  410110:	add    esp,0xc
  410113:	push   esi
  410114:	push   eax
  410115:	lea    edx,[esp+0x94]
  41011c:	push   edx
  41011d:	mov    BYTE PTR [esp+0xc0],0x5
  410125:	call   DWORD PTR ds:0x4301a0
  41012b:	add    esp,0xc
  41012e:	lea    ecx,[esp+0x1c]
  410132:	mov    BYTE PTR [esp+0xb4],0x7
  41013a:	call   DWORD PTR ds:0x430264
  410140:	mov    ecx,edi
  410142:	mov    BYTE PTR [esp+0xb4],0x8
  41014a:	call   DWORD PTR ds:0x430264
  410150:	mov    eax,DWORD PTR [esp+0x90]
  410157:	mov    esi,0x8
  41015c:	cmp    DWORD PTR [esp+0xa4],esi
  410163:	jae    0x41016c
  410165:	lea    eax,[esp+0x90]
  41016c:	push   0x0
  41016e:	push   eax
  41016f:	call   DWORD PTR ds:0x4302e0
  410175:	add    esp,0x8
  410178:	test   eax,eax
  41017a:	je     0x4101be
  41017c:	lea    eax,[esp+0x8c]
  410183:	push   eax
  410184:	call   0x40da00
  410189:	mov    ecx,DWORD PTR [esp+0x94]
  410190:	add    esp,0x4
  410193:	cmp    DWORD PTR [esp+0xa4],esi
  41019a:	jae    0x4101a3
  41019c:	lea    ecx,[esp+0x90]
  4101a3:	mov    eax,DWORD PTR [esp+0x74]
  4101a7:	cmp    DWORD PTR [esp+0x88],esi
  4101ae:	jae    0x4101b4
  4101b0:	lea    eax,[esp+0x74]
  4101b4:	push   0x0
  4101b6:	push   ecx
  4101b7:	push   eax
  4101b8:	call   DWORD PTR ds:0x43005c
  4101be:	lea    ecx,[esp+0x8c]
  4101c5:	mov    BYTE PTR [esp+0xb4],0x2
  4101cd:	call   DWORD PTR ds:0x430264
  4101d3:	lea    ecx,[esp+0x70]
  4101d7:	mov    DWORD PTR [esp+0xb4],0xffffffff
  4101e2:	call   DWORD PTR ds:0x430264
  4101e8:	mov    al,0x1
  4101ea:	mov    ecx,DWORD PTR [esp+0xac]
  4101f1:	mov    DWORD PTR fs:0x0,ecx
  4101f8:	pop    ecx
  4101f9:	pop    edi
  4101fa:	pop    esi
  4101fb:	pop    ebp
  4101fc:	pop    ebx
  4101fd:	mov    ecx,DWORD PTR [esp+0x94]
  410204:	xor    ecx,esp
  410206:	call   0x42503a
  41020b:	add    esp,0xa4
  410211:	ret    0x4
  410214:	int3   
  410215:	int3   
  410216:	int3   
  410217:	int3   
  410218:	int3   
  410219:	int3   
  41021a:	int3   
  41021b:	int3   
  41021c:	int3   
  41021d:	int3   
  41021e:	int3   
  41021f:	int3   
  410220:	push   ebp
  410221:	mov    ebp,esp
  410223:	and    esp,0xfffffff8
  410226:	push   0xffffffff
  410228:	push   0x42bfca
  41022d:	mov    eax,fs:0x0
  410233:	push   eax
  410234:	sub    esp,0x30
  410237:	mov    eax,ds:0x43e020
  41023c:	xor    eax,esp
  41023e:	mov    DWORD PTR [esp+0x28],eax
  410242:	push   ebx
  410243:	push   esi
  410244:	push   edi
  410245:	mov    eax,ds:0x43e020
  41024a:	xor    eax,esp
  41024c:	push   eax
  41024d:	lea    eax,[esp+0x40]
  410251:	mov    fs:0x0,eax
  410257:	mov    esi,ecx
  410259:	xor    edi,edi
  41025b:	lea    ecx,[esp+0x1c]
  41025f:	mov    DWORD PTR [esp+0x18],edi
  410263:	call   DWORD PTR ds:0x430260
  410269:	mov    DWORD PTR [esp+0x48],edi
  41026d:	mov    edi,0x430994
  410272:	lea    ecx,[esp+0x18]
  410276:	call   0x4130f0
  41027b:	mov    eax,DWORD PTR [esi+0xa4]
  410281:	mov    ecx,DWORD PTR [eax]
  410283:	lea    edi,[esi+0x8c]
  410289:	mov    esi,DWORD PTR [edi]
  41028b:	mov    DWORD PTR [esp+0x14],ecx
  41028f:	mov    DWORD PTR [esp+0x10],esi
  410293:	mov    ebx,DWORD PTR [edi+0x18]
  410296:	mov    eax,DWORD PTR [edi]
  410298:	test   esi,esi
  41029a:	je     0x4102a0
  41029c:	cmp    esi,eax
  41029e:	je     0x4102aa
  4102a0:	call   DWORD PTR ds:0x430390
  4102a6:	mov    ecx,DWORD PTR [esp+0x14]
  4102aa:	cmp    ecx,ebx
  4102ac:	je     0x4102fe
  4102ae:	mov    ebx,DWORD PTR [esp+0x18]
  4102b2:	test   esi,esi
  4102b4:	jne    0x4102da
  4102b6:	call   DWORD PTR ds:0x430390
  4102bc:	mov    ecx,DWORD PTR [esp+0x14]
  4102c0:	cmp    ecx,DWORD PTR [esi+0x18]
  4102c3:	jne    0x4102cf
  4102c5:	call   DWORD PTR ds:0x430390
  4102cb:	mov    ecx,DWORD PTR [esp+0x14]
  4102cf:	cmp    DWORD PTR [ecx+0x24],0x8
  4102d3:	jb     0x4102de
  4102d5:	mov    eax,DWORD PTR [ecx+0x10]
  4102d8:	jmp    0x4102e1
  4102da:	mov    esi,DWORD PTR [esi]
  4102dc:	jmp    0x4102c0
  4102de:	lea    eax,[ecx+0x10]
  4102e1:	mov    edx,DWORD PTR [ebx]
  4102e3:	push   eax
  4102e4:	mov    eax,DWORD PTR [edx+0x1c]
  4102e7:	mov    ecx,ebx
  4102e9:	call   eax
  4102eb:	lea    esi,[esp+0x10]
  4102ef:	call   0x415a40
  4102f4:	mov    esi,DWORD PTR [esp+0x10]
  4102f8:	mov    ecx,DWORD PTR [esp+0x14]
  4102fc:	jmp    0x410293
  4102fe:	mov    ecx,DWORD PTR [edi+0x18]
  410301:	mov    ebx,DWORD PTR [ecx+0x4]
  410304:	cmp    BYTE PTR [ebx+0x29],0x0
  410308:	mov    esi,ebx
  41030a:	jne    0x410337
  41030c:	lea    esp,[esp+0x0]
  410310:	mov    edx,DWORD PTR [esi+0x8]
  410313:	push   edx
  410314:	mov    ecx,edi
  410316:	call   0x413e30
  41031b:	mov    esi,DWORD PTR [esi]
  41031d:	lea    ecx,[ebx+0xc]
  410320:	call   DWORD PTR ds:0x430264
  410326:	push   ebx
  410327:	call   0x42504a
  41032c:	add    esp,0x4
  41032f:	cmp    BYTE PTR [esi+0x29],0x0
  410333:	mov    ebx,esi
  410335:	je     0x410310
  410337:	mov    eax,DWORD PTR [edi+0x18]
  41033a:	mov    DWORD PTR [eax+0x4],eax
  41033d:	mov    eax,DWORD PTR [edi+0x18]
  410340:	mov    DWORD PTR [edi+0x1c],0x0
  410347:	mov    DWORD PTR [eax],eax
  410349:	mov    edi,DWORD PTR [edi+0x18]
  41034c:	lea    eax,[esp+0x18]
  410350:	push   eax
  410351:	mov    DWORD PTR [edi+0x8],edi
  410354:	mov    DWORD PTR [esp+0x4c],0xffffffff
  41035c:	call   0x40b540
  410361:	mov    al,0x1
  410363:	mov    ecx,DWORD PTR [esp+0x40]
  410367:	mov    DWORD PTR fs:0x0,ecx
  41036e:	pop    ecx
  41036f:	pop    edi
  410370:	pop    esi
  410371:	pop    ebx
  410372:	mov    ecx,DWORD PTR [esp+0x28]
  410376:	xor    ecx,esp
  410378:	call   0x42503a
  41037d:	mov    esp,ebp
  41037f:	pop    ebp
  410380:	ret    
  410381:	int3   
  410382:	int3   
  410383:	int3   
  410384:	int3   
  410385:	int3   
  410386:	int3   
  410387:	int3   
  410388:	int3   
  410389:	int3   
  41038a:	int3   
  41038b:	int3   
  41038c:	int3   
  41038d:	int3   
  41038e:	int3   
  41038f:	int3   
  410390:	push   ebp
  410391:	mov    ebp,esp
  410393:	and    esp,0xfffffff8
  410396:	push   0xffffffff
  410398:	push   0x42ec41
  41039d:	mov    eax,fs:0x0
  4103a3:	push   eax
  4103a4:	sub    esp,0x140
  4103aa:	mov    eax,ds:0x43e020
  4103af:	xor    eax,esp
  4103b1:	mov    DWORD PTR [esp+0x138],eax
  4103b8:	push   ebx
  4103b9:	push   esi
  4103ba:	push   edi
  4103bb:	mov    eax,ds:0x43e020
  4103c0:	xor    eax,esp
  4103c2:	push   eax
  4103c3:	lea    eax,[esp+0x150]
  4103ca:	mov    fs:0x0,eax
  4103d0:	mov    eax,DWORD PTR [ebp+0x8]
  4103d3:	mov    esi,ecx
  4103d5:	xor    ebx,ebx
  4103d7:	lea    ecx,[esp+0x110]
  4103de:	mov    DWORD PTR [esp+0x18],eax
  4103e2:	mov    DWORD PTR [esp+0x10c],ebx
  4103e9:	call   DWORD PTR ds:0x430260
  4103ef:	mov    edi,0x430994
  4103f4:	lea    ecx,[esp+0x10c]
  4103fb:	mov    DWORD PTR [esp+0x158],ebx
  410402:	call   0x4130f0
  410407:	mov    ecx,DWORD PTR [esi+0x10]
  41040a:	sub    ecx,DWORD PTR [esi+0xc]
  41040d:	mov    eax,0x2aaaaaab
  410412:	imul   ecx
  410414:	sar    edx,0x4
  410417:	mov    eax,edx
  410419:	shr    eax,0x1f
  41041c:	xor    edi,edi
  41041e:	add    eax,edx
  410420:	cmp    eax,ebx
  410422:	mov    DWORD PTR [esp+0x10],edi
  410426:	jle    0x4108e7
  41042c:	mov    DWORD PTR [esp+0x14],ebx
  410430:	cmp    edi,eax
  410432:	jb     0x41043a
  410434:	call   DWORD PTR ds:0x430390
  41043a:	mov    ecx,DWORD PTR [esi+0xc]
  41043d:	test   BYTE PTR [ebx+ecx*1+0x58],0x2
  410442:	push   0x430f38
  410447:	je     0x4106c8
  41044d:	call   0x41fb20
  410452:	push   eax
  410453:	lea    edx,[esp+0x88]
  41045a:	push   edx
  41045b:	call   DWORD PTR ds:0x4301a4
  410461:	add    esp,0xc
  410464:	mov    DWORD PTR [esp+0x10],eax
  410468:	mov    BYTE PTR [esp+0x158],0x1
  410470:	mov    ecx,DWORD PTR [esi+0x10]
  410473:	sub    ecx,DWORD PTR [esi+0xc]
  410476:	mov    eax,0x2aaaaaab
  41047b:	imul   ecx
  41047d:	sar    edx,0x4
  410480:	mov    eax,edx
  410482:	shr    eax,0x1f
  410485:	add    eax,edx
  410487:	cmp    edi,eax
  410489:	jb     0x410491
  41048b:	call   DWORD PTR ds:0x430390
  410491:	mov    eax,DWORD PTR [esi+0xc]
  410494:	mov    ecx,DWORD PTR [esp+0x10]
  410498:	add    eax,ebx
  41049a:	add    eax,0x20
  41049d:	push   eax
  41049e:	push   ecx
  41049f:	lea    edx,[esp+0x134]
  4104a6:	push   edx
  4104a7:	call   DWORD PTR ds:0x4301a0
  4104ad:	add    esp,0xc
  4104b0:	lea    ecx,[esp+0x80]
  4104b7:	mov    BYTE PTR [esp+0x158],0x3
  4104bf:	call   DWORD PTR ds:0x430264
  4104c5:	mov    ecx,DWORD PTR [esi+0x10]
  4104c8:	sub    ecx,DWORD PTR [esi+0xc]
  4104cb:	mov    eax,0x2aaaaaab
  4104d0:	imul   ecx
  4104d2:	sar    edx,0x4
  4104d5:	mov    eax,edx
  4104d7:	shr    eax,0x1f
  4104da:	add    eax,edx
  4104dc:	cmp    edi,eax
  4104de:	jb     0x4104e6
  4104e0:	call   DWORD PTR ds:0x430390
  4104e6:	mov    ecx,DWORD PTR [esi+0xc]
  4104e9:	mov    eax,DWORD PTR [esp+0x18]
  4104ed:	lea    edx,[ebx+ecx*1+0x20]
  4104f1:	push   eax
  4104f2:	lea    ecx,[esp+0x110]
  4104f9:	call   0x40ffb0
  4104fe:	push   0x430f38
  410503:	call   0x41fb20
  410508:	push   eax
  410509:	lea    ecx,[esp+0x28]
  41050d:	push   ecx
  41050e:	call   DWORD PTR ds:0x4301a4
  410514:	add    esp,0xc
  410517:	mov    DWORD PTR [esp+0x10],eax
  41051b:	mov    BYTE PTR [esp+0x158],0x4
  410523:	mov    ecx,DWORD PTR [esi+0x10]
  410526:	sub    ecx,DWORD PTR [esi+0xc]
  410529:	mov    eax,0x2aaaaaab
  41052e:	imul   ecx
  410530:	sar    edx,0x4
  410533:	mov    eax,edx
  410535:	shr    eax,0x1f
  410538:	add    eax,edx
  41053a:	cmp    edi,eax
  41053c:	jb     0x410544
  41053e:	call   DWORD PTR ds:0x430390
  410544:	mov    eax,DWORD PTR [esi+0xc]
  410547:	mov    ecx,DWORD PTR [esp+0x10]
  41054b:	add    eax,ebx
  41054d:	add    eax,0x20
  410550:	push   eax
  410551:	push   ecx
  410552:	lea    edx,[esp+0x50]
  410556:	push   edx
  410557:	call   DWORD PTR ds:0x4301a0
  41055d:	add    esp,0xc
  410560:	push   eax
  410561:	mov    eax,DWORD PTR [esp+0x1c]
  410565:	add    eax,0x8c
  41056a:	push   eax
  41056b:	lea    ebx,[esp+0x44]
  41056f:	mov    BYTE PTR [esp+0x160],0x5
  410577:	call   0x412f50
  41057c:	lea    ecx,[esp+0x48]
  410580:	mov    BYTE PTR [esp+0x158],0x4
  410588:	call   DWORD PTR ds:0x430264
  41058e:	lea    ecx,[esp+0x20]
  410592:	mov    BYTE PTR [esp+0x158],0x3
  41059a:	call   DWORD PTR ds:0x430264
  4105a0:	push   0x430f38
  4105a5:	call   0x41fb20
  4105aa:	push   eax
  4105ab:	lea    ecx,[esp+0x28]
  4105af:	push   ecx
  4105b0:	call   DWORD PTR ds:0x4301a4
  4105b6:	add    esp,0xc
  4105b9:	mov    ebx,eax
  4105bb:	mov    BYTE PTR [esp+0x158],0x6
  4105c3:	mov    ecx,DWORD PTR [esi+0x10]
  4105c6:	sub    ecx,DWORD PTR [esi+0xc]
  4105c9:	mov    eax,0x2aaaaaab
  4105ce:	imul   ecx
  4105d0:	sar    edx,0x4
  4105d3:	mov    eax,edx
  4105d5:	shr    eax,0x1f
  4105d8:	add    eax,edx
  4105da:	cmp    edi,eax
  4105dc:	jb     0x4105e4
  4105de:	call   DWORD PTR ds:0x430390
  4105e4:	mov    eax,DWORD PTR [esi+0xc]
  4105e7:	add    eax,DWORD PTR [esp+0x14]
  4105eb:	lea    ecx,[esp+0xd4]
  4105f2:	add    eax,0x4
  4105f5:	push   eax
  4105f6:	push   ebx
  4105f7:	push   ecx
  4105f8:	call   DWORD PTR ds:0x4301a0
  4105fe:	add    esp,0xc
  410601:	mov    ebx,0x8
  410606:	lea    ecx,[esp+0x20]
  41060a:	mov    BYTE PTR [esp+0x158],bl
  410611:	call   DWORD PTR ds:0x430264
  410617:	mov    eax,DWORD PTR [esp+0xd8]
  41061e:	cmp    DWORD PTR [esp+0xec],ebx
  410625:	jae    0x41062e
  410627:	lea    eax,[esp+0xd8]
  41062e:	mov    ecx,DWORD PTR [esp+0x10c]
  410635:	mov    edx,DWORD PTR [ecx]
  410637:	push   eax
  410638:	mov    eax,DWORD PTR [edx+0x28]
  41063b:	call   eax
  41063d:	test   al,al
  41063f:	je     0x410695
  410641:	mov    eax,DWORD PTR [esp+0xd8]
  410648:	cmp    DWORD PTR [esp+0xec],ebx
  41064f:	jae    0x410658
  410651:	lea    eax,[esp+0xd8]
  410658:	mov    ecx,DWORD PTR [esp+0x10c]
  41065f:	mov    edx,DWORD PTR [ecx]
  410661:	push   eax
  410662:	mov    eax,DWORD PTR [edx+0x18]
  410665:	call   eax
  410667:	mov    eax,DWORD PTR [esp+0xd8]
  41066e:	cmp    DWORD PTR [esp+0xec],ebx
  410675:	jae    0x41067e
  410677:	lea    eax,[esp+0xd8]
  41067e:	mov    ecx,DWORD PTR [esp+0x10c]
  410685:	mov    edx,DWORD PTR [ecx]
  410687:	push   eax
  410688:	mov    eax,DWORD PTR [edx+0x28]
  41068b:	call   eax
  41068d:	test   al,al
  41068f:	jne    0x410927
  410695:	lea    ecx,[esp+0xd4]
  41069c:	mov    BYTE PTR [esp+0x158],0x3
  4106a4:	call   DWORD PTR ds:0x430264
  4106aa:	lea    ecx,[esp+0x12c]
  4106b1:	mov    BYTE PTR [esp+0x158],0x0
  4106b9:	call   DWORD PTR ds:0x430264
  4106bf:	mov    ebx,DWORD PTR [esp+0x14]
  4106c3:	jmp    0x4108bc
  4106c8:	call   0x41fb20
  4106cd:	push   eax
  4106ce:	lea    ecx,[esp+0x134]
  4106d5:	push   ecx
  4106d6:	call   DWORD PTR ds:0x4301a4
  4106dc:	add    esp,0xc
  4106df:	mov    DWORD PTR [esp+0x1c],eax
  4106e3:	mov    BYTE PTR [esp+0x158],0xa
  4106eb:	mov    ecx,DWORD PTR [esi+0x10]
  4106ee:	sub    ecx,DWORD PTR [esi+0xc]
  4106f1:	mov    eax,0x2aaaaaab
  4106f6:	imul   ecx
  4106f8:	sar    edx,0x4
  4106fb:	mov    eax,edx
  4106fd:	shr    eax,0x1f
  410700:	add    eax,edx
  410702:	cmp    edi,eax
  410704:	jb     0x41070c
  410706:	call   DWORD PTR ds:0x430390
  41070c:	mov    eax,DWORD PTR [esi+0xc]
  41070f:	mov    ecx,DWORD PTR [esp+0x1c]
  410713:	add    eax,ebx
  410715:	add    eax,0x4
  410718:	push   eax
  410719:	push   ecx
  41071a:	lea    edx,[esp+0xc0]
  410721:	push   edx
  410722:	call   DWORD PTR ds:0x4301a0
  410728:	add    esp,0xc
  41072b:	lea    ecx,[esp+0x12c]
  410732:	mov    BYTE PTR [esp+0x158],0xc
  41073a:	call   DWORD PTR ds:0x430264
  410740:	cmp    DWORD PTR [esp+0xd0],0x8
  410748:	mov    eax,DWORD PTR [esp+0xbc]
  41074f:	jae    0x410758
  410751:	lea    eax,[esp+0xbc]
  410758:	push   0x0
  41075a:	push   eax
  41075b:	call   DWORD PTR ds:0x4302e0
  410761:	add    esp,0x8
  410764:	test   eax,eax
  410766:	jne    0x4108a7
  41076c:	mov    ecx,DWORD PTR [esp+0x18]
  410770:	lea    edi,[esp+0x64]
  410774:	call   0x40e230
  410779:	push   0x430f38
  41077e:	push   eax
  41077f:	lea    eax,[esp+0xa4]
  410786:	push   eax
  410787:	mov    BYTE PTR [esp+0x164],0xd
  41078f:	call   DWORD PTR ds:0x4301a4
  410795:	add    esp,0xc
  410798:	mov    edi,eax
  41079a:	mov    BYTE PTR [esp+0x158],0xe
  4107a2:	mov    ecx,DWORD PTR [esi+0x10]
  4107a5:	sub    ecx,DWORD PTR [esi+0xc]
  4107a8:	mov    eax,0x2aaaaaab
  4107ad:	imul   ecx
  4107af:	sar    edx,0x4
  4107b2:	mov    ecx,edx
  4107b4:	shr    ecx,0x1f
  4107b7:	add    ecx,edx
  4107b9:	cmp    DWORD PTR [esp+0x10],ecx
  4107bd:	jb     0x4107c5
  4107bf:	call   DWORD PTR ds:0x430390
  4107c5:	mov    eax,DWORD PTR [esi+0xc]
  4107c8:	add    eax,DWORD PTR [esp+0x14]
  4107cc:	lea    edx,[esp+0xf0]
  4107d3:	add    eax,0x4
  4107d6:	push   eax
  4107d7:	push   edi
  4107d8:	push   edx
  4107d9:	call   DWORD PTR ds:0x4301a0
  4107df:	add    esp,0xc
  4107e2:	lea    ecx,[esp+0x9c]
  4107e9:	mov    BYTE PTR [esp+0x158],0x10
  4107f1:	call   DWORD PTR ds:0x430264
  4107f7:	lea    ecx,[esp+0x64]
  4107fb:	mov    BYTE PTR [esp+0x158],0x11
  410803:	call   DWORD PTR ds:0x430264
  410809:	mov    eax,DWORD PTR [esp+0xf4]
  410810:	mov    edi,0x8
  410815:	cmp    DWORD PTR [esp+0x108],edi
  41081c:	jae    0x410825
  41081e:	lea    eax,[esp+0xf4]
  410825:	push   0x0
  410827:	push   eax
  410828:	call   DWORD PTR ds:0x4302e0
  41082e:	add    esp,0x8
  410831:	test   eax,eax
  410833:	je     0x4109a1
  410839:	lea    eax,[esp+0xf0]
  410840:	push   eax
  410841:	call   0x40da00
  410846:	mov    ecx,DWORD PTR [esp+0xf8]
  41084d:	add    esp,0x4
  410850:	cmp    DWORD PTR [esp+0x108],edi
  410857:	jae    0x410860
  410859:	lea    ecx,[esp+0xf4]
  410860:	mov    eax,DWORD PTR [esp+0xbc]
  410867:	cmp    DWORD PTR [esp+0xd0],edi
  41086e:	jae    0x410877
  410870:	lea    eax,[esp+0xbc]
  410877:	push   ecx
  410878:	push   eax
  410879:	call   DWORD PTR ds:0x4302e4
  41087f:	add    esp,0x8
  410882:	mov    BYTE PTR [esp+0x158],0xc
  41088a:	lea    ecx,[esp+0xf0]
  410891:	test   eax,eax
  410893:	jne    0x4109ea
  410899:	call   DWORD PTR ds:0x430264
  41089f:	mov    edi,DWORD PTR [esp+0x10]
  4108a3:	mov    ebx,DWORD PTR [esp+0x14]
  4108a7:	lea    ecx,[esp+0xb8]
  4108ae:	mov    BYTE PTR [esp+0x158],0x0
  4108b6:	call   DWORD PTR ds:0x430264
  4108bc:	mov    ecx,DWORD PTR [esi+0x10]
  4108bf:	sub    ecx,DWORD PTR [esi+0xc]
  4108c2:	mov    eax,0x2aaaaaab
  4108c7:	imul   ecx
  4108c9:	sar    edx,0x4
  4108cc:	mov    eax,edx
  4108ce:	shr    eax,0x1f
  4108d1:	inc    edi
  4108d2:	add    ebx,0x60
  4108d5:	add    eax,edx
  4108d7:	cmp    edi,eax
  4108d9:	mov    DWORD PTR [esp+0x10],edi
  4108dd:	mov    DWORD PTR [esp+0x14],ebx
  4108e1:	jl     0x410432
  4108e7:	lea    eax,[esp+0x10c]
  4108ee:	push   eax
  4108ef:	mov    DWORD PTR [esp+0x15c],0xffffffff
  4108fa:	call   0x40b540
  4108ff:	mov    al,0x1
  410901:	mov    ecx,DWORD PTR [esp+0x150]
  410908:	mov    DWORD PTR fs:0x0,ecx
  41090f:	pop    ecx
  410910:	pop    edi
  410911:	pop    esi
  410912:	pop    ebx
  410913:	mov    ecx,DWORD PTR [esp+0x138]
  41091a:	xor    ecx,esp
  41091c:	call   0x42503a
  410921:	mov    esp,ebp
  410923:	pop    ebp
  410924:	ret    0x4
  410927:	push   0x431ab4
  41092c:	lea    ecx,[esp+0xbc]
  410933:	call   DWORD PTR ds:0x43011c
  410939:	mov    BYTE PTR [esp+0x158],0x9
  410941:	mov    edi,DWORD PTR [esp+0xd8]
  410948:	cmp    DWORD PTR [esp+0xec],ebx
  41094f:	jae    0x410958
  410951:	lea    edi,[esp+0xd8]
  410958:	call   0x41f6c0
  41095d:	cmp    DWORD PTR [esp+0xd0],0x10
  410965:	mov    ecx,DWORD PTR ds:0x43ff8c
  41096b:	mov    eax,DWORD PTR [esp+0xbc]
  410972:	jae    0x41097b
  410974:	lea    eax,[esp+0xbc]
  41097b:	mov    edx,DWORD PTR [ecx]
  41097d:	push   eax
  41097e:	mov    eax,DWORD PTR [edx+0x8]
  410981:	call   eax
  410983:	sub    esp,0x1c
  410986:	mov    esi,esp
  410988:	mov    DWORD PTR [esp+0x38],esp
  41098c:	push   edi
  41098d:	push   eax
  41098e:	call   0x40a710
  410993:	mov    ebx,DWORD PTR [esp+0x3c]
  410997:	add    esp,0x8
  41099a:	push   0x13
  41099c:	call   0x40fde0
  4109a1:	lea    ecx,[esp+0xf0]
  4109a8:	mov    BYTE PTR [esp+0x158],0xc
  4109b0:	call   DWORD PTR ds:0x430264
  4109b6:	lea    ecx,[esp+0xb8]
  4109bd:	mov    BYTE PTR [esp+0x158],0x0
  4109c5:	call   DWORD PTR ds:0x430264
  4109cb:	lea    ecx,[esp+0x10c]
  4109d2:	push   ecx
  4109d3:	mov    DWORD PTR [esp+0x15c],0xffffffff
  4109de:	call   0x40b540
  4109e3:	xor    al,al
  4109e5:	jmp    0x410901
  4109ea:	call   DWORD PTR ds:0x430264
  4109f0:	lea    ecx,[esp+0xb8]
  4109f7:	mov    BYTE PTR [esp+0x158],0x0
  4109ff:	call   DWORD PTR ds:0x430264
  410a05:	lea    edx,[esp+0x10c]
  410a0c:	push   edx
  410a0d:	mov    DWORD PTR [esp+0x15c],0xffffffff
  410a18:	call   0x40b540
  410a1d:	xor    al,al
  410a1f:	jmp    0x410901
  410a24:	int3   
  410a25:	int3   
  410a26:	int3   
  410a27:	int3   
  410a28:	int3   
  410a29:	int3   
  410a2a:	int3   
  410a2b:	int3   
  410a2c:	int3   
  410a2d:	int3   
  410a2e:	int3   
  410a2f:	int3   
  410a30:	push   0xffffffff
  410a32:	push   0x42e200
  410a37:	mov    eax,fs:0x0
  410a3d:	push   eax
  410a3e:	sub    esp,0x90
  410a44:	mov    eax,ds:0x43e020
  410a49:	xor    eax,esp
  410a4b:	mov    DWORD PTR [esp+0x8c],eax
  410a52:	push   ebx
  410a53:	push   ebp
  410a54:	push   esi
  410a55:	push   edi
  410a56:	mov    eax,ds:0x43e020
  410a5b:	xor    eax,esp
  410a5d:	push   eax
  410a5e:	lea    eax,[esp+0xa4]
  410a65:	mov    fs:0x0,eax
  410a6b:	mov    ebp,DWORD PTR [esp+0xb4]
  410a72:	push   0x430f38
  410a77:	mov    esi,ecx
  410a79:	call   0x41fb20
  410a7e:	mov    ebx,DWORD PTR ds:0x4301a4
  410a84:	push   eax
  410a85:	lea    eax,[esp+0x1c]
  410a89:	push   eax
  410a8a:	call   ebx
  410a8c:	add    esp,0xc
  410a8f:	push   esi
  410a90:	push   eax
  410a91:	lea    ecx,[esp+0x8c]
  410a98:	push   ecx
  410a99:	mov    DWORD PTR [esp+0xb8],0x0
  410aa4:	call   DWORD PTR ds:0x4301a0
  410aaa:	add    esp,0xc
  410aad:	lea    ecx,[esp+0x14]
  410ab1:	mov    BYTE PTR [esp+0xac],0x2
  410ab9:	call   DWORD PTR ds:0x430264
  410abf:	lea    edi,[esp+0x30]
  410ac3:	mov    ecx,ebp
  410ac5:	call   0x40e230
  410aca:	push   0x430f38
  410acf:	push   eax
  410ad0:	lea    edx,[esp+0x54]
  410ad4:	push   edx
  410ad5:	mov    BYTE PTR [esp+0xb8],0x3
  410add:	call   ebx
  410adf:	add    esp,0xc
  410ae2:	push   esi
  410ae3:	push   eax
  410ae4:	lea    eax,[esp+0x70]
  410ae8:	push   eax
  410ae9:	mov    BYTE PTR [esp+0xb8],0x4
  410af1:	call   DWORD PTR ds:0x4301a0
  410af7:	add    esp,0xc
  410afa:	lea    ecx,[esp+0x4c]
  410afe:	mov    BYTE PTR [esp+0xac],0x6
  410b06:	call   DWORD PTR ds:0x430264
  410b0c:	mov    ecx,edi
  410b0e:	mov    BYTE PTR [esp+0xac],0x7
  410b16:	call   DWORD PTR ds:0x430264
  410b1c:	mov    eax,DWORD PTR [esp+0x88]
  410b23:	mov    edi,0x8
  410b28:	cmp    DWORD PTR [esp+0x9c],edi
  410b2f:	jae    0x410b38
  410b31:	lea    eax,[esp+0x88]
  410b38:	mov    esi,DWORD PTR ds:0x4302e0
  410b3e:	push   0x0
  410b40:	push   eax
  410b41:	call   esi
  410b43:	add    esp,0x8
  410b46:	test   eax,eax
  410b48:	jne    0x410bed
  410b4e:	lea    ecx,[esp+0x84]
  410b55:	push   ecx
  410b56:	call   0x40da00
  410b5b:	lea    edx,[esp+0x6c]
  410b5f:	add    esp,0x4
  410b62:	push   edx
  410b63:	call   0x40da00
  410b68:	mov    eax,DWORD PTR [esp+0x70]
  410b6c:	add    esp,0x4
  410b6f:	cmp    DWORD PTR [esp+0x80],edi
  410b76:	jae    0x410b7c
  410b78:	lea    eax,[esp+0x6c]
  410b7c:	push   0x0
  410b7e:	push   eax
  410b7f:	call   esi
  410b81:	add    esp,0x8
  410b84:	test   eax,eax
  410b86:	jne    0x410bb6
  410b88:	lea    ecx,[esp+0x68]
  410b8c:	mov    BYTE PTR [esp+0xac],0x2
  410b94:	call   DWORD PTR ds:0x430264
  410b9a:	lea    ecx,[esp+0x84]
  410ba1:	mov    DWORD PTR [esp+0xac],0xffffffff
  410bac:	call   DWORD PTR ds:0x430264
  410bb2:	xor    al,al
  410bb4:	jmp    0x410c19
  410bb6:	mov    ecx,DWORD PTR [esp+0x6c]
  410bba:	cmp    DWORD PTR [esp+0x80],edi
  410bc1:	jae    0x410bc7
  410bc3:	lea    ecx,[esp+0x6c]
  410bc7:	mov    eax,DWORD PTR [esp+0x88]
  410bce:	cmp    DWORD PTR [esp+0x9c],edi
  410bd5:	jae    0x410bde
  410bd7:	lea    eax,[esp+0x88]
  410bde:	push   ecx
  410bdf:	push   eax
  410be0:	call   DWORD PTR ds:0x4302e4
  410be6:	add    esp,0x8
  410be9:	test   eax,eax
  410beb:	jne    0x410b88
  410bed:	lea    ecx,[esp+0x68]
  410bf1:	mov    BYTE PTR [esp+0xac],0x2
  410bf9:	call   DWORD PTR ds:0x430264
  410bff:	lea    ecx,[esp+0x84]
  410c06:	mov    DWORD PTR [esp+0xac],0xffffffff
  410c11:	call   DWORD PTR ds:0x430264
  410c17:	mov    al,0x1
  410c19:	mov    ecx,DWORD PTR [esp+0xa4]
  410c20:	mov    DWORD PTR fs:0x0,ecx
  410c27:	pop    ecx
  410c28:	pop    edi
  410c29:	pop    esi
  410c2a:	pop    ebp
  410c2b:	pop    ebx
  410c2c:	mov    ecx,DWORD PTR [esp+0x8c]
  410c33:	xor    ecx,esp
  410c35:	call   0x42503a
  410c3a:	add    esp,0x9c
  410c40:	ret    0x4
  410c43:	int3   
  410c44:	int3   
  410c45:	int3   
  410c46:	int3   
  410c47:	int3   
  410c48:	int3   
  410c49:	int3   
  410c4a:	int3   
  410c4b:	int3   
  410c4c:	int3   
  410c4d:	int3   
  410c4e:	int3   
  410c4f:	int3   
  410c50:	push   ebp
  410c51:	mov    ebp,esp
  410c53:	and    esp,0xfffffff8
  410c56:	push   0xffffffff
  410c58:	push   0x42eb82
  410c5d:	mov    eax,fs:0x0
  410c63:	push   eax
  410c64:	sub    esp,0x360
  410c6a:	mov    eax,ds:0x43e020
  410c6f:	xor    eax,esp
  410c71:	mov    DWORD PTR [esp+0x358],eax
  410c78:	push   ebx
  410c79:	push   esi
  410c7a:	push   edi
  410c7b:	mov    eax,ds:0x43e020
  410c80:	xor    eax,esp
  410c82:	push   eax
  410c83:	lea    eax,[esp+0x370]
  410c8a:	mov    fs:0x0,eax
  410c90:	mov    eax,DWORD PTR [ebp+0x8]
  410c93:	mov    DWORD PTR [esp+0x34],ecx
  410c97:	xor    esi,esi
  410c99:	lea    ecx,[esp+0x130]
  410ca0:	mov    DWORD PTR [esp+0x18],eax
  410ca4:	mov    ebx,edx
  410ca6:	mov    DWORD PTR [esp+0x12c],esi
  410cad:	call   DWORD PTR ds:0x430260
  410cb3:	mov    edi,0x430994
  410cb8:	lea    ecx,[esp+0x12c]
  410cbf:	mov    DWORD PTR [esp+0x378],esi
  410cc6:	call   0x4130f0
  410ccb:	call   DWORD PTR ds:0x430040
  410cd1:	cmp    DWORD PTR [ebx+0x18],0x8
  410cd5:	mov    edi,eax
  410cd7:	lea    esi,[ebx+0x4]
  410cda:	mov    DWORD PTR [esp+0x60],edi
  410cde:	mov    DWORD PTR [esp+0x14],esi
  410ce2:	jb     0x410ce8
  410ce4:	mov    eax,DWORD PTR [esi]
  410ce6:	jmp    0x410cea
  410ce8:	mov    eax,esi
  410cea:	mov    edx,DWORD PTR [edi]
  410cec:	push   0x1
  410cee:	push   eax
  410cef:	mov    eax,DWORD PTR [edx+0x8]
  410cf2:	mov    ecx,edi
  410cf4:	call   eax
  410cf6:	test   al,al
  410cf8:	jne    0x410dbc
  410cfe:	call   0x4045f0
  410d03:	mov    eax,DWORD PTR [eax+0x2c]
  410d06:	cmp    eax,0x4
  410d09:	jg     0x410d4d
  410d0b:	push   0x431ac8
  410d10:	mov    esi,0x431878
  410d15:	mov    eax,0x4
  410d1a:	lea    edi,[esp+0x3c]
  410d1e:	call   0x404160
  410d23:	push   0x431af4
  410d28:	mov    esi,eax
  410d2a:	mov    BYTE PTR [esp+0x37c],0x1
  410d32:	call   0x4040d0
  410d37:	add    esp,0x4
  410d3a:	mov    ecx,edi
  410d3c:	mov    BYTE PTR [esp+0x378],0x0
  410d44:	call   0x404680
  410d49:	mov    esi,DWORD PTR [esp+0x14]
  410d4d:	push   0x431b0c
  410d52:	lea    ecx,[esp+0xc0]
  410d59:	call   DWORD PTR ds:0x43011c
  410d5f:	mov    BYTE PTR [esp+0x378],0x2
  410d67:	cmp    DWORD PTR [ebx+0x18],0x8
  410d6b:	jb     0x410d71
  410d6d:	mov    edi,DWORD PTR [esi]
  410d6f:	jmp    0x410d73
  410d71:	mov    edi,esi
  410d73:	call   0x41f6c0
  410d78:	cmp    DWORD PTR [esp+0xd4],0x10
  410d80:	mov    ecx,DWORD PTR ds:0x43ff8c
  410d86:	mov    eax,DWORD PTR [esp+0xc0]
  410d8d:	jae    0x410d96
  410d8f:	lea    eax,[esp+0xc0]
  410d96:	mov    edx,DWORD PTR [ecx]
  410d98:	push   eax
  410d99:	mov    eax,DWORD PTR [edx+0x8]
  410d9c:	call   eax
  410d9e:	sub    esp,0x1c
  410da1:	mov    esi,esp
  410da3:	mov    DWORD PTR [esp+0x50],esp
  410da7:	push   edi
  410da8:	push   eax
  410da9:	call   0x40a710
  410dae:	mov    ebx,DWORD PTR [esp+0x3c]
  410db2:	add    esp,0x8
  410db5:	push   0xe
  410db7:	call   0x40fde0
  410dbc:	mov    DWORD PTR [esp+0x28],0x0
  410dc4:	mov    edx,DWORD PTR [edi]
  410dc6:	mov    edx,DWORD PTR [edx+0x14]
  410dc9:	lea    eax,[esp+0x28]
  410dcd:	push   eax
  410dce:	mov    ecx,edi
  410dd0:	call   edx
  410dd2:	cmp    DWORD PTR [esp+0x28],0x0
  410dd7:	jne    0x410e9b
  410ddd:	call   0x4045f0
  410de2:	mov    eax,DWORD PTR [eax+0x2c]
  410de5:	cmp    eax,0x4
  410de8:	jg     0x410e2c
  410dea:	push   0x431ac8
  410def:	mov    esi,0x431878
  410df4:	mov    eax,0x4
  410df9:	lea    edi,[esp+0x3c]
  410dfd:	call   0x404160
  410e02:	push   0x431b2c
  410e07:	mov    esi,eax
  410e09:	mov    BYTE PTR [esp+0x37c],0x3
  410e11:	call   0x4040d0
  410e16:	add    esp,0x4
  410e19:	mov    ecx,edi
  410e1b:	mov    BYTE PTR [esp+0x378],0x0
  410e23:	call   0x404680
  410e28:	mov    esi,DWORD PTR [esp+0x14]
  410e2c:	push   0x431b0c
  410e31:	lea    ecx,[esp+0xc0]
  410e38:	call   DWORD PTR ds:0x43011c
  410e3e:	mov    BYTE PTR [esp+0x378],0x4
  410e46:	cmp    DWORD PTR [ebx+0x18],0x8
  410e4a:	jb     0x410e50
  410e4c:	mov    edi,DWORD PTR [esi]
  410e4e:	jmp    0x410e52
  410e50:	mov    edi,esi
  410e52:	call   0x41f6c0
  410e57:	cmp    DWORD PTR [esp+0xd4],0x10
  410e5f:	mov    ecx,DWORD PTR ds:0x43ff8c
  410e65:	mov    eax,DWORD PTR [esp+0xc0]
  410e6c:	jae    0x410e75
  410e6e:	lea    eax,[esp+0xc0]
  410e75:	mov    edx,DWORD PTR [ecx]
  410e77:	push   eax
  410e78:	mov    eax,DWORD PTR [edx+0x8]
  410e7b:	call   eax
  410e7d:	sub    esp,0x1c
  410e80:	mov    esi,esp
  410e82:	mov    DWORD PTR [esp+0x50],esp
  410e86:	push   edi
  410e87:	push   eax
  410e88:	call   0x40a710
  410e8d:	mov    ebx,DWORD PTR [esp+0x3c]
  410e91:	add    esp,0x8
  410e94:	push   0xe
  410e96:	call   0x40fde0
  410e9b:	lea    ecx,[esp+0x64]
  410e9f:	push   ecx
  410ea0:	call   0x413bb0
  410ea5:	mov    BYTE PTR [esp+0x378],0x5
  410ead:	mov    ecx,DWORD PTR [esp+0x28]
  410eb1:	mov    edx,DWORD PTR [ecx]
  410eb3:	mov    eax,DWORD PTR [edx+0x10]
  410eb6:	call   eax
  410eb8:	test   al,al
  410eba:	jne    0x410f59
  410ec0:	mov    ecx,DWORD PTR [esp+0x28]
  410ec4:	mov    edx,DWORD PTR [ecx]
  410ec6:	mov    eax,DWORD PTR [edx+0x8]
  410ec9:	call   eax
  410ecb:	push   eax
  410ecc:	lea    ecx,[esp+0xf8]
  410ed3:	call   DWORD PTR ds:0x43011c
  410ed9:	push   eax
  410eda:	lea    ebx,[esp+0xc0]
  410ee1:	mov    BYTE PTR [esp+0x37c],0x6
  410ee9:	call   0x41efb0
  410eee:	add    esp,0x4
  410ef1:	mov    bl,0x8
  410ef3:	lea    ecx,[esp+0xf4]
  410efa:	mov    BYTE PTR [esp+0x378],bl
  410f01:	call   DWORD PTR ds:0x43025c
  410f07:	cmp    DWORD PTR [esp+0xd0],0x0
  410f0f:	je     0x411585
  410f15:	mov    ecx,DWORD PTR [esp+0x28]
  410f19:	mov    edx,DWORD PTR [ecx]
  410f1b:	mov    eax,DWORD PTR [edx+0x4]
  410f1e:	call   eax
  410f20:	lea    ecx,[esp+0xbc]
  410f27:	push   ecx
  410f28:	lea    ebx,[esp+0x68]
  410f2c:	call   0x4132f0
  410f31:	lea    ecx,[esp+0xbc]
  410f38:	mov    BYTE PTR [esp+0x378],0x5
  410f40:	call   DWORD PTR ds:0x430264
  410f46:	mov    ecx,DWORD PTR [esp+0x28]
  410f4a:	mov    edx,DWORD PTR [ecx]
  410f4c:	mov    eax,DWORD PTR [edx+0x10]
  410f4f:	call   eax
  410f51:	test   al,al
  410f53:	je     0x410ec0
  410f59:	mov    ecx,DWORD PTR [esp+0x28]
  410f5d:	mov    edx,DWORD PTR [ecx]
  410f5f:	mov    eax,DWORD PTR [edx+0xc]
  410f62:	call   eax
  410f64:	mov    esi,DWORD PTR [esp+0x70]
  410f68:	mov    eax,DWORD PTR [esp+0x74]
  410f6c:	mov    ebx,DWORD PTR ds:0x430390
  410f72:	cmp    esi,eax
  410f74:	jbe    0x410f7c
  410f76:	call   ebx
  410f78:	mov    eax,DWORD PTR [esp+0x74]
  410f7c:	mov    edi,DWORD PTR [esp+0x64]
  410f80:	mov    DWORD PTR [esp+0x20],edi
  410f84:	mov    DWORD PTR [esp+0x24],esi
  410f88:	mov    esi,eax
  410f8a:	cmp    DWORD PTR [esp+0x70],eax
  410f8e:	jbe    0x410f92
  410f90:	call   ebx
  410f92:	test   edi,edi
  410f94:	je     0x410f9c
  410f96:	cmp    edi,DWORD PTR [esp+0x64]
  410f9a:	je     0x410f9e
  410f9c:	call   ebx
  410f9e:	cmp    DWORD PTR [esp+0x24],esi
  410fa2:	je     0x411929
  410fa8:	mov    edi,DWORD PTR ds:0x4400a4
  410fae:	test   edi,edi
  410fb0:	je     0x41104f
  410fb6:	mov    eax,DWORD PTR [esp+0x20]
  410fba:	test   eax,eax
  410fbc:	jne    0x41162f
  410fc2:	call   DWORD PTR ds:0x430390
  410fc8:	xor    eax,eax
  410fca:	mov    ecx,DWORD PTR [esp+0x24]
  410fce:	cmp    ecx,DWORD PTR [eax+0x10]
  410fd1:	jb     0x410fd9
  410fd3:	call   DWORD PTR ds:0x430390
  410fd9:	mov    edx,DWORD PTR [esp+0x24]
  410fdd:	sub    esp,0x24
  410fe0:	mov    DWORD PTR [esp+0x40],esp
  410fe4:	mov    esi,esp
  410fe6:	sub    esp,0x1c
  410fe9:	mov    ecx,esp
  410feb:	mov    DWORD PTR [esp+0x5c],esp
  410fef:	push   edx
  410ff0:	call   DWORD PTR ds:0x430118
  410ff6:	push   edi
  410ff7:	push   0x406f50
  410ffc:	call   0x4175d0
  411001:	add    esp,0x24
  411004:	lea    esi,[esp+0xa0]
  41100b:	call   0x417690
  411010:	mov    eax,esi
  411012:	push   eax
  411013:	mov    BYTE PTR [esp+0x37c],0xb
  41101b:	call   0x403400
  411020:	mov    BYTE PTR [esp+0x378],0x5
  411028:	mov    eax,DWORD PTR [esp+0x7c]
  41102c:	test   eax,eax
  41102e:	je     0x41104f
  411030:	test   al,0x1
  411032:	jne    0x41104f
  411034:	and    eax,0xfffffffe
  411037:	mov    eax,DWORD PTR [eax]
  411039:	test   eax,eax
  41103b:	je     0x41104f
  41103d:	lea    ecx,[esp+0x84]
  411044:	push   0x2
  411046:	push   ecx
  411047:	mov    edx,ecx
  411049:	push   edx
  41104a:	call   eax
  41104c:	add    esp,0xc
  41104f:	mov    eax,DWORD PTR [esp+0x20]
  411053:	test   eax,eax
  411055:	jne    0x411636
  41105b:	call   DWORD PTR ds:0x430390
  411061:	xor    eax,eax
  411063:	mov    edi,DWORD PTR [esp+0x24]
  411067:	cmp    edi,DWORD PTR [eax+0x10]
  41106a:	jb     0x411072
  41106c:	call   DWORD PTR ds:0x430390
  411072:	push   edi
  411073:	lea    ecx,[esp+0xf8]
  41107a:	call   DWORD PTR ds:0x430118
  411080:	lea    ecx,[esp+0xbc]
  411087:	mov    BYTE PTR [esp+0x378],0xc
  41108f:	call   DWORD PTR ds:0x430254
  411095:	mov    BYTE PTR [esp+0x378],0xd
  41109d:	mov    eax,ds:0x4301e0
  4110a2:	mov    ecx,DWORD PTR [eax]
  4110a4:	push   ecx
  4110a5:	push   0x40
  4110a7:	mov    ecx,edi
  4110a9:	call   DWORD PTR ds:0x43021c
  4110af:	mov    edx,DWORD PTR ds:0x4301e0
  4110b5:	cmp    eax,DWORD PTR [edx]
  4110b7:	je     0x411198
  4110bd:	push   eax
  4110be:	push   0x0
  4110c0:	lea    eax,[esp+0x48]
  4110c4:	push   eax
  4110c5:	mov    ecx,edi
  4110c7:	call   DWORD PTR ds:0x430218
  4110cd:	push   eax
  4110ce:	lea    ecx,[esp+0xc0]
  4110d5:	mov    BYTE PTR [esp+0x37c],0xe
  4110dd:	call   DWORD PTR ds:0x43017c
  4110e3:	lea    ecx,[esp+0x40]
  4110e7:	mov    BYTE PTR [esp+0x378],0xd
  4110ef:	call   DWORD PTR ds:0x430264
  4110f5:	lea    ecx,[esp+0xf4]
  4110fc:	push   ecx
  4110fd:	call   0x416e40
  411102:	mov    esi,DWORD PTR [esp+0x1c]
  411106:	add    esp,0x4
  411109:	push   esi
  41110a:	lea    edx,[esp+0xc0]
  411111:	lea    ecx,[esp+0x130]
  411118:	call   0x40ffb0
  41111d:	push   0x430f38
  411122:	call   0x41fb20
  411127:	push   eax
  411128:	lea    edx,[esp+0x84]
  41112f:	push   edx
  411130:	call   DWORD PTR ds:0x4301a4
  411136:	add    esp,0xc
  411139:	lea    ecx,[esp+0xbc]
  411140:	push   ecx
  411141:	push   eax
  411142:	lea    edx,[esp+0x48]
  411146:	push   edx
  411147:	mov    BYTE PTR [esp+0x384],0xf
  41114f:	call   DWORD PTR ds:0x4301a0
  411155:	add    esp,0xc
  411158:	push   eax
  411159:	add    esi,0x8c
  41115f:	push   esi
  411160:	lea    ebx,[esp+0xb8]
  411167:	mov    BYTE PTR [esp+0x380],0x10
  41116f:	call   0x412f50
  411174:	lea    ecx,[esp+0x40]
  411178:	mov    BYTE PTR [esp+0x378],0xf
  411180:	call   DWORD PTR ds:0x430264
  411186:	lea    ecx,[esp+0x7c]
  41118a:	mov    BYTE PTR [esp+0x378],0xd
  411192:	call   DWORD PTR ds:0x430264
  411198:	mov    eax,DWORD PTR [esp+0x18]
  41119c:	push   eax
  41119d:	lea    ecx,[esp+0xf8]
  4111a4:	call   0x410a30
  4111a9:	test   al,al
  4111ab:	je     0x41164b
  4111b1:	lea    ecx,[esp+0x14]
  4111b5:	call   DWORD PTR ds:0x430018
  4111bb:	lea    ecx,[esp+0x110]
  4111c2:	push   ecx
  4111c3:	mov    ecx,edi
  4111c5:	mov    BYTE PTR [esp+0x37c],0x13
  4111cd:	call   0x41ef40
  4111d2:	add    esp,0x4
  4111d5:	mov    BYTE PTR [esp+0x378],0x14
  4111dd:	mov    eax,DWORD PTR [esp+0x114]
  4111e4:	mov    ebx,0x10
  4111e9:	cmp    DWORD PTR [esp+0x128],ebx
  4111f0:	jae    0x4111f9
  4111f2:	lea    eax,[esp+0x114]
  4111f9:	mov    ecx,DWORD PTR [esp+0x60]
  4111fd:	mov    edx,DWORD PTR [ecx]
  4111ff:	lea    esi,[esp+0x14]
  411203:	push   esi
  411204:	push   eax
  411205:	mov    eax,DWORD PTR [edx+0x10]
  411208:	call   eax
  41120a:	test   al,al
  41120c:	je     0x41171e
  411212:	mov    edx,DWORD PTR [esp+0x24]
  411216:	sub    esp,0x28
  411219:	mov    DWORD PTR [esp+0x44],esp
  41121d:	mov    esi,esp
  41121f:	sub    esp,0x1c
  411222:	mov    ecx,esp
  411224:	mov    DWORD PTR [esp+0x60],esp
  411228:	push   edx
  411229:	call   DWORD PTR ds:0x430118
  41122f:	lea    eax,[esp+0xe4]
  411236:	push   eax
  411237:	mov    DWORD PTR [esp+0xe8],0x4
  411242:	call   0x417950
  411247:	mov    ebx,DWORD PTR [esp+0x7c]
  41124b:	mov    edi,DWORD PTR [ebx+0x10]
  41124e:	add    esp,0x20
  411251:	cmp    DWORD PTR [ebx+0xc],edi
  411254:	jbe    0x41125c
  411256:	call   DWORD PTR ds:0x430390
  41125c:	mov    esi,DWORD PTR [ebx+0xc]
  41125f:	mov    ecx,DWORD PTR [ebx]
  411261:	mov    DWORD PTR [esp+0xd0],ecx
  411268:	cmp    esi,DWORD PTR [ebx+0x10]
  41126b:	jbe    0x411273
  41126d:	call   DWORD PTR ds:0x430390
  411273:	mov    edx,DWORD PTR [esp+0xd0]
  41127a:	mov    eax,DWORD PTR [ebx]
  41127c:	push   edi
  41127d:	push   edx
  41127e:	push   esi
  41127f:	push   eax
  411280:	lea    esi,[esp+0x70]
  411284:	call   0x417a10
  411289:	mov    esi,DWORD PTR [ebx+0x10]
  41128c:	add    esp,0x38
  41128f:	cmp    DWORD PTR [ebx+0xc],esi
  411292:	jbe    0x41129a
  411294:	call   DWORD PTR ds:0x430390
  41129a:	mov    eax,DWORD PTR [ebx]
  41129c:	mov    ebx,DWORD PTR [esp+0x38]
  4112a0:	test   ebx,ebx
  4112a2:	je     0x4112a8
  4112a4:	cmp    ebx,eax
  4112a6:	je     0x4112ae
  4112a8:	call   DWORD PTR ds:0x430390
  4112ae:	cmp    DWORD PTR [esp+0x3c],esi
  4112b2:	je     0x41133f
  4112b8:	lea    eax,[esp+0x40]
  4112bc:	push   eax
  4112bd:	call   0x413bb0
  4112c2:	lea    ecx,[esp+0x14]
  4112c6:	mov    BYTE PTR [esp+0x378],0x17
  4112ce:	call   DWORD PTR ds:0x430020
  4112d4:	mov    edi,DWORD PTR ds:0x430024
  4112da:	lea    ecx,[esp+0x14]
  4112de:	mov    esi,eax
  4112e0:	call   edi
  4112e2:	lea    ecx,[esp+0x14]
  4112e6:	add    esi,eax
  4112e8:	call   edi
  4112ea:	mov    ecx,DWORD PTR [esp+0x1c]
  4112ee:	push   ecx
  4112ef:	push   esi
  4112f0:	push   eax
  4112f1:	lea    eax,[esp+0x4c]
  4112f5:	call   0x419260
  4112fa:	test   ebx,ebx
  4112fc:	jne    0x41163d
  411302:	call   DWORD PTR ds:0x430390
  411308:	mov    esi,DWORD PTR [esp+0x3c]
  41130c:	cmp    esi,DWORD PTR [ebx+0x10]
  41130f:	jb     0x411317
  411311:	call   DWORD PTR ds:0x430390
  411317:	mov    edx,DWORD PTR [esi+0x5c]
  41131a:	push   edx
  41131b:	lea    ebx,[esp+0x44]
  41131f:	call   0x40daf0
  411324:	add    esp,0x4
  411327:	test   al,al
  411329:	je     0x4117cf
  41132f:	mov    eax,ebx
  411331:	push   eax
  411332:	mov    BYTE PTR [esp+0x37c],0x14
  41133a:	call   0x412740
  41133f:	push   0x430f38
  411344:	call   0x41fb20
  411349:	push   eax
  41134a:	lea    ecx,[esp+0x84]
  411351:	push   ecx
  411352:	call   DWORD PTR ds:0x4301a4
  411358:	add    esp,0xc
  41135b:	lea    edx,[esp+0xf4]
  411362:	push   edx
  411363:	push   eax
  411364:	lea    eax,[esp+0xe0]
  41136b:	push   eax
  41136c:	mov    BYTE PTR [esp+0x384],0x1a
  411374:	call   DWORD PTR ds:0x4301a0
  41137a:	add    esp,0xc
  41137d:	mov    ebx,0x1c
  411382:	lea    ecx,[esp+0x7c]
  411386:	mov    BYTE PTR [esp+0x378],bl
  41138d:	call   DWORD PTR ds:0x430264
  411393:	mov    eax,DWORD PTR [esp+0xdc]
  41139a:	mov    esi,0x8
  41139f:	cmp    DWORD PTR [esp+0xf0],esi
  4113a6:	jae    0x4113af
  4113a8:	lea    eax,[esp+0xdc]
  4113af:	push   eax
  4113b0:	call   DWORD PTR ds:0x430028
  4113b6:	add    esp,0x4
  4113b9:	test   eax,eax
  4113bb:	je     0x4114b4
  4113c1:	xor    ecx,ecx
  4113c3:	push   0x210
  4113c8:	push   ecx
  4113c9:	lea    edx,[esp+0x156]
  4113d0:	push   edx
  4113d1:	mov    WORD PTR [esp+0x158],cx
  4113d9:	call   0x429f9c
  4113de:	mov    eax,DWORD PTR [esp+0xe8]
  4113e5:	add    esp,0xc
  4113e8:	cmp    DWORD PTR [esp+0xf0],esi
  4113ef:	jae    0x4113f8
  4113f1:	lea    eax,[esp+0xdc]
  4113f8:	mov    ecx,DWORD PTR [esp+0xec]
  4113ff:	lea    edx,[ecx+ecx*1]
  411402:	push   edx
  411403:	push   eax
  411404:	lea    eax,[esp+0x154]
  41140b:	push   eax
  41140c:	call   0x42a018
  411411:	xor    eax,eax
  411413:	mov    DWORD PTR [esp+0x50],eax
  411417:	mov    DWORD PTR [esp+0x54],eax
  41141b:	mov    DWORD PTR [esp+0x5c],eax
  41141f:	mov    DWORD PTR [esp+0x58],eax
  411423:	mov    DWORD PTR [esp+0x60],eax
  411427:	mov    DWORD PTR [esp+0x64],eax
  41142b:	mov    WORD PTR [esp+0x68],ax
  411430:	add    esp,0xc
  411433:	lea    eax,[esp+0x40]
  411437:	lea    ecx,[esp+0x14c]
  41143e:	mov    edx,0x614
  411443:	push   eax
  411444:	mov    DWORD PTR [esp+0x44],0x0
  41144c:	mov    DWORD PTR [esp+0x48],0x3
  411454:	mov    DWORD PTR [esp+0x4c],ecx
  411458:	mov    WORD PTR [esp+0x54],dx
  41145d:	call   DWORD PTR ds:0x4303d0
  411463:	test   eax,eax
  411465:	je     0x4114b4
  411467:	call   0x4045f0
  41146c:	cmp    DWORD PTR [eax+0x2c],0x4
  411470:	jg     0x4114b4
  411472:	push   0x431ac8
  411477:	mov    esi,0x431878
  41147c:	mov    eax,0x4
  411481:	lea    edi,[esp+0x30]
  411485:	call   0x404160
  41148a:	push   0x431c00
  41148f:	mov    esi,eax
  411491:	mov    BYTE PTR [esp+0x37c],0x1d
  411499:	call   0x4040d0
  41149e:	add    esp,0x4
  4114a1:	mov    ecx,edi
  4114a3:	mov    BYTE PTR [esp+0x378],bl
  4114aa:	call   0x404680
  4114af:	mov    esi,0x8
  4114b4:	mov    eax,DWORD PTR [esp+0xdc]
  4114bb:	cmp    DWORD PTR [esp+0xf0],esi
  4114c2:	jae    0x4114cb
  4114c4:	lea    eax,[esp+0xdc]
  4114cb:	mov    ecx,DWORD PTR [esp+0x12c]
  4114d2:	mov    edx,DWORD PTR [ecx]
  4114d4:	lea    edi,[esp+0x14]
  4114d8:	push   edi
  4114d9:	push   eax
  4114da:	mov    eax,DWORD PTR [edx+0x14]
  4114dd:	call   eax
  4114df:	test   al,al
  4114e1:	je     0x411885
  4114e7:	lea    ecx,[esp+0xd8]
  4114ee:	mov    BYTE PTR [esp+0x378],0x14
  4114f6:	call   DWORD PTR ds:0x430264
  4114fc:	lea    ecx,[esp+0x110]
  411503:	mov    BYTE PTR [esp+0x378],0x13
  41150b:	call   DWORD PTR ds:0x43025c
  411511:	mov    ecx,edi
  411513:	mov    BYTE PTR [esp+0x378],0xd
  41151b:	call   DWORD PTR ds:0x43001c
  411521:	lea    ecx,[esp+0xbc]
  411528:	mov    BYTE PTR [esp+0x378],0xc
  411530:	call   DWORD PTR ds:0x430264
  411536:	lea    ecx,[esp+0xf4]
  41153d:	mov    BYTE PTR [esp+0x378],0x5
  411545:	call   DWORD PTR ds:0x430264
  41154b:	mov    eax,DWORD PTR [esp+0x20]
  41154f:	test   eax,eax
  411551:	jne    0x411644
  411557:	call   DWORD PTR ds:0x430390
  41155d:	xor    eax,eax
  41155f:	mov    ecx,DWORD PTR [esp+0x24]
  411563:	cmp    ecx,DWORD PTR [eax+0x10]
  411566:	jb     0x41156e
  411568:	call   DWORD PTR ds:0x430390
  41156e:	add    DWORD PTR [esp+0x24],ebx
  411572:	mov    eax,DWORD PTR [esp+0x74]
  411576:	mov    edi,DWORD PTR [esp+0x20]
  41157a:	mov    ebx,DWORD PTR ds:0x430390
  411580:	jmp    0x410f88
  411585:	call   0x4045f0
  41158a:	mov    eax,DWORD PTR [eax+0x2c]
  41158d:	cmp    eax,0x4
  411590:	jg     0x4115cf
  411592:	push   0x431ac8
  411597:	mov    esi,0x431878
  41159c:	mov    eax,0x4
  4115a1:	lea    edi,[esp+0x3c]
  4115a5:	call   0x404160
  4115aa:	push   0x431b54
  4115af:	mov    esi,eax
  4115b1:	mov    BYTE PTR [esp+0x37c],0x9
  4115b9:	call   0x4040d0
  4115be:	add    esp,0x4
  4115c1:	mov    ecx,edi
  4115c3:	mov    BYTE PTR [esp+0x378],bl
  4115ca:	call   0x404680
  4115cf:	push   0x431b0c
  4115d4:	lea    ecx,[esp+0x114]
  4115db:	call   DWORD PTR ds:0x43011c
  4115e1:	mov    BYTE PTR [esp+0x378],0xa
  4115e9:	call   0x41f6c0
  4115ee:	cmp    DWORD PTR [esp+0x128],0x10
  4115f6:	mov    ecx,DWORD PTR ds:0x43ff8c
  4115fc:	mov    eax,DWORD PTR [esp+0x114]
  411603:	jae    0x41160c
  411605:	lea    eax,[esp+0x114]
  41160c:	mov    edx,DWORD PTR [ecx]
  41160e:	push   eax
  41160f:	mov    eax,DWORD PTR [edx+0x8]
  411612:	call   eax
  411614:	sub    esp,0x1c
  411617:	mov    ecx,esp
  411619:	mov    DWORD PTR [esp+0x50],esp
  41161d:	push   eax
  41161e:	call   DWORD PTR ds:0x430268
  411624:	mov    ebx,DWORD PTR [esp+0x34]
  411628:	push   0xe
  41162a:	call   0x40fde0
  41162f:	mov    eax,DWORD PTR [eax]
  411631:	jmp    0x410fca
  411636:	mov    eax,DWORD PTR [eax]
  411638:	jmp    0x411063
  41163d:	mov    ebx,DWORD PTR [ebx]
  41163f:	jmp    0x411308
  411644:	mov    eax,DWORD PTR [eax]
  411646:	jmp    0x41155f
  41164b:	call   0x4045f0
  411650:	cmp    DWORD PTR [eax+0x2c],0x4
  411654:	jg     0x4116af
  411656:	push   0x431ac8
  41165b:	mov    esi,0x431878
  411660:	mov    eax,0x4
  411665:	lea    edi,[esp+0x30]
  411669:	call   0x404160
  41166e:	mov    BYTE PTR [esp+0x378],0x11
  411676:	cmp    DWORD PTR [esp+0x10c],0x8
  41167e:	mov    ecx,DWORD PTR [esp+0xf8]
  411685:	jae    0x41168e
  411687:	lea    ecx,[esp+0xf8]
  41168e:	push   ecx
  41168f:	push   0x431b6c
  411694:	mov    esi,eax
  411696:	call   0x4040d0
  41169b:	add    esp,0x8
  41169e:	lea    ecx,[esp+0x2c]
  4116a2:	mov    BYTE PTR [esp+0x378],0xd
  4116aa:	call   0x404680
  4116af:	push   0x431b88
  4116b4:	lea    ecx,[esp+0x44]
  4116b8:	call   DWORD PTR ds:0x43011c
  4116be:	mov    BYTE PTR [esp+0x378],0x12
  4116c6:	cmp    DWORD PTR [esp+0x10c],0x8
  4116ce:	mov    edi,DWORD PTR [esp+0xf8]
  4116d5:	jae    0x4116de
  4116d7:	lea    edi,[esp+0xf8]
  4116de:	call   0x41f6c0
  4116e3:	cmp    DWORD PTR [esp+0x58],0x10
  4116e8:	mov    ecx,DWORD PTR ds:0x43ff8c
  4116ee:	mov    eax,DWORD PTR [esp+0x44]
  4116f2:	jae    0x4116f8
  4116f4:	lea    eax,[esp+0x44]
  4116f8:	mov    edx,DWORD PTR [ecx]
  4116fa:	push   eax
  4116fb:	mov    eax,DWORD PTR [edx+0x8]
  4116fe:	call   eax
  411700:	sub    esp,0x1c
  411703:	mov    esi,esp
  411705:	mov    DWORD PTR [esp+0x38],esp
  411709:	push   edi
  41170a:	push   eax
  41170b:	call   0x40a710
  411710:	mov    ebx,DWORD PTR [esp+0x3c]
  411714:	add    esp,0x8
  411717:	push   0xc
  411719:	call   0x40fde0
  41171e:	call   0x4045f0
  411723:	cmp    DWORD PTR [eax+0x2c],0x4
  411727:	jg     0x41176b
  411729:	push   0x431ac8
  41172e:	mov    esi,0x431878
  411733:	mov    eax,0x4
  411738:	lea    edi,[esp+0x30]
  41173c:	call   0x404160
  411741:	push   0x431b9c
  411746:	mov    esi,eax
  411748:	mov    BYTE PTR [esp+0x37c],0x15
  411750:	call   0x4040d0
  411755:	add    esp,0x4
  411758:	mov    ecx,edi
  41175a:	mov    BYTE PTR [esp+0x378],0x14
  411762:	call   0x404680
  411767:	mov    edi,DWORD PTR [esp+0x24]
  41176b:	push   0x431bc4
  411770:	lea    ecx,[esp+0x44]
  411774:	call   DWORD PTR ds:0x43011c
  41177a:	mov    BYTE PTR [esp+0x378],0x16
  411782:	cmp    DWORD PTR [edi+0x18],0x8
  411786:	jb     0x41178d
  411788:	mov    edi,DWORD PTR [edi+0x4]
  41178b:	jmp    0x411790
  41178d:	add    edi,0x4
  411790:	call   0x41f6c0
  411795:	mov    ecx,DWORD PTR ds:0x43ff8c
  41179b:	mov    eax,DWORD PTR [esp+0x44]
  41179f:	cmp    DWORD PTR [esp+0x58],ebx
  4117a3:	jae    0x4117a9
  4117a5:	lea    eax,[esp+0x44]
  4117a9:	mov    edx,DWORD PTR [ecx]
  4117ab:	push   eax
  4117ac:	mov    eax,DWORD PTR [edx+0x8]
  4117af:	call   eax
  4117b1:	sub    esp,0x1c
  4117b4:	mov    esi,esp
  4117b6:	mov    DWORD PTR [esp+0x38],esp
  4117ba:	push   edi
  4117bb:	push   eax
  4117bc:	call   0x40a710
  4117c1:	mov    ebx,DWORD PTR [esp+0x3c]
  4117c5:	add    esp,0x8
  4117c8:	push   0xd
  4117ca:	call   0x40fde0
  4117cf:	call   0x4045f0
  4117d4:	cmp    DWORD PTR [eax+0x2c],0x4
  4117d8:	jg     0x41182d
  4117da:	push   0x431ac8
  4117df:	mov    esi,0x431878
  4117e4:	mov    eax,0x4
  4117e9:	lea    edi,[esp+0x30]
  4117ed:	call   0x404160
  4117f2:	mov    ecx,DWORD PTR [esp+0x24]
  4117f6:	mov    BYTE PTR [esp+0x378],0x18
  4117fe:	cmp    DWORD PTR [ecx+0x18],0x8
  411802:	jb     0x411809
  411804:	mov    ecx,DWORD PTR [ecx+0x4]
  411807:	jmp    0x41180c
  411809:	add    ecx,0x4
  41180c:	push   ecx
  41180d:	push   0x431bd8
  411812:	mov    esi,eax
  411814:	call   0x4040d0
  411819:	add    esp,0x8
  41181c:	lea    ecx,[esp+0x2c]
  411820:	mov    BYTE PTR [esp+0x378],0x17
  411828:	call   0x404680
  41182d:	push   0x431bec
  411832:	lea    ecx,[esp+0x80]
  411839:	call   DWORD PTR ds:0x43011c
  41183f:	mov    eax,DWORD PTR [esp+0x24]
  411843:	mov    BYTE PTR [esp+0x378],0x19
  41184b:	cmp    DWORD PTR [eax+0x18],0x8
  41184f:	jb     0x411856
  411851:	mov    eax,DWORD PTR [eax+0x4]
  411854:	jmp    0x411859
  411856:	add    eax,0x4
  411859:	sub    esp,0x1c
  41185c:	mov    edi,esp
  41185e:	mov    DWORD PTR [esp+0x38],esp
  411862:	push   eax
  411863:	lea    esi,[esp+0x9c]
  41186a:	call   0x41f690
  41186f:	push   eax
  411870:	mov    esi,edi
  411872:	call   0x40a710
  411877:	mov    ebx,DWORD PTR [esp+0x3c]
  41187b:	add    esp,0x8
  41187e:	push   0x3
  411880:	call   0x40fde0
  411885:	call   0x4045f0
  41188a:	cmp    DWORD PTR [eax+0x2c],0x4
  41188e:	jg     0x4118d2
  411890:	push   0x431ac8
  411895:	mov    esi,0x431878
  41189a:	mov    eax,0x4
  41189f:	lea    edi,[esp+0x30]
  4118a3:	call   0x404160
  4118a8:	push   0x431c30
  4118ad:	mov    esi,eax
  4118af:	mov    BYTE PTR [esp+0x37c],0x1e
  4118b7:	call   0x4040d0
  4118bc:	add    esp,0x4
  4118bf:	mov    ecx,edi
  4118c1:	mov    BYTE PTR [esp+0x378],bl
  4118c8:	call   0x404680
  4118cd:	mov    esi,0x8
  4118d2:	push   0x431c4c
  4118d7:	lea    ecx,[esp+0x44]
  4118db:	call   DWORD PTR ds:0x43011c
  4118e1:	mov    BYTE PTR [esp+0x378],0x1f
  4118e9:	mov    eax,DWORD PTR [esp+0xdc]
  4118f0:	cmp    DWORD PTR [esp+0xf0],esi
  4118f7:	jae    0x411900
  4118f9:	lea    eax,[esp+0xdc]
  411900:	sub    esp,0x1c
  411903:	mov    edi,esp
  411905:	mov    DWORD PTR [esp+0x38],esp
  411909:	push   eax
  41190a:	lea    esi,[esp+0x60]
  41190e:	call   0x41f690
  411913:	push   eax
  411914:	mov    esi,edi
  411916:	call   0x40a710
  41191b:	mov    ebx,DWORD PTR [esp+0x3c]
  41191f:	add    esp,0x8
  411922:	push   0x6
  411924:	call   0x40fde0
  411929:	lea    ecx,[esp+0x64]
  41192d:	push   ecx
  41192e:	mov    BYTE PTR [esp+0x37c],0x0
  411936:	call   0x4132a0
  41193b:	lea    edx,[esp+0x12c]
  411942:	push   edx
  411943:	mov    DWORD PTR [esp+0x37c],0xffffffff
  41194e:	call   0x40b540
  411953:	mov    al,0x1
  411955:	mov    ecx,DWORD PTR [esp+0x370]
  41195c:	mov    DWORD PTR fs:0x0,ecx
  411963:	pop    ecx
  411964:	pop    edi
  411965:	pop    esi
  411966:	pop    ebx
  411967:	mov    ecx,DWORD PTR [esp+0x358]
  41196e:	xor    ecx,esp
  411970:	call   0x42503a
  411975:	mov    esp,ebp
  411977:	pop    ebp
  411978:	ret    0x4
  41197b:	int3   
  41197c:	int3   
  41197d:	int3   
  41197e:	int3   
  41197f:	int3   
  411980:	add    ecx,0xc
  411983:	jmp    DWORD PTR ds:0x430264
  411989:	int3   
  41198a:	int3   
  41198b:	int3   
  41198c:	int3   
  41198d:	int3   
  41198e:	int3   
  41198f:	int3   
  411990:	add    ecx,0x8
  411993:	jmp    DWORD PTR ds:0x430264
  411999:	int3   
  41199a:	int3   
  41199b:	int3   
  41199c:	int3   
  41199d:	int3   
  41199e:	int3   
  41199f:	int3   
  4119a0:	push   ebp
  4119a1:	mov    ebp,esp
  4119a3:	and    esp,0xffffffc0
  4119a6:	sub    esp,0x34
  4119a9:	push   ebx
  4119aa:	push   esi
  4119ab:	push   edi
  4119ac:	mov    esi,ecx
  4119ae:	call   DWORD PTR ds:0x4300e8
  4119b4:	mov    ecx,DWORD PTR [esi+0x2c]
  4119b7:	test   ecx,ecx
  4119b9:	je     0x411a51
  4119bf:	mov    ebx,DWORD PTR ds:0x4400a4
  4119c5:	xor    eax,eax
  4119c7:	mov    DWORD PTR [esp+0x30],0x0
  4119cf:	mov    DWORD PTR [esp+0x34],eax
  4119d3:	mov    DWORD PTR [esp+0x38],eax
  4119d7:	mov    DWORD PTR [esp+0x3c],eax
  4119db:	test   ebx,ebx
  4119dd:	je     0x411a51
  4119df:	mov    eax,DWORD PTR [ecx]
  4119e1:	mov    eax,DWORD PTR [eax+0x18]
  4119e4:	lea    edx,[esp+0x30]
  4119e8:	push   edx
  4119e9:	call   eax
  4119eb:	test   eax,eax
  4119ed:	je     0x411a51
  4119ef:	mov    ecx,DWORD PTR [esp+0x3c]
  4119f3:	dec    ecx
  4119f4:	cmp    ecx,0x3
  4119f7:	ja     0x411a51
  4119f9:	mov    ecx,DWORD PTR [esp+0x38]
  4119fd:	mov    esi,DWORD PTR [esp+0x34]
  411a01:	mov    edi,DWORD PTR [esp+0x30]
  411a05:	or     eax,0xffffffff
  411a08:	test   ecx,ecx
  411a0a:	je     0x411a14
  411a0c:	mov    eax,edi
  411a0e:	sub    eax,esi
  411a10:	xor    edx,edx
  411a12:	div    ecx
  411a14:	mov    DWORD PTR [esp+0x2c],ecx
  411a18:	fild   DWORD PTR [esp+0x2c]
  411a1c:	test   ecx,ecx
  411a1e:	jge    0x411a26
  411a20:	fadd   QWORD PTR ds:0x433038
  411a26:	sub    esp,0x8
  411a29:	fstp   QWORD PTR [esp]
  411a2c:	push   edi
  411a2d:	push   esi
  411a2e:	push   ebx
  411a2f:	mov    ecx,eax
  411a31:	call   0x406a50
  411a36:	mov    ecx,DWORD PTR [esp+0x30]
  411a3a:	xor    eax,eax
  411a3c:	test   ecx,ecx
  411a3e:	je     0x411a4b
  411a40:	mov    eax,DWORD PTR [esp+0x34]
  411a44:	imul   eax,eax,0x64
  411a47:	xor    edx,edx
  411a49:	div    ecx
  411a4b:	push   eax
  411a4c:	call   0x421280
  411a51:	pop    edi
  411a52:	pop    esi
  411a53:	pop    ebx
  411a54:	mov    esp,ebp
  411a56:	pop    ebp
  411a57:	ret    
  411a58:	int3   
  411a59:	int3   
  411a5a:	int3   
  411a5b:	int3   
  411a5c:	int3   
  411a5d:	int3   
  411a5e:	int3   
  411a5f:	int3   
  411a60:	push   ebp
  411a61:	mov    ebp,esp
  411a63:	and    esp,0xfffffff8
  411a66:	push   0xffffffff
  411a68:	push   0x42c2b8
  411a6d:	mov    eax,fs:0x0
  411a73:	push   eax
  411a74:	sub    esp,0x24
  411a77:	push   esi
  411a78:	push   edi
  411a79:	mov    eax,ds:0x43e020
  411a7e:	xor    eax,esp
  411a80:	push   eax
  411a81:	lea    eax,[esp+0x30]
  411a85:	mov    fs:0x0,eax
  411a8b:	mov    edi,ecx
  411a8d:	call   DWORD PTR ds:0x4300e8
  411a93:	mov    ecx,edi
  411a95:	call   0x4119a0
  411a9a:	mov    eax,0x411a60
  411a9f:	push   edi
  411aa0:	push   eax
  411aa1:	lea    esi,[esp+0x14]
  411aa5:	call   0x418e90
  411aaa:	mov    eax,esi
  411aac:	push   eax
  411aad:	mov    DWORD PTR [esp+0x3c],0x0
  411ab5:	call   0x403560
  411aba:	mov    DWORD PTR [edi+0x64],eax
  411abd:	mov    DWORD PTR [esp+0x38],0xffffffff
  411ac5:	mov    eax,DWORD PTR [esp+0xc]
  411ac9:	test   eax,eax
  411acb:	je     0x411ae9
  411acd:	test   al,0x1
  411acf:	jne    0x411ae9
  411ad1:	and    eax,0xfffffffe
  411ad4:	mov    eax,DWORD PTR [eax]
  411ad6:	test   eax,eax
  411ad8:	je     0x411ae9
  411ada:	lea    ecx,[esp+0x14]
  411ade:	push   0x2
  411ae0:	push   ecx
  411ae1:	mov    edx,ecx
  411ae3:	push   edx
  411ae4:	call   eax
  411ae6:	add    esp,0xc
  411ae9:	mov    ecx,DWORD PTR [esp+0x30]
  411aed:	mov    DWORD PTR fs:0x0,ecx
  411af4:	pop    ecx
  411af5:	pop    edi
  411af6:	pop    esi
  411af7:	mov    esp,ebp
  411af9:	pop    ebp
  411afa:	ret    
  411afb:	int3   
  411afc:	int3   
  411afd:	int3   
  411afe:	int3   
  411aff:	int3   
  411b00:	push   ecx
  411b01:	push   0x43ff2c
  411b06:	mov    ecx,esi
  411b08:	mov    DWORD PTR [esp+0x4],0x0
  411b10:	call   DWORD PTR ds:0x430118
  411b16:	mov    eax,esi
  411b18:	pop    ecx
  411b19:	ret    
  411b1a:	int3   
  411b1b:	int3   
  411b1c:	int3   
  411b1d:	int3   
  411b1e:	int3   
  411b1f:	int3   
  411b20:	push   ebp
  411b21:	mov    ebp,esp
  411b23:	and    esp,0xfffffff8
  411b26:	push   0xffffffff
  411b28:	push   0x42e6ca
  411b2d:	mov    eax,fs:0x0
  411b33:	push   eax
  411b34:	sub    esp,0xfc
  411b3a:	mov    eax,ds:0x43e020
  411b3f:	xor    eax,esp
  411b41:	mov    DWORD PTR [esp+0xf4],eax
  411b48:	push   esi
  411b49:	push   edi
  411b4a:	mov    eax,ds:0x43e020
  411b4f:	xor    eax,esp
  411b51:	push   eax
  411b52:	lea    eax,[esp+0x108]
  411b59:	mov    fs:0x0,eax
  411b5f:	xor    edi,edi
  411b61:	push   edi
  411b62:	lea    eax,[esp+0x1c]
  411b66:	mov    esi,ecx
  411b68:	push   ebx
  411b69:	push   eax
  411b6a:	mov    DWORD PTR [esp+0x2c],esi
  411b6e:	call   0x428370
  411b73:	mov    eax,DWORD PTR [eax]
  411b75:	add    esp,0xc
  411b78:	cmp    eax,edi
  411b7a:	je     0x411dbb
  411b80:	cmp    eax,0x1
  411b83:	je     0x411dbb
  411b89:	push   edi
  411b8a:	lea    ecx,[esp+0x1c]
  411b8e:	push   ebx
  411b8f:	push   ecx
  411b90:	call   0x428370
  411b95:	mov    eax,DWORD PTR [eax]
  411b97:	add    esp,0xc
  411b9a:	cmp    eax,0x3
  411b9d:	jne    0x411dbb
  411ba3:	push   edi
  411ba4:	lea    edx,[esp+0x1c]
  411ba8:	push   esi
  411ba9:	push   edx
  411baa:	call   0x428370
  411baf:	mov    eax,DWORD PTR [eax]
  411bb1:	add    esp,0xc
  411bb4:	cmp    eax,edi
  411bb6:	je     0x411bc7
  411bb8:	cmp    eax,0x1
  411bbb:	je     0x411bc7
  411bbd:	push   edi
  411bbe:	push   esi
  411bbf:	call   0x429060
  411bc4:	add    esp,0x8
  411bc7:	push   edi
  411bc8:	push   esi
  411bc9:	call   0x4289b0
  411bce:	add    esp,0x8
  411bd1:	test   al,al
  411bd3:	jne    0x411c24
  411bd5:	lea    eax,[esp+0x68]
  411bd9:	push   eax
  411bda:	mov    ecx,esi
  411bdc:	call   0x40cbe0
  411be1:	push   eax
  411be2:	lea    ecx,[esp+0x88]
  411be9:	push   0x431ca8
  411bee:	push   ecx
  411bef:	mov    DWORD PTR [esp+0x11c],0x3
  411bfa:	call   DWORD PTR ds:0x430170
  411c00:	add    esp,0xc
  411c03:	push   eax
  411c04:	lea    ecx,[esp+0x44]
  411c08:	mov    BYTE PTR [esp+0x114],0x4
  411c10:	call   0x404350
  411c15:	push   0x435d30
  411c1a:	lea    edx,[esp+0x44]
  411c1e:	push   edx
  411c1f:	call   0x429e76
  411c24:	push   ebx
  411c25:	lea    eax,[esp+0x14]
  411c29:	push   eax
  411c2a:	call   0x40d140
  411c2f:	mov    DWORD PTR [esp+0x110],0x5
  411c3a:	mov    DWORD PTR [esp+0x18],edi
  411c3e:	mov    DWORD PTR [esp+0x1c],edi
  411c42:	mov    BYTE PTR [esp+0x110],0x6
  411c4a:	mov    eax,DWORD PTR [esp+0x10]
  411c4e:	cmp    eax,edi
  411c50:	je     0x411d5b
  411c56:	call   0x413c10
  411c5b:	mov    esi,DWORD PTR [eax]
  411c5d:	lea    ecx,[esp+0xe4]
  411c64:	push   ecx
  411c65:	mov    ecx,esi
  411c67:	call   0x40cbe0
  411c6c:	lea    edx,[esp+0x24]
  411c70:	push   edx
  411c71:	mov    ecx,ebx
  411c73:	mov    BYTE PTR [esp+0x114],0x7
  411c7b:	call   0x40cbe0
  411c80:	push   eax
  411c81:	lea    eax,[esp+0xe8]
  411c88:	push   eax
  411c89:	mov    BYTE PTR [esp+0x118],0x8
  411c91:	call   0x417ab0
  411c96:	add    esp,0x8
  411c99:	lea    ecx,[esp+0x24]
  411c9d:	mov    BYTE PTR [esp+0x110],0x7
  411ca5:	call   DWORD PTR ds:0x43025c
  411cab:	lea    ecx,[esp+0x24]
  411caf:	push   ecx
  411cb0:	lea    edi,[esp+0xe8]
  411cb7:	call   0x417750
  411cbc:	mov    eax,DWORD PTR [esp+0x20]
  411cc0:	lea    edx,[esp+0x24]
  411cc4:	push   edx
  411cc5:	push   eax
  411cc6:	lea    ecx,[esp+0xa8]
  411ccd:	push   ecx
  411cce:	mov    BYTE PTR [esp+0x11c],0x9
  411cd6:	call   0x40cd40
  411cdb:	add    esp,0xc
  411cde:	push   0x0
  411ce0:	push   eax
  411ce1:	push   esi
  411ce2:	mov    BYTE PTR [esp+0x11c],0xa
  411cea:	call   0x428db0
  411cef:	add    esp,0xc
  411cf2:	lea    ecx,[esp+0xa0]
  411cf9:	mov    BYTE PTR [esp+0x110],0x9
  411d01:	call   DWORD PTR ds:0x430264
  411d07:	lea    ecx,[esp+0x24]
  411d0b:	mov    BYTE PTR [esp+0x110],0x7
  411d13:	call   DWORD PTR ds:0x430264
  411d19:	mov    ecx,edi
  411d1b:	mov    BYTE PTR [esp+0x110],0x6
  411d23:	call   DWORD PTR ds:0x43025c
  411d29:	mov    ecx,DWORD PTR [esp+0x10]
  411d2d:	call   0x40cf30
  411d32:	mov    eax,DWORD PTR [esp+0x10]
  411d36:	mov    edx,DWORD PTR [eax+0x10]
  411d39:	sub    edx,DWORD PTR [eax+0xc]
  411d3c:	test   edx,0xfffffff8
  411d42:	jne    0x411d51
  411d44:	lea    eax,[esp+0x10]
  411d48:	call   0x412b60
  411d4d:	mov    eax,DWORD PTR [esp+0x10]
  411d51:	test   eax,eax
  411d53:	jne    0x411c56
  411d59:	xor    edi,edi
  411d5b:	mov    DWORD PTR [esp+0x110],0xffffffff
  411d66:	mov    esi,DWORD PTR [esp+0x14]
  411d6a:	cmp    esi,edi
  411d6c:	je     0x411d98
  411d6e:	lea    eax,[esi+0x4]
  411d71:	or     ecx,0xffffffff
  411d74:	lock xadd DWORD PTR [eax],ecx
  411d78:	jne    0x411d98
  411d7a:	mov    edx,DWORD PTR [esi]
  411d7c:	mov    eax,DWORD PTR [edx+0x4]
  411d7f:	mov    ecx,esi
  411d81:	call   eax
  411d83:	lea    ecx,[esi+0x8]
  411d86:	or     edx,0xffffffff
  411d89:	lock xadd DWORD PTR [ecx],edx
  411d8d:	jne    0x411d98
  411d8f:	mov    eax,DWORD PTR [esi]
  411d91:	mov    edx,DWORD PTR [eax+0x8]
  411d94:	mov    ecx,esi
  411d96:	call   edx
  411d98:	mov    ecx,DWORD PTR [esp+0x108]
  411d9f:	mov    DWORD PTR fs:0x0,ecx
  411da6:	pop    ecx
  411da7:	pop    edi
  411da8:	pop    esi
  411da9:	mov    ecx,DWORD PTR [esp+0xf4]
  411db0:	xor    ecx,esp
  411db2:	call   0x42503a
  411db7:	mov    esp,ebp
  411db9:	pop    ebp
  411dba:	ret    
  411dbb:	lea    eax,[esp+0x84]
  411dc2:	push   eax
  411dc3:	mov    ecx,ebx
  411dc5:	call   0x40cbe0
  411dca:	push   eax
  411dcb:	lea    ecx,[esp+0x6c]
  411dcf:	push   0x431c94
  411dd4:	push   ecx
  411dd5:	mov    DWORD PTR [esp+0x11c],edi
  411ddc:	call   DWORD PTR ds:0x430170
  411de2:	add    esp,0xc
  411de5:	push   0x431c6c
  411dea:	push   eax
  411deb:	lea    edx,[esp+0x48]
  411def:	push   edx
  411df0:	mov    BYTE PTR [esp+0x11c],0x1
  411df8:	call   DWORD PTR ds:0x4301c4
  411dfe:	add    esp,0xc
  411e01:	push   eax
  411e02:	lea    ecx,[esp+0xc0]
  411e09:	mov    BYTE PTR [esp+0x114],0x2
  411e11:	call   0x404350
  411e16:	push   0x435d30
  411e1b:	lea    eax,[esp+0xc0]
  411e22:	push   eax
  411e23:	call   0x429e76
  411e28:	int3   
  411e29:	int3   
  411e2a:	int3   
  411e2b:	int3   
  411e2c:	int3   
  411e2d:	int3   
  411e2e:	int3   
  411e2f:	int3   
  411e30:	push   esi
  411e31:	mov    esi,DWORD PTR [eax+0x4]
  411e34:	test   esi,esi
  411e36:	je     0x411e63
  411e38:	lea    ecx,[esi+0x4]
  411e3b:	or     edx,0xffffffff
  411e3e:	lock xadd DWORD PTR [ecx],edx
  411e42:	jne    0x411e63
  411e44:	mov    eax,DWORD PTR [esi]
  411e46:	mov    edx,DWORD PTR [eax+0x4]
  411e49:	mov    ecx,esi
  411e4b:	call   edx
  411e4d:	lea    eax,[esi+0x8]
  411e50:	or     ecx,0xffffffff
  411e53:	lock xadd DWORD PTR [eax],ecx
  411e57:	jne    0x411e63
  411e59:	mov    edx,DWORD PTR [esi]
  411e5b:	mov    eax,DWORD PTR [edx+0x8]
  411e5e:	mov    ecx,esi
  411e60:	pop    esi
  411e61:	jmp    eax
  411e63:	pop    esi
  411e64:	ret    
  411e65:	int3   
  411e66:	int3   
  411e67:	int3   
  411e68:	int3   
  411e69:	int3   
  411e6a:	int3   
  411e6b:	int3   
  411e6c:	int3   
  411e6d:	int3   
  411e6e:	int3   
  411e6f:	int3   
  411e70:	push   ebp
  411e71:	mov    ebp,esp
  411e73:	push   0xffffffff
  411e75:	push   0x42e82d
  411e7a:	mov    eax,fs:0x0
  411e80:	push   eax
  411e81:	sub    esp,0x94
  411e87:	mov    eax,ds:0x43e020
  411e8c:	xor    eax,ebp
  411e8e:	mov    DWORD PTR [ebp-0x14],eax
  411e91:	push   ebx
  411e92:	push   esi
  411e93:	push   edi
  411e94:	push   eax
  411e95:	lea    eax,[ebp-0xc]
  411e98:	mov    fs:0x0,eax
  411e9e:	mov    DWORD PTR [ebp-0x10],esp
  411ea1:	mov    DWORD PTR [ebp-0x5c],ecx
  411ea4:	call   0x41fb20
  411ea9:	push   eax
  411eaa:	lea    ecx,[ebp-0x4c]
  411ead:	call   DWORD PTR ds:0x430118
  411eb3:	xor    edi,edi
  411eb5:	push   0x431cd0
  411eba:	mov    DWORD PTR [ebp-0x4],edi
  411ebd:	call   0x41fb20
  411ec2:	push   eax
  411ec3:	lea    eax,[ebp-0x30]
  411ec6:	push   eax
  411ec7:	call   DWORD PTR ds:0x4301a4
  411ecd:	add    esp,0xc
  411ed0:	mov    ecx,DWORD PTR ds:0x4400a4
  411ed6:	mov    DWORD PTR [ebp-0x58],ecx
  411ed9:	mov    BYTE PTR [ebp-0x4],0x2
  411edd:	call   0x4045f0
  411ee2:	mov    eax,DWORD PTR [eax+0x2c]
  411ee5:	mov    esi,0x1
  411eea:	cmp    eax,esi
  411eec:	jg     0x411f83
  411ef2:	mov    DWORD PTR [ebp-0x54],esi
  411ef5:	mov    DWORD PTR [ebp-0x50],edi
  411ef8:	call   0x4045f0
  411efd:	cmp    DWORD PTR [eax+0x2c],esi
  411f00:	jg     0x411f47
  411f02:	push   0x1000
  411f07:	call   0x425050
  411f0c:	add    esp,0x4
  411f0f:	push   0x1000
  411f14:	mov    ebx,eax
  411f16:	push   edi
  411f17:	push   ebx
  411f18:	mov    DWORD PTR [ebp-0x50],ebx
  411f1b:	call   0x429f9c
  411f20:	add    esp,0xc
  411f23:	push   ebx
  411f24:	mov    esi,0x431878
  411f29:	call   0x404100
  411f2e:	add    esp,0x4
  411f31:	push   0x3b
  411f33:	push   0x431cf0
  411f38:	lea    eax,[ebx+0x28]
  411f3b:	push   0x3c
  411f3d:	push   eax
  411f3e:	call   DWORD PTR ds:0x430384
  411f44:	add    esp,0x10
  411f47:	mov    BYTE PTR [ebp-0x4],0x3
  411f4b:	mov    ecx,DWORD PTR [ebp-0x2c]
  411f4e:	mov    eax,0x8
  411f53:	cmp    DWORD PTR [ebp-0x18],eax
  411f56:	jae    0x411f5b
  411f58:	lea    ecx,[ebp-0x2c]
  411f5b:	cmp    DWORD PTR [ebp-0x34],eax
  411f5e:	mov    eax,DWORD PTR [ebp-0x48]
  411f61:	jae    0x411f66
  411f63:	lea    eax,[ebp-0x48]
  411f66:	push   ecx
  411f67:	push   eax
  411f68:	push   0x431d1c
  411f6d:	lea    esi,[ebp-0x54]
  411f70:	call   0x4040d0
  411f75:	add    esp,0xc
  411f78:	mov    ecx,esi
  411f7a:	mov    BYTE PTR [ebp-0x4],0x2
  411f7e:	call   0x404680
  411f83:	lea    edx,[ebp-0x30]
  411f86:	push   edx
  411f87:	lea    ecx,[ebp-0x7c]
  411f8a:	call   DWORD PTR ds:0x430118
  411f90:	lea    eax,[ebp-0x4c]
  411f93:	push   eax
  411f94:	lea    ecx,[ebp-0x9c]
  411f9a:	mov    BYTE PTR [ebp-0x4],0x4
  411f9e:	call   DWORD PTR ds:0x430118
  411fa4:	lea    ecx,[ebp-0x7c]
  411fa7:	lea    ebx,[ebp-0x9c]
  411fad:	mov    BYTE PTR [ebp-0x4],0x5
  411fb1:	call   0x411b20
  411fb6:	mov    ecx,ebx
  411fb8:	mov    BYTE PTR [ebp-0x4],0x4
  411fbc:	call   DWORD PTR ds:0x430264
  411fc2:	mov    ebx,0x2
  411fc7:	lea    ecx,[ebp-0x7c]
  411fca:	mov    BYTE PTR [ebp-0x4],bl
  411fcd:	call   DWORD PTR ds:0x430264
  411fd3:	mov    ecx,DWORD PTR [ebp-0x58]
  411fd6:	mov    eax,0x407440
  411fdb:	push   ecx
  411fdc:	push   eax
  411fdd:	lea    eax,[ebp-0x80]
  411fe0:	call   0x417420
  411fe5:	lea    edx,[ebp-0x80]
  411fe8:	push   edx
  411fe9:	mov    BYTE PTR [ebp-0x4],0x6
  411fed:	call   0x403400
  411ff2:	mov    BYTE PTR [ebp-0x4],bl
  411ff5:	mov    eax,DWORD PTR [ebp-0x80]
  411ff8:	test   eax,eax
  411ffa:	je     0x412016
  411ffc:	test   al,0x1
  411ffe:	jne    0x412016
  412000:	and    eax,0xfffffffe
  412003:	mov    eax,DWORD PTR [eax]
  412005:	test   eax,eax
  412007:	je     0x412016
  412009:	lea    ecx,[ebp-0x78]
  41200c:	push   ebx
  41200d:	push   ecx
  41200e:	mov    edx,ecx
  412010:	push   edx
  412011:	call   eax
  412013:	add    esp,0xc
  412016:	sub    esp,0x1c
  412019:	lea    eax,[ebp-0x30]
  41201c:	mov    ecx,esp
  41201e:	mov    DWORD PTR [ebp-0x58],esp
  412021:	push   eax
  412022:	call   DWORD PTR ds:0x430118
  412028:	mov    ecx,DWORD PTR [ebp-0x5c]
  41202b:	push   ecx
  41202c:	call   0x412320
  412031:	mov    DWORD PTR [ebp-0x4],0x1
  412038:	lea    ecx,[ebp-0x30]
  41203b:	mov    BYTE PTR [ebp-0x4],0x0
  41203f:	call   DWORD PTR ds:0x430264
  412045:	lea    ecx,[ebp-0x4c]
  412048:	mov    DWORD PTR [ebp-0x4],0xffffffff
  41204f:	call   DWORD PTR ds:0x430264
  412055:	mov    ecx,DWORD PTR [ebp-0xc]
  412058:	mov    DWORD PTR fs:0x0,ecx
  41205f:	pop    ecx
  412060:	pop    edi
  412061:	pop    esi
  412062:	pop    ebx
  412063:	mov    ecx,DWORD PTR [ebp-0x14]
  412066:	xor    ecx,ebp
  412068:	call   0x42503a
  41206d:	mov    esp,ebp
  41206f:	pop    ebp
  412070:	ret    
  412071:	call   0x4045f0
  412076:	mov    eax,DWORD PTR [eax+0x2c]
  412079:	cmp    eax,0x4
  41207c:	jg     0x4120be
  41207e:	push   0x431cf0
  412083:	mov    esi,0x431878
  412088:	mov    eax,0x4
  41208d:	lea    edi,[ebp-0x54]
  412090:	call   0x404160
  412095:	mov    esi,eax
  412097:	mov    BYTE PTR [ebp-0x4],0x8
  41209b:	mov    ecx,DWORD PTR [ebp-0x60]
  41209e:	mov    edx,DWORD PTR [ecx]
  4120a0:	mov    eax,DWORD PTR [edx+0x4]
  4120a3:	call   eax
  4120a5:	push   eax
  4120a6:	push   0x431d30
  4120ab:	call   0x4040d0
  4120b0:	add    esp,0x8
  4120b3:	mov    ecx,edi
  4120b5:	mov    BYTE PTR [ebp-0x4],0x7
  4120b9:	call   0x404680
  4120be:	mov    DWORD PTR [ebp-0x4],0x1
  4120c5:	mov    eax,0x412038
  4120ca:	ret    
  4120cb:	int3   
  4120cc:	int3   
  4120cd:	int3   
  4120ce:	int3   
  4120cf:	int3   
  4120d0:	push   0xffffffff
  4120d2:	push   0x42d9fa
  4120d7:	mov    eax,fs:0x0
  4120dd:	push   eax
  4120de:	sub    esp,0x5c
  4120e1:	mov    eax,ds:0x43e020
  4120e6:	xor    eax,esp
  4120e8:	mov    DWORD PTR [esp+0x58],eax
  4120ec:	push   ebx
  4120ed:	push   ebp
  4120ee:	push   esi
  4120ef:	push   edi
  4120f0:	mov    eax,ds:0x43e020
  4120f5:	xor    eax,esp
  4120f7:	push   eax
  4120f8:	lea    eax,[esp+0x70]
  4120fc:	mov    fs:0x0,eax
  412102:	call   0x41fb20
  412107:	push   eax
  412108:	lea    ecx,[esp+0x54]
  41210c:	call   DWORD PTR ds:0x430118
  412112:	push   0x0
  412114:	push   0x431d50
  412119:	lea    ecx,[esp+0x58]
  41211d:	mov    DWORD PTR [esp+0x80],0x0
  412128:	call   DWORD PTR ds:0x430228
  41212e:	mov    DWORD PTR [esp+0x18],eax
  412132:	call   0x4045f0
  412137:	mov    eax,DWORD PTR [eax+0x2c]
  41213a:	cmp    eax,0x1
  41213d:	jg     0x412239
  412143:	lea    eax,[esp+0x40]
  412147:	push   eax
  412148:	lea    ecx,[esp+0x54]
  41214c:	call   DWORD PTR ds:0x430124
  412152:	mov    esi,DWORD PTR [eax]
  412154:	mov    edi,DWORD PTR [eax+0x4]
  412157:	lea    ecx,[esp+0x48]
  41215b:	push   ecx
  41215c:	lea    ecx,[esp+0x54]
  412160:	call   DWORD PTR ds:0x430128
  412166:	mov    ebp,DWORD PTR [eax]
  412168:	mov    ebx,DWORD PTR [eax+0x4]
  41216b:	push   0x0
  41216d:	push   0x0
  41216f:	lea    ecx,[esp+0x2c]
  412173:	call   DWORD PTR ds:0x4301c8
  412179:	mov    edx,DWORD PTR [esp+0x18]
  41217d:	push   edi
  41217e:	push   esi
  41217f:	push   ebx
  412180:	push   ebp
  412181:	push   edx
  412182:	lea    eax,[esp+0x38]
  412186:	push   eax
  412187:	call   0x419370
  41218c:	mov    BYTE PTR [esp+0x78],0x1
  412191:	mov    esi,0x1
  412196:	mov    DWORD PTR [esp+0x1c],esi
  41219a:	mov    DWORD PTR [esp+0x20],0x0
  4121a2:	call   0x4045f0
  4121a7:	cmp    DWORD PTR [eax+0x2c],esi
  4121aa:	jg     0x4121f3
  4121ac:	push   0x1000
  4121b1:	call   0x425050
  4121b6:	add    esp,0x4
  4121b9:	push   0x1000
  4121be:	mov    edi,eax
  4121c0:	push   0x0
  4121c2:	push   edi
  4121c3:	mov    DWORD PTR [esp+0x2c],edi
  4121c7:	call   0x429f9c
  4121cc:	add    esp,0xc
  4121cf:	push   edi
  4121d0:	mov    esi,0x431878
  4121d5:	call   0x404100
  4121da:	add    esp,0x4
  4121dd:	push   0x3b
  4121df:	push   0x431d68
  4121e4:	lea    eax,[edi+0x28]
  4121e7:	push   0x3c
  4121e9:	push   eax
  4121ea:	call   DWORD PTR ds:0x430384
  4121f0:	add    esp,0x10
  4121f3:	mov    BYTE PTR [esp+0x78],0x2
  4121f8:	cmp    DWORD PTR [esp+0x3c],0x10
  4121fd:	mov    eax,DWORD PTR [esp+0x28]
  412201:	jae    0x412207
  412203:	lea    eax,[esp+0x28]
  412207:	mov    ecx,DWORD PTR [esp+0x18]
  41220b:	push   ecx
  41220c:	push   eax
  41220d:	push   0x431d80
  412212:	lea    esi,[esp+0x28]
  412216:	call   0x4040d0
  41221b:	add    esp,0xc
  41221e:	mov    ecx,esi
  412220:	mov    BYTE PTR [esp+0x78],0x1
  412225:	call   0x404680
  41222a:	lea    ecx,[esp+0x24]
  41222e:	mov    BYTE PTR [esp+0x78],0x0
  412233:	call   DWORD PTR ds:0x43025c
  412239:	mov    edx,DWORD PTR ds:0x4301e0
  41223f:	mov    eax,DWORD PTR [esp+0x18]
  412243:	cmp    eax,DWORD PTR [edx]
  412245:	lea    ecx,[esp+0x50]
  412249:	setne  bl
  41224c:	mov    DWORD PTR [esp+0x78],0xffffffff
  412254:	call   DWORD PTR ds:0x430264
  41225a:	mov    al,bl
  41225c:	mov    ecx,DWORD PTR [esp+0x70]
  412260:	mov    DWORD PTR fs:0x0,ecx
  412267:	pop    ecx
  412268:	pop    edi
  412269:	pop    esi
  41226a:	pop    ebp
  41226b:	pop    ebx
  41226c:	mov    ecx,DWORD PTR [esp+0x58]
  412270:	xor    ecx,esp
  412272:	call   0x42503a
  412277:	add    esp,0x68
  41227a:	ret    
  41227b:	int3   
  41227c:	int3   
  41227d:	int3   
  41227e:	int3   
  41227f:	int3   
  412280:	push   ebp
  412281:	mov    ebp,esp
  412283:	and    esp,0xfffffff8
  412286:	push   0xffffffff
  412288:	push   0x42c2b8
  41228d:	mov    eax,fs:0x0
  412293:	push   eax
  412294:	sub    esp,0x28
  412297:	push   esi
  412298:	mov    eax,ds:0x43e020
  41229d:	xor    eax,esp
  41229f:	push   eax
  4122a0:	lea    eax,[esp+0x30]
  4122a4:	mov    fs:0x0,eax
  4122aa:	call   0x4120d0
  4122af:	test   al,al
  4122b1:	je     0x412304
  4122b3:	mov    ecx,0x43fec0
  4122b8:	mov    eax,0x411e70
  4122bd:	push   ecx
  4122be:	push   eax
  4122bf:	lea    esi,[esp+0x14]
  4122c3:	call   0x418e90
  4122c8:	mov    eax,esi
  4122ca:	push   eax
  4122cb:	mov    DWORD PTR [esp+0x3c],0x0
  4122d3:	call   0x403560
  4122d8:	mov    DWORD PTR [esp+0x38],0xffffffff
  4122e0:	mov    eax,DWORD PTR [esp+0xc]
  4122e4:	test   eax,eax
  4122e6:	je     0x412304
  4122e8:	test   al,0x1
  4122ea:	jne    0x412304
  4122ec:	and    eax,0xfffffffe
  4122ef:	mov    eax,DWORD PTR [eax]
  4122f1:	test   eax,eax
  4122f3:	je     0x412304
  4122f5:	lea    ecx,[esp+0x14]
  4122f9:	push   0x2
  4122fb:	push   ecx
  4122fc:	mov    edx,ecx
  4122fe:	push   edx
  4122ff:	call   eax
  412301:	add    esp,0xc
  412304:	mov    ecx,DWORD PTR [esp+0x30]
  412308:	mov    DWORD PTR fs:0x0,ecx
  41230f:	pop    ecx
  412310:	pop    esi
  412311:	mov    esp,ebp
  412313:	pop    ebp
  412314:	ret    
  412315:	int3   
  412316:	int3   
  412317:	int3   
  412318:	int3   
  412319:	int3   
  41231a:	int3   
  41231b:	int3   
  41231c:	int3   
  41231d:	int3   
  41231e:	int3   
  41231f:	int3   
  412320:	push   0xffffffff
  412322:	push   0x42ad39
  412327:	mov    eax,fs:0x0
  41232d:	push   eax
  41232e:	mov    eax,ds:0x43e020
  412333:	xor    eax,esp
  412335:	push   eax
  412336:	lea    eax,[esp+0x4]
  41233a:	mov    fs:0x0,eax
  412340:	mov    eax,DWORD PTR [esp+0x14]
  412344:	lea    ecx,[esp+0x18]
  412348:	push   ecx
  412349:	lea    ecx,[eax+0xac]
  41234f:	mov    DWORD PTR [esp+0x10],0x0
  412357:	call   DWORD PTR ds:0x43017c
  41235d:	lea    ecx,[esp+0x18]
  412361:	mov    DWORD PTR [esp+0xc],0xffffffff
  412369:	call   DWORD PTR ds:0x430264
  41236f:	mov    ecx,DWORD PTR [esp+0x4]
  412373:	mov    DWORD PTR fs:0x0,ecx
  41237a:	pop    ecx
  41237b:	add    esp,0xc
  41237e:	ret    0x20
  412381:	int3   
  412382:	int3   
  412383:	int3   
  412384:	int3   
  412385:	int3   
  412386:	int3   
  412387:	int3   
  412388:	int3   
  412389:	int3   
  41238a:	int3   
  41238b:	int3   
  41238c:	int3   
  41238d:	int3   
  41238e:	int3   
  41238f:	int3   
  412390:	push   ecx
  412391:	push   0x43ff6c
  412396:	mov    ecx,esi
  412398:	mov    DWORD PTR [esp+0x4],0x0
  4123a0:	call   DWORD PTR ds:0x430118
  4123a6:	mov    eax,esi
  4123a8:	pop    ecx
  4123a9:	ret    
  4123aa:	int3   
  4123ab:	int3   
  4123ac:	int3   
  4123ad:	int3   
  4123ae:	int3   
  4123af:	int3   
  4123b0:	push   0xffffffff
  4123b2:	push   0x42b4e8
  4123b7:	mov    eax,fs:0x0
  4123bd:	push   eax
  4123be:	push   ebx
  4123bf:	mov    eax,ds:0x43e020
  4123c4:	xor    eax,esp
  4123c6:	push   eax
  4123c7:	lea    eax,[esp+0x8]
  4123cb:	mov    fs:0x0,eax
  4123d1:	mov    ebx,DWORD PTR [esp+0x18]
  4123d5:	mov    DWORD PTR [esp+0x10],0x0
  4123dd:	call   0x413590
  4123e2:	mov    eax,DWORD PTR [ebx]
  4123e4:	push   eax
  4123e5:	call   0x42504a
  4123ea:	add    esp,0x4
  4123ed:	mov    ecx,DWORD PTR [esp+0x8]
  4123f1:	mov    DWORD PTR fs:0x0,ecx
  4123f8:	pop    ecx
  4123f9:	pop    ebx
  4123fa:	add    esp,0xc
  4123fd:	ret    0x4
  412400:	push   ebx
  412401:	push   ebp
  412402:	mov    ebp,DWORD PTR [esp+0x10]
  412406:	cmp    BYTE PTR [ebp+0x0],0x0
  41240a:	push   esi
  41240b:	push   edi
  41240c:	mov    eax,ebp
  41240e:	je     0x412416
  412410:	inc    eax
  412411:	cmp    BYTE PTR [eax],0x0
  412414:	jne    0x412410
  412416:	mov    ecx,DWORD PTR [esp+0x14]
  41241a:	mov    edi,DWORD PTR [ecx+0x18]
  41241d:	sub    eax,ebp
  41241f:	test   edi,edi
  412421:	je     0x412461
  412423:	mov    ecx,DWORD PTR [edi]
  412425:	test   ecx,ecx
  412427:	je     0x41242e
  412429:	mov    esi,DWORD PTR [edi+0x8]
  41242c:	jmp    0x412430
  41242e:	xor    esi,esi
  412430:	test   ecx,ecx
  412432:	jne    0x412439
  412434:	mov    ecx,0x4400e0
  412439:	mov    edx,ebp
  41243b:	cmp    esi,eax
  41243d:	jne    0x41245a
  41243f:	add    esi,ecx
  412441:	cmp    ecx,esi
  412443:	jae    0x412451
  412445:	mov    bl,BYTE PTR [ecx]
  412447:	cmp    bl,BYTE PTR [edx]
  412449:	jne    0x41245a
  41244b:	inc    ecx
  41244c:	inc    edx
  41244d:	cmp    ecx,esi
  41244f:	jb     0x412445
  412451:	mov    eax,edi
  412453:	pop    edi
  412454:	pop    esi
  412455:	pop    ebp
  412456:	pop    ebx
  412457:	ret    0x8
  41245a:	mov    edi,DWORD PTR [edi+0x2c]
  41245d:	test   edi,edi
  41245f:	jne    0x412423
  412461:	pop    edi
  412462:	pop    esi
  412463:	pop    ebp
  412464:	xor    eax,eax
  412466:	pop    ebx
  412467:	ret    0x8
  41246a:	int3   
  41246b:	int3   
  41246c:	int3   
  41246d:	int3   
  41246e:	int3   
  41246f:	int3   
  412470:	push   ebx
  412471:	push   ebp
  412472:	mov    ebp,DWORD PTR [esp+0x10]
  412476:	cmp    BYTE PTR [ebp+0x0],0x0
  41247a:	push   esi
  41247b:	push   edi
  41247c:	mov    eax,ebp
  41247e:	je     0x412486
  412480:	inc    eax
  412481:	cmp    BYTE PTR [eax],0x0
  412484:	jne    0x412480
  412486:	mov    ecx,DWORD PTR [esp+0x14]
  41248a:	mov    edi,DWORD PTR [ecx+0x20]
  41248d:	sub    eax,ebp
  41248f:	test   edi,edi
  412491:	je     0x4124d1
  412493:	mov    ecx,DWORD PTR [edi]
  412495:	test   ecx,ecx
  412497:	je     0x41249e
  412499:	mov    esi,DWORD PTR [edi+0x8]
  41249c:	jmp    0x4124a0
  41249e:	xor    esi,esi
  4124a0:	test   ecx,ecx
  4124a2:	jne    0x4124a9
  4124a4:	mov    ecx,0x4400e0
  4124a9:	mov    edx,ebp
  4124ab:	cmp    esi,eax
  4124ad:	jne    0x4124ca
  4124af:	add    esi,ecx
  4124b1:	cmp    ecx,esi
  4124b3:	jae    0x4124c1
  4124b5:	mov    bl,BYTE PTR [ecx]
  4124b7:	cmp    bl,BYTE PTR [edx]
  4124b9:	jne    0x4124ca
  4124bb:	inc    ecx
  4124bc:	inc    edx
  4124bd:	cmp    ecx,esi
  4124bf:	jb     0x4124b5
  4124c1:	mov    eax,edi
  4124c3:	pop    edi
  4124c4:	pop    esi
  4124c5:	pop    ebp
  4124c6:	pop    ebx
  4124c7:	ret    0x8
  4124ca:	mov    edi,DWORD PTR [edi+0x18]
  4124cd:	test   edi,edi
  4124cf:	jne    0x412493
  4124d1:	pop    edi
  4124d2:	pop    esi
  4124d3:	pop    ebp
  4124d4:	xor    eax,eax
  4124d6:	pop    ebx
  4124d7:	ret    0x8
  4124da:	int3   
  4124db:	int3   
  4124dc:	int3   
  4124dd:	int3   
  4124de:	int3   
  4124df:	int3   
  4124e0:	mov    ecx,DWORD PTR [eax+0x18]
  4124e3:	push   esi
  4124e4:	cmp    edx,ecx
  4124e6:	jne    0x412507
  4124e8:	mov    edx,DWORD PTR [ecx+0x2c]
  4124eb:	mov    DWORD PTR [eax+0x18],edx
  4124ee:	mov    edx,DWORD PTR [ecx+0x2c]
  4124f1:	xor    esi,esi
  4124f3:	cmp    edx,esi
  4124f5:	je     0x4124ff
  4124f7:	mov    DWORD PTR [edx+0x28],esi
  4124fa:	mov    DWORD PTR [ecx+0x10],esi
  4124fd:	pop    esi
  4124fe:	ret    
  4124ff:	mov    DWORD PTR [eax+0x1c],esi
  412502:	mov    DWORD PTR [ecx+0x10],esi
  412505:	pop    esi
  412506:	ret    
  412507:	mov    ecx,DWORD PTR [eax+0x1c]
  41250a:	cmp    edx,ecx
  41250c:	jne    0x41252d
  41250e:	mov    edx,DWORD PTR [ecx+0x28]
  412511:	xor    esi,esi
  412513:	cmp    edx,esi
  412515:	je     0x412525
  412517:	mov    DWORD PTR [eax+0x1c],edx
  41251a:	mov    eax,DWORD PTR [ecx+0x28]
  41251d:	mov    DWORD PTR [eax+0x2c],esi
  412520:	mov    DWORD PTR [ecx+0x10],esi
  412523:	pop    esi
  412524:	ret    
  412525:	mov    DWORD PTR [eax+0x18],esi
  412528:	mov    DWORD PTR [ecx+0x10],esi
  41252b:	pop    esi
  41252c:	ret    
  41252d:	mov    ecx,DWORD PTR [edx+0x28]
  412530:	mov    eax,DWORD PTR [edx+0x2c]
  412533:	mov    DWORD PTR [ecx+0x2c],eax
  412536:	mov    ecx,DWORD PTR [edx+0x2c]
  412539:	mov    eax,DWORD PTR [edx+0x28]
  41253c:	mov    DWORD PTR [ecx+0x28],eax
  41253f:	mov    DWORD PTR [edx+0x10],0x0
  412546:	pop    esi
  412547:	ret    
  412548:	int3   
  412549:	int3   
  41254a:	int3   
  41254b:	int3   
  41254c:	int3   
  41254d:	int3   
  41254e:	int3   
  41254f:	int3   
  412550:	mov    eax,DWORD PTR [ecx+0x20]
  412553:	push   esi
  412554:	cmp    edx,eax
  412556:	jne    0x41257d
  412558:	mov    edx,DWORD PTR [eax+0x18]
  41255b:	xor    esi,esi
  41255d:	cmp    edx,esi
  41255f:	je     0x41256f
  412561:	mov    DWORD PTR [edx+0x14],esi
  412564:	mov    DWORD PTR [eax+0x10],esi
  412567:	mov    eax,DWORD PTR [eax+0x18]
  41256a:	mov    DWORD PTR [ecx+0x20],eax
  41256d:	pop    esi
  41256e:	ret    
  41256f:	mov    DWORD PTR [ecx+0x24],esi
  412572:	mov    DWORD PTR [eax+0x10],esi
  412575:	mov    eax,DWORD PTR [eax+0x18]
  412578:	mov    DWORD PTR [ecx+0x20],eax
  41257b:	pop    esi
  41257c:	ret    
  41257d:	mov    eax,DWORD PTR [ecx+0x24]
  412580:	cmp    edx,eax
  412582:	jne    0x4125a3
  412584:	mov    edx,DWORD PTR [eax+0x14]
  412587:	xor    esi,esi
  412589:	cmp    edx,esi
  41258b:	je     0x41259b
  41258d:	mov    DWORD PTR [edx+0x18],esi
  412590:	mov    edx,DWORD PTR [eax+0x14]
  412593:	mov    DWORD PTR [ecx+0x24],edx
  412596:	mov    DWORD PTR [eax+0x10],esi
  412599:	pop    esi
  41259a:	ret    
  41259b:	mov    DWORD PTR [ecx+0x20],esi
  41259e:	mov    DWORD PTR [eax+0x10],esi
  4125a1:	pop    esi
  4125a2:	ret    
  4125a3:	mov    eax,DWORD PTR [edx+0x14]
  4125a6:	mov    ecx,DWORD PTR [edx+0x18]
  4125a9:	mov    DWORD PTR [eax+0x18],ecx
  4125ac:	mov    eax,DWORD PTR [edx+0x18]
  4125af:	mov    ecx,DWORD PTR [edx+0x14]
  4125b2:	mov    DWORD PTR [eax+0x14],ecx
  4125b5:	mov    DWORD PTR [edx+0x10],0x0
  4125bc:	pop    esi
  4125bd:	ret    
  4125be:	int3   
  4125bf:	int3   
  4125c0:	mov    ecx,DWORD PTR [esi+0x4]
  4125c3:	mov    eax,ecx
  4125c5:	neg    eax
  4125c7:	and    eax,0x3
  4125ca:	add    eax,ecx
  4125cc:	push   ebx
  4125cd:	lea    ecx,[eax+0x30]
  4125d0:	xor    ebx,ebx
  4125d2:	push   ebp
  4125d3:	mov    ebp,DWORD PTR [esp+0x10]
  4125d7:	cmp    ecx,DWORD PTR [esi+0x8]
  4125da:	jbe    0x41261d
  4125dc:	mov    eax,DWORD PTR [esi+0x1000c]
  4125e2:	push   0x1000a
  4125e7:	cmp    eax,ebx
  4125e9:	je     0x4125ef
  4125eb:	call   eax
  4125ed:	jmp    0x4125f4
  4125ef:	call   0x425023
  4125f4:	mov    edx,DWORD PTR [esi]
  4125f6:	mov    ecx,eax
  4125f8:	neg    ecx
  4125fa:	and    ecx,0x3
  4125fd:	add    ecx,eax
  4125ff:	mov    DWORD PTR [ecx],edx
  412601:	mov    DWORD PTR [esi],eax
  412603:	add    eax,0x1000a
  412608:	add    ecx,0x4
  41260b:	mov    DWORD PTR [esi+0x8],eax
  41260e:	mov    eax,ecx
  412610:	neg    eax
  412612:	and    eax,0x3
  412615:	add    esp,0x4
  412618:	mov    DWORD PTR [esi+0x4],ecx
  41261b:	add    eax,ecx
  41261d:	lea    ecx,[eax+0x30]
  412620:	mov    DWORD PTR [esi+0x4],ecx
  412623:	cmp    eax,ebx
  412625:	je     0x41263e
  412627:	mov    edx,DWORD PTR [esp+0xc]
  41262b:	mov    DWORD PTR [eax],ebx
  41262d:	mov    DWORD PTR [eax+0x4],ebx
  412630:	mov    DWORD PTR [eax+0x10],ebx
  412633:	mov    DWORD PTR [eax+0x14],edx
  412636:	mov    DWORD PTR [eax+0x18],ebx
  412639:	mov    DWORD PTR [eax+0x20],ebx
  41263c:	jmp    0x412640
  41263e:	xor    eax,eax
  412640:	cmp    edi,ebx
  412642:	je     0x41265c
  412644:	mov    ecx,edi
  412646:	cmp    BYTE PTR [edi],bl
  412648:	je     0x412655
  41264a:	lea    ebx,[ebx+0x0]
  412650:	inc    ecx
  412651:	cmp    BYTE PTR [ecx],bl
  412653:	jne    0x412650
  412655:	sub    ecx,edi
  412657:	mov    DWORD PTR [eax],edi
  412659:	mov    DWORD PTR [eax+0x8],ecx
  41265c:	cmp    ebp,ebx
  41265e:	je     0x412674
  412660:	mov    ecx,ebp
  412662:	cmp    BYTE PTR [ebp+0x0],bl
  412665:	je     0x41266c
  412667:	inc    ecx
  412668:	cmp    BYTE PTR [ecx],bl
  41266a:	jne    0x412667
  41266c:	sub    ecx,ebp
  41266e:	mov    DWORD PTR [eax+0x4],ebp
  412671:	mov    DWORD PTR [eax+0xc],ecx
  412674:	pop    ebp
  412675:	pop    ebx
  412676:	ret    0x8
  412679:	int3   
  41267a:	int3   
  41267b:	int3   
  41267c:	int3   
  41267d:	int3   
  41267e:	int3   
  41267f:	int3   
  412680:	mov    ecx,DWORD PTR [esi+0x4]
  412683:	mov    eax,ecx
  412685:	neg    eax
  412687:	and    eax,0x3
  41268a:	add    eax,ecx
  41268c:	lea    ecx,[eax+0x1c]
  41268f:	push   ebp
  412690:	mov    ebp,DWORD PTR [esp+0x8]
  412694:	cmp    ecx,DWORD PTR [esi+0x8]
  412697:	jbe    0x4126da
  412699:	mov    eax,DWORD PTR [esi+0x1000c]
  41269f:	push   0x1000a
  4126a4:	test   eax,eax
  4126a6:	je     0x4126ac
  4126a8:	call   eax
  4126aa:	jmp    0x4126b1
  4126ac:	call   0x425023
  4126b1:	mov    edx,DWORD PTR [esi]
  4126b3:	mov    ecx,eax
  4126b5:	neg    ecx
  4126b7:	and    ecx,0x3
  4126ba:	add    ecx,eax
  4126bc:	mov    DWORD PTR [ecx],edx
  4126be:	mov    DWORD PTR [esi],eax
  4126c0:	add    eax,0x1000a
  4126c5:	add    ecx,0x4
  4126c8:	mov    DWORD PTR [esi+0x8],eax
  4126cb:	mov    eax,ecx
  4126cd:	neg    eax
  4126cf:	and    eax,0x3
  4126d2:	add    esp,0x4
  4126d5:	mov    DWORD PTR [esi+0x4],ecx
  4126d8:	add    eax,ecx
  4126da:	lea    ecx,[eax+0x1c]
  4126dd:	mov    DWORD PTR [esi+0x4],ecx
  4126e0:	test   eax,eax
  4126e2:	je     0x4126fa
  4126e4:	mov    DWORD PTR [eax],0x0
  4126ea:	mov    DWORD PTR [eax+0x4],0x0
  4126f1:	mov    DWORD PTR [eax+0x10],0x0
  4126f8:	jmp    0x4126fc
  4126fa:	xor    eax,eax
  4126fc:	test   edi,edi
  4126fe:	je     0x412714
  412700:	cmp    BYTE PTR [edi],0x0
  412703:	mov    ecx,edi
  412705:	je     0x41270d
  412707:	inc    ecx
  412708:	cmp    BYTE PTR [ecx],0x0
  41270b:	jne    0x412707
  41270d:	sub    ecx,edi
  41270f:	mov    DWORD PTR [eax],edi
  412711:	mov    DWORD PTR [eax+0x8],ecx
  412714:	test   ebp,ebp
  412716:	je     0x41272e
  412718:	cmp    BYTE PTR [ebp+0x0],0x0
  41271c:	mov    ecx,ebp
  41271e:	je     0x412726
  412720:	inc    ecx
  412721:	cmp    BYTE PTR [ecx],0x0
  412724:	jne    0x412720
  412726:	sub    ecx,ebp
  412728:	mov    DWORD PTR [eax+0x4],ebp
  41272b:	mov    DWORD PTR [eax+0xc],ecx
  41272e:	pop    ebp
  41272f:	ret    0x4
  412732:	int3   
  412733:	int3   
  412734:	int3   
  412735:	int3   
  412736:	int3   
  412737:	int3   
  412738:	int3   
  412739:	int3   
  41273a:	int3   
  41273b:	int3   
  41273c:	int3   
  41273d:	int3   
  41273e:	int3   
  41273f:	int3   
  412740:	push   0xffffffff
  412742:	push   0x42bf98
  412747:	mov    eax,fs:0x0
  41274d:	push   eax
  41274e:	push   esi
  41274f:	push   edi
  412750:	mov    eax,ds:0x43e020
  412755:	xor    eax,esp
  412757:	push   eax
  412758:	lea    eax,[esp+0xc]
  41275c:	mov    fs:0x0,eax
  412762:	mov    esi,DWORD PTR [esp+0x1c]
  412766:	xor    edi,edi
  412768:	mov    DWORD PTR [esp+0x14],edi
  41276c:	mov    eax,DWORD PTR [esi+0xc]
  41276f:	cmp    eax,edi
  412771:	je     0x412783
  412773:	mov    ecx,DWORD PTR [esi+0x14]
  412776:	sub    ecx,eax
  412778:	push   ecx
  412779:	push   eax
  41277a:	lea    ecx,[esi+0x8]
  41277d:	call   DWORD PTR ds:0x4301cc
  412783:	mov    edx,DWORD PTR [esi]
  412785:	push   edx
  412786:	mov    DWORD PTR [esi+0xc],edi
  412789:	mov    DWORD PTR [esi+0x10],edi
  41278c:	mov    DWORD PTR [esi+0x14],edi
  41278f:	call   0x42504a
  412794:	add    esp,0x4
  412797:	mov    ecx,DWORD PTR [esp+0xc]
  41279b:	mov    DWORD PTR fs:0x0,ecx
  4127a2:	pop    ecx
  4127a3:	pop    edi
  4127a4:	pop    esi
  4127a5:	add    esp,0xc
  4127a8:	ret    0x4
  4127ab:	int3   
  4127ac:	int3   
  4127ad:	int3   
  4127ae:	int3   
  4127af:	int3   
  4127b0:	cmp    DWORD PTR [eax+0x8],0x8
  4127b4:	jbe    0x4127c3
  4127b6:	mov    eax,DWORD PTR [eax]
  4127b8:	test   eax,eax
  4127ba:	je     0x4127c3
  4127bc:	push   eax
  4127bd:	call   0x42517c
  4127c2:	pop    ecx
  4127c3:	ret    
  4127c4:	int3   
  4127c5:	int3   
  4127c6:	int3   
  4127c7:	int3   
  4127c8:	int3   
  4127c9:	int3   
  4127ca:	int3   
  4127cb:	int3   
  4127cc:	int3   
  4127cd:	int3   
  4127ce:	int3   
  4127cf:	int3   
  4127d0:	push   0xffffffff
  4127d2:	push   0x42d108
  4127d7:	mov    eax,fs:0x0
  4127dd:	push   eax
  4127de:	push   ebx
  4127df:	push   esi
  4127e0:	push   edi
  4127e1:	mov    eax,ds:0x43e020
  4127e6:	xor    eax,esp
  4127e8:	push   eax
  4127e9:	lea    eax,[esp+0x10]
  4127ed:	mov    fs:0x0,eax
  4127f3:	mov    esi,DWORD PTR [esp+0x20]
  4127f7:	xor    ebx,ebx
  4127f9:	mov    DWORD PTR [esp+0x18],ebx
  4127fd:	mov    eax,DWORD PTR [esi+0xc]
  412800:	cmp    eax,ebx
  412802:	je     0x41281e
  412804:	mov    ecx,DWORD PTR [esp+0x20]
  412808:	mov    edi,DWORD PTR [esi+0x10]
  41280b:	push   ecx
  41280c:	push   eax
  41280d:	call   0x419550
  412812:	mov    edx,DWORD PTR [esi+0xc]
  412815:	push   edx
  412816:	call   0x42504a
  41281b:	add    esp,0xc
  41281e:	mov    eax,DWORD PTR [esi]
  412820:	push   eax
  412821:	mov    DWORD PTR [esi+0xc],ebx
  412824:	mov    DWORD PTR [esi+0x10],ebx
  412827:	mov    DWORD PTR [esi+0x14],ebx
  41282a:	call   0x42504a
  41282f:	add    esp,0x4
  412832:	mov    ecx,DWORD PTR [esp+0x10]
  412836:	mov    DWORD PTR fs:0x0,ecx
  41283d:	pop    ecx
  41283e:	pop    edi
  41283f:	pop    esi
  412840:	pop    ebx
  412841:	add    esp,0xc
  412844:	ret    0x4
  412847:	int3   
  412848:	int3   
  412849:	int3   
  41284a:	int3   
  41284b:	int3   
  41284c:	int3   
  41284d:	int3   
  41284e:	int3   
  41284f:	int3   
  412850:	push   ebp
  412851:	mov    ebp,DWORD PTR [esp+0x8]
  412855:	cmp    ebp,ebx
  412857:	je     0x4129a4
  41285d:	mov    eax,DWORD PTR [ebx+0xc]
  412860:	mov    ecx,DWORD PTR [ebx+0x10]
  412863:	sub    ecx,eax
  412865:	mov    eax,0x2aaaaaab
  41286a:	imul   ecx
  41286c:	push   esi
  41286d:	push   edi
  41286e:	sar    edx,0x4
  412871:	mov    edi,edx
  412873:	shr    edi,0x1f
  412876:	add    edi,edx
  412878:	jne    0x412889
  41287a:	mov    esi,ebp
  41287c:	call   0x4137c0
  412881:	pop    edi
  412882:	pop    esi
  412883:	mov    eax,ebp
  412885:	pop    ebp
  412886:	ret    0x4
  412889:	mov    ecx,DWORD PTR [ebp+0x10]
  41288c:	mov    esi,DWORD PTR [ebp+0xc]
  41288f:	sub    ecx,esi
  412891:	mov    eax,0x2aaaaaab
  412896:	imul   ecx
  412898:	sar    edx,0x4
  41289b:	mov    ecx,edx
  41289d:	shr    ecx,0x1f
  4128a0:	add    ecx,edx
  4128a2:	cmp    edi,ecx
  4128a4:	ja     0x4128ed
  4128a6:	mov    eax,DWORD PTR [ebx+0x10]
  4128a9:	mov    edi,DWORD PTR [ebx+0xc]
  4128ac:	call   0x417b20
  4128b1:	mov    ecx,DWORD PTR [esp+0x10]
  4128b5:	mov    edi,DWORD PTR [ebp+0x10]
  4128b8:	push   ecx
  4128b9:	push   eax
  4128ba:	call   0x419550
  4128bf:	mov    ecx,DWORD PTR [ebx+0x10]
  4128c2:	sub    ecx,DWORD PTR [ebx+0xc]
  4128c5:	mov    eax,0x2aaaaaab
  4128ca:	imul   ecx
  4128cc:	sar    edx,0x4
  4128cf:	mov    eax,edx
  4128d1:	shr    eax,0x1f
  4128d4:	add    eax,edx
  4128d6:	add    esp,0x8
  4128d9:	lea    edx,[eax+eax*2]
  4128dc:	shl    edx,0x5
  4128df:	add    edx,DWORD PTR [ebp+0xc]
  4128e2:	pop    edi
  4128e3:	pop    esi
  4128e4:	mov    DWORD PTR [ebp+0x10],edx
  4128e7:	mov    eax,ebp
  4128e9:	pop    ebp
  4128ea:	ret    0x4
  4128ed:	test   esi,esi
  4128ef:	jne    0x4128f5
  4128f1:	xor    eax,eax
  4128f3:	jmp    0x41290b
  4128f5:	mov    edx,DWORD PTR [ebp+0x14]
  4128f8:	sub    edx,esi
  4128fa:	mov    eax,0x2aaaaaab
  4128ff:	imul   edx
  412901:	sar    edx,0x4
  412904:	mov    eax,edx
  412906:	shr    eax,0x1f
  412909:	add    eax,edx
  41290b:	cmp    edi,eax
  41290d:	ja     0x41293f
  41290f:	mov    edi,DWORD PTR [ebx+0xc]
  412912:	lea    eax,[ecx+ecx*2]
  412915:	shl    eax,0x5
  412918:	add    eax,edi
  41291a:	mov    DWORD PTR [esp+0x10],eax
  41291e:	call   0x417b20
  412923:	mov    eax,DWORD PTR [ebx+0x10]
  412926:	mov    ecx,DWORD PTR [esp+0x10]
  41292a:	mov    edx,DWORD PTR [ebp+0x10]
  41292d:	push   eax
  41292e:	push   ecx
  41292f:	call   0x417b70
  412934:	pop    edi
  412935:	mov    DWORD PTR [ebp+0x10],eax
  412938:	pop    esi
  412939:	mov    eax,ebp
  41293b:	pop    ebp
  41293c:	ret    0x4
  41293f:	test   esi,esi
  412941:	je     0x41295d
  412943:	mov    edx,DWORD PTR [esp+0x10]
  412947:	mov    edi,DWORD PTR [ebp+0x10]
  41294a:	push   edx
  41294b:	push   esi
  41294c:	call   0x419550
  412951:	mov    eax,DWORD PTR [ebp+0xc]
  412954:	push   eax
  412955:	call   0x42504a
  41295a:	add    esp,0xc
  41295d:	mov    ecx,DWORD PTR [ebx+0x10]
  412960:	sub    ecx,DWORD PTR [ebx+0xc]
  412963:	mov    eax,0x2aaaaaab
  412968:	imul   ecx
  41296a:	sar    edx,0x4
  41296d:	mov    esi,edx
  41296f:	mov    eax,0x0
  412974:	shr    esi,0x1f
  412977:	add    esi,edx
  412979:	mov    DWORD PTR [ebp+0xc],eax
  41297c:	mov    DWORD PTR [ebp+0x10],eax
  41297f:	mov    DWORD PTR [ebp+0x14],eax
  412982:	je     0x4129a2
  412984:	mov    edi,ebp
  412986:	call   0x413810
  41298b:	test   al,al
  41298d:	je     0x4129a2
  41298f:	mov    ecx,DWORD PTR [ebx+0x10]
  412992:	mov    edx,DWORD PTR [ebx+0xc]
  412995:	push   ecx
  412996:	push   edx
  412997:	mov    edx,DWORD PTR [ebp+0xc]
  41299a:	call   0x417b70
  41299f:	mov    DWORD PTR [ebp+0x10],eax
  4129a2:	pop    edi
  4129a3:	pop    esi
  4129a4:	mov    eax,ebp
  4129a6:	pop    ebp
  4129a7:	ret    0x4
  4129aa:	int3   
  4129ab:	int3   
  4129ac:	int3   
  4129ad:	int3   
  4129ae:	int3   
  4129af:	int3   
  4129b0:	sub    esp,0xc
  4129b3:	push   ebx
  4129b4:	mov    ebx,DWORD PTR [edi+0xc]
  4129b7:	push   ebp
  4129b8:	mov    ebp,DWORD PTR [esp+0x18]
  4129bc:	push   esi
  4129bd:	test   ebx,ebx
  4129bf:	jne    0x4129c5
  4129c1:	xor    ecx,ecx
  4129c3:	jmp    0x4129db
  4129c5:	mov    ecx,DWORD PTR [edi+0x14]
  4129c8:	sub    ecx,ebx
  4129ca:	mov    eax,0x2aaaaaab
  4129cf:	imul   ecx
  4129d1:	sar    edx,0x4
  4129d4:	mov    ecx,edx
  4129d6:	shr    ecx,0x1f
  4129d9:	add    ecx,edx
  4129db:	mov    esi,DWORD PTR [edi+0x10]
  4129de:	mov    edx,esi
  4129e0:	sub    edx,ebx
  4129e2:	mov    eax,0x2aaaaaab
  4129e7:	imul   edx
  4129e9:	sar    edx,0x4
  4129ec:	mov    eax,edx
  4129ee:	shr    eax,0x1f
  4129f1:	add    eax,edx
  4129f3:	cmp    eax,ecx
  4129f5:	jae    0x412a25
  4129f7:	mov    BYTE PTR [esp+0x1c],0x0
  4129fc:	mov    ecx,DWORD PTR [esp+0x1c]
  412a00:	mov    edx,DWORD PTR [esp+0x1c]
  412a04:	push   ecx
  412a05:	push   edx
  412a06:	push   esi
  412a07:	mov    ecx,ebp
  412a09:	mov    edx,0x1
  412a0e:	call   0x4195d0
  412a13:	add    esp,0xc
  412a16:	add    esi,0x60
  412a19:	mov    DWORD PTR [edi+0x10],esi
  412a1c:	pop    esi
  412a1d:	pop    ebp
  412a1e:	pop    ebx
  412a1f:	add    esp,0xc
  412a22:	ret    0x4
  412a25:	cmp    ebx,esi
  412a27:	jbe    0x412a2f
  412a29:	call   DWORD PTR ds:0x430390
  412a2f:	mov    eax,DWORD PTR [edi]
  412a31:	push   esi
  412a32:	push   eax
  412a33:	push   ebp
  412a34:	lea    eax,[esp+0x1c]
  412a38:	push   eax
  412a39:	mov    eax,edi
  412a3b:	call   0x4136e0
  412a40:	pop    esi
  412a41:	pop    ebp
  412a42:	pop    ebx
  412a43:	add    esp,0xc
  412a46:	ret    0x4
  412a49:	int3   
  412a4a:	int3   
  412a4b:	int3   
  412a4c:	int3   
  412a4d:	int3   
  412a4e:	int3   
  412a4f:	int3   
  412a50:	push   0xffffffff
  412a52:	push   0x42c918
  412a57:	mov    eax,fs:0x0
  412a5d:	push   eax
  412a5e:	sub    esp,0x2c
  412a61:	push   ebx
  412a62:	push   ebp
  412a63:	push   esi
  412a64:	mov    eax,ds:0x43e020
  412a69:	xor    eax,esp
  412a6b:	push   eax
  412a6c:	lea    eax,[esp+0x3c]
  412a70:	mov    fs:0x0,eax
  412a76:	mov    ebp,DWORD PTR [esp+0x4c]
  412a7a:	push   ebp
  412a7b:	mov    eax,edi
  412a7d:	call   0x415060
  412a82:	mov    ebx,eax
  412a84:	test   edi,edi
  412a86:	jne    0x412a8e
  412a88:	call   DWORD PTR ds:0x430390
  412a8e:	mov    esi,DWORD PTR [edi]
  412a90:	mov    eax,DWORD PTR [edi+0x18]
  412a93:	mov    DWORD PTR [esp+0x14],eax
  412a97:	test   esi,esi
  412a99:	je     0x412a9f
  412a9b:	cmp    esi,esi
  412a9d:	je     0x412aa5
  412a9f:	call   DWORD PTR ds:0x430390
  412aa5:	cmp    ebx,DWORD PTR [esp+0x14]
  412aa9:	je     0x412abd
  412aab:	lea    ecx,[ebx+0xc]
  412aae:	push   ecx
  412aaf:	push   ebp
  412ab0:	call   DWORD PTR ds:0x4301e8
  412ab6:	add    esp,0x8
  412ab9:	test   al,al
  412abb:	je     0x412afc
  412abd:	push   ebp
  412abe:	lea    ecx,[esp+0x1c]
  412ac2:	call   DWORD PTR ds:0x430118
  412ac8:	xor    eax,eax
  412aca:	mov    DWORD PTR [esp+0x34],eax
  412ace:	push   ebx
  412acf:	push   esi
  412ad0:	mov    DWORD PTR [esp+0x4c],eax
  412ad4:	lea    edx,[esp+0x20]
  412ad8:	push   edx
  412ad9:	lea    eax,[esp+0x1c]
  412add:	push   eax
  412ade:	mov    eax,edi
  412ae0:	call   0x4138f0
  412ae5:	mov    esi,DWORD PTR [eax]
  412ae7:	mov    ebx,DWORD PTR [eax+0x4]
  412aea:	lea    ecx,[esp+0x18]
  412aee:	mov    DWORD PTR [esp+0x44],0xffffffff
  412af6:	call   DWORD PTR ds:0x430264
  412afc:	test   esi,esi
  412afe:	jne    0x412b29
  412b00:	call   DWORD PTR ds:0x430390
  412b06:	cmp    ebx,DWORD PTR [esi+0x18]
  412b09:	jne    0x412b11
  412b0b:	call   DWORD PTR ds:0x430390
  412b11:	lea    eax,[ebx+0x28]
  412b14:	mov    ecx,DWORD PTR [esp+0x3c]
  412b18:	mov    DWORD PTR fs:0x0,ecx
  412b1f:	pop    ecx
  412b20:	pop    esi
  412b21:	pop    ebp
  412b22:	pop    ebx
  412b23:	add    esp,0x38
  412b26:	ret    0x4
  412b29:	mov    esi,DWORD PTR [esi]
  412b2b:	jmp    0x412b06
  412b2d:	int3   
  412b2e:	int3   
  412b2f:	int3   
  412b30:	push   ecx
  412b31:	push   ebx
  412b32:	mov    ebx,DWORD PTR [esi+0x10]
  412b35:	mov    eax,ebx
  412b37:	sub    eax,DWORD PTR [esi+0xc]
  412b3a:	test   eax,0xfffffff8
  412b3f:	je     0x412b55
  412b41:	mov    ecx,DWORD PTR [esp+0x4]
  412b45:	push   ecx
  412b46:	lea    eax,[ebx-0x8]
  412b49:	call   0x419670
  412b4e:	add    esp,0x4
  412b51:	add    DWORD PTR [esi+0x10],0xfffffff8
  412b55:	pop    ebx
  412b56:	pop    ecx
  412b57:	ret    
  412b58:	int3   
  412b59:	int3   
  412b5a:	int3   
  412b5b:	int3   
  412b5c:	int3   
  412b5d:	int3   
  412b5e:	int3   
  412b5f:	int3   
  412b60:	sub    esp,0x10
  412b63:	lea    ecx,[esp+0x4]
  412b67:	push   esi
  412b68:	cmp    ecx,eax
  412b6a:	je     0x412b72
  412b6c:	mov    DWORD PTR [eax],0x0
  412b72:	mov    esi,DWORD PTR [eax+0x4]
  412b75:	mov    DWORD PTR [eax+0x4],0x0
  412b7c:	test   esi,esi
  412b7e:	je     0x412bae
  412b80:	lea    edx,[esi+0x4]
  412b83:	or     eax,0xffffffff
  412b86:	lock xadd DWORD PTR [edx],eax
  412b8a:	jne    0x412bae
  412b8c:	mov    edx,DWORD PTR [esi]
  412b8e:	mov    eax,DWORD PTR [edx+0x4]
  412b91:	mov    ecx,esi
  412b93:	call   eax
  412b95:	lea    ecx,[esi+0x8]
  412b98:	or     edx,0xffffffff
  412b9b:	lock xadd DWORD PTR [ecx],edx
  412b9f:	jne    0x412bae
  412ba1:	mov    eax,DWORD PTR [esi]
  412ba3:	mov    edx,DWORD PTR [eax+0x8]
  412ba6:	mov    ecx,esi
  412ba8:	pop    esi
  412ba9:	add    esp,0x10
  412bac:	jmp    edx
  412bae:	pop    esi
  412baf:	add    esp,0x10
  412bb2:	ret    
  412bb3:	int3   
  412bb4:	int3   
  412bb5:	int3   
  412bb6:	int3   
  412bb7:	int3   
  412bb8:	int3   
  412bb9:	int3   
  412bba:	int3   
  412bbb:	int3   
  412bbc:	int3   
  412bbd:	int3   
  412bbe:	int3   
  412bbf:	int3   
  412bc0:	push   0xffffffff
  412bc2:	push   0x42aee6
  412bc7:	mov    eax,fs:0x0
  412bcd:	push   eax
  412bce:	sub    esp,0x50
  412bd1:	mov    eax,ds:0x43e020
  412bd6:	xor    eax,esp
  412bd8:	mov    DWORD PTR [esp+0x4c],eax
  412bdc:	push   esi
  412bdd:	push   edi
  412bde:	mov    eax,ds:0x43e020
  412be3:	xor    eax,esp
  412be5:	push   eax
  412be6:	lea    eax,[esp+0x5c]
  412bea:	mov    fs:0x0,eax
  412bf0:	mov    esi,ecx
  412bf2:	cmp    DWORD PTR [esi],0x0
  412bf5:	je     0x412c91
  412bfb:	lea    ecx,[esp+0x20]
  412bff:	call   DWORD PTR ds:0x430260
  412c05:	add    esi,0x4
  412c08:	push   esi
  412c09:	lea    eax,[esp+0x40]
  412c0d:	push   0x430cb4
  412c12:	push   eax
  412c13:	mov    DWORD PTR [esp+0x70],0x0
  412c1b:	call   DWORD PTR ds:0x430170
  412c21:	add    esp,0xc
  412c24:	push   eax
  412c25:	lea    ecx,[esp+0x24]
  412c29:	mov    BYTE PTR [esp+0x68],0x1
  412c2e:	call   DWORD PTR ds:0x430174
  412c34:	lea    ecx,[esp+0x3c]
  412c38:	mov    BYTE PTR [esp+0x64],0x0
  412c3d:	call   DWORD PTR ds:0x43025c
  412c43:	push   0x2a
  412c45:	push   0x431da8
  412c4a:	push   0x430d24
  412c4f:	lea    ecx,[esp+0x18]
  412c53:	call   DWORD PTR ds:0x430000
  412c59:	mov    BYTE PTR [esp+0x64],0x2
  412c5e:	cmp    DWORD PTR [esp+0x38],0x10
  412c63:	mov    eax,DWORD PTR [esp+0x24]
  412c67:	jae    0x412c6d
  412c69:	lea    eax,[esp+0x24]
  412c6d:	push   0x10000010
  412c72:	push   eax
  412c73:	lea    ecx,[esp+0x14]
  412c77:	push   ecx
  412c78:	lea    ecx,[esp+0x20]
  412c7c:	call   DWORD PTR ds:0x430008
  412c82:	push   0x43581c
  412c87:	lea    edx,[esp+0x18]
  412c8b:	push   edx
  412c8c:	call   0x429e76
  412c91:	lea    edi,[esi+0x4]
  412c94:	push   0x431780
  412c99:	mov    ecx,edi
  412c9b:	call   DWORD PTR ds:0x430178
  412ca1:	push   0x431780
  412ca6:	call   DWORD PTR ds:0x4303b8
  412cac:	mov    DWORD PTR [esi],eax
  412cae:	test   eax,eax
  412cb0:	jne    0x412d49
  412cb6:	lea    ecx,[esp+0x3c]
  412cba:	call   DWORD PTR ds:0x430260
  412cc0:	push   edi
  412cc1:	lea    eax,[esp+0x24]
  412cc5:	push   0x430d64
  412cca:	push   eax
  412ccb:	mov    DWORD PTR [esp+0x70],0x3
  412cd3:	call   DWORD PTR ds:0x430170
  412cd9:	add    esp,0xc
  412cdc:	push   eax
  412cdd:	lea    ecx,[esp+0x40]
  412ce1:	mov    BYTE PTR [esp+0x68],0x4
  412ce6:	call   DWORD PTR ds:0x430174
  412cec:	lea    ecx,[esp+0x20]
  412cf0:	mov    BYTE PTR [esp+0x64],0x3
  412cf5:	call   DWORD PTR ds:0x43025c
  412cfb:	push   0x33
  412cfd:	push   0x431da8
  412d02:	push   0x430d24
  412d07:	lea    ecx,[esp+0x1c]
  412d0b:	call   DWORD PTR ds:0x430000
  412d11:	mov    BYTE PTR [esp+0x64],0x5
  412d16:	cmp    DWORD PTR [esp+0x54],0x10
  412d1b:	mov    eax,DWORD PTR [esp+0x40]
  412d1f:	jae    0x412d25
  412d21:	lea    eax,[esp+0x40]
  412d25:	push   0x10000010
  412d2a:	push   eax
  412d2b:	lea    ecx,[esp+0x18]
  412d2f:	push   ecx
  412d30:	lea    ecx,[esp+0x20]
  412d34:	call   DWORD PTR ds:0x430008
  412d3a:	push   0x43581c
  412d3f:	lea    edx,[esp+0x18]
  412d43:	push   edx
  412d44:	call   0x429e76
  412d49:	mov    eax,0x1
  412d4e:	mov    ecx,DWORD PTR [esp+0x5c]
  412d52:	mov    DWORD PTR fs:0x0,ecx
  412d59:	pop    ecx
  412d5a:	pop    edi
  412d5b:	pop    esi
  412d5c:	mov    ecx,DWORD PTR [esp+0x4c]
  412d60:	xor    ecx,esp
  412d62:	call   0x42503a
  412d67:	add    esp,0x5c
  412d6a:	ret    
  412d6b:	int3   
  412d6c:	int3   
  412d6d:	int3   
  412d6e:	int3   
  412d6f:	int3   
  412d70:	push   0xffffffff
  412d72:	push   0x42b4e8
  412d77:	mov    eax,fs:0x0
  412d7d:	push   eax
  412d7e:	push   esi
  412d7f:	mov    eax,ds:0x43e020
  412d84:	xor    eax,esp
  412d86:	push   eax
  412d87:	lea    eax,[esp+0x8]
  412d8b:	mov    fs:0x0,eax
  412d91:	mov    esi,DWORD PTR [esp+0x18]
  412d95:	push   0x4
  412d97:	call   0x425050
  412d9c:	xor    ecx,ecx
  412d9e:	add    esp,0x4
  412da1:	cmp    eax,ecx
  412da3:	je     0x412da9
  412da5:	mov    DWORD PTR [eax],esi
  412da7:	jmp    0x412dab
  412da9:	xor    eax,eax
  412dab:	mov    DWORD PTR [esi],eax
  412dad:	mov    DWORD PTR [esi+0xc],ecx
  412db0:	mov    DWORD PTR [esi+0x10],ecx
  412db3:	mov    DWORD PTR [esi+0x14],ecx
  412db6:	mov    eax,esi
  412db8:	mov    ecx,DWORD PTR [esp+0x8]
  412dbc:	mov    DWORD PTR fs:0x0,ecx
  412dc3:	pop    ecx
  412dc4:	pop    esi
  412dc5:	add    esp,0xc
  412dc8:	ret    0x4
  412dcb:	int3   
  412dcc:	int3   
  412dcd:	int3   
  412dce:	int3   
  412dcf:	int3   
  412dd0:	push   0xffffffff
  412dd2:	push   0x42d108
  412dd7:	mov    eax,fs:0x0
  412ddd:	push   eax
  412dde:	push   ebx
  412ddf:	push   esi
  412de0:	push   edi
  412de1:	mov    eax,ds:0x43e020
  412de6:	xor    eax,esp
  412de8:	push   eax
  412de9:	lea    eax,[esp+0x10]
  412ded:	mov    fs:0x0,eax
  412df3:	mov    esi,DWORD PTR [esp+0x20]
  412df7:	xor    edi,edi
  412df9:	mov    DWORD PTR [esp+0x18],edi
  412dfd:	mov    eax,DWORD PTR [esi+0xc]
  412e00:	cmp    eax,edi
  412e02:	je     0x412e1d
  412e04:	mov    ecx,DWORD PTR [esp+0x20]
  412e08:	mov    ebx,DWORD PTR [esi+0x10]
  412e0b:	push   ecx
  412e0c:	call   0x419670
  412e11:	mov    edx,DWORD PTR [esi+0xc]
  412e14:	push   edx
  412e15:	call   0x42504a
  412e1a:	add    esp,0x8
  412e1d:	mov    eax,DWORD PTR [esi]
  412e1f:	push   eax
  412e20:	mov    DWORD PTR [esi+0xc],edi
  412e23:	mov    DWORD PTR [esi+0x10],edi
  412e26:	mov    DWORD PTR [esi+0x14],edi
  412e29:	call   0x42504a
  412e2e:	add    esp,0x4
  412e31:	mov    ecx,DWORD PTR [esp+0x10]
  412e35:	mov    DWORD PTR fs:0x0,ecx
  412e3c:	pop    ecx
  412e3d:	pop    edi
  412e3e:	pop    esi
  412e3f:	pop    ebx
  412e40:	add    esp,0xc
  412e43:	ret    0x4
  412e46:	int3   
  412e47:	int3   
  412e48:	int3   
  412e49:	int3   
  412e4a:	int3   
  412e4b:	int3   
  412e4c:	int3   
  412e4d:	int3   
  412e4e:	int3   
  412e4f:	int3   
  412e50:	push   ebp
  412e51:	mov    ebp,esp
  412e53:	and    esp,0xfffffff8
  412e56:	mov    ecx,DWORD PTR [ebx+0xc]
  412e59:	sub    esp,0x8
  412e5c:	push   esi
  412e5d:	push   edi
  412e5e:	mov    esi,eax
  412e60:	test   ecx,ecx
  412e62:	jne    0x412e68
  412e64:	xor    eax,eax
  412e66:	jmp    0x412e70
  412e68:	mov    eax,DWORD PTR [ebx+0x14]
  412e6b:	sub    eax,ecx
  412e6d:	sar    eax,0x3
  412e70:	mov    edi,DWORD PTR [ebx+0x10]
  412e73:	mov    edx,edi
  412e75:	sub    edx,ecx
  412e77:	sar    edx,0x3
  412e7a:	cmp    edx,eax
  412e7c:	jae    0x412ea8
  412e7e:	mov    BYTE PTR [esp+0x8],0x0
  412e83:	mov    eax,DWORD PTR [esp+0x8]
  412e87:	mov    ecx,DWORD PTR [esp+0x8]
  412e8b:	push   eax
  412e8c:	push   ecx
  412e8d:	mov    edx,0x1
  412e92:	mov    ecx,edi
  412e94:	call   0x4196c0
  412e99:	add    esp,0x8
  412e9c:	add    edi,0x8
  412e9f:	mov    DWORD PTR [ebx+0x10],edi
  412ea2:	pop    edi
  412ea3:	pop    esi
  412ea4:	mov    esp,ebp
  412ea6:	pop    ebp
  412ea7:	ret    
  412ea8:	cmp    ecx,edi
  412eaa:	jbe    0x412eb2
  412eac:	call   DWORD PTR ds:0x430390
  412eb2:	mov    eax,DWORD PTR [ebx]
  412eb4:	push   edi
  412eb5:	push   eax
  412eb6:	push   esi
  412eb7:	lea    edx,[esp+0x14]
  412ebb:	push   edx
  412ebc:	mov    eax,ebx
  412ebe:	call   0x413d00
  412ec3:	pop    edi
  412ec4:	pop    esi
  412ec5:	mov    esp,ebp
  412ec7:	pop    ebp
  412ec8:	ret    
  412ec9:	int3   
  412eca:	int3   
  412ecb:	int3   
  412ecc:	int3   
  412ecd:	int3   
  412ece:	int3   
  412ecf:	int3   
  412ed0:	push   ebp
  412ed1:	mov    ebp,esp
  412ed3:	and    esp,0xfffffff8
  412ed6:	sub    esp,0xc
  412ed9:	xor    al,al
  412edb:	mov    BYTE PTR [esp+0x8],al
  412edf:	mov    ecx,DWORD PTR [esp+0x8]
  412ee3:	mov    edx,DWORD PTR [esp+0x8]
  412ee7:	mov    BYTE PTR [esp+0x4],al
  412eeb:	mov    eax,DWORD PTR [esp+0x4]
  412eef:	push   ebx
  412ef0:	push   eax
  412ef1:	mov    eax,DWORD PTR [esi+0x10]
  412ef4:	push   ecx
  412ef5:	push   edx
  412ef6:	push   eax
  412ef7:	mov    eax,DWORD PTR [ebp+0xc]
  412efa:	lea    ecx,[eax+0x8]
  412efd:	call   0x41ac20
  412f02:	mov    ebx,DWORD PTR [esi+0x10]
  412f05:	mov    ecx,DWORD PTR [esp+0x1c]
  412f09:	push   ecx
  412f0a:	lea    eax,[ebx-0x8]
  412f0d:	call   0x419670
  412f12:	add    DWORD PTR [esi+0x10],0xfffffff8
  412f16:	mov    eax,DWORD PTR [ebp+0xc]
  412f19:	mov    ecx,DWORD PTR [esi+0x10]
  412f1c:	add    esp,0x14
  412f1f:	mov    DWORD PTR [edi],0x0
  412f25:	cmp    DWORD PTR [esi+0xc],eax
  412f28:	ja     0x412f2e
  412f2a:	cmp    eax,ecx
  412f2c:	jbe    0x412f37
  412f2e:	call   DWORD PTR ds:0x430390
  412f34:	mov    eax,DWORD PTR [ebp+0xc]
  412f37:	mov    edx,DWORD PTR [esi]
  412f39:	mov    DWORD PTR [edi+0x4],eax
  412f3c:	mov    DWORD PTR [edi],edx
  412f3e:	mov    eax,edi
  412f40:	pop    ebx
  412f41:	mov    esp,ebp
  412f43:	pop    ebp
  412f44:	ret    0x8
  412f47:	int3   
  412f48:	int3   
  412f49:	int3   
  412f4a:	int3   
  412f4b:	int3   
  412f4c:	int3   
  412f4d:	int3   
  412f4e:	int3   
  412f4f:	int3   
  412f50:	push   ebp
  412f51:	mov    ebp,esp
  412f53:	and    esp,0xfffffff8
  412f56:	sub    esp,0x18
  412f59:	mov    edx,DWORD PTR [ebp+0x8]
  412f5c:	push   esi
  412f5d:	push   edi
  412f5e:	mov    edi,DWORD PTR [edx+0x18]
  412f61:	mov    esi,DWORD PTR [edi+0x4]
  412f64:	cmp    BYTE PTR [esi+0x29],0x0
  412f68:	mov    al,0x1
  412f6a:	mov    BYTE PTR [esp+0xc],al
  412f6e:	jne    0x412f9b
  412f70:	mov    ecx,DWORD PTR [ebp+0xc]
  412f73:	lea    eax,[esi+0xc]
  412f76:	push   eax
  412f77:	push   ecx
  412f78:	mov    edi,esi
  412f7a:	call   DWORD PTR ds:0x4301e8
  412f80:	add    esp,0x8
  412f83:	mov    BYTE PTR [esp+0xc],al
  412f87:	test   al,al
  412f89:	je     0x412f8f
  412f8b:	mov    esi,DWORD PTR [esi]
  412f8d:	jmp    0x412f92
  412f8f:	mov    esi,DWORD PTR [esi+0x8]
  412f92:	cmp    BYTE PTR [esi+0x29],0x0
  412f96:	je     0x412f70
  412f98:	mov    edx,DWORD PTR [ebp+0x8]
  412f9b:	mov    esi,DWORD PTR [edx]
  412f9d:	mov    DWORD PTR [esp+0x14],edi
  412fa1:	mov    DWORD PTR [esp+0x10],esi
  412fa5:	test   al,al
  412fa7:	je     0x413002
  412fa9:	mov    eax,DWORD PTR [edx+0x18]
  412fac:	mov    ecx,DWORD PTR [eax]
  412fae:	mov    DWORD PTR [esp+0x1c],ecx
  412fb2:	test   esi,esi
  412fb4:	je     0x412fba
  412fb6:	cmp    esi,esi
  412fb8:	je     0x412fc3
  412fba:	call   DWORD PTR ds:0x430390
  412fc0:	mov    edx,DWORD PTR [ebp+0x8]
  412fc3:	cmp    edi,DWORD PTR [esp+0x1c]
  412fc7:	jne    0x412ff5
  412fc9:	mov    eax,DWORD PTR [ebp+0xc]
  412fcc:	push   eax
  412fcd:	push   0x1
  412fcf:	lea    ecx,[esp+0x20]
  412fd3:	push   ecx
  412fd4:	mov    ecx,edi
  412fd6:	mov    edi,edx
  412fd8:	call   0x413e70
  412fdd:	mov    edx,DWORD PTR [eax]
  412fdf:	mov    eax,DWORD PTR [eax+0x4]
  412fe2:	mov    DWORD PTR [ebx+0x4],eax
  412fe5:	mov    DWORD PTR [ebx],edx
  412fe7:	mov    BYTE PTR [ebx+0x8],0x1
  412feb:	mov    eax,ebx
  412fed:	pop    edi
  412fee:	pop    esi
  412fef:	mov    esp,ebp
  412ff1:	pop    ebp
  412ff2:	ret    0x8
  412ff5:	lea    esi,[esp+0x10]
  412ff9:	call   0x4166f0
  412ffe:	mov    esi,DWORD PTR [esp+0x10]
  413002:	mov    ecx,DWORD PTR [ebp+0xc]
  413005:	mov    edx,DWORD PTR [esp+0x14]
  413009:	push   ecx
  41300a:	add    edx,0xc
  41300d:	push   edx
  41300e:	call   DWORD PTR ds:0x4301e8
  413014:	add    esp,0x8
  413017:	test   al,al
  413019:	je     0x41304b
  41301b:	mov    eax,DWORD PTR [ebp+0xc]
  41301e:	mov    ecx,DWORD PTR [esp+0xc]
  413022:	push   eax
  413023:	push   ecx
  413024:	lea    edx,[esp+0x20]
  413028:	mov    ecx,edi
  41302a:	mov    edi,DWORD PTR [ebp+0x8]
  41302d:	push   edx
  41302e:	call   0x413e70
  413033:	mov    ecx,DWORD PTR [eax]
  413035:	mov    edx,DWORD PTR [eax+0x4]
  413038:	mov    DWORD PTR [ebx],ecx
  41303a:	mov    DWORD PTR [ebx+0x4],edx
  41303d:	mov    BYTE PTR [ebx+0x8],0x1
  413041:	mov    eax,ebx
  413043:	pop    edi
  413044:	pop    esi
  413045:	mov    esp,ebp
  413047:	pop    ebp
  413048:	ret    0x8
  41304b:	mov    eax,DWORD PTR [esp+0x14]
  41304f:	pop    edi
  413050:	mov    DWORD PTR [ebx],esi
  413052:	mov    DWORD PTR [ebx+0x4],eax
  413055:	mov    BYTE PTR [ebx+0x8],0x0
  413059:	mov    eax,ebx
  41305b:	pop    esi
  41305c:	mov    esp,ebp
  41305e:	pop    ebp
  41305f:	ret    0x8
  413062:	int3   
  413063:	int3   
  413064:	int3   
  413065:	int3   
  413066:	int3   
  413067:	int3   
  413068:	int3   
  413069:	int3   
  41306a:	int3   
  41306b:	int3   
  41306c:	int3   
  41306d:	int3   
  41306e:	int3   
  41306f:	int3   
  413070:	sub    esp,0x18
  413073:	push   ebx
  413074:	push   ebp
  413075:	mov    ebp,DWORD PTR [esp+0x28]
  413079:	push   edi
  41307a:	push   ebp
  41307b:	mov    eax,esi
  41307d:	call   0x415520
  413082:	mov    ebx,eax
  413084:	mov    DWORD PTR [esp+0x14],ebx
  413088:	test   esi,esi
  41308a:	jne    0x413092
  41308c:	call   DWORD PTR ds:0x430390
  413092:	mov    eax,DWORD PTR [esi]
  413094:	mov    edi,DWORD PTR [esi+0x18]
  413097:	mov    DWORD PTR [esp+0x10],eax
  41309b:	test   eax,eax
  41309d:	je     0x4130a3
  41309f:	cmp    eax,eax
  4130a1:	je     0x4130a9
  4130a3:	call   DWORD PTR ds:0x430390
  4130a9:	cmp    ebx,edi
  4130ab:	je     0x4130c5
  4130ad:	add    ebx,0xc
  4130b0:	push   ebx
  4130b1:	push   ebp
  4130b2:	call   DWORD PTR ds:0x4301e8
  4130b8:	add    esp,0x8
  4130bb:	test   al,al
  4130bd:	jne    0x4130c5
  4130bf:	lea    eax,[esp+0x10]
  4130c3:	jmp    0x4130d6
  4130c5:	mov    eax,DWORD PTR [esi+0x18]
  4130c8:	mov    ecx,DWORD PTR [esi]
  4130ca:	mov    DWORD PTR [esp+0x1c],eax
  4130ce:	mov    DWORD PTR [esp+0x18],ecx
  4130d2:	lea    eax,[esp+0x18]
  4130d6:	mov    edx,DWORD PTR [eax]
  4130d8:	mov    ecx,DWORD PTR [esp+0x28]
  4130dc:	mov    eax,DWORD PTR [eax+0x4]
  4130df:	pop    edi
  4130e0:	pop    ebp
  4130e1:	mov    DWORD PTR [ecx+0x4],eax
  4130e4:	mov    DWORD PTR [ecx],edx
  4130e6:	mov    eax,ecx
  4130e8:	pop    ebx
  4130e9:	add    esp,0x18
  4130ec:	ret    0x8
  4130ef:	int3   
  4130f0:	push   0xffffffff
  4130f2:	push   0x42aee6
  4130f7:	mov    eax,fs:0x0
  4130fd:	push   eax
  4130fe:	sub    esp,0x50
  413101:	mov    eax,ds:0x43e020
  413106:	xor    eax,esp
  413108:	mov    DWORD PTR [esp+0x4c],eax
  41310c:	push   ebp
  41310d:	push   esi
  41310e:	mov    eax,ds:0x43e020
  413113:	xor    eax,esp
  413115:	push   eax
  413116:	lea    eax,[esp+0x5c]
  41311a:	mov    fs:0x0,eax
  413120:	mov    esi,ecx
  413122:	cmp    DWORD PTR [esi],0x0
  413125:	je     0x4131c1
  41312b:	lea    ecx,[esp+0x20]
  41312f:	call   DWORD PTR ds:0x430260
  413135:	add    esi,0x4
  413138:	push   esi
  413139:	lea    eax,[esp+0x40]
  41313d:	push   0x430cb4
  413142:	push   eax
  413143:	mov    DWORD PTR [esp+0x70],0x0
  41314b:	call   DWORD PTR ds:0x430170
  413151:	add    esp,0xc
  413154:	push   eax
  413155:	lea    ecx,[esp+0x24]
  413159:	mov    BYTE PTR [esp+0x68],0x1
  41315e:	call   DWORD PTR ds:0x430174
  413164:	lea    ecx,[esp+0x3c]
  413168:	mov    BYTE PTR [esp+0x64],0x0
  41316d:	call   DWORD PTR ds:0x43025c
  413173:	push   0x2a
  413175:	push   0x431dd8
  41317a:	push   0x430d24
  41317f:	lea    ecx,[esp+0x18]
  413183:	call   DWORD PTR ds:0x430000
  413189:	mov    BYTE PTR [esp+0x64],0x2
  41318e:	cmp    DWORD PTR [esp+0x38],0x10
  413193:	mov    eax,DWORD PTR [esp+0x24]
  413197:	jae    0x41319d
  413199:	lea    eax,[esp+0x24]
  41319d:	push   0x10000010
  4131a2:	push   eax
  4131a3:	lea    ecx,[esp+0x14]
  4131a7:	push   ecx
  4131a8:	lea    ecx,[esp+0x20]
  4131ac:	call   DWORD PTR ds:0x430008
  4131b2:	push   0x43581c
  4131b7:	lea    edx,[esp+0x18]
  4131bb:	push   edx
  4131bc:	call   0x429e76
  4131c1:	lea    ebp,[esi+0x4]
  4131c4:	push   edi
  4131c5:	mov    ecx,ebp
  4131c7:	call   DWORD PTR ds:0x430178
  4131cd:	push   edi
  4131ce:	call   DWORD PTR ds:0x4303b8
  4131d4:	mov    DWORD PTR [esi],eax
  4131d6:	test   eax,eax
  4131d8:	jne    0x413271
  4131de:	lea    ecx,[esp+0x3c]
  4131e2:	call   DWORD PTR ds:0x430260
  4131e8:	push   ebp
  4131e9:	lea    eax,[esp+0x24]
  4131ed:	push   0x430d64
  4131f2:	push   eax
  4131f3:	mov    DWORD PTR [esp+0x70],0x3
  4131fb:	call   DWORD PTR ds:0x430170
  413201:	add    esp,0xc
  413204:	push   eax
  413205:	lea    ecx,[esp+0x40]
  413209:	mov    BYTE PTR [esp+0x68],0x4
  41320e:	call   DWORD PTR ds:0x430174
  413214:	lea    ecx,[esp+0x20]
  413218:	mov    BYTE PTR [esp+0x64],0x3
  41321d:	call   DWORD PTR ds:0x43025c
  413223:	push   0x33
  413225:	push   0x431dd8
  41322a:	push   0x430d24
  41322f:	lea    ecx,[esp+0x1c]
  413233:	call   DWORD PTR ds:0x430000
  413239:	mov    BYTE PTR [esp+0x64],0x5
  41323e:	cmp    DWORD PTR [esp+0x54],0x10
  413243:	mov    eax,DWORD PTR [esp+0x40]
  413247:	jae    0x41324d
  413249:	lea    eax,[esp+0x40]
  41324d:	push   0x10000010
  413252:	push   eax
  413253:	lea    ecx,[esp+0x18]
  413257:	push   ecx
  413258:	lea    ecx,[esp+0x20]
  41325c:	call   DWORD PTR ds:0x430008
  413262:	push   0x43581c
  413267:	lea    edx,[esp+0x18]
  41326b:	push   edx
  41326c:	call   0x429e76
  413271:	mov    eax,0x1
  413276:	mov    ecx,DWORD PTR [esp+0x5c]
  41327a:	mov    DWORD PTR fs:0x0,ecx
  413281:	pop    ecx
  413282:	pop    esi
  413283:	pop    ebp
  413284:	mov    ecx,DWORD PTR [esp+0x4c]
  413288:	xor    ecx,esp
  41328a:	call   0x42503a
  41328f:	add    esp,0x5c
  413292:	ret    
  413293:	int3   
  413294:	int3   
  413295:	int3   
  413296:	int3   
  413297:	int3   
  413298:	int3   
  413299:	int3   
  41329a:	int3   
  41329b:	int3   
  41329c:	int3   
  41329d:	int3   
  41329e:	int3   
  41329f:	int3   
  4132a0:	push   0xffffffff
  4132a2:	push   0x42b4e8
  4132a7:	mov    eax,fs:0x0
  4132ad:	push   eax
  4132ae:	push   ebx
  4132af:	mov    eax,ds:0x43e020
  4132b4:	xor    eax,esp
  4132b6:	push   eax
  4132b7:	lea    eax,[esp+0x8]
  4132bb:	mov    fs:0x0,eax
  4132c1:	mov    ebx,DWORD PTR [esp+0x18]
  4132c5:	mov    DWORD PTR [esp+0x10],0x0
  4132cd:	call   0x414230
  4132d2:	mov    eax,DWORD PTR [ebx]
  4132d4:	push   eax
  4132d5:	call   0x42504a
  4132da:	add    esp,0x4
  4132dd:	mov    ecx,DWORD PTR [esp+0x8]
  4132e1:	mov    DWORD PTR fs:0x0,ecx
  4132e8:	pop    ecx
  4132e9:	pop    ebx
  4132ea:	add    esp,0xc
  4132ed:	ret    0x4
  4132f0:	sub    esp,0xc
  4132f3:	push   ebp
  4132f4:	mov    ebp,DWORD PTR [ebx+0xc]
  4132f7:	push   esi
  4132f8:	push   edi
  4132f9:	test   ebp,ebp
  4132fb:	jne    0x413301
  4132fd:	xor    esi,esi
  4132ff:	jmp    0x413319
  413301:	mov    ecx,DWORD PTR [ebx+0x14]
  413304:	sub    ecx,ebp
  413306:	mov    eax,0x92492493
  41330b:	imul   ecx
  41330d:	add    edx,ecx
  41330f:	sar    edx,0x4
  413312:	mov    esi,edx
  413314:	shr    esi,0x1f
  413317:	add    esi,edx
  413319:	mov    edi,DWORD PTR [ebx+0x10]
  41331c:	mov    ecx,edi
  41331e:	sub    ecx,ebp
  413320:	mov    eax,0x92492493
  413325:	imul   ecx
  413327:	add    edx,ecx
  413329:	sar    edx,0x4
  41332c:	mov    eax,edx
  41332e:	shr    eax,0x1f
  413331:	add    eax,edx
  413333:	cmp    eax,esi
  413335:	jae    0x413368
  413337:	mov    edx,DWORD PTR [esp+0x1c]
  41333b:	mov    eax,DWORD PTR [esp+0x1c]
  41333f:	mov    BYTE PTR [esp+0x10],0x0
  413344:	mov    ecx,DWORD PTR [esp+0x10]
  413348:	push   ecx
  413349:	push   edx
  41334a:	push   eax
  41334b:	push   edi
  41334c:	mov    ecx,0x1
  413351:	call   0x4196f0
  413356:	add    esp,0x10
  413359:	add    edi,0x1c
  41335c:	mov    DWORD PTR [ebx+0x10],edi
  41335f:	pop    edi
  413360:	pop    esi
  413361:	pop    ebp
  413362:	add    esp,0xc
  413365:	ret    0x4
  413368:	cmp    ebp,edi
  41336a:	jbe    0x413372
  41336c:	call   DWORD PTR ds:0x430390
  413372:	mov    eax,DWORD PTR [ebx]
  413374:	mov    ecx,DWORD PTR [esp+0x1c]
  413378:	push   edi
  413379:	push   eax
  41337a:	push   ecx
  41337b:	lea    edx,[esp+0x1c]
  41337f:	push   edx
  413380:	mov    eax,ebx
  413382:	call   0x4140f0
  413387:	pop    edi
  413388:	pop    esi
  413389:	pop    ebp
  41338a:	add    esp,0xc
  41338d:	ret    0x4
  413390:	mov    ecx,DWORD PTR [esi]
  413392:	test   ecx,ecx
  413394:	je     0x4133c3
  413396:	cmp    DWORD PTR [esi+0x18],0x0
  41339a:	jne    0x4133a7
  41339c:	push   ecx
  41339d:	call   0x42504a
  4133a2:	add    esp,0x4
  4133a5:	jmp    0x4133bd
  4133a7:	cmp    DWORD PTR [esi+0x1c],0x10
  4133ab:	jb     0x4133b2
  4133ad:	mov    eax,DWORD PTR [esi+0x8]
  4133b0:	jmp    0x4133b5
  4133b2:	lea    eax,[esi+0x8]
  4133b5:	push   ecx
  4133b6:	push   eax
  4133b7:	call   DWORD PTR ds:0x4303bc
  4133bd:	mov    DWORD PTR [esi],0x0
  4133c3:	lea    ecx,[esi+0x4]
  4133c6:	jmp    DWORD PTR ds:0x43025c
  4133cc:	int3   
  4133cd:	int3   
  4133ce:	int3   
  4133cf:	int3   
  4133d0:	push   0xffffffff
  4133d2:	push   0x42aee6
  4133d7:	mov    eax,fs:0x0
  4133dd:	push   eax
  4133de:	sub    esp,0x50
  4133e1:	mov    eax,ds:0x43e020
  4133e6:	xor    eax,esp
  4133e8:	mov    DWORD PTR [esp+0x4c],eax
  4133ec:	push   esi
  4133ed:	push   edi
  4133ee:	mov    eax,ds:0x43e020
  4133f3:	xor    eax,esp
  4133f5:	push   eax
  4133f6:	lea    eax,[esp+0x5c]
  4133fa:	mov    fs:0x0,eax
  413400:	mov    esi,ecx
  413402:	cmp    DWORD PTR [esi],0x0
  413405:	je     0x4134a1
  41340b:	lea    ecx,[esp+0x20]
  41340f:	call   DWORD PTR ds:0x430260
  413415:	add    esi,0x4
  413418:	push   esi
  413419:	lea    eax,[esp+0x40]
  41341d:	push   0x430cb4
  413422:	push   eax
  413423:	mov    DWORD PTR [esp+0x70],0x0
  41342b:	call   DWORD PTR ds:0x430170
  413431:	add    esp,0xc
  413434:	push   eax
  413435:	lea    ecx,[esp+0x24]
  413439:	mov    BYTE PTR [esp+0x68],0x1
  41343e:	call   DWORD PTR ds:0x430174
  413444:	lea    ecx,[esp+0x3c]
  413448:	mov    BYTE PTR [esp+0x64],0x0
  41344d:	call   DWORD PTR ds:0x43025c
  413453:	push   0x2a
  413455:	push   0x431e04
  41345a:	push   0x430d24
  41345f:	lea    ecx,[esp+0x18]
  413463:	call   DWORD PTR ds:0x430000
  413469:	mov    BYTE PTR [esp+0x64],0x2
  41346e:	cmp    DWORD PTR [esp+0x38],0x10
  413473:	mov    eax,DWORD PTR [esp+0x24]
  413477:	jae    0x41347d
  413479:	lea    eax,[esp+0x24]
  41347d:	push   0x10000010
  413482:	push   eax
  413483:	lea    ecx,[esp+0x14]
  413487:	push   ecx
  413488:	lea    ecx,[esp+0x20]
  41348c:	call   DWORD PTR ds:0x430008
  413492:	push   0x43581c
  413497:	lea    edx,[esp+0x18]
  41349b:	push   edx
  41349c:	call   0x429e76
  4134a1:	lea    edi,[esi+0x4]
  4134a4:	push   0x4319a0
  4134a9:	mov    ecx,edi
  4134ab:	call   DWORD PTR ds:0x430178
  4134b1:	push   0x4319a0
  4134b6:	call   DWORD PTR ds:0x4303b8
  4134bc:	mov    DWORD PTR [esi],eax
  4134be:	test   eax,eax
  4134c0:	jne    0x413559
  4134c6:	lea    ecx,[esp+0x3c]
  4134ca:	call   DWORD PTR ds:0x430260
  4134d0:	push   edi
  4134d1:	lea    eax,[esp+0x24]
  4134d5:	push   0x430d64
  4134da:	push   eax
  4134db:	mov    DWORD PTR [esp+0x70],0x3
  4134e3:	call   DWORD PTR ds:0x430170
  4134e9:	add    esp,0xc
  4134ec:	push   eax
  4134ed:	lea    ecx,[esp+0x40]
  4134f1:	mov    BYTE PTR [esp+0x68],0x4
  4134f6:	call   DWORD PTR ds:0x430174
  4134fc:	lea    ecx,[esp+0x20]
  413500:	mov    BYTE PTR [esp+0x64],0x3
  413505:	call   DWORD PTR ds:0x43025c
  41350b:	push   0x33
  41350d:	push   0x431e04
  413512:	push   0x430d24
  413517:	lea    ecx,[esp+0x1c]
  41351b:	call   DWORD PTR ds:0x430000
  413521:	mov    BYTE PTR [esp+0x64],0x5
  413526:	cmp    DWORD PTR [esp+0x54],0x10
  41352b:	mov    eax,DWORD PTR [esp+0x40]
  41352f:	jae    0x413535
  413531:	lea    eax,[esp+0x40]
  413535:	push   0x10000010
  41353a:	push   eax
  41353b:	lea    ecx,[esp+0x18]
  41353f:	push   ecx
  413540:	lea    ecx,[esp+0x20]
  413544:	call   DWORD PTR ds:0x430008
  41354a:	push   0x43581c
  41354f:	lea    edx,[esp+0x18]
  413553:	push   edx
  413554:	call   0x429e76
  413559:	mov    eax,0x1
  41355e:	mov    ecx,DWORD PTR [esp+0x5c]
  413562:	mov    DWORD PTR fs:0x0,ecx
  413569:	pop    ecx
  41356a:	pop    edi
  41356b:	pop    esi
  41356c:	mov    ecx,DWORD PTR [esp+0x4c]
  413570:	xor    ecx,esp
  413572:	call   0x42503a
  413577:	add    esp,0x5c
  41357a:	ret    
  41357b:	int3   
  41357c:	int3   
  41357d:	int3   
  41357e:	int3   
  41357f:	int3   
  413580:	mov    ecx,DWORD PTR [eax]
  413582:	push   ecx
  413583:	call   0x42504a
  413588:	pop    ecx
  413589:	ret    
  41358a:	int3   
  41358b:	int3   
  41358c:	int3   
  41358d:	int3   
  41358e:	int3   
  41358f:	int3   
  413590:	push   esi
  413591:	mov    esi,DWORD PTR [ebx+0xc]
  413594:	test   esi,esi
  413596:	je     0x4135bc
  413598:	push   edi
  413599:	mov    edi,DWORD PTR [ebx+0x10]
  41359c:	cmp    esi,edi
  41359e:	je     0x4135af
  4135a0:	mov    ecx,esi
  4135a2:	call   DWORD PTR ds:0x43025c
  4135a8:	add    esi,0x1c
  4135ab:	cmp    esi,edi
  4135ad:	jne    0x4135a0
  4135af:	mov    eax,DWORD PTR [ebx+0xc]
  4135b2:	push   eax
  4135b3:	call   0x42504a
  4135b8:	add    esp,0x4
  4135bb:	pop    edi
  4135bc:	mov    DWORD PTR [ebx+0xc],0x0
  4135c3:	mov    DWORD PTR [ebx+0x10],0x0
  4135ca:	mov    DWORD PTR [ebx+0x14],0x0
  4135d1:	pop    esi
  4135d2:	ret    
  4135d3:	int3   
  4135d4:	int3   
  4135d5:	int3   
  4135d6:	int3   
  4135d7:	int3   
  4135d8:	int3   
  4135d9:	int3   
  4135da:	int3   
  4135db:	int3   
  4135dc:	int3   
  4135dd:	int3   
  4135de:	int3   
  4135df:	int3   
  4135e0:	push   ecx
  4135e1:	mov    BYTE PTR [esp],0x0
  4135e5:	mov    eax,DWORD PTR [esp]
  4135e8:	mov    ecx,DWORD PTR [esp]
  4135eb:	push   eax
  4135ec:	push   ecx
  4135ed:	push   edx
  4135ee:	push   edi
  4135ef:	mov    ecx,esi
  4135f1:	call   0x4194b0
  4135f6:	lea    eax,[esi*8+0x0]
  4135fd:	sub    eax,esi
  4135ff:	lea    eax,[edi+eax*4]
  413602:	add    esp,0x14
  413605:	ret    
  413606:	int3   
  413607:	int3   
  413608:	int3   
  413609:	int3   
  41360a:	int3   
  41360b:	int3   
  41360c:	int3   
  41360d:	int3   
  41360e:	int3   
  41360f:	int3   
  413610:	push   ebx
  413611:	lea    ebx,[esi+0xc]
  413614:	cmp    DWORD PTR [esi],ebx
  413616:	je     0x41364a
  413618:	push   edi
  413619:	lea    esp,[esp+0x0]
  413620:	mov    eax,DWORD PTR [esi]
  413622:	mov    ecx,eax
  413624:	neg    ecx
  413626:	and    ecx,0x3
  413629:	mov    edi,DWORD PTR [ecx+eax*1]
  41362c:	mov    ecx,DWORD PTR [esi+0x10010]
  413632:	push   eax
  413633:	test   ecx,ecx
  413635:	je     0x41363b
  413637:	call   ecx
  413639:	jmp    0x413640
  41363b:	call   0x42517c
  413640:	add    esp,0x4
  413643:	mov    DWORD PTR [esi],edi
  413645:	cmp    edi,ebx
  413647:	jne    0x413620
  413649:	pop    edi
  41364a:	mov    edx,ebx
  41364c:	neg    edx
  41364e:	and    edx,0x3
  413651:	add    edx,ebx
  413653:	lea    eax,[esi+0x1000c]
  413659:	mov    DWORD PTR [esi],ebx
  41365b:	mov    DWORD PTR [esi+0x4],edx
  41365e:	mov    DWORD PTR [esi+0x8],eax
  413661:	pop    ebx
  413662:	ret    
  413663:	int3   
  413664:	int3   
  413665:	int3   
  413666:	int3   
  413667:	int3   
  413668:	int3   
  413669:	int3   
  41366a:	int3   
  41366b:	int3   
  41366c:	int3   
  41366d:	int3   
  41366e:	int3   
  41366f:	int3   
  413670:	mov    ecx,DWORD PTR [esi+0x4]
  413673:	mov    eax,ecx
  413675:	neg    eax
  413677:	and    eax,0x3
  41367a:	add    eax,ecx
  41367c:	lea    ecx,[eax+ebx*1]
  41367f:	cmp    ecx,DWORD PTR [esi+0x8]
  413682:	jbe    0x4136ce
  413684:	mov    eax,0x10000
  413689:	cmp    ebx,eax
  41368b:	jbe    0x41368f
  41368d:	mov    eax,ebx
  41368f:	push   edi
  413690:	lea    edi,[eax+0xa]
  413693:	mov    eax,DWORD PTR [esi+0x1000c]
  413699:	push   edi
  41369a:	test   eax,eax
  41369c:	je     0x4136a2
  41369e:	call   eax
  4136a0:	jmp    0x4136a7
  4136a2:	call   0x425023
  4136a7:	mov    edx,DWORD PTR [esi]
  4136a9:	mov    ecx,eax
  4136ab:	neg    ecx
  4136ad:	and    ecx,0x3
  4136b0:	add    ecx,eax
  4136b2:	mov    DWORD PTR [ecx],edx
  4136b4:	mov    DWORD PTR [esi],eax
  4136b6:	add    eax,edi
  4136b8:	add    ecx,0x4
  4136bb:	mov    DWORD PTR [esi+0x8],eax
  4136be:	mov    eax,ecx
  4136c0:	neg    eax
  4136c2:	add    esp,0x4
  4136c5:	and    eax,0x3
  4136c8:	mov    DWORD PTR [esi+0x4],ecx
  4136cb:	add    eax,ecx
  4136cd:	pop    edi
  4136ce:	lea    ecx,[eax+ebx*1]
  4136d1:	mov    DWORD PTR [esi+0x4],ecx
  4136d4:	ret    
  4136d5:	int3   
  4136d6:	int3   
  4136d7:	int3   
  4136d8:	int3   
  4136d9:	int3   
  4136da:	int3   
  4136db:	int3   
  4136dc:	int3   
  4136dd:	int3   
  4136de:	int3   
  4136df:	int3   
  4136e0:	sub    esp,0xc
  4136e3:	push   ebx
  4136e4:	push   ebp
  4136e5:	push   esi
  4136e6:	mov    esi,eax
  4136e8:	mov    ebx,DWORD PTR [esi+0x10]
  4136eb:	push   edi
  4136ec:	mov    edi,DWORD PTR [esi+0xc]
  4136ef:	mov    ecx,ebx
  4136f1:	sub    ecx,edi
  4136f3:	mov    eax,0x2aaaaaab
  4136f8:	imul   ecx
  4136fa:	sar    edx,0x4
  4136fd:	mov    eax,edx
  4136ff:	shr    eax,0x1f
  413702:	add    eax,edx
  413704:	jne    0x41370a
  413706:	xor    edi,edi
  413708:	jmp    0x41373f
  41370a:	cmp    edi,ebx
  41370c:	jbe    0x413714
  41370e:	call   DWORD PTR ds:0x430390
  413714:	mov    ecx,DWORD PTR [esp+0x28]
  413718:	mov    eax,DWORD PTR [esi]
  41371a:	test   ecx,ecx
  41371c:	je     0x413722
  41371e:	cmp    ecx,eax
  413720:	je     0x413728
  413722:	call   DWORD PTR ds:0x430390
  413728:	mov    ecx,DWORD PTR [esp+0x2c]
  41372c:	sub    ecx,edi
  41372e:	mov    eax,0x2aaaaaab
  413733:	imul   ecx
  413735:	sar    edx,0x4
  413738:	mov    edi,edx
  41373a:	shr    edi,0x1f
  41373d:	add    edi,edx
  41373f:	mov    ecx,DWORD PTR [esp+0x2c]
  413743:	mov    edx,DWORD PTR [esp+0x28]
  413747:	mov    eax,DWORD PTR [esp+0x24]
  41374b:	push   ecx
  41374c:	push   edx
  41374d:	push   eax
  41374e:	mov    ecx,esi
  413750:	call   0x4147c0
  413755:	mov    ebx,DWORD PTR [esi+0xc]
  413758:	cmp    ebx,DWORD PTR [esi+0x10]
  41375b:	jbe    0x413763
  41375d:	call   DWORD PTR ds:0x430390
  413763:	mov    esi,DWORD PTR [esi]
  413765:	mov    ebp,esi
  413767:	mov    DWORD PTR [esp+0x18],ebx
  41376b:	test   esi,esi
  41376d:	jne    0x41378d
  41376f:	call   DWORD PTR ds:0x430390
  413775:	xor    eax,eax
  413777:	lea    ecx,[edi+edi*2]
  41377a:	shl    ecx,0x5
  41377d:	lea    edi,[ecx+ebx*1]
  413780:	cmp    edi,DWORD PTR [eax+0x10]
  413783:	ja     0x413798
  413785:	test   esi,esi
  413787:	je     0x413791
  413789:	mov    esi,DWORD PTR [esi]
  41378b:	jmp    0x413793
  41378d:	mov    eax,DWORD PTR [esi]
  41378f:	jmp    0x413777
  413791:	xor    esi,esi
  413793:	cmp    edi,DWORD PTR [esi+0xc]
  413796:	jae    0x41379e
  413798:	call   DWORD PTR ds:0x430390
  41379e:	mov    eax,DWORD PTR [esp+0x20]
  4137a2:	mov    DWORD PTR [eax+0x4],edi
  4137a5:	pop    edi
  4137a6:	pop    esi
  4137a7:	mov    DWORD PTR [eax],ebp
  4137a9:	pop    ebp
  4137aa:	pop    ebx
  4137ab:	add    esp,0xc
  4137ae:	ret    0x10
  4137b1:	int3   
  4137b2:	int3   
  4137b3:	int3   
  4137b4:	int3   
  4137b5:	int3   
  4137b6:	int3   
  4137b7:	int3   
  4137b8:	int3   
  4137b9:	int3   
  4137ba:	int3   
  4137bb:	int3   
  4137bc:	int3   
  4137bd:	int3   
  4137be:	int3   
  4137bf:	int3   
  4137c0:	push   ebp
  4137c1:	mov    ebp,esp
  4137c3:	and    esp,0xfffffff8
  4137c6:	sub    esp,0x8
  4137c9:	push   ebx
  4137ca:	mov    ebx,DWORD PTR [esi+0x10]
  4137cd:	push   edi
  4137ce:	cmp    DWORD PTR [esi+0xc],ebx
  4137d1:	jbe    0x4137d9
  4137d3:	call   DWORD PTR ds:0x430390
  4137d9:	mov    edi,DWORD PTR [esi+0xc]
  4137dc:	mov    eax,DWORD PTR [esi]
  4137de:	mov    DWORD PTR [esp+0x8],eax
  4137e2:	cmp    edi,DWORD PTR [esi+0x10]
  4137e5:	jbe    0x4137ed
  4137e7:	call   DWORD PTR ds:0x430390
  4137ed:	mov    ecx,DWORD PTR [esp+0x8]
  4137f1:	mov    eax,DWORD PTR [esi]
  4137f3:	push   ebx
  4137f4:	push   ecx
  4137f5:	push   edi
  4137f6:	push   eax
  4137f7:	lea    edx,[esp+0x18]
  4137fb:	push   edx
  4137fc:	push   esi
  4137fd:	call   0x4146e0
  413802:	pop    edi
  413803:	pop    ebx
  413804:	mov    esp,ebp
  413806:	pop    ebp
  413807:	ret    
  413808:	int3   
  413809:	int3   
  41380a:	int3   
  41380b:	int3   
  41380c:	int3   
  41380d:	int3   
  41380e:	int3   
  41380f:	int3   
  413810:	cmp    esi,0x2aaaaaa
  413816:	jbe    0x41381d
  413818:	jmp    0x414b60
  41381d:	mov    ecx,esi
  41381f:	call   0x414bd0
  413824:	lea    ecx,[esi+esi*2]
  413827:	shl    ecx,0x5
  41382a:	add    ecx,eax
  41382c:	mov    DWORD PTR [edi+0xc],eax
  41382f:	mov    DWORD PTR [edi+0x10],eax
  413832:	mov    DWORD PTR [edi+0x14],ecx
  413835:	mov    al,0x1
  413837:	ret    
  413838:	int3   
  413839:	int3   
  41383a:	int3   
  41383b:	int3   
  41383c:	int3   
  41383d:	int3   
  41383e:	int3   
  41383f:	int3   
  413840:	push   ecx
  413841:	mov    ecx,DWORD PTR [esp+0x8]
  413845:	mov    BYTE PTR [esp],0x0
  413849:	mov    eax,DWORD PTR [esp]
  41384c:	push   eax
  41384d:	push   ecx
  41384e:	mov    ecx,DWORD PTR [esp+0x10]
  413852:	push   edi
  413853:	mov    edx,esi
  413855:	call   0x4195d0
  41385a:	lea    eax,[esi+esi*2]
  41385d:	shl    eax,0x5
  413860:	add    eax,edi
  413862:	add    esp,0x10
  413865:	ret    0x4
  413868:	int3   
  413869:	int3   
  41386a:	int3   
  41386b:	int3   
  41386c:	int3   
  41386d:	int3   
  41386e:	int3   
  41386f:	int3   
  413870:	push   0xffffffff
  413872:	push   0x42b4e8
  413877:	mov    eax,fs:0x0
  41387d:	push   eax
  41387e:	push   esi
  41387f:	mov    eax,ds:0x43e020
  413884:	xor    eax,esp
  413886:	push   eax
  413887:	lea    eax,[esp+0x8]
  41388b:	mov    fs:0x0,eax
  413891:	mov    esi,DWORD PTR [esp+0x18]
  413895:	push   0x4
  413897:	call   0x425050
  41389c:	add    esp,0x4
  41389f:	test   eax,eax
  4138a1:	je     0x4138a7
  4138a3:	mov    DWORD PTR [eax],esi
  4138a5:	jmp    0x4138a9
  4138a7:	xor    eax,eax
  4138a9:	mov    DWORD PTR [esi],eax
  4138ab:	mov    DWORD PTR [esp+0x10],0x0
  4138b3:	call   0x415f30
  4138b8:	mov    DWORD PTR [esi+0x18],eax
  4138bb:	mov    BYTE PTR [eax+0x2d],0x1
  4138bf:	mov    eax,DWORD PTR [esi+0x18]
  4138c2:	mov    DWORD PTR [eax+0x4],eax
  4138c5:	mov    eax,DWORD PTR [esi+0x18]
  4138c8:	mov    DWORD PTR [eax],eax
  4138ca:	mov    eax,DWORD PTR [esi+0x18]
  4138cd:	mov    DWORD PTR [eax+0x8],eax
  4138d0:	mov    DWORD PTR [esi+0x1c],0x0
  4138d7:	mov    eax,esi
  4138d9:	mov    ecx,DWORD PTR [esp+0x8]
  4138dd:	mov    DWORD PTR fs:0x0,ecx
  4138e4:	pop    ecx
  4138e5:	pop    esi
  4138e6:	add    esp,0xc
  4138e9:	ret    0x4
  4138ec:	int3   
  4138ed:	int3   
  4138ee:	int3   
  4138ef:	int3   
  4138f0:	sub    esp,0x1c
  4138f3:	push   ebx
  4138f4:	push   ebp
  4138f5:	mov    ebp,DWORD PTR [esp+0x28]
  4138f9:	mov    ebx,eax
  4138fb:	cmp    DWORD PTR [ebx+0x1c],0x0
  4138ff:	mov    ecx,DWORD PTR [ebx+0x18]
  413902:	push   esi
  413903:	push   edi
  413904:	jne    0x413921
  413906:	mov    eax,DWORD PTR [esp+0x34]
  41390a:	push   eax
  41390b:	push   0x1
  41390d:	push   ebp
  41390e:	mov    edi,ebx
  413910:	call   0x414e30
  413915:	mov    eax,ebp
  413917:	pop    edi
  413918:	pop    esi
  413919:	pop    ebp
  41391a:	pop    ebx
  41391b:	add    esp,0x1c
  41391e:	ret    0x10
  413921:	mov    eax,DWORD PTR [esp+0x38]
  413925:	mov    esi,DWORD PTR [ecx]
  413927:	mov    ecx,DWORD PTR [ebx]
  413929:	mov    edi,DWORD PTR ds:0x430390
  41392f:	test   eax,eax
  413931:	je     0x413937
  413933:	cmp    eax,ecx
  413935:	je     0x41393d
  413937:	call   edi
  413939:	mov    eax,DWORD PTR [esp+0x38]
  41393d:	mov    edx,DWORD PTR [esp+0x3c]
  413941:	cmp    edx,esi
  413943:	jne    0x41397a
  413945:	mov    esi,DWORD PTR [esp+0x34]
  413949:	add    edx,0xc
  41394c:	push   edx
  41394d:	push   esi
  41394e:	call   DWORD PTR ds:0x4301e8
  413954:	add    esp,0x8
  413957:	test   al,al
  413959:	je     0x413b03
  41395f:	mov    ecx,DWORD PTR [esp+0x3c]
  413963:	push   esi
  413964:	push   0x1
  413966:	push   ebp
  413967:	mov    edi,ebx
  413969:	call   0x414e30
  41396e:	mov    eax,ebp
  413970:	pop    edi
  413971:	pop    esi
  413972:	pop    ebp
  413973:	pop    ebx
  413974:	add    esp,0x1c
  413977:	ret    0x10
  41397a:	mov    esi,DWORD PTR [ebx+0x18]
  41397d:	mov    ecx,DWORD PTR [ebx]
  41397f:	test   eax,eax
  413981:	je     0x413987
  413983:	cmp    eax,ecx
  413985:	je     0x41398d
  413987:	call   edi
  413989:	mov    edx,DWORD PTR [esp+0x3c]
  41398d:	cmp    edx,esi
  41398f:	jne    0x4139d2
  413991:	mov    edx,DWORD PTR [ebx+0x18]
  413994:	mov    eax,DWORD PTR [edx+0x8]
  413997:	mov    ecx,DWORD PTR [esp+0x34]
  41399b:	add    eax,0xc
  41399e:	push   ecx
  41399f:	push   eax
  4139a0:	call   DWORD PTR ds:0x4301e8
  4139a6:	add    esp,0x8
  4139a9:	test   al,al
  4139ab:	je     0x413aff
  4139b1:	mov    edx,DWORD PTR [esp+0x34]
  4139b5:	mov    eax,DWORD PTR [ebx+0x18]
  4139b8:	mov    ecx,DWORD PTR [eax+0x8]
  4139bb:	push   edx
  4139bc:	push   0x0
  4139be:	push   ebp
  4139bf:	mov    edi,ebx
  4139c1:	call   0x414e30
  4139c6:	mov    eax,ebp
  4139c8:	pop    edi
  4139c9:	pop    esi
  4139ca:	pop    ebp
  4139cb:	pop    ebx
  4139cc:	add    esp,0x1c
  4139cf:	ret    0x10
  4139d2:	mov    edi,DWORD PTR [esp+0x34]
  4139d6:	add    edx,0xc
  4139d9:	push   edx
  4139da:	push   edi
  4139db:	call   DWORD PTR ds:0x4301e8
  4139e1:	add    esp,0x8
  4139e4:	test   al,al
  4139e6:	je     0x413a51
  4139e8:	mov    ecx,DWORD PTR [esp+0x38]
  4139ec:	mov    edx,DWORD PTR [esp+0x3c]
  4139f0:	lea    esi,[esp+0x14]
  4139f4:	mov    DWORD PTR [esp+0x14],ecx
  4139f8:	mov    DWORD PTR [esp+0x18],edx
  4139fc:	call   0x416780
  413a01:	mov    esi,DWORD PTR [esp+0x18]
  413a05:	lea    eax,[esi+0xc]
  413a08:	push   edi
  413a09:	push   eax
  413a0a:	call   DWORD PTR ds:0x4301e8
  413a10:	add    esp,0x8
  413a13:	test   al,al
  413a15:	je     0x413a51
  413a17:	mov    ecx,DWORD PTR [esi+0x8]
  413a1a:	cmp    BYTE PTR [ecx+0x2d],0x0
  413a1e:	push   edi
  413a1f:	mov    edi,ebx
  413a21:	je     0x413a39
  413a23:	push   0x0
  413a25:	push   ebp
  413a26:	mov    ecx,esi
  413a28:	call   0x414e30
  413a2d:	mov    eax,ebp
  413a2f:	pop    edi
  413a30:	pop    esi
  413a31:	pop    ebp
  413a32:	pop    ebx
  413a33:	add    esp,0x1c
  413a36:	ret    0x10
  413a39:	mov    ecx,DWORD PTR [esp+0x40]
  413a3d:	push   0x1
  413a3f:	push   ebp
  413a40:	call   0x414e30
  413a45:	mov    eax,ebp
  413a47:	pop    edi
  413a48:	pop    esi
  413a49:	pop    ebp
  413a4a:	pop    ebx
  413a4b:	add    esp,0x1c
  413a4e:	ret    0x10
  413a51:	mov    edx,DWORD PTR [esp+0x3c]
  413a55:	add    edx,0xc
  413a58:	push   edi
  413a59:	push   edx
  413a5a:	call   DWORD PTR ds:0x4301e8
  413a60:	add    esp,0x8
  413a63:	test   al,al
  413a65:	je     0x413aff
  413a6b:	mov    eax,DWORD PTR [esp+0x38]
  413a6f:	mov    ecx,DWORD PTR [esp+0x3c]
  413a73:	mov    edx,DWORD PTR [ebx+0x18]
  413a76:	mov    DWORD PTR [esp+0x14],eax
  413a7a:	mov    eax,DWORD PTR [ebx]
  413a7c:	lea    esi,[esp+0x14]
  413a80:	mov    DWORD PTR [esp+0x18],ecx
  413a84:	mov    DWORD PTR [esp+0x20],edx
  413a88:	mov    DWORD PTR [esp+0x1c],eax
  413a8c:	call   0x416810
  413a91:	lea    esi,[esp+0x1c]
  413a95:	lea    edi,[esp+0x14]
  413a99:	call   0x422b20
  413a9e:	mov    esi,DWORD PTR [esp+0x18]
  413aa2:	test   al,al
  413aa4:	jne    0x413abc
  413aa6:	mov    edx,DWORD PTR [esp+0x34]
  413aaa:	lea    ecx,[esi+0xc]
  413aad:	push   ecx
  413aae:	push   edx
  413aaf:	call   DWORD PTR ds:0x4301e8
  413ab5:	add    esp,0x8
  413ab8:	test   al,al
  413aba:	je     0x413aff
  413abc:	mov    ecx,DWORD PTR [esp+0x3c]
  413ac0:	mov    eax,DWORD PTR [ecx+0x8]
  413ac3:	cmp    BYTE PTR [eax+0x2d],0x0
  413ac7:	mov    edi,ebx
  413ac9:	je     0x413ae4
  413acb:	mov    edx,DWORD PTR [esp+0x34]
  413acf:	push   edx
  413ad0:	push   0x0
  413ad2:	push   ebp
  413ad3:	call   0x414e30
  413ad8:	mov    eax,ebp
  413ada:	pop    edi
  413adb:	pop    esi
  413adc:	pop    ebp
  413add:	pop    ebx
  413ade:	add    esp,0x1c
  413ae1:	ret    0x10
  413ae4:	mov    eax,DWORD PTR [esp+0x34]
  413ae8:	push   eax
  413ae9:	push   0x1
  413aeb:	push   ebp
  413aec:	mov    ecx,esi
  413aee:	call   0x414e30
  413af3:	mov    eax,ebp
  413af5:	pop    edi
  413af6:	pop    esi
  413af7:	pop    ebp
  413af8:	pop    ebx
  413af9:	add    esp,0x1c
  413afc:	ret    0x10
  413aff:	mov    esi,DWORD PTR [esp+0x34]
  413b03:	push   esi
  413b04:	lea    ecx,[esp+0x20]
  413b08:	push   ecx
  413b09:	call   0x414c30
  413b0e:	mov    edx,DWORD PTR [eax]
  413b10:	mov    DWORD PTR [ebp+0x0],edx
  413b13:	mov    eax,DWORD PTR [eax+0x4]
  413b16:	pop    edi
  413b17:	mov    DWORD PTR [ebp+0x4],eax
  413b1a:	pop    esi
  413b1b:	mov    eax,ebp
  413b1d:	pop    ebp
  413b1e:	pop    ebx
  413b1f:	add    esp,0x1c
  413b22:	ret    0x10
  413b25:	int3   
  413b26:	int3   
  413b27:	int3   
  413b28:	int3   
  413b29:	int3   
  413b2a:	int3   
  413b2b:	int3   
  413b2c:	int3   
  413b2d:	int3   
  413b2e:	int3   
  413b2f:	int3   
  413b30:	push   ebx
  413b31:	push   esi
  413b32:	push   edi
  413b33:	mov    edi,DWORD PTR [esp+0x10]
  413b37:	cmp    BYTE PTR [edi+0x2d],0x0
  413b3b:	mov    ebx,ecx
  413b3d:	mov    esi,edi
  413b3f:	jne    0x413b68
  413b41:	mov    eax,DWORD PTR [esi+0x8]
  413b44:	push   eax
  413b45:	mov    ecx,ebx
  413b47:	call   0x413b30
  413b4c:	mov    esi,DWORD PTR [esi]
  413b4e:	lea    ecx,[edi+0xc]
  413b51:	call   DWORD PTR ds:0x430264
  413b57:	push   edi
  413b58:	call   0x42504a
  413b5d:	add    esp,0x4
  413b60:	cmp    BYTE PTR [esi+0x2d],0x0
  413b64:	mov    edi,esi
  413b66:	je     0x413b41
  413b68:	pop    edi
  413b69:	pop    esi
  413b6a:	pop    ebx
  413b6b:	ret    0x4
  413b6e:	int3   
  413b6f:	int3   
  413b70:	push   ebp
  413b71:	mov    ebp,esp
  413b73:	and    esp,0xfffffff8
  413b76:	mov    eax,DWORD PTR [esi+0x18]
  413b79:	mov    ecx,DWORD PTR [esi]
  413b7b:	mov    edx,DWORD PTR [eax]
  413b7d:	sub    esp,0x8
  413b80:	push   eax
  413b81:	push   ecx
  413b82:	push   edx
  413b83:	push   ecx
  413b84:	lea    eax,[esp+0x10]
  413b88:	push   eax
  413b89:	mov    eax,esi
  413b8b:	call   0x414d50
  413b90:	mov    ecx,DWORD PTR [esi+0x18]
  413b93:	push   ecx
  413b94:	call   0x42504a
  413b99:	add    esp,0x4
  413b9c:	xor    eax,eax
  413b9e:	mov    DWORD PTR [esi+0x18],eax
  413ba1:	mov    DWORD PTR [esi+0x1c],eax
  413ba4:	mov    esp,ebp
  413ba6:	pop    ebp
  413ba7:	ret    
  413ba8:	int3   
  413ba9:	int3   
  413baa:	int3   
  413bab:	int3   
  413bac:	int3   
  413bad:	int3   
  413bae:	int3   
  413baf:	int3   
  413bb0:	push   0xffffffff
  413bb2:	push   0x42bf98
  413bb7:	mov    eax,fs:0x0
  413bbd:	push   eax
  413bbe:	push   ecx
  413bbf:	push   esi
  413bc0:	mov    eax,ds:0x43e020
  413bc5:	xor    eax,esp
  413bc7:	push   eax
  413bc8:	lea    eax,[esp+0xc]
  413bcc:	mov    fs:0x0,eax
  413bd2:	mov    esi,DWORD PTR [esp+0x1c]
  413bd6:	push   0x4
  413bd8:	call   0x425050
  413bdd:	xor    ecx,ecx
  413bdf:	add    esp,0x4
  413be2:	cmp    eax,ecx
  413be4:	je     0x413bea
  413be6:	mov    DWORD PTR [eax],esi
  413be8:	jmp    0x413bec
  413bea:	xor    eax,eax
  413bec:	mov    DWORD PTR [esi],eax
  413bee:	mov    DWORD PTR [esi+0xc],ecx
  413bf1:	mov    DWORD PTR [esi+0x10],ecx
  413bf4:	mov    DWORD PTR [esi+0x14],ecx
  413bf7:	mov    eax,esi
  413bf9:	mov    ecx,DWORD PTR [esp+0xc]
  413bfd:	mov    DWORD PTR fs:0x0,ecx
  413c04:	pop    ecx
  413c05:	pop    esi
  413c06:	add    esp,0x10
  413c09:	ret    0x4
  413c0c:	int3   
  413c0d:	int3   
  413c0e:	int3   
  413c0f:	int3   
  413c10:	sub    esp,0xc
  413c13:	push   ebx
  413c14:	push   ebp
  413c15:	mov    ebp,DWORD PTR ds:0x430390
  413c1b:	push   esi
  413c1c:	mov    esi,eax
  413c1e:	push   edi
  413c1f:	mov    edi,DWORD PTR [esi+0x10]
  413c22:	cmp    DWORD PTR [esi+0xc],edi
  413c25:	jbe    0x413c29
  413c27:	call   ebp
  413c29:	mov    esi,DWORD PTR [esi]
  413c2b:	mov    ebx,esi
  413c2d:	mov    DWORD PTR [esp+0x18],edi
  413c31:	test   esi,esi
  413c33:	jne    0x413c49
  413c35:	call   ebp
  413c37:	xor    eax,eax
  413c39:	lea    ecx,[edi-0x8]
  413c3c:	cmp    ecx,DWORD PTR [eax+0x10]
  413c3f:	ja     0x413c54
  413c41:	test   esi,esi
  413c43:	je     0x413c4d
  413c45:	mov    esi,DWORD PTR [esi]
  413c47:	jmp    0x413c4f
  413c49:	mov    eax,DWORD PTR [esi]
  413c4b:	jmp    0x413c39
  413c4d:	xor    esi,esi
  413c4f:	cmp    ecx,DWORD PTR [esi+0xc]
  413c52:	jae    0x413c56
  413c54:	call   ebp
  413c56:	lea    esi,[edi-0x8]
  413c59:	test   ebx,ebx
  413c5b:	jne    0x413c72
  413c5d:	call   ebp
  413c5f:	xor    eax,eax
  413c61:	cmp    esi,DWORD PTR [eax+0x10]
  413c64:	jb     0x413c68
  413c66:	call   ebp
  413c68:	pop    edi
  413c69:	mov    eax,esi
  413c6b:	pop    esi
  413c6c:	pop    ebp
  413c6d:	pop    ebx
  413c6e:	add    esp,0xc
  413c71:	ret    
  413c72:	mov    eax,DWORD PTR [ebx]
  413c74:	jmp    0x413c61
  413c76:	int3   
  413c77:	int3   
  413c78:	int3   
  413c79:	int3   
  413c7a:	int3   
  413c7b:	int3   
  413c7c:	int3   
  413c7d:	int3   
  413c7e:	int3   
  413c7f:	int3   
  413c80:	mov    ecx,DWORD PTR [ebx+0xc]
  413c83:	sub    esp,0xc
  413c86:	push   esi
  413c87:	push   edi
  413c88:	mov    esi,eax
  413c8a:	test   ecx,ecx
  413c8c:	jne    0x413c92
  413c8e:	xor    eax,eax
  413c90:	jmp    0x413c9a
  413c92:	mov    eax,DWORD PTR [ebx+0x14]
  413c95:	sub    eax,ecx
  413c97:	sar    eax,0x3
  413c9a:	mov    edi,DWORD PTR [ebx+0x10]
  413c9d:	mov    edx,edi
  413c9f:	sub    edx,ecx
  413ca1:	sar    edx,0x3
  413ca4:	cmp    edx,eax
  413ca6:	jae    0x413cd2
  413ca8:	mov    BYTE PTR [esp+0x8],0x0
  413cad:	mov    eax,DWORD PTR [esp+0x8]
  413cb1:	mov    ecx,DWORD PTR [esp+0x8]
  413cb5:	push   eax
  413cb6:	push   ecx
  413cb7:	mov    edx,0x1
  413cbc:	mov    ecx,edi
  413cbe:	call   0x4196c0
  413cc3:	add    esp,0x8
  413cc6:	add    edi,0x8
  413cc9:	mov    DWORD PTR [ebx+0x10],edi
  413ccc:	pop    edi
  413ccd:	pop    esi
  413cce:	add    esp,0xc
  413cd1:	ret    
  413cd2:	cmp    ecx,edi
  413cd4:	jbe    0x413cdc
  413cd6:	call   DWORD PTR ds:0x430390
  413cdc:	mov    eax,DWORD PTR [ebx]
  413cde:	push   edi
  413cdf:	push   eax
  413ce0:	push   esi
  413ce1:	lea    edx,[esp+0x14]
  413ce5:	push   edx
  413ce6:	mov    eax,ebx
  413ce8:	call   0x4150b0
  413ced:	pop    edi
  413cee:	pop    esi
  413cef:	add    esp,0xc
  413cf2:	ret    
  413cf3:	int3   
  413cf4:	int3   
  413cf5:	int3   
  413cf6:	int3   
  413cf7:	int3   
  413cf8:	int3   
  413cf9:	int3   
  413cfa:	int3   
  413cfb:	int3   
  413cfc:	int3   
  413cfd:	int3   
  413cfe:	int3   
  413cff:	int3   
  413d00:	sub    esp,0xc
  413d03:	push   ebx
  413d04:	push   ebp
  413d05:	push   esi
  413d06:	mov    esi,eax
  413d08:	mov    eax,DWORD PTR [esi+0x10]
  413d0b:	push   edi
  413d0c:	mov    edi,DWORD PTR [esi+0xc]
  413d0f:	mov    ecx,eax
  413d11:	sub    ecx,edi
  413d13:	test   ecx,0xfffffff8
  413d19:	jne    0x413d1f
  413d1b:	xor    ebx,ebx
  413d1d:	jmp    0x413d46
  413d1f:	cmp    edi,eax
  413d21:	jbe    0x413d29
  413d23:	call   DWORD PTR ds:0x430390
  413d29:	mov    ecx,DWORD PTR [esp+0x28]
  413d2d:	mov    eax,DWORD PTR [esi]
  413d2f:	test   ecx,ecx
  413d31:	je     0x413d37
  413d33:	cmp    ecx,eax
  413d35:	je     0x413d3d
  413d37:	call   DWORD PTR ds:0x430390
  413d3d:	mov    ebx,DWORD PTR [esp+0x2c]
  413d41:	sub    ebx,edi
  413d43:	sar    ebx,0x3
  413d46:	mov    edx,DWORD PTR [esp+0x2c]
  413d4a:	mov    eax,DWORD PTR [esp+0x28]
  413d4e:	mov    ecx,DWORD PTR [esp+0x24]
  413d52:	push   edx
  413d53:	push   eax
  413d54:	push   esi
  413d55:	call   0x415160
  413d5a:	mov    edi,DWORD PTR [esi+0xc]
  413d5d:	cmp    edi,DWORD PTR [esi+0x10]
  413d60:	jbe    0x413d68
  413d62:	call   DWORD PTR ds:0x430390
  413d68:	mov    esi,DWORD PTR [esi]
  413d6a:	mov    ebp,esi
  413d6c:	mov    DWORD PTR [esp+0x18],edi
  413d70:	test   esi,esi
  413d72:	jne    0x413d8c
  413d74:	call   DWORD PTR ds:0x430390
  413d7a:	xor    eax,eax
  413d7c:	lea    edi,[edi+ebx*8]
  413d7f:	cmp    edi,DWORD PTR [eax+0x10]
  413d82:	ja     0x413d97
  413d84:	test   esi,esi
  413d86:	je     0x413d90
  413d88:	mov    esi,DWORD PTR [esi]
  413d8a:	jmp    0x413d92
  413d8c:	mov    eax,DWORD PTR [esi]
  413d8e:	jmp    0x413d7c
  413d90:	xor    esi,esi
  413d92:	cmp    edi,DWORD PTR [esi+0xc]
  413d95:	jae    0x413d9d
  413d97:	call   DWORD PTR ds:0x430390
  413d9d:	mov    eax,DWORD PTR [esp+0x20]
  413da1:	mov    DWORD PTR [eax+0x4],edi
  413da4:	pop    edi
  413da5:	pop    esi
  413da6:	mov    DWORD PTR [eax],ebp
  413da8:	pop    ebp
  413da9:	pop    ebx
  413daa:	add    esp,0xc
  413dad:	ret    0x10
  413db0:	push   0xffffffff
  413db2:	push   0x42b4e8
  413db7:	mov    eax,fs:0x0
  413dbd:	push   eax
  413dbe:	push   esi
  413dbf:	mov    eax,ds:0x43e020
  413dc4:	xor    eax,esp
  413dc6:	push   eax
  413dc7:	lea    eax,[esp+0x8]
  413dcb:	mov    fs:0x0,eax
  413dd1:	mov    esi,DWORD PTR [esp+0x18]
  413dd5:	push   0x4
  413dd7:	call   0x425050
  413ddc:	add    esp,0x4
  413ddf:	test   eax,eax
  413de1:	je     0x413de7
  413de3:	mov    DWORD PTR [eax],esi
  413de5:	jmp    0x413de9
  413de7:	xor    eax,eax
  413de9:	mov    DWORD PTR [esi],eax
  413deb:	mov    DWORD PTR [esp+0x10],0x0
  413df3:	call   0x4166b0
  413df8:	mov    DWORD PTR [esi+0x18],eax
  413dfb:	mov    BYTE PTR [eax+0x29],0x1
  413dff:	mov    eax,DWORD PTR [esi+0x18]
  413e02:	mov    DWORD PTR [eax+0x4],eax
  413e05:	mov    eax,DWORD PTR [esi+0x18]
  413e08:	mov    DWORD PTR [eax],eax
  413e0a:	mov    eax,DWORD PTR [esi+0x18]
  413e0d:	mov    DWORD PTR [eax+0x8],eax
  413e10:	mov    DWORD PTR [esi+0x1c],0x0
  413e17:	mov    eax,esi
  413e19:	mov    ecx,DWORD PTR [esp+0x8]
  413e1d:	mov    DWORD PTR fs:0x0,ecx
  413e24:	pop    ecx
  413e25:	pop    esi
  413e26:	add    esp,0xc
  413e29:	ret    0x4
  413e2c:	int3   
  413e2d:	int3   
  413e2e:	int3   
  413e2f:	int3   
  413e30:	push   ebx
  413e31:	push   esi
  413e32:	push   edi
  413e33:	mov    edi,DWORD PTR [esp+0x10]
  413e37:	cmp    BYTE PTR [edi+0x29],0x0
  413e3b:	mov    ebx,ecx
  413e3d:	mov    esi,edi
  413e3f:	jne    0x413e68
  413e41:	mov    eax,DWORD PTR [esi+0x8]
  413e44:	push   eax
  413e45:	mov    ecx,ebx
  413e47:	call   0x413e30
  413e4c:	mov    esi,DWORD PTR [esi]
  413e4e:	lea    ecx,[edi+0xc]
  413e51:	call   DWORD PTR ds:0x430264
  413e57:	push   edi
  413e58:	call   0x42504a
  413e5d:	add    esp,0x4
  413e60:	cmp    BYTE PTR [esi+0x29],0x0
  413e64:	mov    edi,esi
  413e66:	je     0x413e41
  413e68:	pop    edi
  413e69:	pop    esi
  413e6a:	pop    ebx
  413e6b:	ret    0x4
  413e6e:	int3   
  413e6f:	int3   
  413e70:	push   0xffffffff
  413e72:	push   0x42cd29
  413e77:	mov    eax,fs:0x0
  413e7d:	push   eax
  413e7e:	sub    esp,0x4c
  413e81:	push   ebx
  413e82:	push   ebp
  413e83:	push   esi
  413e84:	mov    eax,ds:0x43e020
  413e89:	xor    eax,esp
  413e8b:	push   eax
  413e8c:	lea    eax,[esp+0x5c]
  413e90:	mov    fs:0x0,eax
  413e96:	mov    esi,ecx
  413e98:	cmp    DWORD PTR [edi+0x1c],0x9249248
  413e9f:	jb     0x413edd
  413ea1:	push   0x431e30
  413ea6:	lea    ecx,[esp+0x18]
  413eaa:	call   DWORD PTR ds:0x43011c
  413eb0:	lea    eax,[esp+0x14]
  413eb4:	push   eax
  413eb5:	lea    ecx,[esp+0x34]
  413eb9:	mov    DWORD PTR [esp+0x68],0x0
  413ec1:	call   0x402940
  413ec6:	push   0x435684
  413ecb:	lea    ecx,[esp+0x34]
  413ecf:	push   ecx
  413ed0:	mov    DWORD PTR [esp+0x38],0x430604
  413ed8:	call   0x429e76
  413edd:	mov    edx,DWORD PTR [esp+0x74]
  413ee1:	mov    eax,DWORD PTR [edi+0x18]
  413ee4:	push   edx
  413ee5:	push   eax
  413ee6:	push   esi
  413ee7:	push   eax
  413ee8:	call   0x415610
  413eed:	inc    DWORD PTR [edi+0x1c]
  413ef0:	mov    ebp,eax
  413ef2:	mov    eax,DWORD PTR [edi+0x18]
  413ef5:	xor    bl,bl
  413ef7:	cmp    esi,eax
  413ef9:	jne    0x413f0b
  413efb:	mov    DWORD PTR [eax+0x4],ebp
  413efe:	mov    eax,DWORD PTR [edi+0x18]
  413f01:	mov    DWORD PTR [eax],ebp
  413f03:	mov    ecx,DWORD PTR [edi+0x18]
  413f06:	mov    DWORD PTR [ecx+0x8],ebp
  413f09:	jmp    0x413f2c
  413f0b:	cmp    BYTE PTR [esp+0x70],bl
  413f0f:	je     0x413f1e
  413f11:	mov    DWORD PTR [esi],ebp
  413f13:	mov    eax,DWORD PTR [edi+0x18]
  413f16:	cmp    esi,DWORD PTR [eax]
  413f18:	jne    0x413f2c
  413f1a:	mov    DWORD PTR [eax],ebp
  413f1c:	jmp    0x413f2c
  413f1e:	mov    DWORD PTR [esi+0x8],ebp
  413f21:	mov    eax,DWORD PTR [edi+0x18]
  413f24:	cmp    esi,DWORD PTR [eax+0x8]
  413f27:	jne    0x413f2c
  413f29:	mov    DWORD PTR [eax+0x8],ebp
  413f2c:	mov    edx,DWORD PTR [ebp+0x4]
  413f2f:	lea    eax,[ebp+0x4]
  413f32:	mov    esi,ebp
  413f34:	cmp    BYTE PTR [edx+0x28],bl
  413f37:	jne    0x414078
  413f3d:	lea    ecx,[ecx+0x0]
  413f40:	mov    ecx,DWORD PTR [eax]
  413f42:	mov    edx,DWORD PTR [ecx+0x4]
  413f45:	cmp    ecx,DWORD PTR [edx]
  413f47:	jne    0x413ff1
  413f4d:	mov    edx,DWORD PTR [edx+0x8]
  413f50:	cmp    BYTE PTR [edx+0x28],bl
  413f53:	je     0x413ff8
  413f59:	cmp    esi,DWORD PTR [ecx+0x8]
  413f5c:	jne    0x413f99
  413f5e:	mov    esi,ecx
  413f60:	mov    ecx,DWORD PTR [esi+0x8]
  413f63:	mov    eax,DWORD PTR [ecx]
  413f65:	mov    DWORD PTR [esi+0x8],eax
  413f68:	mov    eax,DWORD PTR [ecx]
  413f6a:	cmp    BYTE PTR [eax+0x29],bl
  413f6d:	jne    0x413f72
  413f6f:	mov    DWORD PTR [eax+0x4],esi
  413f72:	mov    edx,DWORD PTR [esi+0x4]
  413f75:	lea    eax,[esi+0x4]
  413f78:	mov    DWORD PTR [ecx+0x4],edx
  413f7b:	mov    edx,DWORD PTR [edi+0x18]
  413f7e:	cmp    esi,DWORD PTR [edx+0x4]
  413f81:	jne    0x413f88
  413f83:	mov    DWORD PTR [edx+0x4],ecx
  413f86:	jmp    0x413f95
  413f88:	mov    edx,DWORD PTR [eax]
  413f8a:	cmp    esi,DWORD PTR [edx]
  413f8c:	jne    0x413f92
  413f8e:	mov    DWORD PTR [edx],ecx
  413f90:	jmp    0x413f95
  413f92:	mov    DWORD PTR [edx+0x8],ecx
  413f95:	mov    DWORD PTR [ecx],esi
  413f97:	mov    DWORD PTR [eax],ecx
  413f99:	mov    ecx,DWORD PTR [eax]
  413f9b:	mov    BYTE PTR [ecx+0x28],0x1
  413f9f:	mov    edx,DWORD PTR [eax]
  413fa1:	mov    ecx,DWORD PTR [edx+0x4]
  413fa4:	mov    BYTE PTR [ecx+0x28],bl
  413fa7:	mov    edx,DWORD PTR [eax]
  413fa9:	mov    eax,DWORD PTR [edx+0x4]
  413fac:	mov    ecx,DWORD PTR [eax]
  413fae:	mov    edx,DWORD PTR [ecx+0x8]
  413fb1:	mov    DWORD PTR [eax],edx
  413fb3:	mov    edx,DWORD PTR [ecx+0x8]
  413fb6:	cmp    BYTE PTR [edx+0x29],bl
  413fb9:	jne    0x413fbe
  413fbb:	mov    DWORD PTR [edx+0x4],eax
  413fbe:	mov    edx,DWORD PTR [eax+0x4]
  413fc1:	mov    DWORD PTR [ecx+0x4],edx
  413fc4:	mov    edx,DWORD PTR [edi+0x18]
  413fc7:	cmp    eax,DWORD PTR [edx+0x4]
  413fca:	jne    0x413fd7
  413fcc:	mov    DWORD PTR [edx+0x4],ecx
  413fcf:	mov    DWORD PTR [ecx+0x8],eax
  413fd2:	jmp    0x414066
  413fd7:	mov    edx,DWORD PTR [eax+0x4]
  413fda:	cmp    eax,DWORD PTR [edx+0x8]
  413fdd:	jne    0x413fea
  413fdf:	mov    DWORD PTR [edx+0x8],ecx
  413fe2:	mov    DWORD PTR [ecx+0x8],eax
  413fe5:	jmp    0x414066
  413fea:	mov    DWORD PTR [edx],ecx
  413fec:	mov    DWORD PTR [ecx+0x8],eax
  413fef:	jmp    0x414066
  413ff1:	mov    edx,DWORD PTR [edx]
  413ff3:	cmp    BYTE PTR [edx+0x28],bl
  413ff6:	jne    0x41400f
  413ff8:	mov    BYTE PTR [ecx+0x28],0x1
  413ffc:	mov    BYTE PTR [edx+0x28],0x1
  414000:	mov    edx,DWORD PTR [eax]
  414002:	mov    ecx,DWORD PTR [edx+0x4]
  414005:	mov    BYTE PTR [ecx+0x28],bl
  414008:	mov    edx,DWORD PTR [eax]
  41400a:	mov    esi,DWORD PTR [edx+0x4]
  41400d:	jmp    0x414069
  41400f:	cmp    esi,DWORD PTR [ecx]
  414011:	jne    0x41401b
  414013:	push   edi
  414014:	mov    esi,ecx
  414016:	call   0x4155c0
  41401b:	mov    eax,DWORD PTR [esi+0x4]
  41401e:	mov    BYTE PTR [eax+0x28],0x1
  414022:	mov    ecx,DWORD PTR [esi+0x4]
  414025:	mov    edx,DWORD PTR [ecx+0x4]
  414028:	mov    BYTE PTR [edx+0x28],bl
  41402b:	mov    eax,DWORD PTR [esi+0x4]
  41402e:	mov    eax,DWORD PTR [eax+0x4]
  414031:	mov    ecx,DWORD PTR [eax+0x8]
  414034:	mov    edx,DWORD PTR [ecx]
  414036:	mov    DWORD PTR [eax+0x8],edx
  414039:	mov    edx,DWORD PTR [ecx]
  41403b:	cmp    BYTE PTR [edx+0x29],bl
  41403e:	jne    0x414043
  414040:	mov    DWORD PTR [edx+0x4],eax
  414043:	mov    edx,DWORD PTR [eax+0x4]
  414046:	mov    DWORD PTR [ecx+0x4],edx
  414049:	mov    edx,DWORD PTR [edi+0x18]
  41404c:	cmp    eax,DWORD PTR [edx+0x4]
  41404f:	jne    0x414056
  414051:	mov    DWORD PTR [edx+0x4],ecx
  414054:	jmp    0x414064
  414056:	mov    edx,DWORD PTR [eax+0x4]
  414059:	cmp    eax,DWORD PTR [edx]
  41405b:	jne    0x414061
  41405d:	mov    DWORD PTR [edx],ecx
  41405f:	jmp    0x414064
  414061:	mov    DWORD PTR [edx+0x8],ecx
  414064:	mov    DWORD PTR [ecx],eax
  414066:	mov    DWORD PTR [eax+0x4],ecx
  414069:	mov    ecx,DWORD PTR [esi+0x4]
  41406c:	lea    eax,[esi+0x4]
  41406f:	cmp    BYTE PTR [ecx+0x28],bl
  414072:	je     0x413f40
  414078:	mov    edx,DWORD PTR [edi+0x18]
  41407b:	mov    eax,DWORD PTR [edx+0x4]
  41407e:	mov    BYTE PTR [eax+0x28],0x1
  414082:	mov    eax,DWORD PTR [esp+0x6c]
  414086:	mov    ecx,DWORD PTR [edi]
  414088:	mov    DWORD PTR [eax+0x4],ebp
  41408b:	mov    DWORD PTR [eax],ecx
  41408d:	mov    ecx,DWORD PTR [esp+0x5c]
  414091:	mov    DWORD PTR fs:0x0,ecx
  414098:	pop    ecx
  414099:	pop    esi
  41409a:	pop    ebp
  41409b:	pop    ebx
  41409c:	add    esp,0x58
  41409f:	ret    0xc
  4140a2:	int3   
  4140a3:	int3   
  4140a4:	int3   
  4140a5:	int3   
  4140a6:	int3   
  4140a7:	int3   
  4140a8:	int3   
  4140a9:	int3   
  4140aa:	int3   
  4140ab:	int3   
  4140ac:	int3   
  4140ad:	int3   
  4140ae:	int3   
  4140af:	int3   
  4140b0:	push   ebp
  4140b1:	mov    ebp,esp
  4140b3:	and    esp,0xfffffff8
  4140b6:	mov    eax,DWORD PTR [esi+0x18]
  4140b9:	mov    ecx,DWORD PTR [esi]
  4140bb:	mov    edx,DWORD PTR [eax]
  4140bd:	sub    esp,0x8
  4140c0:	push   eax
  4140c1:	push   ecx
  4140c2:	push   edx
  4140c3:	push   ecx
  4140c4:	lea    eax,[esp+0x10]
  4140c8:	push   eax
  4140c9:	mov    eax,esi
  4140cb:	call   0x415440
  4140d0:	mov    ecx,DWORD PTR [esi+0x18]
  4140d3:	push   ecx
  4140d4:	call   0x42504a
  4140d9:	add    esp,0x4
  4140dc:	xor    eax,eax
  4140de:	mov    DWORD PTR [esi+0x18],eax
  4140e1:	mov    DWORD PTR [esi+0x1c],eax
  4140e4:	mov    esp,ebp
  4140e6:	pop    ebp
  4140e7:	ret    
  4140e8:	int3   
  4140e9:	int3   
  4140ea:	int3   
  4140eb:	int3   
  4140ec:	int3   
  4140ed:	int3   
  4140ee:	int3   
  4140ef:	int3   
  4140f0:	sub    esp,0xc
  4140f3:	push   ebx
  4140f4:	push   ebp
  4140f5:	push   esi
  4140f6:	mov    esi,eax
  4140f8:	mov    ebx,DWORD PTR [esi+0x10]
  4140fb:	push   edi
  4140fc:	mov    edi,DWORD PTR [esi+0xc]
  4140ff:	mov    ecx,ebx
  414101:	sub    ecx,edi
  414103:	mov    eax,0x92492493
  414108:	imul   ecx
  41410a:	add    edx,ecx
  41410c:	sar    edx,0x4
  41410f:	mov    eax,edx
  414111:	shr    eax,0x1f
  414114:	add    eax,edx
  414116:	jne    0x41411c
  414118:	xor    edi,edi
  41411a:	jmp    0x414153
  41411c:	cmp    edi,ebx
  41411e:	jbe    0x414126
  414120:	call   DWORD PTR ds:0x430390
  414126:	mov    ecx,DWORD PTR [esp+0x28]
  41412a:	mov    eax,DWORD PTR [esi]
  41412c:	test   ecx,ecx
  41412e:	je     0x414134
  414130:	cmp    ecx,eax
  414132:	je     0x41413a
  414134:	call   DWORD PTR ds:0x430390
  41413a:	mov    ecx,DWORD PTR [esp+0x2c]
  41413e:	sub    ecx,edi
  414140:	mov    eax,0x92492493
  414145:	imul   ecx
  414147:	add    edx,ecx
  414149:	sar    edx,0x4
  41414c:	mov    edi,edx
  41414e:	shr    edi,0x1f
  414151:	add    edi,edx
  414153:	mov    ecx,DWORD PTR [esp+0x2c]
  414157:	mov    edx,DWORD PTR [esp+0x28]
  41415b:	mov    eax,DWORD PTR [esp+0x24]
  41415f:	push   ecx
  414160:	push   edx
  414161:	push   eax
  414162:	mov    ecx,esi
  414164:	call   0x4156b0
  414169:	mov    ebx,DWORD PTR [esi+0xc]
  41416c:	cmp    ebx,DWORD PTR [esi+0x10]
  41416f:	jbe    0x414177
  414171:	call   DWORD PTR ds:0x430390
  414177:	mov    esi,DWORD PTR [esi]
  414179:	mov    ebp,esi
  41417b:	mov    DWORD PTR [esp+0x18],ebx
  41417f:	test   esi,esi
  414181:	jne    0x4141a4
  414183:	call   DWORD PTR ds:0x430390
  414189:	xor    eax,eax
  41418b:	lea    ecx,[edi*8+0x0]
  414192:	sub    ecx,edi
  414194:	lea    edi,[ebx+ecx*4]
  414197:	cmp    edi,DWORD PTR [eax+0x10]
  41419a:	ja     0x4141af
  41419c:	test   esi,esi
  41419e:	je     0x4141a8
  4141a0:	mov    esi,DWORD PTR [esi]
  4141a2:	jmp    0x4141aa
  4141a4:	mov    eax,DWORD PTR [esi]
  4141a6:	jmp    0x41418b
  4141a8:	xor    esi,esi
  4141aa:	cmp    edi,DWORD PTR [esi+0xc]
  4141ad:	jae    0x4141b5
  4141af:	call   DWORD PTR ds:0x430390
  4141b5:	mov    eax,DWORD PTR [esp+0x20]
  4141b9:	mov    DWORD PTR [eax+0x4],edi
  4141bc:	pop    edi
  4141bd:	pop    esi
  4141be:	mov    DWORD PTR [eax],ebp
  4141c0:	pop    ebp
  4141c1:	pop    ebx
  4141c2:	add    esp,0xc
  4141c5:	ret    0x10
  4141c8:	int3   
  4141c9:	int3   
  4141ca:	int3   
  4141cb:	int3   
  4141cc:	int3   
  4141cd:	int3   
  4141ce:	int3   
  4141cf:	int3   
  4141d0:	cmp    esi,0x9249249
  4141d6:	jbe    0x4141dd
  4141d8:	jmp    0x414b60
  4141dd:	test   esi,esi
  4141df:	ja     0x4141ed
  4141e1:	push   0x0
  4141e3:	call   0x425050
  4141e8:	add    esp,0x4
  4141eb:	jmp    0x4141f4
  4141ed:	mov    ecx,esi
  4141ef:	call   0x417c30
  4141f4:	lea    ecx,[esi*8+0x0]
  4141fb:	sub    ecx,esi
  4141fd:	lea    edx,[eax+ecx*4]
  414200:	mov    DWORD PTR [edi+0xc],eax
  414203:	mov    DWORD PTR [edi+0x10],eax
  414206:	mov    DWORD PTR [edi+0x14],edx
  414209:	mov    al,0x1
  41420b:	ret    
  41420c:	int3   
  41420d:	int3   
  41420e:	int3   
  41420f:	int3   
  414210:	push   esi
  414211:	mov    esi,eax
  414213:	cmp    esi,edi
  414215:	je     0x414226
  414217:	mov    ecx,esi
  414219:	call   DWORD PTR ds:0x430264
  41421f:	add    esi,0x1c
  414222:	cmp    esi,edi
  414224:	jne    0x414217
  414226:	pop    esi
  414227:	ret    
  414228:	int3   
  414229:	int3   
  41422a:	int3   
  41422b:	int3   
  41422c:	int3   
  41422d:	int3   
  41422e:	int3   
  41422f:	int3   
  414230:	push   esi
  414231:	mov    esi,DWORD PTR [ebx+0xc]
  414234:	test   esi,esi
  414236:	je     0x41425c
  414238:	push   edi
  414239:	mov    edi,DWORD PTR [ebx+0x10]
  41423c:	cmp    esi,edi
  41423e:	je     0x41424f
  414240:	mov    ecx,esi
  414242:	call   DWORD PTR ds:0x430264
  414248:	add    esi,0x1c
  41424b:	cmp    esi,edi
  41424d:	jne    0x414240
  41424f:	mov    eax,DWORD PTR [ebx+0xc]
  414252:	push   eax
  414253:	call   0x42504a
  414258:	add    esp,0x4
  41425b:	pop    edi
  41425c:	mov    DWORD PTR [ebx+0xc],0x0
  414263:	mov    DWORD PTR [ebx+0x10],0x0
  41426a:	mov    DWORD PTR [ebx+0x14],0x0
  414271:	pop    esi
  414272:	ret    
  414273:	int3   
  414274:	int3   
  414275:	int3   
  414276:	int3   
  414277:	int3   
  414278:	int3   
  414279:	int3   
  41427a:	int3   
  41427b:	int3   
  41427c:	int3   
  41427d:	int3   
  41427e:	int3   
  41427f:	int3   
  414280:	push   ecx
  414281:	mov    BYTE PTR [esp],0x0
  414285:	mov    eax,DWORD PTR [esp]
  414288:	mov    ecx,DWORD PTR [esp]
  41428b:	push   eax
  41428c:	push   ecx
  41428d:	push   edx
  41428e:	push   edi
  41428f:	mov    ecx,esi
  414291:	call   0x4196f0
  414296:	lea    eax,[esi*8+0x0]
  41429d:	sub    eax,esi
  41429f:	lea    eax,[edi+eax*4]
  4142a2:	add    esp,0x14
  4142a5:	ret    
  4142a6:	int3   
  4142a7:	int3   
  4142a8:	int3   
  4142a9:	int3   
  4142aa:	int3   
  4142ab:	int3   
  4142ac:	int3   
  4142ad:	int3   
  4142ae:	int3   
  4142af:	int3   
  4142b0:	push   esi
  4142b1:	mov    esi,eax
  4142b3:	cmp    esi,edi
  4142b5:	je     0x4142c6
  4142b7:	mov    ecx,esi
  4142b9:	call   DWORD PTR ds:0x43025c
  4142bf:	add    esi,0x1c
  4142c2:	cmp    esi,edi
  4142c4:	jne    0x4142b7
  4142c6:	pop    esi
  4142c7:	ret    
  4142c8:	int3   
  4142c9:	int3   
  4142ca:	int3   
  4142cb:	int3   
  4142cc:	int3   
  4142cd:	int3   
  4142ce:	int3   
  4142cf:	int3   
  4142d0:	push   ebp
  4142d1:	mov    ebp,esp
  4142d3:	push   0xffffffff
  4142d5:	push   0x42bf62
  4142da:	mov    eax,fs:0x0
  4142e0:	push   eax
  4142e1:	sub    esp,0x58
  4142e4:	mov    eax,ds:0x43e020
  4142e9:	xor    eax,ebp
  4142eb:	mov    DWORD PTR [ebp-0x14],eax
  4142ee:	push   ebx
  4142ef:	push   esi
  4142f0:	push   edi
  4142f1:	push   eax
  4142f2:	lea    eax,[ebp-0xc]
  4142f5:	mov    fs:0x0,eax
  4142fb:	mov    DWORD PTR [ebp-0x10],esp
  4142fe:	mov    eax,DWORD PTR [ebp+0x8]
  414301:	mov    ebx,ecx
  414303:	mov    DWORD PTR [ebp-0x5c],eax
  414306:	mov    eax,DWORD PTR [ebx+0xc]
  414309:	mov    DWORD PTR [ebp-0x50],ebx
  41430c:	test   eax,eax
  41430e:	jne    0x414314
  414310:	xor    esi,esi
  414312:	jmp    0x41432c
  414314:	mov    ecx,DWORD PTR [ebx+0x14]
  414317:	sub    ecx,eax
  414319:	mov    eax,0x92492493
  41431e:	imul   ecx
  414320:	add    edx,ecx
  414322:	sar    edx,0x4
  414325:	mov    esi,edx
  414327:	shr    esi,0x1f
  41432a:	add    esi,edx
  41432c:	mov    edi,DWORD PTR [ebx+0x10]
  41432f:	mov    ecx,edi
  414331:	sub    ecx,DWORD PTR [ebx+0xc]
  414334:	mov    eax,0x92492493
  414339:	imul   ecx
  41433b:	add    edx,ecx
  41433d:	sar    edx,0x4
  414340:	mov    eax,edx
  414342:	shr    eax,0x1f
  414345:	add    eax,edx
  414347:	mov    ecx,0x9249249
  41434c:	sub    ecx,eax
  41434e:	cmp    ecx,0x1
  414351:	jae    0x414358
  414353:	call   0x416300
  414358:	inc    eax
  414359:	cmp    esi,eax
  41435b:	jae    0x414504
  414361:	mov    ecx,esi
  414363:	shr    ecx,1
  414365:	mov    edx,0x9249249
  41436a:	sub    edx,ecx
  41436c:	cmp    edx,esi
  41436e:	jae    0x414374
  414370:	xor    esi,esi
  414372:	jmp    0x414376
  414374:	add    esi,ecx
  414376:	cmp    esi,eax
  414378:	jae    0x41437c
  41437a:	mov    esi,eax
  41437c:	test   esi,esi
  41437e:	ja     0x41438c
  414380:	push   0x0
  414382:	call   0x425050
  414387:	add    esp,0x4
  41438a:	jmp    0x414393
  41438c:	mov    ecx,esi
  41438e:	call   0x417c30
  414393:	mov    ecx,DWORD PTR [ebp+0x10]
  414396:	sub    ecx,DWORD PTR [ebx+0xc]
  414399:	mov    DWORD PTR [ebp-0x54],eax
  41439c:	mov    eax,0x92492493
  4143a1:	imul   ecx
  4143a3:	add    edx,ecx
  4143a5:	mov    ecx,DWORD PTR [ebp-0x54]
  4143a8:	sar    edx,0x4
  4143ab:	mov    edi,edx
  4143ad:	xor    eax,eax
  4143af:	mov    DWORD PTR [ebp-0x4],eax
  4143b2:	shr    edi,0x1f
  4143b5:	add    edi,edx
  4143b7:	mov    DWORD PTR [ebp-0x58],eax
  4143ba:	lea    eax,[edi*8+0x0]
  4143c1:	sub    eax,edi
  4143c3:	lea    eax,[ecx+eax*4]
  4143c6:	mov    BYTE PTR [ebp-0x50],0x0
  4143ca:	mov    edx,DWORD PTR [ebp-0x50]
  4143cd:	mov    ecx,DWORD PTR [ebp-0x50]
  4143d0:	push   edx
  4143d1:	mov    edx,DWORD PTR [ebp-0x5c]
  4143d4:	push   ecx
  4143d5:	push   edx
  4143d6:	push   eax
  4143d7:	mov    ecx,0x1
  4143dc:	mov    DWORD PTR [ebp-0x60],edi
  4143df:	call   0x4194b0
  4143e4:	mov    ecx,DWORD PTR [ebx+0xc]
  4143e7:	add    esp,0x10
  4143ea:	mov    BYTE PTR [ebp-0x50],0x0
  4143ee:	mov    eax,DWORD PTR [ebp-0x50]
  4143f1:	mov    edx,DWORD PTR [ebp-0x50]
  4143f4:	push   eax
  4143f5:	mov    eax,DWORD PTR [ebp+0x10]
  4143f8:	push   edx
  4143f9:	mov    edx,DWORD PTR [ebp-0x54]
  4143fc:	push   eax
  4143fd:	mov    DWORD PTR [ebp-0x58],0x1
  414404:	call   0x41aca0
  414409:	mov    edx,DWORD PTR [ebp-0x54]
  41440c:	mov    eax,DWORD PTR [ebx+0x10]
  41440f:	inc    edi
  414410:	lea    ecx,[edi*8+0x0]
  414417:	sub    ecx,edi
  414419:	lea    edx,[edx+ecx*4]
  41441c:	add    esp,0xc
  41441f:	mov    BYTE PTR [ebp-0x50],0x0
  414423:	mov    ecx,DWORD PTR [ebp-0x50]
  414426:	push   ecx
  414427:	mov    ecx,DWORD PTR [ebp-0x50]
  41442a:	push   ecx
  41442b:	mov    ecx,DWORD PTR [ebp+0x10]
  41442e:	push   eax
  41442f:	mov    DWORD PTR [ebp-0x58],0x2
  414436:	call   0x41aca0
  41443b:	mov    DWORD PTR [ebp-0x4],0xffffffff
  414442:	mov    edi,DWORD PTR [ebx+0x10]
  414445:	mov    eax,DWORD PTR [ebx+0xc]
  414448:	mov    ecx,edi
  41444a:	sub    ecx,eax
  41444c:	mov    eax,0x92492493
  414451:	imul   ecx
  414453:	add    edx,ecx
  414455:	sar    edx,0x4
  414458:	mov    eax,edx
  41445a:	shr    eax,0x1f
  41445d:	add    esp,0xc
  414460:	cmp    DWORD PTR [ebx+0xc],0x0
  414464:	lea    edx,[edx+eax*1+0x1]
  414468:	mov    DWORD PTR [ebp-0x50],edx
  41446b:	je     0x414484
  41446d:	mov    eax,DWORD PTR [ebx+0xc]
  414470:	call   0x4142b0
  414475:	mov    ecx,DWORD PTR [ebx+0xc]
  414478:	push   ecx
  414479:	call   0x42504a
  41447e:	mov    edx,DWORD PTR [ebp-0x50]
  414481:	add    esp,0x4
  414484:	mov    eax,DWORD PTR [ebp-0x54]
  414487:	lea    ecx,[esi*8+0x0]
  41448e:	sub    ecx,esi
  414490:	lea    ecx,[eax+ecx*4]
  414493:	mov    DWORD PTR [ebx+0x14],ecx
  414496:	lea    ecx,[edx*8+0x0]
  41449d:	sub    ecx,edx
  41449f:	lea    edx,[eax+ecx*4]
  4144a2:	mov    DWORD PTR [ebx+0x10],edx
  4144a5:	mov    DWORD PTR [ebx+0xc],eax
  4144a8:	jmp    0x414639
  4144ad:	cmp    DWORD PTR [ebp-0x58],0x1
  4144b1:	mov    esi,DWORD PTR [ebp-0x60]
  4144b4:	mov    ebx,DWORD PTR [ebp-0x54]
  4144b7:	jle    0x4144cc
  4144b9:	lea    eax,[esi*8+0x0]
  4144c0:	sub    eax,esi
  4144c2:	lea    edi,[ebx+eax*4]
  4144c5:	mov    eax,ebx
  4144c7:	call   0x4142b0
  4144cc:	cmp    DWORD PTR [ebp-0x58],0x0
  4144d0:	jle    0x4144f2
  4144d2:	lea    eax,[esi+0x1]
  4144d5:	lea    ecx,[eax*8+0x0]
  4144dc:	sub    ecx,eax
  4144de:	lea    edx,[esi*8+0x0]
  4144e5:	sub    edx,esi
  4144e7:	lea    edi,[ebx+ecx*4]
  4144ea:	lea    eax,[ebx+edx*4]
  4144ed:	call   0x4142b0
  4144f2:	push   ebx
  4144f3:	call   0x42504a
  4144f8:	add    esp,0x4
  4144fb:	push   0x0
  4144fd:	push   0x0
  4144ff:	call   0x429e76
  414504:	sub    edi,DWORD PTR [ebp+0x10]
  414507:	mov    eax,0x92492493
  41450c:	imul   edi
  41450e:	add    edx,edi
  414510:	sar    edx,0x4
  414513:	mov    eax,edx
  414515:	shr    eax,0x1f
  414518:	add    eax,edx
  41451a:	cmp    eax,0x1
  41451d:	jae    0x4145c8
  414523:	mov    ecx,DWORD PTR [ebp-0x5c]
  414526:	push   ecx
  414527:	lea    ecx,[ebp-0x30]
  41452a:	call   DWORD PTR ds:0x430258
  414530:	mov    DWORD PTR [ebp-0x4],0x2
  414537:	mov    eax,DWORD PTR [ebp+0x10]
  41453a:	lea    edx,[eax+0x1c]
  41453d:	push   edx
  41453e:	mov    edx,DWORD PTR [ebx+0x10]
  414541:	push   eax
  414542:	call   0x417ba0
  414547:	mov    BYTE PTR [ebp-0x4],0x3
  41454b:	mov    edi,DWORD PTR [ebx+0x10]
  41454e:	mov    ecx,edi
  414550:	sub    ecx,DWORD PTR [ebp+0x10]
  414553:	mov    eax,0x92492493
  414558:	imul   ecx
  41455a:	add    edx,ecx
  41455c:	sar    edx,0x4
  41455f:	mov    eax,edx
  414561:	shr    eax,0x1f
  414564:	add    eax,edx
  414566:	mov    esi,0x1
  41456b:	sub    esi,eax
  41456d:	lea    edx,[ebp-0x30]
  414570:	call   0x4135e0
  414575:	mov    DWORD PTR [ebp-0x4],0x2
  41457c:	add    DWORD PTR [ebx+0x10],0x1c
  414580:	mov    ebx,DWORD PTR [ebx+0x10]
  414583:	mov    esi,DWORD PTR [ebp+0x10]
  414586:	lea    edi,[ebx-0x1c]
  414589:	cmp    esi,edi
  41458b:	je     0x4145a3
  41458d:	lea    ecx,[ecx+0x0]
  414590:	lea    ecx,[ebp-0x30]
  414593:	push   ecx
  414594:	mov    ecx,esi
  414596:	call   DWORD PTR ds:0x430174
  41459c:	add    esi,0x1c
  41459f:	cmp    esi,edi
  4145a1:	jne    0x414590
  4145a3:	lea    ecx,[ebp-0x30]
  4145a6:	jmp    0x41462c
  4145ab:	mov    edx,DWORD PTR [ebp-0x50]
  4145ae:	mov    edi,DWORD PTR [edx+0x10]
  4145b1:	mov    eax,DWORD PTR [ebp+0x10]
  4145b4:	add    edi,0x1c
  4145b7:	add    eax,0x1c
  4145ba:	call   0x4142b0
  4145bf:	push   0x0
  4145c1:	push   0x0
  4145c3:	call   0x429e76
  4145c8:	mov    eax,DWORD PTR [ebp-0x5c]
  4145cb:	push   eax
  4145cc:	lea    ecx,[ebp-0x4c]
  4145cf:	call   DWORD PTR ds:0x430258
  4145d5:	mov    DWORD PTR [ebp-0x4],0x5
  4145dc:	mov    esi,DWORD PTR [ebx+0x10]
  4145df:	push   esi
  4145e0:	lea    edi,[esi-0x1c]
  4145e3:	push   edi
  4145e4:	mov    edx,esi
  4145e6:	call   0x417ba0
  4145eb:	mov    BYTE PTR [ebp-0x50],0x0
  4145ef:	mov    ecx,DWORD PTR [ebp-0x50]
  4145f2:	mov    edx,DWORD PTR [ebp-0x50]
  4145f5:	push   ecx
  4145f6:	mov    DWORD PTR [ebx+0x10],eax
  4145f9:	mov    eax,DWORD PTR [ebp-0x50]
  4145fc:	push   edx
  4145fd:	push   eax
  4145fe:	mov    eax,edi
  414600:	mov    edi,DWORD PTR [ebp+0x10]
  414603:	push   esi
  414604:	call   0x419790
  414609:	mov    esi,DWORD PTR [ebp+0x10]
  41460c:	lea    edi,[esi+0x1c]
  41460f:	add    esp,0x10
  414612:	cmp    esi,edi
  414614:	je     0x414629
  414616:	lea    ecx,[ebp-0x4c]
  414619:	push   ecx
  41461a:	mov    ecx,esi
  41461c:	call   DWORD PTR ds:0x430174
  414622:	add    esi,0x1c
  414625:	cmp    esi,edi
  414627:	jne    0x414616
  414629:	lea    ecx,[ebp-0x4c]
  41462c:	mov    DWORD PTR [ebp-0x4],0xffffffff
  414633:	call   DWORD PTR ds:0x43025c
  414639:	mov    ecx,DWORD PTR [ebp-0xc]
  41463c:	mov    DWORD PTR fs:0x0,ecx
  414643:	pop    ecx
  414644:	pop    edi
  414645:	pop    esi
  414646:	pop    ebx
  414647:	mov    ecx,DWORD PTR [ebp-0x14]
  41464a:	xor    ecx,ebp
  41464c:	call   0x42503a
  414651:	mov    esp,ebp
  414653:	pop    ebp
  414654:	ret    0xc
  414657:	int3   
  414658:	int3   
  414659:	int3   
  41465a:	int3   
  41465b:	int3   
  41465c:	int3   
  41465d:	int3   
  41465e:	int3   
  41465f:	int3   
  414660:	push   ebp
  414661:	mov    ebp,DWORD PTR ds:0x430390
  414667:	push   edi
  414668:	mov    DWORD PTR [ebx],0x0
  41466e:	test   esi,esi
  414670:	je     0x414680
  414672:	mov    eax,DWORD PTR [esp+0x10]
  414676:	cmp    DWORD PTR [esi+0xc],eax
  414679:	ja     0x414680
  41467b:	cmp    eax,DWORD PTR [esi+0x10]
  41467e:	jbe    0x414686
  414680:	call   ebp
  414682:	mov    eax,DWORD PTR [esp+0x10]
  414686:	mov    edi,DWORD PTR [esp+0x18]
  41468a:	mov    ecx,DWORD PTR [esi]
  41468c:	mov    DWORD PTR [ebx],ecx
  41468e:	mov    DWORD PTR [ebx+0x4],eax
  414691:	cmp    DWORD PTR [esi+0xc],edi
  414694:	ja     0x41469b
  414696:	cmp    edi,DWORD PTR [esi+0x10]
  414699:	jbe    0x4146a1
  41469b:	call   ebp
  41469d:	mov    edi,DWORD PTR [esp+0x18]
  4146a1:	mov    eax,DWORD PTR [ebx]
  4146a3:	mov    ecx,DWORD PTR [esi]
  4146a5:	test   eax,eax
  4146a7:	je     0x4146ad
  4146a9:	cmp    eax,ecx
  4146ab:	je     0x4146af
  4146ad:	call   ebp
  4146af:	mov    ecx,DWORD PTR [ebx+0x4]
  4146b2:	cmp    ecx,edi
  4146b4:	je     0x4146d2
  4146b6:	mov    eax,DWORD PTR [esi+0x10]
  4146b9:	sub    eax,edi
  4146bb:	lea    ebp,[eax+ecx*1]
  4146be:	test   eax,eax
  4146c0:	jle    0x4146cf
  4146c2:	push   eax
  4146c3:	push   edi
  4146c4:	push   eax
  4146c5:	push   ecx
  4146c6:	call   DWORD PTR ds:0x430394
  4146cc:	add    esp,0x10
  4146cf:	mov    DWORD PTR [esi+0x10],ebp
  4146d2:	pop    edi
  4146d3:	mov    eax,ebx
  4146d5:	pop    ebp
  4146d6:	ret    0x10
  4146d9:	int3   
  4146da:	int3   
  4146db:	int3   
  4146dc:	int3   
  4146dd:	int3   
  4146de:	int3   
  4146df:	int3   
  4146e0:	sub    esp,0x8
  4146e3:	push   ebx
  4146e4:	push   ebp
  4146e5:	mov    ebp,DWORD PTR [esp+0x14]
  4146e9:	push   esi
  4146ea:	mov    esi,DWORD PTR [esp+0x1c]
  4146ee:	xor    ebx,ebx
  4146f0:	push   edi
  4146f1:	mov    DWORD PTR [esi],ebx
  4146f3:	cmp    ebp,ebx
  4146f5:	je     0x414705
  4146f7:	mov    eax,DWORD PTR [esp+0x28]
  4146fb:	cmp    DWORD PTR [ebp+0xc],eax
  4146fe:	ja     0x414705
  414700:	cmp    eax,DWORD PTR [ebp+0x10]
  414703:	jbe    0x41470f
  414705:	call   DWORD PTR ds:0x430390
  41470b:	mov    eax,DWORD PTR [esp+0x28]
  41470f:	mov    edi,DWORD PTR [esp+0x30]
  414713:	mov    ecx,DWORD PTR [ebp+0x0]
  414716:	mov    DWORD PTR [esi],ecx
  414718:	mov    DWORD PTR [esi+0x4],eax
  41471b:	cmp    DWORD PTR [ebp+0xc],edi
  41471e:	ja     0x414725
  414720:	cmp    edi,DWORD PTR [ebp+0x10]
  414723:	jbe    0x41472f
  414725:	call   DWORD PTR ds:0x430390
  41472b:	mov    edi,DWORD PTR [esp+0x30]
  41472f:	mov    eax,DWORD PTR [esi]
  414731:	mov    ecx,DWORD PTR [ebp+0x0]
  414734:	cmp    eax,ebx
  414736:	je     0x41473c
  414738:	cmp    eax,ecx
  41473a:	je     0x414742
  41473c:	call   DWORD PTR ds:0x430390
  414742:	mov    eax,DWORD PTR [esi+0x4]
  414745:	mov    DWORD PTR [esp+0x14],eax
  414749:	cmp    eax,edi
  41474b:	je     0x4147af
  41474d:	mov    esi,DWORD PTR [ebp+0x10]
  414750:	mov    BYTE PTR [esp+0x1c],bl
  414754:	mov    edx,DWORD PTR [esp+0x1c]
  414758:	push   edx
  414759:	mov    edx,DWORD PTR [esp+0x24]
  41475d:	mov    BYTE PTR [esp+0x14],bl
  414761:	mov    ecx,DWORD PTR [esp+0x14]
  414765:	push   ecx
  414766:	push   edx
  414767:	mov    ebx,esi
  414769:	mov    ecx,edi
  41476b:	call   0x41ab20
  414770:	sub    esi,edi
  414772:	mov    edi,DWORD PTR [ebp+0x10]
  414775:	mov    eax,0x2aaaaaab
  41477a:	imul   esi
  41477c:	sar    edx,0x4
  41477f:	mov    eax,edx
  414781:	shr    eax,0x1f
  414784:	add    eax,edx
  414786:	lea    esi,[eax+eax*2]
  414789:	mov    eax,DWORD PTR [esp+0x2c]
  41478d:	shl    esi,0x5
  414790:	add    esi,DWORD PTR [esp+0x20]
  414794:	push   eax
  414795:	push   esi
  414796:	call   0x419550
  41479b:	mov    eax,DWORD PTR [esp+0x34]
  41479f:	add    esp,0x14
  4147a2:	mov    DWORD PTR [ebp+0x10],esi
  4147a5:	pop    edi
  4147a6:	pop    esi
  4147a7:	pop    ebp
  4147a8:	pop    ebx
  4147a9:	add    esp,0x8
  4147ac:	ret    0x18
  4147af:	pop    edi
  4147b0:	mov    eax,esi
  4147b2:	pop    esi
  4147b3:	pop    ebp
  4147b4:	pop    ebx
  4147b5:	add    esp,0x8
  4147b8:	ret    0x18
  4147bb:	int3   
  4147bc:	int3   
  4147bd:	int3   
  4147be:	int3   
  4147bf:	int3   
  4147c0:	push   ebp
  4147c1:	mov    ebp,esp
  4147c3:	push   0xffffffff
  4147c5:	push   0x42c8e7
  4147ca:	mov    eax,fs:0x0
  4147d0:	push   eax
  4147d1:	sub    esp,0xe8
  4147d7:	mov    eax,ds:0x43e020
  4147dc:	xor    eax,ebp
  4147de:	mov    DWORD PTR [ebp-0x18],eax
  4147e1:	push   ebx
  4147e2:	push   esi
  4147e3:	push   edi
  4147e4:	push   eax
  4147e5:	lea    eax,[ebp-0xc]
  4147e8:	mov    fs:0x0,eax
  4147ee:	mov    DWORD PTR [ebp-0x10],esp
  4147f1:	mov    eax,DWORD PTR [ebp+0x8]
  4147f4:	mov    ebx,ecx
  4147f6:	mov    DWORD PTR [ebp-0xec],eax
  4147fc:	mov    eax,DWORD PTR [ebx+0xc]
  4147ff:	mov    DWORD PTR [ebp-0xe0],ebx
  414805:	test   eax,eax
  414807:	jne    0x41480d
  414809:	xor    esi,esi
  41480b:	jmp    0x414823
  41480d:	mov    ecx,DWORD PTR [ebx+0x14]
  414810:	sub    ecx,eax
  414812:	mov    eax,0x2aaaaaab
  414817:	imul   ecx
  414819:	sar    edx,0x4
  41481c:	mov    esi,edx
  41481e:	shr    esi,0x1f
  414821:	add    esi,edx
  414823:	mov    edi,DWORD PTR [ebx+0x10]
  414826:	mov    ecx,edi
  414828:	sub    ecx,DWORD PTR [ebx+0xc]
  41482b:	mov    eax,0x2aaaaaab
  414830:	imul   ecx
  414832:	sar    edx,0x4
  414835:	mov    eax,edx
  414837:	shr    eax,0x1f
  41483a:	add    eax,edx
  41483c:	mov    ecx,0x2aaaaaa
  414841:	sub    ecx,eax
  414843:	cmp    ecx,0x1
  414846:	jae    0x41484d
  414848:	call   0x414b60
  41484d:	inc    eax
  41484e:	cmp    esi,eax
  414850:	jae    0x414a25
  414856:	mov    ecx,esi
  414858:	shr    ecx,1
  41485a:	mov    edx,0x2aaaaaa
  41485f:	sub    edx,ecx
  414861:	cmp    edx,esi
  414863:	jae    0x414869
  414865:	xor    esi,esi
  414867:	jmp    0x41486b
  414869:	add    esi,ecx
  41486b:	cmp    esi,eax
  41486d:	jae    0x414871
  41486f:	mov    esi,eax
  414871:	mov    ecx,esi
  414873:	call   0x414bd0
  414878:	mov    edx,DWORD PTR [ebp+0x10]
  41487b:	sub    edx,DWORD PTR [ebx+0xc]
  41487e:	mov    ecx,eax
  414880:	mov    eax,0x2aaaaaab
  414885:	imul   edx
  414887:	sar    edx,0x4
  41488a:	mov    edi,edx
  41488c:	xor    eax,eax
  41488e:	mov    DWORD PTR [ebp-0x4],eax
  414891:	shr    edi,0x1f
  414894:	add    edi,edx
  414896:	mov    DWORD PTR [ebp-0xe8],eax
  41489c:	lea    eax,[edi+edi*2]
  41489f:	shl    eax,0x5
  4148a2:	add    eax,ecx
  4148a4:	mov    DWORD PTR [ebp-0xe4],ecx
  4148aa:	mov    BYTE PTR [ebp-0xe0],0x0
  4148b1:	mov    ecx,DWORD PTR [ebp-0xe0]
  4148b7:	mov    edx,DWORD PTR [ebp-0xe0]
  4148bd:	push   ecx
  4148be:	mov    ecx,DWORD PTR [ebp-0xec]
  4148c4:	push   edx
  4148c5:	push   eax
  4148c6:	mov    edx,0x1
  4148cb:	mov    DWORD PTR [ebp-0xf0],edi
  4148d1:	call   0x4195d0
  4148d6:	mov    ecx,DWORD PTR [ebx+0xc]
  4148d9:	add    esp,0xc
  4148dc:	mov    BYTE PTR [ebp-0xe0],0x0
  4148e3:	mov    eax,DWORD PTR [ebp-0xe0]
  4148e9:	mov    edx,DWORD PTR [ebp-0xe0]
  4148ef:	push   eax
  4148f0:	mov    eax,DWORD PTR [ebp-0xe4]
  4148f6:	push   edx
  4148f7:	mov    edx,DWORD PTR [ebp+0x10]
  4148fa:	push   eax
  4148fb:	push   edx
  4148fc:	mov    DWORD PTR [ebp-0xe8],0x1
  414906:	call   0x41ab80
  41490b:	mov    ecx,DWORD PTR [ebx+0x10]
  41490e:	add    esp,0x10
  414911:	mov    BYTE PTR [ebp-0xe0],0x0
  414918:	mov    edx,DWORD PTR [ebp-0xe0]
  41491e:	push   edx
  41491f:	mov    edx,DWORD PTR [ebp-0xe0]
  414925:	lea    eax,[edi+edi*2+0x3]
  414929:	shl    eax,0x5
  41492c:	add    eax,DWORD PTR [ebp-0xe4]
  414932:	push   edx
  414933:	push   eax
  414934:	push   ecx
  414935:	mov    ecx,DWORD PTR [ebp+0x10]
  414938:	mov    DWORD PTR [ebp-0xe8],0x2
  414942:	call   0x41ab80
  414947:	mov    DWORD PTR [ebp-0x4],0xffffffff
  41494e:	mov    edi,DWORD PTR [ebx+0xc]
  414951:	mov    ecx,DWORD PTR [ebx+0x10]
  414954:	sub    ecx,edi
  414956:	mov    eax,0x2aaaaaab
  41495b:	imul   ecx
  41495d:	sar    edx,0x4
  414960:	mov    eax,edx
  414962:	shr    eax,0x1f
  414965:	add    esp,0x10
  414968:	lea    edx,[edx+eax*1+0x1]
  41496c:	mov    DWORD PTR [ebp-0xe0],edx
  414972:	test   edi,edi
  414974:	je     0x414998
  414976:	mov    ecx,DWORD PTR [ebp-0xe0]
  41497c:	push   ecx
  41497d:	push   edi
  41497e:	mov    edi,DWORD PTR [ebx+0x10]
  414981:	call   0x419550
  414986:	mov    edx,DWORD PTR [ebx+0xc]
  414989:	push   edx
  41498a:	call   0x42504a
  41498f:	mov    edx,DWORD PTR [ebp-0xe0]
  414995:	add    esp,0xc
  414998:	mov    eax,DWORD PTR [ebp-0xe4]
  41499e:	lea    ecx,[esi+esi*2]
  4149a1:	lea    edx,[edx+edx*2]
  4149a4:	shl    ecx,0x5
  4149a7:	add    ecx,eax
  4149a9:	shl    edx,0x5
  4149ac:	add    edx,eax
  4149ae:	mov    DWORD PTR [ebx+0x14],ecx
  4149b1:	mov    DWORD PTR [ebx+0x10],edx
  4149b4:	mov    DWORD PTR [ebx+0xc],eax
  4149b7:	jmp    0x414b38
  4149bc:	cmp    DWORD PTR [ebp-0xe8],0x1
  4149c3:	mov    esi,DWORD PTR [ebp-0xf0]
  4149c9:	mov    ebx,DWORD PTR [ebp-0xe4]
  4149cf:	jle    0x4149e9
  4149d1:	mov    eax,DWORD PTR [ebp-0xe0]
  4149d7:	lea    edi,[esi+esi*2]
  4149da:	push   eax
  4149db:	shl    edi,0x5
  4149de:	add    edi,ebx
  4149e0:	push   ebx
  4149e1:	call   0x419550
  4149e6:	add    esp,0x8
  4149e9:	cmp    DWORD PTR [ebp-0xe8],0x0
  4149f0:	jle    0x414a13
  4149f2:	mov    ecx,DWORD PTR [ebp-0xe0]
  4149f8:	lea    edx,[esi+esi*2]
  4149fb:	shl    edx,0x5
  4149fe:	lea    edi,[esi+esi*2+0x3]
  414a02:	push   ecx
  414a03:	add    edx,ebx
  414a05:	shl    edi,0x5
  414a08:	add    edi,ebx
  414a0a:	push   edx
  414a0b:	call   0x419550
  414a10:	add    esp,0x8
  414a13:	push   ebx
  414a14:	call   0x42504a
  414a19:	add    esp,0x4
  414a1c:	push   0x0
  414a1e:	push   0x0
  414a20:	call   0x429e76
  414a25:	sub    edi,DWORD PTR [ebp+0x10]
  414a28:	mov    eax,0x2aaaaaab
  414a2d:	imul   edi
  414a2f:	mov    edi,DWORD PTR [ebp-0xec]
  414a35:	sar    edx,0x4
  414a38:	mov    eax,edx
  414a3a:	shr    eax,0x1f
  414a3d:	add    eax,edx
  414a3f:	cmp    eax,0x1
  414a42:	jae    0x414ae5
  414a48:	lea    ecx,[ebp-0x7c]
  414a4b:	push   ecx
  414a4c:	call   0x415ab0
  414a51:	mov    DWORD PTR [ebp-0x4],0x2
  414a58:	mov    ecx,DWORD PTR [ebx+0x10]
  414a5b:	mov    eax,DWORD PTR [ebp+0x10]
  414a5e:	push   ecx
  414a5f:	lea    edx,[eax+0x60]
  414a62:	push   eax
  414a63:	call   0x417b70
  414a68:	mov    BYTE PTR [ebp-0x4],0x3
  414a6c:	mov    edi,DWORD PTR [ebx+0x10]
  414a6f:	mov    ecx,edi
  414a71:	sub    ecx,DWORD PTR [ebp+0x10]
  414a74:	lea    edx,[ebp-0x7c]
  414a77:	push   edx
  414a78:	mov    eax,0x2aaaaaab
  414a7d:	imul   ecx
  414a7f:	sar    edx,0x4
  414a82:	mov    eax,edx
  414a84:	shr    eax,0x1f
  414a87:	add    eax,edx
  414a89:	mov    esi,0x1
  414a8e:	sub    esi,eax
  414a90:	call   0x413840
  414a95:	mov    DWORD PTR [ebp-0x4],0x2
  414a9c:	add    DWORD PTR [ebx+0x10],0x60
  414aa0:	mov    ebx,DWORD PTR [ebx+0x10]
  414aa3:	lea    eax,[ebx-0x60]
  414aa6:	push   eax
  414aa7:	mov    eax,DWORD PTR [ebp+0x10]
  414aaa:	lea    edi,[ebp-0x7c]
  414aad:	call   0x4197e0
  414ab2:	add    esp,0x4
  414ab5:	mov    ecx,edi
  414ab7:	push   ecx
  414ab8:	jmp    0x414b2c
  414aba:	mov    edx,DWORD PTR [ebp-0xe0]
  414ac0:	mov    eax,DWORD PTR [ebp-0xe0]
  414ac6:	mov    ecx,DWORD PTR [ebp+0x10]
  414ac9:	mov    edi,DWORD PTR [eax+0x10]
  414acc:	push   edx
  414acd:	add    ecx,0x60
  414ad0:	add    edi,0x60
  414ad3:	push   ecx
  414ad4:	call   0x419550
  414ad9:	add    esp,0x8
  414adc:	push   0x0
  414ade:	push   0x0
  414ae0:	call   0x429e76
  414ae5:	lea    edx,[ebp-0xdc]
  414aeb:	push   edx
  414aec:	call   0x415ab0
  414af1:	mov    DWORD PTR [ebp-0x4],0x5
  414af8:	mov    edi,DWORD PTR [ebx+0x10]
  414afb:	push   edi
  414afc:	lea    esi,[edi-0x60]
  414aff:	push   esi
  414b00:	mov    edx,edi
  414b02:	call   0x417b70
  414b07:	mov    ecx,DWORD PTR [ebp+0x10]
  414b0a:	mov    DWORD PTR [ebx+0x10],eax
  414b0d:	mov    eax,esi
  414b0f:	call   0x417bd0
  414b14:	mov    eax,DWORD PTR [ebp+0x10]
  414b17:	lea    ecx,[eax+0x60]
  414b1a:	push   ecx
  414b1b:	lea    edi,[ebp-0xdc]
  414b21:	call   0x4197e0
  414b26:	add    esp,0x4
  414b29:	mov    eax,edi
  414b2b:	push   eax
  414b2c:	mov    DWORD PTR [ebp-0x4],0xffffffff
  414b33:	call   0x415b30
  414b38:	mov    ecx,DWORD PTR [ebp-0xc]
  414b3b:	mov    DWORD PTR fs:0x0,ecx
  414b42:	pop    ecx
  414b43:	pop    edi
  414b44:	pop    esi
  414b45:	pop    ebx
  414b46:	mov    ecx,DWORD PTR [ebp-0x18]
  414b49:	xor    ecx,ebp
  414b4b:	call   0x42503a
  414b50:	mov    esp,ebp
  414b52:	pop    ebp
  414b53:	ret    0xc
  414b56:	int3   
  414b57:	int3   
  414b58:	int3   
  414b59:	int3   
  414b5a:	int3   
  414b5b:	int3   
  414b5c:	int3   
  414b5d:	int3   
  414b5e:	int3   
  414b5f:	int3   
  414b60:	push   ebp
  414b61:	mov    ebp,esp
  414b63:	and    esp,0xfffffff8
  414b66:	push   0xffffffff
  414b68:	push   0x42bf29
  414b6d:	mov    eax,fs:0x0
  414b73:	push   eax
  414b74:	sub    esp,0x4c
  414b77:	mov    eax,ds:0x43e020
  414b7c:	xor    eax,esp
  414b7e:	push   eax
  414b7f:	lea    eax,[esp+0x50]
  414b83:	mov    fs:0x0,eax
  414b89:	push   0x4329a8
  414b8e:	lea    ecx,[esp+0xc]
  414b92:	call   DWORD PTR ds:0x43011c
  414b98:	lea    eax,[esp+0x8]
  414b9c:	push   eax
  414b9d:	lea    ecx,[esp+0x28]
  414ba1:	mov    DWORD PTR [esp+0x5c],0x0
  414ba9:	call   0x402940
  414bae:	push   0x435684
  414bb3:	lea    ecx,[esp+0x28]
  414bb7:	push   ecx
  414bb8:	mov    DWORD PTR [esp+0x2c],0x430604
  414bc0:	call   0x429e76
  414bc5:	int3   
  414bc6:	int3   
  414bc7:	int3   
  414bc8:	int3   
  414bc9:	int3   
  414bca:	int3   
  414bcb:	int3   
  414bcc:	int3   
  414bcd:	int3   
  414bce:	int3   
  414bcf:	int3   
  414bd0:	sub    esp,0x10
  414bd3:	test   ecx,ecx
  414bd5:	ja     0x414bec
  414bd7:	xor    ecx,ecx
  414bd9:	lea    edx,[ecx+ecx*2]
  414bdc:	shl    edx,0x5
  414bdf:	push   edx
  414be0:	call   0x425050
  414be5:	add    esp,0x4
  414be8:	add    esp,0x10
  414beb:	ret    
  414bec:	or     eax,0xffffffff
  414bef:	xor    edx,edx
  414bf1:	div    ecx
  414bf3:	cmp    eax,0x60
  414bf6:	jae    0x414bd9
  414bf8:	lea    eax,[esp]
  414bfb:	push   eax
  414bfc:	lea    ecx,[esp+0x8]
  414c00:	mov    DWORD PTR [esp+0x4],0x0
  414c08:	call   DWORD PTR ds:0x430398
  414c0e:	push   0x4356bc
  414c13:	lea    ecx,[esp+0x8]
  414c17:	push   ecx
  414c18:	mov    DWORD PTR [esp+0xc],0x4305ec
  414c20:	call   0x429e76
  414c25:	int3   
  414c26:	int3   
  414c27:	int3   
  414c28:	int3   
  414c29:	int3   
  414c2a:	int3   
  414c2b:	int3   
  414c2c:	int3   
  414c2d:	int3   
  414c2e:	int3   
  414c2f:	int3   
  414c30:	sub    esp,0x18
  414c33:	push   ebp
  414c34:	mov    ebp,DWORD PTR [esp+0x20]
  414c38:	push   esi
  414c39:	push   edi
  414c3a:	mov    edi,DWORD PTR [ebx+0x18]
  414c3d:	mov    esi,DWORD PTR [edi+0x4]
  414c40:	cmp    BYTE PTR [esi+0x2d],0x0
  414c44:	mov    al,0x1
  414c46:	mov    BYTE PTR [esp+0x28],al
  414c4a:	jne    0x414c79
  414c4c:	lea    esp,[esp+0x0]
  414c50:	mov    ecx,DWORD PTR [esp+0x2c]
  414c54:	lea    eax,[esi+0xc]
  414c57:	push   eax
  414c58:	push   ecx
  414c59:	mov    edi,esi
  414c5b:	call   DWORD PTR ds:0x4301e8
  414c61:	add    esp,0x8
  414c64:	mov    BYTE PTR [esp+0x28],al
  414c68:	test   al,al
  414c6a:	je     0x414c70
  414c6c:	mov    esi,DWORD PTR [esi]
  414c6e:	jmp    0x414c73
  414c70:	mov    esi,DWORD PTR [esi+0x8]
  414c73:	cmp    BYTE PTR [esi+0x2d],0x0
  414c77:	je     0x414c50
  414c79:	mov    esi,DWORD PTR [ebx]
  414c7b:	mov    DWORD PTR [esp+0x14],edi
  414c7f:	mov    DWORD PTR [esp+0x10],esi
  414c83:	test   al,al
  414c85:	je     0x414ce0
  414c87:	mov    edx,DWORD PTR [ebx+0x18]
  414c8a:	mov    eax,DWORD PTR [edx]
  414c8c:	mov    DWORD PTR [esp+0x1c],eax
  414c90:	test   esi,esi
  414c92:	je     0x414c98
  414c94:	cmp    esi,esi
  414c96:	je     0x414c9e
  414c98:	call   DWORD PTR ds:0x430390
  414c9e:	cmp    edi,DWORD PTR [esp+0x1c]
  414ca2:	jne    0x414cd3
  414ca4:	mov    ecx,DWORD PTR [esp+0x2c]
  414ca8:	push   ecx
  414ca9:	push   0x1
  414cab:	lea    edx,[esp+0x20]
  414caf:	mov    ecx,edi
  414cb1:	push   edx
  414cb2:	mov    edi,ebx
  414cb4:	call   0x414e30
  414cb9:	mov    ecx,DWORD PTR [eax]
  414cbb:	mov    edx,DWORD PTR [eax+0x4]
  414cbe:	mov    DWORD PTR [ebp+0x0],ecx
  414cc1:	mov    DWORD PTR [ebp+0x4],edx
  414cc4:	mov    BYTE PTR [ebp+0x8],0x1
  414cc8:	mov    eax,ebp
  414cca:	pop    edi
  414ccb:	pop    esi
  414ccc:	pop    ebp
  414ccd:	add    esp,0x18
  414cd0:	ret    0x8
  414cd3:	lea    esi,[esp+0x10]
  414cd7:	call   0x416780
  414cdc:	mov    esi,DWORD PTR [esp+0x10]
  414ce0:	mov    eax,DWORD PTR [esp+0x2c]
  414ce4:	mov    ecx,DWORD PTR [esp+0x14]
  414ce8:	push   eax
  414ce9:	add    ecx,0xc
  414cec:	push   ecx
  414ced:	call   DWORD PTR ds:0x4301e8
  414cf3:	add    esp,0x8
  414cf6:	test   al,al
  414cf8:	je     0x414d2c
  414cfa:	mov    edx,DWORD PTR [esp+0x2c]
  414cfe:	mov    eax,DWORD PTR [esp+0x28]
  414d02:	push   edx
  414d03:	push   eax
  414d04:	lea    ecx,[esp+0x20]
  414d08:	push   ecx
  414d09:	mov    ecx,edi
  414d0b:	mov    edi,ebx
  414d0d:	call   0x414e30
  414d12:	mov    edx,DWORD PTR [eax]
  414d14:	mov    eax,DWORD PTR [eax+0x4]
  414d17:	mov    DWORD PTR [ebp+0x4],eax
  414d1a:	mov    DWORD PTR [ebp+0x0],edx
  414d1d:	mov    BYTE PTR [ebp+0x8],0x1
  414d21:	mov    eax,ebp
  414d23:	pop    edi
  414d24:	pop    esi
  414d25:	pop    ebp
  414d26:	add    esp,0x18
  414d29:	ret    0x8
  414d2c:	mov    ecx,DWORD PTR [esp+0x14]
  414d30:	pop    edi
  414d31:	mov    DWORD PTR [ebp+0x0],esi
  414d34:	pop    esi
  414d35:	mov    DWORD PTR [ebp+0x4],ecx
  414d38:	mov    BYTE PTR [ebp+0x8],0x0
  414d3c:	mov    eax,ebp
  414d3e:	pop    ebp
  414d3f:	add    esp,0x18
  414d42:	ret    0x8
  414d45:	int3   
  414d46:	int3   
  414d47:	int3   
  414d48:	int3   
  414d49:	int3   
  414d4a:	int3   
  414d4b:	int3   
  414d4c:	int3   
  414d4d:	int3   
  414d4e:	int3   
  414d4f:	int3   
  414d50:	sub    esp,0x8
  414d53:	push   ebx
  414d54:	mov    ebx,DWORD PTR [esp+0x14]
  414d58:	push   ebp
  414d59:	push   esi
  414d5a:	push   edi
  414d5b:	mov    edi,eax
  414d5d:	mov    eax,DWORD PTR [edi+0x18]
  414d60:	mov    esi,DWORD PTR [eax]
  414d62:	mov    eax,DWORD PTR [edi]
  414d64:	test   ebx,ebx
  414d66:	je     0x414d6c
  414d68:	cmp    ebx,eax
  414d6a:	je     0x414d76
  414d6c:	call   DWORD PTR ds:0x430390
  414d72:	mov    ebx,DWORD PTR [esp+0x20]
  414d76:	cmp    DWORD PTR [esp+0x24],esi
  414d7a:	jne    0x414de0
  414d7c:	mov    ecx,DWORD PTR [esp+0x28]
  414d80:	mov    esi,DWORD PTR [edi+0x18]
  414d83:	mov    eax,DWORD PTR [edi]
  414d85:	test   ecx,ecx
  414d87:	je     0x414d8d
  414d89:	cmp    ecx,eax
  414d8b:	je     0x414d97
  414d8d:	call   DWORD PTR ds:0x430390
  414d93:	mov    ebx,DWORD PTR [esp+0x20]
  414d97:	cmp    DWORD PTR [esp+0x2c],esi
  414d9b:	jne    0x414de0
  414d9d:	mov    ecx,DWORD PTR [edi+0x18]
  414da0:	mov    edx,DWORD PTR [ecx+0x4]
  414da3:	push   edx
  414da4:	mov    ecx,edi
  414da6:	call   0x413b30
  414dab:	mov    eax,DWORD PTR [edi+0x18]
  414dae:	mov    DWORD PTR [eax+0x4],eax
  414db1:	mov    eax,DWORD PTR [edi+0x18]
  414db4:	mov    DWORD PTR [edi+0x1c],0x0
  414dbb:	mov    DWORD PTR [eax],eax
  414dbd:	mov    eax,DWORD PTR [edi+0x18]
  414dc0:	mov    DWORD PTR [eax+0x8],eax
  414dc3:	mov    eax,DWORD PTR [edi+0x18]
  414dc6:	mov    ecx,DWORD PTR [eax]
  414dc8:	mov    eax,DWORD PTR [esp+0x1c]
  414dcc:	mov    edx,DWORD PTR [edi]
  414dce:	mov    DWORD PTR [eax+0x4],ecx
  414dd1:	mov    DWORD PTR [eax],edx
  414dd3:	pop    edi
  414dd4:	pop    esi
  414dd5:	pop    ebp
  414dd6:	pop    ebx
  414dd7:	add    esp,0x8
  414dda:	ret    0x14
  414ddd:	lea    ecx,[ecx+0x0]
  414de0:	test   ebx,ebx
  414de2:	je     0x414dea
  414de4:	cmp    ebx,DWORD PTR [esp+0x28]
  414de8:	je     0x414df4
  414dea:	call   DWORD PTR ds:0x430390
  414df0:	mov    ebx,DWORD PTR [esp+0x20]
  414df4:	mov    ebp,DWORD PTR [esp+0x24]
  414df8:	cmp    ebp,DWORD PTR [esp+0x2c]
  414dfc:	je     0x414e1a
  414dfe:	lea    esi,[esp+0x20]
  414e02:	call   0x416810
  414e07:	push   ebp
  414e08:	push   ebx
  414e09:	lea    eax,[esp+0x18]
  414e0d:	push   eax
  414e0e:	push   edi
  414e0f:	call   0x415ba0
  414e14:	mov    ebx,DWORD PTR [esp+0x20]
  414e18:	jmp    0x414de0
  414e1a:	mov    edi,DWORD PTR [edi]
  414e1c:	mov    eax,DWORD PTR [esp+0x1c]
  414e20:	mov    DWORD PTR [eax],edi
  414e22:	pop    edi
  414e23:	pop    esi
  414e24:	mov    DWORD PTR [eax+0x4],ebp
  414e27:	pop    ebp
  414e28:	pop    ebx
  414e29:	add    esp,0x8
  414e2c:	ret    0x14
  414e2f:	int3   
  414e30:	push   0xffffffff
  414e32:	push   0x42cd29
  414e37:	mov    eax,fs:0x0
  414e3d:	push   eax
  414e3e:	sub    esp,0x4c
  414e41:	push   ebx
  414e42:	push   ebp
  414e43:	push   esi
  414e44:	mov    eax,ds:0x43e020
  414e49:	xor    eax,esp
  414e4b:	push   eax
  414e4c:	lea    eax,[esp+0x5c]
  414e50:	mov    fs:0x0,eax
  414e56:	mov    esi,ecx
  414e58:	cmp    DWORD PTR [edi+0x1c],0x7fffffe
  414e5f:	jb     0x414e9d
  414e61:	push   0x431e30
  414e66:	lea    ecx,[esp+0x18]
  414e6a:	call   DWORD PTR ds:0x43011c
  414e70:	lea    eax,[esp+0x14]
  414e74:	push   eax
  414e75:	lea    ecx,[esp+0x34]
  414e79:	mov    DWORD PTR [esp+0x68],0x0
  414e81:	call   0x402940
  414e86:	push   0x435684
  414e8b:	lea    ecx,[esp+0x34]
  414e8f:	push   ecx
  414e90:	mov    DWORD PTR [esp+0x38],0x430604
  414e98:	call   0x429e76
  414e9d:	mov    eax,DWORD PTR [edi+0x18]
  414ea0:	mov    ecx,DWORD PTR [esp+0x74]
  414ea4:	push   eax
  414ea5:	push   esi
  414ea6:	push   eax
  414ea7:	call   0x415f70
  414eac:	inc    DWORD PTR [edi+0x1c]
  414eaf:	mov    ebp,eax
  414eb1:	mov    eax,DWORD PTR [edi+0x18]
  414eb4:	xor    bl,bl
  414eb6:	cmp    esi,eax
  414eb8:	jne    0x414ec7
  414eba:	mov    DWORD PTR [eax+0x4],ebp
  414ebd:	mov    edx,DWORD PTR [edi+0x18]
  414ec0:	mov    DWORD PTR [edx],ebp
  414ec2:	mov    eax,DWORD PTR [edi+0x18]
  414ec5:	jmp    0x414ee5
  414ec7:	cmp    BYTE PTR [esp+0x70],bl
  414ecb:	je     0x414eda
  414ecd:	mov    DWORD PTR [esi],ebp
  414ecf:	mov    eax,DWORD PTR [edi+0x18]
  414ed2:	cmp    esi,DWORD PTR [eax]
  414ed4:	jne    0x414ee8
  414ed6:	mov    DWORD PTR [eax],ebp
  414ed8:	jmp    0x414ee8
  414eda:	mov    DWORD PTR [esi+0x8],ebp
  414edd:	mov    eax,DWORD PTR [edi+0x18]
  414ee0:	cmp    esi,DWORD PTR [eax+0x8]
  414ee3:	jne    0x414ee8
  414ee5:	mov    DWORD PTR [eax+0x8],ebp
  414ee8:	mov    ecx,DWORD PTR [ebp+0x4]
  414eeb:	lea    eax,[ebp+0x4]
  414eee:	mov    esi,ebp
  414ef0:	cmp    BYTE PTR [ecx+0x2c],bl
  414ef3:	jne    0x415035
  414ef9:	lea    esp,[esp+0x0]
  414f00:	mov    ecx,DWORD PTR [eax]
  414f02:	mov    edx,DWORD PTR [ecx+0x4]
  414f05:	cmp    ecx,DWORD PTR [edx]
  414f07:	jne    0x414fae
  414f0d:	mov    edx,DWORD PTR [edx+0x8]
  414f10:	cmp    BYTE PTR [edx+0x2c],bl
  414f13:	je     0x414fb5
  414f19:	cmp    esi,DWORD PTR [ecx+0x8]
  414f1c:	jne    0x414f59
  414f1e:	mov    esi,ecx
  414f20:	mov    ecx,DWORD PTR [esi+0x8]
  414f23:	mov    eax,DWORD PTR [ecx]
  414f25:	mov    DWORD PTR [esi+0x8],eax
  414f28:	mov    eax,DWORD PTR [ecx]
  414f2a:	cmp    BYTE PTR [eax+0x2d],bl
  414f2d:	jne    0x414f32
  414f2f:	mov    DWORD PTR [eax+0x4],esi
  414f32:	mov    edx,DWORD PTR [esi+0x4]
  414f35:	lea    eax,[esi+0x4]
  414f38:	mov    DWORD PTR [ecx+0x4],edx
  414f3b:	mov    edx,DWORD PTR [edi+0x18]
  414f3e:	cmp    esi,DWORD PTR [edx+0x4]
  414f41:	jne    0x414f48
  414f43:	mov    DWORD PTR [edx+0x4],ecx
  414f46:	jmp    0x414f55
  414f48:	mov    edx,DWORD PTR [eax]
  414f4a:	cmp    esi,DWORD PTR [edx]
  414f4c:	jne    0x414f52
  414f4e:	mov    DWORD PTR [edx],ecx
  414f50:	jmp    0x414f55
  414f52:	mov    DWORD PTR [edx+0x8],ecx
  414f55:	mov    DWORD PTR [ecx],esi
  414f57:	mov    DWORD PTR [eax],ecx
  414f59:	mov    ecx,DWORD PTR [eax]
  414f5b:	mov    BYTE PTR [ecx+0x2c],0x1
  414f5f:	mov    edx,DWORD PTR [eax]
  414f61:	mov    ecx,DWORD PTR [edx+0x4]
  414f64:	mov    BYTE PTR [ecx+0x2c],bl
  414f67:	mov    edx,DWORD PTR [eax]
  414f69:	mov    eax,DWORD PTR [edx+0x4]
  414f6c:	mov    ecx,DWORD PTR [eax]
  414f6e:	mov    edx,DWORD PTR [ecx+0x8]
  414f71:	mov    DWORD PTR [eax],edx
  414f73:	mov    edx,DWORD PTR [ecx+0x8]
  414f76:	cmp    BYTE PTR [edx+0x2d],bl
  414f79:	jne    0x414f7e
  414f7b:	mov    DWORD PTR [edx+0x4],eax
  414f7e:	mov    edx,DWORD PTR [eax+0x4]
  414f81:	mov    DWORD PTR [ecx+0x4],edx
  414f84:	mov    edx,DWORD PTR [edi+0x18]
  414f87:	cmp    eax,DWORD PTR [edx+0x4]
  414f8a:	jne    0x414f97
  414f8c:	mov    DWORD PTR [edx+0x4],ecx
  414f8f:	mov    DWORD PTR [ecx+0x8],eax
  414f92:	jmp    0x415023
  414f97:	mov    edx,DWORD PTR [eax+0x4]
  414f9a:	cmp    eax,DWORD PTR [edx+0x8]
  414f9d:	jne    0x414fa7
  414f9f:	mov    DWORD PTR [edx+0x8],ecx
  414fa2:	mov    DWORD PTR [ecx+0x8],eax
  414fa5:	jmp    0x415023
  414fa7:	mov    DWORD PTR [edx],ecx
  414fa9:	mov    DWORD PTR [ecx+0x8],eax
  414fac:	jmp    0x415023
  414fae:	mov    edx,DWORD PTR [edx]
  414fb0:	cmp    BYTE PTR [edx+0x2c],bl
  414fb3:	jne    0x414fcc
  414fb5:	mov    BYTE PTR [ecx+0x2c],0x1
  414fb9:	mov    BYTE PTR [edx+0x2c],0x1
  414fbd:	mov    edx,DWORD PTR [eax]
  414fbf:	mov    ecx,DWORD PTR [edx+0x4]
  414fc2:	mov    BYTE PTR [ecx+0x2c],bl
  414fc5:	mov    edx,DWORD PTR [eax]
  414fc7:	mov    esi,DWORD PTR [edx+0x4]
  414fca:	jmp    0x415026
  414fcc:	cmp    esi,DWORD PTR [ecx]
  414fce:	jne    0x414fd8
  414fd0:	push   edi
  414fd1:	mov    esi,ecx
  414fd3:	call   0x415ee0
  414fd8:	mov    eax,DWORD PTR [esi+0x4]
  414fdb:	mov    BYTE PTR [eax+0x2c],0x1
  414fdf:	mov    ecx,DWORD PTR [esi+0x4]
  414fe2:	mov    edx,DWORD PTR [ecx+0x4]
  414fe5:	mov    BYTE PTR [edx+0x2c],bl
  414fe8:	mov    eax,DWORD PTR [esi+0x4]
  414feb:	mov    eax,DWORD PTR [eax+0x4]
  414fee:	mov    ecx,DWORD PTR [eax+0x8]
  414ff1:	mov    edx,DWORD PTR [ecx]
  414ff3:	mov    DWORD PTR [eax+0x8],edx
  414ff6:	mov    edx,DWORD PTR [ecx]
  414ff8:	cmp    BYTE PTR [edx+0x2d],bl
  414ffb:	jne    0x415000
  414ffd:	mov    DWORD PTR [edx+0x4],eax
  415000:	mov    edx,DWORD PTR [eax+0x4]
  415003:	mov    DWORD PTR [ecx+0x4],edx
  415006:	mov    edx,DWORD PTR [edi+0x18]
  415009:	cmp    eax,DWORD PTR [edx+0x4]
  41500c:	jne    0x415013
  41500e:	mov    DWORD PTR [edx+0x4],ecx
  415011:	jmp    0x415021
  415013:	mov    edx,DWORD PTR [eax+0x4]
  415016:	cmp    eax,DWORD PTR [edx]
  415018:	jne    0x41501e
  41501a:	mov    DWORD PTR [edx],ecx
  41501c:	jmp    0x415021
  41501e:	mov    DWORD PTR [edx+0x8],ecx
  415021:	mov    DWORD PTR [ecx],eax
  415023:	mov    DWORD PTR [eax+0x4],ecx
  415026:	mov    ecx,DWORD PTR [esi+0x4]
  415029:	lea    eax,[esi+0x4]
  41502c:	cmp    BYTE PTR [ecx+0x2c],bl
  41502f:	je     0x414f00
  415035:	mov    edx,DWORD PTR [edi+0x18]
  415038:	mov    eax,DWORD PTR [edx+0x4]
  41503b:	mov    BYTE PTR [eax+0x2c],0x1
  41503f:	mov    eax,DWORD PTR [esp+0x6c]
  415043:	mov    ecx,DWORD PTR [edi]
  415045:	mov    DWORD PTR [eax+0x4],ebp
  415048:	mov    DWORD PTR [eax],ecx
  41504a:	mov    ecx,DWORD PTR [esp+0x5c]
  41504e:	mov    DWORD PTR fs:0x0,ecx
  415055:	pop    ecx
  415056:	pop    esi
  415057:	pop    ebp
  415058:	pop    ebx
  415059:	add    esp,0x58
  41505c:	ret    0xc
  41505f:	int3   
  415060:	mov    eax,DWORD PTR [eax+0x18]
  415063:	push   ebp
  415064:	mov    ebp,DWORD PTR [esp+0x8]
  415068:	push   esi
  415069:	mov    esi,DWORD PTR [eax+0x4]
  41506c:	cmp    BYTE PTR [esi+0x2d],0x0
  415070:	push   edi
  415071:	mov    edi,eax
  415073:	jne    0x4150a0
  415075:	push   ebx
  415076:	mov    ebx,DWORD PTR ds:0x4301e8
  41507c:	lea    esp,[esp+0x0]
  415080:	lea    ecx,[esi+0xc]
  415083:	push   ebp
  415084:	push   ecx
  415085:	call   ebx
  415087:	add    esp,0x8
  41508a:	test   al,al
  41508c:	je     0x415093
  41508e:	mov    esi,DWORD PTR [esi+0x8]
  415091:	jmp    0x415097
  415093:	mov    edi,esi
  415095:	mov    esi,DWORD PTR [esi]
  415097:	cmp    BYTE PTR [esi+0x2d],0x0
  41509b:	je     0x415080
  41509d:	mov    eax,edi
  41509f:	pop    ebx
  4150a0:	pop    edi
  4150a1:	pop    esi
  4150a2:	pop    ebp
  4150a3:	ret    0x4
  4150a6:	int3   
  4150a7:	int3   
  4150a8:	int3   
  4150a9:	int3   
  4150aa:	int3   
  4150ab:	int3   
  4150ac:	int3   
  4150ad:	int3   
  4150ae:	int3   
  4150af:	int3   
  4150b0:	sub    esp,0xc
  4150b3:	push   ebx
  4150b4:	push   ebp
  4150b5:	push   esi
  4150b6:	mov    esi,eax
  4150b8:	mov    eax,DWORD PTR [esi+0x10]
  4150bb:	push   edi
  4150bc:	mov    edi,DWORD PTR [esi+0xc]
  4150bf:	mov    ecx,eax
  4150c1:	sub    ecx,edi
  4150c3:	test   ecx,0xfffffff8
  4150c9:	jne    0x4150cf
  4150cb:	xor    ebx,ebx
  4150cd:	jmp    0x4150f6
  4150cf:	cmp    edi,eax
  4150d1:	jbe    0x4150d9
  4150d3:	call   DWORD PTR ds:0x430390
  4150d9:	mov    ecx,DWORD PTR [esp+0x28]
  4150dd:	mov    eax,DWORD PTR [esi]
  4150df:	test   ecx,ecx
  4150e1:	je     0x4150e7
  4150e3:	cmp    ecx,eax
  4150e5:	je     0x4150ed
  4150e7:	call   DWORD PTR ds:0x430390
  4150ed:	mov    ebx,DWORD PTR [esp+0x2c]
  4150f1:	sub    ebx,edi
  4150f3:	sar    ebx,0x3
  4150f6:	mov    edx,DWORD PTR [esp+0x2c]
  4150fa:	mov    eax,DWORD PTR [esp+0x28]
  4150fe:	mov    ecx,DWORD PTR [esp+0x24]
  415102:	push   edx
  415103:	push   eax
  415104:	push   esi
  415105:	call   0x416020
  41510a:	mov    edi,DWORD PTR [esi+0xc]
  41510d:	cmp    edi,DWORD PTR [esi+0x10]
  415110:	jbe    0x415118
  415112:	call   DWORD PTR ds:0x430390
  415118:	mov    esi,DWORD PTR [esi]
  41511a:	mov    ebp,esi
  41511c:	mov    DWORD PTR [esp+0x18],edi
  415120:	test   esi,esi
  415122:	jne    0x41513c
  415124:	call   DWORD PTR ds:0x430390
  41512a:	xor    eax,eax
  41512c:	lea    edi,[edi+ebx*8]
  41512f:	cmp    edi,DWORD PTR [eax+0x10]
  415132:	ja     0x415147
  415134:	test   esi,esi
  415136:	je     0x415140
  415138:	mov    esi,DWORD PTR [esi]
  41513a:	jmp    0x415142
  41513c:	mov    eax,DWORD PTR [esi]
  41513e:	jmp    0x41512c
  415140:	xor    esi,esi
  415142:	cmp    edi,DWORD PTR [esi+0xc]
  415145:	jae    0x41514d
  415147:	call   DWORD PTR ds:0x430390
  41514d:	mov    eax,DWORD PTR [esp+0x20]
  415151:	mov    DWORD PTR [eax+0x4],edi
  415154:	pop    edi
  415155:	pop    esi
  415156:	mov    DWORD PTR [eax],ebp
  415158:	pop    ebp
  415159:	pop    ebx
  41515a:	add    esp,0xc
  41515d:	ret    0x10
  415160:	push   ebp
  415161:	mov    ebp,esp
  415163:	push   0xffffffff
  415165:	push   0x42d0e0
  41516a:	mov    eax,fs:0x0
  415170:	push   eax
  415171:	sub    esp,0x20
  415174:	push   ebx
  415175:	push   esi
  415176:	push   edi
  415177:	mov    eax,ds:0x43e020
  41517c:	xor    eax,ebp
  41517e:	push   eax
  41517f:	lea    eax,[ebp-0xc]
  415182:	mov    fs:0x0,eax
  415188:	mov    DWORD PTR [ebp-0x10],esp
  41518b:	mov    esi,ecx
  41518d:	mov    edi,DWORD PTR [ebp+0x8]
  415190:	mov    ebx,DWORD PTR [edi+0xc]
  415193:	test   ebx,ebx
  415195:	jne    0x41519b
  415197:	xor    ecx,ecx
  415199:	jmp    0x4151a5
  41519b:	mov    eax,DWORD PTR [edi+0x14]
  41519e:	sub    eax,ebx
  4151a0:	sar    eax,0x3
  4151a3:	mov    ecx,eax
  4151a5:	mov    edx,DWORD PTR [edi+0x10]
  4151a8:	mov    eax,edx
  4151aa:	sub    eax,ebx
  4151ac:	sar    eax,0x3
  4151af:	mov    ebx,0x1fffffff
  4151b4:	sub    ebx,eax
  4151b6:	cmp    ebx,0x1
  4151b9:	jae    0x4151c0
  4151bb:	call   0x414b60
  4151c0:	lea    ebx,[eax+0x1]
  4151c3:	cmp    ecx,ebx
  4151c5:	jae    0x41531a
  4151cb:	mov    eax,ecx
  4151cd:	shr    eax,1
  4151cf:	mov    edx,0x1fffffff
  4151d4:	sub    edx,eax
  4151d6:	cmp    edx,ecx
  4151d8:	jae    0x4151e6
  4151da:	mov    DWORD PTR [ebp-0x18],0x0
  4151e1:	mov    ecx,DWORD PTR [ebp-0x18]
  4151e4:	jmp    0x4151eb
  4151e6:	add    ecx,eax
  4151e8:	mov    DWORD PTR [ebp-0x18],ecx
  4151eb:	cmp    ecx,ebx
  4151ed:	jae    0x4151f4
  4151ef:	mov    DWORD PTR [ebp-0x18],ebx
  4151f2:	mov    ecx,ebx
  4151f4:	call   0x416360
  4151f9:	mov    ebx,DWORD PTR [ebp+0x10]
  4151fc:	sub    ebx,DWORD PTR [edi+0xc]
  4151ff:	xor    ecx,ecx
  415201:	mov    DWORD PTR [ebp-0x4],ecx
  415204:	sar    ebx,0x3
  415207:	mov    DWORD PTR [ebp+0x8],eax
  41520a:	mov    edx,DWORD PTR [ebp+0x8]
  41520d:	mov    DWORD PTR [ebp-0x1c],ecx
  415210:	lea    ecx,[eax+ebx*8]
  415213:	mov    BYTE PTR [ebp-0x28],0x0
  415217:	mov    eax,DWORD PTR [ebp-0x28]
  41521a:	push   eax
  41521b:	push   edx
  41521c:	mov    edx,0x1
  415221:	mov    DWORD PTR [ebp-0x20],ebx
  415224:	call   0x4196c0
  415229:	mov    edx,DWORD PTR [ebp+0x8]
  41522c:	mov    ecx,DWORD PTR [edi+0xc]
  41522f:	mov    esi,DWORD PTR [ebp+0x10]
  415232:	add    esp,0x8
  415235:	mov    BYTE PTR [ebp-0x28],0x0
  415239:	mov    eax,DWORD PTR [ebp-0x28]
  41523c:	push   eax
  41523d:	mov    eax,DWORD PTR [ebp+0x8]
  415240:	push   edx
  415241:	mov    DWORD PTR [ebp-0x1c],0x1
  415248:	call   0x41da50
  41524d:	mov    edx,DWORD PTR [ebp+0x8]
  415250:	mov    eax,DWORD PTR [ebp+0x8]
  415253:	mov    esi,DWORD PTR [edi+0x10]
  415256:	add    esp,0x8
  415259:	mov    BYTE PTR [ebp-0x28],0x0
  41525d:	mov    ecx,DWORD PTR [ebp-0x28]
  415260:	push   ecx
  415261:	mov    ecx,DWORD PTR [ebp+0x10]
  415264:	lea    eax,[eax+ebx*8+0x8]
  415268:	push   edx
  415269:	mov    DWORD PTR [ebp-0x1c],0x2
  415270:	call   0x41da50
  415275:	mov    DWORD PTR [ebp-0x4],0xffffffff
  41527c:	mov    ebx,DWORD PTR [edi+0x10]
  41527f:	mov    eax,DWORD PTR [edi+0xc]
  415282:	mov    esi,ebx
  415284:	sub    esi,eax
  415286:	sar    esi,0x3
  415289:	add    esp,0x8
  41528c:	inc    esi
  41528d:	test   eax,eax
  41528f:	je     0x4152a9
  415291:	mov    ecx,DWORD PTR [ebp+0x8]
  415294:	push   ecx
  415295:	call   0x419670
  41529a:	mov    edx,DWORD PTR [edi+0xc]
  41529d:	add    esp,0x4
  4152a0:	push   edx
  4152a1:	call   0x42504a
  4152a6:	add    esp,0x4
  4152a9:	mov    eax,DWORD PTR [ebp+0x8]
  4152ac:	mov    ecx,DWORD PTR [ebp-0x18]
  4152af:	lea    edx,[eax+ecx*8]
  4152b2:	lea    ecx,[eax+esi*8]
  4152b5:	mov    DWORD PTR [edi+0x14],edx
  4152b8:	mov    DWORD PTR [edi+0x10],ecx
  4152bb:	mov    DWORD PTR [edi+0xc],eax
  4152be:	mov    ecx,DWORD PTR [ebp-0xc]
  4152c1:	mov    DWORD PTR fs:0x0,ecx
  4152c8:	pop    ecx
  4152c9:	pop    edi
  4152ca:	pop    esi
  4152cb:	pop    ebx
  4152cc:	mov    esp,ebp
  4152ce:	pop    ebp
  4152cf:	ret    0xc
  4152d2:	cmp    DWORD PTR [ebp-0x1c],0x1
  4152d6:	mov    esi,DWORD PTR [ebp+0x8]
  4152d9:	mov    edi,DWORD PTR [ebp-0x20]
  4152dc:	jle    0x4152ef
  4152de:	mov    edx,DWORD PTR [ebp+0x8]
  4152e1:	push   edx
  4152e2:	lea    ebx,[esi+edi*8]
  4152e5:	mov    eax,esi
  4152e7:	call   0x419670
  4152ec:	add    esp,0x4
  4152ef:	cmp    DWORD PTR [ebp-0x1c],0x0
  4152f3:	jle    0x415308
  4152f5:	mov    eax,DWORD PTR [ebp+0x8]
  4152f8:	push   eax
  4152f9:	lea    ebx,[esi+edi*8+0x8]
  4152fd:	lea    eax,[esi+edi*8]
  415300:	call   0x419670
  415305:	add    esp,0x4
  415308:	push   esi
  415309:	call   0x42504a
  41530e:	add    esp,0x4
  415311:	push   0x0
  415313:	push   0x0
  415315:	call   0x429e76
  41531a:	mov    ecx,DWORD PTR [ebp+0x10]
  41531d:	sub    edx,ecx
  41531f:	sar    edx,0x3
  415322:	cmp    edx,0x1
  415325:	jae    0x4153cb
  41532b:	mov    eax,DWORD PTR [esi+0x4]
  41532e:	mov    edx,DWORD PTR [esi]
  415330:	mov    DWORD PTR [ebp-0x24],edx
  415333:	mov    DWORD PTR [ebp-0x20],eax
  415336:	test   eax,eax
  415338:	je     0x415349
  41533a:	add    eax,0x4
  41533d:	mov    ecx,0x1
  415342:	lock xadd DWORD PTR [eax],ecx
  415346:	mov    ecx,DWORD PTR [ebp+0x10]
  415349:	lea    edx,[ecx+0x8]
  41534c:	mov    ebx,0x2
  415351:	push   edx
  415352:	mov    DWORD PTR [ebp-0x4],ebx
  415355:	mov    esi,DWORD PTR [edi+0x10]
  415358:	push   ecx
  415359:	call   0x417cc0
  41535e:	mov    BYTE PTR [ebp-0x4],0x3
  415362:	mov    ecx,DWORD PTR [edi+0x10]
  415365:	mov    eax,ecx
  415367:	sub    eax,DWORD PTR [ebp+0x10]
  41536a:	mov    edx,0x1
  41536f:	sar    eax,0x3
  415372:	sub    edx,eax
  415374:	mov    BYTE PTR [ebp-0x28],0x0
  415378:	mov    eax,DWORD PTR [ebp-0x28]
  41537b:	push   eax
  41537c:	mov    eax,DWORD PTR [ebp+0x8]
  41537f:	push   eax
  415380:	lea    esi,[ebp-0x24]
  415383:	call   0x4196c0
  415388:	mov    DWORD PTR [ebp-0x4],ebx
  41538b:	add    DWORD PTR [edi+0x10],0x8
  41538f:	mov    edi,DWORD PTR [edi+0x10]
  415392:	add    esp,0x8
  415395:	lea    eax,[edi-0x8]
  415398:	push   eax
  415399:	mov    eax,DWORD PTR [ebp+0x10]
  41539c:	mov    ebx,esi
  41539e:	call   0x419880
  4153a3:	mov    eax,esi
  4153a5:	jmp    0x41541a
  4153a7:	mov    edx,DWORD PTR [ebp+0x8]
  4153aa:	mov    ecx,DWORD PTR [ebp+0x8]
  4153ad:	mov    ebx,DWORD PTR [edx+0x10]
  4153b0:	mov    eax,DWORD PTR [ebp+0x10]
  4153b3:	push   ecx
  4153b4:	add    ebx,0x8
  4153b7:	add    eax,0x8
  4153ba:	call   0x419670
  4153bf:	add    esp,0x4
  4153c2:	push   0x0
  4153c4:	push   0x0
  4153c6:	call   0x429e76
  4153cb:	mov    eax,DWORD PTR [esi]
  4153cd:	mov    DWORD PTR [ebp-0x2c],eax
  4153d0:	mov    eax,DWORD PTR [esi+0x4]
  4153d3:	mov    DWORD PTR [ebp-0x28],eax
  4153d6:	test   eax,eax
  4153d8:	je     0x4153e6
  4153da:	add    eax,0x4
  4153dd:	mov    ecx,0x1
  4153e2:	lock xadd DWORD PTR [eax],ecx
  4153e6:	mov    DWORD PTR [ebp-0x4],0x5
  4153ed:	mov    esi,DWORD PTR [edi+0x10]
  4153f0:	push   esi
  4153f1:	lea    ebx,[esi-0x8]
  4153f4:	push   ebx
  4153f5:	call   0x417cc0
  4153fa:	mov    DWORD PTR [edi+0x10],eax
  4153fd:	mov    eax,ebx
  4153ff:	mov    ebx,DWORD PTR [ebp+0x10]
  415402:	mov    edi,esi
  415404:	call   0x417cf0
  415409:	mov    eax,DWORD PTR [ebp+0x10]
  41540c:	lea    ecx,[eax+0x8]
  41540f:	push   ecx
  415410:	lea    ebx,[ebp-0x2c]
  415413:	call   0x419880
  415418:	mov    eax,ebx
  41541a:	add    esp,0x4
  41541d:	mov    DWORD PTR [ebp-0x4],0xffffffff
  415424:	call   0x411e30
  415429:	mov    ecx,DWORD PTR [ebp-0xc]
  41542c:	mov    DWORD PTR fs:0x0,ecx
  415433:	pop    ecx
  415434:	pop    edi
  415435:	pop    esi
  415436:	pop    ebx
  415437:	mov    esp,ebp
  415439:	pop    ebp
  41543a:	ret    0xc
  41543d:	int3   
  41543e:	int3   
  41543f:	int3   
  415440:	sub    esp,0x8
  415443:	push   ebx
  415444:	mov    ebx,DWORD PTR [esp+0x14]
  415448:	push   ebp
  415449:	push   esi
  41544a:	push   edi
  41544b:	mov    edi,eax
  41544d:	mov    eax,DWORD PTR [edi+0x18]
  415450:	mov    esi,DWORD PTR [eax]
  415452:	mov    eax,DWORD PTR [edi]
  415454:	test   ebx,ebx
  415456:	je     0x41545c
  415458:	cmp    ebx,eax
  41545a:	je     0x415466
  41545c:	call   DWORD PTR ds:0x430390
  415462:	mov    ebx,DWORD PTR [esp+0x20]
  415466:	cmp    DWORD PTR [esp+0x24],esi
  41546a:	jne    0x4154d0
  41546c:	mov    ecx,DWORD PTR [esp+0x28]
  415470:	mov    esi,DWORD PTR [edi+0x18]
  415473:	mov    eax,DWORD PTR [edi]
  415475:	test   ecx,ecx
  415477:	je     0x41547d
  415479:	cmp    ecx,eax
  41547b:	je     0x415487
  41547d:	call   DWORD PTR ds:0x430390
  415483:	mov    ebx,DWORD PTR [esp+0x20]
  415487:	cmp    DWORD PTR [esp+0x2c],esi
  41548b:	jne    0x4154d0
  41548d:	mov    ecx,DWORD PTR [edi+0x18]
  415490:	mov    edx,DWORD PTR [ecx+0x4]
  415493:	push   edx
  415494:	mov    ecx,edi
  415496:	call   0x413e30
  41549b:	mov    eax,DWORD PTR [edi+0x18]
  41549e:	mov    DWORD PTR [eax+0x4],eax
  4154a1:	mov    eax,DWORD PTR [edi+0x18]
  4154a4:	mov    DWORD PTR [edi+0x1c],0x0
  4154ab:	mov    DWORD PTR [eax],eax
  4154ad:	mov    eax,DWORD PTR [edi+0x18]
  4154b0:	mov    DWORD PTR [eax+0x8],eax
  4154b3:	mov    eax,DWORD PTR [edi+0x18]
  4154b6:	mov    ecx,DWORD PTR [eax]
  4154b8:	mov    eax,DWORD PTR [esp+0x1c]
  4154bc:	mov    edx,DWORD PTR [edi]
  4154be:	mov    DWORD PTR [eax+0x4],ecx
  4154c1:	mov    DWORD PTR [eax],edx
  4154c3:	pop    edi
  4154c4:	pop    esi
  4154c5:	pop    ebp
  4154c6:	pop    ebx
  4154c7:	add    esp,0x8
  4154ca:	ret    0x14
  4154cd:	lea    ecx,[ecx+0x0]
  4154d0:	test   ebx,ebx
  4154d2:	je     0x4154da
  4154d4:	cmp    ebx,DWORD PTR [esp+0x28]
  4154d8:	je     0x4154e4
  4154da:	call   DWORD PTR ds:0x430390
  4154e0:	mov    ebx,DWORD PTR [esp+0x20]
  4154e4:	mov    ebp,DWORD PTR [esp+0x24]
  4154e8:	cmp    ebp,DWORD PTR [esp+0x2c]
  4154ec:	je     0x41550a
  4154ee:	lea    esi,[esp+0x20]
  4154f2:	call   0x415a40
  4154f7:	push   ebp
  4154f8:	push   ebx
  4154f9:	lea    eax,[esp+0x18]
  4154fd:	push   eax
  4154fe:	push   edi
  4154ff:	call   0x4163c0
  415504:	mov    ebx,DWORD PTR [esp+0x20]
  415508:	jmp    0x4154d0
  41550a:	mov    edi,DWORD PTR [edi]
  41550c:	mov    eax,DWORD PTR [esp+0x1c]
  415510:	mov    DWORD PTR [eax],edi
  415512:	pop    edi
  415513:	pop    esi
  415514:	mov    DWORD PTR [eax+0x4],ebp
  415517:	pop    ebp
  415518:	pop    ebx
  415519:	add    esp,0x8
  41551c:	ret    0x14
  41551f:	int3   
  415520:	mov    eax,DWORD PTR [eax+0x18]
  415523:	push   ebp
  415524:	mov    ebp,DWORD PTR [esp+0x8]
  415528:	push   esi
  415529:	mov    esi,DWORD PTR [eax+0x4]
  41552c:	cmp    BYTE PTR [esi+0x29],0x0
  415530:	push   edi
  415531:	mov    edi,eax
  415533:	jne    0x415560
  415535:	push   ebx
  415536:	mov    ebx,DWORD PTR ds:0x4301e8
  41553c:	lea    esp,[esp+0x0]
  415540:	lea    ecx,[esi+0xc]
  415543:	push   ebp
  415544:	push   ecx
  415545:	call   ebx
  415547:	add    esp,0x8
  41554a:	test   al,al
  41554c:	je     0x415553
  41554e:	mov    esi,DWORD PTR [esi+0x8]
  415551:	jmp    0x415557
  415553:	mov    edi,esi
  415555:	mov    esi,DWORD PTR [esi]
  415557:	cmp    BYTE PTR [esi+0x29],0x0
  41555b:	je     0x415540
  41555d:	mov    eax,edi
  41555f:	pop    ebx
  415560:	pop    edi
  415561:	pop    esi
  415562:	pop    ebp
  415563:	ret    0x4
  415566:	int3   
  415567:	int3   
  415568:	int3   
  415569:	int3   
  41556a:	int3   
  41556b:	int3   
  41556c:	int3   
  41556d:	int3   
  41556e:	int3   
  41556f:	int3   
  415570:	mov    eax,DWORD PTR [ecx+0x8]
  415573:	mov    edx,DWORD PTR [eax]
  415575:	mov    DWORD PTR [ecx+0x8],edx
  415578:	mov    edx,DWORD PTR [eax]
  41557a:	cmp    BYTE PTR [edx+0x29],0x0
  41557e:	jne    0x415583
  415580:	mov    DWORD PTR [edx+0x4],ecx
  415583:	mov    edx,DWORD PTR [ecx+0x4]
  415586:	mov    DWORD PTR [eax+0x4],edx
  415589:	mov    edx,DWORD PTR [esp+0x4]
  41558d:	mov    edx,DWORD PTR [edx+0x18]
  415590:	cmp    ecx,DWORD PTR [edx+0x4]
  415593:	jne    0x4155a0
  415595:	mov    DWORD PTR [edx+0x4],eax
  415598:	mov    DWORD PTR [eax],ecx
  41559a:	mov    DWORD PTR [ecx+0x4],eax
  41559d:	ret    0x4
  4155a0:	mov    edx,DWORD PTR [ecx+0x4]
  4155a3:	cmp    ecx,DWORD PTR [edx]
  4155a5:	jne    0x4155b1
  4155a7:	mov    DWORD PTR [edx],eax
  4155a9:	mov    DWORD PTR [eax],ecx
  4155ab:	mov    DWORD PTR [ecx+0x4],eax
  4155ae:	ret    0x4
  4155b1:	mov    DWORD PTR [edx+0x8],eax
  4155b4:	mov    DWORD PTR [eax],ecx
  4155b6:	mov    DWORD PTR [ecx+0x4],eax
  4155b9:	ret    0x4
  4155bc:	int3   
  4155bd:	int3   
  4155be:	int3   
  4155bf:	int3   
  4155c0:	mov    eax,DWORD PTR [ecx]
  4155c2:	mov    edx,DWORD PTR [eax+0x8]
  4155c5:	mov    DWORD PTR [ecx],edx
  4155c7:	mov    edx,DWORD PTR [eax+0x8]
  4155ca:	cmp    BYTE PTR [edx+0x29],0x0
  4155ce:	jne    0x4155d3
  4155d0:	mov    DWORD PTR [edx+0x4],ecx
  4155d3:	mov    edx,DWORD PTR [ecx+0x4]
  4155d6:	mov    DWORD PTR [eax+0x4],edx
  4155d9:	mov    edx,DWORD PTR [esp+0x4]
  4155dd:	mov    edx,DWORD PTR [edx+0x18]
  4155e0:	cmp    ecx,DWORD PTR [edx+0x4]
  4155e3:	jne    0x4155f1
  4155e5:	mov    DWORD PTR [edx+0x4],eax
  4155e8:	mov    DWORD PTR [eax+0x8],ecx
  4155eb:	mov    DWORD PTR [ecx+0x4],eax
  4155ee:	ret    0x4
  4155f1:	mov    edx,DWORD PTR [ecx+0x4]
  4155f4:	cmp    ecx,DWORD PTR [edx+0x8]
  4155f7:	jne    0x415605
  4155f9:	mov    DWORD PTR [edx+0x8],eax
  4155fc:	mov    DWORD PTR [eax+0x8],ecx
  4155ff:	mov    DWORD PTR [ecx+0x4],eax
  415602:	ret    0x4
  415605:	mov    DWORD PTR [edx],eax
  415607:	mov    DWORD PTR [eax+0x8],ecx
  41560a:	mov    DWORD PTR [ecx+0x4],eax
  41560d:	ret    0x4
  415610:	push   ebp
  415611:	mov    ebp,esp
  415613:	push   0xffffffff
  415615:	push   0x42b4c1
  41561a:	mov    eax,fs:0x0
  415620:	push   eax
  415621:	sub    esp,0xc
  415624:	push   ebx
  415625:	push   esi
  415626:	push   edi
  415627:	mov    eax,ds:0x43e020
  41562c:	xor    eax,ebp
  41562e:	push   eax
  41562f:	lea    eax,[ebp-0xc]
  415632:	mov    fs:0x0,eax
  415638:	mov    DWORD PTR [ebp-0x10],esp
  41563b:	push   0x2c
  41563d:	call   0x425050
  415642:	mov    esi,eax
  415644:	xor    ebx,ebx
  415646:	mov    DWORD PTR [ebp-0x4],ebx
  415649:	add    esp,0x4
  41564c:	mov    DWORD PTR [ebp-0x14],esi
  41564f:	mov    DWORD PTR [ebp-0x18],esi
  415652:	mov    BYTE PTR [ebp-0x4],0x1
  415656:	cmp    esi,ebx
  415658:	je     0x41567e
  41565a:	mov    eax,DWORD PTR [ebp+0x8]
  41565d:	mov    ecx,DWORD PTR [ebp+0xc]
  415660:	mov    edx,DWORD PTR [ebp+0x10]
  415663:	mov    DWORD PTR [esi],eax
  415665:	mov    eax,DWORD PTR [ebp+0x14]
  415668:	mov    DWORD PTR [esi+0x4],ecx
  41566b:	push   eax
  41566c:	lea    ecx,[esi+0xc]
  41566f:	mov    DWORD PTR [esi+0x8],edx
  415672:	call   DWORD PTR ds:0x430118
  415678:	mov    BYTE PTR [esi+0x28],bl
  41567b:	mov    BYTE PTR [esi+0x29],bl
  41567e:	mov    eax,esi
  415680:	mov    ecx,DWORD PTR [ebp-0xc]
  415683:	mov    DWORD PTR fs:0x0,ecx
  41568a:	pop    ecx
  41568b:	pop    edi
  41568c:	pop    esi
  41568d:	pop    ebx
  41568e:	mov    esp,ebp
  415690:	pop    ebp
  415691:	ret    0x10
  415694:	mov    ecx,DWORD PTR [ebp-0x14]
  415697:	push   ecx
  415698:	call   0x42504a
  41569d:	add    esp,0x4
  4156a0:	xor    ebx,ebx
  4156a2:	push   ebx
  4156a3:	push   ebx
  4156a4:	call   0x429e76
  4156a9:	int3   
  4156aa:	int3   
  4156ab:	int3   
  4156ac:	int3   
  4156ad:	int3   
  4156ae:	int3   
  4156af:	int3   
  4156b0:	push   ebp
  4156b1:	mov    ebp,esp
  4156b3:	push   0xffffffff
  4156b5:	push   0x42bef2
  4156ba:	mov    eax,fs:0x0
  4156c0:	push   eax
  4156c1:	sub    esp,0x54
  4156c4:	mov    eax,ds:0x43e020
  4156c9:	xor    eax,ebp
  4156cb:	mov    DWORD PTR [ebp-0x14],eax
  4156ce:	push   ebx
  4156cf:	push   esi
  4156d0:	push   edi
  4156d1:	push   eax
  4156d2:	lea    eax,[ebp-0xc]
  4156d5:	mov    fs:0x0,eax
  4156db:	mov    DWORD PTR [ebp-0x10],esp
  4156de:	mov    eax,DWORD PTR [ebp+0x8]
  4156e1:	mov    ebx,ecx
  4156e3:	mov    DWORD PTR [ebp-0x5c],eax
  4156e6:	mov    eax,DWORD PTR [ebx+0xc]
  4156e9:	mov    DWORD PTR [ebp-0x50],ebx
  4156ec:	test   eax,eax
  4156ee:	jne    0x4156f4
  4156f0:	xor    esi,esi
  4156f2:	jmp    0x41570c
  4156f4:	mov    ecx,DWORD PTR [ebx+0x14]
  4156f7:	sub    ecx,eax
  4156f9:	mov    eax,0x92492493
  4156fe:	imul   ecx
  415700:	add    edx,ecx
  415702:	sar    edx,0x4
  415705:	mov    esi,edx
  415707:	shr    esi,0x1f
  41570a:	add    esi,edx
  41570c:	mov    edi,DWORD PTR [ebx+0x10]
  41570f:	mov    ecx,edi
  415711:	sub    ecx,DWORD PTR [ebx+0xc]
  415714:	mov    eax,0x92492493
  415719:	imul   ecx
  41571b:	add    edx,ecx
  41571d:	sar    edx,0x4
  415720:	mov    eax,edx
  415722:	shr    eax,0x1f
  415725:	add    eax,edx
  415727:	mov    ecx,0x9249249
  41572c:	sub    ecx,eax
  41572e:	cmp    ecx,0x1
  415731:	jae    0x415738
  415733:	call   0x414b60
  415738:	inc    eax
  415739:	cmp    esi,eax
  41573b:	jae    0x4158e4
  415741:	mov    ecx,esi
  415743:	shr    ecx,1
  415745:	mov    edx,0x9249249
  41574a:	sub    edx,ecx
  41574c:	cmp    edx,esi
  41574e:	jae    0x415754
  415750:	xor    esi,esi
  415752:	jmp    0x415756
  415754:	add    esi,ecx
  415756:	cmp    esi,eax
  415758:	jae    0x41575c
  41575a:	mov    esi,eax
  41575c:	test   esi,esi
  41575e:	ja     0x41576c
  415760:	push   0x0
  415762:	call   0x425050
  415767:	add    esp,0x4
  41576a:	jmp    0x415773
  41576c:	mov    ecx,esi
  41576e:	call   0x417c30
  415773:	mov    ecx,DWORD PTR [ebp+0x10]
  415776:	sub    ecx,DWORD PTR [ebx+0xc]
  415779:	mov    DWORD PTR [ebp-0x54],eax
  41577c:	mov    eax,0x92492493
  415781:	imul   ecx
  415783:	add    edx,ecx
  415785:	mov    ecx,DWORD PTR [ebp-0x54]
  415788:	sar    edx,0x4
  41578b:	mov    edi,edx
  41578d:	xor    eax,eax
  41578f:	mov    DWORD PTR [ebp-0x4],eax
  415792:	shr    edi,0x1f
  415795:	add    edi,edx
  415797:	mov    DWORD PTR [ebp-0x58],eax
  41579a:	lea    eax,[edi*8+0x0]
  4157a1:	sub    eax,edi
  4157a3:	lea    eax,[ecx+eax*4]
  4157a6:	mov    BYTE PTR [ebp-0x50],0x0
  4157aa:	mov    edx,DWORD PTR [ebp-0x50]
  4157ad:	mov    ecx,DWORD PTR [ebp-0x50]
  4157b0:	push   edx
  4157b1:	mov    edx,DWORD PTR [ebp-0x5c]
  4157b4:	push   ecx
  4157b5:	push   edx
  4157b6:	push   eax
  4157b7:	mov    ecx,0x1
  4157bc:	mov    DWORD PTR [ebp-0x60],edi
  4157bf:	call   0x4196f0
  4157c4:	mov    ecx,DWORD PTR [ebx+0xc]
  4157c7:	add    esp,0x10
  4157ca:	mov    BYTE PTR [ebp-0x50],0x0
  4157ce:	mov    eax,DWORD PTR [ebp-0x50]
  4157d1:	mov    edx,DWORD PTR [ebp-0x50]
  4157d4:	push   eax
  4157d5:	mov    eax,DWORD PTR [ebp+0x10]
  4157d8:	push   edx
  4157d9:	mov    edx,DWORD PTR [ebp-0x54]
  4157dc:	push   eax
  4157dd:	mov    DWORD PTR [ebp-0x58],0x1
  4157e4:	call   0x41ad80
  4157e9:	mov    edx,DWORD PTR [ebp-0x54]
  4157ec:	mov    eax,DWORD PTR [ebx+0x10]
  4157ef:	inc    edi
  4157f0:	lea    ecx,[edi*8+0x0]
  4157f7:	sub    ecx,edi
  4157f9:	lea    edx,[edx+ecx*4]
  4157fc:	add    esp,0xc
  4157ff:	mov    BYTE PTR [ebp-0x50],0x0
  415803:	mov    ecx,DWORD PTR [ebp-0x50]
  415806:	push   ecx
  415807:	mov    ecx,DWORD PTR [ebp-0x50]
  41580a:	push   ecx
  41580b:	mov    ecx,DWORD PTR [ebp+0x10]
  41580e:	push   eax
  41580f:	mov    DWORD PTR [ebp-0x58],0x2
  415816:	call   0x41ad80
  41581b:	mov    DWORD PTR [ebp-0x4],0xffffffff
  415822:	mov    edi,DWORD PTR [ebx+0x10]
  415825:	mov    eax,DWORD PTR [ebx+0xc]
  415828:	mov    ecx,edi
  41582a:	sub    ecx,eax
  41582c:	mov    eax,0x92492493
  415831:	imul   ecx
  415833:	add    edx,ecx
  415835:	sar    edx,0x4
  415838:	mov    eax,edx
  41583a:	shr    eax,0x1f
  41583d:	add    esp,0xc
  415840:	cmp    DWORD PTR [ebx+0xc],0x0
  415844:	lea    edx,[edx+eax*1+0x1]
  415848:	mov    DWORD PTR [ebp-0x50],edx
  41584b:	je     0x415864
  41584d:	mov    eax,DWORD PTR [ebx+0xc]
  415850:	call   0x414210
  415855:	mov    ecx,DWORD PTR [ebx+0xc]
  415858:	push   ecx
  415859:	call   0x42504a
  41585e:	mov    edx,DWORD PTR [ebp-0x50]
  415861:	add    esp,0x4
  415864:	mov    eax,DWORD PTR [ebp-0x54]
  415867:	lea    ecx,[esi*8+0x0]
  41586e:	sub    ecx,esi
  415870:	lea    ecx,[eax+ecx*4]
  415873:	mov    DWORD PTR [ebx+0x14],ecx
  415876:	lea    ecx,[edx*8+0x0]
  41587d:	sub    ecx,edx
  41587f:	lea    edx,[eax+ecx*4]
  415882:	mov    DWORD PTR [ebx+0x10],edx
  415885:	mov    DWORD PTR [ebx+0xc],eax
  415888:	jmp    0x415a19
  41588d:	cmp    DWORD PTR [ebp-0x58],0x1
  415891:	mov    esi,DWORD PTR [ebp-0x60]
  415894:	mov    ebx,DWORD PTR [ebp-0x54]
  415897:	jle    0x4158ac
  415899:	lea    eax,[esi*8+0x0]
  4158a0:	sub    eax,esi
  4158a2:	lea    edi,[ebx+eax*4]
  4158a5:	mov    eax,ebx
  4158a7:	call   0x414210
  4158ac:	cmp    DWORD PTR [ebp-0x58],0x0
  4158b0:	jle    0x4158d2
  4158b2:	lea    eax,[esi+0x1]
  4158b5:	lea    ecx,[eax*8+0x0]
  4158bc:	sub    ecx,eax
  4158be:	lea    edx,[esi*8+0x0]
  4158c5:	sub    edx,esi
  4158c7:	lea    edi,[ebx+ecx*4]
  4158ca:	lea    eax,[ebx+edx*4]
  4158cd:	call   0x414210
  4158d2:	push   ebx
  4158d3:	call   0x42504a
  4158d8:	add    esp,0x4
  4158db:	push   0x0
  4158dd:	push   0x0
  4158df:	call   0x429e76
  4158e4:	sub    edi,DWORD PTR [ebp+0x10]
  4158e7:	mov    eax,0x92492493
  4158ec:	imul   edi
  4158ee:	add    edx,edi
  4158f0:	sar    edx,0x4
  4158f3:	mov    eax,edx
  4158f5:	shr    eax,0x1f
  4158f8:	add    eax,edx
  4158fa:	cmp    eax,0x1
  4158fd:	jae    0x4159a8
  415903:	mov    ecx,DWORD PTR [ebp-0x5c]
  415906:	push   ecx
  415907:	lea    ecx,[ebp-0x30]
  41590a:	call   DWORD PTR ds:0x430118
  415910:	mov    DWORD PTR [ebp-0x4],0x2
  415917:	mov    eax,DWORD PTR [ebp+0x10]
  41591a:	lea    edx,[eax+0x1c]
  41591d:	push   edx
  41591e:	mov    edx,DWORD PTR [ebx+0x10]
  415921:	push   eax
  415922:	call   0x417c90
  415927:	mov    BYTE PTR [ebp-0x4],0x3
  41592b:	mov    edi,DWORD PTR [ebx+0x10]
  41592e:	mov    ecx,edi
  415930:	sub    ecx,DWORD PTR [ebp+0x10]
  415933:	mov    eax,0x92492493
  415938:	imul   ecx
  41593a:	add    edx,ecx
  41593c:	sar    edx,0x4
  41593f:	mov    eax,edx
  415941:	shr    eax,0x1f
  415944:	add    eax,edx
  415946:	mov    esi,0x1
  41594b:	sub    esi,eax
  41594d:	lea    edx,[ebp-0x30]
  415950:	call   0x414280
  415955:	mov    DWORD PTR [ebp-0x4],0x2
  41595c:	add    DWORD PTR [ebx+0x10],0x1c
  415960:	mov    ebx,DWORD PTR [ebx+0x10]
  415963:	mov    esi,DWORD PTR [ebp+0x10]
  415966:	lea    edi,[ebx-0x1c]
  415969:	cmp    esi,edi
  41596b:	je     0x415983
  41596d:	lea    ecx,[ecx+0x0]
  415970:	lea    ecx,[ebp-0x30]
  415973:	push   ecx
  415974:	mov    ecx,esi
  415976:	call   DWORD PTR ds:0x43017c
  41597c:	add    esi,0x1c
  41597f:	cmp    esi,edi
  415981:	jne    0x415970
  415983:	lea    ecx,[ebp-0x30]
  415986:	jmp    0x415a0c
  41598b:	mov    edx,DWORD PTR [ebp-0x50]
  41598e:	mov    edi,DWORD PTR [edx+0x10]
  415991:	mov    eax,DWORD PTR [ebp+0x10]
  415994:	add    edi,0x1c
  415997:	add    eax,0x1c
  41599a:	call   0x414210
  41599f:	push   0x0
  4159a1:	push   0x0
  4159a3:	call   0x429e76
  4159a8:	mov    eax,DWORD PTR [ebp-0x5c]
  4159ab:	push   eax
  4159ac:	lea    ecx,[ebp-0x4c]
  4159af:	call   DWORD PTR ds:0x430118
  4159b5:	mov    DWORD PTR [ebp-0x4],0x5
  4159bc:	mov    esi,DWORD PTR [ebx+0x10]
  4159bf:	push   esi
  4159c0:	lea    edi,[esi-0x1c]
  4159c3:	push   edi
  4159c4:	mov    edx,esi
  4159c6:	call   0x417c90
  4159cb:	mov    BYTE PTR [ebp-0x50],0x0
  4159cf:	mov    ecx,DWORD PTR [ebp-0x50]
  4159d2:	mov    edx,DWORD PTR [ebp-0x50]
  4159d5:	push   ecx
  4159d6:	mov    DWORD PTR [ebx+0x10],eax
  4159d9:	mov    eax,DWORD PTR [ebp-0x50]
  4159dc:	push   edx
  4159dd:	push   eax
  4159de:	mov    eax,edi
  4159e0:	mov    edi,DWORD PTR [ebp+0x10]
  4159e3:	push   esi
  4159e4:	call   0x419830
  4159e9:	mov    esi,DWORD PTR [ebp+0x10]
  4159ec:	lea    edi,[esi+0x1c]
  4159ef:	add    esp,0x10
  4159f2:	cmp    esi,edi
  4159f4:	je     0x415a09
  4159f6:	lea    ecx,[ebp-0x4c]
  4159f9:	push   ecx
  4159fa:	mov    ecx,esi
  4159fc:	call   DWORD PTR ds:0x43017c
  415a02:	add    esi,0x1c
  415a05:	cmp    esi,edi
  415a07:	jne    0x4159f6
  415a09:	lea    ecx,[ebp-0x4c]
  415a0c:	mov    DWORD PTR [ebp-0x4],0xffffffff
  415a13:	call   DWORD PTR ds:0x430264
  415a19:	mov    ecx,DWORD PTR [ebp-0xc]
  415a1c:	mov    DWORD PTR fs:0x0,ecx
  415a23:	pop    ecx
  415a24:	pop    edi
  415a25:	pop    esi
  415a26:	pop    ebx
  415a27:	mov    ecx,DWORD PTR [ebp-0x14]
  415a2a:	xor    ecx,ebp
  415a2c:	call   0x42503a
  415a31:	mov    esp,ebp
  415a33:	pop    ebp
  415a34:	ret    0xc
  415a37:	int3   
  415a38:	int3   
  415a39:	int3   
  415a3a:	int3   
  415a3b:	int3   
  415a3c:	int3   
  415a3d:	int3   
  415a3e:	int3   
  415a3f:	int3   
  415a40:	cmp    DWORD PTR [esi],0x0
  415a43:	push   edi
  415a44:	mov    edi,DWORD PTR ds:0x430390
  415a4a:	jne    0x415a4e
  415a4c:	call   edi
  415a4e:	mov    eax,DWORD PTR [esi+0x4]
  415a51:	cmp    BYTE PTR [eax+0x29],0x0
  415a55:	je     0x415a5b
  415a57:	call   edi
  415a59:	pop    edi
  415a5a:	ret    
  415a5b:	mov    ecx,DWORD PTR [eax+0x8]
  415a5e:	cmp    BYTE PTR [ecx+0x29],0x0
  415a62:	jne    0x415a7f
  415a64:	mov    eax,DWORD PTR [ecx]
  415a66:	cmp    BYTE PTR [eax+0x29],0x0
  415a6a:	jne    0x415a7a
  415a6c:	lea    esp,[esp+0x0]
  415a70:	mov    ecx,eax
  415a72:	mov    eax,DWORD PTR [ecx]
  415a74:	cmp    BYTE PTR [eax+0x29],0x0
  415a78:	je     0x415a70
  415a7a:	mov    DWORD PTR [esi+0x4],ecx
  415a7d:	pop    edi
  415a7e:	ret    
  415a7f:	mov    eax,DWORD PTR [eax+0x4]
  415a82:	cmp    BYTE PTR [eax+0x29],0x0
  415a86:	jne    0x415a9e
  415a88:	mov    ecx,DWORD PTR [esi+0x4]
  415a8b:	cmp    ecx,DWORD PTR [eax+0x8]
  415a8e:	jne    0x415a9e
  415a90:	mov    DWORD PTR [esi+0x4],eax
  415a93:	mov    edx,eax
  415a95:	mov    eax,DWORD PTR [edx+0x4]
  415a98:	cmp    BYTE PTR [eax+0x29],0x0
  415a9c:	je     0x415a88
  415a9e:	mov    DWORD PTR [esi+0x4],eax
  415aa1:	pop    edi
  415aa2:	ret    
  415aa3:	int3   
  415aa4:	int3   
  415aa5:	int3   
  415aa6:	int3   
  415aa7:	int3   
  415aa8:	int3   
  415aa9:	int3   
  415aaa:	int3   
  415aab:	int3   
  415aac:	int3   
  415aad:	int3   
  415aae:	int3   
  415aaf:	int3   
  415ab0:	push   0xffffffff
  415ab2:	push   0x42ad08
  415ab7:	mov    eax,fs:0x0
  415abd:	push   eax
  415abe:	push   esi
  415abf:	mov    eax,ds:0x43e020
  415ac4:	xor    eax,esp
  415ac6:	push   eax
  415ac7:	lea    eax,[esp+0x8]
  415acb:	mov    fs:0x0,eax
  415ad1:	mov    esi,DWORD PTR [esp+0x18]
  415ad5:	lea    eax,[edi+0x4]
  415ad8:	push   eax
  415ad9:	lea    ecx,[esi+0x4]
  415adc:	mov    DWORD PTR [esi],0x432960
  415ae2:	call   DWORD PTR ds:0x430118
  415ae8:	lea    ecx,[edi+0x20]
  415aeb:	push   ecx
  415aec:	lea    ecx,[esi+0x20]
  415aef:	mov    DWORD PTR [esp+0x14],0x0
  415af7:	call   DWORD PTR ds:0x430118
  415afd:	lea    edx,[edi+0x3c]
  415b00:	push   edx
  415b01:	lea    ecx,[esi+0x3c]
  415b04:	mov    BYTE PTR [esp+0x14],0x1
  415b09:	call   DWORD PTR ds:0x430118
  415b0f:	mov    eax,DWORD PTR [edi+0x58]
  415b12:	mov    DWORD PTR [esi+0x58],eax
  415b15:	mov    ecx,DWORD PTR [edi+0x5c]
  415b18:	mov    DWORD PTR [esi+0x5c],ecx
  415b1b:	mov    eax,esi
  415b1d:	mov    ecx,DWORD PTR [esp+0x8]
  415b21:	mov    DWORD PTR fs:0x0,ecx
  415b28:	pop    ecx
  415b29:	pop    esi
  415b2a:	add    esp,0xc
  415b2d:	ret    0x4
  415b30:	push   0xffffffff
  415b32:	push   0x42ad08
  415b37:	mov    eax,fs:0x0
  415b3d:	push   eax
  415b3e:	push   esi
  415b3f:	mov    eax,ds:0x43e020
  415b44:	xor    eax,esp
  415b46:	push   eax
  415b47:	lea    eax,[esp+0x8]
  415b4b:	mov    fs:0x0,eax
  415b51:	mov    esi,DWORD PTR [esp+0x18]
  415b55:	lea    ecx,[esi+0x3c]
  415b58:	mov    DWORD PTR [esp+0x10],0x1
  415b60:	call   DWORD PTR ds:0x430264
  415b66:	lea    ecx,[esi+0x20]
  415b69:	mov    BYTE PTR [esp+0x10],0x0
  415b6e:	call   DWORD PTR ds:0x430264
  415b74:	lea    ecx,[esi+0x4]
  415b77:	mov    DWORD PTR [esp+0x10],0xffffffff
  415b7f:	call   DWORD PTR ds:0x430264
  415b85:	mov    ecx,DWORD PTR [esp+0x8]
  415b89:	mov    DWORD PTR fs:0x0,ecx
  415b90:	pop    ecx
  415b91:	pop    esi
  415b92:	add    esp,0xc
  415b95:	ret    0x4
  415b98:	int3   
  415b99:	int3   
  415b9a:	int3   
  415b9b:	int3   
  415b9c:	int3   
  415b9d:	int3   
  415b9e:	int3   
  415b9f:	int3   
  415ba0:	push   0xffffffff
  415ba2:	push   0x42ccf9
  415ba7:	mov    eax,fs:0x0
  415bad:	push   eax
  415bae:	sub    esp,0x44
  415bb1:	push   ebx
  415bb2:	push   ebp
  415bb3:	push   esi
  415bb4:	push   edi
  415bb5:	mov    eax,ds:0x43e020
  415bba:	xor    eax,esp
  415bbc:	push   eax
  415bbd:	lea    eax,[esp+0x58]
  415bc1:	mov    fs:0x0,eax
  415bc7:	mov    eax,DWORD PTR [esp+0x74]
  415bcb:	cmp    BYTE PTR [eax+0x2d],0x0
  415bcf:	je     0x415c0d
  415bd1:	push   0x431e44
  415bd6:	lea    ecx,[esp+0x18]
  415bda:	call   DWORD PTR ds:0x43011c
  415be0:	lea    eax,[esp+0x14]
  415be4:	push   eax
  415be5:	lea    ecx,[esp+0x34]
  415be9:	mov    DWORD PTR [esp+0x64],0x0
  415bf1:	call   0x402940
  415bf6:	push   0x435d50
  415bfb:	lea    ecx,[esp+0x34]
  415bff:	push   ecx
  415c00:	mov    DWORD PTR [esp+0x38],0x431490
  415c08:	call   0x429e76
  415c0d:	lea    esi,[esp+0x70]
  415c11:	mov    ebp,eax
  415c13:	call   0x416810
  415c18:	mov    ecx,DWORD PTR [ebp+0x0]
  415c1b:	cmp    BYTE PTR [ecx+0x2d],0x0
  415c1f:	je     0x415c26
  415c21:	mov    edi,DWORD PTR [ebp+0x8]
  415c24:	jmp    0x415c41
  415c26:	mov    edx,DWORD PTR [ebp+0x8]
  415c29:	cmp    BYTE PTR [edx+0x2d],0x0
  415c2d:	je     0x415c33
  415c2f:	mov    edi,ecx
  415c31:	jmp    0x415c41
  415c33:	mov    eax,DWORD PTR [esp+0x74]
  415c37:	mov    edi,DWORD PTR [eax+0x8]
  415c3a:	lea    edx,[eax+0x8]
  415c3d:	cmp    eax,ebp
  415c3f:	jne    0x415cb5
  415c41:	cmp    BYTE PTR [edi+0x2d],0x0
  415c45:	mov    esi,DWORD PTR [ebp+0x4]
  415c48:	jne    0x415c4d
  415c4a:	mov    DWORD PTR [edi+0x4],esi
  415c4d:	mov    ecx,DWORD PTR [esp+0x68]
  415c51:	mov    eax,DWORD PTR [ecx+0x18]
  415c54:	cmp    DWORD PTR [eax+0x4],ebp
  415c57:	jne    0x415c5e
  415c59:	mov    DWORD PTR [eax+0x4],edi
  415c5c:	jmp    0x415c69
  415c5e:	cmp    DWORD PTR [esi],ebp
  415c60:	jne    0x415c66
  415c62:	mov    DWORD PTR [esi],edi
  415c64:	jmp    0x415c69
  415c66:	mov    DWORD PTR [esi+0x8],edi
  415c69:	mov    edx,DWORD PTR [ecx+0x18]
  415c6c:	cmp    DWORD PTR [edx],ebp
  415c6e:	jne    0x415c90
  415c70:	cmp    BYTE PTR [edi+0x2d],0x0
  415c74:	je     0x415c7a
  415c76:	mov    ecx,esi
  415c78:	jmp    0x415c8e
  415c7a:	mov    eax,DWORD PTR [edi]
  415c7c:	cmp    BYTE PTR [eax+0x2d],0x0
  415c80:	mov    ecx,edi
  415c82:	jne    0x415c8e
  415c84:	mov    ecx,eax
  415c86:	mov    eax,DWORD PTR [ecx]
  415c88:	cmp    BYTE PTR [eax+0x2d],0x0
  415c8c:	je     0x415c84
  415c8e:	mov    DWORD PTR [edx],ecx
  415c90:	mov    eax,DWORD PTR [esp+0x68]
  415c94:	mov    ebx,DWORD PTR [eax+0x18]
  415c97:	cmp    DWORD PTR [ebx+0x8],ebp
  415c9a:	jne    0x415d16
  415c9c:	cmp    BYTE PTR [edi+0x2d],0x0
  415ca0:	je     0x415ca9
  415ca2:	mov    eax,esi
  415ca4:	mov    DWORD PTR [ebx+0x8],eax
  415ca7:	jmp    0x415d16
  415ca9:	mov    eax,edi
  415cab:	call   0x416880
  415cb0:	mov    DWORD PTR [ebx+0x8],eax
  415cb3:	jmp    0x415d16
  415cb5:	mov    DWORD PTR [ecx+0x4],eax
  415cb8:	mov    ecx,DWORD PTR [ebp+0x0]
  415cbb:	mov    DWORD PTR [eax],ecx
  415cbd:	cmp    eax,DWORD PTR [ebp+0x8]
  415cc0:	jne    0x415cc6
  415cc2:	mov    esi,eax
  415cc4:	jmp    0x415cdf
  415cc6:	cmp    BYTE PTR [edi+0x2d],0x0
  415cca:	mov    esi,DWORD PTR [eax+0x4]
  415ccd:	jne    0x415cd2
  415ccf:	mov    DWORD PTR [edi+0x4],esi
  415cd2:	mov    DWORD PTR [esi],edi
  415cd4:	mov    ecx,DWORD PTR [ebp+0x8]
  415cd7:	mov    DWORD PTR [edx],ecx
  415cd9:	mov    edx,DWORD PTR [ebp+0x8]
  415cdc:	mov    DWORD PTR [edx+0x4],eax
  415cdf:	mov    ecx,DWORD PTR [esp+0x68]
  415ce3:	mov    ecx,DWORD PTR [ecx+0x18]
  415ce6:	cmp    DWORD PTR [ecx+0x4],ebp
  415ce9:	jne    0x415cf0
  415ceb:	mov    DWORD PTR [ecx+0x4],eax
  415cee:	jmp    0x415cfe
  415cf0:	mov    ecx,DWORD PTR [ebp+0x4]
  415cf3:	cmp    DWORD PTR [ecx],ebp
  415cf5:	jne    0x415cfb
  415cf7:	mov    DWORD PTR [ecx],eax
  415cf9:	jmp    0x415cfe
  415cfb:	mov    DWORD PTR [ecx+0x8],eax
  415cfe:	mov    edx,DWORD PTR [ebp+0x4]
  415d01:	mov    DWORD PTR [eax+0x4],edx
  415d04:	lea    ecx,[ebp+0x2c]
  415d07:	add    eax,0x2c
  415d0a:	cmp    eax,ecx
  415d0c:	je     0x415d16
  415d0e:	mov    bl,BYTE PTR [ecx]
  415d10:	mov    dl,BYTE PTR [eax]
  415d12:	mov    BYTE PTR [eax],bl
  415d14:	mov    BYTE PTR [ecx],dl
  415d16:	mov    bl,0x1
  415d18:	cmp    BYTE PTR [ebp+0x2c],bl
  415d1b:	jne    0x415e3b
  415d21:	mov    eax,DWORD PTR [esp+0x68]
  415d25:	mov    ecx,DWORD PTR [eax+0x18]
  415d28:	cmp    edi,DWORD PTR [ecx+0x4]
  415d2b:	je     0x415e38
  415d31:	cmp    BYTE PTR [edi+0x2c],bl
  415d34:	jne    0x415e38
  415d3a:	mov    ecx,DWORD PTR [esi]
  415d3c:	cmp    edi,ecx
  415d3e:	jne    0x415db6
  415d40:	mov    ecx,DWORD PTR [esi+0x8]
  415d43:	cmp    BYTE PTR [ecx+0x2c],0x0
  415d47:	jne    0x415d5f
  415d49:	mov    edx,DWORD PTR [esp+0x68]
  415d4d:	mov    BYTE PTR [ecx+0x2c],bl
  415d50:	push   edx
  415d51:	mov    ecx,esi
  415d53:	mov    BYTE PTR [esi+0x2c],0x0
  415d57:	call   0x415e90
  415d5c:	mov    ecx,DWORD PTR [esi+0x8]
  415d5f:	cmp    BYTE PTR [ecx+0x2d],0x0
  415d63:	jne    0x415dea
  415d69:	mov    eax,DWORD PTR [ecx]
  415d6b:	cmp    BYTE PTR [eax+0x2c],bl
  415d6e:	jne    0x415d78
  415d70:	mov    edx,DWORD PTR [ecx+0x8]
  415d73:	cmp    BYTE PTR [edx+0x2c],bl
  415d76:	je     0x415de6
  415d78:	mov    eax,DWORD PTR [ecx+0x8]
  415d7b:	cmp    BYTE PTR [eax+0x2c],bl
  415d7e:	jne    0x415d96
  415d80:	mov    edx,DWORD PTR [ecx]
  415d82:	mov    eax,DWORD PTR [esp+0x68]
  415d86:	mov    BYTE PTR [edx+0x2c],bl
  415d89:	push   eax
  415d8a:	mov    BYTE PTR [ecx+0x2c],0x0
  415d8e:	call   0x415ee0
  415d93:	mov    ecx,DWORD PTR [esi+0x8]
  415d96:	mov    dl,BYTE PTR [esi+0x2c]
  415d99:	mov    BYTE PTR [ecx+0x2c],dl
  415d9c:	mov    BYTE PTR [esi+0x2c],bl
  415d9f:	mov    eax,DWORD PTR [ecx+0x8]
  415da2:	mov    ecx,DWORD PTR [esp+0x68]
  415da6:	push   ecx
  415da7:	mov    ecx,esi
  415da9:	mov    BYTE PTR [eax+0x2c],bl
  415dac:	call   0x415e90
  415db1:	jmp    0x415e38
  415db6:	cmp    BYTE PTR [ecx+0x2c],0x0
  415dba:	jne    0x415dd1
  415dbc:	mov    eax,DWORD PTR [esp+0x68]
  415dc0:	mov    BYTE PTR [ecx+0x2c],bl
  415dc3:	push   eax
  415dc4:	mov    ecx,esi
  415dc6:	mov    BYTE PTR [esi+0x2c],0x0
  415dca:	call   0x415ee0
  415dcf:	mov    ecx,DWORD PTR [esi]
  415dd1:	cmp    BYTE PTR [ecx+0x2d],0x0
  415dd5:	jne    0x415dea
  415dd7:	mov    edx,DWORD PTR [ecx+0x8]
  415dda:	cmp    BYTE PTR [edx+0x2c],bl
  415ddd:	jne    0x415e01
  415ddf:	mov    eax,DWORD PTR [ecx]
  415de1:	cmp    BYTE PTR [eax+0x2c],bl
  415de4:	jne    0x415e01
  415de6:	mov    BYTE PTR [ecx+0x2c],0x0
  415dea:	mov    ecx,DWORD PTR [esp+0x68]
  415dee:	mov    edx,DWORD PTR [ecx+0x18]
  415df1:	mov    edi,esi
  415df3:	mov    esi,DWORD PTR [esi+0x4]
  415df6:	cmp    edi,DWORD PTR [edx+0x4]
  415df9:	jne    0x415d31
  415dff:	jmp    0x415e38
  415e01:	mov    edx,DWORD PTR [ecx]
  415e03:	cmp    BYTE PTR [edx+0x2c],bl
  415e06:	jne    0x415e1e
  415e08:	mov    eax,DWORD PTR [ecx+0x8]
  415e0b:	mov    edx,DWORD PTR [esp+0x68]
  415e0f:	mov    BYTE PTR [eax+0x2c],bl
  415e12:	push   edx
  415e13:	mov    BYTE PTR [ecx+0x2c],0x0
  415e17:	call   0x415e90
  415e1c:	mov    ecx,DWORD PTR [esi]
  415e1e:	mov    al,BYTE PTR [esi+0x2c]
  415e21:	mov    edx,DWORD PTR [esp+0x68]
  415e25:	mov    BYTE PTR [ecx+0x2c],al
  415e28:	mov    BYTE PTR [esi+0x2c],bl
  415e2b:	mov    ecx,DWORD PTR [ecx]
  415e2d:	mov    BYTE PTR [ecx+0x2c],bl
  415e30:	push   edx
  415e31:	mov    ecx,esi
  415e33:	call   0x415ee0
  415e38:	mov    BYTE PTR [edi+0x2c],bl
  415e3b:	lea    ecx,[ebp+0xc]
  415e3e:	call   DWORD PTR ds:0x430264
  415e44:	push   ebp
  415e45:	call   0x42504a
  415e4a:	mov    ecx,DWORD PTR [esp+0x6c]
  415e4e:	mov    eax,DWORD PTR [ecx+0x1c]
  415e51:	add    esp,0x4
  415e54:	test   eax,eax
  415e56:	jbe    0x415e5c
  415e58:	dec    eax
  415e59:	mov    DWORD PTR [ecx+0x1c],eax
  415e5c:	mov    edx,DWORD PTR [esp+0x6c]
  415e60:	mov    eax,DWORD PTR [esp+0x74]
  415e64:	mov    ecx,DWORD PTR [ecx]
  415e66:	mov    DWORD PTR [edx+0x4],eax
  415e69:	mov    DWORD PTR [edx],ecx
  415e6b:	mov    eax,edx
  415e6d:	mov    ecx,DWORD PTR [esp+0x58]
  415e71:	mov    DWORD PTR fs:0x0,ecx
  415e78:	pop    ecx
  415e79:	pop    edi
  415e7a:	pop    esi
  415e7b:	pop    ebp
  415e7c:	pop    ebx
  415e7d:	add    esp,0x50
  415e80:	ret    0x10
  415e83:	int3   
  415e84:	int3   
  415e85:	int3   
  415e86:	int3   
  415e87:	int3   
  415e88:	int3   
  415e89:	int3   
  415e8a:	int3   
  415e8b:	int3   
  415e8c:	int3   
  415e8d:	int3   
  415e8e:	int3   
  415e8f:	int3   
  415e90:	mov    eax,DWORD PTR [ecx+0x8]
  415e93:	mov    edx,DWORD PTR [eax]
  415e95:	mov    DWORD PTR [ecx+0x8],edx
  415e98:	mov    edx,DWORD PTR [eax]
  415e9a:	cmp    BYTE PTR [edx+0x2d],0x0
  415e9e:	jne    0x415ea3
  415ea0:	mov    DWORD PTR [edx+0x4],ecx
  415ea3:	mov    edx,DWORD PTR [ecx+0x4]
  415ea6:	mov    DWORD PTR [eax+0x4],edx
  415ea9:	mov    edx,DWORD PTR [esp+0x4]
  415ead:	mov    edx,DWORD PTR [edx+0x18]
  415eb0:	cmp    ecx,DWORD PTR [edx+0x4]
  415eb3:	jne    0x415ec0
  415eb5:	mov    DWORD PTR [edx+0x4],eax
  415eb8:	mov    DWORD PTR [eax],ecx
  415eba:	mov    DWORD PTR [ecx+0x4],eax
  415ebd:	ret    0x4
  415ec0:	mov    edx,DWORD PTR [ecx+0x4]
  415ec3:	cmp    ecx,DWORD PTR [edx]
  415ec5:	jne    0x415ed1
  415ec7:	mov    DWORD PTR [edx],eax
  415ec9:	mov    DWORD PTR [eax],ecx
  415ecb:	mov    DWORD PTR [ecx+0x4],eax
  415ece:	ret    0x4
  415ed1:	mov    DWORD PTR [edx+0x8],eax
  415ed4:	mov    DWORD PTR [eax],ecx
  415ed6:	mov    DWORD PTR [ecx+0x4],eax
  415ed9:	ret    0x4
  415edc:	int3   
  415edd:	int3   
  415ede:	int3   
  415edf:	int3   
  415ee0:	mov    eax,DWORD PTR [ecx]
  415ee2:	mov    edx,DWORD PTR [eax+0x8]
  415ee5:	mov    DWORD PTR [ecx],edx
  415ee7:	mov    edx,DWORD PTR [eax+0x8]
  415eea:	cmp    BYTE PTR [edx+0x2d],0x0
  415eee:	jne    0x415ef3
  415ef0:	mov    DWORD PTR [edx+0x4],ecx
  415ef3:	mov    edx,DWORD PTR [ecx+0x4]
  415ef6:	mov    DWORD PTR [eax+0x4],edx
  415ef9:	mov    edx,DWORD PTR [esp+0x4]
  415efd:	mov    edx,DWORD PTR [edx+0x18]
  415f00:	cmp    ecx,DWORD PTR [edx+0x4]
  415f03:	jne    0x415f11
  415f05:	mov    DWORD PTR [edx+0x4],eax
  415f08:	mov    DWORD PTR [eax+0x8],ecx
  415f0b:	mov    DWORD PTR [ecx+0x4],eax
  415f0e:	ret    0x4
  415f11:	mov    edx,DWORD PTR [ecx+0x4]
  415f14:	cmp    ecx,DWORD PTR [edx+0x8]
  415f17:	jne    0x415f25
  415f19:	mov    DWORD PTR [edx+0x8],eax
  415f1c:	mov    DWORD PTR [eax+0x8],ecx
  415f1f:	mov    DWORD PTR [ecx+0x4],eax
  415f22:	ret    0x4
  415f25:	mov    DWORD PTR [edx],eax
  415f27:	mov    DWORD PTR [eax+0x8],ecx
  415f2a:	mov    DWORD PTR [ecx+0x4],eax
  415f2d:	ret    0x4
  415f30:	push   0x30
  415f32:	call   0x425050
  415f37:	add    esp,0x4
  415f3a:	test   eax,eax
  415f3c:	je     0x415f44
  415f3e:	mov    DWORD PTR [eax],0x0
  415f44:	lea    ecx,[eax+0x4]
  415f47:	test   ecx,ecx
  415f49:	je     0x415f51
  415f4b:	mov    DWORD PTR [ecx],0x0
  415f51:	lea    ecx,[eax+0x8]
  415f54:	test   ecx,ecx
  415f56:	je     0x415f5e
  415f58:	mov    DWORD PTR [ecx],0x0
  415f5e:	mov    BYTE PTR [eax+0x2c],0x1
  415f62:	mov    BYTE PTR [eax+0x2d],0x0
  415f66:	ret    
  415f67:	int3   
  415f68:	int3   
  415f69:	int3   
  415f6a:	int3   
  415f6b:	int3   
  415f6c:	int3   
  415f6d:	int3   
  415f6e:	int3   
  415f6f:	int3   
  415f70:	push   ebp
  415f71:	mov    ebp,esp
  415f73:	push   0xffffffff
  415f75:	push   0x42b491
  415f7a:	mov    eax,fs:0x0
  415f80:	push   eax
  415f81:	sub    esp,0xc
  415f84:	push   ebx
  415f85:	push   esi
  415f86:	push   edi
  415f87:	mov    eax,ds:0x43e020
  415f8c:	xor    eax,ebp
  415f8e:	push   eax
  415f8f:	lea    eax,[ebp-0xc]
  415f92:	mov    fs:0x0,eax
  415f98:	mov    DWORD PTR [ebp-0x10],esp
  415f9b:	mov    ebx,ecx
  415f9d:	push   0x30
  415f9f:	call   0x425050
  415fa4:	mov    esi,eax
  415fa6:	mov    DWORD PTR [ebp-0x4],0x0
  415fad:	add    esp,0x4
  415fb0:	mov    DWORD PTR [ebp-0x14],esi
  415fb3:	mov    DWORD PTR [ebp-0x18],esi
  415fb6:	mov    BYTE PTR [ebp-0x4],0x1
  415fba:	test   esi,esi
  415fbc:	je     0x415fe9
  415fbe:	mov    ecx,DWORD PTR [ebp+0xc]
  415fc1:	mov    eax,DWORD PTR [ebp+0x8]
  415fc4:	mov    edx,DWORD PTR [ebp+0x10]
  415fc7:	mov    DWORD PTR [esi+0x4],ecx
  415fca:	lea    edi,[esi+0xc]
  415fcd:	push   ebx
  415fce:	mov    ecx,edi
  415fd0:	mov    DWORD PTR [esi],eax
  415fd2:	mov    DWORD PTR [esi+0x8],edx
  415fd5:	call   DWORD PTR ds:0x430118
  415fdb:	mov    eax,DWORD PTR [ebx+0x1c]
  415fde:	mov    DWORD PTR [edi+0x1c],eax
  415fe1:	mov    BYTE PTR [esi+0x2c],0x0
  415fe5:	mov    BYTE PTR [esi+0x2d],0x0
  415fe9:	mov    eax,esi
  415feb:	mov    ecx,DWORD PTR [ebp-0xc]
  415fee:	mov    DWORD PTR fs:0x0,ecx
  415ff5:	pop    ecx
  415ff6:	pop    edi
  415ff7:	pop    esi
  415ff8:	pop    ebx
  415ff9:	mov    esp,ebp
  415ffb:	pop    ebp
  415ffc:	ret    0xc
  415fff:	mov    ecx,DWORD PTR [ebp-0x14]
  416002:	push   ecx
  416003:	call   0x42504a
  416008:	add    esp,0x4
  41600b:	push   0x0
  41600d:	push   0x0
  41600f:	call   0x429e76
  416014:	int3   
  416015:	int3   
  416016:	int3   
  416017:	int3   
  416018:	int3   
  416019:	int3   
  41601a:	int3   
  41601b:	int3   
  41601c:	int3   
  41601d:	int3   
  41601e:	int3   
  41601f:	int3   
  416020:	push   ebp
  416021:	mov    ebp,esp
  416023:	push   0xffffffff
  416025:	push   0x42d9c0
  41602a:	mov    eax,fs:0x0
  416030:	push   eax
  416031:	sub    esp,0x20
  416034:	push   ebx
  416035:	push   esi
  416036:	push   edi
  416037:	mov    eax,ds:0x43e020
  41603c:	xor    eax,ebp
  41603e:	push   eax
  41603f:	lea    eax,[ebp-0xc]
  416042:	mov    fs:0x0,eax
  416048:	mov    DWORD PTR [ebp-0x10],esp
  41604b:	mov    esi,ecx
  41604d:	mov    edi,DWORD PTR [ebp+0x8]
  416050:	mov    ebx,DWORD PTR [edi+0xc]
  416053:	test   ebx,ebx
  416055:	jne    0x41605b
  416057:	xor    ecx,ecx
  416059:	jmp    0x416065
  41605b:	mov    eax,DWORD PTR [edi+0x14]
  41605e:	sub    eax,ebx
  416060:	sar    eax,0x3
  416063:	mov    ecx,eax
  416065:	mov    edx,DWORD PTR [edi+0x10]
  416068:	mov    eax,edx
  41606a:	sub    eax,ebx
  41606c:	sar    eax,0x3
  41606f:	mov    ebx,0x1fffffff
  416074:	sub    ebx,eax
  416076:	cmp    ebx,0x1
  416079:	jae    0x416080
  41607b:	call   0x416300
  416080:	lea    ebx,[eax+0x1]
  416083:	cmp    ecx,ebx
  416085:	jae    0x4161da
  41608b:	mov    eax,ecx
  41608d:	shr    eax,1
  41608f:	mov    edx,0x1fffffff
  416094:	sub    edx,eax
  416096:	cmp    edx,ecx
  416098:	jae    0x4160a6
  41609a:	mov    DWORD PTR [ebp-0x18],0x0
  4160a1:	mov    ecx,DWORD PTR [ebp-0x18]
  4160a4:	jmp    0x4160ab
  4160a6:	add    ecx,eax
  4160a8:	mov    DWORD PTR [ebp-0x18],ecx
  4160ab:	cmp    ecx,ebx
  4160ad:	jae    0x4160b4
  4160af:	mov    DWORD PTR [ebp-0x18],ebx
  4160b2:	mov    ecx,ebx
  4160b4:	call   0x416360
  4160b9:	mov    ebx,DWORD PTR [ebp+0x10]
  4160bc:	sub    ebx,DWORD PTR [edi+0xc]
  4160bf:	xor    ecx,ecx
  4160c1:	mov    DWORD PTR [ebp-0x4],ecx
  4160c4:	sar    ebx,0x3
  4160c7:	mov    DWORD PTR [ebp+0x8],eax
  4160ca:	mov    edx,DWORD PTR [ebp+0x8]
  4160cd:	mov    DWORD PTR [ebp-0x1c],ecx
  4160d0:	lea    ecx,[eax+ebx*8]
  4160d3:	mov    BYTE PTR [ebp-0x28],0x0
  4160d7:	mov    eax,DWORD PTR [ebp-0x28]
  4160da:	push   eax
  4160db:	push   edx
  4160dc:	mov    edx,0x1
  4160e1:	mov    DWORD PTR [ebp-0x20],ebx
  4160e4:	call   0x4196c0
  4160e9:	mov    edx,DWORD PTR [ebp+0x8]
  4160ec:	mov    ecx,DWORD PTR [edi+0xc]
  4160ef:	mov    esi,DWORD PTR [ebp+0x10]
  4160f2:	add    esp,0x8
  4160f5:	mov    BYTE PTR [ebp-0x28],0x0
  4160f9:	mov    eax,DWORD PTR [ebp-0x28]
  4160fc:	push   eax
  4160fd:	mov    eax,DWORD PTR [ebp+0x8]
  416100:	push   edx
  416101:	mov    DWORD PTR [ebp-0x1c],0x1
  416108:	call   0x41da50
  41610d:	mov    edx,DWORD PTR [ebp+0x8]
  416110:	mov    eax,DWORD PTR [ebp+0x8]
  416113:	mov    esi,DWORD PTR [edi+0x10]
  416116:	add    esp,0x8
  416119:	mov    BYTE PTR [ebp-0x28],0x0
  41611d:	mov    ecx,DWORD PTR [ebp-0x28]
  416120:	push   ecx
  416121:	mov    ecx,DWORD PTR [ebp+0x10]
  416124:	lea    eax,[eax+ebx*8+0x8]
  416128:	push   edx
  416129:	mov    DWORD PTR [ebp-0x1c],0x2
  416130:	call   0x41da50
  416135:	mov    DWORD PTR [ebp-0x4],0xffffffff
  41613c:	mov    ebx,DWORD PTR [edi+0x10]
  41613f:	mov    eax,DWORD PTR [edi+0xc]
  416142:	mov    esi,ebx
  416144:	sub    esi,eax
  416146:	sar    esi,0x3
  416149:	add    esp,0x8
  41614c:	inc    esi
  41614d:	test   eax,eax
  41614f:	je     0x416169
  416151:	mov    ecx,DWORD PTR [ebp+0x8]
  416154:	push   ecx
  416155:	call   0x419670
  41615a:	mov    edx,DWORD PTR [edi+0xc]
  41615d:	add    esp,0x4
  416160:	push   edx
  416161:	call   0x42504a
  416166:	add    esp,0x4
  416169:	mov    eax,DWORD PTR [ebp+0x8]
  41616c:	mov    ecx,DWORD PTR [ebp-0x18]
  41616f:	lea    edx,[eax+ecx*8]
  416172:	lea    ecx,[eax+esi*8]
  416175:	mov    DWORD PTR [edi+0x14],edx
  416178:	mov    DWORD PTR [edi+0x10],ecx
  41617b:	mov    DWORD PTR [edi+0xc],eax
  41617e:	mov    ecx,DWORD PTR [ebp-0xc]
  416181:	mov    DWORD PTR fs:0x0,ecx
  416188:	pop    ecx
  416189:	pop    edi
  41618a:	pop    esi
  41618b:	pop    ebx
  41618c:	mov    esp,ebp
  41618e:	pop    ebp
  41618f:	ret    0xc
  416192:	cmp    DWORD PTR [ebp-0x1c],0x1
  416196:	mov    esi,DWORD PTR [ebp+0x8]
  416199:	mov    edi,DWORD PTR [ebp-0x20]
  41619c:	jle    0x4161af
  41619e:	mov    edx,DWORD PTR [ebp+0x8]
  4161a1:	push   edx
  4161a2:	lea    ebx,[esi+edi*8]
  4161a5:	mov    eax,esi
  4161a7:	call   0x419670
  4161ac:	add    esp,0x4
  4161af:	cmp    DWORD PTR [ebp-0x1c],0x0
  4161b3:	jle    0x4161c8
  4161b5:	mov    eax,DWORD PTR [ebp+0x8]
  4161b8:	push   eax
  4161b9:	lea    ebx,[esi+edi*8+0x8]
  4161bd:	lea    eax,[esi+edi*8]
  4161c0:	call   0x419670
  4161c5:	add    esp,0x4
  4161c8:	push   esi
  4161c9:	call   0x42504a
  4161ce:	add    esp,0x4
  4161d1:	push   0x0
  4161d3:	push   0x0
  4161d5:	call   0x429e76
  4161da:	mov    ecx,DWORD PTR [ebp+0x10]
  4161dd:	sub    edx,ecx
  4161df:	sar    edx,0x3
  4161e2:	cmp    edx,0x1
  4161e5:	jae    0x41628b
  4161eb:	mov    eax,DWORD PTR [esi+0x4]
  4161ee:	mov    edx,DWORD PTR [esi]
  4161f0:	mov    DWORD PTR [ebp-0x24],edx
  4161f3:	mov    DWORD PTR [ebp-0x20],eax
  4161f6:	test   eax,eax
  4161f8:	je     0x416209
  4161fa:	add    eax,0x4
  4161fd:	mov    ecx,0x1
  416202:	lock xadd DWORD PTR [eax],ecx
  416206:	mov    ecx,DWORD PTR [ebp+0x10]
  416209:	lea    edx,[ecx+0x8]
  41620c:	mov    ebx,0x2
  416211:	push   edx
  416212:	mov    DWORD PTR [ebp-0x4],ebx
  416215:	mov    esi,DWORD PTR [edi+0x10]
  416218:	push   ecx
  416219:	call   0x417cc0
  41621e:	mov    BYTE PTR [ebp-0x4],0x3
  416222:	mov    ecx,DWORD PTR [edi+0x10]
  416225:	mov    eax,ecx
  416227:	sub    eax,DWORD PTR [ebp+0x10]
  41622a:	mov    edx,0x1
  41622f:	sar    eax,0x3
  416232:	sub    edx,eax
  416234:	mov    BYTE PTR [ebp-0x28],0x0
  416238:	mov    eax,DWORD PTR [ebp-0x28]
  41623b:	push   eax
  41623c:	mov    eax,DWORD PTR [ebp+0x8]
  41623f:	push   eax
  416240:	lea    esi,[ebp-0x24]
  416243:	call   0x4196c0
  416248:	mov    DWORD PTR [ebp-0x4],ebx
  41624b:	add    DWORD PTR [edi+0x10],0x8
  41624f:	mov    edi,DWORD PTR [edi+0x10]
  416252:	add    esp,0x8
  416255:	lea    eax,[edi-0x8]
  416258:	push   eax
  416259:	mov    eax,DWORD PTR [ebp+0x10]
  41625c:	mov    ebx,esi
  41625e:	call   0x419880
  416263:	mov    ecx,esi
  416265:	jmp    0x4162da
  416267:	mov    edx,DWORD PTR [ebp+0x8]
  41626a:	mov    ecx,DWORD PTR [ebp+0x8]
  41626d:	mov    ebx,DWORD PTR [edx+0x10]
  416270:	mov    eax,DWORD PTR [ebp+0x10]
  416273:	push   ecx
  416274:	add    ebx,0x8
  416277:	add    eax,0x8
  41627a:	call   0x419670
  41627f:	add    esp,0x4
  416282:	push   0x0
  416284:	push   0x0
  416286:	call   0x429e76
  41628b:	mov    eax,DWORD PTR [esi]
  41628d:	mov    DWORD PTR [ebp-0x2c],eax
  416290:	mov    eax,DWORD PTR [esi+0x4]
  416293:	mov    DWORD PTR [ebp-0x28],eax
  416296:	test   eax,eax
  416298:	je     0x4162a6
  41629a:	add    eax,0x4
  41629d:	mov    ecx,0x1
  4162a2:	lock xadd DWORD PTR [eax],ecx
  4162a6:	mov    DWORD PTR [ebp-0x4],0x5
  4162ad:	mov    esi,DWORD PTR [edi+0x10]
  4162b0:	push   esi
  4162b1:	lea    ebx,[esi-0x8]
  4162b4:	push   ebx
  4162b5:	call   0x417cc0
  4162ba:	mov    DWORD PTR [edi+0x10],eax
  4162bd:	mov    eax,ebx
  4162bf:	mov    ebx,DWORD PTR [ebp+0x10]
  4162c2:	mov    edi,esi
  4162c4:	call   0x417cf0
  4162c9:	mov    eax,DWORD PTR [ebp+0x10]
  4162cc:	lea    ecx,[eax+0x8]
  4162cf:	push   ecx
  4162d0:	lea    ebx,[ebp-0x2c]
  4162d3:	call   0x419880
  4162d8:	mov    ecx,ebx
  4162da:	add    esp,0x4
  4162dd:	mov    DWORD PTR [ebp-0x4],0xffffffff
  4162e4:	call   0x40cef0
  4162e9:	mov    ecx,DWORD PTR [ebp-0xc]
  4162ec:	mov    DWORD PTR fs:0x0,ecx
  4162f3:	pop    ecx
  4162f4:	pop    edi
  4162f5:	pop    esi
  4162f6:	pop    ebx
  4162f7:	mov    esp,ebp
  4162f9:	pop    ebp
  4162fa:	ret    0xc
  4162fd:	int3   
  4162fe:	int3   
  4162ff:	int3   
  416300:	push   0xffffffff
  416302:	push   0x42beb9
  416307:	mov    eax,fs:0x0
  41630d:	push   eax
  41630e:	sub    esp,0x44
  416311:	mov    eax,ds:0x43e020
  416316:	xor    eax,esp
  416318:	push   eax
  416319:	lea    eax,[esp+0x48]
  41631d:	mov    fs:0x0,eax
  416323:	push   0x4329a8
  416328:	lea    ecx,[esp+0x8]
  41632c:	call   DWORD PTR ds:0x43011c
  416332:	lea    eax,[esp+0x4]
  416336:	push   eax
  416337:	lea    ecx,[esp+0x24]
  41633b:	mov    DWORD PTR [esp+0x54],0x0
  416343:	call   0x402940
  416348:	push   0x435684
  41634d:	lea    ecx,[esp+0x24]
  416351:	push   ecx
  416352:	mov    DWORD PTR [esp+0x28],0x430604
  41635a:	call   0x429e76
  41635f:	int3   
  416360:	sub    esp,0x10
  416363:	test   ecx,ecx
  416365:	ja     0x41637d
  416367:	xor    ecx,ecx
  416369:	lea    edx,[ecx*8+0x0]
  416370:	push   edx
  416371:	call   0x425050
  416376:	add    esp,0x4
  416379:	add    esp,0x10
  41637c:	ret    
  41637d:	or     eax,0xffffffff
  416380:	xor    edx,edx
  416382:	div    ecx
  416384:	cmp    eax,0x8
  416387:	jae    0x416369
  416389:	lea    eax,[esp]
  41638c:	push   eax
  41638d:	lea    ecx,[esp+0x8]
  416391:	mov    DWORD PTR [esp+0x4],0x0
  416399:	call   DWORD PTR ds:0x430398
  41639f:	push   0x4356bc
  4163a4:	lea    ecx,[esp+0x8]
  4163a8:	push   ecx
  4163a9:	mov    DWORD PTR [esp+0xc],0x4305ec
  4163b1:	call   0x429e76
  4163b6:	int3   
  4163b7:	int3   
  4163b8:	int3   
  4163b9:	int3   
  4163ba:	int3   
  4163bb:	int3   
  4163bc:	int3   
  4163bd:	int3   
  4163be:	int3   
  4163bf:	int3   
  4163c0:	push   0xffffffff
  4163c2:	push   0x42ccf9
  4163c7:	mov    eax,fs:0x0
  4163cd:	push   eax
  4163ce:	sub    esp,0x44
  4163d1:	push   ebx
  4163d2:	push   ebp
  4163d3:	push   esi
  4163d4:	push   edi
  4163d5:	mov    eax,ds:0x43e020
  4163da:	xor    eax,esp
  4163dc:	push   eax
  4163dd:	lea    eax,[esp+0x58]
  4163e1:	mov    fs:0x0,eax
  4163e7:	mov    eax,DWORD PTR [esp+0x74]
  4163eb:	cmp    BYTE PTR [eax+0x29],0x0
  4163ef:	je     0x41642d
  4163f1:	push   0x431e44
  4163f6:	lea    ecx,[esp+0x18]
  4163fa:	call   DWORD PTR ds:0x43011c
  416400:	lea    eax,[esp+0x14]
  416404:	push   eax
  416405:	lea    ecx,[esp+0x34]
  416409:	mov    DWORD PTR [esp+0x64],0x0
  416411:	call   0x402940
  416416:	push   0x435d50
  41641b:	lea    ecx,[esp+0x34]
  41641f:	push   ecx
  416420:	mov    DWORD PTR [esp+0x38],0x431490
  416428:	call   0x429e76
  41642d:	lea    esi,[esp+0x70]
  416431:	mov    ebp,eax
  416433:	call   0x415a40
  416438:	mov    ecx,DWORD PTR [ebp+0x0]
  41643b:	cmp    BYTE PTR [ecx+0x29],0x0
  41643f:	je     0x416446
  416441:	mov    edi,DWORD PTR [ebp+0x8]
  416444:	jmp    0x416461
  416446:	mov    edx,DWORD PTR [ebp+0x8]
  416449:	cmp    BYTE PTR [edx+0x29],0x0
  41644d:	je     0x416453
  41644f:	mov    edi,ecx
  416451:	jmp    0x416461
  416453:	mov    eax,DWORD PTR [esp+0x74]
  416457:	mov    edi,DWORD PTR [eax+0x8]
  41645a:	lea    edx,[eax+0x8]
  41645d:	cmp    eax,ebp
  41645f:	jne    0x4164d5
  416461:	cmp    BYTE PTR [edi+0x29],0x0
  416465:	mov    esi,DWORD PTR [ebp+0x4]
  416468:	jne    0x41646d
  41646a:	mov    DWORD PTR [edi+0x4],esi
  41646d:	mov    ecx,DWORD PTR [esp+0x68]
  416471:	mov    eax,DWORD PTR [ecx+0x18]
  416474:	cmp    DWORD PTR [eax+0x4],ebp
  416477:	jne    0x41647e
  416479:	mov    DWORD PTR [eax+0x4],edi
  41647c:	jmp    0x416489
  41647e:	cmp    DWORD PTR [esi],ebp
  416480:	jne    0x416486
  416482:	mov    DWORD PTR [esi],edi
  416484:	jmp    0x416489
  416486:	mov    DWORD PTR [esi+0x8],edi
  416489:	mov    edx,DWORD PTR [ecx+0x18]
  41648c:	cmp    DWORD PTR [edx],ebp
  41648e:	jne    0x4164b0
  416490:	cmp    BYTE PTR [edi+0x29],0x0
  416494:	je     0x41649a
  416496:	mov    ecx,esi
  416498:	jmp    0x4164ae
  41649a:	mov    eax,DWORD PTR [edi]
  41649c:	cmp    BYTE PTR [eax+0x29],0x0
  4164a0:	mov    ecx,edi
  4164a2:	jne    0x4164ae
  4164a4:	mov    ecx,eax
  4164a6:	mov    eax,DWORD PTR [ecx]
  4164a8:	cmp    BYTE PTR [eax+0x29],0x0
  4164ac:	je     0x4164a4
  4164ae:	mov    DWORD PTR [edx],ecx
  4164b0:	mov    eax,DWORD PTR [esp+0x68]
  4164b4:	mov    ebx,DWORD PTR [eax+0x18]
  4164b7:	cmp    DWORD PTR [ebx+0x8],ebp
  4164ba:	jne    0x416536
  4164bc:	cmp    BYTE PTR [edi+0x29],0x0
  4164c0:	je     0x4164c9
  4164c2:	mov    eax,esi
  4164c4:	mov    DWORD PTR [ebx+0x8],eax
  4164c7:	jmp    0x416536
  4164c9:	mov    eax,edi
  4164cb:	call   0x4168a0
  4164d0:	mov    DWORD PTR [ebx+0x8],eax
  4164d3:	jmp    0x416536
  4164d5:	mov    DWORD PTR [ecx+0x4],eax
  4164d8:	mov    ecx,DWORD PTR [ebp+0x0]
  4164db:	mov    DWORD PTR [eax],ecx
  4164dd:	cmp    eax,DWORD PTR [ebp+0x8]
  4164e0:	jne    0x4164e6
  4164e2:	mov    esi,eax
  4164e4:	jmp    0x4164ff
  4164e6:	cmp    BYTE PTR [edi+0x29],0x0
  4164ea:	mov    esi,DWORD PTR [eax+0x4]
  4164ed:	jne    0x4164f2
  4164ef:	mov    DWORD PTR [edi+0x4],esi
  4164f2:	mov    DWORD PTR [esi],edi
  4164f4:	mov    ecx,DWORD PTR [ebp+0x8]
  4164f7:	mov    DWORD PTR [edx],ecx
  4164f9:	mov    edx,DWORD PTR [ebp+0x8]
  4164fc:	mov    DWORD PTR [edx+0x4],eax
  4164ff:	mov    ecx,DWORD PTR [esp+0x68]
  416503:	mov    ecx,DWORD PTR [ecx+0x18]
  416506:	cmp    DWORD PTR [ecx+0x4],ebp
  416509:	jne    0x416510
  41650b:	mov    DWORD PTR [ecx+0x4],eax
  41650e:	jmp    0x41651e
  416510:	mov    ecx,DWORD PTR [ebp+0x4]
  416513:	cmp    DWORD PTR [ecx],ebp
  416515:	jne    0x41651b
  416517:	mov    DWORD PTR [ecx],eax
  416519:	jmp    0x41651e
  41651b:	mov    DWORD PTR [ecx+0x8],eax
  41651e:	mov    edx,DWORD PTR [ebp+0x4]
  416521:	mov    DWORD PTR [eax+0x4],edx
  416524:	lea    ecx,[ebp+0x28]
  416527:	add    eax,0x28
  41652a:	cmp    eax,ecx
  41652c:	je     0x416536
  41652e:	mov    bl,BYTE PTR [ecx]
  416530:	mov    dl,BYTE PTR [eax]
  416532:	mov    BYTE PTR [eax],bl
  416534:	mov    BYTE PTR [ecx],dl
  416536:	mov    bl,0x1
  416538:	cmp    BYTE PTR [ebp+0x28],bl
  41653b:	jne    0x41665b
  416541:	mov    eax,DWORD PTR [esp+0x68]
  416545:	mov    ecx,DWORD PTR [eax+0x18]
  416548:	cmp    edi,DWORD PTR [ecx+0x4]
  41654b:	je     0x416658
  416551:	cmp    BYTE PTR [edi+0x28],bl
  416554:	jne    0x416658
  41655a:	mov    ecx,DWORD PTR [esi]
  41655c:	cmp    edi,ecx
  41655e:	jne    0x4165d6
  416560:	mov    ecx,DWORD PTR [esi+0x8]
  416563:	cmp    BYTE PTR [ecx+0x28],0x0
  416567:	jne    0x41657f
  416569:	mov    edx,DWORD PTR [esp+0x68]
  41656d:	mov    BYTE PTR [ecx+0x28],bl
  416570:	push   edx
  416571:	mov    ecx,esi
  416573:	mov    BYTE PTR [esi+0x28],0x0
  416577:	call   0x415570
  41657c:	mov    ecx,DWORD PTR [esi+0x8]
  41657f:	cmp    BYTE PTR [ecx+0x29],0x0
  416583:	jne    0x41660a
  416589:	mov    eax,DWORD PTR [ecx]
  41658b:	cmp    BYTE PTR [eax+0x28],bl
  41658e:	jne    0x416598
  416590:	mov    edx,DWORD PTR [ecx+0x8]
  416593:	cmp    BYTE PTR [edx+0x28],bl
  416596:	je     0x416606
  416598:	mov    eax,DWORD PTR [ecx+0x8]
  41659b:	cmp    BYTE PTR [eax+0x28],bl
  41659e:	jne    0x4165b6
  4165a0:	mov    edx,DWORD PTR [ecx]
  4165a2:	mov    eax,DWORD PTR [esp+0x68]
  4165a6:	mov    BYTE PTR [edx+0x28],bl
  4165a9:	push   eax
  4165aa:	mov    BYTE PTR [ecx+0x28],0x0
  4165ae:	call   0x4155c0
  4165b3:	mov    ecx,DWORD PTR [esi+0x8]
  4165b6:	mov    dl,BYTE PTR [esi+0x28]
  4165b9:	mov    BYTE PTR [ecx+0x28],dl
  4165bc:	mov    BYTE PTR [esi+0x28],bl
  4165bf:	mov    eax,DWORD PTR [ecx+0x8]
  4165c2:	mov    ecx,DWORD PTR [esp+0x68]
  4165c6:	push   ecx
  4165c7:	mov    ecx,esi
  4165c9:	mov    BYTE PTR [eax+0x28],bl
  4165cc:	call   0x415570
  4165d1:	jmp    0x416658
  4165d6:	cmp    BYTE PTR [ecx+0x28],0x0
  4165da:	jne    0x4165f1
  4165dc:	mov    eax,DWORD PTR [esp+0x68]
  4165e0:	mov    BYTE PTR [ecx+0x28],bl
  4165e3:	push   eax
  4165e4:	mov    ecx,esi
  4165e6:	mov    BYTE PTR [esi+0x28],0x0
  4165ea:	call   0x4155c0
  4165ef:	mov    ecx,DWORD PTR [esi]
  4165f1:	cmp    BYTE PTR [ecx+0x29],0x0
  4165f5:	jne    0x41660a
  4165f7:	mov    edx,DWORD PTR [ecx+0x8]
  4165fa:	cmp    BYTE PTR [edx+0x28],bl
  4165fd:	jne    0x416621
  4165ff:	mov    eax,DWORD PTR [ecx]
  416601:	cmp    BYTE PTR [eax+0x28],bl
  416604:	jne    0x416621
  416606:	mov    BYTE PTR [ecx+0x28],0x0
  41660a:	mov    ecx,DWORD PTR [esp+0x68]
  41660e:	mov    edx,DWORD PTR [ecx+0x18]
  416611:	mov    edi,esi
  416613:	mov    esi,DWORD PTR [esi+0x4]
  416616:	cmp    edi,DWORD PTR [edx+0x4]
  416619:	jne    0x416551
  41661f:	jmp    0x416658
  416621:	mov    edx,DWORD PTR [ecx]
  416623:	cmp    BYTE PTR [edx+0x28],bl
  416626:	jne    0x41663e
  416628:	mov    eax,DWORD PTR [ecx+0x8]
  41662b:	mov    edx,DWORD PTR [esp+0x68]
  41662f:	mov    BYTE PTR [eax+0x28],bl
  416632:	push   edx
  416633:	mov    BYTE PTR [ecx+0x28],0x0
  416637:	call   0x415570
  41663c:	mov    ecx,DWORD PTR [esi]
  41663e:	mov    al,BYTE PTR [esi+0x28]
  416641:	mov    edx,DWORD PTR [esp+0x68]
  416645:	mov    BYTE PTR [ecx+0x28],al
  416648:	mov    BYTE PTR [esi+0x28],bl
  41664b:	mov    ecx,DWORD PTR [ecx]
  41664d:	mov    BYTE PTR [ecx+0x28],bl
  416650:	push   edx
  416651:	mov    ecx,esi
  416653:	call   0x4155c0
  416658:	mov    BYTE PTR [edi+0x28],bl
  41665b:	lea    ecx,[ebp+0xc]
  41665e:	call   DWORD PTR ds:0x430264
  416664:	push   ebp
  416665:	call   0x42504a
  41666a:	mov    ecx,DWORD PTR [esp+0x6c]
  41666e:	mov    eax,DWORD PTR [ecx+0x1c]
  416671:	add    esp,0x4
  416674:	test   eax,eax
  416676:	jbe    0x41667c
  416678:	dec    eax
  416679:	mov    DWORD PTR [ecx+0x1c],eax
  41667c:	mov    edx,DWORD PTR [esp+0x6c]
  416680:	mov    eax,DWORD PTR [esp+0x74]
  416684:	mov    ecx,DWORD PTR [ecx]
  416686:	mov    DWORD PTR [edx+0x4],eax
  416689:	mov    DWORD PTR [edx],ecx
  41668b:	mov    eax,edx
  41668d:	mov    ecx,DWORD PTR [esp+0x58]
  416691:	mov    DWORD PTR fs:0x0,ecx
  416698:	pop    ecx
  416699:	pop    edi
  41669a:	pop    esi
  41669b:	pop    ebp
  41669c:	pop    ebx
  41669d:	add    esp,0x50
  4166a0:	ret    0x10
  4166a3:	int3   
  4166a4:	int3   
  4166a5:	int3   
  4166a6:	int3   
  4166a7:	int3   
  4166a8:	int3   
  4166a9:	int3   
  4166aa:	int3   
  4166ab:	int3   
  4166ac:	int3   
  4166ad:	int3   
  4166ae:	int3   
  4166af:	int3   
  4166b0:	push   0x2c
  4166b2:	call   0x425050
  4166b7:	add    esp,0x4
  4166ba:	test   eax,eax
  4166bc:	je     0x4166c4
  4166be:	mov    DWORD PTR [eax],0x0
  4166c4:	lea    ecx,[eax+0x4]
  4166c7:	test   ecx,ecx
  4166c9:	je     0x4166d1
  4166cb:	mov    DWORD PTR [ecx],0x0
  4166d1:	lea    ecx,[eax+0x8]
  4166d4:	test   ecx,ecx
  4166d6:	je     0x4166de
  4166d8:	mov    DWORD PTR [ecx],0x0
  4166de:	mov    BYTE PTR [eax+0x28],0x1
  4166e2:	mov    BYTE PTR [eax+0x29],0x0
  4166e6:	ret    
  4166e7:	int3   
  4166e8:	int3   
  4166e9:	int3   
  4166ea:	int3   
  4166eb:	int3   
  4166ec:	int3   
  4166ed:	int3   
  4166ee:	int3   
  4166ef:	int3   
  4166f0:	cmp    DWORD PTR [esi],0x0
  4166f3:	push   edi
  4166f4:	mov    edi,DWORD PTR ds:0x430390
  4166fa:	jne    0x4166fe
  4166fc:	call   edi
  4166fe:	mov    eax,DWORD PTR [esi+0x4]
  416701:	cmp    BYTE PTR [eax+0x29],0x0
  416705:	je     0x416717
  416707:	mov    eax,DWORD PTR [eax+0x8]
  41670a:	mov    DWORD PTR [esi+0x4],eax
  41670d:	cmp    BYTE PTR [eax+0x29],0x0
  416711:	je     0x416771
  416713:	call   edi
  416715:	pop    edi
  416716:	ret    
  416717:	mov    ecx,DWORD PTR [eax]
  416719:	cmp    BYTE PTR [ecx+0x29],0x0
  41671d:	jne    0x416740
  41671f:	mov    eax,DWORD PTR [ecx+0x8]
  416722:	cmp    BYTE PTR [eax+0x29],0x0
  416726:	jne    0x41673b
  416728:	jmp    0x416730
  41672a:	lea    ebx,[ebx+0x0]
  416730:	mov    ecx,eax
  416732:	mov    eax,DWORD PTR [ecx+0x8]
  416735:	cmp    BYTE PTR [eax+0x29],0x0
  416739:	je     0x416730
  41673b:	mov    DWORD PTR [esi+0x4],ecx
  41673e:	pop    edi
  41673f:	ret    
  416740:	mov    eax,DWORD PTR [eax+0x4]
  416743:	cmp    BYTE PTR [eax+0x29],0x0
  416747:	jne    0x416765
  416749:	lea    esp,[esp+0x0]
  416750:	mov    ecx,DWORD PTR [esi+0x4]
  416753:	cmp    ecx,DWORD PTR [eax]
  416755:	jne    0x416765
  416757:	mov    DWORD PTR [esi+0x4],eax
  41675a:	mov    edx,eax
  41675c:	mov    eax,DWORD PTR [edx+0x4]
  41675f:	cmp    BYTE PTR [eax+0x29],0x0
  416763:	je     0x416750
  416765:	mov    ecx,DWORD PTR [esi+0x4]
  416768:	cmp    BYTE PTR [ecx+0x29],0x0
  41676c:	jne    0x416713
  41676e:	mov    DWORD PTR [esi+0x4],eax
  416771:	pop    edi
  416772:	ret    
  416773:	int3   
  416774:	int3   
  416775:	int3   
  416776:	int3   
  416777:	int3   
  416778:	int3   
  416779:	int3   
  41677a:	int3   
  41677b:	int3   
  41677c:	int3   
  41677d:	int3   
  41677e:	int3   
  41677f:	int3   
  416780:	cmp    DWORD PTR [esi],0x0
  416783:	push   edi
  416784:	mov    edi,DWORD PTR ds:0x430390
  41678a:	jne    0x41678e
  41678c:	call   edi
  41678e:	mov    eax,DWORD PTR [esi+0x4]
  416791:	cmp    BYTE PTR [eax+0x2d],0x0
  416795:	je     0x4167a7
  416797:	mov    eax,DWORD PTR [eax+0x8]
  41679a:	mov    DWORD PTR [esi+0x4],eax
  41679d:	cmp    BYTE PTR [eax+0x2d],0x0
  4167a1:	je     0x416801
  4167a3:	call   edi
  4167a5:	pop    edi
  4167a6:	ret    
  4167a7:	mov    ecx,DWORD PTR [eax]
  4167a9:	cmp    BYTE PTR [ecx+0x2d],0x0
  4167ad:	jne    0x4167d0
  4167af:	mov    eax,DWORD PTR [ecx+0x8]
  4167b2:	cmp    BYTE PTR [eax+0x2d],0x0
  4167b6:	jne    0x4167cb
  4167b8:	jmp    0x4167c0
  4167ba:	lea    ebx,[ebx+0x0]
  4167c0:	mov    ecx,eax
  4167c2:	mov    eax,DWORD PTR [ecx+0x8]
  4167c5:	cmp    BYTE PTR [eax+0x2d],0x0
  4167c9:	je     0x4167c0
  4167cb:	mov    DWORD PTR [esi+0x4],ecx
  4167ce:	pop    edi
  4167cf:	ret    
  4167d0:	mov    eax,DWORD PTR [eax+0x4]
  4167d3:	cmp    BYTE PTR [eax+0x2d],0x0
  4167d7:	jne    0x4167f5
  4167d9:	lea    esp,[esp+0x0]
  4167e0:	mov    ecx,DWORD PTR [esi+0x4]
  4167e3:	cmp    ecx,DWORD PTR [eax]
  4167e5:	jne    0x4167f5
  4167e7:	mov    DWORD PTR [esi+0x4],eax
  4167ea:	mov    edx,eax
  4167ec:	mov    eax,DWORD PTR [edx+0x4]
  4167ef:	cmp    BYTE PTR [eax+0x2d],0x0
  4167f3:	je     0x4167e0
  4167f5:	mov    ecx,DWORD PTR [esi+0x4]
  4167f8:	cmp    BYTE PTR [ecx+0x2d],0x0
  4167fc:	jne    0x4167a3
  4167fe:	mov    DWORD PTR [esi+0x4],eax
  416801:	pop    edi
  416802:	ret    
  416803:	int3   
  416804:	int3   
  416805:	int3   
  416806:	int3   
  416807:	int3   
  416808:	int3   
  416809:	int3   
  41680a:	int3   
  41680b:	int3   
  41680c:	int3   
  41680d:	int3   
  41680e:	int3   
  41680f:	int3   
  416810:	cmp    DWORD PTR [esi],0x0
  416813:	push   edi
  416814:	mov    edi,DWORD PTR ds:0x430390
  41681a:	jne    0x41681e
  41681c:	call   edi
  41681e:	mov    eax,DWORD PTR [esi+0x4]
  416821:	cmp    BYTE PTR [eax+0x2d],0x0
  416825:	je     0x41682b
  416827:	call   edi
  416829:	pop    edi
  41682a:	ret    
  41682b:	mov    ecx,DWORD PTR [eax+0x8]
  41682e:	cmp    BYTE PTR [ecx+0x2d],0x0
  416832:	jne    0x41684f
  416834:	mov    eax,DWORD PTR [ecx]
  416836:	cmp    BYTE PTR [eax+0x2d],0x0
  41683a:	jne    0x41684a
  41683c:	lea    esp,[esp+0x0]
  416840:	mov    ecx,eax
  416842:	mov    eax,DWORD PTR [ecx]
  416844:	cmp    BYTE PTR [eax+0x2d],0x0
  416848:	je     0x416840
  41684a:	mov    DWORD PTR [esi+0x4],ecx
  41684d:	pop    edi
  41684e:	ret    
  41684f:	mov    eax,DWORD PTR [eax+0x4]
  416852:	cmp    BYTE PTR [eax+0x2d],0x0
  416856:	jne    0x41686e
  416858:	mov    ecx,DWORD PTR [esi+0x4]
  41685b:	cmp    ecx,DWORD PTR [eax+0x8]
  41685e:	jne    0x41686e
  416860:	mov    DWORD PTR [esi+0x4],eax
  416863:	mov    edx,eax
  416865:	mov    eax,DWORD PTR [edx+0x4]
  416868:	cmp    BYTE PTR [eax+0x2d],0x0
  41686c:	je     0x416858
  41686e:	mov    DWORD PTR [esi+0x4],eax
  416871:	pop    edi
  416872:	ret    
  416873:	int3   
  416874:	int3   
  416875:	int3   
  416876:	int3   
  416877:	int3   
  416878:	int3   
  416879:	int3   
  41687a:	int3   
  41687b:	int3   
  41687c:	int3   
  41687d:	int3   
  41687e:	int3   
  41687f:	int3   
  416880:	mov    ecx,DWORD PTR [eax+0x8]
  416883:	cmp    BYTE PTR [ecx+0x2d],0x0
  416887:	jne    0x41689b
  416889:	lea    esp,[esp+0x0]
  416890:	mov    eax,ecx
  416892:	mov    ecx,DWORD PTR [eax+0x8]
  416895:	cmp    BYTE PTR [ecx+0x2d],0x0
  416899:	je     0x416890
  41689b:	ret    
  41689c:	int3   
  41689d:	int3   
  41689e:	int3   
  41689f:	int3   
  4168a0:	mov    ecx,DWORD PTR [eax+0x8]
  4168a3:	cmp    BYTE PTR [ecx+0x29],0x0
  4168a7:	jne    0x4168bb
  4168a9:	lea    esp,[esp+0x0]
  4168b0:	mov    eax,ecx
  4168b2:	mov    ecx,DWORD PTR [eax+0x8]
  4168b5:	cmp    BYTE PTR [ecx+0x29],0x0
  4168b9:	je     0x4168b0
  4168bb:	ret    
  4168bc:	int3   
  4168bd:	int3   
  4168be:	int3   
  4168bf:	int3   
  4168c0:	mov    eax,DWORD PTR [edi+0x18]
  4168c3:	sub    esp,0x14
  4168c6:	push   ebx
  4168c7:	xor    ebx,ebx
  4168c9:	push   esi
  4168ca:	cmp    eax,ebx
  4168cc:	je     0x4168da
  4168ce:	mov    edi,edi
  4168d0:	mov    DWORD PTR [eax+0x10],ebx
  4168d3:	mov    eax,DWORD PTR [eax+0x2c]
  4168d6:	cmp    eax,ebx
  4168d8:	jne    0x4168d0
  4168da:	mov    eax,DWORD PTR [edi+0x20]
  4168dd:	mov    DWORD PTR [edi+0x18],ebx
  4168e0:	cmp    eax,ebx
  4168e2:	je     0x4168ee
  4168e4:	mov    DWORD PTR [eax+0x10],ebx
  4168e7:	mov    eax,DWORD PTR [eax+0x18]
  4168ea:	cmp    eax,ebx
  4168ec:	jne    0x4168e4
  4168ee:	mov    eax,DWORD PTR [esp+0x20]
  4168f2:	mov    DWORD PTR [edi+0x20],ebx
  4168f5:	cmp    BYTE PTR [eax],0xef
  4168f8:	jne    0x416910
  4168fa:	cmp    BYTE PTR [eax+0x1],0xbb
  4168fe:	jne    0x416910
  416900:	cmp    BYTE PTR [eax+0x2],0xbf
  416904:	jne    0x416910
  416906:	add    eax,0x3
  416909:	mov    DWORD PTR [esp+0x20],eax
  41690d:	lea    ecx,[ecx+0x0]
  416910:	mov    esi,DWORD PTR [esp+0x20]
  416914:	movzx  eax,BYTE PTR [esi]
  416917:	cmp    BYTE PTR [eax+0x431ed8],bl
  41691d:	je     0x41692d
  41691f:	nop
  416920:	movzx  ecx,BYTE PTR [esi+0x1]
  416924:	inc    esi
  416925:	cmp    BYTE PTR [ecx+0x431ed8],bl
  41692b:	jne    0x416920
  41692d:	mov    DWORD PTR [esp+0x20],esi
  416931:	mov    al,BYTE PTR [esi]
  416933:	cmp    al,bl
  416935:	je     0x4169a9
  416937:	cmp    al,0x3c
  416939:	jne    0x41697c
  41693b:	inc    esi
  41693c:	lea    edx,[esp+0x20]
  416940:	mov    eax,edi
  416942:	mov    DWORD PTR [esp+0x20],esi
  416946:	call   0x4183f0
  41694b:	cmp    eax,ebx
  41694d:	je     0x416910
  41694f:	cmp    DWORD PTR [edi+0x18],ebx
  416952:	je     0x41696b
  416954:	mov    edx,DWORD PTR [edi+0x1c]
  416957:	mov    DWORD PTR [eax+0x28],edx
  41695a:	mov    ecx,DWORD PTR [edi+0x1c]
  41695d:	mov    DWORD PTR [ecx+0x2c],eax
  416960:	mov    DWORD PTR [edi+0x1c],eax
  416963:	mov    DWORD PTR [eax+0x10],edi
  416966:	mov    DWORD PTR [eax+0x2c],ebx
  416969:	jmp    0x416910
  41696b:	mov    DWORD PTR [eax+0x28],ebx
  41696e:	mov    DWORD PTR [edi+0x18],eax
  416971:	mov    DWORD PTR [edi+0x1c],eax
  416974:	mov    DWORD PTR [eax+0x10],edi
  416977:	mov    DWORD PTR [eax+0x2c],ebx
  41697a:	jmp    0x416910
  41697c:	lea    ecx,[esp+0x8]
  416980:	call   DWORD PTR ds:0x4303ac
  416986:	push   0x435d14
  41698b:	lea    edx,[esp+0xc]
  41698f:	push   edx
  416990:	mov    DWORD PTR [esp+0x10],0x43294c
  416998:	mov    DWORD PTR [esp+0x1c],0x431e60
  4169a0:	mov    DWORD PTR [esp+0x20],esi
  4169a4:	call   0x429e76
  4169a9:	pop    esi
  4169aa:	pop    ebx
  4169ab:	add    esp,0x14
  4169ae:	ret    0x4
  4169b1:	int3   
  4169b2:	int3   
  4169b3:	int3   
  4169b4:	int3   
  4169b5:	int3   
  4169b6:	int3   
  4169b7:	int3   
  4169b8:	int3   
  4169b9:	int3   
  4169ba:	int3   
  4169bb:	int3   
  4169bc:	int3   
  4169bd:	int3   
  4169be:	int3   
  4169bf:	int3   
  4169c0:	push   0xffffffff
  4169c2:	push   0x42e1a8
  4169c7:	mov    eax,fs:0x0
  4169cd:	push   eax
  4169ce:	sub    esp,0x8
  4169d1:	push   esi
  4169d2:	push   edi
  4169d3:	mov    eax,ds:0x43e020
  4169d8:	xor    eax,esp
  4169da:	push   eax
  4169db:	lea    eax,[esp+0x14]
  4169df:	mov    fs:0x0,eax
  4169e5:	mov    eax,DWORD PTR [esp+0x34]
  4169e9:	sub    esp,0x10
  4169ec:	mov    DWORD PTR [esp+0x20],esp
  4169f0:	mov    DWORD PTR [esp+0x2c],0x0
  4169f8:	mov    ecx,DWORD PTR [esp+0x40]
  4169fc:	mov    edi,esp
  4169fe:	push   eax
  4169ff:	sub    esp,0xc
  416a02:	mov    esi,esp
  416a04:	mov    eax,ecx
  416a06:	mov    DWORD PTR [esp+0x30],esp
  416a0a:	mov    DWORD PTR [esi+0x8],ecx
  416a0d:	mov    DWORD PTR [esi],0x0
  416a13:	cmp    eax,0x8
  416a16:	ja     0x416a20
  416a18:	mov    eax,esi
  416a1a:	lea    ecx,[esp+0x48]
  416a1e:	jmp    0x416a2f
  416a20:	push   eax
  416a21:	call   0x425023
  416a26:	mov    DWORD PTR [esi],eax
  416a28:	mov    ecx,DWORD PTR [esp+0x4c]
  416a2c:	add    esp,0x4
  416a2f:	mov    edx,DWORD PTR [esi+0x8]
  416a32:	push   edx
  416a33:	push   ecx
  416a34:	push   eax
  416a35:	call   0x42a018
  416a3a:	add    esp,0xc
  416a3d:	call   0x4185c0
  416a42:	mov    eax,DWORD PTR [esp+0x44]
  416a46:	add    esp,0x10
  416a49:	push   eax
  416a4a:	push   ebx
  416a4b:	call   0x4186d0
  416a50:	add    esp,0x18
  416a53:	cmp    DWORD PTR [esp+0x30],0x8
  416a58:	mov    esi,eax
  416a5a:	jbe    0x416a6d
  416a5c:	mov    eax,DWORD PTR [esp+0x28]
  416a60:	test   eax,eax
  416a62:	je     0x416a6d
  416a64:	push   eax
  416a65:	call   0x42517c
  416a6a:	add    esp,0x4
  416a6d:	mov    eax,esi
  416a6f:	mov    ecx,DWORD PTR [esp+0x14]
  416a73:	mov    DWORD PTR fs:0x0,ecx
  416a7a:	pop    ecx
  416a7b:	pop    edi
  416a7c:	pop    esi
  416a7d:	add    esp,0x14
  416a80:	ret    
  416a81:	int3   
  416a82:	int3   
  416a83:	int3   
  416a84:	int3   
  416a85:	int3   
  416a86:	int3   
  416a87:	int3   
  416a88:	int3   
  416a89:	int3   
  416a8a:	int3   
  416a8b:	int3   
  416a8c:	int3   
  416a8d:	int3   
  416a8e:	int3   
  416a8f:	int3   
  416a90:	sub    esp,0xc
  416a93:	push   ebx
  416a94:	push   esi
  416a95:	mov    esi,eax
  416a97:	mov    eax,0x4316bc
  416a9c:	mov    DWORD PTR [esp+0x8],0x0
  416aa4:	lea    edx,[eax+0x1]
  416aa7:	mov    cl,BYTE PTR [eax]
  416aa9:	inc    eax
  416aaa:	test   cl,cl
  416aac:	jne    0x416aa7
  416aae:	sub    eax,edx
  416ab0:	lea    eax,[eax+0x4316bc]
  416ab6:	lea    ebx,[esp+0x8]
  416aba:	mov    DWORD PTR [esp+0x8],0x4316bc
  416ac2:	mov    DWORD PTR [esp+0xc],eax
  416ac6:	call   0x418560
  416acb:	mov    eax,esi
  416acd:	pop    esi
  416ace:	pop    ebx
  416acf:	add    esp,0xc
  416ad2:	ret    
  416ad3:	int3   
  416ad4:	int3   
  416ad5:	int3   
  416ad6:	int3   
  416ad7:	int3   
  416ad8:	int3   
  416ad9:	int3   
  416ada:	int3   
  416adb:	int3   
  416adc:	int3   
  416add:	int3   
  416ade:	int3   
  416adf:	int3   
  416ae0:	push   0xffffffff
  416ae2:	push   0x42d979
  416ae7:	mov    eax,fs:0x0
  416aed:	push   eax
  416aee:	sub    esp,0x24
  416af1:	mov    eax,ds:0x43e020
  416af6:	xor    eax,esp
  416af8:	mov    DWORD PTR [esp+0x20],eax
  416afc:	push   ebp
  416afd:	push   esi
  416afe:	push   edi
  416aff:	mov    eax,ds:0x43e020
  416b04:	xor    eax,esp
  416b06:	push   eax
  416b07:	lea    eax,[esp+0x34]
  416b0b:	mov    fs:0x0,eax
  416b11:	mov    ebp,DWORD PTR [esp+0x44]
  416b15:	mov    edi,ecx
  416b17:	lea    esi,[esp+0x14]
  416b1b:	call   0x417730
  416b20:	mov    eax,esi
  416b22:	push   eax
  416b23:	mov    edx,ebp
  416b25:	mov    ecx,ebx
  416b27:	mov    DWORD PTR [esp+0x40],0x0
  416b2f:	call   0x40bdb0
  416b34:	mov    ecx,esi
  416b36:	mov    DWORD PTR [esp+0x3c],0xffffffff
  416b3e:	call   DWORD PTR ds:0x430264
  416b44:	mov    ecx,DWORD PTR [esp+0x34]
  416b48:	mov    DWORD PTR fs:0x0,ecx
  416b4f:	pop    ecx
  416b50:	pop    edi
  416b51:	pop    esi
  416b52:	pop    ebp
  416b53:	mov    ecx,DWORD PTR [esp+0x20]
  416b57:	xor    ecx,esp
  416b59:	call   0x42503a
  416b5e:	add    esp,0x30
  416b61:	ret    0x4
  416b64:	int3   
  416b65:	int3   
  416b66:	int3   
  416b67:	int3   
  416b68:	int3   
  416b69:	int3   
  416b6a:	int3   
  416b6b:	int3   
  416b6c:	int3   
  416b6d:	int3   
  416b6e:	int3   
  416b6f:	int3   
  416b70:	push   0xffffffff
  416b72:	push   0x42d939
  416b77:	mov    eax,fs:0x0
  416b7d:	push   eax
  416b7e:	sub    esp,0x24
  416b81:	mov    eax,ds:0x43e020
  416b86:	xor    eax,esp
  416b88:	mov    DWORD PTR [esp+0x20],eax
  416b8c:	mov    eax,ds:0x43e020
  416b91:	xor    eax,esp
  416b93:	push   eax
  416b94:	lea    eax,[esp+0x28]
  416b98:	mov    fs:0x0,eax
  416b9e:	lea    ecx,[esp+0x8]
  416ba2:	call   DWORD PTR ds:0x430254
  416ba8:	lea    eax,[esp+0x8]
  416bac:	push   eax
  416bad:	push   edi
  416bae:	mov    ecx,esi
  416bb0:	mov    DWORD PTR [esp+0x38],0x0
  416bb8:	call   0x40bf80
  416bbd:	lea    ecx,[esp+0x8]
  416bc1:	test   al,al
  416bc3:	je     0x416bd0
  416bc5:	call   0x419af0
  416bca:	mov    DWORD PTR [ebx],eax
  416bcc:	lea    ecx,[esp+0x8]
  416bd0:	mov    DWORD PTR [esp+0x30],0xffffffff
  416bd8:	call   DWORD PTR ds:0x430264
  416bde:	mov    ecx,DWORD PTR [esp+0x28]
  416be2:	mov    DWORD PTR fs:0x0,ecx
  416be9:	pop    ecx
  416bea:	mov    ecx,DWORD PTR [esp+0x20]
  416bee:	xor    ecx,esp
  416bf0:	call   0x42503a
  416bf5:	add    esp,0x30
  416bf8:	ret    
  416bf9:	int3   
  416bfa:	int3   
  416bfb:	int3   
  416bfc:	int3   
  416bfd:	int3   
  416bfe:	int3   
  416bff:	int3   
  416c00:	push   0xffffffff
  416c02:	push   0x42be79
  416c07:	mov    eax,fs:0x0
  416c0d:	push   eax
  416c0e:	sub    esp,0x20
  416c11:	mov    eax,ds:0x43e020
  416c16:	xor    eax,esp
  416c18:	mov    DWORD PTR [esp+0x1c],eax
  416c1c:	mov    eax,ds:0x43e020
  416c21:	xor    eax,esp
  416c23:	push   eax
  416c24:	lea    eax,[esp+0x24]
  416c28:	mov    fs:0x0,eax
  416c2e:	mov    eax,DWORD PTR [esp+0x34]
  416c32:	lea    ecx,[esp+0x4]
  416c36:	call   0x418930
  416c3b:	lea    eax,[esp+0x4]
  416c3f:	push   eax
  416c40:	mov    edx,edi
  416c42:	mov    ecx,esi
  416c44:	mov    DWORD PTR [esp+0x30],0x0
  416c4c:	call   0x40bdb0
  416c51:	lea    ecx,[esp+0x4]
  416c55:	mov    DWORD PTR [esp+0x2c],0xffffffff
  416c5d:	call   DWORD PTR ds:0x430264
  416c63:	mov    ecx,DWORD PTR [esp+0x24]
  416c67:	mov    DWORD PTR fs:0x0,ecx
  416c6e:	pop    ecx
  416c6f:	mov    ecx,DWORD PTR [esp+0x1c]
  416c73:	xor    ecx,esp
  416c75:	call   0x42503a
  416c7a:	add    esp,0x2c
  416c7d:	ret    0x4
  416c80:	push   0xffffffff
  416c82:	push   0x42be42
  416c87:	mov    eax,fs:0x0
  416c8d:	push   eax
  416c8e:	sub    esp,0x3c
  416c91:	mov    eax,ds:0x43e020
  416c96:	xor    eax,esp
  416c98:	mov    DWORD PTR [esp+0x38],eax
  416c9c:	push   ebp
  416c9d:	mov    eax,ds:0x43e020
  416ca2:	xor    eax,esp
  416ca4:	push   eax
  416ca5:	lea    eax,[esp+0x44]
  416ca9:	mov    fs:0x0,eax
  416caf:	mov    ebp,DWORD PTR [esp+0x54]
  416cb3:	lea    ecx,[esp+0x24]
  416cb7:	call   DWORD PTR ds:0x430254
  416cbd:	lea    eax,[esp+0x24]
  416cc1:	push   eax
  416cc2:	push   edi
  416cc3:	mov    ecx,esi
  416cc5:	mov    DWORD PTR [esp+0x54],0x0
  416ccd:	call   0x40bf80
  416cd2:	test   al,al
  416cd4:	je     0x416d00
  416cd6:	lea    eax,[esp+0x24]
  416cda:	lea    ecx,[esp+0x8]
  416cde:	call   0x418930
  416ce3:	push   eax
  416ce4:	mov    ecx,ebp
  416ce6:	mov    BYTE PTR [esp+0x50],0x1
  416ceb:	call   DWORD PTR ds:0x43017c
  416cf1:	lea    ecx,[esp+0x8]
  416cf5:	mov    BYTE PTR [esp+0x4c],0x0
  416cfa:	call   DWORD PTR ds:0x430264
  416d00:	lea    ecx,[esp+0x24]
  416d04:	mov    DWORD PTR [esp+0x4c],0xffffffff
  416d0c:	call   DWORD PTR ds:0x430264
  416d12:	mov    ecx,DWORD PTR [esp+0x44]
  416d16:	mov    DWORD PTR fs:0x0,ecx
  416d1d:	pop    ecx
  416d1e:	pop    ebp
  416d1f:	mov    ecx,DWORD PTR [esp+0x38]
  416d23:	xor    ecx,esp
  416d25:	call   0x42503a
  416d2a:	add    esp,0x48
  416d2d:	ret    0x4
  416d30:	push   0xffffffff
  416d32:	push   0x42d8f9
  416d37:	mov    eax,fs:0x0
  416d3d:	push   eax
  416d3e:	sub    esp,0x20
  416d41:	mov    eax,ds:0x43e020
  416d46:	xor    eax,esp
  416d48:	mov    DWORD PTR [esp+0x1c],eax
  416d4c:	push   esi
  416d4d:	mov    eax,ds:0x43e020
  416d52:	xor    eax,esp
  416d54:	push   eax
  416d55:	lea    eax,[esp+0x28]
  416d59:	mov    fs:0x0,eax
  416d5f:	lea    esi,[esp+0x8]
  416d63:	call   0x4075f0
  416d68:	mov    eax,esi
  416d6a:	push   eax
  416d6b:	mov    edx,ebx
  416d6d:	mov    ecx,edi
  416d6f:	mov    DWORD PTR [esp+0x34],0x0
  416d77:	call   0x40bdb0
  416d7c:	mov    ecx,esi
  416d7e:	mov    DWORD PTR [esp+0x30],0xffffffff
  416d86:	call   DWORD PTR ds:0x430264
  416d8c:	mov    ecx,DWORD PTR [esp+0x28]
  416d90:	mov    DWORD PTR fs:0x0,ecx
  416d97:	pop    ecx
  416d98:	pop    esi
  416d99:	mov    ecx,DWORD PTR [esp+0x1c]
  416d9d:	xor    ecx,esp
  416d9f:	call   0x42503a
  416da4:	add    esp,0x2c
  416da7:	ret    
  416da8:	int3   
  416da9:	int3   
  416daa:	int3   
  416dab:	int3   
  416dac:	int3   
  416dad:	int3   
  416dae:	int3   
  416daf:	int3   
  416db0:	push   0xffffffff
  416db2:	push   0x42d939
  416db7:	mov    eax,fs:0x0
  416dbd:	push   eax
  416dbe:	sub    esp,0x24
  416dc1:	mov    eax,ds:0x43e020
  416dc6:	xor    eax,esp
  416dc8:	mov    DWORD PTR [esp+0x20],eax
  416dcc:	mov    eax,ds:0x43e020
  416dd1:	xor    eax,esp
  416dd3:	push   eax
  416dd4:	lea    eax,[esp+0x28]
  416dd8:	mov    fs:0x0,eax
  416dde:	lea    ecx,[esp+0x8]
  416de2:	call   DWORD PTR ds:0x430254
  416de8:	lea    eax,[esp+0x8]
  416dec:	push   eax
  416ded:	push   edi
  416dee:	mov    ecx,esi
  416df0:	mov    DWORD PTR [esp+0x38],0x0
  416df8:	call   0x40bf80
  416dfd:	lea    ecx,[esp+0x8]
  416e01:	test   al,al
  416e03:	je     0x416e14
  416e05:	push   ecx
  416e06:	call   0x418000
  416e0b:	add    esp,0x4
  416e0e:	mov    DWORD PTR [ebx],eax
  416e10:	lea    ecx,[esp+0x8]
  416e14:	mov    DWORD PTR [esp+0x30],0xffffffff
  416e1c:	call   DWORD PTR ds:0x430264
  416e22:	mov    ecx,DWORD PTR [esp+0x28]
  416e26:	mov    DWORD PTR fs:0x0,ecx
  416e2d:	pop    ecx
  416e2e:	mov    ecx,DWORD PTR [esp+0x20]
  416e32:	xor    ecx,esp
  416e34:	call   0x42503a
  416e39:	add    esp,0x30
  416e3c:	ret    
  416e3d:	int3   
  416e3e:	int3   
  416e3f:	int3   
  416e40:	push   ebp
  416e41:	mov    ebp,esp
  416e43:	and    esp,0xfffffff8
  416e46:	sub    esp,0x10
  416e49:	push   esi
  416e4a:	mov    eax,0x431734
  416e4f:	push   edi
  416e50:	lea    edx,[eax+0x1]
  416e53:	mov    cl,BYTE PTR [eax]
  416e55:	inc    eax
  416e56:	test   cl,cl
  416e58:	jne    0x416e53
  416e5a:	sub    eax,edx
  416e5c:	lea    edi,[eax+0x431734]
  416e62:	mov    eax,0x431738
  416e67:	mov    esi,0x431734
  416e6c:	lea    ecx,[eax+0x1]
  416e6f:	nop
  416e70:	mov    dl,BYTE PTR [eax]
  416e72:	inc    eax
  416e73:	test   dl,dl
  416e75:	jne    0x416e70
  416e77:	push   edi
  416e78:	sub    eax,ecx
  416e7a:	push   esi
  416e7b:	mov    esi,DWORD PTR [ebp+0x8]
  416e7e:	lea    ecx,[eax+0x431738]
  416e84:	sub    esp,0xc
  416e87:	mov    eax,esp
  416e89:	mov    edx,0x431738
  416e8e:	mov    DWORD PTR [eax],edx
  416e90:	mov    DWORD PTR [eax+0x4],ecx
  416e93:	mov    ecx,DWORD PTR [esp+0x28]
  416e97:	mov    DWORD PTR [eax+0x8],ecx
  416e9a:	call   0x418950
  416e9f:	add    esp,0x14
  416ea2:	pop    edi
  416ea3:	pop    esi
  416ea4:	mov    esp,ebp
  416ea6:	pop    ebp
  416ea7:	ret    
  416ea8:	int3   
  416ea9:	int3   
  416eaa:	int3   
  416eab:	int3   
  416eac:	int3   
  416ead:	int3   
  416eae:	int3   
  416eaf:	int3   
  416eb0:	sub    esp,0xc
  416eb3:	mov    eax,DWORD PTR [esp+0x10]
  416eb7:	push   esi
  416eb8:	mov    esi,DWORD PTR [esp+0x18]
  416ebc:	push   edi
  416ebd:	push   esi
  416ebe:	push   eax
  416ebf:	call   0x40c040
  416ec4:	mov    eax,DWORD PTR [esp+0x20]
  416ec8:	mov    ecx,DWORD PTR [eax+0x10]
  416ecb:	sub    ecx,DWORD PTR [eax+0xc]
  416ece:	mov    eax,0x2aaaaaab
  416ed3:	imul   ecx
  416ed5:	sar    edx,0x4
  416ed8:	mov    ecx,edx
  416eda:	xor    edi,edi
  416edc:	shr    ecx,0x1f
  416edf:	add    ecx,edx
  416ee1:	mov    DWORD PTR [esp+0x8],edi
  416ee5:	je     0x41707f
  416eeb:	push   ebx
  416eec:	push   ebp
  416eed:	mov    DWORD PTR [esp+0x14],edi
  416ef1:	jmp    0x416ef7
  416ef3:	mov    esi,DWORD PTR [esp+0x24]
  416ef7:	cmp    DWORD PTR [esi+0x18],0x10
  416efb:	jb     0x416f05
  416efd:	mov    ebx,DWORD PTR [esi+0x4]
  416f00:	lea    eax,[esi+0x4]
  416f03:	jmp    0x416f08
  416f05:	lea    ebx,[esi+0x4]
  416f08:	mov    edx,DWORD PTR [esp+0x20]
  416f0c:	mov    eax,DWORD PTR [edx]
  416f0e:	mov    ecx,DWORD PTR [eax+0x10]
  416f11:	test   ecx,ecx
  416f13:	je     0x416f1e
  416f15:	mov    eax,ecx
  416f17:	mov    ecx,DWORD PTR [eax+0x10]
  416f1a:	test   ecx,ecx
  416f1c:	jne    0x416f15
  416f1e:	mov    esi,DWORD PTR [eax+0x14]
  416f21:	neg    esi
  416f23:	sbb    esi,esi
  416f25:	not    esi
  416f27:	and    esi,eax
  416f29:	add    esi,0x30
  416f2c:	cmp    BYTE PTR [ebx],0x0
  416f2f:	mov    eax,ebx
  416f31:	je     0x416f39
  416f33:	inc    eax
  416f34:	cmp    BYTE PTR [eax],0x0
  416f37:	jne    0x416f33
  416f39:	sub    eax,ebx
  416f3b:	inc    eax
  416f3c:	mov    ebp,eax
  416f3e:	mov    eax,DWORD PTR [esi+0x4]
  416f41:	mov    edi,eax
  416f43:	neg    edi
  416f45:	and    edi,0x3
  416f48:	add    edi,eax
  416f4a:	lea    eax,[edi+ebp*1]
  416f4d:	cmp    eax,DWORD PTR [esi+0x8]
  416f50:	jbe    0x416f9a
  416f52:	mov    eax,0x10000
  416f57:	cmp    ebp,eax
  416f59:	jbe    0x416f5d
  416f5b:	mov    eax,ebp
  416f5d:	lea    edi,[eax+0xa]
  416f60:	mov    eax,DWORD PTR [esi+0x1000c]
  416f66:	push   edi
  416f67:	test   eax,eax
  416f69:	je     0x416f6f
  416f6b:	call   eax
  416f6d:	jmp    0x416f74
  416f6f:	call   0x425023
  416f74:	mov    edx,DWORD PTR [esi]
  416f76:	mov    ecx,eax
  416f78:	neg    ecx
  416f7a:	and    ecx,0x3
  416f7d:	add    ecx,eax
  416f7f:	mov    DWORD PTR [ecx],edx
  416f81:	add    ecx,0x4
  416f84:	mov    DWORD PTR [esi],eax
  416f86:	add    eax,edi
  416f88:	mov    edi,ecx
  416f8a:	neg    edi
  416f8c:	and    edi,0x3
  416f8f:	add    esp,0x4
  416f92:	mov    DWORD PTR [esi+0x4],ecx
  416f95:	mov    DWORD PTR [esi+0x8],eax
  416f98:	add    edi,ecx
  416f9a:	lea    eax,[edi+ebp*1]
  416f9d:	mov    DWORD PTR [esi+0x4],eax
  416fa0:	test   ebp,ebp
  416fa2:	jbe    0x416fbb
  416fa4:	mov    ecx,ebx
  416fa6:	mov    eax,edi
  416fa8:	sub    ecx,edi
  416faa:	lea    ebx,[ebx+0x0]
  416fb0:	mov    dl,BYTE PTR [ecx+eax*1]
  416fb3:	mov    BYTE PTR [eax],dl
  416fb5:	inc    eax
  416fb6:	sub    ebp,0x1
  416fb9:	jne    0x416fb0
  416fbb:	mov    ebx,DWORD PTR [esp+0x20]
  416fbf:	mov    eax,DWORD PTR [ebx]
  416fc1:	mov    ecx,DWORD PTR [eax+0x10]
  416fc4:	test   ecx,ecx
  416fc6:	je     0x416fd1
  416fc8:	mov    eax,ecx
  416fca:	mov    ecx,DWORD PTR [eax+0x10]
  416fcd:	test   ecx,ecx
  416fcf:	jne    0x416fc8
  416fd1:	mov    esi,DWORD PTR [eax+0x14]
  416fd4:	neg    esi
  416fd6:	sbb    esi,esi
  416fd8:	not    esi
  416fda:	push   0x0
  416fdc:	and    esi,eax
  416fde:	push   0x1
  416fe0:	add    esi,0x30
  416fe3:	call   0x4125c0
  416fe8:	mov    ecx,DWORD PTR [ebx]
  416fea:	xor    edx,edx
  416fec:	cmp    DWORD PTR [ecx+0x18],edx
  416fef:	je     0x416fff
  416ff1:	mov    esi,DWORD PTR [ecx+0x1c]
  416ff4:	mov    DWORD PTR [eax+0x28],esi
  416ff7:	mov    esi,DWORD PTR [ecx+0x1c]
  416ffa:	mov    DWORD PTR [esi+0x2c],eax
  416ffd:	jmp    0x417005
  416fff:	mov    DWORD PTR [eax+0x28],edx
  417002:	mov    DWORD PTR [ecx+0x18],eax
  417005:	mov    esi,DWORD PTR [esp+0x28]
  417009:	mov    DWORD PTR [ecx+0x1c],eax
  41700c:	mov    edi,DWORD PTR [esp+0x10]
  417010:	mov    DWORD PTR [eax+0x2c],edx
  417013:	mov    DWORD PTR [eax+0x10],ecx
  417016:	mov    ecx,DWORD PTR [esi+0x10]
  417019:	sub    ecx,DWORD PTR [esi+0xc]
  41701c:	mov    DWORD PTR [esp+0x18],eax
  417020:	mov    eax,0x2aaaaaab
  417025:	imul   ecx
  417027:	sar    edx,0x4
  41702a:	mov    eax,edx
  41702c:	shr    eax,0x1f
  41702f:	add    eax,edx
  417031:	cmp    edi,eax
  417033:	jb     0x41703b
  417035:	call   DWORD PTR ds:0x430390
  41703b:	mov    ecx,DWORD PTR [esi+0xc]
  41703e:	mov    ebx,DWORD PTR [esp+0x14]
  417042:	mov    edx,DWORD PTR [ecx+ebx*1]
  417045:	mov    edx,DWORD PTR [edx]
  417047:	add    ecx,ebx
  417049:	push   0x1
  41704b:	lea    eax,[esp+0x1c]
  41704f:	push   eax
  417050:	call   edx
  417052:	mov    ecx,DWORD PTR [esi+0x10]
  417055:	sub    ecx,DWORD PTR [esi+0xc]
  417058:	mov    eax,0x2aaaaaab
  41705d:	imul   ecx
  41705f:	sar    edx,0x4
  417062:	mov    eax,edx
  417064:	shr    eax,0x1f
  417067:	inc    edi
  417068:	add    ebx,0x60
  41706b:	add    eax,edx
  41706d:	mov    DWORD PTR [esp+0x10],edi
  417071:	mov    DWORD PTR [esp+0x14],ebx
  417075:	cmp    edi,eax
  417077:	jb     0x416ef3
  41707d:	pop    ebp
  41707e:	pop    ebx
  41707f:	pop    edi
  417080:	pop    esi
  417081:	add    esp,0xc
  417084:	ret    0xc
  417087:	int3   
  417088:	int3   
  417089:	int3   
  41708a:	int3   
  41708b:	int3   
  41708c:	int3   
  41708d:	int3   
  41708e:	int3   
  41708f:	int3   
  417090:	push   ebp
  417091:	mov    ebp,esp
  417093:	and    esp,0xfffffff8
  417096:	push   0xffffffff
  417098:	push   0x42e16e
  41709d:	mov    eax,fs:0x0
  4170a3:	push   eax
  4170a4:	sub    esp,0x78
  4170a7:	mov    eax,ds:0x43e020
  4170ac:	xor    eax,esp
  4170ae:	mov    DWORD PTR [esp+0x70],eax
  4170b2:	push   ebx
  4170b3:	push   esi
  4170b4:	push   edi
  4170b5:	mov    eax,ds:0x43e020
  4170ba:	xor    eax,esp
  4170bc:	push   eax
  4170bd:	lea    eax,[esp+0x88]
  4170c4:	mov    fs:0x0,eax
  4170ca:	mov    eax,DWORD PTR [ebp+0x8]
  4170cd:	mov    ebx,edx
  4170cf:	cmp    DWORD PTR [ebx+0x18],0x10
  4170d3:	mov    DWORD PTR [esp+0x18],ebx
  4170d7:	mov    DWORD PTR [esp+0x14],eax
  4170db:	jb     0x4170e2
  4170dd:	mov    eax,DWORD PTR [ebx+0x4]
  4170e0:	jmp    0x4170e5
  4170e2:	lea    eax,[ebx+0x4]
  4170e5:	mov    ecx,DWORD PTR [ecx]
  4170e7:	xor    edi,edi
  4170e9:	cmp    eax,edi
  4170eb:	je     0x4170f8
  4170ed:	push   eax
  4170ee:	push   ecx
  4170ef:	call   0x412400
  4170f4:	mov    esi,eax
  4170f6:	jmp    0x4170fb
  4170f8:	mov    esi,DWORD PTR [ecx+0x18]
  4170fb:	cmp    esi,edi
  4170fd:	je     0x41722a
  417103:	jmp    0x41710b
  417105:	mov    ebx,DWORD PTR [esp+0x18]
  417109:	xor    edi,edi
  41710b:	lea    ecx,[esp+0x20]
  41710f:	mov    DWORD PTR [esp+0x10],esi
  417113:	mov    DWORD PTR [esp+0x1c],0x432960
  41711b:	call   DWORD PTR ds:0x430254
  417121:	lea    ecx,[esp+0x3c]
  417125:	mov    DWORD PTR [esp+0x90],edi
  41712c:	call   DWORD PTR ds:0x430254
  417132:	lea    ecx,[esp+0x58]
  417136:	mov    BYTE PTR [esp+0x90],0x1
  41713e:	call   DWORD PTR ds:0x430254
  417144:	mov    DWORD PTR [esp+0x74],edi
  417148:	mov    DWORD PTR [esp+0x78],edi
  41714c:	push   edi
  41714d:	lea    ecx,[esp+0x14]
  417151:	push   ecx
  417152:	lea    ecx,[esp+0x24]
  417156:	mov    DWORD PTR [esp+0x98],0x2
  417161:	call   0x40c3c0
  417166:	mov    edi,DWORD PTR [esp+0x14]
  41716a:	lea    edx,[esp+0x1c]
  41716e:	push   edx
  41716f:	call   0x4129b0
  417174:	cmp    DWORD PTR [ebx+0x18],0x10
  417178:	jb     0x417181
  41717a:	lea    eax,[ebx+0x4]
  41717d:	mov    ebx,DWORD PTR [eax]
  41717f:	jmp    0x417184
  417181:	add    ebx,0x4
  417184:	test   ebx,ebx
  417186:	je     0x4171e3
  417188:	cmp    BYTE PTR [ebx],0x0
  41718b:	mov    eax,ebx
  41718d:	je     0x417196
  41718f:	nop
  417190:	inc    eax
  417191:	cmp    BYTE PTR [eax],0x0
  417194:	jne    0x417190
  417196:	mov    edi,DWORD PTR [esi+0x2c]
  417199:	sub    eax,ebx
  41719b:	mov    DWORD PTR [esp+0x10],eax
  41719f:	test   edi,edi
  4171a1:	je     0x4171df
  4171a3:	mov    eax,DWORD PTR [edi]
  4171a5:	test   eax,eax
  4171a7:	je     0x4171ae
  4171a9:	mov    edx,DWORD PTR [edi+0x8]
  4171ac:	jmp    0x4171b0
  4171ae:	xor    edx,edx
  4171b0:	test   eax,eax
  4171b2:	jne    0x4171b9
  4171b4:	mov    eax,0x4400e0
  4171b9:	mov    ecx,ebx
  4171bb:	cmp    edx,DWORD PTR [esp+0x10]
  4171bf:	jne    0x4171d8
  4171c1:	lea    esi,[edx+eax*1]
  4171c4:	cmp    eax,esi
  4171c6:	jae    0x4171d4
  4171c8:	mov    dl,BYTE PTR [eax]
  4171ca:	cmp    dl,BYTE PTR [ecx]
  4171cc:	jne    0x4171d8
  4171ce:	inc    eax
  4171cf:	inc    ecx
  4171d0:	cmp    eax,esi
  4171d2:	jb     0x4171c8
  4171d4:	mov    esi,edi
  4171d6:	jmp    0x4171e6
  4171d8:	mov    edi,DWORD PTR [edi+0x2c]
  4171db:	test   edi,edi
  4171dd:	jne    0x4171a3
  4171df:	xor    esi,esi
  4171e1:	jmp    0x4171e6
  4171e3:	mov    esi,DWORD PTR [esi+0x2c]
  4171e6:	lea    ecx,[esp+0x58]
  4171ea:	mov    DWORD PTR [esp+0x90],0x4
  4171f5:	call   DWORD PTR ds:0x430264
  4171fb:	lea    ecx,[esp+0x3c]
  4171ff:	mov    BYTE PTR [esp+0x90],0x3
  417207:	call   DWORD PTR ds:0x430264
  41720d:	lea    ecx,[esp+0x20]
  417211:	mov    DWORD PTR [esp+0x90],0xffffffff
  41721c:	call   DWORD PTR ds:0x430264
  417222:	test   esi,esi
  417224:	jne    0x417105
  41722a:	mov    ecx,DWORD PTR [esp+0x88]
  417231:	mov    DWORD PTR fs:0x0,ecx
  417238:	pop    ecx
  417239:	pop    edi
  41723a:	pop    esi
  41723b:	pop    ebx
  41723c:	mov    ecx,DWORD PTR [esp+0x70]
  417240:	xor    ecx,esp
  417242:	call   0x42503a
  417247:	mov    esp,ebp
  417249:	pop    ebp
  41724a:	ret    0x4
  41724d:	int3   
  41724e:	int3   
  41724f:	int3   
  417250:	push   0xffffffff
  417252:	push   0x42be79
  417257:	mov    eax,fs:0x0
  41725d:	push   eax
  41725e:	sub    esp,0x20
  417261:	mov    eax,ds:0x43e020
  417266:	xor    eax,esp
  417268:	mov    DWORD PTR [esp+0x1c],eax
  41726c:	mov    eax,ds:0x43e020
  417271:	xor    eax,esp
  417273:	push   eax
  417274:	lea    eax,[esp+0x24]
  417278:	mov    fs:0x0,eax
  41727e:	mov    eax,DWORD PTR [esp+0x34]
  417282:	lea    ecx,[esp+0x4]
  417286:	call   0x418930
  41728b:	lea    eax,[esp+0x4]
  41728f:	push   eax
  417290:	mov    edx,edi
  417292:	mov    ecx,esi
  417294:	mov    DWORD PTR [esp+0x30],0x0
  41729c:	call   0x40bbd0
  4172a1:	lea    ecx,[esp+0x4]
  4172a5:	mov    DWORD PTR [esp+0x2c],0xffffffff
  4172ad:	call   DWORD PTR ds:0x430264
  4172b3:	mov    ecx,DWORD PTR [esp+0x24]
  4172b7:	mov    DWORD PTR fs:0x0,ecx
  4172be:	pop    ecx
  4172bf:	mov    ecx,DWORD PTR [esp+0x1c]
  4172c3:	xor    ecx,esp
  4172c5:	call   0x42503a
  4172ca:	add    esp,0x2c
  4172cd:	ret    0x4
  4172d0:	push   0xffffffff
  4172d2:	push   0x42be42
  4172d7:	mov    eax,fs:0x0
  4172dd:	push   eax
  4172de:	sub    esp,0x3c
  4172e1:	mov    eax,ds:0x43e020
  4172e6:	xor    eax,esp
  4172e8:	mov    DWORD PTR [esp+0x38],eax
  4172ec:	push   ebp
  4172ed:	mov    eax,ds:0x43e020
  4172f2:	xor    eax,esp
  4172f4:	push   eax
  4172f5:	lea    eax,[esp+0x44]
  4172f9:	mov    fs:0x0,eax
  4172ff:	mov    ebp,DWORD PTR [esp+0x54]
  417303:	lea    ecx,[esp+0x24]
  417307:	call   DWORD PTR ds:0x430254
  41730d:	lea    eax,[esp+0x24]
  417311:	push   eax
  417312:	push   edi
  417313:	mov    ecx,esi
  417315:	mov    DWORD PTR [esp+0x54],0x0
  41731d:	call   0x40bb10
  417322:	test   al,al
  417324:	je     0x417350
  417326:	lea    eax,[esp+0x24]
  41732a:	lea    ecx,[esp+0x8]
  41732e:	call   0x418930
  417333:	push   eax
  417334:	mov    ecx,ebp
  417336:	mov    BYTE PTR [esp+0x50],0x1
  41733b:	call   DWORD PTR ds:0x43017c
  417341:	lea    ecx,[esp+0x8]
  417345:	mov    BYTE PTR [esp+0x4c],0x0
  41734a:	call   DWORD PTR ds:0x430264
  417350:	lea    ecx,[esp+0x24]
  417354:	mov    DWORD PTR [esp+0x4c],0xffffffff
  41735c:	call   DWORD PTR ds:0x430264
  417362:	mov    ecx,DWORD PTR [esp+0x44]
  417366:	mov    DWORD PTR fs:0x0,ecx
  41736d:	pop    ecx
  41736e:	pop    ebp
  41736f:	mov    ecx,DWORD PTR [esp+0x38]
  417373:	xor    ecx,esp
  417375:	call   0x42503a
  41737a:	add    esp,0x48
  41737d:	ret    0x4
  417380:	push   ebp
  417381:	mov    ebp,esp
  417383:	and    esp,0xfffffff8
  417386:	sub    esp,0x10
  417389:	push   esi
  41738a:	mov    eax,ebx
  41738c:	push   edi
  41738d:	lea    esi,[eax+0x2]
  417390:	mov    cx,WORD PTR [eax]
  417393:	add    eax,0x2
  417396:	test   cx,cx
  417399:	jne    0x417390
  41739b:	sub    eax,esi
  41739d:	sar    eax,1
  41739f:	lea    esi,[ebx+eax*2]
  4173a2:	mov    eax,edx
  4173a4:	lea    edi,[eax+0x2]
  4173a7:	mov    cx,WORD PTR [eax]
  4173aa:	add    eax,0x2
  4173ad:	test   cx,cx
  4173b0:	jne    0x4173a7
  4173b2:	push   esi
  4173b3:	mov    esi,DWORD PTR [ebp+0x8]
  4173b6:	sub    eax,edi
  4173b8:	sar    eax,1
  4173ba:	lea    ecx,[edx+eax*2]
  4173bd:	push   ebx
  4173be:	sub    esp,0xc
  4173c1:	mov    eax,esp
  4173c3:	mov    DWORD PTR [eax],edx
  4173c5:	mov    DWORD PTR [eax+0x4],ecx
  4173c8:	mov    ecx,DWORD PTR [esp+0x28]
  4173cc:	mov    DWORD PTR [eax+0x8],ecx
  4173cf:	call   0x4015b0
  4173d4:	add    esp,0x14
  4173d7:	pop    edi
  4173d8:	pop    esi
  4173d9:	mov    esp,ebp
  4173db:	pop    ebp
  4173dc:	ret    
  4173dd:	int3   
  4173de:	int3   
  4173df:	int3   
  4173e0:	push   ebx
  4173e1:	push   esi
  4173e2:	or     edx,0xffffffff
  4173e5:	xor    esi,esi
  4173e7:	xor    eax,eax
  4173e9:	lea    esp,[esp+0x0]
  4173f0:	test   dl,0x1
  4173f3:	je     0x417405
  4173f5:	mov    ecx,0x1f
  4173fa:	sub    ecx,eax
  4173fc:	mov    ebx,0x1
  417401:	shl    ebx,cl
  417403:	or     esi,ebx
  417405:	inc    eax
  417406:	shr    edx,1
  417408:	cmp    eax,0x20
  41740b:	jb     0x4173f0
  41740d:	mov    DWORD PTR [edi],esi
  41740f:	call   0x418c50
  417414:	pop    esi
  417415:	mov    eax,edi
  417417:	pop    ebx
  417418:	ret    
  417419:	int3   
  41741a:	int3   
  41741b:	int3   
  41741c:	int3   
  41741d:	int3   
  41741e:	int3   
  41741f:	int3   
  417420:	push   ebp
  417421:	mov    ebp,esp
  417423:	and    esp,0xfffffff8
  417426:	push   ecx
  417427:	mov    ecx,DWORD PTR [ebp+0x8]
  41742a:	push   esi
  41742b:	mov    esi,eax
  41742d:	mov    eax,DWORD PTR [ebp+0xc]
  417430:	push   eax
  417431:	push   ecx
  417432:	call   0x418d10
  417437:	mov    eax,esi
  417439:	pop    esi
  41743a:	mov    esp,ebp
  41743c:	pop    ebp
  41743d:	ret    0x8
  417440:	push   0xffffffff
  417442:	push   0x42c8ab
  417447:	mov    eax,fs:0x0
  41744d:	push   eax
  41744e:	sub    esp,0x58
  417451:	push   ebp
  417452:	push   edi
  417453:	mov    eax,ds:0x43e020
  417458:	xor    eax,esp
  41745a:	push   eax
  41745b:	lea    eax,[esp+0x64]
  41745f:	mov    fs:0x0,eax
  417465:	mov    DWORD PTR [esp+0x1c],esi
  417469:	mov    DWORD PTR [esp+0x14],0x0
  417471:	push   ecx
  417472:	mov    DWORD PTR [esp+0x70],0x2
  41747a:	mov    DWORD PTR [esp+0x14],esp
  41747e:	mov    eax,esp
  417480:	sub    esp,0x1c
  417483:	mov    DWORD PTR [eax],ecx
  417485:	lea    edx,[esp+0xb4]
  41748c:	mov    DWORD PTR [esp+0x30],esp
  417490:	mov    ecx,esp
  417492:	push   edx
  417493:	call   DWORD PTR ds:0x430118
  417499:	sub    esp,0x1c
  41749c:	lea    eax,[esp+0xb4]
  4174a3:	mov    DWORD PTR [esp+0x54],esp
  4174a7:	mov    ecx,esp
  4174a9:	push   eax
  4174aa:	mov    BYTE PTR [esp+0xac],0x3
  4174b2:	call   DWORD PTR ds:0x430118
  4174b8:	push   ecx
  4174b9:	mov    ecx,DWORD PTR [esp+0xb4]
  4174c0:	mov    eax,esp
  4174c2:	mov    DWORD PTR [eax],ecx
  4174c4:	lea    ecx,[esp+0x60]
  4174c8:	mov    DWORD PTR [esp+0x58],esp
  4174cc:	mov    BYTE PTR [esp+0xac],0x2
  4174d4:	call   0x417dd0
  4174d9:	mov    edi,eax
  4174db:	lea    ebp,[esi+0x4]
  4174de:	mov    BYTE PTR [esp+0x6c],0x4
  4174e3:	push   ebp
  4174e4:	mov    ecx,edi
  4174e6:	mov    DWORD PTR [esi],0x406610
  4174ec:	call   0x417d60
  4174f1:	mov    edx,DWORD PTR [edi+0x3c]
  4174f4:	mov    DWORD PTR [ebp+0x3c],edx
  4174f7:	lea    eax,[esp+0x20]
  4174fb:	push   eax
  4174fc:	mov    DWORD PTR [esp+0x18],0x1
  417504:	mov    BYTE PTR [esp+0x70],0x2
  417509:	call   0x40e010
  41750e:	lea    ecx,[esp+0x78]
  417512:	mov    BYTE PTR [esp+0x6c],0x1
  417517:	call   DWORD PTR ds:0x430264
  41751d:	lea    ecx,[esp+0x94]
  417524:	mov    BYTE PTR [esp+0x6c],0x0
  417529:	call   DWORD PTR ds:0x430264
  41752f:	mov    eax,esi
  417531:	mov    ecx,DWORD PTR [esp+0x64]
  417535:	mov    DWORD PTR fs:0x0,ecx
  41753c:	pop    ecx
  41753d:	pop    edi
  41753e:	pop    ebp
  41753f:	add    esp,0x64
  417542:	ret    
  417543:	int3   
  417544:	int3   
  417545:	int3   
  417546:	int3   
  417547:	int3   
  417548:	int3   
  417549:	int3   
  41754a:	int3   
  41754b:	int3   
  41754c:	int3   
  41754d:	int3   
  41754e:	int3   
  41754f:	int3   
  417550:	push   0xffffffff
  417552:	push   0x42c848
  417557:	mov    eax,fs:0x0
  41755d:	push   eax
  41755e:	push   ecx
  41755f:	push   edi
  417560:	mov    eax,ds:0x43e020
  417565:	xor    eax,esp
  417567:	push   eax
  417568:	lea    eax,[esp+0xc]
  41756c:	mov    fs:0x0,eax
  417572:	sub    esp,0x44
  417575:	mov    eax,esp
  417577:	mov    DWORD PTR [esp+0x58],0x0
  41757f:	mov    ecx,DWORD PTR [esp+0x60]
  417583:	lea    edi,[eax+0x4]
  417586:	mov    DWORD PTR [esp+0x4c],esp
  41758a:	mov    DWORD PTR [eax],ecx
  41758c:	push   edi
  41758d:	lea    ecx,[esp+0x68]
  417591:	call   0x417d60
  417596:	mov    edx,DWORD PTR [esp+0xa0]
  41759d:	mov    ecx,esi
  41759f:	mov    DWORD PTR [edi+0x3c],edx
  4175a2:	call   0x418d70
  4175a7:	lea    eax,[esp+0x20]
  4175ab:	push   eax
  4175ac:	mov    DWORD PTR [esp+0x18],0xffffffff
  4175b4:	call   0x40e010
  4175b9:	mov    eax,esi
  4175bb:	mov    ecx,DWORD PTR [esp+0xc]
  4175bf:	mov    DWORD PTR fs:0x0,ecx
  4175c6:	pop    ecx
  4175c7:	pop    edi
  4175c8:	add    esp,0x10
  4175cb:	ret    0x44
  4175ce:	int3   
  4175cf:	int3   
  4175d0:	push   0xffffffff
  4175d2:	push   0x42be0a
  4175d7:	mov    eax,fs:0x0
  4175dd:	push   eax
  4175de:	sub    esp,0x30
  4175e1:	mov    eax,ds:0x43e020
  4175e6:	xor    eax,esp
  4175e8:	push   eax
  4175e9:	lea    eax,[esp+0x34]
  4175ed:	mov    fs:0x0,eax
  4175f3:	mov    DWORD PTR [esp+0xc],esi
  4175f7:	mov    DWORD PTR [esp+0x8],0x0
  4175ff:	sub    esp,0x1c
  417602:	lea    eax,[esp+0x68]
  417606:	mov    DWORD PTR [esp+0x20],esp
  41760a:	mov    ecx,esp
  41760c:	push   eax
  41760d:	mov    DWORD PTR [esp+0x5c],0x1
  417615:	call   DWORD PTR ds:0x430118
  41761b:	push   ecx
  41761c:	mov    ecx,DWORD PTR [esp+0x68]
  417620:	mov    eax,esp
  417622:	mov    DWORD PTR [eax],ecx
  417624:	lea    ecx,[esp+0x30]
  417628:	mov    DWORD PTR [esp+0x24],esp
  41762c:	call   0x417e80
  417631:	mov    edx,DWORD PTR [esp+0x44]
  417635:	mov    BYTE PTR [esp+0x3c],0x2
  41763a:	mov    DWORD PTR [esi],edx
  41763c:	mov    ecx,DWORD PTR [eax]
  41763e:	add    eax,0x4
  417641:	mov    DWORD PTR [esi+0x4],ecx
  417644:	lea    ecx,[esi+0x8]
  417647:	push   eax
  417648:	call   DWORD PTR ds:0x430118
  41764e:	lea    ecx,[esp+0x14]
  417652:	mov    DWORD PTR [esp+0x8],0x1
  41765a:	mov    BYTE PTR [esp+0x3c],0x1
  41765f:	call   DWORD PTR ds:0x430264
  417665:	lea    ecx,[esp+0x4c]
  417669:	mov    BYTE PTR [esp+0x3c],0x0
  41766e:	call   DWORD PTR ds:0x430264
  417674:	mov    eax,esi
  417676:	mov    ecx,DWORD PTR [esp+0x34]
  41767a:	mov    DWORD PTR fs:0x0,ecx
  417681:	pop    ecx
  417682:	add    esp,0x3c
  417685:	ret    
  417686:	int3   
  417687:	int3   
  417688:	int3   
  417689:	int3   
  41768a:	int3   
  41768b:	int3   
  41768c:	int3   
  41768d:	int3   
  41768e:	int3   
  41768f:	int3   
  417690:	push   0xffffffff
  417692:	push   0x42bdb8
  417697:	mov    eax,fs:0x0
  41769d:	push   eax
  41769e:	push   ecx
  41769f:	mov    eax,ds:0x43e020
  4176a4:	xor    eax,esp
  4176a6:	push   eax
  4176a7:	lea    eax,[esp+0x8]
  4176ab:	mov    fs:0x0,eax
  4176b1:	mov    DWORD PTR [esp+0x10],0x0
  4176b9:	mov    ecx,DWORD PTR [esp+0x18]
  4176bd:	sub    esp,0x24
  4176c0:	mov    eax,esp
  4176c2:	mov    DWORD PTR [eax],ecx
  4176c4:	mov    edx,DWORD PTR [esp+0x40]
  4176c8:	mov    DWORD PTR [eax+0x4],edx
  4176cb:	lea    ecx,[eax+0x8]
  4176ce:	lea    eax,[esp+0x44]
  4176d2:	mov    DWORD PTR [esp+0x28],esp
  4176d6:	push   eax
  4176d7:	call   DWORD PTR ds:0x430118
  4176dd:	mov    ecx,esi
  4176df:	call   0x418e00
  4176e4:	lea    ecx,[esp+0x20]
  4176e8:	mov    DWORD PTR [esp+0x10],0xffffffff
  4176f0:	call   DWORD PTR ds:0x430264
  4176f6:	mov    eax,esi
  4176f8:	mov    ecx,DWORD PTR [esp+0x8]
  4176fc:	mov    DWORD PTR fs:0x0,ecx
  417703:	pop    ecx
  417704:	add    esp,0x10
  417707:	ret    0x24
  41770a:	int3   
  41770b:	int3   
  41770c:	int3   
  41770d:	int3   
  41770e:	int3   
  41770f:	int3   
  417710:	push   ebp
  417711:	mov    ebp,esp
  417713:	and    esp,0xfffffff8
  417716:	push   ecx
  417717:	mov    ecx,DWORD PTR [ebp+0x8]
  41771a:	push   esi
  41771b:	mov    esi,eax
  41771d:	mov    eax,DWORD PTR [ebp+0xc]
  417720:	push   eax
  417721:	push   ecx
  417722:	call   0x418e90
  417727:	mov    eax,esi
  417729:	pop    esi
  41772a:	mov    esp,ebp
  41772c:	pop    ebp
  41772d:	ret    0x8
  417730:	push   ecx
  417731:	mov    ecx,esi
  417733:	mov    DWORD PTR [esp],0x0
  41773a:	call   0x4180b0
  41773f:	mov    eax,esi
  417741:	pop    ecx
  417742:	ret    
  417743:	int3   
  417744:	int3   
  417745:	int3   
  417746:	int3   
  417747:	int3   
  417748:	int3   
  417749:	int3   
  41774a:	int3   
  41774b:	int3   
  41774c:	int3   
  41774d:	int3   
  41774e:	int3   
  41774f:	int3   
  417750:	push   0xffffffff
  417752:	push   0x42cde9
  417757:	mov    eax,fs:0x0
  41775d:	push   eax
  41775e:	push   ecx
  41775f:	push   esi
  417760:	mov    eax,ds:0x43e020
  417765:	xor    eax,esp
  417767:	push   eax
  417768:	lea    eax,[esp+0xc]
  41776c:	mov    fs:0x0,eax
  417772:	mov    esi,DWORD PTR [esp+0x1c]
  417776:	mov    ecx,esi
  417778:	call   DWORD PTR ds:0x430254
  41777e:	mov    DWORD PTR [esp+0x14],0x0
  417786:	call   0x426930
  41778b:	mov    eax,DWORD PTR [eax]
  41778d:	push   eax
  41778e:	push   esi
  41778f:	call   0x418ef0
  417794:	add    esp,0x8
  417797:	mov    eax,esi
  417799:	mov    ecx,DWORD PTR [esp+0xc]
  41779d:	mov    DWORD PTR fs:0x0,ecx
  4177a4:	pop    ecx
  4177a5:	pop    esi
  4177a6:	add    esp,0x10
  4177a9:	ret    0x4
  4177ac:	int3   
  4177ad:	int3   
  4177ae:	int3   
  4177af:	int3   
  4177b0:	push   ebp
  4177b1:	mov    ebp,esp
  4177b3:	and    esp,0xfffffff8
  4177b6:	sub    esp,0x8
  4177b9:	push   0x0
  4177bb:	push   0x0
  4177bd:	mov    ecx,esi
  4177bf:	call   DWORD PTR ds:0x4301c8
  4177c5:	mov    eax,DWORD PTR [ebp+0x14]
  4177c8:	mov    ecx,DWORD PTR [ebp+0x10]
  4177cb:	mov    edx,DWORD PTR [ebp+0xc]
  4177ce:	push   eax
  4177cf:	mov    eax,DWORD PTR [ebp+0x8]
  4177d2:	push   ecx
  4177d3:	mov    ecx,DWORD PTR [esp+0xc]
  4177d7:	push   edx
  4177d8:	push   eax
  4177d9:	push   ecx
  4177da:	push   esi
  4177db:	call   0x419040
  4177e0:	mov    eax,esi
  4177e2:	mov    esp,ebp
  4177e4:	pop    ebp
  4177e5:	ret    0x10
  4177e8:	int3   
  4177e9:	int3   
  4177ea:	int3   
  4177eb:	int3   
  4177ec:	int3   
  4177ed:	int3   
  4177ee:	int3   
  4177ef:	int3   
  4177f0:	push   0xffffffff
  4177f2:	push   0x42c81a
  4177f7:	mov    eax,fs:0x0
  4177fd:	push   eax
  4177fe:	sub    esp,0x30
  417801:	mov    eax,ds:0x43e020
  417806:	xor    eax,esp
  417808:	push   eax
  417809:	lea    eax,[esp+0x34]
  41780d:	mov    fs:0x0,eax
  417813:	mov    DWORD PTR [esp+0xc],esi
  417817:	mov    DWORD PTR [esp+0x8],0x0
  41781f:	sub    esp,0x1c
  417822:	lea    eax,[esp+0x68]
  417826:	mov    DWORD PTR [esp+0x20],esp
  41782a:	mov    ecx,esp
  41782c:	push   eax
  41782d:	mov    DWORD PTR [esp+0x5c],0x1
  417835:	call   DWORD PTR ds:0x430118
  41783b:	mov    edx,DWORD PTR [esp+0x60]
  41783f:	push   ecx
  417840:	mov    ecx,DWORD PTR [esp+0x68]
  417844:	mov    eax,esp
  417846:	mov    DWORD PTR [esp+0x24],esp
  41784a:	push   ecx
  41784b:	mov    DWORD PTR [eax],ecx
  41784d:	mov    eax,esp
  41784f:	lea    ecx,[esp+0x34]
  417853:	mov    DWORD PTR [esp+0x28],esp
  417857:	mov    DWORD PTR [eax],edx
  417859:	call   0x417f00
  41785e:	mov    BYTE PTR [esp+0x3c],0x2
  417863:	mov    DWORD PTR [esi],0x407220
  417869:	mov    ecx,DWORD PTR [eax]
  41786b:	mov    DWORD PTR [esi+0x4],ecx
  41786e:	mov    edx,DWORD PTR [eax+0x4]
  417871:	add    eax,0x8
  417874:	lea    ecx,[esi+0xc]
  417877:	push   eax
  417878:	mov    DWORD PTR [esi+0x8],edx
  41787b:	call   DWORD PTR ds:0x430118
  417881:	lea    ecx,[esp+0x18]
  417885:	mov    DWORD PTR [esp+0x8],0x1
  41788d:	mov    BYTE PTR [esp+0x3c],0x1
  417892:	call   DWORD PTR ds:0x430264
  417898:	lea    ecx,[esp+0x4c]
  41789c:	mov    BYTE PTR [esp+0x3c],0x0
  4178a1:	call   DWORD PTR ds:0x430264
  4178a7:	mov    eax,esi
  4178a9:	mov    ecx,DWORD PTR [esp+0x34]
  4178ad:	mov    DWORD PTR fs:0x0,ecx
  4178b4:	pop    ecx
  4178b5:	add    esp,0x3c
  4178b8:	ret    
  4178b9:	int3   
  4178ba:	int3   
  4178bb:	int3   
  4178bc:	int3   
  4178bd:	int3   
  4178be:	int3   
  4178bf:	int3   
  4178c0:	push   0xffffffff
  4178c2:	push   0x42c7c8
  4178c7:	mov    eax,fs:0x0
  4178cd:	push   eax
  4178ce:	push   ecx
  4178cf:	mov    eax,ds:0x43e020
  4178d4:	xor    eax,esp
  4178d6:	push   eax
  4178d7:	lea    eax,[esp+0x8]
  4178db:	mov    fs:0x0,eax
  4178e1:	mov    DWORD PTR [esp+0x10],0x0
  4178e9:	mov    ecx,DWORD PTR [esp+0x18]
  4178ed:	sub    esp,0x28
  4178f0:	mov    eax,esp
  4178f2:	mov    DWORD PTR [eax],ecx
  4178f4:	mov    edx,DWORD PTR [esp+0x44]
  4178f8:	mov    DWORD PTR [eax+0x4],edx
  4178fb:	mov    ecx,DWORD PTR [esp+0x48]
  4178ff:	lea    edx,[esp+0x4c]
  417903:	mov    DWORD PTR [esp+0x2c],esp
  417907:	mov    DWORD PTR [eax+0x8],ecx
  41790a:	lea    ecx,[eax+0xc]
  41790d:	push   edx
  41790e:	call   DWORD PTR ds:0x430118
  417914:	mov    ecx,esi
  417916:	call   0x419150
  41791b:	lea    ecx,[esp+0x24]
  41791f:	mov    DWORD PTR [esp+0x10],0xffffffff
  417927:	call   DWORD PTR ds:0x430264
  41792d:	mov    eax,esi
  41792f:	mov    ecx,DWORD PTR [esp+0x8]
  417933:	mov    DWORD PTR fs:0x0,ecx
  41793a:	pop    ecx
  41793b:	add    esp,0x10
  41793e:	ret    0x28
  417941:	int3   
  417942:	int3   
  417943:	int3   
  417944:	int3   
  417945:	int3   
  417946:	int3   
  417947:	int3   
  417948:	int3   
  417949:	int3   
  41794a:	int3   
  41794b:	int3   
  41794c:	int3   
  41794d:	int3   
  41794e:	int3   
  41794f:	int3   
  417950:	push   0xffffffff
  417952:	push   0x42c79a
  417957:	mov    eax,fs:0x0
  41795d:	push   eax
  41795e:	sub    esp,0x34
  417961:	mov    eax,ds:0x43e020
  417966:	xor    eax,esp
  417968:	push   eax
  417969:	lea    eax,[esp+0x38]
  41796d:	mov    fs:0x0,eax
  417973:	mov    eax,DWORD PTR [esp+0x48]
  417977:	mov    DWORD PTR [esp+0xc],esi
  41797b:	mov    DWORD PTR [esp+0x8],0x0
  417983:	mov    DWORD PTR [esp+0x40],0x1
  41798b:	mov    ecx,DWORD PTR [eax+0x4]
  41798e:	mov    edx,DWORD PTR [eax]
  417990:	push   ecx
  417991:	push   edx
  417992:	sub    esp,0x1c
  417995:	lea    eax,[esp+0x70]
  417999:	mov    DWORD PTR [esp+0x34],esp
  41799d:	mov    ecx,esp
  41799f:	push   eax
  4179a0:	call   DWORD PTR ds:0x430118
  4179a6:	lea    ecx,[esp+0x38]
  4179aa:	call   0x417f80
  4179af:	mov    BYTE PTR [esp+0x40],0x2
  4179b4:	mov    ecx,DWORD PTR [eax]
  4179b6:	mov    DWORD PTR [esi+0x4],ecx
  4179b9:	mov    edx,DWORD PTR [eax+0x4]
  4179bc:	add    eax,0x8
  4179bf:	lea    ecx,[esi+0xc]
  4179c2:	push   eax
  4179c3:	mov    DWORD PTR [esi+0x8],edx
  4179c6:	call   DWORD PTR ds:0x430118
  4179cc:	lea    ecx,[esp+0x1c]
  4179d0:	mov    DWORD PTR [esp+0x8],0x1
  4179d8:	mov    BYTE PTR [esp+0x40],0x1
  4179dd:	call   DWORD PTR ds:0x430264
  4179e3:	lea    ecx,[esp+0x4c]
  4179e7:	mov    BYTE PTR [esp+0x40],0x0
  4179ec:	call   DWORD PTR ds:0x430264
  4179f2:	mov    eax,esi
  4179f4:	mov    ecx,DWORD PTR [esp+0x38]
  4179f8:	mov    DWORD PTR fs:0x0,ecx
  4179ff:	pop    ecx
  417a00:	add    esp,0x40
  417a03:	ret    
  417a04:	int3   
  417a05:	int3   
  417a06:	int3   
  417a07:	int3   
  417a08:	int3   
  417a09:	int3   
  417a0a:	int3   
  417a0b:	int3   
  417a0c:	int3   
  417a0d:	int3   
  417a0e:	int3   
  417a0f:	int3   
  417a10:	push   0xffffffff
  417a12:	push   0x42bd88
  417a17:	mov    eax,fs:0x0
  417a1d:	push   eax
  417a1e:	push   ecx
  417a1f:	push   ebx
  417a20:	mov    eax,ds:0x43e020
  417a25:	xor    eax,esp
  417a27:	push   eax
  417a28:	lea    eax,[esp+0xc]
  417a2c:	mov    fs:0x0,eax
  417a32:	mov    DWORD PTR [esp+0x14],0x0
  417a3a:	mov    ecx,DWORD PTR [esp+0x30]
  417a3e:	sub    esp,0x28
  417a41:	mov    eax,esp
  417a43:	mov    DWORD PTR [eax+0x4],ecx
  417a46:	mov    edx,DWORD PTR [esp+0x5c]
  417a4a:	mov    DWORD PTR [eax+0x8],edx
  417a4d:	lea    ecx,[eax+0xc]
  417a50:	lea    eax,[esp+0x60]
  417a54:	mov    DWORD PTR [esp+0x30],esp
  417a58:	push   eax
  417a59:	call   DWORD PTR ds:0x430118
  417a5f:	mov    ebx,DWORD PTR [esp+0x50]
  417a63:	mov    ecx,DWORD PTR [esp+0x48]
  417a67:	call   0x4191e0
  417a6c:	mov    ecx,DWORD PTR [esp+0x44]
  417a70:	mov    DWORD PTR [esi],ecx
  417a72:	add    esp,0x28
  417a75:	lea    ecx,[esp+0x38]
  417a79:	mov    DWORD PTR [esp+0x20],eax
  417a7d:	mov    DWORD PTR [esi+0x4],eax
  417a80:	mov    DWORD PTR [esp+0x14],0xffffffff
  417a88:	call   DWORD PTR ds:0x430264
  417a8e:	mov    eax,esi
  417a90:	mov    ecx,DWORD PTR [esp+0xc]
  417a94:	mov    DWORD PTR fs:0x0,ecx
  417a9b:	pop    ecx
  417a9c:	pop    ebx
  417a9d:	add    esp,0x10
  417aa0:	ret    
  417aa1:	int3   
  417aa2:	int3   
  417aa3:	int3   
  417aa4:	int3   
  417aa5:	int3   
  417aa6:	int3   
  417aa7:	int3   
  417aa8:	int3   
  417aa9:	int3   
  417aaa:	int3   
  417aab:	int3   
  417aac:	int3   
  417aad:	int3   
  417aae:	int3   
  417aaf:	int3   
  417ab0:	sub    esp,0x1c
  417ab3:	push   ebx
  417ab4:	push   ebp
  417ab5:	push   esi
  417ab6:	mov    eax,0x431697
  417abb:	push   edi
  417abc:	lea    ecx,[eax+0x1]
  417abf:	nop
  417ac0:	mov    dl,BYTE PTR [eax]
  417ac2:	inc    eax
  417ac3:	test   dl,dl
  417ac5:	jne    0x417ac0
  417ac7:	mov    edi,DWORD PTR [esp+0x34]
  417acb:	sub    eax,ecx
  417acd:	lea    esi,[esp+0x14]
  417ad1:	mov    ebx,0x431697
  417ad6:	lea    ebp,[eax+0x431697]
  417adc:	call   0x41a8b0
  417ae1:	mov    ecx,DWORD PTR [eax]
  417ae3:	mov    edi,DWORD PTR [eax+0xc]
  417ae6:	mov    edx,DWORD PTR [eax+0x4]
  417ae9:	mov    esi,DWORD PTR [eax+0x8]
  417aec:	push   ebp
  417aed:	push   ebx
  417aee:	sub    esp,0x14
  417af1:	mov    eax,esp
  417af3:	mov    DWORD PTR [eax],ecx
  417af5:	mov    ecx,DWORD PTR [esp+0x40]
  417af9:	mov    DWORD PTR [eax+0x4],edx
  417afc:	mov    DWORD PTR [eax+0x8],esi
  417aff:	mov    DWORD PTR [eax+0xc],edi
  417b02:	mov    edi,DWORD PTR [esp+0x4c]
  417b06:	mov    DWORD PTR [eax+0x10],ecx
  417b09:	call   0x4192d0
  417b0e:	add    esp,0x1c
  417b11:	pop    edi
  417b12:	pop    esi
  417b13:	pop    ebp
  417b14:	pop    ebx
  417b15:	add    esp,0x1c
  417b18:	ret    
  417b19:	int3   
  417b1a:	int3   
  417b1b:	int3   
  417b1c:	int3   
  417b1d:	int3   
  417b1e:	int3   
  417b1f:	int3   
  417b20:	sub    esp,0x8
  417b23:	push   ebx
  417b24:	mov    ebx,eax
  417b26:	xor    al,al
  417b28:	mov    BYTE PTR [esp+0x8],al
  417b2c:	mov    ecx,DWORD PTR [esp+0x8]
  417b30:	mov    edx,DWORD PTR [esp+0x8]
  417b34:	mov    BYTE PTR [esp+0x4],al
  417b38:	mov    eax,DWORD PTR [esp+0x4]
  417b3c:	push   eax
  417b3d:	push   ecx
  417b3e:	push   edx
  417b3f:	mov    eax,esi
  417b41:	mov    ecx,edi
  417b43:	call   0x41ab20
  417b48:	sub    ebx,edi
  417b4a:	mov    eax,0x2aaaaaab
  417b4f:	imul   ebx
  417b51:	sar    edx,0x4
  417b54:	mov    eax,edx
  417b56:	shr    eax,0x1f
  417b59:	add    eax,edx
  417b5b:	lea    eax,[eax+eax*2]
  417b5e:	add    esp,0xc
  417b61:	shl    eax,0x5
  417b64:	add    eax,esi
  417b66:	pop    ebx
  417b67:	add    esp,0x8
  417b6a:	ret    
  417b6b:	int3   
  417b6c:	int3   
  417b6d:	int3   
  417b6e:	int3   
  417b6f:	int3   
  417b70:	push   ecx
  417b71:	mov    ecx,DWORD PTR [esp+0xc]
  417b75:	mov    BYTE PTR [esp],0x0
  417b79:	mov    eax,DWORD PTR [esp]
  417b7c:	push   eax
  417b7d:	mov    eax,DWORD PTR [esp+0x10]
  417b81:	push   ecx
  417b82:	mov    ecx,DWORD PTR [esp+0x10]
  417b86:	push   edx
  417b87:	push   eax
  417b88:	call   0x41ab80
  417b8d:	add    esp,0x14
  417b90:	ret    0x8
  417b93:	int3   
  417b94:	int3   
  417b95:	int3   
  417b96:	int3   
  417b97:	int3   
  417b98:	int3   
  417b99:	int3   
  417b9a:	int3   
  417b9b:	int3   
  417b9c:	int3   
  417b9d:	int3   
  417b9e:	int3   
  417b9f:	int3   
  417ba0:	push   ecx
  417ba1:	mov    ecx,DWORD PTR [esp+0xc]
  417ba5:	mov    BYTE PTR [esp],0x0
  417ba9:	mov    eax,DWORD PTR [esp]
  417bac:	push   eax
  417bad:	push   ecx
  417bae:	mov    ecx,DWORD PTR [esp+0x10]
  417bb2:	push   edx
  417bb3:	mov    edx,DWORD PTR [esp+0x18]
  417bb7:	call   0x41aca0
  417bbc:	add    esp,0x10
  417bbf:	ret    0x8
  417bc2:	int3   
  417bc3:	int3   
  417bc4:	int3   
  417bc5:	int3   
  417bc6:	int3   
  417bc7:	int3   
  417bc8:	int3   
  417bc9:	int3   
  417bca:	int3   
  417bcb:	int3   
  417bcc:	int3   
  417bcd:	int3   
  417bce:	int3   
  417bcf:	int3   
  417bd0:	sub    esp,0x8
  417bd3:	push   ebx
  417bd4:	push   esi
  417bd5:	mov    esi,eax
  417bd7:	xor    al,al
  417bd9:	mov    BYTE PTR [esp+0xc],al
  417bdd:	mov    edx,DWORD PTR [esp+0xc]
  417be1:	mov    BYTE PTR [esp+0x8],al
  417be5:	mov    eax,DWORD PTR [esp+0x8]
  417be9:	mov    ebx,ecx
  417beb:	mov    ecx,DWORD PTR [esp+0xc]
  417bef:	push   eax
  417bf0:	push   ecx
  417bf1:	push   edx
  417bf2:	mov    eax,edi
  417bf4:	mov    ecx,esi
  417bf6:	call   0x41ca70
  417bfb:	sub    esi,ebx
  417bfd:	mov    eax,0x2aaaaaab
  417c02:	imul   esi
  417c04:	sar    edx,0x4
  417c07:	mov    eax,edx
  417c09:	shr    eax,0x1f
  417c0c:	add    eax,edx
  417c0e:	lea    eax,[eax+eax*2]
  417c11:	shl    eax,0x5
  417c14:	add    esp,0xc
  417c17:	mov    ecx,eax
  417c19:	mov    eax,edi
  417c1b:	pop    esi
  417c1c:	sub    eax,ecx
  417c1e:	pop    ebx
  417c1f:	add    esp,0x8
  417c22:	ret    
  417c23:	int3   
  417c24:	int3   
  417c25:	int3   
  417c26:	int3   
  417c27:	int3   
  417c28:	int3   
  417c29:	int3   
  417c2a:	int3   
  417c2b:	int3   
  417c2c:	int3   
  417c2d:	int3   
  417c2e:	int3   
  417c2f:	int3   
  417c30:	or     eax,0xffffffff
  417c33:	xor    edx,edx
  417c35:	div    ecx
  417c37:	sub    esp,0x10
  417c3a:	cmp    eax,0x1c
  417c3d:	jae    0x417c6c
  417c3f:	lea    eax,[esp]
  417c42:	push   eax
  417c43:	lea    ecx,[esp+0x8]
  417c47:	mov    DWORD PTR [esp+0x4],0x0
  417c4f:	call   DWORD PTR ds:0x430398
  417c55:	push   0x4356bc
  417c5a:	lea    ecx,[esp+0x8]
  417c5e:	push   ecx
  417c5f:	mov    DWORD PTR [esp+0xc],0x4305ec
  417c67:	call   0x429e76
  417c6c:	lea    edx,[ecx*8+0x0]
  417c73:	sub    edx,ecx
  417c75:	add    edx,edx
  417c77:	add    edx,edx
  417c79:	push   edx
  417c7a:	call   0x425050
  417c7f:	add    esp,0x4
  417c82:	add    esp,0x10
  417c85:	ret    
  417c86:	int3   
  417c87:	int3   
  417c88:	int3   
  417c89:	int3   
  417c8a:	int3   
  417c8b:	int3   
  417c8c:	int3   
  417c8d:	int3   
  417c8e:	int3   
  417c8f:	int3   
  417c90:	push   ecx
  417c91:	mov    ecx,DWORD PTR [esp+0xc]
  417c95:	mov    BYTE PTR [esp],0x0
  417c99:	mov    eax,DWORD PTR [esp]
  417c9c:	push   eax
  417c9d:	push   ecx
  417c9e:	mov    ecx,DWORD PTR [esp+0x10]
  417ca2:	push   edx
  417ca3:	mov    edx,DWORD PTR [esp+0x18]
  417ca7:	call   0x41ad80
  417cac:	add    esp,0x10
  417caf:	ret    0x8
  417cb2:	int3   
  417cb3:	int3   
  417cb4:	int3   
  417cb5:	int3   
  417cb6:	int3   
  417cb7:	int3   
  417cb8:	int3   
  417cb9:	int3   
  417cba:	int3   
  417cbb:	int3   
  417cbc:	int3   
  417cbd:	int3   
  417cbe:	int3   
  417cbf:	int3   
  417cc0:	push   ecx
  417cc1:	mov    ecx,DWORD PTR [esp+0xc]
  417cc5:	mov    BYTE PTR [esp],0x0
  417cc9:	mov    eax,DWORD PTR [esp]
  417ccc:	push   eax
  417ccd:	mov    eax,DWORD PTR [esp+0x10]
  417cd1:	push   ecx
  417cd2:	mov    ecx,DWORD PTR [esp+0x10]
  417cd6:	call   0x41da50
  417cdb:	add    esp,0xc
  417cde:	ret    0x8
  417ce1:	int3   
  417ce2:	int3   
  417ce3:	int3   
  417ce4:	int3   
  417ce5:	int3   
  417ce6:	int3   
  417ce7:	int3   
  417ce8:	int3   
  417ce9:	int3   
  417cea:	int3   
  417ceb:	int3   
  417cec:	int3   
  417ced:	int3   
  417cee:	int3   
  417cef:	int3   
  417cf0:	sub    esp,0x8
  417cf3:	push   esi
  417cf4:	mov    esi,eax
  417cf6:	xor    al,al
  417cf8:	mov    BYTE PTR [esp+0x8],al
  417cfc:	mov    ecx,DWORD PTR [esp+0x8]
  417d00:	mov    edx,DWORD PTR [esp+0x8]
  417d04:	mov    BYTE PTR [esp+0x4],al
  417d08:	mov    eax,DWORD PTR [esp+0x4]
  417d0c:	push   eax
  417d0d:	push   ecx
  417d0e:	push   edx
  417d0f:	push   ebx
  417d10:	mov    eax,edi
  417d12:	mov    ecx,esi
  417d14:	call   0x41cad0
  417d19:	sub    esi,ebx
  417d1b:	sar    esi,0x3
  417d1e:	add    esi,esi
  417d20:	add    esi,esi
  417d22:	add    esi,esi
  417d24:	add    esp,0x10
  417d27:	mov    eax,edi
  417d29:	sub    eax,esi
  417d2b:	pop    esi
  417d2c:	add    esp,0x8
  417d2f:	ret    
  417d30:	push   esi
  417d31:	push   edi
  417d32:	mov    edi,DWORD PTR [esp+0xc]
  417d36:	push   edi
  417d37:	mov    esi,ecx
  417d39:	call   DWORD PTR ds:0x4303a0
  417d3f:	mov    DWORD PTR [esi],0x43294c
  417d45:	mov    eax,DWORD PTR [edi+0xc]
  417d48:	mov    DWORD PTR [esi+0xc],eax
  417d4b:	mov    ecx,DWORD PTR [edi+0x10]
  417d4e:	pop    edi
  417d4f:	mov    DWORD PTR [esi+0x10],ecx
  417d52:	mov    eax,esi
  417d54:	pop    esi
  417d55:	ret    0x4
  417d58:	int3   
  417d59:	int3   
  417d5a:	int3   
  417d5b:	int3   
  417d5c:	int3   
  417d5d:	int3   
  417d5e:	int3   
  417d5f:	int3   
  417d60:	push   0xffffffff
  417d62:	push   0x42bd58
  417d67:	mov    eax,fs:0x0
  417d6d:	push   eax
  417d6e:	push   esi
  417d6f:	push   edi
  417d70:	mov    eax,ds:0x43e020
  417d75:	xor    eax,esp
  417d77:	push   eax
  417d78:	lea    eax,[esp+0xc]
  417d7c:	mov    fs:0x0,eax
  417d82:	mov    edi,ecx
  417d84:	mov    esi,DWORD PTR [esp+0x1c]
  417d88:	mov    eax,DWORD PTR [edi]
  417d8a:	lea    edx,[edi+0x4]
  417d8d:	lea    ecx,[esi+0x4]
  417d90:	push   edx
  417d91:	mov    DWORD PTR [esi],eax
  417d93:	call   DWORD PTR ds:0x430118
  417d99:	add    edi,0x20
  417d9c:	push   edi
  417d9d:	lea    ecx,[esi+0x20]
  417da0:	mov    DWORD PTR [esp+0x18],0x0
  417da8:	call   DWORD PTR ds:0x430118
  417dae:	mov    eax,esi
  417db0:	mov    ecx,DWORD PTR [esp+0xc]
  417db4:	mov    DWORD PTR fs:0x0,ecx
  417dbb:	pop    ecx
  417dbc:	pop    edi
  417dbd:	pop    esi
  417dbe:	add    esp,0xc
  417dc1:	ret    0x4
  417dc4:	int3   
  417dc5:	int3   
  417dc6:	int3   
  417dc7:	int3   
  417dc8:	int3   
  417dc9:	int3   
  417dca:	int3   
  417dcb:	int3   
  417dcc:	int3   
  417dcd:	int3   
  417dce:	int3   
  417dcf:	int3   
  417dd0:	push   0xffffffff
  417dd2:	push   0x42bd28
  417dd7:	mov    eax,fs:0x0
  417ddd:	push   eax
  417dde:	sub    esp,0x8
  417de1:	push   esi
  417de2:	mov    eax,ds:0x43e020
  417de7:	xor    eax,esp
  417de9:	push   eax
  417dea:	lea    eax,[esp+0x10]
  417dee:	mov    fs:0x0,eax
  417df4:	mov    esi,ecx
  417df6:	mov    DWORD PTR [esp+0x18],0x1
  417dfe:	mov    eax,DWORD PTR [esp+0x5c]
  417e02:	push   eax
  417e03:	sub    esp,0x1c
  417e06:	lea    edx,[esp+0x60]
  417e0a:	mov    DWORD PTR [esp+0x28],esp
  417e0e:	mov    ecx,esp
  417e10:	push   edx
  417e11:	call   DWORD PTR ds:0x430118
  417e17:	sub    esp,0x1c
  417e1a:	lea    eax,[esp+0x60]
  417e1e:	mov    DWORD PTR [esp+0x48],esp
  417e22:	mov    ecx,esp
  417e24:	push   eax
  417e25:	mov    BYTE PTR [esp+0x58],0x2
  417e2a:	call   DWORD PTR ds:0x430118
  417e30:	mov    ecx,DWORD PTR [esp+0x5c]
  417e34:	push   ecx
  417e35:	mov    BYTE PTR [esp+0x58],0x1
  417e3a:	call   0x418150
  417e3f:	lea    ecx,[esp+0x24]
  417e43:	mov    BYTE PTR [esp+0x18],0x0
  417e48:	call   DWORD PTR ds:0x430264
  417e4e:	lea    ecx,[esp+0x40]
  417e52:	mov    DWORD PTR [esp+0x18],0xffffffff
  417e5a:	call   DWORD PTR ds:0x430264
  417e60:	mov    eax,esi
  417e62:	mov    ecx,DWORD PTR [esp+0x10]
  417e66:	mov    DWORD PTR fs:0x0,ecx
  417e6d:	pop    ecx
  417e6e:	pop    esi
  417e6f:	add    esp,0x14
  417e72:	ret    0x40
  417e75:	int3   
  417e76:	int3   
  417e77:	int3   
  417e78:	int3   
  417e79:	int3   
  417e7a:	int3   
  417e7b:	int3   
  417e7c:	int3   
  417e7d:	int3   
  417e7e:	int3   
  417e7f:	int3   
  417e80:	push   0xffffffff
  417e82:	push   0x42b458
  417e87:	mov    eax,fs:0x0
  417e8d:	push   eax
  417e8e:	push   ecx
  417e8f:	push   esi
  417e90:	mov    eax,ds:0x43e020
  417e95:	xor    eax,esp
  417e97:	push   eax
  417e98:	lea    eax,[esp+0xc]
  417e9c:	mov    fs:0x0,eax
  417ea2:	mov    esi,ecx
  417ea4:	sub    esp,0x1c
  417ea7:	lea    eax,[esp+0x3c]
  417eab:	mov    DWORD PTR [esp+0x24],esp
  417eaf:	mov    ecx,esp
  417eb1:	push   eax
  417eb2:	mov    DWORD PTR [esp+0x34],0x0
  417eba:	call   DWORD PTR ds:0x430118
  417ec0:	mov    ecx,DWORD PTR [esp+0x38]
  417ec4:	push   ecx
  417ec5:	call   0x418200
  417eca:	lea    ecx,[esp+0x20]
  417ece:	mov    DWORD PTR [esp+0x14],0xffffffff
  417ed6:	call   DWORD PTR ds:0x430264
  417edc:	mov    eax,esi
  417ede:	mov    ecx,DWORD PTR [esp+0xc]
  417ee2:	mov    DWORD PTR fs:0x0,ecx
  417ee9:	pop    ecx
  417eea:	pop    esi
  417eeb:	add    esp,0x10
  417eee:	ret    0x20
  417ef1:	int3   
  417ef2:	int3   
  417ef3:	int3   
  417ef4:	int3   
  417ef5:	int3   
  417ef6:	int3   
  417ef7:	int3   
  417ef8:	int3   
  417ef9:	int3   
  417efa:	int3   
  417efb:	int3   
  417efc:	int3   
  417efd:	int3   
  417efe:	int3   
  417eff:	int3   
  417f00:	push   0xffffffff
  417f02:	push   0x42bce8
  417f07:	mov    eax,fs:0x0
  417f0d:	push   eax
  417f0e:	push   ecx
  417f0f:	push   esi
  417f10:	mov    eax,ds:0x43e020
  417f15:	xor    eax,esp
  417f17:	push   eax
  417f18:	lea    eax,[esp+0xc]
  417f1c:	mov    fs:0x0,eax
  417f22:	mov    esi,ecx
  417f24:	sub    esp,0x1c
  417f27:	lea    eax,[esp+0x40]
  417f2b:	mov    DWORD PTR [esp+0x24],esp
  417f2f:	mov    ecx,esp
  417f31:	push   eax
  417f32:	mov    DWORD PTR [esp+0x34],0x0
  417f3a:	call   DWORD PTR ds:0x430118
  417f40:	mov    ecx,DWORD PTR [esp+0x3c]
  417f44:	mov    edx,DWORD PTR [esp+0x38]
  417f48:	push   ecx
  417f49:	push   edx
  417f4a:	call   0x418270
  417f4f:	lea    ecx,[esp+0x24]
  417f53:	mov    DWORD PTR [esp+0x14],0xffffffff
  417f5b:	call   DWORD PTR ds:0x430264
  417f61:	mov    eax,esi
  417f63:	mov    ecx,DWORD PTR [esp+0xc]
  417f67:	mov    DWORD PTR fs:0x0,ecx
  417f6e:	pop    ecx
  417f6f:	pop    esi
  417f70:	add    esp,0x10
  417f73:	ret    0x24
  417f76:	int3   
  417f77:	int3   
  417f78:	int3   
  417f79:	int3   
  417f7a:	int3   
  417f7b:	int3   
  417f7c:	int3   
  417f7d:	int3   
  417f7e:	int3   
  417f7f:	int3   
  417f80:	push   0xffffffff
  417f82:	push   0x42bcb8
  417f87:	mov    eax,fs:0x0
  417f8d:	push   eax
  417f8e:	push   ecx
  417f8f:	push   esi
  417f90:	mov    eax,ds:0x43e020
  417f95:	xor    eax,esp
  417f97:	push   eax
  417f98:	lea    eax,[esp+0xc]
  417f9c:	mov    fs:0x0,eax
  417fa2:	mov    esi,ecx
  417fa4:	mov    DWORD PTR [esp+0x14],0x0
  417fac:	mov    eax,DWORD PTR [esp+0x3c]
  417fb0:	mov    ecx,DWORD PTR [esp+0x38]
  417fb4:	push   eax
  417fb5:	push   ecx
  417fb6:	sub    esp,0x1c
  417fb9:	lea    edx,[esp+0x40]
  417fbd:	mov    DWORD PTR [esp+0x2c],esp
  417fc1:	mov    ecx,esp
  417fc3:	push   edx
  417fc4:	call   DWORD PTR ds:0x430118
  417fca:	call   0x4182e0
  417fcf:	lea    ecx,[esp+0x1c]
  417fd3:	mov    DWORD PTR [esp+0x14],0xffffffff
  417fdb:	call   DWORD PTR ds:0x430264
  417fe1:	mov    eax,esi
  417fe3:	mov    ecx,DWORD PTR [esp+0xc]
  417fe7:	mov    DWORD PTR fs:0x0,ecx
  417fee:	pop    ecx
  417fef:	pop    esi
  417ff0:	add    esp,0x10
  417ff3:	ret    0x24
  417ff6:	int3   
  417ff7:	int3   
  417ff8:	int3   
  417ff9:	int3   
  417ffa:	int3   
  417ffb:	int3   
  417ffc:	int3   
  417ffd:	int3   
  417ffe:	int3   
  417fff:	int3   
  418000:	push   0xffffffff
  418002:	push   0x42d8c8
  418007:	mov    eax,fs:0x0
  41800d:	push   eax
  41800e:	sub    esp,0x20
  418011:	push   esi
  418012:	push   edi
  418013:	mov    eax,ds:0x43e020
  418018:	xor    eax,esp
  41801a:	push   eax
  41801b:	lea    eax,[esp+0x2c]
  41801f:	mov    fs:0x0,eax
  418025:	mov    eax,DWORD PTR [esp+0x3c]
  418029:	cmp    DWORD PTR [eax+0x18],0x8
  41802d:	jb     0x418034
  41802f:	mov    ecx,DWORD PTR [eax+0x4]
  418032:	jmp    0x418037
  418034:	lea    ecx,[eax+0x4]
  418037:	mov    eax,DWORD PTR [eax+0x14]
  41803a:	lea    eax,[ecx+eax*2]
  41803d:	mov    DWORD PTR [esp+0x10],eax
  418041:	lea    esi,[esp+0x3c]
  418045:	lea    eax,[esp+0xc]
  418049:	mov    DWORD PTR [esp+0xc],ecx
  41804d:	call   0x419900
  418052:	test   al,al
  418054:	je     0x41806c
  418056:	mov    eax,DWORD PTR [esp+0x3c]
  41805a:	mov    ecx,DWORD PTR [esp+0x2c]
  41805e:	mov    DWORD PTR fs:0x0,ecx
  418065:	pop    ecx
  418066:	pop    edi
  418067:	pop    esi
  418068:	add    esp,0x2c
  41806b:	ret    
  41806c:	push   0x43131c
  418071:	lea    ecx,[esp+0x1c]
  418075:	call   DWORD PTR ds:0x430360
  41807b:	mov    DWORD PTR [esp+0x18],0x43149c
  418083:	mov    DWORD PTR [esp+0x24],0x43e778
  41808b:	mov    DWORD PTR [esp+0x28],0x43e76c
  418093:	lea    edi,[esp+0x18]
  418097:	mov    DWORD PTR [esp+0x34],0x0
  41809f:	call   0x407780
  4180a4:	int3   
  4180a5:	int3   
  4180a6:	int3   
  4180a7:	int3   
  4180a8:	int3   
  4180a9:	int3   
  4180aa:	int3   
  4180ab:	int3   
  4180ac:	int3   
  4180ad:	int3   
  4180ae:	int3   
  4180af:	int3   
  4180b0:	push   0xffffffff
  4180b2:	push   0x42d88a
  4180b7:	mov    eax,fs:0x0
  4180bd:	push   eax
  4180be:	sub    esp,0x38
  4180c1:	mov    eax,ds:0x43e020
  4180c6:	xor    eax,esp
  4180c8:	mov    DWORD PTR [esp+0x34],eax
  4180cc:	push   esi
  4180cd:	mov    eax,ds:0x43e020
  4180d2:	xor    eax,esp
  4180d4:	push   eax
  4180d5:	lea    eax,[esp+0x40]
  4180d9:	mov    fs:0x0,eax
  4180df:	mov    DWORD PTR [esp+0x48],0x0
  4180e7:	mov    esi,ecx
  4180e9:	mov    DWORD PTR [esp+0xc],esi
  4180ed:	mov    DWORD PTR [esp+0x10],0x0
  4180f5:	call   DWORD PTR ds:0x430254
  4180fb:	mov    DWORD PTR [esp+0x48],0x0
  418103:	mov    edx,DWORD PTR [edi]
  418105:	lea    ecx,[esp+0x3a]
  418109:	mov    DWORD PTR [esp+0x10],0x1
  418111:	call   0x407b50
  418116:	mov    ecx,DWORD PTR [esp+0xc]
  41811a:	push   ecx
  41811b:	lea    edx,[esp+0x3e]
  41811f:	push   edx
  418120:	push   eax
  418121:	call   0x407e70
  418126:	mov    eax,esi
  418128:	mov    ecx,DWORD PTR [esp+0x40]
  41812c:	mov    DWORD PTR fs:0x0,ecx
  418133:	pop    ecx
  418134:	pop    esi
  418135:	mov    ecx,DWORD PTR [esp+0x34]
  418139:	xor    ecx,esp
  41813b:	call   0x42503a
  418140:	add    esp,0x44
  418143:	ret    
  418144:	int3   
  418145:	int3   
  418146:	int3   
  418147:	int3   
  418148:	int3   
  418149:	int3   
  41814a:	int3   
  41814b:	int3   
  41814c:	int3   
  41814d:	int3   
  41814e:	int3   
  41814f:	int3   
  418150:	push   0xffffffff
  418152:	push   0x42bc88
  418157:	mov    eax,fs:0x0
  41815d:	push   eax
  41815e:	sub    esp,0x8
  418161:	mov    eax,ds:0x43e020
  418166:	xor    eax,esp
  418168:	push   eax
  418169:	lea    eax,[esp+0xc]
  41816d:	mov    fs:0x0,eax
  418173:	sub    esp,0x1c
  418176:	mov    DWORD PTR [esp+0x30],0x1
  41817e:	lea    eax,[esp+0x58]
  418182:	mov    DWORD PTR [esp+0x20],esp
  418186:	mov    ecx,esp
  418188:	push   eax
  418189:	call   DWORD PTR ds:0x430118
  41818f:	sub    esp,0x1c
  418192:	lea    edx,[esp+0x58]
  418196:	mov    DWORD PTR [esp+0x40],esp
  41819a:	mov    ecx,esp
  41819c:	push   edx
  41819d:	mov    BYTE PTR [esp+0x50],0x2
  4181a2:	call   DWORD PTR ds:0x430118
  4181a8:	mov    eax,DWORD PTR [esp+0x54]
  4181ac:	push   eax
  4181ad:	mov    ecx,esi
  4181af:	mov    BYTE PTR [esp+0x50],0x1
  4181b4:	call   0x418350
  4181b9:	mov    ecx,DWORD PTR [esp+0x58]
  4181bd:	mov    DWORD PTR [esi+0x3c],ecx
  4181c0:	lea    ecx,[esp+0x20]
  4181c4:	mov    BYTE PTR [esp+0x14],0x0
  4181c9:	call   DWORD PTR ds:0x430264
  4181cf:	lea    ecx,[esp+0x3c]
  4181d3:	mov    DWORD PTR [esp+0x14],0xffffffff
  4181db:	call   DWORD PTR ds:0x430264
  4181e1:	mov    eax,esi
  4181e3:	mov    ecx,DWORD PTR [esp+0xc]
  4181e7:	mov    DWORD PTR fs:0x0,ecx
  4181ee:	pop    ecx
  4181ef:	add    esp,0x14
  4181f2:	ret    0x40
  4181f5:	int3   
  4181f6:	int3   
  4181f7:	int3   
  4181f8:	int3   
  4181f9:	int3   
  4181fa:	int3   
  4181fb:	int3   
  4181fc:	int3   
  4181fd:	int3   
  4181fe:	int3   
  4181ff:	int3   
  418200:	push   0xffffffff
  418202:	push   0x42b428
  418207:	mov    eax,fs:0x0
  41820d:	push   eax
  41820e:	mov    eax,ds:0x43e020
  418213:	xor    eax,esp
  418215:	push   eax
  418216:	lea    eax,[esp+0x4]
  41821a:	mov    fs:0x0,eax
  418220:	mov    DWORD PTR [esp+0xc],0x0
  418228:	mov    eax,DWORD PTR [esp+0x14]
  41822c:	lea    edx,[esp+0x18]
  418230:	lea    ecx,[esi+0x4]
  418233:	push   edx
  418234:	mov    DWORD PTR [esi],eax
  418236:	call   DWORD PTR ds:0x430118
  41823c:	lea    ecx,[esp+0x18]
  418240:	mov    DWORD PTR [esp+0xc],0xffffffff
  418248:	call   DWORD PTR ds:0x430264
  41824e:	mov    eax,esi
  418250:	mov    ecx,DWORD PTR [esp+0x4]
  418254:	mov    DWORD PTR fs:0x0,ecx
  41825b:	pop    ecx
  41825c:	add    esp,0xc
  41825f:	ret    0x20
  418262:	int3   
  418263:	int3   
  418264:	int3   
  418265:	int3   
  418266:	int3   
  418267:	int3   
  418268:	int3   
  418269:	int3   
  41826a:	int3   
  41826b:	int3   
  41826c:	int3   
  41826d:	int3   
  41826e:	int3   
  41826f:	int3   
  418270:	push   0xffffffff
  418272:	push   0x42bc48
  418277:	mov    eax,fs:0x0
  41827d:	push   eax
  41827e:	mov    eax,ds:0x43e020
  418283:	xor    eax,esp
  418285:	push   eax
  418286:	lea    eax,[esp+0x4]
  41828a:	mov    fs:0x0,eax
  418290:	mov    DWORD PTR [esp+0xc],0x0
  418298:	mov    ecx,DWORD PTR [esp+0x18]
  41829c:	mov    eax,DWORD PTR [esp+0x14]
  4182a0:	lea    edx,[esp+0x1c]
  4182a4:	mov    DWORD PTR [esi+0x4],ecx
  4182a7:	lea    ecx,[esi+0x8]
  4182aa:	push   edx
  4182ab:	mov    DWORD PTR [esi],eax
  4182ad:	call   DWORD PTR ds:0x430118
  4182b3:	lea    ecx,[esp+0x1c]
  4182b7:	mov    DWORD PTR [esp+0xc],0xffffffff
  4182bf:	call   DWORD PTR ds:0x430264
  4182c5:	mov    eax,esi
  4182c7:	mov    ecx,DWORD PTR [esp+0x4]
  4182cb:	mov    DWORD PTR fs:0x0,ecx
  4182d2:	pop    ecx
  4182d3:	add    esp,0xc
  4182d6:	ret    0x24
  4182d9:	int3   
  4182da:	int3   
  4182db:	int3   
  4182dc:	int3   
  4182dd:	int3   
  4182de:	int3   
  4182df:	int3   
  4182e0:	push   0xffffffff
  4182e2:	push   0x42b3f8
  4182e7:	mov    eax,fs:0x0
  4182ed:	push   eax
  4182ee:	mov    eax,ds:0x43e020
  4182f3:	xor    eax,esp
  4182f5:	push   eax
  4182f6:	lea    eax,[esp+0x4]
  4182fa:	mov    fs:0x0,eax
  418300:	mov    DWORD PTR [esp+0xc],0x0
  418308:	mov    ecx,DWORD PTR [esp+0x34]
  41830c:	mov    eax,DWORD PTR [esp+0x30]
  418310:	lea    edx,[esp+0x14]
  418314:	mov    DWORD PTR [esi+0x4],ecx
  418317:	lea    ecx,[esi+0x8]
  41831a:	push   edx
  41831b:	mov    DWORD PTR [esi],eax
  41831d:	call   DWORD PTR ds:0x430118
  418323:	lea    ecx,[esp+0x14]
  418327:	mov    DWORD PTR [esp+0xc],0xffffffff
  41832f:	call   DWORD PTR ds:0x430264
  418335:	mov    eax,esi
  418337:	mov    ecx,DWORD PTR [esp+0x4]
  41833b:	mov    DWORD PTR fs:0x0,ecx
  418342:	pop    ecx
  418343:	add    esp,0xc
  418346:	ret    0x24
  418349:	int3   
  41834a:	int3   
  41834b:	int3   
  41834c:	int3   
  41834d:	int3   
  41834e:	int3   
  41834f:	int3   
  418350:	push   0xffffffff
  418352:	push   0x42bc18
  418357:	mov    eax,fs:0x0
  41835d:	push   eax
  41835e:	sub    esp,0x8
  418361:	push   esi
  418362:	mov    eax,ds:0x43e020
  418367:	xor    eax,esp
  418369:	push   eax
  41836a:	lea    eax,[esp+0x10]
  41836e:	mov    fs:0x0,eax
  418374:	mov    esi,ecx
  418376:	mov    DWORD PTR [esp+0x8],esi
  41837a:	sub    esp,0x1c
  41837d:	lea    eax,[esp+0x40]
  418381:	mov    DWORD PTR [esp+0x28],esp
  418385:	mov    ecx,esp
  418387:	push   eax
  418388:	mov    DWORD PTR [esp+0x38],0x1
  418390:	call   DWORD PTR ds:0x430118
  418396:	mov    ecx,DWORD PTR [esp+0x3c]
  41839a:	push   ecx
  41839b:	call   0x418200
  4183a0:	lea    edx,[esp+0x40]
  4183a4:	lea    ecx,[esi+0x20]
  4183a7:	push   edx
  4183a8:	mov    BYTE PTR [esp+0x1c],0x2
  4183ad:	call   DWORD PTR ds:0x430118
  4183b3:	lea    ecx,[esp+0x24]
  4183b7:	mov    BYTE PTR [esp+0x18],0x0
  4183bc:	call   DWORD PTR ds:0x430264
  4183c2:	lea    ecx,[esp+0x40]
  4183c6:	mov    DWORD PTR [esp+0x18],0xffffffff
  4183ce:	call   DWORD PTR ds:0x430264
  4183d4:	mov    eax,esi
  4183d6:	mov    ecx,DWORD PTR [esp+0x10]
  4183da:	mov    DWORD PTR fs:0x0,ecx
  4183e1:	pop    ecx
  4183e2:	pop    esi
  4183e3:	add    esp,0x14
  4183e6:	ret    0x3c
  4183e9:	int3   
  4183ea:	int3   
  4183eb:	int3   
  4183ec:	int3   
  4183ed:	int3   
  4183ee:	int3   
  4183ef:	int3   
  4183f0:	mov    ecx,DWORD PTR [edx]
  4183f2:	sub    esp,0x14
  4183f5:	push   edi
  4183f6:	mov    edi,eax
  4183f8:	mov    al,BYTE PTR [ecx]
  4183fa:	cmp    al,0x21
  4183fc:	je     0x41845d
  4183fe:	cmp    al,0x3f
  418400:	je     0x41840d
  418402:	push   edx
  418403:	call   0x419c70
  418408:	pop    edi
  418409:	add    esp,0x14
  41840c:	ret    
  41840d:	lea    eax,[ecx+0x1]
  418410:	mov    DWORD PTR [edx],eax
  418412:	mov    cl,BYTE PTR [eax]
  418414:	cmp    cl,0x78
  418417:	je     0x41841e
  418419:	cmp    cl,0x58
  41841c:	jne    0x418453
  41841e:	cmp    BYTE PTR [eax+0x1],0x6d
  418422:	je     0x41842a
  418424:	cmp    BYTE PTR [eax+0x1],0x4d
  418428:	jne    0x418453
  41842a:	mov    cl,BYTE PTR [eax+0x2]
  41842d:	cmp    cl,0x6c
  418430:	je     0x418437
  418432:	cmp    cl,0x4c
  418435:	jne    0x418453
  418437:	movzx  ecx,BYTE PTR [eax+0x3]
  41843b:	cmp    BYTE PTR [ecx+0x431ed8],0x0
  418442:	je     0x418453
  418444:	add    eax,0x4
  418447:	mov    DWORD PTR [edx],eax
  418449:	call   0x419e40
  41844e:	pop    edi
  41844f:	add    esp,0x14
  418452:	ret    
  418453:	call   0x419e40
  418458:	pop    edi
  418459:	add    esp,0x14
  41845c:	ret    
  41845d:	mov    al,BYTE PTR [ecx+0x1]
  418460:	push   esi
  418461:	lea    esi,[ecx+0x1]
  418464:	cmp    al,0x2d
  418466:	je     0x4184fa
  41846c:	cmp    al,0x44
  41846e:	je     0x4184b7
  418470:	cmp    al,0x5b
  418472:	jne    0x418510
  418478:	cmp    BYTE PTR [ecx+0x2],0x43
  41847c:	jne    0x418510
  418482:	cmp    BYTE PTR [ecx+0x3],0x44
  418486:	jne    0x418510
  41848c:	mov    al,0x41
  41848e:	cmp    BYTE PTR [ecx+0x4],al
  418491:	jne    0x418510
  418493:	cmp    BYTE PTR [ecx+0x5],0x54
  418497:	jne    0x418510
  418499:	cmp    BYTE PTR [ecx+0x6],al
  41849c:	jne    0x418510
  41849e:	cmp    BYTE PTR [ecx+0x7],0x5b
  4184a2:	jne    0x418510
  4184a4:	add    ecx,0x8
  4184a7:	push   edi
  4184a8:	mov    eax,edx
  4184aa:	mov    DWORD PTR [edx],ecx
  4184ac:	call   0x419f00
  4184b1:	pop    esi
  4184b2:	pop    edi
  4184b3:	add    esp,0x14
  4184b6:	ret    
  4184b7:	cmp    BYTE PTR [ecx+0x2],0x4f
  4184bb:	jne    0x418510
  4184bd:	cmp    BYTE PTR [ecx+0x3],0x43
  4184c1:	jne    0x418510
  4184c3:	cmp    BYTE PTR [ecx+0x4],0x54
  4184c7:	jne    0x418510
  4184c9:	cmp    BYTE PTR [ecx+0x5],0x59
  4184cd:	jne    0x418510
  4184cf:	cmp    BYTE PTR [ecx+0x6],0x50
  4184d3:	jne    0x418510
  4184d5:	cmp    BYTE PTR [ecx+0x7],0x45
  4184d9:	jne    0x418510
  4184db:	movzx  eax,BYTE PTR [ecx+0x8]
  4184df:	cmp    BYTE PTR [eax+0x431ed8],0x0
  4184e6:	je     0x418510
  4184e8:	add    ecx,0x9
  4184eb:	mov    eax,edx
  4184ed:	mov    DWORD PTR [edx],ecx
  4184ef:	call   0x419f90
  4184f4:	pop    esi
  4184f5:	pop    edi
  4184f6:	add    esp,0x14
  4184f9:	ret    
  4184fa:	cmp    BYTE PTR [ecx+0x2],0x2d
  4184fe:	jne    0x418510
  418500:	add    ecx,0x3
  418503:	mov    DWORD PTR [edx],ecx
  418505:	call   0x419ea0
  41850a:	pop    esi
  41850b:	pop    edi
  41850c:	add    esp,0x14
  41850f:	ret    
  418510:	mov    DWORD PTR [edx],esi
  418512:	cmp    BYTE PTR [esi],0x3e
  418515:	je     0x418526
  418517:	cmp    BYTE PTR [esi],0x0
  41851a:	je     0x418531
  41851c:	inc    esi
  41851d:	mov    ecx,esi
  41851f:	mov    DWORD PTR [edx],esi
  418521:	cmp    BYTE PTR [ecx],0x3e
  418524:	jne    0x418517
  418526:	inc    esi
  418527:	mov    DWORD PTR [edx],esi
  418529:	pop    esi
  41852a:	xor    eax,eax
  41852c:	pop    edi
  41852d:	add    esp,0x14
  418530:	ret    
  418531:	lea    ecx,[esp+0x8]
  418535:	call   DWORD PTR ds:0x4303ac
  41853b:	push   0x435d14
  418540:	lea    edx,[esp+0xc]
  418544:	push   edx
  418545:	mov    DWORD PTR [esp+0x10],0x43294c
  41854d:	mov    DWORD PTR [esp+0x1c],0x431e6c
  418555:	mov    DWORD PTR [esp+0x20],esi
  418559:	call   0x429e76
  41855e:	int3   
  41855f:	int3   
  418560:	mov    DWORD PTR [esi+0x8],0x0
  418567:	mov    DWORD PTR [esi],0x0
  41856d:	mov    eax,DWORD PTR [ebx+0x4]
  418570:	sub    eax,DWORD PTR [ebx]
  418572:	push   edi
  418573:	mov    DWORD PTR [esi+0x8],eax
  418576:	cmp    eax,0x8
  418579:	ja     0x41857f
  41857b:	mov    edi,esi
  41857d:	jmp    0x41858c
  41857f:	push   eax
  418580:	call   0x425023
  418585:	add    esp,0x4
  418588:	mov    DWORD PTR [esi],eax
  41858a:	mov    edi,eax
  41858c:	mov    ecx,DWORD PTR [ebx]
  41858e:	mov    eax,DWORD PTR [ebx+0x4]
  418591:	sub    eax,ecx
  418593:	test   eax,eax
  418595:	jle    0x4185a4
  418597:	push   eax
  418598:	push   ecx
  418599:	push   eax
  41859a:	push   edi
  41859b:	call   DWORD PTR ds:0x430394
  4185a1:	add    esp,0x10
  4185a4:	mov    eax,DWORD PTR [esi+0x8]
  4185a7:	add    eax,edi
  4185a9:	mov    ecx,eax
  4185ab:	sub    ecx,edi
  4185ad:	push   ecx
  4185ae:	push   eax
  4185af:	push   edi
  4185b0:	call   0x41bcb0
  4185b5:	add    esp,0xc
  4185b8:	mov    eax,esi
  4185ba:	pop    edi
  4185bb:	ret    
  4185bc:	int3   
  4185bd:	int3   
  4185be:	int3   
  4185bf:	int3   
  4185c0:	push   0xffffffff
  4185c2:	push   0x42bbe0
  4185c7:	mov    eax,fs:0x0
  4185cd:	push   eax
  4185ce:	sub    esp,0x18
  4185d1:	push   esi
  4185d2:	mov    eax,ds:0x43e020
  4185d7:	xor    eax,esp
  4185d9:	push   eax
  4185da:	lea    eax,[esp+0x20]
  4185de:	mov    fs:0x0,eax
  4185e4:	mov    DWORD PTR [esp+0xc],0x0
  4185ec:	mov    eax,DWORD PTR [esp+0x3c]
  4185f0:	mov    DWORD PTR [esp+0x28],0x0
  4185f8:	mov    ecx,DWORD PTR [esp+0x38]
  4185fc:	push   eax
  4185fd:	sub    esp,0xc
  418600:	mov    esi,esp
  418602:	mov    eax,ecx
  418604:	mov    DWORD PTR [esp+0x1c],esp
  418608:	mov    DWORD PTR [esi+0x8],ecx
  41860b:	mov    DWORD PTR [esi],0x0
  418611:	cmp    eax,0x8
  418614:	ja     0x41861e
  418616:	mov    eax,esi
  418618:	lea    ecx,[esp+0x40]
  41861c:	jmp    0x41862d
  41861e:	push   eax
  41861f:	call   0x425023
  418624:	mov    DWORD PTR [esi],eax
  418626:	mov    ecx,DWORD PTR [esp+0x44]
  41862a:	add    esp,0x4
  41862d:	mov    edx,DWORD PTR [esi+0x8]
  418630:	push   edx
  418631:	push   ecx
  418632:	push   eax
  418633:	call   0x42a018
  418638:	add    esp,0xc
  41863b:	lea    esi,[esp+0x20]
  41863f:	call   0x4199e0
  418644:	mov    esi,eax
  418646:	mov    BYTE PTR [esp+0x28],0x1
  41864b:	mov    eax,DWORD PTR [esi+0x8]
  41864e:	mov    DWORD PTR [edi+0x8],eax
  418651:	mov    DWORD PTR [edi],0x0
  418657:	cmp    eax,0x8
  41865a:	ja     0x418662
  41865c:	mov    eax,edi
  41865e:	mov    ecx,esi
  418660:	jmp    0x41866f
  418662:	push   eax
  418663:	call   0x425023
  418668:	mov    DWORD PTR [edi],eax
  41866a:	mov    ecx,DWORD PTR [esi]
  41866c:	add    esp,0x4
  41866f:	mov    edx,DWORD PTR [edi+0x8]
  418672:	push   edx
  418673:	push   ecx
  418674:	push   eax
  418675:	call   0x42a018
  41867a:	mov    eax,DWORD PTR [esi+0xc]
  41867d:	add    esp,0xc
  418680:	cmp    DWORD PTR [esp+0x18],0x8
  418685:	mov    DWORD PTR [edi+0xc],eax
  418688:	jbe    0x41869b
  41868a:	mov    eax,DWORD PTR [esp+0x10]
  41868e:	test   eax,eax
  418690:	je     0x41869b
  418692:	push   eax
  418693:	call   0x42517c
  418698:	add    esp,0x4
  41869b:	cmp    DWORD PTR [esp+0x38],0x8
  4186a0:	jbe    0x4186b3
  4186a2:	mov    eax,DWORD PTR [esp+0x30]
  4186a6:	test   eax,eax
  4186a8:	je     0x4186b3
  4186aa:	push   eax
  4186ab:	call   0x42517c
  4186b0:	add    esp,0x4
  4186b3:	mov    eax,edi
  4186b5:	mov    ecx,DWORD PTR [esp+0x20]
  4186b9:	mov    DWORD PTR fs:0x0,ecx
  4186c0:	pop    ecx
  4186c1:	pop    esi
  4186c2:	add    esp,0x24
  4186c5:	ret    
  4186c6:	int3   
  4186c7:	int3   
  4186c8:	int3   
  4186c9:	int3   
  4186ca:	int3   
  4186cb:	int3   
  4186cc:	int3   
  4186cd:	int3   
  4186ce:	int3   
  4186cf:	int3   
  4186d0:	push   0xffffffff
  4186d2:	push   0x42e119
  4186d7:	mov    eax,fs:0x0
  4186dd:	push   eax
  4186de:	sub    esp,0xdc
  4186e4:	push   ebx
  4186e5:	push   ebp
  4186e6:	push   esi
  4186e7:	push   edi
  4186e8:	mov    eax,ds:0x43e020
  4186ed:	xor    eax,esp
  4186ef:	push   eax
  4186f0:	lea    eax,[esp+0xf0]
  4186f7:	mov    fs:0x0,eax
  4186fd:	mov    ebp,DWORD PTR [esp+0x100]
  418704:	mov    eax,DWORD PTR [esp+0x104]
  41870b:	mov    DWORD PTR [esp+0xf8],0x0
  418716:	mov    edi,DWORD PTR [eax]
  418718:	mov    eax,edi
  41871a:	lea    ecx,[eax+0x1]
  41871d:	lea    ecx,[ecx+0x0]
  418720:	mov    dl,BYTE PTR [eax]
  418722:	inc    eax
  418723:	test   dl,dl
  418725:	jne    0x418720
  418727:	sub    eax,ecx
  418729:	mov    ecx,DWORD PTR [esp+0x110]
  418730:	lea    ebx,[eax+edi*1]
  418733:	mov    eax,DWORD PTR [esp+0x14]
  418737:	push   eax
  418738:	sub    esp,0x10
  41873b:	mov    esi,esp
  41873d:	mov    eax,ecx
  41873f:	mov    DWORD PTR [esp+0x28],esp
  418743:	mov    DWORD PTR [esi+0x8],ecx
  418746:	mov    DWORD PTR [esi],0x0
  41874c:	cmp    eax,0x8
  41874f:	ja     0x41875c
  418751:	mov    eax,esi
  418753:	lea    ecx,[esp+0x11c]
  41875a:	jmp    0x41876e
  41875c:	push   eax
  41875d:	call   0x425023
  418762:	mov    DWORD PTR [esi],eax
  418764:	mov    ecx,DWORD PTR [esp+0x120]
  41876b:	add    esp,0x4
  41876e:	mov    edx,DWORD PTR [esi+0x8]
  418771:	push   edx
  418772:	push   ecx
  418773:	push   eax
  418774:	call   0x42a018
  418779:	mov    eax,DWORD PTR [esp+0x134]
  418780:	add    esp,0xc
  418783:	push   edi
  418784:	lea    ecx,[esp+0xcc]
  41878b:	mov    DWORD PTR [esi+0xc],eax
  41878e:	call   0x41a050
  418793:	sub    esp,0x38
  418796:	mov    BYTE PTR [esp+0x134],0x1
  41879e:	mov    edi,eax
  4187a0:	mov    esi,esp
  4187a2:	mov    DWORD PTR [esp+0x50],esp
  4187a6:	call   0x419a80
  4187ab:	lea    ecx,[esp+0xb0]
  4187b2:	push   ecx
  4187b3:	call   0x41a130
  4187b8:	add    esp,0x40
  4187bb:	mov    BYTE PTR [esp+0xf8],0x3
  4187c3:	mov    eax,DWORD PTR [esp+0xb4]
  4187ca:	xor    esi,esi
  4187cc:	cmp    eax,esi
  4187ce:	je     0x4187f6
  4187d0:	test   al,0x1
  4187d2:	jne    0x4187ef
  4187d4:	and    eax,0xfffffffe
  4187d7:	mov    eax,DWORD PTR [eax]
  4187d9:	cmp    eax,esi
  4187db:	je     0x4187ef
  4187dd:	lea    edx,[esp+0xbc]
  4187e4:	push   0x2
  4187e6:	push   edx
  4187e7:	mov    ecx,edx
  4187e9:	push   ecx
  4187ea:	call   eax
  4187ec:	add    esp,0xc
  4187ef:	mov    DWORD PTR [esp+0xb4],esi
  4187f6:	mov    edx,DWORD PTR [esp+0x14]
  4187fa:	push   edx
  4187fb:	sub    esp,0x38
  4187fe:	mov    eax,esp
  418800:	mov    DWORD PTR [eax],esi
  418802:	mov    DWORD PTR [eax+0x20],esi
  418805:	mov    DWORD PTR [eax+0x24],esi
  418808:	lea    eax,[esp+0x70]
  41880c:	mov    DWORD PTR [esp+0x50],esp
  418810:	push   eax
  418811:	call   0x41a130
  418816:	mov    bl,0x4
  418818:	mov    BYTE PTR [esp+0x138],bl
  41881f:	mov    esi,esp
  418821:	lea    edi,[esp+0x74]
  418825:	mov    DWORD PTR [esp+0x54],esp
  418829:	call   0x419a80
  41882e:	sub    esp,0x40
  418831:	mov    esi,esp
  418833:	lea    edi,[esp+0xf4]
  41883a:	mov    BYTE PTR [esp+0x178],0x5
  418842:	mov    DWORD PTR [esp+0x98],esp
  418849:	call   0x419a80
  41884e:	lea    ecx,[esp+0x9c]
  418855:	push   ecx
  418856:	mov    BYTE PTR [esp+0x17c],bl
  41885d:	call   0x41a1c0
  418862:	lea    edx,[esp+0x1c]
  418866:	mov    eax,ebp
  418868:	mov    BYTE PTR [esp+0xf8],0x6
  418870:	call   0x419980
  418875:	lea    ebx,[esp+0x1c]
  418879:	mov    BYTE PTR [esp+0xf8],0x7
  418881:	call   0x413590
  418886:	mov    edx,DWORD PTR [esp+0x1c]
  41888a:	push   edx
  41888b:	call   0x42504a
  418890:	mov    BYTE PTR [esp+0xfc],0x3
  418898:	mov    eax,DWORD PTR [esp+0x38]
  41889c:	xor    ebx,ebx
  41889e:	add    esp,0x4
  4188a1:	cmp    eax,ebx
  4188a3:	je     0x4188c5
  4188a5:	test   al,0x1
  4188a7:	jne    0x4188c1
  4188a9:	and    eax,0xfffffffe
  4188ac:	mov    eax,DWORD PTR [eax]
  4188ae:	cmp    eax,ebx
  4188b0:	je     0x4188c1
  4188b2:	lea    ecx,[esp+0x3c]
  4188b6:	push   0x2
  4188b8:	push   ecx
  4188b9:	mov    edx,ecx
  4188bb:	push   edx
  4188bc:	call   eax
  4188be:	add    esp,0xc
  4188c1:	mov    DWORD PTR [esp+0x34],ebx
  4188c5:	mov    BYTE PTR [esp+0xf8],bl
  4188cc:	mov    eax,DWORD PTR [esp+0x74]
  4188d0:	cmp    eax,ebx
  4188d2:	je     0x4188f4
  4188d4:	test   al,0x1
  4188d6:	jne    0x4188f0
  4188d8:	and    eax,0xfffffffe
  4188db:	mov    eax,DWORD PTR [eax]
  4188dd:	cmp    eax,ebx
  4188df:	je     0x4188f0
  4188e1:	lea    ecx,[esp+0x7c]
  4188e5:	push   0x2
  4188e7:	push   ecx
  4188e8:	mov    edx,ecx
  4188ea:	push   edx
  4188eb:	call   eax
  4188ed:	add    esp,0xc
  4188f0:	mov    DWORD PTR [esp+0x74],ebx
  4188f4:	cmp    DWORD PTR [esp+0x110],0x8
  4188fc:	jbe    0x418912
  4188fe:	mov    eax,DWORD PTR [esp+0x108]
  418905:	cmp    eax,ebx
  418907:	je     0x418912
  418909:	push   eax
  41890a:	call   0x42517c
  41890f:	add    esp,0x4
  418912:	mov    eax,ebp
  418914:	mov    ecx,DWORD PTR [esp+0xf0]
  41891b:	mov    DWORD PTR fs:0x0,ecx
  418922:	pop    ecx
  418923:	pop    edi
  418924:	pop    esi
  418925:	pop    ebp
  418926:	pop    ebx
  418927:	add    esp,0xe8
  41892d:	ret    
  41892e:	int3   
  41892f:	int3   
  418930:	push   ecx
  418931:	push   esi
  418932:	mov    esi,ecx
  418934:	mov    DWORD PTR [esp+0x4],0x0
  41893c:	call   0x419bc0
  418941:	mov    eax,esi
  418943:	pop    esi
  418944:	pop    ecx
  418945:	ret    
  418946:	int3   
  418947:	int3   
  418948:	int3   
  418949:	int3   
  41894a:	int3   
  41894b:	int3   
  41894c:	int3   
  41894d:	int3   
  41894e:	int3   
  41894f:	int3   
  418950:	sub    esp,0x20
  418953:	lea    eax,[esp]
  418956:	push   eax
  418957:	mov    ecx,esi
  418959:	call   DWORD PTR ds:0x430124
  41895f:	lea    ecx,[esp+0x8]
  418963:	push   ecx
  418964:	mov    ecx,esi
  418966:	call   DWORD PTR ds:0x430128
  41896c:	mov    edx,DWORD PTR [esp+0x4]
  418970:	mov    eax,DWORD PTR [esp]
  418973:	mov    ecx,DWORD PTR [esp+0xc]
  418977:	push   edx
  418978:	mov    edx,DWORD PTR [esp+0xc]
  41897c:	push   eax
  41897d:	push   ecx
  41897e:	push   edx
  41897f:	lea    eax,[esp+0x20]
  418983:	push   eax
  418984:	lea    ecx,[esp+0x38]
  418988:	push   ecx
  418989:	call   0x41a2d0
  41898e:	mov    edx,DWORD PTR [eax]
  418990:	sub    esp,0x10
  418993:	mov    ecx,esp
  418995:	mov    DWORD PTR [ecx],edx
  418997:	mov    edx,DWORD PTR [eax+0x4]
  41899a:	mov    DWORD PTR [ecx+0x4],edx
  41899d:	mov    edx,DWORD PTR [eax+0x8]
  4189a0:	mov    eax,DWORD PTR [eax+0xc]
  4189a3:	mov    DWORD PTR [ecx+0x8],edx
  4189a6:	mov    edx,DWORD PTR [esp+0x40]
  4189aa:	mov    DWORD PTR [ecx+0xc],eax
  4189ad:	mov    ecx,DWORD PTR [esp+0x44]
  4189b1:	push   ecx
  4189b2:	mov    ecx,DWORD PTR [esp+0x38]
  4189b6:	push   edx
  4189b7:	mov    edx,DWORD PTR [esp+0x40]
  4189bb:	sub    esp,0xc
  4189be:	mov    eax,esp
  4189c0:	mov    DWORD PTR [eax],ecx
  4189c2:	mov    ecx,DWORD PTR [esp+0x50]
  4189c6:	mov    DWORD PTR [eax+0x4],edx
  4189c9:	push   esi
  4189ca:	mov    DWORD PTR [eax+0x8],ecx
  4189cd:	call   0x41a420
  4189d2:	add    esp,0x48
  4189d5:	ret    
  4189d6:	int3   
  4189d7:	int3   
  4189d8:	int3   
  4189d9:	int3   
  4189da:	int3   
  4189db:	int3   
  4189dc:	int3   
  4189dd:	int3   
  4189de:	int3   
  4189df:	int3   
  4189e0:	sub    esp,0x14
  4189e3:	push   ebx
  4189e4:	mov    ebx,DWORD PTR [esp+0x1c]
  4189e8:	push   ebp
  4189e9:	mov    ebp,DWORD PTR [esp+0x2c]
  4189ed:	push   esi
  4189ee:	push   edi
  4189ef:	mov    edi,DWORD PTR [esp+0x2c]
  4189f3:	mov    ecx,edi
  4189f5:	sub    ecx,ebx
  4189f7:	mov    eax,0x2aaaaaab
  4189fc:	imul   ecx
  4189fe:	sar    edx,0x4
  418a01:	mov    eax,edx
  418a03:	shr    eax,0x1f
  418a06:	add    eax,edx
  418a08:	cmp    eax,0x20
  418a0b:	jle    0x418aba
  418a11:	mov    esi,DWORD PTR [esp+0x30]
  418a15:	test   esi,esi
  418a17:	jle    0x418ad6
  418a1d:	push   ebp
  418a1e:	push   edi
  418a1f:	lea    eax,[esp+0x1c]
  418a23:	push   ebx
  418a24:	push   eax
  418a25:	call   0x41a4b0
  418a2a:	mov    eax,esi
  418a2c:	cdq    
  418a2d:	sub    eax,edx
  418a2f:	sar    eax,1
  418a31:	mov    esi,eax
  418a33:	cdq    
  418a34:	sub    eax,edx
  418a36:	sar    eax,1
  418a38:	add    esi,eax
  418a3a:	mov    ecx,edi
  418a3c:	sub    ecx,DWORD PTR [esp+0x28]
  418a40:	mov    eax,0x2aaaaaab
  418a45:	imul   ecx
  418a47:	mov    ecx,DWORD PTR [esp+0x24]
  418a4b:	sar    edx,0x4
  418a4e:	mov    eax,edx
  418a50:	shr    eax,0x1f
  418a53:	add    eax,edx
  418a55:	sub    ecx,ebx
  418a57:	mov    DWORD PTR [esp+0x2c],eax
  418a5b:	mov    eax,0x2aaaaaab
  418a60:	imul   ecx
  418a62:	mov    eax,DWORD PTR [esp+0x2c]
  418a66:	sar    edx,0x4
  418a69:	mov    ecx,edx
  418a6b:	add    esp,0x10
  418a6e:	shr    ecx,0x1f
  418a71:	add    ecx,edx
  418a73:	cmp    ecx,eax
  418a75:	push   ebp
  418a76:	push   esi
  418a77:	jge    0x418a8a
  418a79:	mov    edx,DWORD PTR [esp+0x1c]
  418a7d:	push   edx
  418a7e:	push   ebx
  418a7f:	call   0x4189e0
  418a84:	mov    ebx,DWORD PTR [esp+0x28]
  418a88:	jmp    0x418a99
  418a8a:	mov    eax,DWORD PTR [esp+0x20]
  418a8e:	push   edi
  418a8f:	push   eax
  418a90:	call   0x4189e0
  418a95:	mov    edi,DWORD PTR [esp+0x24]
  418a99:	mov    ecx,edi
  418a9b:	sub    ecx,ebx
  418a9d:	mov    eax,0x2aaaaaab
  418aa2:	imul   ecx
  418aa4:	sar    edx,0x4
  418aa7:	mov    eax,edx
  418aa9:	shr    eax,0x1f
  418aac:	add    eax,edx
  418aae:	add    esp,0x10
  418ab1:	cmp    eax,0x20
  418ab4:	jg     0x418a15
  418aba:	cmp    eax,0x1
  418abd:	jle    0x418ace
  418abf:	cmp    ebx,edi
  418ac1:	je     0x418ace
  418ac3:	push   ebp
  418ac4:	push   edi
  418ac5:	push   ebx
  418ac6:	call   0x41c4f0
  418acb:	add    esp,0xc
  418ace:	pop    edi
  418acf:	pop    esi
  418ad0:	pop    ebp
  418ad1:	pop    ebx
  418ad2:	add    esp,0x14
  418ad5:	ret    
  418ad6:	cmp    eax,0x20
  418ad9:	jle    0x418aba
  418adb:	mov    ecx,edi
  418add:	sub    ecx,ebx
  418adf:	mov    eax,0x2aaaaaab
  418ae4:	imul   ecx
  418ae6:	sar    edx,0x4
  418ae9:	mov    ecx,edx
  418aeb:	shr    ecx,0x1f
  418aee:	add    ecx,edx
  418af0:	cmp    ecx,0x1
  418af3:	jle    0x418b01
  418af5:	push   ebp
  418af6:	push   ebx
  418af7:	mov    eax,edi
  418af9:	call   0x41c410
  418afe:	add    esp,0x8
  418b01:	push   ebp
  418b02:	mov    eax,edi
  418b04:	mov    ecx,ebx
  418b06:	call   0x41c470
  418b0b:	add    esp,0x4
  418b0e:	pop    edi
  418b0f:	pop    esi
  418b10:	pop    ebp
  418b11:	pop    ebx
  418b12:	add    esp,0x14
  418b15:	ret    
  418b16:	int3   
  418b17:	int3   
  418b18:	int3   
  418b19:	int3   
  418b1a:	int3   
  418b1b:	int3   
  418b1c:	int3   
  418b1d:	int3   
  418b1e:	int3   
  418b1f:	int3   
  418b20:	push   ebp
  418b21:	mov    ebp,esp
  418b23:	push   0xffffffff
  418b25:	push   0x42bbb0
  418b2a:	mov    eax,fs:0x0
  418b30:	push   eax
  418b31:	push   ecx
  418b32:	push   ebx
  418b33:	push   esi
  418b34:	push   edi
  418b35:	mov    eax,ds:0x43e020
  418b3a:	xor    eax,ebp
  418b3c:	push   eax
  418b3d:	lea    eax,[ebp-0xc]
  418b40:	mov    fs:0x0,eax
  418b46:	mov    DWORD PTR [ebp-0x10],esp
  418b49:	mov    esi,ecx
  418b4b:	push   0x10
  418b4d:	mov    DWORD PTR [esi],0x0
  418b53:	mov    DWORD PTR [ebp-0x4],0x0
  418b5a:	call   0x425050
  418b5f:	add    esp,0x4
  418b62:	test   eax,eax
  418b64:	je     0x418b7f
  418b66:	mov    ecx,0x1
  418b6b:	mov    DWORD PTR [eax+0x4],ecx
  418b6e:	mov    DWORD PTR [eax+0x8],ecx
  418b71:	mov    ecx,DWORD PTR [ebp+0x8]
  418b74:	mov    DWORD PTR [eax],0x430630
  418b7a:	mov    DWORD PTR [eax+0xc],ecx
  418b7d:	jmp    0x418b81
  418b7f:	xor    eax,eax
  418b81:	mov    DWORD PTR [esi],eax
  418b83:	mov    eax,esi
  418b85:	mov    ecx,DWORD PTR [ebp-0xc]
  418b88:	mov    DWORD PTR fs:0x0,ecx
  418b8f:	pop    ecx
  418b90:	pop    edi
  418b91:	pop    esi
  418b92:	pop    ebx
  418b93:	mov    esp,ebp
  418b95:	pop    ebp
  418b96:	ret    0x4
  418b99:	mov    edx,DWORD PTR [ebp+0x8]
  418b9c:	push   edx
  418b9d:	call   0x41a660
  418ba2:	add    esp,0x4
  418ba5:	push   0x0
  418ba7:	push   0x0
  418ba9:	call   0x429e76
  418bae:	int3   
  418baf:	int3   
  418bb0:	push   ebp
  418bb1:	mov    ebp,esp
  418bb3:	push   0xffffffff
  418bb5:	push   0x42d0b0
  418bba:	mov    eax,fs:0x0
  418bc0:	push   eax
  418bc1:	push   ecx
  418bc2:	push   ebx
  418bc3:	push   esi
  418bc4:	push   edi
  418bc5:	mov    eax,ds:0x43e020
  418bca:	xor    eax,ebp
  418bcc:	push   eax
  418bcd:	lea    eax,[ebp-0xc]
  418bd0:	mov    fs:0x0,eax
  418bd6:	mov    DWORD PTR [ebp-0x10],esp
  418bd9:	mov    esi,ecx
  418bdb:	push   0x10
  418bdd:	mov    DWORD PTR [esi],0x0
  418be3:	mov    DWORD PTR [ebp-0x4],0x0
  418bea:	call   0x425050
  418bef:	add    esp,0x4
  418bf2:	test   eax,eax
  418bf4:	je     0x418c0f
  418bf6:	mov    ecx,0x1
  418bfb:	mov    DWORD PTR [eax+0x4],ecx
  418bfe:	mov    DWORD PTR [eax+0x8],ecx
  418c01:	mov    ecx,DWORD PTR [ebp+0x8]
  418c04:	mov    DWORD PTR [eax],0x432984
  418c0a:	mov    DWORD PTR [eax+0xc],ecx
  418c0d:	jmp    0x418c11
  418c0f:	xor    eax,eax
  418c11:	mov    DWORD PTR [esi],eax
  418c13:	mov    eax,esi
  418c15:	mov    ecx,DWORD PTR [ebp-0xc]
  418c18:	mov    DWORD PTR fs:0x0,ecx
  418c1f:	pop    ecx
  418c20:	pop    edi
  418c21:	pop    esi
  418c22:	pop    ebx
  418c23:	mov    esp,ebp
  418c25:	pop    ebp
  418c26:	ret    0x4
  418c29:	mov    esi,DWORD PTR [ebp+0x8]
  418c2c:	test   esi,esi
  418c2e:	je     0x418c3f
  418c30:	push   esi
  418c31:	call   0x412dd0
  418c36:	push   esi
  418c37:	call   0x42504a
  418c3c:	add    esp,0x4
  418c3f:	push   0x0
  418c41:	push   0x0
  418c43:	call   0x429e76
  418c48:	int3   
  418c49:	int3   
  418c4a:	int3   
  418c4b:	int3   
  418c4c:	int3   
  418c4d:	int3   
  418c4e:	int3   
  418c4f:	int3   
  418c50:	cmp    BYTE PTR ds:0x4400e1,0x0
  418c57:	jne    0x418d0a
  418c5d:	push   ebx
  418c5e:	push   esi
  418c5f:	push   edi
  418c60:	xor    bl,bl
  418c62:	xor    eax,eax
  418c64:	mov    cl,0x80
  418c66:	test   bl,cl
  418c68:	je     0x418c6f
  418c6a:	xor    eax,0x80000000
  418c6f:	test   eax,eax
  418c71:	jns    0x418c7c
  418c73:	add    eax,eax
  418c75:	xor    eax,0x4c11db7
  418c7a:	jmp    0x418c7e
  418c7c:	add    eax,eax
  418c7e:	shr    cl,1
  418c80:	jne    0x418c66
  418c82:	mov    edx,eax
  418c84:	xor    esi,esi
  418c86:	xor    eax,eax
  418c88:	test   dl,0x1
  418c8b:	je     0x418c9d
  418c8d:	mov    ecx,0x1f
  418c92:	sub    ecx,eax
  418c94:	mov    edi,0x1
  418c99:	shl    edi,cl
  418c9b:	or     esi,edi
  418c9d:	inc    eax
  418c9e:	shr    edx,1
  418ca0:	cmp    eax,0x20
  418ca3:	jb     0x418c88
  418ca5:	xor    cl,cl
  418ca7:	test   bl,0x1
  418caa:	je     0x418cae
  418cac:	mov    cl,0x80
  418cae:	mov    al,bl
  418cb0:	shr    al,1
  418cb2:	test   al,0x1
  418cb4:	je     0x418cb9
  418cb6:	or     cl,0x40
  418cb9:	shr    al,1
  418cbb:	test   al,0x1
  418cbd:	je     0x418cc2
  418cbf:	or     cl,0x20
  418cc2:	shr    al,1
  418cc4:	test   al,0x1
  418cc6:	je     0x418ccb
  418cc8:	or     cl,0x10
  418ccb:	shr    al,1
  418ccd:	test   al,0x1
  418ccf:	je     0x418cd4
  418cd1:	or     cl,0x8
  418cd4:	shr    al,1
  418cd6:	test   al,0x1
  418cd8:	je     0x418cdd
  418cda:	or     cl,0x4
  418cdd:	shr    al,1
  418cdf:	test   al,0x1
  418ce1:	je     0x418ce6
  418ce3:	or     cl,0x2
  418ce6:	test   al,0x2
  418ce8:	je     0x418ced
  418cea:	or     cl,0x1
  418ced:	add    bl,0x1
  418cf0:	movzx  eax,cl
  418cf3:	mov    DWORD PTR [eax*4+0x4400e8],esi
  418cfa:	jne    0x418c62
  418d00:	pop    edi
  418d01:	pop    esi
  418d02:	mov    BYTE PTR ds:0x4400e1,0x1
  418d09:	pop    ebx
  418d0a:	ret    
  418d0b:	int3   
  418d0c:	int3   
  418d0d:	int3   
  418d0e:	int3   
  418d0f:	int3   
  418d10:	sub    esp,0xc
  418d13:	mov    eax,DWORD PTR [esp+0x10]
  418d17:	mov    ecx,DWORD PTR [esp+0x14]
  418d1b:	lea    edx,[esp]
  418d1e:	push   edx
  418d1f:	mov    DWORD PTR [esi],0x0
  418d25:	mov    DWORD PTR [esp+0x4],eax
  418d29:	mov    DWORD PTR [esp+0x8],ecx
  418d2d:	call   0x408050
  418d32:	add    esp,0x4
  418d35:	test   al,al
  418d37:	jne    0x418d5e
  418d39:	lea    eax,[esi+0x8]
  418d3c:	test   eax,eax
  418d3e:	je     0x418d4c
  418d40:	mov    ecx,DWORD PTR [esp]
  418d43:	mov    edx,DWORD PTR [esp+0x4]
  418d47:	mov    DWORD PTR [eax],ecx
  418d49:	mov    DWORD PTR [eax+0x4],edx
  418d4c:	mov    eax,0x431ea8
  418d51:	or     eax,0x1
  418d54:	mov    DWORD PTR [esi],eax
  418d56:	mov    eax,esi
  418d58:	add    esp,0xc
  418d5b:	ret    0x8
  418d5e:	mov    DWORD PTR [esi],0x0
  418d64:	mov    eax,esi
  418d66:	add    esp,0xc
  418d69:	ret    0x8
  418d6c:	int3   
  418d6d:	int3   
  418d6e:	int3   
  418d6f:	int3   
  418d70:	push   0xffffffff
  418d72:	push   0x42c748
  418d77:	mov    eax,fs:0x0
  418d7d:	push   eax
  418d7e:	push   ecx
  418d7f:	push   esi
  418d80:	push   edi
  418d81:	mov    eax,ds:0x43e020
  418d86:	xor    eax,esp
  418d88:	push   eax
  418d89:	lea    eax,[esp+0x10]
  418d8d:	mov    fs:0x0,eax
  418d93:	mov    esi,ecx
  418d95:	sub    esp,0x44
  418d98:	mov    DWORD PTR [esp+0x5c],0x0
  418da0:	mov    ecx,DWORD PTR [esp+0x64]
  418da4:	mov    eax,esp
  418da6:	mov    DWORD PTR [esi],0x0
  418dac:	lea    edi,[eax+0x4]
  418daf:	mov    DWORD PTR [esp+0x50],esp
  418db3:	mov    DWORD PTR [eax],ecx
  418db5:	push   edi
  418db6:	lea    ecx,[esp+0x6c]
  418dba:	call   0x417d60
  418dbf:	mov    edx,DWORD PTR [esp+0xa4]
  418dc6:	mov    DWORD PTR [edi+0x3c],edx
  418dc9:	call   0x41a680
  418dce:	lea    eax,[esp+0x24]
  418dd2:	push   eax
  418dd3:	mov    DWORD PTR [esp+0x1c],0xffffffff
  418ddb:	call   0x40e010
  418de0:	mov    eax,esi
  418de2:	mov    ecx,DWORD PTR [esp+0x10]
  418de6:	mov    DWORD PTR fs:0x0,ecx
  418ded:	pop    ecx
  418dee:	pop    edi
  418def:	pop    esi
  418df0:	add    esp,0x10
  418df3:	ret    0x44
  418df6:	int3   
  418df7:	int3   
  418df8:	int3   
  418df9:	int3   
  418dfa:	int3   
  418dfb:	int3   
  418dfc:	int3   
  418dfd:	int3   
  418dfe:	int3   
  418dff:	int3   
  418e00:	push   0xffffffff
  418e02:	push   0x42b9b8
  418e07:	mov    eax,fs:0x0
  418e0d:	push   eax
  418e0e:	push   ecx
  418e0f:	push   edi
  418e10:	mov    eax,ds:0x43e020
  418e15:	xor    eax,esp
  418e17:	push   eax
  418e18:	lea    eax,[esp+0xc]
  418e1c:	mov    fs:0x0,eax
  418e22:	mov    edi,ecx
  418e24:	mov    DWORD PTR [esp+0x14],0x0
  418e2c:	mov    ecx,DWORD PTR [esp+0x1c]
  418e30:	sub    esp,0x24
  418e33:	mov    eax,esp
  418e35:	mov    DWORD PTR [edi],0x0
  418e3b:	mov    DWORD PTR [eax],ecx
  418e3d:	mov    edx,DWORD PTR [esp+0x44]
  418e41:	mov    DWORD PTR [eax+0x4],edx
  418e44:	lea    ecx,[eax+0x8]
  418e47:	lea    eax,[esp+0x48]
  418e4b:	mov    DWORD PTR [esp+0x2c],esp
  418e4f:	push   eax
  418e50:	call   DWORD PTR ds:0x430118
  418e56:	call   0x41a710
  418e5b:	lea    ecx,[esp+0x24]
  418e5f:	mov    DWORD PTR [esp+0x14],0xffffffff
  418e67:	call   DWORD PTR ds:0x430264
  418e6d:	mov    eax,edi
  418e6f:	mov    ecx,DWORD PTR [esp+0xc]
  418e73:	mov    DWORD PTR fs:0x0,ecx
  418e7a:	pop    ecx
  418e7b:	pop    edi
  418e7c:	add    esp,0x10
  418e7f:	ret    0x24
  418e82:	int3   
  418e83:	int3   
  418e84:	int3   
  418e85:	int3   
  418e86:	int3   
  418e87:	int3   
  418e88:	int3   
  418e89:	int3   
  418e8a:	int3   
  418e8b:	int3   
  418e8c:	int3   
  418e8d:	int3   
  418e8e:	int3   
  418e8f:	int3   
  418e90:	sub    esp,0xc
  418e93:	mov    eax,DWORD PTR [esp+0x10]
  418e97:	mov    ecx,DWORD PTR [esp+0x14]
  418e9b:	lea    edx,[esp]
  418e9e:	push   edx
  418e9f:	mov    DWORD PTR [esi],0x0
  418ea5:	mov    DWORD PTR [esp+0x4],eax
  418ea9:	mov    DWORD PTR [esp+0x8],ecx
  418ead:	call   0x408050
  418eb2:	add    esp,0x4
  418eb5:	test   al,al
  418eb7:	jne    0x418ede
  418eb9:	lea    eax,[esi+0x8]
  418ebc:	test   eax,eax
  418ebe:	je     0x418ecc
  418ec0:	mov    ecx,DWORD PTR [esp]
  418ec3:	mov    edx,DWORD PTR [esp+0x4]
  418ec7:	mov    DWORD PTR [eax],ecx
  418ec9:	mov    DWORD PTR [eax+0x4],edx
  418ecc:	mov    eax,0x431ec0
  418ed1:	or     eax,0x1
  418ed4:	mov    DWORD PTR [esi],eax
  418ed6:	mov    eax,esi
  418ed8:	add    esp,0xc
  418edb:	ret    0x8
  418ede:	mov    DWORD PTR [esi],0x0
  418ee4:	mov    eax,esi
  418ee6:	add    esp,0xc
  418ee9:	ret    0x8
  418eec:	int3   
  418eed:	int3   
  418eee:	int3   
  418eef:	int3   
  418ef0:	sub    esp,0x18
  418ef3:	cmp    DWORD PTR [edi+0x14],0x0
  418ef7:	push   ebx
  418ef8:	push   ebp
  418ef9:	push   esi
  418efa:	je     0x418f9f
  418f00:	lea    eax,[esp+0x10]
  418f04:	push   eax
  418f05:	mov    ecx,edi
  418f07:	call   DWORD PTR ds:0x43020c
  418f0d:	mov    esi,eax
  418f0f:	mov    eax,DWORD PTR [esi]
  418f11:	cmp    eax,0xfffffffc
  418f14:	je     0x418f40
  418f16:	test   eax,eax
  418f18:	jne    0x418f20
  418f1a:	call   DWORD PTR ds:0x430390
  418f20:	mov    eax,DWORD PTR [esi]
  418f22:	cmp    DWORD PTR [eax+0x18],0x10
  418f26:	jb     0x418f2d
  418f28:	mov    ecx,DWORD PTR [eax+0x4]
  418f2b:	jmp    0x418f30
  418f2d:	lea    ecx,[eax+0x4]
  418f30:	mov    edx,DWORD PTR [eax+0x14]
  418f33:	add    edx,ecx
  418f35:	cmp    DWORD PTR [esi+0x4],edx
  418f38:	jb     0x418f40
  418f3a:	call   DWORD PTR ds:0x430390
  418f40:	mov    ebx,DWORD PTR [esi+0x4]
  418f43:	mov    ebp,DWORD PTR [edi+0x14]
  418f46:	lea    eax,[esp+0x18]
  418f4a:	push   eax
  418f4b:	mov    ecx,edi
  418f4d:	call   DWORD PTR ds:0x43020c
  418f53:	mov    esi,eax
  418f55:	mov    eax,DWORD PTR [esi]
  418f57:	cmp    eax,0xfffffffc
  418f5a:	je     0x418f86
  418f5c:	test   eax,eax
  418f5e:	jne    0x418f66
  418f60:	call   DWORD PTR ds:0x430390
  418f66:	mov    eax,DWORD PTR [esi]
  418f68:	cmp    DWORD PTR [eax+0x18],0x10
  418f6c:	jb     0x418f73
  418f6e:	mov    ecx,DWORD PTR [eax+0x4]
  418f71:	jmp    0x418f76
  418f73:	lea    ecx,[eax+0x4]
  418f76:	mov    edx,DWORD PTR [eax+0x14]
  418f79:	add    edx,ecx
  418f7b:	cmp    DWORD PTR [esi+0x4],edx
  418f7e:	jb     0x418f86
  418f80:	call   DWORD PTR ds:0x430390
  418f86:	mov    eax,DWORD PTR [esp+0x2c]
  418f8a:	mov    ecx,DWORD PTR [esp+0x28]
  418f8e:	mov    edx,DWORD PTR [esi+0x4]
  418f91:	push   eax
  418f92:	push   ecx
  418f93:	add    ebp,ebx
  418f95:	push   ebp
  418f96:	push   edx
  418f97:	call   0x425ef0
  418f9c:	add    esp,0x10
  418f9f:	pop    esi
  418fa0:	pop    ebp
  418fa1:	pop    ebx
  418fa2:	add    esp,0x18
  418fa5:	ret    
  418fa6:	int3   
  418fa7:	int3   
  418fa8:	int3   
  418fa9:	int3   
  418faa:	int3   
  418fab:	int3   
  418fac:	int3   
  418fad:	int3   
  418fae:	int3   
  418faf:	int3   
  418fb0:	push   ebp
  418fb1:	mov    ebp,esp
  418fb3:	push   0xffffffff
  418fb5:	push   0x42d850
  418fba:	mov    eax,fs:0x0
  418fc0:	push   eax
  418fc1:	sub    esp,0x8
  418fc4:	push   ebx
  418fc5:	push   esi
  418fc6:	push   edi
  418fc7:	mov    eax,ds:0x43e020
  418fcc:	xor    eax,ebp
  418fce:	push   eax
  418fcf:	lea    eax,[ebp-0xc]
  418fd2:	mov    fs:0x0,eax
  418fd8:	mov    DWORD PTR [ebp-0x10],esp
  418fdb:	mov    esi,ecx
  418fdd:	push   0x10
  418fdf:	mov    DWORD PTR [esi],0x0
  418fe5:	mov    DWORD PTR [ebp-0x4],0x0
  418fec:	call   0x425050
  418ff1:	add    esp,0x4
  418ff4:	test   eax,eax
  418ff6:	je     0x419011
  418ff8:	mov    ecx,0x1
  418ffd:	mov    DWORD PTR [eax+0x4],ecx
  419000:	mov    DWORD PTR [eax+0x8],ecx
  419003:	mov    ecx,DWORD PTR [ebp+0x8]
  419006:	mov    DWORD PTR [eax],0x432998
  41900c:	mov    DWORD PTR [eax+0xc],ecx
  41900f:	jmp    0x419013
  419011:	xor    eax,eax
  419013:	mov    DWORD PTR [esi],eax
  419015:	mov    eax,esi
  419017:	mov    ecx,DWORD PTR [ebp-0xc]
  41901a:	mov    DWORD PTR fs:0x0,ecx
  419021:	pop    ecx
  419022:	pop    edi
  419023:	pop    esi
  419024:	pop    ebx
  419025:	mov    esp,ebp
  419027:	pop    ebp
  419028:	ret    0x4
  41902b:	mov    esi,DWORD PTR [ebp+0x8]
  41902e:	call   0x41a800
  419033:	push   0x0
  419035:	push   0x0
  419037:	call   0x429e76
  41903c:	int3   
  41903d:	int3   
  41903e:	int3   
  41903f:	int3   
  419040:	push   ebp
  419041:	mov    ebp,esp
  419043:	push   0xffffffff
  419045:	push   0x42bb90
  41904a:	mov    eax,fs:0x0
  419050:	push   eax
  419051:	sub    esp,0xc
  419054:	push   ebx
  419055:	push   esi
  419056:	push   edi
  419057:	mov    eax,ds:0x43e020
  41905c:	xor    eax,ebp
  41905e:	push   eax
  41905f:	lea    eax,[ebp-0xc]
  419062:	mov    fs:0x0,eax
  419068:	mov    DWORD PTR [ebp-0x10],esp
  41906b:	mov    eax,DWORD PTR [ebp+0x18]
  41906e:	mov    ecx,DWORD PTR [ebp+0x10]
  419071:	mov    esi,DWORD PTR [ebp+0x1c]
  419074:	mov    edi,DWORD PTR [ebp+0x14]
  419077:	mov    DWORD PTR [ebp-0x18],eax
  41907a:	mov    DWORD PTR [ebp-0x18],ecx
  41907d:	test   eax,eax
  41907f:	je     0x419085
  419081:	cmp    eax,ecx
  419083:	je     0x41908f
  419085:	mov    ebx,DWORD PTR ds:0x430390
  41908b:	call   ebx
  41908d:	jmp    0x419095
  41908f:	mov    ebx,DWORD PTR ds:0x430390
  419095:	sub    esi,edi
  419097:	push   esi
  419098:	mov    esi,DWORD PTR [ebp+0x8]
  41909b:	mov    ecx,esi
  41909d:	call   DWORD PTR ds:0x4301f4
  4190a3:	mov    DWORD PTR [ebp-0x4],0x0
  4190aa:	mov    eax,DWORD PTR [ebp+0x10]
  4190ad:	mov    edi,0x1
  4190b2:	test   eax,eax
  4190b4:	je     0x4190bb
  4190b6:	cmp    eax,DWORD PTR [ebp+0x18]
  4190b9:	je     0x4190c0
  4190bb:	call   ebx
  4190bd:	mov    eax,DWORD PTR [ebp+0x10]
  4190c0:	mov    ecx,DWORD PTR [ebp+0x14]
  4190c3:	cmp    ecx,DWORD PTR [ebp+0x1c]
  4190c6:	je     0x419133
  4190c8:	test   eax,eax
  4190ca:	jne    0x4190d5
  4190cc:	call   ebx
  4190ce:	mov    eax,DWORD PTR [ebp+0x10]
  4190d1:	test   eax,eax
  4190d3:	je     0x4190d9
  4190d5:	mov    eax,DWORD PTR [eax]
  4190d7:	jmp    0x4190db
  4190d9:	xor    eax,eax
  4190db:	mov    edx,DWORD PTR [ebp+0x14]
  4190de:	cmp    edx,DWORD PTR [eax+0x10]
  4190e1:	jb     0x4190e5
  4190e3:	call   ebx
  4190e5:	mov    eax,DWORD PTR [ebp+0x14]
  4190e8:	movzx  ecx,BYTE PTR [eax]
  4190eb:	push   ecx
  4190ec:	push   edi
  4190ed:	mov    ecx,esi
  4190ef:	call   DWORD PTR ds:0x4301d4
  4190f5:	mov    eax,DWORD PTR [ebp+0x10]
  4190f8:	test   eax,eax
  4190fa:	jne    0x419105
  4190fc:	call   ebx
  4190fe:	mov    eax,DWORD PTR [ebp+0x10]
  419101:	test   eax,eax
  419103:	je     0x419109
  419105:	mov    ecx,DWORD PTR [eax]
  419107:	jmp    0x41910b
  419109:	xor    ecx,ecx
  41910b:	mov    edx,DWORD PTR [ebp+0x14]
  41910e:	cmp    edx,DWORD PTR [ecx+0x10]
  419111:	jb     0x419118
  419113:	call   ebx
  419115:	mov    eax,DWORD PTR [ebp+0x10]
  419118:	add    DWORD PTR [ebp+0x14],edi
  41911b:	jmp    0x4190b2
  41911d:	mov    ecx,DWORD PTR [ebp+0x8]
  419120:	push   0x0
  419122:	push   0x1
  419124:	call   DWORD PTR ds:0x4301c8
  41912a:	push   0x0
  41912c:	push   0x0
  41912e:	call   0x429e76
  419133:	mov    ecx,DWORD PTR [ebp-0xc]
  419136:	mov    DWORD PTR fs:0x0,ecx
  41913d:	pop    ecx
  41913e:	pop    edi
  41913f:	pop    esi
  419140:	pop    ebx
  419141:	mov    esp,ebp
  419143:	pop    ebp
  419144:	ret    0x18
  419147:	int3   
  419148:	int3   
  419149:	int3   
  41914a:	int3   
  41914b:	int3   
  41914c:	int3   
  41914d:	int3   
  41914e:	int3   
  41914f:	int3   
  419150:	push   0xffffffff
  419152:	push   0x42c6d8
  419157:	mov    eax,fs:0x0
  41915d:	push   eax
  41915e:	push   ecx
  41915f:	push   edi
  419160:	mov    eax,ds:0x43e020
  419165:	xor    eax,esp
  419167:	push   eax
  419168:	lea    eax,[esp+0xc]
  41916c:	mov    fs:0x0,eax
  419172:	mov    edi,ecx
  419174:	mov    DWORD PTR [esp+0x14],0x0
  41917c:	mov    ecx,DWORD PTR [esp+0x1c]
  419180:	sub    esp,0x28
  419183:	mov    eax,esp
  419185:	mov    DWORD PTR [edi],0x0
  41918b:	mov    DWORD PTR [eax],ecx
  41918d:	mov    edx,DWORD PTR [esp+0x48]
  419191:	mov    DWORD PTR [eax+0x4],edx
  419194:	mov    ecx,DWORD PTR [esp+0x4c]
  419198:	lea    edx,[esp+0x50]
  41919c:	mov    DWORD PTR [esp+0x30],esp
  4191a0:	mov    DWORD PTR [eax+0x8],ecx
  4191a3:	lea    ecx,[eax+0xc]
  4191a6:	push   edx
  4191a7:	call   DWORD PTR ds:0x430118
  4191ad:	call   0x41a820
  4191b2:	lea    ecx,[esp+0x28]
  4191b6:	mov    DWORD PTR [esp+0x14],0xffffffff
  4191be:	call   DWORD PTR ds:0x430264
  4191c4:	mov    eax,edi
  4191c6:	mov    ecx,DWORD PTR [esp+0xc]
  4191ca:	mov    DWORD PTR fs:0x0,ecx
  4191d1:	pop    ecx
  4191d2:	pop    edi
  4191d3:	add    esp,0x10
  4191d6:	ret    0x28
  4191d9:	int3   
  4191da:	int3   
  4191db:	int3   
  4191dc:	int3   
  4191dd:	int3   
  4191de:	int3   
  4191df:	int3   
  4191e0:	push   0xffffffff
  4191e2:	push   0x42c6d8
  4191e7:	mov    eax,fs:0x0
  4191ed:	push   eax
  4191ee:	push   esi
  4191ef:	push   edi
  4191f0:	mov    eax,ds:0x43e020
  4191f5:	xor    eax,esp
  4191f7:	push   eax
  4191f8:	lea    eax,[esp+0xc]
  4191fc:	mov    fs:0x0,eax
  419202:	mov    esi,ecx
  419204:	mov    DWORD PTR [esp+0x14],0x0
  41920c:	cmp    esi,ebx
  41920e:	je     0x419232
  419210:	mov    edi,DWORD PTR ds:0x4301f8
  419216:	mov    eax,DWORD PTR [esp+0x20]
  41921a:	lea    ecx,[esp+0x28]
  41921e:	add    eax,esi
  419220:	push   ecx
  419221:	push   eax
  419222:	call   edi
  419224:	add    esp,0x8
  419227:	test   al,al
  419229:	jne    0x419232
  41922b:	add    esi,0x60
  41922e:	cmp    esi,ebx
  419230:	jne    0x419216
  419232:	lea    ecx,[esp+0x28]
  419236:	mov    DWORD PTR [esp+0x14],0xffffffff
  41923e:	call   DWORD PTR ds:0x430264
  419244:	mov    eax,esi
  419246:	mov    ecx,DWORD PTR [esp+0xc]
  41924a:	mov    DWORD PTR fs:0x0,ecx
  419251:	pop    ecx
  419252:	pop    edi
  419253:	pop    esi
  419254:	add    esp,0xc
  419257:	ret    
  419258:	int3   
  419259:	int3   
  41925a:	int3   
  41925b:	int3   
  41925c:	int3   
  41925d:	int3   
  41925e:	int3   
  41925f:	int3   
  419260:	sub    esp,0x8
  419263:	push   ebx
  419264:	push   ebp
  419265:	push   esi
  419266:	mov    esi,eax
  419268:	push   edi
  419269:	mov    edi,DWORD PTR [esi+0x10]
  41926c:	cmp    DWORD PTR [esi+0xc],edi
  41926f:	jbe    0x419277
  419271:	call   DWORD PTR ds:0x430390
  419277:	mov    ebx,DWORD PTR [esi+0xc]
  41927a:	mov    ebp,DWORD PTR [esi]
  41927c:	cmp    ebx,DWORD PTR [esi+0x10]
  41927f:	jbe    0x419287
  419281:	call   DWORD PTR ds:0x430390
  419287:	mov    eax,DWORD PTR [esi]
  419289:	push   edi
  41928a:	push   ebp
  41928b:	push   ebx
  41928c:	push   eax
  41928d:	lea    ebx,[esp+0x20]
  419291:	call   0x414660
  419296:	mov    edi,DWORD PTR [esi+0xc]
  419299:	cmp    edi,DWORD PTR [esi+0x10]
  41929c:	jbe    0x4192a4
  41929e:	call   DWORD PTR ds:0x430390
  4192a4:	mov    eax,DWORD PTR [esi]
  4192a6:	mov    ecx,DWORD PTR [esp+0x1c]
  4192aa:	push   edi
  4192ab:	push   eax
  4192ac:	mov    eax,DWORD PTR [esp+0x24]
  4192b0:	push   eax
  4192b1:	mov    eax,DWORD PTR [esp+0x2c]
  4192b5:	push   ecx
  4192b6:	call   0x41c8b0
  4192bb:	pop    edi
  4192bc:	pop    esi
  4192bd:	pop    ebp
  4192be:	pop    ebx
  4192bf:	add    esp,0x8
  4192c2:	ret    0xc
  4192c5:	int3   
  4192c6:	int3   
  4192c7:	int3   
  4192c8:	int3   
  4192c9:	int3   
  4192ca:	int3   
  4192cb:	int3   
  4192cc:	int3   
  4192cd:	int3   
  4192ce:	int3   
  4192cf:	int3   
  4192d0:	sub    esp,0x3c
  4192d3:	push   ebx
  4192d4:	push   ebp
  4192d5:	push   esi
  4192d6:	lea    eax,[esp+0x10]
  4192da:	push   eax
  4192db:	mov    ecx,edi
  4192dd:	call   DWORD PTR ds:0x4301ec
  4192e3:	lea    ecx,[esp+0x18]
  4192e7:	push   ecx
  4192e8:	mov    ecx,edi
  4192ea:	call   DWORD PTR ds:0x4301f0
  4192f0:	mov    edx,DWORD PTR [esp+0x14]
  4192f4:	mov    eax,DWORD PTR [esp+0x10]
  4192f8:	mov    ecx,DWORD PTR [esp+0x1c]
  4192fc:	mov    ebx,DWORD PTR [esp+0x60]
  419300:	mov    ebp,DWORD PTR [esp+0x64]
  419304:	push   edx
  419305:	mov    edx,DWORD PTR [esp+0x1c]
  419309:	push   eax
  41930a:	push   ecx
  41930b:	push   edx
  41930c:	lea    eax,[esp+0x48]
  419310:	push   eax
  419311:	lea    ecx,[esp+0x60]
  419315:	push   ecx
  419316:	mov    DWORD PTR [esp+0x38],ebx
  41931a:	mov    DWORD PTR [esp+0x3c],ebp
  41931e:	call   0x41a900
  419323:	mov    esi,eax
  419325:	mov    edx,DWORD PTR [esi+0x4]
  419328:	mov    eax,DWORD PTR [esi]
  41932a:	mov    ecx,DWORD PTR [esi+0x8]
  41932d:	mov    DWORD PTR [esp+0x2c],edx
  419331:	mov    edx,DWORD PTR [esi+0xc]
  419334:	mov    DWORD PTR [esp+0x34],edx
  419338:	cmp    eax,0xfffffffc
  41933b:	je     0x41934b
  41933d:	test   eax,eax
  41933f:	je     0x419345
  419341:	cmp    eax,ecx
  419343:	je     0x41934b
  419345:	call   DWORD PTR ds:0x430390
  41934b:	mov    eax,DWORD PTR [esp+0x34]
  41934f:	cmp    DWORD PTR [esp+0x2c],eax
  419353:	je     0x419366
  419355:	push   ebp
  419356:	push   ebx
  419357:	push   edi
  419358:	lea    ecx,[esp+0x2c]
  41935c:	mov    eax,esi
  41935e:	call   0x41ca00
  419363:	add    esp,0xc
  419366:	pop    esi
  419367:	pop    ebp
  419368:	pop    ebx
  419369:	add    esp,0x3c
  41936c:	ret    
  41936d:	int3   
  41936e:	int3   
  41936f:	int3   
  419370:	push   ebp
  419371:	mov    ebp,esp
  419373:	push   0xffffffff
  419375:	push   0x42bb70
  41937a:	mov    eax,fs:0x0
  419380:	push   eax
  419381:	sub    esp,0xc
  419384:	push   ebx
  419385:	push   esi
  419386:	push   edi
  419387:	mov    eax,ds:0x43e020
  41938c:	xor    eax,ebp
  41938e:	push   eax
  41938f:	lea    eax,[ebp-0xc]
  419392:	mov    fs:0x0,eax
  419398:	mov    DWORD PTR [ebp-0x10],esp
  41939b:	mov    eax,DWORD PTR [ebp+0x18]
  41939e:	mov    ecx,DWORD PTR [ebp+0x10]
  4193a1:	mov    edi,DWORD PTR [ebp+0x14]
  4193a4:	mov    esi,DWORD PTR [ebp+0x1c]
  4193a7:	mov    DWORD PTR [ebp-0x18],ecx
  4193aa:	mov    DWORD PTR [ebp-0x18],eax
  4193ad:	cmp    eax,0xfffffffc
  4193b0:	je     0x4193c4
  4193b2:	test   eax,eax
  4193b4:	je     0x4193ba
  4193b6:	cmp    eax,ecx
  4193b8:	je     0x4193c4
  4193ba:	mov    ebx,DWORD PTR ds:0x430390
  4193c0:	call   ebx
  4193c2:	jmp    0x4193ca
  4193c4:	mov    ebx,DWORD PTR ds:0x430390
  4193ca:	sub    esi,edi
  4193cc:	sar    esi,1
  4193ce:	push   esi
  4193cf:	mov    esi,DWORD PTR [ebp+0x8]
  4193d2:	mov    ecx,esi
  4193d4:	call   DWORD PTR ds:0x4301f4
  4193da:	mov    DWORD PTR [ebp-0x4],0x0
  4193e1:	mov    eax,DWORD PTR [ebp+0x10]
  4193e4:	mov    edi,0x8
  4193e9:	lea    esp,[esp+0x0]
  4193f0:	cmp    eax,0xfffffffc
  4193f3:	je     0x419403
  4193f5:	test   eax,eax
  4193f7:	je     0x4193fe
  4193f9:	cmp    eax,DWORD PTR [ebp+0x18]
  4193fc:	je     0x419403
  4193fe:	call   ebx
  419400:	mov    eax,DWORD PTR [ebp+0x10]
  419403:	mov    ecx,DWORD PTR [ebp+0x14]
  419406:	cmp    ecx,DWORD PTR [ebp+0x1c]
  419409:	je     0x419495
  41940f:	cmp    eax,0xfffffffc
  419412:	je     0x419437
  419414:	test   eax,eax
  419416:	jne    0x41941d
  419418:	call   ebx
  41941a:	mov    eax,DWORD PTR [ebp+0x10]
  41941d:	cmp    DWORD PTR [eax+0x18],edi
  419420:	jb     0x419427
  419422:	mov    ecx,DWORD PTR [eax+0x4]
  419425:	jmp    0x41942a
  419427:	lea    ecx,[eax+0x4]
  41942a:	mov    edx,DWORD PTR [eax+0x14]
  41942d:	lea    eax,[ecx+edx*2]
  419430:	cmp    DWORD PTR [ebp+0x14],eax
  419433:	jb     0x419437
  419435:	call   ebx
  419437:	mov    ecx,DWORD PTR [ebp+0x14]
  41943a:	movzx  edx,BYTE PTR [ecx]
  41943d:	push   edx
  41943e:	push   0x1
  419440:	mov    ecx,esi
  419442:	call   DWORD PTR ds:0x4301d4
  419448:	mov    eax,DWORD PTR [ebp+0x10]
  41944b:	cmp    eax,0xfffffffc
  41944e:	je     0x419476
  419450:	test   eax,eax
  419452:	jne    0x419459
  419454:	call   ebx
  419456:	mov    eax,DWORD PTR [ebp+0x10]
  419459:	cmp    DWORD PTR [eax+0x18],edi
  41945c:	jb     0x419463
  41945e:	mov    ecx,DWORD PTR [eax+0x4]
  419461:	jmp    0x419466
  419463:	lea    ecx,[eax+0x4]
  419466:	mov    edx,DWORD PTR [eax+0x14]
  419469:	lea    ecx,[ecx+edx*2]
  41946c:	cmp    DWORD PTR [ebp+0x14],ecx
  41946f:	jb     0x419476
  419471:	call   ebx
  419473:	mov    eax,DWORD PTR [ebp+0x10]
  419476:	add    DWORD PTR [ebp+0x14],0x2
  41947a:	jmp    0x4193f0
  41947f:	mov    ecx,DWORD PTR [ebp+0x8]
  419482:	push   0x0
  419484:	push   0x1
  419486:	call   DWORD PTR ds:0x4301c8
  41948c:	push   0x0
  41948e:	push   0x0
  419490:	call   0x429e76
  419495:	mov    ecx,DWORD PTR [ebp-0xc]
  419498:	mov    DWORD PTR fs:0x0,ecx
  41949f:	pop    ecx
  4194a0:	pop    edi
  4194a1:	pop    esi
  4194a2:	pop    ebx
  4194a3:	mov    esp,ebp
  4194a5:	pop    ebp
  4194a6:	ret    0x18
  4194a9:	int3   
  4194aa:	int3   
  4194ab:	int3   
  4194ac:	int3   
  4194ad:	int3   
  4194ae:	int3   
  4194af:	int3   
  4194b0:	push   ebp
  4194b1:	mov    ebp,esp
  4194b3:	push   0xffffffff
  4194b5:	push   0x42b3d1
  4194ba:	mov    eax,fs:0x0
  4194c0:	push   eax
  4194c1:	sub    esp,0x10
  4194c4:	push   ebx
  4194c5:	push   esi
  4194c6:	push   edi
  4194c7:	mov    eax,ds:0x43e020
  4194cc:	xor    eax,ebp
  4194ce:	push   eax
  4194cf:	lea    eax,[ebp-0xc]
  4194d2:	mov    fs:0x0,eax
  4194d8:	mov    DWORD PTR [ebp-0x10],esp
  4194db:	mov    edi,ecx
  4194dd:	mov    esi,DWORD PTR [ebp+0x8]
  4194e0:	xor    ebx,ebx
  4194e2:	mov    DWORD PTR [ebp-0x14],esi
  4194e5:	mov    DWORD PTR [ebp-0x4],ebx
  4194e8:	cmp    edi,ebx
  4194ea:	jbe    0x419538
  4194ec:	mov    DWORD PTR [ebp-0x18],esi
  4194ef:	mov    DWORD PTR [ebp-0x1c],esi
  4194f2:	mov    BYTE PTR [ebp-0x4],0x1
  4194f6:	cmp    esi,ebx
  4194f8:	je     0x419506
  4194fa:	mov    eax,DWORD PTR [ebp+0xc]
  4194fd:	push   eax
  4194fe:	mov    ecx,esi
  419500:	call   DWORD PTR ds:0x430258
  419506:	dec    edi
  419507:	add    esi,0x1c
  41950a:	mov    BYTE PTR [ebp-0x4],bl
  41950d:	mov    DWORD PTR [ebp+0x8],esi
  419510:	jmp    0x4194e8
  419512:	mov    esi,DWORD PTR [ebp-0x14]
  419515:	mov    edi,DWORD PTR [ebp+0x8]
  419518:	cmp    esi,edi
  41951a:	je     0x41952f
  41951c:	lea    esp,[esp+0x0]
  419520:	mov    ecx,esi
  419522:	call   DWORD PTR ds:0x43025c
  419528:	add    esi,0x1c
  41952b:	cmp    esi,edi
  41952d:	jne    0x419520
  41952f:	xor    ebx,ebx
  419531:	push   ebx
  419532:	push   ebx
  419533:	call   0x429e76
  419538:	mov    ecx,DWORD PTR [ebp-0xc]
  41953b:	mov    DWORD PTR fs:0x0,ecx
  419542:	pop    ecx
  419543:	pop    edi
  419544:	pop    esi
  419545:	pop    ebx
  419546:	mov    esp,ebp
  419548:	pop    ebp
  419549:	ret    
  41954a:	int3   
  41954b:	int3   
  41954c:	int3   
  41954d:	int3   
  41954e:	int3   
  41954f:	int3   
  419550:	push   0xffffffff
  419552:	push   0x42ad08
  419557:	mov    eax,fs:0x0
  41955d:	push   eax
  41955e:	push   esi
  41955f:	mov    eax,ds:0x43e020
  419564:	xor    eax,esp
  419566:	push   eax
  419567:	lea    eax,[esp+0x8]
  41956b:	mov    fs:0x0,eax
  419571:	mov    esi,DWORD PTR [esp+0x18]
  419575:	cmp    esi,edi
  419577:	je     0x4195bb
  419579:	lea    esp,[esp+0x0]
  419580:	lea    ecx,[esi+0x3c]
  419583:	mov    DWORD PTR [esp+0x10],0x1
  41958b:	call   DWORD PTR ds:0x430264
  419591:	lea    ecx,[esi+0x20]
  419594:	mov    BYTE PTR [esp+0x10],0x0
  419599:	call   DWORD PTR ds:0x430264
  41959f:	lea    ecx,[esi+0x4]
  4195a2:	mov    DWORD PTR [esp+0x10],0xffffffff
  4195aa:	call   DWORD PTR ds:0x430264
  4195b0:	add    esi,0x60
  4195b3:	mov    DWORD PTR [esp+0x18],esi
  4195b7:	cmp    esi,edi
  4195b9:	jne    0x419580
  4195bb:	mov    ecx,DWORD PTR [esp+0x8]
  4195bf:	mov    DWORD PTR fs:0x0,ecx
  4195c6:	pop    ecx
  4195c7:	pop    esi
  4195c8:	add    esp,0xc
  4195cb:	ret    
  4195cc:	int3   
  4195cd:	int3   
  4195ce:	int3   
  4195cf:	int3   
  4195d0:	push   ebp
  4195d1:	mov    ebp,esp
  4195d3:	push   0xffffffff
  4195d5:	push   0x42b3a1
  4195da:	mov    eax,fs:0x0
  4195e0:	push   eax
  4195e1:	sub    esp,0x10
  4195e4:	push   ebx
  4195e5:	push   esi
  4195e6:	push   edi
  4195e7:	mov    eax,ds:0x43e020
  4195ec:	xor    eax,ebp
  4195ee:	push   eax
  4195ef:	lea    eax,[ebp-0xc]
  4195f2:	mov    fs:0x0,eax
  4195f8:	mov    DWORD PTR [ebp-0x10],esp
  4195fb:	mov    edi,ecx
  4195fd:	mov    ebx,edx
  4195ff:	mov    esi,DWORD PTR [ebp+0x8]
  419602:	mov    DWORD PTR [ebp-0x14],esi
  419605:	mov    DWORD PTR [ebp-0x4],0x0
  41960c:	lea    esp,[esp+0x0]
  419610:	test   ebx,ebx
  419612:	jbe    0x419656
  419614:	mov    DWORD PTR [ebp-0x18],esi
  419617:	mov    DWORD PTR [ebp-0x1c],esi
  41961a:	mov    BYTE PTR [ebp-0x4],0x1
  41961e:	test   esi,esi
  419620:	je     0x419628
  419622:	push   esi
  419623:	call   0x415ab0
  419628:	dec    ebx
  419629:	add    esi,0x60
  41962c:	mov    BYTE PTR [ebp-0x4],0x0
  419630:	mov    DWORD PTR [ebp+0x8],esi
  419633:	jmp    0x419610
  419635:	mov    esi,DWORD PTR [ebp-0x14]
  419638:	mov    edi,DWORD PTR [ebp+0x8]
  41963b:	cmp    esi,edi
  41963d:	je     0x41964d
  41963f:	nop
  419640:	push   esi
  419641:	call   0x415b30
  419646:	add    esi,0x60
  419649:	cmp    esi,edi
  41964b:	jne    0x419640
  41964d:	push   0x0
  41964f:	push   0x0
  419651:	call   0x429e76
  419656:	mov    ecx,DWORD PTR [ebp-0xc]
  419659:	mov    DWORD PTR fs:0x0,ecx
  419660:	pop    ecx
  419661:	pop    edi
  419662:	pop    esi
  419663:	pop    ebx
  419664:	mov    esp,ebp
  419666:	pop    ebp
  419667:	ret    
  419668:	int3   
  419669:	int3   
  41966a:	int3   
  41966b:	int3   
  41966c:	int3   
  41966d:	int3   
  41966e:	int3   
  41966f:	int3   
  419670:	push   edi
  419671:	mov    edi,eax
  419673:	cmp    edi,ebx
  419675:	je     0x4196b1
  419677:	push   esi
  419678:	mov    esi,DWORD PTR [edi+0x4]
  41967b:	test   esi,esi
  41967d:	je     0x4196a9
  41967f:	lea    eax,[esi+0x4]
  419682:	or     ecx,0xffffffff
  419685:	lock xadd DWORD PTR [eax],ecx
  419689:	jne    0x4196a9
  41968b:	mov    edx,DWORD PTR [esi]
  41968d:	mov    eax,DWORD PTR [edx+0x4]
  419690:	mov    ecx,esi
  419692:	call   eax
  419694:	lea    ecx,[esi+0x8]
  419697:	or     edx,0xffffffff
  41969a:	lock xadd DWORD PTR [ecx],edx
  41969e:	jne    0x4196a9
  4196a0:	mov    eax,DWORD PTR [esi]
  4196a2:	mov    edx,DWORD PTR [eax+0x8]
  4196a5:	mov    ecx,esi
  4196a7:	call   edx
  4196a9:	add    edi,0x8
  4196ac:	cmp    edi,ebx
  4196ae:	jne    0x419678
  4196b0:	pop    esi
  4196b1:	pop    edi
  4196b2:	ret    
  4196b3:	int3   
  4196b4:	int3   
  4196b5:	int3   
  4196b6:	int3   
  4196b7:	int3   
  4196b8:	int3   
  4196b9:	int3   
  4196ba:	int3   
  4196bb:	int3   
  4196bc:	int3   
  4196bd:	int3   
  4196be:	int3   
  4196bf:	int3   
  4196c0:	test   edx,edx
  4196c2:	jbe    0x4196ec
  4196c4:	push   edi
  4196c5:	test   ecx,ecx
  4196c7:	je     0x4196e3
  4196c9:	mov    eax,DWORD PTR [esi]
  4196cb:	mov    DWORD PTR [ecx],eax
  4196cd:	mov    eax,DWORD PTR [esi+0x4]
  4196d0:	mov    DWORD PTR [ecx+0x4],eax
  4196d3:	test   eax,eax
  4196d5:	je     0x4196e3
  4196d7:	add    eax,0x4
  4196da:	mov    edi,0x1
  4196df:	lock xadd DWORD PTR [eax],edi
  4196e3:	dec    edx
  4196e4:	add    ecx,0x8
  4196e7:	test   edx,edx
  4196e9:	ja     0x4196c5
  4196eb:	pop    edi
  4196ec:	ret    
  4196ed:	int3   
  4196ee:	int3   
  4196ef:	int3   
  4196f0:	push   ebp
  4196f1:	mov    ebp,esp
  4196f3:	push   0xffffffff
  4196f5:	push   0x42b371
  4196fa:	mov    eax,fs:0x0
  419700:	push   eax
  419701:	sub    esp,0x10
  419704:	push   ebx
  419705:	push   esi
  419706:	push   edi
  419707:	mov    eax,ds:0x43e020
  41970c:	xor    eax,ebp
  41970e:	push   eax
  41970f:	lea    eax,[ebp-0xc]
  419712:	mov    fs:0x0,eax
  419718:	mov    DWORD PTR [ebp-0x10],esp
  41971b:	mov    edi,ecx
  41971d:	mov    esi,DWORD PTR [ebp+0x8]
  419720:	xor    ebx,ebx
  419722:	mov    DWORD PTR [ebp-0x14],esi
  419725:	mov    DWORD PTR [ebp-0x4],ebx
  419728:	cmp    edi,ebx
  41972a:	jbe    0x419778
  41972c:	mov    DWORD PTR [ebp-0x18],esi
  41972f:	mov    DWORD PTR [ebp-0x1c],esi
  419732:	mov    BYTE PTR [ebp-0x4],0x1
  419736:	cmp    esi,ebx
  419738:	je     0x419746
  41973a:	mov    eax,DWORD PTR [ebp+0xc]
  41973d:	push   eax
  41973e:	mov    ecx,esi
  419740:	call   DWORD PTR ds:0x430118
  419746:	dec    edi
  419747:	add    esi,0x1c
  41974a:	mov    BYTE PTR [ebp-0x4],bl
  41974d:	mov    DWORD PTR [ebp+0x8],esi
  419750:	jmp    0x419728
  419752:	mov    esi,DWORD PTR [ebp-0x14]
  419755:	mov    edi,DWORD PTR [ebp+0x8]
  419758:	cmp    esi,edi
  41975a:	je     0x41976f
  41975c:	lea    esp,[esp+0x0]
  419760:	mov    ecx,esi
  419762:	call   DWORD PTR ds:0x430264
  419768:	add    esi,0x1c
  41976b:	cmp    esi,edi
  41976d:	jne    0x419760
  41976f:	xor    ebx,ebx
  419771:	push   ebx
  419772:	push   ebx
  419773:	call   0x429e76
  419778:	mov    ecx,DWORD PTR [ebp-0xc]
  41977b:	mov    DWORD PTR fs:0x0,ecx
  419782:	pop    ecx
  419783:	pop    edi
  419784:	pop    esi
  419785:	pop    ebx
  419786:	mov    esp,ebp
  419788:	pop    ebp
  419789:	ret    
  41978a:	int3   
  41978b:	int3   
  41978c:	int3   
  41978d:	int3   
  41978e:	int3   
  41978f:	int3   
  419790:	push   ebx
  419791:	push   ebp
  419792:	push   esi
  419793:	mov    esi,eax
  419795:	mov    ebp,DWORD PTR [esp+0x10]
  419799:	mov    ecx,esi
  41979b:	sub    ecx,edi
  41979d:	mov    eax,0x92492493
  4197a2:	imul   ecx
  4197a4:	add    edx,ecx
  4197a6:	sar    edx,0x4
  4197a9:	mov    eax,edx
  4197ab:	shr    eax,0x1f
  4197ae:	add    eax,edx
  4197b0:	lea    ecx,[eax*8+0x0]
  4197b7:	sub    ecx,eax
  4197b9:	add    ecx,ecx
  4197bb:	add    ecx,ecx
  4197bd:	mov    ebx,ebp
  4197bf:	sub    ebx,ecx
  4197c1:	cmp    edi,esi
  4197c3:	je     0x4197d8
  4197c5:	sub    ebp,esi
  4197c7:	sub    esi,0x1c
  4197ca:	push   esi
  4197cb:	lea    ecx,[esi+ebp*1]
  4197ce:	call   DWORD PTR ds:0x430208
  4197d4:	cmp    esi,edi
  4197d6:	jne    0x4197c7
  4197d8:	pop    esi
  4197d9:	pop    ebp
  4197da:	mov    eax,ebx
  4197dc:	pop    ebx
  4197dd:	ret    
  4197de:	int3   
  4197df:	int3   
  4197e0:	push   esi
  4197e1:	mov    esi,eax
  4197e3:	cmp    esi,DWORD PTR [esp+0x8]
  4197e7:	je     0x419829
  4197e9:	push   ebx
  4197ea:	push   ebp
  4197eb:	lea    ebx,[edi+0x4]
  4197ee:	lea    ebp,[edi+0x20]
  4197f1:	push   ebx
  4197f2:	lea    ecx,[esi+0x4]
  4197f5:	call   DWORD PTR ds:0x43017c
  4197fb:	push   ebp
  4197fc:	lea    ecx,[esi+0x20]
  4197ff:	call   DWORD PTR ds:0x43017c
  419805:	lea    eax,[edi+0x3c]
  419808:	push   eax
  419809:	lea    ecx,[esi+0x3c]
  41980c:	call   DWORD PTR ds:0x43017c
  419812:	mov    eax,DWORD PTR [edi+0x58]
  419815:	mov    DWORD PTR [esi+0x58],eax
  419818:	mov    ecx,DWORD PTR [edi+0x5c]
  41981b:	mov    DWORD PTR [esi+0x5c],ecx
  41981e:	add    esi,0x60
  419821:	cmp    esi,DWORD PTR [esp+0x10]
  419825:	jne    0x4197f1
  419827:	pop    ebp
  419828:	pop    ebx
  419829:	pop    esi
  41982a:	ret    
  41982b:	int3   
  41982c:	int3   
  41982d:	int3   
  41982e:	int3   
  41982f:	int3   
  419830:	push   ebx
  419831:	push   ebp
  419832:	push   esi
  419833:	mov    esi,eax
  419835:	mov    ebp,DWORD PTR [esp+0x10]
  419839:	mov    ecx,esi
  41983b:	sub    ecx,edi
  41983d:	mov    eax,0x92492493
  419842:	imul   ecx
  419844:	add    edx,ecx
  419846:	sar    edx,0x4
  419849:	mov    eax,edx
  41984b:	shr    eax,0x1f
  41984e:	add    eax,edx
  419850:	lea    ecx,[eax*8+0x0]
  419857:	sub    ecx,eax
  419859:	add    ecx,ecx
  41985b:	add    ecx,ecx
  41985d:	mov    ebx,ebp
  41985f:	sub    ebx,ecx
  419861:	cmp    edi,esi
  419863:	je     0x419878
  419865:	sub    ebp,esi
  419867:	sub    esi,0x1c
  41986a:	push   esi
  41986b:	lea    ecx,[esi+ebp*1]
  41986e:	call   DWORD PTR ds:0x43022c
  419874:	cmp    esi,edi
  419876:	jne    0x419867
  419878:	pop    esi
  419879:	pop    ebp
  41987a:	mov    eax,ebx
  41987c:	pop    ebx
  41987d:	ret    
  41987e:	int3   
  41987f:	int3   
  419880:	sub    esp,0xc
  419883:	push   ebp
  419884:	mov    ebp,DWORD PTR [esp+0x14]
  419888:	push   esi
  419889:	push   edi
  41988a:	mov    edi,eax
  41988c:	cmp    edi,ebp
  41988e:	je     0x4198ea
  419890:	mov    eax,DWORD PTR [ebx+0x4]
  419893:	mov    ecx,DWORD PTR [ebx]
  419895:	test   eax,eax
  419897:	je     0x4198a5
  419899:	lea    edx,[eax+0x4]
  41989c:	mov    esi,0x1
  4198a1:	lock xadd DWORD PTR [edx],esi
  4198a5:	lea    edx,[esp+0x10]
  4198a9:	cmp    edx,edi
  4198ab:	je     0x4198af
  4198ad:	mov    DWORD PTR [edi],ecx
  4198af:	mov    esi,DWORD PTR [edi+0x4]
  4198b2:	mov    DWORD PTR [edi+0x4],eax
  4198b5:	test   esi,esi
  4198b7:	je     0x4198e3
  4198b9:	lea    eax,[esi+0x4]
  4198bc:	or     ecx,0xffffffff
  4198bf:	lock xadd DWORD PTR [eax],ecx
  4198c3:	jne    0x4198e3
  4198c5:	mov    edx,DWORD PTR [esi]
  4198c7:	mov    eax,DWORD PTR [edx+0x4]
  4198ca:	mov    ecx,esi
  4198cc:	call   eax
  4198ce:	lea    ecx,[esi+0x8]
  4198d1:	or     edx,0xffffffff
  4198d4:	lock xadd DWORD PTR [ecx],edx
  4198d8:	jne    0x4198e3
  4198da:	mov    eax,DWORD PTR [esi]
  4198dc:	mov    edx,DWORD PTR [eax+0x8]
  4198df:	mov    ecx,esi
  4198e1:	call   edx
  4198e3:	add    edi,0x8
  4198e6:	cmp    edi,ebp
  4198e8:	jne    0x419890
  4198ea:	pop    edi
  4198eb:	pop    esi
  4198ec:	pop    ebp
  4198ed:	add    esp,0xc
  4198f0:	ret    
  4198f1:	int3   
  4198f2:	int3   
  4198f3:	int3   
  4198f4:	int3   
  4198f5:	int3   
  4198f6:	int3   
  4198f7:	int3   
  4198f8:	int3   
  4198f9:	int3   
  4198fa:	int3   
  4198fb:	int3   
  4198fc:	int3   
  4198fd:	int3   
  4198fe:	int3   
  4198ff:	int3   
  419900:	push   ecx
  419901:	mov    ecx,DWORD PTR [eax]
  419903:	movzx  edx,WORD PTR [ecx]
  419906:	push   ebx
  419907:	push   edi
  419908:	mov    edi,0x2d
  41990d:	xor    bl,bl
  41990f:	mov    DWORD PTR [esp+0x8],0x0
  419917:	cmp    di,dx
  41991a:	jne    0x419920
  41991c:	mov    bl,0x1
  41991e:	jmp    0x41992a
  419920:	mov    edi,0x2b
  419925:	cmp    di,dx
  419928:	jne    0x41992f
  41992a:	add    ecx,0x2
  41992d:	mov    DWORD PTR [eax],ecx
  41992f:	mov    ecx,DWORD PTR [eax+0x4]
  419932:	mov    edx,DWORD PTR [eax]
  419934:	push   ecx
  419935:	push   edx
  419936:	lea    ecx,[esp+0x10]
  41993a:	call   0x41ae60
  41993f:	mov    ecx,DWORD PTR [esp+0x10]
  419943:	add    esp,0x8
  419946:	pop    edi
  419947:	test   bl,bl
  419949:	pop    ebx
  41994a:	je     0x419968
  41994c:	test   al,al
  41994e:	je     0x419960
  419950:	cmp    ecx,0x80000000
  419956:	ja     0x419960
  419958:	neg    ecx
  41995a:	mov    al,0x1
  41995c:	mov    DWORD PTR [esi],ecx
  41995e:	pop    ecx
  41995f:	ret    
  419960:	xor    al,al
  419962:	neg    ecx
  419964:	mov    DWORD PTR [esi],ecx
  419966:	pop    ecx
  419967:	ret    
  419968:	test   al,al
  41996a:	je     0x41997a
  41996c:	cmp    ecx,0x7fffffff
  419972:	ja     0x41997a
  419974:	mov    al,0x1
  419976:	mov    DWORD PTR [esi],ecx
  419978:	pop    ecx
  419979:	ret    
  41997a:	xor    al,al
  41997c:	mov    DWORD PTR [esi],ecx
  41997e:	pop    ecx
  41997f:	ret    
  419980:	push   ebx
  419981:	push   esi
  419982:	push   edi
  419983:	cmp    eax,edx
  419985:	je     0x4199d3
  419987:	mov    esi,DWORD PTR [edx]
  419989:	mov    ecx,DWORD PTR [eax]
  41998b:	mov    DWORD PTR [eax],esi
  41998d:	mov    DWORD PTR [edx],ecx
  41998f:	mov    esi,DWORD PTR [eax]
  419991:	cmp    esi,ecx
  419993:	je     0x41999d
  419995:	mov    ebx,DWORD PTR [ecx]
  419997:	mov    edi,DWORD PTR [esi]
  419999:	mov    DWORD PTR [esi],ebx
  41999b:	mov    DWORD PTR [ecx],edi
  41999d:	lea    ecx,[edx+0xc]
  4199a0:	lea    esi,[eax+0xc]
  4199a3:	cmp    esi,ecx
  4199a5:	je     0x4199af
  4199a7:	mov    ebx,DWORD PTR [ecx]
  4199a9:	mov    edi,DWORD PTR [esi]
  4199ab:	mov    DWORD PTR [esi],ebx
  4199ad:	mov    DWORD PTR [ecx],edi
  4199af:	lea    ecx,[edx+0x10]
  4199b2:	lea    esi,[eax+0x10]
  4199b5:	cmp    esi,ecx
  4199b7:	je     0x4199c1
  4199b9:	mov    ebx,DWORD PTR [ecx]
  4199bb:	mov    edi,DWORD PTR [esi]
  4199bd:	mov    DWORD PTR [esi],ebx
  4199bf:	mov    DWORD PTR [ecx],edi
  4199c1:	lea    ecx,[edx+0x14]
  4199c4:	add    eax,0x14
  4199c7:	cmp    eax,ecx
  4199c9:	je     0x4199d3
  4199cb:	mov    esi,DWORD PTR [ecx]
  4199cd:	mov    edx,DWORD PTR [eax]
  4199cf:	mov    DWORD PTR [eax],esi
  4199d1:	mov    DWORD PTR [ecx],edx
  4199d3:	pop    edi
  4199d4:	pop    esi
  4199d5:	pop    ebx
  4199d6:	ret    
  4199d7:	int3   
  4199d8:	int3   
  4199d9:	int3   
  4199da:	int3   
  4199db:	int3   
  4199dc:	int3   
  4199dd:	int3   
  4199de:	int3   
  4199df:	int3   
  4199e0:	push   0xffffffff
  4199e2:	push   0x42bb48
  4199e7:	mov    eax,fs:0x0
  4199ed:	push   eax
  4199ee:	mov    eax,ds:0x43e020
  4199f3:	xor    eax,esp
  4199f5:	push   eax
  4199f6:	lea    eax,[esp+0x4]
  4199fa:	mov    fs:0x0,eax
  419a00:	mov    DWORD PTR [esp+0xc],0x0
  419a08:	mov    eax,DWORD PTR [esp+0x1c]
  419a0c:	mov    DWORD PTR [esi+0x8],eax
  419a0f:	mov    DWORD PTR [esi],0x0
  419a15:	cmp    eax,0x8
  419a18:	ja     0x419a22
  419a1a:	mov    eax,esi
  419a1c:	lea    ecx,[esp+0x14]
  419a20:	jmp    0x419a31
  419a22:	push   eax
  419a23:	call   0x425023
  419a28:	mov    ecx,DWORD PTR [esp+0x18]
  419a2c:	add    esp,0x4
  419a2f:	mov    DWORD PTR [esi],eax
  419a31:	mov    edx,DWORD PTR [esi+0x8]
  419a34:	push   edx
  419a35:	push   ecx
  419a36:	push   eax
  419a37:	call   0x42a018
  419a3c:	mov    eax,DWORD PTR [esp+0x2c]
  419a40:	add    esp,0xc
  419a43:	cmp    DWORD PTR [esp+0x1c],0x8
  419a48:	mov    DWORD PTR [esi+0xc],eax
  419a4b:	jbe    0x419a5e
  419a4d:	mov    eax,DWORD PTR [esp+0x14]
  419a51:	test   eax,eax
  419a53:	je     0x419a5e
  419a55:	push   eax
  419a56:	call   0x42517c
  419a5b:	add    esp,0x4
  419a5e:	mov    eax,esi
  419a60:	mov    ecx,DWORD PTR [esp+0x4]
  419a64:	mov    DWORD PTR fs:0x0,ecx
  419a6b:	pop    ecx
  419a6c:	add    esp,0xc
  419a6f:	ret    0x10
  419a72:	int3   
  419a73:	int3   
  419a74:	int3   
  419a75:	int3   
  419a76:	int3   
  419a77:	int3   
  419a78:	int3   
  419a79:	int3   
  419a7a:	int3   
  419a7b:	int3   
  419a7c:	int3   
  419a7d:	int3   
  419a7e:	int3   
  419a7f:	int3   
  419a80:	mov    DWORD PTR [esi],0x0
  419a86:	mov    eax,DWORD PTR [edi]
  419a88:	test   eax,eax
  419a8a:	je     0x419acc
  419a8c:	mov    DWORD PTR [esi],eax
  419a8e:	test   al,0x1
  419a90:	je     0x419ab8
  419a92:	mov    eax,DWORD PTR [edi+0x8]
  419a95:	mov    DWORD PTR [esi+0x8],eax
  419a98:	mov    ecx,DWORD PTR [edi+0xc]
  419a9b:	mov    DWORD PTR [esi+0xc],ecx
  419a9e:	mov    edx,DWORD PTR [edi+0x10]
  419aa1:	mov    DWORD PTR [esi+0x10],edx
  419aa4:	mov    eax,DWORD PTR [edi+0x14]
  419aa7:	mov    DWORD PTR [esi+0x14],eax
  419aaa:	mov    ecx,DWORD PTR [edi+0x18]
  419aad:	mov    DWORD PTR [esi+0x18],ecx
  419ab0:	mov    edx,DWORD PTR [edi+0x1c]
  419ab3:	mov    DWORD PTR [esi+0x1c],edx
  419ab6:	jmp    0x419acc
  419ab8:	push   0x0
  419aba:	lea    ecx,[esi+0x8]
  419abd:	and    eax,0xfffffffe
  419ac0:	mov    eax,DWORD PTR [eax]
  419ac2:	push   ecx
  419ac3:	lea    edx,[edi+0x8]
  419ac6:	push   edx
  419ac7:	call   eax
  419ac9:	add    esp,0xc
  419acc:	mov    ecx,DWORD PTR [edi+0x20]
  419acf:	mov    DWORD PTR [esi+0x20],ecx
  419ad2:	mov    edx,DWORD PTR [edi+0x24]
  419ad5:	mov    DWORD PTR [esi+0x24],edx
  419ad8:	mov    eax,DWORD PTR [edi+0x28]
  419adb:	mov    DWORD PTR [esi+0x28],eax
  419ade:	mov    ecx,DWORD PTR [edi+0x2c]
  419ae1:	mov    DWORD PTR [esi+0x2c],ecx
  419ae4:	mov    dl,BYTE PTR [edi+0x30]
  419ae7:	mov    BYTE PTR [esi+0x30],dl
  419aea:	mov    eax,esi
  419aec:	ret    
  419aed:	int3   
  419aee:	int3   
  419aef:	int3   
  419af0:	push   0xffffffff
  419af2:	push   0x42d828
  419af7:	mov    eax,fs:0x0
  419afd:	push   eax
  419afe:	sub    esp,0x18
  419b01:	push   ebx
  419b02:	push   esi
  419b03:	push   edi
  419b04:	mov    eax,ds:0x43e020
  419b09:	xor    eax,esp
  419b0b:	push   eax
  419b0c:	lea    eax,[esp+0x28]
  419b10:	mov    fs:0x0,eax
  419b16:	cmp    DWORD PTR [ecx+0x18],0x8
  419b1a:	jb     0x419b21
  419b1c:	mov    eax,DWORD PTR [ecx+0x4]
  419b1f:	jmp    0x419b24
  419b21:	lea    eax,[ecx+0x4]
  419b24:	mov    ecx,DWORD PTR [ecx+0x14]
  419b27:	lea    edx,[eax+ecx*2]
  419b2a:	movzx  ecx,WORD PTR [eax]
  419b2d:	mov    esi,0x2d
  419b32:	xor    bl,bl
  419b34:	cmp    si,cx
  419b37:	jne    0x419b3d
  419b39:	mov    bl,0x1
  419b3b:	jmp    0x419b47
  419b3d:	mov    esi,0x2b
  419b42:	cmp    si,cx
  419b45:	jne    0x419b4a
  419b47:	add    eax,0x2
  419b4a:	push   edx
  419b4b:	push   eax
  419b4c:	lea    ecx,[esp+0x18]
  419b50:	call   0x41ae60
  419b55:	mov    ecx,DWORD PTR [esp+0x18]
  419b59:	add    esp,0x8
  419b5c:	test   bl,bl
  419b5e:	je     0x419b62
  419b60:	neg    ecx
  419b62:	test   al,al
  419b64:	je     0x419b7b
  419b66:	mov    eax,ecx
  419b68:	mov    ecx,DWORD PTR [esp+0x28]
  419b6c:	mov    DWORD PTR fs:0x0,ecx
  419b73:	pop    ecx
  419b74:	pop    edi
  419b75:	pop    esi
  419b76:	pop    ebx
  419b77:	add    esp,0x24
  419b7a:	ret    
  419b7b:	push   0x43131c
  419b80:	lea    ecx,[esp+0x18]
  419b84:	call   DWORD PTR ds:0x430360
  419b8a:	mov    DWORD PTR [esp+0x14],0x43149c
  419b92:	mov    DWORD PTR [esp+0x20],0x43e778
  419b9a:	mov    DWORD PTR [esp+0x24],0x43f2d0
  419ba2:	lea    edi,[esp+0x14]
  419ba6:	mov    DWORD PTR [esp+0x30],0x0
  419bae:	call   0x407780
  419bb3:	int3   
  419bb4:	int3   
  419bb5:	int3   
  419bb6:	int3   
  419bb7:	int3   
  419bb8:	int3   
  419bb9:	int3   
  419bba:	int3   
  419bbb:	int3   
  419bbc:	int3   
  419bbd:	int3   
  419bbe:	int3   
  419bbf:	int3   
  419bc0:	push   ecx
  419bc1:	push   eax
  419bc2:	mov    ecx,esi
  419bc4:	mov    DWORD PTR [esp+0x4],0x0
  419bcc:	call   DWORD PTR ds:0x430118
  419bd2:	mov    eax,esi
  419bd4:	pop    ecx
  419bd5:	ret    
  419bd6:	int3   
  419bd7:	int3   
  419bd8:	int3   
  419bd9:	int3   
  419bda:	int3   
  419bdb:	int3   
  419bdc:	int3   
  419bdd:	int3   
  419bde:	int3   
  419bdf:	int3   
  419be0:	push   esi
  419be1:	mov    esi,DWORD PTR [ecx+0xc]
  419be4:	test   esi,esi
  419be6:	je     0x419bf8
  419be8:	mov    ecx,esi
  419bea:	call   0x40cdd0
  419bef:	push   esi
  419bf0:	call   0x42504a
  419bf5:	add    esp,0x4
  419bf8:	pop    esi
  419bf9:	ret    
  419bfa:	int3   
  419bfb:	int3   
  419bfc:	int3   
  419bfd:	int3   
  419bfe:	int3   
  419bff:	int3   
  419c00:	push   esi
  419c01:	mov    esi,DWORD PTR [ecx+0xc]
  419c04:	test   esi,esi
  419c06:	je     0x419c17
  419c08:	push   esi
  419c09:	call   0x412dd0
  419c0e:	push   esi
  419c0f:	call   0x42504a
  419c14:	add    esp,0x4
  419c17:	pop    esi
  419c18:	ret    
  419c19:	int3   
  419c1a:	int3   
  419c1b:	int3   
  419c1c:	int3   
  419c1d:	int3   
  419c1e:	int3   
  419c1f:	int3   
  419c20:	xor    eax,eax
  419c22:	ret    0x4
  419c25:	int3   
  419c26:	int3   
  419c27:	int3   
  419c28:	int3   
  419c29:	int3   
  419c2a:	int3   
  419c2b:	int3   
  419c2c:	int3   
  419c2d:	int3   
  419c2e:	int3   
  419c2f:	int3   
  419c30:	push   esi
  419c31:	mov    esi,DWORD PTR [ecx+0xc]
  419c34:	test   esi,esi
  419c36:	je     0x419c47
  419c38:	push   esi
  419c39:	call   0x40c790
  419c3e:	push   esi
  419c3f:	call   0x42504a
  419c44:	add    esp,0x4
  419c47:	pop    esi
  419c48:	ret    
  419c49:	int3   
  419c4a:	int3   
  419c4b:	int3   
  419c4c:	int3   
  419c4d:	int3   
  419c4e:	int3   
  419c4f:	int3   
  419c50:	test   BYTE PTR [esp+0x4],0x1
  419c55:	push   esi
  419c56:	mov    esi,ecx
  419c58:	mov    DWORD PTR [esi],0x430610
  419c5e:	je     0x419c69
  419c60:	push   esi
  419c61:	call   0x42504a
  419c66:	add    esp,0x4
  419c69:	mov    eax,esi
  419c6b:	pop    esi
  419c6c:	ret    0x4
  419c6f:	int3   
  419c70:	mov    ecx,DWORD PTR [edi+0x34]
  419c73:	mov    eax,ecx
  419c75:	neg    eax
  419c77:	sub    esp,0x14
  419c7a:	and    eax,0x3
  419c7d:	push   ebx
  419c7e:	add    eax,ecx
  419c80:	push   ebp
  419c81:	mov    ebp,DWORD PTR [esp+0x20]
  419c85:	lea    ecx,[eax+0x30]
  419c88:	xor    ebx,ebx
  419c8a:	push   esi
  419c8b:	cmp    ecx,DWORD PTR [edi+0x38]
  419c8e:	jbe    0x419cd3
  419c90:	mov    eax,DWORD PTR [edi+0x1003c]
  419c96:	push   0x1000a
  419c9b:	cmp    eax,ebx
  419c9d:	je     0x419ca3
  419c9f:	call   eax
  419ca1:	jmp    0x419ca8
  419ca3:	call   0x425023
  419ca8:	mov    edx,DWORD PTR [edi+0x30]
  419cab:	mov    ecx,eax
  419cad:	neg    ecx
  419caf:	and    ecx,0x3
  419cb2:	add    ecx,eax
  419cb4:	mov    DWORD PTR [ecx],edx
  419cb6:	mov    DWORD PTR [edi+0x30],eax
  419cb9:	add    eax,0x1000a
  419cbe:	add    ecx,0x4
  419cc1:	mov    DWORD PTR [edi+0x38],eax
  419cc4:	mov    eax,ecx
  419cc6:	neg    eax
  419cc8:	and    eax,0x3
  419ccb:	add    esp,0x4
  419cce:	mov    DWORD PTR [edi+0x34],ecx
  419cd1:	add    eax,ecx
  419cd3:	lea    ecx,[eax+0x30]
  419cd6:	mov    DWORD PTR [edi+0x34],ecx
  419cd9:	cmp    eax,ebx
  419cdb:	je     0x419cf4
  419cdd:	mov    DWORD PTR [eax],ebx
  419cdf:	mov    DWORD PTR [eax+0x4],ebx
  419ce2:	mov    DWORD PTR [eax+0x10],ebx
  419ce5:	mov    DWORD PTR [eax+0x18],ebx
  419ce8:	mov    DWORD PTR [eax+0x20],ebx
  419ceb:	mov    DWORD PTR [eax+0x14],0x1
  419cf2:	mov    ebx,eax
  419cf4:	mov    eax,DWORD PTR [ebp+0x0]
  419cf7:	mov    esi,eax
  419cf9:	movzx  edx,BYTE PTR [esi]
  419cfc:	cmp    BYTE PTR [edx+0x432018],0x0
  419d03:	je     0x419d1e
  419d05:	jmp    0x419d10
  419d07:	lea    esp,[esp+0x0]
  419d0e:	mov    edi,edi
  419d10:	movzx  ecx,BYTE PTR [esi+0x1]
  419d14:	inc    esi
  419d15:	cmp    BYTE PTR [ecx+0x432018],0x0
  419d1c:	jne    0x419d10
  419d1e:	mov    DWORD PTR [ebp+0x0],esi
  419d21:	cmp    esi,eax
  419d23:	jne    0x419d52
  419d25:	lea    ecx,[esp+0xc]
  419d29:	call   DWORD PTR ds:0x4303ac
  419d2f:	push   0x435d14
  419d34:	lea    edx,[esp+0x10]
  419d38:	push   edx
  419d39:	mov    DWORD PTR [esp+0x14],0x43294c
  419d41:	mov    DWORD PTR [esp+0x20],0x431e84
  419d49:	mov    DWORD PTR [esp+0x24],esi
  419d4d:	call   0x429e76
  419d52:	sub    esi,eax
  419d54:	mov    DWORD PTR [ebx],eax
  419d56:	mov    DWORD PTR [ebx+0x8],esi
  419d59:	mov    eax,DWORD PTR [ebp+0x0]
  419d5c:	movzx  ecx,BYTE PTR [eax]
  419d5f:	cmp    BYTE PTR [ecx+0x431ed8],0x0
  419d66:	je     0x419d7e
  419d68:	jmp    0x419d70
  419d6a:	lea    ebx,[ebx+0x0]
  419d70:	movzx  edx,BYTE PTR [eax+0x1]
  419d74:	inc    eax
  419d75:	cmp    BYTE PTR [edx+0x431ed8],0x0
  419d7c:	jne    0x419d70
  419d7e:	push   ebx
  419d7f:	mov    DWORD PTR [ebp+0x0],eax
  419d82:	push   edi
  419d83:	mov    eax,ebp
  419d85:	call   0x41b8d0
  419d8a:	mov    esi,DWORD PTR [ebp+0x0]
  419d8d:	mov    al,BYTE PTR [esi]
  419d8f:	cmp    al,0x3e
  419d91:	jne    0x419da2
  419d93:	push   ebx
  419d94:	inc    esi
  419d95:	push   ebp
  419d96:	mov    ecx,edi
  419d98:	mov    DWORD PTR [ebp+0x0],esi
  419d9b:	call   0x41bb70
  419da0:	jmp    0x419de0
  419da2:	cmp    al,0x2f
  419da4:	jne    0x419e0f
  419da6:	inc    esi
  419da7:	mov    DWORD PTR [ebp+0x0],esi
  419daa:	cmp    BYTE PTR [esi],0x3e
  419dad:	je     0x419ddc
  419daf:	lea    ecx,[esp+0xc]
  419db3:	call   DWORD PTR ds:0x4303ac
  419db9:	push   0x435d14
  419dbe:	lea    eax,[esp+0x10]
  419dc2:	push   eax
  419dc3:	mov    DWORD PTR [esp+0x14],0x43294c
  419dcb:	mov    DWORD PTR [esp+0x20],0x431e9c
  419dd3:	mov    DWORD PTR [esp+0x24],esi
  419dd7:	call   0x429e76
  419ddc:	inc    esi
  419ddd:	mov    DWORD PTR [ebp+0x0],esi
  419de0:	mov    eax,DWORD PTR [ebx]
  419de2:	mov    ecx,eax
  419de4:	test   eax,eax
  419de6:	jne    0x419dfd
  419de8:	xor    eax,eax
  419dea:	pop    esi
  419deb:	mov    ecx,0x4400e0
  419df0:	mov    BYTE PTR [eax+ecx*1],al
  419df3:	pop    ebp
  419df4:	mov    eax,ebx
  419df6:	pop    ebx
  419df7:	add    esp,0x14
  419dfa:	ret    0x4
  419dfd:	mov    eax,DWORD PTR [ebx+0x8]
  419e00:	pop    esi
  419e01:	mov    BYTE PTR [eax+ecx*1],0x0
  419e05:	pop    ebp
  419e06:	mov    eax,ebx
  419e08:	pop    ebx
  419e09:	add    esp,0x14
  419e0c:	ret    0x4
  419e0f:	lea    ecx,[esp+0xc]
  419e13:	call   DWORD PTR ds:0x4303ac
  419e19:	push   0x435d14
  419e1e:	lea    ecx,[esp+0x10]
  419e22:	push   ecx
  419e23:	mov    DWORD PTR [esp+0x14],0x43294c
  419e2b:	mov    DWORD PTR [esp+0x20],0x431e9c
  419e33:	mov    DWORD PTR [esp+0x24],esi
  419e37:	call   0x429e76
  419e3c:	int3   
  419e3d:	int3   
  419e3e:	int3   
  419e3f:	int3   
  419e40:	sub    esp,0x14
  419e43:	mov    eax,DWORD PTR [edx]
  419e45:	mov    cl,BYTE PTR [eax]
  419e47:	cmp    cl,0x3f
  419e4a:	jne    0x419e52
  419e4c:	cmp    BYTE PTR [eax+0x1],0x3e
  419e50:	je     0x419e5b
  419e52:	test   cl,cl
  419e54:	je     0x419e64
  419e56:	inc    eax
  419e57:	mov    DWORD PTR [edx],eax
  419e59:	jmp    0x419e43
  419e5b:	add    DWORD PTR [edx],0x2
  419e5e:	xor    eax,eax
  419e60:	add    esp,0x14
  419e63:	ret    
  419e64:	push   esi
  419e65:	lea    ecx,[esp+0x4]
  419e69:	mov    esi,eax
  419e6b:	call   DWORD PTR ds:0x4303ac
  419e71:	push   0x435d14
  419e76:	lea    eax,[esp+0x8]
  419e7a:	push   eax
  419e7b:	mov    DWORD PTR [esp+0xc],0x43294c
  419e83:	mov    DWORD PTR [esp+0x18],0x431e6c
  419e8b:	mov    DWORD PTR [esp+0x1c],esi
  419e8f:	call   0x429e76
  419e94:	pop    esi
  419e95:	int3   
  419e96:	int3   
  419e97:	int3   
  419e98:	int3   
  419e99:	int3   
  419e9a:	int3   
  419e9b:	int3   
  419e9c:	int3   
  419e9d:	int3   
  419e9e:	int3   
  419e9f:	int3   
  419ea0:	sub    esp,0x14
  419ea3:	mov    eax,DWORD PTR [edx]
  419ea5:	mov    cl,BYTE PTR [eax]
  419ea7:	cmp    cl,0x2d
  419eaa:	jne    0x419eb7
  419eac:	cmp    BYTE PTR [eax+0x1],cl
  419eaf:	jne    0x419eb7
  419eb1:	cmp    BYTE PTR [eax+0x2],0x3e
  419eb5:	je     0x419ec0
  419eb7:	test   cl,cl
  419eb9:	je     0x419ec9
  419ebb:	inc    eax
  419ebc:	mov    DWORD PTR [edx],eax
  419ebe:	jmp    0x419ea3
  419ec0:	add    DWORD PTR [edx],0x3
  419ec3:	xor    eax,eax
  419ec5:	add    esp,0x14
  419ec8:	ret    
  419ec9:	push   esi
  419eca:	lea    ecx,[esp+0x4]
  419ece:	mov    esi,eax
  419ed0:	call   DWORD PTR ds:0x4303ac
  419ed6:	push   0x435d14
  419edb:	lea    eax,[esp+0x8]
  419edf:	push   eax
  419ee0:	mov    DWORD PTR [esp+0xc],0x43294c
  419ee8:	mov    DWORD PTR [esp+0x18],0x431e6c
  419ef0:	mov    DWORD PTR [esp+0x1c],esi
  419ef4:	call   0x429e76
  419ef9:	pop    esi
  419efa:	int3   
  419efb:	int3   
  419efc:	int3   
  419efd:	int3   
  419efe:	int3   
  419eff:	int3   
  419f00:	sub    esp,0x14
  419f03:	push   ebx
  419f04:	mov    ebx,eax
  419f06:	push   ebp
  419f07:	mov    ebp,DWORD PTR [ebx]
  419f09:	mov    dl,0x5d
  419f0b:	jmp    0x419f10
  419f0d:	lea    ecx,[ecx+0x0]
  419f10:	mov    eax,DWORD PTR [ebx]
  419f12:	mov    cl,BYTE PTR [eax]
  419f14:	cmp    cl,dl
  419f16:	jne    0x419f23
  419f18:	cmp    BYTE PTR [eax+0x1],dl
  419f1b:	jne    0x419f23
  419f1d:	cmp    BYTE PTR [eax+0x2],0x3e
  419f21:	je     0x419f2c
  419f23:	test   cl,cl
  419f25:	je     0x419f5c
  419f27:	inc    eax
  419f28:	mov    DWORD PTR [ebx],eax
  419f2a:	jmp    0x419f10
  419f2c:	push   esi
  419f2d:	mov    esi,DWORD PTR [esp+0x24]
  419f31:	push   edi
  419f32:	push   0x0
  419f34:	push   0x3
  419f36:	add    esi,0x30
  419f39:	xor    edi,edi
  419f3b:	call   0x4125c0
  419f40:	mov    ecx,DWORD PTR [ebx]
  419f42:	sub    ecx,ebp
  419f44:	mov    DWORD PTR [eax+0x4],ebp
  419f47:	pop    edi
  419f48:	mov    DWORD PTR [eax+0xc],ecx
  419f4b:	mov    ecx,DWORD PTR [ebx]
  419f4d:	pop    esi
  419f4e:	mov    BYTE PTR [ecx],0x0
  419f51:	add    DWORD PTR [ebx],0x3
  419f54:	pop    ebp
  419f55:	pop    ebx
  419f56:	add    esp,0x14
  419f59:	ret    0x4
  419f5c:	lea    ecx,[esp+0x8]
  419f60:	mov    ebx,eax
  419f62:	call   DWORD PTR ds:0x4303ac
  419f68:	push   0x435d14
  419f6d:	lea    edx,[esp+0xc]
  419f71:	push   edx
  419f72:	mov    DWORD PTR [esp+0x10],0x43294c
  419f7a:	mov    DWORD PTR [esp+0x1c],0x431e6c
  419f82:	mov    DWORD PTR [esp+0x20],ebx
  419f86:	call   0x429e76
  419f8b:	int3   
  419f8c:	int3   
  419f8d:	int3   
  419f8e:	int3   
  419f8f:	int3   
  419f90:	sub    esp,0x28
  419f93:	push   esi
  419f94:	mov    esi,eax
  419f96:	mov    eax,DWORD PTR [esi]
  419f98:	cmp    BYTE PTR [eax],0x3e
  419f9b:	je     0x419fd9
  419f9d:	lea    ecx,[ecx+0x0]
  419fa0:	mov    eax,DWORD PTR [esi]
  419fa2:	mov    cl,BYTE PTR [eax]
  419fa4:	test   cl,cl
  419fa6:	je     0x41a011
  419fa8:	inc    eax
  419fa9:	mov    DWORD PTR [esi],eax
  419fab:	cmp    cl,0x5b
  419fae:	jne    0x419fd2
  419fb0:	mov    edx,0x1
  419fb5:	movsx  ecx,BYTE PTR [eax]
  419fb8:	sub    ecx,0x0
  419fbb:	je     0x419fe2
  419fbd:	sub    ecx,0x5b
  419fc0:	je     0x419fca
  419fc2:	sub    ecx,0x2
  419fc5:	jne    0x419fcb
  419fc7:	dec    edx
  419fc8:	jmp    0x419fcb
  419fca:	inc    edx
  419fcb:	inc    eax
  419fcc:	mov    DWORD PTR [esi],eax
  419fce:	test   edx,edx
  419fd0:	jg     0x419fb5
  419fd2:	mov    ecx,DWORD PTR [esi]
  419fd4:	cmp    BYTE PTR [ecx],0x3e
  419fd7:	jne    0x419fa0
  419fd9:	inc    DWORD PTR [esi]
  419fdb:	xor    eax,eax
  419fdd:	pop    esi
  419fde:	add    esp,0x28
  419fe1:	ret    
  419fe2:	mov    esi,DWORD PTR [esi]
  419fe4:	lea    ecx,[esp+0x4]
  419fe8:	call   DWORD PTR ds:0x4303ac
  419fee:	push   0x435d14
  419ff3:	lea    edx,[esp+0x8]
  419ff7:	push   edx
  419ff8:	mov    DWORD PTR [esp+0xc],0x43294c
  41a000:	mov    DWORD PTR [esp+0x18],0x431e6c
  41a008:	mov    DWORD PTR [esp+0x1c],esi
  41a00c:	call   0x429e76
  41a011:	lea    ecx,[esp+0x18]
  41a015:	mov    esi,eax
  41a017:	call   DWORD PTR ds:0x4303ac
  41a01d:	push   0x435d14
  41a022:	lea    eax,[esp+0x1c]
  41a026:	push   eax
  41a027:	mov    DWORD PTR [esp+0x20],0x43294c
  41a02f:	mov    DWORD PTR [esp+0x2c],0x431e6c
  41a037:	mov    DWORD PTR [esp+0x30],esi
  41a03b:	call   0x429e76
  41a040:	int3   
  41a041:	int3   
  41a042:	int3   
  41a043:	int3   
  41a044:	int3   
  41a045:	int3   
  41a046:	int3   
  41a047:	int3   
  41a048:	int3   
  41a049:	int3   
  41a04a:	int3   
  41a04b:	int3   
  41a04c:	int3   
  41a04d:	int3   
  41a04e:	int3   
  41a04f:	int3   
  41a050:	push   0xffffffff
  41a052:	push   0x42d800
  41a057:	mov    eax,fs:0x0
  41a05d:	push   eax
  41a05e:	sub    esp,0xc
  41a061:	push   ebp
  41a062:	push   esi
  41a063:	push   edi
  41a064:	mov    eax,ds:0x43e020
  41a069:	xor    eax,esp
  41a06b:	push   eax
  41a06c:	lea    eax,[esp+0x1c]
  41a070:	mov    fs:0x0,eax
  41a076:	mov    ebp,DWORD PTR [esp+0x2c]
  41a07a:	mov    edi,ecx
  41a07c:	mov    DWORD PTR [esp+0x14],edi
  41a080:	mov    DWORD PTR [esp+0x24],0x0
  41a088:	mov    eax,DWORD PTR [esp+0x38]
  41a08c:	sub    esp,0x10
  41a08f:	mov    esi,esp
  41a091:	mov    DWORD PTR [esp+0x28],esp
  41a095:	mov    DWORD PTR [esi+0x8],eax
  41a098:	mov    DWORD PTR [esi],0x0
  41a09e:	cmp    eax,0x8
  41a0a1:	ja     0x41a0ab
  41a0a3:	mov    eax,esi
  41a0a5:	lea    ecx,[esp+0x40]
  41a0a9:	jmp    0x41a0ba
  41a0ab:	push   eax
  41a0ac:	call   0x425023
  41a0b1:	mov    DWORD PTR [esi],eax
  41a0b3:	mov    ecx,DWORD PTR [esp+0x44]
  41a0b7:	add    esp,0x4
  41a0ba:	mov    edx,DWORD PTR [esi+0x8]
  41a0bd:	push   edx
  41a0be:	push   ecx
  41a0bf:	push   eax
  41a0c0:	call   0x42a018
  41a0c5:	mov    eax,DWORD PTR [esp+0x58]
  41a0c9:	add    esp,0xc
  41a0cc:	mov    DWORD PTR [esi+0xc],eax
  41a0cf:	call   0x41bd90
  41a0d4:	mov    BYTE PTR [esp+0x24],0x1
  41a0d9:	mov    DWORD PTR [edi+0x20],ebp
  41a0dc:	mov    DWORD PTR [edi+0x24],ebp
  41a0df:	mov    DWORD PTR [edi+0x28],ebp
  41a0e2:	mov    DWORD PTR [edi+0x2c],ebx
  41a0e5:	mov    BYTE PTR [edi+0x30],0x0
  41a0e9:	cmp    ebp,ebx
  41a0eb:	je     0x41a0f2
  41a0ed:	call   0x41b1b0
  41a0f2:	cmp    DWORD PTR [esp+0x38],0x8
  41a0f7:	jbe    0x41a10a
  41a0f9:	mov    eax,DWORD PTR [esp+0x30]
  41a0fd:	test   eax,eax
  41a0ff:	je     0x41a10a
  41a101:	push   eax
  41a102:	call   0x42517c
  41a107:	add    esp,0x4
  41a10a:	mov    eax,edi
  41a10c:	mov    ecx,DWORD PTR [esp+0x1c]
  41a110:	mov    DWORD PTR fs:0x0,ecx
  41a117:	pop    ecx
  41a118:	pop    edi
  41a119:	pop    esi
  41a11a:	pop    ebp
  41a11b:	add    esp,0x18
  41a11e:	ret    0x14
  41a121:	int3   
  41a122:	int3   
  41a123:	int3   
  41a124:	int3   
  41a125:	int3   
  41a126:	int3   
  41a127:	int3   
  41a128:	int3   
  41a129:	int3   
  41a12a:	int3   
  41a12b:	int3   
  41a12c:	int3   
  41a12d:	int3   
  41a12e:	int3   
  41a12f:	int3   
  41a130:	push   0xffffffff
  41a132:	push   0x42c721
  41a137:	mov    eax,fs:0x0
  41a13d:	push   eax
  41a13e:	push   ecx
  41a13f:	push   esi
  41a140:	push   edi
  41a141:	mov    eax,ds:0x43e020
  41a146:	xor    eax,esp
  41a148:	push   eax
  41a149:	lea    eax,[esp+0x10]
  41a14d:	mov    fs:0x0,eax
  41a153:	mov    esi,DWORD PTR [esp+0x20]
  41a157:	mov    DWORD PTR [esp+0xc],0x0
  41a15f:	lea    edi,[esp+0x24]
  41a163:	mov    DWORD PTR [esp+0x18],0x1
  41a16b:	call   0x419a80
  41a170:	mov    BYTE PTR [esp+0x18],0x0
  41a175:	mov    eax,DWORD PTR [esp+0x24]
  41a179:	mov    DWORD PTR [esp+0xc],0x1
  41a181:	test   eax,eax
  41a183:	je     0x41a1a1
  41a185:	test   al,0x1
  41a187:	jne    0x41a1a1
  41a189:	and    eax,0xfffffffe
  41a18c:	mov    eax,DWORD PTR [eax]
  41a18e:	test   eax,eax
  41a190:	je     0x41a1a1
  41a192:	lea    ecx,[esp+0x2c]
  41a196:	push   0x2
  41a198:	push   ecx
  41a199:	mov    edx,ecx
  41a19b:	push   edx
  41a19c:	call   eax
  41a19e:	add    esp,0xc
  41a1a1:	mov    eax,esi
  41a1a3:	mov    ecx,DWORD PTR [esp+0x10]
  41a1a7:	mov    DWORD PTR fs:0x0,ecx
  41a1ae:	pop    ecx
  41a1af:	pop    edi
  41a1b0:	pop    esi
  41a1b1:	add    esp,0x10
  41a1b4:	ret    
  41a1b5:	int3   
  41a1b6:	int3   
  41a1b7:	int3   
  41a1b8:	int3   
  41a1b9:	int3   
  41a1ba:	int3   
  41a1bb:	int3   
  41a1bc:	int3   
  41a1bd:	int3   
  41a1be:	int3   
  41a1bf:	int3   
  41a1c0:	push   0xffffffff
  41a1c2:	push   0x42e0b0
  41a1c7:	mov    eax,fs:0x0
  41a1cd:	push   eax
  41a1ce:	sub    esp,0xc
  41a1d1:	push   ebp
  41a1d2:	push   esi
  41a1d3:	push   edi
  41a1d4:	mov    eax,ds:0x43e020
  41a1d9:	xor    eax,esp
  41a1db:	push   eax
  41a1dc:	lea    eax,[esp+0x1c]
  41a1e0:	mov    fs:0x0,eax
  41a1e6:	mov    ebp,DWORD PTR [esp+0x2c]
  41a1ea:	push   0x4
  41a1ec:	mov    DWORD PTR [esp+0x28],0x1
  41a1f4:	call   0x425050
  41a1f9:	add    esp,0x4
  41a1fc:	test   eax,eax
  41a1fe:	je     0x41a204
  41a200:	mov    DWORD PTR [eax],ebp
  41a202:	jmp    0x41a206
  41a204:	xor    eax,eax
  41a206:	mov    DWORD PTR [ebp+0x0],eax
  41a209:	sub    esp,0x40
  41a20c:	mov    BYTE PTR [esp+0x64],0x2
  41a211:	mov    esi,esp
  41a213:	lea    edi,[esp+0xb0]
  41a21a:	mov    DWORD PTR [esp+0x54],esp
  41a21e:	call   0x419a80
  41a223:	sub    esp,0x40
  41a226:	mov    esi,esp
  41a228:	lea    edi,[esp+0xb0]
  41a22f:	mov    BYTE PTR [esp+0xa4],0x3
  41a237:	mov    DWORD PTR [esp+0x98],esp
  41a23e:	call   0x419a80
  41a243:	mov    eax,DWORD PTR [esp+0xac]
  41a24a:	push   eax
  41a24b:	push   ebp
  41a24c:	mov    BYTE PTR [esp+0xac],0x2
  41a254:	call   0x41be40
  41a259:	mov    BYTE PTR [esp+0x24],0x0
  41a25e:	mov    eax,DWORD PTR [esp+0x30]
  41a262:	test   eax,eax
  41a264:	je     0x41a28a
  41a266:	test   al,0x1
  41a268:	jne    0x41a282
  41a26a:	and    eax,0xfffffffe
  41a26d:	mov    eax,DWORD PTR [eax]
  41a26f:	test   eax,eax
  41a271:	je     0x41a282
  41a273:	lea    ecx,[esp+0x38]
  41a277:	push   0x2
  41a279:	push   ecx
  41a27a:	mov    edx,ecx
  41a27c:	push   edx
  41a27d:	call   eax
  41a27f:	add    esp,0xc
  41a282:	mov    DWORD PTR [esp+0x30],0x0
  41a28a:	mov    DWORD PTR [esp+0x24],0xffffffff
  41a292:	mov    eax,DWORD PTR [esp+0x70]
  41a296:	test   eax,eax
  41a298:	je     0x41a2b6
  41a29a:	test   al,0x1
  41a29c:	jne    0x41a2b6
  41a29e:	and    eax,0xfffffffe
  41a2a1:	mov    eax,DWORD PTR [eax]
  41a2a3:	test   eax,eax
  41a2a5:	je     0x41a2b6
  41a2a7:	lea    ecx,[esp+0x78]
  41a2ab:	push   0x2
  41a2ad:	push   ecx
  41a2ae:	mov    edx,ecx
  41a2b0:	push   edx
  41a2b1:	call   eax
  41a2b3:	add    esp,0xc
  41a2b6:	mov    eax,ebp
  41a2b8:	mov    ecx,DWORD PTR [esp+0x1c]
  41a2bc:	mov    DWORD PTR fs:0x0,ecx
  41a2c3:	pop    ecx
  41a2c4:	pop    edi
  41a2c5:	pop    esi
  41a2c6:	pop    ebp
  41a2c7:	add    esp,0x18
  41a2ca:	ret    0x84
  41a2cd:	int3   
  41a2ce:	int3   
  41a2cf:	int3   
  41a2d0:	sub    esp,0x8
  41a2d3:	push   ebx
  41a2d4:	mov    ebx,DWORD PTR ds:0x430390
  41a2da:	push   ebp
  41a2db:	push   esi
  41a2dc:	mov    esi,DWORD PTR [esp+0x20]
  41a2e0:	push   edi
  41a2e1:	mov    edi,DWORD PTR [esp+0x28]
  41a2e5:	mov    DWORD PTR [esp+0x10],esi
  41a2e9:	mov    DWORD PTR [esp+0x14],edi
  41a2ed:	lea    ecx,[ecx+0x0]
  41a2f0:	cmp    esi,0xfffffffc
  41a2f3:	je     0x41a301
  41a2f5:	test   esi,esi
  41a2f7:	je     0x41a2ff
  41a2f9:	cmp    esi,DWORD PTR [esp+0x2c]
  41a2fd:	je     0x41a301
  41a2ff:	call   ebx
  41a301:	mov    edx,DWORD PTR [esp+0x30]
  41a305:	cmp    edi,edx
  41a307:	je     0x41a402
  41a30d:	mov    ecx,DWORD PTR [esp+0x1c]
  41a311:	mov    eax,DWORD PTR [ecx]
  41a313:	cmp    eax,DWORD PTR [ecx+0x4]
  41a316:	je     0x41a402
  41a31c:	mov    ebp,eax
  41a31e:	mov    edi,edi
  41a320:	cmp    esi,0xfffffffc
  41a323:	je     0x41a331
  41a325:	test   esi,esi
  41a327:	je     0x41a32f
  41a329:	cmp    esi,DWORD PTR [esp+0x2c]
  41a32d:	je     0x41a331
  41a32f:	call   ebx
  41a331:	cmp    edi,DWORD PTR [esp+0x30]
  41a335:	je     0x41a39b
  41a337:	mov    eax,DWORD PTR [esp+0x1c]
  41a33b:	cmp    ebp,DWORD PTR [eax+0x4]
  41a33e:	je     0x41a39b
  41a340:	cmp    esi,0xfffffffc
  41a343:	je     0x41a365
  41a345:	test   esi,esi
  41a347:	jne    0x41a34b
  41a349:	call   ebx
  41a34b:	cmp    DWORD PTR [esi+0x18],0x8
  41a34f:	jb     0x41a356
  41a351:	mov    eax,DWORD PTR [esi+0x4]
  41a354:	jmp    0x41a359
  41a356:	lea    eax,[esi+0x4]
  41a359:	mov    ecx,DWORD PTR [esi+0x14]
  41a35c:	lea    edx,[eax+ecx*2]
  41a35f:	cmp    edi,edx
  41a361:	jb     0x41a365
  41a363:	call   ebx
  41a365:	movsx  eax,BYTE PTR [ebp+0x0]
  41a369:	movzx  ecx,WORD PTR [edi]
  41a36c:	cmp    ecx,eax
  41a36e:	jne    0x41a39b
  41a370:	cmp    esi,0xfffffffc
  41a373:	je     0x41a395
  41a375:	test   esi,esi
  41a377:	jne    0x41a37b
  41a379:	call   ebx
  41a37b:	cmp    DWORD PTR [esi+0x18],0x8
  41a37f:	jb     0x41a386
  41a381:	mov    eax,DWORD PTR [esi+0x4]
  41a384:	jmp    0x41a389
  41a386:	lea    eax,[esi+0x4]
  41a389:	mov    edx,DWORD PTR [esi+0x14]
  41a38c:	lea    eax,[eax+edx*2]
  41a38f:	cmp    edi,eax
  41a391:	jb     0x41a395
  41a393:	call   ebx
  41a395:	add    edi,0x2
  41a398:	inc    ebp
  41a399:	jmp    0x41a320
  41a39b:	mov    ecx,DWORD PTR [esp+0x1c]
  41a39f:	cmp    ebp,DWORD PTR [ecx+0x4]
  41a3a2:	je     0x41a3e1
  41a3a4:	mov    esi,DWORD PTR [esp+0x10]
  41a3a8:	cmp    esi,0xfffffffc
  41a3ab:	je     0x41a3cf
  41a3ad:	test   esi,esi
  41a3af:	jne    0x41a3b3
  41a3b1:	call   ebx
  41a3b3:	cmp    DWORD PTR [esi+0x18],0x8
  41a3b7:	jb     0x41a3be
  41a3b9:	mov    eax,DWORD PTR [esi+0x4]
  41a3bc:	jmp    0x41a3c1
  41a3be:	lea    eax,[esi+0x4]
  41a3c1:	mov    edx,DWORD PTR [esi+0x14]
  41a3c4:	lea    eax,[eax+edx*2]
  41a3c7:	cmp    DWORD PTR [esp+0x14],eax
  41a3cb:	jb     0x41a3cf
  41a3cd:	call   ebx
  41a3cf:	add    DWORD PTR [esp+0x14],0x2
  41a3d4:	mov    edi,DWORD PTR [esp+0x14]
  41a3d8:	mov    esi,DWORD PTR [esp+0x10]
  41a3dc:	jmp    0x41a2f0
  41a3e1:	mov    eax,DWORD PTR [esp+0x20]
  41a3e5:	mov    ecx,DWORD PTR [esp+0x10]
  41a3e9:	mov    edx,DWORD PTR [esp+0x14]
  41a3ed:	mov    DWORD PTR [eax+0x8],esi
  41a3f0:	mov    DWORD PTR [eax+0xc],edi
  41a3f3:	mov    DWORD PTR [eax],ecx
  41a3f5:	mov    DWORD PTR [eax+0x4],edx
  41a3f8:	pop    edi
  41a3f9:	pop    esi
  41a3fa:	pop    ebp
  41a3fb:	pop    ebx
  41a3fc:	add    esp,0x8
  41a3ff:	ret    0x18
  41a402:	mov    eax,DWORD PTR [esp+0x20]
  41a406:	mov    ecx,DWORD PTR [esp+0x2c]
  41a40a:	pop    edi
  41a40b:	pop    esi
  41a40c:	pop    ebp
  41a40d:	mov    DWORD PTR [eax+0xc],edx
  41a410:	mov    DWORD PTR [eax+0x8],ecx
  41a413:	mov    DWORD PTR [eax],ecx
  41a415:	mov    DWORD PTR [eax+0x4],edx
  41a418:	pop    ebx
  41a419:	add    esp,0x8
  41a41c:	ret    0x18
  41a41f:	int3   
  41a420:	sub    esp,0x10
  41a423:	mov    ecx,DWORD PTR [esp+0x2c]
  41a427:	push   ebx
  41a428:	mov    ebx,DWORD PTR [esp+0x3c]
  41a42c:	push   esi
  41a42d:	mov    esi,DWORD PTR [esp+0x38]
  41a431:	push   edi
  41a432:	mov    edi,DWORD PTR [esp+0x40]
  41a436:	mov    DWORD PTR [esp+0xc],ecx
  41a43a:	mov    DWORD PTR [esp+0x14],edi
  41a43e:	cmp    ecx,0xfffffffc
  41a441:	je     0x41a459
  41a443:	test   ecx,ecx
  41a445:	je     0x41a44b
  41a447:	cmp    ecx,edi
  41a449:	je     0x41a459
  41a44b:	call   DWORD PTR ds:0x430390
  41a451:	mov    edi,DWORD PTR [esp+0x40]
  41a455:	mov    ecx,DWORD PTR [esp+0x38]
  41a459:	cmp    esi,ebx
  41a45b:	je     0x41a4a7
  41a45d:	mov    edx,DWORD PTR [esp+0x34]
  41a461:	mov    esi,DWORD PTR [esp+0x30]
  41a465:	push   edx
  41a466:	push   esi
  41a467:	sub    esp,0x10
  41a46a:	mov    eax,esp
  41a46c:	mov    DWORD PTR [eax],ecx
  41a46e:	mov    ecx,DWORD PTR [esp+0x54]
  41a472:	mov    DWORD PTR [eax+0x4],ecx
  41a475:	mov    ecx,DWORD PTR [esp+0x5c]
  41a479:	push   edx
  41a47a:	mov    edx,DWORD PTR [esp+0x40]
  41a47e:	mov    DWORD PTR [eax+0x8],edi
  41a481:	mov    DWORD PTR [eax+0xc],ecx
  41a484:	mov    ecx,DWORD PTR [esp+0x44]
  41a488:	push   esi
  41a489:	sub    esp,0xc
  41a48c:	mov    eax,esp
  41a48e:	mov    DWORD PTR [eax],edx
  41a490:	mov    edx,DWORD PTR [esp+0x58]
  41a494:	mov    DWORD PTR [eax+0x4],ecx
  41a497:	mov    DWORD PTR [eax+0x8],edx
  41a49a:	mov    eax,DWORD PTR [esp+0x4c]
  41a49e:	push   eax
  41a49f:	call   0x41bf40
  41a4a4:	add    esp,0x30
  41a4a7:	pop    edi
  41a4a8:	pop    esi
  41a4a9:	pop    ebx
  41a4aa:	add    esp,0x10
  41a4ad:	ret    
  41a4ae:	int3   
  41a4af:	int3   
  41a4b0:	push   ecx
  41a4b1:	push   ebx
  41a4b2:	push   ebp
  41a4b3:	mov    ebp,DWORD PTR [esp+0x14]
  41a4b7:	push   esi
  41a4b8:	mov    esi,DWORD PTR [esp+0x1c]
  41a4bc:	mov    ecx,esi
  41a4be:	sub    ecx,ebp
  41a4c0:	mov    eax,0x2aaaaaab
  41a4c5:	imul   ecx
  41a4c7:	sar    edx,0x4
  41a4ca:	mov    eax,edx
  41a4cc:	shr    eax,0x1f
  41a4cf:	add    eax,edx
  41a4d1:	cdq    
  41a4d2:	sub    eax,edx
  41a4d4:	push   edi
  41a4d5:	sar    eax,1
  41a4d7:	lea    edi,[eax+eax*2]
  41a4da:	add    esi,0xffffffa0
  41a4dd:	shl    edi,0x5
  41a4e0:	push   esi
  41a4e1:	mov    esi,DWORD PTR [esp+0x28]
  41a4e5:	add    edi,ebp
  41a4e7:	push   edi
  41a4e8:	mov    ebx,esi
  41a4ea:	mov    eax,ebp
  41a4ec:	call   0x41c230
  41a4f1:	add    esp,0x8
  41a4f4:	lea    ebp,[edi+0x60]
  41a4f7:	cmp    DWORD PTR [esp+0x1c],edi
  41a4fb:	jae    0x41a521
  41a4fd:	lea    ecx,[ecx+0x0]
  41a500:	lea    ebx,[edi-0x60]
  41a503:	push   edi
  41a504:	push   ebx
  41a505:	call   esi
  41a507:	add    esp,0x8
  41a50a:	test   eax,eax
  41a50c:	jne    0x41a521
  41a50e:	push   ebx
  41a50f:	push   edi
  41a510:	call   esi
  41a512:	add    esp,0x8
  41a515:	test   eax,eax
  41a517:	jne    0x41a521
  41a519:	mov    edi,ebx
  41a51b:	cmp    DWORD PTR [esp+0x1c],edi
  41a51f:	jb     0x41a500
  41a521:	cmp    ebp,DWORD PTR [esp+0x20]
  41a525:	jae    0x41a546
  41a527:	push   edi
  41a528:	push   ebp
  41a529:	call   esi
  41a52b:	add    esp,0x8
  41a52e:	test   eax,eax
  41a530:	jne    0x41a546
  41a532:	push   ebp
  41a533:	push   edi
  41a534:	call   esi
  41a536:	add    esp,0x8
  41a539:	test   eax,eax
  41a53b:	jne    0x41a546
  41a53d:	add    ebp,0x60
  41a540:	cmp    ebp,DWORD PTR [esp+0x20]
  41a544:	jb     0x41a527
  41a546:	mov    ebx,ebp
  41a548:	mov    DWORD PTR [esp+0x10],edi
  41a54c:	lea    esp,[esp+0x0]
  41a550:	cmp    ebx,DWORD PTR [esp+0x20]
  41a554:	jae    0x41a585
  41a556:	push   ebx
  41a557:	push   edi
  41a558:	call   esi
  41a55a:	add    esp,0x8
  41a55d:	test   eax,eax
  41a55f:	jne    0x41a57c
  41a561:	push   edi
  41a562:	push   ebx
  41a563:	call   esi
  41a565:	add    esp,0x8
  41a568:	test   eax,eax
  41a56a:	jne    0x41a585
  41a56c:	mov    ecx,ebp
  41a56e:	mov    esi,ebx
  41a570:	add    ebp,0x60
  41a573:	call   0x41d530
  41a578:	mov    esi,DWORD PTR [esp+0x24]
  41a57c:	add    ebx,0x60
  41a57f:	cmp    ebx,DWORD PTR [esp+0x20]
  41a583:	jb     0x41a556
  41a585:	mov    esi,DWORD PTR [esp+0x10]
  41a589:	cmp    DWORD PTR [esp+0x1c],esi
  41a58d:	jae    0x41a5ca
  41a58f:	add    esi,0xffffffa0
  41a592:	push   edi
  41a593:	push   esi
  41a594:	call   DWORD PTR [esp+0x2c]
  41a598:	add    esp,0x8
  41a59b:	test   eax,eax
  41a59d:	jne    0x41a5b6
  41a59f:	push   esi
  41a5a0:	push   edi
  41a5a1:	call   DWORD PTR [esp+0x2c]
  41a5a5:	add    esp,0x8
  41a5a8:	test   eax,eax
  41a5aa:	jne    0x41a5ca
  41a5ac:	sub    edi,0x60
  41a5af:	mov    ecx,edi
  41a5b1:	call   0x41d530
  41a5b6:	mov    eax,DWORD PTR [esp+0x10]
  41a5ba:	sub    eax,0x60
  41a5bd:	sub    esi,0x60
  41a5c0:	mov    DWORD PTR [esp+0x10],eax
  41a5c4:	cmp    DWORD PTR [esp+0x1c],eax
  41a5c8:	jb     0x41a592
  41a5ca:	mov    esi,DWORD PTR [esp+0x10]
  41a5ce:	cmp    esi,DWORD PTR [esp+0x1c]
  41a5d2:	jne    0x41a602
  41a5d4:	cmp    ebx,DWORD PTR [esp+0x20]
  41a5d8:	je     0x41a649
  41a5da:	cmp    ebp,ebx
  41a5dc:	je     0x41a5e7
  41a5de:	mov    esi,ebp
  41a5e0:	mov    ecx,edi
  41a5e2:	call   0x41d530
  41a5e7:	mov    esi,ebx
  41a5e9:	mov    ecx,edi
  41a5eb:	add    ebp,0x60
  41a5ee:	add    edi,0x60
  41a5f1:	add    ebx,0x60
  41a5f4:	call   0x41d530
  41a5f9:	mov    esi,DWORD PTR [esp+0x24]
  41a5fd:	jmp    0x41a550
  41a602:	sub    esi,0x60
  41a605:	mov    DWORD PTR [esp+0x10],esi
  41a609:	cmp    ebx,DWORD PTR [esp+0x20]
  41a60d:	jne    0x41a636
  41a60f:	sub    edi,0x60
  41a612:	cmp    esi,edi
  41a614:	je     0x41a621
  41a616:	mov    ecx,DWORD PTR [esp+0x10]
  41a61a:	mov    esi,edi
  41a61c:	call   0x41d530
  41a621:	sub    ebp,0x60
  41a624:	mov    esi,ebp
  41a626:	mov    ecx,edi
  41a628:	call   0x41d530
  41a62d:	mov    esi,DWORD PTR [esp+0x24]
  41a631:	jmp    0x41a550
  41a636:	mov    ecx,ebx
  41a638:	call   0x41d530
  41a63d:	mov    esi,DWORD PTR [esp+0x24]
  41a641:	add    ebx,0x60
  41a644:	jmp    0x41a550
  41a649:	mov    eax,DWORD PTR [esp+0x18]
  41a64d:	mov    DWORD PTR [eax],edi
  41a64f:	pop    edi
  41a650:	pop    esi
  41a651:	mov    DWORD PTR [eax+0x4],ebp
  41a654:	pop    ebp
  41a655:	pop    ebx
  41a656:	pop    ecx
  41a657:	ret    
  41a658:	int3   
  41a659:	int3   
  41a65a:	int3   
  41a65b:	int3   
  41a65c:	int3   
  41a65d:	int3   
  41a65e:	int3   
  41a65f:	int3   
  41a660:	push   esi
  41a661:	mov    esi,DWORD PTR [esp+0x8]
  41a665:	test   esi,esi
  41a667:	je     0x41a679
  41a669:	mov    ecx,esi
  41a66b:	call   0x40cdd0
  41a670:	push   esi
  41a671:	call   0x42504a
  41a676:	add    esp,0x4
  41a679:	pop    esi
  41a67a:	ret    
  41a67b:	int3   
  41a67c:	int3   
  41a67d:	int3   
  41a67e:	int3   
  41a67f:	int3   
  41a680:	push   0xffffffff
  41a682:	push   0x42c748
  41a687:	mov    eax,fs:0x0
  41a68d:	push   eax
  41a68e:	push   ecx
  41a68f:	push   ebx
  41a690:	push   edi
  41a691:	mov    eax,ds:0x43e020
  41a696:	xor    eax,esp
  41a698:	push   eax
  41a699:	lea    eax,[esp+0x10]
  41a69d:	mov    fs:0x0,eax
  41a6a3:	sub    esp,0x44
  41a6a6:	mov    eax,esp
  41a6a8:	mov    DWORD PTR [esp+0x5c],0x0
  41a6b0:	mov    ecx,DWORD PTR [esp+0x64]
  41a6b4:	lea    edi,[eax+0x4]
  41a6b7:	mov    DWORD PTR [esp+0x50],esp
  41a6bb:	mov    DWORD PTR [eax],ecx
  41a6bd:	push   edi
  41a6be:	lea    ecx,[esp+0x6c]
  41a6c2:	lea    ebx,[esi+0x8]
  41a6c5:	call   0x417d60
  41a6ca:	mov    edx,DWORD PTR [esp+0xa4]
  41a6d1:	mov    ecx,ebx
  41a6d3:	mov    DWORD PTR [edi+0x3c],edx
  41a6d6:	call   0x41c700
  41a6db:	movzx  eax,al
  41a6de:	neg    eax
  41a6e0:	sbb    eax,eax
  41a6e2:	lea    ecx,[esp+0x24]
  41a6e6:	and    eax,0x431eb0
  41a6eb:	push   ecx
  41a6ec:	mov    DWORD PTR [esi],eax
  41a6ee:	mov    DWORD PTR [esp+0x1c],0xffffffff
  41a6f6:	call   0x40e010
  41a6fb:	mov    ecx,DWORD PTR [esp+0x10]
  41a6ff:	mov    DWORD PTR fs:0x0,ecx
  41a706:	pop    ecx
  41a707:	pop    edi
  41a708:	pop    ebx
  41a709:	add    esp,0x10
  41a70c:	ret    0x44
  41a70f:	int3   
  41a710:	push   0xffffffff
  41a712:	push   0x42b9b8
  41a717:	mov    eax,fs:0x0
  41a71d:	push   eax
  41a71e:	push   ecx
  41a71f:	push   esi
  41a720:	mov    eax,ds:0x43e020
  41a725:	xor    eax,esp
  41a727:	push   eax
  41a728:	lea    eax,[esp+0xc]
  41a72c:	mov    fs:0x0,eax
  41a732:	mov    DWORD PTR [esp+0x14],0x0
  41a73a:	mov    ecx,DWORD PTR [esp+0x1c]
  41a73e:	sub    esp,0x24
  41a741:	mov    eax,esp
  41a743:	mov    DWORD PTR [eax],ecx
  41a745:	mov    edx,DWORD PTR [esp+0x44]
  41a749:	mov    DWORD PTR [eax+0x4],edx
  41a74c:	lea    ecx,[eax+0x8]
  41a74f:	lea    eax,[esp+0x48]
  41a753:	mov    DWORD PTR [esp+0x2c],esp
  41a757:	push   eax
  41a758:	lea    esi,[edi+0x8]
  41a75b:	call   DWORD PTR ds:0x430118
  41a761:	call   0x41c790
  41a766:	movzx  ecx,al
  41a769:	neg    ecx
  41a76b:	sbb    ecx,ecx
  41a76d:	and    ecx,0x431eb8
  41a773:	mov    DWORD PTR [edi],ecx
  41a775:	lea    ecx,[esp+0x24]
  41a779:	mov    DWORD PTR [esp+0x14],0xffffffff
  41a781:	call   DWORD PTR ds:0x430264
  41a787:	mov    ecx,DWORD PTR [esp+0xc]
  41a78b:	mov    DWORD PTR fs:0x0,ecx
  41a792:	pop    ecx
  41a793:	pop    esi
  41a794:	add    esp,0x10
  41a797:	ret    0x24
  41a79a:	int3   
  41a79b:	int3   
  41a79c:	int3   
  41a79d:	int3   
  41a79e:	int3   
  41a79f:	int3   
  41a7a0:	sub    esp,0xc
  41a7a3:	mov    eax,DWORD PTR [esp+0x10]
  41a7a7:	mov    ecx,DWORD PTR [esp+0x14]
  41a7ab:	mov    edx,DWORD PTR [esp+0x18]
  41a7af:	mov    DWORD PTR [esp],eax
  41a7b2:	lea    eax,[esp]
  41a7b5:	push   eax
  41a7b6:	mov    DWORD PTR [esp+0x8],ecx
  41a7ba:	mov    DWORD PTR [esp+0xc],edx
  41a7be:	call   0x408050
  41a7c3:	add    esp,0x4
  41a7c6:	test   al,al
  41a7c8:	jne    0x41a7f4
  41a7ca:	lea    eax,[esi+0x8]
  41a7cd:	test   eax,eax
  41a7cf:	je     0x41a7e4
  41a7d1:	mov    ecx,DWORD PTR [esp]
  41a7d4:	mov    edx,DWORD PTR [esp+0x4]
  41a7d8:	mov    DWORD PTR [eax],ecx
  41a7da:	mov    ecx,DWORD PTR [esp+0x8]
  41a7de:	mov    DWORD PTR [eax+0x4],edx
  41a7e1:	mov    DWORD PTR [eax+0x8],ecx
  41a7e4:	mov    edx,0x431ec8
  41a7e9:	or     edx,0x1
  41a7ec:	mov    DWORD PTR [esi],edx
  41a7ee:	add    esp,0xc
  41a7f1:	ret    0xc
  41a7f4:	mov    DWORD PTR [esi],0x0
  41a7fa:	add    esp,0xc
  41a7fd:	ret    0xc
  41a800:	push   ecx
  41a801:	test   esi,esi
  41a803:	je     0x41a814
  41a805:	push   esi
  41a806:	call   0x40c790
  41a80b:	push   esi
  41a80c:	call   0x42504a
  41a811:	add    esp,0x4
  41a814:	pop    ecx
  41a815:	ret    
  41a816:	int3   
  41a817:	int3   
  41a818:	int3   
  41a819:	int3   
  41a81a:	int3   
  41a81b:	int3   
  41a81c:	int3   
  41a81d:	int3   
  41a81e:	int3   
  41a81f:	int3   
  41a820:	push   0xffffffff
  41a822:	push   0x42c6d8
  41a827:	mov    eax,fs:0x0
  41a82d:	push   eax
  41a82e:	push   ecx
  41a82f:	push   esi
  41a830:	mov    eax,ds:0x43e020
  41a835:	xor    eax,esp
  41a837:	push   eax
  41a838:	lea    eax,[esp+0xc]
  41a83c:	mov    fs:0x0,eax
  41a842:	mov    DWORD PTR [esp+0x14],0x0
  41a84a:	mov    ecx,DWORD PTR [esp+0x1c]
  41a84e:	sub    esp,0x28
  41a851:	mov    eax,esp
  41a853:	mov    DWORD PTR [eax],ecx
  41a855:	mov    edx,DWORD PTR [esp+0x48]
  41a859:	mov    DWORD PTR [eax+0x4],edx
  41a85c:	mov    ecx,DWORD PTR [esp+0x4c]
  41a860:	lea    edx,[esp+0x50]
  41a864:	mov    DWORD PTR [esp+0x30],esp
  41a868:	mov    DWORD PTR [eax+0x8],ecx
  41a86b:	lea    ecx,[eax+0xc]
  41a86e:	push   edx
  41a86f:	lea    esi,[edi+0x8]
  41a872:	call   DWORD PTR ds:0x430118
  41a878:	call   0x41c820
  41a87d:	movzx  eax,al
  41a880:	neg    eax
  41a882:	sbb    eax,eax
  41a884:	and    eax,0x431ed0
  41a889:	lea    ecx,[esp+0x28]
  41a88d:	mov    DWORD PTR [edi],eax
  41a88f:	mov    DWORD PTR [esp+0x14],0xffffffff
  41a897:	call   DWORD PTR ds:0x430264
  41a89d:	mov    ecx,DWORD PTR [esp+0xc]
  41a8a1:	mov    DWORD PTR fs:0x0,ecx
  41a8a8:	pop    ecx
  41a8a9:	pop    esi
  41a8aa:	add    esp,0x10
  41a8ad:	ret    0x28
  41a8b0:	sub    esp,0x24
  41a8b3:	push   edi
  41a8b4:	lea    ecx,[esp+0xc]
  41a8b8:	call   DWORD PTR ds:0x430258
  41a8be:	lea    ecx,[esp+0x8]
  41a8c2:	call   DWORD PTR ds:0x43025c
  41a8c8:	lea    eax,[esp]
  41a8cb:	push   eax
  41a8cc:	mov    ecx,edi
  41a8ce:	call   DWORD PTR ds:0x43020c
  41a8d4:	mov    ecx,DWORD PTR [esp]
  41a8d7:	mov    edx,DWORD PTR [esp+0x4]
  41a8db:	lea    eax,[esp]
  41a8de:	mov    DWORD PTR [esi],ecx
  41a8e0:	push   eax
  41a8e1:	mov    ecx,edi
  41a8e3:	mov    DWORD PTR [esi+0x4],edx
  41a8e6:	call   DWORD PTR ds:0x4301fc
  41a8ec:	mov    ecx,DWORD PTR [esp]
  41a8ef:	mov    edx,DWORD PTR [esp+0x4]
  41a8f3:	mov    DWORD PTR [esi+0x8],ecx
  41a8f6:	mov    DWORD PTR [esi+0xc],edx
  41a8f9:	mov    eax,esi
  41a8fb:	add    esp,0x24
  41a8fe:	ret    
  41a8ff:	int3   
  41a900:	sub    esp,0x1c
  41a903:	mov    eax,DWORD PTR [esp+0x2c]
  41a907:	push   ebx
  41a908:	mov    ebx,DWORD PTR [esp+0x2c]
  41a90c:	push   ebp
  41a90d:	mov    ebp,DWORD PTR ds:0x430390
  41a913:	push   esi
  41a914:	push   edi
  41a915:	mov    DWORD PTR [esp+0x14],ebx
  41a919:	mov    DWORD PTR [esp+0x18],eax
  41a91d:	lea    ecx,[ecx+0x0]
  41a920:	cmp    ebx,0xfffffffc
  41a923:	je     0x41a931
  41a925:	test   ebx,ebx
  41a927:	je     0x41a92f
  41a929:	cmp    ebx,DWORD PTR [esp+0x40]
  41a92d:	je     0x41a931
  41a92f:	call   ebp
  41a931:	mov    edx,DWORD PTR [esp+0x44]
  41a935:	cmp    DWORD PTR [esp+0x18],edx
  41a939:	je     0x41aad7
  41a93f:	mov    edx,DWORD PTR [esp+0x30]
  41a943:	mov    eax,DWORD PTR [edx]
  41a945:	mov    ecx,DWORD PTR [edx+0x8]
  41a948:	mov    esi,DWORD PTR [edx+0xc]
  41a94b:	mov    edi,DWORD PTR [edx+0x4]
  41a94e:	cmp    eax,0xfffffffc
  41a951:	je     0x41a95d
  41a953:	test   eax,eax
  41a955:	je     0x41a95b
  41a957:	cmp    eax,ecx
  41a959:	je     0x41a95d
  41a95b:	call   ebp
  41a95d:	cmp    edi,esi
  41a95f:	je     0x41aad3
  41a965:	mov    eax,DWORD PTR [esp+0x30]
  41a969:	mov    ecx,DWORD PTR [esp+0x18]
  41a96d:	mov    edx,DWORD PTR [eax+0x4]
  41a970:	mov    esi,DWORD PTR [eax]
  41a972:	mov    DWORD PTR [esp+0x28],ecx
  41a976:	mov    DWORD PTR [esp+0x20],edx
  41a97a:	lea    ebx,[ebx+0x0]
  41a980:	cmp    ebx,0xfffffffc
  41a983:	je     0x41a991
  41a985:	test   ebx,ebx
  41a987:	je     0x41a98f
  41a989:	cmp    ebx,DWORD PTR [esp+0x40]
  41a98d:	je     0x41a991
  41a98f:	call   ebp
  41a991:	mov    eax,DWORD PTR [esp+0x44]
  41a995:	cmp    DWORD PTR [esp+0x28],eax
  41a999:	je     0x41aa7d
  41a99f:	mov    ecx,DWORD PTR [esp+0x30]
  41a9a3:	mov    eax,DWORD PTR [ecx+0x8]
  41a9a6:	mov    edi,DWORD PTR [ecx+0xc]
  41a9a9:	cmp    esi,0xfffffffc
  41a9ac:	je     0x41a9b8
  41a9ae:	test   esi,esi
  41a9b0:	je     0x41a9b6
  41a9b2:	cmp    esi,eax
  41a9b4:	je     0x41a9b8
  41a9b6:	call   ebp
  41a9b8:	cmp    DWORD PTR [esp+0x20],edi
  41a9bc:	je     0x41aa7d
  41a9c2:	cmp    esi,0xfffffffc
  41a9c5:	je     0x41a9ee
  41a9c7:	test   esi,esi
  41a9c9:	jne    0x41a9cd
  41a9cb:	call   ebp
  41a9cd:	mov    edi,0x10
  41a9d2:	cmp    DWORD PTR [esi+0x18],edi
  41a9d5:	jb     0x41a9dc
  41a9d7:	mov    eax,DWORD PTR [esi+0x4]
  41a9da:	jmp    0x41a9df
  41a9dc:	lea    eax,[esi+0x4]
  41a9df:	mov    ecx,DWORD PTR [esi+0x14]
  41a9e2:	add    ecx,eax
  41a9e4:	cmp    DWORD PTR [esp+0x20],ecx
  41a9e8:	jb     0x41a9f3
  41a9ea:	call   ebp
  41a9ec:	jmp    0x41a9f3
  41a9ee:	mov    edi,0x10
  41a9f3:	cmp    ebx,0xfffffffc
  41a9f6:	je     0x41aa18
  41a9f8:	test   ebx,ebx
  41a9fa:	jne    0x41a9fe
  41a9fc:	call   ebp
  41a9fe:	cmp    DWORD PTR [ebx+0x18],edi
  41aa01:	jb     0x41aa08
  41aa03:	mov    eax,DWORD PTR [ebx+0x4]
  41aa06:	jmp    0x41aa0b
  41aa08:	lea    eax,[ebx+0x4]
  41aa0b:	mov    edx,DWORD PTR [ebx+0x14]
  41aa0e:	add    edx,eax
  41aa10:	cmp    DWORD PTR [esp+0x28],edx
  41aa14:	jb     0x41aa18
  41aa16:	call   ebp
  41aa18:	mov    eax,DWORD PTR [esp+0x28]
  41aa1c:	mov    cl,BYTE PTR [eax]
  41aa1e:	mov    edx,DWORD PTR [esp+0x20]
  41aa22:	cmp    cl,BYTE PTR [edx]
  41aa24:	jne    0x41aa7d
  41aa26:	cmp    ebx,0xfffffffc
  41aa29:	je     0x41aa4b
  41aa2b:	test   ebx,ebx
  41aa2d:	jne    0x41aa31
  41aa2f:	call   ebp
  41aa31:	cmp    DWORD PTR [ebx+0x18],edi
  41aa34:	jb     0x41aa3b
  41aa36:	mov    eax,DWORD PTR [ebx+0x4]
  41aa39:	jmp    0x41aa3e
  41aa3b:	lea    eax,[ebx+0x4]
  41aa3e:	mov    ecx,DWORD PTR [ebx+0x14]
  41aa41:	add    ecx,eax
  41aa43:	cmp    DWORD PTR [esp+0x28],ecx
  41aa47:	jb     0x41aa4b
  41aa49:	call   ebp
  41aa4b:	inc    DWORD PTR [esp+0x28]
  41aa4f:	cmp    esi,0xfffffffc
  41aa52:	je     0x41aa74
  41aa54:	test   esi,esi
  41aa56:	jne    0x41aa5a
  41aa58:	call   ebp
  41aa5a:	cmp    DWORD PTR [esi+0x18],edi
  41aa5d:	jb     0x41aa64
  41aa5f:	mov    eax,DWORD PTR [esi+0x4]
  41aa62:	jmp    0x41aa67
  41aa64:	lea    eax,[esi+0x4]
  41aa67:	mov    edx,DWORD PTR [esi+0x14]
  41aa6a:	add    edx,eax
  41aa6c:	cmp    DWORD PTR [esp+0x20],edx
  41aa70:	jb     0x41aa74
  41aa72:	call   ebp
  41aa74:	inc    DWORD PTR [esp+0x20]
  41aa78:	jmp    0x41a980
  41aa7d:	mov    ecx,DWORD PTR [esp+0x30]
  41aa81:	mov    eax,DWORD PTR [ecx+0x8]
  41aa84:	mov    edi,DWORD PTR [ecx+0xc]
  41aa87:	cmp    esi,0xfffffffc
  41aa8a:	je     0x41aa96
  41aa8c:	test   esi,esi
  41aa8e:	je     0x41aa94
  41aa90:	cmp    esi,eax
  41aa92:	je     0x41aa96
  41aa94:	call   ebp
  41aa96:	cmp    DWORD PTR [esp+0x20],edi
  41aa9a:	je     0x41aaf4
  41aa9c:	mov    esi,DWORD PTR [esp+0x14]
  41aaa0:	cmp    esi,0xfffffffc
  41aaa3:	je     0x41aac6
  41aaa5:	test   esi,esi
  41aaa7:	jne    0x41aaab
  41aaa9:	call   ebp
  41aaab:	cmp    DWORD PTR [esi+0x18],0x10
  41aaaf:	jb     0x41aab6
  41aab1:	mov    eax,DWORD PTR [esi+0x4]
  41aab4:	jmp    0x41aab9
  41aab6:	lea    eax,[esi+0x4]
  41aab9:	mov    ecx,DWORD PTR [esi+0x14]
  41aabc:	add    ecx,eax
  41aabe:	cmp    DWORD PTR [esp+0x18],ecx
  41aac2:	jb     0x41aac6
  41aac4:	call   ebp
  41aac6:	inc    DWORD PTR [esp+0x18]
  41aaca:	mov    ebx,DWORD PTR [esp+0x14]
  41aace:	jmp    0x41a920
  41aad3:	mov    edx,DWORD PTR [esp+0x44]
  41aad7:	mov    eax,DWORD PTR [esp+0x34]
  41aadb:	mov    ecx,DWORD PTR [esp+0x40]
  41aadf:	mov    DWORD PTR [eax+0x8],ecx
  41aae2:	mov    DWORD PTR [eax+0x4],edx
  41aae5:	mov    DWORD PTR [eax],ecx
  41aae7:	mov    DWORD PTR [eax+0xc],edx
  41aaea:	pop    edi
  41aaeb:	pop    esi
  41aaec:	pop    ebp
  41aaed:	pop    ebx
  41aaee:	add    esp,0x1c
  41aaf1:	ret    0x18
  41aaf4:	mov    eax,DWORD PTR [esp+0x34]
  41aaf8:	mov    edx,DWORD PTR [esp+0x14]
  41aafc:	mov    ecx,DWORD PTR [esp+0x18]
  41ab00:	pop    edi
  41ab01:	pop    esi
  41ab02:	mov    DWORD PTR [eax],edx
  41ab04:	mov    edx,DWORD PTR [esp+0x20]
  41ab08:	pop    ebp
  41ab09:	mov    DWORD PTR [eax+0x8],ebx
  41ab0c:	mov    DWORD PTR [eax+0x4],ecx
  41ab0f:	mov    DWORD PTR [eax+0xc],edx
  41ab12:	pop    ebx
  41ab13:	add    esp,0x1c
  41ab16:	ret    0x18
  41ab19:	int3   
  41ab1a:	int3   
  41ab1b:	int3   
  41ab1c:	int3   
  41ab1d:	int3   
  41ab1e:	int3   
  41ab1f:	int3   
  41ab20:	push   esi
  41ab21:	mov    esi,ecx
  41ab23:	push   edi
  41ab24:	mov    edi,eax
  41ab26:	cmp    esi,ebx
  41ab28:	je     0x41ab6f
  41ab2a:	lea    ebx,[ebx+0x0]
  41ab30:	lea    eax,[esi+0x4]
  41ab33:	push   eax
  41ab34:	lea    ecx,[edi+0x4]
  41ab37:	call   DWORD PTR ds:0x43017c
  41ab3d:	lea    ecx,[esi+0x20]
  41ab40:	push   ecx
  41ab41:	lea    ecx,[edi+0x20]
  41ab44:	call   DWORD PTR ds:0x43017c
  41ab4a:	lea    edx,[esi+0x3c]
  41ab4d:	push   edx
  41ab4e:	lea    ecx,[edi+0x3c]
  41ab51:	call   DWORD PTR ds:0x43017c
  41ab57:	mov    eax,DWORD PTR [esi+0x58]
  41ab5a:	mov    DWORD PTR [edi+0x58],eax
  41ab5d:	mov    ecx,DWORD PTR [esi+0x5c]
  41ab60:	mov    DWORD PTR [edi+0x5c],ecx
  41ab63:	add    esi,0x60
  41ab66:	add    edi,0x60
  41ab69:	cmp    esi,ebx
  41ab6b:	jne    0x41ab30
  41ab6d:	mov    eax,edi
  41ab6f:	pop    edi
  41ab70:	pop    esi
  41ab71:	ret    
  41ab72:	int3   
  41ab73:	int3   
  41ab74:	int3   
  41ab75:	int3   
  41ab76:	int3   
  41ab77:	int3   
  41ab78:	int3   
  41ab79:	int3   
  41ab7a:	int3   
  41ab7b:	int3   
  41ab7c:	int3   
  41ab7d:	int3   
  41ab7e:	int3   
  41ab7f:	int3   
  41ab80:	push   ebp
  41ab81:	mov    ebp,esp
  41ab83:	push   0xffffffff
  41ab85:	push   0x42bb21
  41ab8a:	mov    eax,fs:0x0
  41ab90:	push   eax
  41ab91:	sub    esp,0x10
  41ab94:	push   ebx
  41ab95:	push   esi
  41ab96:	push   edi
  41ab97:	mov    eax,ds:0x43e020
  41ab9c:	xor    eax,ebp
  41ab9e:	push   eax
  41ab9f:	lea    eax,[ebp-0xc]
  41aba2:	mov    fs:0x0,eax
  41aba8:	mov    DWORD PTR [ebp-0x10],esp
  41abab:	mov    esi,DWORD PTR [ebp+0xc]
  41abae:	mov    edi,ecx
  41abb0:	xor    ebx,ebx
  41abb2:	mov    DWORD PTR [ebp-0x14],esi
  41abb5:	mov    DWORD PTR [ebp-0x4],ebx
  41abb8:	cmp    edi,DWORD PTR [ebp+0x8]
  41abbb:	je     0x41ac06
  41abbd:	mov    DWORD PTR [ebp-0x18],esi
  41abc0:	mov    DWORD PTR [ebp-0x1c],esi
  41abc3:	mov    BYTE PTR [ebp-0x4],0x1
  41abc7:	cmp    esi,ebx
  41abc9:	je     0x41abd1
  41abcb:	push   esi
  41abcc:	call   0x415ab0
  41abd1:	add    esi,0x60
  41abd4:	mov    BYTE PTR [ebp-0x4],bl
  41abd7:	mov    DWORD PTR [ebp+0xc],esi
  41abda:	add    edi,0x60
  41abdd:	jmp    0x41abb8
  41abdf:	mov    esi,DWORD PTR [ebp-0x14]
  41abe2:	mov    edi,DWORD PTR [ebp+0xc]
  41abe5:	cmp    esi,edi
  41abe7:	je     0x41abfd
  41abe9:	lea    esp,[esp+0x0]
  41abf0:	push   esi
  41abf1:	call   0x415b30
  41abf6:	add    esi,0x60
  41abf9:	cmp    esi,edi
  41abfb:	jne    0x41abf0
  41abfd:	xor    ebx,ebx
  41abff:	push   ebx
  41ac00:	push   ebx
  41ac01:	call   0x429e76
  41ac06:	mov    eax,esi
  41ac08:	mov    ecx,DWORD PTR [ebp-0xc]
  41ac0b:	mov    DWORD PTR fs:0x0,ecx
  41ac12:	pop    ecx
  41ac13:	pop    edi
  41ac14:	pop    esi
  41ac15:	pop    ebx
  41ac16:	mov    esp,ebp
  41ac18:	pop    ebp
  41ac19:	ret    
  41ac1a:	int3   
  41ac1b:	int3   
  41ac1c:	int3   
  41ac1d:	int3   
  41ac1e:	int3   
  41ac1f:	int3   
  41ac20:	sub    esp,0xc
  41ac23:	push   ebx
  41ac24:	push   ebp
  41ac25:	mov    ebp,DWORD PTR [esp+0x18]
  41ac29:	push   esi
  41ac2a:	mov    ebx,ecx
  41ac2c:	push   edi
  41ac2d:	mov    edi,eax
  41ac2f:	cmp    ebx,ebp
  41ac31:	je     0x41ac92
  41ac33:	mov    eax,DWORD PTR [ebx+0x4]
  41ac36:	mov    ecx,DWORD PTR [ebx]
  41ac38:	test   eax,eax
  41ac3a:	je     0x41ac48
  41ac3c:	lea    edx,[eax+0x4]
  41ac3f:	mov    esi,0x1
  41ac44:	lock xadd DWORD PTR [edx],esi
  41ac48:	lea    edx,[esp+0x10]
  41ac4c:	cmp    edx,edi
  41ac4e:	je     0x41ac52
  41ac50:	mov    DWORD PTR [edi],ecx
  41ac52:	mov    esi,DWORD PTR [edi+0x4]
  41ac55:	mov    DWORD PTR [edi+0x4],eax
  41ac58:	test   esi,esi
  41ac5a:	je     0x41ac86
  41ac5c:	lea    eax,[esi+0x4]
  41ac5f:	or     ecx,0xffffffff
  41ac62:	lock xadd DWORD PTR [eax],ecx
  41ac66:	jne    0x41ac86
  41ac68:	mov    edx,DWORD PTR [esi]
  41ac6a:	mov    eax,DWORD PTR [edx+0x4]
  41ac6d:	mov    ecx,esi
  41ac6f:	call   eax
  41ac71:	lea    ecx,[esi+0x8]
  41ac74:	or     edx,0xffffffff
  41ac77:	lock xadd DWORD PTR [ecx],edx
  41ac7b:	jne    0x41ac86
  41ac7d:	mov    eax,DWORD PTR [esi]
  41ac7f:	mov    edx,DWORD PTR [eax+0x8]
  41ac82:	mov    ecx,esi
  41ac84:	call   edx
  41ac86:	add    ebx,0x8
  41ac89:	add    edi,0x8
  41ac8c:	cmp    ebx,ebp
  41ac8e:	jne    0x41ac33
  41ac90:	mov    eax,edi
  41ac92:	pop    edi
  41ac93:	pop    esi
  41ac94:	pop    ebp
  41ac95:	pop    ebx
  41ac96:	add    esp,0xc
  41ac99:	ret    
  41ac9a:	int3   
  41ac9b:	int3   
  41ac9c:	int3   
  41ac9d:	int3   
  41ac9e:	int3   
  41ac9f:	int3   
  41aca0:	push   ebp
  41aca1:	mov    ebp,esp
  41aca3:	push   0xffffffff
  41aca5:	push   0x42baea
  41acaa:	mov    eax,fs:0x0
  41acb0:	push   eax
  41acb1:	sub    esp,0x34
  41acb4:	mov    eax,ds:0x43e020
  41acb9:	xor    eax,ebp
  41acbb:	mov    DWORD PTR [ebp-0x14],eax
  41acbe:	push   ebx
  41acbf:	push   esi
  41acc0:	push   edi
  41acc1:	push   eax
  41acc2:	lea    eax,[ebp-0xc]
  41acc5:	mov    fs:0x0,eax
  41accb:	mov    DWORD PTR [ebp-0x10],esp
  41acce:	mov    esi,edx
  41acd0:	mov    edi,ecx
  41acd2:	lea    ecx,[ebp-0x30]
  41acd5:	mov    DWORD PTR [ebp-0x34],esi
  41acd8:	mov    DWORD PTR [ebp-0x38],esi
  41acdb:	call   DWORD PTR ds:0x430260
  41ace1:	mov    DWORD PTR [ebp-0x4],0x0
  41ace8:	mov    bl,0x1
  41acea:	lea    ebx,[ebx+0x0]
  41acf0:	cmp    edi,DWORD PTR [ebp+0x8]
  41acf3:	je     0x41ad48
  41acf5:	mov    DWORD PTR [ebp-0x3c],esi
  41acf8:	mov    DWORD PTR [ebp-0x40],esi
  41acfb:	mov    BYTE PTR [ebp-0x4],0x2
  41acff:	test   esi,esi
  41ad01:	je     0x41ad0f
  41ad03:	lea    eax,[ebp-0x30]
  41ad06:	push   eax
  41ad07:	mov    ecx,esi
  41ad09:	call   DWORD PTR ds:0x430258
  41ad0f:	push   edi
  41ad10:	mov    ecx,esi
  41ad12:	mov    BYTE PTR [ebp-0x4],bl
  41ad15:	call   DWORD PTR ds:0x430208
  41ad1b:	add    esi,0x1c
  41ad1e:	mov    DWORD PTR [ebp-0x34],esi
  41ad21:	add    edi,0x1c
  41ad24:	jmp    0x41acf0
  41ad26:	mov    esi,DWORD PTR [ebp-0x38]
  41ad29:	mov    edi,DWORD PTR [ebp-0x34]
  41ad2c:	cmp    esi,edi
  41ad2e:	je     0x41ad3f
  41ad30:	mov    ecx,esi
  41ad32:	call   DWORD PTR ds:0x43025c
  41ad38:	add    esi,0x1c
  41ad3b:	cmp    esi,edi
  41ad3d:	jne    0x41ad30
  41ad3f:	push   0x0
  41ad41:	push   0x0
  41ad43:	call   0x429e76
  41ad48:	lea    ecx,[ebp-0x30]
  41ad4b:	mov    DWORD PTR [ebp-0x4],0xffffffff
  41ad52:	call   DWORD PTR ds:0x43025c
  41ad58:	mov    eax,esi
  41ad5a:	mov    ecx,DWORD PTR [ebp-0xc]
  41ad5d:	mov    DWORD PTR fs:0x0,ecx
  41ad64:	pop    ecx
  41ad65:	pop    edi
  41ad66:	pop    esi
  41ad67:	pop    ebx
  41ad68:	mov    ecx,DWORD PTR [ebp-0x14]
  41ad6b:	xor    ecx,ebp
  41ad6d:	call   0x42503a
  41ad72:	mov    esp,ebp
  41ad74:	pop    ebp
  41ad75:	ret    
  41ad76:	int3   
  41ad77:	int3   
  41ad78:	int3   
  41ad79:	int3   
  41ad7a:	int3   
  41ad7b:	int3   
  41ad7c:	int3   
  41ad7d:	int3   
  41ad7e:	int3   
  41ad7f:	int3   
  41ad80:	push   ebp
  41ad81:	mov    ebp,esp
  41ad83:	push   0xffffffff
  41ad85:	push   0x42baaa
  41ad8a:	mov    eax,fs:0x0
  41ad90:	push   eax
  41ad91:	sub    esp,0x34
  41ad94:	mov    eax,ds:0x43e020
  41ad99:	xor    eax,ebp
  41ad9b:	mov    DWORD PTR [ebp-0x14],eax
  41ad9e:	push   ebx
  41ad9f:	push   esi
  41ada0:	push   edi
  41ada1:	push   eax
  41ada2:	lea    eax,[ebp-0xc]
  41ada5:	mov    fs:0x0,eax
  41adab:	mov    DWORD PTR [ebp-0x10],esp
  41adae:	mov    esi,edx
  41adb0:	mov    edi,ecx
  41adb2:	lea    ecx,[ebp-0x30]
  41adb5:	mov    DWORD PTR [ebp-0x34],esi
  41adb8:	mov    DWORD PTR [ebp-0x38],esi
  41adbb:	call   DWORD PTR ds:0x430254
  41adc1:	mov    DWORD PTR [ebp-0x4],0x0
  41adc8:	mov    bl,0x1
  41adca:	lea    ebx,[ebx+0x0]
  41add0:	cmp    edi,DWORD PTR [ebp+0x8]
  41add3:	je     0x41ae28
  41add5:	mov    DWORD PTR [ebp-0x3c],esi
  41add8:	mov    DWORD PTR [ebp-0x40],esi
  41addb:	mov    BYTE PTR [ebp-0x4],0x2
  41addf:	test   esi,esi
  41ade1:	je     0x41adef
  41ade3:	lea    eax,[ebp-0x30]
  41ade6:	push   eax
  41ade7:	mov    ecx,esi
  41ade9:	call   DWORD PTR ds:0x430118
  41adef:	push   edi
  41adf0:	mov    ecx,esi
  41adf2:	mov    BYTE PTR [ebp-0x4],bl
  41adf5:	call   DWORD PTR ds:0x43022c
  41adfb:	add    esi,0x1c
  41adfe:	mov    DWORD PTR [ebp-0x34],esi
  41ae01:	add    edi,0x1c
  41ae04:	jmp    0x41add0
  41ae06:	mov    esi,DWORD PTR [ebp-0x38]
  41ae09:	mov    edi,DWORD PTR [ebp-0x34]
  41ae0c:	cmp    esi,edi
  41ae0e:	je     0x41ae1f
  41ae10:	mov    ecx,esi
  41ae12:	call   DWORD PTR ds:0x430264
  41ae18:	add    esi,0x1c
  41ae1b:	cmp    esi,edi
  41ae1d:	jne    0x41ae10
  41ae1f:	push   0x0
  41ae21:	push   0x0
  41ae23:	call   0x429e76
  41ae28:	lea    ecx,[ebp-0x30]
  41ae2b:	mov    DWORD PTR [ebp-0x4],0xffffffff
  41ae32:	call   DWORD PTR ds:0x430264
  41ae38:	mov    eax,esi
  41ae3a:	mov    ecx,DWORD PTR [ebp-0xc]
  41ae3d:	mov    DWORD PTR fs:0x0,ecx
  41ae44:	pop    ecx
  41ae45:	pop    edi
  41ae46:	pop    esi
  41ae47:	pop    ebx
  41ae48:	mov    ecx,DWORD PTR [ebp-0x14]
  41ae4b:	xor    ecx,ebp
  41ae4d:	call   0x42503a
  41ae52:	mov    esp,ebp
  41ae54:	pop    ebp
  41ae55:	ret    
  41ae56:	int3   
  41ae57:	int3   
  41ae58:	int3   
  41ae59:	int3   
  41ae5a:	int3   
  41ae5b:	int3   
  41ae5c:	int3   
  41ae5d:	int3   
  41ae5e:	int3   
  41ae5f:	int3   
  41ae60:	push   0xffffffff
  41ae62:	push   0x42b332
  41ae67:	mov    eax,fs:0x0
  41ae6d:	push   eax
  41ae6e:	sub    esp,0x34
  41ae71:	mov    eax,ds:0x43e020
  41ae76:	xor    eax,esp
  41ae78:	mov    DWORD PTR [esp+0x30],eax
  41ae7c:	push   ebx
  41ae7d:	push   ebp
  41ae7e:	push   esi
  41ae7f:	push   edi
  41ae80:	mov    eax,ds:0x43e020
  41ae85:	xor    eax,esp
  41ae87:	push   eax
  41ae88:	lea    eax,[esp+0x48]
  41ae8c:	mov    fs:0x0,eax
  41ae92:	mov    ebp,DWORD PTR [esp+0x5c]
  41ae96:	mov    ebx,ecx
  41ae98:	sub    ebp,0x2
  41ae9b:	mov    DWORD PTR [ebx],0x0
  41aea1:	movzx  eax,WORD PTR [ebp+0x0]
  41aea5:	mov    DWORD PTR [esp+0x1c],ebx
  41aea9:	cmp    ax,0x30
  41aead:	jb     0x41b063
  41aeb3:	cmp    ax,0x3a
  41aeb7:	jae    0x41b063
  41aebd:	cmp    DWORD PTR [esp+0x58],ebp
  41aec1:	ja     0x41b063
  41aec7:	movzx  eax,ax
  41aeca:	sub    eax,0x30
  41aecd:	lea    ecx,[esp+0x18]
  41aed1:	mov    DWORD PTR [ebx],eax
  41aed3:	sub    ebp,0x2
  41aed6:	mov    edi,0x1
  41aedb:	call   DWORD PTR ds:0x43018c
  41aee1:	mov    DWORD PTR [esp+0x50],0x0
  41aee9:	call   DWORD PTR ds:0x4301ac
  41aeef:	push   eax
  41aef0:	lea    ecx,[esp+0x1c]
  41aef4:	call   DWORD PTR ds:0x4301a8
  41aefa:	test   al,al
  41aefc:	je     0x41b097
  41af02:	lea    ecx,[esp+0x18]
  41af06:	call   0x408060
  41af0b:	lea    ecx,[esp+0x28]
  41af0f:	mov    esi,eax
  41af11:	push   ecx
  41af12:	mov    ecx,esi
  41af14:	call   DWORD PTR ds:0x4301b8
  41af1a:	mov    BYTE PTR [esp+0x50],0x1
  41af1f:	mov    eax,DWORD PTR [esp+0x3c]
  41af23:	mov    DWORD PTR [esp+0x20],eax
  41af27:	test   eax,eax
  41af29:	je     0x41b088
  41af2f:	cmp    DWORD PTR [esp+0x40],0x10
  41af34:	mov    eax,DWORD PTR [esp+0x2c]
  41af38:	jae    0x41af3e
  41af3a:	lea    eax,[esp+0x2c]
  41af3e:	cmp    BYTE PTR [eax],0x0
  41af41:	jle    0x41b088
  41af47:	mov    ecx,esi
  41af49:	mov    BYTE PTR [esp+0x17],0x0
  41af4e:	call   DWORD PTR ds:0x4301bc
  41af54:	cmp    DWORD PTR [esp+0x40],0x10
  41af59:	movzx  edx,ax
  41af5c:	mov    eax,DWORD PTR [esp+0x2c]
  41af60:	mov    DWORD PTR [esp+0x24],edx
  41af64:	jae    0x41af6a
  41af66:	lea    eax,[esp+0x2c]
  41af6a:	mov    bl,BYTE PTR [eax]
  41af6c:	dec    bl
  41af6e:	cmp    ebp,DWORD PTR [esp+0x58]
  41af72:	jb     0x41b02d
  41af78:	test   bl,bl
  41af7a:	je     0x41afd4
  41af7c:	movzx  eax,WORD PTR [ebp+0x0]
  41af80:	movzx  ecx,ax
  41af83:	sub    ecx,0x30
  41af86:	imul   ecx,edi
  41af89:	lea    esi,[ecx+ecx*4]
  41af8c:	add    esi,esi
  41af8e:	cmp    ax,0x30
  41af92:	jb     0x41b04a
  41af98:	cmp    ax,0x3a
  41af9c:	jae    0x41b04a
  41afa2:	mov    eax,0xcccccccd
  41afa7:	mul    esi
  41afa9:	shr    edx,0x3
  41afac:	cmp    edx,ecx
  41afae:	jne    0x41b04a
  41afb4:	mov    ecx,DWORD PTR [esp+0x1c]
  41afb8:	mov    eax,DWORD PTR [ecx]
  41afba:	or     edx,0xffffffff
  41afbd:	sub    edx,esi
  41afbf:	cmp    edx,eax
  41afc1:	jb     0x41b04a
  41afc7:	add    eax,esi
  41afc9:	lea    edi,[edi+edi*4]
  41afcc:	add    edi,edi
  41afce:	mov    DWORD PTR [ecx],eax
  41afd0:	dec    bl
  41afd2:	jmp    0x41b020
  41afd4:	mov    ax,WORD PTR [esp+0x24]
  41afd9:	cmp    WORD PTR [ebp+0x0],ax
  41afdd:	jne    0x41b084
  41afe3:	cmp    DWORD PTR [esp+0x58],ebp
  41afe7:	je     0x41b04a
  41afe9:	mov    al,BYTE PTR [esp+0x17]
  41afed:	mov    ecx,DWORD PTR [esp+0x20]
  41aff1:	movzx  edx,al
  41aff4:	dec    ecx
  41aff5:	cmp    edx,ecx
  41aff7:	jae    0x41afff
  41aff9:	inc    al
  41affb:	mov    BYTE PTR [esp+0x17],al
  41afff:	movzx  esi,al
  41b002:	cmp    esi,DWORD PTR [esp+0x3c]
  41b006:	jbe    0x41b00e
  41b008:	call   DWORD PTR ds:0x430390
  41b00e:	cmp    DWORD PTR [esp+0x40],0x10
  41b013:	mov    eax,DWORD PTR [esp+0x2c]
  41b017:	jae    0x41b01d
  41b019:	lea    eax,[esp+0x2c]
  41b01d:	mov    bl,BYTE PTR [eax+esi*1]
  41b020:	sub    ebp,0x2
  41b023:	cmp    ebp,DWORD PTR [esp+0x58]
  41b027:	jae    0x41af78
  41b02d:	lea    ecx,[esp+0x28]
  41b031:	mov    BYTE PTR [esp+0x50],0x0
  41b036:	call   DWORD PTR ds:0x43025c
  41b03c:	lea    ecx,[esp+0x18]
  41b040:	call   DWORD PTR ds:0x430180
  41b046:	mov    al,0x1
  41b048:	jmp    0x41b065
  41b04a:	lea    ecx,[esp+0x28]
  41b04e:	mov    BYTE PTR [esp+0x50],0x0
  41b053:	call   DWORD PTR ds:0x43025c
  41b059:	lea    ecx,[esp+0x18]
  41b05d:	call   DWORD PTR ds:0x430180
  41b063:	xor    al,al
  41b065:	mov    ecx,DWORD PTR [esp+0x48]
  41b069:	mov    DWORD PTR fs:0x0,ecx
  41b070:	pop    ecx
  41b071:	pop    edi
  41b072:	pop    esi
  41b073:	pop    ebp
  41b074:	pop    ebx
  41b075:	mov    ecx,DWORD PTR [esp+0x30]
  41b079:	xor    ecx,esp
  41b07b:	call   0x42503a
  41b080:	add    esp,0x40
  41b083:	ret    
  41b084:	mov    ebx,DWORD PTR [esp+0x1c]
  41b088:	lea    ecx,[esp+0x28]
  41b08c:	mov    BYTE PTR [esp+0x50],0x0
  41b091:	call   DWORD PTR ds:0x43025c
  41b097:	cmp    DWORD PTR [esp+0x58],ebp
  41b09b:	ja     0x41b03c
  41b09d:	movzx  eax,WORD PTR [ebp+0x0]
  41b0a1:	movzx  ecx,ax
  41b0a4:	sub    ecx,0x30
  41b0a7:	imul   ecx,edi
  41b0aa:	lea    esi,[ecx+ecx*4]
  41b0ad:	add    esi,esi
  41b0af:	cmp    ax,0x30
  41b0b3:	jb     0x41b059
  41b0b5:	cmp    ax,0x3a
  41b0b9:	jae    0x41b059
  41b0bb:	mov    eax,0xcccccccd
  41b0c0:	mul    esi
  41b0c2:	shr    edx,0x3
  41b0c5:	cmp    edx,ecx
  41b0c7:	jne    0x41b059
  41b0c9:	mov    eax,DWORD PTR [ebx]
  41b0cb:	or     ecx,0xffffffff
  41b0ce:	sub    ecx,esi
  41b0d0:	cmp    ecx,eax
  41b0d2:	jb     0x41b059
  41b0d4:	lea    edi,[edi+edi*4]
  41b0d7:	add    eax,esi
  41b0d9:	sub    ebp,0x2
  41b0dc:	add    edi,edi
  41b0de:	mov    DWORD PTR [ebx],eax
  41b0e0:	cmp    DWORD PTR [esp+0x58],ebp
  41b0e4:	jbe    0x41b09d
  41b0e6:	lea    ecx,[esp+0x18]
  41b0ea:	call   DWORD PTR ds:0x430180
  41b0f0:	mov    al,0x1
  41b0f2:	jmp    0x41b065
  41b0f7:	int3   
  41b0f8:	int3   
  41b0f9:	int3   
  41b0fa:	int3   
  41b0fb:	int3   
  41b0fc:	int3   
  41b0fd:	int3   
  41b0fe:	int3   
  41b0ff:	int3   
  41b100:	push   ebx
  41b101:	push   ebp
  41b102:	mov    ebp,DWORD PTR [esp+0xc]
  41b106:	mov    eax,DWORD PTR [ebp+0x8]
  41b109:	push   esi
  41b10a:	push   edi
  41b10b:	sub    esp,0xc
  41b10e:	mov    esi,esp
  41b110:	mov    DWORD PTR [esp+0x20],esp
  41b114:	mov    DWORD PTR [esi+0x8],eax
  41b117:	mov    DWORD PTR [esi],0x0
  41b11d:	cmp    eax,0x8
  41b120:	ja     0x41b128
  41b122:	mov    eax,esi
  41b124:	mov    ecx,ebp
  41b126:	jmp    0x41b136
  41b128:	push   eax
  41b129:	call   0x425023
  41b12e:	mov    DWORD PTR [esi],eax
  41b130:	mov    ecx,DWORD PTR [ebp+0x0]
  41b133:	add    esp,0x4
  41b136:	mov    edx,DWORD PTR [esi+0x8]
  41b139:	push   edx
  41b13a:	push   ecx
  41b13b:	push   eax
  41b13c:	call   0x42a018
  41b141:	mov    eax,DWORD PTR [esp+0x34]
  41b145:	mov    esi,DWORD PTR [esp+0x38]
  41b149:	add    esp,0xc
  41b14c:	push   eax
  41b14d:	mov    edi,esi
  41b14f:	call   0x41cb50
  41b154:	mov    edi,eax
  41b156:	add    esp,0x10
  41b159:	cmp    edi,esi
  41b15b:	jne    0x41b16d
  41b15d:	mov    eax,DWORD PTR [esp+0x18]
  41b161:	mov    DWORD PTR [eax],esi
  41b163:	mov    DWORD PTR [eax+0x4],esi
  41b166:	pop    edi
  41b167:	pop    esi
  41b168:	pop    ebp
  41b169:	pop    ebx
  41b16a:	ret    0x10
  41b16d:	cmp    DWORD PTR [ebp+0xc],0x0
  41b171:	mov    esi,edi
  41b173:	jne    0x41b199
  41b175:	mov    bl,BYTE PTR [esi]
  41b177:	mov    eax,ebp
  41b179:	call   0x41cc00
  41b17e:	test   al,al
  41b180:	je     0x41b19c
  41b182:	inc    esi
  41b183:	cmp    esi,DWORD PTR [esp+0x20]
  41b187:	jne    0x41b175
  41b189:	mov    eax,DWORD PTR [esp+0x18]
  41b18d:	mov    DWORD PTR [eax],edi
  41b18f:	mov    DWORD PTR [eax+0x4],esi
  41b192:	pop    edi
  41b193:	pop    esi
  41b194:	pop    ebp
  41b195:	pop    ebx
  41b196:	ret    0x10
  41b199:	lea    esi,[edi+0x1]
  41b19c:	mov    eax,DWORD PTR [esp+0x18]
  41b1a0:	mov    DWORD PTR [eax],edi
  41b1a2:	pop    edi
  41b1a3:	mov    DWORD PTR [eax+0x4],esi
  41b1a6:	pop    esi
  41b1a7:	pop    ebp
  41b1a8:	pop    ebx
  41b1a9:	ret    0x10
  41b1ac:	int3   
  41b1ad:	int3   
  41b1ae:	int3   
  41b1af:	int3   
  41b1b0:	mov    eax,DWORD PTR [edi+0x2c]
  41b1b3:	sub    esp,0x10
  41b1b6:	cmp    DWORD PTR [edi],0x0
  41b1b9:	push   esi
  41b1ba:	je     0x41b1d6
  41b1bc:	push   eax
  41b1bd:	mov    eax,DWORD PTR [edi+0x28]
  41b1c0:	push   eax
  41b1c1:	lea    esi,[esp+0x10]
  41b1c5:	mov    ecx,edi
  41b1c7:	call   0x41b490
  41b1cc:	mov    eax,DWORD PTR [esp+0xc]
  41b1d0:	mov    edx,DWORD PTR [esp+0x8]
  41b1d4:	jmp    0x41b1d8
  41b1d6:	mov    edx,eax
  41b1d8:	mov    ecx,DWORD PTR [edi+0x2c]
  41b1db:	cmp    edx,ecx
  41b1dd:	jne    0x41b1ec
  41b1df:	cmp    eax,ecx
  41b1e1:	jne    0x41b1ec
  41b1e3:	cmp    DWORD PTR [edi+0x24],ecx
  41b1e6:	jne    0x41b1ec
  41b1e8:	mov    BYTE PTR [edi+0x30],0x1
  41b1ec:	mov    ecx,DWORD PTR [edi+0x28]
  41b1ef:	mov    DWORD PTR [edi+0x20],ecx
  41b1f2:	mov    DWORD PTR [edi+0x24],edx
  41b1f5:	mov    DWORD PTR [edi+0x28],eax
  41b1f8:	pop    esi
  41b1f9:	add    esp,0x10
  41b1fc:	ret    
  41b1fd:	int3   
  41b1fe:	int3   
  41b1ff:	int3   
  41b200:	mov    eax,DWORD PTR [esp+0xc]
  41b204:	xor    ecx,ecx
  41b206:	cmp    eax,0x4
  41b209:	je     0x41b256
  41b20b:	cmp    eax,ecx
  41b20d:	je     0x41b23f
  41b20f:	cmp    eax,0x1
  41b212:	je     0x41b23f
  41b214:	cmp    eax,0x2
  41b217:	je     0x41b266
  41b219:	cmp    eax,0x3
  41b21c:	jne    0x41b256
  41b21e:	push   esi
  41b21f:	mov    esi,DWORD PTR [esp+0xc]
  41b223:	mov    ecx,DWORD PTR [esi]
  41b225:	push   0x43f2e0
  41b22a:	call   DWORD PTR ds:0x4302d4
  41b230:	movzx  eax,al
  41b233:	neg    eax
  41b235:	sbb    eax,eax
  41b237:	and    eax,DWORD PTR [esp+0x8]
  41b23b:	mov    DWORD PTR [esi],eax
  41b23d:	pop    esi
  41b23e:	ret    
  41b23f:	mov    eax,DWORD PTR [esp+0x8]
  41b243:	cmp    eax,ecx
  41b245:	je     0x41b266
  41b247:	mov    ecx,DWORD PTR [esp+0x4]
  41b24b:	mov    edx,DWORD PTR [ecx]
  41b24d:	mov    DWORD PTR [eax],edx
  41b24f:	mov    ecx,DWORD PTR [ecx+0x4]
  41b252:	mov    DWORD PTR [eax+0x4],ecx
  41b255:	ret    
  41b256:	mov    eax,DWORD PTR [esp+0x8]
  41b25a:	mov    BYTE PTR [eax+0x5],cl
  41b25d:	mov    BYTE PTR [eax+0x4],cl
  41b260:	mov    DWORD PTR [eax],0x43f2e0
  41b266:	ret    
  41b267:	int3   
  41b268:	int3   
  41b269:	int3   
  41b26a:	int3   
  41b26b:	int3   
  41b26c:	int3   
  41b26d:	int3   
  41b26e:	int3   
  41b26f:	int3   
  41b270:	mov    eax,DWORD PTR [esp+0xc]
  41b274:	cmp    eax,0x4
  41b277:	je     0x41b296
  41b279:	mov    edx,DWORD PTR [esp+0x8]
  41b27d:	mov    BYTE PTR [esp+0xc],0x0
  41b282:	mov    ecx,DWORD PTR [esp+0xc]
  41b286:	push   ecx
  41b287:	mov    ecx,DWORD PTR [esp+0x8]
  41b28b:	push   eax
  41b28c:	push   edx
  41b28d:	call   0x41b510
  41b292:	add    esp,0xc
  41b295:	ret    
  41b296:	mov    eax,DWORD PTR [esp+0x8]
  41b29a:	xor    cl,cl
  41b29c:	mov    DWORD PTR [eax],0x43f368
  41b2a2:	mov    BYTE PTR [eax+0x4],cl
  41b2a5:	mov    BYTE PTR [eax+0x5],cl
  41b2a8:	ret    
  41b2a9:	int3   
  41b2aa:	int3   
  41b2ab:	int3   
  41b2ac:	int3   
  41b2ad:	int3   
  41b2ae:	int3   
  41b2af:	int3   
  41b2b0:	mov    eax,DWORD PTR [esp+0x4]
  41b2b4:	mov    eax,DWORD PTR [eax]
  41b2b6:	mov    ecx,DWORD PTR [eax+0x40]
  41b2b9:	push   ecx
  41b2ba:	lea    edx,[eax+0x24]
  41b2bd:	push   edx
  41b2be:	mov    edx,DWORD PTR [eax]
  41b2c0:	lea    ecx,[eax+0x8]
  41b2c3:	push   ecx
  41b2c4:	mov    ecx,DWORD PTR [eax+0x4]
  41b2c7:	call   edx
  41b2c9:	ret    
  41b2ca:	int3   
  41b2cb:	int3   
  41b2cc:	int3   
  41b2cd:	int3   
  41b2ce:	int3   
  41b2cf:	int3   
  41b2d0:	mov    eax,DWORD PTR [esp+0xc]
  41b2d4:	cmp    eax,0x4
  41b2d7:	je     0x41b2f7
  41b2d9:	push   edi
  41b2da:	mov    edi,DWORD PTR [esp+0xc]
  41b2de:	mov    BYTE PTR [esp+0x10],0x0
  41b2e3:	mov    ecx,DWORD PTR [esp+0x10]
  41b2e7:	push   ecx
  41b2e8:	mov    ecx,DWORD PTR [esp+0xc]
  41b2ec:	push   eax
  41b2ed:	call   0x41b650
  41b2f2:	add    esp,0x8
  41b2f5:	pop    edi
  41b2f6:	ret    
  41b2f7:	mov    eax,DWORD PTR [esp+0x8]
  41b2fb:	xor    cl,cl
  41b2fd:	mov    DWORD PTR [eax],0x43f498
  41b303:	mov    BYTE PTR [eax+0x4],cl
  41b306:	mov    BYTE PTR [eax+0x5],cl
  41b309:	ret    
  41b30a:	int3   
  41b30b:	int3   
  41b30c:	int3   
  41b30d:	int3   
  41b30e:	int3   
  41b30f:	int3   
  41b310:	mov    eax,DWORD PTR [esp+0xc]
  41b314:	xor    ecx,ecx
  41b316:	cmp    eax,0x4
  41b319:	je     0x41b366
  41b31b:	cmp    eax,ecx
  41b31d:	je     0x41b34f
  41b31f:	cmp    eax,0x1
  41b322:	je     0x41b34f
  41b324:	cmp    eax,0x2
  41b327:	je     0x41b376
  41b329:	cmp    eax,0x3
  41b32c:	jne    0x41b366
  41b32e:	push   esi
  41b32f:	mov    esi,DWORD PTR [esp+0xc]
  41b333:	mov    ecx,DWORD PTR [esi]
  41b335:	push   0x43f5b0
  41b33a:	call   DWORD PTR ds:0x4302d4
  41b340:	movzx  eax,al
  41b343:	neg    eax
  41b345:	sbb    eax,eax
  41b347:	and    eax,DWORD PTR [esp+0x8]
  41b34b:	mov    DWORD PTR [esi],eax
  41b34d:	pop    esi
  41b34e:	ret    
  41b34f:	mov    eax,DWORD PTR [esp+0x8]
  41b353:	cmp    eax,ecx
  41b355:	je     0x41b376
  41b357:	mov    ecx,DWORD PTR [esp+0x4]
  41b35b:	mov    edx,DWORD PTR [ecx]
  41b35d:	mov    DWORD PTR [eax],edx
  41b35f:	mov    ecx,DWORD PTR [ecx+0x4]
  41b362:	mov    DWORD PTR [eax+0x4],ecx
  41b365:	ret    
  41b366:	mov    eax,DWORD PTR [esp+0x8]
  41b36a:	mov    BYTE PTR [eax+0x5],cl
  41b36d:	mov    BYTE PTR [eax+0x4],cl
  41b370:	mov    DWORD PTR [eax],0x43f5b0
  41b376:	ret    
  41b377:	int3   
  41b378:	int3   
  41b379:	int3   
  41b37a:	int3   
  41b37b:	int3   
  41b37c:	int3   
  41b37d:	int3   
  41b37e:	int3   
  41b37f:	int3   
  41b380:	mov    eax,DWORD PTR [esp+0x4]
  41b384:	mov    ecx,DWORD PTR [eax+0x4]
  41b387:	mov    eax,DWORD PTR [eax]
  41b389:	jmp    eax
  41b38b:	int3   
  41b38c:	int3   
  41b38d:	int3   
  41b38e:	int3   
  41b38f:	int3   
  41b390:	mov    eax,DWORD PTR [esp+0xc]
  41b394:	cmp    eax,0x4
  41b397:	je     0x41b3b8
  41b399:	push   esi
  41b39a:	mov    esi,DWORD PTR [esp+0xc]
  41b39e:	push   edi
  41b39f:	mov    edi,DWORD PTR [esp+0xc]
  41b3a3:	mov    BYTE PTR [esp+0x14],0x0
  41b3a8:	mov    ecx,DWORD PTR [esp+0x14]
  41b3ac:	push   ecx
  41b3ad:	call   0x41b440
  41b3b2:	add    esp,0x4
  41b3b5:	pop    edi
  41b3b6:	pop    esi
  41b3b7:	ret    
  41b3b8:	mov    eax,DWORD PTR [esp+0x8]
  41b3bc:	xor    cl,cl
  41b3be:	mov    DWORD PTR [eax],0x43f648
  41b3c4:	mov    BYTE PTR [eax+0x4],cl
  41b3c7:	mov    BYTE PTR [eax+0x5],cl
  41b3ca:	ret    
  41b3cb:	int3   
  41b3cc:	int3   
  41b3cd:	int3   
  41b3ce:	int3   
  41b3cf:	int3   
  41b3d0:	mov    eax,DWORD PTR [esp+0x4]
  41b3d4:	mov    ecx,DWORD PTR [eax+0x8]
  41b3d7:	mov    edx,DWORD PTR [eax]
  41b3d9:	push   ecx
  41b3da:	mov    ecx,DWORD PTR [eax+0x4]
  41b3dd:	call   edx
  41b3df:	ret    
  41b3e0:	mov    eax,DWORD PTR [esp+0xc]
  41b3e4:	cmp    eax,0x4
  41b3e7:	je     0x41b406
  41b3e9:	mov    edx,DWORD PTR [esp+0x8]
  41b3ed:	mov    BYTE PTR [esp+0xc],0x0
  41b3f2:	mov    ecx,DWORD PTR [esp+0xc]
  41b3f6:	push   ecx
  41b3f7:	mov    ecx,DWORD PTR [esp+0x8]
  41b3fb:	push   eax
  41b3fc:	push   edx
  41b3fd:	call   0x41b780
  41b402:	add    esp,0xc
  41b405:	ret    
  41b406:	mov    eax,DWORD PTR [esp+0x8]
  41b40a:	xor    cl,cl
  41b40c:	mov    DWORD PTR [eax],0x43f6d8
  41b412:	mov    BYTE PTR [eax+0x4],cl
  41b415:	mov    BYTE PTR [eax+0x5],cl
  41b418:	ret    
  41b419:	int3   
  41b41a:	int3   
  41b41b:	int3   
  41b41c:	int3   
  41b41d:	int3   
  41b41e:	int3   
  41b41f:	int3   
  41b420:	mov    eax,DWORD PTR [esp+0x4]
  41b424:	mov    eax,DWORD PTR [eax]
  41b426:	mov    edx,DWORD PTR [eax+0x8]
  41b429:	lea    ecx,[eax+0xc]
  41b42c:	push   ecx
  41b42d:	mov    ecx,DWORD PTR [eax+0x4]
  41b430:	mov    eax,DWORD PTR [eax]
  41b432:	push   edx
  41b433:	call   eax
  41b435:	ret    
  41b436:	int3   
  41b437:	int3   
  41b438:	int3   
  41b439:	int3   
  41b43a:	int3   
  41b43b:	int3   
  41b43c:	int3   
  41b43d:	int3   
  41b43e:	int3   
  41b43f:	int3   
  41b440:	xor    ecx,ecx
  41b442:	cmp    eax,ecx
  41b444:	je     0x41b47b
  41b446:	cmp    eax,0x1
  41b449:	je     0x41b47b
  41b44b:	cmp    eax,0x2
  41b44e:	je     0x41b48f
  41b450:	cmp    eax,0x3
  41b453:	jne    0x41b46e
  41b455:	mov    ecx,DWORD PTR [esi]
  41b457:	push   0x43f648
  41b45c:	call   DWORD PTR ds:0x4302d4
  41b462:	movzx  eax,al
  41b465:	neg    eax
  41b467:	sbb    eax,eax
  41b469:	and    eax,edi
  41b46b:	mov    DWORD PTR [esi],eax
  41b46d:	ret    
  41b46e:	mov    DWORD PTR [esi],0x43f648
  41b474:	mov    BYTE PTR [esi+0x4],cl
  41b477:	mov    BYTE PTR [esi+0x5],cl
  41b47a:	ret    
  41b47b:	cmp    esi,ecx
  41b47d:	je     0x41b48f
  41b47f:	mov    ecx,DWORD PTR [edi]
  41b481:	mov    DWORD PTR [esi],ecx
  41b483:	mov    edx,DWORD PTR [edi+0x4]
  41b486:	mov    DWORD PTR [esi+0x4],edx
  41b489:	mov    eax,DWORD PTR [edi+0x8]
  41b48c:	mov    DWORD PTR [esi+0x8],eax
  41b48f:	ret    
  41b490:	push   0xffffffff
  41b492:	push   0x42d7c8
  41b497:	mov    eax,fs:0x0
  41b49d:	push   eax
  41b49e:	sub    esp,0x34
  41b4a1:	mov    eax,ds:0x43e020
  41b4a6:	xor    eax,esp
  41b4a8:	push   eax
  41b4a9:	lea    eax,[esp+0x38]
  41b4ad:	mov    fs:0x0,eax
  41b4b3:	mov    eax,DWORD PTR [ecx]
  41b4b5:	test   eax,eax
  41b4b7:	jne    0x41b4d1
  41b4b9:	lea    eax,[esp+0x10]
  41b4bd:	push   eax
  41b4be:	call   0x404050
  41b4c3:	push   eax
  41b4c4:	mov    DWORD PTR [esp+0x44],0x0
  41b4cc:	call   0x403ba0
  41b4d1:	mov    edx,DWORD PTR [esp+0x4c]
  41b4d5:	push   edx
  41b4d6:	mov    edx,DWORD PTR [esp+0x4c]
  41b4da:	push   edx
  41b4db:	add    ecx,0x8
  41b4de:	push   ecx
  41b4df:	and    eax,0xfffffffe
  41b4e2:	mov    edx,DWORD PTR [eax+0x4]
  41b4e5:	lea    ecx,[esp+0x14]
  41b4e9:	push   ecx
  41b4ea:	call   edx
  41b4ec:	mov    ecx,DWORD PTR [eax]
  41b4ee:	mov    edx,DWORD PTR [eax+0x4]
  41b4f1:	add    esp,0x10
  41b4f4:	mov    DWORD PTR [esi],ecx
  41b4f6:	mov    DWORD PTR [esi+0x4],edx
  41b4f9:	mov    eax,esi
  41b4fb:	mov    ecx,DWORD PTR [esp+0x38]
  41b4ff:	mov    DWORD PTR fs:0x0,ecx
  41b506:	pop    ecx
  41b507:	add    esp,0x40
  41b50a:	ret    0x8
  41b50d:	int3   
  41b50e:	int3   
  41b50f:	int3   
  41b510:	push   0xffffffff
  41b512:	push   0x42c6ab
  41b517:	mov    eax,fs:0x0
  41b51d:	push   eax
  41b51e:	push   ebx
  41b51f:	push   ebp
  41b520:	push   esi
  41b521:	push   edi
  41b522:	mov    eax,ds:0x43e020
  41b527:	xor    eax,esp
  41b529:	push   eax
  41b52a:	lea    eax,[esp+0x14]
  41b52e:	mov    fs:0x0,eax
  41b534:	mov    eax,DWORD PTR [esp+0x28]
  41b538:	mov    ebp,DWORD PTR [esp+0x24]
  41b53c:	mov    esi,ecx
  41b53e:	xor    ebx,ebx
  41b540:	cmp    eax,ebx
  41b542:	jne    0x41b5a6
  41b544:	mov    edi,DWORD PTR [esi]
  41b546:	push   0x44
  41b548:	call   0x425050
  41b54d:	mov    esi,eax
  41b54f:	add    esp,0x4
  41b552:	mov    DWORD PTR [esp+0x28],esi
  41b556:	mov    DWORD PTR [esp+0x1c],ebx
  41b55a:	cmp    esi,ebx
  41b55c:	je     0x41b58d
  41b55e:	mov    eax,DWORD PTR [edi]
  41b560:	add    edi,0x4
  41b563:	lea    ebx,[esi+0x4]
  41b566:	push   ebx
  41b567:	mov    ecx,edi
  41b569:	mov    DWORD PTR [esi],eax
  41b56b:	call   0x417d60
  41b570:	mov    ecx,DWORD PTR [edi+0x3c]
  41b573:	mov    DWORD PTR [ebx+0x3c],ecx
  41b576:	mov    DWORD PTR [ebp+0x0],esi
  41b579:	mov    ecx,DWORD PTR [esp+0x14]
  41b57d:	mov    DWORD PTR fs:0x0,ecx
  41b584:	pop    ecx
  41b585:	pop    edi
  41b586:	pop    esi
  41b587:	pop    ebp
  41b588:	pop    ebx
  41b589:	add    esp,0xc
  41b58c:	ret    
  41b58d:	xor    esi,esi
  41b58f:	mov    DWORD PTR [ebp+0x0],esi
  41b592:	mov    ecx,DWORD PTR [esp+0x14]
  41b596:	mov    DWORD PTR fs:0x0,ecx
  41b59d:	pop    ecx
  41b59e:	pop    edi
  41b59f:	pop    esi
  41b5a0:	pop    ebp
  41b5a1:	pop    ebx
  41b5a2:	add    esp,0xc
  41b5a5:	ret    
  41b5a6:	cmp    eax,0x1
  41b5a9:	jne    0x41b5c6
  41b5ab:	mov    edx,DWORD PTR [esi]
  41b5ad:	mov    DWORD PTR [ebp+0x0],edx
  41b5b0:	mov    DWORD PTR [esi],ebx
  41b5b2:	mov    ecx,DWORD PTR [esp+0x14]
  41b5b6:	mov    DWORD PTR fs:0x0,ecx
  41b5bd:	pop    ecx
  41b5be:	pop    edi
  41b5bf:	pop    esi
  41b5c0:	pop    ebp
  41b5c1:	pop    ebx
  41b5c2:	add    esp,0xc
  41b5c5:	ret    
  41b5c6:	cmp    eax,0x2
  41b5c9:	jne    0x41b5fb
  41b5cb:	mov    esi,DWORD PTR [ebp+0x0]
  41b5ce:	cmp    esi,ebx
  41b5d0:	je     0x41b5e4
  41b5d2:	lea    eax,[esi+0x4]
  41b5d5:	push   eax
  41b5d6:	call   0x40e010
  41b5db:	push   esi
  41b5dc:	call   0x42504a
  41b5e1:	add    esp,0x4
  41b5e4:	mov    DWORD PTR [ebp+0x0],ebx
  41b5e7:	mov    ecx,DWORD PTR [esp+0x14]
  41b5eb:	mov    DWORD PTR fs:0x0,ecx
  41b5f2:	pop    ecx
  41b5f3:	pop    edi
  41b5f4:	pop    esi
  41b5f5:	pop    ebp
  41b5f6:	pop    ebx
  41b5f7:	add    esp,0xc
  41b5fa:	ret    
  41b5fb:	cmp    eax,0x3
  41b5fe:	jne    0x41b62b
  41b600:	mov    ecx,DWORD PTR [ebp+0x0]
  41b603:	push   0x43f368
  41b608:	call   DWORD PTR ds:0x4302d4
  41b60e:	test   al,al
  41b610:	je     0x41b5e4
  41b612:	mov    ecx,DWORD PTR [esi]
  41b614:	mov    DWORD PTR [ebp+0x0],ecx
  41b617:	mov    ecx,DWORD PTR [esp+0x14]
  41b61b:	mov    DWORD PTR fs:0x0,ecx
  41b622:	pop    ecx
  41b623:	pop    edi
  41b624:	pop    esi
  41b625:	pop    ebp
  41b626:	pop    ebx
  41b627:	add    esp,0xc
  41b62a:	ret    
  41b62b:	mov    DWORD PTR [ebp+0x0],0x43f368
  41b632:	mov    BYTE PTR [ebp+0x4],bl
  41b635:	mov    BYTE PTR [ebp+0x5],bl
  41b638:	mov    ecx,DWORD PTR [esp+0x14]
  41b63c:	mov    DWORD PTR fs:0x0,ecx
  41b643:	pop    ecx
  41b644:	pop    edi
  41b645:	pop    esi
  41b646:	pop    ebp
  41b647:	pop    ebx
  41b648:	add    esp,0xc
  41b64b:	ret    
  41b64c:	int3   
  41b64d:	int3   
  41b64e:	int3   
  41b64f:	int3   
  41b650:	push   0xffffffff
  41b652:	push   0x42ba6b
  41b657:	mov    eax,fs:0x0
  41b65d:	push   eax
  41b65e:	push   ebp
  41b65f:	push   esi
  41b660:	mov    eax,ds:0x43e020
  41b665:	xor    eax,esp
  41b667:	push   eax
  41b668:	lea    eax,[esp+0xc]
  41b66c:	mov    fs:0x0,eax
  41b672:	mov    eax,DWORD PTR [esp+0x1c]
  41b676:	mov    esi,ecx
  41b678:	test   eax,eax
  41b67a:	jne    0x41b6dc
  41b67c:	mov    ebp,DWORD PTR [esi]
  41b67e:	push   0x24
  41b680:	call   0x425050
  41b685:	mov    esi,eax
  41b687:	add    esp,0x4
  41b68a:	mov    DWORD PTR [esp+0x1c],esi
  41b68e:	mov    DWORD PTR [esp+0x14],0x0
  41b696:	test   esi,esi
  41b698:	je     0x41b6c6
  41b69a:	mov    eax,DWORD PTR [ebp+0x0]
  41b69d:	mov    DWORD PTR [esi],eax
  41b69f:	mov    ecx,DWORD PTR [ebp+0x4]
  41b6a2:	add    ebp,0x8
  41b6a5:	mov    DWORD PTR [esi+0x4],ecx
  41b6a8:	push   ebp
  41b6a9:	lea    ecx,[esi+0x8]
  41b6ac:	call   DWORD PTR ds:0x430118
  41b6b2:	mov    DWORD PTR [edi],esi
  41b6b4:	mov    ecx,DWORD PTR [esp+0xc]
  41b6b8:	mov    DWORD PTR fs:0x0,ecx
  41b6bf:	pop    ecx
  41b6c0:	pop    esi
  41b6c1:	pop    ebp
  41b6c2:	add    esp,0xc
  41b6c5:	ret    
  41b6c6:	xor    esi,esi
  41b6c8:	mov    DWORD PTR [edi],esi
  41b6ca:	mov    ecx,DWORD PTR [esp+0xc]
  41b6ce:	mov    DWORD PTR fs:0x0,ecx
  41b6d5:	pop    ecx
  41b6d6:	pop    esi
  41b6d7:	pop    ebp
  41b6d8:	add    esp,0xc
  41b6db:	ret    
  41b6dc:	cmp    eax,0x1
  41b6df:	jne    0x41b6fd
  41b6e1:	mov    edx,DWORD PTR [esi]
  41b6e3:	mov    DWORD PTR [edi],edx
  41b6e5:	mov    DWORD PTR [esi],0x0
  41b6eb:	mov    ecx,DWORD PTR [esp+0xc]
  41b6ef:	mov    DWORD PTR fs:0x0,ecx
  41b6f6:	pop    ecx
  41b6f7:	pop    esi
  41b6f8:	pop    ebp
  41b6f9:	add    esp,0xc
  41b6fc:	ret    
  41b6fd:	cmp    eax,0x2
  41b700:	jne    0x41b732
  41b702:	mov    esi,DWORD PTR [edi]
  41b704:	test   esi,esi
  41b706:	je     0x41b71a
  41b708:	lea    ecx,[esi+0x8]
  41b70b:	call   DWORD PTR ds:0x430264
  41b711:	push   esi
  41b712:	call   0x42504a
  41b717:	add    esp,0x4
  41b71a:	mov    DWORD PTR [edi],0x0
  41b720:	mov    ecx,DWORD PTR [esp+0xc]
  41b724:	mov    DWORD PTR fs:0x0,ecx
  41b72b:	pop    ecx
  41b72c:	pop    esi
  41b72d:	pop    ebp
  41b72e:	add    esp,0xc
  41b731:	ret    
  41b732:	cmp    eax,0x3
  41b735:	jne    0x41b75e
  41b737:	mov    ecx,DWORD PTR [edi]
  41b739:	push   0x43f498
  41b73e:	call   DWORD PTR ds:0x4302d4
  41b744:	test   al,al
  41b746:	je     0x41b71a
  41b748:	mov    eax,DWORD PTR [esi]
  41b74a:	mov    DWORD PTR [edi],eax
  41b74c:	mov    ecx,DWORD PTR [esp+0xc]
  41b750:	mov    DWORD PTR fs:0x0,ecx
  41b757:	pop    ecx
  41b758:	pop    esi
  41b759:	pop    ebp
  41b75a:	add    esp,0xc
  41b75d:	ret    
  41b75e:	mov    DWORD PTR [edi],0x43f498
  41b764:	mov    BYTE PTR [edi+0x4],0x0
  41b768:	mov    BYTE PTR [edi+0x5],0x0
  41b76c:	mov    ecx,DWORD PTR [esp+0xc]
  41b770:	mov    DWORD PTR fs:0x0,ecx
  41b777:	pop    ecx
  41b778:	pop    esi
  41b779:	pop    ebp
  41b77a:	add    esp,0xc
  41b77d:	ret    
  41b77e:	int3   
  41b77f:	int3   
  41b780:	push   0xffffffff
  41b782:	push   0x42c67b
  41b787:	mov    eax,fs:0x0
  41b78d:	push   eax
  41b78e:	push   ebp
  41b78f:	push   esi
  41b790:	push   edi
  41b791:	mov    eax,ds:0x43e020
  41b796:	xor    eax,esp
  41b798:	push   eax
  41b799:	lea    eax,[esp+0x10]
  41b79d:	mov    fs:0x0,eax
  41b7a3:	mov    eax,DWORD PTR [esp+0x24]
  41b7a7:	mov    ebp,DWORD PTR [esp+0x20]
  41b7ab:	mov    esi,ecx
  41b7ad:	test   eax,eax
  41b7af:	jne    0x41b81a
  41b7b1:	mov    edi,DWORD PTR [esi]
  41b7b3:	push   0x28
  41b7b5:	call   0x425050
  41b7ba:	mov    esi,eax
  41b7bc:	add    esp,0x4
  41b7bf:	mov    DWORD PTR [esp+0x24],esi
  41b7c3:	mov    DWORD PTR [esp+0x18],0x0
  41b7cb:	test   esi,esi
  41b7cd:	je     0x41b802
  41b7cf:	mov    eax,DWORD PTR [edi]
  41b7d1:	mov    DWORD PTR [esi],eax
  41b7d3:	mov    ecx,DWORD PTR [edi+0x4]
  41b7d6:	mov    DWORD PTR [esi+0x4],ecx
  41b7d9:	mov    edx,DWORD PTR [edi+0x8]
  41b7dc:	add    edi,0xc
  41b7df:	push   edi
  41b7e0:	lea    ecx,[esi+0xc]
  41b7e3:	mov    DWORD PTR [esi+0x8],edx
  41b7e6:	call   DWORD PTR ds:0x430118
  41b7ec:	mov    DWORD PTR [ebp+0x0],esi
  41b7ef:	mov    ecx,DWORD PTR [esp+0x10]
  41b7f3:	mov    DWORD PTR fs:0x0,ecx
  41b7fa:	pop    ecx
  41b7fb:	pop    edi
  41b7fc:	pop    esi
  41b7fd:	pop    ebp
  41b7fe:	add    esp,0xc
  41b801:	ret    
  41b802:	xor    esi,esi
  41b804:	mov    DWORD PTR [ebp+0x0],esi
  41b807:	mov    ecx,DWORD PTR [esp+0x10]
  41b80b:	mov    DWORD PTR fs:0x0,ecx
  41b812:	pop    ecx
  41b813:	pop    edi
  41b814:	pop    esi
  41b815:	pop    ebp
  41b816:	add    esp,0xc
  41b819:	ret    
  41b81a:	cmp    eax,0x1
  41b81d:	jne    0x41b83d
  41b81f:	mov    eax,DWORD PTR [esi]
  41b821:	mov    DWORD PTR [ebp+0x0],eax
  41b824:	mov    DWORD PTR [esi],0x0
  41b82a:	mov    ecx,DWORD PTR [esp+0x10]
  41b82e:	mov    DWORD PTR fs:0x0,ecx
  41b835:	pop    ecx
  41b836:	pop    edi
  41b837:	pop    esi
  41b838:	pop    ebp
  41b839:	add    esp,0xc
  41b83c:	ret    
  41b83d:	cmp    eax,0x2
  41b840:	jne    0x41b875
  41b842:	mov    esi,DWORD PTR [ebp+0x0]
  41b845:	test   esi,esi
  41b847:	je     0x41b85b
  41b849:	lea    ecx,[esi+0xc]
  41b84c:	call   DWORD PTR ds:0x430264
  41b852:	push   esi
  41b853:	call   0x42504a
  41b858:	add    esp,0x4
  41b85b:	mov    DWORD PTR [ebp+0x0],0x0
  41b862:	mov    ecx,DWORD PTR [esp+0x10]
  41b866:	mov    DWORD PTR fs:0x0,ecx
  41b86d:	pop    ecx
  41b86e:	pop    edi
  41b86f:	pop    esi
  41b870:	pop    ebp
  41b871:	add    esp,0xc
  41b874:	ret    
  41b875:	cmp    eax,0x3
  41b878:	jne    0x41b8a4
  41b87a:	mov    ecx,DWORD PTR [ebp+0x0]
  41b87d:	push   0x43f6d8
  41b882:	call   DWORD PTR ds:0x4302d4
  41b888:	test   al,al
  41b88a:	je     0x41b85b
  41b88c:	mov    ecx,DWORD PTR [esi]
  41b88e:	mov    DWORD PTR [ebp+0x0],ecx
  41b891:	mov    ecx,DWORD PTR [esp+0x10]
  41b895:	mov    DWORD PTR fs:0x0,ecx
  41b89c:	pop    ecx
  41b89d:	pop    edi
  41b89e:	pop    esi
  41b89f:	pop    ebp
  41b8a0:	add    esp,0xc
  41b8a3:	ret    
  41b8a4:	mov    DWORD PTR [ebp+0x0],0x43f6d8
  41b8ab:	mov    BYTE PTR [ebp+0x4],0x0
  41b8af:	mov    BYTE PTR [ebp+0x5],0x0
  41b8b3:	mov    ecx,DWORD PTR [esp+0x10]
  41b8b7:	mov    DWORD PTR fs:0x0,ecx
  41b8be:	pop    ecx
  41b8bf:	pop    edi
  41b8c0:	pop    esi
  41b8c1:	pop    ebp
  41b8c2:	add    esp,0xc
  41b8c5:	ret    
  41b8c6:	int3   
  41b8c7:	int3   
  41b8c8:	int3   
  41b8c9:	int3   
  41b8ca:	int3   
  41b8cb:	int3   
  41b8cc:	int3   
  41b8cd:	int3   
  41b8ce:	int3   
  41b8cf:	int3   
  41b8d0:	sub    esp,0x14
  41b8d3:	push   edi
  41b8d4:	mov    edi,eax
  41b8d6:	mov    eax,DWORD PTR [edi]
  41b8d8:	movzx  ecx,BYTE PTR [eax]
  41b8db:	cmp    BYTE PTR [ecx+0x432118],0x0
  41b8e2:	je     0x41baa4
  41b8e8:	push   ebx
  41b8e9:	push   ebp
  41b8ea:	push   esi
  41b8eb:	jmp    0x41b8f0
  41b8ed:	lea    ecx,[ecx+0x0]
  41b8f0:	mov    ebp,DWORD PTR [edi]
  41b8f2:	lea    eax,[ebp+0x1]
  41b8f5:	mov    DWORD PTR [edi],eax
  41b8f7:	movzx  edx,BYTE PTR [eax]
  41b8fa:	cmp    BYTE PTR [edx+0x432118],0x0
  41b901:	je     0x41b911
  41b903:	movzx  ecx,BYTE PTR [eax+0x1]
  41b907:	inc    eax
  41b908:	cmp    BYTE PTR [ecx+0x432118],0x0
  41b90f:	jne    0x41b903
  41b911:	mov    DWORD PTR [edi],eax
  41b913:	cmp    eax,ebp
  41b915:	je     0x41bab0
  41b91b:	mov    esi,DWORD PTR [esp+0x28]
  41b91f:	mov    ecx,DWORD PTR [esi+0x34]
  41b922:	mov    eax,ecx
  41b924:	neg    eax
  41b926:	and    eax,0x3
  41b929:	add    eax,ecx
  41b92b:	lea    edx,[eax+0x1c]
  41b92e:	xor    ebx,ebx
  41b930:	cmp    edx,DWORD PTR [esi+0x38]
  41b933:	jbe    0x41b978
  41b935:	mov    eax,DWORD PTR [esi+0x1003c]
  41b93b:	push   0x1000a
  41b940:	cmp    eax,ebx
  41b942:	je     0x41b948
  41b944:	call   eax
  41b946:	jmp    0x41b94d
  41b948:	call   0x425023
  41b94d:	mov    edx,DWORD PTR [esi+0x30]
  41b950:	mov    ecx,eax
  41b952:	neg    ecx
  41b954:	and    ecx,0x3
  41b957:	add    ecx,eax
  41b959:	mov    DWORD PTR [ecx],edx
  41b95b:	mov    DWORD PTR [esi+0x30],eax
  41b95e:	add    eax,0x1000a
  41b963:	add    ecx,0x4
  41b966:	mov    DWORD PTR [esi+0x38],eax
  41b969:	mov    eax,ecx
  41b96b:	neg    eax
  41b96d:	and    eax,0x3
  41b970:	add    esp,0x4
  41b973:	mov    DWORD PTR [esi+0x34],ecx
  41b976:	add    eax,ecx
  41b978:	lea    ecx,[eax+0x1c]
  41b97b:	mov    DWORD PTR [esi+0x34],ecx
  41b97e:	cmp    eax,ebx
  41b980:	je     0x41b98e
  41b982:	mov    DWORD PTR [eax],ebx
  41b984:	mov    DWORD PTR [eax+0x4],ebx
  41b987:	mov    DWORD PTR [eax+0x10],ebx
  41b98a:	mov    esi,eax
  41b98c:	jmp    0x41b990
  41b98e:	xor    esi,esi
  41b990:	mov    eax,DWORD PTR [edi]
  41b992:	sub    eax,ebp
  41b994:	mov    DWORD PTR [esi+0x8],eax
  41b997:	mov    eax,DWORD PTR [esp+0x2c]
  41b99b:	mov    DWORD PTR [esi],ebp
  41b99d:	cmp    DWORD PTR [eax+0x20],ebx
  41b9a0:	je     0x41b9b0
  41b9a2:	mov    edx,DWORD PTR [eax+0x24]
  41b9a5:	mov    DWORD PTR [esi+0x14],edx
  41b9a8:	mov    ecx,DWORD PTR [eax+0x24]
  41b9ab:	mov    DWORD PTR [ecx+0x18],esi
  41b9ae:	jmp    0x41b9b6
  41b9b0:	mov    DWORD PTR [esi+0x14],ebx
  41b9b3:	mov    DWORD PTR [eax+0x20],esi
  41b9b6:	mov    DWORD PTR [eax+0x24],esi
  41b9b9:	mov    DWORD PTR [esi+0x10],eax
  41b9bc:	mov    DWORD PTR [esi+0x18],ebx
  41b9bf:	mov    ebp,DWORD PTR [edi]
  41b9c1:	movzx  edx,BYTE PTR [ebp+0x0]
  41b9c5:	cmp    BYTE PTR [edx+0x431ed8],0x0
  41b9cc:	je     0x41b9de
  41b9ce:	mov    edi,edi
  41b9d0:	movzx  eax,BYTE PTR [ebp+0x1]
  41b9d4:	inc    ebp
  41b9d5:	cmp    BYTE PTR [eax+0x431ed8],0x0
  41b9dc:	jne    0x41b9d0
  41b9de:	mov    DWORD PTR [edi],ebp
  41b9e0:	cmp    BYTE PTR [ebp+0x0],0x3d
  41b9e4:	jne    0x41badd
  41b9ea:	inc    ebp
  41b9eb:	mov    DWORD PTR [edi],ebp
  41b9ed:	mov    eax,DWORD PTR [esi]
  41b9ef:	mov    ecx,eax
  41b9f1:	cmp    eax,ebx
  41b9f3:	jne    0x41ba40
  41b9f5:	mov    ecx,0x4400e0
  41b9fa:	xor    eax,eax
  41b9fc:	mov    BYTE PTR [eax+ecx*1],0x0
  41ba00:	mov    ebp,DWORD PTR [edi]
  41ba02:	movzx  ecx,BYTE PTR [ebp+0x0]
  41ba06:	cmp    BYTE PTR [ecx+0x431ed8],0x0
  41ba0d:	je     0x41ba1e
  41ba0f:	nop
  41ba10:	movzx  edx,BYTE PTR [ebp+0x1]
  41ba14:	inc    ebp
  41ba15:	cmp    BYTE PTR [edx+0x431ed8],0x0
  41ba1c:	jne    0x41ba10
  41ba1e:	mov    DWORD PTR [edi],ebp
  41ba20:	mov    bl,BYTE PTR [ebp+0x0]
  41ba23:	cmp    bl,0x27
  41ba26:	je     0x41ba31
  41ba28:	cmp    bl,0x22
  41ba2b:	jne    0x41bb0a
  41ba31:	inc    ebp
  41ba32:	mov    DWORD PTR [edi],ebp
  41ba34:	cmp    bl,0x27
  41ba37:	jne    0x41ba45
  41ba39:	call   0x41cc80
  41ba3e:	jmp    0x41ba4a
  41ba40:	mov    eax,DWORD PTR [esi+0x8]
  41ba43:	jmp    0x41b9fc
  41ba45:	call   0x41ced0
  41ba4a:	sub    eax,ebp
  41ba4c:	mov    DWORD PTR [esi+0x4],ebp
  41ba4f:	mov    DWORD PTR [esi+0xc],eax
  41ba52:	mov    eax,DWORD PTR [edi]
  41ba54:	cmp    BYTE PTR [eax],bl
  41ba56:	jne    0x41bb37
  41ba5c:	inc    eax
  41ba5d:	mov    DWORD PTR [edi],eax
  41ba5f:	mov    eax,DWORD PTR [esi+0x4]
  41ba62:	mov    ecx,eax
  41ba64:	test   eax,eax
  41ba66:	jne    0x41baab
  41ba68:	mov    ecx,0x4400e0
  41ba6d:	xor    esi,esi
  41ba6f:	mov    BYTE PTR [esi+ecx*1],0x0
  41ba73:	mov    eax,DWORD PTR [edi]
  41ba75:	movzx  ecx,BYTE PTR [eax]
  41ba78:	cmp    BYTE PTR [ecx+0x431ed8],0x0
  41ba7f:	je     0x41ba8f
  41ba81:	movzx  edx,BYTE PTR [eax+0x1]
  41ba85:	inc    eax
  41ba86:	cmp    BYTE PTR [edx+0x431ed8],0x0
  41ba8d:	jne    0x41ba81
  41ba8f:	mov    DWORD PTR [edi],eax
  41ba91:	movzx  ecx,BYTE PTR [eax]
  41ba94:	cmp    BYTE PTR [ecx+0x432118],0x0
  41ba9b:	jne    0x41b8f0
  41baa1:	pop    esi
  41baa2:	pop    ebp
  41baa3:	pop    ebx
  41baa4:	pop    edi
  41baa5:	add    esp,0x14
  41baa8:	ret    0x8
  41baab:	mov    esi,DWORD PTR [esi+0xc]
  41baae:	jmp    0x41ba6f
  41bab0:	lea    ecx,[esp+0x10]
  41bab4:	call   DWORD PTR ds:0x4303ac
  41baba:	push   0x435d14
  41babf:	lea    edx,[esp+0x14]
  41bac3:	push   edx
  41bac4:	mov    DWORD PTR [esp+0x18],0x43294c
  41bacc:	mov    DWORD PTR [esp+0x24],0x431fd8
  41bad4:	mov    DWORD PTR [esp+0x28],ebp
  41bad8:	call   0x429e76
  41badd:	lea    ecx,[esp+0x10]
  41bae1:	call   DWORD PTR ds:0x4303ac
  41bae7:	push   0x435d14
  41baec:	lea    eax,[esp+0x14]
  41baf0:	push   eax
  41baf1:	mov    DWORD PTR [esp+0x18],0x43294c
  41baf9:	mov    DWORD PTR [esp+0x24],0x431ff0
  41bb01:	mov    DWORD PTR [esp+0x28],ebp
  41bb05:	call   0x429e76
  41bb0a:	lea    ecx,[esp+0x10]
  41bb0e:	call   DWORD PTR ds:0x4303ac
  41bb14:	push   0x435d14
  41bb19:	lea    ecx,[esp+0x14]
  41bb1d:	push   ecx
  41bb1e:	mov    DWORD PTR [esp+0x18],0x43294c
  41bb26:	mov    DWORD PTR [esp+0x24],0x431ffc
  41bb2e:	mov    DWORD PTR [esp+0x28],ebp
  41bb32:	call   0x429e76
  41bb37:	lea    ecx,[esp+0x10]
  41bb3b:	mov    edi,eax
  41bb3d:	call   DWORD PTR ds:0x4303ac
  41bb43:	push   0x435d14
  41bb48:	lea    edx,[esp+0x14]
  41bb4c:	push   edx
  41bb4d:	mov    DWORD PTR [esp+0x18],0x43294c
  41bb55:	mov    DWORD PTR [esp+0x24],0x431ffc
  41bb5d:	mov    DWORD PTR [esp+0x28],edi
  41bb61:	call   0x429e76
  41bb66:	int3   
  41bb67:	int3   
  41bb68:	int3   
  41bb69:	int3   
  41bb6a:	int3   
  41bb6b:	int3   
  41bb6c:	int3   
  41bb6d:	int3   
  41bb6e:	int3   
  41bb6f:	int3   
  41bb70:	sub    esp,0x28
  41bb73:	push   ebx
  41bb74:	push   ebp
  41bb75:	push   esi
  41bb76:	mov    esi,DWORD PTR [esp+0x38]
  41bb7a:	push   edi
  41bb7b:	mov    edi,DWORD PTR [esp+0x40]
  41bb7f:	mov    ebp,ecx
  41bb81:	mov    ebx,DWORD PTR [esi]
  41bb83:	mov    eax,ebx
  41bb85:	movzx  ecx,BYTE PTR [eax]
  41bb88:	cmp    BYTE PTR [ecx+0x431ed8],0x0
  41bb8f:	je     0x41bb9f
  41bb91:	movzx  edx,BYTE PTR [eax+0x1]
  41bb95:	inc    eax
  41bb96:	cmp    BYTE PTR [edx+0x431ed8],0x0
  41bb9d:	jne    0x41bb91
  41bb9f:	mov    DWORD PTR [esi],eax
  41bba1:	mov    al,BYTE PTR [eax]
  41bba3:	test   al,al
  41bba5:	je     0x41bc7f
  41bbab:	cmp    al,0x3c
  41bbad:	je     0x41bbba
  41bbaf:	push   esi
  41bbb0:	push   edi
  41bbb1:	mov    eax,ebp
  41bbb3:	call   0x41d120
  41bbb8:	jmp    0x41bba3
  41bbba:	mov    eax,DWORD PTR [esi]
  41bbbc:	inc    eax
  41bbbd:	cmp    BYTE PTR [eax],0x2f
  41bbc0:	je     0x41bc00
  41bbc2:	mov    DWORD PTR [esi],eax
  41bbc4:	mov    edx,esi
  41bbc6:	mov    eax,ebp
  41bbc8:	call   0x4183f0
  41bbcd:	test   eax,eax
  41bbcf:	je     0x41bb81
  41bbd1:	xor    ecx,ecx
  41bbd3:	cmp    DWORD PTR [edi+0x18],ecx
  41bbd6:	je     0x41bbef
  41bbd8:	mov    edx,DWORD PTR [edi+0x1c]
  41bbdb:	mov    DWORD PTR [eax+0x28],edx
  41bbde:	mov    edx,DWORD PTR [edi+0x1c]
  41bbe1:	mov    DWORD PTR [edx+0x2c],eax
  41bbe4:	mov    DWORD PTR [edi+0x1c],eax
  41bbe7:	mov    DWORD PTR [eax+0x10],edi
  41bbea:	mov    DWORD PTR [eax+0x2c],ecx
  41bbed:	jmp    0x41bb81
  41bbef:	mov    DWORD PTR [eax+0x28],ecx
  41bbf2:	mov    DWORD PTR [edi+0x18],eax
  41bbf5:	mov    DWORD PTR [edi+0x1c],eax
  41bbf8:	mov    DWORD PTR [eax+0x10],edi
  41bbfb:	mov    DWORD PTR [eax+0x2c],ecx
  41bbfe:	jmp    0x41bb81
  41bc00:	add    DWORD PTR [esi],0x2
  41bc03:	mov    eax,DWORD PTR [esi]
  41bc05:	movzx  ecx,BYTE PTR [eax]
  41bc08:	cmp    BYTE PTR [ecx+0x432018],0x0
  41bc0f:	je     0x41bc1f
  41bc11:	movzx  edx,BYTE PTR [eax+0x1]
  41bc15:	inc    eax
  41bc16:	cmp    BYTE PTR [edx+0x432018],0x0
  41bc1d:	jne    0x41bc11
  41bc1f:	mov    DWORD PTR [esi],eax
  41bc21:	mov    edi,eax
  41bc23:	movzx  eax,BYTE PTR [eax]
  41bc26:	cmp    BYTE PTR [eax+0x431ed8],0x0
  41bc2d:	je     0x41bc3e
  41bc2f:	nop
  41bc30:	movzx  ecx,BYTE PTR [edi+0x1]
  41bc34:	inc    edi
  41bc35:	cmp    BYTE PTR [ecx+0x431ed8],0x0
  41bc3c:	jne    0x41bc30
  41bc3e:	mov    DWORD PTR [esi],edi
  41bc40:	cmp    BYTE PTR [edi],0x3e
  41bc43:	je     0x41bc72
  41bc45:	lea    ecx,[esp+0x10]
  41bc49:	call   DWORD PTR ds:0x4303ac
  41bc4f:	push   0x435d14
  41bc54:	lea    edx,[esp+0x14]
  41bc58:	push   edx
  41bc59:	mov    DWORD PTR [esp+0x18],0x43294c
  41bc61:	mov    DWORD PTR [esp+0x24],0x431e9c
  41bc69:	mov    DWORD PTR [esp+0x28],edi
  41bc6d:	call   0x429e76
  41bc72:	inc    edi
  41bc73:	mov    DWORD PTR [esi],edi
  41bc75:	pop    edi
  41bc76:	pop    esi
  41bc77:	pop    ebp
  41bc78:	pop    ebx
  41bc79:	add    esp,0x28
  41bc7c:	ret    0x8
  41bc7f:	mov    esi,DWORD PTR [esi]
  41bc81:	lea    ecx,[esp+0x24]
  41bc85:	call   DWORD PTR ds:0x4303ac
  41bc8b:	push   0x435d14
  41bc90:	lea    eax,[esp+0x28]
  41bc94:	push   eax
  41bc95:	mov    DWORD PTR [esp+0x2c],0x43294c
  41bc9d:	mov    DWORD PTR [esp+0x38],0x431e6c
  41bca5:	mov    DWORD PTR [esp+0x3c],esi
  41bca9:	call   0x429e76
  41bcae:	int3   
  41bcaf:	int3   
  41bcb0:	sub    esp,0x8
  41bcb3:	push   ebx
  41bcb4:	mov    ebx,DWORD PTR [esp+0x14]
  41bcb8:	push   ebp
  41bcb9:	push   esi
  41bcba:	push   edi
  41bcbb:	mov    edi,DWORD PTR [esp+0x1c]
  41bcbf:	mov    eax,ebx
  41bcc1:	sub    eax,edi
  41bcc3:	cmp    eax,0x20
  41bcc6:	jle    0x41bd26
  41bcc8:	mov    esi,DWORD PTR [esp+0x24]
  41bccc:	test   esi,esi
  41bcce:	jle    0x41bd41
  41bcd0:	push   ebx
  41bcd1:	lea    eax,[esp+0x14]
  41bcd5:	push   edi
  41bcd6:	push   eax
  41bcd7:	call   0x41d210
  41bcdc:	mov    ebp,DWORD PTR [esp+0x20]
  41bce0:	mov    eax,esi
  41bce2:	cdq    
  41bce3:	sub    eax,edx
  41bce5:	sar    eax,1
  41bce7:	mov    esi,eax
  41bce9:	cdq    
  41bcea:	sub    eax,edx
  41bcec:	sar    eax,1
  41bcee:	add    esi,eax
  41bcf0:	mov    eax,DWORD PTR [esp+0x1c]
  41bcf4:	mov    ecx,ebx
  41bcf6:	mov    edx,eax
  41bcf8:	add    esp,0xc
  41bcfb:	sub    ecx,ebp
  41bcfd:	sub    edx,edi
  41bcff:	cmp    edx,ecx
  41bd01:	push   esi
  41bd02:	jge    0x41bd0f
  41bd04:	push   eax
  41bd05:	push   edi
  41bd06:	call   0x41bcb0
  41bd0b:	mov    edi,ebp
  41bd0d:	jmp    0x41bd1a
  41bd0f:	push   ebx
  41bd10:	push   ebp
  41bd11:	call   0x41bcb0
  41bd16:	mov    ebx,DWORD PTR [esp+0x1c]
  41bd1a:	mov    eax,ebx
  41bd1c:	sub    eax,edi
  41bd1e:	add    esp,0xc
  41bd21:	cmp    eax,0x20
  41bd24:	jg     0x41bccc
  41bd26:	cmp    eax,0x1
  41bd29:	jle    0x41bd39
  41bd2b:	cmp    edi,ebx
  41bd2d:	je     0x41bd39
  41bd2f:	push   ebx
  41bd30:	push   edi
  41bd31:	call   0x41df80
  41bd36:	add    esp,0x8
  41bd39:	pop    edi
  41bd3a:	pop    esi
  41bd3b:	pop    ebp
  41bd3c:	pop    ebx
  41bd3d:	add    esp,0x8
  41bd40:	ret    
  41bd41:	cmp    eax,0x20
  41bd44:	jle    0x41bd26
  41bd46:	mov    esi,ebx
  41bd48:	sub    esi,edi
  41bd4a:	cmp    esi,0x1
  41bd4d:	jle    0x41bd39
  41bd4f:	push   ebx
  41bd50:	call   0x41df50
  41bd55:	add    esp,0x4
  41bd58:	cmp    esi,0x1
  41bd5b:	jle    0x41bd39
  41bd5d:	mov    al,BYTE PTR [edi]
  41bd5f:	mov    bl,BYTE PTR [edi+esi*1-0x1]
  41bd63:	mov    BYTE PTR [edi+esi*1-0x1],al
  41bd67:	lea    eax,[esi-0x1]
  41bd6a:	push   0x0
  41bd6c:	mov    ecx,edi
  41bd6e:	call   0x41e860
  41bd73:	dec    esi
  41bd74:	add    esp,0x4
  41bd77:	cmp    esi,0x1
  41bd7a:	jg     0x41bd5d
  41bd7c:	pop    edi
  41bd7d:	pop    esi
  41bd7e:	pop    ebp
  41bd7f:	pop    ebx
  41bd80:	add    esp,0x8
  41bd83:	ret    
  41bd84:	int3   
  41bd85:	int3   
  41bd86:	int3   
  41bd87:	int3   
  41bd88:	int3   
  41bd89:	int3   
  41bd8a:	int3   
  41bd8b:	int3   
  41bd8c:	int3   
  41bd8d:	int3   
  41bd8e:	int3   
  41bd8f:	int3   
  41bd90:	push   0xffffffff
  41bd92:	push   0x42c648
  41bd97:	mov    eax,fs:0x0
  41bd9d:	push   eax
  41bd9e:	push   ecx
  41bd9f:	push   esi
  41bda0:	mov    eax,ds:0x43e020
  41bda5:	xor    eax,esp
  41bda7:	push   eax
  41bda8:	lea    eax,[esp+0xc]
  41bdac:	mov    fs:0x0,eax
  41bdb2:	mov    DWORD PTR [esp+0x14],0x0
  41bdba:	mov    eax,DWORD PTR [esp+0x24]
  41bdbe:	sub    esp,0x10
  41bdc1:	mov    esi,esp
  41bdc3:	mov    DWORD PTR [esp+0x18],esp
  41bdc7:	mov    DWORD PTR [esi+0x8],eax
  41bdca:	mov    DWORD PTR [esi],0x0
  41bdd0:	cmp    eax,0x8
  41bdd3:	ja     0x41bddd
  41bdd5:	mov    eax,esi
  41bdd7:	lea    ecx,[esp+0x2c]
  41bddb:	jmp    0x41bdec
  41bddd:	push   eax
  41bdde:	call   0x425023
  41bde3:	mov    DWORD PTR [esi],eax
  41bde5:	mov    ecx,DWORD PTR [esp+0x30]
  41bde9:	add    esp,0x4
  41bdec:	mov    edx,DWORD PTR [esi+0x8]
  41bdef:	push   edx
  41bdf0:	push   ecx
  41bdf1:	push   eax
  41bdf2:	call   0x42a018
  41bdf7:	mov    eax,DWORD PTR [esp+0x44]
  41bdfb:	add    esp,0xc
  41bdfe:	mov    ecx,edi
  41be00:	mov    DWORD PTR [esi+0xc],eax
  41be03:	call   0x41d380
  41be08:	cmp    DWORD PTR [esp+0x24],0x8
  41be0d:	jbe    0x41be20
  41be0f:	mov    eax,DWORD PTR [esp+0x1c]
  41be13:	test   eax,eax
  41be15:	je     0x41be20
  41be17:	push   eax
  41be18:	call   0x42517c
  41be1d:	add    esp,0x4
  41be20:	mov    eax,edi
  41be22:	mov    ecx,DWORD PTR [esp+0xc]
  41be26:	mov    DWORD PTR fs:0x0,ecx
  41be2d:	pop    ecx
  41be2e:	pop    esi
  41be2f:	add    esp,0x10
  41be32:	ret    0x10
  41be35:	int3   
  41be36:	int3   
  41be37:	int3   
  41be38:	int3   
  41be39:	int3   
  41be3a:	int3   
  41be3b:	int3   
  41be3c:	int3   
  41be3d:	int3   
  41be3e:	int3   
  41be3f:	int3   
  41be40:	push   ebp
  41be41:	mov    ebp,esp
  41be43:	push   0xffffffff
  41be45:	push   0x42e068
  41be4a:	mov    eax,fs:0x0
  41be50:	push   eax
  41be51:	sub    esp,0x14
  41be54:	push   ebx
  41be55:	push   esi
  41be56:	push   edi
  41be57:	mov    eax,ds:0x43e020
  41be5c:	xor    eax,ebp
  41be5e:	push   eax
  41be5f:	lea    eax,[ebp-0xc]
  41be62:	mov    fs:0x0,eax
  41be68:	mov    DWORD PTR [ebp-0x10],esp
  41be6b:	mov    ebx,DWORD PTR [ebp+0x8]
  41be6e:	xor    eax,eax
  41be70:	mov    DWORD PTR [ebp-0x4],eax
  41be73:	mov    BYTE PTR [ebp-0x4],0x2
  41be77:	sub    esp,0x40
  41be7a:	mov    DWORD PTR [ebx+0xc],eax
  41be7d:	mov    DWORD PTR [ebx+0x10],eax
  41be80:	mov    DWORD PTR [ebx+0x14],eax
  41be83:	mov    eax,DWORD PTR [ebx]
  41be85:	mov    esi,esp
  41be87:	lea    edi,[ebp+0x50]
  41be8a:	mov    DWORD PTR [ebp-0x20],eax
  41be8d:	mov    DWORD PTR [ebp-0x14],esp
  41be90:	call   0x419a80
  41be95:	sub    esp,0x40
  41be98:	mov    esi,esp
  41be9a:	lea    edi,[ebp+0x10]
  41be9d:	mov    BYTE PTR [ebp-0x4],0x3
  41bea1:	mov    DWORD PTR [ebp-0x18],esp
  41bea4:	call   0x419a80
  41bea9:	mov    ecx,DWORD PTR [ebp-0x20]
  41beac:	xor    eax,eax
  41beae:	push   eax
  41beaf:	push   ecx
  41beb0:	push   ebx
  41beb1:	mov    BYTE PTR [ebp-0x4],0x2
  41beb5:	call   0x41d430
  41beba:	xor    esi,esi
  41bebc:	mov    DWORD PTR [ebp-0x4],esi
  41bebf:	mov    eax,DWORD PTR [ebp+0x10]
  41bec2:	cmp    eax,esi
  41bec4:	je     0x41bee4
  41bec6:	test   al,0x1
  41bec8:	jne    0x41bee1
  41beca:	and    eax,0xfffffffe
  41becd:	mov    eax,DWORD PTR [eax]
  41becf:	cmp    eax,esi
  41bed1:	je     0x41bee1
  41bed3:	lea    edx,[ebp+0x18]
  41bed6:	push   0x2
  41bed8:	push   edx
  41bed9:	mov    ecx,edx
  41bedb:	push   ecx
  41bedc:	call   eax
  41bede:	add    esp,0xc
  41bee1:	mov    DWORD PTR [ebp+0x10],esi
  41bee4:	mov    DWORD PTR [ebp-0x4],0xffffffff
  41beeb:	mov    eax,DWORD PTR [ebp+0x50]
  41beee:	cmp    eax,esi
  41bef0:	je     0x41bf0d
  41bef2:	test   al,0x1
  41bef4:	jne    0x41bf0d
  41bef6:	and    eax,0xfffffffe
  41bef9:	mov    eax,DWORD PTR [eax]
  41befb:	cmp    eax,esi
  41befd:	je     0x41bf0d
  41beff:	lea    edx,[ebp+0x58]
  41bf02:	push   0x2
  41bf04:	push   edx
  41bf05:	mov    ecx,edx
  41bf07:	push   ecx
  41bf08:	call   eax
  41bf0a:	add    esp,0xc
  41bf0d:	mov    ecx,DWORD PTR [ebp-0xc]
  41bf10:	mov    DWORD PTR fs:0x0,ecx
  41bf17:	pop    ecx
  41bf18:	pop    edi
  41bf19:	pop    esi
  41bf1a:	pop    ebx
  41bf1b:	mov    esp,ebp
  41bf1d:	pop    ebp
  41bf1e:	ret    0x88
  41bf21:	mov    ebx,DWORD PTR [ebp+0x8]
  41bf24:	call   0x413590
  41bf29:	push   0x0
  41bf2b:	push   0x0
  41bf2d:	call   0x429e76
  41bf32:	int3   
  41bf33:	int3   
  41bf34:	int3   
  41bf35:	int3   
  41bf36:	int3   
  41bf37:	int3   
  41bf38:	int3   
  41bf39:	int3   
  41bf3a:	int3   
  41bf3b:	int3   
  41bf3c:	int3   
  41bf3d:	int3   
  41bf3e:	int3   
  41bf3f:	int3   
  41bf40:	push   0xffffffff
  41bf42:	push   0x42cca2
  41bf47:	mov    eax,fs:0x0
  41bf4d:	push   eax
  41bf4e:	sub    esp,0x6c
  41bf51:	push   ebx
  41bf52:	push   ebp
  41bf53:	push   esi
  41bf54:	push   edi
  41bf55:	mov    eax,ds:0x43e020
  41bf5a:	xor    eax,esp
  41bf5c:	push   eax
  41bf5d:	lea    eax,[esp+0x80]
  41bf64:	mov    fs:0x0,eax
  41bf6a:	mov    ebx,DWORD PTR [esp+0x90]
  41bf71:	mov    eax,DWORD PTR [esp+0xb0]
  41bf78:	mov    ecx,DWORD PTR [esp+0xb8]
  41bf7f:	mov    edx,DWORD PTR [esp+0xbc]
  41bf86:	mov    ebp,DWORD PTR [esp+0xa8]
  41bf8d:	mov    edi,DWORD PTR [esp+0xac]
  41bf94:	mov    esi,DWORD PTR [esp+0xb4]
  41bf9b:	push   0x4
  41bf9d:	mov    DWORD PTR [esp+0x50],eax
  41bfa1:	mov    DWORD PTR [esp+0x58],ecx
  41bfa5:	mov    DWORD PTR [esp+0x5c],edx
  41bfa9:	call   0x425050
  41bfae:	xor    ecx,ecx
  41bfb0:	add    esp,0x4
  41bfb3:	cmp    eax,ecx
  41bfb5:	je     0x41bfbf
  41bfb7:	lea    edx,[esp+0x60]
  41bfbb:	mov    DWORD PTR [eax],edx
  41bfbd:	jmp    0x41bfc1
  41bfbf:	xor    eax,eax
  41bfc1:	mov    DWORD PTR [esp+0x60],eax
  41bfc5:	mov    DWORD PTR [esp+0x70],ecx
  41bfc9:	mov    DWORD PTR [esp+0x74],ecx
  41bfcd:	mov    DWORD PTR [esp+0x78],ecx
  41bfd1:	mov    DWORD PTR [esp+0x7c],ecx
  41bfd5:	lea    eax,[esp+0x1c]
  41bfd9:	mov    DWORD PTR [esp+0x88],ecx
  41bfe0:	push   eax
  41bfe1:	mov    ecx,ebx
  41bfe3:	call   DWORD PTR ds:0x430128
  41bfe9:	lea    ecx,[esp+0x24]
  41bfed:	push   ecx
  41bfee:	mov    ecx,ebx
  41bff0:	call   DWORD PTR ds:0x430128
  41bff6:	cmp    ebp,0xfffffffc
  41bff9:	je     0x41c00b
  41bffb:	test   ebp,ebp
  41bffd:	je     0x41c005
  41bfff:	cmp    ebp,DWORD PTR [esp+0x4c]
  41c003:	je     0x41c00b
  41c005:	call   DWORD PTR ds:0x430390
  41c00b:	cmp    edi,esi
  41c00d:	je     0x41c114
  41c013:	mov    edx,DWORD PTR [esp+0x28]
  41c017:	mov    eax,DWORD PTR [esp+0x24]
  41c01b:	mov    ecx,DWORD PTR [esp+0x20]
  41c01f:	push   edi
  41c020:	push   ebp
  41c021:	push   edx
  41c022:	mov    edx,DWORD PTR [esp+0x28]
  41c026:	push   eax
  41c027:	push   ecx
  41c028:	push   edx
  41c029:	lea    eax,[esp+0x2c]
  41c02d:	push   eax
  41c02e:	lea    eax,[esp+0x7c]
  41c032:	call   0x401c30
  41c037:	mov    ecx,DWORD PTR [esp+0x14]
  41c03b:	mov    eax,DWORD PTR [esp+0x4c]
  41c03f:	mov    edx,DWORD PTR [esp+0x18]
  41c043:	mov    DWORD PTR [esp+0x1c],ecx
  41c047:	mov    ecx,DWORD PTR [esp+0x7c]
  41c04b:	mov    DWORD PTR [esp+0x24],eax
  41c04f:	mov    eax,DWORD PTR [esp+0x78]
  41c053:	lea    edi,[ecx+eax*1]
  41c056:	mov    DWORD PTR [esp+0x20],edx
  41c05a:	mov    DWORD PTR [esp+0x28],esi
  41c05e:	cmp    eax,edi
  41c060:	jbe    0x41c068
  41c062:	call   DWORD PTR ds:0x430390
  41c068:	mov    eax,DWORD PTR [esp+0x60]
  41c06c:	mov    edx,DWORD PTR [esp+0xb8]
  41c073:	push   edi
  41c074:	push   eax
  41c075:	mov    eax,DWORD PTR [esp+0x60]
  41c079:	push   edx
  41c07a:	push   eax
  41c07b:	lea    ecx,[esp+0x70]
  41c07f:	push   ecx
  41c080:	mov    ecx,DWORD PTR [esp+0x68]
  41c084:	call   0x41e990
  41c089:	lea    edx,[esp+0x2c]
  41c08d:	push   edx
  41c08e:	mov    ecx,ebx
  41c090:	call   DWORD PTR ds:0x430124
  41c096:	mov    eax,DWORD PTR [esp+0x30]
  41c09a:	mov    ecx,DWORD PTR [esp+0x2c]
  41c09e:	mov    edx,DWORD PTR [esp+0x28]
  41c0a2:	push   eax
  41c0a3:	mov    eax,DWORD PTR [esp+0x28]
  41c0a7:	push   ecx
  41c0a8:	push   edx
  41c0a9:	push   eax
  41c0aa:	lea    ecx,[esp+0x44]
  41c0ae:	push   ecx
  41c0af:	lea    edx,[esp+0xa8]
  41c0b6:	push   edx
  41c0b7:	call   0x41a2d0
  41c0bc:	mov    ecx,DWORD PTR [eax]
  41c0be:	mov    ebx,DWORD PTR [eax+0xc]
  41c0c1:	mov    edx,DWORD PTR [eax+0x8]
  41c0c4:	mov    edi,DWORD PTR [eax+0x4]
  41c0c7:	mov    esi,ebx
  41c0c9:	mov    ebp,ecx
  41c0cb:	mov    DWORD PTR [esp+0x4c],edx
  41c0cf:	mov    DWORD PTR [esp+0x50],esi
  41c0d3:	cmp    ecx,0xfffffffc
  41c0d6:	je     0x41c0ea
  41c0d8:	test   ecx,ecx
  41c0da:	je     0x41c0e0
  41c0dc:	cmp    ecx,edx
  41c0de:	je     0x41c0ea
  41c0e0:	call   DWORD PTR ds:0x430390
  41c0e6:	mov    esi,DWORD PTR [esp+0x50]
  41c0ea:	cmp    edi,ebx
  41c0ec:	mov    ebx,DWORD PTR [esp+0x90]
  41c0f3:	je     0x41bff6
  41c0f9:	mov    eax,DWORD PTR [esp+0xa0]
  41c100:	mov    ecx,DWORD PTR [esp+0xa4]
  41c107:	mov    DWORD PTR [esp+0x54],eax
  41c10b:	mov    DWORD PTR [esp+0x58],ecx
  41c10f:	jmp    0x41bff6
  41c114:	lea    edx,[esp+0x2c]
  41c118:	push   edx
  41c119:	mov    ecx,ebx
  41c11b:	call   DWORD PTR ds:0x430124
  41c121:	mov    eax,DWORD PTR [esp+0x30]
  41c125:	mov    ecx,DWORD PTR [esp+0x2c]
  41c129:	mov    edx,DWORD PTR [esp+0x28]
  41c12d:	push   eax
  41c12e:	mov    eax,DWORD PTR [esp+0x28]
  41c132:	push   ecx
  41c133:	mov    ecx,DWORD PTR [esp+0x28]
  41c137:	push   edx
  41c138:	mov    edx,DWORD PTR [esp+0x28]
  41c13c:	push   eax
  41c13d:	push   ecx
  41c13e:	push   edx
  41c13f:	lea    eax,[esp+0x2c]
  41c143:	push   eax
  41c144:	lea    eax,[esp+0x7c]
  41c148:	call   0x401c30
  41c14d:	mov    ecx,DWORD PTR [esp+0x14]
  41c151:	mov    edx,DWORD PTR [esp+0x18]
  41c155:	mov    DWORD PTR [esp+0x1c],ecx
  41c159:	mov    ecx,DWORD PTR [esp+0x7c]
  41c15d:	mov    DWORD PTR [esp+0x20],edx
  41c161:	test   ecx,ecx
  41c163:	jne    0x41c195
  41c165:	lea    eax,[esp+0x2c]
  41c169:	push   eax
  41c16a:	mov    ecx,ebx
  41c16c:	call   DWORD PTR ds:0x430124
  41c172:	mov    ecx,DWORD PTR [esp+0x30]
  41c176:	mov    edx,DWORD PTR [esp+0x2c]
  41c17a:	mov    eax,DWORD PTR [esp+0x20]
  41c17e:	push   ecx
  41c17f:	mov    ecx,DWORD PTR [esp+0x20]
  41c183:	push   edx
  41c184:	push   eax
  41c185:	push   ecx
  41c186:	lea    edx,[esp+0x24]
  41c18a:	push   edx
  41c18b:	mov    ecx,ebx
  41c18d:	call   DWORD PTR ds:0x43013c
  41c193:	jmp    0x41c1f8
  41c195:	mov    eax,DWORD PTR [esp+0x78]
  41c199:	lea    edx,[ecx+eax*1]
  41c19c:	mov    DWORD PTR [esp+0x14],edx
  41c1a0:	cmp    eax,edx
  41c1a2:	jbe    0x41c1b2
  41c1a4:	call   DWORD PTR ds:0x430390
  41c1aa:	mov    ecx,DWORD PTR [esp+0x7c]
  41c1ae:	mov    eax,DWORD PTR [esp+0x78]
  41c1b2:	mov    edi,DWORD PTR [esp+0x60]
  41c1b6:	add    ecx,eax
  41c1b8:	mov    ebp,eax
  41c1ba:	cmp    eax,ecx
  41c1bc:	jbe    0x41c1c4
  41c1be:	call   DWORD PTR ds:0x430390
  41c1c4:	mov    esi,DWORD PTR [esp+0x60]
  41c1c8:	lea    eax,[esp+0x2c]
  41c1cc:	push   eax
  41c1cd:	mov    ecx,ebx
  41c1cf:	call   DWORD PTR ds:0x430124
  41c1d5:	mov    ecx,DWORD PTR [esp+0x14]
  41c1d9:	mov    eax,DWORD PTR [esp+0x30]
  41c1dd:	mov    edx,DWORD PTR [esp+0xb8]
  41c1e4:	push   ecx
  41c1e5:	mov    ecx,DWORD PTR [esp+0x30]
  41c1e9:	push   edi
  41c1ea:	push   ebp
  41c1eb:	push   esi
  41c1ec:	push   eax
  41c1ed:	push   ecx
  41c1ee:	push   eax
  41c1ef:	push   ecx
  41c1f0:	push   edx
  41c1f1:	mov    esi,ebx
  41c1f3:	call   0x402670
  41c1f8:	lea    esi,[esp+0x60]
  41c1fc:	mov    DWORD PTR [esp+0x88],0x1
  41c207:	call   0x401b60
  41c20c:	mov    eax,DWORD PTR [esp+0x60]
  41c210:	push   eax
  41c211:	call   0x42504a
  41c216:	add    esp,0x4
  41c219:	mov    ecx,DWORD PTR [esp+0x80]
  41c220:	mov    DWORD PTR fs:0x0,ecx
  41c227:	pop    ecx
  41c228:	pop    edi
  41c229:	pop    esi
  41c22a:	pop    ebp
  41c22b:	pop    ebx
  41c22c:	add    esp,0x78
  41c22f:	ret    
  41c230:	mov    ecx,DWORD PTR [esp+0x8]
  41c234:	sub    esp,0x10
  41c237:	push   ebp
  41c238:	mov    ebp,DWORD PTR [esp+0x18]
  41c23c:	push   esi
  41c23d:	push   edi
  41c23e:	mov    edi,eax
  41c240:	sub    ecx,edi
  41c242:	mov    eax,0x2aaaaaab
  41c247:	imul   ecx
  41c249:	sar    edx,0x4
  41c24c:	mov    eax,edx
  41c24e:	shr    eax,0x1f
  41c251:	add    eax,edx
  41c253:	cmp    eax,0x28
  41c256:	push   edi
  41c257:	jle    0x41c3bd
  41c25d:	inc    eax
  41c25e:	cdq    
  41c25f:	and    edx,0x7
  41c262:	add    eax,edx
  41c264:	sar    eax,0x3
  41c267:	lea    ecx,[eax+eax*2]
  41c26a:	lea    eax,[eax+eax*2]
  41c26d:	shl    eax,0x5
  41c270:	lea    esi,[eax+edi*1]
  41c273:	shl    ecx,0x6
  41c276:	push   esi
  41c277:	mov    DWORD PTR [esp+0x18],ecx
  41c27b:	mov    DWORD PTR [esp+0x20],eax
  41c27f:	mov    DWORD PTR [esp+0x14],esi
  41c283:	call   ebx
  41c285:	add    esp,0x8
  41c288:	test   eax,eax
  41c28a:	je     0x41c29b
  41c28c:	mov    ecx,DWORD PTR [esp+0xc]
  41c290:	mov    esi,edi
  41c292:	call   0x41d530
  41c297:	mov    esi,DWORD PTR [esp+0xc]
  41c29b:	mov    eax,DWORD PTR [esp+0x10]
  41c29f:	add    eax,edi
  41c2a1:	push   esi
  41c2a2:	push   eax
  41c2a3:	call   ebx
  41c2a5:	add    esp,0x8
  41c2a8:	test   eax,eax
  41c2aa:	je     0x41c2bb
  41c2ac:	mov    ecx,DWORD PTR [esp+0x10]
  41c2b0:	add    ecx,edi
  41c2b2:	call   0x41d530
  41c2b7:	mov    esi,DWORD PTR [esp+0xc]
  41c2bb:	push   edi
  41c2bc:	push   esi
  41c2bd:	call   ebx
  41c2bf:	add    esp,0x8
  41c2c2:	test   eax,eax
  41c2c4:	je     0x41c2d1
  41c2c6:	mov    ecx,DWORD PTR [esp+0xc]
  41c2ca:	mov    esi,edi
  41c2cc:	call   0x41d530
  41c2d1:	mov    eax,DWORD PTR [esp+0x18]
  41c2d5:	mov    edi,ebp
  41c2d7:	sub    edi,eax
  41c2d9:	lea    edx,[eax+ebp*1]
  41c2dc:	push   edi
  41c2dd:	push   ebp
  41c2de:	mov    DWORD PTR [esp+0x1c],edx
  41c2e2:	call   ebx
  41c2e4:	add    esp,0x8
  41c2e7:	test   eax,eax
  41c2e9:	je     0x41c2f4
  41c2eb:	mov    esi,edi
  41c2ed:	mov    ecx,ebp
  41c2ef:	call   0x41d530
  41c2f4:	mov    eax,DWORD PTR [esp+0x14]
  41c2f8:	push   ebp
  41c2f9:	push   eax
  41c2fa:	call   ebx
  41c2fc:	add    esp,0x8
  41c2ff:	test   eax,eax
  41c301:	je     0x41c30e
  41c303:	mov    ecx,DWORD PTR [esp+0x14]
  41c307:	mov    esi,ebp
  41c309:	call   0x41d530
  41c30e:	push   edi
  41c30f:	push   ebp
  41c310:	call   ebx
  41c312:	add    esp,0x8
  41c315:	test   eax,eax
  41c317:	je     0x41c322
  41c319:	mov    esi,edi
  41c31b:	mov    ecx,ebp
  41c31d:	call   0x41d530
  41c322:	mov    esi,DWORD PTR [esp+0x24]
  41c326:	mov    edi,esi
  41c328:	sub    esi,DWORD PTR [esp+0x10]
  41c32c:	sub    edi,DWORD PTR [esp+0x18]
  41c330:	push   esi
  41c331:	push   edi
  41c332:	mov    DWORD PTR [esp+0x20],esi
  41c336:	call   ebx
  41c338:	add    esp,0x8
  41c33b:	test   eax,eax
  41c33d:	je     0x41c346
  41c33f:	mov    ecx,edi
  41c341:	call   0x41d530
  41c346:	mov    ecx,DWORD PTR [esp+0x24]
  41c34a:	push   edi
  41c34b:	push   ecx
  41c34c:	call   ebx
  41c34e:	add    esp,0x8
  41c351:	test   eax,eax
  41c353:	je     0x41c364
  41c355:	mov    ecx,DWORD PTR [esp+0x24]
  41c359:	mov    esi,edi
  41c35b:	call   0x41d530
  41c360:	mov    esi,DWORD PTR [esp+0x18]
  41c364:	push   esi
  41c365:	push   edi
  41c366:	call   ebx
  41c368:	add    esp,0x8
  41c36b:	test   eax,eax
  41c36d:	je     0x41c376
  41c36f:	mov    ecx,edi
  41c371:	call   0x41d530
  41c376:	mov    esi,DWORD PTR [esp+0xc]
  41c37a:	push   esi
  41c37b:	push   ebp
  41c37c:	call   ebx
  41c37e:	add    esp,0x8
  41c381:	test   eax,eax
  41c383:	je     0x41c38c
  41c385:	mov    ecx,ebp
  41c387:	call   0x41d530
  41c38c:	push   ebp
  41c38d:	push   edi
  41c38e:	call   ebx
  41c390:	add    esp,0x8
  41c393:	test   eax,eax
  41c395:	je     0x41c3a4
  41c397:	mov    esi,ebp
  41c399:	mov    ecx,edi
  41c39b:	call   0x41d530
  41c3a0:	mov    esi,DWORD PTR [esp+0xc]
  41c3a4:	push   esi
  41c3a5:	push   ebp
  41c3a6:	call   ebx
  41c3a8:	add    esp,0x8
  41c3ab:	test   eax,eax
  41c3ad:	je     0x41c3fe
  41c3af:	mov    ecx,ebp
  41c3b1:	call   0x41d530
  41c3b6:	pop    edi
  41c3b7:	pop    esi
  41c3b8:	pop    ebp
  41c3b9:	add    esp,0x10
  41c3bc:	ret    
  41c3bd:	push   ebp
  41c3be:	call   ebx
  41c3c0:	add    esp,0x8
  41c3c3:	test   eax,eax
  41c3c5:	je     0x41c3d0
  41c3c7:	mov    esi,edi
  41c3c9:	mov    ecx,ebp
  41c3cb:	call   0x41d530
  41c3d0:	mov    edx,DWORD PTR [esp+0x24]
  41c3d4:	push   ebp
  41c3d5:	push   edx
  41c3d6:	call   ebx
  41c3d8:	add    esp,0x8
  41c3db:	test   eax,eax
  41c3dd:	je     0x41c3ea
  41c3df:	mov    ecx,DWORD PTR [esp+0x24]
  41c3e3:	mov    esi,ebp
  41c3e5:	call   0x41d530
  41c3ea:	push   edi
  41c3eb:	push   ebp
  41c3ec:	call   ebx
  41c3ee:	add    esp,0x8
  41c3f1:	test   eax,eax
  41c3f3:	je     0x41c3fe
  41c3f5:	mov    esi,edi
  41c3f7:	mov    ecx,ebp
  41c3f9:	call   0x41d530
  41c3fe:	pop    edi
  41c3ff:	pop    esi
  41c400:	pop    ebp
  41c401:	add    esp,0x10
  41c404:	ret    
  41c405:	int3   
  41c406:	int3   
  41c407:	int3   
  41c408:	int3   
  41c409:	int3   
  41c40a:	int3   
  41c40b:	int3   
  41c40c:	int3   
  41c40d:	int3   
  41c40e:	int3   
  41c40f:	int3   
  41c410:	push   ebx
  41c411:	push   ebp
  41c412:	mov    ebp,DWORD PTR [esp+0xc]
  41c416:	sub    eax,ebp
  41c418:	mov    ecx,eax
  41c41a:	mov    eax,0x2aaaaaab
  41c41f:	imul   ecx
  41c421:	sar    edx,0x4
  41c424:	mov    ebx,edx
  41c426:	shr    ebx,0x1f
  41c429:	add    ebx,edx
  41c42b:	mov    eax,ebx
  41c42d:	cdq    
  41c42e:	push   esi
  41c42f:	sub    eax,edx
  41c431:	mov    esi,eax
  41c433:	sar    esi,1
  41c435:	push   edi
  41c436:	test   esi,esi
  41c438:	jle    0x41c46a
  41c43a:	lea    edi,[esi+esi*2]
  41c43d:	shl    edi,0x5
  41c440:	add    edi,ebp
  41c442:	mov    eax,DWORD PTR [esp+0x18]
  41c446:	push   eax
  41c447:	sub    esp,0x60
  41c44a:	mov    ecx,esp
  41c44c:	mov    DWORD PTR [esp+0x78],esp
  41c450:	sub    edi,0x60
  41c453:	push   ecx
  41c454:	dec    esi
  41c455:	call   0x415ab0
  41c45a:	push   ebx
  41c45b:	push   ebp
  41c45c:	mov    ecx,esi
  41c45e:	call   0x41d620
  41c463:	add    esp,0x6c
  41c466:	test   esi,esi
  41c468:	jg     0x41c442
  41c46a:	pop    edi
  41c46b:	pop    esi
  41c46c:	pop    ebp
  41c46d:	pop    ebx
  41c46e:	ret    
  41c46f:	int3   
  41c470:	push   ecx
  41c471:	push   ebx
  41c472:	push   ebp
  41c473:	mov    ebp,DWORD PTR [esp+0x10]
  41c477:	push   esi
  41c478:	push   edi
  41c479:	mov    edi,eax
  41c47b:	mov    esi,ecx
  41c47d:	mov    ecx,edi
  41c47f:	sub    ecx,esi
  41c481:	mov    eax,0x2aaaaaab
  41c486:	imul   ecx
  41c488:	sar    edx,0x4
  41c48b:	mov    eax,edx
  41c48d:	shr    eax,0x1f
  41c490:	add    eax,edx
  41c492:	cmp    eax,0x1
  41c495:	jle    0x41c4de
  41c497:	mov    ebx,0x60
  41c49c:	add    edi,0xffffffa0
  41c49f:	sub    ebx,esi
  41c4a1:	cmp    eax,0x1
  41c4a4:	jle    0x41c4c2
  41c4a6:	push   ebp
  41c4a7:	sub    esp,0x60
  41c4aa:	mov    eax,esp
  41c4ac:	mov    DWORD PTR [esp+0x74],esp
  41c4b0:	push   eax
  41c4b1:	call   0x415ab0
  41c4b6:	mov    edx,edi
  41c4b8:	mov    ecx,edi
  41c4ba:	call   0x41eb00
  41c4bf:	add    esp,0x64
  41c4c2:	sub    edi,0x60
  41c4c5:	lea    ecx,[ebx+edi*1]
  41c4c8:	mov    eax,0x2aaaaaab
  41c4cd:	imul   ecx
  41c4cf:	sar    edx,0x4
  41c4d2:	mov    eax,edx
  41c4d4:	shr    eax,0x1f
  41c4d7:	add    eax,edx
  41c4d9:	cmp    eax,0x1
  41c4dc:	jg     0x41c4a6
  41c4de:	pop    edi
  41c4df:	pop    esi
  41c4e0:	pop    ebp
  41c4e1:	pop    ebx
  41c4e2:	pop    ecx
  41c4e3:	ret    
  41c4e4:	int3   
  41c4e5:	int3   
  41c4e6:	int3   
  41c4e7:	int3   
  41c4e8:	int3   
  41c4e9:	int3   
  41c4ea:	int3   
  41c4eb:	int3   
  41c4ec:	int3   
  41c4ed:	int3   
  41c4ee:	int3   
  41c4ef:	int3   
  41c4f0:	push   0xffffffff
  41c4f2:	push   0x42ba2c
  41c4f7:	mov    eax,fs:0x0
  41c4fd:	push   eax
  41c4fe:	sub    esp,0x78
  41c501:	mov    eax,ds:0x43e020
  41c506:	xor    eax,esp
  41c508:	mov    DWORD PTR [esp+0x70],eax
  41c50c:	push   ebx
  41c50d:	push   ebp
  41c50e:	push   esi
  41c50f:	push   edi
  41c510:	mov    eax,ds:0x43e020
  41c515:	xor    eax,esp
  41c517:	push   eax
  41c518:	lea    eax,[esp+0x8c]
  41c51f:	mov    fs:0x0,eax
  41c525:	mov    ebp,DWORD PTR [esp+0x9c]
  41c52c:	mov    eax,DWORD PTR [esp+0xa4]
  41c533:	lea    edi,[ebp+0x60]
  41c536:	mov    DWORD PTR [esp+0x18],eax
  41c53a:	cmp    edi,DWORD PTR [esp+0xa0]
  41c541:	je     0x41c6d3
  41c547:	lea    esi,[edi-0x60]
  41c54a:	mov    DWORD PTR [esp+0x14],esi
  41c54e:	mov    edi,edi
  41c550:	lea    ecx,[esp+0x24]
  41c554:	push   ecx
  41c555:	mov    ebx,edi
  41c557:	call   0x415ab0
  41c55c:	lea    edx,[esp+0x24]
  41c560:	push   ebp
  41c561:	push   edx
  41c562:	mov    DWORD PTR [esp+0x9c],0x0
  41c56d:	call   DWORD PTR [esp+0x20]
  41c571:	add    esp,0x8
  41c574:	test   eax,eax
  41c576:	je     0x41c5e3
  41c578:	mov    BYTE PTR [esp+0x20],0x0
  41c57d:	mov    eax,DWORD PTR [esp+0x20]
  41c581:	push   eax
  41c582:	mov    BYTE PTR [esp+0x20],0x0
  41c587:	mov    ecx,DWORD PTR [esp+0x20]
  41c58b:	mov    edx,DWORD PTR [esp+0x20]
  41c58f:	push   ecx
  41c590:	push   edx
  41c591:	lea    eax,[esi+0xc0]
  41c597:	mov    ecx,edi
  41c599:	mov    ebx,ebp
  41c59b:	call   0x41ca70
  41c5a0:	add    esp,0xc
  41c5a3:	lea    eax,[esp+0x28]
  41c5a7:	push   eax
  41c5a8:	lea    ecx,[ebp+0x4]
  41c5ab:	call   DWORD PTR ds:0x43017c
  41c5b1:	lea    ecx,[esp+0x44]
  41c5b5:	push   ecx
  41c5b6:	lea    ecx,[ebp+0x20]
  41c5b9:	call   DWORD PTR ds:0x43017c
  41c5bf:	lea    edx,[esp+0x60]
  41c5c3:	push   edx
  41c5c4:	lea    ecx,[ebp+0x3c]
  41c5c7:	call   DWORD PTR ds:0x43017c
  41c5cd:	mov    eax,DWORD PTR [esp+0x7c]
  41c5d1:	mov    ecx,DWORD PTR [esp+0x80]
  41c5d8:	mov    DWORD PTR [ebp+0x58],eax
  41c5db:	mov    DWORD PTR [ebp+0x5c],ecx
  41c5de:	jmp    0x41c680
  41c5e3:	mov    edx,DWORD PTR [esp+0x14]
  41c5e7:	push   edx
  41c5e8:	lea    eax,[esp+0x28]
  41c5ec:	push   eax
  41c5ed:	call   DWORD PTR [esp+0x20]
  41c5f1:	add    esp,0x8
  41c5f4:	test   eax,eax
  41c5f6:	je     0x41c641
  41c5f8:	lea    ecx,[esi+0x4]
  41c5fb:	push   ecx
  41c5fc:	lea    ecx,[ebx+0x4]
  41c5ff:	call   DWORD PTR ds:0x43017c
  41c605:	lea    edx,[esi+0x20]
  41c608:	push   edx
  41c609:	lea    ecx,[ebx+0x20]
  41c60c:	call   DWORD PTR ds:0x43017c
  41c612:	lea    eax,[esi+0x3c]
  41c615:	push   eax
  41c616:	lea    ecx,[ebx+0x3c]
  41c619:	call   DWORD PTR ds:0x43017c
  41c61f:	mov    ecx,DWORD PTR [esi+0x58]
  41c622:	mov    DWORD PTR [ebx+0x58],ecx
  41c625:	mov    edx,DWORD PTR [esi+0x5c]
  41c628:	mov    DWORD PTR [ebx+0x5c],edx
  41c62b:	mov    ebx,esi
  41c62d:	sub    esi,0x60
  41c630:	lea    eax,[esp+0x24]
  41c634:	push   esi
  41c635:	push   eax
  41c636:	call   DWORD PTR [esp+0x20]
  41c63a:	add    esp,0x8
  41c63d:	test   eax,eax
  41c63f:	jne    0x41c5f8
  41c641:	lea    ecx,[esp+0x28]
  41c645:	push   ecx
  41c646:	lea    ecx,[ebx+0x4]
  41c649:	call   DWORD PTR ds:0x43017c
  41c64f:	lea    edx,[esp+0x44]
  41c653:	push   edx
  41c654:	lea    ecx,[ebx+0x20]
  41c657:	call   DWORD PTR ds:0x43017c
  41c65d:	lea    eax,[esp+0x60]
  41c661:	push   eax
  41c662:	lea    ecx,[ebx+0x3c]
  41c665:	call   DWORD PTR ds:0x43017c
  41c66b:	mov    ecx,DWORD PTR [esp+0x7c]
  41c66f:	mov    edx,DWORD PTR [esp+0x80]
  41c676:	mov    esi,DWORD PTR [esp+0x14]
  41c67a:	mov    DWORD PTR [ebx+0x58],ecx
  41c67d:	mov    DWORD PTR [ebx+0x5c],edx
  41c680:	lea    ecx,[esp+0x60]
  41c684:	mov    DWORD PTR [esp+0x94],0x2
  41c68f:	call   DWORD PTR ds:0x430264
  41c695:	lea    ecx,[esp+0x44]
  41c699:	mov    BYTE PTR [esp+0x94],0x1
  41c6a1:	call   DWORD PTR ds:0x430264
  41c6a7:	lea    ecx,[esp+0x28]
  41c6ab:	mov    DWORD PTR [esp+0x94],0xffffffff
  41c6b6:	call   DWORD PTR ds:0x430264
  41c6bc:	add    edi,0x60
  41c6bf:	add    esi,0x60
  41c6c2:	mov    DWORD PTR [esp+0x14],esi
  41c6c6:	cmp    edi,DWORD PTR [esp+0xa0]
  41c6cd:	jne    0x41c550
  41c6d3:	mov    ecx,DWORD PTR [esp+0x8c]
  41c6da:	mov    DWORD PTR fs:0x0,ecx
  41c6e1:	pop    ecx
  41c6e2:	pop    edi
  41c6e3:	pop    esi
  41c6e4:	pop    ebp
  41c6e5:	pop    ebx
  41c6e6:	mov    ecx,DWORD PTR [esp+0x70]
  41c6ea:	xor    ecx,esp
  41c6ec:	call   0x42503a
  41c6f1:	add    esp,0x84
  41c6f7:	ret    
  41c6f8:	int3   
  41c6f9:	int3   
  41c6fa:	int3   
  41c6fb:	int3   
  41c6fc:	int3   
  41c6fd:	int3   
  41c6fe:	int3   
  41c6ff:	int3   
  41c700:	push   0xffffffff
  41c702:	push   0x42c618
  41c707:	mov    eax,fs:0x0
  41c70d:	push   eax
  41c70e:	push   ecx
  41c70f:	push   ebx
  41c710:	push   esi
  41c711:	push   edi
  41c712:	mov    eax,ds:0x43e020
  41c717:	xor    eax,esp
  41c719:	push   eax
  41c71a:	lea    eax,[esp+0x14]
  41c71e:	mov    fs:0x0,eax
  41c724:	mov    edi,ecx
  41c726:	xor    eax,eax
  41c728:	mov    DWORD PTR [esp+0x1c],eax
  41c72c:	mov    ecx,DWORD PTR [esp+0x24]
  41c730:	mov    BYTE PTR [esp+0x10],al
  41c734:	mov    eax,DWORD PTR [esp+0x10]
  41c738:	push   eax
  41c739:	sub    esp,0x44
  41c73c:	mov    eax,esp
  41c73e:	lea    esi,[eax+0x4]
  41c741:	mov    DWORD PTR [esp+0x58],esp
  41c745:	mov    DWORD PTR [eax],ecx
  41c747:	push   esi
  41c748:	lea    ecx,[esp+0x74]
  41c74c:	call   0x417d60
  41c751:	mov    edx,DWORD PTR [esp+0xac]
  41c758:	mov    DWORD PTR [esi+0x3c],edx
  41c75b:	call   0x41d7a0
  41c760:	mov    bl,al
  41c762:	lea    eax,[esp+0x28]
  41c766:	push   eax
  41c767:	mov    DWORD PTR [esp+0x20],0xffffffff
  41c76f:	call   0x40e010
  41c774:	mov    al,bl
  41c776:	mov    ecx,DWORD PTR [esp+0x14]
  41c77a:	mov    DWORD PTR fs:0x0,ecx
  41c781:	pop    ecx
  41c782:	pop    edi
  41c783:	pop    esi
  41c784:	pop    ebx
  41c785:	add    esp,0x10
  41c788:	ret    0x44
  41c78b:	int3   
  41c78c:	int3   
  41c78d:	int3   
  41c78e:	int3   
  41c78f:	int3   
  41c790:	push   0xffffffff
  41c792:	push   0x42b9b8
  41c797:	mov    eax,fs:0x0
  41c79d:	push   eax
  41c79e:	push   ecx
  41c79f:	push   ebx
  41c7a0:	mov    eax,ds:0x43e020
  41c7a5:	xor    eax,esp
  41c7a7:	push   eax
  41c7a8:	lea    eax,[esp+0xc]
  41c7ac:	mov    fs:0x0,eax
  41c7b2:	xor    eax,eax
  41c7b4:	mov    DWORD PTR [esp+0x14],eax
  41c7b8:	mov    ecx,DWORD PTR [esp+0x1c]
  41c7bc:	mov    BYTE PTR [esp+0x8],al
  41c7c0:	mov    eax,DWORD PTR [esp+0x8]
  41c7c4:	push   eax
  41c7c5:	sub    esp,0x24
  41c7c8:	mov    eax,esp
  41c7ca:	mov    DWORD PTR [eax],ecx
  41c7cc:	mov    edx,DWORD PTR [esp+0x48]
  41c7d0:	mov    DWORD PTR [eax+0x4],edx
  41c7d3:	lea    ecx,[eax+0x8]
  41c7d6:	lea    eax,[esp+0x4c]
  41c7da:	mov    DWORD PTR [esp+0x30],esp
  41c7de:	push   eax
  41c7df:	call   DWORD PTR ds:0x430118
  41c7e5:	mov    ecx,esi
  41c7e7:	call   0x41d860
  41c7ec:	lea    ecx,[esp+0x24]
  41c7f0:	mov    bl,al
  41c7f2:	mov    DWORD PTR [esp+0x14],0xffffffff
  41c7fa:	call   DWORD PTR ds:0x430264
  41c800:	mov    al,bl
  41c802:	mov    ecx,DWORD PTR [esp+0xc]
  41c806:	mov    DWORD PTR fs:0x0,ecx
  41c80d:	pop    ecx
  41c80e:	pop    ebx
  41c80f:	add    esp,0x10
  41c812:	ret    0x24
  41c815:	int3   
  41c816:	int3   
  41c817:	int3   
  41c818:	int3   
  41c819:	int3   
  41c81a:	int3   
  41c81b:	int3   
  41c81c:	int3   
  41c81d:	int3   
  41c81e:	int3   
  41c81f:	int3   
  41c820:	push   0xffffffff
  41c822:	push   0x42c6d8
  41c827:	mov    eax,fs:0x0
  41c82d:	push   eax
  41c82e:	push   ecx
  41c82f:	push   ebx
  41c830:	mov    eax,ds:0x43e020
  41c835:	xor    eax,esp
  41c837:	push   eax
  41c838:	lea    eax,[esp+0xc]
  41c83c:	mov    fs:0x0,eax
  41c842:	xor    eax,eax
  41c844:	mov    DWORD PTR [esp+0x14],eax
  41c848:	mov    ecx,DWORD PTR [esp+0x1c]
  41c84c:	mov    BYTE PTR [esp+0x8],al
  41c850:	mov    eax,DWORD PTR [esp+0x8]
  41c854:	push   eax
  41c855:	sub    esp,0x28
  41c858:	mov    eax,esp
  41c85a:	mov    DWORD PTR [eax],ecx
  41c85c:	mov    edx,DWORD PTR [esp+0x4c]
  41c860:	mov    DWORD PTR [eax+0x4],edx
  41c863:	mov    ecx,DWORD PTR [esp+0x50]
  41c867:	lea    edx,[esp+0x54]
  41c86b:	mov    DWORD PTR [esp+0x34],esp
  41c86f:	mov    DWORD PTR [eax+0x8],ecx
  41c872:	lea    ecx,[eax+0xc]
  41c875:	push   edx
  41c876:	call   DWORD PTR ds:0x430118
  41c87c:	mov    ecx,esi
  41c87e:	call   0x41d920
  41c883:	lea    ecx,[esp+0x28]
  41c887:	mov    bl,al
  41c889:	mov    DWORD PTR [esp+0x14],0xffffffff
  41c891:	call   DWORD PTR ds:0x430264
  41c897:	mov    al,bl
  41c899:	mov    ecx,DWORD PTR [esp+0xc]
  41c89d:	mov    DWORD PTR fs:0x0,ecx
  41c8a4:	pop    ecx
  41c8a5:	pop    ebx
  41c8a6:	add    esp,0x10
  41c8a9:	ret    0x28
  41c8ac:	int3   
  41c8ad:	int3   
  41c8ae:	int3   
  41c8af:	int3   
  41c8b0:	sub    esp,0x8
  41c8b3:	push   ebx
  41c8b4:	push   ebp
  41c8b5:	push   edi
  41c8b6:	mov    edi,eax
  41c8b8:	sub    edi,DWORD PTR [esp+0x18]
  41c8bc:	mov    eax,DWORD PTR [esi+0xc]
  41c8bf:	mov    ebp,edi
  41c8c1:	test   eax,eax
  41c8c3:	jne    0x41c8c9
  41c8c5:	xor    ebx,ebx
  41c8c7:	jmp    0x41c8ce
  41c8c9:	mov    ebx,DWORD PTR [esi+0x14]
  41c8cc:	sub    ebx,eax
  41c8ce:	test   ebp,ebp
  41c8d0:	je     0x41c9e9
  41c8d6:	mov    ecx,DWORD PTR [esi+0x10]
  41c8d9:	mov    edx,eax
  41c8db:	sub    edx,ecx
  41c8dd:	dec    edx
  41c8de:	cmp    edx,ebp
  41c8e0:	jae    0x41c8e7
  41c8e2:	call   0x414b60
  41c8e7:	mov    edx,ecx
  41c8e9:	sub    edx,eax
  41c8eb:	lea    eax,[edx+ebp*1]
  41c8ee:	cmp    ebx,eax
  41c8f0:	jae    0x41c9ac
  41c8f6:	mov    ecx,ebx
  41c8f8:	shr    ecx,1
  41c8fa:	or     edx,0xffffffff
  41c8fd:	sub    edx,ecx
  41c8ff:	cmp    edx,ebx
  41c901:	jae    0x41c907
  41c903:	xor    ebx,ebx
  41c905:	jmp    0x41c909
  41c907:	add    ebx,ecx
  41c909:	cmp    ebx,eax
  41c90b:	jae    0x41c90f
  41c90d:	mov    ebx,eax
  41c90f:	lea    ecx,[esi+0x8]
  41c912:	push   ebx
  41c913:	call   DWORD PTR ds:0x4301d8
  41c919:	mov    ecx,DWORD PTR [esi+0xc]
  41c91c:	mov    ebp,eax
  41c91e:	mov    eax,DWORD PTR [esp+0x24]
  41c922:	sub    eax,ecx
  41c924:	lea    edx,[eax+ebp*1]
  41c927:	mov    DWORD PTR [esp+0xc],edx
  41c92b:	je     0x41c93e
  41c92d:	push   eax
  41c92e:	push   ecx
  41c92f:	push   eax
  41c930:	push   ebp
  41c931:	call   DWORD PTR ds:0x430394
  41c937:	mov    edx,DWORD PTR [esp+0x1c]
  41c93b:	add    esp,0x10
  41c93e:	lea    eax,[edi+edx*1]
  41c941:	mov    DWORD PTR [esp+0xc],eax
  41c945:	test   edi,edi
  41c947:	jbe    0x41c95a
  41c949:	mov    ecx,DWORD PTR [esp+0x18]
  41c94d:	push   edi
  41c94e:	push   ecx
  41c94f:	push   edi
  41c950:	push   edx
  41c951:	call   DWORD PTR ds:0x430394
  41c957:	add    esp,0x10
  41c95a:	mov    eax,DWORD PTR [esi+0x10]
  41c95d:	mov    ecx,DWORD PTR [esp+0x24]
  41c961:	sub    eax,ecx
  41c963:	je     0x41c976
  41c965:	mov    edx,DWORD PTR [esp+0xc]
  41c969:	push   eax
  41c96a:	push   ecx
  41c96b:	push   eax
  41c96c:	push   edx
  41c96d:	call   DWORD PTR ds:0x430394
  41c973:	add    esp,0x10
  41c976:	mov    eax,DWORD PTR [esi+0xc]
  41c979:	mov    ecx,DWORD PTR [esi+0x10]
  41c97c:	sub    ecx,eax
  41c97e:	add    edi,ecx
  41c980:	test   eax,eax
  41c982:	je     0x41c994
  41c984:	mov    edx,DWORD PTR [esi+0x14]
  41c987:	sub    edx,eax
  41c989:	push   edx
  41c98a:	push   eax
  41c98b:	lea    ecx,[esi+0x8]
  41c98e:	call   DWORD PTR ds:0x4301cc
  41c994:	lea    eax,[ebx+ebp*1]
  41c997:	lea    ecx,[edi+ebp*1]
  41c99a:	mov    DWORD PTR [esi+0x14],eax
  41c99d:	mov    DWORD PTR [esi+0x10],ecx
  41c9a0:	mov    DWORD PTR [esi+0xc],ebp
  41c9a3:	pop    edi
  41c9a4:	pop    ebp
  41c9a5:	pop    ebx
  41c9a6:	add    esp,0x8
  41c9a9:	ret    0x10
  41c9ac:	test   edi,edi
  41c9ae:	jbe    0x41c9c1
  41c9b0:	mov    edx,DWORD PTR [esp+0x18]
  41c9b4:	push   edi
  41c9b5:	push   edx
  41c9b6:	push   edi
  41c9b7:	push   ecx
  41c9b8:	call   DWORD PTR ds:0x430394
  41c9be:	add    esp,0x10
  41c9c1:	mov    ecx,DWORD PTR [esi+0x10]
  41c9c4:	mov    eax,DWORD PTR [esp+0x24]
  41c9c8:	call   0x41cc60
  41c9cd:	mov    eax,DWORD PTR [esi+0x10]
  41c9d0:	lea    ecx,[eax+ebp*1]
  41c9d3:	call   0x41cc60
  41c9d8:	mov    ecx,DWORD PTR [esi+0x10]
  41c9db:	mov    eax,DWORD PTR [esp+0x24]
  41c9df:	add    ecx,ebp
  41c9e1:	call   0x41cc60
  41c9e6:	add    DWORD PTR [esi+0x10],ebp
  41c9e9:	pop    edi
  41c9ea:	pop    ebp
  41c9eb:	pop    ebx
  41c9ec:	add    esp,0x8
  41c9ef:	ret    0x10
  41c9f2:	int3   
  41c9f3:	int3   
  41c9f4:	int3   
  41c9f5:	int3   
  41c9f6:	int3   
  41c9f7:	int3   
  41c9f8:	int3   
  41c9f9:	int3   
  41c9fa:	int3   
  41c9fb:	int3   
  41c9fc:	int3   
  41c9fd:	int3   
  41c9fe:	int3   
  41c9ff:	int3   
  41ca00:	sub    esp,0x20
  41ca03:	push   ebx
  41ca04:	mov    ebx,DWORD PTR [eax+0x8]
  41ca07:	push   ebp
  41ca08:	mov    ebp,DWORD PTR [eax+0xc]
  41ca0b:	push   esi
  41ca0c:	mov    esi,DWORD PTR [eax]
  41ca0e:	push   edi
  41ca0f:	mov    edi,DWORD PTR [eax+0x4]
  41ca12:	mov    eax,DWORD PTR [ecx]
  41ca14:	mov    ecx,DWORD PTR [ecx+0x4]
  41ca17:	lea    edx,[esp+0x38]
  41ca1b:	mov    DWORD PTR [esp+0x14],esi
  41ca1f:	mov    DWORD PTR [esp+0x18],edi
  41ca23:	mov    DWORD PTR [esp+0x1c],ebx
  41ca27:	mov    DWORD PTR [esp+0x20],ebp
  41ca2b:	mov    DWORD PTR [esp+0x24],eax
  41ca2f:	mov    DWORD PTR [esp+0x28],ecx
  41ca33:	mov    DWORD PTR [esp+0x2c],edx
  41ca37:	cmp    esi,0xfffffffc
  41ca3a:	je     0x41ca4a
  41ca3c:	test   esi,esi
  41ca3e:	je     0x41ca44
  41ca40:	cmp    esi,ebx
  41ca42:	je     0x41ca4a
  41ca44:	call   DWORD PTR ds:0x430390
  41ca4a:	cmp    edi,ebp
  41ca4c:	je     0x41ca62
  41ca4e:	push   ebp
  41ca4f:	push   ebx
  41ca50:	push   edi
  41ca51:	mov    edi,DWORD PTR [esp+0x40]
  41ca55:	push   esi
  41ca56:	lea    eax,[esp+0x34]
  41ca5a:	call   0x41d9f0
  41ca5f:	add    esp,0x10
  41ca62:	pop    edi
  41ca63:	pop    esi
  41ca64:	pop    ebp
  41ca65:	pop    ebx
  41ca66:	add    esp,0x20
  41ca69:	ret    
  41ca6a:	int3   
  41ca6b:	int3   
  41ca6c:	int3   
  41ca6d:	int3   
  41ca6e:	int3   
  41ca6f:	int3   
  41ca70:	push   esi
  41ca71:	mov    esi,ecx
  41ca73:	push   edi
  41ca74:	mov    edi,eax
  41ca76:	cmp    ebx,esi
  41ca78:	je     0x41cabf
  41ca7a:	lea    ebx,[ebx+0x0]
  41ca80:	sub    esi,0x60
  41ca83:	lea    eax,[esi+0x4]
  41ca86:	sub    edi,0x60
  41ca89:	push   eax
  41ca8a:	lea    ecx,[edi+0x4]
  41ca8d:	call   DWORD PTR ds:0x43017c
  41ca93:	lea    ecx,[esi+0x20]
  41ca96:	push   ecx
  41ca97:	lea    ecx,[edi+0x20]
  41ca9a:	call   DWORD PTR ds:0x43017c
  41caa0:	lea    edx,[esi+0x3c]
  41caa3:	push   edx
  41caa4:	lea    ecx,[edi+0x3c]
  41caa7:	call   DWORD PTR ds:0x43017c
  41caad:	mov    eax,DWORD PTR [esi+0x58]
  41cab0:	mov    DWORD PTR [edi+0x58],eax
  41cab3:	mov    ecx,DWORD PTR [esi+0x5c]
  41cab6:	mov    DWORD PTR [edi+0x5c],ecx
  41cab9:	cmp    esi,ebx
  41cabb:	jne    0x41ca80
  41cabd:	mov    eax,edi
  41cabf:	pop    edi
  41cac0:	pop    esi
  41cac1:	ret    
  41cac2:	int3   
  41cac3:	int3   
  41cac4:	int3   
  41cac5:	int3   
  41cac6:	int3   
  41cac7:	int3   
  41cac8:	int3   
  41cac9:	int3   
  41caca:	int3   
  41cacb:	int3   
  41cacc:	int3   
  41cacd:	int3   
  41cace:	int3   
  41cacf:	int3   
  41cad0:	sub    esp,0xc
  41cad3:	push   ebx
  41cad4:	push   ebp
  41cad5:	mov    ebp,DWORD PTR [esp+0x18]
  41cad9:	push   esi
  41cada:	push   edi
  41cadb:	mov    edi,ecx
  41cadd:	mov    ebx,eax
  41cadf:	cmp    ebp,edi
  41cae1:	je     0x41cb43
  41cae3:	mov    eax,DWORD PTR [edi-0x4]
  41cae6:	mov    ecx,DWORD PTR [edi-0x8]
  41cae9:	sub    edi,0x8
  41caec:	sub    ebx,0x8
  41caef:	test   eax,eax
  41caf1:	je     0x41caff
  41caf3:	lea    edx,[eax+0x4]
  41caf6:	mov    esi,0x1
  41cafb:	lock xadd DWORD PTR [edx],esi
  41caff:	lea    edx,[esp+0x10]
  41cb03:	cmp    edx,ebx
  41cb05:	je     0x41cb09
  41cb07:	mov    DWORD PTR [ebx],ecx
  41cb09:	mov    esi,DWORD PTR [ebx+0x4]
  41cb0c:	mov    DWORD PTR [ebx+0x4],eax
  41cb0f:	test   esi,esi
  41cb11:	je     0x41cb3d
  41cb13:	lea    eax,[esi+0x4]
  41cb16:	or     ecx,0xffffffff
  41cb19:	lock xadd DWORD PTR [eax],ecx
  41cb1d:	jne    0x41cb3d
  41cb1f:	mov    edx,DWORD PTR [esi]
  41cb21:	mov    eax,DWORD PTR [edx+0x4]
  41cb24:	mov    ecx,esi
  41cb26:	call   eax
  41cb28:	lea    ecx,[esi+0x8]
  41cb2b:	or     edx,0xffffffff
  41cb2e:	lock xadd DWORD PTR [ecx],edx
  41cb32:	jne    0x41cb3d
  41cb34:	mov    eax,DWORD PTR [esi]
  41cb36:	mov    edx,DWORD PTR [eax+0x8]
  41cb39:	mov    ecx,esi
  41cb3b:	call   edx
  41cb3d:	cmp    edi,ebp
  41cb3f:	jne    0x41cae3
  41cb41:	mov    eax,ebx
  41cb43:	pop    edi
  41cb44:	pop    esi
  41cb45:	pop    ebp
  41cb46:	pop    ebx
  41cb47:	add    esp,0xc
  41cb4a:	ret    
  41cb4b:	int3   
  41cb4c:	int3   
  41cb4d:	int3   
  41cb4e:	int3   
  41cb4f:	int3   
  41cb50:	push   0xffffffff
  41cb52:	push   0x42b9e8
  41cb57:	mov    eax,fs:0x0
  41cb5d:	push   eax
  41cb5e:	push   ecx
  41cb5f:	push   esi
  41cb60:	mov    eax,ds:0x43e020
  41cb65:	xor    eax,esp
  41cb67:	push   eax
  41cb68:	lea    eax,[esp+0xc]
  41cb6c:	mov    fs:0x0,eax
  41cb72:	mov    DWORD PTR [esp+0x14],0x0
  41cb7a:	mov    eax,DWORD PTR [esp+0x28]
  41cb7e:	sub    esp,0xc
  41cb81:	mov    esi,esp
  41cb83:	mov    DWORD PTR [esp+0x14],esp
  41cb87:	mov    DWORD PTR [esi+0x8],eax
  41cb8a:	mov    DWORD PTR [esi],0x0
  41cb90:	cmp    eax,0x8
  41cb93:	ja     0x41cb9d
  41cb95:	mov    eax,esi
  41cb97:	lea    ecx,[esp+0x2c]
  41cb9b:	jmp    0x41cbac
  41cb9d:	push   eax
  41cb9e:	call   0x425023
  41cba3:	mov    DWORD PTR [esi],eax
  41cba5:	mov    ecx,DWORD PTR [esp+0x30]
  41cba9:	add    esp,0x4
  41cbac:	mov    edx,DWORD PTR [esi+0x8]
  41cbaf:	push   edx
  41cbb0:	push   ecx
  41cbb1:	push   eax
  41cbb2:	call   0x42a018
  41cbb7:	mov    ecx,DWORD PTR [esp+0x34]
  41cbbb:	add    esp,0xc
  41cbbe:	call   0x41da80
  41cbc3:	add    esp,0xc
  41cbc6:	cmp    DWORD PTR [esp+0x28],0x8
  41cbcb:	mov    esi,eax
  41cbcd:	jbe    0x41cbe0
  41cbcf:	mov    eax,DWORD PTR [esp+0x20]
  41cbd3:	test   eax,eax
  41cbd5:	je     0x41cbe0
  41cbd7:	push   eax
  41cbd8:	call   0x42517c
  41cbdd:	add    esp,0x4
  41cbe0:	mov    eax,esi
  41cbe2:	mov    ecx,DWORD PTR [esp+0xc]
  41cbe6:	mov    DWORD PTR fs:0x0,ecx
  41cbed:	pop    ecx
  41cbee:	pop    esi
  41cbef:	add    esp,0x10
  41cbf2:	ret    
  41cbf3:	int3   
  41cbf4:	int3   
  41cbf5:	int3   
  41cbf6:	int3   
  41cbf7:	int3   
  41cbf8:	int3   
  41cbf9:	int3   
  41cbfa:	int3   
  41cbfb:	int3   
  41cbfc:	int3   
  41cbfd:	int3   
  41cbfe:	int3   
  41cbff:	int3   
  41cc00:	push   esi
  41cc01:	mov    esi,eax
  41cc03:	mov    eax,DWORD PTR [esi+0x8]
  41cc06:	cmp    eax,0x8
  41cc09:	jbe    0x41cc0d
  41cc0b:	mov    esi,DWORD PTR [esi]
  41cc0d:	push   edi
  41cc0e:	lea    edi,[eax+esi*1]
  41cc11:	mov    ecx,edi
  41cc13:	sub    ecx,esi
  41cc15:	test   ecx,ecx
  41cc17:	jle    0x41cc3f
  41cc19:	lea    esp,[esp+0x0]
  41cc20:	mov    eax,ecx
  41cc22:	cdq    
  41cc23:	sub    eax,edx
  41cc25:	sar    eax,1
  41cc27:	cmp    BYTE PTR [eax+esi*1],bl
  41cc2a:	jge    0x41cc39
  41cc2c:	or     edx,0xffffffff
  41cc2f:	sub    edx,eax
  41cc31:	lea    esi,[eax+esi*1+0x1]
  41cc35:	add    ecx,edx
  41cc37:	jmp    0x41cc3b
  41cc39:	mov    ecx,eax
  41cc3b:	test   ecx,ecx
  41cc3d:	jg     0x41cc20
  41cc3f:	cmp    esi,edi
  41cc41:	pop    edi
  41cc42:	je     0x41cc4f
  41cc44:	cmp    bl,BYTE PTR [esi]
  41cc46:	jl     0x41cc4f
  41cc48:	mov    eax,0x1
  41cc4d:	pop    esi
  41cc4e:	ret    
  41cc4f:	xor    eax,eax
  41cc51:	pop    esi
  41cc52:	ret    
  41cc53:	int3   
  41cc54:	int3   
  41cc55:	int3   
  41cc56:	int3   
  41cc57:	int3   
  41cc58:	int3   
  41cc59:	int3   
  41cc5a:	int3   
  41cc5b:	int3   
  41cc5c:	int3   
  41cc5d:	int3   
  41cc5e:	int3   
  41cc5f:	int3   
  41cc60:	cmp    eax,ecx
  41cc62:	je     0x41cc78
  41cc64:	push   ebx
  41cc65:	dec    ecx
  41cc66:	cmp    eax,ecx
  41cc68:	je     0x41cc77
  41cc6a:	mov    dl,BYTE PTR [eax]
  41cc6c:	mov    bl,BYTE PTR [ecx]
  41cc6e:	mov    BYTE PTR [eax],bl
  41cc70:	inc    eax
  41cc71:	mov    BYTE PTR [ecx],dl
  41cc73:	cmp    eax,ecx
  41cc75:	jne    0x41cc65
  41cc77:	pop    ebx
  41cc78:	ret    
  41cc79:	int3   
  41cc7a:	int3   
  41cc7b:	int3   
  41cc7c:	int3   
  41cc7d:	int3   
  41cc7e:	int3   
  41cc7f:	int3   
  41cc80:	mov    eax,DWORD PTR [edi]
  41cc82:	sub    esp,0x18
  41cc85:	jmp    0x41cc90
  41cc87:	lea    esp,[esp+0x0]
  41cc8e:	mov    edi,edi
  41cc90:	movzx  ecx,BYTE PTR [eax]
  41cc93:	cmp    BYTE PTR [ecx+0x432648],0x0
  41cc9a:	je     0x41cc9f
  41cc9c:	inc    eax
  41cc9d:	jmp    0x41cc90
  41cc9f:	push   ebx
  41cca0:	push   esi
  41cca1:	mov    DWORD PTR [edi],eax
  41cca3:	mov    esi,eax
  41cca5:	mov    bl,0x3b
  41cca7:	mov    DWORD PTR [esp+0x8],eax
  41ccab:	jmp    0x41ccb0
  41ccad:	lea    ecx,[ecx+0x0]
  41ccb0:	mov    dl,BYTE PTR [esi]
  41ccb2:	movzx  ecx,dl
  41ccb5:	cmp    BYTE PTR [ecx+0x432218],0x0
  41ccbc:	je     0x41ce56
  41ccc2:	cmp    dl,0x26
  41ccc5:	jne    0x41ce20
  41cccb:	movsx  ecx,BYTE PTR [esi+0x1]
  41cccf:	add    ecx,0xffffffdd
  41ccd2:	cmp    ecx,0x4e
  41ccd5:	ja     0x41ce20
  41ccdb:	movzx  ecx,BYTE PTR [ecx+0x41ce78]
  41cce2:	jmp    DWORD PTR [ecx*4+0x41ce60]
  41cce9:	mov    cl,BYTE PTR [esi+0x2]
  41ccec:	cmp    cl,0x6d
  41ccef:	jne    0x41cd05
  41ccf1:	cmp    BYTE PTR [esi+0x3],0x70
  41ccf5:	jne    0x41cd05
  41ccf7:	cmp    BYTE PTR [esi+0x4],bl
  41ccfa:	jne    0x41cd05
  41ccfc:	mov    BYTE PTR [eax],0x26
  41ccff:	inc    eax
  41cd00:	add    esi,0x5
  41cd03:	jmp    0x41cca7
  41cd05:	cmp    cl,0x70
  41cd08:	jne    0x41ce20
  41cd0e:	cmp    BYTE PTR [esi+0x3],0x6f
  41cd12:	jne    0x41ce20
  41cd18:	cmp    BYTE PTR [esi+0x4],0x73
  41cd1c:	jne    0x41ce20
  41cd22:	cmp    BYTE PTR [esi+0x5],bl
  41cd25:	jne    0x41ce20
  41cd2b:	mov    BYTE PTR [eax],0x27
  41cd2e:	inc    eax
  41cd2f:	add    esi,0x6
  41cd32:	jmp    0x41cca7
  41cd37:	cmp    BYTE PTR [esi+0x2],0x75
  41cd3b:	jne    0x41ce20
  41cd41:	cmp    BYTE PTR [esi+0x3],0x6f
  41cd45:	jne    0x41ce20
  41cd4b:	cmp    BYTE PTR [esi+0x4],0x74
  41cd4f:	jne    0x41ce20
  41cd55:	cmp    BYTE PTR [esi+0x5],bl
  41cd58:	jne    0x41ce20
  41cd5e:	mov    BYTE PTR [eax],0x22
  41cd61:	inc    eax
  41cd62:	add    esi,0x6
  41cd65:	jmp    0x41cca7
  41cd6a:	cmp    BYTE PTR [esi+0x2],0x74
  41cd6e:	jne    0x41ce20
  41cd74:	cmp    BYTE PTR [esi+0x3],bl
  41cd77:	jne    0x41ce20
  41cd7d:	mov    BYTE PTR [eax],0x3e
  41cd80:	inc    eax
  41cd81:	add    esi,0x4
  41cd84:	jmp    0x41cca7
  41cd89:	cmp    BYTE PTR [esi+0x2],0x74
  41cd8d:	jne    0x41ce20
  41cd93:	cmp    BYTE PTR [esi+0x3],bl
  41cd96:	jne    0x41ce20
  41cd9c:	mov    BYTE PTR [eax],0x3c
  41cd9f:	inc    eax
  41cda0:	add    esi,0x4
  41cda3:	jmp    0x41cca7
  41cda8:	xor    eax,eax
  41cdaa:	cmp    BYTE PTR [esi+0x2],0x78
  41cdae:	jne    0x41cddc
  41cdb0:	movzx  edx,BYTE PTR [esi+0x3]
  41cdb4:	mov    cl,BYTE PTR [edx+0x432418]
  41cdba:	add    esi,0x3
  41cdbd:	cmp    cl,0xff
  41cdc0:	je     0x41ce09
  41cdc2:	movzx  edx,BYTE PTR [esi+0x1]
  41cdc6:	inc    esi
  41cdc7:	movzx  ecx,cl
  41cdca:	shl    eax,0x4
  41cdcd:	add    eax,ecx
  41cdcf:	mov    cl,BYTE PTR [edx+0x432418]
  41cdd5:	cmp    cl,0xff
  41cdd8:	jne    0x41cdc2
  41cdda:	jmp    0x41ce09
  41cddc:	movzx  ecx,BYTE PTR [esi+0x2]
  41cde0:	mov    cl,BYTE PTR [ecx+0x432418]
  41cde6:	add    esi,0x2
  41cde9:	cmp    cl,0xff
  41cdec:	je     0x41ce09
  41cdee:	mov    edi,edi
  41cdf0:	lea    edx,[eax+eax*4]
  41cdf3:	movzx  eax,cl
  41cdf6:	movzx  ecx,BYTE PTR [esi+0x1]
  41cdfa:	mov    cl,BYTE PTR [ecx+0x432418]
  41ce00:	inc    esi
  41ce01:	lea    eax,[eax+edx*2]
  41ce04:	cmp    cl,0xff
  41ce07:	jne    0x41cdf0
  41ce09:	lea    ecx,[esp+0x8]
  41ce0d:	call   0x41dad0
  41ce12:	cmp    BYTE PTR [esi],bl
  41ce14:	jne    0x41ce29
  41ce16:	mov    eax,DWORD PTR [esp+0x8]
  41ce1a:	inc    esi
  41ce1b:	jmp    0x41ccb0
  41ce20:	mov    BYTE PTR [eax],dl
  41ce22:	inc    eax
  41ce23:	inc    esi
  41ce24:	jmp    0x41cca7
  41ce29:	lea    ecx,[esp+0xc]
  41ce2d:	call   DWORD PTR ds:0x4303ac
  41ce33:	push   0x435d14
  41ce38:	lea    edx,[esp+0x10]
  41ce3c:	push   edx
  41ce3d:	mov    DWORD PTR [esp+0x14],0x43294c
  41ce45:	mov    DWORD PTR [esp+0x20],0x43200c
  41ce4d:	mov    DWORD PTR [esp+0x24],esi
  41ce51:	call   0x429e76
  41ce56:	mov    DWORD PTR [edi],esi
  41ce58:	pop    esi
  41ce59:	pop    ebx
  41ce5a:	add    esp,0x18
  41ce5d:	ret    
  41ce5e:	mov    edi,edi
  41ce60:	test   al,0xcd
  41ce62:	inc    ecx
  41ce63:	add    cl,ch
  41ce65:	int3   
  41ce66:	inc    ecx
  41ce67:	add    BYTE PTR [edx-0x33],ch
  41ce6a:	inc    ecx
  41ce6b:	add    BYTE PTR [ecx+0x370041cd],cl
  41ce71:	int    0x41
  41ce73:	add    BYTE PTR [eax],ah
  41ce75:	into   
  41ce76:	inc    ecx
  41ce77:	add    BYTE PTR [eax],al
  41ce79:	add    eax,0x5050505
  41ce7e:	add    eax,0x5050505
  41ce83:	add    eax,0x5050505
  41ce88:	add    eax,0x5050505
  41ce8d:	add    eax,0x5050505
  41ce92:	add    eax,0x5050505
  41ce97:	add    eax,0x5050505
  41ce9c:	add    eax,0x5050505
  41cea1:	add    eax,0x5050505
  41cea6:	add    eax,0x5050505
  41ceab:	add    eax,0x5050505
  41ceb0:	add    eax,0x5050505
  41ceb5:	add    eax,0x5050501
  41ceba:	add    eax,0x5050205
  41cebf:	add    eax,0x5050305
  41cec4:	add    eax,0xcccc0405
  41cec9:	int3   
  41ceca:	int3   
  41cecb:	int3   
  41cecc:	int3   
  41cecd:	int3   
  41cece:	int3   
  41cecf:	int3   
  41ced0:	mov    eax,DWORD PTR [edi]
  41ced2:	sub    esp,0x18
  41ced5:	jmp    0x41cee0
  41ced7:	lea    esp,[esp+0x0]
  41cede:	mov    edi,edi
  41cee0:	movzx  ecx,BYTE PTR [eax]
  41cee3:	cmp    BYTE PTR [ecx+0x432748],0x0
  41ceea:	je     0x41ceef
  41ceec:	inc    eax
  41ceed:	jmp    0x41cee0
  41ceef:	push   ebx
  41cef0:	push   esi
  41cef1:	mov    DWORD PTR [edi],eax
  41cef3:	mov    esi,eax
  41cef5:	mov    bl,0x3b
  41cef7:	mov    DWORD PTR [esp+0x8],eax
  41cefb:	jmp    0x41cf00
  41cefd:	lea    ecx,[ecx+0x0]
  41cf00:	mov    dl,BYTE PTR [esi]
  41cf02:	movzx  ecx,dl
  41cf05:	cmp    BYTE PTR [ecx+0x432318],0x0
  41cf0c:	je     0x41d0a6
  41cf12:	cmp    dl,0x26
  41cf15:	jne    0x41d070
  41cf1b:	movsx  ecx,BYTE PTR [esi+0x1]
  41cf1f:	add    ecx,0xffffffdd
  41cf22:	cmp    ecx,0x4e
  41cf25:	ja     0x41d070
  41cf2b:	movzx  ecx,BYTE PTR [ecx+0x41d0c8]
  41cf32:	jmp    DWORD PTR [ecx*4+0x41d0b0]
  41cf39:	mov    cl,BYTE PTR [esi+0x2]
  41cf3c:	cmp    cl,0x6d
  41cf3f:	jne    0x41cf55
  41cf41:	cmp    BYTE PTR [esi+0x3],0x70
  41cf45:	jne    0x41cf55
  41cf47:	cmp    BYTE PTR [esi+0x4],bl
  41cf4a:	jne    0x41cf55
  41cf4c:	mov    BYTE PTR [eax],0x26
  41cf4f:	inc    eax
  41cf50:	add    esi,0x5
  41cf53:	jmp    0x41cef7
  41cf55:	cmp    cl,0x70
  41cf58:	jne    0x41d070
  41cf5e:	cmp    BYTE PTR [esi+0x3],0x6f
  41cf62:	jne    0x41d070
  41cf68:	cmp    BYTE PTR [esi+0x4],0x73
  41cf6c:	jne    0x41d070
  41cf72:	cmp    BYTE PTR [esi+0x5],bl
  41cf75:	jne    0x41d070
  41cf7b:	mov    BYTE PTR [eax],0x27
  41cf7e:	inc    eax
  41cf7f:	add    esi,0x6
  41cf82:	jmp    0x41cef7
  41cf87:	cmp    BYTE PTR [esi+0x2],0x75
  41cf8b:	jne    0x41d070
  41cf91:	cmp    BYTE PTR [esi+0x3],0x6f
  41cf95:	jne    0x41d070
  41cf9b:	cmp    BYTE PTR [esi+0x4],0x74
  41cf9f:	jne    0x41d070
  41cfa5:	cmp    BYTE PTR [esi+0x5],bl
  41cfa8:	jne    0x41d070
  41cfae:	mov    BYTE PTR [eax],0x22
  41cfb1:	inc    eax
  41cfb2:	add    esi,0x6
  41cfb5:	jmp    0x41cef7
  41cfba:	cmp    BYTE PTR [esi+0x2],0x74
  41cfbe:	jne    0x41d070
  41cfc4:	cmp    BYTE PTR [esi+0x3],bl
  41cfc7:	jne    0x41d070
  41cfcd:	mov    BYTE PTR [eax],0x3e
  41cfd0:	inc    eax
  41cfd1:	add    esi,0x4
  41cfd4:	jmp    0x41cef7
  41cfd9:	cmp    BYTE PTR [esi+0x2],0x74
  41cfdd:	jne    0x41d070
  41cfe3:	cmp    BYTE PTR [esi+0x3],bl
  41cfe6:	jne    0x41d070
  41cfec:	mov    BYTE PTR [eax],0x3c
  41cfef:	inc    eax
  41cff0:	add    esi,0x4
  41cff3:	jmp    0x41cef7
  41cff8:	xor    eax,eax
  41cffa:	cmp    BYTE PTR [esi+0x2],0x78
  41cffe:	jne    0x41d02c
  41d000:	movzx  edx,BYTE PTR [esi+0x3]
  41d004:	mov    cl,BYTE PTR [edx+0x432418]
  41d00a:	add    esi,0x3
  41d00d:	cmp    cl,0xff
  41d010:	je     0x41d059
  41d012:	movzx  edx,BYTE PTR [esi+0x1]
  41d016:	inc    esi
  41d017:	movzx  ecx,cl
  41d01a:	shl    eax,0x4
  41d01d:	add    eax,ecx
  41d01f:	mov    cl,BYTE PTR [edx+0x432418]
  41d025:	cmp    cl,0xff
  41d028:	jne    0x41d012
  41d02a:	jmp    0x41d059
  41d02c:	movzx  ecx,BYTE PTR [esi+0x2]
  41d030:	mov    cl,BYTE PTR [ecx+0x432418]
  41d036:	add    esi,0x2
  41d039:	cmp    cl,0xff
  41d03c:	je     0x41d059
  41d03e:	mov    edi,edi
  41d040:	lea    edx,[eax+eax*4]
  41d043:	movzx  eax,cl
  41d046:	movzx  ecx,BYTE PTR [esi+0x1]
  41d04a:	mov    cl,BYTE PTR [ecx+0x432418]
  41d050:	inc    esi
  41d051:	lea    eax,[eax+edx*2]
  41d054:	cmp    cl,0xff
  41d057:	jne    0x41d040
  41d059:	lea    ecx,[esp+0x8]
  41d05d:	call   0x41dad0
  41d062:	cmp    BYTE PTR [esi],bl
  41d064:	jne    0x41d079
  41d066:	mov    eax,DWORD PTR [esp+0x8]
  41d06a:	inc    esi
  41d06b:	jmp    0x41cf00
  41d070:	mov    BYTE PTR [eax],dl
  41d072:	inc    eax
  41d073:	inc    esi
  41d074:	jmp    0x41cef7
  41d079:	lea    ecx,[esp+0xc]
  41d07d:	call   DWORD PTR ds:0x4303ac
  41d083:	push   0x435d14
  41d088:	lea    edx,[esp+0x10]
  41d08c:	push   edx
  41d08d:	mov    DWORD PTR [esp+0x14],0x43294c
  41d095:	mov    DWORD PTR [esp+0x20],0x43200c
  41d09d:	mov    DWORD PTR [esp+0x24],esi
  41d0a1:	call   0x429e76
  41d0a6:	mov    DWORD PTR [edi],esi
  41d0a8:	pop    esi
  41d0a9:	pop    ebx
  41d0aa:	add    esp,0x18
  41d0ad:	ret    
  41d0ae:	mov    edi,edi
  41d0b0:	clc    
  41d0b1:	iret   
  41d0b2:	inc    ecx
  41d0b3:	add    BYTE PTR [ecx],bh
  41d0b5:	iret   
  41d0b6:	inc    ecx
  41d0b7:	add    BYTE PTR [edx-0x26ffbe31],bh
  41d0bd:	iret   
  41d0be:	inc    ecx
  41d0bf:	add    BYTE PTR [edi+0x700041cf],al
  41d0c5:	rol    BYTE PTR [ecx+0x0],1
  41d0c8:	add    BYTE PTR ds:0x5050505,al
  41d0ce:	add    eax,0x5050505
  41d0d3:	add    eax,0x5050505
  41d0d8:	add    eax,0x5050505
  41d0dd:	add    eax,0x5050505
  41d0e2:	add    eax,0x5050505
  41d0e7:	add    eax,0x5050505
  41d0ec:	add    eax,0x5050505
  41d0f1:	add    eax,0x5050505
  41d0f6:	add    eax,0x5050505
  41d0fb:	add    eax,0x5050505
  41d100:	add    eax,0x5050505
  41d105:	add    eax,0x5050501
  41d10a:	add    eax,0x5050205
  41d10f:	add    eax,0x5050305
  41d114:	add    eax,0xcccc0405
  41d119:	int3   
  41d11a:	int3   
  41d11b:	int3   
  41d11c:	int3   
  41d11d:	int3   
  41d11e:	int3   
  41d11f:	int3   
  41d120:	push   ebp
  41d121:	mov    ebp,DWORD PTR [esp+0x8]
  41d125:	push   esi
  41d126:	push   edi
  41d127:	mov    edi,DWORD PTR [esp+0x14]
  41d12b:	mov    esi,eax
  41d12d:	mov    DWORD PTR [edi],ebx
  41d12f:	call   0x41dba0
  41d134:	mov    ecx,DWORD PTR [esi+0x34]
  41d137:	mov    edx,eax
  41d139:	mov    eax,ecx
  41d13b:	neg    eax
  41d13d:	and    eax,0x3
  41d140:	add    eax,ecx
  41d142:	lea    ecx,[eax+0x30]
  41d145:	xor    edi,edi
  41d147:	mov    DWORD PTR [esp+0x10],edx
  41d14b:	cmp    ecx,DWORD PTR [esi+0x38]
  41d14e:	jbe    0x41d197
  41d150:	mov    eax,DWORD PTR [esi+0x1003c]
  41d156:	push   0x1000a
  41d15b:	cmp    eax,edi
  41d15d:	je     0x41d163
  41d15f:	call   eax
  41d161:	jmp    0x41d168
  41d163:	call   0x425023
  41d168:	mov    edx,DWORD PTR [esi+0x30]
  41d16b:	mov    ecx,eax
  41d16d:	neg    ecx
  41d16f:	and    ecx,0x3
  41d172:	add    ecx,eax
  41d174:	mov    DWORD PTR [ecx],edx
  41d176:	mov    edx,DWORD PTR [esp+0x14]
  41d17a:	mov    DWORD PTR [esi+0x30],eax
  41d17d:	add    eax,0x1000a
  41d182:	add    ecx,0x4
  41d185:	mov    DWORD PTR [esi+0x38],eax
  41d188:	mov    eax,ecx
  41d18a:	neg    eax
  41d18c:	and    eax,0x3
  41d18f:	add    esp,0x4
  41d192:	mov    DWORD PTR [esi+0x34],ecx
  41d195:	add    eax,ecx
  41d197:	lea    ecx,[eax+0x30]
  41d19a:	mov    DWORD PTR [esi+0x34],ecx
  41d19d:	cmp    eax,edi
  41d19f:	je     0x41d1b8
  41d1a1:	mov    DWORD PTR [eax],edi
  41d1a3:	mov    DWORD PTR [eax+0x4],edi
  41d1a6:	mov    DWORD PTR [eax+0x10],edi
  41d1a9:	mov    DWORD PTR [eax+0x14],0x2
  41d1b0:	mov    DWORD PTR [eax+0x18],edi
  41d1b3:	mov    DWORD PTR [eax+0x20],edi
  41d1b6:	jmp    0x41d1ba
  41d1b8:	xor    eax,eax
  41d1ba:	mov    ecx,edx
  41d1bc:	sub    ecx,ebx
  41d1be:	mov    DWORD PTR [eax+0x4],ebx
  41d1c1:	mov    DWORD PTR [eax+0xc],ecx
  41d1c4:	cmp    DWORD PTR [ebp+0x18],edi
  41d1c7:	je     0x41d1d7
  41d1c9:	mov    esi,DWORD PTR [ebp+0x1c]
  41d1cc:	mov    DWORD PTR [eax+0x28],esi
  41d1cf:	mov    esi,DWORD PTR [ebp+0x1c]
  41d1d2:	mov    DWORD PTR [esi+0x2c],eax
  41d1d5:	jmp    0x41d1dd
  41d1d7:	mov    DWORD PTR [eax+0x28],edi
  41d1da:	mov    DWORD PTR [ebp+0x18],eax
  41d1dd:	mov    DWORD PTR [ebp+0x1c],eax
  41d1e0:	mov    DWORD PTR [eax+0x10],ebp
  41d1e3:	mov    DWORD PTR [eax+0x2c],edi
  41d1e6:	mov    eax,DWORD PTR [ebp+0x4]
  41d1e9:	cmp    eax,edi
  41d1eb:	jne    0x41d1f2
  41d1ed:	mov    eax,0x4400e0
  41d1f2:	cmp    BYTE PTR [eax],0x0
  41d1f5:	jne    0x41d1fd
  41d1f7:	mov    DWORD PTR [ebp+0x4],ebx
  41d1fa:	mov    DWORD PTR [ebp+0xc],ecx
  41d1fd:	mov    eax,DWORD PTR [esp+0x14]
  41d201:	mov    ecx,DWORD PTR [eax]
  41d203:	mov    al,BYTE PTR [ecx]
  41d205:	pop    edi
  41d206:	pop    esi
  41d207:	mov    BYTE PTR [edx],0x0
  41d20a:	pop    ebp
  41d20b:	ret    0x8
  41d20e:	int3   
  41d20f:	int3   
  41d210:	sub    esp,0x8
  41d213:	push   ebx
  41d214:	mov    ebx,DWORD PTR [esp+0x14]
  41d218:	push   ebp
  41d219:	push   esi
  41d21a:	push   edi
  41d21b:	mov    edi,DWORD PTR [esp+0x24]
  41d21f:	mov    eax,edi
  41d221:	sub    eax,ebx
  41d223:	cdq    
  41d224:	sub    eax,edx
  41d226:	mov    esi,eax
  41d228:	sar    esi,1
  41d22a:	lea    eax,[edi-0x1]
  41d22d:	add    esi,ebx
  41d22f:	push   eax
  41d230:	mov    ecx,esi
  41d232:	mov    eax,ebx
  41d234:	call   0x41de00
  41d239:	add    esp,0x4
  41d23c:	mov    eax,esi
  41d23e:	lea    ebp,[esi+0x1]
  41d241:	cmp    ebx,esi
  41d243:	jae    0x41d255
  41d245:	mov    cl,BYTE PTR [eax-0x1]
  41d248:	mov    dl,BYTE PTR [eax]
  41d24a:	cmp    dl,cl
  41d24c:	jg     0x41d255
  41d24e:	jl     0x41d255
  41d250:	dec    eax
  41d251:	cmp    ebx,eax
  41d253:	jb     0x41d245
  41d255:	cmp    ebp,edi
  41d257:	jae    0x41d26e
  41d259:	mov    dl,BYTE PTR [eax]
  41d25b:	jmp    0x41d260
  41d25d:	lea    ecx,[ecx+0x0]
  41d260:	mov    cl,BYTE PTR [ebp+0x0]
  41d263:	cmp    dl,cl
  41d265:	jg     0x41d26e
  41d267:	jl     0x41d26e
  41d269:	inc    ebp
  41d26a:	cmp    ebp,edi
  41d26c:	jb     0x41d260
  41d26e:	mov    ebx,eax
  41d270:	mov    esi,ebp
  41d272:	mov    DWORD PTR [esp+0x14],ebx
  41d276:	jmp    0x41d280
  41d278:	mov    edi,DWORD PTR [esp+0x24]
  41d27c:	lea    esp,[esp+0x0]
  41d280:	cmp    esi,edi
  41d282:	jae    0x41d2a8
  41d284:	mov    dl,BYTE PTR [esi]
  41d286:	mov    cl,BYTE PTR [eax]
  41d288:	cmp    dl,cl
  41d28a:	jg     0x41d2a3
  41d28c:	jl     0x41d2a8
  41d28e:	mov    ecx,ebp
  41d290:	inc    ebp
  41d291:	cmp    ecx,esi
  41d293:	je     0x41d2a3
  41d295:	mov    bl,BYTE PTR [ecx]
  41d297:	mov    edi,DWORD PTR [esp+0x24]
  41d29b:	mov    BYTE PTR [ecx],dl
  41d29d:	mov    BYTE PTR [esi],bl
  41d29f:	mov    ebx,DWORD PTR [esp+0x14]
  41d2a3:	inc    esi
  41d2a4:	cmp    esi,edi
  41d2a6:	jb     0x41d284
  41d2a8:	cmp    ebx,DWORD PTR [esp+0x20]
  41d2ac:	jbe    0x41d2dc
  41d2ae:	lea    edi,[ebx-0x1]
  41d2b1:	mov    cl,BYTE PTR [edi]
  41d2b3:	mov    dl,BYTE PTR [eax]
  41d2b5:	cmp    dl,cl
  41d2b7:	jg     0x41d2c8
  41d2b9:	jl     0x41d2d0
  41d2bb:	dec    eax
  41d2bc:	cmp    eax,edi
  41d2be:	je     0x41d2c8
  41d2c0:	mov    dl,BYTE PTR [edi]
  41d2c2:	mov    cl,BYTE PTR [eax]
  41d2c4:	mov    BYTE PTR [eax],dl
  41d2c6:	mov    BYTE PTR [edi],cl
  41d2c8:	dec    ebx
  41d2c9:	dec    edi
  41d2ca:	cmp    DWORD PTR [esp+0x20],ebx
  41d2ce:	jb     0x41d2b1
  41d2d0:	mov    edi,DWORD PTR [esp+0x24]
  41d2d4:	cmp    ebx,DWORD PTR [esp+0x20]
  41d2d8:	mov    DWORD PTR [esp+0x14],ebx
  41d2dc:	jne    0x41d31b
  41d2de:	cmp    esi,edi
  41d2e0:	je     0x41d35f
  41d2e2:	cmp    ebp,esi
  41d2e4:	je     0x41d2f4
  41d2e6:	cmp    eax,ebp
  41d2e8:	je     0x41d2f4
  41d2ea:	mov    dl,BYTE PTR [ebp+0x0]
  41d2ed:	mov    cl,BYTE PTR [eax]
  41d2ef:	mov    BYTE PTR [eax],dl
  41d2f1:	mov    BYTE PTR [ebp+0x0],cl
  41d2f4:	mov    ecx,esi
  41d2f6:	mov    edi,eax
  41d2f8:	inc    ebp
  41d2f9:	inc    eax
  41d2fa:	inc    esi
  41d2fb:	cmp    edi,ecx
  41d2fd:	je     0x41d278
  41d303:	movzx  edx,BYTE PTR [edi]
  41d306:	mov    BYTE PTR [esp+0x13],dl
  41d30a:	movzx  edx,BYTE PTR [ecx]
  41d30d:	mov    BYTE PTR [edi],dl
  41d30f:	movzx  edx,BYTE PTR [esp+0x13]
  41d314:	mov    BYTE PTR [ecx],dl
  41d316:	jmp    0x41d278
  41d31b:	dec    ebx
  41d31c:	mov    DWORD PTR [esp+0x14],ebx
  41d320:	cmp    esi,edi
  41d322:	jne    0x41d349
  41d324:	dec    eax
  41d325:	cmp    ebx,eax
  41d327:	je     0x41d331
  41d329:	mov    dl,BYTE PTR [eax]
  41d32b:	mov    cl,BYTE PTR [ebx]
  41d32d:	mov    BYTE PTR [ebx],dl
  41d32f:	mov    BYTE PTR [eax],cl
  41d331:	dec    ebp
  41d332:	cmp    eax,ebp
  41d334:	je     0x41d280
  41d33a:	mov    dl,BYTE PTR [ebp+0x0]
  41d33d:	mov    cl,BYTE PTR [eax]
  41d33f:	mov    BYTE PTR [eax],dl
  41d341:	mov    BYTE PTR [ebp+0x0],cl
  41d344:	jmp    0x41d280
  41d349:	cmp    esi,ebx
  41d34b:	je     0x41d359
  41d34d:	mov    dl,BYTE PTR [ebx]
  41d34f:	mov    cl,BYTE PTR [esi]
  41d351:	mov    edi,DWORD PTR [esp+0x24]
  41d355:	mov    BYTE PTR [esi],dl
  41d357:	mov    BYTE PTR [ebx],cl
  41d359:	inc    esi
  41d35a:	jmp    0x41d280
  41d35f:	mov    ecx,DWORD PTR [esp+0x1c]
  41d363:	pop    edi
  41d364:	pop    esi
  41d365:	mov    DWORD PTR [ecx+0x4],ebp
  41d368:	pop    ebp
  41d369:	mov    DWORD PTR [ecx],eax
  41d36b:	mov    eax,ecx
  41d36d:	pop    ebx
  41d36e:	add    esp,0x8
  41d371:	ret    
  41d372:	int3   
  41d373:	int3   
  41d374:	int3   
  41d375:	int3   
  41d376:	int3   
  41d377:	int3   
  41d378:	int3   
  41d379:	int3   
  41d37a:	int3   
  41d37b:	int3   
  41d37c:	int3   
  41d37d:	int3   
  41d37e:	int3   
  41d37f:	int3   
  41d380:	push   0xffffffff
  41d382:	push   0x42c5e8
  41d387:	mov    eax,fs:0x0
  41d38d:	push   eax
  41d38e:	push   ecx
  41d38f:	push   ebx
  41d390:	push   esi
  41d391:	mov    eax,ds:0x43e020
  41d396:	xor    eax,esp
  41d398:	push   eax
  41d399:	lea    eax,[esp+0x10]
  41d39d:	mov    fs:0x0,eax
  41d3a3:	mov    ebx,ecx
  41d3a5:	mov    DWORD PTR [esp+0x18],0x0
  41d3ad:	mov    eax,DWORD PTR [esp+0x28]
  41d3b1:	sub    esp,0x10
  41d3b4:	mov    esi,esp
  41d3b6:	mov    DWORD PTR [ebx],0x0
  41d3bc:	mov    DWORD PTR [esp+0x1c],esp
  41d3c0:	mov    DWORD PTR [esi+0x8],eax
  41d3c3:	mov    DWORD PTR [esi],0x0
  41d3c9:	cmp    eax,0x8
  41d3cc:	ja     0x41d3d6
  41d3ce:	mov    eax,esi
  41d3d0:	lea    ecx,[esp+0x30]
  41d3d4:	jmp    0x41d3e5
  41d3d6:	push   eax
  41d3d7:	call   0x425023
  41d3dc:	mov    DWORD PTR [esi],eax
  41d3de:	mov    ecx,DWORD PTR [esp+0x34]
  41d3e2:	add    esp,0x4
  41d3e5:	mov    edx,DWORD PTR [esi+0x8]
  41d3e8:	push   edx
  41d3e9:	push   ecx
  41d3ea:	push   eax
  41d3eb:	call   0x42a018
  41d3f0:	mov    eax,DWORD PTR [esp+0x48]
  41d3f4:	add    esp,0xc
  41d3f7:	mov    DWORD PTR [esi+0xc],eax
  41d3fa:	call   0x41dff0
  41d3ff:	cmp    DWORD PTR [esp+0x28],0x8
  41d404:	jbe    0x41d417
  41d406:	mov    eax,DWORD PTR [esp+0x20]
  41d40a:	test   eax,eax
  41d40c:	je     0x41d417
  41d40e:	push   eax
  41d40f:	call   0x42517c
  41d414:	add    esp,0x4
  41d417:	mov    eax,ebx
  41d419:	mov    ecx,DWORD PTR [esp+0x10]
  41d41d:	mov    DWORD PTR fs:0x0,ecx
  41d424:	pop    ecx
  41d425:	pop    esi
  41d426:	pop    ebx
  41d427:	add    esp,0x10
  41d42a:	ret    0x10
  41d42d:	int3   
  41d42e:	int3   
  41d42f:	int3   
  41d430:	push   0xffffffff
  41d432:	push   0x42e028
  41d437:	mov    eax,fs:0x0
  41d43d:	push   eax
  41d43e:	sub    esp,0x8
  41d441:	push   esi
  41d442:	push   edi
  41d443:	mov    eax,ds:0x43e020
  41d448:	xor    eax,esp
  41d44a:	push   eax
  41d44b:	lea    eax,[esp+0x14]
  41d44f:	mov    fs:0x0,eax
  41d455:	sub    esp,0x40
  41d458:	mov    DWORD PTR [esp+0x5c],0x1
  41d460:	mov    esi,esp
  41d462:	lea    edi,[esp+0xb0]
  41d469:	mov    DWORD PTR [esp+0x4c],esp
  41d46d:	call   0x419a80
  41d472:	sub    esp,0x40
  41d475:	mov    esi,esp
  41d477:	lea    edi,[esp+0xb0]
  41d47e:	mov    BYTE PTR [esp+0x9c],0x2
  41d486:	mov    DWORD PTR [esp+0x90],esp
  41d48d:	call   0x419a80
  41d492:	mov    eax,DWORD PTR [esp+0xac]
  41d499:	mov    ecx,DWORD PTR [esp+0xa8]
  41d4a0:	mov    edx,DWORD PTR [esp+0xa4]
  41d4a7:	push   eax
  41d4a8:	mov    eax,DWORD PTR [esp+0xa8]
  41d4af:	push   ecx
  41d4b0:	push   edx
  41d4b1:	push   eax
  41d4b2:	mov    BYTE PTR [esp+0xac],0x1
  41d4ba:	call   0x41e0b0
  41d4bf:	mov    BYTE PTR [esp+0x1c],0x0
  41d4c4:	mov    eax,DWORD PTR [esp+0x30]
  41d4c8:	test   eax,eax
  41d4ca:	je     0x41d4f0
  41d4cc:	test   al,0x1
  41d4ce:	jne    0x41d4e8
  41d4d0:	and    eax,0xfffffffe
  41d4d3:	mov    eax,DWORD PTR [eax]
  41d4d5:	test   eax,eax
  41d4d7:	je     0x41d4e8
  41d4d9:	lea    ecx,[esp+0x38]
  41d4dd:	push   0x2
  41d4df:	push   ecx
  41d4e0:	mov    edx,ecx
  41d4e2:	push   edx
  41d4e3:	call   eax
  41d4e5:	add    esp,0xc
  41d4e8:	mov    DWORD PTR [esp+0x30],0x0
  41d4f0:	mov    DWORD PTR [esp+0x1c],0xffffffff
  41d4f8:	mov    eax,DWORD PTR [esp+0x70]
  41d4fc:	test   eax,eax
  41d4fe:	je     0x41d51c
  41d500:	test   al,0x1
  41d502:	jne    0x41d51c
  41d504:	and    eax,0xfffffffe
  41d507:	mov    eax,DWORD PTR [eax]
  41d509:	test   eax,eax
  41d50b:	je     0x41d51c
  41d50d:	lea    ecx,[esp+0x78]
  41d511:	push   0x2
  41d513:	push   ecx
  41d514:	mov    edx,ecx
  41d516:	push   edx
  41d517:	call   eax
  41d519:	add    esp,0xc
  41d51c:	mov    ecx,DWORD PTR [esp+0x14]
  41d520:	mov    DWORD PTR fs:0x0,ecx
  41d527:	pop    ecx
  41d528:	pop    edi
  41d529:	pop    esi
  41d52a:	add    esp,0x14
  41d52d:	ret    0x8c
  41d530:	push   0xffffffff
  41d532:	push   0x42b2ea
  41d537:	mov    eax,fs:0x0
  41d53d:	push   eax
  41d53e:	sub    esp,0x68
  41d541:	mov    eax,ds:0x43e020
  41d546:	xor    eax,esp
  41d548:	mov    DWORD PTR [esp+0x64],eax
  41d54c:	push   ebx
  41d54d:	push   ebp
  41d54e:	push   edi
  41d54f:	mov    eax,ds:0x43e020
  41d554:	xor    eax,esp
  41d556:	push   eax
  41d557:	lea    eax,[esp+0x78]
  41d55b:	mov    fs:0x0,eax
  41d561:	mov    edi,ecx
  41d563:	cmp    edi,esi
  41d565:	je     0x41d5fe
  41d56b:	lea    eax,[esp+0x14]
  41d56f:	push   eax
  41d570:	call   0x415ab0
  41d575:	lea    ebx,[esi+0x4]
  41d578:	push   ebx
  41d579:	lea    ecx,[edi+0x4]
  41d57c:	mov    DWORD PTR [esp+0x84],0x0
  41d587:	call   DWORD PTR ds:0x43017c
  41d58d:	lea    ebp,[esi+0x20]
  41d590:	push   ebp
  41d591:	lea    ecx,[edi+0x20]
  41d594:	call   DWORD PTR ds:0x43017c
  41d59a:	lea    eax,[esi+0x3c]
  41d59d:	push   eax
  41d59e:	lea    ecx,[edi+0x3c]
  41d5a1:	call   DWORD PTR ds:0x43017c
  41d5a7:	mov    ecx,DWORD PTR [esi+0x58]
  41d5aa:	mov    DWORD PTR [edi+0x58],ecx
  41d5ad:	mov    edx,DWORD PTR [esi+0x5c]
  41d5b0:	lea    eax,[esp+0x18]
  41d5b4:	push   eax
  41d5b5:	mov    ecx,ebx
  41d5b7:	mov    DWORD PTR [edi+0x5c],edx
  41d5ba:	call   DWORD PTR ds:0x43017c
  41d5c0:	lea    ecx,[esp+0x34]
  41d5c4:	push   ecx
  41d5c5:	mov    ecx,ebp
  41d5c7:	call   DWORD PTR ds:0x43017c
  41d5cd:	lea    edx,[esp+0x50]
  41d5d1:	push   edx
  41d5d2:	lea    ecx,[esi+0x3c]
  41d5d5:	call   DWORD PTR ds:0x43017c
  41d5db:	mov    eax,DWORD PTR [esp+0x6c]
  41d5df:	mov    ecx,DWORD PTR [esp+0x70]
  41d5e3:	lea    edx,[esp+0x14]
  41d5e7:	push   edx
  41d5e8:	mov    DWORD PTR [esi+0x58],eax
  41d5eb:	mov    DWORD PTR [esi+0x5c],ecx
  41d5ee:	mov    DWORD PTR [esp+0x84],0xffffffff
  41d5f9:	call   0x415b30
  41d5fe:	mov    ecx,DWORD PTR [esp+0x78]
  41d602:	mov    DWORD PTR fs:0x0,ecx
  41d609:	pop    ecx
  41d60a:	pop    edi
  41d60b:	pop    ebp
  41d60c:	pop    ebx
  41d60d:	mov    ecx,DWORD PTR [esp+0x64]
  41d611:	xor    ecx,esp
  41d613:	call   0x42503a
  41d618:	add    esp,0x74
  41d61b:	ret    
  41d61c:	int3   
  41d61d:	int3   
  41d61e:	int3   
  41d61f:	int3   
  41d620:	push   0xffffffff
  41d622:	push   0x42b2bc
  41d627:	mov    eax,fs:0x0
  41d62d:	push   eax
  41d62e:	sub    esp,0x8
  41d631:	push   ebx
  41d632:	push   ebp
  41d633:	push   esi
  41d634:	push   edi
  41d635:	mov    eax,ds:0x43e020
  41d63a:	xor    eax,esp
  41d63c:	push   eax
  41d63d:	lea    eax,[esp+0x1c]
  41d641:	mov    fs:0x0,eax
  41d647:	mov    ebx,ecx
  41d649:	mov    eax,DWORD PTR [esp+0x94]
  41d650:	mov    ebp,DWORD PTR [esp+0x2c]
  41d654:	mov    DWORD PTR [esp+0x14],eax
  41d658:	mov    edi,DWORD PTR [esp+0x30]
  41d65c:	lea    esi,[ebx+ebx*1+0x2]
  41d660:	cmp    esi,edi
  41d662:	mov    DWORD PTR [esp+0x24],0x0
  41d66a:	mov    DWORD PTR [esp+0x18],ebx
  41d66e:	jge    0x41d6df
  41d670:	lea    ecx,[esi+esi*2]
  41d673:	shl    ecx,0x5
  41d676:	lea    eax,[ecx+ebp*1]
  41d679:	lea    edx,[eax-0x60]
  41d67c:	push   edx
  41d67d:	push   eax
  41d67e:	call   DWORD PTR [esp+0x1c]
  41d682:	add    esp,0x8
  41d685:	test   eax,eax
  41d687:	je     0x41d68a
  41d689:	dec    esi
  41d68a:	lea    edi,[esi+esi*2]
  41d68d:	lea    ebx,[ebx+ebx*2]
  41d690:	shl    edi,0x5
  41d693:	add    edi,ebp
  41d695:	shl    ebx,0x5
  41d698:	lea    eax,[edi+0x4]
  41d69b:	add    ebx,ebp
  41d69d:	push   eax
  41d69e:	lea    ecx,[ebx+0x4]
  41d6a1:	call   DWORD PTR ds:0x43017c
  41d6a7:	lea    ecx,[edi+0x20]
  41d6aa:	push   ecx
  41d6ab:	lea    ecx,[ebx+0x20]
  41d6ae:	call   DWORD PTR ds:0x43017c
  41d6b4:	lea    edx,[edi+0x3c]
  41d6b7:	push   edx
  41d6b8:	lea    ecx,[ebx+0x3c]
  41d6bb:	call   DWORD PTR ds:0x43017c
  41d6c1:	mov    eax,DWORD PTR [edi+0x58]
  41d6c4:	mov    DWORD PTR [ebx+0x58],eax
  41d6c7:	mov    ecx,DWORD PTR [edi+0x5c]
  41d6ca:	mov    DWORD PTR [ebx+0x5c],ecx
  41d6cd:	mov    ebx,esi
  41d6cf:	lea    esi,[esi+esi*1+0x2]
  41d6d3:	cmp    esi,DWORD PTR [esp+0x30]
  41d6d7:	jl     0x41d670
  41d6d9:	mov    edi,DWORD PTR [esp+0x30]
  41d6dd:	cmp    esi,edi
  41d6df:	jne    0x41d729
  41d6e1:	lea    edx,[edi+edi*2]
  41d6e4:	shl    edx,0x5
  41d6e7:	lea    ebx,[ebx+ebx*2]
  41d6ea:	lea    esi,[edx+ebp*1-0x60]
  41d6ee:	shl    ebx,0x5
  41d6f1:	lea    eax,[esi+0x4]
  41d6f4:	add    ebx,ebp
  41d6f6:	push   eax
  41d6f7:	lea    ecx,[ebx+0x4]
  41d6fa:	call   DWORD PTR ds:0x43017c
  41d700:	lea    ecx,[esi+0x20]
  41d703:	push   ecx
  41d704:	lea    ecx,[ebx+0x20]
  41d707:	call   DWORD PTR ds:0x43017c
  41d70d:	lea    edx,[esi+0x3c]
  41d710:	push   edx
  41d711:	lea    ecx,[ebx+0x3c]
  41d714:	call   DWORD PTR ds:0x43017c
  41d71a:	mov    eax,DWORD PTR [esi+0x58]
  41d71d:	mov    DWORD PTR [ebx+0x58],eax
  41d720:	mov    ecx,DWORD PTR [esi+0x5c]
  41d723:	mov    DWORD PTR [ebx+0x5c],ecx
  41d726:	lea    ebx,[edi-0x1]
  41d729:	mov    edx,DWORD PTR [esp+0x14]
  41d72d:	push   edx
  41d72e:	sub    esp,0x60
  41d731:	mov    eax,esp
  41d733:	mov    DWORD PTR [esp+0x78],esp
  41d737:	push   eax
  41d738:	lea    edi,[esp+0x9c]
  41d73f:	call   0x415ab0
  41d744:	mov    ecx,DWORD PTR [esp+0x7c]
  41d748:	push   ecx
  41d749:	push   ebp
  41d74a:	mov    ecx,ebx
  41d74c:	call   0x41e3d0
  41d751:	add    esp,0x6c
  41d754:	lea    ecx,[esp+0x70]
  41d758:	mov    DWORD PTR [esp+0x24],0x2
  41d760:	call   DWORD PTR ds:0x430264
  41d766:	lea    ecx,[esp+0x54]
  41d76a:	mov    BYTE PTR [esp+0x24],0x1
  41d76f:	call   DWORD PTR ds:0x430264
  41d775:	lea    ecx,[esp+0x38]
  41d779:	mov    DWORD PTR [esp+0x24],0xffffffff
  41d781:	call   DWORD PTR ds:0x430264
  41d787:	mov    ecx,DWORD PTR [esp+0x1c]
  41d78b:	mov    DWORD PTR fs:0x0,ecx
  41d792:	pop    ecx
  41d793:	pop    edi
  41d794:	pop    esi
  41d795:	pop    ebp
  41d796:	pop    ebx
  41d797:	add    esp,0x14
  41d79a:	ret    
  41d79b:	int3   
  41d79c:	int3   
  41d79d:	int3   
  41d79e:	int3   
  41d79f:	int3   
  41d7a0:	push   0xffffffff
  41d7a2:	push   0x42c748
  41d7a7:	mov    eax,fs:0x0
  41d7ad:	push   eax
  41d7ae:	push   ecx
  41d7af:	push   ebx
  41d7b0:	push   esi
  41d7b1:	mov    eax,ds:0x43e020
  41d7b6:	xor    eax,esp
  41d7b8:	push   eax
  41d7b9:	lea    eax,[esp+0x10]
  41d7bd:	mov    fs:0x0,eax
  41d7c3:	lea    eax,[esp+0x20]
  41d7c7:	xor    ebx,ebx
  41d7c9:	push   eax
  41d7ca:	mov    DWORD PTR [esp+0x1c],ebx
  41d7ce:	call   0x408050
  41d7d3:	add    esp,0x4
  41d7d6:	test   al,al
  41d7d8:	jne    0x41d838
  41d7da:	mov    edx,DWORD PTR [esp+0x20]
  41d7de:	mov    BYTE PTR [esp+0xc],bl
  41d7e2:	mov    ecx,DWORD PTR [esp+0xc]
  41d7e6:	push   ecx
  41d7e7:	sub    esp,0x44
  41d7ea:	mov    eax,esp
  41d7ec:	lea    esi,[eax+0x4]
  41d7ef:	mov    DWORD PTR [esp+0x54],esp
  41d7f3:	push   esi
  41d7f4:	lea    ecx,[esp+0x70]
  41d7f8:	mov    DWORD PTR [eax],edx
  41d7fa:	call   0x417d60
  41d7ff:	mov    eax,DWORD PTR [esp+0xa8]
  41d806:	mov    ebx,edi
  41d808:	mov    DWORD PTR [esi+0x3c],eax
  41d80b:	call   0x41e520
  41d810:	lea    ecx,[esp+0x24]
  41d814:	push   ecx
  41d815:	mov    DWORD PTR [esp+0x1c],0xffffffff
  41d81d:	call   0x40e010
  41d822:	mov    al,0x1
  41d824:	mov    ecx,DWORD PTR [esp+0x10]
  41d828:	mov    DWORD PTR fs:0x0,ecx
  41d82f:	pop    ecx
  41d830:	pop    esi
  41d831:	pop    ebx
  41d832:	add    esp,0x10
  41d835:	ret    0x48
  41d838:	lea    edx,[esp+0x24]
  41d83c:	push   edx
  41d83d:	mov    DWORD PTR [esp+0x1c],0xffffffff
  41d845:	call   0x40e010
  41d84a:	xor    al,al
  41d84c:	mov    ecx,DWORD PTR [esp+0x10]
  41d850:	mov    DWORD PTR fs:0x0,ecx
  41d857:	pop    ecx
  41d858:	pop    esi
  41d859:	pop    ebx
  41d85a:	add    esp,0x10
  41d85d:	ret    0x48
  41d860:	push   0xffffffff
  41d862:	push   0x42b9b8
  41d867:	mov    eax,fs:0x0
  41d86d:	push   eax
  41d86e:	push   ecx
  41d86f:	push   edi
  41d870:	mov    eax,ds:0x43e020
  41d875:	xor    eax,esp
  41d877:	push   eax
  41d878:	lea    eax,[esp+0xc]
  41d87c:	mov    fs:0x0,eax
  41d882:	mov    edi,ecx
  41d884:	lea    eax,[esp+0x1c]
  41d888:	push   eax
  41d889:	mov    DWORD PTR [esp+0x18],0x0
  41d891:	call   0x408050
  41d896:	add    esp,0x4
  41d899:	test   al,al
  41d89b:	jne    0x41d8f6
  41d89d:	mov    edx,DWORD PTR [esp+0x1c]
  41d8a1:	mov    BYTE PTR [esp+0x8],al
  41d8a5:	mov    ecx,DWORD PTR [esp+0x8]
  41d8a9:	push   ecx
  41d8aa:	sub    esp,0x24
  41d8ad:	mov    eax,esp
  41d8af:	mov    DWORD PTR [eax],edx
  41d8b1:	mov    ecx,DWORD PTR [esp+0x48]
  41d8b5:	lea    edx,[esp+0x4c]
  41d8b9:	mov    DWORD PTR [esp+0x30],esp
  41d8bd:	mov    DWORD PTR [eax+0x4],ecx
  41d8c0:	lea    ecx,[eax+0x8]
  41d8c3:	push   edx
  41d8c4:	call   DWORD PTR ds:0x430118
  41d8ca:	call   0x41e5b0
  41d8cf:	lea    ecx,[esp+0x24]
  41d8d3:	mov    DWORD PTR [esp+0x14],0xffffffff
  41d8db:	call   DWORD PTR ds:0x430264
  41d8e1:	mov    al,0x1
  41d8e3:	mov    ecx,DWORD PTR [esp+0xc]
  41d8e7:	mov    DWORD PTR fs:0x0,ecx
  41d8ee:	pop    ecx
  41d8ef:	pop    edi
  41d8f0:	add    esp,0x10
  41d8f3:	ret    0x28
  41d8f6:	lea    ecx,[esp+0x24]
  41d8fa:	mov    DWORD PTR [esp+0x14],0xffffffff
  41d902:	call   DWORD PTR ds:0x430264
  41d908:	xor    al,al
  41d90a:	mov    ecx,DWORD PTR [esp+0xc]
  41d90e:	mov    DWORD PTR fs:0x0,ecx
  41d915:	pop    ecx
  41d916:	pop    edi
  41d917:	add    esp,0x10
  41d91a:	ret    0x28
  41d91d:	int3   
  41d91e:	int3   
  41d91f:	int3   
  41d920:	push   0xffffffff
  41d922:	push   0x42c6d8
  41d927:	mov    eax,fs:0x0
  41d92d:	push   eax
  41d92e:	push   ecx
  41d92f:	push   edi
  41d930:	mov    eax,ds:0x43e020
  41d935:	xor    eax,esp
  41d937:	push   eax
  41d938:	lea    eax,[esp+0xc]
  41d93c:	mov    fs:0x0,eax
  41d942:	mov    edi,ecx
  41d944:	lea    eax,[esp+0x1c]
  41d948:	push   eax
  41d949:	mov    DWORD PTR [esp+0x18],0x0
  41d951:	call   0x408050
  41d956:	add    esp,0x4
  41d959:	test   al,al
  41d95b:	jne    0x41d9bd
  41d95d:	mov    edx,DWORD PTR [esp+0x1c]
  41d961:	mov    BYTE PTR [esp+0x8],al
  41d965:	mov    ecx,DWORD PTR [esp+0x8]
  41d969:	push   ecx
  41d96a:	sub    esp,0x28
  41d96d:	mov    eax,esp
  41d96f:	mov    DWORD PTR [eax],edx
  41d971:	mov    ecx,DWORD PTR [esp+0x4c]
  41d975:	mov    DWORD PTR [eax+0x4],ecx
  41d978:	mov    edx,DWORD PTR [esp+0x50]
  41d97c:	mov    DWORD PTR [eax+0x8],edx
  41d97f:	lea    ecx,[eax+0xc]
  41d982:	lea    eax,[esp+0x54]
  41d986:	mov    DWORD PTR [esp+0x34],esp
  41d98a:	push   eax
  41d98b:	call   DWORD PTR ds:0x430118
  41d991:	call   0x41e640
  41d996:	lea    ecx,[esp+0x28]
  41d99a:	mov    DWORD PTR [esp+0x14],0xffffffff
  41d9a2:	call   DWORD PTR ds:0x430264
  41d9a8:	mov    al,0x1
  41d9aa:	mov    ecx,DWORD PTR [esp+0xc]
  41d9ae:	mov    DWORD PTR fs:0x0,ecx
  41d9b5:	pop    ecx
  41d9b6:	pop    edi
  41d9b7:	add    esp,0x10
  41d9ba:	ret    0x2c
  41d9bd:	lea    ecx,[esp+0x28]
  41d9c1:	mov    DWORD PTR [esp+0x14],0xffffffff
  41d9c9:	call   DWORD PTR ds:0x430264
  41d9cf:	xor    al,al
  41d9d1:	mov    ecx,DWORD PTR [esp+0xc]
  41d9d5:	mov    DWORD PTR fs:0x0,ecx
  41d9dc:	pop    ecx
  41d9dd:	pop    edi
  41d9de:	add    esp,0x10
  41d9e1:	ret    0x2c
  41d9e4:	int3   
  41d9e5:	int3   
  41d9e6:	int3   
  41d9e7:	int3   
  41d9e8:	int3   
  41d9e9:	int3   
  41d9ea:	int3   
  41d9eb:	int3   
  41d9ec:	int3   
  41d9ed:	int3   
  41d9ee:	int3   
  41d9ef:	int3   
  41d9f0:	push   ecx
  41d9f1:	push   ebx
  41d9f2:	push   esi
  41d9f3:	mov    esi,eax
  41d9f5:	mov    eax,DWORD PTR [esp+0x10]
  41d9f9:	cmp    eax,0xfffffffc
  41d9fc:	je     0x41da12
  41d9fe:	test   eax,eax
  41da00:	je     0x41da08
  41da02:	cmp    eax,DWORD PTR [esp+0x18]
  41da06:	je     0x41da12
  41da08:	call   DWORD PTR ds:0x430390
  41da0e:	mov    eax,DWORD PTR [esp+0x10]
  41da12:	mov    ecx,DWORD PTR [esp+0x14]
  41da16:	mov    edx,DWORD PTR [esp+0x1c]
  41da1a:	cmp    ecx,edx
  41da1c:	je     0x41da39
  41da1e:	mov    ebx,DWORD PTR [esi+0x4]
  41da21:	mov    esi,DWORD PTR [esi]
  41da23:	push   ebx
  41da24:	push   esi
  41da25:	push   edx
  41da26:	mov    edx,DWORD PTR [esp+0x24]
  41da2a:	push   edx
  41da2b:	push   ecx
  41da2c:	push   eax
  41da2d:	mov    ecx,edi
  41da2f:	call   DWORD PTR ds:0x430210
  41da35:	pop    esi
  41da36:	pop    ebx
  41da37:	pop    ecx
  41da38:	ret    
  41da39:	mov    edx,DWORD PTR [esi+0x4]
  41da3c:	push   edx
  41da3d:	mov    edx,DWORD PTR [esi]
  41da3f:	push   edx
  41da40:	push   ecx
  41da41:	push   eax
  41da42:	mov    ecx,edi
  41da44:	call   DWORD PTR ds:0x430204
  41da4a:	pop    esi
  41da4b:	pop    ebx
  41da4c:	pop    ecx
  41da4d:	ret    
  41da4e:	int3   
  41da4f:	int3   
  41da50:	cmp    ecx,esi
  41da52:	je     0x41da7e
  41da54:	push   edi
  41da55:	test   eax,eax
  41da57:	je     0x41da73
  41da59:	mov    edx,DWORD PTR [ecx]
  41da5b:	mov    DWORD PTR [eax],edx
  41da5d:	mov    edx,DWORD PTR [ecx+0x4]
  41da60:	mov    DWORD PTR [eax+0x4],edx
  41da63:	test   edx,edx
  41da65:	je     0x41da73
  41da67:	add    edx,0x4
  41da6a:	mov    edi,0x1
  41da6f:	lock xadd DWORD PTR [edx],edi
  41da73:	add    ecx,0x8
  41da76:	add    eax,0x8
  41da79:	cmp    ecx,esi
  41da7b:	jne    0x41da55
  41da7d:	pop    edi
  41da7e:	ret    
  41da7f:	int3   
  41da80:	push   esi
  41da81:	mov    esi,ecx
  41da83:	cmp    esi,edi
  41da85:	je     0x41daa5
  41da87:	push   ebx
  41da88:	jmp    0x41da90
  41da8a:	lea    ebx,[ebx+0x0]
  41da90:	mov    bl,BYTE PTR [esi]
  41da92:	lea    eax,[esp+0xc]
  41da96:	call   0x41cc00
  41da9b:	test   al,al
  41da9d:	jne    0x41daa4
  41da9f:	inc    esi
  41daa0:	cmp    esi,edi
  41daa2:	jne    0x41da90
  41daa4:	pop    ebx
  41daa5:	cmp    DWORD PTR [esp+0x10],0x8
  41daaa:	jbe    0x41dabd
  41daac:	mov    eax,DWORD PTR [esp+0x8]
  41dab0:	test   eax,eax
  41dab2:	je     0x41dabd
  41dab4:	push   eax
  41dab5:	call   0x42517c
  41daba:	add    esp,0x4
  41dabd:	mov    eax,esi
  41dabf:	pop    esi
  41dac0:	ret    
  41dac1:	int3   
  41dac2:	int3   
  41dac3:	int3   
  41dac4:	int3   
  41dac5:	int3   
  41dac6:	int3   
  41dac7:	int3   
  41dac8:	int3   
  41dac9:	int3   
  41daca:	int3   
  41dacb:	int3   
  41dacc:	int3   
  41dacd:	int3   
  41dace:	int3   
  41dacf:	int3   
  41dad0:	sub    esp,0x14
  41dad3:	cmp    eax,0x80
  41dad8:	jae    0x41dae5
  41dada:	mov    edx,DWORD PTR [ecx]
  41dadc:	mov    BYTE PTR [edx],al
  41dade:	inc    edx
  41dadf:	mov    DWORD PTR [ecx],edx
  41dae1:	add    esp,0x14
  41dae4:	ret    
  41dae5:	push   esi
  41dae6:	cmp    eax,0x800
  41daeb:	jae    0x41db0b
  41daed:	mov    esi,DWORD PTR [ecx]
  41daef:	mov    dl,al
  41daf1:	and    dl,0x3f
  41daf4:	shr    eax,0x6
  41daf7:	or     dl,0x80
  41dafa:	or     al,0xc0
  41dafc:	mov    BYTE PTR [esi+0x1],dl
  41daff:	mov    BYTE PTR [esi],al
  41db01:	add    esi,0x2
  41db04:	mov    DWORD PTR [ecx],esi
  41db06:	pop    esi
  41db07:	add    esp,0x14
  41db0a:	ret    
  41db0b:	cmp    eax,0x10000
  41db10:	jae    0x41db3e
  41db12:	mov    esi,DWORD PTR [ecx]
  41db14:	mov    dl,al
  41db16:	and    dl,0x3f
  41db19:	or     dl,0x80
  41db1c:	mov    BYTE PTR [esi+0x2],dl
  41db1f:	shr    eax,0x6
  41db22:	mov    dl,al
  41db24:	and    dl,0x3f
  41db27:	shr    eax,0x6
  41db2a:	or     dl,0x80
  41db2d:	mov    BYTE PTR [esi+0x1],dl
  41db30:	or     al,0xe0
  41db32:	mov    BYTE PTR [esi],al
  41db34:	add    esi,0x3
  41db37:	mov    DWORD PTR [ecx],esi
  41db39:	pop    esi
  41db3a:	add    esp,0x14
  41db3d:	ret    
  41db3e:	cmp    eax,0x110000
  41db43:	jae    0x41db7f
  41db45:	mov    esi,DWORD PTR [ecx]
  41db47:	mov    dl,al
  41db49:	and    dl,0x3f
  41db4c:	or     dl,0x80
  41db4f:	mov    BYTE PTR [esi+0x3],dl
  41db52:	shr    eax,0x6
  41db55:	mov    dl,al
  41db57:	and    dl,0x3f
  41db5a:	or     dl,0x80
  41db5d:	mov    BYTE PTR [esi+0x2],dl
  41db60:	shr    eax,0x6
  41db63:	mov    dl,al
  41db65:	and    dl,0x3f
  41db68:	shr    eax,0x6
  41db6b:	or     dl,0x80
  41db6e:	mov    BYTE PTR [esi+0x1],dl
  41db71:	or     al,0xf0
  41db73:	mov    BYTE PTR [esi],al
  41db75:	add    esi,0x4
  41db78:	mov    DWORD PTR [ecx],esi
  41db7a:	pop    esi
  41db7b:	add    esp,0x14
  41db7e:	ret    
  41db7f:	mov    eax,DWORD PTR [ecx]
  41db81:	push   eax
  41db82:	push   0x432518
  41db87:	lea    esi,[esp+0xc]
  41db8b:	call   0x40b920
  41db90:	push   0x435d14
  41db95:	mov    ecx,esi
  41db97:	push   ecx
  41db98:	call   0x429e76
  41db9d:	int3   
  41db9e:	int3   
  41db9f:	int3   
  41dba0:	mov    eax,DWORD PTR [edi]
  41dba2:	movzx  ecx,BYTE PTR [eax]
  41dba5:	sub    esp,0x18
  41dba8:	cmp    BYTE PTR [ecx+0x432848],0x0
  41dbaf:	je     0x41dbbf
  41dbb1:	movzx  edx,BYTE PTR [eax+0x1]
  41dbb5:	inc    eax
  41dbb6:	cmp    BYTE PTR [edx+0x432848],0x0
  41dbbd:	jne    0x41dbb1
  41dbbf:	mov    DWORD PTR [edi],eax
  41dbc1:	movzx  ecx,BYTE PTR [eax]
  41dbc4:	cmp    BYTE PTR [ecx+0x432548],0x0
  41dbcb:	push   ebx
  41dbcc:	push   esi
  41dbcd:	mov    esi,eax
  41dbcf:	mov    DWORD PTR [esp+0x8],eax
  41dbd3:	je     0x41dd56
  41dbd9:	mov    bl,0x3b
  41dbdb:	jmp    0x41dbe0
  41dbdd:	lea    ecx,[ecx+0x0]
  41dbe0:	mov    dl,BYTE PTR [esi]
  41dbe2:	cmp    dl,0x26
  41dbe5:	jne    0x41dd3e
  41dbeb:	movsx  ecx,BYTE PTR [esi+0x1]
  41dbef:	add    ecx,0xffffffdd
  41dbf2:	cmp    ecx,0x4e
  41dbf5:	ja     0x41dd3e
  41dbfb:	movzx  ecx,BYTE PTR [ecx+0x41dda4]
  41dc02:	jmp    DWORD PTR [ecx*4+0x41dd8c]
  41dc09:	mov    cl,BYTE PTR [esi+0x2]
  41dc0c:	cmp    cl,0x6d
  41dc0f:	jne    0x41dc28
  41dc11:	cmp    BYTE PTR [esi+0x3],0x70
  41dc15:	jne    0x41dc28
  41dc17:	cmp    BYTE PTR [esi+0x4],bl
  41dc1a:	jne    0x41dc28
  41dc1c:	mov    BYTE PTR [eax],0x26
  41dc1f:	inc    eax
  41dc20:	add    esi,0x5
  41dc23:	jmp    0x41dd42
  41dc28:	cmp    cl,0x70
  41dc2b:	jne    0x41dd3e
  41dc31:	cmp    BYTE PTR [esi+0x3],0x6f
  41dc35:	jne    0x41dd3e
  41dc3b:	cmp    BYTE PTR [esi+0x4],0x73
  41dc3f:	jne    0x41dd3e
  41dc45:	cmp    BYTE PTR [esi+0x5],bl
  41dc48:	jne    0x41dd3e
  41dc4e:	mov    BYTE PTR [eax],0x27
  41dc51:	inc    eax
  41dc52:	add    esi,0x6
  41dc55:	jmp    0x41dd42
  41dc5a:	cmp    BYTE PTR [esi+0x2],0x75
  41dc5e:	jne    0x41dd3e
  41dc64:	cmp    BYTE PTR [esi+0x3],0x6f
  41dc68:	jne    0x41dd3e
  41dc6e:	cmp    BYTE PTR [esi+0x4],0x74
  41dc72:	jne    0x41dd3e
  41dc78:	cmp    BYTE PTR [esi+0x5],bl
  41dc7b:	jne    0x41dd3e
  41dc81:	mov    BYTE PTR [eax],0x22
  41dc84:	inc    eax
  41dc85:	add    esi,0x6
  41dc88:	jmp    0x41dd42
  41dc8d:	cmp    BYTE PTR [esi+0x2],0x74
  41dc91:	jne    0x41dd3e
  41dc97:	cmp    BYTE PTR [esi+0x3],bl
  41dc9a:	jne    0x41dd3e
  41dca0:	mov    BYTE PTR [eax],0x3e
  41dca3:	inc    eax
  41dca4:	add    esi,0x4
  41dca7:	jmp    0x41dd42
  41dcac:	cmp    BYTE PTR [esi+0x2],0x74
  41dcb0:	jne    0x41dd3e
  41dcb6:	cmp    BYTE PTR [esi+0x3],bl
  41dcb9:	jne    0x41dd3e
  41dcbf:	mov    BYTE PTR [eax],0x3c
  41dcc2:	inc    eax
  41dcc3:	add    esi,0x4
  41dcc6:	jmp    0x41dd42
  41dccb:	xor    eax,eax
  41dccd:	cmp    BYTE PTR [esi+0x2],0x78
  41dcd1:	jne    0x41dcff
  41dcd3:	movzx  edx,BYTE PTR [esi+0x3]
  41dcd7:	mov    cl,BYTE PTR [edx+0x432418]
  41dcdd:	add    esi,0x3
  41dce0:	cmp    cl,0xff
  41dce3:	je     0x41dd2a
  41dce5:	movzx  edx,BYTE PTR [esi+0x1]
  41dce9:	inc    esi
  41dcea:	movzx  ecx,cl
  41dced:	shl    eax,0x4
  41dcf0:	add    eax,ecx
  41dcf2:	mov    cl,BYTE PTR [edx+0x432418]
  41dcf8:	cmp    cl,0xff
  41dcfb:	jne    0x41dce5
  41dcfd:	jmp    0x41dd2a
  41dcff:	movzx  ecx,BYTE PTR [esi+0x2]
  41dd03:	mov    cl,BYTE PTR [ecx+0x432418]
  41dd09:	add    esi,0x2
  41dd0c:	cmp    cl,0xff
  41dd0f:	je     0x41dd2a
  41dd11:	lea    edx,[eax+eax*4]
  41dd14:	movzx  eax,cl
  41dd17:	movzx  ecx,BYTE PTR [esi+0x1]
  41dd1b:	mov    cl,BYTE PTR [ecx+0x432418]
  41dd21:	inc    esi
  41dd22:	lea    eax,[eax+edx*2]
  41dd25:	cmp    cl,0xff
  41dd28:	jne    0x41dd11
  41dd2a:	lea    ecx,[esp+0x8]
  41dd2e:	call   0x41dad0
  41dd33:	cmp    BYTE PTR [esi],bl
  41dd35:	jne    0x41dd5e
  41dd37:	mov    eax,DWORD PTR [esp+0x8]
  41dd3b:	inc    esi
  41dd3c:	jmp    0x41dd46
  41dd3e:	mov    BYTE PTR [eax],dl
  41dd40:	inc    eax
  41dd41:	inc    esi
  41dd42:	mov    DWORD PTR [esp+0x8],eax
  41dd46:	movzx  edx,BYTE PTR [esi]
  41dd49:	cmp    BYTE PTR [edx+0x432548],0x0
  41dd50:	jne    0x41dbe0
  41dd56:	mov    DWORD PTR [edi],esi
  41dd58:	pop    esi
  41dd59:	pop    ebx
  41dd5a:	add    esp,0x18
  41dd5d:	ret    
  41dd5e:	lea    ecx,[esp+0xc]
  41dd62:	call   DWORD PTR ds:0x4303ac
  41dd68:	push   0x435d14
  41dd6d:	lea    eax,[esp+0x10]
  41dd71:	push   eax
  41dd72:	mov    DWORD PTR [esp+0x14],0x43294c
  41dd7a:	mov    DWORD PTR [esp+0x20],0x43200c
  41dd82:	mov    DWORD PTR [esp+0x24],esi
  41dd86:	call   0x429e76
  41dd8b:	nop
  41dd8c:	retf   
  41dd8d:	fadd   QWORD PTR [ecx+0x0]
  41dd90:	or     esp,ebx
  41dd92:	inc    ecx
  41dd93:	add    BYTE PTR [ebp-0x53ffbe24],cl
  41dd99:	fadd   QWORD PTR [ecx+0x0]
  41dd9c:	pop    edx
  41dd9d:	fadd   QWORD PTR [ecx+0x0]
  41dda0:	fld    QWORD PTR ds:[ecx+0x0]
  41dda4:	add    BYTE PTR ds:0x5050505,al
  41ddaa:	add    eax,0x5050505
  41ddaf:	add    eax,0x5050505
  41ddb4:	add    eax,0x5050505
  41ddb9:	add    eax,0x5050505
  41ddbe:	add    eax,0x5050505
  41ddc3:	add    eax,0x5050505
  41ddc8:	add    eax,0x5050505
  41ddcd:	add    eax,0x5050505
  41ddd2:	add    eax,0x5050505
  41ddd7:	add    eax,0x5050505
  41dddc:	add    eax,0x5050505
  41dde1:	add    eax,0x5050501
  41dde6:	add    eax,0x5050205
  41ddeb:	add    eax,0x5050305
  41ddf0:	add    eax,0xcccc0405
  41ddf5:	int3   
  41ddf6:	int3   
  41ddf7:	int3   
  41ddf8:	int3   
  41ddf9:	int3   
  41ddfa:	int3   
  41ddfb:	int3   
  41ddfc:	int3   
  41ddfd:	int3   
  41ddfe:	int3   
  41ddff:	int3   
  41de00:	push   ecx
  41de01:	push   esi
  41de02:	push   edi
  41de03:	mov    edi,DWORD PTR [esp+0x10]
  41de07:	mov    esi,eax
  41de09:	mov    eax,edi
  41de0b:	sub    eax,esi
  41de0d:	cmp    eax,0x28
  41de10:	jle    0x41df15
  41de16:	inc    eax
  41de17:	cdq    
  41de18:	and    edx,0x7
  41de1b:	add    eax,edx
  41de1d:	mov    dl,BYTE PTR [esi]
  41de1f:	push   ebx
  41de20:	mov    edi,eax
  41de22:	sar    edi,0x3
  41de25:	mov    al,BYTE PTR [edi+esi*1]
  41de28:	push   ebp
  41de29:	lea    ebx,[edi+edi*1]
  41de2c:	lea    ebp,[edi+esi*1]
  41de2f:	mov    DWORD PTR [esp+0x10],ebx
  41de33:	add    ebx,esi
  41de35:	cmp    al,dl
  41de37:	jge    0x41de42
  41de39:	cmp    ebp,esi
  41de3b:	je     0x41de42
  41de3d:	mov    BYTE PTR [ebp+0x0],dl
  41de40:	mov    BYTE PTR [esi],al
  41de42:	mov    al,BYTE PTR [ebx]
  41de44:	mov    dl,BYTE PTR [ebp+0x0]
  41de47:	cmp    al,dl
  41de49:	jge    0x41de54
  41de4b:	cmp    ebx,ebp
  41de4d:	je     0x41de54
  41de4f:	mov    BYTE PTR [ebx],dl
  41de51:	mov    BYTE PTR [ebp+0x0],al
  41de54:	mov    al,BYTE PTR [ebp+0x0]
  41de57:	mov    dl,BYTE PTR [esi]
  41de59:	cmp    al,dl
  41de5b:	jge    0x41de66
  41de5d:	cmp    ebp,esi
  41de5f:	je     0x41de66
  41de61:	mov    BYTE PTR [ebp+0x0],dl
  41de64:	mov    BYTE PTR [esi],al
  41de66:	mov    al,BYTE PTR [ecx]
  41de68:	mov    esi,ecx
  41de6a:	sub    esi,edi
  41de6c:	mov    dl,BYTE PTR [esi]
  41de6e:	cmp    al,dl
  41de70:	lea    ebx,[edi+ecx*1]
  41de73:	jge    0x41de7d
  41de75:	cmp    ecx,esi
  41de77:	je     0x41de7d
  41de79:	mov    BYTE PTR [ecx],dl
  41de7b:	mov    BYTE PTR [esi],al
  41de7d:	mov    al,BYTE PTR [ebx]
  41de7f:	mov    dl,BYTE PTR [ecx]
  41de81:	cmp    al,dl
  41de83:	jge    0x41de8d
  41de85:	cmp    ebx,ecx
  41de87:	je     0x41de8d
  41de89:	mov    BYTE PTR [ebx],dl
  41de8b:	mov    BYTE PTR [ecx],al
  41de8d:	mov    al,BYTE PTR [ecx]
  41de8f:	mov    dl,BYTE PTR [esi]
  41de91:	cmp    al,dl
  41de93:	jge    0x41de9d
  41de95:	cmp    ecx,esi
  41de97:	je     0x41de9d
  41de99:	mov    BYTE PTR [ecx],dl
  41de9b:	mov    BYTE PTR [esi],al
  41de9d:	mov    ebx,DWORD PTR [esp+0x18]
  41dea1:	mov    esi,ebx
  41dea3:	sub    esi,edi
  41dea5:	mov    al,BYTE PTR [esi]
  41dea7:	mov    edi,ebx
  41dea9:	sub    edi,DWORD PTR [esp+0x10]
  41dead:	mov    dl,BYTE PTR [edi]
  41deaf:	cmp    al,dl
  41deb1:	jge    0x41debb
  41deb3:	cmp    esi,edi
  41deb5:	je     0x41debb
  41deb7:	mov    BYTE PTR [esi],dl
  41deb9:	mov    BYTE PTR [edi],al
  41debb:	mov    al,BYTE PTR [ebx]
  41debd:	mov    dl,BYTE PTR [esi]
  41debf:	cmp    al,dl
  41dec1:	jge    0x41decb
  41dec3:	cmp    ebx,esi
  41dec5:	je     0x41decb
  41dec7:	mov    BYTE PTR [ebx],dl
  41dec9:	mov    BYTE PTR [esi],al
  41decb:	mov    al,BYTE PTR [esi]
  41decd:	mov    dl,BYTE PTR [edi]
  41decf:	cmp    al,dl
  41ded1:	jge    0x41dedb
  41ded3:	cmp    esi,edi
  41ded5:	je     0x41dedb
  41ded7:	mov    BYTE PTR [esi],dl
  41ded9:	mov    BYTE PTR [edi],al
  41dedb:	mov    al,BYTE PTR [ecx]
  41dedd:	mov    dl,BYTE PTR [ebp+0x0]
  41dee0:	cmp    al,dl
  41dee2:	jge    0x41deed
  41dee4:	cmp    ecx,ebp
  41dee6:	je     0x41deed
  41dee8:	mov    BYTE PTR [ecx],dl
  41deea:	mov    BYTE PTR [ebp+0x0],al
  41deed:	mov    al,BYTE PTR [esi]
  41deef:	mov    dl,BYTE PTR [ecx]
  41def1:	cmp    al,dl
  41def3:	jge    0x41defd
  41def5:	cmp    esi,ecx
  41def7:	je     0x41defd
  41def9:	mov    BYTE PTR [esi],dl
  41defb:	mov    BYTE PTR [ecx],al
  41defd:	mov    al,BYTE PTR [ecx]
  41deff:	mov    dl,BYTE PTR [ebp+0x0]
  41df02:	cmp    al,dl
  41df04:	jge    0x41df0f
  41df06:	cmp    ecx,ebp
  41df08:	je     0x41df0f
  41df0a:	mov    BYTE PTR [ecx],dl
  41df0c:	mov    BYTE PTR [ebp+0x0],al
  41df0f:	pop    ebp
  41df10:	pop    ebx
  41df11:	pop    edi
  41df12:	pop    esi
  41df13:	pop    ecx
  41df14:	ret    
  41df15:	mov    al,BYTE PTR [ecx]
  41df17:	mov    dl,BYTE PTR [esi]
  41df19:	cmp    al,dl
  41df1b:	jge    0x41df25
  41df1d:	cmp    ecx,esi
  41df1f:	je     0x41df25
  41df21:	mov    BYTE PTR [ecx],dl
  41df23:	mov    BYTE PTR [esi],al
  41df25:	mov    al,BYTE PTR [edi]
  41df27:	mov    dl,BYTE PTR [ecx]
  41df29:	cmp    al,dl
  41df2b:	jge    0x41df35
  41df2d:	cmp    edi,ecx
  41df2f:	je     0x41df35
  41df31:	mov    BYTE PTR [edi],dl
  41df33:	mov    BYTE PTR [ecx],al
  41df35:	mov    al,BYTE PTR [ecx]
  41df37:	mov    dl,BYTE PTR [esi]
  41df39:	cmp    al,dl
  41df3b:	jge    0x41df11
  41df3d:	cmp    ecx,esi
  41df3f:	je     0x41df11
  41df41:	mov    BYTE PTR [ecx],dl
  41df43:	pop    edi
  41df44:	mov    BYTE PTR [esi],al
  41df46:	pop    esi
  41df47:	pop    ecx
  41df48:	ret    
  41df49:	int3   
  41df4a:	int3   
  41df4b:	int3   
  41df4c:	int3   
  41df4d:	int3   
  41df4e:	int3   
  41df4f:	int3   
  41df50:	push   ebp
  41df51:	mov    ebp,DWORD PTR [esp+0x8]
  41df55:	sub    ebp,edi
  41df57:	mov    eax,ebp
  41df59:	cdq    
  41df5a:	sub    eax,edx
  41df5c:	push   esi
  41df5d:	mov    esi,eax
  41df5f:	sar    esi,1
  41df61:	test   esi,esi
  41df63:	jle    0x41df7d
  41df65:	push   ebx
  41df66:	mov    bl,BYTE PTR [esi+edi*1-0x1]
  41df6a:	dec    esi
  41df6b:	push   esi
  41df6c:	mov    eax,ebp
  41df6e:	mov    ecx,edi
  41df70:	call   0x41e860
  41df75:	add    esp,0x4
  41df78:	test   esi,esi
  41df7a:	jg     0x41df66
  41df7c:	pop    ebx
  41df7d:	pop    esi
  41df7e:	pop    ebp
  41df7f:	ret    
  41df80:	mov    edx,DWORD PTR [esp+0x4]
  41df84:	push   ebp
  41df85:	lea    ebp,[edx+0x1]
  41df88:	cmp    ebp,DWORD PTR [esp+0xc]
  41df8c:	je     0x41dfe1
  41df8e:	push   ebx
  41df8f:	push   esi
  41df90:	push   edi
  41df91:	mov    edi,ebp
  41df93:	sub    edi,edx
  41df95:	mov    bl,BYTE PTR [ebp+0x0]
  41df98:	cmp    bl,BYTE PTR [edx]
  41df9a:	mov    esi,ebp
  41df9c:	jge    0x41dfbc
  41df9e:	test   edi,edi
  41dfa0:	jle    0x41dfb8
  41dfa2:	push   edi
  41dfa3:	push   edx
  41dfa4:	mov    eax,ebp
  41dfa6:	sub    eax,edi
  41dfa8:	inc    eax
  41dfa9:	push   edi
  41dfaa:	push   eax
  41dfab:	call   DWORD PTR ds:0x430394
  41dfb1:	mov    edx,DWORD PTR [esp+0x24]
  41dfb5:	add    esp,0x10
  41dfb8:	mov    BYTE PTR [edx],bl
  41dfba:	jmp    0x41dfd6
  41dfbc:	mov    cl,BYTE PTR [edx+edi*1-0x1]
  41dfc0:	cmp    bl,cl
  41dfc2:	lea    eax,[edx+edi*1-0x1]
  41dfc6:	jge    0x41dfd4
  41dfc8:	mov    BYTE PTR [esi],cl
  41dfca:	mov    cl,BYTE PTR [eax-0x1]
  41dfcd:	mov    esi,eax
  41dfcf:	dec    eax
  41dfd0:	cmp    bl,cl
  41dfd2:	jl     0x41dfc8
  41dfd4:	mov    BYTE PTR [esi],bl
  41dfd6:	inc    ebp
  41dfd7:	inc    edi
  41dfd8:	cmp    ebp,DWORD PTR [esp+0x18]
  41dfdc:	jne    0x41df95
  41dfde:	pop    edi
  41dfdf:	pop    esi
  41dfe0:	pop    ebx
  41dfe1:	pop    ebp
  41dfe2:	ret    
  41dfe3:	int3   
  41dfe4:	int3   
  41dfe5:	int3   
  41dfe6:	int3   
  41dfe7:	int3   
  41dfe8:	int3   
  41dfe9:	int3   
  41dfea:	int3   
  41dfeb:	int3   
  41dfec:	int3   
  41dfed:	int3   
  41dfee:	int3   
  41dfef:	int3   
  41dff0:	push   0xffffffff
  41dff2:	push   0x42c5e8
  41dff7:	mov    eax,fs:0x0
  41dffd:	push   eax
  41dffe:	push   ecx
  41dfff:	push   esi
  41e000:	push   edi
  41e001:	mov    eax,ds:0x43e020
  41e006:	xor    eax,esp
  41e008:	push   eax
  41e009:	lea    eax,[esp+0x10]
  41e00d:	mov    fs:0x0,eax
  41e013:	mov    DWORD PTR [esp+0x18],0x0
  41e01b:	mov    eax,DWORD PTR [esp+0x28]
  41e01f:	sub    esp,0x10
  41e022:	mov    esi,esp
  41e024:	lea    edi,[ebx+0x8]
  41e027:	mov    DWORD PTR [esp+0x1c],esp
  41e02b:	mov    DWORD PTR [esi+0x8],eax
  41e02e:	mov    DWORD PTR [esi],0x0
  41e034:	cmp    eax,0x8
  41e037:	ja     0x41e041
  41e039:	mov    eax,esi
  41e03b:	lea    ecx,[esp+0x30]
  41e03f:	jmp    0x41e050
  41e041:	push   eax
  41e042:	call   0x425023
  41e047:	mov    DWORD PTR [esi],eax
  41e049:	mov    ecx,DWORD PTR [esp+0x34]
  41e04d:	add    esp,0x4
  41e050:	mov    edx,DWORD PTR [esi+0x8]
  41e053:	push   edx
  41e054:	push   ecx
  41e055:	push   eax
  41e056:	call   0x42a018
  41e05b:	mov    eax,DWORD PTR [esp+0x48]
  41e05f:	add    esp,0xc
  41e062:	mov    DWORD PTR [esi+0xc],eax
  41e065:	call   0x41e8d0
  41e06a:	movzx  ecx,al
  41e06d:	neg    ecx
  41e06f:	sbb    ecx,ecx
  41e071:	and    ecx,0x43253c
  41e077:	cmp    DWORD PTR [esp+0x28],0x8
  41e07c:	mov    DWORD PTR [ebx],ecx
  41e07e:	jbe    0x41e091
  41e080:	mov    eax,DWORD PTR [esp+0x20]
  41e084:	test   eax,eax
  41e086:	je     0x41e091
  41e088:	push   eax
  41e089:	call   0x42517c
  41e08e:	add    esp,0x4
  41e091:	mov    ecx,DWORD PTR [esp+0x10]
  41e095:	mov    DWORD PTR fs:0x0,ecx
  41e09c:	pop    ecx
  41e09d:	pop    edi
  41e09e:	pop    esi
  41e09f:	add    esp,0x10
  41e0a2:	ret    0x10
  41e0a5:	int3   
  41e0a6:	int3   
  41e0a7:	int3   
  41e0a8:	int3   
  41e0a9:	int3   
  41e0aa:	int3   
  41e0ab:	int3   
  41e0ac:	int3   
  41e0ad:	int3   
  41e0ae:	int3   
  41e0af:	int3   
  41e0b0:	push   0xffffffff
  41e0b2:	push   0x42dfe9
  41e0b7:	mov    eax,fs:0x0
  41e0bd:	push   eax
  41e0be:	sub    esp,0x34
  41e0c1:	push   ebx
  41e0c2:	push   ebp
  41e0c3:	push   esi
  41e0c4:	push   edi
  41e0c5:	mov    eax,ds:0x43e020
  41e0ca:	xor    eax,esp
  41e0cc:	push   eax
  41e0cd:	lea    eax,[esp+0x48]
  41e0d1:	mov    fs:0x0,eax
  41e0d7:	lea    edi,[esp+0xa8]
  41e0de:	lea    esi,[esp+0x68]
  41e0e2:	mov    DWORD PTR [esp+0x50],0x1
  41e0ea:	call   0x41ee00
  41e0ef:	test   al,al
  41e0f1:	jne    0x41e27c
  41e0f7:	mov    ebx,DWORD PTR [esp+0x58]
  41e0fb:	mov    esi,DWORD PTR [ebx+0xc]
  41e0fe:	mov    ecx,DWORD PTR [ebx+0x10]
  41e101:	sub    ecx,esi
  41e103:	mov    eax,0x92492493
  41e108:	imul   ecx
  41e10a:	add    edx,ecx
  41e10c:	mov    ecx,DWORD PTR [esp+0x64]
  41e110:	sar    edx,0x4
  41e113:	mov    edi,DWORD PTR [esp+0x8c]
  41e11a:	mov    ebp,edx
  41e11c:	sub    ecx,esi
  41e11e:	shr    ebp,0x1f
  41e121:	add    ebp,edx
  41e123:	mov    eax,0x92492493
  41e128:	imul   ecx
  41e12a:	mov    eax,DWORD PTR [esp+0x88]
  41e131:	add    edx,ecx
  41e133:	sar    edx,0x4
  41e136:	mov    esi,edx
  41e138:	shr    esi,0x1f
  41e13b:	add    esi,edx
  41e13d:	mov    DWORD PTR [esp+0x1c],ebp
  41e141:	mov    DWORD PTR [esp+0x18],esi
  41e145:	cmp    DWORD PTR [esp+0x68],0x0
  41e14a:	je     0x41e15a
  41e14c:	cmp    BYTE PTR [esp+0x98],0x0
  41e154:	jne    0x41e15a
  41e156:	xor    cl,cl
  41e158:	jmp    0x41e15c
  41e15a:	mov    cl,0x1
  41e15c:	cmp    DWORD PTR [esp+0xa8],0x0
  41e164:	je     0x41e174
  41e166:	cmp    BYTE PTR [esp+0xd8],0x0
  41e16e:	jne    0x41e174
  41e170:	xor    dl,dl
  41e172:	jmp    0x41e176
  41e174:	mov    dl,0x1
  41e176:	test   cl,cl
  41e178:	jne    0x41e2f5
  41e17e:	test   dl,dl
  41e180:	jne    0x41e2f5
  41e186:	mov    ecx,DWORD PTR [esp+0xcc]
  41e18d:	mov    edx,DWORD PTR [esp+0xc8]
  41e194:	mov    esi,edi
  41e196:	sub    ecx,edx
  41e198:	sub    esi,eax
  41e19a:	cmp    esi,ecx
  41e19c:	jne    0x41e304
  41e1a2:	mov    BYTE PTR [esp+0x20],0x0
  41e1a7:	mov    ecx,DWORD PTR [esp+0x20]
  41e1ab:	push   ecx
  41e1ac:	mov    ecx,DWORD PTR [esp+0x5c]
  41e1b0:	push   ecx
  41e1b1:	mov    ecx,edi
  41e1b3:	call   0x41eeb0
  41e1b8:	add    esp,0x8
  41e1bb:	test   al,al
  41e1bd:	je     0x41e304
  41e1c3:	mov    edx,DWORD PTR [esp+0x90]
  41e1ca:	cmp    edx,DWORD PTR [esp+0xd0]
  41e1d1:	jne    0x41e304
  41e1d7:	mov    eax,DWORD PTR [esp+0x94]
  41e1de:	cmp    eax,DWORD PTR [esp+0xd4]
  41e1e5:	jne    0x41e304
  41e1eb:	mov    esi,DWORD PTR [esp+0x18]
  41e1ef:	mov    eax,DWORD PTR [ebx+0xc]
  41e1f2:	add    ebp,ebp
  41e1f4:	add    ebp,ebp
  41e1f6:	add    ebp,ebp
  41e1f8:	sub    ebp,DWORD PTR [esp+0x1c]
  41e1fc:	lea    ebx,[esi*8+0x0]
  41e203:	sub    ebx,esi
  41e205:	add    ebp,ebp
  41e207:	add    ebx,ebx
  41e209:	add    ebp,ebp
  41e20b:	add    ebx,ebx
  41e20d:	lea    edi,[eax+ebp*1]
  41e210:	lea    esi,[ebx+eax*1]
  41e213:	cmp    esi,edi
  41e215:	je     0x41e22e
  41e217:	sub    edi,0x1c
  41e21a:	cmp    esi,edi
  41e21c:	je     0x41e22e
  41e21e:	push   edi
  41e21f:	mov    ecx,esi
  41e221:	call   DWORD PTR ds:0x430208
  41e227:	add    esi,0x1c
  41e22a:	cmp    esi,edi
  41e22c:	jne    0x41e217
  41e22e:	mov    eax,DWORD PTR [esp+0x58]
  41e232:	mov    esi,DWORD PTR [eax+0xc]
  41e235:	mov    edi,DWORD PTR [eax+0x10]
  41e238:	add    esi,ebp
  41e23a:	cmp    esi,edi
  41e23c:	je     0x41e259
  41e23e:	sub    edi,0x1c
  41e241:	cmp    esi,edi
  41e243:	je     0x41e255
  41e245:	push   edi
  41e246:	mov    ecx,esi
  41e248:	call   DWORD PTR ds:0x430208
  41e24e:	add    esi,0x1c
  41e251:	cmp    esi,edi
  41e253:	jne    0x41e23e
  41e255:	mov    eax,DWORD PTR [esp+0x58]
  41e259:	mov    esi,DWORD PTR [eax+0xc]
  41e25c:	mov    ebp,DWORD PTR [eax+0x10]
  41e25f:	add    esi,ebx
  41e261:	cmp    esi,ebp
  41e263:	je     0x41e27c
  41e265:	sub    ebp,0x1c
  41e268:	cmp    esi,ebp
  41e26a:	je     0x41e27c
  41e26c:	push   ebp
  41e26d:	mov    ecx,esi
  41e26f:	call   DWORD PTR ds:0x430208
  41e275:	add    esi,0x1c
  41e278:	cmp    esi,ebp
  41e27a:	jne    0x41e265
  41e27c:	mov    BYTE PTR [esp+0x50],0x0
  41e281:	mov    eax,DWORD PTR [esp+0x68]
  41e285:	test   eax,eax
  41e287:	je     0x41e2ad
  41e289:	test   al,0x1
  41e28b:	jne    0x41e2a5
  41e28d:	and    eax,0xfffffffe
  41e290:	mov    eax,DWORD PTR [eax]
  41e292:	test   eax,eax
  41e294:	je     0x41e2a5
  41e296:	lea    edx,[esp+0x70]
  41e29a:	push   0x2
  41e29c:	push   edx
  41e29d:	mov    ecx,edx
  41e29f:	push   ecx
  41e2a0:	call   eax
  41e2a2:	add    esp,0xc
  41e2a5:	mov    DWORD PTR [esp+0x68],0x0
  41e2ad:	mov    DWORD PTR [esp+0x50],0xffffffff
  41e2b5:	mov    eax,DWORD PTR [esp+0xa8]
  41e2bc:	test   eax,eax
  41e2be:	je     0x41e2df
  41e2c0:	test   al,0x1
  41e2c2:	jne    0x41e2df
  41e2c4:	and    eax,0xfffffffe
  41e2c7:	mov    eax,DWORD PTR [eax]
  41e2c9:	test   eax,eax
  41e2cb:	je     0x41e2df
  41e2cd:	lea    edx,[esp+0xb0]
  41e2d4:	push   0x2
  41e2d6:	push   edx
  41e2d7:	mov    ecx,edx
  41e2d9:	push   ecx
  41e2da:	call   eax
  41e2dc:	add    esp,0xc
  41e2df:	mov    ecx,DWORD PTR [esp+0x48]
  41e2e3:	mov    DWORD PTR fs:0x0,ecx
  41e2ea:	pop    ecx
  41e2eb:	pop    edi
  41e2ec:	pop    esi
  41e2ed:	pop    ebp
  41e2ee:	pop    ebx
  41e2ef:	add    esp,0x40
  41e2f2:	ret    0x90
  41e2f5:	xor    eax,eax
  41e2f7:	cmp    cl,dl
  41e2f9:	sete   al
  41e2fc:	test   al,al
  41e2fe:	jne    0x41e1ef
  41e304:	mov    ebp,DWORD PTR [ebx+0x10]
  41e307:	cmp    DWORD PTR [ebx+0xc],ebp
  41e30a:	jbe    0x41e312
  41e30c:	call   DWORD PTR ds:0x430390
  41e312:	mov    edi,DWORD PTR [ebx]
  41e314:	lea    esi,[esp+0x2c]
  41e318:	lea    eax,[esp+0x68]
  41e31c:	call   0x41e6d0
  41e321:	push   ebp
  41e322:	push   edi
  41e323:	push   eax
  41e324:	mov    ecx,ebx
  41e326:	mov    BYTE PTR [esp+0x5c],0x2
  41e32b:	call   0x4142d0
  41e330:	mov    ecx,esi
  41e332:	mov    BYTE PTR [esp+0x50],0x1
  41e337:	call   DWORD PTR ds:0x43025c
  41e33d:	cmp    DWORD PTR [esp+0x68],0x0
  41e342:	je     0x41e3b6
  41e344:	mov    ecx,DWORD PTR [esp+0x94]
  41e34b:	mov    edx,DWORD PTR [esp+0x90]
  41e352:	push   ecx
  41e353:	push   edx
  41e354:	lea    esi,[esp+0x2c]
  41e358:	lea    ecx,[esp+0x70]
  41e35c:	call   0x41b490
  41e361:	mov    ecx,DWORD PTR [esp+0x24]
  41e365:	mov    eax,DWORD PTR [esp+0x94]
  41e36c:	cmp    ecx,eax
  41e36e:	jne    0x41e387
  41e370:	cmp    DWORD PTR [esp+0x28],eax
  41e374:	jne    0x41e387
  41e376:	cmp    DWORD PTR [esp+0x8c],eax
  41e37d:	jne    0x41e387
  41e37f:	mov    BYTE PTR [esp+0x98],0x1
  41e387:	mov    eax,DWORD PTR [esp+0x90]
  41e38e:	mov    esi,DWORD PTR [esp+0x18]
  41e392:	mov    ebp,DWORD PTR [esp+0x1c]
  41e396:	mov    edi,ecx
  41e398:	mov    ecx,DWORD PTR [esp+0x28]
  41e39c:	mov    DWORD PTR [esp+0x88],eax
  41e3a3:	mov    DWORD PTR [esp+0x8c],edi
  41e3aa:	mov    DWORD PTR [esp+0x90],ecx
  41e3b1:	jmp    0x41e145
  41e3b6:	mov    eax,DWORD PTR [esp+0x94]
  41e3bd:	mov    ecx,eax
  41e3bf:	mov    DWORD PTR [esp+0x24],ecx
  41e3c3:	mov    DWORD PTR [esp+0x28],eax
  41e3c7:	jmp    0x41e376
  41e3c9:	int3   
  41e3ca:	int3   
  41e3cb:	int3   
  41e3cc:	int3   
  41e3cd:	int3   
  41e3ce:	int3   
  41e3cf:	int3   
  41e3d0:	push   0xffffffff
  41e3d2:	push   0x42b27c
  41e3d7:	mov    eax,fs:0x0
  41e3dd:	push   eax
  41e3de:	push   ecx
  41e3df:	push   ebx
  41e3e0:	push   ebp
  41e3e1:	push   esi
  41e3e2:	push   edi
  41e3e3:	mov    eax,ds:0x43e020
  41e3e8:	xor    eax,esp
  41e3ea:	push   eax
  41e3eb:	lea    eax,[esp+0x18]
  41e3ef:	mov    fs:0x0,eax
  41e3f5:	mov    esi,ecx
  41e3f7:	mov    eax,DWORD PTR [esp+0x90]
  41e3fe:	mov    ebp,DWORD PTR [esp+0x28]
  41e402:	mov    DWORD PTR [esp+0x14],eax
  41e406:	lea    eax,[esi-0x1]
  41e409:	cdq    
  41e40a:	sub    eax,edx
  41e40c:	mov    ebx,eax
  41e40e:	sar    ebx,1
  41e410:	cmp    DWORD PTR [esp+0x2c],esi
  41e414:	mov    DWORD PTR [esp+0x20],0x0
  41e41c:	jge    0x41e485
  41e41e:	lea    ecx,[ebx+ebx*2]
  41e421:	shl    ecx,0x5
  41e424:	lea    edx,[esp+0x30]
  41e428:	lea    edi,[ecx+ebp*1]
  41e42b:	push   edx
  41e42c:	push   edi
  41e42d:	call   DWORD PTR [esp+0x1c]
  41e431:	add    esp,0x8
  41e434:	test   eax,eax
  41e436:	je     0x41e485
  41e438:	lea    esi,[esi+esi*2]
  41e43b:	shl    esi,0x5
  41e43e:	lea    eax,[edi+0x4]
  41e441:	add    esi,ebp
  41e443:	push   eax
  41e444:	lea    ecx,[esi+0x4]
  41e447:	call   DWORD PTR ds:0x43017c
  41e44d:	lea    ecx,[edi+0x20]
  41e450:	push   ecx
  41e451:	lea    ecx,[esi+0x20]
  41e454:	call   DWORD PTR ds:0x43017c
  41e45a:	lea    edx,[edi+0x3c]
  41e45d:	push   edx
  41e45e:	lea    ecx,[esi+0x3c]
  41e461:	call   DWORD PTR ds:0x43017c
  41e467:	mov    eax,DWORD PTR [edi+0x58]
  41e46a:	mov    DWORD PTR [esi+0x58],eax
  41e46d:	mov    ecx,DWORD PTR [edi+0x5c]
  41e470:	lea    eax,[ebx-0x1]
  41e473:	cdq    
  41e474:	sub    eax,edx
  41e476:	mov    DWORD PTR [esi+0x5c],ecx
  41e479:	mov    esi,ebx
  41e47b:	sar    eax,1
  41e47d:	cmp    DWORD PTR [esp+0x2c],esi
  41e481:	mov    ebx,eax
  41e483:	jl     0x41e41e
  41e485:	lea    esi,[esi+esi*2]
  41e488:	shl    esi,0x5
  41e48b:	lea    edx,[esp+0x34]
  41e48f:	add    esi,ebp
  41e491:	push   edx
  41e492:	lea    ecx,[esi+0x4]
  41e495:	call   DWORD PTR ds:0x43017c
  41e49b:	lea    eax,[esp+0x50]
  41e49f:	push   eax
  41e4a0:	lea    ecx,[esi+0x20]
  41e4a3:	call   DWORD PTR ds:0x43017c
  41e4a9:	lea    ecx,[esp+0x6c]
  41e4ad:	push   ecx
  41e4ae:	lea    ecx,[esi+0x3c]
  41e4b1:	call   DWORD PTR ds:0x43017c
  41e4b7:	mov    edx,DWORD PTR [esp+0x88]
  41e4be:	mov    eax,DWORD PTR [esp+0x8c]
  41e4c5:	mov    DWORD PTR [esi+0x58],edx
  41e4c8:	mov    DWORD PTR [esi+0x5c],eax
  41e4cb:	lea    ecx,[esp+0x6c]
  41e4cf:	mov    DWORD PTR [esp+0x20],0x2
  41e4d7:	call   DWORD PTR ds:0x430264
  41e4dd:	lea    ecx,[esp+0x50]
  41e4e1:	mov    BYTE PTR [esp+0x20],0x1
  41e4e6:	call   DWORD PTR ds:0x430264
  41e4ec:	lea    ecx,[esp+0x34]
  41e4f0:	mov    DWORD PTR [esp+0x20],0xffffffff
  41e4f8:	call   DWORD PTR ds:0x430264
  41e4fe:	mov    ecx,DWORD PTR [esp+0x18]
  41e502:	mov    DWORD PTR fs:0x0,ecx
  41e509:	pop    ecx
  41e50a:	pop    edi
  41e50b:	pop    esi
  41e50c:	pop    ebp
  41e50d:	pop    ebx
  41e50e:	add    esp,0x10
  41e511:	ret    
  41e512:	int3   
  41e513:	int3   
  41e514:	int3   
  41e515:	int3   
  41e516:	int3   
  41e517:	int3   
  41e518:	int3   
  41e519:	int3   
  41e51a:	int3   
  41e51b:	int3   
  41e51c:	int3   
  41e51d:	int3   
  41e51e:	int3   
  41e51f:	int3   
  41e520:	push   0xffffffff
  41e522:	push   0x42c5c3
  41e527:	mov    eax,fs:0x0
  41e52d:	push   eax
  41e52e:	push   ecx
  41e52f:	push   esi
  41e530:	push   edi
  41e531:	mov    eax,ds:0x43e020
  41e536:	xor    eax,esp
  41e538:	push   eax
  41e539:	lea    eax,[esp+0x10]
  41e53d:	mov    fs:0x0,eax
  41e543:	push   0x44
  41e545:	mov    DWORD PTR [esp+0x1c],0x0
  41e54d:	call   0x425050
  41e552:	mov    esi,eax
  41e554:	add    esp,0x4
  41e557:	mov    DWORD PTR [esp+0xc],esi
  41e55b:	mov    BYTE PTR [esp+0x18],0x1
  41e560:	test   esi,esi
  41e562:	je     0x41e580
  41e564:	mov    eax,DWORD PTR [esp+0x20]
  41e568:	lea    edi,[esi+0x4]
  41e56b:	push   edi
  41e56c:	lea    ecx,[esp+0x28]
  41e570:	mov    DWORD PTR [esi],eax
  41e572:	call   0x417d60
  41e577:	mov    ecx,DWORD PTR [esp+0x60]
  41e57b:	mov    DWORD PTR [edi+0x3c],ecx
  41e57e:	jmp    0x41e582
  41e580:	xor    esi,esi
  41e582:	lea    edx,[esp+0x24]
  41e586:	push   edx
  41e587:	mov    DWORD PTR [ebx],esi
  41e589:	mov    DWORD PTR [esp+0x1c],0xffffffff
  41e591:	call   0x40e010
  41e596:	mov    ecx,DWORD PTR [esp+0x10]
  41e59a:	mov    DWORD PTR fs:0x0,ecx
  41e5a1:	pop    ecx
  41e5a2:	pop    edi
  41e5a3:	pop    esi
  41e5a4:	add    esp,0x10
  41e5a7:	ret    0x48
  41e5aa:	int3   
  41e5ab:	int3   
  41e5ac:	int3   
  41e5ad:	int3   
  41e5ae:	int3   
  41e5af:	int3   
  41e5b0:	push   0xffffffff
  41e5b2:	push   0x42b993
  41e5b7:	mov    eax,fs:0x0
  41e5bd:	push   eax
  41e5be:	push   ecx
  41e5bf:	push   esi
  41e5c0:	mov    eax,ds:0x43e020
  41e5c5:	xor    eax,esp
  41e5c7:	push   eax
  41e5c8:	lea    eax,[esp+0xc]
  41e5cc:	mov    fs:0x0,eax
  41e5d2:	push   0x24
  41e5d4:	mov    DWORD PTR [esp+0x18],0x0
  41e5dc:	call   0x425050
  41e5e1:	mov    esi,eax
  41e5e3:	add    esp,0x4
  41e5e6:	mov    DWORD PTR [esp+0x8],esi
  41e5ea:	mov    BYTE PTR [esp+0x14],0x1
  41e5ef:	test   esi,esi
  41e5f1:	je     0x41e610
  41e5f3:	mov    eax,DWORD PTR [esp+0x1c]
  41e5f7:	mov    DWORD PTR [esi],eax
  41e5f9:	mov    ecx,DWORD PTR [esp+0x20]
  41e5fd:	lea    edx,[esp+0x24]
  41e601:	mov    DWORD PTR [esi+0x4],ecx
  41e604:	lea    ecx,[esi+0x8]
  41e607:	push   edx
  41e608:	call   DWORD PTR ds:0x430118
  41e60e:	jmp    0x41e612
  41e610:	xor    esi,esi
  41e612:	lea    ecx,[esp+0x24]
  41e616:	mov    DWORD PTR [edi],esi
  41e618:	mov    DWORD PTR [esp+0x14],0xffffffff
  41e620:	call   DWORD PTR ds:0x430264
  41e626:	mov    ecx,DWORD PTR [esp+0xc]
  41e62a:	mov    DWORD PTR fs:0x0,ecx
  41e631:	pop    ecx
  41e632:	pop    esi
  41e633:	add    esp,0x10
  41e636:	ret    0x28
  41e639:	int3   
  41e63a:	int3   
  41e63b:	int3   
  41e63c:	int3   
  41e63d:	int3   
  41e63e:	int3   
  41e63f:	int3   
  41e640:	push   0xffffffff
  41e642:	push   0x42c593
  41e647:	mov    eax,fs:0x0
  41e64d:	push   eax
  41e64e:	push   ecx
  41e64f:	push   esi
  41e650:	mov    eax,ds:0x43e020
  41e655:	xor    eax,esp
  41e657:	push   eax
  41e658:	lea    eax,[esp+0xc]
  41e65c:	mov    fs:0x0,eax
  41e662:	push   0x28
  41e664:	mov    DWORD PTR [esp+0x18],0x0
  41e66c:	call   0x425050
  41e671:	mov    esi,eax
  41e673:	add    esp,0x4
  41e676:	mov    DWORD PTR [esp+0x8],esi
  41e67a:	mov    BYTE PTR [esp+0x14],0x1
  41e67f:	test   esi,esi
  41e681:	je     0x41e6a7
  41e683:	mov    eax,DWORD PTR [esp+0x1c]
  41e687:	mov    DWORD PTR [esi],eax
  41e689:	mov    ecx,DWORD PTR [esp+0x20]
  41e68d:	mov    DWORD PTR [esi+0x4],ecx
  41e690:	mov    edx,DWORD PTR [esp+0x24]
  41e694:	lea    eax,[esp+0x28]
  41e698:	lea    ecx,[esi+0xc]
  41e69b:	push   eax
  41e69c:	mov    DWORD PTR [esi+0x8],edx
  41e69f:	call   DWORD PTR ds:0x430118
  41e6a5:	jmp    0x41e6a9
  41e6a7:	xor    esi,esi
  41e6a9:	lea    ecx,[esp+0x28]
  41e6ad:	mov    DWORD PTR [edi],esi
  41e6af:	mov    DWORD PTR [esp+0x14],0xffffffff
  41e6b7:	call   DWORD PTR ds:0x430264
  41e6bd:	mov    ecx,DWORD PTR [esp+0xc]
  41e6c1:	mov    DWORD PTR fs:0x0,ecx
  41e6c8:	pop    ecx
  41e6c9:	pop    esi
  41e6ca:	add    esp,0x10
  41e6cd:	ret    0x2c
  41e6d0:	push   ecx
  41e6d1:	mov    ecx,esi
  41e6d3:	mov    DWORD PTR [esp],0x0
  41e6da:	call   0x41ebd0
  41e6df:	mov    eax,esi
  41e6e1:	pop    ecx
  41e6e2:	ret    
  41e6e3:	int3   
  41e6e4:	int3   
  41e6e5:	int3   
  41e6e6:	int3   
  41e6e7:	int3   
  41e6e8:	int3   
  41e6e9:	int3   
  41e6ea:	int3   
  41e6eb:	int3   
  41e6ec:	int3   
  41e6ed:	int3   
  41e6ee:	int3   
  41e6ef:	int3   
  41e6f0:	mov    eax,DWORD PTR [esp+0xc]
  41e6f4:	cmp    eax,0x4
  41e6f7:	je     0x41e70c
  41e6f9:	mov    ecx,DWORD PTR [esp+0x4]
  41e6fd:	push   eax
  41e6fe:	mov    eax,DWORD PTR [esp+0xc]
  41e702:	push   eax
  41e703:	call   0x41e740
  41e708:	add    esp,0x8
  41e70b:	ret    
  41e70c:	mov    eax,DWORD PTR [esp+0x8]
  41e710:	xor    cl,cl
  41e712:	mov    DWORD PTR [eax],0x43f800
  41e718:	mov    BYTE PTR [eax+0x4],cl
  41e71b:	mov    BYTE PTR [eax+0x5],cl
  41e71e:	ret    
  41e71f:	int3   
  41e720:	mov    eax,DWORD PTR [esp+0x10]
  41e724:	mov    ecx,DWORD PTR [esp+0xc]
  41e728:	mov    edx,DWORD PTR [esp+0x8]
  41e72c:	push   esi
  41e72d:	mov    esi,DWORD PTR [esp+0x8]
  41e731:	push   eax
  41e732:	push   ecx
  41e733:	push   esi
  41e734:	push   edx
  41e735:	call   0x41b100
  41e73a:	mov    eax,esi
  41e73c:	pop    esi
  41e73d:	ret    
  41e73e:	int3   
  41e73f:	int3   
  41e740:	push   0xffffffff
  41e742:	push   0x42c561
  41e747:	mov    eax,fs:0x0
  41e74d:	push   eax
  41e74e:	push   ebp
  41e74f:	push   esi
  41e750:	push   edi
  41e751:	mov    eax,ds:0x43e020
  41e756:	xor    eax,esp
  41e758:	push   eax
  41e759:	lea    eax,[esp+0x10]
  41e75d:	mov    fs:0x0,eax
  41e763:	mov    ebp,DWORD PTR [esp+0x24]
  41e767:	mov    esi,DWORD PTR [esp+0x20]
  41e76b:	mov    edi,ecx
  41e76d:	test   ebp,ebp
  41e76f:	je     0x41e7e6
  41e771:	cmp    ebp,0x1
  41e774:	je     0x41e7e6
  41e776:	cmp    ebp,0x2
  41e779:	jne    0x41e795
  41e77b:	cmp    DWORD PTR [esi+0x8],0x8
  41e77f:	jbe    0x41e84a
  41e785:	mov    esi,DWORD PTR [esi]
  41e787:	test   esi,esi
  41e789:	je     0x41e84a
  41e78f:	push   esi
  41e790:	jmp    0x41e842
  41e795:	cmp    ebp,0x3
  41e798:	jne    0x41e7c5
  41e79a:	mov    ecx,DWORD PTR [esi]
  41e79c:	push   0x43f800
  41e7a1:	call   DWORD PTR ds:0x4302d4
  41e7a7:	movzx  eax,al
  41e7aa:	neg    eax
  41e7ac:	sbb    eax,eax
  41e7ae:	and    eax,edi
  41e7b0:	mov    DWORD PTR [esi],eax
  41e7b2:	mov    ecx,DWORD PTR [esp+0x10]
  41e7b6:	mov    DWORD PTR fs:0x0,ecx
  41e7bd:	pop    ecx
  41e7be:	pop    edi
  41e7bf:	pop    esi
  41e7c0:	pop    ebp
  41e7c1:	add    esp,0xc
  41e7c4:	ret    
  41e7c5:	mov    DWORD PTR [esi],0x43f800
  41e7cb:	mov    BYTE PTR [esi+0x4],0x0
  41e7cf:	mov    BYTE PTR [esi+0x5],0x0
  41e7d3:	mov    ecx,DWORD PTR [esp+0x10]
  41e7d7:	mov    DWORD PTR fs:0x0,ecx
  41e7de:	pop    ecx
  41e7df:	pop    edi
  41e7e0:	pop    esi
  41e7e1:	pop    ebp
  41e7e2:	add    esp,0xc
  41e7e5:	ret    
  41e7e6:	mov    DWORD PTR [esp+0x24],esi
  41e7ea:	mov    DWORD PTR [esp+0x18],0x0
  41e7f2:	test   esi,esi
  41e7f4:	je     0x41e830
  41e7f6:	mov    ecx,DWORD PTR [edi+0x8]
  41e7f9:	mov    eax,ecx
  41e7fb:	mov    DWORD PTR [esi+0x8],ecx
  41e7fe:	mov    DWORD PTR [esi],0x0
  41e804:	cmp    eax,0x8
  41e807:	ja     0x41e80f
  41e809:	mov    eax,esi
  41e80b:	mov    ecx,edi
  41e80d:	jmp    0x41e81c
  41e80f:	push   eax
  41e810:	call   0x425023
  41e815:	mov    DWORD PTR [esi],eax
  41e817:	mov    ecx,DWORD PTR [edi]
  41e819:	add    esp,0x4
  41e81c:	mov    edx,DWORD PTR [esi+0x8]
  41e81f:	push   edx
  41e820:	push   ecx
  41e821:	push   eax
  41e822:	call   0x42a018
  41e827:	mov    eax,DWORD PTR [edi+0xc]
  41e82a:	add    esp,0xc
  41e82d:	mov    DWORD PTR [esi+0xc],eax
  41e830:	cmp    ebp,0x1
  41e833:	jne    0x41e84a
  41e835:	cmp    DWORD PTR [edi+0x8],0x8
  41e839:	jbe    0x41e84a
  41e83b:	mov    edi,DWORD PTR [edi]
  41e83d:	test   edi,edi
  41e83f:	je     0x41e84a
  41e841:	push   edi
  41e842:	call   0x42517c
  41e847:	add    esp,0x4
  41e84a:	mov    ecx,DWORD PTR [esp+0x10]
  41e84e:	mov    DWORD PTR fs:0x0,ecx
  41e855:	pop    ecx
  41e856:	pop    edi
  41e857:	pop    esi
  41e858:	pop    ebp
  41e859:	add    esp,0xc
  41e85c:	ret    
  41e85d:	int3   
  41e85e:	int3   
  41e85f:	int3   
  41e860:	push   ebp
  41e861:	push   esi
  41e862:	push   edi
  41e863:	mov    edi,DWORD PTR [esp+0x10]
  41e867:	mov    esi,eax
  41e869:	lea    eax,[edi+edi*1+0x2]
  41e86d:	cmp    eax,esi
  41e86f:	mov    ebp,edi
  41e871:	jge    0x41e88d
  41e873:	mov    dl,BYTE PTR [eax+ecx*1]
  41e876:	cmp    dl,BYTE PTR [ecx+eax*1-0x1]
  41e87a:	jge    0x41e87d
  41e87c:	dec    eax
  41e87d:	mov    dl,BYTE PTR [eax+ecx*1]
  41e880:	mov    BYTE PTR [ecx+edi*1],dl
  41e883:	mov    edi,eax
  41e885:	lea    eax,[eax+eax*1+0x2]
  41e889:	cmp    eax,esi
  41e88b:	jl     0x41e873
  41e88d:	jne    0x41e899
  41e88f:	mov    al,BYTE PTR [ecx+esi*1-0x1]
  41e893:	mov    BYTE PTR [ecx+edi*1],al
  41e896:	lea    edi,[esi-0x1]
  41e899:	lea    eax,[edi-0x1]
  41e89c:	cdq    
  41e89d:	sub    eax,edx
  41e89f:	mov    esi,eax
  41e8a1:	sar    esi,1
  41e8a3:	cmp    ebp,edi
  41e8a5:	jge    0x41e8c1
  41e8a7:	mov    al,BYTE PTR [esi+ecx*1]
  41e8aa:	cmp    al,bl
  41e8ac:	jge    0x41e8c1
  41e8ae:	mov    BYTE PTR [edi+ecx*1],al
  41e8b1:	lea    eax,[esi-0x1]
  41e8b4:	cdq    
  41e8b5:	sub    eax,edx
  41e8b7:	mov    edi,esi
  41e8b9:	sar    eax,1
  41e8bb:	cmp    ebp,edi
  41e8bd:	mov    esi,eax
  41e8bf:	jl     0x41e8a7
  41e8c1:	mov    BYTE PTR [edi+ecx*1],bl
  41e8c4:	pop    edi
  41e8c5:	pop    esi
  41e8c6:	pop    ebp
  41e8c7:	ret    
  41e8c8:	int3   
  41e8c9:	int3   
  41e8ca:	int3   
  41e8cb:	int3   
  41e8cc:	int3   
  41e8cd:	int3   
  41e8ce:	int3   
  41e8cf:	int3   
  41e8d0:	push   0xffffffff
  41e8d2:	push   0x42c5e8
  41e8d7:	mov    eax,fs:0x0
  41e8dd:	push   eax
  41e8de:	push   ecx
  41e8df:	push   ebx
  41e8e0:	push   esi
  41e8e1:	mov    eax,ds:0x43e020
  41e8e6:	xor    eax,esp
  41e8e8:	push   eax
  41e8e9:	lea    eax,[esp+0x10]
  41e8ed:	mov    fs:0x0,eax
  41e8f3:	mov    DWORD PTR [esp+0x18],0x0
  41e8fb:	mov    ecx,DWORD PTR [esp+0x28]
  41e8ff:	mov    BYTE PTR [esp+0xc],0x0
  41e904:	mov    eax,DWORD PTR [esp+0xc]
  41e908:	push   eax
  41e909:	sub    esp,0x10
  41e90c:	mov    esi,esp
  41e90e:	mov    eax,ecx
  41e910:	mov    DWORD PTR [esp+0x20],esp
  41e914:	mov    DWORD PTR [esi+0x8],ecx
  41e917:	mov    DWORD PTR [esi],0x0
  41e91d:	cmp    eax,0x8
  41e920:	ja     0x41e92a
  41e922:	mov    eax,esi
  41e924:	lea    ecx,[esp+0x34]
  41e928:	jmp    0x41e939
  41e92a:	push   eax
  41e92b:	call   0x425023
  41e930:	mov    DWORD PTR [esi],eax
  41e932:	mov    ecx,DWORD PTR [esp+0x38]
  41e936:	add    esp,0x4
  41e939:	mov    edx,DWORD PTR [esi+0x8]
  41e93c:	push   edx
  41e93d:	push   ecx
  41e93e:	push   eax
  41e93f:	call   0x42a018
  41e944:	mov    eax,DWORD PTR [esp+0x4c]
  41e948:	add    esp,0xc
  41e94b:	mov    ecx,edi
  41e94d:	mov    DWORD PTR [esi+0xc],eax
  41e950:	call   0x41ec30
  41e955:	cmp    DWORD PTR [esp+0x28],0x8
  41e95a:	mov    bl,al
  41e95c:	jbe    0x41e96f
  41e95e:	mov    eax,DWORD PTR [esp+0x20]
  41e962:	test   eax,eax
  41e964:	je     0x41e96f
  41e966:	push   eax
  41e967:	call   0x42517c
  41e96c:	add    esp,0x4
  41e96f:	mov    al,bl
  41e971:	mov    ecx,DWORD PTR [esp+0x10]
  41e975:	mov    DWORD PTR fs:0x0,ecx
  41e97c:	pop    ecx
  41e97d:	pop    esi
  41e97e:	pop    ebx
  41e97f:	add    esp,0x10
  41e982:	ret    0x10
  41e985:	int3   
  41e986:	int3   
  41e987:	int3   
  41e988:	int3   
  41e989:	int3   
  41e98a:	int3   
  41e98b:	int3   
  41e98c:	int3   
  41e98d:	int3   
  41e98e:	int3   
  41e98f:	int3   
  41e990:	push   ebp
  41e991:	mov    ebp,esp
  41e993:	push   0xffffffff
  41e995:	push   0x42c530
  41e99a:	mov    eax,fs:0x0
  41e9a0:	push   eax
  41e9a1:	sub    esp,0x10
  41e9a4:	push   ebx
  41e9a5:	push   esi
  41e9a6:	push   edi
  41e9a7:	mov    eax,ds:0x43e020
  41e9ac:	xor    eax,ebp
  41e9ae:	push   eax
  41e9af:	lea    eax,[ebp-0xc]
  41e9b2:	mov    fs:0x0,eax
  41e9b8:	mov    DWORD PTR [ebp-0x10],esp
  41e9bb:	mov    edi,ecx
  41e9bd:	mov    esi,DWORD PTR [ebp+0x8]
  41e9c0:	mov    ebx,DWORD PTR [esi+0x18]
  41e9c3:	mov    eax,DWORD PTR [esi+0x1c]
  41e9c6:	add    eax,ebx
  41e9c8:	cmp    ebx,eax
  41e9ca:	jbe    0x41e9d2
  41e9cc:	call   DWORD PTR ds:0x430390
  41e9d2:	mov    ecx,DWORD PTR [ebp+0x14]
  41e9d5:	mov    eax,DWORD PTR [esi]
  41e9d7:	test   ecx,ecx
  41e9d9:	je     0x41e9df
  41e9db:	cmp    ecx,eax
  41e9dd:	je     0x41e9e5
  41e9df:	call   DWORD PTR ds:0x430390
  41e9e5:	mov    eax,DWORD PTR [ebp+0x18]
  41e9e8:	mov    ecx,DWORD PTR [esi+0x1c]
  41e9eb:	sub    eax,ebx
  41e9ed:	mov    ebx,eax
  41e9ef:	mov    eax,ecx
  41e9f1:	sub    eax,ebx
  41e9f3:	mov    DWORD PTR [ebp-0x14],ecx
  41e9f6:	cmp    edi,DWORD PTR [ebp+0xc]
  41e9f9:	je     0x41eade
  41e9ff:	cmp    ebx,eax
  41ea01:	jae    0x41ea6b
  41ea03:	mov    DWORD PTR [ebp-0x4],0x0
  41ea0a:	lea    ebx,[ebx+0x0]
  41ea10:	cmp    edi,DWORD PTR [ebp+0xc]
  41ea13:	je     0x41ea4b
  41ea15:	movsx  cx,BYTE PTR [edi]
  41ea19:	movzx  edx,cx
  41ea1c:	lea    eax,[ebp-0x18]
  41ea1f:	push   eax
  41ea20:	mov    eax,esi
  41ea22:	mov    DWORD PTR [ebp-0x18],edx
  41ea25:	call   0x402440
  41ea2a:	inc    edi
  41ea2b:	jmp    0x41ea10
  41ea2d:	mov    esi,DWORD PTR [ebp+0x8]
  41ea30:	mov    edi,DWORD PTR [ebp-0x14]
  41ea33:	cmp    edi,DWORD PTR [esi+0x1c]
  41ea36:	jae    0x41ea42
  41ea38:	call   0x401e30
  41ea3d:	cmp    edi,DWORD PTR [esi+0x1c]
  41ea40:	jb     0x41ea38
  41ea42:	push   0x0
  41ea44:	push   0x0
  41ea46:	call   0x429e76
  41ea4b:	mov    eax,DWORD PTR [esi+0x1c]
  41ea4e:	sub    eax,DWORD PTR [ebp-0x14]
  41ea51:	test   ebx,ebx
  41ea53:	jbe    0x41ea66
  41ea55:	lea    edi,[eax+ebx*1]
  41ea58:	push   edi
  41ea59:	push   eax
  41ea5a:	mov    eax,esi
  41ea5c:	call   0x4024c0
  41ea61:	push   edi
  41ea62:	push   0x0
  41ea64:	jmp    0x41ead7
  41ea66:	push   eax
  41ea67:	push   0x0
  41ea69:	jmp    0x41ead7
  41ea6b:	mov    DWORD PTR [ebp-0x4],0x2
  41ea72:	cmp    edi,DWORD PTR [ebp+0xc]
  41ea75:	je     0x41eab3
  41ea77:	movsx  cx,BYTE PTR [edi]
  41ea7b:	movzx  edx,cx
  41ea7e:	lea    eax,[ebp-0x1c]
  41ea81:	push   eax
  41ea82:	mov    eax,esi
  41ea84:	mov    DWORD PTR [ebp-0x1c],edx
  41ea87:	call   0x401e80
  41ea8c:	inc    edi
  41ea8d:	jmp    0x41ea72
  41ea8f:	mov    esi,DWORD PTR [ebp+0x8]
  41ea92:	mov    edi,DWORD PTR [ebp-0x14]
  41ea95:	cmp    edi,DWORD PTR [esi+0x1c]
  41ea98:	jae    0x41eaaa
  41ea9a:	lea    ebx,[ebx+0x0]
  41eaa0:	call   0x401bf0
  41eaa5:	cmp    edi,DWORD PTR [esi+0x1c]
  41eaa8:	jb     0x41eaa0
  41eaaa:	push   0x0
  41eaac:	push   0x0
  41eaae:	call   0x429e76
  41eab3:	mov    eax,DWORD PTR [ebp-0x14]
  41eab6:	cmp    ebx,eax
  41eab8:	jae    0x41eade
  41eaba:	push   eax
  41eabb:	push   ebx
  41eabc:	mov    eax,esi
  41eabe:	call   0x4024c0
  41eac3:	mov    ecx,DWORD PTR [esi+0x1c]
  41eac6:	mov    edx,DWORD PTR [ebp-0x14]
  41eac9:	push   ecx
  41eaca:	push   edx
  41eacb:	mov    eax,esi
  41eacd:	call   0x4024c0
  41ead2:	mov    eax,DWORD PTR [esi+0x1c]
  41ead5:	push   eax
  41ead6:	push   ebx
  41ead7:	mov    eax,esi
  41ead9:	call   0x4024c0
  41eade:	mov    ecx,DWORD PTR [ebp-0xc]
  41eae1:	mov    DWORD PTR fs:0x0,ecx
  41eae8:	pop    ecx
  41eae9:	pop    edi
  41eaea:	pop    esi
  41eaeb:	pop    ebx
  41eaec:	mov    esp,ebp
  41eaee:	pop    ebp
  41eaef:	ret    0x14
  41eaf2:	int3   
  41eaf3:	int3   
  41eaf4:	int3   
  41eaf5:	int3   
  41eaf6:	int3   
  41eaf7:	int3   
  41eaf8:	int3   
  41eaf9:	int3   
  41eafa:	int3   
  41eafb:	int3   
  41eafc:	int3   
  41eafd:	int3   
  41eafe:	int3   
  41eaff:	int3   
  41eb00:	push   0xffffffff
  41eb02:	push   0x42b95a
  41eb07:	mov    eax,fs:0x0
  41eb0d:	push   eax
  41eb0e:	push   ecx
  41eb0f:	push   ebx
  41eb10:	push   ebp
  41eb11:	push   edi
  41eb12:	mov    eax,ds:0x43e020
  41eb17:	xor    eax,esp
  41eb19:	push   eax
  41eb1a:	lea    eax,[esp+0x14]
  41eb1e:	mov    fs:0x0,eax
  41eb24:	mov    ebx,ecx
  41eb26:	mov    ebp,DWORD PTR [esp+0x84]
  41eb2d:	mov    edi,edx
  41eb2f:	lea    eax,[esi+0x4]
  41eb32:	push   eax
  41eb33:	lea    ecx,[edi+0x4]
  41eb36:	mov    DWORD PTR [esp+0x20],0x0
  41eb3e:	call   DWORD PTR ds:0x43017c
  41eb44:	lea    ecx,[esi+0x20]
  41eb47:	push   ecx
  41eb48:	lea    ecx,[edi+0x20]
  41eb4b:	call   DWORD PTR ds:0x43017c
  41eb51:	lea    edx,[esi+0x3c]
  41eb54:	push   edx
  41eb55:	lea    ecx,[edi+0x3c]
  41eb58:	call   DWORD PTR ds:0x43017c
  41eb5e:	mov    eax,DWORD PTR [esi+0x58]
  41eb61:	push   ebp
  41eb62:	sub    esp,0x60
  41eb65:	mov    DWORD PTR [edi+0x58],eax
  41eb68:	mov    ecx,DWORD PTR [esi+0x5c]
  41eb6b:	mov    edx,esp
  41eb6d:	mov    DWORD PTR [edi+0x5c],ecx
  41eb70:	mov    DWORD PTR [esp+0x74],esp
  41eb74:	push   edx
  41eb75:	lea    edi,[esp+0x8c]
  41eb7c:	call   0x415ab0
  41eb81:	sub    ebx,esi
  41eb83:	mov    eax,0x2aaaaaab
  41eb88:	imul   ebx
  41eb8a:	sar    edx,0x4
  41eb8d:	mov    eax,edx
  41eb8f:	shr    eax,0x1f
  41eb92:	add    eax,edx
  41eb94:	push   eax
  41eb95:	push   esi
  41eb96:	xor    ecx,ecx
  41eb98:	call   0x41d620
  41eb9d:	add    esp,0x6c
  41eba0:	mov    ecx,edi
  41eba2:	push   ecx
  41eba3:	mov    DWORD PTR [esp+0x20],0xffffffff
  41ebab:	call   0x415b30
  41ebb0:	mov    ecx,DWORD PTR [esp+0x14]
  41ebb4:	mov    DWORD PTR fs:0x0,ecx
  41ebbb:	pop    ecx
  41ebbc:	pop    edi
  41ebbd:	pop    ebp
  41ebbe:	pop    ebx
  41ebbf:	add    esp,0x10
  41ebc2:	ret    
  41ebc3:	int3   
  41ebc4:	int3   
  41ebc5:	int3   
  41ebc6:	int3   
  41ebc7:	int3   
  41ebc8:	int3   
  41ebc9:	int3   
  41ebca:	int3   
  41ebcb:	int3   
  41ebcc:	int3   
  41ebcd:	int3   
  41ebce:	int3   
  41ebcf:	int3   
  41ebd0:	push   ecx
  41ebd1:	push   esi
  41ebd2:	mov    esi,ecx
  41ebd4:	mov    DWORD PTR [esp+0x4],0x0
  41ebdc:	call   0x41ebf0
  41ebe1:	mov    eax,esi
  41ebe3:	pop    esi
  41ebe4:	pop    ecx
  41ebe5:	ret    
  41ebe6:	int3   
  41ebe7:	int3   
  41ebe8:	int3   
  41ebe9:	int3   
  41ebea:	int3   
  41ebeb:	int3   
  41ebec:	int3   
  41ebed:	int3   
  41ebee:	int3   
  41ebef:	int3   
  41ebf0:	push   ecx
  41ebf1:	add    eax,0x20
  41ebf4:	mov    ecx,esi
  41ebf6:	mov    DWORD PTR [esp],0x0
  41ebfd:	call   0x41ec10
  41ec02:	mov    eax,esi
  41ec04:	pop    ecx
  41ec05:	ret    
  41ec06:	int3   
  41ec07:	int3   
  41ec08:	int3   
  41ec09:	int3   
  41ec0a:	int3   
  41ec0b:	int3   
  41ec0c:	int3   
  41ec0d:	int3   
  41ec0e:	int3   
  41ec0f:	int3   
  41ec10:	push   ecx
  41ec11:	push   esi
  41ec12:	mov    esi,ecx
  41ec14:	mov    DWORD PTR [esp+0x4],0x0
  41ec1c:	call   0x41ed30
  41ec21:	mov    eax,esi
  41ec23:	pop    esi
  41ec24:	pop    ecx
  41ec25:	ret    
  41ec26:	int3   
  41ec27:	int3   
  41ec28:	int3   
  41ec29:	int3   
  41ec2a:	int3   
  41ec2b:	int3   
  41ec2c:	int3   
  41ec2d:	int3   
  41ec2e:	int3   
  41ec2f:	int3   
  41ec30:	push   0xffffffff
  41ec32:	push   0x42c5e8
  41ec37:	mov    eax,fs:0x0
  41ec3d:	push   eax
  41ec3e:	push   ecx
  41ec3f:	push   esi
  41ec40:	push   edi
  41ec41:	mov    eax,ds:0x43e020
  41ec46:	xor    eax,esp
  41ec48:	push   eax
  41ec49:	lea    eax,[esp+0x10]
  41ec4d:	mov    fs:0x0,eax
  41ec53:	mov    esi,ecx
  41ec55:	lea    eax,[esp+0x20]
  41ec59:	push   eax
  41ec5a:	mov    DWORD PTR [esp+0x1c],0x0
  41ec62:	call   0x408050
  41ec67:	add    esp,0x4
  41ec6a:	test   al,al
  41ec6c:	jne    0x41ecf7
  41ec72:	mov    edx,DWORD PTR [esp+0x28]
  41ec76:	mov    BYTE PTR [esp+0xc],al
  41ec7a:	mov    ecx,DWORD PTR [esp+0xc]
  41ec7e:	push   ecx
  41ec7f:	sub    esp,0x10
  41ec82:	mov    edi,esp
  41ec84:	mov    eax,edx
  41ec86:	mov    DWORD PTR [esp+0x20],esp
  41ec8a:	mov    DWORD PTR [edi+0x8],edx
  41ec8d:	mov    DWORD PTR [edi],0x0
  41ec93:	cmp    eax,0x8
  41ec96:	ja     0x41eca0
  41ec98:	mov    eax,edi
  41ec9a:	lea    ecx,[esp+0x34]
  41ec9e:	jmp    0x41ecaf
  41eca0:	push   eax
  41eca1:	call   0x425023
  41eca6:	mov    DWORD PTR [edi],eax
  41eca8:	mov    ecx,DWORD PTR [esp+0x38]
  41ecac:	add    esp,0x4
  41ecaf:	mov    edx,DWORD PTR [edi+0x8]
  41ecb2:	push   edx
  41ecb3:	push   ecx
  41ecb4:	push   eax
  41ecb5:	call   0x42a018
  41ecba:	mov    eax,DWORD PTR [esp+0x4c]
  41ecbe:	add    esp,0xc
  41ecc1:	mov    DWORD PTR [edi+0xc],eax
  41ecc4:	call   0x41ed50
  41ecc9:	cmp    DWORD PTR [esp+0x28],0x8
  41ecce:	jbe    0x41ece1
  41ecd0:	mov    eax,DWORD PTR [esp+0x20]
  41ecd4:	test   eax,eax
  41ecd6:	je     0x41ece1
  41ecd8:	push   eax
  41ecd9:	call   0x42517c
  41ecde:	add    esp,0x4
  41ece1:	mov    al,0x1
  41ece3:	mov    ecx,DWORD PTR [esp+0x10]
  41ece7:	mov    DWORD PTR fs:0x0,ecx
  41ecee:	pop    ecx
  41ecef:	pop    edi
  41ecf0:	pop    esi
  41ecf1:	add    esp,0x10
  41ecf4:	ret    0x14
  41ecf7:	cmp    DWORD PTR [esp+0x28],0x8
  41ecfc:	jbe    0x41ed0f
  41ecfe:	mov    eax,DWORD PTR [esp+0x20]
  41ed02:	test   eax,eax
  41ed04:	je     0x41ed0f
  41ed06:	push   eax
  41ed07:	call   0x42517c
  41ed0c:	add    esp,0x4
  41ed0f:	xor    al,al
  41ed11:	mov    ecx,DWORD PTR [esp+0x10]
  41ed15:	mov    DWORD PTR fs:0x0,ecx
  41ed1c:	pop    ecx
  41ed1d:	pop    edi
  41ed1e:	pop    esi
  41ed1f:	add    esp,0x10
  41ed22:	ret    0x14
  41ed25:	int3   
  41ed26:	int3   
  41ed27:	int3   
  41ed28:	int3   
  41ed29:	int3   
  41ed2a:	int3   
  41ed2b:	int3   
  41ed2c:	int3   
  41ed2d:	int3   
  41ed2e:	int3   
  41ed2f:	int3   
  41ed30:	push   ecx
  41ed31:	mov    ecx,DWORD PTR [eax+0x4]
  41ed34:	mov    edx,DWORD PTR [eax]
  41ed36:	push   ecx
  41ed37:	push   edx
  41ed38:	mov    ecx,esi
  41ed3a:	mov    DWORD PTR [esp+0x8],0x0
  41ed42:	call   DWORD PTR ds:0x430200
  41ed48:	mov    eax,esi
  41ed4a:	pop    ecx
  41ed4b:	ret    
  41ed4c:	int3   
  41ed4d:	int3   
  41ed4e:	int3   
  41ed4f:	int3   
  41ed50:	push   0xffffffff
  41ed52:	push   0x42c509
  41ed57:	mov    eax,fs:0x0
  41ed5d:	push   eax
  41ed5e:	sub    esp,0x8
  41ed61:	mov    eax,ds:0x43e020
  41ed66:	xor    eax,esp
  41ed68:	push   eax
  41ed69:	lea    eax,[esp+0xc]
  41ed6d:	mov    fs:0x0,eax
  41ed73:	mov    DWORD PTR [esp+0x4],esi
  41ed77:	mov    DWORD PTR [esp+0x14],0x0
  41ed7f:	mov    DWORD PTR [esp+0x8],esi
  41ed83:	mov    BYTE PTR [esp+0x14],0x1
  41ed88:	test   esi,esi
  41ed8a:	je     0x41edca
  41ed8c:	mov    eax,DWORD PTR [esp+0x24]
  41ed90:	mov    DWORD PTR [esi+0x8],eax
  41ed93:	mov    DWORD PTR [esi],0x0
  41ed99:	cmp    eax,0x8
  41ed9c:	ja     0x41eda6
  41ed9e:	mov    eax,esi
  41eda0:	lea    ecx,[esp+0x1c]
  41eda4:	jmp    0x41edb5
  41eda6:	push   eax
  41eda7:	call   0x425023
  41edac:	mov    ecx,DWORD PTR [esp+0x20]
  41edb0:	add    esp,0x4
  41edb3:	mov    DWORD PTR [esi],eax
  41edb5:	mov    edx,DWORD PTR [esi+0x8]
  41edb8:	push   edx
  41edb9:	push   ecx
  41edba:	push   eax
  41edbb:	call   0x42a018
  41edc0:	mov    eax,DWORD PTR [esp+0x34]
  41edc4:	add    esp,0xc
  41edc7:	mov    DWORD PTR [esi+0xc],eax
  41edca:	cmp    DWORD PTR [esp+0x24],0x8
  41edcf:	jbe    0x41ede2
  41edd1:	mov    eax,DWORD PTR [esp+0x1c]
  41edd5:	test   eax,eax
  41edd7:	je     0x41ede2
  41edd9:	push   eax
  41edda:	call   0x42517c
  41eddf:	add    esp,0x4
  41ede2:	mov    ecx,DWORD PTR [esp+0xc]
  41ede6:	mov    DWORD PTR fs:0x0,ecx
  41eded:	pop    ecx
  41edee:	add    esp,0x14
  41edf1:	ret    0x14
  41edf4:	int3   
  41edf5:	int3   
  41edf6:	int3   
  41edf7:	int3   
  41edf8:	int3   
  41edf9:	int3   
  41edfa:	int3   
  41edfb:	int3   
  41edfc:	int3   
  41edfd:	int3   
  41edfe:	int3   
  41edff:	int3   
  41ee00:	cmp    DWORD PTR [esi],0x0
  41ee03:	je     0x41ee0f
  41ee05:	cmp    BYTE PTR [esi+0x30],0x0
  41ee09:	jne    0x41ee0f
  41ee0b:	xor    dl,dl
  41ee0d:	jmp    0x41ee11
  41ee0f:	mov    dl,0x1
  41ee11:	cmp    DWORD PTR [edi],0x0
  41ee14:	je     0x41ee20
  41ee16:	cmp    BYTE PTR [edi+0x30],0x0
  41ee1a:	jne    0x41ee20
  41ee1c:	xor    cl,cl
  41ee1e:	jmp    0x41ee22
  41ee20:	mov    cl,0x1
  41ee22:	test   dl,dl
  41ee24:	jne    0x41ee52
  41ee26:	test   cl,cl
  41ee28:	jne    0x41ee52
  41ee2a:	lea    ecx,[edi+0x20]
  41ee2d:	lea    eax,[esi+0x20]
  41ee30:	call   0x41ee60
  41ee35:	test   al,al
  41ee37:	je     0x41ee4f
  41ee39:	mov    eax,DWORD PTR [esi+0x28]
  41ee3c:	cmp    eax,DWORD PTR [edi+0x28]
  41ee3f:	jne    0x41ee4f
  41ee41:	mov    ecx,DWORD PTR [esi+0x2c]
  41ee44:	cmp    ecx,DWORD PTR [edi+0x2c]
  41ee47:	jne    0x41ee4f
  41ee49:	mov    eax,0x1
  41ee4e:	ret    
  41ee4f:	xor    eax,eax
  41ee51:	ret    
  41ee52:	xor    eax,eax
  41ee54:	cmp    dl,cl
  41ee56:	sete   al
  41ee59:	ret    
  41ee5a:	int3   
  41ee5b:	int3   
  41ee5c:	int3   
  41ee5d:	int3   
  41ee5e:	int3   
  41ee5f:	int3   
  41ee60:	push   ecx
  41ee61:	push   esi
  41ee62:	mov    esi,ecx
  41ee64:	mov    ecx,DWORD PTR [eax+0x4]
  41ee67:	mov    edx,DWORD PTR [esi]
  41ee69:	mov    eax,DWORD PTR [eax]
  41ee6b:	mov    esi,DWORD PTR [esi+0x4]
  41ee6e:	push   edi
  41ee6f:	mov    edi,ecx
  41ee71:	sub    esi,edx
  41ee73:	sub    edi,eax
  41ee75:	cmp    edi,esi
  41ee77:	jne    0x41ee9d
  41ee79:	mov    BYTE PTR [esp+0x8],0x0
  41ee7e:	mov    esi,DWORD PTR [esp+0x8]
  41ee82:	push   esi
  41ee83:	mov    esi,DWORD PTR [esp+0xc]
  41ee87:	push   esi
  41ee88:	call   0x41eeb0
  41ee8d:	add    esp,0x8
  41ee90:	test   al,al
  41ee92:	je     0x41ee9d
  41ee94:	pop    edi
  41ee95:	mov    eax,0x1
  41ee9a:	pop    esi
  41ee9b:	pop    ecx
  41ee9c:	ret    
  41ee9d:	pop    edi
  41ee9e:	xor    eax,eax
  41eea0:	pop    esi
  41eea1:	pop    ecx
  41eea2:	ret    
  41eea3:	int3   
  41eea4:	int3   
  41eea5:	int3   
  41eea6:	int3   
  41eea7:	int3   
  41eea8:	int3   
  41eea9:	int3   
  41eeaa:	int3   
  41eeab:	int3   
  41eeac:	int3   
  41eead:	int3   
  41eeae:	int3   
  41eeaf:	int3   
  41eeb0:	push   esi
  41eeb1:	mov    esi,eax
  41eeb3:	sub    ecx,esi
  41eeb5:	push   edi
  41eeb6:	cmp    ecx,0x4
  41eeb9:	jb     0x41eed4
  41eebb:	jmp    0x41eec0
  41eebd:	lea    ecx,[ecx+0x0]
  41eec0:	mov    eax,DWORD PTR [esi]
  41eec2:	cmp    eax,DWORD PTR [edx]
  41eec4:	jne    0x41eed8
  41eec6:	sub    ecx,0x4
  41eec9:	add    edx,0x4
  41eecc:	add    esi,0x4
  41eecf:	cmp    ecx,0x4
  41eed2:	jae    0x41eec0
  41eed4:	test   ecx,ecx
  41eed6:	je     0x41ef25
  41eed8:	movzx  eax,BYTE PTR [esi]
  41eedb:	movzx  edi,BYTE PTR [edx]
  41eede:	sub    eax,edi
  41eee0:	jne    0x41ef13
  41eee2:	cmp    ecx,0x1
  41eee5:	jbe    0x41ef25
  41eee7:	movzx  eax,BYTE PTR [esi+0x1]
  41eeeb:	movzx  edi,BYTE PTR [edx+0x1]
  41eeef:	sub    eax,edi
  41eef1:	jne    0x41ef13
  41eef3:	cmp    ecx,0x2
  41eef6:	jbe    0x41ef25
  41eef8:	movzx  eax,BYTE PTR [esi+0x2]
  41eefc:	movzx  edi,BYTE PTR [edx+0x2]
  41ef00:	sub    eax,edi
  41ef02:	jne    0x41ef13
  41ef04:	cmp    ecx,0x3
  41ef07:	jbe    0x41ef25
  41ef09:	movzx  eax,BYTE PTR [esi+0x3]
  41ef0d:	movzx  ecx,BYTE PTR [edx+0x3]
  41ef11:	sub    eax,ecx
  41ef13:	sar    eax,0x1f
  41ef16:	or     eax,0x1
  41ef19:	xor    edx,edx
  41ef1b:	test   eax,eax
  41ef1d:	sete   dl
  41ef20:	pop    edi
  41ef21:	mov    al,dl
  41ef23:	pop    esi
  41ef24:	ret    
  41ef25:	xor    eax,eax
  41ef27:	xor    edx,edx
  41ef29:	test   eax,eax
  41ef2b:	sete   dl
  41ef2e:	pop    edi
  41ef2f:	mov    al,dl
  41ef31:	pop    esi
  41ef32:	ret    
  41ef33:	int3   
  41ef34:	int3   
  41ef35:	int3   
  41ef36:	int3   
  41ef37:	int3   
  41ef38:	int3   
  41ef39:	int3   
  41ef3a:	int3   
  41ef3b:	int3   
  41ef3c:	int3   
  41ef3d:	int3   
  41ef3e:	int3   
  41ef3f:	int3   
  41ef40:	push   ecx
  41ef41:	push   ebx
  41ef42:	push   ebp
  41ef43:	mov    ebp,DWORD PTR [esp+0x10]
  41ef47:	push   esi
  41ef48:	push   edi
  41ef49:	mov    edi,ecx
  41ef4b:	mov    eax,DWORD PTR [edi+0x14]
  41ef4e:	lea    ebx,[eax+eax*2+0x1]
  41ef52:	push   ebx
  41ef53:	mov    DWORD PTR [esp+0x14],0x0
  41ef5b:	call   0x425023
  41ef60:	push   ebx
  41ef61:	mov    esi,eax
  41ef63:	push   0x0
  41ef65:	push   esi
  41ef66:	call   0x429f9c
  41ef6b:	add    esp,0x10
  41ef6e:	cmp    DWORD PTR [edi+0x18],0x8
  41ef72:	jb     0x41ef79
  41ef74:	mov    edi,DWORD PTR [edi+0x4]
  41ef77:	jmp    0x41ef7c
  41ef79:	add    edi,0x4
  41ef7c:	push   0x0
  41ef7e:	push   0x0
  41ef80:	push   ebx
  41ef81:	push   esi
  41ef82:	push   0xffffffff
  41ef84:	push   edi
  41ef85:	push   0x0
  41ef87:	push   0xfde9
  41ef8c:	call   DWORD PTR ds:0x430074
  41ef92:	push   esi
  41ef93:	mov    ecx,ebp
  41ef95:	call   DWORD PTR ds:0x43011c
  41ef9b:	push   esi
  41ef9c:	call   0x42517c
  41efa1:	add    esp,0x4
  41efa4:	pop    edi
  41efa5:	pop    esi
  41efa6:	mov    eax,ebp
  41efa8:	pop    ebp
  41efa9:	pop    ebx
  41efaa:	pop    ecx
  41efab:	ret    
  41efac:	int3   
  41efad:	int3   
  41efae:	int3   
  41efaf:	int3   
  41efb0:	push   ecx
  41efb1:	push   ebp
  41efb2:	mov    ebp,DWORD PTR [esp+0xc]
  41efb6:	mov    eax,DWORD PTR [ebp+0x14]
  41efb9:	push   esi
  41efba:	lea    esi,[eax+0x1]
  41efbd:	xor    ecx,ecx
  41efbf:	mov    eax,esi
  41efc1:	mov    edx,0x2
  41efc6:	mul    edx
  41efc8:	seto   cl
  41efcb:	push   edi
  41efcc:	mov    DWORD PTR [esp+0xc],0x0
  41efd4:	neg    ecx
  41efd6:	or     ecx,eax
  41efd8:	push   ecx
  41efd9:	call   0x425023
  41efde:	mov    edi,eax
  41efe0:	lea    eax,[esi+esi*1]
  41efe3:	push   eax
  41efe4:	push   0x0
  41efe6:	push   edi
  41efe7:	call   0x429f9c
  41efec:	add    esp,0x10
  41efef:	cmp    DWORD PTR [ebp+0x18],0x10
  41eff3:	jb     0x41effa
  41eff5:	mov    ebp,DWORD PTR [ebp+0x4]
  41eff8:	jmp    0x41effd
  41effa:	add    ebp,0x4
  41effd:	push   esi
  41effe:	push   edi
  41efff:	push   esi
  41f000:	push   ebp
  41f001:	push   0x0
  41f003:	push   0xfde9
  41f008:	call   DWORD PTR ds:0x430048
  41f00e:	push   edi
  41f00f:	mov    ecx,ebx
  41f011:	call   DWORD PTR ds:0x430268
  41f017:	push   edi
  41f018:	call   0x42517c
  41f01d:	add    esp,0x4
  41f020:	pop    edi
  41f021:	pop    esi
  41f022:	mov    eax,ebx
  41f024:	pop    ebp
  41f025:	pop    ecx
  41f026:	ret    
  41f027:	int3   
  41f028:	int3   
  41f029:	int3   
  41f02a:	int3   
  41f02b:	int3   
  41f02c:	int3   
  41f02d:	int3   
  41f02e:	int3   
  41f02f:	int3   
  41f030:	push   0xffffffff
  41f032:	push   0x42acc9
  41f037:	mov    eax,fs:0x0
  41f03d:	push   eax
  41f03e:	push   ecx
  41f03f:	push   esi
  41f040:	mov    eax,ds:0x43e020
  41f045:	xor    eax,esp
  41f047:	push   eax
  41f048:	lea    eax,[esp+0xc]
  41f04c:	mov    fs:0x0,eax
  41f052:	mov    esi,ecx
  41f054:	mov    DWORD PTR [esp+0x8],esi
  41f058:	lea    ecx,[esi+0xc]
  41f05b:	mov    DWORD PTR [esp+0x14],0x0
  41f063:	call   DWORD PTR ds:0x43025c
  41f069:	mov    ecx,esi
  41f06b:	mov    DWORD PTR [esp+0x14],0xffffffff
  41f073:	call   DWORD PTR ds:0x4303a8
  41f079:	mov    ecx,DWORD PTR [esp+0xc]
  41f07d:	mov    DWORD PTR fs:0x0,ecx
  41f084:	pop    ecx
  41f085:	pop    esi
  41f086:	add    esp,0x10
  41f089:	ret    
  41f08a:	int3   
  41f08b:	int3   
  41f08c:	int3   
  41f08d:	int3   
  41f08e:	int3   
  41f08f:	int3   
  41f090:	push   esi
  41f091:	mov    esi,ecx
  41f093:	call   0x41f030
  41f098:	test   BYTE PTR [esp+0x8],0x1
  41f09d:	je     0x41f0a8
  41f09f:	push   esi
  41f0a0:	call   0x42504a
  41f0a5:	add    esp,0x4
  41f0a8:	mov    eax,esi
  41f0aa:	pop    esi
  41f0ab:	ret    0x4
  41f0ae:	int3   
  41f0af:	int3   
  41f0b0:	cmp    DWORD PTR [ecx+0x24],0x10
  41f0b4:	jb     0x41f0ba
  41f0b6:	mov    eax,DWORD PTR [ecx+0x10]
  41f0b9:	ret    
  41f0ba:	lea    eax,[ecx+0x10]
  41f0bd:	ret    
  41f0be:	int3   
  41f0bf:	int3   
  41f0c0:	push   0xffffffff
  41f0c2:	push   0x42ae09
  41f0c7:	mov    eax,fs:0x0
  41f0cd:	push   eax
  41f0ce:	push   esi
  41f0cf:	mov    eax,ds:0x43e020
  41f0d4:	xor    eax,esp
  41f0d6:	push   eax
  41f0d7:	lea    eax,[esp+0x8]
  41f0db:	mov    fs:0x0,eax
  41f0e1:	mov    esi,DWORD PTR [esp+0x18]
  41f0e5:	mov    ecx,esi
  41f0e7:	call   DWORD PTR ds:0x4303ac
  41f0ed:	mov    DWORD PTR [esp+0x10],0x0
  41f0f5:	lea    ecx,[esi+0xc]
  41f0f8:	mov    DWORD PTR [esi],0x4329c0
  41f0fe:	call   DWORD PTR ds:0x430260
  41f104:	mov    eax,esi
  41f106:	mov    ecx,DWORD PTR [esp+0x8]
  41f10a:	mov    DWORD PTR fs:0x0,ecx
  41f111:	pop    ecx
  41f112:	pop    esi
  41f113:	add    esp,0xc
  41f116:	ret    0x4
  41f119:	int3   
  41f11a:	int3   
  41f11b:	int3   
  41f11c:	int3   
  41f11d:	int3   
  41f11e:	int3   
  41f11f:	int3   
  41f120:	mov    eax,0x1004
  41f125:	call   0x429f70
  41f12a:	mov    eax,ds:0x43e020
  41f12f:	xor    eax,esp
  41f131:	mov    DWORD PTR [esp+0x1000],eax
  41f138:	push   0xfff
  41f13d:	lea    eax,[esp+0x5]
  41f141:	push   0x0
  41f143:	push   eax
  41f144:	mov    BYTE PTR [esp+0xc],0x0
  41f149:	call   0x429f9c
  41f14e:	mov    edx,DWORD PTR [esp+0x1014]
  41f155:	lea    ecx,[esp+0x1018]
  41f15c:	push   ecx
  41f15d:	push   edx
  41f15e:	lea    eax,[esp+0x14]
  41f162:	push   0x1000
  41f167:	push   eax
  41f168:	call   DWORD PTR ds:0x4302d8
  41f16e:	add    esp,0x1c
  41f171:	lea    ecx,[esp]
  41f174:	push   ecx
  41f175:	lea    ecx,[esi+0xc]
  41f178:	call   DWORD PTR ds:0x4301e4
  41f17e:	mov    ecx,DWORD PTR [esp+0x1000]
  41f185:	xor    ecx,esp
  41f187:	mov    eax,esi
  41f189:	call   0x42503a
  41f18e:	add    esp,0x1004
  41f194:	ret    
  41f195:	int3   
  41f196:	int3   
  41f197:	int3   
  41f198:	int3   
  41f199:	int3   
  41f19a:	int3   
  41f19b:	int3   
  41f19c:	int3   
  41f19d:	int3   
  41f19e:	int3   
  41f19f:	int3   
  41f1a0:	sub    esp,0x34
  41f1a3:	lea    eax,[esp]
  41f1a6:	push   eax
  41f1a7:	mov    DWORD PTR [esp+0x4],0x0
  41f1af:	mov    DWORD PTR [esp+0x8],0x0
  41f1b7:	call   DWORD PTR ds:0x4303f8
  41f1bd:	test   eax,eax
  41f1bf:	jne    0x41f1c7
  41f1c1:	xor    al,al
  41f1c3:	add    esp,0x34
  41f1c6:	ret    
  41f1c7:	mov    ecx,DWORD PTR [esp+0x4]
  41f1cb:	mov    edx,DWORD PTR [esp]
  41f1ce:	push   0x2
  41f1d0:	push   ecx
  41f1d1:	push   edx
  41f1d2:	call   DWORD PTR ds:0x4303f4
  41f1d8:	test   eax,eax
  41f1da:	je     0x41f1c1
  41f1dc:	lea    ecx,[esp+0x8]
  41f1e0:	push   ecx
  41f1e1:	push   eax
  41f1e2:	mov    DWORD PTR [esp+0x10],0x28
  41f1ea:	call   DWORD PTR ds:0x4303f0
  41f1f0:	mov    edx,DWORD PTR [esp+0x1c]
  41f1f4:	mov    eax,DWORD PTR [esp+0x20]
  41f1f8:	mov    ecx,DWORD PTR [esp+0x24]
  41f1fc:	mov    DWORD PTR [edi],edx
  41f1fe:	mov    edx,DWORD PTR [esp+0x28]
  41f202:	mov    DWORD PTR [edi+0x4],eax
  41f205:	mov    eax,DWORD PTR [esp+0xc]
  41f209:	mov    DWORD PTR [esi],eax
  41f20b:	mov    eax,DWORD PTR [esp+0x18]
  41f20f:	mov    DWORD PTR [edi+0x8],ecx
  41f212:	mov    ecx,DWORD PTR [esp+0x10]
  41f216:	mov    DWORD PTR [edi+0xc],edx
  41f219:	mov    edx,DWORD PTR [esp+0x14]
  41f21d:	mov    DWORD PTR [esi+0x4],ecx
  41f220:	mov    DWORD PTR [esi+0x8],edx
  41f223:	mov    DWORD PTR [esi+0xc],eax
  41f226:	mov    al,0x1
  41f228:	add    esp,0x34
  41f22b:	ret    
  41f22c:	int3   
  41f22d:	int3   
  41f22e:	int3   
  41f22f:	int3   
  41f230:	push   ebp
  41f231:	mov    ebp,esp
  41f233:	and    esp,0xfffffff8
  41f236:	sub    esp,0x20
  41f239:	xor    eax,eax
  41f23b:	push   esi
  41f23c:	push   edi
  41f23d:	lea    esi,[esp+0x18]
  41f241:	lea    edi,[esp+0x8]
  41f245:	mov    DWORD PTR [esp+0x18],eax
  41f249:	mov    DWORD PTR [esp+0x1c],eax
  41f24d:	mov    DWORD PTR [esp+0x20],eax
  41f251:	mov    DWORD PTR [esp+0x24],eax
  41f255:	mov    DWORD PTR [esp+0x8],eax
  41f259:	mov    DWORD PTR [esp+0xc],eax
  41f25d:	mov    DWORD PTR [esp+0x10],eax
  41f261:	mov    DWORD PTR [esp+0x14],eax
  41f265:	call   0x41f1a0
  41f26a:	test   al,al
  41f26c:	jne    0x41f27d
  41f26e:	push   0x0
  41f270:	mov    eax,edi
  41f272:	push   eax
  41f273:	push   0x10
  41f275:	push   0x30
  41f277:	call   DWORD PTR ds:0x4303ec
  41f27d:	mov    ecx,DWORD PTR [esp+0x8]
  41f281:	mov    edx,DWORD PTR [esp+0x10]
  41f285:	lea    eax,[edx+ecx*1]
  41f288:	mov    ecx,DWORD PTR [esp+0x14]
  41f28c:	cdq    
  41f28d:	sub    eax,edx
  41f28f:	sar    eax,1
  41f291:	mov    DWORD PTR [ebx],eax
  41f293:	mov    eax,DWORD PTR [esp+0xc]
  41f297:	add    eax,ecx
  41f299:	cdq    
  41f29a:	sub    eax,edx
  41f29c:	sar    eax,1
  41f29e:	pop    edi
  41f29f:	mov    DWORD PTR [ebx+0x4],eax
  41f2a2:	pop    esi
  41f2a3:	mov    esp,ebp
  41f2a5:	pop    ebp
  41f2a6:	ret    
  41f2a7:	int3   
  41f2a8:	int3   
  41f2a9:	int3   
  41f2aa:	int3   
  41f2ab:	int3   
  41f2ac:	int3   
  41f2ad:	int3   
  41f2ae:	int3   
  41f2af:	int3   
  41f2b0:	sub    esp,0x648
  41f2b6:	mov    eax,ds:0x43e020
  41f2bb:	xor    eax,esp
  41f2bd:	mov    DWORD PTR [esp+0x644],eax
  41f2c4:	push   esi
  41f2c5:	mov    esi,ecx
  41f2c7:	test   esi,esi
  41f2c9:	je     0x41f46a
  41f2cf:	cmp    WORD PTR [esi],0x0
  41f2d3:	je     0x41f46a
  41f2d9:	push   ebx
  41f2da:	push   ebp
  41f2db:	push   edi
  41f2dc:	xor    eax,eax
  41f2de:	push   0x208
  41f2e3:	push   eax
  41f2e4:	lea    ecx,[esp+0x452]
  41f2eb:	push   ecx
  41f2ec:	mov    WORD PTR [esp+0x454],ax
  41f2f4:	call   0x429f9c
  41f2f9:	push   0x104
  41f2fe:	push   esi
  41f2ff:	mov    esi,DWORD PTR ds:0x4302e8
  41f305:	lea    edx,[esp+0x45c]
  41f30c:	push   0x105
  41f311:	push   edx
  41f312:	call   esi
  41f314:	mov    edi,DWORD PTR ds:0x4302ec
  41f31a:	lea    eax,[esp+0x464]
  41f321:	push   0x105
  41f326:	push   eax
  41f327:	call   edi
  41f329:	add    esp,0x24
  41f32c:	xor    ebp,ebp
  41f32e:	push   ebp
  41f32f:	push   0x2
  41f331:	call   0x424f4a
  41f336:	mov    ebx,eax
  41f338:	cmp    ebx,0xffffffff
  41f33b:	je     0x41f44f
  41f341:	push   0x228
  41f346:	lea    ecx,[esp+0x18]
  41f34a:	push   ebp
  41f34b:	push   ecx
  41f34c:	call   0x429f9c
  41f351:	add    esp,0xc
  41f354:	lea    edx,[esp+0x10]
  41f358:	push   edx
  41f359:	push   ebx
  41f35a:	mov    DWORD PTR [esp+0x18],0x22c
  41f362:	call   0x424f50
  41f367:	test   eax,eax
  41f369:	je     0x41f448
  41f36f:	nop
  41f370:	cmp    DWORD PTR [esp+0x18],ebp
  41f374:	je     0x41f40f
  41f37a:	call   DWORD PTR ds:0x4300ec
  41f380:	cmp    DWORD PTR [esp+0x18],eax
  41f384:	je     0x41f40f
  41f38a:	xor    eax,eax
  41f38c:	push   0x208
  41f391:	push   eax
  41f392:	lea    ecx,[esp+0x246]
  41f399:	push   ecx
  41f39a:	mov    WORD PTR [esp+0x248],ax
  41f3a2:	call   0x429f9c
  41f3a7:	push   0x104
  41f3ac:	lea    edx,[esp+0x44]
  41f3b0:	push   edx
  41f3b1:	lea    eax,[esp+0x250]
  41f3b8:	push   0x105
  41f3bd:	push   eax
  41f3be:	call   esi
  41f3c0:	lea    ecx,[esp+0x258]
  41f3c7:	push   0x105
  41f3cc:	push   ecx
  41f3cd:	call   edi
  41f3cf:	add    esp,0x24
  41f3d2:	lea    ecx,[esp+0x448]
  41f3d9:	lea    eax,[esp+0x23c]
  41f3e0:	mov    dx,WORD PTR [eax]
  41f3e3:	cmp    dx,WORD PTR [ecx]
  41f3e6:	jne    0x41f406
  41f3e8:	test   dx,dx
  41f3eb:	je     0x41f402
  41f3ed:	mov    dx,WORD PTR [eax+0x2]
  41f3f1:	cmp    dx,WORD PTR [ecx+0x2]
  41f3f5:	jne    0x41f406
  41f3f7:	add    eax,0x4
  41f3fa:	add    ecx,0x4
  41f3fd:	test   dx,dx
  41f400:	jne    0x41f3e0
  41f402:	xor    eax,eax
  41f404:	jmp    0x41f40b
  41f406:	sbb    eax,eax
  41f408:	sbb    eax,0xffffffff
  41f40b:	test   eax,eax
  41f40d:	je     0x41f444
  41f40f:	lea    edx,[esp+0x10]
  41f413:	push   edx
  41f414:	push   ebx
  41f415:	call   0x424f56
  41f41a:	test   eax,eax
  41f41c:	jne    0x41f370
  41f422:	push   ebx
  41f423:	call   DWORD PTR ds:0x4300f4
  41f429:	pop    edi
  41f42a:	mov    eax,ebp
  41f42c:	pop    ebp
  41f42d:	pop    ebx
  41f42e:	pop    esi
  41f42f:	mov    ecx,DWORD PTR [esp+0x644]
  41f436:	xor    ecx,esp
  41f438:	call   0x42503a
  41f43d:	add    esp,0x648
  41f443:	ret    
  41f444:	mov    ebp,DWORD PTR [esp+0x18]
  41f448:	push   ebx
  41f449:	call   DWORD PTR ds:0x4300f4
  41f44f:	pop    edi
  41f450:	mov    eax,ebp
  41f452:	pop    ebp
  41f453:	pop    ebx
  41f454:	pop    esi
  41f455:	mov    ecx,DWORD PTR [esp+0x644]
  41f45c:	xor    ecx,esp
  41f45e:	call   0x42503a
  41f463:	add    esp,0x648
  41f469:	ret    
  41f46a:	mov    ecx,DWORD PTR [esp+0x648]
  41f471:	pop    esi
  41f472:	xor    ecx,esp
  41f474:	xor    eax,eax
  41f476:	call   0x42503a
  41f47b:	add    esp,0x648
  41f481:	ret    
  41f482:	int3   
  41f483:	int3   
  41f484:	int3   
  41f485:	int3   
  41f486:	int3   
  41f487:	int3   
  41f488:	int3   
  41f489:	int3   
  41f48a:	int3   
  41f48b:	int3   
  41f48c:	int3   
  41f48d:	int3   
  41f48e:	int3   
  41f48f:	int3   
  41f490:	sub    esp,0x648
  41f496:	mov    eax,ds:0x43e020
  41f49b:	xor    eax,esp
  41f49d:	mov    DWORD PTR [esp+0x644],eax
  41f4a4:	push   esi
  41f4a5:	mov    esi,ecx
  41f4a7:	test   esi,esi
  41f4a9:	je     0x41f674
  41f4af:	cmp    WORD PTR [esi],0x0
  41f4b3:	je     0x41f674
  41f4b9:	push   ebx
  41f4ba:	push   ebp
  41f4bb:	push   edi
  41f4bc:	xor    eax,eax
  41f4be:	push   0x208
  41f4c3:	push   eax
  41f4c4:	lea    ecx,[esp+0x452]
  41f4cb:	push   ecx
  41f4cc:	mov    WORD PTR [esp+0x454],ax
  41f4d4:	call   0x429f9c
  41f4d9:	push   0x104
  41f4de:	push   esi
  41f4df:	mov    esi,DWORD PTR ds:0x4302e8
  41f4e5:	lea    edx,[esp+0x45c]
  41f4ec:	push   0x105
  41f4f1:	push   edx
  41f4f2:	call   esi
  41f4f4:	mov    edi,DWORD PTR ds:0x4302ec
  41f4fa:	lea    eax,[esp+0x464]
  41f501:	push   0x105
  41f506:	push   eax
  41f507:	call   edi
  41f509:	add    esp,0x24
  41f50c:	xor    ebp,ebp
  41f50e:	push   ebp
  41f50f:	push   0x2
  41f511:	call   0x424f4a
  41f516:	mov    ebx,eax
  41f518:	cmp    ebx,0xffffffff
  41f51b:	je     0x41f659
  41f521:	push   0x228
  41f526:	lea    ecx,[esp+0x18]
  41f52a:	push   ebp
  41f52b:	push   ecx
  41f52c:	call   0x429f9c
  41f531:	add    esp,0xc
  41f534:	lea    edx,[esp+0x10]
  41f538:	push   edx
  41f539:	push   ebx
  41f53a:	mov    DWORD PTR [esp+0x18],0x22c
  41f542:	call   0x424f50
  41f547:	test   eax,eax
  41f549:	je     0x41f652
  41f54f:	nop
  41f550:	cmp    DWORD PTR [esp+0x18],ebp
  41f554:	je     0x41f5ef
  41f55a:	call   DWORD PTR ds:0x4300ec
  41f560:	cmp    DWORD PTR [esp+0x18],eax
  41f564:	je     0x41f5ef
  41f56a:	xor    eax,eax
  41f56c:	push   0x208
  41f571:	push   eax
  41f572:	lea    ecx,[esp+0x246]
  41f579:	push   ecx
  41f57a:	mov    WORD PTR [esp+0x248],ax
  41f582:	call   0x429f9c
  41f587:	push   0x104
  41f58c:	lea    edx,[esp+0x44]
  41f590:	push   edx
  41f591:	lea    eax,[esp+0x250]
  41f598:	push   0x105
  41f59d:	push   eax
  41f59e:	call   esi
  41f5a0:	lea    ecx,[esp+0x258]
  41f5a7:	push   0x105
  41f5ac:	push   ecx
  41f5ad:	call   edi
  41f5af:	add    esp,0x24
  41f5b2:	lea    ecx,[esp+0x448]
  41f5b9:	lea    eax,[esp+0x23c]
  41f5c0:	mov    dx,WORD PTR [eax]
  41f5c3:	cmp    dx,WORD PTR [ecx]
  41f5c6:	jne    0x41f5e6
  41f5c8:	test   dx,dx
  41f5cb:	je     0x41f5e2
  41f5cd:	mov    dx,WORD PTR [eax+0x2]
  41f5d1:	cmp    dx,WORD PTR [ecx+0x2]
  41f5d5:	jne    0x41f5e6
  41f5d7:	add    eax,0x4
  41f5da:	add    ecx,0x4
  41f5dd:	test   dx,dx
  41f5e0:	jne    0x41f5c0
  41f5e2:	xor    eax,eax
  41f5e4:	jmp    0x41f5eb
  41f5e6:	sbb    eax,eax
  41f5e8:	sbb    eax,0xffffffff
  41f5eb:	test   eax,eax
  41f5ed:	je     0x41f624
  41f5ef:	lea    edx,[esp+0x10]
  41f5f3:	push   edx
  41f5f4:	push   ebx
  41f5f5:	call   0x424f56
  41f5fa:	test   eax,eax
  41f5fc:	jne    0x41f550
  41f602:	push   ebx
  41f603:	call   DWORD PTR ds:0x4300f4
  41f609:	pop    edi
  41f60a:	mov    eax,ebp
  41f60c:	pop    ebp
  41f60d:	pop    ebx
  41f60e:	pop    esi
  41f60f:	mov    ecx,DWORD PTR [esp+0x644]
  41f616:	xor    ecx,esp
  41f618:	call   0x42503a
  41f61d:	add    esp,0x648
  41f623:	ret    
  41f624:	mov    eax,DWORD PTR [esp+0x18]
  41f628:	push   eax
  41f629:	push   0x0
  41f62b:	push   0x1
  41f62d:	call   DWORD PTR ds:0x43006c
  41f633:	mov    esi,eax
  41f635:	test   esi,esi
  41f637:	je     0x41f652
  41f639:	push   0xffffffff
  41f63b:	push   esi
  41f63c:	call   DWORD PTR ds:0x430070
  41f642:	test   eax,eax
  41f644:	je     0x41f64b
  41f646:	mov    ebp,0x1
  41f64b:	push   esi
  41f64c:	call   DWORD PTR ds:0x4300f4
  41f652:	push   ebx
  41f653:	call   DWORD PTR ds:0x4300f4
  41f659:	pop    edi
  41f65a:	mov    eax,ebp
  41f65c:	pop    ebp
  41f65d:	pop    ebx
  41f65e:	pop    esi
  41f65f:	mov    ecx,DWORD PTR [esp+0x644]
  41f666:	xor    ecx,esp
  41f668:	call   0x42503a
  41f66d:	add    esp,0x648
  41f673:	ret    
  41f674:	mov    ecx,DWORD PTR [esp+0x648]
  41f67b:	pop    esi
  41f67c:	xor    ecx,esp
  41f67e:	xor    eax,eax
  41f680:	call   0x42503a
  41f685:	add    esp,0x648
  41f68b:	ret    
  41f68c:	int3   
  41f68d:	int3   
  41f68e:	int3   
  41f68f:	int3   
  41f690:	call   0x41f6c0
  41f695:	cmp    DWORD PTR [esi+0x18],0x10
  41f699:	mov    ecx,DWORD PTR ds:0x43ff8c
  41f69f:	jb     0x41f6ad
  41f6a1:	mov    eax,DWORD PTR [esi+0x4]
  41f6a4:	mov    edx,DWORD PTR [ecx]
  41f6a6:	push   eax
  41f6a7:	mov    eax,DWORD PTR [edx+0x8]
  41f6aa:	call   eax
  41f6ac:	ret    
  41f6ad:	mov    edx,DWORD PTR [ecx]
  41f6af:	lea    eax,[esi+0x4]
  41f6b2:	push   eax
  41f6b3:	mov    eax,DWORD PTR [edx+0x8]
  41f6b6:	call   eax
  41f6b8:	ret    
  41f6b9:	int3   
  41f6ba:	int3   
  41f6bb:	int3   
  41f6bc:	int3   
  41f6bd:	int3   
  41f6be:	int3   
  41f6bf:	int3   
  41f6c0:	push   0xffffffff
  41f6c2:	push   0x42be79
  41f6c7:	mov    eax,fs:0x0
  41f6cd:	push   eax
  41f6ce:	sub    esp,0x20
  41f6d1:	mov    eax,ds:0x43e020
  41f6d6:	xor    eax,esp
  41f6d8:	mov    DWORD PTR [esp+0x1c],eax
  41f6dc:	mov    eax,ds:0x43e020
  41f6e1:	xor    eax,esp
  41f6e3:	push   eax
  41f6e4:	lea    eax,[esp+0x24]
  41f6e8:	mov    fs:0x0,eax
  41f6ee:	cmp    DWORD PTR ds:0x43ff8c,0x0
  41f6f5:	jne    0x41f74c
  41f6f7:	call   0x41f770
  41f6fc:	push   0x4329c8
  41f701:	call   0x41fe00
  41f706:	push   eax
  41f707:	lea    eax,[esp+0xc]
  41f70b:	push   eax
  41f70c:	call   DWORD PTR ds:0x4301a4
  41f712:	add    esp,0xc
  41f715:	mov    DWORD PTR [esp+0x2c],0x0
  41f71d:	cmp    DWORD PTR [esp+0x1c],0x8
  41f722:	mov    ecx,DWORD PTR ds:0x43ff8c
  41f728:	mov    eax,DWORD PTR [esp+0x8]
  41f72c:	jae    0x41f732
  41f72e:	lea    eax,[esp+0x8]
  41f732:	mov    edx,DWORD PTR [ecx]
  41f734:	push   eax
  41f735:	mov    eax,DWORD PTR [edx+0x4]
  41f738:	call   eax
  41f73a:	lea    ecx,[esp+0x4]
  41f73e:	mov    DWORD PTR [esp+0x2c],0xffffffff
  41f746:	call   DWORD PTR ds:0x430264
  41f74c:	mov    ecx,DWORD PTR [esp+0x24]
  41f750:	mov    DWORD PTR fs:0x0,ecx
  41f757:	pop    ecx
  41f758:	mov    ecx,DWORD PTR [esp+0x1c]
  41f75c:	xor    ecx,esp
  41f75e:	call   0x42503a
  41f763:	add    esp,0x2c
  41f766:	ret    
  41f767:	int3   
  41f768:	int3   
  41f769:	int3   
  41f76a:	int3   
  41f76b:	int3   
  41f76c:	int3   
  41f76d:	int3   
  41f76e:	int3   
  41f76f:	int3   
  41f770:	push   0xffffffff
  41f772:	push   0x42b016
  41f777:	mov    eax,fs:0x0
  41f77d:	push   eax
  41f77e:	sub    esp,0x50
  41f781:	mov    eax,ds:0x43e020
  41f786:	xor    eax,esp
  41f788:	mov    DWORD PTR [esp+0x4c],eax
  41f78c:	mov    eax,ds:0x43e020
  41f791:	xor    eax,esp
  41f793:	push   eax
  41f794:	lea    eax,[esp+0x54]
  41f798:	mov    fs:0x0,eax
  41f79e:	cmp    DWORD PTR ds:0x43ff8c,0x0
  41f7a5:	je     0x41f842
  41f7ab:	lea    ecx,[esp+0x18]
  41f7af:	call   DWORD PTR ds:0x430260
  41f7b5:	push   0x43ff90
  41f7ba:	lea    eax,[esp+0x38]
  41f7be:	push   0x430cb4
  41f7c3:	push   eax
  41f7c4:	mov    DWORD PTR [esp+0x68],0x0
  41f7cc:	call   DWORD PTR ds:0x430170
  41f7d2:	add    esp,0xc
  41f7d5:	push   eax
  41f7d6:	lea    ecx,[esp+0x1c]
  41f7da:	mov    BYTE PTR [esp+0x60],0x1
  41f7df:	call   DWORD PTR ds:0x430174
  41f7e5:	lea    ecx,[esp+0x34]
  41f7e9:	mov    BYTE PTR [esp+0x5c],0x0
  41f7ee:	call   DWORD PTR ds:0x43025c
  41f7f4:	push   0x2a
  41f7f6:	push   0x4329ec
  41f7fb:	push   0x430d24
  41f800:	lea    ecx,[esp+0x10]
  41f804:	call   DWORD PTR ds:0x430000
  41f80a:	mov    BYTE PTR [esp+0x5c],0x2
  41f80f:	cmp    DWORD PTR [esp+0x30],0x10
  41f814:	mov    eax,DWORD PTR [esp+0x1c]
  41f818:	jae    0x41f81e
  41f81a:	lea    eax,[esp+0x1c]
  41f81e:	push   0x10000010
  41f823:	push   eax
  41f824:	lea    ecx,[esp+0xc]
  41f828:	push   ecx
  41f829:	lea    ecx,[esp+0x18]
  41f82d:	call   DWORD PTR ds:0x430008
  41f833:	push   0x43581c
  41f838:	lea    edx,[esp+0x10]
  41f83c:	push   edx
  41f83d:	call   0x429e76
  41f842:	push   0x4308e8
  41f847:	mov    ecx,0x43ff90
  41f84c:	call   DWORD PTR ds:0x430178
  41f852:	push   0x4308e8
  41f857:	call   DWORD PTR ds:0x4303b8
  41f85d:	mov    ds:0x43ff8c,eax
  41f862:	test   eax,eax
  41f864:	jne    0x41f901
  41f86a:	lea    ecx,[esp+0x34]
  41f86e:	call   DWORD PTR ds:0x430260
  41f874:	push   0x43ff90
  41f879:	lea    eax,[esp+0x1c]
  41f87d:	push   0x430d64
  41f882:	push   eax
  41f883:	mov    DWORD PTR [esp+0x68],0x3
  41f88b:	call   DWORD PTR ds:0x430170
  41f891:	add    esp,0xc
  41f894:	push   eax
  41f895:	lea    ecx,[esp+0x38]
  41f899:	mov    BYTE PTR [esp+0x60],0x4
  41f89e:	call   DWORD PTR ds:0x430174
  41f8a4:	lea    ecx,[esp+0x18]
  41f8a8:	mov    BYTE PTR [esp+0x5c],0x3
  41f8ad:	call   DWORD PTR ds:0x43025c
  41f8b3:	push   0x33
  41f8b5:	push   0x4329ec
  41f8ba:	push   0x430d24
  41f8bf:	lea    ecx,[esp+0x14]
  41f8c3:	call   DWORD PTR ds:0x430000
  41f8c9:	mov    BYTE PTR [esp+0x5c],0x5
  41f8ce:	cmp    DWORD PTR [esp+0x4c],0x10
  41f8d3:	mov    eax,DWORD PTR [esp+0x38]
  41f8d7:	jae    0x41f8dd
  41f8d9:	lea    eax,[esp+0x38]
  41f8dd:	push   0x10000010
  41f8e2:	push   eax
  41f8e3:	lea    ecx,[esp+0x10]
  41f8e7:	push   ecx
  41f8e8:	lea    ecx,[esp+0x18]
  41f8ec:	call   DWORD PTR ds:0x430008
  41f8f2:	push   0x43581c
  41f8f7:	lea    edx,[esp+0x10]
  41f8fb:	push   edx
  41f8fc:	call   0x429e76
  41f901:	mov    eax,0x1
  41f906:	mov    ecx,DWORD PTR [esp+0x54]
  41f90a:	mov    DWORD PTR fs:0x0,ecx
  41f911:	pop    ecx
  41f912:	mov    ecx,DWORD PTR [esp+0x4c]
  41f916:	xor    ecx,esp
  41f918:	call   0x42503a
  41f91d:	add    esp,0x5c
  41f920:	ret    
  41f921:	int3   
  41f922:	int3   
  41f923:	int3   
  41f924:	int3   
  41f925:	int3   
  41f926:	int3   
  41f927:	int3   
  41f928:	int3   
  41f929:	int3   
  41f92a:	int3   
  41f92b:	int3   
  41f92c:	int3   
  41f92d:	int3   
  41f92e:	int3   
  41f92f:	int3   
  41f930:	push   0xffffffff
  41f932:	push   0x42b23c
  41f937:	mov    eax,fs:0x0
  41f93d:	push   eax
  41f93e:	push   ecx
  41f93f:	mov    eax,ds:0x43e020
  41f944:	xor    eax,esp
  41f946:	push   eax
  41f947:	lea    eax,[esp+0x8]
  41f94b:	mov    fs:0x0,eax
  41f951:	mov    DWORD PTR [esp+0x4],0x43ff8c
  41f959:	mov    DWORD PTR [esp+0x10],0x0
  41f961:	mov    ecx,DWORD PTR ds:0x43ff8c
  41f967:	test   ecx,ecx
  41f969:	je     0x41f9a3
  41f96b:	cmp    DWORD PTR ds:0x43ffa4,0x0
  41f972:	jne    0x41f97e
  41f974:	mov    eax,DWORD PTR [ecx]
  41f976:	mov    edx,DWORD PTR [eax]
  41f978:	push   0x1
  41f97a:	call   edx
  41f97c:	jmp    0x41f999
  41f97e:	cmp    DWORD PTR ds:0x43ffa8,0x10
  41f985:	mov    eax,ds:0x43ff94
  41f98a:	jae    0x41f991
  41f98c:	mov    eax,0x43ff94
  41f991:	push   ecx
  41f992:	push   eax
  41f993:	call   DWORD PTR ds:0x4303bc
  41f999:	mov    DWORD PTR ds:0x43ff8c,0x0
  41f9a3:	mov    ecx,0x43ff90
  41f9a8:	mov    DWORD PTR [esp+0x10],0xffffffff
  41f9b0:	call   DWORD PTR ds:0x43025c
  41f9b6:	mov    ecx,DWORD PTR [esp+0x8]
  41f9ba:	mov    DWORD PTR fs:0x0,ecx
  41f9c1:	pop    ecx
  41f9c2:	add    esp,0x10
  41f9c5:	ret    
  41f9c6:	int3   
  41f9c7:	int3   
  41f9c8:	int3   
  41f9c9:	int3   
  41f9ca:	int3   
  41f9cb:	int3   
  41f9cc:	int3   
  41f9cd:	int3   
  41f9ce:	int3   
  41f9cf:	int3   
  41f9d0:	push   0xffffffff
  41f9d2:	push   0x42ac9d
  41f9d7:	mov    eax,fs:0x0
  41f9dd:	push   eax
  41f9de:	push   ecx
  41f9df:	mov    eax,ds:0x43e020
  41f9e4:	xor    eax,esp
  41f9e6:	push   eax
  41f9e7:	lea    eax,[esp+0x8]
  41f9eb:	mov    fs:0x0,eax
  41f9f1:	mov    ecx,0x43ffb0
  41f9f6:	mov    DWORD PTR [esp+0x4],0x43ffb0
  41f9fe:	call   DWORD PTR ds:0x430254
  41fa04:	mov    ecx,0x43ffcc
  41fa09:	mov    DWORD PTR [esp+0x10],0x0
  41fa11:	call   DWORD PTR ds:0x430254
  41fa17:	mov    ecx,0x43ffe8
  41fa1c:	mov    BYTE PTR [esp+0x10],0x1
  41fa21:	call   DWORD PTR ds:0x430254
  41fa27:	mov    ecx,0x440004
  41fa2c:	mov    BYTE PTR [esp+0x10],0x2
  41fa31:	call   DWORD PTR ds:0x430254
  41fa37:	mov    ecx,0x440020
  41fa3c:	mov    BYTE PTR [esp+0x10],0x3
  41fa41:	call   DWORD PTR ds:0x430254
  41fa47:	mov    eax,0x43ffb0
  41fa4c:	mov    ecx,DWORD PTR [esp+0x8]
  41fa50:	mov    DWORD PTR fs:0x0,ecx
  41fa57:	pop    ecx
  41fa58:	add    esp,0x10
  41fa5b:	ret    
  41fa5c:	int3   
  41fa5d:	int3   
  41fa5e:	int3   
  41fa5f:	int3   
  41fa60:	push   0xffffffff
  41fa62:	push   0x42ac9d
  41fa67:	mov    eax,fs:0x0
  41fa6d:	push   eax
  41fa6e:	push   ecx
  41fa6f:	mov    eax,ds:0x43e020
  41fa74:	xor    eax,esp
  41fa76:	push   eax
  41fa77:	lea    eax,[esp+0x8]
  41fa7b:	mov    fs:0x0,eax
  41fa81:	mov    DWORD PTR [esp+0x4],0x43ffb0
  41fa89:	mov    ecx,0x440020
  41fa8e:	mov    DWORD PTR [esp+0x10],0x3
  41fa96:	call   DWORD PTR ds:0x430264
  41fa9c:	mov    ecx,0x440004
  41faa1:	mov    BYTE PTR [esp+0x10],0x2
  41faa6:	call   DWORD PTR ds:0x430264
  41faac:	mov    ecx,0x43ffe8
  41fab1:	mov    BYTE PTR [esp+0x10],0x1
  41fab6:	call   DWORD PTR ds:0x430264
  41fabc:	mov    ecx,0x43ffcc
  41fac1:	mov    BYTE PTR [esp+0x10],0x0
  41fac6:	call   DWORD PTR ds:0x430264
  41facc:	mov    ecx,0x43ffb0
  41fad1:	mov    DWORD PTR [esp+0x10],0xffffffff
  41fad9:	call   DWORD PTR ds:0x430264
  41fadf:	mov    ecx,DWORD PTR [esp+0x8]
  41fae3:	mov    DWORD PTR fs:0x0,ecx
  41faea:	pop    ecx
  41faeb:	add    esp,0x10
  41faee:	ret    
  41faef:	int3   
  41faf0:	push   ecx
  41faf1:	push   0x432a1c
  41faf6:	mov    DWORD PTR [esp+0x4],0x0
  41fafe:	call   0x41fb20
  41fb03:	push   eax
  41fb04:	push   esi
  41fb05:	call   DWORD PTR ds:0x4301a4
  41fb0b:	mov    eax,esi
  41fb0d:	add    esp,0x10
  41fb10:	ret    
  41fb11:	int3   
  41fb12:	int3   
  41fb13:	int3   
  41fb14:	int3   
  41fb15:	int3   
  41fb16:	int3   
  41fb17:	int3   
  41fb18:	int3   
  41fb19:	int3   
  41fb1a:	int3   
  41fb1b:	int3   
  41fb1c:	int3   
  41fb1d:	int3   
  41fb1e:	int3   
  41fb1f:	int3   
  41fb20:	push   0xffffffff
  41fb22:	push   0x42ac50
  41fb27:	mov    eax,fs:0x0
  41fb2d:	push   eax
  41fb2e:	sub    esp,0x20
  41fb31:	push   ebx
  41fb32:	mov    eax,ds:0x43e020
  41fb37:	xor    eax,esp
  41fb39:	push   eax
  41fb3a:	lea    eax,[esp+0x28]
  41fb3e:	mov    fs:0x0,eax
  41fb44:	mov    ebx,0x1
  41fb49:	test   BYTE PTR ds:0x440504,bl
  41fb4f:	jne    0x41fb7f
  41fb51:	or     DWORD PTR ds:0x440504,ebx
  41fb57:	mov    ecx,0x4404e8
  41fb5c:	mov    DWORD PTR [esp+0x30],0x0
  41fb64:	call   DWORD PTR ds:0x430254
  41fb6a:	push   0x42f530
  41fb6f:	call   0x425159
  41fb74:	add    esp,0x4
  41fb77:	mov    DWORD PTR [esp+0x30],0xffffffff
  41fb7f:	cmp    DWORD PTR ds:0x4404fc,0x0
  41fb86:	jne    0x41fbea
  41fb88:	lea    ecx,[esp+0x8]
  41fb8c:	call   DWORD PTR ds:0x43002c
  41fb92:	lea    eax,[esp+0x8]
  41fb96:	push   eax
  41fb97:	mov    DWORD PTR [esp+0x34],ebx
  41fb9b:	call   DWORD PTR ds:0x430034
  41fba1:	add    esp,0x4
  41fba4:	lea    ecx,[esp+0x8]
  41fba8:	call   DWORD PTR ds:0x430038
  41fbae:	push   eax
  41fbaf:	lea    ecx,[esp+0x10]
  41fbb3:	call   DWORD PTR ds:0x430268
  41fbb9:	push   eax
  41fbba:	mov    ecx,0x4404e8
  41fbbf:	mov    BYTE PTR [esp+0x34],0x2
  41fbc4:	call   DWORD PTR ds:0x43017c
  41fbca:	lea    ecx,[esp+0xc]
  41fbce:	mov    BYTE PTR [esp+0x30],bl
  41fbd2:	call   DWORD PTR ds:0x430264
  41fbd8:	lea    ecx,[esp+0x8]
  41fbdc:	mov    DWORD PTR [esp+0x30],0xffffffff
  41fbe4:	call   DWORD PTR ds:0x430030
  41fbea:	mov    eax,0x4404e8
  41fbef:	mov    ecx,DWORD PTR [esp+0x28]
  41fbf3:	mov    DWORD PTR fs:0x0,ecx
  41fbfa:	pop    ecx
  41fbfb:	pop    ebx
  41fbfc:	add    esp,0x2c
  41fbff:	ret    
  41fc00:	push   0xffffffff
  41fc02:	push   0x42b209
  41fc07:	mov    eax,fs:0x0
  41fc0d:	push   eax
  41fc0e:	sub    esp,0x1c
  41fc11:	mov    eax,ds:0x43e020
  41fc16:	xor    eax,esp
  41fc18:	push   eax
  41fc19:	lea    eax,[esp+0x20]
  41fc1d:	mov    fs:0x0,eax
  41fc23:	cmp    DWORD PTR ds:0x440034,0x0
  41fc2a:	jne    0x41fc6b
  41fc2c:	push   0x432a54
  41fc31:	call   0x41fb20
  41fc36:	push   eax
  41fc37:	lea    eax,[esp+0xc]
  41fc3b:	push   eax
  41fc3c:	call   DWORD PTR ds:0x4301a4
  41fc42:	add    esp,0xc
  41fc45:	push   eax
  41fc46:	mov    ecx,0x440020
  41fc4b:	mov    DWORD PTR [esp+0x2c],0x0
  41fc53:	call   DWORD PTR ds:0x43017c
  41fc59:	lea    ecx,[esp+0x4]
  41fc5d:	mov    DWORD PTR [esp+0x28],0xffffffff
  41fc65:	call   DWORD PTR ds:0x430264
  41fc6b:	mov    eax,0x440020
  41fc70:	mov    ecx,DWORD PTR [esp+0x20]
  41fc74:	mov    DWORD PTR fs:0x0,ecx
  41fc7b:	pop    ecx
  41fc7c:	add    esp,0x28
  41fc7f:	ret    
  41fc80:	push   0xffffffff
  41fc82:	push   0x42b1d7
  41fc87:	mov    eax,fs:0x0
  41fc8d:	push   eax
  41fc8e:	sub    esp,0x1c
  41fc91:	mov    eax,ds:0x43e020
  41fc96:	xor    eax,esp
  41fc98:	push   eax
  41fc99:	lea    eax,[esp+0x20]
  41fc9d:	mov    fs:0x0,eax
  41fca3:	test   BYTE PTR ds:0x440564,0x1
  41fcaa:	jne    0x41fcdb
  41fcac:	or     DWORD PTR ds:0x440564,0x1
  41fcb3:	mov    ecx,0x440548
  41fcb8:	mov    DWORD PTR [esp+0x28],0x0
  41fcc0:	call   DWORD PTR ds:0x430254
  41fcc6:	push   0x42f540
  41fccb:	call   0x425159
  41fcd0:	add    esp,0x4
  41fcd3:	mov    DWORD PTR [esp+0x28],0xffffffff
  41fcdb:	cmp    DWORD PTR ds:0x44055c,0x0
  41fce2:	jne    0x41fd23
  41fce4:	push   0x432a70
  41fce9:	call   0x41fb20
  41fcee:	push   eax
  41fcef:	lea    eax,[esp+0xc]
  41fcf3:	push   eax
  41fcf4:	call   DWORD PTR ds:0x4301a4
  41fcfa:	add    esp,0xc
  41fcfd:	push   eax
  41fcfe:	mov    ecx,0x440548
  41fd03:	mov    DWORD PTR [esp+0x2c],0x1
  41fd0b:	call   DWORD PTR ds:0x43017c
  41fd11:	lea    ecx,[esp+0x4]
  41fd15:	mov    DWORD PTR [esp+0x28],0xffffffff
  41fd1d:	call   DWORD PTR ds:0x430264
  41fd23:	mov    eax,0x440548
  41fd28:	mov    ecx,DWORD PTR [esp+0x20]
  41fd2c:	mov    DWORD PTR fs:0x0,ecx
  41fd33:	pop    ecx
  41fd34:	add    esp,0x28
  41fd37:	ret    
  41fd38:	int3   
  41fd39:	int3   
  41fd3a:	int3   
  41fd3b:	int3   
  41fd3c:	int3   
  41fd3d:	int3   
  41fd3e:	int3   
  41fd3f:	int3   
  41fd40:	push   0xffffffff
  41fd42:	push   0x42b197
  41fd47:	mov    eax,fs:0x0
  41fd4d:	push   eax
  41fd4e:	sub    esp,0x1c
  41fd51:	mov    eax,ds:0x43e020
  41fd56:	xor    eax,esp
  41fd58:	push   eax
  41fd59:	lea    eax,[esp+0x20]
  41fd5d:	mov    fs:0x0,eax
  41fd63:	test   BYTE PTR ds:0x440544,0x1
  41fd6a:	jne    0x41fd9b
  41fd6c:	or     DWORD PTR ds:0x440544,0x1
  41fd73:	mov    ecx,0x440528
  41fd78:	mov    DWORD PTR [esp+0x28],0x0
  41fd80:	call   DWORD PTR ds:0x430254
  41fd86:	push   0x42f550
  41fd8b:	call   0x425159
  41fd90:	add    esp,0x4
  41fd93:	mov    DWORD PTR [esp+0x28],0xffffffff
  41fd9b:	cmp    DWORD PTR ds:0x44053c,0x0
  41fda2:	jne    0x41fde3
  41fda4:	push   0x432a80
  41fda9:	call   0x41fb20
  41fdae:	push   eax
  41fdaf:	lea    eax,[esp+0xc]
  41fdb3:	push   eax
  41fdb4:	call   DWORD PTR ds:0x4301a4
  41fdba:	add    esp,0xc
  41fdbd:	push   eax
  41fdbe:	mov    ecx,0x440528
  41fdc3:	mov    DWORD PTR [esp+0x2c],0x1
  41fdcb:	call   DWORD PTR ds:0x43017c
  41fdd1:	lea    ecx,[esp+0x4]
  41fdd5:	mov    DWORD PTR [esp+0x28],0xffffffff
  41fddd:	call   DWORD PTR ds:0x430264
  41fde3:	mov    eax,0x440528
  41fde8:	mov    ecx,DWORD PTR [esp+0x20]
  41fdec:	mov    DWORD PTR fs:0x0,ecx
  41fdf3:	pop    ecx
  41fdf4:	add    esp,0x28
  41fdf7:	ret    
  41fdf8:	int3   
  41fdf9:	int3   
  41fdfa:	int3   
  41fdfb:	int3   
  41fdfc:	int3   
  41fdfd:	int3   
  41fdfe:	int3   
  41fdff:	int3   
  41fe00:	push   0xffffffff
  41fe02:	push   0x42b157
  41fe07:	mov    eax,fs:0x0
  41fe0d:	push   eax
  41fe0e:	sub    esp,0x1c
  41fe11:	mov    eax,ds:0x43e020
  41fe16:	xor    eax,esp
  41fe18:	push   eax
  41fe19:	lea    eax,[esp+0x20]
  41fe1d:	mov    fs:0x0,eax
  41fe23:	test   BYTE PTR ds:0x440524,0x1
  41fe2a:	jne    0x41fe5b
  41fe2c:	or     DWORD PTR ds:0x440524,0x1
  41fe33:	mov    ecx,0x440508
  41fe38:	mov    DWORD PTR [esp+0x28],0x0
  41fe40:	call   DWORD PTR ds:0x430254
  41fe46:	push   0x42f560
  41fe4b:	call   0x425159
  41fe50:	add    esp,0x4
  41fe53:	mov    DWORD PTR [esp+0x28],0xffffffff
  41fe5b:	cmp    DWORD PTR ds:0x44051c,0x0
  41fe62:	jne    0x41fea3
  41fe64:	push   0x432aa8
  41fe69:	call   0x41fb20
  41fe6e:	push   eax
  41fe6f:	lea    eax,[esp+0xc]
  41fe73:	push   eax
  41fe74:	call   DWORD PTR ds:0x4301a4
  41fe7a:	add    esp,0xc
  41fe7d:	push   eax
  41fe7e:	mov    ecx,0x440508
  41fe83:	mov    DWORD PTR [esp+0x2c],0x1
  41fe8b:	call   DWORD PTR ds:0x43017c
  41fe91:	lea    ecx,[esp+0x4]
  41fe95:	mov    DWORD PTR [esp+0x28],0xffffffff
  41fe9d:	call   DWORD PTR ds:0x430264
  41fea3:	mov    eax,0x440508
  41fea8:	mov    ecx,DWORD PTR [esp+0x20]
  41feac:	mov    DWORD PTR fs:0x0,ecx
  41feb3:	pop    ecx
  41feb4:	add    esp,0x28
  41feb7:	ret    
  41feb8:	int3   
  41feb9:	int3   
  41feba:	int3   
  41febb:	int3   
  41febc:	int3   
  41febd:	int3   
  41febe:	int3   
  41febf:	int3   
  41fec0:	push   0xffffffff
  41fec2:	push   0x42b119
  41fec7:	mov    eax,fs:0x0
  41fecd:	push   eax
  41fece:	sub    esp,0x38
  41fed1:	mov    eax,ds:0x43e020
  41fed6:	xor    eax,esp
  41fed8:	push   eax
  41fed9:	lea    eax,[esp+0x3c]
  41fedd:	mov    fs:0x0,eax
  41fee3:	push   0x432ad4
  41fee8:	lea    ecx,[esp+0x24]
  41feec:	call   DWORD PTR ds:0x430268
  41fef2:	push   0x432af8
  41fef7:	lea    ecx,[esp+0x8]
  41fefb:	mov    DWORD PTR [esp+0x48],0x0
  41ff03:	call   DWORD PTR ds:0x430268
  41ff09:	mov    ecx,DWORD PTR [esp+0x24]
  41ff0d:	mov    eax,0x8
  41ff12:	cmp    DWORD PTR [esp+0x38],eax
  41ff16:	jae    0x41ff1c
  41ff18:	lea    ecx,[esp+0x24]
  41ff1c:	cmp    DWORD PTR [esp+0x1c],eax
  41ff20:	mov    eax,DWORD PTR [esp+0x8]
  41ff24:	jae    0x41ff2a
  41ff26:	lea    eax,[esp+0x8]
  41ff2a:	push   0x0
  41ff2c:	push   ecx
  41ff2d:	push   eax
  41ff2e:	push   0x0
  41ff30:	call   DWORD PTR ds:0x4303e8
  41ff36:	lea    ecx,[esp+0x4]
  41ff3a:	call   DWORD PTR ds:0x430264
  41ff40:	lea    ecx,[esp+0x20]
  41ff44:	mov    DWORD PTR [esp+0x44],0xffffffff
  41ff4c:	call   DWORD PTR ds:0x430264
  41ff52:	push   0x0
  41ff54:	call   DWORD PTR ds:0x430434
  41ff5a:	mov    ecx,DWORD PTR [esp+0x3c]
  41ff5e:	mov    DWORD PTR fs:0x0,ecx
  41ff65:	pop    ecx
  41ff66:	add    esp,0x44
  41ff69:	ret    
  41ff6a:	int3   
  41ff6b:	int3   
  41ff6c:	int3   
  41ff6d:	int3   
  41ff6e:	int3   
  41ff6f:	int3   
  41ff70:	push   ebp
  41ff71:	mov    ebp,esp
  41ff73:	and    esp,0xfffffff8
  41ff76:	push   0xffffffff
  41ff78:	push   0x42d7a0
  41ff7d:	mov    eax,fs:0x0
  41ff83:	push   eax
  41ff84:	sub    esp,0x14
  41ff87:	push   esi
  41ff88:	push   edi
  41ff89:	mov    eax,ds:0x43e020
  41ff8e:	xor    eax,esp
  41ff90:	push   eax
  41ff91:	lea    eax,[esp+0x20]
  41ff95:	mov    fs:0x0,eax
  41ff9b:	mov    esi,DWORD PTR ds:0x44003c
  41ffa1:	call   0x41fe00
  41ffa6:	mov    edi,0x8
  41ffab:	cmp    DWORD PTR [eax+0x18],edi
  41ffae:	jb     0x41ffb5
  41ffb0:	mov    eax,DWORD PTR [eax+0x4]
  41ffb3:	jmp    0x41ffb8
  41ffb5:	add    eax,0x4
  41ffb8:	mov    edx,DWORD PTR [esi]
  41ffba:	push   0x0
  41ffbc:	push   0x0
  41ffbe:	push   eax
  41ffbf:	mov    eax,DWORD PTR [edx+0x4]
  41ffc2:	mov    ecx,esi
  41ffc4:	call   eax
  41ffc6:	test   al,al
  41ffc8:	jne    0x42000b
  41ffca:	call   0x4045f0
  41ffcf:	mov    eax,DWORD PTR [eax+0x2c]
  41ffd2:	cmp    eax,0x4
  41ffd5:	jg     0x420080
  41ffdb:	push   0x432b6c
  41ffe0:	mov    esi,0x432b8c
  41ffe5:	mov    eax,0x4
  41ffea:	lea    edi,[esp+0x10]
  41ffee:	call   0x404160
  41fff3:	push   0x432ba4
  41fff8:	mov    esi,eax
  41fffa:	mov    DWORD PTR [esp+0x2c],0x0
  420002:	call   0x4040d0
  420007:	mov    ecx,edi
  420009:	jmp    0x420070
  42000b:	mov    esi,DWORD PTR ds:0x44003c
  420011:	call   0x41fd40
  420016:	cmp    DWORD PTR [eax+0x18],edi
  420019:	jb     0x420020
  42001b:	mov    eax,DWORD PTR [eax+0x4]
  42001e:	jmp    0x420023
  420020:	add    eax,0x4
  420023:	mov    edx,DWORD PTR [esi]
  420025:	push   0x0
  420027:	push   0x0
  420029:	push   eax
  42002a:	mov    eax,DWORD PTR [edx+0x4]
  42002d:	mov    ecx,esi
  42002f:	call   eax
  420031:	test   al,al
  420033:	jne    0x420085
  420035:	call   0x4045f0
  42003a:	mov    eax,DWORD PTR [eax+0x2c]
  42003d:	cmp    eax,0x4
  420040:	jg     0x420080
  420042:	push   0x432b6c
  420047:	mov    esi,0x432b8c
  42004c:	mov    eax,0x4
  420051:	lea    edi,[esp+0x18]
  420055:	call   0x404160
  42005a:	push   0x432bc8
  42005f:	mov    esi,eax
  420061:	mov    DWORD PTR [esp+0x2c],0x1
  420069:	call   0x4040d0
  42006e:	mov    ecx,edi
  420070:	add    esp,0x4
  420073:	mov    DWORD PTR [esp+0x28],0xffffffff
  42007b:	call   0x404680
  420080:	call   0x41fec0
  420085:	mov    ecx,DWORD PTR [esp+0x20]
  420089:	mov    DWORD PTR fs:0x0,ecx
  420090:	pop    ecx
  420091:	pop    edi
  420092:	pop    esi
  420093:	mov    esp,ebp
  420095:	pop    ebp
  420096:	ret    
  420097:	int3   
  420098:	int3   
  420099:	int3   
  42009a:	int3   
  42009b:	int3   
  42009c:	int3   
  42009d:	int3   
  42009e:	int3   
  42009f:	int3   
  4200a0:	push   0xffffffff
  4200a2:	push   0x42df9b
  4200a7:	mov    eax,fs:0x0
  4200ad:	push   eax
  4200ae:	sub    esp,0x64
  4200b1:	mov    eax,ds:0x43e020
  4200b6:	xor    eax,esp
  4200b8:	mov    DWORD PTR [esp+0x60],eax
  4200bc:	push   esi
  4200bd:	push   edi
  4200be:	mov    eax,ds:0x43e020
  4200c3:	xor    eax,esp
  4200c5:	push   eax
  4200c6:	lea    eax,[esp+0x70]
  4200ca:	mov    fs:0x0,eax
  4200d0:	mov    edi,0x430934
  4200d5:	mov    ecx,0x44003c
  4200da:	call   0x4130f0
  4200df:	test   eax,eax
  4200e1:	jne    0x4201ab
  4200e7:	call   0x4045f0
  4200ec:	mov    eax,DWORD PTR [eax+0x2c]
  4200ef:	cmp    eax,0x4
  4200f2:	jg     0x420132
  4200f4:	push   0x432bec
  4200f9:	mov    esi,0x432b8c
  4200fe:	mov    eax,0x4
  420103:	lea    edi,[esp+0x10]
  420107:	call   0x404160
  42010c:	push   0x432c08
  420111:	mov    esi,eax
  420113:	mov    DWORD PTR [esp+0x7c],0x0
  42011b:	call   0x4040d0
  420120:	add    esp,0x4
  420123:	mov    ecx,edi
  420125:	mov    DWORD PTR [esp+0x78],0xffffffff
  42012d:	call   0x404680
  420132:	push   0x432ad4
  420137:	lea    ecx,[esp+0x34]
  42013b:	call   DWORD PTR ds:0x430268
  420141:	push   0x432c28
  420146:	lea    ecx,[esp+0x18]
  42014a:	mov    DWORD PTR [esp+0x7c],0x1
  420152:	call   DWORD PTR ds:0x430268
  420158:	mov    ecx,DWORD PTR [esp+0x34]
  42015c:	mov    eax,0x8
  420161:	cmp    DWORD PTR [esp+0x48],eax
  420165:	jae    0x42016b
  420167:	lea    ecx,[esp+0x34]
  42016b:	cmp    DWORD PTR [esp+0x2c],eax
  42016f:	mov    eax,DWORD PTR [esp+0x18]
  420173:	jae    0x420179
  420175:	lea    eax,[esp+0x18]
  420179:	push   0x0
  42017b:	push   ecx
  42017c:	push   eax
  42017d:	push   0x0
  42017f:	call   DWORD PTR ds:0x4303e8
  420185:	lea    ecx,[esp+0x14]
  420189:	call   DWORD PTR ds:0x430264
  42018f:	lea    ecx,[esp+0x30]
  420193:	mov    DWORD PTR [esp+0x78],0xffffffff
  42019b:	call   DWORD PTR ds:0x430264
  4201a1:	push   0x0
  4201a3:	call   DWORD PTR ds:0x430434
  4201a9:	jmp    0x4201f5
  4201ab:	call   0x41ff70
  4201b0:	lea    eax,[esp+0x4c]
  4201b4:	push   eax
  4201b5:	call   0x420350
  4201ba:	mov    DWORD PTR [esp+0x78],0x2
  4201c2:	mov    esi,DWORD PTR [esp+0x4c]
  4201c6:	call   0x41fd40
  4201cb:	cmp    DWORD PTR [eax+0x18],0x8
  4201cf:	jb     0x4201d6
  4201d1:	mov    eax,DWORD PTR [eax+0x4]
  4201d4:	jmp    0x4201d9
  4201d6:	add    eax,0x4
  4201d9:	mov    edx,DWORD PTR [esi]
  4201db:	push   eax
  4201dc:	mov    eax,DWORD PTR [edx+0x4]
  4201df:	mov    ecx,esi
  4201e1:	call   eax
  4201e3:	lea    ecx,[esp+0x4c]
  4201e7:	push   ecx
  4201e8:	mov    DWORD PTR [esp+0x7c],0xffffffff
  4201f0:	call   0x40b540
  4201f5:	mov    ecx,DWORD PTR [esp+0x70]
  4201f9:	mov    DWORD PTR fs:0x0,ecx
  420200:	pop    ecx
  420201:	pop    edi
  420202:	pop    esi
  420203:	mov    ecx,DWORD PTR [esp+0x60]
  420207:	xor    ecx,esp
  420209:	call   0x42503a
  42020e:	add    esp,0x70
  420211:	ret    
  420212:	int3   
  420213:	int3   
  420214:	int3   
  420215:	int3   
  420216:	int3   
  420217:	int3   
  420218:	int3   
  420219:	int3   
  42021a:	int3   
  42021b:	int3   
  42021c:	int3   
  42021d:	int3   
  42021e:	int3   
  42021f:	int3   
  420220:	push   0xffffffff
  420222:	push   0x42d771
  420227:	mov    eax,fs:0x0
  42022d:	push   eax
  42022e:	sub    esp,0x10
  420231:	push   ebx
  420232:	push   ebp
  420233:	push   esi
  420234:	push   edi
  420235:	mov    eax,ds:0x43e020
  42023a:	xor    eax,esp
  42023c:	push   eax
  42023d:	lea    eax,[esp+0x24]
  420241:	mov    fs:0x0,eax
  420247:	mov    edi,ecx
  420249:	mov    ebp,DWORD PTR [esp+0x34]
  42024d:	lea    ecx,[esp+0x34]
  420251:	call   DWORD PTR ds:0x430018
  420257:	mov    DWORD PTR [esp+0x2c],0x0
  42025f:	cmp    DWORD PTR [ebp+0x18],0x8
  420263:	mov    ecx,DWORD PTR ds:0x44003c
  420269:	lea    ebx,[ebp+0x4]
  42026c:	jb     0x420272
  42026e:	mov    eax,DWORD PTR [ebx]
  420270:	jmp    0x420274
  420272:	mov    eax,ebx
  420274:	mov    edx,DWORD PTR [ecx]
  420276:	lea    esi,[esp+0x34]
  42027a:	push   esi
  42027b:	push   eax
  42027c:	mov    eax,DWORD PTR [edx+0x10]
  42027f:	call   eax
  420281:	test   al,al
  420283:	jne    0x4202eb
  420285:	call   0x4045f0
  42028a:	mov    eax,DWORD PTR [eax+0x2c]
  42028d:	cmp    eax,0x4
  420290:	jg     0x4202d5
  420292:	push   0x432cac
  420297:	mov    esi,0x432b8c
  42029c:	mov    eax,0x4
  4202a1:	lea    edi,[esp+0x1c]
  4202a5:	call   0x404160
  4202aa:	mov    BYTE PTR [esp+0x2c],0x1
  4202af:	cmp    DWORD PTR [ebp+0x18],0x8
  4202b3:	jb     0x4202b7
  4202b5:	mov    ebx,DWORD PTR [ebx]
  4202b7:	push   ebx
  4202b8:	push   0x432cd0
  4202bd:	mov    esi,eax
  4202bf:	call   0x4040d0
  4202c4:	add    esp,0x8
  4202c7:	lea    ecx,[esp+0x18]
  4202cb:	mov    BYTE PTR [esp+0x2c],0x0
  4202d0:	call   0x404680
  4202d5:	lea    ecx,[esp+0x34]
  4202d9:	mov    DWORD PTR [esp+0x2c],0xffffffff
  4202e1:	call   DWORD PTR ds:0x43001c
  4202e7:	xor    al,al
  4202e9:	jmp    0x42032d
  4202eb:	lea    ecx,[esp+0x34]
  4202ef:	call   DWORD PTR ds:0x430024
  4202f5:	lea    ecx,[esp+0x34]
  4202f9:	mov    esi,eax
  4202fb:	call   DWORD PTR ds:0x430020
  420301:	add    eax,esi
  420303:	push   eax
  420304:	push   esi
  420305:	mov    ecx,edi
  420307:	call   DWORD PTR ds:0x430234
  42030d:	push   0x0
  42030f:	push   0x1
  420311:	mov    ecx,edi
  420313:	call   DWORD PTR ds:0x4301d4
  420319:	lea    ecx,[esp+0x34]
  42031d:	mov    DWORD PTR [esp+0x2c],0xffffffff
  420325:	call   DWORD PTR ds:0x43001c
  42032b:	mov    al,0x1
  42032d:	mov    ecx,DWORD PTR [esp+0x24]
  420331:	mov    DWORD PTR fs:0x0,ecx
  420338:	pop    ecx
  420339:	pop    edi
  42033a:	pop    esi
  42033b:	pop    ebp
  42033c:	pop    ebx
  42033d:	add    esp,0x1c
  420340:	ret    0x4
  420343:	int3   
  420344:	int3   
  420345:	int3   
  420346:	int3   
  420347:	int3   
  420348:	int3   
  420349:	int3   
  42034a:	int3   
  42034b:	int3   
  42034c:	int3   
  42034d:	int3   
  42034e:	int3   
  42034f:	int3   
  420350:	push   0xffffffff
  420352:	push   0x42ac0c
  420357:	mov    eax,fs:0x0
  42035d:	push   eax
  42035e:	push   esi
  42035f:	mov    eax,ds:0x43e020
  420364:	xor    eax,esp
  420366:	push   eax
  420367:	lea    eax,[esp+0x8]
  42036b:	mov    fs:0x0,eax
  420371:	mov    esi,DWORD PTR [esp+0x18]
  420375:	lea    ecx,[esi+0x4]
  420378:	mov    DWORD PTR [esi],0x0
  42037e:	call   DWORD PTR ds:0x430260
  420384:	mov    ecx,esi
  420386:	mov    DWORD PTR [esp+0x10],0x0
  42038e:	call   0x4203b0
  420393:	mov    eax,esi
  420395:	mov    ecx,DWORD PTR [esp+0x8]
  420399:	mov    DWORD PTR fs:0x0,ecx
  4203a0:	pop    ecx
  4203a1:	pop    esi
  4203a2:	add    esp,0xc
  4203a5:	ret    0x4
  4203a8:	int3   
  4203a9:	int3   
  4203aa:	int3   
  4203ab:	int3   
  4203ac:	int3   
  4203ad:	int3   
  4203ae:	int3   
  4203af:	int3   
  4203b0:	push   0xffffffff
  4203b2:	push   0x42aee6
  4203b7:	mov    eax,fs:0x0
  4203bd:	push   eax
  4203be:	sub    esp,0x50
  4203c1:	mov    eax,ds:0x43e020
  4203c6:	xor    eax,esp
  4203c8:	mov    DWORD PTR [esp+0x4c],eax
  4203cc:	push   esi
  4203cd:	push   edi
  4203ce:	mov    eax,ds:0x43e020
  4203d3:	xor    eax,esp
  4203d5:	push   eax
  4203d6:	lea    eax,[esp+0x5c]
  4203da:	mov    fs:0x0,eax
  4203e0:	mov    esi,ecx
  4203e2:	cmp    DWORD PTR [esi],0x0
  4203e5:	je     0x420481
  4203eb:	lea    ecx,[esp+0x20]
  4203ef:	call   DWORD PTR ds:0x430260
  4203f5:	add    esi,0x4
  4203f8:	push   esi
  4203f9:	lea    eax,[esp+0x40]
  4203fd:	push   0x430cb4
  420402:	push   eax
  420403:	mov    DWORD PTR [esp+0x70],0x0
  42040b:	call   DWORD PTR ds:0x430170
  420411:	add    esp,0xc
  420414:	push   eax
  420415:	lea    ecx,[esp+0x24]
  420419:	mov    BYTE PTR [esp+0x68],0x1
  42041e:	call   DWORD PTR ds:0x430174
  420424:	lea    ecx,[esp+0x3c]
  420428:	mov    BYTE PTR [esp+0x64],0x0
  42042d:	call   DWORD PTR ds:0x43025c
  420433:	push   0x2a
  420435:	push   0x432ce8
  42043a:	push   0x430d24
  42043f:	lea    ecx,[esp+0x18]
  420443:	call   DWORD PTR ds:0x430000
  420449:	mov    BYTE PTR [esp+0x64],0x2
  42044e:	cmp    DWORD PTR [esp+0x38],0x10
  420453:	mov    eax,DWORD PTR [esp+0x24]
  420457:	jae    0x42045d
  420459:	lea    eax,[esp+0x24]
  42045d:	push   0x10000010
  420462:	push   eax
  420463:	lea    ecx,[esp+0x14]
  420467:	push   ecx
  420468:	lea    ecx,[esp+0x20]
  42046c:	call   DWORD PTR ds:0x430008
  420472:	push   0x43581c
  420477:	lea    edx,[esp+0x18]
  42047b:	push   edx
  42047c:	call   0x429e76
  420481:	lea    edi,[esi+0x4]
  420484:	push   0x430980
  420489:	mov    ecx,edi
  42048b:	call   DWORD PTR ds:0x430178
  420491:	push   0x430980
  420496:	call   DWORD PTR ds:0x4303b8
  42049c:	mov    DWORD PTR [esi],eax
  42049e:	test   eax,eax
  4204a0:	jne    0x420539
  4204a6:	lea    ecx,[esp+0x3c]
  4204aa:	call   DWORD PTR ds:0x430260
  4204b0:	push   edi
  4204b1:	lea    eax,[esp+0x24]
  4204b5:	push   0x430d64
  4204ba:	push   eax
  4204bb:	mov    DWORD PTR [esp+0x70],0x3
  4204c3:	call   DWORD PTR ds:0x430170
  4204c9:	add    esp,0xc
  4204cc:	push   eax
  4204cd:	lea    ecx,[esp+0x40]
  4204d1:	mov    BYTE PTR [esp+0x68],0x4
  4204d6:	call   DWORD PTR ds:0x430174
  4204dc:	lea    ecx,[esp+0x20]
  4204e0:	mov    BYTE PTR [esp+0x64],0x3
  4204e5:	call   DWORD PTR ds:0x43025c
  4204eb:	push   0x33
  4204ed:	push   0x432ce8
  4204f2:	push   0x430d24
  4204f7:	lea    ecx,[esp+0x1c]
  4204fb:	call   DWORD PTR ds:0x430000
  420501:	mov    BYTE PTR [esp+0x64],0x5
  420506:	cmp    DWORD PTR [esp+0x54],0x10
  42050b:	mov    eax,DWORD PTR [esp+0x40]
  42050f:	jae    0x420515
  420511:	lea    eax,[esp+0x40]
  420515:	push   0x10000010
  42051a:	push   eax
  42051b:	lea    ecx,[esp+0x18]
  42051f:	push   ecx
  420520:	lea    ecx,[esp+0x20]
  420524:	call   DWORD PTR ds:0x430008
  42052a:	push   0x43581c
  42052f:	lea    edx,[esp+0x18]
  420533:	push   edx
  420534:	call   0x429e76
  420539:	mov    eax,0x1
  42053e:	mov    ecx,DWORD PTR [esp+0x5c]
  420542:	mov    DWORD PTR fs:0x0,ecx
  420549:	pop    ecx
  42054a:	pop    edi
  42054b:	pop    esi
  42054c:	mov    ecx,DWORD PTR [esp+0x4c]
  420550:	xor    ecx,esp
  420552:	call   0x42503a
  420557:	add    esp,0x5c
  42055a:	ret    
  42055b:	int3   
  42055c:	int3   
  42055d:	int3   
  42055e:	int3   
  42055f:	int3   
  420560:	push   esi
  420561:	mov    esi,ecx
  420563:	lea    ecx,[esi+0xc]
  420566:	mov    DWORD PTR [esi],0x430530
  42056c:	call   DWORD PTR ds:0x43025c
  420572:	mov    ecx,esi
  420574:	call   DWORD PTR ds:0x4303a8
  42057a:	test   BYTE PTR [esp+0x8],0x1
  42057f:	je     0x42058a
  420581:	push   esi
  420582:	call   0x42504a
  420587:	add    esp,0x4
  42058a:	mov    eax,esi
  42058c:	pop    esi
  42058d:	ret    0x4
  420590:	push   esi
  420591:	mov    esi,ecx
  420593:	lea    ecx,[esi+0xc]
  420596:	mov    DWORD PTR [esi],0x430530
  42059c:	call   DWORD PTR ds:0x43025c
  4205a2:	mov    ecx,esi
  4205a4:	pop    esi
  4205a5:	jmp    DWORD PTR ds:0x4303a8
  4205ab:	int3   
  4205ac:	int3   
  4205ad:	int3   
  4205ae:	int3   
  4205af:	int3   
  4205b0:	push   0xffffffff
  4205b2:	push   0x42d075
  4205b7:	mov    eax,fs:0x0
  4205bd:	push   eax
  4205be:	sub    esp,0x414
  4205c4:	mov    eax,ds:0x43e020
  4205c9:	xor    eax,esp
  4205cb:	mov    DWORD PTR [esp+0x410],eax
  4205d2:	push   ebx
  4205d3:	push   ebp
  4205d4:	push   esi
  4205d5:	push   edi
  4205d6:	mov    eax,ds:0x43e020
  4205db:	xor    eax,esp
  4205dd:	push   eax
  4205de:	lea    eax,[esp+0x428]
  4205e5:	mov    fs:0x0,eax
  4205eb:	xor    ebp,ebp
  4205ed:	mov    ebx,ecx
  4205ef:	mov    DWORD PTR [esp+0x430],ebp
  4205f6:	push   0x430f38
  4205fb:	lea    ecx,[esp+0x270]
  420602:	mov    DWORD PTR [esp+0x20],ebx
  420606:	mov    edi,edx
  420608:	mov    DWORD PTR [esp+0x40],ebp
  42060c:	call   DWORD PTR ds:0x430268
  420612:	push   0x432d14
  420617:	lea    ecx,[esp+0x21c]
  42061e:	mov    DWORD PTR [esp+0x434],0x1
  420629:	call   DWORD PTR ds:0x430268
  42062f:	push   0x432d20
  420634:	lea    ecx,[esp+0x238]
  42063b:	mov    BYTE PTR [esp+0x434],0x2
  420643:	call   DWORD PTR ds:0x430268
  420649:	push   0x1
  42064b:	sub    esp,0x1c
  42064e:	mov    BYTE PTR [esp+0x450],0x3
  420656:	lea    eax,[esp+0x254]
  42065d:	mov    ecx,esp
  42065f:	mov    DWORD PTR [esp+0x38],esp
  420663:	push   eax
  420664:	call   DWORD PTR ds:0x430118
  42066a:	sub    esp,0x1c
  42066d:	mov    BYTE PTR [esp+0x46c],0x4
  420675:	lea    edx,[esp+0x254]
  42067c:	mov    ecx,esp
  42067e:	mov    DWORD PTR [esp+0x80],esp
  420685:	push   edx
  420686:	call   DWORD PTR ds:0x430118
  42068c:	sub    esp,0x1c
  42068f:	mov    BYTE PTR [esp+0x488],0x5
  420697:	lea    eax,[esp+0x2c4]
  42069e:	mov    ecx,esp
  4206a0:	mov    DWORD PTR [esp+0x98],esp
  4206a7:	push   eax
  4206a8:	call   DWORD PTR ds:0x430118
  4206ae:	lea    esi,[esp+0x424]
  4206b5:	mov    BYTE PTR [esp+0x488],0x3
  4206bd:	call   0x422410
  4206c2:	lea    ecx,[esp+0x30c]
  4206c9:	push   ecx
  4206ca:	mov    ecx,edi
  4206cc:	mov    BYTE PTR [esp+0x434],0x6
  4206d4:	call   DWORD PTR ds:0x430230
  4206da:	lea    edx,[esp+0x314]
  4206e1:	push   edx
  4206e2:	mov    ecx,edi
  4206e4:	call   DWORD PTR ds:0x430244
  4206ea:	lea    eax,[esp+0x31c]
  4206f1:	push   eax
  4206f2:	mov    edi,esi
  4206f4:	call   0x4226b0
  4206f9:	push   ebx
  4206fa:	mov    BYTE PTR [esp+0x434],0x7
  420702:	call   0x420e90
  420707:	lea    ecx,[esp+0x174]
  42070e:	push   ecx
  42070f:	lea    edx,[esp+0x310]
  420716:	push   edx
  420717:	mov    DWORD PTR [esp+0x44],0x1
  42071f:	mov    DWORD PTR [esp+0x20],ebp
  420723:	call   0x4224c0
  420728:	mov    BYTE PTR [esp+0x430],0x8
  420730:	lea    eax,[esp+0xec]
  420737:	push   eax
  420738:	lea    ecx,[esp+0x310]
  42073f:	push   ecx
  420740:	call   0x422580
  420745:	mov    dl,BYTE PTR [esp+0x1dc]
  42074c:	mov    esi,eax
  42074e:	mov    cl,BYTE PTR [esi+0x68]
  420751:	test   cl,cl
  420753:	je     0x4207b2
  420755:	test   dl,dl
  420757:	je     0x4207b2
  420759:	mov    eax,DWORD PTR [esi+0x58]
  42075c:	cmp    eax,0xfffffffc
  42075f:	je     0x420774
  420761:	cmp    eax,ebp
  420763:	je     0x42076e
  420765:	cmp    eax,DWORD PTR [esp+0x1cc]
  42076c:	je     0x420774
  42076e:	call   DWORD PTR ds:0x430390
  420774:	mov    edx,DWORD PTR [esi+0x5c]
  420777:	cmp    edx,DWORD PTR [esp+0x1d0]
  42077e:	jne    0x4207ae
  420780:	mov    eax,DWORD PTR [esi+0x60]
  420783:	cmp    eax,0xfffffffc
  420786:	je     0x42079b
  420788:	cmp    eax,ebp
  42078a:	je     0x420795
  42078c:	cmp    eax,DWORD PTR [esp+0x1d4]
  420793:	je     0x42079b
  420795:	call   DWORD PTR ds:0x430390
  42079b:	mov    eax,DWORD PTR [esi+0x64]
  42079e:	cmp    eax,DWORD PTR [esp+0x1d8]
  4207a5:	jne    0x4207ae
  4207a7:	mov    eax,0x1
  4207ac:	jmp    0x4207b9
  4207ae:	xor    eax,eax
  4207b0:	jmp    0x4207b9
  4207b2:	xor    eax,eax
  4207b4:	cmp    cl,dl
  4207b6:	sete   al
  4207b9:	test   al,al
  4207bb:	sete   bl
  4207be:	lea    ecx,[esp+0x158]
  4207c5:	mov    BYTE PTR [esp+0x430],0x9
  4207cd:	call   DWORD PTR ds:0x430264
  4207d3:	lea    ecx,[esp+0x124]
  4207da:	mov    BYTE PTR [esp+0x430],0xb
  4207e2:	call   DWORD PTR ds:0x430264
  4207e8:	lea    ecx,[esp+0x108]
  4207ef:	mov    BYTE PTR [esp+0x430],0xa
  4207f7:	call   DWORD PTR ds:0x430264
  4207fd:	lea    ecx,[esp+0xec]
  420804:	mov    BYTE PTR [esp+0x430],0x8
  42080c:	call   DWORD PTR ds:0x430264
  420812:	test   bl,bl
  420814:	je     0x420cc6
  42081a:	cmp    DWORD PTR [esp+0x18],ebp
  42081e:	jne    0x420837
  420820:	lea    ecx,[esp+0x1e0]
  420827:	push   ecx
  420828:	mov    ecx,DWORD PTR [esp+0x20]
  42082c:	call   DWORD PTR ds:0x43017c
  420832:	jmp    0x420c8b
  420837:	push   0x430f38
  42083c:	lea    ecx,[esp+0x200]
  420843:	call   DWORD PTR ds:0x430268
  420849:	push   0x432d28
  42084e:	lea    ecx,[esp+0x254]
  420855:	mov    BYTE PTR [esp+0x434],0xc
  42085d:	call   DWORD PTR ds:0x430268
  420863:	push   0x432d20
  420868:	lea    ecx,[esp+0x28c]
  42086f:	mov    BYTE PTR [esp+0x434],0xd
  420877:	call   DWORD PTR ds:0x430268
  42087d:	push   ebp
  42087e:	sub    esp,0x1c
  420881:	mov    BYTE PTR [esp+0x450],0xe
  420889:	lea    edx,[esp+0x2a8]
  420890:	mov    ecx,esp
  420892:	mov    DWORD PTR [esp+0x60],esp
  420896:	push   edx
  420897:	call   DWORD PTR ds:0x430118
  42089d:	sub    esp,0x1c
  4208a0:	mov    BYTE PTR [esp+0x46c],0xf
  4208a8:	lea    eax,[esp+0x28c]
  4208af:	mov    ecx,esp
  4208b1:	mov    DWORD PTR [esp+0x80],esp
  4208b8:	push   eax
  4208b9:	call   DWORD PTR ds:0x430118
  4208bf:	sub    esp,0x1c
  4208c2:	mov    BYTE PTR [esp+0x488],0x10
  4208ca:	lea    edx,[esp+0x254]
  4208d1:	mov    ecx,esp
  4208d3:	mov    DWORD PTR [esp+0x78],esp
  4208d7:	push   edx
  4208d8:	call   DWORD PTR ds:0x430118
  4208de:	lea    esi,[esp+0x3cc]
  4208e5:	mov    BYTE PTR [esp+0x488],0xe
  4208ed:	call   0x422410
  4208f2:	lea    eax,[esp+0x2a4]
  4208f9:	push   eax
  4208fa:	lea    ecx,[esp+0x1e4]
  420901:	mov    BYTE PTR [esp+0x434],0x11
  420909:	call   DWORD PTR ds:0x430230
  42090f:	lea    ecx,[esp+0x2ac]
  420916:	push   ecx
  420917:	lea    ecx,[esp+0x1e4]
  42091e:	call   DWORD PTR ds:0x430244
  420924:	lea    edx,[esp+0x2b4]
  42092b:	push   edx
  42092c:	mov    edi,esi
  42092e:	call   0x4226b0
  420933:	lea    ecx,[esp+0xd0]
  42093a:	mov    BYTE PTR [esp+0x430],0x12
  420942:	call   DWORD PTR ds:0x430254
  420948:	push   0x4
  42094a:	mov    BYTE PTR [esp+0x434],0x13
  420952:	call   0x425050
  420957:	add    esp,0x4
  42095a:	cmp    eax,ebp
  42095c:	je     0x420966
  42095e:	lea    ecx,[esp+0x24]
  420962:	mov    DWORD PTR [eax],ecx
  420964:	jmp    0x420968
  420966:	xor    eax,eax
  420968:	mov    DWORD PTR [esp+0x24],eax
  42096c:	mov    DWORD PTR [esp+0x30],ebp
  420970:	mov    DWORD PTR [esp+0x34],ebp
  420974:	mov    DWORD PTR [esp+0x38],ebp
  420978:	lea    edx,[esp+0xec]
  42097f:	push   edx
  420980:	lea    eax,[esp+0x2a8]
  420987:	push   eax
  420988:	mov    BYTE PTR [esp+0x438],0x15
  420990:	call   0x4224c0
  420995:	mov    BYTE PTR [esp+0x430],0x16
  42099d:	lea    ecx,[ecx+0x0]
  4209a0:	lea    ecx,[esp+0x48]
  4209a4:	push   ecx
  4209a5:	lea    edx,[esp+0x2a8]
  4209ac:	push   edx
  4209ad:	call   0x422580
  4209b2:	mov    dl,BYTE PTR [esp+0x154]
  4209b9:	mov    esi,eax
  4209bb:	mov    cl,BYTE PTR [esi+0x68]
  4209be:	test   cl,cl
  4209c0:	je     0x420a1f
  4209c2:	test   dl,dl
  4209c4:	je     0x420a1f
  4209c6:	mov    eax,DWORD PTR [esi+0x58]
  4209c9:	cmp    eax,0xfffffffc
  4209cc:	je     0x4209e1
  4209ce:	test   eax,eax
  4209d0:	je     0x4209db
  4209d2:	cmp    eax,DWORD PTR [esp+0x144]
  4209d9:	je     0x4209e1
  4209db:	call   DWORD PTR ds:0x430390
  4209e1:	mov    eax,DWORD PTR [esi+0x5c]
  4209e4:	cmp    eax,DWORD PTR [esp+0x148]
  4209eb:	jne    0x420a1b
  4209ed:	mov    eax,DWORD PTR [esi+0x60]
  4209f0:	cmp    eax,0xfffffffc
  4209f3:	je     0x420a08
  4209f5:	test   eax,eax
  4209f7:	je     0x420a02
  4209f9:	cmp    eax,DWORD PTR [esp+0x14c]
  420a00:	je     0x420a08
  420a02:	call   DWORD PTR ds:0x430390
  420a08:	mov    ecx,DWORD PTR [esi+0x64]
  420a0b:	cmp    ecx,DWORD PTR [esp+0x150]
  420a12:	jne    0x420a1b
  420a14:	mov    eax,0x1
  420a19:	jmp    0x420a26
  420a1b:	xor    eax,eax
  420a1d:	jmp    0x420a26
  420a1f:	xor    eax,eax
  420a21:	cmp    cl,dl
  420a23:	sete   al
  420a26:	test   al,al
  420a28:	sete   bl
  420a2b:	lea    ecx,[esp+0xb4]
  420a32:	mov    BYTE PTR [esp+0x430],0x17
  420a3a:	call   DWORD PTR ds:0x430264
  420a40:	lea    ecx,[esp+0x80]
  420a47:	mov    BYTE PTR [esp+0x430],0x19
  420a4f:	call   DWORD PTR ds:0x430264
  420a55:	lea    ecx,[esp+0x64]
  420a59:	mov    BYTE PTR [esp+0x430],0x18
  420a61:	call   DWORD PTR ds:0x430264
  420a67:	lea    ecx,[esp+0x48]
  420a6b:	mov    BYTE PTR [esp+0x430],0x16
  420a73:	call   DWORD PTR ds:0x430264
  420a79:	test   bl,bl
  420a7b:	je     0x420ae1
  420a7d:	test   ebp,ebp
  420a7f:	jne    0x420a98
  420a81:	lea    edx,[esp+0x158]
  420a88:	push   edx
  420a89:	lea    ecx,[esp+0xd4]
  420a90:	call   DWORD PTR ds:0x43017c
  420a96:	jmp    0x420aa9
  420a98:	lea    eax,[esp+0x158]
  420a9f:	push   eax
  420aa0:	lea    ebx,[esp+0x28]
  420aa4:	call   0x4132f0
  420aa9:	mov    ecx,DWORD PTR [esp+0x150]
  420ab0:	mov    edx,DWORD PTR [esp+0x14c]
  420ab7:	push   ecx
  420ab8:	push   edx
  420ab9:	lea    eax,[esp+0x160]
  420ac0:	push   eax
  420ac1:	lea    ecx,[esp+0x150]
  420ac8:	lea    edi,[esp+0xf8]
  420acf:	inc    ebp
  420ad0:	call   0x423c90
  420ad5:	mov    BYTE PTR [esp+0x154],al
  420adc:	jmp    0x4209a0
  420ae1:	lea    ecx,[esp+0x158]
  420ae8:	mov    BYTE PTR [esp+0x430],0x1a
  420af0:	call   DWORD PTR ds:0x430264
  420af6:	lea    ecx,[esp+0x124]
  420afd:	mov    BYTE PTR [esp+0x430],0x1c
  420b05:	call   DWORD PTR ds:0x430264
  420b0b:	lea    ecx,[esp+0x108]
  420b12:	mov    BYTE PTR [esp+0x430],0x1b
  420b1a:	call   DWORD PTR ds:0x430264
  420b20:	lea    ecx,[esp+0xec]
  420b27:	mov    BYTE PTR [esp+0x430],0x15
  420b2f:	call   DWORD PTR ds:0x430264
  420b35:	cmp    DWORD PTR [esp+0xe4],0x0
  420b3d:	je     0x420b5d
  420b3f:	lea    ecx,[esp+0xd0]
  420b46:	push   ecx
  420b47:	mov    ecx,DWORD PTR [esp+0x20]
  420b4b:	add    ecx,0x1c
  420b4e:	call   0x421cc0
  420b53:	push   eax
  420b54:	lea    ebx,[esp+0x28]
  420b58:	call   0x421e80
  420b5d:	mov    BYTE PTR [esp+0x430],0x1d
  420b65:	mov    esi,DWORD PTR [esp+0x30]
  420b69:	test   esi,esi
  420b6b:	je     0x420b91
  420b6d:	mov    edi,DWORD PTR [esp+0x34]
  420b71:	cmp    esi,edi
  420b73:	je     0x420b88
  420b75:	mov    ecx,esi
  420b77:	call   DWORD PTR ds:0x430264
  420b7d:	add    esi,0x1c
  420b80:	cmp    esi,edi
  420b82:	jne    0x420b75
  420b84:	mov    esi,DWORD PTR [esp+0x30]
  420b88:	push   esi
  420b89:	call   0x42504a
  420b8e:	add    esp,0x4
  420b91:	mov    edx,DWORD PTR [esp+0x24]
  420b95:	xor    eax,eax
  420b97:	push   edx
  420b98:	mov    DWORD PTR [esp+0x34],eax
  420b9c:	mov    DWORD PTR [esp+0x38],eax
  420ba0:	mov    DWORD PTR [esp+0x3c],eax
  420ba4:	call   0x42504a
  420ba9:	add    esp,0x4
  420bac:	lea    ecx,[esp+0xd0]
  420bb3:	mov    BYTE PTR [esp+0x430],0x12
  420bbb:	call   DWORD PTR ds:0x430264
  420bc1:	lea    eax,[esp+0x2b4]
  420bc8:	mov    DWORD PTR [esp+0x20],eax
  420bcc:	lea    ecx,[esp+0x2ec]
  420bd3:	mov    BYTE PTR [esp+0x430],0x1f
  420bdb:	call   DWORD PTR ds:0x430264
  420be1:	lea    ecx,[esp+0x2d0]
  420be8:	mov    BYTE PTR [esp+0x430],0x1e
  420bf0:	call   DWORD PTR ds:0x430264
  420bf6:	lea    ecx,[esp+0x2b4]
  420bfd:	mov    BYTE PTR [esp+0x430],0x11
  420c05:	call   DWORD PTR ds:0x430264
  420c0b:	lea    ecx,[esp+0x3ac]
  420c12:	mov    BYTE PTR [esp+0x430],0x21
  420c1a:	call   DWORD PTR ds:0x430264
  420c20:	lea    ecx,[esp+0x390]
  420c27:	mov    BYTE PTR [esp+0x430],0x20
  420c2f:	call   DWORD PTR ds:0x430264
  420c35:	lea    ecx,[esp+0x374]
  420c3c:	mov    BYTE PTR [esp+0x430],0xe
  420c44:	call   DWORD PTR ds:0x430264
  420c4a:	lea    ecx,[esp+0x288]
  420c51:	mov    BYTE PTR [esp+0x430],0xd
  420c59:	call   DWORD PTR ds:0x430264
  420c5f:	lea    ecx,[esp+0x250]
  420c66:	mov    BYTE PTR [esp+0x430],0xc
  420c6e:	call   DWORD PTR ds:0x430264
  420c74:	lea    ecx,[esp+0x1fc]
  420c7b:	mov    BYTE PTR [esp+0x430],0x8
  420c83:	call   DWORD PTR ds:0x430264
  420c89:	xor    ebp,ebp
  420c8b:	mov    ecx,DWORD PTR [esp+0x1d8]
  420c92:	mov    edx,DWORD PTR [esp+0x1d4]
  420c99:	inc    DWORD PTR [esp+0x18]
  420c9d:	push   ecx
  420c9e:	push   edx
  420c9f:	lea    eax,[esp+0x1e8]
  420ca6:	push   eax
  420ca7:	lea    ecx,[esp+0x1d8]
  420cae:	lea    edi,[esp+0x180]
  420cb5:	call   0x423c90
  420cba:	mov    BYTE PTR [esp+0x1dc],al
  420cc1:	jmp    0x420730
  420cc6:	lea    ecx,[esp+0x1e0]
  420ccd:	mov    BYTE PTR [esp+0x430],0x22
  420cd5:	call   DWORD PTR ds:0x430264
  420cdb:	lea    ecx,[esp+0x1ac]
  420ce2:	mov    BYTE PTR [esp+0x430],0x24
  420cea:	call   DWORD PTR ds:0x430264
  420cf0:	lea    ecx,[esp+0x190]
  420cf7:	mov    BYTE PTR [esp+0x430],0x23
  420cff:	call   DWORD PTR ds:0x430264
  420d05:	lea    ecx,[esp+0x174]
  420d0c:	mov    BYTE PTR [esp+0x430],0x7
  420d14:	call   DWORD PTR ds:0x430264
  420d1a:	lea    ecx,[esp+0x31c]
  420d21:	mov    DWORD PTR [esp+0x20],ecx
  420d25:	lea    ecx,[esp+0x354]
  420d2c:	mov    BYTE PTR [esp+0x430],0x26
  420d34:	call   DWORD PTR ds:0x430264
  420d3a:	lea    ecx,[esp+0x338]
  420d41:	mov    BYTE PTR [esp+0x430],0x25
  420d49:	call   DWORD PTR ds:0x430264
  420d4f:	lea    ecx,[esp+0x31c]
  420d56:	mov    BYTE PTR [esp+0x430],0x6
  420d5e:	call   DWORD PTR ds:0x430264
  420d64:	lea    ecx,[esp+0x404]
  420d6b:	mov    BYTE PTR [esp+0x430],0x28
  420d73:	call   DWORD PTR ds:0x430264
  420d79:	lea    ecx,[esp+0x3e8]
  420d80:	mov    BYTE PTR [esp+0x430],0x27
  420d88:	call   DWORD PTR ds:0x430264
  420d8e:	lea    ecx,[esp+0x3cc]
  420d95:	mov    BYTE PTR [esp+0x430],0x3
  420d9d:	call   DWORD PTR ds:0x430264
  420da3:	lea    ecx,[esp+0x234]
  420daa:	mov    BYTE PTR [esp+0x430],0x2
  420db2:	call   DWORD PTR ds:0x430264
  420db8:	lea    ecx,[esp+0x218]
  420dbf:	mov    BYTE PTR [esp+0x430],0x1
  420dc7:	call   DWORD PTR ds:0x430264
  420dcd:	lea    ecx,[esp+0x26c]
  420dd4:	mov    BYTE PTR [esp+0x430],0x0
  420ddc:	call   DWORD PTR ds:0x430264
  420de2:	mov    eax,DWORD PTR [esp+0x1c]
  420de6:	mov    ecx,DWORD PTR [esp+0x428]
  420ded:	mov    DWORD PTR fs:0x0,ecx
  420df4:	pop    ecx
  420df5:	pop    edi
  420df6:	pop    esi
  420df7:	pop    ebp
  420df8:	pop    ebx
  420df9:	mov    ecx,DWORD PTR [esp+0x410]
  420e00:	xor    ecx,esp
  420e02:	call   0x42503a
  420e07:	add    esp,0x420
  420e0d:	ret    
  420e0e:	int3   
  420e0f:	int3   
  420e10:	push   0xffffffff
  420e12:	push   0x42abe5
  420e17:	mov    eax,fs:0x0
  420e1d:	push   eax
  420e1e:	push   esi
  420e1f:	mov    eax,ds:0x43e020
  420e24:	xor    eax,esp
  420e26:	push   eax
  420e27:	lea    eax,[esp+0x8]
  420e2b:	mov    fs:0x0,eax
  420e31:	mov    esi,DWORD PTR [esp+0x18]
  420e35:	lea    ecx,[esi+0x38]
  420e38:	mov    DWORD PTR [esp+0x10],0x1
  420e40:	call   DWORD PTR ds:0x430264
  420e46:	lea    ecx,[esi+0x1c]
  420e49:	mov    BYTE PTR [esp+0x10],0x0
  420e4e:	call   DWORD PTR ds:0x430264
  420e54:	mov    ecx,esi
  420e56:	mov    DWORD PTR [esp+0x10],0xffffffff
  420e5e:	call   DWORD PTR ds:0x430264
  420e64:	mov    ecx,DWORD PTR [esp+0x8]
  420e68:	mov    DWORD PTR fs:0x0,ecx
  420e6f:	pop    ecx
  420e70:	pop    esi
  420e71:	add    esp,0xc
  420e74:	ret    0x4
  420e77:	int3   
  420e78:	int3   
  420e79:	int3   
  420e7a:	int3   
  420e7b:	int3   
  420e7c:	int3   
  420e7d:	int3   
  420e7e:	int3   
  420e7f:	int3   
  420e80:	add    eax,0x10
  420e83:	push   eax
  420e84:	call   0x420e10
  420e89:	ret    
  420e8a:	int3   
  420e8b:	int3   
  420e8c:	int3   
  420e8d:	int3   
  420e8e:	int3   
  420e8f:	int3   
  420e90:	push   0xffffffff
  420e92:	push   0x42ce49
  420e97:	mov    eax,fs:0x0
  420e9d:	push   eax
  420e9e:	push   esi
  420e9f:	mov    eax,ds:0x43e020
  420ea4:	xor    eax,esp
  420ea6:	push   eax
  420ea7:	lea    eax,[esp+0x8]
  420eab:	mov    fs:0x0,eax
  420eb1:	mov    esi,DWORD PTR [esp+0x18]
  420eb5:	mov    ecx,esi
  420eb7:	call   DWORD PTR ds:0x430254
  420ebd:	lea    eax,[esi+0x1c]
  420ec0:	push   eax
  420ec1:	mov    DWORD PTR [esp+0x14],0x0
  420ec9:	call   0x4227b0
  420ece:	mov    eax,esi
  420ed0:	mov    ecx,DWORD PTR [esp+0x8]
  420ed4:	mov    DWORD PTR fs:0x0,ecx
  420edb:	pop    ecx
  420edc:	pop    esi
  420edd:	add    esp,0xc
  420ee0:	ret    0x4
  420ee3:	int3   
  420ee4:	int3   
  420ee5:	int3   
  420ee6:	int3   
  420ee7:	int3   
  420ee8:	int3   
  420ee9:	int3   
  420eea:	int3   
  420eeb:	int3   
  420eec:	int3   
  420eed:	int3   
  420eee:	int3   
  420eef:	int3   
  420ef0:	push   0xffffffff
  420ef2:	push   0x42ce21
  420ef7:	mov    eax,fs:0x0
  420efd:	push   eax
  420efe:	sub    esp,0x8
  420f01:	push   esi
  420f02:	push   edi
  420f03:	mov    eax,ds:0x43e020
  420f08:	xor    eax,esp
  420f0a:	push   eax
  420f0b:	lea    eax,[esp+0x14]
  420f0f:	mov    fs:0x0,eax
  420f15:	mov    edi,DWORD PTR [esp+0x24]
  420f19:	lea    esi,[edi+0x1c]
  420f1c:	mov    DWORD PTR [esp+0x1c],0x0
  420f24:	mov    DWORD PTR [esp+0x10],esi
  420f28:	mov    BYTE PTR [esp+0x1c],0x1
  420f2d:	call   0x422ae0
  420f32:	mov    esi,DWORD PTR [esi]
  420f34:	push   esi
  420f35:	call   0x42504a
  420f3a:	add    esp,0x4
  420f3d:	mov    ecx,edi
  420f3f:	mov    DWORD PTR [esp+0x1c],0xffffffff
  420f47:	call   DWORD PTR ds:0x430264
  420f4d:	mov    ecx,DWORD PTR [esp+0x14]
  420f51:	mov    DWORD PTR fs:0x0,ecx
  420f58:	pop    ecx
  420f59:	pop    edi
  420f5a:	pop    esi
  420f5b:	add    esp,0x14
  420f5e:	ret    0x4
  420f61:	int3   
  420f62:	int3   
  420f63:	int3   
  420f64:	int3   
  420f65:	int3   
  420f66:	int3   
  420f67:	int3   
  420f68:	int3   
  420f69:	int3   
  420f6a:	int3   
  420f6b:	int3   
  420f6c:	int3   
  420f6d:	int3   
  420f6e:	int3   
  420f6f:	int3   
  420f70:	push   0xffffffff
  420f72:	push   0x42b0ea
  420f77:	mov    eax,fs:0x0
  420f7d:	push   eax
  420f7e:	push   esi
  420f7f:	mov    eax,ds:0x43e020
  420f84:	xor    eax,esp
  420f86:	push   eax
  420f87:	lea    eax,[esp+0x8]
  420f8b:	mov    fs:0x0,eax
  420f91:	mov    esi,DWORD PTR [esp+0x18]
  420f95:	lea    ecx,[esi+0x6c]
  420f98:	mov    DWORD PTR [esp+0x10],0x0
  420fa0:	call   DWORD PTR ds:0x430264
  420fa6:	push   esi
  420fa7:	mov    DWORD PTR [esp+0x14],0xffffffff
  420faf:	call   0x420e10
  420fb4:	mov    ecx,DWORD PTR [esp+0x8]
  420fb8:	mov    DWORD PTR fs:0x0,ecx
  420fbf:	pop    ecx
  420fc0:	pop    esi
  420fc1:	add    esp,0xc
  420fc4:	ret    0x4
  420fc7:	int3   
  420fc8:	int3   
  420fc9:	int3   
  420fca:	int3   
  420fcb:	int3   
  420fcc:	int3   
  420fcd:	int3   
  420fce:	int3   
  420fcf:	int3   
  420fd0:	int3   
  420fd1:	int3   
  420fd2:	int3   
  420fd3:	int3   
  420fd4:	int3   
  420fd5:	int3   
  420fd6:	int3   
  420fd7:	int3   
  420fd8:	int3   
  420fd9:	int3   
  420fda:	int3   
  420fdb:	int3   
  420fdc:	int3   
  420fdd:	int3   
  420fde:	int3   
  420fdf:	int3   
  420fe0:	push   0xffffffff
  420fe2:	push   0x42cde9
  420fe7:	mov    eax,fs:0x0
  420fed:	push   eax
  420fee:	push   esi
  420fef:	push   edi
  420ff0:	mov    eax,ds:0x43e020
  420ff5:	xor    eax,esp
  420ff7:	push   eax
  420ff8:	lea    eax,[esp+0xc]
  420ffc:	mov    fs:0x0,eax
  421002:	mov    edi,ecx
  421004:	mov    esi,DWORD PTR [esp+0x1c]
  421008:	push   edi
  421009:	mov    ecx,esi
  42100b:	call   DWORD PTR ds:0x430118
  421011:	add    edi,0x1c
  421014:	push   edi
  421015:	lea    eax,[esi+0x1c]
  421018:	push   eax
  421019:	mov    DWORD PTR [esp+0x1c],0x0
  421021:	call   0x421dd0
  421026:	mov    eax,esi
  421028:	mov    ecx,DWORD PTR [esp+0xc]
  42102c:	mov    DWORD PTR fs:0x0,ecx
  421033:	pop    ecx
  421034:	pop    edi
  421035:	pop    esi
  421036:	add    esp,0xc
  421039:	ret    0x4
  42103c:	int3   
  42103d:	int3   
  42103e:	int3   
  42103f:	int3   
  421040:	push   0xffffffff
  421042:	push   0x42d72c
  421047:	mov    eax,fs:0x0
  42104d:	push   eax
  42104e:	sub    esp,0x120
  421054:	mov    eax,ds:0x43e020
  421059:	xor    eax,esp
  42105b:	mov    DWORD PTR [esp+0x11c],eax
  421062:	push   ebx
  421063:	push   ebp
  421064:	push   esi
  421065:	push   edi
  421066:	mov    eax,ds:0x43e020
  42106b:	xor    eax,esp
  42106d:	push   eax
  42106e:	lea    eax,[esp+0x134]
  421075:	mov    fs:0x0,eax
  42107b:	mov    al,BYTE PTR [esp+0x148]
  421082:	lea    ecx,[esp+0x17]
  421086:	push   ecx
  421087:	lea    ecx,[esp+0x54]
  42108b:	mov    BYTE PTR [esp+0x1b],al
  42108f:	call   DWORD PTR ds:0x43011c
  421095:	push   eax
  421096:	lea    ebx,[esp+0x118]
  42109d:	mov    DWORD PTR [esp+0x140],0x0
  4210a8:	call   0x41efb0
  4210ad:	add    esp,0x4
  4210b0:	lea    ecx,[esp+0x50]
  4210b4:	mov    BYTE PTR [esp+0x13c],0x2
  4210bc:	call   DWORD PTR ds:0x43025c
  4210c2:	lea    edx,[esp+0x14c]
  4210c9:	lea    esi,[esp+0xf8]
  4210d0:	call   0x4075f0
  4210d5:	mov    edi,eax
  4210d7:	lea    edx,[esp+0x144]
  4210de:	lea    esi,[esp+0xdc]
  4210e5:	mov    BYTE PTR [esp+0x13c],0x3
  4210ed:	call   0x4075f0
  4210f2:	mov    esi,eax
  4210f4:	push   0x432d68
  4210f9:	lea    ecx,[esp+0xa8]
  421100:	mov    BYTE PTR [esp+0x140],0x4
  421108:	call   DWORD PTR ds:0x430268
  42110e:	push   esi
  42110f:	push   eax
  421110:	lea    edx,[esp+0x74]
  421114:	mov    BYTE PTR [esp+0x144],0x5
  42111c:	mov    esi,DWORD PTR ds:0x4301a0
  421122:	push   edx
  421123:	call   esi
  421125:	add    esp,0xc
  421128:	push   0x432d4c
  42112d:	push   eax
  42112e:	lea    eax,[esp+0x3c]
  421132:	mov    BYTE PTR [esp+0x144],0x6
  42113a:	mov    ebp,DWORD PTR ds:0x4301a4
  421140:	push   eax
  421141:	call   ebp
  421143:	add    esp,0xc
  421146:	mov    ecx,ebx
  421148:	push   ecx
  421149:	push   eax
  42114a:	lea    edx,[esp+0x20]
  42114e:	push   edx
  42114f:	mov    BYTE PTR [esp+0x148],0x7
  421157:	call   esi
  421159:	add    esp,0xc
  42115c:	push   0x432d30
  421161:	push   eax
  421162:	lea    eax,[esp+0x90]
  421169:	push   eax
  42116a:	mov    BYTE PTR [esp+0x148],0x8
  421172:	call   ebp
  421174:	add    esp,0xc
  421177:	push   edi
  421178:	push   eax
  421179:	lea    ecx,[esp+0xc8]
  421180:	mov    bl,0x9
  421182:	push   ecx
  421183:	mov    BYTE PTR [esp+0x148],bl
  42118a:	call   esi
  42118c:	add    esp,0xc
  42118f:	push   eax
  421190:	mov    BYTE PTR [esp+0x140],0xa
  421198:	call   0x4217c0
  42119d:	mov    BYTE PTR [esp+0x13c],bl
  4211a4:	lea    ecx,[esp+0xc0]
  4211ab:	call   DWORD PTR ds:0x430264
  4211b1:	lea    ecx,[esp+0x88]
  4211b8:	mov    BYTE PTR [esp+0x13c],0x8
  4211c0:	call   DWORD PTR ds:0x430264
  4211c6:	lea    ecx,[esp+0x18]
  4211ca:	mov    BYTE PTR [esp+0x13c],0x7
  4211d2:	call   DWORD PTR ds:0x430264
  4211d8:	lea    ecx,[esp+0x34]
  4211dc:	mov    BYTE PTR [esp+0x13c],0x6
  4211e4:	call   DWORD PTR ds:0x430264
  4211ea:	lea    ecx,[esp+0x6c]
  4211ee:	mov    BYTE PTR [esp+0x13c],0x5
  4211f6:	call   DWORD PTR ds:0x430264
  4211fc:	lea    ecx,[esp+0xa4]
  421203:	mov    BYTE PTR [esp+0x13c],0x4
  42120b:	call   DWORD PTR ds:0x430264
  421211:	lea    ecx,[esp+0xdc]
  421218:	mov    BYTE PTR [esp+0x13c],0x3
  421220:	call   DWORD PTR ds:0x430264
  421226:	lea    ecx,[esp+0xf8]
  42122d:	mov    BYTE PTR [esp+0x13c],0x2
  421235:	call   DWORD PTR ds:0x430264
  42123b:	lea    ecx,[esp+0x114]
  421242:	mov    DWORD PTR [esp+0x13c],0xffffffff
  42124d:	call   DWORD PTR ds:0x430264
  421253:	mov    ecx,DWORD PTR [esp+0x134]
  42125a:	mov    DWORD PTR fs:0x0,ecx
  421261:	pop    ecx
  421262:	pop    edi
  421263:	pop    esi
  421264:	pop    ebp
  421265:	pop    ebx
  421266:	mov    ecx,DWORD PTR [esp+0x11c]
  42126d:	xor    ecx,esp
  42126f:	call   0x42503a
  421274:	add    esp,0x12c
  42127a:	ret    0xc
  42127d:	int3   
  42127e:	int3   
  42127f:	int3   
  421280:	push   0xffffffff
  421282:	push   0x42d69c
  421287:	mov    eax,fs:0x0
  42128d:	push   eax
  42128e:	sub    esp,0xa8
  421294:	push   esi
  421295:	push   edi
  421296:	mov    eax,ds:0x43e020
  42129b:	xor    eax,esp
  42129d:	push   eax
  42129e:	lea    eax,[esp+0xb4]
  4212a5:	mov    fs:0x0,eax
  4212ab:	lea    edx,[esp+0xc4]
  4212b2:	lea    esi,[esp+0x98]
  4212b9:	call   0x4075f0
  4212be:	mov    edi,eax
  4212c0:	mov    edx,0x4400a0
  4212c5:	lea    esi,[esp+0x60]
  4212c9:	mov    DWORD PTR [esp+0xbc],0x0
  4212d4:	call   0x4075f0
  4212d9:	mov    esi,eax
  4212db:	push   0x432db8
  4212e0:	lea    ecx,[esp+0x2c]
  4212e4:	mov    BYTE PTR [esp+0xc0],0x1
  4212ec:	call   DWORD PTR ds:0x430268
  4212f2:	push   esi
  4212f3:	push   eax
  4212f4:	lea    eax,[esp+0x14]
  4212f8:	mov    BYTE PTR [esp+0xc4],0x2
  421300:	mov    esi,DWORD PTR ds:0x4301a0
  421306:	push   eax
  421307:	call   esi
  421309:	add    esp,0xc
  42130c:	push   0x432d9c
  421311:	push   eax
  421312:	lea    ecx,[esp+0x4c]
  421316:	push   ecx
  421317:	mov    BYTE PTR [esp+0xc8],0x3
  42131f:	call   DWORD PTR ds:0x4301a4
  421325:	add    esp,0xc
  421328:	push   edi
  421329:	push   eax
  42132a:	lea    edx,[esp+0x84]
  421331:	push   edx
  421332:	mov    BYTE PTR [esp+0xc8],0x4
  42133a:	call   esi
  42133c:	add    esp,0xc
  42133f:	push   eax
  421340:	mov    BYTE PTR [esp+0xc0],0x5
  421348:	call   0x4217c0
  42134d:	lea    ecx,[esp+0x7c]
  421351:	mov    BYTE PTR [esp+0xbc],0x4
  421359:	call   DWORD PTR ds:0x430264
  42135f:	lea    ecx,[esp+0x44]
  421363:	mov    BYTE PTR [esp+0xbc],0x3
  42136b:	call   DWORD PTR ds:0x430264
  421371:	lea    ecx,[esp+0xc]
  421375:	mov    BYTE PTR [esp+0xbc],0x2
  42137d:	call   DWORD PTR ds:0x430264
  421383:	lea    ecx,[esp+0x28]
  421387:	mov    BYTE PTR [esp+0xbc],0x1
  42138f:	call   DWORD PTR ds:0x430264
  421395:	lea    ecx,[esp+0x60]
  421399:	mov    BYTE PTR [esp+0xbc],0x0
  4213a1:	call   DWORD PTR ds:0x430264
  4213a7:	lea    ecx,[esp+0x98]
  4213ae:	mov    DWORD PTR [esp+0xbc],0xffffffff
  4213b9:	call   DWORD PTR ds:0x430264
  4213bf:	mov    ecx,DWORD PTR [esp+0xb4]
  4213c6:	mov    DWORD PTR fs:0x0,ecx
  4213cd:	pop    ecx
  4213ce:	pop    edi
  4213cf:	pop    esi
  4213d0:	add    esp,0xb4
  4213d6:	ret    0x4
  4213d9:	int3   
  4213da:	int3   
  4213db:	int3   
  4213dc:	int3   
  4213dd:	int3   
  4213de:	int3   
  4213df:	int3   
  4213e0:	push   0xffffffff
  4213e2:	push   0x42d69c
  4213e7:	mov    eax,fs:0x0
  4213ed:	push   eax
  4213ee:	sub    esp,0xa8
  4213f4:	push   esi
  4213f5:	push   edi
  4213f6:	mov    eax,ds:0x43e020
  4213fb:	xor    eax,esp
  4213fd:	push   eax
  4213fe:	lea    eax,[esp+0xb4]
  421405:	mov    fs:0x0,eax
  42140b:	lea    edx,[esp+0xc4]
  421412:	lea    esi,[esp+0x98]
  421419:	call   0x4075f0
  42141e:	mov    edi,eax
  421420:	mov    edx,0x4400a0
  421425:	lea    esi,[esp+0x60]
  421429:	mov    DWORD PTR [esp+0xbc],0x0
  421434:	call   0x4075f0
  421439:	mov    esi,eax
  42143b:	push   0x432df8
  421440:	lea    ecx,[esp+0x2c]
  421444:	mov    BYTE PTR [esp+0xc0],0x1
  42144c:	call   DWORD PTR ds:0x430268
  421452:	push   esi
  421453:	push   eax
  421454:	lea    eax,[esp+0x14]
  421458:	mov    BYTE PTR [esp+0xc4],0x2
  421460:	mov    esi,DWORD PTR ds:0x4301a0
  421466:	push   eax
  421467:	call   esi
  421469:	add    esp,0xc
  42146c:	push   0x432d9c
  421471:	push   eax
  421472:	lea    ecx,[esp+0x4c]
  421476:	push   ecx
  421477:	mov    BYTE PTR [esp+0xc8],0x3
  42147f:	call   DWORD PTR ds:0x4301a4
  421485:	add    esp,0xc
  421488:	push   edi
  421489:	push   eax
  42148a:	lea    edx,[esp+0x84]
  421491:	push   edx
  421492:	mov    BYTE PTR [esp+0xc8],0x4
  42149a:	call   esi
  42149c:	add    esp,0xc
  42149f:	push   eax
  4214a0:	mov    BYTE PTR [esp+0xc0],0x5
  4214a8:	call   0x4217c0
  4214ad:	lea    ecx,[esp+0x7c]
  4214b1:	mov    BYTE PTR [esp+0xbc],0x4
  4214b9:	call   DWORD PTR ds:0x430264
  4214bf:	lea    ecx,[esp+0x44]
  4214c3:	mov    BYTE PTR [esp+0xbc],0x3
  4214cb:	call   DWORD PTR ds:0x430264
  4214d1:	lea    ecx,[esp+0xc]
  4214d5:	mov    BYTE PTR [esp+0xbc],0x2
  4214dd:	call   DWORD PTR ds:0x430264
  4214e3:	lea    ecx,[esp+0x28]
  4214e7:	mov    BYTE PTR [esp+0xbc],0x1
  4214ef:	call   DWORD PTR ds:0x430264
  4214f5:	lea    ecx,[esp+0x60]
  4214f9:	mov    BYTE PTR [esp+0xbc],0x0
  421501:	call   DWORD PTR ds:0x430264
  421507:	lea    ecx,[esp+0x98]
  42150e:	mov    DWORD PTR [esp+0xbc],0xffffffff
  421519:	call   DWORD PTR ds:0x430264
  42151f:	mov    ecx,DWORD PTR [esp+0xb4]
  421526:	mov    DWORD PTR fs:0x0,ecx
  42152d:	pop    ecx
  42152e:	pop    edi
  42152f:	pop    esi
  421530:	add    esp,0xb4
  421536:	ret    0x4
  421539:	int3   
  42153a:	int3   
  42153b:	int3   
  42153c:	int3   
  42153d:	int3   
  42153e:	int3   
  42153f:	int3   
  421540:	push   0xffffffff
  421542:	push   0x42d63b
  421547:	mov    eax,fs:0x0
  42154d:	push   eax
  42154e:	sub    esp,0x58
  421551:	push   esi
  421552:	mov    eax,ds:0x43e020
  421557:	xor    eax,esp
  421559:	push   eax
  42155a:	lea    eax,[esp+0x60]
  42155e:	mov    fs:0x0,eax
  421564:	mov    edx,0x4400a0
  421569:	lea    esi,[esp+0x44]
  42156d:	call   0x4075f0
  421572:	mov    esi,eax
  421574:	push   0x432e38
  421579:	lea    ecx,[esp+0x2c]
  42157d:	mov    DWORD PTR [esp+0x6c],0x0
  421585:	call   DWORD PTR ds:0x430268
  42158b:	push   esi
  42158c:	push   eax
  42158d:	lea    eax,[esp+0x14]
  421591:	push   eax
  421592:	mov    BYTE PTR [esp+0x74],0x1
  421597:	call   DWORD PTR ds:0x4301a0
  42159d:	add    esp,0xc
  4215a0:	push   eax
  4215a1:	mov    BYTE PTR [esp+0x6c],0x2
  4215a6:	call   0x4217c0
  4215ab:	lea    ecx,[esp+0xc]
  4215af:	mov    BYTE PTR [esp+0x68],0x1
  4215b4:	call   DWORD PTR ds:0x430264
  4215ba:	lea    ecx,[esp+0x28]
  4215be:	mov    BYTE PTR [esp+0x68],0x0
  4215c3:	call   DWORD PTR ds:0x430264
  4215c9:	lea    ecx,[esp+0x44]
  4215cd:	mov    DWORD PTR [esp+0x68],0xffffffff
  4215d5:	call   DWORD PTR ds:0x430264
  4215db:	mov    ecx,DWORD PTR [esp+0x60]
  4215df:	mov    DWORD PTR fs:0x0,ecx
  4215e6:	pop    ecx
  4215e7:	pop    esi
  4215e8:	add    esp,0x64
  4215eb:	ret    
  4215ec:	int3   
  4215ed:	int3   
  4215ee:	int3   
  4215ef:	int3   
  4215f0:	push   0xffffffff
  4215f2:	push   0x42d69c
  4215f7:	mov    eax,fs:0x0
  4215fd:	push   eax
  4215fe:	sub    esp,0xa8
  421604:	push   esi
  421605:	push   edi
  421606:	mov    eax,ds:0x43e020
  42160b:	xor    eax,esp
  42160d:	push   eax
  42160e:	lea    eax,[esp+0xb4]
  421615:	mov    fs:0x0,eax
  42161b:	lea    edx,[esp+0xc4]
  421622:	lea    esi,[esp+0x98]
  421629:	call   0x4075f0
  42162e:	mov    edi,eax
  421630:	mov    edx,0x4400a0
  421635:	lea    esi,[esp+0x60]
  421639:	mov    DWORD PTR [esp+0xbc],0x0
  421644:	call   0x4075f0
  421649:	mov    esi,eax
  42164b:	push   0x432e90
  421650:	lea    ecx,[esp+0x2c]
  421654:	mov    BYTE PTR [esp+0xc0],0x1
  42165c:	call   DWORD PTR ds:0x430268
  421662:	push   esi
  421663:	push   eax
  421664:	lea    eax,[esp+0x14]
  421668:	mov    BYTE PTR [esp+0xc4],0x2
  421670:	mov    esi,DWORD PTR ds:0x4301a0
  421676:	push   eax
  421677:	call   esi
  421679:	add    esp,0xc
  42167c:	push   0x432e74
  421681:	push   eax
  421682:	lea    ecx,[esp+0x4c]
  421686:	push   ecx
  421687:	mov    BYTE PTR [esp+0xc8],0x3
  42168f:	call   DWORD PTR ds:0x4301a4
  421695:	add    esp,0xc
  421698:	push   edi
  421699:	push   eax
  42169a:	lea    edx,[esp+0x84]
  4216a1:	push   edx
  4216a2:	mov    BYTE PTR [esp+0xc8],0x4
  4216aa:	call   esi
  4216ac:	add    esp,0xc
  4216af:	push   eax
  4216b0:	mov    BYTE PTR [esp+0xc0],0x5
  4216b8:	call   0x4217c0
  4216bd:	lea    ecx,[esp+0x7c]
  4216c1:	mov    BYTE PTR [esp+0xbc],0x4
  4216c9:	call   DWORD PTR ds:0x430264
  4216cf:	lea    ecx,[esp+0x44]
  4216d3:	mov    BYTE PTR [esp+0xbc],0x3
  4216db:	call   DWORD PTR ds:0x430264
  4216e1:	lea    ecx,[esp+0xc]
  4216e5:	mov    BYTE PTR [esp+0xbc],0x2
  4216ed:	call   DWORD PTR ds:0x430264
  4216f3:	lea    ecx,[esp+0x28]
  4216f7:	mov    BYTE PTR [esp+0xbc],0x1
  4216ff:	call   DWORD PTR ds:0x430264
  421705:	lea    ecx,[esp+0x60]
  421709:	mov    BYTE PTR [esp+0xbc],0x0
  421711:	call   DWORD PTR ds:0x430264
  421717:	lea    ecx,[esp+0x98]
  42171e:	mov    DWORD PTR [esp+0xbc],0xffffffff
  421729:	call   DWORD PTR ds:0x430264
  42172f:	mov    ecx,DWORD PTR [esp+0xb4]
  421736:	mov    DWORD PTR fs:0x0,ecx
  42173d:	pop    ecx
  42173e:	pop    edi
  42173f:	pop    esi
  421740:	add    esp,0xb4
  421746:	ret    0x4
  421749:	int3   
  42174a:	int3   
  42174b:	int3   
  42174c:	int3   
  42174d:	int3   
  42174e:	int3   
  42174f:	int3   
  421750:	push   0xffffffff
  421752:	push   0x42abb5
  421757:	mov    eax,fs:0x0
  42175d:	push   eax
  42175e:	push   esi
  42175f:	mov    eax,ds:0x43e020
  421764:	xor    eax,esp
  421766:	push   eax
  421767:	lea    eax,[esp+0x8]
  42176b:	mov    fs:0x0,eax
  421771:	xor    esi,esi
  421773:	mov    ecx,0x440064
  421778:	mov    DWORD PTR ds:0x440060,esi
  42177e:	call   DWORD PTR ds:0x430260
  421784:	mov    DWORD PTR [esp+0x10],esi
  421788:	mov    ecx,0x440084
  42178d:	mov    DWORD PTR ds:0x440080,esi
  421793:	call   DWORD PTR ds:0x430260
  421799:	mov    DWORD PTR ds:0x4400a0,esi
  42179f:	mov    eax,0x440060
  4217a4:	mov    ecx,DWORD PTR [esp+0x8]
  4217a8:	mov    DWORD PTR fs:0x0,ecx
  4217af:	pop    ecx
  4217b0:	pop    esi
  4217b1:	add    esp,0xc
  4217b4:	ret    
  4217b5:	int3   
  4217b6:	int3   
  4217b7:	int3   
  4217b8:	int3   
  4217b9:	int3   
  4217ba:	int3   
  4217bb:	int3   
  4217bc:	int3   
  4217bd:	int3   
  4217be:	int3   
  4217bf:	int3   
  4217c0:	push   0xffffffff
  4217c2:	push   0x42b0a8
  4217c7:	mov    eax,fs:0x0
  4217cd:	push   eax
  4217ce:	sub    esp,0x240
  4217d4:	mov    eax,ds:0x43e020
  4217d9:	xor    eax,esp
  4217db:	mov    DWORD PTR [esp+0x23c],eax
  4217e2:	push   ebx
  4217e3:	push   ebp
  4217e4:	push   esi
  4217e5:	push   edi
  4217e6:	mov    eax,ds:0x43e020
  4217eb:	xor    eax,esp
  4217ed:	push   eax
  4217ee:	lea    eax,[esp+0x254]
  4217f5:	mov    fs:0x0,eax
  4217fb:	mov    ecx,DWORD PTR ds:0x440060
  421801:	mov    eax,DWORD PTR [esp+0x264]
  421808:	mov    DWORD PTR [esp+0x14],eax
  42180c:	test   ecx,ecx
  42180e:	je     0x4218ff
  421814:	mov    edx,DWORD PTR [ecx]
  421816:	mov    eax,DWORD PTR [edx+0x4]
  421819:	call   eax
  42181b:	mov    edi,eax
  42181d:	xor    esi,esi
  42181f:	test   edi,edi
  421821:	jle    0x4218ff
  421827:	mov    ebp,DWORD PTR ds:0x430120
  42182d:	xor    ecx,ecx
  42182f:	push   0x1fc
  421834:	push   ecx
  421835:	lea    edx,[esp+0x5a]
  421839:	push   edx
  42183a:	mov    WORD PTR [esp+0x5c],cx
  42183f:	call   0x429f9c
  421844:	mov    ecx,DWORD PTR ds:0x440060
  42184a:	mov    eax,DWORD PTR [ecx]
  42184c:	mov    eax,DWORD PTR [eax+0xc]
  42184f:	add    esp,0xc
  421852:	push   0xff
  421857:	lea    edx,[esp+0x54]
  42185b:	push   edx
  42185c:	push   esi
  42185d:	call   eax
  42185f:	test   al,al
  421861:	je     0x421929
  421867:	lea    ecx,[esp+0x50]
  42186b:	push   ecx
  42186c:	lea    ecx,[esp+0x1c]
  421870:	call   DWORD PTR ds:0x430268
  421876:	push   0x432ec4
  42187b:	push   eax
  42187c:	mov    DWORD PTR [esp+0x264],0x0
  421887:	call   ebp
  421889:	add    esp,0x8
  42188c:	lea    ecx,[esp+0x18]
  421890:	mov    bl,al
  421892:	mov    DWORD PTR [esp+0x25c],0xffffffff
  42189d:	call   DWORD PTR ds:0x430264
  4218a3:	test   bl,bl
  4218a5:	je     0x421939
  4218ab:	lea    ecx,[esp+0x34]
  4218af:	push   ecx
  4218b0:	mov    ecx,DWORD PTR [esp+0x18]
  4218b4:	call   0x41ef40
  4218b9:	add    esp,0x4
  4218bc:	mov    DWORD PTR [esp+0x25c],0x1
  4218c7:	cmp    DWORD PTR [esp+0x4c],0x10
  4218cc:	mov    ecx,DWORD PTR ds:0x440060
  4218d2:	mov    eax,DWORD PTR [esp+0x38]
  4218d6:	jae    0x4218dc
  4218d8:	lea    eax,[esp+0x38]
  4218dc:	mov    edi,DWORD PTR [esp+0x48]
  4218e0:	mov    edx,DWORD PTR [ecx]
  4218e2:	push   edi
  4218e3:	push   eax
  4218e4:	mov    eax,DWORD PTR [edx+0x8]
  4218e7:	push   esi
  4218e8:	call   eax
  4218ea:	lea    ecx,[esp+0x34]
  4218ee:	mov    DWORD PTR [esp+0x25c],0xffffffff
  4218f9:	call   DWORD PTR ds:0x43025c
  4218ff:	mov    ecx,DWORD PTR [esp+0x254]
  421906:	mov    DWORD PTR fs:0x0,ecx
  42190d:	pop    ecx
  42190e:	pop    edi
  42190f:	pop    esi
  421910:	pop    ebp
  421911:	pop    ebx
  421912:	mov    ecx,DWORD PTR [esp+0x23c]
  421919:	xor    ecx,esp
  42191b:	call   0x42503a
  421920:	add    esp,0x24c
  421926:	ret    0x4
  421929:	mov    ecx,DWORD PTR ds:0x440060
  42192f:	mov    edx,DWORD PTR [ecx]
  421931:	mov    eax,DWORD PTR [edx+0x4]
  421934:	call   eax
  421936:	mov    edi,eax
  421938:	dec    esi
  421939:	inc    esi
  42193a:	cmp    esi,edi
  42193c:	jl     0x42182d
  421942:	jmp    0x4218ff
  421944:	int3   
  421945:	int3   
  421946:	int3   
  421947:	int3   
  421948:	int3   
  421949:	int3   
  42194a:	int3   
  42194b:	int3   
  42194c:	int3   
  42194d:	int3   
  42194e:	int3   
  42194f:	int3   
  421950:	push   0xffffffff
  421952:	push   0x42c2b8
  421957:	mov    eax,fs:0x0
  42195d:	push   eax
  42195e:	sub    esp,0x28
  421961:	push   esi
  421962:	mov    eax,ds:0x43e020
  421967:	xor    eax,esp
  421969:	push   eax
  42196a:	lea    eax,[esp+0x30]
  42196e:	mov    fs:0x0,eax
  421974:	call   0x4220a0
  421979:	mov    ecx,DWORD PTR ds:0x440060
  42197f:	mov    eax,DWORD PTR [ecx]
  421981:	mov    edx,DWORD PTR [eax+0x1c]
  421984:	push   0x432ee8
  421989:	call   edx
  42198b:	mov    ecx,0x440080
  421990:	call   0x422260
  421995:	mov    ecx,DWORD PTR ds:0x440080
  42199b:	mov    eax,DWORD PTR [ecx]
  42199d:	mov    edx,DWORD PTR [eax+0x4]
  4219a0:	push   0x432f38
  4219a5:	call   edx
  4219a7:	mov    ecx,0x440060
  4219ac:	mov    eax,0x421a50
  4219b1:	push   ecx
  4219b2:	push   eax
  4219b3:	lea    esi,[esp+0x14]
  4219b7:	call   0x4242a0
  4219bc:	mov    DWORD PTR [esp+0x38],0x0
  4219c4:	mov    ecx,DWORD PTR ds:0x440080
  4219ca:	mov    eax,DWORD PTR [ecx]
  4219cc:	mov    eax,DWORD PTR [eax+0x8]
  4219cf:	mov    edx,esi
  4219d1:	push   edx
  4219d2:	call   eax
  4219d4:	mov    DWORD PTR [esp+0x38],0xffffffff
  4219dc:	mov    eax,DWORD PTR [esp+0xc]
  4219e0:	test   eax,eax
  4219e2:	je     0x421a00
  4219e4:	test   al,0x1
  4219e6:	jne    0x421a00
  4219e8:	and    eax,0xfffffffe
  4219eb:	mov    eax,DWORD PTR [eax]
  4219ed:	test   eax,eax
  4219ef:	je     0x421a00
  4219f1:	lea    ecx,[esp+0x14]
  4219f5:	push   0x2
  4219f7:	push   ecx
  4219f8:	mov    edx,ecx
  4219fa:	push   edx
  4219fb:	call   eax
  4219fd:	add    esp,0xc
  421a00:	mov    ecx,DWORD PTR [esp+0x30]
  421a04:	mov    DWORD PTR fs:0x0,ecx
  421a0b:	pop    ecx
  421a0c:	pop    esi
  421a0d:	add    esp,0x34
  421a10:	ret    
  421a11:	int3   
  421a12:	int3   
  421a13:	int3   
  421a14:	int3   
  421a15:	int3   
  421a16:	int3   
  421a17:	int3   
  421a18:	int3   
  421a19:	int3   
  421a1a:	int3   
  421a1b:	int3   
  421a1c:	int3   
  421a1d:	int3   
  421a1e:	int3   
  421a1f:	int3   
  421a20:	mov    eax,DWORD PTR [esi]
  421a22:	test   eax,eax
  421a24:	je     0x421a45
  421a26:	test   al,0x1
  421a28:	jne    0x421a3f
  421a2a:	and    eax,0xfffffffe
  421a2d:	mov    eax,DWORD PTR [eax]
  421a2f:	lea    ecx,[esi+0x8]
  421a32:	test   eax,eax
  421a34:	je     0x421a3f
  421a36:	push   0x2
  421a38:	push   ecx
  421a39:	push   ecx
  421a3a:	call   eax
  421a3c:	add    esp,0xc
  421a3f:	mov    DWORD PTR [esi],0x0
  421a45:	ret    
  421a46:	int3   
  421a47:	int3   
  421a48:	int3   
  421a49:	int3   
  421a4a:	int3   
  421a4b:	int3   
  421a4c:	int3   
  421a4d:	int3   
  421a4e:	int3   
  421a4f:	int3   
  421a50:	push   ebp
  421a51:	mov    ebp,esp
  421a53:	and    esp,0xfffffff8
  421a56:	push   0xffffffff
  421a58:	push   0x42e622
  421a5d:	mov    eax,fs:0x0
  421a63:	push   eax
  421a64:	sub    esp,0xc0
  421a6a:	mov    eax,ds:0x43e020
  421a6f:	xor    eax,esp
  421a71:	mov    DWORD PTR [esp+0xb8],eax
  421a78:	push   ebx
  421a79:	push   esi
  421a7a:	push   edi
  421a7b:	mov    eax,ds:0x43e020
  421a80:	xor    eax,esp
  421a82:	push   eax
  421a83:	lea    eax,[esp+0xd0]
  421a8a:	mov    fs:0x0,eax
  421a90:	mov    esi,DWORD PTR [ebp+0x8]
  421a93:	mov    ebx,DWORD PTR [ebp+0xc]
  421a96:	push   0x0
  421a98:	mov    edi,ecx
  421a9a:	push   0x0
  421a9c:	lea    ecx,[esp+0x78]
  421aa0:	call   DWORD PTR ds:0x4301c8
  421aa6:	mov    eax,DWORD PTR [esp+0x10]
  421aaa:	push   eax
  421aab:	lea    ecx,[esi+ebx*1]
  421aae:	push   ecx
  421aaf:	push   esi
  421ab0:	lea    ecx,[esp+0x7c]
  421ab4:	call   0x424300
  421ab9:	lea    edx,[esp+0x70]
  421abd:	push   edx
  421abe:	lea    ebx,[esp+0x3c]
  421ac2:	mov    DWORD PTR [esp+0xdc],0x0
  421acd:	call   0x41efb0
  421ad2:	add    esp,0x4
  421ad5:	push   0x432f54
  421ada:	lea    ecx,[esp+0x58]
  421ade:	mov    BYTE PTR [esp+0xdc],0x1
  421ae6:	call   DWORD PTR ds:0x430268
  421aec:	mov    BYTE PTR [esp+0xd8],0x2
  421af4:	mov    eax,DWORD PTR [esp+0x68]
  421af8:	push   eax
  421af9:	push   0x0
  421afb:	lea    ecx,[esp+0x1c]
  421aff:	push   ecx
  421b00:	mov    ecx,ebx
  421b02:	call   DWORD PTR ds:0x430218
  421b08:	lea    edx,[esp+0x54]
  421b0c:	push   edx
  421b0d:	push   eax
  421b0e:	mov    BYTE PTR [esp+0xe0],0x3
  421b16:	call   DWORD PTR ds:0x4301f8
  421b1c:	add    esp,0x8
  421b1f:	lea    ecx,[esp+0x14]
  421b23:	mov    bl,al
  421b25:	mov    BYTE PTR [esp+0xd8],0x2
  421b2d:	call   DWORD PTR ds:0x430264
  421b33:	test   bl,bl
  421b35:	je     0x421b49
  421b37:	lea    eax,[esp+0x54]
  421b3b:	push   eax
  421b3c:	lea    ecx,[esp+0x3c]
  421b40:	push   ecx
  421b41:	call   0x423a30
  421b46:	add    esp,0x8
  421b49:	lea    edx,[esp+0x38]
  421b4d:	lea    ecx,[esp+0x8c]
  421b54:	call   0x4205b0
  421b59:	sub    esp,0x44
  421b5c:	mov    bl,0x4
  421b5e:	mov    BYTE PTR [esp+0x11c],bl
  421b65:	mov    DWORD PTR [esp+0x54],esp
  421b69:	mov    esi,esp
  421b6b:	sub    esp,0x3c
  421b6e:	mov    edx,esp
  421b70:	mov    DWORD PTR [esp+0x90],esp
  421b77:	push   edx
  421b78:	lea    ecx,[esp+0x110]
  421b7f:	call   0x420fe0
  421b84:	push   edi
  421b85:	call   0x423aa0
  421b8a:	add    esp,0x40
  421b8d:	lea    esi,[esp+0x58]
  421b91:	call   0x423b60
  421b96:	mov    eax,esi
  421b98:	push   eax
  421b99:	mov    BYTE PTR [esp+0xdc],0x5
  421ba1:	call   0x403400
  421ba6:	mov    BYTE PTR [esp+0xd8],bl
  421bad:	mov    eax,DWORD PTR [esp+0x14]
  421bb1:	test   eax,eax
  421bb3:	je     0x421bd9
  421bb5:	test   al,0x1
  421bb7:	jne    0x421bd1
  421bb9:	and    eax,0xfffffffe
  421bbc:	mov    eax,DWORD PTR [eax]
  421bbe:	test   eax,eax
  421bc0:	je     0x421bd1
  421bc2:	lea    ecx,[esp+0x1c]
  421bc6:	push   0x2
  421bc8:	push   ecx
  421bc9:	mov    edx,ecx
  421bcb:	push   edx
  421bcc:	call   eax
  421bce:	add    esp,0xc
  421bd1:	mov    DWORD PTR [esp+0x14],0x0
  421bd9:	lea    eax,[esp+0x8c]
  421be0:	push   eax
  421be1:	mov    BYTE PTR [esp+0xdc],0x2
  421be9:	call   0x420ef0
  421bee:	lea    ecx,[esp+0x54]
  421bf2:	mov    BYTE PTR [esp+0xd8],0x1
  421bfa:	call   DWORD PTR ds:0x430264
  421c00:	lea    ecx,[esp+0x38]
  421c04:	mov    BYTE PTR [esp+0xd8],0x0
  421c0c:	call   DWORD PTR ds:0x430264
  421c12:	lea    ecx,[esp+0x70]
  421c16:	mov    DWORD PTR [esp+0xd8],0xffffffff
  421c21:	call   DWORD PTR ds:0x43025c
  421c27:	mov    ecx,DWORD PTR [esp+0xd0]
  421c2e:	mov    DWORD PTR fs:0x0,ecx
  421c35:	pop    ecx
  421c36:	pop    edi
  421c37:	pop    esi
  421c38:	pop    ebx
  421c39:	mov    ecx,DWORD PTR [esp+0xb8]
  421c40:	xor    ecx,esp
  421c42:	call   0x42503a
  421c47:	mov    esp,ebp
  421c49:	pop    ebp
  421c4a:	ret    0x8
  421c4d:	int3   
  421c4e:	int3   
  421c4f:	int3   
  421c50:	push   ecx
  421c51:	add    eax,0x8
  421c54:	push   eax
  421c55:	call   0x420ef0
  421c5a:	pop    ecx
  421c5b:	ret    
  421c5c:	int3   
  421c5d:	int3   
  421c5e:	int3   
  421c5f:	int3   
  421c60:	push   ecx
  421c61:	add    eax,0x4
  421c64:	push   eax
  421c65:	call   0x420ef0
  421c6a:	pop    ecx
  421c6b:	ret    
  421c6c:	int3   
  421c6d:	int3   
  421c6e:	int3   
  421c6f:	int3   
  421c70:	push   ecx
  421c71:	push   eax
  421c72:	call   0x420ef0
  421c77:	pop    ecx
  421c78:	ret    
  421c79:	int3   
  421c7a:	int3   
  421c7b:	int3   
  421c7c:	int3   
  421c7d:	int3   
  421c7e:	int3   
  421c7f:	int3   
  421c80:	mov    eax,DWORD PTR [esp+0x4]
  421c84:	push   0x432f64
  421c89:	push   eax
  421c8a:	call   DWORD PTR ds:0x430120
  421c90:	add    esp,0x8
  421c93:	test   al,al
  421c95:	je     0x421cb7
  421c97:	mov    eax,ds:0x4400a4
  421c9c:	test   eax,eax
  421c9e:	je     0x421cb7
  421ca0:	mov    ecx,DWORD PTR [eax+0x4]
  421ca3:	mov    edx,DWORD PTR [ecx]
  421ca5:	mov    eax,DWORD PTR [edx+0x18]
  421ca8:	call   eax
  421caa:	push   0x0
  421cac:	push   0x0
  421cae:	push   0x10
  421cb0:	push   eax
  421cb1:	call   DWORD PTR ds:0x430430
  421cb7:	ret    0x4
  421cba:	int3   
  421cbb:	int3   
  421cbc:	int3   
  421cbd:	int3   
  421cbe:	int3   
  421cbf:	int3   
  421cc0:	push   0xffffffff
  421cc2:	push   0x42cdbc
  421cc7:	mov    eax,fs:0x0
  421ccd:	push   eax
  421cce:	sub    esp,0x58
  421cd1:	push   ebx
  421cd2:	push   ebp
  421cd3:	push   esi
  421cd4:	push   edi
  421cd5:	mov    eax,ds:0x43e020
  421cda:	xor    eax,esp
  421cdc:	push   eax
  421cdd:	lea    eax,[esp+0x6c]
  421ce1:	mov    fs:0x0,eax
  421ce7:	mov    ebp,DWORD PTR [esp+0x7c]
  421ceb:	mov    ebx,ecx
  421ced:	push   ebp
  421cee:	mov    eax,ebx
  421cf0:	call   0x423180
  421cf5:	mov    edi,eax
  421cf7:	test   ebx,ebx
  421cf9:	jne    0x421d01
  421cfb:	call   DWORD PTR ds:0x430390
  421d01:	mov    esi,DWORD PTR [ebx]
  421d03:	mov    eax,DWORD PTR [ebx+0x18]
  421d06:	mov    DWORD PTR [esp+0x18],eax
  421d0a:	test   esi,esi
  421d0c:	je     0x421d12
  421d0e:	cmp    esi,esi
  421d10:	je     0x421d18
  421d12:	call   DWORD PTR ds:0x430390
  421d18:	cmp    edi,DWORD PTR [esp+0x18]
  421d1c:	je     0x421d30
  421d1e:	lea    ecx,[edi+0xc]
  421d21:	push   ecx
  421d22:	push   ebp
  421d23:	call   DWORD PTR ds:0x4301e8
  421d29:	add    esp,0x8
  421d2c:	test   al,al
  421d2e:	je     0x421d9a
  421d30:	lea    edx,[esp+0x1c]
  421d34:	push   edx
  421d35:	call   0x413bb0
  421d3a:	push   eax
  421d3b:	push   ebp
  421d3c:	lea    eax,[esp+0x3c]
  421d40:	push   eax
  421d41:	mov    DWORD PTR [esp+0x80],0x0
  421d4c:	call   0x422b40
  421d51:	push   edi
  421d52:	push   esi
  421d53:	push   eax
  421d54:	lea    ecx,[esp+0x20]
  421d58:	push   ecx
  421d59:	mov    eax,ebx
  421d5b:	mov    BYTE PTR [esp+0x84],0x1
  421d63:	call   0x422830
  421d68:	mov    esi,DWORD PTR [eax]
  421d6a:	mov    edi,DWORD PTR [eax+0x4]
  421d6d:	lea    edx,[esp+0x34]
  421d71:	push   edx
  421d72:	mov    BYTE PTR [esp+0x78],0x0
  421d77:	call   0x422640
  421d7c:	lea    ebx,[esp+0x1c]
  421d80:	mov    DWORD PTR [esp+0x74],0x2
  421d88:	call   0x414230
  421d8d:	mov    eax,DWORD PTR [esp+0x1c]
  421d91:	push   eax
  421d92:	call   0x42504a
  421d97:	add    esp,0x4
  421d9a:	test   esi,esi
  421d9c:	jne    0x421dc8
  421d9e:	call   DWORD PTR ds:0x430390
  421da4:	cmp    edi,DWORD PTR [esi+0x18]
  421da7:	jne    0x421daf
  421da9:	call   DWORD PTR ds:0x430390
  421daf:	lea    eax,[edi+0x28]
  421db2:	mov    ecx,DWORD PTR [esp+0x6c]
  421db6:	mov    DWORD PTR fs:0x0,ecx
  421dbd:	pop    ecx
  421dbe:	pop    edi
  421dbf:	pop    esi
  421dc0:	pop    ebp
  421dc1:	pop    ebx
  421dc2:	add    esp,0x64
  421dc5:	ret    0x4
  421dc8:	mov    esi,DWORD PTR [esi]
  421dca:	jmp    0x421da4
  421dcc:	int3   
  421dcd:	int3   
  421dce:	int3   
  421dcf:	int3   
  421dd0:	push   ebp
  421dd1:	mov    ebp,esp
  421dd3:	push   0xffffffff
  421dd5:	push   0x42cd78
  421dda:	mov    eax,fs:0x0
  421de0:	push   eax
  421de1:	push   ecx
  421de2:	push   ebx
  421de3:	push   esi
  421de4:	push   edi
  421de5:	mov    eax,ds:0x43e020
  421dea:	xor    eax,ebp
  421dec:	push   eax
  421ded:	lea    eax,[ebp-0xc]
  421df0:	mov    fs:0x0,eax
  421df6:	mov    DWORD PTR [ebp-0x10],esp
  421df9:	mov    esi,DWORD PTR [ebp+0x8]
  421dfc:	push   0x4
  421dfe:	call   0x425050
  421e03:	add    esp,0x4
  421e06:	test   eax,eax
  421e08:	je     0x421e0e
  421e0a:	mov    DWORD PTR [eax],esi
  421e0c:	jmp    0x421e10
  421e0e:	xor    eax,eax
  421e10:	mov    DWORD PTR [esi],eax
  421e12:	mov    DWORD PTR [ebp-0x4],0x0
  421e19:	call   0x4231f0
  421e1e:	mov    ebx,DWORD PTR [ebp+0xc]
  421e21:	mov    DWORD PTR [esi+0x18],eax
  421e24:	mov    cl,0x1
  421e26:	mov    BYTE PTR [eax+0x41],cl
  421e29:	mov    eax,DWORD PTR [esi+0x18]
  421e2c:	mov    DWORD PTR [eax+0x4],eax
  421e2f:	mov    eax,DWORD PTR [esi+0x18]
  421e32:	mov    DWORD PTR [eax],eax
  421e34:	mov    eax,DWORD PTR [esi+0x18]
  421e37:	mov    DWORD PTR [eax+0x8],eax
  421e3a:	mov    eax,esi
  421e3c:	mov    DWORD PTR [esi+0x1c],0x0
  421e43:	mov    BYTE PTR [ebp-0x4],cl
  421e46:	call   0x422a70
  421e4b:	mov    eax,esi
  421e4d:	mov    ecx,DWORD PTR [ebp-0xc]
  421e50:	mov    DWORD PTR fs:0x0,ecx
  421e57:	pop    ecx
  421e58:	pop    edi
  421e59:	pop    esi
  421e5a:	pop    ebx
  421e5b:	mov    esp,ebp
  421e5d:	pop    ebp
  421e5e:	ret    0x8
  421e61:	mov    esi,DWORD PTR [ebp+0x8]
  421e64:	call   0x422ae0
  421e69:	push   0x0
  421e6b:	push   0x0
  421e6d:	call   0x429e76
  421e72:	int3   
  421e73:	int3   
  421e74:	int3   
  421e75:	int3   
  421e76:	int3   
  421e77:	int3   
  421e78:	int3   
  421e79:	int3   
  421e7a:	int3   
  421e7b:	int3   
  421e7c:	int3   
  421e7d:	int3   
  421e7e:	int3   
  421e7f:	int3   
  421e80:	push   ecx
  421e81:	push   ebp
  421e82:	mov    ebp,DWORD PTR [esp+0xc]
  421e86:	push   esi
  421e87:	push   edi
  421e88:	cmp    ebp,ebx
  421e8a:	je     0x421ff1
  421e90:	mov    eax,DWORD PTR [ebx+0xc]
  421e93:	mov    ecx,DWORD PTR [ebx+0x10]
  421e96:	sub    ecx,eax
  421e98:	mov    eax,0x92492493
  421e9d:	imul   ecx
  421e9f:	add    edx,ecx
  421ea1:	sar    edx,0x4
  421ea4:	mov    edi,edx
  421ea6:	shr    edi,0x1f
  421ea9:	add    edi,edx
  421eab:	jne    0x421ebd
  421ead:	mov    eax,ebp
  421eaf:	call   0x422ba0
  421eb4:	mov    eax,ebp
  421eb6:	pop    edi
  421eb7:	pop    esi
  421eb8:	pop    ebp
  421eb9:	pop    ecx
  421eba:	ret    0x4
  421ebd:	mov    esi,DWORD PTR [ebp+0x10]
  421ec0:	mov    ecx,DWORD PTR [ebp+0xc]
  421ec3:	sub    esi,ecx
  421ec5:	mov    eax,0x92492493
  421eca:	imul   esi
  421ecc:	add    edx,esi
  421ece:	sar    edx,0x4
  421ed1:	mov    esi,edx
  421ed3:	shr    esi,0x1f
  421ed6:	add    esi,edx
  421ed8:	cmp    edi,esi
  421eda:	ja     0x421f35
  421edc:	mov    edi,DWORD PTR [ebx+0x10]
  421edf:	mov    eax,ecx
  421ee1:	mov    ecx,DWORD PTR [ebx+0xc]
  421ee4:	call   0x423be0
  421ee9:	mov    edi,DWORD PTR [ebp+0x10]
  421eec:	mov    esi,eax
  421eee:	cmp    eax,edi
  421ef0:	je     0x421f01
  421ef2:	mov    ecx,esi
  421ef4:	call   DWORD PTR ds:0x430264
  421efa:	add    esi,0x1c
  421efd:	cmp    esi,edi
  421eff:	jne    0x421ef2
  421f01:	mov    ecx,DWORD PTR [ebx+0x10]
  421f04:	sub    ecx,DWORD PTR [ebx+0xc]
  421f07:	mov    eax,0x92492493
  421f0c:	imul   ecx
  421f0e:	add    edx,ecx
  421f10:	sar    edx,0x4
  421f13:	mov    eax,edx
  421f15:	shr    eax,0x1f
  421f18:	add    eax,edx
  421f1a:	mov    edx,DWORD PTR [ebp+0xc]
  421f1d:	lea    ecx,[eax*8+0x0]
  421f24:	sub    ecx,eax
  421f26:	lea    eax,[edx+ecx*4]
  421f29:	mov    DWORD PTR [ebp+0x10],eax
  421f2c:	mov    eax,ebp
  421f2e:	pop    edi
  421f2f:	pop    esi
  421f30:	pop    ebp
  421f31:	pop    ecx
  421f32:	ret    0x4
  421f35:	test   ecx,ecx
  421f37:	jne    0x421f3d
  421f39:	xor    eax,eax
  421f3b:	jmp    0x421f5b
  421f3d:	mov    edx,DWORD PTR [ebp+0x14]
  421f40:	sub    edx,ecx
  421f42:	mov    DWORD PTR [esp+0x14],edx
  421f46:	mov    eax,0x92492493
  421f4b:	imul   edx
  421f4d:	add    edx,DWORD PTR [esp+0x14]
  421f51:	sar    edx,0x4
  421f54:	mov    eax,edx
  421f56:	shr    eax,0x1f
  421f59:	add    eax,edx
  421f5b:	cmp    edi,eax
  421f5d:	ja     0x421f90
  421f5f:	mov    edx,DWORD PTR [ebx+0xc]
  421f62:	lea    eax,[esi*8+0x0]
  421f69:	sub    eax,esi
  421f6b:	lea    edi,[edx+eax*4]
  421f6e:	mov    eax,ecx
  421f70:	mov    ecx,edx
  421f72:	call   0x423be0
  421f77:	mov    ecx,DWORD PTR [ebx+0x10]
  421f7a:	mov    edx,DWORD PTR [ebp+0x10]
  421f7d:	push   ecx
  421f7e:	push   edi
  421f7f:	call   0x423c30
  421f84:	mov    DWORD PTR [ebp+0x10],eax
  421f87:	mov    eax,ebp
  421f89:	pop    edi
  421f8a:	pop    esi
  421f8b:	pop    ebp
  421f8c:	pop    ecx
  421f8d:	ret    0x4
  421f90:	test   ecx,ecx
  421f92:	je     0x421faa
  421f94:	mov    edi,DWORD PTR [ebp+0x10]
  421f97:	mov    eax,ecx
  421f99:	call   0x414210
  421f9e:	mov    edx,DWORD PTR [ebp+0xc]
  421fa1:	push   edx
  421fa2:	call   0x42504a
  421fa7:	add    esp,0x4
  421faa:	mov    ecx,DWORD PTR [ebx+0x10]
  421fad:	sub    ecx,DWORD PTR [ebx+0xc]
  421fb0:	mov    eax,0x92492493
  421fb5:	imul   ecx
  421fb7:	add    edx,ecx
  421fb9:	sar    edx,0x4
  421fbc:	mov    esi,edx
  421fbe:	mov    eax,0x0
  421fc3:	shr    esi,0x1f
  421fc6:	add    esi,edx
  421fc8:	mov    DWORD PTR [ebp+0xc],eax
  421fcb:	mov    DWORD PTR [ebp+0x10],eax
  421fce:	mov    DWORD PTR [ebp+0x14],eax
  421fd1:	je     0x421ff1
  421fd3:	mov    edi,ebp
  421fd5:	call   0x4141d0
  421fda:	test   al,al
  421fdc:	je     0x421ff1
  421fde:	mov    eax,DWORD PTR [ebx+0x10]
  421fe1:	mov    ecx,DWORD PTR [ebx+0xc]
  421fe4:	mov    edx,DWORD PTR [ebp+0xc]
  421fe7:	push   eax
  421fe8:	push   ecx
  421fe9:	call   0x423c30
  421fee:	mov    DWORD PTR [ebp+0x10],eax
  421ff1:	pop    edi
  421ff2:	pop    esi
  421ff3:	mov    eax,ebp
  421ff5:	pop    ebp
  421ff6:	pop    ecx
  421ff7:	ret    0x4
  421ffa:	int3   
  421ffb:	int3   
  421ffc:	int3   
  421ffd:	int3   
  421ffe:	int3   
  421fff:	int3   
  422000:	push   0xffffffff
  422002:	push   0x42b23c
  422007:	mov    eax,fs:0x0
  42200d:	push   eax
  42200e:	push   ecx
  42200f:	mov    eax,ds:0x43e020
  422014:	xor    eax,esp
  422016:	push   eax
  422017:	lea    eax,[esp+0x8]
  42201b:	mov    fs:0x0,eax
  422021:	mov    DWORD PTR [esp+0x4],0x440060
  422029:	mov    DWORD PTR [esp+0x10],0x0
  422031:	mov    ecx,DWORD PTR ds:0x440060
  422037:	test   ecx,ecx
  422039:	je     0x422073
  42203b:	cmp    DWORD PTR ds:0x440078,0x0
  422042:	jne    0x42204e
  422044:	mov    eax,DWORD PTR [ecx]
  422046:	mov    edx,DWORD PTR [eax]
  422048:	push   0x1
  42204a:	call   edx
  42204c:	jmp    0x422069
  42204e:	cmp    DWORD PTR ds:0x44007c,0x10
  422055:	mov    eax,ds:0x440068
  42205a:	jae    0x422061
  42205c:	mov    eax,0x440068
  422061:	push   ecx
  422062:	push   eax
  422063:	call   DWORD PTR ds:0x4303bc
  422069:	mov    DWORD PTR ds:0x440060,0x0
  422073:	mov    ecx,0x440064
  422078:	mov    DWORD PTR [esp+0x10],0xffffffff
  422080:	call   DWORD PTR ds:0x43025c
  422086:	mov    ecx,DWORD PTR [esp+0x8]
  42208a:	mov    DWORD PTR fs:0x0,ecx
  422091:	pop    ecx
  422092:	add    esp,0x10
  422095:	ret    
  422096:	int3   
  422097:	int3   
  422098:	int3   
  422099:	int3   
  42209a:	int3   
  42209b:	int3   
  42209c:	int3   
  42209d:	int3   
  42209e:	int3   
  42209f:	int3   
  4220a0:	push   0xffffffff
  4220a2:	push   0x42b016
  4220a7:	mov    eax,fs:0x0
  4220ad:	push   eax
  4220ae:	sub    esp,0x50
  4220b1:	mov    eax,ds:0x43e020
  4220b6:	xor    eax,esp
  4220b8:	mov    DWORD PTR [esp+0x4c],eax
  4220bc:	mov    eax,ds:0x43e020
  4220c1:	xor    eax,esp
  4220c3:	push   eax
  4220c4:	lea    eax,[esp+0x54]
  4220c8:	mov    fs:0x0,eax
  4220ce:	cmp    DWORD PTR ds:0x440060,0x0
  4220d5:	je     0x422172
  4220db:	lea    ecx,[esp+0x18]
  4220df:	call   DWORD PTR ds:0x430260
  4220e5:	push   0x440064
  4220ea:	lea    eax,[esp+0x38]
  4220ee:	push   0x430cb4
  4220f3:	push   eax
  4220f4:	mov    DWORD PTR [esp+0x68],0x0
  4220fc:	call   DWORD PTR ds:0x430170
  422102:	add    esp,0xc
  422105:	push   eax
  422106:	lea    ecx,[esp+0x1c]
  42210a:	mov    BYTE PTR [esp+0x60],0x1
  42210f:	call   DWORD PTR ds:0x430174
  422115:	lea    ecx,[esp+0x34]
  422119:	mov    BYTE PTR [esp+0x5c],0x0
  42211e:	call   DWORD PTR ds:0x43025c
  422124:	push   0x2a
  422126:	push   0x432f80
  42212b:	push   0x430d24
  422130:	lea    ecx,[esp+0x10]
  422134:	call   DWORD PTR ds:0x430000
  42213a:	mov    BYTE PTR [esp+0x5c],0x2
  42213f:	cmp    DWORD PTR [esp+0x30],0x10
  422144:	mov    eax,DWORD PTR [esp+0x1c]
  422148:	jae    0x42214e
  42214a:	lea    eax,[esp+0x1c]
  42214e:	push   0x10000010
  422153:	push   eax
  422154:	lea    ecx,[esp+0xc]
  422158:	push   ecx
  422159:	lea    ecx,[esp+0x18]
  42215d:	call   DWORD PTR ds:0x430008
  422163:	push   0x43581c
  422168:	lea    edx,[esp+0x10]
  42216c:	push   edx
  42216d:	call   0x429e76
  422172:	push   0x430a8c
  422177:	mov    ecx,0x440064
  42217c:	call   DWORD PTR ds:0x430178
  422182:	push   0x430a8c
  422187:	call   DWORD PTR ds:0x4303b8
  42218d:	mov    ds:0x440060,eax
  422192:	test   eax,eax
  422194:	jne    0x422231
  42219a:	lea    ecx,[esp+0x34]
  42219e:	call   DWORD PTR ds:0x430260
  4221a4:	push   0x440064
  4221a9:	lea    eax,[esp+0x1c]
  4221ad:	push   0x430d64
  4221b2:	push   eax
  4221b3:	mov    DWORD PTR [esp+0x68],0x3
  4221bb:	call   DWORD PTR ds:0x430170
  4221c1:	add    esp,0xc
  4221c4:	push   eax
  4221c5:	lea    ecx,[esp+0x38]
  4221c9:	mov    BYTE PTR [esp+0x60],0x4
  4221ce:	call   DWORD PTR ds:0x430174
  4221d4:	lea    ecx,[esp+0x18]
  4221d8:	mov    BYTE PTR [esp+0x5c],0x3
  4221dd:	call   DWORD PTR ds:0x43025c
  4221e3:	push   0x33
  4221e5:	push   0x432f80
  4221ea:	push   0x430d24
  4221ef:	lea    ecx,[esp+0x14]
  4221f3:	call   DWORD PTR ds:0x430000
  4221f9:	mov    BYTE PTR [esp+0x5c],0x5
  4221fe:	cmp    DWORD PTR [esp+0x4c],0x10
  422203:	mov    eax,DWORD PTR [esp+0x38]
  422207:	jae    0x42220d
  422209:	lea    eax,[esp+0x38]
  42220d:	push   0x10000010
  422212:	push   eax
  422213:	lea    ecx,[esp+0x10]
  422217:	push   ecx
  422218:	lea    ecx,[esp+0x18]
  42221c:	call   DWORD PTR ds:0x430008
  422222:	push   0x43581c
  422227:	lea    edx,[esp+0x10]
  42222b:	push   edx
  42222c:	call   0x429e76
  422231:	mov    eax,0x1
  422236:	mov    ecx,DWORD PTR [esp+0x54]
  42223a:	mov    DWORD PTR fs:0x0,ecx
  422241:	pop    ecx
  422242:	mov    ecx,DWORD PTR [esp+0x4c]
  422246:	xor    ecx,esp
  422248:	call   0x42503a
  42224d:	add    esp,0x5c
  422250:	ret    
  422251:	int3   
  422252:	int3   
  422253:	int3   
  422254:	int3   
  422255:	int3   
  422256:	int3   
  422257:	int3   
  422258:	int3   
  422259:	int3   
  42225a:	int3   
  42225b:	int3   
  42225c:	int3   
  42225d:	int3   
  42225e:	int3   
  42225f:	int3   
  422260:	push   0xffffffff
  422262:	push   0x42aee6
  422267:	mov    eax,fs:0x0
  42226d:	push   eax
  42226e:	sub    esp,0x50
  422271:	mov    eax,ds:0x43e020
  422276:	xor    eax,esp
  422278:	mov    DWORD PTR [esp+0x4c],eax
  42227c:	push   esi
  42227d:	push   edi
  42227e:	mov    eax,ds:0x43e020
  422283:	xor    eax,esp
  422285:	push   eax
  422286:	lea    eax,[esp+0x5c]
  42228a:	mov    fs:0x0,eax
  422290:	mov    esi,ecx
  422292:	cmp    DWORD PTR [esi],0x0
  422295:	je     0x422331
  42229b:	lea    ecx,[esp+0x20]
  42229f:	call   DWORD PTR ds:0x430260
  4222a5:	add    esi,0x4
  4222a8:	push   esi
  4222a9:	lea    eax,[esp+0x40]
  4222ad:	push   0x430cb4
  4222b2:	push   eax
  4222b3:	mov    DWORD PTR [esp+0x70],0x0
  4222bb:	call   DWORD PTR ds:0x430170
  4222c1:	add    esp,0xc
  4222c4:	push   eax
  4222c5:	lea    ecx,[esp+0x24]
  4222c9:	mov    BYTE PTR [esp+0x68],0x1
  4222ce:	call   DWORD PTR ds:0x430174
  4222d4:	lea    ecx,[esp+0x3c]
  4222d8:	mov    BYTE PTR [esp+0x64],0x0
  4222dd:	call   DWORD PTR ds:0x43025c
  4222e3:	push   0x2a
  4222e5:	push   0x432fb0
  4222ea:	push   0x430d24
  4222ef:	lea    ecx,[esp+0x18]
  4222f3:	call   DWORD PTR ds:0x430000
  4222f9:	mov    BYTE PTR [esp+0x64],0x2
  4222fe:	cmp    DWORD PTR [esp+0x38],0x10
  422303:	mov    eax,DWORD PTR [esp+0x24]
  422307:	jae    0x42230d
  422309:	lea    eax,[esp+0x24]
  42230d:	push   0x10000010
  422312:	push   eax
  422313:	lea    ecx,[esp+0x14]
  422317:	push   ecx
  422318:	lea    ecx,[esp+0x20]
  42231c:	call   DWORD PTR ds:0x430008
  422322:	push   0x43581c
  422327:	lea    edx,[esp+0x18]
  42232b:	push   edx
  42232c:	call   0x429e76
  422331:	lea    edi,[esi+0x4]
  422334:	push   0x430aa8
  422339:	mov    ecx,edi
  42233b:	call   DWORD PTR ds:0x430178
  422341:	push   0x430aa8
  422346:	call   DWORD PTR ds:0x4303b8
  42234c:	mov    DWORD PTR [esi],eax
  42234e:	test   eax,eax
  422350:	jne    0x4223e9
  422356:	lea    ecx,[esp+0x3c]
  42235a:	call   DWORD PTR ds:0x430260
  422360:	push   edi
  422361:	lea    eax,[esp+0x24]
  422365:	push   0x430d64
  42236a:	push   eax
  42236b:	mov    DWORD PTR [esp+0x70],0x3
  422373:	call   DWORD PTR ds:0x430170
  422379:	add    esp,0xc
  42237c:	push   eax
  42237d:	lea    ecx,[esp+0x40]
  422381:	mov    BYTE PTR [esp+0x68],0x4
  422386:	call   DWORD PTR ds:0x430174
  42238c:	lea    ecx,[esp+0x20]
  422390:	mov    BYTE PTR [esp+0x64],0x3
  422395:	call   DWORD PTR ds:0x43025c
  42239b:	push   0x33
  42239d:	push   0x432fb0
  4223a2:	push   0x430d24
  4223a7:	lea    ecx,[esp+0x1c]
  4223ab:	call   DWORD PTR ds:0x430000
  4223b1:	mov    BYTE PTR [esp+0x64],0x5
  4223b6:	cmp    DWORD PTR [esp+0x54],0x10
  4223bb:	mov    eax,DWORD PTR [esp+0x40]
  4223bf:	jae    0x4223c5
  4223c1:	lea    eax,[esp+0x40]
  4223c5:	push   0x10000010
  4223ca:	push   eax
  4223cb:	lea    ecx,[esp+0x18]
  4223cf:	push   ecx
  4223d0:	lea    ecx,[esp+0x20]
  4223d4:	call   DWORD PTR ds:0x430008
  4223da:	push   0x43581c
  4223df:	lea    edx,[esp+0x18]
  4223e3:	push   edx
  4223e4:	call   0x429e76
  4223e9:	mov    eax,0x1
  4223ee:	mov    ecx,DWORD PTR [esp+0x5c]
  4223f2:	mov    DWORD PTR fs:0x0,ecx
  4223f9:	pop    ecx
  4223fa:	pop    edi
  4223fb:	pop    esi
  4223fc:	mov    ecx,DWORD PTR [esp+0x4c]
  422400:	xor    ecx,esp
  422402:	call   0x42503a
  422407:	add    esp,0x5c
  42240a:	ret    
  42240b:	int3   
  42240c:	int3   
  42240d:	int3   
  42240e:	int3   
  42240f:	int3   
  422410:	push   0xffffffff
  422412:	push   0x42ab90
  422417:	mov    eax,fs:0x0
  42241d:	push   eax
  42241e:	push   ecx
  42241f:	mov    eax,ds:0x43e020
  422424:	xor    eax,esp
  422426:	push   eax
  422427:	lea    eax,[esp+0x8]
  42242b:	mov    fs:0x0,eax
  422431:	mov    DWORD PTR [esp+0x4],esi
  422435:	lea    eax,[esp+0x18]
  422439:	push   eax
  42243a:	mov    ecx,esi
  42243c:	mov    DWORD PTR [esp+0x14],0x2
  422444:	call   DWORD PTR ds:0x430118
  42244a:	lea    ecx,[esp+0x34]
  42244e:	push   ecx
  42244f:	lea    ecx,[esi+0x1c]
  422452:	mov    BYTE PTR [esp+0x14],0x3
  422457:	call   DWORD PTR ds:0x430118
  42245d:	lea    edx,[esp+0x50]
  422461:	push   edx
  422462:	lea    ecx,[esi+0x38]
  422465:	mov    BYTE PTR [esp+0x14],0x4
  42246a:	call   DWORD PTR ds:0x430118
  422470:	mov    al,BYTE PTR [esp+0x6c]
  422474:	lea    ecx,[esp+0x18]
  422478:	mov    BYTE PTR [esi+0x54],0x0
  42247c:	mov    BYTE PTR [esi+0x55],al
  42247f:	mov    BYTE PTR [esp+0x10],0x1
  422484:	call   DWORD PTR ds:0x430264
  42248a:	lea    ecx,[esp+0x34]
  42248e:	mov    BYTE PTR [esp+0x10],0x0
  422493:	call   DWORD PTR ds:0x430264
  422499:	lea    ecx,[esp+0x50]
  42249d:	mov    DWORD PTR [esp+0x10],0xffffffff
  4224a5:	call   DWORD PTR ds:0x430264
  4224ab:	mov    eax,esi
  4224ad:	mov    ecx,DWORD PTR [esp+0x8]
  4224b1:	mov    DWORD PTR fs:0x0,ecx
  4224b8:	pop    ecx
  4224b9:	add    esp,0x10
  4224bc:	ret    0x58
  4224bf:	int3   
  4224c0:	push   0xffffffff
  4224c2:	push   0x42c4cd
  4224c7:	mov    eax,fs:0x0
  4224cd:	push   eax
  4224ce:	sub    esp,0x90
  4224d4:	push   ebp
  4224d5:	push   esi
  4224d6:	push   edi
  4224d7:	mov    eax,ds:0x43e020
  4224dc:	xor    eax,esp
  4224de:	push   eax
  4224df:	lea    eax,[esp+0xa0]
  4224e6:	mov    fs:0x0,eax
  4224ec:	mov    ebp,DWORD PTR [esp+0xb4]
  4224f3:	mov    eax,DWORD PTR [esp+0xb0]
  4224fa:	mov    DWORD PTR [esp+0x10],0x0
  422502:	mov    ecx,DWORD PTR [eax+0xc]
  422505:	mov    edx,DWORD PTR [eax+0x8]
  422508:	push   ecx
  422509:	mov    ecx,DWORD PTR [eax+0x4]
  42250c:	push   edx
  42250d:	mov    edx,DWORD PTR [eax]
  42250f:	push   ecx
  422510:	push   edx
  422511:	sub    esp,0x58
  422514:	lea    edi,[eax+0x10]
  422517:	mov    eax,esp
  422519:	mov    DWORD PTR [esp+0x7c],esp
  42251d:	push   eax
  42251e:	call   0x4226b0
  422523:	lea    esi,[esp+0x80]
  42252a:	call   0x422be0
  42252f:	mov    esi,0x1
  422534:	push   ebp
  422535:	mov    ecx,eax
  422537:	mov    DWORD PTR [esp+0xac],esi
  42253e:	call   0x422730
  422543:	lea    ecx,[esp+0x18]
  422547:	push   ecx
  422548:	mov    DWORD PTR [esp+0x14],esi
  42254c:	mov    BYTE PTR [esp+0xac],0x0
  422554:	call   0x420f70
  422559:	mov    eax,ebp
  42255b:	mov    ecx,DWORD PTR [esp+0xa0]
  422562:	mov    DWORD PTR fs:0x0,ecx
  422569:	pop    ecx
  42256a:	pop    edi
  42256b:	pop    esi
  42256c:	pop    ebp
  42256d:	add    esp,0x9c
  422573:	ret    0x8
  422576:	int3   
  422577:	int3   
  422578:	int3   
  422579:	int3   
  42257a:	int3   
  42257b:	int3   
  42257c:	int3   
  42257d:	int3   
  42257e:	int3   
  42257f:	int3   
  422580:	push   0xffffffff
  422582:	push   0x42c4cd
  422587:	mov    eax,fs:0x0
  42258d:	push   eax
  42258e:	sub    esp,0x90
  422594:	push   ebp
  422595:	push   esi
  422596:	push   edi
  422597:	mov    eax,ds:0x43e020
  42259c:	xor    eax,esp
  42259e:	push   eax
  42259f:	lea    eax,[esp+0xa0]
  4225a6:	mov    fs:0x0,eax
  4225ac:	mov    ebp,DWORD PTR [esp+0xb4]
  4225b3:	mov    eax,DWORD PTR [esp+0xb0]
  4225ba:	mov    DWORD PTR [esp+0x10],0x0
  4225c2:	mov    ecx,DWORD PTR [eax+0xc]
  4225c5:	mov    edx,DWORD PTR [eax+0x8]
  4225c8:	push   ecx
  4225c9:	push   edx
  4225ca:	push   ecx
  4225cb:	push   edx
  4225cc:	sub    esp,0x58
  4225cf:	lea    edi,[eax+0x10]
  4225d2:	mov    eax,esp
  4225d4:	mov    DWORD PTR [esp+0x7c],esp
  4225d8:	push   eax
  4225d9:	call   0x4226b0
  4225de:	lea    esi,[esp+0x80]
  4225e5:	call   0x422be0
  4225ea:	mov    esi,0x1
  4225ef:	push   ebp
  4225f0:	mov    ecx,eax
  4225f2:	mov    DWORD PTR [esp+0xac],esi
  4225f9:	call   0x422730
  4225fe:	lea    ecx,[esp+0x18]
  422602:	push   ecx
  422603:	mov    DWORD PTR [esp+0x14],esi
  422607:	mov    BYTE PTR [esp+0xac],0x0
  42260f:	call   0x420f70
  422614:	mov    eax,ebp
  422616:	mov    ecx,DWORD PTR [esp+0xa0]
  42261d:	mov    DWORD PTR fs:0x0,ecx
  422624:	pop    ecx
  422625:	pop    edi
  422626:	pop    esi
  422627:	pop    ebp
  422628:	add    esp,0x9c
  42262e:	ret    0x8
  422631:	int3   
  422632:	int3   
  422633:	int3   
  422634:	int3   
  422635:	int3   
  422636:	int3   
  422637:	int3   
  422638:	int3   
  422639:	int3   
  42263a:	int3   
  42263b:	int3   
  42263c:	int3   
  42263d:	int3   
  42263e:	int3   
  42263f:	int3   
  422640:	push   0xffffffff
  422642:	push   0x42b931
  422647:	mov    eax,fs:0x0
  42264d:	push   eax
  42264e:	push   ecx
  42264f:	push   ebx
  422650:	push   esi
  422651:	mov    eax,ds:0x43e020
  422656:	xor    eax,esp
  422658:	push   eax
  422659:	lea    eax,[esp+0x10]
  42265d:	mov    fs:0x0,eax
  422663:	mov    esi,DWORD PTR [esp+0x20]
  422667:	lea    ebx,[esi+0x1c]
  42266a:	mov    DWORD PTR [esp+0x18],0x0
  422672:	mov    DWORD PTR [esp+0xc],ebx
  422676:	mov    BYTE PTR [esp+0x18],0x1
  42267b:	call   0x414230
  422680:	mov    ebx,DWORD PTR [ebx]
  422682:	push   ebx
  422683:	call   0x42504a
  422688:	add    esp,0x4
  42268b:	mov    ecx,esi
  42268d:	mov    DWORD PTR [esp+0x18],0xffffffff
  422695:	call   DWORD PTR ds:0x430264
  42269b:	mov    ecx,DWORD PTR [esp+0x10]
  42269f:	mov    DWORD PTR fs:0x0,ecx
  4226a6:	pop    ecx
  4226a7:	pop    esi
  4226a8:	pop    ebx
  4226a9:	add    esp,0x10
  4226ac:	ret    0x4
  4226af:	int3   
  4226b0:	push   0xffffffff
  4226b2:	push   0x42abe5
  4226b7:	mov    eax,fs:0x0
  4226bd:	push   eax
  4226be:	push   esi
  4226bf:	mov    eax,ds:0x43e020
  4226c4:	xor    eax,esp
  4226c6:	push   eax
  4226c7:	lea    eax,[esp+0x8]
  4226cb:	mov    fs:0x0,eax
  4226d1:	mov    esi,DWORD PTR [esp+0x18]
  4226d5:	push   edi
  4226d6:	mov    ecx,esi
  4226d8:	call   DWORD PTR ds:0x430118
  4226de:	lea    eax,[edi+0x1c]
  4226e1:	push   eax
  4226e2:	lea    ecx,[esi+0x1c]
  4226e5:	mov    DWORD PTR [esp+0x14],0x0
  4226ed:	call   DWORD PTR ds:0x430118
  4226f3:	lea    ecx,[edi+0x38]
  4226f6:	push   ecx
  4226f7:	lea    ecx,[esi+0x38]
  4226fa:	mov    BYTE PTR [esp+0x14],0x1
  4226ff:	call   DWORD PTR ds:0x430118
  422705:	mov    dl,BYTE PTR [edi+0x54]
  422708:	mov    BYTE PTR [esi+0x54],dl
  42270b:	mov    al,BYTE PTR [edi+0x55]
  42270e:	mov    BYTE PTR [esi+0x55],al
  422711:	mov    eax,esi
  422713:	mov    ecx,DWORD PTR [esp+0x8]
  422717:	mov    DWORD PTR fs:0x0,ecx
  42271e:	pop    ecx
  42271f:	pop    esi
  422720:	add    esp,0xc
  422723:	ret    0x4
  422726:	int3   
  422727:	int3   
  422728:	int3   
  422729:	int3   
  42272a:	int3   
  42272b:	int3   
  42272c:	int3   
  42272d:	int3   
  42272e:	int3   
  42272f:	int3   
  422730:	push   0xffffffff
  422732:	push   0x42b06a
  422737:	mov    eax,fs:0x0
  42273d:	push   eax
  42273e:	push   esi
  42273f:	push   edi
  422740:	mov    eax,ds:0x43e020
  422745:	xor    eax,esp
  422747:	push   eax
  422748:	lea    eax,[esp+0xc]
  42274c:	mov    fs:0x0,eax
  422752:	mov    edi,ecx
  422754:	mov    esi,DWORD PTR [esp+0x1c]
  422758:	push   esi
  422759:	call   0x4226b0
  42275e:	mov    DWORD PTR [esp+0x14],0x0
  422766:	mov    eax,DWORD PTR [edi+0x58]
  422769:	mov    DWORD PTR [esi+0x58],eax
  42276c:	mov    ecx,DWORD PTR [edi+0x5c]
  42276f:	mov    DWORD PTR [esi+0x5c],ecx
  422772:	mov    edx,DWORD PTR [edi+0x60]
  422775:	mov    DWORD PTR [esi+0x60],edx
  422778:	mov    eax,DWORD PTR [edi+0x64]
  42277b:	mov    DWORD PTR [esi+0x64],eax
  42277e:	mov    cl,BYTE PTR [edi+0x68]
  422781:	add    edi,0x6c
  422784:	mov    BYTE PTR [esi+0x68],cl
  422787:	push   edi
  422788:	lea    ecx,[esi+0x6c]
  42278b:	call   DWORD PTR ds:0x430118
  422791:	mov    eax,esi
  422793:	mov    ecx,DWORD PTR [esp+0xc]
  422797:	mov    DWORD PTR fs:0x0,ecx
  42279e:	pop    ecx
  42279f:	pop    edi
  4227a0:	pop    esi
  4227a1:	add    esp,0xc
  4227a4:	ret    0x4
  4227a7:	int3   
  4227a8:	int3   
  4227a9:	int3   
  4227aa:	int3   
  4227ab:	int3   
  4227ac:	int3   
  4227ad:	int3   
  4227ae:	int3   
  4227af:	int3   
  4227b0:	push   0xffffffff
  4227b2:	push   0x42b4e8
  4227b7:	mov    eax,fs:0x0
  4227bd:	push   eax
  4227be:	push   esi
  4227bf:	mov    eax,ds:0x43e020
  4227c4:	xor    eax,esp
  4227c6:	push   eax
  4227c7:	lea    eax,[esp+0x8]
  4227cb:	mov    fs:0x0,eax
  4227d1:	mov    esi,DWORD PTR [esp+0x18]
  4227d5:	push   0x4
  4227d7:	call   0x425050
  4227dc:	add    esp,0x4
  4227df:	test   eax,eax
  4227e1:	je     0x4227e7
  4227e3:	mov    DWORD PTR [eax],esi
  4227e5:	jmp    0x4227e9
  4227e7:	xor    eax,eax
  4227e9:	mov    DWORD PTR [esi],eax
  4227eb:	mov    DWORD PTR [esp+0x10],0x0
  4227f3:	call   0x4231f0
  4227f8:	mov    DWORD PTR [esi+0x18],eax
  4227fb:	mov    BYTE PTR [eax+0x41],0x1
  4227ff:	mov    eax,DWORD PTR [esi+0x18]
  422802:	mov    DWORD PTR [eax+0x4],eax
  422805:	mov    eax,DWORD PTR [esi+0x18]
  422808:	mov    DWORD PTR [eax],eax
  42280a:	mov    eax,DWORD PTR [esi+0x18]
  42280d:	mov    DWORD PTR [eax+0x8],eax
  422810:	mov    DWORD PTR [esi+0x1c],0x0
  422817:	mov    eax,esi
  422819:	mov    ecx,DWORD PTR [esp+0x8]
  42281d:	mov    DWORD PTR fs:0x0,ecx
  422824:	pop    ecx
  422825:	pop    esi
  422826:	add    esp,0xc
  422829:	ret    0x4
  42282c:	int3   
  42282d:	int3   
  42282e:	int3   
  42282f:	int3   
  422830:	sub    esp,0x1c
  422833:	push   ebx
  422834:	push   ebp
  422835:	mov    ebp,DWORD PTR [esp+0x28]
  422839:	mov    ebx,eax
  42283b:	cmp    DWORD PTR [ebx+0x1c],0x0
  42283f:	mov    ecx,DWORD PTR [ebx+0x18]
  422842:	push   esi
  422843:	push   edi
  422844:	jne    0x422861
  422846:	mov    eax,DWORD PTR [esp+0x34]
  42284a:	push   eax
  42284b:	push   0x1
  42284d:	push   ebp
  42284e:	mov    edi,ebx
  422850:	call   0x422f40
  422855:	mov    eax,ebp
  422857:	pop    edi
  422858:	pop    esi
  422859:	pop    ebp
  42285a:	pop    ebx
  42285b:	add    esp,0x1c
  42285e:	ret    0x10
  422861:	mov    eax,DWORD PTR [esp+0x38]
  422865:	mov    esi,DWORD PTR [ecx]
  422867:	mov    ecx,DWORD PTR [ebx]
  422869:	mov    edi,DWORD PTR ds:0x430390
  42286f:	test   eax,eax
  422871:	je     0x422877
  422873:	cmp    eax,ecx
  422875:	je     0x42287d
  422877:	call   edi
  422879:	mov    eax,DWORD PTR [esp+0x38]
  42287d:	mov    edx,DWORD PTR [esp+0x3c]
  422881:	cmp    edx,esi
  422883:	jne    0x4228ba
  422885:	mov    esi,DWORD PTR [esp+0x34]
  422889:	add    edx,0xc
  42288c:	push   edx
  42288d:	push   esi
  42288e:	call   DWORD PTR ds:0x4301e8
  422894:	add    esp,0x8
  422897:	test   al,al
  422899:	je     0x422a43
  42289f:	mov    ecx,DWORD PTR [esp+0x3c]
  4228a3:	push   esi
  4228a4:	push   0x1
  4228a6:	push   ebp
  4228a7:	mov    edi,ebx
  4228a9:	call   0x422f40
  4228ae:	mov    eax,ebp
  4228b0:	pop    edi
  4228b1:	pop    esi
  4228b2:	pop    ebp
  4228b3:	pop    ebx
  4228b4:	add    esp,0x1c
  4228b7:	ret    0x10
  4228ba:	mov    esi,DWORD PTR [ebx+0x18]
  4228bd:	mov    ecx,DWORD PTR [ebx]
  4228bf:	test   eax,eax
  4228c1:	je     0x4228c7
  4228c3:	cmp    eax,ecx
  4228c5:	je     0x4228cd
  4228c7:	call   edi
  4228c9:	mov    edx,DWORD PTR [esp+0x3c]
  4228cd:	cmp    edx,esi
  4228cf:	jne    0x422912
  4228d1:	mov    edx,DWORD PTR [ebx+0x18]
  4228d4:	mov    eax,DWORD PTR [edx+0x8]
  4228d7:	mov    ecx,DWORD PTR [esp+0x34]
  4228db:	add    eax,0xc
  4228de:	push   ecx
  4228df:	push   eax
  4228e0:	call   DWORD PTR ds:0x4301e8
  4228e6:	add    esp,0x8
  4228e9:	test   al,al
  4228eb:	je     0x422a3f
  4228f1:	mov    edx,DWORD PTR [esp+0x34]
  4228f5:	mov    eax,DWORD PTR [ebx+0x18]
  4228f8:	mov    ecx,DWORD PTR [eax+0x8]
  4228fb:	push   edx
  4228fc:	push   0x0
  4228fe:	push   ebp
  4228ff:	mov    edi,ebx
  422901:	call   0x422f40
  422906:	mov    eax,ebp
  422908:	pop    edi
  422909:	pop    esi
  42290a:	pop    ebp
  42290b:	pop    ebx
  42290c:	add    esp,0x1c
  42290f:	ret    0x10
  422912:	mov    edi,DWORD PTR [esp+0x34]
  422916:	add    edx,0xc
  422919:	push   edx
  42291a:	push   edi
  42291b:	call   DWORD PTR ds:0x4301e8
  422921:	add    esp,0x8
  422924:	test   al,al
  422926:	je     0x422991
  422928:	mov    ecx,DWORD PTR [esp+0x38]
  42292c:	mov    edx,DWORD PTR [esp+0x3c]
  422930:	lea    esi,[esp+0x14]
  422934:	mov    DWORD PTR [esp+0x14],ecx
  422938:	mov    DWORD PTR [esp+0x18],edx
  42293c:	call   0x4238d0
  422941:	mov    esi,DWORD PTR [esp+0x18]
  422945:	lea    eax,[esi+0xc]
  422948:	push   edi
  422949:	push   eax
  42294a:	call   DWORD PTR ds:0x4301e8
  422950:	add    esp,0x8
  422953:	test   al,al
  422955:	je     0x422991
  422957:	mov    ecx,DWORD PTR [esi+0x8]
  42295a:	cmp    BYTE PTR [ecx+0x41],0x0
  42295e:	push   edi
  42295f:	mov    edi,ebx
  422961:	je     0x422979
  422963:	push   0x0
  422965:	push   ebp
  422966:	mov    ecx,esi
  422968:	call   0x422f40
  42296d:	mov    eax,ebp
  42296f:	pop    edi
  422970:	pop    esi
  422971:	pop    ebp
  422972:	pop    ebx
  422973:	add    esp,0x1c
  422976:	ret    0x10
  422979:	mov    ecx,DWORD PTR [esp+0x40]
  42297d:	push   0x1
  42297f:	push   ebp
  422980:	call   0x422f40
  422985:	mov    eax,ebp
  422987:	pop    edi
  422988:	pop    esi
  422989:	pop    ebp
  42298a:	pop    ebx
  42298b:	add    esp,0x1c
  42298e:	ret    0x10
  422991:	mov    edx,DWORD PTR [esp+0x3c]
  422995:	add    edx,0xc
  422998:	push   edi
  422999:	push   edx
  42299a:	call   DWORD PTR ds:0x4301e8
  4229a0:	add    esp,0x8
  4229a3:	test   al,al
  4229a5:	je     0x422a3f
  4229ab:	mov    eax,DWORD PTR [esp+0x38]
  4229af:	mov    ecx,DWORD PTR [esp+0x3c]
  4229b3:	mov    edx,DWORD PTR [ebx+0x18]
  4229b6:	mov    DWORD PTR [esp+0x14],eax
  4229ba:	mov    eax,DWORD PTR [ebx]
  4229bc:	lea    esi,[esp+0x14]
  4229c0:	mov    DWORD PTR [esp+0x18],ecx
  4229c4:	mov    DWORD PTR [esp+0x20],edx
  4229c8:	mov    DWORD PTR [esp+0x1c],eax
  4229cc:	call   0x423960
  4229d1:	lea    esi,[esp+0x1c]
  4229d5:	lea    edi,[esp+0x14]
  4229d9:	call   0x422b20
  4229de:	mov    esi,DWORD PTR [esp+0x18]
  4229e2:	test   al,al
  4229e4:	jne    0x4229fc
  4229e6:	mov    edx,DWORD PTR [esp+0x34]
  4229ea:	lea    ecx,[esi+0xc]
  4229ed:	push   ecx
  4229ee:	push   edx
  4229ef:	call   DWORD PTR ds:0x4301e8
  4229f5:	add    esp,0x8
  4229f8:	test   al,al
  4229fa:	je     0x422a3f
  4229fc:	mov    ecx,DWORD PTR [esp+0x3c]
  422a00:	mov    eax,DWORD PTR [ecx+0x8]
  422a03:	cmp    BYTE PTR [eax+0x41],0x0
  422a07:	mov    edi,ebx
  422a09:	je     0x422a24
  422a0b:	mov    edx,DWORD PTR [esp+0x34]
  422a0f:	push   edx
  422a10:	push   0x0
  422a12:	push   ebp
  422a13:	call   0x422f40
  422a18:	mov    eax,ebp
  422a1a:	pop    edi
  422a1b:	pop    esi
  422a1c:	pop    ebp
  422a1d:	pop    ebx
  422a1e:	add    esp,0x1c
  422a21:	ret    0x10
  422a24:	mov    eax,DWORD PTR [esp+0x34]
  422a28:	push   eax
  422a29:	push   0x1
  422a2b:	push   ebp
  422a2c:	mov    ecx,esi
  422a2e:	call   0x422f40
  422a33:	mov    eax,ebp
  422a35:	pop    edi
  422a36:	pop    esi
  422a37:	pop    ebp
  422a38:	pop    ebx
  422a39:	add    esp,0x1c
  422a3c:	ret    0x10
  422a3f:	mov    esi,DWORD PTR [esp+0x34]
  422a43:	push   esi
  422a44:	lea    ecx,[esp+0x20]
  422a48:	push   ecx
  422a49:	call   0x422c80
  422a4e:	mov    edx,DWORD PTR [eax]
  422a50:	mov    DWORD PTR [ebp+0x0],edx
  422a53:	mov    eax,DWORD PTR [eax+0x4]
  422a56:	pop    edi
  422a57:	mov    DWORD PTR [ebp+0x4],eax
  422a5a:	pop    esi
  422a5b:	mov    eax,ebp
  422a5d:	pop    ebp
  422a5e:	pop    ebx
  422a5f:	add    esp,0x1c
  422a62:	ret    0x10
  422a65:	int3   
  422a66:	int3   
  422a67:	int3   
  422a68:	int3   
  422a69:	int3   
  422a6a:	int3   
  422a6b:	int3   
  422a6c:	int3   
  422a6d:	int3   
  422a6e:	int3   
  422a6f:	int3   
  422a70:	push   esi
  422a71:	mov    esi,eax
  422a73:	mov    eax,DWORD PTR [ebx+0x18]
  422a76:	push   edi
  422a77:	mov    edi,DWORD PTR [esi+0x18]
  422a7a:	add    eax,0x4
  422a7d:	mov    eax,DWORD PTR [eax]
  422a7f:	push   edi
  422a80:	push   eax
  422a81:	mov    ecx,esi
  422a83:	call   0x422e80
  422a88:	mov    DWORD PTR [edi+0x4],eax
  422a8b:	mov    ecx,DWORD PTR [ebx+0x1c]
  422a8e:	mov    edx,DWORD PTR [esi+0x18]
  422a91:	mov    DWORD PTR [esi+0x1c],ecx
  422a94:	mov    eax,DWORD PTR [edx+0x4]
  422a97:	cmp    BYTE PTR [eax+0x41],0x0
  422a9b:	jne    0x422ad1
  422a9d:	mov    ecx,DWORD PTR [eax]
  422a9f:	cmp    BYTE PTR [ecx+0x41],0x0
  422aa3:	jne    0x422aaf
  422aa5:	mov    eax,ecx
  422aa7:	mov    ecx,DWORD PTR [eax]
  422aa9:	cmp    BYTE PTR [ecx+0x41],0x0
  422aad:	je     0x422aa5
  422aaf:	mov    DWORD PTR [edx],eax
  422ab1:	mov    esi,DWORD PTR [esi+0x18]
  422ab4:	mov    ecx,DWORD PTR [esi+0x4]
  422ab7:	mov    eax,DWORD PTR [ecx+0x8]
  422aba:	cmp    BYTE PTR [eax+0x41],0x0
  422abe:	jne    0x422acb
  422ac0:	mov    ecx,eax
  422ac2:	mov    eax,DWORD PTR [ecx+0x8]
  422ac5:	cmp    BYTE PTR [eax+0x41],0x0
  422ac9:	je     0x422ac0
  422acb:	mov    DWORD PTR [esi+0x8],ecx
  422ace:	pop    edi
  422acf:	pop    esi
  422ad0:	ret    
  422ad1:	mov    DWORD PTR [edx],edx
  422ad3:	mov    esi,DWORD PTR [esi+0x18]
  422ad6:	pop    edi
  422ad7:	mov    DWORD PTR [esi+0x8],esi
  422ada:	pop    esi
  422adb:	ret    
  422adc:	int3   
  422add:	int3   
  422ade:	int3   
  422adf:	int3   
  422ae0:	push   ebp
  422ae1:	mov    ebp,esp
  422ae3:	and    esp,0xfffffff8
  422ae6:	mov    eax,DWORD PTR [esi+0x18]
  422ae9:	mov    ecx,DWORD PTR [esi]
  422aeb:	mov    edx,DWORD PTR [eax]
  422aed:	sub    esp,0x8
  422af0:	push   eax
  422af1:	push   ecx
  422af2:	push   edx
  422af3:	push   ecx
  422af4:	lea    eax,[esp+0x10]
  422af8:	push   eax
  422af9:	mov    eax,esi
  422afb:	call   0x422da0
  422b00:	mov    ecx,DWORD PTR [esi+0x18]
  422b03:	push   ecx
  422b04:	call   0x42504a
  422b09:	add    esp,0x4
  422b0c:	xor    eax,eax
  422b0e:	mov    DWORD PTR [esi+0x18],eax
  422b11:	mov    DWORD PTR [esi+0x1c],eax
  422b14:	mov    esp,ebp
  422b16:	pop    ebp
  422b17:	ret    
  422b18:	int3   
  422b19:	int3   
  422b1a:	int3   
  422b1b:	int3   
  422b1c:	int3   
  422b1d:	int3   
  422b1e:	int3   
  422b1f:	int3   
  422b20:	mov    eax,DWORD PTR [edi]
  422b22:	test   eax,eax
  422b24:	je     0x422b2a
  422b26:	cmp    eax,DWORD PTR [esi]
  422b28:	je     0x422b30
  422b2a:	call   DWORD PTR ds:0x430390
  422b30:	mov    eax,DWORD PTR [edi+0x4]
  422b33:	xor    ecx,ecx
  422b35:	cmp    eax,DWORD PTR [esi+0x4]
  422b38:	sete   cl
  422b3b:	mov    al,cl
  422b3d:	ret    
  422b3e:	int3   
  422b3f:	int3   
  422b40:	push   0xffffffff
  422b42:	push   0x42cde9
  422b47:	mov    eax,fs:0x0
  422b4d:	push   eax
  422b4e:	push   ecx
  422b4f:	push   esi
  422b50:	mov    eax,ds:0x43e020
  422b55:	xor    eax,esp
  422b57:	push   eax
  422b58:	lea    eax,[esp+0xc]
  422b5c:	mov    fs:0x0,eax
  422b62:	mov    esi,DWORD PTR [esp+0x1c]
  422b66:	mov    eax,DWORD PTR [esp+0x20]
  422b6a:	push   eax
  422b6b:	mov    ecx,esi
  422b6d:	call   DWORD PTR ds:0x430118
  422b73:	lea    ecx,[esi+0x1c]
  422b76:	push   ecx
  422b77:	mov    ecx,DWORD PTR [esp+0x28]
  422b7b:	mov    DWORD PTR [esp+0x18],0x0
  422b83:	call   0x423230
  422b88:	mov    eax,esi
  422b8a:	mov    ecx,DWORD PTR [esp+0xc]
  422b8e:	mov    DWORD PTR fs:0x0,ecx
  422b95:	pop    ecx
  422b96:	pop    esi
  422b97:	add    esp,0x10
  422b9a:	ret    0xc
  422b9d:	int3   
  422b9e:	int3   
  422b9f:	int3   
  422ba0:	sub    esp,0xc
  422ba3:	push   ebx
  422ba4:	push   ebp
  422ba5:	push   esi
  422ba6:	mov    esi,eax
  422ba8:	mov    ebx,DWORD PTR [esi+0x10]
  422bab:	push   edi
  422bac:	cmp    DWORD PTR [esi+0xc],ebx
  422baf:	jbe    0x422bb7
  422bb1:	call   DWORD PTR ds:0x430390
  422bb7:	mov    edi,DWORD PTR [esi+0xc]
  422bba:	mov    ebp,DWORD PTR [esi]
  422bbc:	cmp    edi,DWORD PTR [esi+0x10]
  422bbf:	jbe    0x422bc7
  422bc1:	call   DWORD PTR ds:0x430390
  422bc7:	mov    eax,DWORD PTR [esi]
  422bc9:	push   ebx
  422bca:	push   ebp
  422bcb:	push   edi
  422bcc:	push   eax
  422bcd:	lea    eax,[esp+0x20]
  422bd1:	push   eax
  422bd2:	call   0x423350
  422bd7:	pop    edi
  422bd8:	pop    esi
  422bd9:	pop    ebp
  422bda:	pop    ebx
  422bdb:	add    esp,0xc
  422bde:	ret    
  422bdf:	int3   
  422be0:	push   0xffffffff
  422be2:	push   0x42c480
  422be7:	mov    eax,fs:0x0
  422bed:	push   eax
  422bee:	sub    esp,0x8
  422bf1:	push   edi
  422bf2:	mov    eax,ds:0x43e020
  422bf7:	xor    eax,esp
  422bf9:	push   eax
  422bfa:	lea    eax,[esp+0x10]
  422bfe:	mov    fs:0x0,eax
  422c04:	mov    DWORD PTR [esp+0xc],esi
  422c08:	push   esi
  422c09:	lea    edi,[esp+0x24]
  422c0d:	mov    DWORD PTR [esp+0x1c],0x0
  422c15:	call   0x4226b0
  422c1a:	mov    BYTE PTR [esp+0x18],0x1
  422c1f:	mov    eax,DWORD PTR [esp+0x78]
  422c23:	mov    ecx,DWORD PTR [esp+0x7c]
  422c27:	mov    edx,DWORD PTR [esp+0x80]
  422c2e:	mov    DWORD PTR [esi+0x58],eax
  422c31:	mov    eax,DWORD PTR [esp+0x84]
  422c38:	mov    DWORD PTR [esi+0x5c],ecx
  422c3b:	lea    ecx,[esi+0x6c]
  422c3e:	mov    DWORD PTR [esi+0x60],edx
  422c41:	mov    DWORD PTR [esi+0x64],eax
  422c44:	mov    BYTE PTR [esi+0x68],0x0
  422c48:	call   DWORD PTR ds:0x430254
  422c4e:	mov    eax,esi
  422c50:	mov    BYTE PTR [esp+0x18],0x2
  422c55:	call   0x4233f0
  422c5a:	mov    ecx,edi
  422c5c:	push   ecx
  422c5d:	mov    DWORD PTR [esp+0x1c],0xffffffff
  422c65:	call   0x420e10
  422c6a:	mov    eax,esi
  422c6c:	mov    ecx,DWORD PTR [esp+0x10]
  422c70:	mov    DWORD PTR fs:0x0,ecx
  422c77:	pop    ecx
  422c78:	pop    edi
  422c79:	add    esp,0x14
  422c7c:	ret    0x68
  422c7f:	int3   
  422c80:	sub    esp,0x18
  422c83:	push   ebp
  422c84:	mov    ebp,DWORD PTR [esp+0x20]
  422c88:	push   esi
  422c89:	push   edi
  422c8a:	mov    edi,DWORD PTR [ebx+0x18]
  422c8d:	mov    esi,DWORD PTR [edi+0x4]
  422c90:	cmp    BYTE PTR [esi+0x41],0x0
  422c94:	mov    al,0x1
  422c96:	mov    BYTE PTR [esp+0x28],al
  422c9a:	jne    0x422cc9
  422c9c:	lea    esp,[esp+0x0]
  422ca0:	mov    ecx,DWORD PTR [esp+0x2c]
  422ca4:	lea    eax,[esi+0xc]
  422ca7:	push   eax
  422ca8:	push   ecx
  422ca9:	mov    edi,esi
  422cab:	call   DWORD PTR ds:0x4301e8
  422cb1:	add    esp,0x8
  422cb4:	mov    BYTE PTR [esp+0x28],al
  422cb8:	test   al,al
  422cba:	je     0x422cc0
  422cbc:	mov    esi,DWORD PTR [esi]
  422cbe:	jmp    0x422cc3
  422cc0:	mov    esi,DWORD PTR [esi+0x8]
  422cc3:	cmp    BYTE PTR [esi+0x41],0x0
  422cc7:	je     0x422ca0
  422cc9:	mov    esi,DWORD PTR [ebx]
  422ccb:	mov    DWORD PTR [esp+0x14],edi
  422ccf:	mov    DWORD PTR [esp+0x10],esi
  422cd3:	test   al,al
  422cd5:	je     0x422d30
  422cd7:	mov    edx,DWORD PTR [ebx+0x18]
  422cda:	mov    eax,DWORD PTR [edx]
  422cdc:	mov    DWORD PTR [esp+0x1c],eax
  422ce0:	test   esi,esi
  422ce2:	je     0x422ce8
  422ce4:	cmp    esi,esi
  422ce6:	je     0x422cee
  422ce8:	call   DWORD PTR ds:0x430390
  422cee:	cmp    edi,DWORD PTR [esp+0x1c]
  422cf2:	jne    0x422d23
  422cf4:	mov    ecx,DWORD PTR [esp+0x2c]
  422cf8:	push   ecx
  422cf9:	push   0x1
  422cfb:	lea    edx,[esp+0x20]
  422cff:	mov    ecx,edi
  422d01:	push   edx
  422d02:	mov    edi,ebx
  422d04:	call   0x422f40
  422d09:	mov    ecx,DWORD PTR [eax]
  422d0b:	mov    edx,DWORD PTR [eax+0x4]
  422d0e:	mov    DWORD PTR [ebp+0x0],ecx
  422d11:	mov    DWORD PTR [ebp+0x4],edx
  422d14:	mov    BYTE PTR [ebp+0x8],0x1
  422d18:	mov    eax,ebp
  422d1a:	pop    edi
  422d1b:	pop    esi
  422d1c:	pop    ebp
  422d1d:	add    esp,0x18
  422d20:	ret    0x8
  422d23:	lea    esi,[esp+0x10]
  422d27:	call   0x4238d0
  422d2c:	mov    esi,DWORD PTR [esp+0x10]
  422d30:	mov    eax,DWORD PTR [esp+0x2c]
  422d34:	mov    ecx,DWORD PTR [esp+0x14]
  422d38:	push   eax
  422d39:	add    ecx,0xc
  422d3c:	push   ecx
  422d3d:	call   DWORD PTR ds:0x4301e8
  422d43:	add    esp,0x8
  422d46:	test   al,al
  422d48:	je     0x422d7c
  422d4a:	mov    edx,DWORD PTR [esp+0x2c]
  422d4e:	mov    eax,DWORD PTR [esp+0x28]
  422d52:	push   edx
  422d53:	push   eax
  422d54:	lea    ecx,[esp+0x20]
  422d58:	push   ecx
  422d59:	mov    ecx,edi
  422d5b:	mov    edi,ebx
  422d5d:	call   0x422f40
  422d62:	mov    edx,DWORD PTR [eax]
  422d64:	mov    eax,DWORD PTR [eax+0x4]
  422d67:	mov    DWORD PTR [ebp+0x4],eax
  422d6a:	mov    DWORD PTR [ebp+0x0],edx
  422d6d:	mov    BYTE PTR [ebp+0x8],0x1
  422d71:	mov    eax,ebp
  422d73:	pop    edi
  422d74:	pop    esi
  422d75:	pop    ebp
  422d76:	add    esp,0x18
  422d79:	ret    0x8
  422d7c:	mov    ecx,DWORD PTR [esp+0x14]
  422d80:	pop    edi
  422d81:	mov    DWORD PTR [ebp+0x0],esi
  422d84:	pop    esi
  422d85:	mov    DWORD PTR [ebp+0x4],ecx
  422d88:	mov    BYTE PTR [ebp+0x8],0x0
  422d8c:	mov    eax,ebp
  422d8e:	pop    ebp
  422d8f:	add    esp,0x18
  422d92:	ret    0x8
  422d95:	int3   
  422d96:	int3   
  422d97:	int3   
  422d98:	int3   
  422d99:	int3   
  422d9a:	int3   
  422d9b:	int3   
  422d9c:	int3   
  422d9d:	int3   
  422d9e:	int3   
  422d9f:	int3   
  422da0:	sub    esp,0x8
  422da3:	push   ebx
  422da4:	mov    ebx,DWORD PTR [esp+0x14]
  422da8:	push   ebp
  422da9:	push   esi
  422daa:	push   edi
  422dab:	mov    edi,eax
  422dad:	mov    eax,DWORD PTR [edi+0x18]
  422db0:	mov    esi,DWORD PTR [eax]
  422db2:	mov    eax,DWORD PTR [edi]
  422db4:	test   ebx,ebx
  422db6:	je     0x422dbc
  422db8:	cmp    ebx,eax
  422dba:	je     0x422dc6
  422dbc:	call   DWORD PTR ds:0x430390
  422dc2:	mov    ebx,DWORD PTR [esp+0x20]
  422dc6:	cmp    DWORD PTR [esp+0x24],esi
  422dca:	jne    0x422e30
  422dcc:	mov    ecx,DWORD PTR [esp+0x28]
  422dd0:	mov    esi,DWORD PTR [edi+0x18]
  422dd3:	mov    eax,DWORD PTR [edi]
  422dd5:	test   ecx,ecx
  422dd7:	je     0x422ddd
  422dd9:	cmp    ecx,eax
  422ddb:	je     0x422de7
  422ddd:	call   DWORD PTR ds:0x430390
  422de3:	mov    ebx,DWORD PTR [esp+0x20]
  422de7:	cmp    DWORD PTR [esp+0x2c],esi
  422deb:	jne    0x422e30
  422ded:	mov    ecx,DWORD PTR [edi+0x18]
  422df0:	mov    edx,DWORD PTR [ecx+0x4]
  422df3:	push   edx
  422df4:	mov    ecx,edi
  422df6:	call   0x423740
  422dfb:	mov    eax,DWORD PTR [edi+0x18]
  422dfe:	mov    DWORD PTR [eax+0x4],eax
  422e01:	mov    eax,DWORD PTR [edi+0x18]
  422e04:	mov    DWORD PTR [edi+0x1c],0x0
  422e0b:	mov    DWORD PTR [eax],eax
  422e0d:	mov    eax,DWORD PTR [edi+0x18]
  422e10:	mov    DWORD PTR [eax+0x8],eax
  422e13:	mov    eax,DWORD PTR [edi+0x18]
  422e16:	mov    ecx,DWORD PTR [eax]
  422e18:	mov    eax,DWORD PTR [esp+0x1c]
  422e1c:	mov    edx,DWORD PTR [edi]
  422e1e:	mov    DWORD PTR [eax+0x4],ecx
  422e21:	mov    DWORD PTR [eax],edx
  422e23:	pop    edi
  422e24:	pop    esi
  422e25:	pop    ebp
  422e26:	pop    ebx
  422e27:	add    esp,0x8
  422e2a:	ret    0x14
  422e2d:	lea    ecx,[ecx+0x0]
  422e30:	test   ebx,ebx
  422e32:	je     0x422e3a
  422e34:	cmp    ebx,DWORD PTR [esp+0x28]
  422e38:	je     0x422e44
  422e3a:	call   DWORD PTR ds:0x430390
  422e40:	mov    ebx,DWORD PTR [esp+0x20]
  422e44:	mov    ebp,DWORD PTR [esp+0x24]
  422e48:	cmp    ebp,DWORD PTR [esp+0x2c]
  422e4c:	je     0x422e6a
  422e4e:	lea    esi,[esp+0x20]
  422e52:	call   0x423960
  422e57:	push   ebp
  422e58:	push   ebx
  422e59:	lea    eax,[esp+0x18]
  422e5d:	push   eax
  422e5e:	push   edi
  422e5f:	call   0x423450
  422e64:	mov    ebx,DWORD PTR [esp+0x20]
  422e68:	jmp    0x422e30
  422e6a:	mov    edi,DWORD PTR [edi]
  422e6c:	mov    eax,DWORD PTR [esp+0x1c]
  422e70:	mov    DWORD PTR [eax],edi
  422e72:	pop    edi
  422e73:	pop    esi
  422e74:	mov    DWORD PTR [eax+0x4],ebp
  422e77:	pop    ebp
  422e78:	pop    ebx
  422e79:	add    esp,0x8
  422e7c:	ret    0x14
  422e7f:	int3   
  422e80:	push   ebp
  422e81:	mov    ebp,esp
  422e83:	push   0xffffffff
  422e85:	push   0x42cd50
  422e8a:	mov    eax,fs:0x0
  422e90:	push   eax
  422e91:	sub    esp,0xc
  422e94:	push   ebx
  422e95:	push   esi
  422e96:	push   edi
  422e97:	mov    eax,ds:0x43e020
  422e9c:	xor    eax,ebp
  422e9e:	push   eax
  422e9f:	lea    eax,[ebp-0xc]
  422ea2:	mov    fs:0x0,eax
  422ea8:	mov    DWORD PTR [ebp-0x10],esp
  422eab:	mov    ebx,ecx
  422ead:	mov    DWORD PTR [ebp-0x18],ebx
  422eb0:	mov    edi,DWORD PTR [ebp+0x8]
  422eb3:	cmp    BYTE PTR [edi+0x41],0x0
  422eb7:	mov    eax,DWORD PTR [ebx+0x18]
  422eba:	mov    DWORD PTR [ebp-0x14],eax
  422ebd:	jne    0x422f04
  422ebf:	movzx  ecx,BYTE PTR [edi+0x40]
  422ec3:	push   ecx
  422ec4:	mov    ecx,DWORD PTR [ebp+0xc]
  422ec7:	lea    edx,[edi+0xc]
  422eca:	push   edx
  422ecb:	push   eax
  422ecc:	push   ecx
  422ecd:	push   eax
  422ece:	call   0x423820
  422ed3:	mov    edx,DWORD PTR [ebp-0x14]
  422ed6:	cmp    BYTE PTR [edx+0x41],0x0
  422eda:	mov    esi,eax
  422edc:	je     0x422ee1
  422ede:	mov    DWORD PTR [ebp-0x14],esi
  422ee1:	mov    DWORD PTR [ebp-0x4],0x0
  422ee8:	mov    eax,DWORD PTR [edi]
  422eea:	push   esi
  422eeb:	push   eax
  422eec:	mov    ecx,ebx
  422eee:	call   0x422e80
  422ef3:	mov    DWORD PTR [esi],eax
  422ef5:	mov    ecx,DWORD PTR [edi+0x8]
  422ef8:	push   esi
  422ef9:	push   ecx
  422efa:	mov    ecx,ebx
  422efc:	call   0x422e80
  422f01:	mov    DWORD PTR [esi+0x8],eax
  422f04:	mov    eax,DWORD PTR [ebp-0x14]
  422f07:	mov    ecx,DWORD PTR [ebp-0xc]
  422f0a:	mov    DWORD PTR fs:0x0,ecx
  422f11:	pop    ecx
  422f12:	pop    edi
  422f13:	pop    esi
  422f14:	pop    ebx
  422f15:	mov    esp,ebp
  422f17:	pop    ebp
  422f18:	ret    0x8
  422f1b:	mov    edx,DWORD PTR [ebp-0x14]
  422f1e:	mov    ecx,DWORD PTR [ebp-0x18]
  422f21:	push   edx
  422f22:	call   0x423740
  422f27:	push   0x0
  422f29:	push   0x0
  422f2b:	call   0x429e76
  422f30:	int3   
  422f31:	int3   
  422f32:	int3   
  422f33:	int3   
  422f34:	int3   
  422f35:	int3   
  422f36:	int3   
  422f37:	int3   
  422f38:	int3   
  422f39:	int3   
  422f3a:	int3   
  422f3b:	int3   
  422f3c:	int3   
  422f3d:	int3   
  422f3e:	int3   
  422f3f:	int3   
  422f40:	push   0xffffffff
  422f42:	push   0x42cd29
  422f47:	mov    eax,fs:0x0
  422f4d:	push   eax
  422f4e:	sub    esp,0x4c
  422f51:	push   ebx
  422f52:	push   ebp
  422f53:	push   esi
  422f54:	mov    eax,ds:0x43e020
  422f59:	xor    eax,esp
  422f5b:	push   eax
  422f5c:	lea    eax,[esp+0x5c]
  422f60:	mov    fs:0x0,eax
  422f66:	mov    esi,ecx
  422f68:	cmp    DWORD PTR [edi+0x1c],0x4ec4ec3
  422f6f:	jb     0x422fad
  422f71:	push   0x431e30
  422f76:	lea    ecx,[esp+0x18]
  422f7a:	call   DWORD PTR ds:0x43011c
  422f80:	lea    eax,[esp+0x14]
  422f84:	push   eax
  422f85:	lea    ecx,[esp+0x34]
  422f89:	mov    DWORD PTR [esp+0x68],0x0
  422f91:	call   0x402940
  422f96:	push   0x435684
  422f9b:	lea    ecx,[esp+0x34]
  422f9f:	push   ecx
  422fa0:	mov    DWORD PTR [esp+0x38],0x430604
  422fa8:	call   0x429e76
  422fad:	mov    edx,DWORD PTR [esp+0x74]
  422fb1:	mov    eax,DWORD PTR [edi+0x18]
  422fb4:	xor    ebx,ebx
  422fb6:	push   ebx
  422fb7:	push   edx
  422fb8:	push   eax
  422fb9:	push   esi
  422fba:	push   eax
  422fbb:	call   0x423820
  422fc0:	inc    DWORD PTR [edi+0x1c]
  422fc3:	mov    ebp,eax
  422fc5:	mov    eax,DWORD PTR [edi+0x18]
  422fc8:	cmp    esi,eax
  422fca:	jne    0x422fdc
  422fcc:	mov    DWORD PTR [eax+0x4],ebp
  422fcf:	mov    eax,DWORD PTR [edi+0x18]
  422fd2:	mov    DWORD PTR [eax],ebp
  422fd4:	mov    ecx,DWORD PTR [edi+0x18]
  422fd7:	mov    DWORD PTR [ecx+0x8],ebp
  422fda:	jmp    0x422ffd
  422fdc:	cmp    BYTE PTR [esp+0x70],bl
  422fe0:	je     0x422fef
  422fe2:	mov    DWORD PTR [esi],ebp
  422fe4:	mov    eax,DWORD PTR [edi+0x18]
  422fe7:	cmp    esi,DWORD PTR [eax]
  422fe9:	jne    0x422ffd
  422feb:	mov    DWORD PTR [eax],ebp
  422fed:	jmp    0x422ffd
  422fef:	mov    DWORD PTR [esi+0x8],ebp
  422ff2:	mov    eax,DWORD PTR [edi+0x18]
  422ff5:	cmp    esi,DWORD PTR [eax+0x8]
  422ff8:	jne    0x422ffd
  422ffa:	mov    DWORD PTR [eax+0x8],ebp
  422ffd:	mov    edx,DWORD PTR [ebp+0x4]
  423000:	lea    eax,[ebp+0x4]
  423003:	mov    esi,ebp
  423005:	cmp    BYTE PTR [edx+0x40],bl
  423008:	jne    0x423148
  42300e:	mov    edi,edi
  423010:	mov    ecx,DWORD PTR [eax]
  423012:	mov    edx,DWORD PTR [ecx+0x4]
  423015:	cmp    ecx,DWORD PTR [edx]
  423017:	jne    0x4230c1
  42301d:	mov    edx,DWORD PTR [edx+0x8]
  423020:	cmp    BYTE PTR [edx+0x40],bl
  423023:	je     0x4230c8
  423029:	cmp    esi,DWORD PTR [ecx+0x8]
  42302c:	jne    0x423069
  42302e:	mov    esi,ecx
  423030:	mov    ecx,DWORD PTR [esi+0x8]
  423033:	mov    eax,DWORD PTR [ecx]
  423035:	mov    DWORD PTR [esi+0x8],eax
  423038:	mov    eax,DWORD PTR [ecx]
  42303a:	cmp    BYTE PTR [eax+0x41],bl
  42303d:	jne    0x423042
  42303f:	mov    DWORD PTR [eax+0x4],esi
  423042:	mov    edx,DWORD PTR [esi+0x4]
  423045:	lea    eax,[esi+0x4]
  423048:	mov    DWORD PTR [ecx+0x4],edx
  42304b:	mov    edx,DWORD PTR [edi+0x18]
  42304e:	cmp    esi,DWORD PTR [edx+0x4]
  423051:	jne    0x423058
  423053:	mov    DWORD PTR [edx+0x4],ecx
  423056:	jmp    0x423065
  423058:	mov    edx,DWORD PTR [eax]
  42305a:	cmp    esi,DWORD PTR [edx]
  42305c:	jne    0x423062
  42305e:	mov    DWORD PTR [edx],ecx
  423060:	jmp    0x423065
  423062:	mov    DWORD PTR [edx+0x8],ecx
  423065:	mov    DWORD PTR [ecx],esi
  423067:	mov    DWORD PTR [eax],ecx
  423069:	mov    ecx,DWORD PTR [eax]
  42306b:	mov    BYTE PTR [ecx+0x40],0x1
  42306f:	mov    edx,DWORD PTR [eax]
  423071:	mov    ecx,DWORD PTR [edx+0x4]
  423074:	mov    BYTE PTR [ecx+0x40],bl
  423077:	mov    edx,DWORD PTR [eax]
  423079:	mov    eax,DWORD PTR [edx+0x4]
  42307c:	mov    ecx,DWORD PTR [eax]
  42307e:	mov    edx,DWORD PTR [ecx+0x8]
  423081:	mov    DWORD PTR [eax],edx
  423083:	mov    edx,DWORD PTR [ecx+0x8]
  423086:	cmp    BYTE PTR [edx+0x41],bl
  423089:	jne    0x42308e
  42308b:	mov    DWORD PTR [edx+0x4],eax
  42308e:	mov    edx,DWORD PTR [eax+0x4]
  423091:	mov    DWORD PTR [ecx+0x4],edx
  423094:	mov    edx,DWORD PTR [edi+0x18]
  423097:	cmp    eax,DWORD PTR [edx+0x4]
  42309a:	jne    0x4230a7
  42309c:	mov    DWORD PTR [edx+0x4],ecx
  42309f:	mov    DWORD PTR [ecx+0x8],eax
  4230a2:	jmp    0x423136
  4230a7:	mov    edx,DWORD PTR [eax+0x4]
  4230aa:	cmp    eax,DWORD PTR [edx+0x8]
  4230ad:	jne    0x4230ba
  4230af:	mov    DWORD PTR [edx+0x8],ecx
  4230b2:	mov    DWORD PTR [ecx+0x8],eax
  4230b5:	jmp    0x423136
  4230ba:	mov    DWORD PTR [edx],ecx
  4230bc:	mov    DWORD PTR [ecx+0x8],eax
  4230bf:	jmp    0x423136
  4230c1:	mov    edx,DWORD PTR [edx]
  4230c3:	cmp    BYTE PTR [edx+0x40],bl
  4230c6:	jne    0x4230df
  4230c8:	mov    BYTE PTR [ecx+0x40],0x1
  4230cc:	mov    BYTE PTR [edx+0x40],0x1
  4230d0:	mov    edx,DWORD PTR [eax]
  4230d2:	mov    ecx,DWORD PTR [edx+0x4]
  4230d5:	mov    BYTE PTR [ecx+0x40],bl
  4230d8:	mov    edx,DWORD PTR [eax]
  4230da:	mov    esi,DWORD PTR [edx+0x4]
  4230dd:	jmp    0x423139
  4230df:	cmp    esi,DWORD PTR [ecx]
  4230e1:	jne    0x4230eb
  4230e3:	push   edi
  4230e4:	mov    esi,ecx
  4230e6:	call   0x4237d0
  4230eb:	mov    eax,DWORD PTR [esi+0x4]
  4230ee:	mov    BYTE PTR [eax+0x40],0x1
  4230f2:	mov    ecx,DWORD PTR [esi+0x4]
  4230f5:	mov    edx,DWORD PTR [ecx+0x4]
  4230f8:	mov    BYTE PTR [edx+0x40],bl
  4230fb:	mov    eax,DWORD PTR [esi+0x4]
  4230fe:	mov    eax,DWORD PTR [eax+0x4]
  423101:	mov    ecx,DWORD PTR [eax+0x8]
  423104:	mov    edx,DWORD PTR [ecx]
  423106:	mov    DWORD PTR [eax+0x8],edx
  423109:	mov    edx,DWORD PTR [ecx]
  42310b:	cmp    BYTE PTR [edx+0x41],bl
  42310e:	jne    0x423113
  423110:	mov    DWORD PTR [edx+0x4],eax
  423113:	mov    edx,DWORD PTR [eax+0x4]
  423116:	mov    DWORD PTR [ecx+0x4],edx
  423119:	mov    edx,DWORD PTR [edi+0x18]
  42311c:	cmp    eax,DWORD PTR [edx+0x4]
  42311f:	jne    0x423126
  423121:	mov    DWORD PTR [edx+0x4],ecx
  423124:	jmp    0x423134
  423126:	mov    edx,DWORD PTR [eax+0x4]
  423129:	cmp    eax,DWORD PTR [edx]
  42312b:	jne    0x423131
  42312d:	mov    DWORD PTR [edx],ecx
  42312f:	jmp    0x423134
  423131:	mov    DWORD PTR [edx+0x8],ecx
  423134:	mov    DWORD PTR [ecx],eax
  423136:	mov    DWORD PTR [eax+0x4],ecx
  423139:	mov    ecx,DWORD PTR [esi+0x4]
  42313c:	lea    eax,[esi+0x4]
  42313f:	cmp    BYTE PTR [ecx+0x40],bl
  423142:	je     0x423010
  423148:	mov    edx,DWORD PTR [edi+0x18]
  42314b:	mov    eax,DWORD PTR [edx+0x4]
  42314e:	mov    BYTE PTR [eax+0x40],0x1
  423152:	mov    eax,DWORD PTR [esp+0x6c]
  423156:	mov    ecx,DWORD PTR [edi]
  423158:	mov    DWORD PTR [eax+0x4],ebp
  42315b:	mov    DWORD PTR [eax],ecx
  42315d:	mov    ecx,DWORD PTR [esp+0x5c]
  423161:	mov    DWORD PTR fs:0x0,ecx
  423168:	pop    ecx
  423169:	pop    esi
  42316a:	pop    ebp
  42316b:	pop    ebx
  42316c:	add    esp,0x58
  42316f:	ret    0xc
  423172:	int3   
  423173:	int3   
  423174:	int3   
  423175:	int3   
  423176:	int3   
  423177:	int3   
  423178:	int3   
  423179:	int3   
  42317a:	int3   
  42317b:	int3   
  42317c:	int3   
  42317d:	int3   
  42317e:	int3   
  42317f:	int3   
  423180:	mov    eax,DWORD PTR [eax+0x18]
  423183:	push   ebp
  423184:	mov    ebp,DWORD PTR [esp+0x8]
  423188:	push   esi
  423189:	mov    esi,DWORD PTR [eax+0x4]
  42318c:	cmp    BYTE PTR [esi+0x41],0x0
  423190:	push   edi
  423191:	mov    edi,eax
  423193:	jne    0x4231c0
  423195:	push   ebx
  423196:	mov    ebx,DWORD PTR ds:0x4301e8
  42319c:	lea    esp,[esp+0x0]
  4231a0:	lea    ecx,[esi+0xc]
  4231a3:	push   ebp
  4231a4:	push   ecx
  4231a5:	call   ebx
  4231a7:	add    esp,0x8
  4231aa:	test   al,al
  4231ac:	je     0x4231b3
  4231ae:	mov    esi,DWORD PTR [esi+0x8]
  4231b1:	jmp    0x4231b7
  4231b3:	mov    edi,esi
  4231b5:	mov    esi,DWORD PTR [esi]
  4231b7:	cmp    BYTE PTR [esi+0x41],0x0
  4231bb:	je     0x4231a0
  4231bd:	mov    eax,edi
  4231bf:	pop    ebx
  4231c0:	pop    edi
  4231c1:	pop    esi
  4231c2:	pop    ebp
  4231c3:	ret    0x4
  4231c6:	int3   
  4231c7:	int3   
  4231c8:	int3   
  4231c9:	int3   
  4231ca:	int3   
  4231cb:	int3   
  4231cc:	int3   
  4231cd:	int3   
  4231ce:	int3   
  4231cf:	int3   
  4231d0:	mov    ecx,DWORD PTR [eax+0x8]
  4231d3:	cmp    BYTE PTR [ecx+0x41],0x0
  4231d7:	jne    0x4231eb
  4231d9:	lea    esp,[esp+0x0]
  4231e0:	mov    eax,ecx
  4231e2:	mov    ecx,DWORD PTR [eax+0x8]
  4231e5:	cmp    BYTE PTR [ecx+0x41],0x0
  4231e9:	je     0x4231e0
  4231eb:	ret    
  4231ec:	int3   
  4231ed:	int3   
  4231ee:	int3   
  4231ef:	int3   
  4231f0:	mov    ecx,0x1
  4231f5:	call   0x423fb0
  4231fa:	test   eax,eax
  4231fc:	je     0x423204
  4231fe:	mov    DWORD PTR [eax],0x0
  423204:	lea    ecx,[eax+0x4]
  423207:	test   ecx,ecx
  423209:	je     0x423211
  42320b:	mov    DWORD PTR [ecx],0x0
  423211:	lea    ecx,[eax+0x8]
  423214:	test   ecx,ecx
  423216:	je     0x42321e
  423218:	mov    DWORD PTR [ecx],0x0
  42321e:	mov    BYTE PTR [eax+0x40],0x1
  423222:	mov    BYTE PTR [eax+0x41],0x0
  423226:	ret    
  423227:	int3   
  423228:	int3   
  423229:	int3   
  42322a:	int3   
  42322b:	int3   
  42322c:	int3   
  42322d:	int3   
  42322e:	int3   
  42322f:	int3   
  423230:	push   ebp
  423231:	mov    ebp,esp
  423233:	push   0xffffffff
  423235:	push   0x42c438
  42323a:	mov    eax,fs:0x0
  423240:	push   eax
  423241:	sub    esp,0x10
  423244:	push   ebx
  423245:	push   esi
  423246:	push   edi
  423247:	mov    eax,ds:0x43e020
  42324c:	xor    eax,ebp
  42324e:	push   eax
  42324f:	lea    eax,[ebp-0xc]
  423252:	mov    fs:0x0,eax
  423258:	mov    DWORD PTR [ebp-0x10],esp
  42325b:	mov    ebx,ecx
  42325d:	mov    esi,DWORD PTR [ebp+0x8]
  423260:	push   0x4
  423262:	call   0x425050
  423267:	add    esp,0x4
  42326a:	test   eax,eax
  42326c:	je     0x423272
  42326e:	mov    DWORD PTR [eax],esi
  423270:	jmp    0x423274
  423272:	xor    eax,eax
  423274:	mov    DWORD PTR [esi],eax
  423276:	mov    DWORD PTR [ebp-0x4],0x0
  42327d:	mov    ecx,DWORD PTR [ebx+0x10]
  423280:	sub    ecx,DWORD PTR [ebx+0xc]
  423283:	mov    eax,0x92492493
  423288:	imul   ecx
  42328a:	add    edx,ecx
  42328c:	sar    edx,0x4
  42328f:	mov    edi,edx
  423291:	mov    eax,0x0
  423296:	shr    edi,0x1f
  423299:	add    edi,edx
  42329b:	mov    DWORD PTR [esi+0xc],eax
  42329e:	mov    DWORD PTR [esi+0x10],eax
  4232a1:	mov    DWORD PTR [esi+0x14],eax
  4232a4:	je     0x42331d
  4232a6:	cmp    edi,0x9249249
  4232ac:	jbe    0x4232b3
  4232ae:	call   0x414b60
  4232b3:	cmp    edi,eax
  4232b5:	ja     0x4232c2
  4232b7:	push   eax
  4232b8:	call   0x425050
  4232bd:	add    esp,0x4
  4232c0:	jmp    0x4232c9
  4232c2:	mov    ecx,edi
  4232c4:	call   0x417c30
  4232c9:	lea    ecx,[edi*8+0x0]
  4232d0:	sub    ecx,edi
  4232d2:	lea    edx,[eax+ecx*4]
  4232d5:	mov    DWORD PTR [esi+0xc],eax
  4232d8:	mov    DWORD PTR [esi+0x10],eax
  4232db:	mov    DWORD PTR [esi+0x14],edx
  4232de:	mov    BYTE PTR [ebp-0x4],0x1
  4232e2:	mov    eax,DWORD PTR [ebx+0x10]
  4232e5:	mov    DWORD PTR [ebp-0x14],eax
  4232e8:	cmp    DWORD PTR [ebx+0xc],eax
  4232eb:	jbe    0x4232f3
  4232ed:	call   DWORD PTR ds:0x430390
  4232f3:	mov    edi,DWORD PTR [ebx+0xc]
  4232f6:	mov    eax,DWORD PTR [ebx]
  4232f8:	mov    DWORD PTR [ebp-0x1c],eax
  4232fb:	cmp    edi,DWORD PTR [ebx+0x10]
  4232fe:	jbe    0x423306
  423300:	call   DWORD PTR ds:0x430390
  423306:	mov    ecx,DWORD PTR [ebp-0x14]
  423309:	mov    edx,DWORD PTR [ebp-0x1c]
  42330c:	mov    ebx,DWORD PTR [ebx]
  42330e:	push   ecx
  42330f:	push   edx
  423310:	mov    edx,DWORD PTR [esi+0xc]
  423313:	push   edi
  423314:	push   ebx
  423315:	call   0x423c60
  42331a:	mov    DWORD PTR [esi+0x10],eax
  42331d:	mov    eax,esi
  42331f:	mov    ecx,DWORD PTR [ebp-0xc]
  423322:	mov    DWORD PTR fs:0x0,ecx
  423329:	pop    ecx
  42332a:	pop    edi
  42332b:	pop    esi
  42332c:	pop    ebx
  42332d:	mov    esp,ebp
  42332f:	pop    ebp
  423330:	ret    0x4
  423333:	mov    ebx,DWORD PTR [ebp+0x8]
  423336:	call   0x414230
  42333b:	push   0x0
  42333d:	push   0x0
  42333f:	call   0x429e76
  423344:	int3   
  423345:	int3   
  423346:	int3   
  423347:	int3   
  423348:	int3   
  423349:	int3   
  42334a:	int3   
  42334b:	int3   
  42334c:	int3   
  42334d:	int3   
  42334e:	int3   
  42334f:	int3   
  423350:	push   ebx
  423351:	push   ebp
  423352:	mov    ebp,DWORD PTR ds:0x430390
  423358:	push   edi
  423359:	mov    edi,DWORD PTR [esp+0x10]
  42335d:	mov    DWORD PTR [edi],0x0
  423363:	test   esi,esi
  423365:	je     0x423375
  423367:	mov    eax,DWORD PTR [esp+0x18]
  42336b:	cmp    DWORD PTR [esi+0xc],eax
  42336e:	ja     0x423375
  423370:	cmp    eax,DWORD PTR [esi+0x10]
  423373:	jbe    0x42337b
  423375:	call   ebp
  423377:	mov    eax,DWORD PTR [esp+0x18]
  42337b:	mov    ebx,DWORD PTR [esp+0x20]
  42337f:	mov    ecx,DWORD PTR [esi]
  423381:	mov    DWORD PTR [edi],ecx
  423383:	mov    DWORD PTR [edi+0x4],eax
  423386:	cmp    DWORD PTR [esi+0xc],ebx
  423389:	ja     0x423390
  42338b:	cmp    ebx,DWORD PTR [esi+0x10]
  42338e:	jbe    0x423396
  423390:	call   ebp
  423392:	mov    ebx,DWORD PTR [esp+0x20]
  423396:	mov    eax,DWORD PTR [edi]
  423398:	mov    ecx,DWORD PTR [esi]
  42339a:	test   eax,eax
  42339c:	je     0x4233a2
  42339e:	cmp    eax,ecx
  4233a0:	je     0x4233a4
  4233a2:	call   ebp
  4233a4:	mov    eax,DWORD PTR [edi+0x4]
  4233a7:	cmp    eax,ebx
  4233a9:	je     0x4233dc
  4233ab:	mov    edi,DWORD PTR [esi+0x10]
  4233ae:	mov    ecx,ebx
  4233b0:	call   0x423be0
  4233b5:	mov    ebp,DWORD PTR [esi+0x10]
  4233b8:	mov    ebx,eax
  4233ba:	mov    edi,ebx
  4233bc:	cmp    ebx,ebp
  4233be:	je     0x4233cf
  4233c0:	mov    ecx,edi
  4233c2:	call   DWORD PTR ds:0x430264
  4233c8:	add    edi,0x1c
  4233cb:	cmp    edi,ebp
  4233cd:	jne    0x4233c0
  4233cf:	mov    DWORD PTR [esi+0x10],ebx
  4233d2:	mov    eax,DWORD PTR [esp+0x10]
  4233d6:	pop    edi
  4233d7:	pop    ebp
  4233d8:	pop    ebx
  4233d9:	ret    0x14
  4233dc:	mov    eax,edi
  4233de:	pop    edi
  4233df:	pop    ebp
  4233e0:	pop    ebx
  4233e1:	ret    0x14
  4233e4:	int3   
  4233e5:	int3   
  4233e6:	int3   
  4233e7:	int3   
  4233e8:	int3   
  4233e9:	int3   
  4233ea:	int3   
  4233eb:	int3   
  4233ec:	int3   
  4233ed:	int3   
  4233ee:	int3   
  4233ef:	int3   
  4233f0:	push   ecx
  4233f1:	push   esi
  4233f2:	push   edi
  4233f3:	mov    edi,eax
  4233f5:	cmp    BYTE PTR [edi+0x68],0x0
  4233f9:	jne    0x42343f
  4233fb:	lea    esi,[edi+0x58]
  4233fe:	mov    BYTE PTR [edi+0x54],0x0
  423402:	mov    eax,DWORD PTR [esi]
  423404:	cmp    eax,0xfffffffc
  423407:	je     0x423418
  423409:	test   eax,eax
  42340b:	je     0x423412
  42340d:	cmp    eax,DWORD PTR [edi+0x60]
  423410:	je     0x423418
  423412:	call   DWORD PTR ds:0x430390
  423418:	mov    eax,DWORD PTR [esi+0x4]
  42341b:	cmp    eax,DWORD PTR [edi+0x64]
  42341e:	je     0x42343a
  423420:	mov    ecx,DWORD PTR [edi+0x64]
  423423:	mov    edx,DWORD PTR [edi+0x60]
  423426:	push   ecx
  423427:	push   edx
  423428:	lea    eax,[edi+0x6c]
  42342b:	push   eax
  42342c:	mov    ecx,esi
  42342e:	call   0x423c90
  423433:	mov    BYTE PTR [edi+0x68],al
  423436:	pop    edi
  423437:	pop    esi
  423438:	pop    ecx
  423439:	ret    
  42343a:	xor    al,al
  42343c:	mov    BYTE PTR [edi+0x68],al
  42343f:	pop    edi
  423440:	pop    esi
  423441:	pop    ecx
  423442:	ret    
  423443:	int3   
  423444:	int3   
  423445:	int3   
  423446:	int3   
  423447:	int3   
  423448:	int3   
  423449:	int3   
  42344a:	int3   
  42344b:	int3   
  42344c:	int3   
  42344d:	int3   
  42344e:	int3   
  42344f:	int3   
  423450:	push   0xffffffff
  423452:	push   0x42ccf9
  423457:	mov    eax,fs:0x0
  42345d:	push   eax
  42345e:	sub    esp,0x44
  423461:	push   ebx
  423462:	push   ebp
  423463:	push   esi
  423464:	push   edi
  423465:	mov    eax,ds:0x43e020
  42346a:	xor    eax,esp
  42346c:	push   eax
  42346d:	lea    eax,[esp+0x58]
  423471:	mov    fs:0x0,eax
  423477:	mov    eax,DWORD PTR [esp+0x74]
  42347b:	cmp    BYTE PTR [eax+0x41],0x0
  42347f:	je     0x4234bd
  423481:	push   0x431e44
  423486:	lea    ecx,[esp+0x18]
  42348a:	call   DWORD PTR ds:0x43011c
  423490:	lea    eax,[esp+0x14]
  423494:	push   eax
  423495:	lea    ecx,[esp+0x34]
  423499:	mov    DWORD PTR [esp+0x64],0x0
  4234a1:	call   0x402940
  4234a6:	push   0x435d50
  4234ab:	lea    ecx,[esp+0x34]
  4234af:	push   ecx
  4234b0:	mov    DWORD PTR [esp+0x38],0x431490
  4234b8:	call   0x429e76
  4234bd:	lea    esi,[esp+0x70]
  4234c1:	mov    ebp,eax
  4234c3:	call   0x423960
  4234c8:	mov    ecx,DWORD PTR [ebp+0x0]
  4234cb:	cmp    BYTE PTR [ecx+0x41],0x0
  4234cf:	je     0x4234d6
  4234d1:	mov    edi,DWORD PTR [ebp+0x8]
  4234d4:	jmp    0x4234f1
  4234d6:	mov    edx,DWORD PTR [ebp+0x8]
  4234d9:	cmp    BYTE PTR [edx+0x41],0x0
  4234dd:	je     0x4234e3
  4234df:	mov    edi,ecx
  4234e1:	jmp    0x4234f1
  4234e3:	mov    eax,DWORD PTR [esp+0x74]
  4234e7:	mov    edi,DWORD PTR [eax+0x8]
  4234ea:	lea    edx,[eax+0x8]
  4234ed:	cmp    eax,ebp
  4234ef:	jne    0x423565
  4234f1:	cmp    BYTE PTR [edi+0x41],0x0
  4234f5:	mov    esi,DWORD PTR [ebp+0x4]
  4234f8:	jne    0x4234fd
  4234fa:	mov    DWORD PTR [edi+0x4],esi
  4234fd:	mov    ecx,DWORD PTR [esp+0x68]
  423501:	mov    eax,DWORD PTR [ecx+0x18]
  423504:	cmp    DWORD PTR [eax+0x4],ebp
  423507:	jne    0x42350e
  423509:	mov    DWORD PTR [eax+0x4],edi
  42350c:	jmp    0x423519
  42350e:	cmp    DWORD PTR [esi],ebp
  423510:	jne    0x423516
  423512:	mov    DWORD PTR [esi],edi
  423514:	jmp    0x423519
  423516:	mov    DWORD PTR [esi+0x8],edi
  423519:	mov    edx,DWORD PTR [ecx+0x18]
  42351c:	cmp    DWORD PTR [edx],ebp
  42351e:	jne    0x423540
  423520:	cmp    BYTE PTR [edi+0x41],0x0
  423524:	je     0x42352a
  423526:	mov    ecx,esi
  423528:	jmp    0x42353e
  42352a:	mov    eax,DWORD PTR [edi]
  42352c:	cmp    BYTE PTR [eax+0x41],0x0
  423530:	mov    ecx,edi
  423532:	jne    0x42353e
  423534:	mov    ecx,eax
  423536:	mov    eax,DWORD PTR [ecx]
  423538:	cmp    BYTE PTR [eax+0x41],0x0
  42353c:	je     0x423534
  42353e:	mov    DWORD PTR [edx],ecx
  423540:	mov    eax,DWORD PTR [esp+0x68]
  423544:	mov    ebx,DWORD PTR [eax+0x18]
  423547:	cmp    DWORD PTR [ebx+0x8],ebp
  42354a:	jne    0x4235c6
  42354c:	cmp    BYTE PTR [edi+0x41],0x0
  423550:	je     0x423559
  423552:	mov    eax,esi
  423554:	mov    DWORD PTR [ebx+0x8],eax
  423557:	jmp    0x4235c6
  423559:	mov    eax,edi
  42355b:	call   0x4231d0
  423560:	mov    DWORD PTR [ebx+0x8],eax
  423563:	jmp    0x4235c6
  423565:	mov    DWORD PTR [ecx+0x4],eax
  423568:	mov    ecx,DWORD PTR [ebp+0x0]
  42356b:	mov    DWORD PTR [eax],ecx
  42356d:	cmp    eax,DWORD PTR [ebp+0x8]
  423570:	jne    0x423576
  423572:	mov    esi,eax
  423574:	jmp    0x42358f
  423576:	cmp    BYTE PTR [edi+0x41],0x0
  42357a:	mov    esi,DWORD PTR [eax+0x4]
  42357d:	jne    0x423582
  42357f:	mov    DWORD PTR [edi+0x4],esi
  423582:	mov    DWORD PTR [esi],edi
  423584:	mov    ecx,DWORD PTR [ebp+0x8]
  423587:	mov    DWORD PTR [edx],ecx
  423589:	mov    edx,DWORD PTR [ebp+0x8]
  42358c:	mov    DWORD PTR [edx+0x4],eax
  42358f:	mov    ecx,DWORD PTR [esp+0x68]
  423593:	mov    ecx,DWORD PTR [ecx+0x18]
  423596:	cmp    DWORD PTR [ecx+0x4],ebp
  423599:	jne    0x4235a0
  42359b:	mov    DWORD PTR [ecx+0x4],eax
  42359e:	jmp    0x4235ae
  4235a0:	mov    ecx,DWORD PTR [ebp+0x4]
  4235a3:	cmp    DWORD PTR [ecx],ebp
  4235a5:	jne    0x4235ab
  4235a7:	mov    DWORD PTR [ecx],eax
  4235a9:	jmp    0x4235ae
  4235ab:	mov    DWORD PTR [ecx+0x8],eax
  4235ae:	mov    edx,DWORD PTR [ebp+0x4]
  4235b1:	mov    DWORD PTR [eax+0x4],edx
  4235b4:	lea    ecx,[ebp+0x40]
  4235b7:	add    eax,0x40
  4235ba:	cmp    eax,ecx
  4235bc:	je     0x4235c6
  4235be:	mov    bl,BYTE PTR [ecx]
  4235c0:	mov    dl,BYTE PTR [eax]
  4235c2:	mov    BYTE PTR [eax],bl
  4235c4:	mov    BYTE PTR [ecx],dl
  4235c6:	mov    bl,0x1
  4235c8:	cmp    BYTE PTR [ebp+0x40],bl
  4235cb:	jne    0x4236eb
  4235d1:	mov    eax,DWORD PTR [esp+0x68]
  4235d5:	mov    ecx,DWORD PTR [eax+0x18]
  4235d8:	cmp    edi,DWORD PTR [ecx+0x4]
  4235db:	je     0x4236e8
  4235e1:	cmp    BYTE PTR [edi+0x40],bl
  4235e4:	jne    0x4236e8
  4235ea:	mov    ecx,DWORD PTR [esi]
  4235ec:	cmp    edi,ecx
  4235ee:	jne    0x423666
  4235f0:	mov    ecx,DWORD PTR [esi+0x8]
  4235f3:	cmp    BYTE PTR [ecx+0x40],0x0
  4235f7:	jne    0x42360f
  4235f9:	mov    edx,DWORD PTR [esp+0x68]
  4235fd:	mov    BYTE PTR [ecx+0x40],bl
  423600:	push   edx
  423601:	mov    ecx,esi
  423603:	mov    BYTE PTR [esi+0x40],0x0
  423607:	call   0x423780
  42360c:	mov    ecx,DWORD PTR [esi+0x8]
  42360f:	cmp    BYTE PTR [ecx+0x41],0x0
  423613:	jne    0x42369a
  423619:	mov    eax,DWORD PTR [ecx]
  42361b:	cmp    BYTE PTR [eax+0x40],bl
  42361e:	jne    0x423628
  423620:	mov    edx,DWORD PTR [ecx+0x8]
  423623:	cmp    BYTE PTR [edx+0x40],bl
  423626:	je     0x423696
  423628:	mov    eax,DWORD PTR [ecx+0x8]
  42362b:	cmp    BYTE PTR [eax+0x40],bl
  42362e:	jne    0x423646
  423630:	mov    edx,DWORD PTR [ecx]
  423632:	mov    eax,DWORD PTR [esp+0x68]
  423636:	mov    BYTE PTR [edx+0x40],bl
  423639:	push   eax
  42363a:	mov    BYTE PTR [ecx+0x40],0x0
  42363e:	call   0x4237d0
  423643:	mov    ecx,DWORD PTR [esi+0x8]
  423646:	mov    dl,BYTE PTR [esi+0x40]
  423649:	mov    BYTE PTR [ecx+0x40],dl
  42364c:	mov    BYTE PTR [esi+0x40],bl
  42364f:	mov    eax,DWORD PTR [ecx+0x8]
  423652:	mov    ecx,DWORD PTR [esp+0x68]
  423656:	push   ecx
  423657:	mov    ecx,esi
  423659:	mov    BYTE PTR [eax+0x40],bl
  42365c:	call   0x423780
  423661:	jmp    0x4236e8
  423666:	cmp    BYTE PTR [ecx+0x40],0x0
  42366a:	jne    0x423681
  42366c:	mov    eax,DWORD PTR [esp+0x68]
  423670:	mov    BYTE PTR [ecx+0x40],bl
  423673:	push   eax
  423674:	mov    ecx,esi
  423676:	mov    BYTE PTR [esi+0x40],0x0
  42367a:	call   0x4237d0
  42367f:	mov    ecx,DWORD PTR [esi]
  423681:	cmp    BYTE PTR [ecx+0x41],0x0
  423685:	jne    0x42369a
  423687:	mov    edx,DWORD PTR [ecx+0x8]
  42368a:	cmp    BYTE PTR [edx+0x40],bl
  42368d:	jne    0x4236b1
  42368f:	mov    eax,DWORD PTR [ecx]
  423691:	cmp    BYTE PTR [eax+0x40],bl
  423694:	jne    0x4236b1
  423696:	mov    BYTE PTR [ecx+0x40],0x0
  42369a:	mov    ecx,DWORD PTR [esp+0x68]
  42369e:	mov    edx,DWORD PTR [ecx+0x18]
  4236a1:	mov    edi,esi
  4236a3:	mov    esi,DWORD PTR [esi+0x4]
  4236a6:	cmp    edi,DWORD PTR [edx+0x4]
  4236a9:	jne    0x4235e1
  4236af:	jmp    0x4236e8
  4236b1:	mov    edx,DWORD PTR [ecx]
  4236b3:	cmp    BYTE PTR [edx+0x40],bl
  4236b6:	jne    0x4236ce
  4236b8:	mov    eax,DWORD PTR [ecx+0x8]
  4236bb:	mov    edx,DWORD PTR [esp+0x68]
  4236bf:	mov    BYTE PTR [eax+0x40],bl
  4236c2:	push   edx
  4236c3:	mov    BYTE PTR [ecx+0x40],0x0
  4236c7:	call   0x423780
  4236cc:	mov    ecx,DWORD PTR [esi]
  4236ce:	mov    al,BYTE PTR [esi+0x40]
  4236d1:	mov    edx,DWORD PTR [esp+0x68]
  4236d5:	mov    BYTE PTR [ecx+0x40],al
  4236d8:	mov    BYTE PTR [esi+0x40],bl
  4236db:	mov    ecx,DWORD PTR [ecx]
  4236dd:	mov    BYTE PTR [ecx+0x40],bl
  4236e0:	push   edx
  4236e1:	mov    ecx,esi
  4236e3:	call   0x4237d0
  4236e8:	mov    BYTE PTR [edi+0x40],bl
  4236eb:	lea    eax,[ebp+0xc]
  4236ee:	push   eax
  4236ef:	call   0x422640
  4236f4:	push   ebp
  4236f5:	call   0x42504a
  4236fa:	mov    ecx,DWORD PTR [esp+0x6c]
  4236fe:	mov    eax,DWORD PTR [ecx+0x1c]
  423701:	add    esp,0x4
  423704:	test   eax,eax
  423706:	jbe    0x42370c
  423708:	dec    eax
  423709:	mov    DWORD PTR [ecx+0x1c],eax
  42370c:	mov    edx,DWORD PTR [esp+0x6c]
  423710:	mov    eax,DWORD PTR [esp+0x74]
  423714:	mov    ecx,DWORD PTR [ecx]
  423716:	mov    DWORD PTR [edx+0x4],eax
  423719:	mov    DWORD PTR [edx],ecx
  42371b:	mov    eax,edx
  42371d:	mov    ecx,DWORD PTR [esp+0x58]
  423721:	mov    DWORD PTR fs:0x0,ecx
  423728:	pop    ecx
  423729:	pop    edi
  42372a:	pop    esi
  42372b:	pop    ebp
  42372c:	pop    ebx
  42372d:	add    esp,0x50
  423730:	ret    0x10
  423733:	int3   
  423734:	int3   
  423735:	int3   
  423736:	int3   
  423737:	int3   
  423738:	int3   
  423739:	int3   
  42373a:	int3   
  42373b:	int3   
  42373c:	int3   
  42373d:	int3   
  42373e:	int3   
  42373f:	int3   
  423740:	push   ebx
  423741:	push   esi
  423742:	push   edi
  423743:	mov    edi,DWORD PTR [esp+0x10]
  423747:	cmp    BYTE PTR [edi+0x41],0x0
  42374b:	mov    ebx,ecx
  42374d:	mov    esi,edi
  42374f:	jne    0x423778
  423751:	mov    eax,DWORD PTR [esi+0x8]
  423754:	push   eax
  423755:	mov    ecx,ebx
  423757:	call   0x423740
  42375c:	mov    esi,DWORD PTR [esi]
  42375e:	lea    ecx,[edi+0xc]
  423761:	push   ecx
  423762:	call   0x422640
  423767:	push   edi
  423768:	call   0x42504a
  42376d:	add    esp,0x4
  423770:	cmp    BYTE PTR [esi+0x41],0x0
  423774:	mov    edi,esi
  423776:	je     0x423751
  423778:	pop    edi
  423779:	pop    esi
  42377a:	pop    ebx
  42377b:	ret    0x4
  42377e:	int3   
  42377f:	int3   
  423780:	mov    eax,DWORD PTR [ecx+0x8]
  423783:	mov    edx,DWORD PTR [eax]
  423785:	mov    DWORD PTR [ecx+0x8],edx
  423788:	mov    edx,DWORD PTR [eax]
  42378a:	cmp    BYTE PTR [edx+0x41],0x0
  42378e:	jne    0x423793
  423790:	mov    DWORD PTR [edx+0x4],ecx
  423793:	mov    edx,DWORD PTR [ecx+0x4]
  423796:	mov    DWORD PTR [eax+0x4],edx
  423799:	mov    edx,DWORD PTR [esp+0x4]
  42379d:	mov    edx,DWORD PTR [edx+0x18]
  4237a0:	cmp    ecx,DWORD PTR [edx+0x4]
  4237a3:	jne    0x4237b0
  4237a5:	mov    DWORD PTR [edx+0x4],eax
  4237a8:	mov    DWORD PTR [eax],ecx
  4237aa:	mov    DWORD PTR [ecx+0x4],eax
  4237ad:	ret    0x4
  4237b0:	mov    edx,DWORD PTR [ecx+0x4]
  4237b3:	cmp    ecx,DWORD PTR [edx]
  4237b5:	jne    0x4237c1
  4237b7:	mov    DWORD PTR [edx],eax
  4237b9:	mov    DWORD PTR [eax],ecx
  4237bb:	mov    DWORD PTR [ecx+0x4],eax
  4237be:	ret    0x4
  4237c1:	mov    DWORD PTR [edx+0x8],eax
  4237c4:	mov    DWORD PTR [eax],ecx
  4237c6:	mov    DWORD PTR [ecx+0x4],eax
  4237c9:	ret    0x4
  4237cc:	int3   
  4237cd:	int3   
  4237ce:	int3   
  4237cf:	int3   
  4237d0:	mov    eax,DWORD PTR [ecx]
  4237d2:	mov    edx,DWORD PTR [eax+0x8]
  4237d5:	mov    DWORD PTR [ecx],edx
  4237d7:	mov    edx,DWORD PTR [eax+0x8]
  4237da:	cmp    BYTE PTR [edx+0x41],0x0
  4237de:	jne    0x4237e3
  4237e0:	mov    DWORD PTR [edx+0x4],ecx
  4237e3:	mov    edx,DWORD PTR [ecx+0x4]
  4237e6:	mov    DWORD PTR [eax+0x4],edx
  4237e9:	mov    edx,DWORD PTR [esp+0x4]
  4237ed:	mov    edx,DWORD PTR [edx+0x18]
  4237f0:	cmp    ecx,DWORD PTR [edx+0x4]
  4237f3:	jne    0x423801
  4237f5:	mov    DWORD PTR [edx+0x4],eax
  4237f8:	mov    DWORD PTR [eax+0x8],ecx
  4237fb:	mov    DWORD PTR [ecx+0x4],eax
  4237fe:	ret    0x4
  423801:	mov    edx,DWORD PTR [ecx+0x4]
  423804:	cmp    ecx,DWORD PTR [edx+0x8]
  423807:	jne    0x423815
  423809:	mov    DWORD PTR [edx+0x8],eax
  42380c:	mov    DWORD PTR [eax+0x8],ecx
  42380f:	mov    DWORD PTR [ecx+0x4],eax
  423812:	ret    0x4
  423815:	mov    DWORD PTR [edx],eax
  423817:	mov    DWORD PTR [eax+0x8],ecx
  42381a:	mov    DWORD PTR [ecx+0x4],eax
  42381d:	ret    0x4
  423820:	push   ebp
  423821:	mov    ebp,esp
  423823:	push   0xffffffff
  423825:	push   0x42ccd1
  42382a:	mov    eax,fs:0x0
  423830:	push   eax
  423831:	sub    esp,0x10
  423834:	push   ebx
  423835:	push   esi
  423836:	push   edi
  423837:	mov    eax,ds:0x43e020
  42383c:	xor    eax,ebp
  42383e:	push   eax
  42383f:	lea    eax,[ebp-0xc]
  423842:	mov    fs:0x0,eax
  423848:	mov    DWORD PTR [ebp-0x10],esp
  42384b:	mov    ecx,0x1
  423850:	call   0x423fb0
  423855:	mov    esi,eax
  423857:	mov    DWORD PTR [ebp-0x4],0x0
  42385e:	mov    DWORD PTR [ebp-0x14],esi
  423861:	mov    DWORD PTR [ebp-0x18],esi
  423864:	mov    DWORD PTR [ebp-0x1c],esi
  423867:	mov    BYTE PTR [ebp-0x4],0x1
  42386b:	test   esi,esi
  42386d:	je     0x423896
  42386f:	mov    eax,DWORD PTR [ebp+0x8]
  423872:	mov    ecx,DWORD PTR [ebp+0xc]
  423875:	mov    edx,DWORD PTR [ebp+0x10]
  423878:	mov    edi,DWORD PTR [ebp+0x14]
  42387b:	mov    DWORD PTR [esi],eax
  42387d:	lea    eax,[esi+0xc]
  423880:	push   eax
  423881:	mov    DWORD PTR [esi+0x4],ecx
  423884:	mov    DWORD PTR [esi+0x8],edx
  423887:	call   0x4239d0
  42388c:	mov    cl,BYTE PTR [ebp+0x18]
  42388f:	mov    BYTE PTR [esi+0x40],cl
  423892:	mov    BYTE PTR [esi+0x41],0x0
  423896:	mov    eax,esi
  423898:	mov    ecx,DWORD PTR [ebp-0xc]
  42389b:	mov    DWORD PTR fs:0x0,ecx
  4238a2:	pop    ecx
  4238a3:	pop    edi
  4238a4:	pop    esi
  4238a5:	pop    ebx
  4238a6:	mov    esp,ebp
  4238a8:	pop    ebp
  4238a9:	ret    0x14
  4238ac:	mov    edx,DWORD PTR [ebp-0x14]
  4238af:	push   edx
  4238b0:	call   0x42504a
  4238b5:	add    esp,0x4
  4238b8:	push   0x0
  4238ba:	push   0x0
  4238bc:	call   0x429e76
  4238c1:	int3   
  4238c2:	int3   
  4238c3:	int3   
  4238c4:	int3   
  4238c5:	int3   
  4238c6:	int3   
  4238c7:	int3   
  4238c8:	int3   
  4238c9:	int3   
  4238ca:	int3   
  4238cb:	int3   
  4238cc:	int3   
  4238cd:	int3   
  4238ce:	int3   
  4238cf:	int3   
  4238d0:	cmp    DWORD PTR [esi],0x0
  4238d3:	push   edi
  4238d4:	mov    edi,DWORD PTR ds:0x430390
  4238da:	jne    0x4238de
  4238dc:	call   edi
  4238de:	mov    eax,DWORD PTR [esi+0x4]
  4238e1:	cmp    BYTE PTR [eax+0x41],0x0
  4238e5:	je     0x4238f7
  4238e7:	mov    eax,DWORD PTR [eax+0x8]
  4238ea:	mov    DWORD PTR [esi+0x4],eax
  4238ed:	cmp    BYTE PTR [eax+0x41],0x0
  4238f1:	je     0x423951
  4238f3:	call   edi
  4238f5:	pop    edi
  4238f6:	ret    
  4238f7:	mov    ecx,DWORD PTR [eax]
  4238f9:	cmp    BYTE PTR [ecx+0x41],0x0
  4238fd:	jne    0x423920
  4238ff:	mov    eax,DWORD PTR [ecx+0x8]
  423902:	cmp    BYTE PTR [eax+0x41],0x0
  423906:	jne    0x42391b
  423908:	jmp    0x423910
  42390a:	lea    ebx,[ebx+0x0]
  423910:	mov    ecx,eax
  423912:	mov    eax,DWORD PTR [ecx+0x8]
  423915:	cmp    BYTE PTR [eax+0x41],0x0
  423919:	je     0x423910
  42391b:	mov    DWORD PTR [esi+0x4],ecx
  42391e:	pop    edi
  42391f:	ret    
  423920:	mov    eax,DWORD PTR [eax+0x4]
  423923:	cmp    BYTE PTR [eax+0x41],0x0
  423927:	jne    0x423945
  423929:	lea    esp,[esp+0x0]
  423930:	mov    ecx,DWORD PTR [esi+0x4]
  423933:	cmp    ecx,DWORD PTR [eax]
  423935:	jne    0x423945
  423937:	mov    DWORD PTR [esi+0x4],eax
  42393a:	mov    edx,eax
  42393c:	mov    eax,DWORD PTR [edx+0x4]
  42393f:	cmp    BYTE PTR [eax+0x41],0x0
  423943:	je     0x423930
  423945:	mov    ecx,DWORD PTR [esi+0x4]
  423948:	cmp    BYTE PTR [ecx+0x41],0x0
  42394c:	jne    0x4238f3
  42394e:	mov    DWORD PTR [esi+0x4],eax
  423951:	pop    edi
  423952:	ret    
  423953:	int3   
  423954:	int3   
  423955:	int3   
  423956:	int3   
  423957:	int3   
  423958:	int3   
  423959:	int3   
  42395a:	int3   
  42395b:	int3   
  42395c:	int3   
  42395d:	int3   
  42395e:	int3   
  42395f:	int3   
  423960:	cmp    DWORD PTR [esi],0x0
  423963:	push   edi
  423964:	mov    edi,DWORD PTR ds:0x430390
  42396a:	jne    0x42396e
  42396c:	call   edi
  42396e:	mov    eax,DWORD PTR [esi+0x4]
  423971:	cmp    BYTE PTR [eax+0x41],0x0
  423975:	je     0x42397b
  423977:	call   edi
  423979:	pop    edi
  42397a:	ret    
  42397b:	mov    ecx,DWORD PTR [eax+0x8]
  42397e:	cmp    BYTE PTR [ecx+0x41],0x0
  423982:	jne    0x42399f
  423984:	mov    eax,DWORD PTR [ecx]
  423986:	cmp    BYTE PTR [eax+0x41],0x0
  42398a:	jne    0x42399a
  42398c:	lea    esp,[esp+0x0]
  423990:	mov    ecx,eax
  423992:	mov    eax,DWORD PTR [ecx]
  423994:	cmp    BYTE PTR [eax+0x41],0x0
  423998:	je     0x423990
  42399a:	mov    DWORD PTR [esi+0x4],ecx
  42399d:	pop    edi
  42399e:	ret    
  42399f:	mov    eax,DWORD PTR [eax+0x4]
  4239a2:	cmp    BYTE PTR [eax+0x41],0x0
  4239a6:	jne    0x4239be
  4239a8:	mov    ecx,DWORD PTR [esi+0x4]
  4239ab:	cmp    ecx,DWORD PTR [eax+0x8]
  4239ae:	jne    0x4239be
  4239b0:	mov    DWORD PTR [esi+0x4],eax
  4239b3:	mov    edx,eax
  4239b5:	mov    eax,DWORD PTR [edx+0x4]
  4239b8:	cmp    BYTE PTR [eax+0x41],0x0
  4239bc:	je     0x4239a8
  4239be:	mov    DWORD PTR [esi+0x4],eax
  4239c1:	pop    edi
  4239c2:	ret    
  4239c3:	int3   
  4239c4:	int3   
  4239c5:	int3   
  4239c6:	int3   
  4239c7:	int3   
  4239c8:	int3   
  4239c9:	int3   
  4239ca:	int3   
  4239cb:	int3   
  4239cc:	int3   
  4239cd:	int3   
  4239ce:	int3   
  4239cf:	int3   
  4239d0:	push   0xffffffff
  4239d2:	push   0x42cde9
  4239d7:	mov    eax,fs:0x0
  4239dd:	push   eax
  4239de:	push   ecx
  4239df:	push   esi
  4239e0:	mov    eax,ds:0x43e020
  4239e5:	xor    eax,esp
  4239e7:	push   eax
  4239e8:	lea    eax,[esp+0xc]
  4239ec:	mov    fs:0x0,eax
  4239f2:	mov    esi,DWORD PTR [esp+0x1c]
  4239f6:	push   edi
  4239f7:	mov    ecx,esi
  4239f9:	call   DWORD PTR ds:0x430118
  4239ff:	lea    eax,[esi+0x1c]
  423a02:	lea    ecx,[edi+0x1c]
  423a05:	push   eax
  423a06:	mov    DWORD PTR [esp+0x18],0x0
  423a0e:	call   0x423230
  423a13:	mov    eax,esi
  423a15:	mov    ecx,DWORD PTR [esp+0xc]
  423a19:	mov    DWORD PTR fs:0x0,ecx
  423a20:	pop    ecx
  423a21:	pop    esi
  423a22:	add    esp,0x10
  423a25:	ret    0x4
  423a28:	int3   
  423a29:	int3   
  423a2a:	int3   
  423a2b:	int3   
  423a2c:	int3   
  423a2d:	int3   
  423a2e:	int3   
  423a2f:	int3   
  423a30:	sub    esp,0x1c
  423a33:	push   ebx
  423a34:	push   ebp
  423a35:	push   esi
  423a36:	mov    eax,0x430ae4
  423a3b:	push   edi
  423a3c:	lea    edx,[eax+0x2]
  423a3f:	nop
  423a40:	mov    cx,WORD PTR [eax]
  423a43:	add    eax,0x2
  423a46:	test   cx,cx
  423a49:	jne    0x423a40
  423a4b:	mov    edi,DWORD PTR [esp+0x34]
  423a4f:	sub    eax,edx
  423a51:	sar    eax,1
  423a53:	lea    esi,[esp+0x14]
  423a57:	mov    ebx,0x430ae4
  423a5c:	lea    ebp,[eax*2+0x430ae4]
  423a63:	call   0x4246d0
  423a68:	mov    ecx,DWORD PTR [eax]
  423a6a:	mov    edi,DWORD PTR [eax+0xc]
  423a6d:	mov    edx,DWORD PTR [eax+0x4]
  423a70:	mov    esi,DWORD PTR [eax+0x8]
  423a73:	push   ebp
  423a74:	push   ebx
  423a75:	sub    esp,0x14
  423a78:	mov    eax,esp
  423a7a:	mov    DWORD PTR [eax],ecx
  423a7c:	mov    ecx,DWORD PTR [esp+0x40]
  423a80:	mov    DWORD PTR [eax+0x4],edx
  423a83:	mov    DWORD PTR [eax+0x8],esi
  423a86:	mov    DWORD PTR [eax+0xc],edi
  423a89:	mov    edi,DWORD PTR [esp+0x4c]
  423a8d:	mov    DWORD PTR [eax+0x10],ecx
  423a90:	call   0x424390
  423a95:	add    esp,0x1c
  423a98:	pop    edi
  423a99:	pop    esi
  423a9a:	pop    ebp
  423a9b:	pop    ebx
  423a9c:	add    esp,0x1c
  423a9f:	ret    
  423aa0:	push   0xffffffff
  423aa2:	push   0x42e5bb
  423aa7:	mov    eax,fs:0x0
  423aad:	push   eax
  423aae:	sub    esp,0x4c
  423ab1:	mov    eax,ds:0x43e020
  423ab6:	xor    eax,esp
  423ab8:	push   eax
  423ab9:	lea    eax,[esp+0x50]
  423abd:	mov    fs:0x0,eax
  423ac3:	mov    DWORD PTR [esp+0xc],esi
  423ac7:	mov    DWORD PTR [esp+0x8],0x0
  423acf:	sub    esp,0x3c
  423ad2:	mov    eax,esp
  423ad4:	mov    DWORD PTR [esp+0x40],esp
  423ad8:	push   eax
  423ad9:	lea    ecx,[esp+0xa4]
  423ae0:	mov    DWORD PTR [esp+0x98],0x1
  423aeb:	call   0x420fe0
  423af0:	push   ecx
  423af1:	mov    ecx,DWORD PTR [esp+0xa0]
  423af8:	mov    eax,esp
  423afa:	mov    DWORD PTR [eax],ecx
  423afc:	lea    ecx,[esp+0x50]
  423b00:	mov    DWORD PTR [esp+0x44],esp
  423b04:	call   0x4241b0
  423b09:	mov    BYTE PTR [esp+0x58],0x2
  423b0e:	mov    DWORD PTR [esi],0x421c80
  423b14:	mov    edx,DWORD PTR [eax]
  423b16:	mov    DWORD PTR [esi+0x4],edx
  423b19:	lea    edx,[esi+0x8]
  423b1c:	lea    ecx,[eax+0x4]
  423b1f:	push   edx
  423b20:	call   0x420fe0
  423b25:	lea    eax,[esp+0x14]
  423b29:	push   eax
  423b2a:	mov    DWORD PTR [esp+0xc],0x1
  423b32:	mov    BYTE PTR [esp+0x5c],0x1
  423b37:	call   0x420ef0
  423b3c:	lea    ecx,[esp+0x64]
  423b40:	push   ecx
  423b41:	mov    BYTE PTR [esp+0x5c],0x0
  423b46:	call   0x420ef0
  423b4b:	mov    eax,esi
  423b4d:	mov    ecx,DWORD PTR [esp+0x50]
  423b51:	mov    DWORD PTR fs:0x0,ecx
  423b58:	pop    ecx
  423b59:	add    esp,0x58
  423b5c:	ret    
  423b5d:	int3   
  423b5e:	int3   
  423b5f:	int3   
  423b60:	push   0xffffffff
  423b62:	push   0x42e568
  423b67:	mov    eax,fs:0x0
  423b6d:	push   eax
  423b6e:	sub    esp,0x8
  423b71:	mov    eax,ds:0x43e020
  423b76:	xor    eax,esp
  423b78:	push   eax
  423b79:	lea    eax,[esp+0xc]
  423b7d:	mov    fs:0x0,eax
  423b83:	mov    DWORD PTR [esp+0x14],0x0
  423b8b:	mov    ecx,DWORD PTR [esp+0x1c]
  423b8f:	sub    esp,0x44
  423b92:	mov    eax,esp
  423b94:	mov    DWORD PTR [eax],ecx
  423b96:	mov    edx,DWORD PTR [esp+0x64]
  423b9a:	mov    DWORD PTR [eax+0x4],edx
  423b9d:	add    eax,0x8
  423ba0:	mov    DWORD PTR [esp+0x4c],esp
  423ba4:	push   eax
  423ba5:	lea    ecx,[esp+0x6c]
  423ba9:	call   0x420fe0
  423bae:	mov    ecx,esi
  423bb0:	call   0x424430
  423bb5:	lea    eax,[esp+0x24]
  423bb9:	push   eax
  423bba:	mov    DWORD PTR [esp+0x18],0xffffffff
  423bc2:	call   0x420ef0
  423bc7:	mov    eax,esi
  423bc9:	mov    ecx,DWORD PTR [esp+0xc]
  423bcd:	mov    DWORD PTR fs:0x0,ecx
  423bd4:	pop    ecx
  423bd5:	add    esp,0x14
  423bd8:	ret    0x44
  423bdb:	int3   
  423bdc:	int3   
  423bdd:	int3   
  423bde:	int3   
  423bdf:	int3   
  423be0:	push   ebx
  423be1:	push   ebp
  423be2:	mov    ebx,eax
  423be4:	push   esi
  423be5:	mov    esi,ecx
  423be7:	mov    ecx,edi
  423be9:	sub    ecx,esi
  423beb:	mov    eax,0x92492493
  423bf0:	imul   ecx
  423bf2:	add    edx,ecx
  423bf4:	sar    edx,0x4
  423bf7:	mov    eax,edx
  423bf9:	shr    eax,0x1f
  423bfc:	add    eax,edx
  423bfe:	lea    ecx,[eax*8+0x0]
  423c05:	sub    ecx,eax
  423c07:	lea    ebp,[ebx+ecx*4]
  423c0a:	cmp    esi,edi
  423c0c:	je     0x423c21
  423c0e:	sub    ebx,esi
  423c10:	push   esi
  423c11:	lea    ecx,[ebx+esi*1]
  423c14:	call   DWORD PTR ds:0x43017c
  423c1a:	add    esi,0x1c
  423c1d:	cmp    esi,edi
  423c1f:	jne    0x423c10
  423c21:	pop    esi
  423c22:	mov    eax,ebp
  423c24:	pop    ebp
  423c25:	pop    ebx
  423c26:	ret    
  423c27:	int3   
  423c28:	int3   
  423c29:	int3   
  423c2a:	int3   
  423c2b:	int3   
  423c2c:	int3   
  423c2d:	int3   
  423c2e:	int3   
  423c2f:	int3   
  423c30:	push   ecx
  423c31:	mov    ecx,DWORD PTR [esp+0xc]
  423c35:	mov    BYTE PTR [esp],0x0
  423c39:	mov    eax,DWORD PTR [esp]
  423c3c:	push   eax
  423c3d:	mov    eax,DWORD PTR [esp+0x10]
  423c41:	push   ecx
  423c42:	mov    ecx,DWORD PTR [esp+0x10]
  423c46:	push   edx
  423c47:	push   eax
  423c48:	call   0x4249e0
  423c4d:	add    esp,0x14
  423c50:	ret    0x8
  423c53:	int3   
  423c54:	int3   
  423c55:	int3   
  423c56:	int3   
  423c57:	int3   
  423c58:	int3   
  423c59:	int3   
  423c5a:	int3   
  423c5b:	int3   
  423c5c:	int3   
  423c5d:	int3   
  423c5e:	int3   
  423c5f:	int3   
  423c60:	push   ebp
  423c61:	mov    ebp,esp
  423c63:	and    esp,0xfffffff8
  423c66:	sub    esp,0x8
  423c69:	mov    BYTE PTR [esp+0x4],0x0
  423c6e:	mov    eax,DWORD PTR [esp+0x4]
  423c72:	mov    ecx,DWORD PTR [esp+0x4]
  423c76:	push   eax
  423c77:	mov    eax,DWORD PTR [ebp+0x14]
  423c7a:	push   ecx
  423c7b:	mov    ecx,DWORD PTR [ebp+0xc]
  423c7e:	push   edx
  423c7f:	push   eax
  423c80:	call   0x4249e0
  423c85:	add    esp,0x10
  423c88:	mov    esp,ebp
  423c8a:	pop    ebp
  423c8b:	ret    0x10
  423c8e:	int3   
  423c8f:	int3   
  423c90:	push   0xffffffff
  423c92:	push   0x42c409
  423c97:	mov    eax,fs:0x0
  423c9d:	push   eax
  423c9e:	sub    esp,0x24
  423ca1:	push   ebx
  423ca2:	push   ebp
  423ca3:	push   esi
  423ca4:	mov    eax,ds:0x43e020
  423ca9:	xor    eax,esp
  423cab:	push   eax
  423cac:	lea    eax,[esp+0x34]
  423cb0:	mov    fs:0x0,eax
  423cb6:	mov    esi,ecx
  423cb8:	xor    ebx,ebx
  423cba:	lea    ecx,[esp+0x18]
  423cbe:	mov    BYTE PTR [esp+0x17],bl
  423cc2:	call   DWORD PTR ds:0x430254
  423cc8:	mov    ecx,DWORD PTR [esp+0x44]
  423ccc:	push   eax
  423ccd:	mov    DWORD PTR [esp+0x40],ebx
  423cd1:	call   DWORD PTR ds:0x43017c
  423cd7:	lea    ecx,[esp+0x18]
  423cdb:	mov    DWORD PTR [esp+0x3c],0xffffffff
  423ce3:	call   DWORD PTR ds:0x430264
  423ce9:	mov    eax,DWORD PTR [esi]
  423ceb:	cmp    eax,0xfffffffc
  423cee:	je     0x423d00
  423cf0:	cmp    eax,ebx
  423cf2:	je     0x423cfa
  423cf4:	cmp    eax,DWORD PTR [esp+0x48]
  423cf8:	je     0x423d00
  423cfa:	call   DWORD PTR ds:0x430390
  423d00:	mov    eax,DWORD PTR [esi+0x4]
  423d03:	cmp    eax,DWORD PTR [esp+0x4c]
  423d07:	jne    0x423d3f
  423d09:	cmp    BYTE PTR [edi+0x54],bl
  423d0c:	je     0x423d28
  423d0e:	mov    BYTE PTR [edi+0x54],bl
  423d11:	mov    al,0x1
  423d13:	mov    ecx,DWORD PTR [esp+0x34]
  423d17:	mov    DWORD PTR fs:0x0,ecx
  423d1e:	pop    ecx
  423d1f:	pop    esi
  423d20:	pop    ebp
  423d21:	pop    ebx
  423d22:	add    esp,0x30
  423d25:	ret    0xc
  423d28:	xor    al,al
  423d2a:	mov    ecx,DWORD PTR [esp+0x34]
  423d2e:	mov    DWORD PTR fs:0x0,ecx
  423d35:	pop    ecx
  423d36:	pop    esi
  423d37:	pop    ebp
  423d38:	pop    ebx
  423d39:	add    esp,0x30
  423d3c:	ret    0xc
  423d3f:	mov    BYTE PTR [edi+0x54],bl
  423d42:	mov    ebp,0x8
  423d47:	mov    eax,DWORD PTR [esi]
  423d49:	cmp    eax,0xfffffffc
  423d4c:	je     0x423d5e
  423d4e:	cmp    eax,ebx
  423d50:	je     0x423d58
  423d52:	cmp    eax,DWORD PTR [esp+0x48]
  423d56:	je     0x423d5e
  423d58:	call   DWORD PTR ds:0x430390
  423d5e:	mov    ecx,DWORD PTR [esp+0x4c]
  423d62:	cmp    DWORD PTR [esi+0x4],ecx
  423d65:	je     0x423d11
  423d67:	mov    eax,DWORD PTR [esi]
  423d69:	cmp    eax,0xfffffffc
  423d6c:	je     0x423d98
  423d6e:	cmp    eax,ebx
  423d70:	jne    0x423d78
  423d72:	call   DWORD PTR ds:0x430390
  423d78:	mov    eax,DWORD PTR [esi]
  423d7a:	cmp    DWORD PTR [eax+0x18],ebp
  423d7d:	jb     0x423d84
  423d7f:	mov    ecx,DWORD PTR [eax+0x4]
  423d82:	jmp    0x423d87
  423d84:	lea    ecx,[eax+0x4]
  423d87:	mov    edx,DWORD PTR [eax+0x14]
  423d8a:	lea    eax,[ecx+edx*2]
  423d8d:	cmp    DWORD PTR [esi+0x4],eax
  423d90:	jb     0x423d98
  423d92:	call   DWORD PTR ds:0x430390
  423d98:	mov    eax,DWORD PTR [esi+0x4]
  423d9b:	movzx  ecx,WORD PTR [eax]
  423d9e:	push   ecx
  423d9f:	mov    ebx,edi
  423da1:	call   0x424010
  423da6:	test   al,al
  423da8:	je     0x423e19
  423daa:	cmp    BYTE PTR [esp+0x17],0x0
  423daf:	je     0x423df9
  423db1:	cmp    BYTE PTR [edi+0x55],0x0
  423db5:	je     0x423df9
  423db7:	mov    eax,DWORD PTR [esi]
  423db9:	cmp    eax,0xfffffffc
  423dbc:	je     0x423de8
  423dbe:	test   eax,eax
  423dc0:	jne    0x423dc8
  423dc2:	call   DWORD PTR ds:0x430390
  423dc8:	mov    eax,DWORD PTR [esi]
  423dca:	cmp    DWORD PTR [eax+0x18],ebp
  423dcd:	jb     0x423dd4
  423dcf:	mov    ecx,DWORD PTR [eax+0x4]
  423dd2:	jmp    0x423dd7
  423dd4:	lea    ecx,[eax+0x4]
  423dd7:	mov    edx,DWORD PTR [eax+0x14]
  423dda:	lea    eax,[ecx+edx*2]
  423ddd:	cmp    DWORD PTR [esi+0x4],eax
  423de0:	jb     0x423de8
  423de2:	call   DWORD PTR ds:0x430390
  423de8:	mov    ecx,DWORD PTR [esi+0x4]
  423deb:	movzx  edx,WORD PTR [ecx]
  423dee:	mov    ecx,DWORD PTR [esp+0x44]
  423df2:	push   edx
  423df3:	call   DWORD PTR ds:0x430238
  423df9:	mov    eax,DWORD PTR [esp+0x4c]
  423dfd:	mov    ecx,DWORD PTR [esp+0x48]
  423e01:	mov    edx,DWORD PTR [esp+0x44]
  423e05:	push   eax
  423e06:	push   ecx
  423e07:	push   edx
  423e08:	push   edi
  423e09:	call   0x4244c0
  423e0e:	mov    ebx,DWORD PTR ds:0x430390
  423e14:	jmp    0x423f2c
  423e19:	mov    eax,DWORD PTR [esi]
  423e1b:	mov    ebx,DWORD PTR ds:0x430390
  423e21:	cmp    eax,0xfffffffc
  423e24:	je     0x423e48
  423e26:	test   eax,eax
  423e28:	jne    0x423e2c
  423e2a:	call   ebx
  423e2c:	mov    eax,DWORD PTR [esi]
  423e2e:	cmp    DWORD PTR [eax+0x18],ebp
  423e31:	jb     0x423e38
  423e33:	mov    ecx,DWORD PTR [eax+0x4]
  423e36:	jmp    0x423e3b
  423e38:	lea    ecx,[eax+0x4]
  423e3b:	mov    eax,DWORD PTR [eax+0x14]
  423e3e:	lea    ecx,[ecx+eax*2]
  423e41:	cmp    DWORD PTR [esi+0x4],ecx
  423e44:	jb     0x423e48
  423e46:	call   ebx
  423e48:	mov    eax,DWORD PTR [esi+0x4]
  423e4b:	movzx  edx,WORD PTR [eax]
  423e4e:	push   edx
  423e4f:	mov    eax,edi
  423e51:	call   0x424090
  423e56:	test   al,al
  423e58:	mov    eax,DWORD PTR [esi]
  423e5a:	je     0x423e9a
  423e5c:	cmp    BYTE PTR [esp+0x17],0x0
  423e61:	je     0x423f60
  423e67:	cmp    eax,0xfffffffc
  423e6a:	je     0x423e8e
  423e6c:	test   eax,eax
  423e6e:	jne    0x423e72
  423e70:	call   ebx
  423e72:	mov    eax,DWORD PTR [esi]
  423e74:	cmp    DWORD PTR [eax+0x18],ebp
  423e77:	jb     0x423e7e
  423e79:	mov    ecx,DWORD PTR [eax+0x4]
  423e7c:	jmp    0x423e81
  423e7e:	lea    ecx,[eax+0x4]
  423e81:	mov    eax,DWORD PTR [eax+0x14]
  423e84:	lea    ecx,[ecx+eax*2]
  423e87:	cmp    DWORD PTR [esi+0x4],ecx
  423e8a:	jb     0x423e8e
  423e8c:	call   ebx
  423e8e:	mov    edx,DWORD PTR [esi+0x4]
  423e91:	movzx  eax,WORD PTR [edx]
  423e94:	push   eax
  423e95:	jmp    0x423f22
  423e9a:	cmp    eax,0xfffffffc
  423e9d:	je     0x423ec1
  423e9f:	test   eax,eax
  423ea1:	jne    0x423ea5
  423ea3:	call   ebx
  423ea5:	mov    eax,DWORD PTR [esi]
  423ea7:	cmp    DWORD PTR [eax+0x18],ebp
  423eaa:	jb     0x423eb1
  423eac:	mov    ecx,DWORD PTR [eax+0x4]
  423eaf:	jmp    0x423eb4
  423eb1:	lea    ecx,[eax+0x4]
  423eb4:	mov    edx,DWORD PTR [eax+0x14]
  423eb7:	lea    eax,[ecx+edx*2]
  423eba:	cmp    DWORD PTR [esi+0x4],eax
  423ebd:	jb     0x423ec1
  423ebf:	call   ebx
  423ec1:	mov    eax,DWORD PTR [esi+0x4]
  423ec4:	movzx  ecx,WORD PTR [eax]
  423ec7:	push   ecx
  423ec8:	mov    eax,edi
  423eca:	call   0x424120
  423ecf:	test   al,al
  423ed1:	je     0x423ef2
  423ed3:	cmp    BYTE PTR [esp+0x17],0x0
  423ed8:	sete   dl
  423edb:	cmp    BYTE PTR [edi+0x55],0x0
  423edf:	mov    BYTE PTR [esp+0x17],dl
  423ee3:	je     0x423f2c
  423ee5:	mov    ecx,esi
  423ee7:	call   0x402ab0
  423eec:	movzx  eax,WORD PTR [eax]
  423eef:	push   eax
  423ef0:	jmp    0x423f22
  423ef2:	mov    eax,DWORD PTR [esi]
  423ef4:	cmp    eax,0xfffffffc
  423ef7:	je     0x423f1b
  423ef9:	test   eax,eax
  423efb:	jne    0x423eff
  423efd:	call   ebx
  423eff:	mov    eax,DWORD PTR [esi]
  423f01:	cmp    DWORD PTR [eax+0x18],ebp
  423f04:	jb     0x423f0b
  423f06:	mov    ecx,DWORD PTR [eax+0x4]
  423f09:	jmp    0x423f0e
  423f0b:	lea    ecx,[eax+0x4]
  423f0e:	mov    edx,DWORD PTR [eax+0x14]
  423f11:	lea    eax,[ecx+edx*2]
  423f14:	cmp    DWORD PTR [esi+0x4],eax
  423f17:	jb     0x423f1b
  423f19:	call   ebx
  423f1b:	mov    ecx,DWORD PTR [esi+0x4]
  423f1e:	movzx  edx,WORD PTR [ecx]
  423f21:	push   edx
  423f22:	mov    ecx,DWORD PTR [esp+0x48]
  423f26:	call   DWORD PTR ds:0x430238
  423f2c:	mov    eax,DWORD PTR [esi]
  423f2e:	cmp    eax,0xfffffffc
  423f31:	je     0x423f55
  423f33:	test   eax,eax
  423f35:	jne    0x423f39
  423f37:	call   ebx
  423f39:	mov    eax,DWORD PTR [esi]
  423f3b:	cmp    DWORD PTR [eax+0x18],ebp
  423f3e:	jb     0x423f45
  423f40:	mov    ecx,DWORD PTR [eax+0x4]
  423f43:	jmp    0x423f48
  423f45:	lea    ecx,[eax+0x4]
  423f48:	mov    eax,DWORD PTR [eax+0x14]
  423f4b:	lea    ecx,[ecx+eax*2]
  423f4e:	cmp    DWORD PTR [esi+0x4],ecx
  423f51:	jb     0x423f55
  423f53:	call   ebx
  423f55:	add    DWORD PTR [esi+0x4],0x2
  423f59:	xor    ebx,ebx
  423f5b:	jmp    0x423d47
  423f60:	cmp    eax,0xfffffffc
  423f63:	je     0x423f87
  423f65:	test   eax,eax
  423f67:	jne    0x423f6b
  423f69:	call   ebx
  423f6b:	mov    eax,DWORD PTR [esi]
  423f6d:	cmp    DWORD PTR [eax+0x18],ebp
  423f70:	jb     0x423f77
  423f72:	mov    ecx,DWORD PTR [eax+0x4]
  423f75:	jmp    0x423f7a
  423f77:	lea    ecx,[eax+0x4]
  423f7a:	mov    edx,DWORD PTR [eax+0x14]
  423f7d:	lea    eax,[ecx+edx*2]
  423f80:	cmp    DWORD PTR [esi+0x4],eax
  423f83:	jb     0x423f87
  423f85:	call   ebx
  423f87:	add    DWORD PTR [esi+0x4],0x2
  423f8b:	mov    al,0x1
  423f8d:	mov    BYTE PTR [edi+0x54],al
  423f90:	mov    ecx,DWORD PTR [esp+0x34]
  423f94:	mov    DWORD PTR fs:0x0,ecx
  423f9b:	pop    ecx
  423f9c:	pop    esi
  423f9d:	pop    ebp
  423f9e:	pop    ebx
  423f9f:	add    esp,0x30
  423fa2:	ret    0xc
  423fa5:	int3   
  423fa6:	int3   
  423fa7:	int3   
  423fa8:	int3   
  423fa9:	int3   
  423faa:	int3   
  423fab:	int3   
  423fac:	int3   
  423fad:	int3   
  423fae:	int3   
  423faf:	int3   
  423fb0:	or     eax,0xffffffff
  423fb3:	xor    edx,edx
  423fb5:	div    ecx
  423fb7:	sub    esp,0x10
  423fba:	cmp    eax,0x44
  423fbd:	jae    0x423fec
  423fbf:	lea    eax,[esp]
  423fc2:	push   eax
  423fc3:	lea    ecx,[esp+0x8]
  423fc7:	mov    DWORD PTR [esp+0x4],0x0
  423fcf:	call   DWORD PTR ds:0x430398
  423fd5:	push   0x4356bc
  423fda:	lea    ecx,[esp+0x8]
  423fde:	push   ecx
  423fdf:	mov    DWORD PTR [esp+0xc],0x4305ec
  423fe7:	call   0x429e76
  423fec:	mov    edx,ecx
  423fee:	shl    edx,0x4
  423ff1:	add    edx,ecx
  423ff3:	add    edx,edx
  423ff5:	add    edx,edx
  423ff7:	push   edx
  423ff8:	call   0x425050
  423ffd:	add    esp,0x4
  424000:	add    esp,0x10
  424003:	ret    
  424004:	int3   
  424005:	int3   
  424006:	int3   
  424007:	int3   
  424008:	int3   
  424009:	int3   
  42400a:	int3   
  42400b:	int3   
  42400c:	int3   
  42400d:	int3   
  42400e:	int3   
  42400f:	int3   
  424010:	sub    esp,0x24
  424013:	push   ebp
  424014:	push   esi
  424015:	push   edi
  424016:	lea    eax,[esp+0x10]
  42401a:	push   eax
  42401b:	mov    ecx,ebx
  42401d:	call   DWORD PTR ds:0x430124
  424023:	mov    ecx,DWORD PTR [eax]
  424025:	mov    edi,DWORD PTR [eax+0x4]
  424028:	lea    edx,[esp+0x20]
  42402c:	mov    DWORD PTR [esp+0x18],ecx
  424030:	push   edx
  424031:	mov    ecx,ebx
  424033:	call   DWORD PTR ds:0x430128
  424039:	mov    esi,DWORD PTR [eax+0x4]
  42403c:	mov    ebp,DWORD PTR [eax]
  42403e:	cmp    esi,edi
  424040:	je     0x424053
  424042:	mov    ax,WORD PTR [esp+0x34]
  424047:	cmp    ax,WORD PTR [esi]
  42404a:	je     0x424053
  42404c:	add    esi,0x2
  42404f:	cmp    esi,edi
  424051:	jne    0x424042
  424053:	lea    ecx,[esp+0x28]
  424057:	push   ecx
  424058:	mov    ecx,ebx
  42405a:	call   DWORD PTR ds:0x430124
  424060:	mov    edi,eax
  424062:	cmp    ebp,0xfffffffc
  424065:	je     0x424075
  424067:	test   ebp,ebp
  424069:	je     0x42406f
  42406b:	cmp    ebp,DWORD PTR [edi]
  42406d:	je     0x424075
  42406f:	call   DWORD PTR ds:0x430390
  424075:	xor    eax,eax
  424077:	cmp    esi,DWORD PTR [edi+0x4]
  42407a:	pop    edi
  42407b:	pop    esi
  42407c:	setne  al
  42407f:	pop    ebp
  424080:	add    esp,0x24
  424083:	ret    0x4
  424086:	int3   
  424087:	int3   
  424088:	int3   
  424089:	int3   
  42408a:	int3   
  42408b:	int3   
  42408c:	int3   
  42408d:	int3   
  42408e:	int3   
  42408f:	int3   
  424090:	sub    esp,0x20
  424093:	push   ebx
  424094:	push   ebp
  424095:	push   esi
  424096:	push   edi
  424097:	mov    edi,eax
  424099:	lea    eax,[esp+0x10]
  42409d:	add    edi,0x1c
  4240a0:	push   eax
  4240a1:	mov    ecx,edi
  4240a3:	call   DWORD PTR ds:0x430124
  4240a9:	mov    ecx,DWORD PTR [eax]
  4240ab:	mov    ebx,DWORD PTR [eax+0x4]
  4240ae:	lea    edx,[esp+0x20]
  4240b2:	mov    DWORD PTR [esp+0x18],ecx
  4240b6:	push   edx
  4240b7:	mov    ecx,edi
  4240b9:	call   DWORD PTR ds:0x430128
  4240bf:	mov    esi,DWORD PTR [eax+0x4]
  4240c2:	mov    ebp,DWORD PTR [eax]
  4240c4:	cmp    esi,ebx
  4240c6:	je     0x4240e1
  4240c8:	jmp    0x4240d0
  4240ca:	lea    ebx,[ebx+0x0]
  4240d0:	mov    ax,WORD PTR [esp+0x34]
  4240d5:	cmp    ax,WORD PTR [esi]
  4240d8:	je     0x4240e1
  4240da:	add    esi,0x2
  4240dd:	cmp    esi,ebx
  4240df:	jne    0x4240d0
  4240e1:	lea    ecx,[esp+0x28]
  4240e5:	push   ecx
  4240e6:	mov    ecx,edi
  4240e8:	call   DWORD PTR ds:0x430124
  4240ee:	mov    edi,eax
  4240f0:	cmp    ebp,0xfffffffc
  4240f3:	je     0x424103
  4240f5:	test   ebp,ebp
  4240f7:	je     0x4240fd
  4240f9:	cmp    ebp,DWORD PTR [edi]
  4240fb:	je     0x424103
  4240fd:	call   DWORD PTR ds:0x430390
  424103:	xor    eax,eax
  424105:	cmp    esi,DWORD PTR [edi+0x4]
  424108:	pop    edi
  424109:	pop    esi
  42410a:	pop    ebp
  42410b:	setne  al
  42410e:	pop    ebx
  42410f:	add    esp,0x20
  424112:	ret    0x4
  424115:	int3   
  424116:	int3   
  424117:	int3   
  424118:	int3   
  424119:	int3   
  42411a:	int3   
  42411b:	int3   
  42411c:	int3   
  42411d:	int3   
  42411e:	int3   
  42411f:	int3   
  424120:	sub    esp,0x20
  424123:	push   ebx
  424124:	push   ebp
  424125:	push   esi
  424126:	push   edi
  424127:	mov    edi,eax
  424129:	lea    eax,[esp+0x10]
  42412d:	add    edi,0x38
  424130:	push   eax
  424131:	mov    ecx,edi
  424133:	call   DWORD PTR ds:0x430124
  424139:	mov    ecx,DWORD PTR [eax]
  42413b:	mov    ebx,DWORD PTR [eax+0x4]
  42413e:	lea    edx,[esp+0x20]
  424142:	mov    DWORD PTR [esp+0x18],ecx
  424146:	push   edx
  424147:	mov    ecx,edi
  424149:	call   DWORD PTR ds:0x430128
  42414f:	mov    esi,DWORD PTR [eax+0x4]
  424152:	mov    ebp,DWORD PTR [eax]
  424154:	cmp    esi,ebx
  424156:	je     0x424171
  424158:	jmp    0x424160
  42415a:	lea    ebx,[ebx+0x0]
  424160:	mov    ax,WORD PTR [esp+0x34]
  424165:	cmp    ax,WORD PTR [esi]
  424168:	je     0x424171
  42416a:	add    esi,0x2
  42416d:	cmp    esi,ebx
  42416f:	jne    0x424160
  424171:	lea    ecx,[esp+0x28]
  424175:	push   ecx
  424176:	mov    ecx,edi
  424178:	call   DWORD PTR ds:0x430124
  42417e:	mov    edi,eax
  424180:	cmp    ebp,0xfffffffc
  424183:	je     0x424193
  424185:	test   ebp,ebp
  424187:	je     0x42418d
  424189:	cmp    ebp,DWORD PTR [edi]
  42418b:	je     0x424193
  42418d:	call   DWORD PTR ds:0x430390
  424193:	xor    eax,eax
  424195:	cmp    esi,DWORD PTR [edi+0x4]
  424198:	pop    edi
  424199:	pop    esi
  42419a:	pop    ebp
  42419b:	setne  al
  42419e:	pop    ebx
  42419f:	add    esp,0x20
  4241a2:	ret    0x4
  4241a5:	int3   
  4241a6:	int3   
  4241a7:	int3   
  4241a8:	int3   
  4241a9:	int3   
  4241aa:	int3   
  4241ab:	int3   
  4241ac:	int3   
  4241ad:	int3   
  4241ae:	int3   
  4241af:	int3   
  4241b0:	push   0xffffffff
  4241b2:	push   0x42df58
  4241b7:	mov    eax,fs:0x0
  4241bd:	push   eax
  4241be:	sub    esp,0x8
  4241c1:	push   esi
  4241c2:	mov    eax,ds:0x43e020
  4241c7:	xor    eax,esp
  4241c9:	push   eax
  4241ca:	lea    eax,[esp+0x10]
  4241ce:	mov    fs:0x0,eax
  4241d4:	mov    esi,ecx
  4241d6:	sub    esp,0x3c
  4241d9:	mov    eax,esp
  4241db:	mov    DWORD PTR [esp+0x48],esp
  4241df:	push   eax
  4241e0:	lea    ecx,[esp+0x64]
  4241e4:	mov    DWORD PTR [esp+0x58],0x0
  4241ec:	call   0x420fe0
  4241f1:	mov    eax,DWORD PTR [esp+0x5c]
  4241f5:	push   eax
  4241f6:	call   0x424230
  4241fb:	lea    ecx,[esp+0x24]
  4241ff:	push   ecx
  424200:	mov    DWORD PTR [esp+0x1c],0xffffffff
  424208:	call   0x420ef0
  42420d:	mov    eax,esi
  42420f:	mov    ecx,DWORD PTR [esp+0x10]
  424213:	mov    DWORD PTR fs:0x0,ecx
  42421a:	pop    ecx
  42421b:	pop    esi
  42421c:	add    esp,0x14
  42421f:	ret    0x40
  424222:	int3   
  424223:	int3   
  424224:	int3   
  424225:	int3   
  424226:	int3   
  424227:	int3   
  424228:	int3   
  424229:	int3   
  42422a:	int3   
  42422b:	int3   
  42422c:	int3   
  42422d:	int3   
  42422e:	int3   
  42422f:	int3   
  424230:	push   0xffffffff
  424232:	push   0x42df28
  424237:	mov    eax,fs:0x0
  42423d:	push   eax
  42423e:	mov    eax,ds:0x43e020
  424243:	push   ecx
  424244:	xor    eax,esp
  424246:	push   eax
  424247:	lea    eax,[esp+0x8]
  42424b:	mov    fs:0x0,eax
  424251:	mov    DWORD PTR [esp+0x10],0x0
  424259:	mov    eax,DWORD PTR [esp+0x18]
  42425d:	mov    DWORD PTR [esi],eax
  42425f:	lea    eax,[esi+0x4]
  424262:	push   eax
  424263:	lea    ecx,[esp+0x20]
  424267:	call   0x420fe0
  42426c:	lea    ecx,[esp+0x1c]
  424270:	push   ecx
  424271:	mov    DWORD PTR [esp+0x14],0xffffffff
  424279:	call   0x420ef0
  42427e:	mov    eax,esi
  424280:	mov    ecx,DWORD PTR [esp+0x8]
  424284:	mov    DWORD PTR fs:0x0,ecx
  42428b:	pop    ecx
  42428c:	add    esp,0x10
  42428f:	ret    0x40
  424292:	int3   
  424293:	int3   
  424294:	int3   
  424295:	int3   
  424296:	int3   
  424297:	int3   
  424298:	int3   
  424299:	int3   
  42429a:	int3   
  42429b:	int3   
  42429c:	int3   
  42429d:	int3   
  42429e:	int3   
  42429f:	int3   
  4242a0:	sub    esp,0xc
  4242a3:	mov    eax,DWORD PTR [esp+0x10]
  4242a7:	mov    ecx,DWORD PTR [esp+0x14]
  4242ab:	lea    edx,[esp]
  4242ae:	push   edx
  4242af:	mov    DWORD PTR [esi],0x0
  4242b5:	mov    DWORD PTR [esp+0x4],eax
  4242b9:	mov    DWORD PTR [esp+0x8],ecx
  4242bd:	call   0x408050
  4242c2:	add    esp,0x4
  4242c5:	test   al,al
  4242c7:	jne    0x4242ee
  4242c9:	lea    eax,[esi+0x8]
  4242cc:	test   eax,eax
  4242ce:	je     0x4242dc
  4242d0:	mov    ecx,DWORD PTR [esp]
  4242d3:	mov    edx,DWORD PTR [esp+0x4]
  4242d7:	mov    DWORD PTR [eax],ecx
  4242d9:	mov    DWORD PTR [eax+0x4],edx
  4242dc:	mov    eax,0x433008
  4242e1:	or     eax,0x1
  4242e4:	mov    DWORD PTR [esi],eax
  4242e6:	mov    eax,esi
  4242e8:	add    esp,0xc
  4242eb:	ret    0x8
  4242ee:	mov    DWORD PTR [esi],0x0
  4242f4:	mov    eax,esi
  4242f6:	add    esp,0xc
  4242f9:	ret    0x8
  4242fc:	int3   
  4242fd:	int3   
  4242fe:	int3   
  4242ff:	int3   
  424300:	push   ebp
  424301:	mov    ebp,esp
  424303:	push   0xffffffff
  424305:	push   0x42b040
  42430a:	mov    eax,fs:0x0
  424310:	push   eax
  424311:	sub    esp,0x8
  424314:	push   ebx
  424315:	push   esi
  424316:	push   edi
  424317:	mov    eax,ds:0x43e020
  42431c:	xor    eax,ebp
  42431e:	push   eax
  42431f:	lea    eax,[ebp-0xc]
  424322:	mov    fs:0x0,eax
  424328:	mov    DWORD PTR [ebp-0x10],esp
  42432b:	mov    edi,ecx
  42432d:	mov    DWORD PTR [ebp-0x14],edi
  424330:	mov    ebx,DWORD PTR [ebp+0xc]
  424333:	mov    esi,DWORD PTR [ebp+0x8]
  424336:	mov    eax,ebx
  424338:	sub    eax,esi
  42433a:	push   eax
  42433b:	call   DWORD PTR ds:0x4301f4
  424341:	mov    DWORD PTR [ebp-0x4],0x0
  424348:	cmp    esi,ebx
  42434a:	je     0x424373
  42434c:	movzx  eax,BYTE PTR [esi]
  42434f:	push   eax
  424350:	push   0x1
  424352:	mov    ecx,edi
  424354:	call   DWORD PTR ds:0x4301d4
  42435a:	inc    esi
  42435b:	jmp    0x424348
  42435d:	mov    ecx,DWORD PTR [ebp-0x14]
  424360:	push   0x0
  424362:	push   0x1
  424364:	call   DWORD PTR ds:0x4301c8
  42436a:	push   0x0
  42436c:	push   0x0
  42436e:	call   0x429e76
  424373:	mov    ecx,DWORD PTR [ebp-0xc]
  424376:	mov    DWORD PTR fs:0x0,ecx
  42437d:	pop    ecx
  42437e:	pop    edi
  42437f:	pop    esi
  424380:	pop    ebx
  424381:	mov    esp,ebp
  424383:	pop    ebp
  424384:	ret    0xc
  424387:	int3   
  424388:	int3   
  424389:	int3   
  42438a:	int3   
  42438b:	int3   
  42438c:	int3   
  42438d:	int3   
  42438e:	int3   
  42438f:	int3   
  424390:	sub    esp,0x3c
  424393:	push   ebx
  424394:	push   ebp
  424395:	push   esi
  424396:	lea    eax,[esp+0x10]
  42439a:	push   eax
  42439b:	mov    ecx,edi
  42439d:	call   DWORD PTR ds:0x430124
  4243a3:	lea    ecx,[esp+0x18]
  4243a7:	push   ecx
  4243a8:	mov    ecx,edi
  4243aa:	call   DWORD PTR ds:0x430128
  4243b0:	mov    edx,DWORD PTR [esp+0x14]
  4243b4:	mov    eax,DWORD PTR [esp+0x10]
  4243b8:	mov    ecx,DWORD PTR [esp+0x1c]
  4243bc:	mov    ebx,DWORD PTR [esp+0x60]
  4243c0:	mov    ebp,DWORD PTR [esp+0x64]
  4243c4:	push   edx
  4243c5:	mov    edx,DWORD PTR [esp+0x1c]
  4243c9:	push   eax
  4243ca:	push   ecx
  4243cb:	push   edx
  4243cc:	lea    eax,[esp+0x48]
  4243d0:	push   eax
  4243d1:	lea    ecx,[esp+0x60]
  4243d5:	push   ecx
  4243d6:	mov    DWORD PTR [esp+0x38],ebx
  4243da:	mov    DWORD PTR [esp+0x3c],ebp
  4243de:	call   0x424720
  4243e3:	mov    esi,eax
  4243e5:	mov    edx,DWORD PTR [esi+0x4]
  4243e8:	mov    eax,DWORD PTR [esi]
  4243ea:	mov    ecx,DWORD PTR [esi+0x8]
  4243ed:	mov    DWORD PTR [esp+0x2c],edx
  4243f1:	mov    edx,DWORD PTR [esi+0xc]
  4243f4:	mov    DWORD PTR [esp+0x34],edx
  4243f8:	cmp    eax,0xfffffffc
  4243fb:	je     0x42440b
  4243fd:	test   eax,eax
  4243ff:	je     0x424405
  424401:	cmp    eax,ecx
  424403:	je     0x42440b
  424405:	call   DWORD PTR ds:0x430390
  42440b:	mov    eax,DWORD PTR [esp+0x34]
  42440f:	cmp    DWORD PTR [esp+0x2c],eax
  424413:	je     0x424426
  424415:	push   ebp
  424416:	push   ebx
  424417:	push   edi
  424418:	lea    ecx,[esp+0x2c]
  42441c:	mov    eax,esi
  42441e:	call   0x424ca0
  424423:	add    esp,0xc
  424426:	pop    esi
  424427:	pop    ebp
  424428:	pop    ebx
  424429:	add    esp,0x3c
  42442c:	ret    
  42442d:	int3   
  42442e:	int3   
  42442f:	int3   
  424430:	push   0xffffffff
  424432:	push   0x42e568
  424437:	mov    eax,fs:0x0
  42443d:	push   eax
  42443e:	push   ecx
  42443f:	push   edi
  424440:	mov    eax,ds:0x43e020
  424445:	xor    eax,esp
  424447:	push   eax
  424448:	lea    eax,[esp+0xc]
  42444c:	mov    fs:0x0,eax
  424452:	mov    edi,ecx
  424454:	mov    DWORD PTR [esp+0x14],0x0
  42445c:	mov    ecx,DWORD PTR [esp+0x1c]
  424460:	sub    esp,0x44
  424463:	mov    eax,esp
  424465:	mov    DWORD PTR [edi],0x0
  42446b:	mov    DWORD PTR [eax],ecx
  42446d:	mov    edx,DWORD PTR [esp+0x64]
  424471:	mov    DWORD PTR [eax+0x4],edx
  424474:	add    eax,0x8
  424477:	mov    DWORD PTR [esp+0x4c],esp
  42447b:	push   eax
  42447c:	lea    ecx,[esp+0x6c]
  424480:	call   0x420fe0
  424485:	call   0x424950
  42448a:	lea    eax,[esp+0x24]
  42448e:	push   eax
  42448f:	mov    DWORD PTR [esp+0x18],0xffffffff
  424497:	call   0x420ef0
  42449c:	mov    eax,edi
  42449e:	mov    ecx,DWORD PTR [esp+0xc]
  4244a2:	mov    DWORD PTR fs:0x0,ecx
  4244a9:	pop    ecx
  4244aa:	pop    edi
  4244ab:	add    esp,0x10
  4244ae:	ret    0x44
  4244b1:	int3   
  4244b2:	int3   
  4244b3:	int3   
  4244b4:	int3   
  4244b5:	int3   
  4244b6:	int3   
  4244b7:	int3   
  4244b8:	int3   
  4244b9:	int3   
  4244ba:	int3   
  4244bb:	int3   
  4244bc:	int3   
  4244bd:	int3   
  4244be:	int3   
  4244bf:	int3   
  4244c0:	push   0xffffffff
  4244c2:	push   0x42c3d2
  4244c7:	mov    eax,fs:0x0
  4244cd:	push   eax
  4244ce:	sub    esp,0x8c
  4244d4:	push   ebx
  4244d5:	push   ebp
  4244d6:	mov    eax,ds:0x43e020
  4244db:	xor    eax,esp
  4244dd:	push   eax
  4244de:	lea    eax,[esp+0x98]
  4244e5:	mov    fs:0x0,eax
  4244eb:	mov    ebp,DWORD PTR [esp+0xa8]
  4244f2:	mov    eax,DWORD PTR [esi]
  4244f4:	mov    ebx,DWORD PTR ds:0x430390
  4244fa:	cmp    eax,0xfffffffc
  4244fd:	je     0x424522
  4244ff:	test   eax,eax
  424501:	jne    0x424505
  424503:	call   ebx
  424505:	mov    eax,DWORD PTR [esi]
  424507:	cmp    DWORD PTR [eax+0x18],0x8
  42450b:	jb     0x424512
  42450d:	mov    ecx,DWORD PTR [eax+0x4]
  424510:	jmp    0x424515
  424512:	lea    ecx,[eax+0x4]
  424515:	mov    eax,DWORD PTR [eax+0x14]
  424518:	lea    ecx,[ecx+eax*2]
  42451b:	cmp    DWORD PTR [esi+0x4],ecx
  42451e:	jb     0x424522
  424520:	call   ebx
  424522:	mov    eax,DWORD PTR [esi]
  424524:	add    DWORD PTR [esi+0x4],0x2
  424528:	cmp    eax,0xfffffffc
  42452b:	je     0x42453c
  42452d:	test   eax,eax
  42452f:	je     0x42453a
  424531:	cmp    eax,DWORD PTR [esp+0xb0]
  424538:	je     0x42453c
  42453a:	call   ebx
  42453c:	mov    edx,DWORD PTR [esi+0x4]
  42453f:	cmp    edx,DWORD PTR [esp+0xb4]
  424546:	jne    0x424586
  424548:	push   0x432fd8
  42454d:	lea    ecx,[esp+0x80]
  424554:	call   DWORD PTR ds:0x43011c
  42455a:	push   eax
  42455b:	lea    ecx,[esp+0x3c]
  42455f:	mov    DWORD PTR [esp+0xa4],0x0
  42456a:	call   0x404350
  42456f:	push   0x435d8c
  424574:	lea    eax,[esp+0x3c]
  424578:	push   eax
  424579:	mov    DWORD PTR [esp+0x40],0x43301c
  424581:	call   0x429e76
  424586:	mov    eax,DWORD PTR [esi]
  424588:	cmp    eax,0xfffffffc
  42458b:	je     0x4245b0
  42458d:	test   eax,eax
  42458f:	jne    0x424593
  424591:	call   ebx
  424593:	mov    eax,DWORD PTR [esi]
  424595:	cmp    DWORD PTR [eax+0x18],0x8
  424599:	jb     0x4245a0
  42459b:	mov    ecx,DWORD PTR [eax+0x4]
  42459e:	jmp    0x4245a3
  4245a0:	lea    ecx,[eax+0x4]
  4245a3:	mov    edx,DWORD PTR [eax+0x14]
  4245a6:	lea    eax,[ecx+edx*2]
  4245a9:	cmp    DWORD PTR [esi+0x4],eax
  4245ac:	jb     0x4245b0
  4245ae:	call   ebx
  4245b0:	mov    eax,DWORD PTR [esi+0x4]
  4245b3:	cmp    WORD PTR [eax],0x6e
  4245b7:	jne    0x4245e2
  4245b9:	push   0xa
  4245bb:	mov    ecx,DWORD PTR [esp+0xb0]
  4245c2:	call   DWORD PTR ds:0x430238
  4245c8:	mov    ecx,DWORD PTR [esp+0x98]
  4245cf:	mov    DWORD PTR fs:0x0,ecx
  4245d6:	pop    ecx
  4245d7:	pop    ebp
  4245d8:	pop    ebx
  4245d9:	add    esp,0x98
  4245df:	ret    0x10
  4245e2:	mov    eax,DWORD PTR [esi]
  4245e4:	cmp    eax,0xfffffffc
  4245e7:	je     0x42460c
  4245e9:	test   eax,eax
  4245eb:	jne    0x4245ef
  4245ed:	call   ebx
  4245ef:	mov    eax,DWORD PTR [esi]
  4245f1:	cmp    DWORD PTR [eax+0x18],0x8
  4245f5:	jb     0x4245fc
  4245f7:	mov    ecx,DWORD PTR [eax+0x4]
  4245fa:	jmp    0x4245ff
  4245fc:	lea    ecx,[eax+0x4]
  4245ff:	mov    edx,DWORD PTR [eax+0x14]
  424602:	lea    eax,[ecx+edx*2]
  424605:	cmp    DWORD PTR [esi+0x4],eax
  424608:	jb     0x42460c
  42460a:	call   ebx
  42460c:	mov    eax,DWORD PTR [esi+0x4]
  42460f:	movzx  ecx,WORD PTR [eax]
  424612:	push   ecx
  424613:	mov    eax,ebp
  424615:	call   0x424120
  42461a:	mov    ecx,esi
  42461c:	test   al,al
  42461e:	je     0x42462b
  424620:	call   0x402ab0
  424625:	movzx  edx,WORD PTR [eax]
  424628:	push   edx
  424629:	jmp    0x4245bb
  42462b:	call   0x402ab0
  424630:	movzx  eax,WORD PTR [eax]
  424633:	push   eax
  424634:	mov    eax,ebp
  424636:	call   0x424090
  42463b:	mov    ecx,esi
  42463d:	test   al,al
  42463f:	je     0x42464f
  424641:	call   0x402ab0
  424646:	movzx  ecx,WORD PTR [eax]
  424649:	push   ecx
  42464a:	jmp    0x4245bb
  42464f:	call   0x402ab0
  424654:	movzx  edx,WORD PTR [eax]
  424657:	push   edx
  424658:	mov    ebx,ebp
  42465a:	call   0x424010
  42465f:	test   al,al
  424661:	je     0x424673
  424663:	mov    ecx,esi
  424665:	call   0x402ab0
  42466a:	movzx  eax,WORD PTR [eax]
  42466d:	push   eax
  42466e:	jmp    0x4245bb
  424673:	push   0x432ff0
  424678:	lea    ecx,[esp+0x64]
  42467c:	call   DWORD PTR ds:0x43011c
  424682:	push   eax
  424683:	lea    ecx,[esp+0x14]
  424687:	mov    DWORD PTR [esp+0xa4],0x1
  424692:	call   0x404350
  424697:	push   0x435d8c
  42469c:	lea    ecx,[esp+0x14]
  4246a0:	push   ecx
  4246a1:	mov    DWORD PTR [esp+0x18],0x43301c
  4246a9:	call   0x429e76
  4246ae:	int3   
  4246af:	int3   
  4246b0:	mov    eax,DWORD PTR [esp+0x4]
  4246b4:	push   esi
  4246b5:	push   eax
  4246b6:	mov    esi,ecx
  4246b8:	call   0x4043b0
  4246bd:	mov    DWORD PTR [esi],0x43301c
  4246c3:	mov    eax,esi
  4246c5:	pop    esi
  4246c6:	ret    0x4
  4246c9:	int3   
  4246ca:	int3   
  4246cb:	int3   
  4246cc:	int3   
  4246cd:	int3   
  4246ce:	int3   
  4246cf:	int3   
  4246d0:	sub    esp,0x24
  4246d3:	push   edi
  4246d4:	lea    ecx,[esp+0xc]
  4246d8:	call   DWORD PTR ds:0x430118
  4246de:	lea    ecx,[esp+0x8]
  4246e2:	call   DWORD PTR ds:0x430264
  4246e8:	lea    eax,[esp]
  4246eb:	push   eax
  4246ec:	mov    ecx,edi
  4246ee:	call   DWORD PTR ds:0x430230
  4246f4:	mov    ecx,DWORD PTR [esp]
  4246f7:	mov    edx,DWORD PTR [esp+0x4]
  4246fb:	lea    eax,[esp]
  4246fe:	mov    DWORD PTR [esi],ecx
  424700:	push   eax
  424701:	mov    ecx,edi
  424703:	mov    DWORD PTR [esi+0x4],edx
  424706:	call   DWORD PTR ds:0x430244
  42470c:	mov    ecx,DWORD PTR [esp]
  42470f:	mov    edx,DWORD PTR [esp+0x4]
  424713:	mov    DWORD PTR [esi+0x8],ecx
  424716:	mov    DWORD PTR [esi+0xc],edx
  424719:	mov    eax,esi
  42471b:	add    esp,0x24
  42471e:	ret    
  42471f:	int3   
  424720:	sub    esp,0x1c
  424723:	mov    eax,DWORD PTR [esp+0x2c]
  424727:	push   ebx
  424728:	mov    ebx,DWORD PTR [esp+0x2c]
  42472c:	push   ebp
  42472d:	mov    ebp,DWORD PTR ds:0x430390
  424733:	push   esi
  424734:	push   edi
  424735:	mov    DWORD PTR [esp+0x14],ebx
  424739:	mov    DWORD PTR [esp+0x18],eax
  42473d:	lea    ecx,[ecx+0x0]
  424740:	cmp    ebx,0xfffffffc
  424743:	je     0x424751
  424745:	test   ebx,ebx
  424747:	je     0x42474f
  424749:	cmp    ebx,DWORD PTR [esp+0x40]
  42474d:	je     0x424751
  42474f:	call   ebp
  424751:	mov    edx,DWORD PTR [esp+0x44]
  424755:	cmp    DWORD PTR [esp+0x18],edx
  424759:	je     0x424901
  42475f:	mov    edx,DWORD PTR [esp+0x30]
  424763:	mov    eax,DWORD PTR [edx]
  424765:	mov    ecx,DWORD PTR [edx+0x8]
  424768:	mov    esi,DWORD PTR [edx+0xc]
  42476b:	mov    edi,DWORD PTR [edx+0x4]
  42476e:	cmp    eax,0xfffffffc
  424771:	je     0x42477d
  424773:	test   eax,eax
  424775:	je     0x42477b
  424777:	cmp    eax,ecx
  424779:	je     0x42477d
  42477b:	call   ebp
  42477d:	cmp    edi,esi
  42477f:	je     0x4248fd
  424785:	mov    eax,DWORD PTR [esp+0x30]
  424789:	mov    ecx,DWORD PTR [esp+0x18]
  42478d:	mov    edx,DWORD PTR [eax+0x4]
  424790:	mov    esi,DWORD PTR [eax]
  424792:	mov    DWORD PTR [esp+0x28],ecx
  424796:	mov    DWORD PTR [esp+0x20],edx
  42479a:	lea    ebx,[ebx+0x0]
  4247a0:	cmp    ebx,0xfffffffc
  4247a3:	je     0x4247b1
  4247a5:	test   ebx,ebx
  4247a7:	je     0x4247af
  4247a9:	cmp    ebx,DWORD PTR [esp+0x40]
  4247ad:	je     0x4247b1
  4247af:	call   ebp
  4247b1:	mov    eax,DWORD PTR [esp+0x44]
  4247b5:	cmp    DWORD PTR [esp+0x28],eax
  4247b9:	je     0x4248a5
  4247bf:	mov    ecx,DWORD PTR [esp+0x30]
  4247c3:	mov    eax,DWORD PTR [ecx+0x8]
  4247c6:	mov    edi,DWORD PTR [ecx+0xc]
  4247c9:	cmp    esi,0xfffffffc
  4247cc:	je     0x4247d8
  4247ce:	test   esi,esi
  4247d0:	je     0x4247d6
  4247d2:	cmp    esi,eax
  4247d4:	je     0x4247d8
  4247d6:	call   ebp
  4247d8:	cmp    DWORD PTR [esp+0x20],edi
  4247dc:	je     0x4248a5
  4247e2:	cmp    esi,0xfffffffc
  4247e5:	je     0x42480f
  4247e7:	test   esi,esi
  4247e9:	jne    0x4247ed
  4247eb:	call   ebp
  4247ed:	mov    edi,0x8
  4247f2:	cmp    DWORD PTR [esi+0x18],edi
  4247f5:	jb     0x4247fc
  4247f7:	mov    eax,DWORD PTR [esi+0x4]
  4247fa:	jmp    0x4247ff
  4247fc:	lea    eax,[esi+0x4]
  4247ff:	mov    ecx,DWORD PTR [esi+0x14]
  424802:	lea    edx,[eax+ecx*2]
  424805:	cmp    DWORD PTR [esp+0x20],edx
  424809:	jb     0x424814
  42480b:	call   ebp
  42480d:	jmp    0x424814
  42480f:	mov    edi,0x8
  424814:	cmp    ebx,0xfffffffc
  424817:	je     0x42483a
  424819:	test   ebx,ebx
  42481b:	jne    0x42481f
  42481d:	call   ebp
  42481f:	cmp    DWORD PTR [ebx+0x18],edi
  424822:	jb     0x424829
  424824:	mov    eax,DWORD PTR [ebx+0x4]
  424827:	jmp    0x42482c
  424829:	lea    eax,[ebx+0x4]
  42482c:	mov    ecx,DWORD PTR [ebx+0x14]
  42482f:	lea    edx,[eax+ecx*2]
  424832:	cmp    DWORD PTR [esp+0x28],edx
  424836:	jb     0x42483a
  424838:	call   ebp
  42483a:	mov    eax,DWORD PTR [esp+0x28]
  42483e:	mov    cx,WORD PTR [eax]
  424841:	mov    edx,DWORD PTR [esp+0x20]
  424845:	cmp    cx,WORD PTR [edx]
  424848:	jne    0x4248a5
  42484a:	cmp    ebx,0xfffffffc
  42484d:	je     0x424870
  42484f:	test   ebx,ebx
  424851:	jne    0x424855
  424853:	call   ebp
  424855:	cmp    DWORD PTR [ebx+0x18],edi
  424858:	jb     0x42485f
  42485a:	mov    eax,DWORD PTR [ebx+0x4]
  42485d:	jmp    0x424862
  42485f:	lea    eax,[ebx+0x4]
  424862:	mov    ecx,DWORD PTR [ebx+0x14]
  424865:	lea    edx,[eax+ecx*2]
  424868:	cmp    DWORD PTR [esp+0x28],edx
  42486c:	jb     0x424870
  42486e:	call   ebp
  424870:	add    DWORD PTR [esp+0x28],0x2
  424875:	cmp    esi,0xfffffffc
  424878:	je     0x42489b
  42487a:	test   esi,esi
  42487c:	jne    0x424880
  42487e:	call   ebp
  424880:	cmp    DWORD PTR [esi+0x18],edi
  424883:	jb     0x42488a
  424885:	mov    eax,DWORD PTR [esi+0x4]
  424888:	jmp    0x42488d
  42488a:	lea    eax,[esi+0x4]
  42488d:	mov    ecx,DWORD PTR [esi+0x14]
  424890:	lea    edx,[eax+ecx*2]
  424893:	cmp    DWORD PTR [esp+0x20],edx
  424897:	jb     0x42489b
  424899:	call   ebp
  42489b:	add    DWORD PTR [esp+0x20],0x2
  4248a0:	jmp    0x4247a0
  4248a5:	mov    ecx,DWORD PTR [esp+0x30]
  4248a9:	mov    eax,DWORD PTR [ecx+0x8]
  4248ac:	mov    edi,DWORD PTR [ecx+0xc]
  4248af:	cmp    esi,0xfffffffc
  4248b2:	je     0x4248be
  4248b4:	test   esi,esi
  4248b6:	je     0x4248bc
  4248b8:	cmp    esi,eax
  4248ba:	je     0x4248be
  4248bc:	call   ebp
  4248be:	cmp    DWORD PTR [esp+0x20],edi
  4248c2:	je     0x42491e
  4248c4:	mov    esi,DWORD PTR [esp+0x14]
  4248c8:	cmp    esi,0xfffffffc
  4248cb:	je     0x4248ef
  4248cd:	test   esi,esi
  4248cf:	jne    0x4248d3
  4248d1:	call   ebp
  4248d3:	cmp    DWORD PTR [esi+0x18],0x8
  4248d7:	jb     0x4248de
  4248d9:	mov    eax,DWORD PTR [esi+0x4]
  4248dc:	jmp    0x4248e1
  4248de:	lea    eax,[esi+0x4]
  4248e1:	mov    ecx,DWORD PTR [esi+0x14]
  4248e4:	lea    edx,[eax+ecx*2]
  4248e7:	cmp    DWORD PTR [esp+0x18],edx
  4248eb:	jb     0x4248ef
  4248ed:	call   ebp
  4248ef:	add    DWORD PTR [esp+0x18],0x2
  4248f4:	mov    ebx,DWORD PTR [esp+0x14]
  4248f8:	jmp    0x424740
  4248fd:	mov    edx,DWORD PTR [esp+0x44]
  424901:	mov    eax,DWORD PTR [esp+0x34]
  424905:	mov    ecx,DWORD PTR [esp+0x40]
  424909:	mov    DWORD PTR [eax+0xc],edx
  42490c:	mov    DWORD PTR [eax+0x8],ecx
  42490f:	mov    DWORD PTR [eax],ecx
  424911:	mov    DWORD PTR [eax+0x4],edx
  424914:	pop    edi
  424915:	pop    esi
  424916:	pop    ebp
  424917:	pop    ebx
  424918:	add    esp,0x1c
  42491b:	ret    0x18
  42491e:	mov    eax,DWORD PTR [esp+0x34]
  424922:	mov    ecx,DWORD PTR [esp+0x14]
  424926:	mov    edx,DWORD PTR [esp+0x18]
  42492a:	pop    edi
  42492b:	pop    esi
  42492c:	mov    DWORD PTR [eax],ecx
  42492e:	mov    ecx,DWORD PTR [esp+0x20]
  424932:	pop    ebp
  424933:	mov    DWORD PTR [eax+0x8],ebx
  424936:	mov    DWORD PTR [eax+0xc],ecx
  424939:	mov    DWORD PTR [eax+0x4],edx
  42493c:	pop    ebx
  42493d:	add    esp,0x1c
  424940:	ret    0x18
  424943:	int3   
  424944:	int3   
  424945:	int3   
  424946:	int3   
  424947:	int3   
  424948:	int3   
  424949:	int3   
  42494a:	int3   
  42494b:	int3   
  42494c:	int3   
  42494d:	int3   
  42494e:	int3   
  42494f:	int3   
  424950:	push   0xffffffff
  424952:	push   0x42e568
  424957:	mov    eax,fs:0x0
  42495d:	push   eax
  42495e:	push   ecx
  42495f:	push   esi
  424960:	mov    eax,ds:0x43e020
  424965:	xor    eax,esp
  424967:	push   eax
  424968:	lea    eax,[esp+0xc]
  42496c:	mov    fs:0x0,eax
  424972:	mov    DWORD PTR [esp+0x14],0x0
  42497a:	mov    ecx,DWORD PTR [esp+0x1c]
  42497e:	sub    esp,0x44
  424981:	mov    eax,esp
  424983:	mov    DWORD PTR [eax],ecx
  424985:	mov    edx,DWORD PTR [esp+0x64]
  424989:	mov    DWORD PTR [eax+0x4],edx
  42498c:	add    eax,0x8
  42498f:	mov    DWORD PTR [esp+0x4c],esp
  424993:	push   eax
  424994:	lea    ecx,[esp+0x6c]
  424998:	lea    esi,[edi+0x8]
  42499b:	call   0x420fe0
  4249a0:	call   0x424d10
  4249a5:	movzx  eax,al
  4249a8:	neg    eax
  4249aa:	sbb    eax,eax
  4249ac:	lea    ecx,[esp+0x24]
  4249b0:	and    eax,0x433010
  4249b5:	push   ecx
  4249b6:	mov    DWORD PTR [edi],eax
  4249b8:	mov    DWORD PTR [esp+0x18],0xffffffff
  4249c0:	call   0x420ef0
  4249c5:	mov    ecx,DWORD PTR [esp+0xc]
  4249c9:	mov    DWORD PTR fs:0x0,ecx
  4249d0:	pop    ecx
  4249d1:	pop    esi
  4249d2:	add    esp,0x10
  4249d5:	ret    0x44
  4249d8:	int3   
  4249d9:	int3   
  4249da:	int3   
  4249db:	int3   
  4249dc:	int3   
  4249dd:	int3   
  4249de:	int3   
  4249df:	int3   
  4249e0:	push   ebp
  4249e1:	mov    ebp,esp
  4249e3:	push   0xffffffff
  4249e5:	push   0x42b901
  4249ea:	mov    eax,fs:0x0
  4249f0:	push   eax
  4249f1:	sub    esp,0x10
  4249f4:	push   ebx
  4249f5:	push   esi
  4249f6:	push   edi
  4249f7:	mov    eax,ds:0x43e020
  4249fc:	xor    eax,ebp
  4249fe:	push   eax
  4249ff:	lea    eax,[ebp-0xc]
  424a02:	mov    fs:0x0,eax
  424a08:	mov    DWORD PTR [ebp-0x10],esp
  424a0b:	mov    esi,DWORD PTR [ebp+0xc]
  424a0e:	mov    edi,ecx
  424a10:	xor    ebx,ebx
  424a12:	mov    DWORD PTR [ebp-0x14],esi
  424a15:	mov    DWORD PTR [ebp-0x4],ebx
  424a18:	cmp    edi,DWORD PTR [ebp+0x8]
  424a1b:	je     0x424a68
  424a1d:	mov    DWORD PTR [ebp-0x18],esi
  424a20:	mov    DWORD PTR [ebp-0x1c],esi
  424a23:	mov    BYTE PTR [ebp-0x4],0x1
  424a27:	cmp    esi,ebx
  424a29:	je     0x424a34
  424a2b:	push   edi
  424a2c:	mov    ecx,esi
  424a2e:	call   DWORD PTR ds:0x430118
  424a34:	add    esi,0x1c
  424a37:	mov    BYTE PTR [ebp-0x4],bl
  424a3a:	mov    DWORD PTR [ebp+0xc],esi
  424a3d:	add    edi,0x1c
  424a40:	jmp    0x424a18
  424a42:	mov    esi,DWORD PTR [ebp-0x14]
  424a45:	mov    edi,DWORD PTR [ebp+0xc]
  424a48:	cmp    esi,edi
  424a4a:	je     0x424a5f
  424a4c:	lea    esp,[esp+0x0]
  424a50:	mov    ecx,esi
  424a52:	call   DWORD PTR ds:0x430264
  424a58:	add    esi,0x1c
  424a5b:	cmp    esi,edi
  424a5d:	jne    0x424a50
  424a5f:	xor    ebx,ebx
  424a61:	push   ebx
  424a62:	push   ebx
  424a63:	call   0x429e76
  424a68:	mov    eax,esi
  424a6a:	mov    ecx,DWORD PTR [ebp-0xc]
  424a6d:	mov    DWORD PTR fs:0x0,ecx
  424a74:	pop    ecx
  424a75:	pop    edi
  424a76:	pop    esi
  424a77:	pop    ebx
  424a78:	mov    esp,ebp
  424a7a:	pop    ebp
  424a7b:	ret    
  424a7c:	int3   
  424a7d:	int3   
  424a7e:	int3   
  424a7f:	int3   
  424a80:	mov    eax,DWORD PTR [esp+0xc]
  424a84:	xor    ecx,ecx
  424a86:	cmp    eax,0x4
  424a89:	je     0x424ad6
  424a8b:	cmp    eax,ecx
  424a8d:	je     0x424abf
  424a8f:	cmp    eax,0x1
  424a92:	je     0x424abf
  424a94:	cmp    eax,0x2
  424a97:	je     0x424ae6
  424a99:	cmp    eax,0x3
  424a9c:	jne    0x424ad6
  424a9e:	push   esi
  424a9f:	mov    esi,DWORD PTR [esp+0xc]
  424aa3:	mov    ecx,DWORD PTR [esi]
  424aa5:	push   0x43f888
  424aaa:	call   DWORD PTR ds:0x4302d4
  424ab0:	movzx  eax,al
  424ab3:	neg    eax
  424ab5:	sbb    eax,eax
  424ab7:	and    eax,DWORD PTR [esp+0x8]
  424abb:	mov    DWORD PTR [esi],eax
  424abd:	pop    esi
  424abe:	ret    
  424abf:	mov    eax,DWORD PTR [esp+0x8]
  424ac3:	cmp    eax,ecx
  424ac5:	je     0x424ae6
  424ac7:	mov    ecx,DWORD PTR [esp+0x4]
  424acb:	mov    edx,DWORD PTR [ecx]
  424acd:	mov    DWORD PTR [eax],edx
  424acf:	mov    ecx,DWORD PTR [ecx+0x4]
  424ad2:	mov    DWORD PTR [eax+0x4],ecx
  424ad5:	ret    
  424ad6:	mov    eax,DWORD PTR [esp+0x8]
  424ada:	mov    BYTE PTR [eax+0x5],cl
  424add:	mov    BYTE PTR [eax+0x4],cl
  424ae0:	mov    DWORD PTR [eax],0x43f888
  424ae6:	ret    
  424ae7:	int3   
  424ae8:	int3   
  424ae9:	int3   
  424aea:	int3   
  424aeb:	int3   
  424aec:	int3   
  424aed:	int3   
  424aee:	int3   
  424aef:	int3   
  424af0:	mov    eax,DWORD PTR [esp+0xc]
  424af4:	mov    ecx,DWORD PTR [esp+0x8]
  424af8:	push   eax
  424af9:	mov    eax,DWORD PTR [esp+0x8]
  424afd:	mov    edx,DWORD PTR [eax]
  424aff:	push   ecx
  424b00:	mov    ecx,DWORD PTR [eax+0x4]
  424b03:	call   edx
  424b05:	ret    
  424b06:	int3   
  424b07:	int3   
  424b08:	int3   
  424b09:	int3   
  424b0a:	int3   
  424b0b:	int3   
  424b0c:	int3   
  424b0d:	int3   
  424b0e:	int3   
  424b0f:	int3   
  424b10:	push   ecx
  424b11:	mov    eax,DWORD PTR [esp+0x10]
  424b15:	push   edi
  424b16:	cmp    eax,0x4
  424b19:	je     0x424b39
  424b1b:	mov    edi,DWORD PTR [esp+0x10]
  424b1f:	mov    BYTE PTR [esp+0x14],0x0
  424b24:	mov    ecx,DWORD PTR [esp+0x14]
  424b28:	push   ecx
  424b29:	mov    ecx,DWORD PTR [esp+0x10]
  424b2d:	push   eax
  424b2e:	call   0x424b70
  424b33:	add    esp,0x8
  424b36:	pop    edi
  424b37:	pop    ecx
  424b38:	ret    
  424b39:	mov    eax,DWORD PTR [esp+0x10]
  424b3d:	xor    cl,cl
  424b3f:	mov    DWORD PTR [eax],0x43f940
  424b45:	mov    BYTE PTR [eax+0x4],cl
  424b48:	mov    BYTE PTR [eax+0x5],cl
  424b4b:	pop    edi
  424b4c:	pop    ecx
  424b4d:	ret    
  424b4e:	int3   
  424b4f:	int3   
  424b50:	mov    eax,DWORD PTR [esp+0x4]
  424b54:	mov    eax,DWORD PTR [eax]
  424b56:	mov    edx,DWORD PTR [eax]
  424b58:	lea    ecx,[eax+0x8]
  424b5b:	push   ecx
  424b5c:	mov    ecx,DWORD PTR [eax+0x4]
  424b5f:	call   edx
  424b61:	ret    
  424b62:	int3   
  424b63:	int3   
  424b64:	int3   
  424b65:	int3   
  424b66:	int3   
  424b67:	int3   
  424b68:	int3   
  424b69:	int3   
  424b6a:	int3   
  424b6b:	int3   
  424b6c:	int3   
  424b6d:	int3   
  424b6e:	int3   
  424b6f:	int3   
  424b70:	push   0xffffffff
  424b72:	push   0x42e53b
  424b77:	mov    eax,fs:0x0
  424b7d:	push   eax
  424b7e:	push   ecx
  424b7f:	push   ebp
  424b80:	push   esi
  424b81:	mov    eax,ds:0x43e020
  424b86:	xor    eax,esp
  424b88:	push   eax
  424b89:	lea    eax,[esp+0x10]
  424b8d:	mov    fs:0x0,eax
  424b93:	mov    eax,DWORD PTR [esp+0x20]
  424b97:	mov    esi,ecx
  424b99:	test   eax,eax
  424b9b:	jne    0x424bfc
  424b9d:	mov    ebp,DWORD PTR [esi]
  424b9f:	push   0x44
  424ba1:	call   0x425050
  424ba6:	mov    esi,eax
  424ba8:	add    esp,0x4
  424bab:	mov    DWORD PTR [esp+0x20],esi
  424baf:	mov    DWORD PTR [esp+0x18],0x0
  424bb7:	test   esi,esi
  424bb9:	je     0x424be6
  424bbb:	mov    eax,DWORD PTR [ebp+0x0]
  424bbe:	mov    DWORD PTR [esi],eax
  424bc0:	mov    ecx,DWORD PTR [ebp+0x4]
  424bc3:	lea    edx,[esi+0x8]
  424bc6:	mov    DWORD PTR [esi+0x4],ecx
  424bc9:	lea    ecx,[ebp+0x8]
  424bcc:	push   edx
  424bcd:	call   0x420fe0
  424bd2:	mov    DWORD PTR [edi],esi
  424bd4:	mov    ecx,DWORD PTR [esp+0x10]
  424bd8:	mov    DWORD PTR fs:0x0,ecx
  424bdf:	pop    ecx
  424be0:	pop    esi
  424be1:	pop    ebp
  424be2:	add    esp,0x10
  424be5:	ret    
  424be6:	xor    esi,esi
  424be8:	mov    DWORD PTR [edi],esi
  424bea:	mov    ecx,DWORD PTR [esp+0x10]
  424bee:	mov    DWORD PTR fs:0x0,ecx
  424bf5:	pop    ecx
  424bf6:	pop    esi
  424bf7:	pop    ebp
  424bf8:	add    esp,0x10
  424bfb:	ret    
  424bfc:	cmp    eax,0x1
  424bff:	jne    0x424c1d
  424c01:	mov    eax,DWORD PTR [esi]
  424c03:	mov    DWORD PTR [edi],eax
  424c05:	mov    DWORD PTR [esi],0x0
  424c0b:	mov    ecx,DWORD PTR [esp+0x10]
  424c0f:	mov    DWORD PTR fs:0x0,ecx
  424c16:	pop    ecx
  424c17:	pop    esi
  424c18:	pop    ebp
  424c19:	add    esp,0x10
  424c1c:	ret    
  424c1d:	cmp    eax,0x2
  424c20:	jne    0x424c52
  424c22:	mov    esi,DWORD PTR [edi]
  424c24:	test   esi,esi
  424c26:	je     0x424c3a
  424c28:	lea    ecx,[esi+0x8]
  424c2b:	push   ecx
  424c2c:	call   0x420ef0
  424c31:	push   esi
  424c32:	call   0x42504a
  424c37:	add    esp,0x4
  424c3a:	mov    DWORD PTR [edi],0x0
  424c40:	mov    ecx,DWORD PTR [esp+0x10]
  424c44:	mov    DWORD PTR fs:0x0,ecx
  424c4b:	pop    ecx
  424c4c:	pop    esi
  424c4d:	pop    ebp
  424c4e:	add    esp,0x10
  424c51:	ret    
  424c52:	cmp    eax,0x3
  424c55:	jne    0x424c7e
  424c57:	mov    ecx,DWORD PTR [edi]
  424c59:	push   0x43f940
  424c5e:	call   DWORD PTR ds:0x4302d4
  424c64:	test   al,al
  424c66:	je     0x424c3a
  424c68:	mov    edx,DWORD PTR [esi]
  424c6a:	mov    DWORD PTR [edi],edx
  424c6c:	mov    ecx,DWORD PTR [esp+0x10]
  424c70:	mov    DWORD PTR fs:0x0,ecx
  424c77:	pop    ecx
  424c78:	pop    esi
  424c79:	pop    ebp
  424c7a:	add    esp,0x10
  424c7d:	ret    
  424c7e:	mov    DWORD PTR [edi],0x43f940
  424c84:	mov    BYTE PTR [edi+0x4],0x0
  424c88:	mov    BYTE PTR [edi+0x5],0x0
  424c8c:	mov    ecx,DWORD PTR [esp+0x10]
  424c90:	mov    DWORD PTR fs:0x0,ecx
  424c97:	pop    ecx
  424c98:	pop    esi
  424c99:	pop    ebp
  424c9a:	add    esp,0x10
  424c9d:	ret    
  424c9e:	int3   
  424c9f:	int3   
  424ca0:	sub    esp,0x20
  424ca3:	push   ebx
  424ca4:	mov    ebx,DWORD PTR [eax+0x8]
  424ca7:	push   ebp
  424ca8:	mov    ebp,DWORD PTR [eax+0xc]
  424cab:	push   esi
  424cac:	mov    esi,DWORD PTR [eax]
  424cae:	push   edi
  424caf:	mov    edi,DWORD PTR [eax+0x4]
  424cb2:	mov    eax,DWORD PTR [ecx]
  424cb4:	mov    ecx,DWORD PTR [ecx+0x4]
  424cb7:	lea    edx,[esp+0x38]
  424cbb:	mov    DWORD PTR [esp+0x14],esi
  424cbf:	mov    DWORD PTR [esp+0x18],edi
  424cc3:	mov    DWORD PTR [esp+0x1c],ebx
  424cc7:	mov    DWORD PTR [esp+0x20],ebp
  424ccb:	mov    DWORD PTR [esp+0x24],eax
  424ccf:	mov    DWORD PTR [esp+0x28],ecx
  424cd3:	mov    DWORD PTR [esp+0x2c],edx
  424cd7:	cmp    esi,0xfffffffc
  424cda:	je     0x424cea
  424cdc:	test   esi,esi
  424cde:	je     0x424ce4
  424ce0:	cmp    esi,ebx
  424ce2:	je     0x424cea
  424ce4:	call   DWORD PTR ds:0x430390
  424cea:	cmp    edi,ebp
  424cec:	je     0x424d02
  424cee:	push   ebp
  424cef:	push   ebx
  424cf0:	push   edi
  424cf1:	mov    edi,DWORD PTR [esp+0x40]
  424cf5:	push   esi
  424cf6:	lea    eax,[esp+0x34]
  424cfa:	call   0x424da0
  424cff:	add    esp,0x10
  424d02:	pop    edi
  424d03:	pop    esi
  424d04:	pop    ebp
  424d05:	pop    ebx
  424d06:	add    esp,0x20
  424d09:	ret    
  424d0a:	int3   
  424d0b:	int3   
  424d0c:	int3   
  424d0d:	int3   
  424d0e:	int3   
  424d0f:	int3   
  424d10:	push   0xffffffff
  424d12:	push   0x42e568
  424d17:	mov    eax,fs:0x0
  424d1d:	push   eax
  424d1e:	push   ecx
  424d1f:	push   ebx
  424d20:	mov    eax,ds:0x43e020
  424d25:	xor    eax,esp
  424d27:	push   eax
  424d28:	lea    eax,[esp+0xc]
  424d2c:	mov    fs:0x0,eax
  424d32:	xor    eax,eax
  424d34:	mov    DWORD PTR [esp+0x14],eax
  424d38:	mov    ecx,DWORD PTR [esp+0x1c]
  424d3c:	mov    BYTE PTR [esp+0x8],al
  424d40:	mov    eax,DWORD PTR [esp+0x8]
  424d44:	push   eax
  424d45:	sub    esp,0x44
  424d48:	mov    eax,esp
  424d4a:	mov    DWORD PTR [eax],ecx
  424d4c:	mov    edx,DWORD PTR [esp+0x68]
  424d50:	mov    DWORD PTR [eax+0x4],edx
  424d53:	add    eax,0x8
  424d56:	mov    DWORD PTR [esp+0x50],esp
  424d5a:	push   eax
  424d5b:	lea    ecx,[esp+0x70]
  424d5f:	call   0x420fe0
  424d64:	mov    ecx,esi
  424d66:	call   0x424e00
  424d6b:	mov    bl,al
  424d6d:	lea    eax,[esp+0x24]
  424d71:	push   eax
  424d72:	mov    DWORD PTR [esp+0x18],0xffffffff
  424d7a:	call   0x420ef0
  424d7f:	mov    al,bl
  424d81:	mov    ecx,DWORD PTR [esp+0xc]
  424d85:	mov    DWORD PTR fs:0x0,ecx
  424d8c:	pop    ecx
  424d8d:	pop    ebx
  424d8e:	add    esp,0x10
  424d91:	ret    0x44
  424d94:	int3   
  424d95:	int3   
  424d96:	int3   
  424d97:	int3   
  424d98:	int3   
  424d99:	int3   
  424d9a:	int3   
  424d9b:	int3   
  424d9c:	int3   
  424d9d:	int3   
  424d9e:	int3   
  424d9f:	int3   
  424da0:	push   ecx
  424da1:	push   ebx
  424da2:	push   esi
  424da3:	mov    esi,eax
  424da5:	mov    eax,DWORD PTR [esp+0x10]
  424da9:	cmp    eax,0xfffffffc
  424dac:	je     0x424dc2
  424dae:	test   eax,eax
  424db0:	je     0x424db8
  424db2:	cmp    eax,DWORD PTR [esp+0x18]
  424db6:	je     0x424dc2
  424db8:	call   DWORD PTR ds:0x430390
  424dbe:	mov    eax,DWORD PTR [esp+0x10]
  424dc2:	mov    ecx,DWORD PTR [esp+0x14]
  424dc6:	mov    edx,DWORD PTR [esp+0x1c]
  424dca:	cmp    ecx,edx
  424dcc:	je     0x424de9
  424dce:	mov    ebx,DWORD PTR [esi+0x4]
  424dd1:	mov    esi,DWORD PTR [esi]
  424dd3:	push   ebx
  424dd4:	push   esi
  424dd5:	push   edx
  424dd6:	mov    edx,DWORD PTR [esp+0x24]
  424dda:	push   edx
  424ddb:	push   ecx
  424ddc:	push   eax
  424ddd:	mov    ecx,edi
  424ddf:	call   DWORD PTR ds:0x43023c
  424de5:	pop    esi
  424de6:	pop    ebx
  424de7:	pop    ecx
  424de8:	ret    
  424de9:	mov    edx,DWORD PTR [esi+0x4]
  424dec:	push   edx
  424ded:	mov    edx,DWORD PTR [esi]
  424def:	push   edx
  424df0:	push   ecx
  424df1:	push   eax
  424df2:	mov    ecx,edi
  424df4:	call   DWORD PTR ds:0x430240
  424dfa:	pop    esi
  424dfb:	pop    ebx
  424dfc:	pop    ecx
  424dfd:	ret    
  424dfe:	int3   
  424dff:	int3   
  424e00:	push   0xffffffff
  424e02:	push   0x42e508
  424e07:	mov    eax,fs:0x0
  424e0d:	push   eax
  424e0e:	sub    esp,0x8
  424e11:	push   edi
  424e12:	mov    eax,ds:0x43e020
  424e17:	xor    eax,esp
  424e19:	push   eax
  424e1a:	lea    eax,[esp+0x10]
  424e1e:	mov    fs:0x0,eax
  424e24:	mov    edi,ecx
  424e26:	lea    eax,[esp+0x20]
  424e2a:	push   eax
  424e2b:	mov    DWORD PTR [esp+0x1c],0x0
  424e33:	call   0x408050
  424e38:	add    esp,0x4
  424e3b:	test   al,al
  424e3d:	jne    0x424e97
  424e3f:	mov    edx,DWORD PTR [esp+0x20]
  424e43:	mov    BYTE PTR [esp+0xc],al
  424e47:	mov    ecx,DWORD PTR [esp+0xc]
  424e4b:	push   ecx
  424e4c:	sub    esp,0x44
  424e4f:	mov    eax,esp
  424e51:	mov    DWORD PTR [eax],edx
  424e53:	mov    ecx,DWORD PTR [esp+0x6c]
  424e57:	mov    DWORD PTR [eax+0x4],ecx
  424e5a:	add    eax,0x8
  424e5d:	mov    DWORD PTR [esp+0x54],esp
  424e61:	push   eax
  424e62:	lea    ecx,[esp+0x74]
  424e66:	call   0x420fe0
  424e6b:	call   0x424ec0
  424e70:	lea    edx,[esp+0x28]
  424e74:	push   edx
  424e75:	mov    DWORD PTR [esp+0x1c],0xffffffff
  424e7d:	call   0x420ef0
  424e82:	mov    al,0x1
  424e84:	mov    ecx,DWORD PTR [esp+0x10]
  424e88:	mov    DWORD PTR fs:0x0,ecx
  424e8f:	pop    ecx
  424e90:	pop    edi
  424e91:	add    esp,0x14
  424e94:	ret    0x48
  424e97:	lea    eax,[esp+0x28]
  424e9b:	push   eax
  424e9c:	mov    DWORD PTR [esp+0x1c],0xffffffff
  424ea4:	call   0x420ef0
  424ea9:	xor    al,al
  424eab:	mov    ecx,DWORD PTR [esp+0x10]
  424eaf:	mov    DWORD PTR fs:0x0,ecx
  424eb6:	pop    ecx
  424eb7:	pop    edi
  424eb8:	add    esp,0x14
  424ebb:	ret    0x48
  424ebe:	int3   
  424ebf:	int3   
  424ec0:	push   0xffffffff
  424ec2:	push   0x42e4e3
  424ec7:	mov    eax,fs:0x0
  424ecd:	push   eax
  424ece:	sub    esp,0x8
  424ed1:	push   esi
  424ed2:	mov    eax,ds:0x43e020
  424ed7:	xor    eax,esp
  424ed9:	push   eax
  424eda:	lea    eax,[esp+0x10]
  424ede:	mov    fs:0x0,eax
  424ee4:	push   0x44
  424ee6:	mov    DWORD PTR [esp+0x1c],0x0
  424eee:	call   0x425050
  424ef3:	mov    esi,eax
  424ef5:	add    esp,0x4
  424ef8:	mov    DWORD PTR [esp+0xc],esi
  424efc:	mov    BYTE PTR [esp+0x18],0x1
  424f01:	test   esi,esi
  424f03:	je     0x424f21
  424f05:	mov    eax,DWORD PTR [esp+0x20]
  424f09:	mov    DWORD PTR [esi],eax
  424f0b:	mov    ecx,DWORD PTR [esp+0x24]
  424f0f:	lea    eax,[esi+0x8]
  424f12:	mov    DWORD PTR [esi+0x4],ecx
  424f15:	push   eax
  424f16:	lea    ecx,[esp+0x2c]
  424f1a:	call   0x420fe0
  424f1f:	jmp    0x424f23
  424f21:	xor    esi,esi
  424f23:	lea    edx,[esp+0x28]
  424f27:	push   edx
  424f28:	mov    DWORD PTR [edi],esi
  424f2a:	mov    DWORD PTR [esp+0x1c],0xffffffff
  424f32:	call   0x420ef0
  424f37:	mov    ecx,DWORD PTR [esp+0x10]
  424f3b:	mov    DWORD PTR fs:0x0,ecx
  424f42:	pop    ecx
  424f43:	pop    esi
  424f44:	add    esp,0x14
  424f47:	ret    0x48
  424f4a:	jmp    DWORD PTR ds:0x430060
  424f50:	jmp    DWORD PTR ds:0x430064
  424f56:	jmp    DWORD PTR ds:0x430068
  424f5c:	mov    edi,edi
  424f5e:	push   ebp
  424f5f:	mov    ebp,esp
  424f61:	push   DWORD PTR [ebp+0x8]
  424f64:	call   0x425159
  424f69:	pop    ecx
  424f6a:	test   eax,eax
  424f6c:	je     0x424f75
  424f6e:	pop    ebp
  424f6f:	jmp    DWORD PTR ds:0x4302f0
  424f75:	pop    ebp
  424f76:	ret    
  424f77:	mov    ecx,DWORD PTR [ecx+0x4]
  424f7a:	call   DWORD PTR ds:0x430248
  424f80:	test   eax,eax
  424f82:	je     0x424f8c
  424f84:	mov    edx,DWORD PTR [eax]
  424f86:	push   0x1
  424f88:	mov    ecx,eax
  424f8a:	call   DWORD PTR [edx]
  424f8c:	ret    
  424f8d:	mov    edi,edi
  424f8f:	push   ebp
  424f90:	mov    ebp,esp
  424f92:	push   esi
  424f93:	mov    esi,ecx
  424f95:	call   0x424f77
  424f9a:	test   BYTE PTR [ebp+0x8],0x1
  424f9e:	je     0x424fa7
  424fa0:	push   esi
  424fa1:	call   0x42504a
  424fa6:	pop    ecx
  424fa7:	mov    eax,esi
  424fa9:	pop    esi
  424faa:	pop    ebp
  424fab:	ret    0x4
  424fae:	mov    edi,edi
  424fb0:	push   ebp
  424fb1:	mov    ebp,esp
  424fb3:	push   ecx
  424fb4:	push   0x0
  424fb6:	lea    ecx,[ebp-0x4]
  424fb9:	call   DWORD PTR ds:0x430188
  424fbf:	jmp    0x424fd1
  424fc1:	mov    ecx,eax
  424fc3:	mov    eax,DWORD PTR [eax]
  424fc5:	push   0x1
  424fc7:	mov    ds:0x43fa00,eax
  424fcc:	call   0x424f8d
  424fd1:	mov    eax,ds:0x43fa00
  424fd6:	test   eax,eax
  424fd8:	jne    0x424fc1
  424fda:	lea    ecx,[ebp-0x4]
  424fdd:	call   DWORD PTR ds:0x430184
  424fe3:	leave  
  424fe4:	ret    
  424fe5:	mov    edi,edi
  424fe7:	push   ebp
  424fe8:	mov    ebp,esp
  424fea:	cmp    DWORD PTR ds:0x43fa00,0x0
  424ff1:	jne    0x424ffe
  424ff3:	push   0x424fae
  424ff8:	call   0x424f5c
  424ffd:	pop    ecx
  424ffe:	push   0x8
  425000:	call   0x425050
  425005:	pop    ecx
  425006:	test   eax,eax
  425008:	je     0x42501a
  42500a:	mov    ecx,DWORD PTR ds:0x43fa00
  425010:	mov    DWORD PTR [eax],ecx
  425012:	mov    ecx,DWORD PTR [ebp+0x8]
  425015:	mov    DWORD PTR [eax+0x4],ecx
  425018:	jmp    0x42501c
  42501a:	xor    eax,eax
  42501c:	mov    ds:0x43fa00,eax
  425021:	pop    ebp
  425022:	ret    
  425023:	mov    edi,edi
  425025:	push   ebp
  425026:	mov    ebp,esp
  425028:	pop    ebp
  425029:	jmp    0x425050
  42502e:	jmp    DWORD PTR ds:0x43000c
  425034:	jmp    DWORD PTR ds:0x430010
  42503a:	cmp    ecx,DWORD PTR ds:0x43e020
  425040:	jne    0x425044
  425042:	repz ret 
  425044:	jmp    0x425496
  425049:	int3   
  42504a:	jmp    DWORD PTR ds:0x43037c
  425050:	jmp    DWORD PTR ds:0x4303a4
  425056:	jmp    DWORD PTR ds:0x4303a0
  42505c:	mov    edi,edi
  42505e:	push   ebp
  42505f:	mov    ebp,esp
  425061:	test   BYTE PTR [ebp+0x8],0x2
  425065:	push   edi
  425066:	mov    edi,ecx
  425068:	je     0x42508f
  42506a:	push   esi
  42506b:	push   0x4259ca
  425070:	lea    esi,[edi-0x4]
  425073:	push   DWORD PTR [esi]
  425075:	push   0xc
  425077:	push   edi
  425078:	call   0x4255fa
  42507d:	test   BYTE PTR [ebp+0x8],0x1
  425081:	je     0x42508a
  425083:	push   esi
  425084:	call   0x42504a
  425089:	pop    ecx
  42508a:	mov    eax,esi
  42508c:	pop    esi
  42508d:	jmp    0x4250a3
  42508f:	call   0x4259ca
  425094:	test   BYTE PTR [ebp+0x8],0x1
  425098:	je     0x4250a1
  42509a:	push   edi
  42509b:	call   0x42504a
  4250a0:	pop    ecx
  4250a1:	mov    eax,edi
  4250a3:	pop    edi
  4250a4:	pop    ebp
  4250a5:	ret    0x4
  4250a8:	jmp    DWORD PTR ds:0x43039c
  4250ae:	jmp    DWORD PTR ds:0x43038c
  4250b4:	push   0x14
  4250b6:	push   0x434c38
  4250bb:	call   0x425670
  4250c0:	push   DWORD PTR ds:0x440580
  4250c6:	mov    esi,DWORD PTR ds:0x430308
  4250cc:	call   esi
  4250ce:	pop    ecx
  4250cf:	mov    DWORD PTR [ebp-0x1c],eax
  4250d2:	cmp    eax,0xffffffff
  4250d5:	jne    0x4250e3
  4250d7:	push   DWORD PTR [ebp+0x8]
  4250da:	call   DWORD PTR ds:0x430304
  4250e0:	pop    ecx
  4250e1:	jmp    0x42514a
  4250e3:	push   0x8
  4250e5:	call   0x42566a
  4250ea:	pop    ecx
  4250eb:	and    DWORD PTR [ebp-0x4],0x0
  4250ef:	push   DWORD PTR ds:0x440580
  4250f5:	call   esi
  4250f7:	mov    DWORD PTR [ebp-0x1c],eax
  4250fa:	push   DWORD PTR ds:0x44057c
  425100:	call   esi
  425102:	pop    ecx
  425103:	pop    ecx
  425104:	mov    DWORD PTR [ebp-0x20],eax
  425107:	lea    eax,[ebp-0x20]
  42510a:	push   eax
  42510b:	lea    eax,[ebp-0x1c]
  42510e:	push   eax
  42510f:	push   DWORD PTR [ebp+0x8]
  425112:	mov    esi,DWORD PTR ds:0x4302fc
  425118:	call   esi
  42511a:	pop    ecx
  42511b:	push   eax
  42511c:	call   0x425664
  425121:	mov    DWORD PTR [ebp-0x24],eax
  425124:	push   DWORD PTR [ebp-0x1c]
  425127:	call   esi
  425129:	mov    ds:0x440580,eax
  42512e:	push   DWORD PTR [ebp-0x20]
  425131:	call   esi
  425133:	add    esp,0x14
  425136:	mov    ds:0x44057c,eax
  42513b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  425142:	call   0x425150
  425147:	mov    eax,DWORD PTR [ebp-0x24]
  42514a:	call   0x4256b5
  42514f:	ret    
  425150:	push   0x8
  425152:	call   0x42565e
  425157:	pop    ecx
  425158:	ret    
  425159:	mov    edi,edi
  42515b:	push   ebp
  42515c:	mov    ebp,esp
  42515e:	push   DWORD PTR [ebp+0x8]
  425161:	call   0x4250b4
  425166:	neg    eax
  425168:	sbb    eax,eax
  42516a:	neg    eax
  42516c:	pop    ecx
  42516d:	dec    eax
  42516e:	pop    ebp
  42516f:	ret    
  425170:	jmp    DWORD PTR ds:0x430380
  425176:	jmp    DWORD PTR ds:0x430364
  42517c:	jmp    DWORD PTR ds:0x4302dc
  425182:	push   0x42576a
  425187:	call   0x425159
  42518c:	mov    eax,ds:0x43fd54
  425191:	mov    DWORD PTR [esp],0x43fa18
  425198:	push   DWORD PTR ds:0x43fd50
  42519e:	mov    ds:0x43fa18,eax
  4251a3:	push   0x43fa08
  4251a8:	push   0x43fa0c
  4251ad:	push   0x43fa04
  4251b2:	call   DWORD PTR ds:0x430310
  4251b8:	add    esp,0x14
  4251bb:	mov    ds:0x43fa14,eax
  4251c0:	test   eax,eax
  4251c2:	jge    0x4251cc
  4251c4:	push   0x8
  4251c6:	call   0x42573e
  4251cb:	pop    ecx
  4251cc:	ret    
  4251cd:	push   0x5c
  4251cf:	push   0x434c58
  4251d4:	call   0x425670
  4251d9:	xor    ebx,ebx
  4251db:	mov    DWORD PTR [ebp-0x1c],ebx
  4251de:	mov    DWORD PTR [ebp-0x4],ebx
  4251e1:	lea    eax,[ebp-0x6c]
  4251e4:	push   eax
  4251e5:	call   DWORD PTR ds:0x430080
  4251eb:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  4251f2:	mov    DWORD PTR [ebp-0x4],0x1
  4251f9:	mov    eax,fs:0x18
  4251ff:	mov    esi,DWORD PTR [eax+0x4]
  425202:	mov    DWORD PTR [ebp-0x20],ebx
  425205:	mov    edi,0x440574
  42520a:	push   ebx
  42520b:	push   esi
  42520c:	push   edi
  42520d:	call   DWORD PTR ds:0x43007c
  425213:	cmp    eax,ebx
  425215:	je     0x425230
  425217:	cmp    eax,esi
  425219:	jne    0x425223
  42521b:	xor    esi,esi
  42521d:	inc    esi
  42521e:	mov    DWORD PTR [ebp-0x20],esi
  425221:	jmp    0x425233
  425223:	push   0x3e8
  425228:	call   DWORD PTR ds:0x430050
  42522e:	jmp    0x42520a
  425230:	xor    esi,esi
  425232:	inc    esi
  425233:	mov    eax,ds:0x440570
  425238:	cmp    eax,esi
  42523a:	jne    0x425246
  42523c:	push   0x1f
  42523e:	call   0x42573e
  425243:	pop    ecx
  425244:	jmp    0x425275
  425246:	mov    eax,ds:0x440570
  42524b:	test   eax,eax
  42524d:	jne    0x42526f
  42524f:	mov    DWORD PTR ds:0x440570,esi
  425255:	push   0x4304f8
  42525a:	push   0x4304e8
  42525f:	call   0x4258f4
  425264:	pop    ecx
  425265:	pop    ecx
  425266:	test   eax,eax
  425268:	je     0x425275
  42526a:	jmp    0x425399
  42526f:	mov    DWORD PTR ds:0x43fa20,esi
  425275:	mov    eax,ds:0x440570
  42527a:	cmp    eax,esi
  42527c:	jne    0x425299
  42527e:	push   0x4304e4
  425283:	push   0x430464
  425288:	call   0x4258ee
  42528d:	pop    ecx
  42528e:	pop    ecx
  42528f:	mov    DWORD PTR ds:0x440570,0x2
  425299:	cmp    DWORD PTR [ebp-0x20],ebx
  42529c:	jne    0x4252a6
  42529e:	push   ebx
  42529f:	push   edi
  4252a0:	call   DWORD PTR ds:0x430078
  4252a6:	cmp    DWORD PTR ds:0x440578,ebx
  4252ac:	je     0x4252c7
  4252ae:	push   0x440578
  4252b3:	call   0x425830
  4252b8:	pop    ecx
  4252b9:	test   eax,eax
  4252bb:	je     0x4252c7
  4252bd:	push   ebx
  4252be:	push   0x2
  4252c0:	push   ebx
  4252c1:	call   DWORD PTR ds:0x440578
  4252c7:	mov    eax,ds:0x430324
  4252cc:	cmp    DWORD PTR [eax],ebx
  4252ce:	je     0x425399
  4252d4:	mov    eax,DWORD PTR [eax]
  4252d6:	mov    DWORD PTR [ebp-0x24],eax
  4252d9:	movzx  ecx,WORD PTR [eax]
  4252dc:	cmp    cx,0x20
  4252e0:	ja     0x425331
  4252e2:	cmp    cx,bx
  4252e5:	je     0x4252ec
  4252e7:	cmp    DWORD PTR [ebp-0x1c],ebx
  4252ea:	jne    0x425331
  4252ec:	movzx  ecx,WORD PTR [eax]
  4252ef:	cmp    cx,bx
  4252f2:	je     0x425301
  4252f4:	cmp    cx,0x20
  4252f8:	ja     0x425301
  4252fa:	inc    eax
  4252fb:	inc    eax
  4252fc:	mov    DWORD PTR [ebp-0x24],eax
  4252ff:	jmp    0x4252ec
  425301:	test   BYTE PTR [ebp-0x40],0x1
  425305:	je     0x42530d
  425307:	movzx  ecx,WORD PTR [ebp-0x3c]
  42530b:	jmp    0x425310
  42530d:	push   0xa
  42530f:	pop    ecx
  425310:	push   ecx
  425311:	push   eax
  425312:	push   ebx
  425313:	push   0x400000
  425318:	call   0x401000
  42531d:	mov    ds:0x43fa1c,eax
  425322:	cmp    DWORD PTR ds:0x43fa10,ebx
  425328:	jne    0x425376
  42532a:	push   eax
  42532b:	call   DWORD PTR ds:0x430320
  425331:	cmp    cx,0x22
  425335:	jne    0x425342
  425337:	xor    ecx,ecx
  425339:	cmp    DWORD PTR [ebp-0x1c],ebx
  42533c:	sete   cl
  42533f:	mov    DWORD PTR [ebp-0x1c],ecx
  425342:	inc    eax
  425343:	inc    eax
  425344:	jmp    0x4252d6
  425346:	mov    eax,DWORD PTR [ebp-0x14]
  425349:	mov    ecx,DWORD PTR [eax]
  42534b:	mov    ecx,DWORD PTR [ecx]
  42534d:	mov    DWORD PTR [ebp-0x28],ecx
  425350:	push   eax
  425351:	push   ecx
  425352:	call   0x425790
  425357:	pop    ecx
  425358:	pop    ecx
  425359:	ret    
  42535a:	mov    esp,DWORD PTR [ebp-0x18]
  42535d:	mov    eax,DWORD PTR [ebp-0x28]
  425360:	mov    ds:0x43fa1c,eax
  425365:	xor    ebx,ebx
  425367:	cmp    DWORD PTR ds:0x43fa10,ebx
  42536d:	jne    0x425376
  42536f:	push   eax
  425370:	call   DWORD PTR ds:0x430318
  425376:	cmp    DWORD PTR ds:0x43fa20,ebx
  42537c:	jne    0x425384
  42537e:	call   DWORD PTR ds:0x430314
  425384:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  42538b:	mov    eax,ds:0x43fa1c
  425390:	jmp    0x4253a5
  425392:	xor    eax,eax
  425394:	inc    eax
  425395:	ret    
  425396:	mov    esp,DWORD PTR [ebp-0x18]
  425399:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  4253a0:	mov    eax,0xff
  4253a5:	call   0x4256b5
  4253aa:	ret    
  4253ab:	mov    eax,0x5a4d
  4253b0:	cmp    WORD PTR ds:0x400000,ax
  4253b7:	je     0x4253bd
  4253b9:	xor    eax,eax
  4253bb:	jmp    0x42540a
  4253bd:	mov    eax,ds:0x40003c
  4253c2:	lea    eax,[eax+0x400000]
  4253c8:	cmp    DWORD PTR [eax],0x4550
  4253ce:	jne    0x4253b9
  4253d0:	movzx  ecx,WORD PTR [eax+0x18]
  4253d4:	cmp    ecx,0x10b
  4253da:	je     0x4253f7
  4253dc:	cmp    ecx,0x20b
  4253e2:	jne    0x4253b9
  4253e4:	cmp    DWORD PTR [eax+0x84],0xe
  4253eb:	jbe    0x4253b9
  4253ed:	xor    ecx,ecx
  4253ef:	cmp    DWORD PTR [eax+0xf8],ecx
  4253f5:	jmp    0x425405
  4253f7:	cmp    DWORD PTR [eax+0x74],0xe
  4253fb:	jbe    0x4253b9
  4253fd:	xor    ecx,ecx
  4253ff:	cmp    DWORD PTR [eax+0xe8],ecx
  425405:	setne  cl
  425408:	mov    eax,ecx
  42540a:	push   0x2
  42540c:	mov    ds:0x43fa10,eax
  425411:	call   DWORD PTR ds:0x430344
  425417:	push   0xffffffff
  425419:	call   DWORD PTR ds:0x4302fc
  42541f:	pop    ecx
  425420:	pop    ecx
  425421:	mov    ds:0x44057c,eax
  425426:	mov    ds:0x440580,eax
  42542b:	call   DWORD PTR ds:0x430340
  425431:	mov    ecx,DWORD PTR ds:0x43fd5c
  425437:	mov    DWORD PTR [eax],ecx
  425439:	call   DWORD PTR ds:0x43033c
  42543f:	mov    ecx,DWORD PTR ds:0x43fd58
  425445:	mov    DWORD PTR [eax],ecx
  425447:	mov    eax,ds:0x430338
  42544c:	mov    eax,DWORD PTR [eax]
  42544e:	mov    ds:0x44056c,eax
  425453:	call   0x425744
  425458:	call   0x425925
  42545d:	cmp    DWORD PTR ds:0x43e034,0x0
  425464:	jne    0x425472
  425466:	push   0x425925
  42546b:	call   DWORD PTR ds:0x430334
  425471:	pop    ecx
  425472:	call   0x4258fa
  425477:	cmp    DWORD PTR ds:0x43e030,0xffffffff
  42547e:	jne    0x425489
  425480:	push   0xffffffff
  425482:	call   DWORD PTR ds:0x430330
  425488:	pop    ecx
  425489:	xor    eax,eax
  42548b:	ret    
  42548c:	call   0x425928
  425491:	jmp    0x4251cd
  425496:	mov    edi,edi
  425498:	push   ebp
  425499:	mov    ebp,esp
  42549b:	sub    esp,0x328
  4254a1:	mov    ds:0x43fb30,eax
  4254a6:	mov    DWORD PTR ds:0x43fb2c,ecx
  4254ac:	mov    DWORD PTR ds:0x43fb28,edx
  4254b2:	mov    DWORD PTR ds:0x43fb24,ebx
  4254b8:	mov    DWORD PTR ds:0x43fb20,esi
  4254be:	mov    DWORD PTR ds:0x43fb1c,edi
  4254c4:	data16 mov WORD PTR ds:0x43fb48,ss
  4254cb:	data16 mov WORD PTR ds:0x43fb3c,cs
  4254d2:	data16 mov WORD PTR ds:0x43fb18,ds
  4254d9:	data16 mov WORD PTR ds:0x43fb14,es
  4254e0:	data16 mov WORD PTR ds:0x43fb10,fs
  4254e7:	data16 mov WORD PTR ds:0x43fb0c,gs
  4254ee:	pushf  
  4254ef:	pop    DWORD PTR ds:0x43fb40
  4254f5:	mov    eax,DWORD PTR [ebp+0x0]
  4254f8:	mov    ds:0x43fb34,eax
  4254fd:	mov    eax,DWORD PTR [ebp+0x4]
  425500:	mov    ds:0x43fb38,eax
  425505:	lea    eax,[ebp+0x8]
  425508:	mov    ds:0x43fb44,eax
  42550d:	mov    eax,DWORD PTR [ebp-0x320]
  425513:	mov    DWORD PTR ds:0x43fa80,0x10001
  42551d:	mov    eax,ds:0x43fb38
  425522:	mov    ds:0x43fa34,eax
  425527:	mov    DWORD PTR ds:0x43fa28,0xc0000409
  425531:	mov    DWORD PTR ds:0x43fa2c,0x1
  42553b:	mov    eax,ds:0x43e020
  425540:	mov    DWORD PTR [ebp-0x328],eax
  425546:	mov    eax,ds:0x43e024
  42554b:	mov    DWORD PTR [ebp-0x324],eax
  425551:	call   DWORD PTR ds:0x43008c
  425557:	mov    ds:0x43fa78,eax
  42555c:	push   0x1
  42555e:	call   0x4259be
  425563:	pop    ecx
  425564:	push   0x0
  425566:	call   DWORD PTR ds:0x430088
  42556c:	push   0x430524
  425571:	call   DWORD PTR ds:0x430084
  425577:	cmp    DWORD PTR ds:0x43fa78,0x0
  42557e:	jne    0x425588
  425580:	push   0x1
  425582:	call   0x4259be
  425587:	pop    ecx
  425588:	push   0xc0000409
  42558d:	call   DWORD PTR ds:0x4300f0
  425593:	push   eax
  425594:	call   DWORD PTR ds:0x430070
  42559a:	leave  
  42559b:	ret    
  42559c:	push   0x14
  42559e:	push   0x434c80
  4255a3:	call   0x425670
  4255a8:	and    DWORD PTR [ebp-0x4],0x0
  4255ac:	dec    DWORD PTR [ebp+0x10]
  4255af:	js     0x4255eb
  4255b1:	mov    ecx,DWORD PTR [ebp+0x8]
  4255b4:	sub    ecx,DWORD PTR [ebp+0xc]
  4255b7:	mov    DWORD PTR [ebp+0x8],ecx
  4255ba:	call   DWORD PTR [ebp+0x14]
  4255bd:	jmp    0x4255ac
  4255bf:	mov    eax,DWORD PTR [ebp-0x14]
  4255c2:	mov    DWORD PTR [ebp-0x1c],eax
  4255c5:	mov    eax,DWORD PTR [ebp-0x1c]
  4255c8:	mov    eax,DWORD PTR [eax]
  4255ca:	mov    DWORD PTR [ebp-0x20],eax
  4255cd:	mov    eax,DWORD PTR [ebp-0x20]
  4255d0:	cmp    DWORD PTR [eax],0xe06d7363
  4255d6:	je     0x4255e3
  4255d8:	mov    DWORD PTR [ebp-0x24],0x0
  4255df:	mov    eax,DWORD PTR [ebp-0x24]
  4255e2:	ret    
  4255e3:	call   0x4259c4
  4255e8:	mov    esp,DWORD PTR [ebp-0x18]
  4255eb:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  4255f2:	call   0x4256b5
  4255f7:	ret    0x10
  4255fa:	push   0xc
  4255fc:	push   0x434ca0
  425601:	call   0x425670
  425606:	and    DWORD PTR [ebp-0x1c],0x0
  42560a:	mov    esi,DWORD PTR [ebp+0xc]
  42560d:	mov    eax,esi
  42560f:	imul   eax,DWORD PTR [ebp+0x10]
  425613:	add    DWORD PTR [ebp+0x8],eax
  425616:	and    DWORD PTR [ebp-0x4],0x0
  42561a:	dec    DWORD PTR [ebp+0x10]
  42561d:	js     0x42562a
  42561f:	sub    DWORD PTR [ebp+0x8],esi
  425622:	mov    ecx,DWORD PTR [ebp+0x8]
  425625:	call   DWORD PTR [ebp+0x14]
  425628:	jmp    0x42561a
  42562a:	mov    DWORD PTR [ebp-0x1c],0x1
  425631:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  425638:	call   0x425645
  42563d:	call   0x4256b5
  425642:	ret    0x10
  425645:	cmp    DWORD PTR [ebp-0x1c],0x0
  425649:	jne    0x42565c
  42564b:	push   DWORD PTR [ebp+0x14]
  42564e:	push   DWORD PTR [ebp+0x10]
  425651:	push   DWORD PTR [ebp+0xc]
  425654:	push   DWORD PTR [ebp+0x8]
  425657:	call   0x42559c
  42565c:	ret    
  42565d:	int3   
  42565e:	jmp    DWORD PTR ds:0x4302f4
  425664:	jmp    DWORD PTR ds:0x4302f8
  42566a:	jmp    DWORD PTR ds:0x430300
  425670:	push   0x4256c9
  425675:	push   DWORD PTR fs:0x0
  42567c:	mov    eax,DWORD PTR [esp+0x10]
  425680:	mov    DWORD PTR [esp+0x10],ebp
  425684:	lea    ebp,[esp+0x10]
  425688:	sub    esp,eax
  42568a:	push   ebx
  42568b:	push   esi
  42568c:	push   edi
  42568d:	mov    eax,ds:0x43e020
  425692:	xor    DWORD PTR [ebp-0x4],eax
  425695:	xor    eax,ebp
  425697:	push   eax
  425698:	mov    DWORD PTR [ebp-0x18],esp
  42569b:	push   DWORD PTR [ebp-0x8]
  42569e:	mov    eax,DWORD PTR [ebp-0x4]
  4256a1:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  4256a8:	mov    DWORD PTR [ebp-0x8],eax
  4256ab:	lea    eax,[ebp-0x10]
  4256ae:	mov    fs:0x0,eax
  4256b4:	ret    
  4256b5:	mov    ecx,DWORD PTR [ebp-0x10]
  4256b8:	mov    DWORD PTR fs:0x0,ecx
  4256bf:	pop    ecx
  4256c0:	pop    edi
  4256c1:	pop    edi
  4256c2:	pop    esi
  4256c3:	pop    ebx
  4256c4:	mov    esp,ebp
  4256c6:	pop    ebp
  4256c7:	push   ecx
  4256c8:	ret    
  4256c9:	mov    edi,edi
  4256cb:	push   ebp
  4256cc:	mov    ebp,esp
  4256ce:	push   DWORD PTR [ebp+0x14]
  4256d1:	push   DWORD PTR [ebp+0x10]
  4256d4:	push   DWORD PTR [ebp+0xc]
  4256d7:	push   DWORD PTR [ebp+0x8]
  4256da:	push   0x42503a
  4256df:	push   0x43e020
  4256e4:	call   0x4259d0
  4256e9:	add    esp,0x18
  4256ec:	pop    ebp
  4256ed:	ret    
  4256ee:	mov    edi,edi
  4256f0:	push   ebp
  4256f1:	mov    ebp,esp
  4256f3:	mov    eax,DWORD PTR [ebp+0x8]
  4256f6:	mov    eax,DWORD PTR [eax]
  4256f8:	cmp    DWORD PTR [eax],0xe06d7363
  4256fe:	jne    0x42572a
  425700:	cmp    DWORD PTR [eax+0x10],0x3
  425704:	jne    0x42572a
  425706:	mov    eax,DWORD PTR [eax+0x14]
  425709:	cmp    eax,0x19930520
  42570e:	je     0x425725
  425710:	cmp    eax,0x19930521
  425715:	je     0x425725
  425717:	cmp    eax,0x19930522
  42571c:	je     0x425725
  42571e:	cmp    eax,0x1994000
  425723:	jne    0x42572a
  425725:	call   0x4259c4
  42572a:	xor    eax,eax
  42572c:	pop    ebp
  42572d:	ret    0x4
  425730:	push   0x4256ee
  425735:	call   DWORD PTR ds:0x430088
  42573b:	xor    eax,eax
  42573d:	ret    
  42573e:	jmp    DWORD PTR ds:0x43030c
  425744:	mov    edi,edi
  425746:	push   esi
  425747:	mov    eax,0x434c2c
  42574c:	mov    esi,0x434c2c
  425751:	push   edi
  425752:	mov    edi,eax
  425754:	cmp    eax,esi
  425756:	jae    0x425767
  425758:	mov    eax,DWORD PTR [edi]
  42575a:	test   eax,eax
  42575c:	je     0x425760
  42575e:	call   eax
  425760:	add    edi,0x4
  425763:	cmp    edi,esi
  425765:	jb     0x425758
  425767:	pop    edi
  425768:	pop    esi
  425769:	ret    
  42576a:	mov    edi,edi
  42576c:	push   esi
  42576d:	mov    eax,0x434c34
  425772:	mov    esi,0x434c34
  425777:	push   edi
  425778:	mov    edi,eax
  42577a:	cmp    eax,esi
  42577c:	jae    0x42578d
  42577e:	mov    eax,DWORD PTR [edi]
  425780:	test   eax,eax
  425782:	je     0x425786
  425784:	call   eax
  425786:	add    edi,0x4
  425789:	cmp    edi,esi
  42578b:	jb     0x42577e
  42578d:	pop    edi
  42578e:	pop    esi
  42578f:	ret    
  425790:	jmp    DWORD PTR ds:0x43031c
  425796:	int3   
  425797:	int3   
  425798:	int3   
  425799:	int3   
  42579a:	int3   
  42579b:	int3   
  42579c:	int3   
  42579d:	int3   
  42579e:	int3   
  42579f:	int3   
  4257a0:	mov    edi,edi
  4257a2:	push   ebp
  4257a3:	mov    ebp,esp
  4257a5:	mov    ecx,DWORD PTR [ebp+0x8]
  4257a8:	mov    eax,0x5a4d
  4257ad:	cmp    WORD PTR [ecx],ax
  4257b0:	je     0x4257b6
  4257b2:	xor    eax,eax
  4257b4:	pop    ebp
  4257b5:	ret    
  4257b6:	mov    eax,DWORD PTR [ecx+0x3c]
  4257b9:	add    eax,ecx
  4257bb:	cmp    DWORD PTR [eax],0x4550
  4257c1:	jne    0x4257b2
  4257c3:	xor    edx,edx
  4257c5:	mov    ecx,0x10b
  4257ca:	cmp    WORD PTR [eax+0x18],cx
  4257ce:	sete   dl
  4257d1:	mov    eax,edx
  4257d3:	pop    ebp
  4257d4:	ret    
  4257d5:	int3   
  4257d6:	int3   
  4257d7:	int3   
  4257d8:	int3   
  4257d9:	int3   
  4257da:	int3   
  4257db:	int3   
  4257dc:	int3   
  4257dd:	int3   
  4257de:	int3   
  4257df:	int3   
  4257e0:	mov    edi,edi
  4257e2:	push   ebp
  4257e3:	mov    ebp,esp
  4257e5:	mov    eax,DWORD PTR [ebp+0x8]
  4257e8:	mov    ecx,DWORD PTR [eax+0x3c]
  4257eb:	add    ecx,eax
  4257ed:	movzx  eax,WORD PTR [ecx+0x14]
  4257f1:	push   ebx
  4257f2:	push   esi
  4257f3:	movzx  esi,WORD PTR [ecx+0x6]
  4257f7:	xor    edx,edx
  4257f9:	push   edi
  4257fa:	lea    eax,[eax+ecx*1+0x18]
  4257fe:	test   esi,esi
  425800:	jbe    0x42581d
  425802:	mov    edi,DWORD PTR [ebp+0xc]
  425805:	mov    ecx,DWORD PTR [eax+0xc]
  425808:	cmp    edi,ecx
  42580a:	jb     0x425815
  42580c:	mov    ebx,DWORD PTR [eax+0x8]
  42580f:	add    ebx,ecx
  425811:	cmp    edi,ebx
  425813:	jb     0x42581f
  425815:	inc    edx
  425816:	add    eax,0x28
  425819:	cmp    edx,esi
  42581b:	jb     0x425805
  42581d:	xor    eax,eax
  42581f:	pop    edi
  425820:	pop    esi
  425821:	pop    ebx
  425822:	pop    ebp
  425823:	ret    
  425824:	int3   
  425825:	int3   
  425826:	int3   
  425827:	int3   
  425828:	int3   
  425829:	int3   
  42582a:	int3   
  42582b:	int3   
  42582c:	int3   
  42582d:	int3   
  42582e:	int3   
  42582f:	int3   
  425830:	mov    edi,edi
  425832:	push   ebp
  425833:	mov    ebp,esp
  425835:	push   0xfffffffe
  425837:	push   0x434cc0
  42583c:	push   0x4256c9
  425841:	mov    eax,fs:0x0
  425847:	push   eax
  425848:	sub    esp,0x8
  42584b:	push   ebx
  42584c:	push   esi
  42584d:	push   edi
  42584e:	mov    eax,ds:0x43e020
  425853:	xor    DWORD PTR [ebp-0x8],eax
  425856:	xor    eax,ebp
  425858:	push   eax
  425859:	lea    eax,[ebp-0x10]
  42585c:	mov    fs:0x0,eax
  425862:	mov    DWORD PTR [ebp-0x18],esp
  425865:	mov    DWORD PTR [ebp-0x4],0x0
  42586c:	push   0x400000
  425871:	call   0x4257a0
  425876:	add    esp,0x4
  425879:	test   eax,eax
  42587b:	je     0x4258d2
  42587d:	mov    eax,DWORD PTR [ebp+0x8]
  425880:	sub    eax,0x400000
  425885:	push   eax
  425886:	push   0x400000
  42588b:	call   0x4257e0
  425890:	add    esp,0x8
  425893:	test   eax,eax
  425895:	je     0x4258d2
  425897:	mov    eax,DWORD PTR [eax+0x24]
  42589a:	shr    eax,0x1f
  42589d:	not    eax
  42589f:	and    eax,0x1
  4258a2:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  4258a9:	mov    ecx,DWORD PTR [ebp-0x10]
  4258ac:	mov    DWORD PTR fs:0x0,ecx
  4258b3:	pop    ecx
  4258b4:	pop    edi
  4258b5:	pop    esi
  4258b6:	pop    ebx
  4258b7:	mov    esp,ebp
  4258b9:	pop    ebp
  4258ba:	ret    
  4258bb:	mov    eax,DWORD PTR [ebp-0x14]
  4258be:	mov    ecx,DWORD PTR [eax]
  4258c0:	mov    eax,DWORD PTR [ecx]
  4258c2:	xor    edx,edx
  4258c4:	cmp    eax,0xc0000005
  4258c9:	sete   dl
  4258cc:	mov    eax,edx
  4258ce:	ret    
  4258cf:	mov    esp,DWORD PTR [ebp-0x18]
  4258d2:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  4258d9:	xor    eax,eax
  4258db:	mov    ecx,DWORD PTR [ebp-0x10]
  4258de:	mov    DWORD PTR fs:0x0,ecx
  4258e5:	pop    ecx
  4258e6:	pop    edi
  4258e7:	pop    esi
  4258e8:	pop    ebx
  4258e9:	mov    esp,ebp
  4258eb:	pop    ebp
  4258ec:	ret    
  4258ed:	int3   
  4258ee:	jmp    DWORD PTR ds:0x430328
  4258f4:	jmp    DWORD PTR ds:0x43032c
  4258fa:	mov    edi,edi
  4258fc:	push   esi
  4258fd:	push   0x30000
  425902:	push   0x10000
  425907:	xor    esi,esi
  425909:	push   esi
  42590a:	call   0x4259dc
  42590f:	add    esp,0xc
  425912:	test   eax,eax
  425914:	je     0x425923
  425916:	push   esi
  425917:	push   esi
  425918:	push   esi
  425919:	push   esi
  42591a:	push   esi
  42591b:	call   0x4259d6
  425920:	add    esp,0x14
  425923:	pop    esi
  425924:	ret    
  425925:	xor    eax,eax
  425927:	ret    
  425928:	mov    edi,edi
  42592a:	push   ebp
  42592b:	mov    ebp,esp
  42592d:	sub    esp,0x10
  425930:	mov    eax,ds:0x43e020
  425935:	and    DWORD PTR [ebp-0x8],0x0
  425939:	and    DWORD PTR [ebp-0x4],0x0
  42593d:	push   ebx
  42593e:	push   edi
  42593f:	mov    edi,0xbb40e64e
  425944:	mov    ebx,0xffff0000
  425949:	cmp    eax,edi
  42594b:	je     0x42595a
  42594d:	test   ebx,eax
  42594f:	je     0x42595a
  425951:	not    eax
  425953:	mov    ds:0x43e024,eax
  425958:	jmp    0x4259ba
  42595a:	push   esi
  42595b:	lea    eax,[ebp-0x8]
  42595e:	push   eax
  42595f:	call   DWORD PTR ds:0x4300b4
  425965:	mov    esi,DWORD PTR [ebp-0x4]
  425968:	xor    esi,DWORD PTR [ebp-0x8]
  42596b:	call   DWORD PTR ds:0x4300ec
  425971:	xor    esi,eax
  425973:	call   DWORD PTR ds:0x4300e8
  425979:	xor    esi,eax
  42597b:	call   DWORD PTR ds:0x430094
  425981:	xor    esi,eax
  425983:	lea    eax,[ebp-0x10]
  425986:	push   eax
  425987:	call   DWORD PTR ds:0x430104
  42598d:	mov    eax,DWORD PTR [ebp-0xc]
  425990:	xor    eax,DWORD PTR [ebp-0x10]
  425993:	xor    esi,eax
  425995:	cmp    esi,edi
  425997:	jne    0x4259a0
  425999:	mov    esi,0xbb40e64f
  42599e:	jmp    0x4259ab
  4259a0:	test   ebx,esi
  4259a2:	jne    0x4259ab
  4259a4:	mov    eax,esi
  4259a6:	shl    eax,0x10
  4259a9:	or     esi,eax
  4259ab:	mov    DWORD PTR ds:0x43e020,esi
  4259b1:	not    esi
  4259b3:	mov    DWORD PTR ds:0x43e024,esi
  4259b9:	pop    esi
  4259ba:	pop    edi
  4259bb:	pop    ebx
  4259bc:	leave  
  4259bd:	ret    
  4259be:	jmp    DWORD PTR ds:0x430348
  4259c4:	jmp    DWORD PTR ds:0x43034c
  4259ca:	jmp    DWORD PTR ds:0x430350
  4259d0:	jmp    DWORD PTR ds:0x430354
  4259d6:	jmp    DWORD PTR ds:0x430358
  4259dc:	jmp    DWORD PTR ds:0x43035c
  4259e2:	int3   
  4259e3:	int3   
  4259e4:	int3   
  4259e5:	int3   
  4259e6:	int3   
  4259e7:	int3   
  4259e8:	int3   
  4259e9:	int3   
  4259ea:	int3   
  4259eb:	int3   
  4259ec:	int3   
  4259ed:	int3   
  4259ee:	int3   
  4259ef:	int3   
  4259f0:	push   0xffffffff
  4259f2:	push   0x42a241
  4259f7:	mov    eax,fs:0x0
  4259fd:	push   eax
  4259fe:	sub    esp,0x20
  425a01:	push   esi
  425a02:	mov    eax,ds:0x43e020
  425a07:	xor    eax,esp
  425a09:	push   eax
  425a0a:	lea    eax,[esp+0x28]
  425a0e:	mov    fs:0x0,eax
  425a14:	mov    esi,ecx
  425a16:	mov    DWORD PTR [esp+0x8],esi
  425a1a:	mov    eax,DWORD PTR [esp+0x40]
  425a1e:	push   eax
  425a1f:	lea    ecx,[esp+0x10]
  425a23:	call   DWORD PTR ds:0x43011c
  425a29:	lea    ecx,[esp+0xc]
  425a2d:	push   ecx
  425a2e:	mov    ecx,esi
  425a30:	mov    DWORD PTR [esp+0x34],0x0
  425a38:	call   0x404350
  425a3d:	lea    ecx,[esp+0xc]
  425a41:	mov    BYTE PTR [esp+0x30],0x2
  425a46:	call   DWORD PTR ds:0x43025c
  425a4c:	mov    edx,DWORD PTR [esp+0x38]
  425a50:	mov    eax,DWORD PTR [esp+0x3c]
  425a54:	mov    DWORD PTR [esi],0x43053c
  425a5a:	lea    ecx,[esi+0x30]
  425a5d:	mov    DWORD PTR [esi+0x28],edx
  425a60:	mov    DWORD PTR [esi+0x2c],eax
  425a63:	call   DWORD PTR ds:0x430260
  425a69:	mov    eax,esi
  425a6b:	mov    ecx,DWORD PTR [esp+0x28]
  425a6f:	mov    DWORD PTR fs:0x0,ecx
  425a76:	pop    ecx
  425a77:	pop    esi
  425a78:	add    esp,0x2c
  425a7b:	ret    0xc
  425a7e:	int3   
  425a7f:	int3   
  425a80:	push   ecx
  425a81:	mov    eax,ecx
  425a83:	mov    ecx,DWORD PTR [eax+0x4]
  425a86:	mov    eax,DWORD PTR [eax]
  425a88:	mov    edx,DWORD PTR [ecx]
  425a8a:	mov    edx,DWORD PTR [edx+0x8]
  425a8d:	push   esi
  425a8e:	mov    esi,DWORD PTR [esp+0xc]
  425a92:	push   eax
  425a93:	push   esi
  425a94:	mov    DWORD PTR [esp+0xc],0x0
  425a9c:	call   edx
  425a9e:	mov    eax,esi
  425aa0:	pop    esi
  425aa1:	pop    ecx
  425aa2:	ret    0x4
  425aa5:	int3   
  425aa6:	int3   
  425aa7:	int3   
  425aa8:	int3   
  425aa9:	int3   
  425aaa:	int3   
  425aab:	int3   
  425aac:	int3   
  425aad:	int3   
  425aae:	int3   
  425aaf:	int3   
  425ab0:	push   esi
  425ab1:	mov    esi,ecx
  425ab3:	lea    ecx,[esi+0x30]
  425ab6:	mov    DWORD PTR [esi],0x43053c
  425abc:	call   DWORD PTR ds:0x43025c
  425ac2:	lea    ecx,[esi+0xc]
  425ac5:	mov    DWORD PTR [esi],0x430530
  425acb:	call   DWORD PTR ds:0x43025c
  425ad1:	mov    ecx,esi
  425ad3:	pop    esi
  425ad4:	jmp    DWORD PTR ds:0x4303a8
  425ada:	int3   
  425adb:	int3   
  425adc:	int3   
  425add:	int3   
  425ade:	int3   
  425adf:	int3   
  425ae0:	push   esi
  425ae1:	mov    esi,ecx
  425ae3:	lea    ecx,[esi+0x30]
  425ae6:	mov    DWORD PTR [esi],0x43053c
  425aec:	call   DWORD PTR ds:0x43025c
  425af2:	lea    ecx,[esi+0xc]
  425af5:	mov    DWORD PTR [esi],0x430530
  425afb:	call   DWORD PTR ds:0x43025c
  425b01:	mov    ecx,esi
  425b03:	call   DWORD PTR ds:0x4303a8
  425b09:	test   BYTE PTR [esp+0x8],0x1
  425b0e:	je     0x425b19
  425b10:	push   esi
  425b11:	call   0x42504a
  425b16:	add    esp,0x4
  425b19:	mov    eax,esi
  425b1b:	pop    esi
  425b1c:	ret    0x4
  425b1f:	int3   
  425b20:	push   ebp
  425b21:	mov    ebp,esp
  425b23:	push   0xffffffff
  425b25:	push   0x42a269
  425b2a:	mov    eax,fs:0x0
  425b30:	push   eax
  425b31:	sub    esp,0x24
  425b34:	push   ebx
  425b35:	push   esi
  425b36:	push   edi
  425b37:	mov    eax,ds:0x43e020
  425b3c:	xor    eax,ebp
  425b3e:	push   eax
  425b3f:	lea    eax,[ebp-0xc]
  425b42:	mov    fs:0x0,eax
  425b48:	mov    DWORD PTR [ebp-0x10],esp
  425b4b:	mov    esi,ecx
  425b4d:	mov    DWORD PTR [ebp-0x14],esi
  425b50:	xor    ebx,ebx
  425b52:	cmp    DWORD PTR [esi+0x44],ebx
  425b55:	jne    0x425bab
  425b57:	cmp    DWORD PTR [esi+0x24],0x10
  425b5b:	mov    DWORD PTR [ebp-0x4],ebx
  425b5e:	jb     0x425b65
  425b60:	mov    eax,DWORD PTR [esi+0x10]
  425b63:	jmp    0x425b68
  425b65:	lea    eax,[esi+0x10]
  425b68:	lea    edi,[esi+0x30]
  425b6b:	push   eax
  425b6c:	mov    ecx,edi
  425b6e:	call   DWORD PTR ds:0x430178
  425b74:	cmp    DWORD PTR [esi+0x44],ebx
  425b77:	je     0x425b86
  425b79:	push   0x430544
  425b7e:	mov    ecx,edi
  425b80:	call   DWORD PTR ds:0x4301e4
  425b86:	lea    eax,[ebp-0x30]
  425b89:	push   eax
  425b8a:	lea    ecx,[esi+0x28]
  425b8d:	call   0x425a80
  425b92:	push   eax
  425b93:	mov    ecx,edi
  425b95:	mov    BYTE PTR [ebp-0x4],0x1
  425b99:	call   DWORD PTR ds:0x43026c
  425b9f:	lea    ecx,[ebp-0x30]
  425ba2:	mov    BYTE PTR [ebp-0x4],bl
  425ba5:	call   DWORD PTR ds:0x43025c
  425bab:	cmp    DWORD PTR [esi+0x48],0x10
  425baf:	jb     0x425bf8
  425bb1:	mov    eax,DWORD PTR [esi+0x34]
  425bb4:	mov    ecx,DWORD PTR [ebp-0xc]
  425bb7:	mov    DWORD PTR fs:0x0,ecx
  425bbe:	pop    ecx
  425bbf:	pop    edi
  425bc0:	pop    esi
  425bc1:	pop    ebx
  425bc2:	mov    esp,ebp
  425bc4:	pop    ebp
  425bc5:	ret    
  425bc6:	mov    eax,DWORD PTR [ebp-0x14]
  425bc9:	cmp    DWORD PTR [eax+0x24],0x10
  425bcd:	jb     0x425bd7
  425bcf:	mov    ecx,DWORD PTR [eax+0x10]
  425bd2:	mov    DWORD PTR [ebp-0x14],ecx
  425bd5:	jmp    0x425bdd
  425bd7:	add    eax,0x10
  425bda:	mov    DWORD PTR [ebp-0x14],eax
  425bdd:	mov    eax,0x425be3
  425be2:	ret    
  425be3:	mov    eax,DWORD PTR [ebp-0x14]
  425be6:	mov    ecx,DWORD PTR [ebp-0xc]
  425be9:	mov    DWORD PTR fs:0x0,ecx
  425bf0:	pop    ecx
  425bf1:	pop    edi
  425bf2:	pop    esi
  425bf3:	pop    ebx
  425bf4:	mov    esp,ebp
  425bf6:	pop    ebp
  425bf7:	ret    
  425bf8:	lea    eax,[esi+0x34]
  425bfb:	mov    ecx,DWORD PTR [ebp-0xc]
  425bfe:	mov    DWORD PTR fs:0x0,ecx
  425c05:	pop    ecx
  425c06:	pop    edi
  425c07:	pop    esi
  425c08:	pop    ebx
  425c09:	mov    esp,ebp
  425c0b:	pop    ebp
  425c0c:	ret    
  425c0d:	int3   
  425c0e:	int3   
  425c0f:	int3   
  425c10:	mov    eax,DWORD PTR [ecx]
  425c12:	push   eax
  425c13:	call   0x42517c
  425c18:	pop    ecx
  425c19:	ret    
  425c1a:	int3   
  425c1b:	int3   
  425c1c:	int3   
  425c1d:	int3   
  425c1e:	int3   
  425c1f:	int3   
  425c20:	push   0xffffffff
  425c22:	push   0x42a299
  425c27:	mov    eax,fs:0x0
  425c2d:	push   eax
  425c2e:	sub    esp,0x24
  425c31:	mov    eax,ds:0x43e020
  425c36:	xor    eax,esp
  425c38:	mov    DWORD PTR [esp+0x20],eax
  425c3c:	push   ebx
  425c3d:	push   esi
  425c3e:	push   edi
  425c3f:	mov    eax,ds:0x43e020
  425c44:	xor    eax,esp
  425c46:	push   eax
  425c47:	lea    eax,[esp+0x34]
  425c4b:	mov    fs:0x0,eax
  425c51:	mov    edi,DWORD PTR [esp+0x54]
  425c55:	mov    ebx,DWORD PTR [esp+0x58]
  425c59:	push   0x0
  425c5b:	mov    esi,ecx
  425c5d:	push   0x0
  425c5f:	lea    ecx,[esp+0x1c]
  425c63:	call   DWORD PTR ds:0x4301c8
  425c69:	mov    eax,DWORD PTR [esp+0x10]
  425c6d:	push   eax
  425c6e:	push   ebx
  425c6f:	push   edi
  425c70:	lea    ecx,[esp+0x20]
  425c74:	call   0x424300
  425c79:	mov    edx,DWORD PTR [esp+0x50]
  425c7d:	mov    eax,DWORD PTR [esp+0x4c]
  425c81:	lea    ecx,[esp+0x14]
  425c85:	push   ecx
  425c86:	mov    ecx,DWORD PTR [esp+0x4c]
  425c8a:	push   edx
  425c8b:	mov    edx,DWORD PTR [esp+0x4c]
  425c8f:	push   eax
  425c90:	push   ecx
  425c91:	push   edx
  425c92:	mov    ecx,esi
  425c94:	mov    DWORD PTR [esp+0x50],0x0
  425c9c:	call   DWORD PTR ds:0x430270
  425ca2:	lea    ecx,[esp+0x14]
  425ca6:	mov    DWORD PTR [esp+0x3c],0xffffffff
  425cae:	call   DWORD PTR ds:0x43025c
  425cb4:	mov    eax,esi
  425cb6:	mov    ecx,DWORD PTR [esp+0x34]
  425cba:	mov    DWORD PTR fs:0x0,ecx
  425cc1:	pop    ecx
  425cc2:	pop    edi
  425cc3:	pop    esi
  425cc4:	pop    ebx
  425cc5:	mov    ecx,DWORD PTR [esp+0x20]
  425cc9:	xor    ecx,esp
  425ccb:	call   0x42503a
  425cd0:	add    esp,0x30
  425cd3:	ret    0x1c
  425cd6:	int3   
  425cd7:	int3   
  425cd8:	int3   
  425cd9:	int3   
  425cda:	int3   
  425cdb:	int3   
  425cdc:	int3   
  425cdd:	int3   
  425cde:	int3   
  425cdf:	int3   
  425ce0:	sub    esp,0x10
  425ce3:	push   ebx
  425ce4:	push   esi
  425ce5:	push   edi
  425ce6:	lea    eax,[esp+0xc]
  425cea:	push   eax
  425ceb:	mov    esi,ecx
  425ced:	call   DWORD PTR ds:0x430124
  425cf3:	mov    edi,DWORD PTR [eax]
  425cf5:	mov    ebx,DWORD PTR [eax+0x4]
  425cf8:	lea    ecx,[esp+0x14]
  425cfc:	push   ecx
  425cfd:	mov    ecx,esi
  425cff:	call   DWORD PTR ds:0x430124
  425d05:	mov    edx,DWORD PTR [esp+0x24]
  425d09:	mov    ecx,DWORD PTR [esp+0x24]
  425d0d:	push   edx
  425d0e:	mov    edx,DWORD PTR [esp+0x24]
  425d12:	push   ecx
  425d13:	mov    ecx,DWORD PTR [eax+0x4]
  425d16:	push   edx
  425d17:	mov    edx,DWORD PTR [eax]
  425d19:	push   ebx
  425d1a:	push   edi
  425d1b:	push   ecx
  425d1c:	push   edx
  425d1d:	mov    ecx,esi
  425d1f:	call   0x407ec0
  425d24:	pop    edi
  425d25:	pop    esi
  425d26:	pop    ebx
  425d27:	add    esp,0x10
  425d2a:	ret    0x8
  425d2d:	int3   
  425d2e:	int3   
  425d2f:	int3   
  425d30:	sub    esp,0x10
  425d33:	push   ebx
  425d34:	push   esi
  425d35:	push   edi
  425d36:	lea    eax,[esp+0xc]
  425d3a:	push   eax
  425d3b:	mov    esi,ecx
  425d3d:	call   DWORD PTR ds:0x4301ec
  425d43:	mov    edi,DWORD PTR [eax]
  425d45:	mov    ebx,DWORD PTR [eax+0x4]
  425d48:	lea    ecx,[esp+0x14]
  425d4c:	push   ecx
  425d4d:	mov    ecx,esi
  425d4f:	call   DWORD PTR ds:0x4301ec
  425d55:	mov    edx,DWORD PTR [esp+0x24]
  425d59:	mov    ecx,DWORD PTR [esp+0x24]
  425d5d:	push   edx
  425d5e:	mov    edx,DWORD PTR [esp+0x24]
  425d62:	push   ecx
  425d63:	mov    ecx,DWORD PTR [eax+0x4]
  425d66:	push   edx
  425d67:	mov    edx,DWORD PTR [eax]
  425d69:	push   ebx
  425d6a:	push   edi
  425d6b:	push   ecx
  425d6c:	push   edx
  425d6d:	mov    ecx,esi
  425d6f:	call   0x425c20
  425d74:	pop    edi
  425d75:	pop    esi
  425d76:	pop    ebx
  425d77:	add    esp,0x10
  425d7a:	ret    0x8
  425d7d:	int3   
  425d7e:	int3   
  425d7f:	int3   
  425d80:	sub    esp,0x58
  425d83:	mov    ecx,DWORD PTR [esp+0x68]
  425d87:	push   esi
  425d88:	push   edi
  425d89:	mov    edi,DWORD PTR [esp+0x6c]
  425d8d:	lea    eax,[esp+0xc]
  425d91:	push   eax
  425d92:	mov    eax,DWORD PTR [esp+0x6c]
  425d96:	push   ecx
  425d97:	mov    ecx,DWORD PTR [esp+0x6c]
  425d9b:	push   edi
  425d9c:	lea    edx,[esp+0x1c]
  425da0:	push   edx
  425da1:	push   eax
  425da2:	push   ecx
  425da3:	mov    ecx,DWORD PTR [esp+0x90]
  425daa:	lea    edx,[esp+0x20]
  425dae:	push   edx
  425daf:	mov    DWORD PTR [esp+0x24],0x0
  425db7:	call   DWORD PTR ds:0x430274
  425dbd:	mov    esi,eax
  425dbf:	test   esi,esi
  425dc1:	je     0x425de7
  425dc3:	push   0x430548
  425dc8:	call   0x429280
  425dcd:	push   eax
  425dce:	push   esi
  425dcf:	lea    ecx,[esp+0x20]
  425dd3:	call   0x4259f0
  425dd8:	push   0x434da4
  425ddd:	lea    eax,[esp+0x18]
  425de1:	push   eax
  425de2:	call   0x429e76
  425de7:	mov    ecx,DWORD PTR [esp+0xc]
  425deb:	push   ecx
  425dec:	mov    ecx,DWORD PTR [esp+0x78]
  425df0:	push   edi
  425df1:	call   0x425ce0
  425df6:	pop    edi
  425df7:	pop    esi
  425df8:	add    esp,0x58
  425dfb:	ret    
  425dfc:	int3   
  425dfd:	int3   
  425dfe:	int3   
  425dff:	int3   
  425e00:	push   0xffffffff
  425e02:	push   0x42ca98
  425e07:	mov    eax,fs:0x0
  425e0d:	push   eax
  425e0e:	push   ecx
  425e0f:	push   esi
  425e10:	push   edi
  425e11:	mov    eax,ds:0x43e020
  425e16:	xor    eax,esp
  425e18:	push   eax
  425e19:	lea    eax,[esp+0x10]
  425e1d:	mov    fs:0x0,eax
  425e23:	mov    esi,ecx
  425e25:	mov    DWORD PTR [esp+0xc],esi
  425e29:	mov    edi,DWORD PTR [esp+0x20]
  425e2d:	push   edi
  425e2e:	call   0x4043b0
  425e33:	mov    DWORD PTR [esi],0x43053c
  425e39:	mov    eax,DWORD PTR [edi+0x28]
  425e3c:	mov    DWORD PTR [esi+0x28],eax
  425e3f:	mov    ecx,DWORD PTR [edi+0x2c]
  425e42:	add    edi,0x30
  425e45:	mov    DWORD PTR [esi+0x2c],ecx
  425e48:	push   edi
  425e49:	lea    ecx,[esi+0x30]
  425e4c:	mov    DWORD PTR [esp+0x1c],0x0
  425e54:	call   DWORD PTR ds:0x430258
  425e5a:	mov    eax,esi
  425e5c:	mov    ecx,DWORD PTR [esp+0x10]
  425e60:	mov    DWORD PTR fs:0x0,ecx
  425e67:	pop    ecx
  425e68:	pop    edi
  425e69:	pop    esi
  425e6a:	add    esp,0x10
  425e6d:	ret    0x4
  425e70:	sub    esp,0x58
  425e73:	mov    ecx,DWORD PTR [esp+0x68]
  425e77:	push   esi
  425e78:	push   edi
  425e79:	mov    edi,DWORD PTR [esp+0x6c]
  425e7d:	lea    eax,[esp+0xc]
  425e81:	push   eax
  425e82:	mov    eax,DWORD PTR [esp+0x6c]
  425e86:	push   ecx
  425e87:	mov    ecx,DWORD PTR [esp+0x6c]
  425e8b:	push   edi
  425e8c:	lea    edx,[esp+0x1c]
  425e90:	push   edx
  425e91:	push   eax
  425e92:	push   ecx
  425e93:	mov    ecx,DWORD PTR [esp+0x90]
  425e9a:	lea    edx,[esp+0x20]
  425e9e:	push   edx
  425e9f:	mov    DWORD PTR [esp+0x24],0x0
  425ea7:	call   DWORD PTR ds:0x430278
  425ead:	mov    esi,eax
  425eaf:	test   esi,esi
  425eb1:	je     0x425ed7
  425eb3:	push   0x430574
  425eb8:	call   0x429280
  425ebd:	push   eax
  425ebe:	push   esi
  425ebf:	lea    ecx,[esp+0x20]
  425ec3:	call   0x4259f0
  425ec8:	push   0x434da4
  425ecd:	lea    eax,[esp+0x18]
  425ed1:	push   eax
  425ed2:	call   0x429e76
  425ed7:	mov    ecx,DWORD PTR [esp+0xc]
  425edb:	push   ecx
  425edc:	mov    ecx,DWORD PTR [esp+0x78]
  425ee0:	push   edi
  425ee1:	call   0x425d30
  425ee6:	pop    edi
  425ee7:	pop    esi
  425ee8:	add    esp,0x58
  425eeb:	ret    
  425eec:	int3   
  425eed:	int3   
  425eee:	int3   
  425eef:	int3   
  425ef0:	push   0xffffffff
  425ef2:	push   0x42a2db
  425ef7:	mov    eax,fs:0x0
  425efd:	push   eax
  425efe:	sub    esp,0x210
  425f04:	mov    eax,ds:0x43e020
  425f09:	xor    eax,esp
  425f0b:	mov    DWORD PTR [esp+0x20c],eax
  425f12:	push   ebx
  425f13:	push   ebp
  425f14:	push   esi
  425f15:	push   edi
  425f16:	mov    eax,ds:0x43e020
  425f1b:	xor    eax,esp
  425f1d:	push   eax
  425f1e:	lea    eax,[esp+0x224]
  425f25:	mov    fs:0x0,eax
  425f2b:	mov    esi,DWORD PTR [esp+0x238]
  425f32:	mov    edi,DWORD PTR [esp+0x23c]
  425f39:	mov    eax,DWORD PTR [esp+0x240]
  425f40:	mov    ebp,DWORD PTR [esp+0x234]
  425f47:	mov    DWORD PTR [esp+0x18],edi
  425f4b:	mov    DWORD PTR [esp+0x14],eax
  425f4f:	test   esi,esi
  425f51:	jne    0x425f64
  425f53:	mov    eax,ebp
  425f55:	lea    edx,[eax+0x1]
  425f58:	mov    cl,BYTE PTR [eax]
  425f5a:	inc    eax
  425f5b:	test   cl,cl
  425f5d:	jne    0x425f58
  425f5f:	sub    eax,edx
  425f61:	lea    esi,[eax+ebp*1]
  425f64:	cmp    ebp,esi
  425f66:	je     0x425fde
  425f68:	mov    ebx,esi
  425f6a:	sub    ebx,ebp
  425f6c:	lea    ebx,[ebx+ebx*2]
  425f6f:	cmp    ebx,0x100
  425f75:	jbe    0x425fc1
  425f77:	xor    ecx,ecx
  425f79:	mov    eax,ebx
  425f7b:	mov    edx,0x2
  425f80:	mul    edx
  425f82:	seto   cl
  425f85:	neg    ecx
  425f87:	or     ecx,eax
  425f89:	push   ecx
  425f8a:	call   0x425023
  425f8f:	mov    edi,eax
  425f91:	mov    DWORD PTR [esp+0x20],edi
  425f95:	mov    eax,DWORD PTR [esp+0x18]
  425f99:	mov    ecx,DWORD PTR [esp+0x1c]
  425f9d:	push   eax
  425f9e:	push   ecx
  425f9f:	lea    edx,[edi+ebx*2]
  425fa2:	push   edx
  425fa3:	push   edi
  425fa4:	push   esi
  425fa5:	push   ebp
  425fa6:	mov    DWORD PTR [esp+0x248],0x0
  425fb1:	call   0x425d80
  425fb6:	push   edi
  425fb7:	call   0x42517c
  425fbc:	add    esp,0x20
  425fbf:	jmp    0x425fde
  425fc1:	mov    eax,DWORD PTR [esp+0x14]
  425fc5:	push   eax
  425fc6:	push   edi
  425fc7:	lea    ecx,[esp+0x228]
  425fce:	push   ecx
  425fcf:	lea    edx,[esp+0x2c]
  425fd3:	push   edx
  425fd4:	push   esi
  425fd5:	push   ebp
  425fd6:	call   0x425d80
  425fdb:	add    esp,0x18
  425fde:	mov    ecx,DWORD PTR [esp+0x224]
  425fe5:	mov    DWORD PTR fs:0x0,ecx
  425fec:	pop    ecx
  425fed:	pop    edi
  425fee:	pop    esi
  425fef:	pop    ebp
  425ff0:	pop    ebx
  425ff1:	mov    ecx,DWORD PTR [esp+0x20c]
  425ff8:	xor    ecx,esp
  425ffa:	call   0x42503a
  425fff:	add    esp,0x21c
  426005:	ret    
  426006:	int3   
  426007:	int3   
  426008:	int3   
  426009:	int3   
  42600a:	int3   
  42600b:	int3   
  42600c:	int3   
  42600d:	int3   
  42600e:	int3   
  42600f:	int3   
  426010:	push   0xffffffff
  426012:	push   0x42a31b
  426017:	mov    eax,fs:0x0
  42601d:	push   eax
  42601e:	sub    esp,0x110
  426024:	mov    eax,ds:0x43e020
  426029:	xor    eax,esp
  42602b:	mov    DWORD PTR [esp+0x10c],eax
  426032:	push   ebx
  426033:	push   ebp
  426034:	push   esi
  426035:	push   edi
  426036:	mov    eax,ds:0x43e020
  42603b:	xor    eax,esp
  42603d:	push   eax
  42603e:	lea    eax,[esp+0x124]
  426045:	mov    fs:0x0,eax
  42604b:	mov    esi,DWORD PTR [esp+0x138]
  426052:	mov    edi,DWORD PTR [esp+0x13c]
  426059:	mov    eax,DWORD PTR [esp+0x140]
  426060:	mov    ebx,DWORD PTR [esp+0x134]
  426067:	mov    DWORD PTR [esp+0x18],edi
  42606b:	mov    DWORD PTR [esp+0x14],eax
  42606f:	test   esi,esi
  426071:	jne    0x426092
  426073:	mov    eax,ebx
  426075:	lea    edx,[eax+0x2]
  426078:	jmp    0x426080
  42607a:	lea    ebx,[ebx+0x0]
  426080:	mov    cx,WORD PTR [eax]
  426083:	add    eax,0x2
  426086:	test   cx,cx
  426089:	jne    0x426080
  42608b:	sub    eax,edx
  42608d:	sar    eax,1
  42608f:	lea    esi,[ebx+eax*2]
  426092:	cmp    ebx,esi
  426094:	je     0x426100
  426096:	mov    ecx,esi
  426098:	sub    ecx,ebx
  42609a:	sar    ecx,1
  42609c:	lea    ebp,[ecx*4+0x4]
  4260a3:	cmp    ebp,0x100
  4260a9:	jbe    0x4260e3
  4260ab:	push   ebp
  4260ac:	call   0x425023
  4260b1:	mov    edi,eax
  4260b3:	mov    DWORD PTR [esp+0x20],edi
  4260b7:	mov    edx,DWORD PTR [esp+0x18]
  4260bb:	mov    eax,DWORD PTR [esp+0x1c]
  4260bf:	push   edx
  4260c0:	push   eax
  4260c1:	lea    ecx,[edi+ebp*1]
  4260c4:	push   ecx
  4260c5:	push   edi
  4260c6:	push   esi
  4260c7:	push   ebx
  4260c8:	mov    DWORD PTR [esp+0x148],0x0
  4260d3:	call   0x425e70
  4260d8:	push   edi
  4260d9:	call   0x42517c
  4260de:	add    esp,0x20
  4260e1:	jmp    0x426100
  4260e3:	mov    edx,DWORD PTR [esp+0x14]
  4260e7:	push   edx
  4260e8:	push   edi
  4260e9:	lea    eax,[esp+0x128]
  4260f0:	push   eax
  4260f1:	lea    ecx,[esp+0x2c]
  4260f5:	push   ecx
  4260f6:	push   esi
  4260f7:	push   ebx
  4260f8:	call   0x425e70
  4260fd:	add    esp,0x18
  426100:	mov    ecx,DWORD PTR [esp+0x124]
  426107:	mov    DWORD PTR fs:0x0,ecx
  42610e:	pop    ecx
  42610f:	pop    edi
  426110:	pop    esi
  426111:	pop    ebp
  426112:	pop    ebx
  426113:	mov    ecx,DWORD PTR [esp+0x10c]
  42611a:	xor    ecx,esp
  42611c:	call   0x42503a
  426121:	add    esp,0x11c
  426127:	ret    
  426128:	int3   
  426129:	int3   
  42612a:	int3   
  42612b:	int3   
  42612c:	int3   
  42612d:	int3   
  42612e:	int3   
  42612f:	int3   
  426130:	xor    al,al
  426132:	ret    
  426133:	int3   
  426134:	int3   
  426135:	int3   
  426136:	int3   
  426137:	int3   
  426138:	int3   
  426139:	int3   
  42613a:	int3   
  42613b:	int3   
  42613c:	int3   
  42613d:	int3   
  42613e:	int3   
  42613f:	int3   
  426140:	xor    eax,eax
  426142:	ret    
  426143:	int3   
  426144:	int3   
  426145:	int3   
  426146:	int3   
  426147:	int3   
  426148:	int3   
  426149:	int3   
  42614a:	int3   
  42614b:	int3   
  42614c:	int3   
  42614d:	int3   
  42614e:	int3   
  42614f:	int3   
  426150:	xor    eax,eax
  426152:	ret    0x10
  426155:	int3   
  426156:	int3   
  426157:	int3   
  426158:	int3   
  426159:	int3   
  42615a:	int3   
  42615b:	int3   
  42615c:	int3   
  42615d:	int3   
  42615e:	int3   
  42615f:	int3   
  426160:	mov    ax,WORD PTR [esp+0x4]
  426165:	cmp    ax,0x2f
  426169:	je     0x426174
  42616b:	cmp    ax,0x5c
  42616f:	je     0x426174
  426171:	xor    eax,eax
  426173:	ret    
  426174:	mov    eax,0x1
  426179:	ret    
  42617a:	int3   
  42617b:	int3   
  42617c:	int3   
  42617d:	int3   
  42617e:	int3   
  42617f:	int3   
  426180:	push   ebx
  426181:	mov    ebx,DWORD PTR [esp+0xc]
  426185:	push   ebp
  426186:	mov    ebp,DWORD PTR ds:0x430390
  42618c:	push   esi
  42618d:	mov    esi,DWORD PTR [esp+0x10]
  426191:	push   edi
  426192:	cmp    ebx,0x2
  426195:	jne    0x4261dc
  426197:	cmp    DWORD PTR [esi+0x18],0x8
  42619b:	lea    edi,[esi+0x4]
  42619e:	jb     0x4261a4
  4261a0:	mov    eax,DWORD PTR [edi]
  4261a2:	jmp    0x4261a6
  4261a4:	mov    eax,edi
  4261a6:	movzx  eax,WORD PTR [eax]
  4261a9:	cmp    ax,0x2f
  4261ad:	je     0x4261b5
  4261af:	cmp    ax,0x5c
  4261b3:	jne    0x4261e0
  4261b5:	cmp    DWORD PTR [esi+0x14],0x1
  4261b9:	jae    0x4261bd
  4261bb:	call   ebp
  4261bd:	cmp    DWORD PTR [esi+0x18],0x8
  4261c1:	jb     0x4261c5
  4261c3:	mov    edi,DWORD PTR [edi]
  4261c5:	movzx  eax,WORD PTR [edi+0x2]
  4261c9:	cmp    ax,0x2f
  4261cd:	je     0x4261d5
  4261cf:	cmp    ax,0x5c
  4261d3:	jne    0x4261e0
  4261d5:	pop    edi
  4261d6:	pop    esi
  4261d7:	pop    ebp
  4261d8:	xor    eax,eax
  4261da:	pop    ebx
  4261db:	ret    
  4261dc:	test   ebx,ebx
  4261de:	je     0x42620f
  4261e0:	lea    edi,[ebx-0x1]
  4261e3:	cmp    edi,DWORD PTR [esi+0x14]
  4261e6:	jbe    0x4261ea
  4261e8:	call   ebp
  4261ea:	cmp    DWORD PTR [esi+0x18],0x8
  4261ee:	jb     0x4261f5
  4261f0:	mov    eax,DWORD PTR [esi+0x4]
  4261f3:	jmp    0x4261f8
  4261f5:	lea    eax,[esi+0x4]
  4261f8:	movzx  eax,WORD PTR [eax+edi*2]
  4261fc:	cmp    ax,0x2f
  426200:	je     0x426208
  426202:	cmp    ax,0x5c
  426206:	jne    0x42620f
  426208:	mov    eax,edi
  42620a:	pop    edi
  42620b:	pop    esi
  42620c:	pop    ebp
  42620d:	pop    ebx
  42620e:	ret    
  42620f:	lea    eax,[ebx-0x1]
  426212:	push   eax
  426213:	push   0x4305a0
  426218:	mov    ecx,esi
  42621a:	call   DWORD PTR ds:0x430220
  426220:	mov    ecx,DWORD PTR ds:0x4301e0
  426226:	cmp    eax,DWORD PTR [ecx]
  426228:	jne    0x426238
  42622a:	add    ebx,0xfffffffe
  42622d:	push   ebx
  42622e:	push   0x3a
  426230:	mov    ecx,esi
  426232:	call   DWORD PTR ds:0x43021c
  426238:	mov    edx,DWORD PTR ds:0x4301e0
  42623e:	cmp    eax,DWORD PTR [edx]
  426240:	je     0x4261d5
  426242:	cmp    eax,0x1
  426245:	jne    0x42626c
  426247:	cmp    DWORD PTR [esi+0x18],0x8
  42624b:	jb     0x426252
  42624d:	mov    esi,DWORD PTR [esi+0x4]
  426250:	jmp    0x426255
  426252:	add    esi,0x4
  426255:	movzx  ecx,WORD PTR [esi]
  426258:	cmp    cx,0x2f
  42625c:	je     0x4261d5
  426262:	cmp    cx,0x5c
  426266:	je     0x4261d5
  42626c:	pop    edi
  42626d:	pop    esi
  42626e:	pop    ebp
  42626f:	inc    eax
  426270:	pop    ebx
  426271:	ret    
  426272:	int3   
  426273:	int3   
  426274:	int3   
  426275:	int3   
  426276:	int3   
  426277:	int3   
  426278:	int3   
  426279:	int3   
  42627a:	int3   
  42627b:	int3   
  42627c:	int3   
  42627d:	int3   
  42627e:	int3   
  42627f:	int3   
  426280:	push   ebx
  426281:	mov    ebx,DWORD PTR [esp+0xc]
  426285:	push   ebp
  426286:	push   esi
  426287:	mov    esi,DWORD PTR [esp+0x10]
  42628b:	push   edi
  42628c:	mov    ebp,0x1
  426291:	cmp    ebx,0x2
  426294:	jbe    0x4262ed
  426296:	cmp    DWORD PTR [esi+0x14],ebp
  426299:	jae    0x4262a1
  42629b:	call   DWORD PTR ds:0x430390
  4262a1:	mov    ecx,0x8
  4262a6:	lea    edi,[esi+0x4]
  4262a9:	cmp    DWORD PTR [esi+0x18],ecx
  4262ac:	jb     0x4262b2
  4262ae:	mov    eax,DWORD PTR [edi]
  4262b0:	jmp    0x4262b4
  4262b2:	mov    eax,edi
  4262b4:	cmp    WORD PTR [eax+0x2],0x3a
  4262b9:	jne    0x4262f2
  4262bb:	cmp    DWORD PTR [esi+0x14],0x2
  4262bf:	jae    0x4262cc
  4262c1:	call   DWORD PTR ds:0x430390
  4262c7:	mov    ecx,0x8
  4262cc:	cmp    DWORD PTR [esi+0x18],ecx
  4262cf:	jb     0x4262d3
  4262d1:	mov    edi,DWORD PTR [edi]
  4262d3:	movzx  eax,WORD PTR [edi+0x4]
  4262d7:	cmp    ax,0x2f
  4262db:	je     0x4262e3
  4262dd:	cmp    ax,0x5c
  4262e1:	jne    0x4262f2
  4262e3:	pop    edi
  4262e4:	pop    esi
  4262e5:	pop    ebp
  4262e6:	mov    eax,0x2
  4262eb:	pop    ebx
  4262ec:	ret    
  4262ed:	mov    ecx,0x8
  4262f2:	cmp    ebx,0x2
  4262f5:	jne    0x42634f
  4262f7:	lea    edi,[esi+0x4]
  4262fa:	cmp    DWORD PTR [esi+0x18],ecx
  4262fd:	jb     0x426303
  4262ff:	mov    eax,DWORD PTR [edi]
  426301:	jmp    0x426305
  426303:	mov    eax,edi
  426305:	movzx  eax,WORD PTR [eax]
  426308:	cmp    ax,0x2f
  42630c:	je     0x426318
  42630e:	cmp    ax,0x5c
  426312:	jne    0x4264b5
  426318:	cmp    DWORD PTR [esi+0x14],ebp
  42631b:	jae    0x426328
  42631d:	call   DWORD PTR ds:0x430390
  426323:	mov    ecx,0x8
  426328:	cmp    DWORD PTR [esi+0x18],ecx
  42632b:	jb     0x42632f
  42632d:	mov    edi,DWORD PTR [edi]
  42632f:	movzx  eax,WORD PTR [edi+0x2]
  426333:	cmp    ax,0x2f
  426337:	je     0x426343
  426339:	cmp    ax,0x5c
  42633d:	jne    0x4264b5
  426343:	mov    eax,ds:0x4301e0
  426348:	mov    eax,DWORD PTR [eax]
  42634a:	pop    edi
  42634b:	pop    esi
  42634c:	pop    ebp
  42634d:	pop    ebx
  42634e:	ret    
  42634f:	cmp    ebx,0x4
  426352:	jbe    0x426419
  426358:	lea    edi,[esi+0x4]
  42635b:	cmp    DWORD PTR [esi+0x18],ecx
  42635e:	jb     0x426364
  426360:	mov    eax,DWORD PTR [edi]
  426362:	jmp    0x426366
  426364:	mov    eax,edi
  426366:	movzx  eax,WORD PTR [eax]
  426369:	cmp    ax,0x2f
  42636d:	je     0x426379
  42636f:	cmp    ax,0x5c
  426373:	jne    0x426419
  426379:	cmp    DWORD PTR [esi+0x14],ebp
  42637c:	jae    0x426389
  42637e:	call   DWORD PTR ds:0x430390
  426384:	mov    ecx,0x8
  426389:	cmp    DWORD PTR [esi+0x18],ecx
  42638c:	jb     0x426392
  42638e:	mov    eax,DWORD PTR [edi]
  426390:	jmp    0x426394
  426392:	mov    eax,edi
  426394:	movzx  eax,WORD PTR [eax+0x2]
  426398:	cmp    ax,0x2f
  42639c:	je     0x4263a4
  42639e:	cmp    ax,0x5c
  4263a2:	jne    0x426419
  4263a4:	cmp    DWORD PTR [esi+0x14],0x2
  4263a8:	jae    0x4263b5
  4263aa:	call   DWORD PTR ds:0x430390
  4263b0:	mov    ecx,0x8
  4263b5:	cmp    DWORD PTR [esi+0x18],ecx
  4263b8:	jb     0x4263be
  4263ba:	mov    eax,DWORD PTR [edi]
  4263bc:	jmp    0x4263c0
  4263be:	mov    eax,edi
  4263c0:	cmp    WORD PTR [eax+0x4],0x3f
  4263c5:	jne    0x426419
  4263c7:	cmp    DWORD PTR [esi+0x14],0x3
  4263cb:	jae    0x4263d8
  4263cd:	call   DWORD PTR ds:0x430390
  4263d3:	mov    ecx,0x8
  4263d8:	cmp    DWORD PTR [esi+0x18],ecx
  4263db:	jb     0x4263df
  4263dd:	mov    edi,DWORD PTR [edi]
  4263df:	movzx  ecx,WORD PTR [edi+0x6]
  4263e3:	push   ecx
  4263e4:	call   0x426160
  4263e9:	add    esp,0x4
  4263ec:	test   al,al
  4263ee:	je     0x426414
  4263f0:	push   0x4
  4263f2:	push   0x4305a0
  4263f7:	mov    ecx,esi
  4263f9:	call   DWORD PTR ds:0x430294
  4263ff:	cmp    eax,ebx
  426401:	jb     0x4264e0
  426407:	mov    edx,DWORD PTR ds:0x4301e0
  42640d:	mov    eax,DWORD PTR [edx]
  42640f:	pop    edi
  426410:	pop    esi
  426411:	pop    ebp
  426412:	pop    ebx
  426413:	ret    
  426414:	mov    ecx,0x8
  426419:	cmp    ebx,0x3
  42641c:	jbe    0x4264b1
  426422:	lea    edi,[esi+0x4]
  426425:	cmp    DWORD PTR [esi+0x18],ecx
  426428:	jb     0x42642e
  42642a:	mov    eax,DWORD PTR [edi]
  42642c:	jmp    0x426430
  42642e:	mov    eax,edi
  426430:	movzx  eax,WORD PTR [eax]
  426433:	cmp    ax,0x2f
  426437:	je     0x42643f
  426439:	cmp    ax,0x5c
  42643d:	jne    0x4264b1
  42643f:	cmp    DWORD PTR [esi+0x14],ebp
  426442:	jae    0x42644f
  426444:	call   DWORD PTR ds:0x430390
  42644a:	mov    ecx,0x8
  42644f:	cmp    DWORD PTR [esi+0x18],ecx
  426452:	jb     0x426458
  426454:	mov    eax,DWORD PTR [edi]
  426456:	jmp    0x42645a
  426458:	mov    eax,edi
  42645a:	movzx  eax,WORD PTR [eax+0x2]
  42645e:	cmp    ax,0x2f
  426462:	je     0x42646a
  426464:	cmp    ax,0x5c
  426468:	jne    0x4264b1
  42646a:	cmp    DWORD PTR [esi+0x14],0x2
  42646e:	jae    0x42647b
  426470:	call   DWORD PTR ds:0x430390
  426476:	mov    ecx,0x8
  42647b:	cmp    DWORD PTR [esi+0x18],ecx
  42647e:	jb     0x426482
  426480:	mov    edi,DWORD PTR [edi]
  426482:	movzx  eax,WORD PTR [edi+0x4]
  426486:	cmp    ax,0x2f
  42648a:	je     0x4264b1
  42648c:	cmp    ax,0x5c
  426490:	je     0x4264b1
  426492:	push   0x2
  426494:	push   0x4305a0
  426499:	mov    ecx,esi
  42649b:	call   DWORD PTR ds:0x430294
  4264a1:	cmp    eax,ebx
  4264a3:	jb     0x4264e0
  4264a5:	mov    eax,ds:0x4301e0
  4264aa:	mov    eax,DWORD PTR [eax]
  4264ac:	pop    edi
  4264ad:	pop    esi
  4264ae:	pop    ebp
  4264af:	pop    ebx
  4264b0:	ret    
  4264b1:	test   ebx,ebx
  4264b3:	jbe    0x4264d8
  4264b5:	cmp    DWORD PTR [esi+0x18],ecx
  4264b8:	jb     0x4264bf
  4264ba:	mov    esi,DWORD PTR [esi+0x4]
  4264bd:	jmp    0x4264c2
  4264bf:	add    esi,0x4
  4264c2:	movzx  eax,WORD PTR [esi]
  4264c5:	cmp    ax,0x2f
  4264c9:	je     0x4264d1
  4264cb:	cmp    ax,0x5c
  4264cf:	jne    0x4264d8
  4264d1:	pop    edi
  4264d2:	pop    esi
  4264d3:	pop    ebp
  4264d4:	xor    eax,eax
  4264d6:	pop    ebx
  4264d7:	ret    
  4264d8:	mov    ecx,DWORD PTR ds:0x4301e0
  4264de:	mov    eax,DWORD PTR [ecx]
  4264e0:	pop    edi
  4264e1:	pop    esi
  4264e2:	pop    ebp
  4264e3:	pop    ebx
  4264e4:	ret    
  4264e5:	int3   
  4264e6:	int3   
  4264e7:	int3   
  4264e8:	int3   
  4264e9:	int3   
  4264ea:	int3   
  4264eb:	int3   
  4264ec:	int3   
  4264ed:	int3   
  4264ee:	int3   
  4264ef:	int3   
  4264f0:	push   0xffffffff
  4264f2:	push   0x42a35b
  4264f7:	mov    eax,fs:0x0
  4264fd:	push   eax
  4264fe:	push   ecx
  4264ff:	push   ebx
  426500:	push   esi
  426501:	push   edi
  426502:	mov    eax,ds:0x43e020
  426507:	xor    eax,esp
  426509:	push   eax
  42650a:	lea    eax,[esp+0x14]
  42650e:	mov    fs:0x0,eax
  426514:	mov    esi,ecx
  426516:	push   0x34
  426518:	call   0x425050
  42651d:	mov    edi,eax
  42651f:	add    esp,0x4
  426522:	mov    DWORD PTR [esp+0x10],edi
  426526:	mov    DWORD PTR [esp+0x1c],0x0
  42652e:	test   edi,edi
  426530:	je     0x426549
  426532:	mov    eax,DWORD PTR [esp+0x24]
  426536:	mov    ecx,DWORD PTR [eax]
  426538:	push   ecx
  426539:	mov    ecx,edi
  42653b:	call   DWORD PTR ds:0x4302a8
  426541:	mov    DWORD PTR [edi],0x4305dc
  426547:	jmp    0x42654b
  426549:	xor    edi,edi
  42654b:	mov    ebx,DWORD PTR [esp+0x28]
  42654f:	mov    DWORD PTR [esp+0x1c],0xffffffff
  426557:	mov    DWORD PTR [esi],edi
  426559:	test   ebx,ebx
  42655b:	je     0x4265cc
  42655d:	mov    edi,DWORD PTR ds:0x4302a4
  426563:	cmp    DWORD PTR [edi],0x0
  426566:	jne    0x426594
  426568:	push   0x0
  42656a:	lea    ecx,[esp+0x28]
  42656e:	call   DWORD PTR ds:0x430188
  426574:	cmp    DWORD PTR [edi],0x0
  426577:	jne    0x42658a
  426579:	mov    eax,ds:0x4302a0
  42657e:	inc    DWORD PTR [eax]
  426580:	mov    edx,DWORD PTR ds:0x4302a0
  426586:	mov    eax,DWORD PTR [edx]
  426588:	mov    DWORD PTR [edi],eax
  42658a:	lea    ecx,[esp+0x24]
  42658e:	call   DWORD PTR ds:0x430184
  426594:	mov    ecx,DWORD PTR [edi]
  426596:	mov    edx,DWORD PTR [esi]
  426598:	push   ecx
  426599:	push   ebx
  42659a:	push   edx
  42659b:	call   DWORD PTR ds:0x43029c
  4265a1:	push   0x0
  4265a3:	push   0x0
  4265a5:	call   DWORD PTR ds:0x430298
  4265ab:	add    esp,0x14
  4265ae:	cmp    eax,0xffffffff
  4265b1:	je     0x4265cc
  4265b3:	mov    eax,DWORD PTR [esi]
  4265b5:	mov    DWORD PTR [eax+0x10],0x0
  4265bc:	mov    ecx,DWORD PTR [esi]
  4265be:	push   0x4305d4
  4265c3:	add    ecx,0x18
  4265c6:	call   DWORD PTR ds:0x430178
  4265cc:	mov    eax,esi
  4265ce:	mov    ecx,DWORD PTR [esp+0x14]
  4265d2:	mov    DWORD PTR fs:0x0,ecx
  4265d9:	pop    ecx
  4265da:	pop    edi
  4265db:	pop    esi
  4265dc:	pop    ebx
  4265dd:	add    esp,0x10
  4265e0:	ret    0x8
  4265e3:	int3   
  4265e4:	int3   
  4265e5:	int3   
  4265e6:	int3   
  4265e7:	int3   
  4265e8:	int3   
  4265e9:	int3   
  4265ea:	int3   
  4265eb:	int3   
  4265ec:	int3   
  4265ed:	int3   
  4265ee:	int3   
  4265ef:	int3   
  4265f0:	push   esi
  4265f1:	mov    esi,ecx
  4265f3:	call   DWORD PTR ds:0x4302ac
  4265f9:	test   BYTE PTR [esp+0x8],0x1
  4265fe:	je     0x426609
  426600:	push   esi
  426601:	call   0x42504a
  426606:	add    esp,0x4
  426609:	mov    eax,esi
  42660b:	pop    esi
  42660c:	ret    0x4
  42660f:	int3   
  426610:	push   0xffffffff
  426612:	push   0x42a389
  426617:	mov    eax,fs:0x0
  42661d:	push   eax
  42661e:	sub    esp,0x18
  426621:	push   ebx
  426622:	push   esi
  426623:	push   edi
  426624:	mov    eax,ds:0x43e020
  426629:	xor    eax,esp
  42662b:	push   eax
  42662c:	lea    eax,[esp+0x28]
  426630:	mov    fs:0x0,eax
  426636:	mov    edi,DWORD PTR ds:0x430188
  42663c:	push   0x0
  42663e:	lea    ecx,[esp+0x1c]
  426642:	call   edi
  426644:	mov    eax,ds:0x43fd60
  426649:	mov    esi,DWORD PTR ds:0x4302a4
  42664f:	mov    ebx,DWORD PTR ds:0x430184
  426655:	mov    DWORD PTR [esp+0x10],eax
  426659:	cmp    DWORD PTR [esi],0x0
  42665c:	mov    DWORD PTR [esp+0x30],0x0
  426664:	jne    0x42668a
  426666:	push   0x0
  426668:	lea    ecx,[esp+0x18]
  42666c:	call   edi
  42666e:	cmp    DWORD PTR [esi],0x0
  426671:	jne    0x426684
  426673:	mov    eax,ds:0x4302a0
  426678:	inc    DWORD PTR [eax]
  42667a:	mov    ecx,DWORD PTR ds:0x4302a0
  426680:	mov    edx,DWORD PTR [ecx]
  426682:	mov    DWORD PTR [esi],edx
  426684:	lea    ecx,[esp+0x14]
  426688:	call   ebx
  42668a:	mov    esi,DWORD PTR [esi]
  42668c:	mov    edi,DWORD PTR [esp+0x38]
  426690:	push   esi
  426691:	mov    ecx,edi
  426693:	call   DWORD PTR ds:0x430194
  426699:	mov    esi,eax
  42669b:	test   esi,esi
  42669d:	jne    0x4266f6
  42669f:	mov    esi,DWORD PTR [esp+0x10]
  4266a3:	test   esi,esi
  4266a5:	jne    0x4266f6
  4266a7:	lea    eax,[esp+0x10]
  4266ab:	push   edi
  4266ac:	push   eax
  4266ad:	call   DWORD PTR ds:0x430298
  4266b3:	add    esp,0x8
  4266b6:	cmp    eax,0xffffffff
  4266b9:	jne    0x4266d9
  4266bb:	push   0x43131c
  4266c0:	lea    ecx,[esp+0x20]
  4266c4:	call   DWORD PTR ds:0x430360
  4266ca:	push   0x4359b0
  4266cf:	lea    ecx,[esp+0x20]
  4266d3:	push   ecx
  4266d4:	call   0x429e76
  4266d9:	mov    ecx,DWORD PTR [esp+0x10]
  4266dd:	mov    esi,ecx
  4266df:	mov    DWORD PTR ds:0x43fd60,ecx
  4266e5:	mov    edi,ecx
  4266e7:	call   DWORD PTR ds:0x430190
  4266ed:	push   edi
  4266ee:	call   0x424fe5
  4266f3:	add    esp,0x4
  4266f6:	lea    ecx,[esp+0x18]
  4266fa:	mov    DWORD PTR [esp+0x30],0xffffffff
  426702:	call   ebx
  426704:	mov    eax,esi
  426706:	mov    ecx,DWORD PTR [esp+0x28]
  42670a:	mov    DWORD PTR fs:0x0,ecx
  426711:	pop    ecx
  426712:	pop    edi
  426713:	pop    esi
  426714:	pop    ebx
  426715:	add    esp,0x24
  426718:	ret    
  426719:	int3   
  42671a:	int3   
  42671b:	int3   
  42671c:	int3   
  42671d:	int3   
  42671e:	int3   
  42671f:	int3   
  426720:	push   esi
  426721:	mov    esi,ecx
  426723:	call   DWORD PTR ds:0x43028c
  426729:	test   BYTE PTR [esp+0x8],0x1
  42672e:	je     0x426739
  426730:	push   esi
  426731:	call   0x42504a
  426736:	add    esp,0x4
  426739:	mov    eax,esi
  42673b:	pop    esi
  42673c:	ret    0x4
  42673f:	int3   
  426740:	sub    esp,0x8
  426743:	push   esi
  426744:	mov    esi,ecx
  426746:	mov    eax,DWORD PTR [esi+0x14]
  426749:	push   edi
  42674a:	push   eax
  42674b:	push   esi
  42674c:	call   0x426180
  426751:	mov    edi,eax
  426753:	mov    eax,DWORD PTR [esi+0x14]
  426756:	add    esp,0x8
  426759:	test   eax,eax
  42675b:	je     0x42678c
  42675d:	cmp    edi,eax
  42675f:	jbe    0x426767
  426761:	call   DWORD PTR ds:0x430390
  426767:	cmp    DWORD PTR [esi+0x18],0x8
  42676b:	jb     0x426772
  42676d:	mov    eax,DWORD PTR [esi+0x4]
  426770:	jmp    0x426775
  426772:	lea    eax,[esi+0x4]
  426775:	movzx  eax,WORD PTR [eax+edi*2]
  426779:	cmp    ax,0x2f
  42677d:	je     0x426785
  42677f:	cmp    ax,0x5c
  426783:	jne    0x42678c
  426785:	mov    BYTE PTR [esp+0xb],0x1
  42678a:	jmp    0x426791
  42678c:	mov    BYTE PTR [esp+0xb],0x0
  426791:	push   edi
  426792:	push   esi
  426793:	call   0x426280
  426798:	add    esp,0x8
  42679b:	mov    ecx,eax
  42679d:	mov    DWORD PTR [esp+0xc],ecx
  4267a1:	test   edi,edi
  4267a3:	jbe    0x4267ec
  4267a5:	push   ebx
  4267a6:	push   ebp
  4267a7:	lea    ebx,[edi-0x1]
  4267aa:	lea    ebp,[edi+edi*1-0x2]
  4267ae:	mov    edi,edi
  4267b0:	cmp    ebx,ecx
  4267b2:	je     0x4267ea
  4267b4:	cmp    ebx,DWORD PTR [esi+0x14]
  4267b7:	jbe    0x4267c3
  4267b9:	call   DWORD PTR ds:0x430390
  4267bf:	mov    ecx,DWORD PTR [esp+0x14]
  4267c3:	cmp    DWORD PTR [esi+0x18],0x8
  4267c7:	jb     0x4267ce
  4267c9:	mov    eax,DWORD PTR [esi+0x4]
  4267cc:	jmp    0x4267d1
  4267ce:	lea    eax,[esi+0x4]
  4267d1:	movzx  eax,WORD PTR [eax+ebp*1]
  4267d5:	cmp    ax,0x2f
  4267d9:	je     0x4267e1
  4267db:	cmp    ax,0x5c
  4267df:	jne    0x4267ea
  4267e1:	dec    edi
  4267e2:	sub    ebp,0x2
  4267e5:	dec    ebx
  4267e6:	test   edi,edi
  4267e8:	ja     0x4267b0
  4267ea:	pop    ebp
  4267eb:	pop    ebx
  4267ec:	cmp    edi,0x1
  4267ef:	jne    0x426808
  4267f1:	test   ecx,ecx
  4267f3:	jne    0x426808
  4267f5:	cmp    BYTE PTR [esp+0xb],cl
  4267f9:	je     0x426808
  4267fb:	mov    eax,ds:0x4301e0
  426800:	mov    eax,DWORD PTR [eax]
  426802:	pop    edi
  426803:	pop    esi
  426804:	add    esp,0x8
  426807:	ret    
  426808:	mov    eax,edi
  42680a:	pop    edi
  42680b:	pop    esi
  42680c:	add    esp,0x8
  42680f:	ret    
  426810:	push   0xffffffff
  426812:	push   0x42a3c4
  426817:	mov    eax,fs:0x0
  42681d:	push   eax
  42681e:	sub    esp,0x8
  426821:	push   esi
  426822:	mov    eax,ds:0x43e020
  426827:	xor    eax,esp
  426829:	push   eax
  42682a:	lea    eax,[esp+0x10]
  42682e:	mov    fs:0x0,eax
  426834:	mov    DWORD PTR [esp+0x8],0x0
  42683c:	call   DWORD PTR ds:0x4302b4
  426842:	mov    DWORD PTR [esp+0x8],eax
  426846:	call   DWORD PTR ds:0x4302b0
  42684c:	mov    ecx,eax
  42684e:	call   DWORD PTR ds:0x430190
  426854:	push   0x10
  426856:	mov    DWORD PTR [esp+0x1c],0x0
  42685e:	call   0x425050
  426863:	mov    esi,eax
  426865:	add    esp,0x4
  426868:	mov    DWORD PTR [esp+0xc],esi
  42686c:	mov    BYTE PTR [esp+0x18],0x1
  426871:	test   esi,esi
  426873:	je     0x426887
  426875:	push   0x0
  426877:	mov    ecx,esi
  426879:	call   DWORD PTR ds:0x430284
  42687f:	mov    DWORD PTR [esi],0x4305b0
  426885:	jmp    0x426889
  426887:	xor    esi,esi
  426889:	push   esi
  42688a:	mov    esi,DWORD PTR [esp+0x24]
  42688e:	lea    eax,[esp+0xc]
  426892:	push   eax
  426893:	mov    ecx,esi
  426895:	mov    BYTE PTR [esp+0x20],0x0
  42689a:	call   0x4264f0
  42689f:	lea    ecx,[esp+0x8]
  4268a3:	call   DWORD PTR ds:0x430180
  4268a9:	mov    eax,esi
  4268ab:	mov    ecx,DWORD PTR [esp+0x10]
  4268af:	mov    DWORD PTR fs:0x0,ecx
  4268b6:	pop    ecx
  4268b7:	pop    esi
  4268b8:	add    esp,0x14
  4268bb:	ret    
  4268bc:	int3   
  4268bd:	int3   
  4268be:	int3   
  4268bf:	int3   
  4268c0:	push   0xffffffff
  4268c2:	push   0x42a3ee
  4268c7:	mov    eax,fs:0x0
  4268cd:	push   eax
  4268ce:	mov    eax,ds:0x43e020
  4268d3:	xor    eax,esp
  4268d5:	push   eax
  4268d6:	lea    eax,[esp+0x4]
  4268da:	mov    fs:0x0,eax
  4268e0:	mov    eax,0x1
  4268e5:	test   BYTE PTR ds:0x43fd68,al
  4268eb:	jne    0x426912
  4268ed:	or     DWORD PTR ds:0x43fd68,eax
  4268f3:	push   0x43fd64
  4268f8:	mov    DWORD PTR [esp+0x10],0x0
  426900:	call   0x426810
  426905:	push   0x42f5f0
  42690a:	call   0x425159
  42690f:	add    esp,0x8
  426912:	mov    eax,0x43fd64
  426917:	mov    ecx,DWORD PTR [esp+0x4]
  42691b:	mov    DWORD PTR fs:0x0,ecx
  426922:	pop    ecx
  426923:	add    esp,0xc
  426926:	ret    
  426927:	int3   
  426928:	int3   
  426929:	int3   
  42692a:	int3   
  42692b:	int3   
  42692c:	int3   
  42692d:	int3   
  42692e:	int3   
  42692f:	int3   
  426930:	push   0xffffffff
  426932:	push   0x42a41e
  426937:	mov    eax,fs:0x0
  42693d:	push   eax
  42693e:	mov    eax,ds:0x43e020
  426943:	xor    eax,esp
  426945:	push   eax
  426946:	lea    eax,[esp+0x4]
  42694a:	mov    fs:0x0,eax
  426950:	mov    eax,0x1
  426955:	test   BYTE PTR ds:0x43fd70,al
  42695b:	jne    0x42697e
  42695d:	or     DWORD PTR ds:0x43fd70,eax
  426963:	mov    DWORD PTR [esp+0xc],0x0
  42696b:	call   0x4268c0
  426970:	push   eax
  426971:	call   0x426610
  426976:	add    esp,0x4
  426979:	mov    ds:0x43fd6c,eax
  42697e:	mov    eax,0x43fd6c
  426983:	mov    ecx,DWORD PTR [esp+0x4]
  426987:	mov    DWORD PTR fs:0x0,ecx
  42698e:	pop    ecx
  42698f:	add    esp,0xc
  426992:	ret    
  426993:	int3   
  426994:	int3   
  426995:	int3   
  426996:	int3   
  426997:	int3   
  426998:	int3   
  426999:	int3   
  42699a:	int3   
  42699b:	int3   
  42699c:	int3   
  42699d:	int3   
  42699e:	int3   
  42699f:	int3   
  4269a0:	mov    eax,ds:0x4301e0
  4269a5:	push   esi
  4269a6:	mov    esi,ecx
  4269a8:	mov    ecx,DWORD PTR [eax]
  4269aa:	push   ecx
  4269ab:	mov    ecx,esi
  4269ad:	call   0x426740
  4269b2:	push   eax
  4269b3:	mov    ecx,esi
  4269b5:	call   DWORD PTR ds:0x430290
  4269bb:	mov    eax,esi
  4269bd:	pop    esi
  4269be:	ret    
  4269bf:	int3   
  4269c0:	push   0xffffffff
  4269c2:	push   0x42a452
  4269c7:	mov    eax,fs:0x0
  4269cd:	push   eax
  4269ce:	sub    esp,0x24
  4269d1:	mov    eax,ds:0x43e020
  4269d6:	xor    eax,esp
  4269d8:	mov    DWORD PTR [esp+0x20],eax
  4269dc:	push   ebp
  4269dd:	push   esi
  4269de:	push   edi
  4269df:	mov    eax,ds:0x43e020
  4269e4:	xor    eax,esp
  4269e6:	push   eax
  4269e7:	lea    eax,[esp+0x34]
  4269eb:	mov    fs:0x0,eax
  4269f1:	mov    esi,DWORD PTR [esp+0x44]
  4269f5:	mov    edi,DWORD PTR [esp+0x48]
  4269f9:	mov    ebp,ecx
  4269fb:	mov    DWORD PTR [esp+0x10],ebp
  4269ff:	call   DWORD PTR ds:0x430254
  426a05:	mov    DWORD PTR [esp+0x3c],0x0
  426a0d:	cmp    esi,edi
  426a0f:	je     0x426a5c
  426a11:	push   edi
  426a12:	push   esi
  426a13:	lea    ecx,[esp+0x1c]
  426a17:	call   DWORD PTR ds:0x4302b8
  426a1d:	mov    BYTE PTR [esp+0x3c],0x1
  426a22:	call   0x426930
  426a27:	mov    edx,DWORD PTR [esp+0x2c]
  426a2b:	mov    eax,DWORD PTR [esp+0x18]
  426a2f:	mov    ecx,eax
  426a31:	cmp    edx,0x8
  426a34:	jae    0x426a3c
  426a36:	lea    ecx,[esp+0x18]
  426a3a:	mov    eax,ecx
  426a3c:	mov    edx,DWORD PTR [esp+0x28]
  426a40:	lea    ecx,[ecx+edx*2]
  426a43:	push   ecx
  426a44:	push   eax
  426a45:	mov    ecx,ebp
  426a47:	call   DWORD PTR ds:0x43027c
  426a4d:	lea    ecx,[esp+0x14]
  426a51:	mov    BYTE PTR [esp+0x3c],0x0
  426a56:	call   DWORD PTR ds:0x430264
  426a5c:	mov    eax,ebp
  426a5e:	mov    ecx,DWORD PTR [esp+0x34]
  426a62:	mov    DWORD PTR fs:0x0,ecx
  426a69:	pop    ecx
  426a6a:	pop    edi
  426a6b:	pop    esi
  426a6c:	pop    ebp
  426a6d:	mov    ecx,DWORD PTR [esp+0x20]
  426a71:	xor    ecx,esp
  426a73:	call   0x42503a
  426a78:	add    esp,0x30
  426a7b:	ret    0x8
  426a7e:	int3   
  426a7f:	int3   
  426a80:	push   0xffffffff
  426a82:	push   0x42a4cb
  426a87:	mov    eax,fs:0x0
  426a8d:	push   eax
  426a8e:	sub    esp,0x3c
  426a91:	push   ebx
  426a92:	push   esi
  426a93:	push   edi
  426a94:	mov    eax,ds:0x43e020
  426a99:	xor    eax,esp
  426a9b:	push   eax
  426a9c:	lea    eax,[esp+0x4c]
  426aa0:	mov    fs:0x0,eax
  426aa6:	mov    esi,ecx
  426aa8:	mov    DWORD PTR [esp+0x10],0x0
  426ab0:	call   0x426740
  426ab5:	mov    ecx,DWORD PTR ds:0x4301e0
  426abb:	cmp    eax,DWORD PTR [ecx]
  426abd:	jne    0x426ad4
  426abf:	lea    ecx,[esp+0x14]
  426ac3:	call   DWORD PTR ds:0x430254
  426ac9:	lea    eax,[esp+0x14]
  426acd:	mov    ebx,0x1
  426ad2:	jmp    0x426aff
  426ad4:	mov    edi,DWORD PTR [esi+0x18]
  426ad7:	lea    ecx,[esi+0x4]
  426ada:	cmp    edi,0x8
  426add:	jb     0x426ae3
  426adf:	mov    edx,DWORD PTR [ecx]
  426ae1:	jmp    0x426ae5
  426ae3:	mov    edx,ecx
  426ae5:	cmp    edi,0x8
  426ae8:	jb     0x426aec
  426aea:	mov    ecx,DWORD PTR [ecx]
  426aec:	lea    edx,[edx+eax*2]
  426aef:	push   edx
  426af0:	push   ecx
  426af1:	lea    ecx,[esp+0x38]
  426af5:	call   0x4269c0
  426afa:	mov    ebx,0x2
  426aff:	mov    esi,DWORD PTR [esp+0x5c]
  426b03:	push   eax
  426b04:	mov    ecx,esi
  426b06:	mov    DWORD PTR [esp+0x14],ebx
  426b0a:	mov    DWORD PTR [esp+0x58],ebx
  426b0e:	call   DWORD PTR ds:0x430118
  426b14:	or     ebx,0x4
  426b17:	mov    DWORD PTR [esp+0x54],0x1
  426b1f:	test   bl,0x2
  426b22:	je     0x426b35
  426b24:	and    ebx,0xfffffffd
  426b27:	lea    ecx,[esp+0x30]
  426b2b:	mov    DWORD PTR [esp+0x10],ebx
  426b2f:	call   DWORD PTR ds:0x430264
  426b35:	mov    DWORD PTR [esp+0x54],0x0
  426b3d:	test   bl,0x1
  426b40:	je     0x426b53
  426b42:	and    ebx,0xfffffffe
  426b45:	lea    ecx,[esp+0x14]
  426b49:	mov    DWORD PTR [esp+0x10],ebx
  426b4d:	call   DWORD PTR ds:0x430264
  426b53:	mov    eax,esi
  426b55:	mov    ecx,DWORD PTR [esp+0x4c]
  426b59:	mov    DWORD PTR fs:0x0,ecx
  426b60:	pop    ecx
  426b61:	pop    edi
  426b62:	pop    esi
  426b63:	pop    ebx
  426b64:	add    esp,0x48
  426b67:	ret    0x4
  426b6a:	int3   
  426b6b:	int3   
  426b6c:	int3   
  426b6d:	int3   
  426b6e:	int3   
  426b6f:	int3   
  426b70:	sub    esp,0x18
  426b73:	push   esi
  426b74:	push   edi
  426b75:	mov    edi,ecx
  426b77:	cmp    DWORD PTR [edi+0x14],0x0
  426b7b:	je     0x426c43
  426b81:	push   ebx
  426b82:	lea    eax,[esp+0x14]
  426b86:	push   eax
  426b87:	call   DWORD PTR ds:0x430124
  426b8d:	mov    ecx,DWORD PTR [eax]
  426b8f:	mov    edx,DWORD PTR [eax+0x4]
  426b92:	mov    DWORD PTR [esp+0xc],ecx
  426b96:	push   0xffffffff
  426b98:	lea    ecx,[esp+0x10]
  426b9c:	mov    DWORD PTR [esp+0x14],edx
  426ba0:	call   0x402830
  426ba5:	mov    esi,DWORD PTR [esp+0xc]
  426ba9:	mov    ebx,DWORD PTR [esp+0x10]
  426bad:	cmp    esi,0xfffffffc
  426bb0:	je     0x426bda
  426bb2:	push   ebp
  426bb3:	mov    ebp,DWORD PTR ds:0x430390
  426bb9:	test   esi,esi
  426bbb:	jne    0x426bbf
  426bbd:	call   ebp
  426bbf:	cmp    DWORD PTR [esi+0x18],0x8
  426bc3:	jb     0x426bca
  426bc5:	mov    eax,DWORD PTR [esi+0x4]
  426bc8:	jmp    0x426bcd
  426bca:	lea    eax,[esi+0x4]
  426bcd:	mov    ecx,DWORD PTR [esi+0x14]
  426bd0:	lea    edx,[eax+ecx*2]
  426bd3:	cmp    ebx,edx
  426bd5:	jb     0x426bd9
  426bd7:	call   ebp
  426bd9:	pop    ebp
  426bda:	cmp    WORD PTR [ebx],0x3a
  426bde:	pop    ebx
  426bdf:	je     0x426c43
  426be1:	lea    eax,[esp+0x18]
  426be5:	push   eax
  426be6:	mov    ecx,edi
  426be8:	call   DWORD PTR ds:0x430124
  426bee:	mov    ecx,DWORD PTR [eax]
  426bf0:	mov    edx,DWORD PTR [eax+0x4]
  426bf3:	mov    DWORD PTR [esp+0x8],ecx
  426bf7:	push   0xffffffff
  426bf9:	lea    ecx,[esp+0xc]
  426bfd:	mov    DWORD PTR [esp+0x10],edx
  426c01:	call   0x402830
  426c06:	mov    ecx,DWORD PTR [esp+0xc]
  426c0a:	mov    eax,DWORD PTR [esp+0x8]
  426c0e:	mov    DWORD PTR [esp+0x14],ecx
  426c12:	lea    ecx,[esp+0x10]
  426c16:	mov    DWORD PTR [esp+0x10],eax
  426c1a:	call   0x402ab0
  426c1f:	movzx  eax,WORD PTR [eax]
  426c22:	cmp    ax,0x2f
  426c26:	je     0x426c43
  426c28:	cmp    ax,0x5c
  426c2c:	je     0x426c43
  426c2e:	mov    esi,DWORD PTR [edi+0x14]
  426c31:	push   0x5c
  426c33:	mov    ecx,edi
  426c35:	call   DWORD PTR ds:0x430238
  426c3b:	pop    edi
  426c3c:	mov    eax,esi
  426c3e:	pop    esi
  426c3f:	add    esp,0x18
  426c42:	ret    
  426c43:	pop    edi
  426c44:	xor    eax,eax
  426c46:	pop    esi
  426c47:	add    esp,0x18
  426c4a:	ret    
  426c4b:	int3   
  426c4c:	int3   
  426c4d:	int3   
  426c4e:	int3   
  426c4f:	int3   
  426c50:	sub    esp,0x8
  426c53:	push   ebx
  426c54:	mov    ebx,DWORD PTR [esp+0x10]
  426c58:	cmp    DWORD PTR [ebx+0x14],0x0
  426c5c:	push   edi
  426c5d:	mov    edi,ecx
  426c5f:	je     0x426cc6
  426c61:	push   esi
  426c62:	lea    eax,[esp+0xc]
  426c66:	push   eax
  426c67:	mov    ecx,ebx
  426c69:	call   DWORD PTR ds:0x430230
  426c6f:	mov    esi,eax
  426c71:	mov    eax,DWORD PTR [esi]
  426c73:	cmp    eax,0xfffffffc
  426c76:	je     0x426ca3
  426c78:	push   ebp
  426c79:	mov    ebp,DWORD PTR ds:0x430390
  426c7f:	test   eax,eax
  426c81:	jne    0x426c85
  426c83:	call   ebp
  426c85:	mov    eax,DWORD PTR [esi]
  426c87:	cmp    DWORD PTR [eax+0x18],0x8
  426c8b:	jb     0x426c92
  426c8d:	mov    ecx,DWORD PTR [eax+0x4]
  426c90:	jmp    0x426c95
  426c92:	lea    ecx,[eax+0x4]
  426c95:	mov    edx,DWORD PTR [eax+0x14]
  426c98:	lea    eax,[ecx+edx*2]
  426c9b:	cmp    DWORD PTR [esi+0x4],eax
  426c9e:	jb     0x426ca2
  426ca0:	call   ebp
  426ca2:	pop    ebp
  426ca3:	mov    ecx,DWORD PTR [esi+0x4]
  426ca6:	movzx  eax,WORD PTR [ecx]
  426ca9:	pop    esi
  426caa:	cmp    ax,0x2f
  426cae:	je     0x426cbd
  426cb0:	cmp    ax,0x5c
  426cb4:	je     0x426cbd
  426cb6:	mov    ecx,edi
  426cb8:	call   0x426b70
  426cbd:	push   ebx
  426cbe:	mov    ecx,edi
  426cc0:	call   DWORD PTR ds:0x430144
  426cc6:	mov    eax,edi
  426cc8:	pop    edi
  426cc9:	pop    ebx
  426cca:	add    esp,0x8
  426ccd:	ret    0x4
  426cd0:	push   0xffffffff
  426cd2:	push   0x42a4f8
  426cd7:	mov    eax,fs:0x0
  426cdd:	push   eax
  426cde:	push   ecx
  426cdf:	push   esi
  426ce0:	mov    eax,ds:0x43e020
  426ce5:	xor    eax,esp
  426ce7:	push   eax
  426ce8:	lea    eax,[esp+0xc]
  426cec:	mov    fs:0x0,eax
  426cf2:	mov    esi,ecx
  426cf4:	mov    DWORD PTR [esp+0x8],esi
  426cf8:	mov    eax,DWORD PTR [esp+0x24]
  426cfc:	push   eax
  426cfd:	call   0x404350
  426d02:	mov    ecx,DWORD PTR [esp+0x1c]
  426d06:	mov    edx,DWORD PTR [esp+0x20]
  426d0a:	mov    DWORD PTR [esi+0x28],ecx
  426d0d:	lea    ecx,[esi+0x30]
  426d10:	mov    DWORD PTR [esp+0x14],0x0
  426d18:	mov    DWORD PTR [esi],0x43053c
  426d1e:	mov    DWORD PTR [esi+0x2c],edx
  426d21:	call   DWORD PTR ds:0x430260
  426d27:	mov    eax,esi
  426d29:	mov    ecx,DWORD PTR [esp+0xc]
  426d2d:	mov    DWORD PTR fs:0x0,ecx
  426d34:	pop    ecx
  426d35:	pop    esi
  426d36:	add    esp,0x10
  426d39:	ret    0xc
  426d3c:	int3   
  426d3d:	int3   
  426d3e:	int3   
  426d3f:	int3   
  426d40:	push   0xffffffff
  426d42:	push   0x42a573
  426d47:	mov    eax,fs:0x0
  426d4d:	push   eax
  426d4e:	push   ecx
  426d4f:	push   esi
  426d50:	mov    eax,ds:0x43e020
  426d55:	xor    eax,esp
  426d57:	push   eax
  426d58:	lea    eax,[esp+0xc]
  426d5c:	mov    fs:0x0,eax
  426d62:	mov    esi,ecx
  426d64:	mov    DWORD PTR [esp+0x8],esi
  426d68:	call   DWORD PTR ds:0x430254
  426d6e:	lea    ecx,[esi+0x1c]
  426d71:	mov    DWORD PTR [esp+0x14],0x0
  426d79:	call   DWORD PTR ds:0x430254
  426d7f:	lea    ecx,[esi+0x38]
  426d82:	mov    BYTE PTR [esp+0x14],0x1
  426d87:	call   DWORD PTR ds:0x430260
  426d8d:	mov    eax,esi
  426d8f:	mov    ecx,DWORD PTR [esp+0xc]
  426d93:	mov    DWORD PTR fs:0x0,ecx
  426d9a:	pop    ecx
  426d9b:	pop    esi
  426d9c:	add    esp,0x10
  426d9f:	ret    
  426da0:	mov    eax,DWORD PTR [esp+0x4]
  426da4:	cmp    DWORD PTR [eax+0x18],0x8
  426da8:	jb     0x426dbb
  426daa:	mov    eax,DWORD PTR [eax+0x4]
  426dad:	push   eax
  426dae:	call   DWORD PTR ds:0x430054
  426db4:	neg    eax
  426db6:	sbb    eax,eax
  426db8:	neg    eax
  426dba:	ret    
  426dbb:	add    eax,0x4
  426dbe:	push   eax
  426dbf:	call   DWORD PTR ds:0x430054
  426dc5:	neg    eax
  426dc7:	sbb    eax,eax
  426dc9:	neg    eax
  426dcb:	ret    
  426dcc:	int3   
  426dcd:	int3   
  426dce:	int3   
  426dcf:	int3   
  426dd0:	mov    eax,DWORD PTR [ecx]
  426dd2:	cmp    eax,0xffffffff
  426dd5:	je     0x426dde
  426dd7:	push   eax
  426dd8:	call   DWORD PTR ds:0x4300f4
  426dde:	ret    
  426ddf:	int3   
  426de0:	mov    eax,DWORD PTR [esp+0x4]
  426de4:	mov    ecx,DWORD PTR [esp+0x8]
  426de8:	push   eax
  426de9:	call   DWORD PTR ds:0x43017c
  426def:	ret    
  426df0:	push   0xffffffff
  426df2:	push   0x42a52c
  426df7:	mov    eax,fs:0x0
  426dfd:	push   eax
  426dfe:	sub    esp,0x27c
  426e04:	mov    eax,ds:0x43e020
  426e09:	xor    eax,esp
  426e0b:	mov    DWORD PTR [esp+0x278],eax
  426e12:	push   ebx
  426e13:	push   ebp
  426e14:	push   esi
  426e15:	push   edi
  426e16:	mov    eax,ds:0x43e020
  426e1b:	xor    eax,esp
  426e1d:	push   eax
  426e1e:	lea    eax,[esp+0x290]
  426e25:	mov    fs:0x0,eax
  426e2b:	mov    ecx,DWORD PTR [esp+0x2ac]
  426e32:	mov    eax,DWORD PTR [esp+0x2a8]
  426e39:	mov    esi,DWORD PTR [esp+0x2b0]
  426e40:	mov    edi,DWORD PTR [esp+0x2b4]
  426e47:	mov    ebx,DWORD PTR [esp+0x2a0]
  426e4e:	mov    ebp,DWORD PTR [esp+0x2a4]
  426e55:	mov    DWORD PTR [esp+0x1c],ecx
  426e59:	push   eax
  426e5a:	lea    ecx,[esp+0x24]
  426e5e:	mov    DWORD PTR [esp+0x18],esi
  426e62:	mov    DWORD PTR [esp+0x1c],edi
  426e66:	call   DWORD PTR ds:0x430118
  426e6c:	mov    eax,DWORD PTR [esp+0x34]
  426e70:	mov    DWORD PTR [esp+0x298],0x0
  426e7b:	test   eax,eax
  426e7d:	je     0x426f05
  426e83:	mov    edi,DWORD PTR ds:0x430390
  426e89:	lea    esi,[eax-0x1]
  426e8c:	cmp    esi,eax
  426e8e:	jbe    0x426e96
  426e90:	call   edi
  426e92:	mov    eax,DWORD PTR [esp+0x34]
  426e96:	cmp    DWORD PTR [esp+0x38],0x8
  426e9b:	mov    ecx,DWORD PTR [esp+0x24]
  426e9f:	jae    0x426ea5
  426ea1:	lea    ecx,[esp+0x24]
  426ea5:	cmp    WORD PTR [ecx+esi*2],0x5c
  426eaa:	je     0x426eee
  426eac:	lea    esi,[eax-0x1]
  426eaf:	cmp    esi,eax
  426eb1:	jbe    0x426eb9
  426eb3:	call   edi
  426eb5:	mov    eax,DWORD PTR [esp+0x34]
  426eb9:	cmp    DWORD PTR [esp+0x38],0x8
  426ebe:	mov    ecx,DWORD PTR [esp+0x24]
  426ec2:	jae    0x426ec8
  426ec4:	lea    ecx,[esp+0x24]
  426ec8:	cmp    WORD PTR [ecx+esi*2],0x2f
  426ecd:	je     0x426eee
  426ecf:	lea    esi,[eax-0x1]
  426ed2:	cmp    esi,eax
  426ed4:	jbe    0x426ed8
  426ed6:	call   edi
  426ed8:	cmp    DWORD PTR [esp+0x38],0x8
  426edd:	mov    eax,DWORD PTR [esp+0x24]
  426ee1:	jae    0x426ee7
  426ee3:	lea    eax,[esp+0x24]
  426ee7:	cmp    WORD PTR [eax+esi*2],0x3a
  426eec:	jne    0x426efd
  426eee:	mov    esi,DWORD PTR [esp+0x14]
  426ef2:	mov    edi,DWORD PTR [esp+0x18]
  426ef6:	mov    eax,0x430628
  426efb:	jmp    0x426f0a
  426efd:	mov    esi,DWORD PTR [esp+0x14]
  426f01:	mov    edi,DWORD PTR [esp+0x18]
  426f05:	mov    eax,0x430620
  426f0a:	push   eax
  426f0b:	lea    ecx,[esp+0x24]
  426f0f:	call   DWORD PTR ds:0x430140
  426f15:	cmp    DWORD PTR [esp+0x38],0x8
  426f1a:	mov    eax,DWORD PTR [esp+0x24]
  426f1e:	jae    0x426f24
  426f20:	lea    eax,[esp+0x24]
  426f24:	lea    edx,[esp+0x3c]
  426f28:	push   edx
  426f29:	push   eax
  426f2a:	call   DWORD PTR ds:0x43009c
  426f30:	mov    DWORD PTR [ebp+0x0],eax
  426f33:	cmp    eax,0xffffffff
  426f36:	jne    0x426f6b
  426f38:	mov    esi,DWORD PTR ds:0x43004c
  426f3e:	mov    DWORD PTR [ebp+0x0],0x0
  426f45:	call   esi
  426f47:	cmp    eax,0x2
  426f4a:	je     0x426f60
  426f4c:	call   esi
  426f4e:	cmp    eax,0x12
  426f51:	je     0x426f60
  426f53:	call   esi
  426f55:	mov    esi,eax
  426f57:	call   0x4296a0
  426f5c:	mov    DWORD PTR [ebx],esi
  426f5e:	jmp    0x426fbc
  426f60:	xor    esi,esi
  426f62:	call   0x4296a0
  426f67:	mov    DWORD PTR [ebx],esi
  426f69:	jmp    0x426fbc
  426f6b:	mov    ecx,DWORD PTR [esp+0x1c]
  426f6f:	lea    eax,[esp+0x68]
  426f73:	push   eax
  426f74:	call   DWORD PTR ds:0x4301c0
  426f7a:	mov    eax,DWORD PTR [esp+0x3c]
  426f7e:	test   eax,0x400
  426f83:	je     0x426f93
  426f85:	mov    DWORD PTR [esi],0x0
  426f8b:	mov    DWORD PTR [edi],0x0
  426f91:	jmp    0x426fb1
  426f93:	test   al,0x10
  426f95:	je     0x426fa5
  426f97:	mov    DWORD PTR [esi],0x3
  426f9d:	mov    DWORD PTR [edi],0x3
  426fa3:	jmp    0x426fb1
  426fa5:	mov    DWORD PTR [esi],0x2
  426fab:	mov    DWORD PTR [edi],0x2
  426fb1:	mov    DWORD PTR [ebx],0x0
  426fb7:	call   0x4296a0
  426fbc:	lea    ecx,[esp+0x20]
  426fc0:	mov    DWORD PTR [esp+0x298],0xffffffff
  426fcb:	mov    DWORD PTR [ebx+0x4],eax
  426fce:	call   DWORD PTR ds:0x430264
  426fd4:	mov    eax,ebx
  426fd6:	mov    ecx,DWORD PTR [esp+0x290]
  426fdd:	mov    DWORD PTR fs:0x0,ecx
  426fe4:	pop    ecx
  426fe5:	pop    edi
  426fe6:	pop    esi
  426fe7:	pop    ebp
  426fe8:	pop    ebx
  426fe9:	mov    ecx,DWORD PTR [esp+0x278]
  426ff0:	xor    ecx,esp
  426ff2:	call   0x42503a
  426ff7:	add    esp,0x288
  426ffd:	ret    
  426ffe:	int3   
  426fff:	int3   
  427000:	push   esi
  427001:	mov    esi,DWORD PTR [esp+0xc]
  427005:	mov    eax,DWORD PTR [esi]
  427007:	test   eax,eax
  427009:	je     0x427018
  42700b:	push   eax
  42700c:	call   DWORD PTR ds:0x4300a0
  427012:	mov    DWORD PTR [esi],0x0
  427018:	mov    eax,DWORD PTR [esp+0x8]
  42701c:	mov    ecx,DWORD PTR ds:0x43fdd0
  427022:	mov    edx,DWORD PTR ds:0x43fdd4
  427028:	mov    DWORD PTR [eax],ecx
  42702a:	mov    DWORD PTR [eax+0x4],edx
  42702d:	pop    esi
  42702e:	ret    
  42702f:	int3   
  427030:	xor    eax,eax
  427032:	ret    0x4
  427035:	int3   
  427036:	int3   
  427037:	int3   
  427038:	int3   
  427039:	int3   
  42703a:	int3   
  42703b:	int3   
  42703c:	int3   
  42703d:	int3   
  42703e:	int3   
  42703f:	int3   
  427040:	push   0xffffffff
  427042:	push   0x42a573
  427047:	mov    eax,fs:0x0
  42704d:	push   eax
  42704e:	push   ecx
  42704f:	push   esi
  427050:	mov    eax,ds:0x43e020
  427055:	xor    eax,esp
  427057:	push   eax
  427058:	lea    eax,[esp+0xc]
  42705c:	mov    fs:0x0,eax
  427062:	mov    esi,ecx
  427064:	mov    DWORD PTR [esp+0x8],esi
  427068:	lea    ecx,[esi+0x38]
  42706b:	mov    DWORD PTR [esp+0x14],0x1
  427073:	call   DWORD PTR ds:0x43025c
  427079:	lea    ecx,[esi+0x1c]
  42707c:	mov    BYTE PTR [esp+0x14],0x0
  427081:	call   DWORD PTR ds:0x430264
  427087:	mov    ecx,esi
  427089:	mov    DWORD PTR [esp+0x14],0xffffffff
  427091:	call   DWORD PTR ds:0x430264
  427097:	mov    ecx,DWORD PTR [esp+0xc]
  42709b:	mov    DWORD PTR fs:0x0,ecx
  4270a2:	pop    ecx
  4270a3:	pop    esi
  4270a4:	add    esp,0x10
  4270a7:	ret    
  4270a8:	int3   
  4270a9:	int3   
  4270aa:	int3   
  4270ab:	int3   
  4270ac:	int3   
  4270ad:	int3   
  4270ae:	int3   
  4270af:	int3   
  4270b0:	push   esi
  4270b1:	mov    esi,DWORD PTR [ecx+0x4]
  4270b4:	test   esi,esi
  4270b6:	je     0x4270e3
  4270b8:	lea    eax,[esi+0x4]
  4270bb:	or     ecx,0xffffffff
  4270be:	lock xadd DWORD PTR [eax],ecx
  4270c2:	jne    0x4270e3
  4270c4:	mov    edx,DWORD PTR [esi]
  4270c6:	mov    eax,DWORD PTR [edx+0x4]
  4270c9:	mov    ecx,esi
  4270cb:	call   eax
  4270cd:	lea    ecx,[esi+0x8]
  4270d0:	or     edx,0xffffffff
  4270d3:	lock xadd DWORD PTR [ecx],edx
  4270d7:	jne    0x4270e3
  4270d9:	mov    eax,DWORD PTR [esi]
  4270db:	mov    edx,DWORD PTR [eax+0x8]
  4270de:	mov    ecx,esi
  4270e0:	pop    esi
  4270e1:	jmp    edx
  4270e3:	pop    esi
  4270e4:	ret    
  4270e5:	int3   
  4270e6:	int3   
  4270e7:	int3   
  4270e8:	int3   
  4270e9:	int3   
  4270ea:	int3   
  4270eb:	int3   
  4270ec:	int3   
  4270ed:	int3   
  4270ee:	int3   
  4270ef:	int3   
  4270f0:	sub    esp,0x258
  4270f6:	mov    eax,ds:0x43e020
  4270fb:	xor    eax,esp
  4270fd:	mov    DWORD PTR [esp+0x254],eax
  427104:	mov    eax,DWORD PTR [esp+0x264]
  42710b:	push   ebx
  42710c:	mov    ebx,DWORD PTR [esp+0x270]
  427113:	push   ebp
  427114:	mov    ebp,DWORD PTR [esp+0x264]
  42711b:	push   esi
  42711c:	mov    esi,DWORD PTR [esp+0x26c]
  427123:	mov    edx,DWORD PTR [esi]
  427125:	push   edi
  427126:	mov    edi,DWORD PTR [esp+0x278]
  42712d:	lea    ecx,[esp+0x14]
  427131:	push   ecx
  427132:	push   edx
  427133:	mov    DWORD PTR [esp+0x18],eax
  427137:	call   DWORD PTR ds:0x4300a4
  42713d:	test   eax,eax
  42713f:	jne    0x427171
  427141:	call   DWORD PTR ds:0x43004c
  427147:	mov    edi,eax
  427149:	mov    eax,DWORD PTR [esi]
  42714b:	test   eax,eax
  42714d:	je     0x42715c
  42714f:	push   eax
  427150:	call   DWORD PTR ds:0x4300a0
  427156:	mov    DWORD PTR [esi],0x0
  42715c:	call   0x4296a0
  427161:	mov    ecx,edi
  427163:	sub    ecx,0x12
  427166:	neg    ecx
  427168:	sbb    ecx,ecx
  42716a:	and    ecx,edi
  42716c:	mov    DWORD PTR [ebp+0x0],ecx
  42716f:	jmp    0x4271c3
  427171:	mov    ecx,DWORD PTR [esp+0x10]
  427175:	lea    edx,[esp+0x40]
  427179:	push   edx
  42717a:	call   DWORD PTR ds:0x4301c0
  427180:	mov    eax,DWORD PTR [esp+0x14]
  427184:	test   eax,0x400
  427189:	je     0x427199
  42718b:	mov    DWORD PTR [edi],0x0
  427191:	mov    DWORD PTR [ebx],0x0
  427197:	jmp    0x4271b7
  427199:	test   al,0x10
  42719b:	je     0x4271ab
  42719d:	mov    DWORD PTR [edi],0x3
  4271a3:	mov    DWORD PTR [ebx],0x3
  4271a9:	jmp    0x4271b7
  4271ab:	mov    DWORD PTR [edi],0x2
  4271b1:	mov    DWORD PTR [ebx],0x2
  4271b7:	mov    DWORD PTR [ebp+0x0],0x0
  4271be:	call   0x4296a0
  4271c3:	mov    ecx,DWORD PTR [esp+0x264]
  4271ca:	pop    edi
  4271cb:	mov    DWORD PTR [ebp+0x4],eax
  4271ce:	pop    esi
  4271cf:	mov    eax,ebp
  4271d1:	pop    ebp
  4271d2:	pop    ebx
  4271d3:	xor    ecx,esp
  4271d5:	call   0x42503a
  4271da:	add    esp,0x258
  4271e0:	ret    
  4271e1:	int3   
  4271e2:	int3   
  4271e3:	int3   
  4271e4:	int3   
  4271e5:	int3   
  4271e6:	int3   
  4271e7:	int3   
  4271e8:	int3   
  4271e9:	int3   
  4271ea:	int3   
  4271eb:	int3   
  4271ec:	int3   
  4271ed:	int3   
  4271ee:	int3   
  4271ef:	int3   
  4271f0:	test   BYTE PTR [esp+0x4],0x1
  4271f5:	push   esi
  4271f6:	mov    esi,ecx
  4271f8:	mov    DWORD PTR [esi],0x430610
  4271fe:	je     0x427209
  427200:	push   esi
  427201:	call   0x42504a
  427206:	add    esp,0x4
  427209:	mov    eax,esi
  42720b:	pop    esi
  42720c:	ret    0x4
  42720f:	int3   
  427210:	push   0xffffffff
  427212:	push   0x42a5a0
  427217:	mov    eax,fs:0x0
  42721d:	push   eax
  42721e:	sub    esp,0x8
  427221:	push   ebx
  427222:	push   esi
  427223:	push   edi
  427224:	mov    eax,ds:0x43e020
  427229:	xor    eax,esp
  42722b:	push   eax
  42722c:	lea    eax,[esp+0x18]
  427230:	mov    fs:0x0,eax
  427236:	mov    eax,DWORD PTR [esp+0x28]
  42723a:	cmp    DWORD PTR [eax+0x18],0x8
  42723e:	jb     0x427245
  427240:	mov    eax,DWORD PTR [eax+0x4]
  427243:	jmp    0x427248
  427245:	add    eax,0x4
  427248:	push   0x0
  42724a:	push   0x2200000
  42724f:	push   0x3
  427251:	push   0x0
  427253:	push   0x7
  427255:	push   0x8
  427257:	push   eax
  427258:	call   DWORD PTR ds:0x4300e4
  42725e:	mov    esi,eax
  427260:	mov    DWORD PTR [esp+0x28],esi
  427264:	mov    DWORD PTR [esp+0x20],0x0
  42726c:	cmp    esi,0xffffffff
  42726f:	je     0x4272c2
  427271:	push   0x4000
  427276:	call   0x425023
  42727b:	mov    edi,eax
  42727d:	add    esp,0x4
  427280:	mov    DWORD PTR [esp+0x10],edi
  427284:	push   0x0
  427286:	lea    eax,[esp+0x18]
  42728a:	push   eax
  42728b:	push   0x4000
  427290:	push   edi
  427291:	push   0x0
  427293:	push   0x0
  427295:	push   0x900a8
  42729a:	push   esi
  42729b:	mov    BYTE PTR [esp+0x40],0x1
  4272a0:	call   DWORD PTR ds:0x4300a8
  4272a6:	push   edi
  4272a7:	test   eax,eax
  4272a9:	jne    0x4272d7
  4272ab:	call   0x42517c
  4272b0:	add    esp,0x4
  4272b3:	push   esi
  4272b4:	mov    DWORD PTR [esp+0x24],0xffffffff
  4272bc:	call   DWORD PTR ds:0x4300f4
  4272c2:	xor    al,al
  4272c4:	mov    ecx,DWORD PTR [esp+0x18]
  4272c8:	mov    DWORD PTR fs:0x0,ecx
  4272cf:	pop    ecx
  4272d0:	pop    edi
  4272d1:	pop    esi
  4272d2:	pop    ebx
  4272d3:	add    esp,0x14
  4272d6:	ret    
  4272d7:	cmp    DWORD PTR [edi],0xa000000c
  4272dd:	sete   bl
  4272e0:	call   0x42517c
  4272e5:	add    esp,0x4
  4272e8:	push   esi
  4272e9:	mov    DWORD PTR [esp+0x24],0xffffffff
  4272f1:	call   DWORD PTR ds:0x4300f4
  4272f7:	mov    al,bl
  4272f9:	mov    ecx,DWORD PTR [esp+0x18]
  4272fd:	mov    DWORD PTR fs:0x0,ecx
  427304:	pop    ecx
  427305:	pop    edi
  427306:	pop    esi
  427307:	pop    ebx
  427308:	add    esp,0x14
  42730b:	ret    
  42730c:	int3   
  42730d:	int3   
  42730e:	int3   
  42730f:	int3   
  427310:	lea    eax,[esp-0x8]
  427314:	sub    esp,0x8
  427317:	cmp    eax,ecx
  427319:	je     0x427321
  42731b:	mov    DWORD PTR [ecx],0x0
  427321:	push   esi
  427322:	mov    esi,DWORD PTR [ecx+0x4]
  427325:	mov    DWORD PTR [ecx+0x4],0x0
  42732c:	test   esi,esi
  42732e:	je     0x42735e
  427330:	lea    ecx,[esi+0x4]
  427333:	or     edx,0xffffffff
  427336:	lock xadd DWORD PTR [ecx],edx
  42733a:	jne    0x42735e
  42733c:	mov    eax,DWORD PTR [esi]
  42733e:	mov    edx,DWORD PTR [eax+0x4]
  427341:	mov    ecx,esi
  427343:	call   edx
  427345:	lea    eax,[esi+0x8]
  427348:	or     ecx,0xffffffff
  42734b:	lock xadd DWORD PTR [eax],ecx
  42734f:	jne    0x42735e
  427351:	mov    edx,DWORD PTR [esi]
  427353:	mov    eax,DWORD PTR [edx+0x8]
  427356:	mov    ecx,esi
  427358:	pop    esi
  427359:	add    esp,0x8
  42735c:	jmp    eax
  42735e:	pop    esi
  42735f:	add    esp,0x8
  427362:	ret    
  427363:	int3   
  427364:	int3   
  427365:	int3   
  427366:	int3   
  427367:	int3   
  427368:	int3   
  427369:	int3   
  42736a:	int3   
  42736b:	int3   
  42736c:	int3   
  42736d:	int3   
  42736e:	int3   
  42736f:	int3   
  427370:	push   esi
  427371:	mov    esi,DWORD PTR [esp+0x8]
  427375:	test   esi,esi
  427377:	je     0x427389
  427379:	mov    ecx,esi
  42737b:	call   0x427040
  427380:	push   esi
  427381:	call   0x42504a
  427386:	add    esp,0x4
  427389:	pop    esi
  42738a:	ret    
  42738b:	int3   
  42738c:	int3   
  42738d:	int3   
  42738e:	int3   
  42738f:	int3   
  427390:	push   ebp
  427391:	mov    ebp,esp
  427393:	push   0xffffffff
  427395:	push   0x42a5c0
  42739a:	mov    eax,fs:0x0
  4273a0:	push   eax
  4273a1:	push   ecx
  4273a2:	push   ebx
  4273a3:	push   esi
  4273a4:	push   edi
  4273a5:	mov    eax,ds:0x43e020
  4273aa:	xor    eax,ebp
  4273ac:	push   eax
  4273ad:	lea    eax,[ebp-0xc]
  4273b0:	mov    fs:0x0,eax
  4273b6:	mov    DWORD PTR [ebp-0x10],esp
  4273b9:	mov    esi,ecx
  4273bb:	push   0x10
  4273bd:	mov    DWORD PTR [esi],0x0
  4273c3:	mov    DWORD PTR [ebp-0x4],0x0
  4273ca:	call   0x425050
  4273cf:	add    esp,0x4
  4273d2:	test   eax,eax
  4273d4:	je     0x4273ef
  4273d6:	mov    ecx,0x1
  4273db:	mov    DWORD PTR [eax+0x4],ecx
  4273de:	mov    DWORD PTR [eax+0x8],ecx
  4273e1:	mov    ecx,DWORD PTR [ebp+0x8]
  4273e4:	mov    DWORD PTR [eax],0x430644
  4273ea:	mov    DWORD PTR [eax+0xc],ecx
  4273ed:	jmp    0x4273f1
  4273ef:	xor    eax,eax
  4273f1:	mov    DWORD PTR [esi],eax
  4273f3:	mov    eax,esi
  4273f5:	mov    ecx,DWORD PTR [ebp-0xc]
  4273f8:	mov    DWORD PTR fs:0x0,ecx
  4273ff:	pop    ecx
  427400:	pop    edi
  427401:	pop    esi
  427402:	pop    ebx
  427403:	mov    esp,ebp
  427405:	pop    ebp
  427406:	ret    0x4
  427409:	mov    edx,DWORD PTR [ebp+0x8]
  42740c:	push   edx
  42740d:	call   0x427370
  427412:	add    esp,0x4
  427415:	push   0x0
  427417:	push   0x0
  427419:	call   0x429e76
  42741e:	int3   
  42741f:	int3   
  427420:	push   esi
  427421:	mov    esi,DWORD PTR [ecx+0xc]
  427424:	test   esi,esi
  427426:	je     0x427438
  427428:	mov    ecx,esi
  42742a:	call   0x427040
  42742f:	push   esi
  427430:	call   0x42504a
  427435:	add    esp,0x4
  427438:	pop    esi
  427439:	ret    
  42743a:	int3   
  42743b:	int3   
  42743c:	int3   
  42743d:	int3   
  42743e:	int3   
  42743f:	int3   
  427440:	push   0xffffffff
  427442:	push   0x42d979
  427447:	mov    eax,fs:0x0
  42744d:	push   eax
  42744e:	sub    esp,0x24
  427451:	mov    eax,ds:0x43e020
  427456:	xor    eax,esp
  427458:	mov    DWORD PTR [esp+0x20],eax
  42745c:	push   ebx
  42745d:	push   esi
  42745e:	push   edi
  42745f:	mov    eax,ds:0x43e020
  427464:	xor    eax,esp
  427466:	push   eax
  427467:	lea    eax,[esp+0x34]
  42746b:	mov    fs:0x0,eax
  427471:	mov    esi,DWORD PTR [esp+0x44]
  427475:	mov    edi,DWORD PTR [esp+0x48]
  427479:	mov    ebx,ecx
  42747b:	call   DWORD PTR ds:0x430280
  427481:	cmp    esi,edi
  427483:	je     0x4274e3
  427485:	push   0x0
  427487:	push   0x0
  427489:	lea    ecx,[esp+0x1c]
  42748d:	call   DWORD PTR ds:0x430250
  427493:	mov    eax,DWORD PTR [esp+0x10]
  427497:	push   eax
  427498:	push   edi
  427499:	push   esi
  42749a:	lea    ecx,[esp+0x20]
  42749e:	call   0x407f80
  4274a3:	mov    ecx,DWORD PTR [esp+0x2c]
  4274a7:	mov    eax,DWORD PTR [esp+0x18]
  4274ab:	mov    DWORD PTR [esp+0x3c],0x0
  4274b3:	mov    edx,eax
  4274b5:	cmp    ecx,0x8
  4274b8:	jae    0x4274c0
  4274ba:	lea    edx,[esp+0x18]
  4274be:	mov    eax,edx
  4274c0:	mov    ecx,DWORD PTR [esp+0x28]
  4274c4:	lea    edx,[edx+ecx*2]
  4274c7:	push   edx
  4274c8:	push   eax
  4274c9:	mov    ecx,ebx
  4274cb:	call   DWORD PTR ds:0x43027c
  4274d1:	lea    ecx,[esp+0x14]
  4274d5:	mov    DWORD PTR [esp+0x3c],0xffffffff
  4274dd:	call   DWORD PTR ds:0x430264
  4274e3:	mov    eax,ebx
  4274e5:	mov    ecx,DWORD PTR [esp+0x34]
  4274e9:	mov    DWORD PTR fs:0x0,ecx
  4274f0:	pop    ecx
  4274f1:	pop    edi
  4274f2:	pop    esi
  4274f3:	pop    ebx
  4274f4:	mov    ecx,DWORD PTR [esp+0x20]
  4274f8:	xor    ecx,esp
  4274fa:	call   0x42503a
  4274ff:	add    esp,0x30
  427502:	ret    0xc
  427505:	int3   
  427506:	int3   
  427507:	int3   
  427508:	int3   
  427509:	int3   
  42750a:	int3   
  42750b:	int3   
  42750c:	int3   
  42750d:	int3   
  42750e:	int3   
  42750f:	int3   
  427510:	sub    esp,0x8
  427513:	push   esi
  427514:	mov    esi,DWORD PTR [esp+0x10]
  427518:	push   edi
  427519:	mov    edi,ecx
  42751b:	push   esi
  42751c:	lea    ecx,[esp+0x10]
  427520:	mov    DWORD PTR [esp+0xc],esi
  427524:	call   0x427390
  427529:	push   esi
  42752a:	lea    eax,[esp+0xc]
  42752e:	push   esi
  42752f:	push   eax
  427530:	call   0x4029a0
  427535:	lea    ecx,[esp+0x14]
  427539:	add    esp,0xc
  42753c:	cmp    ecx,edi
  42753e:	je     0x42754c
  427540:	mov    eax,DWORD PTR [esp+0x8]
  427544:	mov    edx,DWORD PTR [edi]
  427546:	mov    DWORD PTR [esp+0x8],edx
  42754a:	mov    DWORD PTR [edi],eax
  42754c:	mov    esi,DWORD PTR [edi+0x4]
  42754f:	mov    eax,DWORD PTR [esp+0xc]
  427553:	mov    DWORD PTR [edi+0x4],eax
  427556:	mov    DWORD PTR [esp+0xc],esi
  42755a:	test   esi,esi
  42755c:	je     0x427588
  42755e:	lea    ecx,[esi+0x4]
  427561:	or     edx,0xffffffff
  427564:	lock xadd DWORD PTR [ecx],edx
  427568:	jne    0x427588
  42756a:	mov    eax,DWORD PTR [esi]
  42756c:	mov    edx,DWORD PTR [eax+0x4]
  42756f:	mov    ecx,esi
  427571:	call   edx
  427573:	lea    eax,[esi+0x8]
  427576:	or     ecx,0xffffffff
  427579:	lock xadd DWORD PTR [eax],ecx
  42757d:	jne    0x427588
  42757f:	mov    edx,DWORD PTR [esi]
  427581:	mov    eax,DWORD PTR [edx+0x8]
  427584:	mov    ecx,esi
  427586:	call   eax
  427588:	pop    edi
  427589:	pop    esi
  42758a:	add    esp,0x8
  42758d:	ret    0x4
  427590:	push   esi
  427591:	push   edi
  427592:	mov    edi,ecx
  427594:	mov    DWORD PTR [edi],0x430658
  42759a:	mov    esi,DWORD PTR [edi+0x50]
  42759d:	test   esi,esi
  42759f:	je     0x4275cb
  4275a1:	lea    eax,[esi+0x4]
  4275a4:	or     ecx,0xffffffff
  4275a7:	lock xadd DWORD PTR [eax],ecx
  4275ab:	jne    0x4275cb
  4275ad:	mov    edx,DWORD PTR [esi]
  4275af:	mov    eax,DWORD PTR [edx+0x4]
  4275b2:	mov    ecx,esi
  4275b4:	call   eax
  4275b6:	lea    ecx,[esi+0x8]
  4275b9:	or     edx,0xffffffff
  4275bc:	lock xadd DWORD PTR [ecx],edx
  4275c0:	jne    0x4275cb
  4275c2:	mov    eax,DWORD PTR [esi]
  4275c4:	mov    edx,DWORD PTR [eax+0x8]
  4275c7:	mov    ecx,esi
  4275c9:	call   edx
  4275cb:	lea    ecx,[edi+0x30]
  4275ce:	mov    DWORD PTR [edi],0x43053c
  4275d4:	call   DWORD PTR ds:0x43025c
  4275da:	lea    ecx,[edi+0xc]
  4275dd:	mov    DWORD PTR [edi],0x430530
  4275e3:	call   DWORD PTR ds:0x43025c
  4275e9:	mov    ecx,edi
  4275eb:	pop    edi
  4275ec:	pop    esi
  4275ed:	jmp    DWORD PTR ds:0x4303a8
  4275f3:	int3   
  4275f4:	int3   
  4275f5:	int3   
  4275f6:	int3   
  4275f7:	int3   
  4275f8:	int3   
  4275f9:	int3   
  4275fa:	int3   
  4275fb:	int3   
  4275fc:	int3   
  4275fd:	int3   
  4275fe:	int3   
  4275ff:	int3   
  427600:	push   ebp
  427601:	mov    ebp,esp
  427603:	push   0xffffffff
  427605:	push   0x42a5f2
  42760a:	mov    eax,fs:0x0
  427610:	push   eax
  427611:	sub    esp,0x40
  427614:	push   ebx
  427615:	push   esi
  427616:	push   edi
  427617:	mov    eax,ds:0x43e020
  42761c:	xor    eax,ebp
  42761e:	push   eax
  42761f:	lea    eax,[ebp-0xc]
  427622:	mov    fs:0x0,eax
  427628:	mov    DWORD PTR [ebp-0x10],esp
  42762b:	mov    esi,ecx
  42762d:	mov    DWORD PTR [ebp-0x14],esi
  427630:	mov    edi,DWORD PTR [esi+0x4c]
  427633:	xor    ebx,ebx
  427635:	cmp    edi,ebx
  427637:	jne    0x427650
  427639:	call   0x425b20
  42763e:	mov    ecx,DWORD PTR [ebp-0xc]
  427641:	mov    DWORD PTR fs:0x0,ecx
  427648:	pop    ecx
  427649:	pop    edi
  42764a:	pop    esi
  42764b:	pop    ebx
  42764c:	mov    esp,ebp
  42764e:	pop    ebp
  42764f:	ret    
  427650:	mov    DWORD PTR [ebp-0x4],ebx
  427653:	cmp    DWORD PTR [edi+0x4c],ebx
  427656:	jne    0x427710
  42765c:	mov    ecx,esi
  42765e:	call   0x425b20
  427663:	push   eax
  427664:	lea    ecx,[edi+0x38]
  427667:	call   DWORD PTR ds:0x430178
  42766d:	mov    eax,DWORD PTR [esi+0x4c]
  427670:	cmp    DWORD PTR [eax+0x14],ebx
  427673:	je     0x4276bd
  427675:	push   0x430668
  42767a:	lea    ecx,[eax+0x38]
  42767d:	call   DWORD PTR ds:0x4301e4
  427683:	mov    ecx,DWORD PTR [esi+0x4c]
  427686:	lea    eax,[ebp-0x30]
  427689:	push   eax
  42768a:	call   0x40cbe0
  42768f:	mov    ecx,DWORD PTR [esi+0x4c]
  427692:	push   eax
  427693:	add    ecx,0x38
  427696:	mov    BYTE PTR [ebp-0x4],0x1
  42769a:	call   DWORD PTR ds:0x43026c
  4276a0:	lea    ecx,[ebp-0x30]
  4276a3:	mov    BYTE PTR [ebp-0x4],bl
  4276a6:	call   DWORD PTR ds:0x43025c
  4276ac:	mov    eax,DWORD PTR [esi+0x4c]
  4276af:	push   0x430664
  4276b4:	lea    ecx,[eax+0x38]
  4276b7:	call   DWORD PTR ds:0x4301e4
  4276bd:	mov    eax,DWORD PTR [esi+0x4c]
  4276c0:	cmp    DWORD PTR [eax+0x30],ebx
  4276c3:	je     0x427710
  4276c5:	push   0x430660
  4276ca:	lea    ecx,[eax+0x38]
  4276cd:	call   DWORD PTR ds:0x4301e4
  4276d3:	mov    eax,DWORD PTR [esi+0x4c]
  4276d6:	lea    ecx,[ebp-0x4c]
  4276d9:	push   ecx
  4276da:	lea    ecx,[eax+0x1c]
  4276dd:	call   0x40cbe0
  4276e2:	mov    ecx,DWORD PTR [esi+0x4c]
  4276e5:	push   eax
  4276e6:	add    ecx,0x38
  4276e9:	mov    BYTE PTR [ebp-0x4],0x2
  4276ed:	call   DWORD PTR ds:0x43026c
  4276f3:	lea    ecx,[ebp-0x4c]
  4276f6:	mov    BYTE PTR [ebp-0x4],bl
  4276f9:	call   DWORD PTR ds:0x43025c
  4276ff:	mov    eax,DWORD PTR [esi+0x4c]
  427702:	push   0x430664
  427707:	lea    ecx,[eax+0x38]
  42770a:	call   DWORD PTR ds:0x4301e4
  427710:	mov    esi,DWORD PTR [esi+0x4c]
  427713:	add    esi,0x38
  427716:	cmp    DWORD PTR [esi+0x18],0x10
  42771a:	jb     0x427757
  42771c:	mov    eax,DWORD PTR [esi+0x4]
  42771f:	mov    ecx,DWORD PTR [ebp-0xc]
  427722:	mov    DWORD PTR fs:0x0,ecx
  427729:	pop    ecx
  42772a:	pop    edi
  42772b:	pop    esi
  42772c:	pop    ebx
  42772d:	mov    esp,ebp
  42772f:	pop    ebp
  427730:	ret    
  427731:	mov    ecx,DWORD PTR [ebp-0x14]
  427734:	call   0x425b20
  427739:	mov    DWORD PTR [ebp-0x14],eax
  42773c:	mov    eax,0x427742
  427741:	ret    
  427742:	mov    eax,DWORD PTR [ebp-0x14]
  427745:	mov    ecx,DWORD PTR [ebp-0xc]
  427748:	mov    DWORD PTR fs:0x0,ecx
  42774f:	pop    ecx
  427750:	pop    edi
  427751:	pop    esi
  427752:	pop    ebx
  427753:	mov    esp,ebp
  427755:	pop    ebp
  427756:	ret    
  427757:	lea    eax,[esi+0x4]
  42775a:	mov    ecx,DWORD PTR [ebp-0xc]
  42775d:	mov    DWORD PTR fs:0x0,ecx
  427764:	pop    ecx
  427765:	pop    edi
  427766:	pop    esi
  427767:	pop    ebx
  427768:	mov    esp,ebp
  42776a:	pop    ebp
  42776b:	ret    
  42776c:	int3   
  42776d:	int3   
  42776e:	int3   
  42776f:	int3   
  427770:	push   esi
  427771:	mov    esi,ecx
  427773:	call   0x427590
  427778:	test   BYTE PTR [esp+0x8],0x1
  42777d:	je     0x427788
  42777f:	push   esi
  427780:	call   0x42504a
  427785:	add    esp,0x4
  427788:	mov    eax,esi
  42778a:	pop    esi
  42778b:	ret    0x4
  42778e:	int3   
  42778f:	int3   
  427790:	push   ebp
  427791:	mov    ebp,esp
  427793:	push   0xffffffff
  427795:	push   0x42a62e
  42779a:	mov    eax,fs:0x0
  4277a0:	push   eax
  4277a1:	sub    esp,0x8
  4277a4:	push   ebx
  4277a5:	push   esi
  4277a6:	push   edi
  4277a7:	mov    eax,ds:0x43e020
  4277ac:	xor    eax,ebp
  4277ae:	push   eax
  4277af:	lea    eax,[ebp-0xc]
  4277b2:	mov    fs:0x0,eax
  4277b8:	mov    DWORD PTR [ebp-0x10],esp
  4277bb:	mov    edi,ecx
  4277bd:	mov    DWORD PTR [ebp-0x14],edi
  4277c0:	mov    eax,DWORD PTR [ebp+0x8]
  4277c3:	mov    ecx,DWORD PTR [ebp+0x14]
  4277c6:	mov    edx,DWORD PTR [ebp+0x10]
  4277c9:	push   eax
  4277ca:	push   ecx
  4277cb:	push   edx
  4277cc:	mov    ecx,edi
  4277ce:	call   0x426cd0
  4277d3:	xor    ebx,ebx
  4277d5:	lea    esi,[edi+0x4c]
  4277d8:	mov    DWORD PTR [edi],0x430658
  4277de:	mov    DWORD PTR [esi],ebx
  4277e0:	mov    DWORD PTR [ebp-0x4],ebx
  4277e3:	mov    DWORD PTR [esi+0x4],ebx
  4277e6:	push   0x54
  4277e8:	mov    BYTE PTR [ebp-0x4],0x2
  4277ec:	call   0x425050
  4277f1:	mov    ecx,eax
  4277f3:	add    esp,0x4
  4277f6:	mov    DWORD PTR [ebp+0x8],ecx
  4277f9:	mov    BYTE PTR [ebp-0x4],0x3
  4277fd:	cmp    ecx,ebx
  4277ff:	je     0x427808
  427801:	call   0x426d40
  427806:	jmp    0x42780a
  427808:	xor    eax,eax
  42780a:	push   eax
  42780b:	mov    ecx,esi
  42780d:	mov    BYTE PTR [ebp-0x4],0x2
  427811:	call   0x427510
  427816:	mov    eax,DWORD PTR [ebp+0xc]
  427819:	mov    ecx,DWORD PTR [esi]
  42781b:	push   eax
  42781c:	call   DWORD PTR ds:0x43017c
  427822:	jmp    0x427838
  427824:	mov    ecx,DWORD PTR [ebp-0x14]
  427827:	add    ecx,0x4c
  42782a:	call   0x427310
  42782f:	mov    eax,0x427835
  427834:	ret    
  427835:	mov    edi,DWORD PTR [ebp-0x14]
  427838:	mov    eax,edi
  42783a:	mov    ecx,DWORD PTR [ebp-0xc]
  42783d:	mov    DWORD PTR fs:0x0,ecx
  427844:	pop    ecx
  427845:	pop    edi
  427846:	pop    esi
  427847:	pop    ebx
  427848:	mov    esp,ebp
  42784a:	pop    ebp
  42784b:	ret    0x10
  42784e:	int3   
  42784f:	int3   
  427850:	push   ebp
  427851:	mov    ebp,esp
  427853:	push   0xffffffff
  427855:	push   0x42a66e
  42785a:	mov    eax,fs:0x0
  427860:	push   eax
  427861:	sub    esp,0x8
  427864:	push   ebx
  427865:	push   esi
  427866:	push   edi
  427867:	mov    eax,ds:0x43e020
  42786c:	xor    eax,ebp
  42786e:	push   eax
  42786f:	lea    eax,[ebp-0xc]
  427872:	mov    fs:0x0,eax
  427878:	mov    DWORD PTR [ebp-0x10],esp
  42787b:	mov    edi,ecx
  42787d:	mov    DWORD PTR [ebp-0x14],edi
  427880:	mov    eax,DWORD PTR [ebp+0x8]
  427883:	mov    ecx,DWORD PTR [ebp+0x18]
  427886:	mov    edx,DWORD PTR [ebp+0x14]
  427889:	push   eax
  42788a:	push   ecx
  42788b:	push   edx
  42788c:	mov    ecx,edi
  42788e:	call   0x426cd0
  427893:	xor    ebx,ebx
  427895:	lea    esi,[edi+0x4c]
  427898:	mov    DWORD PTR [edi],0x430658
  42789e:	mov    DWORD PTR [esi],ebx
  4278a0:	mov    DWORD PTR [ebp-0x4],ebx
  4278a3:	mov    DWORD PTR [esi+0x4],ebx
  4278a6:	push   0x54
  4278a8:	mov    BYTE PTR [ebp-0x4],0x2
  4278ac:	call   0x425050
  4278b1:	mov    ecx,eax
  4278b3:	add    esp,0x4
  4278b6:	mov    DWORD PTR [ebp+0x8],ecx
  4278b9:	mov    BYTE PTR [ebp-0x4],0x3
  4278bd:	cmp    ecx,ebx
  4278bf:	je     0x4278c8
  4278c1:	call   0x426d40
  4278c6:	jmp    0x4278ca
  4278c8:	xor    eax,eax
  4278ca:	push   eax
  4278cb:	mov    ecx,esi
  4278cd:	mov    BYTE PTR [ebp-0x4],0x2
  4278d1:	call   0x427510
  4278d6:	mov    eax,DWORD PTR [ebp+0xc]
  4278d9:	mov    ecx,DWORD PTR [esi]
  4278db:	push   eax
  4278dc:	call   DWORD PTR ds:0x43017c
  4278e2:	mov    esi,DWORD PTR [esi]
  4278e4:	mov    edx,DWORD PTR [ebp+0x10]
  4278e7:	lea    ecx,[esi+0x1c]
  4278ea:	push   edx
  4278eb:	call   DWORD PTR ds:0x43017c
  4278f1:	jmp    0x427907
  4278f3:	mov    ecx,DWORD PTR [ebp-0x14]
  4278f6:	add    ecx,0x4c
  4278f9:	call   0x427310
  4278fe:	mov    eax,0x427904
  427903:	ret    
  427904:	mov    edi,DWORD PTR [ebp-0x14]
  427907:	mov    eax,edi
  427909:	mov    ecx,DWORD PTR [ebp-0xc]
  42790c:	mov    DWORD PTR fs:0x0,ecx
  427913:	pop    ecx
  427914:	pop    edi
  427915:	pop    esi
  427916:	pop    ebx
  427917:	mov    esp,ebp
  427919:	pop    ebp
  42791a:	ret    0x14
  42791d:	int3   
  42791e:	int3   
  42791f:	int3   
  427920:	push   esi
  427921:	push   edi
  427922:	mov    edi,DWORD PTR [esp+0xc]
  427926:	push   edi
  427927:	mov    esi,ecx
  427929:	call   0x425e00
  42792e:	mov    DWORD PTR [esi],0x430658
  427934:	mov    eax,DWORD PTR [edi+0x4c]
  427937:	mov    DWORD PTR [esi+0x4c],eax
  42793a:	mov    eax,DWORD PTR [edi+0x50]
  42793d:	mov    DWORD PTR [esi+0x50],eax
  427940:	test   eax,eax
  427942:	je     0x427950
  427944:	add    eax,0x4
  427947:	mov    ecx,0x1
  42794c:	lock xadd DWORD PTR [eax],ecx
  427950:	pop    edi
  427951:	mov    eax,esi
  427953:	pop    esi
  427954:	ret    0x4
  427957:	int3   
  427958:	int3   
  427959:	int3   
  42795a:	int3   
  42795b:	int3   
  42795c:	int3   
  42795d:	int3   
  42795e:	int3   
  42795f:	int3   
  427960:	sub    esp,0x54
  427963:	push   ebx
  427964:	mov    bl,BYTE PTR [esp+0x5c]
  427968:	push   esi
  427969:	mov    esi,DWORD PTR [esp+0x68]
  42796d:	test   bl,bl
  42796f:	jne    0x42798b
  427971:	test   esi,esi
  427973:	je     0x4279d4
  427975:	mov    DWORD PTR [esi],0x0
  42797b:	call   0x4296a0
  427980:	mov    DWORD PTR [esi+0x4],eax
  427983:	pop    esi
  427984:	mov    al,bl
  427986:	pop    ebx
  427987:	add    esp,0x54
  42798a:	ret    
  42798b:	test   esi,esi
  42798d:	jne    0x4279c0
  42798f:	call   0x4296a0
  427994:	mov    esi,eax
  427996:	call   DWORD PTR ds:0x43004c
  42799c:	mov    ecx,DWORD PTR [esp+0x6c]
  4279a0:	push   esi
  4279a1:	push   eax
  4279a2:	mov    eax,DWORD PTR [esp+0x6c]
  4279a6:	push   eax
  4279a7:	push   ecx
  4279a8:	lea    ecx,[esp+0x18]
  4279ac:	call   0x427790
  4279b1:	push   0x4351ec
  4279b6:	lea    edx,[esp+0xc]
  4279ba:	push   edx
  4279bb:	call   0x429e76
  4279c0:	push   edi
  4279c1:	call   0x4296a0
  4279c6:	mov    edi,eax
  4279c8:	call   DWORD PTR ds:0x43004c
  4279ce:	mov    DWORD PTR [esi+0x4],edi
  4279d1:	mov    DWORD PTR [esi],eax
  4279d3:	pop    edi
  4279d4:	pop    esi
  4279d5:	mov    al,bl
  4279d7:	pop    ebx
  4279d8:	add    esp,0x54
  4279db:	ret    
  4279dc:	int3   
  4279dd:	int3   
  4279de:	int3   
  4279df:	int3   
  4279e0:	sub    esp,0x54
  4279e3:	push   ebx
  4279e4:	mov    bl,BYTE PTR [esp+0x5c]
  4279e8:	push   esi
  4279e9:	mov    esi,DWORD PTR [esp+0x6c]
  4279ed:	test   bl,bl
  4279ef:	jne    0x427a0b
  4279f1:	test   esi,esi
  4279f3:	je     0x427a59
  4279f5:	mov    DWORD PTR [esi],0x0
  4279fb:	call   0x4296a0
  427a00:	mov    DWORD PTR [esi+0x4],eax
  427a03:	pop    esi
  427a04:	mov    al,bl
  427a06:	pop    ebx
  427a07:	add    esp,0x54
  427a0a:	ret    
  427a0b:	test   esi,esi
  427a0d:	jne    0x427a45
  427a0f:	call   0x4296a0
  427a14:	mov    esi,eax
  427a16:	call   DWORD PTR ds:0x43004c
  427a1c:	mov    ecx,DWORD PTR [esp+0x64]
  427a20:	mov    edx,DWORD PTR [esp+0x70]
  427a24:	push   esi
  427a25:	push   eax
  427a26:	mov    eax,DWORD PTR [esp+0x70]
  427a2a:	push   eax
  427a2b:	push   ecx
  427a2c:	push   edx
  427a2d:	lea    ecx,[esp+0x1c]
  427a31:	call   0x427850
  427a36:	push   0x4351ec
  427a3b:	lea    eax,[esp+0xc]
  427a3f:	push   eax
  427a40:	call   0x429e76
  427a45:	push   edi
  427a46:	call   0x4296a0
  427a4b:	mov    edi,eax
  427a4d:	call   DWORD PTR ds:0x43004c
  427a53:	mov    DWORD PTR [esi+0x4],edi
  427a56:	mov    DWORD PTR [esi],eax
  427a58:	pop    edi
  427a59:	pop    esi
  427a5a:	mov    al,bl
  427a5c:	pop    ebx
  427a5d:	add    esp,0x54
  427a60:	ret    
  427a61:	int3   
  427a62:	int3   
  427a63:	int3   
  427a64:	int3   
  427a65:	int3   
  427a66:	int3   
  427a67:	int3   
  427a68:	int3   
  427a69:	int3   
  427a6a:	int3   
  427a6b:	int3   
  427a6c:	int3   
  427a6d:	int3   
  427a6e:	int3   
  427a6f:	int3   
  427a70:	sub    esp,0x54
  427a73:	push   ebx
  427a74:	mov    bl,BYTE PTR [esp+0x5c]
  427a78:	push   esi
  427a79:	test   bl,bl
  427a7b:	jne    0x427a9b
  427a7d:	mov    esi,DWORD PTR [esp+0x6c]
  427a81:	test   esi,esi
  427a83:	je     0x427ade
  427a85:	mov    DWORD PTR [esi],0x0
  427a8b:	call   0x4296a0
  427a90:	mov    DWORD PTR [esi+0x4],eax
  427a93:	pop    esi
  427a94:	mov    al,bl
  427a96:	pop    ebx
  427a97:	add    esp,0x54
  427a9a:	ret    
  427a9b:	mov    eax,DWORD PTR [esp+0x6c]
  427a9f:	test   eax,eax
  427aa1:	jne    0x427ad0
  427aa3:	mov    eax,DWORD PTR [esp+0x64]
  427aa7:	mov    ecx,DWORD PTR [eax+0x4]
  427aaa:	mov    edx,DWORD PTR [eax]
  427aac:	mov    eax,DWORD PTR [esp+0x68]
  427ab0:	push   ecx
  427ab1:	mov    ecx,DWORD PTR [esp+0x74]
  427ab5:	push   edx
  427ab6:	push   eax
  427ab7:	push   ecx
  427ab8:	lea    ecx,[esp+0x18]
  427abc:	call   0x427790
  427ac1:	push   0x4351ec
  427ac6:	lea    edx,[esp+0xc]
  427aca:	push   edx
  427acb:	call   0x429e76
  427ad0:	mov    ecx,DWORD PTR [esp+0x64]
  427ad4:	mov    edx,DWORD PTR [ecx]
  427ad6:	mov    DWORD PTR [eax],edx
  427ad8:	mov    ecx,DWORD PTR [ecx+0x4]
  427adb:	mov    DWORD PTR [eax+0x4],ecx
  427ade:	pop    esi
  427adf:	mov    al,bl
  427ae1:	pop    ebx
  427ae2:	add    esp,0x54
  427ae5:	ret    
  427ae6:	int3   
  427ae7:	int3   
  427ae8:	int3   
  427ae9:	int3   
  427aea:	int3   
  427aeb:	int3   
  427aec:	int3   
  427aed:	int3   
  427aee:	int3   
  427aef:	int3   
  427af0:	sub    esp,0x54
  427af3:	push   ebx
  427af4:	mov    bl,BYTE PTR [esp+0x5c]
  427af8:	push   esi
  427af9:	test   bl,bl
  427afb:	jne    0x427b1b
  427afd:	mov    esi,DWORD PTR [esp+0x70]
  427b01:	test   esi,esi
  427b03:	je     0x427b63
  427b05:	mov    DWORD PTR [esi],0x0
  427b0b:	call   0x4296a0
  427b10:	mov    DWORD PTR [esi+0x4],eax
  427b13:	pop    esi
  427b14:	mov    al,bl
  427b16:	pop    ebx
  427b17:	add    esp,0x54
  427b1a:	ret    
  427b1b:	mov    eax,DWORD PTR [esp+0x70]
  427b1f:	test   eax,eax
  427b21:	jne    0x427b55
  427b23:	mov    eax,DWORD PTR [esp+0x64]
  427b27:	mov    ecx,DWORD PTR [eax+0x4]
  427b2a:	mov    edx,DWORD PTR [eax]
  427b2c:	mov    eax,DWORD PTR [esp+0x6c]
  427b30:	push   ecx
  427b31:	mov    ecx,DWORD PTR [esp+0x6c]
  427b35:	push   edx
  427b36:	mov    edx,DWORD PTR [esp+0x7c]
  427b3a:	push   eax
  427b3b:	push   ecx
  427b3c:	push   edx
  427b3d:	lea    ecx,[esp+0x1c]
  427b41:	call   0x427850
  427b46:	push   0x4351ec
  427b4b:	lea    eax,[esp+0xc]
  427b4f:	push   eax
  427b50:	call   0x429e76
  427b55:	mov    ecx,DWORD PTR [esp+0x64]
  427b59:	mov    edx,DWORD PTR [ecx]
  427b5b:	mov    DWORD PTR [eax],edx
  427b5d:	mov    ecx,DWORD PTR [ecx+0x4]
  427b60:	mov    DWORD PTR [eax+0x4],ecx
  427b63:	pop    esi
  427b64:	mov    al,bl
  427b66:	pop    ebx
  427b67:	add    esp,0x54
  427b6a:	ret    
  427b6b:	int3   
  427b6c:	int3   
  427b6d:	int3   
  427b6e:	int3   
  427b6f:	int3   
  427b70:	push   0xffffffff
  427b72:	push   0x42a6a2
  427b77:	mov    eax,fs:0x0
  427b7d:	push   eax
  427b7e:	sub    esp,0x38
  427b81:	push   ebx
  427b82:	push   esi
  427b83:	mov    eax,ds:0x43e020
  427b88:	xor    eax,esp
  427b8a:	push   eax
  427b8b:	lea    eax,[esp+0x44]
  427b8f:	mov    fs:0x0,eax
  427b95:	mov    eax,DWORD PTR [esp+0x58]
  427b99:	cmp    eax,0x1
  427b9c:	jne    0x427bc8
  427b9e:	mov    esi,DWORD PTR [esp+0x5c]
  427ba2:	test   esi,esi
  427ba4:	je     0x427bb4
  427ba6:	mov    DWORD PTR [esi],0x0
  427bac:	call   0x4296a0
  427bb1:	mov    DWORD PTR [esi+0x4],eax
  427bb4:	xor    al,al
  427bb6:	mov    ecx,DWORD PTR [esp+0x44]
  427bba:	mov    DWORD PTR fs:0x0,ecx
  427bc1:	pop    ecx
  427bc2:	pop    esi
  427bc3:	pop    ebx
  427bc4:	add    esp,0x44
  427bc7:	ret    
  427bc8:	cmp    eax,0x3
  427bcb:	je     0x427c42
  427bcd:	cmp    eax,0xb
  427bd0:	je     0x427c42
  427bd2:	push   0x43066c
  427bd7:	lea    ecx,[esp+0x10]
  427bdb:	call   DWORD PTR ds:0x43011c
  427be1:	mov    ecx,DWORD PTR [esp+0x5c]
  427be5:	lea    eax,[esp+0xc]
  427be9:	push   eax
  427bea:	mov    eax,DWORD PTR [esp+0x58]
  427bee:	push   ecx
  427bef:	push   eax
  427bf0:	push   eax
  427bf1:	mov    DWORD PTR [esp+0x5c],0x1
  427bf9:	call   0x426da0
  427bfe:	add    esp,0x4
  427c01:	test   al,al
  427c03:	sete   dl
  427c06:	movzx  eax,dl
  427c09:	push   eax
  427c0a:	call   0x427960
  427c0f:	add    esp,0x10
  427c12:	lea    ecx,[esp+0xc]
  427c16:	mov    bl,al
  427c18:	mov    DWORD PTR [esp+0x4c],0xffffffff
  427c20:	call   DWORD PTR ds:0x43025c
  427c26:	test   bl,bl
  427c28:	je     0x427caf
  427c2e:	xor    al,al
  427c30:	mov    ecx,DWORD PTR [esp+0x44]
  427c34:	mov    DWORD PTR fs:0x0,ecx
  427c3b:	pop    ecx
  427c3c:	pop    esi
  427c3d:	pop    ebx
  427c3e:	add    esp,0x44
  427c41:	ret    
  427c42:	push   0x43066c
  427c47:	lea    ecx,[esp+0x2c]
  427c4b:	call   DWORD PTR ds:0x43011c
  427c51:	mov    esi,DWORD PTR [esp+0x54]
  427c55:	cmp    DWORD PTR [esi+0x18],0x8
  427c59:	mov    DWORD PTR [esp+0x4c],0x0
  427c61:	jb     0x427c68
  427c63:	mov    eax,DWORD PTR [esi+0x4]
  427c66:	jmp    0x427c6b
  427c68:	lea    eax,[esi+0x4]
  427c6b:	push   eax
  427c6c:	call   DWORD PTR ds:0x430098
  427c72:	mov    edx,DWORD PTR [esp+0x5c]
  427c76:	test   eax,eax
  427c78:	setne  al
  427c7b:	lea    ecx,[esp+0x28]
  427c7f:	push   ecx
  427c80:	test   al,al
  427c82:	sete   al
  427c85:	push   edx
  427c86:	movzx  ecx,al
  427c89:	push   esi
  427c8a:	push   ecx
  427c8b:	call   0x427960
  427c90:	add    esp,0x10
  427c93:	lea    ecx,[esp+0x28]
  427c97:	mov    bl,al
  427c99:	mov    DWORD PTR [esp+0x4c],0xffffffff
  427ca1:	call   DWORD PTR ds:0x43025c
  427ca7:	test   bl,bl
  427ca9:	jne    0x427bb4
  427caf:	mov    al,0x1
  427cb1:	mov    ecx,DWORD PTR [esp+0x44]
  427cb5:	mov    DWORD PTR fs:0x0,ecx
  427cbc:	pop    ecx
  427cbd:	pop    esi
  427cbe:	pop    ebx
  427cbf:	add    esp,0x44
  427cc2:	ret    
  427cc3:	int3   
  427cc4:	int3   
  427cc5:	int3   
  427cc6:	int3   
  427cc7:	int3   
  427cc8:	int3   
  427cc9:	int3   
  427cca:	int3   
  427ccb:	int3   
  427ccc:	int3   
  427ccd:	int3   
  427cce:	int3   
  427ccf:	int3   
  427cd0:	push   0xffffffff
  427cd2:	push   0x42a6c9
  427cd7:	mov    eax,fs:0x0
  427cdd:	push   eax
  427cde:	sub    esp,0x70
  427ce1:	push   esi
  427ce2:	push   edi
  427ce3:	mov    eax,ds:0x43e020
  427ce8:	xor    eax,esp
  427cea:	push   eax
  427ceb:	lea    eax,[esp+0x7c]
  427cef:	mov    fs:0x0,eax
  427cf5:	call   DWORD PTR ds:0x43004c
  427cfb:	mov    edi,DWORD PTR [esp+0x94]
  427d02:	mov    esi,eax
  427d04:	test   edi,edi
  427d06:	je     0x427d12
  427d08:	call   0x4296a0
  427d0d:	mov    DWORD PTR [edi],esi
  427d0f:	mov    DWORD PTR [edi+0x4],eax
  427d12:	cmp    esi,0x2
  427d15:	je     0x427d3d
  427d17:	cmp    esi,0x3
  427d1a:	je     0x427d3d
  427d1c:	cmp    esi,0x7b
  427d1f:	je     0x427d3d
  427d21:	cmp    esi,0xf
  427d24:	je     0x427d3d
  427d26:	cmp    esi,0x15
  427d29:	je     0x427d3d
  427d2b:	cmp    esi,0x57
  427d2e:	je     0x427d3d
  427d30:	cmp    esi,0xa1
  427d36:	je     0x427d3d
  427d38:	cmp    esi,0x35
  427d3b:	jne    0x427d5c
  427d3d:	mov    eax,DWORD PTR [esp+0x8c]
  427d44:	mov    DWORD PTR [eax],0x1
  427d4a:	mov    ecx,DWORD PTR [esp+0x7c]
  427d4e:	mov    DWORD PTR fs:0x0,ecx
  427d55:	pop    ecx
  427d56:	pop    edi
  427d57:	pop    esi
  427d58:	add    esp,0x7c
  427d5b:	ret    
  427d5c:	cmp    esi,0x20
  427d5f:	jne    0x427d80
  427d61:	mov    eax,DWORD PTR [esp+0x8c]
  427d68:	mov    DWORD PTR [eax],0xa
  427d6e:	mov    ecx,DWORD PTR [esp+0x7c]
  427d72:	mov    DWORD PTR fs:0x0,ecx
  427d79:	pop    ecx
  427d7a:	pop    edi
  427d7b:	pop    esi
  427d7c:	add    esp,0x7c
  427d7f:	ret    
  427d80:	test   edi,edi
  427d82:	jne    0x427dc6
  427d84:	push   0x430688
  427d89:	lea    ecx,[esp+0x10]
  427d8d:	call   DWORD PTR ds:0x43011c
  427d93:	mov    DWORD PTR [esp+0x84],edi
  427d9a:	call   0x4296a0
  427d9f:	push   eax
  427da0:	mov    eax,DWORD PTR [esp+0x94]
  427da7:	push   esi
  427da8:	push   eax
  427da9:	lea    ecx,[esp+0x18]
  427dad:	push   ecx
  427dae:	lea    ecx,[esp+0x38]
  427db2:	call   0x427790
  427db7:	push   0x4351ec
  427dbc:	lea    edx,[esp+0x2c]
  427dc0:	push   edx
  427dc1:	call   0x429e76
  427dc6:	mov    eax,DWORD PTR [esp+0x8c]
  427dcd:	mov    DWORD PTR [eax],0x0
  427dd3:	mov    ecx,DWORD PTR [esp+0x7c]
  427dd7:	mov    DWORD PTR fs:0x0,ecx
  427dde:	pop    ecx
  427ddf:	pop    edi
  427de0:	pop    esi
  427de1:	add    esp,0x7c
  427de4:	ret    
  427de5:	int3   
  427de6:	int3   
  427de7:	int3   
  427de8:	int3   
  427de9:	int3   
  427dea:	int3   
  427deb:	int3   
  427dec:	int3   
  427ded:	int3   
  427dee:	int3   
  427def:	int3   
  427df0:	push   ebx
  427df1:	mov    ebx,DWORD PTR [esp+0x8]
  427df5:	cmp    DWORD PTR [ebx+0x18],0x8
  427df9:	push   edi
  427dfa:	jb     0x427e01
  427dfc:	mov    eax,DWORD PTR [ebx+0x4]
  427dff:	jmp    0x427e04
  427e01:	lea    eax,[ebx+0x4]
  427e04:	push   eax
  427e05:	call   DWORD PTR ds:0x4300ac
  427e0b:	mov    edi,eax
  427e0d:	cmp    edi,0xffffffff
  427e10:	jne    0x427e2a
  427e12:	mov    eax,DWORD PTR [esp+0x10]
  427e16:	push   eax
  427e17:	lea    ecx,[esp+0x10]
  427e1b:	push   ebx
  427e1c:	push   ecx
  427e1d:	call   0x427cd0
  427e22:	mov    eax,DWORD PTR [eax]
  427e24:	add    esp,0xc
  427e27:	pop    edi
  427e28:	pop    ebx
  427e29:	ret    
  427e2a:	push   esi
  427e2b:	mov    esi,DWORD PTR [esp+0x14]
  427e2f:	test   esi,esi
  427e31:	je     0x427e41
  427e33:	mov    DWORD PTR [esi],0x0
  427e39:	call   0x4296a0
  427e3e:	mov    DWORD PTR [esi+0x4],eax
  427e41:	pop    esi
  427e42:	test   edi,0x400
  427e48:	je     0x427e74
  427e4a:	push   ebx
  427e4b:	call   0x427210
  427e50:	add    esp,0x4
  427e53:	test   al,al
  427e55:	je     0x427e6c
  427e57:	mov    edx,edi
  427e59:	and    dl,0x10
  427e5c:	movzx  eax,dl
  427e5f:	neg    eax
  427e61:	sbb    eax,eax
  427e63:	and    eax,0x7
  427e66:	pop    edi
  427e67:	add    eax,0x4
  427e6a:	pop    ebx
  427e6b:	ret    
  427e6c:	pop    edi
  427e6d:	mov    eax,0x9
  427e72:	pop    ebx
  427e73:	ret    
  427e74:	mov    eax,edi
  427e76:	and    eax,0x10
  427e79:	or     eax,0x20
  427e7c:	pop    edi
  427e7d:	shr    eax,0x4
  427e80:	pop    ebx
  427e81:	ret    
  427e82:	int3   
  427e83:	int3   
  427e84:	int3   
  427e85:	int3   
  427e86:	int3   
  427e87:	int3   
  427e88:	int3   
  427e89:	int3   
  427e8a:	int3   
  427e8b:	int3   
  427e8c:	int3   
  427e8d:	int3   
  427e8e:	int3   
  427e8f:	int3   
  427e90:	push   0xffffffff
  427e92:	push   0x42a6f9
  427e97:	mov    eax,fs:0x0
  427e9d:	push   eax
  427e9e:	sub    esp,0x1c
  427ea1:	push   esi
  427ea2:	push   edi
  427ea3:	mov    eax,ds:0x43e020
  427ea8:	xor    eax,esp
  427eaa:	push   eax
  427eab:	lea    eax,[esp+0x28]
  427eaf:	mov    fs:0x0,eax
  427eb5:	push   0x4306a4
  427eba:	lea    ecx,[esp+0x10]
  427ebe:	call   DWORD PTR ds:0x43011c
  427ec4:	mov    edx,DWORD PTR [esp+0x3c]
  427ec8:	mov    ecx,0x8
  427ecd:	mov    DWORD PTR [esp+0x30],0x0
  427ed5:	cmp    DWORD PTR [edx+0x18],ecx
  427ed8:	jb     0x427edf
  427eda:	mov    esi,DWORD PTR [edx+0x4]
  427edd:	jmp    0x427ee2
  427edf:	lea    esi,[edx+0x4]
  427ee2:	mov    eax,DWORD PTR [esp+0x38]
  427ee6:	cmp    DWORD PTR [eax+0x18],ecx
  427ee9:	jb     0x427ef0
  427eeb:	mov    ecx,DWORD PTR [eax+0x4]
  427eee:	jmp    0x427ef3
  427ef0:	lea    ecx,[eax+0x4]
  427ef3:	lea    edi,[esp+0xc]
  427ef7:	push   edi
  427ef8:	mov    edi,DWORD PTR [esp+0x44]
  427efc:	push   edi
  427efd:	push   edx
  427efe:	push   eax
  427eff:	push   0x0
  427f01:	push   esi
  427f02:	push   ecx
  427f03:	call   DWORD PTR ds:0x4300b0
  427f09:	test   eax,eax
  427f0b:	sete   al
  427f0e:	movzx  ecx,al
  427f11:	push   ecx
  427f12:	call   0x4279e0
  427f17:	add    esp,0x14
  427f1a:	lea    ecx,[esp+0xc]
  427f1e:	mov    DWORD PTR [esp+0x30],0xffffffff
  427f26:	call   DWORD PTR ds:0x43025c
  427f2c:	mov    ecx,DWORD PTR [esp+0x28]
  427f30:	mov    DWORD PTR fs:0x0,ecx
  427f37:	pop    ecx
  427f38:	pop    edi
  427f39:	pop    esi
  427f3a:	add    esp,0x28
  427f3d:	ret    
  427f3e:	int3   
  427f3f:	int3   
  427f40:	push   0xffffffff
  427f42:	push   0x42a6f9
  427f47:	mov    eax,fs:0x0
  427f4d:	push   eax
  427f4e:	sub    esp,0x1c
  427f51:	push   esi
  427f52:	push   edi
  427f53:	mov    eax,ds:0x43e020
  427f58:	xor    eax,esp
  427f5a:	push   eax
  427f5b:	lea    eax,[esp+0x28]
  427f5f:	mov    fs:0x0,eax
  427f65:	push   0x4306c8
  427f6a:	lea    ecx,[esp+0x10]
  427f6e:	call   DWORD PTR ds:0x43011c
  427f74:	mov    edx,DWORD PTR [esp+0x3c]
  427f78:	mov    ecx,0x8
  427f7d:	mov    DWORD PTR [esp+0x30],0x0
  427f85:	cmp    DWORD PTR [edx+0x18],ecx
  427f88:	jb     0x427f8f
  427f8a:	mov    esi,DWORD PTR [edx+0x4]
  427f8d:	jmp    0x427f92
  427f8f:	lea    esi,[edx+0x4]
  427f92:	mov    eax,DWORD PTR [esp+0x38]
  427f96:	cmp    DWORD PTR [eax+0x18],ecx
  427f99:	jb     0x427fa0
  427f9b:	mov    ecx,DWORD PTR [eax+0x4]
  427f9e:	jmp    0x427fa3
  427fa0:	lea    ecx,[eax+0x4]
  427fa3:	lea    edi,[esp+0xc]
  427fa7:	push   edi
  427fa8:	mov    edi,DWORD PTR [esp+0x48]
  427fac:	push   edi
  427fad:	push   edx
  427fae:	push   eax
  427faf:	xor    eax,eax
  427fb1:	cmp    DWORD PTR [esp+0x50],eax
  427fb5:	sete   al
  427fb8:	push   eax
  427fb9:	push   esi
  427fba:	push   ecx
  427fbb:	call   DWORD PTR ds:0x43005c
  427fc1:	test   eax,eax
  427fc3:	sete   cl
  427fc6:	movzx  edx,cl
  427fc9:	push   edx
  427fca:	call   0x4279e0
  427fcf:	add    esp,0x14
  427fd2:	lea    ecx,[esp+0xc]
  427fd6:	mov    DWORD PTR [esp+0x30],0xffffffff
  427fde:	call   DWORD PTR ds:0x43025c
  427fe4:	mov    ecx,DWORD PTR [esp+0x28]
  427fe8:	mov    DWORD PTR fs:0x0,ecx
  427fef:	pop    ecx
  427ff0:	pop    edi
  427ff1:	pop    esi
  427ff2:	add    esp,0x28
  427ff5:	ret    
  427ff6:	int3   
  427ff7:	int3   
  427ff8:	int3   
  427ff9:	int3   
  427ffa:	int3   
  427ffb:	int3   
  427ffc:	int3   
  427ffd:	int3   
  427ffe:	int3   
  427fff:	int3   
  428000:	push   0xffffffff
  428002:	push   0x42a732
  428007:	mov    eax,fs:0x0
  42800d:	push   eax
  42800e:	sub    esp,0x40
  428011:	push   ebx
  428012:	push   ebp
  428013:	push   esi
  428014:	push   edi
  428015:	mov    eax,ds:0x43e020
  42801a:	xor    eax,esp
  42801c:	push   eax
  42801d:	lea    eax,[esp+0x54]
  428021:	mov    fs:0x0,eax
  428027:	push   0x4306e8
  42802c:	lea    ecx,[esp+0x20]
  428030:	call   DWORD PTR ds:0x43011c
  428036:	mov    DWORD PTR [esp+0x5c],0x0
  42803e:	call   0x4296a0
  428043:	mov    ebp,DWORD PTR [esp+0x6c]
  428047:	cmp    DWORD PTR ds:0x43fe00,0x0
  42804e:	mov    edi,DWORD PTR [esp+0x68]
  428052:	mov    esi,DWORD PTR [esp+0x64]
  428056:	mov    DWORD PTR [esp+0x18],eax
  42805a:	lea    eax,[esp+0x1c]
  42805e:	push   eax
  42805f:	push   ebp
  428060:	push   edi
  428061:	sete   dl
  428064:	push   esi
  428065:	lea    ecx,[esp+0x24]
  428069:	movzx  eax,dl
  42806c:	push   ecx
  42806d:	push   eax
  42806e:	mov    DWORD PTR [esp+0x2c],0x32
  428076:	call   0x427af0
  42807b:	add    esp,0x18
  42807e:	lea    ecx,[esp+0x1c]
  428082:	mov    bl,al
  428084:	mov    DWORD PTR [esp+0x5c],0xffffffff
  42808c:	call   DWORD PTR ds:0x43025c
  428092:	test   bl,bl
  428094:	jne    0x428101
  428096:	push   0x4306e8
  42809b:	lea    ecx,[esp+0x3c]
  42809f:	call   DWORD PTR ds:0x43011c
  4280a5:	mov    eax,0x8
  4280aa:	mov    DWORD PTR [esp+0x5c],0x1
  4280b2:	cmp    DWORD PTR [esi+0x18],eax
  4280b5:	jb     0x4280bc
  4280b7:	mov    ecx,DWORD PTR [esi+0x4]
  4280ba:	jmp    0x4280bf
  4280bc:	lea    ecx,[esi+0x4]
  4280bf:	cmp    DWORD PTR [edi+0x18],eax
  4280c2:	jb     0x4280c9
  4280c4:	mov    eax,DWORD PTR [edi+0x4]
  4280c7:	jmp    0x4280cc
  4280c9:	lea    eax,[edi+0x4]
  4280cc:	lea    edx,[esp+0x38]
  4280d0:	push   edx
  4280d1:	push   ebp
  4280d2:	push   edi
  4280d3:	push   esi
  4280d4:	push   0x0
  4280d6:	push   ecx
  4280d7:	push   eax
  4280d8:	call   DWORD PTR ds:0x43fe00
  4280de:	test   al,al
  4280e0:	sete   al
  4280e3:	movzx  ecx,al
  4280e6:	push   ecx
  4280e7:	call   0x4279e0
  4280ec:	add    esp,0x14
  4280ef:	lea    ecx,[esp+0x38]
  4280f3:	mov    DWORD PTR [esp+0x5c],0xffffffff
  4280fb:	call   DWORD PTR ds:0x43025c
  428101:	mov    ecx,DWORD PTR [esp+0x54]
  428105:	mov    DWORD PTR fs:0x0,ecx
  42810c:	pop    ecx
  42810d:	pop    edi
  42810e:	pop    esi
  42810f:	pop    ebp
  428110:	pop    ebx
  428111:	add    esp,0x4c
  428114:	ret    
  428115:	int3   
  428116:	int3   
  428117:	int3   
  428118:	int3   
  428119:	int3   
  42811a:	int3   
  42811b:	int3   
  42811c:	int3   
  42811d:	int3   
  42811e:	int3   
  42811f:	int3   
  428120:	push   0xffffffff
  428122:	push   0x42a7ab
  428127:	mov    eax,fs:0x0
  42812d:	push   eax
  42812e:	mov    eax,0x4070
  428133:	call   0x429f70
  428138:	mov    eax,ds:0x43e020
  42813d:	xor    eax,esp
  42813f:	mov    DWORD PTR [esp+0x406c],eax
  428146:	push   ebx
  428147:	push   ebp
  428148:	push   esi
  428149:	push   edi
  42814a:	mov    eax,ds:0x43e020
  42814f:	xor    eax,esp
  428151:	push   eax
  428152:	lea    eax,[esp+0x4084]
  428159:	mov    fs:0x0,eax
  42815f:	mov    eax,DWORD PTR [esp+0x4094]
  428166:	mov    edi,DWORD PTR [esp+0x4098]
  42816d:	mov    ebp,DWORD PTR [esp+0x409c]
  428174:	lea    ecx,[esp+0x5c]
  428178:	mov    DWORD PTR [esp+0x14],eax
  42817c:	mov    DWORD PTR [esp+0x18],0x0
  428184:	call   DWORD PTR ds:0x430254
  42818a:	mov    esi,0x8
  42818f:	mov    DWORD PTR [esp+0x408c],0x1
  42819a:	cmp    DWORD PTR [edi+0x18],esi
  42819d:	jb     0x4281a4
  42819f:	mov    eax,DWORD PTR [edi+0x4]
  4281a2:	jmp    0x4281a7
  4281a4:	lea    eax,[edi+0x4]
  4281a7:	push   eax
  4281a8:	lea    ecx,[esp+0x44]
  4281ac:	call   DWORD PTR ds:0x430268
  4281b2:	mov    eax,DWORD PTR [esp+0x44]
  4281b6:	mov    BYTE PTR [esp+0x408c],0x2
  4281be:	cmp    DWORD PTR [esp+0x58],esi
  4281c2:	jae    0x4281c8
  4281c4:	lea    eax,[esp+0x44]
  4281c8:	push   0x0
  4281ca:	push   0x2200000
  4281cf:	push   0x3
  4281d1:	push   0x0
  4281d3:	push   0x0
  4281d5:	push   0x80000000
  4281da:	push   eax
  4281db:	call   DWORD PTR ds:0x4300e4
  4281e1:	mov    esi,eax
  4281e3:	mov    DWORD PTR [esp+0x20],esi
  4281e7:	lea    ecx,[esp+0x40]
  4281eb:	mov    BYTE PTR [esp+0x408c],0x4
  4281f3:	call   DWORD PTR ds:0x430264
  4281f9:	push   0x43070c
  4281fe:	lea    ecx,[esp+0x28]
  428202:	call   DWORD PTR ds:0x43011c
  428208:	lea    ecx,[esp+0x24]
  42820c:	push   ecx
  42820d:	cmp    esi,0xffffffff
  428210:	sete   dl
  428213:	push   ebp
  428214:	movzx  eax,dl
  428217:	push   edi
  428218:	push   eax
  428219:	mov    BYTE PTR [esp+0x409c],0x5
  428221:	call   0x427960
  428226:	add    esp,0x10
  428229:	lea    ecx,[esp+0x24]
  42822d:	mov    bl,al
  42822f:	mov    BYTE PTR [esp+0x408c],0x4
  428237:	call   DWORD PTR ds:0x43025c
  42823d:	test   bl,bl
  42823f:	je     0x428257
  428241:	mov    edi,DWORD PTR [esp+0x14]
  428245:	lea    ecx,[esp+0x5c]
  428249:	push   ecx
  42824a:	mov    ecx,edi
  42824c:	call   DWORD PTR ds:0x430118
  428252:	jmp    0x42830d
  428257:	push   0x43070c
  42825c:	lea    ecx,[esp+0x28]
  428260:	call   DWORD PTR ds:0x43011c
  428266:	lea    edx,[esp+0x24]
  42826a:	push   edx
  42826b:	push   ebp
  42826c:	push   edi
  42826d:	push   0x0
  42826f:	lea    eax,[esp+0x2c]
  428273:	push   eax
  428274:	push   0x4008
  428279:	lea    ecx,[esp+0x90]
  428280:	push   ecx
  428281:	push   0x0
  428283:	push   0x0
  428285:	push   0x900a8
  42828a:	push   esi
  42828b:	mov    BYTE PTR [esp+0x40b8],0x6
  428293:	call   DWORD PTR ds:0x4300a8
  428299:	test   eax,eax
  42829b:	sete   dl
  42829e:	movzx  eax,dl
  4282a1:	push   eax
  4282a2:	call   0x427960
  4282a7:	add    esp,0x10
  4282aa:	test   al,al
  4282ac:	lea    ecx,[esp+0x24]
  4282b0:	sete   bl
  4282b3:	mov    BYTE PTR [esp+0x408c],0x4
  4282bb:	call   DWORD PTR ds:0x43025c
  4282c1:	test   bl,bl
  4282c3:	je     0x4282fc
  4282c5:	movzx  eax,WORD PTR [esp+0x84]
  4282cd:	movzx  edi,WORD PTR [esp+0x86]
  4282d5:	shr    eax,1
  4282d7:	shr    edi,1
  4282d9:	add    edi,eax
  4282db:	lea    edi,[esp+edi*2+0x8c]
  4282e2:	lea    ebx,[esp+eax*2+0x8c]
  4282e9:	call   0x426930
  4282ee:	mov    eax,DWORD PTR [eax]
  4282f0:	push   eax
  4282f1:	push   edi
  4282f2:	push   ebx
  4282f3:	lea    ecx,[esp+0x68]
  4282f7:	call   0x427440
  4282fc:	mov    edi,DWORD PTR [esp+0x14]
  428300:	lea    ecx,[esp+0x5c]
  428304:	push   ecx
  428305:	mov    ecx,edi
  428307:	call   DWORD PTR ds:0x430118
  42830d:	mov    BYTE PTR [esp+0x408c],0x1
  428315:	mov    DWORD PTR [esp+0x18],0x1
  42831d:	cmp    esi,0xffffffff
  428320:	je     0x428329
  428322:	push   esi
  428323:	call   DWORD PTR ds:0x4300f4
  428329:	lea    ecx,[esp+0x5c]
  42832d:	mov    BYTE PTR [esp+0x408c],0x0
  428335:	call   DWORD PTR ds:0x430264
  42833b:	mov    eax,edi
  42833d:	mov    ecx,DWORD PTR [esp+0x4084]
  428344:	mov    DWORD PTR fs:0x0,ecx
  42834b:	pop    ecx
  42834c:	pop    edi
  42834d:	pop    esi
  42834e:	pop    ebp
  42834f:	pop    ebx
  428350:	mov    ecx,DWORD PTR [esp+0x406c]
  428357:	xor    ecx,esp
  428359:	call   0x42503a
  42835e:	add    esp,0x407c
  428364:	ret    
  428365:	int3   
  428366:	int3   
  428367:	int3   
  428368:	int3   
  428369:	int3   
  42836a:	int3   
  42836b:	int3   
  42836c:	int3   
  42836d:	int3   
  42836e:	int3   
  42836f:	int3   
  428370:	push   0xffffffff
  428372:	push   0x42a7f0
  428377:	mov    eax,fs:0x0
  42837d:	push   eax
  42837e:	sub    esp,0x1c
  428381:	push   ebx
  428382:	push   ebp
  428383:	push   esi
  428384:	push   edi
  428385:	mov    eax,ds:0x43e020
  42838a:	xor    eax,esp
  42838c:	push   eax
  42838d:	lea    eax,[esp+0x30]
  428391:	mov    fs:0x0,eax
  428397:	mov    edi,DWORD PTR [esp+0x44]
  42839b:	mov    ebp,0x8
  4283a0:	lea    esi,[edi+0x4]
  4283a3:	cmp    DWORD PTR [edi+0x18],ebp
  4283a6:	jb     0x4283ac
  4283a8:	mov    eax,DWORD PTR [esi]
  4283aa:	jmp    0x4283ae
  4283ac:	mov    eax,esi
  4283ae:	push   eax
  4283af:	call   DWORD PTR ds:0x4300ac
  4283b5:	mov    ebx,eax
  4283b7:	cmp    ebx,0xffffffff
  4283ba:	jne    0x4283e5
  4283bc:	mov    eax,DWORD PTR [esp+0x48]
  4283c0:	mov    esi,DWORD PTR [esp+0x40]
  4283c4:	push   eax
  4283c5:	push   edi
  4283c6:	push   esi
  4283c7:	call   0x427cd0
  4283cc:	add    esp,0xc
  4283cf:	mov    eax,esi
  4283d1:	mov    ecx,DWORD PTR [esp+0x30]
  4283d5:	mov    DWORD PTR fs:0x0,ecx
  4283dc:	pop    ecx
  4283dd:	pop    edi
  4283de:	pop    esi
  4283df:	pop    ebp
  4283e0:	pop    ebx
  4283e1:	add    esp,0x28
  4283e4:	ret    
  4283e5:	test   ebx,0x400
  4283eb:	je     0x4284b2
  4283f1:	cmp    DWORD PTR [edi+0x18],ebp
  4283f4:	jb     0x4283f8
  4283f6:	mov    esi,DWORD PTR [esi]
  4283f8:	push   esi
  4283f9:	lea    ecx,[esp+0x18]
  4283fd:	call   DWORD PTR ds:0x430268
  428403:	mov    eax,DWORD PTR [esp+0x18]
  428407:	mov    DWORD PTR [esp+0x38],0x0
  42840f:	cmp    DWORD PTR [esp+0x2c],ebp
  428413:	jae    0x428419
  428415:	lea    eax,[esp+0x18]
  428419:	push   0x0
  42841b:	push   0x2000000
  428420:	push   0x3
  428422:	push   0x0
  428424:	push   0x7
  428426:	push   0x0
  428428:	push   eax
  428429:	call   DWORD PTR ds:0x4300e4
  42842f:	mov    esi,eax
  428431:	mov    DWORD PTR [esp+0x44],esi
  428435:	lea    ecx,[esp+0x14]
  428439:	mov    BYTE PTR [esp+0x38],0x2
  42843e:	call   DWORD PTR ds:0x430264
  428444:	or     ebp,0xffffffff
  428447:	cmp    esi,ebp
  428449:	jne    0x428474
  42844b:	mov    ecx,DWORD PTR [esp+0x48]
  42844f:	mov    esi,DWORD PTR [esp+0x40]
  428453:	push   ecx
  428454:	push   edi
  428455:	push   esi
  428456:	call   0x427cd0
  42845b:	add    esp,0xc
  42845e:	mov    eax,esi
  428460:	mov    ecx,DWORD PTR [esp+0x30]
  428464:	mov    DWORD PTR fs:0x0,ecx
  42846b:	pop    ecx
  42846c:	pop    edi
  42846d:	pop    esi
  42846e:	pop    ebp
  42846f:	pop    ebx
  428470:	add    esp,0x28
  428473:	ret    
  428474:	push   edi
  428475:	call   0x427210
  42847a:	add    esp,0x4
  42847d:	mov    DWORD PTR [esp+0x38],ebp
  428481:	push   esi
  428482:	test   al,al
  428484:	jne    0x4284ac
  428486:	mov    edi,DWORD PTR [esp+0x44]
  42848a:	mov    DWORD PTR [edi],0x9
  428490:	call   DWORD PTR ds:0x4300f4
  428496:	mov    eax,edi
  428498:	mov    ecx,DWORD PTR [esp+0x30]
  42849c:	mov    DWORD PTR fs:0x0,ecx
  4284a3:	pop    ecx
  4284a4:	pop    edi
  4284a5:	pop    esi
  4284a6:	pop    ebp
  4284a7:	pop    ebx
  4284a8:	add    esp,0x28
  4284ab:	ret    
  4284ac:	call   DWORD PTR ds:0x4300f4
  4284b2:	mov    esi,DWORD PTR [esp+0x48]
  4284b6:	test   esi,esi
  4284b8:	je     0x4284c8
  4284ba:	mov    DWORD PTR [esi],0x0
  4284c0:	call   0x4296a0
  4284c5:	mov    DWORD PTR [esi+0x4],eax
  4284c8:	lea    eax,[esp+0x44]
  4284cc:	mov    DWORD PTR [esp+0x44],0x3
  4284d4:	test   bl,0x10
  4284d7:	jne    0x4284e1
  4284d9:	mov    DWORD PTR [esp+0x44],0x2
  4284e1:	mov    edx,DWORD PTR [eax]
  4284e3:	mov    eax,DWORD PTR [esp+0x40]
  4284e7:	mov    DWORD PTR [eax],edx
  4284e9:	mov    ecx,DWORD PTR [esp+0x30]
  4284ed:	mov    DWORD PTR fs:0x0,ecx
  4284f4:	pop    ecx
  4284f5:	pop    edi
  4284f6:	pop    esi
  4284f7:	pop    ebp
  4284f8:	pop    ebx
  4284f9:	add    esp,0x28
  4284fc:	ret    
  4284fd:	int3   
  4284fe:	int3   
  4284ff:	int3   
  428500:	push   ebx
  428501:	push   esi
  428502:	push   edi
  428503:	mov    edi,DWORD PTR [esp+0x14]
  428507:	cmp    DWORD PTR [edi+0x18],0x8
  42850b:	jb     0x428512
  42850d:	mov    eax,DWORD PTR [edi+0x4]
  428510:	jmp    0x428515
  428512:	lea    eax,[edi+0x4]
  428515:	push   eax
  428516:	call   DWORD PTR ds:0x4300ac
  42851c:	mov    ebx,eax
  42851e:	cmp    ebx,0xffffffff
  428521:	jne    0x42853c
  428523:	mov    eax,DWORD PTR [esp+0x18]
  428527:	mov    esi,DWORD PTR [esp+0x10]
  42852b:	push   eax
  42852c:	push   edi
  42852d:	push   esi
  42852e:	call   0x427cd0
  428533:	add    esp,0xc
  428536:	pop    edi
  428537:	mov    eax,esi
  428539:	pop    esi
  42853a:	pop    ebx
  42853b:	ret    
  42853c:	mov    esi,DWORD PTR [esp+0x18]
  428540:	test   esi,esi
  428542:	je     0x428552
  428544:	mov    DWORD PTR [esi],0x0
  42854a:	call   0x4296a0
  42854f:	mov    DWORD PTR [esi+0x4],eax
  428552:	test   ebx,0x400
  428558:	je     0x428587
  42855a:	push   edi
  42855b:	call   0x427210
  428560:	add    esp,0x4
  428563:	test   al,al
  428565:	lea    eax,[esp+0x14]
  428569:	mov    DWORD PTR [esp+0x14],0x4
  428571:	jne    0x42857b
  428573:	mov    DWORD PTR [esp+0x14],0x9
  42857b:	mov    ecx,DWORD PTR [eax]
  42857d:	mov    eax,DWORD PTR [esp+0x10]
  428581:	pop    edi
  428582:	pop    esi
  428583:	mov    DWORD PTR [eax],ecx
  428585:	pop    ebx
  428586:	ret    
  428587:	lea    eax,[esp+0x14]
  42858b:	mov    DWORD PTR [esp+0x14],0x3
  428593:	test   bl,0x10
  428596:	jne    0x4285a0
  428598:	mov    DWORD PTR [esp+0x14],0x2
  4285a0:	mov    edx,DWORD PTR [eax]
  4285a2:	mov    eax,DWORD PTR [esp+0x10]
  4285a6:	pop    edi
  4285a7:	pop    esi
  4285a8:	mov    DWORD PTR [eax],edx
  4285aa:	pop    ebx
  4285ab:	ret    
  4285ac:	int3   
  4285ad:	int3   
  4285ae:	int3   
  4285af:	int3   
  4285b0:	push   esi
  4285b1:	mov    esi,ecx
  4285b3:	mov    eax,DWORD PTR [esi+0x1c]
  4285b6:	push   edi
  4285b7:	test   eax,eax
  4285b9:	jne    0x4285ca
  4285bb:	mov    eax,DWORD PTR [esi+0x20]
  4285be:	test   eax,eax
  4285c0:	je     0x4285ee
  4285c2:	cmp    eax,0x4
  4285c5:	je     0x4285ee
  4285c7:	mov    DWORD PTR [esi+0x1c],eax
  4285ca:	mov    edi,DWORD PTR [esp+0x10]
  4285ce:	test   edi,edi
  4285d0:	je     0x4285e0
  4285d2:	mov    DWORD PTR [edi],0x0
  4285d8:	call   0x4296a0
  4285dd:	mov    DWORD PTR [edi+0x4],eax
  4285e0:	mov    ecx,DWORD PTR [esi+0x1c]
  4285e3:	mov    eax,DWORD PTR [esp+0xc]
  4285e7:	pop    edi
  4285e8:	mov    DWORD PTR [eax],ecx
  4285ea:	pop    esi
  4285eb:	ret    0x8
  4285ee:	mov    eax,DWORD PTR [esp+0x10]
  4285f2:	push   eax
  4285f3:	lea    ecx,[esp+0x14]
  4285f7:	push   esi
  4285f8:	push   ecx
  4285f9:	call   0x428370
  4285fe:	mov    edx,DWORD PTR [eax]
  428600:	mov    eax,DWORD PTR [esp+0x18]
  428604:	add    esp,0xc
  428607:	mov    ecx,edx
  428609:	pop    edi
  42860a:	mov    DWORD PTR [esi+0x1c],edx
  42860d:	mov    DWORD PTR [eax],ecx
  42860f:	pop    esi
  428610:	ret    0x8
  428613:	int3   
  428614:	int3   
  428615:	int3   
  428616:	int3   
  428617:	int3   
  428618:	int3   
  428619:	int3   
  42861a:	int3   
  42861b:	int3   
  42861c:	int3   
  42861d:	int3   
  42861e:	int3   
  42861f:	int3   
  428620:	push   esi
  428621:	mov    esi,ecx
  428623:	mov    eax,DWORD PTR [esi+0x20]
  428626:	test   eax,eax
  428628:	jne    0x42864e
  42862a:	mov    eax,DWORD PTR [esp+0xc]
  42862e:	push   eax
  42862f:	lea    ecx,[esp+0x10]
  428633:	push   esi
  428634:	push   ecx
  428635:	call   0x428500
  42863a:	mov    edx,DWORD PTR [eax]
  42863c:	mov    eax,DWORD PTR [esp+0x14]
  428640:	add    esp,0xc
  428643:	mov    ecx,edx
  428645:	mov    DWORD PTR [esi+0x20],edx
  428648:	mov    DWORD PTR [eax],ecx
  42864a:	pop    esi
  42864b:	ret    0x8
  42864e:	push   edi
  42864f:	mov    edi,DWORD PTR [esp+0x10]
  428653:	test   edi,edi
  428655:	je     0x428665
  428657:	mov    DWORD PTR [edi],0x0
  42865d:	call   0x4296a0
  428662:	mov    DWORD PTR [edi+0x4],eax
  428665:	mov    ecx,DWORD PTR [esi+0x20]
  428668:	mov    eax,DWORD PTR [esp+0xc]
  42866c:	pop    edi
  42866d:	mov    DWORD PTR [eax],ecx
  42866f:	pop    esi
  428670:	ret    0x8
  428673:	int3   
  428674:	int3   
  428675:	int3   
  428676:	int3   
  428677:	int3   
  428678:	int3   
  428679:	int3   
  42867a:	int3   
  42867b:	int3   
  42867c:	int3   
  42867d:	int3   
  42867e:	int3   
  42867f:	int3   
  428680:	push   0xffffffff
  428682:	push   0x42a83b
  428687:	mov    eax,fs:0x0
  42868d:	push   eax
  42868e:	sub    esp,0xc4
  428694:	mov    eax,ds:0x43e020
  428699:	xor    eax,esp
  42869b:	mov    DWORD PTR [esp+0xc0],eax
  4286a2:	push   ebx
  4286a3:	push   ebp
  4286a4:	push   esi
  4286a5:	push   edi
  4286a6:	mov    eax,ds:0x43e020
  4286ab:	xor    eax,esp
  4286ad:	push   eax
  4286ae:	lea    eax,[esp+0xd8]
  4286b5:	mov    fs:0x0,eax
  4286bb:	mov    esi,DWORD PTR [esp+0xe8]
  4286c2:	mov    edi,DWORD PTR [esp+0xec]
  4286c9:	lea    ecx,[esp+0xb8]
  4286d0:	call   DWORD PTR ds:0x430254
  4286d6:	xor    ebx,ebx
  4286d8:	mov    DWORD PTR [esp+0xe0],ebx
  4286df:	mov    DWORD PTR [esp+0x14],ebx
  4286e3:	mov    DWORD PTR [esp+0x18],ebx
  4286e7:	call   0x4296a0
  4286ec:	mov    eax,DWORD PTR [esi]
  4286ee:	lea    ecx,[esp+0x18]
  4286f2:	push   ecx
  4286f3:	lea    edx,[esp+0x18]
  4286f7:	push   edx
  4286f8:	lea    ecx,[esp+0xc0]
  4286ff:	push   ecx
  428700:	add    eax,0x24
  428703:	push   eax
  428704:	lea    edx,[esp+0x34]
  428708:	push   edx
  428709:	call   0x4270f0
  42870e:	mov    ecx,DWORD PTR [eax]
  428710:	mov    eax,DWORD PTR [eax+0x4]
  428713:	add    esp,0x14
  428716:	neg    ecx
  428718:	sbb    ecx,ecx
  42871a:	mov    DWORD PTR [esp+0x20],eax
  42871e:	test   ecx,0x4029a0
  428724:	jne    0x4287ec
  42872a:	mov    ebp,DWORD PTR ds:0x430390
  428730:	cmp    edi,ebx
  428732:	je     0x42873e
  428734:	mov    DWORD PTR [edi],ebx
  428736:	call   0x4296a0
  42873b:	mov    DWORD PTR [edi+0x4],eax
  42873e:	mov    eax,DWORD PTR [esi]
  428740:	cmp    DWORD PTR [eax+0x24],ebx
  428743:	je     0x428865
  428749:	cmp    DWORD PTR [esp+0xd0],0x8
  428751:	mov    eax,DWORD PTR [esp+0xbc]
  428758:	jae    0x428761
  42875a:	lea    eax,[esp+0xbc]
  428761:	cmp    WORD PTR [eax],0x2e
  428765:	jne    0x42886e
  42876b:	mov    ecx,DWORD PTR [esp+0xcc]
  428772:	cmp    ecx,0x1
  428775:	je     0x4287ae
  428777:	jae    0x428782
  428779:	call   ebp
  42877b:	mov    ecx,DWORD PTR [esp+0xcc]
  428782:	cmp    DWORD PTR [esp+0xd0],0x8
  42878a:	mov    eax,DWORD PTR [esp+0xbc]
  428791:	jae    0x42879a
  428793:	lea    eax,[esp+0xbc]
  42879a:	cmp    WORD PTR [eax+0x2],0x2e
  42879f:	jne    0x42886e
  4287a5:	cmp    ecx,0x2
  4287a8:	jne    0x42886e
  4287ae:	mov    eax,DWORD PTR [esi]
  4287b0:	lea    ecx,[esp+0x18]
  4287b4:	push   ecx
  4287b5:	lea    edx,[esp+0x18]
  4287b9:	push   edx
  4287ba:	lea    ecx,[esp+0xc0]
  4287c1:	push   ecx
  4287c2:	add    eax,0x24
  4287c5:	push   eax
  4287c6:	lea    edx,[esp+0x34]
  4287ca:	push   edx
  4287cb:	call   0x4270f0
  4287d0:	mov    ecx,DWORD PTR [eax]
  4287d2:	mov    eax,DWORD PTR [eax+0x4]
  4287d5:	add    esp,0x14
  4287d8:	neg    ecx
  4287da:	sbb    ecx,ecx
  4287dc:	mov    DWORD PTR [esp+0x20],eax
  4287e0:	test   ecx,0x4029a0
  4287e6:	je     0x428730
  4287ec:	mov    ecx,esi
  4287ee:	call   0x427310
  4287f3:	cmp    edi,ebx
  4287f5:	jne    0x428851
  4287f7:	push   0x43072c
  4287fc:	lea    ecx,[esp+0x30]
  428800:	call   DWORD PTR ds:0x43011c
  428806:	mov    ecx,DWORD PTR [esi]
  428808:	lea    edx,[esp+0x48]
  42880c:	push   edx
  42880d:	mov    BYTE PTR [esp+0xe4],0x1
  428815:	call   0x426a80
  42881a:	mov    esi,eax
  42881c:	mov    BYTE PTR [esp+0xe0],0x2
  428824:	call   0x4296a0
  428829:	mov    edi,eax
  42882b:	call   DWORD PTR ds:0x43004c
  428831:	push   edi
  428832:	push   eax
  428833:	push   esi
  428834:	lea    eax,[esp+0x38]
  428838:	push   eax
  428839:	lea    ecx,[esp+0x74]
  42883d:	call   0x427790
  428842:	push   0x4351ec
  428847:	lea    ecx,[esp+0x68]
  42884b:	push   ecx
  42884c:	call   0x429e76
  428851:	call   0x4296a0
  428856:	mov    esi,eax
  428858:	call   DWORD PTR ds:0x43004c
  42885e:	mov    DWORD PTR [edi],eax
  428860:	mov    DWORD PTR [edi+0x4],esi
  428863:	jmp    0x4288bc
  428865:	mov    ecx,esi
  428867:	call   0x427310
  42886c:	jmp    0x4288bc
  42886e:	lea    edx,[esp+0xb8]
  428875:	push   edx
  428876:	lea    ecx,[esp+0x30]
  42887a:	call   DWORD PTR ds:0x430118
  428880:	mov    esi,DWORD PTR [esi]
  428882:	mov    ecx,esi
  428884:	mov    BYTE PTR [esp+0xe0],0x3
  42888c:	call   0x4269a0
  428891:	lea    eax,[esp+0x2c]
  428895:	push   eax
  428896:	mov    ecx,esi
  428898:	call   0x426c50
  42889d:	mov    ecx,DWORD PTR [esp+0x14]
  4288a1:	mov    edx,DWORD PTR [esp+0x18]
  4288a5:	mov    DWORD PTR [esi+0x1c],ecx
  4288a8:	lea    ecx,[esp+0x2c]
  4288ac:	mov    DWORD PTR [esi+0x20],edx
  4288af:	mov    BYTE PTR [esp+0xe0],bl
  4288b6:	call   DWORD PTR ds:0x430264
  4288bc:	lea    ecx,[esp+0xb8]
  4288c3:	mov    DWORD PTR [esp+0xe0],0xffffffff
  4288ce:	call   DWORD PTR ds:0x430264
  4288d4:	mov    ecx,DWORD PTR [esp+0xd8]
  4288db:	mov    DWORD PTR fs:0x0,ecx
  4288e2:	pop    ecx
  4288e3:	pop    edi
  4288e4:	pop    esi
  4288e5:	pop    ebp
  4288e6:	pop    ebx
  4288e7:	mov    ecx,DWORD PTR [esp+0xc0]
  4288ee:	xor    ecx,esp
  4288f0:	call   0x42503a
  4288f5:	add    esp,0xd0
  4288fb:	ret    
  4288fc:	int3   
  4288fd:	int3   
  4288fe:	int3   
  4288ff:	int3   
  428900:	push   0xffffffff
  428902:	push   0x42a878
  428907:	mov    eax,fs:0x0
  42890d:	push   eax
  42890e:	sub    esp,0x20
  428911:	mov    eax,ds:0x43e020
  428916:	xor    eax,esp
  428918:	mov    DWORD PTR [esp+0x1c],eax
  42891c:	push   esi
  42891d:	push   edi
  42891e:	mov    eax,ds:0x43e020
  428923:	xor    eax,esp
  428925:	push   eax
  428926:	lea    eax,[esp+0x2c]
  42892a:	mov    fs:0x0,eax
  428930:	mov    esi,DWORD PTR [esp+0x44]
  428934:	mov    eax,DWORD PTR [esp+0x3c]
  428938:	mov    edi,DWORD PTR [esp+0x40]
  42893c:	push   esi
  42893d:	push   eax
  42893e:	lea    eax,[esp+0x14]
  428942:	push   eax
  428943:	call   0x428120
  428948:	add    esp,0xc
  42894b:	mov    DWORD PTR [esp+0x34],0x0
  428953:	test   esi,esi
  428955:	je     0x428965
  428957:	mov    ecx,DWORD PTR [esi]
  428959:	neg    ecx
  42895b:	sbb    ecx,ecx
  42895d:	test   ecx,0x4029a0
  428963:	jne    0x428974
  428965:	push   esi
  428966:	lea    edx,[esp+0x10]
  42896a:	push   edi
  42896b:	push   edx
  42896c:	call   0x428000
  428971:	add    esp,0xc
  428974:	lea    ecx,[esp+0xc]
  428978:	mov    DWORD PTR [esp+0x34],0xffffffff
  428980:	call   DWORD PTR ds:0x430264
  428986:	mov    ecx,DWORD PTR [esp+0x2c]
  42898a:	mov    DWORD PTR fs:0x0,ecx
  428991:	pop    ecx
  428992:	pop    edi
  428993:	pop    esi
  428994:	mov    ecx,DWORD PTR [esp+0x1c]
  428998:	xor    ecx,esp
  42899a:	call   0x42503a
  42899f:	add    esp,0x2c
  4289a2:	ret    
  4289a3:	int3   
  4289a4:	int3   
  4289a5:	int3   
  4289a6:	int3   
  4289a7:	int3   
  4289a8:	int3   
  4289a9:	int3   
  4289aa:	int3   
  4289ab:	int3   
  4289ac:	int3   
  4289ad:	int3   
  4289ae:	int3   
  4289af:	int3   
  4289b0:	push   0xffffffff
  4289b2:	push   0x42a8a9
  4289b7:	mov    eax,fs:0x0
  4289bd:	push   eax
  4289be:	sub    esp,0x7c
  4289c1:	push   ebx
  4289c2:	push   esi
  4289c3:	push   edi
  4289c4:	mov    eax,ds:0x43e020
  4289c9:	xor    eax,esp
  4289cb:	push   eax
  4289cc:	lea    eax,[esp+0x8c]
  4289d3:	mov    fs:0x0,eax
  4289d9:	mov    esi,DWORD PTR [esp+0x9c]
  4289e0:	cmp    DWORD PTR [esi+0x18],0x8
  4289e4:	jb     0x4289eb
  4289e6:	mov    eax,DWORD PTR [esi+0x4]
  4289e9:	jmp    0x4289ee
  4289eb:	lea    eax,[esi+0x4]
  4289ee:	push   0x0
  4289f0:	push   eax
  4289f1:	call   DWORD PTR ds:0x4300d4
  4289f7:	test   eax,eax
  4289f9:	je     0x428a1b
  4289fb:	mov    esi,DWORD PTR [esp+0xa0]
  428a02:	test   esi,esi
  428a04:	je     0x428a14
  428a06:	mov    DWORD PTR [esi],0x0
  428a0c:	call   0x4296a0
  428a11:	mov    DWORD PTR [esi+0x4],eax
  428a14:	mov    al,0x1
  428a16:	jmp    0x428ab5
  428a1b:	call   DWORD PTR ds:0x43004c
  428a21:	mov    ebx,eax
  428a23:	call   0x4296a0
  428a28:	cmp    ebx,0xb7
  428a2e:	jne    0x428a63
  428a30:	lea    eax,[esp+0x14]
  428a34:	push   eax
  428a35:	lea    ecx,[esp+0x14]
  428a39:	push   esi
  428a3a:	push   ecx
  428a3b:	call   0x428370
  428a40:	add    esp,0xc
  428a43:	cmp    DWORD PTR [eax],0x3
  428a46:	jne    0x428a63
  428a48:	mov    esi,DWORD PTR [esp+0xa0]
  428a4f:	test   esi,esi
  428a51:	je     0x428ab3
  428a53:	mov    DWORD PTR [esi],0x0
  428a59:	call   0x4296a0
  428a5e:	mov    DWORD PTR [esi+0x4],eax
  428a61:	jmp    0x428ab3
  428a63:	mov    edi,DWORD PTR [esp+0xa0]
  428a6a:	test   edi,edi
  428a6c:	jne    0x428aa9
  428a6e:	push   0x430760
  428a73:	lea    ecx,[esp+0x20]
  428a77:	call   DWORD PTR ds:0x43011c
  428a7d:	mov    DWORD PTR [esp+0x94],edi
  428a84:	call   0x4296a0
  428a89:	push   eax
  428a8a:	push   ebx
  428a8b:	push   esi
  428a8c:	lea    edx,[esp+0x28]
  428a90:	push   edx
  428a91:	lea    ecx,[esp+0x48]
  428a95:	call   0x427790
  428a9a:	push   0x4351ec
  428a9f:	lea    eax,[esp+0x3c]
  428aa3:	push   eax
  428aa4:	call   0x429e76
  428aa9:	call   0x4296a0
  428aae:	mov    DWORD PTR [edi],ebx
  428ab0:	mov    DWORD PTR [edi+0x4],eax
  428ab3:	xor    al,al
  428ab5:	mov    ecx,DWORD PTR [esp+0x8c]
  428abc:	mov    DWORD PTR fs:0x0,ecx
  428ac3:	pop    ecx
  428ac4:	pop    edi
  428ac5:	pop    esi
  428ac6:	pop    ebx
  428ac7:	add    esp,0x88
  428acd:	ret    
  428ace:	int3   
  428acf:	int3   
  428ad0:	push   0xffffffff
  428ad2:	push   0x42a912
  428ad7:	mov    eax,fs:0x0
  428add:	push   eax
  428ade:	sub    esp,0xd8
  428ae4:	mov    eax,ds:0x43e020
  428ae9:	xor    eax,esp
  428aeb:	mov    DWORD PTR [esp+0xd4],eax
  428af2:	push   ebx
  428af3:	push   ebp
  428af4:	push   esi
  428af5:	push   edi
  428af6:	mov    eax,ds:0x43e020
  428afb:	xor    eax,esp
  428afd:	push   eax
  428afe:	lea    eax,[esp+0xec]
  428b05:	mov    fs:0x0,eax
  428b0b:	mov    ebp,DWORD PTR [esp+0xfc]
  428b12:	mov    esi,DWORD PTR [esp+0x100]
  428b19:	mov    edi,DWORD PTR [esp+0x104]
  428b20:	push   0x430784
  428b25:	lea    ecx,[esp+0x28]
  428b29:	call   DWORD PTR ds:0x43011c
  428b2f:	cmp    DWORD PTR [esi+0x14],0x0
  428b33:	lea    ecx,[esp+0x24]
  428b37:	push   ecx
  428b38:	push   edi
  428b39:	sete   al
  428b3c:	push   esi
  428b3d:	mov    BYTE PTR [esp+0x20],al
  428b41:	mov    edx,DWORD PTR [esp+0x20]
  428b45:	push   0x43fdc8
  428b4a:	push   edx
  428b4b:	mov    DWORD PTR [esp+0x108],0x0
  428b56:	call   0x427a70
  428b5b:	add    esp,0x14
  428b5e:	lea    ecx,[esp+0x24]
  428b62:	mov    bl,al
  428b64:	mov    DWORD PTR [esp+0xf4],0xffffffff
  428b6f:	call   DWORD PTR ds:0x43025c
  428b75:	test   bl,bl
  428b77:	jne    0x428d7f
  428b7d:	lea    ecx,[esp+0xcc]
  428b84:	call   DWORD PTR ds:0x430254
  428b8a:	xor    eax,eax
  428b8c:	cmp    DWORD PTR [esi+0x18],0x8
  428b90:	mov    DWORD PTR [esp+0xf4],0x1
  428b9b:	mov    DWORD PTR [esp+0x18],eax
  428b9f:	mov    DWORD PTR [esp+0x14],eax
  428ba3:	jb     0x428baa
  428ba5:	mov    eax,DWORD PTR [esi+0x4]
  428ba8:	jmp    0x428bad
  428baa:	lea    eax,[esi+0x4]
  428bad:	push   eax
  428bae:	lea    ecx,[esp+0x28]
  428bb2:	call   DWORD PTR ds:0x430268
  428bb8:	mov    eax,DWORD PTR [ebp+0x0]
  428bbb:	lea    ecx,[esp+0x14]
  428bbf:	push   ecx
  428bc0:	lea    edx,[esp+0x1c]
  428bc4:	push   edx
  428bc5:	lea    ecx,[esp+0xd4]
  428bcc:	push   ecx
  428bcd:	lea    edx,[esp+0x30]
  428bd1:	push   edx
  428bd2:	add    eax,0x24
  428bd5:	push   eax
  428bd6:	lea    eax,[esp+0x30]
  428bda:	push   eax
  428bdb:	mov    BYTE PTR [esp+0x10c],0x2
  428be3:	call   0x426df0
  428be8:	add    esp,0x18
  428beb:	lea    ecx,[esp+0x24]
  428bef:	mov    BYTE PTR [esp+0xf4],0x1
  428bf7:	call   DWORD PTR ds:0x430264
  428bfd:	mov    ebx,DWORD PTR [esp+0x1c]
  428c01:	mov    ecx,ebx
  428c03:	neg    ecx
  428c05:	sbb    ecx,ecx
  428c07:	test   ecx,0x4029a0
  428c0d:	je     0x428c74
  428c0f:	mov    ecx,ebp
  428c11:	call   0x427310
  428c16:	push   0x430784
  428c1b:	lea    ecx,[esp+0x28]
  428c1f:	call   DWORD PTR ds:0x43011c
  428c25:	mov    edx,DWORD PTR [esp+0x20]
  428c29:	mov    BYTE PTR [esp+0xf4],0x3
  428c31:	test   edi,edi
  428c33:	jne    0x428c58
  428c35:	push   edx
  428c36:	push   ebx
  428c37:	push   esi
  428c38:	lea    eax,[esp+0x30]
  428c3c:	push   eax
  428c3d:	lea    ecx,[esp+0x88]
  428c44:	call   0x427790
  428c49:	push   0x4351ec
  428c4e:	lea    ecx,[esp+0x7c]
  428c52:	push   ecx
  428c53:	call   0x429e76
  428c58:	lea    ecx,[esp+0x24]
  428c5c:	mov    DWORD PTR [edi],ebx
  428c5e:	mov    DWORD PTR [edi+0x4],edx
  428c61:	mov    BYTE PTR [esp+0xf4],0x1
  428c69:	call   DWORD PTR ds:0x43025c
  428c6f:	jmp    0x428d67
  428c74:	mov    eax,DWORD PTR [ebp+0x0]
  428c77:	cmp    DWORD PTR [eax+0x24],0x0
  428c7b:	jne    0x428c89
  428c7d:	mov    ecx,ebp
  428c7f:	call   0x427310
  428c84:	jmp    0x428d67
  428c89:	lea    eax,[esp+0xcc]
  428c90:	push   eax
  428c91:	lea    ecx,[esp+0x44]
  428c95:	call   DWORD PTR ds:0x430118
  428c9b:	lea    ecx,[esp+0x40]
  428c9f:	push   ecx
  428ca0:	lea    edx,[esp+0x60]
  428ca4:	push   esi
  428ca5:	mov    bl,0x4
  428ca7:	push   edx
  428ca8:	mov    BYTE PTR [esp+0x100],bl
  428caf:	call   0x40cd40
  428cb4:	add    esp,0xc
  428cb7:	mov    esi,DWORD PTR [ebp+0x0]
  428cba:	push   eax
  428cbb:	mov    ecx,esi
  428cbd:	mov    BYTE PTR [esp+0xf8],0x5
  428cc5:	call   DWORD PTR ds:0x43017c
  428ccb:	mov    ecx,DWORD PTR [esp+0x14]
  428ccf:	mov    eax,DWORD PTR [esp+0x18]
  428cd3:	mov    DWORD PTR [esi+0x20],ecx
  428cd6:	lea    ecx,[esp+0x5c]
  428cda:	mov    DWORD PTR [esi+0x1c],eax
  428cdd:	mov    BYTE PTR [esp+0xf4],bl
  428ce4:	call   DWORD PTR ds:0x430264
  428cea:	lea    ecx,[esp+0x40]
  428cee:	mov    BYTE PTR [esp+0xf4],0x1
  428cf6:	call   DWORD PTR ds:0x430264
  428cfc:	mov    eax,DWORD PTR [esp+0xd0]
  428d03:	mov    esi,0x8
  428d08:	cmp    DWORD PTR [esp+0xe4],esi
  428d0f:	jae    0x428d18
  428d11:	lea    eax,[esp+0xd0]
  428d18:	cmp    WORD PTR [eax],0x2e
  428d1c:	jne    0x428d67
  428d1e:	mov    ecx,DWORD PTR [esp+0xe0]
  428d25:	cmp    ecx,0x1
  428d28:	je     0x428d5c
  428d2a:	jae    0x428d39
  428d2c:	call   DWORD PTR ds:0x430390
  428d32:	mov    ecx,DWORD PTR [esp+0xe0]
  428d39:	mov    eax,DWORD PTR [esp+0xd0]
  428d40:	cmp    DWORD PTR [esp+0xe4],esi
  428d47:	jae    0x428d50
  428d49:	lea    eax,[esp+0xd0]
  428d50:	cmp    WORD PTR [eax+0x2],0x2e
  428d55:	jne    0x428d67
  428d57:	cmp    ecx,0x2
  428d5a:	jne    0x428d67
  428d5c:	push   0x0
  428d5e:	push   ebp
  428d5f:	call   0x428680
  428d64:	add    esp,0x8
  428d67:	lea    ecx,[esp+0xcc]
  428d6e:	mov    DWORD PTR [esp+0xf4],0xffffffff
  428d79:	call   DWORD PTR ds:0x430264
  428d7f:	mov    ecx,DWORD PTR [esp+0xec]
  428d86:	mov    DWORD PTR fs:0x0,ecx
  428d8d:	pop    ecx
  428d8e:	pop    edi
  428d8f:	pop    esi
  428d90:	pop    ebp
  428d91:	pop    ebx
  428d92:	mov    ecx,DWORD PTR [esp+0xd4]
  428d99:	xor    ecx,esp
  428d9b:	call   0x42503a
  428da0:	add    esp,0xe4
  428da6:	ret    
  428da7:	int3   
  428da8:	int3   
  428da9:	int3   
  428daa:	int3   
  428dab:	int3   
  428dac:	int3   
  428dad:	int3   
  428dae:	int3   
  428daf:	int3   
  428db0:	push   0xffffffff
  428db2:	push   0x42a949
  428db7:	mov    eax,fs:0x0
  428dbd:	push   eax
  428dbe:	sub    esp,0x74
  428dc1:	push   esi
  428dc2:	push   edi
  428dc3:	mov    eax,ds:0x43e020
  428dc8:	xor    eax,esp
  428dca:	push   eax
  428dcb:	lea    eax,[esp+0x80]
  428dd2:	mov    fs:0x0,eax
  428dd8:	mov    esi,DWORD PTR [esp+0x98]
  428ddf:	mov    edi,DWORD PTR [esp+0x90]
  428de6:	push   esi
  428de7:	lea    eax,[esp+0x10]
  428deb:	push   edi
  428dec:	push   eax
  428ded:	call   0x428500
  428df2:	add    esp,0xc
  428df5:	test   esi,esi
  428df7:	je     0x428e0b
  428df9:	mov    ecx,DWORD PTR [esi]
  428dfb:	neg    ecx
  428dfd:	sbb    ecx,ecx
  428dff:	test   ecx,0x4029a0
  428e05:	jne    0x428ef8
  428e0b:	mov    eax,DWORD PTR [esp+0xc]
  428e0f:	cmp    eax,0x4
  428e12:	jne    0x428e3e
  428e14:	mov    edx,DWORD PTR [esp+0x94]
  428e1b:	push   esi
  428e1c:	push   edx
  428e1d:	push   edi
  428e1e:	call   0x428900
  428e23:	add    esp,0xc
  428e26:	mov    ecx,DWORD PTR [esp+0x80]
  428e2d:	mov    DWORD PTR fs:0x0,ecx
  428e34:	pop    ecx
  428e35:	pop    edi
  428e36:	pop    esi
  428e37:	add    esp,0x80
  428e3d:	ret    
  428e3e:	cmp    eax,0x3
  428e41:	jne    0x428e6d
  428e43:	mov    eax,DWORD PTR [esp+0x94]
  428e4a:	push   esi
  428e4b:	push   eax
  428e4c:	push   edi
  428e4d:	call   0x427e90
  428e52:	add    esp,0xc
  428e55:	mov    ecx,DWORD PTR [esp+0x80]
  428e5c:	mov    DWORD PTR fs:0x0,ecx
  428e63:	pop    ecx
  428e64:	pop    edi
  428e65:	pop    esi
  428e66:	add    esp,0x80
  428e6c:	ret    
  428e6d:	cmp    eax,0x2
  428e70:	jne    0x428e9e
  428e72:	mov    ecx,DWORD PTR [esp+0x94]
  428e79:	push   esi
  428e7a:	push   0x0
  428e7c:	push   ecx
  428e7d:	push   edi
  428e7e:	call   0x427f40
  428e83:	add    esp,0x10
  428e86:	mov    ecx,DWORD PTR [esp+0x80]
  428e8d:	mov    DWORD PTR fs:0x0,ecx
  428e94:	pop    ecx
  428e95:	pop    edi
  428e96:	pop    esi
  428e97:	add    esp,0x80
  428e9d:	ret    
  428e9e:	test   esi,esi
  428ea0:	jne    0x428eea
  428ea2:	push   0x4307b8
  428ea7:	lea    ecx,[esp+0x14]
  428eab:	call   DWORD PTR ds:0x43011c
  428eb1:	mov    DWORD PTR [esp+0x88],esi
  428eb8:	mov    esi,0x32
  428ebd:	call   0x4296a0
  428ec2:	mov    edx,DWORD PTR [esp+0x94]
  428ec9:	push   eax
  428eca:	push   esi
  428ecb:	push   edx
  428ecc:	push   edi
  428ecd:	lea    eax,[esp+0x20]
  428ed1:	push   eax
  428ed2:	lea    ecx,[esp+0x40]
  428ed6:	call   0x427850
  428edb:	push   0x4351ec
  428ee0:	lea    ecx,[esp+0x30]
  428ee4:	push   ecx
  428ee5:	call   0x429e76
  428eea:	call   0x4296a0
  428eef:	mov    DWORD PTR [esi],0x32
  428ef5:	mov    DWORD PTR [esi+0x4],eax
  428ef8:	mov    ecx,DWORD PTR [esp+0x80]
  428eff:	mov    DWORD PTR fs:0x0,ecx
  428f06:	pop    ecx
  428f07:	pop    edi
  428f08:	pop    esi
  428f09:	add    esp,0x80
  428f0f:	ret    
  428f10:	push   0xffffffff
  428f12:	push   0x42a978
  428f17:	mov    eax,fs:0x0
  428f1d:	push   eax
  428f1e:	sub    esp,0x8
  428f21:	push   ebx
  428f22:	push   ebp
  428f23:	push   esi
  428f24:	push   edi
  428f25:	mov    eax,ds:0x43e020
  428f2a:	xor    eax,esp
  428f2c:	push   eax
  428f2d:	lea    eax,[esp+0x1c]
  428f31:	mov    fs:0x0,eax
  428f37:	mov    esi,DWORD PTR [esp+0x34]
  428f3b:	xor    ebp,ebp
  428f3d:	cmp    DWORD PTR [esp+0x30],0x3
  428f42:	mov    ebx,0x1
  428f47:	jne    0x428ff5
  428f4d:	mov    eax,DWORD PTR [esp+0x2c]
  428f51:	push   eax
  428f52:	lea    ecx,[esp+0x18]
  428f56:	call   0x40ce40
  428f5b:	mov    eax,DWORD PTR [esp+0x14]
  428f5f:	mov    DWORD PTR [esp+0x24],ebp
  428f63:	cmp    eax,DWORD PTR ds:0x43fdf8
  428f69:	je     0x428fbb
  428f6b:	jmp    0x428f70
  428f6d:	lea    ecx,[ecx+0x0]
  428f70:	push   esi
  428f71:	push   eax
  428f72:	call   0x427df0
  428f77:	add    esp,0x8
  428f7a:	test   esi,esi
  428f7c:	je     0x428f90
  428f7e:	mov    ecx,DWORD PTR [esi]
  428f80:	neg    ecx
  428f82:	sbb    ecx,ecx
  428f84:	test   ecx,0x4029a0
  428f8a:	jne    0x429020
  428f90:	mov    edx,DWORD PTR [esp+0x14]
  428f94:	push   esi
  428f95:	push   eax
  428f96:	push   edx
  428f97:	call   0x428f10
  428f9c:	add    ebx,eax
  428f9e:	lea    eax,[esp+0x20]
  428fa2:	push   0x0
  428fa4:	push   eax
  428fa5:	adc    ebp,edx
  428fa7:	call   0x428680
  428fac:	mov    eax,DWORD PTR [esp+0x28]
  428fb0:	add    esp,0x14
  428fb3:	cmp    eax,DWORD PTR ds:0x43fdf8
  428fb9:	jne    0x428f70
  428fbb:	mov    edi,DWORD PTR [esp+0x18]
  428fbf:	mov    DWORD PTR [esp+0x24],0xffffffff
  428fc7:	test   edi,edi
  428fc9:	je     0x428ff5
  428fcb:	lea    ecx,[edi+0x4]
  428fce:	or     edx,0xffffffff
  428fd1:	lock xadd DWORD PTR [ecx],edx
  428fd5:	jne    0x428ff5
  428fd7:	mov    eax,DWORD PTR [edi]
  428fd9:	mov    edx,DWORD PTR [eax+0x4]
  428fdc:	mov    ecx,edi
  428fde:	call   edx
  428fe0:	lea    eax,[edi+0x8]
  428fe3:	or     ecx,0xffffffff
  428fe6:	lock xadd DWORD PTR [eax],ecx
  428fea:	jne    0x428ff5
  428fec:	mov    edx,DWORD PTR [edi]
  428fee:	mov    eax,DWORD PTR [edx+0x8]
  428ff1:	mov    ecx,edi
  428ff3:	call   eax
  428ff5:	mov    ecx,DWORD PTR [esp+0x30]
  428ff9:	mov    edx,DWORD PTR [esp+0x2c]
  428ffd:	push   esi
  428ffe:	push   ecx
  428fff:	push   edx
  429000:	call   0x427b70
  429005:	add    esp,0xc
  429008:	mov    edx,ebp
  42900a:	mov    eax,ebx
  42900c:	mov    ecx,DWORD PTR [esp+0x1c]
  429010:	mov    DWORD PTR fs:0x0,ecx
  429017:	pop    ecx
  429018:	pop    edi
  429019:	pop    esi
  42901a:	pop    ebp
  42901b:	pop    ebx
  42901c:	add    esp,0x14
  42901f:	ret    
  429020:	mov    esi,DWORD PTR [esp+0x18]
  429024:	mov    DWORD PTR [esp+0x24],0xffffffff
  42902c:	test   esi,esi
  42902e:	je     0x429008
  429030:	lea    ecx,[esi+0x4]
  429033:	or     edx,0xffffffff
  429036:	lock xadd DWORD PTR [ecx],edx
  42903a:	jne    0x429008
  42903c:	mov    eax,DWORD PTR [esi]
  42903e:	mov    edx,DWORD PTR [eax+0x4]
  429041:	mov    ecx,esi
  429043:	call   edx
  429045:	lea    eax,[esi+0x8]
  429048:	or     ecx,0xffffffff
  42904b:	lock xadd DWORD PTR [eax],ecx
  42904f:	jne    0x429008
  429051:	mov    edx,DWORD PTR [esi]
  429053:	mov    eax,DWORD PTR [edx+0x8]
  429056:	mov    ecx,esi
  429058:	call   eax
  42905a:	jmp    0x429008
  42905c:	int3   
  42905d:	int3   
  42905e:	int3   
  42905f:	int3   
  429060:	push   0xffffffff
  429062:	push   0x42a9a9
  429067:	mov    eax,fs:0x0
  42906d:	push   eax
  42906e:	sub    esp,0x24
  429071:	push   ebx
  429072:	push   ebp
  429073:	push   esi
  429074:	push   edi
  429075:	mov    eax,ds:0x43e020
  42907a:	xor    eax,esp
  42907c:	push   eax
  42907d:	lea    eax,[esp+0x38]
  429081:	mov    fs:0x0,eax
  429087:	xor    ebx,ebx
  429089:	mov    DWORD PTR [esp+0x14],ebx
  42908d:	call   0x4296a0
  429092:	mov    edi,DWORD PTR [esp+0x48]
  429096:	mov    DWORD PTR [esp+0x18],eax
  42909a:	lea    eax,[esp+0x14]
  42909e:	push   eax
  42909f:	push   edi
  4290a0:	call   0x427df0
  4290a5:	add    esp,0x8
  4290a8:	push   0x4307d0
  4290ad:	lea    ecx,[esp+0x20]
  4290b1:	mov    esi,eax
  4290b3:	call   DWORD PTR ds:0x43011c
  4290b9:	mov    ebp,DWORD PTR [esp+0x4c]
  4290bd:	lea    ecx,[esp+0x1c]
  4290c1:	push   ecx
  4290c2:	push   ebp
  4290c3:	cmp    esi,ebx
  4290c5:	sete   al
  4290c8:	push   edi
  4290c9:	lea    edx,[esp+0x20]
  4290cd:	movzx  ecx,al
  4290d0:	push   edx
  4290d1:	push   ecx
  4290d2:	mov    DWORD PTR [esp+0x54],ebx
  4290d6:	call   0x427a70
  4290db:	add    esp,0x14
  4290de:	lea    ecx,[esp+0x1c]
  4290e2:	mov    bl,al
  4290e4:	mov    DWORD PTR [esp+0x40],0xffffffff
  4290ec:	call   DWORD PTR ds:0x43025c
  4290f2:	test   bl,bl
  4290f4:	jne    0x42911e
  4290f6:	test   esi,esi
  4290f8:	je     0x42911e
  4290fa:	cmp    esi,0x1
  4290fd:	je     0x42911e
  4290ff:	push   ebp
  429100:	push   esi
  429101:	push   edi
  429102:	call   0x428f10
  429107:	add    esp,0xc
  42910a:	mov    ecx,DWORD PTR [esp+0x38]
  42910e:	mov    DWORD PTR fs:0x0,ecx
  429115:	pop    ecx
  429116:	pop    edi
  429117:	pop    esi
  429118:	pop    ebp
  429119:	pop    ebx
  42911a:	add    esp,0x30
  42911d:	ret    
  42911e:	xor    eax,eax
  429120:	xor    edx,edx
  429122:	mov    ecx,DWORD PTR [esp+0x38]
  429126:	mov    DWORD PTR fs:0x0,ecx
  42912d:	pop    ecx
  42912e:	pop    edi
  42912f:	pop    esi
  429130:	pop    ebp
  429131:	pop    ebx
  429132:	add    esp,0x30
  429135:	ret    
  429136:	int3   
  429137:	int3   
  429138:	int3   
  429139:	int3   
  42913a:	int3   
  42913b:	int3   
  42913c:	int3   
  42913d:	int3   
  42913e:	int3   
  42913f:	int3   
  429140:	mov    eax,DWORD PTR [esp+0x4]
  429144:	mov    edx,DWORD PTR [esp+0x8]
  429148:	mov    DWORD PTR [eax],edx
  42914a:	mov    DWORD PTR [eax+0x4],ecx
  42914d:	ret    0x8
  429150:	mov    edx,DWORD PTR [esp+0x4]
  429154:	mov    eax,DWORD PTR [ecx]
  429156:	mov    eax,DWORD PTR [eax+0xc]
  429159:	sub    esp,0x8
  42915c:	push   edx
  42915d:	lea    edx,[esp+0x4]
  429161:	push   edx
  429162:	call   eax
  429164:	mov    edx,DWORD PTR [eax+0x4]
  429167:	mov    ecx,DWORD PTR [esp+0x10]
  42916b:	cmp    edx,DWORD PTR [ecx+0x4]
  42916e:	jne    0x429181
  429170:	mov    eax,DWORD PTR [eax]
  429172:	cmp    eax,DWORD PTR [ecx]
  429174:	jne    0x429181
  429176:	mov    eax,0x1
  42917b:	add    esp,0x8
  42917e:	ret    0x8
  429181:	xor    eax,eax
  429183:	add    esp,0x8
  429186:	ret    0x8
  429189:	int3   
  42918a:	int3   
  42918b:	int3   
  42918c:	int3   
  42918d:	int3   
  42918e:	int3   
  42918f:	int3   
  429190:	mov    eax,DWORD PTR [esp+0x4]
  429194:	cmp    ecx,DWORD PTR [eax+0x4]
  429197:	jne    0x4291a9
  429199:	mov    eax,DWORD PTR [eax]
  42919b:	cmp    eax,DWORD PTR [esp+0x8]
  42919f:	jne    0x4291a9
  4291a1:	mov    eax,0x1
  4291a6:	ret    0x8
  4291a9:	xor    eax,eax
  4291ab:	ret    0x8
  4291ae:	int3   
  4291af:	int3   
  4291b0:	mov    eax,0x430840
  4291b5:	ret    
  4291b6:	int3   
  4291b7:	int3   
  4291b8:	int3   
  4291b9:	int3   
  4291ba:	int3   
  4291bb:	int3   
  4291bc:	int3   
  4291bd:	int3   
  4291be:	int3   
  4291bf:	int3   
  4291c0:	push   0xffffffff
  4291c2:	push   0x42a9ea
  4291c7:	mov    eax,fs:0x0
  4291cd:	push   eax
  4291ce:	sub    esp,0x8
  4291d1:	push   esi
  4291d2:	mov    eax,ds:0x43e020
  4291d7:	xor    eax,esp
  4291d9:	push   eax
  4291da:	lea    eax,[esp+0x10]
  4291de:	mov    fs:0x0,eax
  4291e4:	mov    esi,DWORD PTR [esp+0x20]
  4291e8:	mov    ecx,esi
  4291ea:	mov    DWORD PTR [esp+0x18],0x0
  4291f2:	mov    DWORD PTR [esp+0xc],esi
  4291f6:	mov    DWORD PTR [esp+0x8],0x0
  4291fe:	call   DWORD PTR ds:0x430260
  429204:	mov    eax,DWORD PTR [esp+0x24]
  429208:	mov    DWORD PTR [esp+0x18],0x0
  429210:	mov    DWORD PTR [esp+0x8],0x1
  429218:	cmp    eax,0x3
  42921b:	ja     0x429240
  42921d:	jmp    DWORD PTR [eax*4+0x429264]
  429224:	push   0x430870
  429229:	jmp    0x429245
  42922b:	push   0x430868
  429230:	jmp    0x429245
  429232:	push   0x430860
  429237:	jmp    0x429245
  429239:	push   0x430858
  42923e:	jmp    0x429245
  429240:	push   0x430848
  429245:	mov    ecx,esi
  429247:	call   DWORD PTR ds:0x430178
  42924d:	mov    eax,esi
  42924f:	mov    ecx,DWORD PTR [esp+0x10]
  429253:	mov    DWORD PTR fs:0x0,ecx
  42925a:	pop    ecx
  42925b:	pop    esi
  42925c:	add    esp,0x14
  42925f:	ret    0x8
  429262:	mov    edi,edi
  429264:	and    al,0x92
  429266:	inc    edx
  429267:	add    BYTE PTR [ebx],ch
  429269:	xchg   edx,eax
  42926a:	inc    edx
  42926b:	add    BYTE PTR [edx],dh
  42926d:	xchg   edx,eax
  42926e:	inc    edx
  42926f:	add    BYTE PTR [ecx],bh
  429271:	xchg   edx,eax
  429272:	inc    edx
  429273:	add    ah,cl
  429275:	int3   
  429276:	int3   
  429277:	int3   
  429278:	int3   
  429279:	int3   
  42927a:	int3   
  42927b:	int3   
  42927c:	int3   
  42927d:	int3   
  42927e:	int3   
  42927f:	int3   
  429280:	push   0xffffffff
  429282:	push   0x42aa1e
  429287:	mov    eax,fs:0x0
  42928d:	push   eax
  42928e:	mov    eax,ds:0x43e020
  429293:	xor    eax,esp
  429295:	push   eax
  429296:	lea    eax,[esp+0x4]
  42929a:	mov    fs:0x0,eax
  4292a0:	mov    eax,0x1
  4292a5:	test   BYTE PTR ds:0x43fe08,al
  4292ab:	jne    0x4292d2
  4292ad:	or     DWORD PTR ds:0x43fe08,eax
  4292b3:	push   0x42f660
  4292b8:	mov    DWORD PTR [esp+0x10],0x0
  4292c0:	mov    DWORD PTR ds:0x43fe04,0x430878
  4292ca:	call   0x425159
  4292cf:	add    esp,0x4
  4292d2:	mov    eax,0x43fe04
  4292d7:	mov    ecx,DWORD PTR [esp+0x4]
  4292db:	mov    DWORD PTR fs:0x0,ecx
  4292e2:	pop    ecx
  4292e3:	add    esp,0xc
  4292e6:	ret    
  4292e7:	int3   
  4292e8:	int3   
  4292e9:	int3   
  4292ea:	int3   
  4292eb:	int3   
  4292ec:	int3   
  4292ed:	int3   
  4292ee:	int3   
  4292ef:	int3   
  4292f0:	push   esi
  4292f1:	push   edi
  4292f2:	call   DWORD PTR ds:0x4300cc
  4292f8:	mov    esi,DWORD PTR [esp+0x1c]
  4292fc:	mov    ecx,DWORD PTR [esp+0x20]
  429300:	mov    edi,DWORD PTR [esp+0x14]
  429304:	neg    eax
  429306:	sbb    eax,eax
  429308:	sub    ecx,esi
  42930a:	sar    ecx,1
  42930c:	push   ecx
  42930d:	mov    ecx,DWORD PTR [esp+0x14]
  429311:	push   esi
  429312:	mov    edx,edi
  429314:	sub    edx,ecx
  429316:	push   edx
  429317:	push   ecx
  429318:	and    eax,0x2
  42931b:	inc    eax
  42931c:	push   0x1
  42931e:	push   eax
  42931f:	call   DWORD PTR ds:0x430048
  429325:	test   eax,eax
  429327:	jne    0x429333
  429329:	pop    edi
  42932a:	mov    eax,0x2
  42932f:	pop    esi
  429330:	ret    0x1c
  429333:	mov    ecx,DWORD PTR [esp+0x18]
  429337:	mov    edx,DWORD PTR [esp+0x24]
  42933b:	mov    DWORD PTR [ecx],edi
  42933d:	lea    eax,[esi+eax*2]
  429340:	mov    DWORD PTR [edx],eax
  429342:	xor    ecx,ecx
  429344:	pop    edi
  429345:	mov    WORD PTR [eax],cx
  429348:	xor    eax,eax
  42934a:	pop    esi
  42934b:	ret    0x1c
  42934e:	int3   
  42934f:	int3   
  429350:	push   esi
  429351:	push   edi
  429352:	call   DWORD PTR ds:0x4300cc
  429358:	mov    esi,DWORD PTR [esp+0x1c]
  42935c:	mov    ecx,DWORD PTR [esp+0x20]
  429360:	mov    edi,DWORD PTR [esp+0x14]
  429364:	push   0x0
  429366:	neg    eax
  429368:	sbb    eax,eax
  42936a:	push   0x0
  42936c:	sub    ecx,esi
  42936e:	push   ecx
  42936f:	mov    ecx,DWORD PTR [esp+0x1c]
  429373:	push   esi
  429374:	mov    edx,edi
  429376:	sub    edx,ecx
  429378:	sar    edx,1
  42937a:	push   edx
  42937b:	push   ecx
  42937c:	and    eax,0x2
  42937f:	inc    eax
  429380:	push   0x400
  429385:	push   eax
  429386:	call   DWORD PTR ds:0x430074
  42938c:	test   eax,eax
  42938e:	jne    0x42939a
  429390:	pop    edi
  429391:	mov    eax,0x2
  429396:	pop    esi
  429397:	ret    0x1c
  42939a:	mov    ecx,DWORD PTR [esp+0x18]
  42939e:	mov    edx,DWORD PTR [esp+0x24]
  4293a2:	add    eax,esi
  4293a4:	mov    DWORD PTR [ecx],edi
  4293a6:	mov    DWORD PTR [edx],eax
  4293a8:	pop    edi
  4293a9:	mov    BYTE PTR [eax],0x0
  4293ac:	xor    eax,eax
  4293ae:	pop    esi
  4293af:	ret    0x1c
  4293b2:	int3   
  4293b3:	int3   
  4293b4:	int3   
  4293b5:	int3   
  4293b6:	int3   
  4293b7:	int3   
  4293b8:	int3   
  4293b9:	int3   
  4293ba:	int3   
  4293bb:	int3   
  4293bc:	int3   
  4293bd:	int3   
  4293be:	int3   
  4293bf:	int3   
  4293c0:	mov    eax,DWORD PTR [ecx]
  4293c2:	push   eax
  4293c3:	call   DWORD PTR ds:0x4300fc
  4293c9:	ret    
  4293ca:	int3   
  4293cb:	int3   
  4293cc:	int3   
  4293cd:	int3   
  4293ce:	int3   
  4293cf:	int3   
  4293d0:	mov    eax,0x4308ac
  4293d5:	ret    
  4293d6:	int3   
  4293d7:	int3   
  4293d8:	int3   
  4293d9:	int3   
  4293da:	int3   
  4293db:	int3   
  4293dc:	int3   
  4293dd:	int3   
  4293de:	int3   
  4293df:	int3   
  4293e0:	mov    eax,0x4308b4
  4293e5:	ret    
  4293e6:	int3   
  4293e7:	int3   
  4293e8:	int3   
  4293e9:	int3   
  4293ea:	int3   
  4293eb:	int3   
  4293ec:	int3   
  4293ed:	int3   
  4293ee:	int3   
  4293ef:	int3   
  4293f0:	push   0xffffffff
  4293f2:	push   0x42aa6b
  4293f7:	mov    eax,fs:0x0
  4293fd:	push   eax
  4293fe:	sub    esp,0x30
  429401:	mov    eax,ds:0x43e020
  429406:	xor    eax,esp
  429408:	mov    DWORD PTR [esp+0x2c],eax
  42940c:	push   ebx
  42940d:	push   ebp
  42940e:	push   esi
  42940f:	push   edi
  429410:	mov    eax,ds:0x43e020
  429415:	xor    eax,esp
  429417:	push   eax
  429418:	lea    eax,[esp+0x44]
  42941c:	mov    fs:0x0,eax
  429422:	mov    ecx,DWORD PTR [esp+0x58]
  429426:	mov    ebp,DWORD PTR [esp+0x54]
  42942a:	xor    ebx,ebx
  42942c:	push   ebx
  42942d:	push   ebx
  42942e:	lea    eax,[esp+0x1c]
  429432:	push   eax
  429433:	push   0x400
  429438:	push   ecx
  429439:	push   ebx
  42943a:	mov    DWORD PTR [esp+0x30],ebx
  42943e:	push   0x1300
  429443:	mov    DWORD PTR [esp+0x3c],ebp
  429447:	mov    DWORD PTR [esp+0x30],ebx
  42944b:	call   DWORD PTR ds:0x4300c8
  429451:	mov    ecx,DWORD PTR [esp+0x14]
  429455:	mov    esi,ecx
  429457:	mov    DWORD PTR [esp+0x1c],esi
  42945b:	mov    edi,0x1
  429460:	mov    DWORD PTR [esp+0x4c],edi
  429464:	cmp    eax,ebx
  429466:	jne    0x42947f
  429468:	push   0x4308bc
  42946d:	mov    ecx,ebp
  42946f:	call   DWORD PTR ds:0x43011c
  429475:	mov    DWORD PTR [esp+0x18],edi
  429479:	push   esi
  42947a:	jmp    0x429568
  42947f:	push   ecx
  429480:	lea    ecx,[esp+0x28]
  429484:	call   DWORD PTR ds:0x43011c
  42948a:	mov    ecx,DWORD PTR [esp+0x38]
  42948e:	mov    BYTE PTR [esp+0x4c],0x2
  429493:	cmp    ecx,ebx
  429495:	je     0x42953f
  42949b:	mov    edi,DWORD PTR ds:0x430390
  4294a1:	lea    esi,[ecx-0x1]
  4294a4:	cmp    esi,ecx
  4294a6:	jbe    0x4294ae
  4294a8:	call   edi
  4294aa:	mov    ecx,DWORD PTR [esp+0x38]
  4294ae:	cmp    DWORD PTR [esp+0x3c],0x10
  4294b3:	mov    eax,DWORD PTR [esp+0x28]
  4294b7:	jae    0x4294bd
  4294b9:	lea    eax,[esp+0x28]
  4294bd:	cmp    BYTE PTR [eax+esi*1],0xa
  4294c1:	je     0x4294e5
  4294c3:	lea    esi,[ecx-0x1]
  4294c6:	cmp    esi,ecx
  4294c8:	jbe    0x4294d0
  4294ca:	call   edi
  4294cc:	mov    ecx,DWORD PTR [esp+0x38]
  4294d0:	cmp    DWORD PTR [esp+0x3c],0x10
  4294d5:	mov    eax,DWORD PTR [esp+0x28]
  4294d9:	jae    0x4294df
  4294db:	lea    eax,[esp+0x28]
  4294df:	cmp    BYTE PTR [eax+esi*1],0xd
  4294e3:	jne    0x429504
  4294e5:	mov    edx,DWORD PTR ds:0x4302c0
  4294eb:	mov    eax,DWORD PTR [edx]
  4294ed:	dec    ecx
  4294ee:	push   eax
  4294ef:	push   ecx
  4294f0:	lea    ecx,[esp+0x2c]
  4294f4:	call   DWORD PTR ds:0x4302bc
  4294fa:	mov    ecx,DWORD PTR [esp+0x38]
  4294fe:	cmp    ecx,ebx
  429500:	jne    0x4294a1
  429502:	jmp    0x42953f
  429504:	cmp    ecx,ebx
  429506:	je     0x42953f
  429508:	lea    esi,[ecx-0x1]
  42950b:	cmp    esi,ecx
  42950d:	jbe    0x429515
  42950f:	call   edi
  429511:	mov    ecx,DWORD PTR [esp+0x38]
  429515:	cmp    DWORD PTR [esp+0x3c],0x10
  42951a:	mov    eax,DWORD PTR [esp+0x28]
  42951e:	jae    0x429524
  429520:	lea    eax,[esp+0x28]
  429524:	cmp    BYTE PTR [eax+esi*1],0x2e
  429528:	jne    0x42953f
  42952a:	mov    edx,DWORD PTR ds:0x4302c0
  429530:	mov    eax,DWORD PTR [edx]
  429532:	dec    ecx
  429533:	push   eax
  429534:	push   ecx
  429535:	lea    ecx,[esp+0x2c]
  429539:	call   DWORD PTR ds:0x4302bc
  42953f:	lea    ecx,[esp+0x24]
  429543:	push   ecx
  429544:	mov    ecx,ebp
  429546:	call   DWORD PTR ds:0x430258
  42954c:	lea    ecx,[esp+0x24]
  429550:	mov    DWORD PTR [esp+0x18],0x1
  429558:	mov    BYTE PTR [esp+0x4c],0x1
  42955d:	call   DWORD PTR ds:0x43025c
  429563:	mov    edx,DWORD PTR [esp+0x1c]
  429567:	push   edx
  429568:	mov    BYTE PTR [esp+0x50],bl
  42956c:	call   DWORD PTR ds:0x4300fc
  429572:	mov    eax,ebp
  429574:	mov    ecx,DWORD PTR [esp+0x44]
  429578:	mov    DWORD PTR fs:0x0,ecx
  42957f:	pop    ecx
  429580:	pop    edi
  429581:	pop    esi
  429582:	pop    ebp
  429583:	pop    ebx
  429584:	mov    ecx,DWORD PTR [esp+0x2c]
  429588:	xor    ecx,esp
  42958a:	call   0x42503a
  42958f:	add    esp,0x3c
  429592:	ret    0x8
  429595:	int3   
  429596:	int3   
  429597:	int3   
  429598:	int3   
  429599:	int3   
  42959a:	int3   
  42959b:	int3   
  42959c:	int3   
  42959d:	int3   
  42959e:	int3   
  42959f:	int3   
  4295a0:	test   BYTE PTR [esp+0x4],0x1
  4295a5:	push   esi
  4295a6:	mov    esi,ecx
  4295a8:	mov    DWORD PTR [esi],0x430828
  4295ae:	je     0x4295b9
  4295b0:	push   esi
  4295b1:	call   0x42504a
  4295b6:	add    esp,0x4
  4295b9:	mov    eax,esi
  4295bb:	pop    esi
  4295bc:	ret    0x4
  4295bf:	int3   
  4295c0:	push   0xffffffff
  4295c2:	push   0x42aae2
  4295c7:	mov    eax,fs:0x0
  4295cd:	push   eax
  4295ce:	sub    esp,0x20
  4295d1:	push   ebx
  4295d2:	push   esi
  4295d3:	mov    eax,ds:0x43e020
  4295d8:	xor    eax,esp
  4295da:	push   eax
  4295db:	lea    eax,[esp+0x2c]
  4295df:	mov    fs:0x0,eax
  4295e5:	xor    ebx,ebx
  4295e7:	mov    DWORD PTR [esp+0xc],ebx
  4295eb:	test   BYTE PTR ds:0x43fe28,0x1
  4295f2:	jne    0x429624
  4295f4:	mov    eax,0x1
  4295f9:	or     DWORD PTR ds:0x43fe28,eax
  4295ff:	push   0x4308bc
  429604:	mov    ecx,0x43fe0c
  429609:	mov    DWORD PTR [esp+0x38],eax
  42960d:	call   DWORD PTR ds:0x43011c
  429613:	push   0x42f670
  429618:	call   0x425159
  42961d:	add    esp,0x4
  429620:	mov    BYTE PTR [esp+0x34],bl
  429624:	mov    eax,DWORD PTR [esp+0x40]
  429628:	push   eax
  429629:	call   DWORD PTR ds:0x43036c
  42962f:	add    esp,0x4
  429632:	test   eax,eax
  429634:	je     0x429654
  429636:	push   eax
  429637:	lea    ecx,[esp+0x14]
  42963b:	call   DWORD PTR ds:0x43011c
  429641:	mov    ebx,0x1
  429646:	mov    DWORD PTR [esp+0x34],0x2
  42964e:	mov    DWORD PTR [esp+0xc],ebx
  429652:	jmp    0x429659
  429654:	mov    eax,0x43fe0c
  429659:	mov    esi,DWORD PTR [esp+0x3c]
  42965d:	push   eax
  42965e:	mov    ecx,esi
  429660:	call   DWORD PTR ds:0x430258
  429666:	or     ebx,0x2
  429669:	mov    DWORD PTR [esp+0x34],0x0
  429671:	test   bl,0x1
  429674:	je     0x429687
  429676:	and    ebx,0xfffffffe
  429679:	lea    ecx,[esp+0x10]
  42967d:	mov    DWORD PTR [esp+0xc],ebx
  429681:	call   DWORD PTR ds:0x43025c
  429687:	mov    eax,esi
  429689:	mov    ecx,DWORD PTR [esp+0x2c]
  42968d:	mov    DWORD PTR fs:0x0,ecx
  429694:	pop    ecx
  429695:	pop    esi
  429696:	pop    ebx
  429697:	add    esp,0x2c
  42969a:	ret    0x8
  42969d:	int3   
  42969e:	int3   
  42969f:	int3   
  4296a0:	push   0xffffffff
  4296a2:	push   0x42ab0e
  4296a7:	mov    eax,fs:0x0
  4296ad:	push   eax
  4296ae:	mov    eax,ds:0x43e020
  4296b3:	xor    eax,esp
  4296b5:	push   eax
  4296b6:	lea    eax,[esp+0x4]
  4296ba:	mov    fs:0x0,eax
  4296c0:	mov    eax,0x1
  4296c5:	test   BYTE PTR ds:0x43fe30,al
  4296cb:	jne    0x4296f2
  4296cd:	or     DWORD PTR ds:0x43fe30,eax
  4296d3:	push   0x42f680
  4296d8:	mov    DWORD PTR [esp+0x10],0x0
  4296e0:	mov    DWORD PTR ds:0x43fe2c,0x430894
  4296ea:	call   0x425159
  4296ef:	add    esp,0x4
  4296f2:	mov    eax,0x43fe2c
  4296f7:	mov    ecx,DWORD PTR [esp+0x4]
  4296fb:	mov    DWORD PTR fs:0x0,ecx
  429702:	pop    ecx
  429703:	add    esp,0xc
  429706:	ret    
  429707:	int3   
  429708:	int3   
  429709:	int3   
  42970a:	int3   
  42970b:	int3   
  42970c:	int3   
  42970d:	int3   
  42970e:	int3   
  42970f:	int3   
  429710:	push   0xffffffff
  429712:	push   0x42ab3e
  429717:	mov    eax,fs:0x0
  42971d:	push   eax
  42971e:	mov    eax,ds:0x43e020
  429723:	xor    eax,esp
  429725:	push   eax
  429726:	lea    eax,[esp+0x4]
  42972a:	mov    fs:0x0,eax
  429730:	mov    eax,0x1
  429735:	test   BYTE PTR ds:0x43fe38,al
  42973b:	jne    0x429762
  42973d:	or     DWORD PTR ds:0x43fe38,eax
  429743:	push   0x42f690
  429748:	mov    DWORD PTR [esp+0x10],0x0
  429750:	mov    DWORD PTR ds:0x43fe34,0x4308d0
  42975a:	call   0x425159
  42975f:	add    esp,0x4
  429762:	mov    eax,0x43fe34
  429767:	mov    ecx,DWORD PTR [esp+0x4]
  42976b:	mov    DWORD PTR fs:0x0,ecx
  429772:	pop    ecx
  429773:	add    esp,0xc
  429776:	ret    
  429777:	int3   
  429778:	int3   
  429779:	int3   
  42977a:	int3   
  42977b:	int3   
  42977c:	int3   
  42977d:	int3   
  42977e:	int3   
  42977f:	int3   
  429780:	push   esi
  429781:	mov    esi,DWORD PTR [esp+0xc]
  429785:	cmp    esi,0x10b
  42978b:	jg     0x429901
  429791:	je     0x429871
  429797:	cmp    esi,0xd4
  42979d:	ja     0x429c5c
  4297a3:	movzx  eax,BYTE PTR [esi+0x429cb8]
  4297aa:	jmp    DWORD PTR [eax*4+0x429c70]
  4297b1:	call   0x429710
  4297b6:	mov    ecx,eax
  4297b8:	mov    eax,DWORD PTR [esp+0x8]
  4297bc:	mov    DWORD PTR [eax],0x0
  4297c2:	mov    DWORD PTR [eax+0x4],ecx
  4297c5:	pop    esi
  4297c6:	ret    0x8
  4297c9:	call   0x429710
  4297ce:	mov    ecx,eax
  4297d0:	mov    eax,DWORD PTR [esp+0x8]
  4297d4:	mov    DWORD PTR [eax],0x11
  4297da:	mov    DWORD PTR [eax+0x4],ecx
  4297dd:	pop    esi
  4297de:	ret    0x8
  4297e1:	call   0x429710
  4297e6:	mov    ecx,eax
  4297e8:	mov    eax,DWORD PTR [esp+0x8]
  4297ec:	mov    DWORD PTR [eax],0x13
  4297f2:	mov    DWORD PTR [eax+0x4],ecx
  4297f5:	pop    esi
  4297f6:	ret    0x8
  4297f9:	call   0x429710
  4297fe:	mov    ecx,eax
  429800:	mov    eax,DWORD PTR [esp+0x8]
  429804:	mov    DWORD PTR [eax],0x26
  42980a:	mov    DWORD PTR [eax+0x4],ecx
  42980d:	pop    esi
  42980e:	ret    0x8
  429811:	call   0x429710
  429816:	mov    ecx,eax
  429818:	mov    eax,DWORD PTR [esp+0x8]
  42981c:	mov    DWORD PTR [eax],0x29
  429822:	mov    DWORD PTR [eax+0x4],ecx
  429825:	pop    esi
  429826:	ret    0x8
  429829:	call   0x429710
  42982e:	mov    ecx,eax
  429830:	mov    eax,DWORD PTR [esp+0x8]
  429834:	mov    DWORD PTR [eax],0x1c
  42983a:	mov    DWORD PTR [eax+0x4],ecx
  42983d:	pop    esi
  42983e:	ret    0x8
  429841:	call   0x429710
  429846:	mov    ecx,eax
  429848:	mov    eax,DWORD PTR [esp+0x8]
  42984c:	mov    DWORD PTR [eax],0x2
  429852:	mov    DWORD PTR [eax+0x4],ecx
  429855:	pop    esi
  429856:	ret    0x8
  429859:	call   0x429710
  42985e:	mov    ecx,eax
  429860:	mov    eax,DWORD PTR [esp+0x8]
  429864:	mov    DWORD PTR [eax],0x28
  42986a:	mov    DWORD PTR [eax+0x4],ecx
  42986d:	pop    esi
  42986e:	ret    0x8
  429871:	call   0x429710
  429876:	mov    ecx,eax
  429878:	mov    eax,DWORD PTR [esp+0x8]
  42987c:	mov    DWORD PTR [eax],0x16
  429882:	mov    DWORD PTR [eax+0x4],ecx
  429885:	pop    esi
  429886:	ret    0x8
  429889:	call   0x429710
  42988e:	mov    ecx,eax
  429890:	mov    eax,DWORD PTR [esp+0x8]
  429894:	mov    DWORD PTR [eax],0x27
  42989a:	mov    DWORD PTR [eax+0x4],ecx
  42989d:	pop    esi
  42989e:	ret    0x8
  4298a1:	call   0x429710
  4298a6:	mov    ecx,eax
  4298a8:	mov    eax,DWORD PTR [esp+0x8]
  4298ac:	mov    DWORD PTR [eax],0xc
  4298b2:	mov    DWORD PTR [eax+0x4],ecx
  4298b5:	pop    esi
  4298b6:	ret    0x8
  4298b9:	call   0x429710
  4298be:	mov    ecx,eax
  4298c0:	mov    eax,DWORD PTR [esp+0x8]
  4298c4:	mov    DWORD PTR [eax],0xb
  4298ca:	mov    DWORD PTR [eax+0x4],ecx
  4298cd:	pop    esi
  4298ce:	ret    0x8
  4298d1:	call   0x429710
  4298d6:	mov    ecx,eax
  4298d8:	mov    eax,DWORD PTR [esp+0x8]
  4298dc:	mov    DWORD PTR [eax],0x12
  4298e2:	mov    DWORD PTR [eax+0x4],ecx
  4298e5:	pop    esi
  4298e6:	ret    0x8
  4298e9:	call   0x429710
  4298ee:	mov    ecx,eax
  4298f0:	mov    eax,DWORD PTR [esp+0x8]
  4298f4:	mov    DWORD PTR [eax],0x18
  4298fa:	mov    DWORD PTR [eax+0x4],ecx
  4298fd:	pop    esi
  4298fe:	ret    0x8
  429901:	cmp    esi,0x2714
  429907:	jg     0x4299b7
  42990d:	je     0x42999f
  429913:	cmp    esi,0x3f5
  429919:	jg     0x42996a
  42991b:	je     0x42993a
  42991d:	lea    eax,[esi-0x3e3]
  429923:	cmp    eax,0x11
  429926:	ja     0x429c5c
  42992c:	movzx  ecx,BYTE PTR [eax+0x429da0]
  429933:	jmp    DWORD PTR [ecx*4+0x429d90]
  42993a:	call   0x429710
  42993f:	mov    ecx,eax
  429941:	mov    eax,DWORD PTR [esp+0x8]
  429945:	mov    DWORD PTR [eax],0x5
  42994b:	mov    DWORD PTR [eax+0x4],ecx
  42994e:	pop    esi
  42994f:	ret    0x8
  429952:	call   0x429710
  429957:	mov    ecx,eax
  429959:	mov    eax,DWORD PTR [esp+0x8]
  42995d:	mov    DWORD PTR [eax],0x26c7
  429963:	mov    DWORD PTR [eax+0x4],ecx
  429966:	pop    esi
  429967:	ret    0x8
  42996a:	mov    eax,esi
  42996c:	sub    eax,0x4d5
  429971:	je     0x4298b9
  429977:	sub    eax,0x48c
  42997c:	je     0x429987
  42997e:	sub    eax,0x3
  429981:	jne    0x429c5c
  429987:	call   0x429710
  42998c:	mov    ecx,eax
  42998e:	mov    eax,DWORD PTR [esp+0x8]
  429992:	mov    DWORD PTR [eax],0x10
  429998:	mov    DWORD PTR [eax+0x4],ecx
  42999b:	pop    esi
  42999c:	ret    0x8
  42999f:	call   0x429710
  4299a4:	mov    ecx,eax
  4299a6:	mov    eax,DWORD PTR [esp+0x8]
  4299aa:	mov    DWORD PTR [eax],0x4
  4299b0:	mov    DWORD PTR [eax+0x4],ecx
  4299b3:	pop    esi
  4299b4:	ret    0x8
  4299b7:	lea    eax,[esi-0x2719]
  4299bd:	cmp    eax,0x38
  4299c0:	ja     0x429c5c
  4299c6:	movzx  edx,BYTE PTR [eax+0x429e30]
  4299cd:	jmp    DWORD PTR [edx*4+0x429db4]
  4299d4:	call   0x429710
  4299d9:	mov    ecx,eax
  4299db:	mov    eax,DWORD PTR [esp+0x8]
  4299df:	mov    DWORD PTR [eax],0xd
  4299e5:	mov    DWORD PTR [eax+0x4],ecx
  4299e8:	pop    esi
  4299e9:	ret    0x8
  4299ec:	call   0x429710
  4299f1:	mov    ecx,eax
  4299f3:	mov    eax,DWORD PTR [esp+0x8]
  4299f7:	mov    DWORD PTR [eax],0x26ae
  4299fd:	mov    DWORD PTR [eax+0x4],ecx
  429a00:	pop    esi
  429a01:	ret    0x8
  429a04:	call   0x429710
  429a09:	mov    ecx,eax
  429a0b:	mov    eax,DWORD PTR [esp+0x8]
  429a0f:	mov    DWORD PTR [eax],0x26af
  429a15:	mov    DWORD PTR [eax+0x4],ecx
  429a18:	pop    esi
  429a19:	ret    0x8
  429a1c:	call   0x429710
  429a21:	mov    ecx,eax
  429a23:	mov    eax,DWORD PTR [esp+0x8]
  429a27:	mov    DWORD PTR [eax],0x26ad
  429a2d:	mov    DWORD PTR [eax+0x4],ecx
  429a30:	pop    esi
  429a31:	ret    0x8
  429a34:	call   0x429710
  429a39:	mov    ecx,eax
  429a3b:	mov    eax,DWORD PTR [esp+0x8]
  429a3f:	mov    DWORD PTR [eax],0x26b3
  429a45:	mov    DWORD PTR [eax+0x4],ecx
  429a48:	pop    esi
  429a49:	ret    0x8
  429a4c:	call   0x429710
  429a51:	mov    ecx,eax
  429a53:	mov    eax,DWORD PTR [esp+0x8]
  429a57:	mov    DWORD PTR [eax],0x9
  429a5d:	mov    DWORD PTR [eax+0x4],ecx
  429a60:	pop    esi
  429a61:	ret    0x8
  429a64:	call   0x429710
  429a69:	mov    ecx,eax
  429a6b:	mov    eax,DWORD PTR [esp+0x8]
  429a6f:	mov    DWORD PTR [eax],0x26b2
  429a75:	mov    DWORD PTR [eax+0x4],ecx
  429a78:	pop    esi
  429a79:	ret    0x8
  429a7c:	call   0x429710
  429a81:	mov    ecx,eax
  429a83:	mov    eax,DWORD PTR [esp+0x8]
  429a87:	mov    DWORD PTR [eax],0x26b4
  429a8d:	mov    DWORD PTR [eax+0x4],ecx
  429a90:	pop    esi
  429a91:	ret    0x8
  429a94:	call   0x429710
  429a99:	mov    ecx,eax
  429a9b:	mov    eax,DWORD PTR [esp+0x8]
  429a9f:	mov    DWORD PTR [eax],0x26b5
  429aa5:	mov    DWORD PTR [eax+0x4],ecx
  429aa8:	pop    esi
  429aa9:	ret    0x8
  429aac:	call   0x429710
  429ab1:	mov    ecx,eax
  429ab3:	mov    eax,DWORD PTR [esp+0x8]
  429ab7:	mov    DWORD PTR [eax],0x26b6
  429abd:	mov    DWORD PTR [eax+0x4],ecx
  429ac0:	pop    esi
  429ac1:	ret    0x8
  429ac4:	call   0x429710
  429ac9:	mov    ecx,eax
  429acb:	mov    eax,DWORD PTR [esp+0x8]
  429acf:	mov    DWORD PTR [eax],0xe
  429ad5:	mov    DWORD PTR [eax+0x4],ecx
  429ad8:	pop    esi
  429ad9:	ret    0x8
  429adc:	call   0x429710
  429ae1:	mov    ecx,eax
  429ae3:	mov    eax,DWORD PTR [esp+0x8]
  429ae7:	mov    DWORD PTR [eax],0x26b7
  429aed:	mov    DWORD PTR [eax+0x4],ecx
  429af0:	pop    esi
  429af1:	ret    0x8
  429af4:	call   0x429710
  429af9:	mov    ecx,eax
  429afb:	mov    eax,DWORD PTR [esp+0x8]
  429aff:	mov    DWORD PTR [eax],0x26c8
  429b05:	mov    DWORD PTR [eax+0x4],ecx
  429b08:	pop    esi
  429b09:	ret    0x8
  429b0c:	call   0x429710
  429b11:	mov    ecx,eax
  429b13:	mov    eax,DWORD PTR [esp+0x8]
  429b17:	mov    DWORD PTR [eax],0x26b0
  429b1d:	mov    DWORD PTR [eax+0x4],ecx
  429b20:	pop    esi
  429b21:	ret    0x8
  429b24:	call   0x429710
  429b29:	mov    ecx,eax
  429b2b:	mov    eax,DWORD PTR [esp+0x8]
  429b2f:	mov    DWORD PTR [eax],0x26b9
  429b35:	mov    DWORD PTR [eax+0x4],ecx
  429b38:	pop    esi
  429b39:	ret    0x8
  429b3c:	call   0x429710
  429b41:	mov    ecx,eax
  429b43:	mov    eax,DWORD PTR [esp+0x8]
  429b47:	mov    DWORD PTR [eax],0x26ba
  429b4d:	mov    DWORD PTR [eax+0x4],ecx
  429b50:	pop    esi
  429b51:	ret    0x8
  429b54:	call   0x429710
  429b59:	mov    ecx,eax
  429b5b:	mov    eax,DWORD PTR [esp+0x8]
  429b5f:	mov    DWORD PTR [eax],0x26bb
  429b65:	mov    DWORD PTR [eax+0x4],ecx
  429b68:	pop    esi
  429b69:	ret    0x8
  429b6c:	call   0x429710
  429b71:	mov    ecx,eax
  429b73:	mov    eax,DWORD PTR [esp+0x8]
  429b77:	mov    DWORD PTR [eax],0x26bc
  429b7d:	mov    DWORD PTR [eax+0x4],ecx
  429b80:	pop    esi
  429b81:	ret    0x8
  429b84:	call   0x429710
  429b89:	mov    ecx,eax
  429b8b:	mov    eax,DWORD PTR [esp+0x8]
  429b8f:	mov    DWORD PTR [eax],0x26bd
  429b95:	mov    DWORD PTR [eax+0x4],ecx
  429b98:	pop    esi
  429b99:	ret    0x8
  429b9c:	call   0x429710
  429ba1:	mov    ecx,eax
  429ba3:	mov    eax,DWORD PTR [esp+0x8]
  429ba7:	mov    DWORD PTR [eax],0x26c1
  429bad:	mov    DWORD PTR [eax+0x4],ecx
  429bb0:	pop    esi
  429bb1:	ret    0x8
  429bb4:	call   0x429710
  429bb9:	mov    ecx,eax
  429bbb:	mov    eax,DWORD PTR [esp+0x8]
  429bbf:	mov    DWORD PTR [eax],0x26c5
  429bc5:	mov    DWORD PTR [eax+0x4],ecx
  429bc8:	pop    esi
  429bc9:	ret    0x8
  429bcc:	call   0x429710
  429bd1:	mov    ecx,eax
  429bd3:	mov    eax,DWORD PTR [esp+0x8]
  429bd7:	mov    DWORD PTR [eax],0x26c3
  429bdd:	mov    DWORD PTR [eax+0x4],ecx
  429be0:	pop    esi
  429be1:	ret    0x8
  429be4:	call   0x429710
  429be9:	mov    ecx,eax
  429beb:	mov    eax,DWORD PTR [esp+0x8]
  429bef:	mov    DWORD PTR [eax],0x26c9
  429bf5:	mov    DWORD PTR [eax+0x4],ecx
  429bf8:	pop    esi
  429bf9:	ret    0x8
  429bfc:	call   0x429710
  429c01:	mov    ecx,eax
  429c03:	mov    eax,DWORD PTR [esp+0x8]
  429c07:	mov    DWORD PTR [eax],0x26cd
  429c0d:	mov    DWORD PTR [eax+0x4],ecx
  429c10:	pop    esi
  429c11:	ret    0x8
  429c14:	call   0x429710
  429c19:	mov    ecx,eax
  429c1b:	mov    eax,DWORD PTR [esp+0x8]
  429c1f:	mov    DWORD PTR [eax],0x26d5
  429c25:	mov    DWORD PTR [eax+0x4],ecx
  429c28:	pop    esi
  429c29:	ret    0x8
  429c2c:	call   0x429710
  429c31:	mov    ecx,eax
  429c33:	mov    eax,DWORD PTR [esp+0x8]
  429c37:	mov    DWORD PTR [eax],0x26d2
  429c3d:	mov    DWORD PTR [eax+0x4],ecx
  429c40:	pop    esi
  429c41:	ret    0x8
  429c44:	call   0x429710
  429c49:	mov    ecx,eax
  429c4b:	mov    eax,DWORD PTR [esp+0x8]
  429c4f:	mov    DWORD PTR [eax],0x26ca
  429c55:	mov    DWORD PTR [eax+0x4],ecx
  429c58:	pop    esi
  429c59:	ret    0x8
  429c5c:	call   0x4296a0
  429c61:	mov    ecx,eax
  429c63:	mov    eax,DWORD PTR [esp+0x8]
  429c67:	mov    DWORD PTR [eax],esi
  429c69:	mov    DWORD PTR [eax+0x4],ecx
  429c6c:	pop    esi
  429c6d:	ret    0x8
  429c70:	mov    cl,0x97
  429c72:	inc    edx
  429c73:	add    BYTE PTR [ecx-0x68],bl
  429c76:	inc    edx
  429c77:	add    BYTE PTR [ecx-0x68],al
  429c7a:	inc    edx
  429c7b:	add    cl,ch
  429c7d:	cwde   
  429c7e:	inc    edx
  429c7f:	add    ah,dl
  429c81:	cdq    
  429c82:	inc    edx
  429c83:	add    BYTE PTR [ecx-0x68],dh
  429c86:	inc    edx
  429c87:	add    BYTE PTR [ecx-0x1effbd68],ah
  429c8d:	xchg   edi,eax
  429c8e:	inc    edx
  429c8f:	add    cl,dl
  429c91:	cwde   
  429c92:	inc    edx
  429c93:	add    BYTE PTR [ecx+0x3a004298],bh
  429c99:	cdq    
  429c9a:	inc    edx
  429c9b:	add    BYTE PTR [ecx+0x29004298],cl
  429ca1:	cwde   
  429ca2:	inc    edx
  429ca3:	add    cl,cl
  429ca5:	xchg   edi,eax
  429ca6:	inc    edx
  429ca7:	add    cl,bh
  429ca9:	xchg   edi,eax
  429caa:	inc    edx
  429cab:	add    BYTE PTR [edi+0x11004299],al
  429cb1:	cwde   
  429cb2:	inc    edx
  429cb3:	add    BYTE PTR [esp+ebx*4+0x42],bl
  429cb7:	add    BYTE PTR [eax],al
  429cb9:	add    DWORD PTR [edx],eax
  429cbb:	add    al,BYTE PTR [ebx]
  429cbd:	add    al,0x5
  429cbf:	adc    DWORD PTR [esi],eax
  429cc1:	adc    DWORD PTR [ecx],edx
  429cc3:	adc    DWORD PTR [ecx+edx*1],eax
  429cc6:	push   es
  429cc7:	pop    es
  429cc8:	add    al,0x8
  429cca:	adc    DWORD PTR [edi+eax*1],eax
  429ccd:	or     DWORD PTR [ecx],edx
  429ccf:	adc    DWORD PTR [ecx],edx
  429cd1:	or     dl,BYTE PTR [ecx]
  429cd3:	adc    DWORD PTR [ecx],edx
  429cd5:	or     cl,BYTE PTR [edx]
  429cd7:	adc    DWORD PTR [ebx+ecx*1],eax
  429cda:	adc    DWORD PTR [ecx],edx
  429cdc:	adc    DWORD PTR [ecx],edx
  429cde:	adc    DWORD PTR [ecx+edx*1],ecx
  429ce1:	adc    DWORD PTR [ecx],edx
  429ce3:	adc    DWORD PTR [ecx],edx
  429ce5:	adc    DWORD PTR [ecx],edx
  429ce7:	adc    DWORD PTR [ecx],edx
  429ce9:	adc    DWORD PTR [ecx],edx
  429ceb:	adc    DWORD PTR [ecx],edx
  429ced:	adc    DWORD PTR [ecx],edx
  429cef:	pop    es
  429cf0:	adc    DWORD PTR [ecx],edx
  429cf2:	adc    DWORD PTR [ecx],edx
  429cf4:	adc    DWORD PTR [ecx],edx
  429cf6:	adc    DWORD PTR [ecx],edx
  429cf8:	adc    DWORD PTR [ecx],edx
  429cfa:	adc    DWORD PTR [ecx],edx
  429cfc:	adc    DWORD PTR [ecx],edx
  429cfe:	adc    DWORD PTR [ecx],edx
  429d00:	adc    DWORD PTR [ecx],edx
  429d02:	adc    DWORD PTR [ecx],edx
  429d04:	adc    DWORD PTR [ecx],edx
  429d06:	adc    DWORD PTR [ecx],edx
  429d08:	or     eax,0x11110411
  429d0d:	adc    DWORD PTR [ecx],edx
  429d0f:	adc    DWORD PTR [ecx],edx
  429d11:	adc    DWORD PTR [ecx],edx
  429d13:	adc    DWORD PTR [ecx],edx
  429d15:	adc    DWORD PTR [ecx],edx
  429d17:	adc    DWORD PTR [ecx],edx
  429d19:	adc    DWORD PTR [ecx],edx
  429d1b:	adc    DWORD PTR [ecx],edx
  429d1d:	adc    DWORD PTR [ecx],edx
  429d1f:	adc    DWORD PTR [ecx],edx
  429d21:	adc    DWORD PTR [ecx],edx
  429d23:	adc    DWORD PTR [ecx],edx
  429d25:	adc    DWORD PTR [edx],ecx
  429d27:	push   cs
  429d28:	or     al,0x11
  429d2a:	adc    DWORD PTR [ecx],edx
  429d2c:	adc    DWORD PTR [ecx],edx
  429d2e:	adc    DWORD PTR [ecx],edx
  429d30:	adc    DWORD PTR [ecx],edx
  429d32:	adc    DWORD PTR ds:0x11111111,eax
  429d38:	adc    DWORD PTR [ecx],edx
  429d3a:	adc    DWORD PTR ds:0x11111111,eax
  429d40:	adc    DWORD PTR [ecx],edx
  429d42:	adc    DWORD PTR [ecx],edx
  429d44:	adc    DWORD PTR [ecx],edx
  429d46:	movups XMMWORD PTR [ecx],xmm2
  429d49:	adc    BYTE PTR [ecx],dl
  429d4b:	adc    DWORD PTR [ecx],edx
  429d4d:	adc    DWORD PTR [ecx],edx
  429d4f:	adc    DWORD PTR [ecx],edx
  429d51:	adc    DWORD PTR [ecx],edx
  429d53:	adc    DWORD PTR [ecx],edx
  429d55:	adc    DWORD PTR [ecx],edx
  429d57:	adc    DWORD PTR [ecx],edx
  429d59:	adc    DWORD PTR [ecx],edx
  429d5b:	adc    DWORD PTR [ecx],edx
  429d5d:	adc    DWORD PTR [ecx],edx
  429d5f:	adc    DWORD PTR [ecx],edx
  429d61:	adc    DWORD PTR [edi],ecx
  429d63:	adc    DWORD PTR [ecx],edx
  429d65:	adc    DWORD PTR [ecx],edx
  429d67:	adc    DWORD PTR [ecx],edx
  429d69:	adc    DWORD PTR [ecx],edx
  429d6b:	adc    DWORD PTR [ecx],edx
  429d6d:	adc    DWORD PTR [ecx],edx
  429d6f:	or     eax,0x11111111
  429d74:	adc    DWORD PTR [ecx],edx
  429d76:	adc    DWORD PTR [ecx],edx
  429d78:	adc    DWORD PTR [ecx],edx
  429d7a:	adc    DWORD PTR [ecx],edx
  429d7c:	adc    DWORD PTR [ecx],edx
  429d7e:	adc    DWORD PTR [ecx],edx
  429d80:	adc    DWORD PTR [ecx],edx
  429d82:	adc    DWORD PTR [ecx],edx
  429d84:	adc    DWORD PTR [ecx],edx
  429d86:	adc    DWORD PTR [ecx],edx
  429d88:	adc    DWORD PTR [ecx],edx
  429d8a:	adc    DWORD PTR [ecx],edx
  429d8c:	or     ecx,DWORD PTR [ebp-0x66adffb7]
  429d92:	inc    edx
  429d93:	add    ah,dl
  429d95:	cdq    
  429d96:	inc    edx
  429d97:	add    BYTE PTR [edx],bh
  429d99:	cdq    
  429d9a:	inc    edx
  429d9b:	add    BYTE PTR [esp+ebx*4+0x42],bl
  429d9f:	add    BYTE PTR [eax],al
  429da1:	add    eax,DWORD PTR [ebx]
  429da3:	add    DWORD PTR [ebx],eax
  429da5:	add    eax,DWORD PTR [ebx]
  429da7:	add    eax,DWORD PTR [ebx]
  429da9:	add    eax,DWORD PTR [ebx]
  429dab:	add    eax,DWORD PTR [ebx]
  429dad:	add    eax,DWORD PTR [ebx]
  429daf:	add    eax,DWORD PTR [edx]
  429db1:	add    cl,BYTE PTR [ebx+0x429a4cff]
  429db7:	add    ah,dl
  429db9:	cdq    
  429dba:	inc    edx
  429dbb:	add    ah,al
  429dbd:	call   0x42:0x98710042
  429dc4:	jmp    0x4442e061
  429dc9:	pushf  
  429dca:	inc    edx
  429dcb:	add    ah,dh
  429dcd:	call   0x42:0x9a340042
  429dd4:	int3   
  429dd5:	fwait
  429dd6:	inc    edx
  429dd7:	add    BYTE PTR [edx+ebx*4-0x64dbffbe],ch
  429dde:	inc    edx
  429ddf:	add    BYTE PTR [esp+ebx*4],dl
  429de2:	inc    edx
  429de3:	add    BYTE PTR [ebx+ebx*4-0x6403ffbe],bl
  429dea:	inc    edx
  429deb:	add    ah,ah
  429ded:	fwait
  429dee:	inc    edx
  429def:	add    BYTE PTR [edx+ebx*4],bl
  429df2:	inc    edx
  429df3:	add    ah,ch
  429df5:	cdq    
  429df6:	inc    edx
  429df7:	add    BYTE PTR [edx+ebx*4],al
  429dfa:	inc    edx
  429dfb:	add    BYTE PTR [ebx+ebx*4],bh
  429dfe:	inc    edx
  429dff:	add    BYTE PTR [ebx+ebx*4+0x42],ch
  429e03:	add    BYTE PTR [ebx+ebx*4+0x42],dl
  429e07:	add    BYTE PTR [edx+ebx*4+0x42],ah
  429e0b:	add    BYTE PTR [edx+ebx*4-0x647bffbe],dl
  429e12:	inc    edx
  429e13:	add    BYTE PTR [ebx+ebx*4],cl
  429e16:	inc    edx
  429e17:	add    BYTE PTR [ebx+ebx*4-0x63d3ffbe],dh
  429e1e:	inc    edx
  429e1f:	add    BYTE PTR [edx+ebx*4+0x42],bh
  429e23:	add    cl,bh
  429e25:	xchg   edi,eax
  429e26:	inc    edx
  429e27:	add    ah,bl
  429e29:	call   0x42:0x9c5c0042
  429e30:	add    BYTE PTR [esi],bl
  429e32:	push   ds
  429e33:	push   ds
  429e34:	add    DWORD PTR [edx],eax
  429e36:	push   ds
  429e37:	push   ds
  429e38:	push   ds
  429e39:	push   ds
  429e3a:	push   ds
  429e3b:	push   ds
  429e3c:	push   ds
  429e3d:	add    ebx,DWORD PTR [esi]
  429e3f:	add    al,0x1e
  429e41:	push   ds
  429e42:	push   ds
  429e43:	push   ds
  429e44:	push   ds
  429e45:	push   ds
  429e46:	push   ds
  429e47:	push   ds
  429e48:	push   ds
  429e49:	push   ds
  429e4a:	add    eax,0x9080706
  429e4f:	or     cl,BYTE PTR [ebx]
  429e51:	or     al,0xd
  429e53:	push   ds
  429e54:	push   cs
  429e55:	push   ds
  429e56:	movups xmm2,XMMWORD PTR [ecx]
  429e59:	adc    dl,BYTE PTR [ebx]
  429e5b:	adc    al,0x15
  429e5d:	push   ss
  429e5e:	pop    ss
  429e5f:	sbb    BYTE PTR [ecx],bl
  429e61:	push   ds
  429e62:	push   ds
  429e63:	sbb    bl,BYTE PTR [ebx]
  429e65:	push   ds
  429e66:	sbb    al,0x1e
  429e68:	sbb    eax,0x8825ffcc
  429e6d:	add    al,BYTE PTR [ebx+0x0]
  429e70:	jmp    DWORD PTR ds:0x430374
  429e76:	jmp    DWORD PTR ds:0x430370
  429e7c:	int3   
  429e7d:	int3   
  429e7e:	int3   
  429e7f:	int3   
  429e80:	push   edi
  429e81:	push   esi
  429e82:	push   ebx
  429e83:	xor    edi,edi
  429e85:	mov    eax,DWORD PTR [esp+0x14]
  429e89:	or     eax,eax
  429e8b:	jge    0x429ea1
  429e8d:	inc    edi
  429e8e:	mov    edx,DWORD PTR [esp+0x10]
  429e92:	neg    eax
  429e94:	neg    edx
  429e96:	sbb    eax,0x0
  429e99:	mov    DWORD PTR [esp+0x14],eax
  429e9d:	mov    DWORD PTR [esp+0x10],edx
  429ea1:	mov    eax,DWORD PTR [esp+0x1c]
  429ea5:	or     eax,eax
  429ea7:	jge    0x429ebd
  429ea9:	inc    edi
  429eaa:	mov    edx,DWORD PTR [esp+0x18]
  429eae:	neg    eax
  429eb0:	neg    edx
  429eb2:	sbb    eax,0x0
  429eb5:	mov    DWORD PTR [esp+0x1c],eax
  429eb9:	mov    DWORD PTR [esp+0x18],edx
  429ebd:	or     eax,eax
  429ebf:	jne    0x429ed9
  429ec1:	mov    ecx,DWORD PTR [esp+0x18]
  429ec5:	mov    eax,DWORD PTR [esp+0x14]
  429ec9:	xor    edx,edx
  429ecb:	div    ecx
  429ecd:	mov    ebx,eax
  429ecf:	mov    eax,DWORD PTR [esp+0x10]
  429ed3:	div    ecx
  429ed5:	mov    edx,ebx
  429ed7:	jmp    0x429f1a
  429ed9:	mov    ebx,eax
  429edb:	mov    ecx,DWORD PTR [esp+0x18]
  429edf:	mov    edx,DWORD PTR [esp+0x14]
  429ee3:	mov    eax,DWORD PTR [esp+0x10]
  429ee7:	shr    ebx,1
  429ee9:	rcr    ecx,1
  429eeb:	shr    edx,1
  429eed:	rcr    eax,1
  429eef:	or     ebx,ebx
  429ef1:	jne    0x429ee7
  429ef3:	div    ecx
  429ef5:	mov    esi,eax
  429ef7:	mul    DWORD PTR [esp+0x1c]
  429efb:	mov    ecx,eax
  429efd:	mov    eax,DWORD PTR [esp+0x18]
  429f01:	mul    esi
  429f03:	add    edx,ecx
  429f05:	jb     0x429f15
  429f07:	cmp    edx,DWORD PTR [esp+0x14]
  429f0b:	ja     0x429f15
  429f0d:	jb     0x429f16
  429f0f:	cmp    eax,DWORD PTR [esp+0x10]
  429f13:	jbe    0x429f16
  429f15:	dec    esi
  429f16:	xor    edx,edx
  429f18:	mov    eax,esi
  429f1a:	dec    edi
  429f1b:	jne    0x429f24
  429f1d:	neg    edx
  429f1f:	neg    eax
  429f21:	sbb    edx,0x0
  429f24:	pop    ebx
  429f25:	pop    esi
  429f26:	pop    edi
  429f27:	ret    0x10
  429f2a:	int3   
  429f2b:	int3   
  429f2c:	int3   
  429f2d:	int3   
  429f2e:	int3   
  429f2f:	int3   
  429f30:	mov    eax,DWORD PTR [esp+0x8]
  429f34:	mov    ecx,DWORD PTR [esp+0x10]
  429f38:	or     ecx,eax
  429f3a:	mov    ecx,DWORD PTR [esp+0xc]
  429f3e:	jne    0x429f49
  429f40:	mov    eax,DWORD PTR [esp+0x4]
  429f44:	mul    ecx
  429f46:	ret    0x10
  429f49:	push   ebx
  429f4a:	mul    ecx
  429f4c:	mov    ebx,eax
  429f4e:	mov    eax,DWORD PTR [esp+0x8]
  429f52:	mul    DWORD PTR [esp+0x14]
  429f56:	add    ebx,eax
  429f58:	mov    eax,DWORD PTR [esp+0x8]
  429f5c:	mul    ecx
  429f5e:	add    edx,ebx
  429f60:	pop    ebx
  429f61:	ret    0x10
  429f64:	int3   
  429f65:	int3   
  429f66:	int3   
  429f67:	int3   
  429f68:	int3   
  429f69:	int3   
  429f6a:	int3   
  429f6b:	int3   
  429f6c:	int3   
  429f6d:	int3   
  429f6e:	int3   
  429f6f:	int3   
  429f70:	push   ecx
  429f71:	lea    ecx,[esp+0x4]
  429f75:	sub    ecx,eax
  429f77:	sbb    eax,eax
  429f79:	not    eax
  429f7b:	and    ecx,eax
  429f7d:	mov    eax,esp
  429f7f:	and    eax,0xfffff000
  429f84:	cmp    ecx,eax
  429f86:	jb     0x429f92
  429f88:	mov    eax,ecx
  429f8a:	pop    ecx
  429f8b:	xchg   esp,eax
  429f8c:	mov    eax,DWORD PTR [eax]
  429f8e:	mov    DWORD PTR [esp],eax
  429f91:	ret    
  429f92:	sub    eax,0x1000
  429f97:	test   DWORD PTR [eax],eax
  429f99:	jmp    0x429f84
  429f9b:	int3   
  429f9c:	jmp    DWORD PTR ds:0x430368
  429fa2:	int3   
  429fa3:	int3   
  429fa4:	int3   
  429fa5:	int3   
  429fa6:	int3   
  429fa7:	int3   
  429fa8:	int3   
  429fa9:	int3   
  429faa:	int3   
  429fab:	int3   
  429fac:	int3   
  429fad:	int3   
  429fae:	int3   
  429faf:	int3   
  429fb0:	push   ebx
  429fb1:	push   esi
  429fb2:	mov    eax,DWORD PTR [esp+0x18]
  429fb6:	or     eax,eax
  429fb8:	jne    0x429fd2
  429fba:	mov    ecx,DWORD PTR [esp+0x14]
  429fbe:	mov    eax,DWORD PTR [esp+0x10]
  429fc2:	xor    edx,edx
  429fc4:	div    ecx
  429fc6:	mov    ebx,eax
  429fc8:	mov    eax,DWORD PTR [esp+0xc]
  429fcc:	div    ecx
  429fce:	mov    edx,ebx
  429fd0:	jmp    0x42a013
  429fd2:	mov    ecx,eax
  429fd4:	mov    ebx,DWORD PTR [esp+0x14]
  429fd8:	mov    edx,DWORD PTR [esp+0x10]
  429fdc:	mov    eax,DWORD PTR [esp+0xc]
  429fe0:	shr    ecx,1
  429fe2:	rcr    ebx,1
  429fe4:	shr    edx,1
  429fe6:	rcr    eax,1
  429fe8:	or     ecx,ecx
  429fea:	jne    0x429fe0
  429fec:	div    ebx
  429fee:	mov    esi,eax
  429ff0:	mul    DWORD PTR [esp+0x18]
  429ff4:	mov    ecx,eax
  429ff6:	mov    eax,DWORD PTR [esp+0x14]
  429ffa:	mul    esi
  429ffc:	add    edx,ecx
  429ffe:	jb     0x42a00e
  42a000:	cmp    edx,DWORD PTR [esp+0x10]
  42a004:	ja     0x42a00e
  42a006:	jb     0x42a00f
  42a008:	cmp    eax,DWORD PTR [esp+0xc]
  42a00c:	jbe    0x42a00f
  42a00e:	dec    esi
  42a00f:	xor    edx,edx
  42a011:	mov    eax,esi
  42a013:	pop    esi
  42a014:	pop    ebx
  42a015:	ret    0x10
  42a018:	jmp    DWORD PTR ds:0x4303b0
  42a01e:	int3   
  42a01f:	int3   
  42a020:	cmp    DWORD PTR ds:0x440568,0x0
  42a027:	je     0x42a056
  42a029:	push   ebp
  42a02a:	mov    ebp,esp
  42a02c:	sub    esp,0x8
  42a02f:	and    esp,0xfffffff8
  42a032:	fstp   QWORD PTR [esp]
  42a035:	cvttsd2si eax,QWORD PTR [esp]
  42a03a:	leave  
  42a03b:	ret    
  42a03c:	cmp    DWORD PTR ds:0x440568,0x0
  42a043:	je     0x42a056
  42a045:	sub    esp,0x4
  42a048:	fnstcw WORD PTR [esp]
  42a04b:	pop    eax
  42a04c:	and    ax,0x7f
  42a050:	cmp    ax,0x7f
  42a054:	je     0x42a029
  42a056:	push   ebp
  42a057:	mov    ebp,esp
  42a059:	sub    esp,0x20
  42a05c:	and    esp,0xfffffff0
  42a05f:	fld    st(0)
  42a061:	fst    DWORD PTR [esp+0x18]
  42a065:	fistp  QWORD PTR [esp+0x10]
  42a069:	fild   QWORD PTR [esp+0x10]
  42a06d:	mov    edx,DWORD PTR [esp+0x18]
  42a071:	mov    eax,DWORD PTR [esp+0x10]
  42a075:	test   eax,eax
  42a077:	je     0x42a0b5
  42a079:	fsubp  st(1),st
  42a07b:	test   edx,edx
  42a07d:	jns    0x42a09d
  42a07f:	fstp   DWORD PTR [esp]
  42a082:	mov    ecx,DWORD PTR [esp]
  42a085:	xor    ecx,0x80000000
  42a08b:	add    ecx,0x7fffffff
  42a091:	adc    eax,0x0
  42a094:	mov    edx,DWORD PTR [esp+0x14]
  42a098:	adc    edx,0x0
  42a09b:	jmp    0x42a0c9
  42a09d:	fstp   DWORD PTR [esp]
  42a0a0:	mov    ecx,DWORD PTR [esp]
  42a0a3:	add    ecx,0x7fffffff
  42a0a9:	sbb    eax,0x0
  42a0ac:	mov    edx,DWORD PTR [esp+0x14]
  42a0b0:	sbb    edx,0x0
  42a0b3:	jmp    0x42a0c9
  42a0b5:	mov    edx,DWORD PTR [esp+0x14]
  42a0b9:	test   edx,0x7fffffff
  42a0bf:	jne    0x42a079
  42a0c1:	fstp   DWORD PTR [esp+0x18]
  42a0c5:	fstp   DWORD PTR [esp+0x18]
  42a0c9:	leave  
  42a0ca:	ret    
  42a0cb:	int3   
  42a0cc:	int3   
  42a0cd:	int3   
  42a0ce:	int3   
  42a0cf:	int3   
  42a0d0:	push   esi
  42a0d1:	mov    eax,DWORD PTR [esp+0x14]
  42a0d5:	or     eax,eax
  42a0d7:	jne    0x42a101
  42a0d9:	mov    ecx,DWORD PTR [esp+0x10]
  42a0dd:	mov    eax,DWORD PTR [esp+0xc]
  42a0e1:	xor    edx,edx
  42a0e3:	div    ecx
  42a0e5:	mov    ebx,eax
  42a0e7:	mov    eax,DWORD PTR [esp+0x8]
  42a0eb:	div    ecx
  42a0ed:	mov    esi,eax
  42a0ef:	mov    eax,ebx
  42a0f1:	mul    DWORD PTR [esp+0x10]
  42a0f5:	mov    ecx,eax
  42a0f7:	mov    eax,esi
  42a0f9:	mul    DWORD PTR [esp+0x10]
  42a0fd:	add    edx,ecx
  42a0ff:	jmp    0x42a148
  42a101:	mov    ecx,eax
  42a103:	mov    ebx,DWORD PTR [esp+0x10]
  42a107:	mov    edx,DWORD PTR [esp+0xc]
  42a10b:	mov    eax,DWORD PTR [esp+0x8]
  42a10f:	shr    ecx,1
  42a111:	rcr    ebx,1
  42a113:	shr    edx,1
  42a115:	rcr    eax,1
  42a117:	or     ecx,ecx
  42a119:	jne    0x42a10f
  42a11b:	div    ebx
  42a11d:	mov    esi,eax
  42a11f:	mul    DWORD PTR [esp+0x14]
  42a123:	mov    ecx,eax
  42a125:	mov    eax,DWORD PTR [esp+0x10]
  42a129:	mul    esi
  42a12b:	add    edx,ecx
  42a12d:	jb     0x42a13d
  42a12f:	cmp    edx,DWORD PTR [esp+0xc]
  42a133:	ja     0x42a13d
  42a135:	jb     0x42a146
  42a137:	cmp    eax,DWORD PTR [esp+0x8]
  42a13b:	jbe    0x42a146
  42a13d:	dec    esi
  42a13e:	sub    eax,DWORD PTR [esp+0x10]
  42a142:	sbb    edx,DWORD PTR [esp+0x14]
  42a146:	xor    ebx,ebx
  42a148:	sub    eax,DWORD PTR [esp+0x8]
  42a14c:	sbb    edx,DWORD PTR [esp+0xc]
  42a150:	neg    edx
  42a152:	neg    eax
  42a154:	sbb    edx,0x0
  42a157:	mov    ecx,edx
  42a159:	mov    edx,ebx
  42a15b:	mov    ebx,ecx
  42a15d:	mov    ecx,eax
  42a15f:	mov    eax,esi
  42a161:	pop    esi
  42a162:	ret    0x10
  42a165:	push   0xc
  42a167:	push   0x43a330
  42a16c:	call   0x425670
  42a171:	and    DWORD PTR [ebp-0x4],0x0
  42a175:	movapd xmm0,xmm1
  42a179:	mov    DWORD PTR [ebp-0x1c],0x1
  42a180:	jmp    0x42a1a5
  42a182:	mov    eax,DWORD PTR [ebp-0x14]
  42a185:	mov    eax,DWORD PTR [eax]
  42a187:	mov    eax,DWORD PTR [eax]
  42a189:	cmp    eax,0xc0000005
  42a18e:	je     0x42a19a
  42a190:	cmp    eax,0xc000001d
  42a195:	je     0x42a19a
  42a197:	xor    eax,eax
  42a199:	ret    
  42a19a:	xor    eax,eax
  42a19c:	inc    eax
  42a19d:	ret    
  42a19e:	mov    esp,DWORD PTR [ebp-0x18]
  42a1a1:	and    DWORD PTR [ebp-0x1c],0x0
  42a1a5:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  42a1ac:	mov    eax,DWORD PTR [ebp-0x1c]
  42a1af:	call   0x4256b5
  42a1b4:	ret    
  42a1b5:	mov    edi,edi
  42a1b7:	push   ebp
  42a1b8:	mov    ebp,esp
  42a1ba:	sub    esp,0x18
  42a1bd:	xor    eax,eax
  42a1bf:	push   ebx
  42a1c0:	mov    DWORD PTR [ebp-0x4],eax
  42a1c3:	mov    DWORD PTR [ebp-0xc],eax
  42a1c6:	mov    DWORD PTR [ebp-0x8],eax
  42a1c9:	push   ebx
  42a1ca:	pushf  
  42a1cb:	pop    eax
  42a1cc:	mov    ecx,eax
  42a1ce:	xor    eax,0x200000
  42a1d3:	push   eax
  42a1d4:	popf   
  42a1d5:	pushf  
  42a1d6:	pop    edx
  42a1d7:	sub    edx,ecx
  42a1d9:	je     0x42a1fa
  42a1db:	push   ecx
  42a1dc:	popf   
  42a1dd:	xor    eax,eax
  42a1df:	cpuid  
  42a1e1:	mov    DWORD PTR [ebp-0xc],eax
  42a1e4:	mov    DWORD PTR [ebp-0x18],ebx
  42a1e7:	mov    DWORD PTR [ebp-0x14],edx
  42a1ea:	mov    DWORD PTR [ebp-0x10],ecx
  42a1ed:	mov    eax,0x1
  42a1f2:	cpuid  
  42a1f4:	mov    DWORD PTR [ebp-0x4],edx
  42a1f7:	mov    DWORD PTR [ebp-0x8],eax
  42a1fa:	pop    ebx
  42a1fb:	test   DWORD PTR [ebp-0x4],0x4000000
  42a202:	je     0x42a212
  42a204:	call   0x42a165
  42a209:	test   eax,eax
  42a20b:	je     0x42a212
  42a20d:	xor    eax,eax
  42a20f:	inc    eax
  42a210:	jmp    0x42a214
  42a212:	xor    eax,eax
  42a214:	pop    ebx
  42a215:	leave  
  42a216:	ret    
  42a217:	call   0x42a1b5
  42a21c:	mov    ds:0x440568,eax
  42a221:	xor    eax,eax
  42a223:	ret    
  42a224:	int3   
  42a225:	int3   
  42a226:	int3   
  42a227:	int3   
  42a228:	int3   
  42a229:	int3   
  42a22a:	int3   
  42a22b:	int3   
  42a22c:	int3   
  42a22d:	int3   
  42a22e:	int3   
  42a22f:	int3   
  42a230:	lea    ecx,[ebp-0x28]
  42a233:	jmp    DWORD PTR ds:0x43025c
  42a239:	mov    ecx,DWORD PTR [ebp-0x2c]
  42a23c:	jmp    0x420590
  42a241:	mov    edx,DWORD PTR [esp+0x8]
  42a245:	lea    eax,[edx-0x24]
  42a248:	mov    ecx,DWORD PTR [edx-0x28]
  42a24b:	xor    ecx,eax
  42a24d:	call   0x42503a
  42a252:	mov    eax,0x434cf4
  42a257:	jmp    0x429e70
  42a25c:	int3   
  42a25d:	int3   
  42a25e:	int3   
  42a25f:	int3   
  42a260:	lea    ecx,[ebp-0x30]
  42a263:	jmp    DWORD PTR ds:0x43025c
  42a269:	mov    edx,DWORD PTR [esp+0x8]
  42a26d:	lea    eax,[edx+0xc]
  42a270:	mov    ecx,DWORD PTR [edx-0x34]
  42a273:	xor    ecx,eax
  42a275:	call   0x42503a
  42a27a:	mov    eax,0x434d54
  42a27f:	jmp    0x429e70
  42a284:	int3   
  42a285:	int3   
  42a286:	int3   
  42a287:	int3   
  42a288:	int3   
  42a289:	int3   
  42a28a:	int3   
  42a28b:	int3   
  42a28c:	int3   
  42a28d:	int3   
  42a28e:	int3   
  42a28f:	int3   
  42a290:	lea    ecx,[ebp-0x2c]
  42a293:	jmp    DWORD PTR ds:0x43025c
  42a299:	mov    edx,DWORD PTR [esp+0x8]
  42a29d:	lea    eax,[edx-0x30]
  42a2a0:	mov    ecx,DWORD PTR [edx-0x34]
  42a2a3:	xor    ecx,eax
  42a2a5:	call   0x42503a
  42a2aa:	add    eax,0xc
  42a2ad:	mov    ecx,DWORD PTR [edx-0x4]
  42a2b0:	xor    ecx,eax
  42a2b2:	call   0x42503a
  42a2b7:	mov    eax,0x434d80
  42a2bc:	jmp    0x429e70
  42a2c1:	int3   
  42a2c2:	int3   
  42a2c3:	int3   
  42a2c4:	int3   
  42a2c5:	int3   
  42a2c6:	int3   
  42a2c7:	int3   
  42a2c8:	int3   
  42a2c9:	int3   
  42a2ca:	int3   
  42a2cb:	int3   
  42a2cc:	int3   
  42a2cd:	int3   
  42a2ce:	int3   
  42a2cf:	int3   
  42a2d0:	lea    ecx,[ebp-0x214]
  42a2d6:	jmp    0x425c10
  42a2db:	mov    edx,DWORD PTR [esp+0x8]
  42a2df:	lea    eax,[edx-0x220]
  42a2e5:	mov    ecx,DWORD PTR [edx-0x224]
  42a2eb:	xor    ecx,eax
  42a2ed:	call   0x42503a
  42a2f2:	add    eax,0x10
  42a2f5:	mov    ecx,DWORD PTR [edx-0x4]
  42a2f8:	xor    ecx,eax
  42a2fa:	call   0x42503a
  42a2ff:	mov    eax,0x434de8
  42a304:	jmp    0x429e70
  42a309:	int3   
  42a30a:	int3   
  42a30b:	int3   
  42a30c:	int3   
  42a30d:	int3   
  42a30e:	int3   
  42a30f:	int3   
  42a310:	lea    ecx,[ebp-0x114]
  42a316:	jmp    0x425c10
  42a31b:	mov    edx,DWORD PTR [esp+0x8]
  42a31f:	lea    eax,[edx-0x120]
  42a325:	mov    ecx,DWORD PTR [edx-0x124]
  42a32b:	xor    ecx,eax
  42a32d:	call   0x42503a
  42a332:	add    eax,0x10
  42a335:	mov    ecx,DWORD PTR [edx-0x4]
  42a338:	xor    ecx,eax
  42a33a:	call   0x42503a
  42a33f:	mov    eax,0x434e14
  42a344:	jmp    0x429e70
  42a349:	int3   
  42a34a:	int3   
  42a34b:	int3   
  42a34c:	int3   
  42a34d:	int3   
  42a34e:	int3   
  42a34f:	int3   
  42a350:	mov    eax,DWORD PTR [ebp-0x10]
  42a353:	push   eax
  42a354:	call   0x42504a
  42a359:	pop    ecx
  42a35a:	ret    
  42a35b:	mov    edx,DWORD PTR [esp+0x8]
  42a35f:	lea    eax,[edx-0x10]
  42a362:	mov    ecx,DWORD PTR [edx-0x14]
  42a365:	xor    ecx,eax
  42a367:	call   0x42503a
  42a36c:	mov    eax,0x434e40
  42a371:	jmp    0x429e70
  42a376:	int3   
  42a377:	int3   
  42a378:	int3   
  42a379:	int3   
  42a37a:	int3   
  42a37b:	int3   
  42a37c:	int3   
  42a37d:	int3   
  42a37e:	int3   
  42a37f:	int3   
  42a380:	lea    ecx,[ebp-0x1c]
  42a383:	jmp    DWORD PTR ds:0x430184
  42a389:	mov    edx,DWORD PTR [esp+0x8]
  42a38d:	lea    eax,[edx-0x24]
  42a390:	mov    ecx,DWORD PTR [edx-0x28]
  42a393:	xor    ecx,eax
  42a395:	call   0x42503a
  42a39a:	mov    eax,0x434e6c
  42a39f:	jmp    0x429e70
  42a3a4:	int3   
  42a3a5:	int3   
  42a3a6:	int3   
  42a3a7:	int3   
  42a3a8:	int3   
  42a3a9:	int3   
  42a3aa:	int3   
  42a3ab:	int3   
  42a3ac:	int3   
  42a3ad:	int3   
  42a3ae:	int3   
  42a3af:	int3   
  42a3b0:	lea    ecx,[ebp-0x14]
  42a3b3:	jmp    DWORD PTR ds:0x430180
  42a3b9:	mov    eax,DWORD PTR [ebp-0x10]
  42a3bc:	push   eax
  42a3bd:	call   0x42504a
  42a3c2:	pop    ecx
  42a3c3:	ret    
  42a3c4:	mov    edx,DWORD PTR [esp+0x8]
  42a3c8:	lea    eax,[edx-0xc]
  42a3cb:	mov    ecx,DWORD PTR [edx-0x10]
  42a3ce:	xor    ecx,eax
  42a3d0:	call   0x42503a
  42a3d5:	mov    eax,0x434ea0
  42a3da:	jmp    0x429e70
  42a3df:	int3   
  42a3e0:	mov    eax,ds:0x43fd68
  42a3e5:	and    eax,0xfffffffe
  42a3e8:	mov    ds:0x43fd68,eax
  42a3ed:	ret    
  42a3ee:	mov    edx,DWORD PTR [esp+0x8]
  42a3f2:	lea    eax,[edx]
  42a3f4:	mov    ecx,DWORD PTR [edx-0x4]
  42a3f7:	xor    ecx,eax
  42a3f9:	call   0x42503a
  42a3fe:	mov    eax,0x434ecc
  42a403:	jmp    0x429e70
  42a408:	int3   
  42a409:	int3   
  42a40a:	int3   
  42a40b:	int3   
  42a40c:	int3   
  42a40d:	int3   
  42a40e:	int3   
  42a40f:	int3   
  42a410:	mov    eax,ds:0x43fd70
  42a415:	and    eax,0xfffffffe
  42a418:	mov    ds:0x43fd70,eax
  42a41d:	ret    
  42a41e:	mov    edx,DWORD PTR [esp+0x8]
  42a422:	lea    eax,[edx]
  42a424:	mov    ecx,DWORD PTR [edx-0x4]
  42a427:	xor    ecx,eax
  42a429:	call   0x42503a
  42a42e:	mov    eax,0x434ef8
  42a433:	jmp    0x429e70
  42a438:	int3   
  42a439:	int3   
  42a43a:	int3   
  42a43b:	int3   
  42a43c:	int3   
  42a43d:	int3   
  42a43e:	int3   
  42a43f:	int3   
  42a440:	mov    ecx,DWORD PTR [ebp-0x30]
  42a443:	jmp    DWORD PTR ds:0x430264
  42a449:	lea    ecx,[ebp-0x2c]
  42a44c:	jmp    DWORD PTR ds:0x430264
  42a452:	mov    edx,DWORD PTR [esp+0x8]
  42a456:	lea    eax,[edx-0x30]
  42a459:	mov    ecx,DWORD PTR [edx-0x34]
  42a45c:	xor    ecx,eax
  42a45e:	call   0x42503a
  42a463:	add    eax,0xc
  42a466:	mov    ecx,DWORD PTR [edx-0x4]
  42a469:	xor    ecx,eax
  42a46b:	call   0x42503a
  42a470:	mov    eax,0x434f2c
  42a475:	jmp    0x429e70
  42a47a:	int3   
  42a47b:	int3   
  42a47c:	int3   
  42a47d:	int3   
  42a47e:	int3   
  42a47f:	int3   
  42a480:	mov    eax,DWORD PTR [ebp-0x48]
  42a483:	and    eax,0x1
  42a486:	je     0x42a498
  42a48c:	and    DWORD PTR [ebp-0x48],0xfffffffe
  42a490:	lea    ecx,[ebp-0x44]
  42a493:	jmp    0x40cd30
  42a498:	ret    
  42a499:	mov    eax,DWORD PTR [ebp-0x48]
  42a49c:	and    eax,0x2
  42a49f:	je     0x42a4b1
  42a4a5:	and    DWORD PTR [ebp-0x48],0xfffffffd
  42a4a9:	lea    ecx,[ebp-0x28]
  42a4ac:	jmp    0x40cd30
  42a4b1:	ret    
  42a4b2:	mov    eax,DWORD PTR [ebp-0x48]
  42a4b5:	and    eax,0x4
  42a4b8:	je     0x42a4ca
  42a4be:	and    DWORD PTR [ebp-0x48],0xfffffffb
  42a4c2:	mov    ecx,DWORD PTR [ebp+0x4]
  42a4c5:	jmp    0x40cd30
  42a4ca:	ret    
  42a4cb:	mov    edx,DWORD PTR [esp+0x8]
  42a4cf:	lea    eax,[edx-0x48]
  42a4d2:	mov    ecx,DWORD PTR [edx-0x4c]
  42a4d5:	xor    ecx,eax
  42a4d7:	call   0x42503a
  42a4dc:	mov    eax,0x434f68
  42a4e1:	jmp    0x429e70
  42a4e6:	int3   
  42a4e7:	int3   
  42a4e8:	int3   
  42a4e9:	int3   
  42a4ea:	int3   
  42a4eb:	int3   
  42a4ec:	int3   
  42a4ed:	int3   
  42a4ee:	int3   
  42a4ef:	int3   
  42a4f0:	mov    ecx,DWORD PTR [ebp-0x10]
  42a4f3:	jmp    0x420590
  42a4f8:	mov    edx,DWORD PTR [esp+0x8]
  42a4fc:	lea    eax,[edx-0x8]
  42a4ff:	mov    ecx,DWORD PTR [edx-0xc]
  42a502:	xor    ecx,eax
  42a504:	call   0x42503a
  42a509:	mov    eax,0x434f94
  42a50e:	jmp    0x429e70
  42a513:	int3   
  42a514:	int3   
  42a515:	int3   
  42a516:	int3   
  42a517:	int3   
  42a518:	int3   
  42a519:	int3   
  42a51a:	int3   
  42a51b:	int3   
  42a51c:	int3   
  42a51d:	int3   
  42a51e:	int3   
  42a51f:	int3   
  42a520:	lea    ecx,[ebp-0x27c]
  42a526:	jmp    DWORD PTR ds:0x430264
  42a52c:	mov    edx,DWORD PTR [esp+0x8]
  42a530:	lea    eax,[edx-0x28c]
  42a536:	mov    ecx,DWORD PTR [edx-0x290]
  42a53c:	xor    ecx,eax
  42a53e:	call   0x42503a
  42a543:	add    eax,0x10
  42a546:	mov    ecx,DWORD PTR [edx-0x4]
  42a549:	xor    ecx,eax
  42a54b:	call   0x42503a
  42a550:	mov    eax,0x434fc0
  42a555:	jmp    0x429e70
  42a55a:	int3   
  42a55b:	int3   
  42a55c:	int3   
  42a55d:	int3   
  42a55e:	int3   
  42a55f:	int3   
  42a560:	mov    ecx,DWORD PTR [ebp-0x10]
  42a563:	jmp    0x40cd30
  42a568:	mov    ecx,DWORD PTR [ebp-0x10]
  42a56b:	add    ecx,0x1c
  42a56e:	jmp    0x40cd30
  42a573:	mov    edx,DWORD PTR [esp+0x8]
  42a577:	lea    eax,[edx-0x8]
  42a57a:	mov    ecx,DWORD PTR [edx-0xc]
  42a57d:	xor    ecx,eax
  42a57f:	call   0x42503a
  42a584:	mov    eax,0x434ff4
  42a589:	jmp    0x429e70
  42a58e:	int3   
  42a58f:	int3   
  42a590:	lea    ecx,[ebp+0x4]
  42a593:	jmp    0x426dd0
  42a598:	lea    ecx,[ebp-0x14]
  42a59b:	jmp    0x425c10
  42a5a0:	mov    edx,DWORD PTR [esp+0x8]
  42a5a4:	lea    eax,[edx-0x14]
  42a5a7:	mov    ecx,DWORD PTR [edx-0x18]
  42a5aa:	xor    ecx,eax
  42a5ac:	call   0x42503a
  42a5b1:	mov    eax,0x435028
  42a5b6:	jmp    0x429e70
  42a5bb:	int3   
  42a5bc:	int3   
  42a5bd:	int3   
  42a5be:	int3   
  42a5bf:	int3   
  42a5c0:	mov    edx,DWORD PTR [esp+0x8]
  42a5c4:	lea    eax,[edx+0xc]
  42a5c7:	mov    ecx,DWORD PTR [edx-0x14]
  42a5ca:	xor    ecx,eax
  42a5cc:	call   0x42503a
  42a5d1:	mov    eax,0x435080
  42a5d6:	jmp    0x429e70
  42a5db:	int3   
  42a5dc:	int3   
  42a5dd:	int3   
  42a5de:	int3   
  42a5df:	int3   
  42a5e0:	lea    ecx,[ebp-0x30]
  42a5e3:	jmp    DWORD PTR ds:0x43025c
  42a5e9:	lea    ecx,[ebp-0x4c]
  42a5ec:	jmp    DWORD PTR ds:0x43025c
  42a5f2:	mov    edx,DWORD PTR [esp+0x8]
  42a5f6:	lea    eax,[edx+0xc]
  42a5f9:	mov    ecx,DWORD PTR [edx-0x50]
  42a5fc:	xor    ecx,eax
  42a5fe:	call   0x42503a
  42a603:	mov    eax,0x4350e8
  42a608:	jmp    0x429e70
  42a60d:	int3   
  42a60e:	int3   
  42a60f:	int3   
  42a610:	mov    ecx,DWORD PTR [ebp-0x14]
  42a613:	jmp    0x425ab0
  42a618:	mov    ecx,DWORD PTR [ebp-0x14]
  42a61b:	add    ecx,0x4c
  42a61e:	jmp    0x4270b0
  42a623:	mov    eax,DWORD PTR [ebp+0x8]
  42a626:	push   eax
  42a627:	call   0x42504a
  42a62c:	pop    ecx
  42a62d:	ret    
  42a62e:	mov    edx,DWORD PTR [esp+0x8]
  42a632:	lea    eax,[edx+0xc]
  42a635:	mov    ecx,DWORD PTR [edx-0x18]
  42a638:	xor    ecx,eax
  42a63a:	call   0x42503a
  42a63f:	mov    eax,0x435130
  42a644:	jmp    0x429e70
  42a649:	int3   
  42a64a:	int3   
  42a64b:	int3   
  42a64c:	int3   
  42a64d:	int3   
  42a64e:	int3   
  42a64f:	int3   
  42a650:	mov    ecx,DWORD PTR [ebp-0x14]
  42a653:	jmp    0x425ab0
  42a658:	mov    ecx,DWORD PTR [ebp-0x14]
  42a65b:	add    ecx,0x4c
  42a65e:	jmp    0x4270b0
  42a663:	mov    eax,DWORD PTR [ebp+0x8]
  42a666:	push   eax
  42a667:	call   0x42504a
  42a66c:	pop    ecx
  42a66d:	ret    
  42a66e:	mov    edx,DWORD PTR [esp+0x8]
  42a672:	lea    eax,[edx+0xc]
  42a675:	mov    ecx,DWORD PTR [edx-0x18]
  42a678:	xor    ecx,eax
  42a67a:	call   0x42503a
  42a67f:	mov    eax,0x4351a0
  42a684:	jmp    0x429e70
  42a689:	int3   
  42a68a:	int3   
  42a68b:	int3   
  42a68c:	int3   
  42a68d:	int3   
  42a68e:	int3   
  42a68f:	int3   
  42a690:	lea    ecx,[ebp-0x44]
  42a693:	jmp    DWORD PTR ds:0x43025c
  42a699:	lea    ecx,[ebp-0x28]
  42a69c:	jmp    DWORD PTR ds:0x43025c
  42a6a2:	mov    edx,DWORD PTR [esp+0x8]
  42a6a6:	lea    eax,[edx-0x40]
  42a6a9:	mov    ecx,DWORD PTR [edx-0x44]
  42a6ac:	xor    ecx,eax
  42a6ae:	call   0x42503a
  42a6b3:	mov    eax,0x43523c
  42a6b8:	jmp    0x429e70
  42a6bd:	int3   
  42a6be:	int3   
  42a6bf:	int3   
  42a6c0:	lea    ecx,[ebp-0x7c]
  42a6c3:	jmp    DWORD PTR ds:0x43025c
  42a6c9:	mov    edx,DWORD PTR [esp+0x8]
  42a6cd:	lea    eax,[edx-0x78]
  42a6d0:	mov    ecx,DWORD PTR [edx-0x7c]
  42a6d3:	xor    ecx,eax
  42a6d5:	call   0x42503a
  42a6da:	mov    eax,0x435268
  42a6df:	jmp    0x429e70
  42a6e4:	int3   
  42a6e5:	int3   
  42a6e6:	int3   
  42a6e7:	int3   
  42a6e8:	int3   
  42a6e9:	int3   
  42a6ea:	int3   
  42a6eb:	int3   
  42a6ec:	int3   
  42a6ed:	int3   
  42a6ee:	int3   
  42a6ef:	int3   
  42a6f0:	lea    ecx,[ebp-0x28]
  42a6f3:	jmp    DWORD PTR ds:0x43025c
  42a6f9:	mov    edx,DWORD PTR [esp+0x8]
  42a6fd:	lea    eax,[edx-0x24]
  42a700:	mov    ecx,DWORD PTR [edx-0x28]
  42a703:	xor    ecx,eax
  42a705:	call   0x42503a
  42a70a:	mov    eax,0x435294
  42a70f:	jmp    0x429e70
  42a714:	int3   
  42a715:	int3   
  42a716:	int3   
  42a717:	int3   
  42a718:	int3   
  42a719:	int3   
  42a71a:	int3   
  42a71b:	int3   
  42a71c:	int3   
  42a71d:	int3   
  42a71e:	int3   
  42a71f:	int3   
  42a720:	lea    ecx,[ebp-0x44]
  42a723:	jmp    DWORD PTR ds:0x43025c
  42a729:	lea    ecx,[ebp-0x28]
  42a72c:	jmp    DWORD PTR ds:0x43025c
  42a732:	mov    edx,DWORD PTR [esp+0x8]
  42a736:	lea    eax,[edx-0x50]
  42a739:	mov    ecx,DWORD PTR [edx-0x54]
  42a73c:	xor    ecx,eax
  42a73e:	call   0x42503a
  42a743:	mov    eax,0x4352c8
  42a748:	jmp    0x429e70
  42a74d:	int3   
  42a74e:	int3   
  42a74f:	int3   
  42a750:	lea    ecx,[ebp-0x4034]
  42a756:	jmp    0x40cd30
  42a75b:	lea    ecx,[ebp-0x4050]
  42a761:	jmp    0x40cd30
  42a766:	lea    ecx,[ebp-0x4070]
  42a76c:	jmp    0x426dd0
  42a771:	lea    ecx,[ebp-0x406c]
  42a777:	jmp    DWORD PTR ds:0x43025c
  42a77d:	mov    eax,DWORD PTR [ebp-0x4078]
  42a783:	and    eax,0x1
  42a786:	je     0x42a79e
  42a78c:	and    DWORD PTR [ebp-0x4078],0xfffffffe
  42a793:	mov    ecx,DWORD PTR [ebp-0x407c]
  42a799:	jmp    0x40cd30
  42a79e:	ret    
  42a79f:	lea    ecx,[ebp-0x406c]
  42a7a5:	jmp    DWORD PTR ds:0x43025c
  42a7ab:	mov    edx,DWORD PTR [esp+0x8]
  42a7af:	lea    eax,[edx-0x4080]
  42a7b5:	mov    ecx,DWORD PTR [edx-0x4084]
  42a7bb:	xor    ecx,eax
  42a7bd:	call   0x42503a
  42a7c2:	add    eax,0x10
  42a7c5:	mov    ecx,DWORD PTR [edx-0x4]
  42a7c8:	xor    ecx,eax
  42a7ca:	call   0x42503a
  42a7cf:	mov    eax,0x4352ec
  42a7d4:	jmp    0x429e70
  42a7d9:	int3   
  42a7da:	int3   
  42a7db:	int3   
  42a7dc:	int3   
  42a7dd:	int3   
  42a7de:	int3   
  42a7df:	int3   
  42a7e0:	lea    ecx,[ebp-0x28]
  42a7e3:	jmp    0x40cd30
  42a7e8:	lea    ecx,[ebp+0x8]
  42a7eb:	jmp    0x426dd0
  42a7f0:	mov    edx,DWORD PTR [esp+0x8]
  42a7f4:	lea    eax,[edx-0x2c]
  42a7f7:	mov    ecx,DWORD PTR [edx-0x30]
  42a7fa:	xor    ecx,eax
  42a7fc:	call   0x42503a
  42a801:	mov    eax,0x435360
  42a806:	jmp    0x429e70
  42a80b:	int3   
  42a80c:	int3   
  42a80d:	int3   
  42a80e:	int3   
  42a80f:	int3   
  42a810:	lea    ecx,[ebp-0x2c]
  42a813:	jmp    DWORD PTR ds:0x430264
  42a819:	lea    ecx,[ebp-0xb8]
  42a81f:	jmp    DWORD PTR ds:0x43025c
  42a825:	lea    ecx,[ebp-0x9c]
  42a82b:	jmp    0x40cd30
  42a830:	lea    ecx,[ebp-0xb8]
  42a836:	jmp    0x40cd30
  42a83b:	mov    edx,DWORD PTR [esp+0x8]
  42a83f:	lea    eax,[edx-0xd4]
  42a845:	mov    ecx,DWORD PTR [edx-0xd8]
  42a84b:	xor    ecx,eax
  42a84d:	call   0x42503a
  42a852:	add    eax,0x10
  42a855:	mov    ecx,DWORD PTR [edx-0x4]
  42a858:	xor    ecx,eax
  42a85a:	call   0x42503a
  42a85f:	mov    eax,0x4353a4
  42a864:	jmp    0x429e70
  42a869:	int3   
  42a86a:	int3   
  42a86b:	int3   
  42a86c:	int3   
  42a86d:	int3   
  42a86e:	int3   
  42a86f:	int3   
  42a870:	lea    ecx,[ebp-0x2c]
  42a873:	jmp    0x40cd30
  42a878:	mov    edx,DWORD PTR [esp+0x8]
  42a87c:	lea    eax,[edx-0x28]
  42a87f:	mov    ecx,DWORD PTR [edx-0x2c]
  42a882:	xor    ecx,eax
  42a884:	call   0x42503a
  42a889:	add    eax,0x8
  42a88c:	mov    ecx,DWORD PTR [edx-0x4]
  42a88f:	xor    ecx,eax
  42a891:	call   0x42503a
  42a896:	mov    eax,0x4353d0
  42a89b:	jmp    0x429e70
  42a8a0:	lea    ecx,[ebp-0x7c]
  42a8a3:	jmp    DWORD PTR ds:0x43025c
  42a8a9:	mov    edx,DWORD PTR [esp+0x8]
  42a8ad:	lea    eax,[edx-0x88]
  42a8b3:	mov    ecx,DWORD PTR [edx-0x8c]
  42a8b9:	xor    ecx,eax
  42a8bb:	call   0x42503a
  42a8c0:	mov    eax,0x4353fc
  42a8c5:	jmp    0x429e70
  42a8ca:	int3   
  42a8cb:	int3   
  42a8cc:	int3   
  42a8cd:	int3   
  42a8ce:	int3   
  42a8cf:	int3   
  42a8d0:	lea    ecx,[ebp-0xd4]
  42a8d6:	jmp    DWORD PTR ds:0x43025c
  42a8dc:	lea    ecx,[ebp-0x2c]
  42a8df:	jmp    DWORD PTR ds:0x430264
  42a8e5:	lea    ecx,[ebp-0xd4]
  42a8eb:	jmp    0x40cd30
  42a8f0:	lea    ecx,[ebp-0xd4]
  42a8f6:	jmp    DWORD PTR ds:0x43025c
  42a8fc:	lea    ecx,[ebp-0xb8]
  42a902:	jmp    0x40cd30
  42a907:	lea    ecx,[ebp-0x9c]
  42a90d:	jmp    0x40cd30
  42a912:	mov    edx,DWORD PTR [esp+0x8]
  42a916:	lea    eax,[edx-0xe8]
  42a91c:	mov    ecx,DWORD PTR [edx-0xec]
  42a922:	xor    ecx,eax
  42a924:	call   0x42503a
  42a929:	add    eax,0x10
  42a92c:	mov    ecx,DWORD PTR [edx-0x4]
  42a92f:	xor    ecx,eax
  42a931:	call   0x42503a
  42a936:	mov    eax,0x435420
  42a93b:	jmp    0x429e70
  42a940:	lea    ecx,[ebp-0x7c]
  42a943:	jmp    DWORD PTR ds:0x43025c
  42a949:	mov    edx,DWORD PTR [esp+0x8]
  42a94d:	lea    eax,[edx-0x7c]
  42a950:	mov    ecx,DWORD PTR [edx-0x80]
  42a953:	xor    ecx,eax
  42a955:	call   0x42503a
  42a95a:	mov    eax,0x43547c
  42a95f:	jmp    0x429e70
  42a964:	int3   
  42a965:	int3   
  42a966:	int3   
  42a967:	int3   
  42a968:	int3   
  42a969:	int3   
  42a96a:	int3   
  42a96b:	int3   
  42a96c:	int3   
  42a96d:	int3   
  42a96e:	int3   
  42a96f:	int3   
  42a970:	lea    ecx,[ebp-0x14]
  42a973:	jmp    0x40cef0
  42a978:	mov    edx,DWORD PTR [esp+0x8]
  42a97c:	lea    eax,[edx-0x18]
  42a97f:	mov    ecx,DWORD PTR [edx-0x1c]
  42a982:	xor    ecx,eax
  42a984:	call   0x42503a
  42a989:	mov    eax,0x4354a8
  42a98e:	jmp    0x429e70
  42a993:	int3   
  42a994:	int3   
  42a995:	int3   
  42a996:	int3   
  42a997:	int3   
  42a998:	int3   
  42a999:	int3   
  42a99a:	int3   
  42a99b:	int3   
  42a99c:	int3   
  42a99d:	int3   
  42a99e:	int3   
  42a99f:	int3   
  42a9a0:	lea    ecx,[ebp-0x28]
  42a9a3:	jmp    DWORD PTR ds:0x43025c
  42a9a9:	mov    edx,DWORD PTR [esp+0x8]
  42a9ad:	lea    eax,[edx-0x34]
  42a9b0:	mov    ecx,DWORD PTR [edx-0x38]
  42a9b3:	xor    ecx,eax
  42a9b5:	call   0x42503a
  42a9ba:	mov    eax,0x4354d4
  42a9bf:	jmp    0x429e70
  42a9c4:	int3   
  42a9c5:	int3   
  42a9c6:	int3   
  42a9c7:	int3   
  42a9c8:	int3   
  42a9c9:	int3   
  42a9ca:	int3   
  42a9cb:	int3   
  42a9cc:	int3   
  42a9cd:	int3   
  42a9ce:	int3   
  42a9cf:	int3   
  42a9d0:	mov    eax,DWORD PTR [ebp-0x14]
  42a9d3:	and    eax,0x1
  42a9d6:	je     0x42a9e9
  42a9dc:	and    DWORD PTR [ebp-0x14],0xfffffffe
  42a9e0:	mov    ecx,DWORD PTR [ebp-0x10]
  42a9e3:	jmp    DWORD PTR ds:0x43025c
  42a9e9:	ret    
  42a9ea:	mov    edx,DWORD PTR [esp+0x8]
  42a9ee:	lea    eax,[edx-0xc]
  42a9f1:	mov    ecx,DWORD PTR [edx-0x10]
  42a9f4:	xor    ecx,eax
  42a9f6:	call   0x42503a
  42a9fb:	mov    eax,0x435500
  42aa00:	jmp    0x429e70
  42aa05:	int3   
  42aa06:	int3   
  42aa07:	int3   
  42aa08:	int3   
  42aa09:	int3   
  42aa0a:	int3   
  42aa0b:	int3   
  42aa0c:	int3   
  42aa0d:	int3   
  42aa0e:	int3   
  42aa0f:	int3   
  42aa10:	mov    eax,ds:0x43fe08
  42aa15:	and    eax,0xfffffffe
  42aa18:	mov    ds:0x43fe08,eax
  42aa1d:	ret    
  42aa1e:	mov    edx,DWORD PTR [esp+0x8]
  42aa22:	lea    eax,[edx]
  42aa24:	mov    ecx,DWORD PTR [edx-0x4]
  42aa27:	xor    ecx,eax
  42aa29:	call   0x42503a
  42aa2e:	mov    eax,0x43552c
  42aa33:	jmp    0x429e70
  42aa38:	int3   
  42aa39:	int3   
  42aa3a:	int3   
  42aa3b:	int3   
  42aa3c:	int3   
  42aa3d:	int3   
  42aa3e:	int3   
  42aa3f:	int3   
  42aa40:	lea    ecx,[ebp-0x34]
  42aa43:	jmp    0x4293c0
  42aa48:	mov    eax,DWORD PTR [ebp-0x38]
  42aa4b:	and    eax,0x1
  42aa4e:	je     0x42aa61
  42aa54:	and    DWORD PTR [ebp-0x38],0xfffffffe
  42aa58:	mov    ecx,DWORD PTR [ebp-0x30]
  42aa5b:	jmp    DWORD PTR ds:0x43025c
  42aa61:	ret    
  42aa62:	lea    ecx,[ebp-0x2c]
  42aa65:	jmp    DWORD PTR ds:0x43025c
  42aa6b:	mov    edx,DWORD PTR [esp+0x8]
  42aa6f:	lea    eax,[edx-0x40]
  42aa72:	mov    ecx,DWORD PTR [edx-0x44]
  42aa75:	xor    ecx,eax
  42aa77:	call   0x42503a
  42aa7c:	add    eax,0x10
  42aa7f:	mov    ecx,DWORD PTR [edx-0x4]
  42aa82:	xor    ecx,eax
  42aa84:	call   0x42503a
  42aa89:	mov    eax,0x435568
  42aa8e:	jmp    0x429e70
  42aa93:	int3   
  42aa94:	int3   
  42aa95:	int3   
  42aa96:	int3   
  42aa97:	int3   
  42aa98:	int3   
  42aa99:	int3   
  42aa9a:	int3   
  42aa9b:	int3   
  42aa9c:	int3   
  42aa9d:	int3   
  42aa9e:	int3   
  42aa9f:	int3   
  42aaa0:	mov    eax,ds:0x43fe28
  42aaa5:	and    eax,0xfffffffe
  42aaa8:	mov    ds:0x43fe28,eax
  42aaad:	ret    
  42aaae:	mov    eax,DWORD PTR [ebp-0x2c]
  42aab1:	and    eax,0x1
  42aab4:	je     0x42aac7
  42aaba:	and    DWORD PTR [ebp-0x2c],0xfffffffe
  42aabe:	lea    ecx,[ebp-0x28]
  42aac1:	jmp    DWORD PTR ds:0x43025c
  42aac7:	ret    
  42aac8:	mov    eax,DWORD PTR [ebp-0x2c]
  42aacb:	and    eax,0x2
  42aace:	je     0x42aae1
  42aad4:	and    DWORD PTR [ebp-0x2c],0xfffffffd
  42aad8:	mov    ecx,DWORD PTR [ebp+0x4]
  42aadb:	jmp    DWORD PTR ds:0x43025c
  42aae1:	ret    
  42aae2:	mov    edx,DWORD PTR [esp+0x8]
  42aae6:	lea    eax,[edx-0x28]
  42aae9:	mov    ecx,DWORD PTR [edx-0x2c]
  42aaec:	xor    ecx,eax
  42aaee:	call   0x42503a
  42aaf3:	mov    eax,0x4355a4
  42aaf8:	jmp    0x429e70
  42aafd:	int3   
  42aafe:	int3   
  42aaff:	int3   
  42ab00:	mov    eax,ds:0x43fe30
  42ab05:	and    eax,0xfffffffe
  42ab08:	mov    ds:0x43fe30,eax
  42ab0d:	ret    
  42ab0e:	mov    edx,DWORD PTR [esp+0x8]
  42ab12:	lea    eax,[edx]
  42ab14:	mov    ecx,DWORD PTR [edx-0x4]
  42ab17:	xor    ecx,eax
  42ab19:	call   0x42503a
  42ab1e:	mov    eax,0x4355d0
  42ab23:	jmp    0x429e70
  42ab28:	int3   
  42ab29:	int3   
  42ab2a:	int3   
  42ab2b:	int3   
  42ab2c:	int3   
  42ab2d:	int3   
  42ab2e:	int3   
  42ab2f:	int3   
  42ab30:	mov    eax,ds:0x43fe38
  42ab35:	and    eax,0xfffffffe
  42ab38:	mov    ds:0x43fe38,eax
  42ab3d:	ret    
  42ab3e:	mov    edx,DWORD PTR [esp+0x8]
  42ab42:	lea    eax,[edx]
  42ab44:	mov    ecx,DWORD PTR [edx-0x4]
  42ab47:	xor    ecx,eax
  42ab49:	call   0x42503a
  42ab4e:	mov    eax,0x4355fc
  42ab53:	jmp    0x429e70
  42ab58:	int3   
  42ab59:	int3   
  42ab5a:	int3   
  42ab5b:	int3   
  42ab5c:	int3   
  42ab5d:	int3   
  42ab5e:	int3   
  42ab5f:	int3   
  42ab60:	lea    ecx,[ebp+0x3c]
  42ab63:	jmp    DWORD PTR ds:0x430264
  42ab69:	lea    ecx,[ebp+0x20]
  42ab6c:	jmp    DWORD PTR ds:0x430264
  42ab72:	lea    ecx,[ebp+0x4]
  42ab75:	jmp    DWORD PTR ds:0x430264
  42ab7b:	mov    ecx,DWORD PTR [ebp-0x10]
  42ab7e:	jmp    DWORD PTR ds:0x430264
  42ab84:	mov    ecx,DWORD PTR [ebp-0x10]
  42ab87:	add    ecx,0x1c
  42ab8a:	jmp    DWORD PTR ds:0x430264
  42ab90:	mov    edx,DWORD PTR [esp+0x8]
  42ab94:	lea    eax,[edx-0x4]
  42ab97:	mov    ecx,DWORD PTR [edx-0x8]
  42ab9a:	xor    ecx,eax
  42ab9c:	call   0x42503a
  42aba1:	mov    eax,0x435dc4
  42aba6:	jmp    0x429e70
  42abab:	int3   
  42abac:	int3   
  42abad:	int3   
  42abae:	int3   
  42abaf:	int3   
  42abb0:	jmp    0x422000
  42abb5:	mov    edx,DWORD PTR [esp+0x8]
  42abb9:	lea    eax,[edx-0x4]
  42abbc:	mov    ecx,DWORD PTR [edx-0x8]
  42abbf:	xor    ecx,eax
  42abc1:	call   0x42503a
  42abc6:	mov    eax,0x435df0
  42abcb:	jmp    0x429e70
  42abd0:	mov    ecx,DWORD PTR [ebp+0x4]
  42abd3:	jmp    DWORD PTR ds:0x430264
  42abd9:	mov    ecx,DWORD PTR [ebp+0x4]
  42abdc:	add    ecx,0x1c
  42abdf:	jmp    DWORD PTR ds:0x430264
  42abe5:	mov    edx,DWORD PTR [esp+0x8]
  42abe9:	lea    eax,[edx-0x4]
  42abec:	mov    ecx,DWORD PTR [edx-0x8]
  42abef:	xor    ecx,eax
  42abf1:	call   0x42503a
  42abf6:	mov    eax,0x435e24
  42abfb:	jmp    0x429e70
  42ac00:	mov    ecx,DWORD PTR [ebp+0x4]
  42ac03:	add    ecx,0x4
  42ac06:	jmp    DWORD PTR ds:0x43025c
  42ac0c:	mov    edx,DWORD PTR [esp+0x8]
  42ac10:	lea    eax,[edx-0x4]
  42ac13:	mov    ecx,DWORD PTR [edx-0x8]
  42ac16:	xor    ecx,eax
  42ac18:	call   0x42503a
  42ac1d:	mov    eax,0x435e50
  42ac22:	jmp    0x429e70
  42ac27:	int3   
  42ac28:	int3   
  42ac29:	int3   
  42ac2a:	int3   
  42ac2b:	int3   
  42ac2c:	int3   
  42ac2d:	int3   
  42ac2e:	int3   
  42ac2f:	int3   
  42ac30:	mov    eax,ds:0x440504
  42ac35:	and    eax,0xfffffffe
  42ac38:	mov    ds:0x440504,eax
  42ac3d:	ret    
  42ac3e:	lea    ecx,[ebp-0x2c]
  42ac41:	jmp    DWORD PTR ds:0x430030
  42ac47:	lea    ecx,[ebp-0x28]
  42ac4a:	jmp    DWORD PTR ds:0x430264
  42ac50:	mov    edx,DWORD PTR [esp+0x8]
  42ac54:	lea    eax,[edx-0x24]
  42ac57:	mov    ecx,DWORD PTR [edx-0x28]
  42ac5a:	xor    ecx,eax
  42ac5c:	call   0x42503a
  42ac61:	mov    eax,0x435e8c
  42ac66:	jmp    0x429e70
  42ac6b:	int3   
  42ac6c:	int3   
  42ac6d:	int3   
  42ac6e:	int3   
  42ac6f:	int3   
  42ac70:	mov    ecx,DWORD PTR [ebp-0x10]
  42ac73:	jmp    DWORD PTR ds:0x430264
  42ac79:	mov    ecx,DWORD PTR [ebp-0x10]
  42ac7c:	add    ecx,0x1c
  42ac7f:	jmp    DWORD PTR ds:0x430264
  42ac85:	mov    ecx,DWORD PTR [ebp-0x10]
  42ac88:	add    ecx,0x38
  42ac8b:	jmp    DWORD PTR ds:0x430264
  42ac91:	mov    ecx,DWORD PTR [ebp-0x10]
  42ac94:	add    ecx,0x54
  42ac97:	jmp    DWORD PTR ds:0x430264
  42ac9d:	mov    edx,DWORD PTR [esp+0x8]
  42aca1:	lea    eax,[edx-0x4]
  42aca4:	mov    ecx,DWORD PTR [edx-0x8]
  42aca7:	xor    ecx,eax
  42aca9:	call   0x42503a
  42acae:	mov    eax,0x435ed0
  42acb3:	jmp    0x429e70
  42acb8:	int3   
  42acb9:	int3   
  42acba:	int3   
  42acbb:	int3   
  42acbc:	int3   
  42acbd:	int3   
  42acbe:	int3   
  42acbf:	int3   
  42acc0:	mov    ecx,DWORD PTR [ebp-0x10]
  42acc3:	jmp    DWORD PTR ds:0x4303a8
  42acc9:	mov    edx,DWORD PTR [esp+0x8]
  42accd:	lea    eax,[edx-0x8]
  42acd0:	mov    ecx,DWORD PTR [edx-0xc]
  42acd3:	xor    ecx,eax
  42acd5:	call   0x42503a
  42acda:	mov    eax,0x435efc
  42acdf:	jmp    0x429e70
  42ace4:	int3   
  42ace5:	int3   
  42ace6:	int3   
  42ace7:	int3   
  42ace8:	int3   
  42ace9:	int3   
  42acea:	int3   
  42aceb:	int3   
  42acec:	int3   
  42aced:	int3   
  42acee:	int3   
  42acef:	int3   
  42acf0:	mov    ecx,DWORD PTR [ebp+0x4]
  42acf3:	add    ecx,0x4
  42acf6:	jmp    DWORD PTR ds:0x430264
  42acfc:	mov    ecx,DWORD PTR [ebp+0x4]
  42acff:	add    ecx,0x20
  42ad02:	jmp    DWORD PTR ds:0x430264
  42ad08:	mov    edx,DWORD PTR [esp+0x8]
  42ad0c:	lea    eax,[edx-0x4]
  42ad0f:	mov    ecx,DWORD PTR [edx-0x8]
  42ad12:	xor    ecx,eax
  42ad14:	call   0x42503a
  42ad19:	mov    eax,0x435f30
  42ad1e:	jmp    0x429e70
  42ad23:	int3   
  42ad24:	int3   
  42ad25:	int3   
  42ad26:	int3   
  42ad27:	int3   
  42ad28:	int3   
  42ad29:	int3   
  42ad2a:	int3   
  42ad2b:	int3   
  42ad2c:	int3   
  42ad2d:	int3   
  42ad2e:	int3   
  42ad2f:	int3   
  42ad30:	lea    ecx,[ebp+0x8]
  42ad33:	jmp    DWORD PTR ds:0x430264
  42ad39:	mov    edx,DWORD PTR [esp+0x8]
  42ad3d:	lea    eax,[edx]
  42ad3f:	mov    ecx,DWORD PTR [edx-0x4]
  42ad42:	xor    ecx,eax
  42ad44:	call   0x42503a
  42ad49:	mov    eax,0x435f5c
  42ad4e:	jmp    0x429e70
  42ad53:	int3   
  42ad54:	int3   
  42ad55:	int3   
  42ad56:	int3   
  42ad57:	int3   
  42ad58:	int3   
  42ad59:	int3   
  42ad5a:	int3   
  42ad5b:	int3   
  42ad5c:	int3   
  42ad5d:	int3   
  42ad5e:	int3   
  42ad5f:	int3   
  42ad60:	lea    ecx,[ebp-0x44]
  42ad63:	jmp    DWORD PTR ds:0x430264
  42ad69:	lea    ecx,[ebp-0x44]
  42ad6c:	jmp    DWORD PTR ds:0x430264
  42ad72:	lea    ecx,[ebp-0x28]
  42ad75:	jmp    DWORD PTR ds:0x430264
  42ad7b:	mov    edx,DWORD PTR [esp+0x8]
  42ad7f:	lea    eax,[edx-0x3c]
  42ad82:	mov    ecx,DWORD PTR [edx-0x40]
  42ad85:	xor    ecx,eax
  42ad87:	call   0x42503a
  42ad8c:	mov    eax,0x435f98
  42ad91:	jmp    0x429e70
  42ad96:	int3   
  42ad97:	int3   
  42ad98:	int3   
  42ad99:	int3   
  42ad9a:	int3   
  42ad9b:	int3   
  42ad9c:	int3   
  42ad9d:	int3   
  42ad9e:	int3   
  42ad9f:	int3   
  42ada0:	mov    ecx,DWORD PTR [ebp+0x4]
  42ada3:	add    ecx,0x4
  42ada6:	jmp    DWORD PTR ds:0x430264
  42adac:	mov    edx,DWORD PTR [esp+0x8]
  42adb0:	lea    eax,[edx-0x8]
  42adb3:	mov    ecx,DWORD PTR [edx-0xc]
  42adb6:	xor    ecx,eax
  42adb8:	call   0x42503a
  42adbd:	mov    eax,0x435fc4
  42adc2:	jmp    0x429e70
  42adc7:	int3   
  42adc8:	int3   
  42adc9:	int3   
  42adca:	int3   
  42adcb:	int3   
  42adcc:	int3   
  42adcd:	int3   
  42adce:	int3   
  42adcf:	int3   
  42add0:	lea    ecx,[ebp-0x28]
  42add3:	jmp    DWORD PTR ds:0x430264
  42add9:	mov    edx,DWORD PTR [esp+0x8]
  42addd:	lea    eax,[edx-0x20]
  42ade0:	mov    ecx,DWORD PTR [edx-0x24]
  42ade3:	xor    ecx,eax
  42ade5:	call   0x42503a
  42adea:	mov    eax,0x435ff0
  42adef:	jmp    0x429e70
  42adf4:	int3   
  42adf5:	int3   
  42adf6:	int3   
  42adf7:	int3   
  42adf8:	int3   
  42adf9:	int3   
  42adfa:	int3   
  42adfb:	int3   
  42adfc:	int3   
  42adfd:	int3   
  42adfe:	int3   
  42adff:	int3   
  42ae00:	mov    ecx,DWORD PTR [ebp+0x4]
  42ae03:	jmp    DWORD PTR ds:0x4303a8
  42ae09:	mov    edx,DWORD PTR [esp+0x8]
  42ae0d:	lea    eax,[edx-0x4]
  42ae10:	mov    ecx,DWORD PTR [edx-0x8]
  42ae13:	xor    ecx,eax
  42ae15:	call   0x42503a
  42ae1a:	mov    eax,0x43601c
  42ae1f:	jmp    0x429e70
  42ae24:	int3   
  42ae25:	int3   
  42ae26:	int3   
  42ae27:	int3   
  42ae28:	int3   
  42ae29:	int3   
  42ae2a:	int3   
  42ae2b:	int3   
  42ae2c:	int3   
  42ae2d:	int3   
  42ae2e:	int3   
  42ae2f:	int3   
  42ae30:	mov    eax,DWORD PTR [ebp-0x14]
  42ae33:	and    eax,0x1
  42ae36:	je     0x42ae49
  42ae3c:	and    DWORD PTR [ebp-0x14],0xfffffffe
  42ae40:	mov    ecx,DWORD PTR [ebp-0x10]
  42ae43:	jmp    DWORD PTR ds:0x430264
  42ae49:	ret    
  42ae4a:	mov    edx,DWORD PTR [esp+0x8]
  42ae4e:	lea    eax,[edx-0x10]
  42ae51:	mov    ecx,DWORD PTR [edx-0x14]
  42ae54:	xor    ecx,eax
  42ae56:	call   0x42503a
  42ae5b:	mov    eax,0x436048
  42ae60:	jmp    0x429e70
  42ae65:	int3   
  42ae66:	int3   
  42ae67:	int3   
  42ae68:	int3   
  42ae69:	int3   
  42ae6a:	int3   
  42ae6b:	int3   
  42ae6c:	int3   
  42ae6d:	int3   
  42ae6e:	int3   
  42ae6f:	int3   
  42ae70:	mov    eax,DWORD PTR [ebp-0x14]
  42ae73:	and    eax,0x1
  42ae76:	je     0x42ae89
  42ae7c:	and    DWORD PTR [ebp-0x14],0xfffffffe
  42ae80:	mov    ecx,DWORD PTR [ebp-0x10]
  42ae83:	jmp    DWORD PTR ds:0x43025c
  42ae89:	ret    
  42ae8a:	mov    edx,DWORD PTR [esp+0x8]
  42ae8e:	lea    eax,[edx-0x10]
  42ae91:	mov    ecx,DWORD PTR [edx-0x14]
  42ae94:	xor    ecx,eax
  42ae96:	call   0x42503a
  42ae9b:	mov    eax,0x436074
  42aea0:	jmp    0x429e70
  42aea5:	int3   
  42aea6:	int3   
  42aea7:	int3   
  42aea8:	int3   
  42aea9:	int3   
  42aeaa:	int3   
  42aeab:	int3   
  42aeac:	int3   
  42aead:	int3   
  42aeae:	int3   
  42aeaf:	int3   
  42aeb0:	lea    ecx,[ebp-0x48]
  42aeb3:	jmp    DWORD PTR ds:0x43025c
  42aeb9:	lea    ecx,[ebp-0x2c]
  42aebc:	jmp    DWORD PTR ds:0x43025c
  42aec2:	lea    ecx,[ebp-0x5c]
  42aec5:	jmp    DWORD PTR ds:0x430004
  42aecb:	lea    ecx,[ebp-0x2c]
  42aece:	jmp    DWORD PTR ds:0x43025c
  42aed4:	lea    ecx,[ebp-0x48]
  42aed7:	jmp    DWORD PTR ds:0x43025c
  42aedd:	lea    ecx,[ebp-0x58]
  42aee0:	jmp    DWORD PTR ds:0x430004
  42aee6:	mov    edx,DWORD PTR [esp+0x8]
  42aeea:	lea    eax,[edx-0x58]
  42aeed:	mov    ecx,DWORD PTR [edx-0x5c]
  42aef0:	xor    ecx,eax
  42aef2:	call   0x42503a
  42aef7:	add    eax,0x8
  42aefa:	mov    ecx,DWORD PTR [edx-0x4]
  42aefd:	xor    ecx,eax
  42aeff:	call   0x42503a
  42af04:	mov    eax,0x4360c8
  42af09:	jmp    0x429e70
  42af0e:	int3   
  42af0f:	int3   
  42af10:	lea    ecx,[ebp-0x1c]
  42af13:	jmp    DWORD PTR ds:0x430184
  42af19:	mov    edx,DWORD PTR [esp+0x8]
  42af1d:	lea    eax,[edx-0x1c]
  42af20:	mov    ecx,DWORD PTR [edx-0x20]
  42af23:	xor    ecx,eax
  42af25:	call   0x42503a
  42af2a:	mov    eax,0x4360f4
  42af2f:	jmp    0x429e70
  42af34:	int3   
  42af35:	int3   
  42af36:	int3   
  42af37:	int3   
  42af38:	int3   
  42af39:	int3   
  42af3a:	int3   
  42af3b:	int3   
  42af3c:	int3   
  42af3d:	int3   
  42af3e:	int3   
  42af3f:	int3   
  42af40:	lea    ecx,[ebp-0x38]
  42af43:	jmp    DWORD PTR ds:0x430180
  42af49:	lea    ecx,[ebp-0x2c]
  42af4c:	jmp    DWORD PTR ds:0x43025c
  42af52:	mov    edx,DWORD PTR [esp+0x8]
  42af56:	lea    eax,[edx-0x3c]
  42af59:	mov    ecx,DWORD PTR [edx-0x40]
  42af5c:	xor    ecx,eax
  42af5e:	call   0x42503a
  42af63:	add    eax,0x10
  42af66:	mov    ecx,DWORD PTR [edx-0x4]
  42af69:	xor    ecx,eax
  42af6b:	call   0x42503a
  42af70:	mov    eax,0x436128
  42af75:	jmp    0x429e70
  42af7a:	int3   
  42af7b:	int3   
  42af7c:	int3   
  42af7d:	int3   
  42af7e:	int3   
  42af7f:	int3   
  42af80:	mov    ecx,DWORD PTR [ebp-0x10]
  42af83:	jmp    DWORD PTR ds:0x4303a8
  42af89:	mov    edx,DWORD PTR [esp+0x8]
  42af8d:	lea    eax,[edx-0xc]
  42af90:	mov    ecx,DWORD PTR [edx-0x10]
  42af93:	xor    ecx,eax
  42af95:	call   0x42503a
  42af9a:	mov    eax,0x436154
  42af9f:	jmp    0x429e70
  42afa4:	int3   
  42afa5:	int3   
  42afa6:	int3   
  42afa7:	int3   
  42afa8:	int3   
  42afa9:	int3   
  42afaa:	int3   
  42afab:	int3   
  42afac:	int3   
  42afad:	int3   
  42afae:	int3   
  42afaf:	int3   
  42afb0:	lea    ecx,[ebp-0x28]
  42afb3:	jmp    DWORD PTR ds:0x43025c
  42afb9:	mov    ecx,DWORD PTR [ebp+0x4]
  42afbc:	jmp    0x420590
  42afc1:	mov    edx,DWORD PTR [esp+0x8]
  42afc5:	lea    eax,[edx-0x20]
  42afc8:	mov    ecx,DWORD PTR [edx-0x24]
  42afcb:	xor    ecx,eax
  42afcd:	call   0x42503a
  42afd2:	mov    eax,0x436190
  42afd7:	jmp    0x429e70
  42afdc:	int3   
  42afdd:	int3   
  42afde:	int3   
  42afdf:	int3   
  42afe0:	lea    ecx,[ebp-0x48]
  42afe3:	jmp    DWORD PTR ds:0x43025c
  42afe9:	lea    ecx,[ebp-0x2c]
  42afec:	jmp    DWORD PTR ds:0x43025c
  42aff2:	lea    ecx,[ebp-0x5c]
  42aff5:	jmp    DWORD PTR ds:0x430004
  42affb:	lea    ecx,[ebp-0x2c]
  42affe:	jmp    DWORD PTR ds:0x43025c
  42b004:	lea    ecx,[ebp-0x48]
  42b007:	jmp    DWORD PTR ds:0x43025c
  42b00d:	lea    ecx,[ebp-0x58]
  42b010:	jmp    DWORD PTR ds:0x430004
  42b016:	mov    edx,DWORD PTR [esp+0x8]
  42b01a:	lea    eax,[edx-0x50]
  42b01d:	mov    ecx,DWORD PTR [edx-0x54]
  42b020:	xor    ecx,eax
  42b022:	call   0x42503a
  42b027:	add    eax,0x0
  42b02a:	mov    ecx,DWORD PTR [edx-0x4]
  42b02d:	xor    ecx,eax
  42b02f:	call   0x42503a
  42b034:	mov    eax,0x4361e4
  42b039:	jmp    0x429e70
  42b03e:	int3   
  42b03f:	int3   
  42b040:	mov    edx,DWORD PTR [esp+0x8]
  42b044:	lea    eax,[edx+0xc]
  42b047:	mov    ecx,DWORD PTR [edx-0x18]
  42b04a:	xor    ecx,eax
  42b04c:	call   0x42503a
  42b051:	mov    eax,0x43623c
  42b056:	jmp    0x429e70
  42b05b:	int3   
  42b05c:	int3   
  42b05d:	int3   
  42b05e:	int3   
  42b05f:	int3   
  42b060:	mov    eax,DWORD PTR [ebp+0x4]
  42b063:	push   eax
  42b064:	call   0x420e10
  42b069:	ret    
  42b06a:	mov    edx,DWORD PTR [esp+0x8]
  42b06e:	lea    eax,[edx-0x8]
  42b071:	mov    ecx,DWORD PTR [edx-0xc]
  42b074:	xor    ecx,eax
  42b076:	call   0x42503a
  42b07b:	mov    eax,0x436268
  42b080:	jmp    0x429e70
  42b085:	int3   
  42b086:	int3   
  42b087:	int3   
  42b088:	int3   
  42b089:	int3   
  42b08a:	int3   
  42b08b:	int3   
  42b08c:	int3   
  42b08d:	int3   
  42b08e:	int3   
  42b08f:	int3   
  42b090:	lea    ecx,[ebp-0x248]
  42b096:	jmp    DWORD PTR ds:0x430264
  42b09c:	lea    ecx,[ebp-0x22c]
  42b0a2:	jmp    DWORD PTR ds:0x43025c
  42b0a8:	mov    edx,DWORD PTR [esp+0x8]
  42b0ac:	lea    eax,[edx-0x250]
  42b0b2:	mov    ecx,DWORD PTR [edx-0x254]
  42b0b8:	xor    ecx,eax
  42b0ba:	call   0x42503a
  42b0bf:	add    eax,0x10
  42b0c2:	mov    ecx,DWORD PTR [edx-0x4]
  42b0c5:	xor    ecx,eax
  42b0c7:	call   0x42503a
  42b0cc:	mov    eax,0x43629c
  42b0d1:	jmp    0x429e70
  42b0d6:	int3   
  42b0d7:	int3   
  42b0d8:	int3   
  42b0d9:	int3   
  42b0da:	int3   
  42b0db:	int3   
  42b0dc:	int3   
  42b0dd:	int3   
  42b0de:	int3   
  42b0df:	int3   
  42b0e0:	mov    eax,DWORD PTR [ebp+0x4]
  42b0e3:	push   eax
  42b0e4:	call   0x420e10
  42b0e9:	ret    
  42b0ea:	mov    edx,DWORD PTR [esp+0x8]
  42b0ee:	lea    eax,[edx-0x4]
  42b0f1:	mov    ecx,DWORD PTR [edx-0x8]
  42b0f4:	xor    ecx,eax
  42b0f6:	call   0x42503a
  42b0fb:	mov    eax,0x4362c8
  42b100:	jmp    0x429e70
  42b105:	int3   
  42b106:	int3   
  42b107:	int3   
  42b108:	int3   
  42b109:	int3   
  42b10a:	int3   
  42b10b:	int3   
  42b10c:	int3   
  42b10d:	int3   
  42b10e:	int3   
  42b10f:	int3   
  42b110:	lea    ecx,[ebp-0x28]
  42b113:	jmp    DWORD PTR ds:0x430264
  42b119:	mov    edx,DWORD PTR [esp+0x8]
  42b11d:	lea    eax,[edx-0x38]
  42b120:	mov    ecx,DWORD PTR [edx-0x3c]
  42b123:	xor    ecx,eax
  42b125:	call   0x42503a
  42b12a:	mov    eax,0x4362f4
  42b12f:	jmp    0x429e70
  42b134:	int3   
  42b135:	int3   
  42b136:	int3   
  42b137:	int3   
  42b138:	int3   
  42b139:	int3   
  42b13a:	int3   
  42b13b:	int3   
  42b13c:	int3   
  42b13d:	int3   
  42b13e:	int3   
  42b13f:	int3   
  42b140:	mov    eax,ds:0x440524
  42b145:	and    eax,0xfffffffe
  42b148:	mov    ds:0x440524,eax
  42b14d:	ret    
  42b14e:	lea    ecx,[ebp-0x28]
  42b151:	jmp    DWORD PTR ds:0x430264
  42b157:	mov    edx,DWORD PTR [esp+0x8]
  42b15b:	lea    eax,[edx-0x1c]
  42b15e:	mov    ecx,DWORD PTR [edx-0x20]
  42b161:	xor    ecx,eax
  42b163:	call   0x42503a
  42b168:	mov    eax,0x436328
  42b16d:	jmp    0x429e70
  42b172:	int3   
  42b173:	int3   
  42b174:	int3   
  42b175:	int3   
  42b176:	int3   
  42b177:	int3   
  42b178:	int3   
  42b179:	int3   
  42b17a:	int3   
  42b17b:	int3   
  42b17c:	int3   
  42b17d:	int3   
  42b17e:	int3   
  42b17f:	int3   
  42b180:	mov    eax,ds:0x440544
  42b185:	and    eax,0xfffffffe
  42b188:	mov    ds:0x440544,eax
  42b18d:	ret    
  42b18e:	lea    ecx,[ebp-0x28]
  42b191:	jmp    DWORD PTR ds:0x430264
  42b197:	mov    edx,DWORD PTR [esp+0x8]
  42b19b:	lea    eax,[edx-0x1c]
  42b19e:	mov    ecx,DWORD PTR [edx-0x20]
  42b1a1:	xor    ecx,eax
  42b1a3:	call   0x42503a
  42b1a8:	mov    eax,0x43635c
  42b1ad:	jmp    0x429e70
  42b1b2:	int3   
  42b1b3:	int3   
  42b1b4:	int3   
  42b1b5:	int3   
  42b1b6:	int3   
  42b1b7:	int3   
  42b1b8:	int3   
  42b1b9:	int3   
  42b1ba:	int3   
  42b1bb:	int3   
  42b1bc:	int3   
  42b1bd:	int3   
  42b1be:	int3   
  42b1bf:	int3   
  42b1c0:	mov    eax,ds:0x440564
  42b1c5:	and    eax,0xfffffffe
  42b1c8:	mov    ds:0x440564,eax
  42b1cd:	ret    
  42b1ce:	lea    ecx,[ebp-0x28]
  42b1d1:	jmp    DWORD PTR ds:0x430264
  42b1d7:	mov    edx,DWORD PTR [esp+0x8]
  42b1db:	lea    eax,[edx-0x1c]
  42b1de:	mov    ecx,DWORD PTR [edx-0x20]
  42b1e1:	xor    ecx,eax
  42b1e3:	call   0x42503a
  42b1e8:	mov    eax,0x436390
  42b1ed:	jmp    0x429e70
  42b1f2:	int3   
  42b1f3:	int3   
  42b1f4:	int3   
  42b1f5:	int3   
  42b1f6:	int3   
  42b1f7:	int3   
  42b1f8:	int3   
  42b1f9:	int3   
  42b1fa:	int3   
  42b1fb:	int3   
  42b1fc:	int3   
  42b1fd:	int3   
  42b1fe:	int3   
  42b1ff:	int3   
  42b200:	lea    ecx,[ebp-0x28]
  42b203:	jmp    DWORD PTR ds:0x430264
  42b209:	mov    edx,DWORD PTR [esp+0x8]
  42b20d:	lea    eax,[edx-0x1c]
  42b210:	mov    ecx,DWORD PTR [edx-0x20]
  42b213:	xor    ecx,eax
  42b215:	call   0x42503a
  42b21a:	mov    eax,0x4363bc
  42b21f:	jmp    0x429e70
  42b224:	int3   
  42b225:	int3   
  42b226:	int3   
  42b227:	int3   
  42b228:	int3   
  42b229:	int3   
  42b22a:	int3   
  42b22b:	int3   
  42b22c:	int3   
  42b22d:	int3   
  42b22e:	int3   
  42b22f:	int3   
  42b230:	mov    ecx,DWORD PTR [ebp-0x10]
  42b233:	add    ecx,0x4
  42b236:	jmp    DWORD PTR ds:0x43025c
  42b23c:	mov    edx,DWORD PTR [esp+0x8]
  42b240:	lea    eax,[edx-0x4]
  42b243:	mov    ecx,DWORD PTR [edx-0x8]
  42b246:	xor    ecx,eax
  42b248:	call   0x42503a
  42b24d:	mov    eax,0x4363e8
  42b252:	jmp    0x429e70
  42b257:	int3   
  42b258:	int3   
  42b259:	int3   
  42b25a:	int3   
  42b25b:	int3   
  42b25c:	int3   
  42b25d:	int3   
  42b25e:	int3   
  42b25f:	int3   
  42b260:	lea    eax,[ebp+0xc]
  42b263:	push   eax
  42b264:	call   0x415b30
  42b269:	ret    
  42b26a:	lea    ecx,[ebp+0x10]
  42b26d:	jmp    DWORD PTR ds:0x430264
  42b273:	lea    ecx,[ebp+0x2c]
  42b276:	jmp    DWORD PTR ds:0x430264
  42b27c:	mov    edx,DWORD PTR [esp+0x8]
  42b280:	lea    eax,[edx-0x14]
  42b283:	mov    ecx,DWORD PTR [edx-0x18]
  42b286:	xor    ecx,eax
  42b288:	call   0x42503a
  42b28d:	mov    eax,0x436424
  42b292:	jmp    0x429e70
  42b297:	int3   
  42b298:	int3   
  42b299:	int3   
  42b29a:	int3   
  42b29b:	int3   
  42b29c:	int3   
  42b29d:	int3   
  42b29e:	int3   
  42b29f:	int3   
  42b2a0:	lea    eax,[ebp+0xc]
  42b2a3:	push   eax
  42b2a4:	call   0x415b30
  42b2a9:	ret    
  42b2aa:	lea    ecx,[ebp+0x10]
  42b2ad:	jmp    DWORD PTR ds:0x430264
  42b2b3:	lea    ecx,[ebp+0x2c]
  42b2b6:	jmp    DWORD PTR ds:0x430264
  42b2bc:	mov    edx,DWORD PTR [esp+0x8]
  42b2c0:	lea    eax,[edx-0x18]
  42b2c3:	mov    ecx,DWORD PTR [edx-0x1c]
  42b2c6:	xor    ecx,eax
  42b2c8:	call   0x42503a
  42b2cd:	mov    eax,0x436460
  42b2d2:	jmp    0x429e70
  42b2d7:	int3   
  42b2d8:	int3   
  42b2d9:	int3   
  42b2da:	int3   
  42b2db:	int3   
  42b2dc:	int3   
  42b2dd:	int3   
  42b2de:	int3   
  42b2df:	int3   
  42b2e0:	lea    eax,[ebp-0x70]
  42b2e3:	push   eax
  42b2e4:	call   0x415b30
  42b2e9:	ret    
  42b2ea:	mov    edx,DWORD PTR [esp+0x8]
  42b2ee:	lea    eax,[edx-0x74]
  42b2f1:	mov    ecx,DWORD PTR [edx-0x78]
  42b2f4:	xor    ecx,eax
  42b2f6:	call   0x42503a
  42b2fb:	add    eax,0xc
  42b2fe:	mov    ecx,DWORD PTR [edx-0x4]
  42b301:	xor    ecx,eax
  42b303:	call   0x42503a
  42b308:	mov    eax,0x43648c
  42b30d:	jmp    0x429e70
  42b312:	int3   
  42b313:	int3   
  42b314:	int3   
  42b315:	int3   
  42b316:	int3   
  42b317:	int3   
  42b318:	int3   
  42b319:	int3   
  42b31a:	int3   
  42b31b:	int3   
  42b31c:	int3   
  42b31d:	int3   
  42b31e:	int3   
  42b31f:	int3   
  42b320:	lea    ecx,[ebp-0x3c]
  42b323:	jmp    DWORD PTR ds:0x430180
  42b329:	lea    ecx,[ebp-0x2c]
  42b32c:	jmp    DWORD PTR ds:0x43025c
  42b332:	mov    edx,DWORD PTR [esp+0x8]
  42b336:	lea    eax,[edx-0x44]
  42b339:	mov    ecx,DWORD PTR [edx-0x48]
  42b33c:	xor    ecx,eax
  42b33e:	call   0x42503a
  42b343:	add    eax,0x10
  42b346:	mov    ecx,DWORD PTR [edx-0x4]
  42b349:	xor    ecx,eax
  42b34b:	call   0x42503a
  42b350:	mov    eax,0x4364c0
  42b355:	jmp    0x429e70
  42b35a:	int3   
  42b35b:	int3   
  42b35c:	int3   
  42b35d:	int3   
  42b35e:	int3   
  42b35f:	int3   
  42b360:	mov    eax,DWORD PTR [ebp-0x18]
  42b363:	push   eax
  42b364:	mov    ecx,DWORD PTR [ebp-0x1c]
  42b367:	push   ecx
  42b368:	call   0x4029a0
  42b36d:	add    esp,0x8
  42b370:	ret    
  42b371:	mov    edx,DWORD PTR [esp+0x8]
  42b375:	lea    eax,[edx+0xc]
  42b378:	mov    ecx,DWORD PTR [edx-0x20]
  42b37b:	xor    ecx,eax
  42b37d:	call   0x42503a
  42b382:	mov    eax,0x436520
  42b387:	jmp    0x429e70
  42b38c:	int3   
  42b38d:	int3   
  42b38e:	int3   
  42b38f:	int3   
  42b390:	mov    eax,DWORD PTR [ebp-0x18]
  42b393:	push   eax
  42b394:	mov    ecx,DWORD PTR [ebp-0x1c]
  42b397:	push   ecx
  42b398:	call   0x4029a0
  42b39d:	add    esp,0x8
  42b3a0:	ret    
  42b3a1:	mov    edx,DWORD PTR [esp+0x8]
  42b3a5:	lea    eax,[edx+0xc]
  42b3a8:	mov    ecx,DWORD PTR [edx-0x20]
  42b3ab:	xor    ecx,eax
  42b3ad:	call   0x42503a
  42b3b2:	mov    eax,0x436580
  42b3b7:	jmp    0x429e70
  42b3bc:	int3   
  42b3bd:	int3   
  42b3be:	int3   
  42b3bf:	int3   
  42b3c0:	mov    eax,DWORD PTR [ebp-0x18]
  42b3c3:	push   eax
  42b3c4:	mov    ecx,DWORD PTR [ebp-0x1c]
  42b3c7:	push   ecx
  42b3c8:	call   0x4029a0
  42b3cd:	add    esp,0x8
  42b3d0:	ret    
  42b3d1:	mov    edx,DWORD PTR [esp+0x8]
  42b3d5:	lea    eax,[edx+0xc]
  42b3d8:	mov    ecx,DWORD PTR [edx-0x20]
  42b3db:	xor    ecx,eax
  42b3dd:	call   0x42503a
  42b3e2:	mov    eax,0x4365e0
  42b3e7:	jmp    0x429e70
  42b3ec:	int3   
  42b3ed:	int3   
  42b3ee:	int3   
  42b3ef:	int3   
  42b3f0:	lea    ecx,[ebp+0x4]
  42b3f3:	jmp    0x40cd30
  42b3f8:	mov    edx,DWORD PTR [esp+0x8]
  42b3fc:	lea    eax,[edx]
  42b3fe:	mov    ecx,DWORD PTR [edx-0x4]
  42b401:	xor    ecx,eax
  42b403:	call   0x42503a
  42b408:	mov    eax,0x43660c
  42b40d:	jmp    0x429e70
  42b412:	int3   
  42b413:	int3   
  42b414:	int3   
  42b415:	int3   
  42b416:	int3   
  42b417:	int3   
  42b418:	int3   
  42b419:	int3   
  42b41a:	int3   
  42b41b:	int3   
  42b41c:	int3   
  42b41d:	int3   
  42b41e:	int3   
  42b41f:	int3   
  42b420:	lea    ecx,[ebp+0x8]
  42b423:	jmp    0x40cd30
  42b428:	mov    edx,DWORD PTR [esp+0x8]
  42b42c:	lea    eax,[edx]
  42b42e:	mov    ecx,DWORD PTR [edx-0x4]
  42b431:	xor    ecx,eax
  42b433:	call   0x42503a
  42b438:	mov    eax,0x436638
  42b43d:	jmp    0x429e70
  42b442:	int3   
  42b443:	int3   
  42b444:	int3   
  42b445:	int3   
  42b446:	int3   
  42b447:	int3   
  42b448:	int3   
  42b449:	int3   
  42b44a:	int3   
  42b44b:	int3   
  42b44c:	int3   
  42b44d:	int3   
  42b44e:	int3   
  42b44f:	int3   
  42b450:	lea    ecx,[ebp+0x8]
  42b453:	jmp    0x40cd30
  42b458:	mov    edx,DWORD PTR [esp+0x8]
  42b45c:	lea    eax,[edx-0x8]
  42b45f:	mov    ecx,DWORD PTR [edx-0xc]
  42b462:	xor    ecx,eax
  42b464:	call   0x42503a
  42b469:	mov    eax,0x436664
  42b46e:	jmp    0x429e70
  42b473:	int3   
  42b474:	int3   
  42b475:	int3   
  42b476:	int3   
  42b477:	int3   
  42b478:	int3   
  42b479:	int3   
  42b47a:	int3   
  42b47b:	int3   
  42b47c:	int3   
  42b47d:	int3   
  42b47e:	int3   
  42b47f:	int3   
  42b480:	mov    eax,DWORD PTR [ebp-0x14]
  42b483:	push   eax
  42b484:	mov    ecx,DWORD PTR [ebp-0x18]
  42b487:	push   ecx
  42b488:	call   0x4029a0
  42b48d:	add    esp,0x8
  42b490:	ret    
  42b491:	mov    edx,DWORD PTR [esp+0x8]
  42b495:	lea    eax,[edx+0xc]
  42b498:	mov    ecx,DWORD PTR [edx-0x1c]
  42b49b:	xor    ecx,eax
  42b49d:	call   0x42503a
  42b4a2:	mov    eax,0x4366c4
  42b4a7:	jmp    0x429e70
  42b4ac:	int3   
  42b4ad:	int3   
  42b4ae:	int3   
  42b4af:	int3   
  42b4b0:	mov    eax,DWORD PTR [ebp-0x14]
  42b4b3:	push   eax
  42b4b4:	mov    ecx,DWORD PTR [ebp-0x18]
  42b4b7:	push   ecx
  42b4b8:	call   0x4029a0
  42b4bd:	add    esp,0x8
  42b4c0:	ret    
  42b4c1:	mov    edx,DWORD PTR [esp+0x8]
  42b4c5:	lea    eax,[edx+0xc]
  42b4c8:	mov    ecx,DWORD PTR [edx-0x1c]
  42b4cb:	xor    ecx,eax
  42b4cd:	call   0x42503a
  42b4d2:	mov    eax,0x436724
  42b4d7:	jmp    0x429e70
  42b4dc:	int3   
  42b4dd:	int3   
  42b4de:	int3   
  42b4df:	int3   
  42b4e0:	mov    eax,DWORD PTR [ebp+0x4]
  42b4e3:	jmp    0x413580
  42b4e8:	mov    edx,DWORD PTR [esp+0x8]
  42b4ec:	lea    eax,[edx-0x4]
  42b4ef:	mov    ecx,DWORD PTR [edx-0x8]
  42b4f2:	xor    ecx,eax
  42b4f4:	call   0x42503a
  42b4f9:	mov    eax,0x436750
  42b4fe:	jmp    0x429e70
  42b503:	int3   
  42b504:	int3   
  42b505:	int3   
  42b506:	int3   
  42b507:	int3   
  42b508:	int3   
  42b509:	int3   
  42b50a:	int3   
  42b50b:	int3   
  42b50c:	int3   
  42b50d:	int3   
  42b50e:	int3   
  42b50f:	int3   
  42b510:	mov    ecx,DWORD PTR [ebp+0x4]
  42b513:	jmp    DWORD PTR ds:0x43025c
  42b519:	mov    edx,DWORD PTR [esp+0x8]
  42b51d:	lea    eax,[edx-0x8]
  42b520:	mov    ecx,DWORD PTR [edx-0xc]
  42b523:	xor    ecx,eax
  42b525:	call   0x42503a
  42b52a:	mov    eax,0x43677c
  42b52f:	jmp    0x429e70
  42b534:	int3   
  42b535:	int3   
  42b536:	int3   
  42b537:	int3   
  42b538:	int3   
  42b539:	int3   
  42b53a:	int3   
  42b53b:	int3   
  42b53c:	int3   
  42b53d:	int3   
  42b53e:	int3   
  42b53f:	int3   
  42b540:	lea    ecx,[ebp-0x240]
  42b546:	jmp    DWORD PTR ds:0x430264
  42b54c:	mov    edx,DWORD PTR [esp+0x8]
  42b550:	lea    eax,[edx-0x260]
  42b556:	mov    ecx,DWORD PTR [edx-0x264]
  42b55c:	xor    ecx,eax
  42b55e:	call   0x42503a
  42b563:	add    eax,0xc
  42b566:	mov    ecx,DWORD PTR [edx-0x4]
  42b569:	xor    ecx,eax
  42b56b:	call   0x42503a
  42b570:	mov    eax,0x4367a8
  42b575:	jmp    0x429e70
  42b57a:	int3   
  42b57b:	int3   
  42b57c:	int3   
  42b57d:	int3   
  42b57e:	int3   
  42b57f:	int3   
  42b580:	lea    ecx,[ebp-0x2c]
  42b583:	jmp    DWORD PTR ds:0x430264
  42b589:	mov    eax,DWORD PTR [ebp-0x34]
  42b58c:	and    eax,0x1
  42b58f:	je     0x42b5a2
  42b595:	and    DWORD PTR [ebp-0x34],0xfffffffe
  42b599:	mov    ecx,DWORD PTR [ebp-0x30]
  42b59c:	jmp    DWORD PTR ds:0x430264
  42b5a2:	ret    
  42b5a3:	mov    edx,DWORD PTR [esp+0x8]
  42b5a7:	lea    eax,[edx-0x28]
  42b5aa:	mov    ecx,DWORD PTR [edx-0x2c]
  42b5ad:	xor    ecx,eax
  42b5af:	call   0x42503a
  42b5b4:	add    eax,0x0
  42b5b7:	mov    ecx,DWORD PTR [edx-0x4]
  42b5ba:	xor    ecx,eax
  42b5bc:	call   0x42503a
  42b5c1:	mov    eax,0x4367dc
  42b5c6:	jmp    0x429e70
  42b5cb:	int3   
  42b5cc:	int3   
  42b5cd:	int3   
  42b5ce:	int3   
  42b5cf:	int3   
  42b5d0:	mov    ecx,DWORD PTR [ebp+0x4]
  42b5d3:	jmp    0x40e000
  42b5d8:	mov    edx,DWORD PTR [esp+0x8]
  42b5dc:	lea    eax,[edx-0x4]
  42b5df:	mov    ecx,DWORD PTR [edx-0x8]
  42b5e2:	xor    ecx,eax
  42b5e4:	call   0x42503a
  42b5e9:	mov    eax,0x436808
  42b5ee:	jmp    0x429e70
  42b5f3:	int3   
  42b5f4:	int3   
  42b5f5:	int3   
  42b5f6:	int3   
  42b5f7:	int3   
  42b5f8:	int3   
  42b5f9:	int3   
  42b5fa:	int3   
  42b5fb:	int3   
  42b5fc:	int3   
  42b5fd:	int3   
  42b5fe:	int3   
  42b5ff:	int3   
  42b600:	lea    ecx,[ebp-0x38]
  42b603:	jmp    0x41f030
  42b608:	mov    edx,DWORD PTR [esp+0x8]
  42b60c:	lea    eax,[edx-0x58]
  42b60f:	mov    ecx,DWORD PTR [edx-0x5c]
  42b612:	xor    ecx,eax
  42b614:	call   0x42503a
  42b619:	mov    eax,0x436834
  42b61e:	jmp    0x429e70
  42b623:	int3   
  42b624:	int3   
  42b625:	int3   
  42b626:	int3   
  42b627:	int3   
  42b628:	int3   
  42b629:	int3   
  42b62a:	int3   
  42b62b:	int3   
  42b62c:	int3   
  42b62d:	int3   
  42b62e:	int3   
  42b62f:	int3   
  42b630:	mov    ecx,DWORD PTR [ebp-0x18]
  42b633:	jmp    0x40cd30
  42b638:	mov    edx,DWORD PTR [esp+0x8]
  42b63c:	lea    eax,[edx-0x10]
  42b63f:	mov    ecx,DWORD PTR [edx-0x14]
  42b642:	xor    ecx,eax
  42b644:	call   0x42503a
  42b649:	mov    eax,0x436860
  42b64e:	jmp    0x429e70
  42b653:	int3   
  42b654:	int3   
  42b655:	int3   
  42b656:	int3   
  42b657:	int3   
  42b658:	int3   
  42b659:	int3   
  42b65a:	int3   
  42b65b:	int3   
  42b65c:	int3   
  42b65d:	int3   
  42b65e:	int3   
  42b65f:	int3   
  42b660:	lea    ecx,[ebp-0x28]
  42b663:	jmp    0x40cd30
  42b668:	mov    eax,DWORD PTR [ebp-0x2c]
  42b66b:	and    eax,0x1
  42b66e:	je     0x42b680
  42b674:	and    DWORD PTR [ebp-0x2c],0xfffffffe
  42b678:	mov    ecx,DWORD PTR [ebp+0x4]
  42b67b:	jmp    0x40cd30
  42b680:	ret    
  42b681:	mov    edx,DWORD PTR [esp+0x8]
  42b685:	lea    eax,[edx-0x24]
  42b688:	mov    ecx,DWORD PTR [edx-0x28]
  42b68b:	xor    ecx,eax
  42b68d:	call   0x42503a
  42b692:	mov    eax,0x436894
  42b697:	jmp    0x429e70
  42b69c:	int3   
  42b69d:	int3   
  42b69e:	int3   
  42b69f:	int3   
  42b6a0:	lea    ecx,[ebp-0x2c]
  42b6a3:	jmp    DWORD PTR ds:0x43025c
  42b6a9:	mov    edx,DWORD PTR [esp+0x8]
  42b6ad:	lea    eax,[edx-0x34]
  42b6b0:	mov    ecx,DWORD PTR [edx-0x38]
  42b6b3:	xor    ecx,eax
  42b6b5:	call   0x42503a
  42b6ba:	add    eax,0x10
  42b6bd:	mov    ecx,DWORD PTR [edx-0x4]
  42b6c0:	xor    ecx,eax
  42b6c2:	call   0x42503a
  42b6c7:	mov    eax,0x4368c0
  42b6cc:	jmp    0x429e70
  42b6d1:	int3   
  42b6d2:	int3   
  42b6d3:	int3   
  42b6d4:	int3   
  42b6d5:	int3   
  42b6d6:	int3   
  42b6d7:	int3   
  42b6d8:	int3   
  42b6d9:	int3   
  42b6da:	int3   
  42b6db:	int3   
  42b6dc:	int3   
  42b6dd:	int3   
  42b6de:	int3   
  42b6df:	int3   
  42b6e0:	lea    ecx,[ebp-0x64]
  42b6e3:	jmp    DWORD PTR ds:0x43025c
  42b6e9:	lea    ecx,[ebp-0x48]
  42b6ec:	jmp    DWORD PTR ds:0x43025c
  42b6f2:	lea    ecx,[ebp-0x2c]
  42b6f5:	jmp    DWORD PTR ds:0x430264
  42b6fb:	mov    edx,DWORD PTR [esp+0x8]
  42b6ff:	lea    eax,[edx-0x70]
  42b702:	mov    ecx,DWORD PTR [edx-0x74]
  42b705:	xor    ecx,eax
  42b707:	call   0x42503a
  42b70c:	add    eax,0xc
  42b70f:	mov    ecx,DWORD PTR [edx-0x4]
  42b712:	xor    ecx,eax
  42b714:	call   0x42503a
  42b719:	mov    eax,0x43690c
  42b71e:	jmp    0x429e70
  42b723:	int3   
  42b724:	int3   
  42b725:	int3   
  42b726:	int3   
  42b727:	int3   
  42b728:	int3   
  42b729:	int3   
  42b72a:	int3   
  42b72b:	int3   
  42b72c:	int3   
  42b72d:	int3   
  42b72e:	int3   
  42b72f:	int3   
  42b730:	lea    ecx,[ebp-0x28]
  42b733:	jmp    DWORD PTR ds:0x43025c
  42b739:	mov    ecx,DWORD PTR [ebp+0x4]
  42b73c:	jmp    0x402890
  42b741:	mov    edx,DWORD PTR [esp+0x8]
  42b745:	lea    eax,[edx-0x20]
  42b748:	mov    ecx,DWORD PTR [edx-0x24]
  42b74b:	xor    ecx,eax
  42b74d:	call   0x42503a
  42b752:	mov    eax,0x436948
  42b757:	jmp    0x429e70
  42b75c:	int3   
  42b75d:	int3   
  42b75e:	int3   
  42b75f:	int3   
  42b760:	mov    edx,DWORD PTR [esp+0x8]
  42b764:	lea    eax,[edx+0xc]
  42b767:	mov    ecx,DWORD PTR [edx-0x18]
  42b76a:	xor    ecx,eax
  42b76c:	call   0x42503a
  42b771:	mov    eax,0x4369a0
  42b776:	jmp    0x429e70
  42b77b:	int3   
  42b77c:	int3   
  42b77d:	int3   
  42b77e:	int3   
  42b77f:	int3   
  42b780:	lea    ecx,[ebp-0x30]
  42b783:	jmp    DWORD PTR ds:0x430264
  42b789:	mov    edx,DWORD PTR [esp+0x8]
  42b78d:	lea    eax,[edx-0x34]
  42b790:	mov    ecx,DWORD PTR [edx-0x38]
  42b793:	xor    ecx,eax
  42b795:	call   0x42503a
  42b79a:	add    eax,0xc
  42b79d:	mov    ecx,DWORD PTR [edx-0x8]
  42b7a0:	xor    ecx,eax
  42b7a2:	call   0x42503a
  42b7a7:	mov    eax,0x4369cc
  42b7ac:	jmp    0x429e70
  42b7b1:	int3   
  42b7b2:	int3   
  42b7b3:	int3   
  42b7b4:	int3   
  42b7b5:	int3   
  42b7b6:	int3   
  42b7b7:	int3   
  42b7b8:	int3   
  42b7b9:	int3   
  42b7ba:	int3   
  42b7bb:	int3   
  42b7bc:	int3   
  42b7bd:	int3   
  42b7be:	int3   
  42b7bf:	int3   
  42b7c0:	lea    ecx,[ebp-0x88]
  42b7c6:	jmp    DWORD PTR ds:0x43025c
  42b7cc:	mov    edx,DWORD PTR [esp+0x8]
  42b7d0:	lea    eax,[edx-0x88]
  42b7d6:	mov    ecx,DWORD PTR [edx-0x8c]
  42b7dc:	xor    ecx,eax
  42b7de:	call   0x42503a
  42b7e3:	add    eax,0xc
  42b7e6:	mov    ecx,DWORD PTR [edx-0x4]
  42b7e9:	xor    ecx,eax
  42b7eb:	call   0x42503a
  42b7f0:	mov    eax,0x4369f8
  42b7f5:	jmp    0x429e70
  42b7fa:	int3   
  42b7fb:	int3   
  42b7fc:	int3   
  42b7fd:	int3   
  42b7fe:	int3   
  42b7ff:	int3   
  42b800:	mov    eax,DWORD PTR [ebp-0x23c]
  42b806:	and    eax,0x1
  42b809:	je     0x42b822
  42b80f:	and    DWORD PTR [ebp-0x23c],0xfffffffe
  42b816:	mov    ecx,DWORD PTR [ebp-0x238]
  42b81c:	jmp    DWORD PTR ds:0x430264
  42b822:	ret    
  42b823:	lea    ecx,[ebp-0x234]
  42b829:	jmp    DWORD PTR ds:0x430264
  42b82f:	mov    edx,DWORD PTR [esp+0x8]
  42b833:	lea    eax,[edx-0x23c]
  42b839:	mov    ecx,DWORD PTR [edx-0x240]
  42b83f:	xor    ecx,eax
  42b841:	call   0x42503a
  42b846:	add    eax,0x8
  42b849:	mov    ecx,DWORD PTR [edx-0x4]
  42b84c:	xor    ecx,eax
  42b84e:	call   0x42503a
  42b853:	mov    eax,0x436a2c
  42b858:	jmp    0x429e70
  42b85d:	int3   
  42b85e:	int3   
  42b85f:	int3   
  42b860:	mov    eax,DWORD PTR [ebp+0x4]
  42b863:	jmp    0x4042b0
  42b868:	mov    edx,DWORD PTR [esp+0x8]
  42b86c:	lea    eax,[edx-0x4]
  42b86f:	mov    ecx,DWORD PTR [edx-0x8]
  42b872:	xor    ecx,eax
  42b874:	call   0x42503a
  42b879:	mov    eax,0x436a58
  42b87e:	jmp    0x429e70
  42b883:	int3   
  42b884:	int3   
  42b885:	int3   
  42b886:	int3   
  42b887:	int3   
  42b888:	int3   
  42b889:	int3   
  42b88a:	int3   
  42b88b:	int3   
  42b88c:	int3   
  42b88d:	int3   
  42b88e:	int3   
  42b88f:	int3   
  42b890:	mov    eax,DWORD PTR [ebp+0x4]
  42b893:	jmp    0x403880
  42b898:	mov    edx,DWORD PTR [esp+0x8]
  42b89c:	lea    eax,[edx-0x4]
  42b89f:	mov    ecx,DWORD PTR [edx-0x8]
  42b8a2:	xor    ecx,eax
  42b8a4:	call   0x42503a
  42b8a9:	mov    eax,0x436a84
  42b8ae:	jmp    0x429e70
  42b8b3:	int3   
  42b8b4:	int3   
  42b8b5:	int3   
  42b8b6:	int3   
  42b8b7:	int3   
  42b8b8:	int3   
  42b8b9:	int3   
  42b8ba:	int3   
  42b8bb:	int3   
  42b8bc:	int3   
  42b8bd:	int3   
  42b8be:	int3   
  42b8bf:	int3   
  42b8c0:	mov    eax,DWORD PTR [ebp-0x10]
  42b8c3:	add    eax,0x4
  42b8c6:	push   eax
  42b8c7:	call   0x40b540
  42b8cc:	ret    
  42b8cd:	mov    edx,DWORD PTR [esp+0x8]
  42b8d1:	lea    eax,[edx-0x8]
  42b8d4:	mov    ecx,DWORD PTR [edx-0xc]
  42b8d7:	xor    ecx,eax
  42b8d9:	call   0x42503a
  42b8de:	mov    eax,0x436ab0
  42b8e3:	jmp    0x429e70
  42b8e8:	int3   
  42b8e9:	int3   
  42b8ea:	int3   
  42b8eb:	int3   
  42b8ec:	int3   
  42b8ed:	int3   
  42b8ee:	int3   
  42b8ef:	int3   
  42b8f0:	mov    eax,DWORD PTR [ebp-0x18]
  42b8f3:	push   eax
  42b8f4:	mov    ecx,DWORD PTR [ebp-0x1c]
  42b8f7:	push   ecx
  42b8f8:	call   0x4029a0
  42b8fd:	add    esp,0x8
  42b900:	ret    
  42b901:	mov    edx,DWORD PTR [esp+0x8]
  42b905:	lea    eax,[edx+0xc]
  42b908:	mov    ecx,DWORD PTR [edx-0x20]
  42b90b:	xor    ecx,eax
  42b90d:	call   0x42503a
  42b912:	mov    eax,0x436b10
  42b917:	jmp    0x429e70
  42b91c:	int3   
  42b91d:	int3   
  42b91e:	int3   
  42b91f:	int3   
  42b920:	mov    ecx,DWORD PTR [ebp+0x4]
  42b923:	jmp    DWORD PTR ds:0x430264
  42b929:	mov    eax,DWORD PTR [ebp-0x10]
  42b92c:	jmp    0x413580
  42b931:	mov    edx,DWORD PTR [esp+0x8]
  42b935:	lea    eax,[edx-0xc]
  42b938:	mov    ecx,DWORD PTR [edx-0x10]
  42b93b:	xor    ecx,eax
  42b93d:	call   0x42503a
  42b942:	mov    eax,0x436b44
  42b947:	jmp    0x429e70
  42b94c:	int3   
  42b94d:	int3   
  42b94e:	int3   
  42b94f:	int3   
  42b950:	lea    eax,[ebp+0x4]
  42b953:	push   eax
  42b954:	call   0x415b30
  42b959:	ret    
  42b95a:	mov    edx,DWORD PTR [esp+0x8]
  42b95e:	lea    eax,[edx-0x10]
  42b961:	mov    ecx,DWORD PTR [edx-0x14]
  42b964:	xor    ecx,eax
  42b966:	call   0x42503a
  42b96b:	mov    eax,0x436b70
  42b970:	jmp    0x429e70
  42b975:	int3   
  42b976:	int3   
  42b977:	int3   
  42b978:	int3   
  42b979:	int3   
  42b97a:	int3   
  42b97b:	int3   
  42b97c:	int3   
  42b97d:	int3   
  42b97e:	int3   
  42b97f:	int3   
  42b980:	lea    ecx,[ebp+0x4]
  42b983:	jmp    0x411990
  42b988:	mov    eax,DWORD PTR [ebp-0x10]
  42b98b:	push   eax
  42b98c:	call   0x42504a
  42b991:	pop    ecx
  42b992:	ret    
  42b993:	mov    edx,DWORD PTR [esp+0x8]
  42b997:	lea    eax,[edx-0x8]
  42b99a:	mov    ecx,DWORD PTR [edx-0xc]
  42b99d:	xor    ecx,eax
  42b99f:	call   0x42503a
  42b9a4:	mov    eax,0x436ba4
  42b9a9:	jmp    0x429e70
  42b9ae:	int3   
  42b9af:	int3   
  42b9b0:	lea    ecx,[ebp+0x4]
  42b9b3:	jmp    0x411990
  42b9b8:	mov    edx,DWORD PTR [esp+0x8]
  42b9bc:	lea    eax,[edx-0x8]
  42b9bf:	mov    ecx,DWORD PTR [edx-0xc]
  42b9c2:	xor    ecx,eax
  42b9c4:	call   0x42503a
  42b9c9:	mov    eax,0x436bd0
  42b9ce:	jmp    0x429e70
  42b9d3:	int3   
  42b9d4:	int3   
  42b9d5:	int3   
  42b9d6:	int3   
  42b9d7:	int3   
  42b9d8:	int3   
  42b9d9:	int3   
  42b9da:	int3   
  42b9db:	int3   
  42b9dc:	int3   
  42b9dd:	int3   
  42b9de:	int3   
  42b9df:	int3   
  42b9e0:	lea    eax,[ebp+0x8]
  42b9e3:	jmp    0x4127b0
  42b9e8:	mov    edx,DWORD PTR [esp+0x8]
  42b9ec:	lea    eax,[edx-0x8]
  42b9ef:	mov    ecx,DWORD PTR [edx-0xc]
  42b9f2:	xor    ecx,eax
  42b9f4:	call   0x42503a
  42b9f9:	mov    eax,0x436bfc
  42b9fe:	jmp    0x429e70
  42ba03:	int3   
  42ba04:	int3   
  42ba05:	int3   
  42ba06:	int3   
  42ba07:	int3   
  42ba08:	int3   
  42ba09:	int3   
  42ba0a:	int3   
  42ba0b:	int3   
  42ba0c:	int3   
  42ba0d:	int3   
  42ba0e:	int3   
  42ba0f:	int3   
  42ba10:	lea    eax,[ebp-0x74]
  42ba13:	push   eax
  42ba14:	call   0x415b30
  42ba19:	ret    
  42ba1a:	lea    ecx,[ebp-0x70]
  42ba1d:	jmp    DWORD PTR ds:0x430264
  42ba23:	lea    ecx,[ebp-0x54]
  42ba26:	jmp    DWORD PTR ds:0x430264
  42ba2c:	mov    edx,DWORD PTR [esp+0x8]
  42ba30:	lea    eax,[edx-0x88]
  42ba36:	mov    ecx,DWORD PTR [edx-0x8c]
  42ba3c:	xor    ecx,eax
  42ba3e:	call   0x42503a
  42ba43:	add    eax,0x10
  42ba46:	mov    ecx,DWORD PTR [edx-0x8]
  42ba49:	xor    ecx,eax
  42ba4b:	call   0x42503a
  42ba50:	mov    eax,0x436c38
  42ba55:	jmp    0x429e70
  42ba5a:	int3   
  42ba5b:	int3   
  42ba5c:	int3   
  42ba5d:	int3   
  42ba5e:	int3   
  42ba5f:	int3   
  42ba60:	mov    eax,DWORD PTR [ebp+0x4]
  42ba63:	push   eax
  42ba64:	call   0x42504a
  42ba69:	pop    ecx
  42ba6a:	ret    
  42ba6b:	mov    edx,DWORD PTR [esp+0x8]
  42ba6f:	lea    eax,[edx-0x8]
  42ba72:	mov    ecx,DWORD PTR [edx-0xc]
  42ba75:	xor    ecx,eax
  42ba77:	call   0x42503a
  42ba7c:	mov    eax,0x436c64
  42ba81:	jmp    0x429e70
  42ba86:	int3   
  42ba87:	int3   
  42ba88:	int3   
  42ba89:	int3   
  42ba8a:	int3   
  42ba8b:	int3   
  42ba8c:	int3   
  42ba8d:	int3   
  42ba8e:	int3   
  42ba8f:	int3   
  42ba90:	lea    ecx,[ebp-0x30]
  42ba93:	jmp    DWORD PTR ds:0x430264
  42ba99:	mov    eax,DWORD PTR [ebp-0x3c]
  42ba9c:	push   eax
  42ba9d:	mov    ecx,DWORD PTR [ebp-0x40]
  42baa0:	push   ecx
  42baa1:	call   0x4029a0
  42baa6:	add    esp,0x8
  42baa9:	ret    
  42baaa:	mov    edx,DWORD PTR [esp+0x8]
  42baae:	lea    eax,[edx+0xc]
  42bab1:	mov    ecx,DWORD PTR [edx-0x44]
  42bab4:	xor    ecx,eax
  42bab6:	call   0x42503a
  42babb:	mov    ecx,DWORD PTR [edx-0x8]
  42babe:	xor    ecx,eax
  42bac0:	call   0x42503a
  42bac5:	mov    eax,0x436ccc
  42baca:	jmp    0x429e70
  42bacf:	int3   
  42bad0:	lea    ecx,[ebp-0x30]
  42bad3:	jmp    DWORD PTR ds:0x43025c
  42bad9:	mov    eax,DWORD PTR [ebp-0x3c]
  42badc:	push   eax
  42badd:	mov    ecx,DWORD PTR [ebp-0x40]
  42bae0:	push   ecx
  42bae1:	call   0x4029a0
  42bae6:	add    esp,0x8
  42bae9:	ret    
  42baea:	mov    edx,DWORD PTR [esp+0x8]
  42baee:	lea    eax,[edx+0xc]
  42baf1:	mov    ecx,DWORD PTR [edx-0x44]
  42baf4:	xor    ecx,eax
  42baf6:	call   0x42503a
  42bafb:	mov    ecx,DWORD PTR [edx-0x8]
  42bafe:	xor    ecx,eax
  42bb00:	call   0x42503a
  42bb05:	mov    eax,0x436d34
  42bb0a:	jmp    0x429e70
  42bb0f:	int3   
  42bb10:	mov    eax,DWORD PTR [ebp-0x18]
  42bb13:	push   eax
  42bb14:	mov    ecx,DWORD PTR [ebp-0x1c]
  42bb17:	push   ecx
  42bb18:	call   0x4029a0
  42bb1d:	add    esp,0x8
  42bb20:	ret    
  42bb21:	mov    edx,DWORD PTR [esp+0x8]
  42bb25:	lea    eax,[edx+0xc]
  42bb28:	mov    ecx,DWORD PTR [edx-0x20]
  42bb2b:	xor    ecx,eax
  42bb2d:	call   0x42503a
  42bb32:	mov    eax,0x436d94
  42bb37:	jmp    0x429e70
  42bb3c:	int3   
  42bb3d:	int3   
  42bb3e:	int3   
  42bb3f:	int3   
  42bb40:	lea    eax,[ebp+0x4]
  42bb43:	jmp    0x4127b0
  42bb48:	mov    edx,DWORD PTR [esp+0x8]
  42bb4c:	lea    eax,[edx]
  42bb4e:	mov    ecx,DWORD PTR [edx-0x4]
  42bb51:	xor    ecx,eax
  42bb53:	call   0x42503a
  42bb58:	mov    eax,0x436dc0
  42bb5d:	jmp    0x429e70
  42bb62:	int3   
  42bb63:	int3   
  42bb64:	int3   
  42bb65:	int3   
  42bb66:	int3   
  42bb67:	int3   
  42bb68:	int3   
  42bb69:	int3   
  42bb6a:	int3   
  42bb6b:	int3   
  42bb6c:	int3   
  42bb6d:	int3   
  42bb6e:	int3   
  42bb6f:	int3   
  42bb70:	mov    edx,DWORD PTR [esp+0x8]
  42bb74:	lea    eax,[edx+0xc]
  42bb77:	mov    ecx,DWORD PTR [edx-0x1c]
  42bb7a:	xor    ecx,eax
  42bb7c:	call   0x42503a
  42bb81:	mov    eax,0x436e18
  42bb86:	jmp    0x429e70
  42bb8b:	int3   
  42bb8c:	int3   
  42bb8d:	int3   
  42bb8e:	int3   
  42bb8f:	int3   
  42bb90:	mov    edx,DWORD PTR [esp+0x8]
  42bb94:	lea    eax,[edx+0xc]
  42bb97:	mov    ecx,DWORD PTR [edx-0x1c]
  42bb9a:	xor    ecx,eax
  42bb9c:	call   0x42503a
  42bba1:	mov    eax,0x436e70
  42bba6:	jmp    0x429e70
  42bbab:	int3   
  42bbac:	int3   
  42bbad:	int3   
  42bbae:	int3   
  42bbaf:	int3   
  42bbb0:	mov    edx,DWORD PTR [esp+0x8]
  42bbb4:	lea    eax,[edx+0xc]
  42bbb7:	mov    ecx,DWORD PTR [edx-0x14]
  42bbba:	xor    ecx,eax
  42bbbc:	call   0x42503a
  42bbc1:	mov    eax,0x436ec8
  42bbc6:	jmp    0x429e70
  42bbcb:	int3   
  42bbcc:	int3   
  42bbcd:	int3   
  42bbce:	int3   
  42bbcf:	int3   
  42bbd0:	lea    eax,[ebp+0x4]
  42bbd3:	jmp    0x4127b0
  42bbd8:	lea    eax,[ebp-0x1c]
  42bbdb:	jmp    0x4127b0
  42bbe0:	mov    edx,DWORD PTR [esp+0x8]
  42bbe4:	lea    eax,[edx-0x1c]
  42bbe7:	mov    ecx,DWORD PTR [edx-0x20]
  42bbea:	xor    ecx,eax
  42bbec:	call   0x42503a
  42bbf1:	mov    eax,0x436efc
  42bbf6:	jmp    0x429e70
  42bbfb:	int3   
  42bbfc:	int3   
  42bbfd:	int3   
  42bbfe:	int3   
  42bbff:	int3   
  42bc00:	lea    ecx,[ebp+0x24]
  42bc03:	jmp    0x40cd30
  42bc08:	lea    ecx,[ebp+0x8]
  42bc0b:	jmp    0x40cd30
  42bc10:	mov    ecx,DWORD PTR [ebp-0x14]
  42bc13:	jmp    0x40e000
  42bc18:	mov    edx,DWORD PTR [esp+0x8]
  42bc1c:	lea    eax,[edx-0xc]
  42bc1f:	mov    ecx,DWORD PTR [edx-0x10]
  42bc22:	xor    ecx,eax
  42bc24:	call   0x42503a
  42bc29:	mov    eax,0x436f38
  42bc2e:	jmp    0x429e70
  42bc33:	int3   
  42bc34:	int3   
  42bc35:	int3   
  42bc36:	int3   
  42bc37:	int3   
  42bc38:	int3   
  42bc39:	int3   
  42bc3a:	int3   
  42bc3b:	int3   
  42bc3c:	int3   
  42bc3d:	int3   
  42bc3e:	int3   
  42bc3f:	int3   
  42bc40:	lea    ecx,[ebp+0xc]
  42bc43:	jmp    0x40cd30
  42bc48:	mov    edx,DWORD PTR [esp+0x8]
  42bc4c:	lea    eax,[edx]
  42bc4e:	mov    ecx,DWORD PTR [edx-0x4]
  42bc51:	xor    ecx,eax
  42bc53:	call   0x42503a
  42bc58:	mov    eax,0x436f64
  42bc5d:	jmp    0x429e70
  42bc62:	int3   
  42bc63:	int3   
  42bc64:	int3   
  42bc65:	int3   
  42bc66:	int3   
  42bc67:	int3   
  42bc68:	int3   
  42bc69:	int3   
  42bc6a:	int3   
  42bc6b:	int3   
  42bc6c:	int3   
  42bc6d:	int3   
  42bc6e:	int3   
  42bc6f:	int3   
  42bc70:	lea    ecx,[ebp+0x24]
  42bc73:	jmp    0x40cd30
  42bc78:	lea    ecx,[ebp+0x8]
  42bc7b:	jmp    0x40cd30
  42bc80:	mov    ecx,DWORD PTR [ebp-0x14]
  42bc83:	jmp    0x40cd30
  42bc88:	mov    edx,DWORD PTR [esp+0x8]
  42bc8c:	lea    eax,[edx-0x8]
  42bc8f:	mov    ecx,DWORD PTR [edx-0xc]
  42bc92:	xor    ecx,eax
  42bc94:	call   0x42503a
  42bc99:	mov    eax,0x436fa0
  42bc9e:	jmp    0x429e70
  42bca3:	int3   
  42bca4:	int3   
  42bca5:	int3   
  42bca6:	int3   
  42bca7:	int3   
  42bca8:	int3   
  42bca9:	int3   
  42bcaa:	int3   
  42bcab:	int3   
  42bcac:	int3   
  42bcad:	int3   
  42bcae:	int3   
  42bcaf:	int3   
  42bcb0:	lea    ecx,[ebp+0x4]
  42bcb3:	jmp    0x40cd30
  42bcb8:	mov    edx,DWORD PTR [esp+0x8]
  42bcbc:	lea    eax,[edx-0x8]
  42bcbf:	mov    ecx,DWORD PTR [edx-0xc]
  42bcc2:	xor    ecx,eax
  42bcc4:	call   0x42503a
  42bcc9:	mov    eax,0x436fcc
  42bcce:	jmp    0x429e70
  42bcd3:	int3   
  42bcd4:	int3   
  42bcd5:	int3   
  42bcd6:	int3   
  42bcd7:	int3   
  42bcd8:	int3   
  42bcd9:	int3   
  42bcda:	int3   
  42bcdb:	int3   
  42bcdc:	int3   
  42bcdd:	int3   
  42bcde:	int3   
  42bcdf:	int3   
  42bce0:	lea    ecx,[ebp+0xc]
  42bce3:	jmp    0x40cd30
  42bce8:	mov    edx,DWORD PTR [esp+0x8]
  42bcec:	lea    eax,[edx-0x8]
  42bcef:	mov    ecx,DWORD PTR [edx-0xc]
  42bcf2:	xor    ecx,eax
  42bcf4:	call   0x42503a
  42bcf9:	mov    eax,0x436ff8
  42bcfe:	jmp    0x429e70
  42bd03:	int3   
  42bd04:	int3   
  42bd05:	int3   
  42bd06:	int3   
  42bd07:	int3   
  42bd08:	int3   
  42bd09:	int3   
  42bd0a:	int3   
  42bd0b:	int3   
  42bd0c:	int3   
  42bd0d:	int3   
  42bd0e:	int3   
  42bd0f:	int3   
  42bd10:	lea    ecx,[ebp+0x24]
  42bd13:	jmp    0x40cd30
  42bd18:	lea    ecx,[ebp+0x8]
  42bd1b:	jmp    0x40cd30
  42bd20:	mov    ecx,DWORD PTR [ebp-0x14]
  42bd23:	jmp    0x40cd30
  42bd28:	mov    edx,DWORD PTR [esp+0x8]
  42bd2c:	lea    eax,[edx-0xc]
  42bd2f:	mov    ecx,DWORD PTR [edx-0x10]
  42bd32:	xor    ecx,eax
  42bd34:	call   0x42503a
  42bd39:	mov    eax,0x437034
  42bd3e:	jmp    0x429e70
  42bd43:	int3   
  42bd44:	int3   
  42bd45:	int3   
  42bd46:	int3   
  42bd47:	int3   
  42bd48:	int3   
  42bd49:	int3   
  42bd4a:	int3   
  42bd4b:	int3   
  42bd4c:	int3   
  42bd4d:	int3   
  42bd4e:	int3   
  42bd4f:	int3   
  42bd50:	mov    ecx,DWORD PTR [ebp+0x4]
  42bd53:	jmp    0x40e000
  42bd58:	mov    edx,DWORD PTR [esp+0x8]
  42bd5c:	lea    eax,[edx-0x8]
  42bd5f:	mov    ecx,DWORD PTR [edx-0xc]
  42bd62:	xor    ecx,eax
  42bd64:	call   0x42503a
  42bd69:	mov    eax,0x437060
  42bd6e:	jmp    0x429e70
  42bd73:	int3   
  42bd74:	int3   
  42bd75:	int3   
  42bd76:	int3   
  42bd77:	int3   
  42bd78:	int3   
  42bd79:	int3   
  42bd7a:	int3   
  42bd7b:	int3   
  42bd7c:	int3   
  42bd7d:	int3   
  42bd7e:	int3   
  42bd7f:	int3   
  42bd80:	lea    ecx,[ebp+0x14]
  42bd83:	jmp    0x411980
  42bd88:	mov    edx,DWORD PTR [esp+0x8]
  42bd8c:	lea    eax,[edx-0x8]
  42bd8f:	mov    ecx,DWORD PTR [edx-0xc]
  42bd92:	xor    ecx,eax
  42bd94:	call   0x42503a
  42bd99:	mov    eax,0x43708c
  42bd9e:	jmp    0x429e70
  42bda3:	int3   
  42bda4:	int3   
  42bda5:	int3   
  42bda6:	int3   
  42bda7:	int3   
  42bda8:	int3   
  42bda9:	int3   
  42bdaa:	int3   
  42bdab:	int3   
  42bdac:	int3   
  42bdad:	int3   
  42bdae:	int3   
  42bdaf:	int3   
  42bdb0:	lea    ecx,[ebp+0x4]
  42bdb3:	jmp    0x411990
  42bdb8:	mov    edx,DWORD PTR [esp+0x8]
  42bdbc:	lea    eax,[edx-0x4]
  42bdbf:	mov    ecx,DWORD PTR [edx-0x8]
  42bdc2:	xor    ecx,eax
  42bdc4:	call   0x42503a
  42bdc9:	mov    eax,0x4370b8
  42bdce:	jmp    0x429e70
  42bdd3:	int3   
  42bdd4:	int3   
  42bdd5:	int3   
  42bdd6:	int3   
  42bdd7:	int3   
  42bdd8:	int3   
  42bdd9:	int3   
  42bdda:	int3   
  42bddb:	int3   
  42bddc:	int3   
  42bddd:	int3   
  42bdde:	int3   
  42bddf:	int3   
  42bde0:	lea    ecx,[ebp+0xc]
  42bde3:	jmp    DWORD PTR ds:0x430264
  42bde9:	lea    ecx,[ebp-0x30]
  42bdec:	jmp    0x40e000
  42bdf1:	mov    eax,DWORD PTR [ebp-0x38]
  42bdf4:	and    eax,0x1
  42bdf7:	je     0x42be09
  42bdfd:	and    DWORD PTR [ebp-0x38],0xfffffffe
  42be01:	mov    ecx,DWORD PTR [ebp-0x34]
  42be04:	jmp    0x411990
  42be09:	ret    
  42be0a:	mov    edx,DWORD PTR [esp+0x8]
  42be0e:	lea    eax,[edx-0x30]
  42be11:	mov    ecx,DWORD PTR [edx-0x34]
  42be14:	xor    ecx,eax
  42be16:	call   0x42503a
  42be1b:	mov    eax,0x4370f4
  42be20:	jmp    0x429e70
  42be25:	int3   
  42be26:	int3   
  42be27:	int3   
  42be28:	int3   
  42be29:	int3   
  42be2a:	int3   
  42be2b:	int3   
  42be2c:	int3   
  42be2d:	int3   
  42be2e:	int3   
  42be2f:	int3   
  42be30:	lea    ecx,[ebp-0x2c]
  42be33:	jmp    DWORD PTR ds:0x430264
  42be39:	lea    ecx,[ebp-0x48]
  42be3c:	jmp    DWORD PTR ds:0x430264
  42be42:	mov    edx,DWORD PTR [esp+0x8]
  42be46:	lea    eax,[edx-0x40]
  42be49:	mov    ecx,DWORD PTR [edx-0x44]
  42be4c:	xor    ecx,eax
  42be4e:	call   0x42503a
  42be53:	add    eax,0x4
  42be56:	mov    ecx,DWORD PTR [edx-0x4]
  42be59:	xor    ecx,eax
  42be5b:	call   0x42503a
  42be60:	mov    eax,0x437128
  42be65:	jmp    0x429e70
  42be6a:	int3   
  42be6b:	int3   
  42be6c:	int3   
  42be6d:	int3   
  42be6e:	int3   
  42be6f:	int3   
  42be70:	lea    ecx,[ebp-0x2c]
  42be73:	jmp    DWORD PTR ds:0x430264
  42be79:	mov    edx,DWORD PTR [esp+0x8]
  42be7d:	lea    eax,[edx-0x20]
  42be80:	mov    ecx,DWORD PTR [edx-0x24]
  42be83:	xor    ecx,eax
  42be85:	call   0x42503a
  42be8a:	add    eax,0x0
  42be8d:	mov    ecx,DWORD PTR [edx-0x4]
  42be90:	xor    ecx,eax
  42be92:	call   0x42503a
  42be97:	mov    eax,0x437154
  42be9c:	jmp    0x429e70
  42bea1:	int3   
  42bea2:	int3   
  42bea3:	int3   
  42bea4:	int3   
  42bea5:	int3   
  42bea6:	int3   
  42bea7:	int3   
  42bea8:	int3   
  42bea9:	int3   
  42beaa:	int3   
  42beab:	int3   
  42beac:	int3   
  42bead:	int3   
  42beae:	int3   
  42beaf:	int3   
  42beb0:	lea    ecx,[ebp-0x50]
  42beb3:	jmp    DWORD PTR ds:0x43025c
  42beb9:	mov    edx,DWORD PTR [esp+0x8]
  42bebd:	lea    eax,[edx-0x44]
  42bec0:	mov    ecx,DWORD PTR [edx-0x48]
  42bec3:	xor    ecx,eax
  42bec5:	call   0x42503a
  42beca:	mov    eax,0x437180
  42becf:	jmp    0x429e70
  42bed4:	int3   
  42bed5:	int3   
  42bed6:	int3   
  42bed7:	int3   
  42bed8:	int3   
  42bed9:	int3   
  42beda:	int3   
  42bedb:	int3   
  42bedc:	int3   
  42bedd:	int3   
  42bede:	int3   
  42bedf:	int3   
  42bee0:	lea    ecx,[ebp-0x30]
  42bee3:	jmp    DWORD PTR ds:0x430264
  42bee9:	lea    ecx,[ebp-0x4c]
  42beec:	jmp    DWORD PTR ds:0x430264
  42bef2:	mov    edx,DWORD PTR [esp+0x8]
  42bef6:	lea    eax,[edx+0xc]
  42bef9:	mov    ecx,DWORD PTR [edx-0x64]
  42befc:	xor    ecx,eax
  42befe:	call   0x42503a
  42bf03:	mov    ecx,DWORD PTR [edx-0x8]
  42bf06:	xor    ecx,eax
  42bf08:	call   0x42503a
  42bf0d:	mov    eax,0x43721c
  42bf12:	jmp    0x429e70
  42bf17:	int3   
  42bf18:	int3   
  42bf19:	int3   
  42bf1a:	int3   
  42bf1b:	int3   
  42bf1c:	int3   
  42bf1d:	int3   
  42bf1e:	int3   
  42bf1f:	int3   
  42bf20:	lea    ecx,[ebp-0x54]
  42bf23:	jmp    DWORD PTR ds:0x43025c
  42bf29:	mov    edx,DWORD PTR [esp+0x8]
  42bf2d:	lea    eax,[edx-0x4c]
  42bf30:	mov    ecx,DWORD PTR [edx-0x50]
  42bf33:	xor    ecx,eax
  42bf35:	call   0x42503a
  42bf3a:	mov    eax,0x437248
  42bf3f:	jmp    0x429e70
  42bf44:	int3   
  42bf45:	int3   
  42bf46:	int3   
  42bf47:	int3   
  42bf48:	int3   
  42bf49:	int3   
  42bf4a:	int3   
  42bf4b:	int3   
  42bf4c:	int3   
  42bf4d:	int3   
  42bf4e:	int3   
  42bf4f:	int3   
  42bf50:	lea    ecx,[ebp-0x30]
  42bf53:	jmp    DWORD PTR ds:0x43025c
  42bf59:	lea    ecx,[ebp-0x4c]
  42bf5c:	jmp    DWORD PTR ds:0x43025c
  42bf62:	mov    edx,DWORD PTR [esp+0x8]
  42bf66:	lea    eax,[edx+0xc]
  42bf69:	mov    ecx,DWORD PTR [edx-0x68]
  42bf6c:	xor    ecx,eax
  42bf6e:	call   0x42503a
  42bf73:	mov    ecx,DWORD PTR [edx-0x8]
  42bf76:	xor    ecx,eax
  42bf78:	call   0x42503a
  42bf7d:	mov    eax,0x4372e4
  42bf82:	jmp    0x429e70
  42bf87:	int3   
  42bf88:	int3   
  42bf89:	int3   
  42bf8a:	int3   
  42bf8b:	int3   
  42bf8c:	int3   
  42bf8d:	int3   
  42bf8e:	int3   
  42bf8f:	int3   
  42bf90:	mov    eax,DWORD PTR [ebp+0x4]
  42bf93:	jmp    0x413580
  42bf98:	mov    edx,DWORD PTR [esp+0x8]
  42bf9c:	lea    eax,[edx-0x8]
  42bf9f:	mov    ecx,DWORD PTR [edx-0xc]
  42bfa2:	xor    ecx,eax
  42bfa4:	call   0x42503a
  42bfa9:	mov    eax,0x437310
  42bfae:	jmp    0x429e70
  42bfb3:	int3   
  42bfb4:	int3   
  42bfb5:	int3   
  42bfb6:	int3   
  42bfb7:	int3   
  42bfb8:	int3   
  42bfb9:	int3   
  42bfba:	int3   
  42bfbb:	int3   
  42bfbc:	int3   
  42bfbd:	int3   
  42bfbe:	int3   
  42bfbf:	int3   
  42bfc0:	lea    eax,[ebp-0x34]
  42bfc3:	push   eax
  42bfc4:	call   0x40b540
  42bfc9:	ret    
  42bfca:	mov    edx,DWORD PTR [esp+0x8]
  42bfce:	lea    eax,[edx-0x3c]
  42bfd1:	mov    ecx,DWORD PTR [edx-0x40]
  42bfd4:	xor    ecx,eax
  42bfd6:	call   0x42503a
  42bfdb:	add    eax,0xc
  42bfde:	mov    ecx,DWORD PTR [edx-0x8]
  42bfe1:	xor    ecx,eax
  42bfe3:	call   0x42503a
  42bfe8:	mov    eax,0x43733c
  42bfed:	jmp    0x429e70
  42bff2:	int3   
  42bff3:	int3   
  42bff4:	int3   
  42bff5:	int3   
  42bff6:	int3   
  42bff7:	int3   
  42bff8:	int3   
  42bff9:	int3   
  42bffa:	int3   
  42bffb:	int3   
  42bffc:	int3   
  42bffd:	int3   
  42bffe:	int3   
  42bfff:	int3   
  42c000:	mov    ecx,DWORD PTR [ebp+0x4]
  42c003:	jmp    DWORD PTR ds:0x43025c
  42c009:	mov    eax,DWORD PTR [ebp+0x4]
  42c00c:	add    eax,0x1c
  42c00f:	jmp    0x40c210
  42c014:	mov    edx,DWORD PTR [esp+0x8]
  42c018:	lea    eax,[edx-0x8]
  42c01b:	mov    ecx,DWORD PTR [edx-0xc]
  42c01e:	xor    ecx,eax
  42c020:	call   0x42503a
  42c025:	mov    eax,0x437370
  42c02a:	jmp    0x429e70
  42c02f:	int3   
  42c030:	mov    eax,DWORD PTR [ebp-0x28]
  42c033:	and    eax,0x1
  42c036:	je     0x42c049
  42c03c:	and    DWORD PTR [ebp-0x28],0xfffffffe
  42c040:	mov    ecx,DWORD PTR [ebp-0x20]
  42c043:	jmp    DWORD PTR ds:0x43025c
  42c049:	ret    
  42c04a:	mov    edx,DWORD PTR [esp+0x8]
  42c04e:	lea    eax,[edx-0x2c]
  42c051:	mov    ecx,DWORD PTR [edx-0x30]
  42c054:	xor    ecx,eax
  42c056:	call   0x42503a
  42c05b:	mov    eax,0x43739c
  42c060:	jmp    0x429e70
  42c065:	int3   
  42c066:	int3   
  42c067:	int3   
  42c068:	int3   
  42c069:	int3   
  42c06a:	int3   
  42c06b:	int3   
  42c06c:	int3   
  42c06d:	int3   
  42c06e:	int3   
  42c06f:	int3   
  42c070:	lea    ecx,[ebp-0x28]
  42c073:	jmp    DWORD PTR ds:0x43025c
  42c079:	mov    edx,DWORD PTR [esp+0x8]
  42c07d:	lea    eax,[edx-0x20]
  42c080:	mov    ecx,DWORD PTR [edx-0x24]
  42c083:	xor    ecx,eax
  42c085:	call   0x42503a
  42c08a:	mov    eax,0x4373c8
  42c08f:	jmp    0x429e70
  42c094:	int3   
  42c095:	int3   
  42c096:	int3   
  42c097:	int3   
  42c098:	int3   
  42c099:	int3   
  42c09a:	int3   
  42c09b:	int3   
  42c09c:	int3   
  42c09d:	int3   
  42c09e:	int3   
  42c09f:	int3   
  42c0a0:	lea    ecx,[ebp-0x28]
  42c0a3:	jmp    DWORD PTR ds:0x43025c
  42c0a9:	mov    edx,DWORD PTR [esp+0x8]
  42c0ad:	lea    eax,[edx-0x28]
  42c0b0:	mov    ecx,DWORD PTR [edx-0x2c]
  42c0b3:	xor    ecx,eax
  42c0b5:	call   0x42503a
  42c0ba:	mov    eax,0x4373f4
  42c0bf:	jmp    0x429e70
  42c0c4:	int3   
  42c0c5:	int3   
  42c0c6:	int3   
  42c0c7:	int3   
  42c0c8:	int3   
  42c0c9:	int3   
  42c0ca:	int3   
  42c0cb:	int3   
  42c0cc:	int3   
  42c0cd:	int3   
  42c0ce:	int3   
  42c0cf:	int3   
  42c0d0:	lea    ecx,[ebp-0x98]
  42c0d6:	jmp    DWORD PTR ds:0x43025c
  42c0dc:	lea    ecx,[ebp-0x44]
  42c0df:	jmp    DWORD PTR ds:0x43025c
  42c0e5:	lea    ecx,[ebp-0x28]
  42c0e8:	jmp    DWORD PTR ds:0x430264
  42c0ee:	lea    ecx,[ebp-0x60]
  42c0f1:	jmp    DWORD PTR ds:0x430264
  42c0f7:	lea    ecx,[ebp-0x7c]
  42c0fa:	jmp    DWORD PTR ds:0x43025c
  42c100:	mov    edx,DWORD PTR [esp+0x8]
  42c104:	lea    eax,[edx-0x9c]
  42c10a:	mov    ecx,DWORD PTR [edx-0xa0]
  42c110:	xor    ecx,eax
  42c112:	call   0x42503a
  42c117:	mov    eax,0x437440
  42c11c:	jmp    0x429e70
  42c121:	int3   
  42c122:	int3   
  42c123:	int3   
  42c124:	int3   
  42c125:	int3   
  42c126:	int3   
  42c127:	int3   
  42c128:	int3   
  42c129:	int3   
  42c12a:	int3   
  42c12b:	int3   
  42c12c:	int3   
  42c12d:	int3   
  42c12e:	int3   
  42c12f:	int3   
  42c130:	lea    ecx,[ebp-0x64]
  42c133:	jmp    DWORD PTR ds:0x43025c
  42c139:	lea    ecx,[ebp-0x2c]
  42c13c:	jmp    DWORD PTR ds:0x430264
  42c142:	lea    ecx,[ebp-0x80]
  42c145:	jmp    DWORD PTR ds:0x430264
  42c14b:	lea    ecx,[ebp-0x9c]
  42c151:	jmp    DWORD PTR ds:0x43025c
  42c157:	lea    ecx,[ebp-0x9c]
  42c15d:	jmp    DWORD PTR ds:0x43025c
  42c163:	lea    ecx,[ebp-0x80]
  42c166:	jmp    DWORD PTR ds:0x43025c
  42c16c:	lea    ecx,[ebp-0x48]
  42c16f:	jmp    DWORD PTR ds:0x430264
  42c175:	lea    ecx,[ebp-0x9c]
  42c17b:	jmp    DWORD PTR ds:0x43025c
  42c181:	mov    edx,DWORD PTR [esp+0x8]
  42c185:	lea    eax,[edx-0x9c]
  42c18b:	mov    ecx,DWORD PTR [edx-0xa0]
  42c191:	xor    ecx,eax
  42c193:	call   0x42503a
  42c198:	add    eax,0xc
  42c19b:	mov    ecx,DWORD PTR [edx-0x4]
  42c19e:	xor    ecx,eax
  42c1a0:	call   0x42503a
  42c1a5:	mov    eax,0x4374b0
  42c1aa:	jmp    0x429e70
  42c1af:	int3   
  42c1b0:	lea    esi,[ebp-0x4c]
  42c1b3:	jmp    0x4048a0
  42c1b8:	lea    ecx,[ebp-0x2c]
  42c1bb:	jmp    DWORD PTR ds:0x430264
  42c1c1:	lea    esi,[ebp-0x30]
  42c1c4:	jmp    0x404a80
  42c1c9:	mov    edx,DWORD PTR [esp+0x8]
  42c1cd:	lea    eax,[edx-0x50]
  42c1d0:	mov    ecx,DWORD PTR [edx-0x54]
  42c1d3:	xor    ecx,eax
  42c1d5:	call   0x42503a
  42c1da:	add    eax,0x10
  42c1dd:	mov    ecx,DWORD PTR [edx-0x4]
  42c1e0:	xor    ecx,eax
  42c1e2:	call   0x42503a
  42c1e7:	mov    eax,0x4374ec
  42c1ec:	jmp    0x429e70
  42c1f1:	int3   
  42c1f2:	int3   
  42c1f3:	int3   
  42c1f4:	int3   
  42c1f5:	int3   
  42c1f6:	int3   
  42c1f7:	int3   
  42c1f8:	int3   
  42c1f9:	int3   
  42c1fa:	int3   
  42c1fb:	int3   
  42c1fc:	int3   
  42c1fd:	int3   
  42c1fe:	int3   
  42c1ff:	int3   
  42c200:	mov    eax,ds:0x4400d8
  42c205:	and    eax,0xfffffffe
  42c208:	mov    ds:0x4400d8,eax
  42c20d:	ret    
  42c20e:	mov    edx,DWORD PTR [esp+0x8]
  42c212:	lea    eax,[edx]
  42c214:	mov    ecx,DWORD PTR [edx-0x4]
  42c217:	xor    ecx,eax
  42c219:	call   0x42503a
  42c21e:	mov    eax,0x437518
  42c223:	jmp    0x429e70
  42c228:	int3   
  42c229:	int3   
  42c22a:	int3   
  42c22b:	int3   
  42c22c:	int3   
  42c22d:	int3   
  42c22e:	int3   
  42c22f:	int3   
  42c230:	lea    eax,[ebp-0x20]
  42c233:	push   eax
  42c234:	call   0x4042d0
  42c239:	ret    
  42c23a:	lea    eax,[ebp-0x20]
  42c23d:	jmp    0x4042b0
  42c242:	mov    edx,DWORD PTR [esp+0x8]
  42c246:	lea    eax,[edx+0xc]
  42c249:	mov    ecx,DWORD PTR [edx-0x24]
  42c24c:	xor    ecx,eax
  42c24e:	call   0x42503a
  42c253:	mov    eax,0x437580
  42c258:	jmp    0x429e70
  42c25d:	int3   
  42c25e:	int3   
  42c25f:	int3   
  42c260:	mov    edx,DWORD PTR [esp+0x8]
  42c264:	lea    eax,[edx+0xc]
  42c267:	mov    ecx,DWORD PTR [edx-0x14]
  42c26a:	xor    ecx,eax
  42c26c:	call   0x42503a
  42c271:	mov    eax,0x4375d8
  42c276:	jmp    0x429e70
  42c27b:	int3   
  42c27c:	int3   
  42c27d:	int3   
  42c27e:	int3   
  42c27f:	int3   
  42c280:	lea    esi,[ebp-0x30]
  42c283:	jmp    0x421a20
  42c288:	mov    edx,DWORD PTR [esp+0x8]
  42c28c:	lea    eax,[edx-0x24]
  42c28f:	mov    ecx,DWORD PTR [edx-0x28]
  42c292:	xor    ecx,eax
  42c294:	call   0x42503a
  42c299:	mov    eax,0x437604
  42c29e:	jmp    0x429e70
  42c2a3:	int3   
  42c2a4:	int3   
  42c2a5:	int3   
  42c2a6:	int3   
  42c2a7:	int3   
  42c2a8:	int3   
  42c2a9:	int3   
  42c2aa:	int3   
  42c2ab:	int3   
  42c2ac:	int3   
  42c2ad:	int3   
  42c2ae:	int3   
  42c2af:	int3   
  42c2b0:	lea    esi,[ebp-0x30]
  42c2b3:	jmp    0x421a20
  42c2b8:	mov    edx,DWORD PTR [esp+0x8]
  42c2bc:	lea    eax,[edx-0x2c]
  42c2bf:	mov    ecx,DWORD PTR [edx-0x30]
  42c2c2:	xor    ecx,eax
  42c2c4:	call   0x42503a
  42c2c9:	mov    eax,0x437630
  42c2ce:	jmp    0x429e70
  42c2d3:	int3   
  42c2d4:	int3   
  42c2d5:	int3   
  42c2d6:	int3   
  42c2d7:	int3   
  42c2d8:	int3   
  42c2d9:	int3   
  42c2da:	int3   
  42c2db:	int3   
  42c2dc:	int3   
  42c2dd:	int3   
  42c2de:	int3   
  42c2df:	int3   
  42c2e0:	lea    esi,[ebp-0x10]
  42c2e3:	jmp    0x4030a0
  42c2e8:	lea    esi,[ebp+0x4]
  42c2eb:	jmp    0x4030a0
  42c2f0:	mov    edx,DWORD PTR [esp+0x8]
  42c2f4:	lea    eax,[edx-0x10]
  42c2f7:	mov    ecx,DWORD PTR [edx-0x14]
  42c2fa:	xor    ecx,eax
  42c2fc:	call   0x42503a
  42c301:	mov    eax,0x437664
  42c306:	jmp    0x429e70
  42c30b:	int3   
  42c30c:	int3   
  42c30d:	int3   
  42c30e:	int3   
  42c30f:	int3   
  42c310:	mov    eax,DWORD PTR [ebp+0x4]
  42c313:	add    eax,0x4
  42c316:	push   eax
  42c317:	call   0x40b540
  42c31c:	ret    
  42c31d:	mov    edx,DWORD PTR [esp+0x8]
  42c321:	lea    eax,[edx-0x4]
  42c324:	mov    ecx,DWORD PTR [edx-0x8]
  42c327:	xor    ecx,eax
  42c329:	call   0x42503a
  42c32e:	mov    eax,0x437690
  42c333:	jmp    0x429e70
  42c338:	int3   
  42c339:	int3   
  42c33a:	int3   
  42c33b:	int3   
  42c33c:	int3   
  42c33d:	int3   
  42c33e:	int3   
  42c33f:	int3   
  42c340:	mov    edx,DWORD PTR [esp+0x8]
  42c344:	lea    eax,[edx+0xc]
  42c347:	mov    ecx,DWORD PTR [edx-0x1c]
  42c34a:	xor    ecx,eax
  42c34c:	call   0x42503a
  42c351:	mov    eax,0x4376e8
  42c356:	jmp    0x429e70
  42c35b:	int3   
  42c35c:	int3   
  42c35d:	int3   
  42c35e:	int3   
  42c35f:	int3   
  42c360:	lea    ecx,[ebp-0x2c]
  42c363:	jmp    DWORD PTR ds:0x430264
  42c369:	mov    edx,DWORD PTR [esp+0x8]
  42c36d:	lea    eax,[edx-0x30]
  42c370:	mov    ecx,DWORD PTR [edx-0x34]
  42c373:	xor    ecx,eax
  42c375:	call   0x42503a
  42c37a:	add    eax,0x8
  42c37d:	mov    ecx,DWORD PTR [edx-0x4]
  42c380:	xor    ecx,eax
  42c382:	call   0x42503a
  42c387:	mov    eax,0x437714
  42c38c:	jmp    0x429e70
  42c391:	int3   
  42c392:	int3   
  42c393:	int3   
  42c394:	int3   
  42c395:	int3   
  42c396:	int3   
  42c397:	int3   
  42c398:	int3   
  42c399:	int3   
  42c39a:	int3   
  42c39b:	int3   
  42c39c:	int3   
  42c39d:	int3   
  42c39e:	int3   
  42c39f:	int3   
  42c3a0:	mov    edx,DWORD PTR [esp+0x8]
  42c3a4:	lea    eax,[edx+0xc]
  42c3a7:	mov    ecx,DWORD PTR [edx-0x18]
  42c3aa:	xor    ecx,eax
  42c3ac:	call   0x42503a
  42c3b1:	mov    eax,0x4377a0
  42c3b6:	jmp    0x429e70
  42c3bb:	int3   
  42c3bc:	int3   
  42c3bd:	int3   
  42c3be:	int3   
  42c3bf:	int3   
  42c3c0:	lea    ecx,[ebp-0x28]
  42c3c3:	jmp    DWORD PTR ds:0x43025c
  42c3c9:	lea    ecx,[ebp-0x44]
  42c3cc:	jmp    DWORD PTR ds:0x43025c
  42c3d2:	mov    edx,DWORD PTR [esp+0x8]
  42c3d6:	lea    eax,[edx-0x94]
  42c3dc:	mov    ecx,DWORD PTR [edx-0x98]
  42c3e2:	xor    ecx,eax
  42c3e4:	call   0x42503a
  42c3e9:	mov    eax,0x4377d4
  42c3ee:	jmp    0x429e70
  42c3f3:	int3   
  42c3f4:	int3   
  42c3f5:	int3   
  42c3f6:	int3   
  42c3f7:	int3   
  42c3f8:	int3   
  42c3f9:	int3   
  42c3fa:	int3   
  42c3fb:	int3   
  42c3fc:	int3   
  42c3fd:	int3   
  42c3fe:	int3   
  42c3ff:	int3   
  42c400:	lea    ecx,[ebp-0x28]
  42c403:	jmp    DWORD PTR ds:0x430264
  42c409:	mov    edx,DWORD PTR [esp+0x8]
  42c40d:	lea    eax,[edx-0x30]
  42c410:	mov    ecx,DWORD PTR [edx-0x34]
  42c413:	xor    ecx,eax
  42c415:	call   0x42503a
  42c41a:	mov    eax,0x437800
  42c41f:	jmp    0x429e70
  42c424:	int3   
  42c425:	int3   
  42c426:	int3   
  42c427:	int3   
  42c428:	int3   
  42c429:	int3   
  42c42a:	int3   
  42c42b:	int3   
  42c42c:	int3   
  42c42d:	int3   
  42c42e:	int3   
  42c42f:	int3   
  42c430:	mov    eax,DWORD PTR [ebp+0x8]
  42c433:	jmp    0x413580
  42c438:	mov    edx,DWORD PTR [esp+0x8]
  42c43c:	lea    eax,[edx+0xc]
  42c43f:	mov    ecx,DWORD PTR [edx-0x20]
  42c442:	xor    ecx,eax
  42c444:	call   0x42503a
  42c449:	mov    eax,0x437860
  42c44e:	jmp    0x429e70
  42c453:	int3   
  42c454:	int3   
  42c455:	int3   
  42c456:	int3   
  42c457:	int3   
  42c458:	int3   
  42c459:	int3   
  42c45a:	int3   
  42c45b:	int3   
  42c45c:	int3   
  42c45d:	int3   
  42c45e:	int3   
  42c45f:	int3   
  42c460:	lea    eax,[ebp+0x4]
  42c463:	push   eax
  42c464:	call   0x420e10
  42c469:	ret    
  42c46a:	mov    eax,DWORD PTR [ebp-0x10]
  42c46d:	push   eax
  42c46e:	call   0x420e10
  42c473:	ret    
  42c474:	mov    ecx,DWORD PTR [ebp-0x10]
  42c477:	add    ecx,0x6c
  42c47a:	jmp    DWORD PTR ds:0x430264
  42c480:	mov    edx,DWORD PTR [esp+0x8]
  42c484:	lea    eax,[edx-0xc]
  42c487:	mov    ecx,DWORD PTR [edx-0x10]
  42c48a:	xor    ecx,eax
  42c48c:	call   0x42503a
  42c491:	mov    eax,0x43789c
  42c496:	jmp    0x429e70
  42c49b:	int3   
  42c49c:	int3   
  42c49d:	int3   
  42c49e:	int3   
  42c49f:	int3   
  42c4a0:	lea    eax,[ebp-0x94]
  42c4a6:	push   eax
  42c4a7:	call   0x420f70
  42c4ac:	ret    
  42c4ad:	mov    eax,DWORD PTR [ebp-0x9c]
  42c4b3:	and    eax,0x1
  42c4b6:	je     0x42c4cc
  42c4bc:	and    DWORD PTR [ebp-0x9c],0xfffffffe
  42c4c3:	mov    ecx,DWORD PTR [ebp+0x8]
  42c4c6:	push   ecx
  42c4c7:	call   0x420f70
  42c4cc:	ret    
  42c4cd:	mov    edx,DWORD PTR [esp+0x8]
  42c4d1:	lea    eax,[edx-0x9c]
  42c4d7:	mov    ecx,DWORD PTR [edx-0xa0]
  42c4dd:	xor    ecx,eax
  42c4df:	call   0x42503a
  42c4e4:	mov    eax,0x4378d0
  42c4e9:	jmp    0x429e70
  42c4ee:	int3   
  42c4ef:	int3   
  42c4f0:	lea    eax,[ebp+0x4]
  42c4f3:	jmp    0x4127b0
  42c4f8:	mov    eax,DWORD PTR [ebp-0x14]
  42c4fb:	push   eax
  42c4fc:	mov    ecx,DWORD PTR [ebp-0x10]
  42c4ff:	push   ecx
  42c500:	call   0x4029a0
  42c505:	add    esp,0x8
  42c508:	ret    
  42c509:	mov    edx,DWORD PTR [esp+0x8]
  42c50d:	lea    eax,[edx-0x8]
  42c510:	mov    ecx,DWORD PTR [edx-0xc]
  42c513:	xor    ecx,eax
  42c515:	call   0x42503a
  42c51a:	mov    eax,0x437904
  42c51f:	jmp    0x429e70
  42c524:	int3   
  42c525:	int3   
  42c526:	int3   
  42c527:	int3   
  42c528:	int3   
  42c529:	int3   
  42c52a:	int3   
  42c52b:	int3   
  42c52c:	int3   
  42c52d:	int3   
  42c52e:	int3   
  42c52f:	int3   
  42c530:	mov    edx,DWORD PTR [esp+0x8]
  42c534:	lea    eax,[edx+0xc]
  42c537:	mov    ecx,DWORD PTR [edx-0x20]
  42c53a:	xor    ecx,eax
  42c53c:	call   0x42503a
  42c541:	mov    eax,0x437990
  42c546:	jmp    0x429e70
  42c54b:	int3   
  42c54c:	int3   
  42c54d:	int3   
  42c54e:	int3   
  42c54f:	int3   
  42c550:	mov    eax,DWORD PTR [ebp+0x4]
  42c553:	push   eax
  42c554:	mov    ecx,DWORD PTR [ebp+0x8]
  42c557:	push   ecx
  42c558:	call   0x4029a0
  42c55d:	add    esp,0x8
  42c560:	ret    
  42c561:	mov    edx,DWORD PTR [esp+0x8]
  42c565:	lea    eax,[edx-0xc]
  42c568:	mov    ecx,DWORD PTR [edx-0x10]
  42c56b:	xor    ecx,eax
  42c56d:	call   0x42503a
  42c572:	mov    eax,0x4379bc
  42c577:	jmp    0x429e70
  42c57c:	int3   
  42c57d:	int3   
  42c57e:	int3   
  42c57f:	int3   
  42c580:	lea    ecx,[ebp+0x4]
  42c583:	jmp    0x411980
  42c588:	mov    eax,DWORD PTR [ebp-0x10]
  42c58b:	push   eax
  42c58c:	call   0x42504a
  42c591:	pop    ecx
  42c592:	ret    
  42c593:	mov    edx,DWORD PTR [esp+0x8]
  42c597:	lea    eax,[edx-0x8]
  42c59a:	mov    ecx,DWORD PTR [edx-0xc]
  42c59d:	xor    ecx,eax
  42c59f:	call   0x42503a
  42c5a4:	mov    eax,0x4379f0
  42c5a9:	jmp    0x429e70
  42c5ae:	int3   
  42c5af:	int3   
  42c5b0:	lea    eax,[ebp+0x4]
  42c5b3:	jmp    0x40dfe0
  42c5b8:	mov    eax,DWORD PTR [ebp-0x10]
  42c5bb:	push   eax
  42c5bc:	call   0x42504a
  42c5c1:	pop    ecx
  42c5c2:	ret    
  42c5c3:	mov    edx,DWORD PTR [esp+0x8]
  42c5c7:	lea    eax,[edx-0xc]
  42c5ca:	mov    ecx,DWORD PTR [edx-0x10]
  42c5cd:	xor    ecx,eax
  42c5cf:	call   0x42503a
  42c5d4:	mov    eax,0x437a24
  42c5d9:	jmp    0x429e70
  42c5de:	int3   
  42c5df:	int3   
  42c5e0:	lea    eax,[ebp+0x4]
  42c5e3:	jmp    0x4127b0
  42c5e8:	mov    edx,DWORD PTR [esp+0x8]
  42c5ec:	lea    eax,[edx-0xc]
  42c5ef:	mov    ecx,DWORD PTR [edx-0x10]
  42c5f2:	xor    ecx,eax
  42c5f4:	call   0x42503a
  42c5f9:	mov    eax,0x437a50
  42c5fe:	jmp    0x429e70
  42c603:	int3   
  42c604:	int3   
  42c605:	int3   
  42c606:	int3   
  42c607:	int3   
  42c608:	int3   
  42c609:	int3   
  42c60a:	int3   
  42c60b:	int3   
  42c60c:	int3   
  42c60d:	int3   
  42c60e:	int3   
  42c60f:	int3   
  42c610:	lea    eax,[ebp+0x4]
  42c613:	jmp    0x40dfe0
  42c618:	mov    edx,DWORD PTR [esp+0x8]
  42c61c:	lea    eax,[edx-0x10]
  42c61f:	mov    ecx,DWORD PTR [edx-0x14]
  42c622:	xor    ecx,eax
  42c624:	call   0x42503a
  42c629:	mov    eax,0x437a7c
  42c62e:	jmp    0x429e70
  42c633:	int3   
  42c634:	int3   
  42c635:	int3   
  42c636:	int3   
  42c637:	int3   
  42c638:	int3   
  42c639:	int3   
  42c63a:	int3   
  42c63b:	int3   
  42c63c:	int3   
  42c63d:	int3   
  42c63e:	int3   
  42c63f:	int3   
  42c640:	lea    eax,[ebp+0x4]
  42c643:	jmp    0x4127b0
  42c648:	mov    edx,DWORD PTR [esp+0x8]
  42c64c:	lea    eax,[edx-0x8]
  42c64f:	mov    ecx,DWORD PTR [edx-0xc]
  42c652:	xor    ecx,eax
  42c654:	call   0x42503a
  42c659:	mov    eax,0x437aa8
  42c65e:	jmp    0x429e70
  42c663:	int3   
  42c664:	int3   
  42c665:	int3   
  42c666:	int3   
  42c667:	int3   
  42c668:	int3   
  42c669:	int3   
  42c66a:	int3   
  42c66b:	int3   
  42c66c:	int3   
  42c66d:	int3   
  42c66e:	int3   
  42c66f:	int3   
  42c670:	mov    eax,DWORD PTR [ebp+0x8]
  42c673:	push   eax
  42c674:	call   0x42504a
  42c679:	pop    ecx
  42c67a:	ret    
  42c67b:	mov    edx,DWORD PTR [esp+0x8]
  42c67f:	lea    eax,[edx-0xc]
  42c682:	mov    ecx,DWORD PTR [edx-0x10]
  42c685:	xor    ecx,eax
  42c687:	call   0x42503a
  42c68c:	mov    eax,0x437ad4
  42c691:	jmp    0x429e70
  42c696:	int3   
  42c697:	int3   
  42c698:	int3   
  42c699:	int3   
  42c69a:	int3   
  42c69b:	int3   
  42c69c:	int3   
  42c69d:	int3   
  42c69e:	int3   
  42c69f:	int3   
  42c6a0:	mov    eax,DWORD PTR [ebp+0x8]
  42c6a3:	push   eax
  42c6a4:	call   0x42504a
  42c6a9:	pop    ecx
  42c6aa:	ret    
  42c6ab:	mov    edx,DWORD PTR [esp+0x8]
  42c6af:	lea    eax,[edx-0x10]
  42c6b2:	mov    ecx,DWORD PTR [edx-0x14]
  42c6b5:	xor    ecx,eax
  42c6b7:	call   0x42503a
  42c6bc:	mov    eax,0x437b00
  42c6c1:	jmp    0x429e70
  42c6c6:	int3   
  42c6c7:	int3   
  42c6c8:	int3   
  42c6c9:	int3   
  42c6ca:	int3   
  42c6cb:	int3   
  42c6cc:	int3   
  42c6cd:	int3   
  42c6ce:	int3   
  42c6cf:	int3   
  42c6d0:	lea    ecx,[ebp+0x4]
  42c6d3:	jmp    0x411980
  42c6d8:	mov    edx,DWORD PTR [esp+0x8]
  42c6dc:	lea    eax,[edx-0x8]
  42c6df:	mov    ecx,DWORD PTR [edx-0xc]
  42c6e2:	xor    ecx,eax
  42c6e4:	call   0x42503a
  42c6e9:	mov    eax,0x437b2c
  42c6ee:	jmp    0x429e70
  42c6f3:	int3   
  42c6f4:	int3   
  42c6f5:	int3   
  42c6f6:	int3   
  42c6f7:	int3   
  42c6f8:	int3   
  42c6f9:	int3   
  42c6fa:	int3   
  42c6fb:	int3   
  42c6fc:	int3   
  42c6fd:	int3   
  42c6fe:	int3   
  42c6ff:	int3   
  42c700:	lea    esi,[ebp+0x8]
  42c703:	jmp    0x421a20
  42c708:	mov    eax,DWORD PTR [ebp-0x10]
  42c70b:	and    eax,0x1
  42c70e:	je     0x42c720
  42c714:	and    DWORD PTR [ebp-0x10],0xfffffffe
  42c718:	mov    esi,DWORD PTR [ebp+0x4]
  42c71b:	jmp    0x421a20
  42c720:	ret    
  42c721:	mov    edx,DWORD PTR [esp+0x8]
  42c725:	lea    eax,[edx-0xc]
  42c728:	mov    ecx,DWORD PTR [edx-0x10]
  42c72b:	xor    ecx,eax
  42c72d:	call   0x42503a
  42c732:	mov    eax,0x437b60
  42c737:	jmp    0x429e70
  42c73c:	int3   
  42c73d:	int3   
  42c73e:	int3   
  42c73f:	int3   
  42c740:	lea    eax,[ebp+0x4]
  42c743:	jmp    0x40dfe0
  42c748:	mov    edx,DWORD PTR [esp+0x8]
  42c74c:	lea    eax,[edx-0xc]
  42c74f:	mov    ecx,DWORD PTR [edx-0x10]
  42c752:	xor    ecx,eax
  42c754:	call   0x42503a
  42c759:	mov    eax,0x437b8c
  42c75e:	jmp    0x429e70
  42c763:	int3   
  42c764:	int3   
  42c765:	int3   
  42c766:	int3   
  42c767:	int3   
  42c768:	int3   
  42c769:	int3   
  42c76a:	int3   
  42c76b:	int3   
  42c76c:	int3   
  42c76d:	int3   
  42c76e:	int3   
  42c76f:	int3   
  42c770:	lea    ecx,[ebp+0x8]
  42c773:	jmp    DWORD PTR ds:0x430264
  42c779:	lea    ecx,[ebp-0x30]
  42c77c:	jmp    0x411990
  42c781:	mov    eax,DWORD PTR [ebp-0x3c]
  42c784:	and    eax,0x1
  42c787:	je     0x42c799
  42c78d:	and    DWORD PTR [ebp-0x3c],0xfffffffe
  42c791:	mov    ecx,DWORD PTR [ebp-0x38]
  42c794:	jmp    0x411980
  42c799:	ret    
  42c79a:	mov    edx,DWORD PTR [esp+0x8]
  42c79e:	lea    eax,[edx-0x34]
  42c7a1:	mov    ecx,DWORD PTR [edx-0x38]
  42c7a4:	xor    ecx,eax
  42c7a6:	call   0x42503a
  42c7ab:	mov    eax,0x437bc8
  42c7b0:	jmp    0x429e70
  42c7b5:	int3   
  42c7b6:	int3   
  42c7b7:	int3   
  42c7b8:	int3   
  42c7b9:	int3   
  42c7ba:	int3   
  42c7bb:	int3   
  42c7bc:	int3   
  42c7bd:	int3   
  42c7be:	int3   
  42c7bf:	int3   
  42c7c0:	lea    ecx,[ebp+0x4]
  42c7c3:	jmp    0x411980
  42c7c8:	mov    edx,DWORD PTR [esp+0x8]
  42c7cc:	lea    eax,[edx-0x4]
  42c7cf:	mov    ecx,DWORD PTR [edx-0x8]
  42c7d2:	xor    ecx,eax
  42c7d4:	call   0x42503a
  42c7d9:	mov    eax,0x437bf4
  42c7de:	jmp    0x429e70
  42c7e3:	int3   
  42c7e4:	int3   
  42c7e5:	int3   
  42c7e6:	int3   
  42c7e7:	int3   
  42c7e8:	int3   
  42c7e9:	int3   
  42c7ea:	int3   
  42c7eb:	int3   
  42c7ec:	int3   
  42c7ed:	int3   
  42c7ee:	int3   
  42c7ef:	int3   
  42c7f0:	lea    ecx,[ebp+0xc]
  42c7f3:	jmp    DWORD PTR ds:0x430264
  42c7f9:	lea    ecx,[ebp-0x30]
  42c7fc:	jmp    0x411990
  42c801:	mov    eax,DWORD PTR [ebp-0x38]
  42c804:	and    eax,0x1
  42c807:	je     0x42c819
  42c80d:	and    DWORD PTR [ebp-0x38],0xfffffffe
  42c811:	mov    ecx,DWORD PTR [ebp-0x34]
  42c814:	jmp    0x411980
  42c819:	ret    
  42c81a:	mov    edx,DWORD PTR [esp+0x8]
  42c81e:	lea    eax,[edx-0x30]
  42c821:	mov    ecx,DWORD PTR [edx-0x34]
  42c824:	xor    ecx,eax
  42c826:	call   0x42503a
  42c82b:	mov    eax,0x437c30
  42c830:	jmp    0x429e70
  42c835:	int3   
  42c836:	int3   
  42c837:	int3   
  42c838:	int3   
  42c839:	int3   
  42c83a:	int3   
  42c83b:	int3   
  42c83c:	int3   
  42c83d:	int3   
  42c83e:	int3   
  42c83f:	int3   
  42c840:	lea    eax,[ebp+0x4]
  42c843:	jmp    0x40dfe0
  42c848:	mov    edx,DWORD PTR [esp+0x8]
  42c84c:	lea    eax,[edx-0x8]
  42c84f:	mov    ecx,DWORD PTR [edx-0xc]
  42c852:	xor    ecx,eax
  42c854:	call   0x42503a
  42c859:	mov    eax,0x437c5c
  42c85e:	jmp    0x429e70
  42c863:	int3   
  42c864:	int3   
  42c865:	int3   
  42c866:	int3   
  42c867:	int3   
  42c868:	int3   
  42c869:	int3   
  42c86a:	int3   
  42c86b:	int3   
  42c86c:	int3   
  42c86d:	int3   
  42c86e:	int3   
  42c86f:	int3   
  42c870:	lea    ecx,[ebp+0x24]
  42c873:	jmp    DWORD PTR ds:0x430264
  42c879:	lea    ecx,[ebp+0x8]
  42c87c:	jmp    DWORD PTR ds:0x430264
  42c882:	mov    ecx,DWORD PTR [ebp-0x60]
  42c885:	jmp    0x40cd30
  42c88a:	lea    eax,[ebp-0x50]
  42c88d:	jmp    0x40dff0
  42c892:	mov    eax,DWORD PTR [ebp-0x5c]
  42c895:	and    eax,0x1
  42c898:	je     0x42c8aa
  42c89e:	and    DWORD PTR [ebp-0x5c],0xfffffffe
  42c8a2:	mov    eax,DWORD PTR [ebp-0x54]
  42c8a5:	jmp    0x40dfe0
  42c8aa:	ret    
  42c8ab:	mov    edx,DWORD PTR [esp+0x8]
  42c8af:	lea    eax,[edx-0x60]
  42c8b2:	mov    ecx,DWORD PTR [edx-0x64]
  42c8b5:	xor    ecx,eax
  42c8b7:	call   0x42503a
  42c8bc:	mov    eax,0x437ca8
  42c8c1:	jmp    0x429e70
  42c8c6:	int3   
  42c8c7:	int3   
  42c8c8:	int3   
  42c8c9:	int3   
  42c8ca:	int3   
  42c8cb:	int3   
  42c8cc:	int3   
  42c8cd:	int3   
  42c8ce:	int3   
  42c8cf:	int3   
  42c8d0:	lea    eax,[ebp-0x7c]
  42c8d3:	push   eax
  42c8d4:	call   0x415b30
  42c8d9:	ret    
  42c8da:	lea    eax,[ebp-0xdc]
  42c8e0:	push   eax
  42c8e1:	call   0x415b30
  42c8e6:	ret    
  42c8e7:	mov    edx,DWORD PTR [esp+0x8]
  42c8eb:	lea    eax,[edx+0xc]
  42c8ee:	mov    ecx,DWORD PTR [edx-0xf8]
  42c8f4:	xor    ecx,eax
  42c8f6:	call   0x42503a
  42c8fb:	mov    ecx,DWORD PTR [edx-0xc]
  42c8fe:	xor    ecx,eax
  42c900:	call   0x42503a
  42c905:	mov    eax,0x437d44
  42c90a:	jmp    0x429e70
  42c90f:	int3   
  42c910:	lea    ecx,[ebp-0x30]
  42c913:	jmp    0x40cd30
  42c918:	mov    edx,DWORD PTR [esp+0x8]
  42c91c:	lea    eax,[edx-0x38]
  42c91f:	mov    ecx,DWORD PTR [edx-0x3c]
  42c922:	xor    ecx,eax
  42c924:	call   0x42503a
  42c929:	mov    eax,0x437d70
  42c92e:	jmp    0x429e70
  42c933:	int3   
  42c934:	int3   
  42c935:	int3   
  42c936:	int3   
  42c937:	int3   
  42c938:	int3   
  42c939:	int3   
  42c93a:	int3   
  42c93b:	int3   
  42c93c:	int3   
  42c93d:	int3   
  42c93e:	int3   
  42c93f:	int3   
  42c940:	mov    eax,DWORD PTR [ebp-0x10]
  42c943:	push   eax
  42c944:	call   0x42504a
  42c949:	pop    ecx
  42c94a:	ret    
  42c94b:	mov    ecx,DWORD PTR [ebp-0x14]
  42c94e:	jmp    0x40cef0
  42c953:	mov    edx,DWORD PTR [esp+0x8]
  42c957:	lea    eax,[edx-0x14]
  42c95a:	mov    ecx,DWORD PTR [edx-0x18]
  42c95d:	xor    ecx,eax
  42c95f:	call   0x42503a
  42c964:	mov    eax,0x437da4
  42c969:	jmp    0x429e70
  42c96e:	int3   
  42c96f:	int3   
  42c970:	mov    ecx,DWORD PTR [ebp-0x10]
  42c973:	jmp    0x40a4d0
  42c978:	mov    edx,DWORD PTR [esp+0x8]
  42c97c:	lea    eax,[edx-0xc]
  42c97f:	mov    ecx,DWORD PTR [edx-0x10]
  42c982:	xor    ecx,eax
  42c984:	call   0x42503a
  42c989:	mov    eax,0x437dd0
  42c98e:	jmp    0x429e70
  42c993:	int3   
  42c994:	int3   
  42c995:	int3   
  42c996:	int3   
  42c997:	int3   
  42c998:	int3   
  42c999:	int3   
  42c99a:	int3   
  42c99b:	int3   
  42c99c:	int3   
  42c99d:	int3   
  42c99e:	int3   
  42c99f:	int3   
  42c9a0:	mov    esi,DWORD PTR [ebp+0x4]
  42c9a3:	jmp    0x40a320
  42c9a8:	mov    ecx,DWORD PTR [ebp+0x4]
  42c9ab:	add    ecx,0x24
  42c9ae:	jmp    0x402db0
  42c9b3:	mov    edx,DWORD PTR [esp+0x8]
  42c9b7:	lea    eax,[edx-0x8]
  42c9ba:	mov    ecx,DWORD PTR [edx-0xc]
  42c9bd:	xor    ecx,eax
  42c9bf:	call   0x42503a
  42c9c4:	mov    eax,0x437e04
  42c9c9:	jmp    0x429e70
  42c9ce:	int3   
  42c9cf:	int3   
  42c9d0:	mov    esi,DWORD PTR [ebp+0x4]
  42c9d3:	jmp    0x409d70
  42c9d8:	mov    ecx,DWORD PTR [ebp+0x4]
  42c9db:	add    ecx,0x3c
  42c9de:	jmp    0x402db0
  42c9e3:	mov    edx,DWORD PTR [esp+0x8]
  42c9e7:	lea    eax,[edx-0x8]
  42c9ea:	mov    ecx,DWORD PTR [edx-0xc]
  42c9ed:	xor    ecx,eax
  42c9ef:	call   0x42503a
  42c9f4:	mov    eax,0x437e38
  42c9f9:	jmp    0x429e70
  42c9fe:	int3   
  42c9ff:	int3   
  42ca00:	mov    esi,DWORD PTR [ebp-0x10]
  42ca03:	jmp    0x40a180
  42ca08:	mov    edx,DWORD PTR [esp+0x8]
  42ca0c:	lea    eax,[edx-0xc]
  42ca0f:	mov    ecx,DWORD PTR [edx-0x10]
  42ca12:	xor    ecx,eax
  42ca14:	call   0x42503a
  42ca19:	mov    eax,0x437e64
  42ca1e:	jmp    0x429e70
  42ca23:	int3   
  42ca24:	int3   
  42ca25:	int3   
  42ca26:	int3   
  42ca27:	int3   
  42ca28:	int3   
  42ca29:	int3   
  42ca2a:	int3   
  42ca2b:	int3   
  42ca2c:	int3   
  42ca2d:	int3   
  42ca2e:	int3   
  42ca2f:	int3   
  42ca30:	mov    esi,DWORD PTR [ebp+0x4]
  42ca33:	jmp    0x409820
  42ca38:	mov    ecx,DWORD PTR [ebp+0x4]
  42ca3b:	add    ecx,0x3c
  42ca3e:	jmp    0x402db0
  42ca43:	mov    edx,DWORD PTR [esp+0x8]
  42ca47:	lea    eax,[edx-0x8]
  42ca4a:	mov    ecx,DWORD PTR [edx-0xc]
  42ca4d:	xor    ecx,eax
  42ca4f:	call   0x42503a
  42ca54:	mov    eax,0x437e98
  42ca59:	jmp    0x429e70
  42ca5e:	int3   
  42ca5f:	int3   
  42ca60:	mov    esi,DWORD PTR [ebp+0x4]
  42ca63:	jmp    0x4092a0
  42ca68:	mov    ecx,DWORD PTR [ebp+0x4]
  42ca6b:	add    ecx,0x3c
  42ca6e:	jmp    0x402db0
  42ca73:	mov    edx,DWORD PTR [esp+0x8]
  42ca77:	lea    eax,[edx-0x8]
  42ca7a:	mov    ecx,DWORD PTR [edx-0xc]
  42ca7d:	xor    ecx,eax
  42ca7f:	call   0x42503a
  42ca84:	mov    eax,0x437ecc
  42ca89:	jmp    0x429e70
  42ca8e:	int3   
  42ca8f:	int3   
  42ca90:	mov    ecx,DWORD PTR [ebp-0x10]
  42ca93:	jmp    0x420590
  42ca98:	mov    edx,DWORD PTR [esp+0x8]
  42ca9c:	lea    eax,[edx-0xc]
  42ca9f:	mov    ecx,DWORD PTR [edx-0x10]
  42caa2:	xor    ecx,eax
  42caa4:	call   0x42503a
  42caa9:	mov    eax,0x437ef8
  42caae:	jmp    0x429e70
  42cab3:	int3   
  42cab4:	int3   
  42cab5:	int3   
  42cab6:	int3   
  42cab7:	int3   
  42cab8:	int3   
  42cab9:	int3   
  42caba:	int3   
  42cabb:	int3   
  42cabc:	int3   
  42cabd:	int3   
  42cabe:	int3   
  42cabf:	int3   
  42cac0:	mov    esi,DWORD PTR [ebp+0x4]
  42cac3:	jmp    0x408400
  42cac8:	mov    ecx,DWORD PTR [ebp+0x4]
  42cacb:	add    ecx,0x3c
  42cace:	jmp    0x402db0
  42cad3:	mov    edx,DWORD PTR [esp+0x8]
  42cad7:	lea    eax,[edx-0x8]
  42cada:	mov    ecx,DWORD PTR [edx-0xc]
  42cadd:	xor    ecx,eax
  42cadf:	call   0x42503a
  42cae4:	mov    eax,0x437f2c
  42cae9:	jmp    0x429e70
  42caee:	int3   
  42caef:	int3   
  42caf0:	mov    ecx,DWORD PTR [ebp-0x10]
  42caf3:	jmp    0x408140
  42caf8:	mov    edx,DWORD PTR [esp+0x8]
  42cafc:	lea    eax,[edx-0xc]
  42caff:	mov    ecx,DWORD PTR [edx-0x10]
  42cb02:	xor    ecx,eax
  42cb04:	call   0x42503a
  42cb09:	mov    eax,0x437f58
  42cb0e:	jmp    0x429e70
  42cb13:	int3   
  42cb14:	int3   
  42cb15:	int3   
  42cb16:	int3   
  42cb17:	int3   
  42cb18:	int3   
  42cb19:	int3   
  42cb1a:	int3   
  42cb1b:	int3   
  42cb1c:	int3   
  42cb1d:	int3   
  42cb1e:	int3   
  42cb1f:	int3   
  42cb20:	lea    ecx,[ebp-0x28]
  42cb23:	jmp    DWORD PTR ds:0x430264
  42cb29:	lea    ecx,[ebp-0x44]
  42cb2c:	jmp    DWORD PTR ds:0x43025c
  42cb32:	mov    edx,DWORD PTR [esp+0x8]
  42cb36:	lea    eax,[edx-0x44]
  42cb39:	mov    ecx,DWORD PTR [edx-0x48]
  42cb3c:	xor    ecx,eax
  42cb3e:	call   0x42503a
  42cb43:	mov    eax,0x437f8c
  42cb48:	jmp    0x429e70
  42cb4d:	int3   
  42cb4e:	int3   
  42cb4f:	int3   
  42cb50:	lea    ecx,[ebp-0x2c]
  42cb53:	jmp    DWORD PTR ds:0x43025c
  42cb59:	mov    edx,DWORD PTR [esp+0x8]
  42cb5d:	lea    eax,[edx-0x2c]
  42cb60:	mov    ecx,DWORD PTR [edx-0x30]
  42cb63:	xor    ecx,eax
  42cb65:	call   0x42503a
  42cb6a:	mov    eax,0x437fb8
  42cb6f:	jmp    0x429e70
  42cb74:	int3   
  42cb75:	int3   
  42cb76:	int3   
  42cb77:	int3   
  42cb78:	int3   
  42cb79:	int3   
  42cb7a:	int3   
  42cb7b:	int3   
  42cb7c:	int3   
  42cb7d:	int3   
  42cb7e:	int3   
  42cb7f:	int3   
  42cb80:	lea    ecx,[ebp-0x60]
  42cb83:	jmp    DWORD PTR ds:0x43025c
  42cb89:	lea    ecx,[ebp-0x28]
  42cb8c:	jmp    DWORD PTR ds:0x430264
  42cb92:	lea    ecx,[ebp-0x44]
  42cb95:	jmp    DWORD PTR ds:0x43025c
  42cb9b:	mov    edx,DWORD PTR [esp+0x8]
  42cb9f:	lea    eax,[edx-0x64]
  42cba2:	mov    ecx,DWORD PTR [edx-0x68]
  42cba5:	xor    ecx,eax
  42cba7:	call   0x42503a
  42cbac:	mov    eax,0x437ff4
  42cbb1:	jmp    0x429e70
  42cbb6:	int3   
  42cbb7:	int3   
  42cbb8:	int3   
  42cbb9:	int3   
  42cbba:	int3   
  42cbbb:	int3   
  42cbbc:	int3   
  42cbbd:	int3   
  42cbbe:	int3   
  42cbbf:	int3   
  42cbc0:	lea    ecx,[ebp-0x60]
  42cbc3:	jmp    DWORD PTR ds:0x43025c
  42cbc9:	lea    ecx,[ebp-0x44]
  42cbcc:	jmp    DWORD PTR ds:0x43025c
  42cbd2:	lea    ecx,[ebp-0x28]
  42cbd5:	jmp    DWORD PTR ds:0x430264
  42cbdb:	mov    edx,DWORD PTR [esp+0x8]
  42cbdf:	lea    eax,[edx-0x5c]
  42cbe2:	mov    ecx,DWORD PTR [edx-0x60]
  42cbe5:	xor    ecx,eax
  42cbe7:	call   0x42503a
  42cbec:	mov    eax,0x438030
  42cbf1:	jmp    0x429e70
  42cbf6:	int3   
  42cbf7:	int3   
  42cbf8:	int3   
  42cbf9:	int3   
  42cbfa:	int3   
  42cbfb:	int3   
  42cbfc:	int3   
  42cbfd:	int3   
  42cbfe:	int3   
  42cbff:	int3   
  42cc00:	mov    esi,DWORD PTR [ebp-0x10]
  42cc03:	jmp    0x404030
  42cc08:	mov    edx,DWORD PTR [esp+0x8]
  42cc0c:	lea    eax,[edx-0xc]
  42cc0f:	mov    ecx,DWORD PTR [edx-0x10]
  42cc12:	xor    ecx,eax
  42cc14:	call   0x42503a
  42cc19:	mov    eax,0x43805c
  42cc1e:	jmp    0x429e70
  42cc23:	int3   
  42cc24:	int3   
  42cc25:	int3   
  42cc26:	int3   
  42cc27:	int3   
  42cc28:	int3   
  42cc29:	int3   
  42cc2a:	int3   
  42cc2b:	int3   
  42cc2c:	int3   
  42cc2d:	int3   
  42cc2e:	int3   
  42cc2f:	int3   
  42cc30:	lea    ecx,[ebp+0x4]
  42cc33:	jmp    DWORD PTR ds:0x430004
  42cc39:	mov    edx,DWORD PTR [esp+0x8]
  42cc3d:	lea    eax,[edx-0x8]
  42cc40:	mov    ecx,DWORD PTR [edx-0xc]
  42cc43:	xor    ecx,eax
  42cc45:	call   0x42503a
  42cc4a:	mov    eax,0x438088
  42cc4f:	jmp    0x429e70
  42cc54:	int3   
  42cc55:	int3   
  42cc56:	int3   
  42cc57:	int3   
  42cc58:	int3   
  42cc59:	int3   
  42cc5a:	int3   
  42cc5b:	int3   
  42cc5c:	int3   
  42cc5d:	int3   
  42cc5e:	int3   
  42cc5f:	int3   
  42cc60:	mov    esi,DWORD PTR [ebp+0x4]
  42cc63:	jmp    0x402d70
  42cc68:	mov    ecx,DWORD PTR [ebp+0x4]
  42cc6b:	add    ecx,0x24
  42cc6e:	jmp    0x402db0
  42cc73:	mov    edx,DWORD PTR [esp+0x8]
  42cc77:	lea    eax,[edx-0x8]
  42cc7a:	mov    ecx,DWORD PTR [edx-0xc]
  42cc7d:	xor    ecx,eax
  42cc7f:	call   0x42503a
  42cc84:	mov    eax,0x4380bc
  42cc89:	jmp    0x429e70
  42cc8e:	int3   
  42cc8f:	int3   
  42cc90:	lea    eax,[ebp-0x2c]
  42cc93:	push   eax
  42cc94:	call   0x401b10
  42cc99:	ret    
  42cc9a:	lea    eax,[ebp-0x2c]
  42cc9d:	jmp    0x413580
  42cca2:	mov    edx,DWORD PTR [esp+0x8]
  42cca6:	lea    eax,[edx-0x7c]
  42cca9:	mov    ecx,DWORD PTR [edx-0x80]
  42ccac:	xor    ecx,eax
  42ccae:	call   0x42503a
  42ccb3:	mov    eax,0x4380f0
  42ccb8:	jmp    0x429e70
  42ccbd:	int3   
  42ccbe:	int3   
  42ccbf:	int3   
  42ccc0:	mov    eax,DWORD PTR [ebp-0x18]
  42ccc3:	push   eax
  42ccc4:	mov    ecx,DWORD PTR [ebp-0x1c]
  42ccc7:	push   ecx
  42ccc8:	call   0x4029a0
  42cccd:	add    esp,0x8
  42ccd0:	ret    
  42ccd1:	mov    edx,DWORD PTR [esp+0x8]
  42ccd5:	lea    eax,[edx+0xc]
  42ccd8:	mov    ecx,DWORD PTR [edx-0x20]
  42ccdb:	xor    ecx,eax
  42ccdd:	call   0x42503a
  42cce2:	mov    eax,0x438150
  42cce7:	jmp    0x429e70
  42ccec:	int3   
  42cced:	int3   
  42ccee:	int3   
  42ccef:	int3   
  42ccf0:	lea    ecx,[ebp-0x50]
  42ccf3:	jmp    DWORD PTR ds:0x43025c
  42ccf9:	mov    edx,DWORD PTR [esp+0x8]
  42ccfd:	lea    eax,[edx-0x54]
  42cd00:	mov    ecx,DWORD PTR [edx-0x58]
  42cd03:	xor    ecx,eax
  42cd05:	call   0x42503a
  42cd0a:	mov    eax,0x43817c
  42cd0f:	jmp    0x429e70
  42cd14:	int3   
  42cd15:	int3   
  42cd16:	int3   
  42cd17:	int3   
  42cd18:	int3   
  42cd19:	int3   
  42cd1a:	int3   
  42cd1b:	int3   
  42cd1c:	int3   
  42cd1d:	int3   
  42cd1e:	int3   
  42cd1f:	int3   
  42cd20:	lea    ecx,[ebp-0x54]
  42cd23:	jmp    DWORD PTR ds:0x43025c
  42cd29:	mov    edx,DWORD PTR [esp+0x8]
  42cd2d:	lea    eax,[edx-0x58]
  42cd30:	mov    ecx,DWORD PTR [edx-0x5c]
  42cd33:	xor    ecx,eax
  42cd35:	call   0x42503a
  42cd3a:	mov    eax,0x4381a8
  42cd3f:	jmp    0x429e70
  42cd44:	int3   
  42cd45:	int3   
  42cd46:	int3   
  42cd47:	int3   
  42cd48:	int3   
  42cd49:	int3   
  42cd4a:	int3   
  42cd4b:	int3   
  42cd4c:	int3   
  42cd4d:	int3   
  42cd4e:	int3   
  42cd4f:	int3   
  42cd50:	mov    edx,DWORD PTR [esp+0x8]
  42cd54:	lea    eax,[edx+0xc]
  42cd57:	mov    ecx,DWORD PTR [edx-0x1c]
  42cd5a:	xor    ecx,eax
  42cd5c:	call   0x42503a
  42cd61:	mov    eax,0x438200
  42cd66:	jmp    0x429e70
  42cd6b:	int3   
  42cd6c:	int3   
  42cd6d:	int3   
  42cd6e:	int3   
  42cd6f:	int3   
  42cd70:	mov    eax,DWORD PTR [ebp+0x8]
  42cd73:	jmp    0x413580
  42cd78:	mov    edx,DWORD PTR [esp+0x8]
  42cd7c:	lea    eax,[edx+0xc]
  42cd7f:	mov    ecx,DWORD PTR [edx-0x14]
  42cd82:	xor    ecx,eax
  42cd84:	call   0x42503a
  42cd89:	mov    eax,0x438260
  42cd8e:	jmp    0x429e70
  42cd93:	int3   
  42cd94:	int3   
  42cd95:	int3   
  42cd96:	int3   
  42cd97:	int3   
  42cd98:	int3   
  42cd99:	int3   
  42cd9a:	int3   
  42cd9b:	int3   
  42cd9c:	int3   
  42cd9d:	int3   
  42cd9e:	int3   
  42cd9f:	int3   
  42cda0:	lea    eax,[ebp-0x5c]
  42cda3:	push   eax
  42cda4:	call   0x4132a0
  42cda9:	ret    
  42cdaa:	lea    eax,[ebp-0x44]
  42cdad:	push   eax
  42cdae:	call   0x422640
  42cdb3:	ret    
  42cdb4:	lea    eax,[ebp-0x5c]
  42cdb7:	jmp    0x413580
  42cdbc:	mov    edx,DWORD PTR [esp+0x8]
  42cdc0:	lea    eax,[edx-0x68]
  42cdc3:	mov    ecx,DWORD PTR [edx-0x6c]
  42cdc6:	xor    ecx,eax
  42cdc8:	call   0x42503a
  42cdcd:	mov    eax,0x43829c
  42cdd2:	jmp    0x429e70
  42cdd7:	int3   
  42cdd8:	int3   
  42cdd9:	int3   
  42cdda:	int3   
  42cddb:	int3   
  42cddc:	int3   
  42cddd:	int3   
  42cdde:	int3   
  42cddf:	int3   
  42cde0:	mov    ecx,DWORD PTR [ebp+0x4]
  42cde3:	jmp    DWORD PTR ds:0x430264
  42cde9:	mov    edx,DWORD PTR [esp+0x8]
  42cded:	lea    eax,[edx-0x8]
  42cdf0:	mov    ecx,DWORD PTR [edx-0xc]
  42cdf3:	xor    ecx,eax
  42cdf5:	call   0x42503a
  42cdfa:	mov    eax,0x4382c8
  42cdff:	jmp    0x429e70
  42ce04:	int3   
  42ce05:	int3   
  42ce06:	int3   
  42ce07:	int3   
  42ce08:	int3   
  42ce09:	int3   
  42ce0a:	int3   
  42ce0b:	int3   
  42ce0c:	int3   
  42ce0d:	int3   
  42ce0e:	int3   
  42ce0f:	int3   
  42ce10:	mov    ecx,DWORD PTR [ebp+0x4]
  42ce13:	jmp    DWORD PTR ds:0x430264
  42ce19:	mov    eax,DWORD PTR [ebp-0x10]
  42ce1c:	jmp    0x413580
  42ce21:	mov    edx,DWORD PTR [esp+0x8]
  42ce25:	lea    eax,[edx-0x10]
  42ce28:	mov    ecx,DWORD PTR [edx-0x14]
  42ce2b:	xor    ecx,eax
  42ce2d:	call   0x42503a
  42ce32:	mov    eax,0x4382fc
  42ce37:	jmp    0x429e70
  42ce3c:	int3   
  42ce3d:	int3   
  42ce3e:	int3   
  42ce3f:	int3   
  42ce40:	mov    ecx,DWORD PTR [ebp+0x4]
  42ce43:	jmp    DWORD PTR ds:0x430264
  42ce49:	mov    edx,DWORD PTR [esp+0x8]
  42ce4d:	lea    eax,[edx-0x4]
  42ce50:	mov    ecx,DWORD PTR [edx-0x8]
  42ce53:	xor    ecx,eax
  42ce55:	call   0x42503a
  42ce5a:	mov    eax,0x438328
  42ce5f:	jmp    0x429e70
  42ce64:	int3   
  42ce65:	int3   
  42ce66:	int3   
  42ce67:	int3   
  42ce68:	int3   
  42ce69:	int3   
  42ce6a:	int3   
  42ce6b:	int3   
  42ce6c:	int3   
  42ce6d:	int3   
  42ce6e:	int3   
  42ce6f:	int3   
  42ce70:	lea    ecx,[ebp-0x1c8]
  42ce76:	jmp    DWORD PTR ds:0x430264
  42ce7c:	lea    ecx,[ebp-0x21c]
  42ce82:	jmp    DWORD PTR ds:0x430264
  42ce88:	lea    ecx,[ebp-0x200]
  42ce8e:	jmp    DWORD PTR ds:0x430264
  42ce94:	mov    ecx,DWORD PTR [ebp-0x41c]
  42ce9a:	jmp    DWORD PTR ds:0x430264
  42cea0:	mov    ecx,DWORD PTR [ebp-0x3f0]
  42cea6:	jmp    DWORD PTR ds:0x430264
  42ceac:	lea    eax,[ebp-0x68]
  42ceaf:	push   eax
  42ceb0:	call   0x420e10
  42ceb5:	ret    
  42ceb6:	lea    eax,[ebp-0x128]
  42cebc:	jmp    0x420e80
  42cec1:	mov    eax,DWORD PTR [ebp-0x3f8]
  42cec7:	and    eax,0x1
  42ceca:	je     0x42cee3
  42ced0:	and    DWORD PTR [ebp-0x3f8],0xfffffffe
  42ced7:	mov    ecx,DWORD PTR [ebp-0x418]
  42cedd:	push   ecx
  42cede:	call   0x420ef0
  42cee3:	ret    
  42cee4:	lea    eax,[ebp-0x2c0]
  42ceea:	push   eax
  42ceeb:	call   0x420f70
  42cef0:	ret    
  42cef1:	lea    eax,[ebp-0x348]
  42cef7:	push   eax
  42cef8:	call   0x420e10
  42cefd:	ret    
  42cefe:	lea    ecx,[ebp-0x348]
  42cf04:	jmp    DWORD PTR ds:0x430264
  42cf0a:	lea    ecx,[ebp-0x32c]
  42cf10:	jmp    DWORD PTR ds:0x430264
  42cf16:	lea    ecx,[ebp-0x238]
  42cf1c:	jmp    DWORD PTR ds:0x430264
  42cf22:	lea    ecx,[ebp-0x1e4]
  42cf28:	jmp    DWORD PTR ds:0x430264
  42cf2e:	lea    ecx,[ebp-0x1ac]
  42cf34:	jmp    DWORD PTR ds:0x430264
  42cf3a:	mov    ecx,DWORD PTR [ebp-0x3f4]
  42cf40:	jmp    DWORD PTR ds:0x430264
  42cf46:	mov    ecx,DWORD PTR [ebp-0x3f0]
  42cf4c:	jmp    DWORD PTR ds:0x430264
  42cf52:	lea    eax,[ebp-0xc0]
  42cf58:	push   eax
  42cf59:	call   0x420e10
  42cf5e:	ret    
  42cf5f:	lea    eax,[ebp-0x190]
  42cf65:	jmp    0x420e80
  42cf6a:	lea    ecx,[ebp-0x364]
  42cf70:	jmp    DWORD PTR ds:0x430264
  42cf76:	lea    eax,[ebp-0x410]
  42cf7c:	jmp    0x413580
  42cf81:	lea    eax,[ebp-0x410]
  42cf87:	push   eax
  42cf88:	call   0x4132a0
  42cf8d:	ret    
  42cf8e:	lea    eax,[ebp-0x348]
  42cf94:	push   eax
  42cf95:	call   0x420f70
  42cf9a:	ret    
  42cf9b:	lea    eax,[ebp-0x3ec]
  42cfa1:	push   eax
  42cfa2:	call   0x420e10
  42cfa7:	ret    
  42cfa8:	lea    ecx,[ebp-0x3ec]
  42cfae:	jmp    DWORD PTR ds:0x430264
  42cfb4:	lea    ecx,[ebp-0x3d0]
  42cfba:	jmp    DWORD PTR ds:0x430264
  42cfc0:	lea    eax,[ebp-0x348]
  42cfc6:	push   eax
  42cfc7:	call   0x420e10
  42cfcc:	ret    
  42cfcd:	lea    ecx,[ebp-0x348]
  42cfd3:	jmp    DWORD PTR ds:0x430264
  42cfd9:	lea    ecx,[ebp-0x32c]
  42cfdf:	jmp    DWORD PTR ds:0x430264
  42cfe5:	lea    eax,[ebp-0x410]
  42cfeb:	jmp    0x413580
  42cff0:	mov    ecx,DWORD PTR [ebp-0x414]
  42cff6:	jmp    DWORD PTR ds:0x430264
  42cffc:	mov    ecx,DWORD PTR [ebp-0x414]
  42d002:	add    ecx,0x1c
  42d005:	jmp    DWORD PTR ds:0x430264
  42d00b:	lea    ecx,[ebp-0xc0]
  42d011:	jmp    DWORD PTR ds:0x430264
  42d017:	lea    ecx,[ebp-0xa4]
  42d01d:	jmp    DWORD PTR ds:0x430264
  42d023:	lea    eax,[ebp-0x2c0]
  42d029:	push   eax
  42d02a:	call   0x420e10
  42d02f:	ret    
  42d030:	lea    ecx,[ebp-0x2c0]
  42d036:	jmp    DWORD PTR ds:0x430264
  42d03c:	lea    ecx,[ebp-0x2a4]
  42d042:	jmp    DWORD PTR ds:0x430264
  42d048:	mov    ecx,DWORD PTR [ebp-0x414]
  42d04e:	jmp    DWORD PTR ds:0x430264
  42d054:	mov    ecx,DWORD PTR [ebp-0x414]
  42d05a:	add    ecx,0x1c
  42d05d:	jmp    DWORD PTR ds:0x430264
  42d063:	lea    ecx,[ebp-0x68]
  42d066:	jmp    DWORD PTR ds:0x430264
  42d06c:	lea    ecx,[ebp-0x4c]
  42d06f:	jmp    DWORD PTR ds:0x430264
  42d075:	mov    edx,DWORD PTR [esp+0x8]
  42d079:	lea    eax,[edx-0x424]
  42d07f:	mov    ecx,DWORD PTR [edx-0x428]
  42d085:	xor    ecx,eax
  42d087:	call   0x42503a
  42d08c:	add    eax,0x10
  42d08f:	mov    ecx,DWORD PTR [edx-0x4]
  42d092:	xor    ecx,eax
  42d094:	call   0x42503a
  42d099:	mov    eax,0x438498
  42d09e:	jmp    0x429e70
  42d0a3:	int3   
  42d0a4:	int3   
  42d0a5:	int3   
  42d0a6:	int3   
  42d0a7:	int3   
  42d0a8:	int3   
  42d0a9:	int3   
  42d0aa:	int3   
  42d0ab:	int3   
  42d0ac:	int3   
  42d0ad:	int3   
  42d0ae:	int3   
  42d0af:	int3   
  42d0b0:	mov    edx,DWORD PTR [esp+0x8]
  42d0b4:	lea    eax,[edx+0xc]
  42d0b7:	mov    ecx,DWORD PTR [edx-0x14]
  42d0ba:	xor    ecx,eax
  42d0bc:	call   0x42503a
  42d0c1:	mov    eax,0x4384f0
  42d0c6:	jmp    0x429e70
  42d0cb:	int3   
  42d0cc:	int3   
  42d0cd:	int3   
  42d0ce:	int3   
  42d0cf:	int3   
  42d0d0:	lea    eax,[ebp-0x24]
  42d0d3:	jmp    0x411e30
  42d0d8:	lea    eax,[ebp-0x2c]
  42d0db:	jmp    0x411e30
  42d0e0:	mov    edx,DWORD PTR [esp+0x8]
  42d0e4:	lea    eax,[edx+0xc]
  42d0e7:	mov    ecx,DWORD PTR [edx-0x30]
  42d0ea:	xor    ecx,eax
  42d0ec:	call   0x42503a
  42d0f1:	mov    eax,0x43858c
  42d0f6:	jmp    0x429e70
  42d0fb:	int3   
  42d0fc:	int3   
  42d0fd:	int3   
  42d0fe:	int3   
  42d0ff:	int3   
  42d100:	mov    eax,DWORD PTR [ebp+0x4]
  42d103:	jmp    0x413580
  42d108:	mov    edx,DWORD PTR [esp+0x8]
  42d10c:	lea    eax,[edx-0xc]
  42d10f:	mov    ecx,DWORD PTR [edx-0x10]
  42d112:	xor    ecx,eax
  42d114:	call   0x42503a
  42d119:	mov    eax,0x4385b8
  42d11e:	jmp    0x429e70
  42d123:	int3   
  42d124:	int3   
  42d125:	int3   
  42d126:	int3   
  42d127:	int3   
  42d128:	int3   
  42d129:	int3   
  42d12a:	int3   
  42d12b:	int3   
  42d12c:	int3   
  42d12d:	int3   
  42d12e:	int3   
  42d12f:	int3   
  42d130:	mov    eax,DWORD PTR [ebp-0x14]
  42d133:	add    eax,0x10
  42d136:	push   eax
  42d137:	call   0x40d380
  42d13c:	ret    
  42d13d:	mov    eax,DWORD PTR [ebp-0x14]
  42d140:	add    eax,0x4c
  42d143:	push   eax
  42d144:	call   0x412dd0
  42d149:	ret    
  42d14a:	mov    ecx,DWORD PTR [ebp-0x14]
  42d14d:	add    ecx,0x6c
  42d150:	jmp    DWORD PTR ds:0x430264
  42d156:	mov    eax,DWORD PTR [ebp-0x14]
  42d159:	add    eax,0x8c
  42d15e:	push   eax
  42d15f:	call   0x40d5c0
  42d164:	ret    
  42d165:	mov    ecx,DWORD PTR [ebp-0x14]
  42d168:	add    ecx,0xac
  42d16e:	jmp    DWORD PTR ds:0x430264
  42d174:	mov    edx,DWORD PTR [esp+0x8]
  42d178:	lea    eax,[edx-0xc]
  42d17b:	mov    ecx,DWORD PTR [edx-0x10]
  42d17e:	xor    ecx,eax
  42d180:	call   0x42503a
  42d185:	mov    eax,0x438604
  42d18a:	jmp    0x429e70
  42d18f:	int3   
  42d190:	lea    ecx,[ebp-0x48]
  42d193:	jmp    DWORD PTR ds:0x430264
  42d199:	lea    ecx,[ebp-0x2c]
  42d19c:	jmp    DWORD PTR ds:0x430264
  42d1a2:	mov    edx,DWORD PTR [esp+0x8]
  42d1a6:	lea    eax,[edx-0x40]
  42d1a9:	mov    ecx,DWORD PTR [edx-0x44]
  42d1ac:	xor    ecx,eax
  42d1ae:	call   0x42503a
  42d1b3:	add    eax,0x4
  42d1b6:	mov    ecx,DWORD PTR [edx-0x4]
  42d1b9:	xor    ecx,eax
  42d1bb:	call   0x42503a
  42d1c0:	mov    eax,0x438638
  42d1c5:	jmp    0x429e70
  42d1ca:	int3   
  42d1cb:	int3   
  42d1cc:	int3   
  42d1cd:	int3   
  42d1ce:	int3   
  42d1cf:	int3   
  42d1d0:	mov    eax,DWORD PTR [ebp-0x14]
  42d1d3:	add    eax,0x10
  42d1d6:	push   eax
  42d1d7:	call   0x40d380
  42d1dc:	ret    
  42d1dd:	mov    eax,DWORD PTR [ebp-0x14]
  42d1e0:	add    eax,0x4c
  42d1e3:	push   eax
  42d1e4:	call   0x412dd0
  42d1e9:	ret    
  42d1ea:	mov    ecx,DWORD PTR [ebp-0x14]
  42d1ed:	add    ecx,0x6c
  42d1f0:	jmp    DWORD PTR ds:0x430264
  42d1f6:	mov    eax,DWORD PTR [ebp-0x14]
  42d1f9:	add    eax,0x8c
  42d1fe:	push   eax
  42d1ff:	call   0x40d5c0
  42d204:	ret    
  42d205:	mov    eax,DWORD PTR [ebp-0x10]
  42d208:	jmp    0x413580
  42d20d:	mov    edx,DWORD PTR [esp+0x8]
  42d211:	lea    eax,[edx-0xc]
  42d214:	mov    ecx,DWORD PTR [edx-0x10]
  42d217:	xor    ecx,eax
  42d219:	call   0x42503a
  42d21e:	mov    eax,0x438684
  42d223:	jmp    0x429e70
  42d228:	int3   
  42d229:	int3   
  42d22a:	int3   
  42d22b:	int3   
  42d22c:	int3   
  42d22d:	int3   
  42d22e:	int3   
  42d22f:	int3   
  42d230:	mov    ecx,DWORD PTR [ebp+0x4]
  42d233:	add    ecx,0x4
  42d236:	jmp    0x411990
  42d23b:	mov    eax,DWORD PTR [ebp+0x4]
  42d23e:	add    eax,0x28
  42d241:	push   eax
  42d242:	call   0x4127d0
  42d247:	ret    
  42d248:	mov    ecx,DWORD PTR [ebp+0x4]
  42d24b:	add    ecx,0x48
  42d24e:	jmp    DWORD PTR ds:0x430264
  42d254:	mov    ecx,DWORD PTR [ebp+0x4]
  42d257:	add    ecx,0x64
  42d25a:	jmp    DWORD PTR ds:0x430264
  42d260:	mov    eax,DWORD PTR [ebp-0x10]
  42d263:	jmp    0x413580
  42d268:	mov    edx,DWORD PTR [esp+0x8]
  42d26c:	lea    eax,[edx-0x10]
  42d26f:	mov    ecx,DWORD PTR [edx-0x14]
  42d272:	xor    ecx,eax
  42d274:	call   0x42503a
  42d279:	mov    eax,0x4386d0
  42d27e:	jmp    0x429e70
  42d283:	int3   
  42d284:	int3   
  42d285:	int3   
  42d286:	int3   
  42d287:	int3   
  42d288:	int3   
  42d289:	int3   
  42d28a:	int3   
  42d28b:	int3   
  42d28c:	int3   
  42d28d:	int3   
  42d28e:	int3   
  42d28f:	int3   
  42d290:	mov    ecx,DWORD PTR [ebp+0x4]
  42d293:	add    ecx,0x4
  42d296:	jmp    0x411990
  42d29b:	mov    eax,DWORD PTR [ebp+0x4]
  42d29e:	add    eax,0x28
  42d2a1:	push   eax
  42d2a2:	call   0x4127d0
  42d2a7:	ret    
  42d2a8:	mov    ecx,DWORD PTR [ebp+0x4]
  42d2ab:	add    ecx,0x48
  42d2ae:	jmp    DWORD PTR ds:0x430264
  42d2b4:	mov    ecx,DWORD PTR [ebp+0x4]
  42d2b7:	add    ecx,0x64
  42d2ba:	jmp    DWORD PTR ds:0x430264
  42d2c0:	mov    edx,DWORD PTR [esp+0x8]
  42d2c4:	lea    eax,[edx-0x8]
  42d2c7:	mov    ecx,DWORD PTR [edx-0xc]
  42d2ca:	xor    ecx,eax
  42d2cc:	call   0x42503a
  42d2d1:	mov    eax,0x438714
  42d2d6:	jmp    0x429e70
  42d2db:	int3   
  42d2dc:	int3   
  42d2dd:	int3   
  42d2de:	int3   
  42d2df:	int3   
  42d2e0:	mov    esi,DWORD PTR [ebp+0x4]
  42d2e3:	jmp    0x407990
  42d2e8:	mov    ecx,DWORD PTR [ebp+0x4]
  42d2eb:	add    ecx,0x28
  42d2ee:	jmp    0x402db0
  42d2f3:	mov    edx,DWORD PTR [esp+0x8]
  42d2f7:	lea    eax,[edx-0x8]
  42d2fa:	mov    ecx,DWORD PTR [edx-0xc]
  42d2fd:	xor    ecx,eax
  42d2ff:	call   0x42503a
  42d304:	mov    eax,0x438748
  42d309:	jmp    0x429e70
  42d30e:	int3   
  42d30f:	int3   
  42d310:	lea    esi,[ebp-0x60]
  42d313:	jmp    0x407990
  42d318:	mov    edx,DWORD PTR [esp+0x8]
  42d31c:	lea    eax,[edx-0x5c]
  42d31f:	mov    ecx,DWORD PTR [edx-0x60]
  42d322:	xor    ecx,eax
  42d324:	call   0x42503a
  42d329:	mov    eax,0x438774
  42d32e:	jmp    0x429e70
  42d333:	int3   
  42d334:	int3   
  42d335:	int3   
  42d336:	int3   
  42d337:	int3   
  42d338:	int3   
  42d339:	int3   
  42d33a:	int3   
  42d33b:	int3   
  42d33c:	int3   
  42d33d:	int3   
  42d33e:	int3   
  42d33f:	int3   
  42d340:	mov    eax,DWORD PTR [ebp-0x40]
  42d343:	and    eax,0x1
  42d346:	je     0x42d359
  42d34c:	and    DWORD PTR [ebp-0x40],0xfffffffe
  42d350:	mov    ecx,DWORD PTR [ebp-0x44]
  42d353:	jmp    DWORD PTR ds:0x430264
  42d359:	ret    
  42d35a:	mov    edx,DWORD PTR [esp+0x8]
  42d35e:	lea    eax,[edx-0x44]
  42d361:	mov    ecx,DWORD PTR [edx-0x48]
  42d364:	xor    ecx,eax
  42d366:	call   0x42503a
  42d36b:	add    eax,0x8
  42d36e:	mov    ecx,DWORD PTR [edx-0x4]
  42d371:	xor    ecx,eax
  42d373:	call   0x42503a
  42d378:	mov    eax,0x4387a8
  42d37d:	jmp    0x429e70
  42d382:	int3   
  42d383:	int3   
  42d384:	int3   
  42d385:	int3   
  42d386:	int3   
  42d387:	int3   
  42d388:	int3   
  42d389:	int3   
  42d38a:	int3   
  42d38b:	int3   
  42d38c:	int3   
  42d38d:	int3   
  42d38e:	int3   
  42d38f:	int3   
  42d390:	lea    ecx,[ebp-0x178]
  42d396:	jmp    DWORD PTR ds:0x43025c
  42d39c:	lea    ecx,[ebp-0x194]
  42d3a2:	jmp    DWORD PTR ds:0x43025c
  42d3a8:	lea    ecx,[ebp-0xd0]
  42d3ae:	jmp    DWORD PTR ds:0x430264
  42d3b4:	lea    ecx,[ebp-0x108]
  42d3ba:	jmp    DWORD PTR ds:0x430264
  42d3c0:	lea    ecx,[ebp-0x124]
  42d3c6:	jmp    DWORD PTR ds:0x430264
  42d3cc:	lea    ecx,[ebp-0xb4]
  42d3d2:	jmp    DWORD PTR ds:0x430264
  42d3d8:	lea    ecx,[ebp-0x98]
  42d3de:	jmp    DWORD PTR ds:0x430264
  42d3e4:	lea    ecx,[ebp-0x140]
  42d3ea:	jmp    DWORD PTR ds:0x430264
  42d3f0:	lea    ecx,[ebp-0x7c]
  42d3f3:	jmp    DWORD PTR ds:0x430264
  42d3f9:	lea    ecx,[ebp-0xec]
  42d3ff:	jmp    DWORD PTR ds:0x430264
  42d405:	lea    ecx,[ebp-0x194]
  42d40b:	jmp    DWORD PTR ds:0x43025c
  42d411:	lea    ecx,[ebp-0x178]
  42d417:	jmp    DWORD PTR ds:0x43025c
  42d41d:	lea    ecx,[ebp-0xec]
  42d423:	jmp    DWORD PTR ds:0x430264
  42d429:	lea    ecx,[ebp-0x7c]
  42d42c:	jmp    DWORD PTR ds:0x430264
  42d432:	lea    ecx,[ebp-0x140]
  42d438:	jmp    DWORD PTR ds:0x430264
  42d43e:	lea    ecx,[ebp-0x98]
  42d444:	jmp    DWORD PTR ds:0x430264
  42d44a:	lea    ecx,[ebp-0xb4]
  42d450:	jmp    DWORD PTR ds:0x430264
  42d456:	lea    ecx,[ebp-0x124]
  42d45c:	jmp    DWORD PTR ds:0x430264
  42d462:	lea    ecx,[ebp-0x108]
  42d468:	jmp    DWORD PTR ds:0x430264
  42d46e:	lea    ecx,[ebp-0xd0]
  42d474:	jmp    DWORD PTR ds:0x430264
  42d47a:	lea    ecx,[ebp-0x15c]
  42d480:	jmp    DWORD PTR ds:0x43025c
  42d486:	lea    ecx,[ebp-0x28]
  42d489:	jmp    DWORD PTR ds:0x430264
  42d48f:	lea    ecx,[ebp-0x44]
  42d492:	jmp    DWORD PTR ds:0x430264
  42d498:	lea    ecx,[ebp-0x60]
  42d49b:	jmp    DWORD PTR ds:0x430264
  42d4a1:	mov    edx,DWORD PTR [esp+0x8]
  42d4a5:	lea    eax,[edx-0x1a4]
  42d4ab:	mov    ecx,DWORD PTR [edx-0x1a8]
  42d4b1:	xor    ecx,eax
  42d4b3:	call   0x42503a
  42d4b8:	mov    eax,0x438890
  42d4bd:	jmp    0x429e70
  42d4c2:	int3   
  42d4c3:	int3   
  42d4c4:	int3   
  42d4c5:	int3   
  42d4c6:	int3   
  42d4c7:	int3   
  42d4c8:	int3   
  42d4c9:	int3   
  42d4ca:	int3   
  42d4cb:	int3   
  42d4cc:	int3   
  42d4cd:	int3   
  42d4ce:	int3   
  42d4cf:	int3   
  42d4d0:	mov    eax,DWORD PTR [ebp-0x68]
  42d4d3:	and    eax,0x1
  42d4d6:	je     0x42d4e9
  42d4dc:	and    DWORD PTR [ebp-0x68],0xfffffffe
  42d4e0:	mov    ecx,DWORD PTR [ebp-0x64]
  42d4e3:	jmp    DWORD PTR ds:0x430264
  42d4e9:	ret    
  42d4ea:	lea    ecx,[ebp-0x44]
  42d4ed:	jmp    DWORD PTR ds:0x430264
  42d4f3:	lea    ecx,[ebp-0x60]
  42d4f6:	jmp    DWORD PTR ds:0x430264
  42d4fc:	lea    ecx,[ebp-0x28]
  42d4ff:	jmp    DWORD PTR ds:0x430264
  42d505:	lea    ecx,[ebp-0x60]
  42d508:	jmp    DWORD PTR ds:0x430264
  42d50e:	lea    ecx,[ebp-0x44]
  42d511:	jmp    DWORD PTR ds:0x430264
  42d517:	mov    edx,DWORD PTR [esp+0x8]
  42d51b:	lea    eax,[edx-0x70]
  42d51e:	mov    ecx,DWORD PTR [edx-0x74]
  42d521:	xor    ecx,eax
  42d523:	call   0x42503a
  42d528:	mov    eax,0x4388e4
  42d52d:	jmp    0x429e70
  42d532:	int3   
  42d533:	int3   
  42d534:	int3   
  42d535:	int3   
  42d536:	int3   
  42d537:	int3   
  42d538:	int3   
  42d539:	int3   
  42d53a:	int3   
  42d53b:	int3   
  42d53c:	int3   
  42d53d:	int3   
  42d53e:	int3   
  42d53f:	int3   
  42d540:	lea    ecx,[ebp-0xa8]
  42d546:	jmp    DWORD PTR ds:0x430168
  42d54c:	lea    ecx,[ebp-0xc4]
  42d552:	jmp    DWORD PTR ds:0x43025c
  42d558:	mov    edx,DWORD PTR [esp+0x8]
  42d55c:	lea    eax,[edx-0xc4]
  42d562:	mov    ecx,DWORD PTR [edx-0xc8]
  42d568:	xor    ecx,eax
  42d56a:	call   0x42503a
  42d56f:	add    eax,0xc
  42d572:	mov    ecx,DWORD PTR [edx-0x8]
  42d575:	xor    ecx,eax
  42d577:	call   0x42503a
  42d57c:	mov    eax,0x438918
  42d581:	jmp    0x429e70
  42d586:	int3   
  42d587:	int3   
  42d588:	int3   
  42d589:	int3   
  42d58a:	int3   
  42d58b:	int3   
  42d58c:	int3   
  42d58d:	int3   
  42d58e:	int3   
  42d58f:	int3   
  42d590:	mov    esi,DWORD PTR [ebp+0x4]
  42d593:	jmp    0x403dc0
  42d598:	mov    ecx,DWORD PTR [ebp+0x4]
  42d59b:	add    ecx,0x3c
  42d59e:	jmp    0x402db0
  42d5a3:	mov    edx,DWORD PTR [esp+0x8]
  42d5a7:	lea    eax,[edx-0x8]
  42d5aa:	mov    ecx,DWORD PTR [edx-0xc]
  42d5ad:	xor    ecx,eax
  42d5af:	call   0x42503a
  42d5b4:	mov    eax,0x43894c
  42d5b9:	jmp    0x429e70
  42d5be:	int3   
  42d5bf:	int3   
  42d5c0:	lea    esi,[ebp-0x8c]
  42d5c6:	jmp    0x403dc0
  42d5cb:	mov    edx,DWORD PTR [esp+0x8]
  42d5cf:	lea    eax,[edx-0x88]
  42d5d5:	mov    ecx,DWORD PTR [edx-0x8c]
  42d5db:	xor    ecx,eax
  42d5dd:	call   0x42503a
  42d5e2:	mov    eax,0x438978
  42d5e7:	jmp    0x429e70
  42d5ec:	int3   
  42d5ed:	int3   
  42d5ee:	int3   
  42d5ef:	int3   
  42d5f0:	lea    esi,[ebp-0x38]
  42d5f3:	jmp    0x404030
  42d5f8:	mov    edx,DWORD PTR [esp+0x8]
  42d5fc:	lea    eax,[edx-0x2c]
  42d5ff:	mov    ecx,DWORD PTR [edx-0x30]
  42d602:	xor    ecx,eax
  42d604:	call   0x42503a
  42d609:	mov    eax,0x4389a4
  42d60e:	jmp    0x429e70
  42d613:	int3   
  42d614:	int3   
  42d615:	int3   
  42d616:	int3   
  42d617:	int3   
  42d618:	int3   
  42d619:	int3   
  42d61a:	int3   
  42d61b:	int3   
  42d61c:	int3   
  42d61d:	int3   
  42d61e:	int3   
  42d61f:	int3   
  42d620:	lea    ecx,[ebp-0x28]
  42d623:	jmp    DWORD PTR ds:0x430264
  42d629:	lea    ecx,[ebp-0x44]
  42d62c:	jmp    DWORD PTR ds:0x430264
  42d632:	lea    ecx,[ebp-0x60]
  42d635:	jmp    DWORD PTR ds:0x430264
  42d63b:	mov    edx,DWORD PTR [esp+0x8]
  42d63f:	lea    eax,[edx-0x5c]
  42d642:	mov    ecx,DWORD PTR [edx-0x60]
  42d645:	xor    ecx,eax
  42d647:	call   0x42503a
  42d64c:	mov    eax,0x4389e0
  42d651:	jmp    0x429e70
  42d656:	int3   
  42d657:	int3   
  42d658:	int3   
  42d659:	int3   
  42d65a:	int3   
  42d65b:	int3   
  42d65c:	int3   
  42d65d:	int3   
  42d65e:	int3   
  42d65f:	int3   
  42d660:	lea    ecx,[ebp-0x28]
  42d663:	jmp    DWORD PTR ds:0x430264
  42d669:	lea    ecx,[ebp-0x60]
  42d66c:	jmp    DWORD PTR ds:0x430264
  42d672:	lea    ecx,[ebp-0x98]
  42d678:	jmp    DWORD PTR ds:0x430264
  42d67e:	lea    ecx,[ebp-0xb4]
  42d684:	jmp    DWORD PTR ds:0x430264
  42d68a:	lea    ecx,[ebp-0x7c]
  42d68d:	jmp    DWORD PTR ds:0x430264
  42d693:	lea    ecx,[ebp-0x44]
  42d696:	jmp    DWORD PTR ds:0x430264
  42d69c:	mov    edx,DWORD PTR [esp+0x8]
  42d6a0:	lea    eax,[edx-0xb0]
  42d6a6:	mov    ecx,DWORD PTR [edx-0xb4]
  42d6ac:	xor    ecx,eax
  42d6ae:	call   0x42503a
  42d6b3:	mov    eax,0x438a34
  42d6b8:	jmp    0x429e70
  42d6bd:	int3   
  42d6be:	int3   
  42d6bf:	int3   
  42d6c0:	lea    ecx,[ebp-0xf0]
  42d6c6:	jmp    DWORD PTR ds:0x43025c
  42d6cc:	lea    ecx,[ebp-0x2c]
  42d6cf:	jmp    DWORD PTR ds:0x430264
  42d6d5:	lea    ecx,[ebp-0x48]
  42d6d8:	jmp    DWORD PTR ds:0x430264
  42d6de:	lea    ecx,[ebp-0x64]
  42d6e1:	jmp    DWORD PTR ds:0x430264
  42d6e7:	lea    ecx,[ebp-0x9c]
  42d6ed:	jmp    DWORD PTR ds:0x430264
  42d6f3:	lea    ecx,[ebp-0xd4]
  42d6f9:	jmp    DWORD PTR ds:0x430264
  42d6ff:	lea    ecx,[ebp-0x10c]
  42d705:	jmp    DWORD PTR ds:0x430264
  42d70b:	lea    ecx,[ebp-0x128]
  42d711:	jmp    DWORD PTR ds:0x430264
  42d717:	lea    ecx,[ebp-0xb8]
  42d71d:	jmp    DWORD PTR ds:0x430264
  42d723:	lea    ecx,[ebp-0x80]
  42d726:	jmp    DWORD PTR ds:0x430264
  42d72c:	mov    edx,DWORD PTR [esp+0x8]
  42d730:	lea    eax,[edx-0x130]
  42d736:	mov    ecx,DWORD PTR [edx-0x134]
  42d73c:	xor    ecx,eax
  42d73e:	call   0x42503a
  42d743:	add    eax,0x10
  42d746:	mov    ecx,DWORD PTR [edx-0x4]
  42d749:	xor    ecx,eax
  42d74b:	call   0x42503a
  42d750:	mov    eax,0x438ab0
  42d755:	jmp    0x429e70
  42d75a:	int3   
  42d75b:	int3   
  42d75c:	int3   
  42d75d:	int3   
  42d75e:	int3   
  42d75f:	int3   
  42d760:	lea    ecx,[ebp+0x4]
  42d763:	jmp    DWORD PTR ds:0x43001c
  42d769:	lea    ecx,[ebp-0x18]
  42d76c:	jmp    0x404680
  42d771:	mov    edx,DWORD PTR [esp+0x8]
  42d775:	lea    eax,[edx-0x20]
  42d778:	mov    ecx,DWORD PTR [edx-0x24]
  42d77b:	xor    ecx,eax
  42d77d:	call   0x42503a
  42d782:	mov    eax,0x438ae4
  42d787:	jmp    0x429e70
  42d78c:	int3   
  42d78d:	int3   
  42d78e:	int3   
  42d78f:	int3   
  42d790:	lea    ecx,[ebp-0x20]
  42d793:	jmp    0x404680
  42d798:	lea    ecx,[ebp-0x18]
  42d79b:	jmp    0x404680
  42d7a0:	mov    edx,DWORD PTR [esp+0x8]
  42d7a4:	lea    eax,[edx-0x1c]
  42d7a7:	mov    ecx,DWORD PTR [edx-0x20]
  42d7aa:	xor    ecx,eax
  42d7ac:	call   0x42503a
  42d7b1:	mov    eax,0x438b18
  42d7b6:	jmp    0x429e70
  42d7bb:	int3   
  42d7bc:	int3   
  42d7bd:	int3   
  42d7be:	int3   
  42d7bf:	int3   
  42d7c0:	lea    esi,[ebp-0x34]
  42d7c3:	jmp    0x404030
  42d7c8:	mov    edx,DWORD PTR [esp+0x8]
  42d7cc:	lea    eax,[edx-0x34]
  42d7cf:	mov    ecx,DWORD PTR [edx-0x38]
  42d7d2:	xor    ecx,eax
  42d7d4:	call   0x42503a
  42d7d9:	mov    eax,0x438b44
  42d7de:	jmp    0x429e70
  42d7e3:	int3   
  42d7e4:	int3   
  42d7e5:	int3   
  42d7e6:	int3   
  42d7e7:	int3   
  42d7e8:	int3   
  42d7e9:	int3   
  42d7ea:	int3   
  42d7eb:	int3   
  42d7ec:	int3   
  42d7ed:	int3   
  42d7ee:	int3   
  42d7ef:	int3   
  42d7f0:	lea    eax,[ebp+0x8]
  42d7f3:	jmp    0x4127b0
  42d7f8:	mov    esi,DWORD PTR [ebp-0x14]
  42d7fb:	jmp    0x421a20
  42d800:	mov    edx,DWORD PTR [esp+0x8]
  42d804:	lea    eax,[edx-0x18]
  42d807:	mov    ecx,DWORD PTR [edx-0x1c]
  42d80a:	xor    ecx,eax
  42d80c:	call   0x42503a
  42d811:	mov    eax,0x438b78
  42d816:	jmp    0x429e70
  42d81b:	int3   
  42d81c:	int3   
  42d81d:	int3   
  42d81e:	int3   
  42d81f:	int3   
  42d820:	lea    ecx,[ebp-0x20]
  42d823:	jmp    0x408140
  42d828:	mov    edx,DWORD PTR [esp+0x8]
  42d82c:	lea    eax,[edx-0x24]
  42d82f:	mov    ecx,DWORD PTR [edx-0x28]
  42d832:	xor    ecx,eax
  42d834:	call   0x42503a
  42d839:	mov    eax,0x438ba4
  42d83e:	jmp    0x429e70
  42d843:	int3   
  42d844:	int3   
  42d845:	int3   
  42d846:	int3   
  42d847:	int3   
  42d848:	int3   
  42d849:	int3   
  42d84a:	int3   
  42d84b:	int3   
  42d84c:	int3   
  42d84d:	int3   
  42d84e:	int3   
  42d84f:	int3   
  42d850:	mov    edx,DWORD PTR [esp+0x8]
  42d854:	lea    eax,[edx+0xc]
  42d857:	mov    ecx,DWORD PTR [edx-0x18]
  42d85a:	xor    ecx,eax
  42d85c:	call   0x42503a
  42d861:	mov    eax,0x438bfc
  42d866:	jmp    0x429e70
  42d86b:	int3   
  42d86c:	int3   
  42d86d:	int3   
  42d86e:	int3   
  42d86f:	int3   
  42d870:	mov    eax,DWORD PTR [ebp-0x3c]
  42d873:	and    eax,0x1
  42d876:	je     0x42d889
  42d87c:	and    DWORD PTR [ebp-0x3c],0xfffffffe
  42d880:	mov    ecx,DWORD PTR [ebp-0x40]
  42d883:	jmp    DWORD PTR ds:0x430264
  42d889:	ret    
  42d88a:	mov    edx,DWORD PTR [esp+0x8]
  42d88e:	lea    eax,[edx-0x3c]
  42d891:	mov    ecx,DWORD PTR [edx-0x40]
  42d894:	xor    ecx,eax
  42d896:	call   0x42503a
  42d89b:	add    eax,0x4
  42d89e:	mov    ecx,DWORD PTR [edx-0x4]
  42d8a1:	xor    ecx,eax
  42d8a3:	call   0x42503a
  42d8a8:	mov    eax,0x438c30
  42d8ad:	jmp    0x429e70
  42d8b2:	int3   
  42d8b3:	int3   
  42d8b4:	int3   
  42d8b5:	int3   
  42d8b6:	int3   
  42d8b7:	int3   
  42d8b8:	int3   
  42d8b9:	int3   
  42d8ba:	int3   
  42d8bb:	int3   
  42d8bc:	int3   
  42d8bd:	int3   
  42d8be:	int3   
  42d8bf:	int3   
  42d8c0:	lea    ecx,[ebp-0x20]
  42d8c3:	jmp    0x408140
  42d8c8:	mov    edx,DWORD PTR [esp+0x8]
  42d8cc:	lea    eax,[edx-0x28]
  42d8cf:	mov    ecx,DWORD PTR [edx-0x2c]
  42d8d2:	xor    ecx,eax
  42d8d4:	call   0x42503a
  42d8d9:	mov    eax,0x438c5c
  42d8de:	jmp    0x429e70
  42d8e3:	int3   
  42d8e4:	int3   
  42d8e5:	int3   
  42d8e6:	int3   
  42d8e7:	int3   
  42d8e8:	int3   
  42d8e9:	int3   
  42d8ea:	int3   
  42d8eb:	int3   
  42d8ec:	int3   
  42d8ed:	int3   
  42d8ee:	int3   
  42d8ef:	int3   
  42d8f0:	lea    ecx,[ebp-0x2c]
  42d8f3:	jmp    DWORD PTR ds:0x430264
  42d8f9:	mov    edx,DWORD PTR [esp+0x8]
  42d8fd:	lea    eax,[edx-0x24]
  42d900:	mov    ecx,DWORD PTR [edx-0x28]
  42d903:	xor    ecx,eax
  42d905:	call   0x42503a
  42d90a:	add    eax,0x4
  42d90d:	mov    ecx,DWORD PTR [edx-0x4]
  42d910:	xor    ecx,eax
  42d912:	call   0x42503a
  42d917:	mov    eax,0x438c88
  42d91c:	jmp    0x429e70
  42d921:	int3   
  42d922:	int3   
  42d923:	int3   
  42d924:	int3   
  42d925:	int3   
  42d926:	int3   
  42d927:	int3   
  42d928:	int3   
  42d929:	int3   
  42d92a:	int3   
  42d92b:	int3   
  42d92c:	int3   
  42d92d:	int3   
  42d92e:	int3   
  42d92f:	int3   
  42d930:	lea    ecx,[ebp-0x2c]
  42d933:	jmp    DWORD PTR ds:0x430264
  42d939:	mov    edx,DWORD PTR [esp+0x8]
  42d93d:	lea    eax,[edx-0x24]
  42d940:	mov    ecx,DWORD PTR [edx-0x28]
  42d943:	xor    ecx,eax
  42d945:	call   0x42503a
  42d94a:	add    eax,0x0
  42d94d:	mov    ecx,DWORD PTR [edx-0x4]
  42d950:	xor    ecx,eax
  42d952:	call   0x42503a
  42d957:	mov    eax,0x438cb4
  42d95c:	jmp    0x429e70
  42d961:	int3   
  42d962:	int3   
  42d963:	int3   
  42d964:	int3   
  42d965:	int3   
  42d966:	int3   
  42d967:	int3   
  42d968:	int3   
  42d969:	int3   
  42d96a:	int3   
  42d96b:	int3   
  42d96c:	int3   
  42d96d:	int3   
  42d96e:	int3   
  42d96f:	int3   
  42d970:	lea    ecx,[ebp-0x2c]
  42d973:	jmp    DWORD PTR ds:0x430264
  42d979:	mov    edx,DWORD PTR [esp+0x8]
  42d97d:	lea    eax,[edx-0x30]
  42d980:	mov    ecx,DWORD PTR [edx-0x34]
  42d983:	xor    ecx,eax
  42d985:	call   0x42503a
  42d98a:	add    eax,0xc
  42d98d:	mov    ecx,DWORD PTR [edx-0x4]
  42d990:	xor    ecx,eax
  42d992:	call   0x42503a
  42d997:	mov    eax,0x438ce0
  42d99c:	jmp    0x429e70
  42d9a1:	int3   
  42d9a2:	int3   
  42d9a3:	int3   
  42d9a4:	int3   
  42d9a5:	int3   
  42d9a6:	int3   
  42d9a7:	int3   
  42d9a8:	int3   
  42d9a9:	int3   
  42d9aa:	int3   
  42d9ab:	int3   
  42d9ac:	int3   
  42d9ad:	int3   
  42d9ae:	int3   
  42d9af:	int3   
  42d9b0:	lea    ecx,[ebp-0x24]
  42d9b3:	jmp    0x40cef0
  42d9b8:	lea    ecx,[ebp-0x2c]
  42d9bb:	jmp    0x40cef0
  42d9c0:	mov    edx,DWORD PTR [esp+0x8]
  42d9c4:	lea    eax,[edx+0xc]
  42d9c7:	mov    ecx,DWORD PTR [edx-0x30]
  42d9ca:	xor    ecx,eax
  42d9cc:	call   0x42503a
  42d9d1:	mov    eax,0x438d7c
  42d9d6:	jmp    0x429e70
  42d9db:	int3   
  42d9dc:	int3   
  42d9dd:	int3   
  42d9de:	int3   
  42d9df:	int3   
  42d9e0:	lea    ecx,[ebp-0x2c]
  42d9e3:	jmp    DWORD PTR ds:0x430264
  42d9e9:	lea    ecx,[ebp-0x58]
  42d9ec:	jmp    DWORD PTR ds:0x43025c
  42d9f2:	lea    ecx,[ebp-0x60]
  42d9f5:	jmp    0x404680
  42d9fa:	mov    edx,DWORD PTR [esp+0x8]
  42d9fe:	lea    eax,[edx-0x6c]
  42da01:	mov    ecx,DWORD PTR [edx-0x70]
  42da04:	xor    ecx,eax
  42da06:	call   0x42503a
  42da0b:	add    eax,0x10
  42da0e:	mov    ecx,DWORD PTR [edx-0x4]
  42da11:	xor    ecx,eax
  42da13:	call   0x42503a
  42da18:	mov    eax,0x438db8
  42da1d:	jmp    0x429e70
  42da22:	int3   
  42da23:	int3   
  42da24:	int3   
  42da25:	int3   
  42da26:	int3   
  42da27:	int3   
  42da28:	int3   
  42da29:	int3   
  42da2a:	int3   
  42da2b:	int3   
  42da2c:	int3   
  42da2d:	int3   
  42da2e:	int3   
  42da2f:	int3   
  42da30:	lea    ecx,[ebp-0x2c]
  42da33:	jmp    DWORD PTR ds:0x430264
  42da39:	lea    ecx,[ebp-0x64]
  42da3c:	jmp    DWORD PTR ds:0x430264
  42da42:	lea    ecx,[ebp-0x48]
  42da45:	jmp    DWORD PTR ds:0x430264
  42da4b:	mov    eax,DWORD PTR [ebp-0x6c]
  42da4e:	and    eax,0x1
  42da51:	je     0x42da64
  42da57:	and    DWORD PTR [ebp-0x6c],0xfffffffe
  42da5b:	mov    ecx,DWORD PTR [ebp-0x68]
  42da5e:	jmp    DWORD PTR ds:0x430264
  42da64:	ret    
  42da65:	mov    edx,DWORD PTR [esp+0x8]
  42da69:	lea    eax,[edx-0x64]
  42da6c:	mov    ecx,DWORD PTR [edx-0x68]
  42da6f:	xor    ecx,eax
  42da71:	call   0x42503a
  42da76:	add    eax,0x4
  42da79:	mov    ecx,DWORD PTR [edx-0x4]
  42da7c:	xor    ecx,eax
  42da7e:	call   0x42503a
  42da83:	mov    eax,0x438dfc
  42da88:	jmp    0x429e70
  42da8d:	int3   
  42da8e:	int3   
  42da8f:	int3   
  42da90:	mov    eax,DWORD PTR [ebp-0x14]
  42da93:	push   eax
  42da94:	call   0x42504a
  42da99:	pop    ecx
  42da9a:	ret    
  42da9b:	mov    eax,DWORD PTR [ebp+0x4]
  42da9e:	jmp    0x411e30
  42daa3:	lea    ecx,[ebp-0x14]
  42daa6:	jmp    0x40cef0
  42daab:	mov    edx,DWORD PTR [esp+0x8]
  42daaf:	lea    eax,[edx-0x14]
  42dab2:	mov    ecx,DWORD PTR [edx-0x18]
  42dab5:	xor    ecx,eax
  42dab7:	call   0x42503a
  42dabc:	mov    eax,0x438e38
  42dac1:	jmp    0x429e70
  42dac6:	int3   
  42dac7:	int3   
  42dac8:	int3   
  42dac9:	int3   
  42daca:	int3   
  42dacb:	int3   
  42dacc:	int3   
  42dacd:	int3   
  42dace:	int3   
  42dacf:	int3   
  42dad0:	lea    ecx,[ebp-0x1c]
  42dad3:	jmp    0x40cef0
  42dad8:	mov    eax,DWORD PTR [ebp-0x20]
  42dadb:	and    eax,0x1
  42dade:	je     0x42daf0
  42dae4:	and    DWORD PTR [ebp-0x20],0xfffffffe
  42dae8:	lea    ecx,[ebp-0x1c]
  42daeb:	jmp    0x40cef0
  42daf0:	ret    
  42daf1:	mov    edx,DWORD PTR [esp+0x8]
  42daf5:	lea    eax,[edx-0x24]
  42daf8:	mov    ecx,DWORD PTR [edx-0x28]
  42dafb:	xor    ecx,eax
  42dafd:	call   0x42503a
  42db02:	mov    eax,0x438e74
  42db07:	jmp    0x429e70
  42db0c:	int3   
  42db0d:	int3   
  42db0e:	int3   
  42db0f:	int3   
  42db10:	lea    ecx,[ebp-0x2c]
  42db13:	jmp    DWORD PTR ds:0x43025c
  42db19:	lea    ecx,[ebp-0x48]
  42db1c:	jmp    DWORD PTR ds:0x43025c
  42db22:	lea    ecx,[ebp-0x48]
  42db25:	jmp    DWORD PTR ds:0x43025c
  42db2b:	lea    ecx,[ebp-0x48]
  42db2e:	jmp    DWORD PTR ds:0x43025c
  42db34:	lea    ecx,[ebp-0x48]
  42db37:	jmp    DWORD PTR ds:0x43025c
  42db3d:	lea    ecx,[ebp-0x48]
  42db40:	jmp    DWORD PTR ds:0x43025c
  42db46:	lea    ecx,[ebp-0x48]
  42db49:	jmp    DWORD PTR ds:0x43025c
  42db4f:	lea    ecx,[ebp-0x48]
  42db52:	jmp    DWORD PTR ds:0x430264
  42db58:	lea    ecx,[ebp-0x48]
  42db5b:	jmp    DWORD PTR ds:0x430264
  42db61:	mov    edx,DWORD PTR [esp+0x8]
  42db65:	lea    eax,[edx-0x54]
  42db68:	mov    ecx,DWORD PTR [edx-0x58]
  42db6b:	xor    ecx,eax
  42db6d:	call   0x42503a
  42db72:	add    eax,0x10
  42db75:	mov    ecx,DWORD PTR [edx-0x4]
  42db78:	xor    ecx,eax
  42db7a:	call   0x42503a
  42db7f:	mov    eax,0x438ee0
  42db84:	jmp    0x429e70
  42db89:	int3   
  42db8a:	int3   
  42db8b:	int3   
  42db8c:	int3   
  42db8d:	int3   
  42db8e:	int3   
  42db8f:	int3   
  42db90:	lea    ecx,[ebp-0x2c]
  42db93:	jmp    DWORD PTR ds:0x43025c
  42db99:	lea    ecx,[ebp-0x48]
  42db9c:	jmp    DWORD PTR ds:0x43025c
  42dba2:	lea    ecx,[ebp-0x48]
  42dba5:	jmp    DWORD PTR ds:0x43025c
  42dbab:	lea    ecx,[ebp-0x48]
  42dbae:	jmp    DWORD PTR ds:0x43025c
  42dbb4:	lea    ecx,[ebp-0x48]
  42dbb7:	jmp    DWORD PTR ds:0x43025c
  42dbbd:	mov    edx,DWORD PTR [esp+0x8]
  42dbc1:	lea    eax,[edx-0x4c]
  42dbc4:	mov    ecx,DWORD PTR [edx-0x50]
  42dbc7:	xor    ecx,eax
  42dbc9:	call   0x42503a
  42dbce:	add    eax,0x10
  42dbd1:	mov    ecx,DWORD PTR [edx-0x4]
  42dbd4:	xor    ecx,eax
  42dbd6:	call   0x42503a
  42dbdb:	mov    eax,0x438f2c
  42dbe0:	jmp    0x429e70
  42dbe5:	int3   
  42dbe6:	int3   
  42dbe7:	int3   
  42dbe8:	int3   
  42dbe9:	int3   
  42dbea:	int3   
  42dbeb:	int3   
  42dbec:	int3   
  42dbed:	int3   
  42dbee:	int3   
  42dbef:	int3   
  42dbf0:	lea    ecx,[ebp-0x84]
  42dbf6:	jmp    DWORD PTR ds:0x430264
  42dbfc:	lea    ecx,[ebp-0xe0]
  42dc02:	jmp    DWORD PTR ds:0x430264
  42dc08:	lea    ecx,[ebp-0x30]
  42dc0b:	jmp    DWORD PTR ds:0x430264
  42dc11:	lea    ecx,[ebp-0xfc]
  42dc17:	jmp    DWORD PTR ds:0x430264
  42dc1d:	lea    ecx,[ebp-0x4c]
  42dc20:	jmp    DWORD PTR ds:0x430264
  42dc26:	lea    esi,[ebp-0xc4]
  42dc2c:	jmp    0x421a20
  42dc31:	lea    esi,[ebp-0xc4]
  42dc37:	jmp    0x421a20
  42dc3c:	lea    eax,[ebp-0xc4]
  42dc42:	push   eax
  42dc43:	call   0x40b540
  42dc48:	ret    
  42dc49:	lea    ecx,[ebp-0xa0]
  42dc4f:	jmp    DWORD PTR ds:0x43025c
  42dc55:	lea    ecx,[ebp-0x68]
  42dc58:	jmp    DWORD PTR ds:0x43025c
  42dc5e:	lea    ecx,[ebp-0xa0]
  42dc64:	jmp    DWORD PTR ds:0x43025c
  42dc6a:	lea    esi,[ebp-0x11c]
  42dc70:	jmp    0x421a20
  42dc75:	mov    edx,DWORD PTR [esp+0x8]
  42dc79:	lea    eax,[edx-0x130]
  42dc7f:	mov    ecx,DWORD PTR [edx-0x134]
  42dc85:	xor    ecx,eax
  42dc87:	call   0x42503a
  42dc8c:	add    eax,0xc
  42dc8f:	mov    ecx,DWORD PTR [edx-0x8]
  42dc92:	xor    ecx,eax
  42dc94:	call   0x42503a
  42dc99:	mov    eax,0x438fc0
  42dc9e:	jmp    0x429e70
  42dca3:	int3   
  42dca4:	int3   
  42dca5:	int3   
  42dca6:	int3   
  42dca7:	int3   
  42dca8:	int3   
  42dca9:	int3   
  42dcaa:	int3   
  42dcab:	int3   
  42dcac:	int3   
  42dcad:	int3   
  42dcae:	int3   
  42dcaf:	int3   
  42dcb0:	lea    esi,[ebp-0x58]
  42dcb3:	jmp    0x40a320
  42dcb8:	mov    edx,DWORD PTR [esp+0x8]
  42dcbc:	lea    eax,[edx-0x54]
  42dcbf:	mov    ecx,DWORD PTR [edx-0x58]
  42dcc2:	xor    ecx,eax
  42dcc4:	call   0x42503a
  42dcc9:	mov    eax,0x438fec
  42dcce:	jmp    0x429e70
  42dcd3:	int3   
  42dcd4:	int3   
  42dcd5:	int3   
  42dcd6:	int3   
  42dcd7:	int3   
  42dcd8:	int3   
  42dcd9:	int3   
  42dcda:	int3   
  42dcdb:	int3   
  42dcdc:	int3   
  42dcdd:	int3   
  42dcde:	int3   
  42dcdf:	int3   
  42dce0:	lea    esi,[ebp-0x8c]
  42dce6:	jmp    0x409d70
  42dceb:	mov    edx,DWORD PTR [esp+0x8]
  42dcef:	lea    eax,[edx-0x88]
  42dcf5:	mov    ecx,DWORD PTR [edx-0x8c]
  42dcfb:	xor    ecx,eax
  42dcfd:	call   0x42503a
  42dd02:	mov    eax,0x439018
  42dd07:	jmp    0x429e70
  42dd0c:	int3   
  42dd0d:	int3   
  42dd0e:	int3   
  42dd0f:	int3   
  42dd10:	lea    esi,[ebp-0x8c]
  42dd16:	jmp    0x409820
  42dd1b:	mov    edx,DWORD PTR [esp+0x8]
  42dd1f:	lea    eax,[edx-0x88]
  42dd25:	mov    ecx,DWORD PTR [edx-0x8c]
  42dd2b:	xor    ecx,eax
  42dd2d:	call   0x42503a
  42dd32:	mov    eax,0x439044
  42dd37:	jmp    0x429e70
  42dd3c:	int3   
  42dd3d:	int3   
  42dd3e:	int3   
  42dd3f:	int3   
  42dd40:	lea    esi,[ebp-0x8c]
  42dd46:	jmp    0x4092a0
  42dd4b:	mov    edx,DWORD PTR [esp+0x8]
  42dd4f:	lea    eax,[edx-0x88]
  42dd55:	mov    ecx,DWORD PTR [edx-0x8c]
  42dd5b:	xor    ecx,eax
  42dd5d:	call   0x42503a
  42dd62:	mov    eax,0x439070
  42dd67:	jmp    0x429e70
  42dd6c:	int3   
  42dd6d:	int3   
  42dd6e:	int3   
  42dd6f:	int3   
  42dd70:	lea    ecx,[ebp-0x54]
  42dd73:	jmp    DWORD PTR ds:0x43025c
  42dd79:	lea    esi,[ebp-0x38]
  42dd7c:	jmp    0x40a180
  42dd81:	mov    edx,DWORD PTR [esp+0x8]
  42dd85:	lea    eax,[edx-0x58]
  42dd88:	mov    ecx,DWORD PTR [edx-0x5c]
  42dd8b:	xor    ecx,eax
  42dd8d:	call   0x42503a
  42dd92:	mov    eax,0x4390a4
  42dd97:	jmp    0x429e70
  42dd9c:	int3   
  42dd9d:	int3   
  42dd9e:	int3   
  42dd9f:	int3   
  42dda0:	lea    esi,[ebp-0x8c]
  42dda6:	jmp    0x408400
  42ddab:	mov    edx,DWORD PTR [esp+0x8]
  42ddaf:	lea    eax,[edx-0x88]
  42ddb5:	mov    ecx,DWORD PTR [edx-0x8c]
  42ddbb:	xor    ecx,eax
  42ddbd:	call   0x42503a
  42ddc2:	mov    eax,0x4390d0
  42ddc7:	jmp    0x429e70
  42ddcc:	int3   
  42ddcd:	int3   
  42ddce:	int3   
  42ddcf:	int3   
  42ddd0:	lea    ecx,[ebp-0x7c]
  42ddd3:	jmp    DWORD PTR ds:0x430264
  42ddd9:	lea    ecx,[ebp-0x44]
  42dddc:	jmp    DWORD PTR ds:0x430264
  42dde2:	lea    ecx,[ebp-0x60]
  42dde5:	jmp    DWORD PTR ds:0x430264
  42ddeb:	lea    ecx,[ebp-0x7c]
  42ddee:	jmp    DWORD PTR ds:0x430264
  42ddf4:	lea    ecx,[ebp-0x44]
  42ddf7:	jmp    DWORD PTR ds:0x430264
  42ddfd:	lea    ecx,[ebp-0x28]
  42de00:	jmp    DWORD PTR ds:0x430264
  42de06:	mov    edx,DWORD PTR [esp+0x8]
  42de0a:	lea    eax,[edx-0x84]
  42de10:	mov    ecx,DWORD PTR [edx-0x88]
  42de16:	xor    ecx,eax
  42de18:	call   0x42503a
  42de1d:	mov    eax,0x439124
  42de22:	jmp    0x429e70
  42de27:	int3   
  42de28:	int3   
  42de29:	int3   
  42de2a:	int3   
  42de2b:	int3   
  42de2c:	int3   
  42de2d:	int3   
  42de2e:	int3   
  42de2f:	int3   
  42de30:	lea    ecx,[ebp-0x30]
  42de33:	jmp    DWORD PTR ds:0x43025c
  42de39:	lea    ecx,[ebp-0x4c]
  42de3c:	jmp    DWORD PTR ds:0x43025c
  42de42:	lea    ecx,[ebp-0x4c]
  42de45:	jmp    DWORD PTR ds:0x43025c
  42de4b:	lea    ecx,[ebp-0x58]
  42de4e:	jmp    0x404680
  42de53:	mov    edx,DWORD PTR [esp+0x8]
  42de57:	lea    eax,[edx-0x5c]
  42de5a:	mov    ecx,DWORD PTR [edx-0x60]
  42de5d:	xor    ecx,eax
  42de5f:	call   0x42503a
  42de64:	add    eax,0xc
  42de67:	mov    ecx,DWORD PTR [edx-0x8]
  42de6a:	xor    ecx,eax
  42de6c:	call   0x42503a
  42de71:	mov    eax,0x439168
  42de76:	jmp    0x429e70
  42de7b:	int3   
  42de7c:	int3   
  42de7d:	int3   
  42de7e:	int3   
  42de7f:	int3   
  42de80:	lea    esi,[ebp-0x58]
  42de83:	jmp    0x402d70
  42de88:	mov    edx,DWORD PTR [esp+0x8]
  42de8c:	lea    eax,[edx-0x54]
  42de8f:	mov    ecx,DWORD PTR [edx-0x58]
  42de92:	xor    ecx,eax
  42de94:	call   0x42503a
  42de99:	mov    eax,0x4391b4
  42de9e:	jmp    0x429e70
  42dea3:	int3   
  42dea4:	int3   
  42dea5:	int3   
  42dea6:	int3   
  42dea7:	int3   
  42dea8:	int3   
  42dea9:	int3   
  42deaa:	int3   
  42deab:	int3   
  42deac:	int3   
  42dead:	int3   
  42deae:	int3   
  42deaf:	int3   
  42deb0:	lea    ecx,[ebp-0x2c]
  42deb3:	jmp    DWORD PTR ds:0x430264
  42deb9:	lea    ecx,[ebp-0x48]
  42debc:	jmp    DWORD PTR ds:0x430264
  42dec2:	mov    edx,DWORD PTR [esp+0x8]
  42dec6:	lea    eax,[edx-0x44]
  42dec9:	mov    ecx,DWORD PTR [edx-0x48]
  42decc:	xor    ecx,eax
  42dece:	call   0x42503a
  42ded3:	add    eax,0x4
  42ded6:	mov    ecx,DWORD PTR [edx-0x4]
  42ded9:	xor    ecx,eax
  42dedb:	call   0x42503a
  42dee0:	mov    eax,0x4391e8
  42dee5:	jmp    0x429e70
  42deea:	int3   
  42deeb:	int3   
  42deec:	int3   
  42deed:	int3   
  42deee:	int3   
  42deef:	int3   
  42def0:	mov    eax,DWORD PTR [ebp-0x10]
  42def3:	push   eax
  42def4:	call   0x42504a
  42def9:	pop    ecx
  42defa:	ret    
  42defb:	mov    edx,DWORD PTR [esp+0x8]
  42deff:	lea    eax,[edx-0xc]
  42df02:	mov    ecx,DWORD PTR [edx-0x10]
  42df05:	xor    ecx,eax
  42df07:	call   0x42503a
  42df0c:	mov    eax,0x439214
  42df11:	jmp    0x429e70
  42df16:	int3   
  42df17:	int3   
  42df18:	int3   
  42df19:	int3   
  42df1a:	int3   
  42df1b:	int3   
  42df1c:	int3   
  42df1d:	int3   
  42df1e:	int3   
  42df1f:	int3   
  42df20:	lea    eax,[ebp+0x8]
  42df23:	jmp    0x421c70
  42df28:	mov    edx,DWORD PTR [esp+0x8]
  42df2c:	lea    eax,[edx-0x4]
  42df2f:	mov    ecx,DWORD PTR [edx-0x8]
  42df32:	xor    ecx,eax
  42df34:	call   0x42503a
  42df39:	mov    eax,0x439240
  42df3e:	jmp    0x429e70
  42df43:	int3   
  42df44:	int3   
  42df45:	int3   
  42df46:	int3   
  42df47:	int3   
  42df48:	int3   
  42df49:	int3   
  42df4a:	int3   
  42df4b:	int3   
  42df4c:	int3   
  42df4d:	int3   
  42df4e:	int3   
  42df4f:	int3   
  42df50:	lea    eax,[ebp+0x8]
  42df53:	jmp    0x421c70
  42df58:	mov    edx,DWORD PTR [esp+0x8]
  42df5c:	lea    eax,[edx-0xc]
  42df5f:	mov    ecx,DWORD PTR [edx-0x10]
  42df62:	xor    ecx,eax
  42df64:	call   0x42503a
  42df69:	mov    eax,0x43926c
  42df6e:	jmp    0x429e70
  42df73:	int3   
  42df74:	int3   
  42df75:	int3   
  42df76:	int3   
  42df77:	int3   
  42df78:	int3   
  42df79:	int3   
  42df7a:	int3   
  42df7b:	int3   
  42df7c:	int3   
  42df7d:	int3   
  42df7e:	int3   
  42df7f:	int3   
  42df80:	lea    ecx,[ebp-0x70]
  42df83:	jmp    0x404680
  42df88:	lea    ecx,[ebp-0x4c]
  42df8b:	jmp    DWORD PTR ds:0x430264
  42df91:	lea    eax,[ebp-0x30]
  42df94:	push   eax
  42df95:	call   0x40b540
  42df9a:	ret    
  42df9b:	mov    edx,DWORD PTR [esp+0x8]
  42df9f:	lea    eax,[edx-0x6c]
  42dfa2:	mov    ecx,DWORD PTR [edx-0x70]
  42dfa5:	xor    ecx,eax
  42dfa7:	call   0x42503a
  42dfac:	add    eax,0x8
  42dfaf:	mov    ecx,DWORD PTR [edx-0x4]
  42dfb2:	xor    ecx,eax
  42dfb4:	call   0x42503a
  42dfb9:	mov    eax,0x4392a8
  42dfbe:	jmp    0x429e70
  42dfc3:	int3   
  42dfc4:	int3   
  42dfc5:	int3   
  42dfc6:	int3   
  42dfc7:	int3   
  42dfc8:	int3   
  42dfc9:	int3   
  42dfca:	int3   
  42dfcb:	int3   
  42dfcc:	int3   
  42dfcd:	int3   
  42dfce:	int3   
  42dfcf:	int3   
  42dfd0:	lea    esi,[ebp+0x54]
  42dfd3:	jmp    0x421a20
  42dfd8:	lea    esi,[ebp+0x14]
  42dfdb:	jmp    0x421a20
  42dfe0:	lea    ecx,[ebp-0x28]
  42dfe3:	jmp    DWORD PTR ds:0x43025c
  42dfe9:	mov    edx,DWORD PTR [esp+0x8]
  42dfed:	lea    eax,[edx-0x44]
  42dff0:	mov    ecx,DWORD PTR [edx-0x48]
  42dff3:	xor    ecx,eax
  42dff5:	call   0x42503a
  42dffa:	mov    eax,0x4392e4
  42dfff:	jmp    0x429e70
  42e004:	int3   
  42e005:	int3   
  42e006:	int3   
  42e007:	int3   
  42e008:	int3   
  42e009:	int3   
  42e00a:	int3   
  42e00b:	int3   
  42e00c:	int3   
  42e00d:	int3   
  42e00e:	int3   
  42e00f:	int3   
  42e010:	lea    esi,[ebp+0x50]
  42e013:	jmp    0x421a20
  42e018:	lea    esi,[ebp+0x10]
  42e01b:	jmp    0x421a20
  42e020:	mov    esi,DWORD PTR [ebp-0x14]
  42e023:	jmp    0x421a20
  42e028:	mov    edx,DWORD PTR [esp+0x8]
  42e02c:	lea    eax,[edx-0x10]
  42e02f:	mov    ecx,DWORD PTR [edx-0x14]
  42e032:	xor    ecx,eax
  42e034:	call   0x42503a
  42e039:	mov    eax,0x439320
  42e03e:	jmp    0x429e70
  42e043:	int3   
  42e044:	int3   
  42e045:	int3   
  42e046:	int3   
  42e047:	int3   
  42e048:	int3   
  42e049:	int3   
  42e04a:	int3   
  42e04b:	int3   
  42e04c:	int3   
  42e04d:	int3   
  42e04e:	int3   
  42e04f:	int3   
  42e050:	lea    esi,[ebp+0x50]
  42e053:	jmp    0x421a20
  42e058:	lea    esi,[ebp+0x10]
  42e05b:	jmp    0x421a20
  42e060:	mov    esi,DWORD PTR [ebp-0x14]
  42e063:	jmp    0x421a20
  42e068:	mov    edx,DWORD PTR [esp+0x8]
  42e06c:	lea    eax,[edx+0xc]
  42e06f:	mov    ecx,DWORD PTR [edx-0x24]
  42e072:	xor    ecx,eax
  42e074:	call   0x42503a
  42e079:	mov    eax,0x439390
  42e07e:	jmp    0x429e70
  42e083:	int3   
  42e084:	int3   
  42e085:	int3   
  42e086:	int3   
  42e087:	int3   
  42e088:	int3   
  42e089:	int3   
  42e08a:	int3   
  42e08b:	int3   
  42e08c:	int3   
  42e08d:	int3   
  42e08e:	int3   
  42e08f:	int3   
  42e090:	lea    esi,[ebp+0x48]
  42e093:	jmp    0x421a20
  42e098:	lea    esi,[ebp+0x8]
  42e09b:	jmp    0x421a20
  42e0a0:	mov    eax,DWORD PTR [ebp+0x4]
  42e0a3:	jmp    0x413580
  42e0a8:	mov    esi,DWORD PTR [ebp-0x14]
  42e0ab:	jmp    0x421a20
  42e0b0:	mov    edx,DWORD PTR [esp+0x8]
  42e0b4:	lea    eax,[edx-0x18]
  42e0b7:	mov    ecx,DWORD PTR [edx-0x1c]
  42e0ba:	xor    ecx,eax
  42e0bc:	call   0x42503a
  42e0c1:	mov    eax,0x4393d4
  42e0c6:	jmp    0x429e70
  42e0cb:	int3   
  42e0cc:	int3   
  42e0cd:	int3   
  42e0ce:	int3   
  42e0cf:	int3   
  42e0d0:	lea    eax,[ebp+0xc]
  42e0d3:	jmp    0x4127b0
  42e0d8:	lea    esi,[ebp-0x48]
  42e0db:	jmp    0x421a20
  42e0e0:	lea    esi,[ebp-0x88]
  42e0e6:	jmp    0x421a20
  42e0eb:	lea    esi,[ebp-0xc8]
  42e0f1:	jmp    0x421a20
  42e0f6:	mov    esi,DWORD PTR [ebp-0xe8]
  42e0fc:	jmp    0x421a20
  42e101:	lea    eax,[ebp-0xe0]
  42e107:	push   eax
  42e108:	call   0x4123b0
  42e10d:	ret    
  42e10e:	lea    eax,[ebp-0xe0]
  42e114:	jmp    0x413580
  42e119:	mov    edx,DWORD PTR [esp+0x8]
  42e11d:	lea    eax,[edx-0xec]
  42e123:	mov    ecx,DWORD PTR [edx-0xf0]
  42e129:	xor    ecx,eax
  42e12b:	call   0x42503a
  42e130:	mov    eax,0x439438
  42e135:	jmp    0x429e70
  42e13a:	int3   
  42e13b:	int3   
  42e13c:	int3   
  42e13d:	int3   
  42e13e:	int3   
  42e13f:	int3   
  42e140:	lea    ecx,[ebp-0x74]
  42e143:	jmp    DWORD PTR ds:0x430264
  42e149:	lea    ecx,[ebp-0x58]
  42e14c:	jmp    DWORD PTR ds:0x430264
  42e152:	lea    eax,[ebp-0x78]
  42e155:	push   eax
  42e156:	call   0x415b30
  42e15b:	ret    
  42e15c:	lea    ecx,[ebp-0x74]
  42e15f:	jmp    DWORD PTR ds:0x430264
  42e165:	lea    ecx,[ebp-0x58]
  42e168:	jmp    DWORD PTR ds:0x430264
  42e16e:	mov    edx,DWORD PTR [esp+0x8]
  42e172:	lea    eax,[edx-0x84]
  42e178:	mov    ecx,DWORD PTR [edx-0x88]
  42e17e:	xor    ecx,eax
  42e180:	call   0x42503a
  42e185:	add    eax,0xc
  42e188:	mov    ecx,DWORD PTR [edx-0x8]
  42e18b:	xor    ecx,eax
  42e18d:	call   0x42503a
  42e192:	mov    eax,0x439484
  42e197:	jmp    0x429e70
  42e19c:	int3   
  42e19d:	int3   
  42e19e:	int3   
  42e19f:	int3   
  42e1a0:	lea    eax,[ebp+0x8]
  42e1a3:	jmp    0x4127b0
  42e1a8:	mov    edx,DWORD PTR [esp+0x8]
  42e1ac:	lea    eax,[edx-0x10]
  42e1af:	mov    ecx,DWORD PTR [edx-0x14]
  42e1b2:	xor    ecx,eax
  42e1b4:	call   0x42503a
  42e1b9:	mov    eax,0x4394b0
  42e1be:	jmp    0x429e70
  42e1c3:	int3   
  42e1c4:	int3   
  42e1c5:	int3   
  42e1c6:	int3   
  42e1c7:	int3   
  42e1c8:	int3   
  42e1c9:	int3   
  42e1ca:	int3   
  42e1cb:	int3   
  42e1cc:	int3   
  42e1cd:	int3   
  42e1ce:	int3   
  42e1cf:	int3   
  42e1d0:	lea    ecx,[ebp-0x9c]
  42e1d6:	jmp    DWORD PTR ds:0x430264
  42e1dc:	lea    ecx,[ebp-0x2c]
  42e1df:	jmp    DWORD PTR ds:0x430264
  42e1e5:	lea    ecx,[ebp-0x80]
  42e1e8:	jmp    DWORD PTR ds:0x430264
  42e1ee:	lea    ecx,[ebp-0x64]
  42e1f1:	jmp    DWORD PTR ds:0x430264
  42e1f7:	lea    ecx,[ebp-0x48]
  42e1fa:	jmp    DWORD PTR ds:0x430264
  42e200:	mov    edx,DWORD PTR [esp+0x8]
  42e204:	lea    eax,[edx-0xa0]
  42e20a:	mov    ecx,DWORD PTR [edx-0xa4]
  42e210:	xor    ecx,eax
  42e212:	call   0x42503a
  42e217:	add    eax,0x10
  42e21a:	mov    ecx,DWORD PTR [edx-0x4]
  42e21d:	xor    ecx,eax
  42e21f:	call   0x42503a
  42e224:	mov    eax,0x439518
  42e229:	jmp    0x429e70
  42e22e:	int3   
  42e22f:	int3   
  42e230:	lea    ecx,[ebp+0x4]
  42e233:	jmp    0x40cd30
  42e238:	lea    ecx,[ebp-0x14c]
  42e23e:	jmp    0x40cef0
  42e243:	lea    ecx,[ebp-0x128]
  42e249:	jmp    DWORD PTR ds:0x43025c
  42e24f:	lea    ecx,[ebp-0x144]
  42e255:	jmp    0x40cd30
  42e25a:	lea    ecx,[ebp-0x15c]
  42e260:	jmp    0x40cef0
  42e265:	lea    ecx,[ebp-0x48]
  42e268:	jmp    DWORD PTR ds:0x430264
  42e26e:	lea    ecx,[ebp-0x48]
  42e271:	jmp    0x40cd30
  42e276:	lea    ecx,[ebp-0x64]
  42e279:	jmp    DWORD PTR ds:0x430264
  42e27f:	lea    ecx,[ebp-0xd4]
  42e285:	jmp    DWORD PTR ds:0x430264
  42e28b:	lea    ecx,[ebp-0x10c]
  42e291:	jmp    DWORD PTR ds:0x430264
  42e297:	lea    ecx,[ebp-0x80]
  42e29a:	jmp    DWORD PTR ds:0x430264
  42e2a0:	lea    ecx,[ebp-0xf0]
  42e2a6:	jmp    DWORD PTR ds:0x430264
  42e2ac:	lea    ecx,[ebp-0x9c]
  42e2b2:	jmp    DWORD PTR ds:0x430264
  42e2b8:	lea    ecx,[ebp-0xb8]
  42e2be:	jmp    DWORD PTR ds:0x430264
  42e2c4:	lea    ecx,[ebp-0x2c]
  42e2c7:	jmp    DWORD PTR ds:0x430264
  42e2cd:	mov    edx,DWORD PTR [esp+0x8]
  42e2d1:	lea    eax,[edx-0x160]
  42e2d7:	mov    ecx,DWORD PTR [edx-0x164]
  42e2dd:	xor    ecx,eax
  42e2df:	call   0x42503a
  42e2e4:	add    eax,0x10
  42e2e7:	mov    ecx,DWORD PTR [edx-0x4]
  42e2ea:	xor    ecx,eax
  42e2ec:	call   0x42503a
  42e2f1:	mov    eax,0x4395f0
  42e2f6:	jmp    0x429e70
  42e2fb:	int3   
  42e2fc:	int3   
  42e2fd:	int3   
  42e2fe:	int3   
  42e2ff:	int3   
  42e300:	lea    eax,[ebp-0x28]
  42e303:	push   eax
  42e304:	call   0x4123b0
  42e309:	ret    
  42e30a:	lea    eax,[ebp-0x28]
  42e30d:	jmp    0x413580
  42e312:	mov    edx,DWORD PTR [esp+0x8]
  42e316:	lea    eax,[edx-0x34]
  42e319:	mov    ecx,DWORD PTR [edx-0x38]
  42e31c:	xor    ecx,eax
  42e31e:	call   0x42503a
  42e323:	mov    eax,0x439624
  42e328:	jmp    0x429e70
  42e32d:	int3   
  42e32e:	int3   
  42e32f:	int3   
  42e330:	lea    ecx,[ebp-0x2c]
  42e333:	jmp    DWORD PTR ds:0x43025c
  42e339:	lea    ecx,[ebp-0x48]
  42e33c:	jmp    DWORD PTR ds:0x43025c
  42e342:	lea    ecx,[ebp-0x48]
  42e345:	jmp    DWORD PTR ds:0x43025c
  42e34b:	mov    edx,DWORD PTR [esp+0x8]
  42e34f:	lea    eax,[edx-0x44]
  42e352:	mov    ecx,DWORD PTR [edx-0x48]
  42e355:	xor    ecx,eax
  42e357:	call   0x42503a
  42e35c:	add    eax,0x8
  42e35f:	mov    ecx,DWORD PTR [edx-0x4]
  42e362:	xor    ecx,eax
  42e364:	call   0x42503a
  42e369:	mov    eax,0x439660
  42e36e:	jmp    0x429e70
  42e373:	int3   
  42e374:	int3   
  42e375:	int3   
  42e376:	int3   
  42e377:	int3   
  42e378:	int3   
  42e379:	int3   
  42e37a:	int3   
  42e37b:	int3   
  42e37c:	int3   
  42e37d:	int3   
  42e37e:	int3   
  42e37f:	int3   
  42e380:	lea    esi,[ebp-0x34]
  42e383:	jmp    0x40a180
  42e388:	mov    edx,DWORD PTR [esp+0x8]
  42e38c:	lea    eax,[edx-0x2c]
  42e38f:	mov    ecx,DWORD PTR [edx-0x30]
  42e392:	xor    ecx,eax
  42e394:	call   0x42503a
  42e399:	mov    eax,0x43968c
  42e39e:	jmp    0x429e70
  42e3a3:	int3   
  42e3a4:	int3   
  42e3a5:	int3   
  42e3a6:	int3   
  42e3a7:	int3   
  42e3a8:	int3   
  42e3a9:	int3   
  42e3aa:	int3   
  42e3ab:	int3   
  42e3ac:	int3   
  42e3ad:	int3   
  42e3ae:	int3   
  42e3af:	int3   
  42e3b0:	lea    ecx,[ebp-0x54]
  42e3b3:	jmp    DWORD PTR ds:0x43025c
  42e3b9:	lea    ecx,[ebp-0x38]
  42e3bc:	jmp    0x420590
  42e3c1:	mov    edx,DWORD PTR [esp+0x8]
  42e3c5:	lea    eax,[edx-0x4c]
  42e3c8:	mov    ecx,DWORD PTR [edx-0x50]
  42e3cb:	xor    ecx,eax
  42e3cd:	call   0x42503a
  42e3d2:	mov    eax,0x4396c0
  42e3d7:	jmp    0x429e70
  42e3dc:	int3   
  42e3dd:	int3   
  42e3de:	int3   
  42e3df:	int3   
  42e3e0:	lea    ecx,[ebp-0x64]
  42e3e3:	jmp    DWORD PTR ds:0x430264
  42e3e9:	lea    ecx,[ebp-0x9c]
  42e3ef:	jmp    DWORD PTR ds:0x430264
  42e3f5:	lea    ecx,[ebp-0xb8]
  42e3fb:	jmp    DWORD PTR ds:0x430264
  42e401:	lea    ecx,[ebp-0x80]
  42e404:	jmp    DWORD PTR ds:0x430264
  42e40a:	lea    ecx,[ebp-0x2c]
  42e40d:	jmp    DWORD PTR ds:0x430264
  42e413:	lea    ecx,[ebp-0x48]
  42e416:	jmp    DWORD PTR ds:0x430264
  42e41c:	lea    ecx,[ebp-0xf0]
  42e422:	jmp    DWORD PTR ds:0x430264
  42e428:	lea    ecx,[ebp-0x1b4]
  42e42e:	jmp    DWORD PTR ds:0x43025c
  42e434:	lea    ecx,[ebp-0x17c]
  42e43a:	jmp    DWORD PTR ds:0x430264
  42e440:	lea    ecx,[ebp-0x10c]
  42e446:	jmp    DWORD PTR ds:0x430264
  42e44c:	lea    ecx,[ebp-0x128]
  42e452:	jmp    DWORD PTR ds:0x430264
  42e458:	lea    ecx,[ebp-0x144]
  42e45e:	jmp    DWORD PTR ds:0x430264
  42e464:	lea    ecx,[ebp-0x160]
  42e46a:	jmp    DWORD PTR ds:0x430264
  42e470:	lea    ecx,[ebp-0xd4]
  42e476:	jmp    DWORD PTR ds:0x430264
  42e47c:	lea    ecx,[ebp-0x198]
  42e482:	jmp    DWORD PTR ds:0x430264
  42e488:	lea    ecx,[ebp-0x1d0]
  42e48e:	jmp    DWORD PTR ds:0x43025c
  42e494:	lea    ecx,[ebp-0x1d0]
  42e49a:	jmp    DWORD PTR ds:0x43025c
  42e4a0:	mov    edx,DWORD PTR [esp+0x8]
  42e4a4:	lea    eax,[edx-0x1d8]
  42e4aa:	mov    ecx,DWORD PTR [edx-0x1dc]
  42e4b0:	xor    ecx,eax
  42e4b2:	call   0x42503a
  42e4b7:	add    eax,0x10
  42e4ba:	mov    ecx,DWORD PTR [edx-0x4]
  42e4bd:	xor    ecx,eax
  42e4bf:	call   0x42503a
  42e4c4:	mov    eax,0x4397a0
  42e4c9:	jmp    0x429e70
  42e4ce:	int3   
  42e4cf:	int3   
  42e4d0:	lea    eax,[ebp+0x4]
  42e4d3:	jmp    0x421c50
  42e4d8:	mov    eax,DWORD PTR [ebp-0x10]
  42e4db:	push   eax
  42e4dc:	call   0x42504a
  42e4e1:	pop    ecx
  42e4e2:	ret    
  42e4e3:	mov    edx,DWORD PTR [esp+0x8]
  42e4e7:	lea    eax,[edx-0xc]
  42e4ea:	mov    ecx,DWORD PTR [edx-0x10]
  42e4ed:	xor    ecx,eax
  42e4ef:	call   0x42503a
  42e4f4:	mov    eax,0x4397d4
  42e4f9:	jmp    0x429e70
  42e4fe:	int3   
  42e4ff:	int3   
  42e500:	lea    eax,[ebp+0x4]
  42e503:	jmp    0x421c50
  42e508:	mov    edx,DWORD PTR [esp+0x8]
  42e50c:	lea    eax,[edx-0xc]
  42e50f:	mov    ecx,DWORD PTR [edx-0x10]
  42e512:	xor    ecx,eax
  42e514:	call   0x42503a
  42e519:	mov    eax,0x439800
  42e51e:	jmp    0x429e70
  42e523:	int3   
  42e524:	int3   
  42e525:	int3   
  42e526:	int3   
  42e527:	int3   
  42e528:	int3   
  42e529:	int3   
  42e52a:	int3   
  42e52b:	int3   
  42e52c:	int3   
  42e52d:	int3   
  42e52e:	int3   
  42e52f:	int3   
  42e530:	mov    eax,DWORD PTR [ebp+0x4]
  42e533:	push   eax
  42e534:	call   0x42504a
  42e539:	pop    ecx
  42e53a:	ret    
  42e53b:	mov    edx,DWORD PTR [esp+0x8]
  42e53f:	lea    eax,[edx-0xc]
  42e542:	mov    ecx,DWORD PTR [edx-0x10]
  42e545:	xor    ecx,eax
  42e547:	call   0x42503a
  42e54c:	mov    eax,0x43982c
  42e551:	jmp    0x429e70
  42e556:	int3   
  42e557:	int3   
  42e558:	int3   
  42e559:	int3   
  42e55a:	int3   
  42e55b:	int3   
  42e55c:	int3   
  42e55d:	int3   
  42e55e:	int3   
  42e55f:	int3   
  42e560:	lea    eax,[ebp+0x4]
  42e563:	jmp    0x421c50
  42e568:	mov    edx,DWORD PTR [esp+0x8]
  42e56c:	lea    eax,[edx-0x8]
  42e56f:	mov    ecx,DWORD PTR [edx-0xc]
  42e572:	xor    ecx,eax
  42e574:	call   0x42503a
  42e579:	mov    eax,0x439858
  42e57e:	jmp    0x429e70
  42e583:	int3   
  42e584:	int3   
  42e585:	int3   
  42e586:	int3   
  42e587:	int3   
  42e588:	int3   
  42e589:	int3   
  42e58a:	int3   
  42e58b:	int3   
  42e58c:	int3   
  42e58d:	int3   
  42e58e:	int3   
  42e58f:	int3   
  42e590:	lea    eax,[ebp+0x8]
  42e593:	push   eax
  42e594:	call   0x420ef0
  42e599:	ret    
  42e59a:	lea    eax,[ebp-0x4c]
  42e59d:	jmp    0x421c60
  42e5a2:	mov    eax,DWORD PTR [ebp-0x54]
  42e5a5:	and    eax,0x1
  42e5a8:	je     0x42e5ba
  42e5ae:	and    DWORD PTR [ebp-0x54],0xfffffffe
  42e5b2:	mov    eax,DWORD PTR [ebp-0x50]
  42e5b5:	jmp    0x421c50
  42e5ba:	ret    
  42e5bb:	mov    edx,DWORD PTR [esp+0x8]
  42e5bf:	lea    eax,[edx-0x4c]
  42e5c2:	mov    ecx,DWORD PTR [edx-0x50]
  42e5c5:	xor    ecx,eax
  42e5c7:	call   0x42503a
  42e5cc:	mov    eax,0x439894
  42e5d1:	jmp    0x429e70
  42e5d6:	int3   
  42e5d7:	int3   
  42e5d8:	int3   
  42e5d9:	int3   
  42e5da:	int3   
  42e5db:	int3   
  42e5dc:	int3   
  42e5dd:	int3   
  42e5de:	int3   
  42e5df:	int3   
  42e5e0:	lea    ecx,[ebp-0x6c]
  42e5e3:	jmp    DWORD PTR ds:0x43025c
  42e5e9:	lea    ecx,[ebp-0xa4]
  42e5ef:	jmp    DWORD PTR ds:0x430264
  42e5f5:	lea    ecx,[ebp-0x88]
  42e5fb:	jmp    DWORD PTR ds:0x430264
  42e601:	lea    ecx,[ebp-0xc8]
  42e607:	jmp    DWORD PTR ds:0x430264
  42e60d:	lea    eax,[ebp-0x50]
  42e610:	push   eax
  42e611:	call   0x420ef0
  42e616:	ret    
  42e617:	lea    esi,[ebp-0xc8]
  42e61d:	jmp    0x421a20
  42e622:	mov    edx,DWORD PTR [esp+0x8]
  42e626:	lea    eax,[edx-0xcc]
  42e62c:	mov    ecx,DWORD PTR [edx-0xd0]
  42e632:	xor    ecx,eax
  42e634:	call   0x42503a
  42e639:	add    eax,0xc
  42e63c:	mov    ecx,DWORD PTR [edx-0x8]
  42e63f:	xor    ecx,eax
  42e641:	call   0x42503a
  42e646:	mov    eax,0x4398e8
  42e64b:	jmp    0x429e70
  42e650:	lea    ecx,[ebp-0xac]
  42e656:	jmp    DWORD PTR ds:0x43025c
  42e65c:	lea    ecx,[ebp-0x90]
  42e662:	jmp    DWORD PTR ds:0x43025c
  42e668:	lea    eax,[ebp-0x104]
  42e66e:	jmp    0x411e30
  42e673:	lea    eax,[ebp-0xfc]
  42e679:	jmp    0x411e30
  42e67e:	lea    ecx,[ebp-0x30]
  42e681:	jmp    DWORD PTR ds:0x43025c
  42e687:	lea    ecx,[ebp-0xf0]
  42e68d:	jmp    DWORD PTR ds:0x43025c
  42e693:	lea    ecx,[ebp-0xf0]
  42e699:	jmp    0x40cd30
  42e69e:	lea    ecx,[ebp-0x74]
  42e6a1:	jmp    0x40cd30
  42e6a6:	lea    ecx,[ebp-0x90]
  42e6ac:	jmp    DWORD PTR ds:0x43025c
  42e6b2:	lea    ecx,[ebp-0xac]
  42e6b8:	jmp    DWORD PTR ds:0x43025c
  42e6be:	lea    ecx,[ebp-0xd4]
  42e6c4:	jmp    DWORD PTR ds:0x43025c
  42e6ca:	mov    edx,DWORD PTR [esp+0x8]
  42e6ce:	lea    eax,[edx-0x104]
  42e6d4:	mov    ecx,DWORD PTR [edx-0x108]
  42e6da:	xor    ecx,eax
  42e6dc:	call   0x42503a
  42e6e1:	add    eax,0x8
  42e6e4:	mov    ecx,DWORD PTR [edx-0x8]
  42e6e7:	xor    ecx,eax
  42e6e9:	call   0x42503a
  42e6ee:	mov    eax,0x439968
  42e6f3:	jmp    0x429e70
  42e6f8:	int3   
  42e6f9:	int3   
  42e6fa:	int3   
  42e6fb:	int3   
  42e6fc:	int3   
  42e6fd:	int3   
  42e6fe:	int3   
  42e6ff:	int3   
  42e700:	lea    ecx,[ebp-0x48]
  42e703:	jmp    DWORD PTR ds:0x430264
  42e709:	lea    ecx,[ebp-0x2c]
  42e70c:	jmp    0x40cd30
  42e711:	mov    edx,DWORD PTR [esp+0x8]
  42e715:	lea    eax,[edx-0x4c]
  42e718:	mov    ecx,DWORD PTR [edx-0x50]
  42e71b:	xor    ecx,eax
  42e71d:	call   0x42503a
  42e722:	add    eax,0x4
  42e725:	mov    ecx,DWORD PTR [edx-0x4]
  42e728:	xor    ecx,eax
  42e72a:	call   0x42503a
  42e72f:	mov    eax,0x4399a4
  42e734:	jmp    0x429e70
  42e739:	int3   
  42e73a:	int3   
  42e73b:	int3   
  42e73c:	int3   
  42e73d:	int3   
  42e73e:	int3   
  42e73f:	int3   
  42e740:	lea    ecx,[ebp-0x2c]
  42e743:	jmp    DWORD PTR ds:0x43025c
  42e749:	lea    ecx,[ebp-0x48]
  42e74c:	jmp    DWORD PTR ds:0x43025c
  42e752:	lea    ecx,[ebp-0x48]
  42e755:	jmp    DWORD PTR ds:0x43025c
  42e75b:	lea    eax,[ebp-0x48]
  42e75e:	jmp    0x40cbd0
  42e763:	lea    eax,[ebp-0x48]
  42e766:	jmp    0x40cbd0
  42e76b:	lea    ecx,[ebp-0x48]
  42e76e:	jmp    DWORD PTR ds:0x43025c
  42e774:	lea    ecx,[ebp-0x48]
  42e777:	jmp    DWORD PTR ds:0x43025c
  42e77d:	mov    edx,DWORD PTR [esp+0x8]
  42e781:	lea    eax,[edx-0x54]
  42e784:	mov    ecx,DWORD PTR [edx-0x58]
  42e787:	xor    ecx,eax
  42e789:	call   0x42503a
  42e78e:	add    eax,0x10
  42e791:	mov    ecx,DWORD PTR [edx-0x4]
  42e794:	xor    ecx,eax
  42e796:	call   0x42503a
  42e79b:	mov    eax,0x439a00
  42e7a0:	jmp    0x429e70
  42e7a5:	int3   
  42e7a6:	int3   
  42e7a7:	int3   
  42e7a8:	int3   
  42e7a9:	int3   
  42e7aa:	int3   
  42e7ab:	int3   
  42e7ac:	int3   
  42e7ad:	int3   
  42e7ae:	int3   
  42e7af:	int3   
  42e7b0:	lea    ecx,[ebp-0x30]
  42e7b3:	jmp    0x40a4d0
  42e7b8:	lea    ecx,[ebp-0x30]
  42e7bb:	jmp    0x40a4d0
  42e7c0:	lea    ecx,[ebp-0x20]
  42e7c3:	jmp    0x40a4d0
  42e7c8:	mov    edx,DWORD PTR [esp+0x8]
  42e7cc:	lea    eax,[edx-0x2c]
  42e7cf:	mov    ecx,DWORD PTR [edx-0x30]
  42e7d2:	xor    ecx,eax
  42e7d4:	call   0x42503a
  42e7d9:	mov    eax,0x439a3c
  42e7de:	jmp    0x429e70
  42e7e3:	int3   
  42e7e4:	int3   
  42e7e5:	int3   
  42e7e6:	int3   
  42e7e7:	int3   
  42e7e8:	int3   
  42e7e9:	int3   
  42e7ea:	int3   
  42e7eb:	int3   
  42e7ec:	int3   
  42e7ed:	int3   
  42e7ee:	int3   
  42e7ef:	int3   
  42e7f0:	lea    ecx,[ebp-0x4c]
  42e7f3:	jmp    DWORD PTR ds:0x430264
  42e7f9:	lea    ecx,[ebp-0x30]
  42e7fc:	jmp    DWORD PTR ds:0x430264
  42e802:	lea    ecx,[ebp-0x54]
  42e805:	jmp    0x404680
  42e80a:	lea    ecx,[ebp-0x7c]
  42e80d:	jmp    0x40cd30
  42e812:	lea    ecx,[ebp-0x9c]
  42e818:	jmp    0x40cd30
  42e81d:	lea    esi,[ebp-0x80]
  42e820:	jmp    0x421a20
  42e825:	lea    ecx,[ebp-0x54]
  42e828:	jmp    0x404680
  42e82d:	mov    edx,DWORD PTR [esp+0x8]
  42e831:	lea    eax,[edx+0xc]
  42e834:	mov    ecx,DWORD PTR [edx-0xa4]
  42e83a:	xor    ecx,eax
  42e83c:	call   0x42503a
  42e841:	mov    ecx,DWORD PTR [edx-0x8]
  42e844:	xor    ecx,eax
  42e846:	call   0x42503a
  42e84b:	mov    eax,0x439acc
  42e850:	jmp    0x429e70
  42e855:	int3   
  42e856:	int3   
  42e857:	int3   
  42e858:	int3   
  42e859:	int3   
  42e85a:	int3   
  42e85b:	int3   
  42e85c:	int3   
  42e85d:	int3   
  42e85e:	int3   
  42e85f:	int3   
  42e860:	lea    ecx,[ebp+0x8]
  42e863:	jmp    DWORD PTR ds:0x430264
  42e869:	lea    esi,[ebp-0x30]
  42e86c:	jmp    0x421a20
  42e871:	mov    eax,DWORD PTR [ebp-0x34]
  42e874:	push   eax
  42e875:	call   0x42504a
  42e87a:	pop    ecx
  42e87b:	ret    
  42e87c:	mov    edx,DWORD PTR [esp+0x8]
  42e880:	lea    eax,[edx-0x3c]
  42e883:	mov    ecx,DWORD PTR [edx-0x40]
  42e886:	xor    ecx,eax
  42e888:	call   0x42503a
  42e88d:	mov    eax,0x439b08
  42e892:	jmp    0x429e70
  42e897:	int3   
  42e898:	int3   
  42e899:	int3   
  42e89a:	int3   
  42e89b:	int3   
  42e89c:	int3   
  42e89d:	int3   
  42e89e:	int3   
  42e89f:	int3   
  42e8a0:	lea    esi,[ebp-0x38]
  42e8a3:	jmp    0x413390
  42e8a8:	lea    ecx,[ebp-0x8c]
  42e8ae:	jmp    DWORD PTR ds:0x430264
  42e8b4:	lea    eax,[ebp-0x1013c]
  42e8ba:	push   eax
  42e8bb:	call   0x412740
  42e8c0:	ret    
  42e8c1:	lea    eax,[ebp-0x1015c]
  42e8c7:	push   eax
  42e8c8:	call   0x40d5c0
  42e8cd:	ret    
  42e8ce:	lea    ecx,[ebp-0x54]
  42e8d1:	jmp    DWORD PTR ds:0x430264
  42e8d7:	lea    ecx,[ebp-0x10118]
  42e8dd:	jmp    0x404680
  42e8e2:	lea    ecx,[ebp-0x70]
  42e8e5:	jmp    DWORD PTR ds:0x43025c
  42e8eb:	lea    eax,[ebp-0x1013c]
  42e8f1:	push   eax
  42e8f2:	call   0x412740
  42e8f7:	ret    
  42e8f8:	lea    eax,[ebp-0x1015c]
  42e8fe:	jmp    0x413580
  42e903:	mov    eax,DWORD PTR [ebp-0x10120]
  42e909:	push   eax
  42e90a:	call   0x42504a
  42e90f:	pop    ecx
  42e910:	ret    
  42e911:	lea    eax,[ebp-0x10118]
  42e917:	jmp    0x411e30
  42e91c:	lea    ecx,[ebp-0xa8]
  42e922:	jmp    DWORD PTR ds:0x43025c
  42e928:	lea    eax,[ebp-0x1010c]
  42e92e:	push   eax
  42e92f:	call   0x40fd00
  42e934:	ret    
  42e935:	lea    ecx,[ebp-0x70]
  42e938:	jmp    DWORD PTR ds:0x430264
  42e93e:	lea    ecx,[ebp-0x1018c]
  42e944:	jmp    DWORD PTR ds:0x430264
  42e94a:	lea    ecx,[ebp-0x101e0]
  42e950:	jmp    DWORD PTR ds:0x430264
  42e956:	lea    ecx,[ebp-0x101fc]
  42e95c:	jmp    DWORD PTR ds:0x430264
  42e962:	lea    ecx,[ebp-0x101c4]
  42e968:	jmp    DWORD PTR ds:0x430264
  42e96e:	lea    ecx,[ebp-0x101a8]
  42e974:	jmp    DWORD PTR ds:0x430264
  42e97a:	mov    edx,DWORD PTR [esp+0x8]
  42e97e:	lea    eax,[edx+0xc]
  42e981:	mov    ecx,DWORD PTR [edx-0x10200]
  42e987:	xor    ecx,eax
  42e989:	call   0x42503a
  42e98e:	mov    ecx,DWORD PTR [edx-0xc]
  42e991:	xor    ecx,eax
  42e993:	call   0x42503a
  42e998:	mov    eax,0x439bfc
  42e99d:	jmp    0x429e70
  42e9a2:	int3   
  42e9a3:	int3   
  42e9a4:	int3   
  42e9a5:	int3   
  42e9a6:	int3   
  42e9a7:	int3   
  42e9a8:	int3   
  42e9a9:	int3   
  42e9aa:	int3   
  42e9ab:	int3   
  42e9ac:	int3   
  42e9ad:	int3   
  42e9ae:	int3   
  42e9af:	int3   
  42e9b0:	lea    ecx,[ebp-0x64]
  42e9b3:	jmp    DWORD PTR ds:0x430264
  42e9b9:	lea    ecx,[ebp-0x48]
  42e9bc:	jmp    DWORD PTR ds:0x430264
  42e9c2:	lea    ecx,[ebp-0x9c]
  42e9c8:	jmp    DWORD PTR ds:0x43025c
  42e9ce:	lea    ecx,[ebp-0x80]
  42e9d1:	jmp    DWORD PTR ds:0x430264
  42e9d7:	lea    ecx,[ebp-0x9c]
  42e9dd:	jmp    DWORD PTR ds:0x430264
  42e9e3:	lea    ecx,[ebp-0x2c]
  42e9e6:	jmp    DWORD PTR ds:0x430264
  42e9ec:	mov    edx,DWORD PTR [esp+0x8]
  42e9f0:	lea    eax,[edx-0xa8]
  42e9f6:	mov    ecx,DWORD PTR [edx-0xac]
  42e9fc:	xor    ecx,eax
  42e9fe:	call   0x42503a
  42ea03:	add    eax,0x10
  42ea06:	mov    ecx,DWORD PTR [edx-0x4]
  42ea09:	xor    ecx,eax
  42ea0b:	call   0x42503a
  42ea10:	mov    eax,0x439c68
  42ea15:	jmp    0x429e70
  42ea1a:	int3   
  42ea1b:	int3   
  42ea1c:	int3   
  42ea1d:	int3   
  42ea1e:	int3   
  42ea1f:	int3   
  42ea20:	lea    eax,[ebp-0x250]
  42ea26:	push   eax
  42ea27:	call   0x40b540
  42ea2c:	ret    
  42ea2d:	lea    ecx,[ebp-0x344]
  42ea33:	jmp    0x404680
  42ea38:	lea    ecx,[ebp-0x2c0]
  42ea3e:	jmp    DWORD PTR ds:0x43025c
  42ea44:	lea    ecx,[ebp-0x344]
  42ea4a:	jmp    0x404680
  42ea4f:	lea    ecx,[ebp-0x2c0]
  42ea55:	jmp    DWORD PTR ds:0x43025c
  42ea5b:	lea    eax,[ebp-0x318]
  42ea61:	push   eax
  42ea62:	call   0x4132a0
  42ea67:	ret    
  42ea68:	lea    ecx,[ebp-0x288]
  42ea6e:	jmp    DWORD PTR ds:0x43025c
  42ea74:	lea    ecx,[ebp-0x2c0]
  42ea7a:	jmp    DWORD PTR ds:0x430264
  42ea80:	lea    esi,[ebp-0x300]
  42ea86:	jmp    0x421a20
  42ea8b:	lea    ecx,[ebp-0x288]
  42ea91:	jmp    DWORD PTR ds:0x430264
  42ea97:	lea    ecx,[ebp-0x2c0]
  42ea9d:	jmp    DWORD PTR ds:0x430264
  42eaa3:	lea    ecx,[ebp-0x33c]
  42eaa9:	jmp    DWORD PTR ds:0x430264
  42eaaf:	lea    ecx,[ebp-0x300]
  42eab5:	jmp    DWORD PTR ds:0x430264
  42eabb:	lea    ecx,[ebp-0x33c]
  42eac1:	jmp    DWORD PTR ds:0x430264
  42eac7:	lea    ecx,[ebp-0x368]
  42eacd:	jmp    DWORD PTR ds:0x43001c
  42ead3:	lea    ecx,[ebp-0x26c]
  42ead9:	jmp    DWORD PTR ds:0x43025c
  42eadf:	lea    eax,[ebp-0x33c]
  42eae5:	push   eax
  42eae6:	call   0x412740
  42eaeb:	ret    
  42eaec:	lea    ecx,[ebp-0x300]
  42eaf2:	jmp    DWORD PTR ds:0x430264
  42eaf8:	lea    ecx,[ebp-0x2a4]
  42eafe:	jmp    DWORD PTR ds:0x430264
  42eb04:	lea    ecx,[ebp-0x350]
  42eb0a:	jmp    0x404680
  42eb0f:	lea    ecx,[ebp-0x344]
  42eb15:	jmp    0x404680
  42eb1a:	lea    ecx,[ebp-0x26c]
  42eb20:	jmp    DWORD PTR ds:0x43025c
  42eb26:	lea    ecx,[ebp-0x350]
  42eb2c:	jmp    0x404680
  42eb31:	lea    ecx,[ebp-0x33c]
  42eb37:	jmp    DWORD PTR ds:0x43025c
  42eb3d:	lea    ecx,[ebp-0x350]
  42eb43:	jmp    0x404680
  42eb48:	lea    ecx,[ebp-0x33c]
  42eb4e:	jmp    DWORD PTR ds:0x43025c
  42eb54:	lea    ecx,[ebp-0x350]
  42eb5a:	jmp    0x404680
  42eb5f:	lea    ecx,[ebp-0x300]
  42eb65:	jmp    DWORD PTR ds:0x43025c
  42eb6b:	lea    ecx,[ebp-0x350]
  42eb71:	jmp    0x404680
  42eb76:	lea    ecx,[ebp-0x33c]
  42eb7c:	jmp    DWORD PTR ds:0x43025c
  42eb82:	mov    edx,DWORD PTR [esp+0x8]
  42eb86:	lea    eax,[edx-0x36c]
  42eb8c:	mov    ecx,DWORD PTR [edx-0x370]
  42eb92:	xor    ecx,eax
  42eb94:	call   0x42503a
  42eb99:	add    eax,0xc
  42eb9c:	mov    ecx,DWORD PTR [edx-0x8]
  42eb9f:	xor    ecx,eax
  42eba1:	call   0x42503a
  42eba6:	mov    eax,0x439d90
  42ebab:	jmp    0x429e70
  42ebb0:	lea    eax,[ebp-0x50]
  42ebb3:	push   eax
  42ebb4:	call   0x40b540
  42ebb9:	ret    
  42ebba:	lea    ecx,[ebp-0xdc]
  42ebc0:	jmp    DWORD PTR ds:0x430264
  42ebc6:	lea    ecx,[ebp-0x30]
  42ebc9:	jmp    DWORD PTR ds:0x430264
  42ebcf:	lea    ecx,[ebp-0x13c]
  42ebd5:	jmp    DWORD PTR ds:0x430264
  42ebdb:	lea    ecx,[ebp-0x114]
  42ebe1:	jmp    DWORD PTR ds:0x430264
  42ebe7:	lea    ecx,[ebp-0x13c]
  42ebed:	jmp    DWORD PTR ds:0x430264
  42ebf3:	lea    ecx,[ebp-0x88]
  42ebf9:	jmp    DWORD PTR ds:0x430264
  42ebff:	lea    ecx,[ebp-0x30]
  42ec02:	jmp    DWORD PTR ds:0x430264
  42ec08:	lea    ecx,[ebp-0xa4]
  42ec0e:	jmp    DWORD PTR ds:0x430264
  42ec14:	lea    ecx,[ebp-0xf8]
  42ec1a:	jmp    DWORD PTR ds:0x430264
  42ec20:	lea    ecx,[ebp-0xc0]
  42ec26:	jmp    DWORD PTR ds:0x430264
  42ec2c:	lea    ecx,[ebp-0x6c]
  42ec2f:	jmp    DWORD PTR ds:0x430264
  42ec35:	lea    ecx,[ebp-0xa4]
  42ec3b:	jmp    DWORD PTR ds:0x43025c
  42ec41:	mov    edx,DWORD PTR [esp+0x8]
  42ec45:	lea    eax,[edx-0x14c]
  42ec4b:	mov    ecx,DWORD PTR [edx-0x150]
  42ec51:	xor    ecx,eax
  42ec53:	call   0x42503a
  42ec58:	add    eax,0xc
  42ec5b:	mov    ecx,DWORD PTR [edx-0x8]
  42ec5e:	xor    ecx,eax
  42ec60:	call   0x42503a
  42ec65:	mov    eax,0x439e48
  42ec6a:	jmp    0x429e70
  42ec6f:	int3   
  42ec70:	lea    ecx,[ebp-0x24]
  42ec73:	jmp    0x40a4d0
  42ec78:	mov    edx,DWORD PTR [esp+0x8]
  42ec7c:	lea    eax,[edx-0x30]
  42ec7f:	mov    ecx,DWORD PTR [edx-0x34]
  42ec82:	xor    ecx,eax
  42ec84:	call   0x42503a
  42ec89:	mov    eax,0x439e74
  42ec8e:	jmp    0x429e70
  42ec93:	int3   
  42ec94:	int3   
  42ec95:	int3   
  42ec96:	int3   
  42ec97:	int3   
  42ec98:	int3   
  42ec99:	int3   
  42ec9a:	int3   
  42ec9b:	int3   
  42ec9c:	int3   
  42ec9d:	int3   
  42ec9e:	int3   
  42ec9f:	int3   
  42eca0:	lea    ecx,[ebp-0x20]
  42eca3:	jmp    0x40a4d0
  42eca8:	mov    edx,DWORD PTR [esp+0x8]
  42ecac:	lea    eax,[edx-0x2c]
  42ecaf:	mov    ecx,DWORD PTR [edx-0x30]
  42ecb2:	xor    ecx,eax
  42ecb4:	call   0x42503a
  42ecb9:	mov    eax,0x439ea0
  42ecbe:	jmp    0x429e70
  42ecc3:	int3   
  42ecc4:	int3   
  42ecc5:	int3   
  42ecc6:	int3   
  42ecc7:	int3   
  42ecc8:	int3   
  42ecc9:	int3   
  42ecca:	int3   
  42eccb:	int3   
  42eccc:	int3   
  42eccd:	int3   
  42ecce:	int3   
  42eccf:	int3   
  42ecd0:	lea    eax,[ebp-0xe4]
  42ecd6:	jmp    0x407540
  42ecdb:	lea    ecx,[ebp-0x84]
  42ece1:	jmp    DWORD PTR ds:0x430264
  42ece7:	lea    ecx,[ebp-0x30]
  42ecea:	jmp    DWORD PTR ds:0x430264
  42ecf0:	lea    ecx,[ebp-0x4c]
  42ecf3:	jmp    DWORD PTR ds:0x430264
  42ecf9:	lea    ecx,[ebp-0xa0]
  42ecff:	jmp    DWORD PTR ds:0x430264
  42ed05:	lea    ecx,[ebp-0x68]
  42ed08:	jmp    DWORD PTR ds:0x430264
  42ed0e:	lea    ecx,[ebp-0xa0]
  42ed14:	jmp    DWORD PTR ds:0x430264
  42ed1a:	mov    edx,DWORD PTR [esp+0x8]
  42ed1e:	lea    eax,[edx-0xe4]
  42ed24:	mov    ecx,DWORD PTR [edx-0xe8]
  42ed2a:	xor    ecx,eax
  42ed2c:	call   0x42503a
  42ed31:	add    eax,0x8
  42ed34:	mov    ecx,DWORD PTR [edx-0x8]
  42ed37:	xor    ecx,eax
  42ed39:	call   0x42503a
  42ed3e:	mov    eax,0x439f08
  42ed43:	jmp    0x429e70
  42ed48:	int3   
  42ed49:	int3   
  42ed4a:	int3   
  42ed4b:	int3   
  42ed4c:	int3   
  42ed4d:	int3   
  42ed4e:	int3   
  42ed4f:	int3   
  42ed50:	lea    ecx,[ebp-0x13c]
  42ed56:	jmp    DWORD PTR ds:0x430264
  42ed5c:	lea    eax,[ebp-0x70]
  42ed5f:	jmp    0x40dc30
  42ed64:	lea    ecx,[ebp-0x9c]
  42ed6a:	jmp    0x404680
  42ed6f:	lea    ecx,[ebp-0x30]
  42ed72:	jmp    DWORD PTR ds:0x43025c
  42ed78:	lea    ecx,[ebp-0x30]
  42ed7b:	jmp    DWORD PTR ds:0x43025c
  42ed81:	lea    ecx,[ebp-0x30]
  42ed84:	jmp    DWORD PTR ds:0x43025c
  42ed8a:	lea    ecx,[ebp-0x9c]
  42ed90:	jmp    0x404680
  42ed95:	lea    ecx,[ebp-0x118]
  42ed9b:	jmp    DWORD PTR ds:0x43025c
  42eda1:	lea    esi,[ebp-0xc8]
  42eda7:	jmp    0x421a20
  42edac:	lea    eax,[ebp-0x9c]
  42edb2:	jmp    0x411e30
  42edb7:	lea    esi,[ebp-0xc8]
  42edbd:	jmp    0x421a20
  42edc2:	lea    ecx,[ebp-0x30]
  42edc5:	jmp    DWORD PTR ds:0x430264
  42edcb:	lea    ecx,[ebp-0x8c]
  42edd1:	jmp    DWORD PTR ds:0x430264
  42edd7:	lea    ecx,[ebp-0x118]
  42eddd:	jmp    DWORD PTR ds:0x43025c
  42ede3:	lea    ecx,[ebp-0x174]
  42ede9:	jmp    DWORD PTR ds:0x430264
  42edef:	lea    ecx,[ebp-0x190]
  42edf5:	jmp    DWORD PTR ds:0x430264
  42edfb:	lea    ecx,[ebp-0x158]
  42ee01:	jmp    DWORD PTR ds:0x430264
  42ee07:	lea    ecx,[ebp-0x118]
  42ee0d:	jmp    DWORD PTR ds:0x430264
  42ee13:	lea    ecx,[ebp-0x4c]
  42ee16:	jmp    DWORD PTR ds:0x430264
  42ee1c:	lea    ecx,[ebp-0xc4]
  42ee22:	jmp    DWORD PTR ds:0x43025c
  42ee28:	lea    esi,[ebp-0xc8]
  42ee2e:	jmp    0x421a20
  42ee33:	lea    eax,[ebp-0xfc]
  42ee39:	push   eax
  42ee3a:	call   0x4127d0
  42ee3f:	ret    
  42ee40:	lea    eax,[ebp-0xe4]
  42ee46:	push   eax
  42ee47:	call   0x4127d0
  42ee4c:	ret    
  42ee4d:	lea    ecx,[ebp-0xc4]
  42ee53:	jmp    DWORD PTR ds:0x43025c
  42ee59:	lea    eax,[ebp-0xa4]
  42ee5f:	jmp    0x407540
  42ee64:	lea    esi,[ebp-0xc8]
  42ee6a:	jmp    0x421a20
  42ee6f:	mov    edx,DWORD PTR [esp+0x8]
  42ee73:	lea    eax,[edx+0xc]
  42ee76:	mov    ecx,DWORD PTR [edx-0x194]
  42ee7c:	xor    ecx,eax
  42ee7e:	call   0x42503a
  42ee83:	mov    ecx,DWORD PTR [edx-0x8]
  42ee86:	xor    ecx,eax
  42ee88:	call   0x42503a
  42ee8d:	mov    eax,0x43a090
  42ee92:	jmp    0x429e70
  42ee97:	int3   
  42ee98:	int3   
  42ee99:	int3   
  42ee9a:	int3   
  42ee9b:	int3   
  42ee9c:	int3   
  42ee9d:	int3   
  42ee9e:	int3   
  42ee9f:	int3   
  42eea0:	lea    ecx,[ebp-0x80]
  42eea3:	jmp    DWORD PTR ds:0x43025c
  42eea9:	lea    ecx,[ebp-0x2c]
  42eeac:	jmp    DWORD PTR ds:0x430264
  42eeb2:	lea    ecx,[ebp-0x64]
  42eeb5:	jmp    DWORD PTR ds:0x430264
  42eebb:	lea    ecx,[ebp-0x48]
  42eebe:	jmp    DWORD PTR ds:0x43025c
  42eec4:	mov    edx,DWORD PTR [esp+0x8]
  42eec8:	lea    eax,[edx-0x80]
  42eecb:	mov    ecx,DWORD PTR [edx-0x84]
  42eed1:	xor    ecx,eax
  42eed3:	call   0x42503a
  42eed8:	add    eax,0xc
  42eedb:	mov    ecx,DWORD PTR [edx-0x4]
  42eede:	xor    ecx,eax
  42eee0:	call   0x42503a
  42eee5:	mov    eax,0x43a0dc
  42eeea:	jmp    0x429e70
  42eeef:	int3   
  42eef0:	int3   
  42eef1:	int3   
  42eef2:	int3   
  42eef3:	int3   
  42eef4:	int3   
  42eef5:	int3   
  42eef6:	int3   
  42eef7:	int3   
  42eef8:	int3   
  42eef9:	int3   
  42eefa:	int3   
  42eefb:	int3   
  42eefc:	int3   
  42eefd:	int3   
  42eefe:	int3   
  42eeff:	int3   
  42ef00:	lea    ecx,[ebp-0xe0]
  42ef06:	jmp    DWORD PTR ds:0x43025c
  42ef0c:	lea    ecx,[ebp-0xc4]
  42ef12:	jmp    DWORD PTR ds:0x43025c
  42ef18:	lea    ecx,[ebp-0xa8]
  42ef1e:	jmp    DWORD PTR ds:0x430264
  42ef24:	lea    ecx,[ebp-0xe0]
  42ef2a:	jmp    DWORD PTR ds:0x43025c
  42ef30:	lea    ecx,[ebp-0xc4]
  42ef36:	jmp    DWORD PTR ds:0x43025c
  42ef3c:	lea    ecx,[ebp-0xa8]
  42ef42:	jmp    DWORD PTR ds:0x430264
  42ef48:	lea    ecx,[ebp-0xe0]
  42ef4e:	jmp    DWORD PTR ds:0x43025c
  42ef54:	lea    ecx,[ebp-0xc4]
  42ef5a:	jmp    DWORD PTR ds:0x43025c
  42ef60:	lea    ecx,[ebp-0xa8]
  42ef66:	jmp    DWORD PTR ds:0x430264
  42ef6c:	lea    ecx,[ebp-0xe0]
  42ef72:	jmp    DWORD PTR ds:0x43025c
  42ef78:	lea    ecx,[ebp-0xc4]
  42ef7e:	jmp    DWORD PTR ds:0x43025c
  42ef84:	lea    ecx,[ebp-0xa8]
  42ef8a:	jmp    DWORD PTR ds:0x430264
  42ef90:	lea    ecx,[ebp-0xe0]
  42ef96:	jmp    DWORD PTR ds:0x43025c
  42ef9c:	lea    ecx,[ebp-0xc4]
  42efa2:	jmp    DWORD PTR ds:0x43025c
  42efa8:	lea    ecx,[ebp-0xa8]
  42efae:	jmp    DWORD PTR ds:0x430264
  42efb4:	lea    ecx,[ebp-0xe0]
  42efba:	jmp    DWORD PTR ds:0x43025c
  42efc0:	lea    ecx,[ebp-0xc4]
  42efc6:	jmp    DWORD PTR ds:0x43025c
  42efcc:	lea    ecx,[ebp-0xa8]
  42efd2:	jmp    DWORD PTR ds:0x430264
  42efd8:	lea    ecx,[ebp-0xe0]
  42efde:	jmp    DWORD PTR ds:0x43025c
  42efe4:	mov    eax,DWORD PTR [ebp-0xe4]
  42efea:	and    eax,0x1
  42efed:	je     0x42f005
  42eff3:	and    DWORD PTR [ebp-0xe4],0xfffffffe
  42effa:	lea    esi,[ebp-0xa8]
  42f000:	jmp    0x421a20
  42f005:	ret    
  42f006:	lea    ecx,[ebp-0xe0]
  42f00c:	jmp    DWORD PTR ds:0x43025c
  42f012:	mov    eax,DWORD PTR [ebp-0xe4]
  42f018:	and    eax,0x2
  42f01b:	je     0x42f033
  42f021:	and    DWORD PTR [ebp-0xe4],0xfffffffd
  42f028:	lea    esi,[ebp-0xa8]
  42f02e:	jmp    0x421a20
  42f033:	ret    
  42f034:	lea    ecx,[ebp-0xe0]
  42f03a:	jmp    DWORD PTR ds:0x43025c
  42f040:	mov    eax,DWORD PTR [ebp-0xe4]
  42f046:	and    eax,0x4
  42f049:	je     0x42f061
  42f04f:	and    DWORD PTR [ebp-0xe4],0xfffffffb
  42f056:	lea    esi,[ebp-0xa8]
  42f05c:	jmp    0x421a20
  42f061:	ret    
  42f062:	lea    ecx,[ebp-0xe0]
  42f068:	jmp    DWORD PTR ds:0x43025c
  42f06e:	lea    ecx,[ebp-0xc4]
  42f074:	jmp    DWORD PTR ds:0x43025c
  42f07a:	lea    ecx,[ebp-0xc4]
  42f080:	jmp    DWORD PTR ds:0x43025c
  42f086:	lea    esi,[ebp-0xa8]
  42f08c:	jmp    0x421a20
  42f091:	mov    edx,DWORD PTR [esp+0x8]
  42f095:	lea    eax,[edx-0xe4]
  42f09b:	mov    ecx,DWORD PTR [edx-0xe8]
  42f0a1:	xor    ecx,eax
  42f0a3:	call   0x42503a
  42f0a8:	add    eax,0xc
  42f0ab:	mov    ecx,DWORD PTR [edx-0x8]
  42f0ae:	xor    ecx,eax
  42f0b0:	call   0x42503a
  42f0b5:	mov    eax,0x43a1e0
  42f0ba:	jmp    0x429e70
  42f0bf:	int3   
  42f0c0:	lea    ecx,[ebp-0x4c]
  42f0c3:	jmp    DWORD PTR ds:0x43025c
  42f0c9:	lea    ecx,[ebp-0x30]
  42f0cc:	jmp    DWORD PTR ds:0x430264
  42f0d2:	lea    ecx,[ebp-0x68]
  42f0d5:	jmp    DWORD PTR ds:0x43025c
  42f0db:	mov    edx,DWORD PTR [esp+0x8]
  42f0df:	lea    eax,[edx-0x70]
  42f0e2:	mov    ecx,DWORD PTR [edx-0x74]
  42f0e5:	xor    ecx,eax
  42f0e7:	call   0x42503a
  42f0ec:	add    eax,0x10
  42f0ef:	mov    ecx,DWORD PTR [edx-0x8]
  42f0f2:	xor    ecx,eax
  42f0f4:	call   0x42503a
  42f0f9:	mov    eax,0x43a224
  42f0fe:	jmp    0x429e70
  42f103:	int3   
  42f104:	int3   
  42f105:	int3   
  42f106:	int3   
  42f107:	int3   
  42f108:	int3   
  42f109:	int3   
  42f10a:	int3   
  42f10b:	int3   
  42f10c:	int3   
  42f10d:	int3   
  42f10e:	int3   
  42f10f:	int3   
  42f110:	lea    esi,[ebp-0x60]
  42f113:	jmp    0x421a20
  42f118:	mov    ecx,DWORD PTR [ebp-0x64]
  42f11b:	jmp    DWORD PTR ds:0x430264
  42f121:	lea    esi,[ebp-0x60]
  42f124:	jmp    0x421a20
  42f129:	lea    ecx,[ebp-0x30]
  42f12c:	jmp    DWORD PTR ds:0x430264
  42f132:	lea    ecx,[ebp-0x84]
  42f138:	jmp    DWORD PTR ds:0x430264
  42f13e:	lea    esi,[ebp-0x88]
  42f144:	jmp    0x421a20
  42f149:	mov    edx,DWORD PTR [esp+0x8]
  42f14d:	lea    eax,[edx+0xc]
  42f150:	mov    ecx,DWORD PTR [edx-0x8c]
  42f156:	xor    ecx,eax
  42f158:	call   0x42503a
  42f15d:	mov    ecx,DWORD PTR [edx-0x8]
  42f160:	xor    ecx,eax
  42f162:	call   0x42503a
  42f167:	mov    eax,0x43a2ac
  42f16c:	jmp    0x429e70
  42f171:	int3   
  42f172:	int3   
  42f173:	int3   
  42f174:	int3   
  42f175:	int3   
  42f176:	int3   
  42f177:	int3   
  42f178:	int3   
  42f179:	int3   
  42f17a:	int3   
  42f17b:	int3   
  42f17c:	int3   
  42f17d:	int3   
  42f17e:	int3   
  42f17f:	int3   
  42f180:	lea    ecx,[ebp-0x48]
  42f183:	jmp    DWORD PTR ds:0x430264
  42f189:	lea    ecx,[ebp-0x2c]
  42f18c:	jmp    DWORD PTR ds:0x430264
  42f192:	mov    edx,DWORD PTR [esp+0x8]
  42f196:	lea    eax,[edx-0x64]
  42f199:	mov    ecx,DWORD PTR [edx-0x68]
  42f19c:	xor    ecx,eax
  42f19e:	call   0x42503a
  42f1a3:	add    eax,0x10
  42f1a6:	mov    ecx,DWORD PTR [edx-0x4]
  42f1a9:	xor    ecx,eax
  42f1ab:	call   0x42503a
  42f1b0:	mov    eax,0x43a2e0
  42f1b5:	jmp    0x429e70
  42f1ba:	int3   
  42f1bb:	int3   
  42f1bc:	int3   
  42f1bd:	int3   
  42f1be:	int3   
  42f1bf:	int3   
  42f1c0:	jmp    0x422000
  42f1c5:	mov    edx,DWORD PTR [esp+0x8]
  42f1c9:	lea    eax,[edx]
  42f1cb:	mov    ecx,DWORD PTR [edx-0x4]
  42f1ce:	xor    ecx,eax
  42f1d0:	call   0x42503a
  42f1d5:	mov    eax,0x43a30c
  42f1da:	jmp    0x429e70
  42f1df:	int3   
  42f1e0:	call   0x429710
  42f1e5:	mov    ds:0x43fe60,eax
  42f1ea:	ret    
  42f1eb:	int3   
  42f1ec:	int3   
  42f1ed:	int3   
  42f1ee:	int3   
  42f1ef:	int3   
  42f1f0:	call   0x429710
  42f1f5:	mov    ds:0x43fe64,eax
  42f1fa:	ret    
  42f1fb:	int3   
  42f1fc:	int3   
  42f1fd:	int3   
  42f1fe:	int3   
  42f1ff:	int3   
  42f200:	call   0x4296a0
  42f205:	mov    ds:0x43fe68,eax
  42f20a:	ret    
  42f20b:	int3   
  42f20c:	int3   
  42f20d:	int3   
  42f20e:	int3   
  42f20f:	int3   
  42f210:	call   0x4031c0
  42f215:	push   0x42f4a0
  42f21a:	call   0x425159
  42f21f:	pop    ecx
  42f220:	ret    
  42f221:	int3   
  42f222:	int3   
  42f223:	int3   
  42f224:	int3   
  42f225:	int3   
  42f226:	int3   
  42f227:	int3   
  42f228:	int3   
  42f229:	int3   
  42f22a:	int3   
  42f22b:	int3   
  42f22c:	int3   
  42f22d:	int3   
  42f22e:	int3   
  42f22f:	int3   
  42f230:	mov    ecx,0x43fe80
  42f235:	call   DWORD PTR ds:0x430260
  42f23b:	push   0x42f4d0
  42f240:	call   0x425159
  42f245:	pop    ecx
  42f246:	ret    
  42f247:	int3   
  42f248:	int3   
  42f249:	int3   
  42f24a:	int3   
  42f24b:	int3   
  42f24c:	int3   
  42f24d:	int3   
  42f24e:	int3   
  42f24f:	int3   
  42f250:	call   0x429710
  42f255:	mov    ds:0x43fea0,eax
  42f25a:	ret    
  42f25b:	int3   
  42f25c:	int3   
  42f25d:	int3   
  42f25e:	int3   
  42f25f:	int3   
  42f260:	call   0x429710
  42f265:	mov    ds:0x43fea4,eax
  42f26a:	ret    
  42f26b:	int3   
  42f26c:	int3   
  42f26d:	int3   
  42f26e:	int3   
  42f26f:	int3   
  42f270:	call   0x4296a0
  42f275:	mov    ds:0x43fea8,eax
  42f27a:	ret    
  42f27b:	int3   
  42f27c:	int3   
  42f27d:	int3   
  42f27e:	int3   
  42f27f:	int3   
  42f280:	call   0x429710
  42f285:	mov    ds:0x43feb0,eax
  42f28a:	ret    
  42f28b:	int3   
  42f28c:	int3   
  42f28d:	int3   
  42f28e:	int3   
  42f28f:	int3   
  42f290:	call   0x429710
  42f295:	mov    ds:0x43feb4,eax
  42f29a:	ret    
  42f29b:	int3   
  42f29c:	int3   
  42f29d:	int3   
  42f29e:	int3   
  42f29f:	int3   
  42f2a0:	call   0x4296a0
  42f2a5:	mov    ds:0x43feb8,eax
  42f2aa:	ret    
  42f2ab:	int3   
  42f2ac:	int3   
  42f2ad:	int3   
  42f2ae:	int3   
  42f2af:	int3   
  42f2b0:	call   0x40dc90
  42f2b5:	push   0x42f4f0
  42f2ba:	call   0x425159
  42f2bf:	pop    ecx
  42f2c0:	ret    
  42f2c1:	int3   
  42f2c2:	int3   
  42f2c3:	int3   
  42f2c4:	int3   
  42f2c5:	int3   
  42f2c6:	int3   
  42f2c7:	int3   
  42f2c8:	int3   
  42f2c9:	int3   
  42f2ca:	int3   
  42f2cb:	int3   
  42f2cc:	int3   
  42f2cd:	int3   
  42f2ce:	int3   
  42f2cf:	int3   
  42f2d0:	push   0x42f500
  42f2d5:	call   0x425159
  42f2da:	pop    ecx
  42f2db:	ret    
  42f2dc:	int3   
  42f2dd:	int3   
  42f2de:	int3   
  42f2df:	int3   
  42f2e0:	mov    ecx,0x43ff90
  42f2e5:	call   DWORD PTR ds:0x430260
  42f2eb:	push   0x42f510
  42f2f0:	call   0x425159
  42f2f5:	pop    ecx
  42f2f6:	ret    
  42f2f7:	int3   
  42f2f8:	int3   
  42f2f9:	int3   
  42f2fa:	int3   
  42f2fb:	int3   
  42f2fc:	int3   
  42f2fd:	int3   
  42f2fe:	int3   
  42f2ff:	int3   
  42f300:	call   0x41f9d0
  42f305:	push   0x42f520
  42f30a:	call   0x425159
  42f30f:	pop    ecx
  42f310:	ret    
  42f311:	int3   
  42f312:	int3   
  42f313:	int3   
  42f314:	int3   
  42f315:	int3   
  42f316:	int3   
  42f317:	int3   
  42f318:	int3   
  42f319:	int3   
  42f31a:	int3   
  42f31b:	int3   
  42f31c:	int3   
  42f31d:	int3   
  42f31e:	int3   
  42f31f:	int3   
  42f320:	mov    ecx,0x440040
  42f325:	call   DWORD PTR ds:0x430260
  42f32b:	push   0x42f570
  42f330:	call   0x425159
  42f335:	pop    ecx
  42f336:	ret    
  42f337:	int3   
  42f338:	int3   
  42f339:	int3   
  42f33a:	int3   
  42f33b:	int3   
  42f33c:	int3   
  42f33d:	int3   
  42f33e:	int3   
  42f33f:	int3   
  42f340:	call   0x421750
  42f345:	push   0x42f580
  42f34a:	call   0x425159
  42f34f:	pop    ecx
  42f350:	ret    
  42f351:	int3   
  42f352:	int3   
  42f353:	int3   
  42f354:	int3   
  42f355:	int3   
  42f356:	int3   
  42f357:	int3   
  42f358:	int3   
  42f359:	int3   
  42f35a:	int3   
  42f35b:	int3   
  42f35c:	int3   
  42f35d:	int3   
  42f35e:	int3   
  42f35f:	int3   
  42f360:	push   0x430f40
  42f365:	mov    ecx,0x43fd74
  42f36a:	call   DWORD PTR ds:0x430268
  42f370:	push   0x42f5e0
  42f375:	call   0x425159
  42f37a:	pop    ecx
  42f37b:	ret    
  42f37c:	int3   
  42f37d:	int3   
  42f37e:	int3   
  42f37f:	int3   
  42f380:	push   0x4305e0
  42f385:	mov    ecx,0x43fd90
  42f38a:	call   DWORD PTR ds:0x430268
  42f390:	push   0x42f5d0
  42f395:	call   0x425159
  42f39a:	pop    ecx
  42f39b:	ret    
  42f39c:	int3   
  42f39d:	int3   
  42f39e:	int3   
  42f39f:	int3   
  42f3a0:	push   0x430f40
  42f3a5:	mov    ecx,0x43fdac
  42f3aa:	call   DWORD PTR ds:0x430268
  42f3b0:	push   0x42f610
  42f3b5:	call   0x425159
  42f3ba:	pop    ecx
  42f3bb:	ret    
  42f3bc:	int3   
  42f3bd:	int3   
  42f3be:	int3   
  42f3bf:	int3   
  42f3c0:	push   0x4305e0
  42f3c5:	mov    ecx,0x43fddc
  42f3ca:	call   DWORD PTR ds:0x430268
  42f3d0:	push   0x42f600
  42f3d5:	call   0x425159
  42f3da:	pop    ecx
  42f3db:	ret    
  42f3dc:	int3   
  42f3dd:	int3   
  42f3de:	int3   
  42f3df:	int3   
  42f3e0:	push   0x42f620
  42f3e5:	call   0x425159
  42f3ea:	pop    ecx
  42f3eb:	ret    
  42f3ec:	int3   
  42f3ed:	int3   
  42f3ee:	int3   
  42f3ef:	int3   
  42f3f0:	call   0x4296a0
  42f3f5:	mov    ds:0x43fdd4,eax
  42f3fa:	ret    
  42f3fb:	int3   
  42f3fc:	int3   
  42f3fd:	int3   
  42f3fe:	int3   
  42f3ff:	int3   
  42f400:	push   0x430800
  42f405:	push   0x4307f0
  42f40a:	call   DWORD PTR ds:0x4300d0
  42f410:	push   eax
  42f411:	call   DWORD PTR ds:0x4300dc
  42f417:	mov    ds:0x43fdd8,eax
  42f41c:	ret    
  42f41d:	int3   
  42f41e:	int3   
  42f41f:	int3   
  42f420:	push   0x430810
  42f425:	push   0x4307f0
  42f42a:	call   DWORD PTR ds:0x4300d0
  42f430:	push   eax
  42f431:	call   DWORD PTR ds:0x4300dc
  42f437:	mov    ds:0x43fe00,eax
  42f43c:	ret    
  42f43d:	int3   
  42f43e:	int3   
  42f43f:	int3   
  42f440:	call   0x4296a0
  42f445:	mov    DWORD PTR ds:0x43fdc8,0x3
  42f44f:	mov    ds:0x43fdcc,eax
  42f454:	ret    
  42f455:	int3   
  42f456:	int3   
  42f457:	int3   
  42f458:	int3   
  42f459:	int3   
  42f45a:	int3   
  42f45b:	int3   
  42f45c:	int3   
  42f45d:	int3   
  42f45e:	int3   
  42f45f:	int3   
  42f460:	call   0x429710
  42f465:	mov    ds:0x43fe4c,eax
  42f46a:	ret    
  42f46b:	int3   
  42f46c:	int3   
  42f46d:	int3   
  42f46e:	int3   
  42f46f:	int3   
  42f470:	call   0x429710
  42f475:	mov    ds:0x43fe3c,eax
  42f47a:	ret    
  42f47b:	int3   
  42f47c:	int3   
  42f47d:	int3   
  42f47e:	int3   
  42f47f:	int3   
  42f480:	call   0x4296a0
  42f485:	mov    ds:0x43fe48,eax
  42f48a:	ret    
  42f48b:	int3   
  42f48c:	int3   
  42f48d:	int3   
  42f48e:	int3   
  42f48f:	int3   
  42f490:	call   0x4296a0
  42f495:	mov    ds:0x43fe44,eax
  42f49a:	ret    
  42f49b:	int3   
  42f49c:	int3   
  42f49d:	int3   
  42f49e:	int3   
  42f49f:	int3   
  42f4a0:	mov    eax,ds:0x43fe78
  42f4a5:	push   esi
  42f4a6:	mov    esi,DWORD PTR ds:0x4300f4
  42f4ac:	push   eax
  42f4ad:	call   esi
  42f4af:	mov    ecx,DWORD PTR ds:0x43fe70
  42f4b5:	push   ecx
  42f4b6:	call   esi
  42f4b8:	mov    edx,DWORD PTR ds:0x43fe74
  42f4be:	push   edx
  42f4bf:	call   esi
  42f4c1:	pop    esi
  42f4c2:	ret    
  42f4c3:	int3   
  42f4c4:	int3   
  42f4c5:	int3   
  42f4c6:	int3   
  42f4c7:	int3   
  42f4c8:	int3   
  42f4c9:	int3   
  42f4ca:	int3   
  42f4cb:	int3   
  42f4cc:	int3   
  42f4cd:	int3   
  42f4ce:	int3   
  42f4cf:	int3   
  42f4d0:	jmp    0x403620
  42f4d5:	int3   
  42f4d6:	int3   
  42f4d7:	int3   
  42f4d8:	int3   
  42f4d9:	int3   
  42f4da:	int3   
  42f4db:	int3   
  42f4dc:	int3   
  42f4dd:	int3   
  42f4de:	int3   
  42f4df:	int3   
  42f4e0:	mov    ecx,0x4400b8
  42f4e5:	jmp    DWORD PTR ds:0x43025c
  42f4eb:	int3   
  42f4ec:	int3   
  42f4ed:	int3   
  42f4ee:	int3   
  42f4ef:	int3   
  42f4f0:	jmp    0x40d4f0
  42f4f5:	int3   
  42f4f6:	int3   
  42f4f7:	int3   
  42f4f8:	int3   
  42f4f9:	int3   
  42f4fa:	int3   
  42f4fb:	int3   
  42f4fc:	int3   
  42f4fd:	int3   
  42f4fe:	int3   
  42f4ff:	int3   
  42f500:	ret    
  42f501:	int3   
  42f502:	int3   
  42f503:	int3   
  42f504:	int3   
  42f505:	int3   
  42f506:	int3   
  42f507:	int3   
  42f508:	int3   
  42f509:	int3   
  42f50a:	int3   
  42f50b:	int3   
  42f50c:	int3   
  42f50d:	int3   
  42f50e:	int3   
  42f50f:	int3   
  42f510:	jmp    0x41f930
  42f515:	int3   
  42f516:	int3   
  42f517:	int3   
  42f518:	int3   
  42f519:	int3   
  42f51a:	int3   
  42f51b:	int3   
  42f51c:	int3   
  42f51d:	int3   
  42f51e:	int3   
  42f51f:	int3   
  42f520:	jmp    0x41fa60
  42f525:	int3   
  42f526:	int3   
  42f527:	int3   
  42f528:	int3   
  42f529:	int3   
  42f52a:	int3   
  42f52b:	int3   
  42f52c:	int3   
  42f52d:	int3   
  42f52e:	int3   
  42f52f:	int3   
  42f530:	mov    ecx,0x4404e8
  42f535:	jmp    DWORD PTR ds:0x430264
  42f53b:	int3   
  42f53c:	int3   
  42f53d:	int3   
  42f53e:	int3   
  42f53f:	int3   
  42f540:	mov    ecx,0x440548
  42f545:	jmp    DWORD PTR ds:0x430264
  42f54b:	int3   
  42f54c:	int3   
  42f54d:	int3   
  42f54e:	int3   
  42f54f:	int3   
  42f550:	mov    ecx,0x440528
  42f555:	jmp    DWORD PTR ds:0x430264
  42f55b:	int3   
  42f55c:	int3   
  42f55d:	int3   
  42f55e:	int3   
  42f55f:	int3   
  42f560:	mov    ecx,0x440508
  42f565:	jmp    DWORD PTR ds:0x430264
  42f56b:	int3   
  42f56c:	int3   
  42f56d:	int3   
  42f56e:	int3   
  42f56f:	int3   
  42f570:	push   0x44003c
  42f575:	call   0x40b540
  42f57a:	ret    
  42f57b:	int3   
  42f57c:	int3   
  42f57d:	int3   
  42f57e:	int3   
  42f57f:	int3   
  42f580:	push   0xffffffff
  42f582:	push   0x42f1c5
  42f587:	mov    eax,fs:0x0
  42f58d:	push   eax
  42f58e:	mov    eax,ds:0x43e020
  42f593:	xor    eax,esp
  42f595:	push   eax
  42f596:	lea    eax,[esp+0x4]
  42f59a:	mov    fs:0x0,eax
  42f5a0:	push   0x440080
  42f5a5:	mov    DWORD PTR [esp+0x10],0x0
  42f5ad:	call   0x40b540
  42f5b2:	mov    DWORD PTR [esp+0xc],0xffffffff
  42f5ba:	call   0x422000
  42f5bf:	mov    ecx,DWORD PTR [esp+0x4]
  42f5c3:	mov    DWORD PTR fs:0x0,ecx
  42f5ca:	pop    ecx
  42f5cb:	add    esp,0xc
  42f5ce:	ret    
  42f5cf:	int3   
  42f5d0:	mov    ecx,0x43fd90
  42f5d5:	jmp    DWORD PTR ds:0x430264
  42f5db:	int3   
  42f5dc:	int3   
  42f5dd:	int3   
  42f5de:	int3   
  42f5df:	int3   
  42f5e0:	mov    ecx,0x43fd74
  42f5e5:	jmp    DWORD PTR ds:0x430264
  42f5eb:	int3   
  42f5ec:	int3   
  42f5ed:	int3   
  42f5ee:	int3   
  42f5ef:	int3   
  42f5f0:	mov    ecx,0x43fd64
  42f5f5:	jmp    DWORD PTR ds:0x430180
  42f5fb:	int3   
  42f5fc:	int3   
  42f5fd:	int3   
  42f5fe:	int3   
  42f5ff:	int3   
  42f600:	mov    ecx,0x43fddc
  42f605:	jmp    DWORD PTR ds:0x430264
  42f60b:	int3   
  42f60c:	int3   
  42f60d:	int3   
  42f60e:	int3   
  42f60f:	int3   
  42f610:	mov    ecx,0x43fdac
  42f615:	jmp    DWORD PTR ds:0x430264
  42f61b:	int3   
  42f61c:	int3   
  42f61d:	int3   
  42f61e:	int3   
  42f61f:	int3   
  42f620:	push   esi
  42f621:	mov    esi,DWORD PTR ds:0x43fdfc
  42f627:	test   esi,esi
  42f629:	je     0x42f656
  42f62b:	lea    eax,[esi+0x4]
  42f62e:	or     ecx,0xffffffff
  42f631:	lock xadd DWORD PTR [eax],ecx
  42f635:	jne    0x42f656
  42f637:	mov    edx,DWORD PTR [esi]
  42f639:	mov    eax,DWORD PTR [edx+0x4]
  42f63c:	mov    ecx,esi
  42f63e:	call   eax
  42f640:	lea    ecx,[esi+0x8]
  42f643:	or     edx,0xffffffff
  42f646:	lock xadd DWORD PTR [ecx],edx
  42f64a:	jne    0x42f656
  42f64c:	mov    eax,DWORD PTR [esi]
  42f64e:	mov    edx,DWORD PTR [eax+0x8]
  42f651:	mov    ecx,esi
  42f653:	pop    esi
  42f654:	jmp    edx
  42f656:	pop    esi
  42f657:	ret    
  42f658:	int3   
  42f659:	int3   
  42f65a:	int3   
  42f65b:	int3   
  42f65c:	int3   
  42f65d:	int3   
  42f65e:	int3   
  42f65f:	int3   
  42f660:	mov    DWORD PTR ds:0x43fe04,0x430828
  42f66a:	ret    
  42f66b:	int3   
  42f66c:	int3   
  42f66d:	int3   
  42f66e:	int3   
  42f66f:	int3   
  42f670:	mov    ecx,0x43fe0c
  42f675:	jmp    DWORD PTR ds:0x43025c
  42f67b:	int3   
  42f67c:	int3   
  42f67d:	int3   
  42f67e:	int3   
  42f67f:	int3   
  42f680:	mov    DWORD PTR ds:0x43fe2c,0x430828
  42f68a:	ret    
  42f68b:	int3   
  42f68c:	int3   
  42f68d:	int3   
  42f68e:	int3   
  42f68f:	int3   
  42f690:	mov    DWORD PTR ds:0x43fe34,0x430828
  42f69a:	ret    

Disassembly of section .rdata:

00430000 <.rdata>:
  430000:	pusha  
  430001:	retf   
  430002:	add    eax,DWORD PTR [eax]
  430004:	xchg   edx,eax
  430005:	retf   
  430006:	add    eax,DWORD PTR [eax]
  430008:	mov    esi,0x60003cb
  43000d:	int3   
  43000e:	add    eax,DWORD PTR [eax]
  430010:	ds int3 
  430012:	add    eax,DWORD PTR [eax]
  430014:	outs   dx,BYTE PTR ds:[esi]
  430015:	int3   
  430016:	add    eax,DWORD PTR [eax]
  430018:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430019:	int3   
  43001a:	add    eax,DWORD PTR [eax]
  43001c:	retf   0x3cc
  43001f:	add    al,dh
  430021:	int3   
  430022:	add    eax,DWORD PTR [eax]
  430024:	and    cl,ch
  430026:	add    eax,DWORD PTR [eax]
  430028:	push   eax
  430029:	int    0x3
  43002b:	add    BYTE PTR [ebp+ecx*8+0x3],bh
  43002f:	add    BYTE PTR [edx-0x37fffc33],ah
  430035:	int    0x3
  430037:	add    BYTE PTR [esi+ecx*8],al
  43003a:	add    eax,DWORD PTR [eax]
  43003c:	add    BYTE PTR [eax],al
  43003e:	add    BYTE PTR [eax],al
  430040:	adc    al,0xd2
  430042:	add    eax,DWORD PTR [eax]
  430044:	add    BYTE PTR [eax],al
  430046:	add    BYTE PTR [eax],al
  430048:	(bad)  
  430049:	test   eax,0xaa140003
  43004e:	add    eax,DWORD PTR [eax]
  430050:	and    al,0xaa
  430052:	add    eax,DWORD PTR [eax]
  430054:	sub    al,0xaa
  430056:	add    eax,DWORD PTR [eax]
  430058:	cmp    ch,BYTE PTR [edx-0x55b7fffd]
  43005e:	add    eax,DWORD PTR [eax]
  430060:	push   esp
  430061:	stos   BYTE PTR es:[edi],al
  430062:	add    eax,DWORD PTR [eax]
  430064:	jo     0x430010
  430066:	add    eax,DWORD PTR [eax]
  430068:	sub    BYTE PTR [edx-0x556bfffd],0x3
  43006f:	add    BYTE PTR [edx-0x17fffc56],ah
  430075:	test   eax,0xd34e0003
  43007a:	add    eax,DWORD PTR [eax]
  43007c:	rol    DWORD PTR fs:[ebx],cl
  43007f:	add    BYTE PTR [edx-0x6bfffc2d],al
  430085:	rol    DWORD PTR [ebx],cl
  430087:	add    BYTE PTR [eax-0x31fffc2d],dh
  43008d:	rol    DWORD PTR [ebx],cl
  43008f:	add    dh,cl
  430091:	test   eax,0xd3fc0003
  430096:	add    eax,DWORD PTR [eax]
  430098:	or     al,0xd4
  43009a:	add    eax,DWORD PTR [eax]
  43009c:	and    ah,dl
  43009e:	add    eax,DWORD PTR [eax]
  4300a0:	xor    dl,ah
  4300a2:	add    eax,DWORD PTR [eax]
  4300a4:	ds aam 0x3
  4300a7:	add    BYTE PTR [esi-0x2c],cl
  4300aa:	add    eax,DWORD PTR [eax]
  4300ac:	pusha  
  4300ad:	aam    0x3
  4300af:	add    BYTE PTR [esi-0x2c],dh
  4300b2:	add    eax,DWORD PTR [eax]
  4300b4:	mov    ah,0xa9
  4300b6:	add    eax,DWORD PTR [eax]
  4300b8:	mov    al,ds:0x8a0003a9
  4300bd:	test   eax,0xa97c0003
  4300c2:	add    eax,DWORD PTR [eax]
  4300c4:	push   0xc60003a9
  4300c9:	aam    0x3
  4300cb:	add    BYTE PTR [esp+edx*8-0x2b5ffffd],dh
  4300d2:	add    eax,DWORD PTR [eax]
  4300d4:	mov    esp,ss
  4300d6:	add    eax,DWORD PTR [eax]
  4300d8:	pop    eax
  4300d9:	test   eax,0xa9460003
  4300de:	add    eax,DWORD PTR [eax]
  4300e0:	ss test eax,0xa9280003
  4300e6:	add    eax,DWORD PTR [eax]
  4300e8:	adc    ch,BYTE PTR [ecx-0x5703fffd]
  4300ee:	add    eax,DWORD PTR [eax]
  4300f0:	call   0xda43049d
  4300f5:	test   al,0x3
  4300f7:	add    dh,al
  4300f9:	test   al,0x3
  4300fb:	add    BYTE PTR [edx-0x5dfffc58],bh
  430101:	test   al,0x3
  430103:	add    dl,ah
  430105:	rol    DWORD PTR [ebx],cl
  430107:	add    BYTE PTR [eax+ebp*4+0x3],cl
  43010e:	add    BYTE PTR [eax],al
  430110:	dec    esi
  430111:	scas   eax,DWORD PTR es:[edi]
  430112:	add    eax,DWORD PTR [eax]
  430114:	test   al,0xaf
  430116:	add    eax,DWORD PTR [eax]
  430118:	aam    0xaf
  43011a:	add    eax,DWORD PTR [eax]
  43011c:	es mov al,0x3
  43011f:	add    BYTE PTR [edx-0x50],dh
  430122:	add    eax,DWORD PTR [eax]
  430124:	div    BYTE PTR [eax-0x4e77fffd]
  43012a:	add    eax,DWORD PTR [eax]
  43012c:	sbb    al,0xb2
  43012e:	add    eax,DWORD PTR [eax]
  430130:	jo     0x4300e4
  430132:	add    eax,DWORD PTR [eax]
  430134:	push   ss
  430135:	mov    bl,0x3
  430137:	add    BYTE PTR [esi-0x4d],al
  43013a:	add    eax,DWORD PTR [eax]
  43013c:	jo     0x4300f1
  43013e:	add    eax,DWORD PTR [eax]
  430140:	dec    esp
  430141:	mov    ah,0x3
  430143:	add    BYTE PTR [edx-0x5fffc4c],ah
  430149:	mov    ah,0x3
  43014b:	add    BYTE PTR [eax-0x37fffc4b],cl
  430151:	mov    ch,0x3
  430153:	add    BYTE PTR [eax],cl
  430155:	mov    dh,0x3
  430157:	add    BYTE PTR [esi+esi*4+0x3],cl
  43015b:	add    BYTE PTR [edx-0x33fffc4a],cl
  430161:	mov    dh,0x3
  430163:	add    dh,ch
  430165:	mov    dh,0x3
  430167:	add    BYTE PTR [eax-0x49],dh
  43016a:	add    eax,DWORD PTR [eax]
  43016c:	ret    0x3b7
  43016f:	add    BYTE PTR [eax+edi*4],dl
  430172:	add    eax,DWORD PTR [eax]
  430174:	xchg   esp,eax
  430175:	mov    eax,0xb8e80003
  43017a:	add    eax,DWORD PTR [eax]
  43017c:	cmp    bh,BYTE PTR [ecx-0x466dfffd]
  430182:	add    eax,DWORD PTR [eax]
  430184:	stos   BYTE PTR es:[edi],al
  430185:	mov    ecx,0xb9c40003
  43018a:	add    eax,DWORD PTR [eax]
  43018c:	fidivr WORD PTR [ecx-0x4609fffd]
  430192:	add    eax,DWORD PTR [eax]
  430194:	sbb    bh,BYTE PTR [edx-0x45b9fffd]
  43019a:	add    eax,DWORD PTR [eax]
  43019c:	bound  edi,QWORD PTR [edx-0x4515fffd]
  4301a2:	add    eax,DWORD PTR [eax]
  4301a4:	outs   dx,BYTE PTR ds:[esi]
  4301a5:	mov    ebx,0xbbf60003
  4301aa:	add    eax,DWORD PTR [eax]
  4301ac:	push   ss
  4301ad:	mov    esp,0xbc380003
  4301b2:	add    eax,DWORD PTR [eax]
  4301b4:	jbe    0x430172
  4301b6:	add    eax,DWORD PTR [eax]
  4301b8:	sahf   
  4301b9:	mov    esp,0xbd000003
  4301be:	add    eax,DWORD PTR [eax]
  4301c0:	sub    al,0xbd
  4301c2:	add    eax,DWORD PTR [eax]
  4301c4:	cmp    BYTE PTR [ebp-0x41fdfffd],0x3
  4301cb:	add    BYTE PTR [edx-0x42],dl
  4301ce:	add    eax,DWORD PTR [eax]
  4301d0:	jle    0x430190
  4301d2:	add    eax,DWORD PTR [eax]
  4301d4:	into   
  4301d5:	mov    esi,0xbf240003
  4301da:	add    eax,DWORD PTR [eax]
  4301dc:	dec    esi
  4301dd:	mov    edi,0xbfa00003
  4301e2:	add    eax,DWORD PTR [eax]
  4301e4:	in     al,dx
  4301e5:	mov    edi,0xc03e0003
  4301ea:	add    eax,DWORD PTR [eax]
  4301ec:	mov    esi,0x4a0003c0
  4301f1:	rol    DWORD PTR [ebx],0x0
  4301f4:	fadd   st,st(1)
  4301f6:	add    eax,DWORD PTR [eax]
  4301f8:	sub    dl,al
  4301fa:	add    eax,DWORD PTR [eax]
  4301fc:	test   al,0xc2
  4301fe:	add    eax,DWORD PTR [eax]
  430200:	cmp    al,bl
  430202:	add    eax,DWORD PTR [eax]
  430204:	mov    bl,al
  430206:	add    eax,DWORD PTR [eax]
  430208:	and    ah,al
  43020a:	add    eax,DWORD PTR [eax]
  43020c:	jb     0x4301d2
  43020e:	add    eax,DWORD PTR [eax]
  430210:	push   es
  430211:	lds    eax,FWORD PTR [ebx]
  430213:	add    BYTE PTR [ebp+eax*8-0x3a03fffd],ah
  43021a:	add    eax,DWORD PTR [eax]
  43021c:	push   esp
  43021d:	mov    BYTE PTR [ebx],0x0
  430220:	scas   al,BYTE PTR es:[edi]
  430221:	mov    BYTE PTR [ebx],0x0
  430224:	or     al,bh
  430226:	add    eax,DWORD PTR [eax]
  430228:	pop    esi
  430229:	mov    DWORD PTR [ebx],0x3c7b200
  43022f:	add    BYTE PTR [eax],cl
  430231:	enter  0x3,0xa2
  430235:	enter  0x3,0xfa
  430239:	enter  0x3,0x4e
  43023d:	leave  
  43023e:	add    eax,DWORD PTR [eax]
  430240:	hlt    
  430241:	leave  
  430242:	add    eax,DWORD PTR [eax]
  430244:	xchg   edx,eax
  430245:	retf   0x3
  430248:	ss retf 
  43024a:	add    eax,DWORD PTR [eax]
  43024c:	and    BYTE PTR [edi-0x5133fffd],ch
  430252:	add    eax,DWORD PTR [eax]
  430254:	sub    BYTE PTR [esi-0x51cffffd],0x3
  43025b:	add    dh,ah
  43025d:	lods   eax,DWORD PTR ds:[esi]
  43025e:	add    eax,DWORD PTR [eax]
  430260:	pushf  
  430261:	lods   eax,DWORD PTR ds:[esi]
  430262:	add    eax,DWORD PTR [eax]
  430264:	push   eax
  430265:	lods   eax,DWORD PTR ds:[esi]
  430266:	add    eax,DWORD PTR [eax]
  430268:	add    BYTE PTR [ebp-0x2b27fffd],ch
  43026e:	add    eax,DWORD PTR [eax]
  430270:	sub    al,0xd5
  430272:	add    eax,DWORD PTR [eax]
  430274:	int3   
  430275:	aad    0x3
  430277:	add    BYTE PTR [esi+edx*8],al
  43027a:	add    eax,DWORD PTR [eax]
  43027c:	ds (bad) 
  43027e:	add    eax,DWORD PTR [eax]
  430280:	call   0x3d6:0xea0003d6
  430287:	add    BYTE PTR [edi+edx*8],cl
  43028a:	add    eax,DWORD PTR [eax]
  43028c:	cmp    al,0xd7
  43028e:	add    eax,DWORD PTR [eax]
  430290:	pop    esp
  430291:	xlat   BYTE PTR ds:[ebx]
  430292:	add    eax,DWORD PTR [eax]
  430294:	mov    ah,0xd7
  430296:	add    eax,DWORD PTR [eax]
  430298:	adc    bl,al
  43029a:	add    eax,DWORD PTR [eax]
  43029c:	push   edx
  43029d:	fadd   DWORD PTR [ebx]
  43029f:	add    BYTE PTR [edx-0x4ffffc28],dl
  4302a5:	fadd   DWORD PTR [ebx]
  4302a7:	add    al,bl
  4302a9:	fadd   DWORD PTR [ebx]
  4302ab:	add    BYTE PTR [eax],al
  4302ad:	fld    DWORD PTR [ebx]
  4302af:	add    BYTE PTR [eax],ah
  4302b1:	fld    DWORD PTR [ebx]
  4302b3:	add    BYTE PTR [ecx+ebx*8+0x3],dl
  4302b7:	add    BYTE PTR [ecx+ebx*8+0x3],bh
  4302bb:	add    dh,cl
  4302bd:	fld    DWORD PTR [ebx]
  4302bf:	add    BYTE PTR [edx],ah
  4302c1:	fiadd  DWORD PTR [ebx]
  4302c3:	add    BYTE PTR [eax],dh
  4302c5:	mov    bh,0x3
  4302c7:	add    BYTE PTR [eax],al
  4302c9:	add    BYTE PTR [eax],al
  4302cb:	add    BYTE PTR [eax-0x39fffc31],bh
  4302d1:	iret   
  4302d2:	add    eax,DWORD PTR [eax]
  4302d4:	ror    bh,cl
  4302d6:	add    eax,DWORD PTR [eax]
  4302d8:	lock iret 
  4302da:	add    eax,DWORD PTR [eax]
  4302dc:	dec    bh
  4302de:	add    eax,DWORD PTR [eax]
  4302e0:	push   cs
  4302e1:	rol    BYTE PTR [ebx],1
  4302e3:	add    BYTE PTR [eax+edx*8],bl
  4302e6:	add    eax,DWORD PTR [eax]
  4302e8:	sub    al,dl
  4302ea:	add    eax,DWORD PTR [eax]
  4302ec:	xor    al,0xd0
  4302ee:	add    eax,DWORD PTR [eax]
  4302f0:	inc    eax
  4302f1:	rol    BYTE PTR [ebx],1
  4302f3:	add    BYTE PTR [eax+edx*8+0x3],dl
  4302f7:	add    BYTE PTR [esi-0x30],bl
  4302fa:	add    eax,DWORD PTR [eax]
  4302fc:	ins    BYTE PTR es:[edi],dx
  4302fd:	rol    BYTE PTR [ebx],1
  4302ff:	add    BYTE PTR [esi-0x30],bh
  430302:	add    eax,DWORD PTR [eax]
  430304:	xchg   al,dl
  430306:	add    eax,DWORD PTR [eax]
  430308:	nop
  430309:	rol    BYTE PTR [ebx],1
  43030b:	add    BYTE PTR [edx-0x4ffffc30],ah
  430311:	rol    BYTE PTR [ebx],1
  430313:	add    dl,al
  430315:	rol    BYTE PTR [ebx],1
  430317:	add    ah,cl
  430319:	rol    BYTE PTR [ebx],1
  43031b:	add    ah,dl
  43031d:	rol    BYTE PTR [ebx],1
  43031f:	add    dl,ah
  430321:	rol    BYTE PTR [ebx],1
  430323:	add    dl,ch
  430325:	rol    BYTE PTR [ebx],1
  430327:	add    ah,dh
  430329:	rol    BYTE PTR [ebx],1
  43032b:	add    BYTE PTR [eax],al
  43032d:	rol    DWORD PTR [ebx],1
  43032f:	add    BYTE PTR [esi],cl
  430331:	rol    DWORD PTR [ebx],1
  430333:	add    BYTE PTR [ecx+edx*8],ah
  430336:	add    eax,DWORD PTR [eax]
  430338:	cmp    cl,dl
  43033a:	add    eax,DWORD PTR [eax]
  43033c:	dec    eax
  43033d:	rol    DWORD PTR [ebx],1
  43033f:	add    BYTE PTR [eax-0x2f],bl
  430342:	add    eax,DWORD PTR [eax]
  430344:	rol    WORD PTR [ebx],1
  430347:	add    BYTE PTR [eax-0x2f],bh
  43034a:	add    eax,DWORD PTR [eax]
  43034c:	mov    ss,ecx
  43034e:	add    eax,DWORD PTR [eax]
  430350:	mov    ds:0xd80003d1,al
  430355:	rol    DWORD PTR [ebx],1
  430357:	add    dl,dh
  430359:	rol    DWORD PTR [ebx],1
  43035b:	add    BYTE PTR [edx+edx*8],al
  43035e:	add    eax,DWORD PTR [eax]
  430360:	call   0x3cf:0x800003cf
  430367:	add    BYTE PTR [edx+ebx*8-0x2567fffd],ah
  43036e:	add    eax,DWORD PTR [eax]
  430370:	sbb    dl,0x3
  430373:	add    BYTE PTR [edx+ebx*8+0x3],ch
  430377:	add    BYTE PTR [edx-0x32],dl
  43037a:	add    eax,DWORD PTR [eax]
  43037c:	pop    esp
  43037d:	into   
  43037e:	add    eax,DWORD PTR [eax]
  430380:	pusha  
  430381:	iret   
  430382:	add    eax,DWORD PTR [eax]
  430384:	push   esp
  430385:	iret   
  430386:	add    eax,DWORD PTR [eax]
  430388:	dec    edx
  430389:	iret   
  43038a:	add    eax,DWORD PTR [eax]
  43038c:	ds iret 
  43038e:	add    eax,DWORD PTR [eax]
  430390:	and    cl,bh
  430392:	add    eax,DWORD PTR [eax]
  430394:	push   ss
  430395:	iret   
  430396:	add    eax,DWORD PTR [eax]
  430398:	test   dh,0x3
  43039b:	add    dh,dl
  43039d:	into   
  43039e:	add    eax,DWORD PTR [eax]
  4303a0:	mov    ah,0xce
  4303a2:	add    eax,DWORD PTR [eax]
  4303a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4303a5:	into   
  4303a6:	add    eax,DWORD PTR [eax]
  4303a8:	mov    dh,cl
  4303aa:	add    eax,DWORD PTR [eax]
  4303ac:	ins    BYTE PTR es:[edi],dx
  4303ad:	into   
  4303ae:	add    eax,DWORD PTR [eax]
  4303b0:	scas   al,BYTE PTR es:[edi]
  4303b1:	fiadd  DWORD PTR [ebx]
  4303b3:	add    BYTE PTR [eax],al
  4303b5:	add    BYTE PTR [eax],al
  4303b7:	add    BYTE PTR [ecx],al
  4303b9:	add    BYTE PTR [eax],al
  4303bb:	add    BYTE PTR [ebx],0x0
  4303be:	add    BYTE PTR [eax-0x7ffffffa],al
  4303c4:	add    BYTE PTR [eax],al
  4303c6:	add    BYTE PTR [eax],al
  4303c8:	mov    ds:0x8c0003ac,al
  4303cd:	lods   al,BYTE PTR ds:[esi]
  4303ce:	add    eax,DWORD PTR [eax]
  4303d0:	mov    ah,0xac
  4303d2:	add    eax,DWORD PTR [eax]
  4303d4:	add    BYTE PTR [eax],al
  4303d6:	add    BYTE PTR [eax],al
  4303d8:	in     al,0xaa
  4303da:	add    eax,DWORD PTR [eax]
  4303dc:	les    ebp,FWORD PTR [edx-0x5529fffd]
  4303e2:	add    eax,DWORD PTR [eax]
  4303e4:	clc    
  4303e5:	stos   BYTE PTR es:[edi],al
  4303e6:	add    eax,DWORD PTR [eax]
  4303e8:	jb     0x430396
  4303ea:	add    eax,DWORD PTR [eax]
  4303ec:	pop    edx
  4303ed:	lods   al,BYTE PTR ds:[esi]
  4303ee:	add    eax,DWORD PTR [eax]
  4303f0:	dec    eax
  4303f1:	lods   al,BYTE PTR ds:[esi]
  4303f2:	add    eax,DWORD PTR [eax]
  4303f4:	xor    al,0xac
  4303f6:	add    eax,DWORD PTR [eax]
  4303f8:	and    al,0xac
  4303fa:	add    eax,DWORD PTR [eax]
  4303fc:	adc    BYTE PTR [ebx+eax*1+0x3abfa00],ch
  430403:	add    dh,ah
  430405:	stos   DWORD PTR es:[edi],eax
  430406:	add    eax,DWORD PTR [eax]
  430408:	shr    BYTE PTR [ebx-0x544bfffd],1
  43040e:	add    eax,DWORD PTR [eax]
  430410:	test   al,0xab
  430412:	add    eax,DWORD PTR [eax]
  430414:	call   0x3ab:0x880003ab
  43041b:	add    BYTE PTR [esi-0x55],dh
  43041e:	add    eax,DWORD PTR [eax]
  430420:	stos   WORD PTR es:[edi],ax
  430422:	add    eax,DWORD PTR [eax]
  430424:	push   esi
  430425:	stos   DWORD PTR es:[edi],eax
  430426:	add    eax,DWORD PTR [eax]
  430428:	inc    esi
  430429:	stos   DWORD PTR es:[edi],eax
  43042a:	add    eax,DWORD PTR [eax]
  43042c:	cmp    ch,BYTE PTR [ebx-0x54d5fffd]
  430432:	add    eax,DWORD PTR [eax]
  430434:	sbb    BYTE PTR [ebx-0x54f3fffd],ch
  43043a:	add    eax,DWORD PTR [eax]
  43043c:	add    BYTE PTR [eax],al
  43043e:	add    BYTE PTR [eax],al
  430440:	(bad)  
  430441:	rol    BYTE PTR [ebx],cl
  430443:	add    BYTE PTR [eax],bh
  430445:	rol    BYTE PTR [ebx],cl
  430447:	add    BYTE PTR [edx-0x2e],ch
  43044a:	add    eax,DWORD PTR [eax]
  43044c:	(bad)  
  43044d:	rol    BYTE PTR [ebx],cl
  43044f:	add    BYTE PTR [edx+0x3d2],bl
  430455:	add    BYTE PTR [eax],al
  430457:	add    ah,ah
  430459:	lods   al,BYTE PTR ds:[esi]
  43045a:	add    eax,DWORD PTR [eax]
  43045c:	aam    0xac
  43045e:	add    eax,DWORD PTR [eax]
	...
  430468:	adc    BYTE PTR [ecx+0x42],0x0
  43046c:	pusha  
  43046d:	repz inc edx
  43046f:	add    BYTE PTR [eax-0x5fffbd0d],al
  430475:	repz inc edx
  430477:	add    al,al
  430479:	repz inc edx
  43047b:	add    al,ah
  43047d:	repz inc edx
  43047f:	add    al,dh
  430481:	repz inc edx
  430483:	add    BYTE PTR [eax],al
  430485:	hlt    
  430486:	inc    edx
  430487:	add    BYTE PTR [eax],ah
  430489:	hlt    
  43048a:	inc    edx
  43048b:	add    BYTE PTR [eax-0xc],al
  43048e:	inc    edx
  43048f:	add    BYTE PTR [eax-0xc],ah
  430492:	inc    edx
  430493:	add    BYTE PTR [eax-0xc],dh
  430496:	inc    edx
  430497:	add    BYTE PTR [eax-0x6fffbd0c],al
  43049d:	hlt    
  43049e:	inc    edx
  43049f:	add    al,ah
  4304a1:	icebp  
  4304a2:	inc    edx
  4304a3:	add    al,dh
  4304a5:	icebp  
  4304a6:	inc    edx
  4304a7:	add    BYTE PTR [eax],al
  4304a9:	repnz inc edx
  4304ab:	add    BYTE PTR [eax],dl
  4304ad:	repnz inc edx
  4304af:	add    BYTE PTR [eax],dh
  4304b1:	repnz inc edx
  4304b3:	add    BYTE PTR [eax-0xe],dl
  4304b6:	inc    edx
  4304b7:	add    BYTE PTR [eax-0xe],ah
  4304ba:	inc    edx
  4304bb:	add    BYTE PTR [eax-0xe],dh
  4304be:	inc    edx
  4304bf:	add    BYTE PTR [eax-0x6fffbd0e],al
  4304c5:	repnz inc edx
  4304c7:	add    BYTE PTR [eax-0x4fffbd0e],ah
  4304cd:	repnz inc edx
  4304cf:	add    al,dl
  4304d1:	repnz inc edx
  4304d3:	add    al,ah
  4304d5:	repnz inc edx
  4304d7:	add    BYTE PTR [eax],al
  4304d9:	repz inc edx
  4304db:	add    BYTE PTR [eax],ah
  4304dd:	repz inc edx
  4304df:	add    BYTE PTR [eax-0xd],al
  4304e2:	inc    edx
	...
  4304eb:	add    BYTE PTR [ebx+0x17004253],ch
  4304f1:	mov    ds:0x57300042,al
  4304f6:	inc    edx
	...
  430503:	add    BYTE PTR [edi-0x11],bh
  430506:	pop    ecx
  430507:	pop    eax
  430508:	add    BYTE PTR [eax],al
  43050a:	add    BYTE PTR [eax],al
  43050c:	add    al,BYTE PTR [eax]
  43050e:	add    BYTE PTR [eax],al
  430510:	dec    esp
  430511:	add    BYTE PTR [eax],al
  430513:	add    BYTE PTR [eax-0x77fffcd0],cl
  430519:	sbb    al,0x3
  43051b:	add    ah,dl
  43051d:	xor    BYTE PTR [ebx+0x0],al
  430520:	pop    esp
  430521:	push   eax
  430522:	inc    edx
  430523:	add    BYTE PTR [eax],ch
  430525:	cli    
  430526:	inc    ebx
  430527:	add    BYTE PTR [eax+0x4c0043fa],al
  43052d:	cmp    DWORD PTR [ebx+0x0],eax
  430530:	pusha  
  430531:	add    eax,0xf0b00042
  430536:	inc    ecx
  430537:	add    BYTE PTR [ecx+esi*1],bl
  43053a:	inc    ebx
  43053b:	add    al,ah
  43053d:	pop    edx
  43053e:	inc    edx
  43053f:	add    BYTE PTR [eax],ah
  430541:	pop    ebx
  430542:	inc    edx
  430543:	add    BYTE PTR [edx],bh
  430545:	and    BYTE PTR [eax],al
  430547:	add    BYTE PTR [edx+0x6f],ah
  43054a:	outs   dx,DWORD PTR ds:[esi]
  43054b:	jae    0x4305c1
  43054d:	cmp    bh,BYTE PTR [edx]
  43054f:	imul   bp,WORD PTR [ebp+eiz*2+0x73],0x7379
  430556:	je     0x4305bd
  430558:	ins    DWORD PTR es:[edi],dx
  430559:	cmp    bh,BYTE PTR [edx]
  43055b:	jo     0x4305be
  43055d:	je     0x4305c7
  43055f:	and    BYTE PTR [ebx+0x6f],ah
  430562:	fs arpl WORD PTR gs:[esi+0x74],si
  430567:	and    BYTE PTR [edi+ebp*2+0x20],dh
  43056b:	ja     0x4305e0
  43056d:	je     0x4305e1
  43056f:	imul   ebp,DWORD PTR [esi+0x67],0x6f620000
  430576:	outs   dx,DWORD PTR ds:[esi]
  430577:	jae    0x4305ed
  430579:	cmp    bh,BYTE PTR [edx]
  43057b:	imul   bp,WORD PTR [ebp+eiz*2+0x73],0x7379
  430582:	je     0x4305e9
  430584:	ins    DWORD PTR es:[edi],dx
  430585:	cmp    bh,BYTE PTR [edx]
  430587:	jo     0x4305ea
  430589:	je     0x4305f3
  43058b:	and    BYTE PTR [ebx+0x6f],ah
  43058e:	fs arpl WORD PTR gs:[esi+0x74],si
  430593:	and    BYTE PTR [edi+ebp*2+0x20],dh
  430597:	jae    0x43060d
  430599:	jb     0x430604
  43059b:	outs   dx,BYTE PTR ds:[esi]
  43059c:	add    BYTE PTR [bx+si],al
  43059f:	add    BYTE PTR [edi],ch
  4305a1:	add    BYTE PTR [eax+eax*1+0x0],bl
  4305a5:	add    BYTE PTR [eax],al
  4305a7:	add    BYTE PTR [eax+0x6c004305],ah
  4305ad:	xor    DWORD PTR [ebx+0x0],eax
  4305b0:	and    BYTE PTR [edi+0x42],ah
  4305b3:	add    BYTE PTR [eax],dh
  4305b5:	popa   
  4305b6:	inc    edx
  4305b7:	add    BYTE PTR [eax+0x61],al
  4305ba:	inc    edx
  4305bb:	add    BYTE PTR [eax+0x61],al
  4305be:	inc    edx
  4305bf:	add    al,dh
  4305c1:	xchg   edx,eax
  4305c2:	inc    edx
  4305c3:	add    BYTE PTR [eax-0x6d],dl
  4305c6:	inc    edx
  4305c7:	add    BYTE PTR [eax+0x61],dl
  4305ca:	inc    edx
  4305cb:	add    BYTE PTR [edx-0x62],ch
  4305ce:	inc    edx
  4305cf:	add    BYTE PTR [eax+0x61],dl
  4305d2:	inc    edx
  4305d3:	add    BYTE PTR [edx],ch
  4305d5:	add    BYTE PTR [eax],al
  4305d7:	add    BYTE PTR [eax+0x32],ch
  4305da:	inc    ebx
  4305db:	add    al,dh
  4305dd:	gs inc edx
  4305df:	add    BYTE PTR [esi],ch
  4305e1:	add    BYTE PTR [esi],ch
  4305e3:	add    BYTE PTR [eax],al
  4305e5:	add    BYTE PTR [eax],al
  4305e7:	add    BYTE PTR [eax+0x4335],dl
  4305ed:	sub    eax,DWORD PTR [eax+0x0]
  4305f0:	test   al,0x50
  4305f2:	inc    edx
  4305f3:	add    BYTE PTR [ebp+esi*1+0x43],al
  4305f7:	add    BYTE PTR [eax],al
  4305f9:	xchg   esi,eax
  4305fa:	inc    eax
  4305fb:	add    BYTE PTR [eax-0xbffbe10],dh
  430601:	xor    al,0x43
  430603:	add    BYTE PTR [eax],al
  430605:	xchg   esi,eax
  430606:	inc    eax
  430607:	add    BYTE PTR [eax+0x400041f0],dh
  43060d:	inc    esp
  43060e:	inc    ebx
  43060f:	add    BYTE PTR [eax-0x64],dl
  430612:	inc    ecx
  430613:	add    BYTE PTR [esi+0x4250],ch
  430619:	scas   eax,DWORD PTR es:[edi]
  43061a:	inc    eax
  43061b:	add    BYTE PTR [esi+0x5c004250],ch
  430621:	add    BYTE PTR [edx],ch
  430623:	add    BYTE PTR [eax],al
  430625:	add    BYTE PTR [eax],al
  430627:	add    BYTE PTR [edx],ch
  430629:	add    BYTE PTR [eax],al
  43062b:	add    ah,ch
  43062d:	inc    esp
  43062e:	inc    ebx
  43062f:	add    BYTE PTR [eax-0x64],dl
  430632:	inc    ecx
  430633:	add    al,ah
  430635:	fwait
  430636:	inc    ecx
  430637:	add    BYTE PTR [eax],al
  430639:	scas   eax,DWORD PTR es:[edi]
  43063a:	inc    eax
  43063b:	add    BYTE PTR [eax],ah
  43063d:	pushf  
  43063e:	inc    ecx
  43063f:	add    BYTE PTR [edx+esi*1+0x71f00043],dh
  430646:	inc    edx
  430647:	add    BYTE PTR [eax],ah
  430649:	je     0x43068d
  43064b:	add    BYTE PTR [eax],al
  43064d:	scas   eax,DWORD PTR es:[edi]
  43064e:	inc    eax
  43064f:	add    BYTE PTR [eax],dh
  430651:	jo     0x430695
  430653:	add    BYTE PTR [eax],al
  430655:	xor    eax,DWORD PTR [ebx+0x0]
  430658:	jo     0x4306d1
  43065a:	inc    edx
  43065b:	add    BYTE PTR [eax],al
  43065d:	jbe    0x4306a1
  43065f:	add    BYTE PTR [eax+eiz*1],ch
  430662:	and    al,BYTE PTR [eax]
  430664:	and    al,BYTE PTR [eax]
  430666:	add    BYTE PTR [eax],al
  430668:	cmp    ah,BYTE PTR [eax]
  43066a:	and    al,BYTE PTR [eax]
  43066c:	bound  ebp,QWORD PTR [edi+0x6f]
  43066f:	jae    0x4306e5
  430671:	cmp    bh,BYTE PTR [edx]
  430673:	imul   bp,WORD PTR [ebp+eiz*2+0x73],0x7379
  43067a:	je     0x4306e1
  43067c:	ins    DWORD PTR es:[edi],dx
  43067d:	cmp    bh,BYTE PTR [edx]
  43067f:	jb     0x4306e6
  430681:	ins    DWORD PTR es:[edi],dx
  430682:	outs   dx,DWORD PTR ds:[esi]
  430683:	jbe    0x4306ea
  430685:	add    BYTE PTR [eax],al
  430687:	add    BYTE PTR [edx+0x6f],ah
  43068a:	outs   dx,DWORD PTR ds:[esi]
  43068b:	jae    0x430701
  43068d:	cmp    bh,BYTE PTR [edx]
  43068f:	imul   bp,WORD PTR [ebp+eiz*2+0x73],0x7379
  430696:	je     0x4306fd
  430698:	ins    DWORD PTR es:[edi],dx
  430699:	cmp    bh,BYTE PTR [edx]
  43069b:	jae    0x430711
  43069d:	popa   
  43069e:	je     0x430715
  4306a0:	jae    0x4306a2
  4306a2:	add    BYTE PTR [eax],al
  4306a4:	bound  ebp,QWORD PTR [edi+0x6f]
  4306a7:	jae    0x43071d
  4306a9:	cmp    bh,BYTE PTR [edx]
  4306ab:	imul   bp,WORD PTR [ebp+eiz*2+0x73],0x7379
  4306b2:	je     0x430719
  4306b4:	ins    DWORD PTR es:[edi],dx
  4306b5:	cmp    bh,BYTE PTR [edx]
  4306b7:	arpl   WORD PTR [edi+0x70],bp
  4306ba:	jns    0x43071b
  4306bc:	imul   esi,DWORD PTR fs:[edx+0x65],0x726f7463
  4306c4:	jns    0x4306c6
  4306c6:	add    BYTE PTR [eax],al
  4306c8:	bound  ebp,QWORD PTR [edi+0x6f]
  4306cb:	jae    0x430741
  4306cd:	cmp    bh,BYTE PTR [edx]
  4306cf:	imul   bp,WORD PTR [ebp+eiz*2+0x73],0x7379
  4306d6:	je     0x43073d
  4306d8:	ins    DWORD PTR es:[edi],dx
  4306d9:	cmp    bh,BYTE PTR [edx]
  4306db:	arpl   WORD PTR [edi+0x70],bp
  4306de:	jns    0x43073f
  4306e0:	imul   bp,WORD PTR [ebp+eiz*2+0x0],0x0
  4306e7:	add    BYTE PTR [edx+0x6f],ah
  4306ea:	outs   dx,DWORD PTR ds:[esi]
  4306eb:	jae    0x430761
  4306ed:	cmp    bh,BYTE PTR [edx]
  4306ef:	imul   bp,WORD PTR [ebp+eiz*2+0x73],0x7379
  4306f6:	je     0x43075d
  4306f8:	ins    DWORD PTR es:[edi],dx
  4306f9:	cmp    bh,BYTE PTR [edx]
  4306fb:	arpl   WORD PTR [edx+0x65],si
  4306fe:	popa   
  4306ff:	je     0x430766
  430701:	pop    edi
  430702:	jae    0x43077d
  430704:	ins    DWORD PTR es:[edi],dx
  430705:	ins    BYTE PTR es:[edi],dx
  430706:	imul   ebp,DWORD PTR [esi+0x6b],0x62000000
  43070d:	outs   dx,DWORD PTR ds:[esi]
  43070e:	outs   dx,DWORD PTR ds:[esi]
  43070f:	jae    0x430785
  430711:	cmp    bh,BYTE PTR [edx]
  430713:	imul   bp,WORD PTR [ebp+eiz*2+0x73],0x7379
  43071a:	je     0x430781
  43071c:	ins    DWORD PTR es:[edi],dx
  43071d:	cmp    bh,BYTE PTR [edx]
  43071f:	jb     0x430786
  430721:	popa   
  430722:	fs pop edi
  430724:	jae    0x43079f
  430726:	ins    DWORD PTR es:[edi],dx
  430727:	ins    BYTE PTR es:[edi],dx
  430728:	imul   ebp,DWORD PTR [esi+0x6b],0x6f6f6200
  43072f:	jae    0x4307a5
  430731:	cmp    bh,BYTE PTR [edx]
  430733:	imul   bp,WORD PTR [ebp+eiz*2+0x73],0x7379
  43073a:	je     0x4307a1
  43073c:	ins    DWORD PTR es:[edi],dx
  43073d:	cmp    bh,BYTE PTR [edx]
  43073f:	imul   esi,DWORD PTR fs:[edx+0x65],0x726f7463
  430747:	jns    0x4307a8
  430749:	imul   esi,DWORD PTR [ebp+eiz*2+0x72],0x726f7461
  430751:	cmp    bh,BYTE PTR [edx]
  430753:	outs   dx,DWORD PTR ds:[esi]
  430754:	jo     0x4307bb
  430756:	jb     0x4307b9
  430758:	je     0x4307c9
  43075a:	jb     0x430787
  43075c:	sub    eax,DWORD PTR [eax]
  43075e:	add    BYTE PTR [eax],al
  430760:	bound  ebp,QWORD PTR [edi+0x6f]
  430763:	jae    0x4307d9
  430765:	cmp    bh,BYTE PTR [edx]
  430767:	imul   bp,WORD PTR [ebp+eiz*2+0x73],0x7379
  43076e:	je     0x4307d5
  430770:	ins    DWORD PTR es:[edi],dx
  430771:	cmp    bh,BYTE PTR [edx]
  430773:	arpl   WORD PTR [edx+0x65],si
  430776:	popa   
  430777:	je     0x4307de
  430779:	pop    edi
  43077a:	imul   esi,DWORD PTR fs:[edx+0x65],0x726f7463
  430782:	jns    0x430784
  430784:	bound  ebp,QWORD PTR [edi+0x6f]
  430787:	jae    0x4307fd
  430789:	cmp    bh,BYTE PTR [edx]
  43078b:	imul   bp,WORD PTR [ebp+eiz*2+0x73],0x7379
  430792:	je     0x4307f9
  430794:	ins    DWORD PTR es:[edi],dx
  430795:	cmp    bh,BYTE PTR [edx]
  430797:	imul   esi,DWORD PTR fs:[edx+0x65],0x726f7463
  43079f:	jns    0x430800
  4307a1:	imul   esi,DWORD PTR [ebp+eiz*2+0x72],0x726f7461
  4307a9:	cmp    bh,BYTE PTR [edx]
  4307ab:	arpl   WORD PTR [edi+0x6e],bp
  4307ae:	jae    0x430824
  4307b0:	jb     0x430827
  4307b2:	arpl   WORD PTR [eax+eax*1+0x0],si
  4307b6:	add    BYTE PTR [eax],al
  4307b8:	bound  ebp,QWORD PTR [edi+0x6f]
  4307bb:	jae    0x430831
  4307bd:	cmp    bh,BYTE PTR [edx]
  4307bf:	imul   bp,WORD PTR [ebp+eiz*2+0x73],0x7379
  4307c6:	je     0x43082d
  4307c8:	ins    DWORD PTR es:[edi],dx
  4307c9:	cmp    bh,BYTE PTR [edx]
  4307cb:	arpl   WORD PTR [edi+0x70],bp
  4307ce:	jns    0x4307d0
  4307d0:	bound  ebp,QWORD PTR [edi+0x6f]
  4307d3:	jae    0x430849
  4307d5:	cmp    bh,BYTE PTR [edx]
  4307d7:	imul   bp,WORD PTR [ebp+eiz*2+0x73],0x7379
  4307de:	je     0x430845
  4307e0:	ins    DWORD PTR es:[edi],dx
  4307e1:	cmp    bh,BYTE PTR [edx]
  4307e3:	jb     0x43084a
  4307e5:	ins    DWORD PTR es:[edi],dx
  4307e6:	outs   dx,DWORD PTR ds:[esi]
  4307e7:	jbe    0x43084e
  4307e9:	pop    edi
  4307ea:	popa   
  4307eb:	ins    BYTE PTR es:[edi],dx
  4307ec:	ins    BYTE PTR es:[edi],dx
  4307ed:	add    BYTE PTR [eax],al
  4307ef:	add    BYTE PTR [ebx+0x65],ch
  4307f2:	jb     0x430862
  4307f4:	gs ins BYTE PTR es:[edi],dx
  4307f6:	xor    esi,DWORD PTR [edx]
  4307f8:	cs fs ins BYTE PTR es:[edi],dx
  4307fb:	ins    BYTE PTR es:[edi],dx
  4307fc:	add    BYTE PTR [eax],al
  4307fe:	add    BYTE PTR [eax],al
  430800:	inc    ebx
  430801:	jb     0x430868
  430803:	popa   
  430804:	je     0x43086b
  430806:	dec    eax
  430807:	popa   
  430808:	jb     0x43086e
  43080a:	dec    esp
  43080b:	imul   ebp,DWORD PTR [esi+0x6b],0x72430057
  430812:	gs popa 
  430814:	je     0x43087b
  430816:	push   ebx
  430817:	jns    0x430886
  430819:	bound  ebp,QWORD PTR [edi+0x6c]
  43081c:	imul   esp,DWORD PTR [ebx+0x4c],0x576b6e69
  430823:	add    BYTE PTR [ebx+esi*1+0x43],dl
  430827:	add    BYTE PTR [eax-0x51ffbd6b],ah
  43082d:	push   eax
  43082e:	inc    edx
  43082f:	add    BYTE PTR [esi+0x40004250],ch
  430835:	xchg   ecx,eax
  430836:	inc    edx
  430837:	add    BYTE PTR [eax+0x50004291],dl
  43083d:	xchg   ecx,eax
  43083e:	inc    edx
  43083f:	add    BYTE PTR [ebx+0x6f],ah
  430842:	fs arpl WORD PTR gs:[esi+0x74],si
  430847:	add    BYTE PTR [ebp+0x6e],dh
  43084a:	imul   ebp,DWORD PTR [esi+0x6f],0x77
  43084e:	outs   dx,BYTE PTR ds:[esi]
  43084f:	and    BYTE PTR [ebp+0x72],ah
  430852:	jb     0x4308c3
  430854:	jb     0x430856
  430856:	add    BYTE PTR [eax],al
  430858:	outs   dx,BYTE PTR ds:[esi]
  430859:	outs   dx,DWORD PTR ds:[esi]
  43085a:	arpl   WORD PTR [edi+0x6e],bp
  43085d:	jbe    0x43085f
  43085f:	add    BYTE PTR [ebp+0x72],ah
  430862:	jb     0x4308d3
  430864:	jb     0x430866
  430866:	add    BYTE PTR [eax],al
  430868:	jo     0x4308cb
  43086a:	jb     0x4308e0
  43086c:	imul   esp,DWORD PTR [ecx+0x6c],0x6b6f00
  430873:	add    al,dh
  430875:	xor    eax,DWORD PTR [ebx+0x0]
  430878:	mov    al,ds:0xb0004295
  43087d:	xchg   ecx,eax
  43087e:	inc    edx
  43087f:	add    al,al
  430881:	xchg   ecx,eax
  430882:	inc    edx
  430883:	add    BYTE PTR [eax-0x6f],al
  430886:	inc    edx
  430887:	add    BYTE PTR [eax+0x50004291],dl
  43088d:	xchg   ecx,eax
  43088e:	inc    edx
  43088f:	add    BYTE PTR [eax+0x34],al
  430892:	inc    ebx
  430893:	add    BYTE PTR [eax-0x1fffbd6b],ah
  430899:	xchg   ebx,eax
  43089a:	inc    edx
  43089b:	add    al,dh
  43089d:	xchg   ebx,eax
  43089e:	inc    edx
  43089f:	add    BYTE PTR [eax-0x6fffbd69],al
  4308a5:	xchg   ecx,eax
  4308a6:	inc    edx
  4308a7:	add    BYTE PTR [eax-0x6f],dl
  4308aa:	inc    edx
  4308ab:	add    BYTE PTR [edi+0x65],ah
  4308ae:	outs   dx,BYTE PTR ds:[esi]
  4308af:	gs jb  0x43091b
  4308b2:	arpl   WORD PTR [eax],ax
  4308b4:	jae    0x43092f
  4308b6:	jae    0x43092c
  4308b8:	gs ins DWORD PTR es:[edi],dx
  4308ba:	add    BYTE PTR [eax],al
  4308bc:	push   ebp
  4308bd:	outs   dx,BYTE PTR ds:[esi]
  4308be:	imul   ebp,DWORD PTR [esi+0x6f],0x77
  4308c2:	outs   dx,BYTE PTR ds:[esi]
  4308c3:	and    BYTE PTR [ebp+0x72],ah
  4308c6:	jb     0x430937
  4308c8:	jb     0x4308ca
  4308ca:	add    BYTE PTR [eax],al
  4308cc:	nop
  4308cd:	xor    al,0x43
  4308cf:	add    BYTE PTR [eax-0x2fffbd6b],ah
  4308d5:	xchg   ebx,eax
  4308d6:	inc    edx
  4308d7:	add    al,al
  4308d9:	xchg   ebp,eax
  4308da:	inc    edx
  4308db:	add    BYTE PTR [eax-0x6f],al
  4308de:	inc    edx
  4308df:	add    BYTE PTR [eax+0x50004291],dl
  4308e5:	xchg   ecx,eax
  4308e6:	inc    edx
  4308e7:	add    BYTE PTR [ebx+0x6f],ah
  4308ea:	ins    DWORD PTR es:[edi],dx
  4308eb:	cs jne 0x430957
  4308ee:	cs jo  0x43095d
  4308f1:	jne    0x43095a
  4308f3:	imul   ebp,DWORD PTR [esi+0x2e],0x676e616c
  4308fa:	jne    0x43095d
  4308fc:	add    BYTE PTR gs:[bx+si],al
  430900:	arpl   WORD PTR [edi+0x6d],bp
  430903:	cs jne 0x43096f
  430906:	cs jne 0x430972
  430909:	jae    0x430973
  43090b:	popa   
  43090c:	outs   dx,DWORD PTR fs:[esi]
  43090e:	ja     0x430978
  430910:	outs   dx,DWORD PTR ds:[esi]
  430911:	jae    0x430987
  430913:	add    BYTE PTR [ebx+0x6f],ah
  430916:	ins    DWORD PTR es:[edi],dx
  430917:	cs jne 0x430983
  43091a:	cs jne 0x430986
  43091d:	push   0x74736f
  430922:	add    BYTE PTR [eax],al
  430924:	bound  esp,QWORD PTR [ecx+0x64]
  430927:	and    BYTE PTR [ecx+0x6c],ah
  43092a:	ins    BYTE PTR es:[edi],dx
  43092b:	outs   dx,DWORD PTR ds:[esi]
  43092c:	arpl   WORD PTR [ecx+0x74],sp
  43092f:	imul   ebp,DWORD PTR [edi+0x6e],0x6f630000
  430936:	ins    DWORD PTR es:[edi],dx
  430937:	cs jne 0x4309a3
  43093a:	imul   bp,WORD PTR cs:[ebp+eiz*2+0x2e],0x616d
  430942:	outs   dx,BYTE PTR ds:[esi]
  430943:	popa   
  430944:	addr16 gs jb 0x430948
  430948:	push   esp
  430949:	push   edx
  43094a:	inc    ecx
  43094b:	inc    ebx
  43094c:	inc    ebp
  43094d:	add    BYTE PTR [eax],al
  43094f:	add    BYTE PTR [ebp+eax*2+0x42],al
  430953:	push   ebp
  430954:	inc    edi
  430955:	add    BYTE PTR [eax],al
  430957:	add    BYTE PTR [ecx+0x4e],cl
  43095a:	inc    esi
  43095b:	dec    edi
  43095c:	add    BYTE PTR [eax],al
  43095e:	add    BYTE PTR [eax],al
  430960:	push   edi
  430961:	inc    ecx
  430962:	push   edx
  430963:	dec    esi
  430964:	dec    ecx
  430965:	dec    esi
  430966:	inc    edi
  430967:	add    BYTE PTR [ebp+0x52],al
  43096a:	push   edx
  43096b:	dec    edi
  43096c:	push   edx
  43096d:	add    BYTE PTR [eax],al
  43096f:	add    BYTE PTR [esi+0x41],al
  430972:	push   esp
  430973:	inc    ecx
  430974:	dec    esp
  430975:	add    BYTE PTR [eax],al
  430977:	add    BYTE PTR [ecx+ecx*2+0x53],al
  43097b:	push   eax
  43097c:	dec    esp
  43097d:	inc    ecx
  43097e:	pop    ecx
  43097f:	add    BYTE PTR [ebx+0x6f],ah
  430982:	ins    DWORD PTR es:[edi],dx
  430983:	cs jne 0x4309ef
  430986:	cs jae 0x4309f4
  430989:	imul   ebp,DWORD PTR [esi+0x2e],0x616e616d
  430990:	addr16 gs jb 0x430994
  430994:	arpl   WORD PTR [edi+0x6d],bp
  430997:	cs jne 0x430a03
  43099a:	imul   bp,WORD PTR cs:[ebp+eiz*2+0x2e],0x616d
  4309a2:	outs   dx,BYTE PTR ds:[esi]
  4309a3:	popa   
  4309a4:	addr16 gs jb 0x4309a8
  4309a8:	push   esp
  4309a9:	push   edx
  4309aa:	inc    ecx
  4309ab:	inc    ebx
  4309ac:	inc    ebp
  4309ad:	add    BYTE PTR [eax],al
  4309af:	add    BYTE PTR [ebp+eax*2+0x42],al
  4309b3:	push   ebp
  4309b4:	inc    edi
  4309b5:	add    BYTE PTR [eax],al
  4309b7:	add    BYTE PTR [ecx+0x4e],cl
  4309ba:	inc    esi
  4309bb:	dec    edi
  4309bc:	add    BYTE PTR [eax],al
  4309be:	add    BYTE PTR [eax],al
  4309c0:	push   edi
  4309c1:	inc    ecx
  4309c2:	push   edx
  4309c3:	dec    esi
  4309c4:	dec    ecx
  4309c5:	dec    esi
  4309c6:	inc    edi
  4309c7:	add    BYTE PTR [ebp+0x52],al
  4309ca:	push   edx
  4309cb:	dec    edi
  4309cc:	push   edx
  4309cd:	add    BYTE PTR [eax],al
  4309cf:	add    BYTE PTR [esi+0x41],al
  4309d2:	push   esp
  4309d3:	inc    ecx
  4309d4:	dec    esp
  4309d5:	add    BYTE PTR [eax],al
  4309d7:	add    BYTE PTR [ecx+ecx*2+0x53],al
  4309db:	push   eax
  4309dc:	dec    esp
  4309dd:	inc    ecx
  4309de:	pop    ecx
  4309df:	add    BYTE PTR [ebx+0x6f],ah
  4309e2:	ins    DWORD PTR es:[edi],dx
  4309e3:	cs jne 0x430a4f
  4309e6:	cs ins BYTE PTR es:[edi],dx
  4309e8:	popa   
  4309e9:	jns    0x430a5a
  4309eb:	jne    0x430a61
  4309ed:	add    BYTE PTR [eax],al
  4309ef:	add    BYTE PTR [ebx+0x6f],ah
  4309f2:	ins    DWORD PTR es:[edi],dx
  4309f3:	cs jne 0x430a5f
  4309f6:	cs js  0x430a66
  4309f9:	ins    BYTE PTR es:[edi],dx
  4309fa:	bound  esi,QWORD PTR cs:[ebp+0x69]
  4309fe:	ins    BYTE PTR es:[edi],dx
  4309ff:	fs gs jb 0x430a03
  430a03:	add    BYTE PTR [edx+edx*2+0x41],dl
  430a07:	inc    ebx
  430a08:	inc    ebp
  430a09:	add    BYTE PTR [eax],al
  430a0b:	add    BYTE PTR [ebp+eax*2+0x42],al
  430a0f:	push   ebp
  430a10:	inc    edi
  430a11:	add    BYTE PTR [eax],al
  430a13:	add    BYTE PTR [ecx+0x4e],cl
  430a16:	inc    esi
  430a17:	dec    edi
  430a18:	add    BYTE PTR [eax],al
  430a1a:	add    BYTE PTR [eax],al
  430a1c:	push   edi
  430a1d:	inc    ecx
  430a1e:	push   edx
  430a1f:	dec    esi
  430a20:	dec    ecx
  430a21:	dec    esi
  430a22:	inc    edi
  430a23:	add    BYTE PTR [ebp+0x52],al
  430a26:	push   edx
  430a27:	dec    edi
  430a28:	push   edx
  430a29:	add    BYTE PTR [eax],al
  430a2b:	add    BYTE PTR [esi+0x41],al
  430a2e:	push   esp
  430a2f:	inc    ecx
  430a30:	dec    esp
  430a31:	add    BYTE PTR [eax],al
  430a33:	add    BYTE PTR [ecx+ecx*2+0x53],al
  430a37:	push   eax
  430a38:	dec    esp
  430a39:	inc    ecx
  430a3a:	pop    ecx
  430a3b:	add    BYTE PTR [edx+edx*2+0x41],dl
  430a3f:	inc    ebx
  430a40:	inc    ebp
  430a41:	add    BYTE PTR [eax],al
  430a43:	add    BYTE PTR [ebp+eax*2+0x42],al
  430a47:	push   ebp
  430a48:	inc    edi
  430a49:	add    BYTE PTR [eax],al
  430a4b:	add    BYTE PTR [ecx+0x4e],cl
  430a4e:	inc    esi
  430a4f:	dec    edi
  430a50:	add    BYTE PTR [eax],al
  430a52:	add    BYTE PTR [eax],al
  430a54:	push   edi
  430a55:	inc    ecx
  430a56:	push   edx
  430a57:	dec    esi
  430a58:	dec    ecx
  430a59:	dec    esi
  430a5a:	inc    edi
  430a5b:	add    BYTE PTR [ebp+0x52],al
  430a5e:	push   edx
  430a5f:	dec    edi
  430a60:	push   edx
  430a61:	add    BYTE PTR [eax],al
  430a63:	add    BYTE PTR [esi+0x41],al
  430a66:	push   esp
  430a67:	inc    ecx
  430a68:	dec    esp
  430a69:	add    BYTE PTR [eax],al
  430a6b:	add    BYTE PTR [ecx+ecx*2+0x53],al
  430a6f:	push   eax
  430a70:	dec    esp
  430a71:	inc    ecx
  430a72:	pop    ecx
  430a73:	add    BYTE PTR [ebp+0x0],dh
  430a76:	jo     0x430a78
  430a78:	add    BYTE PTR fs:[ecx+0x0],ah
  430a7c:	je     0x430a7e
  430a7e:	add    BYTE PTR gs:[eax+eax*1+0x6c],bl
  430a83:	add    BYTE PTR [ecx+0x0],ch
  430a86:	bound  eax,QWORD PTR [eax]
  430a88:	pop    esp
  430a89:	add    BYTE PTR [eax],al
  430a8b:	add    BYTE PTR [ebx+0x6f],ah
  430a8e:	ins    DWORD PTR es:[edi],dx
  430a8f:	bound  esi,QWORD PTR cs:[ecx+eiz*2+0x6c]
  430a94:	imul   ebp,DWORD PTR [esi],0x69
  430a97:	jo     0x430afc
  430a99:	arpl   WORD PTR cs:[ecx+ebp*2+0x65],bp
  430a9e:	outs   dx,BYTE PTR ds:[esi]
  430a9f:	je     0x430b0e
  430aa1:	popa   
  430aa2:	outs   dx,BYTE PTR ds:[esi]
  430aa3:	popa   
  430aa4:	addr16 gs jb 0x430aa8
  430aa8:	arpl   WORD PTR [edi+0x6d],bp
  430aab:	bound  esi,QWORD PTR cs:[ecx+eiz*2+0x6c]
  430ab0:	imul   ebp,DWORD PTR [esi],0x69
  430ab3:	jo     0x430b18
  430ab5:	arpl   WORD PTR cs:[ecx+ebp*2+0x65],bp
  430aba:	outs   dx,BYTE PTR ds:[esi]
  430abb:	je     0x430abd
  430abd:	add    BYTE PTR [eax],al
  430abf:	add    BYTE PTR [ebx+0x6f],ah
  430ac2:	ins    DWORD PTR es:[edi],dx
  430ac3:	ins    DWORD PTR es:[edi],dx
  430ac4:	outs   dx,DWORD PTR ds:[esi]
  430ac5:	outs   dx,BYTE PTR ds:[esi]
  430ac6:	cs ins DWORD PTR es:[edi],dx
  430ac8:	gs jae 0x430b3e
  430acb:	popa   
  430acc:	gs cs ins BYTE PTR es:[di],dx
  430ad0:	outs   dx,DWORD PTR ds:[esi]
  430ad1:	outs   dx,DWORD PTR ds:[esi]
  430ad2:	jo     0x430b02
  430ad4:	ins    DWORD PTR es:[edi],dx
  430ad5:	gs jae 0x430b4b
  430ad8:	popa   
  430ad9:	addr16 gs jb 0x430add
  430add:	add    BYTE PTR [eax],al
  430adf:	add    BYTE PTR [edx+0x0],al
  430ae2:	add    BYTE PTR [eax],al
  430ae4:	add    BYTE PTR [eax],al
  430ae6:	add    BYTE PTR [eax],al
  430ae8:	sub    eax,0x61006800
  430aed:	add    BYTE PTR [esi+0x0],ch
  430af0:	add    BYTE PTR fs:[ebx+0x0],dh
  430af4:	data16 add BYTE PTR [edx+0x0],dh
  430af8:	add    BYTE PTR gs:[ebp+0x0],ah
  430afc:	add    BYTE PTR [eax],al
  430afe:	add    BYTE PTR [eax],al
  430b00:	sub    eax,0x70007500
  430b05:	add    BYTE PTR [eax+eax*1+0x61],ah
  430b09:	add    BYTE PTR [eax+eax*1+0x65],dh
  430b0d:	add    BYTE PTR [edi+0x0],bl
  430b10:	popa   
  430b11:	add    BYTE PTR [ebp+0x0],dh
  430b14:	je     0x430b16
  430b16:	outs   dx,DWORD PTR ds:[esi]
  430b17:	add    BYTE PTR [edi+0x0],bl
  430b1a:	arpl   WORD PTR [eax],ax
  430b1c:	ins    BYTE PTR es:[edi],dx
  430b1d:	add    BYTE PTR [edi+0x0],ch
  430b20:	jae    0x430b22
  430b22:	add    BYTE PTR gs:[eax],al
  430b25:	add    BYTE PTR [eax],al
  430b27:	add    BYTE PTR ds:0x70007500,ch
  430b2d:	add    BYTE PTR [edi+0x0],ah
  430b30:	jb     0x430b32
  430b32:	popa   
  430b33:	add    BYTE PTR [eax+eax*1+0x65],ah
  430b37:	add    BYTE PTR [edi+0x0],bl
  430b3a:	imul   eax,DWORD PTR [eax],0x64006e
  430b40:	add    BYTE PTR [eax],al
  430b42:	add    BYTE PTR [eax],al
  430b44:	fs gs jno 0x430bbd
  430b48:	gs cmp al,0x54
  430b4b:	and    BYTE PTR ds:[edi+ebp*2+0x6f],dh
  430b50:	and    BYTE PTR [edi+ebp*2+0x6e],ch
  430b54:	add    BYTE PTR [bx+si],al
  430b57:	add    BYTE PTR [esi+esi*1],ah
  430b5a:	inc    ebx
  430b5b:	add    BYTE PTR [eax-0x5fffbfef],al
  430b61:	sub    DWORD PTR [eax+0x0],eax
  430b64:	mov    al,ds:0x70004029
  430b69:	push   edi
  430b6a:	inc    eax
  430b6b:	add    BYTE PTR [eax-0x4fffbfd7],ah
  430b71:	mov    al,0x40
  430b73:	add    BYTE PTR [eax],dl
  430b75:	ss inc ebx
  430b77:	add    BYTE PTR [eax-0x5fffbfef],al
  430b7d:	sub    DWORD PTR [eax+0x0],eax
  430b80:	mov    al,ds:0xa0004029
  430b85:	sub    DWORD PTR [eax+0x0],eax
  430b88:	mov    al,ds:0xb0004029
  430b8d:	mov    al,0x40
  430b8f:	add    al,ah
  430b91:	xor    al,0x43
  430b93:	add    BYTE PTR [eax],ah
  430b95:	sub    al,BYTE PTR [eax+0x0]
  430b98:	mov    al,ds:0xa0004029
  430b9d:	sub    DWORD PTR [eax+0x0],eax
  430ba0:	mov    al,ds:0xa0004029
  430ba5:	sub    DWORD PTR [eax+0x0],eax
  430ba8:	mov    al,0xb0
  430baa:	inc    eax
  430bab:	add    BYTE PTR [edx+0x6f],ah
  430bae:	outs   dx,DWORD PTR ds:[esi]
  430baf:	jae    0x430c25
  430bb1:	cmp    bh,BYTE PTR [edx]
  430bb3:	je     0x430c1d
  430bb5:	jb     0x430c1c
  430bb7:	popa   
  430bb8:	fs pop edi
  430bba:	jb     0x430c21
  430bbc:	jae    0x430c2d
  430bbe:	jne    0x430c32
  430bc0:	arpl   WORD PTR [ebp+0x5f],sp
  430bc3:	gs jb  0x430c38
  430bc6:	outs   dx,DWORD PTR ds:[esi]
  430bc7:	jb     0x430bc9
  430bc9:	add    BYTE PTR [eax],al
  430bcb:	add    al,dh
  430bcd:	cmp    BYTE PTR [ebx+0x0],al
  430bd0:	scas   al,BYTE PTR es:[edi]
  430bd1:	push   eax
  430bd2:	inc    edx
  430bd3:	add    BYTE PTR [eax-0x51ffbcc8],ch
  430bd9:	push   eax
  430bda:	inc    edx
  430bdb:	add    BYTE PTR [esi+0x4250],ch
  430be1:	xor    DWORD PTR [eax+0x0],eax
  430be4:	pop    esp
  430be5:	cmp    BYTE PTR [ebx+0x0],al
  430be8:	xor    BYTE PTR [ecx],0x40
  430beb:	add    BYTE PTR [eax+0xc004250],ch
  430bf1:	cmp    BYTE PTR [ebx+0x0],al
  430bf4:	xor    BYTE PTR [ecx],0x40
  430bf7:	add    BYTE PTR [eax-0x67ffbfcf],dh
  430bfd:	aaa    
  430bfe:	inc    ebx
  430bff:	add    BYTE PTR [eax],dh
  430c01:	das    
  430c02:	inc    eax
  430c03:	add    BYTE PTR [eax-0x7bffbfcf],dh
  430c09:	aaa    
  430c0a:	inc    ebx
  430c0b:	add    BYTE PTR [eax+0x800402f],dl
  430c11:	aaa    
  430c12:	inc    ebx
  430c13:	add    BYTE PTR [eax-0x4fffbfd2],dl
  430c19:	xor    DWORD PTR [eax+0x0],eax
  430c1c:	hlt    
  430c1d:	ss inc ebx
  430c1f:	add    al,al
  430c21:	sub    eax,0x36e00040
  430c26:	inc    ebx
  430c27:	add    al,dl
  430c29:	sub    eax,0x2e500040
  430c2e:	inc    eax
  430c2f:	add    al,dh
  430c31:	cs inc eax
  430c33:	add    BYTE PTR [ebp+0x69],dh
  430c36:	add    BYTE PTR [eax],al
  430c38:	outs   dx,BYTE PTR ds:[esi]
  430c39:	gs je  0x430c3c
  430c3c:	dec    esp
  430c3d:	outs   dx,DWORD PTR ds:[esi]
  430c3e:	outs   dx,DWORD PTR ds:[esi]
  430c3f:	jo     0x430c8f
  430c41:	push   ebx
  430c42:	cmp    bh,BYTE PTR [edx]
  430c44:	inc    ebx
  430c45:	push   esp
  430c46:	popa   
  430c47:	jae    0x430cb4
  430c49:	dec    ebp
  430c4a:	popa   
  430c4b:	outs   dx,BYTE PTR ds:[esi]
  430c4c:	popa   
  430c4d:	addr16 gs jb 0x430c8b
  430c51:	cmp    dl,BYTE PTR [ebp+0x49]
  430c54:	inc    ebx
  430c55:	popa   
  430c56:	ins    BYTE PTR es:[edi],dx
  430c57:	ins    BYTE PTR es:[edi],dx
  430c58:	add    BYTE PTR [eax],al
  430c5a:	add    BYTE PTR [eax],al
  430c5c:	cs pop esp
  430c5e:	dec    esp
  430c5f:	outs   dx,DWORD PTR ds:[esi]
  430c60:	outs   dx,DWORD PTR ds:[esi]
  430c61:	jo     0x430cbf
  430c63:	push   esp
  430c64:	popa   
  430c65:	jae    0x430cd2
  430c67:	dec    ebp
  430c68:	popa   
  430c69:	outs   dx,BYTE PTR ds:[esi]
  430c6a:	popa   
  430c6b:	addr16 gs jb 0x430c9d
  430c6f:	arpl   WORD PTR [eax+0x70],si
  430c72:	add    BYTE PTR [eax],al
  430c74:	dec    esp
  430c75:	outs   dx,DWORD PTR ds:[esi]
  430c76:	outs   dx,DWORD PTR ds:[esi]
  430c77:	jo     0x430cc7
  430c79:	push   ebx
  430c7a:	cmp    bh,BYTE PTR [edx]
  430c7c:	inc    ebx
  430c7d:	push   esp
  430c7e:	popa   
  430c7f:	jae    0x430cec
  430c81:	dec    ebp
  430c82:	popa   
  430c83:	outs   dx,BYTE PTR ds:[esi]
  430c84:	popa   
  430c85:	addr16 gs jb 0x430cc3
  430c89:	cmp    cl,BYTE PTR [esi+0x65]
  430c8c:	je     0x430cd1
  430c8e:	popa   
  430c8f:	ins    BYTE PTR es:[edi],dx
  430c90:	ins    BYTE PTR es:[edi],dx
  430c91:	add    BYTE PTR [eax],al
  430c93:	add    BYTE PTR [edi+ebp*2+0x6f],cl
  430c97:	jo     0x430ce7
  430c99:	push   ebx
  430c9a:	cmp    bh,BYTE PTR [edx]
  430c9c:	inc    ebx
  430c9d:	push   esp
  430c9e:	popa   
  430c9f:	jae    0x430d0c
  430ca1:	dec    ebp
  430ca2:	popa   
  430ca3:	outs   dx,BYTE PTR ds:[esi]
  430ca4:	popa   
  430ca5:	addr16 gs jb 0x430ce3
  430ca9:	cmp    dl,BYTE PTR [ebp+0x49]
  430cac:	inc    ebx
  430cad:	popa   
  430cae:	ins    BYTE PTR es:[edi],dx
  430caf:	ins    BYTE PTR es:[edi],dx
  430cb0:	inc    ebp
  430cb1:	js     0x430cb3
  430cb3:	add    BYTE PTR [ebx+0x61],al
  430cb6:	outs   dx,BYTE PTR ds:[esi]
  430cb7:	and    BYTE PTR [esi+0x6f],ch
  430cba:	je     0x430cdc
  430cbc:	inc    ebx
  430cbd:	jb     0x430d24
  430cbf:	popa   
  430cc0:	je     0x430d27
  430cc2:	and    BYTE PTR [esi+0x65],cl
  430cc5:	ja     0x430ce7
  430cc7:	dec    edi
  430cc8:	bound  ebp,QWORD PTR [edx+0x65]
  430ccb:	arpl   WORD PTR [eax+eiz*1+0x46],si
  430ccf:	outs   dx,DWORD PTR ds:[esi]
  430cd0:	jb     0x430cf2
  430cd2:	outs   dx,DWORD PTR ds:[esi]
  430cd3:	bound  ebp,QWORD PTR [edx+0x65]
  430cd6:	arpl   WORD PTR [eax+eiz*1+0x65],si
  430cda:	js     0x430d45
  430cdc:	jae    0x430d52
  430cde:	jae    0x430d0e
  430ce0:	and    BYTE PTR [eax+0x6f],dl
  430ce3:	imul   ebp,DWORD PTR [esi+0x74],0x4e207265
  430cea:	popa   
  430ceb:	ins    DWORD PTR es:[edi],dx
  430cec:	gs cmp eax,0x6c500000
  430cf2:	jne    0x430d5b
  430cf4:	imul   ebp,DWORD PTR [esi+0x41],0x506f7475
  430cfb:	je     0x430d6f
  430cfd:	cmp    al,0x63
  430cff:	ins    BYTE PTR es:[edi],dx
  430d00:	popa   
  430d01:	jae    0x430d76
  430d03:	and    BYTE PTR [ecx+0x4d],cl
  430d06:	gs jae 0x430d7c
  430d09:	popa   
  430d0a:	addr16 gs push eax
  430d0d:	jne    0x430d7c
  430d0f:	jo     0x430d5e
  430d11:	popa   
  430d12:	outs   dx,BYTE PTR ds:[esi]
  430d13:	popa   
  430d14:	addr16 gs jb 0x430d56
  430d18:	cmp    bh,BYTE PTR [edx]
  430d1a:	inc    ebx
  430d1b:	jb     0x430d82
  430d1d:	popa   
  430d1e:	je     0x430d85
  430d20:	add    BYTE PTR [eax],al
  430d22:	add    BYTE PTR [eax],al
  430d24:	inc    ebx
  430d25:	cmp    bl,BYTE PTR [edi+esi*2+0x6f]
  430d29:	jb     0x430d96
  430d2b:	pop    esp
  430d2c:	addr16 popa 
  430d2e:	jb     0x430d95
  430d30:	outs   dx,BYTE PTR ds:[esi]
  430d31:	popa   
  430d32:	pop    edi
  430d33:	je     0x430d96
  430d35:	ins    BYTE PTR es:[edi],dx
  430d36:	imul   ebx,DWORD PTR [esp+esi*2+0x72],0x75
  430d3b:	outs   dx,BYTE PTR ds:[esi]
  430d3c:	imul   ebx,DWORD PTR [ebp+esi*2+0x74],0x69
  430d41:	ins    BYTE PTR es:[edi],dx
  430d42:	jae    0x430da0
  430d44:	push   eax
  430d45:	ins    BYTE PTR es:[edi],dx
  430d46:	jne    0x430daf
  430d48:	imul   ebp,DWORD PTR [esi+0x4b],0x656e7265
  430d4f:	ins    BYTE PTR es:[edi],dx
  430d50:	das    
  430d51:	push   eax
  430d52:	ins    BYTE PTR es:[edi],dx
  430d53:	jne    0x430dbc
  430d55:	imul   ebp,DWORD PTR [esi+0x41],0x506f7475
  430d5c:	je     0x430dd0
  430d5e:	cs push 0x0
  430d64:	inc    ebx
  430d65:	popa   
  430d66:	outs   dx,BYTE PTR ds:[esi]
  430d67:	and    BYTE PTR [esi+0x6f],ch
  430d6a:	je     0x430d8c
  430d6c:	inc    edi
  430d6d:	gs je  0x430d90
  430d70:	je     0x430dda
  430d72:	and    BYTE PTR gs:[eax+0x6f],dl
  430d76:	imul   ebp,DWORD PTR [esi+0x74],0x202e7265
  430d7d:	push   eax
  430d7e:	outs   dx,DWORD PTR ds:[esi]
  430d7f:	imul   ebp,DWORD PTR [esi+0x74],0x4e207265
  430d86:	popa   
  430d87:	ins    DWORD PTR es:[edi],dx
  430d88:	gs cmp eax,0x3b880000
  430d8e:	inc    ebx
  430d8f:	add    al,al
  430d91:	xor    al,BYTE PTR [eax+0x0]
  430d94:	scas   al,BYTE PTR es:[edi]
  430d95:	push   eax
  430d96:	inc    edx
  430d97:	add    BYTE PTR [esi+0x4250],ch
  430d9d:	cmp    eax,DWORD PTR [ebx+0x0]
  430da0:	loopne 0x430dd5
  430da2:	inc    eax
  430da3:	add    BYTE PTR [eax+0x4038],dl
  430da9:	scas   eax,DWORD PTR es:[edi]
  430daa:	inc    eax
  430dab:	add    BYTE PTR [eax],bl
  430dad:	cmp    al,BYTE PTR [ebx+0x0]
  430db0:	pusha  
  430db1:	cmp    eax,0xf0b00040
  430db6:	inc    ecx
  430db7:	add    BYTE PTR [edx+edi*1],al
  430dba:	inc    ebx
  430dbb:	add    BYTE PTR [eax],al
  430dbd:	inc    eax
  430dbe:	inc    eax
  430dbf:	add    BYTE PTR [eax-0xfffbcc7],cl
  430dc5:	cmp    al,0x40
  430dc7:	add    BYTE PTR [eax+0x740041f0],dh
  430dcd:	cmp    DWORD PTR [ebx+0x0],eax
  430dd0:	and    BYTE PTR [eax+0x40],al
  430dd3:	add    BYTE PTR [eax+0x39],ah
  430dd6:	inc    ebx
  430dd7:	add    BYTE PTR [eax+0x3e],ah
  430dda:	inc    eax
  430ddb:	add    al,ah
  430ddd:	ds inc eax
  430ddf:	add    BYTE PTR [eax],dl
  430de1:	inc    eax
  430de2:	inc    eax
  430de3:	add    BYTE PTR [ebx+0x61],ah
  430de6:	ins    BYTE PTR es:[edi],dx
  430de7:	ins    BYTE PTR es:[edi],dx
  430de8:	and    BYTE PTR [edi+ebp*2+0x20],dh
  430dec:	gs ins DWORD PTR es:[edi],dx
  430dee:	jo     0x430e64
  430df0:	jns    0x430e12
  430df2:	bound  ebp,QWORD PTR [edi+0x6f]
  430df5:	jae    0x430e6b
  430df7:	cmp    bh,BYTE PTR [edx]
  430df9:	data16 jne 0x430e6a
  430dfc:	arpl   WORD PTR [ecx+ebp*2+0x6f],si
  430e00:	outs   dx,BYTE PTR ds:[esi]
  430e01:	add    BYTE PTR [eax],al
  430e03:	add    BYTE PTR ds:0x2900000a,cl
  430e09:	and    BYTE PTR [eax],al
  430e0b:	add    BYTE PTR [ebp+0x3a],bl
  430e0e:	sub    BYTE PTR [eax],al
  430e10:	pop    ebp
  430e11:	pop    ebx
  430e12:	add    BYTE PTR [eax],al
  430e14:	pop    ebx
  430e15:	add    BYTE PTR [eax],al
  430e17:	add    BYTE PTR ds:0x2d643230,ah
  430e1d:	and    eax,0x20643230
  430e22:	and    eax,0x3a643230
  430e27:	and    eax,0x3a643230
  430e2c:	and    eax,0x643230
  430e31:	add    BYTE PTR [eax],al
  430e33:	add    BYTE PTR [eax+eax*1+0x42],al
  430e37:	add    BYTE PTR [edi+0x0],al
  430e3a:	dec    eax
  430e3b:	add    BYTE PTR [ebp+0x0],al
  430e3e:	dec    esp
  430e3f:	add    BYTE PTR [eax+0x0],dl
  430e42:	add    BYTE PTR cs:[eax+eax*1+0x4c],al
  430e47:	add    BYTE PTR [eax+eax*1+0x0],cl
  430e4b:	add    BYTE PTR [ebp+0x69],cl
  430e4e:	outs   dx,BYTE PTR ds:[esi]
  430e4f:	imul   eax,DWORD PTR [ebp+esi*2+0x6d],0x69725770
  430e57:	je     0x430ebe
  430e59:	inc    esp
  430e5a:	jne    0x430ec9
  430e5c:	jo     0x430e5e
  430e5e:	add    BYTE PTR [eax],al
  430e60:	and    eax,0x2d006400
  430e65:	add    BYTE PTR ds:0x2d006400,ah
  430e6b:	add    BYTE PTR ds:0x2d006400,ah
  430e71:	add    BYTE PTR ds:0x2d006400,ah
  430e77:	add    BYTE PTR ds:0x2d006400,ah
  430e7d:	add    BYTE PTR ds:0x6400,ah
  430e83:	add    BYTE PTR [esi],ch
  430e85:	add    BYTE PTR [eax+eax*1+0x6d],ah
  430e89:	add    BYTE PTR [eax+0x0],dh
  430e8c:	add    BYTE PTR [eax],al
  430e8e:	add    BYTE PTR [eax],al
  430e90:	inc    ebp
  430e91:	jb     0x430f05
  430e93:	outs   dx,DWORD PTR ds:[esi]
  430e94:	jb     0x430eb6
  430e96:	inc    ebx
  430e97:	popa   
  430e98:	outs   dx,BYTE PTR ds:[esi]
  430e99:	and    BYTE PTR [esi+0x6f],cl
  430e9c:	je     0x430ebe
  430e9e:	inc    ecx
  430e9f:	arpl   WORD PTR [ebx+0x65],sp
  430ea2:	jae    0x430f17
  430ea4:	and    BYTE PTR [ecx+0x6e],ch
  430ea7:	push   esi
  430ea8:	popa   
  430ea9:	ins    BYTE PTR es:[edi],dx
  430eaa:	imul   esp,DWORD PTR [eax+eiz*1+0x41],0x65726464
  430eb2:	jae    0x430f27
  430eb4:	cmp    al,BYTE PTR [eax]
  430eb6:	add    BYTE PTR [eax],al
  430eb8:	push   ebx
  430eb9:	jns    0x430f2e
  430ebb:	je     0x430f22
  430ebd:	ins    DWORD PTR es:[edi],dx
  430ebe:	and    BYTE PTR [ebp+0x72],al
  430ec1:	jb     0x430f32
  430ec3:	jb     0x430eff
  430ec5:	add    BYTE PTR [eax],al
  430ec7:	add    BYTE PTR [edx+0x65],dl
  430eca:	arpl   WORD PTR [edi+0x72],bp
  430ecd:	fs inc ebp
  430ecf:	js     0x430f34
  430ed1:	gs jo  0x430f48
  430ed4:	imul   ebp,DWORD PTR [edi+0x6e],0x6f666e49
  430edb:	add    BYTE PTR [ebx+0x3a],ah
  430ede:	pop    esp
  430edf:	ja     0x430f50
  430ee1:	jb     0x430f4e
  430ee3:	pop    esp
  430ee4:	addr16 popa 
  430ee6:	jb     0x430f4d
  430ee8:	outs   dx,BYTE PTR ds:[esi]
  430ee9:	popa   
  430eea:	pop    edi
  430eeb:	je     0x430f4e
  430eed:	ins    BYTE PTR es:[edi],dx
  430eee:	imul   ebx,DWORD PTR [esp+esi*2+0x72],0x75
  430ef3:	outs   dx,BYTE PTR ds:[esi]
  430ef4:	imul   ebx,DWORD PTR [ebp+esi*2+0x74],0x69
  430ef9:	ins    BYTE PTR es:[edi],dx
  430efa:	jae    0x430f58
  430efc:	push   ebx
  430efd:	jns    0x430f72
  430eff:	inc    ebp
  430f00:	js     0x430f65
  430f02:	gs jo  0x430f79
  430f05:	imul   ebp,DWORD PTR [edi+0x6e],0x682e
  430f0c:	inc    ebp
  430f0d:	jb     0x430f81
  430f0f:	outs   dx,DWORD PTR ds:[esi]
  430f10:	jb     0x430f32
  430f12:	dec    ebp
  430f13:	gs jae 0x430f89
  430f16:	popa   
  430f17:	cmp    ah,BYTE PTR gs:[di]
  430f1b:	jae    0x430f3d
  430f1d:	sub    al,0x54
  430f1f:	push   0x64616572
  430f24:	dec    ecx
  430f25:	cmp    ah,BYTE PTR fs:0x64
  430f2c:	cmp    BYTE PTR [ecx],bh
  430f2e:	inc    ebx
  430f2f:	add    BYTE PTR [eax+0x5],ah
  430f32:	inc    edx
  430f33:	add    BYTE PTR [eax+0x5c0041f0],dh
  430f39:	add    BYTE PTR [eax],al
  430f3b:	add    BYTE PTR [eax+eax*1],ch
  430f3e:	add    BYTE PTR [eax],al
  430f40:	add    BYTE PTR cs:[eax],al
  430f43:	add    BYTE PTR [ebp+0x0],cl
  430f46:	inc    edx
  430f47:	add    BYTE PTR [eax],al
  430f49:	add    BYTE PTR [eax],al
  430f4b:	add    BYTE PTR [ebx+0x0],ch
  430f4e:	inc    edx
  430f4f:	add    BYTE PTR [eax],al
  430f51:	add    BYTE PTR [eax],al
  430f53:	add    BYTE PTR [ebp+0x6e],dh
  430f56:	imul   esi,DWORD PTR [edi+ebx*2+0x6d],0x6e69
  430f5e:	add    BYTE PTR [eax],al
  430f60:	and    BYTE PTR [eax],al
  430f62:	add    BYTE PTR [eax],al
  430f64:	jne    0x430fd4
  430f66:	imul   esi,DWORD PTR [edi+ebx*2+0x68],0x6e750072
  430f6e:	imul   esi,DWORD PTR [edi+ebx*2+0x73],0x6365
  430f76:	add    BYTE PTR [eax],al
  430f78:	ins    DWORD PTR es:[edi],dx
  430f79:	add    BYTE PTR [ecx+0x0],ah
  430f7c:	imul   eax,DWORD PTR [eax],0x2e006e
  430f82:	js     0x430f84
  430f84:	ins    DWORD PTR es:[edi],dx
  430f85:	add    BYTE PTR [eax+eax*1+0x0],ch
  430f89:	add    BYTE PTR [eax],al
  430f8b:	add    BYTE PTR [ebp+0x0],ch
  430f8e:	popa   
  430f8f:	add    BYTE PTR [ecx+0x0],ch
  430f92:	outs   dx,BYTE PTR ds:[esi]
  430f93:	add    BYTE PTR [esi],ch
  430f95:	add    BYTE PTR [eax+eax*1+0x61],ch
  430f99:	add    BYTE PTR [ecx+0x0],bh
  430f9c:	outs   dx,DWORD PTR ds:[esi]
  430f9d:	add    BYTE PTR [ebp+0x0],dh
  430fa0:	je     0x430fa2
  430fa2:	add    BYTE PTR cs:[eax+0x0],bh
  430fa6:	ins    DWORD PTR es:[edi],dx
  430fa7:	add    BYTE PTR [eax+eax*1+0x0],ch
  430fab:	add    BYTE PTR [ecx+0x70],ah
  430fae:	jo     0x43100f
  430fb0:	jne    0x431022
  430fb2:	fs popa 
  430fb4:	je     0x43101b
  430fb6:	add    BYTE PTR [eax],al
  430fb8:	ins    DWORD PTR es:[edi],dx
  430fb9:	popa   
  430fba:	imul   ebp,DWORD PTR [esi+0x5f],0x5f6e6977
  430fc1:	arpl   WORD PTR [ecx+0x70],sp
  430fc4:	je     0x43102f
  430fc6:	outs   dx,DWORD PTR ds:[esi]
  430fc7:	outs   dx,BYTE PTR ds:[esi]
  430fc8:	add    BYTE PTR [eax],al
  430fca:	add    BYTE PTR [eax],al
  430fcc:	arpl   WORD PTR [eax+0x65],bp
  430fcf:	arpl   WORD PTR [ebx+0x5f],bp
  430fd2:	jne    0x431044
  430fd4:	fs popa 
  430fd6:	je     0x43103d
  430fd8:	add    BYTE PTR [eax],al
  430fda:	add    BYTE PTR [eax],al
  430fdc:	ins    DWORD PTR es:[edi],dx
  430fdd:	popa   
  430fde:	imul   ebp,DWORD PTR [esi+0x5f],0x5f62616c
  430fe5:	imul   ebp,DWORD PTR [esi+0x66],0x6f
  430fec:	jne    0x43105e
  430fee:	fs popa 
  430ff0:	je     0x431057
  430ff2:	add    BYTE PTR [eax],al
  430ff4:	ins    DWORD PTR es:[edi],dx
  430ff5:	popa   
  430ff6:	imul   ebp,DWORD PTR [esi+0x5f],0x5f6e7462
  430ffd:	jne    0x43106f
  430fff:	fs popa 
  431001:	je     0x431068
  431003:	add    BYTE PTR [ebp+0x78],ah
  431006:	imul   esi,DWORD PTR [eax+eax*1+0x0],0x616d0000
  43100e:	imul   ebp,DWORD PTR [esi+0x5f],0x5f6e7462
  431015:	arpl   WORD PTR [ecx+0x6e],sp
  431018:	arpl   WORD PTR [ebp+0x6c],sp
  43101b:	add    BYTE PTR [esi+0x69],ah
  43101e:	outs   dx,BYTE PTR ds:[esi]
  43101f:	imul   esi,DWORD PTR [ebx+0x68],0x616d0000
  431026:	imul   ebp,DWORD PTR [esi+0x5f],0x5f6e7462
  43102d:	imul   bp,WORD PTR [esi+0x69],0x6873
  431033:	add    BYTE PTR [edi+ebp*2+0x77],ah
  431037:	outs   dx,BYTE PTR ds:[esi]
  431038:	ins    BYTE PTR es:[edi],dx
  431039:	outs   dx,DWORD PTR ds:[esi]
  43103a:	popa   
  43103b:	imul   ebp,DWORD PTR fs:[esi+0x67],0x7461705f
  431043:	arpl   WORD PTR [eax+0x0],bp
  431046:	add    BYTE PTR [eax],al
  431048:	ins    DWORD PTR es:[edi],dx
  431049:	popa   
  43104a:	imul   ebp,DWORD PTR [esi+0x5f],0x5f62616c
  431051:	popa   
  431052:	arpl   WORD PTR [ecx+ebp*2+0x6f],si
  431056:	outs   dx,BYTE PTR ds:[esi]
  431057:	add    BYTE PTR [ebp+0x61],ch
  43105a:	imul   ebp,DWORD PTR [esi+0x5f],0x68636972
  431061:	gs imul esi,DWORD PTR fs:[edi+ebx*2+0x70],0x68637461
  43106b:	pop    edi
  43106c:	outs   dx,BYTE PTR ds:[esi]
  43106d:	outs   dx,DWORD PTR ds:[esi]
  43106e:	je     0x4310d5
  431070:	jae    0x431072
  431072:	add    BYTE PTR [eax],al
  431074:	jne    0x4310e6
  431076:	fs popa 
  431078:	je     0x4310df
  43107a:	pop    edi
  43107b:	jo     0x4310de
  43107d:	je     0x4310e2
  43107f:	push   0x746f6e5f
  431084:	gs jae 0x431087
  431087:	add    BYTE PTR [edx+0x0],al
  43108a:	inc    edx
  43108b:	add    BYTE PTR [eax+eax*1+0x61],dl
  43108f:	add    BYTE PTR [eax+eax*1+0x6b],ch
  431093:	add    BYTE PTR [esi],ch
  431095:	add    BYTE PTR [ebp+0x0],ah
  431098:	js     0x43109a
  43109a:	add    BYTE PTR gs:[eax],al
  43109d:	add    BYTE PTR [eax],al
  43109f:	add    BYTE PTR [eax],ah
  4310a1:	add    BYTE PTR ds:0x67006900,ch
  4310a7:	add    BYTE PTR [esi+0x0],ch
  4310aa:	outs   dx,DWORD PTR ds:[esi]
  4310ab:	add    BYTE PTR [edx+0x0],dh
  4310ae:	add    BYTE PTR gs:[ebp+0x0],dh
  4310b2:	jo     0x4310b4
  4310b4:	add    BYTE PTR fs:[ecx+0x0],ah
  4310b8:	je     0x4310ba
  4310ba:	add    BYTE PTR gs:[eax],ah
  4310bd:	add    BYTE PTR [eax],al
  4310bf:	add    BYTE PTR ds:0x6f007000,ch
  4310c5:	add    BYTE PTR [ebx+0x0],dh
  4310c8:	je     0x4310ca
  4310ca:	pop    edi
  4310cb:	add    BYTE PTR [ebp+0x0],dh
  4310ce:	jo     0x4310d0
  4310d0:	add    BYTE PTR [bp+si+0x0],dh
  4310d4:	popa   
  4310d5:	add    BYTE PTR [eax+eax*1+0x65],ah
  4310d9:	add    BYTE PTR [edi+0x0],bl
  4310dc:	imul   eax,DWORD PTR [eax],0x64006e
  4310e2:	and    BYTE PTR [eax],al
  4310e4:	add    BYTE PTR [eax],al
  4310e6:	add    BYTE PTR [eax],al
  4310e8:	jo     0x43114b
  4310ea:	je     0x43114f
  4310ec:	push   0x666e695f
  4310f1:	outs   dx,DWORD PTR ds:[esi]
  4310f2:	add    BYTE PTR [eax],al
  4310f4:	ins    DWORD PTR es:[edi],dx
  4310f5:	popa   
  4310f6:	imul   ebp,DWORD PTR [esi+0x5f],0x5f62616c
  4310fd:	jo     0x431160
  4310ff:	je     0x431164
  431101:	push   0x666e695f
  431106:	outs   dx,DWORD PTR ds:[esi]
  431107:	add    BYTE PTR [eax+0x0],dh
  43110a:	jb     0x43110c
  43110c:	outs   dx,DWORD PTR ds:[esi]
  43110d:	add    BYTE PTR [edi+0x0],ah
  431110:	jb     0x431112
  431112:	add    BYTE PTR gs:[ebx+0x0],dh
  431116:	jae    0x431118
  431118:	pop    edi
  431119:	add    BYTE PTR [ebx+0x0],dh
  43111c:	add    BYTE PTR gs:[ebx+0x0],ah
  431120:	je     0x431122
  431122:	imul   eax,DWORD PTR [eax],0x6e006f
  431128:	add    BYTE PTR [eax],al
  43112a:	add    BYTE PTR [eax],al
  43112c:	ins    BYTE PTR es:[edi],dx
  43112d:	add    BYTE PTR [ecx+0x0],ah
  431130:	bound  eax,QWORD PTR [eax]
  431132:	pop    edi
  431133:	add    BYTE PTR [ecx+0x0],ch
  431136:	outs   dx,BYTE PTR ds:[esi]
  431137:	add    BYTE PTR [esi+0x0],ah
  43113a:	outs   dx,DWORD PTR ds:[esi]
  43113b:	add    BYTE PTR [edi+0x0],bl
  43113e:	jae    0x431140
  431140:	add    BYTE PTR gs:[ebx+0x0],ah
  431144:	je     0x431146
  431146:	imul   eax,DWORD PTR [eax],0x6e006f
  43114c:	add    BYTE PTR [eax],al
  43114e:	add    BYTE PTR [eax],al
  431150:	ins    DWORD PTR es:[edi],dx
  431151:	add    BYTE PTR [ecx+0x0],ah
  431154:	imul   eax,DWORD PTR [eax],0x5f006e
  43115a:	bound  eax,QWORD PTR [eax]
  43115c:	je     0x43115e
  43115e:	outs   dx,BYTE PTR ds:[esi]
  43115f:	add    BYTE PTR [edi+0x0],bl
  431162:	jne    0x431164
  431164:	jo     0x431166
  431166:	add    BYTE PTR fs:[ecx+0x0],ah
  43116a:	je     0x43116c
  43116c:	add    BYTE PTR gs:[eax],al
  43116f:	add    BYTE PTR [ebp+0x70],dh
  431172:	fs popa 
  431174:	je     0x4311db
  431176:	pop    edi
  431177:	gs jb  0x4311ec
  43117a:	outs   dx,DWORD PTR ds:[esi]
  43117b:	jb     0x4311dc
  43117d:	ins    BYTE PTR es:[edi],dx
  43117e:	popa   
  43117f:	je     0x4311e6
  431181:	jae    0x4311f7
  431183:	add    BYTE PTR [ebp+0x0],ch
  431186:	popa   
  431187:	add    BYTE PTR [ecx+0x0],ch
  43118a:	outs   dx,BYTE PTR ds:[esi]
  43118b:	add    BYTE PTR [edi+0x0],bl
  43118e:	bound  eax,QWORD PTR [eax]
  431190:	je     0x431192
  431192:	outs   dx,BYTE PTR ds:[esi]
  431193:	add    BYTE PTR [edi+0x0],bl
  431196:	arpl   WORD PTR [eax],ax
  431198:	popa   
  431199:	add    BYTE PTR [esi+0x0],ch
  43119c:	arpl   WORD PTR [eax],ax
  43119e:	add    BYTE PTR gs:[eax+eax*1+0x0],ch
  4311a3:	add    BYTE PTR [ebp+0x70],dh
  4311a6:	fs popa 
  4311a8:	je     0x43120f
  4311aa:	pop    edi
  4311ab:	imul   ebp,DWORD PTR [esi+0x66],0x6d006f
  4311b2:	popa   
  4311b3:	add    BYTE PTR [ecx+0x0],ch
  4311b6:	outs   dx,BYTE PTR ds:[esi]
  4311b7:	add    BYTE PTR [edi+0x0],bl
  4311ba:	jo     0x4311bc
  4311bc:	popa   
  4311bd:	add    BYTE PTR [esi+0x0],ch
  4311c0:	add    BYTE PTR gs:[eax+eax*1+0x5f],ch
  4311c5:	add    BYTE PTR [eax+0x0],dh
  4311c8:	popa   
  4311c9:	add    BYTE PTR [eax+eax*1+0x63],dh
  4311cd:	add    BYTE PTR [eax+0x0],ch
  4311d0:	pop    edi
  4311d1:	add    BYTE PTR [esi+0x0],ch
  4311d4:	outs   dx,DWORD PTR ds:[esi]
  4311d5:	add    BYTE PTR [eax+eax*1+0x65],dh
  4311d9:	add    BYTE PTR [ebx+0x0],dh
  4311dc:	add    BYTE PTR [eax],al
  4311de:	add    BYTE PTR [eax],al
  4311e0:	ins    DWORD PTR es:[edi],dx
  4311e1:	popa   
  4311e2:	imul   ebp,DWORD PTR [esi+0x5f],0x676f7270
  4311e9:	jb     0x431250
  4311eb:	jae    0x431260
  4311ed:	bound  esp,QWORD PTR [ecx+0x72]
  4311f0:	pop    edi
  4311f1:	outs   dx,DWORD PTR fs:[esi]
  4311f3:	ja     0x431263
  4311f5:	ins    BYTE PTR es:[edi],dx
  4311f6:	outs   dx,DWORD PTR ds:[esi]
  4311f7:	popa   
  4311f8:	add    BYTE PTR fs:[eax],al
  4311fb:	add    BYTE PTR ds:0x20000000,ch
  431201:	add    BYTE PTR [edi],ch
  431203:	add    BYTE PTR [eax],ah
  431205:	add    BYTE PTR [eax],al
  431207:	add    BYTE PTR [edi+ebp*2+0x77],ah
  43120b:	outs   dx,BYTE PTR ds:[esi]
  43120c:	ins    BYTE PTR es:[edi],dx
  43120d:	outs   dx,DWORD PTR ds:[esi]
  43120e:	popa   
  43120f:	fs pop edi
  431211:	jo     0x431285
  431213:	outs   dx,DWORD PTR ds:[esi]
  431214:	addr16 jb 0x43127c
  431217:	jae    0x43128c
  431219:	add    BYTE PTR [eax],al
  43121b:	add    BYTE PTR [ebp+0x61],ch
  43121e:	imul   ebp,DWORD PTR [esi+0x5f],0x5f62616c
  431225:	imul   bp,WORD PTR [ebp+eiz*2+0x5f],0x6e69
  43122c:	outs   dx,WORD PTR ds:[esi]
  43122e:	add    BYTE PTR [eax],al
  431230:	jne    0x4312a2
  431232:	fs popa 
  431234:	je     0x43129b
  431236:	pop    edi
  431237:	jne    0x4312a7
  431239:	jo     0x43129c
  43123b:	arpl   WORD PTR [ebx+0x0],bp
  43123e:	add    BYTE PTR [eax],al
  431240:	jne    0x4312b2
  431242:	fs popa 
  431244:	je     0x4312ab
  431246:	pop    edi
  431247:	arpl   WORD PTR [edi+0x6d],bp
  43124a:	jo     0x4312b8
  43124c:	gs je  0x4312b4
  43124f:	add    BYTE PTR fs:[eax],al
  431252:	add    BYTE PTR [eax],al
  431254:	jne    0x431256
  431256:	jo     0x431258
  431258:	add    BYTE PTR fs:[ecx+0x0],ah
  43125c:	je     0x43125e
  43125e:	add    BYTE PTR gs:[edi+0x0],bl
  431262:	jae    0x431264
  431264:	add    BYTE PTR gs:[ebx+0x0],ah
  431268:	je     0x43126a
  43126a:	imul   eax,DWORD PTR [eax],0x6e006f
  431270:	add    BYTE PTR [eax],al
  431272:	add    BYTE PTR [eax],al
  431274:	data16 add BYTE PTR [ecx+0x0],ch
  431278:	outs   dx,BYTE PTR ds:[esi]
  431279:	add    BYTE PTR [ecx+0x0],ch
  43127c:	jae    0x43127e
  43127e:	push   0x73005f00
  431283:	add    BYTE PTR [ebp+0x0],ah
  431286:	arpl   WORD PTR [eax],ax
  431288:	je     0x43128a
  43128a:	imul   eax,DWORD PTR [eax],0x6e006f
  431290:	add    BYTE PTR [eax],al
  431292:	add    BYTE PTR [eax],al
  431294:	ins    DWORD PTR es:[edi],dx
  431295:	add    BYTE PTR [ecx+0x0],ah
  431298:	imul   eax,DWORD PTR [eax],0x5f006e
  43129e:	bound  eax,QWORD PTR [eax]
  4312a0:	je     0x4312a2
  4312a2:	outs   dx,BYTE PTR ds:[esi]
  4312a3:	add    BYTE PTR [edi+0x0],bl
  4312a6:	arpl   WORD PTR [eax],ax
  4312a8:	ins    BYTE PTR es:[edi],dx
  4312a9:	add    BYTE PTR [edi+0x0],ch
  4312ac:	jae    0x4312ae
  4312ae:	add    BYTE PTR gs:[eax],al
  4312b1:	add    BYTE PTR [eax],al
  4312b3:	add    BYTE PTR [ebp+0x0],dh
  4312b6:	jo     0x4312b8
  4312b8:	add    BYTE PTR fs:[ecx+0x0],ah
  4312bc:	je     0x4312be
  4312be:	add    BYTE PTR gs:[eax],ah
  4312c1:	add    BYTE PTR [ecx+0x0],ch
  4312c4:	jae    0x4312c6
  4312c6:	and    BYTE PTR [eax],al
  4312c8:	add    BYTE PTR fs:[edi+0x0],ch
  4312cc:	outs   dx,BYTE PTR ds:[esi]
  4312cd:	add    BYTE PTR [ebp+0x0],ah
  4312d0:	add    BYTE PTR [eax],al
  4312d2:	add    BYTE PTR [eax],al
  4312d4:	jo     0x431353
  4312d6:	inc    eax
  4312d7:	add    al,ah
  4312d9:	jge    0x43131b
  4312db:	add    BYTE PTR [eax],al
  4312dd:	jle    0x43131f
  4312df:	add    al,dh
  4312e1:	dec    edx
  4312e2:	inc    edx
  4312e3:	add    BYTE PTR [ebx+eax*2],cl
  4312e6:	inc    ebx
  4312e7:	add    BYTE PTR [eax],dh
  4312e9:	jns    0x43132b
  4312eb:	add    BYTE PTR [eax-0x7ffbf7f],al
  4312f1:	inc    edx
  4312f2:	inc    ebx
  4312f3:	add    BYTE PTR [eax-0x80],al
  4312f6:	inc    eax
  4312f7:	add    BYTE PTR [edx+eax*2+0x43],bh
  4312fb:	add    al,dl
  4312fd:	js     0x43133f
  4312ff:	add    BYTE PTR [eax+0x68004081],al
  431305:	inc    edx
  431306:	inc    ebx
  431307:	add    BYTE PTR [eax],dh
  431309:	add    BYTE PTR [eax+0x0],0x54
  43130d:	inc    edx
  43130e:	inc    ebx
  43130f:	add    BYTE PTR [eax],ah
  431311:	jp     0x431353
  431313:	add    BYTE PTR [eax+0x2000407a],ah
  431319:	add    BYTE PTR [eax+0x0],0x62
  43131d:	popa   
  43131e:	and    BYTE PTR fs:[ebx+0x61],ah
  431322:	jae    0x431398
  431324:	add    BYTE PTR [eax],al
  431326:	add    BYTE PTR [eax],al
  431328:	bound  esp,QWORD PTR [ecx+0x64]
  43132b:	and    BYTE PTR [ebp+eiz*2+0x78],ch
  43132f:	imul   esp,DWORD PTR [ebx+0x61],0x6163206c
  431336:	jae    0x4313ac
  431338:	cmp    ah,BYTE PTR [eax]
  43133a:	jae    0x4313ab
  43133c:	jne    0x4313b0
  43133e:	arpl   WORD PTR [ebp+0x20],sp
  431341:	je     0x4313bc
  431343:	jo     0x4313aa
  431345:	and    BYTE PTR [esi+0x61],dh
  431348:	ins    BYTE PTR es:[edi],dx
  431349:	jne    0x4313b0
  43134b:	and    BYTE PTR [ebx+0x6f],ah
  43134e:	jne    0x4313bc
  431350:	and    BYTE PTR fs:[esi+0x6f],ch
  431354:	je     0x431376
  431356:	bound  esp,QWORD PTR [ebp+0x20]
  431359:	imul   ebp,DWORD PTR [esi+0x74],0x72707265
  431360:	gs je  0x4313c8
  431363:	and    BYTE PTR fs:[ecx+0x73],ah
  431367:	and    BYTE PTR [ecx+eiz*2+0x72],dh
  43136b:	addr16 gs je 0x43136f
  43136f:	add    BYTE PTR [edx+0x6f],ah
  431372:	outs   dx,DWORD PTR ds:[esi]
  431373:	jae    0x4313e9
  431375:	cmp    bh,BYTE PTR [edx]
  431377:	ins    BYTE PTR es:[edi],dx
  431378:	outs   dx,DWORD PTR ds:[esi]
  431379:	arpl   WORD PTR [ebx+0x5f],bp
  43137c:	gs jb  0x4313f1
  43137f:	outs   dx,DWORD PTR ds:[esi]
  431380:	jb     0x431382
  431382:	add    BYTE PTR [eax],al
  431384:	arpl   WORD PTR [edi+0x75],bp
  431387:	ins    BYTE PTR es:[edi],dx
  431388:	and    BYTE PTR fs:[esi+0x6f],ch
  43138c:	je     0x4313ae
  43138e:	arpl   WORD PTR [edi+0x6e],bp
  431391:	jbe    0x4313f8
  431393:	jb     0x431409
  431395:	and    BYTE PTR [ebx+0x61],ah
  431398:	ins    BYTE PTR es:[edi],dx
  431399:	outs   dx,BYTE PTR gs:[esi]
  43139b:	fs popa 
  43139d:	jb     0x4313bf
  43139f:	je     0x43140a
  4313a1:	ins    DWORD PTR es:[edi],dx
  4313a2:	and    BYTE PTR gs:[edi+ebp*2+0x20],dh
  4313a7:	push   ebp
  4313a8:	push   esp
  4313a9:	inc    ebx
  4313aa:	and    BYTE PTR [ecx+ebp*2+0x6d],dh
  4313ae:	add    BYTE PTR gs:[ecx+eiz*2+0x79],al
  4313b3:	and    BYTE PTR [edi+0x66],ch
  4313b6:	and    BYTE PTR [ebp+0x6f],ch
  4313b9:	outs   dx,BYTE PTR ds:[esi]
  4313ba:	je     0x431424
  4313bc:	and    BYTE PTR [esi+0x61],dh
  4313bf:	ins    BYTE PTR es:[edi],dx
  4313c0:	jne    0x431427
  4313c2:	and    BYTE PTR [ecx+0x73],ch
  4313c5:	and    BYTE PTR [edi+0x75],ch
  4313c8:	je     0x4313ea
  4313ca:	outs   dx,DWORD PTR ds:[esi]
  4313cb:	data16 and BYTE PTR [edx+0x61],dh
  4313cf:	outs   dx,BYTE PTR ds:[esi]
  4313d0:	and    BYTE PTR gs:[bx+di],dh
  4313d4:	cs xor esi,DWORD PTR cs:[ecx]
  4313d8:	add    BYTE PTR [eax],al
  4313da:	add    BYTE PTR [eax],al
  4313dc:	pop    ecx
  4313dd:	gs popa 
  4313df:	jb     0x431401
  4313e1:	imul   esi,DWORD PTR [ebx+0x20],0x2074756f
  4313e8:	outs   dx,DWORD PTR ds:[esi]
  4313e9:	data16 and BYTE PTR [esi+0x61],dh
  4313ed:	ins    BYTE PTR es:[edi],dx
  4313ee:	imul   esp,DWORD PTR [eax+eiz*1+0x72],0x65676e61
  4313f6:	cmp    ah,BYTE PTR [eax]
  4313f8:	xor    DWORD PTR [eax+esi*1],esi
  4313fb:	xor    BYTE PTR [esi],ch
  4313fd:	xor    DWORD PTR cs:[eax],esi
  431400:	xor    BYTE PTR [eax],dh
  431402:	xor    BYTE PTR [eax],al
  431404:	dec    ebp
  431405:	outs   dx,DWORD PTR ds:[esi]
  431406:	outs   dx,BYTE PTR ds:[esi]
  431407:	je     0x431471
  431409:	and    BYTE PTR [esi+0x75],ch
  43140c:	ins    DWORD PTR es:[edi],dx
  43140d:	bound  esp,QWORD PTR [ebp+0x72]
  431410:	and    BYTE PTR [ecx+0x73],ch
  431413:	and    BYTE PTR [edi+0x75],ch
  431416:	je     0x431438
  431418:	outs   dx,DWORD PTR ds:[esi]
  431419:	data16 and BYTE PTR [edx+0x61],dh
  43141d:	outs   dx,BYTE PTR ds:[esi]
  43141e:	and    BYTE PTR gs:[bx+di],dh
  431422:	cs xor DWORD PTR cs:[edx],esi
  431426:	add    BYTE PTR [eax],al
  431428:	inc    esp
  431429:	popa   
  43142a:	jns    0x43144c
  43142c:	outs   dx,DWORD PTR ds:[esi]
  43142d:	data16 and BYTE PTR [ebp+0x6f],ch
  431431:	outs   dx,BYTE PTR ds:[esi]
  431432:	je     0x43149c
  431434:	and    BYTE PTR [ecx+0x73],ch
  431437:	and    BYTE PTR [esi+0x6f],ch
  43143a:	je     0x43145c
  43143c:	jbe    0x43149f
  43143e:	ins    BYTE PTR es:[edi],dx
  43143f:	imul   esp,DWORD PTR [eax+eiz*1+0x66],0x7920726f
  431447:	gs popa 
  431449:	jb     0x43144b
  43144b:	add    BYTE PTR [ecx+0x55],cl
  43144e:	dec    ecx
  43144f:	push   edx
  431450:	imul   esp,DWORD PTR [ebx+0x68],0x74696445
  431457:	inc    ecx
  431458:	arpl   WORD PTR [ecx+ebp*2+0x6f],si
  43145c:	outs   dx,BYTE PTR ds:[esi]
  43145d:	add    BYTE PTR [eax],al
  43145f:	add    BYTE PTR [ecx+0x55],cl
  431462:	dec    ecx
  431463:	push   edi
  431464:	outs   dx,DWORD PTR ds:[esi]
  431465:	jb     0x4314cb
  431467:	inc    edx
  431468:	jb     0x4314cf
  43146a:	popa   
  43146b:	imul   eax,DWORD PTR [ecx+0x63],0x74
  43146f:	imul   ebp,DWORD PTR [edi+0x6e],0x55490000
  431476:	dec    ecx
  431477:	push   eax
  431478:	jb     0x4314e9
  43147a:	addr16 jb 0x4314e2
  43147d:	jae    0x4314f2
  43147f:	inc    edx
  431480:	popa   
  431481:	jb     0x4314c4
  431483:	arpl   WORD PTR [ecx+ebp*2+0x6f],si
  431487:	outs   dx,BYTE PTR ds:[esi]
  431488:	add    BYTE PTR [eax],al
  43148a:	add    BYTE PTR [eax],al
  43148c:	add    al,0x42
  43148e:	inc    ebx
  43148f:	add    BYTE PTR [eax],al
  431491:	xchg   esi,eax
  431492:	inc    eax
  431493:	add    BYTE PTR [eax-0xfffbe10],dh
  431499:	inc    ecx
  43149a:	inc    ebx
  43149b:	add    BYTE PTR [eax-0x7f],dl
  43149e:	inc    eax
  43149f:	add    BYTE PTR [eax-0x5fffbf7f],al
  4314a5:	inc    ecx
  4314a6:	inc    ebx
  4314a7:	add    BYTE PTR [eax-0xfffbfcf],al
  4314ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4314ae:	inc    eax
  4314af:	add    BYTE PTR [ecx+eax*2+0x43],cl
  4314b3:	add    BYTE PTR [eax],al
  4314b5:	xchg   esi,eax
  4314b6:	inc    eax
  4314b7:	add    BYTE PTR [eax-0x7ffbe10],dh
  4314bd:	inc    eax
  4314be:	inc    ebx
  4314bf:	add    BYTE PTR [eax],al
  4314c1:	xchg   esi,eax
  4314c2:	inc    eax
  4314c3:	add    BYTE PTR [eax-0x5bffbe10],dh
  4314c9:	inc    eax
  4314ca:	inc    ebx
  4314cb:	add    BYTE PTR [eax],al
  4314cd:	xchg   esi,eax
  4314ce:	inc    eax
  4314cf:	add    BYTE PTR [eax+0x500041f0],dh
  4314d5:	inc    eax
  4314d6:	inc    ebx
  4314d7:	add    al,dl
  4314d9:	test   DWORD PTR [eax+0x0],eax
  4314dc:	mov    al,0xf0
  4314de:	inc    ecx
  4314df:	add    BYTE PTR [eax+eax*2],bh
  4314e2:	inc    ebx
  4314e3:	add    BYTE PTR [eax],dh
  4314e5:	xchg   BYTE PTR [eax+0x0],al
  4314e8:	loopne 0x431529
  4314ea:	inc    ebx
  4314eb:	add    BYTE PTR [eax],ah
  4314ed:	test   DWORD PTR [eax+0x0],eax
  4314f0:	mov    al,0xf0
  4314f2:	inc    ecx
  4314f3:	add    ah,cl
  4314f5:	aas    
  4314f6:	inc    ebx
  4314f7:	add    BYTE PTR [eax-0x7c],dl
  4314fa:	inc    eax
  4314fb:	add    BYTE PTR [eax+0x6000433f],bh
  431501:	test   BYTE PTR [eax+0x0],al
  431504:	loopne 0x43148a
  431506:	inc    eax
  431507:	add    BYTE PTR [eax+0x5c004085],dl
  43150d:	aas    
  43150e:	inc    ebx
  43150f:	add    BYTE PTR [eax-0x6c],dh
  431512:	inc    eax
  431513:	add    BYTE PTR [eax+0x480041f0],dh
  431519:	aas    
  43151a:	inc    ebx
  43151b:	add    al,dl
  43151d:	xchg   esp,eax
  43151e:	inc    eax
  43151f:	add    ah,ah
  431521:	ds inc ebx
  431523:	add    al,al
  431525:	xchg   ebx,eax
  431526:	inc    eax
  431527:	add    BYTE PTR [eax-0x2fffbe10],dh
  43152d:	ds inc ebx
  43152f:	add    al,dh
  431531:	xchg   edx,eax
  431532:	inc    eax
  431533:	add    BYTE PTR [esi+edi*1-0x6cffffbd],bh
  43153a:	inc    eax
  43153b:	add    BYTE PTR [eax+0x30004093],al
  431541:	xchg   esp,eax
  431542:	inc    eax
  431543:	add    BYTE PTR [esi+edi*1+0x43],ah
  431547:	add    al,ah
  431549:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43154a:	inc    eax
  43154b:	add    al,dh
  43154d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43154e:	inc    eax
  43154f:	add    BYTE PTR [eax+0x3e],dl
  431552:	inc    ebx
  431553:	add    BYTE PTR [eax-0x5b],al
  431556:	inc    eax
  431557:	add    al,dh
  431559:	cmp    eax,0xa4300043
  43155e:	inc    eax
  43155f:	add    al,dh
  431561:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431562:	inc    eax
  431563:	add    ah,bl
  431565:	cmp    eax,0xa3600043
  43156a:	inc    eax
  43156b:	add    al,cl
  43156d:	cmp    eax,0xa3700043
  431572:	inc    eax
  431573:	add    al,dh
  431575:	mov    ds:0xa4900040,eax
  43157a:	inc    eax
  43157b:	add    BYTE PTR [ebp+edi*1+0x43],ch
  43157f:	add    BYTE PTR [eax-0x61],al
  431582:	inc    eax
  431583:	add    BYTE PTR [eax+0x580041f0],dh
  431589:	cmp    eax,0x9fa00043
  43158e:	inc    eax
  43158f:	add    ah,dh
  431591:	cmp    al,0x43
  431593:	add    BYTE PTR [eax-0x4fffbf62],dl
  431599:	lock inc ecx
  43159b:	add    al,ah
  43159d:	cmp    al,0x43
  43159f:	add    al,al
  4315a1:	popf   
  4315a2:	inc    eax
  4315a3:	add    ah,cl
  4315a5:	cmp    al,0x43
  4315a7:	add    al,dl
  4315a9:	popf   
  4315aa:	inc    eax
  4315ab:	add    BYTE PTR [eax-0x62],dl
  4315ae:	inc    eax
  4315af:	add    BYTE PTR [eax],al
  4315b1:	lahf   
  4315b2:	inc    eax
  4315b3:	add    BYTE PTR [eax+0x3c],dh
  4315b6:	inc    ebx
  4315b7:	add    al,dh
  4315b9:	cdq    
  4315ba:	inc    eax
  4315bb:	add    BYTE PTR [eax+0x5c0041f0],dh
  4315c1:	cmp    al,0x43
  4315c3:	add    BYTE PTR [eax-0x66],dl
  4315c6:	inc    eax
  4315c7:	add    al,bh
  4315c9:	cmp    eax,DWORD PTR [ebx+0x0]
  4315cc:	inc    eax
  4315cd:	cdq    
  4315ce:	inc    eax
  4315cf:	add    BYTE PTR [eax-0x1bffbe10],dh
  4315d5:	cmp    eax,DWORD PTR [ebx+0x0]
  4315d8:	jo     0x431572
  4315da:	inc    eax
  4315db:	add    al,dl
  4315dd:	cmp    eax,DWORD PTR [ebx+0x0]
  4315e0:	sbb    BYTE PTR [eax-0x66ffffc0],0x40
  4315e7:	add    BYTE PTR [eax+0x2e004099],dh
  4315ed:	je     0x431654
  4315ef:	js     0x431665
  4315f1:	add    BYTE PTR [eax],al
  4315f3:	add    BYTE PTR [eax+0x6c],dl
  4315f6:	jne    0x43165f
  4315f8:	imul   ebp,DWORD PTR [esi+0x41],0x506f7475
  4315ff:	je     0x431673
  431601:	cmp    al,0x63
  431603:	ins    BYTE PTR es:[edi],dx
  431604:	popa   
  431605:	jae    0x43167a
  431607:	and    BYTE PTR [ecx+0x55],cl
  43160a:	dec    ecx
  43160b:	dec    eax
  43160c:	outs   dx,DWORD PTR ds:[esi]
  43160d:	jae    0x431683
  43160f:	cmp    bh,BYTE PTR ds:[edx]
  431612:	inc    ebx
  431613:	jb     0x43167a
  431615:	popa   
  431616:	je     0x43167d
  431618:	add    BYTE PTR [eax],al
  43161a:	add    BYTE PTR [eax],al
  43161c:	push   eax
  43161d:	ins    BYTE PTR es:[edi],dx
  43161e:	jne    0x431687
  431620:	imul   ebp,DWORD PTR [esi+0x41],0x506f7475
  431627:	je     0x43169b
  431629:	cmp    al,0x63
  43162b:	ins    BYTE PTR es:[edi],dx
  43162c:	popa   
  43162d:	jae    0x4316a2
  43162f:	and    BYTE PTR [ecx+0x4c],cl
  431632:	popa   
  431633:	jns    0x4316a4
  431635:	jne    0x4316ab
  431637:	dec    ebp
  431638:	popa   
  431639:	outs   dx,BYTE PTR ds:[esi]
  43163a:	popa   
  43163b:	addr16 gs jb 0x43167d
  43163f:	cmp    bh,BYTE PTR [edx]
  431641:	inc    ebx
  431642:	jb     0x4316a9
  431644:	popa   
  431645:	je     0x4316ac
  431647:	add    BYTE PTR [eax+0x6c],dl
  43164a:	jne    0x4316b3
  43164c:	imul   ebp,DWORD PTR [esi+0x41],0x506f7475
  431653:	je     0x4316c7
  431655:	cmp    al,0x63
  431657:	ins    BYTE PTR es:[edi],dx
  431658:	popa   
  431659:	jae    0x4316ce
  43165b:	and    BYTE PTR [ecx+0x58],cl
  43165e:	ins    DWORD PTR es:[edi],dx
  43165f:	ins    BYTE PTR es:[edi],dx
  431660:	push   ebp
  431661:	dec    ecx
  431662:	dec    ebp
  431663:	outs   dx,DWORD PTR ds:[esi]
  431664:	fs jne 0x4316d3
  431667:	gs cmp bh,BYTE PTR ds:[edx]
  43166b:	inc    ebx
  43166c:	jb     0x4316d3
  43166e:	popa   
  43166f:	je     0x4316d6
  431671:	add    BYTE PTR [eax],al
  431673:	add    BYTE PTR [eax-0x48],al
  431676:	inc    eax
  431677:	add    BYTE PTR [eax-0x4fffbe4d],al
  43167d:	mov    eax,0x4af00040
  431682:	inc    edx
  431683:	add    BYTE PTR [ecx+0x55],cl
  431686:	dec    ecx
  431687:	dec    edi
  431688:	bound  ebp,QWORD PTR [edx+0x65]
  43168b:	arpl   WORD PTR [ebx+eax*2+0x6f],si
  43168f:	outs   dx,BYTE PTR ds:[esi]
  431690:	je     0x4316f3
  431692:	imul   ebp,DWORD PTR [esi+0x65],0x20000072
  431699:	dec    esp
  43169a:	outs   dx,DWORD PTR ds:[esi]
  43169b:	imul   esp,DWORD PTR [bp+di+0x20],0x6f727245
  4316a3:	jb     0x4316cd
  4316a5:	and    eax,0x64253a73
  4316aa:	sub    DWORD PTR [edx],edi
  4316ac:	inc    ebp
  4316ad:	jb     0x431721
  4316af:	outs   dx,DWORD PTR ds:[esi]
  4316b0:	jb     0x4316d2
  4316b2:	inc    ebx
  4316b3:	outs   dx,DWORD PTR ds:[esi]
  4316b4:	fs cmp ah,BYTE PTR gs:0x64
  4316bc:	das    
  4316bd:	add    BYTE PTR [eax],al
  4316bf:	add    BYTE PTR [ebx+0x61],ah
  4316c2:	outs   dx,BYTE PTR ds:[esi]
  4316c3:	and    BYTE PTR [esi+0x6f],ch
  4316c6:	je     0x4316e8
  4316c8:	addr16 gs je 0x4316ec
  4316cc:	je     0x431736
  4316ce:	and    BYTE PTR gs:[eax+0x6d],bh
  4316d2:	ins    BYTE PTR es:[edi],dx
  4316d3:	and    BYTE PTR [esi+0x6f],ch
  4316d6:	fs and BYTE PTR gs:[esi+0x61],ch
  4316db:	ins    DWORD PTR es:[edi],dx
  4316dc:	gs cmp ah,BYTE PTR fs:0x73
  4316e4:	inc    ebx
  4316e5:	push   esi
  4316e6:	gs jb  0x43175c
  4316e9:	imul   ebp,DWORD PTR [edi+0x6e],0x6f666e49
  4316f0:	inc    ebx
  4316f1:	outs   dx,DWORD PTR ds:[esi]
  4316f2:	outs   dx,BYTE PTR ds:[esi]
  4316f3:	imul   sp,WORD PTR [edi+0x0],0x7600
  4316f9:	gs jb  0x43176f
  4316fc:	imul   ebp,DWORD PTR [edi+0x6e],0x78656e00
  431703:	je     0x431764
  431705:	jne    0x431779
  431707:	ins    BYTE PTR es:[edi],dx
  431708:	add    BYTE PTR [eax],al
  43170a:	add    BYTE PTR [eax],al
  43170c:	push   ebp
  43170d:	jo     0x431773
  43170f:	popa   
  431710:	je     0x431777
  431712:	dec    ecx
  431713:	je     0x43177a
  431715:	ins    DWORD PTR es:[edi],dx
  431716:	pop    eax
  431717:	ins    DWORD PTR es:[edi],dx
  431718:	ins    BYTE PTR es:[edi],dx
  431719:	add    BYTE PTR [eax],al
  43171b:	add    BYTE PTR [edi+ebp*2+0x63],ch
  43171f:	popa   
  431720:	ins    BYTE PTR es:[edi],dx
  431721:	add    BYTE PTR [eax],al
  431723:	add    BYTE PTR [ecx+0x74],ah
  431726:	je     0x43179a
  431728:	imul   esp,DWORD PTR [edx+0x75],0x6574
  43172f:	add    BYTE PTR [ebx+0x72],ah
  431732:	arpl   WORD PTR [eax],ax
  431734:	pop    esp
  431735:	add    BYTE PTR [eax],al
  431737:	add    BYTE PTR [eax+0x0],al
  43173a:	add    BYTE PTR [eax],al
  43173c:	push   ebp
  43173d:	jo     0x4317a3
  43173f:	popa   
  431740:	je     0x4317a7
  431742:	dec    ecx
  431743:	je     0x4317aa
  431745:	ins    DWORD PTR es:[edi],dx
  431746:	dec    esp
  431747:	imul   esi,DWORD PTR [ebx+0x74],0x6c6d58
  43174e:	add    BYTE PTR [eax],al
  431750:	imul   esi,DWORD PTR [ebp+eiz*2+0x6d],0x0
  431758:	push   ebp
  431759:	jo     0x4317bf
  43175b:	popa   
  43175c:	je     0x4317c3
  43175e:	pop    eax
  43175f:	ins    DWORD PTR es:[edi],dx
  431760:	ins    BYTE PTR es:[edi],dx
  431761:	add    BYTE PTR [eax],al
  431763:	add    BYTE PTR [ecx+0x6e],ch
  431766:	outs   dx,WORD PTR ds:[esi]
  431768:	add    BYTE PTR [eax],al
  43176a:	add    BYTE PTR [eax],al
  43176c:	imul   esi,DWORD PTR [ebp+eiz*2+0x6d],0x73
  431774:	jo     0x4317d7
  431776:	je     0x4317db
  431778:	push   0x746f6e5f
  43177d:	gs jae 0x431780
  431780:	arpl   WORD PTR [edi+0x6d],bp
  431783:	cs addr16 popa 
  431786:	jb     0x4317ed
  431788:	outs   dx,BYTE PTR ds:[esi]
  431789:	popa   
  43178a:	cs push 0x2e707474
  431790:	outs   dx,DWORD PTR fs:[esi]
  431792:	ja     0x431802
  431794:	ins    BYTE PTR es:[edi],dx
  431795:	outs   dx,DWORD PTR ds:[esi]
  431796:	popa   
  431797:	fs gs jb 0x43179b
  43179b:	add    BYTE PTR [eax+0x0],ch
  43179e:	je     0x4317a0
  4317a0:	je     0x4317a2
  4317a2:	jo     0x4317a4
  4317a4:	jae    0x4317a6
  4317a6:	cmp    al,BYTE PTR [eax]
  4317a8:	das    
  4317a9:	add    BYTE PTR [edi],ch
  4317ab:	add    BYTE PTR [eax],al
  4317ad:	add    BYTE PTR [eax],al
  4317af:	add    BYTE PTR [ebx+0x4d],al
  4317b2:	gs ins DWORD PTR es:[edi],dx
  4317b4:	pop    eax
  4317b5:	ins    DWORD PTR es:[edi],dx
  4317b6:	ins    BYTE PTR es:[edi],dx
  4317b7:	dec    edi
  4317b8:	jo     0x43181f
  4317ba:	outs   dx,BYTE PTR ds:[esi]
  4317bb:	push   ebx
  4317bc:	arpl   WORD PTR [edi+0x70],bp
  4317bf:	cmp    bh,BYTE PTR gs:[edx]
  4317c2:	push   edx
  4317c3:	gs popa 
  4317c5:	fs push edx
  4317c7:	outs   dx,DWORD PTR ds:[esi]
  4317c8:	outs   dx,DWORD PTR ds:[esi]
  4317c9:	je     0x4317cb
  4317cb:	add    BYTE PTR [ebx+0x4d],al
  4317ce:	gs ins DWORD PTR es:[edi],dx
  4317d0:	pop    eax
  4317d1:	ins    DWORD PTR es:[edi],dx
  4317d2:	ins    BYTE PTR es:[edi],dx
  4317d3:	dec    edi
  4317d4:	jo     0x43183b
  4317d6:	outs   dx,BYTE PTR ds:[esi]
  4317d7:	push   ebx
  4317d8:	arpl   WORD PTR [edi+0x70],bp
  4317db:	cmp    bh,BYTE PTR gs:[edx]
  4317de:	pop    edi
  4317df:	pop    edi
  4317e0:	push   edx
  4317e1:	gs popa 
  4317e3:	fs pop eax
  4317e5:	ins    DWORD PTR es:[edi],dx
  4317e6:	ins    BYTE PTR es:[edi],dx
  4317e7:	dec    esi
  4317e8:	outs   dx,DWORD PTR ds:[esi]
  4317e9:	fs add BYTE PTR gs:[edi],ch
  4317ed:	add    BYTE PTR [eax],al
  4317ef:	add    BYTE PTR [edx],cl
  4317f1:	add    BYTE PTR [eax],al
  4317f3:	add    BYTE PTR [eax+eax*1+0x64],bl
  4317f7:	add    BYTE PTR [edi+0x0],ch
  4317fa:	ja     0x4317fc
  4317fc:	outs   dx,BYTE PTR ds:[esi]
  4317fd:	add    BYTE PTR [eax+eax*1+0x6f],ch
  431801:	add    BYTE PTR [ecx+0x0],ah
  431804:	add    BYTE PTR fs:[eax],al
  431807:	add    BYTE PTR [eax+eax*1+0x72],bl
  43180b:	add    BYTE PTR [ebp+0x0],ah
  43180e:	jae    0x431810
  431810:	je     0x431812
  431812:	outs   dx,DWORD PTR ds:[esi]
  431813:	add    BYTE PTR [edx+0x0],dh
  431816:	add    BYTE PTR gs:[eax+eax*1+0x0],bl
  43181b:	add    BYTE PTR [eax+eax*1+0x75],bl
  43181f:	add    BYTE PTR [eax+0x0],dh
  431822:	add    BYTE PTR fs:[ecx+0x0],ah
  431826:	je     0x431828
  431828:	add    BYTE PTR gs:[esi],ch
  43182b:	add    BYTE PTR [eax+eax*1+0x6f],ch
  43182f:	add    BYTE PTR [ebx+0x0],ah
  431832:	imul   eax,DWORD PTR [eax],0x0
  431835:	add    BYTE PTR [eax],al
  431837:	add    BYTE PTR [eax+eax*1+0x72],bl
  43183b:	add    BYTE PTR [edi+0x0],ch
  43183e:	ins    BYTE PTR es:[edi],dx
  43183f:	add    BYTE PTR [eax+eax*1+0x62],ch
  431843:	add    BYTE PTR [ecx+0x0],ah
  431846:	arpl   WORD PTR [eax],ax
  431848:	imul   eax,DWORD PTR [eax],0x0
  43184b:	add    BYTE PTR [edx],bh
  43184d:	add    BYTE PTR [edi],ch
  43184f:	add    BYTE PTR [edi],ch
  431851:	add    BYTE PTR [eax],al
  431853:	add    BYTE PTR [ebp+0x61],cl
  431856:	outs   dx,BYTE PTR ds:[esi]
  431857:	popa   
  431858:	addr16 gs jb 0x4318aa
  43185c:	push   ebx
  43185d:	cmp    bh,BYTE PTR [edx]
  43185f:	inc    ebx
  431860:	push   ebp
  431861:	jo     0x4318c7
  431863:	popa   
  431864:	je     0x4318cb
  431866:	dec    ebp
  431867:	popa   
  431868:	outs   dx,BYTE PTR ds:[esi]
  431869:	popa   
  43186a:	addr16 gs jb 0x4318a8
  43186e:	cmp    bl,BYTE PTR [edi+0x5f]
  431871:	push   ebx
  431872:	je     0x4318d5
  431874:	jb     0x4318ea
  431876:	add    BYTE PTR [eax],al
  431878:	cs pop esp
  43187a:	dec    ebp
  43187b:	popa   
  43187c:	outs   dx,BYTE PTR ds:[esi]
  43187d:	popa   
  43187e:	addr16 gs jb 0x4318de
  431882:	push   ebp
  431883:	jo     0x4318e9
  431885:	popa   
  431886:	je     0x4318ed
  431888:	dec    ebp
  431889:	popa   
  43188a:	outs   dx,BYTE PTR ds:[esi]
  43188b:	popa   
  43188c:	addr16 gs jb 0x4318be
  431890:	arpl   WORD PTR [eax+0x70],si
  431893:	add    BYTE PTR [eax],al
  431895:	add    BYTE PTR [eax],al
  431897:	add    BYTE PTR [esi+0x61],al
  43189a:	imul   ebp,DWORD PTR [ebp+eiz*2+0x64],0x206f7420
  4318a2:	popa   
  4318a3:	arpl   WORD PTR [ecx+0x75],si
  4318a6:	imul   esi,DWORD PTR [edx+0x65],0x636f6c20
  4318ad:	imul   ebp,DWORD PTR [esi],0x20
  4318b0:	inc    ecx
  4318b1:	outs   dx,BYTE PTR ds:[esi]
  4318b2:	outs   dx,DWORD PTR ds:[esi]
  4318b3:	je     0x43191d
  4318b5:	gs jb  0x4318d8
  4318b8:	jne    0x43192a
  4318ba:	fs popa 
  4318bc:	je     0x431923
  4318be:	and    BYTE PTR [eax+0x72],dh
  4318c1:	outs   dx,DWORD PTR ds:[esi]
  4318c2:	arpl   WORD PTR [ebp+0x73],sp
  4318c5:	jae    0x4318e7
  4318c7:	arpl   WORD PTR [edi+0x75],bp
  4318ca:	ins    BYTE PTR es:[edi],dx
  4318cb:	and    BYTE PTR fs:[edx+0x65],ah
  4318cf:	and    BYTE PTR [edx+0x75],dh
  4318d2:	outs   dx,BYTE PTR ds:[esi]
  4318d3:	outs   dx,BYTE PTR ds:[esi]
  4318d4:	imul   ebp,DWORD PTR [esi+0x67],0x2e
  4318db:	add    BYTE PTR [ebp+0x70],dh
  4318de:	fs popa 
  4318e0:	je     0x431947
  4318e2:	pop    edi
  4318e3:	gs jb  0x431958
  4318e6:	outs   dx,DWORD PTR ds:[esi]
  4318e7:	jb     0x431948
  4318e9:	ins    BYTE PTR es:[edi],dx
  4318ea:	outs   dx,DWORD PTR ds:[esi]
  4318eb:	arpl   WORD PTR [ebx+0x0],bp
  4318ee:	add    BYTE PTR [eax],al
  4318f0:	jne    0x431962
  4318f2:	fs popa 
  4318f4:	je     0x43195b
  4318f6:	pop    edi
  4318f7:	gs jb  0x43196c
  4318fa:	outs   dx,DWORD PTR ds:[esi]
  4318fb:	jb     0x43195c
  4318fd:	popa   
  4318fe:	jo     0x431970
  431900:	pop    edi
  431901:	jae    0x431977
  431903:	imul   ebp,DWORD PTR [esp+ebp*2+0x5f],0x6e6e7572
  43190b:	imul   ebp,DWORD PTR [esi+0x67],0x61460000
  431912:	imul   ebp,DWORD PTR [ebp+eiz*2+0x64],0x206f7420
  43191a:	arpl   WORD PTR [ebp+eiz*2+0x61],bp
  43191e:	jb     0x431940
  431920:	je     0x431987
  431922:	ins    DWORD PTR es:[edi],dx
  431923:	jo     0x431945
  431925:	outs   dx,WORD PTR ds:[esi]
  431927:	ins    BYTE PTR es:[edi],dx
  431928:	fs gs jb 0x43195a
  43192c:	and    BYTE PTR ds:0x70750073,ah
  431932:	fs popa 
  431934:	je     0x43199b
  431936:	pop    edi
  431937:	gs jb  0x4319ac
  43193a:	outs   dx,DWORD PTR ds:[esi]
  43193b:	jb     0x43199c
  43193d:	arpl   WORD PTR [ebp+eiz*2+0x61],bp
  431941:	jb     0x4319a2
  431943:	je     0x4319aa
  431945:	ins    DWORD PTR es:[edi],dx
  431946:	jo     0x431948
  431948:	jne    0x4319ba
  43194a:	fs popa 
  43194c:	je     0x4319b3
  43194e:	pop    edi
  43194f:	gs jb  0x4319c4
  431952:	outs   dx,DWORD PTR ds:[esi]
  431953:	jb     0x4319b4
  431955:	outs   dx,DWORD PTR fs:[esi]
  431957:	ja     0x4319c7
  431959:	ins    BYTE PTR es:[edi],dx
  43195a:	outs   dx,DWORD PTR ds:[esi]
  43195b:	popa   
  43195c:	fs pop edi
  43195e:	jo     0x4319c1
  431960:	je     0x4319c5
  431962:	push   0x70002e00
  431967:	add    BYTE PTR [ecx+0x0],ah
  43196a:	je     0x43196c
  43196c:	arpl   WORD PTR [eax],ax
  43196e:	push   0x0
  431973:	add    BYTE PTR [eax+eax*1+0x75],bl
  431977:	add    BYTE PTR [eax+0x0],dh
  43197a:	add    BYTE PTR fs:[ecx+0x0],ah
  43197e:	je     0x431980
  431980:	add    BYTE PTR gs:[esi],ch
  431983:	add    BYTE PTR [eax],al
  431985:	add    BYTE PTR [eax],al
  431987:	add    BYTE PTR [ebp+0x70],dh
  43198a:	fs popa 
  43198c:	je     0x4319f3
  43198e:	pop    edi
  43198f:	gs jb  0x431a04
  431992:	outs   dx,DWORD PTR ds:[esi]
  431993:	jb     0x4319f4
  431995:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
  43199c:	add    BYTE PTR [eax],al
  43199e:	add    BYTE PTR [eax],al
  4319a0:	arpl   WORD PTR [edi+0x6d],bp
  4319a3:	cs addr16 popa 
  4319a6:	jb     0x431a0d
  4319a8:	outs   dx,BYTE PTR ds:[esi]
  4319a9:	popa   
  4319aa:	cs push 0x2e707474
  4319b0:	arpl   WORD PTR [ecx+ebp*2+0x65],bp
  4319b4:	outs   dx,BYTE PTR ds:[esi]
  4319b5:	je     0x4319b7
  4319b7:	add    BYTE PTR [ebp+0x61],cl
  4319ba:	outs   dx,BYTE PTR ds:[esi]
  4319bb:	popa   
  4319bc:	addr16 gs jb 0x431a0e
  4319c0:	push   ebx
  4319c1:	cmp    bh,BYTE PTR [edx]
  4319c3:	inc    ebx
  4319c4:	push   ebp
  4319c5:	jo     0x431a2b
  4319c7:	popa   
  4319c8:	je     0x431a2f
  4319ca:	dec    ebp
  4319cb:	popa   
  4319cc:	outs   dx,BYTE PTR ds:[esi]
  4319cd:	popa   
  4319ce:	addr16 gs jb 0x431a0c
  4319d2:	cmp    bl,BYTE PTR [edi+0x5f]
  4319d5:	inc    esp
  4319d6:	outs   dx,DWORD PTR ds:[esi]
  4319d7:	ja     0x431a47
  4319d9:	ins    BYTE PTR es:[edi],dx
  4319da:	outs   dx,DWORD PTR ds:[esi]
  4319db:	popa   
  4319dc:	fs push ebp
  4319de:	jo     0x431a44
  4319e0:	popa   
  4319e1:	je     0x431a48
  4319e3:	pop    eax
  4319e4:	ins    DWORD PTR es:[edi],dx
  4319e5:	ins    BYTE PTR es:[edi],dx
  4319e6:	add    BYTE PTR [eax],al
  4319e8:	inc    esi
  4319e9:	popa   
  4319ea:	je     0x431a4d
  4319ec:	ins    BYTE PTR es:[edi],dx
  4319ed:	and    BYTE PTR [ebp+0x72],ah
  4319f0:	jb     0x431a61
  4319f2:	jb     0x431a22
  4319f4:	and    BYTE PTR [edx+0x65],dl
  4319f7:	arpl   WORD PTR [ebp+0x72],si
  4319fa:	jae    0x431a65
  4319fc:	jbe    0x431a63
  4319fe:	and    BYTE PTR [ebp+0x70],dh
  431a01:	fs popa 
  431a03:	je     0x431a6a
  431a05:	and    BYTE PTR [eax+0x6d],bh
  431a08:	ins    BYTE PTR es:[edi],dx
  431a09:	and    BYTE PTR [ebp+0x72],dh
  431a0c:	ins    BYTE PTR es:[edi],dx
  431a0d:	add    BYTE PTR cs:[eax],al
  431a10:	jne    0x431a82
  431a12:	fs popa 
  431a14:	je     0x431a7b
  431a16:	pop    edi
  431a17:	gs jb  0x431a8c
  431a1a:	outs   dx,DWORD PTR ds:[esi]
  431a1b:	jb     0x431a7c
  431a1d:	jb     0x431a84
  431a1f:	arpl   WORD PTR [ebp+0x72],si
  431a22:	jae    0x431a8d
  431a24:	jbe    0x431a8b
  431a26:	pop    edi
  431a27:	jne    0x431a9b
  431a29:	ins    BYTE PTR es:[edi],dx
  431a2a:	add    BYTE PTR [eax],al
  431a2c:	jbe    0x431a93
  431a2e:	jb     0x431aa3
  431a30:	imul   ebp,DWORD PTR [edi+0x6e],0x666e692f
  431a37:	outs   dx,DWORD PTR ds:[esi]
  431a38:	add    BYTE PTR [eax],al
  431a3a:	add    BYTE PTR [eax],al
  431a3c:	jbe    0x431aa3
  431a3e:	jb     0x431ab3
  431a40:	imul   ebp,DWORD PTR [edi+0x6e],0x6574692f
  431a47:	ins    DWORD PTR es:[edi],dx
  431a48:	jae    0x431a4a
  431a4a:	add    BYTE PTR [eax],al
  431a4c:	das    
  431a4d:	add    BYTE PTR [ebp+0x0],dh
  431a50:	jo     0x431a52
  431a52:	add    BYTE PTR fs:[ecx+0x0],ah
  431a56:	je     0x431a58
  431a58:	add    BYTE PTR gs:[esi],ch
  431a5b:	add    BYTE PTR [eax],al
  431a5d:	add    BYTE PTR [eax],al
  431a5f:	add    BYTE PTR [edi+0x0],al
  431a62:	popa   
  431a63:	add    BYTE PTR [edx+0x0],dh
  431a66:	add    BYTE PTR gs:[esi+0x0],ch
  431a6a:	popa   
  431a6b:	add    BYTE PTR [eax+eax*1+0x61],dl
  431a6f:	add    BYTE PTR [eax+eax*1+0x6b],ch
  431a73:	add    BYTE PTR [edi+0x0],cl
  431a76:	jbe    0x431a78
  431a78:	add    BYTE PTR gs:[edx+0x0],dh
  431a7c:	ins    BYTE PTR es:[edi],dx
  431a7d:	add    BYTE PTR [ecx+0x0],ah
  431a80:	jns    0x431a82
  431a82:	add    BYTE PTR cs:[ebp+0x0],ah
  431a86:	js     0x431a88
  431a88:	add    BYTE PTR gs:[eax],al
  431a8b:	add    BYTE PTR [ebp+0x70],dh
  431a8e:	fs popa 
  431a90:	je     0x431af7
  431a92:	pop    edi
  431a93:	gs jb  0x431b08
  431a96:	outs   dx,DWORD PTR ds:[esi]
  431a97:	jb     0x431af8
  431a99:	ins    DWORD PTR es:[edi],dx
  431a9a:	imul   esi,DWORD PTR [ebx+0x73],0x5f676e69
  431aa1:	imul   bp,WORD PTR [ebp+eiz*2+0x5f],0x7973
  431aa8:	jae    0x431b1e
  431aaa:	gs ins DWORD PTR es:[edi],dx
  431aac:	pop    edi
  431aad:	imul   bp,WORD PTR [ebp+eiz*2+0x0],0x0
  431ab4:	jne    0x431b26
  431ab6:	fs popa 
  431ab8:	je     0x431b1f
  431aba:	pop    edi
  431abb:	gs jb  0x431b30
  431abe:	outs   dx,DWORD PTR ds:[esi]
  431abf:	jb     0x431b20
  431ac1:	fs gs ins BYTE PTR es:[edi],dx
  431ac4:	gs je  0x431b2c
  431ac7:	add    BYTE PTR [ebp+0x61],cl
  431aca:	outs   dx,BYTE PTR ds:[esi]
  431acb:	popa   
  431acc:	addr16 gs jb 0x431b1e
  431ad0:	push   ebx
  431ad1:	cmp    bh,BYTE PTR [edx]
  431ad3:	inc    ebx
  431ad4:	push   ebp
  431ad5:	jo     0x431b3b
  431ad7:	popa   
  431ad8:	je     0x431b3f
  431ada:	dec    ebp
  431adb:	popa   
  431adc:	outs   dx,BYTE PTR ds:[esi]
  431add:	popa   
  431ade:	addr16 gs jb 0x431b1c
  431ae2:	cmp    bl,BYTE PTR [edi+0x5f]
  431ae5:	push   edx
  431ae6:	gs jo  0x431b55
  431ae9:	popa   
  431aea:	arpl   WORD PTR [ebp+0x46],sp
  431aed:	imul   ebp,DWORD PTR [ebp+eiz*2+0x73],0x45000000
  431af5:	jb     0x431b69
  431af7:	outs   dx,DWORD PTR ds:[esi]
  431af8:	jb     0x431b1a
  431afa:	jb     0x431b61
  431afc:	popa   
  431afd:	and    BYTE PTR fs:[eax+0x61],dh
  431b01:	je     0x431b66
  431b03:	push   0x6c696620
  431b08:	add    BYTE PTR gs:[eax],al
  431b0b:	add    BYTE PTR [ebp+0x70],dh
  431b0e:	fs popa 
  431b10:	je     0x431b77
  431b12:	pop    edi
  431b13:	gs jb  0x431b88
  431b16:	outs   dx,DWORD PTR ds:[esi]
  431b17:	jb     0x431b78
  431b19:	arpl   WORD PTR [edi+0x72],bp
  431b1c:	jb     0x431b93
  431b1e:	jo     0x431b94
  431b20:	gs fs pop edi
  431b23:	jo     0x431b86
  431b25:	je     0x431b8a
  431b27:	push   0x0
  431b2c:	inc    ebp
  431b2d:	jb     0x431ba1
  431b2f:	outs   dx,DWORD PTR ds:[esi]
  431b30:	jb     0x431b52
  431b32:	jb     0x431b99
  431b34:	popa   
  431b35:	and    BYTE PTR fs:[esi+0x69],ah
  431b39:	ins    BYTE PTR es:[edi],dx
  431b3a:	and    BYTE PTR gs:[ecx+ebp*2+0x73],ch
  431b3f:	je     0x431b61
  431b41:	data16 jb 0x431bb3
  431b44:	ins    DWORD PTR es:[edi],dx
  431b45:	and    BYTE PTR [eax+0x61],dh
  431b48:	je     0x431bad
  431b4a:	push   0x6c696620
  431b4f:	add    BYTE PTR gs:[eax],al
  431b52:	add    BYTE PTR [eax],al
  431b54:	inc    ebx
  431b55:	outs   dx,DWORD PTR ds:[esi]
  431b56:	jb     0x431bca
  431b58:	jne    0x431bca
  431b5a:	je     0x431bc1
  431b5c:	and    BYTE PTR fs:[eax+0x61],dh
  431b60:	je     0x431bc5
  431b62:	push   0x6c696620
  431b67:	add    BYTE PTR gs:[eax],al
  431b6a:	add    BYTE PTR [eax],al
  431b6c:	inc    esi
  431b6d:	popa   
  431b6e:	imul   ebp,DWORD PTR [ebp+eiz*2+0x64],0x206f7420
  431b76:	bound  esp,QWORD PTR [ecx+0x63]
  431b79:	imul   esi,DWORD PTR [ebp+0x70],0x20
  431b7d:	imul   bp,WORD PTR [ebp+eiz*2+0x20],0x7325
  431b84:	add    BYTE PTR [eax],al
  431b86:	add    BYTE PTR [eax],al
  431b88:	jne    0x431bfa
  431b8a:	fs popa 
  431b8c:	je     0x431bf3
  431b8e:	pop    edi
  431b8f:	gs jb  0x431c04
  431b92:	outs   dx,DWORD PTR ds:[esi]
  431b93:	jb     0x431bf4
  431b95:	bound  esp,QWORD PTR [ecx+0x63]
  431b98:	imul   esi,DWORD PTR [ebp+0x70],0x0
  431b9c:	inc    esi
  431b9d:	popa   
  431b9e:	imul   ebp,DWORD PTR [ebp+eiz*2+0x64],0x206f7420
  431ba6:	jne    0x431c16
  431ba8:	jo     0x431c0b
  431baa:	arpl   WORD PTR [ebx+0x20],bp
  431bad:	imul   bp,WORD PTR [ebp+eiz*2+0x20],0x7266
  431bb4:	outs   dx,DWORD PTR ds:[esi]
  431bb5:	ins    DWORD PTR es:[edi],dx
  431bb6:	and    BYTE PTR [eax+0x61],dh
  431bb9:	je     0x431c1e
  431bbb:	push   0x6c696620
  431bc0:	add    BYTE PTR gs:[eax],al
  431bc3:	add    BYTE PTR [ebp+0x70],dh
  431bc6:	fs popa 
  431bc8:	je     0x431c2f
  431bca:	pop    edi
  431bcb:	gs jb  0x431c40
  431bce:	outs   dx,DWORD PTR ds:[esi]
  431bcf:	jb     0x431c30
  431bd1:	jne    0x431c41
  431bd3:	jo     0x431c36
  431bd5:	arpl   WORD PTR [ebx+0x0],bp
  431bd8:	inc    ebx
  431bd9:	push   edx
  431bda:	inc    ebx
  431bdb:	and    BYTE PTR [ebx+0x68],ah
  431bde:	arpl   WORD PTR gs:[ebx+0x20],bp
  431be2:	popaw  
  431be4:	imul   ebp,DWORD PTR [ebp+eiz*2+0x64],0x732520
  431bec:	jne    0x431c5e
  431bee:	fs popa 
  431bf0:	je     0x431c57
  431bf2:	pop    edi
  431bf3:	gs jb  0x431c68
  431bf6:	outs   dx,DWORD PTR ds:[esi]
  431bf7:	jb     0x431c58
  431bf9:	arpl   WORD PTR [edx+0x63],si
  431bfc:	add    BYTE PTR [eax],al
  431bfe:	add    BYTE PTR [eax],al
  431c00:	push   esp
  431c01:	jb     0x431c7c
  431c03:	imul   ebp,DWORD PTR [esi+0x67],0x206f7420
  431c0a:	fs gs ins BYTE PTR es:[edi],dx
  431c0d:	gs je  0x431c75
  431c10:	and    BYTE PTR [ecx+0x77],ah
  431c13:	popa   
  431c14:	jns    0x431c36
  431c16:	outs   dx,DWORD PTR ds:[esi]
  431c17:	ins    BYTE PTR es:[edi],dx
  431c18:	and    BYTE PTR fs:[ecx+ebp*2+0x72],ah
  431c1d:	arpl   WORD PTR gs:[edi+ebp*2+0x72],si
  431c22:	jns    0x431c44
  431c24:	bound  esi,QWORD PTR [ebp+0x74]
  431c27:	and    BYTE PTR [esi+0x61],ah
  431c2a:	imul   ebp,DWORD PTR [ebp+eiz*2+0x64],0x61460000
  431c32:	imul   ebp,DWORD PTR [ebp+eiz*2+0x64],0x206f7420
  431c3a:	jae    0x431c9d
  431c3c:	jbe    0x431ca3
  431c3e:	and    BYTE PTR [esi+0x69],ah
  431c41:	ins    BYTE PTR es:[edi],dx
  431c42:	and    BYTE PTR gs:[edi+ebp*2+0x20],dh
  431c47:	popa   
  431c48:	jo     0x431cba
  431c4a:	add    BYTE PTR [eax],al
  431c4c:	jne    0x431cbe
  431c4e:	fs popa 
  431c50:	je     0x431cb7
  431c52:	pop    edi
  431c53:	gs jb  0x431cc8
  431c56:	outs   dx,DWORD PTR ds:[esi]
  431c57:	jb     0x431cb8
  431c59:	arpl   WORD PTR [edi+0x70],bp
  431c5c:	jns    0x431cbd
  431c5e:	je     0x431ccf
  431c60:	pop    edi
  431c61:	imul   bp,WORD PTR [ebp+eiz*2+0x73],0x7379
  431c68:	je     0x431ccf
  431c6a:	ins    DWORD PTR es:[edi],dx
  431c6b:	add    BYTE PTR [eax],ah
  431c6d:	outs   dx,DWORD PTR fs:[esi]
  431c6f:	gs jae 0x431c92
  431c72:	outs   dx,BYTE PTR ds:[esi]
  431c73:	outs   dx,DWORD PTR ds:[esi]
  431c74:	je     0x431c96
  431c76:	gs js  0x431ce2
  431c79:	jae    0x431cef
  431c7b:	and    BYTE PTR [edi+0x72],ch
  431c7e:	and    BYTE PTR [ecx+0x73],ch
  431c81:	and    BYTE PTR [esi+0x6f],ch
  431c84:	je     0x431ca6
  431c86:	popa   
  431c87:	and    BYTE PTR [ecx+ebp*2+0x72],ah
  431c8b:	arpl   WORD PTR gs:[edi+ebp*2+0x72],si
  431c90:	jns    0x431c92
  431c92:	add    BYTE PTR [eax],al
  431c94:	push   ebx
  431c95:	outs   dx,DWORD PTR ds:[esi]
  431c96:	jne    0x431d0a
  431c98:	arpl   WORD PTR [ebp+0x20],sp
  431c9b:	imul   esi,DWORD PTR fs:[edx+0x65],0x726f7463
  431ca3:	jns    0x431cc5
  431ca5:	add    BYTE PTR [eax],al
  431ca7:	add    BYTE PTR [ebx+0x61],al
  431caa:	outs   dx,BYTE PTR ds:[esi]
  431cab:	outs   dx,BYTE PTR ds:[esi]
  431cac:	outs   dx,DWORD PTR ds:[esi]
  431cad:	je     0x431ccf
  431caf:	arpl   WORD PTR [edx+0x65],si
  431cb2:	popa   
  431cb3:	je     0x431d1a
  431cb5:	and    BYTE PTR [ebp+eiz*2+0x73],ah
  431cb9:	je     0x431d24
  431cbb:	outs   dx,BYTE PTR ds:[esi]
  431cbc:	popa   
  431cbd:	je     0x431d28
  431cbf:	outs   dx,DWORD PTR ds:[esi]
  431cc0:	outs   dx,BYTE PTR ds:[esi]
  431cc1:	and    BYTE PTR [ecx+ebp*2+0x72],ah
  431cc5:	arpl   WORD PTR gs:[edi+ebp*2+0x72],si
  431cca:	jns    0x431cec
  431ccc:	add    BYTE PTR [eax],al
  431cce:	add    BYTE PTR [eax],al
  431cd0:	pop    esp
  431cd1:	add    BYTE PTR [esi],ch
  431cd3:	add    BYTE PTR [esi],ch
  431cd5:	add    BYTE PTR [eax+eax*1+0x2e],bl
  431cd9:	add    BYTE PTR [esi],ch
  431cdb:	add    BYTE PTR [eax+eax*1+0x62],bl
  431cdf:	add    BYTE PTR [edx+0x0],ah
  431ce2:	je     0x431ce4
  431ce4:	popa   
  431ce5:	add    BYTE PTR [eax+eax*1+0x6b],ch
  431ce9:	add    BYTE PTR [eax+eax*1+0x0],bl
  431ced:	add    BYTE PTR [eax],al
  431cef:	add    BYTE PTR [ebp+0x61],cl
  431cf2:	outs   dx,BYTE PTR ds:[esi]
  431cf3:	popa   
  431cf4:	addr16 gs jb 0x431d46
  431cf8:	push   ebx
  431cf9:	cmp    bh,BYTE PTR [edx]
  431cfb:	inc    ebx
  431cfc:	push   ebp
  431cfd:	jo     0x431d63
  431cff:	popa   
  431d00:	je     0x431d67
  431d02:	dec    ebp
  431d03:	popa   
  431d04:	outs   dx,BYTE PTR ds:[esi]
  431d05:	popa   
  431d06:	addr16 gs jb 0x431d44
  431d0a:	cmp    bl,BYTE PTR [edi+0x5f]
  431d0d:	dec    ebp
  431d0e:	outs   dx,DWORD PTR ds:[esi]
  431d0f:	jbe    0x431d76
  431d11:	dec    edi
  431d12:	jne    0x431d88
  431d14:	outs   dx,DWORD PTR ds:[esi]
  431d15:	inc    di
  431d17:	popa   
  431d18:	jae    0x431d1a
  431d1a:	add    BYTE PTR [eax],al
  431d1c:	arpl   WORD PTR [edi+0x70],bp
  431d1f:	jns    0x431d41
  431d21:	data16 jb 0x431d93
  431d24:	ins    DWORD PTR es:[edi],dx
  431d25:	and    BYTE PTR ds:0x6f742073,ah
  431d2b:	and    BYTE PTR ds:0x6d000073,ah
  431d31:	outs   dx,DWORD PTR ds:[esi]
  431d32:	jbe    0x431d99
  431d34:	and    BYTE PTR [edi+0x75],ch
  431d37:	je     0x431d59
  431d39:	outs   dx,DWORD PTR ds:[esi]
  431d3a:	data16 and BYTE PTR [edi+0x61],ah
  431d3e:	jae    0x431d60
  431d40:	popaw  
  431d42:	imul   ebp,DWORD PTR [ebp+eiz*2+0x64],0x7272652c
  431d4a:	outs   dx,DWORD PTR ds:[esi]
  431d4b:	jb     0x431d8a
  431d4d:	and    eax,0x470073
  431d52:	popa   
  431d53:	add    BYTE PTR [edx+0x0],dh
  431d56:	add    BYTE PTR gs:[esi+0x0],ch
  431d5a:	popa   
  431d5b:	add    BYTE PTR [eax],ah
  431d5d:	add    BYTE PTR [eax+0x0],dl
  431d60:	ins    BYTE PTR es:[edi],dx
  431d61:	add    BYTE PTR [ebp+0x0],dh
  431d64:	jae    0x431d66
  431d66:	add    BYTE PTR [eax],al
  431d68:	dec    ebp
  431d69:	popa   
  431d6a:	outs   dx,BYTE PTR ds:[esi]
  431d6b:	popa   
  431d6c:	addr16 gs jb 0x431dbe
  431d70:	push   ebx
  431d71:	cmp    bh,BYTE PTR [edx]
  431d73:	dec    ecx
  431d74:	jae    0x431dcb
  431d76:	outs   dx,BYTE PTR ds:[esi]
  431d77:	fs gs jb 0x431dc2
  431d7b:	popa   
  431d7c:	jae    0x431d7e
  431d7e:	add    BYTE PTR [eax],al
  431d80:	arpl   WORD PTR [eax+0x65],bp
  431d83:	arpl   WORD PTR [ebx+0x20],bp
  431d86:	bound  esp,QWORD PTR [edx+0x74]
  431d89:	popa   
  431d8a:	ins    BYTE PTR es:[edi],dx
  431d8b:	imul   esp,DWORD PTR [eax],0x25
  431d8e:	jae    0x431db0
  431d90:	imul   esi,DWORD PTR [ebx+0x20],0x65646e75
  431d97:	jb     0x431db9
  431d99:	addr16 popa 
  431d9b:	jae    0x431dbd
  431d9d:	outs   dx,WORD PTR ds:[esi]
  431d9f:	ins    BYTE PTR es:[edi],dx
  431da0:	fs gs jb 0x431de1
  431da4:	and    eax,0x50000064
  431da9:	ins    BYTE PTR es:[edi],dx
  431daa:	jne    0x431e13
  431dac:	imul   ebp,DWORD PTR [esi+0x41],0x506f7475
  431db3:	je     0x431e27
  431db5:	cmp    al,0x63
  431db7:	ins    BYTE PTR es:[edi],dx
  431db8:	popa   
  431db9:	jae    0x431e2e
  431dbb:	and    BYTE PTR [ecx+0x48],cl
  431dbe:	je     0x431e34
  431dc0:	jo     0x431e06
  431dc2:	outs   dx,DWORD PTR ds:[esi]
  431dc3:	ja     0x431e33
  431dc5:	ins    BYTE PTR es:[edi],dx
  431dc6:	outs   dx,DWORD PTR ds:[esi]
  431dc7:	popa   
  431dc8:	fs gs jb 0x431e0a
  431dcc:	cmp    bh,BYTE PTR [edx]
  431dce:	inc    ebx
  431dcf:	jb     0x431e36
  431dd1:	popa   
  431dd2:	je     0x431e39
  431dd4:	add    BYTE PTR [eax],al
  431dd6:	add    BYTE PTR [eax],al
  431dd8:	push   eax
  431dd9:	ins    BYTE PTR es:[edi],dx
  431dda:	jne    0x431e43
  431ddc:	imul   ebp,DWORD PTR [esi+0x41],0x506f7475
  431de3:	je     0x431e57
  431de5:	cmp    al,0x63
  431de7:	ins    BYTE PTR es:[edi],dx
  431de8:	popa   
  431de9:	jae    0x431e5e
  431deb:	and    BYTE PTR [ecx+0x46],cl
  431dee:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x67616e61
  431df6:	gs jb  0x431e37
  431df9:	cmp    bh,BYTE PTR [edx]
  431dfb:	inc    ebx
  431dfc:	jb     0x431e63
  431dfe:	popa   
  431dff:	je     0x431e66
  431e01:	add    BYTE PTR [eax],al
  431e03:	add    BYTE PTR [eax+0x6c],dl
  431e06:	jne    0x431e6f
  431e08:	imul   ebp,DWORD PTR [esi+0x41],0x506f7475
  431e0f:	je     0x431e83
  431e11:	cmp    al,0x63
  431e13:	ins    BYTE PTR es:[edi],dx
  431e14:	popa   
  431e15:	jae    0x431e8a
  431e17:	and    BYTE PTR [ecx+0x48],cl
  431e1a:	je     0x431e90
  431e1c:	jo     0x431e61
  431e1e:	ins    BYTE PTR es:[edi],dx
  431e1f:	imul   esp,DWORD PTR [ebp+0x6e],0x3a3a3e74
  431e26:	inc    ebx
  431e27:	jb     0x431e8e
  431e29:	popa   
  431e2a:	je     0x431e91
  431e2c:	add    BYTE PTR [eax],al
  431e2e:	add    BYTE PTR [eax],al
  431e30:	ins    DWORD PTR es:[edi],dx
  431e31:	popa   
  431e32:	jo     0x431e63
  431e34:	jae    0x431e9b
  431e36:	je     0x431e74
  431e38:	push   esp
  431e39:	and    BYTE PTR ds:[edi+ebp*2+0x6f],dh
  431e3e:	and    BYTE PTR [edi+ebp*2+0x6e],ch
  431e42:	add    BYTE PTR [bx+di+0x6e],ch
  431e46:	jbe    0x431ea9
  431e48:	ins    BYTE PTR es:[edi],dx
  431e49:	imul   esp,DWORD PTR [eax+eiz*1+0x6d],0x732f7061
  431e51:	gs je  0x431e90
  431e54:	push   esp
  431e55:	and    BYTE PTR ds:[ecx+0x74],ch
  431e59:	gs jb  0x431ebd
  431e5c:	je     0x431ecd
  431e5e:	jb     0x431e60
  431e60:	gs js  0x431ed3
  431e63:	arpl   WORD PTR gs:[ebp+eiz*2+0x64],si
  431e68:	and    BYTE PTR [eax+eax*1],bh
  431e6b:	add    BYTE PTR [ebp+0x6e],dh
  431e6e:	gs js  0x431ee1
  431e71:	arpl   WORD PTR gs:[ebp+eiz*2+0x64],si
  431e76:	and    BYTE PTR [ebp+0x6e],ah
  431e79:	and    BYTE PTR fs:[edi+0x66],ch
  431e7d:	and    BYTE PTR [ecx+eiz*2+0x74],ah
  431e81:	popa   
  431e82:	add    BYTE PTR [eax],al
  431e84:	gs js  0x431ef7
  431e87:	arpl   WORD PTR gs:[ebp+eiz*2+0x64],si
  431e8c:	and    BYTE PTR [ebp+0x6c],ah
  431e8f:	gs ins DWORD PTR es:[edi],dx
  431e91:	outs   dx,BYTE PTR gs:[esi]
  431e93:	je     0x431eb5
  431e95:	outs   dx,BYTE PTR ds:[esi]
  431e96:	popa   
  431e97:	ins    DWORD PTR es:[edi],dx
  431e98:	add    BYTE PTR gs:[eax],al
  431e9b:	add    BYTE PTR [ebp+0x78],ah
  431e9e:	jo     0x431f05
  431ea0:	arpl   WORD PTR [ebp+eiz*2+0x64],si
  431ea4:	and    BYTE PTR [esi],bh
  431ea6:	add    BYTE PTR [eax],al
  431ea8:	add    BYTE PTR [edx-0x4c7fffbf],dh
  431eae:	inc    ecx
  431eaf:	add    BYTE PTR [eax-0x4e],dh
  431eb2:	inc    ecx
  431eb3:	add    BYTE PTR [eax-0x2fffbe4e],dh
  431eb9:	mov    dl,0x41
  431ebb:	add    BYTE PTR [eax+0x4b],dl
  431ebe:	inc    edx
  431ebf:	add    BYTE PTR [eax],dl
  431ec1:	mov    bl,0x41
  431ec3:	add    BYTE PTR [eax-0x6fffbe4d],al
  431ec9:	mov    bl,0x41
  431ecb:	add    al,dl
  431ecd:	mov    bl,0x41
  431ecf:	add    al,ah
  431ed1:	mov    bl,0x41
  431ed3:	add    BYTE PTR [eax],ah
  431ed5:	mov    ah,0x41
	...
  431edf:	add    BYTE PTR [eax],al
  431ee1:	add    DWORD PTR [ecx],eax
  431ee3:	add    BYTE PTR [eax],al
  431ee5:	add    DWORD PTR [eax],eax
	...
  431ef7:	add    BYTE PTR [ecx],al
	...
  431fd5:	add    BYTE PTR [eax],al
  431fd7:	add    BYTE PTR [ebp+0x78],ah
  431fda:	jo     0x432041
  431fdc:	arpl   WORD PTR [ebp+eiz*2+0x64],si
  431fe0:	and    BYTE PTR [ecx+0x74],ah
  431fe3:	je     0x432057
  431fe5:	imul   esp,DWORD PTR [edx+0x75],0x6e206574
  431fec:	popa   
  431fed:	ins    DWORD PTR es:[edi],dx
  431fee:	add    BYTE PTR gs:[ebp+0x78],ah
  431ff2:	jo     0x432059
  431ff4:	arpl   WORD PTR [ebp+eiz*2+0x64],si
  431ff8:	and    BYTE PTR ds:0x78650000,bh
  431ffe:	jo     0x432065
  432000:	arpl   WORD PTR [ebp+eiz*2+0x64],si
  432004:	and    BYTE PTR [edi],ah
  432006:	and    BYTE PTR [edi+0x72],ch
  432009:	and    BYTE PTR [edx],ah
  43200b:	add    BYTE PTR [ebp+0x78],ah
  43200e:	jo     0x432075
  432010:	arpl   WORD PTR [ebp+eiz*2+0x64],si
  432014:	and    BYTE PTR [ebx],bh
  432016:	add    BYTE PTR [eax],al
  432018:	add    BYTE PTR [ecx],al
  43201a:	add    DWORD PTR [ecx],eax
  43201c:	add    DWORD PTR [ecx],eax
  43201e:	add    DWORD PTR [ecx],eax
  432020:	add    DWORD PTR [eax],eax
  432022:	add    BYTE PTR [ecx],al
  432024:	add    DWORD PTR [eax],eax
  432026:	add    DWORD PTR [ecx],eax
  432028:	add    DWORD PTR [ecx],eax
  43202a:	add    DWORD PTR [ecx],eax
  43202c:	add    DWORD PTR [ecx],eax
  43202e:	add    DWORD PTR [ecx],eax
  432030:	add    DWORD PTR [ecx],eax
  432032:	add    DWORD PTR [ecx],eax
  432034:	add    DWORD PTR [ecx],eax
  432036:	add    DWORD PTR [ecx],eax
  432038:	add    BYTE PTR [ecx],al
  43203a:	add    DWORD PTR [ecx],eax
  43203c:	add    DWORD PTR [ecx],eax
  43203e:	add    DWORD PTR [ecx],eax
  432040:	add    DWORD PTR [ecx],eax
  432042:	add    DWORD PTR [ecx],eax
  432044:	add    DWORD PTR [ecx],eax
  432046:	add    DWORD PTR [eax],eax
  432048:	add    DWORD PTR [ecx],eax
  43204a:	add    DWORD PTR [ecx],eax
  43204c:	add    DWORD PTR [ecx],eax
  43204e:	add    DWORD PTR [ecx],eax
  432050:	add    DWORD PTR [ecx],eax
  432052:	add    DWORD PTR [ecx],eax
  432054:	add    DWORD PTR [ecx],eax
  432056:	add    BYTE PTR [eax],al
  432058:	add    DWORD PTR [ecx],eax
  43205a:	add    DWORD PTR [ecx],eax
  43205c:	add    DWORD PTR [ecx],eax
  43205e:	add    DWORD PTR [ecx],eax
  432060:	add    DWORD PTR [ecx],eax
  432062:	add    DWORD PTR [ecx],eax
  432064:	add    DWORD PTR [ecx],eax
  432066:	add    DWORD PTR [ecx],eax
  432068:	add    DWORD PTR [ecx],eax
  43206a:	add    DWORD PTR [ecx],eax
  43206c:	add    DWORD PTR [ecx],eax
  43206e:	add    DWORD PTR [ecx],eax
  432070:	add    DWORD PTR [ecx],eax
  432072:	add    DWORD PTR [ecx],eax
  432074:	add    DWORD PTR [ecx],eax
  432076:	add    DWORD PTR [ecx],eax
  432078:	add    DWORD PTR [ecx],eax
  43207a:	add    DWORD PTR [ecx],eax
  43207c:	add    DWORD PTR [ecx],eax
  43207e:	add    DWORD PTR [ecx],eax
  432080:	add    DWORD PTR [ecx],eax
  432082:	add    DWORD PTR [ecx],eax
  432084:	add    DWORD PTR [ecx],eax
  432086:	add    DWORD PTR [ecx],eax
  432088:	add    DWORD PTR [ecx],eax
  43208a:	add    DWORD PTR [ecx],eax
  43208c:	add    DWORD PTR [ecx],eax
  43208e:	add    DWORD PTR [ecx],eax
  432090:	add    DWORD PTR [ecx],eax
  432092:	add    DWORD PTR [ecx],eax
  432094:	add    DWORD PTR [ecx],eax
  432096:	add    DWORD PTR [ecx],eax
  432098:	add    DWORD PTR [ecx],eax
  43209a:	add    DWORD PTR [ecx],eax
  43209c:	add    DWORD PTR [ecx],eax
  43209e:	add    DWORD PTR [ecx],eax
  4320a0:	add    DWORD PTR [ecx],eax
  4320a2:	add    DWORD PTR [ecx],eax
  4320a4:	add    DWORD PTR [ecx],eax
  4320a6:	add    DWORD PTR [ecx],eax
  4320a8:	add    DWORD PTR [ecx],eax
  4320aa:	add    DWORD PTR [ecx],eax
  4320ac:	add    DWORD PTR [ecx],eax
  4320ae:	add    DWORD PTR [ecx],eax
  4320b0:	add    DWORD PTR [ecx],eax
  4320b2:	add    DWORD PTR [ecx],eax
  4320b4:	add    DWORD PTR [ecx],eax
  4320b6:	add    DWORD PTR [ecx],eax
  4320b8:	add    DWORD PTR [ecx],eax
  4320ba:	add    DWORD PTR [ecx],eax
  4320bc:	add    DWORD PTR [ecx],eax
  4320be:	add    DWORD PTR [ecx],eax
  4320c0:	add    DWORD PTR [ecx],eax
  4320c2:	add    DWORD PTR [ecx],eax
  4320c4:	add    DWORD PTR [ecx],eax
  4320c6:	add    DWORD PTR [ecx],eax
  4320c8:	add    DWORD PTR [ecx],eax
  4320ca:	add    DWORD PTR [ecx],eax
  4320cc:	add    DWORD PTR [ecx],eax
  4320ce:	add    DWORD PTR [ecx],eax
  4320d0:	add    DWORD PTR [ecx],eax
  4320d2:	add    DWORD PTR [ecx],eax
  4320d4:	add    DWORD PTR [ecx],eax
  4320d6:	add    DWORD PTR [ecx],eax
  4320d8:	add    DWORD PTR [ecx],eax
  4320da:	add    DWORD PTR [ecx],eax
  4320dc:	add    DWORD PTR [ecx],eax
  4320de:	add    DWORD PTR [ecx],eax
  4320e0:	add    DWORD PTR [ecx],eax
  4320e2:	add    DWORD PTR [ecx],eax
  4320e4:	add    DWORD PTR [ecx],eax
  4320e6:	add    DWORD PTR [ecx],eax
  4320e8:	add    DWORD PTR [ecx],eax
  4320ea:	add    DWORD PTR [ecx],eax
  4320ec:	add    DWORD PTR [ecx],eax
  4320ee:	add    DWORD PTR [ecx],eax
  4320f0:	add    DWORD PTR [ecx],eax
  4320f2:	add    DWORD PTR [ecx],eax
  4320f4:	add    DWORD PTR [ecx],eax
  4320f6:	add    DWORD PTR [ecx],eax
  4320f8:	add    DWORD PTR [ecx],eax
  4320fa:	add    DWORD PTR [ecx],eax
  4320fc:	add    DWORD PTR [ecx],eax
  4320fe:	add    DWORD PTR [ecx],eax
  432100:	add    DWORD PTR [ecx],eax
  432102:	add    DWORD PTR [ecx],eax
  432104:	add    DWORD PTR [ecx],eax
  432106:	add    DWORD PTR [ecx],eax
  432108:	add    DWORD PTR [ecx],eax
  43210a:	add    DWORD PTR [ecx],eax
  43210c:	add    DWORD PTR [ecx],eax
  43210e:	add    DWORD PTR [ecx],eax
  432110:	add    DWORD PTR [ecx],eax
  432112:	add    DWORD PTR [ecx],eax
  432114:	add    DWORD PTR [ecx],eax
  432116:	add    DWORD PTR [ecx],eax
  432118:	add    BYTE PTR [ecx],al
  43211a:	add    DWORD PTR [ecx],eax
  43211c:	add    DWORD PTR [ecx],eax
  43211e:	add    DWORD PTR [ecx],eax
  432120:	add    DWORD PTR [eax],eax
  432122:	add    BYTE PTR [ecx],al
  432124:	add    DWORD PTR [eax],eax
  432126:	add    DWORD PTR [ecx],eax
  432128:	add    DWORD PTR [ecx],eax
  43212a:	add    DWORD PTR [ecx],eax
  43212c:	add    DWORD PTR [ecx],eax
  43212e:	add    DWORD PTR [ecx],eax
  432130:	add    DWORD PTR [ecx],eax
  432132:	add    DWORD PTR [ecx],eax
  432134:	add    DWORD PTR [ecx],eax
  432136:	add    DWORD PTR [ecx],eax
  432138:	add    BYTE PTR [eax],al
  43213a:	add    DWORD PTR [ecx],eax
  43213c:	add    DWORD PTR [ecx],eax
  43213e:	add    DWORD PTR [ecx],eax
  432140:	add    DWORD PTR [ecx],eax
  432142:	add    DWORD PTR [ecx],eax
  432144:	add    DWORD PTR [ecx],eax
  432146:	add    DWORD PTR [eax],eax
  432148:	add    DWORD PTR [ecx],eax
  43214a:	add    DWORD PTR [ecx],eax
  43214c:	add    DWORD PTR [ecx],eax
  43214e:	add    DWORD PTR [ecx],eax
  432150:	add    DWORD PTR [ecx],eax
  432152:	add    DWORD PTR [ecx],eax
  432154:	add    BYTE PTR [eax],al
  432156:	add    BYTE PTR [eax],al
  432158:	add    DWORD PTR [ecx],eax
  43215a:	add    DWORD PTR [ecx],eax
  43215c:	add    DWORD PTR [ecx],eax
  43215e:	add    DWORD PTR [ecx],eax
  432160:	add    DWORD PTR [ecx],eax
  432162:	add    DWORD PTR [ecx],eax
  432164:	add    DWORD PTR [ecx],eax
  432166:	add    DWORD PTR [ecx],eax
  432168:	add    DWORD PTR [ecx],eax
  43216a:	add    DWORD PTR [ecx],eax
  43216c:	add    DWORD PTR [ecx],eax
  43216e:	add    DWORD PTR [ecx],eax
  432170:	add    DWORD PTR [ecx],eax
  432172:	add    DWORD PTR [ecx],eax
  432174:	add    DWORD PTR [ecx],eax
  432176:	add    DWORD PTR [ecx],eax
  432178:	add    DWORD PTR [ecx],eax
  43217a:	add    DWORD PTR [ecx],eax
  43217c:	add    DWORD PTR [ecx],eax
  43217e:	add    DWORD PTR [ecx],eax
  432180:	add    DWORD PTR [ecx],eax
  432182:	add    DWORD PTR [ecx],eax
  432184:	add    DWORD PTR [ecx],eax
  432186:	add    DWORD PTR [ecx],eax
  432188:	add    DWORD PTR [ecx],eax
  43218a:	add    DWORD PTR [ecx],eax
  43218c:	add    DWORD PTR [ecx],eax
  43218e:	add    DWORD PTR [ecx],eax
  432190:	add    DWORD PTR [ecx],eax
  432192:	add    DWORD PTR [ecx],eax
  432194:	add    DWORD PTR [ecx],eax
  432196:	add    DWORD PTR [ecx],eax
  432198:	add    DWORD PTR [ecx],eax
  43219a:	add    DWORD PTR [ecx],eax
  43219c:	add    DWORD PTR [ecx],eax
  43219e:	add    DWORD PTR [ecx],eax
  4321a0:	add    DWORD PTR [ecx],eax
  4321a2:	add    DWORD PTR [ecx],eax
  4321a4:	add    DWORD PTR [ecx],eax
  4321a6:	add    DWORD PTR [ecx],eax
  4321a8:	add    DWORD PTR [ecx],eax
  4321aa:	add    DWORD PTR [ecx],eax
  4321ac:	add    DWORD PTR [ecx],eax
  4321ae:	add    DWORD PTR [ecx],eax
  4321b0:	add    DWORD PTR [ecx],eax
  4321b2:	add    DWORD PTR [ecx],eax
  4321b4:	add    DWORD PTR [ecx],eax
  4321b6:	add    DWORD PTR [ecx],eax
  4321b8:	add    DWORD PTR [ecx],eax
  4321ba:	add    DWORD PTR [ecx],eax
  4321bc:	add    DWORD PTR [ecx],eax
  4321be:	add    DWORD PTR [ecx],eax
  4321c0:	add    DWORD PTR [ecx],eax
  4321c2:	add    DWORD PTR [ecx],eax
  4321c4:	add    DWORD PTR [ecx],eax
  4321c6:	add    DWORD PTR [ecx],eax
  4321c8:	add    DWORD PTR [ecx],eax
  4321ca:	add    DWORD PTR [ecx],eax
  4321cc:	add    DWORD PTR [ecx],eax
  4321ce:	add    DWORD PTR [ecx],eax
  4321d0:	add    DWORD PTR [ecx],eax
  4321d2:	add    DWORD PTR [ecx],eax
  4321d4:	add    DWORD PTR [ecx],eax
  4321d6:	add    DWORD PTR [ecx],eax
  4321d8:	add    DWORD PTR [ecx],eax
  4321da:	add    DWORD PTR [ecx],eax
  4321dc:	add    DWORD PTR [ecx],eax
  4321de:	add    DWORD PTR [ecx],eax
  4321e0:	add    DWORD PTR [ecx],eax
  4321e2:	add    DWORD PTR [ecx],eax
  4321e4:	add    DWORD PTR [ecx],eax
  4321e6:	add    DWORD PTR [ecx],eax
  4321e8:	add    DWORD PTR [ecx],eax
  4321ea:	add    DWORD PTR [ecx],eax
  4321ec:	add    DWORD PTR [ecx],eax
  4321ee:	add    DWORD PTR [ecx],eax
  4321f0:	add    DWORD PTR [ecx],eax
  4321f2:	add    DWORD PTR [ecx],eax
  4321f4:	add    DWORD PTR [ecx],eax
  4321f6:	add    DWORD PTR [ecx],eax
  4321f8:	add    DWORD PTR [ecx],eax
  4321fa:	add    DWORD PTR [ecx],eax
  4321fc:	add    DWORD PTR [ecx],eax
  4321fe:	add    DWORD PTR [ecx],eax
  432200:	add    DWORD PTR [ecx],eax
  432202:	add    DWORD PTR [ecx],eax
  432204:	add    DWORD PTR [ecx],eax
  432206:	add    DWORD PTR [ecx],eax
  432208:	add    DWORD PTR [ecx],eax
  43220a:	add    DWORD PTR [ecx],eax
  43220c:	add    DWORD PTR [ecx],eax
  43220e:	add    DWORD PTR [ecx],eax
  432210:	add    DWORD PTR [ecx],eax
  432212:	add    DWORD PTR [ecx],eax
  432214:	add    DWORD PTR [ecx],eax
  432216:	add    DWORD PTR [ecx],eax
  432218:	add    BYTE PTR [ecx],al
  43221a:	add    DWORD PTR [ecx],eax
  43221c:	add    DWORD PTR [ecx],eax
  43221e:	add    DWORD PTR [ecx],eax
  432220:	add    DWORD PTR [ecx],eax
  432222:	add    DWORD PTR [ecx],eax
  432224:	add    DWORD PTR [ecx],eax
  432226:	add    DWORD PTR [ecx],eax
  432228:	add    DWORD PTR [ecx],eax
  43222a:	add    DWORD PTR [ecx],eax
  43222c:	add    DWORD PTR [ecx],eax
  43222e:	add    DWORD PTR [ecx],eax
  432230:	add    DWORD PTR [ecx],eax
  432232:	add    DWORD PTR [ecx],eax
  432234:	add    DWORD PTR [ecx],eax
  432236:	add    DWORD PTR [ecx],eax
  432238:	add    DWORD PTR [ecx],eax
  43223a:	add    DWORD PTR [ecx],eax
  43223c:	add    DWORD PTR [ecx],eax
  43223e:	add    DWORD PTR [eax],eax
  432240:	add    DWORD PTR [ecx],eax
  432242:	add    DWORD PTR [ecx],eax
  432244:	add    DWORD PTR [ecx],eax
  432246:	add    DWORD PTR [ecx],eax
  432248:	add    DWORD PTR [ecx],eax
  43224a:	add    DWORD PTR [ecx],eax
  43224c:	add    DWORD PTR [ecx],eax
  43224e:	add    DWORD PTR [ecx],eax
  432250:	add    DWORD PTR [ecx],eax
  432252:	add    DWORD PTR [ecx],eax
  432254:	add    DWORD PTR [ecx],eax
  432256:	add    DWORD PTR [ecx],eax
  432258:	add    DWORD PTR [ecx],eax
  43225a:	add    DWORD PTR [ecx],eax
  43225c:	add    DWORD PTR [ecx],eax
  43225e:	add    DWORD PTR [ecx],eax
  432260:	add    DWORD PTR [ecx],eax
  432262:	add    DWORD PTR [ecx],eax
  432264:	add    DWORD PTR [ecx],eax
  432266:	add    DWORD PTR [ecx],eax
  432268:	add    DWORD PTR [ecx],eax
  43226a:	add    DWORD PTR [ecx],eax
  43226c:	add    DWORD PTR [ecx],eax
  43226e:	add    DWORD PTR [ecx],eax
  432270:	add    DWORD PTR [ecx],eax
  432272:	add    DWORD PTR [ecx],eax
  432274:	add    DWORD PTR [ecx],eax
  432276:	add    DWORD PTR [ecx],eax
  432278:	add    DWORD PTR [ecx],eax
  43227a:	add    DWORD PTR [ecx],eax
  43227c:	add    DWORD PTR [ecx],eax
  43227e:	add    DWORD PTR [ecx],eax
  432280:	add    DWORD PTR [ecx],eax
  432282:	add    DWORD PTR [ecx],eax
  432284:	add    DWORD PTR [ecx],eax
  432286:	add    DWORD PTR [ecx],eax
  432288:	add    DWORD PTR [ecx],eax
  43228a:	add    DWORD PTR [ecx],eax
  43228c:	add    DWORD PTR [ecx],eax
  43228e:	add    DWORD PTR [ecx],eax
  432290:	add    DWORD PTR [ecx],eax
  432292:	add    DWORD PTR [ecx],eax
  432294:	add    DWORD PTR [ecx],eax
  432296:	add    DWORD PTR [ecx],eax
  432298:	add    DWORD PTR [ecx],eax
  43229a:	add    DWORD PTR [ecx],eax
  43229c:	add    DWORD PTR [ecx],eax
  43229e:	add    DWORD PTR [ecx],eax
  4322a0:	add    DWORD PTR [ecx],eax
  4322a2:	add    DWORD PTR [ecx],eax
  4322a4:	add    DWORD PTR [ecx],eax
  4322a6:	add    DWORD PTR [ecx],eax
  4322a8:	add    DWORD PTR [ecx],eax
  4322aa:	add    DWORD PTR [ecx],eax
  4322ac:	add    DWORD PTR [ecx],eax
  4322ae:	add    DWORD PTR [ecx],eax
  4322b0:	add    DWORD PTR [ecx],eax
  4322b2:	add    DWORD PTR [ecx],eax
  4322b4:	add    DWORD PTR [ecx],eax
  4322b6:	add    DWORD PTR [ecx],eax
  4322b8:	add    DWORD PTR [ecx],eax
  4322ba:	add    DWORD PTR [ecx],eax
  4322bc:	add    DWORD PTR [ecx],eax
  4322be:	add    DWORD PTR [ecx],eax
  4322c0:	add    DWORD PTR [ecx],eax
  4322c2:	add    DWORD PTR [ecx],eax
  4322c4:	add    DWORD PTR [ecx],eax
  4322c6:	add    DWORD PTR [ecx],eax
  4322c8:	add    DWORD PTR [ecx],eax
  4322ca:	add    DWORD PTR [ecx],eax
  4322cc:	add    DWORD PTR [ecx],eax
  4322ce:	add    DWORD PTR [ecx],eax
  4322d0:	add    DWORD PTR [ecx],eax
  4322d2:	add    DWORD PTR [ecx],eax
  4322d4:	add    DWORD PTR [ecx],eax
  4322d6:	add    DWORD PTR [ecx],eax
  4322d8:	add    DWORD PTR [ecx],eax
  4322da:	add    DWORD PTR [ecx],eax
  4322dc:	add    DWORD PTR [ecx],eax
  4322de:	add    DWORD PTR [ecx],eax
  4322e0:	add    DWORD PTR [ecx],eax
  4322e2:	add    DWORD PTR [ecx],eax
  4322e4:	add    DWORD PTR [ecx],eax
  4322e6:	add    DWORD PTR [ecx],eax
  4322e8:	add    DWORD PTR [ecx],eax
  4322ea:	add    DWORD PTR [ecx],eax
  4322ec:	add    DWORD PTR [ecx],eax
  4322ee:	add    DWORD PTR [ecx],eax
  4322f0:	add    DWORD PTR [ecx],eax
  4322f2:	add    DWORD PTR [ecx],eax
  4322f4:	add    DWORD PTR [ecx],eax
  4322f6:	add    DWORD PTR [ecx],eax
  4322f8:	add    DWORD PTR [ecx],eax
  4322fa:	add    DWORD PTR [ecx],eax
  4322fc:	add    DWORD PTR [ecx],eax
  4322fe:	add    DWORD PTR [ecx],eax
  432300:	add    DWORD PTR [ecx],eax
  432302:	add    DWORD PTR [ecx],eax
  432304:	add    DWORD PTR [ecx],eax
  432306:	add    DWORD PTR [ecx],eax
  432308:	add    DWORD PTR [ecx],eax
  43230a:	add    DWORD PTR [ecx],eax
  43230c:	add    DWORD PTR [ecx],eax
  43230e:	add    DWORD PTR [ecx],eax
  432310:	add    DWORD PTR [ecx],eax
  432312:	add    DWORD PTR [ecx],eax
  432314:	add    DWORD PTR [ecx],eax
  432316:	add    DWORD PTR [ecx],eax
  432318:	add    BYTE PTR [ecx],al
  43231a:	add    DWORD PTR [ecx],eax
  43231c:	add    DWORD PTR [ecx],eax
  43231e:	add    DWORD PTR [ecx],eax
  432320:	add    DWORD PTR [ecx],eax
  432322:	add    DWORD PTR [ecx],eax
  432324:	add    DWORD PTR [ecx],eax
  432326:	add    DWORD PTR [ecx],eax
  432328:	add    DWORD PTR [ecx],eax
  43232a:	add    DWORD PTR [ecx],eax
  43232c:	add    DWORD PTR [ecx],eax
  43232e:	add    DWORD PTR [ecx],eax
  432330:	add    DWORD PTR [ecx],eax
  432332:	add    DWORD PTR [ecx],eax
  432334:	add    DWORD PTR [ecx],eax
  432336:	add    DWORD PTR [ecx],eax
  432338:	add    DWORD PTR [ecx],eax
  43233a:	add    BYTE PTR [ecx],al
  43233c:	add    DWORD PTR [ecx],eax
  43233e:	add    DWORD PTR [ecx],eax
  432340:	add    DWORD PTR [ecx],eax
  432342:	add    DWORD PTR [ecx],eax
  432344:	add    DWORD PTR [ecx],eax
  432346:	add    DWORD PTR [ecx],eax
  432348:	add    DWORD PTR [ecx],eax
  43234a:	add    DWORD PTR [ecx],eax
  43234c:	add    DWORD PTR [ecx],eax
  43234e:	add    DWORD PTR [ecx],eax
  432350:	add    DWORD PTR [ecx],eax
  432352:	add    DWORD PTR [ecx],eax
  432354:	add    DWORD PTR [ecx],eax
  432356:	add    DWORD PTR [ecx],eax
  432358:	add    DWORD PTR [ecx],eax
  43235a:	add    DWORD PTR [ecx],eax
  43235c:	add    DWORD PTR [ecx],eax
  43235e:	add    DWORD PTR [ecx],eax
  432360:	add    DWORD PTR [ecx],eax
  432362:	add    DWORD PTR [ecx],eax
  432364:	add    DWORD PTR [ecx],eax
  432366:	add    DWORD PTR [ecx],eax
  432368:	add    DWORD PTR [ecx],eax
  43236a:	add    DWORD PTR [ecx],eax
  43236c:	add    DWORD PTR [ecx],eax
  43236e:	add    DWORD PTR [ecx],eax
  432370:	add    DWORD PTR [ecx],eax
  432372:	add    DWORD PTR [ecx],eax
  432374:	add    DWORD PTR [ecx],eax
  432376:	add    DWORD PTR [ecx],eax
  432378:	add    DWORD PTR [ecx],eax
  43237a:	add    DWORD PTR [ecx],eax
  43237c:	add    DWORD PTR [ecx],eax
  43237e:	add    DWORD PTR [ecx],eax
  432380:	add    DWORD PTR [ecx],eax
  432382:	add    DWORD PTR [ecx],eax
  432384:	add    DWORD PTR [ecx],eax
  432386:	add    DWORD PTR [ecx],eax
  432388:	add    DWORD PTR [ecx],eax
  43238a:	add    DWORD PTR [ecx],eax
  43238c:	add    DWORD PTR [ecx],eax
  43238e:	add    DWORD PTR [ecx],eax
  432390:	add    DWORD PTR [ecx],eax
  432392:	add    DWORD PTR [ecx],eax
  432394:	add    DWORD PTR [ecx],eax
  432396:	add    DWORD PTR [ecx],eax
  432398:	add    DWORD PTR [ecx],eax
  43239a:	add    DWORD PTR [ecx],eax
  43239c:	add    DWORD PTR [ecx],eax
  43239e:	add    DWORD PTR [ecx],eax
  4323a0:	add    DWORD PTR [ecx],eax
  4323a2:	add    DWORD PTR [ecx],eax
  4323a4:	add    DWORD PTR [ecx],eax
  4323a6:	add    DWORD PTR [ecx],eax
  4323a8:	add    DWORD PTR [ecx],eax
  4323aa:	add    DWORD PTR [ecx],eax
  4323ac:	add    DWORD PTR [ecx],eax
  4323ae:	add    DWORD PTR [ecx],eax
  4323b0:	add    DWORD PTR [ecx],eax
  4323b2:	add    DWORD PTR [ecx],eax
  4323b4:	add    DWORD PTR [ecx],eax
  4323b6:	add    DWORD PTR [ecx],eax
  4323b8:	add    DWORD PTR [ecx],eax
  4323ba:	add    DWORD PTR [ecx],eax
  4323bc:	add    DWORD PTR [ecx],eax
  4323be:	add    DWORD PTR [ecx],eax
  4323c0:	add    DWORD PTR [ecx],eax
  4323c2:	add    DWORD PTR [ecx],eax
  4323c4:	add    DWORD PTR [ecx],eax
  4323c6:	add    DWORD PTR [ecx],eax
  4323c8:	add    DWORD PTR [ecx],eax
  4323ca:	add    DWORD PTR [ecx],eax
  4323cc:	add    DWORD PTR [ecx],eax
  4323ce:	add    DWORD PTR [ecx],eax
  4323d0:	add    DWORD PTR [ecx],eax
  4323d2:	add    DWORD PTR [ecx],eax
  4323d4:	add    DWORD PTR [ecx],eax
  4323d6:	add    DWORD PTR [ecx],eax
  4323d8:	add    DWORD PTR [ecx],eax
  4323da:	add    DWORD PTR [ecx],eax
  4323dc:	add    DWORD PTR [ecx],eax
  4323de:	add    DWORD PTR [ecx],eax
  4323e0:	add    DWORD PTR [ecx],eax
  4323e2:	add    DWORD PTR [ecx],eax
  4323e4:	add    DWORD PTR [ecx],eax
  4323e6:	add    DWORD PTR [ecx],eax
  4323e8:	add    DWORD PTR [ecx],eax
  4323ea:	add    DWORD PTR [ecx],eax
  4323ec:	add    DWORD PTR [ecx],eax
  4323ee:	add    DWORD PTR [ecx],eax
  4323f0:	add    DWORD PTR [ecx],eax
  4323f2:	add    DWORD PTR [ecx],eax
  4323f4:	add    DWORD PTR [ecx],eax
  4323f6:	add    DWORD PTR [ecx],eax
  4323f8:	add    DWORD PTR [ecx],eax
  4323fa:	add    DWORD PTR [ecx],eax
  4323fc:	add    DWORD PTR [ecx],eax
  4323fe:	add    DWORD PTR [ecx],eax
  432400:	add    DWORD PTR [ecx],eax
  432402:	add    DWORD PTR [ecx],eax
  432404:	add    DWORD PTR [ecx],eax
  432406:	add    DWORD PTR [ecx],eax
  432408:	add    DWORD PTR [ecx],eax
  43240a:	add    DWORD PTR [ecx],eax
  43240c:	add    DWORD PTR [ecx],eax
  43240e:	add    DWORD PTR [ecx],eax
  432410:	add    DWORD PTR [ecx],eax
  432412:	add    DWORD PTR [ecx],eax
  432414:	add    DWORD PTR [ecx],eax
  432416:	add    DWORD PTR [ecx],eax
  432418:	(bad)  
  432419:	(bad)  
  43241a:	(bad)  
  43241b:	(bad)  
  43241c:	(bad)  
  43241d:	(bad)  
  43241e:	(bad)  
  43241f:	(bad)  
  432420:	(bad)  
  432421:	(bad)  
  432422:	(bad)  
  432423:	(bad)  
  432424:	(bad)  
  432425:	(bad)  
  432426:	(bad)  
  432427:	(bad)  
  432428:	(bad)  
  432429:	(bad)  
  43242a:	(bad)  
  43242b:	(bad)  
  43242c:	(bad)  
  43242d:	(bad)  
  43242e:	(bad)  
  43242f:	(bad)  
  432430:	(bad)  
  432431:	(bad)  
  432432:	(bad)  
  432433:	(bad)  
  432434:	(bad)  
  432435:	(bad)  
  432436:	(bad)  
  432437:	(bad)  
  432438:	(bad)  
  432439:	(bad)  
  43243a:	(bad)  
  43243b:	(bad)  
  43243c:	(bad)  
  43243d:	(bad)  
  43243e:	(bad)  
  43243f:	(bad)  
  432440:	(bad)  
  432441:	(bad)  
  432442:	(bad)  
  432443:	(bad)  
  432444:	(bad)  
  432445:	(bad)  
  432446:	(bad)  
  432447:	inc    DWORD PTR [eax]
  432449:	add    DWORD PTR [edx],eax
  43244b:	add    eax,DWORD PTR [eax*1+0x9080706]
  432452:	(bad)  
  432453:	(bad)  
  432454:	(bad)  
  432455:	(bad)  
  432456:	(bad)  
  432457:	(bad)  
  432458:	dec    DWORD PTR [edx]
  43245a:	or     ecx,DWORD PTR [ecx*1-0xf0f2]
  432461:	(bad)  
  432462:	(bad)  
  432463:	(bad)  
  432464:	(bad)  
  432465:	(bad)  
  432466:	(bad)  
  432467:	(bad)  
  432468:	(bad)  
  432469:	(bad)  
  43246a:	(bad)  
  43246b:	(bad)  
  43246c:	(bad)  
  43246d:	(bad)  
  43246e:	(bad)  
  43246f:	(bad)  
  432470:	(bad)  
  432471:	(bad)  
  432472:	(bad)  
  432473:	(bad)  
  432474:	(bad)  
  432475:	(bad)  
  432476:	(bad)  
  432477:	(bad)  
  432478:	dec    DWORD PTR [edx]
  43247a:	or     ecx,DWORD PTR [ecx*1-0xf0f2]
  432481:	(bad)  
  432482:	(bad)  
  432483:	(bad)  
  432484:	(bad)  
  432485:	(bad)  
  432486:	(bad)  
  432487:	(bad)  
  432488:	(bad)  
  432489:	(bad)  
  43248a:	(bad)  
  43248b:	(bad)  
  43248c:	(bad)  
  43248d:	(bad)  
  43248e:	(bad)  
  43248f:	(bad)  
  432490:	(bad)  
  432491:	(bad)  
  432492:	(bad)  
  432493:	(bad)  
  432494:	(bad)  
  432495:	(bad)  
  432496:	(bad)  
  432497:	(bad)  
  432498:	(bad)  
  432499:	(bad)  
  43249a:	(bad)  
  43249b:	(bad)  
  43249c:	(bad)  
  43249d:	(bad)  
  43249e:	(bad)  
  43249f:	(bad)  
  4324a0:	(bad)  
  4324a1:	(bad)  
  4324a2:	(bad)  
  4324a3:	(bad)  
  4324a4:	(bad)  
  4324a5:	(bad)  
  4324a6:	(bad)  
  4324a7:	(bad)  
  4324a8:	(bad)  
  4324a9:	(bad)  
  4324aa:	(bad)  
  4324ab:	(bad)  
  4324ac:	(bad)  
  4324ad:	(bad)  
  4324ae:	(bad)  
  4324af:	(bad)  
  4324b0:	(bad)  
  4324b1:	(bad)  
  4324b2:	(bad)  
  4324b3:	(bad)  
  4324b4:	(bad)  
  4324b5:	(bad)  
  4324b6:	(bad)  
  4324b7:	(bad)  
  4324b8:	(bad)  
  4324b9:	(bad)  
  4324ba:	(bad)  
  4324bb:	(bad)  
  4324bc:	(bad)  
  4324bd:	(bad)  
  4324be:	(bad)  
  4324bf:	(bad)  
  4324c0:	(bad)  
  4324c1:	(bad)  
  4324c2:	(bad)  
  4324c3:	(bad)  
  4324c4:	(bad)  
  4324c5:	(bad)  
  4324c6:	(bad)  
  4324c7:	(bad)  
  4324c8:	(bad)  
  4324c9:	(bad)  
  4324ca:	(bad)  
  4324cb:	(bad)  
  4324cc:	(bad)  
  4324cd:	(bad)  
  4324ce:	(bad)  
  4324cf:	(bad)  
  4324d0:	(bad)  
  4324d1:	(bad)  
  4324d2:	(bad)  
  4324d3:	(bad)  
  4324d4:	(bad)  
  4324d5:	(bad)  
  4324d6:	(bad)  
  4324d7:	(bad)  
  4324d8:	(bad)  
  4324d9:	(bad)  
  4324da:	(bad)  
  4324db:	(bad)  
  4324dc:	(bad)  
  4324dd:	(bad)  
  4324de:	(bad)  
  4324df:	(bad)  
  4324e0:	(bad)  
  4324e1:	(bad)  
  4324e2:	(bad)  
  4324e3:	(bad)  
  4324e4:	(bad)  
  4324e5:	(bad)  
  4324e6:	(bad)  
  4324e7:	(bad)  
  4324e8:	(bad)  
  4324e9:	(bad)  
  4324ea:	(bad)  
  4324eb:	(bad)  
  4324ec:	(bad)  
  4324ed:	(bad)  
  4324ee:	(bad)  
  4324ef:	(bad)  
  4324f0:	(bad)  
  4324f1:	(bad)  
  4324f2:	(bad)  
  4324f3:	(bad)  
  4324f4:	(bad)  
  4324f5:	(bad)  
  4324f6:	(bad)  
  4324f7:	(bad)  
  4324f8:	(bad)  
  4324f9:	(bad)  
  4324fa:	(bad)  
  4324fb:	(bad)  
  4324fc:	(bad)  
  4324fd:	(bad)  
  4324fe:	(bad)  
  4324ff:	(bad)  
  432500:	(bad)  
  432501:	(bad)  
  432502:	(bad)  
  432503:	(bad)  
  432504:	(bad)  
  432505:	(bad)  
  432506:	(bad)  
  432507:	(bad)  
  432508:	(bad)  
  432509:	(bad)  
  43250a:	(bad)  
  43250b:	(bad)  
  43250c:	(bad)  
  43250d:	(bad)  
  43250e:	(bad)  
  43250f:	(bad)  
  432510:	(bad)  
  432511:	(bad)  
  432512:	(bad)  
  432513:	(bad)  
  432514:	(bad)  
  432515:	(bad)  
  432516:	(bad)  
  432517:	jmp    FWORD PTR [ecx+0x6e]
  43251a:	jbe    0x43257d
  43251c:	ins    BYTE PTR es:[edi],dx
  43251d:	imul   esp,DWORD PTR [eax+eiz*1+0x6e],0x72656d75
  432525:	imul   esp,DWORD PTR [ebx+0x20],0x72616863
  43252c:	popa   
  43252d:	arpl   WORD PTR [ebp+eiz*2+0x72],si
  432531:	and    BYTE PTR [ebp+0x6e],ah
  432534:	je     0x43259f
  432536:	je     0x4325b1
  432538:	add    BYTE PTR [eax],al
  43253a:	add    BYTE PTR [eax],al
  43253c:	lock out 0x41,al
  43253f:	add    BYTE PTR [eax],ah
  432541:	out    0x41,eax
  432543:	add    BYTE PTR [eax],al
  432545:	add    BYTE PTR [eax],al
  432547:	add    BYTE PTR [eax],al
  432549:	add    DWORD PTR [ecx],eax
  43254b:	add    DWORD PTR [ecx],eax
  43254d:	add    DWORD PTR [ecx],eax
  43254f:	add    DWORD PTR [ecx],eax
  432551:	add    DWORD PTR [ecx],eax
  432553:	add    DWORD PTR [ecx],eax
  432555:	add    DWORD PTR [ecx],eax
  432557:	add    DWORD PTR [ecx],eax
  432559:	add    DWORD PTR [ecx],eax
  43255b:	add    DWORD PTR [ecx],eax
  43255d:	add    DWORD PTR [ecx],eax
  43255f:	add    DWORD PTR [ecx],eax
  432561:	add    DWORD PTR [ecx],eax
  432563:	add    DWORD PTR [ecx],eax
  432565:	add    DWORD PTR [ecx],eax
  432567:	add    DWORD PTR [ecx],eax
  432569:	add    DWORD PTR [ecx],eax
  43256b:	add    DWORD PTR [ecx],eax
  43256d:	add    DWORD PTR [ecx],eax
  43256f:	add    DWORD PTR [ecx],eax
  432571:	add    DWORD PTR [ecx],eax
  432573:	add    DWORD PTR [ecx],eax
  432575:	add    DWORD PTR [ecx],eax
  432577:	add    DWORD PTR [ecx],eax
  432579:	add    DWORD PTR [ecx],eax
  43257b:	add    DWORD PTR [ecx],eax
  43257d:	add    DWORD PTR [ecx],eax
  43257f:	add    DWORD PTR [ecx],eax
  432581:	add    DWORD PTR [ecx],eax
  432583:	add    DWORD PTR [eax],eax
  432585:	add    DWORD PTR [ecx],eax
  432587:	add    DWORD PTR [ecx],eax
  432589:	add    DWORD PTR [ecx],eax
  43258b:	add    DWORD PTR [ecx],eax
  43258d:	add    DWORD PTR [ecx],eax
  43258f:	add    DWORD PTR [ecx],eax
  432591:	add    DWORD PTR [ecx],eax
  432593:	add    DWORD PTR [ecx],eax
  432595:	add    DWORD PTR [ecx],eax
  432597:	add    DWORD PTR [ecx],eax
  432599:	add    DWORD PTR [ecx],eax
  43259b:	add    DWORD PTR [ecx],eax
  43259d:	add    DWORD PTR [ecx],eax
  43259f:	add    DWORD PTR [ecx],eax
  4325a1:	add    DWORD PTR [ecx],eax
  4325a3:	add    DWORD PTR [ecx],eax
  4325a5:	add    DWORD PTR [ecx],eax
  4325a7:	add    DWORD PTR [ecx],eax
  4325a9:	add    DWORD PTR [ecx],eax
  4325ab:	add    DWORD PTR [ecx],eax
  4325ad:	add    DWORD PTR [ecx],eax
  4325af:	add    DWORD PTR [ecx],eax
  4325b1:	add    DWORD PTR [ecx],eax
  4325b3:	add    DWORD PTR [ecx],eax
  4325b5:	add    DWORD PTR [ecx],eax
  4325b7:	add    DWORD PTR [ecx],eax
  4325b9:	add    DWORD PTR [ecx],eax
  4325bb:	add    DWORD PTR [ecx],eax
  4325bd:	add    DWORD PTR [ecx],eax
  4325bf:	add    DWORD PTR [ecx],eax
  4325c1:	add    DWORD PTR [ecx],eax
  4325c3:	add    DWORD PTR [ecx],eax
  4325c5:	add    DWORD PTR [ecx],eax
  4325c7:	add    DWORD PTR [ecx],eax
  4325c9:	add    DWORD PTR [ecx],eax
  4325cb:	add    DWORD PTR [ecx],eax
  4325cd:	add    DWORD PTR [ecx],eax
  4325cf:	add    DWORD PTR [ecx],eax
  4325d1:	add    DWORD PTR [ecx],eax
  4325d3:	add    DWORD PTR [ecx],eax
  4325d5:	add    DWORD PTR [ecx],eax
  4325d7:	add    DWORD PTR [ecx],eax
  4325d9:	add    DWORD PTR [ecx],eax
  4325db:	add    DWORD PTR [ecx],eax
  4325dd:	add    DWORD PTR [ecx],eax
  4325df:	add    DWORD PTR [ecx],eax
  4325e1:	add    DWORD PTR [ecx],eax
  4325e3:	add    DWORD PTR [ecx],eax
  4325e5:	add    DWORD PTR [ecx],eax
  4325e7:	add    DWORD PTR [ecx],eax
  4325e9:	add    DWORD PTR [ecx],eax
  4325eb:	add    DWORD PTR [ecx],eax
  4325ed:	add    DWORD PTR [ecx],eax
  4325ef:	add    DWORD PTR [ecx],eax
  4325f1:	add    DWORD PTR [ecx],eax
  4325f3:	add    DWORD PTR [ecx],eax
  4325f5:	add    DWORD PTR [ecx],eax
  4325f7:	add    DWORD PTR [ecx],eax
  4325f9:	add    DWORD PTR [ecx],eax
  4325fb:	add    DWORD PTR [ecx],eax
  4325fd:	add    DWORD PTR [ecx],eax
  4325ff:	add    DWORD PTR [ecx],eax
  432601:	add    DWORD PTR [ecx],eax
  432603:	add    DWORD PTR [ecx],eax
  432605:	add    DWORD PTR [ecx],eax
  432607:	add    DWORD PTR [ecx],eax
  432609:	add    DWORD PTR [ecx],eax
  43260b:	add    DWORD PTR [ecx],eax
  43260d:	add    DWORD PTR [ecx],eax
  43260f:	add    DWORD PTR [ecx],eax
  432611:	add    DWORD PTR [ecx],eax
  432613:	add    DWORD PTR [ecx],eax
  432615:	add    DWORD PTR [ecx],eax
  432617:	add    DWORD PTR [ecx],eax
  432619:	add    DWORD PTR [ecx],eax
  43261b:	add    DWORD PTR [ecx],eax
  43261d:	add    DWORD PTR [ecx],eax
  43261f:	add    DWORD PTR [ecx],eax
  432621:	add    DWORD PTR [ecx],eax
  432623:	add    DWORD PTR [ecx],eax
  432625:	add    DWORD PTR [ecx],eax
  432627:	add    DWORD PTR [ecx],eax
  432629:	add    DWORD PTR [ecx],eax
  43262b:	add    DWORD PTR [ecx],eax
  43262d:	add    DWORD PTR [ecx],eax
  43262f:	add    DWORD PTR [ecx],eax
  432631:	add    DWORD PTR [ecx],eax
  432633:	add    DWORD PTR [ecx],eax
  432635:	add    DWORD PTR [ecx],eax
  432637:	add    DWORD PTR [ecx],eax
  432639:	add    DWORD PTR [ecx],eax
  43263b:	add    DWORD PTR [ecx],eax
  43263d:	add    DWORD PTR [ecx],eax
  43263f:	add    DWORD PTR [ecx],eax
  432641:	add    DWORD PTR [ecx],eax
  432643:	add    DWORD PTR [ecx],eax
  432645:	add    DWORD PTR [ecx],eax
  432647:	add    DWORD PTR [eax],eax
  432649:	add    DWORD PTR [ecx],eax
  43264b:	add    DWORD PTR [ecx],eax
  43264d:	add    DWORD PTR [ecx],eax
  43264f:	add    DWORD PTR [ecx],eax
  432651:	add    DWORD PTR [ecx],eax
  432653:	add    DWORD PTR [ecx],eax
  432655:	add    DWORD PTR [ecx],eax
  432657:	add    DWORD PTR [ecx],eax
  432659:	add    DWORD PTR [ecx],eax
  43265b:	add    DWORD PTR [ecx],eax
  43265d:	add    DWORD PTR [ecx],eax
  43265f:	add    DWORD PTR [ecx],eax
  432661:	add    DWORD PTR [ecx],eax
  432663:	add    DWORD PTR [ecx],eax
  432665:	add    DWORD PTR [ecx],eax
  432667:	add    DWORD PTR [ecx],eax
  432669:	add    DWORD PTR [ecx],eax
  43266b:	add    DWORD PTR [ecx],eax
  43266d:	add    DWORD PTR [eax],eax
  43266f:	add    BYTE PTR [ecx],al
  432671:	add    DWORD PTR [ecx],eax
  432673:	add    DWORD PTR [ecx],eax
  432675:	add    DWORD PTR [ecx],eax
  432677:	add    DWORD PTR [ecx],eax
  432679:	add    DWORD PTR [ecx],eax
  43267b:	add    DWORD PTR [ecx],eax
  43267d:	add    DWORD PTR [ecx],eax
  43267f:	add    DWORD PTR [ecx],eax
  432681:	add    DWORD PTR [ecx],eax
  432683:	add    DWORD PTR [ecx],eax
  432685:	add    DWORD PTR [ecx],eax
  432687:	add    DWORD PTR [ecx],eax
  432689:	add    DWORD PTR [ecx],eax
  43268b:	add    DWORD PTR [ecx],eax
  43268d:	add    DWORD PTR [ecx],eax
  43268f:	add    DWORD PTR [ecx],eax
  432691:	add    DWORD PTR [ecx],eax
  432693:	add    DWORD PTR [ecx],eax
  432695:	add    DWORD PTR [ecx],eax
  432697:	add    DWORD PTR [ecx],eax
  432699:	add    DWORD PTR [ecx],eax
  43269b:	add    DWORD PTR [ecx],eax
  43269d:	add    DWORD PTR [ecx],eax
  43269f:	add    DWORD PTR [ecx],eax
  4326a1:	add    DWORD PTR [ecx],eax
  4326a3:	add    DWORD PTR [ecx],eax
  4326a5:	add    DWORD PTR [ecx],eax
  4326a7:	add    DWORD PTR [ecx],eax
  4326a9:	add    DWORD PTR [ecx],eax
  4326ab:	add    DWORD PTR [ecx],eax
  4326ad:	add    DWORD PTR [ecx],eax
  4326af:	add    DWORD PTR [ecx],eax
  4326b1:	add    DWORD PTR [ecx],eax
  4326b3:	add    DWORD PTR [ecx],eax
  4326b5:	add    DWORD PTR [ecx],eax
  4326b7:	add    DWORD PTR [ecx],eax
  4326b9:	add    DWORD PTR [ecx],eax
  4326bb:	add    DWORD PTR [ecx],eax
  4326bd:	add    DWORD PTR [ecx],eax
  4326bf:	add    DWORD PTR [ecx],eax
  4326c1:	add    DWORD PTR [ecx],eax
  4326c3:	add    DWORD PTR [ecx],eax
  4326c5:	add    DWORD PTR [ecx],eax
  4326c7:	add    DWORD PTR [ecx],eax
  4326c9:	add    DWORD PTR [ecx],eax
  4326cb:	add    DWORD PTR [ecx],eax
  4326cd:	add    DWORD PTR [ecx],eax
  4326cf:	add    DWORD PTR [ecx],eax
  4326d1:	add    DWORD PTR [ecx],eax
  4326d3:	add    DWORD PTR [ecx],eax
  4326d5:	add    DWORD PTR [ecx],eax
  4326d7:	add    DWORD PTR [ecx],eax
  4326d9:	add    DWORD PTR [ecx],eax
  4326db:	add    DWORD PTR [ecx],eax
  4326dd:	add    DWORD PTR [ecx],eax
  4326df:	add    DWORD PTR [ecx],eax
  4326e1:	add    DWORD PTR [ecx],eax
  4326e3:	add    DWORD PTR [ecx],eax
  4326e5:	add    DWORD PTR [ecx],eax
  4326e7:	add    DWORD PTR [ecx],eax
  4326e9:	add    DWORD PTR [ecx],eax
  4326eb:	add    DWORD PTR [ecx],eax
  4326ed:	add    DWORD PTR [ecx],eax
  4326ef:	add    DWORD PTR [ecx],eax
  4326f1:	add    DWORD PTR [ecx],eax
  4326f3:	add    DWORD PTR [ecx],eax
  4326f5:	add    DWORD PTR [ecx],eax
  4326f7:	add    DWORD PTR [ecx],eax
  4326f9:	add    DWORD PTR [ecx],eax
  4326fb:	add    DWORD PTR [ecx],eax
  4326fd:	add    DWORD PTR [ecx],eax
  4326ff:	add    DWORD PTR [ecx],eax
  432701:	add    DWORD PTR [ecx],eax
  432703:	add    DWORD PTR [ecx],eax
  432705:	add    DWORD PTR [ecx],eax
  432707:	add    DWORD PTR [ecx],eax
  432709:	add    DWORD PTR [ecx],eax
  43270b:	add    DWORD PTR [ecx],eax
  43270d:	add    DWORD PTR [ecx],eax
  43270f:	add    DWORD PTR [ecx],eax
  432711:	add    DWORD PTR [ecx],eax
  432713:	add    DWORD PTR [ecx],eax
  432715:	add    DWORD PTR [ecx],eax
  432717:	add    DWORD PTR [ecx],eax
  432719:	add    DWORD PTR [ecx],eax
  43271b:	add    DWORD PTR [ecx],eax
  43271d:	add    DWORD PTR [ecx],eax
  43271f:	add    DWORD PTR [ecx],eax
  432721:	add    DWORD PTR [ecx],eax
  432723:	add    DWORD PTR [ecx],eax
  432725:	add    DWORD PTR [ecx],eax
  432727:	add    DWORD PTR [ecx],eax
  432729:	add    DWORD PTR [ecx],eax
  43272b:	add    DWORD PTR [ecx],eax
  43272d:	add    DWORD PTR [ecx],eax
  43272f:	add    DWORD PTR [ecx],eax
  432731:	add    DWORD PTR [ecx],eax
  432733:	add    DWORD PTR [ecx],eax
  432735:	add    DWORD PTR [ecx],eax
  432737:	add    DWORD PTR [ecx],eax
  432739:	add    DWORD PTR [ecx],eax
  43273b:	add    DWORD PTR [ecx],eax
  43273d:	add    DWORD PTR [ecx],eax
  43273f:	add    DWORD PTR [ecx],eax
  432741:	add    DWORD PTR [ecx],eax
  432743:	add    DWORD PTR [ecx],eax
  432745:	add    DWORD PTR [ecx],eax
  432747:	add    DWORD PTR [eax],eax
  432749:	add    DWORD PTR [ecx],eax
  43274b:	add    DWORD PTR [ecx],eax
  43274d:	add    DWORD PTR [ecx],eax
  43274f:	add    DWORD PTR [ecx],eax
  432751:	add    DWORD PTR [ecx],eax
  432753:	add    DWORD PTR [ecx],eax
  432755:	add    DWORD PTR [ecx],eax
  432757:	add    DWORD PTR [ecx],eax
  432759:	add    DWORD PTR [ecx],eax
  43275b:	add    DWORD PTR [ecx],eax
  43275d:	add    DWORD PTR [ecx],eax
  43275f:	add    DWORD PTR [ecx],eax
  432761:	add    DWORD PTR [ecx],eax
  432763:	add    DWORD PTR [ecx],eax
  432765:	add    DWORD PTR [ecx],eax
  432767:	add    DWORD PTR [ecx],eax
  432769:	add    DWORD PTR [eax],eax
  43276b:	add    DWORD PTR [ecx],eax
  43276d:	add    DWORD PTR [eax],eax
  43276f:	add    DWORD PTR [ecx],eax
  432771:	add    DWORD PTR [ecx],eax
  432773:	add    DWORD PTR [ecx],eax
  432775:	add    DWORD PTR [ecx],eax
  432777:	add    DWORD PTR [ecx],eax
  432779:	add    DWORD PTR [ecx],eax
  43277b:	add    DWORD PTR [ecx],eax
  43277d:	add    DWORD PTR [ecx],eax
  43277f:	add    DWORD PTR [ecx],eax
  432781:	add    DWORD PTR [ecx],eax
  432783:	add    DWORD PTR [ecx],eax
  432785:	add    DWORD PTR [ecx],eax
  432787:	add    DWORD PTR [ecx],eax
  432789:	add    DWORD PTR [ecx],eax
  43278b:	add    DWORD PTR [ecx],eax
  43278d:	add    DWORD PTR [ecx],eax
  43278f:	add    DWORD PTR [ecx],eax
  432791:	add    DWORD PTR [ecx],eax
  432793:	add    DWORD PTR [ecx],eax
  432795:	add    DWORD PTR [ecx],eax
  432797:	add    DWORD PTR [ecx],eax
  432799:	add    DWORD PTR [ecx],eax
  43279b:	add    DWORD PTR [ecx],eax
  43279d:	add    DWORD PTR [ecx],eax
  43279f:	add    DWORD PTR [ecx],eax
  4327a1:	add    DWORD PTR [ecx],eax
  4327a3:	add    DWORD PTR [ecx],eax
  4327a5:	add    DWORD PTR [ecx],eax
  4327a7:	add    DWORD PTR [ecx],eax
  4327a9:	add    DWORD PTR [ecx],eax
  4327ab:	add    DWORD PTR [ecx],eax
  4327ad:	add    DWORD PTR [ecx],eax
  4327af:	add    DWORD PTR [ecx],eax
  4327b1:	add    DWORD PTR [ecx],eax
  4327b3:	add    DWORD PTR [ecx],eax
  4327b5:	add    DWORD PTR [ecx],eax
  4327b7:	add    DWORD PTR [ecx],eax
  4327b9:	add    DWORD PTR [ecx],eax
  4327bb:	add    DWORD PTR [ecx],eax
  4327bd:	add    DWORD PTR [ecx],eax
  4327bf:	add    DWORD PTR [ecx],eax
  4327c1:	add    DWORD PTR [ecx],eax
  4327c3:	add    DWORD PTR [ecx],eax
  4327c5:	add    DWORD PTR [ecx],eax
  4327c7:	add    DWORD PTR [ecx],eax
  4327c9:	add    DWORD PTR [ecx],eax
  4327cb:	add    DWORD PTR [ecx],eax
  4327cd:	add    DWORD PTR [ecx],eax
  4327cf:	add    DWORD PTR [ecx],eax
  4327d1:	add    DWORD PTR [ecx],eax
  4327d3:	add    DWORD PTR [ecx],eax
  4327d5:	add    DWORD PTR [ecx],eax
  4327d7:	add    DWORD PTR [ecx],eax
  4327d9:	add    DWORD PTR [ecx],eax
  4327db:	add    DWORD PTR [ecx],eax
  4327dd:	add    DWORD PTR [ecx],eax
  4327df:	add    DWORD PTR [ecx],eax
  4327e1:	add    DWORD PTR [ecx],eax
  4327e3:	add    DWORD PTR [ecx],eax
  4327e5:	add    DWORD PTR [ecx],eax
  4327e7:	add    DWORD PTR [ecx],eax
  4327e9:	add    DWORD PTR [ecx],eax
  4327eb:	add    DWORD PTR [ecx],eax
  4327ed:	add    DWORD PTR [ecx],eax
  4327ef:	add    DWORD PTR [ecx],eax
  4327f1:	add    DWORD PTR [ecx],eax
  4327f3:	add    DWORD PTR [ecx],eax
  4327f5:	add    DWORD PTR [ecx],eax
  4327f7:	add    DWORD PTR [ecx],eax
  4327f9:	add    DWORD PTR [ecx],eax
  4327fb:	add    DWORD PTR [ecx],eax
  4327fd:	add    DWORD PTR [ecx],eax
  4327ff:	add    DWORD PTR [ecx],eax
  432801:	add    DWORD PTR [ecx],eax
  432803:	add    DWORD PTR [ecx],eax
  432805:	add    DWORD PTR [ecx],eax
  432807:	add    DWORD PTR [ecx],eax
  432809:	add    DWORD PTR [ecx],eax
  43280b:	add    DWORD PTR [ecx],eax
  43280d:	add    DWORD PTR [ecx],eax
  43280f:	add    DWORD PTR [ecx],eax
  432811:	add    DWORD PTR [ecx],eax
  432813:	add    DWORD PTR [ecx],eax
  432815:	add    DWORD PTR [ecx],eax
  432817:	add    DWORD PTR [ecx],eax
  432819:	add    DWORD PTR [ecx],eax
  43281b:	add    DWORD PTR [ecx],eax
  43281d:	add    DWORD PTR [ecx],eax
  43281f:	add    DWORD PTR [ecx],eax
  432821:	add    DWORD PTR [ecx],eax
  432823:	add    DWORD PTR [ecx],eax
  432825:	add    DWORD PTR [ecx],eax
  432827:	add    DWORD PTR [ecx],eax
  432829:	add    DWORD PTR [ecx],eax
  43282b:	add    DWORD PTR [ecx],eax
  43282d:	add    DWORD PTR [ecx],eax
  43282f:	add    DWORD PTR [ecx],eax
  432831:	add    DWORD PTR [ecx],eax
  432833:	add    DWORD PTR [ecx],eax
  432835:	add    DWORD PTR [ecx],eax
  432837:	add    DWORD PTR [ecx],eax
  432839:	add    DWORD PTR [ecx],eax
  43283b:	add    DWORD PTR [ecx],eax
  43283d:	add    DWORD PTR [ecx],eax
  43283f:	add    DWORD PTR [ecx],eax
  432841:	add    DWORD PTR [ecx],eax
  432843:	add    DWORD PTR [ecx],eax
  432845:	add    DWORD PTR [ecx],eax
  432847:	add    DWORD PTR [eax],eax
  432849:	add    DWORD PTR [ecx],eax
  43284b:	add    DWORD PTR [ecx],eax
  43284d:	add    DWORD PTR [ecx],eax
  43284f:	add    DWORD PTR [ecx],eax
  432851:	add    DWORD PTR [ecx],eax
  432853:	add    DWORD PTR [ecx],eax
  432855:	add    DWORD PTR [ecx],eax
  432857:	add    DWORD PTR [ecx],eax
  432859:	add    DWORD PTR [ecx],eax
  43285b:	add    DWORD PTR [ecx],eax
  43285d:	add    DWORD PTR [ecx],eax
  43285f:	add    DWORD PTR [ecx],eax
  432861:	add    DWORD PTR [ecx],eax
  432863:	add    DWORD PTR [ecx],eax
  432865:	add    DWORD PTR [ecx],eax
  432867:	add    DWORD PTR [ecx],eax
  432869:	add    DWORD PTR [ecx],eax
  43286b:	add    DWORD PTR [ecx],eax
  43286d:	add    DWORD PTR [eax],eax
  43286f:	add    DWORD PTR [ecx],eax
  432871:	add    DWORD PTR [ecx],eax
  432873:	add    DWORD PTR [ecx],eax
  432875:	add    DWORD PTR [ecx],eax
  432877:	add    DWORD PTR [ecx],eax
  432879:	add    DWORD PTR [ecx],eax
  43287b:	add    DWORD PTR [ecx],eax
  43287d:	add    DWORD PTR [ecx],eax
  43287f:	add    DWORD PTR [ecx],eax
  432881:	add    DWORD PTR [ecx],eax
  432883:	add    DWORD PTR [eax],eax
  432885:	add    DWORD PTR [ecx],eax
  432887:	add    DWORD PTR [ecx],eax
  432889:	add    DWORD PTR [ecx],eax
  43288b:	add    DWORD PTR [ecx],eax
  43288d:	add    DWORD PTR [ecx],eax
  43288f:	add    DWORD PTR [ecx],eax
  432891:	add    DWORD PTR [ecx],eax
  432893:	add    DWORD PTR [ecx],eax
  432895:	add    DWORD PTR [ecx],eax
  432897:	add    DWORD PTR [ecx],eax
  432899:	add    DWORD PTR [ecx],eax
  43289b:	add    DWORD PTR [ecx],eax
  43289d:	add    DWORD PTR [ecx],eax
  43289f:	add    DWORD PTR [ecx],eax
  4328a1:	add    DWORD PTR [ecx],eax
  4328a3:	add    DWORD PTR [ecx],eax
  4328a5:	add    DWORD PTR [ecx],eax
  4328a7:	add    DWORD PTR [ecx],eax
  4328a9:	add    DWORD PTR [ecx],eax
  4328ab:	add    DWORD PTR [ecx],eax
  4328ad:	add    DWORD PTR [ecx],eax
  4328af:	add    DWORD PTR [ecx],eax
  4328b1:	add    DWORD PTR [ecx],eax
  4328b3:	add    DWORD PTR [ecx],eax
  4328b5:	add    DWORD PTR [ecx],eax
  4328b7:	add    DWORD PTR [ecx],eax
  4328b9:	add    DWORD PTR [ecx],eax
  4328bb:	add    DWORD PTR [ecx],eax
  4328bd:	add    DWORD PTR [ecx],eax
  4328bf:	add    DWORD PTR [ecx],eax
  4328c1:	add    DWORD PTR [ecx],eax
  4328c3:	add    DWORD PTR [ecx],eax
  4328c5:	add    DWORD PTR [ecx],eax
  4328c7:	add    DWORD PTR [ecx],eax
  4328c9:	add    DWORD PTR [ecx],eax
  4328cb:	add    DWORD PTR [ecx],eax
  4328cd:	add    DWORD PTR [ecx],eax
  4328cf:	add    DWORD PTR [ecx],eax
  4328d1:	add    DWORD PTR [ecx],eax
  4328d3:	add    DWORD PTR [ecx],eax
  4328d5:	add    DWORD PTR [ecx],eax
  4328d7:	add    DWORD PTR [ecx],eax
  4328d9:	add    DWORD PTR [ecx],eax
  4328db:	add    DWORD PTR [ecx],eax
  4328dd:	add    DWORD PTR [ecx],eax
  4328df:	add    DWORD PTR [ecx],eax
  4328e1:	add    DWORD PTR [ecx],eax
  4328e3:	add    DWORD PTR [ecx],eax
  4328e5:	add    DWORD PTR [ecx],eax
  4328e7:	add    DWORD PTR [ecx],eax
  4328e9:	add    DWORD PTR [ecx],eax
  4328eb:	add    DWORD PTR [ecx],eax
  4328ed:	add    DWORD PTR [ecx],eax
  4328ef:	add    DWORD PTR [ecx],eax
  4328f1:	add    DWORD PTR [ecx],eax
  4328f3:	add    DWORD PTR [ecx],eax
  4328f5:	add    DWORD PTR [ecx],eax
  4328f7:	add    DWORD PTR [ecx],eax
  4328f9:	add    DWORD PTR [ecx],eax
  4328fb:	add    DWORD PTR [ecx],eax
  4328fd:	add    DWORD PTR [ecx],eax
  4328ff:	add    DWORD PTR [ecx],eax
  432901:	add    DWORD PTR [ecx],eax
  432903:	add    DWORD PTR [ecx],eax
  432905:	add    DWORD PTR [ecx],eax
  432907:	add    DWORD PTR [ecx],eax
  432909:	add    DWORD PTR [ecx],eax
  43290b:	add    DWORD PTR [ecx],eax
  43290d:	add    DWORD PTR [ecx],eax
  43290f:	add    DWORD PTR [ecx],eax
  432911:	add    DWORD PTR [ecx],eax
  432913:	add    DWORD PTR [ecx],eax
  432915:	add    DWORD PTR [ecx],eax
  432917:	add    DWORD PTR [ecx],eax
  432919:	add    DWORD PTR [ecx],eax
  43291b:	add    DWORD PTR [ecx],eax
  43291d:	add    DWORD PTR [ecx],eax
  43291f:	add    DWORD PTR [ecx],eax
  432921:	add    DWORD PTR [ecx],eax
  432923:	add    DWORD PTR [ecx],eax
  432925:	add    DWORD PTR [ecx],eax
  432927:	add    DWORD PTR [ecx],eax
  432929:	add    DWORD PTR [ecx],eax
  43292b:	add    DWORD PTR [ecx],eax
  43292d:	add    DWORD PTR [ecx],eax
  43292f:	add    DWORD PTR [ecx],eax
  432931:	add    DWORD PTR [ecx],eax
  432933:	add    DWORD PTR [ecx],eax
  432935:	add    DWORD PTR [ecx],eax
  432937:	add    DWORD PTR [ecx],eax
  432939:	add    DWORD PTR [ecx],eax
  43293b:	add    DWORD PTR [ecx],eax
  43293d:	add    DWORD PTR [ecx],eax
  43293f:	add    DWORD PTR [ecx],eax
  432941:	add    DWORD PTR [ecx],eax
  432943:	add    DWORD PTR [ecx],eax
  432945:	add    DWORD PTR [ecx],eax
  432947:	add    eax,ebx
  432949:	inc    esi
  43294a:	inc    ebx
  43294b:	add    BYTE PTR [eax-0x47],ah
  43294e:	inc    eax
  43294f:	add    BYTE PTR [eax-0x47],dl
  432952:	inc    eax
  432953:	add    BYTE PTR [eax-0x6fffbcba],dl
  432959:	ret    0x40
  43295c:	dec    eax
  43295d:	inc    esi
  43295e:	inc    ebx
  43295f:	add    al,al
  432961:	ret    
  432962:	inc    eax
  432963:	add    BYTE PTR [eax],al
  432965:	inc    esi
  432966:	inc    ebx
  432967:	add    BYTE PTR [eax],ah
  432969:	mov    BYTE PTR [eax+0x0],0xb8
  43296d:	inc    ebp
  43296e:	inc    ebx
  43296f:	add    BYTE PTR [eax-0x38],al
  432972:	inc    eax
  432973:	add    BYTE PTR [ebp+eax*2+0x43],ch
  432977:	add    BYTE PTR [eax-0x57ffbf2b],ah
  43297d:	push   eax
  43297e:	inc    edx
  43297f:	add    BYTE PTR [eax+0x50004344],ah
  432985:	pushf  
  432986:	inc    ecx
  432987:	add    BYTE PTR [eax],al
  432989:	pushf  
  43298a:	inc    ecx
  43298b:	add    BYTE PTR [eax],al
  43298d:	scas   eax,DWORD PTR es:[edi]
  43298e:	inc    eax
  43298f:	add    BYTE PTR [eax],ah
  432991:	pushf  
  432992:	inc    ecx
  432993:	add    BYTE PTR [esp+eax*2+0x43],dl
  432997:	add    BYTE PTR [eax-0x64],dl
  43299a:	inc    ecx
  43299b:	add    BYTE PTR [eax],dh
  43299d:	pushf  
  43299e:	inc    ecx
  43299f:	add    BYTE PTR [eax],al
  4329a1:	scas   eax,DWORD PTR es:[edi]
  4329a2:	inc    eax
  4329a3:	add    BYTE PTR [eax],ah
  4329a5:	pushf  
  4329a6:	inc    ecx
  4329a7:	add    BYTE PTR [esi+0x65],dh
  4329aa:	arpl   WORD PTR [edi+ebp*2+0x72],si
  4329ae:	cmp    al,0x54
  4329b0:	and    BYTE PTR ds:[edi+ebp*2+0x6f],dh
  4329b5:	and    BYTE PTR [edi+ebp*2+0x6e],ch
  4329b9:	add    BYTE PTR [bx+si],al
  4329bc:	hlt    
  4329bd:	inc    ebx
  4329be:	inc    ebx
  4329bf:	add    BYTE PTR [eax-0x4fffbe10],dl
  4329c5:	lock inc ecx
  4329c7:	add    BYTE PTR [eax+eax*1+0x6c],bl
  4329cb:	add    BYTE PTR [ecx+0x0],ah
  4329ce:	outs   dx,BYTE PTR ds:[esi]
  4329cf:	add    BYTE PTR [edi+0x0],ah
  4329d2:	jne    0x4329d4
  4329d4:	popa   
  4329d5:	add    BYTE PTR [edi+0x0],ah
  4329d8:	add    BYTE PTR gs:[ebx+0x0],dh
  4329dc:	pop    esp
  4329dd:	add    BYTE PTR [ebp+0x0],ah
  4329e0:	outs   dx,BYTE PTR ds:[esi]
  4329e1:	add    BYTE PTR [esi],ch
  4329e3:	add    BYTE PTR [eax+0x0],bh
  4329e6:	ins    DWORD PTR es:[edi],dx
  4329e7:	add    BYTE PTR [eax+eax*1+0x0],ch
  4329eb:	add    BYTE PTR [eax+0x6c],dl
  4329ee:	jne    0x432a57
  4329f0:	imul   ebp,DWORD PTR [esi+0x41],0x506f7475
  4329f7:	je     0x432a6b
  4329f9:	cmp    al,0x63
  4329fb:	ins    BYTE PTR es:[edi],dx
  4329fc:	popa   
  4329fd:	jae    0x432a72
  4329ff:	and    BYTE PTR [ecx+0x4c],cl
  432a02:	popa   
  432a03:	outs   dx,BYTE PTR ds:[esi]
  432a04:	addr16 jne 0x432a68
  432a07:	addr16 gs dec esp
  432a0a:	outs   dx,DWORD PTR ds:[esi]
  432a0b:	popa   
  432a0c:	fs gs jb 0x432a4e
  432a10:	cmp    bh,BYTE PTR [edx]
  432a12:	inc    ebx
  432a13:	jb     0x432a7a
  432a15:	popa   
  432a16:	je     0x432a7d
  432a18:	add    BYTE PTR [eax],al
  432a1a:	add    BYTE PTR [eax],al
  432a1c:	pop    esp
  432a1d:	add    BYTE PTR [ebp+0x0],dh
  432a20:	jo     0x432a22
  432a22:	add    BYTE PTR fs:[ecx+0x0],ah
  432a26:	je     0x432a28
  432a28:	add    BYTE PTR gs:[eax+eax*1+0x72],bl
  432a2d:	add    BYTE PTR [ebp+0x0],ah
  432a30:	jae    0x432a32
  432a32:	outs   dx,DWORD PTR ds:[esi]
  432a33:	add    BYTE PTR [ebp+0x0],dh
  432a36:	jb     0x432a38
  432a38:	arpl   WORD PTR [eax],ax
  432a3a:	add    BYTE PTR gs:[eax+eax*1+0x61],bl
  432a3f:	add    BYTE PTR [eax+0x0],dh
  432a42:	jo     0x432a44
  432a44:	pop    esp
  432a45:	add    BYTE PTR [esi+0x0],dh
  432a48:	imul   eax,DWORD PTR [eax],0x770065
  432a4e:	jae    0x432a50
  432a50:	add    BYTE PTR [eax],al
  432a52:	add    BYTE PTR [eax],al
  432a54:	pop    esp
  432a55:	add    BYTE PTR [ebp+0x0],dh
  432a58:	jo     0x432a5a
  432a5a:	add    BYTE PTR fs:[ecx+0x0],ah
  432a5e:	je     0x432a60
  432a60:	add    BYTE PTR gs:[eax+eax*1+0x74],bl
  432a65:	add    BYTE PTR [ebp+0x0],ah
  432a68:	ins    DWORD PTR es:[edi],dx
  432a69:	add    BYTE PTR [eax+0x0],dh
  432a6c:	add    BYTE PTR [eax],al
  432a6e:	add    BYTE PTR [eax],al
  432a70:	pop    esp
  432a71:	add    BYTE PTR [ebp+0x0],dh
  432a74:	jo     0x432a76
  432a76:	add    BYTE PTR fs:[ecx+0x0],ah
  432a7a:	je     0x432a7c
  432a7c:	add    BYTE PTR gs:[eax],al
  432a7f:	add    BYTE PTR [eax+eax*1+0x75],bl
  432a83:	add    BYTE PTR [eax+0x0],dh
  432a86:	add    BYTE PTR fs:[ecx+0x0],ah
  432a8a:	je     0x432a8c
  432a8c:	add    BYTE PTR gs:[eax+eax*1+0x72],bl
  432a91:	add    BYTE PTR [ebp+0x0],ah
  432a94:	jae    0x432a96
  432a96:	outs   dx,DWORD PTR ds:[esi]
  432a97:	add    BYTE PTR [ebp+0x0],dh
  432a9a:	jb     0x432a9c
  432a9c:	arpl   WORD PTR [eax],ax
  432a9e:	add    BYTE PTR gs:[eax+eax*1+0x75],bl
  432aa3:	add    BYTE PTR [ecx+0x0],ch
  432aa6:	add    BYTE PTR [eax],al
  432aa8:	pop    esp
  432aa9:	add    BYTE PTR [ebp+0x0],dh
  432aac:	jo     0x432aae
  432aae:	add    BYTE PTR fs:[ecx+0x0],ah
  432ab2:	je     0x432ab4
  432ab4:	add    BYTE PTR gs:[eax+eax*1+0x72],bl
  432ab9:	add    BYTE PTR [ebp+0x0],ah
  432abc:	jae    0x432abe
  432abe:	outs   dx,DWORD PTR ds:[esi]
  432abf:	add    BYTE PTR [ebp+0x0],dh
  432ac2:	jb     0x432ac4
  432ac4:	arpl   WORD PTR [eax],ax
  432ac6:	add    BYTE PTR gs:[eax+eax*1+0x61],bl
  432acb:	add    BYTE PTR [eax+0x0],dh
  432ace:	jo     0x432ad0
  432ad0:	add    BYTE PTR [eax],al
  432ad2:	add    BYTE PTR [eax],al
  432ad4:	push   esp
  432ad5:	add    BYTE PTR [ecx+0x0],ah
  432ad8:	ins    BYTE PTR es:[edi],dx
  432ad9:	add    BYTE PTR [ebx+0x0],ch
  432adc:	push   esp
  432add:	add    BYTE PTR [ecx+0x0],ah
  432ae0:	ins    BYTE PTR es:[edi],dx
  432ae1:	add    BYTE PTR [ebx+0x0],ch
  432ae4:	and    BYTE PTR [eax],al
  432ae6:	inc    ebp
  432ae7:	add    BYTE PTR [edx+0x0],dh
  432aea:	jb     0x432aec
  432aec:	outs   dx,DWORD PTR ds:[esi]
  432aed:	add    BYTE PTR [edx+0x0],dh
	...
  432af8:	push   ebp
  432af9:	add    BYTE PTR [eax+0x0],dh
  432afc:	add    BYTE PTR fs:[ecx+0x0],ah
  432b00:	je     0x432b02
  432b02:	add    BYTE PTR gs:[eax],ah
  432b05:	add    BYTE PTR [eax+0x0],ch
  432b08:	popa   
  432b09:	add    BYTE PTR [ebx+0x0],dh
  432b0c:	and    BYTE PTR [eax],al
  432b0e:	data16 add BYTE PTR [ecx+0x0],ah
  432b12:	imul   eax,DWORD PTR [eax],0x65006c
  432b18:	add    BYTE PTR fs:[eax],ah
  432b1b:	add    BYTE PTR [eax+eax*1+0x6f],dh
  432b1f:	add    BYTE PTR [eax],ah
  432b21:	add    BYTE PTR [ebx+0x0],dh
  432b24:	je     0x432b26
  432b26:	popa   
  432b27:	add    BYTE PTR [edx+0x0],dh
  432b2a:	je     0x432b2c
  432b2c:	and    BYTE PTR [eax],al
  432b2e:	add    BYTE PTR fs:[ebp+0x0],dh
  432b32:	add    BYTE PTR gs:[eax],ah
  432b35:	add    BYTE PTR [eax+eax*1+0x6f],dh
  432b39:	add    BYTE PTR [eax],ah
  432b3b:	add    BYTE PTR [ebp+0x0],ch
  432b3e:	imul   eax,DWORD PTR [eax],0x730073
  432b44:	imul   eax,DWORD PTR [eax],0x67006e
  432b4a:	and    BYTE PTR [eax],al
  432b4c:	jb     0x432b4e
  432b4e:	add    BYTE PTR gs:[ebx+0x0],dh
  432b52:	outs   dx,DWORD PTR ds:[esi]
  432b53:	add    BYTE PTR [ebp+0x0],dh
  432b56:	jb     0x432b58
  432b58:	arpl   WORD PTR [eax],ax
  432b5a:	add    BYTE PTR gs:[eax],ah
  432b5d:	add    BYTE PTR [esi+0x0],ah
  432b60:	imul   eax,DWORD PTR [eax],0x65006c
  432b66:	jae    0x432b68
  432b68:	add    BYTE PTR cs:[eax],al
  432b6b:	add    BYTE PTR [esi+0x69],al
  432b6e:	ins    BYTE PTR es:[edi],dx
  432b6f:	gs dec esi
  432b71:	push   ebx
  432b72:	cmp    bh,BYTE PTR [edx]
  432b74:	inc    ebx
  432b75:	inc    esi
  432b76:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x67616e61
  432b7e:	gs jb  0x432bbb
  432b81:	cmp    bl,BYTE PTR [edi+0x5f]
  432b84:	dec    ecx
  432b85:	outs   dx,BYTE PTR ds:[esi]
  432b86:	imul   esi,DWORD PTR [eax+eax*1+0x0],0x5c2e0000
  432b8e:	inc    esi
  432b8f:	imul   ebp,DWORD PTR [ebp+eiz*2+0x5c],0x656c6946
  432b97:	dec    ebp
  432b98:	popa   
  432b99:	outs   dx,BYTE PTR ds:[esi]
  432b9a:	popa   
  432b9b:	addr16 gs jb 0x432bcd
  432b9f:	arpl   WORD PTR [eax+0x70],si
  432ba2:	add    BYTE PTR [eax],al
  432ba4:	inc    esi
  432ba5:	popa   
  432ba6:	imul   ebp,DWORD PTR [ebp+eiz*2+0x64],0x206f7420
  432bae:	ins    DWORD PTR es:[edi],dx
  432baf:	outs   dx,DWORD PTR ds:[esi]
  432bb0:	jne    0x432c20
  432bb2:	je     0x432bd4
  432bb4:	inc    ecx
  432bb5:	push   eax
  432bb6:	push   eax
  432bb7:	and    BYTE PTR [edx+0x65],dh
  432bba:	jae    0x432c2b
  432bbc:	jne    0x432c30
  432bbe:	arpl   WORD PTR [ebp+0x20],sp
  432bc1:	outs   dx,WORD PTR ds:[esi]
  432bc3:	ins    BYTE PTR es:[edi],dx
  432bc4:	fs gs jb 0x432bc8
  432bc8:	inc    esi
  432bc9:	popa   
  432bca:	imul   ebp,DWORD PTR [ebp+eiz*2+0x64],0x206f7420
  432bd2:	ins    DWORD PTR es:[edi],dx
  432bd3:	outs   dx,DWORD PTR ds:[esi]
  432bd4:	jne    0x432c44
  432bd6:	je     0x432bf8
  432bd8:	push   ebp
  432bd9:	dec    ecx
  432bda:	and    BYTE PTR [edx+0x65],dh
  432bdd:	jae    0x432c4e
  432bdf:	jne    0x432c53
  432be1:	arpl   WORD PTR [ebp+0x20],sp
  432be4:	outs   dx,WORD PTR ds:[esi]
  432be6:	ins    BYTE PTR es:[edi],dx
  432be7:	fs gs jb 0x432beb
  432beb:	add    BYTE PTR [esi+0x69],al
  432bee:	ins    BYTE PTR es:[edi],dx
  432bef:	gs dec esi
  432bf1:	push   ebx
  432bf2:	cmp    bh,BYTE PTR [edx]
  432bf4:	inc    ebx
  432bf5:	inc    esi
  432bf6:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x67616e61
  432bfe:	gs jb  0x432c3b
  432c01:	cmp    cl,BYTE PTR [ecx+0x6e]
  432c04:	imul   esi,DWORD PTR [eax+eax*1+0x0],0x6c696146
  432c0c:	gs and BYTE PTR fs:[edi+ebp*2+0x20],dh
  432c12:	arpl   WORD PTR [edx+0x65],si
  432c15:	popa   
  432c16:	je     0x432c7d
  432c18:	and    BYTE PTR [esi+0x69],ah
  432c1b:	ins    BYTE PTR es:[edi],dx
  432c1c:	and    BYTE PTR gs:[ebp+0x61],ch
  432c20:	outs   dx,BYTE PTR ds:[esi]
  432c21:	popa   
  432c22:	addr16 gs jb 0x432c26
  432c26:	add    BYTE PTR [eax],al
  432c28:	push   esp
  432c29:	add    BYTE PTR [ecx+0x0],ah
  432c2c:	ins    BYTE PTR es:[edi],dx
  432c2d:	add    BYTE PTR [ebx+0x0],ch
  432c30:	push   esp
  432c31:	add    BYTE PTR [ecx+0x0],ah
  432c34:	ins    BYTE PTR es:[edi],dx
  432c35:	add    BYTE PTR [ebx+0x0],ch
  432c38:	and    BYTE PTR [eax],al
  432c3a:	push   0x73006100
  432c3f:	add    BYTE PTR [eax],ah
  432c41:	add    BYTE PTR [esi+0x0],ah
  432c44:	popa   
  432c45:	add    BYTE PTR [ecx+0x0],ch
  432c48:	ins    BYTE PTR es:[edi],dx
  432c49:	add    BYTE PTR [ebp+0x0],ah
  432c4c:	add    BYTE PTR fs:[eax],ah
  432c4f:	add    BYTE PTR [eax+eax*1+0x6f],dh
  432c53:	add    BYTE PTR [eax],ah
  432c55:	add    BYTE PTR [ebx+0x0],dh
  432c58:	je     0x432c5a
  432c5a:	popa   
  432c5b:	add    BYTE PTR [edx+0x0],dh
  432c5e:	je     0x432c60
  432c60:	and    BYTE PTR [eax],al
  432c62:	add    BYTE PTR fs:[ebp+0x0],dh
  432c66:	add    BYTE PTR gs:[eax],ah
  432c69:	add    BYTE PTR [eax+eax*1+0x6f],dh
  432c6d:	add    BYTE PTR [eax],ah
  432c6f:	add    BYTE PTR [ebp+0x0],ch
  432c72:	imul   eax,DWORD PTR [eax],0x730073
  432c78:	imul   eax,DWORD PTR [eax],0x67006e
  432c7e:	and    BYTE PTR [eax],al
  432c80:	inc    esi
  432c81:	add    BYTE PTR [ecx+0x0],ch
  432c84:	ins    BYTE PTR es:[edi],dx
  432c85:	add    BYTE PTR [ebp+0x0],ah
  432c88:	and    BYTE PTR [eax],al
  432c8a:	dec    ebp
  432c8b:	add    BYTE PTR [ecx+0x0],ah
  432c8e:	outs   dx,BYTE PTR ds:[esi]
  432c8f:	add    BYTE PTR [ecx+0x0],ah
  432c92:	add    BYTE PTR [di+0x0],ah
  432c96:	jb     0x432c98
  432c98:	and    BYTE PTR [eax],al
  432c9a:	ins    BYTE PTR es:[edi],dx
  432c9b:	add    BYTE PTR [ecx+0x0],ch
  432c9e:	bound  eax,QWORD PTR [eax]
  432ca0:	jb     0x432ca2
  432ca2:	popa   
  432ca3:	add    BYTE PTR [edx+0x0],dh
  432ca6:	jns    0x432ca8
  432ca8:	add    BYTE PTR cs:[eax],al
  432cab:	add    BYTE PTR [esi+0x69],al
  432cae:	ins    BYTE PTR es:[edi],dx
  432caf:	gs dec esi
  432cb1:	push   ebx
  432cb2:	cmp    bh,BYTE PTR [edx]
  432cb4:	inc    ebx
  432cb5:	inc    esi
  432cb6:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x67616e61
  432cbe:	gs jb  0x432cfb
  432cc1:	cmp    al,BYTE PTR [esi+0x69]
  432cc4:	ins    BYTE PTR es:[edi],dx
  432cc5:	gs push esp
  432cc7:	outs   dx,DWORD PTR ds:[esi]
  432cc8:	push   esp
  432cc9:	gs js  0x432d40
  432ccc:	add    BYTE PTR [eax],al
  432cce:	add    BYTE PTR [eax],al
  432cd0:	inc    ebp
  432cd1:	jb     0x432d45
  432cd3:	outs   dx,DWORD PTR ds:[esi]
  432cd4:	jb     0x432cf6
  432cd6:	jb     0x432d3d
  432cd8:	popa   
  432cd9:	imul   ebp,DWORD PTR fs:[esi+0x67],0x6c696620
  432ce1:	and    BYTE PTR gs:0x73,ah
  432ce8:	push   eax
  432ce9:	ins    BYTE PTR es:[edi],dx
  432cea:	jne    0x432d53
  432cec:	imul   ebp,DWORD PTR [esi+0x41],0x506f7475
  432cf3:	je     0x432d67
  432cf5:	cmp    al,0x63
  432cf7:	ins    BYTE PTR es:[edi],dx
  432cf8:	popa   
  432cf9:	jae    0x432d6e
  432cfb:	and    BYTE PTR [ecx+0x53],cl
  432cfe:	imul   ebp,DWORD PTR [ecx+0x6e],0x4d
  432d02:	popa   
  432d03:	outs   dx,BYTE PTR ds:[esi]
  432d04:	popa   
  432d05:	addr16 gs jb 0x432d47
  432d09:	cmp    bh,BYTE PTR [edx]
  432d0b:	inc    ebx
  432d0c:	jb     0x432d73
  432d0e:	popa   
  432d0f:	je     0x432d76
  432d11:	add    BYTE PTR [eax],al
  432d13:	add    BYTE PTR [edi],ch
  432d15:	add    BYTE PTR [eax+eax*1+0x3a],bl
  432d19:	add    BYTE PTR [esi],ah
  432d1b:	add    BYTE PTR [eax],al
  432d1d:	add    BYTE PTR [eax],al
  432d1f:	add    BYTE PTR [edx],ah
  432d21:	add    BYTE PTR [edi],ah
  432d23:	add    BYTE PTR [eax],al
  432d25:	add    BYTE PTR [eax],al
  432d27:	add    BYTE PTR ds:0x2c00,bh
  432d2d:	add    BYTE PTR [eax],al
  432d2f:	add    BYTE PTR [esi],ah
  432d31:	add    BYTE PTR [eax+0x0],dh
  432d34:	popa   
  432d35:	add    BYTE PTR [eax+eax*1+0x63],dh
  432d39:	add    BYTE PTR [eax+0x0],ch
  432d3c:	pop    edi
  432d3d:	add    BYTE PTR [ebx+0x0],ah
  432d40:	outs   dx,DWORD PTR ds:[esi]
  432d41:	add    BYTE PTR [ebp+0x0],dh
  432d44:	outs   dx,BYTE PTR ds:[esi]
  432d45:	add    BYTE PTR [eax+eax*1+0x3d],dh
  432d49:	add    BYTE PTR [eax],al
  432d4b:	add    BYTE PTR [esi],ah
  432d4d:	add    BYTE PTR [eax+eax*1+0x61],dh
  432d51:	add    BYTE PTR [eax+eax*1+0x6b],ch
  432d55:	add    BYTE PTR [edi+0x0],bl
  432d58:	bound  eax,QWORD PTR [eax]
  432d5a:	jb     0x432d5c
  432d5c:	popa   
  432d5d:	add    BYTE PTR [esi+0x0],ch
  432d60:	arpl   WORD PTR [eax],ax
  432d62:	push   0x3d00
  432d67:	add    BYTE PTR [ebp+0x0],dh
  432d6a:	jo     0x432d6c
  432d6c:	add    BYTE PTR fs:[ecx+0x0],ah
  432d70:	je     0x432d72
  432d72:	add    BYTE PTR gs:[edi+0x0],bl
  432d76:	imul   eax,DWORD PTR [eax],0x69006e
  432d7c:	je     0x432d7e
  432d7e:	cmp    al,BYTE PTR [eax]
  432d80:	je     0x432d82
  432d82:	popa   
  432d83:	add    BYTE PTR [eax+eax*1+0x6b],ch
  432d87:	add    BYTE PTR [edi+0x0],bl
  432d8a:	jbe    0x432d8c
  432d8c:	add    BYTE PTR gs:[edx+0x0],dh
  432d90:	jae    0x432d92
  432d92:	imul   eax,DWORD PTR [eax],0x6e006f
  432d98:	cmp    eax,0x26000000
  432d9d:	add    BYTE PTR [eax+0x0],dh
  432da0:	add    BYTE PTR gs:[edx+0x0],dh
  432da4:	arpl   WORD PTR [eax],ax
  432da6:	add    BYTE PTR gs:[esi+0x0],ch
  432daa:	je     0x432dac
  432dac:	popa   
  432dad:	add    BYTE PTR [edi+0x0],ah
  432db0:	add    BYTE PTR gs:0x0,bh
  432db7:	add    BYTE PTR [ebp+0x0],dh
  432dba:	jo     0x432dbc
  432dbc:	add    BYTE PTR fs:[ecx+0x0],ah
  432dc0:	je     0x432dc2
  432dc2:	add    BYTE PTR gs:[edi+0x0],bl
  432dc6:	add    BYTE PTR fs:[edi+0x0],ch
  432dca:	ja     0x432dcc
  432dcc:	outs   dx,BYTE PTR ds:[esi]
  432dcd:	add    BYTE PTR [eax+eax*1+0x6f],ch
  432dd1:	add    BYTE PTR [ecx+0x0],ah
  432dd4:	add    BYTE PTR fs:[ecx+0x0],ch
  432dd8:	outs   dx,BYTE PTR ds:[esi]
  432dd9:	add    BYTE PTR [edi+0x0],ah
  432ddc:	cmp    al,BYTE PTR [eax]
  432dde:	jo     0x432de0
  432de0:	popa   
  432de1:	add    BYTE PTR [eax+eax*1+0x63],dh
  432de5:	add    BYTE PTR [eax+0x0],ch
  432de8:	pop    edi
  432de9:	add    BYTE PTR [ecx+0x0],ch
  432dec:	outs   dx,BYTE PTR ds:[esi]
  432ded:	add    BYTE PTR [eax+eax*1+0x65],ah
  432df1:	add    BYTE PTR [eax+0x0],bh
  432df4:	cmp    eax,0x75000000
  432df9:	add    BYTE PTR [eax+0x0],dh
  432dfc:	add    BYTE PTR fs:[ecx+0x0],ah
  432e00:	je     0x432e02
  432e02:	add    BYTE PTR gs:[edi+0x0],bl
  432e06:	imul   eax,DWORD PTR [eax],0x73006e
  432e0c:	je     0x432e0e
  432e0e:	popa   
  432e0f:	add    BYTE PTR [eax+eax*1+0x6c],ch
  432e13:	add    BYTE PTR [ecx+0x0],ch
  432e16:	outs   dx,BYTE PTR ds:[esi]
  432e17:	add    BYTE PTR [edi+0x0],ah
  432e1a:	cmp    al,BYTE PTR [eax]
  432e1c:	jo     0x432e1e
  432e1e:	popa   
  432e1f:	add    BYTE PTR [eax+eax*1+0x63],dh
  432e23:	add    BYTE PTR [eax+0x0],ch
  432e26:	pop    edi
  432e27:	add    BYTE PTR [ecx+0x0],ch
  432e2a:	outs   dx,BYTE PTR ds:[esi]
  432e2b:	add    BYTE PTR [eax+eax*1+0x65],ah
  432e2f:	add    BYTE PTR [eax+0x0],bh
  432e32:	cmp    eax,0x0
  432e37:	add    BYTE PTR [ebp+0x0],dh
  432e3a:	jo     0x432e3c
  432e3c:	add    BYTE PTR fs:[ecx+0x0],ah
  432e40:	je     0x432e42
  432e42:	add    BYTE PTR gs:[edi+0x0],bl
  432e46:	arpl   WORD PTR [eax],ax
  432e48:	outs   dx,DWORD PTR ds:[esi]
  432e49:	add    BYTE PTR [ebp+0x0],ch
  432e4c:	jo     0x432e4e
  432e4e:	ins    BYTE PTR es:[edi],dx
  432e4f:	add    BYTE PTR [ebp+0x0],ah
  432e52:	je     0x432e54
  432e54:	add    BYTE PTR gs:[edx],bh
  432e57:	add    BYTE PTR [eax+0x0],dh
  432e5a:	popa   
  432e5b:	add    BYTE PTR [eax+eax*1+0x63],dh
  432e5f:	add    BYTE PTR [eax+0x0],ch
  432e62:	pop    edi
  432e63:	add    BYTE PTR [ecx+0x0],ch
  432e66:	outs   dx,BYTE PTR ds:[esi]
  432e67:	add    BYTE PTR [eax+eax*1+0x65],ah
  432e6b:	add    BYTE PTR [eax+0x0],bh
  432e6e:	cmp    eax,0x0
  432e73:	add    BYTE PTR [esi],ah
  432e75:	add    BYTE PTR [esi+0x0],ah
  432e78:	popa   
  432e79:	add    BYTE PTR [ecx+0x0],ch
  432e7c:	ins    BYTE PTR es:[edi],dx
  432e7d:	add    BYTE PTR [edi+0x0],bl
  432e80:	jb     0x432e82
  432e82:	add    BYTE PTR gs:[ecx+0x0],ah
  432e86:	jae    0x432e88
  432e88:	outs   dx,DWORD PTR ds:[esi]
  432e89:	add    BYTE PTR [esi+0x0],ch
  432e8c:	cmp    eax,0x75000000
  432e91:	add    BYTE PTR [eax+0x0],dh
  432e94:	add    BYTE PTR fs:[ecx+0x0],ah
  432e98:	je     0x432e9a
  432e9a:	add    BYTE PTR gs:[edi+0x0],bl
  432e9e:	data16 add BYTE PTR [ecx+0x0],ah
  432ea2:	imul   eax,DWORD PTR [eax],0x3a006c
  432ea8:	jo     0x432eaa
  432eaa:	popa   
  432eab:	add    BYTE PTR [eax+eax*1+0x63],dh
  432eaf:	add    BYTE PTR [eax+0x0],ch
  432eb2:	pop    edi
  432eb3:	add    BYTE PTR [ecx+0x0],ch
  432eb6:	outs   dx,BYTE PTR ds:[esi]
  432eb7:	add    BYTE PTR [eax+eax*1+0x65],ah
  432ebb:	add    BYTE PTR [eax+0x0],bh
  432ebe:	cmp    eax,0x0
  432ec3:	add    BYTE PTR [edi+0x0],al
  432ec6:	push   ebp
  432ec7:	add    BYTE PTR [eax+0x0],dh
  432eca:	add    BYTE PTR fs:[ecx+0x0],ah
  432ece:	je     0x432ed0
  432ed0:	add    BYTE PTR gs:[ebp+0x0],cl
  432ed4:	popa   
  432ed5:	add    BYTE PTR [esi+0x0],ch
  432ed8:	popa   
  432ed9:	add    BYTE PTR [edi+0x0],ah
  432edc:	add    BYTE PTR gs:[edx+0x0],dh
	...
  432ee8:	jnp    0x432eea
  432eea:	xor    eax,DWORD PTR [eax]
  432eec:	inc    ecx
  432eed:	add    BYTE PTR [edx+0x0],al
  432ef0:	xor    al,BYTE PTR [eax]
  432ef2:	xor    al,0x0
  432ef4:	add    BYTE PTR ss:[ecx+0x0],al
  432ef8:	cmp    DWORD PTR [eax],eax
  432efa:	pop    edi
  432efb:	add    BYTE PTR [ecx],dh
  432efd:	add    BYTE PTR [edi],dh
  432eff:	add    BYTE PTR [esi+0x0],al
  432f02:	xor    eax,0x34005f00
  432f07:	add    BYTE PTR [edi],dh
  432f09:	add    BYTE PTR [eax],bh
  432f0b:	add    BYTE PTR ds:0x42005f00,dh
  432f11:	add    BYTE PTR [esi+0x0],al
  432f14:	cmp    DWORD PTR [eax],eax
  432f16:	cmp    DWORD PTR [eax],eax
  432f18:	pop    edi
  432f19:	add    BYTE PTR [edx+0x0],al
  432f1c:	xor    al,BYTE PTR [eax]
  432f1e:	cmp    BYTE PTR [eax],al
  432f20:	xor    eax,DWORD PTR [eax]
  432f22:	inc    ecx
  432f23:	add    BYTE PTR [edi],dh
  432f25:	add    BYTE PTR [ecx],dh
  432f27:	add    BYTE PTR [edx],dh
  432f29:	add    BYTE PTR [esi+0x0],al
  432f2c:	xor    al,0x0
  432f2e:	xor    al,0x0
  432f30:	inc    ebp
  432f31:	add    BYTE PTR [ebp+0x0],bh
  432f34:	add    BYTE PTR [eax],al
  432f36:	add    BYTE PTR [eax],al
  432f38:	inc    edi
  432f39:	add    BYTE PTR [eax+eax*1+0x61],dl
  432f3d:	add    BYTE PTR [eax+eax*1+0x6b],ch
  432f41:	add    BYTE PTR [ebp+0x0],dl
  432f44:	jo     0x432f46
  432f46:	add    BYTE PTR fs:[ecx+0x0],ah
  432f4a:	je     0x432f4c
  432f4c:	add    BYTE PTR gs:[edx+0x0],dh
  432f50:	add    BYTE PTR [eax],al
  432f52:	add    BYTE PTR [eax],al
  432f54:	bound  eax,QWORD PTR [eax]
  432f56:	bound  eax,QWORD PTR [eax]
  432f58:	je     0x432f5a
  432f5a:	cmp    al,BYTE PTR [eax]
  432f5c:	das    
  432f5d:	add    BYTE PTR [edi],ch
  432f5f:	add    BYTE PTR [eax],al
  432f61:	add    BYTE PTR [eax],al
  432f63:	add    BYTE PTR [ebp+0x0],dh
  432f66:	jo     0x432f68
  432f68:	add    BYTE PTR fs:[ecx+0x0],ah
  432f6c:	je     0x432f6e
  432f6e:	add    BYTE PTR gs:[edx+0x0],dh
  432f72:	pop    edi
  432f73:	add    BYTE PTR [ebp+0x0],ah
  432f76:	js     0x432f78
  432f78:	imul   eax,DWORD PTR [eax],0x74
  432f7e:	add    BYTE PTR [eax],al
  432f80:	push   eax
  432f81:	ins    BYTE PTR es:[edi],dx
  432f82:	jne    0x432feb
  432f84:	imul   ebp,DWORD PTR [esi+0x41],0x506f7475
  432f8b:	je     0x432fff
  432f8d:	cmp    al,0x63
  432f8f:	ins    BYTE PTR es:[edi],dx
  432f90:	popa   
  432f91:	jae    0x433006
  432f93:	and    BYTE PTR [ecx+0x49],cl
  432f96:	push   eax
  432f97:	inc    ebx
  432f98:	inc    ebx
  432f99:	ins    BYTE PTR es:[edi],dx
  432f9a:	imul   esp,DWORD PTR [ebp+0x6e],0x6e614d74
  432fa1:	popa   
  432fa2:	addr16 gs jb 0x432fe4
  432fa6:	cmp    bh,BYTE PTR [edx]
  432fa8:	inc    ebx
  432fa9:	jb     0x433010
  432fab:	popa   
  432fac:	je     0x433013
  432fae:	add    BYTE PTR [eax],al
  432fb0:	push   eax
  432fb1:	ins    BYTE PTR es:[edi],dx
  432fb2:	jne    0x43301b
  432fb4:	imul   ebp,DWORD PTR [esi+0x41],0x506f7475
  432fbb:	je     0x43302f
  432fbd:	cmp    al,0x63
  432fbf:	ins    BYTE PTR es:[edi],dx
  432fc0:	popa   
  432fc1:	jae    0x433036
  432fc3:	and    BYTE PTR [ecx+0x49],cl
  432fc6:	push   eax
  432fc7:	inc    ebx
  432fc8:	inc    ebx
  432fc9:	ins    BYTE PTR es:[edi],dx
  432fca:	imul   esp,DWORD PTR [ebp+0x6e],0x3a3a3e74
  432fd1:	inc    ebx
  432fd2:	jb     0x433039
  432fd4:	popa   
  432fd5:	je     0x43303c
  432fd7:	add    BYTE PTR [ebx+0x61],ah
  432fda:	outs   dx,BYTE PTR ds:[esi]
  432fdb:	outs   dx,BYTE PTR ds:[esi]
  432fdc:	outs   dx,DWORD PTR ds:[esi]
  432fdd:	je     0x432fff
  432fdf:	outs   dx,BYTE PTR gs:[esi]
  432fe1:	and    BYTE PTR fs:[edi+0x69],dh
  432fe5:	je     0x43304f
  432fe7:	and    BYTE PTR [ebp+0x73],ah
  432fea:	arpl   WORD PTR [ecx+0x70],sp
  432fed:	add    BYTE PTR gs:[eax],al
  432ff0:	jne    0x433060
  432ff2:	imul   ebp,DWORD PTR [esi+0x6f],0x77
  432ff6:	outs   dx,BYTE PTR ds:[esi]
  432ff7:	and    BYTE PTR [ebp+0x73],ah
  432ffa:	arpl   WORD PTR [ecx+0x70],sp
  432ffd:	and    BYTE PTR gs:[ebx+0x65],dh
  433001:	jno    0x433078
  433003:	outs   dx,BYTE PTR gs:[esi]
  433005:	arpl   WORD PTR [ebp+0x0],sp
  433008:	or     BYTE PTR [edx+0x42],0x0
  43300c:	lock dec edx
  43300e:	inc    edx
  43300f:	add    BYTE PTR [eax],dl
  433011:	dec    ebx
  433012:	inc    edx
  433013:	add    BYTE PTR [eax+0x4b],dl
  433016:	inc    edx
  433017:	add    BYTE PTR [edi+eax*2],ah
  43301a:	inc    ebx
  43301b:	add    BYTE PTR [eax+0x5],ah
  43301e:	inc    edx
  43301f:	add    BYTE PTR [eax+0x41f0],dh
  433025:	add    BYTE PTR [eax],al
  433027:	add    BYTE PTR [eax],al
  433029:	add    BYTE PTR [eax],al
  43302b:	inc    eax
  43302c:	xor    esi,DWORD PTR [ebx]
  43302e:	jmp    0x43306f
  433030:	add    BYTE PTR [eax],al
  433032:	add    BYTE PTR [eax],al
  433034:	xor    esi,DWORD PTR [ebx]
  433036:	ret    
  433037:	aas    
  433038:	add    BYTE PTR [eax],al
  43303a:	add    BYTE PTR [eax],al
  43303c:	add    BYTE PTR [eax],al
  43303e:	lock inc ecx
  433040:	dec    eax
	...
  433079:	add    BYTE PTR [eax],al
  43307b:	add    BYTE PTR [eax],ah
  43307d:	loopne 0x4330c2
  43307f:	add    BYTE PTR [eax+0x2a004347],al
  433085:	add    DWORD PTR [eax],eax
  433087:	add    BYTE PTR [edx+0x53],dl
  43308a:	inc    esp
  43308b:	push   ebx
  43308c:	or     DWORD PTR [ebx+ecx*8-0x6c5a192a],ecx
  433093:	dec    ecx
  433094:	mov    cl,0x6a
  433096:	add    cl,BYTE PTR [edi-0x3c]
  433099:	xchg   ebx,eax
  43309a:	cld    
  43309b:	lds    eax,FWORD PTR [edi]
  43309d:	add    BYTE PTR [eax],al
  43309f:	add    BYTE PTR [ebx+0x3a],ah
  4330a2:	pop    esp
  4330a3:	ja     0x433114
  4330a5:	jb     0x433112
  4330a7:	pop    esp
  4330a8:	addr16 popa 
  4330aa:	jb     0x433111
  4330ac:	outs   dx,BYTE PTR ds:[esi]
  4330ad:	popa   
  4330ae:	pop    edi
  4330af:	je     0x433112
  4330b1:	ins    BYTE PTR es:[edi],dx
  4330b2:	imul   ebx,DWORD PTR [esp+esi*2+0x72],0x75
  4330b7:	outs   dx,BYTE PTR ds:[esi]
  4330b8:	imul   ebx,DWORD PTR [ebx+eiz*2+0x6c],0x69
  4330bd:	outs   dx,BYTE PTR gs:[esi]
  4330bf:	je     0x43311d
  4330c1:	push   edx
  4330c2:	gs ins BYTE PTR es:[edi],dx
  4330c4:	gs popa 
  4330c6:	jae    0x43312d
  4330c8:	pop    esp
  4330c9:	push   ebp
  4330ca:	jo     0x433130
  4330cc:	popa   
  4330cd:	je     0x433134
  4330cf:	cs jo  0x433136
  4330d2:	bound  eax,QWORD PTR [eax]
	...
  4330e0:	or     al,ah
  4330e2:	inc    ebx
  4330e3:	add    al,ch
  4330e5:	xor    BYTE PTR [ebx+0x0],al
	...
  4330f0:	add    DWORD PTR [eax],eax
  4330f2:	add    BYTE PTR [eax],al
  4330f4:	clc    
  4330f5:	xor    BYTE PTR [ebx+0x0],al
  4330f8:	add    BYTE PTR [ecx],dh
  4330fa:	inc    ebx
  4330fb:	add    BYTE PTR [eax],al
  4330fd:	add    BYTE PTR [eax],al
  4330ff:	add    BYTE PTR [eax],cl
  433101:	loopne 0x433146
	...
  43310b:	add    bh,bh
  43310d:	(bad)  
  43310e:	(bad)  
  43310f:	inc    DWORD PTR [eax]
  433111:	add    BYTE PTR [eax],al
  433113:	add    BYTE PTR [eax+0x0],al
  433116:	add    BYTE PTR [eax],al
  433118:	call   0x43744d
	...
  433125:	add    BYTE PTR [eax],al
  433127:	add    BYTE PTR [eax+eiz*8],bh
  43312a:	inc    ebx
  43312b:	add    BYTE PTR [eax],dh
  43312d:	xor    DWORD PTR [ebx+0x0],eax
	...
  433138:	add    eax,DWORD PTR [eax]
  43313a:	add    BYTE PTR [eax],al
  43313c:	inc    eax
  43313d:	xor    DWORD PTR [ebx+0x0],eax
  433140:	push   eax
  433141:	xor    DWORD PTR [ebx+0x0],eax
  433144:	lods   al,BYTE PTR ds:[esi]
  433145:	cmp    al,BYTE PTR [ebx+0x0]
  433148:	shl    BYTE PTR ds:0x43,0x0
  43314f:	add    BYTE PTR [eax+eiz*8],bh
  433152:	inc    ebx
  433153:	add    BYTE PTR [edx],al
  433155:	add    BYTE PTR [eax],al
  433157:	add    BYTE PTR [eax],al
  433159:	add    BYTE PTR [eax],al
  43315b:	add    bh,bh
  43315d:	(bad)  
  43315e:	(bad)  
  43315f:	inc    DWORD PTR [eax]
  433161:	add    BYTE PTR [eax],al
  433163:	add    BYTE PTR [eax+0x0],al
  433166:	add    BYTE PTR [eax],al
  433168:	xor    BYTE PTR [ecx],dh
  43316a:	inc    ebx
	...
  433177:	add    BYTE PTR [eax-0x20],dh
  43317a:	inc    ebx
  43317b:	add    BYTE PTR [eax+0x4331],al
  433181:	add    BYTE PTR [eax],al
  433183:	add    BYTE PTR [eax],al
  433185:	add    BYTE PTR [eax],al
  433187:	add    BYTE PTR [eax+eax*1],al
  43318a:	add    BYTE PTR [eax],al
  43318c:	nop
  43318d:	xor    DWORD PTR [ebx+0x0],eax
  433190:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433191:	xor    DWORD PTR [ebx+0x0],eax
  433194:	shl    BYTE PTR [ecx],0x43
  433197:	add    ah,bh
  433199:	xor    DWORD PTR [ebx+0x0],eax
  43319c:	xor    al,0x32
  43319e:	inc    ebx
  43319f:	add    BYTE PTR [eax],al
  4331a1:	add    BYTE PTR [eax],al
  4331a3:	add    BYTE PTR [eax-0x20],dh
  4331a6:	inc    ebx
  4331a7:	add    BYTE PTR [ebx],al
  4331a9:	add    BYTE PTR [eax],al
  4331ab:	add    BYTE PTR [eax],al
  4331ad:	add    BYTE PTR [eax],al
  4331af:	add    bh,bh
  4331b1:	(bad)  
  4331b2:	(bad)  
  4331b3:	inc    DWORD PTR [eax]
  4331b5:	add    BYTE PTR [eax],al
  4331b7:	add    BYTE PTR [eax+0x0],al
  4331ba:	add    BYTE PTR [eax],al
  4331bc:	xor    BYTE PTR [ecx],0x43
  4331bf:	add    BYTE PTR [eax+eiz*8+0x20043],dl
  4331c6:	add    BYTE PTR [eax],al
  4331c8:	add    BYTE PTR [eax],al
  4331ca:	add    BYTE PTR [eax],al
  4331cc:	(bad)  
  4331cd:	(bad)  
  4331ce:	(bad)  
  4331cf:	inc    DWORD PTR [eax]
  4331d1:	add    BYTE PTR [eax],al
  4331d3:	add    BYTE PTR [eax+0x0],al
  4331d6:	add    BYTE PTR [eax],al
  4331d8:	fdiv   QWORD PTR [ecx]
  4331da:	inc    ebx
	...
  4331e3:	add    BYTE PTR [ebx],al
  4331e5:	add    BYTE PTR [eax],al
  4331e7:	add    ah,ch
  4331e9:	xor    DWORD PTR [ebx+0x0],eax
  4331ec:	shl    BYTE PTR [ecx],0x43
  4331ef:	add    ah,bh
  4331f1:	xor    DWORD PTR [ebx+0x0],eax
  4331f4:	xor    al,0x32
  4331f6:	inc    ebx
  4331f7:	add    BYTE PTR [eax],al
  4331f9:	add    BYTE PTR [eax],al
  4331fb:	add    BYTE PTR [eax+0x10043e0],bh
  433201:	add    BYTE PTR [eax],al
  433203:	add    BYTE PTR [eax],al
  433205:	add    BYTE PTR [eax],al
  433207:	add    bh,bh
  433209:	(bad)  
  43320a:	(bad)  
  43320b:	inc    DWORD PTR [eax]
  43320d:	add    BYTE PTR [eax],al
  43320f:	add    BYTE PTR [eax+0x0],al
  433212:	add    BYTE PTR [eax],al
  433214:	sbb    BYTE PTR [edx],dh
  433216:	inc    ebx
	...
  43321f:	add    BYTE PTR [edx],al
  433221:	add    BYTE PTR [eax],al
  433223:	add    BYTE PTR [eax],ch
  433225:	xor    al,BYTE PTR [ebx+0x0]
  433228:	cld    
  433229:	xor    DWORD PTR [ebx+0x0],eax
  43322c:	xor    al,0x32
  43322e:	inc    ebx
  43322f:	add    BYTE PTR [eax],al
  433231:	add    BYTE PTR [eax],al
  433233:	add    al,bl
  433235:	loopne 0x43327a
	...
  43323f:	add    bh,bh
  433241:	(bad)  
  433242:	(bad)  
  433243:	inc    DWORD PTR [eax]
  433245:	add    BYTE PTR [eax],al
  433247:	add    BYTE PTR [eax+0x0],al
  43324a:	add    BYTE PTR [eax],al
  43324c:	push   eax
  43324d:	xor    al,BYTE PTR [ebx+0x0]
	...
  433258:	add    DWORD PTR [eax],eax
  43325a:	add    BYTE PTR [eax],al
  43325c:	pusha  
  43325d:	xor    al,BYTE PTR [ebx+0x0]
  433260:	xor    al,0x32
  433262:	inc    ebx
	...
  433273:	add    al,bh
  433275:	loopne 0x4332ba
  433277:	add    BYTE PTR [edx+esi*1+0x43],bh
	...
  433283:	add    BYTE PTR [edx],al
  433285:	add    BYTE PTR [eax],al
  433287:	add    BYTE PTR [edx+esi*1+0x32980043],cl
  43328e:	inc    ebx
  43328f:	add    BYTE PTR [edx+esi*1],dh
  433292:	inc    ebx
  433293:	add    BYTE PTR [eax],al
  433295:	add    BYTE PTR [eax],al
  433297:	add    al,bh
  433299:	loopne 0x4332de
  43329b:	add    BYTE PTR [ecx],al
  43329d:	add    BYTE PTR [eax],al
  43329f:	add    BYTE PTR [eax],al
  4332a1:	add    BYTE PTR [eax],al
  4332a3:	add    bh,bh
  4332a5:	(bad)  
  4332a6:	(bad)  
  4332a7:	inc    DWORD PTR [eax]
  4332a9:	add    BYTE PTR [eax],al
  4332ab:	add    BYTE PTR [eax+0x0],al
  4332ae:	add    BYTE PTR [eax],al
  4332b0:	jl     0x4332e4
  4332b2:	inc    ebx
	...
  4332bf:	add    BYTE PTR [eax],ah
  4332c1:	loope  0x433306
  4332c3:	add    al,cl
  4332c5:	xor    al,BYTE PTR [ebx+0x0]
	...
  4332d0:	add    al,BYTE PTR [eax]
  4332d2:	add    BYTE PTR [eax],al
  4332d4:	fdiv   DWORD PTR [edx]
  4332d6:	inc    ebx
  4332d7:	add    ah,ah
  4332d9:	xor    al,BYTE PTR [ebx+0x0]
  4332dc:	sbb    al,0x45
  4332de:	inc    ebx
  4332df:	add    BYTE PTR [eax],al
  4332e1:	add    BYTE PTR [eax],al
  4332e3:	add    BYTE PTR [eax],ah
  4332e5:	loope  0x43332a
  4332e7:	add    BYTE PTR [ecx],al
  4332e9:	add    BYTE PTR [eax],al
  4332eb:	add    BYTE PTR [eax],al
  4332ed:	add    BYTE PTR [eax],al
  4332ef:	add    bh,bh
  4332f1:	(bad)  
  4332f2:	(bad)  
  4332f3:	inc    DWORD PTR [eax]
  4332f5:	add    BYTE PTR [eax],al
  4332f7:	add    BYTE PTR [eax+0x0],al
  4332fa:	add    BYTE PTR [eax],al
  4332fc:	enter  0x4332,0x0
	...
  43330c:	jl     0x4332ef
  43330e:	inc    ebx
  43330f:	add    BYTE PTR [ebx+esi*1],dl
  433312:	inc    ebx
	...
  43331b:	add    BYTE PTR [eax+eax*1],al
  43331e:	add    BYTE PTR [eax],al
  433320:	and    al,0x33
  433322:	inc    ebx
  433323:	add    BYTE PTR [eax],bh
  433325:	xor    eax,DWORD PTR [ebx+0x0]
  433328:	push   eax
  433329:	xor    DWORD PTR [ebx+0x0],eax
  43332c:	lods   al,BYTE PTR ds:[esi]
  43332d:	cmp    al,BYTE PTR [ebx+0x0]
  433330:	shl    BYTE PTR ds:0x43,0x0
  433337:	add    BYTE PTR [ecx+eiz*8+0x43],bh
  43333b:	add    BYTE PTR [ebx],al
  43333d:	add    BYTE PTR [eax],al
  43333f:	add    BYTE PTR [eax],al
  433341:	add    BYTE PTR [eax],al
  433343:	add    bh,bh
  433345:	(bad)  
  433346:	(bad)  
  433347:	inc    DWORD PTR [eax]
  433349:	add    BYTE PTR [eax],al
  43334b:	add    BYTE PTR [eax+0x0],al
  43334e:	add    BYTE PTR [eax],al
  433350:	adc    al,0x33
  433352:	inc    ebx
	...
  43335f:	add    BYTE PTR [ecx+eiz*8+0x33680043],dh
  433366:	inc    ebx
	...
  43336f:	add    BYTE PTR [edx],al
  433371:	add    BYTE PTR [eax],al
  433373:	add    BYTE PTR [eax+0x33],bh
  433376:	inc    ebx
  433377:	add    BYTE PTR [ebx+esi*1+0x33a00043],al
  43337e:	inc    ebx
  43337f:	add    BYTE PTR [eax],al
  433381:	add    BYTE PTR [eax],al
  433383:	add    BYTE PTR [ecx+eiz*8+0x10043],dh
  43338a:	add    BYTE PTR [eax],al
  43338c:	add    BYTE PTR [eax],al
  43338e:	add    BYTE PTR [eax],al
  433390:	(bad)  
  433391:	(bad)  
  433392:	(bad)  
  433393:	inc    DWORD PTR [eax]
  433395:	add    BYTE PTR [eax],al
  433397:	add    BYTE PTR [eax+0x0],al
  43339a:	add    BYTE PTR [eax],al
  43339c:	push   0xe0004333
  4333a1:	loope  0x4333e6
  4333a3:	add    BYTE PTR [eax],al
  4333a5:	add    BYTE PTR [eax],al
  4333a7:	add    BYTE PTR [eax+eax*1],al
  4333aa:	add    BYTE PTR [eax],al
  4333ac:	(bad)  
  4333ad:	(bad)  
  4333ae:	(bad)  
  4333af:	inc    DWORD PTR [eax]
  4333b1:	add    BYTE PTR [eax],al
  4333b3:	add    BYTE PTR [eax+0x0],al
  4333b6:	add    BYTE PTR [eax],al
  4333b8:	mov    esp,0x4333
  4333bd:	add    BYTE PTR [eax],al
  4333bf:	add    BYTE PTR [eax],al
  4333c1:	add    BYTE PTR [eax],al
  4333c3:	add    BYTE PTR [ecx],al
  4333c5:	add    BYTE PTR [eax],al
  4333c7:	add    ah,cl
  4333c9:	xor    eax,DWORD PTR [ebx+0x0]
  4333cc:	aam    0x33
  4333ce:	inc    ebx
  4333cf:	add    BYTE PTR [eax],al
  4333d1:	add    BYTE PTR [eax],al
  4333d3:	add    al,ah
  4333d5:	loope  0x43341a
	...
  4333df:	add    bh,bh
  4333e1:	(bad)  
  4333e2:	(bad)  
  4333e3:	inc    DWORD PTR [eax]
  4333e5:	add    BYTE PTR [eax],al
  4333e7:	add    BYTE PTR [eax+0x0],al
  4333ea:	add    BYTE PTR [eax],al
  4333ec:	mov    esp,0x4333
	...
  4333f9:	add    BYTE PTR [eax],al
  4333fb:	add    BYTE PTR [eax],dl
  4333fd:	loop   0x433442
  4333ff:	add    BYTE PTR [esp+esi*1],al
  433402:	inc    ebx
	...
  43340b:	add    BYTE PTR [ebx],al
  43340d:	add    BYTE PTR [eax],al
  43340f:	add    BYTE PTR [esp+esi*1],dl
  433412:	inc    ebx
  433413:	add    BYTE PTR [esp+esi*1],ah
  433416:	inc    ebx
  433417:	add    BYTE PTR [ebx+esi*1+0x33a00043],al
  43341e:	inc    ebx
  43341f:	add    BYTE PTR [eax],al
  433421:	add    BYTE PTR [eax],al
  433423:	add    BYTE PTR [eax],dl
  433425:	loop   0x43346a
  433427:	add    BYTE PTR [edx],al
  433429:	add    BYTE PTR [eax],al
  43342b:	add    BYTE PTR [eax],al
  43342d:	add    BYTE PTR [eax],al
  43342f:	add    bh,bh
  433431:	(bad)  
  433432:	(bad)  
  433433:	inc    DWORD PTR [eax]
  433435:	add    BYTE PTR [eax],al
  433437:	add    BYTE PTR [eax+0x0],al
  43343a:	add    BYTE PTR [eax],al
  43343c:	add    al,0x34
  43343e:	inc    ebx
	...
  43344b:	add    BYTE PTR [eax-0x1e],cl
  43344e:	inc    ebx
  43344f:	add    BYTE PTR [esp+esi*1+0x43],dl
	...
  43345b:	add    BYTE PTR [ebx],al
  43345d:	add    BYTE PTR [eax],al
  43345f:	add    BYTE PTR [esp+esi*1+0x43],ah
  433463:	add    BYTE PTR [esp+esi*1+0x43],dh
  433467:	add    BYTE PTR [ebx+esi*1+0x33a00043],al
  43346e:	inc    ebx
  43346f:	add    BYTE PTR [eax],al
  433471:	add    BYTE PTR [eax],al
  433473:	add    BYTE PTR [eax-0x1e],cl
  433476:	inc    ebx
  433477:	add    BYTE PTR [edx],al
  433479:	add    BYTE PTR [eax],al
  43347b:	add    BYTE PTR [eax],al
  43347d:	add    BYTE PTR [eax],al
  43347f:	add    bh,bh
  433481:	(bad)  
  433482:	(bad)  
  433483:	inc    DWORD PTR [eax]
  433485:	add    BYTE PTR [eax],al
  433487:	add    BYTE PTR [eax+0x0],al
  43348a:	add    BYTE PTR [eax],al
  43348c:	push   esp
  43348d:	xor    al,0x43
	...
  43349b:	add    BYTE PTR [edx+eiz*8+0x43],bh
  43349f:	add    BYTE PTR [esp+esi*1+0x43],ah
  4334a6:	add    BYTE PTR [eax],al
  4334a8:	add    BYTE PTR [eax],al
  4334aa:	add    BYTE PTR [eax],al
  4334ac:	add    eax,DWORD PTR [eax]
  4334ae:	add    BYTE PTR [eax],al
  4334b0:	mov    ah,0x34
  4334b2:	inc    ebx
  4334b3:	add    ah,al
  4334b5:	xor    al,0x43
  4334b7:	add    BYTE PTR [ebx+esi*1+0x33a00043],al
  4334be:	inc    ebx
  4334bf:	add    BYTE PTR [eax],al
  4334c1:	add    BYTE PTR [eax],al
  4334c3:	add    BYTE PTR [edx+eiz*8+0x43],bh
  4334c7:	add    BYTE PTR [edx],al
  4334c9:	add    BYTE PTR [eax],al
  4334cb:	add    BYTE PTR [eax],al
  4334cd:	add    BYTE PTR [eax],al
  4334cf:	add    bh,bh
  4334d1:	(bad)  
  4334d2:	(bad)  
  4334d3:	inc    DWORD PTR [eax]
  4334d5:	add    BYTE PTR [eax],al
  4334d7:	add    BYTE PTR [eax+0x0],al
  4334da:	add    BYTE PTR [eax],al
  4334dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4334dd:	xor    al,0x43
	...
  4334eb:	add    ah,ch
  4334ed:	loop   0x433532
  4334ef:	add    BYTE PTR [esi+esi*1+0x43],ch
	...
  4334fe:	add    BYTE PTR [eax],al
  433500:	pushf  
  433501:	jecxz  0x433546
  433503:	add    BYTE PTR [eax],cl
  433505:	xor    eax,0x43
  43350a:	add    BYTE PTR [eax],al
  43350c:	add    BYTE PTR [eax],al
  43350e:	add    BYTE PTR [eax],al
  433510:	add    eax,DWORD PTR [eax]
  433512:	add    BYTE PTR [eax],al
  433514:	sbb    BYTE PTR ds:0x35280043,dh
  43351a:	inc    ebx
  43351b:	add    BYTE PTR [ebp+esi*1+0x43],dh
  43351f:	add    al,al
  433521:	xor    eax,0x43
  433526:	add    BYTE PTR [eax],al
  433528:	pushf  
  433529:	jecxz  0x43356e
  43352b:	add    BYTE PTR [edx],al
  43352d:	add    BYTE PTR [eax],al
  43352f:	add    BYTE PTR [eax],al
  433531:	add    BYTE PTR [eax],al
  433533:	add    bh,bh
  433535:	(bad)  
  433536:	(bad)  
  433537:	inc    DWORD PTR [eax]
  433539:	add    BYTE PTR [eax],al
  43353b:	add    BYTE PTR [eax+0x0],al
  43353e:	add    BYTE PTR [eax],al
  433540:	or     BYTE PTR ds:0x43,dh
	...
  43354e:	add    BYTE PTR [eax],al
  433550:	jl     0x433535
  433552:	inc    ebx
  433553:	add    BYTE PTR [eax+0x35],bl
  433556:	inc    ebx
	...
  43355f:	add    BYTE PTR [edx],al
  433561:	add    BYTE PTR [eax],al
  433563:	add    BYTE PTR [eax+0x35],ch
  433566:	inc    ebx
  433567:	add    BYTE PTR [ebp+esi*1+0x43],dh
  43356b:	add    al,al
  43356d:	xor    eax,0x43
  433572:	add    BYTE PTR [eax],al
  433574:	jl     0x433559
  433576:	inc    ebx
  433577:	add    BYTE PTR [ecx],al
  433579:	add    BYTE PTR [eax],al
  43357b:	add    BYTE PTR [eax],al
  43357d:	add    BYTE PTR [eax],al
  43357f:	add    bh,bh
  433581:	(bad)  
  433582:	(bad)  
  433583:	inc    DWORD PTR [eax]
  433585:	add    BYTE PTR [eax],al
  433587:	add    BYTE PTR [eax+0x0],al
  43358a:	add    BYTE PTR [eax],al
  43358c:	pop    eax
  43358d:	xor    eax,0x43
	...
  43359a:	add    BYTE PTR [eax],al
  43359c:	mov    esp,0xa40043e3
  4335a1:	xor    eax,0x43
  4335a6:	add    BYTE PTR [eax],al
  4335a8:	add    BYTE PTR [eax],al
  4335aa:	add    BYTE PTR [eax],al
  4335ac:	add    al,BYTE PTR [eax]
  4335ae:	add    BYTE PTR [eax],al
  4335b0:	mov    ah,0x35
  4335b2:	inc    ebx
  4335b3:	add    ah,dh
  4335b5:	xor    eax,0x35c00043
  4335ba:	inc    ebx
  4335bb:	add    BYTE PTR [eax],al
  4335bd:	add    BYTE PTR [eax],al
  4335bf:	add    BYTE PTR [eax-0x1d],ah
  4335c2:	inc    ebx
	...
  4335cb:	add    bh,bh
  4335cd:	(bad)  
  4335ce:	(bad)  
  4335cf:	inc    DWORD PTR [eax]
  4335d1:	add    BYTE PTR [eax],al
  4335d3:	add    BYTE PTR [eax+0x0],al
  4335d6:	add    BYTE PTR [eax],al
  4335d8:	fdiv   QWORD PTR ds:0x43
  4335de:	add    BYTE PTR [eax],al
  4335e0:	add    BYTE PTR [eax],al
  4335e2:	add    BYTE PTR [eax],al
  4335e4:	add    DWORD PTR [eax],eax
  4335e6:	add    BYTE PTR [eax],al
  4335e8:	in     al,dx
  4335e9:	xor    eax,0x35c00043
  4335ee:	inc    ebx
  4335ef:	add    BYTE PTR [eax],al
  4335f1:	add    BYTE PTR [eax],al
  4335f3:	add    BYTE PTR [ebx+eiz*8+0x10043],bh
  4335fa:	add    BYTE PTR [eax],al
  4335fc:	add    BYTE PTR [eax],al
  4335fe:	add    BYTE PTR [eax],al
  433600:	(bad)  
  433601:	(bad)  
  433602:	(bad)  
  433603:	inc    DWORD PTR [eax]
  433605:	add    BYTE PTR [eax],al
  433607:	add    BYTE PTR [eax+0x0],al
  43360a:	add    BYTE PTR [eax],al
  43360c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43360d:	xor    eax,0x43
	...
  43361a:	add    BYTE PTR [eax],al
  43361c:	or     bl,ah
  43361e:	inc    ebx
  43361f:	add    BYTE PTR [esi+esi*1+0x43],dh
	...
  43362f:	add    BYTE PTR [eax-0x1d],al
  433632:	inc    ebx
  433633:	add    BYTE PTR [eax],bh
  433635:	ss inc ebx
	...
  43363f:	add    BYTE PTR [ebx],al
  433641:	add    BYTE PTR [eax],al
  433643:	add    BYTE PTR [eax+0x36],cl
  433646:	inc    ebx
  433647:	add    ah,al
  433649:	ss inc ebx
  43364b:	add    BYTE PTR [eax+0x36],bl
  43364e:	inc    ebx
  43364f:	add    BYTE PTR [eax+0x4336],dl
  433655:	add    BYTE PTR [eax],al
  433657:	add    BYTE PTR [eax],cl
  433659:	jecxz  0x43369e
  43365b:	add    BYTE PTR [ecx],al
  43365d:	add    BYTE PTR [eax],al
  43365f:	add    BYTE PTR [eax],al
  433661:	add    BYTE PTR [eax],al
  433663:	add    bh,bh
  433665:	(bad)  
  433666:	(bad)  
  433667:	inc    DWORD PTR [eax]
  433669:	add    BYTE PTR [eax],al
  43366b:	add    BYTE PTR [eax+0x0],al
  43366e:	add    BYTE PTR [eax],al
  433670:	je     0x4336a8
  433672:	inc    ebx
	...
  43367b:	add    BYTE PTR [edx],al
  43367d:	add    BYTE PTR [eax],al
  43367f:	add    BYTE PTR [esi+esi*1+0x36580043],al
  433686:	inc    ebx
  433687:	add    BYTE PTR [eax+0x4336],dl
  43368d:	add    BYTE PTR [eax],al
  43368f:	add    ah,ch
  433691:	loop   0x4336d6
	...
  43369b:	add    bh,bh
  43369d:	(bad)  
  43369e:	(bad)  
  43369f:	inc    DWORD PTR [eax]
  4336a1:	add    BYTE PTR [eax],al
  4336a3:	add    BYTE PTR [eax+0x0],al
  4336a6:	add    BYTE PTR [eax],al
  4336a8:	lods   al,BYTE PTR ds:[esi]
  4336a9:	ss inc ebx
	...
  4336b3:	add    BYTE PTR [ecx],al
  4336b5:	add    BYTE PTR [eax],al
  4336b7:	add    BYTE PTR [esi+esi*1+0x36900043],bh
  4336be:	inc    ebx
  4336bf:	add    BYTE PTR [eax],al
  4336c1:	add    BYTE PTR [eax],al
  4336c3:	add    BYTE PTR [eax-0x1d],al
  4336c6:	inc    ebx
  4336c7:	add    BYTE PTR [edx],al
  4336c9:	add    BYTE PTR [eax],al
  4336cb:	add    BYTE PTR [eax],al
  4336cd:	add    BYTE PTR [eax],al
  4336cf:	add    bh,bh
  4336d1:	(bad)  
  4336d2:	(bad)  
  4336d3:	inc    DWORD PTR [eax]
  4336d5:	add    BYTE PTR [eax],al
  4336d7:	add    BYTE PTR [eax+0x0],al
  4336da:	add    BYTE PTR [eax],al
  4336dc:	cmp    BYTE PTR [esi],dh
  4336de:	inc    ebx
  4336df:	add    BYTE PTR [eax],al
  4336e1:	add    BYTE PTR [eax],al
  4336e3:	add    BYTE PTR [eax+eax*1],ah
  4336e6:	add    BYTE PTR [eax],al
  4336e8:	add    BYTE PTR [eax],al
  4336ea:	add    BYTE PTR [eax],al
  4336ec:	sub    ah,ah
  4336ee:	inc    ebx
  4336ef:	add    BYTE PTR [edi+esi*1],bl
  4336f2:	inc    ebx
  4336f3:	add    BYTE PTR [eax],al
  4336f5:	add    BYTE PTR [eax],al
  4336f7:	add    BYTE PTR [eax],dl
  4336f9:	add    BYTE PTR [eax],al
  4336fb:	add    BYTE PTR [eax],al
  4336fd:	add    BYTE PTR [eax],al
  4336ff:	add    BYTE PTR [eax],ch
  433701:	in     al,0x43
  433703:	add    BYTE PTR [edi+esi*1],bl
  433706:	inc    ebx
	...
  433713:	add    BYTE PTR [eax],ch
  433715:	in     al,0x43
  433717:	add    BYTE PTR [edi+esi*1],bl
  43371a:	inc    ebx
  43371b:	add    BYTE PTR [eax],al
  43371d:	add    BYTE PTR [eax],al
  43371f:	add    BYTE PTR [ecx],al
  433721:	add    BYTE PTR [eax],al
  433723:	add    BYTE PTR [edi],al
  433725:	add    BYTE PTR [eax],al
  433727:	add    BYTE PTR [edi+esi*1],ch
  43372a:	inc    ebx
  43372b:	add    BYTE PTR [eax+0x37],ch
  43372e:	inc    ebx
  43372f:	add    al,dh
  433731:	aaa    
  433732:	inc    ebx
  433733:	add    BYTE PTR [eax+0x38],al
  433736:	inc    ebx
  433737:	add    BYTE PTR [eax+edi*1+0x35c00043],cl
  43373e:	inc    ebx
  43373f:	add    ah,dl
  433741:	aaa    
  433742:	inc    ebx
  433743:	add    BYTE PTR [edi+esi*1+0x43],cl
  433747:	add    BYTE PTR [eax],al
  433749:	add    BYTE PTR [eax],al
  43374b:	add    al,bh
  43374d:	jecxz  0x433792
  43374f:	add    BYTE PTR [eax],al
  433751:	add    BYTE PTR [eax],al
  433753:	add    BYTE PTR [eax+eax*1],ah
  433756:	add    BYTE PTR [eax],al
  433758:	(bad)  
  433759:	(bad)  
  43375a:	(bad)  
  43375b:	inc    DWORD PTR [eax]
  43375d:	add    BYTE PTR [eax],al
  43375f:	add    BYTE PTR [eax+0x0],al
  433762:	add    BYTE PTR [eax],al
  433764:	mov    esp,0x28004338
  433769:	in     al,0x43
  43376b:	add    BYTE PTR [esi],al
  43376d:	add    BYTE PTR [eax],al
  43376f:	add    BYTE PTR [eax],al
  433771:	add    BYTE PTR [eax],al
  433773:	add    bh,bh
  433775:	(bad)  
  433776:	(bad)  
  433777:	inc    DWORD PTR [eax]
  433779:	add    BYTE PTR [eax],al
  43377b:	add    BYTE PTR [eax+0x0],al
  43377e:	add    BYTE PTR [eax],al
  433780:	sbb    al,0x37
  433782:	inc    ebx
  433783:	add    BYTE PTR [eax],al
  433785:	add    BYTE PTR [eax],al
  433787:	add    BYTE PTR [eax],dl
  433789:	add    BYTE PTR [eax],al
  43378b:	add    BYTE PTR [eax],al
  43378d:	add    BYTE PTR [eax],al
  43378f:	add    BYTE PTR [eax-0x53ffbc1c],dh
  433795:	aaa    
  433796:	inc    ebx
	...
  4337a3:	add    BYTE PTR [eax-0x53ffbc1c],dh
  4337a9:	aaa    
  4337aa:	inc    ebx
  4337ab:	add    BYTE PTR [eax],al
  4337ad:	add    BYTE PTR [eax],al
  4337af:	add    BYTE PTR [ecx],al
  4337b1:	add    BYTE PTR [eax],al
  4337b3:	add    BYTE PTR ds:0xbc000000,al
  4337b9:	aaa    
  4337ba:	inc    ebx
  4337bb:	add    al,dh
  4337bd:	aaa    
  4337be:	inc    ebx
  4337bf:	add    BYTE PTR [eax+0x38],al
  4337c2:	inc    ebx
  4337c3:	add    BYTE PTR [eax+edi*1+0x35c00043],cl
  4337ca:	inc    ebx
  4337cb:	add    ah,dl
  4337cd:	aaa    
  4337ce:	inc    ebx
  4337cf:	add    BYTE PTR [eax],al
  4337d1:	add    BYTE PTR [eax],al
  4337d3:	add    al,bl
  4337d5:	jecxz  0x43381a
  4337d7:	add    BYTE PTR [eax],al
  4337d9:	add    BYTE PTR [eax],al
  4337db:	add    BYTE PTR [eax],dl
  4337dd:	add    BYTE PTR [eax],al
  4337df:	add    bh,bh
  4337e1:	(bad)  
  4337e2:	(bad)  
  4337e3:	inc    DWORD PTR [eax]
  4337e5:	add    BYTE PTR [eax],al
  4337e7:	add    BYTE PTR [eax+0x0],al
  4337ea:	add    BYTE PTR [eax],al
  4337ec:	add    al,0x39
  4337ee:	inc    ebx
  4337ef:	add    BYTE PTR [eax+0x40043e4],dh
  4337f5:	add    BYTE PTR [eax],al
  4337f7:	add    BYTE PTR [eax],al
  4337f9:	add    BYTE PTR [eax],al
  4337fb:	add    bh,bh
  4337fd:	(bad)  
  4337fe:	(bad)  
  4337ff:	inc    DWORD PTR [eax]
  433801:	add    BYTE PTR [eax],al
  433803:	add    BYTE PTR [eax+0x0],al
  433806:	add    BYTE PTR [eax],al
  433808:	lods   al,BYTE PTR ds:[esi]
  433809:	aaa    
  43380a:	inc    ebx
	...
  433817:	add    BYTE PTR [eiz*8+0x38200043],cl
  43381e:	inc    ebx
	...
  433827:	add    BYTE PTR [ebx],al
  433829:	add    BYTE PTR [eax],al
  43382b:	add    BYTE PTR [eax],dh
  43382d:	cmp    BYTE PTR [ebx+0x0],al
  433830:	inc    eax
  433831:	cmp    BYTE PTR [ebx+0x0],al
  433834:	mov    WORD PTR [eax],?
  433836:	inc    ebx
  433837:	add    al,al
  433839:	xor    eax,0x43
  43383e:	add    BYTE PTR [eax],al
  433840:	or     al,0xe5
  433842:	inc    ebx
  433843:	add    BYTE PTR [edx],al
  433845:	add    BYTE PTR [eax],al
  433847:	add    BYTE PTR [eax],al
  433849:	add    BYTE PTR [eax],al
  43384b:	add    bh,bh
  43384d:	(bad)  
  43384e:	(bad)  
  43384f:	inc    DWORD PTR [eax]
  433851:	add    BYTE PTR [eax],al
  433853:	add    BYTE PTR [eax+0x0],al
  433856:	add    BYTE PTR [eax],al
  433858:	and    BYTE PTR [eax],bh
  43385a:	inc    ebx
	...
  433867:	add    BYTE PTR [eax],bh
  433869:	in     eax,0x43
  43386b:	add    BYTE PTR [eax+0x38],dh
  43386e:	inc    ebx
	...
  433877:	add    BYTE PTR [edx],al
  433879:	add    BYTE PTR [eax],al
  43387b:	add    BYTE PTR [eax-0x73ffbcc8],al
  433881:	cmp    BYTE PTR [ebx+0x0],al
  433884:	shl    BYTE PTR ds:0x43,0x0
  43388b:	add    BYTE PTR [eax],bh
  43388d:	in     eax,0x43
  43388f:	add    BYTE PTR [ecx],al
  433891:	add    BYTE PTR [eax],al
  433893:	add    BYTE PTR [eax],al
  433895:	add    BYTE PTR [eax],al
  433897:	add    bh,bh
  433899:	(bad)  
  43389a:	(bad)  
  43389b:	inc    DWORD PTR [eax]
  43389d:	add    BYTE PTR [eax],al
  43389f:	add    BYTE PTR [eax+0x0],al
  4338a2:	add    BYTE PTR [eax],al
  4338a4:	jo     0x4338de
  4338a6:	inc    ebx
	...
  4338b3:	add    al,bh
  4338b5:	jecxz  0x4338fa
  4338b7:	add    BYTE PTR [eax+edi*1+0x43],bh
  4338be:	add    BYTE PTR [eax],al
  4338c0:	add    BYTE PTR [eax],al
  4338c2:	add    BYTE PTR [eax],al
  4338c4:	add    DWORD PTR [eax],eax
  4338c6:	add    BYTE PTR [eax],al
  4338c8:	int3   
  4338c9:	cmp    BYTE PTR [ebx+0x0],al
  4338cc:	aam    0x38
  4338ce:	inc    ebx
  4338cf:	add    BYTE PTR [eax],al
  4338d1:	add    BYTE PTR [eax],al
  4338d3:	add    al,bh
  4338d5:	jecxz  0x43391a
	...
  4338df:	add    bh,bh
  4338e1:	(bad)  
  4338e2:	(bad)  
  4338e3:	inc    DWORD PTR [eax]
  4338e5:	add    BYTE PTR [eax],al
  4338e7:	add    BYTE PTR [eax+0x0],al
  4338ea:	add    BYTE PTR [eax],al
  4338ec:	mov    esp,0x4338
	...
  4338f9:	add    BYTE PTR [eax],al
  4338fb:	add    al,bl
  4338fd:	jecxz  0x433942
  4338ff:	add    BYTE PTR [ecx+edi*1],al
  433902:	inc    ebx
	...
  43390b:	add    BYTE PTR [ecx],al
  43390d:	add    BYTE PTR [eax],al
  43390f:	add    BYTE PTR [ecx+edi*1],dl
  433912:	inc    ebx
  433913:	add    BYTE PTR [ecx+edi*1],bl
  433916:	inc    ebx
  433917:	add    BYTE PTR [eax],al
  433919:	add    BYTE PTR [eax],al
  43391b:	add    al,bl
  43391d:	jecxz  0x433962
	...
  433927:	add    bh,bh
  433929:	(bad)  
  43392a:	(bad)  
  43392b:	inc    DWORD PTR [eax]
  43392d:	add    BYTE PTR [eax],al
  43392f:	add    BYTE PTR [eax+0x0],al
  433932:	add    BYTE PTR [eax],al
  433934:	add    al,0x39
  433936:	inc    ebx
	...
  433943:	add    al,dh
  433945:	in     eax,0x43
  433947:	add    BYTE PTR [edx+edi*1+0x43],cl
	...
  433956:	add    BYTE PTR [eax],al
  433958:	shl    ch,1
  43395a:	inc    ebx
  43395b:	add    al,cl
  43395d:	cmp    al,BYTE PTR [ebx+0x0]
  433960:	add    BYTE PTR [eax],al
  433962:	add    BYTE PTR [eax],al
  433964:	cmp    al,0x0
  433966:	add    BYTE PTR [eax],al
  433968:	add    BYTE PTR [eax],al
  43396a:	add    BYTE PTR [eax],al
  43396c:	push   eax
  43396d:	out    0x43,al
  43396f:	add    BYTE PTR [ecx+edi*1+0x43],bl
  433976:	add    BYTE PTR [eax],al
  433978:	sub    BYTE PTR [eax],al
  43397a:	add    BYTE PTR [eax],al
  43397c:	add    BYTE PTR [eax],al
  43397e:	add    BYTE PTR [eax],al
  433980:	push   eax
  433981:	out    0x43,al
  433983:	add    BYTE PTR [ecx+edi*1+0x43],bl
	...
  433992:	add    BYTE PTR [eax],al
  433994:	push   eax
  433995:	out    0x43,al
  433997:	add    BYTE PTR [ecx+edi*1+0x43],bl
  43399e:	add    BYTE PTR [eax],al
  4339a0:	add    DWORD PTR [eax],eax
  4339a2:	add    BYTE PTR [eax],al
  4339a4:	pop    es
  4339a5:	add    BYTE PTR [eax],al
  4339a7:	add    BYTE PTR [ecx+edi*1+0x39e80043],ch
  4339ae:	inc    ebx
  4339af:	add    ah,ah
  4339b1:	cmp    al,BYTE PTR [ebx+0x0]
  4339b4:	jo     0x4339f0
  4339b6:	inc    ebx
  4339b7:	add    BYTE PTR [edx+edi*1+0x35c00043],ch
  4339be:	inc    ebx
  4339bf:	add    BYTE PTR [edx+edi*1+0x43],dl
  4339c3:	add    ah,cl
  4339c5:	cmp    DWORD PTR [ebx+0x0],eax
  4339c8:	add    BYTE PTR [eax],al
  4339ca:	add    BYTE PTR [eax],al
  4339cc:	clc    
  4339cd:	jecxz  0x433a12
  4339cf:	add    BYTE PTR [eax],al
  4339d1:	add    BYTE PTR [eax],al
  4339d3:	add    BYTE PTR [eax+eax*1],bh
  4339d6:	add    BYTE PTR [eax],al
  4339d8:	(bad)  
  4339d9:	(bad)  
  4339da:	(bad)  
  4339db:	inc    DWORD PTR [eax]
  4339dd:	add    BYTE PTR [eax],al
  4339df:	add    BYTE PTR [eax+0x0],al
  4339e2:	add    BYTE PTR [eax],al
  4339e4:	mov    esp,0x50004338
  4339e9:	out    0x43,al
  4339eb:	add    BYTE PTR [esi],al
  4339ed:	add    BYTE PTR [eax],al
  4339ef:	add    BYTE PTR [eax],al
  4339f1:	add    BYTE PTR [eax],al
  4339f3:	add    bh,bh
  4339f5:	(bad)  
  4339f6:	(bad)  
  4339f7:	inc    DWORD PTR [eax]
  4339f9:	add    BYTE PTR [eax],al
  4339fb:	add    BYTE PTR [eax+0x0],al
  4339fe:	add    BYTE PTR [eax],al
  433a00:	pushf  
  433a01:	cmp    DWORD PTR [ebx+0x0],eax
  433a04:	add    BYTE PTR [eax],al
  433a06:	add    BYTE PTR [eax],al
  433a08:	sub    BYTE PTR [eax],al
  433a0a:	add    BYTE PTR [eax],al
  433a0c:	add    BYTE PTR [eax],al
  433a0e:	add    BYTE PTR [eax],al
  433a10:	shl    dh,1
  433a12:	inc    ebx
  433a13:	add    BYTE PTR [edx+edi*1],ch
  433a16:	inc    ebx
	...
  433a23:	add    al,dl
  433a25:	out    0x43,al
  433a27:	add    BYTE PTR [edx+edi*1],ch
  433a2a:	inc    ebx
  433a2b:	add    BYTE PTR [eax],al
  433a2d:	add    BYTE PTR [eax],al
  433a2f:	add    BYTE PTR [ecx],al
  433a31:	add    BYTE PTR [eax],al
  433a33:	add    BYTE PTR ds:0x3c000000,al
  433a39:	cmp    al,BYTE PTR [ebx+0x0]
  433a3c:	in     al,0x3a
  433a3e:	inc    ebx
  433a3f:	add    BYTE PTR [eax+0x3a],dh
  433a42:	inc    ebx
  433a43:	add    BYTE PTR [edx+edi*1+0x35c00043],ch
  433a4a:	inc    ebx
  433a4b:	add    BYTE PTR [edx+edi*1+0x43],dl
  433a4f:	add    BYTE PTR [eax],al
  433a51:	add    BYTE PTR [eax],al
  433a53:	add    al,bl
  433a55:	jecxz  0x433a9a
  433a57:	add    BYTE PTR [eax],al
  433a59:	add    BYTE PTR [eax],al
  433a5b:	add    BYTE PTR [eax],ch
  433a5d:	add    BYTE PTR [eax],al
  433a5f:	add    bh,bh
  433a61:	(bad)  
  433a62:	(bad)  
  433a63:	inc    DWORD PTR [eax]
  433a65:	add    BYTE PTR [eax],al
  433a67:	add    BYTE PTR [eax+0x0],al
  433a6a:	add    BYTE PTR [eax],al
  433a6c:	add    al,0x39
  433a6e:	inc    ebx
  433a6f:	add    al,dh
  433a71:	in     eax,0x43
  433a73:	add    BYTE PTR [edx],al
  433a75:	add    BYTE PTR [eax],al
  433a77:	add    BYTE PTR [eax],al
  433a79:	add    BYTE PTR [eax],al
  433a7b:	add    bh,bh
  433a7d:	(bad)  
  433a7e:	(bad)  
  433a7f:	inc    DWORD PTR [eax]
  433a81:	add    BYTE PTR [eax],al
  433a83:	add    BYTE PTR [eax+0x0],al
  433a86:	add    BYTE PTR [eax],al
  433a88:	mov    WORD PTR [edx],?
  433a8a:	inc    ebx
	...
  433a93:	add    BYTE PTR [ebx],al
  433a95:	add    BYTE PTR [eax],al
  433a97:	add    BYTE PTR [edx+edi*1+0x3a700043],bl
  433a9e:	inc    ebx
  433a9f:	add    BYTE PTR [edx+edi*1+0x35c00043],ch
  433aa6:	inc    ebx
  433aa7:	add    BYTE PTR [eax],al
  433aa9:	add    BYTE PTR [eax],al
  433aab:	add    al,dl
  433aad:	in     eax,0x43
  433aaf:	add    BYTE PTR [ecx],al
  433ab1:	add    BYTE PTR [eax],al
  433ab3:	add    BYTE PTR [eax],al
  433ab5:	add    BYTE PTR [eax],al
  433ab7:	add    bh,bh
  433ab9:	(bad)  
  433aba:	(bad)  
  433abb:	inc    DWORD PTR [eax]
  433abd:	add    BYTE PTR [eax],al
  433abf:	add    BYTE PTR [eax+0x0],al
  433ac2:	add    BYTE PTR [eax],al
  433ac4:	enter  0x433a,0x0
	...
  433ad0:	add    al,BYTE PTR [eax]
  433ad2:	add    BYTE PTR [eax],al
  433ad4:	fdivr  DWORD PTR [edx]
  433ad6:	inc    ebx
  433ad7:	add    BYTE PTR [edx+edi*1+0x35c00043],ch
  433ade:	inc    ebx
  433adf:	add    BYTE PTR [eax],al
  433ae1:	add    BYTE PTR [eax],al
  433ae3:	add    al,dl
  433ae5:	out    0x43,al
  433ae7:	add    BYTE PTR [eax+eax*1],al
  433aea:	add    BYTE PTR [eax],al
  433aec:	add    BYTE PTR [eax],al
  433aee:	add    BYTE PTR [eax],al
  433af0:	(bad)  
  433af1:	(bad)  
  433af2:	(bad)  
  433af3:	inc    DWORD PTR [eax]
  433af5:	add    BYTE PTR [eax],al
  433af7:	add    BYTE PTR [eax+0x0],al
  433afa:	add    BYTE PTR [eax],al
  433afc:	sub    al,0x3a
  433afe:	inc    ebx
	...
  433b0b:	add    BYTE PTR [eax+0x140043e5],bl
  433b11:	cmp    eax,DWORD PTR [ebx+0x0]
	...
  433b1c:	add    eax,DWORD PTR [eax]
  433b1e:	add    BYTE PTR [eax],al
  433b20:	and    al,0x3b
  433b22:	inc    ebx
  433b23:	add    BYTE PTR [ebx+edi*1+0x43],ch
  433b27:	add    BYTE PTR [ebx+edi*1],dh
  433b2a:	inc    ebx
  433b2b:	add    BYTE PTR [ebx+edi*1+0x43],dh
  433b32:	add    BYTE PTR [eax],al
  433b34:	pusha  
  433b35:	in     eax,0x43
  433b37:	add    BYTE PTR [ecx],al
  433b39:	add    BYTE PTR [eax],al
  433b3b:	add    BYTE PTR [eax],al
  433b3d:	add    BYTE PTR [eax],al
  433b3f:	add    bh,bh
  433b41:	(bad)  
  433b42:	(bad)  
  433b43:	inc    DWORD PTR [eax]
  433b45:	add    BYTE PTR [eax],al
  433b47:	add    BYTE PTR [eax+0x0],al
  433b4a:	add    BYTE PTR [eax],al
  433b4c:	push   eax
  433b4d:	cmp    eax,DWORD PTR [ebx+0x0]
	...
  433b58:	add    al,BYTE PTR [eax]
  433b5a:	add    BYTE PTR [eax],al
  433b5c:	pusha  
  433b5d:	cmp    eax,DWORD PTR [ebx+0x0]
  433b60:	xor    al,0x3b
  433b62:	inc    ebx
  433b63:	add    BYTE PTR [ebx+edi*1+0x43],dh
  433b6a:	add    BYTE PTR [eax],al
  433b6c:	cwde   
  433b6d:	in     eax,0x43
  433b6f:	add    BYTE PTR [edx],al
  433b71:	add    BYTE PTR [eax],al
  433b73:	add    BYTE PTR [eax],al
  433b75:	add    BYTE PTR [eax],al
  433b77:	add    bh,bh
  433b79:	(bad)  
  433b7a:	(bad)  
  433b7b:	inc    DWORD PTR [eax]
  433b7d:	add    BYTE PTR [eax],al
  433b7f:	add    BYTE PTR [eax+0x0],al
  433b82:	add    BYTE PTR [eax],al
  433b84:	adc    al,0x3b
  433b86:	inc    ebx
	...
  433b93:	add    BYTE PTR [ebp+eiz*8+0x3b9c0043],bh
  433b9a:	inc    ebx
	...
  433ba3:	add    BYTE PTR [ecx],al
  433ba5:	add    BYTE PTR [eax],al
  433ba7:	add    BYTE PTR [ebx+edi*1+0x3bb40043],ch
  433bae:	inc    ebx
  433baf:	add    BYTE PTR [eax],al
  433bb1:	add    BYTE PTR [eax],al
  433bb3:	add    BYTE PTR [ebp+eiz*8+0x43],bh
  433bba:	add    BYTE PTR [eax],al
  433bbc:	add    BYTE PTR [eax],al
  433bbe:	add    BYTE PTR [eax],al
  433bc0:	(bad)  
  433bc1:	(bad)  
  433bc2:	(bad)  
  433bc3:	inc    DWORD PTR [eax]
  433bc5:	add    BYTE PTR [eax],al
  433bc7:	add    BYTE PTR [eax+0x0],al
  433bca:	add    BYTE PTR [eax],al
  433bcc:	pushf  
  433bcd:	cmp    eax,DWORD PTR [ebx+0x0]
  433bd0:	add    BYTE PTR [eax],al
  433bd2:	add    BYTE PTR [eax],al
  433bd4:	cmp    al,0x0
  433bd6:	add    BYTE PTR [eax],al
  433bd8:	add    BYTE PTR [eax],al
  433bda:	add    BYTE PTR [eax],al
  433bdc:	lock in eax,dx
  433bde:	inc    ebx
  433bdf:	add    BYTE PTR [esp+edi*1],cl
  433be2:	inc    ebx
  433be3:	add    BYTE PTR [eax],al
  433be5:	add    BYTE PTR [eax],al
  433be7:	add    BYTE PTR [eax],ch
  433be9:	add    BYTE PTR [eax],al
  433beb:	add    BYTE PTR [eax],al
  433bed:	add    BYTE PTR [eax],al
  433bef:	add    al,dh
  433bf1:	in     eax,dx
  433bf2:	inc    ebx
  433bf3:	add    BYTE PTR [esp+edi*1],cl
  433bf6:	inc    ebx
	...
  433c03:	add    al,dh
  433c05:	in     eax,dx
  433c06:	inc    ebx
  433c07:	add    BYTE PTR [esp+edi*1],cl
  433c0a:	inc    ebx
  433c0b:	add    BYTE PTR [eax],al
  433c0d:	add    BYTE PTR [eax],al
  433c0f:	add    BYTE PTR [ecx],al
  433c11:	add    BYTE PTR [eax],al
  433c13:	add    BYTE PTR [eax],cl
  433c15:	add    BYTE PTR [eax],al
  433c17:	add    BYTE PTR [esp+edi*1],bl
  433c1a:	inc    ebx
  433c1b:	add    BYTE PTR [eax+0x3c],al
  433c1e:	inc    ebx
  433c1f:	add    BYTE PTR [eax-0x23ffbcc4],dh
  433c25:	inc    eax
  433c26:	inc    ebx
  433c27:	add    BYTE PTR [eax],bh
  433c29:	inc    edx
  433c2a:	inc    ebx
  433c2b:	add    BYTE PTR [ebp+esi*1+0x43],dh
  433c2f:	add    al,al
  433c31:	xor    eax,0x3a540043
  433c36:	inc    ebx
  433c37:	add    ah,cl
  433c39:	cmp    DWORD PTR [ebx+0x0],eax
  433c3c:	add    BYTE PTR [eax],al
  433c3e:	add    BYTE PTR [eax],al
  433c40:	lock in eax,dx
  433c42:	inc    ebx
  433c43:	add    BYTE PTR [edi],al
  433c45:	add    BYTE PTR [eax],al
  433c47:	add    BYTE PTR [eax],al
  433c49:	add    BYTE PTR [eax],al
  433c4b:	add    bh,bh
  433c4d:	(bad)  
  433c4e:	(bad)  
  433c4f:	inc    DWORD PTR [eax]
  433c51:	add    BYTE PTR [eax],al
  433c53:	add    BYTE PTR [eax+0x0],al
  433c56:	add    BYTE PTR [eax],al
  433c58:	or     al,0x3c
  433c5a:	inc    ebx
  433c5b:	add    BYTE PTR [eax],al
  433c5d:	add    BYTE PTR [eax],al
  433c5f:	add    BYTE PTR [eax],ch
  433c61:	add    BYTE PTR [eax],al
  433c63:	add    BYTE PTR [eax],al
  433c65:	add    BYTE PTR [eax],al
  433c67:	add    BYTE PTR [eax-0x12],dh
  433c6a:	inc    ebx
  433c6b:	add    BYTE PTR [esp+edi*1+0x43],al
	...
  433c7a:	add    BYTE PTR [eax],al
  433c7c:	jo     0x433c6c
  433c7e:	inc    ebx
  433c7f:	add    BYTE PTR [esp+edi*1+0x43],al
  433c86:	add    BYTE PTR [eax],al
  433c88:	add    DWORD PTR [eax],eax
  433c8a:	add    BYTE PTR [eax],al
  433c8c:	push   es
  433c8d:	add    BYTE PTR [eax],al
  433c8f:	add    BYTE PTR [esp+edi*1+0x3cb00043],dl
  433c96:	inc    ebx
  433c97:	add    ah,bl
  433c99:	inc    eax
  433c9a:	inc    ebx
  433c9b:	add    BYTE PTR [eax],bh
  433c9d:	inc    edx
  433c9e:	inc    ebx
  433c9f:	add    BYTE PTR [ebp+esi*1+0x43],dh
  433ca3:	add    al,al
  433ca5:	xor    eax,0x3a540043
  433caa:	inc    ebx
  433cab:	add    BYTE PTR [eax],al
  433cad:	add    BYTE PTR [eax],al
  433caf:	add    BYTE PTR [eax-0x12],dh
  433cb2:	inc    ebx
  433cb3:	add    BYTE PTR ds:0x0,al
  433cb9:	add    BYTE PTR [eax],al
  433cbb:	add    bh,bh
  433cbd:	(bad)  
  433cbe:	(bad)  
  433cbf:	inc    DWORD PTR [eax]
  433cc1:	add    BYTE PTR [eax],al
  433cc3:	add    BYTE PTR [eax+0x0],al
  433cc6:	add    BYTE PTR [eax],al
  433cc8:	test   BYTE PTR [ebx+eax*2],bh
  433ccb:	add    BYTE PTR [eax],al
  433ccd:	add    BYTE PTR [eax],al
  433ccf:	add    BYTE PTR [eax+eax*1],bh
  433cd2:	add    BYTE PTR [eax],al
  433cd4:	add    BYTE PTR [eax],al
  433cd6:	add    BYTE PTR [eax],al
  433cd8:	lock in al,dx
  433cda:	inc    ebx
  433cdb:	add    BYTE PTR [eax],cl
  433cdd:	cmp    eax,0x43
  433ce2:	add    BYTE PTR [eax],al
  433ce4:	sub    BYTE PTR [eax],al
  433ce6:	add    BYTE PTR [eax],al
  433ce8:	add    BYTE PTR [eax],al
  433cea:	add    BYTE PTR [eax],al
  433cec:	lock in al,dx
  433cee:	inc    ebx
  433cef:	add    BYTE PTR [eax],cl
  433cf1:	cmp    eax,0x43
	...
  433cfe:	add    BYTE PTR [eax],al
  433d00:	lock in al,dx
  433d02:	inc    ebx
  433d03:	add    BYTE PTR [eax],cl
  433d05:	cmp    eax,0x43
  433d0a:	add    BYTE PTR [eax],al
  433d0c:	add    DWORD PTR [eax],eax
  433d0e:	add    BYTE PTR [eax],al
  433d10:	or     BYTE PTR [eax],al
  433d12:	add    BYTE PTR [eax],al
  433d14:	sbb    BYTE PTR ds:0x3d3c0043,bh
  433d1a:	inc    ebx
  433d1b:	add    BYTE PTR [ebp+edi*1+0x41300043],ch
  433d22:	inc    ebx
  433d23:	add    BYTE PTR [eax],bh
  433d25:	inc    edx
  433d26:	inc    ebx
  433d27:	add    BYTE PTR [ebp+esi*1+0x43],dh
  433d2b:	add    al,al
  433d2d:	xor    eax,0x3a540043
  433d32:	inc    ebx
  433d33:	add    ah,cl
  433d35:	cmp    DWORD PTR [ebx+0x0],eax
  433d38:	add    BYTE PTR [eax],al
  433d3a:	add    BYTE PTR [eax],al
  433d3c:	lock in al,dx
  433d3e:	inc    ebx
  433d3f:	add    BYTE PTR [edi],al
  433d41:	add    BYTE PTR [eax],al
  433d43:	add    BYTE PTR [eax],al
  433d45:	add    BYTE PTR [eax],al
  433d47:	add    bh,bh
  433d49:	(bad)  
  433d4a:	(bad)  
  433d4b:	inc    DWORD PTR [eax]
  433d4d:	add    BYTE PTR [eax],al
  433d4f:	add    BYTE PTR [eax+0x0],al
  433d52:	add    BYTE PTR [eax],al
  433d54:	or     BYTE PTR ds:0x43,bh
  433d5a:	add    BYTE PTR [eax],al
  433d5c:	sub    BYTE PTR [eax],al
  433d5e:	add    BYTE PTR [eax],al
  433d60:	add    BYTE PTR [eax],al
  433d62:	add    BYTE PTR [eax],al
  433d64:	jo     0x433d53
  433d66:	inc    ebx
  433d67:	add    BYTE PTR [eax+0x433d],al
	...
  433d75:	add    BYTE PTR [eax],al
  433d77:	add    BYTE PTR [eax-0x13],dh
  433d7a:	inc    ebx
  433d7b:	add    BYTE PTR [eax+0x433d],al
  433d81:	add    BYTE PTR [eax],al
  433d83:	add    BYTE PTR [ecx],al
  433d85:	add    BYTE PTR [eax],al
  433d87:	add    BYTE PTR [esi],al
  433d89:	add    BYTE PTR [eax],al
  433d8b:	add    BYTE PTR [eax-0x53ffbcc3],dl
  433d91:	cmp    eax,0x41300043
  433d96:	inc    ebx
  433d97:	add    BYTE PTR [eax],bh
  433d99:	inc    edx
  433d9a:	inc    ebx
  433d9b:	add    BYTE PTR [ebp+esi*1+0x43],dh
  433d9f:	add    al,al
  433da1:	xor    eax,0x3a540043
  433da6:	inc    ebx
  433da7:	add    BYTE PTR [eax],al
  433da9:	add    BYTE PTR [eax],al
  433dab:	add    BYTE PTR [eax-0x13],dh
  433dae:	inc    ebx
  433daf:	add    BYTE PTR ds:0x0,al
  433db5:	add    BYTE PTR [eax],al
  433db7:	add    bh,bh
  433db9:	(bad)  
  433dba:	(bad)  
  433dbb:	inc    DWORD PTR [eax]
  433dbd:	add    BYTE PTR [eax],al
  433dbf:	add    BYTE PTR [eax+0x0],al
  433dc2:	add    BYTE PTR [eax],al
  433dc4:	cmp    BYTE PTR ds:0x43,0x0
  433dcb:	add    BYTE PTR [eax+eax*1],ah
  433dce:	add    BYTE PTR [eax],al
  433dd0:	add    BYTE PTR [eax],al
  433dd2:	add    BYTE PTR [eax],al
  433dd4:	or     ah,ch
  433dd6:	inc    ebx
  433dd7:	add    BYTE PTR [esi+edi*1],al
  433dda:	inc    ebx
  433ddb:	add    BYTE PTR [eax],al
  433ddd:	add    BYTE PTR [eax],al
  433ddf:	add    BYTE PTR [eax],dl
  433de1:	add    BYTE PTR [eax],al
  433de3:	add    BYTE PTR [eax],al
  433de5:	add    BYTE PTR [eax],al
  433de7:	add    BYTE PTR [eax],cl
  433de9:	in     al,dx
  433dea:	inc    ebx
  433deb:	add    BYTE PTR [esi+edi*1],al
  433dee:	inc    ebx
	...
  433dfb:	add    BYTE PTR [eax],cl
  433dfd:	in     al,dx
  433dfe:	inc    ebx
  433dff:	add    BYTE PTR [esi+edi*1],al
  433e02:	inc    ebx
  433e03:	add    BYTE PTR [eax],al
  433e05:	add    BYTE PTR [eax],al
  433e07:	add    BYTE PTR [ecx],al
  433e09:	add    BYTE PTR [eax],al
  433e0b:	add    BYTE PTR [edi],al
  433e0d:	add    BYTE PTR [eax],al
  433e0f:	add    BYTE PTR [esi+edi*1],dl
  433e12:	inc    ebx
  433e13:	add    BYTE PTR [esi+edi*1],dh
  433e16:	inc    ebx
  433e17:	add    BYTE PTR [eax-0x2bffbcc2],ah
  433e1d:	inc    ecx
  433e1e:	inc    ebx
  433e1f:	add    BYTE PTR [eax+edi*1+0x35c00043],cl
  433e26:	inc    ebx
  433e27:	add    ah,dl
  433e29:	aaa    
  433e2a:	inc    ebx
  433e2b:	add    BYTE PTR [edi+esi*1+0x43],cl
  433e2f:	add    BYTE PTR [eax],al
  433e31:	add    BYTE PTR [eax],al
  433e33:	add    BYTE PTR [eax],cl
  433e35:	in     al,dx
  433e36:	inc    ebx
  433e37:	add    BYTE PTR [esi],al
  433e39:	add    BYTE PTR [eax],al
  433e3b:	add    BYTE PTR [eax],al
  433e3d:	add    BYTE PTR [eax],al
  433e3f:	add    bh,bh
  433e41:	(bad)  
  433e42:	(bad)  
  433e43:	inc    DWORD PTR [eax]
  433e45:	add    BYTE PTR [eax],al
  433e47:	add    BYTE PTR [eax+0x0],al
  433e4a:	add    BYTE PTR [eax],al
  433e4c:	add    al,0x3e
  433e4e:	inc    ebx
  433e4f:	add    BYTE PTR [eax],al
  433e51:	add    BYTE PTR [eax],al
  433e53:	add    BYTE PTR [eax],dl
  433e55:	add    BYTE PTR [eax],al
  433e57:	add    BYTE PTR [eax],al
  433e59:	add    BYTE PTR [eax],al
  433e5b:	add    BYTE PTR [eax+0x780043ec],al
  433e61:	ds inc ebx
	...
  433e6f:	add    BYTE PTR [eax+0x780043ec],al
  433e75:	ds inc ebx
  433e77:	add    BYTE PTR [eax],al
  433e79:	add    BYTE PTR [eax],al
  433e7b:	add    BYTE PTR [ecx],al
  433e7d:	add    BYTE PTR [eax],al
  433e7f:	add    BYTE PTR ds:0x88000000,al
  433e85:	ds inc ebx
  433e87:	add    BYTE PTR [eax-0x2bffbcc2],ah
  433e8d:	inc    ecx
  433e8e:	inc    ebx
  433e8f:	add    BYTE PTR [eax+edi*1+0x35c00043],cl
  433e96:	inc    ebx
  433e97:	add    ah,dl
  433e99:	aaa    
  433e9a:	inc    ebx
  433e9b:	add    BYTE PTR [eax],al
  433e9d:	add    BYTE PTR [eax],al
  433e9f:	add    BYTE PTR [eax+0x40043ec],al
  433ea5:	add    BYTE PTR [eax],al
  433ea7:	add    BYTE PTR [eax],al
  433ea9:	add    BYTE PTR [eax],al
  433eab:	add    bh,bh
  433ead:	(bad)  
  433eae:	(bad)  
  433eaf:	inc    DWORD PTR [eax]
  433eb1:	add    BYTE PTR [eax],al
  433eb3:	add    BYTE PTR [eax+0x0],al
  433eb6:	add    BYTE PTR [eax],al
  433eb8:	js     0x433ef8
  433eba:	inc    ebx
  433ebb:	add    BYTE PTR [eax],al
  433ebd:	add    BYTE PTR [eax],al
  433ebf:	add    BYTE PTR [eax+eax*1],bh
  433ec2:	add    BYTE PTR [eax],al
  433ec4:	add    BYTE PTR [eax],al
  433ec6:	add    BYTE PTR [eax],al
  433ec8:	lock jmp 0x43:0x3ef80043
  433ed0:	add    BYTE PTR [eax],al
  433ed2:	add    BYTE PTR [eax],al
  433ed4:	sub    BYTE PTR [eax],al
  433ed6:	add    BYTE PTR [eax],al
  433ed8:	add    BYTE PTR [eax],al
  433eda:	add    BYTE PTR [eax],al
  433edc:	lock jmp 0x43:0x3ef80043
	...
  433ef0:	lock jmp 0x43:0x3ef80043
  433ef8:	add    BYTE PTR [eax],al
  433efa:	add    BYTE PTR [eax],al
  433efc:	add    DWORD PTR [eax],eax
  433efe:	add    BYTE PTR [eax],al
  433f00:	or     BYTE PTR [eax],al
  433f02:	add    BYTE PTR [eax],al
  433f04:	or     BYTE PTR [edi],bh
  433f06:	inc    ebx
  433f07:	add    BYTE PTR [edi+edi*1],ch
  433f0a:	inc    ebx
  433f0b:	add    BYTE PTR [edi+edi*1+0x41840043],bl
  433f12:	inc    ebx
  433f13:	add    BYTE PTR [eax],bh
  433f15:	inc    edx
  433f16:	inc    ebx
  433f17:	add    BYTE PTR [ebp+esi*1+0x43],dh
  433f1b:	add    al,al
  433f1d:	xor    eax,0x3a540043
  433f22:	inc    ebx
  433f23:	add    ah,cl
  433f25:	cmp    DWORD PTR [ebx+0x0],eax
  433f28:	add    BYTE PTR [eax],al
  433f2a:	add    BYTE PTR [eax],al
  433f2c:	lock jmp 0x0:0x70043
  433f34:	add    BYTE PTR [eax],al
  433f36:	add    BYTE PTR [eax],al
  433f38:	(bad)  
  433f39:	(bad)  
  433f3a:	(bad)  
  433f3b:	inc    DWORD PTR [eax]
  433f3d:	add    BYTE PTR [eax],al
  433f3f:	add    BYTE PTR [eax+0x0],al
  433f42:	add    BYTE PTR [eax],al
  433f44:	clc    
  433f45:	ds inc ebx
  433f47:	add    BYTE PTR [eax],al
  433f49:	add    BYTE PTR [eax],al
  433f4b:	add    BYTE PTR [eax],ch
  433f4d:	add    BYTE PTR [eax],al
  433f4f:	add    BYTE PTR [eax],al
  433f51:	add    BYTE PTR [eax],al
  433f53:	add    BYTE PTR [eax-0x15],bh
  433f56:	inc    ebx
  433f57:	add    BYTE PTR [eax+0x3f],dh
  433f5a:	inc    ebx
	...
  433f67:	add    BYTE PTR [eax-0x15],bh
  433f6a:	inc    ebx
  433f6b:	add    BYTE PTR [eax+0x3f],dh
  433f6e:	inc    ebx
  433f6f:	add    BYTE PTR [eax],al
  433f71:	add    BYTE PTR [eax],al
  433f73:	add    BYTE PTR [ecx],al
  433f75:	add    BYTE PTR [eax],al
  433f77:	add    BYTE PTR [esi],al
  433f79:	add    BYTE PTR [eax],al
  433f7b:	add    BYTE PTR [eax-0x63ffbcc1],al
  433f81:	aas    
  433f82:	inc    ebx
  433f83:	add    BYTE PTR [ecx+eax*2+0x42380043],al
  433f8a:	inc    ebx
  433f8b:	add    BYTE PTR [ebp+esi*1+0x43],dh
  433f8f:	add    al,al
  433f91:	xor    eax,0x3a540043
  433f96:	inc    ebx
  433f97:	add    BYTE PTR [eax],al
  433f99:	add    BYTE PTR [eax],al
  433f9b:	add    BYTE PTR [eax-0x15],bh
  433f9e:	inc    ebx
  433f9f:	add    BYTE PTR ds:0x0,al
  433fa5:	add    BYTE PTR [eax],al
  433fa7:	add    bh,bh
  433fa9:	(bad)  
  433faa:	(bad)  
  433fab:	inc    DWORD PTR [eax]
  433fad:	add    BYTE PTR [eax],al
  433faf:	add    BYTE PTR [eax+0x0],al
  433fb2:	add    BYTE PTR [eax],al
  433fb4:	jo     0x433ff5
  433fb6:	inc    ebx
  433fb7:	add    BYTE PTR [eax],al
  433fb9:	add    BYTE PTR [eax],al
  433fbb:	add    BYTE PTR [eax+eax*1],bh
  433fbe:	add    BYTE PTR [eax],al
  433fc0:	add    BYTE PTR [eax],al
  433fc2:	add    BYTE PTR [eax],al
  433fc4:	sub    dl,ch
  433fc6:	inc    ebx
  433fc7:	add    ah,dh
  433fc9:	aas    
  433fca:	inc    ebx
  433fcb:	add    BYTE PTR [eax],al
  433fcd:	add    BYTE PTR [eax],al
  433fcf:	add    BYTE PTR [eax],ch
  433fd1:	add    BYTE PTR [eax],al
  433fd3:	add    BYTE PTR [eax],al
  433fd5:	add    BYTE PTR [eax],al
  433fd7:	add    BYTE PTR [eax],ch
  433fd9:	jmp    0x43:0x3ff40043
	...
  433fec:	sub    dl,ch
  433fee:	inc    ebx
  433fef:	add    ah,dh
  433ff1:	aas    
  433ff2:	inc    ebx
  433ff3:	add    BYTE PTR [eax],al
  433ff5:	add    BYTE PTR [eax],al
  433ff7:	add    BYTE PTR [ecx],al
  433ff9:	add    BYTE PTR [eax],al
  433ffb:	add    BYTE PTR [esi],al
  433ffd:	add    BYTE PTR [eax],al
  433fff:	add    BYTE PTR [eax+eax*2],al
  434002:	inc    ebx
  434003:	add    BYTE PTR [eax],ah
  434005:	inc    eax
  434006:	inc    ebx
  434007:	add    BYTE PTR [eax-0x53ffbcc0],cl
  43400d:	cmp    al,BYTE PTR [ebx+0x0]
  434010:	shl    BYTE PTR ds:0x3a540043,0x43
  434017:	add    ah,cl
  434019:	cmp    DWORD PTR [ebx+0x0],eax
  43401c:	add    BYTE PTR [eax],al
  43401e:	add    BYTE PTR [eax],al
  434020:	sub    dl,ch
  434022:	inc    ebx
  434023:	add    BYTE PTR ds:0x0,al
  434029:	add    BYTE PTR [eax],al
  43402b:	add    bh,bh
  43402d:	(bad)  
  43402e:	(bad)  
  43402f:	inc    DWORD PTR [eax]
  434031:	add    BYTE PTR [eax],al
  434033:	add    BYTE PTR [eax+0x0],al
  434036:	add    BYTE PTR [eax],al
  434038:	hlt    
  434039:	aas    
  43403a:	inc    ebx
  43403b:	add    BYTE PTR [eax],al
  43403d:	add    BYTE PTR [eax],al
  43403f:	add    BYTE PTR [eax],ch
  434041:	add    BYTE PTR [eax],al
  434043:	add    BYTE PTR [eax],al
  434045:	add    BYTE PTR [eax],al
  434047:	add    BYTE PTR [eax+0x640043ea],ah
  43404d:	inc    eax
  43404e:	inc    ebx
	...
  43405b:	add    BYTE PTR [eax+0x640043ea],ah
  434061:	inc    eax
  434062:	inc    ebx
  434063:	add    BYTE PTR [eax],al
  434065:	add    BYTE PTR [eax],al
  434067:	add    BYTE PTR [ecx],al
  434069:	add    BYTE PTR [eax],al
  43406b:	add    BYTE PTR [eax+eax*1],al
  43406e:	add    BYTE PTR [eax],al
  434070:	je     0x4340b2
  434072:	inc    ebx
  434073:	add    BYTE PTR [eax-0x53ffbcc0],cl
  434079:	cmp    al,BYTE PTR [ebx+0x0]
  43407c:	shl    BYTE PTR ds:0x3a540043,0x43
  434083:	add    BYTE PTR [eax],al
  434085:	add    BYTE PTR [eax],al
  434087:	add    BYTE PTR [eax+0x30043ea],ah
  43408d:	add    BYTE PTR [eax],al
  43408f:	add    BYTE PTR [eax],al
  434091:	add    BYTE PTR [eax],al
  434093:	add    bh,bh
  434095:	(bad)  
  434096:	(bad)  
  434097:	inc    DWORD PTR [eax]
  434099:	add    BYTE PTR [eax],al
  43409b:	add    BYTE PTR [eax+0x0],al
  43409e:	add    BYTE PTR [eax],al
  4340a0:	fs inc eax
  4340a2:	inc    ebx
	...
  4340af:	add    al,cl
  4340b1:	out    dx,al
  4340b2:	inc    ebx
  4340b3:	add    BYTE PTR [eax+0x4340],bh
  4340b9:	add    BYTE PTR [eax],al
  4340bb:	add    BYTE PTR [eax],al
  4340bd:	add    BYTE PTR [eax],al
  4340bf:	add    BYTE PTR [eax+eax*1],al
  4340c2:	add    BYTE PTR [eax],al
  4340c4:	enter  0x4340,0x0
  4340c8:	fadd   QWORD PTR [eax+0x43]
  4340cb:	add    BYTE PTR [eax],bh
  4340cd:	inc    edx
  4340ce:	inc    ebx
  4340cf:	add    BYTE PTR [ebp+esi*1+0x43],dh
  4340d3:	add    al,al
  4340d5:	xor    eax,0x43
  4340da:	add    BYTE PTR [eax],al
  4340dc:	enter  0x43ee,0x0
  4340e0:	add    eax,DWORD PTR [eax]
  4340e2:	add    BYTE PTR [eax],al
  4340e4:	add    BYTE PTR [eax],al
  4340e6:	add    BYTE PTR [eax],al
  4340e8:	(bad)  
  4340e9:	(bad)  
  4340ea:	(bad)  
  4340eb:	inc    DWORD PTR [eax]
  4340ed:	add    BYTE PTR [eax],al
  4340ef:	add    BYTE PTR [eax+0x0],al
  4340f2:	add    BYTE PTR [eax],al
  4340f4:	mov    eax,0x4340
	...
  434101:	add    BYTE PTR [eax],al
  434103:	add    al,cl
  434105:	in     eax,dx
  434106:	inc    ebx
  434107:	add    BYTE PTR [ecx+eax*2],cl
  43410a:	inc    ebx
	...
  434113:	add    BYTE PTR [eax+eax*1],al
  434116:	add    BYTE PTR [eax],al
  434118:	sbb    al,0x41
  43411a:	inc    ebx
  43411b:	add    BYTE PTR [eax],dh
  43411d:	inc    ecx
  43411e:	inc    ebx
  43411f:	add    BYTE PTR [eax],bh
  434121:	inc    edx
  434122:	inc    ebx
  434123:	add    BYTE PTR [ebp+esi*1+0x43],dh
  434127:	add    al,al
  434129:	xor    eax,0x43
  43412e:	add    BYTE PTR [eax],al
  434130:	enter  0x43ed,0x0
  434134:	add    eax,DWORD PTR [eax]
  434136:	add    BYTE PTR [eax],al
  434138:	add    BYTE PTR [eax],al
  43413a:	add    BYTE PTR [eax],al
  43413c:	(bad)  
  43413d:	(bad)  
  43413e:	(bad)  
  43413f:	inc    DWORD PTR [eax]
  434141:	add    BYTE PTR [eax],al
  434143:	add    BYTE PTR [eax+0x0],al
  434146:	add    BYTE PTR [eax],al
  434148:	or     al,0x41
  43414a:	inc    ebx
	...
  434157:	add    al,bl
  434159:	jmp    0x43419e
  43415b:	add    BYTE PTR [eax+0x41],ah
  43415e:	inc    ebx
	...
  434167:	add    BYTE PTR [eax+eax*1],al
  43416a:	add    BYTE PTR [eax],al
  43416c:	jo     0x4341af
  43416e:	inc    ebx
  43416f:	add    BYTE PTR [ecx+eax*2+0x42380043],al
  434176:	inc    ebx
  434177:	add    BYTE PTR [ebp+esi*1+0x43],dh
  43417b:	add    al,al
  43417d:	xor    eax,0x43
  434182:	add    BYTE PTR [eax],al
  434184:	fsubr  st,st(3)
  434186:	inc    ebx
  434187:	add    BYTE PTR [ebx],al
  434189:	add    BYTE PTR [eax],al
  43418b:	add    BYTE PTR [eax],al
  43418d:	add    BYTE PTR [eax],al
  43418f:	add    bh,bh
  434191:	(bad)  
  434192:	(bad)  
  434193:	inc    DWORD PTR [eax]
  434195:	add    BYTE PTR [eax],al
  434197:	add    BYTE PTR [eax+0x0],al
  43419a:	add    BYTE PTR [eax],al
  43419c:	pusha  
  43419d:	inc    ecx
  43419e:	inc    ebx
	...
  4341ab:	add    al,dl
  4341ad:	in     al,dx
  4341ae:	inc    ebx
  4341af:	add    BYTE PTR [ecx+eax*2+0x43],dh
  4341b6:	add    BYTE PTR [eax],al
  4341b8:	add    BYTE PTR [eax],al
  4341ba:	add    BYTE PTR [eax],al
  4341bc:	add    eax,DWORD PTR [eax]
  4341be:	add    BYTE PTR [eax],al
  4341c0:	les    eax,FWORD PTR [ecx+0x43]
  4341c3:	add    ah,dl
  4341c5:	inc    ecx
  4341c6:	inc    ebx
  4341c7:	add    BYTE PTR [eax+edi*1+0x35c00043],cl
  4341ce:	inc    ebx
  4341cf:	add    BYTE PTR [eax],al
  4341d1:	add    BYTE PTR [eax],al
  4341d3:	add    al,dl
  4341d5:	in     al,dx
  4341d6:	inc    ebx
  4341d7:	add    BYTE PTR [edx],al
  4341d9:	add    BYTE PTR [eax],al
  4341db:	add    BYTE PTR [eax],al
  4341dd:	add    BYTE PTR [eax],al
  4341df:	add    bh,bh
  4341e1:	(bad)  
  4341e2:	(bad)  
  4341e3:	inc    DWORD PTR [eax]
  4341e5:	add    BYTE PTR [eax],al
  4341e7:	add    BYTE PTR [eax+0x0],al
  4341ea:	add    BYTE PTR [eax],al
  4341ec:	mov    ah,0x41
  4341ee:	inc    ebx
	...
  4341fb:	add    BYTE PTR [edi+eiz*8+0x43],al
  4341ff:	add    BYTE PTR [eax+0x4343],al
	...
  43420d:	add    BYTE PTR [eax],al
  43420f:	add    BYTE PTR [eax],cl
  434211:	jmp    0x43:0x42180043
	...
  434220:	add    eax,DWORD PTR [eax]
  434222:	add    BYTE PTR [eax],al
  434224:	sub    BYTE PTR [edx+0x43],al
  434227:	add    BYTE PTR [eax],bh
  434229:	inc    edx
  43422a:	inc    ebx
  43422b:	add    BYTE PTR [ebp+esi*1+0x43],dh
  43422f:	add    al,al
  434231:	xor    eax,0x43
  434236:	add    BYTE PTR [eax],al
  434238:	or     dl,ch
  43423a:	inc    ebx
  43423b:	add    BYTE PTR [edx],al
  43423d:	add    BYTE PTR [eax],al
  43423f:	add    BYTE PTR [eax],al
  434241:	add    BYTE PTR [eax],al
  434243:	add    bh,bh
  434245:	(bad)  
  434246:	(bad)  
  434247:	inc    DWORD PTR [eax]
  434249:	add    BYTE PTR [eax],al
  43424b:	add    BYTE PTR [eax+0x0],al
  43424e:	add    BYTE PTR [eax],al
  434250:	sbb    BYTE PTR [edx+0x43],al
  434253:	add    BYTE PTR [eax],al
  434255:	add    BYTE PTR [eax],al
  434257:	add    BYTE PTR [eax],ch
  434259:	add    BYTE PTR [eax],al
  43425b:	add    BYTE PTR [eax],al
  43425d:	add    BYTE PTR [eax],al
  43425f:	add    al,cl
  434261:	out    0x43,eax
  434263:	add    BYTE PTR [eax+0x4342],dl
  434269:	add    BYTE PTR [eax],al
  43426b:	add    BYTE PTR [eax+eax*1],dl
  43426e:	add    BYTE PTR [eax],al
  434270:	add    BYTE PTR [eax],al
  434272:	add    BYTE PTR [eax],al
  434274:	enter  0x43e7,0x0
  434278:	nop
  434279:	inc    edx
  43427a:	inc    ebx
	...
  434287:	add    al,cl
  434289:	out    0x43,eax
  43428b:	add    BYTE PTR [eax+0x4342],dl
  434291:	add    BYTE PTR [eax],al
  434293:	add    BYTE PTR [ecx],al
  434295:	add    BYTE PTR [eax],al
  434297:	add    BYTE PTR [edi],al
  434299:	add    BYTE PTR [eax],al
  43429b:	add    BYTE PTR [eax-0x23ffbcbe],ah
  4342a1:	inc    edx
  4342a2:	inc    ebx
  4342a3:	add    al,bl
  4342a5:	inc    ebx
  4342a6:	inc    ebx
  4342a7:	add    BYTE PTR [ebx+eax*2+0x43],ah
  4342ab:	add    BYTE PTR [eax-0x3fffbcbd],ah
  4342b1:	xor    eax,0x43480043
  4342b6:	inc    ebx
  4342b7:	add    al,al
  4342b9:	inc    edx
  4342ba:	inc    ebx
  4342bb:	add    BYTE PTR [eax],al
  4342bd:	add    BYTE PTR [eax],al
  4342bf:	add    al,bh
  4342c1:	jecxz  0x434306
  4342c3:	add    BYTE PTR [eax],al
  4342c5:	add    BYTE PTR [eax],al
  4342c7:	add    BYTE PTR [eax],ch
  4342c9:	add    BYTE PTR [eax],al
  4342cb:	add    bh,bh
  4342cd:	(bad)  
  4342ce:	(bad)  
  4342cf:	inc    DWORD PTR [eax]
  4342d1:	add    BYTE PTR [eax],al
  4342d3:	add    BYTE PTR [eax+0x0],al
  4342d6:	add    BYTE PTR [eax],al
  4342d8:	mov    esp,0xc8004338
  4342dd:	out    0x43,eax
  4342df:	add    BYTE PTR [esi],al
  4342e1:	add    BYTE PTR [eax],al
  4342e3:	add    BYTE PTR [eax],al
  4342e5:	add    BYTE PTR [eax],al
  4342e7:	add    bh,bh
  4342e9:	(bad)  
  4342ea:	(bad)  
  4342eb:	inc    DWORD PTR [eax]
  4342ed:	add    BYTE PTR [eax],al
  4342ef:	add    BYTE PTR [eax+0x0],al
  4342f2:	add    BYTE PTR [eax],al
  4342f4:	nop
  4342f5:	inc    edx
  4342f6:	inc    ebx
  4342f7:	add    BYTE PTR [eax],al
  4342f9:	add    BYTE PTR [eax],al
  4342fb:	add    BYTE PTR [eax+eax*1],dl
  4342fe:	add    BYTE PTR [eax],al
  434300:	add    BYTE PTR [eax],al
  434302:	add    BYTE PTR [eax],al
  434304:	dec    eax
  434305:	call   0x4363434d
  43430a:	inc    ebx
	...
  434317:	add    BYTE PTR [eax-0x18],cl
  43431a:	inc    ebx
  43431b:	add    BYTE PTR [eax],ah
  43431d:	inc    ebx
  43431e:	inc    ebx
  43431f:	add    BYTE PTR [eax],al
  434321:	add    BYTE PTR [eax],al
  434323:	add    BYTE PTR [ecx],al
  434325:	add    BYTE PTR [eax],al
  434327:	add    BYTE PTR ds:0x30000000,al
  43432d:	inc    ebx
  43432e:	inc    ebx
  43432f:	add    al,bl
  434331:	inc    ebx
  434332:	inc    ebx
  434333:	add    BYTE PTR [ebx+eax*2+0x43],ah
  434337:	add    BYTE PTR [eax-0x3fffbcbd],ah
  43433d:	xor    eax,0x43480043
  434342:	inc    ebx
  434343:	add    BYTE PTR [eax],al
  434345:	add    BYTE PTR [eax],al
  434347:	add    al,bl
  434349:	jecxz  0x43438e
  43434b:	add    BYTE PTR [eax],al
  43434d:	add    BYTE PTR [eax],al
  43434f:	add    BYTE PTR [eax+eax*1],dl
  434352:	add    BYTE PTR [eax],al
  434354:	(bad)  
  434355:	(bad)  
  434356:	(bad)  
  434357:	inc    DWORD PTR [eax]
  434359:	add    BYTE PTR [eax],al
  43435b:	add    BYTE PTR [eax+0x0],al
  43435e:	add    BYTE PTR [eax],al
  434360:	add    al,0x39
  434362:	inc    ebx
  434363:	add    BYTE PTR [edi+eiz*8+0x43],al
  434367:	add    BYTE PTR [edx],al
  434369:	add    BYTE PTR [eax],al
  43436b:	add    BYTE PTR [eax],al
  43436d:	add    BYTE PTR [eax],al
  43436f:	add    bh,bh
  434371:	(bad)  
  434372:	(bad)  
  434373:	inc    DWORD PTR [eax]
  434375:	add    BYTE PTR [eax],al
  434377:	add    BYTE PTR [eax+0x0],al
  43437a:	add    BYTE PTR [eax],al
  43437c:	add    BYTE PTR [ebx+0x43],0x0
	...
  434388:	add    eax,DWORD PTR [eax]
  43438a:	add    BYTE PTR [eax],al
  43438c:	nop
  43438d:	inc    ebx
  43438e:	inc    ebx
  43438f:	add    BYTE PTR [ebx+eax*2+0x43],ah
  434393:	add    BYTE PTR [eax-0x3fffbcbd],ah
  434399:	xor    eax,0x43
  43439e:	add    BYTE PTR [eax],al
  4343a0:	sub    bh,ah
  4343a2:	inc    ebx
  4343a3:	add    BYTE PTR [ecx],al
  4343a5:	add    BYTE PTR [eax],al
  4343a7:	add    BYTE PTR [eax],al
  4343a9:	add    BYTE PTR [eax],al
  4343ab:	add    bh,bh
  4343ad:	(bad)  
  4343ae:	(bad)  
  4343af:	inc    DWORD PTR [eax]
  4343b1:	add    BYTE PTR [eax],al
  4343b3:	add    BYTE PTR [eax+0x0],al
  4343b6:	add    BYTE PTR [eax],al
  4343b8:	mov    esp,0x4343
  4343bd:	add    BYTE PTR [eax],al
  4343bf:	add    BYTE PTR [eax],al
  4343c1:	add    BYTE PTR [eax],al
  4343c3:	add    BYTE PTR [edx],al
  4343c5:	add    BYTE PTR [eax],al
  4343c7:	add    ah,cl
  4343c9:	inc    ebx
  4343ca:	inc    ebx
  4343cb:	add    BYTE PTR [eax-0x3fffbcbd],ah
  4343d1:	xor    eax,0x43
  4343d6:	add    BYTE PTR [eax],al
  4343d8:	dec    eax
  4343d9:	call   0x474421
  4343de:	add    BYTE PTR [eax],al
  4343e0:	add    BYTE PTR [eax],al
  4343e2:	add    BYTE PTR [eax],al
  4343e4:	(bad)  
  4343e5:	(bad)  
  4343e6:	(bad)  
  4343e7:	inc    DWORD PTR [eax]
  4343e9:	add    BYTE PTR [eax],al
  4343eb:	add    BYTE PTR [eax+0x0],al
  4343ee:	add    BYTE PTR [eax],al
  4343f0:	and    BYTE PTR [ebx+0x43],al
	...
  4343ff:	add    BYTE PTR [edx+esi*8],ch
  434402:	inc    ebx
  434403:	add    BYTE PTR [eax],cl
  434405:	inc    esp
  434406:	inc    ebx
	...
  43440f:	add    BYTE PTR [edx],al
  434411:	add    BYTE PTR [eax],al
  434413:	add    BYTE PTR [eax],bl
  434415:	inc    esp
  434416:	inc    ebx
  434417:	add    BYTE PTR [esp+eax*2],ah
  43441a:	inc    ebx
  43441b:	add    al,al
  43441d:	xor    eax,0x43
  434422:	add    BYTE PTR [eax],al
  434424:	sub    al,0xf2
  434426:	inc    ebx
  434427:	add    BYTE PTR [ecx],al
  434429:	add    BYTE PTR [eax],al
  43442b:	add    BYTE PTR [eax],al
  43442d:	add    BYTE PTR [eax],al
  43442f:	add    bh,bh
  434431:	(bad)  
  434432:	(bad)  
  434433:	inc    DWORD PTR [eax]
  434435:	add    BYTE PTR [eax],al
  434437:	add    BYTE PTR [eax+0x0],al
  43443a:	add    BYTE PTR [eax],al
  43443c:	or     BYTE PTR [ebx+eax*2+0x0],al
	...
  43444c:	enter  0x43f0,0x0
  434450:	cmp    BYTE PTR [ebp+0x43],al
	...
  43445f:	add    BYTE PTR [eax],ah
  434461:	lock inc ebx
  434463:	add    BYTE PTR [eax+0x44],ch
  434466:	inc    ebx
	...
  43446f:	add    BYTE PTR [edx],al
  434471:	add    BYTE PTR [eax],al
  434473:	add    BYTE PTR [eax+0x44],bh
  434476:	inc    ebx
  434477:	add    BYTE PTR [esp+eax*2+0x451c0043],al
  43447e:	inc    ebx
  43447f:	add    BYTE PTR [eax],al
  434481:	add    BYTE PTR [eax],al
  434483:	add    BYTE PTR [eax],ah
  434485:	lock inc ebx
  434487:	add    BYTE PTR [ecx],al
  434489:	add    BYTE PTR [eax],al
  43448b:	add    BYTE PTR [eax],al
  43448d:	add    BYTE PTR [eax],al
  43448f:	add    bh,bh
  434491:	(bad)  
  434492:	(bad)  
  434493:	inc    DWORD PTR [eax]
  434495:	add    BYTE PTR [eax],al
  434497:	add    BYTE PTR [eax+0x0],al
  43449a:	add    BYTE PTR [eax],al
  43449c:	push   0x4344
	...
  4344a9:	add    BYTE PTR [eax],al
  4344ab:	add    BYTE PTR [eax-0x10],ch
  4344ae:	inc    ebx
  4344af:	add    BYTE PTR [esp+eax*2+0x43],dh
  4344b6:	add    BYTE PTR [eax],al
  4344b8:	add    BYTE PTR [eax],al
  4344ba:	add    BYTE PTR [eax],al
  4344bc:	add    al,BYTE PTR [eax]
  4344be:	add    BYTE PTR [eax],al
  4344c0:	les    eax,FWORD PTR [ebx+eax*2+0x0]
  4344c4:	rol    BYTE PTR [ebx+eax*2+0x0],1
  4344c8:	sbb    al,0x45
  4344ca:	inc    ebx
  4344cb:	add    BYTE PTR [eax],al
  4344cd:	add    BYTE PTR [eax],al
  4344cf:	add    BYTE PTR [eax-0x10],ch
  4344d2:	inc    ebx
  4344d3:	add    BYTE PTR [ecx],al
  4344d5:	add    BYTE PTR [eax],al
  4344d7:	add    BYTE PTR [eax],al
  4344d9:	add    BYTE PTR [eax],al
  4344db:	add    bh,bh
  4344dd:	(bad)  
  4344de:	(bad)  
  4344df:	inc    DWORD PTR [eax]
  4344e1:	add    BYTE PTR [eax],al
  4344e3:	add    BYTE PTR [eax+0x0],al
  4344e6:	add    BYTE PTR [eax],al
  4344e8:	mov    ah,0x44
  4344ea:	inc    ebx
	...
  4344f7:	add    al,bh
  4344f9:	lock inc ebx
  4344fb:	add    BYTE PTR [eax],al
  4344fd:	inc    ebp
  4344fe:	inc    ebx
	...
  434507:	add    BYTE PTR [edx],al
  434509:	add    BYTE PTR [eax],al
  43450b:	add    BYTE PTR [eax],dl
  43450d:	inc    ebp
  43450e:	inc    ebx
  43450f:	add    BYTE PTR [eax+0x45],dl
  434512:	inc    ebx
  434513:	add    BYTE PTR [eax*2+0x43],bl
  43451a:	add    BYTE PTR [eax],al
  43451c:	enter  0x43f0,0x0
	...
  434528:	(bad)  
  434529:	(bad)  
  43452a:	(bad)  
  43452b:	inc    DWORD PTR [eax]
  43452d:	add    BYTE PTR [eax],al
  43452f:	add    BYTE PTR [eax+0x0],al
  434532:	add    BYTE PTR [eax],al
  434534:	cmp    BYTE PTR [ebp+0x43],al
	...
  43453f:	add    BYTE PTR [ecx],al
  434541:	add    BYTE PTR [eax],al
  434543:	add    BYTE PTR [eax+0x45],cl
  434546:	inc    ebx
  434547:	add    BYTE PTR [eax*2+0x43],bl
  43454e:	add    BYTE PTR [eax],al
  434550:	clc    
  434551:	lock inc ebx
  434553:	add    BYTE PTR [ecx],al
  434555:	add    BYTE PTR [eax],al
  434557:	add    BYTE PTR [eax],al
  434559:	add    BYTE PTR [eax],al
  43455b:	add    bh,bh
  43455d:	(bad)  
  43455e:	(bad)  
  43455f:	inc    DWORD PTR [eax]
  434561:	add    BYTE PTR [eax],al
  434563:	add    BYTE PTR [eax+0x0],al
  434566:	add    BYTE PTR [eax],al
  434568:	add    BYTE PTR [ebp+0x43],al
	...
  434577:	add    BYTE PTR [eax-0xf],dl
  43457a:	inc    ebx
  43457b:	add    BYTE PTR [eax+0x4345],al
  434581:	add    BYTE PTR [eax],al
  434583:	add    BYTE PTR [eax],al
  434585:	add    BYTE PTR [eax],al
  434587:	add    BYTE PTR [edx],al
  434589:	add    BYTE PTR [eax],al
  43458b:	add    BYTE PTR [eax-0x63ffbcbb],dl
  434591:	inc    ebp
  434592:	inc    ebx
  434593:	add    al,al
  434595:	xor    eax,0x43
  43459a:	add    BYTE PTR [eax],al
  43459c:	push   eax
  43459d:	icebp  
  43459e:	inc    ebx
  43459f:	add    BYTE PTR [ecx],al
  4345a1:	add    BYTE PTR [eax],al
  4345a3:	add    BYTE PTR [eax],al
  4345a5:	add    BYTE PTR [eax],al
  4345a7:	add    bh,bh
  4345a9:	(bad)  
  4345aa:	(bad)  
  4345ab:	inc    DWORD PTR [eax]
  4345ad:	add    BYTE PTR [eax],al
  4345af:	add    BYTE PTR [eax+0x0],al
  4345b2:	add    BYTE PTR [eax],al
  4345b4:	add    BYTE PTR [ebp+0x43],0x0
	...
  4345c4:	mov    cl,dh
  4345c6:	inc    ebx
  4345c7:	add    ah,cl
  4345c9:	inc    ebp
  4345ca:	inc    ebx
	...
  4345d3:	add    BYTE PTR [ecx],al
  4345d5:	add    BYTE PTR [eax],al
  4345d7:	add    ah,bl
  4345d9:	inc    ebp
  4345da:	inc    ebx
  4345db:	add    ah,ah
  4345dd:	inc    ebp
  4345de:	inc    ebx
  4345df:	add    BYTE PTR [eax],al
  4345e1:	add    BYTE PTR [eax],al
  4345e3:	add    BYTE PTR [eax+0x43f1],cl
  4345e9:	add    BYTE PTR [eax],al
  4345eb:	add    BYTE PTR [eax],al
  4345ed:	add    BYTE PTR [eax],al
  4345ef:	add    bh,bh
  4345f1:	(bad)  
  4345f2:	(bad)  
  4345f3:	inc    DWORD PTR [eax]
  4345f5:	add    BYTE PTR [eax],al
  4345f7:	add    BYTE PTR [eax+0x0],al
  4345fa:	add    BYTE PTR [eax],al
  4345fc:	int3   
  4345fd:	inc    ebp
  4345fe:	inc    ebx
	...
  43460b:	add    BYTE PTR [ecx+esi*8+0x46140043],ch
  434612:	inc    ebx
	...
  43461b:	add    BYTE PTR [ecx],al
  43461d:	add    BYTE PTR [eax],al
  43461f:	add    BYTE PTR [esi+eax*2],ah
  434622:	inc    ebx
  434623:	add    BYTE PTR [esi+eax*2],ch
  434626:	inc    ebx
  434627:	add    BYTE PTR [eax],al
  434629:	add    BYTE PTR [eax],al
  43462b:	add    BYTE PTR [ecx+esi*8+0x43],ch
  434632:	add    BYTE PTR [eax],al
  434634:	add    BYTE PTR [eax],al
  434636:	add    BYTE PTR [eax],al
  434638:	(bad)  
  434639:	(bad)  
  43463a:	(bad)  
  43463b:	inc    DWORD PTR [eax]
  43463d:	add    BYTE PTR [eax],al
  43463f:	add    BYTE PTR [eax+0x0],al
  434642:	add    BYTE PTR [eax],al
  434644:	adc    al,0x46
  434646:	inc    ebx
	...
  434653:	add    al,bl
  434655:	icebp  
  434656:	inc    ebx
  434657:	add    BYTE PTR [esi+eax*2+0x43],bl
	...
  434663:	add    BYTE PTR [ecx],al
  434665:	add    BYTE PTR [eax],al
  434667:	add    BYTE PTR [esi+eax*2+0x43],ch
  43466b:	add    BYTE PTR [esi+eax*2+0x43],dh
  43466f:	add    BYTE PTR [eax],al
  434671:	add    BYTE PTR [eax],al
  434673:	add    al,bl
  434675:	icebp  
  434676:	inc    ebx
	...
  43467f:	add    bh,bh
  434681:	(bad)  
  434682:	(bad)  
  434683:	inc    DWORD PTR [eax]
  434685:	add    BYTE PTR [eax],al
  434687:	add    BYTE PTR [eax+0x0],al
  43468a:	add    BYTE PTR [eax],al
  43468c:	pop    esp
  43468d:	inc    esi
  43468e:	inc    ebx
	...
  43469b:	add    BYTE PTR [eax],al
  43469d:	repnz inc ebx
  43469f:	add    BYTE PTR [esi+eax*2+0x43],ah
  4346a6:	add    BYTE PTR [eax],al
  4346a8:	add    BYTE PTR [eax],al
  4346aa:	add    BYTE PTR [eax],al
  4346ac:	add    DWORD PTR [eax],eax
  4346ae:	add    BYTE PTR [eax],al
  4346b0:	mov    ah,0x46
  4346b2:	inc    ebx
  4346b3:	add    BYTE PTR [esi+eax*2+0x43],bh
  4346ba:	add    BYTE PTR [eax],al
  4346bc:	add    dl,dh
  4346be:	inc    ebx
	...
  4346c7:	add    bh,bh
  4346c9:	(bad)  
  4346ca:	(bad)  
  4346cb:	inc    DWORD PTR [eax]
  4346cd:	add    BYTE PTR [eax],al
  4346cf:	add    BYTE PTR [eax+0x0],al
  4346d2:	add    BYTE PTR [eax],al
  4346d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4346d5:	inc    esi
  4346d6:	inc    ebx
	...
  4346e3:	add    BYTE PTR [edx+esi*8+0x46ec0043],ch
  4346ea:	inc    ebx
	...
  4346f3:	add    BYTE PTR [edx],al
  4346f5:	add    BYTE PTR [eax],al
  4346f7:	add    ah,bh
  4346f9:	inc    esi
  4346fa:	inc    ebx
  4346fb:	add    BYTE PTR [eax],cl
  4346fd:	inc    edi
  4346fe:	inc    ebx
  4346ff:	add    al,al
  434701:	xor    eax,0x43
  434706:	add    BYTE PTR [eax],al
  434708:	lods   al,BYTE PTR ds:[esi]
  434709:	repnz inc ebx
  43470b:	add    BYTE PTR [ecx],al
  43470d:	add    BYTE PTR [eax],al
  43470f:	add    BYTE PTR [eax],al
  434711:	add    BYTE PTR [eax],al
  434713:	add    bh,bh
  434715:	(bad)  
  434716:	(bad)  
  434717:	inc    DWORD PTR [eax]
  434719:	add    BYTE PTR [eax],al
  43471b:	add    BYTE PTR [eax+0x0],al
  43471e:	add    BYTE PTR [eax],al
  434720:	in     al,dx
  434721:	inc    esi
  434722:	inc    ebx
	...
  43472f:	add    BYTE PTR [eax-0x8],ah
  434732:	inc    ebx
  434733:	add    BYTE PTR [eax],bh
  434735:	inc    edi
  434736:	inc    ebx
	...
  43473f:	add    BYTE PTR [ebx],al
  434741:	add    BYTE PTR [eax],al
  434743:	add    BYTE PTR [eax+0x47],cl
  434746:	inc    ebx
  434747:	add    BYTE PTR [eax+0x47],bl
  43474a:	inc    ebx
  43474b:	add    BYTE PTR [edx+edi*1+0x35c00043],ch
  434752:	inc    ebx
  434753:	add    BYTE PTR [eax],al
  434755:	add    BYTE PTR [eax],al
  434757:	add    BYTE PTR [eax-0x8],ah
  43475a:	inc    ebx
  43475b:	add    BYTE PTR [edx],al
  43475d:	add    BYTE PTR [eax],al
  43475f:	add    BYTE PTR [eax],al
  434761:	add    BYTE PTR [eax],al
  434763:	add    bh,bh
  434765:	(bad)  
  434766:	(bad)  
  434767:	inc    DWORD PTR [eax]
  434769:	add    BYTE PTR [eax],al
  43476b:	add    BYTE PTR [eax+0x0],al
  43476e:	add    BYTE PTR [eax],al
  434770:	cmp    BYTE PTR [edi+0x43],al
	...
  43477f:	add    cl,cl
  434781:	push   esi
  434782:	add    al,BYTE PTR [eax]
  434784:	inc    ecx
  434785:	mov    ds:0xa2690002,al
  43478a:	add    al,BYTE PTR [eax]
  43478c:	cdq    
  43478d:	mov    ds:0xa2db0002,al
  434792:	add    al,BYTE PTR [eax]
  434794:	sbb    esp,DWORD PTR [ebx-0x5ca4fffe]
  43479a:	add    al,BYTE PTR [eax]
  43479c:	mov    DWORD PTR [ebx-0x5c3bfffe],esp
  4347a2:	add    al,BYTE PTR [eax]
  4347a4:	out    dx,al
  4347a5:	mov    ds:0xa41e0002,eax
  4347aa:	add    al,BYTE PTR [eax]
  4347ac:	push   edx
  4347ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4347ae:	add    al,BYTE PTR [eax]
  4347b0:	retf   
  4347b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4347b2:	add    al,BYTE PTR [eax]
  4347b4:	clc    
  4347b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4347b6:	add    al,BYTE PTR [eax]
  4347b8:	sub    al,0xa5
  4347ba:	add    al,BYTE PTR [eax]
  4347bc:	jae    0x434763
  4347be:	add    al,BYTE PTR [eax]
  4347c0:	mov    al,ds:0xc00002a5
  4347c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4347c6:	add    al,BYTE PTR [eax]
  4347c8:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4347ca:	add    al,BYTE PTR [eax]
  4347cc:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4347ce:	add    al,BYTE PTR [eax]
  4347d0:	outs   dx,BYTE PTR ds:[esi]
  4347d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4347d2:	add    al,BYTE PTR [eax]
  4347d4:	mov    ds:0xc90002a6,al
  4347d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4347da:	add    al,BYTE PTR [eax]
  4347dc:	stc    
  4347dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4347de:	add    al,BYTE PTR [eax]
  4347e0:	xor    ah,BYTE PTR [edi-0x5854fffe]
  4347e6:	add    al,BYTE PTR [eax]
  4347e8:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4347ea:	add    al,BYTE PTR [eax]
  4347ec:	cmp    ebp,DWORD PTR [eax-0x5787fffe]
  4347f2:	add    al,BYTE PTR [eax]
  4347f4:	test   eax,0x120002a8
  4347f9:	test   eax,0xa9490002
  4347fe:	add    al,BYTE PTR [eax]
  434800:	js     0x4347ab
  434802:	add    al,BYTE PTR [eax]
  434804:	test   eax,0xea0002a9
  434809:	test   eax,0xaa1e0002
  43480e:	add    al,BYTE PTR [eax]
  434810:	imul   ebp,DWORD PTR [edx-0x551dfffe],0x2
  434817:	add    BYTE PTR [esi],cl
  434819:	stos   DWORD PTR es:[edi],eax
  43481a:	add    al,BYTE PTR [eax]
  43481c:	ds stos DWORD PTR es:[edi],eax
  43481e:	add    al,BYTE PTR [eax]
  434820:	nop
  434821:	stos   DWORD PTR es:[edi],eax
  434822:	add    al,BYTE PTR [eax]
  434824:	mov    ch,0xab
  434826:	add    al,BYTE PTR [eax]
  434828:	in     eax,0xab
  43482a:	add    al,BYTE PTR [eax]
  43482c:	or     al,0xac
  43482e:	add    al,BYTE PTR [eax]
  434830:	push   eax
  434831:	lods   al,BYTE PTR ds:[esi]
  434832:	add    al,BYTE PTR [eax]
  434834:	popf   
  434835:	lods   al,BYTE PTR ds:[esi]
  434836:	add    al,BYTE PTR [eax]
  434838:	leave  
  434839:	lods   al,BYTE PTR ds:[esi]
  43483a:	add    al,BYTE PTR [eax]
  43483c:	or     BYTE PTR [ebp-0x52c6fffe],ch
  434842:	add    al,BYTE PTR [eax]
  434844:	jnp    0x4347f3
  434846:	add    al,BYTE PTR [eax]
  434848:	lods   al,BYTE PTR ds:[esi]
  434849:	lods   eax,DWORD PTR ds:[esi]
  43484a:	add    al,BYTE PTR [eax]
  43484c:	fldcw  WORD PTR [ebp-0x51f6fffe]
  434852:	add    al,BYTE PTR [eax]
  434854:	dec    edx
  434855:	scas   al,BYTE PTR es:[edi]
  434856:	add    al,BYTE PTR [eax]
  434858:	mov    ch,BYTE PTR [esi-0x5119fffe]
  43485e:	add    al,BYTE PTR [eax]
  434860:	sbb    DWORD PTR [edi-0x50adfffe],ebp
  434866:	add    al,BYTE PTR [eax]
  434868:	mov    DWORD PTR [edi-0x503efffe],ebp
  43486e:	add    al,BYTE PTR [eax]
  434870:	push   ss
  434871:	mov    al,0x2
  434873:	add    BYTE PTR [eax-0x50],al
  434876:	add    al,BYTE PTR [eax]
  434878:	push   0xffffffb0
  43487a:	add    al,BYTE PTR [eax]
  43487c:	test   al,0xb0
  43487e:	add    al,BYTE PTR [eax]
  434880:	jmp    0x2b1:0x190002b0
  434887:	add    BYTE PTR [edi-0x4f],dl
  43488a:	add    al,BYTE PTR [eax]
  43488c:	xchg   edi,eax
  43488d:	mov    cl,0x2
  43488f:	add    bh,dl
  434891:	mov    cl,0x2
  434893:	add    BYTE PTR [ecx],cl
  434895:	mov    dl,0x2
  434897:	add    BYTE PTR [edx+esi*4],bh
  43489a:	add    al,BYTE PTR [eax]
  43489c:	jl     0x434850
  43489e:	add    al,BYTE PTR [eax]
  4348a0:	mov    esp,0xea0002b2
  4348a5:	mov    dl,0x2
  4348a7:	add    BYTE PTR [edx],dh
  4348a9:	mov    bl,0x2
  4348ab:	add    BYTE PTR [ecx-0x4d],dh
  4348ae:	add    al,BYTE PTR [eax]
  4348b0:	mov    eax,ds:0xd10002b3
  4348b5:	mov    bl,0x2
  4348b7:	add    al,bh
  4348b9:	mov    bl,0x2
  4348bb:	add    BYTE PTR [eax],ch
  4348bd:	mov    ah,0x2
  4348bf:	add    BYTE PTR [eax-0x4c],bl
  4348c2:	add    al,BYTE PTR [eax]
  4348c4:	xchg   ecx,eax
  4348c5:	mov    ah,0x2
  4348c7:	add    cl,al
  4348c9:	mov    ah,0x2
  4348cb:	add    al,ch
  4348cd:	mov    ah,0x2
  4348cf:	add    BYTE PTR [ecx],bl
  4348d1:	mov    ch,0x2
  4348d3:	add    BYTE PTR [ebp+esi*4+0x2],cl
  4348d7:	add    BYTE PTR [ebx-0x27fffd4b],ah
  4348dd:	mov    ch,0x2
  4348df:	add    BYTE PTR [eax],cl
  4348e1:	mov    dh,0x2
  4348e3:	add    BYTE PTR [eax],bh
  4348e5:	mov    dh,0x2
  4348e7:	add    BYTE PTR [ecx-0x56fffd4a],al
  4348ed:	mov    dh,0x2
  4348ef:	add    bl,bh
  4348f1:	mov    dh,0x2
  4348f3:	add    BYTE PTR [ecx-0x49],al
  4348f6:	add    al,BYTE PTR [eax]
  4348f8:	pusha  
  4348f9:	mov    bh,0x2
  4348fb:	add    BYTE PTR [ecx-0x33fffd49],cl
  434901:	mov    bh,0x2
  434903:	add    BYTE PTR [edi],ch
  434905:	mov    eax,0xb8680002
  43490a:	add    al,BYTE PTR [eax]
  43490c:	cwde   
  43490d:	mov    eax,0xb8cd0002
  434912:	add    al,BYTE PTR [eax]
  434914:	add    DWORD PTR [ecx-0x46cefffe],edi
  43491a:	add    al,BYTE PTR [eax]
  43491c:	pop    edx
  43491d:	mov    ecx,0xb9930002
  434922:	add    al,BYTE PTR [eax]
  434924:	mov    eax,0xe80002b9
  434929:	mov    ecx,0xba2c0002
  43492e:	add    al,BYTE PTR [eax]
  434930:	imul   edi,DWORD PTR [edx-0x4555fffe],0x2
  434937:	add    dl,ch
  434939:	mov    edx,0xbb210002
  43493e:	add    al,BYTE PTR [eax]
  434940:	dec    eax
  434941:	mov    ebx,0xbb700002
  434946:	add    al,BYTE PTR [eax]
  434948:	nop
  434949:	mov    ebx,0xbbb00002
  43494e:	add    al,BYTE PTR [eax]
  434950:	loopne 0x43490d
  434952:	add    al,BYTE PTR [eax]
  434954:	sbb    BYTE PTR [edx+eax*1+0x2bc4800],bh
  43495b:	add    BYTE PTR [eax-0x47fffd44],cl
  434961:	mov    esp,0xbce80002
  434966:	add    al,BYTE PTR [eax]
  434968:	sub    BYTE PTR [ebp-0x42a7fffe],bh
  43496e:	add    al,BYTE PTR [eax]
  434970:	mov    BYTE PTR [ebp-0x4247fffe],bh
  434976:	add    al,BYTE PTR [eax]
  434978:	or     bh,BYTE PTR [esi-0x41bdfffe]
  43497e:	add    al,BYTE PTR [eax]
  434980:	jns    0x434940
  434982:	add    al,BYTE PTR [eax]
  434984:	mov    ecx,0xf20002be
  434989:	mov    esi,0xbf290002
  43498e:	add    al,BYTE PTR [eax]
  434990:	bound  edi,QWORD PTR [edi-0x4067fffe]
  434996:	add    al,BYTE PTR [eax]
  434998:	retf   0x2bf
  43499b:	add    BYTE PTR [eax+eax*8],dl
  43499e:	add    al,BYTE PTR [eax]
  4349a0:	dec    edx
  4349a1:	rol    BYTE PTR [edx],0x0
  4349a4:	jns    0x434966
  4349a6:	add    al,BYTE PTR [eax]
  4349a8:	test   eax,0x2c0
  4349ad:	rol    DWORD PTR [edx],0x0
  4349b0:	add    ecx,0xc1c90002
  4349b6:	add    al,BYTE PTR [eax]
  4349b8:	push   cs
  4349b9:	ret    0x2
  4349bc:	inc    edx
  4349bd:	ret    0x2
  4349c0:	pusha  
  4349c1:	ret    0x2
  4349c4:	mov    dl,al
  4349c6:	add    al,BYTE PTR [eax]
  4349c8:	mov    eax,0xf00002c2
  4349cd:	ret    0x2
  4349d0:	sbb    eax,0x400002c3
  4349d5:	ret    
  4349d6:	add    al,BYTE PTR [eax]
  4349d8:	imul   eax,ebx,0xc3a00002
  4349de:	add    al,BYTE PTR [eax]
  4349e0:	rol    bl,cl
  4349e2:	add    al,BYTE PTR [eax]
  4349e4:	or     esp,eax
  4349e6:	add    al,BYTE PTR [eax]
  4349e8:	cmp    ah,al
  4349ea:	add    al,BYTE PTR [eax]
  4349ec:	add    ah,0x2
  4349ef:	add    ch,cl
  4349f1:	les    eax,FWORD PTR [edx]
  4349f3:	add    BYTE PTR [ecx],cl
  4349f5:	lds    eax,FWORD PTR [edx]
  4349f7:	add    BYTE PTR [eax],dh
  4349f9:	lds    eax,FWORD PTR [edx]
  4349fb:	add    BYTE PTR [ecx-0x3b],ah
  4349fe:	add    al,BYTE PTR [eax]
  434a00:	xchg   ebx,eax
  434a01:	lds    eax,FWORD PTR [edx]
  434a03:	add    bl,al
  434a05:	lds    eax,FWORD PTR [edx]
  434a07:	add    al,ch
  434a09:	lds    eax,FWORD PTR [edx]
  434a0b:	add    BYTE PTR [eax],bl
  434a0d:	mov    BYTE PTR [edx],0x0
  434a10:	dec    eax
  434a11:	mov    BYTE PTR [edx],0x0
  434a14:	jnp    0x4349dc
  434a16:	add    al,BYTE PTR [eax]
  434a18:	stos   DWORD PTR es:[edi],eax
  434a19:	mov    BYTE PTR [edx],0x0
  434a1c:	fadd   st,st(6)
  434a1e:	add    al,BYTE PTR [eax]
  434a20:	and    edi,eax
  434a22:	add    al,BYTE PTR [eax]
  434a24:	dec    eax
  434a25:	mov    DWORD PTR [edx],0x2c79a00
  434a2b:	add    al,cl
  434a2d:	mov    DWORD PTR [edx],0x2c81a00
  434a33:	add    BYTE PTR [eax-0x38],cl
  434a36:	add    al,BYTE PTR [eax]
  434a38:	stos   DWORD PTR es:[edi],eax
  434a39:	enter  0x2,0xe7
  434a3d:	enter  0x2,0x18
  434a41:	leave  
  434a42:	add    al,BYTE PTR [eax]
  434a44:	push   ebx
  434a45:	leave  
  434a46:	add    al,BYTE PTR [eax]
  434a48:	js     0x434a13
  434a4a:	add    al,BYTE PTR [eax]
  434a4c:	mov    bl,0xc9
  434a4e:	add    al,BYTE PTR [eax]
  434a50:	jecxz  0x434a1b
  434a52:	add    al,BYTE PTR [eax]
  434a54:	or     dl,cl
  434a56:	add    al,BYTE PTR [eax]
  434a58:	inc    ebx
  434a59:	retf   0x2
  434a5c:	jae    0x434a28
  434a5e:	add    al,BYTE PTR [eax]
  434a60:	cwde   
  434a61:	retf   0x2
  434a64:	ror    edx,cl
  434a66:	add    al,BYTE PTR [eax]
  434a68:	clc    
  434a69:	retf   0x2
  434a6c:	xor    cl,bl
  434a6e:	add    al,BYTE PTR [eax]
  434a70:	pop    ecx
  434a71:	retf   
  434a72:	add    al,BYTE PTR [eax]
  434a74:	fwait
  434a75:	retf   
  434a76:	add    al,BYTE PTR [eax]
  434a78:	fcmovne st,st(3)
  434a7a:	add    al,BYTE PTR [eax]
  434a7c:	or     ah,cl
  434a7e:	add    al,BYTE PTR [eax]
  434a80:	cmp    esp,ecx
  434a82:	add    al,BYTE PTR [eax]
  434a84:	jae    0x434a52
  434a86:	add    al,BYTE PTR [eax]
  434a88:	mov    ds:0xd10002cc,al
  434a8d:	int3   
  434a8e:	add    al,BYTE PTR [eax]
  434a90:	stc    
  434a91:	int3   
  434a92:	add    al,BYTE PTR [eax]
  434a94:	sub    ebp,ecx
  434a96:	add    al,BYTE PTR [eax]
  434a98:	push   eax
  434a99:	int    0x2
  434a9b:	add    BYTE PTR [eax-0x33],bh
  434a9e:	add    al,BYTE PTR [eax]
  434aa0:	mov    esp,0xe90002cd
  434aa5:	int    0x2
  434aa7:	add    BYTE PTR [ecx],ah
  434aa9:	into   
  434aaa:	add    al,BYTE PTR [eax]
  434aac:	dec    ecx
  434aad:	into   
  434aae:	add    al,BYTE PTR [eax]
  434ab0:	jne    0x434a82
  434ab2:	add    al,BYTE PTR [eax]
  434ab4:	mov    al,0xd0
  434ab6:	add    al,BYTE PTR [eax]
  434ab8:	loopne 0x434a8a
  434aba:	add    al,BYTE PTR [eax]
  434abc:	or     cl,dl
  434abe:	add    al,BYTE PTR [eax]
  434ac0:	je     0x434a93
  434ac2:	add    al,BYTE PTR [eax]
  434ac4:	mov    ds:0xd0002d1,al
  434ac9:	rol    BYTE PTR [edx],cl
  434acb:	add    BYTE PTR [eax-0x2e],ch
  434ace:	add    al,BYTE PTR [eax]
  434ad0:	rcl    dl,0x2
  434ad3:	add    bl,dh
  434ad5:	rol    BYTE PTR [edx],cl
  434ad7:	add    BYTE PTR [eax],bl
  434ad9:	rol    DWORD PTR [edx],cl
  434adb:	add    BYTE PTR [edx-0x2d],bl
  434ade:	add    al,BYTE PTR [eax]
  434ae0:	mov    eax,ds:0x170002d4
  434ae5:	aad    0x2
  434ae7:	add    BYTE PTR [eax-0x2b],bl
  434aea:	add    al,BYTE PTR [eax]
  434aec:	mov    ds:0xcb0002d5,eax
  434af1:	aad    0x2
  434af3:	add    al,bh
  434af5:	aad    0x2
  434af7:	add    BYTE PTR [ebx],bh
  434af9:	(bad)  
  434afa:	add    al,BYTE PTR [eax]
  434afc:	pushf  
  434afd:	(bad)  
  434afe:	add    al,BYTE PTR [eax]
  434b00:	sub    al,0xd7
  434b02:	add    al,BYTE PTR [eax]
  434b04:	jno    0x434add
  434b06:	add    al,BYTE PTR [eax]
  434b08:	mov    al,ds:0xc80002d7
  434b0d:	xlat   BYTE PTR ds:[ebx]
  434b0e:	add    al,BYTE PTR [eax]
  434b10:	add    al,bl
  434b12:	add    al,BYTE PTR [eax]
  434b14:	sub    al,bl
  434b16:	add    al,BYTE PTR [eax]
  434b18:	push   eax
  434b19:	fadd   DWORD PTR [edx]
  434b1b:	add    BYTE PTR [edx-0x37fffd28],cl
  434b21:	fadd   DWORD PTR [edx]
  434b23:	add    cl,bh
  434b25:	fadd   DWORD PTR [edx]
  434b27:	add    BYTE PTR [ecx],bh
  434b29:	fld    DWORD PTR [edx]
  434b2b:	add    BYTE PTR [ecx-0x27],bh
  434b2e:	add    al,BYTE PTR [eax]
  434b30:	rcr    cl,0x2
  434b33:	add    dl,bh
  434b35:	fld    DWORD PTR [edx]
  434b37:	add    BYTE PTR [ebp-0x26],ah
  434b3a:	add    al,BYTE PTR [eax]
  434b3c:	stos   DWORD PTR es:[edi],eax
  434b3d:	fiadd  DWORD PTR [edx]
  434b3f:	add    cl,dh
  434b41:	fiadd  DWORD PTR [edx]
  434b43:	add    BYTE PTR [ecx-0x25],ah
  434b46:	add    al,BYTE PTR [eax]
  434b48:	mov    ebp,0x750002db
  434b4d:	fadd   QWORD PTR [edx]
  434b4f:	add    BYTE PTR [eax-0x14fffd24],bh
  434b55:	fadd   QWORD PTR [edx]
  434b57:	add    BYTE PTR [ebx],bl
  434b59:	fld    QWORD PTR [edx]
  434b5b:	add    BYTE PTR [ebx-0x23],cl
  434b5e:	add    al,BYTE PTR [eax]
  434b60:	sbb    ebp,0xddab0002
  434b66:	add    al,BYTE PTR [eax]
  434b68:	push   es
  434b69:	fiadd  WORD PTR [edx]
  434b6b:	add    BYTE PTR [ebx-0x22],dl
  434b6e:	add    al,BYTE PTR [eax]
  434b70:	mov    dh,bl
  434b72:	add    al,BYTE PTR [eax]
  434b74:	ret    0x2de
  434b77:	add    bl,bh
  434b79:	fiadd  WORD PTR [edx]
  434b7b:	add    BYTE PTR [eax],ch
  434b7d:	fild   WORD PTR [edx]
  434b7f:	add    BYTE PTR [eax-0x21],bl
  434b82:	add    al,BYTE PTR [eax]
  434b84:	fild   WORD PTR [edx]
  434b87:	add    cl,ch
  434b89:	fild   WORD PTR [edx]
  434b8b:	add    BYTE PTR [eax],ch
  434b8d:	loopne 0x434b91
  434b8f:	add    BYTE PTR [eax-0x20],ch
  434b92:	add    al,BYTE PTR [eax]
  434b94:	mov    al,0xe0
  434b96:	add    al,BYTE PTR [eax]
  434b98:	sbb    ecx,esp
  434b9a:	add    al,BYTE PTR [eax]
  434b9c:	outs   dx,BYTE PTR ds:[esi]
  434b9d:	loope  0x434ba1
  434b9f:	add    BYTE PTR [eax+0x2e1],ch
  434ba5:	loop   0x434ba9
  434ba7:	add    ch,cl
  434ba9:	loop   0x434bad
  434bab:	add    BYTE PTR [edx],dl
  434bad:	jecxz  0x434bb1
  434baf:	add    BYTE PTR [ebx-0x1d],cl
  434bb2:	add    al,BYTE PTR [eax]
  434bb4:	mov    bl,ah
  434bb6:	add    al,BYTE PTR [eax]
  434bb8:	shl    ebx,0x2
  434bbb:	add    BYTE PTR [eax-0x1cfffd1c],ah
  434bc1:	in     al,0x2
  434bc3:	add    BYTE PTR [eax],cl
  434bc5:	in     eax,0x2
  434bc7:	add    BYTE PTR [ebx],bh
  434bc9:	in     eax,0x2
  434bcb:	add    BYTE PTR [eax-0x1b],ch
  434bce:	add    al,BYTE PTR [eax]
  434bd0:	mov    ebx,0x220002e5
  434bd5:	out    0x2,al
  434bd7:	add    dl,cl
  434bd9:	out    0x2,al
  434bdb:	add    BYTE PTR [ecx],dl
  434bdd:	out    0x2,eax
  434bdf:	add    BYTE PTR [ebp-0x19],bh
  434be2:	add    al,BYTE PTR [eax]
  434be4:	enter  0x2e7,0x0
  434be8:	sub    eax,0x7c0002e8
  434bed:	call   0xe9bd4bf4
  434bf2:	add    al,BYTE PTR [eax]
  434bf4:	in     al,dx
  434bf5:	jmp    0xebc54bfc
  434bfa:	add    al,BYTE PTR [eax]
  434bfc:	inc    ecx
  434bfd:	in     al,dx
  434bfe:	add    al,BYTE PTR [eax]
  434c00:	js     0x434bee
  434c02:	add    al,BYTE PTR [eax]
  434c04:	test   al,0xec
  434c06:	add    al,BYTE PTR [eax]
  434c08:	sbb    ch,ch
  434c0a:	add    al,BYTE PTR [eax]
  434c0c:	outs   dx,DWORD PTR ds:[esi]
  434c0d:	out    dx,al
  434c0e:	add    al,BYTE PTR [eax]
  434c10:	(bad)  
  434c11:	out    dx,al
  434c12:	add    al,BYTE PTR [eax]
  434c14:	xchg   ecx,eax
  434c15:	lock add al,BYTE PTR [eax]
  434c18:	fcomi  st,st(0)
  434c1a:	add    al,BYTE PTR [eax]
  434c1c:	dec    ecx
  434c1d:	icebp  
  434c1e:	add    al,BYTE PTR [eax]
  434c20:	xchg   edx,eax
  434c21:	icebp  
  434c22:	add    al,BYTE PTR [eax]
  434c24:	(bad)
	...
  434c37:	add    dh,bh
  434c39:	(bad)  
  434c3a:	(bad)  
  434c3b:	inc    DWORD PTR [eax]
  434c3d:	add    BYTE PTR [eax],al
  434c3f:	add    ah,cl
  434c41:	(bad)  
  434c42:	(bad)  
  434c43:	inc    DWORD PTR [eax]
  434c45:	add    BYTE PTR [eax],al
  434c47:	add    dh,bh
  434c49:	(bad)  
  434c4a:	(bad)  
  434c4b:	inc    DWORD PTR [eax]
  434c4d:	add    BYTE PTR [eax],al
  434c4f:	add    BYTE PTR [eax+0x51],dl
  434c52:	inc    edx
  434c53:	add    BYTE PTR [eax],al
  434c55:	add    BYTE PTR [eax],al
  434c57:	add    dh,bh
  434c59:	(bad)  
  434c5a:	(bad)  
  434c5b:	inc    DWORD PTR [eax]
  434c5d:	add    BYTE PTR [eax],al
  434c5f:	add    BYTE PTR [edi+edi*8+0xffff],al
  434c66:	add    BYTE PTR [eax],al
  434c68:	(bad)  
  434c69:	(bad)  
  434c6a:	(bad)  
  434c6b:	call   DWORD PTR [edx-0x69ffbdad]
  434c71:	push   ebx
  434c72:	inc    edx
  434c73:	add    dh,bh
  434c75:	(bad)  
  434c76:	(bad)  
  434c77:	inc    DWORD PTR [esi+0x53]
  434c7a:	inc    edx
  434c7b:	add    BYTE PTR [edx+0x53],bl
  434c7e:	inc    edx
  434c7f:	add    dh,bh
  434c81:	(bad)  
  434c82:	(bad)  
  434c83:	inc    DWORD PTR [eax]
  434c85:	add    BYTE PTR [eax],al
  434c87:	add    ah,cl
  434c89:	(bad)  
  434c8a:	(bad)  
  434c8b:	inc    DWORD PTR [eax]
  434c8d:	add    BYTE PTR [eax],al
  434c8f:	add    dh,bh
  434c91:	(bad)  
  434c92:	(bad)  
  434c93:	(bad)  
  434c94:	mov    edi,0xe8004255
  434c99:	push   ebp
  434c9a:	inc    edx
  434c9b:	add    BYTE PTR [eax],al
  434c9d:	add    BYTE PTR [eax],al
  434c9f:	add    dh,bh
  434ca1:	(bad)  
  434ca2:	(bad)  
  434ca3:	inc    DWORD PTR [eax]
  434ca5:	add    BYTE PTR [eax],al
  434ca7:	add    ah,dl
  434ca9:	(bad)  
  434caa:	(bad)  
  434cab:	inc    DWORD PTR [eax]
  434cad:	add    BYTE PTR [eax],al
  434caf:	add    dh,bh
  434cb1:	(bad)  
  434cb2:	(bad)  
  434cb3:	inc    DWORD PTR [eax]
  434cb5:	add    BYTE PTR [eax],al
  434cb7:	add    BYTE PTR [ebp+0x56],al
  434cba:	inc    edx
  434cbb:	add    BYTE PTR [eax],al
  434cbd:	add    BYTE PTR [eax],al
  434cbf:	add    dh,bh
  434cc1:	(bad)  
  434cc2:	(bad)  
  434cc3:	inc    DWORD PTR [eax]
  434cc5:	add    BYTE PTR [eax],al
  434cc7:	add    al,bl
  434cc9:	(bad)  
  434cca:	(bad)  
  434ccb:	inc    DWORD PTR [eax]
  434ccd:	add    BYTE PTR [eax],al
  434ccf:	add    dh,bh
  434cd1:	(bad)  
  434cd2:	(bad)  
  434cd3:	(bad)  
  434cd4:	mov    ebx,0xcf004258
  434cd9:	pop    eax
  434cda:	inc    edx
  434cdb:	add    bh,bh
  434cdd:	(bad)  
  434cde:	(bad)  
  434cdf:	push   DWORD PTR [eax]
  434ce1:	mov    ds:0x42,al
  434ce6:	add    BYTE PTR [eax],al
  434ce8:	cmp    DWORD PTR [edx-0xffbe],esp
  434cee:	(bad)  
  434cef:	(bad)  
  434cf0:	cmp    DWORD PTR [edx+0x5220042],esp
  434cf6:	xchg   ebx,eax
  434cf7:	sbb    DWORD PTR [ebx],eax
  434cf9:	add    BYTE PTR [eax],al
  434cfb:	add    ah,bl
  434cfd:	dec    esp
  434cfe:	inc    ebx
	...
  434d13:	add    BYTE PTR [ecx],al
  434d15:	add    BYTE PTR [eax],al
  434d17:	add    BYTE PTR [eax+0x0],al
	...
  434d22:	add    BYTE PTR [eax],al
  434d24:	(bad)  
  434d25:	pop    ebx
  434d26:	inc    edx
  434d27:	add    BYTE PTR [eax],al
  434d29:	add    BYTE PTR [eax],al
  434d2b:	add    BYTE PTR [ecx],al
  434d2d:	add    BYTE PTR [eax],al
  434d2f:	add    BYTE PTR [edx],al
  434d31:	add    BYTE PTR [eax],al
  434d33:	add    BYTE PTR [ecx],al
  434d35:	add    BYTE PTR [eax],al
  434d37:	add    BYTE PTR [eax],bl
  434d39:	dec    ebp
  434d3a:	inc    ebx
  434d3b:	add    bh,bh
  434d3d:	(bad)  
  434d3e:	(bad)  
  434d3f:	inc    DWORD PTR [eax]
  434d41:	add    BYTE PTR [eax],al
  434d43:	add    BYTE PTR [eax],al
  434d45:	add    BYTE PTR [eax],al
  434d47:	add    BYTE PTR [eax-0x5e],ah
  434d4a:	inc    edx
  434d4b:	add    bh,bh
  434d4d:	(bad)  
  434d4e:	(bad)  
  434d4f:	inc    DWORD PTR [eax]
  434d51:	add    BYTE PTR [eax],al
  434d53:	add    BYTE PTR [edx],ah
  434d55:	add    eax,0x31993
  434d5a:	add    BYTE PTR [eax],al
  434d5c:	cmp    al,0x4d
  434d5e:	inc    ebx
  434d5f:	add    BYTE PTR [ecx],al
  434d61:	add    BYTE PTR [eax],al
  434d63:	add    BYTE PTR [eax],ch
  434d65:	dec    ebp
  434d66:	inc    ebx
	...
  434d73:	add    BYTE PTR [ecx],al
  434d75:	add    BYTE PTR [eax],al
  434d77:	add    bh,bh
  434d79:	(bad)  
  434d7a:	(bad)  
  434d7b:	call   DWORD PTR [eax+0x220042a2]
  434d81:	add    eax,0x11993
  434d86:	add    BYTE PTR [eax],al
  434d88:	js     0x434dd7
  434d8a:	inc    ebx
	...
  434d9f:	add    BYTE PTR [ecx],al
  434da1:	add    BYTE PTR [eax],al
  434da3:	add    BYTE PTR [eax],al
  434da5:	add    BYTE PTR [eax],al
  434da7:	add    BYTE PTR [eax+0x425a],dh
  434dad:	add    BYTE PTR [eax],al
  434daf:	add    BYTE PTR [ebp+ecx*2+0x30043],dh
  434db6:	add    BYTE PTR [eax],al
  434db8:	les    ecx,FWORD PTR [ebp+0x43]
  434dbb:	add    ah,bl
  434dbd:	push   edi
  434dbe:	inc    ebx
  434dbf:	add    BYTE PTR [eax],ah
  434dc1:	push   esi
  434dc2:	inc    ebx
  434dc3:	add    BYTE PTR [eax],al
  434dc5:	add    BYTE PTR [eax],al
  434dc7:	add    BYTE PTR [eax+eiz*8],bh
  434dca:	inc    ebx
  434dcb:	add    BYTE PTR [eax],al
  434dcd:	add    BYTE PTR [eax],al
  434dcf:	add    bh,bh
  434dd1:	(bad)  
  434dd2:	(bad)  
  434dd3:	inc    DWORD PTR [eax]
  434dd5:	add    BYTE PTR [eax],al
  434dd7:	add    BYTE PTR [eax+eax*1+0x0],cl
  434ddb:	add    BYTE PTR [eax],al
  434ddd:	pop    esi
  434dde:	inc    edx
  434ddf:	add    bh,bh
  434de1:	(bad)  
  434de2:	(bad)  
  434de3:	call   eax
  434de5:	mov    ds:0x5220042,al
  434dea:	xchg   ebx,eax
  434deb:	sbb    DWORD PTR [ecx],eax
  434ded:	add    BYTE PTR [eax],al
  434def:	add    al,ah
  434df1:	dec    ebp
  434df2:	inc    ebx
	...
  434e07:	add    BYTE PTR [ecx],al
  434e09:	add    BYTE PTR [eax],al
  434e0b:	add    bh,bh
  434e0d:	(bad)  
  434e0e:	(bad)  
  434e0f:	call   DWORD PTR [eax]
  434e11:	mov    ds:0x5220042,eax
  434e16:	xchg   ebx,eax
  434e17:	sbb    DWORD PTR [ecx],eax
  434e19:	add    BYTE PTR [eax],al
  434e1b:	add    BYTE PTR [esi+ecx*2],cl
  434e1e:	inc    ebx
	...
  434e33:	add    BYTE PTR [ecx],al
  434e35:	add    BYTE PTR [eax],al
  434e37:	add    bh,bh
  434e39:	(bad)  
  434e3a:	(bad)  
  434e3b:	call   DWORD PTR [eax-0x5d]
  434e3e:	inc    edx
  434e3f:	add    BYTE PTR [edx],ah
  434e41:	add    eax,0x11993
  434e46:	add    BYTE PTR [eax],al
  434e48:	cmp    BYTE PTR [esi+0x43],cl
	...
  434e5f:	add    BYTE PTR [ecx],al
  434e61:	add    BYTE PTR [eax],al
  434e63:	add    bh,bh
  434e65:	(bad)  
  434e66:	(bad)  
  434e67:	inc    DWORD PTR [eax+0x220042a3]
  434e6d:	add    eax,0x11993
  434e72:	add    BYTE PTR [eax],al
  434e74:	fs dec esi
  434e76:	inc    ebx
	...
  434e8b:	add    BYTE PTR [ecx],al
  434e8d:	add    BYTE PTR [eax],al
  434e8f:	add    bh,bh
  434e91:	(bad)  
  434e92:	(bad)  
  434e93:	push   DWORD PTR [eax+0x42a3]
  434e99:	add    BYTE PTR [eax],al
  434e9b:	add    BYTE PTR [ecx+0x220042a3],bh
  434ea1:	add    eax,0x21993
  434ea6:	add    BYTE PTR [eax],al
  434ea8:	nop
  434ea9:	dec    esi
  434eaa:	inc    ebx
	...
  434ebf:	add    BYTE PTR [ecx],al
  434ec1:	add    BYTE PTR [eax],al
  434ec3:	add    bh,bh
  434ec5:	(bad)  
  434ec6:	(bad)  
  434ec7:	jmp    eax
  434ec9:	mov    ds:0x5220042,eax
  434ece:	xchg   ebx,eax
  434ecf:	sbb    DWORD PTR [ecx],eax
  434ed1:	add    BYTE PTR [eax],al
  434ed3:	add    ah,al
  434ed5:	dec    esi
  434ed6:	inc    ebx
	...
  434eeb:	add    BYTE PTR [ecx],al
  434eed:	add    BYTE PTR [eax],al
  434eef:	add    bh,bh
  434ef1:	(bad)  
  434ef2:	(bad)  
  434ef3:	call   DWORD PTR [eax]
  434ef5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434ef6:	inc    edx
  434ef7:	add    BYTE PTR [edx],ah
  434ef9:	add    eax,0x11993
  434efe:	add    BYTE PTR [eax],al
  434f00:	lock dec esi
  434f02:	inc    ebx
	...
  434f17:	add    BYTE PTR [ecx],al
  434f19:	add    BYTE PTR [eax],al
  434f1b:	add    bh,bh
  434f1d:	(bad)  
  434f1e:	(bad)  
  434f1f:	inc    DWORD PTR [eax-0x5c]
  434f22:	inc    edx
  434f23:	add    BYTE PTR [eax],al
  434f25:	add    BYTE PTR [eax],al
  434f27:	add    BYTE PTR [ecx-0x5c],cl
  434f2a:	inc    edx
  434f2b:	add    BYTE PTR [edx],ah
  434f2d:	add    eax,0x21993
  434f32:	add    BYTE PTR [eax],al
  434f34:	sbb    al,0x4f
  434f36:	inc    ebx
	...
  434f4b:	add    BYTE PTR [ecx],al
  434f4d:	add    BYTE PTR [eax],al
  434f4f:	add    bh,bh
  434f51:	(bad)  
  434f52:	(bad)  
  434f53:	push   DWORD PTR [edx+0x42a4]
  434f59:	add    BYTE PTR [eax],al
  434f5b:	add    BYTE PTR [eax+0x10042a4],al
  434f61:	add    BYTE PTR [eax],al
  434f63:	add    BYTE PTR [ecx+0x220042a4],bl
  434f69:	add    eax,0x31993
  434f6e:	add    BYTE PTR [eax],al
  434f70:	push   eax
  434f71:	dec    edi
  434f72:	inc    ebx
	...
  434f87:	add    BYTE PTR [ecx],al
  434f89:	add    BYTE PTR [eax],al
  434f8b:	add    bh,bh
  434f8d:	(bad)  
  434f8e:	(bad)  
  434f8f:	push   eax
  434f91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434f92:	inc    edx
  434f93:	add    BYTE PTR [edx],ah
  434f95:	add    eax,0x11993
  434f9a:	add    BYTE PTR [eax],al
  434f9c:	mov    WORD PTR [edi+0x43],cs
	...
  434fb3:	add    BYTE PTR [ecx],al
  434fb5:	add    BYTE PTR [eax],al
  434fb7:	add    bh,bh
  434fb9:	(bad)  
  434fba:	(bad)  
  434fbb:	jmp    DWORD PTR [eax]
  434fbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434fbe:	inc    edx
  434fbf:	add    BYTE PTR [edx],ah
  434fc1:	add    eax,0x11993
  434fc6:	add    BYTE PTR [eax],al
  434fc8:	mov    eax,0x434f
	...
  434fdd:	add    BYTE PTR [eax],al
  434fdf:	add    BYTE PTR [ecx],al
  434fe1:	add    BYTE PTR [eax],al
  434fe3:	add    bh,bh
  434fe5:	(bad)  
  434fe6:	(bad)  
  434fe7:	jmp    DWORD PTR [eax-0x5b]
  434fea:	inc    edx
  434feb:	add    BYTE PTR [eax],al
  434fed:	add    BYTE PTR [eax],al
  434fef:	add    BYTE PTR [eax-0x5b],ch
  434ff2:	inc    edx
  434ff3:	add    BYTE PTR [edx],ah
  434ff5:	add    eax,0x21993
  434ffa:	add    BYTE PTR [eax],al
  434ffc:	in     al,0x4f
  434ffe:	inc    ebx
	...
  435013:	add    BYTE PTR [ecx],al
  435015:	add    BYTE PTR [eax],al
  435017:	add    bh,bh
  435019:	(bad)  
  43501a:	(bad)  
  43501b:	call   DWORD PTR [eax+0x42a5]
  435021:	add    BYTE PTR [eax],al
  435023:	add    BYTE PTR [eax+0x220042a5],bl
  435029:	add    eax,0x21993
  43502e:	add    BYTE PTR [eax],al
  435030:	sbb    BYTE PTR [eax+0x43],dl
	...
  435047:	add    BYTE PTR [ecx],al
  435049:	add    BYTE PTR [eax],al
  43504b:	add    BYTE PTR [eax+0x0],al
	...
  435056:	add    BYTE PTR [eax],al
  435058:	or     DWORD PTR [edx+eax*2+0x0],esi
  43505c:	(bad)  
  43505d:	(bad)  
  43505e:	(bad)  
  43505f:	inc    DWORD PTR [eax]
  435061:	add    BYTE PTR [eax],al
  435063:	add    bh,bh
  435065:	(bad)  
  435066:	(bad)  
  435067:	inc    DWORD PTR [eax]
	...
  435071:	add    BYTE PTR [eax],al
  435073:	add    BYTE PTR [ecx],al
  435075:	add    BYTE PTR [eax],al
  435077:	add    BYTE PTR [ecx],al
  435079:	add    BYTE PTR [eax],al
  43507b:	add    BYTE PTR [eax+edx*2+0x43],cl
  43507f:	add    BYTE PTR [edx],ah
  435081:	add    eax,0x21993
  435086:	add    BYTE PTR [eax],al
  435088:	pop    esp
  435089:	push   eax
  43508a:	inc    ebx
  43508b:	add    BYTE PTR [ecx],al
  43508d:	add    BYTE PTR [eax],al
  43508f:	add    BYTE PTR [eax+edx*2+0x43],ch
	...
  43509f:	add    BYTE PTR [ecx],al
  4350a1:	add    BYTE PTR [eax],al
  4350a3:	add    BYTE PTR [eax+0x0],al
	...
  4350ae:	add    BYTE PTR [eax],al
  4350b0:	xor    DWORD PTR [edi+0x42],esi
  4350b3:	add    BYTE PTR [eax],al
  4350b5:	add    BYTE PTR [eax],al
  4350b7:	add    BYTE PTR [edx],al
  4350b9:	add    BYTE PTR [eax],al
  4350bb:	add    BYTE PTR [ebx],al
  4350bd:	add    BYTE PTR [eax],al
  4350bf:	add    BYTE PTR [ecx],al
  4350c1:	add    BYTE PTR [eax],al
  4350c3:	add    BYTE PTR [eax+edx*2-0xffbd],ah
  4350ca:	(bad)  
  4350cb:	inc    DWORD PTR [eax]
  4350cd:	add    BYTE PTR [eax],al
  4350cf:	add    BYTE PTR [eax],al
  4350d1:	add    BYTE PTR [eax],al
  4350d3:	add    al,ah
  4350d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4350d6:	inc    edx
  4350d7:	add    BYTE PTR [eax],al
  4350d9:	add    BYTE PTR [eax],al
  4350db:	add    cl,ch
  4350dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4350de:	inc    edx
  4350df:	add    bh,bh
  4350e1:	(bad)  
  4350e2:	(bad)  
  4350e3:	inc    DWORD PTR [eax]
  4350e5:	add    BYTE PTR [eax],al
  4350e7:	add    BYTE PTR [edx],ah
  4350e9:	add    eax,0x41993
  4350ee:	add    BYTE PTR [eax],al
  4350f0:	enter  0x4350,0x0
  4350f4:	add    DWORD PTR [eax],eax
  4350f6:	add    BYTE PTR [eax],al
  4350f8:	mov    ah,0x50
  4350fa:	inc    ebx
	...
  435107:	add    BYTE PTR [ecx],al
  435109:	add    BYTE PTR [eax],al
  43510b:	add    BYTE PTR [eax+0x0],al
	...
  435116:	add    BYTE PTR [eax],al
  435118:	and    al,0x78
  43511a:	inc    edx
  43511b:	add    BYTE PTR [edx],al
  43511d:	add    BYTE PTR [eax],al
  43511f:	add    BYTE PTR [ebx],al
  435121:	add    BYTE PTR [eax],al
  435123:	add    BYTE PTR [eax+eax*1],al
  435126:	add    BYTE PTR [eax],al
  435128:	add    DWORD PTR [eax],eax
  43512a:	add    BYTE PTR [eax],al
  43512c:	or     al,0x51
  43512e:	inc    ebx
  43512f:	add    BYTE PTR [edx],ah
  435131:	add    eax,0x51993
  435136:	add    BYTE PTR [eax],al
  435138:	push   esp
  435139:	push   ecx
  43513a:	inc    ebx
  43513b:	add    BYTE PTR [ecx],al
  43513d:	add    BYTE PTR [eax],al
  43513f:	add    BYTE PTR [ecx+edx*2],bl
  435142:	inc    ebx
	...
  43514f:	add    BYTE PTR [ecx],al
  435151:	add    BYTE PTR [eax],al
  435153:	add    bh,bh
  435155:	(bad)  
  435156:	(bad)  
  435157:	call   DWORD PTR [eax]
  435159:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43515a:	inc    edx
  43515b:	add    BYTE PTR [eax],al
  43515d:	add    BYTE PTR [eax],al
  43515f:	add    BYTE PTR [eax],bl
  435161:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435162:	inc    edx
  435163:	add    BYTE PTR [ecx],al
  435165:	add    BYTE PTR [eax],al
  435167:	add    BYTE PTR [eax],al
  435169:	add    BYTE PTR [eax],al
  43516b:	add    BYTE PTR [edx],al
  43516d:	add    BYTE PTR [eax],al
  43516f:	add    BYTE PTR [ebx],ah
  435171:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435172:	inc    edx
  435173:	add    BYTE PTR [ecx],al
  435175:	add    BYTE PTR [eax],al
  435177:	add    BYTE PTR [eax],al
  435179:	add    BYTE PTR [eax],al
  43517b:	add    BYTE PTR [eax+0x0],al
	...
  435186:	add    BYTE PTR [eax],al
  435188:	repz js 0x4351cd
  43518b:	add    BYTE PTR [edx],al
  43518d:	add    BYTE PTR [eax],al
  43518f:	add    BYTE PTR [ebx],al
  435191:	add    BYTE PTR [eax],al
  435193:	add    BYTE PTR [eax+eax*1],al
  435196:	add    BYTE PTR [eax],al
  435198:	add    DWORD PTR [eax],eax
  43519a:	add    BYTE PTR [eax],al
  43519c:	jl     0x4351ef
  43519e:	inc    ebx
  43519f:	add    BYTE PTR [edx],ah
  4351a1:	add    eax,0x51993
  4351a6:	add    BYTE PTR [eax],al
  4351a8:	les    edx,FWORD PTR [ecx+0x43]
  4351ab:	add    BYTE PTR [ecx],al
  4351ad:	add    BYTE PTR [eax],al
  4351af:	add    BYTE PTR [ecx+edx*2+0x43],cl
	...
  4351be:	add    BYTE PTR [eax],al
  4351c0:	add    DWORD PTR [eax],eax
  4351c2:	add    BYTE PTR [eax],al
  4351c4:	(bad)  
  4351c5:	(bad)  
  4351c6:	(bad)  
  4351c7:	call   DWORD PTR [eax-0x5a]
  4351ca:	inc    edx
  4351cb:	add    BYTE PTR [eax],al
  4351cd:	add    BYTE PTR [eax],al
  4351cf:	add    BYTE PTR [eax-0x5a],bl
  4351d2:	inc    edx
  4351d3:	add    BYTE PTR [ecx],al
  4351d5:	add    BYTE PTR [eax],al
  4351d7:	add    BYTE PTR [eax],al
  4351d9:	add    BYTE PTR [eax],al
  4351db:	add    BYTE PTR [edx],al
  4351dd:	add    BYTE PTR [eax],al
  4351df:	add    BYTE PTR [ebx-0x5a],ah
  4351e2:	inc    edx
  4351e3:	add    BYTE PTR [ecx],al
	...
  4351ed:	add    BYTE PTR [eax],al
  4351ef:	add    BYTE PTR [eax+0x4275],dl
  4351f5:	add    BYTE PTR [eax],al
  4351f7:	add    ah,bh
  4351f9:	push   ecx
  4351fa:	inc    ebx
  4351fb:	add    BYTE PTR [eax+eax*1],al
  4351fe:	add    BYTE PTR [eax],al
  435200:	adc    BYTE PTR [edx+0x43],dl
  435203:	add    ah,al
  435205:	dec    ebp
  435206:	inc    ebx
  435207:	add    ah,bl
  435209:	push   edi
  43520a:	inc    ebx
  43520b:	add    BYTE PTR [eax],ah
  43520d:	push   esi
  43520e:	inc    ebx
  43520f:	add    BYTE PTR [eax],al
  435211:	add    BYTE PTR [eax],al
  435213:	add    BYTE PTR [ecx+eiz*8+0x43],bh
  435217:	add    BYTE PTR [eax],al
  435219:	add    BYTE PTR [eax],al
  43521b:	add    bh,bh
  43521d:	(bad)  
  43521e:	(bad)  
  43521f:	inc    DWORD PTR [eax]
  435221:	add    BYTE PTR [eax],al
  435223:	add    BYTE PTR [eax+eax*1+0x0],dl
  435227:	add    BYTE PTR [eax],ah
  435229:	jns    0x43526d
  43522b:	add    bh,bh
  43522d:	(bad)  
  43522e:	(bad)  
  43522f:	call   FWORD PTR [ecx-0xffbd5a]
  435235:	(bad)  
  435236:	(bad)  
  435237:	call   DWORD PTR [eax+0x220042a6]
  43523d:	add    eax,0x21993
  435242:	add    BYTE PTR [eax],al
  435244:	sub    al,0x52
  435246:	inc    ebx
	...
  43525b:	add    BYTE PTR [ecx],al
  43525d:	add    BYTE PTR [eax],al
  43525f:	add    bh,bh
  435261:	(bad)  
  435262:	(bad)  
  435263:	inc    eax
  435265:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435266:	inc    edx
  435267:	add    BYTE PTR [edx],ah
  435269:	add    eax,0x11993
  43526e:	add    BYTE PTR [eax],al
  435270:	pusha  
  435271:	push   edx
  435272:	inc    ebx
	...
  435287:	add    BYTE PTR [ecx],al
  435289:	add    BYTE PTR [eax],al
  43528b:	add    bh,bh
  43528d:	(bad)  
  43528e:	(bad)  
  43528f:	push   eax
  435291:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435292:	inc    edx
  435293:	add    BYTE PTR [edx],ah
  435295:	add    eax,0x11993
  43529a:	add    BYTE PTR [eax],al
  43529c:	mov    WORD PTR [edx+0x43],ss
	...
  4352b3:	add    BYTE PTR [ecx],al
  4352b5:	add    BYTE PTR [eax],al
  4352b7:	add    bh,bh
  4352b9:	(bad)  
  4352ba:	(bad)  
  4352bb:	jmp    DWORD PTR [eax]
  4352bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4352be:	inc    edx
  4352bf:	add    bh,bh
  4352c1:	(bad)  
  4352c2:	(bad)  
  4352c3:	jmp    FWORD PTR [ecx]
  4352c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4352c6:	inc    edx
  4352c7:	add    BYTE PTR [edx],ah
  4352c9:	add    eax,0x21993
  4352ce:	add    BYTE PTR [eax],al
  4352d0:	mov    eax,0x4352
	...
  4352e5:	add    BYTE PTR [eax],al
  4352e7:	add    BYTE PTR [ecx],al
  4352e9:	add    BYTE PTR [eax],al
  4352eb:	add    BYTE PTR [edx],ah
  4352ed:	add    eax,0x71993
  4352f2:	add    BYTE PTR [eax],al
  4352f4:	adc    BYTE PTR [ebx+0x43],dl
	...
  43530b:	add    BYTE PTR [ecx],al
  43530d:	add    BYTE PTR [eax],al
  43530f:	add    bh,bh
  435311:	(bad)  
  435312:	(bad)  
  435313:	(bad)  
  435314:	jge    0x4352bd
  435316:	inc    edx
  435317:	add    BYTE PTR [eax],al
  435319:	add    BYTE PTR [eax],al
  43531b:	add    BYTE PTR [eax-0x59],dl
  43531e:	inc    edx
  43531f:	add    BYTE PTR [ecx],al
  435321:	add    BYTE PTR [eax],al
  435323:	add    BYTE PTR [ebx-0x59],bl
  435326:	inc    edx
  435327:	add    BYTE PTR [edx],al
  435329:	add    BYTE PTR [eax],al
  43532b:	add    BYTE PTR [esi-0x59],ah
  43532e:	inc    edx
  43532f:	add    BYTE PTR [ecx],al
  435331:	add    BYTE PTR [eax],al
  435333:	add    BYTE PTR [esi-0x59],ah
  435336:	inc    edx
  435337:	add    BYTE PTR [eax+eax*1],al
  43533a:	add    BYTE PTR [eax],al
  43533c:	jno    0x4352e5
  43533e:	inc    edx
  43533f:	add    BYTE PTR [eax+eax*1],al
  435342:	add    BYTE PTR [eax],al
  435344:	lahf   
  435345:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435346:	inc    edx
  435347:	add    bh,bh
  435349:	(bad)  
  43534a:	(bad)  
  43534b:	jmp    eax
  43534d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43534e:	inc    edx
  43534f:	add    BYTE PTR [eax],al
  435351:	add    BYTE PTR [eax],al
  435353:	add    al,ch
  435355:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435356:	inc    edx
  435357:	add    bh,bh
  435359:	(bad)  
  43535a:	(bad)  
  43535b:	(bad)  
  43535c:	call   0x22439608
  435361:	add    eax,0x31993
  435366:	add    BYTE PTR [eax],al
  435368:	dec    eax
  435369:	push   ebx
  43536a:	inc    ebx
	...
  43537f:	add    BYTE PTR [ecx],al
  435381:	add    BYTE PTR [eax],al
  435383:	add    bh,bh
  435385:	(bad)  
  435386:	(bad)  
  435387:	call   DWORD PTR [eax]
  435389:	test   al,0x42
  43538b:	add    BYTE PTR [eax],al
  43538d:	add    BYTE PTR [eax],al
  43538f:	add    BYTE PTR [ecx],bl
  435391:	test   al,0x42
  435393:	add    BYTE PTR [ecx],al
  435395:	add    BYTE PTR [eax],al
  435397:	add    BYTE PTR ds:0x42a8,ah
  43539d:	add    BYTE PTR [eax],al
  43539f:	add    BYTE PTR [eax],dh
  4353a1:	test   al,0x42
  4353a3:	add    BYTE PTR [edx],ah
  4353a5:	add    eax,0x41993
  4353aa:	add    BYTE PTR [eax],al
  4353ac:	test   BYTE PTR [ebx+0x43],dl
	...
  4353c3:	add    BYTE PTR [ecx],al
  4353c5:	add    BYTE PTR [eax],al
  4353c7:	add    bh,bh
  4353c9:	(bad)  
  4353ca:	(bad)  
  4353cb:	push   DWORD PTR [eax-0x58]
  4353ce:	inc    edx
  4353cf:	add    BYTE PTR [edx],ah
  4353d1:	add    eax,0x11993
  4353d6:	add    BYTE PTR [eax],al
  4353d8:	enter  0x4353,0x0
	...
  4353f0:	add    DWORD PTR [eax],eax
  4353f2:	add    BYTE PTR [eax],al
  4353f4:	(bad)  
  4353f5:	(bad)  
  4353f6:	(bad)  
  4353f7:	jmp    DWORD PTR [eax+0x220042a8]
  4353fd:	add    eax,0x11993
  435402:	add    BYTE PTR [eax],al
  435404:	hlt    
  435405:	push   ebx
  435406:	inc    ebx
	...
  43541b:	add    BYTE PTR [ecx],al
  43541d:	add    BYTE PTR [eax],al
  43541f:	add    BYTE PTR [edx],ah
  435421:	add    eax,0x61993
  435426:	add    BYTE PTR [eax],al
  435428:	inc    esp
  435429:	push   esp
  43542a:	inc    ebx
	...
  43543f:	add    BYTE PTR [ecx],al
  435441:	add    BYTE PTR [eax],al
  435443:	add    bh,bh
  435445:	(bad)  
  435446:	(bad)  
  435447:	call   eax
  435449:	test   al,0x42
  43544b:	add    bh,bh
  43544d:	(bad)  
  43544e:	(bad)  
  43544f:	(bad)  
  435450:	fsubr  QWORD PTR [eax+0x10042]
  435456:	add    BYTE PTR [eax],al
  435458:	in     eax,0xa8
  43545a:	inc    edx
  43545b:	add    BYTE PTR [ecx],al
  43545d:	add    BYTE PTR [eax],al
  43545f:	add    al,dh
  435461:	test   al,0x42
  435463:	add    BYTE PTR [ecx],al
  435465:	add    BYTE PTR [eax],al
  435467:	add    ah,bh
  435469:	test   al,0x42
  43546b:	add    BYTE PTR [eax+eax*1],al
  43546e:	add    BYTE PTR [eax],al
  435470:	pop    es
  435471:	test   eax,0xffff0042
  435476:	(bad)  
  435477:	inc    DWORD PTR [eax-0x57]
  43547a:	inc    edx
  43547b:	add    BYTE PTR [edx],ah
  43547d:	add    eax,0x11993
  435482:	add    BYTE PTR [eax],al
  435484:	je     0x4354da
  435486:	inc    ebx
	...
  43549b:	add    BYTE PTR [ecx],al
  43549d:	add    BYTE PTR [eax],al
  43549f:	add    bh,bh
  4354a1:	(bad)  
  4354a2:	(bad)  
  4354a3:	push   DWORD PTR [eax-0x57]
  4354a6:	inc    edx
  4354a7:	add    BYTE PTR [edx],ah
  4354a9:	add    eax,0x11993
  4354ae:	add    BYTE PTR [eax],al
  4354b0:	mov    al,ds:0x4354
	...
  4354c5:	add    BYTE PTR [eax],al
  4354c7:	add    BYTE PTR [ecx],al
  4354c9:	add    BYTE PTR [eax],al
  4354cb:	add    bh,bh
  4354cd:	(bad)  
  4354ce:	(bad)  
  4354cf:	jmp    DWORD PTR [eax+0x220042a9]
  4354d5:	add    eax,0x11993
  4354da:	add    BYTE PTR [eax],al
  4354dc:	int3   
  4354dd:	push   esp
  4354de:	inc    ebx
	...
  4354f3:	add    BYTE PTR [ecx],al
  4354f5:	add    BYTE PTR [eax],al
  4354f7:	add    bh,bh
  4354f9:	(bad)  
  4354fa:	(bad)  
  4354fb:	call   eax
  4354fd:	test   eax,0x5220042
  435502:	xchg   ebx,eax
  435503:	sbb    DWORD PTR [ecx],eax
  435505:	add    BYTE PTR [eax],al
  435507:	add    al,bh
  435509:	push   esp
  43550a:	inc    ebx
	...
  43551f:	add    BYTE PTR [ecx],al
  435521:	add    BYTE PTR [eax],al
  435523:	add    bh,bh
  435525:	(bad)  
  435526:	(bad)  
  435527:	call   DWORD PTR [eax]
  435529:	stos   BYTE PTR es:[edi],al
  43552a:	inc    edx
  43552b:	add    BYTE PTR [edx],ah
  43552d:	add    eax,0x11993
  435532:	add    BYTE PTR [eax],al
  435534:	and    al,0x55
  435536:	inc    ebx
	...
  43554b:	add    BYTE PTR [ecx],al
  43554d:	add    BYTE PTR [eax],al
  43554f:	add    bh,bh
  435551:	(bad)  
  435552:	(bad)  
  435553:	dec    DWORD PTR [eax-0x56]
  435556:	inc    edx
  435557:	add    BYTE PTR [eax],al
  435559:	add    BYTE PTR [eax],al
  43555b:	add    BYTE PTR [eax-0x56],al
  43555e:	inc    edx
  43555f:	add    BYTE PTR [ecx],al
  435561:	add    BYTE PTR [eax],al
  435563:	add    BYTE PTR [edx-0x56],ah
  435566:	inc    edx
  435567:	add    BYTE PTR [edx],ah
  435569:	add    eax,0x31993
  43556e:	add    BYTE PTR [eax],al
  435570:	push   eax
  435571:	push   ebp
  435572:	inc    ebx
	...
  435587:	add    BYTE PTR [ecx],al
  435589:	add    BYTE PTR [eax],al
  43558b:	add    bh,bh
  43558d:	(bad)  
  43558e:	(bad)  
  43558f:	dec    eax
  435591:	stos   BYTE PTR es:[edi],al
  435592:	inc    edx
  435593:	add    BYTE PTR [eax],al
  435595:	add    BYTE PTR [eax],al
  435597:	add    BYTE PTR [eax+0x42aa],ah
  43559d:	add    BYTE PTR [eax],al
  43559f:	add    BYTE PTR [esi+0x220042aa],ch
  4355a5:	add    eax,0x31993
  4355aa:	add    BYTE PTR [eax],al
  4355ac:	mov    WORD PTR [ebp+0x43],ss
	...
  4355c3:	add    BYTE PTR [ecx],al
  4355c5:	add    BYTE PTR [eax],al
  4355c7:	add    bh,bh
  4355c9:	(bad)  
  4355ca:	(bad)  
  4355cb:	inc    DWORD PTR [eax]
  4355cd:	stos   DWORD PTR es:[edi],eax
  4355ce:	inc    edx
  4355cf:	add    BYTE PTR [edx],ah
  4355d1:	add    eax,0x11993
  4355d6:	add    BYTE PTR [eax],al
  4355d8:	enter  0x4355,0x0
	...
  4355f0:	add    DWORD PTR [eax],eax
  4355f2:	add    BYTE PTR [eax],al
  4355f4:	(bad)  
  4355f5:	(bad)  
  4355f6:	(bad)  
  4355f7:	push   DWORD PTR [eax]
  4355f9:	stos   DWORD PTR es:[edi],eax
  4355fa:	inc    edx
  4355fb:	add    BYTE PTR [edx],ah
  4355fd:	add    eax,0x11993
  435602:	add    BYTE PTR [eax],al
  435604:	hlt    
  435605:	push   ebp
  435606:	inc    ebx
	...
  43561b:	add    BYTE PTR [ecx],al
  43561d:	add    BYTE PTR [eax],al
  43561f:	add    BYTE PTR [eax],al
  435621:	add    BYTE PTR [eax],al
  435623:	add    BYTE PTR [eax-0x1d],ah
  435626:	inc    ebx
  435627:	add    BYTE PTR [eax],al
  435629:	add    BYTE PTR [eax],al
  43562b:	add    bh,bh
  43562d:	(bad)  
  43562e:	(bad)  
  43562f:	inc    DWORD PTR [eax]
  435631:	add    BYTE PTR [eax],al
  435633:	add    BYTE PTR [eax+eax*1],cl
  435636:	add    BYTE PTR [eax],al
  435638:	push   esi
  435639:	push   eax
  43563a:	inc    edx
  43563b:	add    BYTE PTR [eax],al
  43563d:	add    BYTE PTR [eax],al
  43563f:	add    BYTE PTR [ebx+eiz*8+0x43],bh
  435643:	add    BYTE PTR [eax],al
  435645:	add    BYTE PTR [eax],al
  435647:	add    bh,bh
  435649:	(bad)  
  43564a:	(bad)  
  43564b:	inc    DWORD PTR [eax]
  43564d:	add    BYTE PTR [eax],al
  43564f:	add    BYTE PTR [eax],ch
  435651:	add    BYTE PTR [eax],al
  435653:	add    al,dl
  435655:	sub    BYTE PTR [eax+0x0],al
  435658:	add    BYTE PTR [eax],al
  43565a:	add    BYTE PTR [eax],al
  43565c:	pushf  
  43565d:	jecxz  0x4356a2
  43565f:	add    BYTE PTR [eax],al
  435661:	add    BYTE PTR [eax],al
  435663:	add    bh,bh
  435665:	(bad)  
  435666:	(bad)  
  435667:	inc    DWORD PTR [eax]
  435669:	add    BYTE PTR [eax],al
  43566b:	add    BYTE PTR [eax],ch
  43566d:	add    BYTE PTR [eax],al
  43566f:	add    BYTE PTR [eax+0x3004028],dh
  435675:	add    BYTE PTR [eax],al
  435677:	add    BYTE PTR [eax+0x56],bl
  43567a:	inc    ebx
  43567b:	add    BYTE PTR [esi+edx*2],bh
  43567e:	inc    ebx
  43567f:	add    BYTE PTR [eax],ah
  435681:	push   esi
  435682:	inc    ebx
  435683:	add    BYTE PTR [eax],al
  435685:	add    BYTE PTR [eax],al
  435687:	add    BYTE PTR [eax+0x4028],dl
  43568d:	add    BYTE PTR [eax],al
  43568f:	add    BYTE PTR [esi+edx*2+0x43],dh
  435693:	add    BYTE PTR [eax],al
  435695:	add    BYTE PTR [eax],al
  435697:	add    BYTE PTR [ebx+eiz*8+0x43],bh
  43569e:	add    BYTE PTR [eax],al
  4356a0:	(bad)  
  4356a1:	(bad)  
  4356a2:	(bad)  
  4356a3:	inc    DWORD PTR [eax]
  4356a5:	add    BYTE PTR [eax],al
  4356a7:	add    BYTE PTR [eax+eax*1],cl
  4356aa:	add    BYTE PTR [eax],al
  4356ac:	xor    BYTE PTR [ebx],ch
  4356ae:	inc    eax
  4356af:	add    BYTE PTR [edx],al
  4356b1:	add    BYTE PTR [eax],al
  4356b3:	add    BYTE PTR [esi+edx*2+0x56200043],dl
  4356ba:	inc    ebx
  4356bb:	add    BYTE PTR [eax],al
  4356bd:	add    BYTE PTR [eax],al
  4356bf:	add    al,dh
  4356c1:	sub    al,BYTE PTR [eax+0x0]
  4356c4:	add    BYTE PTR [eax],al
  4356c6:	add    BYTE PTR [eax],al
  4356c8:	mov    al,0x56
  4356ca:	inc    ebx
  4356cb:	add    BYTE PTR [eax],al
  4356cd:	add    BYTE PTR [eax],al
  4356cf:	add    BYTE PTR [eax],ch
  4356d1:	in     al,0x43
  4356d3:	add    BYTE PTR [eax],al
  4356d5:	add    BYTE PTR [eax],al
  4356d7:	add    bh,bh
  4356d9:	(bad)  
  4356da:	(bad)  
  4356db:	inc    DWORD PTR [eax]
  4356dd:	add    BYTE PTR [eax],al
  4356df:	add    BYTE PTR [eax],ch
  4356e1:	add    BYTE PTR [eax],al
  4356e3:	add    BYTE PTR [eax],al
  4356e5:	das    
  4356e6:	inc    eax
  4356e7:	add    BYTE PTR [eax],al
  4356e9:	add    BYTE PTR [eax],al
  4356eb:	add    BYTE PTR [eax+0x43e4],dh
  4356f1:	add    BYTE PTR [eax],al
  4356f3:	add    bh,bh
  4356f5:	(bad)  
  4356f6:	(bad)  
  4356f7:	inc    DWORD PTR [eax]
  4356f9:	add    BYTE PTR [eax],al
  4356fb:	add    BYTE PTR [eax+eax*1],ah
  4356fe:	add    BYTE PTR [eax],al
  435700:	mov    al,ds:0x402f
  435705:	add    BYTE PTR [eax],al
  435707:	add    BYTE PTR [eiz*8+0x43],cl
  43570e:	add    BYTE PTR [eax],al
  435710:	(bad)  
  435711:	(bad)  
  435712:	(bad)  
  435713:	inc    DWORD PTR [eax]
  435715:	add    BYTE PTR [eax],al
  435717:	add    BYTE PTR [eax],dl
  435719:	add    BYTE PTR [eax],al
  43571b:	add    BYTE PTR [eax+0x30],al
  43571e:	inc    eax
  43571f:	add    BYTE PTR [eax],al
  435721:	add    BYTE PTR [eax],al
  435723:	add    BYTE PTR [eax],bh
  435725:	in     eax,0x43
  435727:	add    BYTE PTR [eax],al
  435729:	add    BYTE PTR [eax],al
  43572b:	add    bh,bh
  43572d:	(bad)  
  43572e:	(bad)  
  43572f:	inc    DWORD PTR [eax]
  435731:	add    BYTE PTR [eax],al
  435733:	add    BYTE PTR [eax],dl
  435735:	add    BYTE PTR [eax],al
  435737:	add    BYTE PTR [eax+0x30],dh
  43573a:	inc    eax
  43573b:	add    BYTE PTR [eax],al
  43573d:	add    BYTE PTR [eax],al
  43573f:	add    al,bl
  435741:	jecxz  0x435786
  435743:	add    BYTE PTR [eax],dl
  435745:	add    BYTE PTR [eax],al
  435747:	add    bh,bh
  435749:	(bad)  
  43574a:	(bad)  
  43574b:	inc    DWORD PTR [eax]
  43574d:	add    BYTE PTR [eax],al
  43574f:	add    BYTE PTR [eax+eax*1],dl
  435752:	add    BYTE PTR [eax],al
  435754:	shl    BYTE PTR [eax],0x40
  435757:	add    BYTE PTR [eax],al
  435759:	add    BYTE PTR [eax],al
  43575b:	add    al,bh
  43575d:	jecxz  0x4357a2
  43575f:	add    BYTE PTR [eax+eax*1],ah
  435762:	add    BYTE PTR [eax],al
  435764:	(bad)  
  435765:	(bad)  
  435766:	(bad)  
  435767:	inc    DWORD PTR [eax]
  435769:	add    BYTE PTR [eax],al
  43576b:	add    BYTE PTR [eax+eax*1],al
  43576e:	add    BYTE PTR [eax],al
  435770:	and    BYTE PTR [ecx],dh
  435772:	inc    eax
  435773:	add    BYTE PTR [edi],al
  435775:	add    BYTE PTR [eax],al
  435777:	add    ah,cl
  435779:	push   esi
  43577a:	inc    ebx
  43577b:	add    al,ch
  43577d:	push   esi
  43577e:	inc    ebx
  43577f:	add    BYTE PTR [edi+edx*2],al
  435782:	inc    ebx
  435783:	add    BYTE PTR [eax],ah
  435785:	push   edi
  435786:	inc    ebx
  435787:	add    BYTE PTR [eax],ah
  435789:	push   esi
  43578a:	inc    ebx
  43578b:	add    BYTE PTR [edi+edx*2],bh
  43578e:	inc    ebx
  43578f:	add    BYTE PTR [eax+0x57],bl
  435792:	inc    ebx
  435793:	add    BYTE PTR [eax],al
  435795:	add    BYTE PTR [eax],al
  435797:	add    BYTE PTR [eax],ah
  435799:	sub    eax,0x40
  43579e:	add    BYTE PTR [eax],al
  4357a0:	je     0x4357f9
  4357a2:	inc    ebx
  4357a3:	add    BYTE PTR [eax],al
  4357a5:	add    BYTE PTR [eax],al
  4357a7:	add    al,bh
  4357a9:	jecxz  0x4357ee
  4357ab:	add    BYTE PTR [eax+eax*1],bh
  4357ae:	add    BYTE PTR [eax],al
  4357b0:	(bad)  
  4357b1:	(bad)  
  4357b2:	(bad)  
  4357b3:	inc    DWORD PTR [eax]
  4357b5:	add    BYTE PTR [eax],al
  4357b7:	add    BYTE PTR [eax+eax*1],al
  4357ba:	add    BYTE PTR [eax],al
  4357bc:	and    BYTE PTR [ecx],dh
  4357be:	inc    eax
  4357bf:	add    BYTE PTR [eax],al
  4357c1:	add    BYTE PTR [eax],al
  4357c3:	add    al,bl
  4357c5:	jecxz  0x43580a
  4357c7:	add    BYTE PTR [eax],ch
  4357c9:	add    BYTE PTR [eax],al
  4357cb:	add    bh,bh
  4357cd:	(bad)  
  4357ce:	(bad)  
  4357cf:	inc    DWORD PTR [eax]
  4357d1:	add    BYTE PTR [eax],al
  4357d3:	add    BYTE PTR [eax+eax*1],dl
  4357d6:	add    BYTE PTR [eax],al
  4357d8:	shl    BYTE PTR [eax],0x40
  4357db:	add    BYTE PTR [eax],al
  4357dd:	add    BYTE PTR [eax],al
  4357df:	add    al,dl
  4357e1:	in     eax,0x43
  4357e3:	add    BYTE PTR [eax],al
  4357e5:	add    BYTE PTR [eax],al
  4357e7:	add    bh,bh
  4357e9:	(bad)  
  4357ea:	(bad)  
  4357eb:	inc    DWORD PTR [eax]
  4357ed:	add    BYTE PTR [eax],al
  4357ef:	add    BYTE PTR [eax],ch
  4357f1:	add    BYTE PTR [eax],al
  4357f3:	add    BYTE PTR [eax+0x4043],dh
  4357f9:	add    BYTE PTR [eax],al
  4357fb:	add    BYTE PTR [eax],bl
  4357fd:	out    0x43,al
  4357ff:	add    BYTE PTR [eax],al
  435801:	add    BYTE PTR [eax],al
  435803:	add    bh,bh
  435805:	(bad)  
  435806:	(bad)  
  435807:	inc    DWORD PTR [eax]
  435809:	add    BYTE PTR [eax],al
  43580b:	add    BYTE PTR [eax+eax*1],cl
  43580e:	add    BYTE PTR [eax],al
  435810:	cs push eax
  435812:	inc    edx
  435813:	add    BYTE PTR [ecx],al
  435815:	add    BYTE PTR [eax],al
  435817:	add    al,bh
  435819:	push   edi
  43581a:	inc    ebx
  43581b:	add    BYTE PTR [eax],al
  43581d:	add    BYTE PTR [eax],al
  43581f:	add    BYTE PTR [eax+edx*2],dh
  435822:	inc    edx
  435823:	add    BYTE PTR [eax],al
  435825:	add    BYTE PTR [eax],al
  435827:	add    BYTE PTR [eax+ebx*2],dl
  43582a:	inc    ebx
  43582b:	add    BYTE PTR [eax],al
  43582d:	add    BYTE PTR [eax],al
  43582f:	add    BYTE PTR [eax-0x1a],dl
  435832:	inc    ebx
  435833:	add    BYTE PTR [eax],al
  435835:	add    BYTE PTR [eax],al
  435837:	add    bh,bh
  435839:	(bad)  
  43583a:	(bad)  
  43583b:	inc    DWORD PTR [eax]
  43583d:	add    BYTE PTR [eax],al
  43583f:	add    BYTE PTR [eax+0x0],al
  435842:	add    BYTE PTR [eax],al
  435844:	add    BYTE PTR [eax+eax*2],bh
  435847:	add    BYTE PTR [eax],al
  435849:	add    BYTE PTR [eax],al
  43584b:	add    al,dl
  43584d:	out    0x43,al
  43584f:	add    BYTE PTR [eax],al
  435851:	add    BYTE PTR [eax],al
  435853:	add    bh,bh
  435855:	(bad)  
  435856:	(bad)  
  435857:	inc    DWORD PTR [eax]
  435859:	add    BYTE PTR [eax],al
  43585b:	add    BYTE PTR [eax+eax*1],bh
  43585e:	add    BYTE PTR [eax],al
  435860:	xor    BYTE PTR [eax+eax*2],bh
  435863:	add    BYTE PTR [eax],al
  435865:	add    BYTE PTR [eax],al
  435867:	add    al,dh
  435869:	in     eax,0x43
  43586b:	add    BYTE PTR [eax],al
  43586d:	add    BYTE PTR [eax],al
  43586f:	add    bh,bh
  435871:	(bad)  
  435872:	(bad)  
  435873:	inc    DWORD PTR [eax]
  435875:	add    BYTE PTR [eax],al
  435877:	add    BYTE PTR [eax],ch
  435879:	add    BYTE PTR [eax],al
  43587b:	add    al,dl
  43587d:	cmp    al,0x40
  43587f:	add    BYTE PTR [edi],al
  435881:	add    BYTE PTR [eax],al
  435883:	add    BYTE PTR [eax+ebx*2],ch
  435886:	inc    ebx
  435887:	add    BYTE PTR [eax+0x58],cl
  43588a:	inc    ebx
  43588b:	add    BYTE PTR [eax+ebx*2+0x43],ah
  43588f:	add    ah,bl
  435891:	push   edi
  435892:	inc    ebx
  435893:	add    BYTE PTR [eax],ah
  435895:	push   esi
  435896:	inc    ebx
  435897:	add    al,al
  435899:	push   edi
  43589a:	inc    ebx
  43589b:	add    BYTE PTR [edi+edx*2+0x43],ah
  4358a2:	add    BYTE PTR [eax],al
  4358a4:	adc    BYTE PTR [esi],bh
  4358a6:	inc    eax
  4358a7:	add    BYTE PTR [eax],al
  4358a9:	add    BYTE PTR [eax],al
  4358ab:	add    BYTE PTR [eax+0x4358],al
  4358b1:	add    BYTE PTR [eax],al
  4358b3:	add    BYTE PTR [eax],ch
  4358b5:	out    0x43,eax
  4358b7:	add    BYTE PTR [eax],al
  4358b9:	add    BYTE PTR [eax],al
  4358bb:	add    bh,bh
  4358bd:	(bad)  
  4358be:	(bad)  
  4358bf:	inc    DWORD PTR [eax]
  4358c1:	add    BYTE PTR [eax],al
  4358c3:	add    BYTE PTR [eax+eax*1],cl
  4358c6:	add    BYTE PTR [eax],al
  4358c8:	jo     0x43591b
  4358ca:	inc    edx
  4358cb:	add    BYTE PTR [eax],al
  4358cd:	add    BYTE PTR [eax],al
  4358cf:	add    al,cl
  4358d1:	out    0x43,eax
  4358d3:	add    BYTE PTR [eax],al
  4358d5:	add    BYTE PTR [eax],al
  4358d7:	add    bh,bh
  4358d9:	(bad)  
  4358da:	(bad)  
  4358db:	inc    DWORD PTR [eax]
  4358dd:	add    BYTE PTR [eax],al
  4358df:	add    BYTE PTR [eax+eax*1],ch
  4358e2:	add    BYTE PTR [eax],al
  4358e4:	shl    BYTE PTR [edi+0x40],1
  4358e7:	add    BYTE PTR [eax],al
  4358e9:	add    BYTE PTR [eax],al
  4358eb:	add    BYTE PTR [eax-0x18],cl
  4358ee:	inc    ebx
  4358ef:	add    BYTE PTR [eax],al
  4358f1:	add    BYTE PTR [eax],al
  4358f3:	add    bh,bh
  4358f5:	(bad)  
  4358f6:	(bad)  
  4358f7:	inc    DWORD PTR [eax]
  4358f9:	add    BYTE PTR [eax],al
  4358fb:	add    BYTE PTR [eax],ch
  4358fd:	add    BYTE PTR [eax],al
  4358ff:	add    BYTE PTR [eax],al
  435901:	js     0x435943
  435903:	add    BYTE PTR [eax],al
  435905:	add    BYTE PTR [eax],al
  435907:	add    BYTE PTR [edi+eiz*8+0x43],al
  43590b:	add    BYTE PTR [eax],al
  43590d:	add    BYTE PTR [eax],al
  43590f:	add    bh,bh
  435911:	(bad)  
  435912:	(bad)  
  435913:	inc    DWORD PTR [eax]
  435915:	add    BYTE PTR [eax],al
  435917:	add    BYTE PTR [eax+eax*1],dl
  43591a:	add    BYTE PTR [eax],al
  43591c:	mov    al,ds:0x4078
  435921:	add    BYTE PTR [eax],al
  435923:	add    al,bl
  435925:	jecxz  0x43596a
  435927:	add    BYTE PTR [eax+eax*1],dl
  43592a:	add    BYTE PTR [eax],al
  43592c:	(bad)  
  43592d:	(bad)  
  43592e:	(bad)  
  43592f:	inc    DWORD PTR [eax]
  435931:	add    BYTE PTR [eax],al
  435933:	add    BYTE PTR [eax+eax*1],dl
  435936:	add    BYTE PTR [eax],al
  435938:	shl    BYTE PTR [eax],0x40
  43593b:	add    BYTE PTR [eax],al
  43593d:	add    BYTE PTR [eax],al
  43593f:	add    al,bh
  435941:	jecxz  0x435986
  435943:	add    BYTE PTR [eax],ch
  435945:	add    BYTE PTR [eax],al
  435947:	add    bh,bh
  435949:	(bad)  
  43594a:	(bad)  
  43594b:	inc    DWORD PTR [eax]
  43594d:	add    BYTE PTR [eax],al
  43594f:	add    BYTE PTR [eax+eax*1],al
  435952:	add    BYTE PTR [eax],al
  435954:	and    BYTE PTR [ecx],dh
  435956:	inc    eax
  435957:	add    BYTE PTR [edi],al
  435959:	add    BYTE PTR [eax],al
  43595b:	add    ah,cl
  43595d:	pop    eax
  43595e:	inc    ebx
  43595f:	add    al,ch
  435961:	pop    eax
  435962:	inc    ebx
  435963:	add    BYTE PTR [ecx+ebx*2],al
  435966:	inc    ebx
  435967:	add    BYTE PTR [eax+0x20004358],dh
  43596d:	push   esi
  43596e:	inc    ebx
  43596f:	add    BYTE PTR [eax],ah
  435971:	pop    ecx
  435972:	inc    ebx
  435973:	add    BYTE PTR [ecx+ebx*2],bh
  435976:	inc    ebx
  435977:	add    BYTE PTR [eax],al
  435979:	add    BYTE PTR [eax],al
  43597b:	add    al,dl
  43597d:	jns    0x4359bf
  43597f:	add    BYTE PTR [eax],al
  435981:	add    BYTE PTR [eax],al
  435983:	add    BYTE PTR [eax+0x59],bl
  435986:	inc    ebx
  435987:	add    BYTE PTR [eax],al
  435989:	add    BYTE PTR [eax],al
  43598b:	add    BYTE PTR [eax],cl
  43598d:	jmp    0x0:0x43
  435994:	(bad)  
  435995:	(bad)  
  435996:	(bad)  
  435997:	inc    DWORD PTR [eax]
  435999:	add    BYTE PTR [eax],al
  43599b:	add    BYTE PTR [eax],ch
  43599d:	add    BYTE PTR [eax],al
  43599f:	add    BYTE PTR [eax+0x20040a0],al
  4359a5:	add    BYTE PTR [eax],al
  4359a7:	add    BYTE PTR [eax+0x20004358],dh
  4359ad:	push   esi
  4359ae:	inc    ebx
  4359af:	add    BYTE PTR [eax],al
  4359b1:	add    BYTE PTR [eax],al
  4359b3:	add    BYTE PTR [esi+0x51],dh
  4359b6:	inc    edx
  4359b7:	add    BYTE PTR [eax],al
  4359b9:	add    BYTE PTR [eax],al
  4359bb:	add    BYTE PTR [ecx+ebx*2+0x43],ah
  4359c2:	add    BYTE PTR [eax],al
  4359c4:	sub    dl,ch
  4359c6:	inc    ebx
  4359c7:	add    BYTE PTR [eax],al
  4359c9:	add    BYTE PTR [eax],al
  4359cb:	add    bh,bh
  4359cd:	(bad)  
  4359ce:	(bad)  
  4359cf:	inc    DWORD PTR [eax]
  4359d1:	add    BYTE PTR [eax],al
  4359d3:	add    BYTE PTR [eax+0x0],al
  4359d6:	add    BYTE PTR [eax],al
  4359d8:	mov    al,ds:0x4085
  4359dd:	add    BYTE PTR [eax],al
  4359df:	add    BYTE PTR [eax+0x43ea],ah
  4359e5:	add    BYTE PTR [eax],al
  4359e7:	add    bh,bh
  4359e9:	(bad)  
  4359ea:	(bad)  
  4359eb:	inc    DWORD PTR [eax]
  4359ed:	add    BYTE PTR [eax],al
  4359ef:	add    BYTE PTR [eax+eax*1],bh
  4359f2:	add    BYTE PTR [eax],al
  4359f4:	inc    eax
  4359f5:	xchg   BYTE PTR [eax+0x0],al
  4359f8:	push   es
  4359f9:	add    BYTE PTR [eax],al
  4359fb:	add    al,al
  4359fd:	pop    ecx
  4359fe:	inc    ebx
  4359ff:	add    ah,bl
  435a01:	pop    ecx
  435a02:	inc    ebx
  435a03:	add    ah,bl
  435a05:	push   edi
  435a06:	inc    ebx
  435a07:	add    BYTE PTR [eax],ah
  435a09:	push   esi
  435a0a:	inc    ebx
  435a0b:	add    al,al
  435a0d:	push   edi
  435a0e:	inc    ebx
  435a0f:	add    BYTE PTR [edi+edx*2+0x43],ah
  435a16:	add    BYTE PTR [eax],al
  435a18:	mov    al,0x83
  435a1a:	inc    eax
  435a1b:	add    BYTE PTR [eax],al
  435a1d:	add    BYTE PTR [eax],al
  435a1f:	add    al,bh
  435a21:	pop    ecx
  435a22:	inc    ebx
  435a23:	add    BYTE PTR [eax],al
  435a25:	add    BYTE PTR [eax],al
  435a27:	add    al,dh
  435a29:	jmp    0x0:0x43
  435a30:	(bad)  
  435a31:	(bad)  
  435a32:	(bad)  
  435a33:	inc    DWORD PTR [eax]
  435a35:	add    BYTE PTR [eax],al
  435a37:	add    BYTE PTR [eax+0x0],al
  435a3a:	add    BYTE PTR [eax],al
  435a3c:	inc    eax
  435a3d:	xchg   esp,eax
  435a3e:	inc    eax
  435a3f:	add    BYTE PTR [eax],al
  435a41:	add    BYTE PTR [eax],al
  435a43:	add    BYTE PTR [eax-0x15],bh
  435a46:	inc    ebx
  435a47:	add    BYTE PTR [eax],al
  435a49:	add    BYTE PTR [eax],al
  435a4b:	add    bh,bh
  435a4d:	(bad)  
  435a4e:	(bad)  
  435a4f:	inc    DWORD PTR [eax]
  435a51:	add    BYTE PTR [eax],al
  435a53:	add    BYTE PTR [eax+eax*1],bh
  435a56:	add    BYTE PTR [eax],al
  435a58:	loopne 0x4359ee
  435a5a:	inc    eax
  435a5b:	add    BYTE PTR [eax],al
  435a5d:	add    BYTE PTR [eax],al
  435a5f:	add    al,bl
  435a61:	jmp    0x435aa6
  435a63:	add    BYTE PTR [eax],al
  435a65:	add    BYTE PTR [eax],al
  435a67:	add    bh,bh
  435a69:	(bad)  
  435a6a:	(bad)  
  435a6b:	inc    DWORD PTR [eax]
  435a6d:	add    BYTE PTR [eax],al
  435a6f:	add    BYTE PTR [eax],ch
  435a71:	add    BYTE PTR [eax],al
  435a73:	add    BYTE PTR [eax+0x8004095],al
  435a79:	add    BYTE PTR [eax],al
  435a7b:	add    BYTE PTR [edx+ebx*2],ah
  435a7e:	inc    ebx
  435a7f:	add    BYTE PTR [eax+0x5a],al
  435a82:	inc    ebx
  435a83:	add    BYTE PTR [edx+ebx*2+0x43],bl
  435a87:	add    BYTE PTR [eax+0x3c004359],cl
  435a8d:	push   esi
  435a8e:	inc    ebx
  435a8f:	add    BYTE PTR [eax],ah
  435a91:	push   esi
  435a92:	inc    ebx
  435a93:	add    al,al
  435a95:	push   edi
  435a96:	inc    ebx
  435a97:	add    BYTE PTR [edi+edx*2+0x43],ah
  435a9e:	add    BYTE PTR [eax],al
  435aa0:	push   eax
  435aa1:	xchg   edx,eax
  435aa2:	inc    eax
  435aa3:	add    BYTE PTR [eax],al
  435aa5:	add    BYTE PTR [eax],al
  435aa7:	add    BYTE PTR [eax+0x5a],bh
  435aaa:	inc    ebx
  435aab:	add    BYTE PTR [eax],al
  435aad:	add    BYTE PTR [eax],al
  435aaf:	add    BYTE PTR [eax],cl
  435ab1:	in     al,dx
  435ab2:	inc    ebx
  435ab3:	add    BYTE PTR [eax],al
  435ab5:	add    BYTE PTR [eax],al
  435ab7:	add    bh,bh
  435ab9:	(bad)  
  435aba:	(bad)  
  435abb:	inc    DWORD PTR [eax]
  435abd:	add    BYTE PTR [eax],al
  435abf:	add    BYTE PTR [eax],ch
  435ac1:	add    BYTE PTR [eax],al
  435ac3:	add    BYTE PTR [eax+0x40a4],ah
  435ac9:	add    BYTE PTR [eax],al
  435acb:	add    BYTE PTR [eax+0x43ec],al
  435ad1:	add    BYTE PTR [eax],al
  435ad3:	add    bh,bh
  435ad5:	(bad)  
  435ad6:	(bad)  
  435ad7:	inc    DWORD PTR [eax]
  435ad9:	add    BYTE PTR [eax],al
  435adb:	add    BYTE PTR [eax+eax*1],ah
  435ade:	add    BYTE PTR [eax],al
  435ae0:	push   eax
  435ae1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435ae2:	inc    eax
  435ae3:	add    BYTE PTR [eax],al
  435ae5:	add    BYTE PTR [eax],al
  435ae7:	add    al,dl
  435ae9:	in     al,dx
  435aea:	inc    ebx
  435aeb:	add    BYTE PTR [eax],al
  435aed:	add    BYTE PTR [eax],al
  435aef:	add    bh,bh
  435af1:	(bad)  
  435af2:	(bad)  
  435af3:	inc    DWORD PTR [eax]
  435af5:	add    BYTE PTR [eax],al
  435af7:	add    BYTE PTR [eax],dl
  435af9:	add    BYTE PTR [eax],al
  435afb:	add    BYTE PTR [eax],al
  435afd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435afe:	inc    eax
  435aff:	add    BYTE PTR [edi],al
  435b01:	add    BYTE PTR [eax],al
  435b03:	add    BYTE PTR [edx+ebx*2+0x5ac80043],ch
  435b0a:	inc    ebx
  435b0b:	add    ah,ah
  435b0d:	pop    edx
  435b0e:	inc    ebx
  435b0f:	add    BYTE PTR [eax],ah
  435b11:	push   edi
  435b12:	inc    ebx
  435b13:	add    BYTE PTR [eax],ah
  435b15:	push   esi
  435b16:	inc    ebx
  435b17:	add    BYTE PTR [edi+edx*2],bh
  435b1a:	inc    ebx
  435b1b:	add    BYTE PTR [eax+0x57],bl
  435b1e:	inc    ebx
  435b1f:	add    BYTE PTR [eax],al
  435b21:	add    BYTE PTR [eax],al
  435b23:	add    al,dl
  435b25:	mov    ds:0x40,al
  435b2a:	add    BYTE PTR [eax],al
  435b2c:	add    BYTE PTR [ebx+0x43],bl
  435b2f:	add    BYTE PTR [eax],al
  435b31:	add    BYTE PTR [eax],al
  435b33:	add    al,dh
  435b35:	in     al,dx
  435b36:	inc    ebx
  435b37:	add    BYTE PTR [eax],al
  435b39:	add    BYTE PTR [eax],al
  435b3b:	add    bh,bh
  435b3d:	(bad)  
  435b3e:	(bad)  
  435b3f:	inc    DWORD PTR [eax]
  435b41:	add    BYTE PTR [eax],al
  435b43:	add    BYTE PTR [eax+0x0],al
  435b46:	add    BYTE PTR [eax],al
  435b48:	adc    BYTE PTR [edi+0x40],bl
  435b4e:	add    BYTE PTR [eax],al
  435b50:	jo     0x435b3f
  435b52:	inc    ebx
  435b53:	add    BYTE PTR [eax],al
  435b55:	add    BYTE PTR [eax],al
  435b57:	add    bh,bh
  435b59:	(bad)  
  435b5a:	(bad)  
  435b5b:	inc    DWORD PTR [eax]
  435b5d:	add    BYTE PTR [eax],al
  435b5f:	add    BYTE PTR [eax+eax*1],bh
  435b62:	add    BYTE PTR [eax],al
  435b64:	rcr    BYTE PTR [edi+0x40],0x0
  435b6b:	add    al,cl
  435b6d:	in     eax,dx
  435b6e:	inc    ebx
  435b6f:	add    BYTE PTR [eax],al
  435b71:	add    BYTE PTR [eax],al
  435b73:	add    bh,bh
  435b75:	(bad)  
  435b76:	(bad)  
  435b77:	inc    DWORD PTR [eax]
  435b79:	add    BYTE PTR [eax],al
  435b7b:	add    BYTE PTR [eax],ch
  435b7d:	add    BYTE PTR [eax],al
  435b7f:	add    BYTE PTR [eax-0x60],ah
  435b82:	inc    eax
  435b83:	add    BYTE PTR [eax],cl
  435b85:	add    BYTE PTR [eax],al
  435b87:	add    BYTE PTR [eax],dh
  435b89:	pop    ebx
  435b8a:	inc    ebx
  435b8b:	add    BYTE PTR [ebx+ebx*2+0x43],cl
  435b8f:	add    BYTE PTR [eax+0x5b],ch
  435b92:	inc    ebx
  435b93:	add    BYTE PTR [eax+0x3c004359],cl
  435b99:	push   esi
  435b9a:	inc    ebx
  435b9b:	add    BYTE PTR [eax],ah
  435b9d:	push   esi
  435b9e:	inc    ebx
  435b9f:	add    al,al
  435ba1:	push   edi
  435ba2:	inc    ebx
  435ba3:	add    BYTE PTR [edi+edx*2+0x43],ah
  435baa:	add    BYTE PTR [eax],al
  435bac:	and    BYTE PTR [ebp+0x40],bl
  435bb2:	add    BYTE PTR [eax],al
  435bb4:	test   BYTE PTR [ebx+0x43],bl
  435bb7:	add    BYTE PTR [eax],al
  435bb9:	add    BYTE PTR [eax],al
  435bbb:	add    al,dh
  435bbd:	in     eax,dx
  435bbe:	inc    ebx
  435bbf:	add    BYTE PTR [eax],al
  435bc1:	add    BYTE PTR [eax],al
  435bc3:	add    bh,bh
  435bc5:	(bad)  
  435bc6:	(bad)  
  435bc7:	inc    DWORD PTR [eax]
  435bc9:	add    BYTE PTR [eax],al
  435bcb:	add    BYTE PTR [eax+0x0],al
  435bce:	add    BYTE PTR [eax],al
  435bd0:	rcr    BYTE PTR [ecx+0x40],0x0
  435bd7:	add    BYTE PTR [eax-0x12],dh
  435bda:	inc    ebx
  435bdb:	add    BYTE PTR [eax],al
  435bdd:	add    BYTE PTR [eax],al
  435bdf:	add    bh,bh
  435be1:	(bad)  
  435be2:	(bad)  
  435be3:	inc    DWORD PTR [eax]
  435be5:	add    BYTE PTR [eax],al
  435be7:	add    BYTE PTR [eax+eax*1],bh
  435bea:	add    BYTE PTR [eax],al
  435bec:	pusha  
  435bed:	call   0x0:0x40
  435bf4:	enter  0x43ee,0x0
  435bf8:	add    BYTE PTR [eax],al
  435bfa:	add    BYTE PTR [eax],al
  435bfc:	(bad)  
  435bfd:	(bad)  
  435bfe:	(bad)  
  435bff:	inc    DWORD PTR [eax]
  435c01:	add    BYTE PTR [eax],al
  435c03:	add    BYTE PTR [eax],ch
  435c05:	add    BYTE PTR [eax],al
  435c07:	add    BYTE PTR [eax],al
  435c09:	fwait
  435c0a:	inc    eax
  435c0b:	add    BYTE PTR [eax],cl
  435c0d:	add    BYTE PTR [eax],al
  435c0f:	add    BYTE PTR [eax-0x2bffbca5],bh
  435c15:	pop    ebx
  435c16:	inc    ebx
  435c17:	add    al,dh
  435c19:	pop    ebx
  435c1a:	inc    ebx
  435c1b:	add    BYTE PTR [eax+0x3c004359],cl
  435c21:	push   esi
  435c22:	inc    ebx
  435c23:	add    BYTE PTR [eax],ah
  435c25:	push   esi
  435c26:	inc    ebx
  435c27:	add    al,al
  435c29:	push   edi
  435c2a:	inc    ebx
  435c2b:	add    BYTE PTR [edi+edx*2+0x43],ah
  435c32:	add    BYTE PTR [eax],al
  435c34:	rcl    BYTE PTR [edi+0x40],1
  435c3a:	add    BYTE PTR [eax],al
  435c3c:	or     al,0x5c
  435c3e:	inc    ebx
  435c3f:	add    BYTE PTR [eax],al
  435c41:	add    BYTE PTR [eax],al
  435c43:	add    BYTE PTR [edx+esi*8],ch
  435c46:	inc    ebx
  435c47:	add    BYTE PTR [eax],al
  435c49:	add    BYTE PTR [eax],al
  435c4b:	add    bh,bh
  435c4d:	(bad)  
  435c4e:	(bad)  
  435c4f:	inc    DWORD PTR [eax]
  435c51:	add    BYTE PTR [eax],al
  435c53:	add    BYTE PTR [eax],ch
  435c55:	add    BYTE PTR [eax],al
  435c57:	add    BYTE PTR [eax],ah
  435c59:	ret    0x40
  435c5c:	add    al,BYTE PTR [eax]
  435c5e:	add    BYTE PTR [eax],al
  435c60:	inc    eax
  435c61:	pop    esp
  435c62:	inc    ebx
  435c63:	add    BYTE PTR [eax],ah
  435c65:	push   esi
  435c66:	inc    ebx
  435c67:	add    BYTE PTR [eax],al
  435c69:	add    BYTE PTR [eax],al
  435c6b:	add    BYTE PTR [eax],dh
  435c6d:	lock inc ecx
  435c6f:	add    BYTE PTR [eax],al
  435c71:	add    BYTE PTR [eax],al
  435c73:	add    BYTE PTR [esp+ebx*2+0x43],bl
  435c77:	add    BYTE PTR [ecx],al
  435c79:	add    BYTE PTR [eax],al
  435c7b:	add    BYTE PTR [eax-0xe],cl
  435c7e:	inc    ebx
  435c7f:	add    BYTE PTR [eax],al
  435c81:	add    BYTE PTR [eax],al
  435c83:	add    bh,bh
  435c85:	(bad)  
  435c86:	(bad)  
  435c87:	inc    DWORD PTR [eax]
  435c89:	add    BYTE PTR [eax],al
  435c8b:	add    BYTE PTR [eax+eax*1],al
  435c8e:	add    BYTE PTR [eax],al
  435c90:	add    BYTE PTR [eax],al
  435c92:	add    BYTE PTR [eax],al
  435c94:	add    DWORD PTR [eax],eax
  435c96:	add    BYTE PTR [eax],al
  435c98:	xor    dl,0x43
  435c9b:	add    BYTE PTR [eax],al
  435c9d:	add    BYTE PTR [eax],al
  435c9f:	add    bh,bh
  435ca1:	(bad)  
  435ca2:	(bad)  
  435ca3:	inc    DWORD PTR [eax]
  435ca5:	add    BYTE PTR [eax],al
  435ca7:	add    BYTE PTR [eax+eax*1],al
  435caa:	add    BYTE PTR [eax],al
  435cac:	add    BYTE PTR [eax],al
  435cae:	add    BYTE PTR [eax],al
  435cb0:	add    DWORD PTR [eax],eax
  435cb2:	add    BYTE PTR [eax],al
  435cb4:	pushf  
  435cb5:	repnz inc ebx
  435cb7:	add    BYTE PTR [eax],al
  435cb9:	add    BYTE PTR [eax],al
  435cbb:	add    bh,bh
  435cbd:	(bad)  
  435cbe:	(bad)  
  435cbf:	inc    DWORD PTR [eax]
  435cc1:	add    BYTE PTR [eax],al
  435cc3:	add    BYTE PTR [eax+eax*1],al
  435cc6:	add    BYTE PTR [eax],al
  435cc8:	add    BYTE PTR [eax],al
  435cca:	add    BYTE PTR [eax],al
  435ccc:	add    eax,DWORD PTR [eax]
  435cce:	add    BYTE PTR [eax],al
  435cd0:	js     0x435d2e
  435cd2:	inc    ebx
  435cd3:	add    BYTE PTR [esp+ebx*2+0x5cb00043],dl
  435cda:	inc    ebx
	...
  435ce7:	add    ah,cl
  435ce9:	pop    esp
  435cea:	inc    ebx
  435ceb:	add    BYTE PTR [eax],al
  435ced:	add    BYTE PTR [eax],al
  435cef:	add    BYTE PTR [edx+esi*8+0x43],ch
  435cf6:	add    BYTE PTR [eax],al
  435cf8:	(bad)  
  435cf9:	(bad)  
  435cfa:	(bad)  
  435cfb:	inc    DWORD PTR [eax]
  435cfd:	add    BYTE PTR [eax],al
  435cff:	add    BYTE PTR [eax+eax*1],dl
  435d02:	add    BYTE PTR [eax],al
  435d04:	xor    BYTE PTR [ebp+0x41],bh
  435d07:	add    BYTE PTR [edx],al
  435d09:	add    BYTE PTR [eax],al
  435d0b:	add    ah,ch
  435d0d:	pop    esp
  435d0e:	inc    ebx
  435d0f:	add    BYTE PTR [eax],ah
  435d11:	push   esi
  435d12:	inc    ebx
  435d13:	add    BYTE PTR [eax],al
  435d15:	add    BYTE PTR [eax],al
  435d17:	add    BYTE PTR [eax+0x40b9],al
  435d1d:	add    BYTE PTR [eax],al
  435d1f:	add    BYTE PTR [eax],cl
  435d21:	pop    ebp
  435d22:	inc    ebx
  435d23:	add    BYTE PTR [edx],al
  435d25:	add    BYTE PTR [eax],al
  435d27:	add    ah,bl
  435d29:	push   edi
  435d2a:	inc    ebx
  435d2b:	add    BYTE PTR [eax],ah
  435d2d:	push   esi
  435d2e:	inc    ebx
  435d2f:	add    BYTE PTR [eax],al
  435d31:	add    BYTE PTR [eax],al
  435d33:	add    BYTE PTR [eax+0x4205],dl
  435d39:	add    BYTE PTR [eax],al
  435d3b:	add    BYTE PTR [ebx*2+0x30043],ah
  435d42:	add    BYTE PTR [eax],al
  435d44:	mov    BYTE PTR [ecx+0x43],bl
  435d47:	add    BYTE PTR [esi+edx*2],bh
  435d4a:	inc    ebx
  435d4b:	add    BYTE PTR [eax],ah
  435d4d:	push   esi
  435d4e:	inc    ebx
  435d4f:	add    BYTE PTR [eax],al
  435d51:	add    BYTE PTR [eax],al
  435d53:	add    BYTE PTR [eax+0x4028],dl
  435d59:	add    BYTE PTR [eax],al
  435d5b:	add    BYTE PTR [eax+0x5d],al
  435d5e:	inc    ebx
  435d5f:	add    BYTE PTR [eax],al
  435d61:	add    BYTE PTR [eax],al
  435d63:	add    BYTE PTR [eax-0x8],ah
  435d66:	inc    ebx
  435d67:	add    BYTE PTR [eax],al
  435d69:	add    BYTE PTR [eax],al
  435d6b:	add    bh,bh
  435d6d:	(bad)  
  435d6e:	(bad)  
  435d6f:	inc    DWORD PTR [eax]
  435d71:	add    BYTE PTR [eax],al
  435d73:	add    BYTE PTR [eax],ch
  435d75:	add    BYTE PTR [eax],al
  435d77:	add    BYTE PTR [eax+0x3004246],dh
  435d7d:	add    BYTE PTR [eax],al
  435d7f:	add    BYTE PTR [eax+0x5d],ah
  435d82:	inc    ebx
  435d83:	add    ah,bl
  435d85:	push   edi
  435d86:	inc    ebx
  435d87:	add    BYTE PTR [eax],ah
  435d89:	push   esi
  435d8a:	inc    ebx
  435d8b:	add    BYTE PTR [eax],al
  435d8d:	add    BYTE PTR [eax],al
  435d8f:	add    BYTE PTR [eax+0x4205],dl
  435d95:	add    BYTE PTR [eax],al
  435d97:	add    BYTE PTR [ebp+ebx*2+0x43],bh
  435d9b:	add    bh,bh
  435d9d:	(bad)  
  435d9e:	(bad)  
  435d9f:	jmp    DWORD PTR [eax-0x55]
  435da2:	inc    edx
  435da3:	add    BYTE PTR [eax],al
  435da5:	add    BYTE PTR [eax],al
  435da7:	add    BYTE PTR [ecx-0x55],ch
  435daa:	inc    edx
  435dab:	add    BYTE PTR [ecx],al
  435dad:	add    BYTE PTR [eax],al
  435daf:	add    BYTE PTR [edx-0x55],dh
  435db2:	inc    edx
  435db3:	add    BYTE PTR [edx],al
  435db5:	add    BYTE PTR [eax],al
  435db7:	add    BYTE PTR [ebx-0x55],bh
  435dba:	inc    edx
  435dbb:	add    BYTE PTR [ebx],al
  435dbd:	add    BYTE PTR [eax],al
  435dbf:	add    BYTE PTR [ebx+ebp*4+0x5220042],al
  435dc6:	xchg   ebx,eax
  435dc7:	sbb    DWORD PTR ds:0x9c000000,eax
  435dcd:	pop    ebp
  435dce:	inc    ebx
	...
  435de3:	add    BYTE PTR [ecx],al
  435de5:	add    BYTE PTR [eax],al
  435de7:	add    bh,bh
  435de9:	(bad)  
  435dea:	(bad)  
  435deb:	push   DWORD PTR [eax+0x220042ab]
  435df1:	add    eax,0x11993
  435df6:	add    BYTE PTR [eax],al
  435df8:	call   0x43a15a
	...
  435e0d:	add    BYTE PTR [eax],al
  435e0f:	add    BYTE PTR [ecx],al
  435e11:	add    BYTE PTR [eax],al
  435e13:	add    bh,bh
  435e15:	(bad)  
  435e16:	(bad)  
  435e17:	call   eax
  435e19:	stos   DWORD PTR es:[edi],eax
  435e1a:	inc    edx
  435e1b:	add    BYTE PTR [eax],al
  435e1d:	add    BYTE PTR [eax],al
  435e1f:	add    cl,bl
  435e21:	stos   DWORD PTR es:[edi],eax
  435e22:	inc    edx
  435e23:	add    BYTE PTR [edx],ah
  435e25:	add    eax,0x21993
  435e2a:	add    BYTE PTR [eax],al
  435e2c:	adc    al,0x5e
  435e2e:	inc    ebx
	...
  435e43:	add    BYTE PTR [ecx],al
  435e45:	add    BYTE PTR [eax],al
  435e47:	add    bh,bh
  435e49:	(bad)  
  435e4a:	(bad)  
  435e4b:	inc    DWORD PTR [eax]
  435e4d:	lods   al,BYTE PTR ds:[esi]
  435e4e:	inc    edx
  435e4f:	add    BYTE PTR [edx],ah
  435e51:	add    eax,0x11993
  435e56:	add    BYTE PTR [eax],al
  435e58:	dec    eax
  435e59:	pop    esi
  435e5a:	inc    ebx
	...
  435e6f:	add    BYTE PTR [ecx],al
  435e71:	add    BYTE PTR [eax],al
  435e73:	add    bh,bh
  435e75:	(bad)  
  435e76:	(bad)  
  435e77:	push   DWORD PTR [eax]
  435e79:	lods   al,BYTE PTR ds:[esi]
  435e7a:	inc    edx
  435e7b:	add    bh,bh
  435e7d:	(bad)  
  435e7e:	(bad)  
  435e7f:	(bad)  
  435e80:	lods   al,BYTE PTR ds:[esi]
  435e82:	inc    edx
  435e83:	add    BYTE PTR [ecx],al
  435e85:	add    BYTE PTR [eax],al
  435e87:	add    BYTE PTR [edi-0x54],al
  435e8a:	inc    edx
  435e8b:	add    BYTE PTR [edx],ah
  435e8d:	add    eax,0x31993
  435e92:	add    BYTE PTR [eax],al
  435e94:	je     0x435ef4
  435e96:	inc    ebx
	...
  435eab:	add    BYTE PTR [ecx],al
  435ead:	add    BYTE PTR [eax],al
  435eaf:	add    bh,bh
  435eb1:	(bad)  
  435eb2:	(bad)  
  435eb3:	push   DWORD PTR [eax-0x54]
  435eb6:	inc    edx
  435eb7:	add    BYTE PTR [eax],al
  435eb9:	add    BYTE PTR [eax],al
  435ebb:	add    BYTE PTR [ecx-0x54],bh
  435ebe:	inc    edx
  435ebf:	add    BYTE PTR [ecx],al
  435ec1:	add    BYTE PTR [eax],al
  435ec3:	add    BYTE PTR [ebp+0x20042ac],al
  435ec9:	add    BYTE PTR [eax],al
  435ecb:	add    BYTE PTR [ecx+0x220042ac],dl
  435ed1:	add    eax,0x41993
  435ed6:	add    BYTE PTR [eax],al
  435ed8:	mov    al,0x5e
  435eda:	inc    ebx
	...
  435eef:	add    BYTE PTR [ecx],al
  435ef1:	add    BYTE PTR [eax],al
  435ef3:	add    bh,bh
  435ef5:	(bad)  
  435ef6:	(bad)  
  435ef7:	inc    eax
  435ef9:	lods   al,BYTE PTR ds:[esi]
  435efa:	inc    edx
  435efb:	add    BYTE PTR [edx],ah
  435efd:	add    eax,0x11993
  435f02:	add    BYTE PTR [eax],al
  435f04:	hlt    
  435f05:	pop    esi
  435f06:	inc    ebx
	...
  435f1b:	add    BYTE PTR [ecx],al
  435f1d:	add    BYTE PTR [eax],al
  435f1f:	add    bh,bh
  435f21:	(bad)  
  435f22:	(bad)  
  435f23:	push   eax
  435f25:	lods   al,BYTE PTR ds:[esi]
  435f26:	inc    edx
  435f27:	add    BYTE PTR [eax],al
  435f29:	add    BYTE PTR [eax],al
  435f2b:	add    ah,bh
  435f2d:	lods   al,BYTE PTR ds:[esi]
  435f2e:	inc    edx
  435f2f:	add    BYTE PTR [edx],ah
  435f31:	add    eax,0x21993
  435f36:	add    BYTE PTR [eax],al
  435f38:	and    BYTE PTR [edi+0x43],bl
	...
  435f4f:	add    BYTE PTR [ecx],al
  435f51:	add    BYTE PTR [eax],al
  435f53:	add    bh,bh
  435f55:	(bad)  
  435f56:	(bad)  
  435f57:	push   DWORD PTR [eax]
  435f59:	lods   eax,DWORD PTR ds:[esi]
  435f5a:	inc    edx
  435f5b:	add    BYTE PTR [edx],ah
  435f5d:	add    eax,0x11993
  435f62:	add    BYTE PTR [eax],al
  435f64:	push   esp
  435f65:	pop    edi
  435f66:	inc    ebx
	...
  435f7b:	add    BYTE PTR [ecx],al
  435f7d:	add    BYTE PTR [eax],al
  435f7f:	add    bh,bh
  435f81:	(bad)  
  435f82:	(bad)  
  435f83:	jmp    DWORD PTR [eax-0x53]
  435f86:	inc    edx
  435f87:	add    bh,bh
  435f89:	(bad)  
  435f8a:	(bad)  
  435f8b:	jmp    FWORD PTR [ecx-0x53]
  435f8e:	inc    edx
  435f8f:	add    bh,bh
  435f91:	(bad)  
  435f92:	(bad)  
  435f93:	push   DWORD PTR [edx-0x53]
  435f96:	inc    edx
  435f97:	add    BYTE PTR [edx],ah
  435f99:	add    eax,0x31993
  435f9e:	add    BYTE PTR [eax],al
  435fa0:	sbb    BYTE PTR [edi+0x43],0x0
	...
  435fb8:	add    DWORD PTR [eax],eax
  435fba:	add    BYTE PTR [eax],al
  435fbc:	(bad)  
  435fbd:	(bad)  
  435fbe:	(bad)  
  435fbf:	jmp    DWORD PTR [eax+0x220042ad]
  435fc5:	add    eax,0x11993
  435fca:	add    BYTE PTR [eax],al
  435fcc:	mov    esp,0x435f
	...
  435fe1:	add    BYTE PTR [eax],al
  435fe3:	add    BYTE PTR [ecx],al
  435fe5:	add    BYTE PTR [eax],al
  435fe7:	add    bh,bh
  435fe9:	(bad)  
  435fea:	(bad)  
  435feb:	call   eax
  435fed:	lods   eax,DWORD PTR ds:[esi]
  435fee:	inc    edx
  435fef:	add    BYTE PTR [edx],ah
  435ff1:	add    eax,0x11993
  435ff6:	add    BYTE PTR [eax],al
  435ff8:	call   0x43a35c
	...
  43600d:	add    BYTE PTR [eax],al
  43600f:	add    BYTE PTR [ecx],al
  436011:	add    BYTE PTR [eax],al
  436013:	add    bh,bh
  436015:	(bad)  
  436016:	(bad)  
  436017:	inc    DWORD PTR [eax]
  436019:	scas   al,BYTE PTR es:[edi]
  43601a:	inc    edx
  43601b:	add    BYTE PTR [edx],ah
  43601d:	add    eax,0x11993
  436022:	add    BYTE PTR [eax],al
  436024:	adc    al,0x60
  436026:	inc    ebx
	...
  43603b:	add    BYTE PTR [ecx],al
  43603d:	add    BYTE PTR [eax],al
  43603f:	add    bh,bh
  436041:	(bad)  
  436042:	(bad)  
  436043:	push   DWORD PTR [eax]
  436045:	scas   al,BYTE PTR es:[edi]
  436046:	inc    edx
  436047:	add    BYTE PTR [edx],ah
  436049:	add    eax,0x11993
  43604e:	add    BYTE PTR [eax],al
  436050:	inc    eax
  436051:	pusha  
  436052:	inc    ebx
	...
  436067:	add    BYTE PTR [ecx],al
  436069:	add    BYTE PTR [eax],al
  43606b:	add    bh,bh
  43606d:	(bad)  
  43606e:	(bad)  
  43606f:	push   DWORD PTR [eax-0x52]
  436072:	inc    edx
  436073:	add    BYTE PTR [edx],ah
  436075:	add    eax,0x11993
  43607a:	add    BYTE PTR [eax],al
  43607c:	ins    BYTE PTR es:[edi],dx
  43607d:	pusha  
  43607e:	inc    ebx
	...
  436093:	add    BYTE PTR [ecx],al
  436095:	add    BYTE PTR [eax],al
  436097:	add    bh,bh
  436099:	(bad)  
  43609a:	(bad)  
  43609b:	push   DWORD PTR [eax+0x42ae]
  4360a1:	add    BYTE PTR [eax],al
  4360a3:	add    BYTE PTR [ecx+0x42ae],bh
  4360a9:	add    BYTE PTR [eax],al
  4360ab:	add    dl,al
  4360ad:	scas   al,BYTE PTR es:[edi]
  4360ae:	inc    edx
  4360af:	add    bh,bh
  4360b1:	(bad)  
  4360b2:	(bad)  
  4360b3:	dec    ebx
  4360b5:	scas   al,BYTE PTR es:[edi]
  4360b6:	inc    edx
  4360b7:	add    BYTE PTR [ebx],al
  4360b9:	add    BYTE PTR [eax],al
  4360bb:	add    ah,dl
  4360bd:	scas   al,BYTE PTR es:[edi]
  4360be:	inc    edx
  4360bf:	add    BYTE PTR [ebx],al
  4360c1:	add    BYTE PTR [eax],al
  4360c3:	add    ch,bl
  4360c5:	scas   al,BYTE PTR es:[edi]
  4360c6:	inc    edx
  4360c7:	add    BYTE PTR [edx],ah
  4360c9:	add    eax,0x61993
  4360ce:	add    BYTE PTR [eax],al
  4360d0:	cwde   
  4360d1:	pusha  
  4360d2:	inc    ebx
	...
  4360e7:	add    BYTE PTR [ecx],al
  4360e9:	add    BYTE PTR [eax],al
  4360eb:	add    bh,bh
  4360ed:	(bad)  
  4360ee:	(bad)  
  4360ef:	call   DWORD PTR [eax]
  4360f1:	scas   eax,DWORD PTR es:[edi]
  4360f2:	inc    edx
  4360f3:	add    BYTE PTR [edx],ah
  4360f5:	add    eax,0x11993
  4360fa:	add    BYTE PTR [eax],al
  4360fc:	in     al,dx
  4360fd:	pusha  
  4360fe:	inc    ebx
	...
  436113:	add    BYTE PTR [ecx],al
  436115:	add    BYTE PTR [eax],al
  436117:	add    bh,bh
  436119:	(bad)  
  43611a:	(bad)  
  43611b:	inc    DWORD PTR [eax-0x51]
  43611e:	inc    edx
  43611f:	add    BYTE PTR [eax],al
  436121:	add    BYTE PTR [eax],al
  436123:	add    BYTE PTR [ecx-0x51],cl
  436126:	inc    edx
  436127:	add    BYTE PTR [edx],ah
  436129:	add    eax,0x21993
  43612e:	add    BYTE PTR [eax],al
  436130:	sbb    BYTE PTR [ecx+0x43],ah
	...
  436147:	add    BYTE PTR [ecx],al
  436149:	add    BYTE PTR [eax],al
  43614b:	add    bh,bh
  43614d:	(bad)  
  43614e:	(bad)  
  43614f:	inc    DWORD PTR [eax+0x220042af]
  436155:	add    eax,0x11993
  43615a:	add    BYTE PTR [eax],al
  43615c:	dec    esp
  43615d:	popa   
  43615e:	inc    ebx
	...
  436173:	add    BYTE PTR [ecx],al
  436175:	add    BYTE PTR [eax],al
  436177:	add    bh,bh
  436179:	(bad)  
  43617a:	(bad)  
  43617b:	push   DWORD PTR [eax+0x42af]
  436181:	add    BYTE PTR [eax],al
  436183:	add    BYTE PTR [ecx-0xffbd51],bh
  436189:	(bad)  
  43618a:	(bad)  
  43618b:	(bad)  
  43618c:	mov    ecx,0x220042af
  436191:	add    eax,0x31993
  436196:	add    BYTE PTR [eax],al
  436198:	js     0x4361fb
  43619a:	inc    ebx
	...
  4361af:	add    BYTE PTR [ecx],al
  4361b1:	add    BYTE PTR [eax],al
  4361b3:	add    bh,bh
  4361b5:	(bad)  
  4361b6:	(bad)  
  4361b7:	jmp    eax
  4361b9:	scas   eax,DWORD PTR es:[edi]
  4361ba:	inc    edx
  4361bb:	add    BYTE PTR [eax],al
  4361bd:	add    BYTE PTR [eax],al
  4361bf:	add    cl,ch
  4361c1:	scas   eax,DWORD PTR es:[edi]
  4361c2:	inc    edx
  4361c3:	add    BYTE PTR [eax],al
  4361c5:	add    BYTE PTR [eax],al
  4361c7:	add    dl,dh
  4361c9:	scas   eax,DWORD PTR es:[edi]
  4361ca:	inc    edx
  4361cb:	add    bh,bh
  4361cd:	(bad)  
  4361ce:	(bad)  
  4361cf:	(bad)  
  4361d0:	sti    
  4361d1:	scas   eax,DWORD PTR es:[edi]
  4361d2:	inc    edx
  4361d3:	add    BYTE PTR [ebx],al
  4361d5:	add    BYTE PTR [eax],al
  4361d7:	add    BYTE PTR [eax+esi*4],al
  4361da:	inc    edx
  4361db:	add    BYTE PTR [ebx],al
  4361dd:	add    BYTE PTR [eax],al
  4361df:	add    BYTE PTR ds:0x220042b0,cl
  4361e5:	add    eax,0x61993
  4361ea:	add    BYTE PTR [eax],al
  4361ec:	mov    ah,0x61
  4361ee:	inc    ebx
	...
  436203:	add    BYTE PTR [ecx],al
  436205:	add    BYTE PTR [eax],al
  436207:	add    bh,bh
  436209:	(bad)  
  43620a:	(bad)  
  43620b:	inc    DWORD PTR [eax]
  43620d:	add    BYTE PTR [eax],al
  43620f:	add    bh,bh
  436211:	(bad)  
  436212:	(bad)  
  436213:	inc    DWORD PTR [eax]
  436215:	add    BYTE PTR [eax],al
  436217:	add    BYTE PTR [eax+0x0],al
	...
  436222:	add    BYTE PTR [eax],al
  436224:	pop    ebp
  436225:	inc    ebx
  436226:	inc    edx
	...
  43622f:	add    BYTE PTR [ecx],al
  436231:	add    BYTE PTR [eax],al
  436233:	add    BYTE PTR [ecx],al
  436235:	add    BYTE PTR [eax],al
  436237:	add    BYTE PTR [eax],bl
  436239:	bound  eax,QWORD PTR [ebx+0x0]
  43623c:	and    al,BYTE PTR ds:0x21993
  436242:	add    BYTE PTR [eax],al
  436244:	or     BYTE PTR [edx+0x43],ah
  436247:	add    BYTE PTR [ecx],al
  436249:	add    BYTE PTR [eax],al
  43624b:	add    BYTE PTR [eax],ch
  43624d:	bound  eax,QWORD PTR [ebx+0x0]
	...
  43625c:	add    DWORD PTR [eax],eax
  43625e:	add    BYTE PTR [eax],al
  436260:	(bad)  
  436261:	(bad)  
  436262:	(bad)  
  436263:	jmp    DWORD PTR [eax-0x50]
  436266:	inc    edx
  436267:	add    BYTE PTR [edx],ah
  436269:	add    eax,0x11993
  43626e:	add    BYTE PTR [eax],al
  436270:	pusha  
  436271:	bound  eax,QWORD PTR [ebx+0x0]
	...
  436288:	add    DWORD PTR [eax],eax
  43628a:	add    BYTE PTR [eax],al
  43628c:	(bad)  
  43628d:	(bad)  
  43628e:	(bad)  
  43628f:	call   DWORD PTR [eax-0xffbd50]
  436295:	(bad)  
  436296:	(bad)  
  436297:	call   FWORD PTR [eax+esi*4+0x5220042]
  43629e:	xchg   ebx,eax
  43629f:	sbb    DWORD PTR [edx],eax
  4362a1:	add    BYTE PTR [eax],al
  4362a3:	add    BYTE PTR [edx+eiz*2+0x43],cl
	...
  4362ba:	add    BYTE PTR [eax],al
  4362bc:	add    DWORD PTR [eax],eax
  4362be:	add    BYTE PTR [eax],al
  4362c0:	(bad)  
  4362c1:	(bad)  
  4362c2:	(bad)  
  4362c3:	jmp    eax
  4362c5:	mov    al,0x42
  4362c7:	add    BYTE PTR [edx],ah
  4362c9:	add    eax,0x11993
  4362ce:	add    BYTE PTR [eax],al
  4362d0:	shl    BYTE PTR [edx+0x43],0x0
	...
  4362e8:	add    DWORD PTR [eax],eax
  4362ea:	add    BYTE PTR [eax],al
  4362ec:	(bad)  
  4362ed:	(bad)  
  4362ee:	(bad)  
  4362ef:	call   DWORD PTR [eax]
  4362f1:	mov    cl,0x42
  4362f3:	add    BYTE PTR [edx],ah
  4362f5:	add    eax,0x11993
  4362fa:	add    BYTE PTR [eax],al
  4362fc:	in     al,dx
  4362fd:	bound  eax,QWORD PTR [ebx+0x0]
	...
  436314:	add    DWORD PTR [eax],eax
  436316:	add    BYTE PTR [eax],al
  436318:	(bad)  
  436319:	(bad)  
  43631a:	(bad)  
  43631b:	inc    DWORD PTR [eax-0x4f]
  43631e:	inc    edx
  43631f:	add    bh,bh
  436321:	(bad)  
  436322:	(bad)  
  436323:	dec    DWORD PTR [esi-0x4f]
  436326:	inc    edx
  436327:	add    BYTE PTR [edx],ah
  436329:	add    eax,0x21993
  43632e:	add    BYTE PTR [eax],al
  436330:	sbb    BYTE PTR [ebx+0x43],ah
	...
  436347:	add    BYTE PTR [ecx],al
  436349:	add    BYTE PTR [eax],al
  43634b:	add    bh,bh
  43634d:	(bad)  
  43634e:	(bad)  
  43634f:	inc    DWORD PTR [eax-0xffbd4f]
  436355:	(bad)  
  436356:	(bad)  
  436357:	dec    DWORD PTR [esi+0x220042b1]
  43635d:	add    eax,0x21993
  436362:	add    BYTE PTR [eax],al
  436364:	dec    esp
  436365:	arpl   WORD PTR [ebx+0x0],ax
	...
  43637c:	add    DWORD PTR [eax],eax
  43637e:	add    BYTE PTR [eax],al
  436380:	(bad)  
  436381:	(bad)  
  436382:	(bad)  
  436383:	inc    eax
  436385:	mov    cl,0x42
  436387:	add    bh,bh
  436389:	(bad)  
  43638a:	(bad)  
  43638b:	dec    esi
  43638d:	mov    cl,0x42
  43638f:	add    BYTE PTR [edx],ah
  436391:	add    eax,0x21993
  436396:	add    BYTE PTR [eax],al
  436398:	and    BYTE PTR [ebx+0x43],0x0
	...
  4363b0:	add    DWORD PTR [eax],eax
  4363b2:	add    BYTE PTR [eax],al
  4363b4:	(bad)  
  4363b5:	(bad)  
  4363b6:	(bad)  
  4363b7:	inc    DWORD PTR [eax]
  4363b9:	mov    dl,0x42
  4363bb:	add    BYTE PTR [edx],ah
  4363bd:	add    eax,0x11993
  4363c2:	add    BYTE PTR [eax],al
  4363c4:	mov    ah,0x63
  4363c6:	inc    ebx
	...
  4363db:	add    BYTE PTR [ecx],al
  4363dd:	add    BYTE PTR [eax],al
  4363df:	add    bh,bh
  4363e1:	(bad)  
  4363e2:	(bad)  
  4363e3:	push   DWORD PTR [eax]
  4363e5:	mov    dl,0x42
  4363e7:	add    BYTE PTR [edx],ah
  4363e9:	add    eax,0x11993
  4363ee:	add    BYTE PTR [eax],al
  4363f0:	loopne 0x436455
  4363f2:	inc    ebx
	...
  436407:	add    BYTE PTR [ecx],al
  436409:	add    BYTE PTR [eax],al
  43640b:	add    bh,bh
  43640d:	(bad)  
  43640e:	(bad)  
  43640f:	jmp    DWORD PTR [eax-0x4e]
  436412:	inc    edx
  436413:	add    bh,bh
  436415:	(bad)  
  436416:	(bad)  
  436417:	jmp    FWORD PTR [edx-0x4e]
  43641a:	inc    edx
  43641b:	add    BYTE PTR [ecx],al
  43641d:	add    BYTE PTR [eax],al
  43641f:	add    BYTE PTR [ebx-0x4e],dh
  436422:	inc    edx
  436423:	add    BYTE PTR [edx],ah
  436425:	add    eax,0x31993
  43642a:	add    BYTE PTR [eax],al
  43642c:	or     al,0x64
  43642e:	inc    ebx
	...
  436443:	add    BYTE PTR [ecx],al
  436445:	add    BYTE PTR [eax],al
  436447:	add    bh,bh
  436449:	(bad)  
  43644a:	(bad)  
  43644b:	jmp    DWORD PTR [eax-0xffbd4e]
  436451:	(bad)  
  436452:	(bad)  
  436453:	jmp    FWORD PTR [edx+0x10042b2]
  436459:	add    BYTE PTR [eax],al
  43645b:	add    BYTE PTR [ebx+0x220042b2],dh
  436461:	add    eax,0x31993
  436466:	add    BYTE PTR [eax],al
  436468:	dec    eax
  436469:	fs inc ebx
	...
  43647f:	add    BYTE PTR [ecx],al
  436481:	add    BYTE PTR [eax],al
  436483:	add    bh,bh
  436485:	(bad)  
  436486:	(bad)  
  436487:	jmp    eax
  436489:	mov    dl,0x42
  43648b:	add    BYTE PTR [edx],ah
  43648d:	add    eax,0x11993
  436492:	add    BYTE PTR [eax],al
  436494:	test   BYTE PTR [ebx+eax*2+0x0],ah
	...
  4364ac:	add    DWORD PTR [eax],eax
  4364ae:	add    BYTE PTR [eax],al
  4364b0:	(bad)  
  4364b1:	(bad)  
  4364b2:	(bad)  
  4364b3:	jmp    DWORD PTR [eax]
  4364b5:	mov    bl,0x42
  4364b7:	add    BYTE PTR [eax],al
  4364b9:	add    BYTE PTR [eax],al
  4364bb:	add    BYTE PTR [ecx],ch
  4364bd:	mov    bl,0x42
  4364bf:	add    BYTE PTR [edx],ah
  4364c1:	add    eax,0x21993
  4364c6:	add    BYTE PTR [eax],al
  4364c8:	mov    al,0x64
  4364ca:	inc    ebx
	...
  4364df:	add    BYTE PTR [ecx],al
  4364e1:	add    BYTE PTR [eax],al
  4364e3:	add    bh,bh
  4364e5:	(bad)  
  4364e6:	(bad)  
  4364e7:	inc    DWORD PTR [eax]
  4364e9:	add    BYTE PTR [eax],al
  4364eb:	add    BYTE PTR [eax],al
  4364ed:	add    BYTE PTR [eax],al
  4364ef:	add    BYTE PTR [eax-0x4d],ah
  4364f2:	inc    edx
  4364f3:	add    bh,bh
  4364f5:	(bad)  
  4364f6:	(bad)  
  4364f7:	inc    DWORD PTR [eax]
  4364f9:	add    BYTE PTR [eax],al
  4364fb:	add    BYTE PTR [eax+0x0],al
	...
  436506:	add    BYTE PTR [eax],al
  436508:	push   edx
  436509:	xchg   edi,eax
  43650a:	inc    ecx
  43650b:	add    BYTE PTR [eax],al
  43650d:	add    BYTE PTR [eax],al
  43650f:	add    BYTE PTR [ecx],al
  436511:	add    BYTE PTR [eax],al
  436513:	add    BYTE PTR [edx],al
  436515:	add    BYTE PTR [eax],al
  436517:	add    BYTE PTR [ecx],al
  436519:	add    BYTE PTR [eax],al
  43651b:	add    ah,bh
  43651d:	fs inc ebx
  43651f:	add    BYTE PTR [edx],ah
  436521:	add    eax,0x31993
  436526:	add    BYTE PTR [eax],al
  436528:	in     al,0x64
  43652a:	inc    ebx
  43652b:	add    BYTE PTR [ecx],al
  43652d:	add    BYTE PTR [eax],al
  43652f:	add    BYTE PTR [eiz*2+0x43],cl
	...
  43653e:	add    BYTE PTR [eax],al
  436540:	add    DWORD PTR [eax],eax
  436542:	add    BYTE PTR [eax],al
  436544:	(bad)  
  436545:	(bad)  
  436546:	(bad)  
  436547:	inc    DWORD PTR [eax]
  436549:	add    BYTE PTR [eax],al
  43654b:	add    BYTE PTR [eax],al
  43654d:	add    BYTE PTR [eax],al
  43654f:	add    BYTE PTR [eax-0xffbd4d],dl
  436555:	(bad)  
  436556:	(bad)  
  436557:	inc    DWORD PTR [eax]
  436559:	add    BYTE PTR [eax],al
  43655b:	add    BYTE PTR [eax+0x0],al
	...
  436566:	add    BYTE PTR [eax],al
  436568:	xor    eax,0x4196
  43656d:	add    BYTE PTR [eax],al
  43656f:	add    BYTE PTR [ecx],al
  436571:	add    BYTE PTR [eax],al
  436573:	add    BYTE PTR [edx],al
  436575:	add    BYTE PTR [eax],al
  436577:	add    BYTE PTR [ecx],al
  436579:	add    BYTE PTR [eax],al
  43657b:	add    BYTE PTR [ebp+eiz*2+0x43],bl
  43657f:	add    BYTE PTR [edx],ah
  436581:	add    eax,0x31993
  436586:	add    BYTE PTR [eax],al
  436588:	inc    esp
  436589:	gs inc ebx
  43658b:	add    BYTE PTR [ecx],al
  43658d:	add    BYTE PTR [eax],al
  43658f:	add    BYTE PTR [ebp+eiz*2+0x43],ch
	...
  43659f:	add    BYTE PTR [ecx],al
  4365a1:	add    BYTE PTR [eax],al
  4365a3:	add    bh,bh
  4365a5:	(bad)  
  4365a6:	(bad)  
  4365a7:	inc    DWORD PTR [eax]
  4365a9:	add    BYTE PTR [eax],al
  4365ab:	add    BYTE PTR [eax],al
  4365ad:	add    BYTE PTR [eax],al
  4365af:	add    al,al
  4365b1:	mov    bl,0x42
  4365b3:	add    bh,bh
  4365b5:	(bad)  
  4365b6:	(bad)  
  4365b7:	inc    DWORD PTR [eax]
  4365b9:	add    BYTE PTR [eax],al
  4365bb:	add    BYTE PTR [eax+0x0],al
	...
  4365c6:	add    BYTE PTR [eax],al
  4365c8:	adc    dl,BYTE PTR [ebp+0x41]
  4365ce:	add    BYTE PTR [eax],al
  4365d0:	add    DWORD PTR [eax],eax
  4365d2:	add    BYTE PTR [eax],al
  4365d4:	add    al,BYTE PTR [eax]
  4365d6:	add    BYTE PTR [eax],al
  4365d8:	add    DWORD PTR [eax],eax
  4365da:	add    BYTE PTR [eax],al
  4365dc:	mov    esp,0x22004365
  4365e1:	add    eax,0x31993
  4365e6:	add    BYTE PTR [eax],al
  4365e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4365e9:	gs inc ebx
  4365eb:	add    BYTE PTR [ecx],al
  4365ed:	add    BYTE PTR [eax],al
  4365ef:	add    ah,cl
  4365f1:	gs inc ebx
	...
  4365ff:	add    BYTE PTR [ecx],al
  436601:	add    BYTE PTR [eax],al
  436603:	add    bh,bh
  436605:	(bad)  
  436606:	(bad)  
  436607:	push   eax
  436609:	mov    bl,0x42
  43660b:	add    BYTE PTR [edx],ah
  43660d:	add    eax,0x11993
  436612:	add    BYTE PTR [eax],al
  436614:	add    al,0x66
  436616:	inc    ebx
	...
  43662b:	add    BYTE PTR [ecx],al
  43662d:	add    BYTE PTR [eax],al
  43662f:	add    bh,bh
  436631:	(bad)  
  436632:	(bad)  
  436633:	jmp    DWORD PTR [eax]
  436635:	mov    ah,0x42
  436637:	add    BYTE PTR [edx],ah
  436639:	add    eax,0x11993
  43663e:	add    BYTE PTR [eax],al
  436640:	xor    BYTE PTR [esi+0x43],ah
	...
  436657:	add    BYTE PTR [ecx],al
  436659:	add    BYTE PTR [eax],al
  43665b:	add    bh,bh
  43665d:	(bad)  
  43665e:	(bad)  
  43665f:	call   DWORD PTR [eax-0x4c]
  436662:	inc    edx
  436663:	add    BYTE PTR [edx],ah
  436665:	add    eax,0x11993
  43666a:	add    BYTE PTR [eax],al
  43666c:	pop    esp
  43666d:	inc    bx
	...
  436683:	add    BYTE PTR [ecx],al
  436685:	add    BYTE PTR [eax],al
  436687:	add    bh,bh
  436689:	(bad)  
  43668a:	(bad)  
  43668b:	inc    DWORD PTR [eax]
  43668d:	add    BYTE PTR [eax],al
  43668f:	add    BYTE PTR [eax],al
  436691:	add    BYTE PTR [eax],al
  436693:	add    BYTE PTR [eax-0xffbd4c],al
  436699:	(bad)  
  43669a:	(bad)  
  43669b:	inc    DWORD PTR [eax]
  43669d:	add    BYTE PTR [eax],al
  43669f:	add    BYTE PTR [eax+0x0],al
	...
  4366aa:	add    BYTE PTR [eax],al
  4366ac:	call   FWORD PTR [edi+0x41]
  4366af:	add    BYTE PTR [eax],al
  4366b1:	add    BYTE PTR [eax],al
  4366b3:	add    BYTE PTR [ecx],al
  4366b5:	add    BYTE PTR [eax],al
  4366b7:	add    BYTE PTR [edx],al
  4366b9:	add    BYTE PTR [eax],al
  4366bb:	add    BYTE PTR [ecx],al
  4366bd:	add    BYTE PTR [eax],al
  4366bf:	add    BYTE PTR [eax+0x22004366],ah
  4366c5:	add    eax,0x31993
  4366ca:	add    BYTE PTR [eax],al
  4366cc:	mov    BYTE PTR [esi+0x43],ah
  4366cf:	add    BYTE PTR [ecx],al
  4366d1:	add    BYTE PTR [eax],al
  4366d3:	add    BYTE PTR [eax+0x4366],dh
	...
  4366e1:	add    BYTE PTR [eax],al
  4366e3:	add    BYTE PTR [ecx],al
  4366e5:	add    BYTE PTR [eax],al
  4366e7:	add    bh,bh
  4366e9:	(bad)  
  4366ea:	(bad)  
  4366eb:	inc    DWORD PTR [eax]
  4366ed:	add    BYTE PTR [eax],al
  4366ef:	add    BYTE PTR [eax],al
  4366f1:	add    BYTE PTR [eax],al
  4366f3:	add    BYTE PTR [eax-0xffbd4c],dh
  4366f9:	(bad)  
  4366fa:	(bad)  
  4366fb:	inc    DWORD PTR [eax]
  4366fd:	add    BYTE PTR [eax],al
  4366ff:	add    BYTE PTR [eax+0x0],al
	...
  43670a:	add    BYTE PTR [eax],al
  43670c:	xchg   esp,eax
  43670d:	push   esi
  43670e:	inc    ecx
  43670f:	add    BYTE PTR [eax],al
  436711:	add    BYTE PTR [eax],al
  436713:	add    BYTE PTR [ecx],al
  436715:	add    BYTE PTR [eax],al
  436717:	add    BYTE PTR [edx],al
  436719:	add    BYTE PTR [eax],al
  43671b:	add    BYTE PTR [ecx],al
  43671d:	add    BYTE PTR [eax],al
  43671f:	add    BYTE PTR [eax],al
  436721:	addr16 inc ebx
  436723:	add    BYTE PTR [edx],ah
  436725:	add    eax,0x31993
  43672a:	add    BYTE PTR [eax],al
  43672c:	call   0x143aa97
  436731:	add    BYTE PTR [eax],al
  436733:	add    BYTE PTR [eax],dl
  436735:	addr16 inc ebx
	...
  436743:	add    BYTE PTR [ecx],al
  436745:	add    BYTE PTR [eax],al
  436747:	add    bh,bh
  436749:	(bad)  
  43674a:	(bad)  
  43674b:	jmp    eax
  43674d:	mov    ah,0x42
  43674f:	add    BYTE PTR [edx],ah
  436751:	add    eax,0x11993
  436756:	add    BYTE PTR [eax],al
  436758:	dec    eax
  436759:	addr16 inc ebx
	...
  43676f:	add    BYTE PTR [ecx],al
  436771:	add    BYTE PTR [eax],al
  436773:	add    bh,bh
  436775:	(bad)  
  436776:	(bad)  
  436777:	call   DWORD PTR [eax]
  436779:	mov    ch,0x42
  43677b:	add    BYTE PTR [edx],ah
  43677d:	add    eax,0x11993
  436782:	add    BYTE PTR [eax],al
  436784:	je     0x4367ed
  436786:	inc    ebx
	...
  43679b:	add    BYTE PTR [ecx],al
  43679d:	add    BYTE PTR [eax],al
  43679f:	add    bh,bh
  4367a1:	(bad)  
  4367a2:	(bad)  
  4367a3:	inc    DWORD PTR [eax-0x4b]
  4367a6:	inc    edx
  4367a7:	add    BYTE PTR [edx],ah
  4367a9:	add    eax,0x11993
  4367ae:	add    BYTE PTR [eax],al
  4367b0:	mov    al,ds:0x4367
	...
  4367c5:	add    BYTE PTR [eax],al
  4367c7:	add    BYTE PTR [ecx],al
  4367c9:	add    BYTE PTR [eax],al
  4367cb:	add    bh,bh
  4367cd:	(bad)  
  4367ce:	(bad)  
  4367cf:	dec    DWORD PTR [ecx+0x42b5]
  4367d5:	add    BYTE PTR [eax],al
  4367d7:	add    BYTE PTR [eax+0x220042b5],al
  4367dd:	add    eax,0x21993
  4367e2:	add    BYTE PTR [eax],al
  4367e4:	int3   
  4367e5:	addr16 inc ebx
	...
  4367fb:	add    BYTE PTR [ecx],al
  4367fd:	add    BYTE PTR [eax],al
  4367ff:	add    bh,bh
  436801:	(bad)  
  436802:	(bad)  
  436803:	call   eax
  436805:	mov    ch,0x42
  436807:	add    BYTE PTR [edx],ah
  436809:	add    eax,0x11993
  43680e:	add    BYTE PTR [eax],al
  436810:	add    BYTE PTR [eax+0x43],ch
	...
  436827:	add    BYTE PTR [ecx],al
  436829:	add    BYTE PTR [eax],al
  43682b:	add    bh,bh
  43682d:	(bad)  
  43682e:	(bad)  
  43682f:	inc    DWORD PTR [eax]
  436831:	mov    dh,0x42
  436833:	add    BYTE PTR [edx],ah
  436835:	add    eax,0x11993
  43683a:	add    BYTE PTR [eax],al
  43683c:	sub    al,0x68
  43683e:	inc    ebx
	...
  436853:	add    BYTE PTR [ecx],al
  436855:	add    BYTE PTR [eax],al
  436857:	add    bh,bh
  436859:	(bad)  
  43685a:	(bad)  
  43685b:	push   DWORD PTR [eax]
  43685d:	mov    dh,0x42
  43685f:	add    BYTE PTR [edx],ah
  436861:	add    eax,0x11993
  436866:	add    BYTE PTR [eax],al
  436868:	pop    eax
  436869:	push   0x43
	...
  43687e:	add    BYTE PTR [eax],al
  436880:	add    DWORD PTR [eax],eax
  436882:	add    BYTE PTR [eax],al
  436884:	(bad)  
  436885:	(bad)  
  436886:	(bad)  
  436887:	jmp    FWORD PTR [eax-0x4a]
  43688a:	inc    edx
  43688b:	add    BYTE PTR [eax],al
  43688d:	add    BYTE PTR [eax],al
  43688f:	add    BYTE PTR [eax-0x4a],ah
  436892:	inc    edx
  436893:	add    BYTE PTR [edx],ah
  436895:	add    eax,0x21993
  43689a:	add    BYTE PTR [eax],al
  43689c:	test   BYTE PTR [eax+0x43],ch
	...
  4368b3:	add    BYTE PTR [ecx],al
  4368b5:	add    BYTE PTR [eax],al
  4368b7:	add    bh,bh
  4368b9:	(bad)  
  4368ba:	(bad)  
  4368bb:	jmp    DWORD PTR [eax+0x220042b6]
  4368c1:	add    eax,0x11993
  4368c6:	add    BYTE PTR [eax],al
  4368c8:	mov    eax,0x4368
	...
  4368dd:	add    BYTE PTR [eax],al
  4368df:	add    BYTE PTR [ecx],al
  4368e1:	add    BYTE PTR [eax],al
  4368e3:	add    bh,bh
  4368e5:	(bad)  
  4368e6:	(bad)  
  4368e7:	jmp    eax
  4368e9:	mov    dh,0x42
  4368eb:	add    BYTE PTR [eax],al
  4368ed:	add    BYTE PTR [eax],al
  4368ef:	add    cl,ch
  4368f1:	mov    dh,0x42
  4368f3:	add    BYTE PTR [ecx],al
  4368f5:	add    BYTE PTR [eax],al
  4368f7:	add    dl,dh
  4368f9:	mov    dh,0x42
  4368fb:	add    BYTE PTR [eax],al
  4368fd:	add    BYTE PTR [eax],al
  4368ff:	add    dl,dh
  436901:	mov    dh,0x42
  436903:	add    bh,bh
  436905:	(bad)  
  436906:	(bad)  
  436907:	push   edx
  436909:	mov    dh,0x42
  43690b:	add    BYTE PTR [edx],ah
  43690d:	add    eax,0x51993
  436912:	add    BYTE PTR [eax],al
  436914:	in     al,0x68
  436916:	inc    ebx
	...
  43692b:	add    BYTE PTR [ecx],al
  43692d:	add    BYTE PTR [eax],al
  43692f:	add    bh,bh
  436931:	(bad)  
  436932:	(bad)  
  436933:	push   DWORD PTR [eax]
  436935:	mov    bh,0x42
  436937:	add    BYTE PTR [eax],al
  436939:	add    BYTE PTR [eax],al
  43693b:	add    BYTE PTR [ecx],bh
  43693d:	mov    bh,0x42
  43693f:	add    bh,bh
  436941:	(bad)  
  436942:	(bad)  
  436943:	(bad)  
  436944:	cmp    DWORD PTR [edi+0x5220042],esi
  43694a:	xchg   ebx,eax
  43694b:	sbb    DWORD PTR [ebx],eax
  43694d:	add    BYTE PTR [eax],al
  43694f:	add    BYTE PTR [eax],dh
  436951:	imul   eax,DWORD PTR [ebx+0x0],0x0
	...
  436968:	add    DWORD PTR [eax],eax
  43696a:	add    BYTE PTR [eax],al
  43696c:	(bad)  
  43696d:	(bad)  
  43696e:	(bad)  
  43696f:	inc    DWORD PTR [eax]
  436971:	add    BYTE PTR [eax],al
  436973:	add    bh,bh
  436975:	(bad)  
  436976:	(bad)  
  436977:	inc    DWORD PTR [eax]
  436979:	add    BYTE PTR [eax],al
  43697b:	add    BYTE PTR [eax+0x0],al
	...
  436986:	add    BYTE PTR [eax],al
  436988:	out    0x7f,eax
  43698a:	inc    eax
	...
  436993:	add    BYTE PTR [ecx],al
  436995:	add    BYTE PTR [eax],al
  436997:	add    BYTE PTR [ecx],al
  436999:	add    BYTE PTR [eax],al
  43699b:	add    BYTE PTR [ecx+ebp*2+0x43],bh
  43699f:	add    BYTE PTR [edx],ah
  4369a1:	add    eax,0x21993
  4369a6:	add    BYTE PTR [eax],al
  4369a8:	ins    BYTE PTR es:[edi],dx
  4369a9:	imul   eax,DWORD PTR [ebx+0x0],0x1
  4369b0:	mov    WORD PTR [ecx+0x43],gs
	...
  4369bf:	add    BYTE PTR [ecx],al
  4369c1:	add    BYTE PTR [eax],al
  4369c3:	add    bh,bh
  4369c5:	(bad)  
  4369c6:	(bad)  
  4369c7:	inc    DWORD PTR [eax+0x220042b7]
  4369cd:	add    eax,0x11993
  4369d2:	add    BYTE PTR [eax],al
  4369d4:	les    ebp,FWORD PTR [ecx+0x43]
	...
  4369eb:	add    BYTE PTR [ecx],al
  4369ed:	add    BYTE PTR [eax],al
  4369ef:	add    bh,bh
  4369f1:	(bad)  
  4369f2:	(bad)  
  4369f3:	inc    eax
  4369f5:	mov    bh,0x42
  4369f7:	add    BYTE PTR [edx],ah
  4369f9:	add    eax,0x11993
  4369fe:	add    BYTE PTR [eax],al
  436a00:	lock imul eax,DWORD PTR [ebx+0x0],0x0
	...
  436a18:	add    DWORD PTR [eax],eax
  436a1a:	add    BYTE PTR [eax],al
  436a1c:	(bad)  
  436a1d:	(bad)  
  436a1e:	(bad)  
  436a1f:	inc    DWORD PTR [eax]
  436a21:	mov    eax,0x42
  436a26:	add    BYTE PTR [eax],al
  436a28:	and    edi,DWORD PTR [eax+0x5220042]
  436a2e:	xchg   ebx,eax
  436a2f:	sbb    DWORD PTR [edx],eax
  436a31:	add    BYTE PTR [eax],al
  436a33:	add    BYTE PTR [edx+ebp*2],bl
  436a36:	inc    ebx
	...
  436a4b:	add    BYTE PTR [ecx],al
  436a4d:	add    BYTE PTR [eax],al
  436a4f:	add    bh,bh
  436a51:	(bad)  
  436a52:	(bad)  
  436a53:	jmp    DWORD PTR [eax-0x48]
  436a56:	inc    edx
  436a57:	add    BYTE PTR [edx],ah
  436a59:	add    eax,0x11993
  436a5e:	add    BYTE PTR [eax],al
  436a60:	push   eax
  436a61:	push   0x43
	...
  436a77:	add    BYTE PTR [ecx],al
  436a79:	add    BYTE PTR [eax],al
  436a7b:	add    bh,bh
  436a7d:	(bad)  
  436a7e:	(bad)  
  436a7f:	call   DWORD PTR [eax+0x220042b8]
  436a85:	add    eax,0x11993
  436a8a:	add    BYTE PTR [eax],al
  436a8c:	jl     0x436af8
  436a8e:	inc    ebx
	...
  436aa3:	add    BYTE PTR [ecx],al
  436aa5:	add    BYTE PTR [eax],al
  436aa7:	add    bh,bh
  436aa9:	(bad)  
  436aaa:	(bad)  
  436aab:	inc    eax
  436aad:	mov    eax,0x5220042
  436ab2:	xchg   ebx,eax
  436ab3:	sbb    DWORD PTR [ecx],eax
  436ab5:	add    BYTE PTR [eax],al
  436ab7:	add    BYTE PTR [eax+0x436a],ch
	...
  436acd:	add    BYTE PTR [eax],al
  436acf:	add    BYTE PTR [ecx],al
  436ad1:	add    BYTE PTR [eax],al
  436ad3:	add    bh,bh
  436ad5:	(bad)  
  436ad6:	(bad)  
  436ad7:	inc    DWORD PTR [eax]
  436ad9:	add    BYTE PTR [eax],al
  436adb:	add    BYTE PTR [eax],al
  436add:	add    BYTE PTR [eax],al
  436adf:	add    al,dh
  436ae1:	mov    eax,0xffff0042
  436ae6:	(bad)  
  436ae7:	inc    DWORD PTR [eax]
  436ae9:	add    BYTE PTR [eax],al
  436aeb:	add    BYTE PTR [eax+0x0],al
	...
  436af6:	add    BYTE PTR [eax],al
  436af8:	inc    edx
  436af9:	dec    edx
  436afa:	inc    edx
  436afb:	add    BYTE PTR [eax],al
  436afd:	add    BYTE PTR [eax],al
  436aff:	add    BYTE PTR [ecx],al
  436b01:	add    BYTE PTR [eax],al
  436b03:	add    BYTE PTR [edx],al
  436b05:	add    BYTE PTR [eax],al
  436b07:	add    BYTE PTR [ecx],al
  436b09:	add    BYTE PTR [eax],al
  436b0b:	add    ah,ch
  436b0d:	push   0x43
  436b0f:	add    BYTE PTR [edx],ah
  436b11:	add    eax,0x31993
  436b16:	add    BYTE PTR [eax],al
  436b18:	aam    0x6a
  436b1a:	inc    ebx
  436b1b:	add    BYTE PTR [ecx],al
  436b1d:	add    BYTE PTR [eax],al
  436b1f:	add    ah,bh
  436b21:	push   0x43
	...
  436b2f:	add    BYTE PTR [ecx],al
  436b31:	add    BYTE PTR [eax],al
  436b33:	add    bh,bh
  436b35:	(bad)  
  436b36:	(bad)  
  436b37:	jmp    DWORD PTR [eax]
  436b39:	mov    ecx,0x42
  436b3e:	add    BYTE PTR [eax],al
  436b40:	sub    DWORD PTR [ecx+0x5220042],edi
  436b46:	xchg   ebx,eax
  436b47:	sbb    DWORD PTR [edx],eax
  436b49:	add    BYTE PTR [eax],al
  436b4b:	add    BYTE PTR [ebx+ebp*2],dh
  436b4e:	inc    ebx
	...
  436b63:	add    BYTE PTR [ecx],al
  436b65:	add    BYTE PTR [eax],al
  436b67:	add    bh,bh
  436b69:	(bad)  
  436b6a:	(bad)  
  436b6b:	call   DWORD PTR [eax-0x47]
  436b6e:	inc    edx
  436b6f:	add    BYTE PTR [edx],ah
  436b71:	add    eax,0x11993
  436b76:	add    BYTE PTR [eax],al
  436b78:	push   0x436b
	...
  436b8d:	add    BYTE PTR [eax],al
  436b8f:	add    BYTE PTR [ecx],al
  436b91:	add    BYTE PTR [eax],al
  436b93:	add    bh,bh
  436b95:	(bad)  
  436b96:	(bad)  
  436b97:	inc    DWORD PTR [eax+0x42b9]
  436b9d:	add    BYTE PTR [eax],al
  436b9f:	add    BYTE PTR [eax+0x220042b9],cl
  436ba5:	add    eax,0x21993
  436baa:	add    BYTE PTR [eax],al
  436bac:	xchg   esp,eax
  436bad:	imul   eax,DWORD PTR [ebx+0x0],0x0
	...
  436bc1:	add    BYTE PTR [eax],al
  436bc3:	add    BYTE PTR [ecx],al
  436bc5:	add    BYTE PTR [eax],al
  436bc7:	add    bh,bh
  436bc9:	(bad)  
  436bca:	(bad)  
  436bcb:	push   DWORD PTR [eax+0x220042b9]
  436bd1:	add    eax,0x11993
  436bd6:	add    BYTE PTR [eax],al
  436bd8:	enter  0x436b,0x0
	...
  436bf0:	add    DWORD PTR [eax],eax
  436bf2:	add    BYTE PTR [eax],al
  436bf4:	(bad)  
  436bf5:	(bad)  
  436bf6:	(bad)  
  436bf7:	jmp    eax
  436bf9:	mov    ecx,0x5220042
  436bfe:	xchg   ebx,eax
  436bff:	sbb    DWORD PTR [ecx],eax
  436c01:	add    BYTE PTR [eax],al
  436c03:	add    ah,dh
  436c05:	imul   eax,DWORD PTR [ebx+0x0],0x0
	...
  436c19:	add    BYTE PTR [eax],al
  436c1b:	add    BYTE PTR [ecx],al
  436c1d:	add    BYTE PTR [eax],al
  436c1f:	add    bh,bh
  436c21:	(bad)  
  436c22:	(bad)  
  436c23:	call   DWORD PTR [eax]
  436c25:	mov    edx,0xffff0042
  436c2a:	(bad)  
  436c2b:	call   FWORD PTR [edx]
  436c2d:	mov    edx,0x10042
  436c32:	add    BYTE PTR [eax],al
  436c34:	and    edi,DWORD PTR [edx+0x5220042]
  436c3a:	xchg   ebx,eax
  436c3b:	sbb    DWORD PTR [ebx],eax
  436c3d:	add    BYTE PTR [eax],al
  436c3f:	add    BYTE PTR [eax],ah
  436c41:	ins    BYTE PTR es:[edi],dx
  436c42:	inc    ebx
	...
  436c57:	add    BYTE PTR [ecx],al
  436c59:	add    BYTE PTR [eax],al
  436c5b:	add    bh,bh
  436c5d:	(bad)  
  436c5e:	(bad)  
  436c5f:	jmp    DWORD PTR [eax-0x46]
  436c62:	inc    edx
  436c63:	add    BYTE PTR [edx],ah
  436c65:	add    eax,0x11993
  436c6a:	add    BYTE PTR [eax],al
  436c6c:	pop    esp
  436c6d:	ins    BYTE PTR es:[edi],dx
  436c6e:	inc    ebx
	...
  436c83:	add    BYTE PTR [ecx],al
  436c85:	add    BYTE PTR [eax],al
  436c87:	add    bh,bh
  436c89:	(bad)  
  436c8a:	(bad)  
  436c8b:	call   DWORD PTR [eax+0x42ba]
  436c91:	add    BYTE PTR [eax],al
  436c93:	add    BYTE PTR [eax],al
  436c95:	add    BYTE PTR [eax],al
  436c97:	add    BYTE PTR [ecx],al
  436c99:	add    BYTE PTR [eax],al
  436c9b:	add    BYTE PTR [ecx+0x42ba],bl
  436ca1:	add    BYTE PTR [eax],al
  436ca3:	add    BYTE PTR [eax],al
  436ca5:	add    BYTE PTR [eax],al
  436ca7:	add    BYTE PTR [eax+0x0],al
	...
  436cb2:	add    BYTE PTR [eax],al
  436cb4:	push   es
  436cb5:	scas   al,BYTE PTR es:[edi]
  436cb6:	inc    ecx
  436cb7:	add    BYTE PTR [ecx],al
  436cb9:	add    BYTE PTR [eax],al
  436cbb:	add    BYTE PTR [edx],al
  436cbd:	add    BYTE PTR [eax],al
  436cbf:	add    BYTE PTR [ebx],al
  436cc1:	add    BYTE PTR [eax],al
  436cc3:	add    BYTE PTR [ecx],al
  436cc5:	add    BYTE PTR [eax],al
  436cc7:	add    BYTE PTR [eax+0x2200436c],ch
  436ccd:	add    eax,0x41993
  436cd2:	add    BYTE PTR [eax],al
  436cd4:	mov    BYTE PTR [ebx+eax*2+0x0],ch
  436cd8:	add    DWORD PTR [eax],eax
  436cda:	add    BYTE PTR [eax],al
  436cdc:	mov    eax,0x436c
	...
  436ce9:	add    BYTE PTR [eax],al
  436ceb:	add    BYTE PTR [ecx],al
  436ced:	add    BYTE PTR [eax],al
  436cef:	add    bh,bh
  436cf1:	(bad)  
  436cf2:	(bad)  
  436cf3:	call   eax
  436cf5:	mov    edx,0x42
  436cfa:	add    BYTE PTR [eax],al
  436cfc:	add    BYTE PTR [eax],al
  436cfe:	add    BYTE PTR [eax],al
  436d00:	add    DWORD PTR [eax],eax
  436d02:	add    BYTE PTR [eax],al
  436d04:	fnstcw WORD PTR [edx+0x42]
  436d0a:	add    BYTE PTR [eax],al
  436d0c:	add    BYTE PTR [eax],al
  436d0e:	add    BYTE PTR [eax],al
  436d10:	inc    eax
	...
  436d19:	add    BYTE PTR [eax],al
  436d1b:	add    BYTE PTR [esi],ah
  436d1d:	lods   eax,DWORD PTR ds:[esi]
  436d1e:	inc    ecx
  436d1f:	add    BYTE PTR [ecx],al
  436d21:	add    BYTE PTR [eax],al
  436d23:	add    BYTE PTR [edx],al
  436d25:	add    BYTE PTR [eax],al
  436d27:	add    BYTE PTR [ebx],al
  436d29:	add    BYTE PTR [eax],al
  436d2b:	add    BYTE PTR [ecx],al
  436d2d:	add    BYTE PTR [eax],al
  436d2f:	add    BYTE PTR [eax],dl
  436d31:	ins    DWORD PTR es:[edi],dx
  436d32:	inc    ebx
  436d33:	add    BYTE PTR [edx],ah
  436d35:	add    eax,0x41993
  436d3a:	add    BYTE PTR [eax],al
  436d3c:	lock ins BYTE PTR es:[edi],dx
  436d3e:	inc    ebx
  436d3f:	add    BYTE PTR [ecx],al
  436d41:	add    BYTE PTR [eax],al
  436d43:	add    BYTE PTR [eax],ah
  436d45:	ins    DWORD PTR es:[edi],dx
  436d46:	inc    ebx
	...
  436d53:	add    BYTE PTR [ecx],al
  436d55:	add    BYTE PTR [eax],al
  436d57:	add    bh,bh
  436d59:	(bad)  
  436d5a:	(bad)  
  436d5b:	inc    DWORD PTR [eax]
  436d5d:	add    BYTE PTR [eax],al
  436d5f:	add    BYTE PTR [eax],al
  436d61:	add    BYTE PTR [eax],al
  436d63:	add    BYTE PTR [eax],dl
  436d65:	mov    ebx,0xffff0042
  436d6a:	(bad)  
  436d6b:	inc    DWORD PTR [eax]
  436d6d:	add    BYTE PTR [eax],al
  436d6f:	add    BYTE PTR [eax+0x0],al
	...
  436d7a:	add    BYTE PTR [eax],al
  436d7c:	fild   QWORD PTR [ebx+0x41]
  436d82:	add    BYTE PTR [eax],al
  436d84:	add    DWORD PTR [eax],eax
  436d86:	add    BYTE PTR [eax],al
  436d88:	add    al,BYTE PTR [eax]
  436d8a:	add    BYTE PTR [eax],al
  436d8c:	add    DWORD PTR [eax],eax
  436d8e:	add    BYTE PTR [eax],al
  436d90:	jo     0x436dff
  436d92:	inc    ebx
  436d93:	add    BYTE PTR [edx],ah
  436d95:	add    eax,0x31993
  436d9a:	add    BYTE PTR [eax],al
  436d9c:	pop    eax
  436d9d:	ins    DWORD PTR es:[edi],dx
  436d9e:	inc    ebx
  436d9f:	add    BYTE PTR [ecx],al
  436da1:	add    BYTE PTR [eax],al
  436da3:	add    BYTE PTR [eax+0x436d],al
	...
  436db1:	add    BYTE PTR [eax],al
  436db3:	add    BYTE PTR [ecx],al
  436db5:	add    BYTE PTR [eax],al
  436db7:	add    bh,bh
  436db9:	(bad)  
  436dba:	(bad)  
  436dbb:	inc    DWORD PTR [eax-0x45]
  436dbe:	inc    edx
  436dbf:	add    BYTE PTR [edx],ah
  436dc1:	add    eax,0x11993
  436dc6:	add    BYTE PTR [eax],al
  436dc8:	mov    eax,0x436d
	...
  436ddd:	add    BYTE PTR [eax],al
  436ddf:	add    BYTE PTR [ecx],al
  436de1:	add    BYTE PTR [eax],al
  436de3:	add    bh,bh
  436de5:	(bad)  
  436de6:	(bad)  
  436de7:	inc    DWORD PTR [eax]
  436de9:	add    BYTE PTR [eax],al
  436deb:	add    bh,bh
  436ded:	(bad)  
  436dee:	(bad)  
  436def:	inc    DWORD PTR [eax]
  436df1:	add    BYTE PTR [eax],al
  436df3:	add    BYTE PTR [eax+0x0],al
	...
  436dfe:	add    BYTE PTR [eax],al
  436e00:	jg     0x436d96
  436e02:	inc    ecx
	...
  436e0b:	add    BYTE PTR [ecx],al
  436e0d:	add    BYTE PTR [eax],al
  436e0f:	add    BYTE PTR [ecx],al
  436e11:	add    BYTE PTR [eax],al
  436e13:	add    ah,dh
  436e15:	ins    DWORD PTR es:[edi],dx
  436e16:	inc    ebx
  436e17:	add    BYTE PTR [edx],ah
  436e19:	add    eax,0x21993
  436e1e:	add    BYTE PTR [eax],al
  436e20:	in     al,0x6d
  436e22:	inc    ebx
  436e23:	add    BYTE PTR [ecx],al
  436e25:	add    BYTE PTR [eax],al
  436e27:	add    BYTE PTR [esi+ebp*2],al
  436e2a:	inc    ebx
	...
  436e37:	add    BYTE PTR [ecx],al
  436e39:	add    BYTE PTR [eax],al
  436e3b:	add    bh,bh
  436e3d:	(bad)  
  436e3e:	(bad)  
  436e3f:	inc    DWORD PTR [eax]
  436e41:	add    BYTE PTR [eax],al
  436e43:	add    bh,bh
  436e45:	(bad)  
  436e46:	(bad)  
  436e47:	inc    DWORD PTR [eax]
  436e49:	add    BYTE PTR [eax],al
  436e4b:	add    BYTE PTR [eax+0x0],al
	...
  436e56:	add    BYTE PTR [eax],al
  436e58:	sbb    eax,0x4191
  436e5d:	add    BYTE PTR [eax],al
  436e5f:	add    BYTE PTR [eax],al
  436e61:	add    BYTE PTR [eax],al
  436e63:	add    BYTE PTR [ecx],al
  436e65:	add    BYTE PTR [eax],al
  436e67:	add    BYTE PTR [ecx],al
  436e69:	add    BYTE PTR [eax],al
  436e6b:	add    BYTE PTR [esi+ebp*2+0x43],cl
  436e6f:	add    BYTE PTR [edx],ah
  436e71:	add    eax,0x21993
  436e76:	add    BYTE PTR [eax],al
  436e78:	cmp    al,0x6e
  436e7a:	inc    ebx
  436e7b:	add    BYTE PTR [ecx],al
  436e7d:	add    BYTE PTR [eax],al
  436e7f:	add    BYTE PTR [esi+ebp*2+0x43],bl
	...
  436e8f:	add    BYTE PTR [ecx],al
  436e91:	add    BYTE PTR [eax],al
  436e93:	add    bh,bh
  436e95:	(bad)  
  436e96:	(bad)  
  436e97:	inc    DWORD PTR [eax]
  436e99:	add    BYTE PTR [eax],al
  436e9b:	add    bh,bh
  436e9d:	(bad)  
  436e9e:	(bad)  
  436e9f:	inc    DWORD PTR [eax]
  436ea1:	add    BYTE PTR [eax],al
  436ea3:	add    BYTE PTR [eax+0x0],al
	...
  436eae:	add    BYTE PTR [eax],al
  436eb0:	cdq    
  436eb1:	mov    eax,DWORD PTR [ecx+0x0]
	...
  436ebc:	add    DWORD PTR [eax],eax
  436ebe:	add    BYTE PTR [eax],al
  436ec0:	add    DWORD PTR [eax],eax
  436ec2:	add    BYTE PTR [eax],al
  436ec4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436ec5:	outs   dx,BYTE PTR ds:[esi]
  436ec6:	inc    ebx
  436ec7:	add    BYTE PTR [edx],ah
  436ec9:	add    eax,0x21993
  436ece:	add    BYTE PTR [eax],al
  436ed0:	xchg   esp,eax
  436ed1:	outs   dx,BYTE PTR ds:[esi]
  436ed2:	inc    ebx
  436ed3:	add    BYTE PTR [ecx],al
  436ed5:	add    BYTE PTR [eax],al
  436ed7:	add    BYTE PTR [esi+ebp*2+0x43],dh
	...
  436ee6:	add    BYTE PTR [eax],al
  436ee8:	add    DWORD PTR [eax],eax
  436eea:	add    BYTE PTR [eax],al
  436eec:	(bad)  
  436eed:	(bad)  
  436eee:	(bad)  
  436eef:	call   eax
  436ef1:	mov    ebx,0x42
  436ef6:	add    BYTE PTR [eax],al
  436ef8:	fdivr  DWORD PTR [ebx+0x5220042]
  436efe:	xchg   ebx,eax
  436eff:	sbb    DWORD PTR [edx],eax
  436f01:	add    BYTE PTR [eax],al
  436f03:	add    ah,ch
  436f05:	outs   dx,BYTE PTR ds:[esi]
  436f06:	inc    ebx
	...
  436f1b:	add    BYTE PTR [ecx],al
  436f1d:	add    BYTE PTR [eax],al
  436f1f:	add    bh,bh
  436f21:	(bad)  
  436f22:	(bad)  
  436f23:	inc    DWORD PTR [eax]
  436f25:	mov    esp,0x42
  436f2a:	add    BYTE PTR [eax],al
  436f2c:	or     BYTE PTR [edx+eax*2+0x100],bh
  436f33:	add    BYTE PTR [eax],dl
  436f35:	mov    esp,0x5220042
  436f3a:	xchg   ebx,eax
  436f3b:	sbb    DWORD PTR [ebx],eax
  436f3d:	add    BYTE PTR [eax],al
  436f3f:	add    BYTE PTR [eax],ah
  436f41:	outs   dx,DWORD PTR ds:[esi]
  436f42:	inc    ebx
	...
  436f57:	add    BYTE PTR [ecx],al
  436f59:	add    BYTE PTR [eax],al
  436f5b:	add    bh,bh
  436f5d:	(bad)  
  436f5e:	(bad)  
  436f5f:	inc    DWORD PTR [eax-0x44]
  436f62:	inc    edx
  436f63:	add    BYTE PTR [edx],ah
  436f65:	add    eax,0x11993
  436f6a:	add    BYTE PTR [eax],al
  436f6c:	pop    esp
  436f6d:	outs   dx,DWORD PTR ds:[esi]
  436f6e:	inc    ebx
	...
  436f83:	add    BYTE PTR [ecx],al
  436f85:	add    BYTE PTR [eax],al
  436f87:	add    bh,bh
  436f89:	(bad)  
  436f8a:	(bad)  
  436f8b:	push   DWORD PTR [eax-0x44]
  436f8e:	inc    edx
  436f8f:	add    BYTE PTR [eax],al
  436f91:	add    BYTE PTR [eax],al
  436f93:	add    BYTE PTR [eax-0x44],bh
  436f96:	inc    edx
  436f97:	add    BYTE PTR [ecx],al
  436f99:	add    BYTE PTR [eax],al
  436f9b:	add    BYTE PTR [eax+0x220042bc],al
  436fa1:	add    eax,0x31993
  436fa6:	add    BYTE PTR [eax],al
  436fa8:	mov    BYTE PTR [edi+0x43],ch
	...
  436fbf:	add    BYTE PTR [ecx],al
  436fc1:	add    BYTE PTR [eax],al
  436fc3:	add    bh,bh
  436fc5:	(bad)  
  436fc6:	(bad)  
  436fc7:	push   DWORD PTR [eax+0x220042bc]
  436fcd:	add    eax,0x11993
  436fd2:	add    BYTE PTR [eax],al
  436fd4:	les    ebp,FWORD PTR [edi+0x43]
	...
  436feb:	add    BYTE PTR [ecx],al
  436fed:	add    BYTE PTR [eax],al
  436fef:	add    bh,bh
  436ff1:	(bad)  
  436ff2:	(bad)  
  436ff3:	jmp    eax
  436ff5:	mov    esp,0x5220042
  436ffa:	xchg   ebx,eax
  436ffb:	sbb    DWORD PTR [ecx],eax
  436ffd:	add    BYTE PTR [eax],al
  436fff:	add    al,dh
  437001:	outs   dx,DWORD PTR ds:[esi]
  437002:	inc    ebx
	...
  437017:	add    BYTE PTR [ecx],al
  437019:	add    BYTE PTR [eax],al
  43701b:	add    bh,bh
  43701d:	(bad)  
  43701e:	(bad)  
  43701f:	call   DWORD PTR [eax]
  437021:	mov    ebp,0x42
  437026:	add    BYTE PTR [eax],al
  437028:	sbb    BYTE PTR [ebp+0x10042],bh
  43702e:	add    BYTE PTR [eax],al
  437030:	and    BYTE PTR [ebp+0x5220042],bh
  437036:	xchg   ebx,eax
  437037:	sbb    DWORD PTR [ebx],eax
  437039:	add    BYTE PTR [eax],al
  43703b:	add    BYTE PTR [eax+esi*2],bl
  43703e:	inc    ebx
	...
  437053:	add    BYTE PTR [ecx],al
  437055:	add    BYTE PTR [eax],al
  437057:	add    bh,bh
  437059:	(bad)  
  43705a:	(bad)  
  43705b:	call   DWORD PTR [eax-0x43]
  43705e:	inc    edx
  43705f:	add    BYTE PTR [edx],ah
  437061:	add    eax,0x11993
  437066:	add    BYTE PTR [eax],al
  437068:	pop    eax
  437069:	jo     0x4370ae
	...
  43707f:	add    BYTE PTR [ecx],al
  437081:	add    BYTE PTR [eax],al
  437083:	add    bh,bh
  437085:	(bad)  
  437086:	(bad)  
  437087:	inc    DWORD PTR [eax+0x220042bd]
  43708d:	add    eax,0x11993
  437092:	add    BYTE PTR [eax],al
  437094:	test   BYTE PTR [eax+0x43],dh
	...
  4370ab:	add    BYTE PTR [ecx],al
  4370ad:	add    BYTE PTR [eax],al
  4370af:	add    bh,bh
  4370b1:	(bad)  
  4370b2:	(bad)  
  4370b3:	push   DWORD PTR [eax+0x220042bd]
  4370b9:	add    eax,0x11993
  4370be:	add    BYTE PTR [eax],al
  4370c0:	mov    al,0x70
  4370c2:	inc    ebx
	...
  4370d7:	add    BYTE PTR [ecx],al
  4370d9:	add    BYTE PTR [eax],al
  4370db:	add    bh,bh
  4370dd:	(bad)  
  4370de:	(bad)  
  4370df:	push   ecx
  4370e1:	mov    ebp,0x42
  4370e6:	add    BYTE PTR [eax],al
  4370e8:	loopne 0x4370a7
  4370ea:	inc    edx
  4370eb:	add    BYTE PTR [ecx],al
  4370ed:	add    BYTE PTR [eax],al
  4370ef:	add    cl,ch
  4370f1:	mov    ebp,0x5220042
  4370f6:	xchg   ebx,eax
  4370f7:	sbb    DWORD PTR [ebx],eax
  4370f9:	add    BYTE PTR [eax],al
  4370fb:	add    ah,bl
  4370fd:	jo     0x437142
	...
  437113:	add    BYTE PTR [ecx],al
  437115:	add    BYTE PTR [eax],al
  437117:	add    bh,bh
  437119:	(bad)  
  43711a:	(bad)  
  43711b:	push   DWORD PTR [eax]
  43711d:	mov    esi,0x42
  437122:	add    BYTE PTR [eax],al
  437124:	cmp    DWORD PTR [esi+0x5220042],edi
  43712a:	xchg   ebx,eax
  43712b:	sbb    DWORD PTR [edx],eax
  43712d:	add    BYTE PTR [eax],al
  43712f:	add    BYTE PTR [eax],bl
  437131:	jno    0x437176
	...
  437147:	add    BYTE PTR [ecx],al
  437149:	add    BYTE PTR [eax],al
  43714b:	add    bh,bh
  43714d:	(bad)  
  43714e:	(bad)  
  43714f:	push   DWORD PTR [eax-0x42]
  437152:	inc    edx
  437153:	add    BYTE PTR [edx],ah
  437155:	add    eax,0x11993
  43715a:	add    BYTE PTR [eax],al
  43715c:	dec    esp
  43715d:	jno    0x4371a2
	...
  437173:	add    BYTE PTR [ecx],al
  437175:	add    BYTE PTR [eax],al
  437177:	add    bh,bh
  437179:	(bad)  
  43717a:	(bad)  
  43717b:	push   DWORD PTR [eax+0x220042be]
  437181:	add    eax,0x11993
  437186:	add    BYTE PTR [eax],al
  437188:	js     0x4371fb
  43718a:	inc    ebx
	...
  43719f:	add    BYTE PTR [ecx],al
  4371a1:	add    BYTE PTR [eax],al
  4371a3:	add    bh,bh
  4371a5:	(bad)  
  4371a6:	(bad)  
  4371a7:	inc    DWORD PTR [eax]
  4371a9:	add    BYTE PTR [eax],al
  4371ab:	add    bh,bh
  4371ad:	(bad)  
  4371ae:	(bad)  
  4371af:	inc    DWORD PTR [eax]
  4371b1:	add    BYTE PTR [eax],al
  4371b3:	add    bh,bh
  4371b5:	(bad)  
  4371b6:	(bad)  
  4371b7:	jmp    eax
  4371b9:	mov    esi,0x20042
  4371be:	add    BYTE PTR [eax],al
  4371c0:	add    BYTE PTR [eax],al
  4371c2:	add    BYTE PTR [eax],al
  4371c4:	add    al,BYTE PTR [eax]
  4371c6:	add    BYTE PTR [eax],al
  4371c8:	add    BYTE PTR [eax],al
  4371ca:	add    BYTE PTR [eax],al
  4371cc:	(bad)  
  4371cd:	(bad)  
  4371ce:	(bad)  
  4371cf:	(bad)  
  4371d0:	jmp    0x4043b493
	...
  4371dd:	add    BYTE PTR [eax],al
  4371df:	add    BYTE PTR [ebp+0x40004158],cl
	...
  4371ed:	add    BYTE PTR [eax],al
  4371ef:	add    BYTE PTR [ebx+0x4159],cl
  4371f5:	add    BYTE PTR [eax],al
  4371f7:	add    BYTE PTR [eax],al
  4371f9:	add    BYTE PTR [eax],al
  4371fb:	add    BYTE PTR [ecx],al
  4371fd:	add    BYTE PTR [eax],al
  4371ff:	add    BYTE PTR [ecx],al
  437201:	add    BYTE PTR [eax],al
  437203:	add    ah,dl
  437205:	jno    0x43724a
  437207:	add    BYTE PTR [ebx],al
  437209:	add    BYTE PTR [eax],al
  43720b:	add    BYTE PTR [ebx],al
  43720d:	add    BYTE PTR [eax],al
  43720f:	add    BYTE PTR [eax+eax*1],al
  437212:	add    BYTE PTR [eax],al
  437214:	add    DWORD PTR [eax],eax
  437216:	add    BYTE PTR [eax],al
  437218:	in     al,0x71
  43721a:	inc    ebx
  43721b:	add    BYTE PTR [edx],ah
  43721d:	add    eax,0x61993
  437222:	add    BYTE PTR [eax],al
  437224:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437225:	jno    0x43726a
  437227:	add    BYTE PTR [edx],al
  437229:	add    BYTE PTR [eax],al
  43722b:	add    ah,dh
  43722d:	jno    0x437272
	...
  43723b:	add    BYTE PTR [ecx],al
  43723d:	add    BYTE PTR [eax],al
  43723f:	add    bh,bh
  437241:	(bad)  
  437242:	(bad)  
  437243:	jmp    DWORD PTR [eax]
  437245:	mov    edi,0x5220042
  43724a:	xchg   ebx,eax
  43724b:	sbb    DWORD PTR [ecx],eax
  43724d:	add    BYTE PTR [eax],al
  43724f:	add    BYTE PTR [eax+0x72],al
  437252:	inc    ebx
	...
  437267:	add    BYTE PTR [ecx],al
  437269:	add    BYTE PTR [eax],al
  43726b:	add    bh,bh
  43726d:	(bad)  
  43726e:	(bad)  
  43726f:	inc    DWORD PTR [eax]
  437271:	add    BYTE PTR [eax],al
  437273:	add    bh,bh
  437275:	(bad)  
  437276:	(bad)  
  437277:	inc    DWORD PTR [eax]
  437279:	add    BYTE PTR [eax],al
  43727b:	add    bh,bh
  43727d:	(bad)  
  43727e:	(bad)  
  43727f:	call   DWORD PTR [eax-0x41]
  437282:	inc    edx
  437283:	add    BYTE PTR [edx],al
  437285:	add    BYTE PTR [eax],al
  437287:	add    BYTE PTR [eax],al
  437289:	add    BYTE PTR [eax],al
  43728b:	add    BYTE PTR [edx],al
  43728d:	add    BYTE PTR [eax],al
  43728f:	add    BYTE PTR [eax],al
  437291:	add    BYTE PTR [eax],al
  437293:	add    bh,bh
  437295:	(bad)  
  437296:	(bad)  
  437297:	call   FWORD PTR [ecx-0x41]
  43729a:	inc    edx
  43729b:	add    BYTE PTR [eax+0x0],al
	...
  4372a6:	add    BYTE PTR [eax],al
  4372a8:	lods   eax,DWORD PTR ds:[esi]
  4372a9:	inc    esp
  4372aa:	inc    ecx
  4372ab:	add    BYTE PTR [eax+0x0],al
	...
  4372b6:	add    BYTE PTR [eax],al
  4372b8:	stos   DWORD PTR es:[edi],eax
  4372b9:	inc    ebp
  4372ba:	inc    ecx
	...
  4372c3:	add    BYTE PTR [ecx],al
  4372c5:	add    BYTE PTR [eax],al
  4372c7:	add    BYTE PTR [ecx],al
  4372c9:	add    BYTE PTR [eax],al
  4372cb:	add    BYTE PTR [edx+esi*2+0x30043],bl
  4372d2:	add    BYTE PTR [eax],al
  4372d4:	add    eax,DWORD PTR [eax]
  4372d6:	add    BYTE PTR [eax],al
  4372d8:	add    al,0x0
  4372da:	add    BYTE PTR [eax],al
  4372dc:	add    DWORD PTR [eax],eax
  4372de:	add    BYTE PTR [eax],al
  4372e0:	lods   al,BYTE PTR ds:[esi]
  4372e1:	jb     0x437326
  4372e3:	add    BYTE PTR [edx],ah
  4372e5:	add    eax,0x61993
  4372ea:	add    BYTE PTR [eax],al
  4372ec:	ins    BYTE PTR es:[edi],dx
  4372ed:	jb     0x437332
  4372ef:	add    BYTE PTR [edx],al
  4372f1:	add    BYTE PTR [eax],al
  4372f3:	add    BYTE PTR [edx+esi*2+0x43],bh
	...
  437302:	add    BYTE PTR [eax],al
  437304:	add    DWORD PTR [eax],eax
  437306:	add    BYTE PTR [eax],al
  437308:	(bad)  
  437309:	(bad)  
  43730a:	(bad)  
  43730b:	call   DWORD PTR [eax+0x220042bf]
  437311:	add    eax,0x11993
  437316:	add    BYTE PTR [eax],al
  437318:	or     BYTE PTR [ebx+0x43],dh
	...
  43732f:	add    BYTE PTR [ecx],al
  437331:	add    BYTE PTR [eax],al
  437333:	add    bh,bh
  437335:	(bad)  
  437336:	(bad)  
  437337:	inc    eax
  437339:	mov    edi,0x5220042
  43733e:	xchg   ebx,eax
  43733f:	sbb    DWORD PTR [ecx],eax
  437341:	add    BYTE PTR [eax],al
  437343:	add    BYTE PTR [ebx+esi*2],dh
  437346:	inc    ebx
	...
  43735b:	add    BYTE PTR [ecx],al
  43735d:	add    BYTE PTR [eax],al
  43735f:	add    bh,bh
  437361:	(bad)  
  437362:	(bad)  
  437363:	inc    DWORD PTR [eax]
  437365:	rol    BYTE PTR [edx+0x0],0x0
  437369:	add    BYTE PTR [eax],al
  43736b:	add    BYTE PTR [ecx],cl
  43736d:	rol    BYTE PTR [edx+0x0],0x22
  437371:	add    eax,0x21993
  437376:	add    BYTE PTR [eax],al
  437378:	pusha  
  437379:	jae    0x4373be
	...
  43738f:	add    BYTE PTR [ecx],al
  437391:	add    BYTE PTR [eax],al
  437393:	add    bh,bh
  437395:	(bad)  
  437396:	(bad)  
  437397:	push   DWORD PTR [eax]
  437399:	rol    BYTE PTR [edx+0x0],0x22
  43739d:	add    eax,0x11993
  4373a2:	add    BYTE PTR [eax],al
  4373a4:	xchg   esp,eax
  4373a5:	jae    0x4373ea
	...
  4373bb:	add    BYTE PTR [ecx],al
  4373bd:	add    BYTE PTR [eax],al
  4373bf:	add    bh,bh
  4373c1:	(bad)  
  4373c2:	(bad)  
  4373c3:	push   DWORD PTR [eax-0x40]
  4373c6:	inc    edx
  4373c7:	add    BYTE PTR [edx],ah
  4373c9:	add    eax,0x11993
  4373ce:	add    BYTE PTR [eax],al
  4373d0:	shl    BYTE PTR [ebx+0x43],0x0
	...
  4373e8:	add    DWORD PTR [eax],eax
  4373ea:	add    BYTE PTR [eax],al
  4373ec:	(bad)  
  4373ed:	(bad)  
  4373ee:	(bad)  
  4373ef:	jmp    DWORD PTR [eax+0x220042c0]
  4373f5:	add    eax,0x11993
  4373fa:	add    BYTE PTR [eax],al
  4373fc:	in     al,dx
  4373fd:	jae    0x437442
	...
  437413:	add    BYTE PTR [ecx],al
  437415:	add    BYTE PTR [eax],al
  437417:	add    bh,bh
  437419:	(bad)  
  43741a:	(bad)  
  43741b:	call   eax
  43741d:	rol    BYTE PTR [edx+0x0],0x0
  437421:	add    BYTE PTR [eax],al
  437423:	add    ah,bl
  437425:	rol    BYTE PTR [edx+0x0],0x1
  437429:	add    BYTE PTR [eax],al
  43742b:	add    ch,ah
  43742d:	rol    BYTE PTR [edx+0x0],0xff
  437431:	(bad)  
  437432:	(bad)  
  437433:	(bad)  
  437434:	out    dx,al
  437435:	rol    BYTE PTR [edx+0x0],0x3
  437439:	add    BYTE PTR [eax],al
  43743b:	add    bh,dh
  43743d:	rol    BYTE PTR [edx+0x0],0x22
  437441:	add    eax,0x51993
  437446:	add    BYTE PTR [eax],al
  437448:	sbb    BYTE PTR [ebx+eax*2+0x0],dh
	...
  437460:	add    DWORD PTR [eax],eax
  437462:	add    BYTE PTR [eax],al
  437464:	add    BYTE PTR [eax],al
  437466:	add    BYTE PTR [eax],al
  437468:	(bad)  
  437469:	(bad)  
  43746a:	(bad)  
  43746b:	push   DWORD PTR [eax]
  43746d:	rol    DWORD PTR [edx+0x0],0x0
  437471:	add    BYTE PTR [eax],al
  437473:	add    BYTE PTR [ecx],bh
  437475:	rol    DWORD PTR [edx+0x0],0xff
  437479:	(bad)  
  43747a:	(bad)  
  43747b:	(bad)  
  43747c:	cmp    ecx,eax
  43747e:	inc    edx
  43747f:	add    BYTE PTR [edx],al
  437481:	add    BYTE PTR [eax],al
  437483:	add    BYTE PTR [edx-0x3f],al
  437486:	inc    edx
  437487:	add    BYTE PTR [ebx],al
  437489:	add    BYTE PTR [eax],al
  43748b:	add    BYTE PTR [ebx-0x3f],cl
  43748e:	inc    edx
  43748f:	add    BYTE PTR [edx],al
  437491:	add    BYTE PTR [eax],al
  437493:	add    BYTE PTR [edi-0x3f],dl
  437496:	inc    edx
  437497:	add    BYTE PTR ds:0x63000000,al
  43749d:	rol    DWORD PTR [edx+0x0],0x6
  4374a1:	add    BYTE PTR [eax],al
  4374a3:	add    BYTE PTR [ecx+eax*8+0x42],ch
  4374a7:	add    BYTE PTR [edx],al
  4374a9:	add    BYTE PTR [eax],al
  4374ab:	add    BYTE PTR [ebp-0x3f],dh
  4374ae:	inc    edx
  4374af:	add    BYTE PTR [edx],ah
  4374b1:	add    eax,0x91993
  4374b6:	add    BYTE PTR [eax],al
  4374b8:	push   0x4374
	...
  4374cd:	add    BYTE PTR [eax],al
  4374cf:	add    BYTE PTR [ecx],al
  4374d1:	add    BYTE PTR [eax],al
  4374d3:	add    bh,bh
  4374d5:	(bad)  
  4374d6:	(bad)  
  4374d7:	push   DWORD PTR [eax+0x42c1]
  4374dd:	add    BYTE PTR [eax],al
  4374df:	add    BYTE PTR [eax+0x10042c1],bh
  4374e5:	add    BYTE PTR [eax],al
  4374e7:	add    cl,al
  4374e9:	rol    DWORD PTR [edx+0x0],0x22
  4374ed:	add    eax,0x31993
  4374f2:	add    BYTE PTR [eax],al
  4374f4:	aam    0x74
  4374f6:	inc    ebx
	...
  43750b:	add    BYTE PTR [ecx],al
  43750d:	add    BYTE PTR [eax],al
  43750f:	add    bh,bh
  437511:	(bad)  
  437512:	(bad)  
  437513:	inc    DWORD PTR [eax]
  437515:	ret    0x42
  437518:	and    al,BYTE PTR ds:0x11993
  43751e:	add    BYTE PTR [eax],al
  437520:	adc    BYTE PTR [ebp+0x43],dh
	...
  437537:	add    BYTE PTR [ecx],al
  437539:	add    BYTE PTR [eax],al
  43753b:	add    bh,bh
  43753d:	(bad)  
  43753e:	(bad)  
  43753f:	push   DWORD PTR [eax]
  437541:	ret    0x42
	...
  437554:	(bad)  
  437555:	(bad)  
  437556:	(bad)  
  437557:	(bad)  
  437558:	cmp    al,dl
  43755a:	inc    edx
  43755b:	add    BYTE PTR [eax+0x0],al
	...
  437566:	add    BYTE PTR [eax],al
  437568:	mov    bl,0x45
  43756a:	inc    eax
  43756b:	add    BYTE PTR [ecx],al
  43756d:	add    BYTE PTR [eax],al
  43756f:	add    BYTE PTR [ecx],al
  437571:	add    BYTE PTR [eax],al
  437573:	add    BYTE PTR [edx],al
  437575:	add    BYTE PTR [eax],al
  437577:	add    BYTE PTR [ecx],al
  437579:	add    BYTE PTR [eax],al
  43757b:	add    BYTE PTR [ebp+esi*2+0x43],bl
  43757f:	add    BYTE PTR [edx],ah
  437581:	add    eax,0x41993
  437586:	add    BYTE PTR [eax],al
  437588:	cmp    al,0x75
  43758a:	inc    ebx
  43758b:	add    BYTE PTR [ecx],al
  43758d:	add    BYTE PTR [eax],al
  43758f:	add    BYTE PTR [ebp+esi*2+0x43],ch
	...
  43759f:	add    BYTE PTR [ecx],al
  4375a1:	add    BYTE PTR [eax],al
  4375a3:	add    bh,bh
  4375a5:	(bad)  
  4375a6:	(bad)  
  4375a7:	inc    DWORD PTR [eax]
  4375a9:	add    BYTE PTR [eax],al
  4375ab:	add    bh,bh
  4375ad:	(bad)  
  4375ae:	(bad)  
  4375af:	inc    DWORD PTR [eax]
  4375b1:	add    BYTE PTR [eax],al
  4375b3:	add    BYTE PTR [eax+0x0],al
	...
  4375be:	add    BYTE PTR [eax],al
  4375c0:	cmp    DWORD PTR [ebx],0x40
  4375c6:	add    BYTE PTR [eax],al
  4375c8:	add    BYTE PTR [eax],al
  4375ca:	add    BYTE PTR [eax],al
  4375cc:	add    DWORD PTR [eax],eax
  4375ce:	add    BYTE PTR [eax],al
  4375d0:	add    DWORD PTR [eax],eax
  4375d2:	add    BYTE PTR [eax],al
  4375d4:	mov    ah,0x75
  4375d6:	inc    ebx
  4375d7:	add    BYTE PTR [edx],ah
  4375d9:	add    eax,0x21993
  4375de:	add    BYTE PTR [eax],al
  4375e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4375e1:	jne    0x437626
  4375e3:	add    BYTE PTR [ecx],al
  4375e5:	add    BYTE PTR [eax],al
  4375e7:	add    ah,al
  4375e9:	jne    0x43762e
	...
  4375f7:	add    BYTE PTR [ecx],al
  4375f9:	add    BYTE PTR [eax],al
  4375fb:	add    bh,bh
  4375fd:	(bad)  
  4375fe:	(bad)  
  4375ff:	inc    DWORD PTR [eax+0x220042c2]
  437605:	add    eax,0x11993
  43760a:	add    BYTE PTR [eax],al
  43760c:	cld    
  43760d:	jne    0x437652
	...
  437623:	add    BYTE PTR [ecx],al
  437625:	add    BYTE PTR [eax],al
  437627:	add    bh,bh
  437629:	(bad)  
  43762a:	(bad)  
  43762b:	push   DWORD PTR [eax+0x220042c2]
  437631:	add    eax,0x11993
  437636:	add    BYTE PTR [eax],al
  437638:	sub    BYTE PTR [esi+0x43],dh
	...
  43764f:	add    BYTE PTR [ecx],al
  437651:	add    BYTE PTR [eax],al
  437653:	add    bh,bh
  437655:	(bad)  
  437656:	(bad)  
  437657:	jmp    eax
  437659:	ret    0x42
  43765c:	add    BYTE PTR [eax],al
  43765e:	add    BYTE PTR [eax],al
  437660:	call   0x2243b927
  437665:	add    eax,0x21993
  43766a:	add    BYTE PTR [eax],al
  43766c:	push   esp
  43766d:	jbe    0x4376b2
	...
  437683:	add    BYTE PTR [ecx],al
  437685:	add    BYTE PTR [eax],al
  437687:	add    bh,bh
  437689:	(bad)  
  43768a:	(bad)  
  43768b:	call   DWORD PTR [eax]
  43768d:	ret    
  43768e:	inc    edx
  43768f:	add    BYTE PTR [edx],ah
  437691:	add    eax,0x11993
  437696:	add    BYTE PTR [eax],al
  437698:	mov    BYTE PTR [esi+0x43],dh
	...
  4376af:	add    BYTE PTR [ecx],al
  4376b1:	add    BYTE PTR [eax],al
  4376b3:	add    bh,bh
  4376b5:	(bad)  
  4376b6:	(bad)  
  4376b7:	inc    DWORD PTR [eax]
  4376b9:	add    BYTE PTR [eax],al
  4376bb:	add    bh,bh
  4376bd:	(bad)  
  4376be:	(bad)  
  4376bf:	inc    DWORD PTR [eax]
  4376c1:	add    BYTE PTR [eax],al
  4376c3:	add    BYTE PTR [eax+0x0],al
	...
  4376ce:	add    BYTE PTR [eax],al
  4376d0:	stc    
  4376d1:	daa    
  4376d2:	inc    eax
	...
  4376db:	add    BYTE PTR [ecx],al
  4376dd:	add    BYTE PTR [eax],al
  4376df:	add    BYTE PTR [ecx],al
  4376e1:	add    BYTE PTR [eax],al
  4376e3:	add    ah,al
  4376e5:	jbe    0x43772a
  4376e7:	add    BYTE PTR [edx],ah
  4376e9:	add    eax,0x21993
  4376ee:	add    BYTE PTR [eax],al
  4376f0:	mov    ah,0x76
  4376f2:	inc    ebx
  4376f3:	add    BYTE PTR [ecx],al
  4376f5:	add    BYTE PTR [eax],al
  4376f7:	add    ah,dl
  4376f9:	jbe    0x43773e
	...
  437707:	add    BYTE PTR [ecx],al
  437709:	add    BYTE PTR [eax],al
  43770b:	add    bh,bh
  43770d:	(bad)  
  43770e:	(bad)  
  43770f:	jmp    DWORD PTR [eax-0x3d]
  437712:	inc    edx
  437713:	add    BYTE PTR [edx],ah
  437715:	add    eax,0x11993
  43771a:	add    BYTE PTR [eax],al
  43771c:	or     al,0x77
  43771e:	inc    ebx
	...
  437733:	add    BYTE PTR [ecx],al
  437735:	add    BYTE PTR [eax],al
  437737:	add    bh,bh
  437739:	(bad)  
  43773a:	(bad)  
  43773b:	inc    DWORD PTR [eax]
  43773d:	add    BYTE PTR [eax],al
  43773f:	add    bh,bh
  437741:	(bad)  
  437742:	(bad)  
  437743:	inc    DWORD PTR [eax]
  437745:	add    BYTE PTR [eax],al
  437747:	add    bh,bh
  437749:	(bad)  
  43774a:	(bad)  
  43774b:	inc    DWORD PTR [eax]
  43774d:	add    BYTE PTR [eax],al
  43774f:	add    bh,bh
  437751:	(bad)  
  437752:	(bad)  
  437753:	inc    DWORD PTR [eax]
  437755:	add    BYTE PTR [eax],al
  437757:	add    BYTE PTR [eax+0x0],al
	...
  437762:	add    BYTE PTR [eax],al
  437764:	jb     0x437789
  437766:	inc    eax
  437767:	add    BYTE PTR [eax+0x0],al
	...
  437772:	add    BYTE PTR [eax],al
  437774:	shl    BYTE PTR [ebx],cl
  437776:	inc    eax
	...
  43777f:	add    BYTE PTR [ecx],al
  437781:	add    BYTE PTR [eax],al
  437783:	add    BYTE PTR [ecx],al
  437785:	add    BYTE PTR [eax],al
  437787:	add    BYTE PTR [eax+0x77],bl
  43778a:	inc    ebx
  43778b:	add    BYTE PTR [edx],al
  43778d:	add    BYTE PTR [eax],al
  43778f:	add    BYTE PTR [edx],al
  437791:	add    BYTE PTR [eax],al
  437793:	add    BYTE PTR [ebx],al
  437795:	add    BYTE PTR [eax],al
  437797:	add    BYTE PTR [ecx],al
  437799:	add    BYTE PTR [eax],al
  43779b:	add    BYTE PTR [eax+0x77],ch
  43779e:	inc    ebx
  43779f:	add    BYTE PTR [edx],ah
  4377a1:	add    eax,0x41993
  4377a6:	add    BYTE PTR [eax],al
  4377a8:	cmp    BYTE PTR [edi+0x43],dh
  4377ab:	add    BYTE PTR [edx],al
  4377ad:	add    BYTE PTR [eax],al
  4377af:	add    BYTE PTR [eax+0x77],bh
  4377b2:	inc    ebx
	...
  4377bf:	add    BYTE PTR [ecx],al
  4377c1:	add    BYTE PTR [eax],al
  4377c3:	add    bh,bh
  4377c5:	(bad)  
  4377c6:	(bad)  
  4377c7:	inc    eax
  4377c9:	ret    
  4377ca:	inc    edx
  4377cb:	add    bh,bh
  4377cd:	(bad)  
  4377ce:	(bad)  
  4377cf:	dec    ecx
  4377d1:	ret    
  4377d2:	inc    edx
  4377d3:	add    BYTE PTR [edx],ah
  4377d5:	add    eax,0x21993
  4377da:	add    BYTE PTR [eax],al
  4377dc:	les    esi,FWORD PTR [edi+0x43]
	...
  4377f3:	add    BYTE PTR [ecx],al
  4377f5:	add    BYTE PTR [eax],al
  4377f7:	add    bh,bh
  4377f9:	(bad)  
  4377fa:	(bad)  
  4377fb:	inc    DWORD PTR [eax]
  4377fd:	les    eax,FWORD PTR [edx+0x0]
  437800:	and    al,BYTE PTR ds:0x11993
  437806:	add    BYTE PTR [eax],al
  437808:	clc    
  437809:	ja     0x43784e
	...
  43781f:	add    BYTE PTR [ecx],al
  437821:	add    BYTE PTR [eax],al
  437823:	add    bh,bh
  437825:	(bad)  
  437826:	(bad)  
  437827:	push   DWORD PTR [eax]
  437829:	les    eax,FWORD PTR [edx+0x0]
	...
  43783c:	inc    eax
	...
  437845:	add    BYTE PTR [eax],al
  437847:	add    BYTE PTR [ebx],dh
  437849:	xor    eax,DWORD PTR [edx+0x0]
  43784c:	add    DWORD PTR [eax],eax
  43784e:	add    BYTE PTR [eax],al
  437850:	add    DWORD PTR [eax],eax
  437852:	add    BYTE PTR [eax],al
  437854:	add    al,BYTE PTR [eax]
  437856:	add    BYTE PTR [eax],al
  437858:	add    DWORD PTR [eax],eax
  43785a:	add    BYTE PTR [eax],al
  43785c:	cmp    al,0x78
  43785e:	inc    ebx
  43785f:	add    BYTE PTR [edx],ah
  437861:	add    eax,0x31993
  437866:	add    BYTE PTR [eax],al
  437868:	and    al,0x78
  43786a:	inc    ebx
  43786b:	add    BYTE PTR [ecx],al
  43786d:	add    BYTE PTR [eax],al
  43786f:	add    BYTE PTR [eax+edi*2+0x43],cl
	...
  43787f:	add    BYTE PTR [ecx],al
  437881:	add    BYTE PTR [eax],al
  437883:	add    bh,bh
  437885:	(bad)  
  437886:	(bad)  
  437887:	jmp    DWORD PTR [eax-0x3c]
  43788a:	inc    edx
  43788b:	add    BYTE PTR [eax],al
  43788d:	add    BYTE PTR [eax],al
  43788f:	add    BYTE PTR [edx-0x3c],ch
  437892:	inc    edx
  437893:	add    BYTE PTR [ecx],al
  437895:	add    BYTE PTR [eax],al
  437897:	add    BYTE PTR [esp+eax*8+0x42],dh
  43789b:	add    BYTE PTR [edx],ah
  43789d:	add    eax,0x31993
  4378a2:	add    BYTE PTR [eax],al
  4378a4:	test   BYTE PTR [eax+0x43],bh
	...
  4378bb:	add    BYTE PTR [ecx],al
  4378bd:	add    BYTE PTR [eax],al
  4378bf:	add    bh,bh
  4378c1:	(bad)  
  4378c2:	(bad)  
  4378c3:	jmp    FWORD PTR [ebp+0x42c4]
  4378c9:	add    BYTE PTR [eax],al
  4378cb:	add    BYTE PTR [eax+0x220042c4],ah
  4378d1:	add    eax,0x21993
  4378d6:	add    BYTE PTR [eax],al
  4378d8:	sar    BYTE PTR [eax+0x43],0x0
	...
  4378f0:	add    DWORD PTR [eax],eax
  4378f2:	add    BYTE PTR [eax],al
  4378f4:	(bad)  
  4378f5:	(bad)  
  4378f6:	(bad)  
  4378f7:	push   eax
  4378f9:	les    eax,FWORD PTR [edx+0x0]
  4378fc:	add    BYTE PTR [eax],al
  4378fe:	add    BYTE PTR [eax],al
  437900:	clc    
  437901:	les    eax,FWORD PTR [edx+0x0]
  437904:	and    al,BYTE PTR ds:0x21993
  43790a:	add    BYTE PTR [eax],al
  43790c:	hlt    
  43790d:	js     0x437952
	...
  437923:	add    BYTE PTR [ecx],al
  437925:	add    BYTE PTR [eax],al
  437927:	add    bh,bh
  437929:	(bad)  
  43792a:	(bad)  
  43792b:	inc    DWORD PTR [eax]
  43792d:	add    BYTE PTR [eax],al
  43792f:	add    bh,bh
  437931:	(bad)  
  437932:	(bad)  
  437933:	inc    DWORD PTR [eax]
  437935:	add    BYTE PTR [eax],al
  437937:	add    bh,bh
  437939:	(bad)  
  43793a:	(bad)  
  43793b:	inc    DWORD PTR [eax]
  43793d:	add    BYTE PTR [eax],al
  43793f:	add    bh,bh
  437941:	(bad)  
  437942:	(bad)  
  437943:	inc    DWORD PTR [eax]
  437945:	add    BYTE PTR [eax],al
  437947:	add    BYTE PTR [eax+0x0],al
	...
  437952:	add    BYTE PTR [eax],al
  437954:	sub    eax,0x400041ea
	...
  437961:	add    BYTE PTR [eax],al
  437963:	add    BYTE PTR [edi+0x41ea],cl
  437969:	add    BYTE PTR [eax],al
  43796b:	add    BYTE PTR [eax],al
  43796d:	add    BYTE PTR [eax],al
  43796f:	add    BYTE PTR [ecx],al
  437971:	add    BYTE PTR [eax],al
  437973:	add    BYTE PTR [ecx],al
  437975:	add    BYTE PTR [eax],al
  437977:	add    BYTE PTR [eax+0x79],cl
  43797a:	inc    ebx
  43797b:	add    BYTE PTR [edx],al
  43797d:	add    BYTE PTR [eax],al
  43797f:	add    BYTE PTR [edx],al
  437981:	add    BYTE PTR [eax],al
  437983:	add    BYTE PTR [ebx],al
  437985:	add    BYTE PTR [eax],al
  437987:	add    BYTE PTR [ecx],al
  437989:	add    BYTE PTR [eax],al
  43798b:	add    BYTE PTR [eax+0x79],bl
  43798e:	inc    ebx
  43798f:	add    BYTE PTR [edx],ah
  437991:	add    eax,0x41993
  437996:	add    BYTE PTR [eax],al
  437998:	sub    BYTE PTR [ecx+0x43],bh
  43799b:	add    BYTE PTR [edx],al
  43799d:	add    BYTE PTR [eax],al
  43799f:	add    BYTE PTR [eax+0x79],ch
  4379a2:	inc    ebx
	...
  4379af:	add    BYTE PTR [ecx],al
  4379b1:	add    BYTE PTR [eax],al
  4379b3:	add    bh,bh
  4379b5:	(bad)  
  4379b6:	(bad)  
  4379b7:	call   DWORD PTR [eax-0x3b]
  4379ba:	inc    edx
  4379bb:	add    BYTE PTR [edx],ah
  4379bd:	add    eax,0x11993
  4379c2:	add    BYTE PTR [eax],al
  4379c4:	mov    ah,0x79
  4379c6:	inc    ebx
	...
  4379db:	add    BYTE PTR [ecx],al
  4379dd:	add    BYTE PTR [eax],al
  4379df:	add    bh,bh
  4379e1:	(bad)  
  4379e2:	(bad)  
  4379e3:	inc    DWORD PTR [eax+0x42c5]
  4379e9:	add    BYTE PTR [eax],al
  4379eb:	add    BYTE PTR [eax+0x220042c5],cl
  4379f1:	add    eax,0x21993
  4379f6:	add    BYTE PTR [eax],al
  4379f8:	loopne 0x437a73
  4379fa:	inc    ebx
	...
  437a0f:	add    BYTE PTR [ecx],al
  437a11:	add    BYTE PTR [eax],al
  437a13:	add    bh,bh
  437a15:	(bad)  
  437a16:	(bad)  
  437a17:	push   DWORD PTR [eax+0x42c5]
  437a1d:	add    BYTE PTR [eax],al
  437a1f:	add    BYTE PTR [eax+0x220042c5],bh
  437a25:	add    eax,0x21993
  437a2a:	add    BYTE PTR [eax],al
  437a2c:	adc    al,0x7a
  437a2e:	inc    ebx
	...
  437a43:	add    BYTE PTR [ecx],al
  437a45:	add    BYTE PTR [eax],al
  437a47:	add    bh,bh
  437a49:	(bad)  
  437a4a:	(bad)  
  437a4b:	jmp    eax
  437a4d:	lds    eax,FWORD PTR [edx+0x0]
  437a50:	and    al,BYTE PTR ds:0x11993
  437a56:	add    BYTE PTR [eax],al
  437a58:	dec    eax
  437a59:	jp     0x437a9e
	...
  437a6f:	add    BYTE PTR [ecx],al
  437a71:	add    BYTE PTR [eax],al
  437a73:	add    bh,bh
  437a75:	(bad)  
  437a76:	(bad)  
  437a77:	call   DWORD PTR [eax]
  437a79:	mov    BYTE PTR [edx+0x0],0x22
  437a7d:	add    eax,0x11993
  437a82:	add    BYTE PTR [eax],al
  437a84:	je     0x437b00
  437a86:	inc    ebx
	...
  437a9b:	add    BYTE PTR [ecx],al
  437a9d:	add    BYTE PTR [eax],al
  437a9f:	add    bh,bh
  437aa1:	(bad)  
  437aa2:	(bad)  
  437aa3:	inc    DWORD PTR [eax-0x3a]
  437aa6:	inc    edx
  437aa7:	add    BYTE PTR [edx],ah
  437aa9:	add    eax,0x11993
  437aae:	add    BYTE PTR [eax],al
  437ab0:	mov    al,ds:0x437a
	...
  437ac5:	add    BYTE PTR [eax],al
  437ac7:	add    BYTE PTR [ecx],al
  437ac9:	add    BYTE PTR [eax],al
  437acb:	add    bh,bh
  437acd:	(bad)  
  437ace:	(bad)  
  437acf:	push   DWORD PTR [eax-0x3a]
  437ad2:	inc    edx
  437ad3:	add    BYTE PTR [edx],ah
  437ad5:	add    eax,0x11993
  437ada:	add    BYTE PTR [eax],al
  437adc:	int3   
  437add:	jp     0x437b22
	...
  437af3:	add    BYTE PTR [ecx],al
  437af5:	add    BYTE PTR [eax],al
  437af7:	add    bh,bh
  437af9:	(bad)  
  437afa:	(bad)  
  437afb:	jmp    DWORD PTR [eax+0x220042c6]
  437b01:	add    eax,0x11993
  437b06:	add    BYTE PTR [eax],al
  437b08:	clc    
  437b09:	jp     0x437b4e
	...
  437b1f:	add    BYTE PTR [ecx],al
  437b21:	add    BYTE PTR [eax],al
  437b23:	add    bh,bh
  437b25:	(bad)  
  437b26:	(bad)  
  437b27:	call   eax
  437b29:	mov    BYTE PTR [edx+0x0],0x22
  437b2d:	add    eax,0x11993
  437b32:	add    BYTE PTR [eax],al
  437b34:	and    al,0x7b
  437b36:	inc    ebx
	...
  437b4b:	add    BYTE PTR [ecx],al
  437b4d:	add    BYTE PTR [eax],al
  437b4f:	add    bh,bh
  437b51:	(bad)  
  437b52:	(bad)  
  437b53:	dec    DWORD PTR [eax]
  437b55:	mov    DWORD PTR [edx+0x0],0x0
  437b5c:	add    bh,al
  437b5e:	inc    edx
  437b5f:	add    BYTE PTR [edx],ah
  437b61:	add    eax,0x21993
  437b66:	add    BYTE PTR [eax],al
  437b68:	push   eax
  437b69:	jnp    0x437bae
	...
  437b7f:	add    BYTE PTR [ecx],al
  437b81:	add    BYTE PTR [eax],al
  437b83:	add    bh,bh
  437b85:	(bad)  
  437b86:	(bad)  
  437b87:	inc    DWORD PTR [eax-0x39]
  437b8a:	inc    edx
  437b8b:	add    BYTE PTR [edx],ah
  437b8d:	add    eax,0x11993
  437b92:	add    BYTE PTR [eax],al
  437b94:	test   BYTE PTR [ebx+0x43],bh
	...
  437bab:	add    BYTE PTR [ecx],al
  437bad:	add    BYTE PTR [eax],al
  437baf:	add    bh,bh
  437bb1:	(bad)  
  437bb2:	(bad)  
  437bb3:	inc    DWORD PTR [ecx+0x42c7]
  437bb9:	add    BYTE PTR [eax],al
  437bbb:	add    BYTE PTR [eax-0x39],dh
  437bbe:	inc    edx
  437bbf:	add    BYTE PTR [ecx],al
  437bc1:	add    BYTE PTR [eax],al
  437bc3:	add    BYTE PTR [ecx-0x39],bh
  437bc6:	inc    edx
  437bc7:	add    BYTE PTR [edx],ah
  437bc9:	add    eax,0x31993
  437bce:	add    BYTE PTR [eax],al
  437bd0:	mov    al,0x7b
  437bd2:	inc    ebx
	...
  437be7:	add    BYTE PTR [ecx],al
  437be9:	add    BYTE PTR [eax],al
  437beb:	add    bh,bh
  437bed:	(bad)  
  437bee:	(bad)  
  437bef:	inc    eax
  437bf1:	mov    DWORD PTR [edx+0x0],0x19930522
  437bf8:	add    DWORD PTR [eax],eax
  437bfa:	add    BYTE PTR [eax],al
  437bfc:	in     al,dx
  437bfd:	jnp    0x437c42
	...
  437c13:	add    BYTE PTR [ecx],al
  437c15:	add    BYTE PTR [eax],al
  437c17:	add    bh,bh
  437c19:	(bad)  
  437c1a:	(bad)  
  437c1b:	inc    DWORD PTR [ecx]
  437c1d:	enter  0x42,0x0
  437c21:	add    BYTE PTR [eax],al
  437c23:	add    al,dh
  437c25:	mov    DWORD PTR [edx+0x0],0x1
  437c2c:	stc    
  437c2d:	mov    DWORD PTR [edx+0x0],0x19930522
  437c34:	add    eax,DWORD PTR [eax]
  437c36:	add    BYTE PTR [eax],al
  437c38:	sbb    BYTE PTR [ebx+eax*2+0x0],bh
	...
  437c50:	add    DWORD PTR [eax],eax
  437c52:	add    BYTE PTR [eax],al
  437c54:	(bad)  
  437c55:	(bad)  
  437c56:	(bad)  
  437c57:	inc    DWORD PTR [eax-0x38]
  437c5a:	inc    edx
  437c5b:	add    BYTE PTR [edx],ah
  437c5d:	add    eax,0x11993
  437c62:	add    BYTE PTR [eax],al
  437c64:	push   esp
  437c65:	jl     0x437caa
	...
  437c7b:	add    BYTE PTR [ecx],al
  437c7d:	add    BYTE PTR [eax],al
  437c7f:	add    bh,bh
  437c81:	(bad)  
  437c82:	(bad)  
  437c83:	call   DWORD PTR [edx+0x42c8]
  437c89:	add    BYTE PTR [eax],al
  437c8b:	add    BYTE PTR [eax-0x38],dh
  437c8e:	inc    edx
  437c8f:	add    BYTE PTR [ecx],al
  437c91:	add    BYTE PTR [eax],al
  437c93:	add    BYTE PTR [ecx-0x38],bh
  437c96:	inc    edx
  437c97:	add    BYTE PTR [edx],al
  437c99:	add    BYTE PTR [eax],al
  437c9b:	add    BYTE PTR [edx+0x20042c8],al
  437ca1:	add    BYTE PTR [eax],al
  437ca3:	add    BYTE PTR [edx+0x220042c8],cl
  437ca9:	add    eax,0x51993
  437cae:	add    BYTE PTR [eax],al
  437cb0:	cmp    BYTE PTR [ebx+eax*2+0x0],0x0
	...
  437cc5:	add    BYTE PTR [eax],al
  437cc7:	add    BYTE PTR [ecx],al
  437cc9:	add    BYTE PTR [eax],al
  437ccb:	add    bh,bh
  437ccd:	(bad)  
  437cce:	(bad)  
  437ccf:	inc    DWORD PTR [eax]
  437cd1:	add    BYTE PTR [eax],al
  437cd3:	add    bh,bh
  437cd5:	(bad)  
  437cd6:	(bad)  
  437cd7:	inc    DWORD PTR [eax]
  437cd9:	add    BYTE PTR [eax],al
  437cdb:	add    bh,bh
  437cdd:	(bad)  
  437cde:	(bad)  
  437cdf:	call   eax
  437ce1:	enter  0x42,0x2
  437ce5:	add    BYTE PTR [eax],al
  437ce7:	add    BYTE PTR [eax],al
  437ce9:	add    BYTE PTR [eax],al
  437ceb:	add    BYTE PTR [edx],al
  437ced:	add    BYTE PTR [eax],al
  437cef:	add    BYTE PTR [eax],al
  437cf1:	add    BYTE PTR [eax],al
  437cf3:	add    bh,bh
  437cf5:	(bad)  
  437cf6:	(bad)  
  437cf7:	(bad)  
  437cf8:	fcmove st,st(0)
  437cfa:	inc    edx
  437cfb:	add    BYTE PTR [eax+0x0],al
	...
  437d06:	add    BYTE PTR [eax],al
  437d08:	mov    esp,0x40004149
	...
  437d15:	add    BYTE PTR [eax],al
  437d17:	add    BYTE PTR [edx+0x414a],bh
  437d1d:	add    BYTE PTR [eax],al
  437d1f:	add    BYTE PTR [eax],al
  437d21:	add    BYTE PTR [eax],al
  437d23:	add    BYTE PTR [ecx],al
  437d25:	add    BYTE PTR [eax],al
  437d27:	add    BYTE PTR [ecx],al
  437d29:	add    BYTE PTR [eax],al
  437d2b:	add    ah,bh
  437d2d:	jl     0x437d72
  437d2f:	add    BYTE PTR [ebx],al
  437d31:	add    BYTE PTR [eax],al
  437d33:	add    BYTE PTR [ebx],al
  437d35:	add    BYTE PTR [eax],al
  437d37:	add    BYTE PTR [eax+eax*1],al
  437d3a:	add    BYTE PTR [eax],al
  437d3c:	add    DWORD PTR [eax],eax
  437d3e:	add    BYTE PTR [eax],al
  437d40:	or     al,0x7d
  437d42:	inc    ebx
  437d43:	add    BYTE PTR [edx],ah
  437d45:	add    eax,0x61993
  437d4a:	add    BYTE PTR [eax],al
  437d4c:	int3   
  437d4d:	jl     0x437d92
  437d4f:	add    BYTE PTR [edx],al
  437d51:	add    BYTE PTR [eax],al
  437d53:	add    BYTE PTR [edi*2+0x43],bl
	...
  437d62:	add    BYTE PTR [eax],al
  437d64:	add    DWORD PTR [eax],eax
  437d66:	add    BYTE PTR [eax],al
  437d68:	(bad)  
  437d69:	(bad)  
  437d6a:	(bad)  
  437d6b:	call   DWORD PTR [eax]
  437d6d:	leave  
  437d6e:	inc    edx
  437d6f:	add    BYTE PTR [edx],ah
  437d71:	add    eax,0x11993
  437d76:	add    BYTE PTR [eax],al
  437d78:	push   0x437d
	...
  437d8d:	add    BYTE PTR [eax],al
  437d8f:	add    BYTE PTR [ecx],al
  437d91:	add    BYTE PTR [eax],al
  437d93:	add    bh,bh
  437d95:	(bad)  
  437d96:	(bad)  
  437d97:	inc    DWORD PTR [eax-0x37]
  437d9a:	inc    edx
  437d9b:	add    bh,bh
  437d9d:	(bad)  
  437d9e:	(bad)  
  437d9f:	dec    DWORD PTR [ebx-0x37]
  437da2:	inc    edx
  437da3:	add    BYTE PTR [edx],ah
  437da5:	add    eax,0x21993
  437daa:	add    BYTE PTR [eax],al
  437dac:	xchg   esp,eax
  437dad:	jge    0x437df2
	...
  437dc3:	add    BYTE PTR [ecx],al
  437dc5:	add    BYTE PTR [eax],al
  437dc7:	add    bh,bh
  437dc9:	(bad)  
  437dca:	(bad)  
  437dcb:	push   DWORD PTR [eax-0x37]
  437dce:	inc    edx
  437dcf:	add    BYTE PTR [edx],ah
  437dd1:	add    eax,0x11993
  437dd6:	add    BYTE PTR [eax],al
  437dd8:	enter  0x437d,0x0
	...
  437df0:	add    DWORD PTR [eax],eax
  437df2:	add    BYTE PTR [eax],al
  437df4:	(bad)  
  437df5:	(bad)  
  437df6:	(bad)  
  437df7:	jmp    DWORD PTR [eax+0x42c9]
  437dfd:	add    BYTE PTR [eax],al
  437dff:	add    BYTE PTR [eax+0x220042c9],ch
  437e05:	add    eax,0x21993
  437e0a:	add    BYTE PTR [eax],al
  437e0c:	hlt    
  437e0d:	jge    0x437e52
	...
  437e23:	add    BYTE PTR [ecx],al
  437e25:	add    BYTE PTR [eax],al
  437e27:	add    bh,bh
  437e29:	(bad)  
  437e2a:	(bad)  
  437e2b:	call   eax
  437e2d:	leave  
  437e2e:	inc    edx
  437e2f:	add    BYTE PTR [eax],al
  437e31:	add    BYTE PTR [eax],al
  437e33:	add    al,bl
  437e35:	leave  
  437e36:	inc    edx
  437e37:	add    BYTE PTR [edx],ah
  437e39:	add    eax,0x21993
  437e3e:	add    BYTE PTR [eax],al
  437e40:	sub    BYTE PTR [esi+0x43],bh
	...
  437e57:	add    BYTE PTR [ecx],al
  437e59:	add    BYTE PTR [eax],al
  437e5b:	add    bh,bh
  437e5d:	(bad)  
  437e5e:	(bad)  
  437e5f:	inc    DWORD PTR [eax]
  437e61:	retf   0x42
  437e64:	and    al,BYTE PTR ds:0x11993
  437e6a:	add    BYTE PTR [eax],al
  437e6c:	pop    esp
  437e6d:	jle    0x437eb2
	...
  437e83:	add    BYTE PTR [ecx],al
  437e85:	add    BYTE PTR [eax],al
  437e87:	add    bh,bh
  437e89:	(bad)  
  437e8a:	(bad)  
  437e8b:	push   DWORD PTR [eax]
  437e8d:	retf   0x42
  437e90:	add    BYTE PTR [eax],al
  437e92:	add    BYTE PTR [eax],al
  437e94:	cmp    dl,cl
  437e96:	inc    edx
  437e97:	add    BYTE PTR [edx],ah
  437e99:	add    eax,0x21993
  437e9e:	add    BYTE PTR [eax],al
  437ea0:	mov    BYTE PTR [esi+0x43],bh
	...
  437eb7:	add    BYTE PTR [ecx],al
  437eb9:	add    BYTE PTR [eax],al
  437ebb:	add    bh,bh
  437ebd:	(bad)  
  437ebe:	(bad)  
  437ebf:	jmp    DWORD PTR [eax-0x36]
  437ec2:	inc    edx
  437ec3:	add    BYTE PTR [eax],al
  437ec5:	add    BYTE PTR [eax],al
  437ec7:	add    BYTE PTR [eax-0x36],ch
  437eca:	inc    edx
  437ecb:	add    BYTE PTR [edx],ah
  437ecd:	add    eax,0x21993
  437ed2:	add    BYTE PTR [eax],al
  437ed4:	mov    esp,0x437e
	...
  437ee9:	add    BYTE PTR [eax],al
  437eeb:	add    BYTE PTR [ecx],al
  437eed:	add    BYTE PTR [eax],al
  437eef:	add    bh,bh
  437ef1:	(bad)  
  437ef2:	(bad)  
  437ef3:	call   DWORD PTR [eax+0x220042ca]
  437ef9:	add    eax,0x11993
  437efe:	add    BYTE PTR [eax],al
  437f00:	lock jle 0x437f46
	...
  437f17:	add    BYTE PTR [ecx],al
  437f19:	add    BYTE PTR [eax],al
  437f1b:	add    bh,bh
  437f1d:	(bad)  
  437f1e:	(bad)  
  437f1f:	inc    eax
  437f21:	retf   0x42
  437f24:	add    BYTE PTR [eax],al
  437f26:	add    BYTE PTR [eax],al
  437f28:	enter  0x42ca,0x0
  437f2c:	and    al,BYTE PTR ds:0x21993
  437f32:	add    BYTE PTR [eax],al
  437f34:	sbb    al,0x7f
  437f36:	inc    ebx
	...
  437f4b:	add    BYTE PTR [ecx],al
  437f4d:	add    BYTE PTR [eax],al
  437f4f:	add    bh,bh
  437f51:	(bad)  
  437f52:	(bad)  
  437f53:	push   eax
  437f55:	retf   0x42
  437f58:	and    al,BYTE PTR ds:0x11993
  437f5e:	add    BYTE PTR [eax],al
  437f60:	push   eax
  437f61:	jg     0x437fa6
	...
  437f77:	add    BYTE PTR [ecx],al
  437f79:	add    BYTE PTR [eax],al
  437f7b:	add    bh,bh
  437f7d:	(bad)  
  437f7e:	(bad)  
  437f7f:	jmp    DWORD PTR [eax]
  437f81:	retf   
  437f82:	inc    edx
  437f83:	add    BYTE PTR [eax],al
  437f85:	add    BYTE PTR [eax],al
  437f87:	add    BYTE PTR [ecx],ch
  437f89:	retf   
  437f8a:	inc    edx
  437f8b:	add    BYTE PTR [edx],ah
  437f8d:	add    eax,0x21993
  437f92:	add    BYTE PTR [eax],al
  437f94:	jl     0x438015
  437f96:	inc    ebx
	...
  437fab:	add    BYTE PTR [ecx],al
  437fad:	add    BYTE PTR [eax],al
  437faf:	add    bh,bh
  437fb1:	(bad)  
  437fb2:	(bad)  
  437fb3:	call   DWORD PTR [eax-0x35]
  437fb6:	inc    edx
  437fb7:	add    BYTE PTR [edx],ah
  437fb9:	add    eax,0x11993
  437fbe:	add    BYTE PTR [eax],al
  437fc0:	mov    al,0x7f
  437fc2:	inc    ebx
	...
  437fd7:	add    BYTE PTR [ecx],al
  437fd9:	add    BYTE PTR [eax],al
  437fdb:	add    bh,bh
  437fdd:	(bad)  
  437fde:	(bad)  
  437fdf:	inc    DWORD PTR [eax+0x42cb]
  437fe5:	add    BYTE PTR [eax],al
  437fe7:	add    BYTE PTR [ecx+0x10042cb],cl
  437fed:	add    BYTE PTR [eax],al
  437fef:	add    BYTE PTR [edx+0x220042cb],dl
  437ff5:	add    eax,0x31993
  437ffa:	add    BYTE PTR [eax],al
  437ffc:	fdivr  QWORD PTR [edi+0x43]
	...
  438013:	add    BYTE PTR [ecx],al
  438015:	add    BYTE PTR [eax],al
  438017:	add    bh,bh
  438019:	(bad)  
  43801a:	(bad)  
  43801b:	inc    eax
  43801d:	retf   
  43801e:	inc    edx
  43801f:	add    BYTE PTR [eax],al
  438021:	add    BYTE PTR [eax],al
  438023:	add    cl,cl
  438025:	retf   
  438026:	inc    edx
  438027:	add    BYTE PTR [ecx],al
  438029:	add    BYTE PTR [eax],al
  43802b:	add    dl,dl
  43802d:	retf   
  43802e:	inc    edx
  43802f:	add    BYTE PTR [edx],ah
  438031:	add    eax,0x31993
  438036:	add    BYTE PTR [eax],al
  438038:	sbb    BYTE PTR [eax+0x43],al
	...
  43804e:	add    BYTE PTR [eax],al
  438050:	add    DWORD PTR [eax],eax
  438052:	add    BYTE PTR [eax],al
  438054:	(bad)  
  438055:	(bad)  
  438056:	(bad)  
  438057:	inc    DWORD PTR [eax]
  438059:	int3   
  43805a:	inc    edx
  43805b:	add    BYTE PTR [edx],ah
  43805d:	add    eax,0x11993
  438062:	add    BYTE PTR [eax],al
  438064:	push   esp
  438065:	add    BYTE PTR [ebx+0x0],0x0
	...
  438079:	add    BYTE PTR [eax],al
  43807b:	add    BYTE PTR [ecx],al
  43807d:	add    BYTE PTR [eax],al
  43807f:	add    bh,bh
  438081:	(bad)  
  438082:	(bad)  
  438083:	push   DWORD PTR [eax]
  438085:	int3   
  438086:	inc    edx
  438087:	add    BYTE PTR [edx],ah
  438089:	add    eax,0x11993
  43808e:	add    BYTE PTR [eax],al
  438090:	add    BYTE PTR [eax+0x43],0x0
	...
  4380a7:	add    BYTE PTR [ecx],al
  4380a9:	add    BYTE PTR [eax],al
  4380ab:	add    bh,bh
  4380ad:	(bad)  
  4380ae:	(bad)  
  4380af:	jmp    DWORD PTR [eax-0x34]
  4380b2:	inc    edx
  4380b3:	add    BYTE PTR [eax],al
  4380b5:	add    BYTE PTR [eax],al
  4380b7:	add    BYTE PTR [eax-0x34],ch
  4380ba:	inc    edx
  4380bb:	add    BYTE PTR [edx],ah
  4380bd:	add    eax,0x21993
  4380c2:	add    BYTE PTR [eax],al
  4380c4:	lods   al,BYTE PTR ds:[esi]
  4380c5:	add    BYTE PTR [ebx+0x0],0x0
	...
  4380d9:	add    BYTE PTR [eax],al
  4380db:	add    BYTE PTR [ecx],al
  4380dd:	add    BYTE PTR [eax],al
  4380df:	add    bh,bh
  4380e1:	(bad)  
  4380e2:	(bad)  
  4380e3:	call   DWORD PTR [eax-0xffbd34]
  4380e9:	(bad)  
  4380ea:	(bad)  
  4380eb:	call   FWORD PTR [edx+0x220042cc]
  4380f1:	add    eax,0x21993
  4380f6:	add    BYTE PTR [eax],al
  4380f8:	loopne 0x43807a
  4380fa:	inc    ebx
	...
  43810f:	add    BYTE PTR [ecx],al
  438111:	add    BYTE PTR [eax],al
  438113:	add    bh,bh
  438115:	(bad)  
  438116:	(bad)  
  438117:	inc    DWORD PTR [eax]
  438119:	add    BYTE PTR [eax],al
  43811b:	add    BYTE PTR [eax],al
  43811d:	add    BYTE PTR [eax],al
  43811f:	add    al,al
  438121:	int3   
  438122:	inc    edx
  438123:	add    bh,bh
  438125:	(bad)  
  438126:	(bad)  
  438127:	inc    DWORD PTR [eax]
  438129:	add    BYTE PTR [eax],al
  43812b:	add    BYTE PTR [eax+0x0],al
	...
  438136:	add    BYTE PTR [eax],al
  438138:	lods   al,BYTE PTR ds:[esi]
  438139:	cmp    BYTE PTR [edx+0x0],al
  43813c:	add    BYTE PTR [eax],al
  43813e:	add    BYTE PTR [eax],al
  438140:	add    DWORD PTR [eax],eax
  438142:	add    BYTE PTR [eax],al
  438144:	add    al,BYTE PTR [eax]
  438146:	add    BYTE PTR [eax],al
  438148:	add    DWORD PTR [eax],eax
  43814a:	add    BYTE PTR [eax],al
  43814c:	sub    al,0x81
  43814e:	inc    ebx
  43814f:	add    BYTE PTR [edx],ah
  438151:	add    eax,0x31993
  438156:	add    BYTE PTR [eax],al
  438158:	adc    al,0x81
  43815a:	inc    ebx
  43815b:	add    BYTE PTR [ecx],al
  43815d:	add    BYTE PTR [eax],al
  43815f:	add    BYTE PTR [ecx+eax*4],bh
  438162:	inc    ebx
	...
  43816f:	add    BYTE PTR [ecx],al
  438171:	add    BYTE PTR [eax],al
  438173:	add    bh,bh
  438175:	(bad)  
  438176:	(bad)  
  438177:	push   eax
  438179:	int3   
  43817a:	inc    edx
  43817b:	add    BYTE PTR [edx],ah
  43817d:	add    eax,0x11993
  438182:	add    BYTE PTR [eax],al
  438184:	je     0x438107
  438186:	inc    ebx
	...
  43819b:	add    BYTE PTR [ecx],al
  43819d:	add    BYTE PTR [eax],al
  43819f:	add    bh,bh
  4381a1:	(bad)  
  4381a2:	(bad)  
  4381a3:	jmp    DWORD PTR [eax]
  4381a5:	int    0x42
  4381a7:	add    BYTE PTR [edx],ah
  4381a9:	add    eax,0x11993
  4381ae:	add    BYTE PTR [eax],al
  4381b0:	mov    al,ds:0x4381
	...
  4381c5:	add    BYTE PTR [eax],al
  4381c7:	add    BYTE PTR [ecx],al
  4381c9:	add    BYTE PTR [eax],al
  4381cb:	add    bh,bh
  4381cd:	(bad)  
  4381ce:	(bad)  
  4381cf:	inc    DWORD PTR [eax]
  4381d1:	add    BYTE PTR [eax],al
  4381d3:	add    bh,bh
  4381d5:	(bad)  
  4381d6:	(bad)  
  4381d7:	inc    DWORD PTR [eax]
  4381d9:	add    BYTE PTR [eax],al
  4381db:	add    BYTE PTR [eax+0x0],al
	...
  4381e6:	add    BYTE PTR [eax],al
  4381e8:	sbb    ebp,DWORD PTR [edi]
  4381ea:	inc    edx
	...
  4381f3:	add    BYTE PTR [ecx],al
  4381f5:	add    BYTE PTR [eax],al
  4381f7:	add    BYTE PTR [ecx],al
  4381f9:	add    BYTE PTR [eax],al
  4381fb:	add    ah,bl
  4381fd:	add    DWORD PTR [ebx+0x0],0x19930522
  438204:	add    al,BYTE PTR [eax]
  438206:	add    BYTE PTR [eax],al
  438208:	int3   
  438209:	add    DWORD PTR [ebx+0x0],0x1
  438210:	in     al,dx
  438211:	add    DWORD PTR [ebx+0x0],0x0
	...
  438220:	add    DWORD PTR [eax],eax
  438222:	add    BYTE PTR [eax],al
  438224:	(bad)  
  438225:	(bad)  
  438226:	(bad)  
  438227:	push   DWORD PTR [eax-0x33]
  43822a:	inc    edx
	...
  43823b:	add    BYTE PTR [eax+0x0],al
	...
  438246:	add    BYTE PTR [eax],al
  438248:	popa   
  438249:	push   ds
  43824a:	inc    edx
  43824b:	add    BYTE PTR [ecx],al
  43824d:	add    BYTE PTR [eax],al
  43824f:	add    BYTE PTR [ecx],al
  438251:	add    BYTE PTR [eax],al
  438253:	add    BYTE PTR [edx],al
  438255:	add    BYTE PTR [eax],al
  438257:	add    BYTE PTR [ecx],al
  438259:	add    BYTE PTR [eax],al
  43825b:	add    BYTE PTR [edx+eax*4],bh
  43825e:	inc    ebx
  43825f:	add    BYTE PTR [edx],ah
  438261:	add    eax,0x31993
  438266:	add    BYTE PTR [eax],al
  438268:	and    al,0x82
  43826a:	inc    ebx
  43826b:	add    BYTE PTR [ecx],al
  43826d:	add    BYTE PTR [eax],al
  43826f:	add    BYTE PTR [edx+eax*4+0x43],cl
	...
  43827f:	add    BYTE PTR [ecx],al
  438281:	add    BYTE PTR [eax],al
  438283:	add    bh,bh
  438285:	(bad)  
  438286:	(bad)  
  438287:	jmp    DWORD PTR [eax+0x42cd]
  43828d:	add    BYTE PTR [eax],al
  43828f:	add    BYTE PTR [edx-0xffbd33],ch
  438295:	(bad)  
  438296:	(bad)  
  438297:	push   DWORD PTR [ebp+ecx*8+0x5220042]
  43829e:	xchg   ebx,eax
  43829f:	sbb    DWORD PTR [ebx],eax
  4382a1:	add    BYTE PTR [eax],al
  4382a3:	add    BYTE PTR [edx+eax*4+0x43],al
	...
  4382ba:	add    BYTE PTR [eax],al
  4382bc:	add    DWORD PTR [eax],eax
  4382be:	add    BYTE PTR [eax],al
  4382c0:	(bad)  
  4382c1:	(bad)  
  4382c2:	(bad)  
  4382c3:	jmp    eax
  4382c5:	int    0x42
  4382c7:	add    BYTE PTR [edx],ah
  4382c9:	add    eax,0x11993
  4382ce:	add    BYTE PTR [eax],al
  4382d0:	rol    BYTE PTR [edx+0x43],0x0
	...
  4382e7:	add    BYTE PTR [ecx],al
  4382e9:	add    BYTE PTR [eax],al
  4382eb:	add    bh,bh
  4382ed:	(bad)  
  4382ee:	(bad)  
  4382ef:	call   DWORD PTR [eax]
  4382f1:	into   
  4382f2:	inc    edx
  4382f3:	add    BYTE PTR [eax],al
  4382f5:	add    BYTE PTR [eax],al
  4382f7:	add    BYTE PTR [ecx],bl
  4382f9:	into   
  4382fa:	inc    edx
  4382fb:	add    BYTE PTR [edx],ah
  4382fd:	add    eax,0x21993
  438302:	add    BYTE PTR [eax],al
  438304:	in     al,dx
  438305:	add    BYTE PTR [ebx+0x0],0x0
	...
  438319:	add    BYTE PTR [eax],al
  43831b:	add    BYTE PTR [ecx],al
  43831d:	add    BYTE PTR [eax],al
  43831f:	add    bh,bh
  438321:	(bad)  
  438322:	(bad)  
  438323:	inc    DWORD PTR [eax-0x32]
  438326:	inc    edx
  438327:	add    BYTE PTR [edx],ah
  438329:	add    eax,0x11993
  43832e:	add    BYTE PTR [eax],al
  438330:	and    BYTE PTR [ebx+0x43],al
	...
  438346:	add    BYTE PTR [eax],al
  438348:	add    DWORD PTR [eax],eax
  43834a:	add    BYTE PTR [eax],al
  43834c:	add    BYTE PTR [eax],al
  43834e:	add    BYTE PTR [eax],al
  438350:	(bad)  
  438351:	(bad)  
  438352:	(bad)  
  438353:	inc    ecx
  438355:	into   
  438356:	inc    edx
  438357:	add    BYTE PTR [eax],al
  438359:	add    BYTE PTR [eax],al
  43835b:	add    BYTE PTR [eax-0x32],dh
  43835e:	inc    edx
  43835f:	add    BYTE PTR [ecx],al
  438361:	add    BYTE PTR [eax],al
  438363:	add    BYTE PTR [esi+ecx*8+0x42],bh
  438367:	add    BYTE PTR [edx],al
  438369:	add    BYTE PTR [eax],al
  43836b:	add    BYTE PTR [eax+0x30042ce],cl
  438371:	add    BYTE PTR [eax],al
  438373:	add    BYTE PTR [esi+ecx*8+0x40042],dl
  43837a:	add    BYTE PTR [eax],al
  43837c:	mov    al,ds:0x30042ce
  438381:	add    BYTE PTR [eax],al
  438383:	add    BYTE PTR [esi+ecx*8+0x60042],ch
  43838a:	add    BYTE PTR [eax],al
  43838c:	mov    dh,0xce
  43838e:	inc    edx
  43838f:	add    BYTE PTR [edi],al
  438391:	add    BYTE PTR [eax],al
  438393:	add    ah,ah
  438395:	into   
  438396:	inc    edx
  438397:	add    BYTE PTR [eax],cl
  438399:	add    BYTE PTR [eax],al
  43839b:	add    cl,dh
  43839d:	into   
  43839e:	inc    edx
  43839f:	add    BYTE PTR [eax],cl
  4383a1:	add    BYTE PTR [eax],al
  4383a3:	add    dh,bh
  4383a5:	into   
  4383a6:	inc    edx
  4383a7:	add    BYTE PTR [edx],cl
  4383a9:	add    BYTE PTR [eax],al
  4383ab:	add    BYTE PTR [edx],cl
  4383ad:	iret   
  4383ae:	inc    edx
  4383af:	add    BYTE PTR [eax],cl
  4383b1:	add    BYTE PTR [eax],al
  4383b3:	add    BYTE PTR [esi],dl
  4383b5:	iret   
  4383b6:	inc    edx
  4383b7:	add    BYTE PTR [eax+eax*1],cl
  4383ba:	add    BYTE PTR [eax],al
  4383bc:	and    cl,bh
  4383be:	inc    edx
  4383bf:	add    BYTE PTR ds:0x2e000000,cl
  4383c5:	iret   
  4383c6:	inc    edx
  4383c7:	add    BYTE PTR [esi],cl
  4383c9:	add    BYTE PTR [eax],al
  4383cb:	add    BYTE PTR [edx],bh
  4383cd:	iret   
  4383ce:	inc    edx
  4383cf:	add    BYTE PTR [edi],cl
  4383d1:	add    BYTE PTR [eax],al
  4383d3:	add    BYTE PTR [esi-0x31],al
  4383d6:	inc    edx
  4383d7:	add    BYTE PTR [esi],cl
  4383d9:	add    BYTE PTR [eax],al
  4383db:	add    BYTE PTR [edx-0x31],dl
  4383de:	inc    edx
  4383df:	add    BYTE PTR [ecx],dl
  4383e1:	add    BYTE PTR [eax],al
  4383e3:	add    BYTE PTR [edi-0x31],bl
  4383e6:	inc    edx
  4383e7:	add    BYTE PTR [edx],dl
  4383e9:	add    BYTE PTR [eax],al
  4383eb:	add    BYTE PTR [edx-0x31],ch
  4383ee:	inc    edx
  4383ef:	add    BYTE PTR [ebx],dl
  4383f1:	add    BYTE PTR [eax],al
  4383f3:	add    BYTE PTR [esi-0x31],dh
  4383f6:	inc    edx
  4383f7:	add    BYTE PTR [ebx],dl
  4383f9:	add    BYTE PTR [eax],al
  4383fb:	add    BYTE PTR [ecx+0x150042cf],al
  438401:	add    BYTE PTR [eax],al
  438403:	add    BYTE PTR [esi+0x160042cf],cl
  438409:	add    BYTE PTR [eax],al
  43840b:	add    BYTE PTR [ebx+0x160042cf],bl
  438411:	add    BYTE PTR [eax],al
  438413:	add    BYTE PTR [eax+0x180042cf],ch
  438419:	add    BYTE PTR [eax],al
  43841b:	add    BYTE PTR [edi+ecx*8+0x150042],dh
  438422:	add    BYTE PTR [eax],al
  438424:	ror    bh,0x42
  438427:	add    BYTE PTR ds:0xcd000000,dl
  43842d:	iret   
  43842e:	inc    edx
  43842f:	add    BYTE PTR [ebx],bl
  438431:	add    BYTE PTR [eax],al
  438433:	add    cl,bl
  438435:	iret   
  438436:	inc    edx
  438437:	add    BYTE PTR [ebx],dl
  438439:	add    BYTE PTR [eax],al
  43843b:	add    ch,ah
  43843d:	iret   
  43843e:	inc    edx
  43843f:	add    BYTE PTR [ecx],dl
  438441:	add    BYTE PTR [eax],al
  438443:	add    al,dh
  438445:	iret   
  438446:	inc    edx
  438447:	add    BYTE PTR [esi],bl
  438449:	add    BYTE PTR [eax],al
  43844b:	add    ah,bh
  43844d:	iret   
  43844e:	inc    edx
  43844f:	add    BYTE PTR [esi],cl
  438451:	add    BYTE PTR [eax],al
  438453:	add    BYTE PTR [ebx],cl
  438455:	rol    BYTE PTR [edx+0x0],1
  438458:	and    BYTE PTR [eax],al
  43845a:	add    BYTE PTR [eax],al
  43845c:	pop    ss
  43845d:	rol    BYTE PTR [edx+0x0],1
  438460:	pop    es
  438461:	add    BYTE PTR [eax],al
  438463:	add    BYTE PTR [ebx],ah
  438465:	rol    BYTE PTR [edx+0x0],1
  438468:	pop    es
  438469:	add    BYTE PTR [eax],al
  43846b:	add    BYTE PTR [eax],dh
  43846d:	rol    BYTE PTR [edx+0x0],1
  438470:	and    eax,DWORD PTR [eax]
  438472:	add    BYTE PTR [eax],al
  438474:	cmp    al,0xd0
  438476:	inc    edx
  438477:	add    BYTE PTR [esi],al
  438479:	add    BYTE PTR [eax],al
  43847b:	add    BYTE PTR [eax-0x30],cl
  43847e:	inc    edx
  43847f:	add    BYTE PTR ds:0x54000000,ah
  438485:	rol    BYTE PTR [edx+0x0],1
  438488:	add    eax,DWORD PTR [eax]
  43848a:	add    BYTE PTR [eax],al
  43848c:	arpl   ax,dx
  43848e:	inc    edx
  43848f:	add    BYTE PTR [edi],ah
  438491:	add    BYTE PTR [eax],al
  438493:	add    BYTE PTR [eax+edx*8+0x42],ch
  438497:	add    BYTE PTR [edx],ah
  438499:	add    eax,0x291993
  43849e:	add    BYTE PTR [eax],al
  4384a0:	push   eax
  4384a1:	add    DWORD PTR [ebx+0x0],0x0
	...
  4384b5:	add    BYTE PTR [eax],al
  4384b7:	add    BYTE PTR [ecx],al
  4384b9:	add    BYTE PTR [eax],al
  4384bb:	add    bh,bh
  4384bd:	(bad)  
  4384be:	(bad)  
  4384bf:	inc    DWORD PTR [eax]
  4384c1:	add    BYTE PTR [eax],al
  4384c3:	add    bh,bh
  4384c5:	(bad)  
  4384c6:	(bad)  
  4384c7:	inc    DWORD PTR [eax]
  4384c9:	add    BYTE PTR [eax],al
  4384cb:	add    BYTE PTR [eax+0x0],al
	...
  4384d6:	add    BYTE PTR [eax],al
  4384d8:	sub    DWORD PTR [ecx+eax*2+0x0],ecx
  4384df:	add    BYTE PTR [eax],al
  4384e1:	add    BYTE PTR [eax],al
  4384e3:	add    BYTE PTR [ecx],al
  4384e5:	add    BYTE PTR [eax],al
  4384e7:	add    BYTE PTR [ecx],al
  4384e9:	add    BYTE PTR [eax],al
  4384eb:	add    ah,cl
  4384ed:	test   BYTE PTR [ebx+0x0],al
  4384f0:	and    al,BYTE PTR ds:0x21993
  4384f6:	add    BYTE PTR [eax],al
  4384f8:	mov    esp,0x1004384
  4384fd:	add    BYTE PTR [eax],al
  4384ff:	add    ah,bl
  438501:	test   BYTE PTR [ebx+0x0],al
	...
  438510:	add    DWORD PTR [eax],eax
  438512:	add    BYTE PTR [eax],al
  438514:	(bad)  
  438515:	(bad)  
  438516:	(bad)  
  438517:	inc    DWORD PTR [eax]
  438519:	add    BYTE PTR [eax],al
  43851b:	add    bh,bh
  43851d:	(bad)  
  43851e:	(bad)  
  43851f:	inc    DWORD PTR [eax]
  438521:	add    BYTE PTR [eax],al
  438523:	add    bh,bh
  438525:	(bad)  
  438526:	(bad)  
  438527:	call   eax
  438529:	rol    BYTE PTR [edx+0x0],1
  43852c:	add    al,BYTE PTR [eax]
  43852e:	add    BYTE PTR [eax],al
  438530:	add    BYTE PTR [eax],al
  438532:	add    BYTE PTR [eax],al
  438534:	add    al,BYTE PTR [eax]
  438536:	add    BYTE PTR [eax],al
  438538:	add    BYTE PTR [eax],al
  43853a:	add    BYTE PTR [eax],al
  43853c:	(bad)  
  43853d:	(bad)  
  43853e:	(bad)  
  43853f:	(bad)  
  438540:	fcom   st(0)
  438542:	inc    edx
  438543:	add    BYTE PTR [eax+0x0],al
	...
  43854e:	add    BYTE PTR [eax],al
  438550:	rcl    BYTE PTR [edx+0x41],cl
  438553:	add    BYTE PTR [eax+0x0],al
	...
  43855e:	add    BYTE PTR [eax],al
  438560:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438561:	push   ebx
  438562:	inc    ecx
	...
  43856b:	add    BYTE PTR [ecx],al
  43856d:	add    BYTE PTR [eax],al
  43856f:	add    BYTE PTR [ecx],al
  438571:	add    BYTE PTR [eax],al
  438573:	add    BYTE PTR [ebp+eax*4+0x43],al
  438577:	add    BYTE PTR [ebx],al
  438579:	add    BYTE PTR [eax],al
  43857b:	add    BYTE PTR [ebx],al
  43857d:	add    BYTE PTR [eax],al
  43857f:	add    BYTE PTR [eax+eax*1],al
  438582:	add    BYTE PTR [eax],al
  438584:	add    DWORD PTR [eax],eax
  438586:	add    BYTE PTR [eax],al
  438588:	push   esp
  438589:	test   DWORD PTR [ebx+0x0],eax
  43858c:	and    al,BYTE PTR ds:0x61993
  438592:	add    BYTE PTR [eax],al
  438594:	adc    al,0x85
  438596:	inc    ebx
  438597:	add    BYTE PTR [edx],al
  438599:	add    BYTE PTR [eax],al
  43859b:	add    BYTE PTR [ebp+eax*4+0x43],ah
	...
  4385ab:	add    BYTE PTR [ecx],al
  4385ad:	add    BYTE PTR [eax],al
  4385af:	add    bh,bh
  4385b1:	(bad)  
  4385b2:	(bad)  
  4385b3:	inc    DWORD PTR [eax]
  4385b5:	rol    DWORD PTR [edx+0x0],1
  4385b8:	and    al,BYTE PTR ds:0x11993
  4385be:	add    BYTE PTR [eax],al
  4385c0:	mov    al,0x85
  4385c2:	inc    ebx
	...
  4385d7:	add    BYTE PTR [ecx],al
  4385d9:	add    BYTE PTR [eax],al
  4385db:	add    bh,bh
  4385dd:	(bad)  
  4385de:	(bad)  
  4385df:	push   DWORD PTR [eax]
  4385e1:	rol    DWORD PTR [edx+0x0],1
  4385e4:	add    BYTE PTR [eax],al
  4385e6:	add    BYTE PTR [eax],al
  4385e8:	cmp    eax,0x10042d1
  4385ed:	add    BYTE PTR [eax],al
  4385ef:	add    BYTE PTR [edx-0x2f],cl
  4385f2:	inc    edx
  4385f3:	add    BYTE PTR [edx],al
  4385f5:	add    BYTE PTR [eax],al
  4385f7:	add    BYTE PTR [esi-0x2f],dl
  4385fa:	inc    edx
  4385fb:	add    BYTE PTR [ebx],al
  4385fd:	add    BYTE PTR [eax],al
  4385ff:	add    BYTE PTR [ebp-0x2f],ah
  438602:	inc    edx
  438603:	add    BYTE PTR [edx],ah
  438605:	add    eax,0x51993
  43860a:	add    BYTE PTR [eax],al
  43860c:	fadd   QWORD PTR [ebp+0x43]
	...
  438622:	add    BYTE PTR [eax],al
  438624:	add    DWORD PTR [eax],eax
  438626:	add    BYTE PTR [eax],al
  438628:	(bad)  
  438629:	(bad)  
  43862a:	(bad)  
  43862b:	call   DWORD PTR [eax+0x42d1]
  438631:	add    BYTE PTR [eax],al
  438633:	add    BYTE PTR [ecx+0x220042d1],bl
  438639:	add    eax,0x21993
  43863e:	add    BYTE PTR [eax],al
  438640:	sub    BYTE PTR [esi+0x43],al
	...
  438656:	add    BYTE PTR [eax],al
  438658:	add    DWORD PTR [eax],eax
  43865a:	add    BYTE PTR [eax],al
  43865c:	(bad)  
  43865d:	(bad)  
  43865e:	(bad)  
  43865f:	call   eax
  438661:	rol    DWORD PTR [edx+0x0],1
  438664:	add    BYTE PTR [eax],al
  438666:	add    BYTE PTR [eax],al
  438668:	fst    st(1)
  43866a:	inc    edx
  43866b:	add    BYTE PTR [ecx],al
  43866d:	add    BYTE PTR [eax],al
  43866f:	add    dl,ch
  438671:	rol    DWORD PTR [edx+0x0],1
  438674:	add    al,BYTE PTR [eax]
  438676:	add    BYTE PTR [eax],al
  438678:	not    cl
  43867a:	inc    edx
  43867b:	add    BYTE PTR [edx],al
  43867d:	add    BYTE PTR [eax],al
  43867f:	add    BYTE PTR ds:0x220042d2,al
  438685:	add    eax,0x51993
  43868a:	add    BYTE PTR [eax],al
  43868c:	pop    esp
  43868d:	xchg   BYTE PTR [ebx+0x0],al
	...
  4386a4:	add    DWORD PTR [eax],eax
  4386a6:	add    BYTE PTR [eax],al
  4386a8:	(bad)  
  4386a9:	(bad)  
  4386aa:	(bad)  
  4386ab:	push   DWORD PTR [eax]
  4386ad:	rol    BYTE PTR [edx+0x0],cl
  4386b0:	add    BYTE PTR [eax],al
  4386b2:	add    BYTE PTR [eax],al
  4386b4:	cmp    edx,edx
  4386b6:	inc    edx
  4386b7:	add    BYTE PTR [ecx],al
  4386b9:	add    BYTE PTR [eax],al
  4386bb:	add    BYTE PTR [eax-0x2e],cl
  4386be:	inc    edx
  4386bf:	add    BYTE PTR [edx],al
  4386c1:	add    BYTE PTR [eax],al
  4386c3:	add    BYTE PTR [edx+edx*8+0x42],dl
  4386c7:	add    BYTE PTR [ebx],al
  4386c9:	add    BYTE PTR [eax],al
  4386cb:	add    BYTE PTR [eax-0x2e],ah
  4386ce:	inc    edx
  4386cf:	add    BYTE PTR [edx],ah
  4386d1:	add    eax,0x51993
  4386d6:	add    BYTE PTR [eax],al
  4386d8:	test   al,0x86
  4386da:	inc    ebx
	...
  4386ef:	add    BYTE PTR [ecx],al
  4386f1:	add    BYTE PTR [eax],al
  4386f3:	add    bh,bh
  4386f5:	(bad)  
  4386f6:	(bad)  
  4386f7:	call   DWORD PTR [eax+0x42d2]
  4386fd:	add    BYTE PTR [eax],al
  4386ff:	add    BYTE PTR [ebx+0x10042d2],bl
  438705:	add    BYTE PTR [eax],al
  438707:	add    BYTE PTR [eax+0x20042d2],ch
  43870d:	add    BYTE PTR [eax],al
  43870f:	add    BYTE PTR [edx+edx*8+0x5220042],dh
  438716:	xchg   ebx,eax
  438717:	sbb    DWORD PTR [eax+eax*1],eax
  43871a:	add    BYTE PTR [eax],al
  43871c:	hlt    
  43871d:	xchg   BYTE PTR [ebx+0x0],al
	...
  438734:	add    DWORD PTR [eax],eax
  438736:	add    BYTE PTR [eax],al
  438738:	(bad)  
  438739:	(bad)  
  43873a:	(bad)  
  43873b:	jmp    eax
  43873d:	rol    BYTE PTR [edx+0x0],cl
  438740:	add    BYTE PTR [eax],al
  438742:	add    BYTE PTR [eax],al
  438744:	call   0x2243ca1b
  438749:	add    eax,0x21993
  43874e:	add    BYTE PTR [eax],al
  438750:	cmp    BYTE PTR [edi+0x43],al
	...
  438766:	add    BYTE PTR [eax],al
  438768:	add    DWORD PTR [eax],eax
  43876a:	add    BYTE PTR [eax],al
  43876c:	(bad)  
  43876d:	(bad)  
  43876e:	(bad)  
  43876f:	call   DWORD PTR [eax]
  438771:	rol    DWORD PTR [edx+0x0],cl
  438774:	and    al,BYTE PTR ds:0x11993
  43877a:	add    BYTE PTR [eax],al
  43877c:	ins    BYTE PTR es:[edi],dx
  43877d:	xchg   DWORD PTR [ebx+0x0],eax
	...
  438794:	add    DWORD PTR [eax],eax
  438796:	add    BYTE PTR [eax],al
  438798:	(bad)  
  438799:	(bad)  
  43879a:	(bad)  
  43879b:	inc    DWORD PTR [eax-0x2d]
  43879e:	inc    edx
	...
  4387a7:	add    BYTE PTR [edx],ah
  4387a9:	add    eax,0x21993
  4387ae:	add    BYTE PTR [eax],al
  4387b0:	cwde   
  4387b1:	xchg   DWORD PTR [ebx+0x0],eax
	...
  4387c8:	add    DWORD PTR [eax],eax
  4387ca:	add    BYTE PTR [eax],al
  4387cc:	add    BYTE PTR [eax],al
  4387ce:	add    BYTE PTR [eax],al
  4387d0:	(bad)  
  4387d1:	(bad)  
  4387d2:	(bad)  
  4387d3:	call   DWORD PTR [eax+0x42d3]
  4387d9:	add    BYTE PTR [eax],al
  4387db:	add    BYTE PTR [ebx+edx*8+0x10042],bl
  4387e2:	add    BYTE PTR [eax],al
  4387e4:	test   al,0xd3
  4387e6:	inc    edx
  4387e7:	add    BYTE PTR [edx],al
  4387e9:	add    BYTE PTR [eax],al
  4387eb:	add    BYTE PTR [ebx+edx*8+0x30042],dh
  4387f2:	add    BYTE PTR [eax],al
  4387f4:	rcl    bl,0x42
  4387f7:	add    BYTE PTR [eax+eax*1],al
  4387fa:	add    BYTE PTR [eax],al
  4387fc:	int3   
  4387fd:	rol    DWORD PTR [edx+0x0],cl
  438800:	add    eax,0xd8000000
  438805:	rol    DWORD PTR [edx+0x0],cl
  438808:	push   es
  438809:	add    BYTE PTR [eax],al
  43880b:	add    ah,ah
  43880d:	rol    DWORD PTR [edx+0x0],cl
  438810:	pop    es
  438811:	add    BYTE PTR [eax],al
  438813:	add    al,dh
  438815:	rol    DWORD PTR [edx+0x0],cl
  438818:	or     BYTE PTR [eax],al
  43881a:	add    BYTE PTR [eax],al
  43881c:	stc    
  43881d:	rol    DWORD PTR [edx+0x0],cl
  438820:	(bad)  
  438821:	(bad)  
  438822:	(bad)  
  438823:	inc    DWORD PTR ds:0xa0042d4
  438829:	add    BYTE PTR [eax],al
  43882b:	add    BYTE PTR [ecx],dl
  43882d:	aam    0x42
  43882f:	add    BYTE PTR [ebx],cl
  438831:	add    BYTE PTR [eax],al
  438833:	add    BYTE PTR ds:0xc0042d4,bl
  438839:	add    BYTE PTR [eax],al
  43883b:	add    BYTE PTR [ecx],ch
  43883d:	aam    0x42
  43883f:	add    BYTE PTR ds:0x32000000,cl
  438845:	aam    0x42
  438847:	add    BYTE PTR [esi],cl
  438849:	add    BYTE PTR [eax],al
  43884b:	add    BYTE PTR [esi],bh
  43884d:	aam    0x42
  43884f:	add    BYTE PTR [edi],cl
  438851:	add    BYTE PTR [eax],al
  438853:	add    BYTE PTR [edx-0x2c],cl
  438856:	inc    edx
  438857:	add    BYTE PTR [eax],dl
  438859:	add    BYTE PTR [eax],al
  43885b:	add    BYTE PTR [esi-0x2c],dl
  43885e:	inc    edx
  43885f:	add    BYTE PTR [ecx],dl
  438861:	add    BYTE PTR [eax],al
  438863:	add    BYTE PTR [edx-0x2c],ah
  438866:	inc    edx
  438867:	add    BYTE PTR [edx],dl
  438869:	add    BYTE PTR [eax],al
  43886b:	add    BYTE PTR [esi-0x2c],ch
  43886e:	inc    edx
  43886f:	add    bh,bh
  438871:	(bad)  
  438872:	(bad)  
  438873:	(bad)  
  438874:	jp     0x43884a
  438876:	inc    edx
  438877:	add    BYTE PTR [eax+eax*1],dl
  43887a:	add    BYTE PTR [eax],al
  43887c:	xchg   ah,dl
  43887e:	inc    edx
  43887f:	add    BYTE PTR ds:0x8f000000,dl
  438885:	aam    0x42
  438887:	add    BYTE PTR [esi],dl
  438889:	add    BYTE PTR [eax],al
  43888b:	add    BYTE PTR [eax+0x220042d4],bl
  438891:	add    eax,0x181993
  438896:	add    BYTE PTR [eax],al
  438898:	rol    BYTE PTR [edi+0x43],1
	...
  4388ae:	add    BYTE PTR [eax],al
  4388b0:	add    DWORD PTR [eax],eax
  4388b2:	add    BYTE PTR [eax],al
  4388b4:	(bad)  
  4388b5:	(bad)  
  4388b6:	(bad)  
  4388b7:	call   eax
  4388b9:	aam    0x42
  4388bb:	add    BYTE PTR [eax],al
  4388bd:	add    BYTE PTR [eax],al
  4388bf:	add    dl,ch
  4388c1:	aam    0x42
  4388c3:	add    BYTE PTR [ecx],al
  4388c5:	add    BYTE PTR [eax],al
  4388c7:	add    bl,dh
  4388c9:	aam    0x42
  4388cb:	add    BYTE PTR [edx],al
  4388cd:	add    BYTE PTR [eax],al
  4388cf:	add    ah,bh
  4388d1:	aam    0x42
  4388d3:	add    BYTE PTR [eax],al
  4388d5:	add    BYTE PTR [eax],al
  4388d7:	add    BYTE PTR ds:0x40042d5,al
  4388dd:	add    BYTE PTR [eax],al
  4388df:	add    BYTE PTR [esi],cl
  4388e1:	aad    0x42
  4388e3:	add    BYTE PTR [edx],ah
  4388e5:	add    eax,0x61993
  4388ea:	add    BYTE PTR [eax],al
  4388ec:	mov    ah,0x88
  4388ee:	inc    ebx
	...
  438903:	add    BYTE PTR [ecx],al
  438905:	add    BYTE PTR [eax],al
  438907:	add    bh,bh
  438909:	(bad)  
  43890a:	(bad)  
  43890b:	inc    DWORD PTR [eax-0x2b]
  43890e:	inc    edx
  43890f:	add    BYTE PTR [eax],al
  438911:	add    BYTE PTR [eax],al
  438913:	add    BYTE PTR [ebp+edx*8+0x42],cl
  438917:	add    BYTE PTR [edx],ah
  438919:	add    eax,0x21993
  43891e:	add    BYTE PTR [eax],al
  438920:	or     BYTE PTR [ecx+0x43],cl
	...
  438936:	add    BYTE PTR [eax],al
  438938:	add    DWORD PTR [eax],eax
  43893a:	add    BYTE PTR [eax],al
  43893c:	(bad)  
  43893d:	(bad)  
  43893e:	(bad)  
  43893f:	call   DWORD PTR [eax+0x42d5]
  438945:	add    BYTE PTR [eax],al
  438947:	add    BYTE PTR [eax+0x220042d5],bl
  43894d:	add    eax,0x21993
  438952:	add    BYTE PTR [eax],al
  438954:	cmp    al,0x89
  438956:	inc    ebx
	...
  43896b:	add    BYTE PTR [ecx],al
  43896d:	add    BYTE PTR [eax],al
  43896f:	add    bh,bh
  438971:	(bad)  
  438972:	(bad)  
  438973:	inc    eax
  438975:	aad    0x42
  438977:	add    BYTE PTR [edx],ah
  438979:	add    eax,0x11993
  43897e:	add    BYTE PTR [eax],al
  438980:	jo     0x43890b
  438982:	inc    ebx
	...
  438997:	add    BYTE PTR [ecx],al
  438999:	add    BYTE PTR [eax],al
  43899b:	add    bh,bh
  43899d:	(bad)  
  43899e:	(bad)  
  43899f:	push   eax
  4389a1:	aad    0x42
  4389a3:	add    BYTE PTR [edx],ah
  4389a5:	add    eax,0x11993
  4389aa:	add    BYTE PTR [eax],al
  4389ac:	pushf  
  4389ad:	mov    DWORD PTR [ebx+0x0],eax
	...
  4389c4:	add    DWORD PTR [eax],eax
  4389c6:	add    BYTE PTR [eax],al
  4389c8:	(bad)  
  4389c9:	(bad)  
  4389ca:	(bad)  
  4389cb:	jmp    DWORD PTR [eax]
  4389cd:	(bad)  
  4389ce:	inc    edx
  4389cf:	add    BYTE PTR [eax],al
  4389d1:	add    BYTE PTR [eax],al
  4389d3:	add    BYTE PTR [ecx],ch
  4389d5:	(bad)  
  4389d6:	inc    edx
  4389d7:	add    BYTE PTR [ecx],al
  4389d9:	add    BYTE PTR [eax],al
  4389db:	add    BYTE PTR [edx],dh
  4389dd:	(bad)  
  4389de:	inc    edx
  4389df:	add    BYTE PTR [edx],ah
  4389e1:	add    eax,0x31993
  4389e6:	add    BYTE PTR [eax],al
  4389e8:	enter  0x4389,0x0
	...
  438a00:	add    DWORD PTR [eax],eax
  438a02:	add    BYTE PTR [eax],al
  438a04:	(bad)  
  438a05:	(bad)  
  438a06:	(bad)  
  438a07:	jmp    DWORD PTR [eax-0x2a]
  438a0a:	inc    edx
  438a0b:	add    BYTE PTR [eax],al
  438a0d:	add    BYTE PTR [eax],al
  438a0f:	add    BYTE PTR [ecx-0x2a],ch
  438a12:	inc    edx
  438a13:	add    BYTE PTR [ecx],al
  438a15:	add    BYTE PTR [eax],al
  438a17:	add    BYTE PTR [edx-0x2a],dh
  438a1a:	inc    edx
  438a1b:	add    BYTE PTR [edx],al
  438a1d:	add    BYTE PTR [eax],al
  438a1f:	add    BYTE PTR [esi-0x2a],bh
  438a22:	inc    edx
  438a23:	add    BYTE PTR [ebx],al
  438a25:	add    BYTE PTR [eax],al
  438a27:	add    BYTE PTR [edx+0x40042d6],cl
  438a2d:	add    BYTE PTR [eax],al
  438a2f:	add    BYTE PTR [ebx+0x220042d6],dl
  438a35:	add    eax,0x61993
  438a3a:	add    BYTE PTR [eax],al
  438a3c:	add    al,0x8a
  438a3e:	inc    ebx
	...
  438a53:	add    BYTE PTR [ecx],al
  438a55:	add    BYTE PTR [eax],al
  438a57:	add    bh,bh
  438a59:	(bad)  
  438a5a:	(bad)  
  438a5b:	inc    eax
  438a5d:	(bad)  
  438a5e:	inc    edx
  438a5f:	add    BYTE PTR [eax],al
  438a61:	add    BYTE PTR [eax],al
  438a63:	add    ah,cl
  438a65:	(bad)  
  438a66:	inc    edx
  438a67:	add    bh,bh
  438a69:	(bad)  
  438a6a:	(bad)  
  438a6b:	dec    esp
  438a6d:	(bad)  
  438a6e:	inc    edx
  438a6f:	add    BYTE PTR [edx],al
  438a71:	add    BYTE PTR [eax],al
  438a73:	add    ch,dl
  438a75:	(bad)  
  438a76:	inc    edx
  438a77:	add    BYTE PTR [ebx],al
  438a79:	add    BYTE PTR [eax],al
  438a7b:	add    dh,bl
  438a7d:	(bad)  
  438a7e:	inc    edx
  438a7f:	add    BYTE PTR [eax+eax*1],al
  438a82:	add    BYTE PTR [eax],al
  438a84:	out    0xd6,eax
  438a86:	inc    edx
  438a87:	add    BYTE PTR ds:0xf3000000,al
  438a8d:	(bad)  
  438a8e:	inc    edx
  438a8f:	add    BYTE PTR [esi],al
  438a91:	add    BYTE PTR [eax],al
  438a93:	add    bh,bh
  438a95:	(bad)  
  438a96:	inc    edx
  438a97:	add    BYTE PTR [edi],al
  438a99:	add    BYTE PTR [eax],al
  438a9b:	add    BYTE PTR [ebx],cl
  438a9d:	xlat   BYTE PTR ds:[ebx]
  438a9e:	inc    edx
  438a9f:	add    BYTE PTR [eax],cl
  438aa1:	add    BYTE PTR [eax],al
  438aa3:	add    BYTE PTR [edi],dl
  438aa5:	xlat   BYTE PTR ds:[ebx]
  438aa6:	inc    edx
  438aa7:	add    BYTE PTR [ecx],cl
  438aa9:	add    BYTE PTR [eax],al
  438aab:	add    BYTE PTR [ebx],ah
  438aad:	xlat   BYTE PTR ds:[ebx]
  438aae:	inc    edx
  438aaf:	add    BYTE PTR [edx],ah
  438ab1:	add    eax,0xb1993
  438ab6:	add    BYTE PTR [eax],al
  438ab8:	pop    eax
  438ab9:	mov    al,BYTE PTR [ebx+0x0]
	...
  438ad0:	add    DWORD PTR [eax],eax
  438ad2:	add    BYTE PTR [eax],al
  438ad4:	(bad)  
  438ad5:	(bad)  
  438ad6:	(bad)  
  438ad7:	jmp    DWORD PTR [eax-0x29]
  438ada:	inc    edx
  438adb:	add    BYTE PTR [eax],al
  438add:	add    BYTE PTR [eax],al
  438adf:	add    BYTE PTR [ecx-0x29],ch
  438ae2:	inc    edx
  438ae3:	add    BYTE PTR [edx],ah
  438ae5:	add    eax,0x21993
  438aea:	add    BYTE PTR [eax],al
  438aec:	aam    0x8a
  438aee:	inc    ebx
	...
  438b03:	add    BYTE PTR [ecx],al
  438b05:	add    BYTE PTR [eax],al
  438b07:	add    bh,bh
  438b09:	(bad)  
  438b0a:	(bad)  
  438b0b:	call   DWORD PTR [eax-0xffbd29]
  438b11:	(bad)  
  438b12:	(bad)  
  438b13:	call   FWORD PTR [eax+0x220042d7]
  438b19:	add    eax,0x21993
  438b1e:	add    BYTE PTR [eax],al
  438b20:	or     BYTE PTR [ebx+0x43],cl
	...
  438b36:	add    BYTE PTR [eax],al
  438b38:	add    DWORD PTR [eax],eax
  438b3a:	add    BYTE PTR [eax],al
  438b3c:	(bad)  
  438b3d:	(bad)  
  438b3e:	(bad)  
  438b3f:	inc    eax
  438b41:	xlat   BYTE PTR ds:[ebx]
  438b42:	inc    edx
  438b43:	add    BYTE PTR [edx],ah
  438b45:	add    eax,0x11993
  438b4a:	add    BYTE PTR [eax],al
  438b4c:	cmp    al,0x8b
  438b4e:	inc    ebx
	...
  438b63:	add    BYTE PTR [ecx],al
  438b65:	add    BYTE PTR [eax],al
  438b67:	add    bh,bh
  438b69:	(bad)  
  438b6a:	(bad)  
  438b6b:	push   eax
  438b6d:	xlat   BYTE PTR ds:[ebx]
  438b6e:	inc    edx
  438b6f:	add    BYTE PTR [eax],al
  438b71:	add    BYTE PTR [eax],al
  438b73:	add    al,bh
  438b75:	xlat   BYTE PTR ds:[ebx]
  438b76:	inc    edx
  438b77:	add    BYTE PTR [edx],ah
  438b79:	add    eax,0x21993
  438b7e:	add    BYTE PTR [eax],al
  438b80:	push   0x438b
	...
  438b95:	add    BYTE PTR [eax],al
  438b97:	add    BYTE PTR [ecx],al
  438b99:	add    BYTE PTR [eax],al
  438b9b:	add    bh,bh
  438b9d:	(bad)  
  438b9e:	(bad)  
  438b9f:	jmp    DWORD PTR [eax]
  438ba1:	fadd   DWORD PTR [edx+0x0]
  438ba4:	and    al,BYTE PTR ds:0x11993
  438baa:	add    BYTE PTR [eax],al
  438bac:	pushf  
  438bad:	mov    eax,DWORD PTR [ebx+0x0]
	...
  438bc4:	add    DWORD PTR [eax],eax
  438bc6:	add    BYTE PTR [eax],al
  438bc8:	(bad)  
  438bc9:	(bad)  
  438bca:	(bad)  
  438bcb:	inc    DWORD PTR [eax]
  438bcd:	add    BYTE PTR [eax],al
  438bcf:	add    bh,bh
  438bd1:	(bad)  
  438bd2:	(bad)  
  438bd3:	inc    DWORD PTR [eax]
  438bd5:	add    BYTE PTR [eax],al
  438bd7:	add    BYTE PTR [eax+0x0],al
	...
  438be2:	add    BYTE PTR [eax],al
  438be4:	sub    edx,DWORD PTR [eax+0x41]
  438bea:	add    BYTE PTR [eax],al
  438bec:	add    BYTE PTR [eax],al
  438bee:	add    BYTE PTR [eax],al
  438bf0:	add    DWORD PTR [eax],eax
  438bf2:	add    BYTE PTR [eax],al
  438bf4:	add    DWORD PTR [eax],eax
  438bf6:	add    BYTE PTR [eax],al
  438bf8:	fmul   DWORD PTR [ebx+0x5220043]
  438bfe:	xchg   ebx,eax
  438bff:	sbb    DWORD PTR [edx],eax
  438c01:	add    BYTE PTR [eax],al
  438c03:	add    al,cl
  438c05:	mov    eax,DWORD PTR [ebx+0x0]
  438c08:	add    DWORD PTR [eax],eax
  438c0a:	add    BYTE PTR [eax],al
  438c0c:	call   0x43cf9c
	...
  438c19:	add    BYTE PTR [eax],al
  438c1b:	add    BYTE PTR [ecx],al
  438c1d:	add    BYTE PTR [eax],al
  438c1f:	add    bh,bh
  438c21:	(bad)  
  438c22:	(bad)  
  438c23:	push   DWORD PTR [eax-0x28]
  438c26:	inc    edx
	...
  438c2f:	add    BYTE PTR [edx],ah
  438c31:	add    eax,0x21993
  438c36:	add    BYTE PTR [eax],al
  438c38:	and    BYTE PTR [ebx+eax*2+0x0],cl
	...
  438c4f:	add    BYTE PTR [ecx],al
  438c51:	add    BYTE PTR [eax],al
  438c53:	add    bh,bh
  438c55:	(bad)  
  438c56:	(bad)  
  438c57:	inc    eax
  438c59:	fadd   DWORD PTR [edx+0x0]
  438c5c:	and    al,BYTE PTR ds:0x11993
  438c62:	add    BYTE PTR [eax],al
  438c64:	push   esp
  438c65:	mov    WORD PTR [ebx+0x0],es
	...
  438c7c:	add    DWORD PTR [eax],eax
  438c7e:	add    BYTE PTR [eax],al
  438c80:	(bad)  
  438c81:	(bad)  
  438c82:	(bad)  
  438c83:	push   eax
  438c85:	fadd   DWORD PTR [edx+0x0]
  438c88:	and    al,BYTE PTR ds:0x11993
  438c8e:	add    BYTE PTR [eax],al
  438c90:	or     BYTE PTR [ebx+eax*2+0x0],0x0
	...
  438ca8:	add    DWORD PTR [eax],eax
  438caa:	add    BYTE PTR [eax],al
  438cac:	(bad)  
  438cad:	(bad)  
  438cae:	(bad)  
  438caf:	push   DWORD PTR [eax]
  438cb1:	fld    DWORD PTR [edx+0x0]
  438cb4:	and    al,BYTE PTR ds:0x11993
  438cba:	add    BYTE PTR [eax],al
  438cbc:	lods   al,BYTE PTR ds:[esi]
  438cbd:	mov    WORD PTR [ebx+0x0],es
	...
  438cd4:	add    DWORD PTR [eax],eax
  438cd6:	add    BYTE PTR [eax],al
  438cd8:	(bad)  
  438cd9:	(bad)  
  438cda:	(bad)  
  438cdb:	push   DWORD PTR [eax-0x27]
  438cde:	inc    edx
  438cdf:	add    BYTE PTR [edx],ah
  438ce1:	add    eax,0x11993
  438ce6:	add    BYTE PTR [eax],al
  438ce8:	fmul   DWORD PTR [ebx+eax*2+0x0]
	...
  438cff:	add    BYTE PTR [ecx],al
  438d01:	add    BYTE PTR [eax],al
  438d03:	add    bh,bh
  438d05:	(bad)  
  438d06:	(bad)  
  438d07:	inc    DWORD PTR [eax]
  438d09:	add    BYTE PTR [eax],al
  438d0b:	add    bh,bh
  438d0d:	(bad)  
  438d0e:	(bad)  
  438d0f:	inc    DWORD PTR [eax]
  438d11:	add    BYTE PTR [eax],al
  438d13:	add    bh,bh
  438d15:	(bad)  
  438d16:	(bad)  
  438d17:	push   DWORD PTR [eax+0x20042d9]
  438d1d:	add    BYTE PTR [eax],al
  438d1f:	add    BYTE PTR [eax],al
  438d21:	add    BYTE PTR [eax],al
  438d23:	add    BYTE PTR [edx],al
  438d25:	add    BYTE PTR [eax],al
  438d27:	add    BYTE PTR [eax],al
  438d29:	add    BYTE PTR [eax],al
  438d2b:	add    bh,bh
  438d2d:	(bad)  
  438d2e:	(bad)  
  438d2f:	(bad)  
  438d30:	mov    eax,0x400042d9
	...
  438d3d:	add    BYTE PTR [eax],al
  438d3f:	add    BYTE PTR [edx+0x40004161],dl
	...
  438d4d:	add    BYTE PTR [eax],al
  438d4f:	add    BYTE PTR [edi+0x62],ah
  438d52:	inc    ecx
	...
  438d5b:	add    BYTE PTR [ecx],al
  438d5d:	add    BYTE PTR [eax],al
  438d5f:	add    BYTE PTR [ecx],al
  438d61:	add    BYTE PTR [eax],al
  438d63:	add    BYTE PTR [ecx*4+0x30043],dh
  438d6a:	add    BYTE PTR [eax],al
  438d6c:	add    eax,DWORD PTR [eax]
  438d6e:	add    BYTE PTR [eax],al
  438d70:	add    al,0x0
  438d72:	add    BYTE PTR [eax],al
  438d74:	add    DWORD PTR [eax],eax
  438d76:	add    BYTE PTR [eax],al
  438d78:	inc    esp
  438d79:	lea    eax,[ebx+0x0]
  438d7c:	and    al,BYTE PTR ds:0x61993
  438d82:	add    BYTE PTR [eax],al
  438d84:	add    al,0x8d
  438d86:	inc    ebx
  438d87:	add    BYTE PTR [edx],al
  438d89:	add    BYTE PTR [eax],al
  438d8b:	add    BYTE PTR [ebp+ecx*4+0x43],dl
	...
  438d9b:	add    BYTE PTR [ecx],al
  438d9d:	add    BYTE PTR [eax],al
  438d9f:	add    bh,bh
  438da1:	(bad)  
  438da2:	(bad)  
  438da3:	jmp    eax
  438da5:	fld    DWORD PTR [edx+0x0]
  438da8:	add    BYTE PTR [eax],al
  438daa:	add    BYTE PTR [eax],al
  438dac:	jmp    0x143d08a
  438db1:	add    BYTE PTR [eax],al
  438db3:	add    dl,dh
  438db5:	fld    DWORD PTR [edx+0x0]
  438db8:	and    al,BYTE PTR ds:0x31993
  438dbe:	add    BYTE PTR [eax],al
  438dc0:	mov    al,ds:0x438d
	...
  438dd5:	add    BYTE PTR [eax],al
  438dd7:	add    BYTE PTR [ecx],al
  438dd9:	add    BYTE PTR [eax],al
  438ddb:	add    bh,bh
  438ddd:	(bad)  
  438dde:	(bad)  
  438ddf:	dec    DWORD PTR [ebx-0x26]
  438de2:	inc    edx
  438de3:	add    BYTE PTR [eax],al
  438de5:	add    BYTE PTR [eax],al
  438de7:	add    BYTE PTR [eax],dh
  438de9:	fiadd  DWORD PTR [edx+0x0]
  438dec:	add    DWORD PTR [eax],eax
  438dee:	add    BYTE PTR [eax],al
  438df0:	cmp    edx,ebx
  438df2:	inc    edx
  438df3:	add    BYTE PTR [edx],al
  438df5:	add    BYTE PTR [eax],al
  438df7:	add    BYTE PTR [edx-0x26],al
  438dfa:	inc    edx
  438dfb:	add    BYTE PTR [edx],ah
  438dfd:	add    eax,0x41993
  438e02:	add    BYTE PTR [eax],al
  438e04:	fmul   QWORD PTR [ebp+0x43]
	...
  438e1a:	add    BYTE PTR [eax],al
  438e1c:	add    DWORD PTR [eax],eax
  438e1e:	add    BYTE PTR [eax],al
  438e20:	(bad)  
  438e21:	(bad)  
  438e22:	(bad)  
  438e23:	call   DWORD PTR [eax-0xffbd26]
  438e29:	(bad)  
  438e2a:	(bad)  
  438e2b:	call   FWORD PTR [ebx+0x10042da]
  438e31:	add    BYTE PTR [eax],al
  438e33:	add    BYTE PTR [ebx+0x220042da],ah
  438e39:	add    eax,0x31993
  438e3e:	add    BYTE PTR [eax],al
  438e40:	and    BYTE PTR [esi+0x43],cl
	...
  438e56:	add    BYTE PTR [eax],al
  438e58:	add    DWORD PTR [eax],eax
  438e5a:	add    BYTE PTR [eax],al
  438e5c:	(bad)  
  438e5d:	(bad)  
  438e5e:	(bad)  
  438e5f:	call   eax
  438e61:	fiadd  DWORD PTR [edx+0x0]
  438e64:	(bad)  
  438e65:	(bad)  
  438e66:	(bad)  
  438e67:	inc    DWORD PTR [eax]
  438e69:	add    BYTE PTR [eax],al
  438e6b:	add    bh,bh
  438e6d:	(bad)  
  438e6e:	(bad)  
  438e6f:	(bad)  
  438e70:	fcomp  st(2)
  438e72:	inc    edx
  438e73:	add    BYTE PTR [edx],ah
  438e75:	add    eax,0x31993
  438e7a:	add    BYTE PTR [eax],al
  438e7c:	pop    esp
  438e7d:	mov    es,WORD PTR [ebx+0x0]
	...
  438e94:	add    DWORD PTR [eax],eax
  438e96:	add    BYTE PTR [eax],al
  438e98:	(bad)  
  438e99:	(bad)  
  438e9a:	(bad)  
  438e9b:	call   DWORD PTR [eax]
  438e9d:	fild   DWORD PTR [edx+0x0]
  438ea0:	add    BYTE PTR [eax],al
  438ea2:	add    BYTE PTR [eax],al
  438ea4:	sbb    ebx,ebx
  438ea6:	inc    edx
  438ea7:	add    BYTE PTR [eax],al
  438ea9:	add    BYTE PTR [eax],al
  438eab:	add    BYTE PTR [ebx+ebx*8],dh
  438eae:	inc    edx
  438eaf:	add    BYTE PTR [eax],al
  438eb1:	add    BYTE PTR [eax],al
  438eb3:	add    BYTE PTR [edx],ah
  438eb5:	fild   DWORD PTR [edx+0x0]
  438eb8:	add    BYTE PTR [eax],al
  438eba:	add    BYTE PTR [eax],al
  438ebc:	cmp    eax,0x42db
  438ec1:	add    BYTE PTR [eax],al
  438ec3:	add    BYTE PTR [ebx],ch
  438ec5:	fild   DWORD PTR [edx+0x0]
  438ec8:	add    BYTE PTR [eax],al
  438eca:	add    BYTE PTR [eax],al
  438ecc:	inc    esi
  438ecd:	fild   DWORD PTR [edx+0x0]
  438ed0:	add    BYTE PTR [eax],al
  438ed2:	add    BYTE PTR [eax],al
  438ed4:	dec    edi
  438ed5:	fild   DWORD PTR [edx+0x0]
  438ed8:	add    BYTE PTR [eax],al
  438eda:	add    BYTE PTR [eax],al
  438edc:	pop    eax
  438edd:	fild   DWORD PTR [edx+0x0]
  438ee0:	and    al,BYTE PTR ds:0x91993
  438ee6:	add    BYTE PTR [eax],al
  438ee8:	cwde   
  438ee9:	mov    es,WORD PTR [ebx+0x0]
	...
  438f00:	add    DWORD PTR [eax],eax
  438f02:	add    BYTE PTR [eax],al
  438f04:	(bad)  
  438f05:	(bad)  
  438f06:	(bad)  
  438f07:	call   DWORD PTR [eax+0x42db]
  438f0d:	add    BYTE PTR [eax],al
  438f0f:	add    BYTE PTR [ecx+0x42db],bl
  438f15:	add    BYTE PTR [eax],al
  438f17:	add    BYTE PTR [ebx+0x42db],ch
  438f1d:	add    BYTE PTR [eax],al
  438f1f:	add    BYTE PTR [edx+0x42db],ah
  438f25:	add    BYTE PTR [eax],al
  438f27:	add    BYTE PTR [ebx+ebx*8+0x5220042],dh
  438f2e:	xchg   ebx,eax
  438f2f:	sbb    DWORD PTR ds:0x4000000,eax
  438f35:	pop    DWORD PTR [ebx+0x0]
	...
  438f4c:	add    DWORD PTR [eax],eax
  438f4e:	add    BYTE PTR [eax],al
  438f50:	(bad)  
  438f51:	(bad)  
  438f52:	(bad)  
  438f53:	push   eax
  438f55:	fild   DWORD PTR [edx+0x0]
  438f58:	add    BYTE PTR [eax],al
  438f5a:	add    BYTE PTR [eax],al
  438f5c:	cld    
  438f5d:	fild   DWORD PTR [edx+0x0]
  438f60:	add    DWORD PTR [eax],eax
  438f62:	add    BYTE PTR [eax],al
  438f64:	or     ah,bl
  438f66:	inc    edx
  438f67:	add    BYTE PTR [eax],al
  438f69:	add    BYTE PTR [eax],al
  438f6b:	add    BYTE PTR [eax],cl
  438f6d:	fadd   QWORD PTR [edx+0x0]
  438f70:	add    eax,DWORD PTR [eax]
  438f72:	add    BYTE PTR [eax],al
  438f74:	adc    esp,ebx
  438f76:	inc    edx
  438f77:	add    BYTE PTR [eax+eax*1],al
  438f7a:	add    BYTE PTR [eax],al
  438f7c:	sbb    eax,0x30042dc
  438f81:	add    BYTE PTR [eax],al
  438f83:	add    BYTE PTR ds:0x60042dc,bl
  438f89:	add    BYTE PTR [eax],al
  438f8b:	add    BYTE PTR [esi],ah
  438f8d:	fadd   QWORD PTR [edx+0x0]
  438f90:	push   es
  438f91:	add    BYTE PTR [eax],al
  438f93:	add    BYTE PTR [ecx],dh
  438f95:	fadd   QWORD PTR [edx+0x0]
  438f98:	push   es
  438f99:	add    BYTE PTR [eax],al
  438f9b:	add    BYTE PTR [esp+ebx*8],bh
  438f9e:	inc    edx
  438f9f:	add    BYTE PTR [ecx],cl
  438fa1:	add    BYTE PTR [eax],al
  438fa3:	add    BYTE PTR [ecx-0x24],cl
  438fa6:	inc    edx
  438fa7:	add    BYTE PTR [edx],cl
  438fa9:	add    BYTE PTR [eax],al
  438fab:	add    BYTE PTR [ebp-0x24],dl
  438fae:	inc    edx
  438faf:	add    BYTE PTR [esi],al
  438fb1:	add    BYTE PTR [eax],al
  438fb3:	add    BYTE PTR [esi-0x24],bl
  438fb6:	inc    edx
  438fb7:	add    BYTE PTR [esi],al
  438fb9:	add    BYTE PTR [eax],al
  438fbb:	add    BYTE PTR [edx-0x24],ch
  438fbe:	inc    edx
  438fbf:	add    BYTE PTR [edx],ah
  438fc1:	add    eax,0xe1993
  438fc6:	add    BYTE PTR [eax],al
  438fc8:	push   eax
  438fc9:	pop    DWORD PTR [ebx+0x0]
	...
  438fe0:	add    DWORD PTR [eax],eax
  438fe2:	add    BYTE PTR [eax],al
  438fe4:	(bad)  
  438fe5:	(bad)  
  438fe6:	(bad)  
  438fe7:	push   DWORD PTR [eax+0x220042dc]
  438fed:	add    eax,0x11993
  438ff2:	add    BYTE PTR [eax],al
  438ff4:	in     al,0x8f
  438ff6:	inc    ebx
	...
  43900b:	add    BYTE PTR [ecx],al
  43900d:	add    BYTE PTR [eax],al
  43900f:	add    bh,bh
  439011:	(bad)  
  439012:	(bad)  
  439013:	jmp    eax
  439015:	fadd   QWORD PTR [edx+0x0]
  439018:	and    al,BYTE PTR ds:0x11993
  43901e:	add    BYTE PTR [eax],al
  439020:	adc    BYTE PTR [eax+0x43],dl
	...
  439036:	add    BYTE PTR [eax],al
  439038:	add    DWORD PTR [eax],eax
  43903a:	add    BYTE PTR [eax],al
  43903c:	(bad)  
  43903d:	(bad)  
  43903e:	(bad)  
  43903f:	call   DWORD PTR [eax]
  439041:	fld    QWORD PTR [edx+0x0]
  439044:	and    al,BYTE PTR ds:0x11993
  43904a:	add    BYTE PTR [eax],al
  43904c:	cmp    al,0x90
  43904e:	inc    ebx
	...
  439063:	add    BYTE PTR [ecx],al
  439065:	add    BYTE PTR [eax],al
  439067:	add    bh,bh
  439069:	(bad)  
  43906a:	(bad)  
  43906b:	inc    DWORD PTR [eax-0x23]
  43906e:	inc    edx
  43906f:	add    BYTE PTR [edx],ah
  439071:	add    eax,0x11993
  439076:	add    BYTE PTR [eax],al
  439078:	push   0x4390
	...
  43908d:	add    BYTE PTR [eax],al
  43908f:	add    BYTE PTR [ecx],al
  439091:	add    BYTE PTR [eax],al
  439093:	add    bh,bh
  439095:	(bad)  
  439096:	(bad)  
  439097:	push   DWORD PTR [eax-0x23]
  43909a:	inc    edx
  43909b:	add    BYTE PTR [eax],al
  43909d:	add    BYTE PTR [eax],al
  43909f:	add    BYTE PTR [ecx-0x23],bh
  4390a2:	inc    edx
  4390a3:	add    BYTE PTR [edx],ah
  4390a5:	add    eax,0x21993
  4390aa:	add    BYTE PTR [eax],al
  4390ac:	xchg   esp,eax
  4390ad:	nop
  4390ae:	inc    ebx
	...
  4390c3:	add    BYTE PTR [ecx],al
  4390c5:	add    BYTE PTR [eax],al
  4390c7:	add    bh,bh
  4390c9:	(bad)  
  4390ca:	(bad)  
  4390cb:	jmp    DWORD PTR [eax+0x220042dd]
  4390d1:	add    eax,0x11993
  4390d6:	add    BYTE PTR [eax],al
  4390d8:	enter  0x4390,0x0
	...
  4390f0:	add    DWORD PTR [eax],eax
  4390f2:	add    BYTE PTR [eax],al
  4390f4:	(bad)  
  4390f5:	(bad)  
  4390f6:	(bad)  
  4390f7:	call   eax
  4390f9:	fld    QWORD PTR [edx+0x0]
  4390fc:	(bad)  
  4390fd:	(bad)  
  4390fe:	(bad)  
  4390ff:	(bad)  
  439100:	(bad)  
  439102:	inc    edx
  439103:	add    BYTE PTR [ecx],al
  439105:	add    BYTE PTR [eax],al
  439107:	add    dl,ah
  439109:	fld    QWORD PTR [edx+0x0]
  43910c:	add    al,BYTE PTR [eax]
  43910e:	add    BYTE PTR [eax],al
  439110:	jmp    0x4390ef
  439112:	inc    edx
  439113:	add    bh,bh
  439115:	(bad)  
  439116:	(bad)  
  439117:	push   esp
  439119:	fld    QWORD PTR [edx+0x0]
  43911c:	(bad)  
  43911d:	(bad)  
  43911e:	(bad)  
  43911f:	(bad)  
  439120:	std    
  439121:	fld    QWORD PTR [edx+0x0]
  439124:	and    al,BYTE PTR ds:0x61993
  43912a:	add    BYTE PTR [eax],al
  43912c:	hlt    
  43912d:	nop
  43912e:	inc    ebx
	...
  439143:	add    BYTE PTR [ecx],al
  439145:	add    BYTE PTR [eax],al
  439147:	add    bh,bh
  439149:	(bad)  
  43914a:	(bad)  
  43914b:	push   DWORD PTR [eax]
  43914d:	fiadd  WORD PTR [edx+0x0]
  439150:	add    BYTE PTR [eax],al
  439152:	add    BYTE PTR [eax],al
  439154:	cmp    esi,ebx
  439156:	inc    edx
  439157:	add    BYTE PTR [eax],al
  439159:	add    BYTE PTR [eax],al
  43915b:	add    BYTE PTR [edx-0x22],al
  43915e:	inc    edx
  43915f:	add    BYTE PTR [eax],al
  439161:	add    BYTE PTR [eax],al
  439163:	add    BYTE PTR [ebx-0x22],cl
  439166:	inc    edx
  439167:	add    BYTE PTR [edx],ah
  439169:	add    eax,0x41993
  43916e:	add    BYTE PTR [eax],al
  439170:	dec    eax
  439171:	xchg   ecx,eax
  439172:	inc    ebx
	...
  439187:	add    BYTE PTR [ecx],al
  439189:	add    BYTE PTR [eax],al
  43918b:	add    BYTE PTR [eax],al
  43918d:	add    BYTE PTR [eax],al
  43918f:	add    dh,bh
  439191:	(bad)  
  439192:	(bad)  
  439193:	inc    DWORD PTR [eax]
  439195:	add    BYTE PTR [eax],al
  439197:	add    al,bl
  439199:	(bad)  
  43919a:	(bad)  
  43919b:	inc    DWORD PTR [eax]
  43919d:	add    BYTE PTR [eax],al
  43919f:	add    dh,bh
  4391a1:	(bad)  
  4391a2:	(bad)  
  4391a3:	push   DWORD PTR [ecx-0x3cffbfcd]
  4391a9:	xor    eax,DWORD PTR [eax+0x0]
  4391ac:	(bad)  
  4391ad:	(bad)  
  4391ae:	(bad)  
  4391af:	inc    DWORD PTR [eax+0x220042de]
  4391b5:	add    eax,0x11993
  4391ba:	add    BYTE PTR [eax],al
  4391bc:	lods   al,BYTE PTR ds:[esi]
  4391bd:	xchg   ecx,eax
  4391be:	inc    ebx
	...
  4391d3:	add    BYTE PTR [ecx],al
  4391d5:	add    BYTE PTR [eax],al
  4391d7:	add    bh,bh
  4391d9:	(bad)  
  4391da:	(bad)  
  4391db:	push   DWORD PTR [eax+0x42de]
  4391e1:	add    BYTE PTR [eax],al
  4391e3:	add    BYTE PTR [ecx+0x220042de],bh
  4391e9:	add    eax,0x21993
  4391ee:	add    BYTE PTR [eax],al
  4391f0:	fcom   DWORD PTR [ecx+0x43]
	...
  439206:	add    BYTE PTR [eax],al
  439208:	add    DWORD PTR [eax],eax
  43920a:	add    BYTE PTR [eax],al
  43920c:	(bad)  
  43920d:	(bad)  
  43920e:	(bad)  
  43920f:	push   eax
  439211:	fiadd  WORD PTR [edx+0x0]
  439214:	and    al,BYTE PTR ds:0x11993
  43921a:	add    BYTE PTR [eax],al
  43921c:	or     al,0x92
  43921e:	inc    ebx
	...
  439233:	add    BYTE PTR [ecx],al
  439235:	add    BYTE PTR [eax],al
  439237:	add    bh,bh
  439239:	(bad)  
  43923a:	(bad)  
  43923b:	jmp    DWORD PTR [eax]
  43923d:	fild   WORD PTR [edx+0x0]
  439240:	and    al,BYTE PTR ds:0x11993
  439246:	add    BYTE PTR [eax],al
  439248:	cmp    BYTE PTR [edx+0x43],dl
	...
  43925e:	add    BYTE PTR [eax],al
  439260:	add    DWORD PTR [eax],eax
  439262:	add    BYTE PTR [eax],al
  439264:	(bad)  
  439265:	(bad)  
  439266:	(bad)  
  439267:	call   DWORD PTR [eax-0x21]
  43926a:	inc    edx
  43926b:	add    BYTE PTR [edx],ah
  43926d:	add    eax,0x11993
  439272:	add    BYTE PTR [eax],al
  439274:	fs xchg edx,eax
  439276:	inc    ebx
	...
  43928b:	add    BYTE PTR [ecx],al
  43928d:	add    BYTE PTR [eax],al
  43928f:	add    bh,bh
  439291:	(bad)  
  439292:	(bad)  
  439293:	inc    DWORD PTR [eax-0xffbd21]
  439299:	(bad)  
  43929a:	(bad)  
  43929b:	dec    DWORD PTR [eax-0xffbd21]
  4392a1:	(bad)  
  4392a2:	(bad)  
  4392a3:	call   DWORD PTR [ecx+0x220042df]
  4392a9:	add    eax,0x31993
  4392ae:	add    BYTE PTR [eax],al
  4392b0:	nop
  4392b1:	xchg   edx,eax
  4392b2:	inc    ebx
	...
  4392c7:	add    BYTE PTR [ecx],al
  4392c9:	add    BYTE PTR [eax],al
  4392cb:	add    bh,bh
  4392cd:	(bad)  
  4392ce:	(bad)  
  4392cf:	call   eax
  4392d1:	fild   WORD PTR [edx+0x0]
  4392d4:	add    BYTE PTR [eax],al
  4392d6:	add    BYTE PTR [eax],al
  4392d8:	fcomp  st(7)
  4392da:	inc    edx
  4392db:	add    BYTE PTR [ecx],al
  4392dd:	add    BYTE PTR [eax],al
  4392df:	add    al,ah
  4392e1:	fild   WORD PTR [edx+0x0]
  4392e4:	and    al,BYTE PTR ds:0x31993
  4392ea:	add    BYTE PTR [eax],al
  4392ec:	int3   
  4392ed:	xchg   edx,eax
  4392ee:	inc    ebx
	...
  439303:	add    BYTE PTR [ecx],al
  439305:	add    BYTE PTR [eax],al
  439307:	add    bh,bh
  439309:	(bad)  
  43930a:	(bad)  
  43930b:	call   DWORD PTR [eax]
  43930d:	loopne 0x439351
  43930f:	add    BYTE PTR [eax],al
  439311:	add    BYTE PTR [eax],al
  439313:	add    BYTE PTR [eax],bl
  439315:	loopne 0x439359
  439317:	add    BYTE PTR [ecx],al
  439319:	add    BYTE PTR [eax],al
  43931b:	add    BYTE PTR [eax],ah
  43931d:	loopne 0x439361
  43931f:	add    BYTE PTR [edx],ah
  439321:	add    eax,0x31993
  439326:	add    BYTE PTR [eax],al
  439328:	or     BYTE PTR [ebx+0x43],dl
	...
  43933e:	add    BYTE PTR [eax],al
  439340:	add    DWORD PTR [eax],eax
  439342:	add    BYTE PTR [eax],al
  439344:	(bad)  
  439345:	(bad)  
  439346:	(bad)  
  439347:	call   DWORD PTR [eax-0x20]
  43934a:	inc    edx
  43934b:	add    BYTE PTR [eax],al
  43934d:	add    BYTE PTR [eax],al
  43934f:	add    BYTE PTR [eax-0x20],bl
  439352:	inc    edx
  439353:	add    BYTE PTR [ecx],al
  439355:	add    BYTE PTR [eax],al
  439357:	add    BYTE PTR [eax],al
  439359:	add    BYTE PTR [eax],al
  43935b:	add    BYTE PTR [edx],al
  43935d:	add    BYTE PTR [eax],al
  43935f:	add    BYTE PTR [eax-0x20],ah
  439362:	inc    edx
  439363:	add    BYTE PTR [ecx],al
  439365:	add    BYTE PTR [eax],al
  439367:	add    BYTE PTR [eax],al
  439369:	add    BYTE PTR [eax],al
  43936b:	add    BYTE PTR [eax+0x0],al
	...
  439376:	add    BYTE PTR [eax],al
  439378:	and    DWORD PTR [edi+0x20041],edi
  43937e:	add    BYTE PTR [eax],al
  439380:	add    eax,DWORD PTR [eax]
  439382:	add    BYTE PTR [eax],al
  439384:	add    al,0x0
  439386:	add    BYTE PTR [eax],al
  439388:	add    DWORD PTR [eax],eax
  43938a:	add    BYTE PTR [eax],al
  43938c:	ins    BYTE PTR es:[edi],dx
  43938d:	xchg   ebx,eax
  43938e:	inc    ebx
  43938f:	add    BYTE PTR [edx],ah
  439391:	add    eax,0x51993
  439396:	add    BYTE PTR [eax],al
  439398:	inc    esp
  439399:	xchg   ebx,eax
  43939a:	inc    ebx
  43939b:	add    BYTE PTR [ecx],al
  43939d:	add    BYTE PTR [eax],al
  43939f:	add    BYTE PTR [ebx+edx*4+0x43],bh
	...
  4393af:	add    BYTE PTR [ecx],al
  4393b1:	add    BYTE PTR [eax],al
  4393b3:	add    bh,bh
  4393b5:	(bad)  
  4393b6:	(bad)  
  4393b7:	call   DWORD PTR [eax+0x42e0]
  4393bd:	add    BYTE PTR [eax],al
  4393bf:	add    BYTE PTR [eax+0x10042e0],bl
  4393c5:	add    BYTE PTR [eax],al
  4393c7:	add    BYTE PTR [eax+0x20042e0],ah
  4393cd:	add    BYTE PTR [eax],al
  4393cf:	add    BYTE PTR [eax+0x220042e0],ch
  4393d5:	add    eax,0x41993
  4393da:	add    BYTE PTR [eax],al
  4393dc:	mov    ah,0x93
  4393de:	inc    ebx
	...
  4393f3:	add    BYTE PTR [ecx],al
  4393f5:	add    BYTE PTR [eax],al
  4393f7:	add    bh,bh
  4393f9:	(bad)  
  4393fa:	(bad)  
  4393fb:	call   eax
  4393fd:	loopne 0x439441
  4393ff:	add    BYTE PTR [eax],al
  439401:	add    BYTE PTR [eax],al
  439403:	add    al,bl
  439405:	loopne 0x439449
  439407:	add    BYTE PTR [ecx],al
  439409:	add    BYTE PTR [eax],al
  43940b:	add    al,ah
  43940d:	loopne 0x439451
  43940f:	add    BYTE PTR [eax],al
  439411:	add    BYTE PTR [eax],al
  439413:	add    al,ah
  439415:	loopne 0x439459
  439417:	add    BYTE PTR [ebx],al
  439419:	add    BYTE PTR [eax],al
  43941b:	add    bl,ch
  43941d:	loopne 0x439461
  43941f:	add    BYTE PTR [eax+eax*1],al
  439422:	add    BYTE PTR [eax],al
  439424:	mul    al
  439426:	inc    edx
  439427:	add    BYTE PTR [eax+eax*1],al
  43942a:	add    BYTE PTR [eax],al
  43942c:	add    ecx,esp
  43942e:	inc    edx
  43942f:	add    BYTE PTR [eax+eax*1],al
  439432:	add    BYTE PTR [eax],al
  439434:	push   cs
  439435:	loope  0x439479
  439437:	add    BYTE PTR [edx],ah
  439439:	add    eax,0x81993
  43943e:	add    BYTE PTR [eax],al
  439440:	clc    
  439441:	xchg   ebx,eax
  439442:	inc    ebx
	...
  439457:	add    BYTE PTR [ecx],al
  439459:	add    BYTE PTR [eax],al
  43945b:	add    bh,bh
  43945d:	(bad)  
  43945e:	(bad)  
  43945f:	inc    DWORD PTR [eax-0x1f]
  439462:	inc    edx
  439463:	add    BYTE PTR [eax],al
  439465:	add    BYTE PTR [eax],al
  439467:	add    BYTE PTR [ecx-0x1f],cl
  43946a:	inc    edx
  43946b:	add    bh,bh
  43946d:	(bad)  
  43946e:	(bad)  
  43946f:	call   DWORD PTR [edx-0x1f]
  439472:	inc    edx
  439473:	add    bh,bh
  439475:	(bad)  
  439476:	(bad)  
  439477:	call   FWORD PTR [ecx+eiz*8+0x42]
  43947b:	add    BYTE PTR [ebx],al
  43947d:	add    BYTE PTR [eax],al
  43947f:	add    BYTE PTR [ebp-0x1f],ah
  439482:	inc    edx
  439483:	add    BYTE PTR [edx],ah
  439485:	add    eax,0x51993
  43948a:	add    BYTE PTR [eax],al
  43948c:	pop    esp
  43948d:	xchg   esp,eax
  43948e:	inc    ebx
	...
  4394a3:	add    BYTE PTR [ecx],al
  4394a5:	add    BYTE PTR [eax],al
  4394a7:	add    bh,bh
  4394a9:	(bad)  
  4394aa:	(bad)  
  4394ab:	jmp    DWORD PTR [eax+0x220042e1]
  4394b1:	add    eax,0x11993
  4394b6:	add    BYTE PTR [eax],al
  4394b8:	test   al,0x94
  4394ba:	inc    ebx
	...
  4394cf:	add    BYTE PTR [ecx],al
  4394d1:	add    BYTE PTR [eax],al
  4394d3:	add    BYTE PTR [eax],al
  4394d5:	add    BYTE PTR [eax],al
  4394d7:	add    bh,bh
  4394d9:	(bad)  
  4394da:	(bad)  
  4394db:	call   eax
  4394dd:	loope  0x439521
  4394df:	add    BYTE PTR [eax],al
  4394e1:	add    BYTE PTR [eax],al
  4394e3:	add    ah,bl
  4394e5:	loope  0x439529
  4394e7:	add    bh,bh
  4394e9:	(bad)  
  4394ea:	(bad)  
  4394eb:	(bad)  
  4394ec:	fsubr  st(1),st
  4394ee:	inc    edx
  4394ef:	add    BYTE PTR [edx],al
  4394f1:	add    BYTE PTR [eax],al
  4394f3:	add    ch,ah
  4394f5:	loope  0x439539
  4394f7:	add    BYTE PTR [ebx],al
  4394f9:	add    BYTE PTR [eax],al
  4394fb:	add    dh,ch
  4394fd:	loope  0x439541
  4394ff:	add    BYTE PTR [eax+eax*1],al
  439502:	add    BYTE PTR [eax],al
  439504:	mul    ecx
  439506:	inc    edx
  439507:	add    BYTE PTR [ebx],al
  439509:	add    BYTE PTR [eax],al
  43950b:	add    bh,dh
  43950d:	loope  0x439551
  43950f:	add    BYTE PTR [edx],al
  439511:	add    BYTE PTR [eax],al
  439513:	add    bh,dh
  439515:	loope  0x439559
  439517:	add    BYTE PTR [edx],ah
  439519:	add    eax,0x81993
  43951e:	add    BYTE PTR [eax],al
  439520:	fcom   DWORD PTR [ebx+eax*2+0x0]
	...
  439537:	add    BYTE PTR [ecx],al
  439539:	add    BYTE PTR [eax],al
  43953b:	add    BYTE PTR [eax],al
  43953d:	add    BYTE PTR [eax],al
  43953f:	add    bh,bh
  439541:	(bad)  
  439542:	(bad)  
  439543:	push   DWORD PTR [eax]
  439545:	loop   0x439589
  439547:	add    BYTE PTR [eax],al
  439549:	add    BYTE PTR [eax],al
  43954b:	add    BYTE PTR [eax],bh
  43954d:	loop   0x439591
  43954f:	add    BYTE PTR [ecx],al
  439551:	add    BYTE PTR [eax],al
  439553:	add    BYTE PTR [ebx-0x1e],al
  439556:	inc    edx
  439557:	add    BYTE PTR [edx],al
  439559:	add    BYTE PTR [eax],al
  43955b:	add    BYTE PTR [edi-0x1e],cl
  43955e:	inc    edx
  43955f:	add    BYTE PTR [ebx],al
  439561:	add    BYTE PTR [eax],al
  439563:	add    BYTE PTR [edx-0x1e],bl
  439566:	inc    edx
  439567:	add    BYTE PTR [edx],al
  439569:	add    BYTE PTR [eax],al
  43956b:	add    BYTE PTR [edx-0x1e],bl
  43956e:	inc    edx
  43956f:	add    BYTE PTR [ecx],al
  439571:	add    BYTE PTR [eax],al
  439573:	add    BYTE PTR [edx-0x1e],bl
  439576:	inc    edx
  439577:	add    BYTE PTR [esi],al
  439579:	add    BYTE PTR [eax],al
  43957b:	add    BYTE PTR [ebp-0x1e],ah
  43957e:	inc    edx
  43957f:	add    BYTE PTR [esi],al
  439581:	add    BYTE PTR [eax],al
  439583:	add    BYTE PTR [esi-0x1e],ch
  439586:	inc    edx
  439587:	add    BYTE PTR [eax],cl
  439589:	add    BYTE PTR [eax],al
  43958b:	add    BYTE PTR [esi-0x1e],dh
  43958e:	inc    edx
  43958f:	add    BYTE PTR [ecx],cl
  439591:	add    BYTE PTR [eax],al
  439593:	add    BYTE PTR [edi-0x1e],bh
  439596:	inc    edx
  439597:	add    BYTE PTR [edx],cl
  439599:	add    BYTE PTR [eax],al
  43959b:	add    BYTE PTR [ebx+0xb0042e2],cl
  4395a1:	add    BYTE PTR [eax],al
  4395a3:	add    BYTE PTR [edi+0xa0042e2],dl
  4395a9:	add    BYTE PTR [eax],al
  4395ab:	add    BYTE PTR [edi+0x90042e2],dl
  4395b1:	add    BYTE PTR [eax],al
  4395b3:	add    BYTE PTR [edi+0xe0042e2],dl
  4395b9:	add    BYTE PTR [eax],al
  4395bb:	add    BYTE PTR [eax+0xf0042e2],ah
  4395c1:	add    BYTE PTR [eax],al
  4395c3:	add    BYTE PTR [edx+eiz*8+0x100042],ch
  4395ca:	add    BYTE PTR [eax],al
  4395cc:	mov    eax,0x110042e2
  4395d1:	add    BYTE PTR [eax],al
  4395d3:	add    ah,al
  4395d5:	loop   0x439619
  4395d7:	add    BYTE PTR [eax],dl
  4395d9:	add    BYTE PTR [eax],al
  4395db:	add    ah,al
  4395dd:	loop   0x439621
  4395df:	add    BYTE PTR [edi],cl
  4395e1:	add    BYTE PTR [eax],al
  4395e3:	add    ah,al
  4395e5:	loop   0x439629
  4395e7:	add    BYTE PTR [esi],cl
  4395e9:	add    BYTE PTR [eax],al
  4395eb:	add    ah,al
  4395ed:	loop   0x439631
  4395ef:	add    BYTE PTR [edx],ah
  4395f1:	add    eax,0x161993
  4395f6:	add    BYTE PTR [eax],al
  4395f8:	inc    eax
  4395f9:	xchg   ebp,eax
  4395fa:	inc    ebx
	...
  43960f:	add    BYTE PTR [ecx],al
  439611:	add    BYTE PTR [eax],al
  439613:	add    bh,bh
  439615:	(bad)  
  439616:	(bad)  
  439617:	inc    DWORD PTR [eax]
  439619:	jecxz  0x43965d
  43961b:	add    bh,bh
  43961d:	(bad)  
  43961e:	(bad)  
  43961f:	dec    DWORD PTR [edx]
  439621:	jecxz  0x439665
  439623:	add    BYTE PTR [edx],ah
  439625:	add    eax,0x21993
  43962a:	add    BYTE PTR [eax],al
  43962c:	adc    al,0x96
  43962e:	inc    ebx
	...
  439643:	add    BYTE PTR [ecx],al
  439645:	add    BYTE PTR [eax],al
  439647:	add    bh,bh
  439649:	(bad)  
  43964a:	(bad)  
  43964b:	push   DWORD PTR [eax]
  43964d:	jecxz  0x439691
  43964f:	add    BYTE PTR [eax],al
  439651:	add    BYTE PTR [eax],al
  439653:	add    BYTE PTR [ecx],bh
  439655:	jecxz  0x439699
  439657:	add    BYTE PTR [eax],al
  439659:	add    BYTE PTR [eax],al
  43965b:	add    BYTE PTR [edx-0x1d],al
  43965e:	inc    edx
  43965f:	add    BYTE PTR [edx],ah
  439661:	add    eax,0x31993
  439666:	add    BYTE PTR [eax],al
  439668:	dec    eax
  439669:	xchg   esi,eax
  43966a:	inc    ebx
	...
  43967f:	add    BYTE PTR [ecx],al
  439681:	add    BYTE PTR [eax],al
  439683:	add    bh,bh
  439685:	(bad)  
  439686:	(bad)  
  439687:	inc    DWORD PTR [eax+0x220042e3]
  43968d:	add    eax,0x11993
  439692:	add    BYTE PTR [eax],al
  439694:	test   BYTE PTR [esi+0x43],dl
	...
  4396aa:	add    BYTE PTR [eax],al
  4396ac:	add    DWORD PTR [eax],eax
  4396ae:	add    BYTE PTR [eax],al
  4396b0:	(bad)  
  4396b1:	(bad)  
  4396b2:	(bad)  
  4396b3:	push   DWORD PTR [eax+0x42e3]
  4396b9:	add    BYTE PTR [eax],al
  4396bb:	add    BYTE PTR [ecx+0x220042e3],bh
  4396c1:	add    eax,0x21993
  4396c6:	add    BYTE PTR [eax],al
  4396c8:	mov    al,0x96
  4396ca:	inc    ebx
	...
  4396df:	add    BYTE PTR [ecx],al
  4396e1:	add    BYTE PTR [eax],al
  4396e3:	add    BYTE PTR [eax],al
  4396e5:	add    BYTE PTR [eax],al
  4396e7:	add    bh,bh
  4396e9:	(bad)  
  4396ea:	(bad)  
  4396eb:	jmp    eax
  4396ed:	jecxz  0x439731
  4396ef:	add    BYTE PTR [eax],al
  4396f1:	add    BYTE PTR [eax],al
  4396f3:	add    cl,ch
  4396f5:	jecxz  0x439739
  4396f7:	add    BYTE PTR [ecx],al
  4396f9:	add    BYTE PTR [eax],al
  4396fb:	add    ch,dh
  4396fd:	jecxz  0x439741
  4396ff:	add    BYTE PTR [edx],al
  439701:	add    BYTE PTR [eax],al
  439703:	add    BYTE PTR [ecx],al
  439705:	in     al,0x42
  439707:	add    BYTE PTR [ebx],al
  439709:	add    BYTE PTR [eax],al
  43970b:	add    BYTE PTR [edx],cl
  43970d:	in     al,0x42
  43970f:	add    BYTE PTR [eax+eax*1],al
  439712:	add    BYTE PTR [eax],al
  439714:	adc    esp,esp
  439716:	inc    edx
  439717:	add    BYTE PTR ds:0x1c000000,al
  43971d:	in     al,0x42
  43971f:	add    BYTE PTR [esi],al
  439721:	add    BYTE PTR [eax],al
  439723:	add    BYTE PTR [eax],ch
  439725:	in     al,0x42
  439727:	add    BYTE PTR [edi],al
  439729:	add    BYTE PTR [eax],al
  43972b:	add    BYTE PTR [esp+eiz*8],dh
  43972e:	inc    edx
  43972f:	add    BYTE PTR [eax],cl
  439731:	add    BYTE PTR [eax],al
  439733:	add    BYTE PTR [eax-0x1c],al
  439736:	inc    edx
  439737:	add    BYTE PTR [ecx],cl
  439739:	add    BYTE PTR [eax],al
  43973b:	add    BYTE PTR [esp+eiz*8+0x42],cl
  43973f:	add    BYTE PTR [edx],cl
  439741:	add    BYTE PTR [eax],al
  439743:	add    BYTE PTR [eax-0x1c],bl
  439746:	inc    edx
  439747:	add    BYTE PTR [ebx],cl
  439749:	add    BYTE PTR [eax],al
  43974b:	add    BYTE PTR [esp+eiz*8+0x42],ah
  43974f:	add    BYTE PTR [eax+eax*1],cl
  439752:	add    BYTE PTR [eax],al
  439754:	jo     0x43973a
  439756:	inc    edx
  439757:	add    BYTE PTR [ebx],cl
  439759:	add    BYTE PTR [eax],al
  43975b:	add    BYTE PTR [eax-0x1c],dh
  43975e:	inc    edx
  43975f:	add    BYTE PTR [edx],cl
  439761:	add    BYTE PTR [eax],al
  439763:	add    BYTE PTR [eax-0x1c],dh
  439766:	inc    edx
  439767:	add    BYTE PTR [ecx],cl
  439769:	add    BYTE PTR [eax],al
  43976b:	add    BYTE PTR [eax-0x1c],dh
  43976e:	inc    edx
  43976f:	add    BYTE PTR [eax],cl
  439771:	add    BYTE PTR [eax],al
  439773:	add    BYTE PTR [eax-0x1c],dh
  439776:	inc    edx
  439777:	add    BYTE PTR [edi],al
  439779:	add    BYTE PTR [eax],al
  43977b:	add    BYTE PTR [eax-0x1c],dh
  43977e:	inc    edx
  43977f:	add    BYTE PTR [esi],al
  439781:	add    BYTE PTR [eax],al
  439783:	add    BYTE PTR [eax-0x1c],dh
  439786:	inc    edx
  439787:	add    BYTE PTR [ebx],dl
  439789:	add    BYTE PTR [eax],al
  43978b:	add    BYTE PTR [esp+eiz*8+0x42],bh
  43978f:	add    BYTE PTR [eax+eax*1],dl
  439792:	add    BYTE PTR [eax],al
  439794:	mov    ah,ah
  439796:	inc    edx
  439797:	add    BYTE PTR [ebx],dl
  439799:	add    BYTE PTR [eax],al
  43979b:	add    BYTE PTR [esp+eiz*8+0x5220042],dl
  4397a2:	xchg   ebx,eax
  4397a3:	sbb    DWORD PTR [edi],edx
  4397a5:	add    BYTE PTR [eax],al
  4397a7:	add    al,ch
  4397a9:	xchg   esi,eax
  4397aa:	inc    ebx
	...
  4397bf:	add    BYTE PTR [ecx],al
  4397c1:	add    BYTE PTR [eax],al
  4397c3:	add    bh,bh
  4397c5:	(bad)  
  4397c6:	(bad)  
  4397c7:	call   eax
  4397c9:	in     al,0x42
  4397cb:	add    BYTE PTR [eax],al
  4397cd:	add    BYTE PTR [eax],al
  4397cf:	add    al,bl
  4397d1:	in     al,0x42
  4397d3:	add    BYTE PTR [edx],ah
  4397d5:	add    eax,0x21993
  4397da:	add    BYTE PTR [eax],al
  4397dc:	les    edx,FWORD PTR [edi+0x43]
	...
  4397f2:	add    BYTE PTR [eax],al
  4397f4:	add    DWORD PTR [eax],eax
  4397f6:	add    BYTE PTR [eax],al
  4397f8:	(bad)  
  4397f9:	(bad)  
  4397fa:	(bad)  
  4397fb:	inc    DWORD PTR [eax]
  4397fd:	in     eax,0x42
  4397ff:	add    BYTE PTR [edx],ah
  439801:	add    eax,0x11993
  439806:	add    BYTE PTR [eax],al
  439808:	clc    
  439809:	xchg   edi,eax
  43980a:	inc    ebx
	...
  43981f:	add    BYTE PTR [ecx],al
  439821:	add    BYTE PTR [eax],al
  439823:	add    bh,bh
  439825:	(bad)  
  439826:	(bad)  
  439827:	push   DWORD PTR [eax]
  439829:	in     eax,0x42
  43982b:	add    BYTE PTR [edx],ah
  43982d:	add    eax,0x11993
  439832:	add    BYTE PTR [eax],al
  439834:	and    al,0x98
  439836:	inc    ebx
	...
  43984b:	add    BYTE PTR [ecx],al
  43984d:	add    BYTE PTR [eax],al
  43984f:	add    bh,bh
  439851:	(bad)  
  439852:	(bad)  
  439853:	jmp    DWORD PTR [eax-0x1b]
  439856:	inc    edx
  439857:	add    BYTE PTR [edx],ah
  439859:	add    eax,0x11993
  43985e:	add    BYTE PTR [eax],al
  439860:	push   eax
  439861:	cwde   
  439862:	inc    ebx
	...
  439877:	add    BYTE PTR [ecx],al
  439879:	add    BYTE PTR [eax],al
  43987b:	add    bh,bh
  43987d:	(bad)  
  43987e:	(bad)  
  43987f:	jmp    DWORD PTR [edx+0x42e5]
  439885:	add    BYTE PTR [eax],al
  439887:	add    BYTE PTR [eax+0x10042e5],dl
  43988d:	add    BYTE PTR [eax],al
  43988f:	add    BYTE PTR [edx+0x220042e5],bl
  439895:	add    eax,0x31993
  43989a:	add    BYTE PTR [eax],al
  43989c:	jl     0x439836
  43989e:	inc    ebx
	...
  4398b3:	add    BYTE PTR [ecx],al
  4398b5:	add    BYTE PTR [eax],al
  4398b7:	add    bh,bh
  4398b9:	(bad)  
  4398ba:	(bad)  
  4398bb:	jmp    eax
  4398bd:	in     eax,0x42
  4398bf:	add    BYTE PTR [eax],al
  4398c1:	add    BYTE PTR [eax],al
  4398c3:	add    cl,ch
  4398c5:	in     eax,0x42
  4398c7:	add    BYTE PTR [ecx],al
  4398c9:	add    BYTE PTR [eax],al
  4398cb:	add    ch,dh
  4398cd:	in     eax,0x42
  4398cf:	add    BYTE PTR [edx],al
  4398d1:	add    BYTE PTR [eax],al
  4398d3:	add    BYTE PTR [ecx],al
  4398d5:	out    0x42,al
  4398d7:	add    BYTE PTR [edx],al
  4398d9:	add    BYTE PTR [eax],al
  4398db:	add    BYTE PTR ds:0x40042e6,cl
  4398e1:	add    BYTE PTR [eax],al
  4398e3:	add    BYTE PTR [edi],dl
  4398e5:	out    0x42,al
  4398e7:	add    BYTE PTR [edx],ah
  4398e9:	add    eax,0x61993
  4398ee:	add    BYTE PTR [eax],al
  4398f0:	mov    eax,0x4398
	...
  439905:	add    BYTE PTR [eax],al
  439907:	add    BYTE PTR [ecx],al
  439909:	add    BYTE PTR [eax],al
  43990b:	add    BYTE PTR [eax],al
  43990d:	add    BYTE PTR [eax],al
  43990f:	add    bh,bh
  439911:	(bad)  
  439912:	(bad)  
  439913:	jmp    DWORD PTR [esi+0x42e6]
  439919:	add    BYTE PTR [eax],al
  43991b:	add    BYTE PTR [edx+0x10042e6],dh
  439921:	add    BYTE PTR [eax],al
  439923:	add    BYTE PTR [esi-0xffbd1a],bh
  439929:	(bad)  
  43992a:	(bad)  
  43992b:	call   DWORD PTR [eax-0x1a]
  43992e:	inc    edx
  43992f:	add    BYTE PTR [ebx],al
  439931:	add    BYTE PTR [eax],al
  439933:	add    BYTE PTR [esi+eiz*8+0x42],bl
  439937:	add    bh,bh
  439939:	(bad)  
  43993a:	(bad)  
  43993b:	jmp    FWORD PTR [eax-0x1a]
  43993e:	inc    edx
  43993f:	add    BYTE PTR ds:0x73000000,al
  439945:	out    0x42,al
  439947:	add    BYTE PTR [esi],al
  439949:	add    BYTE PTR [eax],al
  43994b:	add    BYTE PTR [esi-0x1a],bh
  43994e:	inc    edx
  43994f:	add    BYTE PTR [edi],al
  439951:	add    BYTE PTR [eax],al
  439953:	add    BYTE PTR [edi+0x70042e6],al
  439959:	add    BYTE PTR [eax],al
  43995b:	add    BYTE PTR [ebx+0x90042e6],dl
  439961:	add    BYTE PTR [eax],al
  439963:	add    BYTE PTR [esi+0x220042e6],bl
  439969:	add    eax,0xb1993
  43996e:	add    BYTE PTR [eax],al
  439970:	adc    BYTE PTR [ecx+0x43],bl
	...
  439986:	add    BYTE PTR [eax],al
  439988:	add    DWORD PTR [eax],eax
  43998a:	add    BYTE PTR [eax],al
  43998c:	(bad)  
  43998d:	(bad)  
  43998e:	(bad)  
  43998f:	inc    DWORD PTR [eax]
  439991:	out    0x42,eax
  439993:	add    BYTE PTR [eax],al
  439995:	add    BYTE PTR [eax],al
  439997:	add    BYTE PTR [ecx],cl
  439999:	out    0x42,eax
  43999b:	add    bh,bh
  43999d:	(bad)  
  43999e:	(bad)  
  43999f:	dec    DWORD PTR [ecx]
  4399a1:	out    0x42,eax
  4399a3:	add    BYTE PTR [edx],ah
  4399a5:	add    eax,0x31993
  4399aa:	add    BYTE PTR [eax],al
  4399ac:	mov    WORD PTR [ecx+0x43],ds
	...
  4399c2:	add    BYTE PTR [eax],al
  4399c4:	add    DWORD PTR [eax],eax
  4399c6:	add    BYTE PTR [eax],al
  4399c8:	(bad)  
  4399c9:	(bad)  
  4399ca:	(bad)  
  4399cb:	inc    DWORD PTR [eax-0x19]
  4399ce:	inc    edx
  4399cf:	add    BYTE PTR [eax],al
  4399d1:	add    BYTE PTR [eax],al
  4399d3:	add    BYTE PTR [ecx-0x19],cl
  4399d6:	inc    edx
  4399d7:	add    BYTE PTR [eax],al
  4399d9:	add    BYTE PTR [eax],al
  4399db:	add    BYTE PTR [edx-0x19],dl
  4399de:	inc    edx
  4399df:	add    BYTE PTR [eax],al
  4399e1:	add    BYTE PTR [eax],al
  4399e3:	add    BYTE PTR [ebx-0x19],bl
  4399e6:	inc    edx
  4399e7:	add    BYTE PTR [eax],al
  4399e9:	add    BYTE PTR [eax],al
  4399eb:	add    BYTE PTR [ebx-0x19],ah
  4399ee:	inc    edx
  4399ef:	add    BYTE PTR [eax],al
  4399f1:	add    BYTE PTR [eax],al
  4399f3:	add    BYTE PTR [ebx-0x19],ch
  4399f6:	inc    edx
  4399f7:	add    BYTE PTR [eax],al
  4399f9:	add    BYTE PTR [eax],al
  4399fb:	add    BYTE PTR [edi+eiz*8+0x42],dh
  4399ff:	add    BYTE PTR [edx],ah
  439a01:	add    eax,0x71993
  439a06:	add    BYTE PTR [eax],al
  439a08:	enter  0x4399,0x0
	...
  439a20:	add    DWORD PTR [eax],eax
  439a22:	add    BYTE PTR [eax],al
  439a24:	(bad)  
  439a25:	(bad)  
  439a26:	(bad)  
  439a27:	push   DWORD PTR [eax-0xffbd19]
  439a2d:	(bad)  
  439a2e:	(bad)  
  439a2f:	(bad)  
  439a30:	mov    eax,0xff0042e7
  439a35:	(bad)  
  439a36:	(bad)  
  439a37:	inc    eax
  439a39:	out    0x42,eax
  439a3b:	add    BYTE PTR [edx],ah
  439a3d:	add    eax,0x31993
  439a42:	add    BYTE PTR [eax],al
  439a44:	and    al,0x9a
  439a46:	inc    ebx
	...
  439a5b:	add    BYTE PTR [ecx],al
  439a5d:	add    BYTE PTR [eax],al
  439a5f:	add    bh,bh
  439a61:	(bad)  
  439a62:	(bad)  
  439a63:	push   eax
  439a65:	out    0x42,eax
  439a67:	add    BYTE PTR [eax],al
  439a69:	add    BYTE PTR [eax],al
  439a6b:	add    cl,bh
  439a6d:	out    0x42,eax
  439a6f:	add    BYTE PTR [ecx],al
  439a71:	add    BYTE PTR [eax],al
  439a73:	add    BYTE PTR [eax],al
  439a75:	add    BYTE PTR [eax],al
  439a77:	add    BYTE PTR [edx],al
  439a79:	add    BYTE PTR [eax],al
  439a7b:	add    BYTE PTR [edx],al
  439a7d:	call   0x459ac4
  439a82:	add    BYTE PTR [eax],al
  439a84:	or     ch,al
  439a86:	inc    edx
  439a87:	add    BYTE PTR [eax+eax*1],al
  439a8a:	add    BYTE PTR [eax],al
  439a8c:	adc    ch,al
  439a8e:	inc    edx
  439a8f:	add    BYTE PTR [edx],al
  439a91:	add    BYTE PTR [eax],al
  439a93:	add    BYTE PTR ds:0x10042e8,bl
  439a99:	add    BYTE PTR [eax],al
  439a9b:	add    BYTE PTR [eax],al
  439a9d:	add    BYTE PTR [eax],al
  439a9f:	add    BYTE PTR [edi],al
  439aa1:	add    BYTE PTR [eax],al
  439aa3:	add    BYTE PTR ds:0x80042e8,ah
  439aa9:	add    BYTE PTR [eax],al
  439aab:	add    BYTE PTR [eax-0x1d],ah
  439aae:	inc    ebx
  439aaf:	add    BYTE PTR [eax+0x71ffffff],ah
  439ab5:	and    BYTE PTR [ecx+0x0],al
  439ab8:	add    al,BYTE PTR [eax]
  439aba:	add    BYTE PTR [eax],al
  439abc:	push   es
  439abd:	add    BYTE PTR [eax],al
  439abf:	add    BYTE PTR [eax],cl
  439ac1:	add    BYTE PTR [eax],al
  439ac3:	add    BYTE PTR [ecx],al
  439ac5:	add    BYTE PTR [eax],al
  439ac7:	add    BYTE PTR [eax+0x2200439a],ch
  439acd:	add    eax,0x91993
  439ad2:	add    BYTE PTR [eax],al
  439ad4:	pusha  
  439ad5:	call   0x0:0x10043
  439adc:	mov    eax,0x439a
	...
  439ae9:	add    BYTE PTR [eax],al
  439aeb:	add    BYTE PTR [ecx],al
  439aed:	add    BYTE PTR [eax],al
  439aef:	add    bh,bh
  439af1:	(bad)  
  439af2:	(bad)  
  439af3:	jmp    DWORD PTR [eax-0x18]
  439af6:	inc    edx
  439af7:	add    BYTE PTR [eax],al
  439af9:	add    BYTE PTR [eax],al
  439afb:	add    BYTE PTR [ecx-0x18],ch
  439afe:	inc    edx
  439aff:	add    BYTE PTR [eax],al
  439b01:	add    BYTE PTR [eax],al
  439b03:	add    BYTE PTR [ecx-0x18],dh
  439b06:	inc    edx
  439b07:	add    BYTE PTR [edx],ah
  439b09:	add    eax,0x31993
  439b0e:	add    BYTE PTR [eax],al
  439b10:	lock call 0x0:0x43
	...
  439b28:	add    DWORD PTR [eax],eax
  439b2a:	add    BYTE PTR [eax],al
  439b2c:	add    BYTE PTR [eax],al
  439b2e:	add    BYTE PTR [eax],al
  439b30:	(bad)  
  439b31:	(bad)  
  439b32:	(bad)  
  439b33:	jmp    DWORD PTR [eax+0x42e8]
  439b39:	add    BYTE PTR [eax],al
  439b3b:	add    BYTE PTR [eax+0x10042e8],ch
  439b41:	add    BYTE PTR [eax],al
  439b43:	add    BYTE PTR [eax+ebp*8+0x10042],dh
  439b4a:	add    BYTE PTR [eax],al
  439b4c:	shr    eax,0x42
  439b4f:	add    BYTE PTR [ebx],al
  439b51:	add    BYTE PTR [eax],al
  439b53:	add    dh,cl
  439b55:	call   0x479b9c
  439b5a:	add    BYTE PTR [eax],al
  439b5c:	xlat   BYTE PTR ds:[ebx]
  439b5d:	call   0x479ba4
  439b62:	add    BYTE PTR [eax],al
  439b64:	loop   0x439b4e
  439b66:	inc    edx
  439b67:	add    BYTE PTR [eax+eax*1],al
  439b6a:	add    BYTE PTR [eax],al
  439b6c:	jmp    0x439b56
  439b6e:	inc    edx
  439b6f:	add    BYTE PTR [edi],al
  439b71:	add    BYTE PTR [eax],al
  439b73:	add    BYTE PTR [eax],al
  439b75:	add    BYTE PTR [eax],al
  439b77:	add    BYTE PTR [eax],cl
  439b79:	add    BYTE PTR [eax],al
  439b7b:	add    BYTE PTR [ebx],al
  439b7d:	jmp    0x4b9bc4
  439b82:	add    BYTE PTR [eax],al
  439b84:	adc    ecx,ebp
  439b86:	inc    edx
  439b87:	add    BYTE PTR [edx],cl
  439b89:	add    BYTE PTR [eax],al
  439b8b:	add    BYTE PTR [ecx+ebp*8],bl
  439b8e:	inc    edx
  439b8f:	add    BYTE PTR [ebx],cl
  439b91:	add    BYTE PTR [eax],al
  439b93:	add    BYTE PTR [eax],ch
  439b95:	jmp    0x4f9bdc
  439b9a:	add    BYTE PTR [eax],al
  439b9c:	xor    eax,0xd0042e9
  439ba1:	add    BYTE PTR [eax],al
  439ba3:	add    BYTE PTR [esi],bh
  439ba5:	jmp    0x509bec
  439baa:	add    BYTE PTR [eax],al
  439bac:	dec    edx
  439bad:	jmp    0x529bf4
  439bb2:	add    BYTE PTR [eax],al
  439bb4:	push   esi
  439bb5:	jmp    0x539bfc
  439bba:	add    BYTE PTR [eax],al
  439bbc:	(bad)  
  439bbd:	jmp    0x549c04
  439bc2:	add    BYTE PTR [eax],al
  439bc4:	outs   dx,BYTE PTR ds:[esi]
  439bc5:	jmp    0x4a9c0c
  439bca:	add    BYTE PTR [eax],al
  439bcc:	add    BYTE PTR [eax],al
  439bce:	add    BYTE PTR [eax],al
  439bd0:	add    DWORD PTR [eax],eax
  439bd2:	add    BYTE PTR [eax],al
  439bd4:	clc    
  439bd5:	call   0x839c1c
	...
  439be2:	add    BYTE PTR [eax],al
  439be4:	jge    0x439be2
  439be6:	inc    eax
  439be7:	add    BYTE PTR [eax],cl
  439be9:	add    BYTE PTR [eax],al
  439beb:	add    BYTE PTR [edx],dl
  439bed:	add    BYTE PTR [eax],al
  439bef:	add    BYTE PTR [ebx],dl
  439bf1:	add    BYTE PTR [eax],al
  439bf3:	add    BYTE PTR [ecx],al
  439bf5:	add    BYTE PTR [eax],al
  439bf7:	add    al,bl
  439bf9:	fwait
  439bfa:	inc    ebx
  439bfb:	add    BYTE PTR [edx],ah
  439bfd:	add    eax,0x151993
  439c02:	add    BYTE PTR [eax],al
  439c04:	xor    BYTE PTR [ebx+0x10043],bl
  439c0a:	add    BYTE PTR [eax],al
  439c0c:	call   0x43dfac
	...
  439c19:	add    BYTE PTR [eax],al
  439c1b:	add    BYTE PTR [ecx],al
  439c1d:	add    BYTE PTR [eax],al
  439c1f:	add    bh,bh
  439c21:	(bad)  
  439c22:	(bad)  
  439c23:	push   DWORD PTR [eax+0x42e9]
  439c29:	add    BYTE PTR [eax],al
  439c2b:	add    BYTE PTR [ecx-0xffbd17],bh
  439c31:	(bad)  
  439c32:	(bad)  
  439c33:	(bad)  
  439c34:	mov    ecx,0x20042e9
  439c39:	add    BYTE PTR [eax],al
  439c3b:	add    dl,al
  439c3d:	jmp    0x459c84
  439c42:	add    BYTE PTR [eax],al
  439c44:	into   
  439c45:	jmp    0x479c8c
  439c4a:	add    BYTE PTR [eax],al
  439c4c:	xlat   BYTE PTR ds:[ebx]
  439c4d:	jmp    0x489c94
  439c52:	add    BYTE PTR [eax],al
  439c54:	jecxz  0x439c3f
  439c56:	inc    edx
  439c57:	add    BYTE PTR [eax+eax*1],al
  439c5a:	add    BYTE PTR [eax],al
  439c5c:	jecxz  0x439c47
  439c5e:	inc    edx
  439c5f:	add    BYTE PTR [edx],al
  439c61:	add    BYTE PTR [eax],al
  439c63:	add    bl,ah
  439c65:	jmp    0x5659cac
  439c6a:	xchg   ebx,eax
  439c6b:	sbb    DWORD PTR [ecx],ecx
  439c6d:	add    BYTE PTR [eax],al
  439c6f:	add    BYTE PTR [eax],ah
  439c71:	pushf  
  439c72:	inc    ebx
	...
  439c87:	add    BYTE PTR [ecx],al
  439c89:	add    BYTE PTR [eax],al
  439c8b:	add    BYTE PTR [eax],al
  439c8d:	add    BYTE PTR [eax],al
  439c8f:	add    bh,bh
  439c91:	(bad)  
  439c92:	(bad)  
  439c93:	jmp    DWORD PTR [eax]
  439c95:	jmp    0x0:0x42
  439c9c:	sub    eax,0x42ea
  439ca1:	add    BYTE PTR [eax],al
  439ca3:	add    BYTE PTR [eax],bh
  439ca5:	jmp    0x0:0x42
  439cac:	inc    esp
  439cad:	jmp    0x0:0x42
  439cb4:	dec    edi
  439cb5:	jmp    0x0:0x42
  439cbc:	pop    ebx
  439cbd:	jmp    0x0:0x50042
  439cc4:	push   0x60042ea
  439cc9:	add    BYTE PTR [eax],al
  439ccb:	add    BYTE PTR [edx+ebp*8+0x42],dh
  439ccf:	add    BYTE PTR ds:0x74000000,al
  439cd5:	jmp    0x0:0x80042
  439cdc:	por    mm0,QWORD PTR [edx+0x0]
  439ce0:	or     BYTE PTR [eax],al
  439ce2:	add    BYTE PTR [eax],al
  439ce4:	sbb    ch,bl
  439ce6:	inc    edx
  439ce7:	add    BYTE PTR ds:0x80000000,al
  439ced:	jmp    0x0:0x50042
  439cf4:	mov    ebp,edx
  439cf6:	inc    edx
  439cf7:	add    BYTE PTR [eax+eax*1],cl
  439cfa:	add    BYTE PTR [eax],al
  439cfc:	xchg   edi,eax
  439cfd:	jmp    0x0:0xd0042
  439d04:	mov    ds:0xd0042ea,eax
  439d09:	add    BYTE PTR [eax],al
  439d0b:	add    BYTE PTR [edi+0xf0042ea],ch
  439d11:	add    BYTE PTR [eax],al
  439d13:	add    BYTE PTR [ebx+0xd0042ea],bh
  439d19:	add    BYTE PTR [eax],al
  439d1b:	add    BYTE PTR [esi],ah
  439d1d:	jmp    0x439d61
  439d1f:	add    BYTE PTR ds:0x31000000,cl
  439d25:	jmp    0x439d69
  439d27:	add    BYTE PTR ds:0xc7000000,cl
  439d2d:	jmp    0x0:0x130042
  439d34:	shr    edx,cl
  439d36:	inc    edx
  439d37:	add    BYTE PTR [eax+eax*1],dl
  439d3a:	add    BYTE PTR [eax],al
  439d3c:	cmp    eax,0x140042eb
  439d41:	add    BYTE PTR [eax],al
  439d43:	add    BYTE PTR [eax-0x15],cl
  439d46:	inc    edx
  439d47:	add    BYTE PTR [eax+eax*1],dl
  439d4a:	add    BYTE PTR [eax],al
  439d4c:	fucomip st,st(2)
  439d4e:	inc    edx
  439d4f:	add    BYTE PTR [edi],dl
  439d51:	add    BYTE PTR [eax],al
  439d53:	add    BYTE PTR [ebx+ebp*8+0x42],dl
  439d57:	add    BYTE PTR [edi],dl
  439d59:	add    BYTE PTR [eax],al
  439d5b:	add    BYTE PTR [edi-0x15],bl
  439d5e:	inc    edx
  439d5f:	add    BYTE PTR [eax+eax*1],dl
  439d62:	add    BYTE PTR [eax],al
  439d64:	in     al,dx
  439d65:	jmp    0x0:0x1a0042
  439d6c:	clc    
  439d6d:	jmp    0x0:0x140042
  439d74:	clc    
  439d75:	jmp    0x0:0x1c0042
  439d7c:	add    al,0xeb
  439d7e:	inc    edx
  439d7f:	add    BYTE PTR [eax+eax*1],bl
  439d82:	add    BYTE PTR [eax],al
  439d84:	imul   ebp,ebx,0x42
  439d87:	add    BYTE PTR [eax+eax*1],bl
  439d8a:	add    BYTE PTR [eax],al
  439d8c:	jbe    0x439d79
  439d8e:	inc    edx
  439d8f:	add    BYTE PTR [edx],ah
  439d91:	add    eax,0x201993
  439d96:	add    BYTE PTR [eax],al
  439d98:	nop
  439d99:	pushf  
  439d9a:	inc    ebx
	...
  439daf:	add    BYTE PTR [ecx],al
  439db1:	add    BYTE PTR [eax],al
  439db3:	add    BYTE PTR [eax],al
  439db5:	add    BYTE PTR [eax],al
  439db7:	add    bh,bh
  439db9:	(bad)  
  439dba:	(bad)  
  439dbb:	push   DWORD PTR [eax+0x42eb]
  439dc1:	add    BYTE PTR [eax],al
  439dc3:	add    BYTE PTR [edx+0x10042eb],bh
  439dc9:	add    BYTE PTR [eax],al
  439dcb:	add    dh,al
  439dcd:	jmp    0x439e11
  439dcf:	add    BYTE PTR [eax],al
  439dd1:	add    BYTE PTR [eax],al
  439dd3:	add    dh,al
  439dd5:	jmp    0x439e19
  439dd7:	add    BYTE PTR [ebx],al
  439dd9:	add    BYTE PTR [eax],al
  439ddb:	add    bh,cl
  439ddd:	jmp    0x439e21
  439ddf:	add    BYTE PTR [eax+eax*1],al
  439de2:	add    BYTE PTR [eax],al
  439de4:	fucomi st,st(3)
  439de6:	inc    edx
  439de7:	add    BYTE PTR [ebx],al
  439de9:	add    BYTE PTR [eax],al
  439deb:	add    bh,ah
  439ded:	jmp    0x439e31
  439def:	add    BYTE PTR [esi],al
  439df1:	add    BYTE PTR [eax],al
  439df3:	add    bl,dh
  439df5:	jmp    0x439e39
  439df7:	add    BYTE PTR [ebx],al
  439df9:	add    BYTE PTR [eax],al
  439dfb:	add    bl,dh
  439dfd:	jmp    0x439e41
  439dff:	add    BYTE PTR [eax],cl
  439e01:	add    BYTE PTR [eax],al
  439e03:	add    BYTE PTR ds:0x42ec,dh
  439e09:	add    BYTE PTR [eax],al
  439e0b:	add    bh,bh
  439e0d:	jmp    0x439e51
  439e0f:	add    BYTE PTR [edx],cl
  439e11:	add    BYTE PTR [eax],al
  439e13:	add    BYTE PTR [eax],cl
  439e15:	in     al,dx
  439e16:	inc    edx
  439e17:	add    BYTE PTR [eax],al
  439e19:	add    BYTE PTR [eax],al
  439e1b:	add    BYTE PTR [eax],cl
  439e1d:	in     al,dx
  439e1e:	inc    edx
  439e1f:	add    BYTE PTR [eax+eax*1],cl
  439e22:	add    BYTE PTR [eax],al
  439e24:	adc    al,0xec
  439e26:	inc    edx
  439e27:	add    BYTE PTR ds:0x20000000,cl
  439e2d:	in     al,dx
  439e2e:	inc    edx
  439e2f:	add    BYTE PTR [esi],cl
  439e31:	add    BYTE PTR [eax],al
  439e33:	add    BYTE PTR [esp+ebp*8],ch
  439e36:	inc    edx
  439e37:	add    BYTE PTR ds:0x2c000000,cl
  439e3d:	in     al,dx
  439e3e:	inc    edx
  439e3f:	add    BYTE PTR [eax+eax*1],cl
  439e42:	add    BYTE PTR [eax],al
  439e44:	sub    al,0xec
  439e46:	inc    edx
  439e47:	add    BYTE PTR [edx],ah
  439e49:	add    eax,0x121993
  439e4e:	add    BYTE PTR [eax],al
  439e50:	mov    eax,0x439d
	...
  439e65:	add    BYTE PTR [eax],al
  439e67:	add    BYTE PTR [ecx],al
  439e69:	add    BYTE PTR [eax],al
  439e6b:	add    bh,bh
  439e6d:	(bad)  
  439e6e:	(bad)  
  439e6f:	push   DWORD PTR [eax-0x14]
  439e72:	inc    edx
  439e73:	add    BYTE PTR [edx],ah
  439e75:	add    eax,0x11993
  439e7a:	add    BYTE PTR [eax],al
  439e7c:	ins    BYTE PTR es:[edi],dx
  439e7d:	sahf   
  439e7e:	inc    ebx
	...
  439e93:	add    BYTE PTR [ecx],al
  439e95:	add    BYTE PTR [eax],al
  439e97:	add    bh,bh
  439e99:	(bad)  
  439e9a:	(bad)  
  439e9b:	jmp    DWORD PTR [eax+0x220042ec]
  439ea1:	add    eax,0x11993
  439ea6:	add    BYTE PTR [eax],al
  439ea8:	cwde   
  439ea9:	sahf   
  439eaa:	inc    ebx
	...
  439ebf:	add    BYTE PTR [ecx],al
  439ec1:	add    BYTE PTR [eax],al
  439ec3:	add    BYTE PTR [eax],al
  439ec5:	add    BYTE PTR [eax],al
  439ec7:	add    bh,bh
  439ec9:	(bad)  
  439eca:	(bad)  
  439ecb:	call   eax
  439ecd:	in     al,dx
  439ece:	inc    edx
  439ecf:	add    BYTE PTR [eax],al
  439ed1:	add    BYTE PTR [eax],al
  439ed3:	add    bl,bl
  439ed5:	in     al,dx
  439ed6:	inc    edx
  439ed7:	add    BYTE PTR [ecx],al
  439ed9:	add    BYTE PTR [eax],al
  439edb:	add    bh,ah
  439edd:	in     al,dx
  439ede:	inc    edx
  439edf:	add    BYTE PTR [eax],al
  439ee1:	add    BYTE PTR [eax],al
  439ee3:	add    bh,ah
  439ee5:	in     al,dx
  439ee6:	inc    edx
  439ee7:	add    BYTE PTR [ebx],al
  439ee9:	add    BYTE PTR [eax],al
  439eeb:	add    al,dh
  439eed:	in     al,dx
  439eee:	inc    edx
  439eef:	add    BYTE PTR [eax+eax*1],al
  439ef2:	add    BYTE PTR [eax],al
  439ef4:	stc    
  439ef5:	in     al,dx
  439ef6:	inc    edx
  439ef7:	add    BYTE PTR ds:0x5000000,al
  439efd:	in     eax,dx
  439efe:	inc    edx
  439eff:	add    BYTE PTR [eax+eax*1],al
  439f02:	add    BYTE PTR [eax],al
  439f04:	push   cs
  439f05:	in     eax,dx
  439f06:	inc    edx
  439f07:	add    BYTE PTR [edx],ah
  439f09:	add    eax,0x81993
  439f0e:	add    BYTE PTR [eax],al
  439f10:	enter  0x439e,0x0
	...
  439f28:	add    DWORD PTR [eax],eax
  439f2a:	add    BYTE PTR [eax],al
  439f2c:	add    BYTE PTR [eax],al
  439f2e:	add    BYTE PTR [eax],al
  439f30:	(bad)  
  439f31:	(bad)  
  439f32:	(bad)  
  439f33:	call   DWORD PTR [eax-0x13]
  439f36:	inc    edx
  439f37:	add    BYTE PTR [eax],al
  439f39:	add    BYTE PTR [eax],al
  439f3b:	add    BYTE PTR [ebp+ebp*8+0x42],bl
  439f3f:	add    bh,bh
  439f41:	(bad)  
  439f42:	(bad)  
  439f43:	call   FWORD PTR [ebp+ebp*8+0x42]
  439f47:	add    BYTE PTR [edx],al
  439f49:	add    BYTE PTR [eax],al
  439f4b:	add    BYTE PTR [ebp+ebp*8+0x42],ah
  439f4f:	add    BYTE PTR [edx],al
  439f51:	add    BYTE PTR [eax],al
  439f53:	add    BYTE PTR [eax],al
  439f55:	add    BYTE PTR [eax],al
  439f57:	add    BYTE PTR [eax+eax*1],al
  439f5a:	add    BYTE PTR [eax],al
  439f5c:	outs   dx,DWORD PTR ds:[esi]
  439f5d:	in     eax,dx
  439f5e:	inc    edx
  439f5f:	add    BYTE PTR [edx],al
  439f61:	add    BYTE PTR [eax],al
  439f63:	add    BYTE PTR [eax],al
  439f65:	add    BYTE PTR [eax],al
  439f67:	add    BYTE PTR [edx],al
  439f69:	add    BYTE PTR [eax],al
  439f6b:	add    BYTE PTR [eax],al
  439f6d:	add    BYTE PTR [eax],al
  439f6f:	add    BYTE PTR [edi],al
  439f71:	add    BYTE PTR [eax],al
  439f73:	add    BYTE PTR [eax-0x13],bh
  439f76:	inc    edx
  439f77:	add    BYTE PTR [edi],al
  439f79:	add    BYTE PTR [eax],al
  439f7b:	add    BYTE PTR [ecx+0x70042ed],al
  439f81:	add    BYTE PTR [eax],al
  439f83:	add    BYTE PTR [edx+0x70042ed],cl
  439f89:	add    BYTE PTR [eax],al
  439f8b:	add    BYTE PTR [ebp+0x70042ed],dl
  439f91:	add    BYTE PTR [eax],al
  439f93:	add    BYTE PTR [ecx+0x70042ed],ah
  439f99:	add    BYTE PTR [eax],al
  439f9b:	add    BYTE PTR [ebp+ebp*8+0xd0042],ch
  439fa2:	add    BYTE PTR [eax],al
  439fa4:	mov    bh,0xed
  439fa6:	inc    edx
  439fa7:	add    BYTE PTR ds:0xc2000000,cl
  439fad:	in     eax,dx
  439fae:	inc    edx
  439faf:	add    BYTE PTR [edi],cl
  439fb1:	add    BYTE PTR [eax],al
  439fb3:	add    bl,cl
  439fb5:	in     eax,dx
  439fb6:	inc    edx
  439fb7:	add    BYTE PTR [eax],dl
  439fb9:	add    BYTE PTR [eax],al
  439fbb:	add    bh,dl
  439fbd:	in     eax,dx
  439fbe:	inc    edx
  439fbf:	add    BYTE PTR [eax],dl
  439fc1:	add    BYTE PTR [eax],al
  439fc3:	add    bl,ah
  439fc5:	in     eax,dx
  439fc6:	inc    edx
  439fc7:	add    BYTE PTR [edx],dl
  439fc9:	add    BYTE PTR [eax],al
  439fcb:	add    bh,ch
  439fcd:	in     eax,dx
  439fce:	inc    edx
  439fcf:	add    BYTE PTR [ebx],dl
  439fd1:	add    BYTE PTR [eax],al
  439fd3:	add    bl,bh
  439fd5:	in     eax,dx
  439fd6:	inc    edx
  439fd7:	add    BYTE PTR [eax+eax*1],dl
  439fda:	add    BYTE PTR [eax],al
  439fdc:	pop    es
  439fdd:	out    dx,al
  439fde:	inc    edx
  439fdf:	add    BYTE PTR ds:0x13000000,dl
  439fe5:	out    dx,al
  439fe6:	inc    edx
  439fe7:	add    BYTE PTR [eax+eax*1],dl
  439fea:	add    BYTE PTR [eax],al
  439fec:	adc    ebp,esi
  439fee:	inc    edx
  439fef:	add    BYTE PTR [ebx],dl
  439ff1:	add    BYTE PTR [eax],al
  439ff3:	add    BYTE PTR [ebx],dl
  439ff5:	out    dx,al
  439ff6:	inc    edx
  439ff7:	add    BYTE PTR [edx],dl
  439ff9:	add    BYTE PTR [eax],al
  439ffb:	add    BYTE PTR [ebx],dl
  439ffd:	out    dx,al
  439ffe:	inc    edx
  439fff:	add    BYTE PTR [eax],dl
  43a001:	add    BYTE PTR [eax],al
  43a003:	add    BYTE PTR [ebx],dl
  43a005:	out    dx,al
  43a006:	inc    edx
  43a007:	add    BYTE PTR [edx],bl
  43a009:	add    BYTE PTR [eax],al
  43a00b:	add    BYTE PTR [esi+ebp*8],bl
  43a00e:	inc    edx
  43a00f:	add    BYTE PTR [edx],bl
  43a011:	add    BYTE PTR [eax],al
  43a013:	add    BYTE PTR [eax],ch
  43a015:	out    dx,al
  43a016:	inc    edx
  43a017:	add    BYTE PTR [edx],bl
  43a019:	add    BYTE PTR [eax],al
  43a01b:	add    BYTE PTR [ebx],dh
  43a01d:	out    dx,al
  43a01e:	inc    edx
  43a01f:	add    BYTE PTR ds:0x40000000,bl
  43a025:	out    dx,al
  43a026:	inc    edx
  43a027:	add    BYTE PTR [esi],bl
  43a029:	add    BYTE PTR [eax],al
  43a02b:	add    BYTE PTR [ebp-0x12],cl
  43a02e:	inc    edx
  43a02f:	add    BYTE PTR [esi],bl
  43a031:	add    BYTE PTR [eax],al
  43a033:	add    BYTE PTR [ecx-0x12],bl
  43a036:	inc    edx
  43a037:	add    BYTE PTR [edi],al
  43a039:	add    BYTE PTR [eax],al
  43a03b:	add    BYTE PTR [esi+ebp*8+0x42],ah
  43a03f:	add    BYTE PTR [edx],al
  43a041:	add    BYTE PTR [eax],al
  43a043:	add    BYTE PTR [eax],al
  43a045:	add    BYTE PTR [eax],al
  43a047:	add    BYTE PTR [eax+0x0],al
	...
  43a052:	add    BYTE PTR [eax],al
  43a054:	jbe    0x43a03e
  43a056:	inc    eax
  43a057:	add    BYTE PTR [eax+0x0],al
	...
  43a062:	add    BYTE PTR [eax],al
  43a064:	xor    al,0x40
  43a067:	add    BYTE PTR [eax+eax*1],al
  43a06a:	add    BYTE PTR [eax],al
  43a06c:	add    eax,0x6000000
  43a071:	add    BYTE PTR [eax],al
  43a073:	add    BYTE PTR [ecx],al
  43a075:	add    BYTE PTR [eax],al
  43a077:	add    BYTE PTR [eax-0x60],cl
  43a07a:	inc    ebx
  43a07b:	add    BYTE PTR [edi],al
  43a07d:	add    BYTE PTR [eax],al
  43a07f:	add    BYTE PTR [ecx],ah
  43a081:	add    BYTE PTR [eax],al
  43a083:	add    BYTE PTR [edx],ah
  43a085:	add    BYTE PTR [eax],al
  43a087:	add    BYTE PTR [ecx],al
  43a089:	add    BYTE PTR [eax],al
  43a08b:	add    BYTE PTR [eax-0x60],bl
  43a08e:	inc    ebx
  43a08f:	add    BYTE PTR [edx],ah
  43a091:	add    eax,0x231993
  43a096:	add    BYTE PTR [eax],al
  43a098:	xor    BYTE PTR [edi+0x20043],bl
  43a09e:	add    BYTE PTR [eax],al
  43a0a0:	push   0x43a0
	...
  43a0ad:	add    BYTE PTR [eax],al
  43a0af:	add    BYTE PTR [ecx],al
  43a0b1:	add    BYTE PTR [eax],al
  43a0b3:	add    bh,bh
  43a0b5:	(bad)  
  43a0b6:	(bad)  
  43a0b7:	jmp    DWORD PTR [eax+0x42ee]
  43a0bd:	add    BYTE PTR [eax],al
  43a0bf:	add    BYTE PTR [ecx-0xffbd12],ch
  43a0c5:	(bad)  
  43a0c6:	(bad)  
  43a0c7:	jmp    FWORD PTR [ecx+0x20042ee]
  43a0cd:	add    BYTE PTR [eax],al
  43a0cf:	add    BYTE PTR [edx+0x30042ee],dh
  43a0d5:	add    BYTE PTR [eax],al
  43a0d7:	add    BYTE PTR [ebx+0x220042ee],bh
  43a0dd:	add    eax,0x51993
  43a0e2:	add    BYTE PTR [eax],al
  43a0e4:	mov    ah,0xa0
  43a0e6:	inc    ebx
	...
  43a0fb:	add    BYTE PTR [ecx],al
  43a0fd:	add    BYTE PTR [eax],al
  43a0ff:	add    bh,bh
  43a101:	(bad)  
  43a102:	(bad)  
  43a103:	inc    DWORD PTR [eax]
  43a105:	out    dx,eax
  43a106:	inc    edx
  43a107:	add    BYTE PTR [eax],al
  43a109:	add    BYTE PTR [eax],al
  43a10b:	add    BYTE PTR [edi+ebp*8],cl
  43a10e:	inc    edx
  43a10f:	add    BYTE PTR [ecx],al
  43a111:	add    BYTE PTR [eax],al
  43a113:	add    BYTE PTR [eax],bl
  43a115:	out    dx,eax
  43a116:	inc    edx
  43a117:	add    bh,bh
  43a119:	(bad)  
  43a11a:	(bad)  
  43a11b:	jmp    DWORD PTR [edi+ebp*8]
  43a11e:	inc    edx
  43a11f:	add    BYTE PTR [ebx],al
  43a121:	add    BYTE PTR [eax],al
  43a123:	add    BYTE PTR [eax],dh
  43a125:	out    dx,eax
  43a126:	inc    edx
  43a127:	add    BYTE PTR [eax+eax*1],al
  43a12a:	add    BYTE PTR [eax],al
  43a12c:	cmp    al,0xef
  43a12e:	inc    edx
  43a12f:	add    bh,bh
  43a131:	(bad)  
  43a132:	(bad)  
  43a133:	dec    DWORD PTR [eax-0x11]
  43a136:	inc    edx
  43a137:	add    BYTE PTR [esi],al
  43a139:	add    BYTE PTR [eax],al
  43a13b:	add    BYTE PTR [edi+ebp*8+0x42],dl
  43a13f:	add    BYTE PTR [edi],al
  43a141:	add    BYTE PTR [eax],al
  43a143:	add    BYTE PTR [eax-0x11],ah
  43a146:	inc    edx
  43a147:	add    bh,bh
  43a149:	(bad)  
  43a14a:	(bad)  
  43a14b:	jmp    FWORD PTR [edi+ebp*8+0x42]
  43a14f:	add    BYTE PTR [ecx],cl
  43a151:	add    BYTE PTR [eax],al
  43a153:	add    BYTE PTR [eax-0x11],bh
  43a156:	inc    edx
  43a157:	add    BYTE PTR [edx],cl
  43a159:	add    BYTE PTR [eax],al
  43a15b:	add    BYTE PTR [edi+ebp*8-0xffbe],al
  43a162:	(bad)  
  43a163:	call   DWORD PTR [eax+0xc0042ef]
  43a169:	add    BYTE PTR [eax],al
  43a16b:	add    BYTE PTR [edi+ebp*8+0xd0042],bl
  43a172:	add    BYTE PTR [eax],al
  43a174:	test   al,0xef
  43a176:	inc    edx
  43a177:	add    bh,bh
  43a179:	(bad)  
  43a17a:	(bad)  
  43a17b:	push   DWORD PTR [edi+ebp*8+0xf0042]
  43a182:	add    BYTE PTR [eax],al
  43a184:	shr    bh,0x42
  43a187:	add    BYTE PTR [eax],dl
  43a189:	add    BYTE PTR [eax],al
  43a18b:	add    ah,cl
  43a18d:	out    dx,eax
  43a18e:	inc    edx
  43a18f:	add    bh,bh
  43a191:	(bad)  
  43a192:	(bad)  
  43a193:	(bad)  
  43a194:	fsubr  st,st(7)
  43a196:	inc    edx
  43a197:	add    bh,bh
  43a199:	(bad)  
  43a19a:	(bad)  
  43a19b:	jmp    esp
  43a19d:	out    dx,eax
  43a19e:	inc    edx
  43a19f:	add    bh,bh
  43a1a1:	(bad)  
  43a1a2:	(bad)  
  43a1a3:	inc    DWORD PTR [esi]
  43a1a5:	lock inc edx
  43a1a7:	add    bh,bh
  43a1a9:	(bad)  
  43a1aa:	(bad)  
  43a1ab:	call   DWORD PTR [edx]
  43a1ad:	lock inc edx
  43a1af:	add    bh,bh
  43a1b1:	(bad)  
  43a1b2:	(bad)  
  43a1b3:	push   DWORD PTR [eax+esi*8]
  43a1b6:	inc    edx
  43a1b7:	add    bh,bh
  43a1b9:	(bad)  
  43a1ba:	(bad)  
  43a1bb:	inc    DWORD PTR [eax-0x10]
  43a1be:	inc    edx
  43a1bf:	add    bh,bh
  43a1c1:	(bad)  
  43a1c2:	(bad)  
  43a1c3:	jmp    DWORD PTR [edx-0x10]
  43a1c6:	inc    edx
  43a1c7:	add    bh,bh
  43a1c9:	(bad)  
  43a1ca:	(bad)  
  43a1cb:	jmp    FWORD PTR [esi-0x10]
  43a1ce:	inc    edx
  43a1cf:	add    bh,bh
  43a1d1:	(bad)  
  43a1d2:	(bad)  
  43a1d3:	(bad)  
  43a1d4:	jp     0x43a1c6
  43a1d6:	inc    edx
  43a1d7:	add    bh,bh
  43a1d9:	(bad)  
  43a1da:	(bad)  
  43a1db:	inc    DWORD PTR [esi+0x220042f0]
  43a1e1:	add    eax,0x1c1993
  43a1e6:	add    BYTE PTR [eax],al
  43a1e8:	add    BYTE PTR [ecx+0x43],ah
	...
  43a1fe:	add    BYTE PTR [eax],al
  43a200:	add    DWORD PTR [eax],eax
  43a202:	add    BYTE PTR [eax],al
  43a204:	(bad)  
  43a205:	(bad)  
  43a206:	(bad)  
  43a207:	inc    eax
  43a209:	lock inc edx
  43a20b:	add    BYTE PTR [eax],al
  43a20d:	add    BYTE PTR [eax],al
  43a20f:	add    cl,cl
  43a211:	lock inc edx
  43a213:	add    bh,bh
  43a215:	(bad)  
  43a216:	(bad)  
  43a217:	dec    ecx
  43a219:	lock inc edx
  43a21b:	add    BYTE PTR [edx],al
  43a21d:	add    BYTE PTR [eax],al
  43a21f:	add    dl,dl
  43a221:	lock inc edx
  43a223:	add    BYTE PTR [edx],ah
  43a225:	add    eax,0x41993
  43a22a:	add    BYTE PTR [eax],al
  43a22c:	add    al,0xa2
  43a22e:	inc    ebx
	...
  43a243:	add    BYTE PTR [ecx],al
  43a245:	add    BYTE PTR [eax],al
  43a247:	add    bh,bh
  43a249:	(bad)  
  43a24a:	(bad)  
  43a24b:	inc    DWORD PTR [eax]
  43a24d:	add    BYTE PTR [eax],al
  43a24f:	add    bh,bh
  43a251:	(bad)  
  43a252:	(bad)  
  43a253:	inc    DWORD PTR [eax]
  43a255:	add    BYTE PTR [eax],al
  43a257:	add    bh,bh
  43a259:	(bad)  
  43a25a:	(bad)  
  43a25b:	call   DWORD PTR [eax]
  43a25d:	icebp  
  43a25e:	inc    edx
  43a25f:	add    bh,bh
  43a261:	(bad)  
  43a262:	(bad)  
  43a263:	call   FWORD PTR [eax]
  43a265:	icebp  
  43a266:	inc    edx
  43a267:	add    bh,bh
  43a269:	(bad)  
  43a26a:	(bad)  
  43a26b:	jmp    DWORD PTR [ecx]
  43a26d:	icebp  
  43a26e:	inc    edx
  43a26f:	add    bh,bh
  43a271:	(bad)  
  43a272:	(bad)  
  43a273:	jmp    FWORD PTR [ecx]
  43a275:	icebp  
  43a276:	inc    edx
  43a277:	add    BYTE PTR ds:0x32000000,al
  43a27d:	icebp  
  43a27e:	inc    edx
  43a27f:	add    BYTE PTR ds:0x3e000000,al
  43a285:	icebp  
  43a286:	inc    edx
  43a287:	add    BYTE PTR [eax+0x0],al
	...
  43a292:	add    BYTE PTR [eax],al
  43a294:	fcmovu st,st(7)
  43a296:	inc    eax
	...
  43a29f:	add    BYTE PTR [ecx],al
  43a2a1:	add    BYTE PTR [eax],al
  43a2a3:	add    BYTE PTR [ecx],al
  43a2a5:	add    BYTE PTR [eax],al
  43a2a7:	add    BYTE PTR [eax+0x220043a2],cl
  43a2ad:	add    eax,0x81993
  43a2b2:	add    BYTE PTR [eax],al
  43a2b4:	dec    eax
  43a2b5:	mov    ds:0x10043,al
  43a2ba:	add    BYTE PTR [eax],al
  43a2bc:	cwde   
  43a2bd:	mov    ds:0x43,al
	...
  43a2ca:	add    BYTE PTR [eax],al
  43a2cc:	add    DWORD PTR [eax],eax
  43a2ce:	add    BYTE PTR [eax],al
  43a2d0:	(bad)  
  43a2d1:	(bad)  
  43a2d2:	(bad)  
  43a2d3:	inc    DWORD PTR [eax-0xffbd0f]
  43a2d9:	(bad)  
  43a2da:	(bad)  
  43a2db:	dec    DWORD PTR [ecx+0x220042f1]
  43a2e1:	add    eax,0x21993
  43a2e6:	add    BYTE PTR [eax],al
  43a2e8:	shl    BYTE PTR [edx+0x43],1
	...
  43a2fe:	add    BYTE PTR [eax],al
  43a300:	add    DWORD PTR [eax],eax
  43a302:	add    BYTE PTR [eax],al
  43a304:	(bad)  
  43a305:	(bad)  
  43a306:	(bad)  
  43a307:	inc    eax
  43a309:	icebp  
  43a30a:	inc    edx
  43a30b:	add    BYTE PTR [edx],ah
  43a30d:	add    eax,0x11993
  43a312:	add    BYTE PTR [eax],al
  43a314:	add    al,0xa3
  43a316:	inc    ebx
	...
  43a32b:	add    BYTE PTR [ecx],al
  43a32d:	add    BYTE PTR [eax],al
  43a32f:	add    dh,bh
  43a331:	(bad)  
  43a332:	(bad)  
  43a333:	inc    DWORD PTR [eax]
  43a335:	add    BYTE PTR [eax],al
  43a337:	add    ah,dl
  43a339:	(bad)  
  43a33a:	(bad)  
  43a33b:	inc    DWORD PTR [eax]
  43a33d:	add    BYTE PTR [eax],al
  43a33f:	add    dh,bh
  43a341:	(bad)  
  43a342:	(bad)  
  43a343:	inc    DWORD PTR [edx-0x61ffbd5f]
  43a349:	mov    eax,ds:0xa4700042
  43a34e:	add    eax,DWORD PTR [eax]
	...
  43a358:	mov    dh,0xaa
  43a35a:	add    eax,DWORD PTR [eax]
  43a35c:	dec    eax
  43a35d:	add    BYTE PTR [ebx],al
  43a35f:	add    BYTE PTR [eax],al
  43a361:	test   al,0x3
	...
  43a36b:	add    BYTE PTR [eax-0x27fffc54],al
  43a371:	add    eax,DWORD PTR [ebx]
  43a373:	add    al,dh
  43a375:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a376:	add    eax,DWORD PTR [eax]
	...
  43a380:	enter  0x3ac,0x0
  43a384:	enter  0x303,0x0
  43a388:	sub    BYTE PTR [eax+0x3],0x0
  43a38f:	add    BYTE PTR [eax],al
  43a391:	add    BYTE PTR [eax],al
  43a393:	add    dh,dh
  43a395:	lods   al,BYTE PTR ds:[esi]
  43a396:	add    eax,DWORD PTR [eax]
  43a398:	pop    eax
  43a399:	add    al,0x3
  43a39b:	add    BYTE PTR [eax],bh
  43a39d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a39e:	add    eax,DWORD PTR [eax]
	...
  43a3a8:	sub    cl,bl
  43a3aa:	add    eax,DWORD PTR [eax]
  43a3ac:	adc    BYTE PTR [ecx],al
  43a3ae:	add    eax,DWORD PTR [eax]
  43a3b0:	sub    BYTE PTR [ebx+eax*1+0x0],ah
  43a3b7:	add    BYTE PTR [eax],al
  43a3b9:	add    BYTE PTR [eax],al
  43a3bb:	add    BYTE PTR [edx],dh
  43a3bd:	into   
  43a3be:	add    eax,DWORD PTR [eax]
  43a3c0:	add    BYTE PTR [eax],al
  43a3c2:	add    eax,DWORD PTR [eax]
  43a3c4:	loopne 0x43a36d
  43a3c6:	add    eax,DWORD PTR [eax]
	...
  43a3d0:	inc    eax
  43a3d1:	into   
  43a3d2:	add    eax,DWORD PTR [eax]
  43a3d4:	mov    eax,0xf4000303
  43a3d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43a3da:	add    eax,DWORD PTR [eax]
	...
  43a3e4:	dec    eax
  43a3e5:	rol    BYTE PTR [ebx],1
  43a3e7:	add    ah,cl
  43a3e9:	add    al,BYTE PTR [ebx]
  43a3eb:	add    BYTE PTR [eax-0x5c],ch
  43a3ee:	add    eax,DWORD PTR [eax]
	...
  43a3f8:	sub    dl,dl
  43a3fa:	add    eax,DWORD PTR [eax]
  43a3fc:	inc    eax
  43a3fd:	add    BYTE PTR [ebx],al
  43a3ff:	add    BYTE PTR [eax-0x58],ch
  43a402:	add    eax,DWORD PTR [eax]
	...
  43a40c:	cmp    al,0xd3
  43a40e:	add    eax,DWORD PTR [eax]
  43a410:	inc    eax
  43a411:	add    al,0x3
	...
  43a427:	add    BYTE PTR [eax-0x35],ah
  43a42a:	add    eax,DWORD PTR [eax]
  43a42c:	xchg   edx,eax
  43a42d:	retf   
  43a42e:	add    eax,DWORD PTR [eax]
  43a430:	mov    esi,0x60003cb
  43a435:	int3   
  43a436:	add    eax,DWORD PTR [eax]
  43a438:	ds int3 
  43a43a:	add    eax,DWORD PTR [eax]
  43a43c:	outs   dx,BYTE PTR ds:[esi]
  43a43d:	int3   
  43a43e:	add    eax,DWORD PTR [eax]
  43a440:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a441:	int3   
  43a442:	add    eax,DWORD PTR [eax]
  43a444:	retf   0x3cc
  43a447:	add    al,dh
  43a449:	int3   
  43a44a:	add    eax,DWORD PTR [eax]
  43a44c:	and    cl,ch
  43a44e:	add    eax,DWORD PTR [eax]
  43a450:	push   eax
  43a451:	int    0x3
  43a453:	add    BYTE PTR [ebp+ecx*8+0x3],bh
  43a457:	add    BYTE PTR [edx-0x37fffc33],ah
  43a45d:	int    0x3
  43a45f:	add    BYTE PTR [esi+ecx*8],al
  43a462:	add    eax,DWORD PTR [eax]
  43a464:	add    BYTE PTR [eax],al
  43a466:	add    BYTE PTR [eax],al
  43a468:	adc    al,0xd2
  43a46a:	add    eax,DWORD PTR [eax]
  43a46c:	add    BYTE PTR [eax],al
  43a46e:	add    BYTE PTR [eax],al
  43a470:	(bad)  
  43a471:	test   eax,0xaa140003
  43a476:	add    eax,DWORD PTR [eax]
  43a478:	and    al,0xaa
  43a47a:	add    eax,DWORD PTR [eax]
  43a47c:	sub    al,0xaa
  43a47e:	add    eax,DWORD PTR [eax]
  43a480:	cmp    ch,BYTE PTR [edx-0x55b7fffd]
  43a486:	add    eax,DWORD PTR [eax]
  43a488:	push   esp
  43a489:	stos   BYTE PTR es:[edi],al
  43a48a:	add    eax,DWORD PTR [eax]
  43a48c:	jo     0x43a438
  43a48e:	add    eax,DWORD PTR [eax]
  43a490:	sub    BYTE PTR [edx-0x556bfffd],0x3
  43a497:	add    BYTE PTR [edx-0x17fffc56],ah
  43a49d:	test   eax,0xd34e0003
  43a4a2:	add    eax,DWORD PTR [eax]
  43a4a4:	rol    DWORD PTR fs:[ebx],cl
  43a4a7:	add    BYTE PTR [edx-0x6bfffc2d],al
  43a4ad:	rol    DWORD PTR [ebx],cl
  43a4af:	add    BYTE PTR [eax-0x31fffc2d],dh
  43a4b5:	rol    DWORD PTR [ebx],cl
  43a4b7:	add    dh,cl
  43a4b9:	test   eax,0xd3fc0003
  43a4be:	add    eax,DWORD PTR [eax]
  43a4c0:	or     al,0xd4
  43a4c2:	add    eax,DWORD PTR [eax]
  43a4c4:	and    ah,dl
  43a4c6:	add    eax,DWORD PTR [eax]
  43a4c8:	xor    dl,ah
  43a4ca:	add    eax,DWORD PTR [eax]
  43a4cc:	ds aam 0x3
  43a4cf:	add    BYTE PTR [esi-0x2c],cl
  43a4d2:	add    eax,DWORD PTR [eax]
  43a4d4:	pusha  
  43a4d5:	aam    0x3
  43a4d7:	add    BYTE PTR [esi-0x2c],dh
  43a4da:	add    eax,DWORD PTR [eax]
  43a4dc:	mov    ah,0xa9
  43a4de:	add    eax,DWORD PTR [eax]
  43a4e0:	mov    al,ds:0x8a0003a9
  43a4e5:	test   eax,0xa97c0003
  43a4ea:	add    eax,DWORD PTR [eax]
  43a4ec:	push   0xc60003a9
  43a4f1:	aam    0x3
  43a4f3:	add    BYTE PTR [esp+edx*8-0x2b5ffffd],dh
  43a4fa:	add    eax,DWORD PTR [eax]
  43a4fc:	mov    esp,ss
  43a4fe:	add    eax,DWORD PTR [eax]
  43a500:	pop    eax
  43a501:	test   eax,0xa9460003
  43a506:	add    eax,DWORD PTR [eax]
  43a508:	ss test eax,0xa9280003
  43a50e:	add    eax,DWORD PTR [eax]
  43a510:	adc    ch,BYTE PTR [ecx-0x5703fffd]
  43a516:	add    eax,DWORD PTR [eax]
  43a518:	call   0xda43a8c5
  43a51d:	test   al,0x3
  43a51f:	add    dh,al
  43a521:	test   al,0x3
  43a523:	add    BYTE PTR [edx-0x5dfffc58],bh
  43a529:	test   al,0x3
  43a52b:	add    dl,ah
  43a52d:	rol    DWORD PTR [ebx],cl
  43a52f:	add    BYTE PTR [eax+ebp*4+0x3],cl
  43a536:	add    BYTE PTR [eax],al
  43a538:	dec    esi
  43a539:	scas   eax,DWORD PTR es:[edi]
  43a53a:	add    eax,DWORD PTR [eax]
  43a53c:	test   al,0xaf
  43a53e:	add    eax,DWORD PTR [eax]
  43a540:	aam    0xaf
  43a542:	add    eax,DWORD PTR [eax]
  43a544:	es mov al,0x3
  43a547:	add    BYTE PTR [edx-0x50],dh
  43a54a:	add    eax,DWORD PTR [eax]
  43a54c:	div    BYTE PTR [eax-0x4e77fffd]
  43a552:	add    eax,DWORD PTR [eax]
  43a554:	sbb    al,0xb2
  43a556:	add    eax,DWORD PTR [eax]
  43a558:	jo     0x43a50c
  43a55a:	add    eax,DWORD PTR [eax]
  43a55c:	push   ss
  43a55d:	mov    bl,0x3
  43a55f:	add    BYTE PTR [esi-0x4d],al
  43a562:	add    eax,DWORD PTR [eax]
  43a564:	jo     0x43a519
  43a566:	add    eax,DWORD PTR [eax]
  43a568:	dec    esp
  43a569:	mov    ah,0x3
  43a56b:	add    BYTE PTR [edx-0x5fffc4c],ah
  43a571:	mov    ah,0x3
  43a573:	add    BYTE PTR [eax-0x37fffc4b],cl
  43a579:	mov    ch,0x3
  43a57b:	add    BYTE PTR [eax],cl
  43a57d:	mov    dh,0x3
  43a57f:	add    BYTE PTR [esi+esi*4+0x3],cl
  43a583:	add    BYTE PTR [edx-0x33fffc4a],cl
  43a589:	mov    dh,0x3
  43a58b:	add    dh,ch
  43a58d:	mov    dh,0x3
  43a58f:	add    BYTE PTR [eax-0x49],dh
  43a592:	add    eax,DWORD PTR [eax]
  43a594:	ret    0x3b7
  43a597:	add    BYTE PTR [eax+edi*4],dl
  43a59a:	add    eax,DWORD PTR [eax]
  43a59c:	xchg   esp,eax
  43a59d:	mov    eax,0xb8e80003
  43a5a2:	add    eax,DWORD PTR [eax]
  43a5a4:	cmp    bh,BYTE PTR [ecx-0x466dfffd]
  43a5aa:	add    eax,DWORD PTR [eax]
  43a5ac:	stos   BYTE PTR es:[edi],al
  43a5ad:	mov    ecx,0xb9c40003
  43a5b2:	add    eax,DWORD PTR [eax]
  43a5b4:	fidivr WORD PTR [ecx-0x4609fffd]
  43a5ba:	add    eax,DWORD PTR [eax]
  43a5bc:	sbb    bh,BYTE PTR [edx-0x45b9fffd]
  43a5c2:	add    eax,DWORD PTR [eax]
  43a5c4:	bound  edi,QWORD PTR [edx-0x4515fffd]
  43a5ca:	add    eax,DWORD PTR [eax]
  43a5cc:	outs   dx,BYTE PTR ds:[esi]
  43a5cd:	mov    ebx,0xbbf60003
  43a5d2:	add    eax,DWORD PTR [eax]
  43a5d4:	push   ss
  43a5d5:	mov    esp,0xbc380003
  43a5da:	add    eax,DWORD PTR [eax]
  43a5dc:	jbe    0x43a59a
  43a5de:	add    eax,DWORD PTR [eax]
  43a5e0:	sahf   
  43a5e1:	mov    esp,0xbd000003
  43a5e6:	add    eax,DWORD PTR [eax]
  43a5e8:	sub    al,0xbd
  43a5ea:	add    eax,DWORD PTR [eax]
  43a5ec:	cmp    BYTE PTR [ebp-0x41fdfffd],0x3
  43a5f3:	add    BYTE PTR [edx-0x42],dl
  43a5f6:	add    eax,DWORD PTR [eax]
  43a5f8:	jle    0x43a5b8
  43a5fa:	add    eax,DWORD PTR [eax]
  43a5fc:	into   
  43a5fd:	mov    esi,0xbf240003
  43a602:	add    eax,DWORD PTR [eax]
  43a604:	dec    esi
  43a605:	mov    edi,0xbfa00003
  43a60a:	add    eax,DWORD PTR [eax]
  43a60c:	in     al,dx
  43a60d:	mov    edi,0xc03e0003
  43a612:	add    eax,DWORD PTR [eax]
  43a614:	mov    esi,0x4a0003c0
  43a619:	rol    DWORD PTR [ebx],0x0
  43a61c:	fadd   st,st(1)
  43a61e:	add    eax,DWORD PTR [eax]
  43a620:	sub    dl,al
  43a622:	add    eax,DWORD PTR [eax]
  43a624:	test   al,0xc2
  43a626:	add    eax,DWORD PTR [eax]
  43a628:	cmp    al,bl
  43a62a:	add    eax,DWORD PTR [eax]
  43a62c:	mov    bl,al
  43a62e:	add    eax,DWORD PTR [eax]
  43a630:	and    ah,al
  43a632:	add    eax,DWORD PTR [eax]
  43a634:	jb     0x43a5fa
  43a636:	add    eax,DWORD PTR [eax]
  43a638:	push   es
  43a639:	lds    eax,FWORD PTR [ebx]
  43a63b:	add    BYTE PTR [ebp+eax*8-0x3a03fffd],ah
  43a642:	add    eax,DWORD PTR [eax]
  43a644:	push   esp
  43a645:	mov    BYTE PTR [ebx],0x0
  43a648:	scas   al,BYTE PTR es:[edi]
  43a649:	mov    BYTE PTR [ebx],0x0
  43a64c:	or     al,bh
  43a64e:	add    eax,DWORD PTR [eax]
  43a650:	pop    esi
  43a651:	mov    DWORD PTR [ebx],0x3c7b200
  43a657:	add    BYTE PTR [eax],cl
  43a659:	enter  0x3,0xa2
  43a65d:	enter  0x3,0xfa
  43a661:	enter  0x3,0x4e
  43a665:	leave  
  43a666:	add    eax,DWORD PTR [eax]
  43a668:	hlt    
  43a669:	leave  
  43a66a:	add    eax,DWORD PTR [eax]
  43a66c:	xchg   edx,eax
  43a66d:	retf   0x3
  43a670:	ss retf 
  43a672:	add    eax,DWORD PTR [eax]
  43a674:	and    BYTE PTR [edi-0x5133fffd],ch
  43a67a:	add    eax,DWORD PTR [eax]
  43a67c:	sub    BYTE PTR [esi-0x51cffffd],0x3
  43a683:	add    dh,ah
  43a685:	lods   eax,DWORD PTR ds:[esi]
  43a686:	add    eax,DWORD PTR [eax]
  43a688:	pushf  
  43a689:	lods   eax,DWORD PTR ds:[esi]
  43a68a:	add    eax,DWORD PTR [eax]
  43a68c:	push   eax
  43a68d:	lods   eax,DWORD PTR ds:[esi]
  43a68e:	add    eax,DWORD PTR [eax]
  43a690:	add    BYTE PTR [ebp-0x2b27fffd],ch
  43a696:	add    eax,DWORD PTR [eax]
  43a698:	sub    al,0xd5
  43a69a:	add    eax,DWORD PTR [eax]
  43a69c:	int3   
  43a69d:	aad    0x3
  43a69f:	add    BYTE PTR [esi+edx*8],al
  43a6a2:	add    eax,DWORD PTR [eax]
  43a6a4:	ds (bad) 
  43a6a6:	add    eax,DWORD PTR [eax]
  43a6a8:	call   0x3d6:0xea0003d6
  43a6af:	add    BYTE PTR [edi+edx*8],cl
  43a6b2:	add    eax,DWORD PTR [eax]
  43a6b4:	cmp    al,0xd7
  43a6b6:	add    eax,DWORD PTR [eax]
  43a6b8:	pop    esp
  43a6b9:	xlat   BYTE PTR ds:[ebx]
  43a6ba:	add    eax,DWORD PTR [eax]
  43a6bc:	mov    ah,0xd7
  43a6be:	add    eax,DWORD PTR [eax]
  43a6c0:	adc    bl,al
  43a6c2:	add    eax,DWORD PTR [eax]
  43a6c4:	push   edx
  43a6c5:	fadd   DWORD PTR [ebx]
  43a6c7:	add    BYTE PTR [edx-0x4ffffc28],dl
  43a6cd:	fadd   DWORD PTR [ebx]
  43a6cf:	add    al,bl
  43a6d1:	fadd   DWORD PTR [ebx]
  43a6d3:	add    BYTE PTR [eax],al
  43a6d5:	fld    DWORD PTR [ebx]
  43a6d7:	add    BYTE PTR [eax],ah
  43a6d9:	fld    DWORD PTR [ebx]
  43a6db:	add    BYTE PTR [ecx+ebx*8+0x3],dl
  43a6df:	add    BYTE PTR [ecx+ebx*8+0x3],bh
  43a6e3:	add    dh,cl
  43a6e5:	fld    DWORD PTR [ebx]
  43a6e7:	add    BYTE PTR [edx],ah
  43a6e9:	fiadd  DWORD PTR [ebx]
  43a6eb:	add    BYTE PTR [eax],dh
  43a6ed:	mov    bh,0x3
  43a6ef:	add    BYTE PTR [eax],al
  43a6f1:	add    BYTE PTR [eax],al
  43a6f3:	add    BYTE PTR [eax-0x39fffc31],bh
  43a6f9:	iret   
  43a6fa:	add    eax,DWORD PTR [eax]
  43a6fc:	ror    bh,cl
  43a6fe:	add    eax,DWORD PTR [eax]
  43a700:	lock iret 
  43a702:	add    eax,DWORD PTR [eax]
  43a704:	dec    bh
  43a706:	add    eax,DWORD PTR [eax]
  43a708:	push   cs
  43a709:	rol    BYTE PTR [ebx],1
  43a70b:	add    BYTE PTR [eax+edx*8],bl
  43a70e:	add    eax,DWORD PTR [eax]
  43a710:	sub    al,dl
  43a712:	add    eax,DWORD PTR [eax]
  43a714:	xor    al,0xd0
  43a716:	add    eax,DWORD PTR [eax]
  43a718:	inc    eax
  43a719:	rol    BYTE PTR [ebx],1
  43a71b:	add    BYTE PTR [eax+edx*8+0x3],dl
  43a71f:	add    BYTE PTR [esi-0x30],bl
  43a722:	add    eax,DWORD PTR [eax]
  43a724:	ins    BYTE PTR es:[edi],dx
  43a725:	rol    BYTE PTR [ebx],1
  43a727:	add    BYTE PTR [esi-0x30],bh
  43a72a:	add    eax,DWORD PTR [eax]
  43a72c:	xchg   al,dl
  43a72e:	add    eax,DWORD PTR [eax]
  43a730:	nop
  43a731:	rol    BYTE PTR [ebx],1
  43a733:	add    BYTE PTR [edx-0x4ffffc30],ah
  43a739:	rol    BYTE PTR [ebx],1
  43a73b:	add    dl,al
  43a73d:	rol    BYTE PTR [ebx],1
  43a73f:	add    ah,cl
  43a741:	rol    BYTE PTR [ebx],1
  43a743:	add    ah,dl
  43a745:	rol    BYTE PTR [ebx],1
  43a747:	add    dl,ah
  43a749:	rol    BYTE PTR [ebx],1
  43a74b:	add    dl,ch
  43a74d:	rol    BYTE PTR [ebx],1
  43a74f:	add    ah,dh
  43a751:	rol    BYTE PTR [ebx],1
  43a753:	add    BYTE PTR [eax],al
  43a755:	rol    DWORD PTR [ebx],1
  43a757:	add    BYTE PTR [esi],cl
  43a759:	rol    DWORD PTR [ebx],1
  43a75b:	add    BYTE PTR [ecx+edx*8],ah
  43a75e:	add    eax,DWORD PTR [eax]
  43a760:	cmp    cl,dl
  43a762:	add    eax,DWORD PTR [eax]
  43a764:	dec    eax
  43a765:	rol    DWORD PTR [ebx],1
  43a767:	add    BYTE PTR [eax-0x2f],bl
  43a76a:	add    eax,DWORD PTR [eax]
  43a76c:	rol    WORD PTR [ebx],1
  43a76f:	add    BYTE PTR [eax-0x2f],bh
  43a772:	add    eax,DWORD PTR [eax]
  43a774:	mov    ss,ecx
  43a776:	add    eax,DWORD PTR [eax]
  43a778:	mov    ds:0xd80003d1,al
  43a77d:	rol    DWORD PTR [ebx],1
  43a77f:	add    dl,dh
  43a781:	rol    DWORD PTR [ebx],1
  43a783:	add    BYTE PTR [edx+edx*8],al
  43a786:	add    eax,DWORD PTR [eax]
  43a788:	call   0x3cf:0x800003cf
  43a78f:	add    BYTE PTR [edx+ebx*8-0x2567fffd],ah
  43a796:	add    eax,DWORD PTR [eax]
  43a798:	sbb    dl,0x3
  43a79b:	add    BYTE PTR [edx+ebx*8+0x3],ch
  43a79f:	add    BYTE PTR [edx-0x32],dl
  43a7a2:	add    eax,DWORD PTR [eax]
  43a7a4:	pop    esp
  43a7a5:	into   
  43a7a6:	add    eax,DWORD PTR [eax]
  43a7a8:	pusha  
  43a7a9:	iret   
  43a7aa:	add    eax,DWORD PTR [eax]
  43a7ac:	push   esp
  43a7ad:	iret   
  43a7ae:	add    eax,DWORD PTR [eax]
  43a7b0:	dec    edx
  43a7b1:	iret   
  43a7b2:	add    eax,DWORD PTR [eax]
  43a7b4:	ds iret 
  43a7b6:	add    eax,DWORD PTR [eax]
  43a7b8:	and    cl,bh
  43a7ba:	add    eax,DWORD PTR [eax]
  43a7bc:	push   ss
  43a7bd:	iret   
  43a7be:	add    eax,DWORD PTR [eax]
  43a7c0:	test   dh,0x3
  43a7c3:	add    dh,dl
  43a7c5:	into   
  43a7c6:	add    eax,DWORD PTR [eax]
  43a7c8:	mov    ah,0xce
  43a7ca:	add    eax,DWORD PTR [eax]
  43a7cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a7cd:	into   
  43a7ce:	add    eax,DWORD PTR [eax]
  43a7d0:	mov    dh,cl
  43a7d2:	add    eax,DWORD PTR [eax]
  43a7d4:	ins    BYTE PTR es:[edi],dx
  43a7d5:	into   
  43a7d6:	add    eax,DWORD PTR [eax]
  43a7d8:	scas   al,BYTE PTR es:[edi]
  43a7d9:	fiadd  DWORD PTR [ebx]
  43a7db:	add    BYTE PTR [eax],al
  43a7dd:	add    BYTE PTR [eax],al
  43a7df:	add    BYTE PTR [ecx],al
  43a7e1:	add    BYTE PTR [eax],al
  43a7e3:	add    BYTE PTR [ebx],0x0
  43a7e6:	add    BYTE PTR [eax-0x7ffffffa],al
  43a7ec:	add    BYTE PTR [eax],al
  43a7ee:	add    BYTE PTR [eax],al
  43a7f0:	mov    ds:0x8c0003ac,al
  43a7f5:	lods   al,BYTE PTR ds:[esi]
  43a7f6:	add    eax,DWORD PTR [eax]
  43a7f8:	mov    ah,0xac
  43a7fa:	add    eax,DWORD PTR [eax]
  43a7fc:	add    BYTE PTR [eax],al
  43a7fe:	add    BYTE PTR [eax],al
  43a800:	in     al,0xaa
  43a802:	add    eax,DWORD PTR [eax]
  43a804:	les    ebp,FWORD PTR [edx-0x5529fffd]
  43a80a:	add    eax,DWORD PTR [eax]
  43a80c:	clc    
  43a80d:	stos   BYTE PTR es:[edi],al
  43a80e:	add    eax,DWORD PTR [eax]
  43a810:	jb     0x43a7be
  43a812:	add    eax,DWORD PTR [eax]
  43a814:	pop    edx
  43a815:	lods   al,BYTE PTR ds:[esi]
  43a816:	add    eax,DWORD PTR [eax]
  43a818:	dec    eax
  43a819:	lods   al,BYTE PTR ds:[esi]
  43a81a:	add    eax,DWORD PTR [eax]
  43a81c:	xor    al,0xac
  43a81e:	add    eax,DWORD PTR [eax]
  43a820:	and    al,0xac
  43a822:	add    eax,DWORD PTR [eax]
  43a824:	adc    BYTE PTR [ebx+eax*1+0x3abfa00],ch
  43a82b:	add    dh,ah
  43a82d:	stos   DWORD PTR es:[edi],eax
  43a82e:	add    eax,DWORD PTR [eax]
  43a830:	shr    BYTE PTR [ebx-0x544bfffd],1
  43a836:	add    eax,DWORD PTR [eax]
  43a838:	test   al,0xab
  43a83a:	add    eax,DWORD PTR [eax]
  43a83c:	call   0x3ab:0x880003ab
  43a843:	add    BYTE PTR [esi-0x55],dh
  43a846:	add    eax,DWORD PTR [eax]
  43a848:	stos   WORD PTR es:[edi],ax
  43a84a:	add    eax,DWORD PTR [eax]
  43a84c:	push   esi
  43a84d:	stos   DWORD PTR es:[edi],eax
  43a84e:	add    eax,DWORD PTR [eax]
  43a850:	inc    esi
  43a851:	stos   DWORD PTR es:[edi],eax
  43a852:	add    eax,DWORD PTR [eax]
  43a854:	cmp    ch,BYTE PTR [ebx-0x54d5fffd]
  43a85a:	add    eax,DWORD PTR [eax]
  43a85c:	sbb    BYTE PTR [ebx-0x54f3fffd],ch
  43a862:	add    eax,DWORD PTR [eax]
  43a864:	add    BYTE PTR [eax],al
  43a866:	add    BYTE PTR [eax],al
  43a868:	(bad)  
  43a869:	rol    BYTE PTR [ebx],cl
  43a86b:	add    BYTE PTR [eax],bh
  43a86d:	rol    BYTE PTR [ebx],cl
  43a86f:	add    BYTE PTR [edx-0x2e],ch
  43a872:	add    eax,DWORD PTR [eax]
  43a874:	(bad)  
  43a875:	rol    BYTE PTR [ebx],cl
  43a877:	add    BYTE PTR [edx+0x3d2],bl
  43a87d:	add    BYTE PTR [eax],al
  43a87f:	add    ah,ah
  43a881:	lods   al,BYTE PTR ds:[esi]
  43a882:	add    eax,DWORD PTR [eax]
  43a884:	aam    0xac
  43a886:	add    eax,DWORD PTR [eax]
  43a888:	add    BYTE PTR [eax],al
  43a88a:	add    BYTE PTR [eax],al
  43a88c:	jge    0x43a890
  43a88e:	inc    edi
  43a88f:	gs je  0x43a8df
  43a892:	outs   dx,DWORD PTR ds:[esi]
  43a893:	fs jne 0x43a902
  43a896:	gs inc esi
  43a898:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
  43a8a0:	add    BYTE PTR [eax],al
  43a8a2:	out    dx,eax
  43a8a3:	add    al,0x53
  43a8a5:	gs je  0x43a8eb
  43a8a8:	jne    0x43a91c
  43a8aa:	jb     0x43a911
  43a8ac:	outs   dx,BYTE PTR ds:[esi]
  43a8ad:	je     0x43a8f3
  43a8af:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  43a8b6:	jns    0x43a90f
  43a8b8:	add    BYTE PTR [eax],al
  43a8ba:	int    0x3
  43a8bc:	dec    esp
  43a8bd:	outs   dx,DWORD PTR ds:[esi]
  43a8be:	arpl   WORD PTR [ecx+0x6c],sp
  43a8c1:	inc    esi
  43a8c2:	jb     0x43a929
  43a8c4:	gs add dl,dh
  43a8c7:	add    BYTE PTR [ebx+0x72],al
  43a8ca:	gs popa 
  43a8cc:	je     0x43a933
  43a8ce:	push   ebx
  43a8cf:	gs ins DWORD PTR es:[edi],dx
  43a8d1:	popa   
  43a8d2:	jo     0x43a93c
  43a8d4:	outs   dx,DWORD PTR ds:[esi]
  43a8d5:	jb     0x43a93c
  43a8d7:	inc    ecx
  43a8d8:	add    BYTE PTR [eax],al
  43a8da:	mov    es,WORD PTR [eax]
  43a8dc:	inc    ebx
  43a8dd:	ins    BYTE PTR es:[edi],dx
  43a8de:	outs   dx,DWORD PTR ds:[esi]
  43a8df:	jae    0x43a946
  43a8e1:	dec    eax
  43a8e2:	popa   
  43a8e3:	outs   dx,BYTE PTR ds:[esi]
  43a8e4:	fs ins BYTE PTR es:[edi],dx
  43a8e6:	add    BYTE PTR gs:[ebx],ah
  43a8e9:	add    al,BYTE PTR [edi+0x65]
  43a8ec:	je     0x43a931
  43a8ee:	jne    0x43a962
  43a8f0:	jb     0x43a957
  43a8f2:	outs   dx,BYTE PTR ds:[esi]
  43a8f3:	je     0x43a945
  43a8f5:	jb     0x43a966
  43a8f7:	arpl   WORD PTR [ebp+0x73],sp
  43a8fa:	jae    0x43a8fc
  43a8fc:	and    al,0x2
  43a8fe:	inc    edi
  43a8ff:	gs je  0x43a945
  43a902:	jne    0x43a976
  43a904:	jb     0x43a96b
  43a906:	outs   dx,BYTE PTR ds:[esi]
  43a907:	je     0x43a959
  43a909:	jb     0x43a97a
  43a90b:	arpl   WORD PTR [ebp+0x73],sp
  43a90e:	jae    0x43a959
  43a910:	add    BYTE PTR fs:[eax],ch
  43a913:	add    al,BYTE PTR [edi+0x65]
  43a916:	je     0x43a95b
  43a918:	jne    0x43a98c
  43a91a:	jb     0x43a981
  43a91c:	outs   dx,BYTE PTR ds:[esi]
  43a91d:	je     0x43a973
  43a91f:	push   0x64616572
  43a924:	dec    ecx
  43a925:	add    BYTE PTR fs:[eax],al
  43a928:	(bad)  
  43a929:	add    BYTE PTR [ebx+0x72],al
  43a92c:	gs popa 
  43a92e:	je     0x43a995
  43a930:	inc    esi
  43a931:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x47026b00
  43a939:	gs je  0x43a988
  43a93c:	outs   dx,DWORD PTR ds:[esi]
  43a93d:	arpl   WORD PTR [ecx+0x6c],sp
  43a940:	push   esp
  43a941:	imul   ebp,DWORD PTR [ebp+0x65],0x2b50000
  43a948:	inc    edi
  43a949:	gs je  0x43a99c
  43a94c:	jb     0x43a9bd
  43a94e:	arpl   WORD PTR [ecx+0x64],ax
  43a951:	fs jb  0x43a9b9
  43a954:	jae    0x43a9c9
  43a956:	add    BYTE PTR [eax],al
  43a958:	ret    
  43a959:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  43a95d:	fs dec esp
  43a95f:	imul   esp,DWORD PTR [edx+0x72],0x57797261
  43a966:	add    BYTE PTR [eax],al
  43a968:	add    DWORD PTR [edx],0x4d746547
  43a96e:	outs   dx,DWORD PTR ds:[esi]
  43a96f:	fs jne 0x43a9de
  43a972:	gs dec eax
  43a974:	popa   
  43a975:	outs   dx,BYTE PTR ds:[esi]
  43a976:	fs ins BYTE PTR es:[edi],dx
  43a978:	gs push edi
  43a97a:	add    BYTE PTR [eax],al
  43a97c:	mov    eax,0x65724601
  43a981:	gs dec esp
  43a983:	imul   esp,DWORD PTR [edx+0x72],0x797261
  43a98a:	adc    al,0x4
  43a98c:	dec    edi
  43a98d:	jne    0x43aa03
  43a98f:	jo     0x43aa06
  43a991:	je     0x43a9d7
  43a993:	bound  esi,QWORD PTR gs:[ebp+0x67]
  43a997:	push   ebx
  43a998:	je     0x43aa0c
  43a99a:	imul   ebp,DWORD PTR [esi+0x67],0x9b000041
  43a9a1:	add    al,0x52
  43a9a3:	gs ins BYTE PTR es:[edi],dx
  43a9a5:	gs popa 
  43a9a7:	jae    0x43aa0e
  43a9a9:	push   ebx
  43a9aa:	gs ins DWORD PTR es:[edi],dx
  43a9ac:	popa   
  43a9ad:	jo     0x43aa17
  43a9af:	outs   dx,DWORD PTR ds:[esi]
  43a9b0:	jb     0x43aa17
  43a9b2:	add    BYTE PTR [eax],al
  43a9b4:	hlt    
  43a9b5:	add    al,BYTE PTR [edi+0x65]
  43a9b8:	je     0x43aa0d
  43a9ba:	jns    0x43aa2f
  43a9bc:	je     0x43aa23
  43a9be:	ins    DWORD PTR es:[edi],dx
  43a9bf:	push   esp
  43a9c0:	imul   ebp,DWORD PTR [ebp+0x65],0x69467341
  43a9c7:	ins    BYTE PTR es:[edi],dx
  43a9c8:	gs push esp
  43a9ca:	imul   ebp,DWORD PTR [ebp+0x65],0x5705b900
  43a9d1:	popa   
  43a9d2:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6c754d72
  43a9da:	je     0x43aa45
  43a9dc:	jo     0x43aa4a
  43a9de:	gs dec edi
  43a9e0:	bound  ebp,QWORD PTR [edx+0x65]
  43a9e3:	arpl   WORD PTR [ebx+esi*2+0x0],si
  43a9e7:	add    ch,bl
  43a9e9:	add    eax,0x65646957
  43a9ee:	inc    ebx
  43a9ef:	push   0x6f547261
  43a9f4:	dec    ebp
  43a9f5:	jne    0x43aa63
  43a9f7:	je     0x43aa62
  43a9f9:	inc    edx
  43a9fa:	jns    0x43aa70
  43a9fc:	gs add ah,ch
  43a9ff:	add    ecx,DWORD PTR [ebp+0x75]
  43aa02:	ins    BYTE PTR es:[edi],dx
  43aa03:	je     0x43aa6e
  43aa05:	inc    edx
  43aa06:	jns    0x43aa7c
  43aa08:	gs push esp
  43aa0a:	outs   dx,DWORD PTR ds:[esi]
  43aa0b:	push   edi
  43aa0c:	imul   esp,DWORD PTR [ebp+eiz*2+0x43],0x726168
  43aa14:	push   0x2
  43aa16:	inc    edi
  43aa17:	gs je  0x43aa66
  43aa1a:	popa   
  43aa1b:	jae    0x43aa91
  43aa1d:	inc    ebp
  43aa1e:	jb     0x43aa92
  43aa20:	outs   dx,DWORD PTR ds:[esi]
  43aa21:	jb     0x43aa23
  43aa23:	add    BYTE PTR [edi+0x5],bl
  43aa26:	push   ebx
  43aa27:	ins    BYTE PTR es:[edi],dx
  43aa28:	gs gs jo 0x43aa2c
  43aa2c:	and    eax,DWORD PTR [ecx]
  43aa2e:	inc    esp
  43aa2f:	gs ins BYTE PTR es:[edi],dx
  43aa31:	gs je  0x43aa99
  43aa34:	inc    esi
  43aa35:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x4d03e500
  43aa3d:	outs   dx,DWORD PTR ds:[esi]
  43aa3e:	jbe    0x43aaa5
  43aa40:	inc    esi
  43aa41:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0xb9005778
  43aa49:	add    BYTE PTR [ebx+0x6f],al
  43aa4c:	jo     0x43aac7
  43aa4e:	inc    esi
  43aa4f:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x43010a00
  43aa57:	jb     0x43aabe
  43aa59:	popa   
  43aa5a:	je     0x43aac1
  43aa5c:	push   esp
  43aa5d:	outs   dx,DWORD PTR ds:[esi]
  43aa5e:	outs   dx,DWORD PTR ds:[esi]
  43aa5f:	ins    BYTE PTR es:[edi],dx
  43aa60:	push   0x33706c65
  43aa65:	xor    dl,BYTE PTR [ebx+0x6e]
  43aa68:	popa   
  43aa69:	jo     0x43aade
  43aa6b:	push   0x746f
  43aa70:	sub    BYTE PTR [eax+edx*2],al
  43aa73:	jb     0x43aae4
  43aa75:	arpl   WORD PTR [ebp+0x73],sp
  43aa78:	jae    0x43aaad
  43aa7a:	xor    al,BYTE PTR [esi+0x69]
  43aa7d:	jb     0x43aaf2
  43aa7f:	je     0x43aad8
  43aa81:	add    BYTE PTR [edx],ch
  43aa83:	add    al,0x50
  43aa85:	jb     0x43aaf6
  43aa87:	arpl   WORD PTR [ebp+0x73],sp
  43aa8a:	jae    0x43aabf
  43aa8c:	xor    cl,BYTE PTR [esi+0x65]
  43aa8f:	js     0x43ab05
  43aa91:	push   edi
  43aa92:	add    BYTE PTR [eax],al
  43aa94:	or     BYTE PTR [edi+ecx*2],al
  43aa97:	jo     0x43aafe
  43aa99:	outs   dx,BYTE PTR ds:[esi]
  43aa9a:	push   eax
  43aa9b:	jb     0x43ab0c
  43aa9d:	arpl   WORD PTR [ebp+0x73],sp
  43aaa0:	jae    0x43aaa2
  43aaa2:	outs   dx,DWORD PTR ds:[esi]
  43aaa3:	add    eax,0x6d726554
  43aaa8:	imul   ebp,DWORD PTR [esi+0x61],0x72506574
  43aaaf:	outs   dx,DWORD PTR ds:[esi]
  43aab0:	arpl   WORD PTR [ebp+0x73],sp
  43aab3:	jae    0x43aab5
  43aab5:	add    BYTE PTR [ebx+0x45],cl
  43aab8:	push   edx
  43aab9:	dec    esi
  43aaba:	inc    ebp
  43aabb:	dec    esp
  43aabc:	xor    esi,DWORD PTR [edx]
  43aabe:	cs fs ins BYTE PTR es:[edi],dx
  43aac1:	ins    BYTE PTR es:[edi],dx
  43aac2:	add    BYTE PTR [eax],al
  43aac4:	mov    eax,ds:0x66654400
  43aac9:	push   edi
  43aaca:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  43aad1:	outs   dx,DWORD PTR ds:[esi]
  43aad2:	arpl   WORD PTR [edi+0x0],dx
  43aad5:	add    BYTE PTR [ebx+0x1],dh
  43aad8:	inc    edi
  43aad9:	gs je  0x43ab29
  43aadc:	gs jae 0x43ab52
  43aadf:	popa   
  43aae0:	addr16 gs push edi
  43aae3:	add    BYTE PTR [ebx],bh
  43aae5:	add    edx,DWORD PTR [edx+esi*2+0x61]
  43aae9:	outs   dx,BYTE PTR ds:[esi]
  43aaea:	jae    0x43ab58
  43aaec:	popa   
  43aaed:	je     0x43ab54
  43aaef:	dec    ebp
  43aaf0:	gs jae 0x43ab66
  43aaf3:	popa   
  43aaf4:	add    BYTE PTR gs:[bx+si],al
  43aaf8:	mov    dh,0x0
  43aafa:	inc    esp
  43aafb:	imul   esi,DWORD PTR [ebx+0x70],0x68637461
  43ab02:	dec    ebp
  43ab03:	gs jae 0x43ab79
  43ab06:	popa   
  43ab07:	addr16 gs push edi
  43ab0a:	add    BYTE PTR [eax],al
  43ab0c:	jbe    0x43ab11
  43ab0e:	ja     0x43ab83
  43ab10:	jo     0x43ab84
  43ab12:	imul   ebp,DWORD PTR [esi+0x74],0x6e005766
  43ab19:	add    dl,BYTE PTR [eax+0x6f]
  43ab1c:	jae    0x43ab92
  43ab1e:	push   ecx
  43ab1f:	jne    0x43ab8a
  43ab21:	je     0x43ab70
  43ab23:	gs jae 0x43ab99
  43ab26:	popa   
  43ab27:	add    BYTE PTR gs:[di+0x2],ch
  43ab2c:	push   eax
  43ab2d:	outs   dx,DWORD PTR ds:[esi]
  43ab2e:	jae    0x43aba4
  43ab30:	dec    ebp
  43ab31:	gs jae 0x43aba7
  43ab34:	popa   
  43ab35:	addr16 gs push edi
  43ab38:	add    BYTE PTR [eax],al
  43ab3a:	adc    BYTE PTR [edx],al
  43ab3c:	dec    ecx
  43ab3d:	jae    0x43ab96
  43ab3f:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  43ab46:	add    DWORD PTR es:[edi+0x65],eax
  43ab4a:	je     0x43ab8f
  43ab4c:	ins    BYTE PTR es:[edi],dx
  43ab4d:	imul   esp,DWORD PTR [ebp+0x6e],0x63655274
  43ab54:	je     0x43ab56
  43ab56:	retf   0x4701
  43ab59:	gs je  0x43abb3
  43ab5c:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  43ab63:	arpl   WORD PTR [eax+eax*1+0xb],si
  43ab67:	add    edx,DWORD PTR [ebx+0x65]
  43ab6a:	je     0x43abc3
  43ab6c:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  43ab73:	jae    0x43ab75
  43ab75:	add    BYTE PTR [eax],dl
  43ab77:	add    edx,DWORD PTR [ebx+0x65]
  43ab7a:	je     0x43abd3
  43ab7c:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  43ab83:	js     0x43abf9
  43ab85:	push   edi
  43ab86:	add    BYTE PTR [eax],al
  43ab88:	adc    eax,0x57734902
  43ab8d:	imul   ebp,DWORD PTR [esi+0x64],0x6956776f
  43ab94:	jae    0x43abff
  43ab96:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  43ab9a:	sbb    al,0x3
  43ab9c:	push   ebx
  43ab9d:	push   0x6957776f
  43aba2:	outs   dx,BYTE PTR ds:[esi]
  43aba3:	outs   dx,DWORD PTR fs:[esi]
  43aba5:	ja     0x43aba7
  43aba7:	add    BYTE PTR [ecx],al
  43aba9:	add    cl,BYTE PTR [ecx+0x73]
  43abac:	dec    ecx
  43abad:	arpl   WORD PTR [edi+0x6e],bp
  43abb0:	imul   esp,DWORD PTR [ebx+0x0],0x4701d200
  43abb7:	gs je  0x43ac11
  43abba:	imul   ebp,DWORD PTR [esi+0x64],0x6854776f
  43abc1:	jb     0x43ac28
  43abc3:	popa   
  43abc4:	fs push eax
  43abc6:	jb     0x43ac37
  43abc8:	arpl   WORD PTR [ebp+0x73],sp
  43abcb:	jae    0x43ac16
  43abcd:	add    BYTE PTR fs:[eax],al
  43abd0:	inc    ebx
  43abd1:	add    DWORD PTR [edi+0x65],eax
  43abd4:	je     0x43ac1c
  43abd6:	outs   dx,DWORD PTR ds:[esi]
  43abd7:	jb     0x43ac3e
  43abd9:	addr16 jb 0x43ac4b
  43abdc:	jne    0x43ac4c
  43abde:	fs push edi
  43abe0:	imul   ebp,DWORD PTR [esi+0x64],0xc00776f
  43abe7:	add    BYTE PTR [ecx+0x74],al
  43abea:	je     0x43ac4d
  43abec:	arpl   WORD PTR [eax+0x54],bp
  43abef:	push   0x64616572
  43abf4:	dec    ecx
  43abf5:	outs   dx,BYTE PTR ds:[esi]
  43abf6:	jo     0x43ac6d
  43abf8:	je     0x43abfa
  43abfa:	rol    BYTE PTR [edx],cl
  43abfc:	push   ebx
  43abfd:	gs je  0x43ac46
  43ac00:	outs   dx,DWORD PTR ds:[esi]
  43ac01:	jb     0x43ac68
  43ac03:	addr16 jb 0x43ac75
  43ac06:	jne    0x43ac76
  43ac08:	fs push edi
  43ac0a:	imul   ebp,DWORD PTR [esi+0x64],0x1000776f
  43ac11:	add    BYTE PTR [edx+0x72],al
  43ac14:	imul   ebp,DWORD PTR [esi+0x67],0x646e6957
  43ac1b:	outs   dx,DWORD PTR ds:[esi]
  43ac1c:	ja     0x43ac72
  43ac1e:	outs   dx,DWORD PTR ds:[esi]
  43ac1f:	push   esp
  43ac20:	outs   dx,DWORD PTR ds:[esi]
  43ac21:	jo     0x43ac23
  43ac23:	add    BYTE PTR [ecx+eax*1],dh
  43ac26:	inc    edi
  43ac27:	gs je  0x43ac6d
  43ac2a:	jne    0x43ac9e
  43ac2c:	jae    0x43ac9d
  43ac2e:	jb     0x43ac80
  43ac30:	outs   dx,DWORD PTR ds:[esi]
  43ac31:	jae    0x43ac33
  43ac33:	add    BYTE PTR [esi+0x2],cl
  43ac36:	dec    ebp
  43ac37:	outs   dx,DWORD PTR ds:[esi]
  43ac38:	outs   dx,BYTE PTR ds:[esi]
  43ac39:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6d6f7246
  43ac41:	push   eax
  43ac42:	outs   dx,DWORD PTR ds:[esi]
  43ac43:	imul   ebp,DWORD PTR [esi+0x74],0x1750000
  43ac4a:	inc    edi
  43ac4b:	gs je  0x43ac9b
  43ac4e:	outs   dx,DWORD PTR ds:[esi]
  43ac4f:	outs   dx,BYTE PTR ds:[esi]
  43ac50:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6f666e49
  43ac58:	push   edi
  43ac59:	add    BYTE PTR [ebx],ch
  43ac5b:	add    edx,DWORD PTR [ebx+0x79]
  43ac5e:	jae    0x43acd4
  43ac60:	gs ins DWORD PTR es:[edi],dx
  43ac62:	push   eax
  43ac63:	popa   
  43ac64:	jb     0x43acc7
  43ac66:	ins    DWORD PTR es:[edi],dx
  43ac67:	gs je  0x43accf
  43ac6a:	jb     0x43acdf
  43ac6c:	dec    ecx
  43ac6d:	outs   dx,BYTE PTR ds:[esi]
  43ac6e:	outs   dx,WORD PTR ds:[esi]
  43ac70:	push   edi
  43ac71:	add    BYTE PTR [ebx+0x2],cl
  43ac74:	dec    ebp
  43ac75:	gs jae 0x43aceb
  43ac78:	popa   
  43ac79:	addr16 gs inc edx
  43ac7c:	outs   dx,DWORD PTR ds:[esi]
  43ac7d:	js     0x43acd6
  43ac7f:	add    BYTE PTR [ebp+0x53],dl
  43ac82:	inc    ebp
  43ac83:	push   edx
  43ac84:	xor    esi,DWORD PTR [edx]
  43ac86:	cs fs ins BYTE PTR es:[edi],dx
  43ac89:	ins    BYTE PTR es:[edi],dx
  43ac8a:	add    BYTE PTR [eax],al
  43ac8c:	push   es
  43ac8d:	add    BYTE PTR [ebx+0x6f],al
  43ac90:	ins    DWORD PTR es:[edi],dx
  43ac91:	ins    DWORD PTR es:[edi],dx
  43ac92:	popa   
  43ac93:	outs   dx,BYTE PTR ds:[esi]
  43ac94:	fs dec esp
  43ac96:	imul   ebp,DWORD PTR [esi+0x65],0x72416f54
  43ac9d:	addr16 jbe 0x43acf7
  43aca0:	add    BYTE PTR [eax],al
  43aca2:	xor    DWORD PTR [ecx],eax
  43aca4:	push   ebx
  43aca5:	push   0x456c6c65
  43acaa:	js     0x43ad11
  43acac:	arpl   WORD PTR [ebp+0x74],si
  43acaf:	gs inc ebp
  43acb1:	js     0x43ad0a
  43acb3:	add    BYTE PTR [ecx+0x46485300],dh
  43acb9:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4f],0x61726570
  43acc1:	je     0x43ad2c
  43acc3:	outs   dx,DWORD PTR ds:[esi]
  43acc4:	outs   dx,BYTE PTR ds:[esi]
  43acc5:	push   edi
  43acc6:	add    BYTE PTR [eax],al
  43acc8:	push   ebx
  43acc9:	dec    eax
  43acca:	inc    ebp
  43accb:	dec    esp
  43accc:	dec    esp
  43accd:	xor    esi,DWORD PTR [edx]
  43accf:	cs fs ins BYTE PTR es:[edi],dx
  43acd2:	ins    BYTE PTR es:[edi],dx
  43acd3:	add    BYTE PTR [esi+0x0],cl
  43acd6:	inc    ebx
  43acd7:	outs   dx,DWORD PTR ds:[esi]
  43acd8:	dec    ecx
  43acd9:	outs   dx,BYTE PTR ds:[esi]
  43acda:	imul   esi,DWORD PTR [ecx+ebp*2+0x61],0x657a696c
  43ace2:	add    BYTE PTR [eax],al
  43ace4:	jge    0x43ace6
  43ace6:	inc    ebx
  43ace7:	outs   dx,DWORD PTR ds:[esi]
  43ace8:	push   ebp
  43ace9:	outs   dx,BYTE PTR ds:[esi]
  43acea:	imul   ebp,DWORD PTR [esi+0x69],0x6c616974
  43acf1:	imul   edi,DWORD PTR [edx+0x65],0x6c6f0000
  43acf8:	xor    esi,DWORD PTR gs:[edx]
  43acfb:	cs fs ins BYTE PTR es:[edi],dx
  43acfe:	ins    BYTE PTR es:[edi],dx
  43acff:	add    BYTE PTR [eax+0x303f3f01],dl
  43ad05:	aas    
  43ad06:	and    al,0x62
  43ad08:	popa   
  43ad09:	jae    0x43ad74
  43ad0b:	arpl   WORD PTR [edi+0x73],bx
  43ad0e:	je     0x43ad82
  43ad10:	imul   ebp,DWORD PTR [esi+0x67],0x55575f40
  43ad17:	aas    
  43ad18:	and    al,0x63
  43ad1a:	push   0x745f7261
  43ad1f:	jb     0x43ad82
  43ad21:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x7340575f
  43ad29:	je     0x43ad8f
  43ad2b:	inc    eax
  43ad2c:	inc    eax
  43ad2d:	push   esi
  43ad2e:	aas    
  43ad2f:	and    al,0x61
  43ad31:	ins    BYTE PTR es:[edi],dx
  43ad32:	ins    BYTE PTR es:[edi],dx
  43ad33:	outs   dx,DWORD PTR ds:[esi]
  43ad34:	arpl   WORD PTR [ecx+0x74],sp
  43ad37:	outs   dx,DWORD PTR ds:[esi]
  43ad38:	jb     0x43ad7a
  43ad3a:	pop    edi
  43ad3b:	push   edi
  43ad3c:	inc    eax
  43ad3d:	xor    al,BYTE PTR [eax+0x40]
  43ad40:	jae    0x43adb6
  43ad42:	fs inc eax
  43ad44:	inc    eax
  43ad45:	push   ecx
  43ad46:	inc    ecx
  43ad47:	inc    ebp
  43ad48:	inc    eax
  43ad49:	push   eax
  43ad4a:	inc    edx
  43ad4b:	pop    edi
  43ad4c:	push   edi
  43ad4d:	inc    eax
  43ad4e:	pop    edx
  43ad4f:	add    BYTE PTR [ecx+0x2],ah
  43ad52:	aas    
  43ad53:	aas    
  43ad54:	xor    DWORD PTR [edi],edi
  43ad56:	and    al,0x62
  43ad58:	popa   
  43ad59:	jae    0x43adc4
  43ad5b:	arpl   WORD PTR [edi+0x73],bx
  43ad5e:	je     0x43add2
  43ad60:	imul   ebp,DWORD PTR [esi+0x67],0x55575f40
  43ad67:	aas    
  43ad68:	and    al,0x63
  43ad6a:	push   0x745f7261
  43ad6f:	jb     0x43add2
  43ad71:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x7340575f
  43ad79:	je     0x43addf
  43ad7b:	inc    eax
  43ad7c:	inc    eax
  43ad7d:	push   esi
  43ad7e:	aas    
  43ad7f:	and    al,0x61
  43ad81:	ins    BYTE PTR es:[edi],dx
  43ad82:	ins    BYTE PTR es:[edi],dx
  43ad83:	outs   dx,DWORD PTR ds:[esi]
  43ad84:	arpl   WORD PTR [ecx+0x74],sp
  43ad87:	outs   dx,DWORD PTR ds:[esi]
  43ad88:	jb     0x43adca
  43ad8a:	pop    edi
  43ad8b:	push   edi
  43ad8c:	inc    eax
  43ad8d:	xor    al,BYTE PTR [eax+0x40]
  43ad90:	jae    0x43ae06
  43ad92:	fs inc eax
  43ad94:	inc    eax
  43ad95:	push   ecx
  43ad96:	inc    ecx
  43ad97:	inc    ebp
  43ad98:	inc    eax
  43ad99:	pop    eax
  43ad9a:	pop    edx
  43ad9b:	add    BYTE PTR [ebx+0x1],bh
  43ad9e:	aas    
  43ad9f:	aas    
  43ada0:	xor    BYTE PTR [edi],bh
  43ada2:	and    al,0x62
  43ada4:	popa   
  43ada5:	jae    0x43ae10
  43ada7:	arpl   WORD PTR [edi+0x73],bx
  43adaa:	je     0x43ae1e
  43adac:	imul   ebp,DWORD PTR [esi+0x67],0x3f554440
  43adb3:	and    al,0x63
  43adb5:	push   0x745f7261
  43adba:	jb     0x43ae1d
  43adbc:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x74734044
  43adc4:	fs inc eax
  43adc6:	inc    eax
  43adc7:	push   esi
  43adc8:	aas    
  43adc9:	and    al,0x61
  43adcb:	ins    BYTE PTR es:[edi],dx
  43adcc:	ins    BYTE PTR es:[edi],dx
  43adcd:	outs   dx,DWORD PTR ds:[esi]
  43adce:	arpl   WORD PTR [ecx+0x74],sp
  43add1:	outs   dx,DWORD PTR ds:[esi]
  43add2:	jb     0x43ae14
  43add4:	inc    esp
  43add5:	inc    eax
  43add6:	xor    al,BYTE PTR [eax+0x40]
  43add9:	jae    0x43ae4f
  43addb:	fs inc eax
  43addd:	inc    eax
  43adde:	push   ecx
  43addf:	inc    ecx
  43ade0:	inc    ebp
  43ade1:	inc    eax
  43ade2:	pop    eax
  43ade3:	pop    edx
  43ade4:	add    BYTE PTR [eax],al
  43ade6:	pop    edi
  43ade7:	add    bh,BYTE PTR [edi]
  43ade9:	aas    
  43adea:	xor    DWORD PTR [edi],edi
  43adec:	and    al,0x62
  43adee:	popa   
  43adef:	jae    0x43ae5a
  43adf1:	arpl   WORD PTR [edi+0x73],bx
  43adf4:	je     0x43ae68
  43adf6:	imul   ebp,DWORD PTR [esi+0x67],0x3f554440
  43adfd:	and    al,0x63
  43adff:	push   0x745f7261
  43ae04:	jb     0x43ae67
  43ae06:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x74734044
  43ae0e:	fs inc eax
  43ae10:	inc    eax
  43ae11:	push   esi
  43ae12:	aas    
  43ae13:	and    al,0x61
  43ae15:	ins    BYTE PTR es:[edi],dx
  43ae16:	ins    BYTE PTR es:[edi],dx
  43ae17:	outs   dx,DWORD PTR ds:[esi]
  43ae18:	arpl   WORD PTR [ecx+0x74],sp
  43ae1b:	outs   dx,DWORD PTR ds:[esi]
  43ae1c:	jb     0x43ae5e
  43ae1e:	inc    esp
  43ae1f:	inc    eax
  43ae20:	xor    al,BYTE PTR [eax+0x40]
  43ae23:	jae    0x43ae99
  43ae25:	fs inc eax
  43ae27:	inc    eax
  43ae28:	push   ecx
  43ae29:	inc    ecx
  43ae2a:	inc    ebp
  43ae2b:	inc    eax
  43ae2c:	pop    eax
  43ae2d:	pop    edx
  43ae2e:	add    BYTE PTR [eax],al
  43ae30:	outs   dx,DWORD PTR ds:[esi]
  43ae31:	add    DWORD PTR [edi],edi
  43ae33:	aas    
  43ae34:	xor    BYTE PTR [edi],bh
  43ae36:	and    al,0x62
  43ae38:	popa   
  43ae39:	jae    0x43aea4
  43ae3b:	arpl   WORD PTR [edi+0x73],bx
  43ae3e:	je     0x43aeb2
  43ae40:	imul   ebp,DWORD PTR [esi+0x67],0x3f554440
  43ae47:	and    al,0x63
  43ae49:	push   0x745f7261
  43ae4e:	jb     0x43aeb1
  43ae50:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x74734044
  43ae58:	fs inc eax
  43ae5a:	inc    eax
  43ae5b:	push   esi
  43ae5c:	aas    
  43ae5d:	and    al,0x61
  43ae5f:	ins    BYTE PTR es:[edi],dx
  43ae60:	ins    BYTE PTR es:[edi],dx
  43ae61:	outs   dx,DWORD PTR ds:[esi]
  43ae62:	arpl   WORD PTR [ecx+0x74],sp
  43ae65:	outs   dx,DWORD PTR ds:[esi]
  43ae66:	jb     0x43aea8
  43ae68:	inc    esp
  43ae69:	inc    eax
  43ae6a:	xor    al,BYTE PTR [eax+0x40]
  43ae6d:	jae    0x43aee3
  43ae6f:	fs inc eax
  43ae71:	inc    eax
  43ae72:	push   ecx
  43ae73:	inc    ecx
  43ae74:	inc    ebp
  43ae75:	inc    eax
  43ae76:	inc    ecx
  43ae77:	inc    edx
  43ae78:	push   esi
  43ae79:	xor    BYTE PTR [ecx],dh
  43ae7b:	inc    eax
  43ae7c:	inc    eax
  43ae7d:	pop    edx
  43ae7e:	add    BYTE PTR [eax],al
  43ae80:	xchg   ebp,eax
  43ae81:	add    DWORD PTR [edi],edi
  43ae83:	aas    
  43ae84:	xor    BYTE PTR [edi],bh
  43ae86:	and    al,0x62
  43ae88:	popa   
  43ae89:	jae    0x43aef4
  43ae8b:	arpl   WORD PTR [edi+0x73],bx
  43ae8e:	je     0x43af02
  43ae90:	imul   ebp,DWORD PTR [esi+0x67],0x55575f40
  43ae97:	aas    
  43ae98:	and    al,0x63
  43ae9a:	push   0x745f7261
  43ae9f:	jb     0x43af02
  43aea1:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x7340575f
  43aea9:	je     0x43af0f
  43aeab:	inc    eax
  43aeac:	inc    eax
  43aead:	push   esi
  43aeae:	aas    
  43aeaf:	and    al,0x61
  43aeb1:	ins    BYTE PTR es:[edi],dx
  43aeb2:	ins    BYTE PTR es:[edi],dx
  43aeb3:	outs   dx,DWORD PTR ds:[esi]
  43aeb4:	arpl   WORD PTR [ecx+0x74],sp
  43aeb7:	outs   dx,DWORD PTR ds:[esi]
  43aeb8:	jb     0x43aefa
  43aeba:	pop    edi
  43aebb:	push   edi
  43aebc:	inc    eax
  43aebd:	xor    al,BYTE PTR [eax+0x40]
  43aec0:	jae    0x43af36
  43aec2:	fs inc eax
  43aec4:	inc    eax
  43aec5:	push   ecx
  43aec6:	inc    ecx
  43aec7:	inc    ebp
  43aec8:	inc    eax
  43aec9:	pop    eax
  43aeca:	pop    edx
  43aecb:	add    cl,cl
  43aecd:	add    eax,0x69545f3f
  43aed2:	fs jns 0x43af15
  43aed5:	aas    
  43aed6:	and    al,0x62
  43aed8:	popa   
  43aed9:	jae    0x43af44
  43aedb:	arpl   WORD PTR [edi+0x73],bx
  43aede:	je     0x43af52
  43aee0:	imul   ebp,DWORD PTR [esi+0x67],0x55575f40
  43aee7:	aas    
  43aee8:	and    al,0x63
  43aeea:	push   0x745f7261
  43aeef:	jb     0x43af52
  43aef1:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x7340575f
  43aef9:	je     0x43af5f
  43aefb:	inc    eax
  43aefc:	inc    eax
  43aefd:	push   esi
  43aefe:	aas    
  43aeff:	and    al,0x61
  43af01:	ins    BYTE PTR es:[edi],dx
  43af02:	ins    BYTE PTR es:[edi],dx
  43af03:	outs   dx,DWORD PTR ds:[esi]
  43af04:	arpl   WORD PTR [ecx+0x74],sp
  43af07:	outs   dx,DWORD PTR ds:[esi]
  43af08:	jb     0x43af4a
  43af0a:	pop    edi
  43af0b:	push   edi
  43af0c:	inc    eax
  43af0d:	xor    al,BYTE PTR [eax+0x40]
  43af10:	jae    0x43af86
  43af12:	fs inc eax
  43af14:	inc    eax
  43af15:	dec    ecx
  43af16:	inc    ecx
  43af17:	inc    ebp
  43af18:	pop    eax
  43af19:	pop    edi
  43af1a:	dec    esi
  43af1b:	dec    ecx
  43af1c:	inc    eax
  43af1d:	pop    edx
  43af1e:	add    BYTE PTR [eax],al
  43af20:	popf   
  43af21:	push   es
  43af22:	aas    
  43af23:	fs gs popa 
  43af26:	ins    BYTE PTR es:[edi],dx
  43af27:	ins    BYTE PTR es:[edi],dx
  43af28:	outs   dx,DWORD PTR ds:[esi]
  43af29:	arpl   WORD PTR [ecx+0x74],sp
  43af2c:	gs inc eax
  43af2e:	aas    
  43af2f:	and    al,0x61
  43af31:	ins    BYTE PTR es:[edi],dx
  43af32:	ins    BYTE PTR es:[edi],dx
  43af33:	outs   dx,DWORD PTR ds:[esi]
  43af34:	arpl   WORD PTR [ecx+0x74],sp
  43af37:	outs   dx,DWORD PTR ds:[esi]
  43af38:	jb     0x43af7a
  43af3a:	pop    edi
  43af3b:	push   edi
  43af3c:	inc    eax
  43af3d:	jae    0x43afb3
  43af3f:	fs inc eax
  43af41:	inc    eax
  43af42:	push   ecx
  43af43:	inc    ecx
  43af44:	inc    ebp
  43af45:	pop    eax
  43af46:	push   eax
  43af47:	inc    ecx
  43af48:	pop    edi
  43af49:	push   edi
  43af4a:	dec    ecx
  43af4b:	inc    eax
  43af4c:	pop    edx
  43af4d:	add    BYTE PTR [ebx],dl
  43af4f:	push   es
  43af50:	aas    
  43af51:	popa   
  43af52:	jo     0x43afc4
  43af54:	outs   dx,BYTE PTR gs:[esi]
  43af56:	fs inc eax
  43af58:	aas    
  43af59:	and    al,0x62
  43af5b:	popa   
  43af5c:	jae    0x43afc7
  43af5e:	arpl   WORD PTR [edi+0x73],bx
  43af61:	je     0x43afd5
  43af63:	imul   ebp,DWORD PTR [esi+0x67],0x55575f40
  43af6a:	aas    
  43af6b:	and    al,0x63
  43af6d:	push   0x745f7261
  43af72:	jb     0x43afd5
  43af74:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x7340575f
  43af7c:	je     0x43afe2
  43af7e:	inc    eax
  43af7f:	inc    eax
  43af80:	push   esi
  43af81:	aas    
  43af82:	and    al,0x61
  43af84:	ins    BYTE PTR es:[edi],dx
  43af85:	ins    BYTE PTR es:[edi],dx
  43af86:	outs   dx,DWORD PTR ds:[esi]
  43af87:	arpl   WORD PTR [ecx+0x74],sp
  43af8a:	outs   dx,DWORD PTR ds:[esi]
  43af8b:	jb     0x43afcd
  43af8d:	pop    edi
  43af8e:	push   edi
  43af8f:	inc    eax
  43af90:	xor    al,BYTE PTR [eax+0x40]
  43af93:	jae    0x43b009
  43af95:	fs inc eax
  43af97:	inc    eax
  43af98:	push   ecx
  43af99:	inc    ecx
  43af9a:	inc    ebp
  43af9b:	inc    ecx
  43af9c:	inc    ecx
  43af9d:	push   esi
  43af9e:	xor    DWORD PTR [edx],esi
  43afa0:	inc    eax
  43afa1:	dec    ecx
  43afa2:	pop    edi
  43afa3:	push   edi
  43afa4:	inc    eax
  43afa5:	pop    edx
  43afa6:	add    BYTE PTR [eax],al
  43afa8:	add    BYTE PTR [esi],al
  43afaa:	aas    
  43afab:	popa   
  43afac:	ins    BYTE PTR es:[edi],dx
  43afad:	ins    BYTE PTR es:[edi],dx
  43afae:	outs   dx,DWORD PTR ds:[esi]
  43afaf:	arpl   WORD PTR [ecx+0x74],sp
  43afb2:	gs inc eax
  43afb4:	aas    
  43afb5:	and    al,0x61
  43afb7:	ins    BYTE PTR es:[edi],dx
  43afb8:	ins    BYTE PTR es:[edi],dx
  43afb9:	outs   dx,DWORD PTR ds:[esi]
  43afba:	arpl   WORD PTR [ecx+0x74],sp
  43afbd:	outs   dx,DWORD PTR ds:[esi]
  43afbe:	jb     0x43b000
  43afc0:	pop    edi
  43afc1:	push   edi
  43afc2:	inc    eax
  43afc3:	jae    0x43b039
  43afc5:	fs inc eax
  43afc7:	inc    eax
  43afc8:	push   ecx
  43afc9:	inc    ecx
  43afca:	inc    ebp
  43afcb:	push   eax
  43afcc:	inc    ecx
  43afcd:	pop    edi
  43afce:	push   edi
  43afcf:	dec    ecx
  43afd0:	inc    eax
  43afd1:	pop    edx
  43afd2:	add    BYTE PTR [eax],al
  43afd4:	mov    DWORD PTR [ecx],eax
  43afd6:	aas    
  43afd7:	aas    
  43afd8:	xor    BYTE PTR [edi],bh
  43afda:	and    al,0x62
  43afdc:	popa   
  43afdd:	jae    0x43b048
  43afdf:	arpl   WORD PTR [edi+0x73],bx
  43afe2:	je     0x43b056
  43afe4:	imul   ebp,DWORD PTR [esi+0x67],0x55575f40
  43afeb:	aas    
  43afec:	and    al,0x63
  43afee:	push   0x745f7261
  43aff3:	jb     0x43b056
  43aff5:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x7340575f
  43affd:	je     0x43b063
  43afff:	inc    eax
  43b000:	inc    eax
  43b001:	push   esi
  43b002:	aas    
  43b003:	and    al,0x61
  43b005:	ins    BYTE PTR es:[edi],dx
  43b006:	ins    BYTE PTR es:[edi],dx
  43b007:	outs   dx,DWORD PTR ds:[esi]
  43b008:	arpl   WORD PTR [ecx+0x74],sp
  43b00b:	outs   dx,DWORD PTR ds:[esi]
  43b00c:	jb     0x43b04e
  43b00e:	pop    edi
  43b00f:	push   edi
  43b010:	inc    eax
  43b011:	xor    al,BYTE PTR [eax+0x40]
  43b014:	jae    0x43b08a
  43b016:	fs inc eax
  43b018:	inc    eax
  43b019:	push   ecx
  43b01a:	inc    ecx
  43b01b:	inc    ebp
  43b01c:	inc    eax
  43b01d:	inc    ecx
  43b01e:	inc    edx
  43b01f:	push   esi
  43b020:	xor    BYTE PTR [ecx],dh
  43b022:	inc    eax
  43b023:	inc    eax
  43b024:	pop    edx
  43b025:	add    BYTE PTR [esi+0x1],dh
  43b028:	aas    
  43b029:	aas    
  43b02a:	xor    BYTE PTR [edi],bh
  43b02c:	and    al,0x62
  43b02e:	popa   
  43b02f:	jae    0x43b09a
  43b031:	arpl   WORD PTR [edi+0x73],bx
  43b034:	je     0x43b0a8
  43b036:	imul   ebp,DWORD PTR [esi+0x67],0x3f554440
  43b03d:	and    al,0x63
  43b03f:	push   0x745f7261
  43b044:	jb     0x43b0a7
  43b046:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x74734044
  43b04e:	fs inc eax
  43b050:	inc    eax
  43b051:	push   esi
  43b052:	aas    
  43b053:	and    al,0x61
  43b055:	ins    BYTE PTR es:[edi],dx
  43b056:	ins    BYTE PTR es:[edi],dx
  43b057:	outs   dx,DWORD PTR ds:[esi]
  43b058:	arpl   WORD PTR [ecx+0x74],sp
  43b05b:	outs   dx,DWORD PTR ds:[esi]
  43b05c:	jb     0x43b09e
  43b05e:	inc    esp
  43b05f:	inc    eax
  43b060:	xor    al,BYTE PTR [eax+0x40]
  43b063:	jae    0x43b0d9
  43b065:	fs inc eax
  43b067:	inc    eax
  43b068:	push   ecx
  43b069:	inc    ecx
  43b06a:	inc    ebp
  43b06b:	inc    eax
  43b06c:	push   eax
  43b06d:	inc    edx
  43b06e:	inc    esp
  43b06f:	inc    eax
  43b070:	pop    edx
  43b071:	add    BYTE PTR [eax+eax*1],bh
  43b074:	aas    
  43b075:	aas    
  43b076:	and    al,0x3f
  43b078:	cmp    BYTE PTR [edi+0x57],bl
  43b07b:	push   ebp
  43b07c:	aas    
  43b07d:	and    al,0x63
  43b07f:	push   0x745f7261
  43b084:	jb     0x43b0e7
  43b086:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x7340575f
  43b08e:	je     0x43b0f4
  43b090:	inc    eax
  43b091:	inc    eax
  43b092:	push   esi
  43b093:	aas    
  43b094:	and    al,0x61
  43b096:	ins    BYTE PTR es:[edi],dx
  43b097:	ins    BYTE PTR es:[edi],dx
  43b098:	outs   dx,DWORD PTR ds:[esi]
  43b099:	arpl   WORD PTR [ecx+0x74],sp
  43b09c:	outs   dx,DWORD PTR ds:[esi]
  43b09d:	jb     0x43b0df
  43b09f:	pop    edi
  43b0a0:	push   edi
  43b0a1:	inc    eax
  43b0a2:	xor    DWORD PTR [eax+0x40],eax
  43b0a5:	jae    0x43b11b
  43b0a7:	fs inc eax
  43b0a9:	inc    eax
  43b0aa:	pop    ecx
  43b0ab:	inc    ecx
  43b0ac:	pop    edi
  43b0ad:	dec    esi
  43b0ae:	inc    ecx
  43b0af:	inc    edx
  43b0b0:	push   esi
  43b0b1:	aas    
  43b0b2:	and    al,0x62
  43b0b4:	popa   
  43b0b5:	jae    0x43b120
  43b0b7:	arpl   WORD PTR [edi+0x73],bx
  43b0ba:	je     0x43b12e
  43b0bc:	imul   ebp,DWORD PTR [esi+0x67],0x55575f40
  43b0c3:	aas    
  43b0c4:	and    al,0x63
  43b0c6:	push   0x745f7261
  43b0cb:	jb     0x43b12e
  43b0cd:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x7340575f
  43b0d5:	je     0x43b13b
  43b0d7:	inc    eax
  43b0d8:	inc    eax
  43b0d9:	push   esi
  43b0da:	aas    
  43b0db:	and    al,0x61
  43b0dd:	ins    BYTE PTR es:[edi],dx
  43b0de:	ins    BYTE PTR es:[edi],dx
  43b0df:	outs   dx,DWORD PTR ds:[esi]
  43b0e0:	arpl   WORD PTR [ecx+0x74],sp
  43b0e3:	outs   dx,DWORD PTR ds:[esi]
  43b0e4:	jb     0x43b126
  43b0e6:	pop    edi
  43b0e7:	push   edi
  43b0e8:	inc    eax
  43b0e9:	xor    al,BYTE PTR [eax+0x40]
  43b0ec:	xor    BYTE PTR [eax+0x50],al
  43b0ef:	inc    edx
  43b0f0:	pop    edi
  43b0f1:	push   edi
  43b0f2:	inc    eax
  43b0f3:	pop    edx
  43b0f4:	add    BYTE PTR [eax],al
  43b0f6:	mov    cl,0x7
  43b0f8:	aas    
  43b0f9:	outs   dx,BYTE PTR gs:[esi]
  43b0fb:	fs inc eax
  43b0fd:	aas    
  43b0fe:	and    al,0x62
  43b100:	popa   
  43b101:	jae    0x43b16c
  43b103:	arpl   WORD PTR [edi+0x73],bx
  43b106:	je     0x43b17a
  43b108:	imul   ebp,DWORD PTR [esi+0x67],0x55575f40
  43b10f:	aas    
  43b110:	and    al,0x63
  43b112:	push   0x745f7261
  43b117:	jb     0x43b17a
  43b119:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x7340575f
  43b121:	je     0x43b187
  43b123:	inc    eax
  43b124:	inc    eax
  43b125:	push   esi
  43b126:	aas    
  43b127:	and    al,0x61
  43b129:	ins    BYTE PTR es:[edi],dx
  43b12a:	ins    BYTE PTR es:[edi],dx
  43b12b:	outs   dx,DWORD PTR ds:[esi]
  43b12c:	arpl   WORD PTR [ecx+0x74],sp
  43b12f:	outs   dx,DWORD PTR ds:[esi]
  43b130:	jb     0x43b172
  43b132:	pop    edi
  43b133:	push   edi
  43b134:	inc    eax
  43b135:	xor    al,BYTE PTR [eax+0x40]
  43b138:	jae    0x43b1ae
  43b13a:	fs inc eax
  43b13c:	inc    eax
  43b13d:	push   ecx
  43b13e:	inc    ecx
  43b13f:	inc    ebp
  43b140:	aas    
  43b141:	inc    ecx
  43b142:	push   esi
  43b143:	aas    
  43b144:	and    al,0x5f
  43b146:	push   ebx
  43b147:	je     0x43b1bb
  43b149:	imul   ebp,DWORD PTR [esi+0x67],0x6574695f
  43b150:	jb     0x43b1b3
  43b152:	je     0x43b1c3
  43b154:	jb     0x43b196
  43b156:	pop    edi
  43b157:	push   edi
  43b158:	push   ebp
  43b159:	aas    
  43b15a:	and    al,0x63
  43b15c:	push   0x745f7261
  43b161:	jb     0x43b1c4
  43b163:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x7340575f
  43b16b:	je     0x43b1d1
  43b16d:	inc    eax
  43b16e:	inc    eax
  43b16f:	push   esi
  43b170:	aas    
  43b171:	and    al,0x61
  43b173:	ins    BYTE PTR es:[edi],dx
  43b174:	ins    BYTE PTR es:[edi],dx
  43b175:	outs   dx,DWORD PTR ds:[esi]
  43b176:	arpl   WORD PTR [ecx+0x74],sp
  43b179:	outs   dx,DWORD PTR ds:[esi]
  43b17a:	jb     0x43b1bc
  43b17c:	pop    edi
  43b17d:	push   edi
  43b17e:	inc    eax
  43b17f:	xor    al,BYTE PTR [eax+0x40]
  43b182:	xor    al,BYTE PTR [eax+0x58]
  43b185:	pop    edx
  43b186:	add    BYTE PTR [eax],al
  43b188:	inc    ecx
  43b189:	push   es
  43b18a:	aas    
  43b18b:	bound  esp,QWORD PTR [ebp+0x67]
  43b18e:	imul   ebp,DWORD PTR [esi+0x40],0x6162243f
  43b195:	jae    0x43b200
  43b197:	arpl   WORD PTR [edi+0x73],bx
  43b19a:	je     0x43b20e
  43b19c:	imul   ebp,DWORD PTR [esi+0x67],0x55575f40
  43b1a3:	aas    
  43b1a4:	and    al,0x63
  43b1a6:	push   0x745f7261
  43b1ab:	jb     0x43b20e
  43b1ad:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x7340575f
  43b1b5:	je     0x43b21b
  43b1b7:	inc    eax
  43b1b8:	inc    eax
  43b1b9:	push   esi
  43b1ba:	aas    
  43b1bb:	and    al,0x61
  43b1bd:	ins    BYTE PTR es:[edi],dx
  43b1be:	ins    BYTE PTR es:[edi],dx
  43b1bf:	outs   dx,DWORD PTR ds:[esi]
  43b1c0:	arpl   WORD PTR [ecx+0x74],sp
  43b1c3:	outs   dx,DWORD PTR ds:[esi]
  43b1c4:	jb     0x43b206
  43b1c6:	pop    edi
  43b1c7:	push   edi
  43b1c8:	inc    eax
  43b1c9:	xor    al,BYTE PTR [eax+0x40]
  43b1cc:	jae    0x43b242
  43b1ce:	fs inc eax
  43b1d0:	inc    eax
  43b1d1:	push   ecx
  43b1d2:	inc    ecx
  43b1d3:	inc    ebp
  43b1d4:	aas    
  43b1d5:	inc    ecx
  43b1d6:	push   esi
  43b1d7:	aas    
  43b1d8:	and    al,0x5f
  43b1da:	push   ebx
  43b1db:	je     0x43b24f
  43b1dd:	imul   ebp,DWORD PTR [esi+0x67],0x6574695f
  43b1e4:	jb     0x43b247
  43b1e6:	je     0x43b257
  43b1e8:	jb     0x43b22a
  43b1ea:	pop    edi
  43b1eb:	push   edi
  43b1ec:	push   ebp
  43b1ed:	aas    
  43b1ee:	and    al,0x63
  43b1f0:	push   0x745f7261
  43b1f5:	jb     0x43b258
  43b1f7:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x7340575f
  43b1ff:	je     0x43b265
  43b201:	inc    eax
  43b202:	inc    eax
  43b203:	push   esi
  43b204:	aas    
  43b205:	and    al,0x61
  43b207:	ins    BYTE PTR es:[edi],dx
  43b208:	ins    BYTE PTR es:[edi],dx
  43b209:	outs   dx,DWORD PTR ds:[esi]
  43b20a:	arpl   WORD PTR [ecx+0x74],sp
  43b20d:	outs   dx,DWORD PTR ds:[esi]
  43b20e:	jb     0x43b250
  43b210:	pop    edi
  43b211:	push   edi
  43b212:	inc    eax
  43b213:	xor    al,BYTE PTR [eax+0x40]
  43b216:	xor    al,BYTE PTR [eax+0x58]
  43b219:	pop    edx
  43b21a:	add    BYTE PTR [eax],al
  43b21c:	out    dx,al
  43b21d:	or     bh,BYTE PTR [edi]
  43b21f:	jb     0x43b286
  43b221:	jae    0x43b288
  43b223:	jb     0x43b29b
  43b225:	gs inc eax
  43b227:	aas    
  43b228:	and    al,0x62
  43b22a:	popa   
  43b22b:	jae    0x43b296
  43b22d:	arpl   WORD PTR [edi+0x73],bx
  43b230:	je     0x43b2a4
  43b232:	imul   ebp,DWORD PTR [esi+0x67],0x55575f40
  43b239:	aas    
  43b23a:	and    al,0x63
  43b23c:	push   0x745f7261
  43b241:	jb     0x43b2a4
  43b243:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x7340575f
  43b24b:	je     0x43b2b1
  43b24d:	inc    eax
  43b24e:	inc    eax
  43b24f:	push   esi
  43b250:	aas    
  43b251:	and    al,0x61
  43b253:	ins    BYTE PTR es:[edi],dx
  43b254:	ins    BYTE PTR es:[edi],dx
  43b255:	outs   dx,DWORD PTR ds:[esi]
  43b256:	arpl   WORD PTR [ecx+0x74],sp
  43b259:	outs   dx,DWORD PTR ds:[esi]
  43b25a:	jb     0x43b29c
  43b25c:	pop    edi
  43b25d:	push   edi
  43b25e:	inc    eax
  43b25f:	xor    al,BYTE PTR [eax+0x40]
  43b262:	jae    0x43b2d8
  43b264:	fs inc eax
  43b266:	inc    eax
  43b267:	push   ecx
  43b268:	inc    ecx
  43b269:	inc    ebp
  43b26a:	pop    eax
  43b26b:	dec    ecx
  43b26c:	inc    eax
  43b26d:	pop    edx
  43b26e:	add    BYTE PTR [eax],al
  43b270:	out    0xa,eax
  43b272:	aas    
  43b273:	jb     0x43b2da
  43b275:	jo     0x43b2e3
  43b277:	popa   
  43b278:	arpl   WORD PTR [ebp+0x40],sp
  43b27b:	aas    
  43b27c:	and    al,0x62
  43b27e:	popa   
  43b27f:	jae    0x43b2ea
  43b281:	arpl   WORD PTR [edi+0x73],bx
  43b284:	je     0x43b2f8
  43b286:	imul   ebp,DWORD PTR [esi+0x67],0x55575f40
  43b28d:	aas    
  43b28e:	and    al,0x63
  43b290:	push   0x745f7261
  43b295:	jb     0x43b2f8
  43b297:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x7340575f
  43b29f:	je     0x43b305
  43b2a1:	inc    eax
  43b2a2:	inc    eax
  43b2a3:	push   esi
  43b2a4:	aas    
  43b2a5:	and    al,0x61
  43b2a7:	ins    BYTE PTR es:[edi],dx
  43b2a8:	ins    BYTE PTR es:[edi],dx
  43b2a9:	outs   dx,DWORD PTR ds:[esi]
  43b2aa:	arpl   WORD PTR [ecx+0x74],sp
  43b2ad:	outs   dx,DWORD PTR ds:[esi]
  43b2ae:	jb     0x43b2f0
  43b2b0:	pop    edi
  43b2b1:	push   edi
  43b2b2:	inc    eax
  43b2b3:	xor    al,BYTE PTR [eax+0x40]
  43b2b6:	jae    0x43b32c
  43b2b8:	fs inc eax
  43b2ba:	inc    eax
  43b2bb:	push   ecx
  43b2bc:	inc    ecx
  43b2bd:	inc    ebp
  43b2be:	inc    ecx
  43b2bf:	inc    ecx
  43b2c0:	push   esi
  43b2c1:	xor    DWORD PTR [edx],esi
  43b2c3:	inc    eax
  43b2c4:	push   esi
  43b2c5:	aas    
  43b2c6:	and    al,0x5f
  43b2c8:	push   ebx
  43b2c9:	je     0x43b33d
  43b2cb:	imul   ebp,DWORD PTR [esi+0x67],0x6e6f635f
  43b2d2:	jae    0x43b348
  43b2d4:	pop    edi
  43b2d5:	imul   esi,DWORD PTR [ebp+eiz*2+0x72],0x726f7461
  43b2dd:	inc    eax
  43b2de:	pop    edi
  43b2df:	push   edi
  43b2e0:	push   ebp
  43b2e1:	aas    
  43b2e2:	and    al,0x63
  43b2e4:	push   0x745f7261
  43b2e9:	jb     0x43b34c
  43b2eb:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x7340575f
  43b2f3:	je     0x43b359
  43b2f5:	inc    eax
  43b2f6:	inc    eax
  43b2f7:	push   esi
  43b2f8:	aas    
  43b2f9:	and    al,0x61
  43b2fb:	ins    BYTE PTR es:[edi],dx
  43b2fc:	ins    BYTE PTR es:[edi],dx
  43b2fd:	outs   dx,DWORD PTR ds:[esi]
  43b2fe:	arpl   WORD PTR [ecx+0x74],sp
  43b301:	outs   dx,DWORD PTR ds:[esi]
  43b302:	jb     0x43b344
  43b304:	pop    edi
  43b305:	push   edi
  43b306:	inc    eax
  43b307:	xor    al,BYTE PTR [eax+0x40]
  43b30a:	xor    al,BYTE PTR [eax+0x30]
  43b30d:	inc    ecx
  43b30e:	inc    edx
  43b30f:	push   esi
  43b310:	xor    DWORD PTR [edx],esi
  43b312:	inc    eax
  43b313:	inc    eax
  43b314:	pop    edx
  43b315:	add    BYTE PTR [ebx+0x6f633f06],al
  43b31b:	outs   dx,BYTE PTR ds:[esi]
  43b31c:	jae    0x43b392
  43b31e:	jb     0x43b395
  43b320:	arpl   WORD PTR [eax+eax*2+0x3f],si
  43b324:	and    al,0x61
  43b326:	ins    BYTE PTR es:[edi],dx
  43b327:	ins    BYTE PTR es:[edi],dx
  43b328:	outs   dx,DWORD PTR ds:[esi]
  43b329:	arpl   WORD PTR [ecx+0x74],sp
  43b32c:	outs   dx,DWORD PTR ds:[esi]
  43b32d:	jb     0x43b36f
  43b32f:	pop    edi
  43b330:	push   edi
  43b331:	inc    eax
  43b332:	jae    0x43b3a8
  43b334:	fs inc eax
  43b336:	inc    eax
  43b337:	push   ecx
  43b338:	inc    ecx
  43b339:	inc    ebp
  43b33a:	pop    eax
  43b33b:	push   eax
  43b33c:	inc    ecx
  43b33d:	pop    edi
  43b33e:	push   edi
  43b33f:	inc    ecx
  43b340:	inc    edx
  43b341:	pop    edi
  43b342:	push   edi
  43b343:	inc    eax
  43b344:	pop    edx
  43b345:	add    BYTE PTR [esi+0x65643f06],dh
  43b34b:	jae    0x43b3c1
  43b34d:	jb     0x43b3be
  43b34f:	jns    0x43b391
  43b351:	aas    
  43b352:	and    al,0x61
  43b354:	ins    BYTE PTR es:[edi],dx
  43b355:	ins    BYTE PTR es:[edi],dx
  43b356:	outs   dx,DWORD PTR ds:[esi]
  43b357:	arpl   WORD PTR [ecx+0x74],sp
  43b35a:	outs   dx,DWORD PTR ds:[esi]
  43b35b:	jb     0x43b39d
  43b35d:	pop    edi
  43b35e:	push   edi
  43b35f:	inc    eax
  43b360:	jae    0x43b3d6
  43b362:	fs inc eax
  43b364:	inc    eax
  43b365:	push   ecx
  43b366:	inc    ecx
  43b367:	inc    ebp
  43b368:	pop    eax
  43b369:	push   eax
  43b36a:	inc    ecx
  43b36b:	pop    edi
  43b36c:	push   edi
  43b36d:	inc    eax
  43b36e:	pop    edx
  43b36f:	add    ah,bl
  43b371:	pop    es
  43b372:	aas    
  43b373:	gs jb  0x43b3d7
  43b376:	jae    0x43b3dd
  43b378:	inc    eax
  43b379:	aas    
  43b37a:	and    al,0x62
  43b37c:	popa   
  43b37d:	jae    0x43b3e8
  43b37f:	arpl   WORD PTR [edi+0x73],bx
  43b382:	je     0x43b3f6
  43b384:	imul   ebp,DWORD PTR [esi+0x67],0x55575f40
  43b38b:	aas    
  43b38c:	and    al,0x63
  43b38e:	push   0x745f7261
  43b393:	jb     0x43b3f6
  43b395:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x7340575f
  43b39d:	je     0x43b403
  43b39f:	inc    eax
  43b3a0:	inc    eax
  43b3a1:	push   esi
  43b3a2:	aas    
  43b3a3:	and    al,0x61
  43b3a5:	ins    BYTE PTR es:[edi],dx
  43b3a6:	ins    BYTE PTR es:[edi],dx
  43b3a7:	outs   dx,DWORD PTR ds:[esi]
  43b3a8:	arpl   WORD PTR [ecx+0x74],sp
  43b3ab:	outs   dx,DWORD PTR ds:[esi]
  43b3ac:	jb     0x43b3ee
  43b3ae:	pop    edi
  43b3af:	push   edi
  43b3b0:	inc    eax
  43b3b1:	xor    al,BYTE PTR [eax+0x40]
  43b3b4:	jae    0x43b42a
  43b3b6:	fs inc eax
  43b3b8:	inc    eax
  43b3b9:	push   ecx
  43b3ba:	inc    ecx
  43b3bb:	inc    ebp
  43b3bc:	aas    
  43b3bd:	inc    ecx
  43b3be:	push   esi
  43b3bf:	aas    
  43b3c0:	and    al,0x5f
  43b3c2:	push   ebx
  43b3c3:	je     0x43b437
  43b3c5:	imul   ebp,DWORD PTR [esi+0x67],0x6574695f
  43b3cc:	jb     0x43b42f
  43b3ce:	je     0x43b43f
  43b3d0:	jb     0x43b412
  43b3d2:	pop    edi
  43b3d3:	push   edi
  43b3d4:	push   ebp
  43b3d5:	aas    
  43b3d6:	and    al,0x63
  43b3d8:	push   0x745f7261
  43b3dd:	jb     0x43b440
  43b3df:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x7340575f
  43b3e7:	je     0x43b44d
  43b3e9:	inc    eax
  43b3ea:	inc    eax
  43b3eb:	push   esi
  43b3ec:	aas    
  43b3ed:	and    al,0x61
  43b3ef:	ins    BYTE PTR es:[edi],dx
  43b3f0:	ins    BYTE PTR es:[edi],dx
  43b3f1:	outs   dx,DWORD PTR ds:[esi]
  43b3f2:	arpl   WORD PTR [ecx+0x74],sp
  43b3f5:	outs   dx,DWORD PTR ds:[esi]
  43b3f6:	jb     0x43b438
  43b3f8:	pop    edi
  43b3f9:	push   edi
  43b3fa:	inc    eax
  43b3fb:	xor    al,BYTE PTR [eax+0x40]
  43b3fe:	xor    al,BYTE PTR [eax+0x56]
  43b401:	aas    
  43b402:	and    al,0x5f
  43b404:	push   ebx
  43b405:	je     0x43b479
  43b407:	imul   ebp,DWORD PTR [esi+0x67],0x6e6f635f
  43b40e:	jae    0x43b484
  43b410:	pop    edi
  43b411:	imul   esi,DWORD PTR [ebp+eiz*2+0x72],0x726f7461
  43b419:	inc    eax
  43b41a:	pop    edi
  43b41b:	push   edi
  43b41c:	push   ebp
  43b41d:	aas    
  43b41e:	and    al,0x63
  43b420:	push   0x745f7261
  43b425:	jb     0x43b488
  43b427:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x7340575f
  43b42f:	je     0x43b495
  43b431:	inc    eax
  43b432:	inc    eax
  43b433:	push   esi
  43b434:	aas    
  43b435:	and    al,0x61
  43b437:	ins    BYTE PTR es:[edi],dx
  43b438:	ins    BYTE PTR es:[edi],dx
  43b439:	outs   dx,DWORD PTR ds:[esi]
  43b43a:	arpl   WORD PTR [ecx+0x74],sp
  43b43d:	outs   dx,DWORD PTR ds:[esi]
  43b43e:	jb     0x43b480
  43b440:	pop    edi
  43b441:	push   edi
  43b442:	inc    eax
  43b443:	xor    al,BYTE PTR [eax+0x40]
  43b446:	xor    al,BYTE PTR [eax+0x30]
  43b449:	inc    eax
  43b44a:	pop    edx
  43b44b:	add    BYTE PTR [ebp+0x3],ah
  43b44e:	aas    
  43b44f:	aas    
  43b450:	pop    ecx
  43b451:	aas    
  43b452:	and    al,0x62
  43b454:	popa   
  43b455:	jae    0x43b4c0
  43b457:	arpl   WORD PTR [edi+0x73],bx
  43b45a:	je     0x43b4ce
  43b45c:	imul   ebp,DWORD PTR [esi+0x67],0x55575f40
  43b463:	aas    
  43b464:	and    al,0x63
  43b466:	push   0x745f7261
  43b46b:	jb     0x43b4ce
  43b46d:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x7340575f
  43b475:	je     0x43b4db
  43b477:	inc    eax
  43b478:	inc    eax
  43b479:	push   esi
  43b47a:	aas    
  43b47b:	and    al,0x61
  43b47d:	ins    BYTE PTR es:[edi],dx
  43b47e:	ins    BYTE PTR es:[edi],dx
  43b47f:	outs   dx,DWORD PTR ds:[esi]
  43b480:	arpl   WORD PTR [ecx+0x74],sp
  43b483:	outs   dx,DWORD PTR ds:[esi]
  43b484:	jb     0x43b4c6
  43b486:	pop    edi
  43b487:	push   edi
  43b488:	inc    eax
  43b489:	xor    al,BYTE PTR [eax+0x40]
  43b48c:	jae    0x43b502
  43b48e:	fs inc eax
  43b490:	inc    eax
  43b491:	push   ecx
  43b492:	inc    ecx
  43b493:	inc    ebp
  43b494:	inc    ecx
  43b495:	inc    ecx
  43b496:	push   esi
  43b497:	xor    BYTE PTR [ecx],dh
  43b499:	inc    eax
  43b49a:	push   eax
  43b49b:	inc    edx
  43b49c:	pop    edi
  43b49d:	push   edi
  43b49e:	inc    eax
  43b49f:	pop    edx
  43b4a0:	add    BYTE PTR [eax],al
  43b4a2:	add    edi,DWORD PTR fs:[edi]
  43b4a5:	aas    
  43b4a6:	pop    ecx
  43b4a7:	aas    
  43b4a8:	and    al,0x62
  43b4aa:	popa   
  43b4ab:	jae    0x43b516
  43b4ad:	arpl   WORD PTR [edi+0x73],bx
  43b4b0:	je     0x43b524
  43b4b2:	imul   ebp,DWORD PTR [esi+0x67],0x55575f40
  43b4b9:	aas    
  43b4ba:	and    al,0x63
  43b4bc:	push   0x745f7261
  43b4c1:	jb     0x43b524
  43b4c3:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x7340575f
  43b4cb:	je     0x43b531
  43b4cd:	inc    eax
  43b4ce:	inc    eax
  43b4cf:	push   esi
  43b4d0:	aas    
  43b4d1:	and    al,0x61
  43b4d3:	ins    BYTE PTR es:[edi],dx
  43b4d4:	ins    BYTE PTR es:[edi],dx
  43b4d5:	outs   dx,DWORD PTR ds:[esi]
  43b4d6:	arpl   WORD PTR [ecx+0x74],sp
  43b4d9:	outs   dx,DWORD PTR ds:[esi]
  43b4da:	jb     0x43b51c
  43b4dc:	pop    edi
  43b4dd:	push   edi
  43b4de:	inc    eax
  43b4df:	xor    al,BYTE PTR [eax+0x40]
  43b4e2:	jae    0x43b558
  43b4e4:	fs inc eax
  43b4e6:	inc    eax
  43b4e7:	push   ecx
  43b4e8:	inc    ecx
  43b4e9:	inc    ebp
  43b4ea:	inc    ecx
  43b4eb:	inc    ecx
  43b4ec:	push   esi
  43b4ed:	xor    BYTE PTR [ecx],dh
  43b4ef:	inc    eax
  43b4f0:	inc    ecx
  43b4f1:	inc    edx
  43b4f2:	push   esi
  43b4f3:	xor    BYTE PTR [ecx],dh
  43b4f5:	inc    eax
  43b4f6:	inc    eax
  43b4f7:	pop    edx
  43b4f8:	add    BYTE PTR [eax],al
  43b4fa:	xchg   ebp,eax
  43b4fb:	or     edi,DWORD PTR [edi]
  43b4fd:	jae    0x43b573
  43b4ff:	jb     0x43b541
  43b501:	aas    
  43b502:	and    al,0x62
  43b504:	popa   
  43b505:	jae    0x43b570
  43b507:	arpl   WORD PTR [edi+0x6f],bx
  43b50a:	jae    0x43b580
  43b50c:	jb     0x43b577
  43b50e:	outs   dx,BYTE PTR ds:[esi]
  43b50f:	addr16 jae 0x43b586
  43b512:	jb     0x43b579
  43b514:	popa   
  43b515:	ins    DWORD PTR es:[edi],dx
  43b516:	inc    eax
  43b517:	inc    esp
  43b518:	push   ebp
  43b519:	aas    
  43b51a:	and    al,0x63
  43b51c:	push   0x745f7261
  43b521:	jb     0x43b584
  43b523:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x74734044
  43b52b:	fs inc eax
  43b52d:	inc    eax
  43b52e:	push   esi
  43b52f:	aas    
  43b530:	and    al,0x61
  43b532:	ins    BYTE PTR es:[edi],dx
  43b533:	ins    BYTE PTR es:[edi],dx
  43b534:	outs   dx,DWORD PTR ds:[esi]
  43b535:	arpl   WORD PTR [ecx+0x74],sp
  43b538:	outs   dx,DWORD PTR ds:[esi]
  43b539:	jb     0x43b57b
  43b53b:	inc    esp
  43b53c:	inc    eax
  43b53d:	xor    al,BYTE PTR [eax+0x40]
  43b540:	jae    0x43b5b6
  43b542:	fs inc eax
  43b544:	inc    eax
  43b545:	push   ecx
  43b546:	inc    edx
  43b547:	inc    ebp
  43b548:	aas    
  43b549:	inc    ecx
  43b54a:	push   esi
  43b54b:	aas    
  43b54c:	and    al,0x62
  43b54e:	popa   
  43b54f:	jae    0x43b5ba
  43b551:	arpl   WORD PTR [edi+0x73],bx
  43b554:	je     0x43b5c8
  43b556:	imul   ebp,DWORD PTR [esi+0x67],0x3f554440
  43b55d:	and    al,0x63
  43b55f:	push   0x745f7261
  43b564:	jb     0x43b5c7
  43b566:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x74734044
  43b56e:	fs inc eax
  43b570:	inc    eax
  43b571:	push   esi
  43b572:	aas    
  43b573:	and    al,0x61
  43b575:	ins    BYTE PTR es:[edi],dx
  43b576:	ins    BYTE PTR es:[edi],dx
  43b577:	outs   dx,DWORD PTR ds:[esi]
  43b578:	arpl   WORD PTR [ecx+0x74],sp
  43b57b:	outs   dx,DWORD PTR ds:[esi]
  43b57c:	jb     0x43b5be
  43b57e:	inc    esp
  43b57f:	inc    eax
  43b580:	xor    al,BYTE PTR [eax+0x40]
  43b583:	xor    al,BYTE PTR [eax+0x58]
  43b586:	pop    edx
  43b587:	add    BYTE PTR [ebx+0xb],dl
  43b58a:	aas    
  43b58b:	jae    0x43b5f2
  43b58d:	je     0x43b602
  43b58f:	je     0x43b5f2
  43b591:	je     0x43b5f8
  43b593:	inc    eax
  43b594:	aas    
  43b595:	and    al,0x62
  43b597:	popa   
  43b598:	jae    0x43b603
  43b59a:	arpl   WORD PTR [edi+0x69],bx
  43b59d:	outs   dx,DWORD PTR ds:[esi]
  43b59e:	jae    0x43b5e0
  43b5a0:	inc    esp
  43b5a1:	push   ebp
  43b5a2:	aas    
  43b5a3:	and    al,0x63
  43b5a5:	push   0x745f7261
  43b5aa:	jb     0x43b60d
  43b5ac:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x74734044
  43b5b4:	fs inc eax
  43b5b6:	inc    eax
  43b5b7:	inc    eax
  43b5b8:	jae    0x43b62e
  43b5ba:	fs inc eax
  43b5bc:	inc    eax
  43b5bd:	push   ecx
  43b5be:	inc    ecx
  43b5bf:	inc    ebp
  43b5c0:	pop    eax
  43b5c1:	dec    eax
  43b5c2:	pop    edi
  43b5c3:	dec    esi
  43b5c4:	inc    eax
  43b5c5:	pop    edx
  43b5c6:	add    BYTE PTR [eax],al
  43b5c8:	or     BYTE PTR [ebx],0x3f
  43b5cb:	jae    0x43b63d
  43b5cd:	jne    0x43b643
  43b5cf:	arpl   WORD PTR [eax+0x3f],ax
  43b5d2:	and    al,0x62
  43b5d4:	popa   
  43b5d5:	jae    0x43b640
  43b5d7:	arpl   WORD PTR [edi+0x73],bx
  43b5da:	je     0x43b64e
  43b5dc:	gs popa 
  43b5de:	ins    DWORD PTR es:[edi],dx
  43b5df:	bound  esi,QWORD PTR [ebp+0x66]
  43b5e2:	inc    eax
  43b5e3:	inc    esp
  43b5e4:	push   ebp
  43b5e5:	aas    
  43b5e6:	and    al,0x63
  43b5e8:	push   0x745f7261
  43b5ed:	jb     0x43b650
  43b5ef:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x74734044
  43b5f7:	fs inc eax
  43b5f9:	inc    eax
  43b5fa:	inc    eax
  43b5fb:	jae    0x43b671
  43b5fd:	fs inc eax
  43b5ff:	inc    eax
  43b600:	push   ecx
  43b601:	inc    ecx
  43b602:	inc    ebp
  43b603:	dec    eax
  43b604:	inc    esp
  43b605:	inc    eax
  43b606:	pop    edx
  43b607:	add    BYTE PTR [ebp+0x70733f0b],al
  43b60d:	jne    0x43b683
  43b60f:	outs   dx,BYTE PTR ds:[esi]
  43b610:	inc    eax
  43b611:	aas    
  43b612:	and    al,0x62
  43b614:	popa   
  43b615:	jae    0x43b680
  43b617:	arpl   WORD PTR [edi+0x73],bx
  43b61a:	je     0x43b68e
  43b61c:	gs popa 
  43b61e:	ins    DWORD PTR es:[edi],dx
  43b61f:	bound  esi,QWORD PTR [ebp+0x66]
  43b622:	inc    eax
  43b623:	inc    esp
  43b624:	push   ebp
  43b625:	aas    
  43b626:	and    al,0x63
  43b628:	push   0x745f7261
  43b62d:	jb     0x43b690
  43b62f:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x74734044
  43b637:	fs inc eax
  43b639:	inc    eax
  43b63a:	inc    eax
  43b63b:	jae    0x43b6b1
  43b63d:	fs inc eax
  43b63f:	inc    eax
  43b640:	push   ecx
  43b641:	inc    ecx
  43b642:	inc    ebp
  43b643:	dec    eax
  43b644:	push   eax
  43b645:	inc    edx
  43b646:	inc    esp
  43b647:	dec    eax
  43b648:	inc    eax
  43b649:	pop    edx
  43b64a:	add    BYTE PTR [eax],al
  43b64c:	add    BYTE PTR ds:0x734f5f3f,0x66
  43b653:	js     0x43b695
  43b655:	aas    
  43b656:	and    al,0x62
  43b658:	popa   
  43b659:	jae    0x43b6c4
  43b65b:	arpl   WORD PTR [edi+0x6f],bx
  43b65e:	jae    0x43b6d4
  43b660:	jb     0x43b6c7
  43b662:	popa   
  43b663:	ins    DWORD PTR es:[edi],dx
  43b664:	inc    eax
  43b665:	inc    esp
  43b666:	push   ebp
  43b667:	aas    
  43b668:	and    al,0x63
  43b66a:	push   0x745f7261
  43b66f:	jb     0x43b6d2
  43b671:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x74734044
  43b679:	fs inc eax
  43b67b:	inc    eax
  43b67c:	inc    eax
  43b67d:	jae    0x43b6f3
  43b67f:	fs inc eax
  43b681:	inc    eax
  43b682:	push   ecx
  43b683:	inc    ecx
  43b684:	inc    ebp
  43b685:	pop    eax
  43b686:	pop    eax
  43b687:	pop    edx
  43b688:	add    BYTE PTR [eax],al
  43b68a:	xor    BYTE PTR [eax],cl
  43b68c:	aas    
  43b68d:	data16 ins BYTE PTR es:[edi],dx
  43b68f:	jne    0x43b704
  43b691:	push   0x62243f40
  43b696:	popa   
  43b697:	jae    0x43b702
  43b699:	arpl   WORD PTR [edi+0x6f],bx
  43b69c:	jae    0x43b712
  43b69e:	jb     0x43b705
  43b6a0:	popa   
  43b6a1:	ins    DWORD PTR es:[edi],dx
  43b6a2:	inc    eax
  43b6a3:	inc    esp
  43b6a4:	push   ebp
  43b6a5:	aas    
  43b6a6:	and    al,0x63
  43b6a8:	push   0x745f7261
  43b6ad:	jb     0x43b710
  43b6af:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x74734044
  43b6b7:	fs inc eax
  43b6b9:	inc    eax
  43b6ba:	inc    eax
  43b6bb:	jae    0x43b731
  43b6bd:	fs inc eax
  43b6bf:	inc    eax
  43b6c0:	push   ecx
  43b6c1:	inc    ecx
  43b6c2:	inc    ebp
  43b6c3:	inc    ecx
  43b6c4:	inc    ecx
  43b6c5:	push   esi
  43b6c6:	xor    DWORD PTR [edx],esi
  43b6c8:	inc    eax
  43b6c9:	pop    eax
  43b6ca:	pop    edx
  43b6cb:	add    bl,dh
  43b6cd:	or     edi,DWORD PTR [edi]
  43b6cf:	jne    0x43b73f
  43b6d1:	arpl   WORD PTR [ecx+0x75],sp
  43b6d4:	addr16 push 0x78655f74
  43b6da:	arpl   WORD PTR [ebp+0x70],sp
  43b6dd:	je     0x43b748
  43b6df:	outs   dx,DWORD PTR ds:[esi]
  43b6e0:	outs   dx,BYTE PTR ds:[esi]
  43b6e1:	inc    eax
  43b6e2:	jae    0x43b758
  43b6e4:	fs inc eax
  43b6e6:	inc    eax
  43b6e7:	pop    ecx
  43b6e8:	inc    ecx
  43b6e9:	pop    edi
  43b6ea:	dec    esi
  43b6eb:	pop    eax
  43b6ec:	pop    edx
  43b6ed:	add    dh,dl
  43b6ef:	add    eax,0x6e555f3f
  43b6f4:	ins    BYTE PTR es:[edi],dx
  43b6f5:	outs   dx,DWORD PTR ds:[esi]
  43b6f6:	arpl   WORD PTR [ebx+0x40],bp
  43b6f9:	aas    
  43b6fa:	and    al,0x62
  43b6fc:	popa   
  43b6fd:	jae    0x43b768
  43b6ff:	arpl   WORD PTR [edi+0x73],bx
  43b702:	je     0x43b776
  43b704:	gs popa 
  43b706:	ins    DWORD PTR es:[edi],dx
  43b707:	bound  esi,QWORD PTR [ebp+0x66]
  43b70a:	inc    eax
  43b70b:	inc    esp
  43b70c:	push   ebp
  43b70d:	aas    
  43b70e:	and    al,0x63
  43b710:	push   0x745f7261
  43b715:	jb     0x43b778
  43b717:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x74734044
  43b71f:	fs inc eax
  43b721:	inc    eax
  43b722:	inc    eax
  43b723:	jae    0x43b799
  43b725:	fs inc eax
  43b727:	inc    eax
  43b728:	push   ecx
  43b729:	inc    ecx
  43b72a:	inc    ebp
  43b72b:	pop    eax
  43b72c:	pop    eax
  43b72d:	pop    edx
  43b72e:	add    BYTE PTR [eax],al
  43b730:	push   edi
  43b731:	add    eax,0x6f4c5f3f
  43b736:	arpl   WORD PTR [ebx+0x40],bp
  43b739:	aas    
  43b73a:	and    al,0x62
  43b73c:	popa   
  43b73d:	jae    0x43b7a8
  43b73f:	arpl   WORD PTR [edi+0x73],bx
  43b742:	je     0x43b7b6
  43b744:	gs popa 
  43b746:	ins    DWORD PTR es:[edi],dx
  43b747:	bound  esi,QWORD PTR [ebp+0x66]
  43b74a:	inc    eax
  43b74b:	inc    esp
  43b74c:	push   ebp
  43b74d:	aas    
  43b74e:	and    al,0x63
  43b750:	push   0x745f7261
  43b755:	jb     0x43b7b8
  43b757:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x74734044
  43b75f:	fs inc eax
  43b761:	inc    eax
  43b762:	inc    eax
  43b763:	jae    0x43b7d9
  43b765:	fs inc eax
  43b767:	inc    eax
  43b768:	push   ecx
  43b769:	inc    ecx
  43b76a:	inc    ebp
  43b76b:	pop    eax
  43b76c:	pop    eax
  43b76d:	pop    edx
  43b76e:	add    BYTE PTR [eax],al
  43b770:	or     eax,DWORD PTR [edi+edi*1]
  43b773:	aas    
  43b774:	pop    edi
  43b775:	inc    esp
  43b776:	aas    
  43b777:	and    al,0x62
  43b779:	popa   
  43b77a:	jae    0x43b7e5
  43b77c:	arpl   WORD PTR [edi+0x6f],bx
  43b77f:	jae    0x43b7f5
  43b781:	jb     0x43b7ec
  43b783:	outs   dx,BYTE PTR ds:[esi]
  43b784:	addr16 jae 0x43b7fb
  43b787:	jb     0x43b7ee
  43b789:	popa   
  43b78a:	ins    DWORD PTR es:[edi],dx
  43b78b:	inc    eax
  43b78c:	inc    esp
  43b78d:	push   ebp
  43b78e:	aas    
  43b78f:	and    al,0x63
  43b791:	push   0x745f7261
  43b796:	jb     0x43b7f9
  43b798:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x74734044
  43b7a0:	fs inc eax
  43b7a2:	inc    eax
  43b7a3:	push   esi
  43b7a4:	aas    
  43b7a5:	and    al,0x61
  43b7a7:	ins    BYTE PTR es:[edi],dx
  43b7a8:	ins    BYTE PTR es:[edi],dx
  43b7a9:	outs   dx,DWORD PTR ds:[esi]
  43b7aa:	arpl   WORD PTR [ecx+0x74],sp
  43b7ad:	outs   dx,DWORD PTR ds:[esi]
  43b7ae:	jb     0x43b7f0
  43b7b0:	inc    esp
  43b7b1:	inc    eax
  43b7b2:	xor    al,BYTE PTR [eax+0x40]
  43b7b5:	jae    0x43b82b
  43b7b7:	fs inc eax
  43b7b9:	inc    eax
  43b7ba:	push   ecx
  43b7bb:	inc    ecx
  43b7bc:	inc    ebp
  43b7bd:	pop    eax
  43b7be:	pop    eax
  43b7bf:	pop    edx
  43b7c0:	add    BYTE PTR [eax],al
  43b7c2:	add    DWORD PTR fs:[edi],edi
  43b7c5:	aas    
  43b7c6:	xor    BYTE PTR [edi],bh
  43b7c8:	and    al,0x62
  43b7ca:	popa   
  43b7cb:	jae    0x43b836
  43b7cd:	arpl   WORD PTR [edi+0x6f],bx
  43b7d0:	jae    0x43b846
  43b7d2:	jb     0x43b83d
  43b7d4:	outs   dx,BYTE PTR ds:[esi]
  43b7d5:	addr16 jae 0x43b84c
  43b7d8:	jb     0x43b83f
  43b7da:	popa   
  43b7db:	ins    DWORD PTR es:[edi],dx
  43b7dc:	inc    eax
  43b7dd:	inc    esp
  43b7de:	push   ebp
  43b7df:	aas    
  43b7e0:	and    al,0x63
  43b7e2:	push   0x745f7261
  43b7e7:	jb     0x43b84a
  43b7e9:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x74734044
  43b7f1:	fs inc eax
  43b7f3:	inc    eax
  43b7f4:	push   esi
  43b7f5:	aas    
  43b7f6:	and    al,0x61
  43b7f8:	ins    BYTE PTR es:[edi],dx
  43b7f9:	ins    BYTE PTR es:[edi],dx
  43b7fa:	outs   dx,DWORD PTR ds:[esi]
  43b7fb:	arpl   WORD PTR [ecx+0x74],sp
  43b7fe:	outs   dx,DWORD PTR ds:[esi]
  43b7ff:	jb     0x43b841
  43b801:	inc    esp
  43b802:	inc    eax
  43b803:	xor    al,BYTE PTR [eax+0x40]
  43b806:	jae    0x43b87c
  43b808:	fs inc eax
  43b80a:	inc    eax
  43b80b:	push   ecx
  43b80c:	inc    ecx
  43b80d:	inc    ebp
  43b80e:	inc    eax
  43b80f:	dec    eax
  43b810:	inc    eax
  43b811:	pop    edx
  43b812:	add    BYTE PTR [eax],al
  43b814:	imul   eax,DWORD PTR [eax],0x3f243f3f
  43b81a:	dec    eax
  43b81b:	inc    esp
  43b81c:	push   ebp
  43b81d:	aas    
  43b81e:	and    al,0x63
  43b820:	push   0x745f7261
  43b825:	jb     0x43b888
  43b827:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x74734044
  43b82f:	fs inc eax
  43b831:	inc    eax
  43b832:	push   esi
  43b833:	aas    
  43b834:	and    al,0x61
  43b836:	ins    BYTE PTR es:[edi],dx
  43b837:	ins    BYTE PTR es:[edi],dx
  43b838:	outs   dx,DWORD PTR ds:[esi]
  43b839:	arpl   WORD PTR [ecx+0x74],sp
  43b83c:	outs   dx,DWORD PTR ds:[esi]
  43b83d:	jb     0x43b87f
  43b83f:	inc    esp
  43b840:	inc    eax
  43b841:	xor    DWORD PTR [eax+0x40],eax
  43b844:	jae    0x43b8ba
  43b846:	fs inc eax
  43b848:	inc    eax
  43b849:	pop    ecx
  43b84a:	inc    ecx
  43b84b:	aas    
  43b84c:	inc    ecx
  43b84d:	push   esi
  43b84e:	aas    
  43b84f:	and    al,0x62
  43b851:	popa   
  43b852:	jae    0x43b8bd
  43b854:	arpl   WORD PTR [edi+0x73],bx
  43b857:	je     0x43b8cb
  43b859:	imul   ebp,DWORD PTR [esi+0x67],0x3f554440
  43b860:	and    al,0x63
  43b862:	push   0x745f7261
  43b867:	jb     0x43b8ca
  43b869:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x74734044
  43b871:	fs inc eax
  43b873:	inc    eax
  43b874:	push   esi
  43b875:	aas    
  43b876:	and    al,0x61
  43b878:	ins    BYTE PTR es:[edi],dx
  43b879:	ins    BYTE PTR es:[edi],dx
  43b87a:	outs   dx,DWORD PTR ds:[esi]
  43b87b:	arpl   WORD PTR [ecx+0x74],sp
  43b87e:	outs   dx,DWORD PTR ds:[esi]
  43b87f:	jb     0x43b8c1
  43b881:	inc    esp
  43b882:	inc    eax
  43b883:	xor    al,BYTE PTR [eax+0x40]
  43b886:	xor    BYTE PTR [eax+0x50],al
  43b889:	inc    edx
  43b88a:	inc    esp
  43b88b:	inc    ecx
  43b88c:	inc    edx
  43b88d:	push   esi
  43b88e:	xor    DWORD PTR [eax],esi
  43b890:	inc    eax
  43b891:	inc    eax
  43b892:	pop    edx
  43b893:	add    BYTE PTR [ebx+0x343f3f02],dh
  43b899:	aas    
  43b89a:	and    al,0x62
  43b89c:	popa   
  43b89d:	jae    0x43b908
  43b89f:	arpl   WORD PTR [edi+0x73],bx
  43b8a2:	je     0x43b916
  43b8a4:	imul   ebp,DWORD PTR [esi+0x67],0x3f554440
  43b8ab:	and    al,0x63
  43b8ad:	push   0x745f7261
  43b8b2:	jb     0x43b915
  43b8b4:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x74734044
  43b8bc:	fs inc eax
  43b8be:	inc    eax
  43b8bf:	push   esi
  43b8c0:	aas    
  43b8c1:	and    al,0x61
  43b8c3:	ins    BYTE PTR es:[edi],dx
  43b8c4:	ins    BYTE PTR es:[edi],dx
  43b8c5:	outs   dx,DWORD PTR ds:[esi]
  43b8c6:	arpl   WORD PTR [ecx+0x74],sp
  43b8c9:	outs   dx,DWORD PTR ds:[esi]
  43b8ca:	jb     0x43b90c
  43b8cc:	inc    esp
  43b8cd:	inc    eax
  43b8ce:	xor    al,BYTE PTR [eax+0x40]
  43b8d1:	jae    0x43b947
  43b8d3:	fs inc eax
  43b8d5:	inc    eax
  43b8d6:	push   ecx
  43b8d7:	inc    ecx
  43b8d8:	inc    ebp
  43b8d9:	inc    ecx
  43b8da:	inc    ecx
  43b8db:	push   esi
  43b8dc:	xor    BYTE PTR [ecx],dh
  43b8de:	inc    eax
  43b8df:	inc    ecx
  43b8e0:	inc    edx
  43b8e1:	push   esi
  43b8e2:	xor    BYTE PTR [ecx],dh
  43b8e4:	inc    eax
  43b8e5:	inc    eax
  43b8e6:	pop    edx
  43b8e7:	add    BYTE PTR [ebp+0x343f3f02],dh
  43b8ed:	aas    
  43b8ee:	and    al,0x62
  43b8f0:	popa   
  43b8f1:	jae    0x43b95c
  43b8f3:	arpl   WORD PTR [edi+0x73],bx
  43b8f6:	je     0x43b96a
  43b8f8:	imul   ebp,DWORD PTR [esi+0x67],0x3f554440
  43b8ff:	and    al,0x63
  43b901:	push   0x745f7261
  43b906:	jb     0x43b969
  43b908:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x74734044
  43b910:	fs inc eax
  43b912:	inc    eax
  43b913:	push   esi
  43b914:	aas    
  43b915:	and    al,0x61
  43b917:	ins    BYTE PTR es:[edi],dx
  43b918:	ins    BYTE PTR es:[edi],dx
  43b919:	outs   dx,DWORD PTR ds:[esi]
  43b91a:	arpl   WORD PTR [ecx+0x74],sp
  43b91d:	outs   dx,DWORD PTR ds:[esi]
  43b91e:	jb     0x43b960
  43b920:	inc    esp
  43b921:	inc    eax
  43b922:	xor    al,BYTE PTR [eax+0x40]
  43b925:	jae    0x43b99b
  43b927:	fs inc eax
  43b929:	inc    eax
  43b92a:	push   ecx
  43b92b:	inc    ecx
  43b92c:	inc    ebp
  43b92d:	inc    ecx
  43b92e:	inc    ecx
  43b92f:	push   esi
  43b930:	xor    BYTE PTR [ecx],dh
  43b932:	inc    eax
  43b933:	push   eax
  43b934:	inc    edx
  43b935:	inc    esp
  43b936:	inc    eax
  43b937:	pop    edx
  43b938:	add    BYTE PTR [eax],al
  43b93a:	mov    ecx,0x343f3f02
  43b93f:	aas    
  43b940:	and    al,0x62
  43b942:	popa   
  43b943:	jae    0x43b9ae
  43b945:	arpl   WORD PTR [edi+0x73],bx
  43b948:	je     0x43b9bc
  43b94a:	imul   ebp,DWORD PTR [esi+0x67],0x55575f40
  43b951:	aas    
  43b952:	and    al,0x63
  43b954:	push   0x745f7261
  43b959:	jb     0x43b9bc
  43b95b:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x7340575f
  43b963:	je     0x43b9c9
  43b965:	inc    eax
  43b966:	inc    eax
  43b967:	push   esi
  43b968:	aas    
  43b969:	and    al,0x61
  43b96b:	ins    BYTE PTR es:[edi],dx
  43b96c:	ins    BYTE PTR es:[edi],dx
  43b96d:	outs   dx,DWORD PTR ds:[esi]
  43b96e:	arpl   WORD PTR [ecx+0x74],sp
  43b971:	outs   dx,DWORD PTR ds:[esi]
  43b972:	jb     0x43b9b4
  43b974:	pop    edi
  43b975:	push   edi
  43b976:	inc    eax
  43b977:	xor    al,BYTE PTR [eax+0x40]
  43b97a:	jae    0x43b9f0
  43b97c:	fs inc eax
  43b97e:	inc    eax
  43b97f:	push   ecx
  43b980:	inc    ecx
  43b981:	inc    ebp
  43b982:	inc    ecx
  43b983:	inc    ecx
  43b984:	push   esi
  43b985:	xor    BYTE PTR [ecx],dh
  43b987:	inc    eax
  43b988:	inc    ecx
  43b989:	inc    edx
  43b98a:	push   esi
  43b98b:	xor    BYTE PTR [ecx],dh
  43b98d:	inc    eax
  43b98e:	inc    eax
  43b98f:	pop    edx
  43b990:	add    BYTE PTR [eax],al
  43b992:	pushf  
  43b993:	add    bh,BYTE PTR [edi]
  43b995:	aas    
  43b996:	xor    DWORD PTR [edi+ebp*2+0x63],ebp
  43b99a:	popa   
  43b99b:	ins    BYTE PTR es:[edi],dx
  43b99c:	gs inc eax
  43b99e:	jae    0x43ba14
  43b9a0:	fs inc eax
  43b9a2:	inc    eax
  43b9a3:	push   ecx
  43b9a4:	inc    ecx
  43b9a5:	inc    ebp
  43b9a6:	inc    eax
  43b9a7:	pop    eax
  43b9a8:	pop    edx
  43b9a9:	add    BYTE PTR [ebx+0x313f3f02],dl
  43b9af:	pop    edi
  43b9b0:	dec    esp
  43b9b1:	outs   dx,DWORD PTR ds:[esi]
  43b9b2:	arpl   WORD PTR [ebx+0x69],bp
  43b9b5:	je     0x43b9f7
  43b9b7:	jae    0x43ba2d
  43b9b9:	fs inc eax
  43b9bb:	inc    eax
  43b9bc:	push   ecx
  43b9bd:	inc    ecx
  43b9be:	inc    ebp
  43b9bf:	inc    eax
  43b9c0:	pop    eax
  43b9c1:	pop    edx
  43b9c2:	add    BYTE PTR [eax],al
  43b9c4:	sbb    al,0x2
  43b9c6:	aas    
  43b9c7:	aas    
  43b9c8:	xor    BYTE PTR [edi+0x4c],bl
  43b9cb:	outs   dx,DWORD PTR ds:[esi]
  43b9cc:	arpl   WORD PTR [ebx+0x69],bp
  43b9cf:	je     0x43ba11
  43b9d1:	jae    0x43ba47
  43b9d3:	fs inc eax
  43b9d5:	inc    eax
  43b9d6:	push   ecx
  43b9d7:	inc    ecx
  43b9d8:	inc    ebp
  43b9d9:	inc    eax
  43b9da:	dec    eax
  43b9db:	inc    eax
  43b9dc:	pop    edx
  43b9dd:	add    BYTE PTR [edi],ch
  43b9df:	add    bh,BYTE PTR [edi]
  43b9e1:	aas    
  43b9e2:	xor    BYTE PTR [edi+ebp*2+0x63],ch
  43b9e6:	popa   
  43b9e7:	ins    BYTE PTR es:[edi],dx
  43b9e8:	gs inc eax
  43b9ea:	jae    0x43ba60
  43b9ec:	fs inc eax
  43b9ee:	inc    eax
  43b9ef:	push   ecx
  43b9f0:	inc    ecx
  43b9f1:	inc    ebp
  43b9f2:	inc    eax
  43b9f3:	pop    eax
  43b9f4:	pop    edx
  43b9f5:	add    bl,bh
  43b9f7:	add    al,0x3f
  43b9f9:	pop    edi
  43b9fa:	dec    ecx
  43b9fb:	outs   dx,BYTE PTR ds:[esi]
  43b9fc:	arpl   WORD PTR [edx+0x65],si
  43b9ff:	inc    ax
  43ba01:	popaw  
  43ba03:	arpl   WORD PTR [ebp+0x74],sp
  43ba06:	inc    eax
  43ba07:	ins    BYTE PTR es:[edi],dx
  43ba08:	outs   dx,DWORD PTR ds:[esi]
  43ba09:	arpl   WORD PTR [ecx+0x6c],sp
  43ba0c:	gs inc eax
  43ba0e:	jae    0x43ba84
  43ba10:	fs inc eax
  43ba12:	inc    eax
  43ba13:	push   ecx
  43ba14:	inc    ecx
  43ba15:	inc    ebp
  43ba16:	pop    eax
  43ba17:	pop    eax
  43ba18:	pop    edx
  43ba19:	add    ah,al
  43ba1b:	add    al,0x3f
  43ba1d:	pop    edi
  43ba1e:	inc    edi
  43ba1f:	gs je  0x43ba88
  43ba22:	popa   
  43ba23:	arpl   WORD PTR [ebp+0x74],sp
  43ba26:	inc    eax
  43ba27:	ins    BYTE PTR es:[edi],dx
  43ba28:	outs   dx,DWORD PTR ds:[esi]
  43ba29:	arpl   WORD PTR [ecx+0x6c],sp
  43ba2c:	gs inc eax
  43ba2e:	jae    0x43baa4
  43ba30:	fs inc eax
  43ba32:	inc    eax
  43ba33:	push   ecx
  43ba34:	inc    edx
  43ba35:	inc    ebp
  43ba36:	push   eax
  43ba37:	inc    edx
  43ba38:	push   esi
  43ba39:	popaw  
  43ba3b:	arpl   WORD PTR [ebp+0x74],sp
  43ba3e:	inc    eax
  43ba3f:	xor    DWORD PTR [edx],esi
  43ba41:	inc    eax
  43ba42:	dec    ecx
  43ba43:	inc    eax
  43ba44:	pop    edx
  43ba45:	add    BYTE PTR [esi+0x3],dl
  43ba48:	aas    
  43ba49:	aas    
  43ba4a:	inc    edx
  43ba4b:	imul   esp,DWORD PTR [eax+eax*2+0x6c],0x6c61636f
  43ba53:	gs inc eax
  43ba55:	jae    0x43bacb
  43ba57:	fs inc eax
  43ba59:	inc    eax
  43ba5a:	push   ecx
  43ba5b:	inc    ecx
  43ba5c:	inc    ebp
  43ba5d:	dec    ecx
  43ba5e:	pop    eax
  43ba5f:	pop    edx
  43ba60:	add    BYTE PTR [eax],al
  43ba62:	jle    0x43ba64
  43ba64:	aas    
  43ba65:	aas    
  43ba66:	and    al,0x3f
  43ba68:	dec    eax
  43ba69:	pop    edi
  43ba6a:	push   edi
  43ba6b:	push   ebp
  43ba6c:	aas    
  43ba6d:	and    al,0x63
  43ba6f:	push   0x745f7261
  43ba74:	jb     0x43bad7
  43ba76:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x7340575f
  43ba7e:	je     0x43bae4
  43ba80:	inc    eax
  43ba81:	inc    eax
  43ba82:	push   esi
  43ba83:	aas    
  43ba84:	and    al,0x61
  43ba86:	ins    BYTE PTR es:[edi],dx
  43ba87:	ins    BYTE PTR es:[edi],dx
  43ba88:	outs   dx,DWORD PTR ds:[esi]
  43ba89:	arpl   WORD PTR [ecx+0x74],sp
  43ba8c:	outs   dx,DWORD PTR ds:[esi]
  43ba8d:	jb     0x43bacf
  43ba8f:	pop    edi
  43ba90:	push   edi
  43ba91:	inc    eax
  43ba92:	xor    DWORD PTR [eax+0x40],eax
  43ba95:	jae    0x43bb0b
  43ba97:	fs inc eax
  43ba99:	inc    eax
  43ba9a:	pop    ecx
  43ba9b:	inc    ecx
  43ba9c:	aas    
  43ba9d:	inc    ecx
  43ba9e:	push   esi
  43ba9f:	aas    
  43baa0:	and    al,0x62
  43baa2:	popa   
  43baa3:	jae    0x43bb0e
  43baa5:	arpl   WORD PTR [edi+0x73],bx
  43baa8:	je     0x43bb1c
  43baaa:	imul   ebp,DWORD PTR [esi+0x67],0x55575f40
  43bab1:	aas    
  43bab2:	and    al,0x63
  43bab4:	push   0x745f7261
  43bab9:	jb     0x43bb1c
  43babb:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x7340575f
  43bac3:	je     0x43bb29
  43bac5:	inc    eax
  43bac6:	inc    eax
  43bac7:	push   esi
  43bac8:	aas    
  43bac9:	and    al,0x61
  43bacb:	ins    BYTE PTR es:[edi],dx
  43bacc:	ins    BYTE PTR es:[edi],dx
  43bacd:	outs   dx,DWORD PTR ds:[esi]
  43bace:	arpl   WORD PTR [ecx+0x74],sp
  43bad1:	outs   dx,DWORD PTR ds:[esi]
  43bad2:	jb     0x43bb14
  43bad4:	pop    edi
  43bad5:	push   edi
  43bad6:	inc    eax
  43bad7:	xor    al,BYTE PTR [eax+0x40]
  43bada:	xor    BYTE PTR [eax+0x50],al
  43badd:	inc    edx
  43bade:	pop    edi
  43badf:	push   edi
  43bae0:	inc    ecx
  43bae1:	inc    edx
  43bae2:	push   esi
  43bae3:	xor    DWORD PTR [eax],esi
  43bae5:	inc    eax
  43bae6:	inc    eax
  43bae7:	pop    edx
  43bae8:	add    BYTE PTR [eax],al
  43baea:	jnp    0x43baec
  43baec:	aas    
  43baed:	aas    
  43baee:	and    al,0x3f
  43baf0:	dec    eax
  43baf1:	pop    edi
  43baf2:	push   edi
  43baf3:	push   ebp
  43baf4:	aas    
  43baf5:	and    al,0x63
  43baf7:	push   0x745f7261
  43bafc:	jb     0x43bb5f
  43bafe:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x7340575f
  43bb06:	je     0x43bb6c
  43bb08:	inc    eax
  43bb09:	inc    eax
  43bb0a:	push   esi
  43bb0b:	aas    
  43bb0c:	and    al,0x61
  43bb0e:	ins    BYTE PTR es:[edi],dx
  43bb0f:	ins    BYTE PTR es:[edi],dx
  43bb10:	outs   dx,DWORD PTR ds:[esi]
  43bb11:	arpl   WORD PTR [ecx+0x74],sp
  43bb14:	outs   dx,DWORD PTR ds:[esi]
  43bb15:	jb     0x43bb57
  43bb17:	pop    edi
  43bb18:	push   edi
  43bb19:	inc    eax
  43bb1a:	xor    DWORD PTR [eax+0x40],eax
  43bb1d:	jae    0x43bb93
  43bb1f:	fs inc eax
  43bb21:	inc    eax
  43bb22:	pop    ecx
  43bb23:	inc    ecx
  43bb24:	aas    
  43bb25:	inc    ecx
  43bb26:	push   esi
  43bb27:	aas    
  43bb28:	and    al,0x62
  43bb2a:	popa   
  43bb2b:	jae    0x43bb96
  43bb2d:	arpl   WORD PTR [edi+0x73],bx
  43bb30:	je     0x43bba4
  43bb32:	imul   ebp,DWORD PTR [esi+0x67],0x55575f40
  43bb39:	aas    
  43bb3a:	and    al,0x63
  43bb3c:	push   0x745f7261
  43bb41:	jb     0x43bba4
  43bb43:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x7340575f
  43bb4b:	je     0x43bbb1
  43bb4d:	inc    eax
  43bb4e:	inc    eax
  43bb4f:	push   esi
  43bb50:	aas    
  43bb51:	and    al,0x61
  43bb53:	ins    BYTE PTR es:[edi],dx
  43bb54:	ins    BYTE PTR es:[edi],dx
  43bb55:	outs   dx,DWORD PTR ds:[esi]
  43bb56:	arpl   WORD PTR [ecx+0x74],sp
  43bb59:	outs   dx,DWORD PTR ds:[esi]
  43bb5a:	jb     0x43bb9c
  43bb5c:	pop    edi
  43bb5d:	push   edi
  43bb5e:	inc    eax
  43bb5f:	xor    al,BYTE PTR [eax+0x40]
  43bb62:	xor    BYTE PTR [eax+0x41],al
  43bb65:	inc    edx
  43bb66:	push   esi
  43bb67:	xor    DWORD PTR [eax],esi
  43bb69:	inc    eax
  43bb6a:	xor    BYTE PTR [eax+0x5a],al
  43bb6d:	add    BYTE PTR [eax+eax*1+0x3f],bh
  43bb71:	aas    
  43bb72:	and    al,0x3f
  43bb74:	dec    eax
  43bb75:	pop    edi
  43bb76:	push   edi
  43bb77:	push   ebp
  43bb78:	aas    
  43bb79:	and    al,0x63
  43bb7b:	push   0x745f7261
  43bb80:	jb     0x43bbe3
  43bb82:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x7340575f
  43bb8a:	je     0x43bbf0
  43bb8c:	inc    eax
  43bb8d:	inc    eax
  43bb8e:	push   esi
  43bb8f:	aas    
  43bb90:	and    al,0x61
  43bb92:	ins    BYTE PTR es:[edi],dx
  43bb93:	ins    BYTE PTR es:[edi],dx
  43bb94:	outs   dx,DWORD PTR ds:[esi]
  43bb95:	arpl   WORD PTR [ecx+0x74],sp
  43bb98:	outs   dx,DWORD PTR ds:[esi]
  43bb99:	jb     0x43bbdb
  43bb9b:	pop    edi
  43bb9c:	push   edi
  43bb9d:	inc    eax
  43bb9e:	xor    DWORD PTR [eax+0x40],eax
  43bba1:	jae    0x43bc17
  43bba3:	fs inc eax
  43bba5:	inc    eax
  43bba6:	pop    ecx
  43bba7:	inc    ecx
  43bba8:	aas    
  43bba9:	inc    ecx
  43bbaa:	push   esi
  43bbab:	aas    
  43bbac:	and    al,0x62
  43bbae:	popa   
  43bbaf:	jae    0x43bc1a
  43bbb1:	arpl   WORD PTR [edi+0x73],bx
  43bbb4:	je     0x43bc28
  43bbb6:	imul   ebp,DWORD PTR [esi+0x67],0x55575f40
  43bbbd:	aas    
  43bbbe:	and    al,0x63
  43bbc0:	push   0x745f7261
  43bbc5:	jb     0x43bc28
  43bbc7:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x7340575f
  43bbcf:	je     0x43bc35
  43bbd1:	inc    eax
  43bbd2:	inc    eax
  43bbd3:	push   esi
  43bbd4:	aas    
  43bbd5:	and    al,0x61
  43bbd7:	ins    BYTE PTR es:[edi],dx
  43bbd8:	ins    BYTE PTR es:[edi],dx
  43bbd9:	outs   dx,DWORD PTR ds:[esi]
  43bbda:	arpl   WORD PTR [ecx+0x74],sp
  43bbdd:	outs   dx,DWORD PTR ds:[esi]
  43bbde:	jb     0x43bc20
  43bbe0:	pop    edi
  43bbe1:	push   edi
  43bbe2:	inc    eax
  43bbe3:	xor    al,BYTE PTR [eax+0x40]
  43bbe6:	xor    BYTE PTR [eax+0x41],al
  43bbe9:	inc    edx
  43bbea:	push   esi
  43bbeb:	xor    DWORD PTR [eax],esi
  43bbed:	inc    eax
  43bbee:	push   eax
  43bbef:	inc    edx
  43bbf0:	pop    edi
  43bbf1:	push   edi
  43bbf2:	inc    eax
  43bbf3:	pop    edx
  43bbf4:	add    BYTE PTR [eax],al
  43bbf6:	dec    ecx
  43bbf7:	add    edi,DWORD PTR [edi]
  43bbf9:	aas    
  43bbfa:	cmp    DWORD PTR [edi+ebp*2+0x63],ebp
  43bbfe:	popa   
  43bbff:	ins    BYTE PTR es:[edi],dx
  43bc00:	gs inc eax
  43bc02:	jae    0x43bc78
  43bc04:	fs inc eax
  43bc06:	inc    eax
  43bc07:	push   ecx
  43bc08:	inc    edx
  43bc09:	inc    ebp
  43bc0a:	pop    edi
  43bc0b:	dec    esi
  43bc0c:	inc    ecx
  43bc0d:	inc    edx
  43bc0e:	push   esi
  43bc0f:	xor    BYTE PTR [ecx],dh
  43bc11:	inc    eax
  43bc12:	inc    eax
  43bc13:	pop    edx
  43bc14:	add    BYTE PTR [eax],al
  43bc16:	dec    ebx
  43bc17:	push   es
  43bc18:	aas    
  43bc19:	arpl   WORD PTR [ecx+eiz*2+0x73],bp
  43bc1d:	jae    0x43bc88
  43bc1f:	arpl   WORD PTR [eax+0x6c],ax
  43bc22:	outs   dx,DWORD PTR ds:[esi]
  43bc23:	arpl   WORD PTR [ecx+0x6c],sp
  43bc26:	gs inc eax
  43bc28:	jae    0x43bc9e
  43bc2a:	fs inc eax
  43bc2c:	inc    eax
  43bc2d:	push   ebx
  43bc2e:	inc    ecx
  43bc2f:	inc    ecx
  43bc30:	inc    edx
  43bc31:	push   esi
  43bc32:	xor    DWORD PTR [edx],esi
  43bc34:	inc    eax
  43bc35:	pop    eax
  43bc36:	pop    edx
  43bc37:	add    BYTE PTR [edi+0x475f3f04],dh
  43bc3d:	gs je  0x43bca3
  43bc40:	popa   
  43bc41:	je     0x43bc83
  43bc43:	aas    
  43bc44:	and    al,0x6e
  43bc46:	jne    0x43bcb5
  43bc48:	jo     0x43bcbf
  43bc4a:	outs   dx,BYTE PTR ds:[esi]
  43bc4b:	arpl   WORD PTR [eax+eax*2+0x5f],si
  43bc4f:	push   edi
  43bc50:	inc    eax
  43bc51:	jae    0x43bcc7
  43bc53:	fs inc eax
  43bc55:	inc    eax
  43bc56:	push   ebx
  43bc57:	inc    ecx
  43bc58:	dec    ecx
  43bc59:	push   eax
  43bc5a:	inc    ecx
  43bc5b:	push   eax
  43bc5c:	inc    edx
  43bc5d:	push   esi
  43bc5e:	popaw  
  43bc60:	arpl   WORD PTR [ebp+0x74],sp
  43bc63:	inc    eax
  43bc64:	ins    BYTE PTR es:[edi],dx
  43bc65:	outs   dx,DWORD PTR ds:[esi]
  43bc66:	arpl   WORD PTR [ecx+0x6c],sp
  43bc69:	gs inc eax
  43bc6b:	xor    al,BYTE PTR [eax+0x50]
  43bc6e:	inc    edx
  43bc6f:	push   esi
  43bc70:	xor    al,0x32
  43bc72:	inc    eax
  43bc73:	inc    eax
  43bc74:	pop    edx
  43bc75:	add    al,dl
  43bc77:	or     BYTE PTR [edi],bh
  43bc79:	imul   esp,DWORD PTR [eax+eax*2+0x3f],0x6d756e24
  43bc81:	jo     0x43bcf8
  43bc83:	outs   dx,BYTE PTR ds:[esi]
  43bc84:	arpl   WORD PTR [eax+eax*2+0x5f],si
  43bc88:	push   edi
  43bc89:	inc    eax
  43bc8a:	jae    0x43bd00
  43bc8c:	fs inc eax
  43bc8e:	inc    eax
  43bc8f:	xor    dl,BYTE PTR [esi+0x30]
  43bc92:	ins    BYTE PTR es:[edi],dx
  43bc93:	outs   dx,DWORD PTR ds:[esi]
  43bc94:	arpl   WORD PTR [ecx+0x6c],sp
  43bc97:	gs inc eax
  43bc99:	xor    al,BYTE PTR [eax+0x41]
  43bc9c:	add    BYTE PTR [eax],al
  43bc9e:	mov    ds:0x72673f08,al
  43bca3:	outs   dx,DWORD PTR ds:[esi]
  43bca4:	jne    0x43bd16
  43bca6:	imul   ebp,DWORD PTR [esi+0x67],0x6e243f40
  43bcad:	jne    0x43bd1c
  43bcaf:	jo     0x43bd26
  43bcb1:	outs   dx,BYTE PTR ds:[esi]
  43bcb2:	arpl   WORD PTR [eax+eax*2+0x5f],si
  43bcb6:	push   edi
  43bcb7:	inc    eax
  43bcb8:	jae    0x43bd2e
  43bcba:	fs inc eax
  43bcbc:	inc    eax
  43bcbd:	push   ecx
  43bcbe:	inc    edx
  43bcbf:	inc    ebp
  43bcc0:	aas    
  43bcc1:	inc    ecx
  43bcc2:	push   esi
  43bcc3:	aas    
  43bcc4:	and    al,0x62
  43bcc6:	popa   
  43bcc7:	jae    0x43bd32
  43bcc9:	arpl   WORD PTR [edi+0x73],bx
  43bccc:	je     0x43bd40
  43bcce:	imul   ebp,DWORD PTR [esi+0x67],0x3f554440
  43bcd5:	and    al,0x63
  43bcd7:	push   0x745f7261
  43bcdc:	jb     0x43bd3f
  43bcde:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x74734044
  43bce6:	fs inc eax
  43bce8:	inc    eax
  43bce9:	push   esi
  43bcea:	aas    
  43bceb:	and    al,0x61
  43bced:	ins    BYTE PTR es:[edi],dx
  43bcee:	ins    BYTE PTR es:[edi],dx
  43bcef:	outs   dx,DWORD PTR ds:[esi]
  43bcf0:	arpl   WORD PTR [ecx+0x74],sp
  43bcf3:	outs   dx,DWORD PTR ds:[esi]
  43bcf4:	jb     0x43bd36
  43bcf6:	inc    esp
  43bcf7:	inc    eax
  43bcf8:	xor    al,BYTE PTR [eax+0x40]
  43bcfb:	xor    al,BYTE PTR [eax+0x58]
  43bcfe:	pop    edx
  43bcff:	add    dl,cl
  43bd01:	or     edi,DWORD PTR [edi]
  43bd03:	je     0x43bd6d
  43bd05:	outs   dx,DWORD PTR ds:[esi]
  43bd06:	jne    0x43bd7b
  43bd08:	popa   
  43bd09:	outs   dx,BYTE PTR ds:[esi]
  43bd0a:	fs jae 0x43bd6c
  43bd0d:	jae    0x43bd74
  43bd0f:	jo     0x43bd51
  43bd11:	aas    
  43bd12:	and    al,0x6e
  43bd14:	jne    0x43bd83
  43bd16:	jo     0x43bd8d
  43bd18:	outs   dx,BYTE PTR ds:[esi]
  43bd19:	arpl   WORD PTR [eax+eax*2+0x5f],si
  43bd1d:	push   edi
  43bd1e:	inc    eax
  43bd1f:	jae    0x43bd95
  43bd21:	fs inc eax
  43bd23:	inc    eax
  43bd24:	push   ecx
  43bd25:	inc    edx
  43bd26:	inc    ebp
  43bd27:	pop    edi
  43bd28:	push   edi
  43bd29:	pop    eax
  43bd2a:	pop    edx
  43bd2b:	add    BYTE PTR [edx+0x343f3f02],bh
  43bd31:	aas    
  43bd32:	and    al,0x62
  43bd34:	popa   
  43bd35:	jae    0x43bda0
  43bd37:	arpl   WORD PTR [edi+0x73],bx
  43bd3a:	je     0x43bdae
  43bd3c:	imul   ebp,DWORD PTR [esi+0x67],0x55575f40
  43bd43:	aas    
  43bd44:	and    al,0x63
  43bd46:	push   0x745f7261
  43bd4b:	jb     0x43bdae
  43bd4d:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x7340575f
  43bd55:	je     0x43bdbb
  43bd57:	inc    eax
  43bd58:	inc    eax
  43bd59:	push   esi
  43bd5a:	aas    
  43bd5b:	and    al,0x61
  43bd5d:	ins    BYTE PTR es:[edi],dx
  43bd5e:	ins    BYTE PTR es:[edi],dx
  43bd5f:	outs   dx,DWORD PTR ds:[esi]
  43bd60:	arpl   WORD PTR [ecx+0x74],sp
  43bd63:	outs   dx,DWORD PTR ds:[esi]
  43bd64:	jb     0x43bda6
  43bd66:	pop    edi
  43bd67:	push   edi
  43bd68:	inc    eax
  43bd69:	xor    al,BYTE PTR [eax+0x40]
  43bd6c:	jae    0x43bde2
  43bd6e:	fs inc eax
  43bd70:	inc    eax
  43bd71:	push   ecx
  43bd72:	inc    ecx
  43bd73:	inc    ebp
  43bd74:	inc    ecx
  43bd75:	inc    ecx
  43bd76:	push   esi
  43bd77:	xor    BYTE PTR [ecx],dh
  43bd79:	inc    eax
  43bd7a:	push   eax
  43bd7b:	inc    edx
  43bd7c:	pop    edi
  43bd7d:	push   edi
  43bd7e:	inc    eax
  43bd7f:	pop    edx
  43bd80:	add    BYTE PTR [eax],al
  43bd82:	add    BYTE PTR [bx],bh
  43bd85:	aas    
  43bd86:	and    al,0x3f
  43bd88:	dec    eax
  43bd89:	inc    esp
  43bd8a:	push   ebp
  43bd8b:	aas    
  43bd8c:	and    al,0x63
  43bd8e:	push   0x745f7261
  43bd93:	jb     0x43bdf6
  43bd95:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x74734044
  43bd9d:	fs inc eax
  43bd9f:	inc    eax
  43bda0:	push   esi
  43bda1:	aas    
  43bda2:	and    al,0x61
  43bda4:	ins    BYTE PTR es:[edi],dx
  43bda5:	ins    BYTE PTR es:[edi],dx
  43bda6:	outs   dx,DWORD PTR ds:[esi]
  43bda7:	arpl   WORD PTR [ecx+0x74],sp
  43bdaa:	outs   dx,DWORD PTR ds:[esi]
  43bdab:	jb     0x43bded
  43bdad:	inc    esp
  43bdae:	inc    eax
  43bdaf:	xor    DWORD PTR [eax+0x40],eax
  43bdb2:	jae    0x43be28
  43bdb4:	fs inc eax
  43bdb6:	inc    eax
  43bdb7:	pop    ecx
  43bdb8:	inc    ecx
  43bdb9:	aas    
  43bdba:	inc    ecx
  43bdbb:	push   esi
  43bdbc:	aas    
  43bdbd:	and    al,0x62
  43bdbf:	popa   
  43bdc0:	jae    0x43be2b
  43bdc2:	arpl   WORD PTR [edi+0x73],bx
  43bdc5:	je     0x43be39
  43bdc7:	imul   ebp,DWORD PTR [esi+0x67],0x3f554440
  43bdce:	and    al,0x63
  43bdd0:	push   0x745f7261
  43bdd5:	jb     0x43be38
  43bdd7:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x74734044
  43bddf:	fs inc eax
  43bde1:	inc    eax
  43bde2:	push   esi
  43bde3:	aas    
  43bde4:	and    al,0x61
  43bde6:	ins    BYTE PTR es:[edi],dx
  43bde7:	ins    BYTE PTR es:[edi],dx
  43bde8:	outs   dx,DWORD PTR ds:[esi]
  43bde9:	arpl   WORD PTR [ecx+0x74],sp
  43bdec:	outs   dx,DWORD PTR ds:[esi]
  43bded:	jb     0x43be2f
  43bdef:	inc    esp
  43bdf0:	inc    eax
  43bdf1:	xor    al,BYTE PTR [eax+0x40]
  43bdf4:	xor    BYTE PTR [eax+0x41],al
  43bdf7:	inc    edx
  43bdf8:	push   esi
  43bdf9:	xor    DWORD PTR [eax],esi
  43bdfb:	inc    eax
  43bdfc:	push   eax
  43bdfd:	inc    edx
  43bdfe:	inc    esp
  43bdff:	inc    eax
  43be00:	pop    edx
  43be01:	add    bh,al
  43be03:	add    eax,0x69545f3f
  43be08:	fs jns 0x43be4b
  43be0b:	aas    
  43be0c:	and    al,0x62
  43be0e:	popa   
  43be0f:	jae    0x43be7a
  43be11:	arpl   WORD PTR [edi+0x73],bx
  43be14:	je     0x43be88
  43be16:	imul   ebp,DWORD PTR [esi+0x67],0x3f554440
  43be1d:	and    al,0x63
  43be1f:	push   0x745f7261
  43be24:	jb     0x43be87
  43be26:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x74734044
  43be2e:	fs inc eax
  43be30:	inc    eax
  43be31:	push   esi
  43be32:	aas    
  43be33:	and    al,0x61
  43be35:	ins    BYTE PTR es:[edi],dx
  43be36:	ins    BYTE PTR es:[edi],dx
  43be37:	outs   dx,DWORD PTR ds:[esi]
  43be38:	arpl   WORD PTR [ecx+0x74],sp
  43be3b:	outs   dx,DWORD PTR ds:[esi]
  43be3c:	jb     0x43be7e
  43be3e:	inc    esp
  43be3f:	inc    eax
  43be40:	xor    al,BYTE PTR [eax+0x40]
  43be43:	jae    0x43beb9
  43be45:	fs inc eax
  43be47:	inc    eax
  43be48:	dec    ecx
  43be49:	inc    ecx
  43be4a:	inc    ebp
  43be4b:	pop    eax
  43be4c:	pop    edi
  43be4d:	dec    esi
  43be4e:	dec    ecx
  43be4f:	inc    eax
  43be50:	pop    edx
  43be51:	add    BYTE PTR [ebx+0x65643f06],bl
  43be57:	popa   
  43be58:	ins    BYTE PTR es:[edi],dx
  43be59:	ins    BYTE PTR es:[edi],dx
  43be5a:	outs   dx,DWORD PTR ds:[esi]
  43be5b:	arpl   WORD PTR [ecx+0x74],sp
  43be5e:	gs inc eax
  43be60:	aas    
  43be61:	and    al,0x61
  43be63:	ins    BYTE PTR es:[edi],dx
  43be64:	ins    BYTE PTR es:[edi],dx
  43be65:	outs   dx,DWORD PTR ds:[esi]
  43be66:	arpl   WORD PTR [ecx+0x74],sp
  43be69:	outs   dx,DWORD PTR ds:[esi]
  43be6a:	jb     0x43beac
  43be6c:	inc    esp
  43be6d:	inc    eax
  43be6e:	jae    0x43bee4
  43be70:	fs inc eax
  43be72:	inc    eax
  43be73:	push   ecx
  43be74:	inc    ecx
  43be75:	inc    ebp
  43be76:	pop    eax
  43be77:	push   eax
  43be78:	inc    ecx
  43be79:	inc    esp
  43be7a:	dec    ecx
  43be7b:	inc    eax
  43be7c:	pop    edx
  43be7d:	add    al,dh
  43be7f:	or     bh,BYTE PTR [edi]
  43be81:	jb     0x43bee8
  43be83:	jae    0x43beee
  43be85:	jp     0x43beec
  43be87:	inc    eax
  43be88:	aas    
  43be89:	and    al,0x62
  43be8b:	popa   
  43be8c:	jae    0x43bef7
  43be8e:	arpl   WORD PTR [edi+0x73],bx
  43be91:	je     0x43bf05
  43be93:	imul   ebp,DWORD PTR [esi+0x67],0x3f554440
  43be9a:	and    al,0x63
  43be9c:	push   0x745f7261
  43bea1:	jb     0x43bf04
  43bea3:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x74734044
  43beab:	fs inc eax
  43bead:	inc    eax
  43beae:	push   esi
  43beaf:	aas    
  43beb0:	and    al,0x61
  43beb2:	ins    BYTE PTR es:[edi],dx
  43beb3:	ins    BYTE PTR es:[edi],dx
  43beb4:	outs   dx,DWORD PTR ds:[esi]
  43beb5:	arpl   WORD PTR [ecx+0x74],sp
  43beb8:	outs   dx,DWORD PTR ds:[esi]
  43beb9:	jb     0x43befb
  43bebb:	inc    esp
  43bebc:	inc    eax
  43bebd:	xor    al,BYTE PTR [eax+0x40]
  43bec0:	jae    0x43bf36
  43bec2:	fs inc eax
  43bec4:	inc    eax
  43bec5:	push   ecx
  43bec6:	inc    ecx
  43bec7:	inc    ebp
  43bec8:	pop    eax
  43bec9:	dec    ecx
  43beca:	inc    eax
  43becb:	pop    edx
  43becc:	add    BYTE PTR [eax],al
  43bece:	add    eax,0x70613f06
  43bed3:	jo     0x43bf3a
  43bed5:	outs   dx,BYTE PTR ds:[esi]
  43bed6:	fs inc eax
  43bed8:	aas    
  43bed9:	and    al,0x62
  43bedb:	popa   
  43bedc:	jae    0x43bf47
  43bede:	arpl   WORD PTR [edi+0x73],bx
  43bee1:	je     0x43bf55
  43bee3:	imul   ebp,DWORD PTR [esi+0x67],0x3f554440
  43beea:	and    al,0x63
  43beec:	push   0x745f7261
  43bef1:	jb     0x43bf54
  43bef3:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x74734044
  43befb:	fs inc eax
  43befd:	inc    eax
  43befe:	push   esi
  43beff:	aas    
  43bf00:	and    al,0x61
  43bf02:	ins    BYTE PTR es:[edi],dx
  43bf03:	ins    BYTE PTR es:[edi],dx
  43bf04:	outs   dx,DWORD PTR ds:[esi]
  43bf05:	arpl   WORD PTR [ecx+0x74],sp
  43bf08:	outs   dx,DWORD PTR ds:[esi]
  43bf09:	jb     0x43bf4b
  43bf0b:	inc    esp
  43bf0c:	inc    eax
  43bf0d:	xor    al,BYTE PTR [eax+0x40]
  43bf10:	jae    0x43bf86
  43bf12:	fs inc eax
  43bf14:	inc    eax
  43bf15:	push   ecx
  43bf16:	inc    ecx
  43bf17:	inc    ebp
  43bf18:	inc    ecx
  43bf19:	inc    ecx
  43bf1a:	push   esi
  43bf1b:	xor    DWORD PTR [edx],esi
  43bf1d:	inc    eax
  43bf1e:	dec    ecx
  43bf1f:	inc    esp
  43bf20:	inc    eax
  43bf21:	pop    edx
  43bf22:	add    BYTE PTR [eax],al
  43bf24:	cld    
  43bf25:	add    eax,0x6c6c613f
  43bf2a:	outs   dx,DWORD PTR ds:[esi]
  43bf2b:	arpl   WORD PTR [ecx+0x74],sp
  43bf2e:	gs inc eax
  43bf30:	aas    
  43bf31:	and    al,0x61
  43bf33:	ins    BYTE PTR es:[edi],dx
  43bf34:	ins    BYTE PTR es:[edi],dx
  43bf35:	outs   dx,DWORD PTR ds:[esi]
  43bf36:	arpl   WORD PTR [ecx+0x74],sp
  43bf39:	outs   dx,DWORD PTR ds:[esi]
  43bf3a:	jb     0x43bf7c
  43bf3c:	inc    esp
  43bf3d:	inc    eax
  43bf3e:	jae    0x43bfb4
  43bf40:	fs inc eax
  43bf42:	inc    eax
  43bf43:	push   ecx
  43bf44:	inc    ecx
  43bf45:	inc    ebp
  43bf46:	push   eax
  43bf47:	inc    ecx
  43bf48:	inc    esp
  43bf49:	dec    ecx
  43bf4a:	inc    eax
  43bf4b:	pop    edx
  43bf4c:	add    BYTE PTR [eax],al
  43bf4e:	hlt    
  43bf4f:	or     bh,BYTE PTR [edi]
  43bf51:	jb     0x43bfb8
  43bf53:	jae    0x43bfbe
  43bf55:	jp     0x43bfbc
  43bf57:	inc    eax
  43bf58:	aas    
  43bf59:	and    al,0x62
  43bf5b:	popa   
  43bf5c:	jae    0x43bfc7
  43bf5e:	arpl   WORD PTR [edi+0x73],bx
  43bf61:	je     0x43bfd5
  43bf63:	imul   ebp,DWORD PTR [esi+0x67],0x55575f40
  43bf6a:	aas    
  43bf6b:	and    al,0x63
  43bf6d:	push   0x745f7261
  43bf72:	jb     0x43bfd5
  43bf74:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x7340575f
  43bf7c:	je     0x43bfe2
  43bf7e:	inc    eax
  43bf7f:	inc    eax
  43bf80:	push   esi
  43bf81:	aas    
  43bf82:	and    al,0x61
  43bf84:	ins    BYTE PTR es:[edi],dx
  43bf85:	ins    BYTE PTR es:[edi],dx
  43bf86:	outs   dx,DWORD PTR ds:[esi]
  43bf87:	arpl   WORD PTR [ecx+0x74],sp
  43bf8a:	outs   dx,DWORD PTR ds:[esi]
  43bf8b:	jb     0x43bfcd
  43bf8d:	pop    edi
  43bf8e:	push   edi
  43bf8f:	inc    eax
  43bf90:	xor    al,BYTE PTR [eax+0x40]
  43bf93:	jae    0x43c009
  43bf95:	fs inc eax
  43bf97:	inc    eax
  43bf98:	push   ecx
  43bf99:	inc    ecx
  43bf9a:	inc    ebp
  43bf9b:	pop    eax
  43bf9c:	dec    ecx
  43bf9d:	inc    eax
  43bf9e:	pop    edx
  43bf9f:	add    dl,al
  43bfa1:	or     DWORD PTR [edi],edi
  43bfa3:	outs   dx,BYTE PTR ds:[esi]
  43bfa4:	jo     0x43c015
  43bfa6:	jae    0x43bfe8
  43bfa8:	aas    
  43bfa9:	and    al,0x62
  43bfab:	popa   
  43bfac:	jae    0x43c017
  43bfae:	arpl   WORD PTR [edi+0x73],bx
  43bfb1:	je     0x43c025
  43bfb3:	imul   ebp,DWORD PTR [esi+0x67],0x55575f40
  43bfba:	aas    
  43bfbb:	and    al,0x63
  43bfbd:	push   0x745f7261
  43bfc2:	jb     0x43c025
  43bfc4:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x7340575f
  43bfcc:	je     0x43c032
  43bfce:	inc    eax
  43bfcf:	inc    eax
  43bfd0:	push   esi
  43bfd1:	aas    
  43bfd2:	and    al,0x61
  43bfd4:	ins    BYTE PTR es:[edi],dx
  43bfd5:	ins    BYTE PTR es:[edi],dx
  43bfd6:	outs   dx,DWORD PTR ds:[esi]
  43bfd7:	arpl   WORD PTR [ecx+0x74],sp
  43bfda:	outs   dx,DWORD PTR ds:[esi]
  43bfdb:	jb     0x43c01d
  43bfdd:	pop    edi
  43bfde:	push   edi
  43bfdf:	inc    eax
  43bfe0:	xor    al,BYTE PTR [eax+0x40]
  43bfe3:	jae    0x43c059
  43bfe5:	fs inc eax
  43bfe7:	inc    eax
  43bfe8:	xor    cl,BYTE PTR [ecx+0x42]
  43bfeb:	add    BYTE PTR [eax+0x3],ah
  43bfee:	aas    
  43bfef:	aas    
  43bff0:	pop    ecx
  43bff1:	aas    
  43bff2:	and    al,0x62
  43bff4:	popa   
  43bff5:	jae    0x43c060
  43bff7:	arpl   WORD PTR [edi+0x73],bx
  43bffa:	je     0x43c06e
  43bffc:	imul   ebp,DWORD PTR [esi+0x67],0x3f554440
  43c003:	and    al,0x63
  43c005:	push   0x745f7261
  43c00a:	jb     0x43c06d
  43c00c:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x74734044
  43c014:	fs inc eax
  43c016:	inc    eax
  43c017:	push   esi
  43c018:	aas    
  43c019:	and    al,0x61
  43c01b:	ins    BYTE PTR es:[edi],dx
  43c01c:	ins    BYTE PTR es:[edi],dx
  43c01d:	outs   dx,DWORD PTR ds:[esi]
  43c01e:	arpl   WORD PTR [ecx+0x74],sp
  43c021:	outs   dx,DWORD PTR ds:[esi]
  43c022:	jb     0x43c064
  43c024:	inc    esp
  43c025:	inc    eax
  43c026:	xor    al,BYTE PTR [eax+0x40]
  43c029:	jae    0x43c09f
  43c02b:	fs inc eax
  43c02d:	inc    eax
  43c02e:	push   ecx
  43c02f:	inc    ecx
  43c030:	inc    ebp
  43c031:	inc    ecx
  43c032:	inc    ecx
  43c033:	push   esi
  43c034:	xor    BYTE PTR [ecx],dh
  43c036:	inc    eax
  43c037:	push   eax
  43c038:	inc    edx
  43c039:	inc    esp
  43c03a:	inc    eax
  43c03b:	pop    edx
  43c03c:	add    BYTE PTR [eax],al
  43c03e:	pop    DWORD PTR [eax]
  43c040:	aas    
  43c041:	aas    
  43c042:	and    al,0x3f
  43c044:	dec    ebp
  43c045:	pop    edi
  43c046:	push   edi
  43c047:	push   ebp
  43c048:	aas    
  43c049:	and    al,0x63
  43c04b:	push   0x745f7261
  43c050:	jb     0x43c0b3
  43c052:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x7340575f
  43c05a:	je     0x43c0c0
  43c05c:	inc    eax
  43c05d:	inc    eax
  43c05e:	push   esi
  43c05f:	aas    
  43c060:	and    al,0x61
  43c062:	ins    BYTE PTR es:[edi],dx
  43c063:	ins    BYTE PTR es:[edi],dx
  43c064:	outs   dx,DWORD PTR ds:[esi]
  43c065:	arpl   WORD PTR [ecx+0x74],sp
  43c068:	outs   dx,DWORD PTR ds:[esi]
  43c069:	jb     0x43c0ab
  43c06b:	pop    edi
  43c06c:	push   edi
  43c06d:	inc    eax
  43c06e:	xor    DWORD PTR [eax+0x40],eax
  43c071:	jae    0x43c0e7
  43c073:	fs inc eax
  43c075:	inc    eax
  43c076:	pop    ecx
  43c077:	inc    ecx
  43c078:	pop    edi
  43c079:	dec    esi
  43c07a:	inc    ecx
  43c07b:	inc    edx
  43c07c:	push   esi
  43c07d:	aas    
  43c07e:	and    al,0x62
  43c080:	popa   
  43c081:	jae    0x43c0ec
  43c083:	arpl   WORD PTR [edi+0x73],bx
  43c086:	je     0x43c0fa
  43c088:	imul   ebp,DWORD PTR [esi+0x67],0x55575f40
  43c08f:	aas    
  43c090:	and    al,0x63
  43c092:	push   0x745f7261
  43c097:	jb     0x43c0fa
  43c099:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x7340575f
  43c0a1:	je     0x43c107
  43c0a3:	inc    eax
  43c0a4:	inc    eax
  43c0a5:	push   esi
  43c0a6:	aas    
  43c0a7:	and    al,0x61
  43c0a9:	ins    BYTE PTR es:[edi],dx
  43c0aa:	ins    BYTE PTR es:[edi],dx
  43c0ab:	outs   dx,DWORD PTR ds:[esi]
  43c0ac:	arpl   WORD PTR [ecx+0x74],sp
  43c0af:	outs   dx,DWORD PTR ds:[esi]
  43c0b0:	jb     0x43c0f2
  43c0b2:	pop    edi
  43c0b3:	push   edi
  43c0b4:	inc    eax
  43c0b5:	xor    al,BYTE PTR [eax+0x40]
  43c0b8:	xor    BYTE PTR [eax+0x30],al
  43c0bb:	inc    eax
  43c0bc:	pop    edx
  43c0bd:	add    BYTE PTR [ebp+0x6e653f07],ch
  43c0c3:	fs inc eax
  43c0c5:	aas    
  43c0c6:	and    al,0x62
  43c0c8:	popa   
  43c0c9:	jae    0x43c134
  43c0cb:	arpl   WORD PTR [edi+0x73],bx
  43c0ce:	je     0x43c142
  43c0d0:	imul   ebp,DWORD PTR [esi+0x67],0x3f554440
  43c0d7:	and    al,0x63
  43c0d9:	push   0x745f7261
  43c0de:	jb     0x43c141
  43c0e0:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x74734044
  43c0e8:	fs inc eax
  43c0ea:	inc    eax
  43c0eb:	push   esi
  43c0ec:	aas    
  43c0ed:	and    al,0x61
  43c0ef:	ins    BYTE PTR es:[edi],dx
  43c0f0:	ins    BYTE PTR es:[edi],dx
  43c0f1:	outs   dx,DWORD PTR ds:[esi]
  43c0f2:	arpl   WORD PTR [ecx+0x74],sp
  43c0f5:	outs   dx,DWORD PTR ds:[esi]
  43c0f6:	jb     0x43c138
  43c0f8:	inc    esp
  43c0f9:	inc    eax
  43c0fa:	xor    al,BYTE PTR [eax+0x40]
  43c0fd:	jae    0x43c173
  43c0ff:	fs inc eax
  43c101:	inc    eax
  43c102:	push   ecx
  43c103:	inc    ecx
  43c104:	inc    ebp
  43c105:	aas    
  43c106:	inc    ecx
  43c107:	push   esi
  43c108:	aas    
  43c109:	and    al,0x5f
  43c10b:	push   ebx
  43c10c:	je     0x43c180
  43c10e:	imul   ebp,DWORD PTR [esi+0x67],0x6574695f
  43c115:	jb     0x43c178
  43c117:	je     0x43c188
  43c119:	jb     0x43c15b
  43c11b:	inc    esp
  43c11c:	push   ebp
  43c11d:	aas    
  43c11e:	and    al,0x63
  43c120:	push   0x745f7261
  43c125:	jb     0x43c188
  43c127:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x74734044
  43c12f:	fs inc eax
  43c131:	inc    eax
  43c132:	push   esi
  43c133:	aas    
  43c134:	and    al,0x61
  43c136:	ins    BYTE PTR es:[edi],dx
  43c137:	ins    BYTE PTR es:[edi],dx
  43c138:	outs   dx,DWORD PTR ds:[esi]
  43c139:	arpl   WORD PTR [ecx+0x74],sp
  43c13c:	outs   dx,DWORD PTR ds:[esi]
  43c13d:	jb     0x43c17f
  43c13f:	inc    esp
  43c140:	inc    eax
  43c141:	xor    al,BYTE PTR [eax+0x40]
  43c144:	xor    al,BYTE PTR [eax+0x58]
  43c147:	pop    edx
  43c148:	add    BYTE PTR [eax],al
  43c14a:	cmp    eax,0x65623f06
  43c14f:	imul   ebp,DWORD PTR [bp+0x40],0x6162243f
  43c157:	jae    0x43c1c2
  43c159:	arpl   WORD PTR [edi+0x73],bx
  43c15c:	je     0x43c1d0
  43c15e:	imul   ebp,DWORD PTR [esi+0x67],0x3f554440
  43c165:	and    al,0x63
  43c167:	push   0x745f7261
  43c16c:	jb     0x43c1cf
  43c16e:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x74734044
  43c176:	fs inc eax
  43c178:	inc    eax
  43c179:	push   esi
  43c17a:	aas    
  43c17b:	and    al,0x61
  43c17d:	ins    BYTE PTR es:[edi],dx
  43c17e:	ins    BYTE PTR es:[edi],dx
  43c17f:	outs   dx,DWORD PTR ds:[esi]
  43c180:	arpl   WORD PTR [ecx+0x74],sp
  43c183:	outs   dx,DWORD PTR ds:[esi]
  43c184:	jb     0x43c1c6
  43c186:	inc    esp
  43c187:	inc    eax
  43c188:	xor    al,BYTE PTR [eax+0x40]
  43c18b:	jae    0x43c201
  43c18d:	fs inc eax
  43c18f:	inc    eax
  43c190:	push   ecx
  43c191:	inc    ecx
  43c192:	inc    ebp
  43c193:	aas    
  43c194:	inc    ecx
  43c195:	push   esi
  43c196:	aas    
  43c197:	and    al,0x5f
  43c199:	push   ebx
  43c19a:	je     0x43c20e
  43c19c:	imul   ebp,DWORD PTR [esi+0x67],0x6574695f
  43c1a3:	jb     0x43c206
  43c1a5:	je     0x43c216
  43c1a7:	jb     0x43c1e9
  43c1a9:	inc    esp
  43c1aa:	push   ebp
  43c1ab:	aas    
  43c1ac:	and    al,0x63
  43c1ae:	push   0x745f7261
  43c1b3:	jb     0x43c216
  43c1b5:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x74734044
  43c1bd:	fs inc eax
  43c1bf:	inc    eax
  43c1c0:	push   esi
  43c1c1:	aas    
  43c1c2:	and    al,0x61
  43c1c4:	ins    BYTE PTR es:[edi],dx
  43c1c5:	ins    BYTE PTR es:[edi],dx
  43c1c6:	outs   dx,DWORD PTR ds:[esi]
  43c1c7:	arpl   WORD PTR [ecx+0x74],sp
  43c1ca:	outs   dx,DWORD PTR ds:[esi]
  43c1cb:	jb     0x43c20d
  43c1cd:	inc    esp
  43c1ce:	inc    eax
  43c1cf:	xor    al,BYTE PTR [eax+0x40]
  43c1d2:	xor    al,BYTE PTR [eax+0x58]
  43c1d5:	pop    edx
  43c1d6:	add    BYTE PTR [eax],al
  43c1d8:	in     al,dx
  43c1d9:	or     bh,BYTE PTR [edi]
  43c1db:	jb     0x43c242
  43c1dd:	jae    0x43c244
  43c1df:	jb     0x43c257
  43c1e1:	gs inc eax
  43c1e3:	aas    
  43c1e4:	and    al,0x62
  43c1e6:	popa   
  43c1e7:	jae    0x43c252
  43c1e9:	arpl   WORD PTR [edi+0x73],bx
  43c1ec:	je     0x43c260
  43c1ee:	imul   ebp,DWORD PTR [esi+0x67],0x3f554440
  43c1f5:	and    al,0x63
  43c1f7:	push   0x745f7261
  43c1fc:	jb     0x43c25f
  43c1fe:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x74734044
  43c206:	fs inc eax
  43c208:	inc    eax
  43c209:	push   esi
  43c20a:	aas    
  43c20b:	and    al,0x61
  43c20d:	ins    BYTE PTR es:[edi],dx
  43c20e:	ins    BYTE PTR es:[edi],dx
  43c20f:	outs   dx,DWORD PTR ds:[esi]
  43c210:	arpl   WORD PTR [ecx+0x74],sp
  43c213:	outs   dx,DWORD PTR ds:[esi]
  43c214:	jb     0x43c256
  43c216:	inc    esp
  43c217:	inc    eax
  43c218:	xor    al,BYTE PTR [eax+0x40]
  43c21b:	jae    0x43c291
  43c21d:	fs inc eax
  43c21f:	inc    eax
  43c220:	push   ecx
  43c221:	inc    ecx
  43c222:	inc    ebp
  43c223:	pop    eax
  43c224:	dec    ecx
  43c225:	inc    eax
  43c226:	pop    edx
  43c227:	add    BYTE PTR [ebx],bh
  43c229:	add    BYTE PTR [edi],bh
  43c22b:	aas    
  43c22c:	and    al,0x3f
  43c22e:	cmp    BYTE PTR [edi+0x57],bl
  43c231:	push   ebp
  43c232:	aas    
  43c233:	and    al,0x63
  43c235:	push   0x745f7261
  43c23a:	jb     0x43c29d
  43c23c:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x7340575f
  43c244:	je     0x43c2aa
  43c246:	inc    eax
  43c247:	inc    eax
  43c248:	push   esi
  43c249:	aas    
  43c24a:	and    al,0x61
  43c24c:	ins    BYTE PTR es:[edi],dx
  43c24d:	ins    BYTE PTR es:[edi],dx
  43c24e:	outs   dx,DWORD PTR ds:[esi]
  43c24f:	arpl   WORD PTR [ecx+0x74],sp
  43c252:	outs   dx,DWORD PTR ds:[esi]
  43c253:	jb     0x43c295
  43c255:	pop    edi
  43c256:	push   edi
  43c257:	inc    eax
  43c258:	xor    DWORD PTR [eax+0x40],eax
  43c25b:	jae    0x43c2d1
  43c25d:	fs inc eax
  43c25f:	inc    eax
  43c260:	pop    ecx
  43c261:	inc    ecx
  43c262:	pop    edi
  43c263:	dec    esi
  43c264:	inc    ecx
  43c265:	inc    edx
  43c266:	push   esi
  43c267:	aas    
  43c268:	and    al,0x62
  43c26a:	popa   
  43c26b:	jae    0x43c2d6
  43c26d:	arpl   WORD PTR [edi+0x73],bx
  43c270:	je     0x43c2e4
  43c272:	imul   ebp,DWORD PTR [esi+0x67],0x55575f40
  43c279:	aas    
  43c27a:	and    al,0x63
  43c27c:	push   0x745f7261
  43c281:	jb     0x43c2e4
  43c283:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x7340575f
  43c28b:	je     0x43c2f1
  43c28d:	inc    eax
  43c28e:	inc    eax
  43c28f:	push   esi
  43c290:	aas    
  43c291:	and    al,0x61
  43c293:	ins    BYTE PTR es:[edi],dx
  43c294:	ins    BYTE PTR es:[edi],dx
  43c295:	outs   dx,DWORD PTR ds:[esi]
  43c296:	arpl   WORD PTR [ecx+0x74],sp
  43c299:	outs   dx,DWORD PTR ds:[esi]
  43c29a:	jb     0x43c2dc
  43c29c:	pop    edi
  43c29d:	push   edi
  43c29e:	inc    eax
  43c29f:	xor    al,BYTE PTR [eax+0x40]
  43c2a2:	xor    BYTE PTR [eax+0x30],al
  43c2a5:	inc    eax
  43c2a6:	pop    edx
  43c2a7:	add    BYTE PTR [esi+0x6e653f07],ch
  43c2ad:	fs inc eax
  43c2af:	aas    
  43c2b0:	and    al,0x62
  43c2b2:	popa   
  43c2b3:	jae    0x43c31e
  43c2b5:	arpl   WORD PTR [edi+0x73],bx
  43c2b8:	je     0x43c32c
  43c2ba:	imul   ebp,DWORD PTR [esi+0x67],0x3f554440
  43c2c1:	and    al,0x63
  43c2c3:	push   0x745f7261
  43c2c8:	jb     0x43c32b
  43c2ca:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x74734044
  43c2d2:	fs inc eax
  43c2d4:	inc    eax
  43c2d5:	push   esi
  43c2d6:	aas    
  43c2d7:	and    al,0x61
  43c2d9:	ins    BYTE PTR es:[edi],dx
  43c2da:	ins    BYTE PTR es:[edi],dx
  43c2db:	outs   dx,DWORD PTR ds:[esi]
  43c2dc:	arpl   WORD PTR [ecx+0x74],sp
  43c2df:	outs   dx,DWORD PTR ds:[esi]
  43c2e0:	jb     0x43c322
  43c2e2:	inc    esp
  43c2e3:	inc    eax
  43c2e4:	xor    al,BYTE PTR [eax+0x40]
  43c2e7:	jae    0x43c35d
  43c2e9:	fs inc eax
  43c2eb:	inc    eax
  43c2ec:	push   ecx
  43c2ed:	inc    edx
  43c2ee:	inc    ebp
  43c2ef:	aas    
  43c2f0:	inc    ecx
  43c2f1:	push   esi
  43c2f2:	aas    
  43c2f3:	and    al,0x5f
  43c2f5:	push   ebx
  43c2f6:	je     0x43c36a
  43c2f8:	imul   ebp,DWORD PTR [esi+0x67],0x6e6f635f
  43c2ff:	jae    0x43c375
  43c301:	pop    edi
  43c302:	imul   esi,DWORD PTR [ebp+eiz*2+0x72],0x726f7461
  43c30a:	inc    eax
  43c30b:	inc    esp
  43c30c:	push   ebp
  43c30d:	aas    
  43c30e:	and    al,0x63
  43c310:	push   0x745f7261
  43c315:	jb     0x43c378
  43c317:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x74734044
  43c31f:	fs inc eax
  43c321:	inc    eax
  43c322:	push   esi
  43c323:	aas    
  43c324:	and    al,0x61
  43c326:	ins    BYTE PTR es:[edi],dx
  43c327:	ins    BYTE PTR es:[edi],dx
  43c328:	outs   dx,DWORD PTR ds:[esi]
  43c329:	arpl   WORD PTR [ecx+0x74],sp
  43c32c:	outs   dx,DWORD PTR ds:[esi]
  43c32d:	jb     0x43c36f
  43c32f:	inc    esp
  43c330:	inc    eax
  43c331:	xor    al,BYTE PTR [eax+0x40]
  43c334:	xor    al,BYTE PTR [eax+0x58]
  43c337:	pop    edx
  43c338:	add    BYTE PTR [eax],al
  43c33a:	jne    0x43c33d
  43c33c:	aas    
  43c33d:	aas    
  43c33e:	xor    BYTE PTR [edi],bh
  43c340:	and    al,0x62
  43c342:	popa   
  43c343:	jae    0x43c3ae
  43c345:	arpl   WORD PTR [edi+0x73],bx
  43c348:	je     0x43c3bc
  43c34a:	imul   ebp,DWORD PTR [esi+0x67],0x3f554440
  43c351:	and    al,0x63
  43c353:	push   0x745f7261
  43c358:	jb     0x43c3bb
  43c35a:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x74734044
  43c362:	fs inc eax
  43c364:	inc    eax
  43c365:	push   esi
  43c366:	aas    
  43c367:	and    al,0x61
  43c369:	ins    BYTE PTR es:[edi],dx
  43c36a:	ins    BYTE PTR es:[edi],dx
  43c36b:	outs   dx,DWORD PTR ds:[esi]
  43c36c:	arpl   WORD PTR [ecx+0x74],sp
  43c36f:	outs   dx,DWORD PTR ds:[esi]
  43c370:	jb     0x43c3b2
  43c372:	inc    esp
  43c373:	inc    eax
  43c374:	xor    al,BYTE PTR [eax+0x40]
  43c377:	jae    0x43c3ed
  43c379:	fs inc eax
  43c37b:	inc    eax
  43c37c:	push   ecx
  43c37d:	inc    ecx
  43c37e:	inc    ebp
  43c37f:	inc    eax
  43c380:	push   eax
  43c381:	inc    edx
  43c382:	inc    esp
  43c383:	xor    BYTE PTR [eax+0x5a],al
  43c386:	add    BYTE PTR [eax],al
  43c388:	or     al,0x9
  43c38a:	aas    
  43c38b:	imul   ebp,DWORD PTR [esi+0x73],0x40747265
  43c392:	aas    
  43c393:	and    al,0x62
  43c395:	popa   
  43c396:	jae    0x43c401
  43c398:	arpl   WORD PTR [edi+0x73],bx
  43c39b:	je     0x43c40f
  43c39d:	imul   ebp,DWORD PTR [esi+0x67],0x3f554440
  43c3a4:	and    al,0x63
  43c3a6:	push   0x745f7261
  43c3ab:	jb     0x43c40e
  43c3ad:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x74734044
  43c3b5:	fs inc eax
  43c3b7:	inc    eax
  43c3b8:	push   esi
  43c3b9:	aas    
  43c3ba:	and    al,0x61
  43c3bc:	ins    BYTE PTR es:[edi],dx
  43c3bd:	ins    BYTE PTR es:[edi],dx
  43c3be:	outs   dx,DWORD PTR ds:[esi]
  43c3bf:	arpl   WORD PTR [ecx+0x74],sp
  43c3c2:	outs   dx,DWORD PTR ds:[esi]
  43c3c3:	jb     0x43c405
  43c3c5:	inc    esp
  43c3c6:	inc    eax
  43c3c7:	xor    al,BYTE PTR [eax+0x40]
  43c3ca:	jae    0x43c440
  43c3cc:	fs inc eax
  43c3ce:	inc    eax
  43c3cf:	push   ecx
  43c3d0:	inc    ecx
  43c3d1:	inc    ebp
  43c3d2:	pop    eax
  43c3d3:	push   esi
  43c3d4:	aas    
  43c3d5:	and    al,0x5f
  43c3d7:	push   ebx
  43c3d8:	je     0x43c44c
  43c3da:	imul   ebp,DWORD PTR [esi+0x67],0x6e6f635f
  43c3e1:	jae    0x43c457
  43c3e3:	pop    edi
  43c3e4:	imul   esi,DWORD PTR [ebp+eiz*2+0x72],0x726f7461
  43c3ec:	inc    eax
  43c3ed:	inc    esp
  43c3ee:	push   ebp
  43c3ef:	aas    
  43c3f0:	and    al,0x63
  43c3f2:	push   0x745f7261
  43c3f7:	jb     0x43c45a
  43c3f9:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x74734044
  43c401:	fs inc eax
  43c403:	inc    eax
  43c404:	push   esi
  43c405:	aas    
  43c406:	and    al,0x61
  43c408:	ins    BYTE PTR es:[edi],dx
  43c409:	ins    BYTE PTR es:[edi],dx
  43c40a:	outs   dx,DWORD PTR ds:[esi]
  43c40b:	arpl   WORD PTR [ecx+0x74],sp
  43c40e:	outs   dx,DWORD PTR ds:[esi]
  43c40f:	jb     0x43c451
  43c411:	inc    esp
  43c412:	inc    eax
  43c413:	xor    al,BYTE PTR [eax+0x40]
  43c416:	xor    al,BYTE PTR [eax+0x50]
  43c419:	inc    edx
  43c41a:	inc    esp
  43c41b:	xor    DWORD PTR [eax+0x5a],eax
  43c41e:	add    BYTE PTR [eax],al
  43c420:	lods   eax,DWORD PTR ds:[esi]
  43c421:	or     edi,DWORD PTR [edi]
  43c423:	jae    0x43c49c
  43c425:	popa   
  43c426:	jo     0x43c468
  43c428:	aas    
  43c429:	and    al,0x62
  43c42b:	popa   
  43c42c:	jae    0x43c497
  43c42e:	arpl   WORD PTR [edi+0x73],bx
  43c431:	je     0x43c4a5
  43c433:	imul   ebp,DWORD PTR [esi+0x67],0x3f554440
  43c43a:	and    al,0x63
  43c43c:	push   0x745f7261
  43c441:	jb     0x43c4a4
  43c443:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x74734044
  43c44b:	fs inc eax
  43c44d:	inc    eax
  43c44e:	push   esi
  43c44f:	aas    
  43c450:	and    al,0x61
  43c452:	ins    BYTE PTR es:[edi],dx
  43c453:	ins    BYTE PTR es:[edi],dx
  43c454:	outs   dx,DWORD PTR ds:[esi]
  43c455:	arpl   WORD PTR [ecx+0x74],sp
  43c458:	outs   dx,DWORD PTR ds:[esi]
  43c459:	jb     0x43c49b
  43c45b:	inc    esp
  43c45c:	inc    eax
  43c45d:	xor    al,BYTE PTR [eax+0x40]
  43c460:	jae    0x43c4d6
  43c462:	fs inc eax
  43c464:	inc    eax
  43c465:	push   ecx
  43c466:	inc    ecx
  43c467:	inc    ebp
  43c468:	pop    eax
  43c469:	inc    ecx
  43c46a:	inc    ecx
  43c46b:	push   esi
  43c46c:	xor    DWORD PTR [edx],esi
  43c46e:	inc    eax
  43c46f:	inc    eax
  43c470:	pop    edx
  43c471:	add    BYTE PTR [esi],bh
  43c473:	push   es
  43c474:	aas    
  43c475:	bound  esp,QWORD PTR [ebp+0x67]
  43c478:	imul   ebp,DWORD PTR [esi+0x40],0x6162243f
  43c47f:	jae    0x43c4ea
  43c481:	arpl   WORD PTR [edi+0x73],bx
  43c484:	je     0x43c4f8
  43c486:	imul   ebp,DWORD PTR [esi+0x67],0x3f554440
  43c48d:	and    al,0x63
  43c48f:	push   0x745f7261
  43c494:	jb     0x43c4f7
  43c496:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x74734044
  43c49e:	fs inc eax
  43c4a0:	inc    eax
  43c4a1:	push   esi
  43c4a2:	aas    
  43c4a3:	and    al,0x61
  43c4a5:	ins    BYTE PTR es:[edi],dx
  43c4a6:	ins    BYTE PTR es:[edi],dx
  43c4a7:	outs   dx,DWORD PTR ds:[esi]
  43c4a8:	arpl   WORD PTR [ecx+0x74],sp
  43c4ab:	outs   dx,DWORD PTR ds:[esi]
  43c4ac:	jb     0x43c4ee
  43c4ae:	inc    esp
  43c4af:	inc    eax
  43c4b0:	xor    al,BYTE PTR [eax+0x40]
  43c4b3:	jae    0x43c529
  43c4b5:	fs inc eax
  43c4b7:	inc    eax
  43c4b8:	push   ecx
  43c4b9:	inc    edx
  43c4ba:	inc    ebp
  43c4bb:	aas    
  43c4bc:	inc    ecx
  43c4bd:	push   esi
  43c4be:	aas    
  43c4bf:	and    al,0x5f
  43c4c1:	push   ebx
  43c4c2:	je     0x43c536
  43c4c4:	imul   ebp,DWORD PTR [esi+0x67],0x6e6f635f
  43c4cb:	jae    0x43c541
  43c4cd:	pop    edi
  43c4ce:	imul   esi,DWORD PTR [ebp+eiz*2+0x72],0x726f7461
  43c4d6:	inc    eax
  43c4d7:	inc    esp
  43c4d8:	push   ebp
  43c4d9:	aas    
  43c4da:	and    al,0x63
  43c4dc:	push   0x745f7261
  43c4e1:	jb     0x43c544
  43c4e3:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x74734044
  43c4eb:	fs inc eax
  43c4ed:	inc    eax
  43c4ee:	push   esi
  43c4ef:	aas    
  43c4f0:	and    al,0x61
  43c4f2:	ins    BYTE PTR es:[edi],dx
  43c4f3:	ins    BYTE PTR es:[edi],dx
  43c4f4:	outs   dx,DWORD PTR ds:[esi]
  43c4f5:	arpl   WORD PTR [ecx+0x74],sp
  43c4f8:	outs   dx,DWORD PTR ds:[esi]
  43c4f9:	jb     0x43c53b
  43c4fb:	inc    esp
  43c4fc:	inc    eax
  43c4fd:	xor    al,BYTE PTR [eax+0x40]
  43c500:	xor    al,BYTE PTR [eax+0x58]
  43c503:	pop    edx
  43c504:	add    BYTE PTR [eax],al
  43c506:	ror    DWORD PTR [edx],cl
  43c508:	aas    
  43c509:	jb     0x43c570
  43c50b:	jo     0x43c579
  43c50d:	popa   
  43c50e:	arpl   WORD PTR [ebp+0x40],sp
  43c511:	aas    
  43c512:	and    al,0x62
  43c514:	popa   
  43c515:	jae    0x43c580
  43c517:	arpl   WORD PTR [edi+0x73],bx
  43c51a:	je     0x43c58e
  43c51c:	imul   ebp,DWORD PTR [esi+0x67],0x3f554440
  43c523:	and    al,0x63
  43c525:	push   0x745f7261
  43c52a:	jb     0x43c58d
  43c52c:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x74734044
  43c534:	fs inc eax
  43c536:	inc    eax
  43c537:	push   esi
  43c538:	aas    
  43c539:	and    al,0x61
  43c53b:	ins    BYTE PTR es:[edi],dx
  43c53c:	ins    BYTE PTR es:[edi],dx
  43c53d:	outs   dx,DWORD PTR ds:[esi]
  43c53e:	arpl   WORD PTR [ecx+0x74],sp
  43c541:	outs   dx,DWORD PTR ds:[esi]
  43c542:	jb     0x43c584
  43c544:	inc    esp
  43c545:	inc    eax
  43c546:	xor    al,BYTE PTR [eax+0x40]
  43c549:	jae    0x43c5bf
  43c54b:	fs inc eax
  43c54d:	inc    eax
  43c54e:	push   ecx
  43c54f:	inc    ecx
  43c550:	inc    ebp
  43c551:	inc    ecx
  43c552:	inc    ecx
  43c553:	push   esi
  43c554:	xor    DWORD PTR [edx],esi
  43c556:	inc    eax
  43c557:	push   esi
  43c558:	aas    
  43c559:	and    al,0x5f
  43c55b:	push   ebx
  43c55c:	je     0x43c5d0
  43c55e:	imul   ebp,DWORD PTR [esi+0x67],0x6e6f635f
  43c565:	jae    0x43c5db
  43c567:	pop    edi
  43c568:	imul   esi,DWORD PTR [ebp+eiz*2+0x72],0x726f7461
  43c570:	inc    eax
  43c571:	inc    esp
  43c572:	push   ebp
  43c573:	aas    
  43c574:	and    al,0x63
  43c576:	push   0x745f7261
  43c57b:	jb     0x43c5de
  43c57d:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x74734044
  43c585:	fs inc eax
  43c587:	inc    eax
  43c588:	push   esi
  43c589:	aas    
  43c58a:	and    al,0x61
  43c58c:	ins    BYTE PTR es:[edi],dx
  43c58d:	ins    BYTE PTR es:[edi],dx
  43c58e:	outs   dx,DWORD PTR ds:[esi]
  43c58f:	arpl   WORD PTR [ecx+0x74],sp
  43c592:	outs   dx,DWORD PTR ds:[esi]
  43c593:	jb     0x43c5d5
  43c595:	inc    esp
  43c596:	inc    eax
  43c597:	xor    al,BYTE PTR [eax+0x40]
  43c59a:	xor    al,BYTE PTR [eax+0x30]
  43c59d:	push   eax
  43c59e:	inc    edx
  43c59f:	inc    esp
  43c5a0:	xor    DWORD PTR [eax+0x5a],eax
  43c5a3:	add    BYTE PTR [ebp+0x6],dh
  43c5a6:	aas    
  43c5a7:	arpl   WORD PTR [edi+0x6d],bp
  43c5aa:	jo     0x43c60d
  43c5ac:	jb     0x43c613
  43c5ae:	inc    eax
  43c5af:	aas    
  43c5b0:	and    al,0x62
  43c5b2:	popa   
  43c5b3:	jae    0x43c61e
  43c5b5:	arpl   WORD PTR [edi+0x73],bx
  43c5b8:	je     0x43c62c
  43c5ba:	imul   ebp,DWORD PTR [esi+0x67],0x55575f40
  43c5c1:	aas    
  43c5c2:	and    al,0x63
  43c5c4:	push   0x745f7261
  43c5c9:	jb     0x43c62c
  43c5cb:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x7340575f
  43c5d3:	je     0x43c639
  43c5d5:	inc    eax
  43c5d6:	inc    eax
  43c5d7:	push   esi
  43c5d8:	aas    
  43c5d9:	and    al,0x61
  43c5db:	ins    BYTE PTR es:[edi],dx
  43c5dc:	ins    BYTE PTR es:[edi],dx
  43c5dd:	outs   dx,DWORD PTR ds:[esi]
  43c5de:	arpl   WORD PTR [ecx+0x74],sp
  43c5e1:	outs   dx,DWORD PTR ds:[esi]
  43c5e2:	jb     0x43c624
  43c5e4:	pop    edi
  43c5e5:	push   edi
  43c5e6:	inc    eax
  43c5e7:	xor    al,BYTE PTR [eax+0x40]
  43c5ea:	jae    0x43c660
  43c5ec:	fs inc eax
  43c5ee:	inc    eax
  43c5ef:	push   ecx
  43c5f0:	inc    edx
  43c5f1:	inc    ebp
  43c5f2:	dec    eax
  43c5f3:	inc    ecx
  43c5f4:	inc    edx
  43c5f5:	push   esi
  43c5f6:	xor    DWORD PTR [edx],esi
  43c5f8:	inc    eax
  43c5f9:	inc    eax
  43c5fa:	pop    edx
  43c5fb:	add    BYTE PTR [ecx+0x75733f0b],ch
  43c601:	bound  esi,QWORD PTR [ebx+0x74]
  43c604:	jb     0x43c646
  43c606:	aas    
  43c607:	and    al,0x62
  43c609:	popa   
  43c60a:	jae    0x43c675
  43c60c:	arpl   WORD PTR [edi+0x73],bx
  43c60f:	je     0x43c683
  43c611:	imul   ebp,DWORD PTR [esi+0x67],0x55575f40
  43c618:	aas    
  43c619:	and    al,0x63
  43c61b:	push   0x745f7261
  43c620:	jb     0x43c683
  43c622:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x7340575f
  43c62a:	je     0x43c690
  43c62c:	inc    eax
  43c62d:	inc    eax
  43c62e:	push   esi
  43c62f:	aas    
  43c630:	and    al,0x61
  43c632:	ins    BYTE PTR es:[edi],dx
  43c633:	ins    BYTE PTR es:[edi],dx
  43c634:	outs   dx,DWORD PTR ds:[esi]
  43c635:	arpl   WORD PTR [ecx+0x74],sp
  43c638:	outs   dx,DWORD PTR ds:[esi]
  43c639:	jb     0x43c67b
  43c63b:	pop    edi
  43c63c:	push   edi
  43c63d:	inc    eax
  43c63e:	xor    al,BYTE PTR [eax+0x40]
  43c641:	jae    0x43c6b7
  43c643:	fs inc eax
  43c645:	inc    eax
  43c646:	push   ecx
  43c647:	inc    edx
  43c648:	inc    ebp
  43c649:	aas    
  43c64a:	inc    ecx
  43c64b:	push   esi
  43c64c:	xor    DWORD PTR [edx],esi
  43c64e:	inc    eax
  43c64f:	dec    ecx
  43c650:	dec    ecx
  43c651:	inc    eax
  43c652:	pop    edx
  43c653:	add    BYTE PTR ds:0x69663f08,ch
  43c659:	outs   dx,BYTE PTR ds:[esi]
  43c65a:	fs pop edi
  43c65c:	ins    BYTE PTR es:[edi],dx
  43c65d:	popa   
  43c65e:	jae    0x43c6d4
  43c660:	pop    edi
  43c661:	outs   dx,DWORD PTR ds:[esi]
  43c662:	inc    ax
  43c664:	aas    
  43c665:	and    al,0x62
  43c667:	popa   
  43c668:	jae    0x43c6d3
  43c66a:	arpl   WORD PTR [edi+0x73],bx
  43c66d:	je     0x43c6e1
  43c66f:	imul   ebp,DWORD PTR [esi+0x67],0x55575f40
  43c676:	aas    
  43c677:	and    al,0x63
  43c679:	push   0x745f7261
  43c67e:	jb     0x43c6e1
  43c680:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x7340575f
  43c688:	je     0x43c6ee
  43c68a:	inc    eax
  43c68b:	inc    eax
  43c68c:	push   esi
  43c68d:	aas    
  43c68e:	and    al,0x61
  43c690:	ins    BYTE PTR es:[edi],dx
  43c691:	ins    BYTE PTR es:[edi],dx
  43c692:	outs   dx,DWORD PTR ds:[esi]
  43c693:	arpl   WORD PTR [ecx+0x74],sp
  43c696:	outs   dx,DWORD PTR ds:[esi]
  43c697:	jb     0x43c6d9
  43c699:	pop    edi
  43c69a:	push   edi
  43c69b:	inc    eax
  43c69c:	xor    al,BYTE PTR [eax+0x40]
  43c69f:	jae    0x43c715
  43c6a1:	fs inc eax
  43c6a3:	inc    eax
  43c6a4:	push   ecx
  43c6a5:	inc    edx
  43c6a6:	inc    ebp
  43c6a7:	dec    ecx
  43c6a8:	pop    edi
  43c6a9:	push   edi
  43c6aa:	dec    ecx
  43c6ab:	inc    eax
  43c6ac:	pop    edx
  43c6ad:	add    BYTE PTR [ebx],ch
  43c6af:	or     BYTE PTR [edi],bh
  43c6b1:	imul   bp,WORD PTR [esi+0x64],0x6c5f
  43c6b7:	popa   
  43c6b8:	jae    0x43c72e
  43c6ba:	pop    edi
  43c6bb:	outs   dx,DWORD PTR ds:[esi]
  43c6bc:	inc    ax
  43c6be:	aas    
  43c6bf:	and    al,0x62
  43c6c1:	popa   
  43c6c2:	jae    0x43c72d
  43c6c4:	arpl   WORD PTR [edi+0x73],bx
  43c6c7:	je     0x43c73b
  43c6c9:	imul   ebp,DWORD PTR [esi+0x67],0x55575f40
  43c6d0:	aas    
  43c6d1:	and    al,0x63
  43c6d3:	push   0x745f7261
  43c6d8:	jb     0x43c73b
  43c6da:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x7340575f
  43c6e2:	je     0x43c748
  43c6e4:	inc    eax
  43c6e5:	inc    eax
  43c6e6:	push   esi
  43c6e7:	aas    
  43c6e8:	and    al,0x61
  43c6ea:	ins    BYTE PTR es:[edi],dx
  43c6eb:	ins    BYTE PTR es:[edi],dx
  43c6ec:	outs   dx,DWORD PTR ds:[esi]
  43c6ed:	arpl   WORD PTR [ecx+0x74],sp
  43c6f0:	outs   dx,DWORD PTR ds:[esi]
  43c6f1:	jb     0x43c733
  43c6f3:	pop    edi
  43c6f4:	push   edi
  43c6f5:	inc    eax
  43c6f6:	xor    al,BYTE PTR [eax+0x40]
  43c6f9:	jae    0x43c76f
  43c6fb:	fs inc eax
  43c6fd:	inc    eax
  43c6fe:	push   ecx
  43c6ff:	inc    edx
  43c700:	inc    ebp
  43c701:	dec    ecx
  43c702:	push   eax
  43c703:	inc    edx
  43c704:	pop    edi
  43c705:	push   edi
  43c706:	dec    ecx
  43c707:	inc    eax
  43c708:	pop    edx
  43c709:	add    BYTE PTR [ecx],al
  43c70b:	or     edi,DWORD PTR [edi]
  43c70d:	jb     0x43c775
  43c70f:	imul   ebp,DWORD PTR [esi+0x64],0x62243f40
  43c716:	popa   
  43c717:	jae    0x43c782
  43c719:	arpl   WORD PTR [edi+0x73],bx
  43c71c:	je     0x43c790
  43c71e:	imul   ebp,DWORD PTR [esi+0x67],0x55575f40
  43c725:	aas    
  43c726:	and    al,0x63
  43c728:	push   0x745f7261
  43c72d:	jb     0x43c790
  43c72f:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x7340575f
  43c737:	je     0x43c79d
  43c739:	inc    eax
  43c73a:	inc    eax
  43c73b:	push   esi
  43c73c:	aas    
  43c73d:	and    al,0x61
  43c73f:	ins    BYTE PTR es:[edi],dx
  43c740:	ins    BYTE PTR es:[edi],dx
  43c741:	outs   dx,DWORD PTR ds:[esi]
  43c742:	arpl   WORD PTR [ecx+0x74],sp
  43c745:	outs   dx,DWORD PTR ds:[esi]
  43c746:	jb     0x43c788
  43c748:	pop    edi
  43c749:	push   edi
  43c74a:	inc    eax
  43c74b:	xor    al,BYTE PTR [eax+0x40]
  43c74e:	jae    0x43c7c4
  43c750:	fs inc eax
  43c752:	inc    eax
  43c753:	push   ecx
  43c754:	inc    edx
  43c755:	inc    ebp
  43c756:	dec    ecx
  43c757:	pop    edi
  43c758:	push   edi
  43c759:	dec    ecx
  43c75a:	inc    eax
  43c75b:	pop    edx
  43c75c:	add    BYTE PTR [eax],al
  43c75e:	clc    
  43c75f:	pop    es
  43c760:	aas    
  43c761:	imul   bp,WORD PTR [esi+0x64],0x3f40
  43c767:	and    al,0x62
  43c769:	popa   
  43c76a:	jae    0x43c7d5
  43c76c:	arpl   WORD PTR [edi+0x73],bx
  43c76f:	je     0x43c7e3
  43c771:	imul   ebp,DWORD PTR [esi+0x67],0x55575f40
  43c778:	aas    
  43c779:	and    al,0x63
  43c77b:	push   0x745f7261
  43c780:	jb     0x43c7e3
  43c782:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x7340575f
  43c78a:	je     0x43c7f0
  43c78c:	inc    eax
  43c78d:	inc    eax
  43c78e:	push   esi
  43c78f:	aas    
  43c790:	and    al,0x61
  43c792:	ins    BYTE PTR es:[edi],dx
  43c793:	ins    BYTE PTR es:[edi],dx
  43c794:	outs   dx,DWORD PTR ds:[esi]
  43c795:	arpl   WORD PTR [ecx+0x74],sp
  43c798:	outs   dx,DWORD PTR ds:[esi]
  43c799:	jb     0x43c7db
  43c79b:	pop    edi
  43c79c:	push   edi
  43c79d:	inc    eax
  43c79e:	xor    al,BYTE PTR [eax+0x40]
  43c7a1:	jae    0x43c817
  43c7a3:	fs inc eax
  43c7a5:	inc    eax
  43c7a6:	push   ecx
  43c7a7:	inc    edx
  43c7a8:	inc    ebp
  43c7a9:	dec    ecx
  43c7aa:	push   eax
  43c7ab:	inc    edx
  43c7ac:	pop    edi
  43c7ad:	push   edi
  43c7ae:	dec    ecx
  43c7af:	inc    eax
  43c7b0:	pop    edx
  43c7b1:	add    BYTE PTR [edi+0x77733f0b],ch
  43c7b7:	popa   
  43c7b8:	jo     0x43c7fa
  43c7ba:	aas    
  43c7bb:	and    al,0x62
  43c7bd:	popa   
  43c7be:	jae    0x43c829
  43c7c0:	arpl   WORD PTR [edi+0x73],bx
  43c7c3:	je     0x43c837
  43c7c5:	imul   ebp,DWORD PTR [esi+0x67],0x55575f40
  43c7cc:	aas    
  43c7cd:	and    al,0x63
  43c7cf:	push   0x745f7261
  43c7d4:	jb     0x43c837
  43c7d6:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x7340575f
  43c7de:	je     0x43c844
  43c7e0:	inc    eax
  43c7e1:	inc    eax
  43c7e2:	push   esi
  43c7e3:	aas    
  43c7e4:	and    al,0x61
  43c7e6:	ins    BYTE PTR es:[edi],dx
  43c7e7:	ins    BYTE PTR es:[edi],dx
  43c7e8:	outs   dx,DWORD PTR ds:[esi]
  43c7e9:	arpl   WORD PTR [ecx+0x74],sp
  43c7ec:	outs   dx,DWORD PTR ds:[esi]
  43c7ed:	jb     0x43c82f
  43c7ef:	pop    edi
  43c7f0:	push   edi
  43c7f1:	inc    eax
  43c7f2:	xor    al,BYTE PTR [eax+0x40]
  43c7f5:	jae    0x43c86b
  43c7f7:	fs inc eax
  43c7f9:	inc    eax
  43c7fa:	push   ecx
  43c7fb:	inc    ecx
  43c7fc:	inc    ebp
  43c7fd:	pop    eax
  43c7fe:	inc    ecx
  43c7ff:	inc    ecx
  43c800:	push   esi
  43c801:	xor    DWORD PTR [edx],esi
  43c803:	inc    eax
  43c804:	inc    eax
  43c805:	pop    edx
  43c806:	add    BYTE PTR [eax],al
  43c808:	inc    edx
  43c809:	push   es
  43c80a:	aas    
  43c80b:	bound  esp,QWORD PTR [ebp+0x67]
  43c80e:	imul   ebp,DWORD PTR [esi+0x40],0x6162243f
  43c815:	jae    0x43c880
  43c817:	arpl   WORD PTR [edi+0x73],bx
  43c81a:	je     0x43c88e
  43c81c:	imul   ebp,DWORD PTR [esi+0x67],0x55575f40
  43c823:	aas    
  43c824:	and    al,0x63
  43c826:	push   0x745f7261
  43c82b:	jb     0x43c88e
  43c82d:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x7340575f
  43c835:	je     0x43c89b
  43c837:	inc    eax
  43c838:	inc    eax
  43c839:	push   esi
  43c83a:	aas    
  43c83b:	and    al,0x61
  43c83d:	ins    BYTE PTR es:[edi],dx
  43c83e:	ins    BYTE PTR es:[edi],dx
  43c83f:	outs   dx,DWORD PTR ds:[esi]
  43c840:	arpl   WORD PTR [ecx+0x74],sp
  43c843:	outs   dx,DWORD PTR ds:[esi]
  43c844:	jb     0x43c886
  43c846:	pop    edi
  43c847:	push   edi
  43c848:	inc    eax
  43c849:	xor    al,BYTE PTR [eax+0x40]
  43c84c:	jae    0x43c8c2
  43c84e:	fs inc eax
  43c850:	inc    eax
  43c851:	push   ecx
  43c852:	inc    edx
  43c853:	inc    ebp
  43c854:	aas    
  43c855:	inc    ecx
  43c856:	push   esi
  43c857:	aas    
  43c858:	and    al,0x5f
  43c85a:	push   ebx
  43c85b:	je     0x43c8cf
  43c85d:	imul   ebp,DWORD PTR [esi+0x67],0x6e6f635f
  43c864:	jae    0x43c8da
  43c866:	pop    edi
  43c867:	imul   esi,DWORD PTR [ebp+eiz*2+0x72],0x726f7461
  43c86f:	inc    eax
  43c870:	pop    edi
  43c871:	push   edi
  43c872:	push   ebp
  43c873:	aas    
  43c874:	and    al,0x63
  43c876:	push   0x745f7261
  43c87b:	jb     0x43c8de
  43c87d:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x7340575f
  43c885:	je     0x43c8eb
  43c887:	inc    eax
  43c888:	inc    eax
  43c889:	push   esi
  43c88a:	aas    
  43c88b:	and    al,0x61
  43c88d:	ins    BYTE PTR es:[edi],dx
  43c88e:	ins    BYTE PTR es:[edi],dx
  43c88f:	outs   dx,DWORD PTR ds:[esi]
  43c890:	arpl   WORD PTR [ecx+0x74],sp
  43c893:	outs   dx,DWORD PTR ds:[esi]
  43c894:	jb     0x43c8d6
  43c896:	pop    edi
  43c897:	push   edi
  43c898:	inc    eax
  43c899:	xor    al,BYTE PTR [eax+0x40]
  43c89c:	xor    al,BYTE PTR [eax+0x58]
  43c89f:	pop    edx
  43c8a0:	add    BYTE PTR [eax],al
  43c8a2:	sbb    eax,DWORD PTR [esi]
  43c8a4:	aas    
  43c8a5:	popa   
  43c8a6:	jae    0x43c91b
  43c8a8:	imul   esp,DWORD PTR [edi+0x6e],0x62243f40
  43c8af:	popa   
  43c8b0:	jae    0x43c91b
  43c8b2:	arpl   WORD PTR [edi+0x73],bx
  43c8b5:	je     0x43c929
  43c8b7:	imul   ebp,DWORD PTR [esi+0x67],0x3f554440
  43c8be:	and    al,0x63
  43c8c0:	push   0x745f7261
  43c8c5:	jb     0x43c928
  43c8c7:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x74734044
  43c8cf:	fs inc eax
  43c8d1:	inc    eax
  43c8d2:	push   esi
  43c8d3:	aas    
  43c8d4:	and    al,0x61
  43c8d6:	ins    BYTE PTR es:[edi],dx
  43c8d7:	ins    BYTE PTR es:[edi],dx
  43c8d8:	outs   dx,DWORD PTR ds:[esi]
  43c8d9:	arpl   WORD PTR [ecx+0x74],sp
  43c8dc:	outs   dx,DWORD PTR ds:[esi]
  43c8dd:	jb     0x43c91f
  43c8df:	inc    esp
  43c8e0:	inc    eax
  43c8e1:	xor    al,BYTE PTR [eax+0x40]
  43c8e4:	jae    0x43c95a
  43c8e6:	fs inc eax
  43c8e8:	inc    eax
  43c8e9:	push   ecx
  43c8ea:	inc    ecx
  43c8eb:	inc    ebp
  43c8ec:	inc    ecx
  43c8ed:	inc    ecx
  43c8ee:	push   esi
  43c8ef:	xor    DWORD PTR [edx],esi
  43c8f1:	inc    eax
  43c8f2:	push   eax
  43c8f3:	inc    edx
  43c8f4:	inc    esp
  43c8f5:	xor    BYTE PTR [eax+0x5a],al
  43c8f8:	add    BYTE PTR [eax],al
  43c8fa:	add    di,WORD PTR [edi]
  43c8fd:	aas    
  43c8fe:	pop    ecx
  43c8ff:	aas    
  43c900:	and    al,0x62
  43c902:	popa   
  43c903:	jae    0x43c96e
  43c905:	arpl   WORD PTR [edi+0x73],bx
  43c908:	je     0x43c97c
  43c90a:	imul   ebp,DWORD PTR [esi+0x67],0x55575f40
  43c911:	aas    
  43c912:	and    al,0x63
  43c914:	push   0x745f7261
  43c919:	jb     0x43c97c
  43c91b:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x7340575f
  43c923:	je     0x43c989
  43c925:	inc    eax
  43c926:	inc    eax
  43c927:	push   esi
  43c928:	aas    
  43c929:	and    al,0x61
  43c92b:	ins    BYTE PTR es:[edi],dx
  43c92c:	ins    BYTE PTR es:[edi],dx
  43c92d:	outs   dx,DWORD PTR ds:[esi]
  43c92e:	arpl   WORD PTR [ecx+0x74],sp
  43c931:	outs   dx,DWORD PTR ds:[esi]
  43c932:	jb     0x43c974
  43c934:	pop    edi
  43c935:	push   edi
  43c936:	inc    eax
  43c937:	xor    al,BYTE PTR [eax+0x40]
  43c93a:	jae    0x43c9b0
  43c93c:	fs inc eax
  43c93e:	inc    eax
  43c93f:	push   ecx
  43c940:	inc    ecx
  43c941:	inc    ebp
  43c942:	inc    ecx
  43c943:	inc    ecx
  43c944:	push   esi
  43c945:	xor    BYTE PTR [ecx],dh
  43c947:	inc    eax
  43c948:	pop    edi
  43c949:	push   edi
  43c94a:	inc    eax
  43c94b:	pop    edx
  43c94c:	add    BYTE PTR [eax],al
  43c94e:	jmp    0x65b6085d
  43c953:	jo     0x43c9c1
  43c955:	popa   
  43c956:	arpl   WORD PTR [ebp+0x40],sp
  43c959:	aas    
  43c95a:	and    al,0x62
  43c95c:	popa   
  43c95d:	jae    0x43c9c8
  43c95f:	arpl   WORD PTR [edi+0x73],bx
  43c962:	je     0x43c9d6
  43c964:	imul   ebp,DWORD PTR [esi+0x67],0x55575f40
  43c96b:	aas    
  43c96c:	and    al,0x63
  43c96e:	push   0x745f7261
  43c973:	jb     0x43c9d6
  43c975:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x7340575f
  43c97d:	je     0x43c9e3
  43c97f:	inc    eax
  43c980:	inc    eax
  43c981:	push   esi
  43c982:	aas    
  43c983:	and    al,0x61
  43c985:	ins    BYTE PTR es:[edi],dx
  43c986:	ins    BYTE PTR es:[edi],dx
  43c987:	outs   dx,DWORD PTR ds:[esi]
  43c988:	arpl   WORD PTR [ecx+0x74],sp
  43c98b:	outs   dx,DWORD PTR ds:[esi]
  43c98c:	jb     0x43c9ce
  43c98e:	pop    edi
  43c98f:	push   edi
  43c990:	inc    eax
  43c991:	xor    al,BYTE PTR [eax+0x40]
  43c994:	jae    0x43ca0a
  43c996:	fs inc eax
  43c998:	inc    eax
  43c999:	push   ecx
  43c99a:	inc    ecx
  43c99b:	inc    ebp
  43c99c:	inc    ecx
  43c99d:	inc    ecx
  43c99e:	push   esi
  43c99f:	xor    DWORD PTR [edx],esi
  43c9a1:	inc    eax
  43c9a2:	push   esi
  43c9a3:	aas    
  43c9a4:	and    al,0x5f
  43c9a6:	push   ebx
  43c9a7:	je     0x43ca1b
  43c9a9:	imul   ebp,DWORD PTR [esi+0x67],0x6e6f635f
  43c9b0:	jae    0x43ca26
  43c9b2:	pop    edi
  43c9b3:	imul   esi,DWORD PTR [ebp+eiz*2+0x72],0x726f7461
  43c9bb:	inc    eax
  43c9bc:	pop    edi
  43c9bd:	push   edi
  43c9be:	push   ebp
  43c9bf:	aas    
  43c9c0:	and    al,0x63
  43c9c2:	push   0x745f7261
  43c9c7:	jb     0x43ca2a
  43c9c9:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x7340575f
  43c9d1:	je     0x43ca37
  43c9d3:	inc    eax
  43c9d4:	inc    eax
  43c9d5:	push   esi
  43c9d6:	aas    
  43c9d7:	and    al,0x61
  43c9d9:	ins    BYTE PTR es:[edi],dx
  43c9da:	ins    BYTE PTR es:[edi],dx
  43c9db:	outs   dx,DWORD PTR ds:[esi]
  43c9dc:	arpl   WORD PTR [ecx+0x74],sp
  43c9df:	outs   dx,DWORD PTR ds:[esi]
  43c9e0:	jb     0x43ca22
  43c9e2:	pop    edi
  43c9e3:	push   edi
  43c9e4:	inc    eax
  43c9e5:	xor    al,BYTE PTR [eax+0x40]
  43c9e8:	xor    al,BYTE PTR [eax+0x30]
  43c9eb:	push   eax
  43c9ec:	inc    edx
  43c9ed:	pop    edi
  43c9ee:	push   edi
  43c9ef:	xor    DWORD PTR [eax+0x5a],eax
  43c9f2:	add    BYTE PTR [eax],al
  43c9f4:	and    BYTE PTR [ecx],cl
  43c9f6:	aas    
  43c9f7:	imul   ebp,DWORD PTR [esi+0x73],0x40747265
  43c9fe:	aas    
  43c9ff:	and    al,0x62
  43ca01:	popa   
  43ca02:	jae    0x43ca6d
  43ca04:	arpl   WORD PTR [edi+0x73],bx
  43ca07:	je     0x43ca7b
  43ca09:	imul   ebp,DWORD PTR [esi+0x67],0x55575f40
  43ca10:	aas    
  43ca11:	and    al,0x63
  43ca13:	push   0x745f7261
  43ca18:	jb     0x43ca7b
  43ca1a:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x7340575f
  43ca22:	je     0x43ca88
  43ca24:	inc    eax
  43ca25:	inc    eax
  43ca26:	push   esi
  43ca27:	aas    
  43ca28:	and    al,0x61
  43ca2a:	ins    BYTE PTR es:[edi],dx
  43ca2b:	ins    BYTE PTR es:[edi],dx
  43ca2c:	outs   dx,DWORD PTR ds:[esi]
  43ca2d:	arpl   WORD PTR [ecx+0x74],sp
  43ca30:	outs   dx,DWORD PTR ds:[esi]
  43ca31:	jb     0x43ca73
  43ca33:	pop    edi
  43ca34:	push   edi
  43ca35:	inc    eax
  43ca36:	xor    al,BYTE PTR [eax+0x40]
  43ca39:	jae    0x43caaf
  43ca3b:	fs inc eax
  43ca3d:	inc    eax
  43ca3e:	push   ecx
  43ca3f:	inc    ecx
  43ca40:	inc    ebp
  43ca41:	pop    eax
  43ca42:	push   esi
  43ca43:	aas    
  43ca44:	and    al,0x5f
  43ca46:	push   ebx
  43ca47:	je     0x43cabb
  43ca49:	imul   ebp,DWORD PTR [esi+0x67],0x6e6f635f
  43ca50:	jae    0x43cac6
  43ca52:	pop    edi
  43ca53:	imul   esi,DWORD PTR [ebp+eiz*2+0x72],0x726f7461
  43ca5b:	inc    eax
  43ca5c:	pop    edi
  43ca5d:	push   edi
  43ca5e:	push   ebp
  43ca5f:	aas    
  43ca60:	and    al,0x63
  43ca62:	push   0x745f7261
  43ca67:	jb     0x43caca
  43ca69:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x7340575f
  43ca71:	je     0x43cad7
  43ca73:	inc    eax
  43ca74:	inc    eax
  43ca75:	push   esi
  43ca76:	aas    
  43ca77:	and    al,0x61
  43ca79:	ins    BYTE PTR es:[edi],dx
  43ca7a:	ins    BYTE PTR es:[edi],dx
  43ca7b:	outs   dx,DWORD PTR ds:[esi]
  43ca7c:	arpl   WORD PTR [ecx+0x74],sp
  43ca7f:	outs   dx,DWORD PTR ds:[esi]
  43ca80:	jb     0x43cac2
  43ca82:	pop    edi
  43ca83:	push   edi
  43ca84:	inc    eax
  43ca85:	xor    al,BYTE PTR [eax+0x40]
  43ca88:	xor    al,BYTE PTR [eax+0x50]
  43ca8b:	inc    edx
  43ca8c:	pop    edi
  43ca8d:	push   edi
  43ca8e:	xor    DWORD PTR [eax+0x5a],eax
  43ca91:	add    BYTE PTR [edx+0x6e653f07],dh
  43ca97:	fs inc eax
  43ca99:	aas    
  43ca9a:	and    al,0x62
  43ca9c:	popa   
  43ca9d:	jae    0x43cb08
  43ca9f:	arpl   WORD PTR [edi+0x73],bx
  43caa2:	je     0x43cb16
  43caa4:	imul   ebp,DWORD PTR [esi+0x67],0x55575f40
  43caab:	aas    
  43caac:	and    al,0x63
  43caae:	push   0x745f7261
  43cab3:	jb     0x43cb16
  43cab5:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x7340575f
  43cabd:	je     0x43cb23
  43cabf:	inc    eax
  43cac0:	inc    eax
  43cac1:	push   esi
  43cac2:	aas    
  43cac3:	and    al,0x61
  43cac5:	ins    BYTE PTR es:[edi],dx
  43cac6:	ins    BYTE PTR es:[edi],dx
  43cac7:	outs   dx,DWORD PTR ds:[esi]
  43cac8:	arpl   WORD PTR [ecx+0x74],sp
  43cacb:	outs   dx,DWORD PTR ds:[esi]
  43cacc:	jb     0x43cb0e
  43cace:	pop    edi
  43cacf:	push   edi
  43cad0:	inc    eax
  43cad1:	xor    al,BYTE PTR [eax+0x40]
  43cad4:	jae    0x43cb4a
  43cad6:	fs inc eax
  43cad8:	inc    eax
  43cad9:	push   ecx
  43cada:	inc    edx
  43cadb:	inc    ebp
  43cadc:	aas    
  43cadd:	inc    ecx
  43cade:	push   esi
  43cadf:	aas    
  43cae0:	and    al,0x5f
  43cae2:	push   ebx
  43cae3:	je     0x43cb57
  43cae5:	imul   ebp,DWORD PTR [esi+0x67],0x6e6f635f
  43caec:	jae    0x43cb62
  43caee:	pop    edi
  43caef:	imul   esi,DWORD PTR [ebp+eiz*2+0x72],0x726f7461
  43caf7:	inc    eax
  43caf8:	pop    edi
  43caf9:	push   edi
  43cafa:	push   ebp
  43cafb:	aas    
  43cafc:	and    al,0x63
  43cafe:	push   0x745f7261
  43cb03:	jb     0x43cb66
  43cb05:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x7340575f
  43cb0d:	je     0x43cb73
  43cb0f:	inc    eax
  43cb10:	inc    eax
  43cb11:	push   esi
  43cb12:	aas    
  43cb13:	and    al,0x61
  43cb15:	ins    BYTE PTR es:[edi],dx
  43cb16:	ins    BYTE PTR es:[edi],dx
  43cb17:	outs   dx,DWORD PTR ds:[esi]
  43cb18:	arpl   WORD PTR [ecx+0x74],sp
  43cb1b:	outs   dx,DWORD PTR ds:[esi]
  43cb1c:	jb     0x43cb5e
  43cb1e:	pop    edi
  43cb1f:	push   edi
  43cb20:	inc    eax
  43cb21:	xor    al,BYTE PTR [eax+0x40]
  43cb24:	xor    al,BYTE PTR [eax+0x58]
  43cb27:	pop    edx
  43cb28:	add    BYTE PTR [eax],al
  43cb2a:	dec    ebp
  43cb2b:	push   ebx
  43cb2c:	push   esi
  43cb2d:	inc    ebx
  43cb2e:	push   eax
  43cb2f:	cmp    DWORD PTR [eax],esi
  43cb31:	cs fs ins BYTE PTR es:[edi],dx
  43cb34:	ins    BYTE PTR es:[edi],dx
  43cb35:	add    BYTE PTR [edi+0x4],dh
  43cb38:	aas    
  43cb39:	pop    edi
  43cb3a:	inc    esp
  43cb3b:	arpl   WORD PTR gs:[edx+0x65],si
  43cb3f:	inc    ax
  43cb41:	popaw  
  43cb43:	arpl   WORD PTR [ebp+0x74],sp
  43cb46:	inc    eax
  43cb47:	ins    BYTE PTR es:[edi],dx
  43cb48:	outs   dx,DWORD PTR ds:[esi]
  43cb49:	arpl   WORD PTR [ecx+0x6c],sp
  43cb4c:	gs inc eax
  43cb4e:	jae    0x43cbc4
  43cb50:	fs inc eax
  43cb52:	inc    eax
  43cb53:	push   ecx
  43cb54:	inc    ecx
  43cb55:	inc    ebp
  43cb56:	push   eax
  43cb57:	inc    ecx
  43cb58:	push   esi
  43cb59:	xor    DWORD PTR [edx],esi
  43cb5b:	xor    eax,DWORD PTR [eax+0x58]
  43cb5e:	pop    edx
  43cb5f:	add    BYTE PTR [ecx],al
  43cb61:	add    BYTE PTR [edi],bh
  43cb63:	aas    
  43cb64:	xor    BYTE PTR [ebx+0x4c],al
  43cb67:	outs   dx,DWORD PTR ds:[esi]
  43cb68:	arpl   WORD PTR [ecx+0x74],sp
  43cb6b:	imul   ebp,DWORD PTR [edi+0x6e],0x6f666e49
  43cb72:	inc    eax
  43cb73:	inc    ebp
  43cb74:	js     0x43cbd9
  43cb76:	gs jo  0x43cbed
  43cb79:	imul   ebp,DWORD PTR [edi+0x6e],0x6d6f4340
  43cb80:	ins    DWORD PTR es:[edi],dx
  43cb81:	outs   dx,DWORD PTR ds:[esi]
  43cb82:	outs   dx,BYTE PTR ds:[esi]
  43cb83:	inc    eax
  43cb84:	inc    eax
  43cb85:	push   ecx
  43cb86:	inc    ecx
  43cb87:	inc    ebp
  43cb88:	inc    eax
  43cb89:	push   eax
  43cb8a:	inc    edx
  43cb8b:	inc    esp
  43cb8c:	xor    BYTE PTR [eax+0x40],cl
  43cb8f:	pop    edx
  43cb90:	add    BYTE PTR [eax],al
  43cb92:	or     eax,DWORD PTR [eax]
  43cb94:	aas    
  43cb95:	aas    
  43cb96:	xor    DWORD PTR [ebx+0x4c],eax
  43cb99:	outs   dx,DWORD PTR ds:[esi]
  43cb9a:	arpl   WORD PTR [ecx+0x74],sp
  43cb9d:	imul   ebp,DWORD PTR [edi+0x6e],0x6f666e49
  43cba4:	inc    eax
  43cba5:	inc    ebp
  43cba6:	js     0x43cc0b
  43cba8:	gs jo  0x43cc1f
  43cbab:	imul   ebp,DWORD PTR [edi+0x6e],0x6d6f4340
  43cbb2:	ins    DWORD PTR es:[edi],dx
  43cbb3:	outs   dx,DWORD PTR ds:[esi]
  43cbb4:	outs   dx,BYTE PTR ds:[esi]
  43cbb5:	inc    eax
  43cbb6:	inc    eax
  43cbb7:	push   ecx
  43cbb8:	inc    ecx
  43cbb9:	inc    ebp
  43cbba:	inc    eax
  43cbbb:	pop    eax
  43cbbc:	pop    edx
  43cbbd:	add    BYTE PTR [ecx],cl
  43cbbf:	add    BYTE PTR [edi],bh
  43cbc1:	aas    
  43cbc2:	xor    BYTE PTR [ebx+0x52],al
  43cbc5:	jne    0x43cc35
  43cbc7:	push   esp
  43cbc8:	imul   ebp,DWORD PTR [ebp+0x65],0x65637845
  43cbcf:	jo     0x43cc45
  43cbd1:	imul   ebp,DWORD PTR [edi+0x6e],0x63784540
  43cbd8:	gs jo  0x43cc4f
  43cbdb:	imul   ebp,DWORD PTR [edi+0x6e],0x6d6f4340
  43cbe2:	ins    DWORD PTR es:[edi],dx
  43cbe3:	outs   dx,DWORD PTR ds:[esi]
  43cbe4:	outs   dx,BYTE PTR ds:[esi]
  43cbe5:	inc    eax
  43cbe6:	inc    eax
  43cbe7:	push   ecx
  43cbe8:	inc    ecx
  43cbe9:	inc    ebp
  43cbea:	inc    eax
  43cbeb:	push   eax
  43cbec:	inc    edx
  43cbed:	push   esi
  43cbee:	inc    ebx
  43cbef:	dec    esp
  43cbf0:	outs   dx,DWORD PTR ds:[esi]
  43cbf1:	arpl   WORD PTR [ecx+0x74],sp
  43cbf4:	imul   ebp,DWORD PTR [edi+0x6e],0x6f666e49
  43cbfb:	inc    eax
  43cbfc:	xor    DWORD PTR [edx],esi
  43cbfe:	inc    eax
  43cbff:	push   eax
  43cc00:	inc    edx
  43cc01:	inc    esp
  43cc02:	dec    ebx
  43cc03:	inc    eax
  43cc04:	pop    edx
  43cc05:	add    BYTE PTR [eax],cl
  43cc07:	add    BYTE PTR [edi],bh
  43cc09:	aas    
  43cc0a:	xor    BYTE PTR [ebx+0x52],al
  43cc0d:	jne    0x43cc7d
  43cc0f:	push   esp
  43cc10:	imul   ebp,DWORD PTR [ebp+0x65],0x65637845
  43cc17:	jo     0x43cc8d
  43cc19:	imul   ebp,DWORD PTR [edi+0x6e],0x63784540
  43cc20:	gs jo  0x43cc97
  43cc23:	imul   ebp,DWORD PTR [edi+0x6e],0x6d6f4340
  43cc2a:	ins    DWORD PTR es:[edi],dx
  43cc2b:	outs   dx,DWORD PTR ds:[esi]
  43cc2c:	outs   dx,BYTE PTR ds:[esi]
  43cc2d:	inc    eax
  43cc2e:	inc    eax
  43cc2f:	push   ecx
  43cc30:	inc    ecx
  43cc31:	inc    ebp
  43cc32:	inc    eax
  43cc33:	inc    ecx
  43cc34:	inc    edx
  43cc35:	push   esi
  43cc36:	xor    BYTE PTR [ecx],dh
  43cc38:	xor    al,BYTE PTR [eax+0x40]
  43cc3b:	pop    edx
  43cc3c:	add    BYTE PTR [eax],al
  43cc3e:	adc    BYTE PTR [eax],al
  43cc40:	aas    
  43cc41:	aas    
  43cc42:	xor    DWORD PTR [ebx+0x52],eax
  43cc45:	jne    0x43ccb5
  43cc47:	push   esp
  43cc48:	imul   ebp,DWORD PTR [ebp+0x65],0x65637845
  43cc4f:	jo     0x43ccc5
  43cc51:	imul   ebp,DWORD PTR [edi+0x6e],0x63784540
  43cc58:	gs jo  0x43cccf
  43cc5b:	imul   ebp,DWORD PTR [edi+0x6e],0x6d6f4340
  43cc62:	ins    DWORD PTR es:[edi],dx
  43cc63:	outs   dx,DWORD PTR ds:[esi]
  43cc64:	outs   dx,BYTE PTR ds:[esi]
  43cc65:	inc    eax
  43cc66:	inc    eax
  43cc67:	push   ecx
  43cc68:	inc    ecx
  43cc69:	inc    ebp
  43cc6a:	inc    eax
  43cc6b:	pop    eax
  43cc6c:	pop    edx
  43cc6d:	add    BYTE PTR [eax+eax*1],ah
  43cc70:	aas    
  43cc71:	dec    ebp
  43cc72:	popa   
  43cc73:	imul   esp,DWORD PTR [ebp+0x53],0x75
  43cc77:	jb     0x43ccde
  43cc79:	inc    esp
  43cc7a:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  43cc81:	jns    0x43ccd3
  43cc83:	popa   
  43cc84:	je     0x43ccee
  43cc86:	inc    ebp
  43cc87:	js     0x43ccf2
  43cc89:	jae    0x43ccff
  43cc8b:	jae    0x43cccd
  43cc8d:	push   eax
  43cc8e:	popa   
  43cc8f:	je     0x43ccf9
  43cc91:	inc    eax
  43cc92:	inc    ebx
  43cc93:	outs   dx,DWORD PTR ds:[esi]
  43cc94:	ins    DWORD PTR es:[edi],dx
  43cc95:	ins    DWORD PTR es:[edi],dx
  43cc96:	outs   dx,DWORD PTR ds:[esi]
  43cc97:	outs   dx,BYTE PTR ds:[esi]
  43cc98:	inc    eax
  43cc99:	inc    eax
  43cc9a:	pop    ecx
  43cc9b:	inc    ecx
  43cc9c:	dec    eax
  43cc9d:	push   eax
  43cc9e:	inc    edx
  43cc9f:	pop    edi
  43cca0:	push   edi
  43cca1:	inc    eax
  43cca2:	pop    edx
  43cca3:	add    BYTE PTR [eax+eax*1],al
  43cca6:	aas    
  43cca7:	aas    
  43cca8:	xor    BYTE PTR [ebx+0x4d],al
  43ccab:	jns    0x43ccef
  43ccad:	jne    0x43cd15
  43ccaf:	data16 gs jb 0x43ccf3
  43ccb3:	inc    edx
  43ccb4:	jne    0x43cd1c
  43ccb6:	data16 gs jb 0x43ccfa
  43ccba:	inc    ebx
  43ccbb:	outs   dx,DWORD PTR ds:[esi]
  43ccbc:	ins    DWORD PTR es:[edi],dx
  43ccbd:	ins    DWORD PTR es:[edi],dx
  43ccbe:	outs   dx,DWORD PTR ds:[esi]
  43ccbf:	outs   dx,BYTE PTR ds:[esi]
  43ccc0:	inc    eax
  43ccc1:	inc    eax
  43ccc2:	push   ecx
  43ccc3:	inc    ecx
  43ccc4:	inc    ebp
  43ccc5:	inc    eax
  43ccc6:	pop    eax
  43ccc7:	pop    edx
  43ccc8:	add    BYTE PTR [eax],al
  43ccca:	or     al,0x0
  43cccc:	aas    
  43cccd:	aas    
  43ccce:	xor    DWORD PTR [ebx+0x4d],eax
  43ccd1:	jns    0x43cd15
  43ccd3:	jne    0x43cd3b
  43ccd5:	data16 gs jb 0x43cd19
  43ccd9:	inc    edx
  43ccda:	jne    0x43cd42
  43ccdc:	data16 gs jb 0x43cd20
  43cce0:	inc    ebx
  43cce1:	outs   dx,DWORD PTR ds:[esi]
  43cce2:	ins    DWORD PTR es:[edi],dx
  43cce3:	ins    DWORD PTR es:[edi],dx
  43cce4:	outs   dx,DWORD PTR ds:[esi]
  43cce5:	outs   dx,BYTE PTR ds:[esi]
  43cce6:	inc    eax
  43cce7:	inc    eax
  43cce8:	push   ecx
  43cce9:	inc    ecx
  43ccea:	inc    ebp
  43cceb:	inc    eax
  43ccec:	pop    eax
  43cced:	pop    edx
  43ccee:	add    BYTE PTR [eax],al
  43ccf0:	sbb    eax,DWORD PTR [eax]
  43ccf2:	aas    
  43ccf3:	inc    edi
  43ccf4:	gs je  0x43cd3b
  43ccf7:	popa   
  43ccf8:	je     0x43cd5b
  43ccfa:	dec    esp
  43ccfb:	outs   dx,BYTE PTR gs:[esi]
  43ccfd:	addr16 je 0x43cd68
  43cd00:	inc    eax
  43cd01:	inc    ebx
  43cd02:	dec    ebp
  43cd03:	jns    0x43cd47
  43cd05:	jne    0x43cd6d
  43cd07:	data16 gs jb 0x43cd4b
  43cd0b:	inc    edx
  43cd0c:	jne    0x43cd74
  43cd0e:	data16 gs jb 0x43cd52
  43cd12:	inc    ebx
  43cd13:	outs   dx,DWORD PTR ds:[esi]
  43cd14:	ins    DWORD PTR es:[edi],dx
  43cd15:	ins    DWORD PTR es:[edi],dx
  43cd16:	outs   dx,DWORD PTR ds:[esi]
  43cd17:	outs   dx,BYTE PTR ds:[esi]
  43cd18:	inc    eax
  43cd19:	inc    eax
  43cd1a:	push   ecx
  43cd1b:	inc    edx
  43cd1c:	inc    ebp
  43cd1d:	dec    eax
  43cd1e:	pop    eax
  43cd1f:	pop    edx
  43cd20:	add    BYTE PTR [eax],al
  43cd22:	add    BYTE PTR es:[edi],bh
  43cd25:	push   esp
  43cd26:	outs   dx,DWORD PTR ds:[esi]
  43cd27:	inc    ecx
  43cd28:	jb     0x43cd9c
  43cd2a:	popa   
  43cd2b:	jns    0x43cd6d
  43cd2d:	inc    ebx
  43cd2e:	dec    ebp
  43cd2f:	jns    0x43cd73
  43cd31:	jne    0x43cd99
  43cd33:	data16 gs jb 0x43cd77
  43cd37:	inc    edx
  43cd38:	jne    0x43cda0
  43cd3a:	data16 gs jb 0x43cd7e
  43cd3e:	inc    ebx
  43cd3f:	outs   dx,DWORD PTR ds:[esi]
  43cd40:	ins    DWORD PTR es:[edi],dx
  43cd41:	ins    DWORD PTR es:[edi],dx
  43cd42:	outs   dx,DWORD PTR ds:[esi]
  43cd43:	outs   dx,BYTE PTR ds:[esi]
  43cd44:	inc    eax
  43cd45:	inc    eax
  43cd46:	push   ecx
  43cd47:	inc    edx
  43cd48:	inc    ebp
  43cd49:	push   eax
  43cd4a:	inc    edx
  43cd4b:	inc    esp
  43cd4c:	pop    eax
  43cd4d:	pop    edx
  43cd4e:	add    BYTE PTR [eax],al
  43cd50:	and    DWORD PTR [eax],eax
  43cd52:	aas    
  43cd53:	dec    ecx
  43cd54:	jae    0x43cd9a
  43cd56:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  43cd5d:	jns    0x43cda4
  43cd5f:	js     0x43cdca
  43cd61:	jae    0x43cdd7
  43cd63:	jae    0x43cda5
  43cd65:	push   eax
  43cd66:	popa   
  43cd67:	je     0x43cdd1
  43cd69:	inc    eax
  43cd6a:	inc    ebx
  43cd6b:	outs   dx,DWORD PTR ds:[esi]
  43cd6c:	ins    DWORD PTR es:[edi],dx
  43cd6d:	ins    DWORD PTR es:[edi],dx
  43cd6e:	outs   dx,DWORD PTR ds:[esi]
  43cd6f:	outs   dx,BYTE PTR ds:[esi]
  43cd70:	inc    eax
  43cd71:	inc    eax
  43cd72:	pop    ecx
  43cd73:	inc    ecx
  43cd74:	dec    eax
  43cd75:	push   eax
  43cd76:	inc    edx
  43cd77:	pop    edi
  43cd78:	push   edi
  43cd79:	inc    eax
  43cd7a:	pop    edx
  43cd7b:	add    BYTE PTR [esi],al
  43cd7d:	add    BYTE PTR [edi],bh
  43cd7f:	aas    
  43cd80:	xor    BYTE PTR [ebx+0x4d],al
  43cd83:	jns    0x43cdd8
  43cd85:	je     0x43cdf9
  43cd87:	imul   ebp,DWORD PTR [esi+0x67],0x75424057
  43cd8e:	data16 data16 gs jb 0x43cdd3
  43cd93:	inc    ebx
  43cd94:	outs   dx,DWORD PTR ds:[esi]
  43cd95:	ins    DWORD PTR es:[edi],dx
  43cd96:	ins    DWORD PTR es:[edi],dx
  43cd97:	outs   dx,DWORD PTR ds:[esi]
  43cd98:	outs   dx,BYTE PTR ds:[esi]
  43cd99:	inc    eax
  43cd9a:	inc    eax
  43cd9b:	push   ecx
  43cd9c:	inc    ecx
  43cd9d:	inc    ebp
  43cd9e:	inc    eax
  43cd9f:	pop    eax
  43cda0:	pop    edx
  43cda1:	add    BYTE PTR [esi],cl
  43cda3:	add    BYTE PTR [edi],bh
  43cda5:	aas    
  43cda6:	xor    DWORD PTR [ebx+0x4d],eax
  43cda9:	jns    0x43cdfe
  43cdab:	je     0x43ce1f
  43cdad:	imul   ebp,DWORD PTR [esi+0x67],0x75424057
  43cdb4:	data16 data16 gs jb 0x43cdf9
  43cdb9:	inc    ebx
  43cdba:	outs   dx,DWORD PTR ds:[esi]
  43cdbb:	ins    DWORD PTR es:[edi],dx
  43cdbc:	ins    DWORD PTR es:[edi],dx
  43cdbd:	outs   dx,DWORD PTR ds:[esi]
  43cdbe:	outs   dx,BYTE PTR ds:[esi]
  43cdbf:	inc    eax
  43cdc0:	inc    eax
  43cdc1:	push   ecx
  43cdc2:	inc    ecx
  43cdc3:	inc    ebp
  43cdc4:	inc    eax
  43cdc5:	pop    eax
  43cdc6:	pop    edx
  43cdc7:	add    BYTE PTR [eax],bl
  43cdc9:	add    BYTE PTR [edi],bh
  43cdcb:	inc    edi
  43cdcc:	gs je  0x43ce10
  43cdcf:	jo     0x43ce41
  43cdd1:	inc    esi
  43cdd2:	outs   dx,DWORD PTR ds:[esi]
  43cdd3:	ins    BYTE PTR es:[edi],dx
  43cdd4:	fs gs jb 0x43ce18
  43cdd8:	push   eax
  43cdd9:	popa   
  43cdda:	je     0x43ce44
  43cddc:	inc    eax
  43cddd:	inc    ebx
  43cdde:	outs   dx,DWORD PTR ds:[esi]
  43cddf:	ins    DWORD PTR es:[edi],dx
  43cde0:	ins    DWORD PTR es:[edi],dx
  43cde1:	outs   dx,DWORD PTR ds:[esi]
  43cde2:	outs   dx,BYTE PTR ds:[esi]
  43cde3:	inc    eax
  43cde4:	inc    eax
  43cde5:	pop    ecx
  43cde6:	inc    ecx
  43cde7:	aas    
  43cde8:	inc    edx
  43cde9:	dec    eax
  43cdea:	push   eax
  43cdeb:	inc    ecx
  43cdec:	push   esi
  43cded:	inc    ebx
  43cdee:	dec    ebp
  43cdef:	jns    0x43ce44
  43cdf1:	je     0x43ce65
  43cdf3:	imul   ebp,DWORD PTR [esi+0x67],0x75424057
  43cdfa:	data16 data16 gs jb 0x43ce3f
  43cdff:	xor    al,BYTE PTR [eax+0x40]
  43ce02:	pop    edx
  43ce03:	add    BYTE PTR [ebx],ch
  43ce05:	add    BYTE PTR [edi],bh
  43ce07:	arpl   WORD PTR [edi+0x73],bx
  43ce0a:	je     0x43ce7e
  43ce0c:	inc    eax
  43ce0d:	inc    ebx
  43ce0e:	dec    ebp
  43ce0f:	jns    0x43ce64
  43ce11:	je     0x43ce85
  43ce13:	imul   ebp,DWORD PTR [esi+0x67],0x75424057
  43ce1a:	data16 data16 gs jb 0x43ce5f
  43ce1f:	inc    ebx
  43ce20:	outs   dx,DWORD PTR ds:[esi]
  43ce21:	ins    DWORD PTR es:[edi],dx
  43ce22:	ins    DWORD PTR es:[edi],dx
  43ce23:	outs   dx,DWORD PTR ds:[esi]
  43ce24:	outs   dx,BYTE PTR ds:[esi]
  43ce25:	inc    eax
  43ce26:	inc    eax
  43ce27:	push   ecx
  43ce28:	inc    edx
  43ce29:	inc    ebp
  43ce2a:	push   eax
  43ce2b:	inc    edx
  43ce2c:	pop    edi
  43ce2d:	push   edi
  43ce2e:	pop    eax
  43ce2f:	pop    edx
  43ce30:	add    BYTE PTR [eax],al
  43ce32:	inc    ebx
  43ce33:	outs   dx,DWORD PTR ds:[esi]
  43ce34:	ins    DWORD PTR es:[edi],dx
  43ce35:	ins    DWORD PTR es:[edi],dx
  43ce36:	outs   dx,DWORD PTR ds:[esi]
  43ce37:	outs   dx,BYTE PTR ds:[esi]
  43ce38:	dec    esp
  43ce39:	imul   esp,DWORD PTR [edx+0x2e],0x6c6c64
  43ce40:	push   eax
  43ce41:	ins    BYTE PTR es:[edi],dx
  43ce42:	jne    0x43ceab
  43ce44:	imul   ebp,DWORD PTR [esi+0x4b],0x656e7265
  43ce4b:	ins    BYTE PTR es:[edi],dx
  43ce4c:	cs fs ins BYTE PTR es:[edi],dx
  43ce4f:	ins    BYTE PTR es:[edi],dx
  43ce50:	add    BYTE PTR [eax],al
  43ce52:	xchg   esi,eax
  43ce53:	add    eax,0x72736377
  43ce58:	arpl   WORD PTR [eax+0x72],bp
  43ce5b:	add    BYTE PTR [ecx],dl
  43ce5d:	add    BYTE PTR [edi],bh
  43ce5f:	aas    
  43ce60:	xor    eax,DWORD PTR [eax+0x59]
  43ce63:	inc    ecx
  43ce64:	pop    eax
  43ce65:	push   eax
  43ce66:	inc    ecx
  43ce67:	pop    eax
  43ce68:	inc    eax
  43ce69:	pop    edx
  43ce6a:	add    BYTE PTR [eax],al
  43ce6c:	or     DWORD PTR [eax],eax
  43ce6e:	aas    
  43ce6f:	aas    
  43ce70:	xor    BYTE PTR [ebp+0x78],ah
  43ce73:	arpl   WORD PTR [ebp+0x70],sp
  43ce76:	je     0x43cee1
  43ce78:	outs   dx,DWORD PTR ds:[esi]
  43ce79:	outs   dx,BYTE PTR ds:[esi]
  43ce7a:	inc    eax
  43ce7b:	jae    0x43cef1
  43ce7d:	fs inc eax
  43ce7f:	inc    eax
  43ce80:	push   ecx
  43ce81:	inc    ecx
  43ce82:	inc    ebp
  43ce83:	inc    eax
  43ce84:	pop    eax
  43ce85:	pop    edx
  43ce86:	add    BYTE PTR [eax],al
  43ce88:	or     eax,0x313f3f00
  43ce8d:	gs js  0x43cef3
  43ce90:	gs jo  0x43cf07
  43ce93:	imul   ebp,DWORD PTR [edi+0x6e],0x64747340
  43ce9a:	inc    eax
  43ce9b:	inc    eax
  43ce9c:	push   ebp
  43ce9d:	inc    ecx
  43ce9e:	inc    ebp
  43ce9f:	inc    eax
  43cea0:	pop    eax
  43cea1:	pop    edx
  43cea2:	add    BYTE PTR [eax],al
  43cea4:	(bad)  
  43cea6:	aas    
  43cea7:	aas    
  43cea8:	xor    al,BYTE PTR [eax+0x59]
  43ceab:	inc    ecx
  43ceac:	push   eax
  43cead:	inc    ecx
  43ceae:	pop    eax
  43ceaf:	dec    ecx
  43ceb0:	inc    eax
  43ceb1:	pop    edx
  43ceb2:	add    BYTE PTR [eax],al
  43ceb4:	or     BYTE PTR [eax],al
  43ceb6:	aas    
  43ceb7:	aas    
  43ceb8:	xor    BYTE PTR [ebp+0x78],ah
  43cebb:	arpl   WORD PTR [ebp+0x70],sp
  43cebe:	je     0x43cf29
  43cec0:	outs   dx,DWORD PTR ds:[esi]
  43cec1:	outs   dx,BYTE PTR ds:[esi]
  43cec2:	inc    eax
  43cec3:	jae    0x43cf39
  43cec5:	fs inc eax
  43cec7:	inc    eax
  43cec8:	push   ecx
  43cec9:	inc    ecx
  43ceca:	inc    ebp
  43cecb:	inc    eax
  43cecc:	inc    ecx
  43cecd:	inc    edx
  43cece:	push   esi
  43cecf:	xor    BYTE PTR [ecx],dh
  43ced1:	inc    eax
  43ced2:	inc    eax
  43ced3:	pop    edx
  43ced4:	add    BYTE PTR [eax],al
  43ced6:	inc    esi
  43ced7:	add    BYTE PTR [edi],bh
  43ced9:	ja     0x43cf43
  43cedb:	popa   
  43cedc:	je     0x43cf1e
  43cede:	gs js  0x43cf44
  43cee1:	gs jo  0x43cf58
  43cee4:	imul   ebp,DWORD PTR [edi+0x6e],0x64747340
  43ceeb:	inc    eax
  43ceec:	inc    eax
  43ceed:	push   ebp
  43ceee:	inc    edx
  43ceef:	inc    ebp
  43cef0:	push   eax
  43cef1:	inc    edx
  43cef2:	inc    esp
  43cef3:	pop    eax
  43cef4:	pop    edx
  43cef5:	add    BYTE PTR [esi],al
  43cef7:	add    BYTE PTR [edi],bh
  43cef9:	aas    
  43cefa:	xor    BYTE PTR [ebp+0x78],ah
  43cefd:	arpl   WORD PTR [ebp+0x70],sp
  43cf00:	je     0x43cf6b
  43cf02:	outs   dx,DWORD PTR ds:[esi]
  43cf03:	outs   dx,BYTE PTR ds:[esi]
  43cf04:	inc    eax
  43cf05:	jae    0x43cf7b
  43cf07:	fs inc eax
  43cf09:	inc    eax
  43cf0a:	push   ecx
  43cf0b:	inc    ecx
  43cf0c:	inc    ebp
  43cf0d:	inc    eax
  43cf0e:	inc    ecx
  43cf0f:	inc    edx
  43cf10:	push   ecx
  43cf11:	inc    edx
  43cf12:	inc    esp
  43cf13:	inc    eax
  43cf14:	pop    edx
  43cf15:	add    BYTE PTR [ecx],ch
  43cf17:	add    eax,0x6d6d656d
  43cf1c:	outs   dx,DWORD PTR ds:[esi]
  43cf1d:	jbe    0x43cf84
  43cf1f:	pop    edi
  43cf20:	jae    0x43cf22
  43cf22:	or     al,BYTE PTR [edx]
  43cf24:	pop    edi
  43cf25:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
  43cf2c:	pop    edi
  43cf2d:	jo     0x43cf90
  43cf2f:	jb     0x43cf92
  43cf31:	ins    DWORD PTR es:[edi],dx
  43cf32:	gs je  0x43cf9a
  43cf35:	jb     0x43cf96
  43cf37:	outs   dx,BYTE PTR ds:[esi]
  43cf38:	outs   dx,DWORD PTR ds:[esi]
  43cf39:	imul   ebp,DWORD PTR [esi+0x66],0x32b006f
  43cf40:	pop    edi
  43cf41:	jo     0x43cfb8
  43cf43:	jb     0x43cfaa
  43cf45:	arpl   WORD PTR [ecx+0x6c],sp
  43cf48:	ins    BYTE PTR es:[edi],dx
  43cf49:	add    BYTE PTR [esi+0x5],al
  43cf4c:	jae    0x43cfbe
  43cf4e:	jb     0x43cfb9
  43cf50:	outs   dx,BYTE PTR ds:[esi]
  43cf51:	je     0x43cfb9
  43cf53:	add    BYTE PTR [ebp+eax*1+0x73],bl
  43cf57:	je     0x43cfcb
  43cf59:	outs   dx,BYTE PTR ds:[esi]
  43cf5a:	arpl   WORD PTR [eax+0x79],si
  43cf5d:	pop    edi
  43cf5e:	jae    0x43cf60
  43cf60:	add    al,BYTE PTR [eax]
  43cf62:	aas    
  43cf63:	aas    
  43cf64:	xor    BYTE PTR [edx+0x61],ah
  43cf67:	fs pop edi
  43cf69:	arpl   WORD PTR [ecx+0x73],sp
  43cf6c:	je     0x43cfae
  43cf6e:	jae    0x43cfe4
  43cf70:	fs inc eax
  43cf72:	inc    eax
  43cf73:	push   ecx
  43cf74:	inc    ecx
  43cf75:	inc    ebp
  43cf76:	inc    eax
  43cf77:	inc    ecx
  43cf78:	inc    edx
  43cf79:	push   esi
  43cf7a:	xor    BYTE PTR [ecx],dh
  43cf7c:	inc    eax
  43cf7d:	inc    eax
  43cf7e:	pop    edx
  43cf7f:	add    BYTE PTR [ebx],cl
  43cf81:	add    BYTE PTR [edi],bh
  43cf83:	aas    
  43cf84:	xor    DWORD PTR [edx+0x61],esp
  43cf87:	fs pop edi
  43cf89:	arpl   WORD PTR [ecx+0x73],sp
  43cf8c:	je     0x43cfce
  43cf8e:	jae    0x43d004
  43cf90:	fs inc eax
  43cf92:	inc    eax
  43cf93:	push   ebp
  43cf94:	inc    ecx
  43cf95:	inc    ebp
  43cf96:	inc    eax
  43cf97:	pop    eax
  43cf98:	pop    edx
  43cf99:	add    BYTE PTR [ebx],al
  43cf9b:	add    BYTE PTR [edi],bh
  43cf9d:	aas    
  43cf9e:	xor    BYTE PTR [edx+0x61],ah
  43cfa1:	fs pop edi
  43cfa3:	arpl   WORD PTR [ecx+0x73],sp
  43cfa6:	je     0x43cfe8
  43cfa8:	jae    0x43d01e
  43cfaa:	fs inc eax
  43cfac:	inc    eax
  43cfad:	push   ecx
  43cfae:	inc    ecx
  43cfaf:	inc    ebp
  43cfb0:	inc    eax
  43cfb1:	push   eax
  43cfb2:	inc    edx
  43cfb3:	inc    esp
  43cfb4:	inc    eax
  43cfb5:	pop    edx
  43cfb6:	add    BYTE PTR [eax],al
  43cfb8:	adc    BYTE PTR [edi+ebx*2],al
  43cfbb:	jbe    0x43d030
  43cfbd:	outs   dx,BYTE PTR ds:[esi]
  43cfbe:	ja     0x43d030
  43cfc0:	jb     0x43d02b
  43cfc2:	outs   dx,BYTE PTR ds:[esi]
  43cfc3:	je     0x43d02b
  43cfc5:	add    ch,dh
  43cfc7:	add    DWORD PTR [edi+0x67],ebx
  43cfca:	ins    DWORD PTR es:[edi],dx
  43cfcb:	je     0x43d036
  43cfcd:	ins    DWORD PTR es:[edi],dx
  43cfce:	gs ss xor al,0x0
  43cfd2:	push   ss
  43cfd3:	add    BYTE PTR [edi],bh
  43cfd5:	aas    
  43cfd6:	cmp    BYTE PTR [ecx+edi*2+0x70],dh
  43cfda:	gs pop edi
  43cfdc:	imul   ebp,DWORD PTR [esi+0x66],0x5140406f
  43cfe3:	inc    edx
  43cfe4:	inc    ebp
  43cfe5:	pop    edi
  43cfe6:	dec    esi
  43cfe7:	inc    ecx
  43cfe8:	inc    edx
  43cfe9:	push   esi
  43cfea:	xor    BYTE PTR [eax+0x40],al
  43cfed:	pop    edx
  43cfee:	add    BYTE PTR [eax],al
  43cff0:	or     al,BYTE PTR [edi+ebx*2]
  43cff3:	jbe    0x43d068
  43cff5:	outs   dx,BYTE PTR ds:[esi]
  43cff6:	jo     0x43d06a
  43cff8:	imul   ebp,DWORD PTR [esi+0x74],0x21000066
  43cfff:	add    BYTE PTR [edi],bh
  43d001:	aas    
  43d002:	pop    edi
  43d003:	push   esi
  43d004:	inc    eax
  43d005:	pop    ecx
  43d006:	inc    ecx
  43d007:	pop    eax
  43d008:	push   eax
  43d009:	inc    ecx
  43d00a:	pop    eax
  43d00b:	inc    eax
  43d00c:	pop    edx
  43d00d:	add    BYTE PTR [esp+eax*1],ah
  43d010:	pop    edi
  43d011:	ja     0x43d074
  43d013:	arpl   WORD PTR [ebx+0x65],sp
  43d016:	jae    0x43d08b
  43d018:	pop    edi
  43d019:	jae    0x43d01b
  43d01b:	add    BYTE PTR [edi+0x72775f04],al
  43d021:	outs   dx,BYTE PTR gs:[esi]
  43d023:	popa   
  43d024:	ins    DWORD PTR es:[edi],dx
  43d025:	add    BYTE PTR gs:[eax],al
  43d028:	xchg   ebx,eax
  43d029:	add    eax,0x6e736377
  43d02e:	arpl   WORD PTR [eax+0x79],si
  43d031:	pop    edi
  43d032:	jae    0x43d034
  43d034:	dec    edi
  43d035:	add    al,0x5f
  43d037:	ja     0x43d09c
  43d039:	jae    0x43d0b0
  43d03b:	jo     0x43d0af
  43d03d:	pop    edi
  43d03e:	jae    0x43d040
  43d040:	mov    ch,0x4
  43d042:	popa   
  43d043:	bound  ebp,QWORD PTR [edi+0x72]
  43d046:	je     0x43d048
  43d048:	dec    ebp
  43d049:	push   ebx
  43d04a:	push   esi
  43d04b:	inc    ebx
  43d04c:	push   edx
  43d04d:	cmp    DWORD PTR [eax],esi
  43d04f:	cs fs ins BYTE PTR es:[edi],dx
  43d052:	ins    BYTE PTR es:[edi],dx
  43d053:	add    dh,ah
  43d055:	add    ebx,DWORD PTR [edi+0x75]
  43d058:	outs   dx,BYTE PTR ds:[esi]
  43d059:	ins    BYTE PTR es:[edi],dx
  43d05a:	outs   dx,DWORD PTR ds:[esi]
  43d05b:	arpl   WORD PTR [ebx+0x0],bp
  43d05e:	xchg   esi,eax
  43d05f:	add    BYTE PTR [edi+0x5f],bl
  43d062:	fs ins BYTE PTR es:[edi],dx
  43d064:	ins    BYTE PTR es:[edi],dx
  43d065:	outs   dx,DWORD PTR ds:[esi]
  43d066:	outs   dx,BYTE PTR ds:[esi]
  43d067:	gs js  0x43d0d3
  43d06a:	je     0x43d06c
  43d06c:	push   0x1
  43d06e:	pop    edi
  43d06f:	outs   dx,BYTE PTR gs:[esi]
  43d071:	arpl   WORD PTR [edi+0x64],bp
  43d074:	gs pop edi
  43d076:	jo     0x43d0e7
  43d078:	imul   ebp,DWORD PTR [esi+0x74],0x76007265
  43d07f:	add    bl,BYTE PTR [edi+0x6c]
  43d082:	outs   dx,DWORD PTR ds:[esi]
  43d083:	arpl   WORD PTR [ebx+0x0],bp
  43d086:	sbb    al,0x3
  43d088:	pop    edi
  43d089:	outs   dx,DWORD PTR ds:[esi]
  43d08a:	outs   dx,BYTE PTR ds:[esi]
  43d08b:	gs js  0x43d0f7
  43d08e:	je     0x43d090
  43d090:	pusha  
  43d091:	add    DWORD PTR [edi+0x64],ebx
  43d094:	arpl   WORD PTR gs:[edi+0x64],bp
  43d098:	gs pop edi
  43d09a:	jo     0x43d10b
  43d09c:	imul   ebp,DWORD PTR [esi+0x74],0x15007265
  43d0a3:	add    DWORD PTR [edi+0x61],ebx
  43d0a6:	ins    DWORD PTR es:[edi],dx
  43d0a7:	jae    0x43d110
  43d0a9:	pop    edi
  43d0aa:	gs js  0x43d116
  43d0ad:	je     0x43d0af
  43d0af:	add    bh,dh
  43d0b1:	add    BYTE PTR [edi+0x5f],bl
  43d0b4:	ja     0x43d11d
  43d0b6:	gs je  0x43d126
  43d0b9:	popa   
  43d0ba:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  43d0c1:	add    BYTE PTR [ecx+eax*1],ch
  43d0c4:	pop    edi
  43d0c5:	arpl   WORD PTR [ebp+0x78],sp
  43d0c8:	imul   esi,DWORD PTR [eax+eax*1+0x0],0x655f017c
  43d0d0:	js     0x43d13b
  43d0d2:	je     0x43d0d4
  43d0d4:	data16 add BYTE PTR [edi+0x58],bl
  43d0d8:	arpl   WORD PTR [eax+0x74],si
  43d0db:	inc    esi
  43d0dc:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x4cc0072
  43d0e4:	gs js  0x43d150
  43d0e7:	je     0x43d0e9
  43d0e9:	add    BYTE PTR [edx],ch
  43d0eb:	add    al,0x5f
  43d0ed:	ja     0x43d152
  43d0ef:	ins    DWORD PTR es:[edi],dx
  43d0f0:	fs ins BYTE PTR es:[edi],dx
  43d0f2:	outs   dx,BYTE PTR ds:[esi]
  43d0f3:	add    BYTE PTR [edx+eax*1],al
  43d0f6:	pop    edi
  43d0f7:	imul   ebp,DWORD PTR [esi+0x69],0x72657474
  43d0fe:	ins    DWORD PTR es:[edi],dx
  43d0ff:	add    BYTE PTR ds:0x6e695f02,al
  43d105:	imul   esi,DWORD PTR [esp+esi*2+0x65],0x655f6d72
  43d10d:	add    BYTE PTR [ecx+eax*1],bh
  43d110:	pop    edi
  43d111:	arpl   WORD PTR [edi+0x6e],bp
  43d114:	imul   sp,WORD PTR [edi+0x74],0x7268
  43d11a:	gs popa 
  43d11c:	fs ins BYTE PTR es:[edi],dx
  43d11e:	outs   dx,DWORD PTR ds:[esi]
  43d11f:	arpl   WORD PTR [ecx+0x6c],sp
  43d122:	gs add bl,ah
  43d125:	add    BYTE PTR [edi+0x5f],bl
  43d128:	jae    0x43d18f
  43d12a:	je     0x43d1a1
  43d12c:	jae    0x43d193
  43d12e:	jb     0x43d19d
  43d130:	popa   
  43d131:	je     0x43d19b
  43d133:	gs jb  0x43d1a8
  43d136:	add    BYTE PTR [eax],al
  43d138:	or     eax,DWORD PTR [ecx]
  43d13a:	pop    edi
  43d13b:	popa   
  43d13c:	fs push 0x75
  43d13f:	jae    0x43d1b5
  43d141:	pop    edi
  43d142:	imul   si,WORD PTR fs:[esi+0x0],0xcb00
  43d149:	add    BYTE PTR [edi+0x5f],bl
  43d14c:	jo     0x43d1ad
  43d14e:	pop    edi
  43d14f:	arpl   WORD PTR [edi+0x6d],bp
  43d152:	ins    DWORD PTR es:[edi],dx
  43d153:	outs   dx,DWORD PTR ds:[esi]
  43d154:	fs add BYTE PTR gs:[eax],al
  43d158:	iret   
  43d159:	add    BYTE PTR [edi+0x5f],bl
  43d15c:	jo     0x43d1bd
  43d15e:	pop    edi
  43d15f:	ins    WORD PTR es:[edi],dx
  43d161:	outs   dx,DWORD PTR ds:[esi]
  43d162:	fs add BYTE PTR gs:[eax],al
  43d166:	loopne 0x43d168
  43d168:	pop    edi
  43d169:	pop    edi
  43d16a:	jae    0x43d1d1
  43d16c:	je     0x43d1cd
  43d16e:	popa   
  43d16f:	jo     0x43d1e1
  43d171:	pop    edi
  43d172:	je     0x43d1ed
  43d174:	jo     0x43d1db
  43d176:	add    BYTE PTR [eax],al
  43d178:	dec    ebx
  43d179:	add    DWORD PTR [edi+0x63],ebx
  43d17c:	jb     0x43d1f2
  43d17e:	pop    edi
  43d17f:	fs bound esi,QWORD PTR gs:[ebp+0x67]
  43d184:	addr16 gs jb 0x43d1e7
  43d188:	push   0x6b6f6f
  43d18d:	add    BYTE PTR [ebx+0x0],al
  43d190:	aas    
  43d191:	je     0x43d1f8
  43d193:	jb     0x43d202
  43d195:	imul   ebp,DWORD PTR [esi+0x61],0x40406574
  43d19c:	pop    ecx
  43d19d:	inc    ecx
  43d19e:	pop    eax
  43d19f:	pop    eax
  43d1a0:	pop    edx
  43d1a1:	add    BYTE PTR [esi],dh
  43d1a3:	add    BYTE PTR [edi],bh
  43d1a5:	pop    edi
  43d1a6:	je     0x43d221
  43d1a8:	jo     0x43d20f
  43d1aa:	pop    edi
  43d1ab:	imul   ebp,DWORD PTR [esi+0x66],0x74645f6f
  43d1b2:	outs   dx,DWORD PTR ds:[esi]
  43d1b3:	jb     0x43d214
  43d1b5:	imul   ebp,DWORD PTR [esi+0x74],0x616e7265
  43d1bc:	ins    BYTE PTR es:[edi],dx
  43d1bd:	pop    edi
  43d1be:	ins    DWORD PTR es:[edi],dx
  43d1bf:	gs je  0x43d22a
  43d1c2:	outs   dx,DWORD PTR ds:[esi]
  43d1c3:	fs inc eax
  43d1c5:	je     0x43d240
  43d1c7:	jo     0x43d22e
  43d1c9:	pop    edi
  43d1ca:	imul   ebp,DWORD PTR [esi+0x66],0x5140406f
  43d1d1:	inc    ecx
  43d1d2:	inc    ebp
  43d1d3:	pop    eax
  43d1d4:	pop    eax
  43d1d5:	pop    edx
  43d1d6:	add    BYTE PTR [eax],al
  43d1d8:	jae    0x43d1db
  43d1da:	pop    edi
  43d1db:	gs js  0x43d241
  43d1de:	gs jo  0x43d255
  43d1e1:	pop    edi
  43d1e2:	push   0x6c646e61
  43d1e7:	gs jb  0x43d21e
  43d1ea:	pop    edi
  43d1eb:	arpl   WORD PTR [edi+0x6d],bp
  43d1ee:	ins    DWORD PTR es:[edi],dx
  43d1ef:	outs   dx,DWORD PTR ds:[esi]
  43d1f0:	outs   dx,BYTE PTR ds:[esi]
  43d1f1:	add    BYTE PTR [ebx],cl
  43d1f3:	add    bl,BYTE PTR [edi+0x69]
  43d1f6:	outs   dx,BYTE PTR ds:[esi]
  43d1f7:	jbe    0x43d268
  43d1f9:	imul   esp,DWORD PTR [ebp+0x5f],0x77
  43d1fd:	popa   
  43d1fe:	je     0x43d273
  43d200:	outs   dx,DWORD PTR ds:[esi]
  43d201:	outs   dx,BYTE PTR ds:[esi]
  43d202:	add    BYTE PTR [eax],al
  43d204:	aas    
  43d205:	add    DWORD PTR [edi+0x63],ebx
  43d208:	outs   dx,DWORD PTR ds:[esi]
  43d209:	outs   dx,BYTE PTR ds:[esi]
  43d20a:	je     0x43d27e
  43d20c:	outs   dx,DWORD PTR ds:[esi]
  43d20d:	ins    BYTE PTR es:[edi],dx
  43d20e:	data16 jo 0x43d270
  43d211:	jae    0x43d213
  43d213:	add    BYTE PTR [eax],al
  43d215:	add    BYTE PTR [ebx+0x72],al
  43d218:	gs popa 
  43d21a:	je     0x43d281
  43d21c:	inc    esi
  43d21d:	imul   ebp,DWORD PTR [ebp+eiz*2+0x53],0x65747379
  43d225:	ins    DWORD PTR es:[edi],dx
  43d226:	add    BYTE PTR [eax],al
  43d228:	inc    esi
  43d229:	imul   ebp,DWORD PTR [ebp+eiz*2+0x53],0x65747379
  43d231:	ins    DWORD PTR es:[edi],dx
  43d232:	cs fs ins BYTE PTR es:[edi],dx
  43d235:	ins    BYTE PTR es:[edi],dx
  43d236:	add    BYTE PTR [eax],al
  43d238:	or     BYTE PTR [eax],al
  43d23a:	aas    
  43d23b:	push   esp
  43d23c:	outs   dx,DWORD PTR ds:[esi]
  43d23d:	push   ebx
  43d23e:	je     0x43d2b2
  43d240:	imul   ebp,DWORD PTR [esi+0x67],0x65564340
  43d247:	jb     0x43d2bc
  43d249:	imul   ebp,DWORD PTR [edi+0x6e],0x6f666e49
  43d250:	inc    eax
  43d251:	push   esi
  43d252:	gs jb  0x43d2c8
  43d255:	imul   ebp,DWORD PTR [edi+0x6e],0x4040534e
  43d25c:	push   ebx
  43d25d:	inc    ecx
  43d25e:	pop    eax
  43d25f:	dec    eax
  43d260:	push   eax
  43d261:	inc    ecx
  43d262:	pop    edi
  43d263:	push   edi
  43d264:	inc    ecx
  43d265:	inc    ecx
  43d266:	dec    eax
  43d267:	inc    eax
  43d268:	pop    edx
  43d269:	add    BYTE PTR [esi],al
  43d26b:	add    BYTE PTR [edi],bh
  43d26d:	inc    edi
  43d26e:	gs je  0x43d2c7
  43d271:	gs jb  0x43d2e7
  43d274:	imul   ebp,DWORD PTR [edi+0x6e],0x406d754e
  43d27b:	inc    ebx
  43d27c:	push   esi
  43d27d:	gs jb  0x43d2f3
  43d280:	imul   ebp,DWORD PTR [edi+0x6e],0x6f666e49
  43d287:	inc    eax
  43d288:	push   esi
  43d289:	gs jb  0x43d2ff
  43d28c:	imul   ebp,DWORD PTR [edi+0x6e],0x4040534e
  43d293:	push   ebx
  43d294:	inc    ecx
  43d295:	dec    eax
  43d296:	pop    eax
  43d297:	pop    edx
  43d298:	add    BYTE PTR [eax],al
  43d29a:	pop    es
  43d29b:	add    BYTE PTR [edi],bh
  43d29d:	dec    ecx
  43d29e:	jae    0x43d2e2
  43d2a0:	jb     0x43d303
  43d2a2:	outs   dx,BYTE PTR ds:[esi]
  43d2a3:	arpl   WORD PTR [eax+0x40],bp
  43d2a6:	inc    ebx
  43d2a7:	push   esi
  43d2a8:	gs jb  0x43d31e
  43d2ab:	imul   ebp,DWORD PTR [edi+0x6e],0x6f666e49
  43d2b2:	inc    eax
  43d2b3:	push   esi
  43d2b4:	gs jb  0x43d32a
  43d2b7:	imul   ebp,DWORD PTR [edi+0x6e],0x4040534e
  43d2be:	push   ebx
  43d2bf:	inc    ecx
  43d2c0:	pop    edi
  43d2c1:	dec    esi
  43d2c2:	dec    eax
  43d2c3:	inc    eax
  43d2c4:	pop    edx
  43d2c5:	add    BYTE PTR [eax+eax*1],al
  43d2c8:	aas    
  43d2c9:	inc    edi
  43d2ca:	gs je  0x43d322
  43d2cd:	jo     0x43d333
  43d2cf:	popa   
  43d2d0:	je     0x43d337
  43d2d2:	pop    eax
  43d2d3:	ins    DWORD PTR es:[edi],dx
  43d2d4:	ins    BYTE PTR es:[edi],dx
  43d2d5:	push   ebp
  43d2d6:	jb     0x43d344
  43d2d8:	inc    eax
  43d2d9:	inc    ebx
  43d2da:	push   esi
  43d2db:	gs jb  0x43d351
  43d2de:	imul   ebp,DWORD PTR [edi+0x6e],0x6f666e49
  43d2e5:	inc    eax
  43d2e6:	push   esi
  43d2e7:	gs jb  0x43d35d
  43d2ea:	imul   ebp,DWORD PTR [edi+0x6e],0x4040534e
  43d2f1:	push   ebx
  43d2f2:	inc    ecx
  43d2f3:	pop    eax
  43d2f4:	push   eax
  43d2f5:	inc    ecx
  43d2f6:	pop    edi
  43d2f7:	push   edi
  43d2f8:	inc    ecx
  43d2f9:	inc    ecx
  43d2fa:	dec    eax
  43d2fb:	inc    eax
  43d2fc:	pop    edx
  43d2fd:	add    BYTE PTR [ebx],al
  43d2ff:	add    BYTE PTR [edi],bh
  43d301:	inc    edi
  43d302:	gs je  0x43d347
  43d305:	popa   
  43d306:	arpl   WORD PTR [ebx+0x75],bp
  43d309:	jo     0x43d360
  43d30b:	jo     0x43d371
  43d30d:	popa   
  43d30e:	je     0x43d375
  43d310:	pop    eax
  43d311:	ins    DWORD PTR es:[edi],dx
  43d312:	ins    BYTE PTR es:[edi],dx
  43d313:	push   ebp
  43d314:	jb     0x43d382
  43d316:	inc    eax
  43d317:	inc    ebx
  43d318:	push   esi
  43d319:	gs jb  0x43d38f
  43d31c:	imul   ebp,DWORD PTR [edi+0x6e],0x6f666e49
  43d323:	inc    eax
  43d324:	push   esi
  43d325:	gs jb  0x43d39b
  43d328:	imul   ebp,DWORD PTR [edi+0x6e],0x4040534e
  43d32f:	push   ebx
  43d330:	inc    ecx
  43d331:	pop    eax
  43d332:	push   eax
  43d333:	inc    ecx
  43d334:	pop    edi
  43d335:	push   edi
  43d336:	inc    ecx
  43d337:	inc    ecx
  43d338:	dec    eax
  43d339:	inc    eax
  43d33a:	pop    edx
  43d33b:	add    BYTE PTR [esi+0x65],dl
  43d33e:	jb     0x43d3b3
  43d340:	imul   ebp,DWORD PTR [edi+0x6e],0x75646f4d
  43d347:	ins    BYTE PTR es:[edi],dx
  43d348:	gs cs fs ins BYTE PTR es:[edi],dx
  43d34c:	ins    BYTE PTR es:[edi],dx
  43d34d:	add    BYTE PTR [esi+0x3],ch
  43d350:	dec    ecx
  43d351:	outs   dx,BYTE PTR ds:[esi]
  43d352:	je     0x43d3b9
  43d354:	jb     0x43d3c2
  43d356:	outs   dx,DWORD PTR ds:[esi]
  43d357:	arpl   WORD PTR [ebx+0x65],bp
  43d35a:	fs inc ebp
  43d35c:	js     0x43d3c1
  43d35e:	push   0x65676e61
  43d363:	add    BYTE PTR [ebx+0x3],ch
  43d366:	dec    ecx
  43d367:	outs   dx,BYTE PTR ds:[esi]
  43d368:	je     0x43d3cf
  43d36a:	jb     0x43d3d8
  43d36c:	outs   dx,DWORD PTR ds:[esi]
  43d36d:	arpl   WORD PTR [ebx+0x65],bp
  43d370:	fs inc ebx
  43d372:	outs   dx,DWORD PTR ds:[esi]
  43d373:	ins    DWORD PTR es:[edi],dx
  43d374:	jo     0x43d3d7
  43d376:	jb     0x43d3dd
  43d378:	inc    ebp
  43d379:	js     0x43d3de
  43d37b:	push   0x65676e61
  43d380:	add    BYTE PTR [eax],al
  43d382:	xlat   BYTE PTR ds:[ebx]
  43d383:	add    al,BYTE PTR [edi+0x65]
  43d386:	je     0x43d3db
  43d388:	je     0x43d3eb
  43d38a:	jb     0x43d400
  43d38c:	jne    0x43d3fe
  43d38e:	dec    ecx
  43d38f:	outs   dx,BYTE PTR ds:[esi]
  43d390:	outs   dx,WORD PTR ds:[esi]
  43d392:	push   edi
  43d393:	add    BYTE PTR [eax+0x686e5505],dl
  43d399:	popa   
  43d39a:	outs   dx,BYTE PTR ds:[esi]
  43d39b:	fs ins BYTE PTR es:[edi],dx
  43d39d:	gs fs inc ebp
  43d3a0:	js     0x43d405
  43d3a2:	gs jo  0x43d419
  43d3a5:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
  43d3ac:	gs jb  0x43d3af
  43d3af:	add    BYTE PTR [eax+0x5],dl
  43d3b2:	push   ebx
  43d3b3:	gs je  0x43d40b
  43d3b6:	outs   dx,BYTE PTR ds:[esi]
  43d3b7:	push   0x6c646e61
  43d3bc:	gs fs inc ebp
  43d3bf:	js     0x43d424
  43d3c1:	gs jo  0x43d438
  43d3c4:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
  43d3cb:	gs jb  0x43d3ce
  43d3ce:	add    DWORD PTR [ebx],0x49
  43d3d1:	jae    0x43d417
  43d3d3:	bound  esi,QWORD PTR gs:[ebp+0x67]
  43d3d7:	addr16 gs jb 0x43d42b
  43d3db:	jb     0x43d442
  43d3dd:	jae    0x43d444
  43d3df:	outs   dx,BYTE PTR ds:[esi]
  43d3e0:	je     0x43d3e2
  43d3e2:	cmp    al,0x4
  43d3e4:	push   ecx
  43d3e5:	jne    0x43d44c
  43d3e7:	jb     0x43d462
  43d3e9:	push   eax
  43d3ea:	gs jb  0x43d453
  43d3ed:	outs   dx,DWORD PTR ds:[esi]
  43d3ee:	jb     0x43d45d
  43d3f0:	popa   
  43d3f1:	outs   dx,BYTE PTR ds:[esi]
  43d3f2:	arpl   WORD PTR [ebp+0x43],sp
  43d3f5:	outs   dx,DWORD PTR ds:[esi]
  43d3f6:	jne    0x43d466
  43d3f8:	je     0x43d45f
  43d3fa:	jb     0x43d3fc
  43d3fc:	adc    BYTE PTR [ebx],al
  43d3fe:	inc    edi
  43d3ff:	gs je  0x43d456
  43d402:	imul   esp,DWORD PTR [ebx+0x6b],0x6e756f43
  43d409:	je     0x43d40b
  43d40b:	add    BYTE PTR [ecx+0x6d655204],ah
  43d411:	outs   dx,DWORD PTR ds:[esi]
  43d412:	jbe    0x43d479
  43d414:	inc    esp
  43d415:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  43d41c:	jns    0x43d475
  43d41e:	add    BYTE PTR [eax],al
  43d420:	pop    DWORD PTR [ecx]
  43d422:	inc    esi
  43d423:	imul   ebp,DWORD PTR [esi+0x64],0x73726946
  43d42a:	je     0x43d472
  43d42c:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x1840000
  43d434:	inc    esi
  43d435:	imul   ebp,DWORD PTR [esi+0x64],0x736f6c43
  43d43c:	add    BYTE PTR gs:[ebx+0x6e694601],bl
  43d443:	fs dec esi
  43d445:	gs js  0x43d4bc
  43d448:	inc    esi
  43d449:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x44012d00
  43d451:	gs jbe 0x43d4bd
  43d454:	arpl   WORD PTR [ebp+0x49],sp
  43d457:	outs   dx,DWORD PTR ds:[esi]
  43d458:	inc    ebx
  43d459:	outs   dx,DWORD PTR ds:[esi]
  43d45a:	outs   dx,BYTE PTR ds:[esi]
  43d45b:	je     0x43d4cf
  43d45d:	outs   dx,DWORD PTR ds:[esi]
  43d45e:	ins    BYTE PTR es:[edi],dx
  43d45f:	add    BYTE PTR [esi+0x2],cl
  43d462:	inc    edi
  43d463:	gs je  0x43d4ac
  43d466:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x69727474
  43d46e:	bound  esi,QWORD PTR [ebp+0x74]
  43d471:	gs jae 0x43d4cb
  43d474:	add    BYTE PTR [eax],al
  43d476:	ret    
  43d477:	add    BYTE PTR [ebx+0x72],al
  43d47a:	gs popa 
  43d47c:	je     0x43d4e3
  43d47e:	inc    esp
  43d47f:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  43d486:	jns    0x43d4cd
  43d488:	js     0x43d4e1
  43d48a:	add    BYTE PTR [eax],al
  43d48c:	mov    BYTE PTR [eax],0x43
  43d48f:	jb     0x43d4f6
  43d491:	popa   
  43d492:	je     0x43d4f9
  43d494:	inc    esp
  43d495:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  43d49c:	jns    0x43d4f5
  43d49e:	add    BYTE PTR [eax],al
  43d4a0:	jle    0x43d4a4
  43d4a2:	inc    edi
  43d4a3:	gs je  0x43d4f3
  43d4a6:	outs   dx,DWORD PTR ds:[esi]
  43d4a7:	fs jne 0x43d516
  43d4aa:	gs dec eax
  43d4ac:	popa   
  43d4ad:	outs   dx,BYTE PTR ds:[esi]
  43d4ae:	fs ins BYTE PTR es:[edi],dx
  43d4b0:	gs inc ecx
  43d4b2:	add    BYTE PTR [eax],al
  43d4b4:	sub    al,0x0
  43d4b6:	inc    ecx
  43d4b7:	jb     0x43d51e
  43d4b9:	inc    esi
  43d4ba:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x41736970
  43d4c2:	dec    esi
  43d4c3:	push   ebx
  43d4c4:	dec    ecx
  43d4c5:	add    BYTE PTR [ebx+0x726f4601],dh
  43d4cb:	ins    DWORD PTR es:[edi],dx
  43d4cc:	popa   
  43d4cd:	je     0x43d51c
  43d4cf:	gs jae 0x43d545
  43d4d2:	popa   
  43d4d3:	addr16 gs inc ecx
  43d4d6:	add    BYTE PTR [eax],al
  43d4d8:	pop    esi
  43d4d9:	add    edi,DWORD PTR [edi]
  43d4db:	aas    
  43d4dc:	pop    ecx
  43d4dd:	aas    
  43d4de:	and    al,0x62
  43d4e0:	popa   
  43d4e1:	jae    0x43d54c
  43d4e3:	arpl   WORD PTR [edi+0x73],bx
  43d4e6:	je     0x43d55a
  43d4e8:	imul   ebp,DWORD PTR [esi+0x67],0x3f554440
  43d4ef:	and    al,0x63
  43d4f1:	push   0x745f7261
  43d4f6:	jb     0x43d559
  43d4f8:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x74734044
  43d500:	fs inc eax
  43d502:	inc    eax
  43d503:	push   esi
  43d504:	aas    
  43d505:	and    al,0x61
  43d507:	ins    BYTE PTR es:[edi],dx
  43d508:	ins    BYTE PTR es:[edi],dx
  43d509:	outs   dx,DWORD PTR ds:[esi]
  43d50a:	arpl   WORD PTR [ecx+0x74],sp
  43d50d:	outs   dx,DWORD PTR ds:[esi]
  43d50e:	jb     0x43d550
  43d510:	inc    esp
  43d511:	inc    eax
  43d512:	xor    al,BYTE PTR [eax+0x40]
  43d515:	jae    0x43d58b
  43d517:	fs inc eax
  43d519:	inc    eax
  43d51a:	push   ecx
  43d51b:	inc    ecx
  43d51c:	inc    ebp
  43d51d:	inc    ecx
  43d51e:	inc    ecx
  43d51f:	push   esi
  43d520:	xor    BYTE PTR [ecx],dh
  43d522:	inc    eax
  43d523:	inc    ecx
  43d524:	inc    edx
  43d525:	push   esi
  43d526:	xor    BYTE PTR [ecx],dh
  43d528:	inc    eax
  43d529:	inc    eax
  43d52a:	pop    edx
  43d52b:	add    cl,dl
  43d52d:	or     bh,BYTE PTR [edi]
  43d52f:	jb     0x43d596
  43d531:	jo     0x43d59f
  43d533:	popa   
  43d534:	arpl   WORD PTR [ebp+0x40],sp
  43d537:	aas    
  43d538:	and    al,0x62
  43d53a:	popa   
  43d53b:	jae    0x43d5a6
  43d53d:	arpl   WORD PTR [edi+0x73],bx
  43d540:	je     0x43d5b4
  43d542:	imul   ebp,DWORD PTR [esi+0x67],0x3f554440
  43d549:	and    al,0x63
  43d54b:	push   0x745f7261
  43d550:	jb     0x43d5b3
  43d552:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x74734044
  43d55a:	fs inc eax
  43d55c:	inc    eax
  43d55d:	push   esi
  43d55e:	aas    
  43d55f:	and    al,0x61
  43d561:	ins    BYTE PTR es:[edi],dx
  43d562:	ins    BYTE PTR es:[edi],dx
  43d563:	outs   dx,DWORD PTR ds:[esi]
  43d564:	arpl   WORD PTR [ecx+0x74],sp
  43d567:	outs   dx,DWORD PTR ds:[esi]
  43d568:	jb     0x43d5aa
  43d56a:	inc    esp
  43d56b:	inc    eax
  43d56c:	xor    al,BYTE PTR [eax+0x40]
  43d56f:	jae    0x43d5e5
  43d571:	fs inc eax
  43d573:	inc    eax
  43d574:	push   ecx
  43d575:	inc    ecx
  43d576:	inc    ebp
  43d577:	inc    ecx
  43d578:	inc    ecx
  43d579:	push   esi
  43d57a:	xor    DWORD PTR [edx],esi
  43d57c:	inc    eax
  43d57d:	push   esi
  43d57e:	aas    
  43d57f:	and    al,0x5f
  43d581:	push   ebx
  43d582:	je     0x43d5f6
  43d584:	imul   ebp,DWORD PTR [esi+0x67],0x6e6f635f
  43d58b:	jae    0x43d601
  43d58d:	pop    edi
  43d58e:	imul   esi,DWORD PTR [ebp+eiz*2+0x72],0x726f7461
  43d596:	inc    eax
  43d597:	inc    esp
  43d598:	push   ebp
  43d599:	aas    
  43d59a:	and    al,0x63
  43d59c:	push   0x745f7261
  43d5a1:	jb     0x43d604
  43d5a3:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x74734044
  43d5ab:	fs inc eax
  43d5ad:	inc    eax
  43d5ae:	push   esi
  43d5af:	aas    
  43d5b0:	and    al,0x61
  43d5b2:	ins    BYTE PTR es:[edi],dx
  43d5b3:	ins    BYTE PTR es:[edi],dx
  43d5b4:	outs   dx,DWORD PTR ds:[esi]
  43d5b5:	arpl   WORD PTR [ecx+0x74],sp
  43d5b8:	outs   dx,DWORD PTR ds:[esi]
  43d5b9:	jb     0x43d5fb
  43d5bb:	inc    esp
  43d5bc:	inc    eax
  43d5bd:	xor    al,BYTE PTR [eax+0x40]
  43d5c0:	xor    al,BYTE PTR [eax+0x30]
  43d5c3:	inc    ecx
  43d5c4:	inc    edx
  43d5c5:	push   esi
  43d5c6:	xor    DWORD PTR [edx],esi
  43d5c8:	inc    eax
  43d5c9:	inc    eax
  43d5ca:	pop    edx
  43d5cb:	add    ah,ch
  43d5cd:	or     BYTE PTR [edi],bh
  43d5cf:	imul   ebp,DWORD PTR [esi+0x40],0x6f63243f
  43d5d6:	fs arpl WORD PTR gs:[esi+0x74],si
  43d5db:	inc    eax
  43d5dc:	pop    edi
  43d5dd:	push   edi
  43d5de:	inc    esp
  43d5df:	dec    eax
  43d5e0:	inc    eax
  43d5e1:	jae    0x43d657
  43d5e3:	fs inc eax
  43d5e5:	inc    eax
  43d5e6:	push   ecx
  43d5e7:	inc    edx
  43d5e8:	inc    ebp
  43d5e9:	dec    eax
  43d5ea:	inc    ecx
  43d5eb:	inc    ecx
  43d5ec:	dec    eax
  43d5ed:	push   eax
  43d5ee:	inc    edx
  43d5ef:	inc    esp
  43d5f0:	xor    DWORD PTR [ecx+0x41],eax
  43d5f3:	push   eax
  43d5f4:	inc    edx
  43d5f5:	inc    esp
  43d5f6:	push   eax
  43d5f7:	inc    ecx
  43d5f8:	pop    edi
  43d5f9:	push   edi
  43d5fa:	xor    eax,DWORD PTR [ecx+0x41]
  43d5fd:	push   eax
  43d5fe:	inc    ecx
  43d5ff:	pop    edi
  43d600:	push   edi
  43d601:	inc    eax
  43d602:	pop    edx
  43d603:	add    BYTE PTR [esi],dl
  43d605:	or     bh,BYTE PTR [edi]
  43d607:	outs   dx,DWORD PTR ds:[esi]
  43d608:	jne    0x43d67e
  43d60a:	inc    eax
  43d60b:	aas    
  43d60c:	and    al,0x63
  43d60e:	outs   dx,DWORD PTR ds:[esi]
  43d60f:	fs arpl WORD PTR gs:[esi+0x74],si
  43d614:	inc    eax
  43d615:	pop    edi
  43d616:	push   edi
  43d617:	inc    esp
  43d618:	dec    eax
  43d619:	inc    eax
  43d61a:	jae    0x43d690
  43d61c:	fs inc eax
  43d61e:	inc    eax
  43d61f:	push   ecx
  43d620:	inc    edx
  43d621:	inc    ebp
  43d622:	dec    eax
  43d623:	inc    ecx
  43d624:	inc    ecx
  43d625:	dec    eax
  43d626:	push   eax
  43d627:	inc    edx
  43d628:	pop    edi
  43d629:	push   edi
  43d62a:	xor    DWORD PTR [ecx+0x41],eax
  43d62d:	push   eax
  43d62e:	inc    edx
  43d62f:	pop    edi
  43d630:	push   edi
  43d631:	push   eax
  43d632:	inc    ecx
  43d633:	inc    esp
  43d634:	xor    eax,DWORD PTR [ecx+0x41]
  43d637:	push   eax
  43d638:	inc    ecx
  43d639:	inc    esp
  43d63a:	inc    eax
  43d63b:	pop    edx
  43d63c:	add    BYTE PTR [eax],al
  43d63e:	adc    al,0x6
  43d640:	aas    
  43d641:	popa   
  43d642:	jo     0x43d6b4
  43d644:	outs   dx,BYTE PTR gs:[esi]
  43d646:	fs inc eax
  43d648:	aas    
  43d649:	and    al,0x62
  43d64b:	popa   
  43d64c:	jae    0x43d6b7
  43d64e:	arpl   WORD PTR [edi+0x73],bx
  43d651:	je     0x43d6c5
  43d653:	imul   ebp,DWORD PTR [esi+0x67],0x55575f40
  43d65a:	aas    
  43d65b:	and    al,0x63
  43d65d:	push   0x745f7261
  43d662:	jb     0x43d6c5
  43d664:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x7340575f
  43d66c:	je     0x43d6d2
  43d66e:	inc    eax
  43d66f:	inc    eax
  43d670:	push   esi
  43d671:	aas    
  43d672:	and    al,0x61
  43d674:	ins    BYTE PTR es:[edi],dx
  43d675:	ins    BYTE PTR es:[edi],dx
  43d676:	outs   dx,DWORD PTR ds:[esi]
  43d677:	arpl   WORD PTR [ecx+0x74],sp
  43d67a:	outs   dx,DWORD PTR ds:[esi]
  43d67b:	jb     0x43d6bd
  43d67d:	pop    edi
  43d67e:	push   edi
  43d67f:	inc    eax
  43d680:	xor    al,BYTE PTR [eax+0x40]
  43d683:	jae    0x43d6f9
  43d685:	fs inc eax
  43d687:	inc    eax
  43d688:	push   ecx
  43d689:	inc    ecx
  43d68a:	inc    ebp
  43d68b:	inc    ecx
  43d68c:	inc    ecx
  43d68d:	push   esi
  43d68e:	xor    DWORD PTR [edx],esi
  43d690:	inc    eax
  43d691:	push   eax
  43d692:	inc    edx
  43d693:	pop    edi
  43d694:	push   edi
  43d695:	xor    BYTE PTR [eax+0x5a],al
  43d698:	add    BYTE PTR [eax],al
  43d69a:	push   ebp
  43d69b:	push   es
  43d69c:	aas    
  43d69d:	arpl   WORD PTR [ebp+eiz*2+0x61],bp
  43d6a1:	jb     0x43d6e3
  43d6a3:	aas    
  43d6a4:	and    al,0x62
  43d6a6:	popa   
  43d6a7:	jae    0x43d712
  43d6a9:	arpl   WORD PTR [edi+0x73],bx
  43d6ac:	je     0x43d720
  43d6ae:	imul   ebp,DWORD PTR [esi+0x67],0x55575f40
  43d6b5:	aas    
  43d6b6:	and    al,0x63
  43d6b8:	push   0x745f7261
  43d6bd:	jb     0x43d720
  43d6bf:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x7340575f
  43d6c7:	je     0x43d72d
  43d6c9:	inc    eax
  43d6ca:	inc    eax
  43d6cb:	push   esi
  43d6cc:	aas    
  43d6cd:	and    al,0x61
  43d6cf:	ins    BYTE PTR es:[edi],dx
  43d6d0:	ins    BYTE PTR es:[edi],dx
  43d6d1:	outs   dx,DWORD PTR ds:[esi]
  43d6d2:	arpl   WORD PTR [ecx+0x74],sp
  43d6d5:	outs   dx,DWORD PTR ds:[esi]
  43d6d6:	jb     0x43d718
  43d6d8:	pop    edi
  43d6d9:	push   edi
  43d6da:	inc    eax
  43d6db:	xor    al,BYTE PTR [eax+0x40]
  43d6de:	jae    0x43d754
  43d6e0:	fs inc eax
  43d6e2:	inc    eax
  43d6e3:	push   ecx
  43d6e4:	inc    ecx
  43d6e5:	inc    ebp
  43d6e6:	pop    eax
  43d6e7:	pop    eax
  43d6e8:	pop    edx
  43d6e9:	add    BYTE PTR [eax+0x303f3f01],ch
  43d6ef:	aas    
  43d6f0:	and    al,0x63
  43d6f2:	outs   dx,DWORD PTR ds:[esi]
  43d6f3:	fs arpl WORD PTR gs:[esi+0x74],si
  43d6f8:	inc    eax
  43d6f9:	pop    edi
  43d6fa:	push   edi
  43d6fb:	inc    esp
  43d6fc:	dec    eax
  43d6fd:	inc    eax
  43d6fe:	jae    0x43d774
  43d700:	fs inc eax
  43d702:	inc    eax
  43d703:	push   ecx
  43d704:	inc    ecx
  43d705:	inc    ebp
  43d706:	inc    eax
  43d707:	dec    ecx
  43d708:	inc    eax
  43d709:	pop    edx
  43d70a:	add    BYTE PTR [eax],al
  43d70c:	inc    eax
  43d70d:	pop    es
  43d70e:	aas    
  43d70f:	outs   dx,DWORD PTR fs:[esi]
  43d711:	pop    edi
  43d712:	ins    BYTE PTR es:[edi],dx
  43d713:	outs   dx,BYTE PTR gs:[esi]
  43d715:	addr16 je 0x43d780
  43d718:	inc    eax
  43d719:	aas    
  43d71a:	and    al,0x63
  43d71c:	outs   dx,DWORD PTR ds:[esi]
  43d71d:	fs arpl WORD PTR gs:[esi+0x74],si
  43d722:	inc    eax
  43d723:	pop    edi
  43d724:	push   edi
  43d725:	inc    esp
  43d726:	dec    eax
  43d727:	inc    eax
  43d728:	jae    0x43d79e
  43d72a:	fs inc eax
  43d72c:	inc    eax
  43d72d:	dec    ebp
  43d72e:	inc    edx
  43d72f:	inc    ebp
  43d730:	dec    eax
  43d731:	inc    ecx
  43d732:	inc    edx
  43d733:	dec    eax
  43d734:	push   eax
  43d735:	inc    edx
  43d736:	inc    esp
  43d737:	xor    DWORD PTR [ecx+0x40],ecx
  43d73a:	pop    edx
  43d73b:	add    BYTE PTR [edx+0x2],ch
  43d73e:	aas    
  43d73f:	aas    
  43d740:	xor    DWORD PTR [edi],edi
  43d742:	and    al,0x63
  43d744:	outs   dx,DWORD PTR ds:[esi]
  43d745:	fs arpl WORD PTR gs:[esi+0x74],si
  43d74a:	inc    eax
  43d74b:	pop    edi
  43d74c:	push   edi
  43d74d:	inc    esp
  43d74e:	dec    eax
  43d74f:	inc    eax
  43d750:	jae    0x43d7c6
  43d752:	fs inc eax
  43d754:	inc    eax
  43d755:	dec    ebp
  43d756:	inc    ecx
  43d757:	inc    ebp
  43d758:	inc    eax
  43d759:	pop    eax
  43d75a:	pop    edx
  43d75b:	add    dh,bl
  43d75d:	pop    es
  43d75e:	aas    
  43d75f:	gs jb  0x43d7c3
  43d762:	jae    0x43d7c9
  43d764:	inc    eax
  43d765:	aas    
  43d766:	and    al,0x62
  43d768:	popa   
  43d769:	jae    0x43d7d4
  43d76b:	arpl   WORD PTR [edi+0x73],bx
  43d76e:	je     0x43d7e2
  43d770:	imul   ebp,DWORD PTR [esi+0x67],0x55575f40
  43d777:	aas    
  43d778:	and    al,0x63
  43d77a:	push   0x745f7261
  43d77f:	jb     0x43d7e2
  43d781:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x7340575f
  43d789:	je     0x43d7ef
  43d78b:	inc    eax
  43d78c:	inc    eax
  43d78d:	push   esi
  43d78e:	aas    
  43d78f:	and    al,0x61
  43d791:	ins    BYTE PTR es:[edi],dx
  43d792:	ins    BYTE PTR es:[edi],dx
  43d793:	outs   dx,DWORD PTR ds:[esi]
  43d794:	arpl   WORD PTR [ecx+0x74],sp
  43d797:	outs   dx,DWORD PTR ds:[esi]
  43d798:	jb     0x43d7da
  43d79a:	pop    edi
  43d79b:	push   edi
  43d79c:	inc    eax
  43d79d:	xor    al,BYTE PTR [eax+0x40]
  43d7a0:	jae    0x43d816
  43d7a2:	fs inc eax
  43d7a4:	inc    eax
  43d7a5:	push   ecx
  43d7a6:	inc    ecx
  43d7a7:	inc    ebp
  43d7a8:	inc    ecx
  43d7a9:	inc    ecx
  43d7aa:	push   esi
  43d7ab:	xor    DWORD PTR [edx],esi
  43d7ad:	inc    eax
  43d7ae:	dec    ecx
  43d7af:	dec    ecx
  43d7b0:	inc    eax
  43d7b1:	pop    edx
  43d7b2:	add    BYTE PTR [eax],al
  43d7b4:	adc    ecx,DWORD PTR [eax]
  43d7b6:	aas    
  43d7b7:	imul   bp,WORD PTR [esi+0x64],0x665f
  43d7bd:	imul   esi,DWORD PTR [edx+0x73],0x666f5f74
  43d7c4:	inc    eax
  43d7c5:	aas    
  43d7c6:	and    al,0x62
  43d7c8:	popa   
  43d7c9:	jae    0x43d834
  43d7cb:	arpl   WORD PTR [edi+0x73],bx
  43d7ce:	je     0x43d842
  43d7d0:	imul   ebp,DWORD PTR [esi+0x67],0x55575f40
  43d7d7:	aas    
  43d7d8:	and    al,0x63
  43d7da:	push   0x745f7261
  43d7df:	jb     0x43d842
  43d7e1:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x7340575f
  43d7e9:	je     0x43d84f
  43d7eb:	inc    eax
  43d7ec:	inc    eax
  43d7ed:	push   esi
  43d7ee:	aas    
  43d7ef:	and    al,0x61
  43d7f1:	ins    BYTE PTR es:[edi],dx
  43d7f2:	ins    BYTE PTR es:[edi],dx
  43d7f3:	outs   dx,DWORD PTR ds:[esi]
  43d7f4:	arpl   WORD PTR [ecx+0x74],sp
  43d7f7:	outs   dx,DWORD PTR ds:[esi]
  43d7f8:	jb     0x43d83a
  43d7fa:	pop    edi
  43d7fb:	push   edi
  43d7fc:	inc    eax
  43d7fd:	xor    al,BYTE PTR [eax+0x40]
  43d800:	jae    0x43d876
  43d802:	fs inc eax
  43d804:	inc    eax
  43d805:	push   ecx
  43d806:	inc    edx
  43d807:	inc    ebp
  43d808:	dec    ecx
  43d809:	push   eax
  43d80a:	inc    edx
  43d80b:	pop    edi
  43d80c:	push   edi
  43d80d:	dec    ecx
  43d80e:	inc    eax
  43d80f:	pop    edx
  43d810:	add    BYTE PTR [eax],al
  43d812:	cdq    
  43d813:	add    al,0x3f
  43d815:	pop    edi
  43d816:	inc    edi
  43d817:	gs je  0x43d87d
  43d81a:	popa   
  43d81b:	je     0x43d85d
  43d81d:	aas    
  43d81e:	and    al,0x63
  43d820:	outs   dx,DWORD PTR ds:[esi]
  43d821:	fs arpl WORD PTR gs:[esi+0x74],si
  43d826:	inc    eax
  43d827:	pop    edi
  43d828:	push   edi
  43d829:	inc    esp
  43d82a:	dec    eax
  43d82b:	inc    eax
  43d82c:	jae    0x43d8a2
  43d82e:	fs inc eax
  43d830:	inc    eax
  43d831:	push   ebx
  43d832:	inc    ecx
  43d833:	dec    ecx
  43d834:	push   eax
  43d835:	inc    ecx
  43d836:	push   eax
  43d837:	inc    edx
  43d838:	push   esi
  43d839:	popaw  
  43d83b:	arpl   WORD PTR [ebp+0x74],sp
  43d83e:	inc    eax
  43d83f:	ins    BYTE PTR es:[edi],dx
  43d840:	outs   dx,DWORD PTR ds:[esi]
  43d841:	arpl   WORD PTR [ecx+0x6c],sp
  43d844:	gs inc eax
  43d846:	xor    al,BYTE PTR [eax+0x50]
  43d849:	inc    edx
  43d84a:	push   esi
  43d84b:	xor    al,0x32
  43d84d:	inc    eax
  43d84e:	inc    eax
  43d84f:	pop    edx
  43d850:	add    BYTE PTR [eax],al
  43d852:	dec    edi
  43d853:	add    eax,0x6f4c5f3f
  43d858:	arpl   WORD PTR [ecx+0x6d],bp
  43d85b:	jo     0x43d8bc
  43d85d:	inc    ecx
  43d85e:	fs fs popaw 
  43d862:	arpl   WORD PTR [eax+0x5f],ax
  43d865:	dec    esp
  43d866:	outs   dx,DWORD PTR ds:[esi]
  43d867:	arpl   WORD PTR [ecx+0x6d],bp
  43d86a:	jo     0x43d8ac
  43d86c:	ins    BYTE PTR es:[edi],dx
  43d86d:	outs   dx,DWORD PTR ds:[esi]
  43d86e:	arpl   WORD PTR [ecx+0x6c],sp
  43d871:	gs inc eax
  43d873:	jae    0x43d8e9
  43d875:	fs inc eax
  43d877:	inc    eax
  43d878:	inc    ebx
  43d879:	inc    ecx
  43d87a:	pop    eax
  43d87b:	push   eax
  43d87c:	inc    ecx
  43d87d:	push   esi
  43d87e:	xor    DWORD PTR [edx],esi
  43d880:	xor    eax,DWORD PTR [eax+0x50]
  43d883:	inc    ecx
  43d884:	push   esi
  43d885:	popaw  
  43d887:	arpl   WORD PTR [ebp+0x74],sp
  43d88a:	inc    eax
  43d88b:	xor    dh,BYTE PTR [ebx]
  43d88d:	inc    eax
  43d88e:	dec    ecx
  43d88f:	inc    eax
  43d890:	pop    edx
  43d891:	add    cl,dh
  43d893:	add    al,0x3f
  43d895:	pop    edi
  43d896:	dec    ecx
  43d897:	fs pop edi
  43d899:	arpl   WORD PTR [esi+0x74],bp
  43d89c:	inc    eax
  43d89d:	imul   esp,DWORD PTR [eax+eax*2+0x6c],0x6c61636f
  43d8a5:	gs inc eax
  43d8a7:	jae    0x43d91d
  43d8a9:	fs inc eax
  43d8ab:	inc    eax
  43d8ac:	xor    BYTE PTR [eax+0x41],cl
  43d8af:	add    BYTE PTR [edx+0x64693f08],dh
  43d8b5:	inc    eax
  43d8b6:	aas    
  43d8b7:	and    al,0x63
  43d8b9:	outs   dx,DWORD PTR ds:[esi]
  43d8ba:	fs arpl WORD PTR gs:[esi+0x74],si
  43d8bf:	inc    eax
  43d8c0:	pop    edi
  43d8c1:	push   edi
  43d8c2:	inc    esp
  43d8c3:	dec    eax
  43d8c4:	inc    eax
  43d8c5:	jae    0x43d93b
  43d8c7:	fs inc eax
  43d8c9:	inc    eax
  43d8ca:	xor    dl,BYTE PTR [esi+0x30]
  43d8cd:	ins    BYTE PTR es:[edi],dx
  43d8ce:	outs   dx,DWORD PTR ds:[esi]
  43d8cf:	arpl   WORD PTR [ecx+0x6c],sp
  43d8d2:	gs inc eax
  43d8d4:	xor    al,BYTE PTR [eax+0x41]
  43d8d7:	add    BYTE PTR [edi],dl
  43d8d9:	add    bh,BYTE PTR [edi]
  43d8db:	aas    
  43d8dc:	xor    BYTE PTR [edi+0x4c],bl
  43d8df:	outs   dx,DWORD PTR ds:[esi]
  43d8e0:	arpl   WORD PTR [ecx+0x6d],bp
  43d8e3:	jo     0x43d925
  43d8e5:	ins    BYTE PTR es:[edi],dx
  43d8e6:	outs   dx,DWORD PTR ds:[esi]
  43d8e7:	arpl   WORD PTR [ecx+0x6c],sp
  43d8ea:	gs inc eax
  43d8ec:	jae    0x43d962
  43d8ee:	fs inc eax
  43d8f0:	inc    eax
  43d8f1:	inc    ecx
  43d8f2:	inc    ecx
  43d8f3:	inc    ebp
  43d8f4:	inc    eax
  43d8f5:	inc    ecx
  43d8f6:	inc    edx
  43d8f7:	push   esi
  43d8f8:	xor    BYTE PTR [ecx],dh
  43d8fa:	xor    al,BYTE PTR [eax+0x40]
  43d8fd:	pop    edx
  43d8fe:	add    BYTE PTR [eax],al
  43d900:	xchg   ecx,eax
  43d901:	add    bh,BYTE PTR [edi]
  43d903:	aas    
  43d904:	xor    DWORD PTR [edi+0x4c],ebx
  43d907:	outs   dx,DWORD PTR ds:[esi]
  43d908:	arpl   WORD PTR [ecx+0x6d],bp
  43d90b:	jo     0x43d94d
  43d90d:	ins    BYTE PTR es:[edi],dx
  43d90e:	outs   dx,DWORD PTR ds:[esi]
  43d90f:	arpl   WORD PTR [ecx+0x6c],sp
  43d912:	gs inc eax
  43d914:	jae    0x43d98a
  43d916:	fs inc eax
  43d918:	inc    eax
  43d919:	dec    ebp
  43d91a:	inc    ecx
  43d91b:	inc    ebp
  43d91c:	inc    eax
  43d91d:	pop    eax
  43d91e:	pop    edx
  43d91f:	add    ah,cl
  43d921:	add    al,0x3f
  43d923:	pop    edi
  43d924:	inc    edi
  43d925:	gs je  0x43d98f
  43d928:	ins    BYTE PTR es:[edi],dx
  43d929:	outs   dx,DWORD PTR ds:[esi]
  43d92a:	bound  esp,QWORD PTR [ecx+0x6c]
  43d92d:	ins    BYTE PTR es:[edi],dx
  43d92e:	outs   dx,DWORD PTR ds:[esi]
  43d92f:	arpl   WORD PTR [ecx+0x6c],sp
  43d932:	gs inc eax
  43d934:	ins    BYTE PTR es:[edi],dx
  43d935:	outs   dx,DWORD PTR ds:[esi]
  43d936:	arpl   WORD PTR [ecx+0x6c],sp
  43d939:	gs inc eax
  43d93b:	jae    0x43d9b1
  43d93d:	fs inc eax
  43d93f:	inc    eax
  43d940:	inc    ebx
  43d941:	inc    ecx
  43d942:	push   eax
  43d943:	inc    ecx
  43d944:	push   esi
  43d945:	pop    edi
  43d946:	dec    esp
  43d947:	outs   dx,DWORD PTR ds:[esi]
  43d948:	arpl   WORD PTR [ecx+0x6d],bp
  43d94b:	jo     0x43d98d
  43d94d:	xor    DWORD PTR [edx],esi
  43d94f:	inc    eax
  43d950:	pop    eax
  43d951:	pop    edx
  43d952:	add    BYTE PTR [eax],al
  43d954:	xor    al,BYTE PTR ds:0x6e495f3f
  43d95a:	imul   esi,DWORD PTR [eax+eax*2+0x6c],0x6c61636f
  43d962:	gs inc eax
  43d964:	jae    0x43d9da
  43d966:	fs inc eax
  43d968:	inc    eax
  43d969:	inc    ebx
  43d96a:	inc    ecx
  43d96b:	push   eax
  43d96c:	inc    ecx
  43d96d:	push   esi
  43d96e:	pop    edi
  43d96f:	dec    esp
  43d970:	outs   dx,DWORD PTR ds:[esi]
  43d971:	arpl   WORD PTR [ecx+0x6d],bp
  43d974:	jo     0x43d9b6
  43d976:	xor    DWORD PTR [edx],esi
  43d978:	inc    eax
  43d979:	pop    eax
  43d97a:	pop    edx
  43d97b:	add    BYTE PTR [edi+0x303f3f01],cl
  43d981:	aas    
  43d982:	and    al,0x62
  43d984:	popa   
  43d985:	jae    0x43d9f0
  43d987:	arpl   WORD PTR [edi+0x73],bx
  43d98a:	je     0x43d9fe
  43d98c:	imul   ebp,DWORD PTR [esi+0x67],0x55575f40
  43d993:	aas    
  43d994:	and    al,0x63
  43d996:	push   0x745f7261
  43d99b:	jb     0x43d9fe
  43d99d:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x7340575f
  43d9a5:	je     0x43da0b
  43d9a7:	inc    eax
  43d9a8:	inc    eax
  43d9a9:	push   esi
  43d9aa:	aas    
  43d9ab:	and    al,0x61
  43d9ad:	ins    BYTE PTR es:[edi],dx
  43d9ae:	ins    BYTE PTR es:[edi],dx
  43d9af:	outs   dx,DWORD PTR ds:[esi]
  43d9b0:	arpl   WORD PTR [ecx+0x74],sp
  43d9b3:	outs   dx,DWORD PTR ds:[esi]
  43d9b4:	jb     0x43d9f6
  43d9b6:	pop    edi
  43d9b7:	push   edi
  43d9b8:	inc    eax
  43d9b9:	xor    al,BYTE PTR [eax+0x40]
  43d9bc:	jae    0x43da32
  43d9be:	fs inc eax
  43d9c0:	inc    eax
  43d9c1:	push   ecx
  43d9c2:	inc    ecx
  43d9c3:	inc    ebp
  43d9c4:	inc    eax
  43d9c5:	push   eax
  43d9c6:	inc    edx
  43d9c7:	pop    edi
  43d9c8:	push   edi
  43d9c9:	xor    BYTE PTR [eax+0x5a],al
  43d9cc:	add    BYTE PTR [eax],al
  43d9ce:	fadd   DWORD PTR [edi]
  43d9d0:	aas    
  43d9d1:	gs jb  0x43da35
  43d9d4:	jae    0x43da3b
  43d9d6:	inc    eax
  43d9d7:	aas    
  43d9d8:	and    al,0x62
  43d9da:	popa   
  43d9db:	jae    0x43da46
  43d9dd:	arpl   WORD PTR [edi+0x73],bx
  43d9e0:	je     0x43da54
  43d9e2:	imul   ebp,DWORD PTR [esi+0x67],0x3f554440
  43d9e9:	and    al,0x63
  43d9eb:	push   0x745f7261
  43d9f0:	jb     0x43da53
  43d9f2:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x74734044
  43d9fa:	fs inc eax
  43d9fc:	inc    eax
  43d9fd:	push   esi
  43d9fe:	aas    
  43d9ff:	and    al,0x61
  43da01:	ins    BYTE PTR es:[edi],dx
  43da02:	ins    BYTE PTR es:[edi],dx
  43da03:	outs   dx,DWORD PTR ds:[esi]
  43da04:	arpl   WORD PTR [ecx+0x74],sp
  43da07:	outs   dx,DWORD PTR ds:[esi]
  43da08:	jb     0x43da4a
  43da0a:	inc    esp
  43da0b:	inc    eax
  43da0c:	xor    al,BYTE PTR [eax+0x40]
  43da0f:	jae    0x43da85
  43da11:	fs inc eax
  43da13:	inc    eax
  43da14:	push   ecx
  43da15:	inc    ecx
  43da16:	inc    ebp
  43da17:	inc    ecx
  43da18:	inc    ecx
  43da19:	push   esi
  43da1a:	xor    DWORD PTR [edx],esi
  43da1c:	inc    eax
  43da1d:	dec    ecx
  43da1e:	dec    ecx
  43da1f:	inc    eax
  43da20:	pop    edx
  43da21:	add    al,al
  43da23:	or     DWORD PTR [edi],edi
  43da25:	outs   dx,BYTE PTR ds:[esi]
  43da26:	jo     0x43da97
  43da28:	jae    0x43da6a
  43da2a:	aas    
  43da2b:	and    al,0x62
  43da2d:	popa   
  43da2e:	jae    0x43da99
  43da30:	arpl   WORD PTR [edi+0x73],bx
  43da33:	je     0x43daa7
  43da35:	imul   ebp,DWORD PTR [esi+0x67],0x3f554440
  43da3c:	and    al,0x63
  43da3e:	push   0x745f7261
  43da43:	jb     0x43daa6
  43da45:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x74734044
  43da4d:	fs inc eax
  43da4f:	inc    eax
  43da50:	push   esi
  43da51:	aas    
  43da52:	and    al,0x61
  43da54:	ins    BYTE PTR es:[edi],dx
  43da55:	ins    BYTE PTR es:[edi],dx
  43da56:	outs   dx,DWORD PTR ds:[esi]
  43da57:	arpl   WORD PTR [ecx+0x74],sp
  43da5a:	outs   dx,DWORD PTR ds:[esi]
  43da5b:	jb     0x43da9d
  43da5d:	inc    esp
  43da5e:	inc    eax
  43da5f:	xor    al,BYTE PTR [eax+0x40]
  43da62:	jae    0x43dad8
  43da64:	fs inc eax
  43da66:	inc    eax
  43da67:	xor    cl,BYTE PTR [ecx+0x42]
  43da6a:	add    BYTE PTR [eax],al
  43da6c:	jae    0x43da6e
  43da6e:	pop    edi
  43da6f:	pop    edi
  43da70:	inc    ebx
  43da71:	js     0x43daeb
  43da73:	inc    esi
  43da74:	jb     0x43dad7
  43da76:	ins    DWORD PTR es:[edi],dx
  43da77:	gs dec eax
  43da79:	popa   
  43da7a:	outs   dx,BYTE PTR ds:[esi]
  43da7b:	fs ins BYTE PTR es:[edi],dx
  43da7d:	gs jb  0x43dab3
  43da80:	add    BYTE PTR [eax],al
  43da82:	pop    edx
  43da83:	add    BYTE PTR [edi+0x43],bl
  43da86:	js     0x43db00
  43da88:	push   esp
  43da89:	push   0x45776f72
  43da8e:	js     0x43daf3
  43da90:	gs jo  0x43db07
  43da93:	imul   ebp,DWORD PTR [edi+0x6e],0x5540000
  43da9a:	jae    0x43db10
  43da9c:	jb     0x43db03
  43da9e:	jb     0x43db12
  43daa0:	outs   dx,DWORD PTR ds:[esi]
  43daa1:	jb     0x43daa3
  43daa3:	add    BYTE PTR [edx],ch
  43daa5:	add    eax,0x736d656d
  43daaa:	gs je  0x43daad
  43daad:	add    BYTE PTR [esi],ah
  43daaf:	add    eax,0x636d656d
  43dab4:	jo     0x43db2f
	...

Disassembly of section .data:

0043e000 <.data>:
  43e000:	and    al,0x9
  43e002:	inc    ebx
  43e003:	add    BYTE PTR [ecx+ecx*1],ah
  43e006:	inc    ebx
  43e007:	add    BYTE PTR [eax],ah
  43e009:	add    eax,0x43
  43e00e:	add    BYTE PTR [eax],al
  43e010:	cs aas 
  43e012:	inc    ecx
  43e013:	push   esi
  43e014:	je     0x43e08f
  43e016:	jo     0x43e07d
  43e018:	pop    edi
  43e019:	imul   ebp,DWORD PTR [esi+0x66],0x40406f
  43e020:	dec    esi
  43e021:	out    0x40,al
  43e023:	mov    ebx,0x44bf19b1
  43e028:	(bad)  
  43e029:	(bad)  
  43e02a:	(bad)  
  43e02b:	(bad)  
  43e02c:	(bad)  
  43e02d:	(bad)  
  43e02e:	(bad)  
  43e02f:	(bad)  
  43e030:	(bad)  
  43e031:	(bad)  
  43e032:	(bad)  
  43e033:	inc    DWORD PTR [ecx]
  43e035:	add    BYTE PTR [eax],al
  43e037:	add    BYTE PTR [ecx+ecx*1],ah
  43e03a:	inc    ebx
  43e03b:	add    BYTE PTR [eax],ah
  43e03d:	add    eax,0x43
  43e042:	add    BYTE PTR [eax],al
  43e044:	cs aas 
  43e046:	inc    ecx
  43e047:	push   esi
  43e048:	jae    0x43e0c3
  43e04a:	jae    0x43e0c0
  43e04c:	gs ins DWORD PTR es:[edi],dx
  43e04e:	pop    edi
  43e04f:	gs jb  0x43e0c4
  43e052:	outs   dx,DWORD PTR ds:[esi]
  43e053:	jb     0x43e095
  43e055:	jae    0x43e0d0
  43e057:	jae    0x43e0cd
  43e059:	gs ins DWORD PTR es:[edi],dx
  43e05b:	inc    eax
  43e05c:	bound  ebp,QWORD PTR [edi+0x6f]
  43e05f:	jae    0x43e0d5
  43e061:	inc    eax
  43e062:	inc    eax
  43e063:	add    BYTE PTR [ecx+ecx*1],ah
  43e066:	inc    ebx
  43e067:	add    ah,ch
  43e069:	pop    ss
  43e06a:	inc    ebx
  43e06b:	add    BYTE PTR [eax],bh
  43e06d:	cmovae eax,DWORD PTR [eax]
  43e070:	and    BYTE PTR ds:0x43,al
  43e076:	add    BYTE PTR [eax],al
  43e078:	cs aas 
  43e07a:	inc    ecx
  43e07b:	push   esi
  43e07c:	ja     0x43e0e7
  43e07e:	outs   dx,BYTE PTR ds:[esi]
  43e07f:	outs   dx,DWORD PTR fs:[esi]
  43e081:	ja     0x43e0f6
  43e083:	pop    edi
  43e084:	imul   bp,WORD PTR [ebp+eiz*2+0x5f],0x6f63
  43e08b:	fs arpl WORD PTR gs:[esi+0x74],si
  43e090:	inc    eax
  43e091:	inc    eax
  43e092:	add    BYTE PTR [eax],al
  43e094:	and    BYTE PTR ds:0x43,al
  43e09a:	add    BYTE PTR [eax],al
  43e09c:	cs aas 
  43e09e:	inc    ecx
  43e09f:	push   esi
  43e0a0:	aas    
  43e0a1:	and    al,0x63
  43e0a3:	outs   dx,DWORD PTR ds:[esi]
  43e0a4:	fs arpl WORD PTR gs:[esi+0x74],si
  43e0a9:	inc    eax
  43e0aa:	pop    edi
  43e0ab:	push   edi
  43e0ac:	inc    esp
  43e0ad:	dec    eax
  43e0ae:	inc    eax
  43e0af:	jae    0x43e125
  43e0b1:	fs inc eax
  43e0b3:	inc    eax
  43e0b4:	add    BYTE PTR [eax],al
  43e0b6:	add    BYTE PTR [eax],al
  43e0b8:	and    BYTE PTR ds:0x43,al
  43e0be:	add    BYTE PTR [eax],al
  43e0c0:	cs aas 
  43e0c2:	inc    ecx
  43e0c3:	push   esi
  43e0c4:	arpl   WORD PTR [edi+0x64],bp
  43e0c7:	arpl   WORD PTR gs:[esi+0x74],si
  43e0cb:	pop    edi
  43e0cc:	bound  esp,QWORD PTR [ecx+0x73]
  43e0cf:	gs inc eax
  43e0d1:	jae    0x43e147
  43e0d3:	fs inc eax
  43e0d5:	inc    eax
  43e0d6:	add    BYTE PTR [eax],al
  43e0d8:	and    BYTE PTR ds:0x43,al
  43e0de:	add    BYTE PTR [eax],al
  43e0e0:	cs aas 
  43e0e2:	inc    ecx
  43e0e3:	push   esi
  43e0e4:	popaw  
  43e0e6:	arpl   WORD PTR [ebp+0x74],sp
  43e0e9:	inc    eax
  43e0ea:	ins    BYTE PTR es:[edi],dx
  43e0eb:	outs   dx,DWORD PTR ds:[esi]
  43e0ec:	arpl   WORD PTR [ecx+0x6c],sp
  43e0ef:	gs inc eax
  43e0f1:	jae    0x43e167
  43e0f3:	fs inc eax
  43e0f5:	inc    eax
  43e0f6:	add    BYTE PTR [eax],al
  43e0f8:	and    BYTE PTR ds:0x43,al
  43e0fe:	add    BYTE PTR [eax],al
  43e100:	cs aas 
  43e102:	inc    ecx
  43e103:	push   esi
  43e104:	pop    edi
  43e105:	dec    esp
  43e106:	outs   dx,DWORD PTR ds:[esi]
  43e107:	arpl   WORD PTR [ecx+0x6d],bp
  43e10a:	jo     0x43e14c
  43e10c:	ins    BYTE PTR es:[edi],dx
  43e10d:	outs   dx,DWORD PTR ds:[esi]
  43e10e:	arpl   WORD PTR [ecx+0x6c],sp
  43e111:	gs inc eax
  43e113:	jae    0x43e189
  43e115:	fs inc eax
  43e117:	inc    eax
  43e118:	add    BYTE PTR [eax],al
  43e11a:	add    BYTE PTR [eax],al
  43e11c:	and    al,0x9
  43e11e:	inc    ebx
  43e11f:	add    BYTE PTR [eax],ah
  43e121:	add    eax,0x43
  43e126:	add    BYTE PTR [eax],al
  43e128:	cs aas 
  43e12a:	inc    ecx
  43e12b:	push   esi
  43e12c:	aas    
  43e12d:	and    al,0x73
  43e12f:	jo     0x43e190
  43e131:	arpl   WORD PTR [edi+0x75],bp
  43e134:	outs   dx,BYTE PTR ds:[esi]
  43e135:	je     0x43e19c
  43e137:	fs pop edi
  43e139:	imul   ebp,DWORD PTR [ebp+0x70],0x40705f6c
  43e140:	push   ebp
  43e141:	ins    DWORD PTR es:[edi],dx
  43e142:	pop    edi
  43e143:	imul   ebp,DWORD PTR [ebp+0x70],0x6c696640
  43e14a:	gs jae 0x43e1c6
  43e14d:	jae    0x43e1c3
  43e14f:	gs ins DWORD PTR es:[edi],dx
  43e151:	pop    edi
  43e152:	gs jb  0x43e1c7
  43e155:	outs   dx,DWORD PTR ds:[esi]
  43e156:	jb     0x43e198
  43e158:	imul   bp,WORD PTR [ebp+eiz*2+0x73],0x7379
  43e15f:	je     0x43e1c6
  43e161:	ins    DWORD PTR es:[edi],dx
  43e162:	xor    eax,DWORD PTR [eax+0x62]
  43e165:	outs   dx,DWORD PTR ds:[esi]
  43e166:	outs   dx,DWORD PTR ds:[esi]
  43e167:	jae    0x43e1dd
  43e169:	inc    eax
  43e16a:	inc    eax
  43e16b:	inc    eax
  43e16c:	fs gs je 0x43e1d1
  43e170:	imul   ebp,DWORD PTR [eax+eax*2+0x62],0x74736f6f
  43e178:	inc    eax
  43e179:	inc    eax
  43e17a:	add    BYTE PTR [eax],al
  43e17c:	and    BYTE PTR ds:0x43,al
  43e182:	add    BYTE PTR [eax],al
  43e184:	cs aas 
  43e186:	inc    ecx
  43e187:	push   esi
  43e188:	imul   bp,WORD PTR [ebp+eiz*2+0x73],0x7379
  43e18f:	je     0x43e1f6
  43e191:	ins    DWORD PTR es:[edi],dx
  43e192:	pop    edi
  43e193:	gs jb  0x43e208
  43e196:	outs   dx,DWORD PTR ds:[esi]
  43e197:	jb     0x43e1d9
  43e199:	imul   bp,WORD PTR [ebp+eiz*2+0x73],0x7379
  43e1a0:	je     0x43e207
  43e1a2:	ins    DWORD PTR es:[edi],dx
  43e1a3:	xor    eax,DWORD PTR [eax+0x62]
  43e1a6:	outs   dx,DWORD PTR ds:[esi]
  43e1a7:	outs   dx,DWORD PTR ds:[esi]
  43e1a8:	jae    0x43e21e
  43e1aa:	inc    eax
  43e1ab:	inc    eax
  43e1ac:	add    BYTE PTR [eax],al
  43e1ae:	add    BYTE PTR [eax],al
  43e1b0:	and    al,0x9
  43e1b2:	inc    ebx
  43e1b3:	add    BYTE PTR [eax],ah
  43e1b5:	add    eax,0x43
  43e1ba:	add    BYTE PTR [eax],al
  43e1bc:	cs aas 
  43e1be:	inc    ecx
  43e1bf:	push   esi
  43e1c0:	gs jb  0x43e235
  43e1c3:	outs   dx,DWORD PTR ds:[esi]
  43e1c4:	jb     0x43e225
  43e1c6:	arpl   WORD PTR [ecx+0x74],sp
  43e1c9:	outs   dx,DWORD PTR gs:[si]
  43e1cc:	jb     0x43e247
  43e1ce:	inc    eax
  43e1cf:	jae    0x43e24a
  43e1d1:	jae    0x43e247
  43e1d3:	gs ins DWORD PTR es:[edi],dx
  43e1d5:	inc    eax
  43e1d6:	bound  ebp,QWORD PTR [edi+0x6f]
  43e1d9:	jae    0x43e24f
  43e1db:	inc    eax
  43e1dc:	inc    eax
  43e1dd:	add    BYTE PTR [eax],al
  43e1df:	add    BYTE PTR [eax],ah
  43e1e1:	add    eax,0x43
  43e1e6:	add    BYTE PTR [eax],al
  43e1e8:	cs aas 
  43e1ea:	inc    ecx
  43e1eb:	push   esi
  43e1ec:	outs   dx,BYTE PTR ds:[esi]
  43e1ed:	outs   dx,DWORD PTR ds:[esi]
  43e1ee:	outs   dx,BYTE PTR ds:[esi]
  43e1ef:	arpl   WORD PTR [edi+0x70],bp
  43e1f2:	jns    0x43e255
  43e1f4:	bound  ebp,QWORD PTR [ebp+eiz*2+0x40]
  43e1f8:	outs   dx,BYTE PTR ds:[esi]
  43e1f9:	outs   dx,DWORD PTR ds:[esi]
  43e1fa:	outs   dx,BYTE PTR ds:[esi]
  43e1fb:	arpl   WORD PTR [edi+0x70],bp
  43e1fe:	jns    0x43e261
  43e200:	bound  ebp,QWORD PTR [ebp+eiz*2+0x5f]
  43e204:	inc    eax
  43e205:	bound  ebp,QWORD PTR [edi+0x6f]
  43e208:	jae    0x43e27e
  43e20a:	inc    eax
  43e20b:	inc    eax
  43e20c:	add    BYTE PTR [eax],al
  43e20e:	add    BYTE PTR [eax],al
  43e210:	and    BYTE PTR ds:0x43,al
  43e216:	add    BYTE PTR [eax],al
  43e218:	cs aas 
  43e21a:	inc    ecx
  43e21b:	push   esi
  43e21c:	arpl   WORD PTR [edi+0x64],bp
  43e21f:	arpl   WORD PTR gs:[esi+0x74],si
  43e223:	pop    edi
  43e224:	gs jb  0x43e299
  43e227:	outs   dx,DWORD PTR ds:[esi]
  43e228:	jb     0x43e289
  43e22a:	arpl   WORD PTR [ecx+0x74],sp
  43e22d:	inc    eax
  43e22e:	aas    
  43e22f:	inc    ecx
  43e230:	xor    BYTE PTR [eax+0x62],bh
  43e233:	xor    al,0x33
  43e235:	xor    WORD PTR [ebx],si
  43e238:	cmp    DWORD PTR ss:[eax+0x40],eax
  43e23c:	add    BYTE PTR [eax],al
  43e23e:	add    BYTE PTR [eax],al
  43e240:	and    al,0x9
  43e242:	inc    ebx
  43e243:	add    BYTE PTR [ecx+ecx*1],ah
  43e246:	inc    ebx
  43e247:	add    BYTE PTR [eax],ah
  43e249:	add    eax,0x43
  43e24e:	add    BYTE PTR [eax],al
  43e250:	cs aas 
  43e252:	inc    ecx
  43e253:	push   esi
  43e254:	jae    0x43e2cf
  43e256:	jae    0x43e2cc
  43e258:	gs ins DWORD PTR es:[edi],dx
  43e25a:	pop    edi
  43e25b:	gs jb  0x43e2d0
  43e25e:	outs   dx,DWORD PTR ds:[esi]
  43e25f:	jb     0x43e2c0
  43e261:	arpl   WORD PTR [ecx+0x74],sp
  43e264:	outs   dx,DWORD PTR gs:[si]
  43e267:	jb     0x43e2e2
  43e269:	inc    eax
  43e26a:	aas    
  43e26b:	inc    ecx
  43e26c:	xor    BYTE PTR [eax+0x64],bh
  43e26f:	cmp    BYTE PTR ds:0x61646531,dh
  43e275:	xor    eax,0x4040
  43e27a:	add    BYTE PTR [eax],al
  43e27c:	and    BYTE PTR ds:0x43,al
  43e282:	add    BYTE PTR [eax],al
  43e284:	cs aas 
  43e286:	inc    ecx
  43e287:	push   esi
  43e288:	outs   dx,BYTE PTR gs:[si]
  43e28b:	gs jb  0x43e2f7
  43e28e:	arpl   WORD PTR [edi+0x65],bx
  43e291:	jb     0x43e305
  43e293:	outs   dx,DWORD PTR ds:[esi]
  43e294:	jb     0x43e2f5
  43e296:	arpl   WORD PTR [ecx+0x74],sp
  43e299:	outs   dx,DWORD PTR gs:[si]
  43e29c:	jb     0x43e317
  43e29e:	inc    eax
  43e29f:	aas    
  43e2a0:	inc    ecx
  43e2a1:	xor    BYTE PTR [eax+0x64],bh
  43e2a4:	cmp    BYTE PTR ds:0x61646531,dh
  43e2aa:	xor    eax,0x4040
  43e2af:	add    BYTE PTR [eax-0x73ffbcf6],ch
  43e2b5:	or     al,BYTE PTR [ebx+0x0]
  43e2b8:	call   0xd4425c5
  43e2bd:	add    BYTE PTR [edx],cl
  43e2bf:	add    BYTE PTR [eax],ah
  43e2c1:	add    BYTE PTR [ecx],cl
  43e2c3:	add    BYTE PTR [ebx],cl
  43e2c5:	add    BYTE PTR [eax+eax*1+0x2f],bl
  43e2c9:	add    BYTE PTR [edx],bh
  43e2cb:	add    BYTE PTR [edx],ch
  43e2cd:	add    BYTE PTR [edi],bh
  43e2cf:	add    BYTE PTR [edx],ah
  43e2d1:	add    BYTE PTR [eax+eax*1],bh
  43e2d4:	add    BYTE PTR ds:[eax+eax*1+0x27],bh
  43e2d9:	add    BYTE PTR [eax],al
  43e2db:	add    BYTE PTR [ecx+ecx*1],dl
  43e2de:	inc    ebx
  43e2df:	add    BYTE PTR [eax],al
  43e2e1:	or     DWORD PTR [ebx+0x0],eax
  43e2e4:	ror    BYTE PTR [edx],0x43
  43e2e7:	add    BYTE PTR [ecx+ecx*1],ah
  43e2ea:	inc    ebx
  43e2eb:	add    BYTE PTR [eax],ah
  43e2ed:	add    eax,0x43
  43e2f2:	add    BYTE PTR [eax],al
  43e2f4:	cs aas 
  43e2f6:	inc    ecx
  43e2f7:	push   esi
  43e2f8:	inc    ebx
  43e2f9:	pop    eax
  43e2fa:	dec    ebp
  43e2fb:	dec    esp
  43e2fc:	inc    esi
  43e2fd:	outs   dx,DWORD PTR ds:[esi]
  43e2fe:	jb     0x43e36d
  43e300:	inc    eax
  43e301:	push   ebp
  43e302:	dec    ecx
  43e303:	inc    eax
  43e304:	inc    eax
  43e305:	add    BYTE PTR [eax],al
  43e307:	add    BYTE PTR [eax],ah
  43e309:	add    eax,0x43
  43e30e:	add    BYTE PTR [eax],al
  43e310:	cs aas 
  43e312:	inc    ecx
  43e313:	push   esi
  43e314:	aas    
  43e315:	and    al,0x43
  43e317:	inc    edx
  43e318:	popa   
  43e319:	jae    0x43e380
  43e31b:	push   ebx
  43e31c:	imul   ebp,DWORD PTR [esi+0x67],0x4955656c
  43e323:	inc    esi
  43e324:	outs   dx,DWORD PTR ds:[esi]
  43e325:	jb     0x43e394
  43e327:	push   esp
  43e328:	inc    eax
  43e329:	push   esi
  43e32a:	inc    ebx
  43e32b:	push   ebp
  43e32c:	dec    ecx
  43e32d:	dec    ebp
  43e32e:	popa   
  43e32f:	imul   ebp,DWORD PTR [esi+0x46],0x406d726f
  43e336:	push   ebp
  43e337:	dec    ecx
  43e338:	inc    eax
  43e339:	inc    eax
  43e33a:	inc    eax
  43e33b:	push   ebp
  43e33c:	dec    ecx
  43e33d:	inc    eax
  43e33e:	inc    eax
  43e33f:	add    BYTE PTR [eax],ah
  43e341:	add    eax,0x43
  43e346:	add    BYTE PTR [eax],al
  43e348:	cs aas 
  43e34a:	inc    ecx
  43e34b:	push   esi
  43e34c:	inc    ebx
  43e34d:	push   ebp
  43e34e:	dec    ecx
  43e34f:	dec    ebp
  43e350:	popa   
  43e351:	imul   ebp,DWORD PTR [esi+0x46],0x406d726f
  43e358:	push   ebp
  43e359:	dec    ecx
  43e35a:	inc    eax
  43e35b:	inc    eax
  43e35c:	add    BYTE PTR [eax],al
  43e35e:	add    BYTE PTR [eax],al
  43e360:	and    BYTE PTR ds:0x43,al
  43e366:	add    BYTE PTR [eax],al
  43e368:	cs aas 
  43e36a:	inc    ecx
  43e36b:	push   esi
  43e36c:	gs js  0x43e3d2
  43e36f:	gs jo  0x43e3e6
  43e372:	imul   ebp,DWORD PTR [edi+0x6e],0x64747340
  43e379:	inc    eax
  43e37a:	inc    eax
  43e37b:	add    BYTE PTR [eax],ah
  43e37d:	add    eax,0x43
  43e382:	add    BYTE PTR [eax],al
  43e384:	cs aas 
  43e386:	inc    ecx
  43e387:	push   esi
  43e388:	ins    BYTE PTR es:[edi],dx
  43e389:	outs   dx,DWORD PTR ds:[esi]
  43e38a:	imul   esp,DWORD PTR [bp+di+0x5f],0x6f727265
  43e392:	jb     0x43e3d4
  43e394:	jae    0x43e40a
  43e396:	fs inc eax
  43e398:	inc    eax
  43e399:	add    BYTE PTR [eax],al
  43e39b:	add    BYTE PTR [eax],ah
  43e39d:	add    eax,0x43
  43e3a2:	add    BYTE PTR [eax],al
  43e3a4:	cs aas 
  43e3a6:	inc    ecx
  43e3a7:	push   esi
  43e3a8:	ins    BYTE PTR es:[edi],dx
  43e3a9:	outs   dx,BYTE PTR gs:[esi]
  43e3ab:	addr16 je 0x43e416
  43e3ae:	pop    edi
  43e3af:	gs jb  0x43e424
  43e3b2:	outs   dx,DWORD PTR ds:[esi]
  43e3b3:	jb     0x43e3f5
  43e3b5:	jae    0x43e42b
  43e3b7:	fs inc eax
  43e3b9:	inc    eax
  43e3ba:	add    BYTE PTR [eax],al
  43e3bc:	and    BYTE PTR ds:0x43,al
  43e3c2:	add    BYTE PTR [eax],al
  43e3c4:	cs aas 
  43e3c6:	inc    ecx
  43e3c7:	push   esi
  43e3c8:	bound  esp,QWORD PTR [ecx+0x64]
  43e3cb:	pop    edi
  43e3cc:	popa   
  43e3cd:	ins    BYTE PTR es:[edi],dx
  43e3ce:	ins    BYTE PTR es:[edi],dx
  43e3cf:	outs   dx,DWORD PTR ds:[esi]
  43e3d0:	arpl   WORD PTR [eax+0x73],ax
  43e3d3:	je     0x43e439
  43e3d5:	inc    eax
  43e3d6:	inc    eax
  43e3d7:	add    BYTE PTR [eax],ah
  43e3d9:	add    eax,0x43
  43e3de:	add    BYTE PTR [eax],al
  43e3e0:	cs aas 
  43e3e2:	inc    ecx
  43e3e3:	push   esi
  43e3e4:	gs js  0x43e44a
  43e3e7:	gs jo  0x43e45e
  43e3ea:	imul   ebp,DWORD PTR [edi+0x6e],0x6f6f6240
  43e3f1:	jae    0x43e467
  43e3f3:	inc    eax
  43e3f4:	inc    eax
  43e3f5:	add    BYTE PTR [eax],al
  43e3f7:	add    BYTE PTR [eax],ah
  43e3f9:	add    eax,0x43
  43e3fe:	add    BYTE PTR [eax],al
  43e400:	cs aas 
  43e402:	inc    ecx
  43e403:	push   esi
  43e404:	arpl   WORD PTR [edi+ebp*2+0x6e],bp
  43e408:	gs pop edi
  43e40a:	bound  esp,QWORD PTR [ecx+0x73]
  43e40d:	gs inc eax
  43e40f:	gs js  0x43e475
  43e412:	gs jo  0x43e489
  43e415:	imul   ebp,DWORD PTR [edi+0x6e],0x7465645f
  43e41c:	popa   
  43e41d:	imul   ebp,DWORD PTR [eax+eax*2+0x62],0x74736f6f
  43e425:	inc    eax
  43e426:	inc    eax
  43e427:	add    BYTE PTR [eax],ah
  43e429:	add    eax,0x43
  43e42e:	add    BYTE PTR [eax],al
  43e430:	cs aas 
  43e432:	inc    ecx
  43e433:	push   esi
  43e434:	aas    
  43e435:	and    al,0x63
  43e437:	ins    BYTE PTR es:[edi],dx
  43e438:	outs   dx,DWORD PTR ds:[esi]
  43e439:	outs   dx,BYTE PTR ds:[esi]
  43e43a:	gs pop edi
  43e43c:	imul   ebp,DWORD PTR [ebp+0x70],0x3f55406c
  43e443:	and    al,0x65
  43e445:	jb     0x43e4b9
  43e447:	outs   dx,DWORD PTR ds:[esi]
  43e448:	jb     0x43e4a9
  43e44a:	imul   ebp,DWORD PTR [esi+0x66],0x6e695f6f
  43e451:	push   0x65
  43e453:	arpl   WORD PTR [edi+ebp*2+0x72],si
  43e457:	inc    eax
  43e458:	push   esi
  43e459:	je     0x43e4c3
  43e45b:	jb     0x43e4c2
  43e45d:	popa   
  43e45e:	fs pop edi
  43e460:	jb     0x43e4c7
  43e462:	jae    0x43e4d3
  43e464:	jne    0x43e4d8
  43e466:	arpl   WORD PTR [ebp+0x5f],sp
  43e469:	gs jb  0x43e4de
  43e46c:	outs   dx,DWORD PTR ds:[esi]
  43e46d:	jb     0x43e4af
  43e46f:	bound  ebp,QWORD PTR [edi+0x6f]
  43e472:	jae    0x43e4e8
  43e474:	inc    eax
  43e475:	inc    eax
  43e476:	inc    eax
  43e477:	gs js  0x43e4dd
  43e47a:	gs jo  0x43e4f1
  43e47d:	imul   ebp,DWORD PTR [edi+0x6e],0x7465645f
  43e484:	popa   
  43e485:	imul   ebp,DWORD PTR [eax+eax*2+0x62],0x74736f6f
  43e48d:	inc    eax
  43e48e:	inc    eax
  43e48f:	inc    eax
  43e490:	gs js  0x43e4f6
  43e493:	gs jo  0x43e50a
  43e496:	imul   ebp,DWORD PTR [edi+0x6e],0x7465645f
  43e49d:	popa   
  43e49e:	imul   ebp,DWORD PTR [eax+eax*2+0x62],0x74736f6f
  43e4a6:	inc    eax
  43e4a7:	inc    eax
	...
  43e4b0:	and    BYTE PTR ds:0x43,al
  43e4b6:	add    BYTE PTR [eax],al
  43e4b8:	cs aas 
  43e4ba:	inc    ecx
  43e4bb:	push   ebp
  43e4bc:	aas    
  43e4bd:	and    al,0x65
  43e4bf:	jb     0x43e533
  43e4c1:	outs   dx,DWORD PTR ds:[esi]
  43e4c2:	jb     0x43e523
  43e4c4:	imul   ebp,DWORD PTR [esi+0x66],0x6e695f6f
  43e4cb:	push   0x65
  43e4cd:	arpl   WORD PTR [edi+ebp*2+0x72],si
  43e4d1:	inc    eax
  43e4d2:	push   esi
  43e4d3:	je     0x43e53d
  43e4d5:	jb     0x43e53c
  43e4d7:	popa   
  43e4d8:	fs pop edi
  43e4da:	jb     0x43e541
  43e4dc:	jae    0x43e54d
  43e4de:	jne    0x43e552
  43e4e0:	arpl   WORD PTR [ebp+0x5f],sp
  43e4e3:	gs jb  0x43e558
  43e4e6:	outs   dx,DWORD PTR ds:[esi]
  43e4e7:	jb     0x43e529
  43e4e9:	bound  ebp,QWORD PTR [edi+0x6f]
  43e4ec:	jae    0x43e562
  43e4ee:	inc    eax
  43e4ef:	inc    eax
  43e4f0:	inc    eax
  43e4f1:	gs js  0x43e557
  43e4f4:	gs jo  0x43e56b
  43e4f7:	imul   ebp,DWORD PTR [edi+0x6e],0x7465645f
  43e4fe:	popa   
  43e4ff:	imul   ebp,DWORD PTR [eax+eax*2+0x62],0x74736f6f
  43e507:	inc    eax
  43e508:	inc    eax
  43e509:	add    BYTE PTR [eax],al
  43e50b:	add    BYTE PTR [eax],ah
  43e50d:	add    eax,0x43
  43e512:	add    BYTE PTR [eax],al
  43e514:	cs aas 
  43e516:	inc    ecx
  43e517:	push   esi
  43e518:	je     0x43e582
  43e51a:	jb     0x43e581
  43e51c:	popa   
  43e51d:	fs pop edi
  43e51f:	jb     0x43e586
  43e521:	jae    0x43e592
  43e523:	jne    0x43e597
  43e525:	arpl   WORD PTR [ebp+0x5f],sp
  43e528:	gs jb  0x43e59d
  43e52b:	outs   dx,DWORD PTR ds:[esi]
  43e52c:	jb     0x43e56e
  43e52e:	bound  ebp,QWORD PTR [edi+0x6f]
  43e531:	jae    0x43e5a7
  43e533:	inc    eax
  43e534:	inc    eax
  43e535:	add    BYTE PTR [eax],al
  43e537:	add    BYTE PTR [eax],ah
  43e539:	add    eax,0x43
  43e53e:	add    BYTE PTR [eax],al
  43e540:	cs aas 
  43e542:	inc    ecx
  43e543:	push   esi
  43e544:	je     0x43e5ae
  43e546:	jb     0x43e5ad
  43e548:	popa   
  43e549:	fs pop edi
  43e54b:	gs js  0x43e5b1
  43e54e:	gs jo  0x43e5c5
  43e551:	imul   ebp,DWORD PTR [edi+0x6e],0x6f6f6240
  43e558:	jae    0x43e5ce
  43e55a:	inc    eax
  43e55b:	inc    eax
  43e55c:	add    BYTE PTR [eax],al
  43e55e:	add    BYTE PTR [eax],al
  43e560:	and    BYTE PTR ds:0x43,al
  43e566:	add    BYTE PTR [eax],al
  43e568:	cs aas 
  43e56a:	inc    ecx
  43e56b:	push   esi
  43e56c:	aas    
  43e56d:	and    al,0x43
  43e56f:	inc    edx
  43e570:	popa   
  43e571:	jae    0x43e5d8
  43e573:	push   esp
  43e574:	popa   
  43e575:	jae    0x43e5e2
  43e577:	push   esp
  43e578:	inc    eax
  43e579:	push   esi
  43e57a:	inc    ebx
  43e57b:	dec    ebp
  43e57c:	gs je  0x43e5e7
  43e57f:	outs   dx,DWORD PTR ds:[esi]
  43e580:	fs inc ebx
  43e582:	popa   
  43e583:	ins    BYTE PTR es:[edi],dx
  43e584:	ins    BYTE PTR es:[edi],dx
  43e585:	inc    eax
  43e586:	push   esp
  43e587:	popa   
  43e588:	jae    0x43e5f5
  43e58a:	dec    esi
  43e58b:	push   ebx
  43e58c:	inc    eax
  43e58d:	inc    eax
  43e58e:	inc    eax
  43e58f:	push   esp
  43e590:	popa   
  43e591:	jae    0x43e5fe
  43e593:	dec    esi
  43e594:	push   ebx
  43e595:	inc    eax
  43e596:	inc    eax
  43e597:	add    BYTE PTR [eax],ah
  43e599:	add    eax,0x43
  43e59e:	add    BYTE PTR [eax],al
  43e5a0:	cs aas 
  43e5a2:	inc    ecx
  43e5a3:	push   esi
  43e5a4:	inc    ebx
  43e5a5:	dec    ebp
  43e5a6:	gs je  0x43e611
  43e5a9:	outs   dx,DWORD PTR ds:[esi]
  43e5aa:	fs inc ebx
  43e5ac:	popa   
  43e5ad:	ins    BYTE PTR es:[edi],dx
  43e5ae:	ins    BYTE PTR es:[edi],dx
  43e5af:	inc    eax
  43e5b0:	push   esp
  43e5b1:	popa   
  43e5b2:	jae    0x43e61f
  43e5b4:	dec    esi
  43e5b5:	push   ebx
  43e5b6:	inc    eax
  43e5b7:	inc    eax
  43e5b8:	add    BYTE PTR [eax],al
  43e5ba:	add    BYTE PTR [eax],al
  43e5bc:	and    BYTE PTR ds:0x43,al
  43e5c2:	add    BYTE PTR [eax],al
  43e5c4:	cs aas 
  43e5c6:	inc    ecx
  43e5c7:	push   esi
  43e5c8:	dec    ecx
  43e5c9:	push   esp
  43e5ca:	popa   
  43e5cb:	jae    0x43e638
  43e5cd:	inc    eax
  43e5ce:	inc    eax
  43e5cf:	add    BYTE PTR [eax],ah
  43e5d1:	add    eax,0x43
  43e5d6:	add    BYTE PTR [eax],al
  43e5d8:	cs aas 
  43e5da:	inc    ecx
  43e5db:	push   esi
  43e5dc:	jb     0x43e653
  43e5de:	outs   dx,BYTE PTR ds:[esi]
  43e5df:	je     0x43e64a
  43e5e1:	ins    DWORD PTR es:[edi],dx
  43e5e2:	gs pop edi
  43e5e4:	gs jb  0x43e659
  43e5e7:	outs   dx,DWORD PTR ds:[esi]
  43e5e8:	jb     0x43e62a
  43e5ea:	jae    0x43e660
  43e5ec:	fs inc eax
  43e5ee:	inc    eax
  43e5ef:	add    BYTE PTR [eax],ah
  43e5f1:	add    eax,0x43
  43e5f6:	add    BYTE PTR [eax],al
  43e5f8:	cs aas 
  43e5fa:	inc    ecx
  43e5fb:	push   esi
  43e5fc:	bound  esp,QWORD PTR [ecx+0x64]
  43e5ff:	pop    edi
  43e600:	data16 jne 0x43e671
  43e603:	arpl   WORD PTR [ecx+ebp*2+0x6f],si
  43e607:	outs   dx,BYTE PTR ds:[esi]
  43e608:	pop    edi
  43e609:	arpl   WORD PTR [ecx+0x6c],sp
  43e60c:	ins    BYTE PTR es:[edi],dx
  43e60d:	inc    eax
  43e60e:	bound  ebp,QWORD PTR [edi+0x6f]
  43e611:	jae    0x43e687
  43e613:	inc    eax
  43e614:	inc    eax
  43e615:	add    BYTE PTR [eax],al
  43e617:	add    BYTE PTR [eax],ah
  43e619:	add    eax,0x43
  43e61e:	add    BYTE PTR [eax],al
  43e620:	cs aas 
  43e622:	inc    ecx
  43e623:	push   esi
  43e624:	inc    ebx
  43e625:	push   edx
  43e626:	jne    0x43e696
  43e628:	push   esp
  43e629:	imul   ebp,DWORD PTR [ebp+0x65],0x65637845
  43e630:	jo     0x43e6a6
  43e632:	imul   ebp,DWORD PTR [edi+0x6e],0x63784540
  43e639:	gs jo  0x43e6b0
  43e63c:	imul   ebp,DWORD PTR [edi+0x6e],0x6d6f4340
  43e643:	ins    DWORD PTR es:[edi],dx
  43e644:	outs   dx,DWORD PTR ds:[esi]
  43e645:	outs   dx,BYTE PTR ds:[esi]
  43e646:	inc    eax
  43e647:	inc    eax
	...
  43e650:	and    BYTE PTR ds:0x43,al
  43e656:	add    BYTE PTR [eax],al
  43e658:	cs aas 
  43e65a:	inc    ecx
  43e65b:	push   esi
  43e65c:	aas    
  43e65d:	and    al,0x63
  43e65f:	ins    BYTE PTR es:[edi],dx
  43e660:	outs   dx,DWORD PTR ds:[esi]
  43e661:	outs   dx,BYTE PTR ds:[esi]
  43e662:	gs pop edi
  43e664:	imul   ebp,DWORD PTR [ebp+0x70],0x3f55406c
  43e66b:	and    al,0x65
  43e66d:	jb     0x43e6e1
  43e66f:	outs   dx,DWORD PTR ds:[esi]
  43e670:	jb     0x43e6d1
  43e672:	imul   ebp,DWORD PTR [esi+0x66],0x6e695f6f
  43e679:	push   0x65
  43e67b:	arpl   WORD PTR [edi+ebp*2+0x72],si
  43e67f:	inc    eax
  43e680:	push   esi
  43e681:	bound  esp,QWORD PTR [ecx+0x64]
  43e684:	pop    edi
  43e685:	data16 jne 0x43e6f6
  43e688:	arpl   WORD PTR [ecx+ebp*2+0x6f],si
  43e68c:	outs   dx,BYTE PTR ds:[esi]
  43e68d:	pop    edi
  43e68e:	arpl   WORD PTR [ecx+0x6c],sp
  43e691:	ins    BYTE PTR es:[edi],dx
  43e692:	inc    eax
  43e693:	bound  ebp,QWORD PTR [edi+0x6f]
  43e696:	jae    0x43e70c
  43e698:	inc    eax
  43e699:	inc    eax
  43e69a:	inc    eax
  43e69b:	gs js  0x43e701
  43e69e:	gs jo  0x43e715
  43e6a1:	imul   ebp,DWORD PTR [edi+0x6e],0x7465645f
  43e6a8:	popa   
  43e6a9:	imul   ebp,DWORD PTR [eax+eax*2+0x62],0x74736f6f
  43e6b1:	inc    eax
  43e6b2:	inc    eax
  43e6b3:	inc    eax
  43e6b4:	gs js  0x43e71a
  43e6b7:	gs jo  0x43e72e
  43e6ba:	imul   ebp,DWORD PTR [edi+0x6e],0x7465645f
  43e6c1:	popa   
  43e6c2:	imul   ebp,DWORD PTR [eax+eax*2+0x62],0x74736f6f
  43e6ca:	inc    eax
  43e6cb:	inc    eax
  43e6cc:	add    BYTE PTR [eax],al
  43e6ce:	add    BYTE PTR [eax],al
  43e6d0:	and    BYTE PTR ds:0x43,al
  43e6d6:	add    BYTE PTR [eax],al
  43e6d8:	cs aas 
  43e6da:	inc    ecx
  43e6db:	push   ebp
  43e6dc:	aas    
  43e6dd:	and    al,0x65
  43e6df:	jb     0x43e753
  43e6e1:	outs   dx,DWORD PTR ds:[esi]
  43e6e2:	jb     0x43e743
  43e6e4:	imul   ebp,DWORD PTR [esi+0x66],0x6e695f6f
  43e6eb:	push   0x65
  43e6ed:	arpl   WORD PTR [edi+ebp*2+0x72],si
  43e6f1:	inc    eax
  43e6f2:	push   esi
  43e6f3:	bound  esp,QWORD PTR [ecx+0x64]
  43e6f6:	pop    edi
  43e6f7:	data16 jne 0x43e768
  43e6fa:	arpl   WORD PTR [ecx+ebp*2+0x6f],si
  43e6fe:	outs   dx,BYTE PTR ds:[esi]
  43e6ff:	pop    edi
  43e700:	arpl   WORD PTR [ecx+0x6c],sp
  43e703:	ins    BYTE PTR es:[edi],dx
  43e704:	inc    eax
  43e705:	bound  ebp,QWORD PTR [edi+0x6f]
  43e708:	jae    0x43e77e
  43e70a:	inc    eax
  43e70b:	inc    eax
  43e70c:	inc    eax
  43e70d:	gs js  0x43e773
  43e710:	gs jo  0x43e787
  43e713:	imul   ebp,DWORD PTR [edi+0x6e],0x7465645f
  43e71a:	popa   
  43e71b:	imul   ebp,DWORD PTR [eax+eax*2+0x62],0x74736f6f
  43e723:	inc    eax
  43e724:	inc    eax
  43e725:	add    BYTE PTR [eax],al
  43e727:	add    BYTE PTR [eax],ah
  43e729:	add    eax,0x43
  43e72e:	add    BYTE PTR [eax],al
  43e730:	cs aas 
  43e732:	inc    ecx
  43e733:	push   esi
  43e734:	bound  esp,QWORD PTR [ecx+0x64]
  43e737:	pop    edi
  43e738:	arpl   WORD PTR [ecx+0x73],sp
  43e73b:	je     0x43e77d
  43e73d:	jae    0x43e7b3
  43e73f:	fs inc eax
  43e741:	inc    eax
  43e742:	add    BYTE PTR [eax],al
  43e744:	and    BYTE PTR ds:0x43,al
  43e74a:	add    BYTE PTR [eax],al
  43e74c:	cs aas 
  43e74e:	inc    ecx
  43e74f:	push   esi
  43e750:	bound  esp,QWORD PTR [ecx+0x64]
  43e753:	pop    edi
  43e754:	ins    BYTE PTR es:[edi],dx
  43e755:	gs js  0x43e7c1
  43e758:	arpl   WORD PTR [ecx+0x6c],sp
  43e75b:	pop    edi
  43e75c:	arpl   WORD PTR [ecx+0x73],sp
  43e75f:	je     0x43e7a1
  43e761:	bound  ebp,QWORD PTR [edi+0x6f]
  43e764:	jae    0x43e7da
  43e766:	inc    eax
  43e767:	inc    eax
  43e768:	add    BYTE PTR [eax],al
  43e76a:	add    BYTE PTR [eax],al
  43e76c:	and    BYTE PTR ds:0x43,al
  43e772:	add    BYTE PTR [eax],al
  43e774:	cs dec eax
  43e776:	add    BYTE PTR [eax],al
  43e778:	and    BYTE PTR ds:0x43,al
  43e77e:	add    BYTE PTR [eax],al
  43e780:	cs aas 
  43e782:	inc    ecx
  43e783:	push   esi
  43e784:	aas    
  43e785:	and    al,0x62
  43e787:	popa   
  43e788:	jae    0x43e7f3
  43e78a:	arpl   WORD PTR [edi+0x73],bx
  43e78d:	je     0x43e801
  43e78f:	imul   ebp,DWORD PTR [esi+0x67],0x55575f40
  43e796:	aas    
  43e797:	and    al,0x63
  43e799:	push   0x745f7261
  43e79e:	jb     0x43e801
  43e7a0:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x7340575f
  43e7a8:	je     0x43e80e
  43e7aa:	inc    eax
  43e7ab:	inc    eax
  43e7ac:	push   esi
  43e7ad:	aas    
  43e7ae:	and    al,0x61
  43e7b0:	ins    BYTE PTR es:[edi],dx
  43e7b1:	ins    BYTE PTR es:[edi],dx
  43e7b2:	outs   dx,DWORD PTR ds:[esi]
  43e7b3:	arpl   WORD PTR [ecx+0x74],sp
  43e7b6:	outs   dx,DWORD PTR ds:[esi]
  43e7b7:	jb     0x43e7f9
  43e7b9:	pop    edi
  43e7ba:	push   edi
  43e7bb:	inc    eax
  43e7bc:	xor    al,BYTE PTR [eax+0x40]
  43e7bf:	jae    0x43e835
  43e7c1:	fs inc eax
  43e7c3:	inc    eax
  43e7c4:	add    BYTE PTR [eax],al
  43e7c6:	add    BYTE PTR [eax],al
  43e7c8:	and    BYTE PTR ds:0x43,al
  43e7ce:	add    BYTE PTR [eax],al
  43e7d0:	cs aas 
  43e7d2:	inc    ecx
  43e7d3:	push   esi
  43e7d4:	aas    
  43e7d5:	and    al,0x63
  43e7d7:	ins    BYTE PTR es:[edi],dx
  43e7d8:	outs   dx,DWORD PTR ds:[esi]
  43e7d9:	outs   dx,BYTE PTR ds:[esi]
  43e7da:	gs pop edi
  43e7dc:	imul   ebp,DWORD PTR [ebp+0x70],0x3f55406c
  43e7e3:	and    al,0x65
  43e7e5:	jb     0x43e859
  43e7e7:	outs   dx,DWORD PTR ds:[esi]
  43e7e8:	jb     0x43e849
  43e7ea:	imul   ebp,DWORD PTR [esi+0x66],0x6e695f6f
  43e7f1:	push   0x65
  43e7f3:	arpl   WORD PTR [edi+ebp*2+0x72],si
  43e7f7:	inc    eax
  43e7f8:	push   esi
  43e7f9:	bound  esp,QWORD PTR [ecx+0x64]
  43e7fc:	pop    edi
  43e7fd:	ins    BYTE PTR es:[edi],dx
  43e7fe:	gs js  0x43e86a
  43e801:	arpl   WORD PTR [ecx+0x6c],sp
  43e804:	pop    edi
  43e805:	arpl   WORD PTR [ecx+0x73],sp
  43e808:	je     0x43e84a
  43e80a:	bound  ebp,QWORD PTR [edi+0x6f]
  43e80d:	jae    0x43e883
  43e80f:	inc    eax
  43e810:	inc    eax
  43e811:	inc    eax
  43e812:	gs js  0x43e878
  43e815:	gs jo  0x43e88c
  43e818:	imul   ebp,DWORD PTR [edi+0x6e],0x7465645f
  43e81f:	popa   
  43e820:	imul   ebp,DWORD PTR [eax+eax*2+0x62],0x74736f6f
  43e828:	inc    eax
  43e829:	inc    eax
  43e82a:	inc    eax
  43e82b:	gs js  0x43e891
  43e82e:	gs jo  0x43e8a5
  43e831:	imul   ebp,DWORD PTR [edi+0x6e],0x7465645f
  43e838:	popa   
  43e839:	imul   ebp,DWORD PTR [eax+eax*2+0x62],0x74736f6f
  43e841:	inc    eax
  43e842:	inc    eax
  43e843:	add    BYTE PTR [eax],al
  43e845:	add    BYTE PTR [eax],al
  43e847:	add    BYTE PTR [eax],ah
  43e849:	add    eax,0x43
  43e84e:	add    BYTE PTR [eax],al
  43e850:	cs aas 
  43e852:	inc    ecx
  43e853:	push   ebp
  43e854:	aas    
  43e855:	and    al,0x65
  43e857:	jb     0x43e8cb
  43e859:	outs   dx,DWORD PTR ds:[esi]
  43e85a:	jb     0x43e8bb
  43e85c:	imul   ebp,DWORD PTR [esi+0x66],0x6e695f6f
  43e863:	push   0x65
  43e865:	arpl   WORD PTR [edi+ebp*2+0x72],si
  43e869:	inc    eax
  43e86a:	push   esi
  43e86b:	bound  esp,QWORD PTR [ecx+0x64]
  43e86e:	pop    edi
  43e86f:	ins    BYTE PTR es:[edi],dx
  43e870:	gs js  0x43e8dc
  43e873:	arpl   WORD PTR [ecx+0x6c],sp
  43e876:	pop    edi
  43e877:	arpl   WORD PTR [ecx+0x73],sp
  43e87a:	je     0x43e8bc
  43e87c:	bound  ebp,QWORD PTR [edi+0x6f]
  43e87f:	jae    0x43e8f5
  43e881:	inc    eax
  43e882:	inc    eax
  43e883:	inc    eax
  43e884:	gs js  0x43e8ea
  43e887:	gs jo  0x43e8fe
  43e88a:	imul   ebp,DWORD PTR [edi+0x6e],0x7465645f
  43e891:	popa   
  43e892:	imul   ebp,DWORD PTR [eax+eax*2+0x62],0x74736f6f
  43e89a:	inc    eax
  43e89b:	inc    eax
  43e89c:	add    BYTE PTR [eax],al
  43e89e:	add    BYTE PTR [eax],al
  43e8a0:	and    BYTE PTR ds:0x43,al
  43e8a6:	add    BYTE PTR [eax],al
  43e8a8:	cs aas 
  43e8aa:	inc    ecx
  43e8ab:	push   esi
  43e8ac:	aas    
  43e8ad:	and    al,0x62
  43e8af:	imul   ebp,DWORD PTR [esi+0x64],0x5840745f
  43e8b6:	push   esi
  43e8b7:	aas    
  43e8b8:	and    al,0x6d
  43e8ba:	xor    WORD PTR [eax+0x58],ax
  43e8be:	push   esi
  43e8bf:	inc    ebx
  43e8c0:	push   ebp
  43e8c1:	dec    ecx
  43e8c2:	dec    ebp
  43e8c3:	popa   
  43e8c4:	imul   ebp,DWORD PTR [esi+0x46],0x406d726f
  43e8cb:	push   ebp
  43e8cc:	dec    ecx
  43e8cd:	inc    eax
  43e8ce:	inc    eax
  43e8cf:	push   eax
  43e8d0:	inc    ecx
  43e8d1:	push   esi
  43e8d2:	dec    ecx
  43e8d3:	push   ebp
  43e8d4:	dec    ecx
  43e8d5:	dec    edi
  43e8d6:	bound  ebp,QWORD PTR [edx+0x65]
  43e8d9:	arpl   WORD PTR [eax+eax*2+0x40],si
  43e8dd:	inc    eax
  43e8de:	pop    edi
  43e8df:	ins    DWORD PTR es:[edi],dx
  43e8e0:	imul   ax,WORD PTR [eax+0x62],0x6f6f
  43e8e6:	jae    0x43e95c
  43e8e8:	inc    eax
  43e8e9:	inc    eax
  43e8ea:	push   esi
  43e8eb:	aas    
  43e8ec:	and    al,0x6c
  43e8ee:	imul   esi,DWORD PTR [ebx+0x74],0x3f564032
  43e8f5:	and    al,0x76
  43e8f7:	popa   
  43e8f8:	ins    BYTE PTR es:[edi],dx
  43e8f9:	jne    0x43e960
  43e8fb:	inc    eax
  43e8fc:	push   eax
  43e8fd:	inc    ecx
  43e8fe:	push   esi
  43e8ff:	inc    ebx
  43e900:	push   ebp
  43e901:	dec    ecx
  43e902:	dec    ebp
  43e903:	popa   
  43e904:	imul   ebp,DWORD PTR [esi+0x46],0x406d726f
  43e90b:	push   ebp
  43e90c:	dec    ecx
  43e90d:	inc    eax
  43e90e:	inc    eax
  43e90f:	inc    eax
  43e910:	pop    edi
  43e911:	bound  ebp,QWORD PTR [ecx+0x40]
  43e914:	bound  ebp,QWORD PTR [edi+0x6f]
  43e917:	jae    0x43e98d
  43e919:	inc    eax
  43e91a:	inc    eax
  43e91b:	push   ebp
  43e91c:	aas    
  43e91d:	and    al,0x61
  43e91f:	jb     0x43e988
  43e921:	inc    eax
  43e922:	and    al,0x30
  43e924:	xor    BYTE PTR [eax+0x33],al
  43e927:	inc    eax
  43e928:	inc    eax
  43e929:	pop    edi
  43e92a:	bound  ebp,QWORD PTR [ecx+0x40]
  43e92d:	xor    eax,DWORD PTR [eax+0x40]
  43e930:	pop    edi
  43e931:	bound  ebp,QWORD PTR [ecx+0x40]
  43e934:	bound  ebp,QWORD PTR [edi+0x6f]
  43e937:	jae    0x43e9ad
  43e939:	inc    eax
  43e93a:	inc    eax
  43e93b:	add    BYTE PTR [eax],al
  43e93d:	add    BYTE PTR [eax],al
  43e93f:	add    BYTE PTR [eax],ah
  43e941:	add    eax,0x43
  43e946:	add    BYTE PTR [eax],al
  43e948:	cs aas 
  43e94a:	inc    ecx
  43e94b:	push   esi
  43e94c:	aas    
  43e94d:	and    al,0x62
  43e94f:	imul   ebp,DWORD PTR [esi+0x64],0x5840745f
  43e956:	push   esi
  43e957:	aas    
  43e958:	and    al,0x6d
  43e95a:	data16 xor al,BYTE PTR [eax+0x58]
  43e95e:	push   esi
  43e95f:	inc    ebx
  43e960:	push   ebp
  43e961:	dec    ecx
  43e962:	dec    ebp
  43e963:	popa   
  43e964:	imul   ebp,DWORD PTR [esi+0x46],0x406d726f
  43e96b:	push   ebp
  43e96c:	dec    ecx
  43e96d:	inc    eax
  43e96e:	inc    eax
  43e96f:	push   eax
  43e970:	inc    ecx
  43e971:	pop    eax
  43e972:	push   eax
  43e973:	inc    ecx
  43e974:	push   edi
  43e975:	xor    al,0x63
  43e977:	ins    BYTE PTR es:[edi],dx
  43e978:	outs   dx,DWORD PTR ds:[esi]
  43e979:	jae    0x43e9e0
  43e97b:	pop    edi
  43e97c:	popa   
  43e97d:	arpl   WORD PTR [ecx+ebp*2+0x6f],si
  43e981:	outs   dx,BYTE PTR ds:[esi]
  43e982:	pop    edi
  43e983:	outs   dx,BYTE PTR gs:[esi]
  43e985:	jne    0x43e9f4
  43e987:	inc    eax
  43e988:	inc    ebx
  43e989:	outs   dx,DWORD PTR ds:[esi]
  43e98a:	outs   dx,BYTE PTR ds:[esi]
  43e98b:	jae    0x43ea01
  43e98d:	dec    esi
  43e98e:	push   ebx
  43e98f:	inc    eax
  43e990:	inc    ebp
  43e991:	jbe    0x43e9f8
  43e993:	outs   dx,BYTE PTR ds:[esi]
  43e994:	je     0x43e9e4
  43e996:	push   ebx
  43e997:	inc    eax
  43e998:	inc    eax
  43e999:	inc    eax
  43e99a:	pop    edi
  43e99b:	ins    DWORD PTR es:[edi],dx
  43e99c:	imul   ax,WORD PTR [eax+0x62],0x6f6f
  43e9a2:	jae    0x43ea18
  43e9a4:	inc    eax
  43e9a5:	inc    eax
  43e9a6:	push   esi
  43e9a7:	aas    
  43e9a8:	and    al,0x6c
  43e9aa:	imul   esi,DWORD PTR [ebx+0x74],0x3f564033
  43e9b1:	and    al,0x76
  43e9b3:	popa   
  43e9b4:	ins    BYTE PTR es:[edi],dx
  43e9b5:	jne    0x43ea1c
  43e9b7:	inc    eax
  43e9b8:	push   eax
  43e9b9:	inc    ecx
  43e9ba:	push   esi
  43e9bb:	inc    ebx
  43e9bc:	push   ebp
  43e9bd:	dec    ecx
  43e9be:	dec    ebp
  43e9bf:	popa   
  43e9c0:	imul   ebp,DWORD PTR [esi+0x46],0x406d726f
  43e9c7:	push   ebp
  43e9c8:	dec    ecx
  43e9c9:	inc    eax
  43e9ca:	inc    eax
  43e9cb:	inc    eax
  43e9cc:	pop    edi
  43e9cd:	bound  ebp,QWORD PTR [ecx+0x40]
  43e9d0:	bound  ebp,QWORD PTR [edi+0x6f]
  43e9d3:	jae    0x43ea49
  43e9d5:	inc    eax
  43e9d6:	inc    eax
  43e9d7:	push   ebp
  43e9d8:	aas    
  43e9d9:	and    al,0x61
  43e9db:	jb     0x43ea44
  43e9dd:	inc    eax
  43e9de:	and    al,0x30
  43e9e0:	xor    BYTE PTR [eax+0x33],al
  43e9e3:	inc    eax
  43e9e4:	push   ebp
  43e9e5:	aas    
  43e9e6:	and    al,0x61
  43e9e8:	jb     0x43ea51
  43e9ea:	inc    eax
  43e9eb:	and    al,0x30
  43e9ed:	xor    DWORD PTR [eax+0x33],eax
  43e9f0:	inc    eax
  43e9f1:	inc    eax
  43e9f2:	pop    edi
  43e9f3:	bound  ebp,QWORD PTR [ecx+0x40]
  43e9f6:	xor    eax,DWORD PTR [eax+0x40]
  43e9f9:	pop    edi
  43e9fa:	bound  ebp,QWORD PTR [ecx+0x40]
  43e9fd:	bound  ebp,QWORD PTR [edi+0x6f]
  43ea00:	jae    0x43ea76
  43ea02:	inc    eax
  43ea03:	inc    eax
  43ea04:	add    BYTE PTR [eax],al
  43ea06:	add    BYTE PTR [eax],al
  43ea08:	and    BYTE PTR ds:0x43,al
  43ea0e:	add    BYTE PTR [eax],al
  43ea10:	cs aas 
  43ea12:	inc    ecx
  43ea13:	push   esi
  43ea14:	outs   dx,DWORD PTR ds:[esi]
  43ea15:	jne    0x43ea8b
  43ea17:	pop    edi
  43ea18:	outs   dx,DWORD PTR ds:[esi]
  43ea19:	pop    di
  43ea1b:	jb     0x43ea7e
  43ea1d:	outs   dx,BYTE PTR ds:[esi]
  43ea1e:	addr16 gs inc eax
  43ea21:	jae    0x43ea97
  43ea23:	fs inc eax
  43ea25:	inc    eax
  43ea26:	add    BYTE PTR [eax],al
  43ea28:	and    BYTE PTR ds:0x43,al
  43ea2e:	add    BYTE PTR [eax],al
  43ea30:	cs aas 
  43ea32:	inc    ecx
  43ea33:	push   esi
  43ea34:	aas    
  43ea35:	and    al,0x63
  43ea37:	ins    BYTE PTR es:[edi],dx
  43ea38:	outs   dx,DWORD PTR ds:[esi]
  43ea39:	outs   dx,BYTE PTR ds:[esi]
  43ea3a:	gs pop edi
  43ea3c:	imul   ebp,DWORD PTR [ebp+0x70],0x3f55406c
  43ea43:	and    al,0x65
  43ea45:	jb     0x43eab9
  43ea47:	outs   dx,DWORD PTR ds:[esi]
  43ea48:	jb     0x43eaa9
  43ea4a:	imul   ebp,DWORD PTR [esi+0x66],0x6e695f6f
  43ea51:	push   0x65
  43ea53:	arpl   WORD PTR [edi+ebp*2+0x72],si
  43ea57:	inc    eax
  43ea58:	push   esi
  43ea59:	jb     0x43ead0
  43ea5b:	outs   dx,BYTE PTR ds:[esi]
  43ea5c:	je     0x43eac7
  43ea5e:	ins    DWORD PTR es:[edi],dx
  43ea5f:	gs pop edi
  43ea61:	gs jb  0x43ead6
  43ea64:	outs   dx,DWORD PTR ds:[esi]
  43ea65:	jb     0x43eaa7
  43ea67:	jae    0x43eadd
  43ea69:	fs inc eax
  43ea6b:	inc    eax
  43ea6c:	inc    eax
  43ea6d:	gs js  0x43ead3
  43ea70:	gs jo  0x43eae7
  43ea73:	imul   ebp,DWORD PTR [edi+0x6e],0x7465645f
  43ea7a:	popa   
  43ea7b:	imul   ebp,DWORD PTR [eax+eax*2+0x62],0x74736f6f
  43ea83:	inc    eax
  43ea84:	inc    eax
  43ea85:	inc    eax
  43ea86:	gs js  0x43eaec
  43ea89:	gs jo  0x43eb00
  43ea8c:	imul   ebp,DWORD PTR [edi+0x6e],0x7465645f
  43ea93:	popa   
  43ea94:	imul   ebp,DWORD PTR [eax+eax*2+0x62],0x74736f6f
  43ea9c:	inc    eax
  43ea9d:	inc    eax
  43ea9e:	add    BYTE PTR [eax],al
  43eaa0:	and    BYTE PTR ds:0x43,al
  43eaa6:	add    BYTE PTR [eax],al
  43eaa8:	cs aas 
  43eaaa:	inc    ecx
  43eaab:	push   ebp
  43eaac:	aas    
  43eaad:	and    al,0x65
  43eaaf:	jb     0x43eb23
  43eab1:	outs   dx,DWORD PTR ds:[esi]
  43eab2:	jb     0x43eb13
  43eab4:	imul   ebp,DWORD PTR [esi+0x66],0x6e695f6f
  43eabb:	push   0x65
  43eabd:	arpl   WORD PTR [edi+ebp*2+0x72],si
  43eac1:	inc    eax
  43eac2:	push   esi
  43eac3:	jb     0x43eb3a
  43eac5:	outs   dx,BYTE PTR ds:[esi]
  43eac6:	je     0x43eb31
  43eac8:	ins    DWORD PTR es:[edi],dx
  43eac9:	gs pop edi
  43eacb:	gs jb  0x43eb40
  43eace:	outs   dx,DWORD PTR ds:[esi]
  43eacf:	jb     0x43eb11
  43ead1:	jae    0x43eb47
  43ead3:	fs inc eax
  43ead5:	inc    eax
  43ead6:	inc    eax
  43ead7:	gs js  0x43eb3d
  43eada:	gs jo  0x43eb51
  43eadd:	imul   ebp,DWORD PTR [edi+0x6e],0x7465645f
  43eae4:	popa   
  43eae5:	imul   ebp,DWORD PTR [eax+eax*2+0x62],0x74736f6f
  43eaed:	inc    eax
  43eaee:	inc    eax
  43eaef:	add    BYTE PTR [eax],ah
  43eaf1:	add    eax,0x43
  43eaf6:	add    BYTE PTR [eax],al
  43eaf8:	cs aas 
  43eafa:	inc    ecx
  43eafb:	push   esi
  43eafc:	aas    
  43eafd:	and    al,0x63
  43eaff:	ins    BYTE PTR es:[edi],dx
  43eb00:	outs   dx,DWORD PTR ds:[esi]
  43eb01:	outs   dx,BYTE PTR ds:[esi]
  43eb02:	gs pop edi
  43eb04:	imul   ebp,DWORD PTR [ebp+0x70],0x3f55406c
  43eb0b:	and    al,0x65
  43eb0d:	jb     0x43eb81
  43eb0f:	outs   dx,DWORD PTR ds:[esi]
  43eb10:	jb     0x43eb71
  43eb12:	imul   ebp,DWORD PTR [esi+0x66],0x6e695f6f
  43eb19:	push   0x65
  43eb1b:	arpl   WORD PTR [edi+ebp*2+0x72],si
  43eb1f:	inc    eax
  43eb20:	push   ebp
  43eb21:	bound  esp,QWORD PTR [ecx+0x64]
  43eb24:	pop    edi
  43eb25:	fs popa 
  43eb27:	jns    0x43eb88
  43eb29:	outs   dx,DWORD PTR ds:[esi]
  43eb2a:	pop    di
  43eb2c:	ins    DWORD PTR es:[edi],dx
  43eb2d:	outs   dx,DWORD PTR ds:[esi]
  43eb2e:	outs   dx,BYTE PTR ds:[esi]
  43eb2f:	je     0x43eb99
  43eb31:	inc    eax
  43eb32:	addr16 jb 0x43eb9a
  43eb35:	outs   dx,DWORD PTR ds:[si]
  43eb37:	jb     0x43eba2
  43eb39:	popa   
  43eb3a:	outs   dx,BYTE PTR ds:[esi]
  43eb3b:	inc    eax
  43eb3c:	bound  ebp,QWORD PTR [edi+0x6f]
  43eb3f:	jae    0x43ebb5
  43eb41:	inc    eax
  43eb42:	inc    eax
  43eb43:	inc    eax
  43eb44:	gs js  0x43ebaa
  43eb47:	gs jo  0x43ebbe
  43eb4a:	imul   ebp,DWORD PTR [edi+0x6e],0x7465645f
  43eb51:	popa   
  43eb52:	imul   ebp,DWORD PTR [eax+eax*2+0x62],0x74736f6f
  43eb5a:	inc    eax
  43eb5b:	inc    eax
  43eb5c:	inc    eax
  43eb5d:	gs js  0x43ebc3
  43eb60:	gs jo  0x43ebd7
  43eb63:	imul   ebp,DWORD PTR [edi+0x6e],0x7465645f
  43eb6a:	popa   
  43eb6b:	imul   ebp,DWORD PTR [eax+eax*2+0x62],0x74736f6f
  43eb73:	inc    eax
  43eb74:	inc    eax
  43eb75:	add    BYTE PTR [eax],al
  43eb77:	add    BYTE PTR [eax],ah
  43eb79:	add    eax,0x43
  43eb7e:	add    BYTE PTR [eax],al
  43eb80:	cs aas 
  43eb82:	inc    ecx
  43eb83:	push   ebp
  43eb84:	aas    
  43eb85:	and    al,0x65
  43eb87:	jb     0x43ebfb
  43eb89:	outs   dx,DWORD PTR ds:[esi]
  43eb8a:	jb     0x43ebeb
  43eb8c:	imul   ebp,DWORD PTR [esi+0x66],0x6e695f6f
  43eb93:	push   0x65
  43eb95:	arpl   WORD PTR [edi+ebp*2+0x72],si
  43eb99:	inc    eax
  43eb9a:	push   ebp
  43eb9b:	bound  esp,QWORD PTR [ecx+0x64]
  43eb9e:	pop    edi
  43eb9f:	fs popa 
  43eba1:	jns    0x43ec02
  43eba3:	outs   dx,DWORD PTR ds:[esi]
  43eba4:	pop    di
  43eba6:	ins    DWORD PTR es:[edi],dx
  43eba7:	outs   dx,DWORD PTR ds:[esi]
  43eba8:	outs   dx,BYTE PTR ds:[esi]
  43eba9:	je     0x43ec13
  43ebab:	inc    eax
  43ebac:	addr16 jb 0x43ec14
  43ebaf:	outs   dx,DWORD PTR ds:[si]
  43ebb1:	jb     0x43ec1c
  43ebb3:	popa   
  43ebb4:	outs   dx,BYTE PTR ds:[esi]
  43ebb5:	inc    eax
  43ebb6:	bound  ebp,QWORD PTR [edi+0x6f]
  43ebb9:	jae    0x43ec2f
  43ebbb:	inc    eax
  43ebbc:	inc    eax
  43ebbd:	inc    eax
  43ebbe:	gs js  0x43ec24
  43ebc1:	gs jo  0x43ec38
  43ebc4:	imul   ebp,DWORD PTR [edi+0x6e],0x7465645f
  43ebcb:	popa   
  43ebcc:	imul   ebp,DWORD PTR [eax+eax*2+0x62],0x74736f6f
  43ebd4:	inc    eax
  43ebd5:	inc    eax
  43ebd6:	add    BYTE PTR [eax],al
  43ebd8:	and    BYTE PTR ds:0x43,al
  43ebde:	add    BYTE PTR [eax],al
  43ebe0:	cs aas 
  43ebe2:	inc    ecx
  43ebe3:	push   ebp
  43ebe4:	bound  esp,QWORD PTR [ecx+0x64]
  43ebe7:	pop    edi
  43ebe8:	fs popa 
  43ebea:	jns    0x43ec4b
  43ebec:	outs   dx,DWORD PTR ds:[esi]
  43ebed:	pop    di
  43ebef:	ins    DWORD PTR es:[edi],dx
  43ebf0:	outs   dx,DWORD PTR ds:[esi]
  43ebf1:	outs   dx,BYTE PTR ds:[esi]
  43ebf2:	je     0x43ec5c
  43ebf4:	inc    eax
  43ebf5:	addr16 jb 0x43ec5d
  43ebf8:	outs   dx,DWORD PTR ds:[si]
  43ebfa:	jb     0x43ec65
  43ebfc:	popa   
  43ebfd:	outs   dx,BYTE PTR ds:[esi]
  43ebfe:	inc    eax
  43ebff:	bound  ebp,QWORD PTR [edi+0x6f]
  43ec02:	jae    0x43ec78
  43ec04:	inc    eax
  43ec05:	inc    eax
  43ec06:	add    BYTE PTR [eax],al
  43ec08:	and    BYTE PTR ds:0x43,al
  43ec0e:	add    BYTE PTR [eax],al
  43ec10:	cs aas 
  43ec12:	inc    ecx
  43ec13:	push   esi
  43ec14:	aas    
  43ec15:	and    al,0x63
  43ec17:	ins    BYTE PTR es:[edi],dx
  43ec18:	outs   dx,DWORD PTR ds:[esi]
  43ec19:	outs   dx,BYTE PTR ds:[esi]
  43ec1a:	gs pop edi
  43ec1c:	imul   ebp,DWORD PTR [ebp+0x70],0x3f55406c
  43ec23:	and    al,0x65
  43ec25:	jb     0x43ec99
  43ec27:	outs   dx,DWORD PTR ds:[esi]
  43ec28:	jb     0x43ec89
  43ec2a:	imul   ebp,DWORD PTR [esi+0x66],0x6e695f6f
  43ec31:	push   0x65
  43ec33:	arpl   WORD PTR [edi+ebp*2+0x72],si
  43ec37:	inc    eax
  43ec38:	push   esi
  43ec39:	ins    BYTE PTR es:[edi],dx
  43ec3a:	outs   dx,DWORD PTR ds:[esi]
  43ec3b:	arpl   WORD PTR [ebx+0x5f],bp
  43ec3e:	gs jb  0x43ecb3
  43ec41:	outs   dx,DWORD PTR ds:[esi]
  43ec42:	jb     0x43ec84
  43ec44:	bound  ebp,QWORD PTR [edi+0x6f]
  43ec47:	jae    0x43ecbd
  43ec49:	inc    eax
  43ec4a:	inc    eax
  43ec4b:	inc    eax
  43ec4c:	gs js  0x43ecb2
  43ec4f:	gs jo  0x43ecc6
  43ec52:	imul   ebp,DWORD PTR [edi+0x6e],0x7465645f
  43ec59:	popa   
  43ec5a:	imul   ebp,DWORD PTR [eax+eax*2+0x62],0x74736f6f
  43ec62:	inc    eax
  43ec63:	inc    eax
  43ec64:	inc    eax
  43ec65:	gs js  0x43eccb
  43ec68:	gs jo  0x43ecdf
  43ec6b:	imul   ebp,DWORD PTR [edi+0x6e],0x7465645f
  43ec72:	popa   
  43ec73:	imul   ebp,DWORD PTR [eax+eax*2+0x62],0x74736f6f
  43ec7b:	inc    eax
  43ec7c:	inc    eax
  43ec7d:	add    BYTE PTR [eax],al
  43ec7f:	add    BYTE PTR [eax],ah
  43ec81:	add    eax,0x43
  43ec86:	add    BYTE PTR [eax],al
  43ec88:	cs aas 
  43ec8a:	inc    ecx
  43ec8b:	push   ebp
  43ec8c:	aas    
  43ec8d:	and    al,0x65
  43ec8f:	jb     0x43ed03
  43ec91:	outs   dx,DWORD PTR ds:[esi]
  43ec92:	jb     0x43ecf3
  43ec94:	imul   ebp,DWORD PTR [esi+0x66],0x6e695f6f
  43ec9b:	push   0x65
  43ec9d:	arpl   WORD PTR [edi+ebp*2+0x72],si
  43eca1:	inc    eax
  43eca2:	push   esi
  43eca3:	ins    BYTE PTR es:[edi],dx
  43eca4:	outs   dx,DWORD PTR ds:[esi]
  43eca5:	arpl   WORD PTR [ebx+0x5f],bp
  43eca8:	gs jb  0x43ed1d
  43ecab:	outs   dx,DWORD PTR ds:[esi]
  43ecac:	jb     0x43ecee
  43ecae:	bound  ebp,QWORD PTR [edi+0x6f]
  43ecb1:	jae    0x43ed27
  43ecb3:	inc    eax
  43ecb4:	inc    eax
  43ecb5:	inc    eax
  43ecb6:	gs js  0x43ed1c
  43ecb9:	gs jo  0x43ed30
  43ecbc:	imul   ebp,DWORD PTR [edi+0x6e],0x7465645f
  43ecc3:	popa   
  43ecc4:	imul   ebp,DWORD PTR [eax+eax*2+0x62],0x74736f6f
  43eccc:	inc    eax
  43eccd:	inc    eax
  43ecce:	add    BYTE PTR [eax],al
  43ecd0:	and    BYTE PTR ds:0x43,al
  43ecd6:	add    BYTE PTR [eax],al
  43ecd8:	cs aas 
  43ecda:	inc    ecx
  43ecdb:	push   esi
  43ecdc:	ins    BYTE PTR es:[edi],dx
  43ecdd:	outs   dx,DWORD PTR ds:[esi]
  43ecde:	arpl   WORD PTR [ebx+0x5f],bp
  43ece1:	gs jb  0x43ed56
  43ece4:	outs   dx,DWORD PTR ds:[esi]
  43ece5:	jb     0x43ed27
  43ece7:	bound  ebp,QWORD PTR [edi+0x6f]
  43ecea:	jae    0x43ed60
  43ecec:	inc    eax
  43eced:	inc    eax
  43ecee:	add    BYTE PTR [eax],al
  43ecf0:	and    BYTE PTR ds:0x43,al
  43ecf6:	add    BYTE PTR [eax],al
  43ecf8:	cs aas 
  43ecfa:	inc    ecx
  43ecfb:	push   esi
  43ecfc:	aas    
  43ecfd:	and    al,0x63
  43ecff:	ins    BYTE PTR es:[edi],dx
  43ed00:	outs   dx,DWORD PTR ds:[esi]
  43ed01:	outs   dx,BYTE PTR ds:[esi]
  43ed02:	gs pop edi
  43ed04:	imul   ebp,DWORD PTR [ebp+0x70],0x3f55406c
  43ed0b:	and    al,0x65
  43ed0d:	jb     0x43ed81
  43ed0f:	outs   dx,DWORD PTR ds:[esi]
  43ed10:	jb     0x43ed71
  43ed12:	imul   ebp,DWORD PTR [esi+0x66],0x6e695f6f
  43ed19:	push   0x65
  43ed1b:	arpl   WORD PTR [edi+ebp*2+0x72],si
  43ed1f:	inc    eax
  43ed20:	push   ebp
  43ed21:	bound  esp,QWORD PTR [ecx+0x64]
  43ed24:	pop    edi
  43ed25:	jns    0x43ed8c
  43ed27:	popa   
  43ed28:	jb     0x43ed6a
  43ed2a:	addr16 jb 0x43ed92
  43ed2d:	outs   dx,DWORD PTR ds:[si]
  43ed2f:	jb     0x43ed9a
  43ed31:	popa   
  43ed32:	outs   dx,BYTE PTR ds:[esi]
  43ed33:	inc    eax
  43ed34:	bound  ebp,QWORD PTR [edi+0x6f]
  43ed37:	jae    0x43edad
  43ed39:	inc    eax
  43ed3a:	inc    eax
  43ed3b:	inc    eax
  43ed3c:	gs js  0x43eda2
  43ed3f:	gs jo  0x43edb6
  43ed42:	imul   ebp,DWORD PTR [edi+0x6e],0x7465645f
  43ed49:	popa   
  43ed4a:	imul   ebp,DWORD PTR [eax+eax*2+0x62],0x74736f6f
  43ed52:	inc    eax
  43ed53:	inc    eax
  43ed54:	inc    eax
  43ed55:	gs js  0x43edbb
  43ed58:	gs jo  0x43edcf
  43ed5b:	imul   ebp,DWORD PTR [edi+0x6e],0x7465645f
  43ed62:	popa   
  43ed63:	imul   ebp,DWORD PTR [eax+eax*2+0x62],0x74736f6f
  43ed6b:	inc    eax
  43ed6c:	inc    eax
  43ed6d:	add    BYTE PTR [eax],al
  43ed6f:	add    BYTE PTR [eax],ah
  43ed71:	add    eax,0x43
  43ed76:	add    BYTE PTR [eax],al
  43ed78:	cs aas 
  43ed7a:	inc    ecx
  43ed7b:	push   ebp
  43ed7c:	aas    
  43ed7d:	and    al,0x65
  43ed7f:	jb     0x43edf3
  43ed81:	outs   dx,DWORD PTR ds:[esi]
  43ed82:	jb     0x43ede3
  43ed84:	imul   ebp,DWORD PTR [esi+0x66],0x6e695f6f
  43ed8b:	push   0x65
  43ed8d:	arpl   WORD PTR [edi+ebp*2+0x72],si
  43ed91:	inc    eax
  43ed92:	push   ebp
  43ed93:	bound  esp,QWORD PTR [ecx+0x64]
  43ed96:	pop    edi
  43ed97:	jns    0x43edfe
  43ed99:	popa   
  43ed9a:	jb     0x43eddc
  43ed9c:	addr16 jb 0x43ee04
  43ed9f:	outs   dx,DWORD PTR ds:[si]
  43eda1:	jb     0x43ee0c
  43eda3:	popa   
  43eda4:	outs   dx,BYTE PTR ds:[esi]
  43eda5:	inc    eax
  43eda6:	bound  ebp,QWORD PTR [edi+0x6f]
  43eda9:	jae    0x43ee1f
  43edab:	inc    eax
  43edac:	inc    eax
  43edad:	inc    eax
  43edae:	gs js  0x43ee14
  43edb1:	gs jo  0x43ee28
  43edb4:	imul   ebp,DWORD PTR [edi+0x6e],0x7465645f
  43edbb:	popa   
  43edbc:	imul   ebp,DWORD PTR [eax+eax*2+0x62],0x74736f6f
  43edc4:	inc    eax
  43edc5:	inc    eax
  43edc6:	add    BYTE PTR [eax],al
  43edc8:	and    BYTE PTR ds:0x43,al
  43edce:	add    BYTE PTR [eax],al
  43edd0:	cs aas 
  43edd2:	inc    ecx
  43edd3:	push   ebp
  43edd4:	bound  esp,QWORD PTR [ecx+0x64]
  43edd7:	pop    edi
  43edd8:	jns    0x43ee3f
  43edda:	popa   
  43eddb:	jb     0x43ee1d
  43eddd:	addr16 jb 0x43ee45
  43ede0:	outs   dx,DWORD PTR ds:[si]
  43ede2:	jb     0x43ee4d
  43ede4:	popa   
  43ede5:	outs   dx,BYTE PTR ds:[esi]
  43ede6:	inc    eax
  43ede7:	bound  ebp,QWORD PTR [edi+0x6f]
  43edea:	jae    0x43ee60
  43edec:	inc    eax
  43eded:	inc    eax
  43edee:	add    BYTE PTR [eax],al
  43edf0:	and    BYTE PTR ds:0x43,al
  43edf6:	add    BYTE PTR [eax],al
  43edf8:	cs aas 
  43edfa:	inc    ecx
  43edfb:	push   esi
  43edfc:	aas    
  43edfd:	and    al,0x63
  43edff:	ins    BYTE PTR es:[edi],dx
  43ee00:	outs   dx,DWORD PTR ds:[esi]
  43ee01:	outs   dx,BYTE PTR ds:[esi]
  43ee02:	gs pop edi
  43ee04:	imul   ebp,DWORD PTR [ebp+0x70],0x3f55406c
  43ee0b:	and    al,0x65
  43ee0d:	jb     0x43ee81
  43ee0f:	outs   dx,DWORD PTR ds:[esi]
  43ee10:	jb     0x43ee71
  43ee12:	imul   ebp,DWORD PTR [esi+0x66],0x6e695f6f
  43ee19:	push   0x65
  43ee1b:	arpl   WORD PTR [edi+ebp*2+0x72],si
  43ee1f:	inc    eax
  43ee20:	push   ebp
  43ee21:	bound  esp,QWORD PTR [ecx+0x64]
  43ee24:	pop    edi
  43ee25:	ins    DWORD PTR es:[edi],dx
  43ee26:	outs   dx,DWORD PTR ds:[esi]
  43ee27:	outs   dx,BYTE PTR ds:[esi]
  43ee28:	je     0x43ee92
  43ee2a:	inc    eax
  43ee2b:	addr16 jb 0x43ee93
  43ee2e:	outs   dx,DWORD PTR ds:[si]
  43ee30:	jb     0x43ee9b
  43ee32:	popa   
  43ee33:	outs   dx,BYTE PTR ds:[esi]
  43ee34:	inc    eax
  43ee35:	bound  ebp,QWORD PTR [edi+0x6f]
  43ee38:	jae    0x43eeae
  43ee3a:	inc    eax
  43ee3b:	inc    eax
  43ee3c:	inc    eax
  43ee3d:	gs js  0x43eea3
  43ee40:	gs jo  0x43eeb7
  43ee43:	imul   ebp,DWORD PTR [edi+0x6e],0x7465645f
  43ee4a:	popa   
  43ee4b:	imul   ebp,DWORD PTR [eax+eax*2+0x62],0x74736f6f
  43ee53:	inc    eax
  43ee54:	inc    eax
  43ee55:	inc    eax
  43ee56:	gs js  0x43eebc
  43ee59:	gs jo  0x43eed0
  43ee5c:	imul   ebp,DWORD PTR [edi+0x6e],0x7465645f
  43ee63:	popa   
  43ee64:	imul   ebp,DWORD PTR [eax+eax*2+0x62],0x74736f6f
  43ee6c:	inc    eax
  43ee6d:	inc    eax
  43ee6e:	add    BYTE PTR [eax],al
  43ee70:	and    BYTE PTR ds:0x43,al
  43ee76:	add    BYTE PTR [eax],al
  43ee78:	cs aas 
  43ee7a:	inc    ecx
  43ee7b:	push   ebp
  43ee7c:	aas    
  43ee7d:	and    al,0x65
  43ee7f:	jb     0x43eef3
  43ee81:	outs   dx,DWORD PTR ds:[esi]
  43ee82:	jb     0x43eee3
  43ee84:	imul   ebp,DWORD PTR [esi+0x66],0x6e695f6f
  43ee8b:	push   0x65
  43ee8d:	arpl   WORD PTR [edi+ebp*2+0x72],si
  43ee91:	inc    eax
  43ee92:	push   ebp
  43ee93:	bound  esp,QWORD PTR [ecx+0x64]
  43ee96:	pop    edi
  43ee97:	ins    DWORD PTR es:[edi],dx
  43ee98:	outs   dx,DWORD PTR ds:[esi]
  43ee99:	outs   dx,BYTE PTR ds:[esi]
  43ee9a:	je     0x43ef04
  43ee9c:	inc    eax
  43ee9d:	addr16 jb 0x43ef05
  43eea0:	outs   dx,DWORD PTR ds:[si]
  43eea2:	jb     0x43ef0d
  43eea4:	popa   
  43eea5:	outs   dx,BYTE PTR ds:[esi]
  43eea6:	inc    eax
  43eea7:	bound  ebp,QWORD PTR [edi+0x6f]
  43eeaa:	jae    0x43ef20
  43eeac:	inc    eax
  43eead:	inc    eax
  43eeae:	inc    eax
  43eeaf:	gs js  0x43ef15
  43eeb2:	gs jo  0x43ef29
  43eeb5:	imul   ebp,DWORD PTR [edi+0x6e],0x7465645f
  43eebc:	popa   
  43eebd:	imul   ebp,DWORD PTR [eax+eax*2+0x62],0x74736f6f
  43eec5:	inc    eax
  43eec6:	inc    eax
  43eec7:	add    BYTE PTR [eax],ah
  43eec9:	add    eax,0x43
  43eece:	add    BYTE PTR [eax],al
  43eed0:	cs aas 
  43eed2:	inc    ecx
  43eed3:	push   ebp
  43eed4:	bound  esp,QWORD PTR [ecx+0x64]
  43eed7:	pop    edi
  43eed8:	ins    DWORD PTR es:[edi],dx
  43eed9:	outs   dx,DWORD PTR ds:[esi]
  43eeda:	outs   dx,BYTE PTR ds:[esi]
  43eedb:	je     0x43ef45
  43eedd:	inc    eax
  43eede:	addr16 jb 0x43ef46
  43eee1:	outs   dx,DWORD PTR ds:[si]
  43eee3:	jb     0x43ef4e
  43eee5:	popa   
  43eee6:	outs   dx,BYTE PTR ds:[esi]
  43eee7:	inc    eax
  43eee8:	bound  ebp,QWORD PTR [edi+0x6f]
  43eeeb:	jae    0x43ef61
  43eeed:	inc    eax
  43eeee:	inc    eax
  43eeef:	add    BYTE PTR [eax],ah
  43eef1:	add    eax,0x43
  43eef6:	add    BYTE PTR [eax],al
  43eef8:	cs aas 
  43eefa:	inc    ecx
  43eefb:	push   esi
  43eefc:	aas    
  43eefd:	and    al,0x62
  43eeff:	imul   ebp,DWORD PTR [esi+0x64],0x5840745f
  43ef06:	push   esi
  43ef07:	aas    
  43ef08:	and    al,0x6d
  43ef0a:	data16 xor BYTE PTR [eax+0x58],al
  43ef0e:	push   esi
  43ef0f:	inc    ebx
  43ef10:	pop    eax
  43ef11:	dec    ebp
  43ef12:	dec    esp
  43ef13:	inc    esi
  43ef14:	outs   dx,DWORD PTR ds:[esi]
  43ef15:	jb     0x43ef84
  43ef17:	inc    eax
  43ef18:	push   ebp
  43ef19:	dec    ecx
  43ef1a:	inc    eax
  43ef1b:	inc    eax
  43ef1c:	inc    eax
  43ef1d:	pop    edi
  43ef1e:	ins    DWORD PTR es:[edi],dx
  43ef1f:	imul   ax,WORD PTR [eax+0x62],0x6f6f
  43ef25:	jae    0x43ef9b
  43ef27:	inc    eax
  43ef28:	inc    eax
  43ef29:	push   esi
  43ef2a:	aas    
  43ef2b:	and    al,0x6c
  43ef2d:	imul   esi,DWORD PTR [ebx+0x74],0x3f564031
  43ef34:	and    al,0x76
  43ef36:	popa   
  43ef37:	ins    BYTE PTR es:[edi],dx
  43ef38:	jne    0x43ef9f
  43ef3a:	inc    eax
  43ef3b:	push   eax
  43ef3c:	inc    ecx
  43ef3d:	push   esi
  43ef3e:	inc    ebx
  43ef3f:	pop    eax
  43ef40:	dec    ebp
  43ef41:	dec    esp
  43ef42:	inc    esi
  43ef43:	outs   dx,DWORD PTR ds:[esi]
  43ef44:	jb     0x43efb3
  43ef46:	inc    eax
  43ef47:	push   ebp
  43ef48:	dec    ecx
  43ef49:	inc    eax
  43ef4a:	inc    eax
  43ef4b:	inc    eax
  43ef4c:	pop    edi
  43ef4d:	bound  ebp,QWORD PTR [ecx+0x40]
  43ef50:	bound  ebp,QWORD PTR [edi+0x6f]
  43ef53:	jae    0x43efc9
  43ef55:	inc    eax
  43ef56:	inc    eax
  43ef57:	inc    eax
  43ef58:	pop    edi
  43ef59:	bound  ebp,QWORD PTR [ecx+0x40]
  43ef5c:	xor    eax,DWORD PTR [eax+0x40]
  43ef5f:	pop    edi
  43ef60:	bound  ebp,QWORD PTR [ecx+0x40]
  43ef63:	bound  ebp,QWORD PTR [edi+0x6f]
  43ef66:	jae    0x43efdc
  43ef68:	inc    eax
  43ef69:	inc    eax
  43ef6a:	add    BYTE PTR [eax],al
  43ef6c:	add    BYTE PTR [eax],al
  43ef6e:	add    BYTE PTR [eax],al
  43ef70:	and    BYTE PTR ds:0x43,al
  43ef76:	add    BYTE PTR [eax],al
  43ef78:	cs aas 
  43ef7a:	inc    ecx
  43ef7b:	push   esi
  43ef7c:	aas    
  43ef7d:	and    al,0x62
  43ef7f:	imul   ebp,DWORD PTR [esi+0x64],0x5840745f
  43ef86:	push   esi
  43ef87:	aas    
  43ef88:	and    al,0x6d
  43ef8a:	data16 xor al,BYTE PTR [eax+0x58]
  43ef8e:	push   esi
  43ef8f:	inc    ebx
  43ef90:	pop    eax
  43ef91:	dec    ebp
  43ef92:	dec    esp
  43ef93:	inc    esi
  43ef94:	outs   dx,DWORD PTR ds:[esi]
  43ef95:	jb     0x43f004
  43ef97:	inc    eax
  43ef98:	push   ebp
  43ef99:	dec    ecx
  43ef9a:	inc    eax
  43ef9b:	inc    eax
  43ef9c:	push   eax
  43ef9d:	inc    ecx
  43ef9e:	push   esi
  43ef9f:	dec    ecx
  43efa0:	push   ebp
  43efa1:	dec    ecx
  43efa2:	dec    edi
  43efa3:	bound  ebp,QWORD PTR [edx+0x65]
  43efa6:	arpl   WORD PTR [eax+eax*2+0x40],si
  43efaa:	push   eax
  43efab:	inc    edx
  43efac:	push   ebp
  43efad:	je     0x43f010
  43efaf:	addr16 push edx
  43efb1:	inc    ebp
  43efb2:	inc    ebx
  43efb3:	push   esp
  43efb4:	inc    eax
  43efb5:	inc    eax
  43efb6:	inc    eax
  43efb7:	pop    edi
  43efb8:	ins    DWORD PTR es:[edi],dx
  43efb9:	imul   ax,WORD PTR [eax+0x62],0x6f6f
  43efbf:	jae    0x43f035
  43efc1:	inc    eax
  43efc2:	inc    eax
  43efc3:	push   esi
  43efc4:	aas    
  43efc5:	and    al,0x6c
  43efc7:	imul   esi,DWORD PTR [ebx+0x74],0x3f564033
  43efce:	and    al,0x76
  43efd0:	popa   
  43efd1:	ins    BYTE PTR es:[edi],dx
  43efd2:	jne    0x43f039
  43efd4:	inc    eax
  43efd5:	push   eax
  43efd6:	inc    ecx
  43efd7:	push   esi
  43efd8:	inc    ebx
  43efd9:	pop    eax
  43efda:	dec    ebp
  43efdb:	dec    esp
  43efdc:	inc    esi
  43efdd:	outs   dx,DWORD PTR ds:[esi]
  43efde:	jb     0x43f04d
  43efe0:	inc    eax
  43efe1:	push   ebp
  43efe2:	dec    ecx
  43efe3:	inc    eax
  43efe4:	inc    eax
  43efe5:	inc    eax
  43efe6:	pop    edi
  43efe7:	bound  ebp,QWORD PTR [ecx+0x40]
  43efea:	bound  ebp,QWORD PTR [edi+0x6f]
  43efed:	jae    0x43f063
  43efef:	inc    eax
  43eff0:	inc    eax
  43eff1:	push   ebp
  43eff2:	aas    
  43eff3:	and    al,0x61
  43eff5:	jb     0x43f05e
  43eff7:	inc    eax
  43eff8:	and    al,0x30
  43effa:	xor    BYTE PTR [eax+0x33],al
  43effd:	inc    eax
  43effe:	push   ebp
  43efff:	aas    
  43f000:	and    al,0x61
  43f002:	jb     0x43f06b
  43f004:	inc    eax
  43f005:	and    al,0x30
  43f007:	xor    DWORD PTR [eax+0x33],eax
  43f00a:	inc    eax
  43f00b:	inc    eax
  43f00c:	pop    edi
  43f00d:	bound  ebp,QWORD PTR [ecx+0x40]
  43f010:	xor    eax,DWORD PTR [eax+0x40]
  43f013:	pop    edi
  43f014:	bound  ebp,QWORD PTR [ecx+0x40]
  43f017:	bound  ebp,QWORD PTR [edi+0x6f]
  43f01a:	jae    0x43f090
  43f01c:	inc    eax
  43f01d:	inc    eax
  43f01e:	add    BYTE PTR [eax],al
  43f020:	and    BYTE PTR ds:0x43,al
  43f026:	add    BYTE PTR [eax],al
  43f028:	cs aas 
  43f02a:	inc    ecx
  43f02b:	push   esi
  43f02c:	aas    
  43f02d:	and    al,0x73
  43f02f:	jo     0x43f090
  43f031:	arpl   WORD PTR [edi+0x75],bp
  43f034:	outs   dx,BYTE PTR ds:[esi]
  43f035:	je     0x43f09c
  43f037:	fs pop edi
  43f039:	imul   ebp,DWORD PTR [ebp+0x70],0x40705f6c
  43f040:	push   esi
  43f041:	push   ebp
  43f042:	jo     0x43f0a8
  43f044:	popa   
  43f045:	je     0x43f0ac
  43f047:	pop    eax
  43f048:	ins    DWORD PTR es:[edi],dx
  43f049:	ins    BYTE PTR es:[edi],dx
  43f04a:	inc    eax
  43f04b:	inc    ebx
  43f04c:	outs   dx,DWORD PTR ds:[esi]
  43f04d:	outs   dx,BYTE PTR ds:[esi]
  43f04e:	imul   sp,WORD PTR [edi+0x4e],0x4053
  43f054:	inc    eax
  43f055:	inc    eax
  43f056:	fs gs je 0x43f0bb
  43f05a:	imul   ebp,DWORD PTR [eax+eax*2+0x62],0x74736f6f
  43f062:	inc    eax
  43f063:	inc    eax
  43f064:	add    BYTE PTR [eax],al
  43f066:	add    BYTE PTR [eax],al
  43f068:	and    BYTE PTR ds:0x43,al
  43f06e:	add    BYTE PTR [eax],al
  43f070:	cs aas 
  43f072:	inc    ecx
  43f073:	push   esi
  43f074:	aas    
  43f075:	and    al,0x73
  43f077:	jo     0x43f0d8
  43f079:	arpl   WORD PTR [edi+0x75],bp
  43f07c:	outs   dx,BYTE PTR ds:[esi]
  43f07d:	je     0x43f0e4
  43f07f:	fs pop edi
  43f081:	imul   ebp,DWORD PTR [ebp+0x70],0x40705f6c
  43f088:	push   ebp
  43f089:	jb     0x43f0f0
  43f08b:	arpl   WORD PTR [ebp+0x72],si
  43f08e:	pop    edi
  43f08f:	imul   esi,DWORD PTR fs:[edx+0x5f],0x5f727469
  43f097:	imul   ebp,DWORD PTR [ebp+0x70],0x74656440
  43f09e:	popa   
  43f09f:	imul   ebp,DWORD PTR [eax+eax*2+0x66],0x73656c69
  43f0a7:	jns    0x43f11c
  43f0a9:	je     0x43f110
  43f0ab:	ins    DWORD PTR es:[edi],dx
  43f0ac:	xor    eax,DWORD PTR [eax+0x62]
  43f0af:	outs   dx,DWORD PTR ds:[esi]
  43f0b0:	outs   dx,DWORD PTR ds:[esi]
  43f0b1:	jae    0x43f127
  43f0b3:	inc    eax
  43f0b4:	inc    eax
  43f0b5:	inc    eax
  43f0b6:	fs gs je 0x43f11b
  43f0ba:	imul   ebp,DWORD PTR [eax+eax*2+0x62],0x74736f6f
  43f0c2:	inc    eax
  43f0c3:	inc    eax
  43f0c4:	add    BYTE PTR [eax],al
  43f0c6:	add    BYTE PTR [eax],al
  43f0c8:	and    BYTE PTR ds:0x43,al
  43f0ce:	add    BYTE PTR [eax],al
  43f0d0:	cs aas 
  43f0d2:	inc    ecx
  43f0d3:	push   esi
  43f0d4:	jae    0x43f146
  43f0d6:	pop    edi
  43f0d7:	arpl   WORD PTR [edi+0x75],bp
  43f0da:	outs   dx,BYTE PTR ds:[esi]
  43f0db:	je     0x43f142
  43f0dd:	fs pop edi
  43f0df:	bound  esp,QWORD PTR [ecx+0x73]
  43f0e2:	gs inc eax
  43f0e4:	fs gs je 0x43f149
  43f0e8:	imul   ebp,DWORD PTR [eax+eax*2+0x62],0x74736f6f
  43f0f0:	inc    eax
  43f0f1:	inc    eax
  43f0f2:	add    BYTE PTR [eax],al
  43f0f4:	add    BYTE PTR [eax],al
  43f0f6:	add    BYTE PTR [eax],al
  43f0f8:	and    BYTE PTR ds:0x43,al
  43f0fe:	add    BYTE PTR [eax],al
  43f100:	cs aas 
  43f102:	inc    ecx
  43f103:	push   esi
  43f104:	aas    
  43f105:	and    al,0x73
  43f107:	jo     0x43f168
  43f109:	arpl   WORD PTR [edi+0x75],bp
  43f10c:	outs   dx,BYTE PTR ds:[esi]
  43f10d:	je     0x43f174
  43f10f:	fs pop edi
  43f111:	imul   ebp,DWORD PTR [ebp+0x70],0x40705f6c
  43f118:	push   ebp
  43f119:	imul   esi,DWORD PTR fs:[edx+0x5f],0x5f727469
  43f121:	imul   ebp,DWORD PTR [ebp+0x70],0x74656440
  43f128:	popa   
  43f129:	imul   ebp,DWORD PTR [eax+eax*2+0x66],0x73656c69
  43f131:	jns    0x43f1a6
  43f133:	je     0x43f19a
  43f135:	ins    DWORD PTR es:[edi],dx
  43f136:	xor    eax,DWORD PTR [eax+0x62]
  43f139:	outs   dx,DWORD PTR ds:[esi]
  43f13a:	outs   dx,DWORD PTR ds:[esi]
  43f13b:	jae    0x43f1b1
  43f13d:	inc    eax
  43f13e:	inc    eax
  43f13f:	inc    eax
  43f140:	fs gs je 0x43f1a5
  43f144:	imul   ebp,DWORD PTR [eax+eax*2+0x62],0x74736f6f
  43f14c:	inc    eax
  43f14d:	inc    eax
  43f14e:	add    BYTE PTR [eax],al
  43f150:	and    BYTE PTR ds:0x43,al
  43f156:	add    BYTE PTR [eax],al
  43f158:	cs aas 
  43f15a:	inc    ecx
  43f15b:	push   esi
  43f15c:	inc    ebx
  43f15d:	push   ebp
  43f15e:	jo     0x43f1c4
  43f160:	popa   
  43f161:	je     0x43f1c8
  43f163:	inc    ebp
  43f164:	js     0x43f1c9
  43f166:	gs jo  0x43f1dd
  43f169:	imul   ebp,DWORD PTR [edi+0x6e],0x70554340
  43f170:	fs popa 
  43f172:	je     0x43f1d9
  43f174:	dec    ebp
  43f175:	popa   
  43f176:	outs   dx,BYTE PTR ds:[esi]
  43f177:	popa   
  43f178:	addr16 gs jb 0x43f1bc
  43f17c:	dec    ebp
  43f17d:	popa   
  43f17e:	outs   dx,BYTE PTR ds:[esi]
  43f17f:	popa   
  43f180:	addr16 gs jb 0x43f1d2
  43f184:	push   ebx
  43f185:	inc    eax
  43f186:	inc    eax
  43f187:	add    BYTE PTR [eax],ah
  43f189:	add    eax,0x43
  43f18e:	add    BYTE PTR [eax],al
  43f190:	cs aas 
  43f192:	inc    ecx
  43f193:	push   esi
  43f194:	push   ebp
  43f195:	jo     0x43f1fb
  43f197:	popa   
  43f198:	je     0x43f1ff
  43f19a:	pop    eax
  43f19b:	ins    DWORD PTR es:[edi],dx
  43f19c:	ins    BYTE PTR es:[edi],dx
  43f19d:	inc    eax
  43f19e:	inc    ebx
  43f19f:	outs   dx,DWORD PTR ds:[esi]
  43f1a0:	outs   dx,BYTE PTR ds:[esi]
  43f1a1:	imul   sp,WORD PTR [edi+0x4e],0x4053
  43f1a7:	inc    eax
  43f1a8:	add    BYTE PTR [eax],al
  43f1aa:	add    BYTE PTR [eax],al
  43f1ac:	and    BYTE PTR ds:0x43,al
  43f1b2:	add    BYTE PTR [eax],al
  43f1b4:	cs aas 
  43f1b6:	inc    ecx
  43f1b7:	push   esi
  43f1b8:	push   ebp
  43f1b9:	jo     0x43f21f
  43f1bb:	popa   
  43f1bc:	je     0x43f223
  43f1be:	dec    ecx
  43f1bf:	je     0x43f226
  43f1c1:	ins    DWORD PTR es:[edi],dx
  43f1c2:	dec    esp
  43f1c3:	imul   esi,DWORD PTR [ebx+0x74],0x406c6d58
  43f1ca:	inc    ebx
  43f1cb:	outs   dx,DWORD PTR ds:[esi]
  43f1cc:	outs   dx,BYTE PTR ds:[esi]
  43f1cd:	imul   sp,WORD PTR [edi+0x4e],0x4053
  43f1d3:	inc    eax
  43f1d4:	add    BYTE PTR [eax],al
  43f1d6:	add    BYTE PTR [eax],al
  43f1d8:	and    BYTE PTR ds:0x43,al
  43f1de:	add    BYTE PTR [eax],al
  43f1e0:	cs aas 
  43f1e2:	inc    ecx
  43f1e3:	push   esi
  43f1e4:	push   ebp
  43f1e5:	jo     0x43f24b
  43f1e7:	popa   
  43f1e8:	je     0x43f24f
  43f1ea:	dec    ecx
  43f1eb:	je     0x43f252
  43f1ed:	ins    DWORD PTR es:[edi],dx
  43f1ee:	pop    eax
  43f1ef:	ins    DWORD PTR es:[edi],dx
  43f1f0:	ins    BYTE PTR es:[edi],dx
  43f1f1:	inc    eax
  43f1f2:	inc    ebx
  43f1f3:	outs   dx,DWORD PTR ds:[esi]
  43f1f4:	outs   dx,BYTE PTR ds:[esi]
  43f1f5:	imul   sp,WORD PTR [edi+0x4e],0x4053
  43f1fb:	inc    eax
  43f1fc:	add    BYTE PTR [eax],al
  43f1fe:	add    BYTE PTR [eax],al
  43f200:	and    BYTE PTR ds:0x43,al
  43f206:	add    BYTE PTR [eax],al
  43f208:	cs aas 
  43f20a:	inc    ecx
  43f20b:	push   esi
  43f20c:	inc    ebx
  43f20d:	push   esi
  43f20e:	gs jb  0x43f284
  43f211:	imul   ebp,DWORD PTR [edi+0x6e],0x6f666e49
  43f218:	inc    ebx
  43f219:	outs   dx,DWORD PTR ds:[esi]
  43f21a:	outs   dx,BYTE PTR ds:[esi]
  43f21b:	imul   sp,WORD PTR [edi+0x40],0x6f43
  43f221:	outs   dx,BYTE PTR ds:[esi]
  43f222:	imul   sp,WORD PTR [edi+0x4e],0x4053
  43f228:	inc    eax
  43f229:	add    BYTE PTR [eax],al
  43f22b:	add    BYTE PTR [eax],ah
  43f22d:	add    eax,0x43
  43f232:	add    BYTE PTR [eax],al
  43f234:	cs aas 
  43f236:	inc    ecx
  43f237:	push   esi
  43f238:	inc    ebx
  43f239:	push   edx
  43f23a:	jne    0x43f2aa
  43f23c:	je     0x43f2a7
  43f23e:	ins    DWORD PTR es:[edi],dx
  43f23f:	gs inc ebp
  43f241:	jb     0x43f2b5
  43f243:	outs   dx,DWORD PTR ds:[esi]
  43f244:	jb     0x43f286
  43f246:	inc    eax
  43f247:	add    BYTE PTR [eax],ah
  43f249:	add    eax,0x43
  43f24e:	add    BYTE PTR [eax],al
  43f250:	cs push eax
  43f252:	inc    ecx
  43f253:	push   esi
  43f254:	inc    ebx
  43f255:	push   ebp
  43f256:	jo     0x43f2bc
  43f258:	popa   
  43f259:	je     0x43f2c0
  43f25b:	inc    ebp
  43f25c:	js     0x43f2c1
  43f25e:	gs jo  0x43f2d5
  43f261:	imul   ebp,DWORD PTR [edi+0x6e],0x70554340
  43f268:	fs popa 
  43f26a:	je     0x43f2d1
  43f26c:	dec    ebp
  43f26d:	popa   
  43f26e:	outs   dx,BYTE PTR ds:[esi]
  43f26f:	popa   
  43f270:	addr16 gs jb 0x43f2b4
  43f274:	dec    ebp
  43f275:	popa   
  43f276:	outs   dx,BYTE PTR ds:[esi]
  43f277:	popa   
  43f278:	addr16 gs jb 0x43f2ca
  43f27c:	push   ebx
  43f27d:	inc    eax
  43f27e:	inc    eax
  43f27f:	add    BYTE PTR [eax],ah
  43f281:	add    eax,0x43
  43f286:	add    BYTE PTR [eax],al
  43f288:	cs push eax
  43f28a:	inc    ecx
  43f28b:	push   esi
  43f28c:	gs js  0x43f2f2
  43f28f:	gs jo  0x43f306
  43f292:	imul   ebp,DWORD PTR [edi+0x6e],0x64747340
  43f299:	inc    eax
  43f29a:	inc    eax
  43f29b:	add    BYTE PTR [eax],ah
  43f29d:	add    eax,0x43
  43f2a2:	add    BYTE PTR [eax],al
  43f2a4:	cs push eax
  43f2a6:	inc    ecx
  43f2a7:	pop    eax
  43f2a8:	add    BYTE PTR [eax],al
  43f2aa:	add    BYTE PTR [eax],al
  43f2ac:	and    BYTE PTR ds:0x43,al
  43f2b2:	add    BYTE PTR [eax],al
  43f2b4:	cs aas 
  43f2b6:	inc    ecx
  43f2b7:	push   esi
  43f2b8:	jo     0x43f31b
  43f2ba:	jb     0x43f32f
  43f2bc:	gs pop edi
  43f2be:	gs jb  0x43f333
  43f2c1:	outs   dx,DWORD PTR ds:[esi]
  43f2c2:	jb     0x43f304
  43f2c4:	jb     0x43f327
  43f2c6:	jo     0x43f331
  43f2c8:	fs js  0x43f338
  43f2cb:	ins    BYTE PTR es:[edi],dx
  43f2cc:	inc    eax
  43f2cd:	inc    eax
  43f2ce:	add    BYTE PTR [eax],al
  43f2d0:	and    BYTE PTR ds:0x43,al
  43f2d6:	add    BYTE PTR [eax],al
  43f2d8:	cs dec ecx
  43f2da:	add    BYTE PTR [eax],al
  43f2dc:	add    BYTE PTR [eax],al
  43f2de:	add    BYTE PTR [eax],al
  43f2e0:	and    BYTE PTR ds:0x43,al
  43f2e6:	add    BYTE PTR [eax],al
  43f2e8:	cs aas 
  43f2ea:	inc    ecx
  43f2eb:	push   esi
  43f2ec:	aas    
  43f2ed:	and    al,0x62
  43f2ef:	imul   ebp,DWORD PTR [esi+0x64],0x5840745f
  43f2f6:	push   esi
  43f2f7:	aas    
  43f2f8:	and    al,0x6d
  43f2fa:	data16 xor BYTE PTR [eax+0x58],al
  43f2fe:	push   esi
  43f2ff:	inc    ebx
  43f300:	push   ebp
  43f301:	dec    ecx
  43f302:	dec    ebp
  43f303:	popa   
  43f304:	imul   ebp,DWORD PTR [esi+0x46],0x406d726f
  43f30b:	push   ebp
  43f30c:	dec    ecx
  43f30d:	inc    eax
  43f30e:	inc    eax
  43f30f:	inc    eax
  43f310:	pop    edi
  43f311:	ins    DWORD PTR es:[edi],dx
  43f312:	imul   ax,WORD PTR [eax+0x62],0x6f6f
  43f318:	jae    0x43f38e
  43f31a:	inc    eax
  43f31b:	inc    eax
  43f31c:	push   esi
  43f31d:	aas    
  43f31e:	and    al,0x6c
  43f320:	imul   esi,DWORD PTR [ebx+0x74],0x3f564031
  43f327:	and    al,0x76
  43f329:	popa   
  43f32a:	ins    BYTE PTR es:[edi],dx
  43f32b:	jne    0x43f392
  43f32d:	inc    eax
  43f32e:	push   eax
  43f32f:	inc    ecx
  43f330:	push   esi
  43f331:	inc    ebx
  43f332:	push   ebp
  43f333:	dec    ecx
  43f334:	dec    ebp
  43f335:	popa   
  43f336:	imul   ebp,DWORD PTR [esi+0x46],0x406d726f
  43f33d:	push   ebp
  43f33e:	dec    ecx
  43f33f:	inc    eax
  43f340:	inc    eax
  43f341:	inc    eax
  43f342:	pop    edi
  43f343:	bound  ebp,QWORD PTR [ecx+0x40]
  43f346:	bound  ebp,QWORD PTR [edi+0x6f]
  43f349:	jae    0x43f3bf
  43f34b:	inc    eax
  43f34c:	inc    eax
  43f34d:	inc    eax
  43f34e:	pop    edi
  43f34f:	bound  ebp,QWORD PTR [ecx+0x40]
  43f352:	xor    eax,DWORD PTR [eax+0x40]
  43f355:	pop    edi
  43f356:	bound  ebp,QWORD PTR [ecx+0x40]
  43f359:	bound  ebp,QWORD PTR [edi+0x6f]
  43f35c:	jae    0x43f3d2
  43f35e:	inc    eax
  43f35f:	inc    eax
	...
  43f368:	and    BYTE PTR ds:0x43,al
  43f36e:	add    BYTE PTR [eax],al
  43f370:	cs aas 
  43f372:	inc    ecx
  43f373:	push   esi
  43f374:	aas    
  43f375:	and    al,0x62
  43f377:	imul   ebp,DWORD PTR [esi+0x64],0x5840745f
  43f37e:	push   esi
  43f37f:	aas    
  43f380:	and    al,0x6d
  43f382:	xor    ax,WORD PTR [eax+0x58]
  43f386:	push   esi
  43f387:	inc    ebx
  43f388:	push   ebp
  43f389:	dec    ecx
  43f38a:	dec    ebp
  43f38b:	popa   
  43f38c:	imul   ebp,DWORD PTR [esi+0x46],0x406d726f
  43f393:	push   ebp
  43f394:	dec    ecx
  43f395:	inc    eax
  43f396:	inc    eax
  43f397:	inc    ecx
  43f398:	inc    edx
  43f399:	push   esi
  43f39a:	aas    
  43f39b:	and    al,0x62
  43f39d:	popa   
  43f39e:	jae    0x43f409
  43f3a0:	arpl   WORD PTR [edi+0x73],bx
  43f3a3:	je     0x43f417
  43f3a5:	imul   ebp,DWORD PTR [esi+0x67],0x55575f40
  43f3ac:	aas    
  43f3ad:	and    al,0x63
  43f3af:	push   0x745f7261
  43f3b4:	jb     0x43f417
  43f3b6:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x7340575f
  43f3be:	je     0x43f424
  43f3c0:	inc    eax
  43f3c1:	inc    eax
  43f3c2:	push   esi
  43f3c3:	aas    
  43f3c4:	and    al,0x61
  43f3c6:	ins    BYTE PTR es:[edi],dx
  43f3c7:	ins    BYTE PTR es:[edi],dx
  43f3c8:	outs   dx,DWORD PTR ds:[esi]
  43f3c9:	arpl   WORD PTR [ecx+0x74],sp
  43f3cc:	outs   dx,DWORD PTR ds:[esi]
  43f3cd:	jb     0x43f40f
  43f3cf:	pop    edi
  43f3d0:	push   edi
  43f3d1:	inc    eax
  43f3d2:	xor    al,BYTE PTR [eax+0x40]
  43f3d5:	jae    0x43f44b
  43f3d7:	fs inc eax
  43f3d9:	inc    eax
  43f3da:	inc    ecx
  43f3db:	inc    edx
  43f3dc:	push   esi
  43f3dd:	xor    esi,DWORD PTR [eax+eax*2]
  43f3e0:	dec    eax
  43f3e1:	inc    eax
  43f3e2:	pop    edi
  43f3e3:	ins    DWORD PTR es:[edi],dx
  43f3e4:	imul   ax,WORD PTR [eax+0x62],0x6f6f
  43f3ea:	jae    0x43f460
  43f3ec:	inc    eax
  43f3ed:	inc    eax
  43f3ee:	push   esi
  43f3ef:	aas    
  43f3f0:	and    al,0x6c
  43f3f2:	imul   esi,DWORD PTR [ebx+0x74],0x3f564034
  43f3f9:	and    al,0x76
  43f3fb:	popa   
  43f3fc:	ins    BYTE PTR es:[edi],dx
  43f3fd:	jne    0x43f464
  43f3ff:	inc    eax
  43f400:	push   eax
  43f401:	inc    ecx
  43f402:	push   esi
  43f403:	inc    ebx
  43f404:	push   ebp
  43f405:	dec    ecx
  43f406:	dec    ebp
  43f407:	popa   
  43f408:	imul   ebp,DWORD PTR [esi+0x46],0x406d726f
  43f40f:	push   ebp
  43f410:	dec    ecx
  43f411:	inc    eax
  43f412:	inc    eax
  43f413:	inc    eax
  43f414:	pop    edi
  43f415:	bound  ebp,QWORD PTR [ecx+0x40]
  43f418:	bound  ebp,QWORD PTR [edi+0x6f]
  43f41b:	jae    0x43f491
  43f41d:	inc    eax
  43f41e:	inc    eax
  43f41f:	push   esi
  43f420:	aas    
  43f421:	and    al,0x76
  43f423:	popa   
  43f424:	ins    BYTE PTR es:[edi],dx
  43f425:	jne    0x43f48c
  43f427:	inc    eax
  43f428:	push   esi
  43f429:	aas    
  43f42a:	and    al,0x62
  43f42c:	popa   
  43f42d:	jae    0x43f498
  43f42f:	arpl   WORD PTR [edi+0x73],bx
  43f432:	je     0x43f4a6
  43f434:	imul   ebp,DWORD PTR [esi+0x67],0x55575f40
  43f43b:	aas    
  43f43c:	and    al,0x63
  43f43e:	push   0x745f7261
  43f443:	jb     0x43f4a6
  43f445:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x7340575f
  43f44d:	je     0x43f4b3
  43f44f:	inc    eax
  43f450:	inc    eax
  43f451:	push   esi
  43f452:	aas    
  43f453:	and    al,0x61
  43f455:	ins    BYTE PTR es:[edi],dx
  43f456:	ins    BYTE PTR es:[edi],dx
  43f457:	outs   dx,DWORD PTR ds:[esi]
  43f458:	arpl   WORD PTR [ecx+0x74],sp
  43f45b:	outs   dx,DWORD PTR ds:[esi]
  43f45c:	jb     0x43f49e
  43f45e:	pop    edi
  43f45f:	push   edi
  43f460:	inc    eax
  43f461:	xor    al,BYTE PTR [eax+0x40]
  43f464:	jae    0x43f4da
  43f466:	fs inc eax
  43f468:	inc    eax
  43f469:	inc    eax
  43f46a:	xor    dh,BYTE PTR [ebx]
  43f46c:	inc    eax
  43f46d:	push   esi
  43f46e:	xor    al,0x32
  43f470:	xor    eax,DWORD PTR [eax+0x56]
  43f473:	aas    
  43f474:	and    al,0x76
  43f476:	popa   
  43f477:	ins    BYTE PTR es:[edi],dx
  43f478:	jne    0x43f4df
  43f47a:	inc    eax
  43f47b:	dec    ecx
  43f47c:	inc    eax
  43f47d:	xor    dh,BYTE PTR [ebx]
  43f47f:	inc    eax
  43f480:	inc    eax
  43f481:	pop    edi
  43f482:	bound  ebp,QWORD PTR [ecx+0x40]
  43f485:	xor    eax,DWORD PTR [eax+0x40]
  43f488:	pop    edi
  43f489:	bound  ebp,QWORD PTR [ecx+0x40]
  43f48c:	bound  ebp,QWORD PTR [edi+0x6f]
  43f48f:	jae    0x43f505
  43f491:	inc    eax
  43f492:	inc    eax
  43f493:	add    BYTE PTR [eax],al
  43f495:	add    BYTE PTR [eax],al
  43f497:	add    BYTE PTR [eax],ah
  43f499:	add    eax,0x43
  43f49e:	add    BYTE PTR [eax],al
  43f4a0:	cs aas 
  43f4a2:	inc    ecx
  43f4a3:	push   esi
  43f4a4:	aas    
  43f4a5:	and    al,0x62
  43f4a7:	imul   ebp,DWORD PTR [esi+0x64],0x5840745f
  43f4ae:	push   esi
  43f4af:	aas    
  43f4b0:	and    al,0x6d
  43f4b2:	xor    WORD PTR [eax+0x58],ax
  43f4b6:	push   esi
  43f4b7:	inc    ebx
  43f4b8:	push   ebp
  43f4b9:	dec    ecx
  43f4ba:	dec    ebp
  43f4bb:	popa   
  43f4bc:	imul   ebp,DWORD PTR [esi+0x46],0x406d726f
  43f4c3:	push   ebp
  43f4c4:	dec    ecx
  43f4c5:	inc    eax
  43f4c6:	inc    eax
  43f4c7:	inc    ecx
  43f4c8:	inc    edx
  43f4c9:	push   esi
  43f4ca:	aas    
  43f4cb:	and    al,0x62
  43f4cd:	popa   
  43f4ce:	jae    0x43f539
  43f4d0:	arpl   WORD PTR [edi+0x73],bx
  43f4d3:	je     0x43f547
  43f4d5:	imul   ebp,DWORD PTR [esi+0x67],0x55575f40
  43f4dc:	aas    
  43f4dd:	and    al,0x63
  43f4df:	push   0x745f7261
  43f4e4:	jb     0x43f547
  43f4e6:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x7340575f
  43f4ee:	je     0x43f554
  43f4f0:	inc    eax
  43f4f1:	inc    eax
  43f4f2:	push   esi
  43f4f3:	aas    
  43f4f4:	and    al,0x61
  43f4f6:	ins    BYTE PTR es:[edi],dx
  43f4f7:	ins    BYTE PTR es:[edi],dx
  43f4f8:	outs   dx,DWORD PTR ds:[esi]
  43f4f9:	arpl   WORD PTR [ecx+0x74],sp
  43f4fc:	outs   dx,DWORD PTR ds:[esi]
  43f4fd:	jb     0x43f53f
  43f4ff:	pop    edi
  43f500:	push   edi
  43f501:	inc    eax
  43f502:	xor    al,BYTE PTR [eax+0x40]
  43f505:	jae    0x43f57b
  43f507:	fs inc eax
  43f509:	inc    eax
  43f50a:	inc    eax
  43f50b:	pop    edi
  43f50c:	ins    DWORD PTR es:[edi],dx
  43f50d:	imul   ax,WORD PTR [eax+0x62],0x6f6f
  43f513:	jae    0x43f589
  43f515:	inc    eax
  43f516:	inc    eax
  43f517:	push   esi
  43f518:	aas    
  43f519:	and    al,0x6c
  43f51b:	imul   esi,DWORD PTR [ebx+0x74],0x3f564032
  43f522:	and    al,0x76
  43f524:	popa   
  43f525:	ins    BYTE PTR es:[edi],dx
  43f526:	jne    0x43f58d
  43f528:	inc    eax
  43f529:	push   eax
  43f52a:	inc    ecx
  43f52b:	push   esi
  43f52c:	inc    ebx
  43f52d:	push   ebp
  43f52e:	dec    ecx
  43f52f:	dec    ebp
  43f530:	popa   
  43f531:	imul   ebp,DWORD PTR [esi+0x46],0x406d726f
  43f538:	push   ebp
  43f539:	dec    ecx
  43f53a:	inc    eax
  43f53b:	inc    eax
  43f53c:	inc    eax
  43f53d:	pop    edi
  43f53e:	bound  ebp,QWORD PTR [ecx+0x40]
  43f541:	bound  ebp,QWORD PTR [edi+0x6f]
  43f544:	jae    0x43f5ba
  43f546:	inc    eax
  43f547:	inc    eax
  43f548:	push   esi
  43f549:	aas    
  43f54a:	and    al,0x76
  43f54c:	popa   
  43f54d:	ins    BYTE PTR es:[edi],dx
  43f54e:	jne    0x43f5b5
  43f550:	inc    eax
  43f551:	push   esi
  43f552:	aas    
  43f553:	and    al,0x62
  43f555:	popa   
  43f556:	jae    0x43f5c1
  43f558:	arpl   WORD PTR [edi+0x73],bx
  43f55b:	je     0x43f5cf
  43f55d:	imul   ebp,DWORD PTR [esi+0x67],0x55575f40
  43f564:	aas    
  43f565:	and    al,0x63
  43f567:	push   0x745f7261
  43f56c:	jb     0x43f5cf
  43f56e:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x7340575f
  43f576:	je     0x43f5dc
  43f578:	inc    eax
  43f579:	inc    eax
  43f57a:	push   esi
  43f57b:	aas    
  43f57c:	and    al,0x61
  43f57e:	ins    BYTE PTR es:[edi],dx
  43f57f:	ins    BYTE PTR es:[edi],dx
  43f580:	outs   dx,DWORD PTR ds:[esi]
  43f581:	arpl   WORD PTR [ecx+0x74],sp
  43f584:	outs   dx,DWORD PTR ds:[esi]
  43f585:	jb     0x43f5c7
  43f587:	pop    edi
  43f588:	push   edi
  43f589:	inc    eax
  43f58a:	xor    al,BYTE PTR [eax+0x40]
  43f58d:	jae    0x43f603
  43f58f:	fs inc eax
  43f591:	inc    eax
  43f592:	inc    eax
  43f593:	xor    dh,BYTE PTR [ebx]
  43f595:	inc    eax
  43f596:	inc    eax
  43f597:	pop    edi
  43f598:	bound  ebp,QWORD PTR [ecx+0x40]
  43f59b:	xor    eax,DWORD PTR [eax+0x40]
  43f59e:	pop    edi
  43f59f:	bound  ebp,QWORD PTR [ecx+0x40]
  43f5a2:	bound  ebp,QWORD PTR [edi+0x6f]
  43f5a5:	jae    0x43f61b
  43f5a7:	inc    eax
  43f5a8:	inc    eax
  43f5a9:	add    BYTE PTR [eax],al
  43f5ab:	add    BYTE PTR [eax],al
  43f5ad:	add    BYTE PTR [eax],al
  43f5af:	add    BYTE PTR [eax],ah
  43f5b1:	add    eax,0x43
  43f5b6:	add    BYTE PTR [eax],al
  43f5b8:	cs aas 
  43f5ba:	inc    ecx
  43f5bb:	push   esi
  43f5bc:	aas    
  43f5bd:	and    al,0x62
  43f5bf:	imul   ebp,DWORD PTR [esi+0x64],0x5840745f
  43f5c6:	push   esi
  43f5c7:	aas    
  43f5c8:	and    al,0x6d
  43f5ca:	data16 xor BYTE PTR [eax+0x58],al
  43f5ce:	push   esi
  43f5cf:	inc    ebx
  43f5d0:	push   ebp
  43f5d1:	jo     0x43f637
  43f5d3:	popa   
  43f5d4:	je     0x43f63b
  43f5d6:	dec    ebp
  43f5d7:	popa   
  43f5d8:	outs   dx,BYTE PTR ds:[esi]
  43f5d9:	popa   
  43f5da:	addr16 gs jb 0x43f61e
  43f5de:	dec    ebp
  43f5df:	popa   
  43f5e0:	outs   dx,BYTE PTR ds:[esi]
  43f5e1:	popa   
  43f5e2:	addr16 gs jb 0x43f634
  43f5e6:	push   ebx
  43f5e7:	inc    eax
  43f5e8:	inc    eax
  43f5e9:	inc    eax
  43f5ea:	pop    edi
  43f5eb:	ins    DWORD PTR es:[edi],dx
  43f5ec:	imul   ax,WORD PTR [eax+0x62],0x6f6f
  43f5f2:	jae    0x43f668
  43f5f4:	inc    eax
  43f5f5:	inc    eax
  43f5f6:	push   esi
  43f5f7:	aas    
  43f5f8:	and    al,0x6c
  43f5fa:	imul   esi,DWORD PTR [ebx+0x74],0x3f564031
  43f601:	and    al,0x76
  43f603:	popa   
  43f604:	ins    BYTE PTR es:[edi],dx
  43f605:	jne    0x43f66c
  43f607:	inc    eax
  43f608:	push   eax
  43f609:	inc    ecx
  43f60a:	push   esi
  43f60b:	inc    ebx
  43f60c:	push   ebp
  43f60d:	jo     0x43f673
  43f60f:	popa   
  43f610:	je     0x43f677
  43f612:	dec    ebp
  43f613:	popa   
  43f614:	outs   dx,BYTE PTR ds:[esi]
  43f615:	popa   
  43f616:	addr16 gs jb 0x43f65a
  43f61a:	dec    ebp
  43f61b:	popa   
  43f61c:	outs   dx,BYTE PTR ds:[esi]
  43f61d:	popa   
  43f61e:	addr16 gs jb 0x43f670
  43f622:	push   ebx
  43f623:	inc    eax
  43f624:	inc    eax
  43f625:	inc    eax
  43f626:	pop    edi
  43f627:	bound  ebp,QWORD PTR [ecx+0x40]
  43f62a:	bound  ebp,QWORD PTR [edi+0x6f]
  43f62d:	jae    0x43f6a3
  43f62f:	inc    eax
  43f630:	inc    eax
  43f631:	inc    eax
  43f632:	pop    edi
  43f633:	bound  ebp,QWORD PTR [ecx+0x40]
  43f636:	xor    eax,DWORD PTR [eax+0x40]
  43f639:	pop    edi
  43f63a:	bound  ebp,QWORD PTR [ecx+0x40]
  43f63d:	bound  ebp,QWORD PTR [edi+0x6f]
  43f640:	jae    0x43f6b6
  43f642:	inc    eax
  43f643:	inc    eax
  43f644:	add    BYTE PTR [eax],al
  43f646:	add    BYTE PTR [eax],al
  43f648:	and    BYTE PTR ds:0x43,al
  43f64e:	add    BYTE PTR [eax],al
  43f650:	cs aas 
  43f652:	inc    ecx
  43f653:	push   esi
  43f654:	aas    
  43f655:	and    al,0x62
  43f657:	imul   ebp,DWORD PTR [esi+0x64],0x5840745f
  43f65e:	push   esi
  43f65f:	aas    
  43f660:	and    al,0x6d
  43f662:	xor    WORD PTR [eax+0x58],ax
  43f666:	push   esi
  43f667:	inc    ebx
  43f668:	push   ebp
  43f669:	dec    ecx
  43f66a:	dec    ebp
  43f66b:	popa   
  43f66c:	imul   ebp,DWORD PTR [esi+0x46],0x406d726f
  43f673:	push   ebp
  43f674:	dec    ecx
  43f675:	inc    eax
  43f676:	inc    eax
  43f677:	dec    eax
  43f678:	inc    eax
  43f679:	pop    edi
  43f67a:	ins    DWORD PTR es:[edi],dx
  43f67b:	imul   ax,WORD PTR [eax+0x62],0x6f6f
  43f681:	jae    0x43f6f7
  43f683:	inc    eax
  43f684:	inc    eax
  43f685:	push   esi
  43f686:	aas    
  43f687:	and    al,0x6c
  43f689:	imul   esi,DWORD PTR [ebx+0x74],0x3f564032
  43f690:	and    al,0x76
  43f692:	popa   
  43f693:	ins    BYTE PTR es:[edi],dx
  43f694:	jne    0x43f6fb
  43f696:	inc    eax
  43f697:	push   eax
  43f698:	inc    ecx
  43f699:	push   esi
  43f69a:	inc    ebx
  43f69b:	push   ebp
  43f69c:	dec    ecx
  43f69d:	dec    ebp
  43f69e:	popa   
  43f69f:	imul   ebp,DWORD PTR [esi+0x46],0x406d726f
  43f6a6:	push   ebp
  43f6a7:	dec    ecx
  43f6a8:	inc    eax
  43f6a9:	inc    eax
  43f6aa:	inc    eax
  43f6ab:	pop    edi
  43f6ac:	bound  ebp,QWORD PTR [ecx+0x40]
  43f6af:	bound  ebp,QWORD PTR [edi+0x6f]
  43f6b2:	jae    0x43f728
  43f6b4:	inc    eax
  43f6b5:	inc    eax
  43f6b6:	push   esi
  43f6b7:	aas    
  43f6b8:	and    al,0x76
  43f6ba:	popa   
  43f6bb:	ins    BYTE PTR es:[edi],dx
  43f6bc:	jne    0x43f723
  43f6be:	inc    eax
  43f6bf:	dec    eax
  43f6c0:	inc    eax
  43f6c1:	xor    dh,BYTE PTR [ebx]
  43f6c3:	inc    eax
  43f6c4:	inc    eax
  43f6c5:	pop    edi
  43f6c6:	bound  ebp,QWORD PTR [ecx+0x40]
  43f6c9:	xor    eax,DWORD PTR [eax+0x40]
  43f6cc:	pop    edi
  43f6cd:	bound  ebp,QWORD PTR [ecx+0x40]
  43f6d0:	bound  ebp,QWORD PTR [edi+0x6f]
  43f6d3:	jae    0x43f749
  43f6d5:	inc    eax
  43f6d6:	inc    eax
  43f6d7:	add    BYTE PTR [eax],ah
  43f6d9:	add    eax,0x43
  43f6de:	add    BYTE PTR [eax],al
  43f6e0:	cs aas 
  43f6e2:	inc    ecx
  43f6e3:	push   esi
  43f6e4:	aas    
  43f6e5:	and    al,0x62
  43f6e7:	imul   ebp,DWORD PTR [esi+0x64],0x5840745f
  43f6ee:	push   esi
  43f6ef:	aas    
  43f6f0:	and    al,0x6d
  43f6f2:	data16 xor al,BYTE PTR [eax+0x58]
  43f6f6:	push   esi
  43f6f7:	inc    ebx
  43f6f8:	push   ebp
  43f6f9:	dec    ecx
  43f6fa:	dec    ebp
  43f6fb:	popa   
  43f6fc:	imul   ebp,DWORD PTR [esi+0x46],0x406d726f
  43f703:	push   ebp
  43f704:	dec    ecx
  43f705:	inc    eax
  43f706:	inc    eax
  43f707:	dec    eax
  43f708:	inc    ecx
  43f709:	inc    edx
  43f70a:	push   esi
  43f70b:	aas    
  43f70c:	and    al,0x62
  43f70e:	popa   
  43f70f:	jae    0x43f77a
  43f711:	arpl   WORD PTR [edi+0x73],bx
  43f714:	je     0x43f788
  43f716:	imul   ebp,DWORD PTR [esi+0x67],0x55575f40
  43f71d:	aas    
  43f71e:	and    al,0x63
  43f720:	push   0x745f7261
  43f725:	jb     0x43f788
  43f727:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x7340575f
  43f72f:	je     0x43f795
  43f731:	inc    eax
  43f732:	inc    eax
  43f733:	push   esi
  43f734:	aas    
  43f735:	and    al,0x61
  43f737:	ins    BYTE PTR es:[edi],dx
  43f738:	ins    BYTE PTR es:[edi],dx
  43f739:	outs   dx,DWORD PTR ds:[esi]
  43f73a:	arpl   WORD PTR [ecx+0x74],sp
  43f73d:	outs   dx,DWORD PTR ds:[esi]
  43f73e:	jb     0x43f780
  43f740:	pop    edi
  43f741:	push   edi
  43f742:	inc    eax
  43f743:	xor    al,BYTE PTR [eax+0x40]
  43f746:	jae    0x43f7bc
  43f748:	fs inc eax
  43f74a:	inc    eax
  43f74b:	inc    eax
  43f74c:	pop    edi
  43f74d:	ins    DWORD PTR es:[edi],dx
  43f74e:	imul   ax,WORD PTR [eax+0x62],0x6f6f
  43f754:	jae    0x43f7ca
  43f756:	inc    eax
  43f757:	inc    eax
  43f758:	push   esi
  43f759:	aas    
  43f75a:	and    al,0x6c
  43f75c:	imul   esi,DWORD PTR [ebx+0x74],0x3f564033
  43f763:	and    al,0x76
  43f765:	popa   
  43f766:	ins    BYTE PTR es:[edi],dx
  43f767:	jne    0x43f7ce
  43f769:	inc    eax
  43f76a:	push   eax
  43f76b:	inc    ecx
  43f76c:	push   esi
  43f76d:	inc    ebx
  43f76e:	push   ebp
  43f76f:	dec    ecx
  43f770:	dec    ebp
  43f771:	popa   
  43f772:	imul   ebp,DWORD PTR [esi+0x46],0x406d726f
  43f779:	push   ebp
  43f77a:	dec    ecx
  43f77b:	inc    eax
  43f77c:	inc    eax
  43f77d:	inc    eax
  43f77e:	pop    edi
  43f77f:	bound  ebp,QWORD PTR [ecx+0x40]
  43f782:	bound  ebp,QWORD PTR [edi+0x6f]
  43f785:	jae    0x43f7fb
  43f787:	inc    eax
  43f788:	inc    eax
  43f789:	push   esi
  43f78a:	aas    
  43f78b:	and    al,0x76
  43f78d:	popa   
  43f78e:	ins    BYTE PTR es:[edi],dx
  43f78f:	jne    0x43f7f6
  43f791:	inc    eax
  43f792:	dec    eax
  43f793:	inc    eax
  43f794:	xor    dh,BYTE PTR [ebx]
  43f796:	inc    eax
  43f797:	push   esi
  43f798:	aas    
  43f799:	and    al,0x76
  43f79b:	popa   
  43f79c:	ins    BYTE PTR es:[edi],dx
  43f79d:	jne    0x43f804
  43f79f:	inc    eax
  43f7a0:	push   esi
  43f7a1:	aas    
  43f7a2:	and    al,0x62
  43f7a4:	popa   
  43f7a5:	jae    0x43f810
  43f7a7:	arpl   WORD PTR [edi+0x73],bx
  43f7aa:	je     0x43f81e
  43f7ac:	imul   ebp,DWORD PTR [esi+0x67],0x55575f40
  43f7b3:	aas    
  43f7b4:	and    al,0x63
  43f7b6:	push   0x745f7261
  43f7bb:	jb     0x43f81e
  43f7bd:	imul   esi,DWORD PTR [ebx+esi*2+0x40],0x7340575f
  43f7c5:	je     0x43f82b
  43f7c7:	inc    eax
  43f7c8:	inc    eax
  43f7c9:	push   esi
  43f7ca:	aas    
  43f7cb:	and    al,0x61
  43f7cd:	ins    BYTE PTR es:[edi],dx
  43f7ce:	ins    BYTE PTR es:[edi],dx
  43f7cf:	outs   dx,DWORD PTR ds:[esi]
  43f7d0:	arpl   WORD PTR [ecx+0x74],sp
  43f7d3:	outs   dx,DWORD PTR ds:[esi]
  43f7d4:	jb     0x43f816
  43f7d6:	pop    edi
  43f7d7:	push   edi
  43f7d8:	inc    eax
  43f7d9:	xor    al,BYTE PTR [eax+0x40]
  43f7dc:	jae    0x43f852
  43f7de:	fs inc eax
  43f7e0:	inc    eax
  43f7e1:	inc    eax
  43f7e2:	xor    dh,BYTE PTR [ebx]
  43f7e4:	inc    eax
  43f7e5:	inc    eax
  43f7e6:	pop    edi
  43f7e7:	bound  ebp,QWORD PTR [ecx+0x40]
  43f7ea:	xor    eax,DWORD PTR [eax+0x40]
  43f7ed:	pop    edi
  43f7ee:	bound  ebp,QWORD PTR [ecx+0x40]
  43f7f1:	bound  ebp,QWORD PTR [edi+0x6f]
  43f7f4:	jae    0x43f86a
  43f7f6:	inc    eax
  43f7f7:	inc    eax
	...
  43f800:	and    BYTE PTR ds:0x43,al
  43f806:	add    BYTE PTR [eax],al
  43f808:	cs aas 
  43f80a:	inc    ecx
  43f80b:	push   ebp
  43f80c:	aas    
  43f80d:	and    al,0x74
  43f80f:	outs   dx,DWORD PTR ds:[esi]
  43f810:	imul   esp,DWORD PTR [ebp+0x6e],0x5f
  43f814:	imul   bp,WORD PTR [esi+0x64],0x7265
  43f81a:	inc    esi
  43f81b:	inc    eax
  43f81c:	push   ebp
  43f81d:	aas    
  43f81e:	and    al,0x69
  43f820:	jae    0x43f881
  43f822:	popa   
  43f823:	outs   dx,BYTE PTR ds:[esi]
  43f824:	jns    0x43f885
  43f826:	outs   dx,DWORD PTR ds:[esi]
  43f827:	inc    si
  43f829:	inc    eax
  43f82a:	inc    esp
  43f82b:	inc    eax
  43f82c:	fs gs je 0x43f891
  43f830:	imul   ebp,DWORD PTR [eax+eax*2+0x61],0x726f676c
  43f838:	imul   esi,DWORD PTR [eax+ebp*2+0x6d],0x6f6f6240
  43f840:	jae    0x43f8b6
  43f842:	inc    eax
  43f843:	inc    eax
  43f844:	inc    eax
  43f845:	fs gs je 0x43f8aa
  43f849:	imul   ebp,DWORD PTR [eax+eax*2+0x61],0x726f676c
  43f851:	imul   esi,DWORD PTR [eax+ebp*2+0x6d],0x6f6f6240
  43f859:	jae    0x43f8cf
  43f85b:	inc    eax
  43f85c:	inc    eax
  43f85d:	add    BYTE PTR [eax],al
  43f85f:	add    BYTE PTR [eax],ah
  43f861:	add    eax,0x43
  43f866:	add    BYTE PTR [eax],al
  43f868:	cs aas 
  43f86a:	inc    ecx
  43f86b:	push   ebp
  43f86c:	gs jae 0x43f8d2
  43f86f:	popa   
  43f870:	jo     0x43f8d7
  43f872:	fs pop edi
  43f874:	ins    BYTE PTR es:[edi],dx
  43f875:	imul   esi,DWORD PTR [ebx+0x74],0x7272655f
  43f87c:	outs   dx,DWORD PTR ds:[esi]
  43f87d:	jb     0x43f8bf
  43f87f:	bound  ebp,QWORD PTR [edi+0x6f]
  43f882:	jae    0x43f8f8
  43f884:	inc    eax
  43f885:	inc    eax
  43f886:	add    BYTE PTR [eax],al
  43f888:	and    BYTE PTR ds:0x43,al
  43f88e:	add    BYTE PTR [eax],al
  43f890:	cs aas 
  43f892:	inc    ecx
  43f893:	push   esi
  43f894:	aas    
  43f895:	and    al,0x62
  43f897:	imul   ebp,DWORD PTR [esi+0x64],0x5840745f
  43f89e:	push   esi
  43f89f:	aas    
  43f8a0:	and    al,0x6d
  43f8a2:	data16 xor al,BYTE PTR [eax+0x58]
  43f8a6:	push   esi
  43f8a7:	inc    ebx
  43f8a8:	inc    edi
  43f8a9:	popa   
  43f8aa:	jb     0x43f911
  43f8ac:	outs   dx,BYTE PTR ds:[esi]
  43f8ad:	popa   
  43f8ae:	push   eax
  43f8af:	ins    BYTE PTR es:[edi],dx
  43f8b0:	jne    0x43f925
  43f8b2:	push   eax
  43f8b3:	ins    BYTE PTR es:[edi],dx
  43f8b4:	jne    0x43f91d
  43f8b6:	imul   ebp,DWORD PTR [esi+0x40],0x67756c50
  43f8bd:	imul   ebp,DWORD PTR [esi+0x4e],0x50404053
  43f8c4:	inc    ecx
  43f8c5:	pop    eax
  43f8c6:	dec    eax
  43f8c7:	inc    eax
  43f8c8:	pop    edi
  43f8c9:	ins    DWORD PTR es:[edi],dx
  43f8ca:	imul   ax,WORD PTR [eax+0x62],0x6f6f
  43f8d0:	jae    0x43f946
  43f8d2:	inc    eax
  43f8d3:	inc    eax
  43f8d4:	push   esi
  43f8d5:	aas    
  43f8d6:	and    al,0x6c
  43f8d8:	imul   esi,DWORD PTR [ebx+0x74],0x3f564033
  43f8df:	and    al,0x76
  43f8e1:	popa   
  43f8e2:	ins    BYTE PTR es:[edi],dx
  43f8e3:	jne    0x43f94a
  43f8e5:	inc    eax
  43f8e6:	push   eax
  43f8e7:	inc    ecx
  43f8e8:	push   esi
  43f8e9:	inc    ebx
  43f8ea:	inc    edi
  43f8eb:	popa   
  43f8ec:	jb     0x43f953
  43f8ee:	outs   dx,BYTE PTR ds:[esi]
  43f8ef:	popa   
  43f8f0:	push   eax
  43f8f1:	ins    BYTE PTR es:[edi],dx
  43f8f2:	jne    0x43f967
  43f8f4:	push   eax
  43f8f5:	ins    BYTE PTR es:[edi],dx
  43f8f6:	jne    0x43f95f
  43f8f8:	imul   ebp,DWORD PTR [esi+0x40],0x67756c50
  43f8ff:	imul   ebp,DWORD PTR [esi+0x4e],0x40404053
  43f906:	pop    edi
  43f907:	bound  ebp,QWORD PTR [ecx+0x40]
  43f90a:	bound  ebp,QWORD PTR [edi+0x6f]
  43f90d:	jae    0x43f983
  43f90f:	inc    eax
  43f910:	inc    eax
  43f911:	push   ebp
  43f912:	aas    
  43f913:	and    al,0x61
  43f915:	jb     0x43f97e
  43f917:	inc    eax
  43f918:	and    al,0x30
  43f91a:	xor    BYTE PTR [eax+0x33],al
  43f91d:	inc    eax
  43f91e:	push   ebp
  43f91f:	aas    
  43f920:	and    al,0x61
  43f922:	jb     0x43f98b
  43f924:	inc    eax
  43f925:	and    al,0x30
  43f927:	xor    DWORD PTR [eax+0x33],eax
  43f92a:	inc    eax
  43f92b:	inc    eax
  43f92c:	pop    edi
  43f92d:	bound  ebp,QWORD PTR [ecx+0x40]
  43f930:	xor    eax,DWORD PTR [eax+0x40]
  43f933:	pop    edi
  43f934:	bound  ebp,QWORD PTR [ecx+0x40]
  43f937:	bound  ebp,QWORD PTR [edi+0x6f]
  43f93a:	jae    0x43f9b0
  43f93c:	inc    eax
  43f93d:	inc    eax
  43f93e:	add    BYTE PTR [eax],al
  43f940:	and    BYTE PTR ds:0x43,al
  43f946:	add    BYTE PTR [eax],al
  43f948:	cs aas 
  43f94a:	inc    ecx
  43f94b:	push   esi
  43f94c:	aas    
  43f94d:	and    al,0x62
  43f94f:	imul   ebp,DWORD PTR [esi+0x64],0x5840745f
  43f956:	push   esi
  43f957:	aas    
  43f958:	and    al,0x6d
  43f95a:	xor    WORD PTR [eax+0x58],ax
  43f95e:	push   esi
  43f95f:	inc    ebx
  43f960:	inc    edi
  43f961:	popa   
  43f962:	jb     0x43f9c9
  43f964:	outs   dx,BYTE PTR ds:[esi]
  43f965:	popa   
  43f966:	push   eax
  43f967:	ins    BYTE PTR es:[edi],dx
  43f968:	jne    0x43f9dd
  43f96a:	push   eax
  43f96b:	ins    BYTE PTR es:[edi],dx
  43f96c:	jne    0x43f9d5
  43f96e:	imul   ebp,DWORD PTR [esi+0x40],0x67756c50
  43f975:	imul   ebp,DWORD PTR [esi+0x4e],0x41404053
  43f97c:	inc    edx
  43f97d:	push   ebp
  43f97e:	dec    ebp
  43f97f:	jae    0x43f9e8
  43f981:	inc    eax
  43f982:	dec    ecx
  43f983:	push   eax
  43f984:	inc    ebx
  43f985:	dec    esi
  43f986:	push   ebx
  43f987:	inc    eax
  43f988:	inc    eax
  43f989:	inc    eax
  43f98a:	pop    edi
  43f98b:	ins    DWORD PTR es:[edi],dx
  43f98c:	imul   ax,WORD PTR [eax+0x62],0x6f6f
  43f992:	jae    0x43fa08
  43f994:	inc    eax
  43f995:	inc    eax
  43f996:	push   esi
  43f997:	aas    
  43f998:	and    al,0x6c
  43f99a:	imul   esi,DWORD PTR [ebx+0x74],0x3f564032
  43f9a1:	and    al,0x76
  43f9a3:	popa   
  43f9a4:	ins    BYTE PTR es:[edi],dx
  43f9a5:	jne    0x43fa0c
  43f9a7:	inc    eax
  43f9a8:	push   eax
  43f9a9:	inc    ecx
  43f9aa:	push   esi
  43f9ab:	inc    ebx
  43f9ac:	inc    edi
  43f9ad:	popa   
  43f9ae:	jb     0x43fa15
  43f9b0:	outs   dx,BYTE PTR ds:[esi]
  43f9b1:	popa   
  43f9b2:	push   eax
  43f9b3:	ins    BYTE PTR es:[edi],dx
  43f9b4:	jne    0x43fa29
  43f9b6:	push   eax
  43f9b7:	ins    BYTE PTR es:[edi],dx
  43f9b8:	jne    0x43fa21
  43f9ba:	imul   ebp,DWORD PTR [esi+0x40],0x67756c50
  43f9c1:	imul   ebp,DWORD PTR [esi+0x4e],0x40404053
  43f9c8:	pop    edi
  43f9c9:	bound  ebp,QWORD PTR [ecx+0x40]
  43f9cc:	bound  ebp,QWORD PTR [edi+0x6f]
  43f9cf:	jae    0x43fa45
  43f9d1:	inc    eax
  43f9d2:	inc    eax
  43f9d3:	push   esi
  43f9d4:	aas    
  43f9d5:	and    al,0x76
  43f9d7:	popa   
  43f9d8:	ins    BYTE PTR es:[edi],dx
  43f9d9:	jne    0x43fa40
  43f9db:	inc    eax
  43f9dc:	push   ebp
  43f9dd:	dec    ebp
  43f9de:	jae    0x43fa47
  43f9e0:	inc    eax
  43f9e1:	dec    ecx
  43f9e2:	push   eax
  43f9e3:	inc    ebx
  43f9e4:	dec    esi
  43f9e5:	push   ebx
  43f9e6:	inc    eax
  43f9e7:	inc    eax
  43f9e8:	inc    eax
  43f9e9:	xor    dh,BYTE PTR [ebx]
  43f9eb:	inc    eax
  43f9ec:	inc    eax
  43f9ed:	pop    edi
  43f9ee:	bound  ebp,QWORD PTR [ecx+0x40]
  43f9f1:	xor    eax,DWORD PTR [eax+0x40]
  43f9f4:	pop    edi
  43f9f5:	bound  ebp,QWORD PTR [ecx+0x40]
  43f9f8:	bound  ebp,QWORD PTR [edi+0x6f]
  43f9fb:	jae    0x43fa71
  43f9fd:	inc    eax
  43f9fe:	inc    eax
	...

Disassembly of section .rsrc:

00441000 <.rsrc>:
	...
  441008:	add    al,0x0
  44100a:	add    BYTE PTR [eax],al
  44100c:	add    BYTE PTR [eax],al
  44100e:	pop    es
  44100f:	add    BYTE PTR [ebx],al
  441011:	add    BYTE PTR [eax],al
  441013:	add    BYTE PTR [eax+0x0],cl
  441016:	add    BYTE PTR [eax+0x4],al
  44101c:	add    BYTE PTR [eax],0x0
  44101f:	add    BYTE PTR ds:0x98000000,0x0
  441026:	add    BYTE PTR [eax+0x6],al
  44102c:	mov    al,0x0
  44102e:	add    BYTE PTR [eax+0x9],al
  441034:	enter  0x0,0x80
  441038:	push   cs
  441039:	add    BYTE PTR [eax],al
  44103b:	add    al,ah
  44103d:	add    BYTE PTR [eax],al
  44103f:	sbb    BYTE PTR [eax],0x0
  441042:	add    BYTE PTR [eax],al
  441044:	clc    
  441045:	add    BYTE PTR [eax],al
  441047:	add    BYTE PTR [eax],0x0
  44104a:	add    BYTE PTR [eax],al
  44104c:	add    BYTE PTR [eax],al
  44104e:	add    BYTE PTR [eax],al
  441050:	add    al,0x0
  441052:	add    BYTE PTR [eax],al
  441054:	add    BYTE PTR [eax],al
  441056:	add    eax,0x100
  44105b:	add    BYTE PTR [eax],dl
  44105d:	add    DWORD PTR [eax],eax
  44105f:	add    BYTE PTR [edx],0x0
  441062:	add    BYTE PTR [eax],al
  441064:	sub    BYTE PTR [ecx],al
  441066:	add    BYTE PTR [eax+0x3],al
  44106c:	inc    eax
  44106d:	add    DWORD PTR [eax],eax
  44106f:	add    BYTE PTR [eax+eax*1],0x0
  441073:	add    BYTE PTR [eax+0x1],bl
  441076:	add    BYTE PTR [eax+0x5],al
  44107c:	jo     0x44107f
  44107e:	add    BYTE PTR [eax+0x0],al
  441084:	add    BYTE PTR [eax],al
  441086:	add    BYTE PTR [eax],al
  441088:	add    al,0x0
  44108a:	add    BYTE PTR [eax],al
  44108c:	add    BYTE PTR [eax],al
  44108e:	add    DWORD PTR [eax],eax
  441090:	ins    DWORD PTR es:[edi],dx
  441091:	add    BYTE PTR [eax],al
  441093:	add    BYTE PTR [eax+0x800001],cl
  441099:	add    BYTE PTR [eax],al
  44109b:	add    BYTE PTR [eax],al
  44109d:	add    BYTE PTR [eax],al
  44109f:	add    BYTE PTR [eax+eax*1],al
  4410a2:	add    BYTE PTR [eax],al
  4410a4:	add    BYTE PTR [eax],al
  4410a6:	add    DWORD PTR [eax],eax
  4410a8:	add    BYTE PTR [bx+si],al
  4410ab:	add    BYTE PTR [eax+0x800001],ah
  4410b1:	add    BYTE PTR [eax],al
  4410b3:	add    BYTE PTR [eax],al
  4410b5:	add    BYTE PTR [eax],al
  4410b7:	add    BYTE PTR [eax+eax*1],al
  4410ba:	add    BYTE PTR [eax],al
  4410bc:	add    BYTE PTR [eax],al
  4410be:	add    DWORD PTR [eax],eax
  4410c0:	pop    es
  4410c1:	add    BYTE PTR [eax],al
  4410c3:	add    BYTE PTR [eax+0x800001],bh
  4410c9:	add    BYTE PTR [eax],al
  4410cb:	add    BYTE PTR [eax],al
  4410cd:	add    BYTE PTR [eax],al
  4410cf:	add    BYTE PTR [eax+eax*1],al
  4410d2:	add    BYTE PTR [eax],al
  4410d4:	add    BYTE PTR [eax],al
  4410d6:	add    DWORD PTR [eax],eax
  4410d8:	ins    DWORD PTR es:[edi],dx
  4410d9:	add    BYTE PTR [eax],al
  4410db:	add    al,dl
  4410dd:	add    DWORD PTR [eax],eax
  4410df:	add    BYTE PTR [eax],0x0
  4410e2:	add    BYTE PTR [eax],al
  4410e4:	add    BYTE PTR [eax],al
  4410e6:	add    BYTE PTR [eax],al
  4410e8:	add    al,0x0
  4410ea:	add    BYTE PTR [eax],al
  4410ec:	add    BYTE PTR [eax],al
  4410ee:	add    DWORD PTR [eax],eax
  4410f0:	imul   eax,DWORD PTR [eax],0x0
  4410f3:	add    al,ch
  4410f5:	add    DWORD PTR [eax],eax
  4410f7:	add    BYTE PTR [eax],0x0
  4410fa:	add    BYTE PTR [eax],al
  4410fc:	add    BYTE PTR [eax],al
  4410fe:	add    BYTE PTR [eax],al
  441100:	add    al,0x0
  441102:	add    BYTE PTR [eax],al
  441104:	add    BYTE PTR [eax],al
  441106:	add    DWORD PTR [eax],eax
  441108:	add    DWORD PTR [eax],eax
  44110a:	add    BYTE PTR [eax],al
  44110c:	add    BYTE PTR [edx],al
  44110e:	add    BYTE PTR [eax+0x0],al
  441114:	add    BYTE PTR [eax],al
  441116:	add    BYTE PTR [eax],al
  441118:	add    al,0x0
  44111a:	add    BYTE PTR [eax],al
  44111c:	add    BYTE PTR [eax],al
  44111e:	add    DWORD PTR [eax],eax
  441120:	or     DWORD PTR [eax+eax*1],eax
  441123:	add    BYTE PTR [eax],bl
  441125:	add    al,BYTE PTR [eax]
	...
  44112f:	add    BYTE PTR [eax+eax*1],al
  441132:	add    BYTE PTR [eax],al
  441134:	add    BYTE PTR [eax],al
  441136:	add    DWORD PTR [eax],eax
  441138:	or     DWORD PTR [eax+eax*1],eax
  44113b:	add    BYTE PTR [eax],ch
  44113d:	add    al,BYTE PTR [eax]
	...
  441147:	add    BYTE PTR [eax+eax*1],al
  44114a:	add    BYTE PTR [eax],al
  44114c:	add    BYTE PTR [eax],al
  44114e:	add    DWORD PTR [eax],eax
  441150:	or     DWORD PTR [eax+eax*1],eax
  441153:	add    BYTE PTR [eax],bh
  441155:	add    al,BYTE PTR [eax]
	...
  44115f:	add    BYTE PTR [eax+eax*1],al
  441162:	add    BYTE PTR [eax],al
  441164:	add    BYTE PTR [eax],al
  441166:	add    DWORD PTR [eax],eax
  441168:	or     DWORD PTR [eax+eax*1],eax
  44116b:	add    BYTE PTR [eax+0x2],cl
	...
  441176:	add    BYTE PTR [eax],al
  441178:	add    al,0x0
  44117a:	add    BYTE PTR [eax],al
  44117c:	add    BYTE PTR [eax],al
  44117e:	add    DWORD PTR [eax],eax
  441180:	or     DWORD PTR [eax+eax*1],eax
  441183:	add    BYTE PTR [eax+0x2],bl
	...
  44118e:	add    BYTE PTR [eax],al
  441190:	add    al,0x0
  441192:	add    BYTE PTR [eax],al
  441194:	add    BYTE PTR [eax],al
  441196:	add    DWORD PTR [eax],eax
  441198:	or     DWORD PTR [eax+eax*1],eax
  44119b:	add    BYTE PTR [eax+0x2],ch
	...
  4411a6:	add    BYTE PTR [eax],al
  4411a8:	add    al,0x0
  4411aa:	add    BYTE PTR [eax],al
  4411ac:	add    BYTE PTR [eax],al
  4411ae:	add    DWORD PTR [eax],eax
  4411b0:	or     DWORD PTR [eax+eax*1],eax
  4411b3:	add    BYTE PTR [eax+0x2],bh
	...
  4411be:	add    BYTE PTR [eax],al
  4411c0:	add    al,0x0
  4411c2:	add    BYTE PTR [eax],al
  4411c4:	add    BYTE PTR [eax],al
  4411c6:	add    DWORD PTR [eax],eax
  4411c8:	or     DWORD PTR [eax+eax*1],eax
  4411cb:	add    BYTE PTR [eax+0x2],cl
  4411d1:	add    BYTE PTR [eax],al
  4411d3:	add    BYTE PTR [eax],al
  4411d5:	add    BYTE PTR [eax],al
  4411d7:	add    BYTE PTR [eax+eax*1],al
  4411da:	add    BYTE PTR [eax],al
  4411dc:	add    BYTE PTR [eax],al
  4411de:	add    DWORD PTR [eax],eax
  4411e0:	or     DWORD PTR [eax+eax*1],eax
  4411e3:	add    BYTE PTR [eax+0x2],bl
  4411e9:	add    BYTE PTR [eax],al
  4411eb:	add    BYTE PTR [eax],al
  4411ed:	add    BYTE PTR [eax],al
  4411ef:	add    BYTE PTR [eax+eax*1],al
  4411f2:	add    BYTE PTR [eax],al
  4411f4:	add    BYTE PTR [eax],al
  4411f6:	add    DWORD PTR [eax],eax
  4411f8:	or     DWORD PTR [eax+eax*1],eax
  4411fb:	add    BYTE PTR [eax+0x2],ch
  441201:	add    BYTE PTR [eax],al
  441203:	add    BYTE PTR [eax],al
  441205:	add    BYTE PTR [eax],al
  441207:	add    BYTE PTR [eax+eax*1],al
  44120a:	add    BYTE PTR [eax],al
  44120c:	add    BYTE PTR [eax],al
  44120e:	add    DWORD PTR [eax],eax
  441210:	or     DWORD PTR [eax+eax*1],eax
  441213:	add    BYTE PTR [eax-0x37fffffe],bh
  441219:	adc    al,BYTE PTR [eax+eax*1]
  44121c:	sub    BYTE PTR [edx+0x0],al
  44121f:	add    ah,ah
  441221:	add    al,0x0
  441223:	add    BYTE PTR [eax],al
  441225:	add    BYTE PTR [eax],al
  441227:	add    al,dh
  441229:	push   esp
  44122a:	add    al,0x0
  44122c:	test   al,0x25
  44122e:	add    BYTE PTR [eax],al
  441230:	in     al,0x4
  441232:	add    BYTE PTR [eax],al
  441234:	add    BYTE PTR [eax],al
  441236:	add    BYTE PTR [eax],al
  441238:	cwde   
  441239:	jp     0x44123f
  44123b:	add    BYTE PTR [eax-0x1bfffff0],ch
  441241:	add    al,0x0
  441243:	add    BYTE PTR [eax],al
  441245:	add    BYTE PTR [eax],al
  441247:	add    BYTE PTR [eax-0x75],al
  44124a:	add    al,0x0
  44124c:	mov    BYTE PTR [ecx],cl
  44124e:	add    BYTE PTR [eax],al
  441250:	in     al,0x4
  441252:	add    BYTE PTR [eax],al
  441254:	add    BYTE PTR [eax],al
  441256:	add    BYTE PTR [eax],al
  441258:	enter  0x494,0x0
  44125c:	push   0xe4000004
  441261:	add    al,0x0
  441263:	add    BYTE PTR [eax],al
  441265:	add    BYTE PTR [eax],al
  441267:	add    BYTE PTR [eax],dh
  441269:	cdq    
  44126a:	add    al,0x0
  44126c:	dec    edx
  44126d:	add    BYTE PTR [eax],al
  44126f:	add    ah,ah
  441271:	add    al,0x0
  441273:	add    BYTE PTR [eax],al
  441275:	add    BYTE PTR [eax],al
  441277:	add    BYTE PTR [ecx+ebx*4+0x4],bh
  44127b:	add    BYTE PTR [ecx+eax*1],ch
  44127e:	add    BYTE PTR [eax],al
  441280:	in     al,0x4
  441282:	add    BYTE PTR [eax],al
  441284:	add    BYTE PTR [eax],al
  441286:	add    BYTE PTR [eax],al
  441288:	test   al,0x9a
  44128a:	add    al,0x0
  44128c:	cmp    BYTE PTR [eax],al
  44128e:	add    BYTE PTR [eax],al
  441290:	in     al,0x4
  441292:	add    BYTE PTR [eax],al
  441294:	add    BYTE PTR [eax],al
  441296:	add    BYTE PTR [eax],al
  441298:	loopne 0x441234
  44129a:	add    al,0x0
  44129c:	adc    BYTE PTR [eax],al
  44129e:	add    BYTE PTR [eax],al
  4412a0:	in     al,0x4
  4412a2:	add    BYTE PTR [eax],al
  4412a4:	add    BYTE PTR [eax],al
  4412a6:	add    BYTE PTR [eax],al
  4412a8:	lock call 0x0:0x4c0004
  4412b0:	in     al,0x4
  4412b2:	add    BYTE PTR [eax],al
  4412b4:	add    BYTE PTR [eax],al
  4412b6:	add    BYTE PTR [eax],al
  4412b8:	cmp    al,0x9b
  4412ba:	add    al,0x0
  4412bc:	popa   
  4412bd:	add    al,BYTE PTR [eax]
  4412bf:	add    ah,ah
  4412c1:	add    al,0x0
  4412c3:	add    BYTE PTR [eax],al
  4412c5:	add    BYTE PTR [eax],al
  4412c7:	add    BYTE PTR [eax],ch
  4412c9:	add    BYTE PTR [eax],al
  4412cb:	add    BYTE PTR [eax+0x0],al
  4412ce:	add    BYTE PTR [eax],al
  4412d0:	add    BYTE PTR [eax],0x0
  4412d3:	add    BYTE PTR [ecx],al
  4412d5:	add    BYTE PTR [eax],ah
  4412d7:	add    BYTE PTR [eax],al
  4412d9:	add    BYTE PTR [eax],al
  4412db:	add    BYTE PTR [eax],al
  4412dd:	inc    edx
	...
  4412ee:	add    BYTE PTR [eax],al
  4412f0:	(bad)  
  4412f1:	(bad)  
  4412f2:	inc    DWORD PTR [eax]
  4412f4:	(bad)  
  4412f5:	(bad)  
  4412f6:	inc    DWORD PTR [eax]
  4412f8:	(bad)  
  4412f9:	(bad)  
  4412fa:	inc    DWORD PTR [eax]
  4412fc:	(bad)  
  4412fd:	(bad)  
  4412fe:	inc    DWORD PTR [eax]
	...
  44130c:	add    al,0x4
  44130e:	add    al,0x0
  441310:	sub    ebp,DWORD PTR [ebx]
  441312:	sub    eax,DWORD PTR [ecx]
  441314:	daa    
  441315:	daa    
  441316:	daa    
  441317:	add    bh,BYTE PTR [ecx]
  441319:	cmp    DWORD PTR [ecx],edi
  44131b:	add    al,0x48
  44131d:	dec    eax
  44131e:	dec    eax
  44131f:	pop    es
  441320:	inc    ecx
  441321:	inc    ecx
  441322:	inc    ecx
  441323:	or     DWORD PTR [esp+ecx*2+0x4c],ecx
  441327:	or     eax,0x103f3f3f
  44132c:	cmp    BYTE PTR [eax],bh
  44132e:	cmp    BYTE PTR [esi],dl
  441330:	cmp    edi,DWORD PTR [ebx]
  441332:	cmp    al,0x1b
  441334:	cmp    eax,0x3d1f3c3d
  441339:	cmp    eax,0x41412135
  44133e:	xor    ah,BYTE PTR [edx]
  441340:	inc    eax
  441341:	inc    eax
  441342:	sub    al,0x21
  441344:	cmp    al,0x3c
  441346:	das    
  441347:	and    eax,0x2d453838
  44134c:	xor    al,0x34
  44134e:	pusha  
  44134f:	cmp    ch,BYTE PTR [esi]
  441351:	outs   dx,DWORD PTR cs:[esi]
  441353:	inc    edi
  441354:	sub    ebp,DWORD PTR [ebx]
  441356:	jns    0x4413ab
  441358:	sub    DWORD PTR [ecx],ebp
  44135a:	jg     0x4413b9
  44135c:	es and DWORD PTR es:[ebp+eiz*1+0x25],0x23236981
  441366:	sub    DWORD PTR [edi+0x21],0x21738021
  44136d:	and    DWORD PTR [ecx-0x7fdddd8d],eax
  441373:	jb     0x441398
  441375:	and    eax,DWORD PTR [ecx-0x7fdada93]
  44137b:	addr16 es es jle 0x4413e1
  441380:	sub    BYTE PTR [eax],ch
  441382:	jns    0x4413dc
  441384:	sub    ebp,DWORD PTR [ebx]
  441386:	je     0x4413d6
  441388:	xor    BYTE PTR [eax],dh
  44138a:	ins    DWORD PTR es:[edi],dx
  44138b:	inc    ebx
  44138c:	xor    eax,0x3a355835
  441391:	cmp    bh,BYTE PTR [ecx+ebp*1]
  441394:	ds sub esp,DWORD PTR ds:[ebx]
  441398:	inc    ecx
  441399:	inc    ecx
  44139a:	xor    BYTE PTR [edx],ah
  44139c:	inc    eax
  44139d:	inc    eax
  44139e:	xor    esp,DWORD PTR [edx]
  4413a0:	cmp    eax,0x3d20383d
  4413a5:	cmp    eax,0x3a3a1d3e
  4413aa:	cmp    bl,BYTE PTR [ecx]
  4413ac:	cmp    BYTE PTR [eax],bh
  4413ae:	cmp    BYTE PTR [ebx],dl
  4413b0:	inc    esi
  4413b1:	inc    esi
  4413b2:	inc    esi
  4413b3:	cmovns ecx,DWORD PTR [ecx+0x49]
  4413b7:	or     eax,DWORD PTR [eax+0x40]
  4413ba:	inc    eax
  4413bb:	or     DWORD PTR [ecx+0x49],ecx
  4413be:	dec    ecx
  4413bf:	push   es
  4413c0:	sub    al,0x2c
  4413c2:	sub    al,0x3
  4413c4:	sub    al,0x2c
  4413c6:	sub    al,0x2
  4413c8:	push   ds
  4413c9:	push   ds
  4413ca:	push   ds
  4413cb:	add    DWORD PTR [eax],eax
	...
  4413d9:	add    BYTE PTR [eax],al
  4413db:	add    bh,bh
  4413dd:	(bad)  
  4413de:	inc    DWORD PTR [eax]
  4413e0:	(bad)  
  4413e1:	(bad)  
  4413e2:	inc    DWORD PTR [eax]
  4413e4:	(bad)  
  4413e5:	(bad)  
  4413e6:	inc    DWORD PTR [eax]
  4413e8:	(bad)  
  4413e9:	(bad)  
  4413ea:	inc    DWORD PTR [eax]
  4413ec:	(bad)  
  4413ed:	(bad)  
  4413ee:	inc    DWORD PTR [eax]
  4413f0:	(bad)  
  4413f1:	(bad)  
  4413f2:	inc    DWORD PTR [eax]
  4413f4:	(bad)  
  4413f5:	(bad)  
  4413f6:	inc    DWORD PTR [eax]
  4413f8:	(bad)  
  4413f9:	(bad)  
  4413fa:	inc    DWORD PTR [eax]
  4413fc:	(bad)  
  4413fd:	(bad)  
  4413fe:	inc    DWORD PTR [eax]
	...
  441408:	add    al,BYTE PTR [edx]
  44140a:	add    al,BYTE PTR [eax]
  44140c:	sbb    al,0x1c
  44140e:	sbb    al,0x2
  441410:	push   edi
  441411:	push   edi
  441412:	push   edi
  441413:	add    eax,0x9515151
  441418:	aas    
  441419:	aas    
  44141a:	aas    
  44141b:	(bad)  
  44141e:	cmp    BYTE PTR [edi],dl
  441420:	ds ds ds push ds
  441424:	aas    
  441425:	aas    
  441426:	aas    
  441427:	and    al,0x3d
  441429:	cmp    eax,0x3c3c2c3e
  44142e:	cmp    dh,BYTE PTR [ebx]
  441430:	ds ds cmp BYTE PTR ss:[esi],bh
  441435:	cmp    BYTE PTR ds:[esi+esi*1],bh
  441439:	ss dec ecx
  44143b:	dec    eax
  44143c:	xor    esi,DWORD PTR [ebx]
  44143e:	pop    ebx
  44143f:	pop    eax
  441440:	xor    BYTE PTR [eax],dh
  441442:	pop    esi
  441443:	sub    ebp,DWORD PTR fs:[ebx]
  441446:	gs jo  0x44146a
  441449:	and    DWORD PTR [edx-0x5be8e87f],eax
  44144f:	xchg   edi,eax
  441450:	pswapd mm7,QWORD PTR [ecx-0x3bf5f555]
  441458:	pop    es
  441459:	pop    es
  44145a:	retf   0x5c8
  44145d:	add    eax,0x303d1cc
  441462:	int3   
  441463:	fld    DWORD PTR [edx]
  441465:	add    cl,bl
  441467:	loope  0x44146a
  441469:	add    ebx,ecx
  44146b:	out    0x1,al
  44146d:	add    ebx,ecx
  44146f:	out    0x2,al
  441471:	add    cl,bl
  441473:	in     al,0x2
  441475:	add    cl,bl
  441477:	fild   WORD PTR [ebx]
  441479:	add    ecx,edx
  44147b:	(bad)  
  44147c:	push   es
  44147d:	push   es
  44147e:	leave  
  44147f:	int    0xa
  441481:	or     al,dh
  441483:	ret    0xc0c
  441486:	mov    edi,0xb41111b5
  44148b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44148c:	sbb    bl,BYTE PTR [edx]
  44148e:	cwde   
  44148f:	(bad)  
  441490:	and    eax,0x2e797325
  441495:	cs pop ebp
  441497:	imul   esi,DWORD PTR [ecx],0x33615e31
  44149d:	xor    edx,DWORD PTR [ebp+0x53]
  4414a0:	cmp    DWORD PTR [ecx],edi
  4414a2:	inc    ecx
  4414a3:	inc    ebx
  4414a4:	aas    
  4414a5:	aas    
  4414a6:	xor    eax,0x373c3c38
  4414ab:	ss cmp al,0x3c
  4414ae:	cmp    esi,DWORD PTR [eax]
  4414b0:	ds ds aas 
  4414b3:	sub    DWORD PTR [edi],edi
  4414b5:	aas    
  4414b6:	aas    
  4414b7:	and    DWORD PTR ds:0x381b3d3d,edi
  4414bd:	cmp    BYTE PTR [eax],bh
  4414bf:	adc    al,0x46
  4414c1:	inc    esi
  4414c2:	inc    esi
  4414c3:	push   cs
  4414c4:	pop    edx
  4414c5:	pop    edx
  4414c6:	pop    edx
  4414c7:	or     BYTE PTR [esp+eax*2+0x44],al
  4414cb:	add    ecx,DWORD PTR [ebx]
  4414cd:	or     ecx,DWORD PTR [ebx]
  4414cf:	add    al,BYTE PTR [eax]
	...
  4414d9:	add    BYTE PTR [eax],al
  4414db:	add    bh,bh
  4414dd:	(bad)  
  4414de:	inc    DWORD PTR [eax]
  4414e0:	(bad)  
  4414e1:	(bad)  
  4414e2:	inc    DWORD PTR [eax]
  4414e4:	(bad)  
  4414e5:	(bad)  
  4414e6:	inc    DWORD PTR [eax]
  4414e8:	(bad)  
  4414e9:	(bad)  
  4414ea:	inc    DWORD PTR [eax]
  4414ec:	(bad)  
  4414ed:	(bad)  
  4414ee:	inc    DWORD PTR [eax]
  4414f0:	(bad)  
  4414f1:	(bad)  
  4414f2:	inc    DWORD PTR [eax]
  4414f4:	(bad)  
  4414f5:	(bad)  
  4414f6:	inc    DWORD PTR [eax]
  4414f8:	(bad)  
  4414f9:	(bad)  
  4414fa:	inc    DWORD PTR [eax]
  4414fc:	(bad)  
  4414fd:	(bad)  
  4414fe:	inc    DWORD PTR [eax]
  441500:	add    BYTE PTR [eax],al
  441502:	add    BYTE PTR [eax],al
  441504:	add    eax,DWORD PTR [ebx]
  441506:	add    eax,DWORD PTR [eax]
  441508:	sbb    BYTE PTR [eax],bl
  44150a:	sbb    BYTE PTR [edx],al
  44150c:	cmp    bh,BYTE PTR [edx]
  44150e:	cmp    cl,BYTE PTR [eax]
  441510:	cmp    DWORD PTR [ecx],edi
  441512:	cmp    DWORD PTR [esi],ecx
  441514:	cmp    DWORD PTR [ecx],edi
  441516:	cmp    DWORD PTR [eax],ebx
  441518:	ds ds ds and al,0x3d
  44151d:	cmp    eax,0x3838313d
  441522:	cmp    BYTE PTR [edi*1+0x3c443d3d],bh
  441529:	cmp    al,0x3b
  44152b:	dec    ebp
  44152c:	cmp    bh,BYTE PTR [edx]
  44152e:	cmp    eax,0x3b3a3a55
  441533:	pop    ebp
  441534:	xor    eax,0x23674535
  441539:	and    ecx,DWORD PTR [eax-0x42eded7a]
  44153f:	mov    al,0x8
  441541:	or     dl,dl
  441543:	rol    DWORD PTR [ebx],cl
  441545:	add    ecx,edi
  441547:	jmp    0x0:0xf9c70101
  44154e:	mov    edi,0xb30000ff
  441553:	inc    DWORD PTR [eax]
  441555:	add    BYTE PTR [eax-0x5effff01],ch
  44155b:	inc    DWORD PTR [eax]
  44155d:	add    BYTE PTR [ebx-0x67ffff01],bl
  441563:	inc    DWORD PTR [eax]
  441565:	add    BYTE PTR [esi-0x6bffff01],dl
  44156b:	inc    DWORD PTR [eax]
  44156d:	add    BYTE PTR [edi+edi*8-0x6b0000],dl
  441574:	add    BYTE PTR [eax],al
  441576:	xchg   ebp,eax
  441577:	inc    DWORD PTR [eax]
  441579:	add    BYTE PTR [eax-0x63ffff01],bl
  44157f:	inc    DWORD PTR [eax]
  441581:	add    BYTE PTR [ebx-0x54ffff01],ah
  441587:	inc    DWORD PTR [eax]
  441589:	add    BYTE PTR [edi+edi*8-0x420000],dh
  441590:	add    DWORD PTR [ecx],eax
  441592:	(bad)  
  441593:	repz add al,0x4
  441596:	retf   
  441597:	loopne 0x4415a3
  441599:	or     cl,cl
  44159b:	leave  
  44159c:	pop    ss
  44159d:	pop    ss
  44159e:	stos   DWORD PTR es:[edi],eax
  44159f:	mov    ds:0x786a2b2b,eax
  4415a4:	cmp    bh,BYTE PTR [edx]
  4415a6:	aaa    
  4415a7:	pop    edi
  4415a8:	cmp    bh,BYTE PTR [edx]
  4415aa:	aas    
  4415ab:	pop    ebx
  4415ac:	cmp    edi,DWORD PTR [ebx]
  4415ae:	cmp    edx,DWORD PTR [ebx+0x3d]
  4415b1:	cmp    eax,0x3b3b4a3c
  4415b6:	cmp    eax,DWORD PTR [eax+0x39]
  4415b9:	cmp    DWORD PTR [ecx],edi
  4415bb:	ss aas 
  4415bd:	aas    
  4415be:	aas    
  4415bf:	sub    al,0x3b
  4415c1:	cmp    edi,DWORD PTR [ebx]
  4415c3:	and    BYTE PTR [ecx],bh
  4415c5:	cmp    DWORD PTR [ecx],edi
  4415c7:	adc    eax,0xa3b3b3b
  4415cc:	xor    BYTE PTR [eax],dh
  4415ce:	xor    BYTE PTR [eax+ecx*1],al
  4415d1:	or     BYTE PTR [eax],cl
  4415d3:	add    DWORD PTR [ecx],eax
  4415d5:	add    DWORD PTR [ecx],eax
  4415d7:	add    BYTE PTR [eax],al
  4415d9:	add    BYTE PTR [eax],al
  4415db:	add    bh,bh
  4415dd:	(bad)  
  4415de:	inc    DWORD PTR [eax]
  4415e0:	(bad)  
  4415e1:	(bad)  
  4415e2:	inc    DWORD PTR [eax]
  4415e4:	(bad)  
  4415e5:	(bad)  
  4415e6:	inc    DWORD PTR [eax]
  4415e8:	(bad)  
  4415e9:	(bad)  
  4415ea:	inc    DWORD PTR [eax]
  4415ec:	(bad)  
  4415ed:	(bad)  
  4415ee:	inc    DWORD PTR [eax]
  4415f0:	(bad)  
  4415f1:	(bad)  
  4415f2:	inc    DWORD PTR [eax]
  4415f4:	(bad)  
  4415f5:	(bad)  
  4415f6:	inc    DWORD PTR [eax]
  4415f8:	(bad)  
  4415f9:	(bad)  
  4415fa:	inc    DWORD PTR [eax]
  4415fc:	(bad)  
  4415fd:	(bad)  
  4415fe:	inc    DWORD PTR [eax]
  441600:	add    BYTE PTR [eax],al
  441602:	add    BYTE PTR [eax],al
  441604:	xor    al,0x34
  441606:	xor    al,0x1
  441608:	dec    ebp
  441609:	dec    ebp
  44160a:	dec    ebp
  44160b:	add    eax,0xf383838
  441610:	cmp    edi,DWORD PTR [ebx]
  441612:	cmp    ebx,DWORD PTR [esi]
  441614:	cmp    edi,DWORD PTR [ebx]
  441616:	cmp    ebp,DWORD PTR [edi]
  441618:	cmp    al,0x3c
  44161a:	cmp    al,0x41
  44161c:	cmp    bh,BYTE PTR [edx]
  44161e:	cmp    dl,BYTE PTR [eax+0x38]
  441621:	cmp    BYTE PTR [eax],bh
  441623:	pop    edx
  441624:	cmp    bh,BYTE PTR [edx]
  441626:	cmp    ah,BYTE PTR [ecx+0x3f]
  441629:	aas    
  44162a:	daa    
  44162b:	pop    esi
  44162c:	xor    DWORD PTR [ecx],esi
  44162e:	pop    edx
  44162f:	je     0x44164b
  441631:	sbb    ah,BYTE PTR [esi-0x3df4f45a]
  441637:	rol    DWORD PTR ds:0x2edc005,cl
  44163d:	add    dh,BYTE PTR [edx-0x5efefe0b]
  441643:	cli    
  441644:	add    BYTE PTR [eax],al
  441646:	cwde   
  441647:	inc    BYTE PTR [eax]
  441649:	add    BYTE PTR [edi+edi*8-0x6d0000],dl
  441650:	add    BYTE PTR [eax],al
  441652:	xchg   ecx,eax
  441653:	inc    DWORD PTR [eax]
  441655:	add    BYTE PTR [ebx-0x69ffff01],dl
  44165b:	inc    DWORD PTR [eax]
  44165d:	add    BYTE PTR [edx-0x63ffff01],bl
  441663:	inc    DWORD PTR [eax]
  441665:	add    BYTE PTR [esi-0x60ffff01],bl
  44166b:	inc    DWORD PTR [eax]
  44166d:	add    BYTE PTR [eax-0x60ffff01],ah
  441673:	inc    DWORD PTR [eax]
  441675:	add    BYTE PTR [esi-0x64ffff01],bl
  44167b:	inc    DWORD PTR [eax]
  44167d:	add    BYTE PTR [eax-0x6bffff01],bl
  441683:	inc    DWORD PTR [eax]
  441685:	add    BYTE PTR [ebx-0x6dffff01],dl
  44168b:	inc    DWORD PTR [eax]
  44168d:	add    BYTE PTR [edx-0x6bffff01],dl
  441693:	inc    DWORD PTR [eax]
  441695:	add    BYTE PTR [ebx-0x5cfefe04],bl
  44169b:	stc    
  44169c:	add    eax,DWORD PTR [ebx]
  44169e:	mov    dl,0xf3
  4416a0:	pop    es
  4416a1:	pop    es
  4416a2:	mov    esi,0xb31111e5
  4416a7:	shl    BYTE PTR [edx],0x22
  4416aa:	(bad)  
  4416ab:	xchg   edx,eax
  4416ac:	cmp    DWORD PTR [ecx],edi
  4416ae:	ds push 0x3e
  4416b1:	ds cs pop edi
  4416b4:	cmp    DWORD PTR [ecx],edi
  4416b6:	cmp    bl,BYTE PTR [edi+0x38]
  4416b9:	cmp    BYTE PTR [eax],bh
  4416bb:	push   ebp
  4416bc:	cmp    al,0x3c
  4416be:	cmp    al,0x4a
  4416c0:	cmp    al,0x3c
  4416c2:	cmp    al,0x3b
  4416c4:	cmp    edi,DWORD PTR [ebx]
  4416c6:	cmp    ebp,DWORD PTR [ecx]
  4416c8:	cmp    bh,BYTE PTR [edx]
  4416ca:	cmp    dl,BYTE PTR [edi]
  4416cc:	cmp    al,0x3c
  4416ce:	cmp    al,0xa
  4416d0:	push   eax
  4416d1:	push   eax
  4416d2:	push   eax
  4416d3:	add    ebx,DWORD PTR [eax]
  4416d5:	sbb    BYTE PTR [eax],bl
  4416d7:	add    BYTE PTR [eax],al
  4416d9:	add    BYTE PTR [eax],al
  4416db:	add    bh,bh
  4416dd:	(bad)  
  4416de:	inc    DWORD PTR [eax]
  4416e0:	(bad)  
  4416e1:	(bad)  
  4416e2:	inc    DWORD PTR [eax]
  4416e4:	(bad)  
  4416e5:	(bad)  
  4416e6:	inc    DWORD PTR [eax]
  4416e8:	(bad)  
  4416e9:	(bad)  
  4416ea:	inc    DWORD PTR [eax]
  4416ec:	(bad)  
  4416ed:	(bad)  
  4416ee:	inc    DWORD PTR [eax]
  4416f0:	(bad)  
  4416f1:	(bad)  
  4416f2:	inc    DWORD PTR [eax]
  4416f4:	(bad)  
  4416f5:	(bad)  
  4416f6:	inc    DWORD PTR [eax]
  4416f8:	(bad)  
  4416f9:	(bad)  
  4416fa:	inc    DWORD PTR [eax]
  4416fc:	(bad)  
  4416fd:	(bad)  
  4416fe:	inc    DWORD PTR [eax]
  441700:	add    BYTE PTR [eax],al
  441702:	add    BYTE PTR [ecx],al
  441704:	sub    eax,0x48022d2d
  441709:	dec    eax
  44170a:	dec    eax
  44170b:	or     DWORD PTR [ebx],edi
  44170d:	cmp    edi,DWORD PTR [ebx]
  44170f:	sbb    DWORD PTR [ebx],edi
  441711:	cmp    edi,DWORD PTR [ebx]
  441713:	das    
  441714:	cmp    al,0x3c
  441716:	cmp    al,0x47
  441718:	cmp    al,0x3c
  44171a:	cmp    al,0x5c
  44171c:	cmp    bh,BYTE PTR [edx]
  44171e:	cmp    ebp,DWORD PTR [edx+0x3a]
  441721:	cmp    dh,BYTE PTR [esi]
  441723:	outs   dx,DWORD PTR ds:[esi]
  441724:	aas    
  441725:	aas    
  441726:	sub    eax,0x7829296e
  44172b:	xchg   ebx,eax
  44172c:	adc    DWORD PTR [ecx],edx
  44172e:	mov    dl,0xca
  441730:	add    al,0x4
  441732:	mov    esp,0xad0000ec
  441737:	inc    DWORD PTR [eax]
  441739:	add    BYTE PTR [edi-0x6bffff01],bl
  44173f:	inc    DWORD PTR [eax]
  441741:	add    BYTE PTR [ebx-0x65ffff01],dl
  441747:	inc    DWORD PTR [eax]
  441749:	add    BYTE PTR [eax-0x5affff01],ah
  44174f:	inc    DWORD PTR [eax]
  441751:	add    BYTE PTR [edx-0x4fffff01],ch
  441757:	inc    DWORD PTR [eax]
  441759:	add    BYTE PTR [edi+edi*8-0x480000],dh
  441760:	add    BYTE PTR [eax],al
  441762:	mov    edx,0xbb0000ff
  441767:	inc    DWORD PTR [eax]
  441769:	add    BYTE PTR [edi+edi*8-0x430000],bh
  441770:	add    BYTE PTR [eax],al
  441772:	mov    esp,0xbb0000ff
  441777:	inc    DWORD PTR [eax]
  441779:	add    BYTE PTR [edx-0x48ffff01],bh
  44177f:	inc    DWORD PTR [eax]
  441781:	add    BYTE PTR [edx-0x51ffff01],dh
  441787:	inc    DWORD PTR [eax]
  441789:	add    BYTE PTR [ecx-0x5bffff01],ch
  44178f:	inc    DWORD PTR [eax]
  441791:	add    BYTE PTR [ebp-0x67ffff01],bl
  441797:	inc    DWORD PTR [eax]
  441799:	add    BYTE PTR [edi+edi*8-0x690000],dl
  4417a0:	add    BYTE PTR [eax],al
  4417a2:	mov    eax,ds:0xae0000ff
  4417a7:	clc    
  4417a8:	or     BYTE PTR [eax],cl
  4417aa:	mov    ch,0xe4
  4417ac:	push   ss
  4417ad:	push   ss
  4417ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4417af:	mov    ecx,0x83583232
  4417b4:	aas    
  4417b5:	aas    
  4417b6:	sub    DWORD PTR [ecx+edi*1+0x39],ebp
  4417ba:	cmp    ch,BYTE PTR [esi+0x3c]
  4417bd:	cmp    al,0x3c
  4417bf:	fs cmp al,0x3c
  4417c2:	cmp    al,0x56
  4417c4:	cmp    edi,DWORD PTR [ebx]
  4417c6:	cmp    edi,DWORD PTR [edi]
  4417c8:	cmp    edi,DWORD PTR [ebx]
  4417ca:	cmp    esp,DWORD PTR [edi*1+0x48103d3d]
  4417d1:	dec    eax
  4417d2:	dec    eax
  4417d3:	add    eax,0x1141414
  4417d8:	add    BYTE PTR [eax],al
  4417da:	add    BYTE PTR [ecx],al
  4417dc:	(bad)  
  4417dd:	(bad)  
  4417de:	inc    DWORD PTR [eax]
  4417e0:	(bad)  
  4417e1:	(bad)  
  4417e2:	inc    DWORD PTR [eax]
  4417e4:	(bad)  
  4417e5:	(bad)  
  4417e6:	inc    DWORD PTR [eax]
  4417e8:	(bad)  
  4417e9:	(bad)  
  4417ea:	inc    DWORD PTR [eax]
  4417ec:	(bad)  
  4417ed:	(bad)  
  4417ee:	inc    DWORD PTR [eax]
  4417f0:	(bad)  
  4417f1:	(bad)  
  4417f2:	inc    DWORD PTR [eax]
  4417f4:	(bad)  
  4417f5:	(bad)  
  4417f6:	inc    DWORD PTR [eax]
  4417f8:	(bad)  
  4417f9:	(bad)  
  4417fa:	inc    DWORD PTR [eax]
  4417fc:	(bad)  
  4417fd:	(bad)  
  4417fe:	inc    DWORD PTR [eax]
  441800:	add    BYTE PTR [eax],al
  441802:	add    BYTE PTR [ecx],al
  441804:	sbb    ebx,DWORD PTR [ebx]
  441806:	sbb    eax,DWORD PTR [edx]
  441808:	cmp    BYTE PTR [eax],bh
  44180a:	cmp    BYTE PTR [ebx],cl
  44180c:	cmp    eax,0x3a1e3d3d
  441811:	cmp    bh,BYTE PTR [edx]
  441813:	aaa    
  441814:	cmp    al,0x3c
  441816:	cmp    al,0x53
  441818:	cmp    al,0x3c
  44181a:	cmp    al,0x68
  44181c:	cmp    al,0x3c
  44181e:	cmp    BYTE PTR [ebx+0x38],dh
  441821:	cmp    BYTE PTR [edi],bh
  441823:	jnp    0x441854
  441825:	das    
  441826:	data16 mov cs,WORD PTR [esi]
  441829:	push   cs
  44182a:	mov    ecx,0xc20000d2
  44182f:	inc    DWORD PTR [eax]
  441831:	add    BYTE PTR [edi+edi*8-0x720000],bl
  441838:	add    BYTE PTR [eax],al
  44183a:	xchg   ebp,eax
  44183b:	inc    DWORD PTR [eax]
  44183d:	add    BYTE PTR [edi-0x52ffff01],bl
  441843:	inc    DWORD PTR [eax]
  441845:	add    BYTE PTR [esi-0x42ffff01],dh
  44184b:	inc    DWORD PTR [eax]
  44184d:	add    BYTE PTR [edi-0x3dffff01],bh
  441853:	inc    DWORD PTR [eax]
  441855:	add    ah,al
  441857:	inc    DWORD PTR [eax]
  441859:	add    ch,al
  44185b:	inc    DWORD PTR [eax]
  44185d:	add    ch,al
  44185f:	inc    DWORD PTR [eax]
  441861:	add    ch,al
  441863:	inc    DWORD PTR [eax]
  441865:	add    ah,al
  441867:	inc    DWORD PTR [eax]
  441869:	add    ah,al
  44186b:	inc    DWORD PTR [eax]
  44186d:	add    ah,al
  44186f:	inc    DWORD PTR [eax]
  441871:	add    ah,al
  441873:	inc    DWORD PTR [eax]
  441875:	add    ch,al
  441877:	inc    DWORD PTR [eax]
  441879:	add    ch,al
  44187b:	inc    DWORD PTR [eax]
  44187d:	add    ch,al
  44187f:	inc    DWORD PTR [eax]
  441881:	add    ch,al
  441883:	inc    DWORD PTR [eax]
  441885:	add    ah,al
  441887:	inc    DWORD PTR [eax]
  441889:	add    dl,al
  44188b:	inc    DWORD PTR [eax]
  44188d:	add    BYTE PTR [edi-0x44ffff01],bh
  441893:	inc    DWORD PTR [eax]
  441895:	add    BYTE PTR [edi+edi*8-0x550000],dh
  44189c:	add    BYTE PTR [eax],al
  44189e:	sahf   
  44189f:	inc    DWORD PTR [eax]
  4418a1:	add    BYTE PTR [ecx-0x6fffff01],dl
  4418a7:	inc    DWORD PTR [eax]
  4418a9:	add    BYTE PTR [ecx-0x35ffff01],ah
  4418af:	neg    BYTE PTR [ecx]
  4418b1:	sbb    DWORD PTR [ecx+edi*4-0x7daccbcc],ebx
  4418b8:	cmp    al,0x3c
  4418ba:	xor    eax,0x3c3c3c75
  4418bf:	jo     0x4418fd
  4418c1:	cmp    al,0x3c
  4418c3:	bound  edi,QWORD PTR [ebx]
  4418c5:	cmp    edi,DWORD PTR [ebx]
  4418c7:	dec    ecx
  4418c8:	cmp    edi,DWORD PTR [ebx]
  4418ca:	cmp    ebp,DWORD PTR [ebx]
  4418cc:	cmp    al,0x3c
  4418ce:	cmp    al,0x13
  4418d0:	xor    DWORD PTR [ecx],esi
  4418d2:	xor    DWORD PTR [esi],eax
  4418d4:	or     al,0xc
  4418d6:	or     al,0x1
  4418d8:	add    BYTE PTR [eax],al
  4418da:	add    BYTE PTR [ecx],al
  4418dc:	(bad)  
  4418dd:	(bad)  
  4418de:	inc    DWORD PTR [eax]
  4418e0:	(bad)  
  4418e1:	(bad)  
  4418e2:	inc    DWORD PTR [eax]
  4418e4:	(bad)  
  4418e5:	(bad)  
  4418e6:	inc    DWORD PTR [eax]
  4418e8:	(bad)  
  4418e9:	(bad)  
  4418ea:	inc    DWORD PTR [eax]
  4418ec:	(bad)  
  4418ed:	(bad)  
  4418ee:	inc    DWORD PTR [eax]
  4418f0:	(bad)  
  4418f1:	(bad)  
  4418f2:	inc    DWORD PTR [eax]
  4418f4:	(bad)  
  4418f5:	(bad)  
  4418f6:	inc    DWORD PTR [eax]
  4418f8:	(bad)  
  4418f9:	(bad)  
  4418fa:	inc    DWORD PTR [eax]
  4418fc:	(bad)  
  4418fd:	(bad)  
  4418fe:	inc    DWORD PTR [eax]
  441900:	add    BYTE PTR [eax],al
  441902:	add    BYTE PTR [ecx],al
  441904:	es es add al,BYTE PTR es:[edx+0x42]
  44190a:	inc    edx
  44190b:	or     DWORD PTR [ebx],edi
  44190d:	cmp    edi,DWORD PTR [ebx]
  44190f:	sbb    bh,BYTE PTR [edx]
  441911:	cmp    bh,BYTE PTR [edx]
  441913:	xor    DWORD PTR [esp+edi*1],edi
  441916:	cmp    al,0x4a
  441918:	cmp    al,0x3c
  44191a:	cmp    al,0x5f
  44191c:	ds xor esp,DWORD PTR ds:[edi+0x34]
  441921:	xor    al,0x4d
  441923:	jl     0x441936
  441925:	adc    DWORD PTR [edi+edi*4-0x749feff],edi
  44192c:	add    BYTE PTR [eax],al
  44192e:	xchg   edi,eax
  44192f:	inc    DWORD PTR [eax]
  441931:	add    BYTE PTR [ebx-0x55ffff01],dl
  441937:	inc    DWORD PTR [eax]
  441939:	add    BYTE PTR [edi-0x3fffff01],dh
  44193f:	inc    DWORD PTR [eax]
  441941:	add    bl,al
  441943:	inc    DWORD PTR [eax]
  441945:	add    cl,al
  441947:	inc    DWORD PTR [eax]
  441949:	add    al,al
  44194b:	inc    DWORD PTR [eax]
  44194d:	add    BYTE PTR [esi-0x43ffff01],bh
  441953:	inc    DWORD PTR [eax]
  441955:	add    BYTE PTR [edx-0x47ffff01],bh
  44195b:	inc    DWORD PTR [eax]
  44195d:	add    BYTE PTR [edi-0x48ffff01],dh
  441963:	inc    DWORD PTR [eax]
  441965:	add    BYTE PTR [esi-0x49ffff01],dh
  44196b:	inc    DWORD PTR [eax]
  44196d:	add    BYTE PTR [esi-0x49ffff01],dh
  441973:	inc    DWORD PTR [eax]
  441975:	add    BYTE PTR [edi-0x48ffff01],dh
  44197b:	inc    DWORD PTR [eax]
  44197d:	add    BYTE PTR [edi-0x46ffff01],dh
  441983:	inc    DWORD PTR [eax]
  441985:	add    BYTE PTR [ebx-0x43ffff01],bh
  44198b:	inc    DWORD PTR [eax]
  44198d:	add    BYTE PTR [edi-0x3dffff01],bh
  441993:	inc    DWORD PTR [eax]
  441995:	add    bl,al
  441997:	inc    DWORD PTR [eax]
  441999:	add    dl,al
  44199b:	inc    DWORD PTR [eax]
  44199d:	add    BYTE PTR [esi-0x4bffff01],bh
  4419a3:	inc    DWORD PTR [eax]
  4419a5:	add    BYTE PTR [edx-0x6fffff01],ah
  4419ab:	inc    DWORD PTR [eax]
  4419ad:	add    BYTE PTR [edx-0x3bfcfc01],bl
  4419b3:	jmp    0x3d3d:0xa3961e1e
  4419ba:	xor    BYTE PTR [edx+0x3c],ch
  4419bd:	cmp    al,0x3c
  4419bf:	addr16 cmp al,0x3c
  4419c2:	cmp    al,0x59
  4419c4:	cmp    edi,DWORD PTR [ebx]
  4419c6:	cmp    eax,DWORD PTR [ecx+0x3b]
  4419c9:	cmp    edi,DWORD PTR [ebx]
  4419cb:	es cmp eax,0x3f113d3d
  4419d1:	aas    
  4419d2:	aas    
  4419d3:	push   es
  4419d4:	adc    DWORD PTR [ecx],edx
  4419d6:	adc    DWORD PTR [ecx],eax
  4419d8:	add    BYTE PTR [eax],al
  4419da:	add    BYTE PTR [ecx],al
  4419dc:	(bad)  
  4419dd:	(bad)  
  4419de:	inc    DWORD PTR [eax]
  4419e0:	(bad)  
  4419e1:	(bad)  
  4419e2:	inc    DWORD PTR [eax]
  4419e4:	(bad)  
  4419e5:	(bad)  
  4419e6:	inc    DWORD PTR [eax]
  4419e8:	(bad)  
  4419e9:	(bad)  
  4419ea:	inc    DWORD PTR [eax]
  4419ec:	(bad)  
  4419ed:	(bad)  
  4419ee:	inc    DWORD PTR [eax]
  4419f0:	(bad)  
  4419f1:	(bad)  
  4419f2:	inc    DWORD PTR [eax]
  4419f4:	(bad)  
  4419f5:	(bad)  
  4419f6:	inc    DWORD PTR [eax]
  4419f8:	(bad)  
  4419f9:	(bad)  
  4419fa:	inc    DWORD PTR [eax]
  4419fc:	(bad)  
  4419fd:	(bad)  
  4419fe:	inc    DWORD PTR [eax]
  441a00:	add    BYTE PTR [eax],al
  441a02:	add    BYTE PTR [eax],al
  441a04:	cmp    bh,BYTE PTR [edx]
  441a06:	cmp    al,BYTE PTR [ecx]
  441a08:	push   ebx
  441a09:	push   ebx
  441a0a:	push   ebx
  441a0b:	push   es
  441a0c:	cmp    BYTE PTR [eax],bh
  441a0e:	cmp    BYTE PTR [ecx],dl
  441a10:	cmp    al,0x3c
  441a12:	cmp    al,0x22
  441a14:	cmp    al,0x3c
  441a16:	cmp    al,0x35
  441a18:	cmp    al,0x3c
  441a1a:	cmp    al,0x48
  441a1c:	ds xor ecx,DWORD PTR ds:[edi+0x31]
  441a21:	xor    DWORD PTR [ecx+0x71],edx
  441a24:	push   es
  441a25:	push   es
  441a26:	(bad)  
  441a27:	fadd   QWORD PTR [eax]
  441a29:	add    BYTE PTR [ecx-0x5bffff03],ch
  441a2f:	inc    DWORD PTR [eax]
  441a31:	add    BYTE PTR [ebx-0x42ffff01],bh
  441a37:	inc    DWORD PTR [eax]
  441a39:	add    BYTE PTR [edx-0x47ffff01],bh
  441a3f:	inc    DWORD PTR [eax]
  441a41:	add    BYTE PTR [esi-0x4affff01],dh
  441a47:	inc    DWORD PTR [eax]
  441a49:	add    BYTE PTR [edi+edi*8-0x4d0000],dh
  441a50:	add    BYTE PTR [eax],al
  441a52:	mov    bl,0xff
  441a54:	add    BYTE PTR [eax],al
  441a56:	mov    cl,0xff
  441a58:	add    BYTE PTR [eax],al
  441a5a:	mov    al,0xff
  441a5c:	add    BYTE PTR [eax],al
  441a5e:	mov    al,0xff
  441a60:	add    BYTE PTR [eax],al
  441a62:	scas   eax,DWORD PTR es:[edi]
  441a63:	inc    DWORD PTR [eax]
  441a65:	add    BYTE PTR [edi-0x50ffff01],ch
  441a6b:	inc    DWORD PTR [eax]
  441a6d:	add    BYTE PTR [edi-0x50ffff01],ch
  441a73:	inc    DWORD PTR [eax]
  441a75:	add    BYTE PTR [edi-0x50ffff01],ch
  441a7b:	inc    DWORD PTR [eax]
  441a7d:	add    BYTE PTR [eax-0x4effff01],dh
  441a83:	inc    DWORD PTR [eax]
  441a85:	add    BYTE PTR [edx-0x4cffff01],dh
  441a8b:	inc    DWORD PTR [eax]
  441a8d:	add    BYTE PTR [ebp-0x4affff01],dh
  441a93:	inc    DWORD PTR [eax]
  441a95:	add    BYTE PTR [esi-0x48ffff01],dh
  441a9b:	inc    DWORD PTR [eax]
  441a9d:	add    BYTE PTR [ecx-0x42ffff01],bh
  441aa3:	inc    DWORD PTR [eax]
  441aa5:	add    BYTE PTR [esi-0x48ffff01],bh
  441aab:	inc    DWORD PTR [eax]
  441aad:	add    BYTE PTR [edx-0x40ffff01],bl
  441ab3:	call   DWORD PTR [esi]
  441ab5:	push   ss
  441ab6:	sahf   
  441ab7:	mov    dh,0x3c
  441ab9:	cmp    al,0x38
  441abb:	push   esp
  441abc:	cmp    al,0x3c
  441abe:	cmp    al,0x51
  441ac0:	cmp    al,0x3c
  441ac2:	cmp    al,0x42
  441ac4:	cmp    al,0x3c
  441ac6:	cmp    al,0x2e
  441ac8:	cmp    bh,BYTE PTR [edx]
  441aca:	cmp    bl,BYTE PTR [edx]
  441acc:	cmp    eax,0x580b3d3d
  441ad1:	pop    eax
  441ad2:	pop    eax
  441ad3:	add    al,0x1a
  441ad5:	sbb    bl,BYTE PTR [edx]
  441ad7:	add    BYTE PTR [eax],al
  441ad9:	add    BYTE PTR [eax],al
  441adb:	add    bh,bh
  441add:	(bad)  
  441ade:	inc    DWORD PTR [eax]
  441ae0:	(bad)  
  441ae1:	(bad)  
  441ae2:	inc    DWORD PTR [eax]
  441ae4:	(bad)  
  441ae5:	(bad)  
  441ae6:	inc    DWORD PTR [eax]
  441ae8:	(bad)  
  441ae9:	(bad)  
  441aea:	inc    DWORD PTR [eax]
  441aec:	(bad)  
  441aed:	(bad)  
  441aee:	inc    DWORD PTR [eax]
  441af0:	(bad)  
  441af1:	(bad)  
  441af2:	inc    DWORD PTR [eax]
  441af4:	(bad)  
  441af5:	(bad)  
  441af6:	inc    DWORD PTR [eax]
  441af8:	(bad)  
  441af9:	(bad)  
  441afa:	inc    DWORD PTR [eax]
  441afc:	(bad)  
  441afd:	(bad)  
  441afe:	inc    DWORD PTR [eax]
  441b00:	add    BYTE PTR [eax],al
  441b02:	add    BYTE PTR [eax],al
  441b04:	or     al,0xc
  441b06:	or     al,0x0
  441b08:	and    ah,BYTE PTR [edx]
  441b0a:	and    al,BYTE PTR [ebx]
  441b0c:	cmp    eax,0x38093d3d
  441b11:	cmp    BYTE PTR [eax],bh
  441b13:	adc    DWORD PTR [eax],edi
  441b15:	cmp    BYTE PTR [eax],bh
  441b17:	sbb    eax,0x2a3b3d3d
  441b1c:	aas    
  441b1d:	aas    
  441b1e:	xor    BYTE PTR ds:[esp+ebp*1],ch
  441b22:	popa   
  441b23:	pop    esp
  441b24:	add    al,0x4
  441b26:	ret    0xe0
  441b29:	add    BYTE PTR [ebp-0x48ffff01],bh
  441b2f:	inc    DWORD PTR [eax]
  441b31:	add    BYTE PTR [ecx-0x4cffff01],bh
  441b37:	inc    DWORD PTR [eax]
  441b39:	add    BYTE PTR [edx-0x4dffff01],dh
  441b3f:	inc    DWORD PTR [eax]
  441b41:	add    BYTE PTR [eax-0x50ffff01],dh
  441b47:	inc    DWORD PTR [eax]
  441b49:	add    BYTE PTR [esi-0x53ffff01],ch
  441b4f:	inc    DWORD PTR [eax]
  441b51:	add    BYTE PTR [edi+edi*8-0x560000],ch
  441b58:	add    BYTE PTR [eax],al
  441b5a:	test   eax,0xa90000ff
  441b5f:	inc    DWORD PTR [eax]
  441b61:	add    BYTE PTR [eax-0x57ffff01],ch
  441b67:	inc    DWORD PTR [eax]
  441b69:	add    BYTE PTR [eax-0x57ffff01],ch
  441b6f:	inc    DWORD PTR [eax]
  441b71:	add    BYTE PTR [eax-0x56ffff01],ch
  441b77:	inc    DWORD PTR [eax]
  441b79:	add    BYTE PTR [eax-0x55ffff01],ch
  441b7f:	inc    DWORD PTR [eax]
  441b81:	add    BYTE PTR [ebx-0x54ffff01],ch
  441b87:	inc    DWORD PTR [eax]
  441b89:	add    BYTE PTR [edi+edi*8-0x520000],ch
  441b90:	add    BYTE PTR [eax],al
  441b92:	scas   al,BYTE PTR es:[edi]
  441b93:	inc    DWORD PTR [eax]
  441b95:	add    BYTE PTR [edi-0x4effff01],ch
  441b9b:	inc    DWORD PTR [eax]
  441b9d:	add    BYTE PTR [edx-0x4cffff01],dh
  441ba3:	inc    DWORD PTR [eax]
  441ba5:	add    BYTE PTR [ebp-0x45ffff01],dh
  441bab:	inc    DWORD PTR [eax]
  441bad:	add    BYTE PTR [edi+edi*8-0x350000],dh
  441bb4:	adc    BYTE PTR [eax],dl
  441bb6:	test   al,0xb8
  441bb8:	ss ss push ebx
  441bbb:	cmp    bh,BYTE PTR [edi]
  441bbd:	aas    
  441bbe:	inc    ecx
  441bbf:	xor    bh,BYTE PTR [ebx]
  441bc1:	cmp    edi,DWORD PTR [edx]
  441bc3:	es aaa 
  441bc5:	aaa    
  441bc6:	aaa    
  441bc7:	sbb    DWORD PTR [edx],edi
  441bc9:	cmp    bh,BYTE PTR [edx]
  441bcb:	or     al,0x35
  441bcd:	xor    eax,0x15150535
  441bd2:	adc    eax,0x5050502
  441bd7:	add    BYTE PTR [eax],al
  441bd9:	add    BYTE PTR [eax],al
  441bdb:	add    bh,bh
  441bdd:	(bad)  
  441bde:	inc    DWORD PTR [eax]
  441be0:	(bad)  
  441be1:	(bad)  
  441be2:	inc    DWORD PTR [eax]
  441be4:	(bad)  
  441be5:	(bad)  
  441be6:	inc    DWORD PTR [eax]
  441be8:	(bad)  
  441be9:	(bad)  
  441bea:	inc    DWORD PTR [eax]
  441bec:	(bad)  
  441bed:	(bad)  
  441bee:	inc    DWORD PTR [eax]
  441bf0:	(bad)  
  441bf1:	(bad)  
  441bf2:	inc    DWORD PTR [eax]
  441bf4:	(bad)  
  441bf5:	(bad)  
  441bf6:	inc    DWORD PTR [eax]
  441bf8:	(bad)  
  441bf9:	(bad)  
  441bfa:	inc    DWORD PTR [eax]
  441bfc:	(bad)  
  441bfd:	(bad)  
  441bfe:	inc    DWORD PTR [eax]
	...
  441c08:	add    eax,DWORD PTR [ebx]
  441c0a:	add    eax,DWORD PTR [ecx]
  441c0c:	and    esp,DWORD PTR [ebx]
  441c0e:	and    eax,DWORD PTR [ebx]
  441c10:	push   ebx
  441c11:	push   ebx
  441c12:	push   ebx
  441c13:	push   es
  441c14:	dec    esi
  441c15:	dec    esi
  441c16:	dec    esi
  441c17:	or     eax,DWORD PTR [ecx+0x41]
  441c1a:	cmp    al,0x11
  441c1c:	aaa    
  441c1d:	aaa    
  441c1e:	aas    
  441c1f:	adc    DWORD PTR [ecx],ebp
  441c21:	sub    DWORD PTR [ebp+0x41],esi
  441c24:	add    eax,DWORD PTR [ebx]
  441c26:	int    0xda
  441c28:	add    BYTE PTR [eax],al
  441c2a:	retf   
  441c2b:	inc    DWORD PTR [eax]
  441c2d:	add    BYTE PTR [ecx-0x50ffff01],bh
  441c33:	inc    DWORD PTR [eax]
  441c35:	add    BYTE PTR [edx-0x55ffff01],ch
  441c3b:	inc    DWORD PTR [eax]
  441c3d:	add    BYTE PTR [ecx-0x56ffff01],ch
  441c43:	inc    DWORD PTR [eax]
  441c45:	add    BYTE PTR [edi-0x59ffff01],ah
  441c4b:	inc    DWORD PTR [eax]
  441c4d:	add    BYTE PTR [edi+edi*8-0x5d0000],ah
  441c54:	add    BYTE PTR [eax],al
  441c56:	mov    ds:0xa10000ff,al
  441c5b:	inc    DWORD PTR [eax]
  441c5d:	add    BYTE PTR [ebp-0x65ffff01],bl
  441c63:	inc    DWORD PTR [eax]
  441c65:	add    BYTE PTR [ecx-0x66ffff01],bl
  441c6b:	inc    DWORD PTR [eax]
  441c6d:	add    BYTE PTR [ecx-0x66ffff01],bl
  441c73:	inc    DWORD PTR [eax]
  441c75:	add    BYTE PTR [edi+edi*8-0x610000],bl
  441c7c:	add    BYTE PTR [eax],al
  441c7e:	mov    al,ds:0xa10000ff
  441c83:	inc    DWORD PTR [eax]
  441c85:	add    BYTE PTR [ebx-0x5bffff01],ah
  441c8b:	inc    DWORD PTR [eax]
  441c8d:	add    BYTE PTR [esi-0x59ffff01],ah
  441c93:	inc    DWORD PTR [eax]
  441c95:	add    BYTE PTR [edi-0x55ffff01],ah
  441c9b:	inc    DWORD PTR [eax]
  441c9d:	add    BYTE PTR [edx-0x55ffff01],ch
  441ca3:	inc    DWORD PTR [eax]
  441ca5:	add    BYTE PTR [ebx-0x4dffff01],ch
  441cab:	inc    DWORD PTR [eax]
  441cad:	add    BYTE PTR [ebp-0x28ffff01],bh
  441cb3:	dec    DWORD PTR [ebx]
  441cb5:	or     eax,eax
  441cb7:	lods   eax,DWORD PTR ds:[esi]
  441cb8:	daa    
  441cb9:	daa    
  441cba:	jae    0x441cd7
  441cbc:	cmp    BYTE PTR [eax],bh
  441cbe:	cmp    al,0x17
  441cc0:	inc    esi
  441cc1:	inc    esi
  441cc2:	inc    edx
  441cc3:	andnps xmm2,XMMWORD PTR [ebp+0x55]
  441cc7:	or     DWORD PTR [ebx+0x43],eax
  441cca:	inc    ebx
  441ccb:	add    al,0x12
  441ccd:	adc    dl,BYTE PTR [edx]
  441ccf:	add    al,BYTE PTR [eax]
	...
  441cd9:	add    BYTE PTR [eax],al
  441cdb:	add    bh,bh
  441cdd:	(bad)  
  441cde:	inc    DWORD PTR [eax]
  441ce0:	(bad)  
  441ce1:	(bad)  
  441ce2:	inc    DWORD PTR [eax]
  441ce4:	(bad)  
  441ce5:	(bad)  
  441ce6:	inc    DWORD PTR [eax]
  441ce8:	(bad)  
  441ce9:	(bad)  
  441cea:	inc    DWORD PTR [eax]
  441cec:	(bad)  
  441ced:	(bad)  
  441cee:	inc    DWORD PTR [eax]
  441cf0:	(bad)  
  441cf1:	(bad)  
  441cf2:	inc    DWORD PTR [eax]
  441cf4:	(bad)  
  441cf5:	(bad)  
  441cf6:	inc    DWORD PTR [eax]
  441cf8:	(bad)  
  441cf9:	(bad)  
  441cfa:	inc    DWORD PTR [eax]
  441cfc:	(bad)  
  441cfd:	(bad)  
  441cfe:	inc    DWORD PTR [eax]
	...
  441d0c:	push   es
  441d0d:	push   es
  441d0e:	push   es
  441d0f:	add    BYTE PTR [edx],bh
  441d11:	cmp    bh,BYTE PTR [edx]
  441d13:	add    DWORD PTR ds:0x3f033535,esi
  441d19:	aas    
  441d1a:	xor    eax,0x3b494903
  441d1f:	add    BYTE PTR [ecx],dh
  441d21:	xor    DWORD PTR [ebp+0x21],esp
  441d24:	add    eax,DWORD PTR [ebx]
  441d26:	fadd   st(5),st
  441d28:	add    BYTE PTR [eax],al
  441d2a:	sar    bl,1
  441d2c:	add    BYTE PTR [eax],al
  441d2e:	mov    bl,0xff
  441d30:	add    BYTE PTR [eax],al
  441d32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441d33:	inc    DWORD PTR [eax]
  441d35:	add    BYTE PTR [edi+edi*8-0x5e0000],ah
  441d3c:	add    BYTE PTR [eax],al
  441d3e:	mov    eax,ds:0xa00000ff
  441d43:	inc    DWORD PTR [eax]
  441d45:	add    BYTE PTR [esi-0x62ffff01],bl
  441d4b:	inc    DWORD PTR [eax]
  441d4d:	add    BYTE PTR [ebx-0x65ffff01],bl
  441d53:	inc    DWORD PTR [eax]
  441d55:	add    BYTE PTR [esi-0x6affff01],dl
  441d5b:	dec    DWORD PTR [esp+ecx*1]
  441d5e:	fwait
  441d5f:	call   FWORD PTR [edx]
  441d61:	sbb    ah,BYTE PTR [edx-0x58dbdb01]
  441d67:	jmp    DWORD PTR [edi]
  441d69:	daa    
  441d6a:	test   eax,0xa82525ff
  441d6f:	jmp    DWORD PTR [ecx]
  441d71:	and    DWORD PTR [ebp-0x62f0f001],esp
  441d77:	inc    DWORD PTR [eax]
  441d79:	add    BYTE PTR [esi-0x6cffff01],dl
  441d7f:	inc    DWORD PTR [eax]
  441d81:	add    BYTE PTR [ebp-0x67ffff01],dl
  441d87:	inc    DWORD PTR [eax]
  441d89:	add    BYTE PTR [ebx-0x62ffff01],bl
  441d8f:	inc    DWORD PTR [eax]
  441d91:	add    BYTE PTR [esi-0x60ffff01],bl
  441d97:	inc    DWORD PTR [eax]
  441d99:	add    BYTE PTR [ecx-0x5dffff01],ah
  441d9f:	inc    DWORD PTR [eax]
  441da1:	add    BYTE PTR [edx-0x5bffff01],ah
  441da7:	inc    DWORD PTR [eax]
  441da9:	add    BYTE PTR [eax-0x47ffff01],ch
  441daf:	inc    DWORD PTR [eax]
  441db1:	add    bl,ah
  441db3:	cli    
  441db4:	or     eax,0x2f8dbb0d
  441db9:	das    
  441dba:	push   ecx
  441dbb:	add    BYTE PTR [eax+0x48],cl
  441dbe:	ds add eax,0x3303636
  441dc4:	cmp    al,0x3c
  441dc6:	cmp    al,0x2
  441dc8:	sub    DWORD PTR [ecx],ebp
  441dca:	sub    DWORD PTR [ecx],eax
	...
  441ddc:	(bad)  
  441ddd:	(bad)  
  441dde:	inc    DWORD PTR [eax]
  441de0:	(bad)  
  441de1:	(bad)  
  441de2:	inc    DWORD PTR [eax]
  441de4:	(bad)  
  441de5:	(bad)  
  441de6:	inc    DWORD PTR [eax]
  441de8:	(bad)  
  441de9:	(bad)  
  441dea:	inc    DWORD PTR [eax]
  441dec:	(bad)  
  441ded:	(bad)  
  441dee:	inc    DWORD PTR [eax]
  441df0:	(bad)  
  441df1:	(bad)  
  441df2:	inc    DWORD PTR [eax]
  441df4:	(bad)  
  441df5:	(bad)  
  441df6:	inc    DWORD PTR [eax]
  441df8:	(bad)  
  441df9:	(bad)  
  441dfa:	inc    DWORD PTR [eax]
  441dfc:	(bad)  
  441dfd:	(bad)  
  441dfe:	inc    DWORD PTR [eax]
	...
  441e10:	add    BYTE PTR [eax],al
  441e12:	add    BYTE PTR [ecx],al
  441e14:	add    BYTE PTR [eax],al
  441e16:	add    BYTE PTR [eax],al
  441e18:	sub    al,0x2c
  441e1a:	cmp    al,BYTE PTR [eax]
  441e1c:	push   ecx
  441e1d:	push   ecx
  441e1e:	pop    edi
  441e1f:	add    eax,0x29602f2f
  441e24:	add    eax,DWORD PTR [ebx]
  441e26:	fnstsw WORD PTR [eax+eax*1+0xf8cf00]
  441e2d:	add    BYTE PTR [esi-0x60ffff01],ch
  441e33:	inc    DWORD PTR [eax]
  441e35:	add    BYTE PTR [edi+edi*8-0x650000],bl
  441e3c:	add    BYTE PTR [eax],al
  441e3e:	call   0xff:0x980000ff
  441e45:	add    BYTE PTR [edi-0x69ffff01],dl
  441e4b:	inc    DWORD PTR [eax]
  441e4d:	add    BYTE PTR [edi+edi*8-0x6e0000],dl
  441e54:	pop    es
  441e55:	pop    es
  441e56:	xchg   edx,eax
  441e57:	call   FWORD PTR [eax]
  441e59:	sbb    BYTE PTR [edi+edi*8-0x50bfc0],bl
  441e60:	push   edx
  441e61:	push   edx
  441e62:	mov    eax,0xbd5d5dff
  441e67:	jmp    DWORD PTR [ecx+0x61]
  441e6a:	mov    esi,0xbe6161ff
  441e6f:	jmp    DWORD PTR [ecx+0x61]
  441e72:	mov    edi,0xb14545ff
  441e77:	jmp    DWORD PTR ds:0x10ffa125
  441e7d:	adc    BYTE PTR [edi-0x6bf5f501],dl
  441e83:	inc    DWORD PTR [esi]
  441e85:	push   es
  441e86:	xchg   esp,eax
  441e87:	inc    DWORD PTR [ecx]
  441e89:	add    DWORD PTR [edi+edi*8-0x6b0000],edx
  441e90:	add    BYTE PTR [eax],al
  441e92:	xchg   edi,eax
  441e93:	inc    DWORD PTR [eax]
  441e95:	add    BYTE PTR [eax-0x66ffff01],bl
  441e9b:	inc    DWORD PTR [eax]
  441e9d:	add    BYTE PTR [edx-0x64ffff01],bl
  441ea3:	inc    DWORD PTR [eax]
  441ea5:	add    BYTE PTR [ebp-0x5cffff01],bl
  441eab:	inc    DWORD PTR [eax]
  441ead:	add    BYTE PTR [edi+edi*8-0xc1b0000],dh
  441eb4:	push   cs
  441eb5:	push   cs
  441eb6:	test   eax,0x38373783
  441ebb:	or     ecx,DWORD PTR [esi+0x4e]
  441ebe:	addr16 add al,0xf
  441ec1:	movlps QWORD PTR [eax],xmm0
	...
  441edc:	(bad)  
  441edd:	(bad)  
  441ede:	inc    DWORD PTR [eax]
  441ee0:	(bad)  
  441ee1:	(bad)  
  441ee2:	inc    DWORD PTR [eax]
  441ee4:	(bad)  
  441ee5:	(bad)  
  441ee6:	inc    DWORD PTR [eax]
  441ee8:	(bad)  
  441ee9:	(bad)  
  441eea:	inc    DWORD PTR [eax]
  441eec:	(bad)  
  441eed:	(bad)  
  441eee:	inc    DWORD PTR [eax]
  441ef0:	(bad)  
  441ef1:	(bad)  
  441ef2:	inc    DWORD PTR [eax]
  441ef4:	(bad)  
  441ef5:	(bad)  
  441ef6:	inc    DWORD PTR [eax]
  441ef8:	(bad)  
  441ef9:	(bad)  
  441efa:	inc    DWORD PTR [eax]
  441efc:	(bad)  
  441efd:	(bad)  
  441efe:	inc    DWORD PTR [eax]
	...
  441f18:	add    al,BYTE PTR [edx]
  441f1a:	push   0x2
  441f1c:	add    eax,DWORD PTR [ebx]
  441f1e:	into   
  441f1f:	xor    eax,0x8cc00303
  441f24:	add    BYTE PTR [eax],al
  441f26:	(bad)  
  441f28:	add    BYTE PTR [eax],al
  441f2a:	enter  0xfd,0x0
  441f2e:	stos   DWORD PTR es:[edi],eax
  441f2f:	inc    DWORD PTR [eax]
  441f31:	add    BYTE PTR [ecx-0x6affff01],bl
  441f37:	inc    DWORD PTR [eax]
  441f39:	add    BYTE PTR [edi+edi*8-0x6c0000],dl
  441f40:	add    BYTE PTR [eax],al
  441f42:	xchg   edx,eax
  441f43:	inc    DWORD PTR [eax]
  441f45:	add    BYTE PTR [edi-0x71ffff01],cl
  441f4b:	inc    DWORD PTR [eax]
  441f4d:	add    BYTE PTR [ebx-0x74fcfc01],cl
  441f53:	(bad)  
  441f54:	cmp    DWORD PTR [ecx],edi
  441f56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  441f57:	(bad)  
  441f58:	js     0x441fd2
  441f5a:	enter  0x7fff,0x7f
  441f5e:	int3   
  441f5f:	call   DWORD PTR [edx+0x52]
  441f62:	mov    bl,0xff
  441f64:	sub    al,0x2c
  441f66:	pushf  
  441f67:	call   FWORD PTR ds:0x2aff931d
  441f6d:	sub    bl,BYTE PTR [edx-0x4dafaf01]
  441f73:	push   DWORD PTR [edi+0x77]
  441f76:	enter  0x7fff,0x7f
  441f7a:	int    0xff
  441f7c:	push   0x6a
  441f7e:	sar    edi,0x4d
  441f81:	dec    ebp
  441f82:	mov    cl,0xff
  441f84:	sub    al,0x2c
  441f86:	mov    eax,ds:0x900909ff
  441f8b:	inc    DWORD PTR [eax]
  441f8d:	add    BYTE PTR [ebx-0x70ffff01],cl
  441f93:	inc    DWORD PTR [eax]
  441f95:	add    BYTE PTR [eax-0x6cffff01],dl
  441f9b:	inc    DWORD PTR [eax]
  441f9d:	add    BYTE PTR [edi+edi*8-0x6c0000],dl
  441fa4:	add    BYTE PTR [eax],al
  441fa6:	xchg   edi,eax
  441fa7:	inc    DWORD PTR [eax]
  441fa9:	add    BYTE PTR [esi-0x4affff01],bl
  441faf:	inc    DWORD PTR [eax]
  441fb1:	add    dl,dl
  441fb3:	cli    
  441fb4:	add    DWORD PTR [ecx],eax
  441fb6:	rol    ecx,1
  441fb8:	add    eax,DWORD PTR [ebx]
  441fba:	mov    ebx,0xbf030364
  441fbf:	sbb    eax,0x270101
	...
  441fdc:	(bad)  
  441fdd:	(bad)  
  441fde:	inc    DWORD PTR [eax]
  441fe0:	(bad)  
  441fe1:	(bad)  
  441fe2:	inc    DWORD PTR [eax]
  441fe4:	(bad)  
  441fe5:	(bad)  
  441fe6:	inc    DWORD PTR [eax]
  441fe8:	(bad)  
  441fe9:	(bad)  
  441fea:	inc    DWORD PTR [eax]
  441fec:	(bad)  
  441fed:	(bad)  
  441fee:	inc    DWORD PTR [eax]
  441ff0:	(bad)  
  441ff1:	(bad)  
  441ff2:	inc    DWORD PTR [eax]
  441ff4:	(bad)  
  441ff5:	(bad)  
  441ff6:	inc    DWORD PTR [eax]
  441ff8:	(bad)  
  441ff9:	(bad)  
  441ffa:	inc    DWORD PTR [eax]
  441ffc:	(bad)  
  441ffd:	(bad)  
  441ffe:	inc    DWORD PTR [eax]
  442000:	add    BYTE PTR [eax],al
  442002:	mov    eax,DWORD PTR [eax]
  442004:	add    BYTE PTR [eax],al
  442006:	mov    eax,DWORD PTR [eax]
  442008:	add    BYTE PTR [eax],al
  44200a:	mov    eax,DWORD PTR [eax]
  44200c:	add    BYTE PTR [eax],al
  44200e:	mov    eax,DWORD PTR [eax]
  442010:	add    BYTE PTR [eax],al
  442012:	mov    eax,DWORD PTR [eax]
  442014:	add    BYTE PTR [eax],al
  442016:	mov    WORD PTR [esi],ds
  442018:	pop    es
  442019:	pop    es
  44201a:	mov    bl,0x85
  44201c:	or     al,0xc
  44201e:	rcl    ebx,1
  442020:	add    eax,DWORD PTR [ebx]
  442022:	enter  0xea,0x0
  442026:	sar    cl,cl
  442028:	add    BYTE PTR [eax],al
  44202a:	enter  0xff,0x0
  44202e:	stos   DWORD PTR es:[edi],eax
  44202f:	inc    DWORD PTR [eax]
  442031:	add    BYTE PTR [edi+edi*8-0x720000],dl
  442038:	add    BYTE PTR [eax],al
  44203a:	(bad)  
  44203b:	inc    DWORD PTR [eax]
  44203d:	add    BYTE PTR [edi+edi*8-0x760000],cl
  442044:	add    BYTE PTR [eax],al
  442046:	mov    bh,bh
  442048:	add    BYTE PTR [eax],al
  44204a:	xchg   bh,bh
  44204c:	add    BYTE PTR [eax],al
  44204e:	jge    0x44204f
  442050:	xor    eax,0x77ff9f35
  442055:	ja     0x44201b
  442057:	(bad)  
  442058:	jle    0x4420d8
  44205a:	enter  0x55ff,0x55
  44205e:	scas   eax,DWORD PTR es:[edi]
  44205f:	call   DWORD PTR [esp+edx*1]
  442062:	xchg   bh,bh
  442064:	add    BYTE PTR [eax],al
  442066:	jae    0x442067
  442068:	add    BYTE PTR [eax],al
  44206a:	jbe    0x44206b
  44206c:	push   es
  44206d:	push   es
  44206e:	jge    0x44206f
  442070:	adc    dl,BYTE PTR [edx]
  442072:	test   bh,bh
  442074:	ds mov al,ds:0xc27474ff
  44207b:	dec    DWORD PTR [ebx+0x71ffd08b]
  442081:	jno    0x442045
  442083:	jmp    FWORD PTR [eax]
  442085:	sub    BYTE PTR [edi-0x76f5f501],dl
  44208b:	inc    DWORD PTR [edx]
  44208d:	add    al,BYTE PTR [esi-0x79ffff01]
  442093:	inc    DWORD PTR [eax]
  442095:	add    BYTE PTR [ecx-0x74ffff01],cl
  44209b:	inc    DWORD PTR [eax]
  44209d:	add    BYTE PTR [edi+edi*8-0x730000],cl
  4420a4:	add    BYTE PTR [eax],al
  4420a6:	(bad)  
  4420a7:	inc    DWORD PTR [eax]
  4420a9:	add    BYTE PTR [edx-0x49ffff01],bl
  4420af:	inc    DWORD PTR [eax]
  4420b1:	add    ch,cl
  4420b3:	inc    BYTE PTR [eax]
  4420b5:	add    bh,cl
  4420b7:	hlt    
  4420b8:	push   es
  4420b9:	push   es
  4420ba:	(bad)  
  4420bb:	loopne 0x4420cc
  4420bd:	bswap  ebp
  4420bf:	mov    ebp,0x479e0303
  4420c4:	add    BYTE PTR [eax],al
  4420c6:	mov    es,WORD PTR [eax+eax*1]
  4420c9:	add    BYTE PTR [edi-0x71000000],cl
  4420cf:	add    BYTE PTR [eax],al
  4420d1:	add    BYTE PTR [edi-0x71000000],cl
  4420d7:	add    BYTE PTR [eax],al
  4420d9:	add    BYTE PTR [edi-0x100],cl
  4420df:	add    bh,bh
  4420e1:	(bad)  
  4420e2:	inc    DWORD PTR [eax]
  4420e4:	(bad)  
  4420e5:	(bad)  
  4420e6:	inc    DWORD PTR [eax]
  4420e8:	(bad)  
  4420e9:	(bad)  
  4420ea:	inc    DWORD PTR [eax]
  4420ec:	(bad)  
  4420ed:	(bad)  
  4420ee:	inc    DWORD PTR [eax]
  4420f0:	(bad)  
  4420f1:	(bad)  
  4420f2:	inc    DWORD PTR [eax]
  4420f4:	(bad)  
  4420f5:	(bad)  
  4420f6:	inc    DWORD PTR [eax]
  4420f8:	(bad)  
  4420f9:	(bad)  
  4420fa:	inc    DWORD PTR [eax]
  4420fc:	(bad)  
  4420fd:	(bad)  
  4420fe:	inc    DWORD PTR [eax]
  442100:	add    BYTE PTR [eax],al
  442102:	enter  0x0,0x0
  442106:	enter  0x0,0x0
  44210a:	enter  0x0,0x0
  44210e:	enter  0x1,0x0
  442112:	enter  0xd18,0xd
  442116:	rcl    DWORD PTR [ebx+eiz*1+0x1decd523],1
  44211d:	sbb    eax,0x303ffc8
  442122:	mov    esp,0xc70000ff
  442127:	inc    DWORD PTR [eax]
  442129:	add    al,cl
  44212b:	inc    DWORD PTR [eax]
  44212d:	add    BYTE PTR [ebp-0x70ffff01],ch
  442133:	inc    DWORD PTR [eax]
  442135:	add    BYTE PTR [esi-0x7bffff01],al
  44213b:	inc    DWORD PTR [eax]
  44213d:	add    BYTE PTR [ebx-0x7effff01],al
  442143:	inc    DWORD PTR [eax]
  442145:	add    BYTE PTR [edi-0x1],bh
  442148:	add    DWORD PTR [ecx],eax
  44214a:	jle    0x44214b
  44214c:	or     ecx,DWORD PTR [ebx]
  44214e:	jle    0x44214f
  442150:	pop    edx
  442151:	pop    edx
  442152:	scas   eax,DWORD PTR es:[edi]
  442153:	call   DWORD PTR [ebx+0x71ffd193]
  442159:	jno    0x442117
  44215b:	jmp    FWORD PTR [edx]
  44215d:	sub    cl,BYTE PTR [esi-0x74d9d901]
  442163:	(bad)  
  442164:	cmp    al,0x3c
  442166:	cwde   
  442167:	jmp    FWORD PTR [ebx]
  442169:	sub    ecx,DWORD PTR [esi+0x700000ff]
  44216f:	inc    DWORD PTR [eax]
  442171:	add    BYTE PTR [ebp-0x1],ch
  442174:	or     DWORD PTR [ecx],ecx
  442176:	jae    0x442177
  442178:	dec    ebx
  442179:	dec    ebx
  44217a:	mov    ds:0xcd8c8cff,eax
  44217f:	(bad)  
  442180:	jge    0x4421ff
  442182:	(bad)  
  442183:	(bad)  
  442184:	cmp    DWORD PTR [ecx],edi
  442186:	fwait
  442187:	dec    DWORD PTR [ecx]
  442189:	or     DWORD PTR [edi-0x1],edi
  44218c:	add    BYTE PTR [eax],al
  44218e:	jns    0x44218f
  442190:	add    BYTE PTR [eax],al
  442192:	jg     0x442193
  442194:	add    BYTE PTR [eax],al
  442196:	cmp    bh,0x0
  442199:	add    BYTE PTR [edx-0x7cffff01],al
  44219f:	inc    DWORD PTR [eax]
  4421a1:	add    BYTE PTR [ebp-0x76ffff01],al
  4421a7:	inc    DWORD PTR [eax]
  4421a9:	add    BYTE PTR [edi-0x45ffff01],dl
  4421af:	inc    DWORD PTR [eax]
  4421b1:	add    bl,cl
  4421b3:	inc    DWORD PTR [ecx]
  4421b5:	add    esp,eax
  4421b7:	dec    DWORD PTR [ecx]
  4421b9:	or     DWORD PTR [edi+edi*8-0x232dadb],edi
  4421c0:	sbb    DWORD PTR [ecx],ebx
  4421c2:	aad    0xc4
  4421c4:	adc    dl,BYTE PTR [edx]
  4421c6:	(bad)  
  4421c7:	cmp    DWORD PTR [ebx],edx
  4421c9:	adc    edx,edi
  4421cb:	add    BYTE PTR [ebx],dl
  4421cd:	adc    edx,edi
  4421cf:	add    BYTE PTR [ebx],dl
  4421d1:	adc    edx,edi
  4421d3:	add    BYTE PTR [ebx],dl
  4421d5:	adc    edx,edi
  4421d7:	add    BYTE PTR [ebx],dl
  4421d9:	adc    edx,edi
  4421db:	add    bh,bh
  4421dd:	(bad)  
  4421de:	inc    DWORD PTR [eax]
  4421e0:	(bad)  
  4421e1:	(bad)  
  4421e2:	inc    DWORD PTR [eax]
  4421e4:	(bad)  
  4421e5:	(bad)  
  4421e6:	inc    DWORD PTR [eax]
  4421e8:	(bad)  
  4421e9:	(bad)  
  4421ea:	inc    DWORD PTR [eax]
  4421ec:	(bad)  
  4421ed:	(bad)  
  4421ee:	inc    DWORD PTR [eax]
  4421f0:	(bad)  
  4421f1:	(bad)  
  4421f2:	inc    DWORD PTR [eax]
  4421f4:	(bad)  
  4421f5:	(bad)  
  4421f6:	inc    DWORD PTR [eax]
  4421f8:	(bad)  
  4421f9:	(bad)  
  4421fa:	inc    DWORD PTR [eax]
  4421fc:	(bad)  
  4421fd:	(bad)  
  4421fe:	inc    DWORD PTR [eax]
  442200:	add    al,BYTE PTR [edx]
  442202:	mov    eax,0xb8020200
  442207:	add    BYTE PTR [edx],al
  442209:	add    bh,BYTE PTR [eax-0x47fdfe00]
  44220f:	push   cs
  442210:	add    al,BYTE PTR [edx]
  442212:	mov    eax,0xcb272765
  442217:	hlt    
  442218:	xor    al,0x34
  44221a:	sar    edi,1
  44221c:	sbb    DWORD PTR [ecx],ebx
  44221e:	ret    0xff
  442221:	add    BYTE PTR [ebx-0x42ffff01],dh
  442227:	inc    DWORD PTR [eax]
  442229:	add    bh,al
  44222b:	inc    DWORD PTR [eax]
  44222d:	add    BYTE PTR [edi-0x72ffff01],ch
  442233:	inc    DWORD PTR [eax]
  442235:	add    BYTE PTR [eax+0x7c0000ff],al
  44223b:	inc    DWORD PTR [eax]
  44223d:	add    BYTE PTR [edx-0x1],bh
  442240:	add    BYTE PTR [eax],al
  442242:	js     0x442243
  442244:	add    BYTE PTR [eax],al
  442246:	jne    0x442247
  442248:	add    DWORD PTR [ecx],eax
  44224a:	jne    0x44224b
  44224c:	pop    ss
  44224d:	pop    ss
  44224e:	cmp    edi,0xffb06363
  442254:	xchg   ecx,eax
  442255:	xchg   ecx,eax
  442256:	int    0xff
  442258:	outs   dx,DWORD PTR ds:[esi]
  442259:	outs   dx,DWORD PTR ds:[esi]
  44225a:	mov    dh,0xff
  44225c:	das    
  44225d:	das    
  44225e:	mov    edi,edi
  442260:	arpl   WORD PTR [ebx-0x53],sp
  442263:	call   DWORD PTR [ecx+0x64ffcd91]
  442269:	lods   eax,DWORD PTR fs:[esi]
  44226b:	dec    DWORD PTR [ecx]
  44226d:	or     DWORD PTR [eax-0x1],esi
  442270:	add    DWORD PTR [ecx],eax
  442272:	imul   edi,edi,0x0
  442275:	add    BYTE PTR [esi-0x1],bl
  442278:	xor    BYTE PTR [eax],dh
  44227a:	mov    edi,edi
  44227c:	jle    0x4422fc
  44227e:	sar    bh,0x7f
  442281:	jg     0x442244
  442283:	jmp    DWORD PTR [ebp+0x65]
  442286:	mov    cl,0xff
  442288:	and    DWORD PTR [ecx],esp
  44228a:	xchg   edi,edi
  44228c:	add    BYTE PTR [eax],al
  44228e:	jno    0x44228f
  442290:	add    BYTE PTR [eax],al
  442292:	je     0x442293
  442294:	add    BYTE PTR [eax],al
  442296:	ja     0x442297
  442298:	add    BYTE PTR [eax],al
  44229a:	jns    0x44229b
  44229c:	add    BYTE PTR [eax],al
  44229e:	jp     0x44229f
  4422a0:	add    BYTE PTR [eax],al
  4422a2:	jge    0x4422a3
  4422a4:	add    BYTE PTR [eax],al
  4422a6:	test   edi,edi
  4422a8:	add    BYTE PTR [eax],al
  4422aa:	xchg   edi,eax
  4422ab:	inc    DWORD PTR [eax]
  4422ad:	add    BYTE PTR [ebp-0x38ffff01],bh
  4422b3:	inc    DWORD PTR [eax]
  4422b5:	add    BYTE PTR [ecx-0x4afbfb01],bh
  4422bb:	jmp    DWORD PTR [ebx]
  4422bd:	and    ecx,eax
  4422bf:	jmp    FWORD PTR [esi]
  4422c1:	cs sar ch,1
  4422c4:	xor    DWORD PTR [ecx],esi
  4422c6:	shl    BYTE PTR [ebp+0x30],cl
  4422c9:	xor    cl,dl
  4422cb:	add    BYTE PTR [eax],dh
  4422cd:	xor    cl,dl
  4422cf:	add    BYTE PTR [eax],dh
  4422d1:	xor    cl,dl
  4422d3:	add    BYTE PTR [eax],dh
  4422d5:	xor    cl,dl
  4422d7:	add    BYTE PTR [eax],dh
  4422d9:	xor    cl,dl
  4422db:	add    bh,bh
  4422dd:	(bad)  
  4422de:	inc    DWORD PTR [eax]
  4422e0:	(bad)  
  4422e1:	(bad)  
  4422e2:	inc    DWORD PTR [eax]
  4422e4:	(bad)  
  4422e5:	(bad)  
  4422e6:	inc    DWORD PTR [eax]
  4422e8:	(bad)  
  4422e9:	(bad)  
  4422ea:	inc    DWORD PTR [eax]
  4422ec:	(bad)  
  4422ed:	(bad)  
  4422ee:	inc    DWORD PTR [eax]
  4422f0:	(bad)  
  4422f1:	(bad)  
  4422f2:	inc    DWORD PTR [eax]
  4422f4:	(bad)  
  4422f5:	(bad)  
  4422f6:	inc    DWORD PTR [eax]
  4422f8:	(bad)  
  4422f9:	(bad)  
  4422fa:	inc    DWORD PTR [eax]
  4422fc:	(bad)  
  4422fd:	(bad)  
  4422fe:	inc    DWORD PTR [eax]
  442300:	or     al,0xc
  442302:	mov    ecx,0xb90c0c00
  442307:	add    BYTE PTR [esp+ecx*1],cl
  44230a:	mov    ecx,0xb80b0b00
  44230f:	and    BYTE PTR [esp+ecx*1],cl
  442312:	mov    ecx,0xd13838b7
  442317:	imul   BYTE PTR [esp+ebp*1]
  44231a:	retf   
  44231b:	dec    DWORD PTR [edx]
  44231d:	or     dh,BYTE PTR [esi-0x51ffff01]
  442323:	inc    DWORD PTR [eax]
  442325:	add    BYTE PTR [edi+edi*8-0x3b0000],dh
  44232c:	add    BYTE PTR [eax],al
  44232e:	mov    bl,0xff
  442330:	add    BYTE PTR [eax],al
  442332:	mov    ?,edi
  442334:	add    BYTE PTR [eax],al
  442336:	jl     0x442337
  442338:	add    BYTE PTR [eax],al
  44233a:	jbe    0x44233b
  44233c:	add    BYTE PTR [eax],al
  44233e:	jae    0x44233f
  442340:	add    BYTE PTR [eax],al
  442342:	jno    0x442343
  442344:	add    BYTE PTR [eax],al
  442346:	outs   dx,DWORD PTR ds:[esi]
  442347:	inc    DWORD PTR [ecx]
  442349:	add    DWORD PTR [edi-0x1],ebp
  44234c:	adc    dl,BYTE PTR [edx]
  44234e:	js     0x44234f
  442350:	pusha  
  442351:	pusha  
  442352:	stos   BYTE PTR es:[edi],al
  442353:	dec    DWORD PTR [esi+0x77ffc88e]
  442359:	ja     0x442315
  44235b:	call   DWORD PTR [esi+0x56]
  44235e:	mov    ds:0xbb7979ff,al
  442363:	dec    DWORD PTR [edi+0x5bffc98f]
  442369:	pop    ebx
  44236a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44236b:	dec    DWORD PTR [esp+ecx*1]
  44236e:	ins    DWORD PTR es:[edi],dx
  44236f:	inc    DWORD PTR [ecx]
  442371:	add    DWORD PTR [esi-0x1],esp
  442374:	add    DWORD PTR [ecx],eax
  442376:	pop    edi
  442377:	push   DWORD PTR [edx]
  442379:	xor    cl,BYTE PTR [ecx-0x478a8a01]
  44237f:	inc    DWORD PTR [esp+eax*4-0x7777003e]
  442386:	vorps  ymm2,ymm0,YMMWORD PTR [esi-0x5c]
  44238b:	call   FWORD PTR [edx]
  44238d:	sbb    bh,BYTE PTR [edi-0x1]
  442390:	add    al,0x4
  442392:	outs   dx,DWORD PTR ds:[esi]
  442393:	inc    DWORD PTR [eax]
  442395:	add    BYTE PTR [eax-0x1],dh
  442398:	add    BYTE PTR [eax],al
  44239a:	jb     0x44239b
  44239c:	add    BYTE PTR [eax],al
  44239e:	jb     0x44239f
  4423a0:	add    BYTE PTR [eax],al
  4423a2:	jbe    0x4423a3
  4423a4:	add    BYTE PTR [eax],al
  4423a6:	cmp    edi,0x0
  4423a9:	add    BYTE PTR [edx-0x40ffff01],bl
  4423af:	inc    DWORD PTR [eax]
  4423b1:	add    BYTE PTR [edi-0x50ffff01],bh
  4423b7:	inc    DWORD PTR [edx]
  4423b9:	add    dh,BYTE PTR [eax-0x45efef01]
  4423bf:	push   DWORD PTR [edx]
  4423c1:	xor    cl,dh
  4423c3:	(bad)  
  4423c4:	aas    
  4423c5:	aas    
  4423c6:	(bad)  
  4423c7:	outs   dx,DWORD PTR ds:[esi]
  4423c8:	cmp    al,0x3c
  4423ca:	aam    0x0
  4423cc:	cmp    al,0x3c
  4423ce:	aam    0x0
  4423d0:	cmp    al,0x3c
  4423d2:	aam    0x0
  4423d4:	cmp    al,0x3c
  4423d6:	aam    0x0
  4423d8:	cmp    al,0x3c
  4423da:	aam    0x0
  4423dc:	(bad)  
  4423dd:	(bad)  
  4423de:	inc    DWORD PTR [eax]
  4423e0:	(bad)  
  4423e1:	(bad)  
  4423e2:	inc    DWORD PTR [eax]
  4423e4:	(bad)  
  4423e5:	(bad)  
  4423e6:	inc    DWORD PTR [eax]
  4423e8:	(bad)  
  4423e9:	(bad)  
  4423ea:	inc    DWORD PTR [eax]
  4423ec:	(bad)  
  4423ed:	(bad)  
  4423ee:	inc    DWORD PTR [eax]
  4423f0:	(bad)  
  4423f1:	(bad)  
  4423f2:	inc    DWORD PTR [eax]
  4423f4:	(bad)  
  4423f5:	(bad)  
  4423f6:	inc    DWORD PTR [eax]
  4423f8:	(bad)  
  4423f9:	(bad)  
  4423fa:	inc    DWORD PTR [eax]
  4423fc:	(bad)  
  4423fd:	(bad)  
  4423fe:	inc    DWORD PTR [eax]
  442400:	pop    ss
  442401:	pop    ss
  442402:	mov    ecx,0xb9171700
  442407:	add    BYTE PTR [edi],dl
  442409:	pop    ss
  44240a:	mov    ecx,0xb8161600
  44240f:	daa    
  442410:	pop    ss
  442411:	pop    ss
  442412:	mov    ecx,0xcf3b3bd9
  442417:	std    
  442418:	es es (bad) 
  44241b:	inc    DWORD PTR ds:0xffaf05
  442421:	add    BYTE PTR [ecx-0x54ffff01],ch
  442427:	inc    DWORD PTR [eax]
  442429:	add    cl,al
  44242b:	inc    DWORD PTR [eax]
  44242d:	add    BYTE PTR [esi-0x6dffff01],dh
  442433:	inc    DWORD PTR [eax]
  442435:	add    BYTE PTR [eax-0x1],bh
  442438:	add    BYTE PTR [eax],al
  44243a:	outs   dx,BYTE PTR ds:[esi]
  44243b:	inc    DWORD PTR [eax]
  44243d:	add    BYTE PTR [ebx-0x1],ch
  442440:	add    BYTE PTR [eax],al
  442442:	ins    BYTE PTR es:[edi],dx
  442443:	inc    DWORD PTR [ecx]
  442445:	add    DWORD PTR [ebp-0x1],ebp
  442448:	add    DWORD PTR [ecx],eax
  44244a:	ins    DWORD PTR es:[edi],dx
  44244b:	inc    DWORD PTR [edx]
  44244d:	add    ch,BYTE PTR [ebx-0x1]
  442450:	pop    ebx
  442451:	pop    ebx
  442452:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  442453:	dec    DWORD PTR [edi+0x7fffc88f]
  442459:	jg     0x442418
  44245b:	(bad)  
  44245c:	jl     0x4424da
  44245e:	mov    esp,0xbb7c7cff
  442463:	(bad)  
  442464:	jle    0x4424e4
  442466:	mov    esp,0x924444ff
  44246b:	inc    DWORD PTR [eax]
  44246d:	add    BYTE PTR [eax-0x1],bl
  442470:	add    BYTE PTR [eax],al
  442472:	pop    esp
  442473:	dec    DWORD PTR [ecx]
  442475:	or     DWORD PTR [edi-0x1],esp
  442478:	dec    ebp
  442479:	dec    ebp
  44247a:	call   0x87ff:0xc38787ff
  442481:	xchg   ebx,eax
  442483:	inc    DWORD PTR [edi-0x75003c79]
  442489:	mov    al,ch
  44248b:	jmp    DWORD PTR [esi+0x66]
  44248e:	scas   al,BYTE PTR es:[edi]
  44248f:	jmp    FWORD PTR [edx]
  442491:	sub    cl,BYTE PTR [eax+0x6f0303ff]
  442497:	inc    DWORD PTR [eax]
  442499:	add    BYTE PTR [edi+edi*8+0x0],ch
  44249d:	add    BYTE PTR [edx-0x1],ch
  4424a0:	add    BYTE PTR [eax],al
  4424a2:	outs   dx,DWORD PTR ds:[esi]
  4424a3:	inc    DWORD PTR [eax]
  4424a5:	add    BYTE PTR [edx-0x5fffff01],al
  4424ab:	inc    DWORD PTR [eax]
  4424ad:	add    BYTE PTR [edi-0x48ffff01],bh
  4424b3:	inc    DWORD PTR [eax]
  4424b5:	add    BYTE PTR [edi-0x54fefe01],ah
  4424bb:	dec    DWORD PTR ds:0x30ffb40d
  4424c1:	xor    al,cl
  4424c3:	(bad)  
  4424c4:	ds shr BYTE PTR ds:[esi+0x3a],1
  4424c9:	cmp    cl,dh
  4424cb:	add    BYTE PTR [edx],bh
  4424cd:	cmp    cl,dh
  4424cf:	add    BYTE PTR [edx],bh
  4424d1:	cmp    cl,dh
  4424d3:	add    BYTE PTR [edx],bh
  4424d5:	cmp    cl,dh
  4424d7:	add    BYTE PTR [edx],bh
  4424d9:	cmp    cl,dh
  4424db:	add    bh,bh
  4424dd:	(bad)  
  4424de:	inc    DWORD PTR [eax]
  4424e0:	(bad)  
  4424e1:	(bad)  
  4424e2:	inc    DWORD PTR [eax]
  4424e4:	(bad)  
  4424e5:	(bad)  
  4424e6:	inc    DWORD PTR [eax]
  4424e8:	(bad)  
  4424e9:	(bad)  
  4424ea:	inc    DWORD PTR [eax]
  4424ec:	(bad)  
  4424ed:	(bad)  
  4424ee:	inc    DWORD PTR [eax]
  4424f0:	(bad)  
  4424f1:	(bad)  
  4424f2:	inc    DWORD PTR [eax]
  4424f4:	(bad)  
  4424f5:	(bad)  
  4424f6:	inc    DWORD PTR [eax]
  4424f8:	(bad)  
  4424f9:	(bad)  
  4424fa:	inc    DWORD PTR [eax]
  4424fc:	(bad)  
  4424fd:	(bad)  
  4424fe:	inc    DWORD PTR [eax]
  442500:	sbb    bl,BYTE PTR [edx]
  442502:	mov    bh,0x0
  442504:	sbb    bl,BYTE PTR [edx]
  442506:	mov    bh,0x0
  442508:	sbb    bl,BYTE PTR [edx]
  44250a:	mov    bh,0x0
  44250c:	sbb    DWORD PTR [ecx],ebx
  44250e:	mov    dh,0x2a
  442510:	sbb    bl,BYTE PTR [edx]
  442512:	mov    bh,0xe4
  442514:	cmp    al,0x3c
  442516:	int3   
  442517:	jmp    DWORD PTR [esi]
  442519:	es mov edi,0xa90303ff
  44251f:	inc    DWORD PTR [eax]
  442521:	add    BYTE PTR [ebx-0x5cffff01],ah
  442527:	inc    DWORD PTR [eax]
  442529:	add    BYTE PTR [ebp-0x48ffff01],dh
  44252f:	inc    DWORD PTR [eax]
  442531:	add    BYTE PTR [edx+0x760000ff],bl
  442537:	inc    DWORD PTR [eax]
  442539:	add    BYTE PTR [edi-0x1],ch
  44253c:	add    DWORD PTR [ecx],eax
  44253e:	ins    DWORD PTR es:[edi],dx
  44253f:	inc    DWORD PTR [ecx]
  442541:	add    DWORD PTR [esi-0x1],ebp
  442544:	add    al,BYTE PTR [edx]
  442546:	ins    DWORD PTR es:[edi],dx
  442547:	inc    DWORD PTR [edx]
  442549:	add    ch,BYTE PTR [ebx-0x1]
  44254c:	add    BYTE PTR [eax],al
  44254e:	gs (bad) 
  442550:	cmp    edi,DWORD PTR [ebx]
  442552:	mov    ?,edi
  442554:	jnp    0x4425d1
  442556:	mov    eax,0xc38a8aff
  44255b:	inc    DWORD PTR [ebx+0x65ffbe83]
  442561:	gs test eax,0x9d5757ff
  442567:	dec    DWORD PTR [edx+0x4a]
  44256a:	xchg   esp,eax
  44256b:	inc    DWORD PTR [esi+0x46]
  44256e:	nop
  44256f:	call   FWORD PTR [ebx+0x5b]
  442572:	mov    eax,ds:0xa56060ff
  442577:	jmp    FWORD PTR [eax+0x68]
  44257a:	stos   DWORD PTR es:[edi],eax
  44257b:	call   FWORD PTR [eax+0x58]
  44257e:	mov    al,ds:0x853232ff
  442583:	push   DWORD PTR [esp+esi*1]
  442586:	mov    bh,bh
  442588:	sub    BYTE PTR [eax],ch
  44258a:	cmp    edi,0xff7b1d1d
  442590:	and    ah,BYTE PTR [edx]
  442592:	cmp    bh,0x31
  442595:	xor    DWORD PTR [edi+edi*8-0x8cf7f8],ecx
  44259c:	add    BYTE PTR [eax],al
  44259e:	ins    DWORD PTR es:[edi],dx
  44259f:	inc    DWORD PTR [ecx]
  4425a1:	add    DWORD PTR [eax-0x1],esi
  4425a4:	add    BYTE PTR [eax],al
  4425a6:	test   bh,bh
  4425a8:	add    BYTE PTR [eax],al
  4425aa:	test   eax,0xb90000ff
  4425af:	inc    DWORD PTR [eax]
  4425b1:	add    BYTE PTR [ebp-0x5fffff01],ch
  4425b7:	inc    DWORD PTR [ecx]
  4425b9:	add    DWORD PTR [ebp-0x52f3f301],esp
  4425bf:	jmp    FWORD PTR [edi]
  4425c1:	das    
  4425c2:	(bad)  
  4425c3:	(bad)  
  4425c4:	ds ds into 
  4425c7:	bound  edi,QWORD PTR [edx]
  4425c9:	cmp    cl,bl
  4425cb:	add    BYTE PTR [edx],bh
  4425cd:	cmp    cl,bl
  4425cf:	add    BYTE PTR [edx],bh
  4425d1:	cmp    cl,bl
  4425d3:	add    BYTE PTR [edx],bh
  4425d5:	cmp    cl,bl
  4425d7:	add    BYTE PTR [edx],bh
  4425d9:	cmp    cl,bl
  4425db:	add    bh,bh
  4425dd:	(bad)  
  4425de:	inc    DWORD PTR [eax]
  4425e0:	(bad)  
  4425e1:	(bad)  
  4425e2:	inc    DWORD PTR [eax]
  4425e4:	(bad)  
  4425e5:	(bad)  
  4425e6:	inc    DWORD PTR [eax]
  4425e8:	(bad)  
  4425e9:	(bad)  
  4425ea:	inc    DWORD PTR [eax]
  4425ec:	(bad)  
  4425ed:	(bad)  
  4425ee:	inc    DWORD PTR [eax]
  4425f0:	(bad)  
  4425f1:	(bad)  
  4425f2:	inc    DWORD PTR [eax]
  4425f4:	(bad)  
  4425f5:	(bad)  
  4425f6:	inc    DWORD PTR [eax]
  4425f8:	(bad)  
  4425f9:	(bad)  
  4425fa:	inc    DWORD PTR [eax]
  4425fc:	(bad)  
  4425fd:	(bad)  
  4425fe:	inc    DWORD PTR [eax]
  442600:	adc    BYTE PTR [eax],dl
  442602:	stos   DWORD PTR es:[edi],eax
  442603:	add    BYTE PTR [eax],dl
  442605:	adc    BYTE PTR [ebx-0x54eff000],ch
  44260b:	add    BYTE PTR [edi],cl
  44260d:	rsm    
  44260f:	and    al,0x10
  442611:	adc    BYTE PTR [ebx-0x38c6c638],ch
  442617:	cli    
  442618:	sub    al,0x2c
  44261a:	mov    esi,0xa50909ff
  44261f:	inc    DWORD PTR [eax]
  442621:	add    BYTE PTR [ebx-0x62ffff01],bl
  442627:	inc    DWORD PTR [eax]
  442629:	add    BYTE PTR [ebp-0x4bffff01],ah
  44262f:	inc    DWORD PTR [ecx]
  442631:	add    DWORD PTR [eax-0x7dfefe01],ebp
  442637:	inc    DWORD PTR [edx]
  442639:	add    dh,BYTE PTR [edi-0x1]
  44263c:	add    eax,DWORD PTR [ebx]
  44263e:	jo     0x44263f
  442640:	add    eax,DWORD PTR [ebx]
  442642:	outs   dx,DWORD PTR ds:[esi]
  442643:	inc    DWORD PTR [eax]
  442645:	add    BYTE PTR [edi+edi*8+0x0],ch
  442649:	add    BYTE PTR [esi-0x1],ah
  44264c:	add    BYTE PTR [eax],al
  44264e:	popa   
  44264f:	dec    DWORD PTR [eax]
  442651:	or     BYTE PTR [edi-0x1],ah
  442654:	ds ds mov ?,edi
  442658:	jge    0x4426d7
  44265a:	mov    eax,0xc28989ff
  44265f:	(bad)  
  442660:	js     0x4426da
  442662:	mov    dh,0xff
  442664:	dec    edx
  442665:	dec    edx
  442666:	xchg   esp,eax
  442667:	jmp    FWORD PTR [eax]
  442669:	sub    BYTE PTR [ebx-0x1],bh
  44266c:	sub    eax,0x41ff7e2d
  442671:	inc    ecx
  442672:	mov    edi,?
  442674:	cmp    eax,0x2dff8a3d
  442679:	sub    eax,0x1b1bff7e
  44267e:	jae    0x44267f
  442680:	adc    eax,0x1dff7015
  442685:	sbb    eax,0x1313ff77
  44268a:	jae    0x44268b
  44268c:	pop    es
  44268d:	pop    es
  44268e:	imul   edi,edi,0xc
  442691:	or     al,0x71
  442693:	call   FWORD PTR [esi]
  442695:	push   ds
  442696:	cmp    bh,0x5
  442699:	add    eax,0x101ff72
  44269e:	jno    0x44269f
  4426a0:	add    eax,DWORD PTR [ebx]
  4426a2:	jp     0x4426a3
  4426a4:	add    al,BYTE PTR [edx]
  4426a6:	xchg   edx,eax
  4426a7:	inc    DWORD PTR [eax]
  4426a9:	add    BYTE PTR [edi+edi*8-0x520000],dh
  4426b0:	add    BYTE PTR [eax],al
  4426b2:	mov    eax,ds:0x9a0000ff
  4426b7:	inc    DWORD PTR [edx]
  4426b9:	add    bl,BYTE PTR [esi-0x56efef01]
  4426bf:	push   DWORD PTR [ebx]
  4426c1:	xor    eax,edx
  4426c3:	out    dx,eax
  4426c4:	inc    ecx
  4426c5:	inc    ecx
  4426c6:	int3   
  4426c7:	ss cmp eax,0x3d00c93d
  4426cd:	cmp    eax,0x3d3d00c9
  4426d2:	leave  
  4426d3:	add    BYTE PTR ds:0x3d00c93d,bh
  4426d9:	cmp    eax,0xffff00c9
  4426de:	inc    DWORD PTR [eax]
  4426e0:	(bad)  
  4426e1:	(bad)  
  4426e2:	inc    DWORD PTR [eax]
  4426e4:	(bad)  
  4426e5:	(bad)  
  4426e6:	inc    DWORD PTR [eax]
  4426e8:	(bad)  
  4426e9:	(bad)  
  4426ea:	inc    DWORD PTR [eax]
  4426ec:	(bad)  
  4426ed:	(bad)  
  4426ee:	inc    DWORD PTR [eax]
  4426f0:	(bad)  
  4426f1:	(bad)  
  4426f2:	inc    DWORD PTR [eax]
  4426f4:	(bad)  
  4426f5:	(bad)  
  4426f6:	inc    DWORD PTR [eax]
  4426f8:	(bad)  
  4426f9:	(bad)  
  4426fa:	inc    DWORD PTR [eax]
  4426fc:	(bad)  
  4426fd:	(bad)  
  4426fe:	inc    DWORD PTR [eax]
  442700:	add    al,0x4
  442702:	fwait
  442703:	add    BYTE PTR [esp+eax*1],al
  442706:	fwait
  442707:	add    BYTE PTR [esp+eax*1],al
  44270a:	fwait
  44270b:	add    BYTE PTR [ebx],al
  44270d:	add    ebx,DWORD PTR [edx-0x64fbfbea]
  442713:	test   DWORD PTR [esi],ebp
  442715:	cs mov edx,0xbe3333ee
  44271b:	call   DWORD PTR ds:0xffa615
  442721:	add    BYTE PTR [ebx-0x68ffff01],dl
  442727:	inc    DWORD PTR [eax]
  442729:	add    BYTE PTR [ebp-0x54ffff01],dl
  44272f:	inc    DWORD PTR [edx]
  442731:	add    dh,BYTE PTR [ebx-0x67fbfb01]
  442737:	inc    DWORD PTR [ebx]
  442739:	add    eax,DWORD PTR [ecx+0x730303ff]
  44273f:	inc    DWORD PTR [edx]
  442741:	add    ch,BYTE PTR [ebp-0x1]
  442744:	pop    es
  442745:	pop    es
  442746:	jo     0x442747
  442748:	pop    ss
  442749:	pop    ss
  44274a:	js     0x44274b
  44274c:	sbb    DWORD PTR [ecx],ebx
  44274e:	js     0x44274f
  442750:	adc    edx,DWORD PTR [ebx]
  442752:	outs   dx,BYTE PTR ds:[esi]
  442753:	call   FWORD PTR [esi]
  442755:	push   ds
  442756:	js     0x442757
  442758:	dec    esp
  442759:	dec    esp
  44275a:	xchg   esi,eax
  44275b:	jmp    DWORD PTR [edi+0x67]
  44275e:	test   eax,0xba7d7dff
  442763:	jmp    DWORD PTR [ecx+0x61]
  442766:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  442767:	jmp    FWORD PTR [esp+ebp*1]
  44276a:	jle    0x44276b
  44276c:	push   cs
  44276d:	push   cs
  44276e:	inc    DWORD PTR gs:[esp+eax*1]
  442772:	pusha  
  442773:	inc    DWORD PTR [esi]
  442775:	push   es
  442776:	(bad)  
  442777:	call   DWORD PTR [edx]
  442779:	adc    ch,BYTE PTR [ebx-0x1]
  44277c:	sub    al,0x2c
  44277e:	jle    0x44277f
  442780:	dec    esp
  442781:	dec    esp
  442782:	cwde   
  442783:	call   DWORD PTR [esi+0x56]
  442786:	lahf   
  442787:	jmp    DWORD PTR [eax+0x60]
  44278a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44278b:	dec    DWORD PTR [esp+ecx*2-0x67]
  44278f:	jmp    DWORD PTR ds:0x9ff8125
  442795:	or     DWORD PTR [ebx-0x1],esi
  442798:	push   es
  442799:	push   es
  44279a:	jno    0x44279b
  44279c:	add    al,0x4
  44279e:	jne    0x44279f
  4427a0:	add    eax,DWORD PTR [ebx]
  4427a2:	mov    bh,bh
  4427a4:	add    eax,DWORD PTR [ebx]
  4427a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4427a7:	inc    DWORD PTR [ecx]
  4427a9:	add    DWORD PTR [eax-0x60ffff01],edi
  4427af:	inc    DWORD PTR [eax]
  4427b1:	add    BYTE PTR [ebp-0x6bffff01],dl
  4427b7:	inc    DWORD PTR [ebx]
  4427b9:	add    ebx,DWORD PTR [eax-0x52e2e201]
  4427bf:	push   DWORD PTR [ebx]
  4427c1:	xor    edi,DWORD PTR [esi-0x3dc4c432]
  4427c7:	adc    DWORD PTR [ecx],edi
  4427c9:	cmp    ecx,eax
  4427cb:	add    BYTE PTR [ecx],bh
  4427cd:	cmp    ecx,eax
  4427cf:	add    BYTE PTR [ecx],bh
  4427d1:	cmp    ecx,eax
  4427d3:	add    BYTE PTR [ecx],bh
  4427d5:	cmp    ecx,eax
  4427d7:	add    BYTE PTR [ecx],bh
  4427d9:	cmp    ecx,eax
  4427db:	add    bh,bh
  4427dd:	(bad)  
  4427de:	inc    DWORD PTR [eax]
  4427e0:	(bad)  
  4427e1:	(bad)  
  4427e2:	inc    DWORD PTR [eax]
  4427e4:	(bad)  
  4427e5:	(bad)  
  4427e6:	inc    DWORD PTR [eax]
  4427e8:	(bad)  
  4427e9:	(bad)  
  4427ea:	inc    DWORD PTR [eax]
  4427ec:	(bad)  
  4427ed:	(bad)  
  4427ee:	inc    DWORD PTR [eax]
  4427f0:	(bad)  
  4427f1:	(bad)  
  4427f2:	inc    DWORD PTR [eax]
  4427f4:	(bad)  
  4427f5:	(bad)  
  4427f6:	inc    DWORD PTR [eax]
  4427f8:	(bad)  
  4427f9:	(bad)  
  4427fa:	inc    DWORD PTR [eax]
  4427fc:	(bad)  
  4427fd:	(bad)  
  4427fe:	inc    DWORD PTR [eax]
  442800:	add    BYTE PTR [eax],al
  442802:	pop    DWORD PTR [eax]
  442804:	add    BYTE PTR [eax],al
  442806:	pop    DWORD PTR [eax]
  442808:	add    BYTE PTR [eax],al
  44280a:	pop    DWORD PTR [eax]
  44280c:	add    BYTE PTR [eax],al
  44280e:	mov    es,WORD PTR ds:0x368f0000
  442814:	sbb    al,0x1c
  442816:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442817:	aad    0x35
  442819:	xor    eax,0x2222febb
  44281e:	lods   eax,DWORD PTR ds:[esi]
  44281f:	inc    DWORD PTR [ecx]
  442821:	add    DWORD PTR [esi-0x6fffff01],ecx
  442827:	inc    DWORD PTR [eax]
  442829:	add    BYTE PTR [edx-0x63ffff01],cl
  44282f:	inc    DWORD PTR [ecx]
  442831:	add    DWORD PTR [ecx-0x56fbfb01],esi
  442837:	inc    DWORD PTR [esp+eax*1]
  44283a:	mov    edi,edi
  44283c:	add    al,0x4
  44283e:	jns    0x44283f
  442840:	add    BYTE PTR [eax],al
  442842:	outs   dx,BYTE PTR ds:[esi]
  442843:	call   DWORD PTR [esp+edx*1]
  442846:	jp     0x442847
  442848:	push   eax
  442849:	push   eax
  44284a:	sahf   
  44284b:	jmp    DWORD PTR [esi+0x66]
  44284e:	stos   DWORD PTR es:[edi],eax
  44284f:	jmp    FWORD PTR [edx+0x6a]
  442852:	scas   al,BYTE PTR es:[edi]
  442853:	dec    DWORD PTR [ebx+0x4b]
  442856:	cwde   
  442857:	jmp    DWORD PTR [esi]
  442859:	es jl  0x44285b
  44285c:	and    eax,0x4dff7a25
  442861:	dec    ebp
  442862:	xchg   esi,eax
  442863:	(bad)  
  442864:	jnp    0x4428e1
  442866:	mov    eax,0xc08585ff
  44286b:	jmp    FWORD PTR [eax+0x68]
  44286e:	stos   BYTE PTR es:[edi],al
  44286f:	dec    DWORD PTR [ecx+0x49]
  442872:	xchg   ebp,eax
  442873:	call   DWORD PTR [ebp+0x55]
  442876:	popf   
  442877:	push   DWORD PTR [edx+0x72]
  44287a:	mov    dl,0xff
  44287c:	test   BYTE PTR [edi+edi*4-0x3f7a7a01],al
  442883:	inc    DWORD PTR [ebx-0x7b00407d]
  442889:	test   al,al
  44288b:	(bad)  
  44288c:	jp     0x442908
  44288e:	mov    ecx,0xa85f5fff
  442893:	(bad)  
  442894:	cmp    bh,BYTE PTR [edx]
  442896:	xchg   edx,eax
  442897:	call   FWORD PTR ds:0x8ff821d
  44289d:	or     BYTE PTR [ebp-0x1],bh
  4428a0:	add    eax,DWORD PTR [ebx]
  4428a2:	xchg   esp,eax
  4428a3:	inc    DWORD PTR [esp+eax*1]
  4428a6:	scas   eax,DWORD PTR es:[edi]
  4428a7:	inc    DWORD PTR [ecx]
  4428a9:	add    DWORD PTR [ebx-0x6dffff01],ebp
  4428af:	inc    DWORD PTR [eax]
  4428b1:	add    BYTE PTR [ebx-0x72ffff01],cl
  4428b7:	dec    DWORD PTR [eax]
  4428b9:	or     BYTE PTR [esi-0x48d0d001],dl
  4428bf:	(bad)  
  4428c0:	sub    ebp,DWORD PTR [ebx]
  4428c2:	mov    dl,0xad
  4428c4:	and    eax,0x2605ae25
  4428c9:	es scas eax,DWORD PTR es:[edi]
  4428cb:	add    BYTE PTR [esi],ah
  4428cd:	es scas eax,DWORD PTR es:[edi]
  4428cf:	add    BYTE PTR [esi],ah
  4428d1:	es scas eax,DWORD PTR es:[edi]
  4428d3:	add    BYTE PTR [esi],ah
  4428d5:	es scas eax,DWORD PTR es:[edi]
  4428d7:	add    BYTE PTR [esi],ah
  4428d9:	es scas eax,DWORD PTR es:[edi]
  4428db:	add    bh,bh
  4428dd:	(bad)  
  4428de:	inc    DWORD PTR [eax]
  4428e0:	(bad)  
  4428e1:	(bad)  
  4428e2:	inc    DWORD PTR [eax]
  4428e4:	(bad)  
  4428e5:	(bad)  
  4428e6:	inc    DWORD PTR [eax]
  4428e8:	(bad)  
  4428e9:	(bad)  
  4428ea:	inc    DWORD PTR [eax]
  4428ec:	(bad)  
  4428ed:	(bad)  
  4428ee:	inc    DWORD PTR [eax]
  4428f0:	(bad)  
  4428f1:	(bad)  
  4428f2:	inc    DWORD PTR [eax]
  4428f4:	(bad)  
  4428f5:	(bad)  
  4428f6:	inc    DWORD PTR [eax]
  4428f8:	(bad)  
  4428f9:	(bad)  
  4428fa:	inc    DWORD PTR [eax]
  4428fc:	(bad)  
  4428fd:	(bad)  
  4428fe:	inc    DWORD PTR [eax]
  442900:	add    BYTE PTR [eax],al
  442902:	xchg   edx,eax
  442903:	add    BYTE PTR [eax],al
  442905:	add    BYTE PTR [edx-0x6e000000],dl
  44290b:	add    BYTE PTR [eax],al
  44290d:	add    BYTE PTR [edx-0x6e000000],dl
  442913:	push   es
  442914:	add    eax,0x2c949105
  442919:	sub    al,0xb0
  44291b:	repnz xor DWORD PTR [ecx],esi
  44291e:	mov    ah,0xff
  442920:	or     DWORD PTR [ecx],ecx
  442922:	xchg   ecx,eax
  442923:	inc    DWORD PTR [ecx]
  442925:	add    DWORD PTR [eax-0x7bffff01],ecx
  44292b:	inc    DWORD PTR [eax]
  44292d:	add    BYTE PTR [edi+edi*8-0x5bfeff],cl
  442934:	add    al,0x4
  442936:	mov    ch,0xff
  442938:	push   es
  442939:	push   es
  44293a:	xchg   edi,eax
  44293b:	inc    DWORD PTR [esi]
  44293d:	push   es
  44293e:	cmp    bh,0x4
  442941:	add    al,0x76
  442943:	dec    DWORD PTR [eax]
  442945:	or     BYTE PTR [ebp-0x1],dh
  442948:	and    eax,0x6fff8525
  44294d:	outs   dx,DWORD PTR ds:[esi]
  44294e:	mov    bl,0xff
  442950:	xchg   BYTE PTR [esi+0x7d7dffc1],al
  442956:	mov    esp,0xb67575ff
  44295b:	push   DWORD PTR [ebp+0x75]
  44295e:	mov    dh,0xff
  442960:	jnp    0x4429dd
  442962:	mov    edx,0xc08282ff
  442967:	inc    DWORD PTR [esp+eax*4-0x7f7f003f]
  44296e:	mov    esi,0xbb7c7cff
  442973:	(bad)  
  442974:	jge    0x4429f3
  442976:	mov    esp,0xbf8282ff
  44297b:	inc    DWORD PTR [edi-0x79003c79]
  442981:	xchg   dl,al
  442983:	jmp    FWORD PTR [esi+0x6e]
  442986:	mov    dl,0xff
  442988:	dec    ecx
  442989:	dec    ecx
  44298a:	fwait
  44298b:	push   DWORD PTR [esp+esi*1]
  44298e:	mov    ?,edi
  442990:	xor    BYTE PTR [eax],dh
  442992:	(bad)  
  442993:	jmp    FWORD PTR ds:0x3fff8d2d
  442999:	aas    
  44299a:	cdq    
  44299b:	call   FWORD PTR [edx]
  44299d:	sbb    dl,BYTE PTR [ecx-0x5dffff01]
  4429a3:	inc    DWORD PTR [ebx]
  4429a5:	add    esi,DWORD PTR [edi+edi*8-0x690000]
  4429ac:	add    BYTE PTR [eax],al
  4429ae:	mov    bh,bh
  4429b0:	add    BYTE PTR [eax],al
  4429b2:	test   bh,bh
  4429b4:	add    al,BYTE PTR [edx]
  4429b6:	mov    edi,edi
  4429b8:	adc    eax,0x3aff9c15
  4429bd:	cmp    bh,BYTE PTR [ebx-0x60e6e60c]
  4429c3:	jg     0x4429ce
  4429c5:	or     DWORD PTR [ecx-0x6af2f2fc],edx
  4429cb:	add    BYTE PTR ds:0xd00950d,cl
  4429d1:	or     eax,0xd0d0095
  4429d6:	xchg   ebp,eax
  4429d7:	add    BYTE PTR ds:0xff00950d,cl
  4429dd:	(bad)  
  4429de:	inc    DWORD PTR [eax]
  4429e0:	(bad)  
  4429e1:	(bad)  
  4429e2:	inc    DWORD PTR [eax]
  4429e4:	(bad)  
  4429e5:	(bad)  
  4429e6:	inc    DWORD PTR [eax]
  4429e8:	(bad)  
  4429e9:	(bad)  
  4429ea:	inc    DWORD PTR [eax]
  4429ec:	(bad)  
  4429ed:	(bad)  
  4429ee:	inc    DWORD PTR [eax]
  4429f0:	(bad)  
  4429f1:	(bad)  
  4429f2:	inc    DWORD PTR [eax]
  4429f4:	(bad)  
  4429f5:	(bad)  
  4429f6:	inc    DWORD PTR [eax]
  4429f8:	(bad)  
  4429f9:	(bad)  
  4429fa:	inc    DWORD PTR [eax]
  4429fc:	(bad)  
  4429fd:	(bad)  
  4429fe:	inc    DWORD PTR [eax]
  442a00:	add    BYTE PTR [eax],al
  442a02:	add    DWORD PTR [eax],0x810000
  442a08:	add    BYTE PTR [eax],al
  442a0a:	add    DWORD PTR [eax],0x810000
  442a10:	add    BYTE PTR [eax],al
  442a12:	add    DWORD PTR [eax],0x267c0000
  442a18:	adc    eax,0x2db99515
  442a1d:	sub    eax,0x2424ffad
  442a22:	mov    ds:0x800000ff,eax
  442a27:	inc    DWORD PTR [eax]
  442a29:	add    BYTE PTR [edi-0x1],bh
  442a2c:	add    BYTE PTR [eax],al
  442a2e:	jge    0x442a2f
  442a30:	add    BYTE PTR [eax],al
  442a32:	nop
  442a33:	inc    DWORD PTR [ebx]
  442a35:	add    esi,DWORD PTR [ebx-0x55f8f801]
  442a3b:	inc    DWORD PTR [edi]
  442a3d:	pop    es
  442a3e:	xchg   edx,eax
  442a3f:	inc    DWORD PTR [esi]
  442a41:	push   es
  442a42:	cmp    edi,0xff7b0505
  442a48:	or     cl,BYTE PTR [edx]
  442a4a:	jnp    0x442a4b
  442a4c:	sub    BYTE PTR [eax],ch
  442a4e:	mov    edi,?
  442a50:	imul   ebp,DWORD PTR [ebx-0x4c],0xffffffff
  442a54:	xchg   ebx,eax
  442a55:	xchg   ebx,eax
  442a56:	int    0xff
  442a58:	xchg   ecx,eax
  442a59:	xchg   ecx,eax
  442a5a:	int3   
  442a5b:	dec    DWORD PTR [edx-0x78003676]
  442a61:	xchg   esi,eax
  442a63:	inc    DWORD PTR [esp+eax*4-0x7b7b003c]
  442a6a:	(bad)  
  442a6b:	dec    DWORD PTR [eax-0x6f003878]
  442a71:	nop
  442a72:	int3   
  442a73:	call   DWORD PTR [esp+edx*4-0x6e6e0031]
  442a7a:	int3   
  442a7b:	inc    DWORD PTR [edx+0x65ffc282]
  442a81:	gs mov al,0xff
  442a84:	das    
  442a85:	das    
  442a86:	mov    ?,edi
  442a88:	adc    edx,DWORD PTR [ebx]
  442a8a:	jle    0x442a8b
  442a8c:	or     ecx,DWORD PTR [ebx]
  442a8e:	jnp    0x442a8f
  442a90:	or     eax,0x11ff7f0d
  442a95:	adc    DWORD PTR [edi+edi*8-0x70e2e3],eax
  442a9c:	adc    BYTE PTR [eax],dl
  442a9e:	lahf   
  442a9f:	inc    DWORD PTR [ebx]
  442aa1:	add    esi,DWORD PTR [eax-0x55fefe01]
  442aa7:	inc    DWORD PTR [eax]
  442aa9:	add    BYTE PTR [ebx-0x7fffff01],al
  442aaf:	inc    DWORD PTR [eax]
  442ab1:	add    BYTE PTR [ebx-0x1],bh
  442ab4:	or     al,0xc
  442ab6:	(bad)  
  442ab7:	jmp    FWORD PTR [esp+ebp*1]
  442aba:	stos   DWORD PTR es:[edi],eax
  442abb:	jmp    FWORD PTR [ecx]
  442abd:	sub    DWORD PTR [edi-0x75f5f519],esp
  442ac3:	cmp    al,BYTE PTR [eax]
  442ac5:	add    BYTE PTR [edi+0x1],bh
  442ac8:	add    DWORD PTR [ecx],eax
  442aca:	add    BYTE PTR [eax],0x1
  442acd:	add    DWORD PTR [edx-0x7dfeff00],eax
  442ad3:	add    BYTE PTR [ecx],al
  442ad5:	add    DWORD PTR [edx-0x7dfeff00],eax
  442adb:	add    bh,bh
  442add:	(bad)  
  442ade:	inc    DWORD PTR [eax]
  442ae0:	(bad)  
  442ae1:	(bad)  
  442ae2:	inc    DWORD PTR [eax]
  442ae4:	(bad)  
  442ae5:	(bad)  
  442ae6:	inc    DWORD PTR [eax]
  442ae8:	(bad)  
  442ae9:	(bad)  
  442aea:	inc    DWORD PTR [eax]
  442aec:	(bad)  
  442aed:	(bad)  
  442aee:	inc    DWORD PTR [eax]
  442af0:	(bad)  
  442af1:	(bad)  
  442af2:	inc    DWORD PTR [eax]
  442af4:	(bad)  
  442af5:	(bad)  
  442af6:	inc    DWORD PTR [eax]
  442af8:	(bad)  
  442af9:	(bad)  
  442afa:	inc    DWORD PTR [eax]
  442afc:	(bad)  
  442afd:	(bad)  
  442afe:	inc    DWORD PTR [eax]
  442b00:	add    BYTE PTR [eax],al
  442b02:	ja     0x442b04
  442b04:	add    BYTE PTR [eax],al
  442b06:	ja     0x442b08
  442b08:	add    BYTE PTR [eax],al
  442b0a:	ja     0x442b0c
  442b0c:	add    BYTE PTR [eax],al
  442b0e:	ja     0x442b10
  442b10:	add    BYTE PTR [eax],al
  442b12:	ja     0x442b14
  442b14:	add    BYTE PTR [eax],al
  442b16:	jne    0x442b18
  442b18:	add    eax,DWORD PTR [ebx]
  442b1a:	jnp    0x442b70
  442b1c:	sbb    ebx,DWORD PTR [ebx]
  442b1e:	xchg   esi,eax
  442b1f:	fdiv   DWORD PTR [ecx]
  442b21:	xor    DWORD PTR [edx-0x74efef01],ebp
  442b27:	inc    DWORD PTR [edx]
  442b29:	add    bh,BYTE PTR [edx-0x1]
  442b2c:	add    BYTE PTR [eax],al
  442b2e:	jno    0x442b2f
  442b30:	add    BYTE PTR [eax],al
  442b32:	jge    0x442b33
  442b34:	add    DWORD PTR [ecx],eax
  442b36:	pushf  
  442b37:	inc    DWORD PTR [edi]
  442b39:	pop    es
  442b3a:	mov    eax,0xa60808ff
  442b3f:	dec    DWORD PTR [eax]
  442b41:	or     BYTE PTR [eax-0x78f7f701],dl
  442b47:	inc    DWORD PTR [esi]
  442b49:	push   es
  442b4a:	cmp    bh,0x0
  442b4d:	add    BYTE PTR [ecx-0x1],bh
  442b50:	das    
  442b51:	das    
  442b52:	xchg   esi,eax
  442b53:	jmp    DWORD PTR [eax+0x60]
  442b56:	mov    dl,0xff
  442b58:	jne    0x442bcf
  442b5a:	mov    edi,0xcb8a8aff
  442b5f:	dec    DWORD PTR [esp+ecx*4-0x72720034]
  442b66:	int    0xff
  442b68:	mov    ecx,DWORD PTR [ebx+0x7e7effcc]
  442b6e:	(bad)  
  442b6f:	jmp    DWORD PTR [esp+eiz*2-0x4c]
  442b73:	call   DWORD PTR [edx+0x52]
  442b76:	test   eax,0xad5858ff
  442b7b:	call   DWORD PTR [esp+edx*2-0x56]
  442b7f:	push   DWORD PTR [edx]
  442b81:	xor    dl,BYTE PTR [ebp+0x7d0808ff]
  442b87:	inc    DWORD PTR [edx]
  442b89:	add    bh,BYTE PTR [ebx-0x1]
  442b8c:	add    al,0x4
  442b8e:	cmp    bh,0x5
  442b91:	add    eax,0x505ff83
  442b96:	mov    bh,bh
  442b98:	add    al,BYTE PTR [edx]
  442b9a:	xchg   edx,eax
  442b9b:	inc    DWORD PTR [esi]
  442b9d:	push   es
  442b9e:	mov    cl,0xff
  442ba0:	add    eax,0xffb105
  442ba5:	add    BYTE PTR [esi+0x750000ff],cl
  442bab:	inc    DWORD PTR [eax]
  442bad:	add    BYTE PTR [ebx-0x1],dh
  442bb0:	add    eax,0x1fff7d05
  442bb5:	pop    ds
  442bb6:	cwde   
  442bb7:	push   DWORD PTR [ecx]
  442bb9:	xor    DWORD PTR [edx-0x71f1f101],ebp
  442bbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442bc0:	add    DWORD PTR [ecx],eax
  442bc2:	xchg   DWORD PTR [esi],edx
  442bc4:	add    BYTE PTR [eax],al
  442bc6:	xchg   DWORD PTR [eax],eax
  442bc8:	add    BYTE PTR [eax],al
  442bca:	xchg   DWORD PTR [eax],eax
  442bcc:	add    BYTE PTR [eax],al
  442bce:	xchg   DWORD PTR [eax],eax
  442bd0:	add    BYTE PTR [eax],al
  442bd2:	xchg   DWORD PTR [eax],eax
  442bd4:	add    BYTE PTR [eax],al
  442bd6:	xchg   DWORD PTR [eax],eax
  442bd8:	add    BYTE PTR [eax],al
  442bda:	xchg   DWORD PTR [eax],eax
  442bdc:	(bad)  
  442bdd:	(bad)  
  442bde:	inc    DWORD PTR [eax]
  442be0:	(bad)  
  442be1:	(bad)  
  442be2:	inc    DWORD PTR [eax]
  442be4:	(bad)  
  442be5:	(bad)  
  442be6:	inc    DWORD PTR [eax]
  442be8:	(bad)  
  442be9:	(bad)  
  442bea:	inc    DWORD PTR [eax]
  442bec:	(bad)  
  442bed:	(bad)  
  442bee:	inc    DWORD PTR [eax]
  442bf0:	(bad)  
  442bf1:	(bad)  
  442bf2:	inc    DWORD PTR [eax]
  442bf4:	(bad)  
  442bf5:	(bad)  
  442bf6:	inc    DWORD PTR [eax]
  442bf8:	(bad)  
  442bf9:	(bad)  
  442bfa:	inc    DWORD PTR [eax]
  442bfc:	(bad)  
  442bfd:	(bad)  
  442bfe:	inc    DWORD PTR [eax]
  442c00:	add    BYTE PTR [eax],al
  442c02:	jns    0x442c04
  442c04:	add    BYTE PTR [eax],al
  442c06:	jns    0x442c08
  442c08:	add    BYTE PTR [eax],al
  442c0a:	jns    0x442c0c
  442c0c:	add    BYTE PTR [eax],al
  442c0e:	jns    0x442c10
  442c10:	add    BYTE PTR [eax],al
  442c12:	jns    0x442c14
  442c14:	add    BYTE PTR [eax],al
  442c16:	jns    0x442c18
  442c18:	add    BYTE PTR [eax],al
  442c1a:	jb     0x442c21
  442c1c:	or     BYTE PTR [eax],cl
  442c1e:	jl     0x442c8c
  442c20:	and    ah,BYTE PTR [edx]
  442c22:	xchg   esp,eax
  442c23:	in     al,dx
  442c24:	daa    
  442c25:	daa    
  442c26:	fwait
  442c27:	dec    DWORD PTR [esp+ecx*1]
  442c2a:	jge    0x442c2b
  442c2c:	add    DWORD PTR [ecx],eax
  442c2e:	ins    DWORD PTR es:[edi],dx
  442c2f:	inc    DWORD PTR [eax]
  442c31:	add    BYTE PTR [esi-0x1],ch
  442c34:	add    BYTE PTR [eax],al
  442c36:	jge    0x442c37
  442c38:	add    al,0x4
  442c3a:	mov    al,0xff
  442c3c:	or     DWORD PTR [ecx],ecx
  442c3e:	mov    eax,0xa60b0bff
  442c43:	dec    DWORD PTR [ebx]
  442c45:	or     edx,DWORD PTR [ebp-0x6ff4f401]
  442c4b:	dec    DWORD PTR [edx]
  442c4d:	or     cl,BYTE PTR [edi+edi*8-0x77f7f8]
  442c54:	pop    ss
  442c55:	pop    ss
  442c56:	nop
  442c57:	(bad)  
  442c58:	cmp    eax,0x6affa53d
  442c5d:	push   0xffffffbe
  442c5f:	push   DWORD PTR [esp+esi*2-0x3c]
  442c63:	push   DWORD PTR [esi+0x76]
  442c66:	(bad)  
  442c69:	je     0x442c2e
  442c6b:	jmp    DWORD PTR [esp+eiz*2-0x47]
  442c6f:	(bad)  
  442c70:	cmp    al,0x3c
  442c72:	mov    al,ds:0x8b1919ff
  442c77:	call   DWORD PTR [esi]
  442c79:	push   ss
  442c7a:	mov    edi,edi
  442c7c:	sbb    ebx,DWORD PTR [ebx]
  442c7e:	nop
  442c7f:	dec    DWORD PTR [edi]
  442c81:	jp     0x894d3686
  442c87:	dec    DWORD PTR [edx]
  442c89:	or     cl,BYTE PTR [ebx-0x71f4f401]
  442c8f:	dec    DWORD PTR [ebx]
  442c91:	or     edx,DWORD PTR [edx-0x65f4f401]
  442c97:	dec    DWORD PTR [ebx]
  442c99:	or     ebp,DWORD PTR [ebp-0x42f7f701]
  442c9f:	inc    DWORD PTR [edx]
  442ca1:	add    bl,BYTE PTR [edi+0x700000ff]
  442ca7:	inc    DWORD PTR [eax]
  442ca9:	add    BYTE PTR [ebp-0x1],ch
  442cac:	add    DWORD PTR [ecx],eax
  442cae:	ins    DWORD PTR es:[edi],dx
  442caf:	call   DWORD PTR [edi]
  442cb1:	pop    ss
  442cb2:	mov    edi,edi
  442cb4:	sub    DWORD PTR [ecx],ebp
  442cb6:	sahf   
  442cb7:	sti    
  442cb8:	sbb    bl,BYTE PTR [edx]
  442cba:	mov    ecx,esp
  442cbc:	add    BYTE PTR [eax],al
  442cbe:	pop    esp
  442cbf:	cmp    BYTE PTR [eax],al
  442cc1:	add    BYTE PTR [ebx+0x3],ah
  442cc4:	add    BYTE PTR [eax],al
  442cc6:	push   0x67000000
  442ccb:	add    BYTE PTR [eax],al
  442ccd:	add    BYTE PTR [edi+0x0],ah
  442cd0:	add    BYTE PTR [eax],al
  442cd2:	add    BYTE PTR [bx+si],al
  442cd5:	add    BYTE PTR [edi+0x0],ah
  442cd8:	add    BYTE PTR [eax],al
  442cda:	addr16 add bh,bh
  442cdd:	(bad)  
  442cde:	inc    DWORD PTR [eax]
  442ce0:	(bad)  
  442ce1:	(bad)  
  442ce2:	inc    DWORD PTR [eax]
  442ce4:	(bad)  
  442ce5:	(bad)  
  442ce6:	inc    DWORD PTR [eax]
  442ce8:	(bad)  
  442ce9:	(bad)  
  442cea:	inc    DWORD PTR [eax]
  442cec:	(bad)  
  442ced:	(bad)  
  442cee:	inc    DWORD PTR [eax]
  442cf0:	(bad)  
  442cf1:	(bad)  
  442cf2:	inc    DWORD PTR [eax]
  442cf4:	(bad)  
  442cf5:	(bad)  
  442cf6:	inc    DWORD PTR [eax]
  442cf8:	(bad)  
  442cf9:	(bad)  
  442cfa:	inc    DWORD PTR [eax]
  442cfc:	(bad)  
  442cfd:	(bad)  
  442cfe:	inc    DWORD PTR [eax]
  442d00:	add    BYTE PTR [eax],al
  442d02:	jns    0x442d04
  442d04:	add    BYTE PTR [eax],al
  442d06:	jns    0x442d08
  442d08:	add    BYTE PTR [eax],al
  442d0a:	jns    0x442d0c
  442d0c:	add    BYTE PTR [eax],al
  442d0e:	jns    0x442d10
  442d10:	add    BYTE PTR [eax],al
  442d12:	jns    0x442d14
  442d14:	add    BYTE PTR [eax],al
  442d16:	jns    0x442d18
  442d18:	add    BYTE PTR [eax],al
  442d1a:	js     0x442d1c
  442d1c:	add    BYTE PTR [eax],al
  442d1e:	jo     0x442d3b
  442d20:	or     BYTE PTR [eax],cl
  442d22:	jb     0x442caa
  442d24:	sub    BYTE PTR [eax],ch
  442d26:	xchg   edi,eax
  442d27:	stc    
  442d28:	sbb    ebx,DWORD PTR [ebx]
  442d2a:	mov    edi,edi
  442d2c:	push   es
  442d2d:	push   es
  442d2e:	jno    0x442d2f
  442d30:	add    BYTE PTR [eax],al
  442d32:	(bad)  
  442d33:	inc    DWORD PTR [eax]
  442d35:	add    BYTE PTR [edx-0x1],ch
  442d38:	add    BYTE PTR [eax],al
  442d3a:	(bad)  
  442d3b:	dec    DWORD PTR [eax]
  442d3d:	or     BYTE PTR [ebx-0x42f3f301],bh
  442d43:	dec    DWORD PTR [esp+ecx*1]
  442d46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  442d47:	dec    DWORD PTR [esp+ecx*1]
  442d4a:	sahf   
  442d4b:	dec    DWORD PTR [esp+ecx*1]
  442d4e:	call   0xaff:0x970b0bff
  442d55:	or     dl,BYTE PTR [ebp-0x6bf3f301]
  442d5b:	call   DWORD PTR [ebx]
  442d5d:	adc    edx,DWORD PTR [esi-0x60d8d801]
  442d63:	jmp    DWORD PTR ds:0x28ff9e25
  442d69:	sub    BYTE PTR [eax-0x52bfbf01],ah
  442d6f:	call   DWORD PTR [edi+0x57]
  442d72:	mov    edx,0xbc5a5aff
  442d77:	push   DWORD PTR [eax]
  442d79:	xor    BYTE PTR [esi-0x6cf5f501],ah
  442d7f:	dec    DWORD PTR [ebx]
  442d81:	or     edx,DWORD PTR [ebp-0x68f4f401]
  442d87:	dec    DWORD PTR [esp+ecx*1]
  442d8a:	cdq    
  442d8b:	dec    DWORD PTR [esp+ecx*1]
  442d8e:	pushf  
  442d8f:	dec    DWORD PTR [esp+ecx*1]
  442d92:	mov    ds:0xad0c0cff,al
  442d97:	dec    DWORD PTR [esp+ecx*1]
  442d9a:	ret    
  442d9b:	inc    DWORD PTR ds:0xffaf05
  442da1:	add    BYTE PTR [edi-0x1],bh
  442da4:	add    BYTE PTR [eax],al
  442da6:	pusha  
  442da7:	inc    DWORD PTR [eax]
  442da9:	add    BYTE PTR [edi-0x1],ah
  442dac:	or     cl,BYTE PTR [edx]
  442dae:	jbe    0x442daf
  442db0:	and    eax,0x1fff9325
  442db5:	pop    ds
  442db6:	xchg   ebx,eax
  442db7:	aam    0x0
  442db9:	add    BYTE PTR [esi+edx*2+0x0],bl
  442dbd:	add    BYTE PTR ds:0x6,al
	...
  442ddb:	add    bh,bh
  442ddd:	(bad)  
  442dde:	inc    DWORD PTR [eax]
  442de0:	(bad)  
  442de1:	(bad)  
  442de2:	inc    DWORD PTR [eax]
  442de4:	(bad)  
  442de5:	(bad)  
  442de6:	inc    DWORD PTR [eax]
  442de8:	(bad)  
  442de9:	(bad)  
  442dea:	inc    DWORD PTR [eax]
  442dec:	(bad)  
  442ded:	(bad)  
  442dee:	inc    DWORD PTR [eax]
  442df0:	(bad)  
  442df1:	(bad)  
  442df2:	inc    DWORD PTR [eax]
  442df4:	(bad)  
  442df5:	(bad)  
  442df6:	inc    DWORD PTR [eax]
  442df8:	(bad)  
  442df9:	(bad)  
  442dfa:	inc    DWORD PTR [eax]
  442dfc:	(bad)  
  442dfd:	(bad)  
  442dfe:	inc    DWORD PTR [eax]
  442e00:	add    BYTE PTR [eax],al
  442e02:	test   DWORD PTR [eax],eax
  442e04:	add    BYTE PTR [eax],al
  442e06:	test   DWORD PTR [eax],eax
  442e08:	add    BYTE PTR [eax],al
  442e0a:	test   DWORD PTR [eax],eax
  442e0c:	add    BYTE PTR [eax],al
  442e0e:	test   DWORD PTR [eax],eax
  442e10:	add    BYTE PTR [eax],al
  442e12:	test   DWORD PTR [eax],eax
  442e14:	add    BYTE PTR [eax],al
  442e16:	test   DWORD PTR [eax],eax
  442e18:	add    BYTE PTR [eax],al
  442e1a:	test   BYTE PTR [eax],al
  442e1c:	add    DWORD PTR [ecx],eax
  442e1e:	jge    0x442e22
  442e20:	add    al,BYTE PTR [edx]
  442e22:	jbe    0x442e48
  442e24:	or     ecx,DWORD PTR [ebx]
  442e26:	jp     0x442dc3
  442e28:	and    esp,DWORD PTR [ebx]
  442e2a:	mov    ?,eax
  442e2c:	sbb    BYTE PTR [eax],bl
  442e2e:	jg     0x442e2f
  442e30:	add    BYTE PTR [eax],al
  442e32:	(bad)  
  442e33:	inc    DWORD PTR [eax]
  442e35:	add    BYTE PTR [edi-0x1],bl
  442e38:	add    BYTE PTR [eax],al
  442e3a:	push   0xffffffff
  442e3c:	add    eax,DWORD PTR [ebx]
  442e3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  442e3f:	dec    DWORD PTR [ebx]
  442e41:	or     ecx,ecx
  442e43:	call   DWORD PTR [eax]
  442e45:	adc    BYTE PTR [edi-0x52f3f301],bh
  442e4b:	dec    DWORD PTR ds:0xcffa80d
  442e51:	or     al,0xa3
  442e53:	dec    DWORD PTR [ebx]
  442e55:	or     esp,DWORD PTR [ecx-0x61f5f501]
  442e5b:	dec    DWORD PTR [edx]
  442e5d:	or     bl,BYTE PTR [ebp-0x62f1f101]
  442e63:	dec    DWORD PTR [esi]
  442e65:	push   cs
  442e66:	cwde   
  442e67:	dec    DWORD PTR ds:0x10ff8f0d
  442e6d:	adc    BYTE PTR [ebp-0x7beaea01],al
  442e73:	call   FWORD PTR [ecx]
  442e75:	sbb    DWORD PTR [ebx-0x63eded01],edx
  442e7b:	dec    DWORD PTR [ebx]
  442e7d:	or     ebx,DWORD PTR [edi-0x5ef4f401]
  442e83:	dec    DWORD PTR [esp+ecx*1]
  442e86:	mov    ds:0xa40d0dff,eax
  442e8b:	dec    DWORD PTR ds:0xeffa80d
  442e91:	push   cs
  442e92:	mov    ah,0xff
  442e94:	(bad)  
  442e95:	(bad)  
  442e97:	dec    DWORD PTR [ecx]
  442e99:	or     esi,eax
  442e9b:	inc    DWORD PTR [ebx]
  442e9d:	add    ecx,DWORD PTR [esi+0x610000ff]
  442ea3:	inc    DWORD PTR [eax]
  442ea5:	add    BYTE PTR [ebp-0x1],bl
  442ea8:	add    eax,0x21ff6805
  442ead:	and    DWORD PTR [ecx-0x6de5e501],ecx
  442eb3:	loopne 0x442ebb
  442eb5:	push   es
  442eb6:	push   esi
  442eb7:	imul   eax,DWORD PTR [eax],0x0
  442eba:	adc    BYTE PTR [eax+eax*1],cl
	...
  442ed9:	add    BYTE PTR [eax],al
  442edb:	add    bh,bh
  442edd:	(bad)  
  442ede:	inc    DWORD PTR [eax]
  442ee0:	(bad)  
  442ee1:	(bad)  
  442ee2:	inc    DWORD PTR [eax]
  442ee4:	(bad)  
  442ee5:	(bad)  
  442ee6:	inc    DWORD PTR [eax]
  442ee8:	(bad)  
  442ee9:	(bad)  
  442eea:	inc    DWORD PTR [eax]
  442eec:	(bad)  
  442eed:	(bad)  
  442eee:	inc    DWORD PTR [eax]
  442ef0:	(bad)  
  442ef1:	(bad)  
  442ef2:	inc    DWORD PTR [eax]
  442ef4:	(bad)  
  442ef5:	(bad)  
  442ef6:	inc    DWORD PTR [eax]
  442ef8:	(bad)  
  442ef9:	(bad)  
  442efa:	inc    DWORD PTR [eax]
  442efc:	(bad)  
  442efd:	(bad)  
  442efe:	inc    DWORD PTR [eax]
  442f00:	add    BYTE PTR [eax],al
  442f02:	xor    al,BYTE PTR [eax]
  442f04:	add    BYTE PTR [eax],al
  442f06:	xor    al,BYTE PTR [eax]
  442f08:	add    BYTE PTR [eax],al
  442f0a:	xor    al,BYTE PTR [eax]
  442f0c:	add    BYTE PTR [eax],al
  442f0e:	xor    al,BYTE PTR [eax]
  442f10:	add    BYTE PTR [eax],al
  442f12:	xor    al,BYTE PTR [eax]
  442f14:	add    BYTE PTR [eax],al
  442f16:	xor    al,BYTE PTR [eax]
  442f18:	add    BYTE PTR [eax],al
  442f1a:	xor    DWORD PTR [eax],eax
  442f1c:	add    BYTE PTR [eax],al
  442f1e:	xor    BYTE PTR [eax],al
  442f20:	add    BYTE PTR [eax],al
  442f22:	sub    al,0x0
  442f24:	add    BYTE PTR [eax],al
  442f26:	daa    
  442f27:	daa    
  442f28:	(bad)  
  442f29:	punpckhwd mm2,QWORD PTR [esi-0xc78e4e5]
  442f30:	adc    DWORD PTR [ecx],edx
  442f32:	jno    0x442f33
  442f34:	add    DWORD PTR [ecx],eax
  442f36:	pop    ebx
  442f37:	inc    DWORD PTR [eax]
  442f39:	add    BYTE PTR [ebp-0x1],dl
  442f3c:	add    BYTE PTR [eax],al
  442f3e:	ja     0x442f3f
  442f40:	pop    es
  442f41:	pop    es
  442f42:	mov    ch,0xff
  442f44:	(bad)  
  442f45:	pmovmskb edi,mm7
  442f48:	adc    BYTE PTR [eax],dl
  442f4a:	(bad)  
  442f4b:	dec    DWORD PTR [esi]
  442f4d:	push   cs
  442f4e:	mov    ecx,0xb30f0fff
  442f53:	dec    DWORD PTR [edi]
  442f55:	cmpxchg bh,bh
  442f58:	push   cs
  442f59:	push   cs
  442f5a:	scas   eax,DWORD PTR es:[edi]
  442f5b:	dec    DWORD PTR ds:0xbffae0d
  442f61:	or     ebp,DWORD PTR [ebx-0x5ef4f401]
  442f67:	dec    DWORD PTR [ecx]
  442f69:	or     DWORD PTR [esi+0x7c0707ff],ecx
  442f6f:	inc    DWORD PTR [esi]
  442f71:	push   es
  442f72:	jp     0x442f73
  442f74:	pop    es
  442f75:	pop    es
  442f76:	mov    edi,edi
  442f78:	or     cl,BYTE PTR [edx]
  442f7a:	mov    ds:0xad0e0eff,eax
  442f7f:	dec    DWORD PTR [esi]
  442f81:	push   cs
  442f82:	mov    cl,0xff
  442f84:	(bad)  
  442f85:	(bad)  
  442f87:	dec    DWORD PTR [esi]
  442f89:	push   cs
  442f8a:	mov    ah,0xff
  442f8c:	(bad)  
  442f8d:	btc    edi,edi
  442f90:	adc    BYTE PTR [eax],dl
  442f92:	retf   
  442f93:	dec    DWORD PTR ds:0x4ffd20d
  442f99:	add    al,0xa0
  442f9b:	inc    DWORD PTR [ecx]
  442f9d:	add    DWORD PTR [edi-0x1],esp
  442fa0:	add    BYTE PTR [eax],al
  442fa2:	push   edx
  442fa3:	inc    DWORD PTR ds:0x16ff6205
  442fa9:	push   ss
  442faa:	js     0x442fab
  442fac:	sbb    DWORD PTR [ecx],ebx
  442fae:	xchg   esi,ebx
  442fb0:	or     BYTE PTR [eax],cl
  442fb2:	push   ecx
  442fb3:	outs   dx,BYTE PTR ds:[esi]
  442fb4:	add    BYTE PTR [eax],al
  442fb6:	adc    al,0x14
  442fb8:	add    BYTE PTR [eax],al
  442fba:	add    BYTE PTR [eax],al
  442fbc:	add    BYTE PTR [eax],al
  442fbe:	add    BYTE PTR [ecx],al
	...
  442fdc:	(bad)  
  442fdd:	(bad)  
  442fde:	inc    DWORD PTR [eax]
  442fe0:	(bad)  
  442fe1:	(bad)  
  442fe2:	inc    DWORD PTR [eax]
  442fe4:	(bad)  
  442fe5:	(bad)  
  442fe6:	inc    DWORD PTR [eax]
  442fe8:	(bad)  
  442fe9:	(bad)  
  442fea:	inc    DWORD PTR [eax]
  442fec:	(bad)  
  442fed:	(bad)  
  442fee:	inc    DWORD PTR [eax]
  442ff0:	(bad)  
  442ff1:	(bad)  
  442ff2:	inc    DWORD PTR [eax]
  442ff4:	(bad)  
  442ff5:	(bad)  
  442ff6:	inc    DWORD PTR [eax]
  442ff8:	(bad)  
  442ff9:	(bad)  
  442ffa:	inc    DWORD PTR [eax]
  442ffc:	(bad)  
  442ffd:	(bad)  
  442ffe:	inc    DWORD PTR [eax]
	...
  443028:	add    BYTE PTR [eax],al
  44302a:	sub    BYTE PTR [esi],ah
  44302c:	or     eax,0x1594620d
  443031:	adc    eax,0x808ea77
  443036:	pop    edi
  443037:	inc    DWORD PTR [ecx]
  443039:	add    DWORD PTR [ebx-0x1],edx
  44303c:	add    BYTE PTR [eax],al
  44303e:	dec    edi
  44303f:	inc    DWORD PTR [edx]
  443041:	add    al,BYTE PTR [ebx-0x37f5f501]
  443047:	call   DWORD PTR [ecx]
  443049:	adc    ebp,ebx
  44304b:	call   DWORD PTR [ecx]
  44304d:	adc    edi,ecx
  44304f:	call   DWORD PTR [ecx]
  443051:	adc    ebp,eax
  443053:	call   DWORD PTR [eax]
  443055:	adc    al,al
  443057:	call   DWORD PTR [eax]
  443059:	adc    BYTE PTR [edi-0x41efef01],bh
  44305f:	call   DWORD PTR [eax]
  443061:	adc    BYTE PTR [edx-0x70f4f401],bh
  443067:	inc    DWORD PTR [esi]
  443069:	push   es
  44306a:	dec    edx
  44306b:	inc    DWORD PTR [edx]
  44306d:	add    bl,BYTE PTR ds:0x270303ff
  443073:	inc    DWORD PTR [edi]
  443075:	pop    es
  443076:	dec    esi
  443077:	dec    DWORD PTR [esp+ecx*1]
  44307a:	xchg   ebx,eax
  44307b:	dec    DWORD PTR [edi]
  44307d:	btr    edi,edi
  443080:	adc    DWORD PTR [ecx],edx
  443082:	sar    edi,0x10
  443085:	adc    ah,al
  443087:	call   DWORD PTR [eax]
  443089:	adc    bh,al
  44308b:	call   DWORD PTR [ecx]
  44308d:	adc    edi,edx
  44308f:	dec    DWORD PTR [edi]
  443091:	psubusb mm7,mm7
  443094:	add    eax,0xffb305
  443099:	add    BYTE PTR [edi+edi*8+0x0],ch
  44309d:	add    BYTE PTR [edi-0x1],cl
  4430a0:	add    eax,DWORD PTR [ebx]
  4430a2:	push   esi
  4430a3:	dec    DWORD PTR ds:0x15ff690d
  4430a9:	adc    eax,0x505d877
  4430ae:	dec    ebp
  4430af:	outs   dx,BYTE PTR ds:[esi]
  4430b0:	add    BYTE PTR [eax],al
  4430b2:	push   cs
  4430b3:	push   cs
  4430b4:	add    BYTE PTR [eax],al
  4430b6:	add    BYTE PTR [eax],al
  4430b8:	add    BYTE PTR [eax],al
  4430ba:	add    BYTE PTR [ecx],al
  4430bc:	add    BYTE PTR [eax],al
  4430be:	add    BYTE PTR [ecx],al
	...
  4430dc:	(bad)  
  4430dd:	(bad)  
  4430de:	inc    DWORD PTR [eax]
  4430e0:	(bad)  
  4430e1:	(bad)  
  4430e2:	inc    DWORD PTR [eax]
  4430e4:	(bad)  
  4430e5:	(bad)  
  4430e6:	inc    DWORD PTR [eax]
  4430e8:	(bad)  
  4430e9:	(bad)  
  4430ea:	inc    DWORD PTR [eax]
  4430ec:	(bad)  
  4430ed:	(bad)  
  4430ee:	inc    DWORD PTR [eax]
  4430f0:	(bad)  
  4430f1:	(bad)  
  4430f2:	inc    DWORD PTR [eax]
  4430f4:	(bad)  
  4430f5:	(bad)  
  4430f6:	inc    DWORD PTR [eax]
  4430f8:	(bad)  
  4430f9:	(bad)  
  4430fa:	inc    DWORD PTR [eax]
  4430fc:	(bad)  
  4430fd:	(bad)  
  4430fe:	inc    DWORD PTR [eax]
	...
  443124:	add    BYTE PTR [eax],al
  443126:	add    BYTE PTR [ecx],al
  443128:	add    BYTE PTR [eax],al
  44312a:	add    BYTE PTR [eax],al
  44312c:	add    BYTE PTR [eax],al
  44312e:	and    BYTE PTR [ebx],bl
  443130:	push   es
  443131:	push   es
  443132:	pop    edx
  443133:	mov    cs,WORD PTR ds:0x2ed630d
  443139:	add    dl,BYTE PTR [esi+edi*8+0x0]
  44313d:	add    BYTE PTR [ebp-0x1],al
  443140:	add    BYTE PTR [eax],al
  443142:	push   ebx
  443143:	inc    DWORD PTR [ebx]
  443145:	add    edx,DWORD PTR [eax-0x2cf2f201]
  44314b:	call   DWORD PTR [eax]
  44314d:	adc    dl,al
  44314f:	dec    DWORD PTR [edi]
  443151:	push   gs
  443153:	dec    DWORD PTR [esp+ecx*1]
  443156:	mov    edi,edi
  443158:	or     DWORD PTR [ecx],ecx
  44315a:	inc    DWORD PTR ds:0x4806
  44315f:	inc    DWORD PTR [esp+eax*1]
  443162:	sub    edi,edi
  443164:	add    al,BYTE PTR [edx]
  443166:	sbb    bh,bh
  443168:	add    BYTE PTR [eax],al
  44316a:	add    al,0xff
  44316c:	add    BYTE PTR [eax],al
  44316e:	add    bh,bh
  443170:	add    BYTE PTR [eax],al
  443172:	add    bh,bh
  443174:	add    al,BYTE PTR [edx]
  443176:	adc    bh,bh
  443178:	or     cl,BYTE PTR [edx]
  44317a:	jnp    0x44317b
  44317c:	(bad)  
  44317d:	cmpxchg bh,bh
  443180:	adc    DWORD PTR [ecx],edx
  443182:	sar    bh,1
  443184:	adc    dl,BYTE PTR [edx]
  443186:	sar    edi,cl
  443188:	adc    edx,DWORD PTR [ebx]
  44318a:	fdivp  st(7),st
  44318c:	adc    BYTE PTR [eax],dl
  44318e:	in     eax,0xff
  443190:	or     BYTE PTR [eax],cl
  443192:	mov    edi,0x720000ff
  443197:	inc    DWORD PTR [eax]
  443199:	add    BYTE PTR [ebp-0x1],cl
  44319c:	add    BYTE PTR [eax],al
  44319e:	dec    edx
  44319f:	inc    DWORD PTR [edi]
  4431a1:	pop    es
  4431a2:	pop    esp
  4431a3:	clc    
  4431a4:	or     eax,0x2d1620d
  4431a9:	add    cl,BYTE PTR [edx+0x5f]
  4431ac:	add    BYTE PTR [eax],al
  4431ae:	push   es
  4431af:	add    eax,0x0
  4431b4:	add    BYTE PTR [eax],al
  4431b6:	add    BYTE PTR [ecx],al
  4431b8:	add    BYTE PTR [eax],al
  4431ba:	add    BYTE PTR [ecx],al
	...
  4431dc:	(bad)  
  4431dd:	(bad)  
  4431de:	inc    DWORD PTR [eax]
  4431e0:	(bad)  
  4431e1:	(bad)  
  4431e2:	inc    DWORD PTR [eax]
  4431e4:	(bad)  
  4431e5:	(bad)  
  4431e6:	inc    DWORD PTR [eax]
  4431e8:	(bad)  
  4431e9:	(bad)  
  4431ea:	inc    DWORD PTR [eax]
  4431ec:	(bad)  
  4431ed:	(bad)  
  4431ee:	inc    DWORD PTR [eax]
  4431f0:	(bad)  
  4431f1:	(bad)  
  4431f2:	inc    DWORD PTR [eax]
  4431f4:	(bad)  
  4431f5:	(bad)  
  4431f6:	inc    DWORD PTR [eax]
  4431f8:	(bad)  
  4431f9:	(bad)  
  4431fa:	inc    DWORD PTR [eax]
  4431fc:	(bad)  
  4431fd:	(bad)  
  4431fe:	inc    DWORD PTR [eax]
	...
  443224:	add    BYTE PTR [eax],al
  443226:	add    BYTE PTR [ecx],al
  443228:	add    BYTE PTR [eax],al
  44322a:	add    BYTE PTR [ecx],al
  44322c:	add    BYTE PTR [eax],al
  44322e:	add    al,BYTE PTR [edx]
  443230:	add    BYTE PTR [eax],al
  443232:	sbb    ebx,DWORD PTR [edx]
  443234:	add    DWORD PTR [ecx],eax
  443236:	push   edi
  443237:	je     0x44323b
  443239:	add    cl,BYTE PTR [ebp-0x17]
  44323c:	add    DWORD PTR [ecx],eax
  44323e:	inc    esp
  44323f:	inc    DWORD PTR [eax]
  443241:	add    BYTE PTR ds:0x250000ff,ch
  443247:	inc    DWORD PTR [edx]
  443249:	add    dh,BYTE PTR [eax]
  44324b:	inc    DWORD PTR [ebx]
  44324d:	add    esi,DWORD PTR [edx]
  44324f:	inc    DWORD PTR [ebx]
  443251:	add    esp,DWORD PTR ds:0x1c0303ff
  443257:	inc    DWORD PTR [ebx]
  443259:	add    ebx,DWORD PTR [edi]
  44325b:	inc    DWORD PTR [ebx]
  44325d:	add    esp,DWORD PTR [edi]
  44325f:	inc    DWORD PTR [esp+eax*1]
  443262:	sub    eax,0x2f0404ff
  443267:	inc    DWORD PTR [ebx]
  443269:	add    ebx,DWORD PTR ds:0xc0101ff
  44326f:	inc    DWORD PTR [edx]
  443271:	add    dl,BYTE PTR [edi+edi*8]
  443274:	add    eax,0xcff3905
  443279:	or     al,0x96
  44327b:	call   DWORD PTR [ecx]
  44327d:	adc    ecx,eax
  44327f:	call   DWORD PTR [ebx]
  443281:	adc    ebx,ebp
  443283:	call   DWORD PTR [esp+edx*1]
  443286:	out    0xff,al
  443288:	adc    edx,DWORD PTR [ebx]
  44328a:	repz dec DWORD PTR [ebx]
  44328d:	or     ecx,edx
  44328f:	inc    DWORD PTR [ecx]
  443291:	add    DWORD PTR [ebx-0x1],edi
  443294:	add    BYTE PTR [eax],al
  443296:	inc    ebp
  443297:	inc    DWORD PTR [eax]
  443299:	add    BYTE PTR [eax-0x1],cl
  44329c:	add    al,BYTE PTR [edx]
  44329e:	dec    esp
  44329f:	inc    DWORD PTR [ecx]
  4432a1:	add    DWORD PTR [edx+eax*8+0x1],edx
  4432a5:	add    DWORD PTR [ecx+0x48],eax
  4432a8:	add    BYTE PTR [eax],al
  4432aa:	add    al,0x7
  4432ac:	add    BYTE PTR [eax],al
  4432ae:	add    BYTE PTR [ecx],al
  4432b0:	add    BYTE PTR [eax],al
  4432b2:	add    BYTE PTR [ecx],al
  4432b4:	add    BYTE PTR [eax],al
  4432b6:	add    BYTE PTR [ecx],al
	...
  4432dc:	(bad)  
  4432dd:	(bad)  
  4432de:	inc    DWORD PTR [eax]
  4432e0:	(bad)  
  4432e1:	(bad)  
  4432e2:	inc    DWORD PTR [eax]
  4432e4:	(bad)  
  4432e5:	(bad)  
  4432e6:	inc    DWORD PTR [eax]
  4432e8:	(bad)  
  4432e9:	(bad)  
  4432ea:	inc    DWORD PTR [eax]
  4432ec:	(bad)  
  4432ed:	(bad)  
  4432ee:	inc    DWORD PTR [eax]
  4432f0:	(bad)  
  4432f1:	(bad)  
  4432f2:	inc    DWORD PTR [eax]
  4432f4:	(bad)  
  4432f5:	(bad)  
  4432f6:	inc    DWORD PTR [eax]
  4432f8:	(bad)  
  4432f9:	(bad)  
  4432fa:	inc    DWORD PTR [eax]
  4432fc:	(bad)  
  4432fd:	(bad)  
  4432fe:	inc    DWORD PTR [eax]
	...
  443328:	add    BYTE PTR [eax],al
  44332a:	add    BYTE PTR [ecx],al
  44332c:	add    BYTE PTR [eax],al
  44332e:	add    BYTE PTR [eax],al
  443330:	(bad)  
  443331:	(bad)  
  443332:	inc    DWORD PTR [eax]
  443334:	add    BYTE PTR [eax],al
  443336:	adc    eax,0x900001d
  44333b:	retf   0x0
  44333e:	add    al,0xfb
  443340:	add    BYTE PTR [eax],al
  443342:	add    al,0xff
  443344:	add    BYTE PTR [eax],al
  443346:	add    al,0xff
  443348:	add    BYTE PTR [eax],al
  44334a:	or     edi,edi
  44334c:	add    DWORD PTR [ecx],eax
  44334e:	and    eax,0x570505ff
  443353:	dec    DWORD PTR [ebx]
  443355:	or     ecx,DWORD PTR [edi+edi*8-0x56f0f1]
  44335c:	adc    BYTE PTR [eax],dl
  44335e:	sar    bh,0x12
  443361:	adc    dl,al
  443363:	call   DWORD PTR [edx]
  443365:	adc    cl,bh
  443367:	dec    DWORD PTR [esp+ecx*1]
  44336a:	mov    edi,?
  44336c:	or     BYTE PTR [eax],cl
  44336e:	pop    eax
  44336f:	dec    DWORD PTR [ecx]
  443371:	or     DWORD PTR [ebx-0x1],ebp
  443374:	push   cs
  443375:	push   cs
  443376:	lods   eax,DWORD PTR ds:[esi]
  443377:	call   DWORD PTR [ebx]
  443379:	adc    ebx,edx
  44337b:	call   DWORD PTR ds:0x16ffec15
  443381:	push   ss
  443382:	idiv   edi
  443384:	adc    dl,BYTE PTR [edx]
  443386:	idiv   edi
  443388:	or     DWORD PTR [ecx],ecx
  44338a:	(bad)  
  44338b:	inc    DWORD PTR [edx]
  44338d:	add    bh,BYTE PTR [ecx-0x1]
  443390:	add    BYTE PTR [eax],al
  443392:	inc    esp
  443393:	inc    DWORD PTR [eax]
  443395:	add    BYTE PTR [ecx-0x1],al
  443398:	add    BYTE PTR [eax],al
  44339a:	inc    ebp
  44339b:	hlt    
  44339c:	add    DWORD PTR [ecx],eax
  44339e:	push   ebx
  44339f:	xchg   esp,eax
  4433a0:	add    BYTE PTR [eax],al
  4433a2:	aaa    
  4433a3:	xor    eax,0x80d0000
	...
  4433dc:	(bad)  
  4433dd:	(bad)  
  4433de:	inc    DWORD PTR [eax]
  4433e0:	(bad)  
  4433e1:	(bad)  
  4433e2:	inc    DWORD PTR [eax]
  4433e4:	(bad)  
  4433e5:	(bad)  
  4433e6:	inc    DWORD PTR [eax]
  4433e8:	(bad)  
  4433e9:	(bad)  
  4433ea:	inc    DWORD PTR [eax]
  4433ec:	(bad)  
  4433ed:	(bad)  
  4433ee:	inc    DWORD PTR [eax]
  4433f0:	(bad)  
  4433f1:	(bad)  
  4433f2:	inc    DWORD PTR [eax]
  4433f4:	(bad)  
  4433f5:	(bad)  
  4433f6:	inc    DWORD PTR [eax]
  4433f8:	(bad)  
  4433f9:	(bad)  
  4433fa:	inc    DWORD PTR [eax]
  4433fc:	(bad)  
  4433fd:	(bad)  
  4433fe:	inc    DWORD PTR [eax]
	...
  44342c:	add    BYTE PTR [eax],al
  44342e:	add    BYTE PTR [ecx],al
  443430:	add    BYTE PTR [eax],al
  443432:	add    BYTE PTR [ecx],cl
  443434:	add    BYTE PTR [eax],al
  443436:	add    BYTE PTR [ecx-0x45000000],dh
  44343c:	add    BYTE PTR [eax],al
  44343e:	adc    BYTE PTR [eax-0x63c70000],cl
  443444:	add    BYTE PTR [eax],al
  443446:	cmp    bl,bl
  443448:	add    BYTE PTR [eax],al
  44344a:	xor    eax,0x440000ff
  44344f:	inc    DWORD PTR [ebx]
  443451:	add    edi,DWORD PTR [edx-0x1]
  443454:	or     cl,BYTE PTR [edx]
  443456:	mov    ecx,0xe01111ff
  44345b:	call   DWORD PTR [esp+edx*1]
  44345e:	jmp    0xee5a4b62
  443463:	call   DWORD PTR [esi]
  443465:	push   ss
  443466:	out    dx,al
  443467:	call   DWORD PTR ds:0x13ffe015
  44346d:	adc    edx,esp
  44346f:	call   DWORD PTR [esp+edx*1]
  443472:	fdivr  st,st(7)
  443474:	adc    eax,0x16ffe815
  443479:	push   ss
  44347a:	bnd call DWORD PTR [esp+edx*1]
  44347e:	hlt    
  44347f:	call   DWORD PTR [eax]
  443481:	adc    dl,ah
  443483:	inc    DWORD PTR [edi]
  443485:	pop    es
  443486:	mov    dl,0xff
  443488:	add    DWORD PTR [ecx],eax
  44348a:	outs   dx,BYTE PTR ds:[esi]
  44348b:	inc    DWORD PTR [eax]
  44348d:	add    BYTE PTR [edi],bh
  44348f:	inc    DWORD PTR [eax]
  443491:	add    BYTE PTR [edx],bh
  443493:	test   DWORD PTR [eax],0xbc4800
  443499:	add    BYTE PTR [edx+0x6c],cl
  44349c:	add    BYTE PTR [eax],al
  44349e:	xor    ah,BYTE PTR [ecx]
  4434a0:	add    BYTE PTR [eax],al
  4434a2:	adc    BYTE PTR [eax],al
	...
  4434ac:	add    BYTE PTR [eax],al
  4434ae:	add    BYTE PTR [ecx],al
	...
  4434dc:	(bad)  
  4434dd:	(bad)  
  4434de:	inc    DWORD PTR [eax]
  4434e0:	(bad)  
  4434e1:	(bad)  
  4434e2:	inc    DWORD PTR [eax]
  4434e4:	(bad)  
  4434e5:	(bad)  
  4434e6:	inc    DWORD PTR [eax]
  4434e8:	(bad)  
  4434e9:	(bad)  
  4434ea:	inc    DWORD PTR [eax]
  4434ec:	(bad)  
  4434ed:	(bad)  
  4434ee:	inc    DWORD PTR [eax]
  4434f0:	(bad)  
  4434f1:	(bad)  
  4434f2:	inc    DWORD PTR [eax]
  4434f4:	(bad)  
  4434f5:	(bad)  
  4434f6:	inc    DWORD PTR [eax]
  4434f8:	(bad)  
  4434f9:	(bad)  
  4434fa:	inc    DWORD PTR [eax]
  4434fc:	(bad)  
  4434fd:	(bad)  
  4434fe:	inc    DWORD PTR [eax]
	...
  443528:	(bad)  
  443529:	(bad)  
  44352a:	inc    DWORD PTR [eax]
  44352c:	add    BYTE PTR [eax],al
  44352e:	add    BYTE PTR [ecx],al
  443530:	add    BYTE PTR [eax],al
  443532:	add    BYTE PTR [eax-0x40000000],cl
  443538:	add    BYTE PTR [eax],al
  44353a:	add    BYTE PTR [ecx+0x0],dl
  44353d:	add    BYTE PTR [eax],al
  44353f:	adc    DWORD PTR [eax],eax
  443541:	add    BYTE PTR [ecx],dh
  443543:	or     al,0x0
  443545:	add    BYTE PTR [ecx],dh
  443547:	pusha  
  443548:	add    BYTE PTR [eax],al
  44354a:	cmp    al,0xaa
  44354c:	add    BYTE PTR [eax],al
  44354e:	sub    dh,cl
  443550:	add    BYTE PTR [eax],al
  443552:	cs loopne 0x443556
  443555:	add    DWORD PTR [eax-0xf],esp
  443558:	pop    es
  443559:	pop    es
  44355a:	stos   BYTE PTR es:[edi],al
  44355b:	dec    DWORD PTR [esp+ecx*1]
  44355e:	fdivp  st(7),st
  443560:	adc    BYTE PTR [eax],dl
  443562:	hlt    
  443563:	call   DWORD PTR [ecx]
  443565:	adc    edx,edi
  443567:	call   DWORD PTR [eax]
  443569:	adc    al,bh
  44356b:	call   DWORD PTR [eax]
  44356d:	adc    al,bh
  44356f:	call   DWORD PTR [ecx]
  443571:	adc    eax,edi
  443573:	call   DWORD PTR [ecx]
  443575:	adc    ecx,edi
  443577:	call   DWORD PTR [eax]
  443579:	adc    bl,ch
  44357b:	dec    DWORD PTR [ebx]
  44357d:	or     eax,edx
  44357f:	std    
  443580:	add    eax,0xf48705
  443585:	add    BYTE PTR [edx-0x14],cl
  443588:	add    BYTE PTR [eax],al
  44358a:	xor    al,ah
  44358c:	add    BYTE PTR [eax],al
  44358e:	xor    ecx,eax
  443590:	add    BYTE PTR [eax],al
  443592:	cmp    DWORD PTR [ebp+0x3d2d0000],ecx
  443598:	add    BYTE PTR [eax],al
  44359a:	xor    BYTE PTR [eax],al
  44359c:	add    BYTE PTR [eax],al
  44359e:	or     DWORD PTR [eax],eax
  4435a0:	add    BYTE PTR [eax],al
  4435a2:	add    BYTE PTR [eax],al
  4435a4:	add    BYTE PTR [eax],al
  4435a6:	add    BYTE PTR [ecx],al
	...
  4435dc:	(bad)  
  4435dd:	(bad)  
  4435de:	inc    DWORD PTR [eax]
  4435e0:	(bad)  
  4435e1:	(bad)  
  4435e2:	inc    DWORD PTR [eax]
  4435e4:	(bad)  
  4435e5:	(bad)  
  4435e6:	inc    DWORD PTR [eax]
  4435e8:	(bad)  
  4435e9:	(bad)  
  4435ea:	inc    DWORD PTR [eax]
  4435ec:	(bad)  
  4435ed:	(bad)  
  4435ee:	inc    DWORD PTR [eax]
  4435f0:	(bad)  
  4435f1:	(bad)  
  4435f2:	inc    DWORD PTR [eax]
  4435f4:	(bad)  
  4435f5:	(bad)  
  4435f6:	inc    DWORD PTR [eax]
  4435f8:	(bad)  
  4435f9:	(bad)  
  4435fa:	inc    DWORD PTR [eax]
  4435fc:	(bad)  
  4435fd:	(bad)  
  4435fe:	inc    DWORD PTR [eax]
	...
  443628:	add    BYTE PTR [eax],al
  44362a:	add    BYTE PTR [ecx],cl
  44362c:	add    BYTE PTR [eax],al
  44362e:	add    BYTE PTR [eax+0x0],cl
  443631:	add    BYTE PTR [eax],al
  443633:	fld    QWORD PTR [eax]
  443635:	add    BYTE PTR [eax],al
  443637:	cmp    al,BYTE PTR [eax]
  443639:	add    BYTE PTR [eax],al
  44363b:	add    DWORD PTR [eax],eax
  44363d:	add    BYTE PTR [eax],al
  44363f:	add    DWORD PTR [eax],eax
	...
  443649:	add    BYTE PTR [edi],ch
  44364b:	or     DWORD PTR [eax],eax
  44364d:	add    BYTE PTR [eax+0x40],al
  443650:	add    BYTE PTR [eax],al
  443652:	inc    eax
  443653:	add    BYTE PTR [eax],0x0
  443656:	push   eax
  443657:	int3   
  443658:	add    BYTE PTR [eax],al
  44365a:	xchg   esi,edi
  44365c:	add    BYTE PTR [eax],al
  44365e:	sar    bh,cl
  443660:	add    eax,DWORD PTR [ebx]
  443662:	repz inc DWORD PTR [esp+eax*1]
  443666:	sti    
  443667:	inc    DWORD PTR [ebx]
  443669:	add    edi,ecx
  44366b:	inc    DWORD PTR [ebx]
  44366d:	add    edi,eax
  44366f:	inc    DWORD PTR [esp+eax*1]
  443672:	stc    
  443673:	inc    DWORD PTR [esi]
  443675:	push   es
  443676:	cli    
  443677:	inc    DWORD PTR [ebx]
  443679:	add    ebx,ecx
  44367b:	inc    DWORD PTR [eax]
  44367d:	add    BYTE PTR [eax+0x4a0000f7],dl
  443683:	rol    DWORD PTR [eax],cl
  443685:	add    BYTE PTR [eax],bh
  443687:	mov    ds:0x702c0000,al
  44368c:	add    BYTE PTR [eax],al
  44368e:	sub    eax,0x1d00002d
	...
  4436db:	add    bh,bh
  4436dd:	(bad)  
  4436de:	inc    DWORD PTR [eax]
  4436e0:	(bad)  
  4436e1:	(bad)  
  4436e2:	inc    DWORD PTR [eax]
  4436e4:	(bad)  
  4436e5:	(bad)  
  4436e6:	inc    DWORD PTR [eax]
  4436e8:	(bad)  
  4436e9:	(bad)  
  4436ea:	inc    DWORD PTR [eax]
  4436ec:	(bad)  
  4436ed:	(bad)  
  4436ee:	inc    DWORD PTR [eax]
  4436f0:	(bad)  
  4436f1:	(bad)  
  4436f2:	inc    DWORD PTR [eax]
  4436f4:	(bad)  
  4436f5:	(bad)  
  4436f6:	inc    DWORD PTR [eax]
  4436f8:	(bad)  
  4436f9:	(bad)  
  4436fa:	inc    DWORD PTR [eax]
  4436fc:	(bad)  
  4436fd:	(bad)  
  4436fe:	inc    DWORD PTR [eax]
	...
  443728:	add    BYTE PTR [eax],al
  44372a:	add    BYTE PTR ds:0x6a000000,dl
  443730:	add    BYTE PTR [eax],al
  443732:	add    cl,ch
  443734:	add    BYTE PTR [eax],al
  443736:	add    BYTE PTR [eax+eax*1],cl
	...
  44374d:	add    BYTE PTR [edi-0x28fffffd],bl
  443753:	pusha  
  443754:	add    BYTE PTR [eax],al
  443756:	loope  0x443727
  443758:	add    BYTE PTR [eax],al
  44375a:	icebp  
  44375b:	inc    DWORD PTR [eax]
  44375d:	add    ch,dh
  44375f:	inc    DWORD PTR [eax]
  443761:	add    cl,dh
  443763:	inc    DWORD PTR [eax]
  443765:	add    bl,ch
  443767:	inc    DWORD PTR [eax]
  443769:	add    cl,ch
  44376b:	inc    DWORD PTR [eax]
  44376d:	add    cl,ch
  44376f:	inc    DWORD PTR [eax]
  443771:	add    ah,ch
  443773:	inc    DWORD PTR [eax]
  443775:	add    al,dh
  443777:	inc    DWORD PTR [eax]
  443779:	add    ah,dh
  44377b:	inc    DWORD PTR [eax]
  44377d:	add    cl,ch
  44377f:	clc    
  443780:	add    BYTE PTR [eax],al
  443782:	rol    ebp,cl
  443784:	add    BYTE PTR [eax],al
  443786:	ret    
  443787:	push   edi
  443788:	add    BYTE PTR [eax],al
  44378a:	sub    ecx,DWORD PTR [esi]
	...
  4437dc:	(bad)  
  4437dd:	(bad)  
  4437de:	inc    DWORD PTR [eax]
  4437e0:	(bad)  
  4437e1:	(bad)  
  4437e2:	inc    DWORD PTR [eax]
  4437e4:	(bad)  
  4437e5:	(bad)  
  4437e6:	inc    DWORD PTR [eax]
  4437e8:	(bad)  
  4437e9:	(bad)  
  4437ea:	inc    DWORD PTR [eax]
  4437ec:	(bad)  
  4437ed:	(bad)  
  4437ee:	inc    DWORD PTR [eax]
  4437f0:	(bad)  
  4437f1:	(bad)  
  4437f2:	inc    DWORD PTR [eax]
  4437f4:	(bad)  
  4437f5:	(bad)  
  4437f6:	inc    DWORD PTR [eax]
  4437f8:	(bad)  
  4437f9:	(bad)  
  4437fa:	inc    DWORD PTR [eax]
  4437fc:	(bad)  
  4437fd:	(bad)  
  4437fe:	inc    DWORD PTR [eax]
	...
  443828:	add    BYTE PTR [eax],al
  44382a:	add    BYTE PTR [esi],dl
  44382c:	add    BYTE PTR [eax],al
  44382e:	add    BYTE PTR [eax-0x17000000],al
  443834:	add    BYTE PTR [eax],al
  443836:	add    BYTE PTR [esi],cl
	...
  443848:	add    BYTE PTR [eax],al
  44384a:	mov    dh,0x2a
  44384c:	add    BYTE PTR [eax],al
  44384e:	lock xchg edx,eax
  443850:	add    BYTE PTR [eax],al
  443852:	call   ecx
  443854:	add    BYTE PTR [eax],al
  443856:	div    edx
  443858:	add    BYTE PTR [eax],al
  44385a:	call   0xdc44395e
  44385f:	inc    DWORD PTR [eax]
  443861:	add    dl,dl
  443863:	inc    DWORD PTR [eax]
  443865:	add    al,dl
  443867:	inc    DWORD PTR [eax]
  443869:	add    dl,dl
  44386b:	inc    DWORD PTR [eax]
  44386d:	add    dl,dl
  44386f:	inc    DWORD PTR [eax]
  443871:	add    cl,dl
  443873:	inc    DWORD PTR [eax]
  443875:	add    dl,dl
  443877:	inc    DWORD PTR [eax]
  443879:	add    dl,bl
  44387b:	inc    DWORD PTR [eax]
  44387d:	add    cl,ch
  44387f:	std    
  443880:	add    BYTE PTR [eax],al
  443882:	cmc    
  443883:	out    dx,al
  443884:	add    BYTE PTR [eax],al
  443886:	std    
  443887:	retf   
  443888:	add    BYTE PTR [eax],al
  44388a:	enter  0x81,0x0
  44388e:	mov    bl,0x1c
  443890:	add    BYTE PTR [eax],al
  443892:	mov    ah,0x0
  443894:	add    BYTE PTR [eax],al
  443896:	lods   eax,DWORD PTR ds:[esi]
  443897:	add    BYTE PTR [eax],al
  443899:	add    BYTE PTR [edx],al
	...
  4438db:	add    bh,bh
  4438dd:	(bad)  
  4438de:	inc    DWORD PTR [eax]
  4438e0:	(bad)  
  4438e1:	(bad)  
  4438e2:	inc    DWORD PTR [eax]
  4438e4:	(bad)  
  4438e5:	(bad)  
  4438e6:	inc    DWORD PTR [eax]
  4438e8:	(bad)  
  4438e9:	(bad)  
  4438ea:	inc    DWORD PTR [eax]
  4438ec:	(bad)  
  4438ed:	(bad)  
  4438ee:	inc    DWORD PTR [eax]
  4438f0:	(bad)  
  4438f1:	(bad)  
  4438f2:	inc    DWORD PTR [eax]
  4438f4:	(bad)  
  4438f5:	(bad)  
  4438f6:	inc    DWORD PTR [eax]
  4438f8:	(bad)  
  4438f9:	(bad)  
  4438fa:	inc    DWORD PTR [eax]
  4438fc:	(bad)  
  4438fd:	(bad)  
  4438fe:	inc    DWORD PTR [eax]
	...
  443928:	add    BYTE PTR [eax],al
  44392a:	add    BYTE PTR [eax],dl
  44392c:	add    BYTE PTR [eax],al
  44392e:	add    BYTE PTR [edx-0x1e000000],dl
  443934:	add    BYTE PTR [eax],al
  443936:	add    BYTE PTR [ebx],cl
	...
  443944:	add    BYTE PTR [eax],al
  443946:	sahf   
  443947:	xor    DWORD PTR [eax],eax
  443949:	add    bh,bh
  44394b:	scas   al,BYTE PTR es:[edi]
  44394c:	add    BYTE PTR [eax],al
  44394e:	(bad)  
  44394f:	std    
  443950:	add    BYTE PTR [eax],al
  443952:	in     eax,0xff
  443954:	add    BYTE PTR [eax],al
  443956:	iret   
  443957:	inc    DWORD PTR [eax]
  443959:	add    dl,al
  44395b:	inc    DWORD PTR [eax]
  44395d:	add    cl,al
  44395f:	inc    DWORD PTR [eax]
  443961:	add    ebx,eax
  443963:	inc    DWORD PTR [eax]
  443965:	add    eax,esp
  443967:	inc    DWORD PTR [eax]
  443969:	add    cl,al
  44396b:	inc    DWORD PTR [eax]
  44396d:	add    ecx,eax
  44396f:	inc    DWORD PTR [eax]
  443971:	add    eax,0xffc4
  443976:	ret    0xff
  443979:	add    cl,al
  44397b:	inc    DWORD PTR [eax]
  44397d:	add    bh,al
  44397f:	inc    DWORD PTR [eax]
  443981:	add    ah,dl
  443983:	inc    DWORD PTR [eax]
  443985:	add    cl,ch
  443987:	inc    DWORD PTR [eax]
  443989:	add    bh,bh
  44398b:	lock add BYTE PTR [eax],al
  44398e:	dec    DWORD PTR [eax+eax*1+0x23ff00]
  443995:	add    bh,bh
	...
  4439db:	add    bh,bh
  4439dd:	(bad)  
  4439de:	inc    DWORD PTR [eax]
  4439e0:	(bad)  
  4439e1:	(bad)  
  4439e2:	inc    DWORD PTR [eax]
  4439e4:	(bad)  
  4439e5:	(bad)  
  4439e6:	inc    DWORD PTR [eax]
  4439e8:	(bad)  
  4439e9:	(bad)  
  4439ea:	inc    DWORD PTR [eax]
  4439ec:	(bad)  
  4439ed:	(bad)  
  4439ee:	inc    DWORD PTR [eax]
  4439f0:	(bad)  
  4439f1:	(bad)  
  4439f2:	inc    DWORD PTR [eax]
  4439f4:	(bad)  
  4439f5:	(bad)  
  4439f6:	inc    DWORD PTR [eax]
  4439f8:	(bad)  
  4439f9:	(bad)  
  4439fa:	inc    DWORD PTR [eax]
  4439fc:	(bad)  
  4439fd:	(bad)  
  4439fe:	inc    DWORD PTR [eax]
  443a00:	add    BYTE PTR [eax],al
  443a02:	cmp    eax,DWORD PTR [eax]
  443a04:	add    BYTE PTR [eax],al
  443a06:	cmp    eax,DWORD PTR [eax]
  443a08:	add    BYTE PTR [eax],al
  443a0a:	cmp    eax,DWORD PTR [eax]
  443a0c:	add    BYTE PTR [eax],al
  443a0e:	cmp    eax,DWORD PTR [eax]
  443a10:	add    BYTE PTR [eax],al
  443a12:	cmp    eax,DWORD PTR [eax]
  443a14:	add    BYTE PTR [eax],al
  443a16:	cmp    eax,DWORD PTR [eax]
  443a18:	add    BYTE PTR [eax],al
  443a1a:	cmp    eax,DWORD PTR [eax]
  443a1c:	add    BYTE PTR [eax],al
  443a1e:	cmp    eax,DWORD PTR [eax]
	...
  443a28:	add    BYTE PTR [eax],al
  443a2a:	add    BYTE PTR [eax],cl
  443a2c:	add    BYTE PTR [eax],al
  443a2e:	add    BYTE PTR [edx-0x1a000000],bh
  443a34:	add    BYTE PTR [eax],al
  443a36:	add    BYTE PTR [ebx],dh
	...
  443a40:	add    BYTE PTR [eax],al
  443a42:	jmp    DWORD PTR ds:0xa0ff0000
  443a48:	add    BYTE PTR [eax],al
  443a4a:	out    dx,al
  443a4b:	inc    DWORD PTR [eax]
  443a4d:	add    dh,dl
  443a4f:	inc    DWORD PTR [eax]
  443a51:	add    al,0xc3
  443a53:	inc    DWORD PTR [eax]
  443a55:	xadd   bh,bh
  443a58:	add    BYTE PTR [ebx],bl
  443a5a:	leave  
  443a5b:	inc    DWORD PTR [eax]
  443a5d:	sub    eax,0x4104ffd2
  443a62:	(bad)  
  443a64:	add    ebx,DWORD PTR [esi]
  443a66:	enter  0xff,0x0
  443a6a:	mov    ch,0xff
  443a6c:	add    BYTE PTR [ebx],al
  443a6e:	mov    eax,0xc61a02ff
  443a73:	inc    DWORD PTR [ebx]
  443a75:	cmp    edx,edi
  443a77:	inc    DWORD PTR [eax]
  443a79:	xor    al,0xd4
  443a7b:	inc    DWORD PTR [eax]
  443a7d:	sbb    eax,ecx
  443a7f:	inc    DWORD PTR [eax]
  443a81:	xadd   edi,edi
  443a84:	add    BYTE PTR ds:0xffc5,al
  443a8a:	fcos   
  443a8c:	add    BYTE PTR [eax],al
  443a8e:	out    dx,al
  443a8f:	icebp  
  443a90:	add    BYTE PTR [eax],al
  443a92:	cmc    
  443a93:	xchg   DWORD PTR [eax],eax
  443a95:	add    bl,dh
  443a97:	push   cs
  443a98:	add    BYTE PTR [eax],al
  443a9a:	inc    DWORD PTR [ecx]
  443a9c:	add    BYTE PTR [eax],al
  443a9e:	add    BYTE PTR [eax],al
  443aa0:	add    BYTE PTR [eax],al
  443aa2:	add    BYTE PTR [ecx],cl
  443aa4:	add    BYTE PTR [eax],al
  443aa6:	add    BYTE PTR [esi+0x0],ah
  443aa9:	add    BYTE PTR [eax],al
  443aab:	pop    ebp
  443aac:	add    BYTE PTR [eax],al
  443aae:	add    BYTE PTR [eax+eax*1],cl
	...
  443abd:	add    BYTE PTR [ecx],bh
  443abf:	add    BYTE PTR [eax],al
  443ac1:	add    BYTE PTR [ecx],bh
  443ac3:	add    BYTE PTR [eax],al
  443ac5:	add    BYTE PTR [ecx],bh
  443ac7:	add    BYTE PTR [eax],al
  443ac9:	add    BYTE PTR [ecx],bh
  443acb:	add    BYTE PTR [eax],al
  443acd:	add    BYTE PTR [ecx],bh
  443acf:	add    BYTE PTR [eax],al
  443ad1:	add    BYTE PTR [ecx],bh
  443ad3:	add    BYTE PTR [eax],al
  443ad5:	add    BYTE PTR [ecx],bh
  443ad7:	add    BYTE PTR [eax],al
  443ad9:	add    BYTE PTR [ecx],bh
  443adb:	add    bh,bh
  443add:	(bad)  
  443ade:	inc    DWORD PTR [eax]
  443ae0:	(bad)  
  443ae1:	(bad)  
  443ae2:	inc    DWORD PTR [eax]
  443ae4:	(bad)  
  443ae5:	(bad)  
  443ae6:	inc    DWORD PTR [eax]
  443ae8:	(bad)  
  443ae9:	(bad)  
  443aea:	inc    DWORD PTR [eax]
  443aec:	(bad)  
  443aed:	(bad)  
  443aee:	inc    DWORD PTR [eax]
  443af0:	(bad)  
  443af1:	(bad)  
  443af2:	inc    DWORD PTR [eax]
  443af4:	(bad)  
  443af5:	(bad)  
  443af6:	inc    DWORD PTR [eax]
  443af8:	(bad)  
  443af9:	(bad)  
  443afa:	inc    DWORD PTR [eax]
  443afc:	(bad)  
  443afd:	(bad)  
  443afe:	inc    DWORD PTR [eax]
  443b00:	add    BYTE PTR [eax],al
  443b02:	sti    
  443b03:	add    BYTE PTR [eax],al
  443b05:	add    bl,bh
  443b07:	add    BYTE PTR [eax],al
  443b09:	add    bl,bh
  443b0b:	add    BYTE PTR [eax],al
  443b0d:	add    bl,bh
  443b0f:	add    BYTE PTR [eax],al
  443b11:	add    bl,bh
  443b13:	add    BYTE PTR [eax],al
  443b15:	add    bl,bh
  443b17:	add    BYTE PTR [eax],al
  443b19:	add    bl,bh
  443b1b:	add    BYTE PTR [eax],al
  443b1d:	add    bl,bh
	...
  443b27:	push   es
  443b28:	add    BYTE PTR [eax],al
  443b2a:	add    BYTE PTR [edi-0x1000000],ch
  443b30:	add    BYTE PTR [eax],al
  443b32:	add    bh,bh
  443b34:	add    BYTE PTR [eax],al
  443b36:	add    bl,dh
  443b38:	add    BYTE PTR [eax],al
  443b3a:	add    BYTE PTR [eax],bl
  443b3c:	add    BYTE PTR [eax],al
  443b3e:	repnz add eax,DWORD PTR [eax]
  443b41:	add    dh,dh
  443b43:	jge    0x443b45
  443b45:	add    ch,ch
  443b47:	inc    DWORD PTR [eax]
  443b49:	add    ebx,edx
  443b4b:	inc    DWORD PTR [eax]
  443b4d:	or     bh,BYTE PTR [ebp-0x36d2ff01]
  443b53:	inc    DWORD PTR [eax]
  443b55:	pop    eax
  443b56:	jecxz  0x443b57
  443b58:	add    BYTE PTR [ecx-0x5afd000b],al
  443b5e:	(bad)  
  443b5f:	call   DWORD PTR [ebx]
  443b61:	mov    ds:0x3d0afff9,eax
  443b66:	retf   0xff
  443b69:	add    BYTE PTR [edi-0x50fbfe01],ah
  443b6f:	dec    DWORD PTR [eax]
  443b71:	sub    al,bl
  443b73:	call   DWORD PTR [edx]
  443b75:	pushf  
  443b76:	repz dec DWORD PTR [edx]
  443b79:	scas   eax,DWORD PTR es:[edi]
  443b7a:	(bad)  
  443b7b:	inc    DWORD PTR [ecx]
  443b7d:	jl     0x443b72
  443b7f:	inc    DWORD PTR [eax]
  443b81:	pop    ecx
  443b82:	in     al,0xff
  443b84:	add    BYTE PTR [ebx],dh
  443b86:	retf   
  443b87:	inc    DWORD PTR [eax]
  443b89:	push   cs
  443b8a:	sar    bh,0x0
  443b8d:	add    ebp,edx
  443b8f:	inc    DWORD PTR [eax]
  443b91:	add    al,dh
  443b93:	loopne 0x443b95
  443b95:	add    bl,dh
  443b97:	pop    eax
  443b98:	add    BYTE PTR [eax],al
  443b9a:	in     al,dx
  443b9b:	or     eax,DWORD PTR [eax]
  443b9d:	add    BYTE PTR [eax],al
  443b9f:	add    BYTE PTR [eax],al
  443ba1:	add    BYTE PTR [eax],al
  443ba3:	scas   al,BYTE PTR es:[edi]
  443ba4:	add    BYTE PTR [eax],al
  443ba6:	add    bh,bh
  443ba8:	add    BYTE PTR [eax],al
  443baa:	add    bh,bh
  443bac:	add    BYTE PTR [eax],al
  443bae:	add    bh,ah
  443bb0:	add    BYTE PTR [eax],al
  443bb2:	add    BYTE PTR [esi],dh
	...
  443bbc:	add    BYTE PTR [eax],al
  443bbe:	hlt    
  443bbf:	add    BYTE PTR [eax],al
  443bc1:	add    ah,dh
  443bc3:	add    BYTE PTR [eax],al
  443bc5:	add    ah,dh
  443bc7:	add    BYTE PTR [eax],al
  443bc9:	add    ah,dh
  443bcb:	add    BYTE PTR [eax],al
  443bcd:	add    ah,dh
  443bcf:	add    BYTE PTR [eax],al
  443bd1:	add    ah,dh
  443bd3:	add    BYTE PTR [eax],al
  443bd5:	add    ah,dh
  443bd7:	add    BYTE PTR [eax],al
  443bd9:	add    ah,dh
  443bdb:	add    bh,bh
  443bdd:	(bad)  
  443bde:	inc    DWORD PTR [eax]
  443be0:	(bad)  
  443be1:	(bad)  
  443be2:	inc    DWORD PTR [eax]
  443be4:	(bad)  
  443be5:	(bad)  
  443be6:	inc    DWORD PTR [eax]
  443be8:	(bad)  
  443be9:	(bad)  
  443bea:	inc    DWORD PTR [eax]
  443bec:	(bad)  
  443bed:	(bad)  
  443bee:	inc    DWORD PTR [eax]
  443bf0:	(bad)  
  443bf1:	(bad)  
  443bf2:	inc    DWORD PTR [eax]
  443bf4:	(bad)  
  443bf5:	(bad)  
  443bf6:	inc    DWORD PTR [eax]
  443bf8:	(bad)  
  443bf9:	(bad)  
  443bfa:	inc    DWORD PTR [eax]
  443bfc:	(bad)  
  443bfd:	(bad)  
  443bfe:	inc    DWORD PTR [eax]
  443c00:	add    BYTE PTR [eax],al
  443c02:	cmc    
  443c03:	add    BYTE PTR [eax],al
  443c05:	add    ch,dh
  443c07:	add    BYTE PTR [eax],al
  443c09:	add    ch,dh
  443c0b:	add    BYTE PTR [eax],al
  443c0d:	add    ch,dh
  443c0f:	add    BYTE PTR [eax],al
  443c11:	add    ch,dh
  443c13:	add    BYTE PTR [eax],al
  443c15:	add    ch,dh
  443c17:	add    BYTE PTR [eax],al
  443c19:	add    ch,dh
  443c1b:	add    BYTE PTR [eax],al
  443c1d:	add    ch,dh
	...
  443c27:	jle    0x443c29
  443c29:	add    BYTE PTR [eax],al
  443c2b:	inc    DWORD PTR [eax]
  443c2d:	add    BYTE PTR [eax],al
  443c2f:	inc    DWORD PTR [eax]
  443c31:	add    BYTE PTR [eax],al
  443c33:	inc    DWORD PTR [eax]
  443c35:	add    BYTE PTR [eax],al
  443c37:	inc    DWORD PTR [eax]
  443c39:	add    BYTE PTR [eax],al
  443c3b:	imul   eax,DWORD PTR [eax],0x40f300
  443c41:	add    dh,ch
  443c43:	mov    edi,0xffd50000
  443c48:	add    BYTE PTR [edi],cl
  443c4a:	mov    edx,0xd66100ff
  443c4f:	inc    DWORD PTR [eax]
  443c51:	xchg   ebp,eax
  443c52:	repz inc DWORD PTR [eax]
  443c55:	mov    ah,0xfb
  443c57:	inc    DWORD PTR ds:0x2fffffd2
  443c5d:	loop   0x443c5e
  443c5f:	jmp    DWORD PTR [ecx]
  443c61:	outs   dx,DWORD PTR ds:[esi]
  443c62:	aad    0xff
  443c64:	or     DWORD PTR [ebx],edx
  443c66:	lods   eax,DWORD PTR ds:[esi]
  443c67:	inc    DWORD PTR [eax]
  443c69:	add    BYTE PTR [ebx-0x58feff01],ah
  443c6f:	inc    DWORD PTR [ecx]
  443c71:	push   es
  443c72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  443c73:	jmp    FWORD PTR [eax]
  443c75:	jae    0x443c4d
  443c77:	jmp    FWORD PTR [ecx]
  443c79:	sar    esp,cl
  443c7b:	dec    DWORD PTR [edx]
  443c7d:	fdiv   st(7),st
  443c7f:	inc    DWORD PTR [eax]
  443c81:	scas   eax,DWORD PTR es:[edi]
  443c82:	cld    
  443c83:	inc    DWORD PTR [eax]
  443c85:	sahf   
  443c86:	idiv   bh
  443c88:	add    BYTE PTR [ebx-0x2a],ah
  443c8b:	inc    DWORD PTR [eax]
  443c8d:	sbb    esp,eax
  443c8f:	inc    DWORD PTR [eax]
  443c91:	add    ch,dl
  443c93:	cld    
  443c94:	add    BYTE PTR [eax],al
  443c96:	repnz rol BYTE PTR [eax],0x0
  443c9a:	in     al,dx
  443c9b:	pop    ds
  443c9c:	add    BYTE PTR [eax],al
  443c9e:	add    BYTE PTR [ebx],al
  443ca0:	add    BYTE PTR [eax],al
  443ca2:	add    ah,bh
  443ca4:	add    BYTE PTR [eax],al
  443ca6:	add    bh,bh
  443ca8:	add    BYTE PTR [eax],al
  443caa:	add    bh,bh
  443cac:	add    BYTE PTR [eax],al
  443cae:	add    bh,bh
  443cb0:	add    BYTE PTR [eax],al
  443cb2:	add    ah,ah
  443cb4:	add    BYTE PTR [eax],al
  443cb6:	add    BYTE PTR [ebx],al
  443cb8:	add    BYTE PTR [eax],al
  443cba:	add    BYTE PTR [eax],al
  443cbc:	add    BYTE PTR [eax],al
  443cbe:	out    dx,al
  443cbf:	add    BYTE PTR [eax],al
  443cc1:	add    dh,ch
  443cc3:	add    BYTE PTR [eax],al
  443cc5:	add    dh,ch
  443cc7:	add    BYTE PTR [eax],al
  443cc9:	add    dh,ch
  443ccb:	add    BYTE PTR [eax],al
  443ccd:	add    dh,ch
  443ccf:	add    BYTE PTR [eax],al
  443cd1:	add    dh,ch
  443cd3:	add    BYTE PTR [eax],al
  443cd5:	add    dh,ch
  443cd7:	add    BYTE PTR [eax],al
  443cd9:	add    dh,ch
  443cdb:	add    bh,bh
  443cdd:	(bad)  
  443cde:	inc    DWORD PTR [eax]
  443ce0:	(bad)  
  443ce1:	(bad)  
  443ce2:	inc    DWORD PTR [eax]
  443ce4:	(bad)  
  443ce5:	(bad)  
  443ce6:	inc    DWORD PTR [eax]
  443ce8:	(bad)  
  443ce9:	(bad)  
  443cea:	inc    DWORD PTR [eax]
  443cec:	(bad)  
  443ced:	(bad)  
  443cee:	inc    DWORD PTR [eax]
  443cf0:	(bad)  
  443cf1:	(bad)  
  443cf2:	inc    DWORD PTR [eax]
  443cf4:	(bad)  
  443cf5:	(bad)  
  443cf6:	inc    DWORD PTR [eax]
  443cf8:	(bad)  
  443cf9:	(bad)  
  443cfa:	inc    DWORD PTR [eax]
  443cfc:	(bad)  
  443cfd:	(bad)  
  443cfe:	inc    DWORD PTR [eax]
  443d00:	add    BYTE PTR [eax],al
  443d02:	repnz add BYTE PTR [eax],al
  443d05:	add    dl,dh
  443d07:	add    BYTE PTR [eax],al
  443d09:	add    dl,dh
  443d0b:	add    BYTE PTR [eax],al
  443d0d:	add    dl,dh
  443d0f:	add    BYTE PTR [eax],al
  443d11:	add    dl,dh
  443d13:	add    BYTE PTR [eax],al
  443d15:	add    dl,dh
  443d17:	add    BYTE PTR [eax],al
  443d19:	add    dl,dh
  443d1b:	add    BYTE PTR [eax],al
  443d1d:	add    dl,dh
	...
  443d27:	mov    ah,0x0
  443d29:	add    BYTE PTR [eax],al
  443d2b:	inc    DWORD PTR [eax]
  443d2d:	add    BYTE PTR [eax],al
  443d2f:	inc    DWORD PTR [eax]
  443d31:	add    BYTE PTR [eax],al
  443d33:	inc    DWORD PTR [eax]
  443d35:	add    BYTE PTR [eax],al
  443d37:	inc    DWORD PTR [eax]
  443d39:	add    BYTE PTR [eax],al
  443d3b:	test   BYTE PTR [eax],al
  443d3d:	add    bl,dh
  443d3f:	mov    WORD PTR [eax],es
  443d41:	add    al,bl
  443d43:	repz add BYTE PTR [edi],dl
  443d46:	ret    0xff
  443d49:	ja     0x443d21
  443d4b:	inc    DWORD PTR [eax]
  443d4d:	int3   
  443d4e:	stc    
  443d4f:	dec    DWORD PTR [ebx]
  443d51:	in     al,dx
  443d52:	(bad)  
  443d53:	jmp    FWORD PTR [ebx]
  443d55:	hlt    
  443d56:	(bad)  
  443d57:	inc    DWORD PTR [edx-0x26]
  443d5a:	sti    
  443d5b:	push   DWORD PTR [edi]
  443d5d:	xchg   ch,dl
  443d5f:	call   DWORD PTR [edx]
  443d61:	and    ebp,DWORD PTR [ecx-0x65fefc01]
  443d67:	inc    DWORD PTR [eax]
  443d69:	add    BYTE PTR [esi-0x61ffff01],bl
  443d6f:	inc    DWORD PTR [eax]
  443d71:	add    BYTE PTR [ebx-0x5ae0ef01],bl
  443d77:	push   DWORD PTR ds:0x45ffd07e
  443d7d:	fdivp  st(3),st
  443d7f:	jmp    FWORD PTR [ebx]
  443d81:	repz (bad) 
  443d83:	dec    DWORD PTR ds:0xffffe9
  443d89:	(bad)  
  443d8b:	inc    DWORD PTR [eax]
  443d8d:	jbe    0x443d66
  443d8f:	inc    DWORD PTR [eax]
  443d91:	adc    ebx,eax
  443d93:	inc    DWORD PTR [eax]
  443d95:	add    dl,ah
  443d97:	repz add BYTE PTR [eax],al
  443d9a:	in     al,dx
  443d9b:	push   esp
  443d9c:	add    BYTE PTR [eax],al
  443d9e:	and    eax,DWORD PTR ss:[eax]
  443da1:	add    BYTE PTR [eax],al
  443da3:	inc    DWORD PTR [eax]
  443da5:	add    BYTE PTR [eax],al
  443da7:	inc    DWORD PTR [eax]
  443da9:	add    BYTE PTR [eax],al
  443dab:	inc    DWORD PTR [eax]
  443dad:	add    BYTE PTR [eax],al
  443daf:	inc    DWORD PTR [eax]
  443db1:	add    BYTE PTR [eax],al
  443db3:	inc    DWORD PTR [eax]
  443db5:	add    BYTE PTR [eax],al
  443db7:	push   ds
  443db8:	add    BYTE PTR [eax],al
  443dba:	add    BYTE PTR [eax],al
  443dbc:	add    BYTE PTR [eax],al
  443dbe:	jmp    0x0:0xea000000
  443dc5:	add    dl,ch
  443dc7:	add    BYTE PTR [eax],al
  443dc9:	add    dl,ch
  443dcb:	add    BYTE PTR [eax],al
  443dcd:	add    dl,ch
  443dcf:	add    BYTE PTR [eax],al
  443dd1:	add    dl,ch
  443dd3:	add    BYTE PTR [eax],al
  443dd5:	add    dl,ch
  443dd7:	add    BYTE PTR [eax],al
  443dd9:	add    dl,ch
  443ddb:	add    bh,bh
  443ddd:	(bad)  
  443dde:	inc    DWORD PTR [eax]
  443de0:	(bad)  
  443de1:	(bad)  
  443de2:	inc    DWORD PTR [eax]
  443de4:	(bad)  
  443de5:	(bad)  
  443de6:	inc    DWORD PTR [eax]
  443de8:	(bad)  
  443de9:	(bad)  
  443dea:	inc    DWORD PTR [eax]
  443dec:	(bad)  
  443ded:	(bad)  
  443dee:	inc    DWORD PTR [eax]
  443df0:	(bad)  
  443df1:	(bad)  
  443df2:	inc    DWORD PTR [eax]
  443df4:	(bad)  
  443df5:	(bad)  
  443df6:	inc    DWORD PTR [eax]
  443df8:	(bad)  
  443df9:	(bad)  
  443dfa:	inc    DWORD PTR [eax]
  443dfc:	(bad)  
  443dfd:	(bad)  
  443dfe:	inc    DWORD PTR [eax]
  443e00:	add    BYTE PTR [eax],al
  443e02:	out    dx,al
  443e03:	add    BYTE PTR [eax],al
  443e05:	add    dh,ch
  443e07:	add    BYTE PTR [eax],al
  443e09:	add    dh,ch
  443e0b:	add    BYTE PTR [eax],al
  443e0d:	add    dh,ch
  443e0f:	add    BYTE PTR [eax],al
  443e11:	add    dh,ch
  443e13:	add    BYTE PTR [eax],al
  443e15:	add    dh,ch
  443e17:	add    BYTE PTR [eax],al
  443e19:	add    dh,ch
  443e1b:	add    BYTE PTR [eax],al
  443e1d:	add    dh,ch
	...
  443e27:	mov    ah,0x0
  443e29:	add    BYTE PTR [eax],al
  443e2b:	inc    DWORD PTR [eax]
  443e2d:	add    BYTE PTR [eax],al
  443e2f:	inc    DWORD PTR [eax]
  443e31:	add    BYTE PTR [eax],al
  443e33:	inc    DWORD PTR [eax]
  443e35:	add    BYTE PTR [eax],al
  443e37:	inc    DWORD PTR [eax]
  443e39:	add    BYTE PTR [ecx],dl
  443e3b:	xchg   ecx,eax
  443e3c:	add    BYTE PTR [eax],al
  443e3e:	jmp    0xc1443f04
  443e43:	inc    DWORD PTR [eax]
  443e45:	sub    dh,BYTE PTR [ebp-0x1757fb01]
  443e4b:	call   DWORD PTR [edx]
  443e4d:	iret   
  443e4e:	repz jmp FWORD PTR [eax]
  443e51:	retf   
  443e52:	in     eax,dx
  443e53:	(bad)  
  443e54:	aas    
  443e55:	test   al,0xdf
  443e57:	(bad)  
  443e58:	cmp    eax,0x19ffc269
  443e5d:	sbb    DWORD PTR [edi+edi*8-0x70ffff],ebx
  443e64:	add    BYTE PTR [eax],al
  443e66:	nop
  443e67:	inc    DWORD PTR [eax]
  443e69:	add    BYTE PTR [edi+edi*8-0x6d0000],dl
  443e70:	add    BYTE PTR [eax],al
  443e72:	xchg   ebx,eax
  443e73:	inc    DWORD PTR [eax]
  443e75:	add    BYTE PTR [ebx-0x64e5e501],cl
  443e7b:	(bad)  
  443e7c:	cmp    eax,0x3fffc26a
  443e81:	stos   BYTE PTR es:[edi],al
  443e82:	(bad)  
  443e84:	sub    eax,eax
  443e86:	jmp    0x443e87
  443e88:	adc    al,0xe0
  443e8a:	idiv   edi
  443e8c:	add    eax,0xffdf9e
  443e91:	sub    eax,0xffbd
  443e96:	retf   0xfd
  443e99:	add    dh,ah
  443e9b:	cdq    
  443e9c:	add    BYTE PTR [eax],al
  443e9e:	jp     0x443edc
  443ea0:	add    BYTE PTR [eax],al
  443ea2:	add    bh,bh
  443ea4:	add    BYTE PTR [eax],al
  443ea6:	add    bh,bh
  443ea8:	add    BYTE PTR [eax],al
  443eaa:	add    bh,bh
  443eac:	add    BYTE PTR [eax],al
  443eae:	add    bh,bh
  443eb0:	add    BYTE PTR [eax],al
  443eb2:	add    bh,bh
  443eb4:	add    BYTE PTR [eax],al
  443eb6:	add    BYTE PTR [esi],bl
  443eb8:	add    BYTE PTR [eax],al
  443eba:	add    BYTE PTR [eax],al
  443ebc:	add    BYTE PTR [eax],al
  443ebe:	cmc    
  443ebf:	add    BYTE PTR [eax],al
  443ec1:	add    ch,dh
  443ec3:	add    BYTE PTR [eax],al
  443ec5:	add    ch,dh
  443ec7:	add    BYTE PTR [eax],al
  443ec9:	add    ch,dh
  443ecb:	add    BYTE PTR [eax],al
  443ecd:	add    ch,dh
  443ecf:	add    BYTE PTR [eax],al
  443ed1:	add    ch,dh
  443ed3:	add    BYTE PTR [eax],al
  443ed5:	add    ch,dh
  443ed7:	add    BYTE PTR [eax],al
  443ed9:	add    ch,dh
  443edb:	add    bh,bh
  443edd:	(bad)  
  443ede:	inc    DWORD PTR [eax]
  443ee0:	(bad)  
  443ee1:	(bad)  
  443ee2:	inc    DWORD PTR [eax]
  443ee4:	(bad)  
  443ee5:	(bad)  
  443ee6:	inc    DWORD PTR [eax]
  443ee8:	(bad)  
  443ee9:	(bad)  
  443eea:	inc    DWORD PTR [eax]
  443eec:	(bad)  
  443eed:	(bad)  
  443eee:	inc    DWORD PTR [eax]
  443ef0:	(bad)  
  443ef1:	(bad)  
  443ef2:	inc    DWORD PTR [eax]
  443ef4:	(bad)  
  443ef5:	(bad)  
  443ef6:	inc    DWORD PTR [eax]
  443ef8:	(bad)  
  443ef9:	(bad)  
  443efa:	inc    DWORD PTR [eax]
  443efc:	(bad)  
  443efd:	(bad)  
  443efe:	inc    DWORD PTR [eax]
  443f00:	add    BYTE PTR [eax],al
  443f02:	out    0x0,eax
  443f04:	add    BYTE PTR [eax],al
  443f06:	out    0x0,eax
  443f08:	add    BYTE PTR [eax],al
  443f0a:	out    0x0,eax
  443f0c:	add    BYTE PTR [eax],al
  443f0e:	out    0x0,eax
  443f10:	add    BYTE PTR [eax],al
  443f12:	out    0x0,eax
  443f14:	add    BYTE PTR [eax],al
  443f16:	out    0x0,eax
  443f18:	add    BYTE PTR [eax],al
  443f1a:	out    0x0,eax
  443f1c:	add    BYTE PTR [eax],al
  443f1e:	out    0x0,eax
  443f20:	add    BYTE PTR [eax],al
  443f22:	add    BYTE PTR [eax],al
  443f24:	add    BYTE PTR [eax],al
  443f26:	add    BYTE PTR [eax+eax*1+0xff0000],dh
  443f2d:	add    BYTE PTR [eax],al
  443f2f:	inc    DWORD PTR [eax]
  443f31:	add    BYTE PTR [eax],al
  443f33:	inc    DWORD PTR [eax]
  443f35:	add    BYTE PTR [eax],al
  443f37:	inc    DWORD PTR [eax]
  443f39:	add    BYTE PTR ds:0xd80000a7,ch
  443f3f:	rol    DWORD PTR [eax],cl
  443f41:	add    BYTE PTR [ecx-0x5de2fe01],dh
  443f47:	dec    DWORD PTR [eax]
  443f49:	bound  edi,QWORD PTR [esi-0x449ce301]
  443f4f:	jmp    FWORD PTR [edx+edx*2]
  443f52:	mov    al,0xff
  443f54:	sbb    eax,0x2ff9822
  443f59:	add    BYTE PTR [ebx-0x7effff01],al
  443f5f:	inc    DWORD PTR [eax]
  443f61:	add    BYTE PTR [eax-0x76ffff01],cl
  443f67:	inc    DWORD PTR [eax]
  443f69:	add    BYTE PTR [ecx-0x76ffff01],cl
  443f6f:	inc    DWORD PTR [eax]
  443f71:	add    BYTE PTR [ecx-0x76ffff01],cl
  443f77:	inc    DWORD PTR [eax]
  443f79:	add    BYTE PTR [eax-0x7cfffe01],al
  443f7f:	call   FWORD PTR ds:0x2bff9821
  443f85:	dec    esp
  443f86:	lods   eax,DWORD PTR ds:[esi]
  443f87:	call   FWORD PTR [esi]
  443f89:	push   0xffffffbd
  443f8b:	dec    DWORD PTR [ecx]
  443f8d:	pop    esp
  443f8e:	mov    ecx,0xaf2a00ff
  443f93:	inc    DWORD PTR [eax]
  443f95:	add    BYTE PTR [ebp-0x25ffff03],dh
  443f9b:	iret   
  443f9c:	add    BYTE PTR [eax],al
  443f9e:	mov    al,ds:0x53
  443fa3:	inc    DWORD PTR [eax]
  443fa5:	add    BYTE PTR [eax],al
  443fa7:	inc    DWORD PTR [eax]
  443fa9:	add    BYTE PTR [eax],al
  443fab:	inc    DWORD PTR [eax]
  443fad:	add    BYTE PTR [eax],al
  443faf:	inc    DWORD PTR [eax]
  443fb1:	add    BYTE PTR [eax],al
  443fb3:	inc    DWORD PTR [eax]
  443fb5:	add    BYTE PTR [eax],al
  443fb7:	push   ds
  443fb8:	add    BYTE PTR [eax],al
  443fba:	add    BYTE PTR [eax],al
  443fbc:	add    BYTE PTR [eax],al
  443fbe:	inc    DWORD PTR [eax]
  443fc0:	add    BYTE PTR [eax],al
  443fc2:	inc    DWORD PTR [eax]
  443fc4:	add    BYTE PTR [eax],al
  443fc6:	inc    DWORD PTR [eax]
  443fc8:	add    BYTE PTR [eax],al
  443fca:	inc    DWORD PTR [eax]
  443fcc:	add    BYTE PTR [eax],al
  443fce:	inc    DWORD PTR [eax]
  443fd0:	add    BYTE PTR [eax],al
  443fd2:	inc    DWORD PTR [eax]
  443fd4:	add    BYTE PTR [eax],al
  443fd6:	inc    DWORD PTR [eax]
  443fd8:	add    BYTE PTR [eax],al
  443fda:	inc    DWORD PTR [eax]
  443fdc:	(bad)  
  443fdd:	(bad)  
  443fde:	inc    DWORD PTR [eax]
  443fe0:	(bad)  
  443fe1:	(bad)  
  443fe2:	inc    DWORD PTR [eax]
  443fe4:	(bad)  
  443fe5:	(bad)  
  443fe6:	inc    DWORD PTR [eax]
  443fe8:	(bad)  
  443fe9:	(bad)  
  443fea:	inc    DWORD PTR [eax]
  443fec:	(bad)  
  443fed:	(bad)  
  443fee:	inc    DWORD PTR [eax]
  443ff0:	(bad)  
  443ff1:	(bad)  
  443ff2:	inc    DWORD PTR [eax]
  443ff4:	(bad)  
  443ff5:	(bad)  
  443ff6:	inc    DWORD PTR [eax]
  443ff8:	(bad)  
  443ff9:	(bad)  
  443ffa:	inc    DWORD PTR [eax]
  443ffc:	(bad)  
  443ffd:	(bad)  
  443ffe:	inc    DWORD PTR [eax]
  444000:	add    BYTE PTR [eax],al
  444002:	loope  0x444004
  444004:	add    BYTE PTR [eax],al
  444006:	loope  0x444008
  444008:	add    BYTE PTR [eax],al
  44400a:	loope  0x44400c
  44400c:	add    BYTE PTR [eax],al
  44400e:	loope  0x444010
  444010:	add    BYTE PTR [eax],al
  444012:	loope  0x444014
  444014:	add    BYTE PTR [eax],al
  444016:	loope  0x444018
  444018:	add    BYTE PTR [eax],al
  44401a:	loope  0x44401c
  44401c:	add    BYTE PTR [eax],al
  44401e:	loope  0x444020
  444020:	add    BYTE PTR [eax],al
  444022:	add    BYTE PTR [eax],al
  444024:	add    BYTE PTR [eax],al
  444026:	add    BYTE PTR [eax+eax*1+0xff0000],dh
  44402d:	add    BYTE PTR [eax],al
  44402f:	inc    DWORD PTR [eax]
  444031:	add    BYTE PTR [eax],al
  444033:	inc    DWORD PTR [eax]
  444035:	add    BYTE PTR [eax],al
  444037:	inc    DWORD PTR [eax]
  444039:	add    BYTE PTR [edx],dh
  44403b:	mov    ebx,0xdccc0000
  444040:	add    BYTE PTR [eax],al
  444042:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  444043:	inc    DWORD PTR [eax]
  444045:	add    BYTE PTR [ebp+0x7a0000ff],al
  44404b:	inc    DWORD PTR [eax]
  44404d:	add    BYTE PTR [eax-0x1],bh
  444050:	add    BYTE PTR [eax],al
  444052:	js     0x444053
  444054:	add    BYTE PTR [eax],al
  444056:	jnp    0x444057
  444058:	add    BYTE PTR [eax],al
  44405a:	jle    0x44405b
  44405c:	add    BYTE PTR [eax],al
  44405e:	jg     0x44405f
  444060:	add    BYTE PTR [eax],al
  444062:	jg     0x444063
  444064:	add    BYTE PTR [eax],al
  444066:	jg     0x444067
  444068:	add    BYTE PTR [eax],al
  44406a:	jg     0x44406b
  44406c:	add    BYTE PTR [eax],al
  44406e:	jg     0x44406f
  444070:	add    BYTE PTR [eax],al
  444072:	jg     0x444073
  444074:	add    BYTE PTR [eax],al
  444076:	jg     0x444077
  444078:	add    BYTE PTR [eax],al
  44407a:	jg     0x44407b
  44407c:	add    BYTE PTR [eax],al
  44407e:	jge    0x44407f
  444080:	add    BYTE PTR [eax],al
  444082:	jp     0x444083
  444084:	add    BYTE PTR [eax],al
  444086:	js     0x444087
  444088:	add    BYTE PTR [eax],al
  44408a:	ja     0x44408b
  44408c:	add    BYTE PTR [eax],al
  44408e:	jl     0x44408f
  444090:	add    BYTE PTR [eax],al
  444092:	mov    edi,?
  444094:	add    BYTE PTR [eax],al
  444096:	test   eax,0xd00000fe
  44409b:	jmp    0x44409d
  44409d:	add    BYTE PTR [eax+0x78],dh
  4440a0:	add    BYTE PTR [eax],al
  4440a2:	add    bh,bh
  4440a4:	add    BYTE PTR [eax],al
  4440a6:	add    bh,bh
  4440a8:	add    BYTE PTR [eax],al
  4440aa:	add    bh,bh
  4440ac:	add    BYTE PTR [eax],al
  4440ae:	add    bh,bh
  4440b0:	add    BYTE PTR [eax],al
  4440b2:	add    bh,bh
  4440b4:	add    BYTE PTR [eax],al
  4440b6:	add    BYTE PTR [esi],bl
  4440b8:	add    BYTE PTR [eax],al
  4440ba:	add    BYTE PTR [eax],al
  4440bc:	add    BYTE PTR [eax],al
  4440be:	inc    DWORD PTR [eax]
  4440c0:	add    BYTE PTR [eax],al
  4440c2:	inc    DWORD PTR [eax]
  4440c4:	add    BYTE PTR [eax],al
  4440c6:	inc    DWORD PTR [eax]
  4440c8:	add    BYTE PTR [eax],al
  4440ca:	inc    DWORD PTR [eax]
  4440cc:	add    BYTE PTR [eax],al
  4440ce:	inc    DWORD PTR [eax]
  4440d0:	add    BYTE PTR [eax],al
  4440d2:	inc    DWORD PTR [eax]
  4440d4:	add    BYTE PTR [eax],al
  4440d6:	inc    DWORD PTR [eax]
  4440d8:	add    BYTE PTR [eax],al
  4440da:	inc    DWORD PTR [eax]
  4440dc:	(bad)  
  4440dd:	(bad)  
  4440de:	inc    DWORD PTR [eax]
  4440e0:	(bad)  
  4440e1:	(bad)  
  4440e2:	inc    DWORD PTR [eax]
  4440e4:	(bad)  
  4440e5:	(bad)  
  4440e6:	inc    DWORD PTR [eax]
  4440e8:	(bad)  
  4440e9:	(bad)  
  4440ea:	inc    DWORD PTR [eax]
  4440ec:	(bad)  
  4440ed:	(bad)  
  4440ee:	inc    DWORD PTR [eax]
  4440f0:	(bad)  
  4440f1:	(bad)  
  4440f2:	inc    DWORD PTR [eax]
  4440f4:	(bad)  
  4440f5:	(bad)  
  4440f6:	inc    DWORD PTR [eax]
  4440f8:	(bad)  
  4440f9:	(bad)  
  4440fa:	inc    DWORD PTR [eax]
  4440fc:	(bad)  
  4440fd:	(bad)  
  4440fe:	inc    DWORD PTR [eax]
  444100:	add    BYTE PTR [eax],al
  444102:	fld    QWORD PTR [eax]
  444104:	add    BYTE PTR [eax],al
  444106:	fld    QWORD PTR [eax]
  444108:	add    BYTE PTR [eax],al
  44410a:	fld    QWORD PTR [eax]
  44410c:	add    BYTE PTR [eax],al
  44410e:	fld    QWORD PTR [eax]
  444110:	add    BYTE PTR [eax],al
  444112:	fld    QWORD PTR [eax]
  444114:	add    BYTE PTR [eax],al
  444116:	fld    QWORD PTR [eax]
  444118:	add    BYTE PTR [eax],al
  44411a:	fld    QWORD PTR [eax]
  44411c:	add    BYTE PTR [eax],al
  44411e:	fld    QWORD PTR [eax]
  444120:	add    BYTE PTR [eax],al
  444122:	add    BYTE PTR [eax],al
  444124:	add    BYTE PTR [eax],al
  444126:	add    BYTE PTR [eax+eax*1+0xff0000],dh
  44412d:	add    BYTE PTR [eax],al
  44412f:	inc    DWORD PTR [eax]
  444131:	add    BYTE PTR [eax],al
  444133:	inc    DWORD PTR [eax]
  444135:	add    BYTE PTR [eax],al
  444137:	inc    DWORD PTR [eax]
  444139:	add    BYTE PTR ds:0xc10000ba,bh
  44413f:	loope  0x444141
  444141:	add    BYTE PTR [eax+0x7c0000ff],bl
  444147:	inc    DWORD PTR [eax]
  444149:	add    BYTE PTR [edx-0x1],dh
  44414c:	add    BYTE PTR [eax],al
  44414e:	jo     0x44414f
  444150:	add    BYTE PTR [eax],al
  444152:	jo     0x444153
  444154:	add    BYTE PTR [eax],al
  444156:	je     0x444157
  444158:	add    DWORD PTR [ecx],eax
  44415a:	jne    0x44415b
  44415c:	add    DWORD PTR [ecx],eax
  44415e:	jne    0x44415f
  444160:	add    DWORD PTR [ecx],eax
  444162:	jne    0x444163
  444164:	add    DWORD PTR [ecx],eax
  444166:	jne    0x444167
  444168:	add    DWORD PTR [ecx],eax
  44416a:	jne    0x44416b
  44416c:	add    DWORD PTR [ecx],eax
  44416e:	jne    0x44416f
  444170:	add    al,BYTE PTR [edx]
  444172:	jne    0x444173
  444174:	add    DWORD PTR [ecx],eax
  444176:	jne    0x444177
  444178:	add    DWORD PTR [ecx],eax
  44417a:	jne    0x44417b
  44417c:	add    DWORD PTR [ecx],eax
  44417e:	jne    0x44417f
  444180:	add    BYTE PTR [eax],al
  444182:	jb     0x444183
  444184:	add    BYTE PTR [eax],al
  444186:	jno    0x444187
  444188:	add    BYTE PTR [eax],al
  44418a:	outs   dx,DWORD PTR ds:[esi]
  44418b:	inc    DWORD PTR [eax]
  44418d:	add    BYTE PTR [edx-0x1],dh
  444190:	add    BYTE PTR [eax],al
  444192:	cmp    edi,0xfe9d0000
  444198:	add    BYTE PTR [eax],al
  44419a:	(bad)  
  44419b:	repz add BYTE PTR [eax],al
  44419e:	nop
  44419f:	ins    DWORD PTR es:[edi],dx
  4441a0:	add    BYTE PTR [eax],al
  4441a2:	add    bh,bh
  4441a4:	add    BYTE PTR [eax],al
  4441a6:	add    bh,bh
  4441a8:	add    BYTE PTR [eax],al
  4441aa:	add    bh,bh
  4441ac:	add    BYTE PTR [eax],al
  4441ae:	add    bh,bh
  4441b0:	add    BYTE PTR [eax],al
  4441b2:	add    bh,bh
  4441b4:	add    BYTE PTR [eax],al
  4441b6:	add    BYTE PTR [esi],bl
  4441b8:	add    BYTE PTR [eax],al
  4441ba:	add    BYTE PTR [eax],al
  4441bc:	add    BYTE PTR [eax],al
  4441be:	out    0x0,eax
  4441c0:	add    BYTE PTR [eax],al
  4441c2:	out    0x0,eax
  4441c4:	add    BYTE PTR [eax],al
  4441c6:	out    0x0,eax
  4441c8:	add    BYTE PTR [eax],al
  4441ca:	out    0x0,eax
  4441cc:	add    BYTE PTR [eax],al
  4441ce:	out    0x0,eax
  4441d0:	add    BYTE PTR [eax],al
  4441d2:	out    0x0,eax
  4441d4:	add    BYTE PTR [eax],al
  4441d6:	out    0x0,eax
  4441d8:	add    BYTE PTR [eax],al
  4441da:	out    0x0,eax
  4441dc:	(bad)  
  4441dd:	(bad)  
  4441de:	inc    DWORD PTR [eax]
  4441e0:	(bad)  
  4441e1:	(bad)  
  4441e2:	inc    DWORD PTR [eax]
  4441e4:	(bad)  
  4441e5:	(bad)  
  4441e6:	inc    DWORD PTR [eax]
  4441e8:	(bad)  
  4441e9:	(bad)  
  4441ea:	inc    DWORD PTR [eax]
  4441ec:	(bad)  
  4441ed:	(bad)  
  4441ee:	inc    DWORD PTR [eax]
  4441f0:	(bad)  
  4441f1:	(bad)  
  4441f2:	inc    DWORD PTR [eax]
  4441f4:	(bad)  
  4441f5:	(bad)  
  4441f6:	inc    DWORD PTR [eax]
  4441f8:	(bad)  
  4441f9:	(bad)  
  4441fa:	inc    DWORD PTR [eax]
  4441fc:	(bad)  
  4441fd:	(bad)  
  4441fe:	inc    DWORD PTR [eax]
  444200:	add    BYTE PTR [eax],al
  444202:	xlat   BYTE PTR ds:[ebx]
  444203:	add    BYTE PTR [eax],al
  444205:	add    bh,dl
  444207:	add    BYTE PTR [eax],al
  444209:	add    bh,dl
  44420b:	add    BYTE PTR [eax],al
  44420d:	add    bh,dl
  44420f:	add    BYTE PTR [eax],al
  444211:	add    bh,dl
  444213:	add    BYTE PTR [eax],al
  444215:	add    bh,dl
  444217:	add    BYTE PTR [eax],al
  444219:	add    bh,dl
  44421b:	add    BYTE PTR [eax],al
  44421d:	add    bh,dl
	...
  444227:	lahf   
  444228:	add    BYTE PTR [eax],al
  44422a:	add    bh,bh
  44422c:	add    BYTE PTR [eax],al
  44422e:	add    bh,bh
  444230:	add    BYTE PTR [eax],al
  444232:	add    bh,bh
  444234:	add    BYTE PTR [eax],al
  444236:	add    bh,bh
  444238:	add    BYTE PTR [eax],al
  44423a:	dec    esi
  44423b:	mov    cl,0x0
  44423d:	add    BYTE PTR [eax-0x72ffff1e],bh
  444243:	inc    DWORD PTR [eax]
  444245:	add    BYTE PTR [ecx-0x1],dh
  444248:	add    BYTE PTR [eax],al
  44424a:	imul   edi,edi,0xff680000
  444250:	add    al,BYTE PTR [edx]
  444252:	push   0xffffffff
  444254:	add    al,0x4
  444256:	ins    BYTE PTR es:[edi],dx
  444257:	inc    DWORD PTR [esp+eax*1]
  44425a:	imul   edi,edi,0x4
  44425d:	add    al,0x6b
  44425f:	inc    DWORD PTR [esp+eax*1]
  444262:	imul   edi,edi,0x4
  444265:	add    al,0x6b
  444267:	inc    DWORD PTR [esp+eax*1]
  44426a:	imul   edi,edi,0x4
  44426d:	add    al,0x6b
  44426f:	inc    DWORD PTR ds:0x5ff6b05
  444275:	add    eax,0x505ff6c
  44427a:	ins    BYTE PTR es:[edi],dx
  44427b:	inc    DWORD PTR ds:0x5ff6c05
  444281:	add    eax,0x101ff6c
  444286:	imul   edi,edi,0xff670000
  44428c:	add    BYTE PTR [eax],al
  44428e:	push   0xffffffff
  444290:	add    BYTE PTR [eax],al
  444292:	ja     0x444293
  444294:	add    BYTE PTR [eax],al
  444296:	xchg   esp,eax
  444297:	inc    BYTE PTR [eax]
  444299:	add    al,al
  44429b:	test   BYTE PTR [eax],0x0
  44429e:	les    ebx,FWORD PTR [ebx+0x0]
  4442a1:	add    BYTE PTR [eax],al
  4442a3:	inc    DWORD PTR [eax]
  4442a5:	add    BYTE PTR [eax],al
  4442a7:	inc    DWORD PTR [eax]
  4442a9:	add    BYTE PTR [eax],al
  4442ab:	inc    DWORD PTR [eax]
  4442ad:	add    BYTE PTR [eax],al
  4442af:	inc    DWORD PTR [eax]
  4442b1:	add    BYTE PTR [eax],al
  4442b3:	stc    
  4442b4:	add    BYTE PTR [eax],al
  4442b6:	add    BYTE PTR [eax+eax*1],cl
  4442b9:	add    BYTE PTR [eax],al
  4442bb:	add    BYTE PTR [eax],al
  4442bd:	add    ch,bl
  4442bf:	add    BYTE PTR [eax],al
  4442c1:	add    ch,bl
  4442c3:	add    BYTE PTR [eax],al
  4442c5:	add    ch,bl
  4442c7:	add    BYTE PTR [eax],al
  4442c9:	add    ch,bl
  4442cb:	add    BYTE PTR [eax],al
  4442cd:	add    ch,bl
  4442cf:	add    BYTE PTR [eax],al
  4442d1:	add    ch,bl
  4442d3:	add    BYTE PTR [eax],al
  4442d5:	add    ch,bl
  4442d7:	add    BYTE PTR [eax],al
  4442d9:	add    ch,bl
  4442db:	add    bh,bh
  4442dd:	(bad)  
  4442de:	inc    DWORD PTR [eax]
  4442e0:	(bad)  
  4442e1:	(bad)  
  4442e2:	inc    DWORD PTR [eax]
  4442e4:	(bad)  
  4442e5:	(bad)  
  4442e6:	inc    DWORD PTR [eax]
  4442e8:	(bad)  
  4442e9:	(bad)  
  4442ea:	inc    DWORD PTR [eax]
  4442ec:	(bad)  
  4442ed:	(bad)  
  4442ee:	inc    DWORD PTR [eax]
  4442f0:	(bad)  
  4442f1:	(bad)  
  4442f2:	inc    DWORD PTR [eax]
  4442f4:	(bad)  
  4442f5:	(bad)  
  4442f6:	inc    DWORD PTR [eax]
  4442f8:	(bad)  
  4442f9:	(bad)  
  4442fa:	inc    DWORD PTR [eax]
  4442fc:	(bad)  
  4442fd:	(bad)  
  4442fe:	inc    DWORD PTR [eax]
  444300:	add    BYTE PTR [eax],al
  444302:	rol    DWORD PTR [eax],cl
  444304:	add    BYTE PTR [eax],al
  444306:	rol    DWORD PTR [eax],cl
  444308:	add    BYTE PTR [eax],al
  44430a:	rol    DWORD PTR [eax],cl
  44430c:	add    BYTE PTR [eax],al
  44430e:	rol    DWORD PTR [eax],cl
  444310:	add    BYTE PTR [eax],al
  444312:	rol    DWORD PTR [eax],cl
  444314:	add    BYTE PTR [eax],al
  444316:	rol    DWORD PTR [eax],cl
  444318:	add    BYTE PTR [eax],al
  44431a:	rol    DWORD PTR [eax],cl
  44431c:	add    BYTE PTR [eax],al
  44431e:	rol    DWORD PTR [eax],cl
  444320:	add    BYTE PTR [eax],al
  444322:	add    BYTE PTR [eax],al
  444324:	add    BYTE PTR [eax],al
  444326:	add    BYTE PTR [eax+eax*1],ah
  444329:	add    BYTE PTR [eax],al
  44432b:	jmp    0x0:0xff000000
  444332:	add    bh,bh
  444334:	add    BYTE PTR [eax],al
  444336:	add    bh,bh
  444338:	add    BYTE PTR [eax],al
  44433a:	or     DWORD PTR [eax-0x214d0000],0xff860000
  444344:	add    BYTE PTR [eax],al
  444346:	inc    DWORD PTR [bx+si]
  444349:	add    BYTE PTR [esi-0x1],bl
  44434c:	add    al,0x4
  44434e:	pusha  
  44434f:	dec    DWORD PTR [ecx]
  444351:	or     DWORD PTR [ebx-0x1],esp
  444354:	or     ecx,DWORD PTR [ebx]
  444356:	arpl   di,di
  444358:	or     cl,BYTE PTR [edx]
  44435a:	arpl   di,di
  44435c:	or     cl,BYTE PTR [edx]
  44435e:	arpl   di,di
  444360:	or     cl,BYTE PTR [edx]
  444362:	arpl   di,di
  444364:	or     cl,BYTE PTR [edx]
  444366:	arpl   di,di
  444368:	or     cl,BYTE PTR [edx]
  44436a:	arpl   di,di
  44436c:	or     cl,BYTE PTR [edx]
  44436e:	arpl   di,di
  444370:	or     cl,BYTE PTR [edx]
  444372:	dec    DWORD PTR fs:[ebx]
  444375:	or     esp,DWORD PTR [edi+edi*8+0xb]
  444379:	or     esp,DWORD PTR [ebp-0x1]
  44437c:	or     al,0xc
  44437e:	dec    DWORD PTR gs:[esp+ecx*1]
  444382:	dec    DWORD PTR gs:[edx]
  444385:	or     ah,BYTE PTR [ebx-0x1]
  444388:	add    eax,DWORD PTR [ebx]
  44438a:	pop    esi
  44438b:	inc    DWORD PTR [eax]
  44438d:	add    BYTE PTR [esi-0x1],bl
  444390:	add    BYTE PTR [eax],al
  444392:	outs   dx,DWORD PTR ds:[esi]
  444393:	inc    DWORD PTR [eax]
  444395:	add    BYTE PTR [edi-0x45ffff02],cl
  44439b:	repnz add BYTE PTR [eax],al
  44439e:	(bad)  
  44439f:	pop    eax
  4443a0:	add    BYTE PTR [eax],al
  4443a2:	add    ch,bh
  4443a4:	add    BYTE PTR [eax],al
  4443a6:	add    bh,bh
  4443a8:	add    BYTE PTR [eax],al
  4443aa:	add    bh,bh
  4443ac:	add    BYTE PTR [eax],al
  4443ae:	add    bh,bh
  4443b0:	add    BYTE PTR [eax],al
  4443b2:	add    BYTE PTR [eax+0x0],bh
	...
  4443bd:	add    ah,ch
  4443bf:	add    BYTE PTR [eax],al
  4443c1:	add    ah,ch
  4443c3:	add    BYTE PTR [eax],al
  4443c5:	add    ah,ch
  4443c7:	add    BYTE PTR [eax],al
  4443c9:	add    ah,ch
  4443cb:	add    BYTE PTR [eax],al
  4443cd:	add    ah,ch
  4443cf:	add    BYTE PTR [eax],al
  4443d1:	add    ah,ch
  4443d3:	add    BYTE PTR [eax],al
  4443d5:	add    ah,ch
  4443d7:	add    BYTE PTR [eax],al
  4443d9:	add    ah,ch
  4443db:	add    bh,bh
  4443dd:	(bad)  
  4443de:	inc    DWORD PTR [eax]
  4443e0:	(bad)  
  4443e1:	(bad)  
  4443e2:	inc    DWORD PTR [eax]
  4443e4:	(bad)  
  4443e5:	(bad)  
  4443e6:	inc    DWORD PTR [eax]
  4443e8:	(bad)  
  4443e9:	(bad)  
  4443ea:	inc    DWORD PTR [eax]
  4443ec:	(bad)  
  4443ed:	(bad)  
  4443ee:	inc    DWORD PTR [eax]
  4443f0:	(bad)  
  4443f1:	(bad)  
  4443f2:	inc    DWORD PTR [eax]
  4443f4:	(bad)  
  4443f5:	(bad)  
  4443f6:	inc    DWORD PTR [eax]
  4443f8:	(bad)  
  4443f9:	(bad)  
  4443fa:	inc    DWORD PTR [eax]
  4443fc:	(bad)  
  4443fd:	(bad)  
  4443fe:	inc    DWORD PTR [eax]
  444400:	add    BYTE PTR [eax],al
  444402:	rol    BYTE PTR [eax],cl
  444404:	add    BYTE PTR [eax],al
  444406:	rol    BYTE PTR [eax],cl
  444408:	add    BYTE PTR [eax],al
  44440a:	rol    BYTE PTR [eax],cl
  44440c:	add    BYTE PTR [eax],al
  44440e:	rol    BYTE PTR [eax],cl
  444410:	add    BYTE PTR [eax],al
  444412:	rol    BYTE PTR [eax],cl
  444414:	add    BYTE PTR [eax],al
  444416:	rol    BYTE PTR [eax],cl
  444418:	add    BYTE PTR [eax],al
  44441a:	rol    BYTE PTR [eax],cl
  44441c:	add    BYTE PTR [eax],al
  44441e:	rol    BYTE PTR [eax],cl
	...
  444428:	add    BYTE PTR [eax],al
  44442a:	add    BYTE PTR [esi],bl
  44442c:	add    BYTE PTR [eax],al
  44442e:	add    BYTE PTR [ecx-0x1000000],bl
  444434:	add    BYTE PTR [eax],al
  444436:	add    cl,dh
  444438:	add    BYTE PTR [eax],al
  44443a:	mov    al,ds:0xb500005f
  44443f:	(bad)  
  444440:	add    BYTE PTR [eax],al
  444442:	test   edi,edi
  444444:	add    BYTE PTR [eax],al
  444446:	popa   
  444447:	inc    DWORD PTR ds:0xfff5705
  44444d:	subps  xmm7,xmm7
  444450:	adc    edx,DWORD PTR [ebx]
  444452:	pop    esi
  444453:	call   DWORD PTR [edx]
  444455:	adc    bl,BYTE PTR [esi-0x1]
  444458:	adc    dl,BYTE PTR [edx]
  44445a:	pop    esi
  44445b:	call   DWORD PTR [edx]
  44445d:	adc    bl,BYTE PTR [esi-0x1]
  444460:	adc    dl,BYTE PTR [edx]
  444462:	pop    esi
  444463:	call   DWORD PTR [edx]
  444465:	adc    bl,BYTE PTR [esi-0x1]
  444468:	adc    dl,BYTE PTR [edx]
  44446a:	pop    esi
  44446b:	call   DWORD PTR [edx]
  44446d:	adc    bl,BYTE PTR [esi-0x1]
  444470:	adc    dl,BYTE PTR [edx]
  444472:	pop    edi
  444473:	call   DWORD PTR [ebx]
  444475:	adc    ebx,DWORD PTR [edi-0x1]
  444478:	adc    edx,DWORD PTR [ebx]
  44447a:	pusha  
  44447b:	call   DWORD PTR [ebx]
  44447d:	adc    esp,DWORD PTR [eax-0x1]
  444480:	adc    al,0x14
  444482:	pusha  
  444483:	call   DWORD PTR [edi]
  444485:	pop    ss
  444486:	popa   
  444487:	dec    DWORD PTR [esi]
  444489:	push   cs
  44448a:	pop    ebx
  44448b:	inc    DWORD PTR [esp+eax*1]
  44448e:	push   edi
  44448f:	inc    DWORD PTR [eax]
  444491:	add    BYTE PTR [ecx-0x1],ch
  444494:	add    BYTE PTR [eax],al
  444496:	mov    ?,ebp
  444498:	add    BYTE PTR [eax],al
  44449a:	mov    ecx,0x8c0000dd
  44449f:	pusha  
  4444a0:	add    BYTE PTR [eax],al
  4444a2:	add    dh,dh
  4444a4:	add    BYTE PTR [eax],al
  4444a6:	add    dl,bh
  4444a8:	add    BYTE PTR [eax],al
  4444aa:	add    BYTE PTR [edx+0x51000000],bh
	...
  4444bc:	add    BYTE PTR [eax],al
  4444be:	inc    DWORD PTR [eax]
  4444c0:	add    BYTE PTR [eax],al
  4444c2:	inc    DWORD PTR [eax]
  4444c4:	add    BYTE PTR [eax],al
  4444c6:	inc    DWORD PTR [eax]
  4444c8:	add    BYTE PTR [eax],al
  4444ca:	inc    DWORD PTR [eax]
  4444cc:	add    BYTE PTR [eax],al
  4444ce:	inc    DWORD PTR [eax]
  4444d0:	add    BYTE PTR [eax],al
  4444d2:	inc    DWORD PTR [eax]
  4444d4:	add    BYTE PTR [eax],al
  4444d6:	inc    DWORD PTR [eax]
  4444d8:	add    BYTE PTR [eax],al
  4444da:	inc    DWORD PTR [eax]
  4444dc:	(bad)  
  4444dd:	(bad)  
  4444de:	inc    DWORD PTR [eax]
  4444e0:	(bad)  
  4444e1:	(bad)  
  4444e2:	inc    DWORD PTR [eax]
  4444e4:	(bad)  
  4444e5:	(bad)  
  4444e6:	inc    DWORD PTR [eax]
  4444e8:	(bad)  
  4444e9:	(bad)  
  4444ea:	inc    DWORD PTR [eax]
  4444ec:	(bad)  
  4444ed:	(bad)  
  4444ee:	inc    DWORD PTR [eax]
  4444f0:	(bad)  
  4444f1:	(bad)  
  4444f2:	inc    DWORD PTR [eax]
  4444f4:	(bad)  
  4444f5:	(bad)  
  4444f6:	inc    DWORD PTR [eax]
  4444f8:	(bad)  
  4444f9:	(bad)  
  4444fa:	inc    DWORD PTR [eax]
  4444fc:	(bad)  
  4444fd:	(bad)  
  4444fe:	inc    DWORD PTR [eax]
  444500:	add    BYTE PTR [eax],al
  444502:	rol    DWORD PTR [eax],cl
  444504:	add    BYTE PTR [eax],al
  444506:	rol    DWORD PTR [eax],cl
  444508:	add    BYTE PTR [eax],al
  44450a:	rol    DWORD PTR [eax],cl
  44450c:	add    BYTE PTR [eax],al
  44450e:	rol    DWORD PTR [eax],cl
  444510:	add    BYTE PTR [eax],al
  444512:	rol    DWORD PTR [eax],cl
  444514:	add    BYTE PTR [eax],al
  444516:	rol    DWORD PTR [eax],cl
  444518:	add    BYTE PTR [eax],al
  44451a:	rol    DWORD PTR [eax],cl
  44451c:	add    BYTE PTR [eax],al
  44451e:	rol    DWORD PTR [eax],cl
	...
  444530:	add    BYTE PTR [eax],al
  444532:	add    dl,ah
  444534:	add    BYTE PTR [eax],al
  444536:	add    ch,ch
  444538:	add    BYTE PTR [eax],al
  44453a:	dec    ebx
  44453b:	pop    edi
  44453c:	add    BYTE PTR [eax],al
  44453e:	mov    ebx,0x880000cb
  444543:	inc    DWORD PTR [ebx]
  444545:	add    esp,DWORD PTR [eax-0x1]
  444548:	push   cs
  444549:	push   cs
  44454a:	pop    eax
  44454b:	call   FWORD PTR [ebx]
  44454d:	sbb    ebx,DWORD PTR [ebx-0x1]
  444550:	sbb    eax,0x1bff5c1d
  444555:	sbb    ebx,DWORD PTR [ebx-0x1]
  444558:	sbb    ebx,DWORD PTR [ebx]
  44455a:	pop    ebx
  44455b:	call   FWORD PTR [ebx]
  44455d:	sbb    ebx,DWORD PTR [ebx-0x1]
  444560:	sbb    ebx,DWORD PTR [ebx]
  444562:	pop    ebx
  444563:	call   FWORD PTR [ebx]
  444565:	sbb    ebx,DWORD PTR [ebx-0x1]
  444568:	sbb    ebx,DWORD PTR [ebx]
  44456a:	pop    ebx
  44456b:	call   FWORD PTR [ebx]
  44456d:	sbb    ebx,DWORD PTR [ebx-0x1]
  444570:	sbb    ebx,DWORD PTR [ebx]
  444572:	pop    ebx
  444573:	call   FWORD PTR [ebx]
  444575:	sbb    ebx,DWORD PTR [edi+edi*8+0x1b]
  444579:	sbb    ebx,DWORD PTR [ebp-0x1]
  44457c:	sbb    al,0x1c
  44457e:	pop    ebp
  44457f:	call   FWORD PTR ds:0x1fff5d1d
  444585:	pop    ds
  444586:	pop    esi
  444587:	call   FWORD PTR ds:0xdff5d1d
  44458d:	or     eax,0xff59
  444592:	push   0x920000ff
  444597:	sti    
  444598:	add    BYTE PTR [eax],al
  44459a:	mov    ebp,0x450000b1
  44459f:	jo     0x4445a1
  4445a1:	add    BYTE PTR [eax],al
  4445a3:	test   DWORD PTR [eax],0xce0000
	...
  4445bd:	add    bh,bh
  4445bf:	add    BYTE PTR [eax],al
  4445c1:	add    bh,bh
  4445c3:	add    BYTE PTR [eax],al
  4445c5:	add    bh,bh
  4445c7:	add    BYTE PTR [eax],al
  4445c9:	add    bh,bh
  4445cb:	add    BYTE PTR [eax],al
  4445cd:	add    bh,bh
  4445cf:	add    BYTE PTR [eax],al
  4445d1:	add    bh,bh
  4445d3:	add    BYTE PTR [eax],al
  4445d5:	add    bh,bh
  4445d7:	add    BYTE PTR [eax],al
  4445d9:	add    bh,bh
  4445db:	add    bh,bh
  4445dd:	(bad)  
  4445de:	inc    DWORD PTR [eax]
  4445e0:	(bad)  
  4445e1:	(bad)  
  4445e2:	inc    DWORD PTR [eax]
  4445e4:	(bad)  
  4445e5:	(bad)  
  4445e6:	inc    DWORD PTR [eax]
  4445e8:	(bad)  
  4445e9:	(bad)  
  4445ea:	inc    DWORD PTR [eax]
  4445ec:	(bad)  
  4445ed:	(bad)  
  4445ee:	inc    DWORD PTR [eax]
  4445f0:	(bad)  
  4445f1:	(bad)  
  4445f2:	inc    DWORD PTR [eax]
  4445f4:	(bad)  
  4445f5:	(bad)  
  4445f6:	inc    DWORD PTR [eax]
  4445f8:	(bad)  
  4445f9:	(bad)  
  4445fa:	inc    DWORD PTR [eax]
  4445fc:	(bad)  
  4445fd:	(bad)  
  4445fe:	inc    DWORD PTR [eax]
  444600:	add    BYTE PTR [eax],al
  444602:	les    eax,FWORD PTR [eax]
  444604:	add    BYTE PTR [eax],al
  444606:	les    eax,FWORD PTR [eax]
  444608:	add    BYTE PTR [eax],al
  44460a:	les    eax,FWORD PTR [eax]
  44460c:	add    BYTE PTR [eax],al
  44460e:	les    eax,FWORD PTR [eax]
  444610:	add    BYTE PTR [eax],al
  444612:	les    eax,FWORD PTR [eax]
  444614:	add    BYTE PTR [eax],al
  444616:	les    eax,FWORD PTR [eax]
  444618:	add    BYTE PTR [eax],al
  44461a:	les    eax,FWORD PTR [eax]
  44461c:	add    BYTE PTR [eax],al
  44461e:	les    eax,FWORD PTR [eax]
  444620:	add    BYTE PTR [eax],al
  444622:	les    eax,FWORD PTR [eax]
  444624:	add    BYTE PTR [eax],al
  444626:	les    eax,FWORD PTR [eax]
  444628:	add    BYTE PTR [eax],al
  44462a:	les    eax,FWORD PTR [eax]
  44462c:	add    BYTE PTR [eax],al
  44462e:	les    eax,FWORD PTR [eax]
  444630:	add    BYTE PTR [eax],al
  444632:	add    BYTE PTR [edx-0x8000000],bh
  444638:	add    BYTE PTR [eax],al
  44463a:	or     BYTE PTR [edx+0x0],dh
  44463d:	add    BYTE PTR [esi-0x6dffff56],bh
  444643:	inc    DWORD PTR [edi]
  444645:	pop    es
  444646:	call   DWORD PTR [esi]
  444649:	push   ds
  44464a:	pop    edi
  44464b:	jmp    DWORD PTR [esi]
  44464d:	es pop ebp
  44464f:	jmp    DWORD PTR [edi]
  444651:	daa    
  444652:	pop    ebx
  444653:	jmp    DWORD PTR [esi]
  444655:	es pop edx
  444657:	jmp    DWORD PTR ds:0x25ff5a25
  44465d:	and    eax,0x2525ff5a
  444662:	pop    edx
  444663:	jmp    DWORD PTR ds:0x25ff5b25
  444669:	and    eax,0x2525ff5b
  44466e:	pop    ebx
  44466f:	jmp    DWORD PTR [esi]
  444671:	es pop ebx
  444673:	jmp    DWORD PTR [esi]
  444675:	es pop ebx
  444677:	jmp    DWORD PTR [esi]
  444679:	es pop esp
  44467b:	jmp    DWORD PTR [edi]
  44467d:	daa    
  44467e:	pop    esp
  44467f:	jmp    FWORD PTR [eax]
  444681:	sub    BYTE PTR [edi+edi*8+0x2a],bl
  444685:	sub    bl,BYTE PTR [ebp-0x1]
  444688:	sub    al,0x2c
  44468a:	pusha  
  44468b:	call   DWORD PTR [edi]
  44468d:	pop    ss
  44468e:	pop    ebp
  44468f:	inc    DWORD PTR [eax]
  444691:	add    BYTE PTR [esi-0x1],ch
  444694:	add    BYTE PTR [eax],al
  444696:	sahf   
  444697:	inc    DWORD PTR [eax]
  444699:	add    cl,cl
  44469b:	jne    0x44469d
  44469d:	add    BYTE PTR ds:0x8a,cl
  4446a3:	sti    
  4446a4:	add    BYTE PTR [eax],al
  4446a6:	add    BYTE PTR [esi+0xdd0000],ah
  4446ac:	add    BYTE PTR [eax],al
  4446ae:	fld    QWORD PTR [eax]
  4446b0:	add    BYTE PTR [eax],al
  4446b2:	fld    QWORD PTR [eax]
  4446b4:	add    BYTE PTR [eax],al
  4446b6:	fld    QWORD PTR [eax]
  4446b8:	add    BYTE PTR [eax],al
  4446ba:	fld    QWORD PTR [eax]
  4446bc:	add    BYTE PTR [eax],al
  4446be:	fld    QWORD PTR [eax]
  4446c0:	add    BYTE PTR [eax],al
  4446c2:	fld    QWORD PTR [eax]
  4446c4:	add    BYTE PTR [eax],al
  4446c6:	fld    QWORD PTR [eax]
  4446c8:	add    BYTE PTR [eax],al
  4446ca:	fld    QWORD PTR [eax]
  4446cc:	add    BYTE PTR [eax],al
  4446ce:	fld    QWORD PTR [eax]
  4446d0:	add    BYTE PTR [eax],al
  4446d2:	fld    QWORD PTR [eax]
  4446d4:	add    BYTE PTR [eax],al
  4446d6:	fld    QWORD PTR [eax]
  4446d8:	add    BYTE PTR [eax],al
  4446da:	fld    QWORD PTR [eax]
  4446dc:	(bad)  
  4446dd:	(bad)  
  4446de:	inc    DWORD PTR [eax]
  4446e0:	(bad)  
  4446e1:	(bad)  
  4446e2:	inc    DWORD PTR [eax]
  4446e4:	(bad)  
  4446e5:	(bad)  
  4446e6:	inc    DWORD PTR [eax]
  4446e8:	(bad)  
  4446e9:	(bad)  
  4446ea:	inc    DWORD PTR [eax]
  4446ec:	(bad)  
  4446ed:	(bad)  
  4446ee:	inc    DWORD PTR [eax]
  4446f0:	(bad)  
  4446f1:	(bad)  
  4446f2:	inc    DWORD PTR [eax]
  4446f4:	(bad)  
  4446f5:	(bad)  
  4446f6:	inc    DWORD PTR [eax]
  4446f8:	(bad)  
  4446f9:	(bad)  
  4446fa:	inc    DWORD PTR [eax]
  4446fc:	(bad)  
  4446fd:	(bad)  
  4446fe:	inc    DWORD PTR [eax]
  444700:	add    BYTE PTR [eax],al
  444702:	mov    edi,0xbf000000
  444707:	add    BYTE PTR [eax],al
  444709:	add    BYTE PTR [edi-0x41000000],bh
  44470f:	add    BYTE PTR [eax],al
  444711:	add    BYTE PTR [edi-0x41000000],bh
  444717:	add    BYTE PTR [eax],al
  444719:	add    BYTE PTR [edi-0x41000000],bh
  44471f:	add    BYTE PTR [eax],al
  444721:	add    BYTE PTR [edi-0x41000000],bh
  444727:	add    BYTE PTR [eax],al
  444729:	add    BYTE PTR [edi-0x41000000],bh
  44472f:	add    BYTE PTR [eax],al
  444731:	add    BYTE PTR [eax],al
  444733:	mov    BYTE PTR [eax],al
  444735:	add    BYTE PTR [eax],al
  444737:	inc    DWORD PTR [eax]
  444739:	add    BYTE PTR [eax],al
  44473b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44473c:	add    BYTE PTR [eax],al
  44473e:	leave  
  44473f:	arpl   WORD PTR [eax],ax
  444741:	add    BYTE PTR [esi+0x760a0ae1],ah
  444747:	jmp    FWORD PTR [ebx]
  444749:	sub    ebp,DWORD PTR [ecx-0x1]
  44474c:	xor    esi,DWORD PTR [ebx]
  44474e:	(bad)  
  44474f:	push   DWORD PTR [edx]
  444751:	xor    bl,BYTE PTR [ebp-0x1]
  444754:	xor    DWORD PTR [ecx],esi
  444756:	pop    edx
  444757:	push   DWORD PTR [edx]
  444759:	xor    bl,BYTE PTR [ebx-0x1]
  44475c:	xor    dh,BYTE PTR [edx]
  44475e:	pop    ebx
  44475f:	push   DWORD PTR [edx]
  444761:	xor    bl,BYTE PTR [ebx-0x1]
  444764:	xor    dh,BYTE PTR [edx]
  444766:	pop    esp
  444767:	push   DWORD PTR [edx]
  444769:	xor    bl,BYTE PTR [edi+edi*8+0x32]
  44476d:	xor    bl,BYTE PTR [edi+edi*8+0x32]
  444771:	xor    bl,BYTE PTR [edi+edi*8+0x32]
  444775:	xor    bl,BYTE PTR [edi+edi*8+0x32]
  444779:	xor    bl,BYTE PTR [edi+edi*8+0x32]
  44477d:	xor    bl,BYTE PTR [edi+edi*8+0x33]
  444781:	xor    ebx,DWORD PTR [edi+edi*8+0x35]
  444785:	xor    eax,0x3a3aff5e
  44478a:	jmp    WORD PTR [eax]
  44478d:	and    BYTE PTR [eax-0x1],ch
  444790:	add    BYTE PTR [eax],al
  444792:	jle    0x444793
  444794:	add    BYTE PTR [eax],al
  444796:	mov    al,0xe2
  444798:	add    BYTE PTR [eax],al
  44479a:	stos   DWORD PTR es:[edi],eax
  44479b:	cmp    al,BYTE PTR [eax]
  44479d:	add    BYTE PTR [eax],al
  44479f:	mov    ebx,0xff000000
  4447a4:	add    BYTE PTR [eax],al
  4447a6:	add    BYTE PTR [eax+eax*1+0x0],dh
  4447aa:	mov    dh,0x0
  4447ac:	add    BYTE PTR [eax],al
  4447ae:	mov    dh,0x0
  4447b0:	add    BYTE PTR [eax],al
  4447b2:	mov    dh,0x0
  4447b4:	add    BYTE PTR [eax],al
  4447b6:	mov    dh,0x0
  4447b8:	add    BYTE PTR [eax],al
  4447ba:	mov    dh,0x0
  4447bc:	add    BYTE PTR [eax],al
  4447be:	mov    dh,0x0
  4447c0:	add    BYTE PTR [eax],al
  4447c2:	mov    dh,0x0
  4447c4:	add    BYTE PTR [eax],al
  4447c6:	mov    dh,0x0
  4447c8:	add    BYTE PTR [eax],al
  4447ca:	mov    dh,0x0
  4447cc:	add    BYTE PTR [eax],al
  4447ce:	mov    dh,0x0
  4447d0:	add    BYTE PTR [eax],al
  4447d2:	mov    dh,0x0
  4447d4:	add    BYTE PTR [eax],al
  4447d6:	mov    dh,0x0
  4447d8:	add    BYTE PTR [eax],al
  4447da:	mov    dh,0x0
  4447dc:	(bad)  
  4447dd:	(bad)  
  4447de:	inc    DWORD PTR [eax]
  4447e0:	(bad)  
  4447e1:	(bad)  
  4447e2:	inc    DWORD PTR [eax]
  4447e4:	(bad)  
  4447e5:	(bad)  
  4447e6:	inc    DWORD PTR [eax]
  4447e8:	(bad)  
  4447e9:	(bad)  
  4447ea:	inc    DWORD PTR [eax]
  4447ec:	(bad)  
  4447ed:	(bad)  
  4447ee:	inc    DWORD PTR [eax]
  4447f0:	(bad)  
  4447f1:	(bad)  
  4447f2:	inc    DWORD PTR [eax]
  4447f4:	(bad)  
  4447f5:	(bad)  
  4447f6:	inc    DWORD PTR [eax]
  4447f8:	(bad)  
  4447f9:	(bad)  
  4447fa:	inc    DWORD PTR [eax]
  4447fc:	(bad)  
  4447fd:	(bad)  
  4447fe:	inc    DWORD PTR [eax]
  444800:	add    BYTE PTR [eax],al
  444802:	mov    ecx,0xb9000000
  444807:	add    BYTE PTR [eax],al
  444809:	add    BYTE PTR [ecx-0x47000000],bh
  44480f:	add    BYTE PTR [eax],al
  444811:	add    BYTE PTR [ecx-0x47000000],bh
  444817:	add    BYTE PTR [eax],al
  444819:	add    BYTE PTR [ecx-0x47000000],bh
  44481f:	add    BYTE PTR [eax],al
  444821:	add    BYTE PTR [ecx-0x47000000],bh
  444827:	add    BYTE PTR [eax],al
  444829:	add    BYTE PTR [ecx-0x47000000],bh
  44482f:	add    BYTE PTR [eax],al
  444831:	add    BYTE PTR [eax],al
  444833:	dec    esi
  444834:	add    BYTE PTR [eax],al
  444836:	add    bh,bh
  444838:	add    BYTE PTR [eax],al
  44483a:	add    bh,ah
  44483c:	add    BYTE PTR [eax],al
  44483e:	xor    DWORD PTR [edx+0x0],edx
  444841:	add    BYTE PTR [edx-0x6ff6f669],dh
  444847:	std    
  444848:	sub    al,0x2c
  44484a:	ja     0x44484b
  44484c:	inc    eax
  44484d:	inc    eax
  44484e:	outs   dx,BYTE PTR ds:[esi]
  44484f:	inc    DWORD PTR [eax+0x40]
  444852:	fs (bad) 
  444854:	cmp    eax,0x3eff5d3d
  444859:	ds pop ebp
  44485b:	(bad)  
  44485c:	ds ds pop ebp
  44485f:	(bad)  
  444860:	ds ds pop ebp
  444863:	(bad)  
  444864:	ds ds pop esi
  444867:	(bad)  
  444868:	ds ds pop esi
  44486b:	(bad)  
  44486c:	ds ds pop esi
  44486f:	(bad)  
  444870:	ds ds pop esi
  444873:	(bad)  
  444874:	ds ds pop esi
  444877:	(bad)  
  444878:	ds ds pop esi
  44487b:	(bad)  
  44487c:	ds ds pop esi
  44487f:	(bad)  
  444880:	aas    
  444881:	aas    
  444882:	pop    edi
  444883:	inc    DWORD PTR [edx+0x42]
  444886:	inc    WORD PTR [esp+eax*2+0x70]
  44488b:	jmp    DWORD PTR [edx]
  44488d:	and    bh,BYTE PTR [ebx-0x1]
  444890:	add    BYTE PTR [eax],al
  444892:	xchg   edi,eax
  444893:	out    dx,eax
  444894:	add    BYTE PTR [eax],al
  444896:	mov    edi,0x13000087
  44489b:	pop    ecx
  44489c:	add    BYTE PTR [eax],al
  44489e:	add    ch,dh
  4448a0:	add    BYTE PTR [eax],al
  4448a2:	add    ah,dh
  4448a4:	add    BYTE PTR [eax],al
  4448a6:	add    BYTE PTR [edx],bh
  4448a8:	add    BYTE PTR [eax],al
  4448aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4448ab:	add    BYTE PTR [eax],al
  4448ad:	add    BYTE PTR [esi-0x5a000000],ah
  4448b3:	add    BYTE PTR [eax],al
  4448b5:	add    BYTE PTR [esi-0x5a000000],ah
  4448bb:	add    BYTE PTR [eax],al
  4448bd:	add    BYTE PTR [esi-0x5a000000],ah
  4448c3:	add    BYTE PTR [eax],al
  4448c5:	add    BYTE PTR [esi-0x5a000000],ah
  4448cb:	add    BYTE PTR [eax],al
  4448cd:	add    BYTE PTR [esi-0x5a000000],ah
  4448d3:	add    BYTE PTR [eax],al
  4448d5:	add    BYTE PTR [esi-0x5a000000],ah
  4448db:	add    bh,bh
  4448dd:	(bad)  
  4448de:	inc    DWORD PTR [eax]
  4448e0:	(bad)  
  4448e1:	(bad)  
  4448e2:	inc    DWORD PTR [eax]
  4448e4:	(bad)  
  4448e5:	(bad)  
  4448e6:	inc    DWORD PTR [eax]
  4448e8:	(bad)  
  4448e9:	(bad)  
  4448ea:	inc    DWORD PTR [eax]
  4448ec:	(bad)  
  4448ed:	(bad)  
  4448ee:	inc    DWORD PTR [eax]
  4448f0:	(bad)  
  4448f1:	(bad)  
  4448f2:	inc    DWORD PTR [eax]
  4448f4:	(bad)  
  4448f5:	(bad)  
  4448f6:	inc    DWORD PTR [eax]
  4448f8:	(bad)  
  4448f9:	(bad)  
  4448fa:	inc    DWORD PTR [eax]
  4448fc:	(bad)  
  4448fd:	(bad)  
  4448fe:	inc    DWORD PTR [eax]
  444900:	add    BYTE PTR [eax],al
  444902:	test   eax,0xa9000000
  444907:	add    BYTE PTR [eax],al
  444909:	add    BYTE PTR [ecx-0x57000000],ch
  44490f:	add    BYTE PTR [eax],al
  444911:	add    BYTE PTR [ecx-0x57000000],ch
  444917:	add    BYTE PTR [eax],al
  444919:	add    BYTE PTR [ecx-0x57000000],ch
  44491f:	add    BYTE PTR [eax],al
  444921:	add    BYTE PTR [ecx-0x57000000],ch
  444927:	add    BYTE PTR [eax],al
  444929:	add    BYTE PTR [ecx-0x57000000],ch
  44492f:	add    BYTE PTR [eax],al
  444931:	add    BYTE PTR [eax],al
  444933:	adc    DWORD PTR [eax],eax
  444935:	add    BYTE PTR [eax],al
  444937:	mov    ebx,0xff000000
  44493c:	add    BYTE PTR [eax],al
  44493e:	add    BYTE PTR [eax+eax*1+0x447b200],cl
  444945:	add    al,0xad
  444947:	rcr    DWORD PTR [esi],1
  444949:	push   ds
  44494a:	mov    edi,esi
  44494c:	inc    edi
  44494d:	inc    edi
  44494e:	cmp    edi,0xff724d4d
  444954:	dec    eax
  444955:	dec    eax
  444956:	dec    DWORD PTR gs:[ecx+0x49]
  44495a:	popa   
  44495b:	dec    DWORD PTR [ecx+0x49]
  44495e:	pusha  
  44495f:	dec    DWORD PTR [eax+0x48]
  444962:	pusha  
  444963:	dec    DWORD PTR [ecx+0x49]
  444966:	pop    edi
  444967:	dec    DWORD PTR [ecx+0x49]
  44496a:	pop    edi
  44496b:	dec    DWORD PTR [ecx+0x49]
  44496e:	pop    edi
  44496f:	dec    DWORD PTR [ecx+0x49]
  444972:	pop    edi
  444973:	dec    DWORD PTR [ecx+0x49]
  444976:	pop    edi
  444977:	dec    DWORD PTR [edx+0x4a]
  44497a:	popa   
  44497b:	dec    DWORD PTR [edx+0x4a]
  44497e:	arpl   di,di
  444980:	dec    edx
  444981:	dec    edx
  444982:	push   0x754f4fff
  444987:	inc    DWORD PTR [ecx+0x41]
  44498a:	jg     0x44498b
  44498c:	sbb    DWORD PTR [ecx],ebx
  44498e:	xchg   ebx,eax
  44498f:	cli    
  444990:	add    BYTE PTR [eax],al
  444992:	mov    cl,0xb7
  444994:	add    BYTE PTR [eax],al
  444996:	mov    cl,0x1e
  444998:	add    BYTE PTR [eax],al
  44499a:	add    BYTE PTR [ecx-0x2000000],ah
  4449a0:	add    BYTE PTR [eax],al
  4449a2:	add    BYTE PTR [eax+0x5000000],ch
  4449a8:	add    BYTE PTR [eax],al
  4449aa:	stos   BYTE PTR es:[edi],al
  4449ab:	add    BYTE PTR [eax],al
  4449ad:	add    BYTE PTR [edx-0x56000000],ch
  4449b3:	add    BYTE PTR [eax],al
  4449b5:	add    BYTE PTR [edx-0x56000000],ch
  4449bb:	add    BYTE PTR [eax],al
  4449bd:	add    BYTE PTR [edx-0x56000000],ch
  4449c3:	add    BYTE PTR [eax],al
  4449c5:	add    BYTE PTR [edx-0x56000000],ch
  4449cb:	add    BYTE PTR [eax],al
  4449cd:	add    BYTE PTR [edx-0x56000000],ch
  4449d3:	add    BYTE PTR [eax],al
  4449d5:	add    BYTE PTR [edx-0x56000000],ch
  4449db:	add    bh,bh
  4449dd:	(bad)  
  4449de:	inc    DWORD PTR [eax]
  4449e0:	(bad)  
  4449e1:	(bad)  
  4449e2:	inc    DWORD PTR [eax]
  4449e4:	(bad)  
  4449e5:	(bad)  
  4449e6:	inc    DWORD PTR [eax]
  4449e8:	(bad)  
  4449e9:	(bad)  
  4449ea:	inc    DWORD PTR [eax]
  4449ec:	(bad)  
  4449ed:	(bad)  
  4449ee:	inc    DWORD PTR [eax]
  4449f0:	(bad)  
  4449f1:	(bad)  
  4449f2:	inc    DWORD PTR [eax]
  4449f4:	(bad)  
  4449f5:	(bad)  
  4449f6:	inc    DWORD PTR [eax]
  4449f8:	(bad)  
  4449f9:	(bad)  
  4449fa:	inc    DWORD PTR [eax]
  4449fc:	(bad)  
  4449fd:	(bad)  
  4449fe:	inc    DWORD PTR [eax]
  444a00:	add    BYTE PTR [eax],al
  444a02:	stos   BYTE PTR es:[edi],al
  444a03:	add    BYTE PTR [eax],al
  444a05:	add    BYTE PTR [edx-0x56000000],ch
  444a0b:	add    BYTE PTR [eax],al
  444a0d:	add    BYTE PTR [edx-0x56000000],ch
  444a13:	add    BYTE PTR [eax],al
  444a15:	add    BYTE PTR [edx-0x56000000],ch
  444a1b:	add    BYTE PTR [eax],al
  444a1d:	add    BYTE PTR [edx-0x56000000],ch
  444a23:	add    BYTE PTR [eax],al
  444a25:	add    BYTE PTR [edx-0x56000000],ch
  444a2b:	add    BYTE PTR [eax],al
  444a2d:	add    BYTE PTR [edx+0x0],ch
  444a33:	push   es
  444a34:	add    BYTE PTR [eax],al
  444a36:	add    BYTE PTR [eax+0x0],ch
  444a39:	add    BYTE PTR [eax],al
  444a3b:	inc    DWORD PTR [eax]
  444a3d:	add    BYTE PTR [eax],al
  444a3f:	call   0x504d4a44
  444a44:	add    BYTE PTR [eax],al
  444a46:	rcr    DWORD PTR [ebx+0xa],0xa
  444a4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  444a4b:	out    dx,al
  444a4c:	cmp    al,0x3c
  444a4e:	xchg   ebp,eax
  444a4f:	call   DWORD PTR [edi+0x57]
  444a52:	test   edi,edi
  444a54:	pop    eax
  444a55:	pop    eax
  444a56:	jne    0x444a57
  444a58:	dec    edi
  444a59:	dec    edi
  444a5a:	push   0xffffffff
  444a5c:	push   eax
  444a5d:	push   eax
  444a5e:	call   WORD PTR [eax+0x50]
  444a62:	call   DWORD PTR fs:[ecx+0x51]
  444a66:	(bad)  
  444a67:	call   DWORD PTR [ecx+0x51]
  444a6a:	(bad)  
  444a6b:	call   DWORD PTR [ecx+0x51]
  444a6e:	(bad)  
  444a6f:	call   DWORD PTR [ecx+0x51]
  444a72:	(bad)  
  444a73:	call   DWORD PTR [eax+0x50]
  444a76:	arpl   di,di
  444a78:	push   eax
  444a79:	push   eax
  444a7a:	call   DWORD PTR gs:[ebx+0x53]
  444a7e:	outs   dx,BYTE PTR ds:[esi]
  444a7f:	call   DWORD PTR [edi+0x57]
  444a82:	jns    0x444a83
  444a84:	pop    ecx
  444a85:	pop    ecx
  444a86:	mov    edi,edi
  444a88:	sub    ebp,DWORD PTR [ebx]
  444a8a:	xchg   edx,eax
  444a8b:	inc    DWORD PTR ds:0xc9ab05
  444a91:	add    bl,al
  444a93:	inc    ebx
  444a94:	add    BYTE PTR [eax],al
  444a96:	add    bl,BYTE PTR [esi+0x0]
  444a99:	add    BYTE PTR [eax],al
  444a9b:	hlt    
  444a9c:	add    BYTE PTR [eax],al
  444a9e:	add    bh,dh
  444aa0:	add    BYTE PTR [eax],al
  444aa2:	add    BYTE PTR [ebp+0x0],dl
  444aa5:	add    BYTE PTR [eax],al
  444aa7:	add    al,BYTE PTR [eax]
  444aa9:	add    BYTE PTR [edx-0x56000000],ch
  444aaf:	add    BYTE PTR [eax],al
  444ab1:	add    BYTE PTR [edx-0x56000000],ch
  444ab7:	add    BYTE PTR [eax],al
  444ab9:	add    BYTE PTR [edx-0x56000000],ch
  444abf:	add    BYTE PTR [eax],al
  444ac1:	add    BYTE PTR [edx-0x56000000],ch
  444ac7:	add    BYTE PTR [eax],al
  444ac9:	add    BYTE PTR [edx-0x56000000],ch
  444acf:	add    BYTE PTR [eax],al
  444ad1:	add    BYTE PTR [edx-0x56000000],ch
  444ad7:	add    BYTE PTR [eax],al
  444ad9:	add    BYTE PTR [edx-0x100],ch
  444adf:	add    bh,bh
  444ae1:	(bad)  
  444ae2:	inc    DWORD PTR [eax]
  444ae4:	(bad)  
  444ae5:	(bad)  
  444ae6:	inc    DWORD PTR [eax]
  444ae8:	(bad)  
  444ae9:	(bad)  
  444aea:	inc    DWORD PTR [eax]
  444aec:	(bad)  
  444aed:	(bad)  
  444aee:	inc    DWORD PTR [eax]
  444af0:	(bad)  
  444af1:	(bad)  
  444af2:	inc    DWORD PTR [eax]
  444af4:	(bad)  
  444af5:	(bad)  
  444af6:	inc    DWORD PTR [eax]
  444af8:	(bad)  
  444af9:	(bad)  
  444afa:	inc    DWORD PTR [eax]
  444afc:	(bad)  
  444afd:	(bad)  
  444afe:	inc    DWORD PTR [eax]
  444b00:	add    BYTE PTR [eax],al
  444b02:	stos   BYTE PTR es:[edi],al
  444b03:	add    BYTE PTR [eax],al
  444b05:	add    BYTE PTR [edx-0x56000000],ch
  444b0b:	add    BYTE PTR [eax],al
  444b0d:	add    BYTE PTR [edx-0x56000000],ch
  444b13:	add    BYTE PTR [eax],al
  444b15:	add    BYTE PTR [edx-0x56000000],ch
  444b1b:	add    BYTE PTR [eax],al
  444b1d:	add    BYTE PTR [edx-0x56000000],ch
  444b23:	add    BYTE PTR [eax],al
  444b25:	add    BYTE PTR [edx-0x56000000],ch
  444b2b:	add    BYTE PTR [eax],al
  444b2d:	add    BYTE PTR [edx+0x0],ch
  444b33:	add    BYTE PTR [eax],al
  444b35:	add    BYTE PTR [eax],al
  444b37:	adc    DWORD PTR [eax],eax
  444b39:	add    BYTE PTR [eax],al
  444b3b:	lods   al,BYTE PTR ds:[esi]
  444b3c:	add    BYTE PTR [eax],al
  444b3e:	add    bh,bh
  444b40:	add    BYTE PTR [eax],al
  444b42:	add    BYTE PTR [eax+eax*1+0x1382b00],bh
  444b49:	add    DWORD PTR [ecx-0x51eeeea3],edi
  444b4f:	int    0x3d
  444b51:	cmp    eax,0x5f5fff9f
  444b56:	nop
  444b57:	jmp    DWORD PTR [ebp+0x65]
  444b5a:	cmp    edi,0x60
  444b5d:	pusha  
  444b5e:	js     0x444b5f
  444b60:	pop    ebp
  444b61:	pop    ebp
  444b62:	jae    0x444b63
  444b64:	pop    edx
  444b65:	pop    edx
  444b66:	ins    DWORD PTR es:[edi],dx
  444b67:	call   FWORD PTR [ecx+0x59]
  444b6a:	ins    BYTE PTR es:[edi],dx
  444b6b:	call   FWORD PTR [ecx+0x59]
  444b6e:	ins    BYTE PTR es:[edi],dx
  444b6f:	call   FWORD PTR [edx+0x5a]
  444b72:	outs   dx,DWORD PTR ds:[esi]
  444b73:	call   FWORD PTR [ebp+0x5d]
  444b76:	jb     0x444b77
  444b78:	arpl   WORD PTR [ebx+0x7b],sp
  444b7b:	jmp    DWORD PTR [ebp+0x65]
  444b7e:	xchg   edi,edi
  444b80:	push   edi
  444b81:	push   edi
  444b82:	xchg   esp,eax
  444b83:	push   DWORD PTR [ecx]
  444b85:	xor    DWORD PTR [esi-0x52f3f301],ebx
  444b8b:	mov    bh,0x0
  444b8d:	add    BYTE PTR [ecx+ecx*2+0x3e130000],bh
  444b94:	add    BYTE PTR [eax],al
  444b96:	add    dl,cl
  444b98:	add    BYTE PTR [eax],al
  444b9a:	add    bh,bh
  444b9c:	add    BYTE PTR [eax],al
  444b9e:	add    BYTE PTR [edi+0x7000000],dl
  444ba4:	add    BYTE PTR [eax],al
  444ba6:	add    BYTE PTR [eax],al
  444ba8:	add    BYTE PTR [eax],al
  444baa:	stos   BYTE PTR es:[edi],al
  444bab:	add    BYTE PTR [eax],al
  444bad:	add    BYTE PTR [edx-0x56000000],ch
  444bb3:	add    BYTE PTR [eax],al
  444bb5:	add    BYTE PTR [edx-0x56000000],ch
  444bbb:	add    BYTE PTR [eax],al
  444bbd:	add    BYTE PTR [edx-0x56000000],ch
  444bc3:	add    BYTE PTR [eax],al
  444bc5:	add    BYTE PTR [edx-0x56000000],ch
  444bcb:	add    BYTE PTR [eax],al
  444bcd:	add    BYTE PTR [edx-0x56000000],ch
  444bd3:	add    BYTE PTR [eax],al
  444bd5:	add    BYTE PTR [edx-0x56000000],ch
  444bdb:	add    bh,bh
  444bdd:	(bad)  
  444bde:	inc    DWORD PTR [eax]
  444be0:	(bad)  
  444be1:	(bad)  
  444be2:	inc    DWORD PTR [eax]
  444be4:	(bad)  
  444be5:	(bad)  
  444be6:	inc    DWORD PTR [eax]
  444be8:	(bad)  
  444be9:	(bad)  
  444bea:	inc    DWORD PTR [eax]
  444bec:	(bad)  
  444bed:	(bad)  
  444bee:	inc    DWORD PTR [eax]
  444bf0:	(bad)  
  444bf1:	(bad)  
  444bf2:	inc    DWORD PTR [eax]
  444bf4:	(bad)  
  444bf5:	(bad)  
  444bf6:	inc    DWORD PTR [eax]
  444bf8:	(bad)  
  444bf9:	(bad)  
  444bfa:	inc    DWORD PTR [eax]
  444bfc:	(bad)  
  444bfd:	(bad)  
  444bfe:	inc    DWORD PTR [eax]
  444c00:	add    BYTE PTR [eax],al
  444c02:	stos   BYTE PTR es:[edi],al
  444c03:	add    BYTE PTR [eax],al
  444c05:	add    BYTE PTR [edx-0x56000000],ch
  444c0b:	add    BYTE PTR [eax],al
  444c0d:	add    BYTE PTR [edx-0x56000000],ch
  444c13:	add    BYTE PTR [eax],al
  444c15:	add    BYTE PTR [edx-0x56000000],ch
  444c1b:	add    BYTE PTR [eax],al
  444c1d:	add    BYTE PTR [edx-0x56000000],ch
  444c23:	add    BYTE PTR [eax],al
  444c25:	add    BYTE PTR [edx-0x56000000],ch
  444c2b:	add    BYTE PTR [eax],al
  444c2d:	add    BYTE PTR [edx+0x0],ch
  444c33:	add    BYTE PTR [eax],al
  444c35:	add    BYTE PTR [eax],al
  444c37:	add    al,BYTE PTR [eax]
  444c39:	add    BYTE PTR [eax],al
  444c3b:	cmp    al,0x0
  444c3d:	add    BYTE PTR [eax],al
  444c3f:	rol    BYTE PTR [eax],1
  444c41:	add    BYTE PTR [eax],al
  444c43:	inc    BYTE PTR [eax]
  444c45:	add    BYTE PTR [eax],al
  444c47:	mov    ds:0x2c050000,eax
  444c4c:	add    BYTE PTR [eax],al
  444c4e:	mov    dl,0x4b
  444c50:	adc    edx,DWORD PTR [ebx]
  444c52:	scas   eax,DWORD PTR es:[edi]
  444c53:	mov    al,ds:0xe0ac3333
  444c58:	dec    edi
  444c59:	dec    edi
  444c5a:	mov    eax,ds:0x965c5cff
  444c5f:	jmp    DWORD PTR [ebx+0x63]
  444c62:	(bad)  
  444c63:	jmp    DWORD PTR [edi+0x67]
  444c66:	mov    edi,edi
  444c68:	push   0x67ff8768
  444c6d:	addr16 mov bh,bh
  444c70:	data16 mov di,di
  444c74:	bound  esp,QWORD PTR [edx-0x71]
  444c77:	call   FWORD PTR [edx+0x5a]
  444c7a:	xchg   edi,eax
  444c7b:	inc    DWORD PTR [esi+0x46]
  444c7e:	mov    ds:0xab2727ff,al
  444c83:	aam    0x9
  444c85:	or     DWORD PTR [ecx-0x43ffff67],esi
  444c8b:	cmp    al,0x0
  444c8d:	add    BYTE PTR [eax],al
  444c8f:	add    BYTE PTR ss:[eax],al
  444c92:	add    BYTE PTR [edi-0x2000000],ch
  444c98:	add    BYTE PTR [eax],al
  444c9a:	add    al,al
  444c9c:	add    BYTE PTR [eax],al
  444c9e:	add    BYTE PTR ds:0x1000000,ch
  444ca4:	add    BYTE PTR [eax],al
  444ca6:	add    BYTE PTR [eax],al
  444ca8:	add    BYTE PTR [eax],al
  444caa:	stos   BYTE PTR es:[edi],al
  444cab:	add    BYTE PTR [eax],al
  444cad:	add    BYTE PTR [edx-0x56000000],ch
  444cb3:	add    BYTE PTR [eax],al
  444cb5:	add    BYTE PTR [edx-0x56000000],ch
  444cbb:	add    BYTE PTR [eax],al
  444cbd:	add    BYTE PTR [edx-0x56000000],ch
  444cc3:	add    BYTE PTR [eax],al
  444cc5:	add    BYTE PTR [edx-0x56000000],ch
  444ccb:	add    BYTE PTR [eax],al
  444ccd:	add    BYTE PTR [edx-0x56000000],ch
  444cd3:	add    BYTE PTR [eax],al
  444cd5:	add    BYTE PTR [edx-0x56000000],ch
  444cdb:	add    bh,bh
  444cdd:	(bad)  
  444cde:	inc    DWORD PTR [eax]
  444ce0:	(bad)  
  444ce1:	(bad)  
  444ce2:	inc    DWORD PTR [eax]
  444ce4:	(bad)  
  444ce5:	(bad)  
  444ce6:	inc    DWORD PTR [eax]
  444ce8:	(bad)  
  444ce9:	(bad)  
  444cea:	inc    DWORD PTR [eax]
  444cec:	(bad)  
  444ced:	(bad)  
  444cee:	inc    DWORD PTR [eax]
  444cf0:	(bad)  
  444cf1:	(bad)  
  444cf2:	inc    DWORD PTR [eax]
  444cf4:	(bad)  
  444cf5:	(bad)  
  444cf6:	inc    DWORD PTR [eax]
  444cf8:	(bad)  
  444cf9:	(bad)  
  444cfa:	inc    DWORD PTR [eax]
  444cfc:	(bad)  
  444cfd:	(bad)  
  444cfe:	inc    DWORD PTR [eax]
  444d00:	add    BYTE PTR [eax],al
  444d02:	stos   BYTE PTR es:[edi],al
  444d03:	add    BYTE PTR [eax],al
  444d05:	add    BYTE PTR [edx-0x56000000],ch
  444d0b:	add    BYTE PTR [eax],al
  444d0d:	add    BYTE PTR [edx-0x56000000],ch
  444d13:	add    BYTE PTR [eax],al
  444d15:	add    BYTE PTR [edx-0x56000000],ch
  444d1b:	add    BYTE PTR [eax],al
  444d1d:	add    BYTE PTR [edx-0x56000000],ch
  444d23:	add    BYTE PTR [eax],al
  444d25:	add    BYTE PTR [edx-0x56000000],ch
  444d2b:	add    BYTE PTR [eax],al
  444d2d:	add    BYTE PTR [edx+0x0],ch
	...
  444d3b:	push   es
  444d3c:	add    BYTE PTR [eax],al
  444d3e:	add    BYTE PTR [ecx+0x0],bl
  444d41:	add    BYTE PTR [eax],al
  444d43:	fild   DWORD PTR [eax]
  444d45:	add    BYTE PTR [eax],al
  444d47:	inc    DWORD PTR [eax]
  444d49:	add    BYTE PTR [eax],al
  444d4b:	rol    BYTE PTR [eax],0x0
  444d4e:	add    BYTE PTR [ecx+0x0],cl
  444d51:	add    BYTE PTR [edx-0x48ffffe5],dh
  444d57:	outs   dx,BYTE PTR ds:[esi]
  444d58:	sbb    bl,BYTE PTR [edx]
  444d5a:	scas   eax,DWORD PTR es:[edi]
  444d5b:	mov    al,0x32
  444d5d:	xor    ch,BYTE PTR [edi-0x54bfbf2d]
  444d63:	loopne 0x444db0
  444d65:	dec    ebx
  444d66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  444d67:	jmp    0x4e4e:0xefa55050
  444d6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  444d6f:	out    dx,al
  444d70:	dec    eax
  444d71:	dec    eax
  444d72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  444d73:	jmp    0xdeee8bb6
  444d78:	sub    al,0x2c
  444d7a:	scas   eax,DWORD PTR es:[edi]
  444d7b:	iret   
  444d7c:	adc    dl,BYTE PTR [edx]
  444d7e:	mov    dl,0xa4
  444d80:	add    BYTE PTR [eax],al
  444d82:	mov    ah,0x5d
  444d84:	add    BYTE PTR [eax],al
  444d86:	mov    eax,ds:0xf
  444d8b:	push   edi
  444d8c:	add    BYTE PTR [eax],al
  444d8e:	add    dl,cl
  444d90:	add    BYTE PTR [eax],al
  444d92:	add    bh,bh
  444d94:	add    BYTE PTR [eax],al
  444d96:	add    bh,cl
  444d98:	add    BYTE PTR [eax],al
  444d9a:	add    BYTE PTR [edx+0x0],cl
  444d9d:	add    BYTE PTR [eax],al
  444d9f:	add    eax,DWORD PTR [eax]
	...
  444da9:	add    BYTE PTR [edx-0x56000000],ch
  444daf:	add    BYTE PTR [eax],al
  444db1:	add    BYTE PTR [edx-0x56000000],ch
  444db7:	add    BYTE PTR [eax],al
  444db9:	add    BYTE PTR [edx-0x56000000],ch
  444dbf:	add    BYTE PTR [eax],al
  444dc1:	add    BYTE PTR [edx-0x56000000],ch
  444dc7:	add    BYTE PTR [eax],al
  444dc9:	add    BYTE PTR [edx-0x56000000],ch
  444dcf:	add    BYTE PTR [eax],al
  444dd1:	add    BYTE PTR [edx-0x56000000],ch
  444dd7:	add    BYTE PTR [eax],al
  444dd9:	add    BYTE PTR [edx-0x100],ch
  444ddf:	add    bh,bh
  444de1:	(bad)  
  444de2:	inc    DWORD PTR [eax]
  444de4:	(bad)  
  444de5:	(bad)  
  444de6:	inc    DWORD PTR [eax]
  444de8:	(bad)  
  444de9:	(bad)  
  444dea:	inc    DWORD PTR [eax]
  444dec:	(bad)  
  444ded:	(bad)  
  444dee:	inc    DWORD PTR [eax]
  444df0:	(bad)  
  444df1:	(bad)  
  444df2:	inc    DWORD PTR [eax]
  444df4:	(bad)  
  444df5:	(bad)  
  444df6:	inc    DWORD PTR [eax]
  444df8:	(bad)  
  444df9:	(bad)  
  444dfa:	inc    DWORD PTR [eax]
  444dfc:	(bad)  
  444dfd:	(bad)  
  444dfe:	inc    DWORD PTR [eax]
  444e00:	add    BYTE PTR [eax],al
  444e02:	stos   BYTE PTR es:[edi],al
  444e03:	add    BYTE PTR [eax],al
  444e05:	add    BYTE PTR [edx-0x56000000],ch
  444e0b:	add    BYTE PTR [eax],al
  444e0d:	add    BYTE PTR [edx-0x56000000],ch
  444e13:	add    BYTE PTR [eax],al
  444e15:	add    BYTE PTR [edx-0x56000000],ch
  444e1b:	add    BYTE PTR [eax],al
  444e1d:	add    BYTE PTR [edx-0x56000000],ch
  444e23:	add    BYTE PTR [eax],al
  444e25:	add    BYTE PTR [edx-0x56000000],ch
  444e2b:	add    BYTE PTR [eax],al
  444e2d:	add    BYTE PTR [edx+0x0],ch
	...
  444e3f:	or     BYTE PTR [eax],al
  444e41:	add    BYTE PTR [eax],al
  444e43:	pop    ecx
  444e44:	add    BYTE PTR [eax],al
  444e46:	add    cl,dl
  444e48:	add    BYTE PTR [eax],al
  444e4a:	add    bh,bh
  444e4c:	add    BYTE PTR [eax],al
  444e4e:	add    ah,ch
  444e50:	add    BYTE PTR [eax],al
  444e52:	add    BYTE PTR [ebx+0x38000000],dl
  444e58:	add    BYTE PTR [eax],al
  444e5a:	lods   al,BYTE PTR ds:[esi]
  444e5b:	adc    BYTE PTR [eax],al
  444e5d:	add    BYTE PTR [eax-0x4afdfdbf],bh
  444e63:	ins    BYTE PTR es:[edi],dx
  444e64:	or     cl,BYTE PTR [edx]
  444e66:	mov    bl,0x92
  444e68:	adc    BYTE PTR [eax],dl
  444e6a:	mov    dl,0xa4
  444e6c:	push   cs
  444e6d:	push   cs
  444e6e:	mov    dl,0x9e
  444e70:	or     BYTE PTR [eax],cl
  444e72:	mov    ah,0x8f
  444e74:	add    DWORD PTR [ecx],eax
  444e76:	mov    dh,0x68
  444e78:	add    BYTE PTR [eax],al
  444e7a:	mov    edx,0x9d020234
  444e7f:	push   cs
  444e80:	add    BYTE PTR [eax],al
  444e82:	add    BYTE PTR [edx+0x0],al
  444e85:	add    BYTE PTR [eax],al
  444e87:	pushf  
  444e88:	add    BYTE PTR [eax],al
  444e8a:	add    bl,dh
  444e8c:	add    BYTE PTR [eax],al
  444e8e:	add    bh,bh
  444e90:	add    BYTE PTR [eax],al
  444e92:	add    ch,al
  444e94:	add    BYTE PTR [eax],al
  444e96:	add    BYTE PTR [ebp+0x0],cl
  444e99:	add    BYTE PTR [eax],al
  444e9b:	add    al,0x0
	...
  444ea9:	add    BYTE PTR [edx-0x56000000],ch
  444eaf:	add    BYTE PTR [eax],al
  444eb1:	add    BYTE PTR [edx-0x56000000],ch
  444eb7:	add    BYTE PTR [eax],al
  444eb9:	add    BYTE PTR [edx-0x56000000],ch
  444ebf:	add    BYTE PTR [eax],al
  444ec1:	add    BYTE PTR [edx-0x56000000],ch
  444ec7:	add    BYTE PTR [eax],al
  444ec9:	add    BYTE PTR [edx-0x56000000],ch
  444ecf:	add    BYTE PTR [eax],al
  444ed1:	add    BYTE PTR [edx-0x56000000],ch
  444ed7:	add    BYTE PTR [eax],al
  444ed9:	add    BYTE PTR [edx-0x100],ch
  444edf:	add    bh,bh
  444ee1:	(bad)  
  444ee2:	inc    DWORD PTR [eax]
  444ee4:	(bad)  
  444ee5:	(bad)  
  444ee6:	inc    DWORD PTR [eax]
  444ee8:	(bad)  
  444ee9:	(bad)  
  444eea:	inc    DWORD PTR [eax]
  444eec:	(bad)  
  444eed:	(bad)  
  444eee:	inc    DWORD PTR [eax]
  444ef0:	(bad)  
  444ef1:	(bad)  
  444ef2:	inc    DWORD PTR [eax]
  444ef4:	(bad)  
  444ef5:	(bad)  
  444ef6:	inc    DWORD PTR [eax]
  444ef8:	(bad)  
  444ef9:	(bad)  
  444efa:	inc    DWORD PTR [eax]
  444efc:	(bad)  
  444efd:	(bad)  
  444efe:	inc    DWORD PTR [eax]
  444f00:	(bad)  
  444f01:	(bad)  
  444f02:	inc    DWORD PTR [eax]
  444f04:	(bad)  
  444f05:	(bad)  
  444f06:	inc    DWORD PTR [eax]
  444f08:	(bad)  
  444f09:	(bad)  
  444f0a:	inc    DWORD PTR [eax]
  444f0c:	(bad)  
  444f0d:	(bad)  
  444f0e:	inc    DWORD PTR [eax]
  444f10:	(bad)  
  444f11:	(bad)  
  444f12:	inc    DWORD PTR [eax]
  444f14:	(bad)  
  444f15:	(bad)  
  444f16:	inc    DWORD PTR [eax]
  444f18:	(bad)  
  444f19:	(bad)  
  444f1a:	inc    DWORD PTR [eax]
  444f1c:	(bad)  
  444f1d:	(bad)  
  444f1e:	inc    DWORD PTR [eax]
  444f20:	(bad)  
  444f21:	(bad)  
  444f22:	inc    DWORD PTR [eax]
  444f24:	(bad)  
  444f25:	(bad)  
  444f26:	inc    DWORD PTR [eax]
  444f28:	(bad)  
  444f29:	(bad)  
  444f2a:	inc    DWORD PTR [eax]
  444f2c:	(bad)  
  444f2d:	(bad)  
  444f2e:	inc    DWORD PTR [eax]
	...
  444f40:	add    BYTE PTR [eax],al
  444f42:	add    BYTE PTR [ebx],al
  444f44:	add    BYTE PTR [eax],al
  444f46:	add    BYTE PTR [eax+eax*1],bh
  444f49:	add    BYTE PTR [eax],al
  444f4b:	mov    dl,0x0
  444f4d:	add    BYTE PTR [eax],al
  444f4f:	inc    DWORD PTR [eax]
  444f51:	add    BYTE PTR [eax],al
  444f53:	inc    DWORD PTR [eax]
  444f55:	add    BYTE PTR [eax],al
  444f57:	out    dx,eax
  444f58:	add    BYTE PTR [eax],al
  444f5a:	add    BYTE PTR [eax+0x75000000],dh
  444f60:	add    BYTE PTR [eax],al
  444f62:	add    BYTE PTR [eax+eax*1+0x0],al
  444f66:	add    BYTE PTR [edi],bl
  444f68:	add    BYTE PTR [eax],al
  444f6a:	add    BYTE PTR ds:0x7000000,al
  444f70:	add    BYTE PTR [eax],al
  444f72:	add    BYTE PTR [edx],ah
  444f74:	add    BYTE PTR [eax],al
  444f76:	add    BYTE PTR [ecx+0x0],cl
  444f79:	add    BYTE PTR [eax],al
  444f7b:	jp     0x444f7d
  444f7d:	add    BYTE PTR [eax],al
  444f7f:	mov    dh,0x0
  444f81:	add    BYTE PTR [eax],al
  444f83:	hlt    
  444f84:	add    BYTE PTR [eax],al
  444f86:	add    bh,bh
  444f88:	add    BYTE PTR [eax],al
  444f8a:	add    ah,bh
  444f8c:	add    BYTE PTR [eax],al
  444f8e:	add    BYTE PTR [ebp+0x33000000],ah
  444f94:	add    BYTE PTR [eax],al
  444f96:	add    BYTE PTR [edx],al
	...
  444fa8:	(bad)  
  444fa9:	(bad)  
  444faa:	inc    DWORD PTR [eax]
  444fac:	(bad)  
  444fad:	(bad)  
  444fae:	inc    DWORD PTR [eax]
  444fb0:	(bad)  
  444fb1:	(bad)  
  444fb2:	inc    DWORD PTR [eax]
  444fb4:	(bad)  
  444fb5:	(bad)  
  444fb6:	inc    DWORD PTR [eax]
  444fb8:	(bad)  
  444fb9:	(bad)  
  444fba:	inc    DWORD PTR [eax]
  444fbc:	(bad)  
  444fbd:	(bad)  
  444fbe:	inc    DWORD PTR [eax]
  444fc0:	(bad)  
  444fc1:	(bad)  
  444fc2:	inc    DWORD PTR [eax]
  444fc4:	(bad)  
  444fc5:	(bad)  
  444fc6:	inc    DWORD PTR [eax]
  444fc8:	(bad)  
  444fc9:	(bad)  
  444fca:	inc    DWORD PTR [eax]
  444fcc:	(bad)  
  444fcd:	(bad)  
  444fce:	inc    DWORD PTR [eax]
  444fd0:	(bad)  
  444fd1:	(bad)  
  444fd2:	inc    DWORD PTR [eax]
  444fd4:	(bad)  
  444fd5:	(bad)  
  444fd6:	inc    DWORD PTR [eax]
  444fd8:	(bad)  
  444fd9:	(bad)  
  444fda:	inc    DWORD PTR [eax]
  444fdc:	(bad)  
  444fdd:	(bad)  
  444fde:	inc    DWORD PTR [eax]
  444fe0:	(bad)  
  444fe1:	(bad)  
  444fe2:	inc    DWORD PTR [eax]
  444fe4:	(bad)  
  444fe5:	(bad)  
  444fe6:	inc    DWORD PTR [eax]
  444fe8:	(bad)  
  444fe9:	(bad)  
  444fea:	inc    DWORD PTR [eax]
  444fec:	(bad)  
  444fed:	(bad)  
  444fee:	inc    DWORD PTR [eax]
  444ff0:	(bad)  
  444ff1:	(bad)  
  444ff2:	inc    DWORD PTR [eax]
  444ff4:	(bad)  
  444ff5:	(bad)  
  444ff6:	inc    DWORD PTR [eax]
  444ff8:	(bad)  
  444ff9:	(bad)  
  444ffa:	inc    DWORD PTR [eax]
  444ffc:	(bad)  
  444ffd:	(bad)  
  444ffe:	inc    DWORD PTR [eax]
  445000:	(bad)  
  445001:	(bad)  
  445002:	inc    DWORD PTR [eax]
  445004:	(bad)  
  445005:	(bad)  
  445006:	inc    DWORD PTR [eax]
  445008:	(bad)  
  445009:	(bad)  
  44500a:	inc    DWORD PTR [eax]
  44500c:	(bad)  
  44500d:	(bad)  
  44500e:	inc    DWORD PTR [eax]
  445010:	(bad)  
  445011:	(bad)  
  445012:	inc    DWORD PTR [eax]
  445014:	(bad)  
  445015:	(bad)  
  445016:	inc    DWORD PTR [eax]
  445018:	(bad)  
  445019:	(bad)  
  44501a:	inc    DWORD PTR [eax]
  44501c:	(bad)  
  44501d:	(bad)  
  44501e:	inc    DWORD PTR [eax]
  445020:	(bad)  
  445021:	(bad)  
  445022:	inc    DWORD PTR [eax]
  445024:	(bad)  
  445025:	(bad)  
  445026:	inc    DWORD PTR [eax]
  445028:	(bad)  
  445029:	(bad)  
  44502a:	inc    DWORD PTR [eax]
  44502c:	(bad)  
  44502d:	(bad)  
  44502e:	inc    DWORD PTR [eax]
	...
  445048:	add    BYTE PTR [eax],al
  44504a:	add    BYTE PTR [ecx],dl
  44504c:	add    BYTE PTR [eax],al
  44504e:	add    BYTE PTR [ecx+0x0],ch
  445051:	add    BYTE PTR [eax],al
  445053:	lds    eax,FWORD PTR [eax]
  445055:	add    BYTE PTR [eax],al
  445057:	inc    BYTE PTR [eax]
  445059:	add    BYTE PTR [eax],al
  44505b:	inc    DWORD PTR [eax]
  44505d:	add    BYTE PTR [eax],al
  44505f:	inc    DWORD PTR [eax]
  445061:	add    BYTE PTR [eax],al
  445063:	inc    DWORD PTR [eax]
  445065:	add    BYTE PTR [eax],al
  445067:	inc    DWORD PTR [eax]
  445069:	add    BYTE PTR [eax],al
  44506b:	inc    DWORD PTR [eax]
  44506d:	add    BYTE PTR [eax],al
  44506f:	inc    DWORD PTR [eax]
  445071:	add    BYTE PTR [eax],al
  445073:	inc    DWORD PTR [eax]
  445075:	add    BYTE PTR [eax],al
  445077:	inc    DWORD PTR [eax]
  445079:	add    BYTE PTR [eax],al
  44507b:	inc    DWORD PTR [eax]
  44507d:	add    BYTE PTR [eax],al
  44507f:	inc    DWORD PTR [eax]
  445081:	add    BYTE PTR [eax],al
  445083:	cld    
  445084:	add    BYTE PTR [eax],al
  445086:	add    BYTE PTR [edx+0x60000000],bh
  44508c:	add    BYTE PTR [eax],al
  44508e:	add    BYTE PTR [ebx],cl
	...
  4450a8:	(bad)  
  4450a9:	(bad)  
  4450aa:	inc    DWORD PTR [eax]
  4450ac:	(bad)  
  4450ad:	(bad)  
  4450ae:	inc    DWORD PTR [eax]
  4450b0:	(bad)  
  4450b1:	(bad)  
  4450b2:	inc    DWORD PTR [eax]
  4450b4:	(bad)  
  4450b5:	(bad)  
  4450b6:	inc    DWORD PTR [eax]
  4450b8:	(bad)  
  4450b9:	(bad)  
  4450ba:	inc    DWORD PTR [eax]
  4450bc:	(bad)  
  4450bd:	(bad)  
  4450be:	inc    DWORD PTR [eax]
  4450c0:	(bad)  
  4450c1:	(bad)  
  4450c2:	inc    DWORD PTR [eax]
  4450c4:	(bad)  
  4450c5:	(bad)  
  4450c6:	inc    DWORD PTR [eax]
  4450c8:	(bad)  
  4450c9:	(bad)  
  4450ca:	inc    DWORD PTR [eax]
  4450cc:	(bad)  
  4450cd:	(bad)  
  4450ce:	inc    DWORD PTR [eax]
  4450d0:	(bad)  
  4450d1:	(bad)  
  4450d2:	inc    DWORD PTR [eax]
  4450d4:	(bad)  
  4450d5:	(bad)  
  4450d6:	inc    DWORD PTR [eax]
  4450d8:	(bad)  
  4450d9:	(bad)  
  4450da:	inc    DWORD PTR [eax]
  4450dc:	(bad)  
  4450dd:	(bad)  
  4450de:	inc    DWORD PTR [eax]
  4450e0:	(bad)  
  4450e1:	(bad)  
  4450e2:	inc    DWORD PTR [eax]
  4450e4:	(bad)  
  4450e5:	(bad)  
  4450e6:	inc    DWORD PTR [eax]
  4450e8:	(bad)  
  4450e9:	(bad)  
  4450ea:	inc    DWORD PTR [eax]
  4450ec:	(bad)  
  4450ed:	(bad)  
  4450ee:	inc    DWORD PTR [eax]
  4450f0:	(bad)  
  4450f1:	(bad)  
  4450f2:	inc    DWORD PTR [eax]
  4450f4:	(bad)  
  4450f5:	(bad)  
  4450f6:	inc    DWORD PTR [eax]
  4450f8:	(bad)  
  4450f9:	(bad)  
  4450fa:	inc    DWORD PTR [eax]
  4450fc:	(bad)  
  4450fd:	(bad)  
  4450fe:	inc    DWORD PTR [eax]
  445100:	(bad)  
  445101:	(bad)  
  445102:	inc    DWORD PTR [eax]
  445104:	(bad)  
  445105:	(bad)  
  445106:	inc    DWORD PTR [eax]
  445108:	(bad)  
  445109:	(bad)  
  44510a:	inc    DWORD PTR [eax]
  44510c:	(bad)  
  44510d:	(bad)  
  44510e:	inc    DWORD PTR [eax]
  445110:	(bad)  
  445111:	(bad)  
  445112:	inc    DWORD PTR [eax]
  445114:	(bad)  
  445115:	(bad)  
  445116:	inc    DWORD PTR [eax]
  445118:	(bad)  
  445119:	(bad)  
  44511a:	inc    DWORD PTR [eax]
  44511c:	(bad)  
  44511d:	(bad)  
  44511e:	inc    DWORD PTR [eax]
  445120:	(bad)  
  445121:	(bad)  
  445122:	inc    DWORD PTR [eax]
  445124:	(bad)  
  445125:	(bad)  
  445126:	inc    DWORD PTR [eax]
  445128:	(bad)  
  445129:	(bad)  
  44512a:	inc    DWORD PTR [eax]
  44512c:	(bad)  
  44512d:	(bad)  
  44512e:	inc    DWORD PTR [eax]
	...
  445150:	add    BYTE PTR [eax],al
  445152:	add    BYTE PTR [edi],cl
  445154:	add    BYTE PTR [eax],al
  445156:	add    BYTE PTR [ebp+0x0],cl
  445159:	add    BYTE PTR [eax],al
  44515b:	mov    BYTE PTR [eax],al
  44515d:	add    BYTE PTR [eax],al
  44515f:	mov    edx,0xdf000000
  445164:	add    BYTE PTR [eax],al
  445166:	add    al,bh
  445168:	add    BYTE PTR [eax],al
  44516a:	add    bh,bh
  44516c:	add    BYTE PTR [eax],al
  44516e:	add    bh,bh
  445170:	add    BYTE PTR [eax],al
  445172:	add    dh,dh
  445174:	add    BYTE PTR [eax],al
  445176:	add    ah,bl
  445178:	add    BYTE PTR [eax],al
  44517a:	add    BYTE PTR [ebp-0x7d000000],dh
  445180:	add    BYTE PTR [eax],al
  445182:	add    BYTE PTR [edi+0x0],al
  445185:	add    BYTE PTR [eax],al
  445187:	or     al,BYTE PTR [eax]
	...
  4451a5:	add    BYTE PTR [eax],al
  4451a7:	add    bh,bh
  4451a9:	(bad)  
  4451aa:	inc    DWORD PTR [eax]
  4451ac:	(bad)  
  4451ad:	(bad)  
  4451ae:	inc    DWORD PTR [eax]
  4451b0:	(bad)  
  4451b1:	(bad)  
  4451b2:	inc    DWORD PTR [eax]
  4451b4:	(bad)  
  4451b5:	(bad)  
  4451b6:	inc    DWORD PTR [eax]
  4451b8:	(bad)  
  4451b9:	(bad)  
  4451ba:	inc    DWORD PTR [eax]
  4451bc:	(bad)  
  4451bd:	(bad)  
  4451be:	inc    DWORD PTR [eax]
  4451c0:	(bad)  
  4451c1:	(bad)  
  4451c2:	inc    DWORD PTR [eax]
  4451c4:	(bad)  
  4451c5:	(bad)  
  4451c6:	inc    DWORD PTR [eax]
  4451c8:	(bad)  
  4451c9:	(bad)  
  4451ca:	inc    DWORD PTR [eax]
  4451cc:	(bad)  
  4451cd:	(bad)  
  4451ce:	inc    DWORD PTR [eax]
  4451d0:	(bad)  
  4451d1:	(bad)  
  4451d2:	inc    DWORD PTR [eax]
  4451d4:	(bad)  
  4451d5:	(bad)  
  4451d6:	inc    DWORD PTR [eax]
  4451d8:	(bad)  
  4451d9:	(bad)  
  4451da:	inc    DWORD PTR [eax]
  4451dc:	(bad)  
  4451dd:	(bad)  
  4451de:	inc    DWORD PTR [eax]
  4451e0:	(bad)  
  4451e1:	(bad)  
  4451e2:	inc    DWORD PTR [eax]
  4451e4:	(bad)  
  4451e5:	(bad)  
  4451e6:	inc    DWORD PTR [eax]
  4451e8:	(bad)  
  4451e9:	(bad)  
  4451ea:	inc    DWORD PTR [eax]
  4451ec:	(bad)  
  4451ed:	(bad)  
  4451ee:	inc    DWORD PTR [eax]
  4451f0:	(bad)  
  4451f1:	(bad)  
  4451f2:	inc    DWORD PTR [eax]
  4451f4:	(bad)  
  4451f5:	(bad)  
  4451f6:	inc    DWORD PTR [eax]
  4451f8:	(bad)  
  4451f9:	(bad)  
  4451fa:	inc    DWORD PTR [eax]
  4451fc:	(bad)  
  4451fd:	(bad)  
  4451fe:	inc    DWORD PTR [eax]
  445200:	(bad)  
  445201:	(bad)  
  445202:	inc    DWORD PTR [eax]
  445204:	(bad)  
  445205:	(bad)  
  445206:	inc    DWORD PTR [eax]
  445208:	(bad)  
  445209:	(bad)  
  44520a:	inc    DWORD PTR [eax]
  44520c:	(bad)  
  44520d:	(bad)  
  44520e:	inc    DWORD PTR [eax]
  445210:	(bad)  
  445211:	(bad)  
  445212:	inc    DWORD PTR [eax]
  445214:	(bad)  
  445215:	(bad)  
  445216:	inc    DWORD PTR [eax]
  445218:	(bad)  
  445219:	(bad)  
  44521a:	inc    DWORD PTR [eax]
  44521c:	(bad)  
  44521d:	(bad)  
  44521e:	inc    DWORD PTR [eax]
  445220:	(bad)  
  445221:	(bad)  
  445222:	inc    DWORD PTR [eax]
  445224:	(bad)  
  445225:	(bad)  
  445226:	inc    DWORD PTR [eax]
  445228:	(bad)  
  445229:	(bad)  
  44522a:	inc    DWORD PTR [eax]
  44522c:	(bad)  
  44522d:	(bad)  
  44522e:	inc    DWORD PTR [eax]
  445230:	(bad)  
  445231:	(bad)  
  445232:	inc    DWORD PTR [eax]
  445234:	(bad)  
  445235:	(bad)  
  445236:	inc    DWORD PTR [eax]
  445238:	(bad)  
  445239:	(bad)  
  44523a:	inc    DWORD PTR [eax]
  44523c:	(bad)  
  44523d:	(bad)  
  44523e:	inc    DWORD PTR [eax]
  445240:	(bad)  
  445241:	(bad)  
  445242:	inc    DWORD PTR [eax]
  445244:	(bad)  
  445245:	(bad)  
  445246:	inc    DWORD PTR [eax]
  445248:	(bad)  
  445249:	(bad)  
  44524a:	inc    DWORD PTR [eax]
  44524c:	(bad)  
  44524d:	(bad)  
  44524e:	inc    DWORD PTR [eax]
  445250:	(bad)  
  445251:	(bad)  
  445252:	inc    DWORD PTR [eax]
  445254:	(bad)  
  445255:	(bad)  
  445256:	inc    DWORD PTR [eax]
  445258:	(bad)  
  445259:	(bad)  
  44525a:	inc    DWORD PTR [eax]
  44525c:	(bad)  
  44525d:	(bad)  
  44525e:	inc    DWORD PTR [eax]
  445260:	(bad)  
  445261:	(bad)  
  445262:	inc    DWORD PTR [eax]
  445264:	(bad)  
  445265:	(bad)  
  445266:	inc    DWORD PTR [eax]
  445268:	(bad)  
  445269:	(bad)  
  44526a:	inc    DWORD PTR [eax]
  44526c:	(bad)  
  44526d:	(bad)  
  44526e:	inc    DWORD PTR [eax]
  445270:	(bad)  
  445271:	(bad)  
  445272:	inc    DWORD PTR [eax]
  445274:	(bad)  
  445275:	(bad)  
  445276:	inc    DWORD PTR [eax]
  445278:	(bad)  
  445279:	(bad)  
  44527a:	inc    DWORD PTR [eax]
  44527c:	(bad)  
  44527d:	(bad)  
  44527e:	inc    DWORD PTR [eax]
  445280:	(bad)  
  445281:	(bad)  
  445282:	inc    DWORD PTR [eax]
  445284:	(bad)  
  445285:	(bad)  
  445286:	inc    DWORD PTR [eax]
  445288:	(bad)  
  445289:	(bad)  
  44528a:	inc    DWORD PTR [eax]
  44528c:	(bad)  
  44528d:	(bad)  
  44528e:	inc    DWORD PTR [eax]
  445290:	(bad)  
  445291:	(bad)  
  445292:	inc    DWORD PTR [eax]
  445294:	(bad)  
  445295:	(bad)  
  445296:	inc    DWORD PTR [eax]
  445298:	(bad)  
  445299:	(bad)  
  44529a:	inc    DWORD PTR [eax]
  44529c:	(bad)  
  44529d:	(bad)  
  44529e:	inc    DWORD PTR [eax]
  4452a0:	(bad)  
  4452a1:	(bad)  
  4452a2:	inc    DWORD PTR [eax]
  4452a4:	(bad)  
  4452a5:	(bad)  
  4452a6:	inc    DWORD PTR [eax]
  4452a8:	(bad)  
  4452a9:	(bad)  
  4452aa:	inc    DWORD PTR [eax]
  4452ac:	(bad)  
  4452ad:	(bad)  
  4452ae:	inc    DWORD PTR [eax]
  4452b0:	(bad)  
  4452b1:	(bad)  
  4452b2:	inc    DWORD PTR [eax]
  4452b4:	(bad)  
  4452b5:	(bad)  
  4452b6:	inc    DWORD PTR [eax]
  4452b8:	(bad)  
  4452b9:	(bad)  
  4452ba:	inc    DWORD PTR [eax]
  4452bc:	(bad)  
  4452bd:	(bad)  
  4452be:	inc    DWORD PTR [eax]
  4452c0:	(bad)  
  4452c1:	(bad)  
  4452c2:	inc    DWORD PTR [eax]
  4452c4:	(bad)  
  4452c5:	(bad)  
  4452c6:	inc    DWORD PTR [eax]
  4452c8:	(bad)  
  4452c9:	(bad)  
  4452ca:	inc    DWORD PTR [eax]
  4452cc:	(bad)  
  4452cd:	(bad)  
  4452ce:	inc    DWORD PTR [eax]
  4452d0:	(bad)  
  4452d1:	(bad)  
  4452d2:	inc    DWORD PTR [eax]
  4452d4:	(bad)  
  4452d5:	(bad)  
  4452d6:	inc    DWORD PTR [eax]
  4452d8:	(bad)  
  4452d9:	(bad)  
  4452da:	inc    DWORD PTR [eax]
  4452dc:	(bad)  
  4452dd:	(bad)  
  4452de:	inc    DWORD PTR [eax]
  4452e0:	(bad)  
  4452e1:	(bad)  
  4452e2:	inc    DWORD PTR [eax]
  4452e4:	(bad)  
  4452e5:	(bad)  
  4452e6:	inc    DWORD PTR [eax]
  4452e8:	(bad)  
  4452e9:	(bad)  
  4452ea:	inc    DWORD PTR [eax]
  4452ec:	(bad)  
  4452ed:	(bad)  
  4452ee:	inc    DWORD PTR [eax]
  4452f0:	inc    DWORD PTR [eax]
  4452f2:	add    BYTE PTR [eax],al
  4452f4:	add    BYTE PTR [eax],al
  4452f6:	add    edi,edi
  4452f8:	inc    BYTE PTR [eax]
  4452fa:	add    BYTE PTR [eax],al
  4452fc:	add    BYTE PTR [eax],al
  4452fe:	add    bh,bh
  445300:	cld    
  445301:	add    BYTE PTR [eax],al
  445303:	add    BYTE PTR [eax],al
  445305:	add    BYTE PTR [eax],al
  445307:	jg     0x445301
  445309:	add    BYTE PTR [eax],al
  44530b:	add    BYTE PTR [eax],al
  44530d:	add    BYTE PTR [eax],al
  44530f:	jg     0x445301
  445311:	add    BYTE PTR [eax],al
  445313:	add    BYTE PTR [eax],al
  445315:	add    BYTE PTR [eax],al
  445317:	pop    ds
  445318:	lock add BYTE PTR [eax],al
  44531b:	add    BYTE PTR [eax],al
  44531d:	add    BYTE PTR [eax],al
  44531f:	pop    ds
  445320:	lock add BYTE PTR [eax],al
  445323:	add    BYTE PTR [eax],al
  445325:	add    BYTE PTR [eax],al
  445327:	pop    ds
  445328:	clc    
  445329:	add    BYTE PTR [eax],al
  44532b:	add    BYTE PTR [eax],al
  44532d:	add    BYTE PTR [eax],al
  44532f:	jg     0x44532d
  445331:	add    BYTE PTR [eax],al
  445333:	add    BYTE PTR [eax],al
  445335:	add    BYTE PTR [eax],al
  445337:	jg     0x445335
  445339:	add    BYTE PTR [eax],al
  44533b:	add    BYTE PTR [eax],al
  44533d:	add    BYTE PTR [eax],al
  44533f:	(bad)  
  445340:	call   DWORD PTR [eax]
  445342:	add    BYTE PTR [eax],al
  445344:	add    BYTE PTR [eax],al
  445346:	and    edi,edi
  445348:	jmp    DWORD PTR [eax+0x0]
  44534b:	add    BYTE PTR [eax],al
  44534d:	add    BYTE PTR [edi],cl
  44534f:	(bad)  
  445350:	inc    eax
  445352:	add    BYTE PTR [eax],al
  445354:	add    BYTE PTR [eax],al
  445356:	ud0    edi,edi
  445359:	add    BYTE PTR [eax],0x0
  44535c:	add    BYTE PTR [eax],al
  44535e:	add    edi,edi
  445360:	inc    BYTE PTR [eax]
  445362:	add    BYTE PTR [eax],al
  445364:	add    BYTE PTR [eax],al
  445366:	add    edi,edi
  445368:	inc    BYTE PTR [eax]
  44536a:	add    BYTE PTR [eax],al
  44536c:	add    BYTE PTR [eax],al
  44536e:	add    edi,edi
  445370:	inc    BYTE PTR [eax]
  445372:	add    BYTE PTR [eax],al
  445374:	add    BYTE PTR [eax],al
  445376:	add    edi,edi
  445378:	inc    BYTE PTR [eax]
  44537a:	add    BYTE PTR [eax],al
  44537c:	add    BYTE PTR [eax],al
  44537e:	add    edi,edi
  445380:	inc    BYTE PTR [eax]
  445382:	add    BYTE PTR [eax],al
  445384:	add    BYTE PTR [eax],al
  445386:	add    edi,edi
  445388:	inc    BYTE PTR [eax]
  44538a:	add    BYTE PTR [eax],al
  44538c:	add    BYTE PTR [eax],al
  44538e:	add    edi,edi
  445390:	inc    BYTE PTR [eax]
  445392:	add    BYTE PTR [eax],al
  445394:	add    BYTE PTR [eax],al
  445396:	add    edi,edi
  445398:	inc    BYTE PTR [eax]
  44539a:	add    BYTE PTR [eax],al
  44539c:	add    BYTE PTR [eax],al
  44539e:	add    edi,edi
  4453a0:	inc    DWORD PTR [eax]
  4453a2:	add    BYTE PTR [eax],al
  4453a4:	add    BYTE PTR [eax],al
  4453a6:	add    edi,edi
  4453a8:	inc    DWORD PTR [eax+0x0]
  4453ae:	add    edi,edi
  4453b0:	inc    eax
  4453b2:	add    BYTE PTR [eax],al
  4453b4:	add    BYTE PTR [eax],al
  4453b6:	pop    es
  4453b7:	(bad)  
  4453b8:	inc    eax
  4453ba:	add    BYTE PTR [eax],al
  4453bc:	add    BYTE PTR [eax],al
  4453be:	pop    es
  4453bf:	(bad)  
  4453c0:	jmp    eax
  4453c2:	add    BYTE PTR [eax],al
  4453c4:	add    BYTE PTR [eax],al
  4453c6:	ud0    edi,edi
  4453c9:	loopne 0x4453cb
  4453cb:	add    BYTE PTR [eax],al
  4453cd:	add    BYTE PTR [edi],bl
  4453cf:	(bad)  
  4453d0:	(bad)  
  4453d1:	clc    
  4453d2:	add    BYTE PTR [eax],al
  4453d4:	add    BYTE PTR [eax],al
  4453d6:	das    
  4453d7:	(bad)  
  4453d8:	(bad)  
  4453d9:	cld    
  4453da:	add    BYTE PTR [eax],al
  4453dc:	add    BYTE PTR [eax],al
  4453de:	dec    edi
  4453df:	(bad)  
  4453e0:	(bad)  
  4453e1:	cli    
  4453e2:	add    BYTE PTR [eax],al
  4453e4:	add    BYTE PTR [eax],al
  4453e6:	lahf   
  4453e7:	(bad)  
  4453e8:	(bad)  
  4453e9:	clc    
  4453ea:	add    BYTE PTR [eax],al
  4453ec:	add    BYTE PTR [eax],al
  4453ee:	aas    
  4453ef:	(bad)  
  4453f0:	(bad)  
  4453f1:	std    
  4453f2:	add    BYTE PTR [eax],0x0
  4453f5:	add    edi,edi
  4453f7:	(bad)  
  4453f8:	(bad)  
  4453f9:	inc    BYTE PTR [eax]
  4453fb:	add    BYTE PTR [eax],al
  4453fd:	push   cs
  4453fe:	(bad)  
  4453ff:	(bad)  
  445400:	(bad)  
  445401:	inc    BYTE PTR [eax]
  445403:	add    BYTE PTR [eax],al
  445405:	cmp    edi,edi
  445407:	(bad)  
  445408:	(bad)  
  445409:	cld    
  44540a:	or     al,0x0
  44540c:	add    bh,bh
  44540e:	(bad)  
  44540f:	(bad)  
  445410:	(bad)  
  445411:	cld    
  445412:	add    BYTE PTR ds:[ecx],al
  445415:	(bad)  
  445416:	(bad)  
  445417:	(bad)  
  445418:	(bad)  
  445419:	cld    
  44541a:	cmp    al,0x0
  44541c:	add    bh,bh
  44541e:	(bad)  
  44541f:	(bad)  
  445420:	(bad)  
  445421:	cld    
  445422:	cmp    BYTE PTR [eax],al
  445424:	add    BYTE PTR [edi-0x1],bh
  445427:	(bad)  
  445428:	(bad)  
  445429:	cld    
  44542a:	xor    BYTE PTR [eax],al
  44542c:	add    BYTE PTR [eax],dl
  44542e:	(bad)  
  44542f:	(bad)  
  445430:	(bad)  
  445431:	clc    
  445432:	add    BYTE PTR [eax],al
  445434:	add    BYTE PTR [eax],dl
  445436:	jg     0x445437
  445438:	(bad)  
  445439:	clc    
  44543a:	add    BYTE PTR [eax],al
  44543c:	add    BYTE PTR [eax],al
  44543e:	aas    
  44543f:	(bad)  
  445440:	(bad)  
  445441:	clc    
  445442:	add    BYTE PTR [eax],al
  445444:	add    BYTE PTR [eax],al
  445446:	aas    
  445447:	(bad)  
  445448:	(bad)  
  445449:	clc    
  44544a:	add    BYTE PTR [eax],al
  44544c:	add    BYTE PTR [eax],al
  44544e:	aas    
  44544f:	(bad)  
  445450:	(bad)  
  445451:	clc    
  445452:	add    BYTE PTR [eax],al
  445454:	add    BYTE PTR [eax],al
  445456:	aas    
  445457:	(bad)  
  445458:	(bad)  
  445459:	clc    
  44545a:	add    BYTE PTR [eax],al
  44545c:	add    BYTE PTR [eax],al
  44545e:	aas    
  44545f:	(bad)  
  445460:	(bad)  
  445461:	clc    
  445462:	add    BYTE PTR [eax],al
  445464:	add    BYTE PTR [eax],al
  445466:	aas    
  445467:	(bad)  
  445468:	(bad)  
  445469:	clc    
  44546a:	add    BYTE PTR [eax],al
  44546c:	add    BYTE PTR [eax],al
  44546e:	aas    
  44546f:	(bad)  
  445470:	(bad)  
  445471:	clc    
  445472:	add    BYTE PTR [eax],al
  445474:	add    BYTE PTR [eax],al
  445476:	jg     0x445477
  445478:	(bad)  
  445479:	cld    
  44547a:	add    BYTE PTR [eax],al
  44547c:	add    BYTE PTR [eax],al
  44547e:	(bad)  
  44547f:	(bad)  
  445480:	(bad)  
  445481:	inc    DWORD PTR [eax]
  445483:	add    BYTE PTR [eax],al
  445485:	add    edi,edi
  445487:	(bad)  
  445488:	(bad)  
  445489:	inc    DWORD PTR [eax]
  44548b:	add    BYTE PTR [eax],al
  44548d:	add    edi,edi
  44548f:	(bad)  
  445490:	(bad)  
  445491:	inc    DWORD PTR [eax]
  445493:	add    BYTE PTR [eax],al
  445495:	add    edi,edi
  445497:	(bad)  
  445498:	(bad)  
  445499:	inc    DWORD PTR [eax]
  44549b:	add    BYTE PTR [eax],al
  44549d:	add    edi,edi
  44549f:	(bad)  
  4454a0:	(bad)  
  4454a1:	inc    DWORD PTR [eax]
  4454a3:	add    BYTE PTR [eax],al
  4454a5:	add    edi,edi
  4454a7:	(bad)  
  4454a8:	(bad)  
  4454a9:	inc    DWORD PTR [eax]
  4454ab:	add    BYTE PTR [eax],al
  4454ad:	add    edi,edi
  4454af:	(bad)  
  4454b0:	(bad)  
  4454b1:	inc    DWORD PTR [eax-0xf90000]
  4454b7:	(bad)  
  4454b8:	(bad)  
  4454b9:	inc    DWORD PTR [eax-0xf90000]
  4454bf:	(bad)  
  4454c0:	(bad)  
  4454c1:	inc    eax
  4454c3:	add    BYTE PTR [eax],al
  4454c5:	ud0    edi,edi
  4454c8:	(bad)  
  4454c9:	jmp    eax
  4454cb:	add    BYTE PTR [eax],al
  4454cd:	pop    ds
  4454ce:	(bad)  
  4454cf:	(bad)  
  4454d0:	(bad)  
  4454d1:	push   eax
  4454d3:	add    BYTE PTR [eax],al
  4454d5:	aas    
  4454d6:	(bad)  
  4454d7:	(bad)  
  4454d8:	(bad)  
  4454d9:	(bad)  
  4454da:	cld    
  4454db:	add    BYTE PTR [eax],al
  4454dd:	(bad)  
  4454de:	(bad)  
  4454df:	(bad)  
  4454e0:	(bad)  
  4454e1:	(bad)  
  4454e2:	inc    DWORD PTR [eax]
  4454e4:	add    edi,edi
  4454e6:	(bad)  
  4454e7:	(bad)  
  4454e8:	(bad)  
  4454e9:	(bad)  
  4454ea:	(bad)  
  4454eb:	(bad)  
  4454ec:	(bad)  
  4454ed:	(bad)  
  4454ee:	(bad)  
  4454ef:	jmp    FWORD PTR [eax]
  4454f1:	add    BYTE PTR [eax],al
  4454f3:	add    BYTE PTR [eax],dh
  4454f5:	add    BYTE PTR [eax],al
  4454f7:	add    BYTE PTR [eax+0x0],ah
  4454fa:	add    BYTE PTR [eax],al
  4454fc:	add    DWORD PTR [eax],eax
  4454fe:	and    BYTE PTR [eax],al
  445500:	add    BYTE PTR [eax],al
  445502:	add    BYTE PTR [eax],al
  445504:	and    BYTE PTR ds:0x0,0x0
	...
  445517:	add    bh,bh
  445519:	(bad)  
  44551a:	inc    DWORD PTR [eax]
  44551c:	(bad)  
  44551d:	(bad)  
  44551e:	inc    DWORD PTR [eax]
  445520:	(bad)  
  445521:	(bad)  
  445522:	inc    DWORD PTR [eax]
	...
  44552c:	add    eax,0x4e010505
  445531:	dec    esi
  445532:	dec    esi
  445533:	add    bh,BYTE PTR ds:0x3e063d3d
  445539:	ds ds or al,0x42
  44553d:	inc    edx
  44553e:	inc    edx
  44553f:	adc    al,BYTE PTR [edx+0x42]
  445542:	inc    edx
  445543:	sbb    BYTE PTR [edx],bh
  445545:	cmp    bh,BYTE PTR [edx]
  445547:	and    DWORD PTR [esp+edi*1],edi
  44554a:	cmp    al,0x28
  44554c:	cmp    eax,0x3d2f3a3d
  445551:	cmp    eax,0x3e3e3436
  445556:	xor    BYTE PTR ds:0x3e443636,dh
  44555c:	sub    BYTE PTR [eax],ch
  44555e:	jnp    0x4455b7
  445560:	push   ds
  445561:	push   ds
  445562:	popf   
  445563:	jae    0x44557e
  445565:	sbb    DWORD PTR [esi-0x4aeaea79],ebp
  44556b:	cwde   
  44556c:	adc    DWORD PTR [ecx],edx
  44556e:	mov    bh,0xa4
  445570:	adc    BYTE PTR [eax],dl
  445572:	mov    bh,0xaf
  445574:	pfacc  mm7,QWORD PTR [eax-0x48efef50]
  44557c:	adc    BYTE PTR [eax],dl
  44557e:	mov    dh,0xa3
  445580:	adc    al,0x14
  445582:	mov    dl,0x97
  445584:	sbb    BYTE PTR [eax],bl
  445586:	stos   DWORD PTR es:[edi],eax
  445587:	xchg   BYTE PTR [esi],bl
  445589:	push   ds
  44558a:	pushf  
  44558b:	jb     0x4455b6
  44558d:	sub    DWORD PTR [edx+0x56],edi
  445590:	ss ss inc ebp
  445593:	ds ds xor BYTE PTR ds:0x33363d3d,dh
  44559c:	cmp    eax,0x3c2e3b3d
  4455a1:	cmp    al,0x3c
  4455a3:	sub    BYTE PTR [edx],bh
  4455a5:	cmp    bh,BYTE PTR [edx]
  4455a7:	and    BYTE PTR [ebx+0x43],al
  4455aa:	inc    ebx
  4455ab:	sbb    BYTE PTR [ecx+0x41],al
  4455ae:	inc    ecx
  4455af:	adc    bh,BYTE PTR [esi]
  4455b1:	ds or  edi,DWORD PTR ds:[esi]
  4455b5:	ds ds push es
  4455b8:	dec    ebx
  4455b9:	dec    ebx
  4455ba:	dec    ebx
  4455bb:	add    al,BYTE PTR [ecx]
  4455bd:	add    DWORD PTR [ecx],eax
  4455bf:	add    DWORD PTR [eax],eax
  4455c1:	add    BYTE PTR [eax],al
  4455c3:	add    BYTE PTR [eax],al
  4455c5:	add    BYTE PTR [eax],al
  4455c7:	add    bh,bh
  4455c9:	(bad)  
  4455ca:	inc    DWORD PTR [eax]
  4455cc:	(bad)  
  4455cd:	(bad)  
  4455ce:	inc    DWORD PTR [eax]
  4455d0:	(bad)  
  4455d1:	(bad)  
  4455d2:	inc    DWORD PTR [eax]
  4455d4:	(bad)  
  4455d5:	(bad)  
  4455d6:	inc    DWORD PTR [eax]
  4455d8:	(bad)  
  4455d9:	(bad)  
  4455da:	inc    DWORD PTR [eax]
  4455dc:	(bad)  
  4455dd:	(bad)  
  4455de:	inc    DWORD PTR [eax]
  4455e0:	(bad)  
  4455e1:	(bad)  
  4455e2:	inc    DWORD PTR [eax]
  4455e4:	add    BYTE PTR [eax],al
  4455e6:	add    BYTE PTR [eax],al
  4455e8:	add    DWORD PTR [ecx],eax
  4455ea:	add    DWORD PTR [ecx],eax
  4455ec:	xor    BYTE PTR [eax],dh
  4455ee:	xor    BYTE PTR ds:0xe3e3e3e,al
  4455f4:	cmp    eax,0x3d1b3d3d
  4455f9:	cmp    eax,0x3a3a293d
  4455fe:	cmp    dh,BYTE PTR [esi]
  445600:	cmp    eax,0x3b423d3d
  445605:	cmp    edi,DWORD PTR [ebx]
  445607:	dec    ebp
  445608:	cmp    eax,0x3151313d
  44560d:	xor    DWORD PTR [eax+0x66],ebx
  445610:	sbb    bl,BYTE PTR [edx]
  445612:	test   eax,0xc30e0e98
  445617:	ret    0x808
  44561a:	rcr    ebp,0x4
  44561d:	add    al,0xbe
  44561f:	icebp  
  445620:	add    DWORD PTR [ecx],eax
  445622:	mov    ah,0xf6
  445624:	add    DWORD PTR [ecx],eax
  445626:	lods   al,BYTE PTR ds:[esi]
  445627:	clc    
  445628:	add    BYTE PTR [eax],al
  44562a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44562b:	cli    
  44562c:	add    BYTE PTR [eax],al
  44562e:	lahf   
  44562f:	sti    
  445630:	add    BYTE PTR [eax],al
  445632:	popf   
  445633:	std    
  445634:	add    BYTE PTR [eax],al
  445636:	pushf  
  445637:	std    
  445638:	add    BYTE PTR [eax],al
  44563a:	popf   
  44563b:	cld    
  44563c:	add    BYTE PTR [eax],al
  44563e:	sahf   
  44563f:	sti    
  445640:	add    BYTE PTR [eax],al
  445642:	mov    ds:0xab0101fa,eax
  445647:	clc    
  445648:	add    DWORD PTR [ecx],eax
  44564a:	mov    bl,0xf6
  44564c:	add    eax,DWORD PTR [ebx]
  44564e:	mov    edx,0xbc0707f0
  445653:	fmul   QWORD PTR [esi]
  445655:	push   cs
  445656:	mov    esi,0xa41b1bc2
  44565b:	xchg   edi,eax
  44565c:	xor    dh,BYTE PTR [edx]
  44565e:	push   esp
  44565f:	fs cmp eax,0x3b51323d
  445665:	cmp    edi,DWORD PTR [ebx]
  445667:	dec    ebp
  445668:	cmp    eax,0x3a423d3d
  44566d:	cmp    bh,BYTE PTR [edx]
  44566f:	ss cmp eax,0x3d283d3d
  445675:	cmp    eax,0x3e3e1a3d
  44567a:	ds or  eax,0x52e2e2e
  445680:	add    BYTE PTR [eax],al
  445682:	add    BYTE PTR [ecx],al
  445684:	add    BYTE PTR [eax],al
  445686:	add    BYTE PTR [eax],al
  445688:	(bad)  
  445689:	(bad)  
  44568a:	inc    DWORD PTR [eax]
  44568c:	(bad)  
  44568d:	(bad)  
  44568e:	inc    DWORD PTR [eax]
  445690:	(bad)  
  445691:	(bad)  
  445692:	inc    DWORD PTR [eax]
  445694:	(bad)  
  445695:	(bad)  
  445696:	inc    DWORD PTR [eax]
  445698:	(bad)  
  445699:	(bad)  
  44569a:	inc    DWORD PTR [eax]
  44569c:	(bad)  
  44569d:	(bad)  
  44569e:	inc    DWORD PTR [eax]
  4456a0:	(bad)  
  4456a1:	(bad)  
  4456a2:	inc    DWORD PTR [eax]
  4456a4:	add    eax,DWORD PTR [ebx]
  4456a6:	add    eax,DWORD PTR [eax]
  4456a8:	dec    esi
  4456a9:	dec    esi
  4456aa:	dec    esi
  4456ab:	add    edi,DWORD PTR [edx]
  4456ad:	cmp    bh,BYTE PTR [edx]
  4456af:	(bad)  
  4456b1:	cmp    al,0x3c
  4456b3:	and    eax,0x3f3c3c3c
  4456b8:	cmp    edi,DWORD PTR [ebx]
  4456ba:	cmp    edx,DWORD PTR [ebx+0x38]
  4456bd:	cmp    BYTE PTR [eax],bh
  4456bf:	popa   
  4456c0:	cmp    al,0x3c
  4456c2:	xor    esp,DWORD PTR [esi+0x2f]
  4456c5:	das    
  4456c6:	pop    esp
  4456c7:	jge    0x4456db
  4456c9:	adc    dh,BYTE PTR [edi-0x36fcfc45]
  4456cf:	lock add DWORD PTR [ecx],eax
  4456d2:	mov    cl,0xfb
  4456d4:	add    BYTE PTR [eax],al
  4456d6:	fwait
  4456d7:	inc    BYTE PTR [eax]
  4456d9:	add    BYTE PTR [ebx-0x6dffff01],dl
  4456df:	inc    DWORD PTR [eax]
  4456e1:	add    BYTE PTR [ebx-0x68ffff01],dl
  4456e7:	inc    DWORD PTR [eax]
  4456e9:	add    BYTE PTR [ebp-0x5dffff01],bl
  4456ef:	inc    DWORD PTR [eax]
  4456f1:	add    BYTE PTR [ebx-0x5affff01],ah
  4456f7:	inc    DWORD PTR [eax]
  4456f9:	add    BYTE PTR [ebx-0x5dffff01],ah
  4456ff:	inc    DWORD PTR [eax]
  445701:	add    BYTE PTR [ebp-0x69ffff01],bl
  445707:	inc    DWORD PTR [eax]
  445709:	add    BYTE PTR [ebx-0x6effff01],dl
  44570f:	inc    DWORD PTR [eax]
  445711:	add    BYTE PTR [edx-0x65ffff01],dl
  445717:	inc    BYTE PTR [ecx]
  445719:	add    DWORD PTR [ebp-0x3dfcfc05],ebp
  44571f:	out    dx,eax
  445720:	adc    edx,DWORD PTR [ebx]
  445722:	mov    bl,0xba
  445724:	xor    DWORD PTR [ecx],esi
  445726:	pop    ecx
  445727:	jl     0x445765
  445729:	cmp    al,0x35
  44572b:	data16 cmp BYTE PTR [eax],bh
  44572e:	cmp    BYTE PTR [eax+0x3b],ah
  445731:	cmp    edi,DWORD PTR [ebx]
  445733:	push   ebx
  445734:	cmp    al,0x3c
  445736:	cmp    al,0x3e
  445738:	cmp    al,0x3c
  44573a:	cmp    al,0x23
  44573c:	cmp    edi,DWORD PTR [ebx]
  44573e:	cmp    ecx,DWORD PTR [esi]
  445740:	dec    esp
  445741:	dec    esp
  445742:	dec    esp
  445743:	add    eax,DWORD PTR [ebx]
  445745:	add    eax,DWORD PTR [ebx]
  445747:	add    bh,bh
  445749:	(bad)  
  44574a:	inc    DWORD PTR [eax]
  44574c:	(bad)  
  44574d:	(bad)  
  44574e:	inc    DWORD PTR [eax]
  445750:	(bad)  
  445751:	(bad)  
  445752:	inc    DWORD PTR [eax]
  445754:	(bad)  
  445755:	(bad)  
  445756:	inc    DWORD PTR [eax]
  445758:	(bad)  
  445759:	(bad)  
  44575a:	inc    DWORD PTR [eax]
  44575c:	(bad)  
  44575d:	(bad)  
  44575e:	inc    DWORD PTR [eax]
  445760:	(bad)  
  445761:	(bad)  
  445762:	inc    DWORD PTR [eax]
  445764:	add    al,BYTE PTR [edx]
  445766:	add    al,BYTE PTR [ecx]
  445768:	xor    al,0x34
  44576a:	xor    al,0x5
  44576c:	cmp    al,0x3c
  44576e:	cmp    al,0x17
  445770:	cmp    bh,BYTE PTR [edx]
  445772:	cmp    bh,BYTE PTR [ecx]
  445774:	cmp    al,0x3c
  445776:	cmp    al,0x5b
  445778:	cmp    al,0x3c
  44577a:	cmp    ebp,DWORD PTR [esi+0x3c]
  44577d:	cmp    al,0x35
  44577f:	je     0x4457ad
  445781:	sub    al,0x6f
  445783:	xchg   ebp,eax
  445784:	add    eax,0xe8cd05
  445789:	add    BYTE PTR [esi-0x72ffff02],ah
  44578f:	inc    DWORD PTR [eax]
  445791:	add    BYTE PTR [edx-0x60ffff01],dl
  445797:	inc    DWORD PTR [eax]
  445799:	add    BYTE PTR [ebp-0x49ffff01],ch
  44579f:	inc    DWORD PTR [eax]
  4457a1:	add    BYTE PTR [edi+edi*8-0x400000],bh
  4457a8:	add    BYTE PTR [eax],al
  4457aa:	ret    
  4457ab:	inc    DWORD PTR [eax]
  4457ad:	add    ah,al
  4457af:	inc    DWORD PTR [eax]
  4457b1:	add    ah,al
  4457b3:	inc    DWORD PTR [eax]
  4457b5:	add    ah,al
  4457b7:	inc    DWORD PTR [eax]
  4457b9:	add    ah,al
  4457bb:	inc    DWORD PTR [eax]
  4457bd:	add    ah,al
  4457bf:	inc    DWORD PTR [eax]
  4457c1:	add    ah,al
  4457c3:	inc    DWORD PTR [eax]
  4457c5:	add    al,al
  4457c7:	inc    DWORD PTR [eax]
  4457c9:	add    BYTE PTR [edi+edi*8-0x490000],bh
  4457d0:	add    BYTE PTR [eax],al
  4457d2:	lods   eax,DWORD PTR ds:[esi]
  4457d3:	inc    DWORD PTR [eax]
  4457d5:	add    BYTE PTR [ecx-0x6bffff01],ah
  4457db:	inc    DWORD PTR [eax]
  4457dd:	add    BYTE PTR [edi+edi*8-0x15d0000],cl
  4457e4:	add    eax,0x2ce6c905
  4457e9:	sub    al,0x6a
  4457eb:	xchg   ebx,eax
  4457ec:	cmp    al,0x3c
  4457ee:	aaa    
  4457ef:	jne    0x44582d
  4457f1:	cmp    al,0x3b
  4457f3:	ins    DWORD PTR es:[edi],dx
  4457f4:	cmp    al,0x3c
  4457f6:	cmp    al,0x59
  4457f8:	cmp    bh,BYTE PTR [edx]
  4457fa:	cmp    dh,BYTE PTR [edi]
  4457fc:	cmp    al,0x3c
  4457fe:	cmp    al,0x16
  445800:	xor    dh,BYTE PTR [edx]
  445802:	xor    al,BYTE PTR ds:0x1020202
  445808:	(bad)  
  445809:	(bad)  
  44580a:	inc    DWORD PTR [eax]
  44580c:	(bad)  
  44580d:	(bad)  
  44580e:	inc    DWORD PTR [eax]
  445810:	(bad)  
  445811:	(bad)  
  445812:	inc    DWORD PTR [eax]
  445814:	(bad)  
  445815:	(bad)  
  445816:	inc    DWORD PTR [eax]
  445818:	(bad)  
  445819:	(bad)  
  44581a:	inc    DWORD PTR [eax]
  44581c:	(bad)  
  44581d:	(bad)  
  44581e:	inc    DWORD PTR [eax]
  445820:	(bad)  
  445821:	(bad)  
  445822:	inc    DWORD PTR [eax]
  445824:	add    al,BYTE PTR [edx]
  445826:	add    al,BYTE PTR [ecx]
  445828:	aaa    
  445829:	aaa    
  44582a:	aaa    
  44582b:	add    eax,0x163c3c3c
  445830:	cmp    bh,BYTE PTR [edx]
  445832:	cmp    bh,BYTE PTR [eax]
  445834:	cmp    al,0x3c
  445836:	cmp    al,0x59
  445838:	cmp    eax,0x3069363d
  44583d:	xor    BYTE PTR [ebp-0x7b],bl
  445840:	or     DWORD PTR [ecx],ecx
  445842:	rcr    cl,0x0
  445845:	add    BYTE PTR [edi-0x6bffff01],bl
  44584b:	inc    DWORD PTR [eax]
  44584d:	add    BYTE PTR [edi+edi*8-0x440000],ch
  445854:	add    BYTE PTR [eax],al
  445856:	sar    edi,0x0
  445859:	add    al,al
  44585b:	inc    DWORD PTR [eax]
  44585d:	add    BYTE PTR [edi-0x42ffff01],bh
  445863:	inc    DWORD PTR [eax]
  445865:	add    BYTE PTR [edx-0x46ffff01],bh
  44586b:	inc    DWORD PTR [eax]
  44586d:	add    BYTE PTR [ecx-0x47ffff01],bh
  445873:	inc    DWORD PTR [eax]
  445875:	add    BYTE PTR [eax-0x47ffff01],bh
  44587b:	inc    DWORD PTR [eax]
  44587d:	add    BYTE PTR [ecx-0x46ffff01],bh
  445883:	inc    DWORD PTR [eax]
  445885:	add    BYTE PTR [edx-0x42ffff01],bh
  44588b:	inc    DWORD PTR [eax]
  44588d:	add    BYTE PTR [edi-0x3effff01],bh
  445893:	inc    DWORD PTR [eax]
  445895:	add    dl,al
  445897:	inc    DWORD PTR [eax]
  445899:	add    BYTE PTR [edi+edi*8-0x530000],bh
  4458a0:	add    BYTE PTR [eax],al
  4458a2:	xchg   esp,eax
  4458a3:	inc    DWORD PTR [eax]
  4458a5:	add    BYTE PTR [ebx-0x40f6f601],bl
  4458ab:	fdiv   DWORD PTR [ecx]
  4458ad:	xor    DWORD PTR [edi-0x7e],edx
  4458b0:	cmp    eax,0x3c69373d
  4458b5:	cmp    al,0x3c
  4458b7:	push   edi
  4458b8:	cmp    bh,BYTE PTR [edx]
  4458ba:	cmp    dh,BYTE PTR [esi]
  4458bc:	cmp    al,0x3c
  4458be:	cmp    al,0x15
  4458c0:	xor    eax,0x2053535
  4458c5:	add    al,BYTE PTR [edx]
  4458c7:	add    edi,edi
  4458c9:	(bad)  
  4458ca:	inc    DWORD PTR [eax]
  4458cc:	(bad)  
  4458cd:	(bad)  
  4458ce:	inc    DWORD PTR [eax]
  4458d0:	(bad)  
  4458d1:	(bad)  
  4458d2:	inc    DWORD PTR [eax]
  4458d4:	(bad)  
  4458d5:	(bad)  
  4458d6:	inc    DWORD PTR [eax]
  4458d8:	(bad)  
  4458d9:	(bad)  
  4458da:	inc    DWORD PTR [eax]
  4458dc:	(bad)  
  4458dd:	(bad)  
  4458de:	inc    DWORD PTR [eax]
  4458e0:	(bad)  
  4458e1:	(bad)  
  4458e2:	inc    DWORD PTR [eax]
  4458e4:	add    eax,DWORD PTR [ebx]
  4458e6:	add    eax,DWORD PTR [eax]
  4458e8:	dec    ecx
  4458e9:	dec    ecx
  4458ea:	dec    ecx
  4458eb:	add    edi,DWORD PTR [edx]
  4458ed:	cmp    bh,BYTE PTR [edx]
  4458ef:	push   cs
  4458f0:	cmp    edi,DWORD PTR [ebx]
  4458f2:	cmp    esp,DWORD PTR [edx]
  4458f4:	cmp    al,0x3c
  4458f6:	cmp    edi,DWORD PTR [ebx]
  4458f8:	ds ds ss dec ecx
  4458fc:	sub    BYTE PTR [eax],ch
  4458fe:	push   0xffffff82
  445900:	add    BYTE PTR [eax],al
  445902:	leave  
  445903:	cld    
  445904:	add    BYTE PTR [eax],al
  445906:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  445907:	inc    DWORD PTR [eax]
  445909:	add    BYTE PTR [ebp-0x43ffff01],bh
  44590f:	inc    DWORD PTR [eax]
  445911:	add    BYTE PTR [edi-0x4affff01],dh
  445917:	inc    DWORD PTR [eax]
  445919:	add    BYTE PTR [ebx-0x4dffff01],dh
  44591f:	inc    DWORD PTR [eax]
  445921:	add    BYTE PTR [ecx-0x50ffff01],dh
  445927:	inc    DWORD PTR [eax]
  445929:	add    BYTE PTR [edi-0x52ffff01],ch
  44592f:	inc    DWORD PTR [eax]
  445931:	add    BYTE PTR [esi-0x51ffff01],ch
  445937:	inc    DWORD PTR [eax]
  445939:	add    BYTE PTR [esi-0x51ffff01],ch
  44593f:	inc    DWORD PTR [eax]
  445941:	add    BYTE PTR [edi-0x4fffff01],ch
  445947:	inc    DWORD PTR [eax]
  445949:	add    BYTE PTR [edx-0x4cffff01],dh
  44594f:	inc    DWORD PTR [eax]
  445951:	add    BYTE PTR [ebx-0x4affff01],dh
  445957:	inc    DWORD PTR [eax]
  445959:	add    BYTE PTR [edi-0x43ffff01],dh
  44595f:	inc    DWORD PTR [eax]
  445961:	add    BYTE PTR [esi-0x5dffff01],bh
  445967:	inc    DWORD PTR [eax]
  445969:	add    ch,al
  44596b:	std    
  44596c:	sub    ch,BYTE PTR [edx]
  44596e:	push   0x3a3d3d7e
  445973:	dec    ecx
  445974:	cmp    al,0x3c
  445976:	cmp    edi,DWORD PTR [ecx]
  445978:	cmp    edi,DWORD PTR [ebx]
  44597a:	cmp    esp,DWORD PTR [eax]
  44597c:	cmp    edi,DWORD PTR [ebx]
  44597e:	cmp    ecx,DWORD PTR ds:0x3474747
  445984:	add    eax,DWORD PTR [ebx]
  445986:	add    eax,DWORD PTR [eax]
  445988:	(bad)  
  445989:	(bad)  
  44598a:	inc    DWORD PTR [eax]
  44598c:	(bad)  
  44598d:	(bad)  
  44598e:	inc    DWORD PTR [eax]
  445990:	(bad)  
  445991:	(bad)  
  445992:	inc    DWORD PTR [eax]
  445994:	(bad)  
  445995:	(bad)  
  445996:	inc    DWORD PTR [eax]
  445998:	(bad)  
  445999:	(bad)  
  44599a:	inc    DWORD PTR [eax]
  44599c:	(bad)  
  44599d:	(bad)  
  44599e:	inc    DWORD PTR [eax]
  4459a0:	(bad)  
  4459a1:	(bad)  
  4459a2:	inc    DWORD PTR [eax]
  4459a4:	add    BYTE PTR [eax],al
  4459a6:	add    BYTE PTR [eax],al
  4459a8:	add    BYTE PTR [eax],al
  4459aa:	add    BYTE PTR [ecx],al
  4459ac:	sub    al,0x2c
  4459ae:	sub    al,0x5
  4459b0:	inc    ebx
  4459b1:	inc    ebx
  4459b2:	inc    ebx
  4459b3:	or     edi,DWORD PTR [edi]
  4459b5:	aas    
  4459b6:	ds pop ss
  4459b8:	cmp    eax,0x231d3e3d
  4459bd:	and    edi,DWORD PTR [esi+eiz*2+0x0]
  4459c1:	add    dl,dl
  4459c3:	inc    DWORD PTR [eax]
  4459c5:	add    BYTE PTR [edi+edi*8-0x4e0000],bh
  4459cc:	add    BYTE PTR [eax],al
  4459ce:	lods   eax,DWORD PTR ds:[esi]
  4459cf:	inc    DWORD PTR [eax]
  4459d1:	add    BYTE PTR [ebp-0x53ffff01],ch
  4459d7:	inc    DWORD PTR [eax]
  4459d9:	add    BYTE PTR [edx-0x56ffff01],ch
  4459df:	inc    DWORD PTR [eax]
  4459e1:	add    BYTE PTR [edi-0x5affff01],ah
  4459e7:	inc    DWORD PTR [eax]
  4459e9:	add    BYTE PTR [ebx-0x5effff01],ah
  4459ef:	inc    DWORD PTR [eax]
  4459f1:	add    BYTE PTR [ecx-0x5effff01],ah
  4459f7:	inc    DWORD PTR [eax]
  4459f9:	add    BYTE PTR [ecx-0x5cffff01],ah
  4459ff:	inc    DWORD PTR [eax]
  445a01:	add    BYTE PTR [edi+edi*8-0x5a0000],ah
  445a08:	add    BYTE PTR [eax],al
  445a0a:	test   al,0xff
  445a0c:	add    BYTE PTR [eax],al
  445a0e:	test   eax,0xaa0000ff
  445a13:	inc    DWORD PTR [eax]
  445a15:	add    BYTE PTR [edi+edi*8-0x530000],ch
  445a1c:	add    BYTE PTR [eax],al
  445a1e:	lods   eax,DWORD PTR ds:[esi]
  445a1f:	inc    DWORD PTR [eax]
  445a21:	add    BYTE PTR [edx-0x43ffff01],dh
  445a27:	inc    DWORD PTR [eax]
  445a29:	add    bl,dl
  445a2b:	call   FWORD PTR [esi]
  445a2d:	push   ds
  445a2e:	mov    fs,WORD PTR [edi+0x3b]
  445a31:	cmp    eax,DWORD PTR [ebx+0x1f]
  445a34:	aas    
  445a35:	aas    
  445a36:	cmp    eax,0x42424216
  445a3b:	or     ebp,DWORD PTR [ecx]
  445a3d:	sub    DWORD PTR [ecx],ebp
  445a3f:	add    al,0x0
  445a41:	add    BYTE PTR [eax],al
  445a43:	add    DWORD PTR [eax],eax
  445a45:	add    BYTE PTR [eax],al
  445a47:	add    bh,bh
  445a49:	(bad)  
  445a4a:	inc    DWORD PTR [eax]
  445a4c:	(bad)  
  445a4d:	(bad)  
  445a4e:	inc    DWORD PTR [eax]
  445a50:	(bad)  
  445a51:	(bad)  
  445a52:	inc    DWORD PTR [eax]
  445a54:	(bad)  
  445a55:	(bad)  
  445a56:	inc    DWORD PTR [eax]
  445a58:	(bad)  
  445a59:	(bad)  
  445a5a:	inc    DWORD PTR [eax]
  445a5c:	(bad)  
  445a5d:	(bad)  
  445a5e:	inc    DWORD PTR [eax]
  445a60:	(bad)  
  445a61:	(bad)  
  445a62:	inc    DWORD PTR [eax]
	...
  445a6c:	add    al,BYTE PTR [edx]
  445a6e:	add    al,BYTE PTR [eax]
  445a70:	inc    edi
  445a71:	inc    edi
  445a72:	inc    edi
  445a73:	add    bh,BYTE PTR [ebx]
  445a75:	cmp    esi,DWORD PTR [edi]
  445a77:	add    eax,0x3a4444
  445a7c:	daa    
  445a7d:	daa    
  445a7e:	add    BYTE PTR [ecx+0x0],0x0
  445a82:	in     eax,0xf7
  445a84:	add    BYTE PTR [eax],al
  445a86:	mov    ch,0xff
  445a88:	add    BYTE PTR [eax],al
  445a8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  445a8b:	inc    DWORD PTR [eax]
  445a8d:	add    BYTE PTR [edi+edi*8-0x5d0000],ah
  445a94:	add    BYTE PTR [eax],al
  445a96:	mov    eax,ds:0xa00000ff
  445a9b:	inc    DWORD PTR [eax]
  445a9d:	add    BYTE PTR [ebp-0x65ffff01],bl
  445aa3:	inc    DWORD PTR [eax]
  445aa5:	add    BYTE PTR [esi-0x66fbfb01],dl
  445aab:	call   DWORD PTR [edx]
  445aad:	adc    bl,BYTE PTR [edi-0x5ce6e601]
  445ab3:	call   FWORD PTR [ecx]
  445ab5:	sbb    DWORD PTR [ebx-0x5fecec01],esp
  445abb:	inc    DWORD PTR [ebx]
  445abd:	add    ebx,DWORD PTR [eax-0x6affff01]
  445ac3:	inc    DWORD PTR [eax]
  445ac5:	add    BYTE PTR [edi-0x64ffff01],dl
  445acb:	inc    DWORD PTR [eax]
  445acd:	add    BYTE PTR [edi-0x5fffff01],bl
  445ad3:	inc    DWORD PTR [eax]
  445ad5:	add    BYTE PTR [ecx-0x5cffff01],ah
  445adb:	inc    DWORD PTR [eax]
  445add:	add    BYTE PTR [edi+edi*8-0x5b0000],ah
  445ae4:	add    BYTE PTR [eax],al
  445ae6:	mov    ch,0xff
  445ae8:	add    BYTE PTR [eax],al
  445aea:	in     eax,0xfa
  445aec:	sbb    DWORD PTR [ecx],ebx
  445aee:	mov    WORD PTR [edi],?
  445af0:	inc    eax
  445af1:	inc    eax
  445af2:	aas    
  445af3:	add    bh,BYTE PTR [edx]
  445af5:	cmp    dh,BYTE PTR [edi]
  445af7:	add    al,0x44
  445af9:	inc    esp
  445afa:	inc    esp
  445afb:	add    al,BYTE PTR [eax]
	...
  445b05:	add    BYTE PTR [eax],al
  445b07:	add    bh,bh
  445b09:	(bad)  
  445b0a:	inc    DWORD PTR [eax]
  445b0c:	(bad)  
  445b0d:	(bad)  
  445b0e:	inc    DWORD PTR [eax]
  445b10:	(bad)  
  445b11:	(bad)  
  445b12:	inc    DWORD PTR [eax]
  445b14:	(bad)  
  445b15:	(bad)  
  445b16:	inc    DWORD PTR [eax]
  445b18:	(bad)  
  445b19:	(bad)  
  445b1a:	inc    DWORD PTR [eax]
  445b1c:	(bad)  
  445b1d:	(bad)  
  445b1e:	inc    DWORD PTR [eax]
  445b20:	(bad)  
  445b21:	(bad)  
  445b22:	inc    DWORD PTR [eax]
	...
  445b34:	push   es
  445b35:	push   es
  445b36:	push   es
  445b37:	add    BYTE PTR [ebx+0x43],al
  445b3a:	jne    0x445b3d
  445b3c:	and    BYTE PTR [eax],ah
  445b3e:	test   BYTE PTR [ebp+0x0],cl
  445b41:	add    ah,ah
  445b43:	in     eax,dx
  445b44:	add    BYTE PTR [eax],al
  445b46:	mov    al,0xff
  445b48:	add    BYTE PTR [eax],al
  445b4a:	sahf   
  445b4b:	inc    DWORD PTR [eax]
  445b4d:	add    BYTE PTR [edx-0x66ffff01],bl
  445b53:	inc    DWORD PTR [eax]
  445b55:	add    BYTE PTR [edi-0x69ffff01],dl
  445b5b:	inc    DWORD PTR [eax]
  445b5d:	add    BYTE PTR [ebx-0x70ffff01],dl
  445b63:	call   FWORD PTR [eax]
  445b65:	sbb    BYTE PTR [edx-0x4cb6b601],bl
  445b6b:	call   FWORD PTR [eax+0x58]
  445b6e:	mov    edx,0xba5a5aff
  445b73:	call   FWORD PTR [edx+0x5a]
  445b76:	mov    edx,0xbf6161ff
  445b7b:	inc    DWORD PTR [esp+eax*2-0x4f]
  445b7f:	jmp    DWORD PTR [edx]
  445b81:	and    bl,BYTE PTR [edi-0x67ecec01]
  445b87:	inc    DWORD PTR [edi]
  445b89:	pop    es
  445b8a:	xchg   esp,eax
  445b8b:	inc    DWORD PTR [eax]
  445b8d:	add    BYTE PTR [ebx-0x69ffff01],dl
  445b93:	inc    DWORD PTR [eax]
  445b95:	add    BYTE PTR [edi-0x66ffff01],dl
  445b9b:	inc    DWORD PTR [eax]
  445b9d:	add    BYTE PTR [edx-0x63ffff01],bl
  445ba3:	inc    DWORD PTR [eax]
  445ba5:	add    BYTE PTR [eax-0x1affff01],dh
  445bab:	jmp    0x445bc9
  445bad:	sbb    al,0x72
  445baf:	inc    esp
  445bb0:	inc    eax
  445bb1:	inc    eax
  445bb2:	jb     0x445bb5
  445bb4:	add    eax,DWORD PTR [ebx]
	...
  445bc6:	add    BYTE PTR [eax],al
  445bc8:	(bad)  
  445bc9:	(bad)  
  445bca:	inc    DWORD PTR [eax]
  445bcc:	(bad)  
  445bcd:	(bad)  
  445bce:	inc    DWORD PTR [eax]
  445bd0:	(bad)  
  445bd1:	(bad)  
  445bd2:	inc    DWORD PTR [eax]
  445bd4:	(bad)  
  445bd5:	(bad)  
  445bd6:	inc    DWORD PTR [eax]
  445bd8:	(bad)  
  445bd9:	(bad)  
  445bda:	inc    DWORD PTR [eax]
  445bdc:	(bad)  
  445bdd:	(bad)  
  445bde:	inc    DWORD PTR [eax]
  445be0:	(bad)  
  445be1:	(bad)  
  445be2:	inc    DWORD PTR [eax]
  445be4:	add    BYTE PTR [eax],al
  445be6:	add    BYTE PTR ds:[eax],al
  445be9:	add    BYTE PTR [esi],bh
  445beb:	add    BYTE PTR [eax],al
  445bed:	add    BYTE PTR [esi],bh
  445bef:	add    BYTE PTR [eax],al
  445bf1:	add    BYTE PTR ds:0x59000000,bh
  445bf7:	and    al,BYTE PTR [eax]
  445bf9:	add    dl,bl
  445bfb:	jl     0x445bfd
  445bfd:	add    dl,dl
  445bff:	into   
  445c00:	add    BYTE PTR [eax],al
  445c02:	sar    ah,1
  445c04:	add    BYTE PTR [eax],al
  445c06:	scas   eax,DWORD PTR es:[edi]
  445c07:	inc    DWORD PTR [eax]
  445c09:	add    BYTE PTR [edi+edi*8-0x700000],dl
  445c10:	add    BYTE PTR [eax],al
  445c12:	nop
  445c13:	inc    DWORD PTR [eax]
  445c15:	add    BYTE PTR [ebp-0x75ffff01],cl
  445c1b:	inc    DWORD PTR [eax]
  445c1d:	add    BYTE PTR [edi+edi*8-0x66dcdd],al
  445c24:	jbe    0x445c9c
  445c26:	(bad)  
  445c27:	(bad)  
  445c28:	jl     0x445ca6
  445c2a:	enter  0x2aff,0x2a
  445c2e:	xchg   edi,eax
  445c2f:	inc    DWORD PTR [edi]
  445c31:	pop    es
  445c32:	cmp    edi,0xff860f0f
  445c38:	cmp    bh,BYTE PTR [edx]
  445c3a:	mov    eax,ds:0xc77b7bff
  445c3f:	dec    DWORD PTR [eax+0x5dffce88]
  445c45:	pop    ebp
  445c46:	mov    bh,0xff
  445c48:	push   ss
  445c49:	push   ss
  445c4a:	xchg   ecx,eax
  445c4b:	inc    DWORD PTR [ecx]
  445c4d:	add    DWORD PTR [eax-0x75ffff01],ecx
  445c53:	inc    DWORD PTR [eax]
  445c55:	add    BYTE PTR [ebp-0x6fffff01],cl
  445c5b:	inc    DWORD PTR [eax]
  445c5d:	add    BYTE PTR [edi-0x6bffff01],cl
  445c63:	inc    DWORD PTR [eax]
  445c65:	add    BYTE PTR [ecx-0x2fffff01],dh
  445c6b:	sti    
  445c6c:	add    BYTE PTR [eax],al
  445c6e:	ror    ebx,cl
  445c70:	add    BYTE PTR [eax],al
  445c72:	(bad)  
  445c73:	jnp    0x445c75
  445c75:	add    BYTE PTR [edx+0x21],dl
  445c78:	add    BYTE PTR [eax],al
  445c7a:	aas    
  445c7b:	add    DWORD PTR [eax],eax
  445c7d:	add    BYTE PTR [edi],bh
  445c7f:	add    BYTE PTR [eax],al
  445c81:	add    BYTE PTR [edi],bh
  445c83:	add    BYTE PTR [eax],al
  445c85:	add    BYTE PTR [edi],bh
  445c87:	add    bh,bh
  445c89:	(bad)  
  445c8a:	inc    DWORD PTR [eax]
  445c8c:	(bad)  
  445c8d:	(bad)  
  445c8e:	inc    DWORD PTR [eax]
  445c90:	(bad)  
  445c91:	(bad)  
  445c92:	inc    DWORD PTR [eax]
  445c94:	(bad)  
  445c95:	(bad)  
  445c96:	inc    DWORD PTR [eax]
  445c98:	(bad)  
  445c99:	(bad)  
  445c9a:	inc    DWORD PTR [eax]
  445c9c:	(bad)  
  445c9d:	(bad)  
  445c9e:	inc    DWORD PTR [eax]
  445ca0:	(bad)  
  445ca1:	(bad)  
  445ca2:	inc    DWORD PTR [eax]
  445ca4:	add    BYTE PTR [eax],al
  445ca6:	int3   
  445ca7:	add    BYTE PTR [eax],al
  445ca9:	add    ah,cl
  445cab:	add    BYTE PTR [eax],al
  445cad:	add    ah,cl
  445caf:	add    BYTE PTR [ecx],al
  445cb1:	add    esp,ecx
  445cb3:	and    dl,BYTE PTR [ebx]
  445cb5:	adc    edx,esi
  445cb7:	mov    esi,0xffca2020
  445cbc:	add    eax,DWORD PTR [ebx]
  445cbe:	mov    edi,0xcb0000ff
  445cc3:	inc    DWORD PTR [eax]
  445cc5:	add    BYTE PTR [edx-0x72ffff01],dh
  445ccb:	inc    DWORD PTR [eax]
  445ccd:	add    BYTE PTR [esi-0x7bffff01],al
  445cd3:	inc    DWORD PTR [eax]
  445cd5:	add    BYTE PTR [ebx+0x7f0000ff],al
  445cdb:	inc    DWORD PTR ds:0x66ff7b05
  445ce1:	data16 mov dh,0xff
  445ce4:	mov    WORD PTR [esp+ecx*8-0x66c6c601],cs
  445ceb:	call   FWORD PTR [esp+ebx*1]
  445cee:	test   edi,edi
  445cf0:	sub    ch,BYTE PTR [edx]
  445cf2:	mov    ?,edi
  445cf4:	add    al,BYTE PTR [edx]
  445cf6:	je     0x445cf7
  445cf8:	add    BYTE PTR [eax],al
  445cfa:	outs   dx,BYTE PTR ds:[esi]
  445cfb:	jmp    FWORD PTR [ecx]
  445cfd:	sub    DWORD PTR [esi-0x35777701],ecx
  445d03:	push   DWORD PTR [edx+0x72]
  445d06:	mov    esi,0x871616ff
  445d0b:	inc    DWORD PTR [eax]
  445d0d:	add    BYTE PTR [ebx-0x1],bh
  445d10:	add    BYTE PTR [eax],al
  445d12:	cmp    bh,0x0
  445d15:	add    BYTE PTR [ebx-0x7affff01],al
  445d1b:	inc    DWORD PTR [eax]
  445d1d:	add    BYTE PTR [ebp-0x72ffff01],al
  445d23:	inc    DWORD PTR [eax]
  445d25:	add    BYTE PTR [ebx-0x33ffff01],dh
  445d2b:	inc    DWORD PTR [ebx]
  445d2d:	add    edi,DWORD PTR [esi-0x36dfdf01]
  445d33:	call   DWORD PTR [ebx]
  445d35:	adc    ebx,eax
  445d37:	mov    esp,0xdd80e0e
  445d3c:	(bad)  
  445d3d:	psubusb mm0,QWORD PTR [eax]
  445d40:	(bad)  
  445d41:	psubusb mm0,QWORD PTR [eax]
  445d44:	(bad)  
  445d45:	psubusb mm0,QWORD PTR [eax]
  445d48:	(bad)  
  445d49:	(bad)  
  445d4a:	inc    DWORD PTR [eax]
  445d4c:	(bad)  
  445d4d:	(bad)  
  445d4e:	inc    DWORD PTR [eax]
  445d50:	(bad)  
  445d51:	(bad)  
  445d52:	inc    DWORD PTR [eax]
  445d54:	(bad)  
  445d55:	(bad)  
  445d56:	inc    DWORD PTR [eax]
  445d58:	(bad)  
  445d59:	(bad)  
  445d5a:	inc    DWORD PTR [eax]
  445d5c:	(bad)  
  445d5d:	(bad)  
  445d5e:	inc    DWORD PTR [eax]
  445d60:	(bad)  
  445d61:	(bad)  
  445d62:	inc    DWORD PTR [eax]
  445d64:	add    eax,DWORD PTR [ebx]
  445d66:	mov    eax,0xb8030300
  445d6b:	add    BYTE PTR [ebx],al
  445d6d:	add    edi,DWORD PTR [eax-0x43f5f5f9]
  445d73:	lea    esi,[esi]
  445d75:	ss sar bh,cl
  445d78:	sbb    eax,0xffc31d
  445d7d:	add    BYTE PTR [edi+edi*8-0x3c0000],dh
  445d84:	add    BYTE PTR [eax],al
  445d86:	mov    ch,0xff
  445d88:	add    BYTE PTR [eax],al
  445d8a:	mov    bh,bh
  445d8c:	add    BYTE PTR [eax],al
  445d8e:	jl     0x445d8f
  445d90:	add    BYTE PTR [eax],al
  445d92:	jns    0x445d93
  445d94:	add    BYTE PTR [eax],al
  445d96:	ja     0x445d97
  445d98:	add    BYTE PTR [eax],al
  445d9a:	jb     0x445d9b
  445d9c:	adc    DWORD PTR [ecx],edx
  445d9e:	jge    0x445d9f
  445da0:	outs   dx,DWORD PTR ds:[esi]
  445da1:	outs   dx,DWORD PTR ds:[esi]
  445da2:	mov    dh,0xff
  445da4:	mov    DWORD PTR [ecx+0x3939ffc7],ecx
  445daa:	xchg   edx,eax
  445dab:	push   DWORD PTR [ecx+0x71]
  445dae:	mov    bh,0xff
  445db0:	mov    DWORD PTR [ecx+0x1919ffc6],ecx
  445db6:	jp     0x445db7
  445db8:	add    BYTE PTR [eax],al
  445dba:	inc    DWORD PTR [di]
  445dbd:	add    eax,0x7272ff6d
  445dc2:	mov    ecx,0xc18181ff
  445dc7:	dec    DWORD PTR [ebx+0x4b]
  445dca:	mov    al,ds:0x710202ff
  445dcf:	inc    DWORD PTR [eax]
  445dd1:	add    BYTE PTR [ecx-0x1],dh
  445dd4:	add    BYTE PTR [eax],al
  445dd6:	ja     0x445dd7
  445dd8:	add    BYTE PTR [eax],al
  445dda:	jns    0x445ddb
  445ddc:	add    BYTE PTR [eax],al
  445dde:	jl     0x445ddf
  445de0:	add    BYTE PTR [eax],al
  445de2:	mov    bh,bh
  445de4:	add    BYTE PTR [eax],al
  445de6:	mov    eax,0xc40000ff
  445deb:	inc    DWORD PTR [eax]
  445ded:	add    BYTE PTR [ebx-0x3de4e401],dh
  445df3:	push   DWORD PTR [edx]
  445df5:	xor    dl,cl
  445df7:	push   DWORD PTR [esp+esi*1]
  445dfa:	rcl    BYTE PTR [edi],cl
  445dfc:	xor    esi,DWORD PTR [ebx]
  445dfe:	rol    BYTE PTR [eax],cl
  445e00:	xor    esi,DWORD PTR [ebx]
  445e02:	rol    BYTE PTR [eax],cl
  445e04:	xor    esi,DWORD PTR [ebx]
  445e06:	rol    BYTE PTR [eax],cl
  445e08:	(bad)  
  445e09:	(bad)  
  445e0a:	inc    DWORD PTR [eax]
  445e0c:	(bad)  
  445e0d:	(bad)  
  445e0e:	inc    DWORD PTR [eax]
  445e10:	(bad)  
  445e11:	(bad)  
  445e12:	inc    DWORD PTR [eax]
  445e14:	(bad)  
  445e15:	(bad)  
  445e16:	inc    DWORD PTR [eax]
  445e18:	(bad)  
  445e19:	(bad)  
  445e1a:	inc    DWORD PTR [eax]
  445e1c:	(bad)  
  445e1d:	(bad)  
  445e1e:	inc    DWORD PTR [eax]
  445e20:	(bad)  
  445e21:	(bad)  
  445e22:	inc    DWORD PTR [eax]
  445e24:	adc    dl,BYTE PTR [edx]
  445e26:	mov    edx,0xba121200
  445e2b:	add    BYTE PTR [ecx],dl
  445e2d:	adc    DWORD PTR [edx-0x41e6e6ee],edi
  445e33:	fistp  QWORD PTR [edx]
  445e35:	cmp    dl,cl
  445e37:	dec    DWORD PTR [edx]
  445e39:	or     dh,BYTE PTR [edi+edi*8-0x540000]
  445e40:	add    BYTE PTR [eax],al
  445e42:	mov    ebx,0xba0000ff
  445e47:	inc    DWORD PTR [eax]
  445e49:	add    BYTE PTR [ebx+0x730000ff],cl
  445e4f:	inc    DWORD PTR [eax]
  445e51:	add    BYTE PTR [esi-0x1],ch
  445e54:	add    BYTE PTR [eax],al
  445e56:	outs   dx,BYTE PTR ds:[esi]
  445e57:	inc    DWORD PTR [eax]
  445e59:	add    BYTE PTR [ebp-0x1],ch
  445e5c:	pop    es
  445e5d:	pop    es
  445e5e:	outs   dx,DWORD PTR ds:[esi]
  445e5f:	jmp    FWORD PTR [ebp+0x6d]
  445e62:	mov    bl,0xff
  445e64:	xchg   DWORD PTR [edi+0x6d6dffc4],eax
  445e6a:	mov    cl,0xff
  445e6c:	add    BYTE PTR [eax+0x7777ffbf],0xb8
  445e73:	inc    DWORD PTR [edi]
  445e75:	pop    es
  445e76:	inc    DWORD PTR [bx+si]
  445e79:	add    BYTE PTR [ebx-0x1],bl
  445e7c:	sbb    BYTE PTR [eax],bl
  445e7e:	je     0x445e7f
  445e80:	jp     0x445efc
  445e82:	mov    ebx,0xc99090ff
  445e87:	dec    DWORD PTR [edx+0x51ffc68a]
  445e8d:	push   ecx
  445e8e:	mov    eax,ds:0x781313ff
  445e93:	inc    DWORD PTR [eax]
  445e95:	add    BYTE PTR [ebx-0x1],ch
  445e98:	add    BYTE PTR [eax],al
  445e9a:	ins    DWORD PTR es:[edi],dx
  445e9b:	inc    DWORD PTR [eax]
  445e9d:	add    BYTE PTR [edx-0x1],dh
  445ea0:	add    BYTE PTR [eax],al
  445ea2:	mov    edi,?
  445ea4:	add    BYTE PTR [eax],al
  445ea6:	mov    esp,0xb80000ff
  445eab:	inc    DWORD PTR [eax]
  445ead:	add    BYTE PTR [ebx-0x4bf6f601],ch
  445eb3:	push   DWORD PTR [edi]
  445eb5:	aaa    
  445eb6:	into   
  445eb7:	cli    
  445eb8:	ds rcl DWORD PTR ds:0xd23d3d,1
  445ec0:	cmp    eax,0x3d00d23d
  445ec5:	cmp    eax,0xffff00d2
  445eca:	inc    DWORD PTR [eax]
  445ecc:	(bad)  
  445ecd:	(bad)  
  445ece:	inc    DWORD PTR [eax]
  445ed0:	(bad)  
  445ed1:	(bad)  
  445ed2:	inc    DWORD PTR [eax]
  445ed4:	(bad)  
  445ed5:	(bad)  
  445ed6:	inc    DWORD PTR [eax]
  445ed8:	(bad)  
  445ed9:	(bad)  
  445eda:	inc    DWORD PTR [eax]
  445edc:	(bad)  
  445edd:	(bad)  
  445ede:	inc    DWORD PTR [eax]
  445ee0:	(bad)  
  445ee1:	(bad)  
  445ee2:	inc    DWORD PTR [eax]
  445ee4:	sbb    bl,BYTE PTR [edx]
  445ee6:	mov    eax,0xb81a1a00
  445eeb:	add    BYTE PTR [ecx],bl
  445eed:	sbb    DWORD PTR [eax-0x44dedeec],edi
  445ef3:	hlt    
  445ef4:	cmp    BYTE PTR [eax],bh
  445ef6:	retf   
  445ef7:	inc    DWORD PTR [edi]
  445ef9:	pop    es
  445efa:	stos   DWORD PTR es:[edi],eax
  445efb:	inc    DWORD PTR [eax]
  445efd:	add    BYTE PTR [ebx-0x52ffff01],ah
  445f03:	inc    DWORD PTR [eax]
  445f05:	add    BYTE PTR [ecx-0x6dffff01],bh
  445f0b:	inc    DWORD PTR [eax]
  445f0d:	add    BYTE PTR [esi-0x1],ch
  445f10:	add    DWORD PTR [ecx],eax
  445f12:	ins    BYTE PTR es:[edi],dx
  445f13:	inc    DWORD PTR [edx]
  445f15:	add    ch,BYTE PTR [esi-0x1]
  445f18:	add    DWORD PTR [ecx],eax
  445f1a:	ins    BYTE PTR es:[edi],dx
  445f1b:	inc    DWORD PTR [eax]
  445f1d:	add    BYTE PTR [edi+edi*8+0x4e],ah
  445f21:	dec    esi
  445f22:	pushf  
  445f23:	inc    DWORD PTR [ebp-0x7800407b]
  445f29:	xchg   ecx,eax
  445f2b:	jmp    DWORD PTR [ebp+0x65]
  445f2e:	test   eax,0x9d5656ff
  445f33:	push   DWORD PTR ds:0x4cff8635
  445f39:	dec    esp
  445f3a:	xchg   edi,eax
  445f3b:	call   FWORD PTR [esp+ebx*2-0x5e]
  445f3f:	jmp    DWORD PTR [esi+0x66]
  445f42:	stos   BYTE PTR es:[edi],al
  445f43:	inc    DWORD PTR [edx+0x42]
  445f46:	nop
  445f47:	inc    DWORD PTR [ecx+0x41]
  445f4a:	xchg   ebx,eax
  445f4b:	push   DWORD PTR [ebx]
  445f4d:	xor    ecx,DWORD PTR [edx-0x78d5d501]
  445f53:	call   FWORD PTR [ecx]
  445f55:	sbb    DWORD PTR [ebp-0x1],edi
  445f58:	add    BYTE PTR [eax],al
  445f5a:	push   0xffffffff
  445f5c:	add    DWORD PTR [ecx],eax
  445f5e:	jo     0x445f5f
  445f60:	add    BYTE PTR [eax],al
  445f62:	xchg   ebp,eax
  445f63:	inc    DWORD PTR [eax]
  445f65:	add    BYTE PTR [edx-0x53ffff01],bh
  445f6b:	inc    DWORD PTR [eax]
  445f6d:	add    BYTE PTR [ebx-0x54f7f701],ah
  445f73:	push   DWORD PTR ds:0x3bfac835
  445f79:	cmp    ecx,esp
  445f7b:	adc    eax,0xcb3a3a
  445f80:	cmp    bh,BYTE PTR [edx]
  445f82:	retf   
  445f83:	add    BYTE PTR [edx],bh
  445f85:	cmp    cl,bl
  445f87:	add    bh,bh
  445f89:	(bad)  
  445f8a:	inc    DWORD PTR [eax]
  445f8c:	(bad)  
  445f8d:	(bad)  
  445f8e:	inc    DWORD PTR [eax]
  445f90:	(bad)  
  445f91:	(bad)  
  445f92:	inc    DWORD PTR [eax]
  445f94:	(bad)  
  445f95:	(bad)  
  445f96:	inc    DWORD PTR [eax]
  445f98:	(bad)  
  445f99:	(bad)  
  445f9a:	inc    DWORD PTR [eax]
  445f9c:	(bad)  
  445f9d:	(bad)  
  445f9e:	inc    DWORD PTR [eax]
  445fa0:	(bad)  
  445fa1:	(bad)  
  445fa2:	inc    DWORD PTR [eax]
  445fa4:	push   cs
  445fa5:	push   cs
  445fa6:	test   eax,0xa90e0e00
  445fab:	add    BYTE PTR ds:0x1611a90d,cl
  445fb1:	push   ss
  445fb2:	scas   al,BYTE PTR es:[edi]
  445fb3:	sar    DWORD PTR [edx],cl
  445fb5:	cmp    cl,al
  445fb7:	dec    DWORD PTR [esi]
  445fb9:	push   cs
  445fba:	test   al,0xff
  445fbc:	add    BYTE PTR [eax],al
  445fbe:	call   0xff:0x9f0000ff
  445fc5:	add    BYTE PTR [ecx-0x5bfefe01],dh
  445fcb:	inc    DWORD PTR [edx]
  445fcd:	add    bh,BYTE PTR [edi+edi*8+0x3]
  445fd1:	add    esi,DWORD PTR [ecx-0x1]
  445fd4:	add    al,BYTE PTR [edx]
  445fd6:	outs   dx,DWORD PTR ds:[esi]
  445fd7:	inc    DWORD PTR [eax]
  445fd9:	add    BYTE PTR [ecx-0x1],ch
  445fdc:	add    BYTE PTR [eax],al
  445fde:	pusha  
  445fdf:	inc    DWORD PTR [esi]
  445fe1:	push   es
  445fe2:	call   WORD PTR [edi+0x57]
  445fe6:	sahf   
  445fe7:	dec    DWORD PTR [edx+0x77ffc28a]
  445fed:	ja     0x445fa4
  445fef:	push   DWORD PTR [edx]
  445ff1:	xor    al,BYTE PTR [edx+0x721d1dff]
  445ff7:	push   DWORD PTR [eax]
  445ff9:	xor    BYTE PTR [eax+0x782424ff],al
  445fff:	call   DWORD PTR [esi]
  446001:	push   ss
  446002:	outs   dx,DWORD PTR ds:[esi]
  446003:	call   FWORD PTR [ebx]
  446005:	sbb    esi,DWORD PTR [edi+edi*8+0x21]
  446009:	and    DWORD PTR [ebx-0x1],edi
  44600c:	adc    BYTE PTR [eax],dl
  44600e:	jb     0x44600f
  446010:	or     eax,0xeff720d
  446015:	push   cs
  446016:	jbe    0x446017
  446018:	add    DWORD PTR [ecx],eax
  44601a:	outs   dx,DWORD PTR ds:[esi]
  44601b:	inc    DWORD PTR [ebx]
  44601d:	add    edi,DWORD PTR [ebp-0x1]
  446020:	add    DWORD PTR [ecx],eax
  446022:	test   al,0xff
  446024:	add    BYTE PTR [eax],al
  446026:	mov    al,0xff
  446028:	add    BYTE PTR [eax],al
  44602a:	sahf   
  44602b:	inc    DWORD PTR [eax]
  44602d:	add    BYTE PTR [edx-0x59f2f201],bl
  446033:	(bad)  
  446034:	cmp    BYTE PTR [eax],bh
  446036:	(bad)  
  446039:	ds leave 
  44603b:	adc    eax,0xc93d3d
  446040:	cmp    eax,0x3d00c93d
  446045:	cmp    eax,0xffff00c9
  44604a:	inc    DWORD PTR [eax]
  44604c:	(bad)  
  44604d:	(bad)  
  44604e:	inc    DWORD PTR [eax]
  446050:	(bad)  
  446051:	(bad)  
  446052:	inc    DWORD PTR [eax]
  446054:	(bad)  
  446055:	(bad)  
  446056:	inc    DWORD PTR [eax]
  446058:	(bad)  
  446059:	(bad)  
  44605a:	inc    DWORD PTR [eax]
  44605c:	(bad)  
  44605d:	(bad)  
  44605e:	inc    DWORD PTR [eax]
  446060:	(bad)  
  446061:	(bad)  
  446062:	inc    DWORD PTR [eax]
  446064:	add    DWORD PTR [ecx],eax
  446066:	xchg   esp,eax
  446067:	add    BYTE PTR [ecx],al
  446069:	add    DWORD PTR [eax+eax*1+0x5930101],edx
  446070:	or     BYTE PTR [eax],cl
  446072:	cdq    
  446073:	jnp    0x4460a9
  446075:	xor    al,0xbd
  446077:	jmp    DWORD PTR [eax]
  446079:	and    BYTE PTR [esi-0x70ffff01],ch
  44607f:	inc    DWORD PTR [eax]
  446081:	add    BYTE PTR [edx-0x5effff01],dl
  446087:	inc    DWORD PTR [edx]
  446089:	add    dh,BYTE PTR [edi+edi*8-0x6dfbfc]
  446090:	add    al,0x4
  446092:	jne    0x446093
  446094:	add    BYTE PTR [eax],al
  446096:	ins    BYTE PTR es:[edi],dx
  446097:	jmp    DWORD PTR [esi]
  446099:	es cmp edi,0x43
  44609d:	inc    ebx
  44609e:	xchg   ebx,eax
  44609f:	(bad)  
  4460a0:	cmp    bh,BYTE PTR [edx]
  4460a2:	mov    edi,edi
  4460a4:	sub    al,0x2c
  4460a6:	cmp    edi,0xff853535
  4460ac:	bound  esp,QWORD PTR [edx-0x5a]
  4460af:	jmp    DWORD PTR [ebp+0x65]
  4460b2:	test   al,0xff
  4460b4:	ds ds mov bh,bh
  4460b8:	pop    ds
  4460b9:	pop    ds
  4460ba:	jne    0x4460bb
  4460bc:	xor    eax,0x55ff8535
  4460c1:	push   ebp
  4460c2:	popf   
  4460c3:	jmp    FWORD PTR [ebp+0x6d]
  4460c6:	scas   eax,DWORD PTR es:[edi]
  4460c7:	(bad)  
  4460c8:	js     0x446142
  4460ca:	mov    bh,0xff
  4460cc:	jae    0x446141
  4460ce:	mov    bl,0xff
  4460d0:	inc    esp
  4460d1:	inc    esp
  4460d2:	xchg   ebp,eax
  4460d3:	call   DWORD PTR [esi]
  4460d5:	push   ss
  4460d6:	jp     0x4460d7
  4460d8:	add    al,0x4
  4460da:	jne    0x4460db
  4460dc:	add    eax,DWORD PTR [ebx]
  4460de:	xchg   ecx,eax
  4460df:	inc    DWORD PTR [ebx]
  4460e1:	add    esi,DWORD PTR [edi+edi*8-0x610000]
  4460e8:	add    BYTE PTR [eax],al
  4460ea:	xchg   ecx,eax
  4460eb:	inc    DWORD PTR [eax]
  4460ed:	add    BYTE PTR [eax-0x52dfdf01],dl
  4460f3:	push   DWORD PTR [edx]
  4460f5:	xor    bh,BYTE PTR [ebx-0x44cccc01]
  4460fb:	push   ss
  4460fc:	xor    dh,BYTE PTR [edx]
  4460fe:	mov    ebx,0xbb323200
  446103:	add    BYTE PTR [edx],dh
  446105:	xor    bh,BYTE PTR [ebx-0x100]
  44610b:	add    bh,bh
  44610d:	(bad)  
  44610e:	inc    DWORD PTR [eax]
  446110:	(bad)  
  446111:	(bad)  
  446112:	inc    DWORD PTR [eax]
  446114:	(bad)  
  446115:	(bad)  
  446116:	inc    DWORD PTR [eax]
  446118:	(bad)  
  446119:	(bad)  
  44611a:	inc    DWORD PTR [eax]
  44611c:	(bad)  
  44611d:	(bad)  
  44611e:	inc    DWORD PTR [eax]
  446120:	(bad)  
  446121:	(bad)  
  446122:	inc    DWORD PTR [eax]
  446124:	add    BYTE PTR [eax],al
  446126:	xchg   ecx,eax
  446127:	add    BYTE PTR [eax],al
  446129:	add    BYTE PTR [ecx-0x6f000000],dl
  44612f:	add    BYTE PTR [ecx],al
  446131:	add    DWORD PTR [ecx-0x5ce5e5dd],edx
  446137:	loopne 0x44616d
  446139:	xor    al,0xb7
  44613b:	inc    DWORD PTR ds:0xff8d05
  446141:	add    BYTE PTR [ebp-0x72ffff01],al
  446147:	inc    DWORD PTR [edx]
  446149:	add    ch,BYTE PTR [ebp-0x58fafa01]
  44614f:	inc    DWORD PTR ds:0x2ff8205
  446155:	add    dh,BYTE PTR [ebx-0x1]
  446158:	push   ss
  446159:	push   ss
  44615a:	jnp    0x44615b
  44615c:	push   0x6a
  44615e:	scas   eax,DWORD PTR es:[edi]
  44615f:	inc    DWORD PTR [ebp+0x6dffc185]
  446165:	ins    DWORD PTR es:[edi],dx
  446166:	mov    al,0xff
  446168:	bound  esp,QWORD PTR [edx-0x58]
  44616b:	push   DWORD PTR [ebx+0x73]
  44616e:	mov    ah,0xff
  446170:	xchg   DWORD PTR [edi-0x7d7d003d],eax
  446176:	mov    edi,0xb67575ff
  44617b:	(bad)  
  44617c:	jg     0x4461fd
  44617e:	mov    ebp,0xc58b8bff
  446183:	dec    DWORD PTR [ecx+0x66ffc489]
  446189:	lods   ax,WORD PTR ds:[esi]
  44618b:	inc    DWORD PTR [esi+0x46]
  44618e:	cdq    
  44618f:	(bad)  
  446190:	cmp    bh,BYTE PTR [edx]
  446192:	xchg   edx,eax
  446193:	(bad)  
  446194:	cmp    BYTE PTR [eax],bh
  446196:	xchg   edx,eax
  446197:	call   FWORD PTR [edi]
  446199:	pop    ds
  44619a:	nop
  44619b:	inc    DWORD PTR [eax]
  44619d:	add    BYTE PTR [esi-0x54fdfd01],ah
  4461a3:	inc    DWORD PTR [eax]
  4461a5:	add    BYTE PTR [ebx-0x7affff01],cl
  4461ab:	inc    DWORD PTR ds:0x35ff8d05
  4461b1:	xor    eax,0x1818ffb8
  4461b6:	sahf   
  4461b7:	ficom  WORD PTR [eax]
  4461b9:	adc    BYTE PTR [eax-0x66efefef],bl
  4461bf:	add    BYTE PTR [eax],dl
  4461c1:	adc    BYTE PTR [ecx-0x66eff000],bl
  4461c7:	add    bh,bh
  4461c9:	(bad)  
  4461ca:	inc    DWORD PTR [eax]
  4461cc:	(bad)  
  4461cd:	(bad)  
  4461ce:	inc    DWORD PTR [eax]
  4461d0:	(bad)  
  4461d1:	(bad)  
  4461d2:	inc    DWORD PTR [eax]
  4461d4:	(bad)  
  4461d5:	(bad)  
  4461d6:	inc    DWORD PTR [eax]
  4461d8:	(bad)  
  4461d9:	(bad)  
  4461da:	inc    DWORD PTR [eax]
  4461dc:	(bad)  
  4461dd:	(bad)  
  4461de:	inc    DWORD PTR [eax]
  4461e0:	(bad)  
  4461e1:	(bad)  
  4461e2:	inc    DWORD PTR [eax]
  4461e4:	add    BYTE PTR [eax],al
  4461e6:	jle    0x4461e8
  4461e8:	add    BYTE PTR [eax],al
  4461ea:	jle    0x4461ec
  4461ec:	add    BYTE PTR [eax],al
  4461ee:	jle    0x4461f0
  4461f0:	add    BYTE PTR [eax],al
  4461f2:	jge    0x4461f5
  4461f4:	add    eax,0x285d8205
  4461f9:	sub    BYTE PTR [edi-0x60dede01],ah
  4461ff:	inc    DWORD PTR [eax]
  446201:	add    BYTE PTR [ebx-0x1],bh
  446204:	add    BYTE PTR [eax],al
  446206:	jnp    0x446207
  446208:	add    BYTE PTR [eax],al
  44620a:	xchg   ebx,eax
  44620b:	inc    DWORD PTR [esp+eax*1]
  44620e:	mov    ah,0xff
  446210:	or     BYTE PTR [eax],cl
  446212:	cdq    
  446213:	inc    DWORD PTR [esi]
  446215:	push   es
  446216:	cmp    bh,0x4
  446219:	add    al,0x7a
  44621b:	call   DWORD PTR ds:0x6dff8215
  446221:	ins    DWORD PTR es:[edi],dx
  446222:	mov    bh,0xff
  446224:	(bad)  
  446225:	(bad)  
  446226:	int3   
  446227:	dec    DWORD PTR [edx-0x79003676]
  44622d:	xchg   dh,al
  44622f:	inc    DWORD PTR [esp+eax*4-0x7979003b]
  446236:	(bad)  
  446237:	dec    DWORD PTR [esi-0x70003472]
  44623d:	(bad)  
  44623e:	int3   
  44623f:	inc    DWORD PTR [ecx+0x53ffc381]
  446245:	push   ebx
  446246:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  446247:	call   DWORD PTR [ebx]
  446249:	adc    edi,DWORD PTR [esi-0x1]
  44624c:	or     BYTE PTR [eax],cl
  44624e:	jl     0x44624f
  446250:	or     cl,BYTE PTR [edx]
  446252:	jg     0x446253
  446254:	adc    dl,BYTE PTR [edx]
  446256:	mov    bh,bh
  446258:	adc    BYTE PTR [eax],dl
  44625a:	sahf   
  44625b:	inc    DWORD PTR [ebx]
  44625d:	add    esi,DWORD PTR [ebx-0x6dffff01]
  446263:	inc    DWORD PTR [eax]
  446265:	add    BYTE PTR [edi+edi*8+0x0],bh
  446269:	add    BYTE PTR [edx-0x1],bh
  44626c:	and    ah,BYTE PTR [edx]
  44626e:	mov    al,ds:0xa62929ff
  446273:	inc    DWORD PTR ds:0x588405
  446279:	add    BYTE PTR [ecx-0x7efffffd],al
  44627f:	add    BYTE PTR [eax],al
  446281:	add    BYTE PTR [ecx-0x7f000000],al
  446287:	add    bh,bh
  446289:	(bad)  
  44628a:	inc    DWORD PTR [eax]
  44628c:	(bad)  
  44628d:	(bad)  
  44628e:	inc    DWORD PTR [eax]
  446290:	(bad)  
  446291:	(bad)  
  446292:	inc    DWORD PTR [eax]
  446294:	(bad)  
  446295:	(bad)  
  446296:	inc    DWORD PTR [eax]
  446298:	(bad)  
  446299:	(bad)  
  44629a:	inc    DWORD PTR [eax]
  44629c:	(bad)  
  44629d:	(bad)  
  44629e:	inc    DWORD PTR [eax]
  4462a0:	(bad)  
  4462a1:	(bad)  
  4462a2:	inc    DWORD PTR [eax]
  4462a4:	add    BYTE PTR [eax],al
  4462a6:	js     0x4462a8
  4462a8:	add    BYTE PTR [eax],al
  4462aa:	js     0x4462ac
  4462ac:	add    BYTE PTR [eax],al
  4462ae:	js     0x4462b0
  4462b0:	add    BYTE PTR [eax],al
  4462b2:	js     0x4462b4
  4462b4:	add    BYTE PTR [eax],al
  4462b6:	ja     0x4462c2
  4462b8:	or     eax,0x2c93840d
  4462bd:	sub    al,0xa3
  4462bf:	call   DWORD PTR [ecx]
  4462c1:	adc    DWORD PTR [esi+0x6e0000ff],eax
  4462c7:	inc    DWORD PTR [eax]
  4462c9:	add    BYTE PTR [edi-0x1],dh
  4462cc:	add    eax,DWORD PTR [ebx]
  4462ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4462cf:	dec    DWORD PTR [ecx]
  4462d1:	or     DWORD PTR [ebp-0x68f6f601],esi
  4462d7:	dec    DWORD PTR [ecx]
  4462d9:	or     DWORD PTR [edx-0x7dfbfb01],ecx
  4462df:	call   FWORD PTR [esi]
  4462e1:	push   ds
  4462e2:	nop
  4462e3:	inc    DWORD PTR [edi+0x47]
  4462e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4462e7:	inc    DWORD PTR [eax-0x74003880]
  4462ed:	mov    ecx,esi
  4462ef:	dec    DWORD PTR [esp+ecx*4+0x7b7bffce]
  4462f6:	(bad)  
  4462f7:	(bad)  
  4462f8:	aas    
  4462f9:	aas    
  4462fa:	lahf   
  4462fb:	jmp    DWORD PTR [esp]
  4462fe:	(bad)  
  4462ff:	(bad)  
  446300:	cmp    BYTE PTR [eax],bh
  446302:	pushf  
  446303:	call   FWORD PTR [ebx]
  446305:	sbb    ecx,DWORD PTR [ebx-0x7efafa01]
  44630b:	dec    DWORD PTR [eax]
  44630d:	or     BYTE PTR [esi-0x75f7f701],al
  446313:	inc    DWORD PTR [edi]
  446315:	pop    es
  446316:	xchg   esi,eax
  446317:	dec    DWORD PTR [eax]
  446319:	or     BYTE PTR [ebp-0x5afcfc01],dh
  44631f:	inc    DWORD PTR [eax]
  446321:	add    BYTE PTR [edi-0x1],dh
  446324:	add    BYTE PTR [eax],al
  446326:	ins    DWORD PTR es:[edi],dx
  446327:	call   DWORD PTR [ecx]
  446329:	adc    DWORD PTR [esi-0x5cd2d201],eax
  44632f:	dec    DWORD PTR [ebx]
  446331:	or     eax,DWORD PTR [edi-0x7affff6f]
  446337:	or     DWORD PTR [eax],eax
  446339:	add    BYTE PTR [edi-0x79000000],al
  44633f:	add    BYTE PTR [eax],al
  446341:	add    BYTE PTR [edi-0x79000000],al
  446347:	add    bh,bh
  446349:	(bad)  
  44634a:	inc    DWORD PTR [eax]
  44634c:	(bad)  
  44634d:	(bad)  
  44634e:	inc    DWORD PTR [eax]
  446350:	(bad)  
  446351:	(bad)  
  446352:	inc    DWORD PTR [eax]
  446354:	(bad)  
  446355:	(bad)  
  446356:	inc    DWORD PTR [eax]
  446358:	(bad)  
  446359:	(bad)  
  44635a:	inc    DWORD PTR [eax]
  44635c:	(bad)  
  44635d:	(bad)  
  44635e:	inc    DWORD PTR [eax]
  446360:	(bad)  
  446361:	(bad)  
  446362:	inc    DWORD PTR [eax]
  446364:	add    BYTE PTR [eax],al
  446366:	jns    0x446368
  446368:	add    BYTE PTR [eax],al
  44636a:	jns    0x44636c
  44636c:	add    BYTE PTR [eax],al
  44636e:	jns    0x446370
  446370:	add    BYTE PTR [eax],al
  446372:	jns    0x446374
  446374:	add    BYTE PTR [eax],al
  446376:	jns    0x446378
  446378:	add    DWORD PTR [ecx],eax
  44637a:	jae    0x446396
  44637c:	adc    edx,DWORD PTR [ebx]
  44637e:	xor    BYTE PTR [eax-0x69d9da],0x6
  446385:	push   es
  446386:	jno    0x446387
  446388:	add    BYTE PTR [eax],al
  44638a:	(bad)  
  44638b:	inc    DWORD PTR [eax]
  44638d:	add    BYTE PTR [edi-0x1],bh
  446390:	or     BYTE PTR [eax],cl
  446392:	mov    ecx,0xb60c0cff
  446397:	dec    DWORD PTR [esp+ecx*1]
  44639a:	sahf   
  44639b:	dec    DWORD PTR [esp+ecx*1]
  44639e:	xchg   edi,eax
  44639f:	dec    DWORD PTR [edx]
  4463a1:	or     dl,BYTE PTR [edi+edi*8-0x6cf2f3]
  4463a8:	push   ds
  4463a9:	push   ds
  4463aa:	call   0x2eff:0xa53636ff
  4463b1:	cs cwde 
  4463b3:	push   DWORD PTR [edi]
  4463b5:	aaa    
  4463b6:	(bad)  
  4463b7:	inc    DWORD PTR [ebx+0x43]
  4463ba:	nop
  4463bb:	(bad)  
  4463bc:	cmp    bh,BYTE PTR [edx]
  4463be:	popf   
  4463bf:	dec    DWORD PTR [esi]
  4463c1:	push   cs
  4463c2:	xchg   ecx,eax
  4463c3:	dec    DWORD PTR [edx]
  4463c5:	or     dl,BYTE PTR [edx-0x6af4f401]
  4463cb:	dec    DWORD PTR [esp+ecx*1]
  4463ce:	cwde   
  4463cf:	dec    DWORD PTR [esp+ecx*1]
  4463d2:	sahf   
  4463d3:	dec    DWORD PTR [esp+ecx*1]
  4463d6:	mov    bh,0xff
  4463d8:	pop    es
  4463d9:	pop    es
  4463da:	mov    ecx,0x7e0000ff
  4463df:	inc    DWORD PTR [eax]
  4463e1:	add    BYTE PTR [ecx-0x1],ah
  4463e4:	push   es
  4463e5:	push   es
  4463e6:	jno    0x4463e7
  4463e8:	daa    
  4463e9:	daa    
  4463ea:	xchg   esi,eax
  4463eb:	call   DWORD PTR [edx]
  4463ed:	adc    cl,BYTE PTR [ebx+0x200000ae]
  4463f3:	sbb    al,BYTE PTR [eax]
  4463f5:	add    BYTE PTR [eax],dl
  4463f7:	add    BYTE PTR [eax],al
  4463f9:	add    BYTE PTR [ecx],dl
  4463fb:	add    BYTE PTR [eax],al
  4463fd:	add    BYTE PTR [ecx],dl
  4463ff:	add    BYTE PTR [eax],al
  446401:	add    BYTE PTR [ecx],dl
  446403:	add    BYTE PTR [eax],al
  446405:	add    BYTE PTR [ecx],dl
  446407:	add    bh,bh
  446409:	(bad)  
  44640a:	inc    DWORD PTR [eax]
  44640c:	(bad)  
  44640d:	(bad)  
  44640e:	inc    DWORD PTR [eax]
  446410:	(bad)  
  446411:	(bad)  
  446412:	inc    DWORD PTR [eax]
  446414:	(bad)  
  446415:	(bad)  
  446416:	inc    DWORD PTR [eax]
  446418:	(bad)  
  446419:	(bad)  
  44641a:	inc    DWORD PTR [eax]
  44641c:	(bad)  
  44641d:	(bad)  
  44641e:	inc    DWORD PTR [eax]
  446420:	(bad)  
  446421:	(bad)  
  446422:	inc    DWORD PTR [eax]
  446424:	add    BYTE PTR [eax],al
  446426:	jnp    0x446428
  446428:	add    BYTE PTR [eax],al
  44642a:	jnp    0x44642c
  44642c:	add    BYTE PTR [eax],al
  44642e:	jnp    0x446430
  446430:	add    BYTE PTR [eax],al
  446432:	jnp    0x446434
  446434:	add    BYTE PTR [eax],al
  446436:	jnp    0x446438
  446438:	add    BYTE PTR [eax],al
  44643a:	jbe    0x44643c
  44643c:	add    al,BYTE PTR [edx]
  44643e:	imul   esp,DWORD PTR [esi],0x15
  446441:	adc    eax,0x1d1dc27b
  446446:	test   edi,edi
  446448:	add    al,BYTE PTR [edx]
  44644a:	popa   
  44644b:	inc    DWORD PTR [eax]
  44644d:	add    BYTE PTR [ebx-0x1],bl
  446450:	add    al,BYTE PTR [edx]
  446452:	xchg   ebx,eax
  446453:	dec    DWORD PTR [esp+ecx*1]
  446456:	enter  0xeff,0xe
  44645a:	mov    ebx,0xab0d0dff
  44645f:	dec    DWORD PTR ds:0xbffa60d
  446465:	or     esp,DWORD PTR [ebx-0x5ef4f401]
  44646b:	dec    DWORD PTR ds:0x8ff9d0d
  446471:	or     BYTE PTR [edx-0x1],ch
  446474:	add    eax,0x7ff3505
  446479:	pop    es
  44647a:	cmp    edi,edi
  44647c:	or     al,0xc
  44647e:	outs   dx,DWORD PTR ds:[esi]
  44647f:	dec    DWORD PTR [ebx]
  446481:	or     ebx,DWORD PTR [eax-0x5bf3f301]
  446487:	dec    DWORD PTR ds:0xdffa70d
  44648d:	or     eax,0xf0fffaa
  446492:	mov    ebx,0xc90c0cff
  446497:	inc    DWORD PTR [edx]
  446499:	add    dl,BYTE PTR [ecx+0x5b0000ff]
  44649f:	inc    DWORD PTR [edx]
  4464a1:	add    ah,BYTE PTR [eax-0x1]
  4464a4:	sbb    eax,0x13ff851d
  4464a9:	adc    eax,DWORD PTR [ebx+0x1f0101be]
  4464af:	and    eax,DWORD PTR [eax]
	...
  4464c5:	add    BYTE PTR [eax],al
  4464c7:	add    bh,bh
  4464c9:	(bad)  
  4464ca:	inc    DWORD PTR [eax]
  4464cc:	(bad)  
  4464cd:	(bad)  
  4464ce:	inc    DWORD PTR [eax]
  4464d0:	(bad)  
  4464d1:	(bad)  
  4464d2:	inc    DWORD PTR [eax]
  4464d4:	(bad)  
  4464d5:	(bad)  
  4464d6:	inc    DWORD PTR [eax]
  4464d8:	(bad)  
  4464d9:	(bad)  
  4464da:	inc    DWORD PTR [eax]
  4464dc:	(bad)  
  4464dd:	(bad)  
  4464de:	inc    DWORD PTR [eax]
  4464e0:	(bad)  
  4464e1:	(bad)  
  4464e2:	inc    DWORD PTR [eax]
  4464e4:	add    BYTE PTR [eax],al
  4464e6:	push   es
  4464e7:	add    BYTE PTR [eax],al
  4464e9:	add    BYTE PTR [esi],al
  4464eb:	add    BYTE PTR [eax],al
  4464ed:	add    BYTE PTR [esi],al
  4464ef:	add    BYTE PTR [eax],al
  4464f1:	add    BYTE PTR [esi],al
  4464f3:	add    BYTE PTR [eax],al
  4464f5:	add    BYTE PTR [esi],al
  4464f7:	add    BYTE PTR [eax],al
  4464f9:	add    BYTE PTR [esi],al
  4464fb:	add    BYTE PTR [eax],al
  4464fd:	add    BYTE PTR ds:0x22010100,al
  446503:	sub    BYTE PTR [edx],dl
  446505:	adc    bh,BYTE PTR [eax-0x40]
  446508:	adc    al,0x14
  44650a:	jno    0x44650b
  44650c:	add    BYTE PTR [eax],al
  44650e:	push   esp
  44650f:	inc    DWORD PTR [eax]
  446511:	add    BYTE PTR [edi+edi*8+0x5],bl
  446515:	add    eax,0xf0fffa8
  44651a:	leave  
  44651b:	dec    DWORD PTR ds:0xbffa50d
  446521:	or     eax,DWORD PTR [ebx+0x640808ff]
  446527:	inc    DWORD PTR [esi]
  446529:	push   es
  44652a:	inc    ebp
  44652b:	inc    DWORD PTR [esp+eax*1]
  44652e:	sub    edi,edi
  446530:	add    DWORD PTR [ecx],eax
  446532:	or     eax,0xff
  446537:	inc    DWORD PTR [eax]
  446539:	add    BYTE PTR [eax],al
  44653b:	inc    DWORD PTR ds:0xdff3e05
  446541:	or     eax,0x1010ff99
  446546:	mov    edx,0xbd1010ff
  44654b:	call   DWORD PTR [eax]
  44654d:	adc    ch,al
  44654f:	dec    DWORD PTR [edi]
  446551:	(bad)  
  446553:	inc    DWORD PTR ds:0xffa905
  446559:	add    BYTE PTR [edi+edi*8+0x0],bl
  44655d:	add    BYTE PTR [edi+edi*8+0x13],dl
  446561:	adc    esi,DWORD PTR [edx-0x1]
  446564:	adc    DWORD PTR [ecx],edx
  446566:	ja     0x446526
  446568:	add    DWORD PTR [ecx],eax
  44656a:	push   ds
  44656b:	and    eax,0x0
  446570:	add    BYTE PTR [eax],al
  446572:	add    BYTE PTR [ecx],al
	...
  446588:	(bad)  
  446589:	(bad)  
  44658a:	inc    DWORD PTR [eax]
  44658c:	(bad)  
  44658d:	(bad)  
  44658e:	inc    DWORD PTR [eax]
  446590:	(bad)  
  446591:	(bad)  
  446592:	inc    DWORD PTR [eax]
  446594:	(bad)  
  446595:	(bad)  
  446596:	inc    DWORD PTR [eax]
  446598:	(bad)  
  446599:	(bad)  
  44659a:	inc    DWORD PTR [eax]
  44659c:	(bad)  
  44659d:	(bad)  
  44659e:	inc    DWORD PTR [eax]
  4465a0:	(bad)  
  4465a1:	(bad)  
  4465a2:	inc    DWORD PTR [eax]
	...
  4465c4:	add    DWORD PTR [ecx],eax
  4465c6:	and    DWORD PTR [ebx],esp
  4465c8:	or     cl,BYTE PTR [edx]
  4465ca:	gs mov dh,0x7
  4465cd:	pop    es
  4465ce:	push   edi
  4465cf:	cld    
  4465d0:	add    BYTE PTR [eax],al
  4465d2:	sub    edi,edi
  4465d4:	add    BYTE PTR [eax],al
  4465d6:	and    edi,edi
  4465d8:	add    al,BYTE PTR [edx]
  4465da:	and    edi,edi
  4465dc:	add    eax,DWORD PTR [ebx]
  4465de:	and    bh,bh
  4465e0:	add    eax,DWORD PTR [ebx]
  4465e2:	and    edi,edi
  4465e4:	add    al,0x4
  4465e6:	inc    DWORD PTR cs:0x7ff4105
  4465ed:	pop    es
  4465ee:	push   edx
  4465ef:	inc    DWORD PTR ds:0x2ff4005
  4465f5:	add    bl,BYTE PTR [eax]
  4465f7:	inc    DWORD PTR [ebx]
  4465f9:	add    esp,DWORD PTR [ebx]
  4465fb:	dec    DWORD PTR [edx]
  4465fd:	or     dh,BYTE PTR [ebx-0x1]
  446600:	(bad)  
  446601:	movzx  edi,di
  446604:	adc    DWORD PTR [ecx],edx
  446606:	int    0xff
  446608:	adc    dl,BYTE PTR [edx]
  44660a:	aam    0xff
  44660c:	adc    dl,BYTE PTR [edx]
  44660e:	jecxz  0x44660f
  446610:	or     DWORD PTR [ecx],ecx
  446612:	mov    ebp,0x620000ff
  446617:	inc    DWORD PTR [eax]
  446619:	add    BYTE PTR [eax-0x1],cl
  44661c:	or     BYTE PTR [eax],cl
  44661e:	pop    esi
  44661f:	cld    
  446620:	or     DWORD PTR [ecx],ecx
  446622:	gs mov ch,0x1
  446625:	add    DWORD PTR ds:0x21,ebx
  44662b:	add    BYTE PTR [eax],al
  44662d:	add    BYTE PTR [eax],al
  44662f:	add    DWORD PTR [eax],eax
	...
  446645:	add    BYTE PTR [eax],al
  446647:	add    bh,bh
  446649:	(bad)  
  44664a:	inc    DWORD PTR [eax]
  44664c:	(bad)  
  44664d:	(bad)  
  44664e:	inc    DWORD PTR [eax]
  446650:	(bad)  
  446651:	(bad)  
  446652:	inc    DWORD PTR [eax]
  446654:	(bad)  
  446655:	(bad)  
  446656:	inc    DWORD PTR [eax]
  446658:	(bad)  
  446659:	(bad)  
  44665a:	inc    DWORD PTR [eax]
  44665c:	(bad)  
  44665d:	(bad)  
  44665e:	inc    DWORD PTR [eax]
  446660:	(bad)  
  446661:	(bad)  
  446662:	inc    DWORD PTR [eax]
	...
  446680:	add    BYTE PTR [eax],al
  446682:	add    BYTE PTR [ecx],al
  446684:	add    BYTE PTR [eax],al
  446686:	add    BYTE PTR [eax],al
  446688:	add    BYTE PTR [eax],al
  44668a:	or     eax,0x1500002c
  44668f:	fiadd  DWORD PTR [eax]
  446691:	add    BYTE PTR [esi],cl
  446693:	std    
  446694:	add    BYTE PTR [eax],al
  446696:	sbb    bh,bh
  446698:	add    BYTE PTR [eax],al
  44669a:	xor    bh,bh
  44669c:	push   es
  44669d:	push   es
  44669e:	jb     0x44669f
  4466a0:	or     eax,0xfffa80d
  4466a5:	bsr    edi,edi
  4466a8:	adc    dl,BYTE PTR [edx]
  4466aa:	sar    bh,1
  4466ac:	adc    edx,DWORD PTR [ebx]
  4466ae:	(bad)  
  4466b0:	adc    DWORD PTR [ecx],edx
  4466b2:	(bad)  
  4466b5:	or     eax,0xe0eff92
  4466ba:	mov    eax,ds:0xd11111ff
  4466bf:	call   DWORD PTR [ebx]
  4466c1:	adc    ebx,ebp
  4466c3:	call   DWORD PTR [ebx]
  4466c5:	adc    esp,ebp
  4466c7:	call   DWORD PTR [ebx]
  4466c9:	adc    ebp,esi
  4466cb:	dec    DWORD PTR [edx]
  4466cd:	or     al,bh
  4466cf:	inc    DWORD PTR [eax]
  4466d1:	add    BYTE PTR [edi+edi*8+0x0],ah
  4466d5:	add    BYTE PTR [eax-0x1],al
  4466d8:	add    DWORD PTR [ecx],eax
  4466da:	dec    ebp
  4466db:	cmc    
  4466dc:	add    DWORD PTR [ecx],eax
  4466de:	push   eax
  4466df:	xchg   edi,eax
  4466e0:	add    BYTE PTR [eax],al
  4466e2:	sbb    DWORD PTR ds:0x0,edx
  4466e8:	add    BYTE PTR [eax],al
  4466ea:	add    BYTE PTR [ecx],al
	...
  446708:	(bad)  
  446709:	(bad)  
  44670a:	inc    DWORD PTR [eax]
  44670c:	(bad)  
  44670d:	(bad)  
  44670e:	inc    DWORD PTR [eax]
  446710:	(bad)  
  446711:	(bad)  
  446712:	inc    DWORD PTR [eax]
  446714:	(bad)  
  446715:	(bad)  
  446716:	inc    DWORD PTR [eax]
  446718:	(bad)  
  446719:	(bad)  
  44671a:	inc    DWORD PTR [eax]
  44671c:	(bad)  
  44671d:	(bad)  
  44671e:	inc    DWORD PTR [eax]
  446720:	(bad)  
  446721:	(bad)  
  446722:	inc    DWORD PTR [eax]
	...
  446744:	add    BYTE PTR [eax],al
  446746:	add    BYTE PTR [eax+eax*1],cl
  446749:	add    BYTE PTR [eax],al
  44674b:	mov    DWORD PTR [eax],eax
  44674d:	add    BYTE PTR [eax],al
  44674f:	test   al,0x0
  446751:	add    BYTE PTR [edi+esi*2],dh
  446754:	add    BYTE PTR [eax],al
  446756:	inc    esi
  446757:	fiadd  DWORD PTR [eax]
  446759:	add    BYTE PTR [edx],bh
  44675b:	cld    
  44675c:	add    BYTE PTR [eax],al
  44675e:	pop    esp
  44675f:	dec    DWORD PTR [ecx]
  446761:	or     DWORD PTR [ebp-0x10ecec01],edi
  446767:	call   DWORD PTR [esp+edx*1]
  44676a:	out    dx,eax
  44676b:	call   DWORD PTR ds:0x15ffea15
  446771:	adc    eax,0x1515ffea
  446776:	jmp    0x15ff:0xea1515ff
  44677d:	adc    eax,0x1414ffec
  446782:	bnd call DWORD PTR [edx]
  446785:	adc    dh,al
  446787:	dec    DWORD PTR [eax]
  446789:	or     BYTE PTR [ebx+0x5b0000ff],bh
  44678f:	inc    DWORD PTR [eax]
  446791:	add    BYTE PTR [ecx],bh
  446793:	cld    
  446794:	add    BYTE PTR [eax],al
  446796:	inc    ebp
  446797:	fld    DWORD PTR [eax]
  446799:	add    BYTE PTR [edi+0x60],al
  44679c:	add    BYTE PTR [eax],al
  44679e:	sbb    BYTE PTR [eax],al
  4467a0:	add    BYTE PTR [eax],al
  4467a2:	add    BYTE PTR [eax],al
  4467a4:	add    BYTE PTR [eax],al
  4467a6:	add    BYTE PTR [ecx],al
	...
  4467c8:	(bad)  
  4467c9:	(bad)  
  4467ca:	inc    DWORD PTR [eax]
  4467cc:	(bad)  
  4467cd:	(bad)  
  4467ce:	inc    DWORD PTR [eax]
  4467d0:	(bad)  
  4467d1:	(bad)  
  4467d2:	inc    DWORD PTR [eax]
  4467d4:	(bad)  
  4467d5:	(bad)  
  4467d6:	inc    DWORD PTR [eax]
  4467d8:	(bad)  
  4467d9:	(bad)  
  4467da:	inc    DWORD PTR [eax]
  4467dc:	(bad)  
  4467dd:	(bad)  
  4467de:	inc    DWORD PTR [eax]
  4467e0:	(bad)  
  4467e1:	(bad)  
  4467e2:	inc    DWORD PTR [eax]
	...
  446800:	add    BYTE PTR [eax],al
  446802:	add    BYTE PTR [ecx],cl
  446804:	add    BYTE PTR [eax],al
  446806:	add    BYTE PTR [ecx+0x0],dl
  446809:	add    BYTE PTR [eax],al
  44680b:	mov    bl,0x0
  44680d:	add    BYTE PTR [eax],al
  44680f:	adc    eax,0x0
  446814:	add    BYTE PTR [eax],al
  446816:	cmp    BYTE PTR [ebx],ah
  446818:	add    BYTE PTR [eax],al
  44681a:	cmp    bl,BYTE PTR [eax+eax*1+0xdf2f00]
  446821:	add    BYTE PTR [esi],bh
  446823:	in     eax,dx
  446824:	push   es
  446825:	push   es
  446826:	mov    ?,ebx
  446828:	or     eax,0x12ffda0d
  44682d:	adc    dh,dh
  44682f:	call   DWORD PTR [edx]
  446831:	adc    dh,bh
  446833:	call   DWORD PTR [edx]
  446835:	adc    dh,dh
  446837:	call   DWORD PTR [edx]
  446839:	adc    dh,bh
  44683b:	call   DWORD PTR [ebx]
  44683d:	adc    esi,ebx
  44683f:	dec    DWORD PTR [esi]
  446841:	push   cs
  446842:	aam    0xfe
  446844:	add    eax,0xf88c05
  446849:	add    BYTE PTR [eax-0x10],al
  44684c:	add    BYTE PTR [eax],al
  44684e:	xor    al,0xe1
  446850:	add    BYTE PTR [eax],al
  446852:	cmp    bl,BYTE PTR [ebx+0x21390000]
  446858:	add    BYTE PTR [eax],al
  44685a:	push   ss
	...
  446887:	add    bh,bh
  446889:	(bad)  
  44688a:	inc    DWORD PTR [eax]
  44688c:	(bad)  
  44688d:	(bad)  
  44688e:	inc    DWORD PTR [eax]
  446890:	(bad)  
  446891:	(bad)  
  446892:	inc    DWORD PTR [eax]
  446894:	(bad)  
  446895:	(bad)  
  446896:	inc    DWORD PTR [eax]
  446898:	(bad)  
  446899:	(bad)  
  44689a:	inc    DWORD PTR [eax]
  44689c:	(bad)  
  44689d:	(bad)  
  44689e:	inc    DWORD PTR [eax]
  4468a0:	(bad)  
  4468a1:	(bad)  
  4468a2:	inc    DWORD PTR [eax]
	...
  4468c0:	add    BYTE PTR [eax],al
  4468c2:	add    BYTE PTR [edx],bl
  4468c4:	add    BYTE PTR [eax],al
  4468c6:	add    BYTE PTR [ecx+0x0],bh
  4468c9:	add    BYTE PTR [eax],al
  4468cb:	lods   eax,DWORD PTR ds:[esi]
  4468cc:	add    BYTE PTR [eax],al
  4468ce:	add    BYTE PTR [ecx],al
  4468d0:	add    BYTE PTR [eax],al
  4468d2:	add    BYTE PTR [ecx],al
	...
  4468dc:	add    BYTE PTR [eax],al
  4468de:	inc    edi
  4468df:	pop    ds
  4468e0:	add    BYTE PTR [eax],al
  4468e2:	pop    edx
  4468e3:	add    BYTE PTR [eax],0x0
  4468e6:	js     0x4468cf
  4468e8:	add    BYTE PTR [eax],al
  4468ea:	int    0xff
  4468ec:	add    eax,DWORD PTR [ebx]
  4468ee:	idiv   bh
  4468f0:	add    al,BYTE PTR [edx]
  4468f2:	idiv   edi
  4468f4:	add    al,BYTE PTR [edx]
  4468f6:	idiv   edi
  4468f8:	add    eax,DWORD PTR [ebx]
  4468fa:	clc    
  4468fb:	inc    DWORD PTR [ebx]
  4468fd:	add    ebp,esi
  4468ff:	inc    DWORD PTR [eax]
  446901:	add    BYTE PTR [edx+0x590000fa],ch
  446907:	ret    
  446908:	add    BYTE PTR [eax],al
  44690a:	cmp    BYTE PTR [ebx+0x0],ch
  44690d:	add    BYTE PTR [edx],bl
  44690f:	and    eax,0x60000
  446914:	add    BYTE PTR [eax],al
  446916:	add    BYTE PTR [eax],al
  446918:	add    BYTE PTR [eax],al
  44691a:	add    BYTE PTR [ecx],al
	...
  446948:	(bad)  
  446949:	(bad)  
  44694a:	inc    DWORD PTR [eax]
  44694c:	(bad)  
  44694d:	(bad)  
  44694e:	inc    DWORD PTR [eax]
  446950:	(bad)  
  446951:	(bad)  
  446952:	inc    DWORD PTR [eax]
  446954:	(bad)  
  446955:	(bad)  
  446956:	inc    DWORD PTR [eax]
  446958:	(bad)  
  446959:	(bad)  
  44695a:	inc    DWORD PTR [eax]
  44695c:	(bad)  
  44695d:	(bad)  
  44695e:	inc    DWORD PTR [eax]
  446960:	(bad)  
  446961:	(bad)  
  446962:	inc    DWORD PTR [eax]
	...
  446980:	add    BYTE PTR [eax],al
  446982:	add    BYTE PTR [esi],bl
  446984:	add    BYTE PTR [eax],al
  446986:	add    BYTE PTR [ecx-0x55000000],cl
	...
  44699c:	add    BYTE PTR [eax],al
  44699e:	mov    ecx,0xff00002f
  4469a3:	pushf  
  4469a4:	add    BYTE PTR [eax],al
  4469a6:	push   edx
  4469a8:	add    BYTE PTR [eax],al
  4469aa:	icebp  
  4469ab:	inc    DWORD PTR [eax]
  4469ad:	add    cl,ah
  4469af:	inc    DWORD PTR [eax]
  4469b1:	add    ch,bl
  4469b3:	inc    DWORD PTR [eax]
  4469b5:	add    ch,bl
  4469b7:	inc    DWORD PTR [eax]
  4469b9:	add    dh,bl
  4469bb:	inc    DWORD PTR [eax]
  4469bd:	add    dh,ah
  4469bf:	inc    DWORD PTR [eax]
  4469c1:	add    ch,dh
  4469c3:	std    
  4469c4:	add    BYTE PTR [eax],al
  4469c6:	sti    
  4469c7:	enter  0x0,0xb7
  4469cb:	push   ebx
  4469cc:	add    BYTE PTR [eax],al
  4469ce:	inc    ebx
  4469cf:	or     BYTE PTR [eax],al
  4469d1:	add    BYTE PTR [ebp+0x0],al
	...
  446a08:	(bad)  
  446a09:	(bad)  
  446a0a:	inc    DWORD PTR [eax]
  446a0c:	(bad)  
  446a0d:	(bad)  
  446a0e:	inc    DWORD PTR [eax]
  446a10:	(bad)  
  446a11:	(bad)  
  446a12:	inc    DWORD PTR [eax]
  446a14:	(bad)  
  446a15:	(bad)  
  446a16:	inc    DWORD PTR [eax]
  446a18:	(bad)  
  446a19:	(bad)  
  446a1a:	inc    DWORD PTR [eax]
  446a1c:	(bad)  
  446a1d:	(bad)  
  446a1e:	inc    DWORD PTR [eax]
  446a20:	(bad)  
  446a21:	(bad)  
  446a22:	inc    DWORD PTR [eax]
	...
  446a40:	add    BYTE PTR [eax],al
  446a42:	add    BYTE PTR [ebx],bl
  446a44:	add    BYTE PTR [eax],al
  446a46:	add    BYTE PTR [edi-0x49000000],bl
	...
  446a58:	add    BYTE PTR [eax],al
  446a5a:	xlat   BYTE PTR ds:[ebx]
  446a5b:	push   ebp
  446a5c:	add    BYTE PTR [eax],al
  446a5e:	(bad)  
  446a5f:	jmp    0x2b6a64
  446a64:	add    BYTE PTR [eax],al
  446a66:	into   
  446a67:	inc    DWORD PTR [eax]
  446a69:	add    dl,al
  446a6b:	inc    DWORD PTR [eax]
  446a6d:	add    bl,al
  446a6f:	inc    DWORD PTR [eax]
  446a71:	add    esp,eax
  446a73:	inc    DWORD PTR [eax]
  446a75:	add    dl,al
  446a77:	inc    DWORD PTR [eax]
  446a79:	add    eax,esp
  446a7b:	inc    DWORD PTR [eax]
  446a7d:	add    bl,al
  446a7f:	inc    DWORD PTR [eax]
  446a81:	add    cl,cl
  446a83:	inc    DWORD PTR [eax]
  446a85:	add    ch,bl
  446a87:	inc    DWORD PTR [eax]
  446a89:	add    bh,bh
  446a8b:	inc    DWORD PTR [eax]
  446a8d:	add    bh,bh
  446a8f:	lea    eax,[eax]
  446a91:	add    bh,bh
  446a93:	adc    BYTE PTR [eax],al
	...
  446a9d:	add    BYTE PTR [eax],al
  446a9f:	or     al,0x0
  446aa1:	add    BYTE PTR [eax],al
  446aa3:	cmp    DWORD PTR [eax],eax
	...
  446ac5:	add    BYTE PTR [eax],al
  446ac7:	add    bh,bh
  446ac9:	(bad)  
  446aca:	inc    DWORD PTR [eax]
  446acc:	(bad)  
  446acd:	(bad)  
  446ace:	inc    DWORD PTR [eax]
  446ad0:	(bad)  
  446ad1:	(bad)  
  446ad2:	inc    DWORD PTR [eax]
  446ad4:	(bad)  
  446ad5:	(bad)  
  446ad6:	inc    DWORD PTR [eax]
  446ad8:	(bad)  
  446ad9:	(bad)  
  446ada:	inc    DWORD PTR [eax]
  446adc:	(bad)  
  446add:	(bad)  
  446ade:	inc    DWORD PTR [eax]
  446ae0:	(bad)  
  446ae1:	(bad)  
  446ae2:	inc    DWORD PTR [eax]
  446ae4:	add    BYTE PTR [eax],al
  446ae6:	pop    edi
  446ae7:	add    BYTE PTR [eax],al
  446ae9:	add    BYTE PTR [edi+0x0],bl
  446aec:	add    BYTE PTR [eax],al
  446aee:	pop    edi
  446aef:	add    BYTE PTR [eax],al
  446af1:	add    BYTE PTR [edi+0x0],bl
  446af4:	add    BYTE PTR [eax],al
  446af6:	pop    edi
	...
  446b03:	jb     0x446b05
  446b05:	add    BYTE PTR [eax],al
  446b07:	std    
  446b08:	add    BYTE PTR [eax],al
  446b0a:	add    bh,bh
  446b0c:	add    BYTE PTR [eax],al
  446b0e:	add    BYTE PTR [ebp+0x0],dh
  446b11:	add    BYTE PTR [eax],al
  446b13:	add    BYTE PTR [eax],al
  446b15:	add    bh,bh
  446b17:	aas    
  446b18:	add    BYTE PTR [eax],al
  446b1a:	std    
  446b1b:	call   0x186b20
  446b20:	add    BYTE PTR [edi],al
  446b22:	mov    edi,0xc81c00ff
  446b27:	inc    DWORD PTR [eax]
  446b29:	cmp    al,0xd8
  446b2b:	inc    DWORD PTR [edi]
  446b2d:	push   ebx
  446b2e:	loopne 0x446b2f
  446b30:	add    DWORD PTR [ecx],ecx
  446b32:	mov    esp,0xb60100ff
  446b37:	inc    DWORD PTR [edx+ebp*1]
  446b3a:	int3   
  446b3b:	inc    DWORD PTR [edx]
  446b3d:	push   esi
  446b3e:	loope  0x446b3f
  446b40:	add    BYTE PTR [eax],ch
  446b42:	sar    bh,1
  446b44:	add    BYTE PTR [ebx],dl
  446b46:	ret    
  446b47:	inc    DWORD PTR [eax]
  446b49:	add    al,cl
  446b4b:	inc    DWORD PTR [eax]
  446b4d:	add    bh,ah
  446b4f:	inc    BYTE PTR [eax]
  446b51:	add    bh,dh
  446b53:	jg     0x446b55
  446b55:	add    dl,bh
  446b57:	add    al,0x0
  446b59:	add    BYTE PTR [eax],al
  446b5b:	add    BYTE PTR [eax],al
  446b5d:	add    BYTE PTR [eax],al
  446b5f:	stos   DWORD PTR es:[edi],eax
  446b60:	add    BYTE PTR [eax],al
  446b62:	add    bh,bh
  446b64:	add    BYTE PTR [eax],al
  446b66:	add    cl,ah
  446b68:	add    BYTE PTR [eax],al
  446b6a:	add    BYTE PTR [esi],dh
  446b6c:	add    BYTE PTR [eax],al
  446b6e:	add    BYTE PTR [eax],al
  446b70:	add    BYTE PTR [eax],al
  446b72:	pop    esp
  446b73:	add    BYTE PTR [eax],al
  446b75:	add    BYTE PTR [eax+eax*1+0x0],bl
  446b79:	add    BYTE PTR [eax+eax*1+0x0],bl
  446b7d:	add    BYTE PTR [eax+eax*1+0x0],bl
  446b81:	add    BYTE PTR [eax+eax*1+0x0],bl
  446b85:	add    BYTE PTR [eax+eax*1-0x1],bl
  446b89:	(bad)  
  446b8a:	inc    DWORD PTR [eax]
  446b8c:	(bad)  
  446b8d:	(bad)  
  446b8e:	inc    DWORD PTR [eax]
  446b90:	(bad)  
  446b91:	(bad)  
  446b92:	inc    DWORD PTR [eax]
  446b94:	(bad)  
  446b95:	(bad)  
  446b96:	inc    DWORD PTR [eax]
  446b98:	(bad)  
  446b99:	(bad)  
  446b9a:	inc    DWORD PTR [eax]
  446b9c:	(bad)  
  446b9d:	(bad)  
  446b9e:	inc    DWORD PTR [eax]
  446ba0:	(bad)  
  446ba1:	(bad)  
  446ba2:	inc    DWORD PTR [eax]
  446ba4:	add    BYTE PTR [eax],al
  446ba6:	inc    DWORD PTR [eax]
  446ba8:	add    BYTE PTR [eax],al
  446baa:	inc    DWORD PTR [eax]
  446bac:	add    BYTE PTR [eax],al
  446bae:	inc    DWORD PTR [eax]
  446bb0:	add    BYTE PTR [eax],al
  446bb2:	inc    DWORD PTR [eax]
  446bb4:	add    BYTE PTR [eax],al
  446bb6:	inc    DWORD PTR [eax]
  446bb8:	add    BYTE PTR [eax],al
  446bba:	add    BYTE PTR [eax],al
  446bbc:	add    BYTE PTR [eax],al
  446bbe:	add    BYTE PTR [ecx],cl
  446bc0:	add    BYTE PTR [eax],al
  446bc2:	add    bh,dh
  446bc4:	add    BYTE PTR [eax],al
  446bc6:	add    bh,bh
  446bc8:	add    BYTE PTR [eax],al
  446bca:	add    bh,bh
  446bcc:	add    BYTE PTR [eax],al
  446bce:	add    bl,al
  446bd0:	add    BYTE PTR [eax],al
  446bd2:	icebp  
  446bd3:	adc    eax,0xbbf40000
  446bd8:	add    BYTE PTR [eax],al
  446bda:	iret   
  446bdb:	inc    DWORD PTR [eax]
  446bdd:	es sar edi,0x0
  446be1:	addr16 loope 0x446be3
  446be4:	add    BYTE PTR [ecx-0x2aeb0009],bl
  446bea:	(bad)  
  446beb:	call   FWORD PTR [ebx]
  446bed:	xchg   ah,ah
  446bef:	inc    DWORD PTR [edx]
  446bf1:	pop    es
  446bf2:	lods   eax,DWORD PTR ds:[esi]
  446bf3:	inc    DWORD PTR [eax]
  446bf5:	add    DWORD PTR [edx-0x40d0f501],ebp
  446bfb:	jmp    DWORD PTR [edx]
  446bfd:	(bad)  
  446bfe:	(bad)  
  446bff:	inc    DWORD PTR [ebx+edi*4]
  446c02:	(bad)  
  446c03:	inc    DWORD PTR [eax]
  446c05:	sub    dh,0xff
  446c08:	add    BYTE PTR [ebx-0x2f],cl
  446c0b:	inc    DWORD PTR [eax]
  446c0d:	or     al,0xc5
  446c0f:	inc    DWORD PTR [eax]
  446c11:	add    al,ch
  446c13:	in     al,dx
  446c14:	add    BYTE PTR [eax],al
  446c16:	repnz dec eax
  446c18:	add    BYTE PTR [eax],al
  446c1a:	add    BYTE PTR [eax],al
  446c1c:	add    BYTE PTR [eax],al
  446c1e:	add    cl,bh
  446c20:	add    BYTE PTR [eax],al
  446c22:	add    bh,bh
  446c24:	add    BYTE PTR [eax],al
  446c26:	add    bh,bh
  446c28:	add    BYTE PTR [eax],al
  446c2a:	add    bl,al
  446c2c:	add    BYTE PTR [eax],al
  446c2e:	add    BYTE PTR [eax],al
  446c30:	add    BYTE PTR [eax],al
  446c32:	inc    DWORD PTR [eax]
  446c34:	add    BYTE PTR [eax],al
  446c36:	inc    DWORD PTR [eax]
  446c38:	add    BYTE PTR [eax],al
  446c3a:	inc    DWORD PTR [eax]
  446c3c:	add    BYTE PTR [eax],al
  446c3e:	inc    DWORD PTR [eax]
  446c40:	add    BYTE PTR [eax],al
  446c42:	inc    DWORD PTR [eax]
  446c44:	add    BYTE PTR [eax],al
  446c46:	inc    DWORD PTR [eax]
  446c48:	(bad)  
  446c49:	(bad)  
  446c4a:	inc    DWORD PTR [eax]
  446c4c:	(bad)  
  446c4d:	(bad)  
  446c4e:	inc    DWORD PTR [eax]
  446c50:	(bad)  
  446c51:	(bad)  
  446c52:	inc    DWORD PTR [eax]
  446c54:	(bad)  
  446c55:	(bad)  
  446c56:	inc    DWORD PTR [eax]
  446c58:	(bad)  
  446c59:	(bad)  
  446c5a:	inc    DWORD PTR [eax]
  446c5c:	(bad)  
  446c5d:	(bad)  
  446c5e:	inc    DWORD PTR [eax]
  446c60:	(bad)  
  446c61:	(bad)  
  446c62:	inc    DWORD PTR [eax]
  446c64:	add    BYTE PTR [eax],al
  446c66:	repnz add BYTE PTR [eax],al
  446c69:	add    dl,dh
  446c6b:	add    BYTE PTR [eax],al
  446c6d:	add    dl,dh
  446c6f:	add    BYTE PTR [eax],al
  446c71:	add    dl,dh
  446c73:	add    BYTE PTR [eax],al
  446c75:	add    dl,dh
	...
  446c7f:	push   ds
  446c80:	add    BYTE PTR [eax],al
  446c82:	add    bh,bh
  446c84:	add    BYTE PTR [eax],al
  446c86:	add    bh,bh
  446c88:	add    BYTE PTR [eax],al
  446c8a:	add    bh,bh
  446c8c:	add    BYTE PTR [eax],al
  446c8e:	add    dl,dl
  446c90:	add    BYTE PTR [eax],al
  446c92:	hlt    
  446c93:	add    BYTE PTR [bx+si],al
  446c96:	xlat   BYTE PTR ds:[ebx]
  446c97:	cmc    
  446c98:	add    BYTE PTR [ecx],dh
  446c9a:	ret    
  446c9b:	inc    DWORD PTR [eax]
  446c9d:	mov    ah,0xee
  446c9f:	dec    DWORD PTR [ebx]
  446ca1:	call   0xf1726ca5
  446ca6:	(bad)  
  446ca7:	(bad)  
  446ca8:	cmp    al,0xaf
  446caa:	out    0xff,al
  446cac:	adc    DWORD PTR [edi],ebx
  446cae:	test   al,0xff
  446cb0:	add    BYTE PTR [eax],al
  446cb2:	sahf   
  446cb3:	inc    DWORD PTR [eax]
  446cb5:	add    BYTE PTR [edi-0x62fefc01],bl
  446cbb:	jmp    DWORD PTR [edi]
  446cbd:	pop    esp
  446cbe:	ret    0x3dff
  446cc1:	(bad)  
  446cc3:	call   FWORD PTR ds:0x2fffff0
  446cc9:	(bad)  
  446ccb:	inc    DWORD PTR [eax]
  446ccd:	jnp    0x446ca8
  446ccf:	inc    DWORD PTR [eax]
  446cd1:	or     ecx,ecx
  446cd3:	inc    DWORD PTR [eax]
  446cd5:	add    ah,ch
  446cd7:	mov    ds:0x17520000,eax
  446cdc:	add    BYTE PTR [eax],al
  446cde:	add    bh,bh
  446ce0:	add    BYTE PTR [eax],al
  446ce2:	add    bh,bh
  446ce4:	add    BYTE PTR [eax],al
  446ce6:	add    bh,bh
  446ce8:	add    BYTE PTR [eax],al
  446cea:	add    cl,ah
  446cec:	add    BYTE PTR [eax],al
  446cee:	add    BYTE PTR [eax],al
  446cf0:	add    BYTE PTR [eax],al
  446cf2:	jmp    0x0:0xea000000
  446cf9:	add    dl,ch
  446cfb:	add    BYTE PTR [eax],al
  446cfd:	add    dl,ch
  446cff:	add    BYTE PTR [eax],al
  446d01:	add    dl,ch
  446d03:	add    BYTE PTR [eax],al
  446d05:	add    dl,ch
  446d07:	add    bh,bh
  446d09:	(bad)  
  446d0a:	inc    DWORD PTR [eax]
  446d0c:	(bad)  
  446d0d:	(bad)  
  446d0e:	inc    DWORD PTR [eax]
  446d10:	(bad)  
  446d11:	(bad)  
  446d12:	inc    DWORD PTR [eax]
  446d14:	(bad)  
  446d15:	(bad)  
  446d16:	inc    DWORD PTR [eax]
  446d18:	(bad)  
  446d19:	(bad)  
  446d1a:	inc    DWORD PTR [eax]
  446d1c:	(bad)  
  446d1d:	(bad)  
  446d1e:	inc    DWORD PTR [eax]
  446d20:	(bad)  
  446d21:	(bad)  
  446d22:	inc    DWORD PTR [eax]
  446d24:	add    BYTE PTR [eax],al
  446d26:	in     eax,dx
  446d27:	add    BYTE PTR [eax],al
  446d29:	add    ch,ch
  446d2b:	add    BYTE PTR [eax],al
  446d2d:	add    ch,ch
  446d2f:	add    BYTE PTR [eax],al
  446d31:	add    ch,ch
  446d33:	add    BYTE PTR [eax],al
  446d35:	add    ch,ch
	...
  446d3f:	push   ds
  446d40:	add    BYTE PTR [eax],al
  446d42:	add    bh,bh
  446d44:	add    BYTE PTR [eax],al
  446d46:	add    bh,bh
  446d48:	add    BYTE PTR [eax],al
  446d4a:	add    bh,bh
  446d4c:	add    BYTE PTR [eax],al
  446d4e:	add    ebx,edx
  446d50:	add    BYTE PTR [eax],al
  446d52:	jmp    0xb8446dfe
  446d57:	inc    DWORD PTR [ecx]
  446d59:	addr16 int3 
  446d5b:	call   DWORD PTR [ebx]
  446d5d:	(bad)  
  446d5e:	icebp  
  446d5f:	push   DWORD PTR [eax]
  446d61:	mov    dh,0xe4
  446d63:	(bad)  
  446d64:	cmp    edi,DWORD PTR [eax-0x38]
  446d67:	call   FWORD PTR [ecx]
  446d69:	sbb    al,0x9c
  446d6b:	inc    DWORD PTR [eax]
  446d6d:	add    BYTE PTR [esi-0x6dffff01],cl
  446d73:	inc    DWORD PTR [eax]
  446d75:	add    BYTE PTR [edx-0x6effff01],dl
  446d7b:	inc    DWORD PTR ds:0x2dff8f00
  446d81:	inc    edi
  446d82:	mov    al,0xff
  446d84:	cmp    bl,BYTE PTR [ecx-0x38dc0029]
  446d8a:	in     eax,dx
  446d8b:	dec    DWORD PTR [ecx]
  446d8d:	stos   DWORD PTR es:[edi],eax
  446d8e:	in     eax,0xff
  446d90:	add    BYTE PTR [esp+edi*4],ah
  446d93:	inc    DWORD PTR [eax]
  446d95:	add    ch,dl
  446d97:	fadd   DWORD PTR [eax]
  446d99:	add    BYTE PTR [ecx+eax*2-0x1000000],bh
  446da0:	add    BYTE PTR [eax],al
  446da2:	add    bh,bh
  446da4:	add    BYTE PTR [eax],al
  446da6:	add    bh,bh
  446da8:	add    BYTE PTR [eax],al
  446daa:	add    cl,ah
  446dac:	add    BYTE PTR [eax],al
  446dae:	add    BYTE PTR [eax],al
  446db0:	add    BYTE PTR [eax],al
  446db2:	test   DWORD PTR [eax],0xf70000
  446db8:	add    BYTE PTR [eax],al
  446dba:	test   DWORD PTR [eax],0xf70000
  446dc0:	add    BYTE PTR [eax],al
  446dc2:	test   DWORD PTR [eax],0xf70000
  446dc8:	(bad)  
  446dc9:	(bad)  
  446dca:	inc    DWORD PTR [eax]
  446dcc:	(bad)  
  446dcd:	(bad)  
  446dce:	inc    DWORD PTR [eax]
  446dd0:	(bad)  
  446dd1:	(bad)  
  446dd2:	inc    DWORD PTR [eax]
  446dd4:	(bad)  
  446dd5:	(bad)  
  446dd6:	inc    DWORD PTR [eax]
  446dd8:	(bad)  
  446dd9:	(bad)  
  446dda:	inc    DWORD PTR [eax]
  446ddc:	(bad)  
  446ddd:	(bad)  
  446dde:	inc    DWORD PTR [eax]
  446de0:	(bad)  
  446de1:	(bad)  
  446de2:	inc    DWORD PTR [eax]
  446de4:	add    BYTE PTR [eax],al
  446de6:	in     al,0x0
  446de8:	add    BYTE PTR [eax],al
  446dea:	in     al,0x0
  446dec:	add    BYTE PTR [eax],al
  446dee:	in     al,0x0
  446df0:	add    BYTE PTR [eax],al
  446df2:	in     al,0x0
  446df4:	add    BYTE PTR [eax],al
  446df6:	in     al,0x0
  446df8:	add    BYTE PTR [eax],al
  446dfa:	add    BYTE PTR [eax],al
  446dfc:	add    BYTE PTR [eax],al
  446dfe:	add    BYTE PTR [esi],bl
  446e00:	add    BYTE PTR [eax],al
  446e02:	add    bh,bh
  446e04:	add    BYTE PTR [eax],al
  446e06:	add    bh,bh
  446e08:	add    BYTE PTR [eax],al
  446e0a:	add    bh,bh
  446e0c:	add    BYTE PTR [eax],al
  446e0e:	add    ebp,eax
  446e10:	add    BYTE PTR [eax],al
  446e12:	xlat   BYTE PTR ds:[ebx]
  446e13:	lds    eax,FWORD PTR [eax]
  446e15:	add    BYTE PTR [esi-0x68e0fe01],ah
  446e1b:	dec    DWORD PTR ds:0x16ff982f
  446e21:	and    BYTE PTR [eax-0x7dfffa01],dl
  446e27:	inc    DWORD PTR [eax]
  446e29:	add    BYTE PTR [edi-0x1],bh
  446e2c:	add    BYTE PTR [eax],al
  446e2e:	test   bh,bh
  446e30:	add    BYTE PTR [eax],al
  446e32:	test   bh,bh
  446e34:	add    BYTE PTR [eax],al
  446e36:	test   bh,bh
  446e38:	add    BYTE PTR [eax],al
  446e3a:	test   edi,edi
  446e3c:	add    BYTE PTR [eax],al
  446e3e:	cmp    edi,0x0
  446e41:	add    BYTE PTR [ebp-0x1],bh
  446e44:	prefetchw BYTE PTR [eax-0x6ad5eb01]
  446e4b:	inc    DWORD PTR [esi]
  446e4d:	sub    eax,0x1000ff99
  446e52:	sahf   
  446e53:	inc    DWORD PTR [eax]
  446e55:	add    cl,al
  446e57:	stc    
  446e58:	add    BYTE PTR [eax],al
  446e5a:	mov    WORD PTR [ebx-0x1000000],es
  446e60:	add    BYTE PTR [eax],al
  446e62:	add    bh,bh
  446e64:	add    BYTE PTR [eax],al
  446e66:	add    bh,bh
  446e68:	add    BYTE PTR [eax],al
  446e6a:	add    cl,ah
  446e6c:	add    BYTE PTR [eax],al
  446e6e:	add    BYTE PTR [eax],al
  446e70:	add    BYTE PTR [eax],al
  446e72:	inc    DWORD PTR [eax]
  446e74:	add    BYTE PTR [eax],al
  446e76:	inc    DWORD PTR [eax]
  446e78:	add    BYTE PTR [eax],al
  446e7a:	inc    DWORD PTR [eax]
  446e7c:	add    BYTE PTR [eax],al
  446e7e:	inc    DWORD PTR [eax]
  446e80:	add    BYTE PTR [eax],al
  446e82:	inc    DWORD PTR [eax]
  446e84:	add    BYTE PTR [eax],al
  446e86:	inc    DWORD PTR [eax]
  446e88:	(bad)  
  446e89:	(bad)  
  446e8a:	inc    DWORD PTR [eax]
  446e8c:	(bad)  
  446e8d:	(bad)  
  446e8e:	inc    DWORD PTR [eax]
  446e90:	(bad)  
  446e91:	(bad)  
  446e92:	inc    DWORD PTR [eax]
  446e94:	(bad)  
  446e95:	(bad)  
  446e96:	inc    DWORD PTR [eax]
  446e98:	(bad)  
  446e99:	(bad)  
  446e9a:	inc    DWORD PTR [eax]
  446e9c:	(bad)  
  446e9d:	(bad)  
  446e9e:	inc    DWORD PTR [eax]
  446ea0:	(bad)  
  446ea1:	(bad)  
  446ea2:	inc    DWORD PTR [eax]
  446ea4:	add    BYTE PTR [eax],al
  446ea6:	fld    QWORD PTR [eax]
  446ea8:	add    BYTE PTR [eax],al
  446eaa:	fld    QWORD PTR [eax]
  446eac:	add    BYTE PTR [eax],al
  446eae:	fld    QWORD PTR [eax]
  446eb0:	add    BYTE PTR [eax],al
  446eb2:	fld    QWORD PTR [eax]
  446eb4:	add    BYTE PTR [eax],al
  446eb6:	fld    QWORD PTR [eax]
  446eb8:	add    BYTE PTR [eax],al
  446eba:	add    BYTE PTR [eax],al
  446ebc:	add    BYTE PTR [eax],al
  446ebe:	add    BYTE PTR [esi],bl
  446ec0:	add    BYTE PTR [eax],al
  446ec2:	add    bh,bh
  446ec4:	add    BYTE PTR [eax],al
  446ec6:	add    bh,bh
  446ec8:	add    BYTE PTR [eax],al
  446eca:	add    bh,bh
  446ecc:	add    BYTE PTR [eax],al
  446ece:	add    eax,0xc90000ea
  446ed3:	rol    DWORD PTR [eax],cl
  446ed5:	add    BYTE PTR [ebp+0x750000ff],dl
  446edb:	inc    DWORD PTR [eax]
  446edd:	add    BYTE PTR [ebp-0x1],ch
  446ee0:	add    BYTE PTR [eax],al
  446ee2:	outs   dx,DWORD PTR ds:[esi]
  446ee3:	inc    DWORD PTR [eax]
  446ee5:	add    BYTE PTR [edi+edi*8+0x1],dh
  446ee9:	add    DWORD PTR [edi-0x1],esi
  446eec:	add    DWORD PTR [ecx],eax
  446eee:	ja     0x446eef
  446ef0:	add    DWORD PTR [ecx],eax
  446ef2:	ja     0x446ef3
  446ef4:	add    DWORD PTR [ecx],eax
  446ef6:	ja     0x446ef7
  446ef8:	add    al,BYTE PTR [edx]
  446efa:	ja     0x446efb
  446efc:	add    DWORD PTR [ecx],eax
  446efe:	ja     0x446eff
  446f00:	add    BYTE PTR [eax],al
  446f02:	jbe    0x446f03
  446f04:	add    BYTE PTR [eax],al
  446f06:	jno    0x446f07
  446f08:	add    BYTE PTR [eax],al
  446f0a:	ins    DWORD PTR es:[edi],dx
  446f0b:	inc    DWORD PTR [eax]
  446f0d:	add    BYTE PTR [edi-0x1],ch
  446f10:	add    BYTE PTR [eax],al
  446f12:	cmp    edi,0x0
  446f15:	add    BYTE PTR [edi+edi*8-0x71710000],dh
  446f1c:	add    BYTE PTR [eax],al
  446f1e:	add    bh,bh
  446f20:	add    BYTE PTR [eax],al
  446f22:	add    bh,bh
  446f24:	add    BYTE PTR [eax],al
  446f26:	add    bh,bh
  446f28:	add    BYTE PTR [eax],al
  446f2a:	add    cl,ah
  446f2c:	add    BYTE PTR [eax],al
  446f2e:	add    BYTE PTR [eax],al
  446f30:	add    BYTE PTR [eax],al
  446f32:	in     al,dx
  446f33:	add    BYTE PTR [eax],al
  446f35:	add    ah,ch
  446f37:	add    BYTE PTR [eax],al
  446f39:	add    ah,ch
  446f3b:	add    BYTE PTR [eax],al
  446f3d:	add    ah,ch
  446f3f:	add    BYTE PTR [eax],al
  446f41:	add    ah,ch
  446f43:	add    BYTE PTR [eax],al
  446f45:	add    ah,ch
  446f47:	add    bh,bh
  446f49:	(bad)  
  446f4a:	inc    DWORD PTR [eax]
  446f4c:	(bad)  
  446f4d:	(bad)  
  446f4e:	inc    DWORD PTR [eax]
  446f50:	(bad)  
  446f51:	(bad)  
  446f52:	inc    DWORD PTR [eax]
  446f54:	(bad)  
  446f55:	(bad)  
  446f56:	inc    DWORD PTR [eax]
  446f58:	(bad)  
  446f59:	(bad)  
  446f5a:	inc    DWORD PTR [eax]
  446f5c:	(bad)  
  446f5d:	(bad)  
  446f5e:	inc    DWORD PTR [eax]
  446f60:	(bad)  
  446f61:	(bad)  
  446f62:	inc    DWORD PTR [eax]
  446f64:	add    BYTE PTR [eax],al
  446f66:	xlat   BYTE PTR ds:[ebx]
  446f67:	add    BYTE PTR [eax],al
  446f69:	add    bh,dl
  446f6b:	add    BYTE PTR [eax],al
  446f6d:	add    bh,dl
  446f6f:	add    BYTE PTR [eax],al
  446f71:	add    bh,dl
  446f73:	add    BYTE PTR [eax],al
  446f75:	add    bh,dl
	...
  446f7f:	add    eax,DWORD PTR [eax]
  446f81:	add    BYTE PTR [eax],al
  446f83:	loope  0x446f85
  446f85:	add    BYTE PTR [eax],al
  446f87:	inc    DWORD PTR [eax]
  446f89:	add    BYTE PTR [eax],al
  446f8b:	inc    DWORD PTR [eax]
  446f8d:	add    BYTE PTR [ecx],cl
  446f8f:	fadd   QWORD PTR [eax]
  446f91:	add    BYTE PTR [edi-0x79ffff2b],bh
  446f97:	inc    DWORD PTR [eax]
  446f99:	add    BYTE PTR [edx-0x1],ch
  446f9c:	add    BYTE PTR [eax],al
  446f9e:	inc    DWORD PTR [bp+di]
  446fa1:	add    ebp,DWORD PTR [ecx-0x1]
  446fa4:	add    eax,0x5ff6a05
  446fa9:	add    eax,0x505ff6a
  446fae:	push   0xffffffff
  446fb0:	add    eax,0x5ff6a05
  446fb5:	add    eax,0x505ff6a
  446fba:	push   0xffffffff
  446fbc:	push   es
  446fbd:	push   es
  446fbe:	imul   edi,edi,0x6
  446fc1:	push   es
  446fc2:	imul   edi,edi,0x5
  446fc5:	add    eax,0xff6a
  446fca:	inc    WORD PTR [eax]
  446fcd:	add    BYTE PTR [edi-0x1],ah
  446fd0:	add    BYTE PTR [eax],al
  446fd2:	js     0x446fd3
  446fd4:	add    BYTE PTR [eax],al
  446fd6:	test   eax,0x990000ff
  446fdb:	mov    DWORD PTR [eax],eax
  446fdd:	add    BYTE PTR [eax],al
  446fdf:	std    
  446fe0:	add    BYTE PTR [eax],al
  446fe2:	add    bh,bh
  446fe4:	add    BYTE PTR [eax],al
  446fe6:	add    bh,bh
  446fe8:	add    BYTE PTR [eax],al
  446fea:	add    BYTE PTR [eax+0x0],ch
  446ff0:	add    BYTE PTR [eax],al
  446ff2:	fld    QWORD PTR [eax]
  446ff4:	add    BYTE PTR [eax],al
  446ff6:	fld    QWORD PTR [eax]
  446ff8:	add    BYTE PTR [eax],al
  446ffa:	fld    QWORD PTR [eax]
  446ffc:	add    BYTE PTR [eax],al
  446ffe:	fld    QWORD PTR [eax]
  447000:	add    BYTE PTR [eax],al
  447002:	fld    QWORD PTR [eax]
  447004:	add    BYTE PTR [eax],al
  447006:	fld    QWORD PTR [eax]
  447008:	(bad)  
  447009:	(bad)  
  44700a:	inc    DWORD PTR [eax]
  44700c:	(bad)  
  44700d:	(bad)  
  44700e:	inc    DWORD PTR [eax]
  447010:	(bad)  
  447011:	(bad)  
  447012:	inc    DWORD PTR [eax]
  447014:	(bad)  
  447015:	(bad)  
  447016:	inc    DWORD PTR [eax]
  447018:	(bad)  
  447019:	(bad)  
  44701a:	inc    DWORD PTR [eax]
  44701c:	(bad)  
  44701d:	(bad)  
  44701e:	inc    DWORD PTR [eax]
  447020:	(bad)  
  447021:	(bad)  
  447022:	inc    DWORD PTR [eax]
  447024:	add    BYTE PTR [eax],al
  447026:	rol    BYTE PTR [eax],cl
  447028:	add    BYTE PTR [eax],al
  44702a:	rol    BYTE PTR [eax],cl
  44702c:	add    BYTE PTR [eax],al
  44702e:	rol    BYTE PTR [eax],cl
  447030:	add    BYTE PTR [eax],al
  447032:	rol    BYTE PTR [eax],cl
  447034:	add    BYTE PTR [eax],al
  447036:	rol    BYTE PTR [eax],cl
	...
  447040:	add    BYTE PTR [eax],al
  447042:	add    BYTE PTR [edi],ah
  447044:	add    BYTE PTR [eax],al
  447046:	add    al,al
  447048:	add    BYTE PTR [eax],al
  44704a:	add    bh,bh
  44704c:	add    BYTE PTR [eax],al
  44704e:	push   ss
  44704f:	stos   BYTE PTR es:[edi],al
  447050:	add    BYTE PTR [eax],al
  447052:	mov    ebx,0x7f0000cb
  447057:	inc    DWORD PTR [eax]
  447059:	add    BYTE PTR [ebp-0x1],bl
  44705c:	pop    es
  44705d:	pop    es
  44705e:	pop    esp
  44705f:	dec    DWORD PTR ds:0xdff600d
  447065:	or     eax,0xd0dff61
  44706a:	popa   
  44706b:	dec    DWORD PTR ds:0xdff610d
  447071:	or     eax,0xd0dff61
  447076:	popa   
  447077:	dec    DWORD PTR ds:0xeff610d
  44707d:	push   cs
  44707e:	(bad)  
  44707f:	dec    DWORD PTR [esi]
  447081:	push   cs
  447082:	(bad)  
  447083:	call   DWORD PTR [eax]
  447085:	adc    BYTE PTR [ebx-0x1],ah
  447088:	or     al,0xc
  44708a:	pop    edi
  44708b:	inc    DWORD PTR [ecx]
  44708d:	add    DWORD PTR [edx-0x1],ebx
  447090:	add    BYTE PTR [eax],al
  447092:	outs   dx,BYTE PTR ds:[esi]
  447093:	inc    DWORD PTR [eax]
  447095:	add    BYTE PTR [ebx-0x6bffff01],ah
  44709b:	test   DWORD PTR [eax],eax
  44709d:	add    BYTE PTR [eax],al
  44709f:	cmc    
  4470a0:	add    BYTE PTR [eax],al
  4470a2:	add    dh,bh
  4470a4:	add    BYTE PTR [eax],al
  4470a6:	add    BYTE PTR [eax+0xf000000],dl
  4470ac:	add    BYTE PTR [eax],al
  4470ae:	add    BYTE PTR [eax],al
  4470b0:	add    BYTE PTR [eax],al
  4470b2:	clc    
  4470b3:	add    BYTE PTR [eax],al
  4470b5:	add    al,bh
  4470b7:	add    BYTE PTR [eax],al
  4470b9:	add    al,bh
  4470bb:	add    BYTE PTR [eax],al
  4470bd:	add    al,bh
  4470bf:	add    BYTE PTR [eax],al
  4470c1:	add    al,bh
  4470c3:	add    BYTE PTR [eax],al
  4470c5:	add    al,bh
  4470c7:	add    bh,bh
  4470c9:	(bad)  
  4470ca:	inc    DWORD PTR [eax]
  4470cc:	(bad)  
  4470cd:	(bad)  
  4470ce:	inc    DWORD PTR [eax]
  4470d0:	(bad)  
  4470d1:	(bad)  
  4470d2:	inc    DWORD PTR [eax]
  4470d4:	(bad)  
  4470d5:	(bad)  
  4470d6:	inc    DWORD PTR [eax]
  4470d8:	(bad)  
  4470d9:	(bad)  
  4470da:	inc    DWORD PTR [eax]
  4470dc:	(bad)  
  4470dd:	(bad)  
  4470de:	inc    DWORD PTR [eax]
  4470e0:	(bad)  
  4470e1:	(bad)  
  4470e2:	inc    DWORD PTR [eax]
  4470e4:	add    BYTE PTR [eax],al
  4470e6:	rol    DWORD PTR [eax],cl
  4470e8:	add    BYTE PTR [eax],al
  4470ea:	rol    DWORD PTR [eax],cl
  4470ec:	add    BYTE PTR [eax],al
  4470ee:	rol    DWORD PTR [eax],cl
  4470f0:	add    BYTE PTR [eax],al
  4470f2:	rol    DWORD PTR [eax],cl
  4470f4:	add    BYTE PTR [eax],al
  4470f6:	rol    DWORD PTR [eax],cl
	...
  447108:	add    BYTE PTR [eax],al
  44710a:	add    bh,ch
  44710c:	add    BYTE PTR [eax],al
  44710e:	or     BYTE PTR [esi-0x4a400000],dl
  447114:	add    BYTE PTR [eax],al
  447116:	jg     0x447117
  447118:	push   es
  447119:	push   es
  44711a:	pop    ecx
  44711b:	call   DWORD PTR [edi]
  44711d:	pop    ss
  44711e:	pop    edx
  44711f:	call   FWORD PTR [edx]
  447121:	sbb    bl,BYTE PTR [ebx-0x1]
  447124:	sbb    DWORD PTR [ecx],ebx
  447126:	pop    ebx
  447127:	call   FWORD PTR [ecx]
  447129:	sbb    DWORD PTR [ebx-0x1],ebx
  44712c:	sbb    DWORD PTR [ecx],ebx
  44712e:	pop    ebx
  44712f:	call   FWORD PTR [ecx]
  447131:	sbb    DWORD PTR [ebx-0x1],ebx
  447134:	sbb    DWORD PTR [ecx],ebx
  447136:	pop    ebx
  447137:	call   FWORD PTR [ecx]
  447139:	sbb    DWORD PTR [edi+edi*8+0x19],ebx
  44713d:	sbb    DWORD PTR [edi+edi*8+0x1a],ebx
  447141:	sbb    bl,BYTE PTR [esi-0x1]
  447144:	sbb    al,0x1c
  447146:	pop    esi
  447147:	call   FWORD PTR ds:0xeff5e1d
  44714d:	push   cs
  44714e:	pop    ecx
  44714f:	inc    DWORD PTR [eax]
  447151:	add    BYTE PTR [ebx-0x1],ch
  447154:	add    BYTE PTR [eax],al
  447156:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  447157:	in     eax,0x0
  447159:	add    BYTE PTR [ebx+0x7a],ah
  44715c:	add    BYTE PTR [eax],al
  44715e:	add    dl,dh
  447160:	add    BYTE PTR [eax],al
  447162:	add    ah,bl
	...
  447170:	add    BYTE PTR [eax],al
  447172:	inc    DWORD PTR [eax]
  447174:	add    BYTE PTR [eax],al
  447176:	inc    DWORD PTR [eax]
  447178:	add    BYTE PTR [eax],al
  44717a:	inc    DWORD PTR [eax]
  44717c:	add    BYTE PTR [eax],al
  44717e:	inc    DWORD PTR [eax]
  447180:	add    BYTE PTR [eax],al
  447182:	inc    DWORD PTR [eax]
  447184:	add    BYTE PTR [eax],al
  447186:	inc    DWORD PTR [eax]
  447188:	(bad)  
  447189:	(bad)  
  44718a:	inc    DWORD PTR [eax]
  44718c:	(bad)  
  44718d:	(bad)  
  44718e:	inc    DWORD PTR [eax]
  447190:	(bad)  
  447191:	(bad)  
  447192:	inc    DWORD PTR [eax]
  447194:	(bad)  
  447195:	(bad)  
  447196:	inc    DWORD PTR [eax]
  447198:	(bad)  
  447199:	(bad)  
  44719a:	inc    DWORD PTR [eax]
  44719c:	(bad)  
  44719d:	(bad)  
  44719e:	inc    DWORD PTR [eax]
  4471a0:	(bad)  
  4471a1:	(bad)  
  4471a2:	inc    DWORD PTR [eax]
  4471a4:	add    BYTE PTR [eax],al
  4471a6:	ret    0x0
  4471a9:	add    dl,al
  4471ab:	add    BYTE PTR [eax],al
  4471ad:	add    dl,al
  4471af:	add    BYTE PTR [eax],al
  4471b1:	add    dl,al
  4471b3:	add    BYTE PTR [eax],al
  4471b5:	add    dl,al
  4471b7:	add    BYTE PTR [eax],al
  4471b9:	add    dl,al
  4471bb:	add    BYTE PTR [eax],al
  4471bd:	add    dl,al
  4471bf:	add    BYTE PTR [eax],al
  4471c1:	add    dl,al
  4471c3:	add    BYTE PTR [eax],al
  4471c5:	add    dl,al
  4471c7:	add    BYTE PTR [eax],al
  4471c9:	add    BYTE PTR [eax],al
  4471cb:	iret   
  4471cc:	add    BYTE PTR [eax],al
  4471ce:	add    BYTE PTR [eax+eax*1+0x85b300],bh
  4471d5:	add    BYTE PTR [ebp+0x631313ff],cl
  4471db:	jmp    FWORD PTR [ecx]
  4471dd:	sub    DWORD PTR [esi-0x1],ebx
  4471e0:	sub    DWORD PTR [ecx],ebp
  4471e2:	pop    ebx
  4471e3:	jmp    FWORD PTR [eax]
  4471e5:	sub    BYTE PTR [edx-0x1],bl
  4471e8:	sub    BYTE PTR [eax],ch
  4471ea:	pop    edx
  4471eb:	jmp    FWORD PTR [eax]
  4471ed:	sub    BYTE PTR [edx-0x1],bl
  4471f0:	sub    BYTE PTR [eax],ch
  4471f2:	pop    ebx
  4471f3:	jmp    FWORD PTR [eax]
  4471f5:	sub    BYTE PTR [ebx-0x1],bl
  4471f8:	sub    DWORD PTR [ecx],ebp
  4471fa:	pop    ebx
  4471fb:	jmp    FWORD PTR [ecx]
  4471fd:	sub    DWORD PTR [ebx-0x1],ebx
  447200:	sub    DWORD PTR [ecx],ebp
  447202:	pop    esp
  447203:	jmp    FWORD PTR [ebx]
  447205:	sub    ebx,DWORD PTR [edi+edi*8+0x2e]
  447209:	cs pop edi
  44720b:	call   FWORD PTR [esi]
  44720d:	push   ds
  44720e:	pop    edi
  44720f:	inc    DWORD PTR [eax]
  447211:	add    BYTE PTR [edi-0x1],dh
  447214:	add    BYTE PTR [eax],al
  447216:	mov    eax,0x120000b8
  44721b:	js     0x44721d
  44721d:	add    BYTE PTR [eax],al
  44721f:	test   DWORD PTR [eax],0xb60000
  447225:	add    ch,dl
  447227:	add    BYTE PTR [eax],al
  447229:	add    ch,dl
  44722b:	add    BYTE PTR [eax],al
  44722d:	add    ch,dl
  44722f:	add    BYTE PTR [eax],al
  447231:	add    ch,dl
  447233:	add    BYTE PTR [eax],al
  447235:	add    ch,dl
  447237:	add    BYTE PTR [eax],al
  447239:	add    ch,dl
  44723b:	add    BYTE PTR [eax],al
  44723d:	add    ch,dl
  44723f:	add    BYTE PTR [eax],al
  447241:	add    ch,dl
  447243:	add    BYTE PTR [eax],al
  447245:	add    ch,dl
  447247:	add    bh,bh
  447249:	(bad)  
  44724a:	inc    DWORD PTR [eax]
  44724c:	(bad)  
  44724d:	(bad)  
  44724e:	inc    DWORD PTR [eax]
  447250:	(bad)  
  447251:	(bad)  
  447252:	inc    DWORD PTR [eax]
  447254:	(bad)  
  447255:	(bad)  
  447256:	inc    DWORD PTR [eax]
  447258:	(bad)  
  447259:	(bad)  
  44725a:	inc    DWORD PTR [eax]
  44725c:	(bad)  
  44725d:	(bad)  
  44725e:	inc    DWORD PTR [eax]
  447260:	(bad)  
  447261:	(bad)  
  447262:	inc    DWORD PTR [eax]
  447264:	add    BYTE PTR [eax],al
  447266:	mov    edi,0xbf000000
  44726b:	add    BYTE PTR [eax],al
  44726d:	add    BYTE PTR [edi-0x41000000],bh
  447273:	add    BYTE PTR [eax],al
  447275:	add    BYTE PTR [edi-0x41000000],bh
  44727b:	add    BYTE PTR [eax],al
  44727d:	add    BYTE PTR [edi-0x41000000],bh
  447283:	add    BYTE PTR [eax],al
  447285:	add    BYTE PTR [edi+0x0],bh
  44728b:	mov    eax,ds:0xeb000000
  447290:	add    BYTE PTR [eax],al
  447292:	dec    edi
  447293:	pop    esp
  447294:	add    BYTE PTR [eax],al
  447296:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  447297:	rcr    DWORD PTR [ebx],1
  447299:	sbb    edi,DWORD PTR [eax-0x1]
  44729c:	cmp    DWORD PTR [ecx],edi
  44729e:	push   0x5e3838ff
  4472a3:	(bad)  
  4472a4:	cmp    BYTE PTR [eax],bh
  4472a6:	pop    esp
  4472a7:	(bad)  
  4472a8:	cmp    BYTE PTR [eax],bh
  4472aa:	pop    esp
  4472ab:	(bad)  
  4472ac:	cmp    BYTE PTR [eax],bh
  4472ae:	pop    esp
  4472af:	(bad)  
  4472b0:	cmp    BYTE PTR [eax],bh
  4472b2:	pop    ebp
  4472b3:	(bad)  
  4472b4:	cmp    BYTE PTR [eax],bh
  4472b6:	pop    ebp
  4472b7:	(bad)  
  4472b8:	cmp    BYTE PTR [eax],bh
  4472ba:	pop    ebp
  4472bb:	(bad)  
  4472bc:	cmp    BYTE PTR [eax],bh
  4472be:	pop    ebp
  4472bf:	(bad)  
  4472c0:	cmp    BYTE PTR [eax],bh
  4472c2:	pop    ebp
  4472c3:	(bad)  
  4472c4:	cmp    bh,BYTE PTR [edx]
  4472c6:	pop    edi
  4472c7:	(bad)  
  4472c8:	ds ds jmp FWORD PTR gs:[ecx]
  4472cd:	sub    DWORD PTR [edi-0x1],ebp
  4472d0:	add    BYTE PTR [eax],al
  4472d2:	xchg   ebx,eax
  4472d3:	stc    
  4472d4:	add    BYTE PTR [eax],al
  4472d6:	pushf  
  4472d7:	ja     0x4472d9
  4472d9:	add    BYTE PTR [eax],al
  4472db:	scas   al,BYTE PTR es:[edi]
  4472dc:	add    BYTE PTR [eax],al
  4472de:	add    dh,ah
  4472e0:	add    BYTE PTR [eax],al
  4472e2:	add    BYTE PTR [ecx+0xac0000],al
  4472e8:	add    BYTE PTR [eax],al
  4472ea:	lods   al,BYTE PTR ds:[esi]
  4472eb:	add    BYTE PTR [eax],al
  4472ed:	add    BYTE PTR [eax+eax*1+0xac0000],ch
  4472f4:	add    BYTE PTR [eax],al
  4472f6:	lods   al,BYTE PTR ds:[esi]
  4472f7:	add    BYTE PTR [eax],al
  4472f9:	add    BYTE PTR [eax+eax*1+0xac0000],ch
  447300:	add    BYTE PTR [eax],al
  447302:	lods   al,BYTE PTR ds:[esi]
  447303:	add    BYTE PTR [eax],al
  447305:	add    BYTE PTR [eax+eax*1+0xffffff],ch
  44730c:	(bad)  
  44730d:	(bad)  
  44730e:	inc    DWORD PTR [eax]
  447310:	(bad)  
  447311:	(bad)  
  447312:	inc    DWORD PTR [eax]
  447314:	(bad)  
  447315:	(bad)  
  447316:	inc    DWORD PTR [eax]
  447318:	(bad)  
  447319:	(bad)  
  44731a:	inc    DWORD PTR [eax]
  44731c:	(bad)  
  44731d:	(bad)  
  44731e:	inc    DWORD PTR [eax]
  447320:	(bad)  
  447321:	(bad)  
  447322:	inc    DWORD PTR [eax]
  447324:	add    BYTE PTR [eax],al
  447326:	stos   DWORD PTR es:[edi],eax
  447327:	add    BYTE PTR [eax],al
  447329:	add    BYTE PTR [ebx-0x55000000],ch
  44732f:	add    BYTE PTR [eax],al
  447331:	add    BYTE PTR [ebx-0x55000000],ch
  447337:	add    BYTE PTR [eax],al
  447339:	add    BYTE PTR [ebx-0x55000000],ch
  44733f:	add    BYTE PTR [eax],al
  447341:	add    BYTE PTR [ebx-0x55000000],ch
  447347:	add    BYTE PTR [eax],al
  447349:	add    BYTE PTR [eax],al
  44734b:	push   esi
  44734c:	add    BYTE PTR [eax],al
  44734e:	add    ah,bh
  447350:	add    BYTE PTR [eax],al
  447352:	add    BYTE PTR [ecx+0x6eb30000],cl
  447358:	(bad)  
  447359:	sets   ch
  44735c:	inc    edx
  44735d:	inc    edx
  44735e:	jge    0x44735f
  447360:	dec    edx
  447361:	dec    edx
  447362:	ins    BYTE PTR es:[edi],dx
  447363:	inc    DWORD PTR [edi+0x47]
  447366:	(bad)  
  447367:	inc    DWORD PTR [edi+0x47]
  44736a:	pop    edi
  44736b:	inc    DWORD PTR [esi+0x46]
  44736e:	pop    edi
  44736f:	inc    DWORD PTR [edi+0x47]
  447372:	pop    edi
  447373:	inc    DWORD PTR [edi+0x47]
  447376:	pop    edi
  447377:	inc    DWORD PTR [edi+0x47]
  44737a:	pop    edi
  44737b:	inc    DWORD PTR [edi+0x47]
  44737e:	pop    edi
  44737f:	dec    DWORD PTR [eax+0x48]
  447382:	popa   
  447383:	dec    DWORD PTR [edx+0x4a]
  447386:	push   0x784a4aff
  44738b:	jmp    DWORD PTR [edx]
  44738d:	and    cl,BYTE PTR [ebx-0x4dffff01]
  447393:	lods   eax,DWORD PTR ds:[esi]
  447394:	add    BYTE PTR [eax],al
  447396:	adc    eax,0x47
  44739b:	repz add BYTE PTR [eax],al
  44739e:	add    BYTE PTR [edi+0x37000000],ah
  4473a4:	add    BYTE PTR [eax],al
  4473a6:	stos   BYTE PTR es:[edi],al
  4473a7:	add    BYTE PTR [eax],al
  4473a9:	add    BYTE PTR [edx-0x56000000],ch
  4473af:	add    BYTE PTR [eax],al
  4473b1:	add    BYTE PTR [edx-0x56000000],ch
  4473b7:	add    BYTE PTR [eax],al
  4473b9:	add    BYTE PTR [edx-0x56000000],ch
  4473bf:	add    BYTE PTR [eax],al
  4473c1:	add    BYTE PTR [edx-0x56000000],ch
  4473c7:	add    bh,bh
  4473c9:	(bad)  
  4473ca:	inc    DWORD PTR [eax]
  4473cc:	(bad)  
  4473cd:	(bad)  
  4473ce:	inc    DWORD PTR [eax]
  4473d0:	(bad)  
  4473d1:	(bad)  
  4473d2:	inc    DWORD PTR [eax]
  4473d4:	(bad)  
  4473d5:	(bad)  
  4473d6:	inc    DWORD PTR [eax]
  4473d8:	(bad)  
  4473d9:	(bad)  
  4473da:	inc    DWORD PTR [eax]
  4473dc:	(bad)  
  4473dd:	(bad)  
  4473de:	inc    DWORD PTR [eax]
  4473e0:	(bad)  
  4473e1:	(bad)  
  4473e2:	inc    DWORD PTR [eax]
  4473e4:	add    BYTE PTR [eax],al
  4473e6:	stos   BYTE PTR es:[edi],al
  4473e7:	add    BYTE PTR [eax],al
  4473e9:	add    BYTE PTR [edx-0x56000000],ch
  4473ef:	add    BYTE PTR [eax],al
  4473f1:	add    BYTE PTR [edx-0x56000000],ch
  4473f7:	add    BYTE PTR [eax],al
  4473f9:	add    BYTE PTR [edx-0x56000000],ch
  4473ff:	add    BYTE PTR [eax],al
  447401:	add    BYTE PTR [edx-0x56000000],ch
  447407:	add    BYTE PTR [eax],al
  447409:	add    BYTE PTR [eax],al
  44740b:	sbb    eax,0xc8000000
  447410:	add    BYTE PTR [eax],al
  447412:	add    dh,ah
  447414:	add    BYTE PTR [eax],al
  447416:	add    edi,DWORD PTR [ebx]
  447418:	add    BYTE PTR [eax],al
  44741a:	mov    eax,0x9c2c2c90
  44741f:	sti    
  447420:	push   esi
  447421:	push   esi
  447422:	mov    bh,bh
  447424:	push   ebp
  447425:	push   ebp
  447426:	je     0x447427
  447428:	push   ebx
  447429:	push   ebx
  44742a:	push   0xffffffff
  44742c:	push   edx
  44742d:	push   edx
  44742e:	call   WORD PTR [edx+0x52]
  447432:	call   DWORD PTR fs:[edx+0x52]
  447436:	call   DWORD PTR fs:[edx+0x52]
  44743a:	call   DWORD PTR gs:[ebx+0x53]
  44743e:	push   0x705555ff
  447443:	call   FWORD PTR [eax+0x58]
  447446:	cmp    edi,0xfe943e3e
  44744c:	add    eax,0xc8aa05
  447451:	add    BYTE PTR [ebp+0x36],al
  447457:	test   al,0x0
  447459:	add    BYTE PTR [eax],al
  44745b:	clc    
  44745c:	add    BYTE PTR [eax],al
  44745e:	add    BYTE PTR [eax+eax*1+0x0],dl
  447462:	add    BYTE PTR [edx],cl
  447464:	add    BYTE PTR [eax],al
  447466:	stos   BYTE PTR es:[edi],al
  447467:	add    BYTE PTR [eax],al
  447469:	add    BYTE PTR [edx-0x56000000],ch
  44746f:	add    BYTE PTR [eax],al
  447471:	add    BYTE PTR [edx-0x56000000],ch
  447477:	add    BYTE PTR [eax],al
  447479:	add    BYTE PTR [edx-0x56000000],ch
  44747f:	add    BYTE PTR [eax],al
  447481:	add    BYTE PTR [edx-0x56000000],ch
  447487:	add    bh,bh
  447489:	(bad)  
  44748a:	inc    DWORD PTR [eax]
  44748c:	(bad)  
  44748d:	(bad)  
  44748e:	inc    DWORD PTR [eax]
  447490:	(bad)  
  447491:	(bad)  
  447492:	inc    DWORD PTR [eax]
  447494:	(bad)  
  447495:	(bad)  
  447496:	inc    DWORD PTR [eax]
  447498:	(bad)  
  447499:	(bad)  
  44749a:	inc    DWORD PTR [eax]
  44749c:	(bad)  
  44749d:	(bad)  
  44749e:	inc    DWORD PTR [eax]
  4474a0:	(bad)  
  4474a1:	(bad)  
  4474a2:	inc    DWORD PTR [eax]
  4474a4:	add    BYTE PTR [eax],al
  4474a6:	stos   BYTE PTR es:[edi],al
  4474a7:	add    BYTE PTR [eax],al
  4474a9:	add    BYTE PTR [edx-0x56000000],ch
  4474af:	add    BYTE PTR [eax],al
  4474b1:	add    BYTE PTR [edx-0x56000000],ch
  4474b7:	add    BYTE PTR [eax],al
  4474b9:	add    BYTE PTR [edx-0x56000000],ch
  4474bf:	add    BYTE PTR [eax],al
  4474c1:	add    BYTE PTR [edx-0x56000000],ch
  4474c7:	add    BYTE PTR [eax],al
  4474c9:	add    BYTE PTR [eax],al
  4474cb:	add    DWORD PTR [eax],eax
  4474cd:	add    BYTE PTR [eax],al
  4474cf:	push   esi
  4474d0:	add    BYTE PTR [eax],al
  4474d2:	add    dl,bh
  4474d4:	add    BYTE PTR [eax],al
  4474d6:	add    BYTE PTR [esi+0x17000000],dh
  4474dc:	add    BYTE PTR [eax],al
  4474de:	mov    ch,0x7b
  4474e0:	cs cs test al,0xe9
  4474e4:	pop    eax
  4474e5:	pop    eax
  4474e6:	call   0x5fff:0x896060fd
  4474ed:	pop    edi
  4474ee:	jg     0x4474ef
  4474f0:	pop    edi
  4474f1:	pop    edi
  4474f2:	jns    0x4474f3
  4474f4:	pop    esi
  4474f5:	pop    esi
  4474f6:	jns    0x4474f7
  4474f8:	pop    edi
  4474f9:	pop    edi
  4474fa:	jl     0x4474fb
  4474fc:	pusha  
  4474fd:	pusha  
  4474fe:	test   edi,edi
  447500:	pop    esi
  447501:	pop    esi
  447502:	xchg   esp,eax
  447503:	(bad)  
  447504:	cmp    eax,0x8f5a23d
  447509:	or     BYTE PTR [eax-0x5affff50],dh
  44750f:	and    al,0x0
  447511:	add    BYTE PTR [eax],al
  447513:	outs   dx,DWORD PTR ds:[esi]
  447514:	add    BYTE PTR [eax],al
  447516:	add    bh,bh
  447518:	add    BYTE PTR [eax],al
  44751a:	add    BYTE PTR [esi+0x7000000],bl
  447520:	add    BYTE PTR [eax],al
  447522:	add    BYTE PTR [eax],al
  447524:	add    BYTE PTR [eax],al
  447526:	stos   BYTE PTR es:[edi],al
  447527:	add    BYTE PTR [eax],al
  447529:	add    BYTE PTR [edx-0x56000000],ch
  44752f:	add    BYTE PTR [eax],al
  447531:	add    BYTE PTR [edx-0x56000000],ch
  447537:	add    BYTE PTR [eax],al
  447539:	add    BYTE PTR [edx-0x56000000],ch
  44753f:	add    BYTE PTR [eax],al
  447541:	add    BYTE PTR [edx-0x56000000],ch
  447547:	add    bh,bh
  447549:	(bad)  
  44754a:	inc    DWORD PTR [eax]
  44754c:	(bad)  
  44754d:	(bad)  
  44754e:	inc    DWORD PTR [eax]
  447550:	(bad)  
  447551:	(bad)  
  447552:	inc    DWORD PTR [eax]
  447554:	(bad)  
  447555:	(bad)  
  447556:	inc    DWORD PTR [eax]
  447558:	(bad)  
  447559:	(bad)  
  44755a:	inc    DWORD PTR [eax]
  44755c:	(bad)  
  44755d:	(bad)  
  44755e:	inc    DWORD PTR [eax]
  447560:	(bad)  
  447561:	(bad)  
  447562:	inc    DWORD PTR [eax]
  447564:	add    BYTE PTR [eax],al
  447566:	stos   BYTE PTR es:[edi],al
  447567:	add    BYTE PTR [eax],al
  447569:	add    BYTE PTR [edx-0x56000000],ch
  44756f:	add    BYTE PTR [eax],al
  447571:	add    BYTE PTR [edx-0x56000000],ch
  447577:	add    BYTE PTR [eax],al
  447579:	add    BYTE PTR [edx-0x56000000],ch
  44757f:	add    BYTE PTR [eax],al
  447581:	add    BYTE PTR [edx-0x56000000],ch
	...
  44758f:	or     eax,0x8f000000
  447594:	add    BYTE PTR [eax],al
  447596:	add    bh,bh
  447598:	add    BYTE PTR [eax],al
  44759a:	add    BYTE PTR [edx+0x20000000],ch
  4475a0:	add    BYTE PTR [eax],al
  4475a2:	mov    ah,0x3a
  4475a4:	adc    dl,BYTE PTR [edx]
  4475a6:	mov    cl,0xa5
  4475a8:	aaa    
  4475a9:	aaa    
  4475aa:	stos   DWORD PTR es:[edi],eax
  4475ab:	jecxz  0x4475f8
  4475ad:	dec    ebx
  4475ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4475af:	lock push esi
  4475b1:	push   esi
  4475b2:	mov    eax,ds:0xa15757f6
  4475b7:	not    DWORD PTR [eax+0x50]
  4475ba:	mov    ds:0xa83e3ef3,eax
  4475bf:	jmp    0xc5f393e2
  4475c4:	add    BYTE PTR [eax],al
  4475c6:	mov    ah,0x63
  4475c8:	add    BYTE PTR [eax],al
  4475ca:	sub    cl,BYTE PTR [ecx]
  4475cc:	add    BYTE PTR [eax],al
  4475ce:	add    BYTE PTR [edi+0x0],ch
  4475d1:	add    BYTE PTR [eax],al
  4475d3:	icebp  
  4475d4:	add    BYTE PTR [eax],al
  4475d6:	add    ch,cl
  4475d8:	add    BYTE PTR [eax],al
  4475da:	add    BYTE PTR [edx],ch
	...
  4475e4:	add    BYTE PTR [eax],al
  4475e6:	stos   BYTE PTR es:[edi],al
  4475e7:	add    BYTE PTR [eax],al
  4475e9:	add    BYTE PTR [edx-0x56000000],ch
  4475ef:	add    BYTE PTR [eax],al
  4475f1:	add    BYTE PTR [edx-0x56000000],ch
  4475f7:	add    BYTE PTR [eax],al
  4475f9:	add    BYTE PTR [edx-0x56000000],ch
  4475ff:	add    BYTE PTR [eax],al
  447601:	add    BYTE PTR [edx-0x56000000],ch
  447607:	add    bh,bh
  447609:	(bad)  
  44760a:	inc    DWORD PTR [eax]
  44760c:	(bad)  
  44760d:	(bad)  
  44760e:	inc    DWORD PTR [eax]
  447610:	(bad)  
  447611:	(bad)  
  447612:	inc    DWORD PTR [eax]
  447614:	(bad)  
  447615:	(bad)  
  447616:	inc    DWORD PTR [eax]
  447618:	(bad)  
  447619:	(bad)  
  44761a:	inc    DWORD PTR [eax]
  44761c:	(bad)  
  44761d:	(bad)  
  44761e:	inc    DWORD PTR [eax]
  447620:	(bad)  
  447621:	(bad)  
  447622:	inc    DWORD PTR [eax]
  447624:	add    BYTE PTR [eax],al
  447626:	stos   BYTE PTR es:[edi],al
  447627:	add    BYTE PTR [eax],al
  447629:	add    BYTE PTR [edx-0x56000000],ch
  44762f:	add    BYTE PTR [eax],al
  447631:	add    BYTE PTR [edx-0x56000000],ch
  447637:	add    BYTE PTR [eax],al
  447639:	add    BYTE PTR [edx-0x56000000],ch
  44763f:	add    BYTE PTR [eax],al
  447641:	add    BYTE PTR [edx-0x56000000],ch
	...
  447653:	pop    ss
  447654:	add    BYTE PTR [eax],al
  447656:	add    BYTE PTR [esi-0x1000000],bl
  44765c:	add    BYTE PTR [eax],al
  44765e:	add    al,dl
  447660:	add    BYTE PTR [eax],al
  447662:	add    bl,BYTE PTR [ecx+0x0]
  447665:	add    BYTE PTR [edi+0x11],al
  447668:	add    al,BYTE PTR [edx]
  44766a:	mov    dh,0x3c
  44766c:	push   es
  44766d:	push   es
  44766e:	mov    ch,0x75
  447670:	adc    DWORD PTR [ecx],edx
  447672:	mov    dl,0x9b
  447674:	adc    dl,BYTE PTR [edx]
  447676:	mov    dl,0x9e
  447678:	or     DWORD PTR [ecx],ecx
  44767a:	mov    ah,0x87
  44767c:	add    al,BYTE PTR [edx]
  44767e:	mov    eax,0xb002024e
  447683:	sbb    BYTE PTR [eax],al
  447685:	add    BYTE PTR [esi],al
  447687:	aaa    
  447688:	add    BYTE PTR [eax],al
  44768a:	add    BYTE PTR [eax-0x2000000],ah
  447690:	add    BYTE PTR [eax],al
  447692:	add    dl,dl
  447694:	add    BYTE PTR [eax],al
  447696:	add    BYTE PTR ds:0x0,bh
	...
  4476a4:	add    BYTE PTR [eax],al
  4476a6:	stos   BYTE PTR es:[edi],al
  4476a7:	add    BYTE PTR [eax],al
  4476a9:	add    BYTE PTR [edx-0x56000000],ch
  4476af:	add    BYTE PTR [eax],al
  4476b1:	add    BYTE PTR [edx-0x56000000],ch
  4476b7:	add    BYTE PTR [eax],al
  4476b9:	add    BYTE PTR [edx-0x56000000],ch
  4476bf:	add    BYTE PTR [eax],al
  4476c1:	add    BYTE PTR [edx-0x56000000],ch
  4476c7:	add    bh,bh
  4476c9:	(bad)  
  4476ca:	inc    DWORD PTR [eax]
  4476cc:	(bad)  
  4476cd:	(bad)  
  4476ce:	inc    DWORD PTR [eax]
  4476d0:	(bad)  
  4476d1:	(bad)  
  4476d2:	inc    DWORD PTR [eax]
  4476d4:	(bad)  
  4476d5:	(bad)  
  4476d6:	inc    DWORD PTR [eax]
  4476d8:	(bad)  
  4476d9:	(bad)  
  4476da:	inc    DWORD PTR [eax]
  4476dc:	(bad)  
  4476dd:	(bad)  
  4476de:	inc    DWORD PTR [eax]
  4476e0:	(bad)  
  4476e1:	(bad)  
  4476e2:	inc    DWORD PTR [eax]
  4476e4:	(bad)  
  4476e5:	(bad)  
  4476e6:	inc    DWORD PTR [eax]
  4476e8:	(bad)  
  4476e9:	(bad)  
  4476ea:	inc    DWORD PTR [eax]
  4476ec:	(bad)  
  4476ed:	(bad)  
  4476ee:	inc    DWORD PTR [eax]
  4476f0:	(bad)  
  4476f1:	(bad)  
  4476f2:	inc    DWORD PTR [eax]
  4476f4:	(bad)  
  4476f5:	(bad)  
  4476f6:	inc    DWORD PTR [eax]
  4476f8:	(bad)  
  4476f9:	(bad)  
  4476fa:	inc    DWORD PTR [eax]
  4476fc:	(bad)  
  4476fd:	(bad)  
  4476fe:	inc    DWORD PTR [eax]
  447700:	(bad)  
  447701:	(bad)  
  447702:	inc    DWORD PTR [eax]
  447704:	(bad)  
  447705:	(bad)  
  447706:	inc    DWORD PTR [eax]
	...
  447714:	add    BYTE PTR [eax],al
  447716:	add    BYTE PTR [edi],cl
  447718:	add    BYTE PTR [eax],al
  44771a:	add    BYTE PTR [edx-0xd000000],al
  447720:	add    BYTE PTR [eax],al
  447722:	add    bh,bh
  447724:	add    BYTE PTR [eax],al
  447726:	add    ch,cl
  447728:	add    BYTE PTR [eax],al
  44772a:	add    BYTE PTR [eax+0x73000000],bl
  447730:	add    BYTE PTR [eax],al
  447732:	add    BYTE PTR [ebx+0x0],dl
  447735:	add    BYTE PTR [eax],al
  447737:	dec    esi
  447738:	add    BYTE PTR [eax],al
  44773a:	add    BYTE PTR [eax+eax*1+0x0],ah
  44773e:	add    BYTE PTR [edx-0x49000000],cl
  447744:	add    BYTE PTR [eax],al
  447746:	add    ah,dh
  447748:	add    BYTE PTR [eax],al
  44774a:	add    ch,bh
  44774c:	add    BYTE PTR [eax],al
  44774e:	add    BYTE PTR [esi+0x2e000000],dh
	...
  447764:	(bad)  
  447765:	(bad)  
  447766:	inc    DWORD PTR [eax]
  447768:	(bad)  
  447769:	(bad)  
  44776a:	inc    DWORD PTR [eax]
  44776c:	(bad)  
  44776d:	(bad)  
  44776e:	inc    DWORD PTR [eax]
  447770:	(bad)  
  447771:	(bad)  
  447772:	inc    DWORD PTR [eax]
  447774:	(bad)  
  447775:	(bad)  
  447776:	inc    DWORD PTR [eax]
  447778:	(bad)  
  447779:	(bad)  
  44777a:	inc    DWORD PTR [eax]
  44777c:	(bad)  
  44777d:	(bad)  
  44777e:	inc    DWORD PTR [eax]
  447780:	(bad)  
  447781:	(bad)  
  447782:	inc    DWORD PTR [eax]
  447784:	(bad)  
  447785:	(bad)  
  447786:	inc    DWORD PTR [eax]
  447788:	(bad)  
  447789:	(bad)  
  44778a:	inc    DWORD PTR [eax]
  44778c:	(bad)  
  44778d:	(bad)  
  44778e:	inc    DWORD PTR [eax]
  447790:	(bad)  
  447791:	(bad)  
  447792:	inc    DWORD PTR [eax]
  447794:	(bad)  
  447795:	(bad)  
  447796:	inc    DWORD PTR [eax]
  447798:	(bad)  
  447799:	(bad)  
  44779a:	inc    DWORD PTR [eax]
  44779c:	(bad)  
  44779d:	(bad)  
  44779e:	inc    DWORD PTR [eax]
  4477a0:	(bad)  
  4477a1:	(bad)  
  4477a2:	inc    DWORD PTR [eax]
  4477a4:	(bad)  
  4477a5:	(bad)  
  4477a6:	inc    DWORD PTR [eax]
  4477a8:	(bad)  
  4477a9:	(bad)  
  4477aa:	inc    DWORD PTR [eax]
  4477ac:	(bad)  
  4477ad:	(bad)  
  4477ae:	inc    DWORD PTR [eax]
  4477b0:	(bad)  
  4477b1:	(bad)  
  4477b2:	inc    DWORD PTR [eax]
  4477b4:	(bad)  
  4477b5:	(bad)  
  4477b6:	inc    DWORD PTR [eax]
  4477b8:	(bad)  
  4477b9:	(bad)  
  4477ba:	inc    DWORD PTR [eax]
  4477bc:	(bad)  
  4477bd:	(bad)  
  4477be:	inc    DWORD PTR [eax]
  4477c0:	(bad)  
  4477c1:	(bad)  
  4477c2:	inc    DWORD PTR [eax]
  4477c4:	(bad)  
  4477c5:	(bad)  
  4477c6:	inc    DWORD PTR [eax]
	...
  4477d8:	add    BYTE PTR [eax],al
  4477da:	add    BYTE PTR [ecx],al
  4477dc:	add    BYTE PTR [eax],al
  4477de:	add    BYTE PTR ds:0xa9000000,bh
  4477e4:	add    BYTE PTR [eax],al
  4477e6:	add    dh,ch
  4477e8:	add    BYTE PTR [eax],al
  4477ea:	add    bl,bh
  4477ec:	add    BYTE PTR [eax],al
  4477ee:	add    dl,ch
  4477f0:	add    BYTE PTR [eax],al
  4477f2:	add    dl,ch
  4477f4:	add    BYTE PTR [eax],al
  4477f6:	add    dl,ch
  4477f8:	add    BYTE PTR [eax],al
  4477fa:	add    bl,ch
  4477fc:	add    BYTE PTR [eax],al
  4477fe:	add    bh,ch
  447800:	add    BYTE PTR [eax],al
  447802:	add    ch,bh
  447804:	add    BYTE PTR [eax],al
  447806:	add    ah,dl
  447808:	add    BYTE PTR [eax],al
  44780a:	add    BYTE PTR [ebp+0x0],ah
  44780d:	add    BYTE PTR [eax],al
  44780f:	sldt   WORD PTR [eax]
	...
  447822:	add    BYTE PTR [eax],al
  447824:	(bad)  
  447825:	(bad)  
  447826:	inc    DWORD PTR [eax]
  447828:	(bad)  
  447829:	(bad)  
  44782a:	inc    DWORD PTR [eax]
  44782c:	(bad)  
  44782d:	(bad)  
  44782e:	inc    DWORD PTR [eax]
  447830:	(bad)  
  447831:	(bad)  
  447832:	inc    DWORD PTR [eax]
  447834:	(bad)  
  447835:	(bad)  
  447836:	inc    DWORD PTR [eax]
  447838:	(bad)  
  447839:	(bad)  
  44783a:	inc    DWORD PTR [eax]
  44783c:	(bad)  
  44783d:	(bad)  
  44783e:	inc    DWORD PTR [eax]
  447840:	(bad)  
  447841:	(bad)  
  447842:	inc    DWORD PTR [eax]
  447844:	(bad)  
  447845:	(bad)  
  447846:	inc    DWORD PTR [eax]
  447848:	(bad)  
  447849:	(bad)  
  44784a:	inc    DWORD PTR [eax]
  44784c:	(bad)  
  44784d:	(bad)  
  44784e:	inc    DWORD PTR [eax]
  447850:	(bad)  
  447851:	(bad)  
  447852:	inc    DWORD PTR [eax]
  447854:	(bad)  
  447855:	(bad)  
  447856:	inc    DWORD PTR [eax]
  447858:	(bad)  
  447859:	(bad)  
  44785a:	inc    DWORD PTR [eax]
  44785c:	(bad)  
  44785d:	(bad)  
  44785e:	inc    DWORD PTR [eax]
  447860:	(bad)  
  447861:	(bad)  
  447862:	inc    DWORD PTR [eax]
  447864:	(bad)  
  447865:	(bad)  
  447866:	inc    DWORD PTR [eax]
  447868:	(bad)  
  447869:	(bad)  
  44786a:	inc    DWORD PTR [eax]
  44786c:	(bad)  
  44786d:	(bad)  
  44786e:	inc    DWORD PTR [eax]
  447870:	(bad)  
  447871:	(bad)  
  447872:	inc    DWORD PTR [eax]
  447874:	(bad)  
  447875:	(bad)  
  447876:	inc    DWORD PTR [eax]
  447878:	(bad)  
  447879:	(bad)  
  44787a:	inc    DWORD PTR [eax]
  44787c:	(bad)  
  44787d:	(bad)  
  44787e:	inc    DWORD PTR [eax]
  447880:	(bad)  
  447881:	(bad)  
  447882:	inc    DWORD PTR [eax]
  447884:	(bad)  
  447885:	(bad)  
  447886:	inc    DWORD PTR [eax]
  447888:	(bad)  
  447889:	(bad)  
  44788a:	inc    DWORD PTR [eax]
  44788c:	(bad)  
  44788d:	(bad)  
  44788e:	inc    DWORD PTR [eax]
  447890:	(bad)  
  447891:	(bad)  
  447892:	inc    DWORD PTR [eax]
  447894:	(bad)  
  447895:	(bad)  
  447896:	inc    DWORD PTR [eax]
  447898:	(bad)  
  447899:	(bad)  
  44789a:	inc    DWORD PTR [eax]
  44789c:	(bad)  
  44789d:	(bad)  
  44789e:	inc    DWORD PTR [eax]
  4478a0:	(bad)  
  4478a1:	(bad)  
  4478a2:	inc    DWORD PTR [eax]
  4478a4:	add    BYTE PTR [eax],al
  4478a6:	add    BYTE PTR [esi],ch
  4478a8:	add    BYTE PTR [eax],al
  4478aa:	add    BYTE PTR [edx+0x0],ah
  4478ad:	add    BYTE PTR [eax],al
  4478af:	jge    0x4478b1
  4478b1:	add    BYTE PTR [eax],al
  4478b3:	mov    ch,0x0
  4478b5:	add    BYTE PTR [eax],al
  4478b7:	mov    bh,0x0
  4478b9:	add    BYTE PTR [eax],al
  4478bb:	lods   al,BYTE PTR ds:[esi]
  4478bc:	add    BYTE PTR [eax],al
  4478be:	add    BYTE PTR [edi+0x0],dh
  4478c1:	add    BYTE PTR [eax],al
  4478c3:	push   esi
  4478c4:	add    BYTE PTR [eax],al
  4478c6:	add    BYTE PTR [eax],al
  4478c8:	(bad)  
  4478c9:	(bad)  
  4478ca:	inc    DWORD PTR [eax]
  4478cc:	(bad)  
  4478cd:	(bad)  
  4478ce:	inc    DWORD PTR [eax]
  4478d0:	(bad)  
  4478d1:	(bad)  
  4478d2:	inc    DWORD PTR [eax]
  4478d4:	(bad)  
  4478d5:	(bad)  
  4478d6:	inc    DWORD PTR [eax]
  4478d8:	(bad)  
  4478d9:	(bad)  
  4478da:	inc    DWORD PTR [eax]
  4478dc:	(bad)  
  4478dd:	(bad)  
  4478de:	inc    DWORD PTR [eax]
  4478e0:	(bad)  
  4478e1:	(bad)  
  4478e2:	inc    DWORD PTR [eax]
  4478e4:	(bad)  
  4478e5:	(bad)  
  4478e6:	inc    DWORD PTR [eax]
  4478e8:	(bad)  
  4478e9:	(bad)  
  4478ea:	inc    DWORD PTR [eax]
  4478ec:	(bad)  
  4478ed:	(bad)  
  4478ee:	inc    DWORD PTR [eax]
  4478f0:	(bad)  
  4478f1:	(bad)  
  4478f2:	inc    DWORD PTR [eax]
  4478f4:	(bad)  
  4478f5:	(bad)  
  4478f6:	inc    DWORD PTR [eax]
  4478f8:	(bad)  
  4478f9:	(bad)  
  4478fa:	inc    DWORD PTR [eax]
  4478fc:	(bad)  
  4478fd:	(bad)  
  4478fe:	inc    DWORD PTR [eax]
  447900:	(bad)  
  447901:	(bad)  
  447902:	inc    DWORD PTR [eax]
  447904:	(bad)  
  447905:	(bad)  
  447906:	inc    DWORD PTR [eax]
  447908:	(bad)  
  447909:	(bad)  
  44790a:	inc    DWORD PTR [eax]
  44790c:	(bad)  
  44790d:	(bad)  
  44790e:	inc    DWORD PTR [eax]
  447910:	(bad)  
  447911:	(bad)  
  447912:	inc    DWORD PTR [eax]
  447914:	(bad)  
  447915:	(bad)  
  447916:	inc    DWORD PTR [eax]
  447918:	clc    
  447919:	add    BYTE PTR [eax],al
  44791b:	add    BYTE PTR [eax],al
  44791d:	aas    
  44791e:	(bad)  
  44791f:	push   eax
  447921:	add    BYTE PTR [eax],al
  447923:	add    BYTE PTR [eax],al
  447925:	pop    ds
  447926:	(bad)  
  447927:	push   eax
  447929:	add    BYTE PTR [eax],al
  44792b:	add    BYTE PTR [eax],al
  44792d:	pop    ds
  44792e:	(bad)  
  44792f:	jmp    eax
  447931:	add    BYTE PTR [eax],al
  447933:	add    BYTE PTR [eax],al
  447935:	ud0    edi,edi
  447938:	loopne 0x44793a
  44793a:	add    BYTE PTR [eax],al
  44793c:	add    BYTE PTR [edi],cl
  44793e:	(bad)  
  44793f:	push   eax
  447941:	add    BYTE PTR [eax],al
  447943:	add    BYTE PTR [eax],al
  447945:	pop    ds
  447946:	(bad)  
  447947:	push   eax
  447949:	add    BYTE PTR [eax],al
  44794b:	add    BYTE PTR [eax],al
  44794d:	pop    ds
  44794e:	(bad)  
  44794f:	(bad)  
  447950:	cld    
  447951:	add    BYTE PTR [eax],0x0
  447954:	add    BYTE PTR [edi-0x1],bh
  447957:	(bad)  
  447958:	inc    DWORD PTR [eax]
  44795a:	add    BYTE PTR [eax],al
  44795c:	add    edi,edi
  44795e:	(bad)  
  44795f:	(bad)  
  447960:	inc    BYTE PTR [eax]
  447962:	add    BYTE PTR [eax],al
  447964:	add    BYTE PTR [edi-0x1],bh
  447967:	(bad)  
  447968:	cld    
  447969:	add    BYTE PTR [eax],al
  44796b:	add    BYTE PTR [eax],al
  44796d:	jg     0x44796e
  44796f:	(bad)  
  447970:	clc    
  447971:	add    BYTE PTR [eax],al
  447973:	add    BYTE PTR [eax],al
  447975:	jg     0x447976
  447977:	(bad)  
  447978:	clc    
  447979:	add    BYTE PTR [eax],al
  44797b:	add    BYTE PTR [eax],al
  44797d:	jg     0x44797e
  44797f:	(bad)  
  447980:	clc    
  447981:	add    BYTE PTR [eax],al
  447983:	add    BYTE PTR [eax],al
  447985:	jg     0x447986
  447987:	(bad)  
  447988:	clc    
  447989:	add    BYTE PTR [eax],al
  44798b:	add    BYTE PTR [eax],al
  44798d:	jg     0x44798e
  44798f:	(bad)  
  447990:	clc    
  447991:	add    BYTE PTR [eax],al
  447993:	add    BYTE PTR [eax],al
  447995:	jg     0x447996
  447997:	(bad)  
  447998:	cld    
  447999:	add    BYTE PTR [eax],al
  44799b:	add    BYTE PTR [eax],al
  44799d:	jg     0x44799e
  44799f:	(bad)  
  4479a0:	cld    
  4479a1:	add    BYTE PTR [eax],al
  4479a3:	add    BYTE PTR [eax],al
  4479a5:	jg     0x4479a6
  4479a7:	(bad)  
  4479a8:	inc    BYTE PTR [eax]
  4479aa:	add    BYTE PTR [eax],al
  4479ac:	add    bh,bh
  4479ae:	(bad)  
  4479af:	(bad)  
  4479b0:	inc    DWORD PTR [eax]
  4479b2:	add    BYTE PTR [eax],al
  4479b4:	add    edi,edi
  4479b6:	(bad)  
  4479b7:	(bad)  
  4479b8:	inc    DWORD PTR [eax-0xfd0000]
  4479be:	(bad)  
  4479bf:	(bad)  
  4479c0:	inc    eax
  4479c2:	add    BYTE PTR [eax],al
  4479c4:	add    eax,0xffffffff
  4479c9:	loopne 0x4479cb
  4479cb:	add    BYTE PTR [ebx],cl
  4479cd:	(bad)  
  4479ce:	(bad)  
  4479cf:	(bad)  
  4479d0:	call   eax
  4479d2:	add    BYTE PTR [eax],al
  4479d4:	pop    ss
  4479d5:	(bad)  
  4479d6:	(bad)  
  4479d7:	(bad)  
  4479d8:	jmp    eax
  4479da:	add    BYTE PTR [eax],al
  4479dc:	outs   dx,DWORD PTR ds:[esi]
  4479dd:	(bad)  
  4479de:	(bad)  
  4479df:	(bad)  
  4479e0:	inc    edx
  4479e2:	add    BYTE PTR [eax],al
  4479e4:	(bad)  
  4479e5:	(bad)  
  4479e6:	(bad)  
  4479e7:	(bad)  
  4479e8:	inc    ecx
  4479ea:	add    BYTE PTR [ebx],0x7f
  4479ed:	(bad)  
  4479ee:	(bad)  
  4479ef:	(bad)  
  4479f0:	inc    edi
  4479f2:	add    BYTE PTR [ebx],0xff
  4479f5:	(bad)  
  4479f6:	(bad)  
  4479f7:	(bad)  
  4479f8:	inc    edi
  4479fa:	add    BYTE PTR [ecx],al
  4479fc:	lahf   
  4479fd:	(bad)  
  4479fe:	(bad)  
  4479ff:	(bad)  
  447a00:	inc    edx
  447a02:	add    BYTE PTR [eax],al
  447a04:	xchg   edi,edi
  447a06:	(bad)  
  447a07:	(bad)  
  447a08:	inc    DWORD PTR [eax-0x790000]
  447a0e:	(bad)  
  447a0f:	(bad)  
  447a10:	inc    DWORD PTR [eax-0xf90000]
  447a16:	(bad)  
  447a17:	(bad)  
  447a18:	inc    DWORD PTR [eax-0xf90000]
  447a1e:	(bad)  
  447a1f:	(bad)  
  447a20:	inc    DWORD PTR [eax-0xf90000]
  447a26:	(bad)  
  447a27:	(bad)  
  447a28:	inc    DWORD PTR [eax-0xf90000]
  447a2e:	(bad)  
  447a2f:	(bad)  
  447a30:	inc    DWORD PTR [eax-0xf90000]
  447a36:	(bad)  
  447a37:	(bad)  
  447a38:	inc    eax
  447a3a:	add    BYTE PTR [eax],al
  447a3c:	pop    es
  447a3d:	(bad)  
  447a3e:	(bad)  
  447a3f:	(bad)  
  447a40:	push   eax
  447a42:	add    BYTE PTR [eax],al
  447a44:	pop    ds
  447a45:	(bad)  
  447a46:	(bad)  
  447a47:	(bad)  
  447a48:	push   eax
  447a4a:	add    BYTE PTR [eax],al
  447a4c:	pop    ds
  447a4d:	(bad)  
  447a4e:	(bad)  
  447a4f:	(bad)  
  447a50:	push   eax
  447a52:	add    BYTE PTR [eax],al
  447a54:	pop    ds
  447a55:	(bad)  
  447a56:	(bad)  
  447a57:	(bad)  
  447a58:	push   eax
  447a5a:	add    BYTE PTR [eax],al
  447a5c:	pop    ds
  447a5d:	(bad)  
  447a5e:	(bad)  
  447a5f:	(bad)  
  447a60:	push   eax
  447a62:	add    BYTE PTR [eax],al
  447a64:	pop    ds
  447a65:	(bad)  
  447a66:	(bad)  
  447a67:	(bad)  
  447a68:	push   eax
  447a6a:	add    BYTE PTR [eax],al
  447a6c:	aas    
  447a6d:	(bad)  
  447a6e:	(bad)  
  447a6f:	(bad)  
  447a70:	(bad)  
  447a71:	clc    
  447a72:	add    BYTE PTR [eax],al
  447a74:	jg     0x447a75
  447a76:	(bad)  
  447a77:	(bad)  
  447a78:	(bad)  
  447a79:	cld    
  447a7a:	add    BYTE PTR [eax],al
  447a7c:	(bad)  
  447a7d:	(bad)  
  447a7e:	(bad)  
  447a7f:	(bad)  
  447a80:	(bad)  
  447a81:	inc    BYTE PTR [eax]
  447a83:	add    edi,edi
  447a85:	(bad)  
  447a86:	(bad)  
  447a87:	(bad)  
  447a88:	(bad)  
  447a89:	inc    DWORD PTR [eax]
  447a8b:	add    edi,edi
  447a8d:	(bad)  
  447a8e:	(bad)  
  447a8f:	(bad)  
  447a90:	(bad)  
  447a91:	jmp    eax
  447a93:	pop    ds
  447a94:	(bad)  
  447a95:	(bad)  
  447a96:	(bad)  
  447a97:	jmp    FWORD PTR [eax]
  447a99:	add    BYTE PTR [eax],al
  447a9b:	add    BYTE PTR [eax],ah
  447a9d:	add    BYTE PTR [eax],al
  447a9f:	add    BYTE PTR [eax+0x0],al
  447aa2:	add    BYTE PTR [eax],al
  447aa4:	add    DWORD PTR [eax],eax
  447aa6:	and    BYTE PTR [eax],al
  447aa8:	add    BYTE PTR [eax],al
  447aaa:	add    BYTE PTR [eax],al
  447aac:	adc    BYTE PTR [eax],0x0
	...
  447abf:	add    bh,bh
  447ac1:	(bad)  
  447ac2:	inc    DWORD PTR [eax]
  447ac4:	(bad)  
  447ac5:	(bad)  
  447ac6:	inc    DWORD PTR [eax]
  447ac8:	(bad)  
  447ac9:	(bad)  
  447aca:	inc    DWORD PTR [eax]
  447acc:	and    esp,DWORD PTR [ebx]
  447ace:	and    eax,DWORD PTR ds:0x12454545
  447ad4:	cmp    al,0x3c
  447ad6:	cmp    al,0x27
  447ad8:	cmp    al,0x3c
  447ada:	aaa    
  447adb:	cmp    BYTE PTR [esp+edi*1],bh
  447ade:	cmp    al,0x46
  447ae0:	xor    dh,BYTE PTR [edx]
  447ae2:	push   ebp
  447ae3:	and    BYTE PTR gs:[eax],ah
  447ae6:	test   DWORD PTR [ecx-0x4967eaeb],edx
  447aec:	or     ecx,DWORD PTR [ebx]
  447aee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  447aef:	rol    BYTE PTR [ebx],cl
  447af1:	add    esi,DWORD PTR [ecx-0x4cfefe1c]
  447af7:	lock add BYTE PTR [eax],al
  447afa:	mov    cl,0xf8
  447afc:	add    BYTE PTR [eax],al
  447afe:	mov    cl,0xfb
  447b00:	add    BYTE PTR [eax],al
  447b02:	mov    cl,0xf9
  447b04:	add    BYTE PTR [eax],al
  447b06:	mov    cl,0xf3
  447b08:	add    eax,DWORD PTR [ebx]
  447b0a:	mov    dl,0xe9
  447b0c:	or     BYTE PTR [eax],cl
  447b0e:	stos   BYTE PTR es:[edi],al
  447b0f:	ficom  DWORD PTR [edx]
  447b11:	adc    bl,BYTE PTR [eax-0x72e3e340]
  447b17:	lahf   
  447b18:	cs cs pusha 
  447b1b:	jno    0x447b56
  447b1d:	cmp    DWORD PTR [edx+0x4e],eax
  447b20:	cmp    eax,0x3a3b363d
  447b25:	cmp    bh,BYTE PTR [edx]
  447b27:	cs inc ebp
  447b29:	inc    ebp
  447b2a:	inc    ebp
  447b2b:	sbb    DWORD PTR [ecx],esi
  447b2d:	xor    DWORD PTR [ecx],esi
  447b2f:	pop    es
  447b30:	sub    ebp,DWORD PTR [ebx]
  447b32:	sub    eax,DWORD PTR [eax]
  447b34:	(bad)  
  447b35:	(bad)  
  447b36:	inc    DWORD PTR [eax]
  447b38:	(bad)  
  447b39:	(bad)  
  447b3a:	inc    DWORD PTR [eax]
  447b3c:	(bad)  
  447b3d:	(bad)  
  447b3e:	inc    DWORD PTR [eax]
  447b40:	(bad)  
  447b41:	(bad)  
  447b42:	inc    DWORD PTR [eax]
  447b44:	(bad)  
  447b45:	(bad)  
  447b46:	inc    DWORD PTR [eax]
  447b48:	(bad)  
  447b49:	(bad)  
  447b4a:	inc    DWORD PTR [eax]
  447b4c:	inc    esi
  447b4d:	inc    esi
  447b4e:	inc    esi
  447b4f:	(bad)  
  447b51:	cmp    DWORD PTR [ecx],edi
  447b53:	cmp    al,0x3c
  447b55:	cmp    al,0x3a
  447b57:	cmp    DWORD PTR fs:[ecx],edi
  447b5a:	cmp    eax,0x851d1d75
  447b5f:	mov    al,0x5
  447b61:	add    eax,0xecb0
  447b66:	scas   al,BYTE PTR es:[edi]
  447b67:	inc    DWORD PTR [eax]
  447b69:	add    BYTE PTR [edi+edi*8-0x550000],ch
  447b70:	add    BYTE PTR [eax],al
  447b72:	stos   BYTE PTR es:[edi],al
  447b73:	inc    DWORD PTR [eax]
  447b75:	add    BYTE PTR [esi-0x4dffff01],ch
  447b7b:	inc    DWORD PTR [eax]
  447b7d:	add    BYTE PTR [edx-0x4dffff01],dh
  447b83:	inc    DWORD PTR [eax]
  447b85:	add    BYTE PTR [edi-0x54ffff01],ch
  447b8b:	inc    DWORD PTR [eax]
  447b8d:	add    BYTE PTR [edx-0x53ffff01],ch
  447b93:	inc    DWORD PTR [eax]
  447b95:	add    BYTE PTR [edi+edi*8-0x652feff],ch
  447b9c:	adc    eax,0x33c89815
  447ba1:	xor    ecx,DWORD PTR [esi-0x80]
  447ba4:	cmp    al,0x3c
  447ba6:	ss push 0x3a
  447ba9:	cmp    bh,BYTE PTR [edx]
  447bab:	dec    ebx
  447bac:	inc    edx
  447bad:	inc    edx
  447bae:	inc    edx
  447baf:	sbb    ch,BYTE PTR [edx]
  447bb1:	sub    ch,BYTE PTR [edx]
  447bb3:	add    edi,edi
  447bb5:	(bad)  
  447bb6:	inc    DWORD PTR [eax]
  447bb8:	(bad)  
  447bb9:	(bad)  
  447bba:	inc    DWORD PTR [eax]
  447bbc:	(bad)  
  447bbd:	(bad)  
  447bbe:	inc    DWORD PTR [eax]
  447bc0:	(bad)  
  447bc1:	(bad)  
  447bc2:	inc    DWORD PTR [eax]
  447bc4:	(bad)  
  447bc5:	(bad)  
  447bc6:	inc    DWORD PTR [eax]
  447bc8:	(bad)  
  447bc9:	(bad)  
  447bca:	inc    DWORD PTR [eax]
  447bcc:	inc    edx
  447bcd:	inc    edx
  447bce:	inc    edx
  447bcf:	(bad)  
  447bd1:	cmp    al,0x3c
  447bd3:	cmp    edi,DWORD PTR [edi]
  447bd5:	aas    
  447bd6:	xor    al,0x5d
  447bd8:	and    esp,DWORD PTR [ebx]
  447bda:	jl     0x447b7e
  447bdc:	add    BYTE PTR [eax],al
  447bde:	mov    esp,0xa70000ff
  447be3:	inc    DWORD PTR [eax]
  447be5:	add    BYTE PTR [eax-0x45ffff01],dh
  447beb:	inc    DWORD PTR [eax]
  447bed:	add    BYTE PTR [esi-0x41ffff01],bh
  447bf3:	inc    DWORD PTR [eax]
  447bf5:	add    BYTE PTR [edi+edi*8-0x470000],bh
  447bfc:	add    BYTE PTR [eax],al
  447bfe:	mov    ecx,0xba0000ff
  447c03:	inc    DWORD PTR [eax]
  447c05:	add    BYTE PTR [ebp-0x42ffff01],bh
  447c0b:	inc    DWORD PTR [eax]
  447c0d:	add    BYTE PTR [esi-0x43ffff01],bh
  447c13:	inc    DWORD PTR [eax]
  447c15:	add    BYTE PTR [ebp-0x55ffff01],dh
  447c1b:	inc    DWORD PTR [eax]
  447c1d:	add    BYTE PTR [ecx-0x5fecec01],dh
  447c23:	retf   0x3c3c
  447c26:	cmp    esp,DWORD PTR [edi+0x3c]
  447c29:	cmp    al,0x3c
  447c2b:	dec    ecx
  447c2c:	inc    ecx
  447c2d:	inc    ecx
  447c2e:	inc    ecx
  447c2f:	sbb    ah,BYTE PTR [ebx]
  447c31:	and    esp,DWORD PTR [ebx]
  447c33:	add    bh,bh
  447c35:	(bad)  
  447c36:	inc    DWORD PTR [eax]
  447c38:	(bad)  
  447c39:	(bad)  
  447c3a:	inc    DWORD PTR [eax]
  447c3c:	(bad)  
  447c3d:	(bad)  
  447c3e:	inc    DWORD PTR [eax]
  447c40:	(bad)  
  447c41:	(bad)  
  447c42:	inc    DWORD PTR [eax]
  447c44:	(bad)  
  447c45:	(bad)  
  447c46:	inc    DWORD PTR [eax]
  447c48:	(bad)  
  447c49:	(bad)  
  447c4a:	inc    DWORD PTR [eax]
  447c4c:	and    esp,DWORD PTR [ebx]
  447c4e:	and    al,BYTE PTR [esi+edi*1]
  447c51:	ds cmp eax,0x30424210
  447c57:	push   ss
  447c58:	sbb    DWORD PTR [ecx],ebx
  447c5a:	xchg   esi,eax
  447c5b:	xchg   ecx,eax
  447c5c:	add    BYTE PTR [eax],al
  447c5e:	ret    
  447c5f:	inc    DWORD PTR [eax]
  447c61:	add    BYTE PTR [edi+edi*8-0x4e0000],dh
  447c68:	add    BYTE PTR [eax],al
  447c6a:	scas   al,BYTE PTR es:[edi]
  447c6b:	inc    DWORD PTR [eax]
  447c6d:	add    BYTE PTR [edx-0x5affff01],ch
  447c73:	inc    DWORD PTR [eax]
  447c75:	add    BYTE PTR [esi-0x5dfcfc01],bl
  447c7b:	inc    DWORD PTR [edi]
  447c7d:	pop    es
  447c7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  447c7f:	inc    DWORD PTR [eax]
  447c81:	add    BYTE PTR [eax-0x61ffff01],ah
  447c87:	inc    DWORD PTR [eax]
  447c89:	add    BYTE PTR [ebx-0x56ffff01],ah
  447c8f:	inc    DWORD PTR [eax]
  447c91:	add    BYTE PTR [ebp-0x4effff01],ch
  447c97:	inc    DWORD PTR [eax]
  447c99:	add    BYTE PTR [ebp-0x48ffff01],dh
  447c9f:	inc    DWORD PTR ds:0x3cd5c005
  447ca5:	cmp    al,0x44
  447ca7:	and    DWORD PTR [ecx+0x41],eax
  447caa:	cmp    al,0x14
  447cac:	cs cs cs push es
  447cb0:	push   ds
  447cb1:	push   ds
  447cb2:	push   ds
  447cb3:	add    bh,bh
  447cb5:	(bad)  
  447cb6:	inc    DWORD PTR [eax]
  447cb8:	(bad)  
  447cb9:	(bad)  
  447cba:	inc    DWORD PTR [eax]
  447cbc:	(bad)  
  447cbd:	(bad)  
  447cbe:	inc    DWORD PTR [eax]
  447cc0:	(bad)  
  447cc1:	(bad)  
  447cc2:	inc    DWORD PTR [eax]
  447cc4:	(bad)  
  447cc5:	(bad)  
  447cc6:	inc    DWORD PTR [eax]
  447cc8:	(bad)  
  447cc9:	(bad)  
  447cca:	inc    DWORD PTR [eax]
  447ccc:	pop    es
  447ccd:	pop    es
  447cce:	add    BYTE PTR [eax],al
  447cd0:	inc    esp
  447cd1:	inc    esp
  447cd2:	xor    DWORD PTR [eax],eax
  447cd4:	cs cs dec ebx
  447cd7:	add    BYTE PTR ds:0x7baf15,dl
  447cdd:	add    bh,al
  447cdf:	inc    DWORD PTR [eax]
  447ce1:	add    BYTE PTR [eax-0x63ffff01],ah
  447ce7:	inc    DWORD PTR [eax]
  447ce9:	add    BYTE PTR [ebx-0x69ffff01],bl
  447cef:	inc    DWORD PTR [edx]
  447cf1:	add    dl,BYTE PTR [ebx-0x55d0d001]
  447cf7:	push   DWORD PTR [esi]
  447cf9:	lods   al,BYTE PTR ss:[esi]
  447cfb:	push   DWORD PTR [esi]
  447cfd:	ss stos DWORD PTR es:[edi],eax
  447cff:	inc    DWORD PTR [ecx+0x41]
  447d02:	mov    ah,0xff
  447d04:	daa    
  447d05:	daa    
  447d06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  447d07:	dec    DWORD PTR [esi]
  447d09:	push   cs
  447d0a:	cwde   
  447d0b:	inc    DWORD PTR [ecx]
  447d0d:	add    DWORD PTR [edi-0x65ffff01],edx
  447d13:	inc    DWORD PTR [eax]
  447d15:	add    BYTE PTR [ebp-0x62ffff01],bl
  447d1b:	inc    DWORD PTR [eax]
  447d1d:	add    BYTE PTR [edi+edi*8-0x3f36fbfc],dh
  447d24:	sub    eax,0x4900672d
  447d29:	dec    ecx
  447d2a:	das    
  447d2b:	add    BYTE PTR [esp+ebx*1],bl
  447d2e:	or     eax,DWORD PTR [eax]
  447d30:	and    DWORD PTR [ecx],esp
  447d32:	adc    BYTE PTR [eax],al
  447d34:	(bad)  
  447d35:	(bad)  
  447d36:	inc    DWORD PTR [eax]
  447d38:	(bad)  
  447d39:	(bad)  
  447d3a:	inc    DWORD PTR [eax]
  447d3c:	(bad)  
  447d3d:	(bad)  
  447d3e:	inc    DWORD PTR [eax]
  447d40:	(bad)  
  447d41:	(bad)  
  447d42:	inc    DWORD PTR [eax]
  447d44:	(bad)  
  447d45:	(bad)  
  447d46:	inc    DWORD PTR [eax]
  447d48:	(bad)  
  447d49:	(bad)  
  447d4a:	inc    DWORD PTR [eax]
  447d4c:	pop    es
  447d4d:	pop    es
  447d4e:	xchg   BYTE PTR [eax],al
  447d50:	adc    edx,DWORD PTR [ebx]
  447d52:	sbb    BYTE PTR [edx],0x11
  447d55:	adc    DWORD PTR [ecx-0x32fbfb6e],esi
  447d5b:	fiadd  WORD PTR [eax]
  447d5d:	add    BYTE PTR [ebx-0x6fffff01],bh
  447d63:	inc    DWORD PTR [eax]
  447d65:	add    BYTE PTR [edi+edi*8-0x770000],cl
  447d6c:	add    DWORD PTR [ecx],eax
  447d6e:	test   bh,bh
  447d70:	dec    ebx
  447d71:	dec    ebx
  447d72:	lods   al,BYTE PTR ds:[esi]
  447d73:	jmp    DWORD PTR [edi+0x67]
  447d76:	mov    ecx,0x912727ff
  447d7b:	call   FWORD PTR [ebx]
  447d7d:	sbb    ecx,DWORD PTR [eax-0x65caca01]
  447d83:	push   DWORD PTR [ebp+0x75]
  447d86:	ret    
  447d87:	dec    DWORD PTR [eax+0x48]
  447d8a:	test   eax,0x810000ff
  447d8f:	inc    DWORD PTR [eax]
  447d91:	add    BYTE PTR [edi-0x73ffff01],al
  447d97:	inc    DWORD PTR [eax]
  447d99:	add    BYTE PTR [ebp-0x56ffff01],cl
  447d9f:	inc    DWORD PTR [ecx]
  447da1:	add    esp,ecx
  447da3:	out    dx,eax
  447da4:	adc    DWORD PTR [ecx],edx
  447da6:	mov    esi,0x8a1919b1
  447dab:	inc    eax
  447dac:	push   cs
  447dad:	push   cs
  447dae:	add    DWORD PTR [eax],0x820e0e
  447db4:	(bad)  
  447db5:	(bad)  
  447db6:	inc    DWORD PTR [eax]
  447db8:	(bad)  
  447db9:	(bad)  
  447dba:	inc    DWORD PTR [eax]
  447dbc:	(bad)  
  447dbd:	(bad)  
  447dbe:	inc    DWORD PTR [eax]
  447dc0:	(bad)  
  447dc1:	(bad)  
  447dc2:	inc    DWORD PTR [eax]
  447dc4:	(bad)  
  447dc5:	(bad)  
  447dc6:	inc    DWORD PTR [eax]
  447dc8:	(bad)  
  447dc9:	(bad)  
  447dca:	inc    DWORD PTR [eax]
  447dcc:	add    al,0x4
  447dce:	mov    DWORD PTR ds:0xa7c91414,0xffce1f1f
  447dd8:	add    BYTE PTR [eax],al
  447dda:	mov    ebp,0xba0000ff
  447ddf:	inc    DWORD PTR [eax]
  447de1:	add    BYTE PTR [edi+0x790000ff],al
  447de7:	inc    DWORD PTR [eax]
  447de9:	add    BYTE PTR [ebp-0x1],dh
  447dec:	or     cl,BYTE PTR [edx]
  447dee:	jns    0x447def
  447df0:	jnp    0x447e6d
  447df2:	mov    edi,0xac6060ff
  447df7:	jmp    DWORD PTR [edi+0x67]
  447dfa:	mov    dl,0xff
  447dfc:	sub    ch,BYTE PTR [edx]
  447dfe:	xchg   edi,edi
  447e00:	add    BYTE PTR [eax],al
  447e02:	pop    esp
  447e03:	call   FWORD PTR [edi+0x5f]
  447e06:	stos   BYTE PTR es:[edi],al
  447e07:	inc    DWORD PTR [ebx+0x23ffc483]
  447e0d:	and    ecx,DWORD PTR [eax+0x730000ff]
  447e13:	inc    DWORD PTR [eax]
  447e15:	add    BYTE PTR [edi-0x1],dh
  447e18:	add    BYTE PTR [eax],al
  447e1a:	jle    0x447e1b
  447e1c:	add    BYTE PTR [eax],al
  447e1e:	stos   DWORD PTR es:[edi],eax
  447e1f:	inc    DWORD PTR [eax]
  447e21:	add    cl,al
  447e23:	dec    DWORD PTR [esi]
  447e25:	push   cs
  447e26:	ret    
  447e27:	jmp    FWORD PTR [ecx]
  447e29:	sub    esi,edx
  447e2b:	mov    al,0x2c
  447e2d:	sub    al,0xd8
  447e2f:	add    BYTE PTR [ebx],ch
  447e31:	sub    edx,edi
  447e33:	add    bh,bh
  447e35:	(bad)  
  447e36:	inc    DWORD PTR [eax]
  447e38:	(bad)  
  447e39:	(bad)  
  447e3a:	inc    DWORD PTR [eax]
  447e3c:	(bad)  
  447e3d:	(bad)  
  447e3e:	inc    DWORD PTR [eax]
  447e40:	(bad)  
  447e41:	(bad)  
  447e42:	inc    DWORD PTR [eax]
  447e44:	(bad)  
  447e45:	(bad)  
  447e46:	inc    DWORD PTR [eax]
  447e48:	(bad)  
  447e49:	(bad)  
  447e4a:	inc    DWORD PTR [eax]
  447e4c:	adc    al,0x14
  447e4e:	mov    bh,0x12
  447e50:	sub    ebp,DWORD PTR [ebx]
  447e52:	(bad)  
  447e53:	out    dx,eax
  447e54:	sbb    bl,BYTE PTR [edx]
  447e56:	mov    edx,0xa70000ff
  447e5b:	inc    DWORD PTR [eax]
  447e5d:	add    BYTE PTR [ecx-0x77ffff01],bh
  447e63:	inc    DWORD PTR [eax]
  447e65:	add    BYTE PTR [edi+edi*8+0x0],ch
  447e69:	add    BYTE PTR [edi+edi*8+0x1],ch
  447e6d:	add    DWORD PTR [ecx-0x1],ebp
  447e70:	fs fs stos BYTE PTR es:[edi],al
  447e73:	inc    DWORD PTR [esp+eax*4+0x7474ffc0]
  447e7a:	mov    bl,0xff
  447e7c:	xor    al,0x34
  447e7e:	xchg   bh,bh
  447e80:	daa    
  447e81:	daa    
  447e82:	jp     0x447e83
  447e84:	pop    edx
  447e85:	pop    edx
  447e86:	mov    ds:0xa96363ff,al
  447e8b:	inc    DWORD PTR [ebp+0x45]
  447e8e:	xchg   esi,eax
  447e8f:	call   FWORD PTR [edx]
  447e91:	sbb    bh,BYTE PTR [edi+edi*8+0x2]
  447e95:	add    ch,BYTE PTR [edi+edi*8+0x0]
  447e99:	add    BYTE PTR [eax-0x1],bh
  447e9c:	add    BYTE PTR [eax],al
  447e9e:	mov    cl,0xff
  447ea0:	add    BYTE PTR [eax],al
  447ea2:	lods   eax,DWORD PTR ds:[esi]
  447ea3:	dec    DWORD PTR [eax]
  447ea5:	or     BYTE PTR [edi+edi*8-0x4a31c7c8],ch
  447eac:	cmp    BYTE PTR [eax],bh
  447eae:	into   
  447eaf:	add    BYTE PTR [eax],bh
  447eb1:	cmp    dh,cl
  447eb3:	add    bh,bh
  447eb5:	(bad)  
  447eb6:	inc    DWORD PTR [eax]
  447eb8:	(bad)  
  447eb9:	(bad)  
  447eba:	inc    DWORD PTR [eax]
  447ebc:	(bad)  
  447ebd:	(bad)  
  447ebe:	inc    DWORD PTR [eax]
  447ec0:	(bad)  
  447ec1:	(bad)  
  447ec2:	inc    DWORD PTR [eax]
  447ec4:	(bad)  
  447ec5:	(bad)  
  447ec6:	inc    DWORD PTR [eax]
  447ec8:	(bad)  
  447ec9:	(bad)  
  447eca:	inc    DWORD PTR [eax]
  447ecc:	or     BYTE PTR [eax],cl
  447ece:	mov    ds:0xb420200a,eax
  447ed3:	int    0x21
  447ed5:	and    DWORD PTR [ebx-0x69ffff01],esi
  447edb:	inc    DWORD PTR [eax]
  447edd:	add    BYTE PTR [eax-0x60fdfd01],ch
  447ee3:	inc    DWORD PTR [edx]
  447ee5:	add    dh,BYTE PTR [edi+edi*8+0x4]
  447ee9:	add    al,0x6e
  447eeb:	call   DWORD PTR [ecx]
  447eed:	adc    DWORD PTR [ecx-0x1],esi
  447ef0:	sub    BYTE PTR [eax],ch
  447ef2:	jle    0x447ef3
  447ef4:	imul   ebp,DWORD PTR [ecx-0x57],0xa66464ff
  447efb:	push   DWORD PTR [ecx]
  447efd:	xor    DWORD PTR [ecx+0x7e2e2eff],eax
  447f03:	push   DWORD PTR [edx]
  447f05:	xor    al,BYTE PTR [edx-0x73c1c101]
  447f0b:	(bad)  
  447f0c:	cmp    bh,BYTE PTR [edx]
  447f0e:	(bad)  
  447f0f:	jmp    DWORD PTR [ecx]
  447f11:	and    DWORD PTR [edi-0x1],edi
  447f14:	push   es
  447f15:	push   es
  447f16:	jb     0x447f17
  447f18:	add    al,BYTE PTR [edx]
  447f1a:	(bad)  
  447f1b:	inc    DWORD PTR [ecx]
  447f1d:	add    DWORD PTR [esi-0x68ffff01],ebp
  447f23:	dec    DWORD PTR ds:0x38ffa40d
  447f29:	cmp    bl,al
  447f2b:	mov    ch,0x38
  447f2d:	cmp    bl,al
  447f2f:	add    BYTE PTR [eax],bh
  447f31:	cmp    bl,al
  447f33:	add    bh,bh
  447f35:	(bad)  
  447f36:	inc    DWORD PTR [eax]
  447f38:	(bad)  
  447f39:	(bad)  
  447f3a:	inc    DWORD PTR [eax]
  447f3c:	(bad)  
  447f3d:	(bad)  
  447f3e:	inc    DWORD PTR [eax]
  447f40:	(bad)  
  447f41:	(bad)  
  447f42:	inc    DWORD PTR [eax]
  447f44:	(bad)  
  447f45:	(bad)  
  447f46:	inc    DWORD PTR [eax]
  447f48:	(bad)  
  447f49:	(bad)  
  447f4a:	inc    DWORD PTR [eax]
  447f4c:	push   es
  447f4d:	push   es
  447f4e:	fwait
  447f4f:	add    BYTE PTR [eax],cl
  447f51:	or     BYTE PTR [ebx-0x51d5d5a4],dl
  447f57:	cld    
  447f58:	pop    es
  447f59:	pop    es
  447f5a:	mov    ?,edi
  447f5c:	add    BYTE PTR [eax],al
  447f5e:	mov    edi,edi
  447f60:	add    eax,DWORD PTR [ebx]
  447f62:	lods   eax,DWORD PTR ds:[esi]
  447f63:	inc    DWORD PTR ds:0x6ff8d05
  447f69:	push   es
  447f6a:	je     0x447f6b
  447f6c:	dec    ecx
  447f6d:	dec    ecx
  447f6e:	call   0x5cff:0xb27171ff
  447f75:	pop    esp
  447f76:	mov    ds:0xb87a7aff,eax
  447f7b:	(bad)  
  447f7c:	jge    0x447ffb
  447f7e:	mov    edx,0xac6969ff
  447f83:	inc    DWORD PTR [eax+0x7affbe80]
  447f89:	jp     0x447f44
  447f8b:	call   DWORD PTR [edx+0x52]
  447f8e:	mov    ds:0x8f3535ff,al
  447f93:	call   FWORD PTR [ebx]
  447f95:	sbb    ecx,DWORD PTR [ebx-0x56fdfd01]
  447f9b:	inc    DWORD PTR [ecx]
  447f9d:	add    DWORD PTR [ebp-0x79fefe01],edx
  447fa3:	jmp    DWORD PTR [esp]
  447fa6:	lods   al,BYTE PTR ds:[esi]
  447fa7:	call   FWORD PTR [ebx]
  447fa9:	sbb    esp,DWORD PTR [edx-0x5de4e46a]
  447faf:	add    BYTE PTR [ebx],bl
  447fb1:	sbb    esp,DWORD PTR [edx-0x100]
  447fb7:	add    bh,bh
  447fb9:	(bad)  
  447fba:	inc    DWORD PTR [eax]
  447fbc:	(bad)  
  447fbd:	(bad)  
  447fbe:	inc    DWORD PTR [eax]
  447fc0:	(bad)  
  447fc1:	(bad)  
  447fc2:	inc    DWORD PTR [eax]
  447fc4:	(bad)  
  447fc5:	(bad)  
  447fc6:	inc    DWORD PTR [eax]
  447fc8:	(bad)  
  447fc9:	(bad)  
  447fca:	inc    DWORD PTR [eax]
  447fcc:	add    BYTE PTR [eax],al
  447fce:	js     0x447fd0
  447fd0:	add    BYTE PTR [eax],al
  447fd2:	js     0x447fd4
  447fd4:	adc    edx,DWORD PTR [ebx]
  447fd6:	mov    ss,WORD PTR [ebp-0x63e0e1]
  447fdc:	add    eax,DWORD PTR [ebx]
  447fde:	ja     0x447fdf
  447fe0:	add    BYTE PTR [eax],al
  447fe2:	(bad)  
  447fe3:	inc    DWORD PTR [edi]
  447fe5:	pop    es
  447fe6:	mov    al,0xff
  447fe8:	pop    es
  447fe9:	pop    es
  447fea:	mov    edi,?
  447fec:	or     DWORD PTR [ecx],ecx
  447fee:	cmp    bh,0x4c
  447ff1:	dec    esp
  447ff2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  447ff3:	(bad)  
  447ff4:	jg     0x448075
  447ff6:	(bad)  
  447ff9:	xchg   cl,cl
  447ffb:	inc    DWORD PTR [eax+0x6bffc580]
  448001:	imul   edi,DWORD PTR [eax-0x52a6a601],0xffffffff
  448008:	es es (bad) 
  44800b:	inc    DWORD PTR [ecx]
  44800d:	add    DWORD PTR [ebx-0x1],edi
  448010:	or     BYTE PTR [eax],cl
  448012:	test   edi,edi
  448014:	or     eax,0x1ffaa0d
  448019:	add    DWORD PTR [eax+0x730000ff],esp
  44801f:	call   DWORD PTR [esp+edx*1]
  448022:	xchg   ecx,eax
  448023:	call   FWORD PTR [esi]
  448025:	push   ds
  448026:	xchg   ecx,eax
  448027:	iret   
  448028:	add    BYTE PTR [eax],al
  44802a:	xchg   DWORD PTR ds:0x870000,ebx
  448030:	add    BYTE PTR [eax],al
  448032:	xchg   DWORD PTR [eax],eax
  448034:	(bad)  
  448035:	(bad)  
  448036:	inc    DWORD PTR [eax]
  448038:	(bad)  
  448039:	(bad)  
  44803a:	inc    DWORD PTR [eax]
  44803c:	(bad)  
  44803d:	(bad)  
  44803e:	inc    DWORD PTR [eax]
  448040:	(bad)  
  448041:	(bad)  
  448042:	inc    DWORD PTR [eax]
  448044:	(bad)  
  448045:	(bad)  
  448046:	inc    DWORD PTR [eax]
  448048:	(bad)  
  448049:	(bad)  
  44804a:	inc    DWORD PTR [eax]
  44804c:	add    BYTE PTR [eax],al
  44804e:	jp     0x448050
  448050:	add    BYTE PTR [eax],al
  448052:	jp     0x448054
  448054:	add    BYTE PTR [eax],al
  448056:	jp     0x448062
  448058:	push   ss
  448059:	push   ss
  44805a:	jl     0x448003
  44805c:	adc    al,0x14
  44805e:	test   bh,bh
  448060:	add    DWORD PTR [ecx],eax
  448062:	inc    DWORD PTR fs:[ebx]
  448065:	add    esp,DWORD PTR [eax-0x42f2f201]
  44806b:	dec    DWORD PTR [edx]
  44806d:	or     bl,BYTE PTR [ebp-0x6dfbfb01]
  448073:	call   FWORD PTR [ebx]
  448075:	sbb    ebx,DWORD PTR [ebp+0x661e1eff]
  44807b:	inc    DWORD PTR [ecx]
  44807d:	add    DWORD PTR [edx],eax
  44807f:	inc    DWORD PTR [edx]
  448081:	add    al,BYTE PTR [esi]
  448083:	dec    DWORD PTR [ecx]
  448085:	or     DWORD PTR [eax-0x1],ebx
  448088:	add    eax,0xbff9305
  44808d:	or     ebx,DWORD PTR [edx-0x4df2f201]
  448093:	inc    DWORD PTR [esi]
  448095:	push   es
  448096:	mov    ch,0xff
  448098:	add    BYTE PTR [eax],al
  44809a:	outs   dx,BYTE PTR ds:[esi]
  44809b:	dec    DWORD PTR [ebx]
  44809d:	or     esi,DWORD PTR [esi-0x1]
  4480a0:	sbb    ebx,DWORD PTR [ebx]
  4480a2:	adc    ebp,0x304e0505
  4480a8:	add    al,BYTE PTR [edx]
  4480aa:	mov    DWORD PTR [eax],eax
  4480ac:	add    al,BYTE PTR [edx]
  4480ae:	mov    DWORD PTR [eax],eax
  4480b0:	add    al,BYTE PTR [edx]
  4480b2:	mov    DWORD PTR [eax],eax
  4480b4:	(bad)  
  4480b5:	(bad)  
  4480b6:	inc    DWORD PTR [eax]
  4480b8:	(bad)  
  4480b9:	(bad)  
  4480ba:	inc    DWORD PTR [eax]
  4480bc:	(bad)  
  4480bd:	(bad)  
  4480be:	inc    DWORD PTR [eax]
  4480c0:	(bad)  
  4480c1:	(bad)  
  4480c2:	inc    DWORD PTR [eax]
  4480c4:	(bad)  
  4480c5:	(bad)  
  4480c6:	inc    DWORD PTR [eax]
  4480c8:	(bad)  
  4480c9:	(bad)  
  4480ca:	inc    DWORD PTR [eax]
  4480cc:	add    BYTE PTR [eax],al
  4480ce:	xchg   BYTE PTR [eax],al
  4480d0:	add    BYTE PTR [eax],al
  4480d2:	xchg   BYTE PTR [eax],al
  4480d4:	add    al,BYTE PTR [edx]
  4480d6:	mov    BYTE PTR [eax],al
  4480d8:	add    eax,DWORD PTR [ebx]
  4480da:	dec    ebp
  4480db:	push   cs
  4480dc:	adc    BYTE PTR [eax],dl
  4480de:	pop    eax
  4480df:	cdq    
  4480e0:	or     cl,BYTE PTR [edx]
  4480e2:	push   0xffffffff
  4480e4:	add    DWORD PTR [ecx],eax
  4480e6:	pop    edi
  4480e7:	dec    DWORD PTR [eax]
  4480e9:	or     BYTE PTR [esi-0x5af1f101],dh
  4480ef:	inc    DWORD PTR [esi]
  4480f1:	push   es
  4480f2:	push   eax
  4480f3:	inc    DWORD PTR [ecx]
  4480f5:	add    DWORD PTR [ebx],esp
  4480f7:	inc    DWORD PTR [eax]
  4480f9:	add    BYTE PTR [ecx],al
  4480fb:	inc    DWORD PTR [eax]
  4480fd:	add    BYTE PTR [eax],al
  4480ff:	inc    DWORD PTR [eax]
  448101:	add    BYTE PTR [eax],al
  448103:	inc    DWORD PTR [ecx]
  448105:	add    DWORD PTR [eax],edx
  448107:	dec    DWORD PTR [esi]
  448109:	push   cs
  44810a:	mov    bh,0xff
  44810c:	adc    DWORD PTR [ecx],edx
  44810e:	int3   
  44810f:	dec    DWORD PTR ds:0x2ffce0d
  448115:	add    dh,BYTE PTR [esi-0x1]
  448118:	push   es
  448119:	push   es
  44811a:	pop    esi
  44811b:	call   DWORD PTR [ecx]
  44811d:	adc    DWORD PTR [edi-0x3a],esp
  448120:	or     DWORD PTR [ecx],ecx
  448122:	dec    ecx
  448123:	xor    BYTE PTR [eax],cl
  448125:	or     BYTE PTR [ebp+0x0],dl
  448128:	add    al,BYTE PTR [edx]
  44812a:	mov    DWORD PTR [eax],eax
  44812c:	add    al,BYTE PTR [edx]
  44812e:	mov    DWORD PTR [eax],eax
  448130:	add    al,BYTE PTR [edx]
  448132:	mov    DWORD PTR [eax],eax
  448134:	(bad)  
  448135:	(bad)  
  448136:	inc    DWORD PTR [eax]
  448138:	(bad)  
  448139:	(bad)  
  44813a:	inc    DWORD PTR [eax]
  44813c:	(bad)  
  44813d:	(bad)  
  44813e:	inc    DWORD PTR [eax]
  448140:	(bad)  
  448141:	(bad)  
  448142:	inc    DWORD PTR [eax]
  448144:	(bad)  
  448145:	(bad)  
  448146:	inc    DWORD PTR [eax]
  448148:	(bad)  
  448149:	(bad)  
  44814a:	inc    DWORD PTR [eax]
  44814c:	add    BYTE PTR [eax],al
  44814e:	add    BYTE PTR ss:[eax],al
  448151:	add    BYTE PTR [esi],dh
  448153:	add    BYTE PTR [ecx],al
  448155:	add    DWORD PTR [edi],esi
  448157:	add    BYTE PTR [eax],al
  448159:	add    BYTE PTR [eax],al
  44815b:	add    BYTE PTR [edx],al
  44815d:	add    ah,BYTE PTR [edx]
  44815f:	push   es
  448160:	add    eax,0x1784105
  448165:	add    DWORD PTR [edi],esi
  448167:	lock add BYTE PTR [eax],al
  44816a:	or     edi,edi
  44816c:	add    DWORD PTR [ecx],eax
  44816e:	or     edi,edi
  448170:	add    eax,DWORD PTR [ebx]
  448172:	and    edi,edi
  448174:	adc    al,0x14
  448176:	fdivp  st(7),st
  448178:	adc    edx,DWORD PTR [ebx]
  44817a:	aam    0xff
  44817c:	add    BYTE PTR [eax],al
  44817e:	add    bh,bh
  448180:	add    BYTE PTR [eax],al
  448182:	push   es
  448183:	inc    DWORD PTR [edi]
  448185:	pop    es
  448186:	dec    esi
  448187:	call   DWORD PTR [esp+edx*1]
  44818a:	out    dx,al
  44818b:	dec    DWORD PTR [edi]
  44818d:	paddusw mm7,mm7
  448190:	add    eax,DWORD PTR [ebx]
  448192:	jge    0x448193
  448194:	add    BYTE PTR [eax],al
  448196:	dec    edx
  448197:	inc    DWORD PTR ds:0x7a54a05
  44819d:	pop    es
  44819e:	aas    
  44819f:	and    DWORD PTR [ebx],ecx
  4481a1:	or     edx,DWORD PTR [eax+0x0]
  4481a4:	or     BYTE PTR [eax],cl
  4481a6:	push   ebp
  4481a7:	add    BYTE PTR [edx],al
  4481a9:	add    cl,BYTE PTR [ecx-0x76fdfe00]
  4481af:	add    BYTE PTR [edx],al
  4481b1:	add    cl,BYTE PTR [ecx-0x100]
  4481b7:	add    bh,bh
  4481b9:	(bad)  
  4481ba:	inc    DWORD PTR [eax]
  4481bc:	(bad)  
  4481bd:	(bad)  
  4481be:	inc    DWORD PTR [eax]
  4481c0:	(bad)  
  4481c1:	(bad)  
  4481c2:	inc    DWORD PTR [eax]
  4481c4:	(bad)  
  4481c5:	(bad)  
  4481c6:	inc    DWORD PTR [eax]
  4481c8:	(bad)  
  4481c9:	(bad)  
  4481ca:	inc    DWORD PTR [eax]
	...
  4481e0:	add    BYTE PTR [eax],al
  4481e2:	add    BYTE PTR [esi],dh
  4481e4:	add    BYTE PTR [eax],al
  4481e6:	add    esp,esi
  4481e8:	add    BYTE PTR [eax],al
  4481ea:	adc    al,0xda
  4481ec:	add    DWORD PTR [ecx],eax
  4481ee:	dec    esp
  4481ef:	cld    
  4481f0:	or     BYTE PTR [eax],cl
  4481f2:	cwde   
  4481f3:	call   DWORD PTR [edx]
  4481f5:	adc    bl,bh
  4481f7:	call   DWORD PTR ds:0x14fff115
  4481fd:	adc    al,0xe8
  4481ff:	call   DWORD PTR ds:0x14fff115
  448205:	adc    al,0xe7
  448207:	dec    DWORD PTR [esp+ecx*1]
  44820a:	mov    eax,0x6e0303ff
  44820f:	inc    DWORD PTR [eax]
  448211:	add    BYTE PTR [eax],bh
  448213:	int3   
  448214:	add    BYTE PTR [eax],al
  448216:	xor    eax,0x3100005f
  44821b:	or     eax,0x450808
  448220:	or     ecx,DWORD PTR [ebx]
  448222:	push   eax
  448223:	add    BYTE PTR [eax],cl
  448225:	or     BYTE PTR [ebp+0x0],dl
  448228:	add    al,BYTE PTR [edx]
  44822a:	mov    DWORD PTR [eax],eax
  44822c:	add    al,BYTE PTR [edx]
  44822e:	mov    DWORD PTR [eax],eax
  448230:	add    al,BYTE PTR [edx]
  448232:	mov    DWORD PTR [eax],eax
  448234:	(bad)  
  448235:	(bad)  
  448236:	inc    DWORD PTR [eax]
  448238:	(bad)  
  448239:	(bad)  
  44823a:	inc    DWORD PTR [eax]
  44823c:	(bad)  
  44823d:	(bad)  
  44823e:	inc    DWORD PTR [eax]
  448240:	(bad)  
  448241:	(bad)  
  448242:	inc    DWORD PTR [eax]
  448244:	(bad)  
  448245:	(bad)  
  448246:	inc    DWORD PTR [eax]
  448248:	(bad)  
  448249:	(bad)  
  44824a:	inc    DWORD PTR [eax]
	...
  44825c:	add    BYTE PTR [eax],al
  44825e:	add    BYTE PTR [ecx+0x0],ch
  448261:	add    BYTE PTR [eax],al
  448263:	cli    
  448264:	add    BYTE PTR [eax],al
  448266:	add    BYTE PTR [eax+0x0],ah
  448269:	add    BYTE PTR ds:0x65000019,bh
  44826f:	xchg   DWORD PTR [eax],eax
  448271:	add    BYTE PTR [ecx-0x23ffff08],dh
  448277:	inc    DWORD PTR [edx]
  448279:	add    bl,dh
  44827b:	inc    DWORD PTR [edx]
  44827d:	add    ch,bh
  44827f:	inc    DWORD PTR [ebx]
  448281:	add    ebp,esi
  448283:	inc    DWORD PTR [ecx]
  448285:	add    dh,ah
  448287:	inc    DWORD PTR [eax]
  448289:	add    BYTE PTR [edi+0x550000fc],dh
  44828f:	scas   eax,DWORD PTR es:[edi]
  448290:	add    BYTE PTR [eax],al
  448292:	xor    edi,DWORD PTR [ecx]
  448294:	add    BYTE PTR [eax],al
  448296:	into   
  448297:	add    DWORD PTR [eax],eax
  448299:	add    ch,dl
  44829b:	add    BYTE PTR [eax],cl
  44829d:	or     BYTE PTR [eax+eax*1],bh
  4482a0:	or     al,0xc
  4482a2:	dec    eax
  4482a3:	add    BYTE PTR [eax],cl
  4482a5:	or     BYTE PTR [ebp+0x0],cl
  4482a8:	add    al,BYTE PTR [edx]
  4482aa:	test   DWORD PTR [eax],eax
  4482ac:	add    al,BYTE PTR [edx]
  4482ae:	test   DWORD PTR [eax],eax
  4482b0:	add    al,BYTE PTR [edx]
  4482b2:	test   DWORD PTR [eax],eax
  4482b4:	(bad)  
  4482b5:	(bad)  
  4482b6:	inc    DWORD PTR [eax]
  4482b8:	(bad)  
  4482b9:	(bad)  
  4482ba:	inc    DWORD PTR [eax]
  4482bc:	(bad)  
  4482bd:	(bad)  
  4482be:	inc    DWORD PTR [eax]
  4482c0:	(bad)  
  4482c1:	(bad)  
  4482c2:	inc    DWORD PTR [eax]
  4482c4:	(bad)  
  4482c5:	(bad)  
  4482c6:	inc    DWORD PTR [eax]
  4482c8:	(bad)  
  4482c9:	(bad)  
  4482ca:	inc    DWORD PTR [eax]
	...
  4482d8:	add    BYTE PTR [eax],al
  4482da:	add    BYTE PTR [edx],cl
  4482dc:	add    BYTE PTR [eax],al
  4482de:	add    dh,dl
  4482e0:	add    BYTE PTR [eax],al
  4482e2:	add    BYTE PTR [edi+0x0],bl
  4482e5:	add    BYTE PTR [eax],al
  4482e7:	add    BYTE PTR [eax],al
  4482e9:	add    BYTE PTR [edi-0xaffffa3],dh
  4482ef:	jecxz  0x4482f1
  4482f1:	add    al,ch
  4482f3:	inc    DWORD PTR [eax]
  4482f5:	add    al,dl
  4482f7:	inc    DWORD PTR [eax]
  4482f9:	add    bl,cl
  4482fb:	inc    DWORD PTR [eax]
  4482fd:	add    ah,cl
  4482ff:	inc    DWORD PTR [eax]
  448301:	add    ah,cl
  448303:	inc    DWORD PTR [eax]
  448305:	add    dh,cl
  448307:	inc    DWORD PTR [eax]
  448309:	add    cl,ah
  44830b:	inc    DWORD PTR [eax]
  44830d:	add    ah,ah
  44830f:	loop   0x448311
  448311:	add    cl,dl
  448313:	arpl   WORD PTR [eax],ax
  448315:	add    cl,dl
  448317:	add    al,BYTE PTR [eax]
	...
  448331:	add    bh,al
  448333:	add    bh,bh
  448335:	(bad)  
  448336:	inc    DWORD PTR [eax]
  448338:	(bad)  
  448339:	(bad)  
  44833a:	inc    DWORD PTR [eax]
  44833c:	(bad)  
  44833d:	(bad)  
  44833e:	inc    DWORD PTR [eax]
  448340:	(bad)  
  448341:	(bad)  
  448342:	inc    DWORD PTR [eax]
  448344:	(bad)  
  448345:	(bad)  
  448346:	inc    DWORD PTR [eax]
  448348:	(bad)  
  448349:	(bad)  
  44834a:	inc    DWORD PTR [eax]
  44834c:	add    BYTE PTR [eax],al
  44834e:	add    BYTE PTR [eax],al
  448350:	add    BYTE PTR [eax],al
  448352:	add    BYTE PTR [ecx],cl
  448354:	add    BYTE PTR [eax],al
  448356:	add    BYTE PTR [ecx-0x7000000],bl
  44835c:	add    BYTE PTR [eax],al
  44835e:	add    bl,al
  448360:	add    BYTE PTR [eax],al
  448362:	add    BYTE PTR [ecx],al
  448364:	add    BYTE PTR [eax],al
  448366:	fist   WORD PTR [ebx+0x0]
  448369:	add    dh,ah
  44836b:	call   0x1a8370
  448370:	add    BYTE PTR [esi],ah
  448372:	aad    0xff
  448374:	add    BYTE PTR [edi-0x1f],cl
  448377:	inc    DWORD PTR [edi]
  448379:	cmp    edx,ebp
  44837b:	inc    DWORD PTR [eax]
  44837d:	add    DWORD PTR [esi-0x33d2f901],esi
  448383:	inc    DWORD PTR [ecx]
  448385:	dec    edi
  448386:	loope  0x448387
  448388:	add    BYTE PTR [ecx],dh
  44838a:	(bad)  
  44838c:	add    BYTE PTR [eax],al
  44838e:	sar    edi,cl
  448390:	add    BYTE PTR [eax],al
  448392:	jmp    0xf8448481
  448397:	pop    eax
  448398:	add    BYTE PTR [eax],al
  44839a:	jmp    0x4483a4
  44839c:	add    BYTE PTR [eax],al
  44839e:	add    BYTE PTR [ebx],dh
  4483a0:	add    BYTE PTR [eax],al
  4483a2:	add    bl,dh
  4483a4:	add    BYTE PTR [eax],al
  4483a6:	add    BYTE PTR [esi+0x18000000],ch
  4483ac:	add    BYTE PTR [eax],al
  4483ae:	add    BYTE PTR [eax],al
  4483b0:	add    BYTE PTR [eax],al
  4483b2:	in     eax,dx
  4483b3:	add    bh,bh
  4483b5:	(bad)  
  4483b6:	inc    DWORD PTR [eax]
  4483b8:	(bad)  
  4483b9:	(bad)  
  4483ba:	inc    DWORD PTR [eax]
  4483bc:	(bad)  
  4483bd:	(bad)  
  4483be:	inc    DWORD PTR [eax]
  4483c0:	(bad)  
  4483c1:	(bad)  
  4483c2:	inc    DWORD PTR [eax]
  4483c4:	(bad)  
  4483c5:	(bad)  
  4483c6:	inc    DWORD PTR [eax]
  4483c8:	(bad)  
  4483c9:	(bad)  
  4483ca:	inc    DWORD PTR [eax]
  4483cc:	add    BYTE PTR [eax],al
  4483ce:	add    BYTE PTR [eax],al
  4483d0:	add    BYTE PTR [eax],al
  4483d2:	add    BYTE PTR [eax+0x0],ah
  4483d5:	add    BYTE PTR [eax],al
  4483d7:	inc    DWORD PTR [eax]
  4483d9:	add    BYTE PTR [eax],al
  4483db:	inc    DWORD PTR [eax]
  4483dd:	add    BYTE PTR [eax],al
  4483df:	mov    bl,0x0
  4483e1:	add    bh,bh
  4483e3:	push   ds
  4483e4:	add    BYTE PTR [eax],al
  4483e6:	test   esp,0xffdd2b00
  4483ec:	add    DWORD PTR [ebx+eiz*8-0x1],edi
  4483f0:	adc    eax,eax
  4483f2:	idiv   edi
  4483f4:	push   ds
  4483f5:	stos   DWORD PTR es:[edi],eax
  4483f6:	repz dec DWORD PTR [esi]
  4483f9:	cmp    eax,eax
  4483fb:	inc    DWORD PTR [eax]
  4483fd:	add    BYTE PTR [edi+edi*8-0x49dcf7],ah
  448404:	sbb    eax,0x17ffe993
  448409:	(bad)  
  44840a:	sti    
  44840b:	inc    DWORD PTR [ebx]
  44840d:	mov    ebx,gs
  44840f:	inc    DWORD PTR [eax]
  448411:	cmp    ebx,esi
  448413:	inc    DWORD PTR [eax]
  448415:	add    ebp,esp
  448417:	(bad)  
  448418:	add    BYTE PTR [eax],al
  44841a:	out    dx,eax
  44841b:	sub    eax,DWORD PTR [eax]
  44841d:	add    BYTE PTR [eax],al
  44841f:	js     0x448421
  448421:	add    BYTE PTR [eax],al
  448423:	inc    DWORD PTR [eax]
  448425:	add    BYTE PTR [eax],al
  448427:	inc    DWORD PTR [eax]
  448429:	add    BYTE PTR [eax],al
  44842b:	xchg   esi,eax
  44842c:	add    BYTE PTR [eax],al
  44842e:	add    BYTE PTR [eax],al
  448430:	add    BYTE PTR [eax],al
  448432:	out    dx,al
  448433:	add    bh,bh
  448435:	(bad)  
  448436:	inc    DWORD PTR [eax]
  448438:	(bad)  
  448439:	(bad)  
  44843a:	inc    DWORD PTR [eax]
  44843c:	(bad)  
  44843d:	(bad)  
  44843e:	inc    DWORD PTR [eax]
  448440:	(bad)  
  448441:	(bad)  
  448442:	inc    DWORD PTR [eax]
  448444:	(bad)  
  448445:	(bad)  
  448446:	inc    DWORD PTR [eax]
  448448:	(bad)  
  448449:	(bad)  
  44844a:	inc    DWORD PTR [eax]
  44844c:	add    BYTE PTR [eax],al
  44844e:	add    BYTE PTR [eax],al
  448450:	add    BYTE PTR [eax],al
  448452:	add    BYTE PTR [ecx+0x0],ch
  448455:	add    BYTE PTR [eax],al
  448457:	inc    DWORD PTR [eax]
  448459:	add    BYTE PTR [eax],al
  44845b:	inc    DWORD PTR [eax]
  44845d:	add    BYTE PTR [edi+esi*4],al
  448460:	add    BYTE PTR [eax],al
  448462:	out    dx,al
  448463:	pusha  
  448464:	add    BYTE PTR [ebx],al
  448466:	retf   
  448467:	stc    
  448468:	add    ebp,DWORD PTR [ebp-0x2c]
  44846b:	call   DWORD PTR [esi]
  44846d:	(bad)  
  44846e:	out    dx,al
  44846f:	jmp    FWORD PTR [edx]
  448471:	mov    esi,0x6924ffe7
  448476:	(bad)  
  448477:	dec    DWORD PTR [eax]
  448479:	adc    BYTE PTR [ebx-0x69ffff01],bl
  44847f:	inc    DWORD PTR [esi+eax*1]
  448482:	xchg   esi,eax
  448483:	call   FWORD PTR ds:0x2bffb953
  448489:	mov    bl,0xe2
  44848b:	call   FWORD PTR [ecx*8-0x78f9000f]
  448492:	fdiv   st(7),st
  448494:	add    BYTE PTR [ebx],dl
  448496:	retf   
  448497:	inc    DWORD PTR [eax]
  448499:	add    eax,ebp
  44849b:	imul   eax,DWORD PTR [eax],0x0
  44849e:	add    BYTE PTR [eax+0x0],bh
  4484a1:	add    BYTE PTR [eax],al
  4484a3:	inc    DWORD PTR [eax]
  4484a5:	add    BYTE PTR [eax],al
  4484a7:	inc    DWORD PTR [eax]
  4484a9:	add    BYTE PTR [eax],al
  4484ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4484ac:	add    BYTE PTR [eax],al
  4484ae:	add    BYTE PTR [eax],al
  4484b0:	add    BYTE PTR [eax],al
  4484b2:	jmp    0xff00:0xffffff00
  4484b9:	(bad)  
  4484ba:	inc    DWORD PTR [eax]
  4484bc:	(bad)  
  4484bd:	(bad)  
  4484be:	inc    DWORD PTR [eax]
  4484c0:	(bad)  
  4484c1:	(bad)  
  4484c2:	inc    DWORD PTR [eax]
  4484c4:	(bad)  
  4484c5:	(bad)  
  4484c6:	inc    DWORD PTR [eax]
  4484c8:	(bad)  
  4484c9:	(bad)  
  4484ca:	inc    DWORD PTR [eax]
  4484cc:	add    BYTE PTR [eax],al
  4484ce:	add    BYTE PTR [eax],al
  4484d0:	add    BYTE PTR [eax],al
  4484d2:	add    BYTE PTR [ecx+0x0],ch
  4484d5:	add    BYTE PTR [eax],al
  4484d7:	inc    DWORD PTR [eax]
  4484d9:	add    BYTE PTR [eax],al
  4484db:	inc    DWORD PTR [eax]
  4484dd:	add    BYTE PTR [edi],al
  4484df:	mov    edx,0xaaaa0000
  4484e4:	add    BYTE PTR ds:0x5305fcae,al
  4484ea:	mov    cl,0xff
  4484ec:	sbb    ch,BYTE PTR [ebx-0x4d]
  4484ef:	call   FWORD PTR ds:0xaff9b33
  4484f5:	add    BYTE PTR [ebx-0x7dffff01],al
  4484fb:	inc    DWORD PTR [eax]
  4484fd:	add    BYTE PTR [eax-0x7dffff01],cl
  448503:	inc    DWORD PTR ds:0x1aff8000
  448509:	and    eax,0x641eff95
  44850e:	mov    al,0xff
  448510:	or     BYTE PTR [ecx-0x4b],ah
  448513:	inc    DWORD PTR [eax]
  448515:	adc    al,0xab
  448517:	inc    DWORD PTR [eax]
  448519:	add    esi,ebx
  44851b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44851c:	add    BYTE PTR [eax],al
  44851e:	add    BYTE PTR [eax+0x0],bh
  448521:	add    BYTE PTR [eax],al
  448523:	inc    DWORD PTR [eax]
  448525:	add    BYTE PTR [eax],al
  448527:	inc    DWORD PTR [eax]
  448529:	add    BYTE PTR [eax],al
  44852b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44852c:	add    BYTE PTR [eax],al
  44852e:	add    BYTE PTR [eax],al
  448530:	add    BYTE PTR [eax],al
  448532:	aad    0x0
  448534:	(bad)  
  448535:	(bad)  
  448536:	inc    DWORD PTR [eax]
  448538:	(bad)  
  448539:	(bad)  
  44853a:	inc    DWORD PTR [eax]
  44853c:	(bad)  
  44853d:	(bad)  
  44853e:	inc    DWORD PTR [eax]
  448540:	(bad)  
  448541:	(bad)  
  448542:	inc    DWORD PTR [eax]
  448544:	(bad)  
  448545:	(bad)  
  448546:	inc    DWORD PTR [eax]
  448548:	(bad)  
  448549:	(bad)  
  44854a:	inc    DWORD PTR [eax]
  44854c:	add    BYTE PTR [eax],al
  44854e:	add    BYTE PTR [eax],al
  448550:	add    BYTE PTR [eax],al
  448552:	add    BYTE PTR [edi+0x0],dl
  448555:	add    BYTE PTR [eax],al
  448557:	inc    DWORD PTR [eax]
  448559:	add    BYTE PTR [eax],al
  44855b:	inc    DWORD PTR [eax]
  44855d:	add    BYTE PTR [ebx],cl
  44855f:	mov    ah,0x0
  448561:	add    ch,cl
  448563:	mov    al,0x0
  448565:	add    BYTE PTR [esi+0x6f0000fc],dl
  44856b:	inc    DWORD PTR [eax]
  44856d:	add    BYTE PTR [esi-0x1],ah
  448570:	add    BYTE PTR [eax],al
  448572:	ins    DWORD PTR es:[edi],dx
  448573:	inc    DWORD PTR [eax]
  448575:	add    BYTE PTR [ebx-0x1],dh
  448578:	add    DWORD PTR [ecx],eax
  44857a:	jbe    0x44857b
  44857c:	add    DWORD PTR [ecx],eax
  44857e:	jbe    0x44857f
  448580:	add    al,BYTE PTR [edx]
  448582:	jbe    0x448583
  448584:	add    BYTE PTR [eax],al
  448586:	je     0x448587
  448588:	add    BYTE PTR [eax],al
  44858a:	outs   dx,BYTE PTR ds:[esi]
  44858b:	inc    DWORD PTR [eax]
  44858d:	add    BYTE PTR [edi-0x1],ah
  448590:	add    BYTE PTR [eax],al
  448592:	ins    DWORD PTR es:[edi],dx
  448593:	inc    DWORD PTR [eax]
  448595:	add    BYTE PTR [ebx-0x32ffff01],cl
  44859b:	mov    ebp,0x75000000
  4485a0:	add    BYTE PTR [eax],al
  4485a2:	add    bh,bh
  4485a4:	add    BYTE PTR [eax],al
  4485a6:	add    bh,bh
  4485a8:	add    BYTE PTR [eax],al
  4485aa:	add    BYTE PTR [eax+0x0],dl
  4485b0:	add    BYTE PTR [eax],al
  4485b2:	rol    DWORD PTR [eax],cl
  4485b4:	(bad)  
  4485b5:	(bad)  
  4485b6:	inc    DWORD PTR [eax]
  4485b8:	(bad)  
  4485b9:	(bad)  
  4485ba:	inc    DWORD PTR [eax]
  4485bc:	(bad)  
  4485bd:	(bad)  
  4485be:	inc    DWORD PTR [eax]
  4485c0:	(bad)  
  4485c1:	(bad)  
  4485c2:	inc    DWORD PTR [eax]
  4485c4:	(bad)  
  4485c5:	(bad)  
  4485c6:	inc    DWORD PTR [eax]
  4485c8:	(bad)  
  4485c9:	(bad)  
  4485ca:	inc    DWORD PTR [eax]
  4485cc:	add    BYTE PTR [eax],al
  4485ce:	add    BYTE PTR [eax],al
  4485d0:	add    BYTE PTR [eax],al
  4485d2:	add    BYTE PTR [ebx],al
  4485d4:	add    BYTE PTR [eax],al
  4485d6:	add    BYTE PTR [ecx-0x1000000],al
  4485dc:	add    BYTE PTR [eax],al
  4485de:	push   cs
  4485df:	sahf   
  4485e0:	add    BYTE PTR [eax],al
  4485e2:	les    ebp,FWORD PTR [esi-0x57a0000]
  4485e8:	add    BYTE PTR [eax],al
  4485ea:	inc    DWORD PTR fs:[ebx+eax*1]
  4485ee:	(bad)  
  4485ef:	inc    DWORD PTR [edi]
  4485f1:	push   es
  4485f2:	inc    DWORD PTR [bx]
  4485f5:	pop    es
  4485f6:	inc    DWORD PTR [bx]
  4485f9:	pop    es
  4485fa:	inc    DWORD PTR [bx]
  4485fd:	pop    es
  4485fe:	inc    DWORD PTR [bx]
  448601:	pop    es
  448602:	dec    DWORD PTR [bx+si]
  448605:	or     BYTE PTR [eax-0x1],ch
  448608:	or     BYTE PTR [eax],cl
  44860a:	push   0x630404ff
  44860f:	inc    DWORD PTR [eax]
  448611:	add    BYTE PTR [edi+edi*8+0x0],ah
  448615:	add    BYTE PTR [ebp-0x1],bh
  448618:	add    BYTE PTR [eax],al
  44861a:	ret    0xbc
  44861d:	add    BYTE PTR [eax],al
  44861f:	add    BYTE PTR [eax],0x0
  448622:	add    bh,bh
  448624:	add    BYTE PTR [eax],al
  448626:	add    BYTE PTR [eax+eax*1+0x120000],bl
  44862d:	add    BYTE PTR [eax],al
  44862f:	add    BYTE PTR [eax],al
  448631:	add    dl,dl
  448633:	add    bh,bh
  448635:	(bad)  
  448636:	inc    DWORD PTR [eax]
  448638:	(bad)  
  448639:	(bad)  
  44863a:	inc    DWORD PTR [eax]
  44863c:	(bad)  
  44863d:	(bad)  
  44863e:	inc    DWORD PTR [eax]
  448640:	(bad)  
  448641:	(bad)  
  448642:	inc    DWORD PTR [eax]
  448644:	(bad)  
  448645:	(bad)  
  448646:	inc    DWORD PTR [eax]
  448648:	(bad)  
  448649:	(bad)  
  44864a:	inc    DWORD PTR [eax]
	...
  448658:	add    BYTE PTR [eax],al
  44865a:	add    ah,bh
  44865c:	add    BYTE PTR [eax],al
  44865e:	or     eax,0xbb000095
  448663:	sahf   
  448664:	add    BYTE PTR [eax],al
  448666:	jge    0x44865e
  448668:	pop    es
  448669:	pop    es
  44866a:	pop    ecx
  44866b:	call   DWORD PTR [ecx]
  44866d:	adc    DWORD PTR [eax-0x1],ebx
  448670:	adc    al,0x14
  448672:	pop    esi
  448673:	call   DWORD PTR [edx]
  448675:	adc    bl,BYTE PTR [ebp-0x1]
  448678:	adc    dl,BYTE PTR [edx]
  44867a:	pop    ebp
  44867b:	call   DWORD PTR [edx]
  44867d:	adc    bl,BYTE PTR [ebp-0x1]
  448680:	adc    dl,BYTE PTR [edx]
  448682:	pop    ebp
  448683:	call   DWORD PTR [edx]
  448685:	adc    bl,BYTE PTR [esi-0x1]
  448688:	adc    eax,0x13ff6015
  44868d:	adc    ebx,DWORD PTR [ebp-0x1]
  448690:	or     DWORD PTR [ecx],ecx
  448692:	pop    ecx
  448693:	inc    DWORD PTR [eax]
  448695:	add    BYTE PTR [ebx-0x1],dh
  448698:	add    BYTE PTR [eax],al
  44869a:	ret    
  44869b:	stos   BYTE PTR es:[edi],al
  44869c:	add    BYTE PTR [eax],al
  44869e:	add    BYTE PTR [ebx-0x4000000],cl
	...
  4486b0:	add    BYTE PTR [eax],al
  4486b2:	mov    DWORD PTR [eax],0xffffff
  4486b8:	(bad)  
  4486b9:	(bad)  
  4486ba:	inc    DWORD PTR [eax]
  4486bc:	(bad)  
  4486bd:	(bad)  
  4486be:	inc    DWORD PTR [eax]
  4486c0:	(bad)  
  4486c1:	(bad)  
  4486c2:	inc    DWORD PTR [eax]
  4486c4:	(bad)  
  4486c5:	(bad)  
  4486c6:	inc    DWORD PTR [eax]
  4486c8:	(bad)  
  4486c9:	(bad)  
  4486ca:	inc    DWORD PTR [eax]
  4486cc:	add    BYTE PTR [eax],al
  4486ce:	mov    ah,0x0
  4486d0:	add    BYTE PTR [eax],al
  4486d2:	mov    ah,0x0
  4486d4:	add    BYTE PTR [eax],al
  4486d6:	mov    ah,0x0
  4486d8:	add    BYTE PTR [eax],al
  4486da:	add    dh,ch
  4486dc:	add    BYTE PTR [eax],al
  4486de:	add    edi,DWORD PTR [ebp+0x7f870000]
  4486e4:	add    BYTE PTR [eax],al
  4486e6:	mov    dh,dh
  4486e8:	sbb    BYTE PTR [eax],bl
  4486ea:	pop    esi
  4486eb:	jmp    DWORD PTR ds:0x25ff5525
  4486f1:	and    eax,0x2424ff5a
  4486f6:	pop    edx
  4486f7:	jmp    DWORD PTR [esp]
  4486fa:	pop    edx
  4486fb:	jmp    DWORD PTR [esp]
  4486fe:	pop    ebx
  4486ff:	jmp    DWORD PTR [esp]
  448702:	pop    ebx
  448703:	jmp    DWORD PTR [esp]
  448706:	pop    esp
  448707:	jmp    DWORD PTR [edi]
  448709:	daa    
  44870a:	pop    esp
  44870b:	jmp    DWORD PTR [edi]
  44870d:	daa    
  44870e:	pop    edx
  44870f:	call   FWORD PTR [ebx]
  448711:	sbb    ebx,DWORD PTR [ebp-0x1]
  448714:	add    DWORD PTR [ecx],eax
  448716:	cmp    bh,0x0
  448719:	add    BYTE PTR [eax+0x87],cl
  44871f:	mov    edx,0xee000000
  448724:	add    BYTE PTR [eax],al
  448726:	lds    eax,FWORD PTR [eax]
  448728:	add    BYTE PTR [eax],al
  44872a:	lds    eax,FWORD PTR [eax]
  44872c:	add    BYTE PTR [eax],al
  44872e:	lds    eax,FWORD PTR [eax]
  448730:	add    BYTE PTR [eax],al
  448732:	lds    eax,FWORD PTR [eax]
  448734:	(bad)  
  448735:	(bad)  
  448736:	inc    DWORD PTR [eax]
  448738:	(bad)  
  448739:	(bad)  
  44873a:	inc    DWORD PTR [eax]
  44873c:	(bad)  
  44873d:	(bad)  
  44873e:	inc    DWORD PTR [eax]
  448740:	(bad)  
  448741:	(bad)  
  448742:	inc    DWORD PTR [eax]
  448744:	(bad)  
  448745:	(bad)  
  448746:	inc    DWORD PTR [eax]
  448748:	(bad)  
  448749:	(bad)  
  44874a:	inc    DWORD PTR [eax]
  44874c:	add    BYTE PTR [eax],al
  44874e:	mov    ch,0x0
  448750:	add    BYTE PTR [eax],al
  448752:	mov    ch,0x0
  448754:	add    BYTE PTR [eax],al
  448756:	mov    ch,0x0
  448758:	add    BYTE PTR [eax],al
  44875a:	add    bh,al
  44875c:	add    BYTE PTR [eax],al
  44875e:	add    al,ah
  448760:	add    BYTE PTR [eax],al
  448762:	xor    DWORD PTR [eax+0x0],esp
  448765:	add    BYTE PTR [eax+0x762727c6],ah
  44876b:	(bad)  
  44876c:	ds ds pop esi
  44876f:	(bad)  
  448770:	cmp    edi,DWORD PTR [ebx]
  448772:	pop    ecx
  448773:	push   DWORD PTR [edi]
  448775:	aaa    
  448776:	pop    eax
  448777:	push   DWORD PTR [edi]
  448779:	aaa    
  44877a:	pop    edx
  44877b:	(bad)  
  44877c:	cmp    BYTE PTR [eax],bh
  44877e:	pop    ebx
  44877f:	(bad)  
  448780:	cmp    BYTE PTR [eax],bh
  448782:	pop    ebx
  448783:	push   DWORD PTR [edi]
  448785:	aaa    
  448786:	pop    edx
  448787:	(bad)  
  448788:	cmp    eax,0x3fff5a3d
  44878d:	aas    
  44878e:	pusha  
  44878f:	jmp    FWORD PTR [edx]
  448791:	sub    dh,BYTE PTR [ebx-0x1]
  448794:	add    DWORD PTR [ecx],eax
  448796:	lahf   
  448797:	fadd   DWORD PTR [eax]
  448799:	add    BYTE PTR [eax+0x6a],al
  44879c:	add    BYTE PTR [eax],al
  44879e:	add    al,ah
  4487a0:	add    BYTE PTR [eax],al
  4487a2:	add    bh,al
  4487a4:	add    BYTE PTR [eax],al
  4487a6:	les    eax,FWORD PTR [eax]
  4487a8:	add    BYTE PTR [eax],al
  4487aa:	les    eax,FWORD PTR [eax]
  4487ac:	add    BYTE PTR [eax],al
  4487ae:	les    eax,FWORD PTR [eax]
  4487b0:	add    BYTE PTR [eax],al
  4487b2:	les    eax,FWORD PTR [eax]
  4487b4:	(bad)  
  4487b5:	(bad)  
  4487b6:	inc    DWORD PTR [eax]
  4487b8:	(bad)  
  4487b9:	(bad)  
  4487ba:	inc    DWORD PTR [eax]
  4487bc:	(bad)  
  4487bd:	(bad)  
  4487be:	inc    DWORD PTR [eax]
  4487c0:	(bad)  
  4487c1:	(bad)  
  4487c2:	inc    DWORD PTR [eax]
  4487c4:	(bad)  
  4487c5:	(bad)  
  4487c6:	inc    DWORD PTR [eax]
  4487c8:	(bad)  
  4487c9:	(bad)  
  4487ca:	inc    DWORD PTR [eax]
  4487cc:	add    BYTE PTR [eax],al
  4487ce:	mov    ch,0x0
  4487d0:	add    BYTE PTR [eax],al
  4487d2:	mov    ch,0x0
  4487d4:	add    BYTE PTR [eax],al
  4487d6:	mov    ch,0x0
  4487d8:	add    BYTE PTR [eax],al
  4487da:	add    BYTE PTR [edi+0x0],ch
  4487dd:	add    BYTE PTR [eax],al
  4487df:	in     eax,0x0
  4487e1:	add    BYTE PTR [eax],al
  4487e3:	xchg   ebx,eax
  4487e4:	add    BYTE PTR [eax],al
  4487e6:	mov    al,ds:0x9c1d1d60
  4487eb:	aad    0x47
  4487ed:	inc    edi
  4487ee:	jge    0x4487ef
  4487f0:	push   esi
  4487f1:	push   esi
  4487f2:	call   DWORD PTR [bx+si+0x50]
  4487f6:	pop    edi
  4487f7:	dec    DWORD PTR [ebp+0x4d]
  4487fa:	pop    esi
  4487fb:	dec    DWORD PTR [ebp+0x4d]
  4487fe:	pop    ebp
  4487ff:	dec    DWORD PTR [ebp+0x4d]
  448802:	pop    esi
  448803:	call   DWORD PTR [eax+0x50]
  448806:	pop    edi
  448807:	call   DWORD PTR [esi+0x56]
  44880a:	dec    DWORD PTR [bx+di+0x49]
  44880e:	jp     0x44880f
  448810:	push   ds
  448811:	push   ds
  448812:	xchg   edi,eax
  448813:	fild   WORD PTR [ecx]
  448815:	add    DWORD PTR [esi+0x400006a],esp
  44881b:	xchg   esi,eax
  44881c:	add    BYTE PTR [eax],al
  44881e:	add    ch,ah
  448820:	add    BYTE PTR [eax],al
  448822:	add    BYTE PTR [edi+0x0],ch
  448825:	add    ah,al
  448827:	add    BYTE PTR [eax],al
  448829:	add    ah,al
  44882b:	add    BYTE PTR [eax],al
  44882d:	add    ah,al
  44882f:	add    BYTE PTR [eax],al
  448831:	add    ah,al
  448833:	add    bh,bh
  448835:	(bad)  
  448836:	inc    DWORD PTR [eax]
  448838:	(bad)  
  448839:	(bad)  
  44883a:	inc    DWORD PTR [eax]
  44883c:	(bad)  
  44883d:	(bad)  
  44883e:	inc    DWORD PTR [eax]
  448840:	(bad)  
  448841:	(bad)  
  448842:	inc    DWORD PTR [eax]
  448844:	(bad)  
  448845:	(bad)  
  448846:	inc    DWORD PTR [eax]
  448848:	(bad)  
  448849:	(bad)  
  44884a:	inc    DWORD PTR [eax]
  44884c:	(bad)  
  44884d:	(bad)  
  44884e:	inc    DWORD PTR [eax]
  448850:	(bad)  
  448851:	(bad)  
  448852:	inc    DWORD PTR [eax]
  448854:	(bad)  
  448855:	(bad)  
  448856:	inc    DWORD PTR [eax]
  448858:	add    BYTE PTR [eax],al
  44885a:	add    BYTE PTR [esi],dl
  44885c:	add    BYTE PTR [eax],al
  44885e:	add    BYTE PTR [eax+eax*1+0xe40000],bl
  448865:	add    BYTE PTR [eax],al
  448867:	dec    ecx
  448868:	add    al,0x4
  44886a:	mov    ebx,0xa42e2e6c
  44886f:	rcl    DWORD PTR [esi+0x56],cl
  448872:	mov    dh,ch
  448874:	pop    esi
  448875:	pop    esi
  448876:	jp     0x448877
  448878:	pop    esp
  448879:	pop    esp
  44887a:	jno    0x44887b
  44887c:	pop    esp
  44887d:	pop    esp
  44887e:	outs   dx,DWORD PTR ds:[esi]
  44887f:	call   FWORD PTR [esp+ebx*2+0x70]
  448883:	call   FWORD PTR [edi+0x5f]
  448886:	jns    0x448887
  448888:	push   ebp
  448889:	push   ebp
  44888a:	mov    dh,dh
  44888c:	xor    DWORD PTR [ecx],esi
  44888e:	mov    eax,ds:0xb80404d5
  448893:	jbe    0x448895
  448895:	add    BYTE PTR ds:0x4b,al
  44889b:	in     al,0x0
  44889d:	add    BYTE PTR [eax],al
  44889f:	pushf  
  4488a0:	add    BYTE PTR [eax],al
  4488a2:	add    BYTE PTR [esi],dl
  4488a4:	(bad)  
  4488a5:	(bad)  
  4488a6:	inc    DWORD PTR [eax]
  4488a8:	(bad)  
  4488a9:	(bad)  
  4488aa:	inc    DWORD PTR [eax]
  4488ac:	(bad)  
  4488ad:	(bad)  
  4488ae:	inc    DWORD PTR [eax]
  4488b0:	(bad)  
  4488b1:	(bad)  
  4488b2:	inc    DWORD PTR [eax]
  4488b4:	(bad)  
  4488b5:	(bad)  
  4488b6:	inc    DWORD PTR [eax]
  4488b8:	(bad)  
  4488b9:	(bad)  
  4488ba:	inc    DWORD PTR [eax]
  4488bc:	(bad)  
  4488bd:	(bad)  
  4488be:	inc    DWORD PTR [eax]
  4488c0:	(bad)  
  4488c1:	(bad)  
  4488c2:	inc    DWORD PTR [eax]
  4488c4:	(bad)  
  4488c5:	(bad)  
  4488c6:	inc    DWORD PTR [eax]
  4488c8:	(bad)  
  4488c9:	(bad)  
  4488ca:	inc    DWORD PTR [eax]
  4488cc:	(bad)  
  4488cd:	(bad)  
  4488ce:	inc    DWORD PTR [eax]
  4488d0:	(bad)  
  4488d1:	(bad)  
  4488d2:	inc    DWORD PTR [eax]
  4488d4:	(bad)  
  4488d5:	(bad)  
  4488d6:	inc    DWORD PTR [eax]
  4488d8:	add    BYTE PTR [eax],al
  4488da:	add    BYTE PTR [eax],al
  4488dc:	add    BYTE PTR [eax],al
  4488de:	add    BYTE PTR [ecx],ch
  4488e0:	add    BYTE PTR [eax],al
  4488e2:	add    BYTE PTR [eax+eax*1+0xc60000],dh
  4488e9:	add    BYTE PTR [eax],al
  4488eb:	push   ebp
  4488ec:	add    eax,DWORD PTR [ebx]
  4488ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4488ef:	inc    esi
  4488f0:	and    BYTE PTR [eax],ah
  4488f2:	lods   eax,DWORD PTR ds:[esi]
  4488f3:	stos   DWORD PTR es:[edi],eax
  4488f4:	inc    esp
  4488f5:	inc    esp
  4488f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4488f7:	jmp    0xf7dfdb4e
  4488fc:	push   esi
  4488fd:	push   esi
  4488fe:	xchg   edi,eax
  4488ff:	sti    
  448900:	push   ebx
  448901:	push   ebx
  448902:	call   0x21eb:0xa34444f9
  448909:	and    DWORD PTR [edi-0x55fdfd51],ebp
  44890f:	dec    esi
  448910:	add    BYTE PTR [eax],al
  448912:	add    BYTE PTR [ebp+0x0],dl
  448915:	add    BYTE PTR [eax],al
  448917:	mov    BYTE PTR [eax],0x0
  44891a:	add    BYTE PTR [eax+eax*1+0x290000],dh
  448921:	add    BYTE PTR [eax],al
  448923:	add    bh,bh
  448925:	(bad)  
  448926:	inc    DWORD PTR [eax]
  448928:	(bad)  
  448929:	(bad)  
  44892a:	inc    DWORD PTR [eax]
  44892c:	(bad)  
  44892d:	(bad)  
  44892e:	inc    DWORD PTR [eax]
  448930:	(bad)  
  448931:	(bad)  
  448932:	inc    DWORD PTR [eax]
  448934:	(bad)  
  448935:	(bad)  
  448936:	inc    DWORD PTR [eax]
  448938:	(bad)  
  448939:	(bad)  
  44893a:	inc    DWORD PTR [eax]
  44893c:	(bad)  
  44893d:	(bad)  
  44893e:	inc    DWORD PTR [eax]
  448940:	(bad)  
  448941:	(bad)  
  448942:	inc    DWORD PTR [eax]
  448944:	(bad)  
  448945:	(bad)  
  448946:	inc    DWORD PTR [eax]
  448948:	(bad)  
  448949:	(bad)  
  44894a:	inc    DWORD PTR [eax]
  44894c:	(bad)  
  44894d:	(bad)  
  44894e:	inc    DWORD PTR [eax]
  448950:	(bad)  
  448951:	(bad)  
  448952:	inc    DWORD PTR [eax]
  448954:	(bad)  
  448955:	(bad)  
  448956:	inc    DWORD PTR [eax]
	...
  448960:	add    BYTE PTR [eax],al
  448962:	add    BYTE PTR [ecx],dh
  448964:	add    BYTE PTR [eax],al
  448966:	add    BYTE PTR [ebp-0x1e000000],dh
  44896c:	add    BYTE PTR [eax],al
  44896e:	add    dl,BYTE PTR [ebp+0x6d330101]
  448974:	or     ecx,DWORD PTR [ebx]
  448976:	jl     0x4488f9
  448978:	sbb    al,0x1c
  44897a:	stos   DWORD PTR es:[edi],eax
  44897b:	call   0x1c1c:0xaaae2424
  448982:	stos   BYTE PTR es:[edi],al
  448983:	lahf   
  448984:	or     ecx,DWORD PTR [ebx]
  448986:	jle    0x44890d
  448988:	add    DWORD PTR [ecx],eax
  44898a:	outs   dx,DWORD PTR ss:[esi]
  44898c:	add    BYTE PTR [eax],al
  44898e:	add    al,0x96
  448990:	add    BYTE PTR [eax],al
  448992:	add    dl,ah
  448994:	add    BYTE PTR [eax],al
  448996:	add    BYTE PTR [ebp+0x31000000],dh
	...
  4489a4:	(bad)  
  4489a5:	(bad)  
  4489a6:	inc    DWORD PTR [eax]
  4489a8:	(bad)  
  4489a9:	(bad)  
  4489aa:	inc    DWORD PTR [eax]
  4489ac:	(bad)  
  4489ad:	(bad)  
  4489ae:	inc    DWORD PTR [eax]
  4489b0:	(bad)  
  4489b1:	(bad)  
  4489b2:	inc    DWORD PTR [eax]
  4489b4:	(bad)  
  4489b5:	(bad)  
  4489b6:	inc    DWORD PTR [eax]
  4489b8:	(bad)  
  4489b9:	(bad)  
  4489ba:	inc    DWORD PTR [eax]
  4489bc:	(bad)  
  4489bd:	(bad)  
  4489be:	inc    DWORD PTR [eax]
  4489c0:	(bad)  
  4489c1:	(bad)  
  4489c2:	inc    DWORD PTR [eax]
  4489c4:	(bad)  
  4489c5:	(bad)  
  4489c6:	inc    DWORD PTR [eax]
  4489c8:	(bad)  
  4489c9:	(bad)  
  4489ca:	inc    DWORD PTR [eax]
  4489cc:	(bad)  
  4489cd:	(bad)  
  4489ce:	inc    DWORD PTR [eax]
  4489d0:	(bad)  
  4489d1:	(bad)  
  4489d2:	inc    DWORD PTR [eax]
  4489d4:	(bad)  
  4489d5:	(bad)  
  4489d6:	inc    DWORD PTR [eax]
	...
  4489e4:	add    BYTE PTR [eax],al
  4489e6:	add    BYTE PTR [edi],bl
  4489e8:	add    BYTE PTR [eax],al
  4489ea:	add    BYTE PTR [edi-0x1b000000],bl
  4489f0:	add    BYTE PTR [eax],al
  4489f2:	add    al,ah
  4489f4:	add    BYTE PTR [eax],al
  4489f6:	add    BYTE PTR [edx-0x75000000],bh
  4489fc:	add    BYTE PTR [eax],al
  4489fe:	add    BYTE PTR [ecx+0x0],ch
  448a01:	add    BYTE PTR [eax],al
  448a03:	mov    eax,DWORD PTR [eax]
  448a05:	add    BYTE PTR [eax],al
  448a07:	mov    edx,0xe0000000
  448a0c:	add    BYTE PTR [eax],al
  448a0e:	add    ch,ah
  448a10:	add    BYTE PTR [eax],al
  448a12:	add    BYTE PTR [edi+0x1f000000],bl
	...
  448a24:	(bad)  
  448a25:	(bad)  
  448a26:	inc    DWORD PTR [eax]
  448a28:	(bad)  
  448a29:	(bad)  
  448a2a:	inc    DWORD PTR [eax]
  448a2c:	(bad)  
  448a2d:	(bad)  
  448a2e:	inc    DWORD PTR [eax]
  448a30:	(bad)  
  448a31:	(bad)  
  448a32:	inc    DWORD PTR [eax]
  448a34:	(bad)  
  448a35:	(bad)  
  448a36:	inc    DWORD PTR [eax]
  448a38:	(bad)  
  448a39:	(bad)  
  448a3a:	inc    DWORD PTR [eax]
  448a3c:	(bad)  
  448a3d:	(bad)  
  448a3e:	inc    DWORD PTR [eax]
  448a40:	(bad)  
  448a41:	(bad)  
  448a42:	inc    DWORD PTR [eax]
  448a44:	(bad)  
  448a45:	(bad)  
  448a46:	inc    DWORD PTR [eax]
  448a48:	(bad)  
  448a49:	(bad)  
  448a4a:	inc    DWORD PTR [eax]
  448a4c:	(bad)  
  448a4d:	(bad)  
  448a4e:	inc    DWORD PTR [eax]
  448a50:	(bad)  
  448a51:	(bad)  
  448a52:	inc    DWORD PTR [eax]
  448a54:	(bad)  
  448a55:	(bad)  
  448a56:	inc    DWORD PTR [eax]
	...
  448a68:	add    BYTE PTR [eax],al
  448a6a:	add    BYTE PTR [esi],dl
  448a6c:	add    BYTE PTR [eax],al
  448a6e:	add    BYTE PTR [edi+0x0],ch
  448a71:	add    BYTE PTR [eax],al
  448a73:	mov    DWORD PTR [eax],0xee0000
  448a79:	add    BYTE PTR [eax],al
  448a7b:	cld    
  448a7c:	add    BYTE PTR [eax],al
  448a7e:	add    bh,bh
  448a80:	add    BYTE PTR [eax],al
  448a82:	add    ah,bh
  448a84:	add    BYTE PTR [eax],al
  448a86:	add    dh,ch
  448a88:	add    BYTE PTR [eax],al
  448a8a:	add    bh,al
  448a8c:	add    BYTE PTR [eax],al
  448a8e:	add    BYTE PTR [edi+0x0],ch
  448a91:	add    BYTE PTR [eax],al
  448a93:	push   ss
	...
  448aa4:	(bad)  
  448aa5:	(bad)  
  448aa6:	inc    DWORD PTR [eax]
  448aa8:	(bad)  
  448aa9:	(bad)  
  448aaa:	inc    DWORD PTR [eax]
  448aac:	(bad)  
  448aad:	(bad)  
  448aae:	inc    DWORD PTR [eax]
  448ab0:	(bad)  
  448ab1:	(bad)  
  448ab2:	inc    DWORD PTR [eax]
  448ab4:	(bad)  
  448ab5:	(bad)  
  448ab6:	inc    DWORD PTR [eax]
  448ab8:	(bad)  
  448ab9:	(bad)  
  448aba:	inc    DWORD PTR [eax]
  448abc:	(bad)  
  448abd:	(bad)  
  448abe:	inc    DWORD PTR [eax]
  448ac0:	loopne 0x448ac2
  448ac2:	add    BYTE PTR [edi],cl
  448ac4:	loopne 0x448ac6
  448ac6:	add    BYTE PTR [edi],al
  448ac8:	loopne 0x448aca
  448aca:	add    BYTE PTR [edi],al
  448acc:	loopne 0x448ace
  448ace:	add    BYTE PTR [edi],cl
  448ad0:	cld    
  448ad1:	add    BYTE PTR [eax],al
  448ad3:	jg     0x448ac5
  448ad5:	add    BYTE PTR [eax],al
  448ad7:	pop    ds
  448ad8:	loopne 0x448ada
  448ada:	add    BYTE PTR [edi],bl
  448adc:	loopne 0x448ade
  448ade:	add    BYTE PTR [edi],bl
  448ae0:	loopne 0x448ae2
  448ae2:	add    BYTE PTR [edi],bl
  448ae4:	lock add BYTE PTR [eax],al
  448ae7:	pop    ds
  448ae8:	clc    
  448ae9:	add    BYTE PTR [eax],al
  448aeb:	pop    ds
  448aec:	clc    
  448aed:	add    BYTE PTR [eax],al
  448aef:	aas    
  448af0:	cld    
  448af1:	add    BYTE PTR [eax],al
  448af3:	jg     0x448af3
  448af5:	add    BYTE PTR [eax],al
  448af7:	(bad)  
  448af8:	inc    DWORD PTR [eax]
  448afa:	add    edi,edi
  448afc:	inc    BYTE PTR [eax]
  448afe:	add    edi,edi
  448b00:	cld    
  448b01:	inc    eax
  448b02:	add    edi,edi
  448b04:	lock add BYTE PTR [eax],al
  448b07:	pop    ds
  448b08:	lock add BYTE PTR [eax],al
  448b0b:	pop    ds
  448b0c:	lock add BYTE PTR [eax],al
  448b0f:	pop    ds
  448b10:	lock add BYTE PTR [eax],al
  448b13:	pop    ds
  448b14:	lock add BYTE PTR [eax],al
  448b17:	pop    ds
  448b18:	lock add BYTE PTR [eax],al
  448b1b:	pop    ds
  448b1c:	cld    
  448b1d:	add    BYTE PTR [eax],al
  448b1f:	jg     0x448b1d
  448b21:	add    BYTE PTR [eax],al
  448b23:	jg     0x448b21
  448b25:	add    BYTE PTR [eax],al
  448b27:	jg     0x448b25
  448b29:	add    BYTE PTR [eax],al
  448b2b:	jg     0x448b29
  448b2d:	add    BYTE PTR [eax],al
  448b2f:	jg     0x448b2f
  448b31:	add    BYTE PTR [eax],al
  448b33:	(bad)  
  448b34:	inc    DWORD PTR [eax]
  448b36:	add    edi,edi
  448b38:	inc    DWORD PTR [eax-0x3f0000fd]
  448b3e:	pop    es
  448b3f:	jmp    FWORD PTR [eax]
  448b41:	add    BYTE PTR [eax],al
  448b43:	add    BYTE PTR [eax],bl
  448b45:	add    BYTE PTR [eax],al
  448b47:	add    BYTE PTR [eax],dh
  448b49:	add    BYTE PTR [eax],al
  448b4b:	add    BYTE PTR [ecx],al
  448b4d:	add    BYTE PTR [eax],ah
  448b4f:	add    BYTE PTR [eax],al
  448b51:	add    BYTE PTR [eax],al
  448b53:	add    BYTE PTR [eax+0x9],ah
	...
  448b66:	add    BYTE PTR [eax],al
  448b68:	(bad)  
  448b69:	(bad)  
  448b6a:	inc    DWORD PTR [eax]
  448b6c:	(bad)  
  448b6d:	(bad)  
  448b6e:	inc    DWORD PTR [eax]
  448b70:	xor    al,0x34
  448b72:	xor    al,0xe
  448b74:	cmp    bh,BYTE PTR [edx]
  448b76:	sbb    BYTE PTR ss:[ecx+0x41],al
  448b7a:	aaa    
  448b7b:	xor    edi,DWORD PTR [esp+edi*1]
  448b7e:	ds dec edi
  448b80:	sub    eax,0x1a78622d
  448b85:	sbb    cl,BYTE PTR [ebx-0x5ff4f456]
  448b8b:	rol    DWORD PTR ds:0x4e9a605,cl
  448b91:	add    al,0xa8
  448b93:	out    dx,eax
  448b94:	add    al,0x4
  448b96:	stos   BYTE PTR es:[edi],al
  448b97:	lock add al,0x4
  448b9a:	stos   BYTE PTR es:[edi],al
  448b9b:	lock add al,0x4
  448b9e:	test   eax,0xa90404ef
  448ba3:	lock add eax,0xce9a605
  448ba9:	or     al,0x9e
  448bab:	rcr    BYTE PTR [edx],cl
  448bad:	sbb    al,BYTE PTR [edi+0x602c2ca9]
  448bb3:	ja     0x448bf0
  448bb5:	cmp    edi,DWORD PTR [esi]
  448bb7:	push   ecx
  448bb8:	inc    esp
  448bb9:	inc    esp
  448bba:	cmp    al,0x34
  448bbc:	cmp    al,0x3c
  448bbe:	cmp    DWORD PTR [eax],ebx
  448bc0:	cs cs cs push es
  448bc4:	(bad)  
  448bc5:	(bad)  
  448bc6:	inc    DWORD PTR [eax]
  448bc8:	(bad)  
  448bc9:	(bad)  
  448bca:	inc    DWORD PTR [eax]
  448bcc:	(bad)  
  448bcd:	(bad)  
  448bce:	inc    DWORD PTR [eax]
  448bd0:	cmp    eax,0x411a373d
  448bd5:	inc    ecx
  448bd6:	xor    DWORD PTR [ebx],ebp
  448bd8:	cmp    bh,BYTE PTR [edx]
  448bda:	inc    ebx
  448bdb:	imul   ebx,DWORD PTR [edi],0x5b97b1f
  448be1:	add    eax,0xf3ad
  448be6:	mov    eax,0xd92a07ff
  448beb:	inc    DWORD PTR [ebx]
  448bed:	adc    al,0xb6
  448bef:	inc    DWORD PTR [ebx]
  448bf1:	adc    al,0xb6
  448bf3:	inc    DWORD PTR [ebx]
  448bf5:	adc    al,0xb6
  448bf7:	inc    DWORD PTR [ebx]
  448bf9:	adc    al,0xb6
  448bfb:	inc    DWORD PTR [ebx]
  448bfd:	adc    al,0xb6
  448bff:	inc    DWORD PTR [ebx]
  448c01:	adc    al,0xb6
  448c03:	inc    DWORD PTR [ebx]
  448c05:	adc    al,0xb6
  448c07:	inc    DWORD PTR [ebx]
  448c09:	adc    al,0xb6
  448c0b:	inc    DWORD PTR ds:0x5ffc41d
  448c11:	add    eax,0x1f1ff5ae
  448c16:	js     0x448bd1
  448c18:	ds ds dec ebx
  448c1b:	outs   dx,BYTE PTR ds:[esi]
  448c1c:	inc    ecx
  448c1d:	inc    ecx
  448c1e:	xor    ebp,DWORD PTR [ebx]
  448c20:	xor    DWORD PTR [ecx],esi
  448c22:	sub    ecx,DWORD PTR [edi+edi*8]
  448c25:	(bad)  
  448c26:	inc    DWORD PTR [eax]
  448c28:	(bad)  
  448c29:	(bad)  
  448c2a:	inc    DWORD PTR [eax]
  448c2c:	(bad)  
  448c2d:	(bad)  
  448c2e:	inc    DWORD PTR [eax]
  448c30:	cmp    BYTE PTR [eax],bh
  448c32:	and    al,BYTE PTR [edx]
  448c34:	inc    edx
  448c35:	inc    edx
  448c36:	and    eax,0x543b3b00
  448c3b:	cmp    BYTE PTR [esp+edx*1],dl
  448c3e:	lahf   
  448c3f:	mov    bl,0x0
  448c41:	add    dl,al
  448c43:	stc    
  448c44:	pop    es
  448c45:	sub    bl,cl
  448c47:	inc    DWORD PTR [edx]
  448c49:	push   cs
  448c4a:	lods   al,BYTE PTR ds:[esi]
  448c4b:	inc    DWORD PTR [ebx]
  448c4d:	adc    al,0xb6
  448c4f:	inc    DWORD PTR [ebx]
  448c51:	adc    al,0xb6
  448c53:	inc    DWORD PTR [ecx]
  448c55:	or     ah,BYTE PTR [ebp-0x53f1fd01]
  448c5b:	inc    DWORD PTR [edx]
  448c5d:	push   cs
  448c5e:	lods   al,BYTE PTR ds:[esi]
  448c5f:	inc    DWORD PTR [ecx]
  448c61:	add    DWORD PTR [ecx-0x60ffff01],ebx
  448c67:	inc    DWORD PTR [eax]
  448c69:	add    BYTE PTR [edi-0x52ffff01],ch
  448c6f:	inc    DWORD PTR [eax]
  448c71:	add    bl,al
  448c73:	call   DWORD PTR [ebx]
  448c75:	adc    esp,DWORD PTR [eax+0x5a3a3ab5]
  448c7b:	inc    ebp
  448c7c:	inc    ecx
  448c7d:	inc    ecx
  448c7e:	xor    eax,DWORD PTR [edi]
  448c80:	xor    DWORD PTR [ecx],esi
  448c82:	sub    eax,DWORD PTR [eax]
  448c84:	(bad)  
  448c85:	(bad)  
  448c86:	inc    DWORD PTR [eax]
  448c88:	(bad)  
  448c89:	(bad)  
  448c8a:	inc    DWORD PTR [eax]
  448c8c:	(bad)  
  448c8d:	(bad)  
  448c8e:	inc    DWORD PTR [eax]
  448c90:	cmp    BYTE PTR [eax],bh
  448c92:	and    al,BYTE PTR [eax]
  448c94:	(bad)  
  448c95:	(bad)  
  448c96:	inc    DWORD PTR [eax]
  448c98:	and    eax,0xc417825
  448c9d:	or     al,0xbb
  448c9f:	mov    esp,0xfea60000
  448ca4:	add    eax,0x7ffc41d
  448ca9:	sub    bl,cl
  448cab:	inc    DWORD PTR [ebx]
  448cad:	adc    al,0xb6
  448caf:	inc    DWORD PTR [ebx]
  448cb1:	adc    al,0xb5
  448cb3:	inc    DWORD PTR ds:0x4ffb51b
  448cb9:	pop    ss
  448cba:	sahf   
  448cbb:	inc    DWORD PTR [edx+ebx*1]
  448cbe:	scas   eax,DWORD PTR es:[edi]
  448cbf:	inc    DWORD PTR [eax]
  448cc1:	add    BYTE PTR [ebp-0x6affff01],dl
  448cc7:	inc    DWORD PTR [eax]
  448cc9:	add    BYTE PTR [ebp-0x6affff01],dl
  448ccf:	inc    DWORD PTR [eax]
  448cd1:	add    BYTE PTR [edi-0x47f2f201],dh
  448cd7:	mov    edi,0x50682727
  448cdc:	sbb    eax,0x1809a01d
  448ce1:	sbb    al,al
  448ce3:	add    bh,bh
  448ce5:	(bad)  
  448ce6:	inc    DWORD PTR [eax]
  448ce8:	(bad)  
  448ce9:	(bad)  
  448cea:	inc    DWORD PTR [eax]
  448cec:	(bad)  
  448ced:	(bad)  
  448cee:	inc    DWORD PTR [eax]
  448cf0:	or     DWORD PTR [ecx],ecx
  448cf2:	(bad)  
  448cf3:	sub    eax,0x69c30a0a
  448cf8:	or     DWORD PTR [ecx],ecx
  448cfa:	(bad)
  448cfd:	cmp    al,0xf7
  448cff:	dec    DWORD PTR [edx]
  448d01:	cmp    al,0xf7
  448d03:	inc    DWORD PTR [edi]
  448d05:	sub    ah,cl
  448d07:	inc    DWORD PTR ds:0x4ff9f1f
  448d0d:	sbb    ebp,DWORD PTR [ebp-0x1]
  448d10:	add    BYTE PTR [eax],al
  448d12:	add    bh,bh
  448d14:	add    BYTE PTR [eax],al
  448d16:	add    bh,bh
  448d18:	add    BYTE PTR [eax],al
  448d1a:	add    bh,bh
  448d1c:	add    BYTE PTR [eax],al
  448d1e:	add    bh,bh
  448d20:	add    eax,0xff9b1e
  448d25:	add    BYTE PTR [ebp-0x6affff01],dl
  448d2b:	inc    DWORD PTR [eax]
  448d2d:	add    BYTE PTR [ebp-0x61ffff01],dl
  448d33:	inc    DWORD PTR [edx]
  448d35:	add    al,bl
  448d37:	dec    DWORD PTR [esp+ecx*1]
  448d3a:	mov    ebp,0x4ebe1616
  448d40:	sbb    DWORD PTR [ecx],ebx
  448d42:	mov    edx,0xffffff09
  448d47:	add    bh,bh
  448d49:	(bad)  
  448d4a:	inc    DWORD PTR [eax]
  448d4c:	(bad)  
  448d4d:	(bad)  
  448d4e:	inc    DWORD PTR [eax]
  448d50:	sbb    al,0x1c
  448d52:	ret    
  448d53:	pop    edi
  448d54:	and    BYTE PTR [eax],ah
  448d56:	les    esp,FWORD PTR [edi-0xd3de6e7]
  448d5c:	or     BYTE PTR [edi],ch
  448d5e:	sar    edi,0x0
  448d61:	add    BYTE PTR [eax],bh
  448d63:	inc    DWORD PTR [eax]
  448d65:	add    BYTE PTR [edx],dl
  448d67:	inc    DWORD PTR [eax]
  448d69:	add    BYTE PTR [edi+edi*8],cl
  448d6c:	add    BYTE PTR [eax],al
  448d6e:	add    al,0xff
  448d70:	add    BYTE PTR [eax],al
  448d72:	add    bh,bh
  448d74:	add    BYTE PTR [eax],al
  448d76:	add    bh,bh
  448d78:	add    BYTE PTR [eax],al
  448d7a:	add    bh,bh
  448d7c:	add    BYTE PTR [eax],al
  448d7e:	add    bh,bh
  448d80:	add    edx,DWORD PTR [eax]
  448d82:	ins    DWORD PTR es:[edi],dx
  448d83:	inc    DWORD PTR [eax]
  448d85:	add    BYTE PTR [edx-0x6affff01],ah
  448d8b:	inc    DWORD PTR [eax]
  448d8d:	add    BYTE PTR [ebp-0x67ffff01],dl
  448d93:	inc    DWORD PTR [eax]
  448d95:	add    BYTE PTR [ebx-0x3ce3e301],ch
  448d9b:	fstp   TBYTE PTR [eax]
  448d9d:	cmp    ch,dl
  448d9f:	push   0x11d93e3e
  448da4:	(bad)  
  448da5:	(bad)  
  448da6:	inc    DWORD PTR [eax]
  448da8:	(bad)  
  448da9:	(bad)  
  448daa:	inc    DWORD PTR [eax]
  448dac:	(bad)  
  448dad:	(bad)  
  448dae:	inc    DWORD PTR [eax]
  448db0:	(bad)  
  448db1:	setg   BYTE PTR [ecx+0x16]
  448db5:	push   ss
  448db6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  448db7:	xchg   BYTE PTR [ebx],dl
  448db9:	adc    eax,DWORD PTR [ebx+0x280202ef]
  448dbf:	inc    DWORD PTR [eax]
  448dc1:	add    BYTE PTR [edi],ch
  448dc3:	inc    DWORD PTR [ecx+ebx*1]
  448dc6:	lods   al,BYTE PTR ds:[esi]
  448dc7:	inc    DWORD PTR [ecx]
  448dc9:	or     ah,BYTE PTR [eax-0x3be2fa01]
  448dcf:	inc    DWORD PTR [eax]
  448dd1:	add    BYTE PTR [eax-0x1],al
  448dd4:	add    BYTE PTR [eax],al
  448dd6:	add    bh,bh
  448dd8:	add    BYTE PTR [eax],al
  448dda:	add    bh,bh
  448ddc:	add    BYTE PTR [eax],al
  448dde:	add    bh,bh
  448de0:	add    edx,DWORD PTR [ecx]
  448de2:	cwde   
  448de3:	inc    DWORD PTR [eax]
  448de5:	add    BYTE PTR [ebp-0x6affff01],dl
  448deb:	inc    DWORD PTR [eax]
  448ded:	add    BYTE PTR [ebp-0x66ffff01],dl
  448df3:	inc    DWORD PTR ds:0x1aff9c05
  448df9:	sbb    ch,BYTE PTR [ecx-0x4ad3d329]
  448dff:	popa   
  448e00:	das    
  448e01:	das    
  448e02:	mov    eax,0xffffff0e
	...
  448e0f:	add    BYTE PTR [esi],al
  448e11:	push   es
  448e12:	xchg   esp,eax
  448e13:	or     BYTE PTR [edx],cl
  448e15:	or     al,BYTE PTR [ebx+0x1f040431]
  448e1b:	loop   0x448e22
  448e1d:	add    eax,0x1d05fc27
  448e22:	(bad)  
  448e23:	inc    DWORD PTR [edx]
  448e25:	push   cs
  448e26:	lods   al,BYTE PTR ds:[esi]
  448e27:	inc    DWORD PTR [ebx]
  448e29:	add    edx,DWORD PTR [ebx-0x49ebfc01]
  448e2f:	inc    DWORD PTR [ebx]
  448e31:	adc    al,0xb6
  448e33:	inc    DWORD PTR [ebx]
  448e35:	adc    ebp,DWORD PTR [ebp-0x62f2fd01]
  448e3b:	inc    DWORD PTR [ebx]
  448e3d:	adc    al,0xb6
  448e3f:	inc    DWORD PTR [eax]
  448e41:	add    BYTE PTR [ebp-0x6affff01],dl
  448e47:	dec    DWORD PTR [ebx]
  448e49:	or     edx,DWORD PTR [eax-0x62f7f701]
  448e4f:	inc    DWORD PTR [ebx]
  448e51:	add    ecx,DWORD PTR [edi-0x6feeee01]
  448e57:	dec    DWORD PTR [esi]
  448e59:	push   cs
  448e5a:	xchg   BYTE PTR [ebp+0x30961616],ah
  448e60:	sub    DWORD PTR [ecx],ebp
  448e62:	mov    cl,0x1
	...
  448e74:	add    BYTE PTR [eax],al
  448e76:	add    BYTE PTR [ebp+0x0],dh
  448e79:	add    BYTE PTR [ecx+eiz*8],al
  448e7c:	adc    BYTE PTR [eax],dl
  448e7e:	ins    BYTE PTR es:[edi],dx
  448e7f:	test   eax,0xf6710b0b
  448e84:	add    al,0x4
  448e86:	jge    0x448e87
  448e88:	add    DWORD PTR [ecx],eax
  448e8a:	xchg   esp,eax
  448e8b:	inc    DWORD PTR [eax]
  448e8d:	add    dh,al
  448e8f:	inc    DWORD PTR [edx]
  448e91:	add    cl,ah
  448e93:	inc    DWORD PTR [edx+eax*1]
  448e96:	jmp    0x448e97
  448e98:	add    eax,0x5ffeb04
  448e9d:	add    ecx,ebp
  448e9f:	inc    DWORD PTR [ebx]
  448ea1:	add    ch,bl
  448ea3:	inc    DWORD PTR [ecx]
  448ea5:	add    BYTE PTR [eax-0x79fdfd01],bh
  448eab:	inc    DWORD PTR [esp+eax*1]
  448eae:	jnp    0x448eaf
  448eb0:	or     DWORD PTR [ecx],ecx
  448eb2:	jne    0x448eb3
  448eb4:	or     eax,0x7a8480d
  448eb9:	pop    es
  448eba:	push   ecx
  448ebb:	cmp    BYTE PTR [esp+edx*1],dl
  448ebe:	mov    WORD PTR [eax+eax*1],es
	...
  448ec9:	add    BYTE PTR [eax],al
  448ecb:	or     DWORD PTR [eax],eax
  448ecd:	add    BYTE PTR [eax],al
  448ecf:	xchg   DWORD PTR [eax],eax
  448ed1:	add    BYTE PTR [eax],al
  448ed3:	loope  0x448ed5
  448ed5:	add    BYTE PTR [eax],al
  448ed7:	clc    
  448ed8:	add    BYTE PTR [eax],al
  448eda:	add    BYTE PTR [ebx+0x8],al
  448edd:	or     BYTE PTR [eax+0x22],cl
  448ee0:	add    eax,0x2943c05
  448ee5:	add    ch,BYTE PTR [eax-0x10]
  448ee8:	add    al,BYTE PTR [edx]
  448eea:	int    0xff
  448eec:	add    DWORD PTR [esi],ecx
  448eee:	out    dx,al
  448eef:	inc    DWORD PTR [eax]
  448ef1:	and    cl,ah
  448ef3:	inc    DWORD PTR [ecx]
  448ef5:	push   ss
  448ef6:	sar    bh,cl
  448ef8:	add    DWORD PTR [ecx*8-0x2ae7fc01],eax
  448eff:	inc    DWORD PTR [eax]
  448f01:	sbb    ah,al
  448f03:	inc    DWORD PTR [ecx]
  448f05:	or     al,0xe4
  448f07:	inc    DWORD PTR [ebx]
  448f09:	add    edi,DWORD PTR [ecx+0x610202ff]
  448f0f:	out    dx,al
  448f10:	push   es
  448f11:	push   es
  448f12:	cmp    al,0x8f
  448f14:	or     DWORD PTR [ecx],ecx
  448f16:	and    DWORD PTR [edi],esp
  448f18:	add    BYTE PTR [eax],al
  448f1a:	add    DWORD PTR [ebx+0x0],esi
  448f1d:	add    BYTE PTR [eax],al
  448f1f:	stc    
  448f20:	add    BYTE PTR [eax],al
  448f22:	add    BYTE PTR [eax+eax*1+0x390000],dh
  448f29:	add    BYTE PTR [eax],al
  448f2b:	jnp    0x448f2d
  448f2d:	add    BYTE PTR [eax],al
  448f2f:	inc    DWORD PTR [eax]
  448f31:	add    BYTE PTR [eax],al
  448f33:	inc    DWORD PTR [eax]
  448f35:	add    BYTE PTR [eax],al
  448f37:	inc    DWORD PTR [eax]
  448f39:	add    BYTE PTR [eax],al
  448f3b:	push   esp
  448f3c:	add    BYTE PTR [eax],al
  448f3e:	fstp   QWORD PTR ds:0x5dd50000
  448f44:	add    BYTE PTR [edi],al
  448f46:	aad    0xd7
  448f48:	add    eax,0x12fdef41
  448f4d:	xchg   esp,eax
  448f4e:	cli    
  448f4f:	call   DWORD PTR [edx]
  448f51:	mov    ch,bl
  448f53:	inc    DWORD PTR ds:0x1ffc32a
  448f59:	add    al,0xb0
  448f5b:	dec    DWORD PTR [ebx]
  448f5d:	inc    edi
  448f5e:	int3   
  448f5f:	call   DWORD PTR ds:0xcfff3a1
  448f65:	jle    0x448f5d
  448f67:	inc    DWORD PTR [ecx]
  448f69:	sub    esp,edi
  448f6b:	stc    
  448f6c:	add    BYTE PTR [ebx],cl
  448f6e:	ret    
  448f6f:	lds    eax,FWORD PTR [eax]
  448f71:	add    edi,esp
  448f73:	inc    esi
  448f74:	add    BYTE PTR [eax],al
  448f76:	add    BYTE PTR [eax],al
  448f78:	add    BYTE PTR [eax],al
  448f7a:	add    bl,bl
  448f7c:	add    BYTE PTR [eax],al
  448f7e:	add    bh,bh
  448f80:	add    BYTE PTR [eax],al
  448f82:	add    bh,bh
  448f84:	add    BYTE PTR [eax],al
  448f86:	add    bl,dh
  448f88:	add    BYTE PTR [eax],al
  448f8a:	add    BYTE PTR [edi-0x1000000],al
  448f90:	add    BYTE PTR [eax],al
  448f92:	add    bh,bh
  448f94:	add    BYTE PTR [eax],al
  448f96:	add    bh,bh
  448f98:	add    BYTE PTR [eax],al
  448f9a:	add    BYTE PTR [edx+0x0],bl
  448f9d:	add    dh,bh
  448f9f:	bound  eax,QWORD PTR [eax]
  448fa1:	add    edi,eax
  448fa3:	mov    ah,0x5
  448fa5:	dec    edx
  448fa6:	repz cld 
  448fa8:	sbb    eax,esi
  448faa:	std    
  448fab:	jmp    FWORD PTR ds:0x22fffaf8
  448fb1:	cwde   
  448fb2:	aad    0xff
  448fb4:	or     BYTE PTR [ecx],bl
  448fb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  448fb7:	inc    DWORD PTR [eax]
  448fb9:	add    BYTE PTR [edi-0x51c9f001],dl
  448fbf:	jmp    FWORD PTR [ecx]
  448fc1:	(bad)
  448fc4:	sub    dl,dh
  448fc6:	(bad)  
  448fc7:	call   DWORD PTR [eax]
  448fc9:	mov    al,ds:0x3602fffb
  448fce:	div    edi
  448fd0:	add    BYTE PTR [ebx],al
  448fd2:	cld    
  448fd3:	cdq    
  448fd4:	add    BYTE PTR [eax],al
  448fd6:	add    BYTE PTR [eax],al
  448fd8:	add    BYTE PTR [eax],al
  448fda:	add    cl,ah
  448fdc:	add    BYTE PTR [eax],al
  448fde:	add    bh,bh
  448fe0:	add    BYTE PTR [eax],al
  448fe2:	add    bh,bh
  448fe4:	add    BYTE PTR [eax],al
  448fe6:	add    bh,bh
  448fe8:	add    BYTE PTR [eax],al
  448fea:	add    BYTE PTR [edi-0x1000000],al
  448ff0:	add    BYTE PTR [eax],al
  448ff2:	add    bh,bh
  448ff4:	add    BYTE PTR [eax],al
  448ff6:	add    bh,bh
  448ff8:	add    BYTE PTR [eax],al
  448ffa:	add    BYTE PTR [edx+0x0],bl
  448ffd:	add    dl,bl
  448fff:	fwait
  449000:	add    BYTE PTR [esi],al
  449002:	(bad)  
  449003:	in     al,0xb
  449005:	retw   
  449007:	jmp    DWORD PTR [edx]
  449009:	ret    
  44900a:	fdiv   st(7),st
  44900c:	es cwde 
  44900e:	enter  0x14ff,0x2c
  449012:	cdq    
  449013:	inc    DWORD PTR ds:0xff8500
  449019:	add    BYTE PTR [ebx-0x79f8f901],al
  44901f:	call   FWORD PTR [eax]
  449021:	inc    edx
  449022:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  449023:	jmp    DWORD PTR [edi]
  449025:	mov    dl,0xd5
  449027:	call   FWORD PTR [edx]
  449029:	mov    al,0xd6
  44902b:	inc    DWORD PTR [edi+edi*1]
  44902e:	mov    bh,0xff
  449030:	add    BYTE PTR [edi+ecx*8],al
  449033:	rol    DWORD PTR [eax],1
  449035:	add    BYTE PTR [eax],al
  449037:	add    BYTE PTR [eax],al
  449039:	add    BYTE PTR [eax],al
  44903b:	loop   0x44903d
  44903d:	add    BYTE PTR [eax],al
  44903f:	inc    DWORD PTR [eax]
  449041:	add    BYTE PTR [eax],al
  449043:	inc    DWORD PTR [eax]
  449045:	add    BYTE PTR [eax],al
  449047:	inc    DWORD PTR [eax]
  449049:	add    BYTE PTR [eax],al
  44904b:	jb     0x44904d
  44904d:	add    BYTE PTR [eax],al
  44904f:	inc    DWORD PTR [eax]
  449051:	add    BYTE PTR [eax],al
  449053:	inc    DWORD PTR [eax]
  449055:	add    BYTE PTR [eax],al
  449057:	inc    DWORD PTR [eax]
  449059:	add    BYTE PTR [eax],al
  44905b:	popa   
  44905c:	add    BYTE PTR [ecx],al
  44905e:	(bad)  
  44905f:	stos   BYTE PTR es:[edi],al
  449060:	add    BYTE PTR ds:0xd03ebac,al
  449066:	cmp    edi,0x6
  449069:	(bad)  
  44906b:	inc    DWORD PTR [esi]
  44906d:	or     BYTE PTR [esi-0x1],ch
  449070:	add    al,BYTE PTR [eax]
  449072:	jno    0x449073
  449074:	add    BYTE PTR [eax],al
  449076:	jne    0x449077
  449078:	add    BYTE PTR [eax],al
  44907a:	js     0x44907b
  44907c:	add    BYTE PTR [eax],al
  44907e:	jne    0x44907f
  449080:	add    DWORD PTR [ecx],eax
  449082:	jno    0x449083
  449084:	add    al,0xb
  449086:	outs   dx,BYTE PTR ds:[esi]
  449087:	inc    DWORD PTR [esi]
  449089:	adc    BYTE PTR [edi+edi*8+0x3],dh
  44908d:	or     al,0x88
  44908f:	inc    DWORD PTR [eax]
  449091:	add    eax,0xe1bc
  449096:	add    BYTE PTR [eax],al
  449098:	add    BYTE PTR [eax],al
  44909a:	add    ah,ah
  44909c:	add    BYTE PTR [eax],al
  44909e:	add    bh,bh
  4490a0:	add    BYTE PTR [eax],al
  4490a2:	add    bh,bh
  4490a4:	add    BYTE PTR [eax],al
  4490a6:	add    bh,ah
  4490a8:	add    BYTE PTR [eax],al
  4490aa:	add    BYTE PTR [esi],al
  4490ac:	add    BYTE PTR [eax],al
  4490ae:	add    BYTE PTR [eax+eax*1+0xfe0000],ch
  4490b5:	add    BYTE PTR [eax],al
  4490b7:	repnz add BYTE PTR [eax],al
  4490ba:	add    BYTE PTR [edx],ch
  4490bc:	add    BYTE PTR [eax],al
  4490be:	mov    ebx,0x9b0000ad
  4490c3:	in     eax,dx
  4490c4:	add    BYTE PTR [eax],al
  4490c6:	imul   edi,edi,0xff590002
  4490cc:	add    eax,0x6ff6001
  4490d1:	add    al,0x68
  4490d3:	inc    DWORD PTR ds:0x6ff6806
  4490d9:	push   es
  4490da:	imul   edi,edi,0xff6a0606
  4490e0:	push   es
  4490e1:	push   es
  4490e2:	inc    DWORD PTR [di]
  4490e5:	add    bl,BYTE PTR [esi-0x1]
  4490e8:	add    al,BYTE PTR [eax]
  4490ea:	pop    esp
  4490eb:	inc    DWORD PTR [eax]
  4490ed:	add    BYTE PTR [edi-0x1],ch
  4490f0:	add    BYTE PTR [eax],al
  4490f2:	scas   al,BYTE PTR es:[edi]
  4490f3:	loop   0x4490f5
  4490f5:	add    BYTE PTR [eax],al
  4490f7:	add    BYTE PTR [eax],al
  4490f9:	add    BYTE PTR [eax],al
  4490fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4490fc:	add    BYTE PTR [eax],al
  4490fe:	add    bh,bh
  449100:	add    BYTE PTR [eax],al
  449102:	add    cl,ch
  449104:	add    BYTE PTR [eax],al
  449106:	add    BYTE PTR [esi],dh
  449108:	add    BYTE PTR [eax],al
  44910a:	add    BYTE PTR [eax],al
  44910c:	add    BYTE PTR [eax],al
  44910e:	add    BYTE PTR [eax],dh
  449110:	add    BYTE PTR [eax],al
  449112:	add    dl,ah
  449114:	add    BYTE PTR [eax],al
  449116:	add    ch,al
  449118:	add    BYTE PTR [eax],al
  44911a:	add    BYTE PTR ds:0xa3b80000,ah
  449120:	add    al,BYTE PTR [ecx]
  449122:	xchg   esi,eax
  449123:	jmp    0xd0f:0xff5f0708
  44912a:	dec    ebp
  44912b:	call   DWORD PTR [edx]
  44912d:	adc    DWORD PTR [esi-0x1],edx
  449130:	adc    edx,DWORD PTR [ebx]
  449132:	pop    edi
  449133:	call   DWORD PTR [ebx]
  449135:	adc    ebx,DWORD PTR [esi-0x1]
  449138:	adc    dl,BYTE PTR [edx]
  44913a:	pop    ebp
  44913b:	call   DWORD PTR [esp+edx*1]
  44913e:	pusha  
  44913f:	call   DWORD PTR [esp+edx*1]
  449142:	pop    edi
  449143:	call   DWORD PTR [ebx+edx*1]
  449146:	push   esi
  449147:	dec    DWORD PTR [esi]
  449149:	push   cs
  44914a:	push   ecx
  44914b:	inc    DWORD PTR [esi]
  44914d:	add    eax,0xff67
  449152:	stos   DWORD PTR es:[edi],eax
  449153:	xlat   BYTE PTR ds:[ebx]
  449154:	add    BYTE PTR [eax],al
  449156:	add    BYTE PTR [eax],al
  449158:	add    BYTE PTR [eax],al
  44915a:	add    BYTE PTR [eax+eax*1+0x0],dh
  44915e:	add    dh,ch
  449160:	add    BYTE PTR [eax],al
  449162:	add    BYTE PTR [ebp+0x0],bh
  449165:	add    BYTE PTR [eax],al
  449167:	add    bh,bh
  449169:	(bad)  
  44916a:	inc    DWORD PTR [eax]
  44916c:	add    BYTE PTR [eax],al
  44916e:	add    BYTE PTR [eax+eax*1],dl
  449171:	add    BYTE PTR [eax],al
  449173:	mov    dl,0x0
  449175:	add    BYTE PTR [eax],al
  449177:	loopne 0x449179
  449179:	add    BYTE PTR [eax],al
  44917b:	dec    esi
  44917c:	add    BYTE PTR [eax],al
  44917e:	mov    bl,0x74
  449180:	add    eax,0x18c3a104
  449185:	sbb    BYTE PTR [ebx-0x1],ch
  449188:	sub    ebp,DWORD PTR [ebx]
  44918a:	dec    esi
  44918b:	push   DWORD PTR [eax]
  44918d:	das    
  44918e:	dec    ebp
  44918f:	jmp    FWORD PTR [ecx]
  449191:	sub    dl,BYTE PTR [edi+edi*8+0x26]
  449195:	es push edi
  449197:	jmp    DWORD PTR [edi]
  449199:	daa    
  44919a:	push   edi
  44919b:	jmp    DWORD PTR [edi]
  44919d:	daa    
  44919e:	pop    eax
  44919f:	jmp    FWORD PTR [esp+ebp*1]
  4491a2:	push   esp
  4491a3:	push   DWORD PTR [ecx]
  4491a5:	xor    cl,BYTE PTR [edi-0x1]
  4491a8:	sub    ch,BYTE PTR [edx]
  4491aa:	push   ebp
  4491ab:	call   DWORD PTR [ebx]
  4491ad:	adc    DWORD PTR [ebx-0x2],esi
  4491b0:	add    al,BYTE PTR [ecx]
  4491b2:	mov    ch,0xaa
  4491b4:	add    BYTE PTR [eax],al
  4491b6:	add    BYTE PTR [ecx],bl
  4491b8:	add    BYTE PTR [eax],al
  4491ba:	add    BYTE PTR [ebx-0x14000000],bh
  4491c0:	add    BYTE PTR [eax],al
  4491c2:	add    BYTE PTR [edx],ah
  4491c4:	(bad)  
  4491c5:	(bad)  
  4491c6:	inc    DWORD PTR [eax]
  4491c8:	(bad)  
  4491c9:	(bad)  
  4491ca:	inc    DWORD PTR [eax]
  4491cc:	add    BYTE PTR [eax],al
  4491ce:	add    BYTE PTR [ebx],cl
  4491d0:	add    BYTE PTR [eax],al
  4491d2:	add    BYTE PTR [edx+0x0],ah
  4491d5:	add    BYTE PTR [eax],al
  4491d7:	repnz add BYTE PTR [eax],al
  4491da:	add    BYTE PTR [eax+eax*1+0x3417000],ah
  4491e1:	add    esi,DWORD PTR [edx-0x72e4e494]
  4491e7:	fistp  QWORD PTR [esi]
  4491e9:	ds imul edi,edi,0x4f
  4491ed:	dec    edi
  4491ee:	pop    ecx
  4491ef:	dec    DWORD PTR [ebx+0x4b]
  4491f2:	push   ebp
  4491f3:	inc    DWORD PTR [esp+eax*2+0x57]
  4491f7:	inc    DWORD PTR [esp+eax*2+0x58]
  4491fb:	inc    DWORD PTR [edi+0x46]
  4491fe:	push   edi
  4491ff:	dec    DWORD PTR [edi+0x4e]
  449202:	push   esi
  449203:	dec    DWORD PTR [esp+ecx*2+0x5d]
  449207:	push   DWORD PTR ds:0x13fd7434
  44920d:	adc    edx,DWORD PTR [esi-0x39fefe3a]
  449213:	push   edi
  449214:	add    BYTE PTR [eax],al
  449216:	add    BYTE PTR [eax+0x0],dh
  449219:	add    BYTE PTR [eax],al
  44921b:	in     eax,0x0
  44921d:	add    BYTE PTR [eax],al
  44921f:	pushf  
  449220:	add    BYTE PTR [eax],al
  449222:	add    BYTE PTR ds:0xffffff,cl
  449228:	(bad)  
  449229:	(bad)  
  44922a:	inc    DWORD PTR [eax]
  44922c:	add    BYTE PTR [eax],al
  44922e:	add    BYTE PTR [ecx],al
  449230:	add    BYTE PTR [eax],al
  449232:	add    BYTE PTR [ebx],bl
  449234:	add    BYTE PTR [eax],al
  449236:	add    dl,cl
  449238:	add    BYTE PTR [eax],al
  44923a:	add    dl,dh
  44923c:	add    BYTE PTR [eax],al
  44923e:	add    dh,BYTE PTR [eax+eax*1+0x0]
  449242:	jb     0x44926d
  449244:	(bad)  
  449245:	cmpxchg BYTE PTR [ebp+0x32],bh
  449249:	xor    bl,BYTE PTR [edx+0x7b5858e6]
  44924f:	jmp    DWORD PTR [ebx+0x63]
  449252:	push   0xffffffff
  449254:	pop    esi
  449255:	pop    esi
  449256:	call   FWORD PTR [si+0x5c]
  44925a:	jmp    DWORD PTR [bx+si+0x60]
  44925e:	push   0x6f6262ff
  449263:	dec    DWORD PTR [esp+ecx*2-0x7c]
  449267:	cld    
  449268:	and    esp,DWORD PTR [ebx]
  44926a:	mov    eax,ds:0xb10707cf
  44926f:	popa   
  449270:	add    BYTE PTR [eax],al
  449272:	sub    al,0x41
  449274:	add    BYTE PTR [eax],al
  449276:	add    bl,cl
  449278:	add    BYTE PTR [eax],al
  44927a:	add    ah,dh
  44927c:	add    BYTE PTR [eax],al
  44927e:	add    BYTE PTR [eax+0x0],bl
  449281:	add    BYTE PTR [eax],al
  449283:	add    al,0xff
  449285:	(bad)  
  449286:	inc    DWORD PTR [eax]
  449288:	(bad)  
  449289:	(bad)  
  44928a:	inc    DWORD PTR [eax]
  44928c:	add    BYTE PTR [eax],al
  44928e:	add    BYTE PTR [eax],al
  449290:	add    BYTE PTR [eax],al
  449292:	add    BYTE PTR [edx],al
  449294:	add    BYTE PTR [eax],al
  449296:	add    BYTE PTR [ebp+0x0],al
  449299:	add    BYTE PTR [eax],al
  44929b:	fild   DWORD PTR [eax]
  44929d:	add    BYTE PTR [eax],al
  44929f:	in     eax,dx
  4492a0:	add    BYTE PTR [eax],al
  4492a2:	add    BYTE PTR [ebx+0x2],bh
  4492a5:	add    dh,BYTE PTR [ebp+0x31]
  4492a8:	push   ss
  4492a9:	push   ss
  4492aa:	mov    ah,0x71
  4492ac:	xor    dh,BYTE PTR [edx]
  4492ae:	mov    ds:0x944646c1,eax
  4492b3:	repnz dec esi
  4492b5:	dec    esi
  4492b6:	(bad)  
  4492b7:	dec    DWORD PTR [ebp+0x4d]
  4492ba:	(bad)  
  4492bb:	dec    DWORD PTR [esp+ecx*2-0x70]
  4492bf:	std    
  4492c0:	aas    
  4492c1:	aas    
  4492c2:	cdq    
  4492c3:	loop   0x4492f0
  4492c5:	sub    esp,DWORD PTR [edi-0x4befef56]
  4492cb:	pop    ecx
  4492cc:	add    BYTE PTR [eax],al
  4492ce:	and    eax,0x4b
  4492d3:	mov    esp,0xf8000000
  4492d8:	add    BYTE PTR [eax],al
  4492da:	add    BYTE PTR [edx+0x1f000000],bh
  4492e0:	(bad)  
  4492e1:	(bad)  
  4492e2:	inc    DWORD PTR [eax]
  4492e4:	(bad)  
  4492e5:	(bad)  
  4492e6:	inc    DWORD PTR [eax]
  4492e8:	(bad)  
  4492e9:	(bad)  
  4492ea:	inc    DWORD PTR [eax]
	...
  4492f4:	add    BYTE PTR [eax],al
  4492f6:	add    BYTE PTR [ecx],bl
  4492f8:	add    BYTE PTR [eax],al
  4492fa:	add    BYTE PTR [ecx-0x11000000],bl
  449300:	add    BYTE PTR [eax],al
  449302:	add    bl,dh
  449304:	add    BYTE PTR [eax],al
  449306:	add    BYTE PTR [esi+0x59000000],ch
  44930c:	add    BYTE PTR [eax],al
  44930e:	add    BYTE PTR [ebx],bl
	...
  449320:	add    BYTE PTR [eax],al
  449322:	add    BYTE PTR [eax],cl
  449324:	add    BYTE PTR [eax],al
  449326:	add    BYTE PTR [edi],bh
  449328:	add    BYTE PTR [eax],al
  44932a:	add    BYTE PTR [edx-0x28000000],al
  449330:	add    BYTE PTR [eax],al
  449332:	add    bh,dh
  449334:	add    BYTE PTR [eax],al
  449336:	add    dh,dl
  449338:	add    BYTE PTR [eax],al
  44933a:	add    BYTE PTR [ebx+0x0],bl
  44933d:	add    BYTE PTR [eax],al
  44933f:	push   es
  449340:	add    BYTE PTR [eax],al
  449342:	add    BYTE PTR [eax],al
  449344:	(bad)  
  449345:	(bad)  
  449346:	inc    DWORD PTR [eax]
  449348:	(bad)  
  449349:	(bad)  
  44934a:	inc    DWORD PTR [eax]
	...
  449358:	add    BYTE PTR [eax],al
  44935a:	add    BYTE PTR [ecx],dh
  44935c:	add    BYTE PTR [eax],al
  44935e:	add    BYTE PTR [ebp-0x1c000000],dl
  449364:	add    BYTE PTR [eax],al
  449366:	add    ah,ch
  449368:	add    BYTE PTR [eax],al
  44936a:	add    ah,cl
  44936c:	add    BYTE PTR [eax],al
  44936e:	add    BYTE PTR [eax+eax*1+0x910000],ch
  449375:	add    BYTE PTR [eax],al
  449377:	jl     0x449379
  449379:	add    BYTE PTR [eax],al
  44937b:	js     0x44937d
  44937d:	add    BYTE PTR [eax],al
  44937f:	mov    BYTE PTR [eax],al
  449381:	add    BYTE PTR [eax],al
  449383:	mov    ds:0xbc000000,al
  449388:	add    BYTE PTR [eax],al
  44938a:	add    ch,bl
  44938c:	add    BYTE PTR [eax],al
  44938e:	add    al,dh
  449390:	add    BYTE PTR [eax],al
  449392:	add    ah,al
  449394:	add    BYTE PTR [eax],al
  449396:	add    BYTE PTR [edx+0x0],ah
  449399:	add    BYTE PTR [eax],al
  44939b:	adc    eax,DWORD PTR [eax]
  44939d:	add    BYTE PTR [eax],al
  44939f:	add    BYTE PTR [eax],al
  4493a1:	add    BYTE PTR [eax],al
  4493a3:	add    bh,bh
  4493a5:	(bad)  
  4493a6:	inc    DWORD PTR [eax]
  4493a8:	(bad)  
  4493a9:	(bad)  
  4493aa:	inc    DWORD PTR [eax]
	...
  4493bc:	add    BYTE PTR [eax],al
  4493be:	add    BYTE PTR [esi],bl
  4493c0:	add    BYTE PTR [eax],al
  4493c2:	add    BYTE PTR [eax+eax*1+0x0],bh
  4493c6:	add    al,cl
  4493c8:	add    BYTE PTR [eax],al
  4493ca:	add    bh,ah
  4493cc:	add    BYTE PTR [eax],al
  4493ce:	add    al,bh
  4493d0:	add    BYTE PTR [eax],al
  4493d2:	add    bh,bh
  4493d4:	add    BYTE PTR [eax],al
  4493d6:	add    dh,bh
  4493d8:	add    BYTE PTR [eax],al
  4493da:	add    ch,bh
  4493dc:	add    BYTE PTR [eax],al
  4493de:	add    bh,bh
  4493e0:	add    BYTE PTR [eax],al
  4493e2:	add    ch,bh
  4493e4:	add    BYTE PTR [eax],al
  4493e6:	add    dh,ch
  4493e8:	add    BYTE PTR [eax],al
  4493ea:	add    dh,dl
  4493ec:	add    BYTE PTR [eax],al
  4493ee:	add    BYTE PTR [ebx+0x48000000],ch
  4493f4:	add    BYTE PTR [eax],al
  4493f6:	add    BYTE PTR [eax],cl
	...
  449404:	(bad)  
  449405:	(bad)  
  449406:	inc    DWORD PTR [eax]
  449408:	(bad)  
  449409:	(bad)  
  44940a:	inc    DWORD PTR [eax]
	...
  449424:	add    BYTE PTR [eax],al
  449426:	add    BYTE PTR [eax],dh
  449428:	add    BYTE PTR [eax],al
  44942a:	add    BYTE PTR [ebx+0x0],dh
  44942d:	add    BYTE PTR [eax],al
  44942f:	mov    al,BYTE PTR [eax]
  449431:	add    BYTE PTR [eax],al
  449433:	mov    eax,ds:0xaf000000
  449438:	add    BYTE PTR [eax],al
  44943a:	add    BYTE PTR [edi-0x6a000000],ah
  449440:	add    BYTE PTR [eax],al
  449442:	add    BYTE PTR [eax+eax*1+0x7a0000],dl
  449449:	add    BYTE PTR [eax],al
  44944b:	pop    ebx
  44944c:	add    BYTE PTR [eax],al
  44944e:	add    BYTE PTR [esi],dh
  449450:	add    BYTE PTR [eax],al
  449452:	add    BYTE PTR [eax+eax*1],al
	...
  449461:	add    BYTE PTR [eax],al
  449463:	add    bh,bh
  449465:	(bad)  
  449466:	inc    DWORD PTR [eax]
  449468:	rol    BYTE PTR [eax],0x1
  44946b:	add    al,al
  44946d:	add    BYTE PTR [ecx],al
  44946f:	add    al,dl
  449471:	add    BYTE PTR [ebx],al
  449473:	add    al,dh
  449475:	add    BYTE PTR [ebx],al
  449477:	add    al,al
  449479:	add    BYTE PTR [ecx],al
  44947b:	add    al,al
  44947d:	add    BYTE PTR [ecx],al
  44947f:	add    al,al
  449481:	add    BYTE PTR [ecx],al
  449483:	add    al,al
  449485:	add    BYTE PTR [ecx],al
  449487:	add    al,ah
  449489:	add    BYTE PTR [ebx],al
  44948b:	add    BYTE PTR [eax],al
  44948d:	add    BYTE PTR [eax],al
  44948f:	add    BYTE PTR [eax],al
  449491:	add    BYTE PTR [eax],dl
  449493:	add    BYTE PTR [eax],al
  449495:	add    BYTE PTR [eax],dl
  449497:	add    BYTE PTR [eax],al
  449499:	add    BYTE PTR [eax],dl
  44949b:	add    BYTE PTR [eax],al
  44949d:	add    BYTE PTR [eax],dl
  44949f:	add    BYTE PTR [eax],al
  4494a1:	add    BYTE PTR [eax],dl
  4494a3:	add    BYTE PTR [eax-0x7fffef00],al
  4494a9:	add    BYTE PTR [ecx],al
  4494ab:	add    BYTE PTR [eax-0x7fffff00],al
  4494b1:	add    BYTE PTR [ecx],al
  4494b3:	add    al,al
  4494b5:	add    BYTE PTR [ebx],al
  4494b7:	add    al,ah
  4494b9:	cmp    al,0x3
  4494bb:	add    al,dh
  4494bd:	add    BYTE PTR [edi],al
  4494bf:	add    al,bh
  4494c1:	add    BYTE PTR [edi],cl
  4494c3:	add    dh,bh
  4494c5:	add    BYTE PTR [edi],bl
  4494c7:	add    BYTE PTR [eax],ch
  4494c9:	add    BYTE PTR [eax],al
  4494cb:	add    BYTE PTR [eax],dl
  4494cd:	add    BYTE PTR [eax],al
  4494cf:	add    BYTE PTR [eax],ah
  4494d1:	add    BYTE PTR [eax],al
  4494d3:	add    BYTE PTR [ecx],al
  4494d5:	add    BYTE PTR [eax],ah
  4494d7:	add    BYTE PTR [eax],al
  4494d9:	add    BYTE PTR [eax],al
  4494db:	add    BYTE PTR [eax+0x4],al
	...
  4494f6:	add    BYTE PTR [esi*1+0x1a262835],al
  4494fd:	sbb    cl,dl
  4494ff:	sbb    eax,0xffd30c07
  449504:	or     ecx,DWORD PTR [ebx]
  449506:	popf   
  449507:	inc    DWORD PTR [esi]
  449509:	or     cl,dl
  44950b:	inc    DWORD PTR [ebx]
  44950d:	or     esi,ecx
  44950f:	inc    DWORD PTR [ebx]
  449511:	or     esi,ecx
  449513:	inc    DWORD PTR [ebx]
  449515:	or     esi,ecx
  449517:	dec    DWORD PTR [ecx*1+0xd08ffa1]
  44951e:	(bad)  
  44951f:	call   FWORD PTR [edx]
  449521:	sbb    cl,cl
  449523:	es aas 
  449525:	aas    
  449526:	inc    ebp
  449527:	sub    al,0x44
  449529:	inc    esp
  44952a:	inc    esp
  44952b:	sldt   WORD PTR [eax]
	...
  449536:	add    BYTE PTR [eax],al
  449538:	(bad)  
  449539:	movnti DWORD PTR [eax+0xf],eax
  44953d:	adc    BYTE PTR [esi-0x68f6f201],ah
  449543:	dec    DWORD PTR [ecx]
  449545:	or     eax,0xc06ffba
  44954a:	aam    0xff
  44954c:	add    ecx,DWORD PTR [ebx]
  44954e:	icebp  
  44954f:	inc    DWORD PTR [ebx]
  449551:	or     esi,ecx
  449553:	inc    DWORD PTR [ebx]
  449555:	or     esi,ecx
  449557:	inc    DWORD PTR [ebx+ecx*1]
  44955a:	jmp    0x13ff:0x920b0cff
  449561:	adc    esi,DWORD PTR [esi-0x39e9e901]
  449567:	push   ecx
	...
  449574:	and    al,0x24
  449576:	mov    dh,0xe
  449578:	adc    BYTE PTR [eax],dl
  44957a:	ret    0xb2e
  44957d:	or     edi,DWORD PTR [edi+edi*8-0x33fbfc]
  449584:	add    ecx,DWORD PTR [ebx]
  449586:	icebp  
  449587:	inc    DWORD PTR [ebx]
  449589:	or     esi,ecx
  44958b:	inc    DWORD PTR [eax]
  44958d:	add    BYTE PTR [eax],al
  44958f:	inc    DWORD PTR [eax]
  449591:	add    BYTE PTR [eax],al
  449593:	inc    DWORD PTR [ebx]
  449595:	or     esi,ecx
  449597:	inc    DWORD PTR [ebx]
  449599:	add    ecx,esi
  44959b:	inc    DWORD PTR [ebx]
  44959d:	add    ecx,esi
  44959f:	inc    DWORD PTR [ebx]
  4495a1:	add    ecx,edx
  4495a3:	dec    DWORD PTR ds:0x4bc50d
	...
  4495b1:	add    BYTE PTR [eax],al
  4495b3:	add    BYTE PTR [eax],bh
  4495b5:	cmp    dh,al
  4495b7:	adc    al,BYTE PTR [eax]
  4495b9:	add    BYTE PTR [eax],al
  4495bb:	add    BYTE PTR [edi],cl
  4495bd:	movq   mm7,mm7
  4495c0:	(bad)  
  4495c1:	movq   mm7,mm7
  4495c4:	add    BYTE PTR [eax],al
  4495c6:	add    bh,bh
  4495c8:	add    BYTE PTR [eax],al
  4495ca:	add    bh,bh
  4495cc:	add    BYTE PTR [eax],al
  4495ce:	add    bh,bh
  4495d0:	add    BYTE PTR [eax],al
  4495d2:	add    bh,bh
  4495d4:	add    ecx,DWORD PTR [ebx]
  4495d6:	icebp  
  4495d7:	call   DWORD PTR [ebx]
  4495d9:	adc    esp,DWORD PTR [ebp-0x5aecec01]
  4495df:	inc    DWORD PTR ds:0xffab05
  4495e5:	add    BYTE PTR [eax],al
  4495e7:	add    BYTE PTR [edi],bl
  4495e9:	pop    ds
  4495ea:	mov    edi,0x10
  4495ef:	add    BYTE PTR [eax],al
  4495f1:	add    BYTE PTR [eax],al
  4495f3:	add    BYTE PTR [eax],al
  4495f5:	add    bh,bh
  4495f7:	add    al,BYTE PTR [eax]
	...
  449601:	add    BYTE PTR [eax],al
  449603:	dec    DWORD PTR [edi]
  449605:	movq   mm7,mm7
  449608:	add    ecx,DWORD PTR [ebx]
  44960a:	icebp  
  44960b:	inc    DWORD PTR [ebx]
  44960d:	or     esi,ecx
  44960f:	inc    DWORD PTR [ebx]
  449611:	or     esi,ecx
  449613:	call   DWORD PTR [ebx]
  449615:	adc    esp,DWORD PTR [ebp-0x5aecec01]
  44961b:	call   DWORD PTR [ebx]
  44961d:	adc    esp,DWORD PTR [ebp+0xff]
  449623:	add    BYTE PTR [eax],al
  449625:	add    BYTE PTR [eax],al
  449627:	add    BYTE PTR [esp],ah
  44962a:	xchg   ecx,eax
  44962b:	push   cs
	...
  449634:	add    BYTE PTR [eax],al
  449636:	add    bh,bh
  449638:	add    BYTE PTR [eax],al
  44963a:	add    bh,bh
  44963c:	add    BYTE PTR [eax],al
  44963e:	add    bh,bh
  449640:	pop    ds
  449641:	sbb    DWORD PTR [edi+0x5a],edx
  449644:	add    BYTE PTR [esi],al
  449646:	xchg   ebp,eax
  449647:	inc    DWORD PTR [eax]
  449649:	push   es
  44964a:	xchg   ebp,eax
  44964b:	inc    DWORD PTR [eax]
  44964d:	push   es
  44964e:	xchg   ebp,eax
  44964f:	inc    DWORD PTR [eax]
  449651:	push   es
  449652:	xchg   ebp,eax
  449653:	inc    DWORD PTR [eax]
  449655:	push   es
  449656:	xchg   ebp,eax
  449657:	inc    DWORD PTR [eax]
  449659:	push   es
  44965a:	xchg   ebp,eax
  44965b:	inc    DWORD PTR [eax]
	...
  449665:	add    BYTE PTR [eax],al
  449667:	inc    DWORD PTR [eax]
  449669:	add    BYTE PTR [eax],al
  44966b:	inc    DWORD PTR [eax]
  44966d:	add    BYTE PTR [eax],al
  44966f:	add    BYTE PTR [eax],al
  449671:	add    BYTE PTR [eax],al
  449673:	inc    DWORD PTR [eax]
  449675:	add    BYTE PTR [eax],al
  449677:	inc    DWORD PTR [eax]
  449679:	add    BYTE PTR [eax],al
  44967b:	inc    DWORD PTR [eax]
  44967d:	add    BYTE PTR [eax],al
  44967f:	add    BYTE PTR [eax],al
  449681:	push   es
  449682:	xchg   ebp,eax
  449683:	dec    DWORD PTR [ecx]
  449685:	sub    ebx,esi
  449687:	cli    
  449688:	pop    es
  449689:	push   esp
  44968a:	fdiv   st(7),st
  44968c:	add    BYTE PTR [edx+eax*8],dl
  44968f:	inc    DWORD PTR [eax]
  449691:	or     eax,0x510bffc0
  449696:	aam    0xff
  449698:	or     dh,BYTE PTR [edx]
  44969a:	(bad)  
  44969c:	add    BYTE PTR [esi],al
  44969e:	xchg   ebp,eax
  44969f:	inc    DWORD PTR [eax]
  4496a1:	add    BYTE PTR [eax],al
  4496a3:	add    BYTE PTR [eax],al
  4496a5:	add    BYTE PTR [eax],al
  4496a7:	inc    DWORD PTR [eax]
  4496a9:	add    BYTE PTR [eax],al
  4496ab:	inc    DWORD PTR [eax]
  4496ad:	add    BYTE PTR [eax],al
  4496af:	inc    DWORD PTR [eax]
  4496b1:	add    BYTE PTR [eax],al
  4496b3:	inc    DWORD PTR [eax]
  4496b5:	add    BYTE PTR [eax],al
  4496b7:	inc    DWORD PTR [eax]
  4496b9:	add    BYTE PTR [eax],al
  4496bb:	inc    DWORD PTR [eax]
  4496bd:	add    BYTE PTR [eax],al
  4496bf:	add    BYTE PTR [eax],al
  4496c1:	push   es
  4496c2:	xchg   ebp,eax
  4496c3:	dec    DWORD PTR [edi]
  4496c5:	lods   al,BYTE PTR ds:[esi]
  4496c6:	idiv   bh
  4496c8:	adc    esi,ecx
  4496ca:	cld    
  4496cb:	inc    DWORD PTR [eax]
  4496cd:	push   es
  4496ce:	xchg   ebp,eax
  4496cf:	inc    DWORD PTR [eax]
  4496d1:	push   es
  4496d2:	xchg   ebp,eax
  4496d3:	call   DWORD PTR [ecx]
  4496d5:	retf   0xfffa
  4496d8:	pop    ds
  4496d9:	test   al,0xfb
  4496db:	dec    DWORD PTR [ebx]
  4496dd:	dec    esp
  4496de:	in     eax,dx
  4496df:	inc    DWORD PTR [eax]
  4496e1:	add    BYTE PTR [eax],al
  4496e3:	add    BYTE PTR [eax],al
  4496e5:	add    BYTE PTR [eax],al
  4496e7:	inc    DWORD PTR [eax]
  4496e9:	add    BYTE PTR [eax],al
  4496eb:	inc    DWORD PTR [eax]
  4496ed:	add    BYTE PTR [eax],al
  4496ef:	inc    DWORD PTR [eax]
  4496f1:	add    BYTE PTR [eax],al
  4496f3:	inc    DWORD PTR [eax]
  4496f5:	add    BYTE PTR [eax],al
  4496f7:	inc    DWORD PTR [eax]
  4496f9:	add    BYTE PTR [eax],al
  4496fb:	inc    DWORD PTR [eax]
  4496fd:	add    BYTE PTR [eax],al
  4496ff:	add    BYTE PTR ds:0x10ff6b04,al
  449705:	int    0xf9
  449707:	dec    DWORD PTR [esi]
  449709:	push   0xffa9
  44970e:	jp     0x44970f
  449710:	add    BYTE PTR [eax],al
  449712:	jp     0x449713
  449714:	sbb    al,0x5d
  449716:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  449717:	call   DWORD PTR [ebx]
  449719:	retf   0xfff6
  44971c:	pop    es
  44971d:	pop    ebp
  44971e:	scas   eax,DWORD PTR es:[edi]
  44971f:	inc    DWORD PTR [eax]
  449721:	add    BYTE PTR [eax],al
  449723:	add    BYTE PTR [eax],al
  449725:	add    BYTE PTR [eax],al
  449727:	inc    DWORD PTR [eax]
  449729:	add    BYTE PTR [eax],al
  44972b:	inc    DWORD PTR [eax]
  44972d:	add    BYTE PTR [eax],al
  44972f:	inc    DWORD PTR [eax]
  449731:	add    BYTE PTR [eax],al
  449733:	inc    DWORD PTR [eax]
  449735:	add    BYTE PTR [eax],al
  449737:	inc    DWORD PTR [eax]
  449739:	add    BYTE PTR [eax],al
  44973b:	inc    DWORD PTR [eax]
  44973d:	add    BYTE PTR [eax],al
  44973f:	add    BYTE PTR ds:0x5ff6b04,al
  449745:	or     esi,DWORD PTR [eax-0x1]
  449748:	add    eax,0x5ff6c05
  44974d:	add    al,0x6b
  44974f:	inc    DWORD PTR ds:0x5ff6b04
  449755:	add    al,0x6b
  449757:	inc    DWORD PTR ds:0x5ff700a
  44975d:	or     BYTE PTR [ebp-0x1],ch
  449760:	add    BYTE PTR [eax],al
  449762:	add    BYTE PTR [eax],al
  449764:	add    BYTE PTR [eax],al
  449766:	add    bh,bh
  449768:	add    BYTE PTR [eax],al
  44976a:	add    bh,bh
  44976c:	add    BYTE PTR [eax],al
  44976e:	add    bh,bh
  449770:	add    BYTE PTR [eax],al
  449772:	add    BYTE PTR [eax+eax*1],bh
  449775:	add    BYTE PTR [eax],al
  449777:	inc    DWORD PTR [eax]
  449779:	add    BYTE PTR [eax],al
  44977b:	inc    DWORD PTR [eax]
  44977d:	add    BYTE PTR [eax],al
  44977f:	add    BYTE PTR ds:0x5ff6b04,al
  449785:	add    al,0x6b
  449787:	inc    DWORD PTR ds:0x5ff6b04
  44978d:	add    al,0x6b
  44978f:	inc    DWORD PTR ds:0x5ff6b04
  449795:	add    al,0x6b
  449797:	inc    DWORD PTR ds:0x5ff6b04
  44979d:	add    al,0x6b
  44979f:	inc    DWORD PTR [eax]
  4497a1:	add    BYTE PTR [eax],al
  4497a3:	add    BYTE PTR [eax],al
  4497a5:	add    BYTE PTR [eax],al
  4497a7:	inc    DWORD PTR [eax]
  4497a9:	add    BYTE PTR [eax],al
  4497ab:	inc    DWORD PTR [eax]
  4497ad:	add    BYTE PTR [eax],al
  4497af:	cmp    al,0x0
	...
  4497b9:	add    BYTE PTR [eax],al
  4497bb:	inc    DWORD PTR [eax]
  4497bd:	add    BYTE PTR [eax],al
  4497bf:	add    BYTE PTR [edi],dl
  4497c1:	adc    DWORD PTR [ebp-0x1],edx
  4497c4:	pop    ss
  4497c5:	adc    DWORD PTR [ebp-0x1],edx
  4497c8:	pop    ss
  4497c9:	adc    DWORD PTR [ebp-0x1],edx
  4497cc:	pop    ss
  4497cd:	adc    DWORD PTR [ebp-0x1],edx
  4497d0:	pop    ss
  4497d1:	adc    DWORD PTR [ebp-0x1],edx
  4497d4:	pop    ss
  4497d5:	adc    DWORD PTR [ebp-0x1],edx
  4497d8:	pop    ss
  4497d9:	adc    DWORD PTR [ebp-0x1],edx
  4497dc:	pop    ss
  4497dd:	adc    DWORD PTR [ebp-0x1],edx
  4497e0:	add    BYTE PTR [eax],al
  4497e2:	add    BYTE PTR [eax],al
  4497e4:	add    BYTE PTR [eax],al
  4497e6:	add    bh,bh
	...
  4497f8:	add    BYTE PTR [eax],al
  4497fa:	add    bh,bh
  4497fc:	add    BYTE PTR [eax],al
  4497fe:	add    bh,bh
  449800:	add    BYTE PTR [eax],al
  449802:	add    BYTE PTR [eax],al
  449804:	pop    ss
  449805:	adc    DWORD PTR [ebp-0x1],edx
  449808:	pop    ss
  449809:	adc    DWORD PTR [ebp-0x1],edx
  44980c:	pop    ss
  44980d:	adc    DWORD PTR [ebp-0x1],edx
  449810:	pop    ss
  449811:	adc    DWORD PTR [ebp-0x1],edx
  449814:	pop    ss
  449815:	adc    DWORD PTR [ebp-0x1],edx
  449818:	pop    ss
  449819:	adc    DWORD PTR [ebp-0x1],edx
  44981c:	add    BYTE PTR [eax],al
  44981e:	add    BYTE PTR [eax],al
  449820:	add    BYTE PTR [eax],al
  449822:	add    bh,bh
  449824:	add    BYTE PTR [eax],al
  449826:	add    bh,bh
	...
  44983c:	add    BYTE PTR [eax],al
  44983e:	add    bh,bh
  449840:	add    BYTE PTR [eax],al
  449842:	add    bh,bh
	...
  44985c:	add    BYTE PTR [eax],al
  44985e:	add    bh,bh
  449860:	add    BYTE PTR [eax],al
  449862:	add    bh,bh
	...
  449880:	add    BYTE PTR [eax],al
  449882:	add    bh,bh
  449884:	add    BYTE PTR [eax],al
  449886:	add    bh,bh
  449888:	add    BYTE PTR [eax],al
  44988a:	add    bh,bh
  44988c:	add    BYTE PTR [eax],al
  44988e:	add    bh,bh
  449890:	add    BYTE PTR [eax],al
  449892:	add    bh,bh
  449894:	add    BYTE PTR [eax],al
  449896:	add    bh,bh
  449898:	add    BYTE PTR [eax],al
  44989a:	add    bh,bh
  44989c:	add    BYTE PTR [eax],al
  44989e:	add    bh,bh
	...
  4498c4:	add    BYTE PTR [eax],al
  4498c6:	add    bh,bh
  4498c8:	add    BYTE PTR [eax],al
  4498ca:	add    bh,bh
  4498cc:	add    BYTE PTR [eax],al
  4498ce:	add    bh,bh
  4498d0:	add    BYTE PTR [eax],al
  4498d2:	add    bh,bh
  4498d4:	add    BYTE PTR [eax],al
  4498d6:	add    bh,bh
  4498d8:	add    BYTE PTR [eax],al
  4498da:	add    bh,bh
	...
  4498f0:	add    BYTE PTR [ecx],0x0
  4498f3:	add    al,al
  4498f5:	add    eax,DWORD PTR [eax]
  4498f7:	add    BYTE PTR [eax-0x5ffffffd],al
  4498fd:	add    eax,0xdb00000
  449902:	add    BYTE PTR [eax],al
  449904:	sbb    BYTE PTR [ecx],0x0
  449907:	add    BYTE PTR [eax],dl
  449909:	or     BYTE PTR [eax],al
  44990b:	add    BYTE PTR [eax],dl
  44990d:	or     BYTE PTR [eax],al
  44990f:	add    BYTE PTR [eax],dl
  449911:	or     BYTE PTR [eax],al
  449913:	add    BYTE PTR [eax],dl
  449915:	or     BYTE PTR [eax],al
  449917:	add    BYTE PTR [eax],dl
  449919:	or     BYTE PTR [eax],al
  44991b:	add    al,dl
  44991d:	or     eax,DWORD PTR [eax]
  44991f:	add    al,cl
  449921:	adc    eax,DWORD PTR [eax]
  449923:	add    bh,ah
  449925:	out    0x0,eax
  449927:	add    al,dh
  449929:	sldt   WORD PTR [eax]
  44992c:	clc    
  44992d:	pop    ds
  44992e:	add    BYTE PTR [eax],al
  449930:	add    BYTE PTR [eax],al
  449932:	add    BYTE PTR [eax],al
  449934:	adc    BYTE PTR [eax],al
  449936:	add    BYTE PTR es:[esi+0x0],al
  44993a:	imul   eax,DWORD PTR [eax],0x65006c
  449940:	add    BYTE PTR [eax],al
  449942:	add    BYTE PTR [eax],0x69
  449945:	add    BYTE PTR [ebp+0x0],al
  449948:	add    BYTE PTR es:[eax+0x0],bh
  44994c:	imul   eax,DWORD PTR [eax],0x74
  449952:	nop
  449953:	add    BYTE PTR [esi],ah
  449955:	add    BYTE PTR [eax+0x0],cl
  449958:	add    BYTE PTR gs:[eax+eax*1+0x70],ch
  44995d:	add    BYTE PTR [eax],al
  44995f:	add    BYTE PTR [eax+0x26006800],al
  449965:	add    BYTE PTR [ecx+0x0],al
  449968:	bound  eax,QWORD PTR [eax]
  44996a:	outs   dx,DWORD PTR ds:[esi]
  44996b:	add    BYTE PTR [ebp+0x0],dh
  44996e:	je     0x449970
  449970:	and    BYTE PTR [eax],al
  449972:	add    BYTE PTR cs:[esi],ch
  449975:	add    BYTE PTR [esi],ch
  449977:	add    BYTE PTR [eax],al
  449979:	add    BYTE PTR [eax+0x41],dl
  44997c:	add    DWORD PTR [eax],eax
  44997e:	(bad)  
  44997f:	inc    DWORD PTR [eax]
  449981:	add    BYTE PTR [eax],al
  449983:	add    BYTE PTR [eax],al
  449985:	add    BYTE PTR [eax],al
  449987:	add    al,cl
  449989:	add    al,cl
  44998b:	add    BYTE PTR [eax+eax*1],0x0
  44998f:	add    BYTE PTR [eax],al
  449991:	add    BYTE PTR [edx+0x3e00],ch
  449997:	add    BYTE PTR [eax],al
  449999:	add    BYTE PTR [ecx+0x0],al
  44999c:	bound  eax,QWORD PTR [eax]
  44999e:	outs   dx,DWORD PTR ds:[esi]
  44999f:	add    BYTE PTR [ebp+0x0],dh
  4499a2:	je     0x4499a4
  4499a4:	and    BYTE PTR [eax],al
  4499a6:	push   ebp
  4499a7:	add    BYTE PTR [eax+0x0],dh
  4499aa:	add    BYTE PTR fs:[ecx+0x0],ah
  4499ae:	je     0x4499b0
  4499b0:	add    BYTE PTR gs:[eax],al
  4499b3:	add    BYTE PTR [eax],cl
  4499b5:	add    BYTE PTR [eax],al
  4499b7:	add    BYTE PTR [eax],al
  4499b9:	add    DWORD PTR [ebp+0x0],ecx
  4499bc:	push   ebx
  4499bd:	add    BYTE PTR [eax],ah
  4499bf:	add    BYTE PTR [ebx+0x0],dl
  4499c2:	push   0x6c006500
  4499c7:	add    BYTE PTR [eax+eax*1+0x20],ch
  4499cb:	add    BYTE PTR [eax+eax*1+0x6c],al
  4499cf:	add    BYTE PTR [edi+0x0],ah
	...
  4499da:	add    BYTE PTR [eax],al
  4499dc:	add    eax,DWORD PTR [eax]
  4499de:	add    BYTE PTR [eax+0xe],dl
  4499e1:	add    BYTE PTR [esi],cl
  4499e3:	add    BYTE PTR ds:0xff001400,dl
  4499e9:	(bad)  
  4499ea:	(bad)  
  4499eb:	(bad)  
  4499ec:	(bad)  
  4499ed:	inc    DWORD PTR [edx-0x7f000100]
	...
  4499ff:	add    BYTE PTR [eax+0x2a500200],al
  449a05:	add    BYTE PTR [esi],cl
  449a07:	add    BYTE PTR [edx+0x0],dh
  449a0a:	or     BYTE PTR [eax],al
  449a0c:	(bad)  
  449a0d:	(bad)  
  449a0e:	(bad)  
  449a0f:	(bad)  
  449a10:	(bad)  
  449a11:	inc    DWORD PTR [edx+0x70005500]
  449a17:	add    BYTE PTR [eax+eax*1+0x61],ah
  449a1b:	add    BYTE PTR [eax+eax*1+0x65],dh
  449a1f:	add    BYTE PTR [eax+eax*1],ch
  449a22:	and    BYTE PTR [eax],al
  449a24:	push   esi
  449a25:	add    BYTE PTR [ebp+0x0],ah
  449a28:	jb     0x449a2a
  449a2a:	jae    0x449a2c
  449a2c:	imul   eax,DWORD PTR [eax],0x6e006f
  449a32:	and    BYTE PTR [eax],al
  449a34:	xor    DWORD PTR [eax],eax
  449a36:	add    BYTE PTR cs:[eax],dh
	...
  449a49:	add    BYTE PTR [edx],al
  449a4b:	push   eax
  449a4c:	sub    al,BYTE PTR [eax]
  449a4e:	sbb    al,BYTE PTR [eax]
  449a50:	jb     0x449a52
  449a52:	or     BYTE PTR [eax],al
  449a54:	(bad)  
  449a55:	(bad)  
  449a56:	(bad)  
  449a57:	(bad)  
  449a58:	(bad)  
  449a59:	inc    DWORD PTR [edx+0x6f004300]
  449a5f:	add    BYTE PTR [eax+0x0],dh
  449a62:	jns    0x449a64
  449a64:	jb     0x449a66
  449a66:	imul   eax,DWORD PTR [eax],0x680067
  449a6c:	je     0x449a6e
  449a6e:	and    BYTE PTR [eax],al
  449a70:	sub    BYTE PTR [eax],al
  449a72:	inc    ebx
  449a73:	add    BYTE PTR [ecx],ch
  449a75:	add    BYTE PTR [eax],ah
  449a77:	add    BYTE PTR [edx],dh
  449a79:	add    BYTE PTR [eax],dh
  449a7b:	add    BYTE PTR [ecx],dh
  449a7d:	add    BYTE PTR [ecx],dh
	...
  449a8b:	add    BYTE PTR [ecx],al
  449a8d:	add    BYTE PTR [ebx],al
  449a8f:	push   eax
  449a90:	jno    0x449a92
  449a92:	sub    DWORD PTR [eax],eax
  449a94:	xor    al,BYTE PTR [eax]
  449a96:	push   cs
  449a97:	add    BYTE PTR [ecx],al
  449a99:	add    BYTE PTR [eax],al
  449a9b:	add    bh,bh
  449a9d:	inc    DWORD PTR [eax+0x4b004f00]
	...
  449ab3:	add    BYTE PTR [eax],al
  449ab5:	add    BYTE PTR [esi],al
  449ab7:	add    BYTE PTR [ebp+0x0],dl
  449aba:	jo     0x449abc
  449abc:	add    BYTE PTR fs:[ecx+0x0],ah
  449ac0:	je     0x449ac2
  449ac2:	add    BYTE PTR gs:[eax],al
	...
  449acd:	add    BYTE PTR [esi],al
  449acf:	add    BYTE PTR [ebp+0x0],dl
  449ad2:	push   eax
  449ad3:	add    BYTE PTR [eax+eax*1+0x41],al
  449ad7:	add    BYTE PTR [eax+eax*1+0x45],dl
  449adb:	add    BYTE PTR [eax],al
  449add:	add    BYTE PTR [eax],al
  449adf:	add    BYTE PTR [eax],dl
  449ae1:	add    BYTE PTR [edi],bh
  449ae3:	add    BYTE PTR [eax+0x0],ch
  449ae6:	add    BYTE PTR [eax],al
  449ae8:	nop
  449ae9:	add    BYTE PTR [edi],ch
  449aeb:	add    BYTE PTR [eax+0x0],ch
  449aee:	add    BYTE PTR [eax],al
  449af0:	add    BYTE PTR [eax],al
  449af2:	add    DWORD PTR [eax],eax
  449af4:	add    eax,0x404000
  449af9:	add    BYTE PTR [ecx],al
  449afb:	add    BYTE PTR [eax],ah
  449afd:	add    BYTE PTR [eax],ch
  449aff:	inc    edx
  449b00:	add    BYTE PTR [eax],al
  449b02:	add    DWORD PTR [eax],eax
  449b04:	xor    BYTE PTR [eax],dh
  449b06:	add    BYTE PTR [eax],al
  449b08:	add    DWORD PTR [eax],eax
  449b0a:	and    BYTE PTR [eax],al
  449b0c:	test   al,0x25
  449b0e:	add    BYTE PTR [eax],al
  449b10:	add    al,BYTE PTR [eax]
  449b12:	and    BYTE PTR [eax],ah
  449b14:	add    BYTE PTR [eax],al
  449b16:	add    DWORD PTR [eax],eax
  449b18:	and    BYTE PTR [eax],al
  449b1a:	test   al,0x10
  449b1c:	add    BYTE PTR [eax],al
  449b1e:	add    eax,DWORD PTR [eax]
  449b20:	sbb    BYTE PTR [eax],bl
  449b22:	add    BYTE PTR [eax],al
  449b24:	add    DWORD PTR [eax],eax
  449b26:	and    BYTE PTR [eax],al
  449b28:	mov    BYTE PTR [ecx],cl
  449b2a:	add    BYTE PTR [eax],al
  449b2c:	add    al,0x0
  449b2e:	adc    BYTE PTR [eax],dl
  449b30:	add    BYTE PTR [eax],al
  449b32:	add    DWORD PTR [eax],eax
  449b34:	and    BYTE PTR [eax],al
  449b36:	push   0x5000004
  449b3b:	add    BYTE PTR [ecx+eiz*2],bh
  449b3e:	jae    0x449bb3
  449b40:	gs ins DWORD PTR es:[edi],dx
  449b42:	bound  ebp,QWORD PTR [ecx+edi*2+0x20]
  449b46:	js     0x449bb5
  449b48:	ins    BYTE PTR es:[edi],dx
  449b49:	outs   dx,BYTE PTR ds:[esi]
  449b4a:	jae    0x449b89
  449b4c:	and    dh,BYTE PTR [ebp+0x72]
  449b4f:	outs   dx,BYTE PTR ds:[esi]
  449b50:	cmp    dh,BYTE PTR [ebx+0x63]
  449b53:	push   0x73616d65
  449b58:	sub    eax,0x7263696d
  449b5d:	outs   dx,DWORD PTR ds:[esi]
  449b5e:	jae    0x449bcf
  449b60:	data16 je 0x449b90
  449b63:	arpl   WORD PTR [edi+0x6d],bp
  449b66:	cmp    ah,BYTE PTR [ecx+0x73]
  449b69:	ins    DWORD PTR es:[edi],dx
  449b6a:	cs jbe 0x449b9e
  449b6d:	and    ah,BYTE PTR [eax]
  449b6f:	ins    DWORD PTR es:[edi],dx
  449b70:	popa   
  449b71:	outs   dx,BYTE PTR ds:[esi]
  449b72:	imul   esp,DWORD PTR [esi+0x65],0x65567473
  449b79:	jb     0x449bee
  449b7b:	imul   ebp,DWORD PTR [edi+0x6e],0x2e31223d
  449b82:	xor    BYTE PTR [edx],ah
  449b84:	ds or  eax,0x3c20200a
  449b8a:	je     0x449bfe
  449b8c:	jne    0x449c01
  449b8e:	je     0x449bd9
  449b90:	outs   dx,BYTE PTR ds:[esi]
  449b91:	outs   dx,WORD PTR ds:[esi]
  449b93:	and    BYTE PTR [eax+0x6d],bh
  449b96:	ins    BYTE PTR es:[edi],dx
  449b97:	outs   dx,BYTE PTR ds:[esi]
  449b98:	jae    0x449bd7
  449b9a:	and    dh,BYTE PTR [ebp+0x72]
  449b9d:	outs   dx,BYTE PTR ds:[esi]
  449b9e:	cmp    dh,BYTE PTR [ebx+0x63]
  449ba1:	push   0x73616d65
  449ba6:	sub    eax,0x7263696d
  449bab:	outs   dx,DWORD PTR ds:[esi]
  449bac:	jae    0x449c1d
  449bae:	data16 je 0x449bde
  449bb1:	arpl   WORD PTR [edi+0x6d],bp
  449bb4:	cmp    ah,BYTE PTR [ecx+0x73]
  449bb7:	ins    DWORD PTR es:[edi],dx
  449bb8:	cs jbe 0x449bee
  449bbb:	and    bh,BYTE PTR [esi]
  449bbd:	or     eax,0x2020200a
  449bc2:	and    BYTE PTR [ebx+esi*2],bh
  449bc5:	arpl   WORD PTR gs:[ebp+0x72],si
  449bc9:	imul   esi,DWORD PTR [ecx+edi*2+0x3e],0x20200a0d
  449bd1:	and    BYTE PTR [eax],ah
  449bd3:	and    BYTE PTR [eax],ah
  449bd5:	cmp    al,0x72
  449bd7:	gs jno 0x449c4f
  449bda:	gs jae 0x449c51
  449bdd:	gs fs push eax
  449be0:	jb     0x449c4b
  449be2:	jbe    0x449c4d
  449be4:	ins    BYTE PTR es:[edi],dx
  449be5:	gs addr16 gs jae 0x449c28
  449bea:	or     eax,0x2020200a
  449bef:	and    BYTE PTR [eax],ah
  449bf1:	and    BYTE PTR [eax],ah
  449bf3:	and    BYTE PTR [edx+esi*2],bh
  449bf6:	gs jno 0x449c6e
  449bf9:	gs jae 0x449c70
  449bfc:	gs fs inc ebp
  449bff:	js     0x449c66
  449c01:	arpl   WORD PTR [ebp+0x74],si
  449c04:	imul   ebp,DWORD PTR [edi+0x6e],0x6576654c
  449c0b:	ins    BYTE PTR es:[edi],dx
  449c0c:	and    BYTE PTR [ebp+eiz*2+0x76],ch
  449c10:	gs ins BYTE PTR es:[edi],dx
  449c12:	cmp    eax,0x71657222
  449c17:	jne    0x449c82
  449c19:	jb     0x449c80
  449c1b:	inc    ecx
  449c1c:	fs ins DWORD PTR es:[edi],dx
  449c1e:	imul   ebp,DWORD PTR [esi+0x69],0x61727473
  449c25:	je     0x449c96
  449c27:	jb     0x449c4b
  449c29:	and    BYTE PTR [ebp+0x69],dh
  449c2c:	inc    ecx
  449c2d:	arpl   WORD PTR [ebx+0x65],sp
  449c30:	jae    0x449ca5
  449c32:	cmp    eax,0x6c616622
  449c37:	jae    0x449c9e
  449c39:	and    bh,BYTE PTR [esi]
  449c3b:	cmp    al,0x2f
  449c3d:	jb     0x449ca4
  449c3f:	jno    0x449cb6
  449c41:	gs jae 0x449cb8
  449c44:	gs fs inc ebp
  449c47:	js     0x449cae
  449c49:	arpl   WORD PTR [ebp+0x74],si
  449c4c:	imul   ebp,DWORD PTR [edi+0x6e],0x6576654c
  449c53:	ins    BYTE PTR es:[edi],dx
  449c54:	ds or  eax,0x2020200a
  449c5a:	and    BYTE PTR [eax],ah
  449c5c:	and    BYTE PTR [edi+ebp*1],bh
  449c5f:	jb     0x449cc6
  449c61:	jno    0x449cd8
  449c63:	gs jae 0x449cda
  449c66:	gs fs push eax
  449c69:	jb     0x449cd4
  449c6b:	jbe    0x449cd6
  449c6d:	ins    BYTE PTR es:[edi],dx
  449c6e:	gs addr16 gs jae 0x449cb1
  449c73:	or     eax,0x2020200a
  449c78:	and    BYTE PTR [edi+ebp*1],bh
  449c7b:	jae    0x449ce2
  449c7d:	arpl   WORD PTR [ebp+0x72],si
  449c80:	imul   esi,DWORD PTR [ecx+edi*2+0x3e],0x20200a0d
  449c88:	cmp    al,0x2f
  449c8a:	je     0x449cfe
  449c8c:	jne    0x449d01
  449c8e:	je     0x449cd9
  449c90:	outs   dx,BYTE PTR ds:[esi]
  449c91:	outs   dx,WORD PTR ds:[esi]
  449c93:	ds or  eax,0x3c20200a
  449c99:	fs gs jo 0x449d02
  449c9d:	outs   dx,BYTE PTR ds:[esi]
  449c9e:	fs outs dx,BYTE PTR gs:[esi]
  449ca1:	arpl   WORD PTR [ecx+0x3e],di
  449ca4:	or     eax,0x2020200a
  449ca9:	and    BYTE PTR [esp+eiz*2],bh
  449cac:	gs jo  0x449d14
  449caf:	outs   dx,BYTE PTR ds:[esi]
  449cb0:	fs outs dx,BYTE PTR gs:[esi]
  449cb3:	je     0x449cf6
  449cb5:	jae    0x449d2a
  449cb7:	gs ins DWORD PTR es:[edi],dx
  449cb9:	bound  ebp,QWORD PTR [ecx+edi*2+0x3e]
  449cbd:	or     eax,0x2020200a
  449cc2:	and    BYTE PTR [eax],ah
  449cc4:	and    BYTE PTR [ecx+eiz*2],bh
  449cc7:	jae    0x449d3c
  449cc9:	gs ins DWORD PTR es:[edi],dx
  449ccb:	bound  ebp,QWORD PTR [ecx+edi*2+0x49]
  449ccf:	fs outs dx,BYTE PTR gs:[esi]
  449cd2:	je     0x449d3d
  449cd4:	je     0x449d4f
  449cd6:	and    BYTE PTR [ecx+edi*2+0x70],dh
  449cda:	gs cmp eax,0x6e697722
  449ce0:	xor    esi,DWORD PTR [edx]
  449ce2:	and    ah,BYTE PTR [eax]
  449ce4:	outs   dx,BYTE PTR ds:[esi]
  449ce5:	popa   
  449ce6:	ins    DWORD PTR es:[edi],dx
  449ce7:	gs cmp eax,0x63694d22
  449ced:	jb     0x449d5e
  449cef:	jae    0x449d60
  449cf1:	data16 je 0x449d22
  449cf4:	push   esi
  449cf5:	inc    ebx
  449cf6:	cmp    DWORD PTR [eax],esi
  449cf8:	cs inc ebx
  449cfa:	push   edx
  449cfb:	push   esp
  449cfc:	and    ah,BYTE PTR [eax]
  449cfe:	jbe    0x449d65
  449d00:	jb     0x449d75
  449d02:	imul   ebp,DWORD PTR [edi+0x6e],0x2e39223d
  449d09:	xor    BYTE PTR [esi],ch
  449d0b:	xor    dh,BYTE PTR [ecx]
  449d0d:	xor    BYTE PTR [edx],dh
  449d0f:	xor    ch,BYTE PTR [esi]
  449d11:	cmp    BYTE PTR [edx],ah
  449d13:	and    BYTE PTR [eax+0x72],dh
  449d16:	outs   dx,DWORD PTR ds:[esi]
  449d17:	arpl   WORD PTR [ebp+0x73],sp
  449d1a:	jae    0x449d8b
  449d1c:	jb     0x449d5f
  449d1e:	jb     0x449d83
  449d20:	push   0x63657469
  449d25:	je     0x449d9c
  449d27:	jb     0x449d8e
  449d29:	cmp    eax,0x36387822
  449d2e:	and    ah,BYTE PTR [eax]
  449d30:	jo     0x449da7
  449d32:	bound  ebp,QWORD PTR [ecx+ebp*2+0x63]
  449d36:	dec    ebx
  449d37:	gs jns 0x449d8e
  449d3a:	outs   dx,DWORD PTR ds:[esi]
  449d3b:	imul   esp,DWORD PTR [ebp+0x6e],0x3d
  449d3f:	and    dh,BYTE PTR [ecx]
  449d41:	data16 arpl WORD PTR [eax],di
  449d44:	bound  esi,QWORD PTR [ebx]
  449d46:	bound  edi,QWORD PTR [ecx]
  449d48:	popa   
  449d49:	xor    DWORD PTR [ebp+0x31],esp
  449d4c:	cmp    BYTE PTR [ebp+0x33],ah
  449d4f:	bound  esp,QWORD PTR [edx]
  449d51:	ds cmp al,0x2f
  449d54:	popa   
  449d55:	jae    0x449dca
  449d57:	gs ins DWORD PTR es:[edi],dx
  449d59:	bound  ebp,QWORD PTR [ecx+edi*2+0x49]
  449d5d:	fs outs dx,BYTE PTR gs:[esi]
  449d60:	je     0x449dcb
  449d62:	je     0x449ddd
  449d64:	ds or  eax,0x2020200a
  449d6a:	and    BYTE PTR [edi+ebp*1],bh
  449d6d:	fs gs jo 0x449dd6
  449d71:	outs   dx,BYTE PTR ds:[esi]
  449d72:	fs outs dx,BYTE PTR gs:[esi]
  449d75:	je     0x449db8
  449d77:	jae    0x449dec
  449d79:	gs ins DWORD PTR es:[edi],dx
  449d7b:	bound  ebp,QWORD PTR [ecx+edi*2+0x3e]
  449d7f:	or     eax,0x3c20200a
  449d84:	das    
  449d85:	fs gs jo 0x449dee
  449d89:	outs   dx,BYTE PTR ds:[esi]
  449d8a:	fs outs dx,BYTE PTR gs:[esi]
  449d8d:	arpl   WORD PTR [ecx+0x3e],di
  449d90:	or     eax,0x612f3c0a
  449d95:	jae    0x449e0a
  449d97:	gs ins DWORD PTR es:[edi],dx
  449d99:	bound  ebp,QWORD PTR [ecx+edi*2+0x3e]
  449d9d:	push   eax
  449d9e:	inc    ecx
  449d9f:	inc    esp

Disassembly of section .reloc:

0044a000 <.reloc>:
  44a000:	add    BYTE PTR [eax],dl
  44a002:	add    BYTE PTR [eax],al
  44a004:	fadd   DWORD PTR [eax]
  44a006:	add    BYTE PTR [eax],al
  44a008:	or     eax,0x2f302730
  44a00d:	xor    BYTE PTR ds:0x76306930,bh
  44a013:	xor    BYTE PTR [ebp-0x63cf69d0],cl
  44a019:	xor    BYTE PTR [edi-0x46cf4ed0],ah
  44a01f:	xor    bl,al
  44a021:	xor    bl,cl
  44a023:	xor    al,dl
  44a025:	xor    cl,ch
  44a027:	xor    BYTE PTR [edi],bl
  44a029:	xor    DWORD PTR ds:0x5f315131,esp
  44a02f:	xor    DWORD PTR [ebp-0x4cce74cf],eax
  44a035:	xor    edx,eax
  44a037:	xor    ecx,edx
  44a039:	xor    DWORD PTR [ecx],ecx
  44a03b:	xor    bl,BYTE PTR ds:0x35322c32
  44a041:	xor    dl,BYTE PTR [edi+0x32]
  44a044:	jno    0x44a078
  44a046:	xchg   edx,eax
  44a047:	xor    ah,BYTE PTR [eax-0x1acd54ce]
  44a04d:	xor    dh,dh
  44a04f:	xor    ah,BYTE PTR [ebx+esi*1]
  44a052:	jnp    0x44a087
  44a054:	xor    DWORD PTR [ebx],0x33d333a6
  44a05a:	loop   0x44a08f
  44a05c:	hlt    
  44a05d:	xor    ebx,DWORD PTR [esi]
  44a05f:	xor    al,0x49
  44a061:	xor    al,0x53
  44a063:	xor    al,0x73
  44a065:	xor    al,0x82
  44a067:	xor    al,0x8e
  44a069:	xor    al,0xa1
  44a06b:	xor    al,0xab
  44a06d:	xor    al,0xbd
  44a06f:	xor    al,0xc2
  44a071:	xor    al,0xd1
  44a073:	xor    al,0xd6
  44a075:	xor    al,0xe0
  44a077:	xor    al,0xfd
  44a079:	xor    al,0xf
  44a07b:	xor    eax,0x35523535
  44a080:	push   edi
  44a081:	xor    eax,0x357b355c
  44a086:	test   DWORD PTR ds:0x35c835bb,esi
  44a08c:	inc    esi
  44a08d:	ss mov ebp,0x36382337
  44a093:	cmp    ch,al
  44a095:	cmp    dl,dl
  44a097:	cmp    bh,ah
  44a099:	cmp    BYTE PTR [ecx+edi*1+0x72],al
  44a09d:	cmp    edx,eax
  44a09f:	cmp    ebp,edi
  44a0a1:	cmp    DWORD PTR [esi+0x3a],ecx
  44a0a4:	outs   dx,DWORD PTR ds:[esi]
  44a0a5:	cmp    al,BYTE PTR [esi-0x4ec55fc6]
  44a0ab:	cmp    dl,BYTE PTR [ebx]
  44a0ad:	cmp    esp,DWORD PTR [eax]
  44a0af:	cmp    ebx,DWORD PTR [esi+0x1e3bcc3b]
  44a0b5:	cmp    al,0x74
  44a0b7:	cmp    al,0xf1
  44a0b9:	cmp    al,0xa
  44a0bb:	cmp    eax,0x3d423d28
  44a0c0:	cmp    ax,0x3d84
  44a0c4:	scas   eax,DWORD PTR es:[edi]
  44a0c5:	cmp    eax,0x3e033de5
  44a0ca:	push   eax
  44a0cb:	ds (bad) 
  44a0cd:	ds call 0xbe843411
  44a0d3:	aas    
  44a0d4:	cld    
  44a0d5:	aas    
  44a0d6:	add    BYTE PTR [eax],al
  44a0d8:	add    BYTE PTR [eax],ah
  44a0da:	add    BYTE PTR [eax],al
  44a0dc:	or     al,0x1
  44a0de:	add    BYTE PTR [eax],al
  44a0e0:	sub    BYTE PTR [eax],dh
  44a0e2:	arpl   WORD PTR [eax],si
  44a0e4:	jb     0x44a116
  44a0e6:	test   BYTE PTR [eax],dh
  44a0e8:	mov    ?,WORD PTR [eax]
  44a0ea:	test   eax,0xfb30b630
  44a0ef:	xor    BYTE PTR [eax],al
  44a0f1:	xor    DWORD PTR ds:0xe3312331,ecx
  44a0f7:	xor    DWORD PTR [edx],eax
  44a0f9:	xor    ch,BYTE PTR [eax]
  44a0fb:	xor    cl,BYTE PTR [ecx+0x32]
  44a0fe:	jne    0x44a132
  44a100:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44a101:	xor    al,dh
  44a103:	xor    ah,dh
  44a105:	xor    bh,al
  44a107:	xor    bl,BYTE PTR [esi]
  44a109:	xor    esi,DWORD PTR [ecx]
  44a10b:	xor    eax,DWORD PTR [ebp-0x2ccb57cc]
  44a111:	xor    al,0x6
  44a113:	xor    eax,0x35953568
  44a118:	and    DWORD PTR [esi],esi
  44a11a:	pop    eax
  44a11b:	ss jae 0x44a154
  44a11e:	xor    BYTE PTR [esi],0x8f
  44a121:	ss mov dl,0x36
  44a124:	div    BYTE PTR [esi]
  44a126:	or     BYTE PTR [edi],dh
  44a128:	ss aaa 
  44a12a:	dec    eax
  44a12b:	aaa    
  44a12c:	ja     0x44a165
  44a12e:	xor    DWORD PTR [edi],0x37c6378f
  44a134:	add    bh,BYTE PTR [eax]
  44a136:	inc    ebp
  44a137:	cmp    BYTE PTR [edi+0x38],bh
  44a13a:	cwde   
  44a13b:	cmp    BYTE PTR [esi-0x40c758c8],bl
  44a141:	cmp    bl,dl
  44a143:	cmp    dl,ah
  44a145:	cmp    BYTE PTR [eax],al
  44a147:	cmp    DWORD PTR ds:0x43391b39,edx
  44a14d:	cmp    DWORD PTR [ecx+0x39],edx
  44a150:	push   0x39
  44a152:	cmp    BYTE PTR [ecx],0x86
  44a155:	cmp    DWORD PTR [ebx-0x25c63ec7],esi
  44a15b:	cmp    DWORD PTR [ebx+0x3a],eax
  44a15e:	push   eax
  44a15f:	cmp    ah,BYTE PTR [edi+0x3a]
  44a162:	ja     0x44a19e
  44a164:	(bad)  
  44a165:	cmp    bh,BYTE PTR [ebp-0x7c50dc6]
  44a16b:	cmp    al,BYTE PTR ds:0x3a3b0b3b
  44a171:	cmp    eax,DWORD PTR [eax+0x3b]
  44a174:	push   ebx
  44a175:	cmp    esp,DWORD PTR [ebx+0x3b]
  44a178:	xor    edi,DWORD PTR [ecx+eax*2]
  44a17b:	cmp    al,0x67
  44a17d:	cmp    al,0x75
  44a17f:	cmp    al,0x7b
  44a181:	cmp    al,0x82
  44a183:	cmp    al,0xdd
  44a185:	cmp    al,0xe3
  44a187:	cmp    al,0xf0
  44a189:	cmp    al,0x6
  44a18b:	cmp    eax,0x3d263d0d
  44a190:	sub    al,0x3d
  44a192:	xor    edi,DWORD PTR ds:0x3d593d3a
  44a198:	bound  edi,QWORD PTR ds:0x3d793d72
  44a19e:	cmp    BYTE PTR ds:0x3da73d9f,0xb2
  44a1a5:	cmp    eax,0x3de23dd3
  44a1aa:	pop    ds
  44a1ab:	ds and eax,0x323e2c3e
  44a1b1:	ds addr16 ds je 0x44a1f4
  44a1b6:	jl     0x44a1f6
  44a1b8:	test   BYTE PTR [esi],bh
  44a1ba:	xchg   esi,eax
  44a1bb:	ds pushf 
  44a1bd:	mov    ds:0xcb3eaa3e,eax
  44a1c3:	sar    DWORD PTR ds:[esi],1
  44a1c6:	adc    BYTE PTR [edi],bh
  44a1c8:	push   ss
  44a1c9:	aas    
  44a1ca:	sbb    eax,0x353f243f
  44a1cf:	aas    
  44a1d0:	cmp    al,0x3f
  44a1d2:	inc    ebx
  44a1d3:	aas    
  44a1d4:	fs aas 
  44a1d6:	push   0x3f
  44a1d8:	mov    ds:0xd03fb23f,eax
  44a1dd:	aas    
  44a1de:	(bad)  
  44a1df:	aas    
  44a1e0:	loop   0x44a221
  44a1e2:	icebp  
  44a1e3:	aas    
  44a1e4:	add    BYTE PTR [eax],dh
  44a1e6:	add    BYTE PTR [eax],al
  44a1e8:	ins    BYTE PTR es:[edi],dx
  44a1e9:	add    DWORD PTR [eax],eax
  44a1eb:	add    BYTE PTR [edx],bl
  44a1ed:	xor    BYTE PTR [ecx],ah
  44a1ef:	xor    BYTE PTR [ebx+0x30],cl
  44a1f2:	push   ecx
  44a1f3:	xor    BYTE PTR [esi+0x30],bl
  44a1f6:	jnp    0x44a228
  44a1f8:	xor    DWORD PTR [eax],0x310a30ca
  44a1fe:	and    al,0x31
  44a200:	xor    esi,DWORD PTR [ecx]
  44a202:	inc    esp
  44a203:	xor    DWORD PTR [edx+0x31],esi
  44a206:	test   DWORD PTR [ecx],esi
  44a208:	mov    esi,DWORD PTR [ecx]
  44a20a:	mov    cl,0x31
  44a20c:	leave  
  44a20d:	xor    edx,ebx
  44a20f:	xor    ebp,ebp
  44a211:	xor    DWORD PTR [edi],eax
  44a213:	xor    dl,BYTE PTR [ebx]
  44a215:	xor    ch,BYTE PTR ds:0x49323d32
  44a21b:	xor    ah,BYTE PTR [edi+0x32]
  44a21e:	ja     0x44a252
  44a220:	xor    DWORD PTR [edx],0xffffff99
  44a223:	xor    bl,BYTE PTR [edi-0x35cd5bce]
  44a229:	xor    ah,bl
  44a22b:	xor    dh,al
  44a22d:	xor    al,BYTE PTR [edi]
  44a22f:	xor    edi,DWORD PTR [ebx+esi*1]
  44a232:	xor    bp,WORD PTR [ebx+0x33]
  44a236:	jge    0x44a26b
  44a238:	popf   
  44a239:	xor    eax,DWORD PTR [ebx]
  44a23b:	xor    al,0x11
  44a23d:	xor    al,0x32
  44a23f:	xor    al,0x51
  44a241:	xor    al,0x58
  44a243:	xor    al,0x5d
  44a245:	xor    al,0x67
  44a247:	xor    al,0x7b
  44a249:	xor    al,0x91
  44a24b:	xor    al,0xb3
  44a24d:	xor    al,0xc1
  44a24f:	xor    al,0xe2
  44a251:	xor    al,0x1
  44a253:	xor    eax,0x350d3508
  44a258:	pop    ss
  44a259:	xor    eax,0x3541352b
  44a25e:	arpl   WORD PTR ds:0x35923571,si
  44a264:	mov    cl,0x35
  44a266:	mov    eax,0xc735bd35
  44a26b:	xor    eax,0x35f835e0
  44a270:	and    esi,DWORD PTR [esi]
  44a272:	xor    BYTE PTR [esi],dh
  44a274:	inc    ebp
  44a275:	ss push ebx
  44a277:	ss pop ebp
  44a279:	ss jo  0x44a2b2
  44a27c:	jbe    0x44a2b4
  44a27e:	jge    0x44a2b6
  44a280:	test   DWORD PTR [esi],esi
  44a282:	mov    esi,DWORD PTR [esi]
  44a284:	xchg   esp,eax
  44a285:	mov    ss:0xd236c336,al
  44a28b:	fnsave ss:[esi]
  44a28e:	lock add DWORD PTR ss:[edi],esi
  44a292:	push   es
  44a293:	aaa    
  44a294:	getsec 
  44a296:	push   ds
  44a297:	aaa    
  44a298:	xor    DWORD PTR [edi],esi
  44a29a:	inc    eax
  44a29b:	aaa    
  44a29c:	inc    edi
  44a29d:	aaa    
  44a29e:	dec    esp
  44a29f:	aaa    
  44a2a0:	push   esi
  44a2a1:	aaa    
  44a2a2:	jg     0x44a2db
  44a2a4:	test   BYTE PTR [edi],dh
  44a2a6:	xchg   ebx,eax
  44a2a7:	aaa    
  44a2a8:	cwde   
  44a2a9:	aaa    
  44a2aa:	sahf   
  44a2ab:	aaa    
  44a2ac:	mov    ds:0xae37a937,eax
  44a2b1:	aaa    
  44a2b2:	shl    BYTE PTR [edi],0xc5
  44a2b5:	aaa    
  44a2b6:	into   
  44a2b7:	aaa    
  44a2b8:	fnsave [edi]
  44a2ba:	lock aaa 
  44a2bc:	push   DWORD PTR [edi]
  44a2be:	push   es
  44a2bf:	cmp    BYTE PTR [ebx],cl
  44a2c1:	cmp    BYTE PTR ds:0x43383e38,dl
  44a2c7:	cmp    BYTE PTR [edx-0x45c756c8],al
  44a2cd:	cmp    BYTE PTR [ecx-0xcc667c7],cl
  44a2d3:	cmp    DWORD PTR [edx],eax
  44a2d5:	cmp    dl,BYTE PTR [esi-0x5cc559c6]
  44a2db:	cmp    esi,DWORD PTR [edi+0x103bf23b]
  44a2e1:	cmp    al,0x16
  44a2e3:	cmp    al,0x1d
  44a2e5:	cmp    al,0x24
  44a2e7:	cmp    al,0x33
  44a2e9:	cmp    al,0x42
  44a2eb:	cmp    al,0x65
  44a2ed:	cmp    al,0x7f
  44a2ef:	cmp    al,0xa8
  44a2f1:	cmp    al,0xaf
  44a2f3:	cmp    al,0xdf
  44a2f5:	cmp    al,0xf6
  44a2f7:	cmp    al,0xfc
  44a2f9:	cmp    al,0x3
  44a2fb:	cmp    eax,0x3d2c3d0a
  44a300:	xor    bh,BYTE PTR ds:0x3d653d3a
  44a306:	ins    BYTE PTR es:[edi],dx
  44a307:	cmp    eax,0x3d953d73
  44a30c:	fwait
  44a30d:	cmp    eax,0x3dc23da3
  44a312:	leave  
  44a313:	cmp    eax,0x3df23dd0
  44a318:	clc    
  44a319:	cmp    eax,0x3e163e00
  44a31e:	sbb    al,0x3e
  44a320:	and    edi,DWORD PTR [esi]
  44a322:	sub    bh,BYTE PTR [esi]
  44a324:	dec    esp
  44a325:	ds push edx
  44a327:	ds pop ebx
  44a329:	arpl   WORD PTR ds:[esi],di
  44a32c:	jb     0x44a36c
  44a32e:	scas   eax,DWORD PTR es:[edi]
  44a32f:	ds mov ch,0x3e
  44a332:	mov    esp,0xf73ec23e
  44a337:	ds add al,0x3f
  44a33a:	or     al,0x3f
  44a33c:	adc    al,0x3f
  44a33e:	xor    edi,DWORD PTR [edi]
  44a340:	dec    ecx
  44a341:	aas    
  44a342:	push   eax
  44a343:	aas    
  44a344:	cmp    DWORD PTR [edi],0xffffff91
  44a347:	aas    
  44a348:	mov    bh,0x3f
  44a34a:	lds    edi,FWORD PTR [edi]
  44a34c:	retf   
  44a34d:	aas    
  44a34e:	sar    BYTE PTR [edi],cl
  44a350:	add    BYTE PTR [eax+0x0],al
  44a353:	add    BYTE PTR [ecx+eax*1],ah
  44a356:	add    BYTE PTR [eax],al
  44a358:	xor    eax,0x43303b30
  44a35d:	xor    BYTE PTR [ebx+0x30],dl
  44a360:	arpl   WORD PTR [eax],si
  44a362:	jns    0x44a394
  44a364:	xor    DWORD PTR [eax],0xffffffa6
  44a367:	xor    BYTE PTR [eax+esi*1+0x31aa30f4],ch
  44a36e:	loope  0x44a3a1
  44a370:	or     BYTE PTR [edx],dh
  44a372:	rdmsr  
  44a374:	and    esi,DWORD PTR [edx]
  44a376:	xor    BYTE PTR [edx],dh
  44a378:	push   esi
  44a379:	xor    bh,BYTE PTR [edx+0x32]
  44a37c:	ret    
  44a37d:	xor    dl,bl
  44a37f:	xor    ah,al
  44a381:	xor    bh,bh
  44a383:	xor    cl,BYTE PTR [ebx]
  44a385:	xor    ebp,DWORD PTR [edx]
  44a387:	xor    edx,DWORD PTR [ebx+0x33]
  44a38a:	popa   
  44a38b:	xor    edi,DWORD PTR [edx+0x33]
  44a38e:	nop
  44a38f:	xor    edx,DWORD PTR [esi-0x3dcc4ccd]
  44a395:	xor    esp,eax
  44a397:	xor    esi,ebp
  44a399:	xor    edi,ebx
  44a39b:	xor    esp,DWORD PTR [esi]
  44a39d:	xor    al,0x38
  44a39f:	xor    al,0xd3
  44a3a1:	xor    al,0xfa
  44a3a3:	xor    al,0x27
  44a3a5:	xor    eax,0x35413534
  44a3aa:	pop    esi
  44a3ab:	xor    eax,0x35c3359e
  44a3b0:	iret   
  44a3b1:	xor    eax,0x35f335e7
  44a3b6:	push   DWORD PTR ds:0x361f3617
  44a3bc:	and    al,0x36
  44a3be:	xor    dh,BYTE PTR [esi]
  44a3c0:	cmp    DWORD PTR [esi],esi
  44a3c2:	ds ss inc ebx
  44a3c5:	ss dec eax
  44a3c7:	ss dec ebp
  44a3c9:	ss push ebx
  44a3cb:	ss push edi
  44a3cd:	ss fs mov DWORD PTR ss:[esi],esi
  44a3d2:	fwait
  44a3d3:	lods   al,BYTE PTR ss:[esi]
  44a3d5:	or     dh,BYTE PTR ss:[edi]
  44a3d8:	popa   
  44a3d9:	aaa    
  44a3da:	ins    BYTE PTR es:[edi],dx
  44a3db:	aaa    
  44a3dc:	je     0x44a415
  44a3de:	jnp    0x44a417
  44a3e0:	xchg   BYTE PTR [edi],dh
  44a3e2:	mov    ?,WORD PTR [edi]
  44a3e4:	mov    eax,ds:0x4d381337
  44a3e9:	cmp    BYTE PTR [edx+0x38],ah
  44a3ec:	scas   eax,DWORD PTR es:[edi]
  44a3ed:	cmp    ah,al
  44a3ef:	cmp    BYTE PTR [edx],ah
  44a3f1:	cmp    DWORD PTR [edi+0x39],ecx
  44a3f4:	push   esi
  44a3f5:	cmp    DWORD PTR [esi+0x39],esp
  44a3f8:	cmp    DWORD PTR [ecx],0xffffff95
  44a3fb:	cmp    DWORD PTR [ebp-0x1c60ec7],esp
  44a401:	cmp    DWORD PTR [edx+edi*1],ebp
  44a404:	xor    DWORD PTR [edx],edi
  44a406:	cmp    DWORD PTR [edx],edi
  44a408:	dec    eax
  44a409:	cmp    cl,BYTE PTR [ecx-0x4dc55cc6]
  44a40f:	cmp    al,cl
  44a411:	cmp    ah,ch
  44a413:	cmp    ch,bh
  44a415:	cmp    bh,dl
  44a417:	cmp    al,BYTE PTR [eax]
  44a419:	cmp    esp,DWORD PTR [eax]
  44a41b:	cmp    esp,DWORD PTR [edi]
  44a41d:	cmp    esp,DWORD PTR [edi+0x3b]
  44a420:	mov    bh,BYTE PTR [ebx]
  44a422:	test   eax,0xbc3bb03b
  44a427:	cmp    ecx,edx
  44a429:	cmp    ebx,ebx
  44a42b:	cmp    ecx,DWORD PTR [ecx]
  44a42d:	cmp    al,0x18
  44a42f:	cmp    al,0x26
  44a431:	cmp    al,0x44
  44a433:	cmp    al,0x61
  44a435:	cmp    al,0x68
  44a437:	cmp    al,0x80
  44a439:	cmp    al,0x87
  44a43b:	cmp    al,0x9a
  44a43d:	cmp    al,0xa8
  44a43f:	cmp    al,0xf8
  44a441:	cmp    al,0x7
  44a443:	cmp    eax,0x3d303d13
  44a448:	aaa    
  44a449:	cmp    eax,0x3da33d6d
  44a44e:	mov    dh,0x3d
  44a450:	loop   0x44a48f
  44a452:	repnz cmp eax,0x3e543e42
  44a458:	jl     0x44a498
  44a45a:	mov    edi,DWORD PTR [esi]
  44a45c:	call   0xfd3e:0xee3ea73e
  44a463:	or     bh,BYTE PTR ds:[edi]
  44a466:	xor    edi,DWORD PTR [edi]
  44a468:	inc    esp
  44a469:	aas    
  44a46a:	lahf   
  44a46b:	aas    
  44a46c:	mov    ah,0x3f
  44a46e:	mov    ecx,0x3fc13f
  44a473:	add    BYTE PTR [eax],al
  44a475:	push   eax
  44a476:	add    BYTE PTR [eax],al
  44a478:	xor    al,0x1
  44a47a:	add    BYTE PTR [eax],al
  44a47c:	push   esi
  44a47d:	xor    BYTE PTR [edx+0x30],ch
  44a480:	jl     0x44a4b2
  44a482:	mov    WORD PTR [eax],?
  44a484:	mov    eax,ds:0xe430a630
  44a489:	xor    cl,bh
  44a48b:	xor    dh,bh
  44a48d:	xor    BYTE PTR [ebx],ah
  44a48f:	xor    DWORD PTR [eax],edi
  44a491:	xor    DWORD PTR ds:0x73314531,edi
  44a497:	xor    DWORD PTR [ecx-0xece1ccf],ecx
  44a49d:	xor    esi,esi
  44a49f:	xor    DWORD PTR [ebx],ecx
  44a4a1:	xor    bl,BYTE PTR [esi]
  44a4a3:	xor    al,BYTE PTR [edi+0x32]
  44a4a6:	js     0x44a4da
  44a4a8:	pushf  
  44a4a9:	xor    cl,ch
  44a4ab:	xor    bl,al
  44a4ad:	xor    ch,ah
  44a4af:	xor    bh,BYTE PTR [eax]
  44a4b1:	xor    ecx,DWORD PTR [ebx+esi*1+0x61]
  44a4b5:	xor    esi,DWORD PTR [ebx+0x33]
  44a4b8:	mov    BYTE PTR [ebx],dh
  44a4ba:	popf   
  44a4bb:	xor    esi,DWORD PTR [edx-0x23cc38cd]
  44a4c1:	xor    ebp,esi
  44a4c3:	xor    ebx,DWORD PTR [ebp+0x34]
  44a4c6:	addr16 xor al,0x6c
  44a4c9:	xor    al,0x81
  44a4cb:	xor    al,0x94
  44a4cd:	xor    al,0xbd
  44a4cf:	xor    al,0xee
  44a4d1:	xor    al,0xf
  44a4d3:	xor    eax,0x354b3540
  44a4d8:	popa   
  44a4d9:	xor    eax,0x35c135ac
  44a4de:	(bad)  
  44a4df:	xor    eax,0x35ff35ea
  44a4e4:	adc    al,0x36
  44a4e6:	es cmp esi,DWORD PTR ss:[esi]
  44a4ea:	push   eax
  44a4eb:	bound  esi,QWORD PTR ss:[esi]
  44a4ee:	jo     0x44a526
  44a4f0:	jp     0x44a528
  44a4f2:	xchg   ebp,eax
  44a4f3:	ss mov ch,0x36
  44a4f6:	jmp    0x44a52e
  44a4f8:	add    al,0x37
  44a4fa:	sbb    BYTE PTR [edi],dh
  44a4fc:	sub    BYTE PTR [edi],dh
  44a4fe:	cmp    eax,0x79375237
  44a503:	aaa    
  44a504:	mov    esi,DWORD PTR [edi]
  44a506:	pushf  
  44a507:	aaa    
  44a508:	les    esi,FWORD PTR [edi]
  44a50a:	into   
  44a50b:	aaa    
  44a50c:	shl    DWORD PTR [edi],cl
  44a50e:	in     al,0x37
  44a510:	cld    
  44a511:	aaa    
  44a512:	sbb    DWORD PTR [eax],edi
  44a514:	aas    
  44a515:	cmp    BYTE PTR [ecx+0x38],dl
  44a518:	cmp    BYTE PTR gs:[edx+0x38],ch
  44a51c:	je     0x44a556
  44a51e:	jns    0x44a558
  44a520:	mov    ?,WORD PTR [eax]
  44a522:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44a523:	cmp    bl,al
  44a525:	cmp    dl,ch
  44a527:	cmp    ah,bh
  44a529:	cmp    BYTE PTR ds:0x1c391239,cl
  44a52f:	cmp    DWORD PTR [ecx],esp
  44a531:	cmp    DWORD PTR [esi],esi
  44a533:	cmp    DWORD PTR [esi+0x39],ecx
  44a536:	imul   edi,DWORD PTR [ecx],0xffffff92
  44a539:	cmp    DWORD PTR [ecx+edi*1+0x39ba39b5],esp
  44a540:	les    edi,FWORD PTR [ecx]
  44a542:	leave  
  44a543:	cmp    esi,ebx
  44a545:	cmp    esi,esi
  44a547:	cmp    DWORD PTR [ebx],edx
  44a549:	cmp    bh,BYTE PTR [edx]
  44a54b:	cmp    cl,BYTE PTR [edx+edi*1+0x5d]
  44a54f:	cmp    ah,BYTE PTR [edx+0x3a]
  44a552:	ins    BYTE PTR es:[edi],dx
  44a553:	cmp    dh,BYTE PTR [ecx+0x3a]
  44a556:	xchg   BYTE PTR [edx],bh
  44a558:	sahf   
  44a559:	cmp    bh,BYTE PTR [ebx-0xbc51dc6]
  44a55f:	cmp    al,BYTE PTR ds:0x143b0a3b
  44a565:	cmp    ebx,DWORD PTR [ecx]
  44a567:	cmp    ebp,DWORD PTR [esi]
  44a569:	cmp    eax,DWORD PTR [esi+0x3b]
  44a56c:	arpl   WORD PTR [ebx],di
  44a56e:	mov    bh,BYTE PTR [ebx]
  44a570:	pushf  
  44a571:	cmp    ebp,DWORD PTR [ebp-0x43c44dc5]
  44a577:	cmp    eax,DWORD PTR ds:0x7a3c0e3c
  44a57d:	cmp    al,0x84
  44a57f:	cmp    al,0xcd
  44a581:	cmp    al,0xd6
  44a583:	cmp    al,0x3f
  44a585:	cmp    eax,0x3d923d49
  44a58a:	fwait
  44a58b:	cmp    eax,0x3e093dff
  44a590:	dec    ebp
  44a591:	bound  edi,QWORD PTR ds:[esi]
  44a594:	cdq    
  44a595:	les    edi,FWORD PTR ds:[esi]
  44a598:	fistp  QWORD PTR [esi]
  44a59a:	adc    DWORD PTR [edi],edi
  44a59c:	push   ss
  44a59d:	aas    
  44a59e:	and    BYTE PTR [edi],bh
  44a5a0:	fs aas 
  44a5a2:	jns    0x44a5e3
  44a5a4:	lea    edi,[edi]
  44a5a6:	add    BYTE PTR [eax],al
  44a5a8:	add    BYTE PTR [eax+0x0],ah
  44a5ab:	add    BYTE PTR [eax],dh
  44a5ad:	add    DWORD PTR [eax],eax
  44a5af:	add    BYTE PTR ds:0x69302a30,cl
  44a5b5:	xor    BYTE PTR [ebx+0x30],bh
  44a5b8:	mov    esi,DWORD PTR [eax]
  44a5ba:	mov    bl,0x30
  44a5bc:	ret    0xd830
  44a5bf:	xor    al,ch
  44a5c1:	xor    BYTE PTR [eax],dl
  44a5c3:	xor    DWORD PTR ds:0x3d313031,ebx
  44a5c9:	xor    DWORD PTR [ecx+0x31],edx
  44a5cc:	jge    0x44a5ff
  44a5ce:	xchg   edx,eax
  44a5cf:	xor    DWORD PTR [edx-0x4bce58cf],esp
  44a5d5:	xor    ebx,edx
  44a5d7:	xor    ebx,esp
  44a5d9:	xor    DWORD PTR [edi+0x32],ebp
  44a5dc:	jle    0x44a610
  44a5de:	xchg   ebx,eax
  44a5df:	xor    ch,BYTE PTR [eax+0x332c032]
  44a5e5:	xor    edx,DWORD PTR [edx]
  44a5e7:	xor    esp,DWORD PTR [eax]
  44a5e9:	xor    esi,DWORD PTR [edi]
  44a5eb:	xor    eax,DWORD PTR [ecx+0x33]
  44a5ee:	pop    esp
  44a5ef:	xor    edx,DWORD PTR [ebp-0x4bcc50cd]
  44a5f5:	xor    eax,esi
  44a5f7:	xor    ebp,edi
  44a5f9:	xor    edi,edi
  44a5fb:	xor    ecx,DWORD PTR [esi]
  44a5fd:	xor    al,0x1f
  44a5ff:	xor    al,0x30
  44a601:	xor    al,0x53
  44a603:	xor    al,0x93
  44a605:	xor    al,0xc8
  44a607:	xor    al,0xe0
  44a609:	xor    al,0x3
  44a60b:	xor    eax,0x35283514
  44a610:	ss xor eax,0x354d353b
  44a616:	bound  esi,QWORD PTR ds:0x35a0357f
  44a61c:	scas   eax,DWORD PTR es:[edi]
  44a61d:	xor    eax,0x35e235c1
  44a622:	icebp  
  44a623:	xor    eax,0x36223613
  44a628:	xor    DWORD PTR [esi],esi
  44a62a:	pop    edx
  44a62b:	ss addr16 ss sahf 
  44a62f:	ss iret 
  44a631:	ss aam 0x36
  44a634:	fidiv  WORD PTR [esi]
  44a636:	add    DWORD PTR [edi],esi
  44a638:	das    
  44a639:	aaa    
  44a63a:	dec    esp
  44a63b:	aaa    
  44a63c:	pop    ebx
  44a63d:	aaa    
  44a63e:	ins    BYTE PTR es:[edi],dx
  44a63f:	aaa    
  44a640:	xchg   esi,eax
  44a641:	aaa    
  44a642:	ret    
  44a643:	aaa    
  44a644:	aad    0x37
  44a646:	out    0x37,al
  44a648:	add    al,0x38
  44a64a:	adc    DWORD PTR [eax],edi
  44a64c:	sub    al,0x38
  44a64e:	push   0x90388b38
  44a653:	cmp    BYTE PTR [edx-0x24c734c8],ah
  44a659:	cmp    al,ah
  44a65b:	cmp    dl,ch
  44a65d:	cmp    bh,ch
  44a65f:	cmp    BYTE PTR [ecx],al
  44a661:	cmp    DWORD PTR [ecx],ebx
  44a663:	cmp    DWORD PTR [esi],esi
  44a665:	cmp    DWORD PTR [ebp+0x39],ebx
  44a668:	outs   dx,DWORD PTR ds:[esi]
  44a669:	cmp    DWORD PTR [ecx-0x6fc679c7],eax
  44a66f:	cmp    ecx,edx
  44a671:	cmp    edi,esp
  44a673:	cmp    DWORD PTR [ebx],ebx
  44a675:	cmp    dl,BYTE PTR [ebx+0x3a]
  44a678:	cmp    dh,BYTE PTR gs:[edi+0x3a]
  44a67c:	popf   
  44a67d:	cmp    dh,BYTE PTR [ebp-0x20c535c6]
  44a683:	cmp    dh,ah
  44a685:	cmp    cl,BYTE PTR [ecx]
  44a687:	cmp    esp,DWORD PTR [edx+0x3b]
  44a68a:	push   0x3b
  44a68c:	xchg   edx,eax
  44a68d:	cmp    ebx,DWORD PTR [edi-0x34c43ec5]
  44a693:	cmp    ebp,ebp
  44a695:	cmp    edi,eax
  44a697:	cmp    edx,DWORD PTR [ebx]
  44a699:	cmp    al,0xcc
  44a69b:	cmp    al,0xa
  44a69d:	cmp    eax,0x3d343d1f
  44a6a2:	dec    ecx
  44a6a3:	cmp    eax,0x3d6d3d5b
  44a6a8:	(bad)  
  44a6a9:	cmp    eax,0x3da73d96
  44a6ae:	iret   
  44a6af:	cmp    eax,0x3de43ddf
  44a6b4:	out    dx,al
  44a6b5:	cmp    eax,0x3e453e2f
  44a6ba:	xchg   BYTE PTR [esi],bh
  44a6bc:	fwait
  44a6bd:	ds mov al,0x3e
  44a6c0:	lds    edi,FWORD PTR [esi]
  44a6c2:	fidivr DWORD PTR [esi]
  44a6c4:	out    dx,eax
  44a6c5:	ds add al,0x3f
  44a6c8:	sbb    al,0x3f
  44a6ca:	push   ebx
  44a6cb:	aas    
  44a6cc:	imul   edi,DWORD PTR [edi],0x3f923f85
  44a6d2:	xchg   edi,eax
  44a6d3:	aas    
  44a6d4:	lods   al,BYTE PTR ds:[esi]
  44a6d5:	aas    
  44a6d6:	fdivr  DWORD PTR [edi]
  44a6d8:	add    BYTE PTR [eax+0x0],dh
  44a6db:	add    BYTE PTR [eax],bh
  44a6dd:	add    DWORD PTR [eax],eax
  44a6df:	add    BYTE PTR [edi],bl
  44a6e1:	xor    BYTE PTR [ecx],dh
  44a6e3:	xor    BYTE PTR [ebp+0x30],al
  44a6e6:	dec    edx
  44a6e7:	xor    BYTE PTR [eax+esi*1+0x5e],dl
  44a6eb:	xor    BYTE PTR [edi+0x30],ch
  44a6ee:	xchg   edi,eax
  44a6ef:	xor    BYTE PTR [esi-0x1acf2cd0],ah
  44a6f5:	xor    dh,bh
  44a6f7:	xor    BYTE PTR [ebx],cl
  44a6f9:	xor    DWORD PTR [ebx],esp
  44a6fb:	xor    DWORD PTR [eax+0x31],eax
  44a6fe:	inc    ebp
  44a6ff:	xor    DWORD PTR [ebx+0x31],edx
  44a702:	jne    0x44a735
  44a704:	xor    BYTE PTR [ecx],0x94
  44a707:	xor    DWORD PTR [ebx-0x3bce4bcf],esp
  44a70d:	xor    esp,edx
  44a70f:	xor    DWORD PTR [edi],eax
  44a711:	xor    ch,BYTE PTR [ecx]
  44a713:	xor    bh,BYTE PTR [edx]
  44a715:	xor    cl,BYTE PTR [esi+0x32]
  44a718:	pop    esp
  44a719:	xor    al,BYTE PTR [edx+esi*1+0x32a43293]
  44a720:	int3   
  44a721:	xor    bl,bl
  44a723:	xor    al,BYTE PTR [ebx]
  44a725:	xor    edx,DWORD PTR [edx]
  44a727:	xor    esp,DWORD PTR [eax]
  44a729:	xor    edi,DWORD PTR [esi]
  44a72b:	xor    ecx,DWORD PTR [eax+0x33]
  44a72e:	mov    WORD PTR [ebx],?
  44a730:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44a731:	xor    eax,DWORD PTR [ebx+0x34]
  44a734:	push   esp
  44a735:	xor    al,0x68
  44a737:	xor    al,0x7e
  44a739:	xor    al,0x83
  44a73b:	xor    al,0x95
  44a73d:	xor    al,0xb8
  44a73f:	xor    al,0xc8
  44a741:	xor    al,0xe9
  44a743:	xor    al,0xf8
  44a745:	xor    al,0x25
  44a747:	xor    eax,0x356a3559
  44a74c:	mov    dh,BYTE PTR ds:0x36133596
  44a752:	and    dh,BYTE PTR [esi]
  44a754:	das    
  44a755:	ss pop edx
  44a757:	ss std 
  44a759:	ss pop ebp
  44a75b:	aaa    
  44a75c:	xor    DWORD PTR [edi],0xffffff94
  44a75f:	aaa    
  44a760:	ret    0xe037
  44a763:	aaa    
  44a764:	out    0x37,al
  44a766:	in     eax,dx
  44a767:	aaa    
  44a768:	hlt    
  44a769:	aaa    
  44a76a:	add    edi,DWORD PTR [eax]
  44a76c:	adc    bh,BYTE PTR [eax]
  44a76e:	xor    BYTE PTR [eax],bh
  44a770:	cmp    BYTE PTR ss:[ecx+0x38],dl
  44a774:	jp     0x44a7ae
  44a776:	cmp    DWORD PTR [eax],0x38b138ab
  44a77c:	(bad)  
  44a77d:	cmp    ah,bl
  44a77f:	cmp    bl,ah
  44a781:	cmp    dl,ch
  44a783:	cmp    BYTE PTR [ebx],cl
  44a785:	cmp    DWORD PTR [ecx],edx
  44a787:	cmp    DWORD PTR ds:0x43393c39,esi
  44a78d:	cmp    DWORD PTR [ecx+edi*1+0x6a],esp
  44a791:	cmp    DWORD PTR [edx-0x5fc666c7],edx
  44a797:	cmp    DWORD PTR [edi-0x29c638c7],edi
  44a79d:	cmp    esp,ebx
  44a79f:	cmp    ebx,esp
  44a7a1:	cmp    edx,ebp
  44a7a3:	cmp    DWORD PTR [ecx],ecx
  44a7a5:	cmp    dl,BYTE PTR [edx]
  44a7a7:	cmp    ah,BYTE PTR [ebx]
  44a7a9:	cmp    dh,BYTE PTR [edx]
  44a7ab:	cmp    ch,BYTE PTR [edi+0x3a]
  44a7ae:	jne    0x44a7ea
  44a7b0:	jl     0x44a7ec
  44a7b2:	cmp    BYTE PTR [edx],0xb1
  44a7b5:	cmp    bh,BYTE PTR [esi-0x31c539c6]
  44a7bb:	cmp    ch,ch
  44a7bd:	cmp    dh,bl
  44a7bf:	cmp    al,BYTE PTR [esi]
  44a7c1:	cmp    ebx,DWORD PTR [ebx+edi*1]
  44a7c4:	and    edi,DWORD PTR [ebx]
  44a7c6:	push   ebx
  44a7c7:	cmp    esp,DWORD PTR [edx+0x3b]
  44a7ca:	jno    0x44a807
  44a7cc:	mov    WORD PTR [ebx],?
  44a7ce:	call   0xfe3b:0xc53ba53b
  44a7d5:	cmp    esi,DWORD PTR [eax]
  44a7d7:	cmp    al,0x8a
  44a7d9:	cmp    al,0x9b
  44a7db:	cmp    al,0xc6
  44a7dd:	cmp    al,0xf3
  44a7df:	cmp    al,0x1
  44a7e1:	cmp    eax,0x3d353d27
  44a7e6:	cmp    edi,DWORD PTR ds:0x3d963d42
  44a7ec:	pushf  
  44a7ed:	cmp    eax,0x3e263dd2
  44a7f2:	sub    al,0x3e
  44a7f4:	bound  edi,QWORD PTR [esi]
  44a7f6:	test   BYTE PTR [esi],bh
  44a7f8:	xchg   esi,eax
  44a7f9:	ds leave 
  44a7fb:	fdivr  DWORD PTR ds:[esi]
  44a7fe:	out    0x3e,al
  44a800:	or     DWORD PTR [edi],edi
  44a802:	ds aas 
  44a804:	push   eax
  44a805:	aas    
  44a806:	xchg   BYTE PTR [edi],bh
  44a808:	cwde   
  44a809:	aas    
  44a80a:	mov    edi,0xf03fde3f
  44a80f:	aas    
  44a810:	add    BYTE PTR [eax+0xc40000],al
  44a816:	add    BYTE PTR [eax],al
  44a818:	arpl   WORD PTR [eax],si
  44a81a:	je     0x44a84c
  44a81c:	(bad)  
  44a81d:	xor    BYTE PTR [eax+esi*1+0x30ac30a2],bl
  44a824:	mov    ch,0x30
  44a826:	iret   
  44a827:	xor    ah,bl
  44a829:	xor    dh,ah
  44a82b:	xor    bl,ch
  44a82d:	xor    BYTE PTR [ecx],al
  44a82f:	xor    DWORD PTR [ecx],ecx
  44a831:	xor    DWORD PTR [ecx+esi*1],esp
  44a834:	inc    edx
  44a835:	xor    DWORD PTR [eax+0x31],ecx
  44a838:	push   ebp
  44a839:	xor    DWORD PTR [ebx+0x31],ebx
  44a83c:	xor    DWORD PTR [ecx],0x32d331a0
  44a842:	loope  0x44a876
  44a844:	pop    es
  44a845:	xor    edx,DWORD PTR ds:0x22331b33
  44a84b:	xor    eax,DWORD PTR [ebx-0x5fcc66cd]
  44a851:	xor    esi,DWORD PTR [esi-0x3ccc43cd]
  44a857:	xor    ecx,edx
  44a859:	xor    ebp,esp
  44a85b:	xor    esi,edx
  44a85d:	xor    edi,ebx
  44a85f:	xor    eax,DWORD PTR [edx]
  44a861:	xor    al,0x9
  44a863:	xor    al,0x10
  44a865:	xor    al,0x32
  44a867:	xor    al,0x38
  44a869:	xor    al,0x40
  44a86b:	xor    al,0x63
  44a86d:	xor    al,0x72
  44a86f:	xor    al,0xaf
  44a871:	xor    al,0xb5
  44a873:	xor    al,0xbc
  44a875:	xor    al,0xc2
  44a877:	xor    al,0xf7
  44a879:	xor    al,0x4
  44a87b:	xor    eax,0x3514350c
  44a880:	es xor eax,0x3533352c
  44a886:	cmp    dh,BYTE PTR ds:0x3562355c
  44a88c:	push   0x35
  44a88e:	mov    al,0x35
  44a890:	mov    dh,0x35
  44a892:	mov    ebp,0xd535c435
  44a897:	xor    eax,0x35e335dc
  44a89c:	add    eax,0x13360b36
  44a8a1:	ss inc ebx
  44a8a3:	ss push edx
  44a8a5:	mov    DWORD PTR ss:[esi],esi
  44a8a8:	mov    dl,0x36
  44a8aa:	mov    ecx,0xf736e336
  44a8af:	xor    dh,BYTE PTR ss:[edi]
  44a8b2:	dec    ecx
  44a8b3:	aaa    
  44a8b4:	pop    eax
  44a8b5:	aaa    
  44a8b6:	outs   dx,DWORD PTR ds:[esi]
  44a8b7:	aaa    
  44a8b8:	jnp    0x44a8f1
  44a8ba:	test   DWORD PTR [edi],esi
  44a8bc:	jecxz  0x44a8f6
  44a8be:	cmc    
  44a8bf:	cmp    ch,cl
  44a8c1:	cmp    edi,esi
  44a8c3:	cmp    DWORD PTR ds:0x543f083a,eax
  44a8c9:	aas    
  44a8ca:	pop    eax
  44a8cb:	aas    
  44a8cc:	pop    esp
  44a8cd:	aas    
  44a8ce:	pusha  
  44a8cf:	aas    
  44a8d0:	fs aas 
  44a8d2:	add    BYTE PTR [eax],al
  44a8d4:	add    BYTE PTR [eax+0x19c0000],dl
  44a8da:	add    BYTE PTR [eax],al
  44a8dc:	pusha  
  44a8dd:	xor    BYTE PTR [edi+0x30],ah
  44a8e0:	xchg   esp,eax
  44a8e1:	xor    BYTE PTR [eax-0x4ccf63d0],bl
  44a8e7:	xor    ah,al
  44a8e9:	xor    BYTE PTR [esi],dl
  44a8eb:	xor    DWORD PTR [eax],esp
  44a8ed:	xor    DWORD PTR [edx],edi
  44a8ef:	xor    DWORD PTR [ebx+0x31],esi
  44a8f2:	xor    DWORD PTR [ecx],0x31b531a7
  44a8f8:	mov    ebx,0x2331c231
  44a8fd:	xor    bh,BYTE PTR [ecx]
  44a8ff:	xor    al,BYTE PTR [eax+0x32]
  44a902:	push   esi
  44a903:	xor    bl,BYTE PTR [edx+esi*1+0x63]
  44a907:	xor    ch,BYTE PTR [edx+0x32]
  44a90a:	mov    WORD PTR [edx],?
  44a90c:	xchg   edx,eax
  44a90d:	xor    bl,BYTE PTR [ebx-0x56cd5dce]
  44a913:	xor    dh,BYTE PTR [eax-0x27cd2dce]
  44a919:	xor    ah,al
  44a91b:	xor    al,BYTE PTR [ebx]
  44a91d:	xor    edx,DWORD PTR [edx]
  44a91f:	xor    ecx,DWORD PTR [edi+0x33]
  44a922:	push   ebp
  44a923:	xor    ebx,DWORD PTR [ebx+esi*1+0x62]
  44a927:	xor    edx,DWORD PTR [edi-0x53cc5bcd]
  44a92d:	xor    esi,DWORD PTR [ebx+esi*1+0x33cc33c6]
  44a934:	shl    DWORD PTR [ebx],cl
  44a936:	fidiv  DWORD PTR [ebx]
  44a938:	cld    
  44a939:	xor    eax,DWORD PTR [edx]
  44a93b:	xor    al,0xa
  44a93d:	xor    al,0x50
  44a93f:	xor    al,0x56
  44a941:	xor    al,0x5d
  44a943:	xor    al,0x64
  44a945:	xor    al,0x75
  44a947:	xor    al,0x7c
  44a949:	xor    al,0x83
  44a94b:	xor    al,0xa5
  44a94d:	xor    al,0xab
  44a94f:	xor    al,0xb3
  44a951:	xor    al,0xe3
  44a953:	xor    al,0xf2
  44a955:	xor    al,0x15
  44a957:	xor    eax,0x3558352f
  44a95c:	pop    edi
  44a95d:	xor    eax,0x35a3358f
  44a962:	mov    bh,0x35
  44a964:	repnz xor eax,0x360e3608
  44a96a:	push   ss
  44a96b:	xor    esi,DWORD PTR ss:[esi]
  44a96e:	inc    ebx
  44a96f:	ss pop ecx
  44a971:	arpl   WORD PTR ss:[esi],si
  44a974:	jns    0x44a9ac
  44a976:	mov    BYTE PTR [esi],dh
  44a978:	mov    ?,WORD PTR [esi]
  44a97a:	mov    bl,0x36
  44a97c:	ret    0xf336
  44a97f:	add    DWORD PTR ss:[edi],esi
  44a982:	daa    
  44a983:	aaa    
  44a984:	xor    eax,0x42373b37
  44a989:	aaa    
  44a98a:	mov    ds:0xc037b937,eax
  44a98f:	aaa    
  44a990:	(bad)  
  44a991:	aaa    
  44a992:	fdiv   QWORD PTR [edi]
  44a994:	jecxz  0x44a9cd
  44a996:	jmp    0x1b38:0x12380c37
  44a99d:	cmp    BYTE PTR [edx],ah
  44a99f:	cmp    BYTE PTR [ecx],ch
  44a9a1:	cmp    BYTE PTR [eax],dh
  44a9a3:	cmp    BYTE PTR [edx+0x38],dl
  44a9a6:	pop    eax
  44a9a7:	cmp    BYTE PTR [eax+0x38],ah
  44a9aa:	cmp    DWORD PTR [eax],0xffffff92
  44a9ad:	cmp    bh,cl
  44a9af:	cmp    ch,dl
  44a9b1:	cmp    ah,bl
  44a9b3:	cmp    dl,ah
  44a9b5:	cmp    BYTE PTR [edi],dl
  44a9b7:	cmp    DWORD PTR [ecx+edi*1],esp
  44a9ba:	sub    al,0x39
  44a9bc:	xor    al,0x39
  44a9be:	inc    esi
  44a9bf:	cmp    DWORD PTR [ecx+edi*1+0x53],ecx
  44a9c3:	cmp    DWORD PTR [edx+0x39],ebx
  44a9c6:	jl     0x44aa01
  44a9c8:	cmp    BYTE PTR [ecx],0x8a
  44a9cb:	cmp    eax,edx
  44a9cd:	cmp    esi,edx
  44a9cf:	cmp    ebp,ebx
  44a9d1:	cmp    esp,esp
  44a9d3:	cmp    ebp,esi
  44a9d5:	cmp    esp,edi
  44a9d7:	cmp    DWORD PTR [ebx],eax
  44a9d9:	cmp    ah,BYTE PTR ds:0x333a2b3a
  44a9df:	cmp    ah,BYTE PTR [ebx+0x3a]
  44a9e2:	jb     0x44aa1e
  44a9e4:	xchg   ebp,eax
  44a9e5:	cmp    ch,BYTE PTR [edi-0x20c527c6]
  44a9eb:	cmp    cl,BYTE PTR [edi]
  44a9ed:	cmp    esp,DWORD PTR [ebx]
  44a9ef:	cmp    esi,DWORD PTR [edi]
  44a9f1:	cmp    esi,DWORD PTR [edx+0x3b]
  44a9f4:	cmp    DWORD PTR [ebx],0xffffff93
  44a9f7:	cmp    ebp,DWORD PTR [ecx-0x36c44cc5]
  44a9fd:	cmp    ebx,eax
  44a9ff:	cmp    ebx,esi
  44aa01:	cmp    eax,DWORD PTR [ebx]
  44aa03:	cmp    al,0x12
  44aa05:	cmp    al,0x43
  44aa07:	cmp    al,0x51
  44aa09:	cmp    al,0x77
  44aa0b:	cmp    al,0x85
  44aa0d:	cmp    al,0x8b
  44aa0f:	cmp    al,0x92
  44aa11:	cmp    al,0xf3
  44aa13:	cmp    al,0x9
  44aa15:	cmp    eax,0x3d263d10
  44aa1a:	sub    al,0x3d
  44aa1c:	xor    edi,DWORD PTR ds:0x3d5c3d3a
  44aa22:	bound  edi,QWORD PTR ds:0x3d723d6b
  44aa28:	jns    0x44aa67
  44aa2a:	cmp    BYTE PTR ds:0x3da83da2,0xb0
  44aa31:	cmp    eax,0x3de23dd3
  44aa36:	pop    ds
  44aa37:	ds and eax,0x323e2c3e
  44aa3d:	ds addr16 ds je 0x44aa80
  44aa42:	jl     0x44aa82
  44aa44:	test   BYTE PTR [esi],bh
  44aa46:	xchg   esi,eax
  44aa47:	ds pushf 
  44aa49:	mov    ds:0xcc3eaa3e,eax
  44aa4f:	sar    BYTE PTR ds:[esi],cl
  44aa52:	fidivr DWORD PTR [esi]
  44aa54:	and    BYTE PTR [edi],bh
  44aa56:	es aas 
  44aa58:	sub    eax,0x453f343f
  44aa5d:	aas    
  44aa5e:	dec    esp
  44aa5f:	aas    
  44aa60:	push   ebx
  44aa61:	aas    
  44aa62:	jne    0x44aaa3
  44aa64:	jnp    0x44aaa5
  44aa66:	cmp    DWORD PTR [edi],0xffffffc3
  44aa69:	aas    
  44aa6a:	sar    BYTE PTR [edi],cl
  44aa6c:	cmc    
  44aa6d:	aas    
  44aa6e:	add    BYTE PTR [eax],al
  44aa70:	add    BYTE PTR [eax+0x1140000],ah
  44aa76:	add    BYTE PTR [eax],al
  44aa78:	wrmsr  
  44aa7a:	cmp    BYTE PTR [eax],dh
  44aa7c:	aas    
  44aa7d:	xor    BYTE PTR [edi+0x30],ch
  44aa80:	(bad)  
  44aa81:	xor    BYTE PTR [ebx-0xdcf48d0],ah
  44aa87:	xor    BYTE PTR [ebx],al
  44aa89:	xor    DWORD PTR [ebx],edx
  44aa8b:	xor    DWORD PTR [ecx],ebp
  44aa8d:	xor    DWORD PTR [ebx],esi
  44aa8f:	xor    DWORD PTR [ecx+0x31],ecx
  44aa92:	pop    eax
  44aa93:	xor    DWORD PTR [esi+0x31],ebx
  44aa96:	test   DWORD PTR [ecx],esi
  44aa98:	mov    esi,DWORD PTR [ecx]
  44aa9a:	xchg   ebx,eax
  44aa9b:	xor    DWORD PTR [ebx-0x1cce4dcf],esp
  44aaa1:	xor    ecx,esi
  44aaa3:	xor    DWORD PTR [edi],edx
  44aaa5:	xor    ah,BYTE PTR ds:0x32322b32
  44aaab:	xor    cl,BYTE PTR [ebp-0x5fcd6cce]
  44aab1:	xor    dh,BYTE PTR [esi-0x29cd42ce]
  44aab7:	xor    bl,ah
  44aab9:	xor    ah,bl
  44aabb:	xor    ch,dl
  44aabd:	xor    cl,BYTE PTR [ecx]
  44aabf:	xor    edx,DWORD PTR [edx]
  44aac1:	xor    esp,DWORD PTR [edx]
  44aac3:	xor    ebp,DWORD PTR [ecx]
  44aac5:	xor    esi,DWORD PTR [eax]
  44aac7:	xor    ecx,DWORD PTR [edi+0x33]
  44aaca:	push   edi
  44aacb:	xor    esi,DWORD PTR [ebx+0x33]
  44aace:	xor    BYTE PTR [ebx],0xbf
  44aad1:	xor    eax,ebp
  44aad3:	xor    ecx,esp
  44aad5:	xor    edx,edx
  44aad7:	xor    eax,DWORD PTR [edi]
  44aad9:	xor    al,0x14
  44aadb:	xor    al,0x1c
  44aadd:	xor    al,0x24
  44aadf:	xor    al,0x36
  44aae1:	xor    al,0x3c
  44aae3:	xor    al,0x43
  44aae5:	xor    al,0x4a
  44aae7:	xor    al,0x6b
  44aae9:	xor    al,0x71
  44aaeb:	xor    al,0xb0
  44aaed:	xor    al,0xb6
  44aaef:	xor    al,0xbd
  44aaf1:	xor    al,0xc4
  44aaf3:	xor    al,0xd2
  44aaf5:	xor    al,0xd8
  44aaf7:	xor    al,0xe5
  44aaf9:	xor    al,0xec
  44aafb:	xor    al,0xf3
  44aafd:	xor    al,0x14
  44aaff:	xor    eax,0x3553351a
  44ab04:	bound  esi,QWORD PTR ds:0x35863580
  44ab0a:	xchg   edx,eax
  44ab0b:	xor    eax,0x35ca35a1
  44ab10:	shl    DWORD PTR ds:0x360b35f1,1
  44ab16:	adc    DWORD PTR [esi],esi
  44ab18:	push   ds
  44ab19:	xor    esi,DWORD PTR ss:[esi]
  44ab1c:	inc    esp
  44ab1d:	ss jb  0x44ab56
  44ab20:	enter  0x1b36,0x37
  44ab24:	arpl   WORD PTR [edi],si
  44ab26:	jae    0x44ab5f
  44ab28:	xchg   ebx,eax
  44ab29:	aaa    
  44ab2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44ab2b:	aaa    
  44ab2c:	mov    dh,0x37
  44ab2e:	loop   0x44ab67
  44ab30:	clc    
  44ab31:	aaa    
  44ab32:	adc    eax,0x32382d38
  44ab37:	cmp    BYTE PTR [ebp+0x38],ch
  44ab3a:	ja     0x44ab74
  44ab3c:	mov    edi,DWORD PTR [eax]
  44ab3e:	in     al,0x38
  44ab40:	inc    edi
  44ab41:	cmp    DWORD PTR [ebp+0x39],esp
  44ab44:	ret    0x239
  44ab47:	cmp    ch,BYTE PTR [ebp-0x1ec53dc6]
  44ab4d:	cmp    dh,BYTE PTR [ecx+0x3b]
  44ab50:	xchg   BYTE PTR [ebx],bh
  44ab52:	(bad)  
  44ab53:	cmp    ebp,DWORD PTR [ebx]
  44ab55:	cmp    al,0x40
  44ab57:	cmp    al,0x58
  44ab59:	cmp    al,0x93
  44ab5b:	cmp    al,0xa2
  44ab5d:	cmp    al,0xb0
  44ab5f:	cmp    al,0xe3
  44ab61:	cmp    al,0x1a
  44ab63:	cmp    eax,0x3d4b3d1f
  44ab68:	push   0x863d773d
  44ab6d:	cmp    eax,0x3dd33db0
  44ab72:	cmp    al,0x3e
  44ab74:	dec    esp
  44ab75:	ds mov ch,0x3e
  44ab78:	adc    edi,DWORD PTR [edi]
  44ab7a:	and    eax,0x723f593f
  44ab7f:	aas    
  44ab80:	mov    bl,0x3f
  44ab82:	repz aas 
  44ab84:	add    BYTE PTR [eax+0x1180000],dh
  44ab8a:	add    BYTE PTR [eax],al
  44ab8c:	add    esi,DWORD PTR [eax]
  44ab8e:	xor    DWORD PTR [eax],esi
  44ab90:	jnp    0x44abc2
  44ab92:	in     eax,dx
  44ab93:	xor    BYTE PTR [ecx+esi*1+0x73],cl
  44ab97:	xor    DWORD PTR [ecx+0x31],edi
  44ab9a:	mov    DWORD PTR [ecx],esi
  44ab9c:	cwde   
  44ab9d:	xor    DWORD PTR [edi-0x40ce4fcf],esp
  44aba3:	xor    esi,eax
  44aba5:	xor    ebx,esp
  44aba7:	xor    edx,esi
  44aba9:	xor    edi,edi
  44abab:	xor    DWORD PTR [ecx],esp
  44abad:	xor    ch,BYTE PTR [esi]
  44abaf:	xor    bh,BYTE PTR ds:0x5f325032
  44abb5:	xor    ah,BYTE PTR [esi+0x32]
  44abb8:	imul   esi,DWORD PTR [edx],0x75
  44abbb:	xor    bl,BYTE PTR [esi-0x46cd5cce]
  44abc1:	xor    al,al
  44abc3:	xor    dl,ah
  44abc5:	xor    bl,dh
  44abc7:	xor    ch,ch
  44abc9:	xor    al,BYTE PTR [eax]
  44abcb:	xor    ecx,DWORD PTR [edi]
  44abcd:	xor    edx,DWORD PTR [esi]
  44abcf:	xor    ebx,DWORD PTR [ebx]
  44abd1:	xor    esp,DWORD PTR ds:0x53334e33
  44abd7:	xor    edx,DWORD PTR [ebx-0x50cc5dcd]
  44abdd:	xor    edx,ecx
  44abdf:	xor    ebx,esi
  44abe1:	xor    ebp,ebp
  44abe3:	xor    eax,DWORD PTR [eax]
  44abe5:	xor    al,0xf
  44abe7:	xor    al,0x16
  44abe9:	xor    al,0x1b
  44abeb:	xor    al,0x25
  44abed:	xor    al,0x4e
  44abef:	xor    al,0x53
  44abf1:	xor    al,0x65
  44abf3:	xor    al,0x6d
  44abf5:	xor    al,0x72
  44abf7:	xor    al,0x78
  44abf9:	xor    al,0x8c
  44abfb:	xor    al,0x96
  44abfd:	xor    al,0xa5
  44abff:	xor    al,0xb8
  44ac01:	xor    al,0xc7
  44ac03:	xor    al,0xce
  44ac05:	xor    al,0xd3
  44ac07:	xor    al,0xdd
  44ac09:	xor    al,0x6
  44ac0b:	xor    eax,0x3543350b
  44ac10:	push   eax
  44ac11:	xor    eax,0x35ac3595
  44ac16:	shl    DWORD PTR ds:0x35ef35e2,cl
  44ac1c:	adc    DWORD PTR [esi],esi
  44ac1e:	push   ds
  44ac1f:	ss sub eax,0x4f364036
  44ac25:	ss push esi
  44ac27:	ss pop ebx
  44ac29:	ss gs mov ?,WORD PTR ss:[esi]
  44ac2e:	xchg   ebx,eax
  44ac2f:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  44ac31:	lods   eax,DWORD PTR ss:[esi]
  44ac33:	ss mov dl,0x36
  44ac36:	mov    eax,0xd636cc36
  44ac3b:	ss in  eax,0x36
  44ac3e:	clc    
  44ac3f:	ss pop es
  44ac41:	aaa    
  44ac42:	push   cs
  44ac43:	aaa    
  44ac44:	adc    esi,DWORD PTR [edi]
  44ac46:	sbb    eax,0x4b374637
  44ac4b:	aaa    
  44ac4c:	mov    ebp,0x66381d37
  44ac51:	cmp    BYTE PTR [eax+edi*1-0x5e],ch
  44ac55:	cmp    dh,dl
  44ac57:	cmp    ah,bl
  44ac59:	cmp    BYTE PTR [edx],dl
  44ac5b:	cmp    DWORD PTR [ecx+edi*1],esp
  44ac5e:	xor    eax,0x82396539
  44ac63:	cmp    DWORD PTR [ebx-0x30c65bc7],edx
  44ac69:	cmp    edi,ebp
  44ac6b:	cmp    DWORD PTR [ecx],esp
  44ac6d:	cmp    ch,BYTE PTR [edi]
  44ac6f:	cmp    dl,BYTE PTR [ebx+0x3a]
  44ac72:	cmp    dl,BYTE PTR fs:[ecx-0x1dc53dc6]
  44ac79:	cmp    dh,al
  44ac7b:	cmp    dl,BYTE PTR [ebx]
  44ac7d:	cmp    esp,DWORD PTR [ebx]
  44ac7f:	cmp    edi,DWORD PTR [ecx+0x3b]
  44ac82:	cdq    
  44ac83:	cmp    ebp,DWORD PTR [ecx-0x1dc42cc5]
  44ac89:	cmp    esi,ecx
  44ac8b:	cmp    edi,DWORD PTR [ebp+0x3d]
  44ac8e:	mov    bl,0x3d
  44ac90:	ret    0xd13d
  44ac93:	cmp    eax,0x3f833f5b
  44ac98:	xchg   ebx,eax
  44ac99:	aas    
  44ac9a:	jmp    0x104acde
  44ac9f:	add    BYTE PTR [ecx+eax*1],cl
  44aca2:	add    BYTE PTR [eax],al
  44aca4:	or     DWORD PTR [eax],esi
  44aca6:	sbb    DWORD PTR [eax],esi
  44aca8:	shl    BYTE PTR [eax],cl
  44acaa:	les    esi,FWORD PTR [ecx]
  44acac:	and    esi,DWORD PTR [edx]
  44acae:	xor    dh,BYTE PTR [edx]
  44acb0:	push   eax
  44acb1:	xor    ah,BYTE PTR [ebp+0x32]
  44acb4:	imul   esi,DWORD PTR [edx],0xffffff93
  44acb7:	xor    ah,BYTE PTR [edx-0x36cd4ece]
  44acbd:	xor    dl,bl
  44acbf:	xor    bl,al
  44acc1:	xor    ch,dl
  44acc3:	xor    dl,BYTE PTR ds:0x24331a33
  44acc9:	xor    edx,DWORD PTR [edi+0x33]
  44accc:	pop    esp
  44accd:	xor    esp,DWORD PTR [esi+0x33]
  44acd0:	xchg   BYTE PTR [ebx],dh
  44acd2:	cwde   
  44acd3:	xor    eax,ebx
  44acd5:	xor    edx,edx
  44acd7:	xor    esp,ecx
  44acd9:	xor    edi,ecx
  44acdb:	xor    eax,DWORD PTR [edi]
  44acdd:	xor    al,0xc
  44acdf:	xor    al,0x1e
  44ace1:	xor    al,0x48
  44ace3:	xor    al,0x4d
  44ace5:	xor    al,0x57
  44ace7:	xor    al,0x77
  44ace9:	xor    al,0x7c
  44aceb:	xor    al,0x86
  44aced:	xor    al,0xae
  44acef:	xor    al,0xd2
  44acf1:	xor    al,0xd7
  44acf3:	xor    al,0xe1
  44acf5:	xor    al,0xff
  44acf7:	xor    al,0x4
  44acf9:	xor    eax,0x3530350e
  44acfe:	cmp    al,0x35
  44ad00:	dec    ecx
  44ad01:	xor    eax,0x3562354f
  44ad06:	jno    0x44ad3d
  44ad08:	jg     0x44ad3f
  44ad0a:	lea    esi,ds:0x359d3595
  44ad10:	mov    ds:0xc835b935,eax
  44ad15:	xor    eax,0x35e235d6
  44ad1a:	hlt    
  44ad1b:	xor    eax,0x36323623
  44ad20:	aas    
  44ad21:	ss push edi
  44ad23:	ss popa 
  44ad25:	ss data16 ss js 0x44ad60
  44ad2a:	mov    eax,0xf336ca36
  44ad2f:	add    DWORD PTR ss:[edi],esi
  44ad32:	sbb    BYTE PTR [edi],dh
  44ad34:	and    dh,BYTE PTR [edi]
  44ad36:	das    
  44ad37:	aaa    
  44ad38:	dec    esi
  44ad39:	aaa    
  44ad3a:	pop    esp
  44ad3b:	aaa    
  44ad3c:	xchg   ebx,eax
  44ad3d:	aaa    
  44ad3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44ad3f:	aaa    
  44ad40:	mov    ebx,0xfe37f037
  44ad45:	aaa    
  44ad46:	sbb    eax,0x52384338
  44ad4b:	cmp    BYTE PTR [ecx+0x38],ah
  44ad4e:	jns    0x44ad88
  44ad50:	xchg   DWORD PTR [eax],edi
  44ad52:	mov    WORD PTR [eax],?
  44ad54:	sahf   
  44ad55:	cmp    al,cl
  44ad57:	cmp    al,ch
  44ad59:	cmp    al,bh
  44ad5b:	cmp    BYTE PTR [esi],bl
  44ad5d:	cmp    DWORD PTR [ebp+0x39],eax
  44ad60:	cmp    BYTE PTR [ecx],0xc1
  44ad63:	cmp    ebx,ecx
  44ad65:	cmp    DWORD PTR ds:0xcf3a1f3a,ecx
  44ad6b:	cmp    bh,bl
  44ad6d:	cmp    dl,BYTE PTR [ecx+0x3b]
  44ad70:	bound  edi,QWORD PTR [ebx]
  44ad72:	jae    0x44adaf
  44ad74:	mov    edi,DWORD PTR [ebx]
  44ad76:	sar    DWORD PTR [ebx],0x13
  44ad79:	cmp    al,0x26
  44ad7b:	cmp    al,0x57
  44ad7d:	cmp    al,0x79
  44ad7f:	cmp    al,0x8c
  44ad81:	cmp    al,0xad
  44ad83:	cmp    al,0xc0
  44ad85:	cmp    al,0xd3
  44ad87:	cmp    al,0xf4
  44ad89:	cmp    al,0x32
  44ad8b:	cmp    eax,0x3d533d43
  44ad90:	ja     0x44adcf
  44ad92:	call   0xe33d:0xd33db13d
  44ad99:	cmp    eax,0x3e433e1f
  44ad9e:	push   ebp
  44ad9f:	mov    bh,BYTE PTR ds:[esi]
  44ada2:	xor    edi,DWORD PTR [edi]
  44ada4:	inc    esi
  44ada5:	aas    
  44ada6:	add    BYTE PTR [eax],al
  44ada8:	add    al,dl
  44adaa:	add    BYTE PTR [eax],al
  44adac:	or     al,0x1
  44adae:	add    BYTE PTR [eax],al
  44adb0:	push   ebx
  44adb1:	xor    BYTE PTR [ebp+0x30],ah
  44adb4:	mov    BYTE PTR [eax],dh
  44adb6:	xchg   edx,eax
  44adb7:	xor    BYTE PTR [ebx+0x31],al
  44adba:	push   ebp
  44adbb:	xor    DWORD PTR [ebx+0x32],edx
  44adbe:	pusha  
  44adbf:	xor    bh,BYTE PTR [ecx+0x32]
  44adc2:	xchg   ebx,eax
  44adc3:	xor    bl,BYTE PTR [edx+esi*1+0x32d032c3]
  44adca:	out    0x32,eax
  44adcc:	clc    
  44adcd:	xor    cl,BYTE PTR [eax]
  44adcf:	xor    esp,DWORD PTR [ebx]
  44add1:	xor    esi,DWORD PTR [eax]
  44add3:	xor    ecx,DWORD PTR [ecx+0x33]
  44add6:	pop    ebx
  44add7:	xor    eax,DWORD PTR [ebx-0x28cc6fcd]
  44addd:	xor    esp,edi
  44addf:	xor    esi,edi
  44ade1:	xor    edx,DWORD PTR [ebx]
  44ade3:	xor    al,0x23
  44ade5:	xor    al,0x63
  44ade7:	xor    al,0x95
  44ade9:	xor    al,0x9c
  44adeb:	xor    al,0xd1
  44aded:	xor    al,0xf3
  44adef:	xor    al,0x3
  44adf1:	xor    eax,0x351d3518
  44adf6:	sub    esi,DWORD PTR ds:0x35433530
  44adfc:	push   ecx
  44adfd:	xor    eax,0x3561355c
  44ae02:	jo     0x44ae39
  44ae04:	ret    
  44ae05:	xor    eax,0x362335d1
  44ae0a:	xor    DWORD PTR [esi],esi
  44ae0c:	dec    edx
  44ae0d:	ss cdq 
  44ae0f:	fnstenv ss:[esi]
  44ae12:	jmp    0x44ae4a
  44ae14:	mov    dh,BYTE PTR [edi]
  44ae16:	loope  0x44ae4f
  44ae18:	dec    ecx
  44ae19:	cmp    BYTE PTR [ebx-0x12c74cc8],ah
  44ae1f:	cmp    bl,bh
  44ae21:	cmp    BYTE PTR [ebx],al
  44ae23:	cmp    DWORD PTR [eax],ecx
  44ae25:	cmp    DWORD PTR [ecx],ebp
  44ae27:	cmp    DWORD PTR [ebx+0x39],edx
  44ae2a:	arpl   WORD PTR [ecx],di
  44ae2c:	call   0xb539:0xb039a839
  44ae33:	cmp    esi,edx
  44ae35:	cmp    DWORD PTR [ebx],eax
  44ae37:	cmp    dl,BYTE PTR [edx]
  44ae39:	cmp    bl,BYTE PTR [esi]
  44ae3b:	cmp    bh,BYTE PTR [edx]
  44ae3d:	cmp    al,BYTE PTR [edx+edi*1+0x49]
  44ae41:	cmp    bl,BYTE PTR [edx+edi*1+0x6e]
  44ae45:	cmp    dh,BYTE PTR [edx+edi*1-0x75]
  44ae49:	cmp    ah,BYTE PTR [esi-0x35c547c6]
  44ae4f:	cmp    al,BYTE PTR [esi]
  44ae51:	cmp    esp,DWORD PTR [esi]
  44ae53:	cmp    eax,DWORD PTR [edi+0x3b]
  44ae56:	(bad)  
  44ae57:	cmp    ebx,DWORD PTR [edi-0x2ec43cc5]
  44ae5d:	cmp    esi,ebx
  44ae5f:	cmp    ecx,DWORD PTR [eax]
  44ae61:	cmp    al,0x3d
  44ae63:	cmp    al,0x5d
  44ae65:	cmp    al,0x79
  44ae67:	cmp    al,0x82
  44ae69:	cmp    al,0x93
  44ae6b:	cmp    al,0xa3
  44ae6d:	cmp    al,0xb7
  44ae6f:	cmp    al,0xbf
  44ae71:	cmp    al,0xc5
  44ae73:	cmp    al,0xcb
  44ae75:	cmp    al,0xd1
  44ae77:	cmp    al,0xd7
  44ae79:	cmp    al,0xe1
  44ae7b:	cmp    al,0xf4
  44ae7d:	cmp    al,0xfa
  44ae7f:	cmp    al,0x0
  44ae81:	cmp    eax,0x3d103d06
  44ae86:	push   ss
  44ae87:	cmp    eax,0x3d2b3d20
  44ae8c:	ss cmp eax,0x3d493d44
  44ae92:	dec    edi
  44ae93:	cmp    eax,0x3d5e3d54
  44ae98:	xchg   BYTE PTR ds:0x3db03d95,bh
  44ae9e:	aad    0x3d
  44aea0:	(bad)  
  44aea1:	add    DWORD PTR ds:[edi],edi
  44aea4:	sbb    BYTE PTR [edi],bh
  44aea6:	pop    ds
  44aea7:	aas    
  44aea8:	xor    BYTE PTR [edi],bh
  44aeaa:	aas    
  44aeab:	aas    
  44aeac:	addr16 aas 
  44aeae:	jo     0x44aeef
  44aeb0:	sar    DWORD PTR [edi],1
  44aeb2:	fstp   TBYTE PTR [edi]
  44aeb4:	add    al,ah
  44aeb6:	add    BYTE PTR [eax],al
  44aeb8:	sbb    al,0x1
  44aeba:	add    BYTE PTR [eax],al
  44aebc:	add    eax,0x20301330
  44aec1:	xor    BYTE PTR [edx+0x30],al
  44aec4:	push   ebx
  44aec5:	xor    BYTE PTR [ecx+0x30],bh
  44aec8:	mov    DWORD PTR [eax],esi
  44aeca:	fwait
  44aecb:	xor    BYTE PTR [eax+0x19310930],ah
  44aed1:	xor    DWORD PTR [ebx],ebp
  44aed3:	xor    DWORD PTR [eax],esi
  44aed5:	xor    DWORD PTR [ebx-0x52ce5dcf],edx
  44aedb:	xor    esi,edx
  44aedd:	xor    ebx,ebx
  44aedf:	xor    edi,ebp
  44aee1:	xor    DWORD PTR [ecx],ecx
  44aee3:	xor    dh,BYTE PTR [ebx]
  44aee5:	xor    al,BYTE PTR [edx+0x32]
  44aee8:	dec    esi
  44aee9:	xor    bh,BYTE PTR [ecx+0x32]
  44aeec:	xchg   esp,eax
  44aeed:	xor    ch,BYTE PTR [ecx-0x2bcd45ce]
  44aef3:	xor    ah,bl
  44aef5:	xor    dh,dl
  44aef7:	xor    ah,BYTE PTR [ebx]
  44aef9:	xor    esi,DWORD PTR [edx]
  44aefb:	xor    edi,DWORD PTR ds:0x6b336633
  44af01:	xor    edi,DWORD PTR [edi+0x33]
  44af04:	cdq    
  44af05:	xor    eax,ebx
  44af07:	xor    edx,edx
  44af09:	xor    ebx,ebp
  44af0b:	xor    eax,DWORD PTR [esi]
  44af0d:	xor    al,0xb
  44af0f:	xor    al,0x1f
  44af11:	xor    al,0x39
  44af13:	xor    al,0x63
  44af15:	xor    al,0x75
  44af17:	xor    al,0x86
  44af19:	xor    al,0xa6
  44af1b:	xor    al,0xcd
  44af1d:	xor    al,0x17
  44af1f:	xor    eax,0x35a0356e
  44af24:	mov    eax,0x1335fa35
  44af29:	and    esi,DWORD PTR ss:[esi]
  44af2c:	aaa    
  44af2d:	ss aas 
  44af2f:	ss inc ebp
  44af31:	ss popa 
  44af33:	ss jb  0x44af6c
  44af36:	test   BYTE PTR [esi],dh
  44af38:	mov    esi,DWORD PTR [esi]
  44af3a:	xchg   ebx,eax
  44af3b:	ss cdq 
  44af3d:	ss mov bl,0x36
  44af40:	les    esi,FWORD PTR [esi]
  44af42:	(bad)  
  44af43:	fdiv   QWORD PTR ss:[esi]
  44af46:	in     eax,dx
  44af47:	add    BYTE PTR ss:[edi],dh
  44af4a:	adc    dh,BYTE PTR [edi]
  44af4c:	inc    esi
  44af4d:	aaa    
  44af4e:	pop    eax
  44af4f:	aaa    
  44af50:	popf   
  44af51:	aaa    
  44af52:	lods   al,BYTE PTR ds:[esi]
  44af53:	aaa    
  44af54:	int    0x37
  44af56:	jmp    0x44af8f
  44af58:	lock aaa 
  44af5a:	add    eax,0x30382338
  44af5f:	cmp    BYTE PTR [ebx+0x38],al
  44af62:	cmp    BYTE PTR gs:[edi+0x38],dh
  44af66:	mov    bh,BYTE PTR [eax]
  44af68:	xchg   ebx,eax
  44af69:	cmp    BYTE PTR [esi-0x8c737c8],ah
  44af6f:	cmp    BYTE PTR [eax],al
  44af71:	cmp    DWORD PTR [ebx],edx
  44af73:	cmp    DWORD PTR ds:0x65396039,esi
  44af79:	cmp    DWORD PTR [ecx+edi*1+0x39bc39b0],edx
  44af80:	or     BYTE PTR [edx],bh
  44af82:	sub    BYTE PTR [edx],bh
  44af84:	cmp    ch,BYTE PTR fs:[edx+0x3a]
  44af88:	js     0x44afc4
  44af8a:	cmc    
  44af8b:	cmp    ch,BYTE PTR [ebx]
  44af8d:	cmp    ebx,DWORD PTR [ebx+0x3b]
  44af90:	mov    dh,0x3b
  44af92:	mov    edi,0xeb3bcf3b
  44af97:	cmp    esi,edi
  44af99:	cmp    ecx,DWORD PTR ds:0x733c353c
  44af9f:	cmp    al,0x84
  44afa1:	cmp    al,0x9d
  44afa3:	cmp    al,0xa5
  44afa5:	cmp    al,0xc3
  44afa7:	cmp    al,0xd3
  44afa9:	cmp    al,0xe3
  44afab:	cmp    al,0xf3
  44afad:	cmp    al,0x3b
  44afaf:	cmp    eax,0x3d683d47
  44afb4:	jle    0x44aff3
  44afb6:	mov    DWORD PTR ds:0x3e393d90,edi
  44afbc:	inc    ebp
  44afbd:	ds data16 fnstsw WORD PTR ds:[esi]
  44afc2:	in     eax,dx
  44afc3:	ds cli 
  44afc5:	ds ds aas 
  44afc8:	sar    DWORD PTR [edi],1
  44afca:	loope  0x44b00b
  44afcc:	out    dx,al
  44afcd:	aas    
  44afce:	add    BYTE PTR [eax],al
  44afd0:	add    al,dh
  44afd2:	add    BYTE PTR [eax],al
  44afd4:	call   0x1344afd9
  44afd9:	xor    BYTE PTR [ecx],ah
  44afdb:	xor    BYTE PTR [edi-0x57cf65d0],cl
  44afe1:	xor    BYTE PTR [ebx-0x28cf3ad0],dh
  44afe7:	xor    BYTE PTR [edi+0x31],cl
  44afea:	popa   
  44afeb:	xor    DWORD PTR [ebx+0x31],esi
  44afee:	mov    DWORD PTR [ecx],esi
  44aff0:	loop   0x44b023
  44aff2:	add    esi,DWORD PTR [edx]
  44aff4:	daa    
  44aff5:	xor    al,BYTE PTR [eax+0x32]
  44aff8:	outs   dx,BYTE PTR ds:[esi]
  44aff9:	xor    bh,BYTE PTR [esi+0x32]
  44affc:	call   0x832:0xf332b632
  44b003:	xor    ebx,DWORD PTR ds:0xa3336833
  44b009:	xor    edi,DWORD PTR [eax-0x1dcc32cd]
  44b00f:	xor    esi,edi
  44b011:	xor    esp,DWORD PTR [esi+0x34]
  44b014:	mov    ds:0xbe34b234,eax
  44b019:	xor    al,0xd1
  44b01b:	xor    al,0xf6
  44b01d:	xor    al,0x3
  44b01f:	xor    eax,0x35543536
  44b024:	xchg   BYTE PTR ds:0x35d0359d,dh
  44b02a:	div    BYTE PTR ds:0x36403630
  44b030:	fdiv   DWORD PTR [esi]
  44b032:	jmp    0x44b06a
  44b034:	xor    dh,BYTE PTR [edi]
  44b036:	inc    edx
  44b037:	aaa    
  44b038:	imul   esi,DWORD PTR [edi],0xffffffad
  44b03b:	aaa    
  44b03c:	push   cs
  44b03d:	cmp    BYTE PTR ds:0x31382938,bl
  44b043:	cmp    BYTE PTR [ebx+0x38],dl
  44b046:	pop    esp
  44b047:	cmp    BYTE PTR [ebx+0x38],bh
  44b04a:	xor    BYTE PTR [ecx],bh
  44b04c:	pop    esi
  44b04d:	cmp    esi,esi
  44b04f:	cmp    DWORD PTR [edx+edi*1],edx
  44b052:	cmp    DWORD PTR [edx],edi
  44b054:	dec    ebp
  44b055:	cmp    ah,BYTE PTR [ecx+0x3a]
  44b058:	jno    0x44b094
  44b05a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44b05b:	cmp    ch,BYTE PTR [ebp-0x3ec54dc6]
  44b061:	cmp    dl,dl
  44b063:	cmp    bl,al
  44b065:	cmp    ch,bh
  44b067:	cmp    bh,ch
  44b069:	cmp    cl,BYTE PTR ds:0x3c3b283b
  44b06f:	cmp    edx,DWORD PTR [ebp+0x3b]
  44b072:	pop    ebp
  44b073:	cmp    eax,DWORD PTR [ebx-0x5dc46dc5]
  44b079:	cmp    esi,DWORD PTR [edx-0x30c43dc5]
  44b07f:	cmp    esi,esi
  44b081:	cmp    ebp,DWORD PTR [ecx]
  44b083:	cmp    al,0x85
  44b085:	cmp    al,0xa5
  44b087:	cmp    al,0xbe
  44b089:	cmp    al,0xce
  44b08b:	cmp    al,0x3
  44b08d:	cmp    eax,0x3d423d11
  44b092:	fs cmp eax,0x3d7f3d71
  44b098:	mov    eax,ds:0xca3daf3d
  44b09d:	cmp    eax,0x3df53de3
  44b0a2:	sbb    bh,BYTE PTR [esi]
  44b0a4:	ds ds int 0x3e
  44b0a8:	and    bh,BYTE PTR [edi]
  44b0aa:	dec    esp
  44b0ab:	aas    
  44b0ac:	ins    DWORD PTR es:[edi],dx
  44b0ad:	aas    
  44b0ae:	mov    bl,0x3f
  44b0b0:	lds    edi,FWORD PTR [edi]
  44b0b2:	xlat   BYTE PTR ds:[ebx]
  44b0b3:	aas    
  44b0b4:	repz aas 
  44b0b6:	add    BYTE PTR [eax],al
  44b0b8:	add    BYTE PTR [eax],al
  44b0ba:	add    DWORD PTR [eax],eax
  44b0bc:	in     al,dx
  44b0bd:	add    BYTE PTR [eax],al
  44b0bf:	add    BYTE PTR [edx],al
  44b0c1:	xor    BYTE PTR ds:0x8b303a30,ah
  44b0c7:	xor    BYTE PTR [ebp-0x3cf41d0],dl
  44b0cd:	xor    BYTE PTR [edi],ah
  44b0cf:	xor    DWORD PTR [ecx+esi*1],edi
  44b0d2:	dec    esp
  44b0d3:	xor    DWORD PTR [ecx+0x31],esi
  44b0d6:	mov    edx,0xe431cf31
  44b0db:	xor    DWORD PTR [ecx],ebp
  44b0dd:	xor    bh,BYTE PTR [eax]
  44b0df:	xor    al,BYTE PTR [esi+0x32]
  44b0e2:	xor    ch,BYTE PTR gs:[esi+0x32]
  44b0e6:	mov    ds:0xc732b832,al
  44b0eb:	xor    ah,BYTE PTR [edx]
  44b0ed:	xor    ebx,DWORD PTR [ecx-0x43cc54cd]
  44b0f3:	xor    ebp,ebx
  44b0f5:	xor    esi,eax
  44b0f7:	xor    esi,DWORD PTR [esi]
  44b0f9:	xor    al,0x43
  44b0fb:	xor    al,0x5d
  44b0fd:	xor    al,0x8d
  44b0ff:	xor    al,0xa9
  44b101:	xor    al,0xc1
  44b103:	xor    al,0xe2
  44b105:	xor    al,0xff
  44b107:	xor    al,0x10
  44b109:	xor    eax,0x35593540
  44b10e:	mov    dh,BYTE PTR ds:0x35a1359c
  44b114:	mov    dl,0x35
  44b116:	loopne 0x44b14d
  44b118:	cli    
  44b119:	xor    eax,0x36a63613
  44b11e:	mov    ebx,0x836d836
  44b123:	aaa    
  44b124:	and    al,0x37
  44b126:	cmp    al,0x37
  44b128:	pop    ebp
  44b129:	aaa    
  44b12a:	jp     0x44b163
  44b12c:	xchg   ecx,eax
  44b12d:	aaa    
  44b12e:	shl    DWORD PTR [edi],0xdb
  44b131:	aaa    
  44b132:	repz aaa 
  44b134:	add    eax,0x7b382a38
  44b139:	cmp    BYTE PTR [ebx+0x2838b838],bl
  44b13f:	cmp    DWORD PTR ds:0xb2396739,esi
  44b145:	cmp    edi,eax
  44b147:	cmp    esp,ebp
  44b149:	cmp    DWORD PTR [ecx],eax
  44b14b:	cmp    dh,BYTE PTR [ebx]
  44b14d:	cmp    al,BYTE PTR [ebp+0x3a]
  44b150:	push   edi
  44b151:	cmp    dh,BYTE PTR [ebx+0x3a]
  44b154:	cmp    BYTE PTR [edx],0xa6
  44b157:	cmp    bh,BYTE PTR [ebx-0xcc534c6]
  44b15d:	cmp    cl,BYTE PTR [eax]
  44b15f:	cmp    ebx,DWORD PTR [eax]
  44b161:	cmp    edi,DWORD PTR [edx]
  44b163:	cmp    edx,DWORD PTR [esi-0x1dc451c5]
  44b169:	cmp    edi,ebx
  44b16b:	cmp    edx,DWORD PTR [ebx]
  44b16d:	cmp    al,0x59
  44b16f:	cmp    al,0x6b
  44b171:	cmp    al,0x7c
  44b173:	cmp    al,0xaf
  44b175:	cmp    al,0xb4
  44b177:	cmp    al,0xcd
  44b179:	cmp    al,0xc
  44b17b:	cmp    eax,0x3d243d11
  44b180:	dec    esi
  44b181:	cmp    eax,0x3d823d5b
  44b186:	jmp    0x44b1c5
  44b188:	lock cmp eax,0x3e2d3e03
  44b18e:	cmp    bh,BYTE PTR [esi]
  44b190:	popa   
  44b191:	ds aad 0x3e
  44b194:	add    edi,DWORD PTR [edi]
  44b196:	inc    edx
  44b197:	aas    
  44b198:	outs   dx,BYTE PTR ds:[esi]
  44b199:	aas    
  44b19a:	stos   BYTE PTR es:[edi],al
  44b19b:	aas    
  44b19c:	les    edi,FWORD PTR [edi]
  44b19e:	aad    0x3f
  44b1a0:	repnz aas 
  44b1a2:	clc    
  44b1a3:	aas    
  44b1a4:	add    BYTE PTR [eax],dl
  44b1a6:	add    DWORD PTR [eax],eax
  44b1a8:	call   0x5d44b1ad
  44b1ad:	xor    BYTE PTR [esi+0x30],ch
  44b1b0:	jl     0x44b1e2
  44b1b2:	xchg   ecx,eax
  44b1b3:	xor    BYTE PTR [esi-0x4ecf54d0],bl
  44b1b9:	xor    cl,cl
  44b1bb:	xor    bh,bl
  44b1bd:	xor    cl,dh
  44b1bf:	xor    BYTE PTR [esi],bl
  44b1c1:	xor    DWORD PTR [edx],esi
  44b1c3:	xor    DWORD PTR [ecx+0x31],edx
  44b1c6:	xor    BYTE PTR [ecx],0x94
  44b1c9:	xor    DWORD PTR [edi+0x58322b31],esi
  44b1cf:	xor    ch,BYTE PTR [edi+0x32]
  44b1d2:	xchg   esi,eax
  44b1d3:	xor    ch,BYTE PTR [edx-0x29cd2fce]
  44b1d9:	xor    al,BYTE PTR [ebx+esi*1]
  44b1dc:	adc    esi,DWORD PTR [ebx]
  44b1de:	inc    eax
  44b1df:	xor    edx,DWORD PTR [ebx+esi*1+0x76]
  44b1e3:	xor    ecx,DWORD PTR [edi+0x5f33b233]
  44b1e9:	xor    al,0x73
  44b1eb:	xor    al,0x78
  44b1ed:	xor    al,0x8b
  44b1ef:	xor    al,0xf8
  44b1f1:	xor    al,0xd
  44b1f3:	xor    eax,0x3532351d
  44b1f8:	inc    edi
  44b1f9:	xor    eax,0x356a3559
  44b1fe:	jl     0x44b235
  44b200:	xchg   ebx,eax
  44b201:	xor    eax,0x35ab3598
  44b206:	shl    BYTE PTR ds:0x35f835dd,1
  44b20c:	and    BYTE PTR [esi],dh
  44b20e:	push   edi
  44b20f:	ss pop esp
  44b211:	ss nop
  44b213:	ss mov al,0x36
  44b216:	mov    edx,0x2a36ea36
  44b21b:	aaa    
  44b21c:	das    
  44b21d:	aaa    
  44b21e:	inc    edx
  44b21f:	aaa    
  44b220:	ins    BYTE PTR es:[edi],dx
  44b221:	aaa    
  44b222:	jbe    0x44b25b
  44b224:	xchg   edi,eax
  44b225:	aaa    
  44b226:	(bad)  [edi]
  44b228:	loopne 0x44b261
  44b22a:	push   cs
  44b22b:	cmp    BYTE PTR [esi],ch
  44b22d:	cmp    BYTE PTR [ebx],bh
  44b22f:	cmp    BYTE PTR [ecx-0x56c769c8],dl
  44b235:	cmp    bl,dl
  44b237:	cmp    ch,bl
  44b239:	cmp    BYTE PTR [ebp-0x4fc66ac7],al
  44b23f:	cmp    ecx,eax
  44b241:	cmp    DWORD PTR [edx],esp
  44b243:	cmp    ch,BYTE PTR [ecx+0x3a]
  44b246:	jp     0x44b282
  44b248:	(bad)  
  44b249:	cmp    bl,BYTE PTR [ebx+0x123b023a]
  44b24f:	cmp    ebp,DWORD PTR [ecx]
  44b251:	cmp    edi,DWORD PTR [ebx]
  44b253:	cmp    ecx,DWORD PTR [ebx+0x3b]
  44b256:	jmp    0xa73c:0x163bfc3b
  44b25d:	cmp    al,0x3
  44b25f:	cmp    eax,0x3d253d15
  44b264:	sar    BYTE PTR ds:0x3de63dde,1
  44b26a:	cli    
  44b26b:	cmp    eax,0x3e763e17
  44b270:	mov    BYTE PTR [esi],bh
  44b272:	scas   eax,DWORD PTR es:[edi]
  44b273:	ds mov dh,0x3e
  44b276:	leave  
  44b277:	sar    BYTE PTR ds:[esi],cl
  44b27a:	and    eax,0x403f343f
  44b27f:	aas    
  44b280:	imul   edi,DWORD PTR [edi],0x3fa03f8c
  44b286:	mov    esi,0xd73fcf3f
  44b28b:	aas    
  44b28c:	add    BYTE PTR [eax],ah
  44b28e:	add    DWORD PTR [eax],eax
  44b290:	mov    eax,0x24000000
  44b295:	xor    BYTE PTR [ecx+0x30],al
  44b298:	push   ecx
  44b299:	xor    BYTE PTR [edi+0x30],bh
  44b29c:	test   BYTE PTR [eax],dh
  44b29e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44b29f:	xor    dh,al
  44b2a1:	xor    bl,dl
  44b2a3:	xor    dl,ah
  44b2a5:	xor    cl,dh
  44b2a7:	xor    BYTE PTR [esi],cl
  44b2a9:	xor    DWORD PTR ds:0x4e312a31,edx
  44b2af:	xor    DWORD PTR [edx+0x31],esp
  44b2b2:	jne    0x44b2e5
  44b2b4:	shl    DWORD PTR [ecx],1
  44b2b6:	loopne 0x44b2e9
  44b2b8:	in     al,dx
  44b2b9:	xor    DWORD PTR [esi],ecx
  44b2bb:	xor    dh,BYTE PTR ds:0x56323b32
  44b2c1:	xor    cl,BYTE PTR [ecx-0x4bcd66ce]
  44b2c7:	xor    bh,BYTE PTR [ecx+0x2f332332]
  44b2cd:	xor    ebx,DWORD PTR [ecx+0x33]
  44b2d0:	imul   esi,DWORD PTR [ebx],0xffffff92
  44b2d3:	xor    esp,DWORD PTR [edx-0x3fcc4ccd]
  44b2d9:	xor    esi,DWORD PTR ds:0x4334a534
  44b2df:	aaa    
  44b2e0:	push   ecx
  44b2e1:	aaa    
  44b2e2:	jg     0x44b31b
  44b2e4:	shl    DWORD PTR [edi],cl
  44b2e6:	loop   0x44b31f
  44b2e8:	sub    edi,DWORD PTR [edx]
  44b2ea:	push   ebx
  44b2eb:	cmp    ah,BYTE PTR [ebp+0x3a]
  44b2ee:	mov    bh,BYTE PTR [edx]
  44b2f0:	mov    eax,ds:0xc43ab23a
  44b2f5:	cmp    bh,al
  44b2f7:	cmp    al,BYTE PTR [edx]
  44b2f9:	cmp    ecx,DWORD PTR ds:0xd23bc33b
  44b2ff:	cmp    ebx,edi
  44b301:	cmp    eax,DWORD PTR [ecx]
  44b303:	cmp    al,0xe
  44b305:	cmp    al,0x1d
  44b307:	cmp    al,0x30
  44b309:	cmp    al,0x3f
  44b30b:	cmp    al,0x46
  44b30d:	cmp    al,0x4b
  44b30f:	cmp    al,0x55
  44b311:	cmp    al,0x7e
  44b313:	cmp    al,0x83
  44b315:	cmp    al,0x95
  44b317:	cmp    al,0x9d
  44b319:	cmp    al,0xa2
  44b31b:	cmp    al,0xa8
  44b31d:	cmp    al,0xbc
  44b31f:	cmp    al,0xc6
  44b321:	cmp    al,0xd5
  44b323:	cmp    al,0xe8
  44b325:	cmp    al,0xf7
  44b327:	cmp    al,0xfe
  44b329:	cmp    al,0x3
  44b32b:	cmp    eax,0x3d363d0d
  44b330:	cmp    edi,DWORD PTR ds:0x3d803d73
  44b336:	sar    DWORD PTR ds:0x3eae3de2,cl
  44b33c:	xor    BYTE PTR [edi],bh
  44b33e:	jl     0x44b37f
  44b340:	mov    esp,0x3f
  44b345:	xor    BYTE PTR [ecx],al
  44b347:	add    ah,cl
  44b349:	add    BYTE PTR [eax],al
  44b34b:	add    BYTE PTR [eax],dl
  44b34d:	xor    BYTE PTR [esi-0x4bcf5ad0],cl
  44b353:	xor    bl,dh
  44b355:	xor    BYTE PTR [edx],al
  44b357:	xor    DWORD PTR [edi],ecx
  44b359:	xor    DWORD PTR [ecx],esi
  44b35b:	xor    DWORD PTR [esi],edi
  44b35d:	xor    DWORD PTR [ebp+0x31],ecx
  44b360:	pusha  
  44b361:	xor    DWORD PTR [edi+0x31],ebp
  44b364:	jbe    0x44b397
  44b366:	jnp    0x44b399
  44b368:	test   DWORD PTR [ecx],esi
  44b36a:	scas   al,BYTE PTR es:[edi]
  44b36b:	xor    DWORD PTR [ebx-0x2fce36cf],esi
  44b371:	xor    esp,esp
  44b373:	xor    esi,ebp
  44b375:	xor    ebp,edi
  44b377:	xor    DWORD PTR [eax],edx
  44b379:	xor    bl,BYTE PTR [edi]
  44b37b:	xor    ah,BYTE PTR [esi]
  44b37d:	xor    ch,BYTE PTR [ebx]
  44b37f:	xor    dh,BYTE PTR ds:0x63325e32
  44b385:	xor    ah,BYTE PTR [ebx+0x6e32b032]
  44b38b:	xor    edi,DWORD PTR [ecx-0x2ccc37cd]
  44b391:	xor    esp,edx
  44b393:	xor    ebp,edi
  44b395:	xor    edx,DWORD PTR [ecx]
  44b397:	xor    al,0x1e
  44b399:	xor    al,0x2d
  44b39b:	xor    al,0x40
  44b39d:	xor    al,0x4f
  44b39f:	xor    al,0x56
  44b3a1:	xor    al,0x5b
  44b3a3:	xor    al,0x65
  44b3a5:	xor    al,0x8e
  44b3a7:	xor    al,0x93
  44b3a9:	xor    al,0xa5
  44b3ab:	xor    al,0xad
  44b3ad:	xor    al,0xb2
  44b3af:	xor    al,0xb8
  44b3b1:	xor    al,0xcc
  44b3b3:	xor    al,0xd6
  44b3b5:	xor    al,0xe5
  44b3b7:	xor    al,0xf8
  44b3b9:	xor    al,0x7
  44b3bb:	xor    eax,0x3513350e
  44b3c0:	sbb    eax,0x4b354635
  44b3c5:	xor    eax,0x371035a4
  44b3ca:	and    al,0x37
  44b3cc:	pop    edi
  44b3cd:	aaa    
  44b3ce:	jno    0x44b407
  44b3d0:	call   0x7337:0xe937d537
  44b3d7:	cmp    BYTE PTR [eax+0x50392b38],al
  44b3dd:	cmp    DWORD PTR [edx+0xc39dd39],esp
  44b3e3:	cmp    bl,BYTE PTR [edx+edi*1-0x4f]
  44b3e7:	cmp    dl,BYTE PTR [ebx+0x3b]
  44b3ea:	mov    bl,0x3b
  44b3ec:	sar    DWORD PTR [ebx],0x17
  44b3ef:	cmp    al,0xd8
  44b3f1:	cmp    al,0x25
  44b3f3:	cmp    eax,0x3d643d39
  44b3f8:	jbe    0x44b437
  44b3fa:	cdq    
  44b3fb:	cmp    eax,0x3dc03db3
  44b400:	push   ebx
  44b401:	ds jae 0x44b442
  44b404:	test   DWORD PTR [esi],edi
  44b406:	mov    ds:0xc73eac3e,al
  44b40b:	ds aam 0x3e
  44b40e:	add    BYTE PTR [eax],al
  44b410:	add    BYTE PTR [eax+0x1],al
  44b413:	add    BYTE PTR [eax+0x0],ah
  44b416:	add    BYTE PTR [eax],al
  44b418:	and    dh,BYTE PTR [ecx]
  44b41a:	xor    DWORD PTR ss:[ebx+0x31],esi
  44b41e:	test   DWORD PTR [ecx],esi
  44b420:	mov    cl,0x31
  44b422:	sbb    esi,DWORD PTR [edx]
  44b424:	inc    esp
  44b425:	xor    bh,BYTE PTR [ebx-0x1acd29ce]
  44b42b:	xor    ch,BYTE PTR [esi*1+0x35d13598]
  44b432:	push   ds
  44b433:	ss xor eax,0xc8366336
  44b439:	ss pop es
  44b43b:	aaa    
  44b43c:	daa    
  44b43d:	aaa    
  44b43e:	ds aaa 
  44b440:	(bad)  
  44b441:	aaa    
  44b442:	fdiv   DWORD PTR [edi]
  44b444:	imul   edi,DWORD PTR [ebx],0x3b8a3b78
  44b44a:	xchg   esp,eax
  44b44b:	cmp    ebp,DWORD PTR [edi+0xa3bbc3b]
  44b451:	cmp    al,0xf
  44b453:	cmp    al,0x1c
  44b455:	cmp    al,0x5d
  44b457:	cmp    al,0x9a
  44b459:	cmp    al,0xef
  44b45b:	cmp    al,0x6e
  44b45d:	cmp    eax,0x3dec3d8f
  44b462:	xor    edi,DWORD PTR [esi]
  44b464:	inc    ebp
  44b465:	bound  edi,QWORD PTR ds:[esi]
  44b468:	ins    BYTE PTR es:[edi],dx
  44b469:	xchg   DWORD PTR ds:[esi],edi
  44b46c:	xchg   esp,eax
  44b46d:	add    BYTE PTR ds:[eax],al
  44b470:	add    BYTE PTR [eax+0x1],dl
  44b473:	add    BYTE PTR [eax+0x0],ah
  44b476:	add    BYTE PTR [eax],al
  44b478:	js     0x44b4aa
  44b47a:	aad    0x30
  44b47c:	jmp    0x2675c8b1
  44b481:	xor    DWORD PTR [ecx+0x31],ecx
  44b484:	xor    WORD PTR [eax+0x31],di
  44b488:	pop    esi
  44b489:	xor    al,0x7f
  44b48b:	xor    al,0xdc
  44b48d:	xor    al,0x38
  44b48f:	xor    eax,0x36283616
  44b494:	je     0x44b4cc
  44b496:	mov    dh,0x36
  44b498:	lds    esi,FWORD PTR [esi]
  44b49a:	or     al,0x39
  44b49c:	js     0x44b4d7
  44b49e:	mov    cl,0x39
  44b4a0:	(bad)  
  44b4a1:	cmp    DWORD PTR ds:0xb33a463a,edx
  44b4a7:	cmp    al,al
  44b4a9:	cmp    bl,dh
  44b4ab:	cmp    ah,ah
  44b4ad:	cmp    bh,cl
  44b4af:	cmp    cl,BYTE PTR [ebx]
  44b4b1:	cmp    esi,DWORD PTR [ebx]
  44b4b3:	cmp    eax,DWORD PTR [eax+0x3b]
  44b4b6:	bound  edi,QWORD PTR [ebx]
  44b4b8:	jo     0x44b4f5
  44b4ba:	cmp    DWORD PTR [ebx],0x3bb63ba3
  44b4c0:	sar    BYTE PTR [ebx],cl
  44b4c2:	fdivr  QWORD PTR [ebx]
  44b4c4:	idiv   DWORD PTR [ebx]
  44b4c6:	add    al,0x3c
  44b4c8:	inc    eax
  44b4c9:	ds jbe 0x44b50b
  44b4cc:	mov    BYTE PTR [edi],bh
  44b4ce:	xlat   BYTE PTR ds:[ebx]
  44b4cf:	aas    
  44b4d0:	add    BYTE PTR [eax+0x1],ah
  44b4d3:	add    BYTE PTR [eax+0x26000000],dl
  44b4d9:	xor    BYTE PTR [eax],bh
  44b4db:	xor    BYTE PTR [ebx],al
  44b4dd:	xor    edx,DWORD PTR [edx]
  44b4df:	xor    esp,DWORD PTR [ebx+esi*1]
  44b4e2:	xor    ecx,DWORD PTR cs:[ecx+0x33]
  44b4e6:	push   esi
  44b4e7:	xor    ebx,DWORD PTR [ebx-0x52cc5fcd]
  44b4ed:	xor    eax,ebx
  44b4ef:	xor    edx,esi
  44b4f1:	xor    esi,edx
  44b4f3:	xor    edi,esp
  44b4f5:	xor    edx,DWORD PTR [edi]
  44b4f7:	xor    al,0x24
  44b4f9:	xor    al,0x60
  44b4fb:	div    BYTE PTR ss:[esi]
  44b4fe:	xchg   BYTE PTR [edi],dh
  44b500:	push   ss
  44b501:	cmp    BYTE PTR [ecx],bl
  44b503:	cmp    DWORD PTR [edi],esp
  44b505:	cmp    DWORD PTR [edx-0x6bc678c7],eax
  44b50b:	cmp    DWORD PTR [ecx+edi*1+0x39d439c3],ebx
  44b512:	cwde   
  44b513:	cmp    dh,BYTE PTR [edx-0x1cc541c6]
  44b519:	cmp    dh,dl
  44b51b:	cmp    al,BYTE PTR [eax]
  44b51d:	cmp    eax,DWORD PTR [eax+0x3b]
  44b520:	jae    0x44b55d
  44b522:	cmp    BYTE PTR [ebx],0x8d
  44b525:	cmp    esp,DWORD PTR [ebx+edi*1+0x3c033bda]
  44b52c:	adc    bh,BYTE PTR [ebx*1-0x7cc3a0c4]
  44b533:	cmp    al,0x92
  44b535:	cmp    al,0x9e
  44b537:	cmp    al,0xb9
  44b539:	cmp    al,0xed
  44b53b:	cmp    al,0xfc
  44b53d:	cmp    al,0xe
  44b53f:	cmp    eax,0x3d423d33
  44b544:	dec    esi
  44b545:	cmp    eax,0x3db33d88
  44b54a:	ret    0xcd3d
  44b54d:	cmp    eax,0x3e1e3de4
  44b552:	dec    ebx
  44b553:	ds pop esi
  44b555:	arpl   WORD PTR ds:[esi],di
  44b558:	push   0x8a3e803e
  44b55d:	add    BYTE PTR ds:[eax],al
  44b560:	add    BYTE PTR [eax+0x1],dh
  44b563:	add    ah,cl
  44b565:	add    BYTE PTR [eax],al
  44b567:	add    BYTE PTR [edi],dh
  44b569:	xor    BYTE PTR [ecx-0x49cf57d0],bl
  44b56f:	xor    BYTE PTR [edi],dl
  44b571:	xor    DWORD PTR ds:0x40312e31,ebx
  44b577:	xor    DWORD PTR [ebp+0x931f731],esi
  44b57d:	xor    bl,BYTE PTR [esi]
  44b57f:	xor    dl,BYTE PTR [ebx+0x32]
  44b582:	bound  esi,QWORD PTR [edx]
  44b584:	ins    DWORD PTR es:[edi],dx
  44b585:	xor    ch,BYTE PTR [edi-0x1dcd2cce]
  44b58b:	xor    ch,dh
  44b58d:	xor    cl,BYTE PTR [ecx]
  44b58f:	xor    edi,DWORD PTR ds:0x5e334c33
  44b595:	xor    eax,DWORD PTR [ebx+0x34]
  44b598:	push   esp
  44b599:	xor    al,0x95
  44b59b:	xor    al,0xb4
  44b59d:	xor    al,0xe8
  44b59f:	xor    al,0x19
  44b5a1:	xor    eax,0x3553352b
  44b5a6:	popa   
  44b5a7:	xor    eax,0x35e235d3
  44b5ac:	pop    ss
  44b5ad:	ss dec edx
  44b5af:	ss popa 
  44b5b1:	ss jo  0x44b5ea
  44b5b4:	xchg   ebx,eax
  44b5b5:	mov    al,ss:0xf236d936
  44b5bb:	ss push ebx
  44b5bd:	aaa    
  44b5be:	popa   
  44b5bf:	aaa    
  44b5c0:	jp     0x44b5f9
  44b5c2:	shl    DWORD PTR [edi],0xf3
  44b5c5:	aaa    
  44b5c6:	add    bh,BYTE PTR [eax]
  44b5c8:	aaa    
  44b5c9:	cmp    BYTE PTR [ebp+0x38],ah
  44b5cc:	jge    0x44b606
  44b5ce:	xchg   esp,eax
  44b5cf:	cmp    BYTE PTR [ebx-0x2fc73cc8],ah
  44b5d5:	cmp    BYTE PTR [eax],dl
  44b5d7:	cmp    DWORD PTR [ecx],ebp
  44b5d9:	cmp    DWORD PTR [ebx+0x39],edx
  44b5dc:	bound  edi,QWORD PTR [ecx]
  44b5de:	mov    ds:0xdf39c839,al
  44b5e3:	cmp    esi,ebp
  44b5e5:	cmp    DWORD PTR [ebx],edx
  44b5e7:	cmp    ah,BYTE PTR [ecx]
  44b5e9:	cmp    bl,BYTE PTR [ebx+0x3a]
  44b5ec:	mov    bh,BYTE PTR [edx]
  44b5ee:	mov    bh,0x3a
  44b5f0:	sar    BYTE PTR [edx],cl
  44b5f2:	fdivr  DWORD PTR [edx]
  44b5f4:	push   ecx
  44b5f5:	cmp    al,0x56
  44b5f7:	cmp    al,0x63
  44b5f9:	cmp    al,0x3b
  44b5fb:	cmp    eax,0x3d633d41
  44b600:	jno    0x44b63f
  44b602:	xchg   ebp,eax
  44b603:	cmp    eax,0x3dd33daa
  44b608:	jecxz  0x44b647
  44b60a:	adc    edi,DWORD PTR [esi]
  44b60c:	sub    al,0x3e
  44b60e:	dec    edx
  44b60f:	ds pop esp
  44b611:	cmp    DWORD PTR ds:[esi],0xffffff91
  44b615:	ds mov esp,0x33ed83e
  44b61b:	aas    
  44b61c:	adc    DWORD PTR [edi],edi
  44b61e:	cmp    al,0x3f
  44b620:	pop    ebp
  44b621:	aas    
  44b622:	cmp    DWORD PTR [edi],0xffffff91
  44b625:	aas    
  44b626:	(bad)  
  44b627:	aas    
  44b628:	fnstsw WORD PTR [edi]
  44b62a:	add    BYTE PTR [eax],al
  44b62c:	add    BYTE PTR [eax+0x9c0001],al
  44b632:	add    BYTE PTR [eax],al
  44b634:	add    esi,DWORD PTR [eax]
  44b636:	adc    al,0x30
  44b638:	ins    DWORD PTR es:[edi],dx
  44b639:	xor    BYTE PTR [edi+0x30],dh
  44b63c:	jg     0x44b66e
  44b63e:	xchg   DWORD PTR [eax],esi
  44b640:	(bad)  
  44b641:	xor    BYTE PTR [ebx-0x31cf3dd0],dh
  44b647:	xor    bh,dh
  44b649:	xor    BYTE PTR [ebx+0x31],dl
  44b64c:	bound  esi,QWORD PTR [ecx]
  44b64e:	mov    esi,DWORD PTR [ecx]
  44b650:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44b651:	xor    ebx,ecx
  44b653:	xor    ebp,ebx
  44b655:	xor    DWORD PTR [ebx],eax
  44b657:	xor    cl,BYTE PTR [edi]
  44b659:	xor    bh,BYTE PTR [eax]
  44b65b:	xor    cl,BYTE PTR [edx+0x32]
  44b65e:	jae    0x44b692
  44b660:	jg     0x44b694
  44b662:	scas   eax,DWORD PTR es:[edi]
  44b663:	xor    al,cl
  44b665:	xor    ah,bl
  44b667:	xor    ch,bh
  44b669:	xor    bl,BYTE PTR [edi]
  44b66b:	xor    esi,DWORD PTR [ecx]
  44b66d:	xor    edx,DWORD PTR [ebx+0x33]
  44b670:	arpl   WORD PTR [ebx],si
  44b672:	xchg   edx,eax
  44b673:	xor    ebp,DWORD PTR [edi-0x2fcc41cd]
  44b679:	xor    edi,DWORD PTR ds:0x3734e134
  44b67f:	xor    eax,0x3549353c
  44b684:	push   ecx
  44b685:	xor    eax,0x35c3359d
  44b68a:	shl    DWORD PTR ds:0x36e936d3,cl
  44b690:	pop    ebx
  44b691:	cmp    DWORD PTR [eax+0x39],ebp
  44b694:	cmp    esi,DWORD PTR es:[esi]
  44b697:	cmp    esi,DWORD PTR [esi+0x3b]
  44b69a:	mov    dh,0x3b
  44b69c:	(bad)  
  44b69d:	cmp    eax,DWORD PTR [esi]
  44b69f:	cmp    al,0x52
  44b6a1:	cmp    al,0xf6
  44b6a3:	cmp    al,0x4
  44b6a5:	cmp    eax,0x3d733d4d
  44b6aa:	cmp    BYTE PTR ds:0x3e113e03,0x52
  44b6b1:	imul   edi,DWORD PTR ds:[esi],0x3f093ecd
  44b6b8:	sbb    al,0x3f
  44b6ba:	cmp    al,0x3f
  44b6bc:	dec    edi
  44b6bd:	aas    
  44b6be:	bound  edi,QWORD PTR [edi]
  44b6c0:	cmp    BYTE PTR [edi],0xb6
  44b6c3:	aas    
  44b6c4:	enter  0x3f,0x0
  44b6c8:	add    BYTE PTR [eax+0xc00001],dl
  44b6ce:	add    BYTE PTR [eax],al
  44b6d0:	or     BYTE PTR [eax],dh
  44b6d2:	inc    esi
  44b6d3:	xor    BYTE PTR [eax+0x30],bl
  44b6d6:	xchg   DWORD PTR [eax],esi
  44b6d8:	xchg   ecx,eax
  44b6d9:	xor    BYTE PTR [edi+0x2630f130],bl
  44b6df:	xor    DWORD PTR [ebx+0x31],edx
  44b6e2:	popa   
  44b6e3:	xor    DWORD PTR [ecx-0x1cce3fcf],ebp
  44b6e9:	xor    ecx,esi
  44b6eb:	xor    DWORD PTR [edx],edx
  44b6ed:	xor    al,BYTE PTR [eax+0x32]
  44b6f0:	jae    0x44b724
  44b6f2:	xor    DWORD PTR [edx],0xffffffa0
  44b6f5:	xor    bl,bh
  44b6f7:	xor    ch,ah
  44b6f9:	xor    al,BYTE PTR [edi+0x33]
  44b6fc:	jbe    0x44b731
  44b6fe:	mov    BYTE PTR [ebx],dh
  44b700:	mov    esp,0xd633c633
  44b705:	xor    eax,DWORD PTR [esp+esi*1-0x78]
  44b709:	xor    al,0xb6
  44b70b:	xor    al,0xc8
  44b70d:	xor    al,0x2
  44b70f:	xor    eax,0x35533524
  44b714:	pusha  
  44b715:	xor    eax,0x359b358d
  44b71a:	lods   al,BYTE PTR ds:[esi]
  44b71b:	xor    eax,0x35e835d6
  44b720:	div    BYTE PTR [esi]
  44b722:	or     BYTE PTR [edi],dh
  44b724:	inc    edx
  44b725:	aaa    
  44b726:	fs aaa 
  44b728:	shl    BYTE PTR [edi],1
  44b72a:	div    DWORD PTR [edi]
  44b72c:	add    DWORD PTR [eax],edi
  44b72e:	push   cs
  44b72f:	cmp    BYTE PTR [eax+0x38],dh
  44b732:	jecxz  0x44b76d
  44b734:	out    dx,eax
  44b735:	cmp    ebx,esi
  44b737:	cmp    al,BYTE PTR ds:0x863b7c3b
  44b73d:	cmp    ecx,DWORD PTR [esi-0x61c469c5]
  44b743:	cmp    ecx,esi
  44b745:	cmp    ebx,DWORD PTR [edx+0x3c]
  44b748:	(bad)  
  44b749:	cmp    al,0x17
  44b74b:	cmp    eax,0x3d303d2b
  44b750:	cmp    eax,0x613d453d
  44b755:	cmp    eax,0x3db53d77
  44b75a:	mov    edx,0xcf3dc73d
  44b75f:	cmp    eax,0x3e153dec
  44b764:	sbb    bh,BYTE PTR [esi]
  44b766:	daa    
  44b767:	ds das 
  44b769:	ds ins DWORD PTR es:[edi],dx
  44b76b:	ds jb  0x44b7ac
  44b76e:	jg     0x44b7ae
  44b770:	xchg   DWORD PTR [esi],edi
  44b772:	sar    BYTE PTR [esi],cl
  44b774:	xlat   BYTE PTR ds:[ebx]
  44b775:	ds in  al,0x3e
  44b778:	in     al,dx
  44b779:	ds fs aas 
  44b77c:	imul   edi,DWORD PTR [edi],0x3f7e3f76
  44b782:	jmp    0x3f:0xfc3fef3f
  44b789:	mov    al,ds:0x800001
  44b78e:	add    BYTE PTR [eax],al
  44b790:	add    al,0x30
  44b792:	sbb    DWORD PTR [eax],esi
  44b794:	push   ds
  44b795:	xor    BYTE PTR [ebx],ch
  44b797:	xor    BYTE PTR [ebx],dh
  44b799:	xor    BYTE PTR [ebx+0x30],dl
  44b79c:	xor    BYTE PTR gs:[ebx],dh
  44b79f:	xor    DWORD PTR [edx+0x31],eax
  44b7a2:	ret    
  44b7a3:	xor    ebp,edx
  44b7a5:	xor    esi,edx
  44b7a7:	xor    cl,BYTE PTR [ebp+0x34]
  44b7aa:	xor    DWORD PTR [esi],0xffffff92
  44b7ad:	ss out 0x36,eax
  44b7b0:	adc    esi,DWORD PTR [edi]
  44b7b2:	and    DWORD PTR [edi],esi
  44b7b4:	pop    ebp
  44b7b5:	aaa    
  44b7b6:	outs   dx,DWORD PTR ds:[esi]
  44b7b7:	aaa    
  44b7b8:	xor    DWORD PTR [edi],0xffffffe5
  44b7bb:	aaa    
  44b7bc:	and    edi,DWORD PTR [eax]
  44b7be:	xor    DWORD PTR [eax],edi
  44b7c0:	je     0x44b7fa
  44b7c2:	test   DWORD PTR [eax],edi
  44b7c4:	cdq    
  44b7c5:	cmp    BYTE PTR [edx-0x2fc73bc8],bh
  44b7cb:	cmp    al,ch
  44b7cd:	cmp    BYTE PTR [edi],cl
  44b7cf:	cmp    DWORD PTR [ecx],edi
  44b7d1:	cmp    eax,DWORD PTR [esi+0x3b]
  44b7d4:	push   ebx
  44b7d5:	cmp    eax,DWORD PTR [esi-0x59c467c5]
  44b7db:	cmp    al,0xb5
  44b7dd:	cmp    al,0xdd
  44b7df:	cmp    al,0xb
  44b7e1:	cmp    eax,0x3d343d17
  44b7e6:	push   esp
  44b7e7:	cmp    eax,0x3d953d86
  44b7ec:	mov    ebp,0xf73deb3d
  44b7f1:	cmp    eax,0x3e343e14
  44b7f6:	arpl   WORD PTR [esi],di
  44b7f8:	jb     0x44b838
  44b7fa:	cmp    DWORD PTR [esi],0x3eeb3edd
  44b800:	idiv   BYTE PTR [esi]
  44b802:	push   ss
  44b803:	aas    
  44b804:	push   eax
  44b805:	aas    
  44b806:	add    BYTE PTR [eax],al
  44b808:	add    BYTE PTR [eax+0xc00001],dh
  44b80e:	add    BYTE PTR [eax],al
  44b810:	or     dh,BYTE PTR [eax]
  44b812:	cmp    BYTE PTR [eax],dh
  44b814:	inc    edx
  44b815:	xor    BYTE PTR [ebp+0x30],dl
  44b818:	pop    edi
  44b819:	xor    BYTE PTR [ebx+0x2630ec30],dl
  44b81f:	xor    ch,BYTE PTR [edx+esi*1]
  44b822:	bound  esi,QWORD PTR [edx]
  44b824:	sahf   
  44b825:	xor    bh,bh
  44b827:	xor    dh,BYTE PTR [esi]
  44b829:	xor    edi,DWORD PTR [ebx+esi*1]
  44b82c:	jb     0x44b861
  44b82e:	shl    BYTE PTR [ebx],0xe
  44b831:	xor    al,0x58
  44b833:	xor    al,0x5e
  44b835:	xor    al,0x70
  44b837:	xor    al,0x93
  44b839:	xor    al,0xa2
  44b83b:	xor    al,0x13
  44b83d:	xor    eax,0x36043523
  44b842:	or     dh,BYTE PTR [esi]
  44b844:	cs ss push ebx
  44b847:	ss popa 
  44b849:	ss scas al,BYTE PTR es:[edi]
  44b84b:	ss or  eax,0x40373a37
  44b851:	aaa    
  44b852:	pusha  
  44b853:	aaa    
  44b854:	xor    DWORD PTR [edi],0xffffff92
  44b857:	aaa    
  44b858:	call   0x7e7d0694
  44b85d:	cmp    BYTE PTR [eax+edi*1+0x38dd38a7],al
  44b864:	cld    
  44b865:	cmp    BYTE PTR [edx],cl
  44b867:	cmp    edi,eax
  44b869:	cmp    edi,edx
  44b86b:	cmp    esi,esi
  44b86d:	cmp    DWORD PTR [eax],ecx
  44b86f:	cmp    dl,BYTE PTR [edi]
  44b871:	cmp    ch,BYTE PTR [ecx+0x3a]
  44b874:	jp     0x44b8b0
  44b876:	mov    BYTE PTR [edx],bh
  44b878:	xchg   esi,eax
  44b879:	cmp    dh,BYTE PTR [esi-0x37c544c6]
  44b87f:	cmp    dl,al
  44b881:	cmp    ah,bl
  44b883:	cmp    ch,al
  44b885:	cmp    dh,ch
  44b887:	cmp    bh,ch
  44b889:	cmp    dl,BYTE PTR [eax]
  44b88b:	cmp    edx,DWORD PTR ds:0x2a3b223b
  44b891:	cmp    edi,DWORD PTR [edi]
  44b893:	cmp    eax,DWORD PTR [ebx+edi*1+0x51]
  44b897:	cmp    ebx,DWORD PTR [ecx+0x3b]
  44b89a:	mov    bh,BYTE PTR [ebx]
  44b89c:	cwde   
  44b89d:	cmp    ecx,DWORD PTR [edx]
  44b89f:	cmp    al,0x18
  44b8a1:	cmp    al,0x28
  44b8a3:	cmp    al,0x37
  44b8a5:	cmp    al,0x4b
  44b8a7:	cmp    al,0x50
  44b8a9:	cmp    al,0x5d
  44b8ab:	cmp    al,0x65
  44b8ad:	cmp    al,0x87
  44b8af:	cmp    al,0x8c
  44b8b1:	cmp    al,0x99
  44b8b3:	cmp    al,0xa1
  44b8b5:	cmp    al,0x93
  44b8b7:	cmp    eax,0x3e463da1
  44b8bc:	pop    eax
  44b8bd:	ds inc ebx
  44b8bf:	aas    
  44b8c0:	push   esi
  44b8c1:	aas    
  44b8c2:	in     eax,0x3f
  44b8c4:	repnz aas 
  44b8c6:	add    BYTE PTR [eax],al
  44b8c8:	add    al,al
  44b8ca:	add    DWORD PTR [eax],eax
  44b8cc:	xchg   esp,eax
  44b8cd:	add    BYTE PTR [eax],al
  44b8cf:	add    BYTE PTR [edi],al
  44b8d1:	xor    BYTE PTR [eax+esi*1-0x6e],ah
  44b8d5:	xor    dl,ah
  44b8d7:	xor    BYTE PTR ds:0x8f316e31,bl
  44b8dd:	xor    DWORD PTR [esi-0x2ece3fcf],esp
  44b8e3:	xor    ebx,esi
  44b8e5:	xor    al,0x2
  44b8e7:	xor    eax,0x35ad3511
  44b8ec:	mov    ebx,0x135c935
  44b8f1:	ss push cs
  44b8f3:	sbb    esi,DWORD PTR ss:[esi]
  44b8f6:	dec    ebx
  44b8f7:	ss pop ecx
  44b8f9:	ss addr16 ss xchg ecx,eax
  44b8fd:	mov    ss:0x336b836,eax
  44b903:	aaa    
  44b904:	adc    esi,DWORD PTR [edi]
  44b906:	xchg   ebx,eax
  44b907:	aaa    
  44b908:	mov    eax,ds:0xfc37e137
  44b90d:	aaa    
  44b90e:	and    edi,DWORD PTR [eax]
  44b910:	xor    DWORD PTR [eax],edi
  44b912:	js     0x44b94c
  44b914:	xchg   ebx,eax
  44b915:	cmp    BYTE PTR ds:0x53393339,dl
  44b91b:	cmp    DWORD PTR [edi+0x39],ebp
  44b91e:	nop
  44b91f:	cmp    DWORD PTR [edx-0x70c5b9c7],edi
  44b925:	cmp    bl,BYTE PTR [edx+edi*1+0x3b533aa9]
  44b92c:	popa   
  44b92d:	cmp    edx,DWORD PTR [ebp-0x21c348c4]
  44b933:	cmp    al,0xe5
  44b935:	cmp    al,0xb6
  44b937:	cmp    eax,0x3de23dd1
  44b93c:	cld    
  44b93d:	cmp    eax,0x3e343e2f
  44b942:	inc    ecx
  44b943:	ds dec ecx
  44b945:	ds pusha 
  44b947:	ds fs ds push 0x703e6c3e
  44b94f:	ds je  0x44b990
  44b952:	in     eax,0x3e
  44b954:	pop    es
  44b955:	aas    
  44b956:	cs aas 
  44b958:	xor    eax,0x3f
  44b95d:	rol    BYTE PTR [ecx],1
  44b95f:	add    BYTE PTR [eax+eax*1+0x30060000],ah
  44b966:	and    DWORD PTR [eax],esi
  44b968:	xor    dh,BYTE PTR [eax]
  44b96a:	dec    esp
  44b96b:	xor    BYTE PTR [edi+0x30],bh
  44b96e:	test   BYTE PTR [eax],dh
  44b970:	xchg   ecx,eax
  44b971:	xor    BYTE PTR [ecx-0x4bcf4fd0],bl
  44b977:	xor    BYTE PTR [eax-0x3fcf43d0],bh
  44b97d:	xor    ah,al
  44b97f:	xor    dh,ch
  44b981:	xor    DWORD PTR [ebx+0x33339233],eax
  44b987:	xor    al,0x44
  44b989:	xor    al,0x33
  44b98b:	xor    eax,0x35503542
  44b990:	mov    DWORD PTR ds:0x35a33596,esi
  44b996:	mov    esp,0xd735c935
  44b99b:	xor    eax,0x36363623
  44b9a0:	mov    ds:0xbd36b036,eax
  44b9a5:	ss cld 
  44b9a7:	or     DWORD PTR ss:[edi],esi
  44b9aa:	push   ss
  44b9ab:	aaa    
  44b9ac:	bound  esi,QWORD PTR [edi]
  44b9ae:	jno    0x44b9e7
  44b9b0:	xor    DWORD PTR [edi],0xffffffa3
  44b9b3:	aaa    
  44b9b4:	mov    dl,0x37
  44b9b6:	arpl   WORD PTR [eax],di
  44b9b8:	jno    0x44b9f2
  44b9ba:	(bad)  
  44b9bb:	cmp    ch,bl
  44b9bd:	cmp    BYTE PTR [ecx+edi*1],al
  44b9c0:	and    edi,DWORD PTR [ecx]
  44b9c2:	xor    DWORD PTR [ecx],edi
  44b9c4:	lea    edi,[ecx]
  44b9c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44b9c7:	cmp    ebx,ecx
  44b9c9:	cmp    DWORD PTR [edx],ecx
  44b9cb:	cmp    dh,BYTE PTR [ecx]
  44b9cd:	cmp    al,BYTE PTR [esi+0x3a]
  44b9d0:	cmp    DWORD PTR [ebx],0xffffff91
  44b9d3:	cmp    ebp,DWORD PTR [edx-0x39c447c5]
  44b9d9:	cmp    edi,esi
  44b9db:	cmp    eax,DWORD PTR ds:0xf43cd93c
  44b9e1:	cmp    al,0x5
  44b9e3:	cmp    eax,0x3d4b3d1d
  44b9e8:	fs cmp eax,0x3d763d69
  44b9ee:	jle    0x44ba2d
  44b9f0:	mov    WORD PTR ds:0x3d943d90,?
  44b9f6:	cwde   
  44b9f7:	cmp    eax,0x3da03d9c
  44b9fc:	lods   eax,DWORD PTR ds:[esi]
  44b9fd:	aas    
  44b9fe:	repz aas 
  44ba00:	add    al,ah
  44ba02:	add    DWORD PTR [eax],eax
  44ba04:	je     0x44ba06
  44ba06:	add    BYTE PTR [eax],al
  44ba08:	add    dh,BYTE PTR [eax]
  44ba0a:	jae    0x44ba3c
  44ba0c:	mov    bl,0x30
  44ba0e:	(bad)  
  44ba0f:	xor    BYTE PTR [ebx],ah
  44ba11:	xor    cl,BYTE PTR [edx+0x32]
  44ba14:	jno    0x44ba48
  44ba16:	push   cs
  44ba17:	xor    edi,DWORD PTR [ecx]
  44ba19:	xor    edx,ebx
  44ba1b:	xor    esp,esp
  44ba1d:	xor    ecx,DWORD PTR [ecx+0x34]
  44ba20:	push   esi
  44ba21:	xor    al,0x63
  44ba23:	xor    al,0x97
  44ba25:	xor    al,0xa5
  44ba27:	xor    al,0xb3
  44ba29:	xor    al,0xd9
  44ba2b:	xor    al,0xe8
  44ba2d:	xor    al,0xfa
  44ba2f:	xor    al,0x23
  44ba31:	xor    eax,0x35b33532
  44ba36:	shl    DWORD PTR ds:0x3622360a,0x43
  44ba3d:	ss push ecx
  44ba3f:	mov    eax,ss:0x1436b936
  44ba45:	aaa    
  44ba46:	inc    ebx
  44ba47:	aaa    
  44ba48:	push   edx
  44ba49:	aaa    
  44ba4a:	popf   
  44ba4b:	aaa    
  44ba4c:	mov    ds:0xd337c737,eax
  44ba51:	cmp    dl,ah
  44ba53:	cmp    BYTE PTR [esi-0x31c657c7],dl
  44ba59:	cmp    ecx,esp
  44ba5b:	cmp    DWORD PTR [ebx],eax
  44ba5d:	cmp    edx,DWORD PTR [ebx]
  44ba5f:	cmp    eax,DWORD PTR [eax+0x3b]
  44ba62:	dec    ebp
  44ba63:	cmp    ebx,DWORD PTR [edx+0x3b]
  44ba66:	xor    edi,DWORD PTR [edx+eax*2]
  44ba69:	cmp    al,0x44
  44ba6b:	cmp    eax,0x3d623d53
  44ba70:	mov    ?,WORD PTR [edi]
  44ba72:	xchg   edi,eax
  44ba73:	aas    
  44ba74:	add    al,dh
  44ba76:	add    DWORD PTR [eax],eax
  44ba78:	cwde   
  44ba79:	add    DWORD PTR [eax],eax
  44ba7b:	add    BYTE PTR [edx],cl
  44ba7d:	xor    BYTE PTR [ebx],dl
  44ba7f:	xor    BYTE PTR [ebx],dh
  44ba81:	xor    BYTE PTR [ecx+0x30],al
  44ba84:	xor    BYTE PTR gs:[ebp+0x30],dh
  44ba88:	ret    
  44ba89:	xor    al,dl
  44ba8b:	xor    cl,ch
  44ba8d:	xor    dl,bh
  44ba8f:	xor    BYTE PTR [eax],al
  44ba91:	xor    DWORD PTR [ebx],ebp
  44ba93:	xor    DWORD PTR [edx+0x31],ebp
  44ba96:	jp     0x44bac9
  44ba98:	mov    ecx,0xec31d431
  44ba9d:	xor    DWORD PTR [ecx+0x32],edi
  44baa0:	mov    bh,0x32
  44baa2:	add    DWORD PTR [ebx],esi
  44baa4:	push   ss
  44baa5:	xor    edi,DWORD PTR [ebx+esi*1+0x25]
  44baa9:	xor    al,0x4b
  44baab:	xor    al,0x97
  44baad:	xor    al,0xe1
  44baaf:	xor    al,0xf6
  44bab1:	xor    al,0x5c
  44bab3:	xor    eax,0x362f3605
  44bab8:	ds ss dec esi
  44babb:	ss push ebp
  44babd:	ss fwait
  44babf:	ss ret 
  44bac1:	shl    BYTE PTR ss:[esi],cl
  44bac4:	fnsave [esi]
  44bac6:	lock ss std 
  44bac9:	ss push cs
  44bacb:	aaa    
  44bacc:	and    al,0x37
  44bace:	dec    eax
  44bacf:	aaa    
  44bad0:	jae    0x44bb09
  44bad2:	xor    BYTE PTR [edi],0x8d
  44bad5:	aaa    
  44bad6:	mov    al,ds:0xb637b137
  44badb:	aaa    
  44badc:	mov    edi,0xe137ce37
  44bae1:	aaa    
  44bae2:	lock aaa 
  44bae4:	div    DWORD PTR [edi]
  44bae6:	cld    
  44bae7:	aaa    
  44bae8:	push   es
  44bae9:	cmp    BYTE PTR [edi],ch
  44baeb:	cmp    BYTE PTR [eax+edi*1],dh
  44baee:	inc    ebx
  44baef:	cmp    BYTE PTR [eax+0x38],cl
  44baf2:	dec    esi
  44baf3:	cmp    BYTE PTR [ebx+0x38],dl
  44baf6:	pop    ecx
  44baf7:	cmp    BYTE PTR [esi+0x38],bl
  44bafa:	jo     0x44bb34
  44bafc:	jne    0x44bb36
  44bafe:	jle    0x44bb38
  44bb00:	lea    edi,[eax]
  44bb02:	mov    al,ds:0xb638af38
  44bb07:	cmp    BYTE PTR [ebx-0x11c73ac8],bh
  44bb0d:	cmp    bl,dh
  44bb0f:	cmp    BYTE PTR [ebx],dh
  44bb11:	cmp    DWORD PTR [eax+0x39],eax
  44bb14:	push   ebp
  44bb15:	cmp    DWORD PTR [ebx+0x39],esp
  44bb18:	ins    DWORD PTR es:[edi],dx
  44bb19:	cmp    DWORD PTR [eax-0x72c679c7],eax
  44bb1f:	cmp    DWORD PTR [ebp-0x5bc664c7],edx
  44bb25:	cmp    DWORD PTR [edx-0x1fc62cc7],esi
  44bb2b:	cmp    edx,esi
  44bb2d:	cmp    edx,edi
  44bb2f:	cmp    DWORD PTR [eax],eax
  44bb31:	cmp    al,BYTE PTR ds:0x183a133a
  44bb37:	cmp    ah,BYTE PTR [ebx]
  44bb39:	cmp    ch,BYTE PTR [eax]
  44bb3b:	cmp    dh,BYTE PTR [ebx]
  44bb3d:	cmp    bh,BYTE PTR [eax]
  44bb3f:	cmp    al,BYTE PTR [ebx+0x3a]
  44bb42:	dec    eax
  44bb43:	cmp    ah,BYTE PTR [ebx+0x3a]
  44bb46:	jo     0x44bb82
  44bb48:	test   DWORD PTR [edx],edi
  44bb4a:	mov    bh,BYTE PTR [edx]
  44bb4c:	cwde   
  44bb4d:	cmp    bl,BYTE PTR [ebp-0x52c557c6]
  44bb53:	cmp    bh,BYTE PTR [eax-0x37c542c6]
  44bb59:	cmp    cl,ch
  44bb5b:	cmp    bl,bl
  44bb5d:	cmp    dh,dl
  44bb5f:	cmp    al,BYTE PTR [edi]
  44bb61:	cmp    esp,DWORD PTR [ebx]
  44bb63:	cmp    esi,DWORD PTR [ebx]
  44bb65:	cmp    ecx,DWORD PTR [ebx+0x3b]
  44bb68:	push   ebx
  44bb69:	cmp    ebx,DWORD PTR [eax+0x3b]
  44bb6c:	cmp    bp,WORD PTR [ebx+0x3b]
  44bb70:	cmp    DWORD PTR [ebx],0x3b9d3b8e
  44bb76:	stos   BYTE PTR es:[edi],al
  44bb77:	cmp    esi,DWORD PTR [ebp-0x39c444c5]
  44bb7d:	cmp    edx,esp
  44bb7f:	cmp    esp,esi
  44bb81:	cmp    ebp,ebx
  44bb83:	cmp    eax,DWORD PTR [ebx]
  44bb85:	cmp    al,0x12
  44bb87:	cmp    al,0x25
  44bb89:	cmp    al,0x2d
  44bb8b:	cmp    al,0x3e
  44bb8d:	cmp    al,0x47
  44bb8f:	cmp    al,0x55
  44bb91:	cmp    al,0x67
  44bb93:	cmp    al,0x6c
  44bb95:	cmp    al,0x83
  44bb97:	cmp    al,0x92
  44bb99:	cmp    al,0xa5
  44bb9b:	cmp    al,0xae
  44bb9d:	cmp    al,0xb4
  44bb9f:	cmp    al,0xc2
  44bba1:	cmp    al,0xc7
  44bba3:	cmp    al,0xdd
  44bba5:	cmp    al,0xe5
  44bba7:	cmp    al,0xf6
  44bba9:	cmp    al,0xff
  44bbab:	cmp    al,0xd
  44bbad:	cmp    eax,0x3d243d1f
  44bbb2:	inc    ebx
  44bbb3:	cmp    eax,0x3d653d52
  44bbb8:	outs   dx,BYTE PTR ds:[esi]
  44bbb9:	cmp    eax,0x3d823d74
  44bbbe:	xchg   DWORD PTR ds:0x3da53d9d,edi
  44bbc4:	mov    dh,0x3d
  44bbc6:	mov    edi,0xdf3dcd3d
  44bbcb:	cmp    eax,0x3e033de4
  44bbd0:	adc    bh,BYTE PTR [esi]
  44bbd2:	and    eax,0x343e2e3e
  44bbd7:	ds inc edx
  44bbd9:	ds inc edi
  44bbdb:	ds pop ebp
  44bbdd:	ds gs ds jbe 0x44bc20
  44bbe2:	jg     0x44bc22
  44bbe4:	lea    edi,[esi]
  44bbe6:	lahf   
  44bbe7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44bbe9:	ds ret 
  44bbeb:	sar    BYTE PTR ds:[esi],cl
  44bbee:	in     al,0x3e
  44bbf0:	out    dx,al
  44bbf1:	ds repz ds add eax,0x3c3f323f
  44bbf9:	aas    
  44bbfa:	dec    esi
  44bbfb:	aas    
  44bbfc:	push   esi
  44bbfd:	aas    
  44bbfe:	jns    0x44bc3f
  44bc00:	mov    bh,BYTE PTR [edi]
  44bc02:	popf   
  44bc03:	aas    
  44bc04:	fdivr  QWORD PTR [edi]
  44bc06:	loope  0x44bc47
  44bc08:	hlt    
  44bc09:	aas    
  44bc0a:	add    BYTE PTR [eax],al
  44bc0c:	add    BYTE PTR [eax],al
  44bc0e:	add    al,BYTE PTR [eax]
  44bc10:	cmp    al,0x1
  44bc12:	add    BYTE PTR [eax],al
  44bc14:	or     eax,0x48304330
  44bc19:	xor    BYTE PTR [ebx+0x30],bl
  44bc1c:	mov    ds:0xbf30b230,eax
  44bc21:	xor    cl,dl
  44bc23:	xor    dh,dl
  44bc25:	xor    ch,dh
  44bc27:	xor    dl,bh
  44bc29:	xor    BYTE PTR ds:0x3d313331,cl
  44bc2f:	xor    DWORD PTR [edx+0x31],eax
  44bc32:	push   esp
  44bc33:	xor    DWORD PTR [ecx-0x62ce74cf],eax
  44bc39:	xor    DWORD PTR [ebp+0x36322331],esp
  44bc3f:	xor    dl,BYTE PTR [ebx+0x32]
  44bc42:	xor    dl,BYTE PTR gs:[ebx-0x46cd67ce]
  44bc49:	xor    ah,bl
  44bc4b:	xor    dh,cl
  44bc4d:	xor    bh,ch
  44bc4f:	xor    cl,BYTE PTR [ecx]
  44bc51:	xor    edx,DWORD PTR ds:0x53332733
  44bc57:	xor    esp,DWORD PTR [eax+0x33]
  44bc5a:	xor    BYTE PTR [ebx],0xb3
  44bc5d:	xor    eax,edx
  44bc5f:	xor    ecx,edi
  44bc61:	xor    esi,ecx
  44bc63:	xor    edi,esi
  44bc65:	xor    ecx,DWORD PTR ds:0x2f342034
  44bc6b:	xor    al,0x36
  44bc6d:	xor    al,0x3b
  44bc6f:	xor    al,0x45
  44bc71:	xor    al,0x6e
  44bc73:	xor    al,0x73
  44bc75:	xor    al,0x85
  44bc77:	xor    al,0x8d
  44bc79:	xor    al,0x92
  44bc7b:	xor    al,0x98
  44bc7d:	xor    al,0xac
  44bc7f:	xor    al,0xb6
  44bc81:	xor    al,0xc5
  44bc83:	xor    al,0xd8
  44bc85:	xor    al,0xe7
  44bc87:	xor    al,0xee
  44bc89:	xor    al,0xf3
  44bc8b:	xor    al,0xfd
  44bc8d:	xor    al,0x26
  44bc8f:	xor    eax,0x3568352b
  44bc94:	outs   dx,BYTE PTR ds:[esi]
  44bc95:	xor    eax,0x35983576
  44bc9a:	sahf   
  44bc9b:	xor    eax,0x35b335a7
  44bca0:	lds    esi,FWORD PTR ds:0x35f735d7
  44bca6:	push   cs
  44bca7:	adc    esi,DWORD PTR ss:[esi]
  44bcaa:	sub    esi,DWORD PTR [esi]
  44bcac:	xor    BYTE PTR [esi],dh
  44bcae:	inc    ebp
  44bcaf:	ss data16 mov BYTE PTR ss:[esi],dh
  44bcb4:	stos   BYTE PTR es:[edi],al
  44bcb5:	ss (bad) 
  44bcb7:	ss out 0x36,al
  44bcba:	jo     0x44bcf3
  44bcbc:	xchg   edi,eax
  44bcbd:	aaa    
  44bcbe:	iret   
  44bcbf:	aaa    
  44bcc0:	in     al,0x37
  44bcc2:	stc    
  44bcc3:	aaa    
  44bcc4:	push   cs
  44bcc5:	cmp    BYTE PTR [esi],ch
  44bcc7:	cmp    BYTE PTR [eax],bh
  44bcc9:	cmp    BYTE PTR [ebp+0x38],al
  44bccc:	dec    edx
  44bccd:	cmp    BYTE PTR [edi+0x38],bl
  44bcd0:	cmp    BYTE PTR fs:[ecx+0x38],bh
  44bcd4:	cdq    
  44bcd5:	cmp    BYTE PTR [ebx+0xb38da38],bh
  44bcdb:	cmp    DWORD PTR [eax],esp
  44bcdd:	cmp    DWORD PTR [ecx+edi*1-0x23],eax
  44bce1:	cmp    DWORD PTR [edx+edi*1],eax
  44bce4:	cmp    al,0x3a
  44bce6:	push   ecx
  44bce7:	cmp    ah,BYTE PTR [ebx+0x3a]
  44bcea:	jne    0x44bd26
  44bcec:	xchg   edx,eax
  44bced:	cmp    dh,dl
  44bcef:	cmp    al,BYTE PTR [edi]
  44bcf1:	cmp    ebx,DWORD PTR [ebx+edi*1]
  44bcf4:	xor    DWORD PTR [ebx],edi
  44bcf6:	jns    0x44bd33
  44bcf8:	mov    ebp,0xf23bdd3b
  44bcfd:	cmp    eax,DWORD PTR [edi]
  44bcff:	cmp    al,0x1c
  44bd01:	cmp    al,0x31
  44bd03:	cmp    al,0x46
  44bd05:	cmp    al,0x5b
  44bd07:	cmp    al,0x70
  44bd09:	cmp    al,0x85
  44bd0b:	cmp    al,0xd7
  44bd0d:	cmp    al,0xec
  44bd0f:	cmp    al,0x1
  44bd11:	cmp    eax,0x3d363d16
  44bd16:	dec    ebx
  44bd17:	cmp    eax,0x3d753d60
  44bd1c:	mov    bh,BYTE PTR ds:0x3db43d9f
  44bd22:	leave  
  44bd23:	cmp    eax,0x3e133dde
  44bd28:	and    BYTE PTR [esi],bh
  44bd2a:	inc    edx
  44bd2b:	ds push eax
  44bd2d:	ds pusha 
  44bd2f:	ds xchg ebx,eax
  44bd31:	mov    al,ds:0xf33eb93e
  44bd37:	ds add al,0x3f
  44bd3a:	dec    ecx
  44bd3b:	aas    
  44bd3c:	jae    0x44bd7d
  44bd3e:	cmp    BYTE PTR [edi],0xa2
  44bd41:	aas    
  44bd42:	jecxz  0x44bd83
  44bd44:	icebp  
  44bd45:	aas    
  44bd46:	add    BYTE PTR [eax],al
  44bd48:	add    BYTE PTR [eax],dl
  44bd4a:	add    al,BYTE PTR [eax]
  44bd4c:	or     al,0x1
  44bd4e:	add    BYTE PTR [eax],al
  44bd50:	or     eax,0x55304330
  44bd55:	xor    BYTE PTR [edi+0x30],ah
  44bd58:	xchg   ecx,eax
  44bd59:	xor    BYTE PTR [esi+0xa30f530],bh
  44bd5f:	xor    DWORD PTR [esi],ebx
  44bd61:	xor    DWORD PTR [ecx],ebp
  44bd63:	xor    DWORD PTR [ecx+esi*1],edi
  44bd66:	pop    ebp
  44bd67:	xor    DWORD PTR [ebp-0x2bce3dcf],ebp
  44bd6d:	xor    esi,esp
  44bd6f:	xor    eax,edi
  44bd71:	xor    DWORD PTR ds:0x37322232,ecx
  44bd77:	xor    cl,BYTE PTR [edi+0x32]
  44bd7a:	xor    DWORD PTR [edx],0xffffff97
  44bd7d:	xor    al,cl
  44bd7f:	xor    bl,ah
  44bd81:	xor    ch,dh
  44bd83:	xor    al,BYTE PTR [edx]
  44bd85:	xor    ecx,DWORD PTR ds:0x5b332133
  44bd8b:	xor    ebp,DWORD PTR [ebp+0x33]
  44bd8e:	jg     0x44bdc3
  44bd90:	xchg   ecx,eax
  44bd91:	xor    esp,DWORD PTR [ebx-0x1ccc44cd]
  44bd97:	xor    esi,edi
  44bd99:	xor    esp,DWORD PTR [ecx]
  44bd9b:	xor    al,0x3c
  44bd9d:	xor    al,0x4e
  44bd9f:	xor    al,0x62
  44bda1:	xor    al,0x6d
  44bda3:	xor    al,0x81
  44bda5:	xor    al,0xbb
  44bda7:	xor    al,0xcd
  44bda9:	xor    al,0xdf
  44bdab:	xor    al,0xf1
  44bdad:	xor    al,0x3
  44bdaf:	xor    eax,0x3543351b
  44bdb4:	push   ebx
  44bdb5:	xor    eax,0x35753565
  44bdba:	xchg   DWORD PTR ds:0x35b63599,esi
  44bdc0:	lds    esi,FWORD PTR ds:0x35f335d7
  44bdc6:	pop    es
  44bdc7:	xor    DWORD PTR ss:[esi],esi
  44bdca:	dec    esp
  44bdcb:	ss pop esi
  44bdcd:	ss jb  0x44be06
  44bdd0:	jge    0x44be08
  44bdd2:	xchg   ecx,eax
  44bdd3:	ss retf 
  44bdd5:	fnsave ss:[esi]
  44bdd8:	out    dx,eax
  44bdd9:	add    DWORD PTR ss:[edi],esi
  44bddc:	adc    esi,DWORD PTR [edi]
  44bdde:	sub    esi,DWORD PTR [edi]
  44bde0:	push   ebx
  44bde1:	aaa    
  44bde2:	pusha  
  44bde3:	aaa    
  44bde4:	je     0x44be1d
  44bde6:	jp     0x44be1f
  44bde8:	xor    BYTE PTR [edi],0x89
  44bdeb:	aaa    
  44bdec:	(bad)  
  44bded:	aaa    
  44bdee:	xchg   ebp,eax
  44bdef:	aaa    
  44bdf0:	fwait
  44bdf1:	aaa    
  44bdf2:	mov    al,ds:0xd537c337
  44bdf7:	aaa    
  44bdf8:	out    0x37,eax
  44bdfa:	std    
  44bdfb:	aaa    
  44bdfc:	sub    DWORD PTR [eax],edi
  44bdfe:	inc    esi
  44bdff:	cmp    BYTE PTR [edx+0x38],dh
  44be02:	ja     0x44be3c
  44be04:	lahf   
  44be05:	cmp    dh,cl
  44be07:	cmp    bl,bh
  44be09:	cmp    BYTE PTR [ebx],ch
  44be0b:	cmp    DWORD PTR [ebx+0x39],edx
  44be0e:	arpl   WORD PTR [ecx],di
  44be10:	jnp    0x44be4b
  44be12:	test   DWORD PTR [ecx],edi
  44be14:	mov    WORD PTR [ecx],?
  44be16:	xchg   edi,eax
  44be17:	cmp    DWORD PTR [ecx-0x52c657c7],esp
  44be1d:	cmp    esi,eax
  44be1f:	cmp    DWORD PTR [ecx+0x3a],ebx
  44be22:	imul   edi,DWORD PTR [edx],0x7c
  44be25:	cmp    ah,BYTE PTR [edx-0x17c529c6]
  44be2b:	cmp    al,BYTE PTR [ebx+edi*1]
  44be2e:	sbb    BYTE PTR [ebx],bh
  44be30:	das    
  44be31:	cmp    edi,esp
  44be33:	cmp    ecx,DWORD PTR [esi]
  44be35:	cmp    al,0x23
  44be37:	cmp    al,0x85
  44be39:	cmp    al,0x8c
  44be3b:	cmp    al,0x98
  44be3d:	cmp    al,0xb3
  44be3f:	cmp    al,0xc3
  44be41:	cmp    al,0xd6
  44be43:	cmp    al,0xfd
  44be45:	cmp    al,0x14
  44be47:	cmp    eax,0x3da03d25
  44be4c:	stos   DWORD PTR es:[edi],eax
  44be4d:	cmp    eax,0x3de63dd6
  44be52:	idiv   BYTE PTR [esi]
  44be54:	add    BYTE PTR [eax],ah
  44be56:	add    al,BYTE PTR [eax]
  44be58:	add    al,0x1
  44be5a:	add    BYTE PTR [eax],al
  44be5c:	add    esi,DWORD PTR [eax]
  44be5e:	adc    BYTE PTR [eax],dh
  44be60:	and    eax,0x3d303330
  44be65:	xor    BYTE PTR [eax+0x30],dl
  44be68:	push   esi
  44be69:	xor    BYTE PTR [ebp+0x30],bl
  44be6c:	xor    BYTE PTR gs:[ebx+0x30],ch
  44be70:	je     0x44bea2
  44be72:	xor    BYTE PTR [eax],0xa3
  44be75:	xor    BYTE PTR [edx-0x2fcf42d0],dh
  44be7b:	xor    cl,ah
  44be7d:	xor    dh,ah
  44be7f:	xor    bh,ch
  44be81:	xor    dh,bh
  44be83:	xor    BYTE PTR [ecx],dl
  44be85:	xor    DWORD PTR [eax],esp
  44be87:	xor    DWORD PTR [edi],esp
  44be89:	xor    DWORD PTR [ecx+esi*1],ebp
  44be8c:	xor    DWORD PTR ss:[edi+0x31],ebx
  44be90:	xor    DWORD PTR fs:[ebx+0x31],esi
  44be94:	js     0x44bec7
  44be96:	jle    0x44bec9
  44be98:	xor    DWORD PTR [ecx],0xffffff89
  44be9b:	xor    DWORD PTR [esi-0x5ace5fcf],ecx
  44bea1:	xor    DWORD PTR [esi-0x2fce42cf],ebp
  44bea7:	xor    edi,ebx
  44bea9:	xor    esi,esp
  44beab:	xor    ebx,ebp
  44bead:	xor    ebp,esi
  44beaf:	xor    DWORD PTR [esi],ebx
  44beb1:	xor    ah,BYTE PTR [ebx]
  44beb3:	xor    ah,BYTE PTR [ebx+0x32]
  44beb6:	jb     0x44beea
  44beb8:	jg     0x44beec
  44beba:	mov    eax,ds:0xbd32ae32
  44bebf:	xor    dl,al
  44bec1:	xor    bl,bh
  44bec3:	xor    ah,dh
  44bec5:	xor    ch,bl
  44bec7:	xor    dh,ch
  44bec9:	xor    bl,BYTE PTR [esi]
  44becb:	xor    esp,DWORD PTR [ebx]
  44becd:	xor    esi,DWORD PTR ds:0x42333d33
  44bed3:	xor    ecx,DWORD PTR [eax+0x33]
  44bed6:	pop    esp
  44bed7:	xor    esp,DWORD PTR [esi+0x33]
  44beda:	jne    0x44bf0f
  44bedc:	mov    BYTE PTR [ebx],dh
  44bede:	xchg   edi,eax
  44bedf:	xor    ebx,DWORD PTR [esi-0x52cc5ccd]
  44bee5:	xor    edx,esi
  44bee7:	xor    ebx,ebx
  44bee9:	xor    edx,DWORD PTR [ebx]
  44beeb:	xor    al,0x20
  44beed:	xor    al,0x46
  44beef:	xor    al,0x59
  44bef1:	xor    al,0x6c
  44bef3:	xor    al,0x86
  44bef5:	xor    al,0x95
  44bef7:	xor    al,0xa7
  44bef9:	xor    al,0xc3
  44befb:	xor    al,0xd8
  44befd:	xor    al,0x83
  44beff:	xor    eax,0x36433598
  44bf04:	push   edx
  44bf05:	ss xchg edi,eax
  44bf07:	ss mov bl,0x36
  44bf0a:	shl    BYTE PTR [esi],0xda
  44bf0d:	ss out dx,eax
  44bf0f:	add    DWORD PTR ss:[edi],esi
  44bf12:	xor    esi,DWORD PTR [edi]
  44bf14:	inc    ecx
  44bf15:	aaa    
  44bf16:	lea    esi,[edi]
  44bf18:	mov    bl,0x37
  44bf1a:	shl    BYTE PTR [edi],0x6b
  44bf1d:	cmp    BYTE PTR [eax+0x1d38e238],dl
  44bf23:	cmp    DWORD PTR [ecx+edi*1-0x64],ecx
  44bf27:	cmp    ecx,esi
  44bf29:	cmp    DWORD PTR [ebx+edi*1],ebp
  44bf2c:	inc    ebx
  44bf2d:	cmp    edx,DWORD PTR [ecx+0x3b]
  44bf30:	outs   dx,DWORD PTR ds:[esi]
  44bf31:	cmp    esi,DWORD PTR [ebx-0x1cc43cc5]
  44bf37:	cmp    esi,ebx
  44bf39:	cmp    ecx,DWORD PTR [edx+0x3c]
  44bf3c:	lods   eax,DWORD PTR ds:[esi]
  44bf3d:	cmp    al,0xea
  44bf3f:	cmp    al,0x3f
  44bf41:	cmp    eax,0x3ddf3dbe
  44bf46:	cmp    al,0x3e
  44bf48:	xchg   BYTE PTR [esi],bh
  44bf4a:	cwde   
  44bf4b:	ds inc ebx
  44bf4d:	aas    
  44bf4e:	push   ebp
  44bf4f:	aas    
  44bf50:	jb     0x44bf91
  44bf52:	jl     0x44bf93
  44bf54:	xchg   edi,eax
  44bf55:	aas    
  44bf56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44bf57:	aas    
  44bf58:	add    BYTE PTR [eax],dh
  44bf5a:	add    al,BYTE PTR [eax]
  44bf5c:	push   0x98000000
  44bf61:	xor    DWORD PTR [esi],esi
  44bf63:	xor    cl,BYTE PTR [eax+0x32]
  44bf66:	out    dx,eax
  44bf67:	xor    al,BYTE PTR [edx]
  44bf69:	xor    edx,DWORD PTR [ebx+esi*1-0x3c]
  44bf6d:	xor    edx,DWORD PTR [esp+esi*1]
  44bf70:	push   ebx
  44bf71:	xor    al,0x66
  44bf73:	xor    al,0x82
  44bf75:	xor    al,0x8c
  44bf77:	xor    al,0xa7
  44bf79:	xor    al,0xb4
  44bf7b:	xor    al,0x26
  44bf7d:	cmp    BYTE PTR [eax],bh
  44bf7f:	cmp    dh,dl
  44bf81:	cmp    BYTE PTR [esi+0x39],ah
  44bf84:	sar    DWORD PTR [ecx],cl
  44bf86:	loope  0x44bfc1
  44bf88:	sti    
  44bf89:	cmp    DWORD PTR [edi],esi
  44bf8b:	cmp    bl,BYTE PTR [eax+0x3a]
  44bf8e:	pop    edi
  44bf8f:	cmp    ah,BYTE PTR [ebx+0x103ab23a]
  44bf95:	cmp    esp,DWORD PTR [ebx+0x3b]
  44bf98:	jb     0x44bfd5
  44bf9a:	push   ss
  44bf9b:	cmp    al,0x93
  44bf9d:	cmp    al,0xa5
  44bf9f:	cmp    al,0xc4
  44bfa1:	cmp    al,0xd3
  44bfa3:	cmp    al,0xe5
  44bfa5:	cmp    al,0xfc
  44bfa7:	cmp    al,0x5a
  44bfa9:	cmp    eax,0x3d943d74
  44bfae:	les    edi,FWORD PTR ds:0x3df53de4
  44bfb4:	adc    BYTE PTR [esi],bh
  44bfb6:	sbb    eax,0xd13f283e
  44bfbb:	aas    
  44bfbc:	(bad)  
  44bfbd:	aas    
  44bfbe:	jecxz  0x44bfff
  44bfc0:	add    BYTE PTR [eax+0x2],al
  44bfc3:	add    BYTE PTR [eax+eax*1+0x301f0000],ch
  44bfca:	xor    eax,0x71305c30
  44bfcf:	xor    BYTE PTR [ebp-0x15cf44d0],ah
  44bfd5:	xor    bh,bh
  44bfd7:	xor    BYTE PTR ds:0x7a314b31,dh
  44bfdd:	xor    DWORD PTR [edi-0x3cce4ccf],ecx
  44bfe3:	xor    DWORD PTR [ebx],esi
  44bfe5:	xor    bh,BYTE PTR [edi]
  44bfe7:	xor    bl,ch
  44bfe9:	xor    al,BYTE PTR [esi]
  44bfeb:	xor    ebx,DWORD PTR [eax]
  44bfed:	xor    edi,DWORD PTR ds:0x66335633
  44bff3:	xor    ebx,DWORD PTR [edi+0x733ac33]
  44bff9:	xor    al,0x33
  44bffb:	xor    al,0x41
  44bffd:	xor    al,0xc3
  44bfff:	xor    al,0xd7
  44c001:	xor    al,0xf6
  44c003:	xor    al,0x49
  44c005:	xor    eax,0x35703556
  44c00a:	jge    0x44c041
  44c00c:	les    esi,FWORD PTR ds:0x367e3674
  44c012:	cwde   
  44c013:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  44c015:	ss mov edi,0xe436da36
  44c01b:	ss lock or BYTE PTR ss:[edi],dh
  44c020:	das    
  44c021:	aaa    
  44c022:	push   ebx
  44c023:	cmp    DWORD PTR [ecx+0x39],esp
  44c026:	mov    cl,0x39
  44c028:	out    0x39,al
  44c02a:	clc    
  44c02b:	cmp    DWORD PTR [eax],esi
  44c02d:	cmp    dl,BYTE PTR [edx+edi*1-0x5a]
  44c031:	cmp    ch,BYTE PTR [edx+edi*1+0x3b413ae2]
  44c038:	jae    0x44c075
  44c03a:	cmp    BYTE PTR [ebx],0x5a
  44c03d:	cmp    al,0x60
  44c03f:	cmp    al,0x80
  44c041:	cmp    al,0xe6
  44c043:	cmp    al,0x13
  44c045:	cmp    eax,0x3dba3d21
  44c04a:	loope  0x44c089
  44c04c:	idiv   BYTE PTR ds:0x3e133e03
  44c052:	ret    
  44c053:	sar    DWORD PTR ds:[esi],cl
  44c056:	dec    esp
  44c057:	aas    
  44c058:	push   edx
  44c059:	aas    
  44c05a:	pop    eax
  44c05b:	aas    
  44c05c:	jno    0x44c09d
  44c05e:	jl     0x44c09f
  44c060:	mov    ebx,0xd23fc83f
  44c065:	aas    
  44c066:	fistp  QWORD PTR [edi]
  44c068:	in     al,dx
  44c069:	aas    
  44c06a:	hlt    
  44c06b:	aas    
  44c06c:	add    BYTE PTR [eax+0x2],dl
  44c06f:	add    BYTE PTR [eax+0xc000001],bl
  44c075:	xor    BYTE PTR ds:0x36303030,bl
  44c07b:	xor    BYTE PTR [eax+esi*1],bh
  44c07e:	dec    esp
  44c07f:	xor    BYTE PTR [edx+0x30],dl
  44c082:	pop    eax
  44c083:	xor    BYTE PTR [eax+esi*1-0x56],ch
  44c087:	xor    BYTE PTR [eax-0x3dcf48d0],dh
  44c08d:	xor    al,cl
  44c08f:	xor    ah,bl
  44c091:	xor    cl,dh
  44c093:	xor    ah,bh
  44c095:	xor    BYTE PTR [ecx+esi*1],dl
  44c098:	sub    dh,BYTE PTR [ecx]
  44c09a:	aaa    
  44c09b:	xor    DWORD PTR [edx+0x31],esi
  44c09e:	js     0x44c0d1
  44c0a0:	jle    0x44c0d3
  44c0a2:	xor    DWORD PTR [ecx],0xffffff8d
  44c0a5:	xor    DWORD PTR [ecx+esi*1+0x319f319a],edx
  44c0ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44c0ad:	xor    DWORD PTR [ecx-0x4bce51cf],ebp
  44c0b3:	xor    DWORD PTR [ecx+esi*1+0x31e731d0],edi
  44c0ba:	push   es
  44c0bb:	xor    cl,BYTE PTR [edi]
  44c0bd:	xor    ch,BYTE PTR [edx]
  44c0bf:	xor    dh,BYTE PTR [edx+esi*1]
  44c0c2:	inc    edi
  44c0c3:	xor    dl,BYTE PTR [ecx+0x32]
  44c0c6:	push   esi
  44c0c7:	xor    bl,BYTE PTR [ebx+0x32]
  44c0ca:	jno    0x44c0fe
  44c0cc:	jbe    0x44c100
  44c0ce:	jg     0x44c102
  44c0d0:	test   BYTE PTR [edx],dh
  44c0d2:	xchg   ecx,eax
  44c0d3:	xor    ah,BYTE PTR [edx-0x50cd57ce]
  44c0d9:	xor    al,bl
  44c0db:	xor    cl,al
  44c0dd:	xor    dl,BYTE PTR [ebx+esi*1]
  44c0e0:	push   ds
  44c0e1:	xor    esp,DWORD PTR [ebx+esi*1]
  44c0e4:	sub    eax,0x69336133
  44c0e9:	xor    esi,DWORD PTR [edx+0x33]
  44c0ec:	js     0x44c121
  44c0ee:	xor    BYTE PTR [ebx],0x8c
  44c0f1:	xor    esi,DWORD PTR [ebx-0x3bcc41cd]
  44c0f7:	xor    ecx,DWORD PTR ds:0x1b341334
  44c0fd:	xor    al,0x22
  44c0ff:	xor    al,0x27
  44c101:	xor    al,0x2d
  44c103:	xor    al,0x33
  44c105:	xor    al,0x3b
  44c107:	xor    al,0x41
  44c109:	xor    al,0x48
  44c10b:	xor    al,0x4f
  44c10d:	xor    al,0x5f
  44c10f:	xor    al,0x67
  44c111:	xor    al,0x6d
  44c113:	xor    al,0x79
  44c115:	xor    al,0x84
  44c117:	xor    al,0xa2
  44c119:	xor    al,0xa8
  44c11b:	xor    al,0xae
  44c11d:	xor    al,0xb4
  44c11f:	xor    al,0xba
  44c121:	xor    al,0xc0
  44c123:	xor    al,0xc7
  44c125:	xor    al,0xce
  44c127:	xor    al,0xd5
  44c129:	xor    al,0xdc
  44c12b:	xor    al,0xe3
  44c12d:	xor    al,0xea
  44c12f:	xor    al,0xf1
  44c131:	xor    al,0xf9
  44c133:	xor    al,0x1
  44c135:	xor    eax,0x35153509
  44c13a:	push   ds
  44c13b:	xor    eax,0x35293523
  44c140:	xor    esi,DWORD PTR ds:0x3547353c
  44c146:	push   ebx
  44c147:	xor    eax,0x35683558
  44c14c:	ins    DWORD PTR es:[edi],dx
  44c14d:	xor    eax,0x35793573
  44c152:	(bad)  
  44c153:	xor    eax,0x359f3596
  44c158:	std    
  44c159:	xor    eax,0x36663660
  44c15e:	ins    BYTE PTR es:[edi],dx
  44c15f:	ss jno 0x44c198
  44c162:	mov    ?,WORD PTR [esi]
  44c164:	(bad)  [esi]
  44c166:	loopne 0x44c19e
  44c168:	xor    DWORD PTR [edi],esi
  44c16a:	aaa    
  44c16b:	aaa    
  44c16c:	inc    eax
  44c16d:	aaa    
  44c16e:	dec    eax
  44c16f:	aaa    
  44c170:	dec    ebp
  44c171:	aaa    
  44c172:	outs   dx,BYTE PTR ds:[esi]
  44c173:	aaa    
  44c174:	jae    0x44c1ad
  44c176:	xchg   edx,eax
  44c177:	aaa    
  44c178:	cmp    BYTE PTR [eax],bh
  44c17a:	cmp    eax,0x6d384f38
  44c17f:	cmp    BYTE PTR [ecx-0xfc778c8],al
  44c185:	cmp    dh,dh
  44c187:	cmp    BYTE PTR [ecx],dh
  44c189:	cmp    DWORD PTR [ecx+edi*1+0x61],edx
  44c18d:	cmp    DWORD PTR [ebp+0x39],ebp
  44c190:	jne    0x44c1cb
  44c192:	jge    0x44c1cd
  44c194:	mov    DWORD PTR [ecx],edi
  44c196:	lods   eax,DWORD PTR ds:[esi]
  44c197:	cmp    DWORD PTR [ebp-0x39c63fc7],esi
  44c19d:	cmp    esp,ecx
  44c19f:	cmp    edx,edx
  44c1a1:	cmp    eax,ebx
  44c1a3:	cmp    esi,ebx
  44c1a5:	cmp    ebx,esi
  44c1a7:	cmp    DWORD PTR [ebx],eax
  44c1a9:	cmp    ah,BYTE PTR ds:0x563a483a
  44c1af:	cmp    ah,BYTE PTR [ebp+0x3a]
  44c1b2:	mov    eax,0xc73abe3a
  44c1b7:	cmp    cl,ch
  44c1b9:	cmp    dl,dh
  44c1bb:	cmp    ch,al
  44c1bd:	cmp    ch,dh
  44c1bf:	cmp    dh,bh
  44c1c1:	cmp    bh,ch
  44c1c3:	cmp    al,BYTE PTR ds:0x383b263b
  44c1c9:	cmp    esi,DWORD PTR [eax+0x3b]
  44c1cc:	jp     0x44c209
  44c1ce:	cmp    BYTE PTR [ebx],0x9b
  44c1d1:	cmp    esp,DWORD PTR [edi+0x233bde3b]
  44c1d7:	cmp    al,0x32
  44c1d9:	cmp    al,0x40
  44c1db:	cmp    al,0x65
  44c1dd:	cmp    al,0x9e
  44c1df:	cmp    al,0xb0
  44c1e1:	cmp    al,0xef
  44c1e3:	cmp    al,0x1
  44c1e5:	cmp    eax,0x3d513d3f
  44c1ea:	mov    ecx,0xd93dc43d
  44c1ef:	cmp    eax,0x3e123e03
  44c1f4:	xor    eax,0xa93e563e
  44c1f9:	ds mov ah,0x3e
  44c1fc:	leave  
  44c1fd:	ds repz ds add eax,0x3f173f
  44c205:	pusha  
  44c206:	add    al,BYTE PTR [eax]
  44c208:	or     BYTE PTR [ecx],al
  44c20a:	add    BYTE PTR [eax],al
  44c20c:	adc    esi,DWORD PTR [eax]
  44c20e:	and    eax,0x88303730
  44c213:	xor    DWORD PTR [edx+esi*1],edx
  44c216:	sbb    al,0x32
  44c218:	and    dh,BYTE PTR [edx]
  44c21a:	xor    al,0x32
  44c21c:	cmp    dh,BYTE PTR [edx]
  44c21e:	popf   
  44c21f:	xor    al,bl
  44c221:	xor    bl,BYTE PTR [edi]
  44c223:	xor    eax,DWORD PTR [ebx+esi*1-0x80]
  44c227:	xor    ebp,DWORD PTR [ebx+esi*1+0x33f333cf]
  44c22e:	sti    
  44c22f:	xor    ecx,DWORD PTR [ecx]
  44c231:	xor    al,0x46
  44c233:	xor    al,0x72
  44c235:	xor    al,0x95
  44c237:	xor    al,0x9d
  44c239:	xor    al,0xa6
  44c23b:	xor    al,0xda
  44c23d:	xor    al,0xf3
  44c23f:	xor    al,0x3
  44c241:	xor    eax,0x3543353d
  44c246:	pop    edi
  44c247:	xor    eax,0x357a3570
  44c24c:	xor    BYTE PTR ds:0x359d3590,0xa7
  44c253:	xor    eax,0x35c835bf
  44c258:	cmc    
  44c259:	xor    eax,0x36253613
  44c25e:	cmp    BYTE PTR [esi],dh
  44c260:	inc    ebp
  44c261:	ss dec ebx
  44c263:	ss push ecx
  44c265:	ss je  0x44c29e
  44c268:	jl     0x44c2a0
  44c26a:	xchg   ebp,eax
  44c26b:	ss scas eax,DWORD PTR es:[edi]
  44c26d:	ss mov esp,0xcb36c636
  44c273:	ss loope 0x44c2ac
  44c276:	jmp    0x637be7b1
  44c27b:	aaa    
  44c27c:	mov    ebx,0x1337fc37
  44c281:	cmp    BYTE PTR [ebx],ah
  44c283:	cmp    BYTE PTR [esi],bh
  44c285:	cmp    BYTE PTR [eax+0x38],cl
  44c288:	push   eax
  44c289:	cmp    BYTE PTR [ebx+0x38],bh
  44c28c:	cmp    DWORD PTR [eax],0x38c338a5
  44c292:	iret   
  44c293:	cmp    bh,ah
  44c295:	cmp    bh,ch
  44c297:	cmp    ah,dh
  44c299:	cmp    BYTE PTR [esi],al
  44c29b:	cmp    DWORD PTR [ebx],edx
  44c29d:	cmp    DWORD PTR [ebx],esi
  44c29f:	cmp    DWORD PTR [edi],edi
  44c2a1:	cmp    DWORD PTR [edi+0x39],edx
  44c2a4:	pop    edi
  44c2a5:	cmp    DWORD PTR [edx+0x39],edi
  44c2a8:	jg     0x44c2e3
  44c2aa:	mov    eax,ds:0xc339b739
  44c2af:	cmp    edx,edx
  44c2b1:	cmp    eax,esp
  44c2b3:	cmp    DWORD PTR [ecx],eax
  44c2b5:	cmp    bl,BYTE PTR [ecx]
  44c2b7:	cmp    cl,BYTE PTR [ecx+0x3a]
  44c2ba:	pop    eax
  44c2bb:	cmp    al,BYTE PTR [ebx-0x48c56ac6]
  44c2c1:	cmp    al,ch
  44c2c3:	cmp    dl,BYTE PTR [eax]
  44c2c5:	cmp    esi,DWORD PTR [ecx]
  44c2c7:	cmp    ecx,DWORD PTR [edi+0x3b]
  44c2ca:	mov    DWORD PTR [ebx],edi
  44c2cc:	mov    ch,0x3b
  44c2ce:	jmp    0x7b3c:0x6b3c373b
  44c2d5:	cmp    al,0xc2
  44c2d7:	cmp    al,0xd3
  44c2d9:	cmp    al,0xe1
  44c2db:	cmp    al,0x1a
  44c2dd:	cmp    eax,0x3d433d23
  44c2e2:	push   ecx
  44c2e3:	cmp    eax,0x3d7b3d6a
  44c2e8:	mov    DWORD PTR ds:0x3dc13db0,edi
  44c2ee:	fidivr DWORD PTR ds:0x3df33deb
  44c2f4:	add    eax,0x683e173e
  44c2f9:	test   DWORD PTR ds:[esi],edi
  44c2fc:	idiv   DWORD PTR [esi]
  44c2fe:	push   es
  44c2ff:	aas    
  44c300:	adc    DWORD PTR [edi],edi
  44c302:	sub    al,0x3f
  44c304:	cmp    bh,BYTE PTR [edi]
  44c306:	jbe    0x44c347
  44c308:	sar    BYTE PTR [edi],1
  44c30a:	add    BYTE PTR [eax],al
  44c30c:	add    BYTE PTR [eax+0x2],dh
  44c30f:	add    al,dl
  44c311:	add    BYTE PTR [eax],al
  44c313:	add    BYTE PTR [esi],cl
  44c315:	xor    BYTE PTR [esi],bl
  44c317:	xor    BYTE PTR [eax+esi*1],ah
  44c31a:	inc    ebx
  44c31b:	xor    BYTE PTR [ecx+0x30],dl
  44c31e:	jne    0x44c350
  44c320:	xor    DWORD PTR [eax],0xffffff93
  44c323:	xor    bh,dh
  44c325:	xor    BYTE PTR [ecx],bh
  44c327:	xor    DWORD PTR [ebx+0x31],eax
  44c32a:	push   edx
  44c32b:	xor    DWORD PTR [ecx+esi*1-0x6],edi
  44c32f:	xor    DWORD PTR [ebx],edx
  44c331:	xor    ah,BYTE PTR ds:0xa2325a32
  44c337:	xor    bh,BYTE PTR [esi-0x69cd0cce]
  44c33d:	xor    esp,DWORD PTR [esi+0x4333e633]
  44c343:	xor    al,0x52
  44c345:	xor    al,0x60
  44c347:	xor    al,0x7d
  44c349:	xor    al,0x8f
  44c34b:	xor    al,0xcd
  44c34d:	xor    al,0xdf
  44c34f:	xor    al,0x96
  44c351:	xor    eax,0x35d635d0
  44c356:	fbstp  TBYTE PTR ds:0x35ef35e5
  44c35c:	push   es
  44c35d:	sbb    BYTE PTR ss:[esi],dh
  44c360:	imul   esi,DWORD PTR [esi],0x367f3676
  44c366:	pushf  
  44c367:	ss test al,0x36
  44c36a:	mov    al,0x36
  44c36c:	mov    ecx,0xcf36c636
  44c371:	ss out dx,eax
  44c373:	ss sti 
  44c375:	add    esi,DWORD PTR ss:[edi]
  44c378:	or     al,0x37
  44c37a:	cmp    eax,0xa8379637
  44c37f:	aaa    
  44c380:	fidiv  DWORD PTR [edi]
  44c382:	push   ds
  44c383:	cmp    BYTE PTR [eax],dh
  44c385:	cmp    BYTE PTR [esi+0x38],dl
  44c388:	push   0xde389a38
  44c38d:	cmp    ch,ch
  44c38f:	cmp    bh,bh
  44c391:	cmp    BYTE PTR [eax],dh
  44c393:	cmp    DWORD PTR [eax-0x35c64dc7],ebx
  44c399:	cmp    DWORD PTR [eax],ebx
  44c39b:	cmp    dh,BYTE PTR [edi]
  44c39d:	cmp    cl,BYTE PTR [edi+0x3a]
  44c3a0:	ret    0x473a
  44c3a3:	cmp    esi,DWORD PTR [ebx+0x3b]
  44c3a6:	test   BYTE PTR [ebx],bh
  44c3a8:	sar    DWORD PTR [ebx],cl
  44c3aa:	fnstsw WORD PTR [ebx]
  44c3ac:	and    bh,BYTE PTR [ebx+eax*2]
  44c3af:	cmp    al,0x4d
  44c3b1:	cmp    al,0x6e
  44c3b3:	cmp    al,0xa3
  44c3b5:	cmp    al,0xd3
  44c3b7:	cmp    al,0xe4
  44c3b9:	cmp    al,0xf7
  44c3bb:	cmp    al,0x85
  44c3bd:	cmp    eax,0x3db83d8f
  44c3c2:	pop    es
  44c3c3:	ds xchg ebx,eax
  44c3c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44c3c7:	ds mov dh,0x3e
  44c3ca:	sar    BYTE PTR [esi],0x5
  44c3cd:	aas    
  44c3ce:	sub    BYTE PTR [edi],bh
  44c3d0:	inc    ebx
  44c3d1:	aas    
  44c3d2:	push   esp
  44c3d3:	aas    
  44c3d4:	data16 aas 
  44c3d6:	jo     0x44c417
  44c3d8:	mov    ebp,0x3fe03f
  44c3dd:	add    BYTE PTR [edx],0x0
  44c3e0:	enter  0x0,0x0
  44c3e4:	add    esi,DWORD PTR [eax]
  44c3e6:	push   ss
  44c3e7:	xor    BYTE PTR [eax],ch
  44c3e9:	xor    BYTE PTR [edx],dh
  44c3eb:	xor    BYTE PTR [ecx+0x30],cl
  44c3ee:	mov    ?,WORD PTR [eax]
  44c3f0:	xchg   edi,eax
  44c3f1:	xor    BYTE PTR [ecx-0x2cf25d0],ah
  44c3f7:	xor    BYTE PTR [ebx],ah
  44c3f9:	xor    DWORD PTR [ecx],edi
  44c3fb:	xor    DWORD PTR [ebx+0x31],ecx
  44c3fe:	xchg   BYTE PTR [ecx],dh
  44c400:	scas   al,BYTE PTR es:[edi]
  44c401:	xor    ebp,ebx
  44c403:	xor    ebp,esi
  44c405:	xor    edx,edi
  44c407:	xor    DWORD PTR [edx+esi*1],eax
  44c40a:	cmp    DWORD PTR [edx],esi
  44c40c:	dec    esi
  44c40d:	xor    bl,BYTE PTR [eax+0x32]
  44c410:	bound  esi,QWORD PTR [edx]
  44c412:	xchg   ebp,eax
  44c413:	xor    bh,BYTE PTR [ebp+0x25330932]
  44c419:	xor    esi,DWORD PTR [edi]
  44c41b:	xor    esi,DWORD PTR [ebx+0x33]
  44c41e:	xchg   BYTE PTR [ebx],dh
  44c420:	mov    cl,0x33
  44c422:	push   DWORD PTR [ebx]
  44c424:	sub    esi,DWORD PTR [eax+eax*2]
  44c427:	xor    al,0x92
  44c429:	xor    al,0xae
  44c42b:	xor    al,0x18
  44c42d:	xor    eax,0x36953683
  44c432:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44c433:	shl    BYTE PTR ss:[esi],cl
  44c436:	and    BYTE PTR [edi],dh
  44c438:	sub    al,0x37
  44c43a:	loop   0x44c473
  44c43c:	clc    
  44c43d:	aaa    
  44c43e:	add    bh,BYTE PTR [eax]
  44c440:	sub    eax,0x5a384338
  44c445:	cmp    BYTE PTR [eax+edi*1-0x48],bh
  44c449:	cmp    al,dl
  44c44b:	cmp    BYTE PTR [ebx],al
  44c44d:	cmp    DWORD PTR [edx],edx
  44c44f:	cmp    DWORD PTR [edi],ebx
  44c451:	cmp    DWORD PTR [edi+0x39],ebx
  44c454:	cmp    BYTE PTR [ecx],0xb3
  44c457:	cmp    ebp,eax
  44c459:	cmp    ebx,esi
  44c45b:	cmp    DWORD PTR ds:0x793a6f3a,ebx
  44c461:	cmp    bl,BYTE PTR [ebx-0x1ac52cc6]
  44c467:	cmp    dh,bh
  44c469:	cmp    ah,BYTE PTR [ecx]
  44c46b:	cmp    ebp,DWORD PTR [ebx]
  44c46d:	cmp    eax,DWORD PTR [esi+0x3b]
  44c470:	jno    0x44c4ad
  44c472:	xchg   BYTE PTR [ebx],bh
  44c474:	mov    ah,0x3b
  44c476:	stc    
  44c477:	cmp    ecx,DWORD PTR [ecx]
  44c479:	cmp    al,0x17
  44c47b:	cmp    al,0x21
  44c47d:	cmp    al,0x4a
  44c47f:	cmp    al,0x6b
  44c481:	cmp    al,0x97
  44c483:	cmp    al,0xc7
  44c485:	cmp    al,0xe6
  44c487:	cmp    al,0xf8
  44c489:	cmp    al,0x2e
  44c48b:	cmp    eax,0x3db33d7b
  44c490:	les    edi,FWORD PTR ds:0x3ea33e01
  44c496:	lods   eax,DWORD PTR ds:[esi]
  44c497:	fdivr  QWORD PTR ds:[esi]
  44c49a:	adc    edi,DWORD PTR [edi]
  44c49c:	es aas 
  44c49e:	gs aas 
  44c4a0:	xchg   BYTE PTR [edi],bh
  44c4a2:	mov    ch,0x3f
  44c4a4:	add    BYTE PTR [eax+0x1280002],dl
  44c4aa:	add    BYTE PTR [eax],al
  44c4ac:	arpl   WORD PTR [eax],si
  44c4ae:	jbe    0x44c4e0
  44c4b0:	test   eax,0xee30b530
  44c4b5:	xor    BYTE PTR [ecx-0x2cce3ccf],dh
  44c4bb:	xor    DWORD PTR [eax],eax
  44c4bd:	xor    ah,BYTE PTR [eax]
  44c4bf:	xor    ah,BYTE PTR ds:0x33322c32
  44c4c5:	xor    bh,BYTE PTR [edx]
  44c4c7:	xor    al,BYTE PTR [ecx+0x32]
  44c4ca:	dec    ecx
  44c4cb:	xor    ah,BYTE PTR [edx+esi*1+0x68]
  44c4cf:	xor    ch,BYTE PTR [edx+esi*1+0x70]
  44c4d3:	xor    al,BYTE PTR [ebx-0x58cd70ce]
  44c4d9:	xor    ch,BYTE PTR [edi-0x3dcd4bce]
  44c4df:	xor    al,dh
  44c4e1:	xor    dl,bl
  44c4e3:	xor    dh,ah
  44c4e5:	xor    ah,BYTE PTR [ecx]
  44c4e7:	xor    edx,DWORD PTR [ebx+esi*1-0x78]
  44c4eb:	xor    eax,ebp
  44c4ed:	xor    edx,ecx
  44c4ef:	xor    esp,ecx
  44c4f1:	xor    esi,ebx
  44c4f3:	xor    eax,DWORD PTR [edx]
  44c4f5:	xor    al,0x11
  44c4f7:	xor    al,0x4d
  44c4f9:	xor    al,0x69
  44c4fb:	xor    al,0x71
  44c4fd:	xor    al,0x86
  44c4ff:	xor    al,0x9d
  44c501:	xor    al,0xe7
  44c503:	xor    al,0xf6
  44c505:	xor    al,0x2c
  44c507:	xor    eax,0x3548353b
  44c50c:	pop    edi
  44c50d:	xor    eax,0x35aa356e
  44c512:	ret    
  44c513:	xor    eax,0x35ed35d4
  44c518:	sti    
  44c519:	xor    eax,0x36053600
  44c51e:	(bad)  
  44c520:	adc    al,0x36
  44c522:	sub    esi,DWORD PTR [esi]
  44c524:	cmp    eax,0x62365536
  44c529:	xor    DWORD PTR ss:[esi],0xffffffa3
  44c52d:	ss scas eax,DWORD PTR es:[edi]
  44c52f:	ss (bad) 
  44c531:	ss iret 
  44c533:	ss aam 0x36
  44c536:	loop   0x44c56e
  44c538:	out    0x36,al
  44c53a:	repz adc esi,DWORD PTR ss:[edi]
  44c53e:	pop    ds
  44c53f:	aaa    
  44c540:	aaa    
  44c541:	aaa    
  44c542:	aas    
  44c543:	aaa    
  44c544:	inc    esp
  44c545:	aaa    
  44c546:	push   edx
  44c547:	aaa    
  44c548:	push   esi
  44c549:	aaa    
  44c54a:	arpl   WORD PTR [edi],si
  44c54c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44c54d:	aaa    
  44c54e:	lods   eax,DWORD PTR ds:[esi]
  44c54f:	aaa    
  44c550:	das    
  44c551:	cmp    DWORD PTR [esi],esi
  44c553:	cmp    ecx,ecx
  44c555:	cmp    eax,edx
  44c557:	cmp    DWORD PTR [eax+0x3c],esi
  44c55a:	je     0x44c598
  44c55c:	js     0x44c59a
  44c55e:	jl     0x44c59c
  44c560:	cmp    BYTE PTR [esp+eax*4],0x3c
  44c564:	mov    BYTE PTR [esp+ecx*4],bh
  44c567:	cmp    al,0x90
  44c569:	cmp    al,0x94
  44c56b:	cmp    al,0x98
  44c56d:	cmp    al,0x9c
  44c56f:	cmp    al,0xa0
  44c571:	cmp    al,0xa4
  44c573:	cmp    al,0xa8
  44c575:	cmp    al,0xac
  44c577:	cmp    al,0xb0
  44c579:	cmp    al,0xb4
  44c57b:	cmp    al,0x90
  44c57d:	cmp    eax,0x3d983d94
  44c582:	pushf  
  44c583:	cmp    eax,0x3db83db4
  44c588:	mov    esp,0xc43dc03d
  44c58d:	cmp    eax,0x3dcc3dc8
  44c592:	sar    BYTE PTR ds:0x3dd83dd4,1
  44c598:	fdivr  QWORD PTR ds:0x3de43de0
  44c59e:	call   0xf082b1e0
  44c5a3:	cmp    eax,0x3df83df4
  44c5a8:	cld    
  44c5a9:	cmp    eax,0x3e043e00
  44c5ae:	or     BYTE PTR [esi],bh
  44c5b0:	or     al,0x3e
  44c5b2:	adc    BYTE PTR [esi],bh
  44c5b4:	adc    al,0x3e
  44c5b6:	sbb    BYTE PTR [esi],bh
  44c5b8:	sbb    al,0x3e
  44c5ba:	and    BYTE PTR [esi],bh
  44c5bc:	and    al,0x3e
  44c5be:	sub    BYTE PTR [esi],bh
  44c5c0:	sub    al,0x3e
  44c5c2:	ins    BYTE PTR es:[edi],dx
  44c5c3:	ds jb  0x44c604
  44c5c6:	js     0x44c606
  44c5c8:	sahf   
  44c5c9:	aas    
  44c5ca:	add    BYTE PTR [eax],al
  44c5cc:	add    BYTE PTR [eax+0x1340002],ah
  44c5d2:	add    BYTE PTR [eax],al
  44c5d4:	sbb    dh,BYTE PTR [eax]
  44c5d6:	and    dh,BYTE PTR [eax]
  44c5d8:	xor    BYTE PTR ds:[eax+0x31],ch
  44c5dc:	sbb    eax,0x53323532
  44c5e1:	xor    ah,BYTE PTR [ebp+0x32]
  44c5e4:	jnp    0x44c618
  44c5e6:	xchg   ebp,eax
  44c5e7:	xor    bh,BYTE PTR [eax+0x40330032]
  44c5ed:	xor    ebp,DWORD PTR [ebp+0x33]
  44c5f0:	test   DWORD PTR [ebx],esi
  44c5f2:	fwait
  44c5f3:	xor    esi,DWORD PTR [ebp-0x1ecc29cd]
  44c5f9:	xor    ebp,ecx
  44c5fb:	xor    edi,edi
  44c5fd:	xor    edx,DWORD PTR [ecx]
  44c5ff:	xor    al,0x19
  44c601:	xor    al,0x2f
  44c603:	xor    al,0x45
  44c605:	xor    al,0x4e
  44c607:	xor    al,0x71
  44c609:	xor    al,0xdd
  44c60b:	xor    al,0xa
  44c60d:	xor    eax,0x35513528
  44c612:	test   DWORD PTR ds:0x35d235b2,esi
  44c618:	in     eax,0x35
  44c61a:	out    dx,al
  44c61b:	xor    eax,0x36403604
  44c620:	xor    BYTE PTR [esi],0x95
  44c623:	ss sahf 
  44c625:	ss mov ah,0x36
  44c628:	lds    esi,FWORD PTR [esi]
  44c62a:	(bad)  [esi]
  44c62c:	cmc    
  44c62d:	or     esi,DWORD PTR ss:[edi]
  44c630:	and    eax,0x44372e37
  44c635:	aaa    
  44c636:	jns    0x44c66f
  44c638:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44c639:	aaa    
  44c63a:	shl    BYTE PTR [edi],1
  44c63c:	add    bh,BYTE PTR [eax]
  44c63e:	adc    eax,0x60382138
  44c643:	cmp    BYTE PTR [edi-0x3ec75ac8],dl
  44c649:	cmp    al,bl
  44c64b:	cmp    cl,ah
  44c64d:	cmp    al,bh
  44c64f:	cmp    BYTE PTR [edi],dh
  44c651:	cmp    DWORD PTR [ebp+0x39],eax
  44c654:	pop    ebx
  44c655:	cmp    DWORD PTR [edx-0x44c65ac7],ecx
  44c65b:	cmp    ebp,esp
  44c65d:	cmp    esp,edi
  44c65f:	cmp    DWORD PTR [ecx],edx
  44c661:	cmp    bl,BYTE PTR [ecx]
  44c663:	cmp    ch,BYTE PTR [edi]
  44c665:	cmp    bl,BYTE PTR [ebp+0x3a]
  44c668:	cmp    cl,BYTE PTR [bp+si-0x5ec6]
  44c66d:	cmp    ch,BYTE PTR [ecx-0x22c53cc6]
  44c673:	cmp    dh,ah
  44c675:	cmp    al,BYTE PTR [ecx]
  44c677:	cmp    ecx,DWORD PTR [ecx]
  44c679:	cmp    ebx,DWORD PTR [edi]
  44c67b:	cmp    esi,DWORD PTR [ecx]
  44c67d:	cmp    edi,DWORD PTR [ecx]
  44c67f:	cmp    ecx,DWORD PTR [edi+0x3b]
  44c682:	cmp    ebp,DWORD PTR gs:[esi+0x3b]
  44c686:	ja     0x44c6c3
  44c688:	cmp    BYTE PTR [ebx],0x8c
  44c68b:	cmp    esp,DWORD PTR [edx-0x2ac438c5]
  44c691:	cmp    esp,ecx
  44c693:	cmp    esi,edi
  44c695:	cmp    ecx,DWORD PTR [eax]
  44c697:	cmp    al,0x1e
  44c699:	cmp    al,0x31
  44c69b:	cmp    al,0x39
  44c69d:	cmp    al,0x43
  44c69f:	cmp    al,0x4c
  44c6a1:	cmp    al,0x62
  44c6a3:	cmp    al,0x75
  44c6a5:	cmp    al,0x81
  44c6a7:	cmp    al,0x8d
  44c6a9:	cmp    al,0x99
  44c6ab:	cmp    al,0xaf
  44c6ad:	cmp    al,0xc5
  44c6af:	cmp    al,0xdb
  44c6b1:	cmp    al,0xf8
  44c6b3:	cmp    al,0x4
  44c6b5:	cmp    eax,0x3d353d1a
  44c6ba:	dec    edx
  44c6bb:	cmp    eax,0x3d6e3d65
  44c6c0:	ja     0x44c6ff
  44c6c2:	lea    edi,ds:0x3dbe3da8
  44c6c8:	aad    0x3d
  44c6ca:	jmp    0x44c709
  44c6cc:	add    eax,0x453e1b3e
  44c6d1:	ds pop esp
  44c6d3:	test   DWORD PTR ds:[esi],edi
  44c6d6:	pushf  
  44c6d7:	ds mov ch,0x3e
  44c6da:	mov    esi,0xd03ec73e
  44c6df:	fnstcw WORD PTR ds:[esi]
  44c6e2:	loop   0x44c722
  44c6e4:	add    eax,0x2b3f153f
  44c6e9:	aas    
  44c6ea:	inc    ebp
  44c6eb:	aas    
  44c6ec:	dec    esi
  44c6ed:	aas    
  44c6ee:	jno    0x44c72f
  44c6f0:	test   DWORD PTR [edi],edi
  44c6f2:	fwait
  44c6f3:	aas    
  44c6f4:	mov    ch,0x3f
  44c6f6:	sar    DWORD PTR [edi],cl
  44c6f8:	in     eax,0x3f
  44c6fa:	out    dx,al
  44c6fb:	aas    
  44c6fc:	idiv   DWORD PTR [edi]
  44c6fe:	add    BYTE PTR [eax],al
  44c700:	add    BYTE PTR [eax+0x1040002],dh
  44c706:	add    BYTE PTR [eax],al
  44c708:	add    BYTE PTR [eax],dh
  44c70a:	or     DWORD PTR [eax],esi
  44c70c:	adc    dh,BYTE PTR [eax]
  44c70e:	xor    eax,0x7c305230
  44c713:	xor    BYTE PTR [eax-0x32cf5bd0],bl
  44c719:	xor    ah,bh
  44c71b:	xor    BYTE PTR ds:0x41312b31,dl
  44c721:	xor    DWORD PTR [ecx+0x31],ecx
  44c724:	push   ebx
  44c725:	xor    DWORD PTR [ecx+0x31],ebp
  44c728:	xor    DWORD PTR [ecx],0x31933189
  44c72e:	test   eax,0xc931c131
  44c733:	xor    ebx,edx
  44c735:	xor    ecx,ebp
  44c737:	xor    DWORD PTR ds:0x38321b32,eax
  44c73d:	xor    cl,BYTE PTR [esi+0x32]
  44c740:	outs   dx,DWORD PTR ds:[esi]
  44c741:	xor    bh,BYTE PTR [eax+0x32]
  44c744:	mov    ?,WORD PTR [edx]
  44c746:	scas   eax,DWORD PTR es:[edi]
  44c747:	xor    bh,BYTE PTR [eax+0x932ce32]
  44c74d:	xor    esp,DWORD PTR ds:0x51332e33
  44c753:	xor    eax,DWORD PTR [ebx-0x1ccc4ccd]
  44c759:	xor    ecx,DWORD PTR [ecx]
  44c75b:	xor    al,0x39
  44c75d:	xor    al,0x6a
  44c75f:	xor    al,0xa3
  44c761:	xor    al,0xd3
  44c763:	xor    al,0xfa
  44c765:	xor    al,0x15
  44c767:	xor    eax,0x3548352b
  44c76c:	jno    0x44c7a3
  44c76e:	test   DWORD PTR ds:0x35c2359e,esi
  44c774:	jmp    0x9336:0x4a361a35
  44c77b:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  44c77d:	ss enter 0xe536,0x36
  44c782:	out    dx,al
  44c783:	div    DWORD PTR ss:[esi]
  44c786:	sbb    dh,BYTE PTR [edi]
  44c788:	xor    eax,0x72375337
  44c78d:	aaa    
  44c78e:	test   DWORD PTR [edi],esi
  44c790:	test   al,0x37
  44c792:	enter  0xf137,0x37
  44c796:	push   ds
  44c797:	cmp    BYTE PTR [ebx],ch
  44c799:	cmp    BYTE PTR [eax+edi*1+0x7a],dl
  44c79d:	cmp    BYTE PTR [edx+0x1338df38],ch
  44c7a3:	cmp    DWORD PTR ds:0x6c394339,esp
  44c7a9:	cmp    DWORD PTR [ebp-0x5c635c7],esp
  44c7af:	cmp    DWORD PTR [edi],ebx
  44c7b1:	cmp    ch,BYTE PTR [eax]
  44c7b3:	cmp    dl,BYTE PTR [ecx+0x3a]
  44c7b6:	jge    0x44c7f2
  44c7b8:	xchg   ebp,eax
  44c7b9:	cmp    al,dh
  44c7bb:	cmp    dl,ch
  44c7bd:	cmp    al,BYTE PTR [esi]
  44c7bf:	cmp    esi,DWORD PTR [ebx]
  44c7c1:	cmp    ebx,DWORD PTR [ecx+0x3b]
  44c7c4:	cmp    BYTE PTR [ebx],0xa2
  44c7c7:	cmp    eax,edx
  44c7c9:	cmp    esi,edx
  44c7cb:	cmp    ebp,DWORD PTR [edx]
  44c7cd:	cmp    al,0x59
  44c7cf:	cmp    al,0x9a
  44c7d1:	cmp    al,0xca
  44c7d3:	cmp    al,0xfa
  44c7d5:	cmp    al,0x3a
  44c7d7:	cmp    eax,0x3d9a3d6a
  44c7dc:	retf   0xe53d
  44c7df:	cmp    eax,0x3e353e1c
  44c7e4:	ds ds popa 
  44c7e7:	ds jne 0x44c828
  44c7ea:	cwde   
  44c7eb:	ds mov ch,0x3e
  44c7ee:	retf   
  44c7ef:	ds in  eax,0x3e
  44c7f2:	out    dx,al
  44c7f3:	ds push cs
  44c7f5:	aas    
  44c7f6:	and    eax,0x553f3b3f
  44c7fb:	aas    
  44c7fc:	pop    esi
  44c7fd:	aas    
  44c7fe:	jle    0x44c83f
  44c800:	stos   BYTE PTR es:[edi],al
  44c801:	aas    
  44c802:	jmp    0x304c846
  44c807:	add    BYTE PTR [eax],dl
  44c809:	add    DWORD PTR [eax],eax
  44c80b:	add    BYTE PTR ds:0x45302630,al
  44c811:	xor    BYTE PTR [eax+esi*1+0x75],bl
  44c815:	xor    BYTE PTR [ebx-0x44cf5ad0],cl
  44c81b:	xor    al,bl
  44c81d:	xor    cl,ah
  44c81f:	xor    dl,ch
  44c821:	xor    bl,dh
  44c823:	xor    ah,bh
  44c825:	xor    BYTE PTR [eax],bl
  44c827:	xor    DWORD PTR ds:0x47313e31,esi
  44c82d:	xor    DWORD PTR [ebx+0x31],edx
  44c830:	pop    edi
  44c831:	xor    DWORD PTR [eax+0x31],ebp
  44c834:	jno    0x44c867
  44c836:	jge    0x44c869
  44c838:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44c839:	xor    DWORD PTR [ebp+0x131e831],edi
  44c83f:	xor    cl,BYTE PTR [ecx]
  44c841:	xor    bl,BYTE PTR [edi]
  44c843:	xor    dl,BYTE PTR [edx+esi*1+0x72]
  44c847:	xor    bl,BYTE PTR [edx+0x232ca32]
  44c84d:	xor    ebp,DWORD PTR [edi]
  44c84f:	xor    edx,DWORD PTR [edx+0x33]
  44c852:	xor    ecx,DWORD PTR gs:[eax-0x3acc4dcd]
  44c859:	xor    ecx,esi
  44c85b:	xor    ebp,edx
  44c85d:	xor    eax,DWORD PTR ds:0x4a341b34
  44c863:	xor    al,0x7c
  44c865:	xor    al,0x92
  44c867:	xor    al,0xe5
  44c869:	xor    al,0x1b
  44c86b:	xor    eax,0x35733542
  44c870:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44c871:	xor    eax,0x35fa35d5
  44c876:	sub    dh,BYTE PTR [esi]
  44c878:	pop    edx
  44c879:	lea    esi,ss:[esi]
  44c87c:	mov    ebp,0x3336ea36
  44c881:	aaa    
  44c882:	pop    edx
  44c883:	aaa    
  44c884:	jne    0x44c8bd
  44c886:	lods   al,BYTE PTR ds:[esi]
  44c887:	aaa    
  44c888:	fidiv  DWORD PTR [edi]
  44c88a:	cmc    
  44c88b:	aaa    
  44c88c:	sub    al,0x38
  44c88e:	pop    edx
  44c88f:	cmp    BYTE PTR [ebp+0x38],dh
  44c892:	jle    0x44c8cc
  44c894:	mov    ebp,0x2a390638
  44c899:	cmp    DWORD PTR [ebp+0x39],esp
  44c89c:	mov    bh,BYTE PTR [ecx]
  44c89e:	lds    edi,FWORD PTR [ecx]
  44c8a0:	cmc    
  44c8a1:	cmp    DWORD PTR [edx],ebx
  44c8a3:	cmp    dl,BYTE PTR [ebp+0x3a]
  44c8a6:	test   DWORD PTR [edx],edi
  44c8a8:	stos   BYTE PTR es:[edi],al
  44c8a9:	cmp    ah,ch
  44c8ab:	cmp    cl,BYTE PTR [edx]
  44c8ad:	cmp    esp,DWORD PTR ds:0x443b2e3b
  44c8b3:	cmp    edx,DWORD PTR [ebp+0x3b]
  44c8b6:	imul   edi,DWORD PTR [ebx],0xffffff85
  44c8b9:	cmp    ecx,DWORD PTR [esi-0x52c468c5]
  44c8bf:	cmp    eax,ebp
  44c8c1:	cmp    ecx,esi
  44c8c3:	cmp    edx,edi
  44c8c5:	cmp    ebp,ebp
  44c8c7:	cmp    ebx,DWORD PTR [edx]
  44c8c9:	cmp    al,0x35
  44c8cb:	cmp    al,0x4b
  44c8cd:	cmp    al,0x85
  44c8cf:	cmp    al,0xb4
  44c8d1:	cmp    al,0xe3
  44c8d3:	cmp    al,0xf5
  44c8d5:	cmp    al,0xb
  44c8d7:	cmp    eax,0x3d3b3d25
  44c8dc:	bound  edi,QWORD PTR ds:0x3dce3d8a
  44c8e2:	in     eax,0x3d
  44c8e4:	sti    
  44c8e5:	cmp    eax,0x3e333e15
  44c8ea:	inc    ebp
  44c8eb:	ds pop ebx
  44c8ed:	ds js  0x44c92e
  44c8f0:	test   BYTE PTR [esi],bh
  44c8f2:	nop
  44c8f3:	ds pushf 
  44c8f5:	ds test al,0x3e
  44c8f8:	push   es
  44c8f9:	aas    
  44c8fa:	adc    bh,BYTE PTR [edi]
  44c8fc:	push   ds
  44c8fd:	aas    
  44c8fe:	sub    bh,BYTE PTR [edi]
  44c900:	ss aas 
  44c902:	inc    edx
  44c903:	aas    
  44c904:	dec    esi
  44c905:	aas    
  44c906:	jb     0x44c947
  44c908:	mov    al,0x3f
  44c90a:	mov    esp,0xe13fd53f
  44c90f:	aas    
  44c910:	clc    
  44c911:	aas    
  44c912:	add    BYTE PTR [eax],al
  44c914:	add    al,dl
  44c916:	add    al,BYTE PTR [eax]
  44c918:	pusha  
  44c919:	add    DWORD PTR [eax],eax
  44c91b:	add    BYTE PTR [edi],al
  44c91d:	xor    BYTE PTR [ebx],dl
  44c91f:	xor    BYTE PTR [edi],bl
  44c921:	xor    BYTE PTR [eax],bh
  44c923:	xor    BYTE PTR [eax+esi*1+0x50],al
  44c927:	xor    BYTE PTR [edi+0x30],bl
  44c92a:	push   0x9a307130
  44c92f:	xor    dl,al
  44c931:	xor    dl,dh
  44c933:	xor    BYTE PTR [edx],bl
  44c935:	xor    DWORD PTR [edx+0x31],edx
  44c938:	jo     0x44c96b
  44c93a:	xchg   BYTE PTR [ecx],dh
  44c93c:	xchg   ebp,eax
  44c93d:	xor    DWORD PTR [esi-0xdce3ecf],ebx
  44c943:	xor    DWORD PTR [edi],ebx
  44c945:	xor    dl,BYTE PTR [eax+0x32]
  44c948:	pop    esp
  44c949:	xor    bh,BYTE PTR [edx+0x32]
  44c94c:	mov    al,0x32
  44c94e:	mov    esp,0x532d232
  44c953:	xor    ebp,DWORD PTR [edx]
  44c955:	xor    edx,DWORD PTR [ebp+0x33]
  44c958:	jns    0x44c98d
  44c95a:	cwde   
  44c95b:	xor    esp,DWORD PTR [ebx+esi*1+0x33bc33b0]
  44c962:	enter  0xd433,0x33
  44c966:	loopne 0x44c99b
  44c968:	in     al,dx
  44c969:	xor    esi,ebp
  44c96b:	xor    eax,DWORD PTR [ecx]
  44c96d:	xor    al,0xd
  44c96f:	xor    al,0x19
  44c971:	xor    al,0x25
  44c973:	xor    al,0x2e
  44c975:	xor    al,0x3a
  44c977:	xor    al,0x46
  44c979:	xor    al,0x52
  44c97b:	xor    al,0x5e
  44c97d:	xor    al,0x6a
  44c97f:	xor    al,0x76
  44c981:	xor    al,0x82
  44c983:	xor    al,0x8b
  44c985:	xor    al,0x94
  44c987:	xor    al,0x9d
  44c989:	xor    al,0xb9
  44c98b:	xor    al,0xe5
  44c98d:	xor    al,0xef
  44c98f:	xor    al,0xf8
  44c991:	xor    al,0x1
  44c993:	xor    eax,0x3513350a
  44c998:	sub    DWORD PTR ds:0x35543548,esi
  44c99e:	jge    0x44c9d5
  44c9a0:	mov    ch,0x35
  44c9a2:	jecxz  0x44c9d9
  44c9a4:	or     dh,BYTE PTR [esi]
  44c9a6:	and    eax,0x37362e36
  44c9ab:	ss dec ebp
  44c9ad:	ss gs outs dx,BYTE PTR ss:[esi]
  44c9b1:	ss jp  0x44c9ea
  44c9b4:	xchg   BYTE PTR [esi],dh
  44c9b6:	(bad)  
  44c9b7:	ss cwde 
  44c9b9:	ss mov ah,0x36
  44c9bc:	enter  0xd136,0x36
  44c9c0:	fidiv  DWORD PTR [esi]
  44c9c2:	jecxz  0x44c9fa
  44c9c4:	out    dx,eax
  44c9c5:	ss sti 
  44c9c7:	ss pop es
  44c9c9:	aaa    
  44c9ca:	adc    esi,DWORD PTR [edi]
  44c9cc:	pop    ds
  44c9cd:	aaa    
  44c9ce:	sub    BYTE PTR [edi],dh
  44c9d0:	push   ecx
  44c9d1:	aaa    
  44c9d2:	gs aaa 
  44c9d4:	xor    DWORD PTR [edi],0xffffffb2
  44c9d7:	aaa    
  44c9d8:	fidiv  DWORD PTR [edi]
  44c9da:	adc    bh,BYTE PTR [eax]
  44c9dc:	cmp    bh,BYTE PTR [eax]
  44c9de:	bound  edi,QWORD PTR [eax]
  44c9e0:	test   DWORD PTR [eax],edi
  44c9e2:	test   eax,0xf538da38
  44c9e7:	cmp    BYTE PTR [eax],bl
  44c9e9:	cmp    DWORD PTR ds:0x75395839,esi
  44c9ef:	cmp    DWORD PTR [eax-0x1ac62dc7],ebx
  44c9f5:	cmp    esi,ebp
  44c9f7:	cmp    DWORD PTR [ecx],ebx
  44c9f9:	cmp    dh,BYTE PTR ds:0x473a3e3a
  44c9ff:	cmp    ah,BYTE PTR [eax+0x3a]
  44ca02:	test   BYTE PTR [edx],bh
  44ca04:	mov    ebp,0x153b033a
  44ca09:	cmp    ebx,DWORD PTR [esi]
  44ca0b:	cmp    esp,DWORD PTR [edi]
  44ca0d:	cmp    esi,DWORD PTR [eax]
  44ca0f:	cmp    edi,DWORD PTR [ecx]
  44ca11:	cmp    eax,DWORD PTR [edx+0x3b]
  44ca14:	dec    ebx
  44ca15:	cmp    edx,DWORD PTR [ebx+edi*1+0x5d]
  44ca19:	cmp    eax,DWORD PTR [eax-0x61c46ac5]
  44ca1f:	cmp    esp,DWORD PTR [edi-0x46c44fc5]
  44ca25:	cmp    ebx,esp
  44ca27:	cmp    edi,eax
  44ca29:	cmp    eax,DWORD PTR [esp+edi*1]
  44ca2c:	or     eax,0x223c193c
  44ca31:	cmp    al,0x51
  44ca33:	cmp    al,0x5a
  44ca35:	cmp    al,0x66
  44ca37:	cmp    al,0x9a
  44ca39:	cmp    al,0xca
  44ca3b:	cmp    al,0x3
  44ca3d:	cmp    eax,0x3d633d33
  44ca42:	jne    0x44ca81
  44ca44:	xchg   ebx,eax
  44ca45:	cmp    eax,0x3dd53dc3
  44ca4a:	fidivr WORD PTR ds:0x3df03de7
  44ca50:	stc    
  44ca51:	cmp    eax,0x3e1e3e02
  44ca56:	xor    eax,0x473e3e3e
  44ca5b:	ds jb  0x44ca9c
  44ca5e:	call   0xe13e:0xbe3eb53e
  44ca65:	ds or  eax,0x6a3f3a3f
  44ca6b:	aas    
  44ca6c:	lea    edi,[edi]
  44ca6e:	mov    edx,0xfb3fe53f
  44ca73:	aas    
  44ca74:	add    al,ah
  44ca76:	add    al,BYTE PTR [eax]
  44ca78:	js     0x44ca7b
  44ca7a:	add    BYTE PTR [eax],al
  44ca7c:	cmp    dh,BYTE PTR [eax]
  44ca7e:	jp     0x44cab0
  44ca80:	ret    0x3130
  44ca83:	xor    DWORD PTR [ebp+0x31],eax
  44ca86:	dec    esi
  44ca87:	xor    DWORD PTR [ecx+0x31],esp
  44ca8a:	push   0x31
  44ca8c:	xchg   ebx,eax
  44ca8d:	xor    DWORD PTR [edx-0x1ece27cf],edi
  44ca93:	xor    edx,ebp
  44ca95:	xor    ebx,esi
  44ca97:	xor    esp,edi
  44ca99:	xor    DWORD PTR ds:0x6a324b32,esp
  44ca9f:	xor    bh,BYTE PTR [ebx+0x32]
  44caa2:	xchg   DWORD PTR [edx],esi
  44caa4:	xchg   ebx,eax
  44caa5:	xor    bl,BYTE PTR [edx+esi*1+0x32b432a8]
  44caac:	shl    BYTE PTR [edx],0xc9
  44caaf:	xor    dh,dl
  44cab1:	xor    ah,BYTE PTR [ebx+esi*1]
  44cab4:	xor    eax,0x47333e33
  44cab9:	xor    ebp,DWORD PTR [edx+0x33]
  44cabc:	call   0xe533:0xd333b533
  44cac3:	xor    esi,ecx
  44cac5:	xor    edi,ebp
  44cac7:	xor    eax,DWORD PTR [esi]
  44cac9:	xor    al,0xf
  44cacb:	xor    al,0x18
  44cacd:	xor    al,0x24
  44cacf:	xor    al,0x30
  44cad1:	xor    al,0x3c
  44cad3:	xor    al,0x48
  44cad5:	xor    al,0x54
  44cad7:	xor    al,0x60
  44cad9:	xor    al,0x6c
  44cadb:	xor    al,0x78
  44cadd:	xor    al,0x84
  44cadf:	xor    al,0x90
  44cae1:	xor    al,0x9c
  44cae3:	xor    al,0xc5
  44cae5:	xor    al,0xf5
  44cae7:	xor    al,0x1a
  44cae9:	xor    eax,0x357a354d
  44caee:	int    0x35
  44caf0:	in     eax,0x35
  44caf2:	icebp  
  44caf3:	xor    eax,0x360935fd
  44caf8:	inc    edi
  44caf9:	ss pop eax
  44cafb:	ss fs xor DWORD PTR ss:[esi],0xffffff8f
  44cb01:	ss scas al,BYTE PTR es:[edi]
  44cb03:	ss mov edx,0xef36c636
  44cb09:	ss add eax,0x45373037
  44cb0f:	aaa    
  44cb10:	dec    esi
  44cb11:	aaa    
  44cb12:	push   edi
  44cb13:	aaa    
  44cb14:	jo     0x44cb4d
  44cb16:	jns    0x44cb4f
  44cb18:	pushf  
  44cb19:	aaa    
  44cb1a:	fidiv  DWORD PTR [edi]
  44cb1c:	cmc    
  44cb1d:	aaa    
  44cb1e:	(bad)  
  44cb1f:	aaa    
  44cb20:	dec    esp
  44cb21:	cmp    BYTE PTR [ebp+0x38],ah
  44cb24:	mov    ?,WORD PTR [eax]
  44cb26:	mov    al,0x38
  44cb28:	sar    DWORD PTR [eax],cl
  44cb2a:	out    0x38,eax
  44cb2c:	and    al,0x39
  44cb2e:	cmp    bh,BYTE PTR [ecx]
  44cb30:	inc    esi
  44cb31:	cmp    DWORD PTR [edx+0x39],edx
  44cb34:	pop    esi
  44cb35:	cmp    DWORD PTR [edx+0x39],ebp
  44cb38:	jbe    0x44cb73
  44cb3a:	cdq    
  44cb3b:	cmp    DWORD PTR [ebp-0x35c641c7],esi
  44cb41:	cmp    ebx,edx
  44cb43:	cmp    edi,ebx
  44cb45:	cmp    eax,ebp
  44cb47:	cmp    DWORD PTR [ecx],edx
  44cb49:	cmp    al,BYTE PTR [eax+0x3a]
  44cb4c:	push   edi
  44cb4d:	cmp    dh,BYTE PTR [eax+0x3a]
  44cb50:	jl     0x44cb8c
  44cb52:	xchg   ebx,eax
  44cb53:	cmp    bl,BYTE PTR [edi-0x48c554c6]
  44cb59:	cmp    al,bl
  44cb5b:	cmp    cl,bh
  44cb5d:	cmp    bl,bl
  44cb5f:	cmp    dh,ah
  44cb61:	cmp    al,BYTE PTR [eax]
  44cb63:	cmp    esp,DWORD PTR [edx]
  44cb65:	cmp    edi,DWORD PTR [ecx]
  44cb67:	cmp    edx,DWORD PTR [eax+0x3b]
  44cb6a:	cmp    edi,DWORD PTR [bp+0x3b]
  44cb6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44cb6f:	cmp    eax,edx
  44cb71:	cmp    ecx,ebx
  44cb73:	cmp    edx,edi
  44cb75:	cmp    esp,ebx
  44cb77:	cmp    ebp,edi
  44cb79:	cmp    edi,ebx
  44cb7b:	cmp    eax,DWORD PTR [esp+edi*1]
  44cb7e:	adc    BYTE PTR [esp+ebx*1],bh
  44cb81:	cmp    al,0x28
  44cb83:	cmp    al,0x31
  44cb85:	cmp    al,0x3d
  44cb87:	cmp    al,0x66
  44cb89:	cmp    al,0x8a
  44cb8b:	cmp    al,0xba
  44cb8d:	cmp    al,0xe3
  44cb8f:	cmp    al,0xec
  44cb91:	cmp    al,0xf5
  44cb93:	cmp    al,0x1
  44cb95:	cmp    eax,0x3d163d0a
  44cb9a:	aas    
  44cb9b:	cmp    eax,0x3d743d58
  44cba0:	jge    0x44cbdf
  44cba2:	xchg   BYTE PTR ds:0x3dc73d9d,bh
  44cba8:	sar    DWORD PTR ds:0x3deb3ddf,cl
  44cbae:	idiv   DWORD PTR ds:0x3e0f3e03
  44cbb4:	sbb    BYTE PTR [esi],bh
  44cbb6:	and    al,0x3e
  44cbb8:	push   ebp
  44cbb9:	mov    ?,WORD PTR ds:[esi]
  44cbbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44cbbd:	ds scas al,BYTE PTR es:[edi]
  44cbbf:	ds mov bh,0x3e
  44cbc2:	sar    BYTE PTR [esi],0xe6
  44cbc5:	or     BYTE PTR ds:[edi],bh
  44cbc8:	adc    al,0x3f
  44cbca:	and    BYTE PTR [edi],bh
  44cbcc:	sub    al,0x3f
  44cbce:	cmp    BYTE PTR [edi],bh
  44cbd0:	inc    esp
  44cbd1:	aas    
  44cbd2:	push   eax
  44cbd3:	aas    
  44cbd4:	pop    esp
  44cbd5:	aas    
  44cbd6:	push   0x803f743f
  44cbdb:	aas    
  44cbdc:	mov    WORD PTR [edi],?
  44cbde:	cwde   
  44cbdf:	aas    
  44cbe0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44cbe1:	aas    
  44cbe2:	mov    al,0x3f
  44cbe4:	mov    esp,0xd43fc83f
  44cbe9:	aas    
  44cbea:	loopne 0x44cc2b
  44cbec:	add    al,dh
  44cbee:	add    al,BYTE PTR [eax]
  44cbf0:	call   0xe44cbf5
  44cbf5:	xor    BYTE PTR [eax+esi*1],bh
  44cbf8:	push   0x30
  44cbfa:	jbe    0x44cc2c
  44cbfc:	xor    BYTE PTR [eax],0xb6
  44cbff:	xor    ch,al
  44cc01:	xor    dh,cl
  44cc03:	xor    bh,dl
  44cc05:	xor    dl,bh
  44cc07:	xor    BYTE PTR ds:0x3a312e31,bl
  44cc0d:	xor    DWORD PTR [eax+0x31],ebp
  44cc10:	test   DWORD PTR [ecx],esi
  44cc12:	mov    ?,WORD PTR [ecx]
  44cc14:	mov    cl,0x31
  44cc16:	(bad)  
  44cc17:	xor    esi,esp
  44cc19:	xor    esi,esi
  44cc1b:	xor    DWORD PTR [esi],eax
  44cc1d:	xor    dl,BYTE PTR [esi]
  44cc1f:	xor    dh,BYTE PTR [ecx]
  44cc21:	xor    dh,BYTE PTR [edi]
  44cc23:	xor    bh,BYTE PTR [edx+esi*1]
  44cc26:	push   esi
  44cc27:	xor    ah,BYTE PTR [esi+0x32]
  44cc2a:	jbe    0x44cc5e
  44cc2c:	xchg   BYTE PTR [edx],dh
  44cc2e:	xchg   esi,eax
  44cc2f:	xor    ah,BYTE PTR [esi-0x2ecd49ce]
  44cc35:	xor    ah,cl
  44cc37:	xor    ah,bh
  44cc39:	xor    ch,ah
  44cc3b:	xor    al,BYTE PTR [esi]
  44cc3d:	xor    esp,DWORD PTR [ecx]
  44cc3f:	xor    esp,DWORD PTR [edi]
  44cc41:	xor    ebp,DWORD PTR [ebx+esi*1]
  44cc44:	inc    esi
  44cc45:	xor    esp,DWORD PTR [ecx+0x33]
  44cc48:	xor    bp,WORD PTR [ebx+esi*1+0x71]
  44cc4d:	xor    eax,DWORD PTR [ecx-0x73cc79cd]
  44cc53:	xor    edx,DWORD PTR [ecx-0x59cc5ecd]
  44cc59:	xor    ebp,DWORD PTR [ebx+esi*1+0x33c133b1]
  44cc60:	(bad)  
  44cc61:	xor    ecx,esp
  44cc63:	xor    edx,ecx
  44cc65:	xor    esp,ecx
  44cc67:	xor    esi,esi
  44cc69:	xor    eax,DWORD PTR [ecx]
  44cc6b:	xor    al,0x6
  44cc6d:	xor    al,0xc
  44cc6f:	xor    al,0x13
  44cc71:	xor    al,0x18
  44cc73:	xor    al,0x21
  44cc75:	xor    al,0x26
  44cc77:	xor    al,0x2c
  44cc79:	xor    al,0x33
  44cc7b:	xor    al,0x38
  44cc7d:	xor    al,0x47
  44cc7f:	xor    al,0x50
  44cc81:	xor    al,0x66
  44cc83:	xor    al,0x76
  44cc85:	xor    al,0x86
  44cc87:	xor    al,0x96
  44cc89:	xor    al,0xa1
  44cc8b:	xor    al,0xa8
  44cc8d:	xor    al,0xb1
  44cc8f:	xor    al,0xba
  44cc91:	xor    al,0xe1
  44cc93:	xor    al,0xe7
  44cc95:	xor    al,0x31
  44cc97:	xor    eax,0x35413537
  44cc9c:	inc    edi
  44cc9d:	xor    eax,0x35573551
  44cca2:	popa   
  44cca3:	xor    eax,0x35713567
  44cca8:	xor    DWORD PTR ds:0x35a1358f,0xffffffd1
  44ccaf:	xor    eax,0x35e135d7
  44ccb4:	out    0x35,eax
  44ccb6:	icebp  
  44ccb7:	xor    eax,0x360135f7
  44ccbc:	pop    es
  44ccbd:	adc    DWORD PTR ss:[esi],esi
  44ccc0:	pop    ss
  44ccc1:	and    esi,DWORD PTR ss:[esi]
  44ccc4:	bound  esi,QWORD PTR [esi]
  44ccc6:	data16 ss jno 0x44cd00
  44ccca:	ja     0x44cd02
  44cccc:	xor    BYTE PTR [esi],0x86
  44cccf:	ss xchg edx,eax
  44ccd1:	ss xchg esi,eax
  44ccd3:	add    BYTE PTR ss:[eax],al
  44ccd6:	add    eax,DWORD PTR [eax]
  44ccd8:	js     0x44ccdb
  44ccda:	add    BYTE PTR [eax],al
  44ccdc:	push   0x70346c34
  44cce1:	xor    al,0x74
  44cce3:	xor    al,0x78
  44cce5:	xor    al,0x7c
  44cce7:	xor    al,0x80
  44cce9:	xor    al,0x84
  44cceb:	xor    al,0x88
  44cced:	xor    al,0x8c
  44ccef:	xor    al,0x90
  44ccf1:	xor    al,0x94
  44ccf3:	xor    al,0x98
  44ccf5:	xor    al,0x9c
  44ccf7:	xor    al,0xa0
  44ccf9:	xor    al,0xa4
  44ccfb:	xor    al,0xa8
  44ccfd:	xor    al,0xac
  44ccff:	xor    al,0xb0
  44cd01:	xor    al,0xb4
  44cd03:	xor    al,0xb8
  44cd05:	xor    al,0xbc
  44cd07:	xor    al,0xc0
  44cd09:	xor    al,0xc4
  44cd0b:	xor    al,0xc8
  44cd0d:	xor    al,0xcc
  44cd0f:	xor    al,0xd0
  44cd11:	xor    al,0xd4
  44cd13:	xor    al,0xd8
  44cd15:	xor    al,0xdc
  44cd17:	xor    al,0xe0
  44cd19:	xor    al,0xec
  44cd1b:	xor    al,0xf0
  44cd1d:	xor    al,0xf4
  44cd1f:	xor    al,0x1c
  44cd21:	xor    eax,0x35243520
  44cd26:	sub    BYTE PTR ds:0x3530352c,dh
  44cd2c:	xor    al,0x35
  44cd2e:	cmp    BYTE PTR ds:0x3540353c,dh
  44cd34:	test   al,0x35
  44cd36:	lods   al,BYTE PTR ds:[esi]
  44cd37:	xor    eax,0x35b435b0
  44cd3c:	mov    eax,0xc035bc35
  44cd41:	xor    eax,0x35c835c4
  44cd46:	int3   
  44cd47:	xor    eax,0x35d835d0
  44cd4c:	fdiv   QWORD PTR ds:0x35ec35e8
  44cd52:	lock xor eax,0x35f835f4
  44cd58:	cld    
  44cd59:	xor    eax,0x36043600
  44cd5e:	or     BYTE PTR [esi],dh
  44cd60:	or     al,0x36
  44cd62:	adc    BYTE PTR [esi],dh
  44cd64:	adc    al,0x36
  44cd66:	sbb    BYTE PTR [esi],dh
  44cd68:	sbb    al,0x36
  44cd6a:	sub    al,0x36
  44cd6c:	xor    BYTE PTR [esi],dh
  44cd6e:	xor    al,0x36
  44cd70:	cmp    BYTE PTR [esi],dh
  44cd72:	cmp    al,0x36
  44cd74:	inc    eax
  44cd75:	ss inc esp
  44cd77:	ss dec eax
  44cd79:	ss dec esp
  44cd7b:	ss push eax
  44cd7d:	ss push esp
  44cd7f:	ss pop eax
  44cd81:	ss pop esp
  44cd83:	ss and al,0x38
  44cd86:	sub    BYTE PTR [eax],bh
  44cd88:	sub    al,0x38
  44cd8a:	xor    BYTE PTR [eax],bh
  44cd8c:	xor    al,0x38
  44cd8e:	cmp    BYTE PTR [eax],bh
  44cd90:	cmp    al,0x38
  44cd92:	je     0x44cdcc
  44cd94:	js     0x44cdce
  44cd96:	jl     0x44cdd0
  44cd98:	cmp    BYTE PTR [eax],0x84
  44cd9b:	cmp    BYTE PTR [eax-0x6fc773c8],cl
  44cda1:	cmp    BYTE PTR [eax+edi*1+0x389c3898],dl
  44cda8:	mov    al,ds:0xa838a438
  44cdad:	cmp    ah,cl
  44cdaf:	cmp    al,dl
  44cdb1:	cmp    ah,dl
  44cdb3:	cmp    al,bl
  44cdb5:	cmp    ah,bl
  44cdb7:	cmp    al,ah
  44cdb9:	cmp    ah,ah
  44cdbb:	cmp    BYTE PTR [eax+0x3b],bl
  44cdbe:	pop    esp
  44cdbf:	cmp    esp,DWORD PTR [eax+0x3b]
  44cdc2:	cmp    ebp,DWORD PTR fs:[eax+0x3b]
  44cdc6:	ins    BYTE PTR es:[edi],dx
  44cdc7:	cmp    esi,DWORD PTR [eax+0x3b]
  44cdca:	je     0x44ce07
  44cdcc:	js     0x44ce09
  44cdce:	jl     0x44ce0b
  44cdd0:	cmp    BYTE PTR [ebx],0x84
  44cdd3:	cmp    ecx,DWORD PTR [eax-0x6fc473c5]
  44cdd9:	cmp    edx,DWORD PTR [ebx+edi*1+0x3b9c3b98]
  44cde0:	mov    al,ds:0xa83ba43b
  44cde5:	cmp    ecx,esp
  44cde7:	cmp    edx,eax
  44cde9:	cmp    edx,esp
  44cdeb:	cmp    ebx,eax
  44cded:	cmp    ebx,esp
  44cdef:	cmp    esp,eax
  44cdf1:	cmp    esp,esp
  44cdf3:	cmp    ebp,eax
  44cdf5:	cmp    ebp,esp
  44cdf7:	cmp    esi,eax
  44cdf9:	cmp    esi,esp
  44cdfb:	cmp    edi,eax
  44cdfd:	cmp    edi,esp
  44cdff:	cmp    eax,DWORD PTR [eax]
  44ce01:	cmp    al,0x4
  44ce03:	cmp    al,0x8
  44ce05:	cmp    al,0xc
  44ce07:	cmp    al,0x10
  44ce09:	cmp    al,0x14
  44ce0b:	cmp    al,0x18
  44ce0d:	cmp    al,0x1c
  44ce0f:	cmp    al,0x20
  44ce11:	cmp    al,0x24
  44ce13:	cmp    al,0x28
  44ce15:	cmp    al,0x2c
  44ce17:	cmp    al,0x30
  44ce19:	cmp    al,0x8c
  44ce1b:	cmp    eax,0x3d943d90
  44ce20:	cwde   
  44ce21:	cmp    eax,0x3da03d9c
  44ce26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44ce27:	cmp    eax,0x3dac3da8
  44ce2c:	mov    al,0x3d
  44ce2e:	mov    ah,0x3d
  44ce30:	mov    eax,0xc03dbc3d
  44ce35:	cmp    eax,0x3dc83dc4
  44ce3a:	int3   
  44ce3b:	cmp    eax,0x3dd43dd0
  44ce40:	fdivr  DWORD PTR ds:0x3de03ddc
  44ce46:	sub    al,0x3f
  44ce48:	xor    BYTE PTR [edi],bh
  44ce4a:	xor    al,0x3f
  44ce4c:	add    BYTE PTR [eax],dl
  44ce4e:	add    eax,DWORD PTR [eax]
  44ce50:	cld    
  44ce51:	add    BYTE PTR [eax],al
  44ce53:	add    ah,dl
  44ce55:	xor    bl,al
  44ce57:	xor    bl,ah
  44ce59:	xor    ah,al
  44ce5b:	xor    ah,ah
  44ce5d:	xor    ch,al
  44ce5f:	xor    ch,ah
  44ce61:	xor    dh,al
  44ce63:	xor    dh,ah
  44ce65:	xor    bh,al
  44ce67:	xor    bh,ah
  44ce69:	xor    al,BYTE PTR [eax]
  44ce6b:	xor    eax,DWORD PTR [ebx+esi*1]
  44ce6e:	or     BYTE PTR [ebx],dh
  44ce70:	or     al,0x33
  44ce72:	adc    BYTE PTR [ebx],dh
  44ce74:	adc    al,0x33
  44ce76:	sbb    BYTE PTR [ebx],dh
  44ce78:	mov    WORD PTR [eax+edx*4],?
  44ce7b:	xor    al,0x94
  44ce7d:	xor    al,0x98
  44ce7f:	xor    al,0x9c
  44ce81:	xor    al,0xa0
  44ce83:	xor    al,0xa4
  44ce85:	xor    al,0xa8
  44ce87:	xor    al,0xac
  44ce89:	xor    al,0xb0
  44ce8b:	xor    al,0xb4
  44ce8d:	xor    al,0xb8
  44ce8f:	xor    al,0xbc
  44ce91:	xor    al,0xc0
  44ce93:	xor    al,0xc4
  44ce95:	xor    al,0xc8
  44ce97:	xor    al,0xcc
  44ce99:	xor    al,0xd0
  44ce9b:	xor    al,0xd4
  44ce9d:	xor    al,0xd8
  44ce9f:	xor    al,0xdc
  44cea1:	xor    al,0xe0
  44cea3:	xor    al,0xe4
  44cea5:	xor    al,0xe8
  44cea7:	xor    al,0xec
  44cea9:	xor    al,0xf0
  44ceab:	xor    al,0xf4
  44cead:	xor    al,0xf8
  44ceaf:	xor    al,0xfc
  44ceb1:	xor    al,0x0
  44ceb3:	xor    eax,0x35083504
  44ceb8:	or     al,0x35
  44ceba:	adc    BYTE PTR ds:0x35183514,dh
  44cec0:	sbb    al,0x35
  44cec2:	and    BYTE PTR ds:0x35283524,dh
  44cec8:	sub    al,0x35
  44ceca:	xor    BYTE PTR ds:0x35383534,dh
  44ced0:	cmp    al,0x35
  44ced2:	inc    eax
  44ced3:	xor    eax,0x35483544
  44ced8:	dec    esp
  44ced9:	xor    eax,0x35543550
  44cede:	pop    eax
  44cedf:	xor    eax,0x3560355c
  44cee4:	fs xor eax,0x356c3568
  44ceea:	jo     0x44cf21
  44ceec:	je     0x44cf23
  44ceee:	js     0x44cf25
  44cef0:	jl     0x44cf27
  44cef2:	xor    BYTE PTR ds:0x35883584,0x8c
  44cef9:	xor    eax,0x35943590
  44cefe:	cwde   
  44ceff:	xor    eax,0x35a0359c
  44cf04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44cf05:	xor    eax,0x35ac35a8
  44cf0a:	mov    al,0x35
  44cf0c:	mov    ah,0x35
  44cf0e:	mov    eax,0xc035bc35
  44cf13:	xor    eax,0x35c835c4
  44cf18:	int3   
  44cf19:	xor    eax,0x35d435d0
  44cf1e:	fdiv   DWORD PTR ds:0x35e035dc
  44cf24:	in     al,0x35
  44cf26:	call   0x787b4360
  44cf2b:	ss jl  0x44cf64
  44cf2e:	xor    BYTE PTR [esi],0xa8
  44cf31:	lods   al,BYTE PTR ds:[esi]
  44cf33:	ds mov al,0x3e
  44cf36:	mov    ah,0x3e
  44cf38:	mov    eax,0xc03ebc3e
  44cf3d:	les    edi,FWORD PTR ds:[esi]
  44cf40:	enter  0xcc3e,0x3e
  44cf44:	sar    BYTE PTR [esi],1
  44cf46:	aam    0x3e
  44cf48:	add    BYTE PTR [eax],ah
  44cf4a:	add    eax,DWORD PTR [eax]
  44cf4c:	inc    esp
  44cf4d:	add    BYTE PTR [eax],al
  44cf4f:	add    BYTE PTR [esi*1+0x39483540],bh
  44cf56:	dec    esp
  44cf57:	cmp    DWORD PTR [eax+0x39],edx
  44cf5a:	push   esp
  44cf5b:	cmp    DWORD PTR [eax+0x39],ebx
  44cf5e:	pop    esp
  44cf5f:	cmp    DWORD PTR [eax+0x39],esp
  44cf62:	cmp    DWORD PTR fs:[eax+0x39],ebp
  44cf66:	ins    BYTE PTR es:[edi],dx
  44cf67:	cmp    DWORD PTR [eax+0x39],esi
  44cf6a:	je     0x44cfa5
  44cf6c:	js     0x44cfa7
  44cf6e:	jl     0x44cfa9
  44cf70:	cmp    BYTE PTR [ecx],0x84
  44cf73:	cmp    DWORD PTR [eax-0x6fc673c7],ecx
  44cf79:	cmp    DWORD PTR [ecx+edi*1+0x399c3998],edx
  44cf80:	mov    al,ds:0xbc39a439
  44cf85:	cmp    eax,eax
  44cf87:	cmp    esp,eax
  44cf89:	cmp    DWORD PTR [eax],eax
  44cf8b:	add    BYTE PTR [eax],al
  44cf8d:	xor    BYTE PTR [ebx],al
  44cf8f:	add    BYTE PTR [eax],dh
  44cf91:	add    eax,DWORD PTR [eax]
  44cf93:	add    BYTE PTR [eax],cl
  44cf95:	xor    BYTE PTR [eax+esi*1],cl
  44cf98:	adc    BYTE PTR [eax],dh
  44cf9a:	adc    al,0x30
  44cf9c:	sbb    BYTE PTR [eax],dh
  44cf9e:	sbb    al,0x30
  44cfa0:	and    BYTE PTR [eax],dh
  44cfa2:	jl     0x44cfd4
  44cfa4:	xor    BYTE PTR [eax],0xe0
  44cfa7:	xor    ah,ah
  44cfa9:	xor    ah,dh
  44cfab:	xor    al,bh
  44cfad:	xor    BYTE PTR [eax],al
  44cfaf:	xor    DWORD PTR [eax],ebx
  44cfb1:	xor    DWORD PTR [eax],ebp
  44cfb3:	xor    DWORD PTR [ecx+esi*1],ebp
  44cfb6:	cmp    al,0x31
  44cfb8:	inc    eax
  44cfb9:	xor    DWORD PTR [ecx+esi*1+0x48],eax
  44cfbd:	xor    DWORD PTR [eax+0x31],edx
  44cfc0:	push   0x7c317831
  44cfc5:	xor    DWORD PTR [ecx+esi*1+0x31943190],ecx
  44cfcc:	cwde   
  44cfcd:	xor    DWORD PTR [ecx+esi*1+0x31bc31a4],ebx
  44cfd4:	shl    BYTE PTR [ecx],0xd8
  44cfd7:	xor    eax,ebp
  44cfd9:	xor    esp,ebp
  44cfdb:	xor    eax,esi
  44cfdd:	xor    esp,esi
  44cfdf:	xor    esp,edi
  44cfe1:	xor    DWORD PTR [edx+esi*1],edx
  44cfe4:	and    al,0x32
  44cfe6:	sub    BYTE PTR [edx],dh
  44cfe8:	sub    al,0x32
  44cfea:	xor    al,0x32
  44cfec:	dec    esp
  44cfed:	xor    bl,BYTE PTR [edx+esi*1+0x60]
  44cff1:	xor    dh,BYTE PTR [edx+esi*1+0x78]
  44cff5:	xor    cl,BYTE PTR [eax-0x6fcd73ce]
  44cffb:	xor    bl,BYTE PTR [eax-0x3fcd4fce]
  44d001:	xor    al,ah
  44d003:	xor    dl,ah
  44d005:	xor    bl,al
  44d007:	xor    bl,ah
  44d009:	xor    ah,ah
  44d00b:	xor    bh,ah
  44d00d:	xor    cl,BYTE PTR [ebx+esi*1]
  44d010:	adc    BYTE PTR [ebx],dh
  44d012:	and    BYTE PTR [ebx],dh
  44d014:	and    al,0x33
  44d016:	sub    BYTE PTR [ebx],dh
  44d018:	sub    al,0x33
  44d01a:	xor    BYTE PTR [ebx],dh
  44d01c:	cmp    BYTE PTR [ebx],dh
  44d01e:	push   eax
  44d01f:	xor    esp,DWORD PTR [eax+0x33]
  44d022:	xor    esi,DWORD PTR fs:[ebx+esi*1+0x78]
  44d027:	xor    edi,DWORD PTR [ebx+esi*1-0x7c]
  44d02b:	xor    ebx,DWORD PTR [ebx+esi*1+0x33b833a0]
  44d032:	enter  0xcc33,0x33
  44d036:	aam    0x33
  44d038:	in     al,dx
  44d039:	xor    edi,esp
  44d03b:	xor    eax,DWORD PTR [eax]
  44d03d:	xor    al,0x10
  44d03f:	xor    al,0x14
  44d041:	xor    al,0x18
  44d043:	xor    al,0x1c
  44d045:	xor    al,0x24
  44d047:	xor    al,0x3c
  44d049:	xor    al,0x4c
  44d04b:	xor    al,0x50
  44d04d:	xor    al,0x60
  44d04f:	xor    al,0x64
  44d051:	xor    al,0x68
  44d053:	xor    al,0x6c
  44d055:	xor    al,0x74
  44d057:	xor    al,0x8c
  44d059:	xor    al,0x9c
  44d05b:	xor    al,0xa0
  44d05d:	xor    al,0xb0
  44d05f:	xor    al,0xb4
  44d061:	xor    al,0xb8
  44d063:	xor    al,0xbc
  44d065:	xor    al,0xc4
  44d067:	xor    al,0xdc
  44d069:	xor    al,0xec
  44d06b:	xor    al,0xf0
  44d06d:	xor    al,0x0
  44d06f:	xor    eax,0x35143504
  44d074:	sbb    BYTE PTR ds:0x3520351c,dh
  44d07a:	sub    BYTE PTR ds:0x35503540,dh
  44d080:	push   esp
  44d081:	xor    eax,0x35683564
  44d086:	ins    BYTE PTR es:[edi],dx
  44d087:	xor    eax,0x358c3574
  44d08c:	pushf  
  44d08d:	xor    eax,0x35b035a0
  44d092:	mov    ah,0x35
  44d094:	mov    eax,0xd835c035
  44d099:	xor    eax,0x35ec35e8
  44d09e:	hlt    
  44d09f:	xor    eax,0x361c360c
  44d0a4:	and    BYTE PTR [esi],dh
  44d0a6:	xor    BYTE PTR [esi],dh
  44d0a8:	xor    al,0x36
  44d0aa:	inc    esp
  44d0ab:	ss dec eax
  44d0ad:	ss dec esp
  44d0af:	ss push eax
  44d0b1:	ss pop eax
  44d0b3:	ss jo  0x44d0ec
  44d0b6:	xor    BYTE PTR [esi],0x84
  44d0b9:	mov    BYTE PTR ss:[esi],dh
  44d0bc:	nop
  44d0bd:	ss test al,0x36
  44d0c0:	mov    eax,0xc436bc36
  44d0c5:	fdiv   QWORD PTR ss:[esi]
  44d0c8:	in     al,dx
  44d0c9:	ss lock add BYTE PTR ss:[edi],dh
  44d0ce:	add    al,0x37
  44d0d0:	adc    al,0x37
  44d0d2:	sbb    BYTE PTR [edi],dh
  44d0d4:	sub    BYTE PTR [edi],dh
  44d0d6:	sub    al,0x37
  44d0d8:	xor    BYTE PTR [edi],dh
  44d0da:	xor    al,0x37
  44d0dc:	cmp    BYTE PTR [edi],dh
  44d0de:	cmp    al,0x37
  44d0e0:	inc    eax
  44d0e1:	aaa    
  44d0e2:	inc    esp
  44d0e3:	aaa    
  44d0e4:	dec    esp
  44d0e5:	aaa    
  44d0e6:	fs aaa 
  44d0e8:	push   0x90378037
  44d0ed:	aaa    
  44d0ee:	xchg   esp,eax
  44d0ef:	aaa    
  44d0f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44d0f1:	aaa    
  44d0f2:	test   al,0x37
  44d0f4:	mov    eax,0xc037bc37
  44d0f9:	aaa    
  44d0fa:	les    esi,FWORD PTR [edi]
  44d0fc:	enter  0xcc37,0x37
  44d100:	aam    0x37
  44d102:	in     al,dx
  44d103:	aaa    
  44d104:	lock aaa 
  44d106:	or     BYTE PTR [eax],bh
  44d108:	sbb    BYTE PTR [eax],bh
  44d10a:	sbb    al,0x38
  44d10c:	sub    al,0x38
  44d10e:	xor    BYTE PTR [eax],bh
  44d110:	xor    al,0x38
  44d112:	cmp    BYTE PTR [eax],bh
  44d114:	inc    eax
  44d115:	cmp    BYTE PTR [eax+0x38],bl
  44d118:	push   0x7c386c38
  44d11d:	cmp    BYTE PTR [eax-0x73c77bc8],al
  44d123:	cmp    BYTE PTR [eax+edi*1+0x38b838b4],ah
  44d12a:	enter  0xcc38,0x38
  44d12e:	aam    0x38
  44d130:	in     al,dx
  44d131:	cmp    ah,bh
  44d133:	cmp    BYTE PTR [eax],al
  44d135:	cmp    DWORD PTR [eax],edx
  44d137:	cmp    DWORD PTR [ecx+edi*1],edx
  44d13a:	sbb    al,0x39
  44d13c:	xor    al,0x39
  44d13e:	inc    esp
  44d13f:	cmp    DWORD PTR [eax+0x39],ecx
  44d142:	pop    eax
  44d143:	cmp    DWORD PTR [ecx+edi*1+0x6c],ebx
  44d147:	cmp    DWORD PTR [eax+0x39],esi
  44d14a:	cmp    BYTE PTR [ecx],0x84
  44d14d:	cmp    DWORD PTR [ecx+edi*1+0x39a83998],edx
  44d154:	lods   al,BYTE PTR ds:[esi]
  44d155:	cmp    DWORD PTR [eax-0x47c64bc7],esi
  44d15b:	cmp    DWORD PTR [ecx+edi*1+0x39c439c0],edi
  44d162:	int3   
  44d163:	cmp    esp,esp
  44d165:	cmp    eax,ebp
  44d167:	cmp    DWORD PTR [eax],eax
  44d169:	cmp    dl,BYTE PTR [eax]
  44d16b:	cmp    dl,BYTE PTR [edx+edi*1]
  44d16e:	and    al,0x3a
  44d170:	sub    BYTE PTR [edx],bh
  44d172:	cmp    BYTE PTR [edx],bh
  44d174:	cmp    al,0x3a
  44d176:	inc    eax
  44d177:	cmp    al,BYTE PTR [edx+edi*1+0x48]
  44d17b:	cmp    cl,BYTE PTR [edx+edi*1+0x54]
  44d17f:	cmp    ch,BYTE PTR [edx+edi*1+0x70]
  44d183:	cmp    cl,BYTE PTR [eax-0x63c567c6]
  44d189:	cmp    ah,BYTE PTR [eax-0x53c55bc6]
  44d18f:	cmp    al,ah
  44d191:	cmp    dl,ah
  44d193:	cmp    bl,al
  44d195:	cmp    bl,ah
  44d197:	cmp    ah,ah
  44d199:	cmp    bh,ah
  44d19b:	cmp    cl,BYTE PTR [ebx+edi*1]
  44d19e:	adc    BYTE PTR [ebx],bh
  44d1a0:	and    BYTE PTR [ebx],bh
  44d1a2:	and    al,0x3b
  44d1a4:	sub    BYTE PTR [ebx],bh
  44d1a6:	sub    al,0x3b
  44d1a8:	xor    al,0x3b
  44d1aa:	dec    esp
  44d1ab:	cmp    ebx,DWORD PTR [ebx+edi*1+0x60]
  44d1af:	cmp    esp,DWORD PTR [ebx+edi*1+0x6c]
  44d1b3:	cmp    eax,DWORD PTR [ebx+edi*1+0x3b983b94]
  44d1ba:	test   al,0x3b
  44d1bc:	lods   al,BYTE PTR ds:[esi]
  44d1bd:	cmp    esi,DWORD PTR [ebx+edi*1+0x3bdc3bcc]
  44d1c4:	loopne 0x44d201
  44d1c6:	lock cmp esi,esp
  44d1c9:	cmp    eax,DWORD PTR [esp+edi*1]
  44d1cc:	or     BYTE PTR [eax+ebx*1],bh
  44d1cf:	cmp    al,0x1c
  44d1d1:	cmp    al,0x20
  44d1d3:	cmp    al,0x24
  44d1d5:	cmp    al,0x28
  44d1d7:	cmp    al,0x2c
  44d1d9:	cmp    al,0x30
  44d1db:	cmp    al,0x34
  44d1dd:	cmp    al,0x38
  44d1df:	cmp    al,0x40
  44d1e1:	cmp    al,0x58
  44d1e3:	cmp    al,0x68
  44d1e5:	cmp    al,0x6c
  44d1e7:	cmp    al,0x7c
  44d1e9:	cmp    al,0x80
  44d1eb:	cmp    al,0x90
  44d1ed:	cmp    al,0x94
  44d1ef:	cmp    al,0x98
  44d1f1:	cmp    al,0x9c
  44d1f3:	cmp    al,0xa0
  44d1f5:	cmp    al,0xa4
  44d1f7:	cmp    al,0xa8
  44d1f9:	cmp    al,0xb0
  44d1fb:	cmp    al,0xc8
  44d1fd:	cmp    al,0xd8
  44d1ff:	cmp    al,0xdc
  44d201:	cmp    al,0xec
  44d203:	cmp    al,0xf0
  44d205:	cmp    al,0x0
  44d207:	cmp    eax,0x3d143d04
  44d20c:	sbb    BYTE PTR ds:0x3d203d1c,bh
  44d212:	and    al,0x3d
  44d214:	sub    BYTE PTR ds:0x3d303d2c,bh
  44d21a:	xor    al,0x3d
  44d21c:	cmp    al,0x3d
  44d21e:	push   esp
  44d21f:	cmp    eax,0x3d683d64
  44d224:	js     0x44d263
  44d226:	jl     0x44d265
  44d228:	mov    WORD PTR ds:0x3d943d90,?
  44d22e:	cwde   
  44d22f:	cmp    eax,0x3da03d9c
  44d234:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44d235:	cmp    eax,0x3dc43dac
  44d23a:	aam    0x3d
  44d23c:	fdivr  DWORD PTR ds:0x3dec3de8
  44d242:	cld    
  44d243:	cmp    eax,0x3e103e00
  44d248:	adc    al,0x3e
  44d24a:	sbb    BYTE PTR [esi],bh
  44d24c:	sbb    al,0x3e
  44d24e:	and    BYTE PTR [esi],bh
  44d250:	and    al,0x3e
  44d252:	sub    BYTE PTR [esi],bh
  44d254:	sub    al,0x3e
  44d256:	xor    al,0x3e
  44d258:	dec    esp
  44d259:	ds pop esp
  44d25b:	ds pusha 
  44d25d:	ds jo  0x44d29e
  44d260:	je     0x44d2a0
  44d262:	test   BYTE PTR [esi],bh
  44d264:	mov    BYTE PTR [esi],bh
  44d266:	mov    WORD PTR [esi],?
  44d268:	nop
  44d269:	ds xchg esp,eax
  44d26b:	ds cwde 
  44d26d:	mov    al,ds:0xc83eb83e
  44d273:	ds int3 
  44d275:	fdivr  QWORD PTR ds:[esi]
  44d278:	loopne 0x44d2b8
  44d27a:	lock ds hlt 
  44d27d:	ds add al,0x3f
  44d280:	or     BYTE PTR [edi],bh
  44d282:	or     al,0x3f
  44d284:	adc    BYTE PTR [edi],bh
  44d286:	adc    al,0x3f
  44d288:	sbb    BYTE PTR [edi],bh
  44d28a:	sbb    al,0x3f
  44d28c:	and    BYTE PTR [edi],bh
  44d28e:	and    al,0x3f
  44d290:	sub    al,0x3f
  44d292:	inc    esp
  44d293:	aas    
  44d294:	push   esp
  44d295:	aas    
  44d296:	pop    eax
  44d297:	aas    
  44d298:	push   0x7c3f6c3f
  44d29d:	aas    
  44d29e:	cmp    BYTE PTR [edi],0x84
  44d2a1:	aas    
  44d2a2:	mov    BYTE PTR [edi],bh
  44d2a4:	mov    WORD PTR [edi],?
  44d2a6:	nop
  44d2a7:	aas    
  44d2a8:	xchg   esp,eax
  44d2a9:	aas    
  44d2aa:	pushf  
  44d2ab:	aas    
  44d2ac:	mov    ah,0x3f
  44d2ae:	les    edi,FWORD PTR [edi]
  44d2b0:	enter  0xd83f,0x3f
  44d2b4:	fdivr  QWORD PTR [edi]
  44d2b6:	in     al,dx
  44d2b7:	aas    
  44d2b8:	lock aas 
  44d2ba:	add    BYTE PTR [eax],al
  44d2bc:	add    BYTE PTR [eax+0x3],al
  44d2bf:	add    ah,dh
  44d2c1:	add    DWORD PTR [eax],eax
  44d2c3:	add    BYTE PTR [eax],al
  44d2c5:	xor    BYTE PTR [eax+esi*1],al
  44d2c8:	or     BYTE PTR [eax],dh
  44d2ca:	or     al,0x30
  44d2cc:	adc    BYTE PTR [eax],dh
  44d2ce:	adc    al,0x30
  44d2d0:	sbb    BYTE PTR [eax],dh
  44d2d2:	and    BYTE PTR [eax],dh
  44d2d4:	cmp    BYTE PTR [eax],dh
  44d2d6:	dec    eax
  44d2d7:	xor    BYTE PTR [eax+esi*1+0x5c],cl
  44d2db:	xor    BYTE PTR [eax+0x30],ah
  44d2de:	jo     0x44d310
  44d2e0:	je     0x44d312
  44d2e2:	js     0x44d314
  44d2e4:	jl     0x44d316
  44d2e6:	xor    BYTE PTR [eax],0x88
  44d2e9:	xor    BYTE PTR [eax-0x4bcf4fd0],ah
  44d2ef:	xor    ah,al
  44d2f1:	xor    al,cl
  44d2f3:	xor    ah,cl
  44d2f5:	xor    al,dl
  44d2f7:	xor    ah,dl
  44d2f9:	xor    ah,bl
  44d2fb:	xor    ah,dh
  44d2fd:	xor    BYTE PTR [ecx+esi*1],al
  44d300:	or     BYTE PTR [ecx],dh
  44d302:	sbb    BYTE PTR [ecx],dh
  44d304:	sbb    al,0x31
  44d306:	and    BYTE PTR [ecx],dh
  44d308:	and    al,0x31
  44d30a:	sub    BYTE PTR [ecx],dh
  44d30c:	xor    BYTE PTR [ecx],dh
  44d30e:	dec    eax
  44d30f:	xor    DWORD PTR [eax+0x31],ebx
  44d312:	pop    esp
  44d313:	xor    DWORD PTR [ecx+esi*1+0x70],ebp
  44d317:	xor    DWORD PTR [ecx+esi*1+0x78],esi
  44d31b:	xor    DWORD PTR [ecx+esi*1-0x7c],edi
  44d31f:	xor    DWORD PTR [ecx+esi*1+0x31b031ac],ebx
  44d326:	shl    BYTE PTR [ecx],0xc4
  44d329:	xor    eax,ecx
  44d32b:	xor    esp,ecx
  44d32d:	xor    esp,edx
  44d32f:	xor    esp,ebp
  44d331:	xor    esp,edi
  44d333:	xor    DWORD PTR [eax],eax
  44d335:	xor    dl,BYTE PTR [eax]
  44d337:	xor    dl,BYTE PTR [edx+esi*1]
  44d33a:	and    al,0x32
  44d33c:	sub    BYTE PTR [edx],dh
  44d33e:	sub    al,0x32
  44d340:	xor    BYTE PTR [edx],dh
  44d342:	cmp    BYTE PTR [edx],dh
  44d344:	push   eax
  44d345:	xor    ah,BYTE PTR [eax+0x32]
  44d348:	xor    dh,BYTE PTR fs:[edx+esi*1+0x78]
  44d34d:	xor    cl,BYTE PTR [eax-0x63cd73ce]
  44d353:	xor    ah,BYTE PTR [eax-0x57cd5bce]
  44d359:	xor    ch,BYTE PTR [edx+esi*1+0x32b432b0]
  44d360:	mov    eax,0xd832c032
  44d365:	xor    bl,ah
  44d367:	xor    dh,ah
  44d369:	xor    al,BYTE PTR [ebx+esi*1]
  44d36c:	or     BYTE PTR [ebx],dh
  44d36e:	sbb    BYTE PTR [ebx],dh
  44d370:	sbb    al,0x33
  44d372:	sub    al,0x33
  44d374:	xor    BYTE PTR [ebx],dh
  44d376:	xor    al,0x33
  44d378:	cmp    BYTE PTR [ebx],dh
  44d37a:	cmp    al,0x33
  44d37c:	inc    eax
  44d37d:	xor    ecx,DWORD PTR [eax+0x33]
  44d380:	pusha  
  44d381:	xor    esp,DWORD PTR [ebx+esi*1+0x7c]
  44d385:	xor    ecx,DWORD PTR [ebx+esi*1+0x33943390]
  44d38c:	cwde   
  44d38d:	xor    esp,DWORD PTR [eax-0x37cc47cd]
  44d393:	xor    ecx,esp
  44d395:	xor    edx,eax
  44d397:	xor    ebx,eax
  44d399:	xor    esi,eax
  44d39b:	xor    eax,DWORD PTR [eax]
  44d39d:	xor    al,0x4
  44d39f:	xor    al,0x14
  44d3a1:	xor    al,0x18
  44d3a3:	xor    al,0x1c
  44d3a5:	xor    al,0x24
  44d3a7:	xor    al,0x3c
  44d3a9:	xor    al,0x4c
  44d3ab:	xor    al,0x50
  44d3ad:	xor    al,0x60
  44d3af:	xor    al,0x64
  44d3b1:	xor    al,0x74
  44d3b3:	xor    al,0x78
  44d3b5:	xor    al,0x7c
  44d3b7:	xor    al,0x84
  44d3b9:	xor    al,0x9c
  44d3bb:	xor    al,0xac
  44d3bd:	xor    al,0xb0
  44d3bf:	xor    al,0xc0
  44d3c1:	xor    al,0xc4
  44d3c3:	xor    al,0xc8
  44d3c5:	xor    al,0xd0
  44d3c7:	xor    al,0xe8
  44d3c9:	xor    al,0xf8
  44d3cb:	xor    al,0xfc
  44d3cd:	xor    al,0xc
  44d3cf:	xor    eax,0x35143510
  44d3d4:	sbb    al,0x35
  44d3d6:	xor    al,0x35
  44d3d8:	inc    esp
  44d3d9:	xor    eax,0x35503548
  44d3de:	push   0x7c357835
  44d3e3:	xor    eax,0x3590358c
  44d3e8:	xchg   esp,eax
  44d3e9:	xor    eax,0x35b4359c
  44d3ee:	les    esi,FWORD PTR ds:0x35d835c8
  44d3f4:	fdiv   QWORD PTR ds:0x35fc35e4
  44d3fa:	or     al,0x36
  44d3fc:	adc    BYTE PTR [esi],dh
  44d3fe:	and    BYTE PTR [esi],dh
  44d400:	and    al,0x36
  44d402:	sub    al,0x36
  44d404:	inc    esp
  44d405:	ss push esp
  44d407:	ss pop eax
  44d409:	ss push 0x74366c36
  44d40f:	mov    WORD PTR ss:[esi],?
  44d412:	pushf  
  44d413:	mov    al,ss:0xb436b036
  44d419:	ss mov esp,0xe436d436
  44d41f:	ss call 0xfc7bcc5b
  44d425:	add    BYTE PTR ss:[edi],dh
  44d428:	or     BYTE PTR [edi],dh
  44d42a:	and    BYTE PTR [edi],dh
  44d42c:	xor    BYTE PTR [edi],dh
  44d42e:	xor    al,0x37
  44d430:	inc    esp
  44d431:	aaa    
  44d432:	dec    eax
  44d433:	aaa    
  44d434:	dec    esp
  44d435:	aaa    
  44d436:	push   eax
  44d437:	aaa    
  44d438:	pop    eax
  44d439:	aaa    
  44d43a:	jo     0x44d473
  44d43c:	push   eax
  44d43d:	cmp    al,0x6c
  44d43f:	cmp    al,0x70
  44d441:	cmp    al,0x78
  44d443:	cmp    al,0x7c
  44d445:	cmp    al,0x94
  44d447:	cmp    al,0x98
  44d449:	cmp    al,0xb8
  44d44b:	cmp    al,0xd4
  44d44d:	cmp    al,0xd8
  44d44f:	cmp    al,0xe0
  44d451:	cmp    al,0xe8
  44d453:	cmp    al,0xf0
  44d455:	cmp    al,0xfc
  44d457:	cmp    al,0x24
  44d459:	cmp    eax,0x3d483d38
  44d45e:	pop    esp
  44d45f:	cmp    eax,0x3d7c3d64
  44d464:	mov    BYTE PTR ds:0x3db03da8,bh
  44d46a:	mov    eax,0xc03dbc3d
  44d46f:	cmp    eax,0x3ddc3dc8
  44d474:	in     al,0x3d
  44d476:	lock cmp eax,0x3e1c3e10
  44d47c:	cmp    al,0x3e
  44d47e:	dec    eax
  44d47f:	ds push 0x943e743e
  44d485:	ds pushf 
  44d487:	ds test al,0x3e
  44d48a:	enter  0xd43e,0x3e
  44d48e:	hlt    
  44d48f:	add    BYTE PTR ds:[edi],bh
  44d492:	and    BYTE PTR [edi],bh
  44d494:	sub    BYTE PTR [edi],bh
  44d496:	xor    al,0x3f
  44d498:	push   esp
  44d499:	aas    
  44d49a:	pop    esp
  44d49b:	aas    
  44d49c:	fs aas 
  44d49e:	jo     0x44d4df
  44d4a0:	nop
  44d4a1:	aas    
  44d4a2:	pushf  
  44d4a3:	aas    
  44d4a4:	mov    esp,0xe83fc83f
  44d4a9:	aas    
  44d4aa:	lock aas 
  44d4ac:	cld    
  44d4ad:	aas    
  44d4ae:	add    BYTE PTR [eax],al
  44d4b0:	add    BYTE PTR [eax+0x3],dl
  44d4b3:	add    BYTE PTR [edx+eax*1+0x301c0000],ah
  44d4ba:	and    al,0x30
  44d4bc:	xor    BYTE PTR [eax],dh
  44d4be:	pop    eax
  44d4bf:	xor    BYTE PTR [eax+esi*1-0x78],bh
  44d4c3:	xor    BYTE PTR [eax-0x3bcf4fd0],dl
  44d4c9:	xor    ah,dl
  44d4cb:	xor    ah,bl
  44d4cd:	xor    al,dh
  44d4cf:	xor    al,bh
  44d4d1:	xor    BYTE PTR [eax],bl
  44d4d3:	xor    DWORD PTR [ecx+esi*1],ebp
  44d4d6:	cmp    BYTE PTR [ecx],dh
  44d4d8:	inc    eax
  44d4d9:	xor    DWORD PTR [eax+0x31],ebx
  44d4dc:	pusha  
  44d4dd:	xor    DWORD PTR [eax+0x31],esi
  44d4e0:	mov    BYTE PTR [ecx],dh
  44d4e2:	pushf  
  44d4e3:	xor    DWORD PTR [eax-0x37ce4fcf],ebp
  44d4e9:	xor    eax,edx
  44d4eb:	xor    eax,esp
  44d4ed:	xor    eax,esi
  44d4ef:	xor    eax,edi
  44d4f1:	xor    DWORD PTR [eax],eax
  44d4f3:	xor    al,BYTE PTR [edx+esi*1]
  44d4f6:	or     BYTE PTR [edx],dh
  44d4f8:	or     al,0x32
  44d4fa:	adc    al,0x32
  44d4fc:	sub    BYTE PTR [edx],dh
  44d4fe:	xor    BYTE PTR [edx],dh
  44d500:	cmp    BYTE PTR [edx],dh
  44d502:	inc    esp
  44d503:	xor    ah,BYTE PTR [edx+esi*1+0x70]
  44d507:	xor    dl,BYTE PTR [eax-0x43cd63ce]
  44d50d:	xor    al,ah
  44d50f:	xor    dl,al
  44d511:	xor    dh,ah
  44d513:	xor    dl,BYTE PTR [ebx+esi*1]
  44d516:	sbb    al,0x33
  44d518:	and    al,0x33
  44d51a:	sub    al,0x33
  44d51c:	xor    al,0x33
  44d51e:	cmp    al,0x33
  44d520:	inc    esp
  44d521:	xor    ecx,DWORD PTR [ebx+esi*1+0x54]
  44d525:	xor    ebx,DWORD PTR [ebx+esi*1+0x68]
  44d529:	xor    ecx,DWORD PTR [eax-0x67cc6fcd]
  44d52f:	xor    esp,DWORD PTR [eax-0x33cc53cd]
  44d535:	xor    ebx,eax
  44d537:	xor    edi,eax
  44d539:	xor    eax,DWORD PTR [esp+esi*1]
  44d53c:	sub    BYTE PTR [eax+ecx*2],dh
  44d53f:	xor    al,0x50
  44d541:	xor    al,0x58
  44d543:	xor    al,0x60
  44d545:	xor    al,0x68
  44d547:	xor    al,0x70
  44d549:	xor    al,0x78
  44d54b:	xor    al,0x84
  44d54d:	xor    al,0xa4
  44d54f:	xor    al,0xb0
  44d551:	xor    al,0xd0
  44d553:	xor    al,0xdc
  44d555:	xor    al,0xfc
  44d557:	xor    al,0x8
  44d559:	xor    eax,0x35343528
  44d55e:	push   esp
  44d55f:	xor    eax,0x3564355c
  44d564:	jo     0x44d59b
  44d566:	nop
  44d567:	xor    eax,0x35a03598
  44d56c:	lods   al,BYTE PTR ds:[esi]
  44d56d:	xor    eax,0x35d835cc
  44d572:	clc    
  44d573:	xor    eax,0x36243604
  44d578:	cmp    BYTE PTR [esi],dh
  44d57a:	inc    eax
  44d57b:	ss push esp
  44d57d:	ss pop esp
  44d57f:	ss jo  0x44d5b8
  44d582:	js     0x44d5ba
  44d584:	jl     0x44d5bc
  44d586:	xor    BYTE PTR [esi],0x88
  44d589:	ss nop
  44d58b:	ss cwde 
  44d58d:	lods   al,BYTE PTR ss:[esi]
  44d58f:	ss mov ah,0x36
  44d592:	mov    eax,0xc836c036
  44d597:	shl    BYTE PTR ss:[esi],1
  44d59a:	in     al,0x36
  44d59c:	in     al,dx
  44d59d:	add    BYTE PTR ss:[edi],dh
  44d5a0:	or     BYTE PTR [edi],dh
  44d5a2:	sbb    al,0x37
  44d5a4:	and    al,0x37
  44d5a6:	cmp    BYTE PTR [edi],dh
  44d5a8:	inc    eax
  44d5a9:	aaa    
  44d5aa:	push   esp
  44d5ab:	aaa    
  44d5ac:	pop    esp
  44d5ad:	aaa    
  44d5ae:	jo     0x44d5e7
  44d5b0:	js     0x44d5e9
  44d5b2:	jl     0x44d5eb
  44d5b4:	xor    BYTE PTR [edi],0x84
  44d5b7:	aaa    
  44d5b8:	mov    BYTE PTR [edi],dh
  44d5ba:	mov    WORD PTR [edi],?
  44d5bc:	nop
  44d5bd:	aaa    
  44d5be:	cwde   
  44d5bf:	aaa    
  44d5c0:	mov    al,ds:0xbc37a837
  44d5c5:	aaa    
  44d5c6:	les    esi,FWORD PTR [edi]
  44d5c8:	fdiv   DWORD PTR [edi]
  44d5ca:	loopne 0x44d603
  44d5cc:	hlt    
  44d5cd:	aaa    
  44d5ce:	cld    
  44d5cf:	aaa    
  44d5d0:	adc    BYTE PTR [eax],bh
  44d5d2:	sbb    BYTE PTR [eax],bh
  44d5d4:	and    BYTE PTR [eax],bh
  44d5d6:	sub    BYTE PTR [eax],bh
  44d5d8:	xor    BYTE PTR [eax],bh
  44d5da:	inc    esp
  44d5db:	cmp    BYTE PTR [eax+edi*1+0x60],cl
  44d5df:	cmp    BYTE PTR [eax+0x38],ch
  44d5e2:	jl     0x44d61c
  44d5e4:	test   BYTE PTR [eax],bh
  44d5e6:	mov    BYTE PTR [eax],bh
  44d5e8:	mov    WORD PTR [eax],?
  44d5ea:	nop
  44d5eb:	cmp    BYTE PTR [eax+edi*1+0x389c3898],dl
  44d5f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44d5f3:	cmp    BYTE PTR [eax+edi*1+0x38c838b4],ch
  44d5fa:	sar    BYTE PTR [eax],1
  44d5fc:	in     al,0x38
  44d5fe:	in     al,dx
  44d5ff:	cmp    BYTE PTR [eax],al
  44d601:	cmp    DWORD PTR [eax],ecx
  44d603:	cmp    DWORD PTR [ecx+edi*1],ebx
  44d606:	and    al,0x39
  44d608:	cmp    BYTE PTR [ecx],bh
  44d60a:	inc    eax
  44d60b:	cmp    DWORD PTR [ecx+edi*1+0x5c],edx
  44d60f:	cmp    DWORD PTR [eax+0x39],esp
  44d612:	cmp    DWORD PTR fs:[eax+0x39],ebp
  44d616:	ins    BYTE PTR es:[edi],dx
  44d617:	cmp    DWORD PTR [eax+0x39],esi
  44d61a:	je     0x44d655
  44d61c:	jl     0x44d657
  44d61e:	test   BYTE PTR [ecx],bh
  44d620:	mov    WORD PTR [ecx],?
  44d622:	mov    al,ds:0xac39a839
  44d627:	cmp    DWORD PTR [ecx+edi*1+0x39c439bc],esi
  44d62e:	fdivr  DWORD PTR [ecx]
  44d630:	loopne 0x44d66b
  44d632:	hlt    
  44d633:	cmp    esp,edi
  44d635:	cmp    DWORD PTR [eax],eax
  44d637:	cmp    al,BYTE PTR [edx+edi*1]
  44d63a:	or     BYTE PTR [edx],bh
  44d63c:	or     al,0x3a
  44d63e:	adc    BYTE PTR [edx],bh
  44d640:	sbb    BYTE PTR [edx],bh
  44d642:	and    BYTE PTR [edx],bh
  44d644:	sub    BYTE PTR [edx],bh
  44d646:	cmp    al,0x3a
  44d648:	inc    esp
  44d649:	cmp    bl,BYTE PTR [eax+0x3a]
  44d64c:	pusha  
  44d64d:	cmp    dh,BYTE PTR [edx+edi*1+0x7c]
  44d651:	cmp    al,BYTE PTR [eax-0x77c57bc6]
  44d657:	cmp    cl,BYTE PTR [edx+edi*1+0x3a943a90]
  44d65e:	cwde   
  44d65f:	cmp    ah,BYTE PTR [eax-0x4fc557c6]
  44d665:	cmp    al,ah
  44d667:	cmp    cl,ah
  44d669:	cmp    ah,al
  44d66b:	cmp    ch,al
  44d66d:	cmp    bh,ah
  44d66f:	cmp    al,BYTE PTR [ebx+edi*1]
  44d672:	or     BYTE PTR [ebx],bh
  44d674:	or     al,0x3b
  44d676:	adc    BYTE PTR [ebx],bh
  44d678:	adc    al,0x3b
  44d67a:	sbb    BYTE PTR [ebx],bh
  44d67c:	sbb    al,0x3b
  44d67e:	and    al,0x3b
  44d680:	sub    al,0x3b
  44d682:	xor    al,0x3b
  44d684:	dec    eax
  44d685:	cmp    edx,DWORD PTR [eax+0x3b]
  44d688:	cmp    ebp,DWORD PTR fs:[ebx+edi*1-0x80]
  44d68d:	cmp    ecx,DWORD PTR [eax-0x6fc473c5]
  44d693:	cmp    edx,DWORD PTR [ebx+edi*1+0x3b9c3b98]
  44d69a:	mov    al,ds:0xac3ba43b
  44d69f:	cmp    esi,DWORD PTR [ebx+edi*1+0x3bd03bbc]
  44d6a6:	fdivr  DWORD PTR [ebx]
  44d6a8:	in     al,dx
  44d6a9:	cmp    esi,esp
  44d6ab:	cmp    ecx,DWORD PTR [eax]
  44d6ad:	cmp    al,0x10
  44d6af:	cmp    al,0x14
  44d6b1:	cmp    al,0x18
  44d6b3:	cmp    al,0x1c
  44d6b5:	cmp    al,0x20
  44d6b7:	cmp    al,0x24
  44d6b9:	cmp    al,0x28
  44d6bb:	cmp    al,0x2c
  44d6bd:	cmp    al,0x34
  44d6bf:	cmp    al,0x3c
  44d6c1:	cmp    al,0x44
  44d6c3:	cmp    al,0x58
  44d6c5:	cmp    al,0x60
  44d6c7:	cmp    al,0x64
  44d6c9:	cmp    al,0x6c
  44d6cb:	cmp    al,0x74
  44d6cd:	cmp    al,0x7c
  44d6cf:	cmp    al,0x98
  44d6d1:	cmp    al,0xb4
  44d6d3:	cmp    al,0xd0
  44d6d5:	cmp    al,0xd4
  44d6d7:	cmp    al,0xd8
  44d6d9:	cmp    al,0xe8
  44d6db:	cmp    al,0xf0
  44d6dd:	cmp    al,0x4
  44d6df:	cmp    eax,0x3d103d0c
  44d6e4:	sbb    BYTE PTR ds:0x3d283d20,bh
  44d6ea:	sub    al,0x3d
  44d6ec:	xor    al,0x3d
  44d6ee:	cmp    al,0x3d
  44d6f0:	inc    esp
  44d6f1:	cmp    eax,0x3d4c3d48
  44d6f6:	push   esp
  44d6f7:	cmp    eax,0x3d643d5c
  44d6fc:	js     0x44d73b
  44d6fe:	cmp    BYTE PTR ds:0x3d883d84,0x90
  44d705:	cmp    eax,0x3da03d98
  44d70a:	test   al,0x3d
  44d70c:	mov    al,0x3d
  44d70e:	mov    eax,0xcc3dc03d
  44d713:	cmp    eax,0x3df83dec
  44d718:	sbb    BYTE PTR [esi],bh
  44d71a:	and    BYTE PTR [esi],bh
  44d71c:	sub    al,0x3e
  44d71e:	dec    esp
  44d71f:	ds pop eax
  44d721:	ds js  0x44d762
  44d724:	cmp    BYTE PTR [esi],0x88
  44d727:	ds xchg esp,eax
  44d729:	ds mov ah,0x3e
  44d72c:	mov    esp,0xcc3ec43e
  44d731:	fdivr  DWORD PTR ds:[esi]
  44d734:	clc    
  44d735:	ds add al,0x3f
  44d738:	and    al,0x3f
  44d73a:	sub    al,0x3f
  44d73c:	cmp    BYTE PTR [edi],bh
  44d73e:	pop    eax
  44d73f:	aas    
  44d740:	fs aas 
  44d742:	test   BYTE PTR [edi],bh
  44d744:	mov    WORD PTR [edi],?
  44d746:	xchg   esp,eax
  44d747:	aas    
  44d748:	mov    al,ds:0xcc3fc03f
  44d74d:	aas    
  44d74e:	in     al,dx
  44d74f:	aas    
  44d750:	clc    
  44d751:	aas    
  44d752:	add    BYTE PTR [eax],al
  44d754:	add    BYTE PTR [eax+0x3],ah
  44d757:	add    BYTE PTR [ecx+eax*1+0x30180000],bh
  44d75e:	and    al,0x30
  44d760:	inc    esp
  44d761:	xor    BYTE PTR [eax+0x30],dl
  44d764:	jo     0x44d796
  44d766:	jl     0x44d798
  44d768:	pushf  
  44d769:	xor    BYTE PTR [eax+esi*1+0x30b430ac],ah
  44d770:	mov    esp,0xd030c430
  44d775:	xor    al,dh
  44d777:	xor    ah,bh
  44d779:	xor    BYTE PTR [ecx+esi*1],bl
  44d77c:	and    al,0x31
  44d77e:	xor    BYTE PTR [ecx],dh
  44d780:	push   eax
  44d781:	xor    DWORD PTR [ecx+esi*1+0x7c],ebx
  44d785:	xor    DWORD PTR [ecx+esi*1+0x3198318c],eax
  44d78c:	mov    eax,0xc831c031
  44d791:	xor    eax,edx
  44d793:	xor    eax,ebx
  44d795:	xor    eax,esp
  44d797:	xor    esp,ebp
  44d799:	xor    DWORD PTR [edx+esi*1],esp
  44d79c:	cmp    BYTE PTR [edx],dh
  44d79e:	inc    esp
  44d79f:	xor    cl,BYTE PTR [edx+esi*1+0x64]
  44d7a3:	xor    dh,BYTE PTR [eax+0x32]
  44d7a6:	nop
  44d7a7:	xor    bl,BYTE PTR [eax-0x3bcd5bce]
  44d7ad:	xor    dl,al
  44d7af:	xor    dh,al
  44d7b1:	xor    bh,ah
  44d7b3:	xor    bl,BYTE PTR [ebx+esi*1]
  44d7b6:	and    al,0x33
  44d7b8:	xor    BYTE PTR [ebx],dh
  44d7ba:	push   eax
  44d7bb:	xor    ebx,DWORD PTR [eax+0x33]
  44d7be:	xor    eax,DWORD PTR fs:[ebx+esi*1+0x3398338c]
  44d7c6:	mov    eax,0xe433c433
  44d7cb:	xor    esi,eax
  44d7cd:	xor    edx,DWORD PTR [eax]
  44d7cf:	xor    al,0x18
  44d7d1:	xor    al,0x20
  44d7d3:	xor    al,0x2c
  44d7d5:	xor    al,0x4c
  44d7d7:	xor    al,0x54
  44d7d9:	xor    al,0x5c
  44d7db:	xor    al,0x68
  44d7dd:	xor    al,0x88
  44d7df:	xor    al,0x94
  44d7e1:	xor    al,0xb4
  44d7e3:	xor    al,0xbc
  44d7e5:	xor    al,0xc8
  44d7e7:	xor    al,0xf0
  44d7e9:	xor    al,0x8
  44d7eb:	xor    eax,0x3528351c
  44d7f0:	xor    BYTE PTR ds:0x35683550,dh
  44d7f6:	jl     0x44d82d
  44d7f8:	mov    BYTE PTR ds:0x35b03590,dh
  44d7fe:	enter  0xdc35,0x35
  44d802:	call   0x87ac83c
  44d807:	ss adc al,0x36
  44d80a:	xor    al,0x36
  44d80c:	inc    eax
  44d80d:	ss pusha 
  44d80f:	ss ins BYTE PTR es:[edi],dx
  44d811:	ss xchg esp,eax
  44d813:	lods   al,BYTE PTR ss:[esi]
  44d815:	shl    BYTE PTR ss:[esi],0xcc
  44d819:	ss aam 0x36
  44d81c:	hlt    
  44d81d:	ss or  al,0x37
  44d820:	and    BYTE PTR [edi],dh
  44d822:	sub    al,0x37
  44d824:	xor    al,0x37
  44d826:	dec    esp
  44d827:	aaa    
  44d828:	pop    eax
  44d829:	aaa    
  44d82a:	js     0x44d863
  44d82c:	test   BYTE PTR [edi],dh
  44d82e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44d82f:	aaa    
  44d830:	mov    al,0x37
  44d832:	shl    BYTE PTR [edi],1
  44d834:	fdiv   DWORD PTR [edi]
  44d836:	in     al,0x37
  44d838:	add    al,0x38
  44d83a:	adc    BYTE PTR [eax],bh
  44d83c:	xor    BYTE PTR [eax],bh
  44d83e:	cmp    al,0x38
  44d840:	pop    esp
  44d841:	cmp    BYTE PTR [eax+0x38],ch
  44d844:	mov    BYTE PTR [eax],bh
  44d846:	nop
  44d847:	cmp    BYTE PTR [eax+edi*1+0x38c838bc],bl
  44d84e:	call   0xf87dc88b
  44d853:	cmp    BYTE PTR [eax],al
  44d855:	cmp    DWORD PTR [eax],ecx
  44d857:	cmp    DWORD PTR [ecx+edi*1],edx
  44d85a:	xor    al,0x39
  44d85c:	cmp    al,0x39
  44d85e:	inc    esp
  44d85f:	cmp    DWORD PTR [eax+0x39],edx
  44d862:	mov    BYTE PTR [ecx],bh
  44d864:	pushf  
  44d865:	cmp    DWORD PTR [eax-0x37c64fc7],ebp
  44d86b:	cmp    esp,edx
  44d86d:	cmp    esp,esi
  44d86f:	cmp    DWORD PTR [eax],eax
  44d871:	cmp    ah,BYTE PTR [eax]
  44d873:	cmp    ch,BYTE PTR [eax]
  44d875:	cmp    dh,BYTE PTR [edx+edi*1]
  44d878:	push   esp
  44d879:	cmp    ah,BYTE PTR [eax+0x3a]
  44d87c:	cmp    BYTE PTR [edx],0x8c
  44d87f:	cmp    ch,BYTE PTR [edx+edi*1+0x3ae03ab8]
  44d886:	clc    
  44d887:	cmp    cl,BYTE PTR [ebx+edi*1]
  44d88a:	sbb    BYTE PTR [ebx],bh
  44d88c:	and    BYTE PTR [ebx],bh
  44d88e:	cmp    BYTE PTR [ebx],bh
  44d890:	inc    eax
  44d891:	cmp    ecx,DWORD PTR [ebx+edi*1+0x6c]
  44d895:	cmp    edi,DWORD PTR [eax+0x3b]
  44d898:	cwde   
  44d899:	cmp    esp,DWORD PTR [eax-0x33c453c5]
  44d89f:	cmp    ebx,eax
  44d8a1:	cmp    edi,eax
  44d8a3:	cmp    eax,DWORD PTR [esp+edi*1]
  44d8a6:	and    al,0x3c
  44d8a8:	sub    al,0x3c
  44d8aa:	xor    al,0x3c
  44d8ac:	inc    eax
  44d8ad:	cmp    al,0x60
  44d8af:	cmp    al,0x6c
  44d8b1:	cmp    al,0x8c
  44d8b3:	cmp    al,0x9c
  44d8b5:	cmp    al,0xb4
  44d8b7:	cmp    al,0xc8
  44d8b9:	cmp    al,0xd4
  44d8bb:	cmp    al,0xdc
  44d8bd:	cmp    al,0xf4
  44d8bf:	cmp    al,0x4
  44d8c1:	cmp    eax,0x3d303d1c
  44d8c6:	cmp    al,0x3d
  44d8c8:	inc    esp
  44d8c9:	cmp    eax,0x3d7c3d64
  44d8ce:	nop
  44d8cf:	cmp    eax,0x3da43d9c
  44d8d4:	mov    esp,0x3dc83d
  44d8d9:	ds adc al,0x3e
  44d8dc:	and    BYTE PTR [esi],bh
  44d8de:	sub    BYTE PTR [esi],bh
  44d8e0:	pop    eax
  44d8e1:	ds ins BYTE PTR es:[edi],dx
  44d8e3:	ds js  0x44d924
  44d8e6:	cmp    BYTE PTR [esi],0xb0
  44d8e9:	les    edi,FWORD PTR ds:[esi]
  44d8ec:	sar    BYTE PTR [esi],1
  44d8ee:	fdivr  DWORD PTR [esi]
  44d8f0:	lock ds clc 
  44d8f3:	ds add al,0x3f
  44d8f6:	and    al,0x3f
  44d8f8:	sub    al,0x3f
  44d8fa:	xor    al,0x3f
  44d8fc:	inc    eax
  44d8fd:	aas    
  44d8fe:	pusha  
  44d8ff:	aas    
  44d900:	ins    BYTE PTR es:[edi],dx
  44d901:	aas    
  44d902:	mov    WORD PTR [edi],?
  44d904:	xchg   esp,eax
  44d905:	aas    
  44d906:	pushf  
  44d907:	aas    
  44d908:	test   al,0x3f
  44d90a:	enter  0xd43f,0x3f
  44d90e:	hlt    
  44d90f:	aas    
  44d910:	add    BYTE PTR [eax+0x3],dh
  44d913:	add    al,al
  44d915:	add    DWORD PTR [eax],eax
  44d917:	add    BYTE PTR [eax],al
  44d919:	xor    BYTE PTR [eax],ah
  44d91b:	xor    BYTE PTR [eax],ch
  44d91d:	xor    BYTE PTR [eax],dh
  44d91f:	xor    BYTE PTR [eax+esi*1],bh
  44d922:	pop    esp
  44d923:	xor    BYTE PTR [eax+0x30],ch
  44d926:	mov    BYTE PTR [eax],dh
  44d928:	xchg   esp,eax
  44d929:	xor    BYTE PTR [eax+esi*1+0x30e030c0],dh
  44d930:	call   0xfc75c965
  44d935:	xor    BYTE PTR [ecx+esi*1],bl
  44d938:	and    al,0x31
  44d93a:	xor    BYTE PTR [ecx],dh
  44d93c:	push   eax
  44d93d:	xor    DWORD PTR [ecx+esi*1+0x7c],ebx
  44d941:	xor    DWORD PTR [eax-0x2fce47cf],ecx
  44d947:	xor    eax,esp
  44d949:	xor    eax,esi
  44d94b:	xor    DWORD PTR [edx+esi*1],eax
  44d94e:	sbb    BYTE PTR [edx],dh
  44d950:	and    al,0x32
  44d952:	sub    al,0x32
  44d954:	inc    esp
  44d955:	xor    dl,BYTE PTR [eax+0x32]
  44d958:	xor    BYTE PTR [edx],0x98
  44d95b:	xor    ch,BYTE PTR [eax-0x33cd47ce]
  44d961:	xor    ah,al
  44d963:	xor    ch,ah
  44d965:	xor    dh,ah
  44d967:	xor    cl,BYTE PTR [ebx+esi*1]
  44d96a:	sbb    BYTE PTR [ebx],dh
  44d96c:	cmp    BYTE PTR [ebx],dh
  44d96e:	inc    esp
  44d96f:	xor    esp,DWORD PTR [ebx+esi*1+0x6c]
  44d973:	xor    edi,DWORD PTR [eax+0x33]
  44d976:	cwde   
  44d977:	xor    esp,DWORD PTR [ebx+esi*1+0x33d033c4]
  44d97e:	lock xor edi,esp
  44d981:	xor    ebx,DWORD PTR [esp+esi*1]
  44d984:	and    al,0x34
  44d986:	sub    al,0x34
  44d988:	xor    al,0x34
  44d98a:	cmp    al,0x34
  44d98c:	dec    eax
  44d98d:	xor    al,0x6c
  44d98f:	xor    al,0x74
  44d991:	xor    al,0x7c
  44d993:	xor    al,0x84
  44d995:	xor    al,0x8c
  44d997:	xor    al,0x94
  44d999:	xor    al,0x9c
  44d99b:	xor    al,0xa4
  44d99d:	xor    al,0xac
  44d99f:	xor    al,0xb8
  44d9a1:	xor    al,0xd8
  44d9a3:	xor    al,0xe0
  44d9a5:	xor    al,0xe8
  44d9a7:	xor    al,0xf4
  44d9a9:	xor    al,0x14
  44d9ab:	xor    eax,0x35403520
  44d9b0:	pop    eax
  44d9b1:	xor    eax,0x357c3568
  44d9b6:	mov    BYTE PTR ds:0x35c03590,dh
  44d9bc:	aam    0x35
  44d9be:	loopne 0x44d9f5
  44d9c0:	call   0xc7ad9fa
  44d9c5:	ss sub al,0x36
  44d9c8:	cmp    BYTE PTR [esi],dh
  44d9ca:	pop    eax
  44d9cb:	ss pusha 
  44d9cd:	ss ins BYTE PTR es:[edi],dx
  44d9cf:	mov    WORD PTR ss:[esi],?
  44d9d2:	cwde   
  44d9d3:	shl    BYTE PTR ss:[esi],1
  44d9d6:	in     al,0x36
  44d9d8:	lock ss clc 
  44d9db:	adc    BYTE PTR ss:[edi],dh
  44d9de:	sbb    al,0x37
  44d9e0:	fs aaa 
  44d9e2:	je     0x44da1b
  44d9e4:	mov    BYTE PTR [edi],dh
  44d9e6:	pushf  
  44d9e7:	aaa    
  44d9e8:	test   al,0x37
  44d9ea:	mov    al,0x37
  44d9ec:	enter  0xd037,0x37
  44d9f0:	fdiv   QWORD PTR [edi]
  44d9f2:	cld    
  44d9f3:	aaa    
  44d9f4:	or     BYTE PTR [eax],bh
  44d9f6:	sub    BYTE PTR [eax],bh
  44d9f8:	dec    eax
  44d9f9:	cmp    BYTE PTR [eax+edi*1+0x68],bl
  44d9fd:	cmp    BYTE PTR [eax+0x38],dh
  44da00:	mov    BYTE PTR [eax],bh
  44da02:	nop
  44da03:	cmp    BYTE PTR [eax-0x3bc75bc8],bl
  44da09:	cmp    ah,cl
  44da0b:	cmp    al,bl
  44da0d:	cmp    al,bh
  44da0f:	cmp    BYTE PTR [eax],al
  44da11:	cmp    DWORD PTR [ecx+edi*1],ecx
  44da14:	push   esp
  44da15:	cmp    DWORD PTR [ecx+edi*1+0x78],esp
  44da19:	cmp    DWORD PTR [ecx+edi*1+0x39a03998],ecx
  44da20:	mov    eax,0xe439c439
  44da25:	cmp    esp,ebp
  44da27:	cmp    eax,edi
  44da29:	cmp    DWORD PTR [eax],ebx
  44da2b:	cmp    ah,BYTE PTR [eax]
  44da2d:	cmp    ch,BYTE PTR [edx+edi*1]
  44da30:	dec    esp
  44da31:	cmp    bl,BYTE PTR [eax+0x3a]
  44da34:	js     0x44da70
  44da36:	test   BYTE PTR [edx],bh
  44da38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44da39:	cmp    dh,BYTE PTR [eax-0x23c52fc6]
  44da3f:	cmp    bh,ah
  44da41:	cmp    cl,BYTE PTR [eax]
  44da43:	cmp    ebp,DWORD PTR [eax]
  44da45:	cmp    esi,DWORD PTR [ebx+edi*1]
  44da48:	push   esp
  44da49:	cmp    ebx,DWORD PTR [ebx+edi*1+0x68]
  44da4d:	cmp    ecx,DWORD PTR [eax-0x4bc46bc5]
  44da53:	cmp    edi,DWORD PTR [ebx+edi*1+0x3bd03bc4]
  44da5a:	lock cmp edi,esp
  44da5d:	cmp    ebx,DWORD PTR [esp+edi*1]
  44da60:	and    al,0x3c
  44da62:	sub    al,0x3c
  44da64:	cmp    BYTE PTR [eax+ebx*2],bh
  44da67:	cmp    al,0x64
  44da69:	cmp    al,0x84
  44da6b:	cmp    al,0x8c
  44da6d:	cmp    al,0x94
  44da6f:	cmp    al,0x9c
  44da71:	cmp    al,0xa4
  44da73:	cmp    al,0xb0
  44da75:	cmp    al,0xe0
  44da77:	cmp    al,0xf8
  44da79:	cmp    al,0x8
  44da7b:	cmp    eax,0x3d2c3d18
  44da80:	inc    eax
  44da81:	cmp    eax,0x3d543d4c
  44da86:	ins    BYTE PTR es:[edi],dx
  44da87:	cmp    eax,0x3d983d78
  44da8c:	mov    al,ds:0xcc3dac3d
  44da91:	cmp    eax,0x3df83dd8
  44da96:	add    BYTE PTR [esi],bh
  44da98:	or     al,0x3e
  44da9a:	sub    al,0x3e
  44da9c:	xor    al,0x3e
  44da9e:	inc    eax
  44da9f:	ds pusha 
  44daa1:	ds ins BYTE PTR es:[edi],dx
  44daa3:	mov    WORD PTR ds:[esi],?
  44daa6:	xchg   esp,eax
  44daa7:	mov    al,ds:0xc83ec03e
  44daad:	ds aam 0x3e
  44dab0:	hlt    
  44dab1:	add    BYTE PTR ds:[edi],bh
  44dab4:	and    BYTE PTR [edi],bh
  44dab6:	sub    BYTE PTR [edi],bh
  44dab8:	xor    al,0x3f
  44daba:	push   esp
  44dabb:	aas    
  44dabc:	pusha  
  44dabd:	aas    
  44dabe:	cmp    BYTE PTR [edi],0x88
  44dac1:	aas    
  44dac2:	xchg   esp,eax
  44dac3:	aas    
  44dac4:	mov    ah,0x3f
  44dac6:	sar    BYTE PTR [edi],0xe0
  44dac9:	aas    
  44daca:	call   0xfc84cb0e
  44dacf:	aas    
  44dad0:	add    BYTE PTR [eax+0x23c0003],al
  44dad6:	add    BYTE PTR [eax],al
  44dad8:	sbb    al,0x30
  44dada:	and    al,0x30
  44dadc:	sub    al,0x30
  44dade:	cmp    BYTE PTR [eax],dh
  44dae0:	pop    eax
  44dae1:	xor    BYTE PTR [eax+esi*1-0x7c],ah
  44dae5:	xor    BYTE PTR [eax-0x47cf4fd0],dl
  44daeb:	xor    ah,al
  44daed:	xor    ah,ah
  44daef:	xor    ah,ch
  44daf1:	xor    al,bh
  44daf3:	xor    BYTE PTR [eax],ah
  44daf5:	xor    DWORD PTR [eax],edi
  44daf7:	xor    DWORD PTR [ecx+esi*1+0x58],ecx
  44dafb:	xor    DWORD PTR [eax+0x31],esp
  44dafe:	js     0x44db31
  44db00:	test   BYTE PTR [ecx],dh
  44db02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44db03:	xor    DWORD PTR [eax-0x3ce17cf],esi
  44db09:	xor    DWORD PTR [eax],ecx
  44db0b:	xor    dl,BYTE PTR [eax]
  44db0d:	xor    ch,BYTE PTR [eax]
  44db0f:	xor    cl,BYTE PTR [eax+0x32]
  44db12:	pop    esp
  44db13:	xor    ch,BYTE PTR [eax+0x32]
  44db16:	jo     0x44db4a
  44db18:	mov    BYTE PTR [edx],dh
  44db1a:	nop
  44db1b:	xor    bl,BYTE PTR [eax-0x3bcd5bce]
  44db21:	xor    dl,al
  44db23:	xor    dh,al
  44db25:	xor    bh,al
  44db27:	xor    al,BYTE PTR [ebx+esi*1]
  44db2a:	and    al,0x33
  44db2c:	xor    BYTE PTR [ebx],dh
  44db2e:	push   esp
  44db2f:	xor    ebx,DWORD PTR [ebx+esi*1+0x64]
  44db33:	xor    ebp,DWORD PTR [ebx+esi*1+0x74]
  44db37:	xor    edi,DWORD PTR [ebx+esi*1-0x7c]
  44db3b:	xor    ecx,DWORD PTR [ebx+esi*1+0x339c3394]
  44db42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44db43:	xor    ebp,DWORD PTR [ebx+esi*1+0x33bc33b4]
  44db4a:	les    esi,FWORD PTR [ebx]
  44db4c:	int3   
  44db4d:	xor    edx,esp
  44db4f:	xor    ebx,esp
  44db51:	xor    esp,esp
  44db53:	xor    ebp,esp
  44db55:	xor    esi,esp
  44db57:	xor    edi,esp
  44db59:	xor    eax,DWORD PTR [esp+esi*1]
  44db5c:	or     al,0x34
  44db5e:	adc    al,0x34
  44db60:	sbb    al,0x34
  44db62:	and    al,0x34
  44db64:	sub    al,0x34
  44db66:	xor    al,0x34
  44db68:	cmp    al,0x34
  44db6a:	inc    esp
  44db6b:	xor    al,0x4c
  44db6d:	xor    al,0x54
  44db6f:	xor    al,0x5c
  44db71:	xor    al,0x64
  44db73:	xor    al,0x6c
  44db75:	xor    al,0x74
  44db77:	xor    al,0x7c
  44db79:	xor    al,0x84
  44db7b:	xor    al,0x8c
  44db7d:	xor    al,0x94
  44db7f:	xor    al,0xa0
  44db81:	xor    al,0xd8
  44db83:	xor    al,0xec
  44db85:	xor    al,0xf8
  44db87:	xor    al,0x0
  44db89:	xor    eax,0x35403528
  44db8e:	push   eax
  44db8f:	xor    eax,0x35743560
  44db94:	mov    BYTE PTR ds:0x359c3594,dh
  44db9a:	mov    ah,0x35
  44db9c:	shl    BYTE PTR ds:0x35e835e0,0xf0
  44dba3:	xor    eax,0x360035f8
  44dba8:	or     al,0x36
  44dbaa:	sub    al,0x36
  44dbac:	xor    al,0x36
  44dbae:	inc    eax
  44dbaf:	ss pusha 
  44dbb1:	ss push 0x78367036
  44dbb7:	xor    BYTE PTR ss:[esi],0x8c
  44dbbb:	lods   al,BYTE PTR ss:[esi]
  44dbbd:	ss mov ah,0x36
  44dbc0:	mov    esp,0xcc36c436
  44dbc5:	fdiv   DWORD PTR ss:[esi]
  44dbc8:	clc    
  44dbc9:	add    BYTE PTR ss:[edi],dh
  44dbcc:	or     BYTE PTR [edi],dh
  44dbce:	adc    BYTE PTR [edi],dh
  44dbd0:	sbb    al,0x37
  44dbd2:	cmp    al,0x37
  44dbd4:	inc    esp
  44dbd5:	aaa    
  44dbd6:	push   eax
  44dbd7:	aaa    
  44dbd8:	jo     0x44dc11
  44dbda:	jl     0x44dc13
  44dbdc:	pushf  
  44dbdd:	aaa    
  44dbde:	mov    al,0x37
  44dbe0:	aam    0x37
  44dbe2:	fdiv   QWORD PTR [edi]
  44dbe4:	in     al,0x37
  44dbe6:	in     al,dx
  44dbe7:	aaa    
  44dbe8:	hlt    
  44dbe9:	aaa    
  44dbea:	cld    
  44dbeb:	aaa    
  44dbec:	add    al,0x38
  44dbee:	or     al,0x38
  44dbf0:	adc    al,0x38
  44dbf2:	sbb    al,0x38
  44dbf4:	and    al,0x38
  44dbf6:	sub    al,0x38
  44dbf8:	xor    al,0x38
  44dbfa:	cmp    al,0x38
  44dbfc:	inc    esp
  44dbfd:	cmp    BYTE PTR [eax+edi*1+0x54],cl
  44dc01:	cmp    BYTE PTR [eax+edi*1+0x64],bl
  44dc05:	cmp    BYTE PTR [eax+edi*1+0x74],ch
  44dc09:	cmp    BYTE PTR [eax+edi*1-0x7c],bh
  44dc0d:	cmp    BYTE PTR [eax+edi*1+0x38b83898],cl
  44dc14:	sar    BYTE PTR [eax],0xc8
  44dc17:	cmp    al,dl
  44dc19:	cmp    al,bl
  44dc1b:	cmp    al,ah
  44dc1d:	cmp    ah,ch
  44dc1f:	cmp    BYTE PTR [ecx+edi*1],cl
  44dc22:	adc    al,0x39
  44dc24:	and    BYTE PTR [ecx],bh
  44dc26:	inc    eax
  44dc27:	cmp    DWORD PTR [eax+0x39],ecx
  44dc2a:	push   esp
  44dc2b:	cmp    DWORD PTR [ecx+edi*1-0x80],esi
  44dc2f:	cmp    DWORD PTR [eax-0x33c653c7],esp
  44dc35:	cmp    esp,edx
  44dc37:	cmp    esp,ebx
  44dc39:	cmp    eax,ebp
  44dc3b:	cmp    DWORD PTR [eax],ecx
  44dc3d:	cmp    dl,BYTE PTR [eax]
  44dc3f:	cmp    bl,BYTE PTR [eax]
  44dc41:	cmp    ah,BYTE PTR [eax]
  44dc43:	cmp    ch,BYTE PTR [eax]
  44dc45:	cmp    dh,BYTE PTR [eax]
  44dc47:	cmp    bh,BYTE PTR [edx+edi*1]
  44dc4a:	pop    esp
  44dc4b:	cmp    ah,BYTE PTR [edx+edi*1+0x6c]
  44dc4f:	cmp    dh,BYTE PTR [edx+edi*1+0x7c]
  44dc53:	cmp    al,BYTE PTR [edx+edi*1+0x3a943a8c]
  44dc5a:	pushf  
  44dc5b:	cmp    ah,BYTE PTR [edx+edi*1+0x3ab83aac]
  44dc62:	fdivr  DWORD PTR [edx]
  44dc64:	loopne 0x44dca0
  44dc66:	in     al,dx
  44dc67:	cmp    cl,BYTE PTR [ebx+edi*1]
  44dc6a:	adc    al,0x3b
  44dc6c:	and    BYTE PTR [ebx],bh
  44dc6e:	inc    eax
  44dc6f:	cmp    ecx,DWORD PTR [ebx+edi*1+0x6c]
  44dc73:	cmp    esi,DWORD PTR [ebx+edi*1-0x80]
  44dc77:	cmp    esp,DWORD PTR [eax-0x1bc453c5]
  44dc7d:	cmp    edi,eax
  44dc7f:	cmp    eax,DWORD PTR [esp+edi*1]
  44dc82:	or     al,0x3c
  44dc84:	and    al,0x3c
  44dc86:	cmp    BYTE PTR [eax+ebx*2],bh
  44dc89:	cmp    al,0x64
  44dc8b:	cmp    al,0x84
  44dc8d:	cmp    al,0x90
  44dc8f:	cmp    al,0xb0
  44dc91:	cmp    al,0xbc
  44dc93:	cmp    al,0xdc
  44dc95:	cmp    al,0xe8
  44dc97:	cmp    al,0x18
  44dc99:	cmp    eax,0x3d403d30
  44dc9e:	push   eax
  44dc9f:	cmp    eax,0x3d783d64
  44dca4:	test   BYTE PTR ds:0x3da43d8c,bh
  44dcaa:	lods   al,BYTE PTR ds:[esi]
  44dcab:	cmp    eax,0x3dc03db4
  44dcb0:	loopne 0x44dcef
  44dcb2:	call   0xf882ccf4
  44dcb7:	cmp    eax,0x3e243e04
  44dcbc:	sub    al,0x3e
  44dcbe:	xor    al,0x3e
  44dcc0:	inc    eax
  44dcc1:	ds pusha 
  44dcc3:	ds jo  0x44dd04
  44dcc6:	jl     0x44dd06
  44dcc8:	pushf  
  44dcc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44dccb:	lods   al,BYTE PTR ds:[esi]
  44dccd:	ds mov ah,0x3e
  44dcd0:	mov    esp,0xcc3ec43e
  44dcd5:	ds aam 0x3e
  44dcd8:	fdivr  QWORD PTR [esi]
  44dcda:	call   0x1083e51d
  44dcdf:	aas    
  44dce0:	sbb    BYTE PTR [edi],bh
  44dce2:	and    BYTE PTR [edi],bh
  44dce4:	sub    BYTE PTR [edi],bh
  44dce6:	xor    al,0x3f
  44dce8:	push   esp
  44dce9:	aas    
  44dcea:	pop    esp
  44dceb:	aas    
  44dcec:	fs aas 
  44dcee:	ins    BYTE PTR es:[edi],dx
  44dcef:	aas    
  44dcf0:	je     0x44dd31
  44dcf2:	jl     0x44dd33
  44dcf4:	test   BYTE PTR [edi],bh
  44dcf6:	mov    WORD PTR [edi],?
  44dcf8:	xchg   esp,eax
  44dcf9:	aas    
  44dcfa:	pushf  
  44dcfb:	aas    
  44dcfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44dcfd:	aas    
  44dcfe:	lods   al,BYTE PTR ds:[esi]
  44dcff:	aas    
  44dd00:	mov    ah,0x3f
  44dd02:	mov    esp,0xe83fc83f
  44dd07:	aas    
  44dd08:	hlt    
  44dd09:	aas    
  44dd0a:	add    BYTE PTR [eax],al
  44dd0c:	add    BYTE PTR [eax+0x29c0003],dl
  44dd12:	add    BYTE PTR [eax],al
  44dd14:	adc    al,0x30
  44dd16:	and    BYTE PTR [eax],dh
  44dd18:	inc    eax
  44dd19:	xor    BYTE PTR [eax+esi*1+0x6c],cl
  44dd1d:	xor    BYTE PTR [eax+0x30],bh
  44dd20:	cwde   
  44dd21:	xor    BYTE PTR [eax-0x33cf53d0],ah
  44dd27:	xor    al,bl
  44dd29:	xor    al,bh
  44dd2b:	xor    BYTE PTR [eax],al
  44dd2d:	xor    DWORD PTR [eax],ecx
  44dd2f:	xor    DWORD PTR [eax],edx
  44dd31:	xor    DWORD PTR [eax],ebx
  44dd33:	xor    DWORD PTR [eax],esp
  44dd35:	xor    DWORD PTR [ecx+esi*1],ebp
  44dd38:	dec    esp
  44dd39:	xor    DWORD PTR [ecx+esi*1+0x5c],edx
  44dd3d:	xor    DWORD PTR [ecx+esi*1+0x70],esp
  44dd41:	xor    DWORD PTR [ecx+esi*1+0x31b031a8],esp
  44dd48:	mov    esp,0xe431dc31
  44dd4d:	xor    eax,esi
  44dd4f:	xor    DWORD PTR [eax],edx
  44dd51:	xor    bl,BYTE PTR [edx+esi*1]
  44dd54:	cmp    al,0x32
  44dd56:	dec    eax
  44dd57:	xor    ch,BYTE PTR [eax+0x32]
  44dd5a:	je     0x44dd8e
  44dd5c:	xchg   esp,eax
  44dd5d:	xor    bl,BYTE PTR [edx+esi*1+0x32b032a4]
  44dd64:	shl    BYTE PTR [edx],1
  44dd66:	fdiv   DWORD PTR [edx]
  44dd68:	loopne 0x44dd9c
  44dd6a:	in     al,dx
  44dd6b:	xor    cl,BYTE PTR [ebx+esi*1]
  44dd6e:	adc    al,0x33
  44dd70:	sbb    al,0x33
  44dd72:	sub    BYTE PTR [ebx],dh
  44dd74:	dec    eax
  44dd75:	xor    edx,DWORD PTR [eax+0x33]
  44dd78:	pusha  
  44dd79:	xor    edi,DWORD PTR [eax+0x33]
  44dd7c:	mov    WORD PTR [ebx],?
  44dd7e:	cwde   
  44dd7f:	xor    esp,DWORD PTR [eax-0x3fcc47cd]
  44dd85:	xor    ecx,eax
  44dd87:	xor    edx,eax
  44dd89:	xor    ebx,esp
  44dd8b:	xor    edi,esp
  44dd8d:	xor    eax,DWORD PTR [esp+esi*1]
  44dd90:	or     al,0x34
  44dd92:	adc    al,0x34
  44dd94:	sbb    al,0x34
  44dd96:	and    al,0x34
  44dd98:	sub    al,0x34
  44dd9a:	xor    al,0x34
  44dd9c:	inc    eax
  44dd9d:	xor    al,0x60
  44dd9f:	xor    al,0x68
  44dda1:	xor    al,0x70
  44dda3:	xor    al,0x78
  44dda5:	xor    al,0x80
  44dda7:	xor    al,0x8c
  44dda9:	xor    al,0xac
  44ddab:	xor    al,0xb8
  44ddad:	xor    al,0xdc
  44ddaf:	xor    al,0xe4
  44ddb1:	xor    al,0xec
  44ddb3:	xor    al,0xf4
  44ddb5:	xor    al,0xfc
  44ddb7:	xor    al,0x4
  44ddb9:	xor    eax,0x3514350c
  44ddbe:	and    BYTE PTR ds:0x354c3544,dh
  44ddc4:	push   esp
  44ddc5:	xor    eax,0x3564355c
  44ddca:	ins    BYTE PTR es:[edi],dx
  44ddcb:	xor    eax,0x357c3574
  44ddd0:	test   BYTE PTR ds:0x3594358c,dh
  44ddd6:	pushf  
  44ddd7:	xor    eax,0x35ac35a4
  44dddc:	mov    ah,0x35
  44ddde:	mov    esp,0xcc35c435
  44dde3:	xor    eax,0x35dc35d4
  44dde8:	in     al,0x35
  44ddea:	in     al,dx
  44ddeb:	xor    eax,0x361835f8
  44ddf0:	and    BYTE PTR [esi],dh
  44ddf2:	sub    al,0x36
  44ddf4:	dec    esp
  44ddf5:	ss push esp
  44ddf7:	ss pop esp
  44ddf9:	ss push 0x94368836
  44ddff:	ss mov ah,0x36
  44de02:	mov    esp,0xec36c836
  44de07:	ss hlt 
  44de09:	ss cld 
  44de0b:	ss add al,0x37
  44de0e:	or     al,0x37
  44de10:	adc    al,0x37
  44de12:	sbb    al,0x37
  44de14:	and    al,0x37
  44de16:	sub    al,0x37
  44de18:	xor    al,0x37
  44de1a:	cmp    al,0x37
  44de1c:	inc    esp
  44de1d:	aaa    
  44de1e:	dec    esp
  44de1f:	aaa    
  44de20:	push   esp
  44de21:	aaa    
  44de22:	pop    esp
  44de23:	aaa    
  44de24:	fs aaa 
  44de26:	ins    BYTE PTR es:[edi],dx
  44de27:	aaa    
  44de28:	je     0x44de61
  44de2a:	jl     0x44de63
  44de2c:	test   BYTE PTR [edi],dh
  44de2e:	mov    WORD PTR [edi],?
  44de30:	xchg   esp,eax
  44de31:	aaa    
  44de32:	pushf  
  44de33:	aaa    
  44de34:	test   al,0x37
  44de36:	enter  0xd037,0x37
  44de3a:	fdiv   QWORD PTR [edi]
  44de3c:	cld    
  44de3d:	aaa    
  44de3e:	or     BYTE PTR [eax],bh
  44de40:	sub    BYTE PTR [eax],bh
  44de42:	xor    al,0x38
  44de44:	push   esp
  44de45:	cmp    BYTE PTR [eax+0x38],ah
  44de48:	cmp    BYTE PTR [eax],0x88
  44de4b:	cmp    BYTE PTR [eax-0x43c763c8],dl
  44de51:	cmp    ah,al
  44de53:	cmp    ah,cl
  44de55:	cmp    ah,dl
  44de57:	cmp    ah,bl
  44de59:	cmp    ah,ah
  44de5b:	cmp    al,dh
  44de5d:	cmp    BYTE PTR [ecx+edi*1],dl
  44de60:	sbb    al,0x39
  44de62:	and    al,0x39
  44de64:	sub    al,0x39
  44de66:	xor    al,0x39
  44de68:	cmp    al,0x39
  44de6a:	inc    esp
  44de6b:	cmp    DWORD PTR [ecx+edi*1+0x54],ecx
  44de6f:	cmp    DWORD PTR [ecx+edi*1+0x64],ebx
  44de73:	cmp    DWORD PTR [eax+0x39],esi
  44de76:	nop
  44de77:	cmp    DWORD PTR [eax-0x53c65fc7],ebx
  44de7d:	cmp    esp,ecx
  44de7f:	cmp    esp,edx
  44de81:	cmp    esp,ebx
  44de83:	cmp    esp,esp
  44de85:	cmp    esp,ebp
  44de87:	cmp    esp,esi
  44de89:	cmp    esp,edi
  44de8b:	cmp    DWORD PTR [eax],ecx
  44de8d:	cmp    ch,BYTE PTR [eax]
  44de8f:	cmp    dh,BYTE PTR [eax]
  44de91:	cmp    bh,BYTE PTR [eax]
  44de93:	cmp    al,BYTE PTR [edx+edi*1+0x64]
  44de97:	cmp    ch,BYTE PTR [edx+edi*1+0x7c]
  44de9b:	cmp    al,BYTE PTR [edx+edi*1+0x3a943a8c]
  44dea2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44dea3:	cmp    ch,BYTE PTR [edx+edi*1+0x3ac83ab4]
  44deaa:	aam    0x3a
  44deac:	fdivr  QWORD PTR [edx]
  44deae:	hlt    
  44deaf:	cmp    bh,ah
  44deb1:	cmp    al,BYTE PTR [ebx+edi*1]
  44deb4:	adc    BYTE PTR [ebx],bh
  44deb6:	xor    al,0x3b
  44deb8:	cmp    al,0x3b
  44deba:	inc    esp
  44debb:	cmp    ecx,DWORD PTR [ebx+edi*1+0x54]
  44debf:	cmp    ebx,DWORD PTR [ebx+edi*1+0x64]
  44dec3:	cmp    ebp,DWORD PTR [ebx+edi*1+0x7c]
  44dec7:	cmp    eax,DWORD PTR [ebx+edi*1+0x3b943b8c]
  44dece:	pushf  
  44decf:	cmp    esp,DWORD PTR [ebx+edi*1+0x3bb43bac]
  44ded6:	mov    esp,0xd43bc43b
  44dedb:	cmp    esp,esp
  44dedd:	cmp    edi,eax
  44dedf:	cmp    eax,DWORD PTR [esp+edi*1]
  44dee2:	or     al,0x3c
  44dee4:	and    al,0x3c
  44dee6:	sub    al,0x3c
  44dee8:	xor    al,0x3c
  44deea:	cmp    al,0x3c
  44deec:	inc    esp
  44deed:	cmp    al,0x4c
  44deef:	cmp    al,0x54
  44def1:	cmp    al,0x5c
  44def3:	cmp    al,0x64
  44def5:	cmp    al,0x70
  44def7:	cmp    al,0x94
  44def9:	cmp    al,0x9c
  44defb:	cmp    al,0xa4
  44defd:	cmp    al,0xac
  44deff:	cmp    al,0xb4
  44df01:	cmp    al,0xbc
  44df03:	cmp    al,0xc4
  44df05:	cmp    al,0xcc
  44df07:	cmp    al,0xd4
  44df09:	cmp    al,0xdc
  44df0b:	cmp    al,0xe4
  44df0d:	cmp    al,0xec
  44df0f:	cmp    al,0xf4
  44df11:	cmp    al,0xfc
  44df13:	cmp    al,0x4
  44df15:	cmp    eax,0x3d143d0c
  44df1a:	sbb    al,0x3d
  44df1c:	and    al,0x3d
  44df1e:	sub    al,0x3d
  44df20:	xor    al,0x3d
  44df22:	cmp    al,0x3d
  44df24:	inc    esp
  44df25:	cmp    eax,0x3d543d4c
  44df2a:	pop    esp
  44df2b:	cmp    eax,0x3d6c3d64
  44df30:	je     0x44df6f
  44df32:	jl     0x44df71
  44df34:	test   BYTE PTR ds:0x3d983d8c,bh
  44df3a:	mov    esp,0xcc3dc43d
  44df3f:	cmp    eax,0x3ddc3dd4
  44df44:	in     al,0x3d
  44df46:	in     al,dx
  44df47:	cmp    eax,0x3dfc3df4
  44df4c:	add    al,0x3e
  44df4e:	or     al,0x3e
  44df50:	adc    al,0x3e
  44df52:	sbb    al,0x3e
  44df54:	and    al,0x3e
  44df56:	sub    al,0x3e
  44df58:	xor    al,0x3e
  44df5a:	cmp    al,0x3e
  44df5c:	inc    esp
  44df5d:	ds push eax
  44df5f:	ds jo  0x44dfa0
  44df62:	jl     0x44dfa2
  44df64:	pushf  
  44df65:	ds test al,0x3e
  44df68:	int3   
  44df69:	ds aam 0x3e
  44df6c:	fdivr  QWORD PTR [esi]
  44df6e:	in     al,0x3e
  44df70:	in     al,dx
  44df71:	ds hlt 
  44df73:	ds cld 
  44df75:	ds add al,0x3f
  44df78:	adc    BYTE PTR [edi],bh
  44df7a:	xor    al,0x3f
  44df7c:	cmp    al,0x3f
  44df7e:	inc    esp
  44df7f:	aas    
  44df80:	dec    esp
  44df81:	aas    
  44df82:	pop    esp
  44df83:	aas    
  44df84:	je     0x44dfc5
  44df86:	jl     0x44dfc7
  44df88:	test   BYTE PTR [edi],bh
  44df8a:	mov    WORD PTR [edi],?
  44df8c:	xchg   esp,eax
  44df8d:	aas    
  44df8e:	pushf  
  44df8f:	aas    
  44df90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44df91:	aas    
  44df92:	lods   al,BYTE PTR ds:[esi]
  44df93:	aas    
  44df94:	mov    ah,0x3f
  44df96:	mov    esp,0xcc3fc43f
  44df9b:	aas    
  44df9c:	aam    0x3f
  44df9e:	fdivr  QWORD PTR [edi]
  44dfa0:	in     al,0x3f
  44dfa2:	in     al,dx
  44dfa3:	aas    
  44dfa4:	hlt    
  44dfa5:	aas    
  44dfa6:	cld    
  44dfa7:	aas    
  44dfa8:	add    BYTE PTR [eax+0x980003],ah
  44dfae:	add    BYTE PTR [eax],al
  44dfb0:	add    al,0x30
  44dfb2:	or     al,0x30
  44dfb4:	adc    al,0x30
  44dfb6:	sbb    al,0x30
  44dfb8:	and    al,0x30
  44dfba:	sub    al,0x30
  44dfbc:	xor    al,0x30
  44dfbe:	cmp    al,0x30
  44dfc0:	push   esp
  44dfc1:	xor    BYTE PTR [eax+esi*1+0x78],ah
  44dfc5:	xor    BYTE PTR [eax+esi*1+0x30a03098],cl
  44dfcc:	mov    eax,0xc830c030
  44dfd1:	xor    al,dl
  44dfd3:	xor    al,bl
  44dfd5:	xor    ah,ah
  44dfd7:	xor    BYTE PTR [ecx+esi*1],al
  44dfda:	or     al,0x31
  44dfdc:	adc    al,0x31
  44dfde:	sbb    al,0x31
  44dfe0:	and    al,0x31
  44dfe2:	sub    al,0x31
  44dfe4:	xor    al,0x31
  44dfe6:	cmp    al,0x31
  44dfe8:	inc    esp
  44dfe9:	xor    DWORD PTR [ecx+esi*1+0x54],ecx
  44dfed:	xor    DWORD PTR [ecx+esi*1+0x64],ebx
  44dff1:	xor    DWORD PTR [ecx+esi*1+0x74],ebp
  44dff5:	xor    DWORD PTR [ecx+esi*1-0x7c],edi
  44dff9:	xor    DWORD PTR [ecx+esi*1+0x319c3194],ecx
  44e000:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44e001:	xor    DWORD PTR [ecx+esi*1+0x31bc31b4],ebp
  44e008:	les    esi,FWORD PTR [ecx]
  44e00a:	int3   
  44e00b:	xor    esp,edx
  44e00d:	xor    esp,ebx
  44e00f:	xor    eax,ebp
  44e011:	xor    DWORD PTR [eax],ecx
  44e013:	xor    dl,BYTE PTR [eax]
  44e015:	xor    bl,BYTE PTR [eax]
  44e017:	xor    ah,BYTE PTR [eax]
  44e019:	xor    ch,BYTE PTR [edx+esi*1]
  44e01c:	pop    esp
  44e01d:	xor    ah,BYTE PTR [edx+esi*1+0x6c]
  44e021:	xor    dh,BYTE PTR [edx+esi*1+0x7c]
  44e025:	xor    al,BYTE PTR [edx+esi*1+0x32a83294]
  44e02c:	mov    ah,0x32
  44e02e:	mov    esp,0xdc32d432
  44e033:	xor    ch,al
  44e035:	xor    cl,BYTE PTR [eax]
  44e037:	xor    edx,DWORD PTR [ebx+esi*1]
  44e03a:	inc    esp
  44e03b:	xor    ecx,DWORD PTR [eax+0x33]
  44e03e:	add    BYTE PTR [eax],al
  44e040:	add    al,ah
  44e042:	add    eax,DWORD PTR [eax]
  44e044:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44e045:	add    BYTE PTR [eax],al
  44e047:	add    BYTE PTR [eax],al
  44e049:	xor    BYTE PTR [eax+esi*1],al
  44e04c:	or     BYTE PTR [eax],dh
  44e04e:	cmp    BYTE PTR [eax],dh
  44e050:	cmp    al,0x30
  44e052:	xor    BYTE PTR fs:[eax+0x30],ch
  44e056:	ins    BYTE PTR es:[edi],dx
  44e057:	xor    BYTE PTR [eax+0x30],dh
  44e05a:	xchg   esp,eax
  44e05b:	xor    BYTE PTR [eax-0x7cf27d0],bh
  44e061:	xor    BYTE PTR [ecx+esi*1],bl
  44e064:	and    BYTE PTR [ecx],dh
  44e066:	jl     0x44e099
  44e068:	mov    al,0x31
  44e06a:	mov    ah,0x31
  44e06c:	loopne 0x44e09f
  44e06e:	adc    BYTE PTR [edx],dh
  44e070:	inc    eax
  44e071:	xor    al,BYTE PTR [edx+esi*1+0x48]
  44e075:	xor    bh,BYTE PTR [edx+esi*1-0x50]
  44e079:	xor    dh,BYTE PTR [edx+esi*1+0x32dc32b8]
  44e080:	loopne 0x44e0b4
  44e082:	in     al,0x32
  44e084:	call   0x877ccbb
  44e089:	xor    eax,DWORD PTR [eax+0x33]
  44e08c:	pusha  
  44e08d:	xor    edi,DWORD PTR [ebx+esi*1-0x64]
  44e091:	xor    edi,DWORD PTR [ebx+esi*1+0x33f833d8]
  44e098:	sub    BYTE PTR [eax+esi*4],dh
  44e09b:	xor    al,0xc
  44e09d:	xor    eax,0x35603538
  44e0a2:	cwde   
  44e0a3:	xor    eax,0x35d035bc
  44e0a8:	lock xor eax,0x36503618
  44e0ae:	shl    BYTE PTR [esi],1
  44e0b0:	sub    BYTE PTR [edi],dh
  44e0b2:	inc    esp
  44e0b3:	aaa    
  44e0b4:	ins    BYTE PTR es:[edi],dx
  44e0b5:	aaa    
  44e0b6:	js     0x44e0ef
  44e0b8:	enter  0x4837,0x38
  44e0bc:	mov    al,ds:0x8394038
  44e0c1:	cmp    ch,BYTE PTR [eax]
  44e0c3:	cmp    ah,BYTE PTR [eax+0x783af03a]
  44e0c9:	cmp    ebx,eax
  44e0cb:	cmp    ecx,DWORD PTR [eax]
  44e0cd:	cmp    al,0x80
  44e0cf:	cmp    al,0xd0
  44e0d1:	cmp    al,0xf0
  44e0d3:	cmp    al,0x70
  44e0d5:	cmp    eax,0x3df03dc8
  44e0da:	jo     0x44e11a
  44e0dc:	enter  0xf03e,0x3e
  44e0e0:	jo     0x44e121
  44e0e2:	add    BYTE PTR [eax],al
  44e0e4:	add    al,dh
  44e0e6:	add    eax,DWORD PTR [eax]
  44e0e8:	cmp    al,0x0
  44e0ea:	add    BYTE PTR [eax],al
  44e0ec:	and    BYTE PTR [eax],dh
  44e0ee:	push   0xf830c830
  44e0f3:	xor    BYTE PTR [eax+0x31],dl
  44e0f6:	mov    BYTE PTR [ecx],dh
  44e0f8:	lods   al,BYTE PTR ds:[esi]
  44e0f9:	xor    eax,ebx
  44e0fb:	xor    DWORD PTR [eax],eax
  44e0fd:	xor    ch,BYTE PTR [edx+esi*1]
  44e100:	dec    eax
  44e101:	xor    al,BYTE PTR [eax-0x53cd63ce]
  44e107:	xor    dl,al
  44e109:	xor    ah,al
  44e10b:	xor    ch,BYTE PTR [eax+0x33]
  44e10e:	cwde   
  44e10f:	xor    al,0xb0
  44e111:	xor    eax,0x36d83648
  44e116:	add    BYTE PTR [eax],bh
  44e118:	pusha  
  44e119:	cmp    BYTE PTR [eax+0x394038],cl
	...
