
aaffeebd785f0cb44249abb39b081f0c1a80ede5aa0e499137c9c1aa3d16fd81.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	repz ret 
  401002:	lea    esi,[esi+eiz*1+0x0]
  401009:	lea    edi,[edi+eiz*1+0x0]
  401010:	sub    esp,0x1c
  401013:	xor    eax,eax
  401015:	cmp    WORD PTR ds:0x400000,0x5a4d
  40101e:	mov    DWORD PTR ds:0x40b3cc,0x1
  401028:	mov    DWORD PTR ds:0x40b3c8,0x1
  401032:	mov    DWORD PTR ds:0x40b3c4,0x1
  40103c:	mov    DWORD PTR ds:0x40b028,0x1
  401046:	je     0x4010b0
  401048:	mov    ds:0x40b008,eax
  40104d:	mov    eax,ds:0x40b3d8
  401052:	test   eax,eax
  401054:	je     0x4010a0
  401056:	mov    DWORD PTR [esp],0x2
  40105d:	call   0x408398
  401062:	mov    DWORD PTR [esp],0xffffffff
  401069:	call   0x401b80
  40106e:	mov    edx,DWORD PTR ds:0x40b3e8
  401074:	mov    ds:0x40be20,eax
  401079:	mov    ds:0x40be24,eax
  40107e:	mov    eax,ds:0x40c214
  401083:	mov    DWORD PTR [eax],edx
  401085:	call   0x401870
  40108a:	cmp    DWORD PTR ds:0x409034,0x1
  401091:	je     0x401100
  401093:	xor    eax,eax
  401095:	add    esp,0x1c
  401098:	ret    
  401099:	lea    esi,[esi+eiz*1+0x0]
  4010a0:	mov    DWORD PTR [esp],0x1
  4010a7:	call   0x408398
  4010ac:	jmp    0x401062
  4010ae:	xchg   ax,ax
  4010b0:	mov    edx,DWORD PTR ds:0x40003c
  4010b6:	cmp    DWORD PTR [edx+0x400000],0x4550
  4010c0:	lea    ecx,[edx+0x400000]
  4010c6:	jne    0x401048
  4010c8:	movzx  edx,WORD PTR [ecx+0x18]
  4010cc:	cmp    dx,0x10b
  4010d1:	je     0x401112
  4010d3:	cmp    dx,0x20b
  4010d8:	jne    0x401048
  4010de:	cmp    DWORD PTR [ecx+0x84],0xe
  4010e5:	jbe    0x401048
  4010eb:	mov    edx,DWORD PTR [ecx+0xf8]
  4010f1:	xor    eax,eax
  4010f3:	test   edx,edx
  4010f5:	setne  al
  4010f8:	jmp    0x401048
  4010fd:	lea    esi,[esi+0x0]
  401100:	mov    DWORD PTR [esp],0x401b00
  401107:	call   0x401af0
  40110c:	xor    eax,eax
  40110e:	add    esp,0x1c
  401111:	ret    
  401112:	cmp    DWORD PTR [ecx+0x74],0xe
  401116:	jbe    0x401048
  40111c:	mov    ecx,DWORD PTR [ecx+0xe8]
  401122:	xor    eax,eax
  401124:	test   ecx,ecx
  401126:	setne  al
  401129:	jmp    0x401048
  40112e:	xchg   ax,ax
  401130:	sub    esp,0x2c
  401133:	mov    eax,ds:0x40b3c0
  401138:	mov    DWORD PTR [esp+0x10],0x40b000
  401140:	mov    DWORD PTR [esp+0x8],0x40b014
  401148:	mov    DWORD PTR [esp+0x4],0x40b018
  401150:	mov    DWORD PTR [esp],0x40b01c
  401157:	mov    ds:0x40b000,eax
  40115c:	mov    eax,ds:0x40b024
  401161:	mov    DWORD PTR [esp+0xc],eax
  401165:	call   0x4083a0
  40116a:	mov    ds:0x40b010,eax
  40116f:	add    esp,0x2c
  401172:	ret    
  401173:	lea    esi,[esi+0x0]
  401179:	lea    edi,[edi+eiz*1+0x0]
  401180:	push   ebp
  401181:	xor    eax,eax
  401183:	mov    ecx,0x11
  401188:	mov    ebp,esp
  40118a:	push   edi
  40118b:	push   esi
  40118c:	lea    edx,[ebp-0x5c]
  40118f:	push   ebx
  401190:	mov    edi,edx
  401192:	sub    esp,0x7c
  401195:	rep stos DWORD PTR es:[edi],eax
  401197:	mov    al,0x30
  401199:	call   0x402830
  40119e:	sub    esp,eax
  4011a0:	lea    eax,[esp+0x1b]
  4011a4:	and    eax,0xfffffff0
  4011a7:	mov    DWORD PTR [eax],0xcccccccc
  4011ad:	mov    DWORD PTR [eax+0x4],0xcccccccc
  4011b4:	mov    DWORD PTR [eax+0x8],0xcccccccc
  4011bb:	mov    DWORD PTR [eax+0xc],0xcccccccc
  4011c2:	mov    DWORD PTR [eax+0x10],0xcccccccc
  4011c9:	mov    DWORD PTR [eax+0x14],0xcccccccc
  4011d0:	mov    DWORD PTR [eax+0x18],0xcccccccc
  4011d7:	mov    DWORD PTR [eax+0x1c],0xcccccccc
  4011de:	and    esp,0xfffffff0
  4011e1:	mov    esi,DWORD PTR ds:0x40b3d8
  4011e7:	test   esi,esi
  4011e9:	jne    0x401470
  4011ef:	mov    eax,fs:0x18
  4011f5:	xor    esi,esi
  4011f7:	mov    ebx,DWORD PTR [eax+0x4]
  4011fa:	mov    edi,DWORD PTR ds:0x40c1c4
  401200:	jmp    0x401216
  401202:	cmp    eax,ebx
  401204:	je     0x401411
  40120a:	mov    DWORD PTR [esp],0x3e8
  401211:	call   edi
  401213:	sub    esp,0x4
  401216:	mov    eax,esi
  401218:	lock cmpxchg DWORD PTR ds:0x40be28,ebx
  401220:	test   eax,eax
  401222:	jne    0x401202
  401224:	mov    eax,ds:0x40be2c
  401229:	xor    ebx,ebx
  40122b:	cmp    eax,0x1
  40122e:	je     0x401424
  401234:	mov    eax,ds:0x40be2c
  401239:	test   eax,eax
  40123b:	je     0x401481
  401241:	mov    DWORD PTR ds:0x40b004,0x1
  40124b:	mov    eax,ds:0x40be2c
  401250:	cmp    eax,0x1
  401253:	je     0x40143e
  401259:	test   ebx,ebx
  40125b:	je     0x401464
  401261:	mov    eax,ds:0x40a1d0
  401266:	test   eax,eax
  401268:	je     0x401286
  40126a:	mov    DWORD PTR [esp+0x8],0x0
  401272:	mov    DWORD PTR [esp+0x4],0x2
  40127a:	mov    DWORD PTR [esp],0x0
  401281:	call   eax
  401283:	sub    esp,0xc
  401286:	call   0x401e40
  40128b:	mov    DWORD PTR [esp],0x402110
  401292:	call   DWORD PTR ds:0x40c1c0
  401298:	sub    esp,0x4
  40129b:	mov    ds:0x40b3ec,eax
  4012a0:	mov    DWORD PTR [esp],0x401000
  4012a7:	call   0x4083c0
  4012ac:	call   0x401b60
  4012b1:	mov    eax,ds:0x40c204
  4012b6:	mov    DWORD PTR ds:0x40be1c,0x400000
  4012c0:	mov    eax,DWORD PTR [eax]
  4012c2:	test   eax,eax
  4012c4:	je     0x401314
  4012c6:	xor    ecx,ecx
  4012c8:	jmp    0x4012e1
  4012ca:	lea    esi,[esi+0x0]
  4012d0:	test   dl,dl
  4012d2:	je     0x40130f
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    eax,0x1
  4012e1:	movzx  edx,BYTE PTR [eax]
  4012e4:	cmp    dl,0x20
  4012e7:	jle    0x4012d0
  4012e9:	mov    ebx,ecx
  4012eb:	xor    ebx,0x1
  4012ee:	cmp    dl,0x22
  4012f1:	cmove  ecx,ebx
  4012f4:	jmp    0x4012de
  4012f6:	lea    esi,[esi+0x0]
  4012f9:	lea    edi,[edi+eiz*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x40130f
  401304:	add    eax,0x1
  401307:	movzx  edx,BYTE PTR [eax]
  40130a:	cmp    dl,0x20
  40130d:	jle    0x401300
  40130f:	mov    ds:0x40be18,eax
  401314:	mov    ebx,DWORD PTR ds:0x40b3d8
  40131a:	test   ebx,ebx
  40131c:	je     0x401333
  40131e:	movzx  edx,WORD PTR [ebp-0x2c]
  401322:	test   BYTE PTR [ebp-0x30],0x1
  401326:	mov    eax,0xa
  40132b:	cmovne eax,edx
  40132e:	mov    ds:0x409000,eax
  401333:	mov    eax,ds:0x40b01c
  401338:	mov    DWORD PTR [ebp-0x70],eax
  40133b:	mov    esi,eax
  40133d:	lea    eax,[eax*4+0x4]
  401344:	mov    DWORD PTR [ebp-0x74],eax
  401347:	mov    DWORD PTR [esp],eax
  40134a:	call   0x408320
  40134f:	test   esi,esi
  401351:	mov    DWORD PTR [ebp-0x6c],eax
  401354:	mov    edi,DWORD PTR ds:0x40b018
  40135a:	jle    0x4014a4
  401360:	xor    ebx,ebx
  401362:	mov    esi,edi
  401364:	mov    eax,DWORD PTR [esi+ebx*4]
  401367:	mov    DWORD PTR [esp],eax
  40136a:	call   0x4082f0
  40136f:	lea    edi,[eax+0x1]
  401372:	mov    DWORD PTR [esp],edi
  401375:	call   0x408320
  40137a:	mov    ecx,DWORD PTR [ebp-0x6c]
  40137d:	mov    DWORD PTR [ecx+ebx*4],eax
  401380:	mov    ecx,DWORD PTR [esi+ebx*4]
  401383:	add    ebx,0x1
  401386:	mov    DWORD PTR [esp+0x8],edi
  40138a:	mov    DWORD PTR [esp],eax
  40138d:	mov    DWORD PTR [esp+0x4],ecx
  401391:	call   0x408318
  401396:	cmp    ebx,DWORD PTR [ebp-0x70]
  401399:	jne    0x401364
  40139b:	mov    eax,DWORD PTR [ebp-0x74]
  40139e:	sub    eax,0x4
  4013a1:	mov    esi,DWORD PTR [ebp-0x6c]
  4013a4:	mov    DWORD PTR [esi+eax*1],0x0
  4013ab:	mov    DWORD PTR ds:0x40b018,esi
  4013b1:	call   0x401840
  4013b6:	mov    eax,ds:0x40c1f0
  4013bb:	mov    edx,DWORD PTR ds:0x40b014
  4013c1:	mov    DWORD PTR [eax],edx
  4013c3:	mov    eax,ds:0x40b014
  4013c8:	mov    DWORD PTR [esp+0x8],eax
  4013cc:	mov    eax,ds:0x40b018
  4013d1:	mov    DWORD PTR [esp+0x4],eax
  4013d5:	mov    eax,ds:0x40b01c
  4013da:	mov    DWORD PTR [esp],eax
  4013dd:	call   0x408800
  4013e2:	mov    ecx,DWORD PTR ds:0x40b008
  4013e8:	mov    ds:0x40b00c,eax
  4013ed:	test   ecx,ecx
  4013ef:	je     0x4014ab
  4013f5:	mov    edx,DWORD PTR ds:0x40b004
  4013fb:	test   edx,edx
  4013fd:	jne    0x401409
  4013ff:	call   0x408380
  401404:	mov    eax,ds:0x40b00c
  401409:	lea    esp,[ebp-0xc]
  40140c:	pop    ebx
  40140d:	pop    esi
  40140e:	pop    edi
  40140f:	pop    ebp
  401410:	ret    
  401411:	mov    eax,ds:0x40be2c
  401416:	mov    ebx,0x1
  40141b:	cmp    eax,0x1
  40141e:	jne    0x401234
  401424:	mov    DWORD PTR [esp],0x1f
  40142b:	call   0x408388
  401430:	mov    eax,ds:0x40be2c
  401435:	cmp    eax,0x1
  401438:	jne    0x401259
  40143e:	mov    DWORD PTR [esp+0x4],0x40d008
  401446:	mov    DWORD PTR [esp],0x40d000
  40144d:	call   0x408370
  401452:	test   ebx,ebx
  401454:	mov    DWORD PTR ds:0x40be2c,0x2
  40145e:	jne    0x401261
  401464:	xchg   DWORD PTR ds:0x40be28,ebx
  40146a:	jmp    0x401261
  40146f:	nop
  401470:	mov    DWORD PTR [esp],edx
  401473:	call   DWORD PTR ds:0x40c19c
  401479:	sub    esp,0x4
  40147c:	jmp    0x4011ef
  401481:	mov    DWORD PTR ds:0x40be2c,0x1
  40148b:	mov    DWORD PTR [esp+0x4],0x40d018
  401493:	mov    DWORD PTR [esp],0x40d00c
  40149a:	call   0x408370
  40149f:	jmp    0x40124b
  4014a4:	xor    eax,eax
  4014a6:	jmp    0x4013a1
  4014ab:	mov    DWORD PTR [esp],eax
  4014ae:	call   0x408358
  4014b3:	lea    esi,[esi+0x0]
  4014b9:	lea    edi,[edi+eiz*1+0x0]
  4014c0:	sub    esp,0xc
  4014c3:	mov    DWORD PTR ds:0x40b3d8,0x1
  4014cd:	call   0x401880
  4014d2:	add    esp,0xc
  4014d5:	jmp    0x401180
  4014da:	lea    esi,[esi+0x0]
  4014e0:	sub    esp,0xc
  4014e3:	mov    DWORD PTR ds:0x40b3d8,0x0
  4014ed:	call   0x401880
  4014f2:	add    esp,0xc
  4014f5:	jmp    0x401180
  4014fa:	nop
  4014fb:	nop
  4014fc:	nop
  4014fd:	nop
  4014fe:	nop
  4014ff:	nop
  401500:	mov    eax,ds:0x409070
  401505:	test   eax,eax
  401507:	je     0x40154c
  401509:	push   ebp
  40150a:	mov    ebp,esp
  40150c:	sub    esp,0x18
  40150f:	mov    DWORD PTR [esp],0x40a000
  401516:	call   DWORD PTR ds:0x40c190
  40151c:	sub    esp,0x4
  40151f:	test   eax,eax
  401521:	mov    edx,0x0
  401526:	je     0x40153e
  401528:	mov    DWORD PTR [esp+0x4],0x40a00e
  401530:	mov    DWORD PTR [esp],eax
  401533:	call   DWORD PTR ds:0x40c198
  401539:	sub    esp,0x8
  40153c:	mov    edx,eax
  40153e:	test   edx,edx
  401540:	je     0x40154b
  401542:	mov    DWORD PTR [esp],0x409070
  401549:	call   edx
  40154b:	leave  
  40154c:	repz ret 
  40154e:	xchg   ax,ax
  401550:	push   ebp
  401551:	mov    ebp,esp
  401553:	pop    ebp
  401554:	ret    
  401555:	nop
  401556:	nop
  401557:	nop
  401558:	nop
  401559:	nop
  40155a:	nop
  40155b:	nop
  40155c:	nop
  40155d:	nop
  40155e:	nop
  40155f:	nop
  401560:	sub    esp,0x1c
  401563:	lea    eax,[esp+0x24]
  401567:	mov    DWORD PTR [esp],0x40a040
  40156e:	mov    DWORD PTR [esp+0x4],eax
  401572:	call   0x4033f0
  401577:	add    esp,0x1c
  40157a:	ret    
  40157b:	nop
  40157c:	lea    esi,[esi+eiz*1+0x0]
  401580:	sub    esp,0x1c
  401583:	mov    edx,DWORD PTR [esp+0x20]
  401587:	lea    eax,[esp+0x28]
  40158b:	mov    DWORD PTR [esp+0x4],0x40a0dd
  401593:	mov    DWORD PTR [esp+0x8],eax
  401597:	mov    DWORD PTR [esp],edx
  40159a:	call   0x4033b0
  40159f:	add    esp,0x1c
  4015a2:	ret    
  4015a3:	nop
  4015a4:	nop
  4015a5:	nop
  4015a6:	nop
  4015a7:	nop
  4015a8:	nop
  4015a9:	nop
  4015aa:	nop
  4015ab:	nop
  4015ac:	nop
  4015ad:	nop
  4015ae:	nop
  4015af:	nop
  4015b0:	sub    esp,0x1c
  4015b3:	mov    edx,DWORD PTR [esp+0x20]
  4015b7:	lea    eax,[esp+0x28]
  4015bb:	mov    DWORD PTR [esp+0x4],0x40a1c0
  4015c3:	mov    DWORD PTR [esp+0x8],eax
  4015c7:	mov    DWORD PTR [esp],edx
  4015ca:	call   0x403430
  4015cf:	add    esp,0x1c
  4015d2:	ret    
  4015d3:	lea    esi,[esi+0x0]
  4015d9:	lea    edi,[edi+eiz*1+0x0]
  4015e0:	push   edi
  4015e1:	push   esi
  4015e2:	push   ebx
  4015e3:	sub    esp,0x10
  4015e6:	mov    eax,DWORD PTR [esp+0x28]
  4015ea:	mov    ebx,DWORD PTR [esp+0x20]
  4015ee:	mov    edi,DWORD PTR [esp+0x24]
  4015f2:	test   eax,eax
  4015f4:	jne    0x401610
  4015f6:	mov    DWORD PTR [esp],ebx
  4015f9:	call   0x408330
  4015fe:	mov    edx,eax
  401600:	xor    eax,eax
  401602:	test   edx,edx
  401604:	je     0x401610
  401606:	add    esp,0x10
  401609:	pop    ebx
  40160a:	pop    esi
  40160b:	pop    edi
  40160c:	ret    
  40160d:	lea    esi,[esi+0x0]
  401610:	mov    DWORD PTR [esp],ebx
  401613:	call   0x4082f0
  401618:	mov    DWORD PTR [esp],edi
  40161b:	mov    esi,eax
  40161d:	call   0x4082f0
  401622:	lea    ecx,[esi+eax*1+0x2]
  401626:	mov    DWORD PTR [esp],ecx
  401629:	call   0x408320
  40162e:	test   eax,eax
  401630:	mov    esi,eax
  401632:	je     0x401660
  401634:	mov    DWORD PTR [esp+0xc],edi
  401638:	mov    DWORD PTR [esp+0x8],ebx
  40163c:	mov    DWORD PTR [esp+0x4],0x40a1c0
  401644:	mov    DWORD PTR [esp],eax
  401647:	call   0x4015b0
  40164c:	mov    DWORD PTR [esp+0x20],esi
  401650:	add    esp,0x10
  401653:	pop    ebx
  401654:	pop    esi
  401655:	pop    edi
  401656:	jmp    0x4082c0
  40165b:	nop
  40165c:	lea    esi,[esi+eiz*1+0x0]
  401660:	mov    eax,0xffffffff
  401665:	jmp    0x401606
  401667:	mov    esi,esi
  401669:	lea    edi,[edi+eiz*1+0x0]
  401670:	push   esi
  401671:	push   ebx
  401672:	sub    esp,0x14
  401675:	mov    esi,DWORD PTR [esp+0x20]
  401679:	mov    DWORD PTR [esp],esi
  40167c:	call   0x4082f0
  401681:	add    eax,0x2
  401684:	mov    DWORD PTR [esp],eax
  401687:	call   0x408320
  40168c:	test   eax,eax
  40168e:	mov    ebx,eax
  401690:	je     0x4016c0
  401692:	mov    DWORD PTR [esp+0x8],esi
  401696:	mov    DWORD PTR [esp+0xc],0x40a1c6
  40169e:	mov    DWORD PTR [esp+0x4],0x40a1c0
  4016a6:	mov    DWORD PTR [esp],eax
  4016a9:	call   0x4015b0
  4016ae:	mov    DWORD PTR [esp+0x20],ebx
  4016b2:	add    esp,0x14
  4016b5:	pop    ebx
  4016b6:	pop    esi
  4016b7:	jmp    0x4082c0
  4016bc:	lea    esi,[esi+eiz*1+0x0]
  4016c0:	add    esp,0x14
  4016c3:	mov    eax,0xffffffff
  4016c8:	pop    ebx
  4016c9:	pop    esi
  4016ca:	ret    
  4016cb:	nop
  4016cc:	nop
  4016cd:	nop
  4016ce:	nop
  4016cf:	nop
  4016d0:	jmp    DWORD PTR ds:0x40c170
  4016d6:	nop
  4016d7:	nop
  4016d8:	jmp    DWORD PTR ds:0x40c16c
  4016de:	nop
  4016df:	nop
  4016e0:	push   ebx
  4016e1:	sub    esp,0x28
  4016e4:	mov    eax,ds:0x40be24
  4016e9:	mov    DWORD PTR [esp],eax
  4016ec:	call   0x401b70
  4016f1:	cmp    eax,0xffffffff
  4016f4:	mov    DWORD PTR [esp+0x18],eax
  4016f8:	je     0x401780
  4016fe:	mov    DWORD PTR [esp],0x8
  401705:	call   0x408368
  40170a:	mov    eax,ds:0x40be24
  40170f:	mov    DWORD PTR [esp],eax
  401712:	call   0x401b70
  401717:	mov    DWORD PTR [esp+0x18],eax
  40171b:	mov    eax,ds:0x40be20
  401720:	mov    DWORD PTR [esp],eax
  401723:	call   0x401b70
  401728:	mov    DWORD PTR [esp+0x1c],eax
  40172c:	lea    eax,[esp+0x1c]
  401730:	mov    DWORD PTR [esp+0x8],eax
  401734:	lea    eax,[esp+0x18]
  401738:	mov    DWORD PTR [esp+0x4],eax
  40173c:	mov    eax,DWORD PTR [esp+0x30]
  401740:	mov    DWORD PTR [esp],eax
  401743:	call   0x4083a8
  401748:	mov    ebx,eax
  40174a:	mov    eax,DWORD PTR [esp+0x18]
  40174e:	mov    DWORD PTR [esp],eax
  401751:	call   0x401b80
  401756:	mov    ds:0x40be24,eax
  40175b:	mov    eax,DWORD PTR [esp+0x1c]
  40175f:	mov    DWORD PTR [esp],eax
  401762:	call   0x401b80
  401767:	mov    DWORD PTR [esp],0x8
  40176e:	mov    ds:0x40be20,eax
  401773:	call   0x4082e0
  401778:	add    esp,0x28
  40177b:	mov    eax,ebx
  40177d:	pop    ebx
  40177e:	ret    
  40177f:	nop
  401780:	mov    eax,DWORD PTR [esp+0x30]
  401784:	mov    DWORD PTR [esp],eax
  401787:	call   DWORD PTR ds:0x40c224
  40178d:	add    esp,0x28
  401790:	pop    ebx
  401791:	ret    
  401792:	lea    esi,[esi+eiz*1+0x0]
  401799:	lea    edi,[edi+eiz*1+0x0]
  4017a0:	sub    esp,0x1c
  4017a3:	mov    eax,DWORD PTR [esp+0x20]
  4017a7:	mov    DWORD PTR [esp],eax
  4017aa:	call   0x4016e0
  4017af:	test   eax,eax
  4017b1:	sete   al
  4017b4:	add    esp,0x1c
  4017b7:	movzx  eax,al
  4017ba:	neg    eax
  4017bc:	ret    
  4017bd:	nop
  4017be:	nop
  4017bf:	nop
  4017c0:	mov    eax,ds:0x409004
  4017c5:	mov    eax,DWORD PTR [eax]
  4017c7:	test   eax,eax
  4017c9:	je     0x4017ea
  4017cb:	sub    esp,0xc
  4017ce:	xchg   ax,ax
  4017d0:	call   eax
  4017d2:	mov    eax,ds:0x409004
  4017d7:	lea    edx,[eax+0x4]
  4017da:	mov    eax,DWORD PTR [eax+0x4]
  4017dd:	mov    DWORD PTR ds:0x409004,edx
  4017e3:	test   eax,eax
  4017e5:	jne    0x4017d0
  4017e7:	add    esp,0xc
  4017ea:	repz ret 
  4017ec:	lea    esi,[esi+eiz*1+0x0]
  4017f0:	push   ebx
  4017f1:	sub    esp,0x18
  4017f4:	mov    ebx,DWORD PTR ds:0x408a30
  4017fa:	cmp    ebx,0xffffffff
  4017fd:	je     0x401820
  4017ff:	test   ebx,ebx
  401801:	je     0x40180f
  401803:	call   DWORD PTR [ebx*4+0x408a30]
  40180a:	sub    ebx,0x1
  40180d:	jne    0x401803
  40180f:	mov    DWORD PTR [esp],0x4017c0
  401816:	call   0x4017a0
  40181b:	add    esp,0x18
  40181e:	pop    ebx
  40181f:	ret    
  401820:	xor    ebx,ebx
  401822:	jmp    0x401826
  401824:	mov    ebx,eax
  401826:	lea    eax,[ebx+0x1]
  401829:	mov    edx,DWORD PTR [eax*4+0x408a30]
  401830:	test   edx,edx
  401832:	jne    0x401824
  401834:	jmp    0x4017ff
  401836:	lea    esi,[esi+0x0]
  401839:	lea    edi,[edi+eiz*1+0x0]
  401840:	mov    eax,ds:0x40b020
  401845:	test   eax,eax
  401847:	je     0x401850
  401849:	repz ret 
  40184b:	nop
  40184c:	lea    esi,[esi+eiz*1+0x0]
  401850:	mov    DWORD PTR ds:0x40b020,0x1
  40185a:	jmp    0x4017f0
  40185c:	nop
  40185d:	nop
  40185e:	nop
  40185f:	nop
  401860:	mov    eax,ds:0x40c1f4
  401865:	jmp    eax
  401867:	nop
  401868:	nop
  401869:	nop
  40186a:	nop
  40186b:	nop
  40186c:	nop
  40186d:	nop
  40186e:	nop
  40186f:	nop
  401870:	xor    eax,eax
  401872:	ret    
  401873:	nop
  401874:	nop
  401875:	nop
  401876:	nop
  401877:	nop
  401878:	nop
  401879:	nop
  40187a:	nop
  40187b:	nop
  40187c:	nop
  40187d:	nop
  40187e:	nop
  40187f:	nop
  401880:	push   ebp
  401881:	push   edi
  401882:	push   esi
  401883:	push   ebx
  401884:	sub    esp,0x2c
  401887:	mov    eax,ds:0x409068
  40188c:	mov    DWORD PTR [esp+0x10],0x0
  401894:	mov    DWORD PTR [esp+0x14],0x0
  40189c:	cmp    eax,0xbb40e64e
  4018a1:	je     0x4018b2
  4018a3:	not    eax
  4018a5:	mov    ds:0x40906c,eax
  4018aa:	add    esp,0x2c
  4018ad:	pop    ebx
  4018ae:	pop    esi
  4018af:	pop    edi
  4018b0:	pop    ebp
  4018b1:	ret    
  4018b2:	lea    eax,[esp+0x10]
  4018b6:	mov    DWORD PTR [esp],eax
  4018b9:	call   DWORD PTR ds:0x40c1a0
  4018bf:	sub    esp,0x4
  4018c2:	mov    ebx,DWORD PTR [esp+0x10]
  4018c6:	xor    ebx,DWORD PTR [esp+0x14]
  4018ca:	call   DWORD PTR ds:0x40c184
  4018d0:	mov    ebp,eax
  4018d2:	call   DWORD PTR ds:0x40c188
  4018d8:	mov    edi,eax
  4018da:	call   DWORD PTR ds:0x40c1a4
  4018e0:	mov    esi,eax
  4018e2:	lea    eax,[esp+0x18]
  4018e6:	mov    DWORD PTR [esp],eax
  4018e9:	call   DWORD PTR ds:0x40c1b8
  4018ef:	sub    esp,0x4
  4018f2:	xor    ebx,DWORD PTR [esp+0x18]
  4018f6:	xor    ebx,DWORD PTR [esp+0x1c]
  4018fa:	xor    ebx,ebp
  4018fc:	xor    edi,ebx
  4018fe:	xor    esi,edi
  401900:	cmp    esi,0xbb40e64e
  401906:	je     0x401920
  401908:	mov    eax,esi
  40190a:	not    eax
  40190c:	mov    DWORD PTR ds:0x409068,esi
  401912:	mov    ds:0x40906c,eax
  401917:	add    esp,0x2c
  40191a:	pop    ebx
  40191b:	pop    esi
  40191c:	pop    edi
  40191d:	pop    ebp
  40191e:	ret    
  40191f:	nop
  401920:	mov    eax,0x44bf19b0
  401925:	mov    esi,0xbb40e64f
  40192a:	jmp    0x40190c
  40192c:	lea    esi,[esi+eiz*1+0x0]
  401930:	push   ebp
  401931:	mov    ebp,esp
  401933:	sub    esp,0x28
  401936:	mov    DWORD PTR ds:0x40b340,0xc0000409
  401940:	mov    eax,DWORD PTR [ebp+0x4]
  401943:	lea    edx,[ebp+0x4]
  401946:	mov    DWORD PTR ds:0x40b344,0x1
  401950:	mov    DWORD PTR [esp],0x0
  401957:	mov    DWORD PTR ds:0x40b104,edx
  40195d:	mov    ds:0x40b0f8,eax
  401962:	mov    ds:0x40b34c,eax
  401967:	mov    eax,DWORD PTR [ebp+0x8]
  40196a:	mov    ds:0x40b0ec,eax
  40196f:	mov    eax,ds:0x409068
  401974:	mov    DWORD PTR [ebp-0x10],eax
  401977:	mov    eax,ds:0x40906c
  40197c:	mov    DWORD PTR [ebp-0xc],eax
  40197f:	call   DWORD PTR ds:0x40c1c0
  401985:	sub    esp,0x4
  401988:	mov    DWORD PTR [esp],0x40a1c8
  40198f:	call   DWORD PTR ds:0x40c1d0
  401995:	sub    esp,0x4
  401998:	call   DWORD PTR ds:0x40c180
  40199e:	mov    DWORD PTR [esp+0x4],0xc0000409
  4019a6:	mov    DWORD PTR [esp],eax
  4019a9:	call   DWORD PTR ds:0x40c1c8
  4019af:	sub    esp,0x8
  4019b2:	call   0x4082d8
  4019b7:	nop
  4019b8:	nop
  4019b9:	nop
  4019ba:	nop
  4019bb:	nop
  4019bc:	nop
  4019bd:	nop
  4019be:	nop
  4019bf:	nop
  4019c0:	sub    esp,0x1c
  4019c3:	mov    eax,DWORD PTR [esp+0x24]
  4019c7:	test   eax,eax
  4019c9:	je     0x4019e0
  4019cb:	cmp    eax,0x3
  4019ce:	je     0x4019e0
  4019d0:	mov    eax,0x1
  4019d5:	add    esp,0x1c
  4019d8:	ret    0xc
  4019db:	nop
  4019dc:	lea    esi,[esi+eiz*1+0x0]
  4019e0:	mov    edx,DWORD PTR [esp+0x28]
  4019e4:	mov    DWORD PTR [esp+0x4],eax
  4019e8:	mov    eax,DWORD PTR [esp+0x20]
  4019ec:	mov    DWORD PTR [esp+0x8],edx
  4019f0:	mov    DWORD PTR [esp],eax
  4019f3:	call   0x402440
  4019f8:	mov    eax,0x1
  4019fd:	add    esp,0x1c
  401a00:	ret    0xc
  401a03:	lea    esi,[esi+0x0]
  401a09:	lea    edi,[edi+eiz*1+0x0]
  401a10:	push   ebx
  401a11:	sub    esp,0x18
  401a14:	cmp    DWORD PTR ds:0x409014,0x2
  401a1b:	mov    eax,DWORD PTR [esp+0x24]
  401a1f:	je     0x401a2b
  401a21:	mov    DWORD PTR ds:0x409014,0x2
  401a2b:	cmp    eax,0x2
  401a2e:	je     0x401a41
  401a30:	cmp    eax,0x1
  401a33:	je     0x401a70
  401a35:	add    esp,0x18
  401a38:	mov    eax,0x1
  401a3d:	pop    ebx
  401a3e:	ret    0xc
  401a41:	mov    ebx,0x40d030
  401a46:	cmp    ebx,0x40d030
  401a4c:	je     0x401a35
  401a4e:	xchg   ax,ax
  401a50:	mov    eax,DWORD PTR [ebx]
  401a52:	test   eax,eax
  401a54:	je     0x401a58
  401a56:	call   eax
  401a58:	add    ebx,0x4
  401a5b:	cmp    ebx,0x40d030
  401a61:	jne    0x401a50
  401a63:	add    esp,0x18
  401a66:	mov    eax,0x1
  401a6b:	pop    ebx
  401a6c:	ret    0xc
  401a6f:	nop
  401a70:	mov    eax,DWORD PTR [esp+0x28]
  401a74:	mov    DWORD PTR [esp+0x4],0x1
  401a7c:	mov    DWORD PTR [esp+0x8],eax
  401a80:	mov    eax,DWORD PTR [esp+0x20]
  401a84:	mov    DWORD PTR [esp],eax
  401a87:	call   0x402440
  401a8c:	jmp    0x401a35
  401a8e:	xchg   ax,ax
  401a90:	xor    eax,eax
  401a92:	ret    
  401a93:	nop
  401a94:	nop
  401a95:	nop
  401a96:	nop
  401a97:	nop
  401a98:	nop
  401a99:	nop
  401a9a:	nop
  401a9b:	nop
  401a9c:	nop
  401a9d:	nop
  401a9e:	nop
  401a9f:	nop
  401aa0:	sub    esp,0x3c
  401aa3:	mov    eax,ds:0x40b3d4
  401aa8:	fld    QWORD PTR [esp+0x48]
  401aac:	fld    QWORD PTR [esp+0x50]
  401ab0:	test   eax,eax
  401ab2:	fld    QWORD PTR [esp+0x58]
  401ab6:	je     0x401ae1
  401ab8:	fxch   st(2)
  401aba:	mov    edx,DWORD PTR [esp+0x40]
  401abe:	fstp   QWORD PTR [esp+0x18]
  401ac2:	fstp   QWORD PTR [esp+0x20]
  401ac6:	mov    DWORD PTR [esp+0x10],edx
  401aca:	mov    edx,DWORD PTR [esp+0x44]
  401ace:	fstp   QWORD PTR [esp+0x28]
  401ad2:	mov    DWORD PTR [esp+0x14],edx
  401ad6:	lea    edx,[esp+0x10]
  401ada:	mov    DWORD PTR [esp],edx
  401add:	call   eax
  401adf:	jmp    0x401ae7
  401ae1:	fstp   st(0)
  401ae3:	fstp   st(0)
  401ae5:	fstp   st(0)
  401ae7:	add    esp,0x3c
  401aea:	ret    
  401aeb:	nop
  401aec:	lea    esi,[esi+eiz*1+0x0]
  401af0:	mov    eax,DWORD PTR [esp+0x4]
  401af4:	mov    ds:0x40b3d4,eax
  401af9:	jmp    0x408390
  401afe:	xchg   ax,ax
  401b00:	sub    esp,0x3c
  401b03:	mov    ecx,0x40a1d4
  401b08:	mov    eax,DWORD PTR [esp+0x40]
  401b0c:	mov    edx,DWORD PTR [eax]
  401b0e:	sub    edx,0x1
  401b11:	cmp    edx,0x5
  401b14:	ja     0x401b1d
  401b16:	mov    ecx,DWORD PTR [edx*4+0x40a2f0]
  401b1d:	fld    QWORD PTR [eax+0x18]
  401b20:	fstp   QWORD PTR [esp+0x20]
  401b24:	fld    QWORD PTR [eax+0x10]
  401b27:	fstp   QWORD PTR [esp+0x18]
  401b2b:	fld    QWORD PTR [eax+0x8]
  401b2e:	fstp   QWORD PTR [esp+0x10]
  401b32:	mov    eax,DWORD PTR [eax+0x4]
  401b35:	mov    DWORD PTR [esp+0x8],ecx
  401b39:	mov    DWORD PTR [esp+0x4],0x40a1e4
  401b41:	mov    DWORD PTR [esp+0xc],eax
  401b45:	mov    eax,ds:0x40c21c
  401b4a:	add    eax,0x40
  401b4d:	mov    DWORD PTR [esp],eax
  401b50:	call   0x408350
  401b55:	xor    eax,eax
  401b57:	add    esp,0x3c
  401b5a:	ret    
  401b5b:	nop
  401b5c:	nop
  401b5d:	nop
  401b5e:	nop
  401b5f:	nop
  401b60:	fninit 
  401b62:	ret    
  401b63:	nop
  401b64:	nop
  401b65:	nop
  401b66:	nop
  401b67:	nop
  401b68:	nop
  401b69:	nop
  401b6a:	nop
  401b6b:	nop
  401b6c:	nop
  401b6d:	nop
  401b6e:	nop
  401b6f:	nop
  401b70:	mov    eax,DWORD PTR [esp+0x4]
  401b74:	ret    
  401b75:	lea    esi,[esi+eiz*1+0x0]
  401b79:	lea    edi,[edi+eiz*1+0x0]
  401b80:	mov    eax,DWORD PTR [esp+0x4]
  401b84:	ret    
  401b85:	nop
  401b86:	nop
  401b87:	nop
  401b88:	nop
  401b89:	nop
  401b8a:	nop
  401b8b:	nop
  401b8c:	nop
  401b8d:	nop
  401b8e:	nop
  401b8f:	nop
  401b90:	push   ebx
  401b91:	sub    esp,0x18
  401b94:	mov    eax,ds:0x40c21c
  401b99:	mov    DWORD PTR [esp+0x8],0x1b
  401ba1:	mov    DWORD PTR [esp+0x4],0x1
  401ba9:	lea    ebx,[esp+0x24]
  401bad:	mov    DWORD PTR [esp],0x40a308
  401bb4:	add    eax,0x40
  401bb7:	mov    DWORD PTR [esp+0xc],eax
  401bbb:	call   0x408338
  401bc0:	mov    eax,DWORD PTR [esp+0x20]
  401bc4:	mov    DWORD PTR [esp+0x8],ebx
  401bc8:	mov    DWORD PTR [esp+0x4],eax
  401bcc:	mov    eax,ds:0x40c21c
  401bd1:	add    eax,0x40
  401bd4:	mov    DWORD PTR [esp],eax
  401bd7:	call   0x4082d0
  401bdc:	call   0x4082d8
  401be1:	jmp    0x401bf0
  401be3:	nop
  401be4:	nop
  401be5:	nop
  401be6:	nop
  401be7:	nop
  401be8:	nop
  401be9:	nop
  401bea:	nop
  401beb:	nop
  401bec:	nop
  401bed:	nop
  401bee:	nop
  401bef:	nop
  401bf0:	push   ebp
  401bf1:	push   edi
  401bf2:	push   esi
  401bf3:	push   ebx
  401bf4:	mov    esi,eax
  401bf6:	sub    esp,0x4c
  401bf9:	mov    ebp,DWORD PTR ds:0x40b3e0
  401bff:	mov    DWORD PTR [esp+0x14],edx
  401c03:	mov    DWORD PTR [esp+0x18],ecx
  401c07:	test   ebp,ebp
  401c09:	jle    0x401df0
  401c0f:	mov    eax,ds:0x40b3e4
  401c14:	lea    edx,[eax+0x4]
  401c17:	xor    eax,eax
  401c19:	lea    esi,[esi+eiz*1+0x0]
  401c20:	mov    ecx,DWORD PTR [edx]
  401c22:	cmp    esi,ecx
  401c24:	jb     0x401c34
  401c26:	mov    ebx,DWORD PTR [edx+0x4]
  401c29:	add    ecx,DWORD PTR [ebx+0x8]
  401c2c:	cmp    esi,ecx
  401c2e:	jb     0x401d90
  401c34:	add    eax,0x1
  401c37:	add    edx,0xc
  401c3a:	cmp    eax,ebp
  401c3c:	jne    0x401c20
  401c3e:	mov    DWORD PTR [esp],esi
  401c41:	call   0x402600
  401c46:	test   eax,eax
  401c48:	mov    edi,eax
  401c4a:	je     0x401e17
  401c50:	lea    ebx,[ebp+ebp*2+0x0]
  401c54:	mov    ebp,DWORD PTR ds:0x40b3e4
  401c5a:	shl    ebx,0x2
  401c5d:	add    ebp,ebx
  401c5f:	mov    DWORD PTR [ebp+0x8],eax
  401c62:	mov    DWORD PTR [ebp+0x0],0x0
  401c69:	call   0x402700
  401c6e:	add    eax,DWORD PTR [edi+0xc]
  401c71:	lea    ecx,[esp+0x24]
  401c75:	mov    DWORD PTR [esp+0x1c],ecx
  401c79:	mov    DWORD PTR [ebp+0x4],eax
  401c7c:	mov    eax,ds:0x40b3e4
  401c81:	mov    DWORD PTR [esp+0x4],ecx
  401c85:	mov    DWORD PTR [esp+0x8],0x1c
  401c8d:	mov    ebp,DWORD PTR ds:0x40c1d8
  401c93:	mov    eax,DWORD PTR [eax+ebx*1+0x4]
  401c97:	mov    DWORD PTR [esp],eax
  401c9a:	call   ebp
  401c9c:	sub    esp,0xc
  401c9f:	test   eax,eax
  401ca1:	mov    ecx,DWORD PTR [esp+0x1c]
  401ca5:	je     0x401df7
  401cab:	mov    eax,DWORD PTR [esp+0x38]
  401caf:	cmp    eax,0x4
  401cb2:	je     0x401cbd
  401cb4:	cmp    eax,0x40
  401cb7:	jne    0x401da0
  401cbd:	add    DWORD PTR ds:0x40b3e0,0x1
  401cc4:	mov    DWORD PTR [esp+0x8],0x1c
  401ccc:	mov    DWORD PTR [esp+0x4],ecx
  401cd0:	mov    DWORD PTR [esp],esi
  401cd3:	call   ebp
  401cd5:	sub    esp,0xc
  401cd8:	test   eax,eax
  401cda:	je     0x401e27
  401ce0:	mov    eax,DWORD PTR [esp+0x38]
  401ce4:	cmp    eax,0x4
  401ce7:	je     0x401cee
  401ce9:	cmp    eax,0x40
  401cec:	jne    0x401d10
  401cee:	mov    eax,DWORD PTR [esp+0x18]
  401cf2:	mov    DWORD PTR [esp],esi
  401cf5:	mov    DWORD PTR [esp+0x8],eax
  401cf9:	mov    eax,DWORD PTR [esp+0x14]
  401cfd:	mov    DWORD PTR [esp+0x4],eax
  401d01:	call   0x408318
  401d06:	add    esp,0x4c
  401d09:	pop    ebx
  401d0a:	pop    esi
  401d0b:	pop    edi
  401d0c:	pop    ebp
  401d0d:	ret    
  401d0e:	xchg   ax,ax
  401d10:	mov    eax,DWORD PTR [esp+0x30]
  401d14:	lea    ebp,[esp+0x20]
  401d18:	mov    DWORD PTR [esp+0x8],0x40
  401d20:	mov    ebx,DWORD PTR ds:0x40c1d4
  401d26:	mov    DWORD PTR [esp+0xc],ebp
  401d2a:	mov    DWORD PTR [esp+0x4],eax
  401d2e:	mov    eax,DWORD PTR [esp+0x24]
  401d32:	mov    DWORD PTR [esp],eax
  401d35:	call   ebx
  401d37:	sub    esp,0x10
  401d3a:	mov    eax,DWORD PTR [esp+0x18]
  401d3e:	mov    DWORD PTR [esp],esi
  401d41:	mov    DWORD PTR [esp+0x8],eax
  401d45:	mov    eax,DWORD PTR [esp+0x14]
  401d49:	mov    DWORD PTR [esp+0x4],eax
  401d4d:	call   0x408318
  401d52:	mov    eax,DWORD PTR [esp+0x38]
  401d56:	cmp    eax,0x40
  401d59:	je     0x401d06
  401d5b:	cmp    eax,0x4
  401d5e:	je     0x401d06
  401d60:	mov    eax,DWORD PTR [esp+0x20]
  401d64:	mov    DWORD PTR [esp+0xc],ebp
  401d68:	mov    DWORD PTR [esp+0x8],eax
  401d6c:	mov    eax,DWORD PTR [esp+0x30]
  401d70:	mov    DWORD PTR [esp+0x4],eax
  401d74:	mov    eax,DWORD PTR [esp+0x24]
  401d78:	mov    DWORD PTR [esp],eax
  401d7b:	call   ebx
  401d7d:	sub    esp,0x10
  401d80:	add    esp,0x4c
  401d83:	pop    ebx
  401d84:	pop    esi
  401d85:	pop    edi
  401d86:	pop    ebp
  401d87:	ret    
  401d88:	nop
  401d89:	lea    esi,[esi+eiz*1+0x0]
  401d90:	lea    ecx,[esp+0x24]
  401d94:	mov    ebp,DWORD PTR ds:0x40c1d8
  401d9a:	jmp    0x401cc4
  401d9f:	nop
  401da0:	mov    eax,DWORD PTR [esp+0x30]
  401da4:	add    ebx,DWORD PTR ds:0x40b3e4
  401daa:	mov    DWORD PTR [esp+0x1c],ecx
  401dae:	mov    DWORD PTR [esp+0x8],0x40
  401db6:	mov    DWORD PTR [esp+0x4],eax
  401dba:	mov    eax,DWORD PTR [esp+0x24]
  401dbe:	mov    DWORD PTR [esp+0xc],ebx
  401dc2:	mov    DWORD PTR [esp],eax
  401dc5:	call   DWORD PTR ds:0x40c1d4
  401dcb:	sub    esp,0x10
  401dce:	test   eax,eax
  401dd0:	mov    ecx,DWORD PTR [esp+0x1c]
  401dd4:	jne    0x401cbd
  401dda:	call   DWORD PTR ds:0x40c18c
  401de0:	mov    DWORD PTR [esp],0x40a378
  401de7:	mov    DWORD PTR [esp+0x4],eax
  401deb:	call   0x401b90
  401df0:	xor    ebp,ebp
  401df2:	jmp    0x401c3e
  401df7:	mov    eax,ds:0x40b3e4
  401dfc:	mov    eax,DWORD PTR [eax+ebx*1+0x4]
  401e00:	mov    DWORD PTR [esp+0x8],eax
  401e04:	mov    eax,DWORD PTR [edi+0x8]
  401e07:	mov    DWORD PTR [esp],0x40a344
  401e0e:	mov    DWORD PTR [esp+0x4],eax
  401e12:	call   0x401b90
  401e17:	mov    DWORD PTR [esp+0x4],esi
  401e1b:	mov    DWORD PTR [esp],0x40a324
  401e22:	call   0x401b90
  401e27:	mov    DWORD PTR [esp+0x8],esi
  401e2b:	mov    DWORD PTR [esp+0x4],0x1c
  401e33:	mov    DWORD PTR [esp],0x40a344
  401e3a:	call   0x401b90
  401e3f:	nop
  401e40:	mov    eax,ds:0x40b3dc
  401e45:	test   eax,eax
  401e47:	je     0x401e50
  401e49:	ret    
  401e4a:	lea    esi,[esi+0x0]
  401e50:	push   ebp
  401e51:	mov    ebp,esp
  401e53:	push   edi
  401e54:	push   esi
  401e55:	push   ebx
  401e56:	sub    esp,0x4c
  401e59:	mov    DWORD PTR ds:0x40b3dc,0x1
  401e63:	call   0x402650
  401e68:	lea    eax,[eax+eax*2]
  401e6b:	lea    eax,[eax*4+0x1e]
  401e72:	and    eax,0xfffffff0
  401e75:	call   0x402830
  401e7a:	mov    DWORD PTR ds:0x40b3e0,0x0
  401e84:	sub    esp,eax
  401e86:	lea    eax,[esp+0x1f]
  401e8a:	and    eax,0xfffffff0
  401e8d:	mov    ds:0x40b3e4,eax
  401e92:	mov    eax,0x40aca4
  401e97:	sub    eax,0x40aca4
  401e9c:	cmp    eax,0x7
  401e9f:	jle    0x401f40
  401ea5:	cmp    eax,0xb
  401ea8:	jle    0x402013
  401eae:	mov    eax,ds:0x40aca4
  401eb3:	test   eax,eax
  401eb5:	jne    0x401f48
  401ebb:	mov    eax,ds:0x40aca8
  401ec0:	test   eax,eax
  401ec2:	jne    0x401f48
  401ec8:	mov    edi,DWORD PTR ds:0x40acac
  401ece:	mov    ebx,0x40acb0
  401ed3:	test   edi,edi
  401ed5:	je     0x402018
  401edb:	mov    ebx,0x40aca4
  401ee0:	mov    eax,DWORD PTR [ebx+0x8]
  401ee3:	cmp    eax,0x1
  401ee6:	jne    0x4020f4
  401eec:	add    ebx,0xc
  401eef:	cmp    ebx,0x40aca4
  401ef5:	jae    0x401f40
  401ef7:	movzx  edx,BYTE PTR [ebx+0x8]
  401efb:	mov    edi,DWORD PTR [ebx+0x4]
  401efe:	mov    ecx,DWORD PTR [ebx]
  401f00:	lea    eax,[edi+0x400000]
  401f06:	cmp    edx,0x10
  401f09:	mov    esi,DWORD PTR [ecx+0x400000]
  401f0f:	je     0x402032
  401f15:	cmp    edx,0x20
  401f18:	je     0x4020ae
  401f1e:	cmp    edx,0x8
  401f21:	je     0x40207e
  401f27:	mov    DWORD PTR [esp+0x4],edx
  401f2b:	mov    DWORD PTR [esp],0x40a3d4
  401f32:	mov    DWORD PTR [ebp-0x34],0x0
  401f39:	call   0x401b90
  401f3e:	xchg   ax,ax
  401f40:	lea    esp,[ebp-0xc]
  401f43:	pop    ebx
  401f44:	pop    esi
  401f45:	pop    edi
  401f46:	pop    ebp
  401f47:	ret    
  401f48:	mov    ebx,0x40aca4
  401f4d:	cmp    ebx,0x40aca4
  401f53:	jae    0x401f40
  401f55:	lea    eax,[ebp-0x34]
  401f58:	mov    DWORD PTR [ebp-0x3c],eax
  401f5b:	nop
  401f5c:	lea    esi,[esi+eiz*1+0x0]
  401f60:	mov    ecx,DWORD PTR [ebx+0x4]
  401f63:	mov    edx,DWORD PTR [ebx]
  401f65:	add    ebx,0x8
  401f68:	add    edx,DWORD PTR [ecx+0x400000]
  401f6e:	lea    eax,[ecx+0x400000]
  401f74:	mov    ecx,0x4
  401f79:	mov    DWORD PTR [ebp-0x34],edx
  401f7c:	mov    edx,DWORD PTR [ebp-0x3c]
  401f7f:	call   0x401bf0
  401f84:	cmp    ebx,0x40aca4
  401f8a:	jb     0x401f60
  401f8c:	mov    eax,ds:0x40b3e0
  401f91:	xor    ebx,ebx
  401f93:	test   eax,eax
  401f95:	jg     0x401fab
  401f97:	jmp    0x401f40
  401f99:	lea    esi,[esi+eiz*1+0x0]
  401fa0:	add    ebx,0x1
  401fa3:	cmp    ebx,DWORD PTR ds:0x40b3e0
  401fa9:	jge    0x401f40
  401fab:	lea    esi,[ebx+ebx*2]
  401fae:	mov    eax,ds:0x40b3e4
  401fb3:	lea    edi,[esi*4+0x0]
  401fba:	add    eax,edi
  401fbc:	mov    edx,DWORD PTR [eax]
  401fbe:	test   edx,edx
  401fc0:	je     0x401fa0
  401fc2:	mov    ecx,DWORD PTR [ebp-0x3c]
  401fc5:	mov    DWORD PTR [esp+0x8],0x1c
  401fcd:	mov    DWORD PTR [esp+0x4],ecx
  401fd1:	mov    eax,DWORD PTR [eax+0x4]
  401fd4:	mov    DWORD PTR [esp],eax
  401fd7:	call   DWORD PTR ds:0x40c1d8
  401fdd:	sub    esp,0xc
  401fe0:	test   eax,eax
  401fe2:	je     0x4020cf
  401fe8:	lea    eax,[ebp-0x38]
  401feb:	mov    DWORD PTR [esp+0xc],eax
  401fef:	mov    eax,ds:0x40b3e4
  401ff4:	mov    eax,DWORD PTR [eax+esi*4]
  401ff7:	mov    DWORD PTR [esp+0x8],eax
  401ffb:	mov    eax,DWORD PTR [ebp-0x28]
  401ffe:	mov    DWORD PTR [esp+0x4],eax
  402002:	mov    eax,DWORD PTR [ebp-0x34]
  402005:	mov    DWORD PTR [esp],eax
  402008:	call   DWORD PTR ds:0x40c1d4
  40200e:	sub    esp,0x10
  402011:	jmp    0x401fa0
  402013:	mov    ebx,0x40aca4
  402018:	mov    esi,DWORD PTR [ebx]
  40201a:	test   esi,esi
  40201c:	jne    0x401f4d
  402022:	mov    ecx,DWORD PTR [ebx+0x4]
  402025:	test   ecx,ecx
  402027:	je     0x401ee0
  40202d:	jmp    0x401f4d
  402032:	movzx  edx,WORD PTR [edi+0x400000]
  402039:	mov    edi,edx
  40203b:	mov    WORD PTR [ebp-0x3c],dx
  40203f:	or     edi,0xffff0000
  402045:	cmp    WORD PTR [ebp-0x3c],0x0
  40204a:	cmovs  edx,edi
  40204d:	sub    edx,0x400000
  402053:	sub    edx,ecx
  402055:	mov    ecx,0x2
  40205a:	add    esi,edx
  40205c:	lea    edx,[ebp-0x34]
  40205f:	mov    DWORD PTR [ebp-0x34],esi
  402062:	mov    DWORD PTR [ebp-0x3c],edx
  402065:	call   0x401bf0
  40206a:	add    ebx,0xc
  40206d:	cmp    ebx,0x40aca4
  402073:	jb     0x401ef7
  402079:	jmp    0x401f8c
  40207e:	movzx  edx,BYTE PTR [eax]
  402081:	mov    edi,edx
  402083:	or     edi,0xffffff00
  402089:	cmp    BYTE PTR [eax],0x0
  40208c:	cmovs  edx,edi
  40208f:	sub    edx,0x400000
  402095:	sub    edx,ecx
  402097:	mov    ecx,0x1
  40209c:	add    esi,edx
  40209e:	lea    edx,[ebp-0x34]
  4020a1:	mov    DWORD PTR [ebp-0x34],esi
  4020a4:	mov    DWORD PTR [ebp-0x3c],edx
  4020a7:	call   0x401bf0
  4020ac:	jmp    0x40206a
  4020ae:	mov    edx,DWORD PTR [eax]
  4020b0:	mov    ecx,0x4
  4020b5:	sub    edx,0x400000
  4020bb:	sub    edx,DWORD PTR [ebx]
  4020bd:	add    esi,edx
  4020bf:	lea    edx,[ebp-0x34]
  4020c2:	mov    DWORD PTR [ebp-0x34],esi
  4020c5:	mov    DWORD PTR [ebp-0x3c],edx
  4020c8:	call   0x401bf0
  4020cd:	jmp    0x40206a
  4020cf:	mov    ecx,DWORD PTR ds:0x40b3e4
  4020d5:	add    ecx,edi
  4020d7:	mov    eax,DWORD PTR [ecx+0x4]
  4020da:	mov    DWORD PTR [esp+0x8],eax
  4020de:	mov    eax,DWORD PTR [ecx+0x8]
  4020e1:	mov    eax,DWORD PTR [eax+0x8]
  4020e4:	mov    DWORD PTR [esp],0x40a344
  4020eb:	mov    DWORD PTR [esp+0x4],eax
  4020ef:	call   0x401b90
  4020f4:	mov    DWORD PTR [esp+0x4],eax
  4020f8:	mov    DWORD PTR [esp],0x40a3a0
  4020ff:	call   0x401b90
  402104:	nop
  402105:	nop
  402106:	nop
  402107:	nop
  402108:	nop
  402109:	nop
  40210a:	nop
  40210b:	nop
  40210c:	nop
  40210d:	nop
  40210e:	nop
  40210f:	nop
  402110:	push   ebp
  402111:	mov    ebp,esp
  402113:	push   ebx
  402114:	sub    esp,0x14
  402117:	mov    ebx,DWORD PTR [ebp+0x8]
  40211a:	mov    eax,DWORD PTR [ebx]
  40211c:	mov    eax,DWORD PTR [eax]
  40211e:	cmp    eax,0xc0000091
  402123:	ja     0x402170
  402125:	cmp    eax,0xc000008d
  40212a:	jae    0x4021e0
  402130:	cmp    eax,0xc0000005
  402135:	jne    0x402214
  40213b:	mov    DWORD PTR [esp+0x4],0x0
  402143:	mov    DWORD PTR [esp],0xb
  40214a:	call   0x408308
  40214f:	cmp    eax,0x1
  402152:	je     0x402270
  402158:	test   eax,eax
  40215a:	je     0x402189
  40215c:	mov    DWORD PTR [esp],0xb
  402163:	call   eax
  402165:	jmp    0x4021ca
  402167:	mov    esi,esi
  402169:	lea    edi,[edi+eiz*1+0x0]
  402170:	cmp    eax,0xc0000094
  402175:	je     0x4021a0
  402177:	cmp    eax,0xc0000096
  40217c:	je     0x40221f
  402182:	cmp    eax,0xc0000093
  402187:	je     0x4021e0
  402189:	mov    eax,ds:0x40b3ec
  40218e:	test   eax,eax
  402190:	je     0x4021cf
  402192:	mov    DWORD PTR [ebp+0x8],ebx
  402195:	mov    ebx,DWORD PTR [ebp-0x4]
  402198:	leave  
  402199:	jmp    eax
  40219b:	nop
  40219c:	lea    esi,[esi+eiz*1+0x0]
  4021a0:	mov    DWORD PTR [esp+0x4],0x0
  4021a8:	mov    DWORD PTR [esp],0x8
  4021af:	call   0x408308
  4021b4:	cmp    eax,0x1
  4021b7:	je     0x402290
  4021bd:	test   eax,eax
  4021bf:	je     0x402189
  4021c1:	mov    DWORD PTR [esp],0x8
  4021c8:	call   eax
  4021ca:	mov    eax,0xffffffff
  4021cf:	mov    ebx,DWORD PTR [ebp-0x4]
  4021d2:	leave  
  4021d3:	ret    0x4
  4021d6:	lea    esi,[esi+0x0]
  4021d9:	lea    edi,[edi+eiz*1+0x0]
  4021e0:	mov    DWORD PTR [esp+0x4],0x0
  4021e8:	mov    DWORD PTR [esp],0x8
  4021ef:	call   0x408308
  4021f4:	cmp    eax,0x1
  4021f7:	jne    0x4021bd
  4021f9:	mov    DWORD PTR [esp+0x4],0x1
  402201:	mov    DWORD PTR [esp],0x8
  402208:	call   0x408308
  40220d:	call   0x401b60
  402212:	jmp    0x4021ca
  402214:	cmp    eax,0xc000001d
  402219:	jne    0x402189
  40221f:	mov    DWORD PTR [esp+0x4],0x0
  402227:	mov    DWORD PTR [esp],0x4
  40222e:	call   0x408308
  402233:	cmp    eax,0x1
  402236:	je     0x402250
  402238:	test   eax,eax
  40223a:	je     0x402189
  402240:	mov    DWORD PTR [esp],0x4
  402247:	call   eax
  402249:	jmp    0x4021ca
  40224e:	xchg   ax,ax
  402250:	mov    DWORD PTR [esp+0x4],0x1
  402258:	mov    DWORD PTR [esp],0x4
  40225f:	call   0x408308
  402264:	jmp    0x4021ca
  402269:	lea    esi,[esi+eiz*1+0x0]
  402270:	mov    DWORD PTR [esp+0x4],0x1
  402278:	mov    DWORD PTR [esp],0xb
  40227f:	call   0x408308
  402284:	jmp    0x4021ca
  402289:	lea    esi,[esi+eiz*1+0x0]
  402290:	mov    DWORD PTR [esp+0x4],0x1
  402298:	mov    DWORD PTR [esp],0x8
  40229f:	call   0x408308
  4022a4:	jmp    0x4021ca
  4022a9:	nop
  4022aa:	nop
  4022ab:	nop
  4022ac:	nop
  4022ad:	nop
  4022ae:	nop
  4022af:	nop
  4022b0:	push   ebp
  4022b1:	push   edi
  4022b2:	push   esi
  4022b3:	push   ebx
  4022b4:	sub    esp,0x1c
  4022b7:	mov    DWORD PTR [esp],0x40b3f8
  4022be:	call   DWORD PTR ds:0x40c17c
  4022c4:	mov    ebx,DWORD PTR ds:0x40b3f0
  4022ca:	sub    esp,0x4
  4022cd:	mov    ebp,DWORD PTR ds:0x40c1cc
  4022d3:	mov    edi,DWORD PTR ds:0x40c18c
  4022d9:	test   ebx,ebx
  4022db:	je     0x402305
  4022dd:	lea    esi,[esi+0x0]
  4022e0:	mov    eax,DWORD PTR [ebx]
  4022e2:	mov    DWORD PTR [esp],eax
  4022e5:	call   ebp
  4022e7:	sub    esp,0x4
  4022ea:	mov    esi,eax
  4022ec:	call   edi
  4022ee:	test   eax,eax
  4022f0:	jne    0x4022fe
  4022f2:	test   esi,esi
  4022f4:	je     0x4022fe
  4022f6:	mov    eax,DWORD PTR [ebx+0x4]
  4022f9:	mov    DWORD PTR [esp],esi
  4022fc:	call   eax
  4022fe:	mov    ebx,DWORD PTR [ebx+0x8]
  402301:	test   ebx,ebx
  402303:	jne    0x4022e0
  402305:	mov    DWORD PTR [esp],0x40b3f8
  40230c:	call   DWORD PTR ds:0x40c1b0
  402312:	sub    esp,0x4
  402315:	add    esp,0x1c
  402318:	pop    ebx
  402319:	pop    esi
  40231a:	pop    edi
  40231b:	pop    ebp
  40231c:	ret    
  40231d:	lea    esi,[esi+0x0]
  402320:	mov    eax,ds:0x40b3f4
  402325:	test   eax,eax
  402327:	jne    0x402330
  402329:	ret    
  40232a:	lea    esi,[esi+0x0]
  402330:	push   ebx
  402331:	sub    esp,0x18
  402334:	mov    DWORD PTR [esp+0x4],0xc
  40233c:	mov    DWORD PTR [esp],0x1
  402343:	call   0x408360
  402348:	test   eax,eax
  40234a:	mov    ebx,eax
  40234c:	je     0x402390
  40234e:	mov    eax,DWORD PTR [esp+0x20]
  402352:	mov    DWORD PTR [esp],0x40b3f8
  402359:	mov    DWORD PTR [ebx],eax
  40235b:	mov    eax,DWORD PTR [esp+0x24]
  40235f:	mov    DWORD PTR [ebx+0x4],eax
  402362:	call   DWORD PTR ds:0x40c17c
  402368:	mov    eax,ds:0x40b3f0
  40236d:	sub    esp,0x4
  402370:	mov    DWORD PTR ds:0x40b3f0,ebx
  402376:	mov    DWORD PTR [esp],0x40b3f8
  40237d:	mov    DWORD PTR [ebx+0x8],eax
  402380:	call   DWORD PTR ds:0x40c1b0
  402386:	xor    eax,eax
  402388:	sub    esp,0x4
  40238b:	add    esp,0x18
  40238e:	pop    ebx
  40238f:	ret    
  402390:	mov    eax,0xffffffff
  402395:	jmp    0x40238b
  402397:	mov    esi,esi
  402399:	lea    edi,[edi+eiz*1+0x0]
  4023a0:	push   ebx
  4023a1:	sub    esp,0x18
  4023a4:	mov    eax,ds:0x40b3f4
  4023a9:	mov    ebx,DWORD PTR [esp+0x20]
  4023ad:	test   eax,eax
  4023af:	jne    0x4023c0
  4023b1:	add    esp,0x18
  4023b4:	xor    eax,eax
  4023b6:	pop    ebx
  4023b7:	ret    
  4023b8:	nop
  4023b9:	lea    esi,[esi+eiz*1+0x0]
  4023c0:	mov    DWORD PTR [esp],0x40b3f8
  4023c7:	call   DWORD PTR ds:0x40c17c
  4023cd:	mov    edx,DWORD PTR ds:0x40b3f0
  4023d3:	sub    esp,0x4
  4023d6:	test   edx,edx
  4023d8:	je     0x4023f1
  4023da:	mov    eax,DWORD PTR [edx]
  4023dc:	cmp    eax,ebx
  4023de:	jne    0x4023ea
  4023e0:	jmp    0x402430
  4023e2:	mov    ecx,DWORD PTR [eax]
  4023e4:	cmp    ecx,ebx
  4023e6:	je     0x402410
  4023e8:	mov    edx,eax
  4023ea:	mov    eax,DWORD PTR [edx+0x8]
  4023ed:	test   eax,eax
  4023ef:	jne    0x4023e2
  4023f1:	mov    DWORD PTR [esp],0x40b3f8
  4023f8:	call   DWORD PTR ds:0x40c1b0
  4023fe:	sub    esp,0x4
  402401:	add    esp,0x18
  402404:	xor    eax,eax
  402406:	pop    ebx
  402407:	ret    
  402408:	nop
  402409:	lea    esi,[esi+eiz*1+0x0]
  402410:	mov    ecx,DWORD PTR [eax+0x8]
  402413:	mov    DWORD PTR [edx+0x8],ecx
  402416:	mov    DWORD PTR [esp],eax
  402419:	call   0x408340
  40241e:	mov    DWORD PTR [esp],0x40b3f8
  402425:	call   DWORD PTR ds:0x40c1b0
  40242b:	sub    esp,0x4
  40242e:	jmp    0x402401
  402430:	mov    eax,edx
  402432:	mov    edx,DWORD PTR [edx+0x8]
  402435:	mov    DWORD PTR ds:0x40b3f0,edx
  40243b:	jmp    0x402416
  40243d:	lea    esi,[esi+0x0]
  402440:	sub    esp,0x1c
  402443:	mov    eax,DWORD PTR [esp+0x24]
  402447:	cmp    eax,0x1
  40244a:	je     0x402494
  40244c:	jb     0x402465
  40244e:	cmp    eax,0x3
  402451:	jne    0x40245c
  402453:	mov    eax,ds:0x40b3f4
  402458:	test   eax,eax
  40245a:	jne    0x4024c2
  40245c:	mov    eax,0x1
  402461:	add    esp,0x1c
  402464:	ret    
  402465:	mov    eax,ds:0x40b3f4
  40246a:	test   eax,eax
  40246c:	jne    0x4024d0
  40246e:	mov    eax,ds:0x40b3f4
  402473:	cmp    eax,0x1
  402476:	jne    0x40245c
  402478:	mov    DWORD PTR ds:0x40b3f4,0x0
  402482:	mov    DWORD PTR [esp],0x40b3f8
  402489:	call   DWORD PTR ds:0x40c178
  40248f:	sub    esp,0x4
  402492:	jmp    0x40245c
  402494:	mov    eax,ds:0x40b3f4
  402499:	test   eax,eax
  40249b:	je     0x4024b0
  40249d:	mov    DWORD PTR ds:0x40b3f4,0x1
  4024a7:	mov    eax,0x1
  4024ac:	add    esp,0x1c
  4024af:	ret    
  4024b0:	mov    DWORD PTR [esp],0x40b3f8
  4024b7:	call   DWORD PTR ds:0x40c1a8
  4024bd:	sub    esp,0x4
  4024c0:	jmp    0x40249d
  4024c2:	call   0x4022b0
  4024c7:	jmp    0x40245c
  4024c9:	lea    esi,[esi+eiz*1+0x0]
  4024d0:	call   0x4022b0
  4024d5:	jmp    0x40246e
  4024d7:	nop
  4024d8:	nop
  4024d9:	nop
  4024da:	nop
  4024db:	nop
  4024dc:	nop
  4024dd:	nop
  4024de:	nop
  4024df:	nop
  4024e0:	add    eax,DWORD PTR [eax+0x3c]
  4024e3:	cmp    DWORD PTR [eax],0x4550
  4024e9:	je     0x4024f0
  4024eb:	xor    eax,eax
  4024ed:	ret    
  4024ee:	xchg   ax,ax
  4024f0:	cmp    WORD PTR [eax+0x18],0x10b
  4024f6:	sete   al
  4024f9:	movzx  eax,al
  4024fc:	ret    
  4024fd:	lea    esi,[esi+0x0]
  402500:	mov    eax,DWORD PTR [esp+0x4]
  402504:	cmp    WORD PTR [eax],0x5a4d
  402509:	je     0x402510
  40250b:	xor    eax,eax
  40250d:	ret    
  40250e:	xchg   ax,ax
  402510:	jmp    0x4024e0
  402512:	lea    esi,[esi+eiz*1+0x0]
  402519:	lea    edi,[edi+eiz*1+0x0]
  402520:	push   esi
  402521:	push   ebx
  402522:	mov    edx,DWORD PTR [esp+0xc]
  402526:	mov    ebx,DWORD PTR [esp+0x10]
  40252a:	add    edx,DWORD PTR [edx+0x3c]
  40252d:	movzx  esi,WORD PTR [edx+0x6]
  402531:	movzx  eax,WORD PTR [edx+0x14]
  402535:	test   esi,esi
  402537:	lea    eax,[edx+eax*1+0x18]
  40253b:	je     0x402558
  40253d:	xor    ecx,ecx
  40253f:	nop
  402540:	mov    edx,DWORD PTR [eax+0xc]
  402543:	cmp    edx,ebx
  402545:	ja     0x40254e
  402547:	add    edx,DWORD PTR [eax+0x8]
  40254a:	cmp    ebx,edx
  40254c:	jb     0x40255a
  40254e:	add    ecx,0x1
  402551:	add    eax,0x28
  402554:	cmp    ecx,esi
  402556:	jne    0x402540
  402558:	xor    eax,eax
  40255a:	pop    ebx
  40255b:	pop    esi
  40255c:	ret    
  40255d:	lea    esi,[esi+0x0]
  402560:	push   ebp
  402561:	push   edi
  402562:	push   esi
  402563:	push   ebx
  402564:	xor    esi,esi
  402566:	sub    esp,0x1c
  402569:	mov    edi,DWORD PTR [esp+0x30]
  40256d:	mov    DWORD PTR [esp],edi
  402570:	call   0x4082f0
  402575:	cmp    eax,0x8
  402578:	ja     0x402585
  40257a:	cmp    WORD PTR ds:0x400000,0x5a4d
  402583:	je     0x402590
  402585:	add    esp,0x1c
  402588:	mov    eax,esi
  40258a:	pop    ebx
  40258b:	pop    esi
  40258c:	pop    edi
  40258d:	pop    ebp
  40258e:	ret    
  40258f:	nop
  402590:	mov    eax,0x400000
  402595:	call   0x4024e0
  40259a:	test   eax,eax
  40259c:	je     0x402585
  40259e:	mov    eax,ds:0x40003c
  4025a3:	lea    edx,[eax+0x400000]
  4025a9:	movzx  eax,WORD PTR [eax+0x400014]
  4025b0:	movzx  ebp,WORD PTR [edx+0x6]
  4025b4:	lea    ebx,[edx+eax*1+0x18]
  4025b8:	test   ebp,ebp
  4025ba:	jne    0x4025ca
  4025bc:	jmp    0x402585
  4025be:	xchg   ax,ax
  4025c0:	add    esi,0x1
  4025c3:	add    ebx,0x28
  4025c6:	cmp    esi,ebp
  4025c8:	je     0x4025f0
  4025ca:	mov    DWORD PTR [esp+0x8],0x8
  4025d2:	mov    DWORD PTR [esp+0x4],edi
  4025d6:	mov    DWORD PTR [esp],ebx
  4025d9:	call   0x4082e8
  4025de:	test   eax,eax
  4025e0:	jne    0x4025c0
  4025e2:	add    esp,0x1c
  4025e5:	mov    esi,ebx
  4025e7:	mov    eax,esi
  4025e9:	pop    ebx
  4025ea:	pop    esi
  4025eb:	pop    edi
  4025ec:	pop    ebp
  4025ed:	ret    
  4025ee:	xchg   ax,ax
  4025f0:	add    esp,0x1c
  4025f3:	xor    esi,esi
  4025f5:	pop    ebx
  4025f6:	mov    eax,esi
  4025f8:	pop    esi
  4025f9:	pop    edi
  4025fa:	pop    ebp
  4025fb:	ret    
  4025fc:	lea    esi,[esi+eiz*1+0x0]
  402600:	push   ebx
  402601:	xor    ebx,ebx
  402603:	sub    esp,0x8
  402606:	cmp    WORD PTR ds:0x400000,0x5a4d
  40260f:	je     0x402620
  402611:	add    esp,0x8
  402614:	mov    eax,ebx
  402616:	pop    ebx
  402617:	ret    
  402618:	nop
  402619:	lea    esi,[esi+eiz*1+0x0]
  402620:	mov    eax,0x400000
  402625:	call   0x4024e0
  40262a:	test   eax,eax
  40262c:	je     0x402611
  40262e:	mov    eax,DWORD PTR [esp+0x10]
  402632:	mov    DWORD PTR [esp],0x400000
  402639:	sub    eax,0x400000
  40263e:	mov    DWORD PTR [esp+0x4],eax
  402642:	call   0x402520
  402647:	add    esp,0x8
  40264a:	mov    ebx,eax
  40264c:	mov    eax,ebx
  40264e:	pop    ebx
  40264f:	ret    
  402650:	xor    eax,eax
  402652:	cmp    WORD PTR ds:0x400000,0x5a4d
  40265b:	je     0x402660
  40265d:	repz ret 
  40265f:	nop
  402660:	mov    eax,0x400000
  402665:	call   0x4024e0
  40266a:	test   eax,eax
  40266c:	je     0x40265d
  40266e:	mov    eax,ds:0x40003c
  402673:	movzx  eax,WORD PTR [eax+0x400006]
  40267a:	ret    
  40267b:	nop
  40267c:	lea    esi,[esi+eiz*1+0x0]
  402680:	push   esi
  402681:	xor    esi,esi
  402683:	cmp    WORD PTR ds:0x400000,0x5a4d
  40268c:	push   ebx
  40268d:	mov    ebx,DWORD PTR [esp+0xc]
  402691:	je     0x4026a0
  402693:	mov    eax,esi
  402695:	pop    ebx
  402696:	pop    esi
  402697:	ret    
  402698:	nop
  402699:	lea    esi,[esi+eiz*1+0x0]
  4026a0:	mov    eax,0x400000
  4026a5:	call   0x4024e0
  4026aa:	test   eax,eax
  4026ac:	je     0x402693
  4026ae:	mov    eax,ds:0x40003c
  4026b3:	lea    ecx,[eax+0x400000]
  4026b9:	movzx  eax,WORD PTR [eax+0x400014]
  4026c0:	lea    edx,[ecx+eax*1+0x18]
  4026c4:	movzx  ecx,WORD PTR [ecx+0x6]
  4026c8:	test   ecx,ecx
  4026ca:	je     0x402693
  4026cc:	xor    eax,eax
  4026ce:	xchg   ax,ax
  4026d0:	test   BYTE PTR [edx+0x27],0x20
  4026d4:	je     0x4026dd
  4026d6:	test   ebx,ebx
  4026d8:	je     0x4026f0
  4026da:	sub    ebx,0x1
  4026dd:	add    eax,0x1
  4026e0:	add    edx,0x28
  4026e3:	cmp    eax,ecx
  4026e5:	jne    0x4026d0
  4026e7:	xor    esi,esi
  4026e9:	mov    eax,esi
  4026eb:	pop    ebx
  4026ec:	pop    esi
  4026ed:	ret    
  4026ee:	xchg   ax,ax
  4026f0:	mov    esi,edx
  4026f2:	mov    eax,esi
  4026f4:	pop    ebx
  4026f5:	pop    esi
  4026f6:	ret    
  4026f7:	mov    esi,esi
  4026f9:	lea    edi,[edi+eiz*1+0x0]
  402700:	push   ebx
  402701:	xor    ebx,ebx
  402703:	cmp    WORD PTR ds:0x400000,0x5a4d
  40270c:	je     0x402712
  40270e:	mov    eax,ebx
  402710:	pop    ebx
  402711:	ret    
  402712:	mov    eax,0x400000
  402717:	call   0x4024e0
  40271c:	test   eax,eax
  40271e:	mov    eax,0x400000
  402723:	cmovne ebx,eax
  402726:	mov    eax,ebx
  402728:	pop    ebx
  402729:	ret    
  40272a:	lea    esi,[esi+0x0]
  402730:	xor    eax,eax
  402732:	cmp    WORD PTR ds:0x400000,0x5a4d
  40273b:	je     0x402740
  40273d:	ret    
  40273e:	xchg   ax,ax
  402740:	sub    esp,0x8
  402743:	mov    eax,0x400000
  402748:	call   0x4024e0
  40274d:	test   eax,eax
  40274f:	je     0x402776
  402751:	mov    eax,DWORD PTR [esp+0xc]
  402755:	mov    DWORD PTR [esp],0x400000
  40275c:	sub    eax,0x400000
  402761:	mov    DWORD PTR [esp+0x4],eax
  402765:	call   0x402520
  40276a:	test   eax,eax
  40276c:	je     0x402780
  40276e:	mov    eax,DWORD PTR [eax+0x24]
  402771:	not    eax
  402773:	shr    eax,0x1f
  402776:	add    esp,0x8
  402779:	ret    
  40277a:	lea    esi,[esi+0x0]
  402780:	xor    eax,eax
  402782:	jmp    0x402776
  402784:	lea    esi,[esi+0x0]
  40278a:	lea    edi,[edi+0x0]
  402790:	push   edi
  402791:	push   esi
  402792:	xor    edi,edi
  402794:	push   ebx
  402795:	sub    esp,0x8
  402798:	cmp    WORD PTR ds:0x400000,0x5a4d
  4027a1:	mov    esi,DWORD PTR [esp+0x18]
  4027a5:	je     0x4027b0
  4027a7:	add    esp,0x8
  4027aa:	mov    eax,edi
  4027ac:	pop    ebx
  4027ad:	pop    esi
  4027ae:	pop    edi
  4027af:	ret    
  4027b0:	mov    eax,0x400000
  4027b5:	call   0x4024e0
  4027ba:	test   eax,eax
  4027bc:	je     0x4027a7
  4027be:	mov    eax,ds:0x40003c
  4027c3:	mov    ebx,DWORD PTR [eax+0x400080]
  4027c9:	test   ebx,ebx
  4027cb:	je     0x4027a7
  4027cd:	mov    DWORD PTR [esp+0x4],ebx
  4027d1:	mov    DWORD PTR [esp],0x400000
  4027d8:	call   0x402520
  4027dd:	test   eax,eax
  4027df:	je     0x4027a7
  4027e1:	add    ebx,0x400000
  4027e7:	mov    edx,ebx
  4027e9:	jne    0x4027f6
  4027eb:	jmp    0x4027a7
  4027ed:	lea    esi,[esi+0x0]
  4027f0:	sub    esi,0x1
  4027f3:	add    edx,0x14
  4027f6:	mov    ecx,DWORD PTR [edx+0x4]
  4027f9:	test   ecx,ecx
  4027fb:	jne    0x402804
  4027fd:	mov    eax,DWORD PTR [edx+0xc]
  402800:	test   eax,eax
  402802:	je     0x402820
  402804:	test   esi,esi
  402806:	jg     0x4027f0
  402808:	mov    edi,DWORD PTR [edx+0xc]
  40280b:	add    esp,0x8
  40280e:	pop    ebx
  40280f:	pop    esi
  402810:	add    edi,0x400000
  402816:	mov    eax,edi
  402818:	pop    edi
  402819:	ret    
  40281a:	lea    esi,[esi+0x0]
  402820:	add    esp,0x8
  402823:	xor    edi,edi
  402825:	mov    eax,edi
  402827:	pop    ebx
  402828:	pop    esi
  402829:	pop    edi
  40282a:	ret    
  40282b:	nop
  40282c:	nop
  40282d:	nop
  40282e:	nop
  40282f:	nop
  402830:	push   ecx
  402831:	push   eax
  402832:	cmp    eax,0x1000
  402837:	lea    ecx,[esp+0xc]
  40283b:	jb     0x402852
  40283d:	sub    ecx,0x1000
  402843:	or     DWORD PTR [ecx],0x0
  402846:	sub    eax,0x1000
  40284b:	cmp    eax,0x1000
  402850:	ja     0x40283d
  402852:	sub    ecx,eax
  402854:	or     DWORD PTR [ecx],0x0
  402857:	pop    eax
  402858:	pop    ecx
  402859:	ret    
  40285a:	nop
  40285b:	nop
  40285c:	xchg   ax,ax
  40285e:	xchg   ax,ax
  402860:	push   ebp
  402861:	push   edi
  402862:	mov    edi,eax
  402864:	push   esi
  402865:	push   ebx
  402866:	mov    eax,edx
  402868:	sub    eax,edi
  40286a:	mov    ebx,ecx
  40286c:	sub    esp,0x14
  40286f:	sub    ebx,edx
  402871:	mov    DWORD PTR [esp+0x4],edx
  402875:	cdq    
  402876:	mov    DWORD PTR [esp+0xc],eax
  40287a:	idiv   ebx
  40287c:	mov    ebp,ebx
  40287e:	mov    DWORD PTR [esp+0x8],ebx
  402882:	mov    esi,DWORD PTR [esp+0x28]
  402886:	test   edx,edx
  402888:	mov    ebx,edx
  40288a:	je     0x4028fd
  40288c:	mov    eax,ebp
  40288e:	jmp    0x402892
  402890:	mov    ebx,edx
  402892:	cdq    
  402893:	idiv   ebx
  402895:	mov    eax,ebx
  402897:	test   edx,edx
  402899:	jne    0x402890
  40289b:	mov    eax,ecx
  40289d:	sub    eax,edi
  40289f:	cdq    
  4028a0:	idiv   ebx
  4028a2:	mov    DWORD PTR [esp],eax
  4028a5:	mov    eax,DWORD PTR [esp+0x4]
  4028a9:	mov    ebp,eax
  4028ab:	add    eax,ebx
  4028ad:	test   ebx,ebx
  4028af:	mov    DWORD PTR [esp+0x10],eax
  4028b3:	jle    0x4028f5
  4028b5:	mov    edx,DWORD PTR [esp]
  4028b8:	mov    eax,ebp
  4028ba:	test   edx,edx
  4028bc:	jle    0x4028ec
  4028be:	mov    edi,DWORD PTR [esi+ebp*4]
  4028c1:	xor    edx,edx
  4028c3:	mov    ebx,DWORD PTR [esp+0x8]
  4028c7:	mov    ecx,eax
  4028c9:	sub    ecx,DWORD PTR [esp+0xc]
  4028cd:	add    ebx,eax
  4028cf:	cmp    DWORD PTR [esp+0x4],eax
  4028d3:	mov    eax,ecx
  4028d5:	cmovg  eax,ebx
  4028d8:	add    edx,0x1
  4028db:	cmp    edx,DWORD PTR [esp]
  4028de:	lea    ebx,[esi+eax*4]
  4028e1:	mov    ecx,DWORD PTR [ebx]
  4028e3:	mov    DWORD PTR [ebx],edi
  4028e5:	mov    DWORD PTR [esi+ebp*4],ecx
  4028e8:	mov    edi,ecx
  4028ea:	jne    0x4028c3
  4028ec:	add    ebp,0x1
  4028ef:	cmp    ebp,DWORD PTR [esp+0x10]
  4028f3:	jne    0x4028b5
  4028f5:	add    esp,0x14
  4028f8:	pop    ebx
  4028f9:	pop    esi
  4028fa:	pop    edi
  4028fb:	pop    ebp
  4028fc:	ret    
  4028fd:	mov    ebx,DWORD PTR [esp+0x8]
  402901:	jmp    0x40289b
  402903:	lea    esi,[esi+0x0]
  402909:	lea    edi,[edi+eiz*1+0x0]
  402910:	push   ebx
  402911:	sub    esp,0x18
  402914:	mov    eax,ds:0x40c1e4
  402919:	mov    ebx,DWORD PTR [esp+0x20]
  40291d:	mov    eax,DWORD PTR [eax]
  40291f:	mov    eax,DWORD PTR [eax]
  402921:	mov    DWORD PTR [esp+0x4],0x40a400
  402929:	mov    DWORD PTR [esp+0x8],eax
  40292d:	mov    eax,ds:0x40c21c
  402932:	add    eax,0x40
  402935:	mov    DWORD PTR [esp],eax
  402938:	call   0x408350
  40293d:	test   ebx,ebx
  40293f:	je     0x40295d
  402941:	lea    eax,[esp+0x24]
  402945:	mov    DWORD PTR [esp+0x4],ebx
  402949:	mov    DWORD PTR [esp+0x8],eax
  40294d:	mov    eax,ds:0x40c21c
  402952:	add    eax,0x40
  402955:	mov    DWORD PTR [esp],eax
  402958:	call   0x4082d0
  40295d:	mov    eax,ds:0x40c21c
  402962:	mov    DWORD PTR [esp],0xa
  402969:	add    eax,0x40
  40296c:	mov    DWORD PTR [esp+0x4],eax
  402970:	call   0x408348
  402975:	add    esp,0x18
  402978:	pop    ebx
  402979:	ret    
  40297a:	lea    esi,[esi+0x0]
  402980:	push   ebp
  402981:	push   edi
  402982:	push   esi
  402983:	push   ebx
  402984:	sub    esp,0x4c
  402987:	mov    DWORD PTR [esp+0x30],edx
  40298b:	mov    edx,DWORD PTR ds:0x40902c
  402991:	mov    DWORD PTR [esp+0x3c],eax
  402995:	mov    eax,ds:0x409024
  40299a:	mov    DWORD PTR [esp+0x24],ecx
  40299e:	mov    DWORD PTR [esp+0x4],0x3d
  4029a6:	lea    ecx,[edx+0x1]
  4029a9:	mov    DWORD PTR [esp+0x34],edx
  4029ad:	mov    DWORD PTR [esp],eax
  4029b0:	mov    esi,eax
  4029b2:	mov    DWORD PTR [esp+0x1c],eax
  4029b6:	mov    DWORD PTR [esp+0x38],ecx
  4029ba:	mov    DWORD PTR ds:0x40902c,ecx
  4029c0:	call   0x408300
  4029c5:	test   eax,eax
  4029c7:	mov    DWORD PTR [esp+0x2c],eax
  4029cb:	je     0x402b73
  4029d1:	mov    edi,eax
  4029d3:	add    eax,0x1
  4029d6:	sub    edi,esi
  4029d8:	mov    DWORD PTR [esp+0x2c],eax
  4029dc:	mov    eax,DWORD PTR [esp+0x24]
  4029e0:	mov    ebp,DWORD PTR [eax]
  4029e2:	test   ebp,ebp
  4029e4:	je     0x402bb6
  4029ea:	mov    ebx,eax
  4029ec:	mov    DWORD PTR [esp+0x20],0xffffffff
  4029f4:	mov    DWORD PTR [esp+0x28],0x0
  4029fc:	xor    esi,esi
  4029fe:	jmp    0x402a14
  402a00:	mov    ebp,DWORD PTR [esp+0x64]
  402a04:	test   ebp,ebp
  402a06:	je     0x402a41
  402a08:	add    ebx,0x10
  402a0b:	mov    ebp,DWORD PTR [ebx]
  402a0d:	add    esi,0x1
  402a10:	test   ebp,ebp
  402a12:	je     0x402a70
  402a14:	mov    eax,DWORD PTR [esp+0x1c]
  402a18:	mov    DWORD PTR [esp+0x8],edi
  402a1c:	mov    DWORD PTR [esp+0x4],ebp
  402a20:	mov    DWORD PTR [esp],eax
  402a23:	call   0x4082e8
  402a28:	test   eax,eax
  402a2a:	jne    0x402a08
  402a2c:	mov    DWORD PTR [esp],ebp
  402a2f:	call   0x4082f0
  402a34:	cmp    eax,edi
  402a36:	je     0x402b00
  402a3c:	cmp    edi,0x1
  402a3f:	je     0x402a00
  402a41:	mov    eax,DWORD PTR [esp+0x20]
  402a45:	cmp    eax,0xffffffff
  402a48:	je     0x402ac0
  402a4a:	shl    eax,0x4
  402a4d:	add    eax,DWORD PTR [esp+0x24]
  402a51:	mov    edx,DWORD PTR [eax+0x4]
  402a54:	cmp    DWORD PTR [ebx+0x4],edx
  402a57:	je     0x402ad0
  402a59:	add    ebx,0x10
  402a5c:	mov    ebp,DWORD PTR [ebx]
  402a5e:	add    esi,0x1
  402a61:	mov    DWORD PTR [esp+0x28],0x1
  402a69:	test   ebp,ebp
  402a6b:	jne    0x402a14
  402a6d:	lea    esi,[esi+0x0]
  402a70:	mov    ebx,DWORD PTR [esp+0x28]
  402a74:	test   ebx,ebx
  402a76:	je     0x402af1
  402a78:	mov    ecx,DWORD PTR ds:0x409030
  402a7e:	test   ecx,ecx
  402a80:	je     0x402aa3
  402a82:	mov    eax,DWORD PTR [esp+0x30]
  402a86:	cmp    BYTE PTR [eax],0x3a
  402a89:	je     0x402aa3
  402a8b:	mov    eax,DWORD PTR [esp+0x1c]
  402a8f:	mov    DWORD PTR [esp+0x4],edi
  402a93:	mov    DWORD PTR [esp],0x40a468
  402a9a:	mov    DWORD PTR [esp+0x8],eax
  402a9e:	call   0x402910
  402aa3:	mov    DWORD PTR ds:0x409028,0x0
  402aad:	mov    eax,0x3f
  402ab2:	add    esp,0x4c
  402ab5:	pop    ebx
  402ab6:	pop    esi
  402ab7:	pop    edi
  402ab8:	pop    ebp
  402ab9:	ret    
  402aba:	lea    esi,[esi+0x0]
  402ac0:	mov    DWORD PTR [esp+0x20],esi
  402ac4:	jmp    0x402a08
  402ac9:	lea    esi,[esi+eiz*1+0x0]
  402ad0:	mov    edx,DWORD PTR [eax+0x8]
  402ad3:	cmp    DWORD PTR [ebx+0x8],edx
  402ad6:	jne    0x402a59
  402ad8:	mov    eax,DWORD PTR [eax+0xc]
  402adb:	cmp    DWORD PTR [ebx+0xc],eax
  402ade:	mov    eax,0x1
  402ae3:	cmove  eax,DWORD PTR [esp+0x28]
  402ae8:	mov    DWORD PTR [esp+0x28],eax
  402aec:	jmp    0x402a08
  402af1:	mov    eax,DWORD PTR [esp+0x20]
  402af5:	cmp    eax,0xffffffff
  402af8:	je     0x402bb6
  402afe:	mov    esi,eax
  402b00:	mov    ebx,esi
  402b02:	mov    edx,DWORD PTR [esp+0x2c]
  402b06:	shl    ebx,0x4
  402b09:	add    ebx,DWORD PTR [esp+0x24]
  402b0d:	test   edx,edx
  402b0f:	setne  cl
  402b12:	mov    eax,DWORD PTR [ebx+0x4]
  402b15:	je     0x402b86
  402b17:	test   eax,eax
  402b19:	jne    0x402b86
  402b1b:	mov    eax,ds:0x409030
  402b20:	test   eax,eax
  402b22:	jne    0x402b50
  402b24:	mov    ebp,DWORD PTR [ebx+0x8]
  402b27:	test   ebp,ebp
  402b29:	je     0x402c77
  402b2f:	mov    DWORD PTR ds:0x409028,0x0
  402b39:	mov    eax,DWORD PTR [esp+0x30]
  402b3d:	cmp    BYTE PTR [eax],0x3a
  402b40:	je     0x402c65
  402b46:	mov    eax,0x3f
  402b4b:	jmp    0x402ab2
  402b50:	mov    eax,DWORD PTR [esp+0x30]
  402b54:	cmp    BYTE PTR [eax],0x3a
  402b57:	je     0x402b24
  402b59:	mov    eax,DWORD PTR [esp+0x1c]
  402b5d:	mov    DWORD PTR [esp+0x4],edi
  402b61:	mov    DWORD PTR [esp],0x40a440
  402b68:	mov    DWORD PTR [esp+0x8],eax
  402b6c:	call   0x402910
  402b71:	jmp    0x402b24
  402b73:	mov    eax,DWORD PTR [esp+0x1c]
  402b77:	mov    DWORD PTR [esp],eax
  402b7a:	call   0x4082f0
  402b7f:	mov    edi,eax
  402b81:	jmp    0x4029dc
  402b86:	lea    edx,[eax-0x1]
  402b89:	cmp    edx,0x1
  402b8c:	jbe    0x402bf6
  402b8e:	mov    eax,DWORD PTR [esp+0x60]
  402b92:	test   eax,eax
  402b94:	je     0x402b9c
  402b96:	mov    eax,DWORD PTR [esp+0x60]
  402b9a:	mov    DWORD PTR [eax],esi
  402b9c:	mov    eax,DWORD PTR [ebx+0x8]
  402b9f:	test   eax,eax
  402ba1:	je     0x402c6f
  402ba7:	mov    edx,DWORD PTR [ebx+0xc]
  402baa:	mov    DWORD PTR [eax],edx
  402bac:	add    esp,0x4c
  402baf:	xor    eax,eax
  402bb1:	pop    ebx
  402bb2:	pop    esi
  402bb3:	pop    edi
  402bb4:	pop    ebp
  402bb5:	ret    
  402bb6:	mov    ecx,DWORD PTR [esp+0x64]
  402bba:	test   ecx,ecx
  402bbc:	jne    0x402cb8
  402bc2:	mov    edx,DWORD PTR ds:0x409030
  402bc8:	test   edx,edx
  402bca:	je     0x402aa3
  402bd0:	mov    eax,DWORD PTR [esp+0x30]
  402bd4:	cmp    BYTE PTR [eax],0x3a
  402bd7:	je     0x402aa3
  402bdd:	mov    eax,DWORD PTR [esp+0x1c]
  402be1:	mov    DWORD PTR [esp],0x40a416
  402be8:	mov    DWORD PTR [esp+0x4],eax
  402bec:	call   0x402910
  402bf1:	jmp    0x402aa3
  402bf6:	test   cl,cl
  402bf8:	je     0x402c84
  402bfe:	mov    ecx,DWORD PTR [esp+0x2c]
  402c02:	cmp    eax,0x1
  402c05:	mov    DWORD PTR ds:0x40be40,ecx
  402c0b:	jne    0x402b8e
  402c0d:	mov    eax,DWORD PTR [esp+0x2c]
  402c11:	test   eax,eax
  402c13:	jne    0x402b8e
  402c19:	mov    edi,DWORD PTR ds:0x409030
  402c1f:	test   edi,edi
  402c21:	je     0x402c40
  402c23:	mov    eax,DWORD PTR [esp+0x30]
  402c27:	cmp    BYTE PTR [eax],0x3a
  402c2a:	je     0x402c40
  402c2c:	mov    eax,DWORD PTR [esp+0x1c]
  402c30:	mov    DWORD PTR [esp],0x40a4a0
  402c37:	mov    DWORD PTR [esp+0x4],eax
  402c3b:	call   0x402910
  402c40:	mov    esi,DWORD PTR [ebx+0x8]
  402c43:	test   esi,esi
  402c45:	je     0x402cae
  402c47:	mov    DWORD PTR ds:0x409028,0x0
  402c51:	mov    eax,DWORD PTR [esp+0x30]
  402c55:	sub    DWORD PTR ds:0x40902c,0x1
  402c5c:	cmp    BYTE PTR [eax],0x3a
  402c5f:	jne    0x402b46
  402c65:	mov    eax,0x3a
  402c6a:	jmp    0x402ab2
  402c6f:	mov    eax,DWORD PTR [ebx+0xc]
  402c72:	jmp    0x402ab2
  402c77:	mov    eax,DWORD PTR [ebx+0xc]
  402c7a:	mov    ds:0x409028,eax
  402c7f:	jmp    0x402b39
  402c84:	cmp    eax,0x1
  402c87:	jne    0x402b8e
  402c8d:	mov    eax,DWORD PTR [esp+0x34]
  402c91:	mov    ecx,DWORD PTR [esp+0x38]
  402c95:	add    eax,0x2
  402c98:	mov    ds:0x40902c,eax
  402c9d:	mov    eax,DWORD PTR [esp+0x3c]
  402ca1:	mov    eax,DWORD PTR [eax+ecx*4]
  402ca4:	mov    ds:0x40be40,eax
  402ca9:	jmp    0x402c11
  402cae:	mov    eax,DWORD PTR [ebx+0xc]
  402cb1:	mov    ds:0x409028,eax
  402cb6:	jmp    0x402c51
  402cb8:	mov    eax,DWORD PTR [esp+0x34]
  402cbc:	mov    ds:0x40902c,eax
  402cc1:	mov    eax,0xffffffff
  402cc6:	jmp    0x402ab2
  402ccb:	nop
  402ccc:	lea    esi,[esi+eiz*1+0x0]
  402cd0:	push   ebp
  402cd1:	push   edi
  402cd2:	push   esi
  402cd3:	push   ebx
  402cd4:	sub    esp,0x3c
  402cd7:	test   ecx,ecx
  402cd9:	mov    DWORD PTR [esp+0x1c],eax
  402cdd:	mov    DWORD PTR [esp+0x2c],ecx
  402ce1:	je     0x402f97
  402ce7:	mov    eax,ds:0x40902c
  402cec:	mov    ebp,edx
  402cee:	test   eax,eax
  402cf0:	je     0x402f30
  402cf6:	cmp    DWORD PTR ds:0x409018,0xffffffff
  402cfd:	je     0x402eb0
  402d03:	mov    eax,ds:0x40be44
  402d08:	test   eax,eax
  402d0a:	jne    0x402eb0
  402d10:	mov    edi,DWORD PTR [esp+0x2c]
  402d14:	movzx  edx,BYTE PTR [edi]
  402d17:	cmp    dl,0x2d
  402d1a:	je     0x402ede
  402d20:	cmp    dl,0x2b
  402d23:	je     0x402fa4
  402d29:	mov    edi,DWORD PTR ds:0x409018
  402d2f:	test   edi,edi
  402d31:	jne    0x402fa4
  402d37:	sub    edx,0x2b
  402d3a:	and    edx,0xfd
  402d40:	je     0x402ee3
  402d46:	test   eax,eax
  402d48:	mov    DWORD PTR ds:0x40be40,0x0
  402d52:	jne    0x402f10
  402d58:	mov    esi,DWORD PTR [esp+0x58]
  402d5c:	mov    edi,DWORD PTR [esp+0x58]
  402d60:	and    esi,0x1
  402d63:	and    edi,0x2
  402d66:	mov    DWORD PTR [esp+0x20],esi
  402d6a:	jmp    0x402dde
  402d6c:	lea    esi,[esi+eiz*1+0x0]
  402d70:	test   edi,edi
  402d72:	mov    DWORD PTR ds:0x409024,0x40a415
  402d7c:	mov    eax,edi
  402d7e:	jne    0x403053
  402d84:	mov    esi,DWORD PTR [esp+0x20]
  402d88:	test   esi,esi
  402d8a:	je     0x402f97
  402d90:	mov    ebx,DWORD PTR ds:0x409020
  402d96:	cmp    ebx,0xffffffff
  402d99:	je     0x402f00
  402d9f:	mov    esi,DWORD PTR ds:0x40901c
  402da5:	cmp    esi,0xffffffff
  402da8:	je     0x402dd5
  402daa:	mov    eax,ebx
  402dac:	mov    edx,esi
  402dae:	mov    DWORD PTR [esp],ebp
  402db1:	call   0x402860
  402db6:	mov    edx,DWORD PTR ds:0x40902c
  402dbc:	sub    ebx,esi
  402dbe:	mov    eax,ds:0x40be44
  402dc3:	mov    DWORD PTR ds:0x40901c,0xffffffff
  402dcd:	add    ebx,edx
  402dcf:	mov    DWORD PTR ds:0x409020,ebx
  402dd5:	add    edx,0x1
  402dd8:	mov    DWORD PTR ds:0x40902c,edx
  402dde:	test   eax,eax
  402de0:	jne    0x402df3
  402de2:	mov    esi,DWORD PTR ds:0x409024
  402de8:	movsx  eax,BYTE PTR [esi]
  402deb:	test   al,al
  402ded:	jne    0x402fd9
  402df3:	mov    ecx,DWORD PTR ds:0x40902c
  402df9:	cmp    ecx,DWORD PTR [esp+0x1c]
  402dfd:	mov    DWORD PTR ds:0x40be44,0x0
  402e07:	mov    edx,ecx
  402e09:	jge    0x402f50
  402e0f:	mov    ebx,DWORD PTR [ebp+ecx*4+0x0]
  402e13:	cmp    BYTE PTR [ebx],0x2d
  402e16:	mov    DWORD PTR ds:0x409024,ebx
  402e1c:	jne    0x402d70
  402e22:	movsx  eax,BYTE PTR [ebx+0x1]
  402e26:	mov    DWORD PTR [esp+0x24],ecx
  402e2a:	test   al,al
  402e2c:	jne    0x402fae
  402e32:	mov    eax,DWORD PTR [esp+0x2c]
  402e36:	mov    DWORD PTR [esp+0x4],0x2d
  402e3e:	mov    DWORD PTR [esp+0x28],ecx
  402e42:	mov    DWORD PTR [esp],eax
  402e45:	call   0x408300
  402e4a:	test   eax,eax
  402e4c:	mov    ecx,DWORD PTR [esp+0x28]
  402e50:	mov    edx,DWORD PTR [esp+0x24]
  402e54:	je     0x402d70
  402e5a:	cmp    DWORD PTR ds:0x409020,0xffffffff
  402e61:	mov    esi,ebx
  402e63:	je     0x402e7d
  402e65:	cmp    DWORD PTR ds:0x40901c,0xffffffff
  402e6c:	mov    eax,0x2d
  402e71:	jne    0x402fd9
  402e77:	mov    DWORD PTR ds:0x40901c,ecx
  402e7d:	mov    eax,DWORD PTR [esp+0x50]
  402e81:	test   eax,eax
  402e83:	je     0x403223
  402e89:	cmp    esi,DWORD PTR [ebp+ecx*4+0x0]
  402e8d:	mov    eax,0x2d
  402e92:	je     0x403090
  402e98:	add    esi,0x1
  402e9b:	xor    edx,edx
  402e9d:	mov    DWORD PTR ds:0x409024,esi
  402ea3:	jmp    0x403025
  402ea8:	nop
  402ea9:	lea    esi,[esi+eiz*1+0x0]
  402eb0:	mov    DWORD PTR [esp],0x40a405
  402eb7:	call   0x408330
  402ebc:	mov    edi,DWORD PTR [esp+0x2c]
  402ec0:	test   eax,eax
  402ec2:	setne  al
  402ec5:	movzx  eax,al
  402ec8:	movzx  edx,BYTE PTR [edi]
  402ecb:	mov    ds:0x409018,eax
  402ed0:	mov    eax,ds:0x40be44
  402ed5:	cmp    dl,0x2d
  402ed8:	jne    0x402d20
  402ede:	or     DWORD PTR [esp+0x58],0x2
  402ee3:	add    DWORD PTR [esp+0x2c],0x1
  402ee8:	test   eax,eax
  402eea:	mov    DWORD PTR ds:0x40be40,0x0
  402ef4:	je     0x402d58
  402efa:	jmp    0x402f10
  402efc:	lea    esi,[esi+eiz*1+0x0]
  402f00:	mov    DWORD PTR ds:0x409020,ecx
  402f06:	jmp    0x402dd5
  402f0b:	nop
  402f0c:	lea    esi,[esi+eiz*1+0x0]
  402f10:	mov    DWORD PTR ds:0x40901c,0xffffffff
  402f1a:	mov    DWORD PTR ds:0x409020,0xffffffff
  402f24:	jmp    0x402d58
  402f29:	lea    esi,[esi+eiz*1+0x0]
  402f30:	mov    DWORD PTR ds:0x40be44,0x1
  402f3a:	mov    DWORD PTR ds:0x40902c,0x1
  402f44:	jmp    0x402cf6
  402f49:	lea    esi,[esi+eiz*1+0x0]
  402f50:	mov    ebx,DWORD PTR ds:0x40901c
  402f56:	mov    DWORD PTR ds:0x409024,0x40a415
  402f60:	cmp    ebx,0xffffffff
  402f63:	je     0x40306f
  402f69:	mov    esi,DWORD PTR ds:0x409020
  402f6f:	mov    DWORD PTR [esp],ebp
  402f72:	mov    edx,ebx
  402f74:	mov    eax,esi
  402f76:	sub    esi,ebx
  402f78:	call   0x402860
  402f7d:	add    DWORD PTR ds:0x40902c,esi
  402f83:	mov    DWORD PTR ds:0x40901c,0xffffffff
  402f8d:	mov    DWORD PTR ds:0x409020,0xffffffff
  402f97:	mov    eax,0xffffffff
  402f9c:	add    esp,0x3c
  402f9f:	pop    ebx
  402fa0:	pop    esi
  402fa1:	pop    edi
  402fa2:	pop    ebp
  402fa3:	ret    
  402fa4:	and    DWORD PTR [esp+0x58],0xfffffffe
  402fa9:	jmp    0x402d37
  402fae:	mov    edi,DWORD PTR ds:0x409020
  402fb4:	cmp    edi,0xffffffff
  402fb7:	je     0x402fc8
  402fb9:	cmp    DWORD PTR ds:0x40901c,0xffffffff
  402fc0:	jne    0x402fc8
  402fc2:	mov    DWORD PTR ds:0x40901c,ecx
  402fc8:	lea    esi,[ebx+0x1]
  402fcb:	cmp    al,0x2d
  402fcd:	mov    DWORD PTR ds:0x409024,esi
  402fd3:	je     0x40316b
  402fd9:	mov    ebx,DWORD PTR [esp+0x50]
  402fdd:	test   ebx,ebx
  402fdf:	je     0x403090
  402fe5:	mov    edx,DWORD PTR ds:0x40902c
  402feb:	cmp    esi,DWORD PTR [ebp+edx*4+0x0]
  402fef:	je     0x403090
  402ff5:	cmp    al,0x2d
  402ff7:	je     0x402e98
  402ffd:	test   BYTE PTR [esp+0x58],0x4
  403002:	je     0x403090
  403008:	xor    edx,edx
  40300a:	cmp    al,0x3a
  40300c:	je     0x403025
  40300e:	mov    DWORD PTR [esp+0x4],eax
  403012:	mov    eax,DWORD PTR [esp+0x2c]
  403016:	mov    DWORD PTR [esp],eax
  403019:	call   0x408300
  40301e:	xor    edx,edx
  403020:	test   eax,eax
  403022:	setne  dl
  403025:	mov    eax,DWORD PTR [esp+0x54]
  403029:	mov    DWORD PTR [esp+0x4],edx
  40302d:	mov    ecx,DWORD PTR [esp+0x50]
  403031:	mov    edx,DWORD PTR [esp+0x2c]
  403035:	mov    DWORD PTR [esp],eax
  403038:	mov    eax,ebp
  40303a:	call   0x402980
  40303f:	cmp    eax,0xffffffff
  403042:	je     0x403087
  403044:	mov    DWORD PTR ds:0x409024,0x40a415
  40304e:	jmp    0x402f9c
  403053:	add    ecx,0x1
  403056:	mov    DWORD PTR ds:0x40be40,ebx
  40305c:	mov    eax,0x1
  403061:	mov    DWORD PTR ds:0x40902c,ecx
  403067:	add    esp,0x3c
  40306a:	pop    ebx
  40306b:	pop    esi
  40306c:	pop    edi
  40306d:	pop    ebp
  40306e:	ret    
  40306f:	mov    eax,ds:0x409020
  403074:	cmp    eax,0xffffffff
  403077:	je     0x402f83
  40307d:	mov    ds:0x40902c,eax
  403082:	jmp    0x402f83
  403087:	mov    esi,DWORD PTR ds:0x409024
  40308d:	movzx  eax,BYTE PTR [esi]
  403090:	lea    edi,[esi+0x1]
  403093:	movsx  ebx,al
  403096:	cmp    ebx,0x3a
  403099:	mov    DWORD PTR ds:0x409024,edi
  40309f:	je     0x403101
  4030a1:	cmp    ebx,0x2d
  4030a4:	je     0x40322c
  4030aa:	mov    eax,DWORD PTR [esp+0x2c]
  4030ae:	mov    DWORD PTR [esp+0x4],ebx
  4030b2:	mov    DWORD PTR [esp],eax
  4030b5:	call   0x408300
  4030ba:	test   eax,eax
  4030bc:	je     0x403101
  4030be:	cmp    ebx,0x57
  4030c1:	jne    0x403162
  4030c7:	mov    edx,DWORD PTR [esp+0x50]
  4030cb:	test   edx,edx
  4030cd:	je     0x403162
  4030d3:	movzx  edx,BYTE PTR [eax+0x1]
  4030d7:	cmp    dl,0x3b
  4030da:	je     0x4031b0
  4030e0:	cmp    dl,0x3a
  4030e3:	je     0x403240
  4030e9:	cmp    BYTE PTR [esi+0x1],0x0
  4030ed:	mov    eax,ebx
  4030ef:	jne    0x402f9c
  4030f5:	add    DWORD PTR ds:0x40902c,0x1
  4030fc:	jmp    0x402f9c
  403101:	cmp    BYTE PTR [esi+0x1],0x0
  403105:	jne    0x40310e
  403107:	add    DWORD PTR ds:0x40902c,0x1
  40310e:	mov    ecx,DWORD PTR ds:0x409030
  403114:	test   ecx,ecx
  403116:	je     0x403131
  403118:	mov    eax,DWORD PTR [esp+0x2c]
  40311c:	cmp    BYTE PTR [eax],0x3a
  40311f:	je     0x403131
  403121:	mov    DWORD PTR [esp+0x4],ebx
  403125:	mov    DWORD PTR [esp],0x40a42b
  40312c:	call   0x402910
  403131:	mov    DWORD PTR ds:0x409028,ebx
  403137:	mov    eax,0x3f
  40313c:	jmp    0x402f9c
  403141:	mov    eax,DWORD PTR [esp+0x2c]
  403145:	mov    DWORD PTR [esp+0x4],0x2d
  40314d:	mov    DWORD PTR [esp],eax
  403150:	call   0x408300
  403155:	test   eax,eax
  403157:	je     0x402f97
  40315d:	mov    ebx,0x2d
  403162:	movzx  edx,BYTE PTR [eax+0x1]
  403166:	jmp    0x4030e0
  40316b:	cmp    BYTE PTR [ebx+0x2],0x0
  40316f:	jne    0x402e7d
  403175:	mov    ebx,DWORD PTR ds:0x40901c
  40317b:	add    ecx,0x1
  40317e:	mov    DWORD PTR ds:0x409024,0x40a415
  403188:	mov    DWORD PTR ds:0x40902c,ecx
  40318e:	cmp    ebx,0xffffffff
  403191:	je     0x402f83
  403197:	mov    eax,edi
  403199:	mov    DWORD PTR [esp],ebp
  40319c:	mov    edx,ebx
  40319e:	call   0x402860
  4031a3:	sub    edi,ebx
  4031a5:	add    DWORD PTR ds:0x40902c,edi
  4031ab:	jmp    0x402f83
  4031b0:	cmp    BYTE PTR [esi+0x1],0x0
  4031b4:	jne    0x4032e0
  4031ba:	mov    eax,ds:0x40902c
  4031bf:	add    eax,0x1
  4031c2:	cmp    DWORD PTR [esp+0x1c],eax
  4031c6:	mov    ds:0x40902c,eax
  4031cb:	jg     0x4032d7
  4031d1:	mov    ecx,DWORD PTR ds:0x409030
  4031d7:	mov    DWORD PTR ds:0x409024,0x40a415
  4031e1:	test   ecx,ecx
  4031e3:	je     0x403202
  4031e5:	mov    eax,DWORD PTR [esp+0x2c]
  4031e9:	cmp    BYTE PTR [eax],0x3a
  4031ec:	je     0x403202
  4031ee:	mov    DWORD PTR [esp+0x4],0x57
  4031f6:	mov    DWORD PTR [esp],0x40a4e0
  4031fd:	call   0x402910
  403202:	mov    eax,DWORD PTR [esp+0x2c]
  403206:	mov    DWORD PTR ds:0x409028,0x57
  403210:	cmp    BYTE PTR [eax],0x3a
  403213:	je     0x4032cd
  403219:	mov    eax,0x3f
  40321e:	jmp    0x402f9c
  403223:	lea    edi,[esi+0x1]
  403226:	mov    DWORD PTR ds:0x409024,edi
  40322c:	cmp    BYTE PTR [esi+0x1],0x0
  403230:	je     0x403141
  403236:	mov    ebx,0x2d
  40323b:	jmp    0x40310e
  403240:	mov    DWORD PTR ds:0x40be40,0x0
  40324a:	cmp    BYTE PTR [esi+0x1],0x0
  40324e:	je     0x403274
  403250:	mov    eax,ds:0x40902c
  403255:	mov    DWORD PTR ds:0x40be40,edi
  40325b:	add    eax,0x1
  40325e:	mov    DWORD PTR ds:0x409024,0x40a415
  403268:	mov    ds:0x40902c,eax
  40326d:	mov    eax,ebx
  40326f:	jmp    0x402f9c
  403274:	cmp    BYTE PTR [eax+0x2],0x3a
  403278:	mov    eax,ds:0x40902c
  40327d:	je     0x40325b
  40327f:	add    eax,0x1
  403282:	cmp    DWORD PTR [esp+0x1c],eax
  403286:	mov    ds:0x40902c,eax
  40328b:	jg     0x403303
  40328d:	mov    edx,DWORD PTR ds:0x409030
  403293:	mov    DWORD PTR ds:0x409024,0x40a415
  40329d:	test   edx,edx
  40329f:	je     0x4032ba
  4032a1:	mov    eax,DWORD PTR [esp+0x2c]
  4032a5:	cmp    BYTE PTR [eax],0x3a
  4032a8:	je     0x4032ba
  4032aa:	mov    DWORD PTR [esp+0x4],ebx
  4032ae:	mov    DWORD PTR [esp],0x40a4e0
  4032b5:	call   0x402910
  4032ba:	mov    eax,DWORD PTR [esp+0x2c]
  4032be:	mov    DWORD PTR ds:0x409028,ebx
  4032c4:	cmp    BYTE PTR [eax],0x3a
  4032c7:	jne    0x403219
  4032cd:	mov    eax,0x3a
  4032d2:	jmp    0x402f9c
  4032d7:	mov    eax,DWORD PTR [ebp+eax*4+0x0]
  4032db:	mov    ds:0x409024,eax
  4032e0:	mov    eax,DWORD PTR [esp+0x54]
  4032e4:	mov    ecx,DWORD PTR [esp+0x50]
  4032e8:	mov    edx,DWORD PTR [esp+0x2c]
  4032ec:	mov    DWORD PTR [esp+0x4],0x0
  4032f4:	mov    DWORD PTR [esp],eax
  4032f7:	mov    eax,ebp
  4032f9:	call   0x402980
  4032fe:	jmp    0x403044
  403303:	mov    edx,DWORD PTR [ebp+eax*4+0x0]
  403307:	mov    DWORD PTR ds:0x40be40,edx
  40330d:	jmp    0x40325b
  403312:	lea    esi,[esi+eiz*1+0x0]
  403319:	lea    edi,[edi+eiz*1+0x0]
  403320:	mov    eax,DWORD PTR [esp+0x4]
  403324:	mov    edx,DWORD PTR [esp+0x8]
  403328:	mov    ecx,DWORD PTR [esp+0xc]
  40332c:	mov    DWORD PTR [esp+0x8],0x0
  403334:	mov    DWORD PTR [esp+0xc],0x0
  40333c:	mov    DWORD PTR [esp+0x4],0x0
  403344:	jmp    0x402cd0
  403349:	lea    esi,[esi+eiz*1+0x0]
  403350:	push   ebx
  403351:	mov    ebx,DWORD PTR [esp+0x18]
  403355:	mov    edx,DWORD PTR [esp+0xc]
  403359:	mov    eax,DWORD PTR [esp+0x8]
  40335d:	mov    ecx,DWORD PTR [esp+0x10]
  403361:	mov    DWORD PTR [esp+0x10],0x1
  403369:	mov    DWORD PTR [esp+0xc],ebx
  40336d:	mov    ebx,DWORD PTR [esp+0x14]
  403371:	mov    DWORD PTR [esp+0x8],ebx
  403375:	pop    ebx
  403376:	jmp    0x402cd0
  40337b:	nop
  40337c:	lea    esi,[esi+eiz*1+0x0]
  403380:	push   ebx
  403381:	mov    ebx,DWORD PTR [esp+0x18]
  403385:	mov    edx,DWORD PTR [esp+0xc]
  403389:	mov    eax,DWORD PTR [esp+0x8]
  40338d:	mov    ecx,DWORD PTR [esp+0x10]
  403391:	mov    DWORD PTR [esp+0x10],0x5
  403399:	mov    DWORD PTR [esp+0xc],ebx
  40339d:	mov    ebx,DWORD PTR [esp+0x14]
  4033a1:	mov    DWORD PTR [esp+0x8],ebx
  4033a5:	pop    ebx
  4033a6:	jmp    0x402cd0
  4033ab:	nop
  4033ac:	nop
  4033ad:	nop
  4033ae:	nop
  4033af:	nop
  4033b0:	sub    esp,0x2c
  4033b3:	mov    eax,DWORD PTR [esp+0x38]
  4033b7:	mov    DWORD PTR [esp+0x8],0x0
  4033bf:	mov    DWORD PTR [esp],0x6000
  4033c6:	mov    DWORD PTR [esp+0x10],eax
  4033ca:	mov    eax,DWORD PTR [esp+0x34]
  4033ce:	mov    DWORD PTR [esp+0xc],eax
  4033d2:	mov    eax,DWORD PTR [esp+0x30]
  4033d6:	mov    DWORD PTR [esp+0x4],eax
  4033da:	call   0x404ce0
  4033df:	add    esp,0x2c
  4033e2:	ret    
  4033e3:	nop
  4033e4:	nop
  4033e5:	nop
  4033e6:	nop
  4033e7:	nop
  4033e8:	nop
  4033e9:	nop
  4033ea:	nop
  4033eb:	nop
  4033ec:	nop
  4033ed:	nop
  4033ee:	nop
  4033ef:	nop
  4033f0:	sub    esp,0x2c
  4033f3:	mov    eax,DWORD PTR [esp+0x34]
  4033f7:	mov    DWORD PTR [esp+0x8],0x0
  4033ff:	mov    DWORD PTR [esp],0x6000
  403406:	mov    DWORD PTR [esp+0x10],eax
  40340a:	mov    eax,DWORD PTR [esp+0x30]
  40340e:	mov    DWORD PTR [esp+0xc],eax
  403412:	mov    eax,ds:0x40c21c
  403417:	add    eax,0x20
  40341a:	mov    DWORD PTR [esp+0x4],eax
  40341e:	call   0x404ce0
  403423:	add    esp,0x2c
  403426:	ret    
  403427:	nop
  403428:	nop
  403429:	nop
  40342a:	nop
  40342b:	nop
  40342c:	nop
  40342d:	nop
  40342e:	nop
  40342f:	nop
  403430:	push   ebx
  403431:	sub    esp,0x28
  403434:	mov    eax,DWORD PTR [esp+0x38]
  403438:	mov    ebx,DWORD PTR [esp+0x30]
  40343c:	mov    DWORD PTR [esp+0x8],0x0
  403444:	mov    DWORD PTR [esp],0x4000
  40344b:	mov    DWORD PTR [esp+0x10],eax
  40344f:	mov    eax,DWORD PTR [esp+0x34]
  403453:	mov    DWORD PTR [esp+0x4],ebx
  403457:	mov    DWORD PTR [esp+0xc],eax
  40345b:	call   0x404ce0
  403460:	mov    BYTE PTR [ebx+eax*1],0x0
  403464:	add    esp,0x28
  403467:	pop    ebx
  403468:	ret    
  403469:	nop
  40346a:	nop
  40346b:	nop
  40346c:	nop
  40346d:	nop
  40346e:	nop
  40346f:	nop
  403470:	push   ebx
  403471:	mov    ebx,eax
  403473:	sub    esp,0x48
  403476:	mov    eax,DWORD PTR [esp+0x50]
  40347a:	mov    DWORD PTR [esp+0x20],eax
  40347e:	mov    eax,DWORD PTR [esp+0x54]
  403482:	mov    DWORD PTR [esp+0x24],eax
  403486:	mov    eax,DWORD PTR [esp+0x58]
  40348a:	mov    DWORD PTR [esp+0x28],eax
  40348e:	mov    eax,DWORD PTR [esp+0x5c]
  403492:	fld    TBYTE PTR [esp+0x20]
  403496:	mov    DWORD PTR [esp+0x2c],eax
  40349a:	fxam   
  40349c:	fstsw  ax
  40349f:	fstp   st(0)
  4034a1:	test   ah,0x1
  4034a4:	je     0x4034c0
  4034a6:	test   ah,0x4
  4034a9:	je     0x403540
  4034af:	mov    DWORD PTR [esp+0x38],0x3
  4034b7:	movzx  edx,WORD PTR [esp+0x28]
  4034bc:	xor    ecx,ecx
  4034be:	jmp    0x4034d4
  4034c0:	test   ah,0x4
  4034c3:	jne    0x403521
  4034c5:	movzx  edx,WORD PTR [esp+0x28]
  4034ca:	mov    DWORD PTR [esp+0x38],0x0
  4034d2:	xor    ecx,ecx
  4034d4:	and    edx,0x8000
  4034da:	mov    eax,DWORD PTR [esp+0x68]
  4034de:	mov    DWORD PTR [eax],edx
  4034e0:	lea    eax,[esp+0x3c]
  4034e4:	mov    DWORD PTR [esp+0x10],ebx
  4034e8:	mov    DWORD PTR [esp+0x4],ecx
  4034ec:	mov    DWORD PTR [esp],0x409038
  4034f3:	mov    DWORD PTR [esp+0x1c],eax
  4034f7:	mov    eax,DWORD PTR [esp+0x64]
  4034fb:	mov    DWORD PTR [esp+0x18],eax
  4034ff:	mov    eax,DWORD PTR [esp+0x60]
  403503:	mov    DWORD PTR [esp+0x14],eax
  403507:	lea    eax,[esp+0x38]
  40350b:	mov    DWORD PTR [esp+0xc],eax
  40350f:	lea    eax,[esp+0x20]
  403513:	mov    DWORD PTR [esp+0x8],eax
  403517:	call   0x405aa0
  40351c:	add    esp,0x48
  40351f:	pop    ebx
  403520:	ret    
  403521:	test   ah,0x40
  403524:	je     0x403550
  403526:	mov    DWORD PTR [esp+0x38],0x2
  40352e:	movzx  edx,WORD PTR [esp+0x28]
  403533:	mov    ecx,0xffffbfc3
  403538:	jmp    0x4034d4
  40353a:	lea    esi,[esi+0x0]
  403540:	mov    DWORD PTR [esp+0x38],0x4
  403548:	xor    ecx,ecx
  40354a:	xor    edx,edx
  40354c:	jmp    0x4034da
  40354e:	xchg   ax,ax
  403550:	movzx  edx,WORD PTR [esp+0x28]
  403555:	mov    DWORD PTR [esp+0x38],0x1
  40355d:	mov    ecx,edx
  40355f:	and    ecx,0x7fff
  403565:	sub    ecx,0x403e
  40356b:	jmp    0x4034d4
  403570:	push   ebx
  403571:	sub    esp,0x28
  403574:	mov    ebx,DWORD PTR [edx+0x4]
  403577:	test   bh,0x40
  40357a:	jne    0x403584
  40357c:	mov    ecx,DWORD PTR [edx+0x20]
  40357f:	cmp    DWORD PTR [edx+0x24],ecx
  403582:	jle    0x403594
  403584:	and    bh,0x20
  403587:	jne    0x4035a0
  403589:	mov    ecx,DWORD PTR [edx+0x20]
  40358c:	mov    ebx,DWORD PTR [edx]
  40358e:	mov    BYTE PTR [ebx+ecx*1],al
  403591:	mov    ecx,DWORD PTR [edx+0x20]
  403594:	add    ecx,0x1
  403597:	mov    DWORD PTR [edx+0x20],ecx
  40359a:	add    esp,0x28
  40359d:	pop    ebx
  40359e:	ret    
  40359f:	nop
  4035a0:	mov    ecx,DWORD PTR [edx]
  4035a2:	mov    DWORD PTR [esp],eax
  4035a5:	mov    DWORD PTR [esp+0x1c],edx
  4035a9:	mov    DWORD PTR [esp+0x4],ecx
  4035ad:	call   0x408348
  4035b2:	mov    edx,DWORD PTR [esp+0x1c]
  4035b6:	mov    ecx,DWORD PTR [edx+0x20]
  4035b9:	add    ecx,0x1
  4035bc:	mov    DWORD PTR [edx+0x20],ecx
  4035bf:	add    esp,0x28
  4035c2:	pop    ebx
  4035c3:	ret    
  4035c4:	lea    esi,[esi+0x0]
  4035ca:	lea    edi,[edi+0x0]
  4035d0:	push   ebp
  4035d1:	push   edi
  4035d2:	push   esi
  4035d3:	push   ebx
  4035d4:	mov    ebx,ecx
  4035d6:	sub    esp,0x4c
  4035d9:	mov    DWORD PTR [esp+0x18],eax
  4035dd:	lea    ebp,[esp+0x30]
  4035e1:	lea    eax,[esp+0x2c]
  4035e5:	mov    DWORD PTR [esp+0x4],0x0
  4035ed:	mov    DWORD PTR [esp+0x1c],edx
  4035f1:	mov    DWORD PTR [esp+0x8],eax
  4035f5:	mov    DWORD PTR [esp],ebp
  4035f8:	call   0x408140
  4035fd:	mov    esi,DWORD PTR [ebx+0xc]
  403600:	mov    edx,DWORD PTR [esp+0x1c]
  403604:	cmp    esi,edx
  403606:	jge    0x4036b1
  40360c:	test   esi,esi
  40360e:	js     0x4036b1
  403614:	mov    eax,DWORD PTR [ebx+0x8]
  403617:	cmp    esi,eax
  403619:	jge    0x4036be
  40361f:	sub    eax,esi
  403621:	test   eax,eax
  403623:	mov    DWORD PTR [ebx+0x8],eax
  403626:	jle    0x403632
  403628:	test   BYTE PTR [ebx+0x5],0x4
  40362c:	je     0x4036ca
  403632:	mov    DWORD PTR [esp+0x1c],esi
  403636:	lea    esi,[esi+0x0]
  403639:	lea    edi,[edi+eiz*1+0x0]
  403640:	mov    eax,DWORD PTR [esp+0x1c]
  403644:	test   eax,eax
  403646:	jle    0x40369c
  403648:	add    DWORD PTR [esp+0x18],0x2
  40364d:	lea    ecx,[esp+0x2c]
  403651:	mov    eax,DWORD PTR [esp+0x18]
  403655:	mov    DWORD PTR [esp+0x8],ecx
  403659:	movzx  eax,WORD PTR [eax-0x2]
  40365d:	mov    DWORD PTR [esp],ebp
  403660:	mov    DWORD PTR [esp+0x4],eax
  403664:	call   0x408140
  403669:	test   eax,eax
  40366b:	jle    0x40369c
  40366d:	lea    esi,[ebp+eax*1+0x0]
  403671:	mov    edi,ebp
  403673:	add    edi,0x1
  403676:	movsx  eax,BYTE PTR [edi-0x1]
  40367a:	mov    edx,ebx
  40367c:	call   0x403570
  403681:	cmp    edi,esi
  403683:	jne    0x403673
  403685:	sub    DWORD PTR [esp+0x1c],0x1
  40368a:	jmp    0x403640
  40368c:	lea    esi,[esi+eiz*1+0x0]
  403690:	mov    edx,ebx
  403692:	mov    eax,0x20
  403697:	call   0x403570
  40369c:	mov    eax,DWORD PTR [ebx+0x8]
  40369f:	lea    edx,[eax-0x1]
  4036a2:	test   eax,eax
  4036a4:	mov    DWORD PTR [ebx+0x8],edx
  4036a7:	jg     0x403690
  4036a9:	add    esp,0x4c
  4036ac:	pop    ebx
  4036ad:	pop    esi
  4036ae:	pop    edi
  4036af:	pop    ebp
  4036b0:	ret    
  4036b1:	mov    eax,DWORD PTR [ebx+0x8]
  4036b4:	mov    esi,edx
  4036b6:	cmp    esi,eax
  4036b8:	jl     0x40361f
  4036be:	mov    DWORD PTR [ebx+0x8],0xffffffff
  4036c5:	jmp    0x403632
  4036ca:	sub    eax,0x1
  4036cd:	mov    DWORD PTR [ebx+0x8],eax
  4036d0:	mov    edx,ebx
  4036d2:	mov    eax,0x20
  4036d7:	call   0x403570
  4036dc:	mov    eax,DWORD PTR [ebx+0x8]
  4036df:	lea    edx,[eax-0x1]
  4036e2:	test   eax,eax
  4036e4:	mov    DWORD PTR [ebx+0x8],edx
  4036e7:	jne    0x4036d0
  4036e9:	jmp    0x403632
  4036ee:	xchg   ax,ax
  4036f0:	push   ebp
  4036f1:	push   edi
  4036f2:	push   esi
  4036f3:	push   ebx
  4036f4:	mov    esi,eax
  4036f6:	mov    ebx,ecx
  4036f8:	sub    esp,0xc
  4036fb:	mov    ebp,DWORD PTR [ecx+0xc]
  4036fe:	cmp    ebp,edx
  403700:	jge    0x4037b1
  403706:	test   ebp,ebp
  403708:	js     0x4037b1
  40370e:	mov    eax,DWORD PTR [ebx+0x8]
  403711:	cmp    ebp,eax
  403713:	jge    0x4037be
  403719:	sub    eax,ebp
  40371b:	test   eax,eax
  40371d:	mov    DWORD PTR [ebx+0x8],eax
  403720:	jle    0x4037e4
  403726:	test   BYTE PTR [ebx+0x5],0x4
  40372a:	jne    0x4037d5
  403730:	sub    eax,0x1
  403733:	mov    DWORD PTR [ebx+0x8],eax
  403736:	lea    esi,[esi+0x0]
  403739:	lea    edi,[edi+eiz*1+0x0]
  403740:	mov    edx,ebx
  403742:	mov    eax,0x20
  403747:	call   0x403570
  40374c:	mov    eax,DWORD PTR [ebx+0x8]
  40374f:	lea    edx,[eax-0x1]
  403752:	test   eax,eax
  403754:	mov    DWORD PTR [ebx+0x8],edx
  403757:	jne    0x403740
  403759:	test   ebp,ebp
  40375b:	lea    edi,[ebp-0x1]
  40375e:	je     0x40379c
  403760:	mov    ebp,esi
  403762:	add    ebp,0x1
  403765:	movsx  eax,BYTE PTR [ebp-0x1]
  403769:	mov    edx,ebx
  40376b:	call   0x403570
  403770:	mov    eax,0x1
  403775:	sub    eax,ebp
  403777:	add    eax,edi
  403779:	add    eax,esi
  40377b:	jne    0x403762
  40377d:	mov    eax,DWORD PTR [ebx+0x8]
  403780:	lea    edx,[eax-0x1]
  403783:	test   eax,eax
  403785:	mov    DWORD PTR [ebx+0x8],edx
  403788:	jle    0x4037a9
  40378a:	lea    esi,[esi+0x0]
  403790:	mov    edx,ebx
  403792:	mov    eax,0x20
  403797:	call   0x403570
  40379c:	mov    eax,DWORD PTR [ebx+0x8]
  40379f:	lea    edx,[eax-0x1]
  4037a2:	test   eax,eax
  4037a4:	mov    DWORD PTR [ebx+0x8],edx
  4037a7:	jg     0x403790
  4037a9:	add    esp,0xc
  4037ac:	pop    ebx
  4037ad:	pop    esi
  4037ae:	pop    edi
  4037af:	pop    ebp
  4037b0:	ret    
  4037b1:	mov    eax,DWORD PTR [ebx+0x8]
  4037b4:	mov    ebp,edx
  4037b6:	cmp    ebp,eax
  4037b8:	jl     0x403719
  4037be:	test   ebp,ebp
  4037c0:	mov    DWORD PTR [ebx+0x8],0xffffffff
  4037c7:	lea    edi,[ebp-0x1]
  4037ca:	jne    0x403760
  4037cc:	mov    DWORD PTR [ebx+0x8],0xfffffffe
  4037d3:	jmp    0x4037a9
  4037d5:	test   ebp,ebp
  4037d7:	lea    edi,[ebp-0x1]
  4037da:	jne    0x403760
  4037dc:	sub    eax,0x1
  4037df:	mov    DWORD PTR [ebx+0x8],eax
  4037e2:	jmp    0x403790
  4037e4:	test   ebp,ebp
  4037e6:	lea    edi,[ebp-0x1]
  4037e9:	jne    0x403760
  4037ef:	sub    eax,0x1
  4037f2:	mov    DWORD PTR [ebx+0x8],eax
  4037f5:	jmp    0x4037a9
  4037f7:	mov    esi,esi
  4037f9:	lea    edi,[edi+eiz*1+0x0]
  403800:	push   ebp
  403801:	push   edi
  403802:	push   esi
  403803:	push   ebx
  403804:	sub    esp,0x1c
  403807:	test   eax,eax
  403809:	mov    DWORD PTR [ecx+0xc],0xffffffff
  403810:	je     0x403850
  403812:	mov    ebp,DWORD PTR [ecx+0x4]
  403815:	lea    edi,[esp+0xd]
  403819:	lea    eax,[esp+0xc]
  40381d:	mov    BYTE PTR [esp+0xc],0x2d
  403822:	and    ebp,0x20
  403825:	xor    esi,esi
  403827:	movzx  ebx,BYTE PTR [edx+esi*1]
  40382b:	and    ebx,0xffffffdf
  40382e:	or     ebx,ebp
  403830:	mov    BYTE PTR [edi+esi*1],bl
  403833:	add    esi,0x1
  403836:	cmp    esi,0x3
  403839:	jne    0x403827
  40383b:	lea    edx,[edi+0x3]
  40383e:	sub    edx,eax
  403840:	call   0x4036f0
  403845:	add    esp,0x1c
  403848:	pop    ebx
  403849:	pop    esi
  40384a:	pop    edi
  40384b:	pop    ebp
  40384c:	ret    
  40384d:	lea    esi,[esi+0x0]
  403850:	mov    ebp,DWORD PTR [ecx+0x4]
  403853:	test   ebp,0x100
  403859:	je     0x403870
  40385b:	mov    BYTE PTR [esp+0xc],0x2b
  403860:	lea    edi,[esp+0xd]
  403864:	lea    eax,[esp+0xc]
  403868:	jmp    0x403822
  40386a:	lea    esi,[esi+0x0]
  403870:	test   ebp,0x40
  403876:	je     0x403890
  403878:	mov    BYTE PTR [esp+0xc],0x20
  40387d:	lea    edi,[esp+0xd]
  403881:	lea    eax,[esp+0xc]
  403885:	jmp    0x403822
  403887:	mov    esi,esi
  403889:	lea    edi,[edi+eiz*1+0x0]
  403890:	lea    eax,[esp+0xc]
  403894:	mov    edi,eax
  403896:	jmp    0x403822
  403898:	nop
  403899:	lea    esi,[esi+eiz*1+0x0]
  4038a0:	push   ebp
  4038a1:	mov    ebp,esp
  4038a3:	push   edi
  4038a4:	push   esi
  4038a5:	push   ebx
  4038a6:	mov    ebx,eax
  4038a8:	mov    edi,ecx
  4038aa:	mov    esi,edx
  4038ac:	sub    esp,0x3c
  4038af:	mov    DWORD PTR [ebp-0x20],eax
  4038b2:	mov    eax,DWORD PTR [ecx+0xc]
  4038b5:	mov    ecx,0x0
  4038ba:	mov    DWORD PTR [ebp-0x1c],edx
  4038bd:	test   eax,eax
  4038bf:	mov    DWORD PTR [ebp-0x34],eax
  4038c2:	cmovns ecx,eax
  4038c5:	mov    eax,DWORD PTR [edi+0x4]
  4038c8:	add    ecx,0x17
  4038cb:	test   ah,0x10
  4038ce:	mov    DWORD PTR [ebp-0x2c],eax
  4038d1:	je     0x4038de
  4038d3:	cmp    WORD PTR [edi+0x1c],0x0
  4038d8:	jne    0x403af2
  4038de:	mov    edx,DWORD PTR [edi+0x8]
  4038e1:	mov    eax,ecx
  4038e3:	cmp    ecx,edx
  4038e5:	mov    DWORD PTR [ebp-0x38],edx
  4038e8:	cmovl  eax,edx
  4038eb:	add    eax,0xf
  4038ee:	and    eax,0xfffffff0
  4038f1:	call   0x402830
  4038f6:	sub    esp,eax
  4038f8:	test   BYTE PTR [ebp-0x2c],0x80
  4038fc:	lea    eax,[esp+0x10]
  403900:	mov    DWORD PTR [ebp-0x24],eax
  403903:	je     0x40391d
  403905:	mov    eax,DWORD PTR [ebp-0x1c]
  403908:	test   eax,eax
  40390a:	js     0x403b80
  403910:	and    DWORD PTR [ebp-0x2c],0xffffff7f
  403917:	mov    eax,DWORD PTR [ebp-0x2c]
  40391a:	mov    DWORD PTR [edi+0x4],eax
  40391d:	mov    eax,esi
  40391f:	or     eax,ebx
  403921:	je     0x403b92
  403927:	mov    eax,DWORD PTR [ebp-0x24]
  40392a:	mov    DWORD PTR [ebp-0x30],edi
  40392d:	mov    ecx,eax
  40392f:	mov    eax,DWORD PTR [ebp-0x2c]
  403932:	mov    edi,ecx
  403934:	and    eax,0x1000
  403939:	mov    DWORD PTR [ebp-0x28],eax
  40393c:	lea    esi,[esi+eiz*1+0x0]
  403940:	lea    ecx,[edi+0x1]
  403943:	mov    DWORD PTR [esp],ebx
  403946:	mov    DWORD PTR [esp+0x4],esi
  40394a:	mov    DWORD PTR [esp+0x8],0xa
  403952:	mov    DWORD PTR [esp+0xc],0x0
  40395a:	mov    DWORD PTR [ebp-0x20],ecx
  40395d:	call   0x4086a0
  403962:	add    eax,0x30
  403965:	mov    BYTE PTR [edi],al
  403967:	mov    DWORD PTR [esp],ebx
  40396a:	mov    DWORD PTR [esp+0x4],esi
  40396e:	mov    DWORD PTR [esp+0x8],0xa
  403976:	mov    DWORD PTR [esp+0xc],0x0
  40397e:	call   0x408590
  403983:	mov    ebx,eax
  403985:	mov    eax,edx
  403987:	mov    esi,edx
  403989:	or     eax,ebx
  40398b:	mov    ecx,DWORD PTR [ebp-0x20]
  40398e:	je     0x4039e0
  403990:	cmp    DWORD PTR [ebp-0x24],ecx
  403993:	je     0x4039c0
  403995:	mov    eax,DWORD PTR [ebp-0x28]
  403998:	test   eax,eax
  40399a:	je     0x4039c0
  40399c:	mov    eax,DWORD PTR [ebp-0x30]
  40399f:	cmp    WORD PTR [eax+0x1c],0x0
  4039a4:	je     0x4039c0
  4039a6:	mov    eax,ecx
  4039a8:	sub    eax,DWORD PTR [ebp-0x24]
  4039ab:	cdq    
  4039ac:	shr    edx,0x1e
  4039af:	add    eax,edx
  4039b1:	and    eax,0x3
  4039b4:	sub    eax,edx
  4039b6:	cmp    eax,0x3
  4039b9:	je     0x4039d0
  4039bb:	nop
  4039bc:	lea    esi,[esi+eiz*1+0x0]
  4039c0:	mov    edi,ecx
  4039c2:	jmp    0x403940
  4039c7:	mov    esi,esi
  4039c9:	lea    edi,[edi+eiz*1+0x0]
  4039d0:	lea    ecx,[edi+0x2]
  4039d3:	mov    BYTE PTR [edi+0x1],0x2c
  4039d7:	mov    edi,ecx
  4039d9:	jmp    0x403940
  4039de:	xchg   ax,ax
  4039e0:	mov    edi,DWORD PTR [ebp-0x30]
  4039e3:	mov    esi,DWORD PTR [ebp-0x34]
  4039e6:	mov    ebx,ecx
  4039e8:	test   esi,esi
  4039ea:	jle    0x403a0b
  4039ec:	mov    eax,DWORD PTR [ebp-0x24]
  4039ef:	mov    ebx,ecx
  4039f1:	sub    eax,ecx
  4039f3:	add    eax,esi
  4039f5:	test   eax,eax
  4039f7:	jle    0x403a0b
  4039f9:	lea    ebx,[ecx+eax*1]
  4039fc:	lea    esi,[esi+eiz*1+0x0]
  403a00:	add    ecx,0x1
  403a03:	mov    BYTE PTR [ecx-0x1],0x30
  403a07:	cmp    ecx,ebx
  403a09:	jne    0x403a00
  403a0b:	cmp    ebx,DWORD PTR [ebp-0x24]
  403a0e:	jne    0x403a20
  403a10:	mov    edx,DWORD PTR [ebp-0x34]
  403a13:	test   edx,edx
  403a15:	je     0x403a20
  403a17:	mov    BYTE PTR [ebx],0x30
  403a1a:	add    ebx,0x1
  403a1d:	lea    esi,[esi+0x0]
  403a20:	mov    esi,DWORD PTR [ebp-0x38]
  403a23:	test   esi,esi
  403a25:	jle    0x403a84
  403a27:	mov    eax,DWORD PTR [ebp-0x24]
  403a2a:	sub    eax,ebx
  403a2c:	add    eax,esi
  403a2e:	test   eax,eax
  403a30:	mov    DWORD PTR [edi+0x8],eax
  403a33:	jle    0x403a84
  403a35:	test   DWORD PTR [ebp-0x2c],0x1c0
  403a3c:	je     0x403a44
  403a3e:	sub    eax,0x1
  403a41:	mov    DWORD PTR [edi+0x8],eax
  403a44:	mov    eax,DWORD PTR [ebp-0x34]
  403a47:	test   eax,eax
  403a49:	js     0x403b30
  403a4f:	test   DWORD PTR [ebp-0x2c],0x400
  403a56:	jne    0x403a84
  403a58:	mov    eax,DWORD PTR [edi+0x8]
  403a5b:	lea    edx,[eax-0x1]
  403a5e:	test   eax,eax
  403a60:	mov    DWORD PTR [edi+0x8],edx
  403a63:	jle    0x403a84
  403a65:	mov    edx,edi
  403a67:	mov    eax,0x20
  403a6c:	call   0x403570
  403a71:	mov    eax,DWORD PTR [edi+0x8]
  403a74:	lea    edx,[eax-0x1]
  403a77:	test   eax,eax
  403a79:	mov    DWORD PTR [edi+0x8],edx
  403a7c:	jg     0x403a65
  403a7e:	mov    eax,DWORD PTR [edi+0x4]
  403a81:	mov    DWORD PTR [ebp-0x2c],eax
  403a84:	test   BYTE PTR [ebp-0x2c],0x80
  403a88:	je     0x403ae1
  403a8a:	lea    esi,[ebx+0x1]
  403a8d:	mov    BYTE PTR [ebx],0x2d
  403a90:	cmp    DWORD PTR [ebp-0x24],esi
  403a93:	mov    ebx,DWORD PTR [ebp-0x24]
  403a96:	jae    0x403acc
  403a98:	nop
  403a99:	lea    esi,[esi+eiz*1+0x0]
  403aa0:	sub    esi,0x1
  403aa3:	movsx  eax,BYTE PTR [esi]
  403aa6:	mov    edx,edi
  403aa8:	call   0x403570
  403aad:	cmp    esi,ebx
  403aaf:	jne    0x403aa0
  403ab1:	mov    eax,DWORD PTR [edi+0x8]
  403ab4:	lea    edx,[eax-0x1]
  403ab7:	test   eax,eax
  403ab9:	mov    DWORD PTR [edi+0x8],edx
  403abc:	jle    0x403ad9
  403abe:	xchg   ax,ax
  403ac0:	mov    edx,edi
  403ac2:	mov    eax,0x20
  403ac7:	call   0x403570
  403acc:	mov    eax,DWORD PTR [edi+0x8]
  403acf:	lea    edx,[eax-0x1]
  403ad2:	test   eax,eax
  403ad4:	mov    DWORD PTR [edi+0x8],edx
  403ad7:	jg     0x403ac0
  403ad9:	lea    esp,[ebp-0xc]
  403adc:	pop    ebx
  403add:	pop    esi
  403ade:	pop    edi
  403adf:	pop    ebp
  403ae0:	ret    
  403ae1:	test   DWORD PTR [ebp-0x2c],0x100
  403ae8:	je     0x403b10
  403aea:	lea    esi,[ebx+0x1]
  403aed:	mov    BYTE PTR [ebx],0x2b
  403af0:	jmp    0x403a90
  403af2:	mov    eax,ecx
  403af4:	mov    edx,0x55555556
  403af9:	imul   edx
  403afb:	mov    eax,ecx
  403afd:	sar    eax,0x1f
  403b00:	sub    edx,eax
  403b02:	add    ecx,edx
  403b04:	jmp    0x4038de
  403b09:	lea    esi,[esi+eiz*1+0x0]
  403b10:	test   BYTE PTR [ebp-0x2c],0x40
  403b14:	mov    esi,ebx
  403b16:	je     0x403a90
  403b1c:	add    esi,0x1
  403b1f:	mov    BYTE PTR [ebx],0x20
  403b22:	jmp    0x403a90
  403b27:	mov    esi,esi
  403b29:	lea    edi,[edi+eiz*1+0x0]
  403b30:	mov    eax,DWORD PTR [ebp-0x2c]
  403b33:	and    eax,0x600
  403b38:	cmp    eax,0x200
  403b3d:	jne    0x403a4f
  403b43:	mov    eax,DWORD PTR [edi+0x8]
  403b46:	lea    edx,[eax-0x1]
  403b49:	test   eax,eax
  403b4b:	mov    DWORD PTR [edi+0x8],edx
  403b4e:	jle    0x403a84
  403b54:	add    eax,ebx
  403b56:	lea    esi,[esi+0x0]
  403b59:	lea    edi,[edi+eiz*1+0x0]
  403b60:	add    ebx,0x1
  403b63:	mov    BYTE PTR [ebx-0x1],0x30
  403b67:	cmp    ebx,eax
  403b69:	jne    0x403b60
  403b6b:	mov    DWORD PTR [edi+0x8],0xffffffff
  403b72:	jmp    0x403a84
  403b77:	mov    esi,esi
  403b79:	lea    edi,[edi+eiz*1+0x0]
  403b80:	mov    ebx,DWORD PTR [ebp-0x20]
  403b83:	mov    esi,DWORD PTR [ebp-0x1c]
  403b86:	neg    ebx
  403b88:	adc    esi,0x0
  403b8b:	neg    esi
  403b8d:	jmp    0x40391d
  403b92:	mov    ecx,DWORD PTR [ebp-0x24]
  403b95:	jmp    0x4039e3
  403b9a:	lea    esi,[esi+0x0]
  403ba0:	push   ebp
  403ba1:	mov    ebp,esp
  403ba3:	push   edi
  403ba4:	push   esi
  403ba5:	push   ebx
  403ba6:	mov    edi,ecx
  403ba8:	mov    esi,edx
  403baa:	sub    esp,0x2c
  403bad:	cmp    eax,0x6f
  403bb0:	mov    DWORD PTR [ebp-0x28],eax
  403bb3:	mov    DWORD PTR [ebp-0x34],ecx
  403bb6:	mov    eax,0x18
  403bbb:	mov    ecx,0x12
  403bc0:	cmovne eax,ecx
  403bc3:	mov    DWORD PTR [ebp-0x24],edx
  403bc6:	mov    cl,0x0
  403bc8:	mov    edx,eax
  403bca:	setne  al
  403bcd:	movzx  ebx,al
  403bd0:	movzx  eax,al
  403bd3:	add    eax,0x3
  403bd6:	lea    ebx,[ebx*8+0x7]
  403bdd:	mov    DWORD PTR [ebp-0x1c],eax
  403be0:	mov    eax,DWORD PTR [ebp+0x8]
  403be3:	mov    eax,DWORD PTR [eax+0xc]
  403be6:	test   eax,eax
  403be8:	mov    DWORD PTR [ebp-0x2c],eax
  403beb:	cmovns ecx,eax
  403bee:	mov    eax,DWORD PTR [ebp+0x8]
  403bf1:	lea    ecx,[edx+ecx*1]
  403bf4:	mov    eax,DWORD PTR [eax+0x4]
  403bf7:	test   ah,0x10
  403bfa:	mov    DWORD PTR [ebp-0x38],eax
  403bfd:	je     0x403c0d
  403bff:	mov    eax,DWORD PTR [ebp+0x8]
  403c02:	cmp    WORD PTR [eax+0x1c],0x0
  403c07:	jne    0x403e40
  403c0d:	mov    eax,DWORD PTR [ebp+0x8]
  403c10:	mov    eax,DWORD PTR [eax+0x8]
  403c13:	cmp    ecx,eax
  403c15:	mov    edx,eax
  403c17:	mov    DWORD PTR [ebp-0x30],eax
  403c1a:	mov    eax,ecx
  403c1c:	cmovl  eax,edx
  403c1f:	add    eax,0xf
  403c22:	and    eax,0xfffffff0
  403c25:	call   0x402830
  403c2a:	sub    esp,eax
  403c2c:	mov    eax,DWORD PTR [ebp-0x34]
  403c2f:	or     eax,DWORD PTR [ebp-0x24]
  403c32:	mov    DWORD PTR [ebp-0x20],esp
  403c35:	mov    eax,esp
  403c37:	je     0x403f30
  403c3d:	movzx  ecx,BYTE PTR [ebp-0x28]
  403c41:	and    ecx,0x20
  403c44:	mov    BYTE PTR [ebp-0x24],cl
  403c47:	jmp    0x403c6d
  403c49:	lea    esi,[esi+eiz*1+0x0]
  403c50:	mov    BYTE PTR [eax-0x1],cl
  403c53:	movzx  ecx,BYTE PTR [ebp-0x1c]
  403c57:	xor    edx,edx
  403c59:	shrd   esi,edi,cl
  403c5c:	shr    edi,cl
  403c5e:	test   cl,0x20
  403c61:	cmovne esi,edi
  403c64:	cmovne edi,edx
  403c67:	mov    ecx,edi
  403c69:	or     ecx,esi
  403c6b:	je     0x403c90
  403c6d:	mov    edx,esi
  403c6f:	add    eax,0x1
  403c72:	and    edx,ebx
  403c74:	lea    ecx,[edx+0x30]
  403c77:	cmp    cl,0x39
  403c7a:	jbe    0x403c50
  403c7c:	add    edx,0x37
  403c7f:	or     dl,BYTE PTR [ebp-0x24]
  403c82:	mov    BYTE PTR [eax-0x1],dl
  403c85:	jmp    0x403c53
  403c87:	mov    esi,esi
  403c89:	lea    edi,[edi+eiz*1+0x0]
  403c90:	cmp    DWORD PTR [ebp-0x20],eax
  403c93:	je     0x403f30
  403c99:	mov    edi,DWORD PTR [ebp-0x2c]
  403c9c:	test   edi,edi
  403c9e:	jle    0x403e94
  403ca4:	mov    edx,DWORD PTR [ebp-0x20]
  403ca7:	sub    edx,eax
  403ca9:	add    edx,edi
  403cab:	test   edx,edx
  403cad:	jle    0x403e94
  403cb3:	add    edx,eax
  403cb5:	add    eax,0x1
  403cb8:	mov    BYTE PTR [eax-0x1],0x30
  403cbc:	cmp    eax,edx
  403cbe:	jne    0x403cb5
  403cc0:	cmp    edx,DWORD PTR [ebp-0x20]
  403cc3:	jne    0x403cd2
  403cc5:	mov    edi,DWORD PTR [ebp-0x2c]
  403cc8:	test   edi,edi
  403cca:	je     0x403cd2
  403ccc:	mov    BYTE PTR [edx],0x30
  403ccf:	add    edx,0x1
  403cd2:	mov    eax,edx
  403cd4:	sub    eax,DWORD PTR [ebp-0x20]
  403cd7:	cmp    eax,DWORD PTR [ebp-0x30]
  403cda:	jge    0x403d90
  403ce0:	mov    edi,DWORD PTR [ebp-0x30]
  403ce3:	sub    edi,eax
  403ce5:	mov    eax,DWORD PTR [ebp+0x8]
  403ce8:	test   edi,edi
  403cea:	mov    DWORD PTR [eax+0x8],edi
  403ced:	jle    0x403d9f
  403cf3:	cmp    DWORD PTR [ebp-0x28],0x6f
  403cf7:	mov    eax,DWORD PTR [ebp+0x8]
  403cfa:	mov    eax,DWORD PTR [eax+0x4]
  403cfd:	je     0x403ed4
  403d03:	test   ah,0x8
  403d06:	je     0x403dd0
  403d0c:	sub    edi,0x2
  403d0f:	test   edi,edi
  403d11:	jle    0x403d1e
  403d13:	mov    ebx,DWORD PTR [ebp-0x2c]
  403d16:	test   ebx,ebx
  403d18:	js     0x403e57
  403d1e:	movzx  eax,BYTE PTR [ebp-0x28]
  403d22:	test   edi,edi
  403d24:	lea    ebx,[edx+0x2]
  403d27:	mov    BYTE PTR [edx+0x1],0x30
  403d2b:	mov    BYTE PTR [edx],al
  403d2d:	jg     0x403de6
  403d33:	cmp    ebx,DWORD PTR [ebp-0x20]
  403d36:	jbe    0x403d84
  403d38:	nop
  403d39:	lea    esi,[esi+eiz*1+0x0]
  403d40:	mov    DWORD PTR [ebp-0x1c],edi
  403d43:	mov    esi,DWORD PTR [ebp-0x20]
  403d46:	mov    edi,ebx
  403d48:	mov    ebx,DWORD PTR [ebp+0x8]
  403d4b:	nop
  403d4c:	lea    esi,[esi+eiz*1+0x0]
  403d50:	sub    edi,0x1
  403d53:	movsx  eax,BYTE PTR [edi]
  403d56:	mov    edx,ebx
  403d58:	call   0x403570
  403d5d:	cmp    esi,edi
  403d5f:	jb     0x403d50
  403d61:	mov    edi,DWORD PTR [ebp-0x1c]
  403d64:	test   edi,edi
  403d66:	lea    ebx,[edi-0x1]
  403d69:	jle    0x403d84
  403d6b:	mov    esi,DWORD PTR [ebp+0x8]
  403d6e:	xchg   ax,ax
  403d70:	mov    edx,esi
  403d72:	mov    eax,0x20
  403d77:	sub    ebx,0x1
  403d7a:	call   0x403570
  403d7f:	cmp    ebx,0xffffffff
  403d82:	jne    0x403d70
  403d84:	lea    esp,[ebp-0xc]
  403d87:	pop    ebx
  403d88:	pop    esi
  403d89:	pop    edi
  403d8a:	pop    ebp
  403d8b:	ret    
  403d8c:	lea    esi,[esi+eiz*1+0x0]
  403d90:	mov    eax,DWORD PTR [ebp+0x8]
  403d93:	mov    edi,0xffffffff
  403d98:	mov    DWORD PTR [eax+0x8],0xffffffff
  403d9f:	cmp    DWORD PTR [ebp-0x28],0x6f
  403da3:	je     0x403ef0
  403da9:	mov    eax,DWORD PTR [ebp+0x8]
  403dac:	mov    eax,DWORD PTR [eax+0x4]
  403daf:	mov    DWORD PTR [ebp-0x1c],eax
  403db2:	and    eax,0x800
  403db7:	test   eax,eax
  403db9:	mov    ebx,edx
  403dbb:	je     0x403d33
  403dc1:	jmp    0x403d1e
  403dc6:	lea    esi,[esi+0x0]
  403dc9:	lea    edi,[edi+eiz*1+0x0]
  403dd0:	mov    ecx,DWORD PTR [ebp-0x2c]
  403dd3:	test   ecx,ecx
  403dd5:	js     0x403f00
  403ddb:	test   ah,0x8
  403dde:	mov    ebx,edx
  403de0:	jne    0x403d1e
  403de6:	mov    eax,DWORD PTR [ebp+0x8]
  403de9:	test   BYTE PTR [eax+0x5],0x4
  403ded:	jne    0x403ec0
  403df3:	lea    esi,[edi-0x1]
  403df6:	mov    edi,DWORD PTR [ebp+0x8]
  403df9:	mov    DWORD PTR [ebp-0x1c],ebx
  403dfc:	mov    ebx,esi
  403dfe:	xchg   ax,ax
  403e00:	mov    eax,0x20
  403e05:	sub    ebx,0x1
  403e08:	mov    edx,edi
  403e0a:	call   0x403570
  403e0f:	lea    eax,[ebx+0x1]
  403e12:	test   eax,eax
  403e14:	jg     0x403e00
  403e16:	lea    edx,[esi-0x1]
  403e19:	test   esi,esi
  403e1b:	mov    eax,0x0
  403e20:	mov    ebx,DWORD PTR [ebp-0x1c]
  403e23:	cmovns eax,esi
  403e26:	mov    edi,edx
  403e28:	sub    edi,eax
  403e2a:	cmp    DWORD PTR [ebp-0x20],ebx
  403e2d:	jb     0x403d40
  403e33:	jmp    0x403d64
  403e38:	nop
  403e39:	lea    esi,[esi+eiz*1+0x0]
  403e40:	mov    eax,ecx
  403e42:	mov    edx,0x55555556
  403e47:	imul   edx
  403e49:	mov    eax,ecx
  403e4b:	sar    eax,0x1f
  403e4e:	sub    edx,eax
  403e50:	add    ecx,edx
  403e52:	jmp    0x403c0d
  403e57:	mov    ecx,eax
  403e59:	and    ecx,0x600
  403e5f:	cmp    ecx,0x200
  403e65:	jne    0x403ddb
  403e6b:	lea    ebx,[edx+edi*1]
  403e6e:	xchg   ax,ax
  403e70:	add    edx,0x1
  403e73:	mov    BYTE PTR [edx-0x1],0x30
  403e77:	cmp    edx,ebx
  403e79:	jne    0x403e70
  403e7b:	cmp    DWORD PTR [ebp-0x28],0x6f
  403e7f:	je     0x403f41
  403e85:	and    eax,0x800
  403e8a:	mov    edi,0xffffffff
  403e8f:	jmp    0x403db7
  403e94:	cmp    DWORD PTR [ebp-0x28],0x6f
  403e98:	mov    edx,eax
  403e9a:	jne    0x403cc0
  403ea0:	mov    edi,DWORD PTR [ebp+0x8]
  403ea3:	test   BYTE PTR [edi+0x5],0x8
  403ea7:	je     0x403cc0
  403ead:	add    edx,0x1
  403eb0:	mov    BYTE PTR [eax],0x30
  403eb3:	jmp    0x403cc0
  403eb8:	nop
  403eb9:	lea    esi,[esi+eiz*1+0x0]
  403ec0:	cmp    ebx,DWORD PTR [ebp-0x20]
  403ec3:	ja     0x403d40
  403ec9:	lea    ebx,[edi-0x1]
  403ecc:	mov    esi,DWORD PTR [ebp+0x8]
  403ecf:	jmp    0x403d70
  403ed4:	mov    esi,DWORD PTR [ebp-0x2c]
  403ed7:	test   esi,esi
  403ed9:	js     0x403f00
  403edb:	test   ah,0x4
  403ede:	mov    ebx,edx
  403ee0:	jne    0x403e2a
  403ee6:	lea    esi,[edi-0x1]
  403ee9:	mov    ebx,edx
  403eeb:	jmp    0x403df6
  403ef0:	cmp    DWORD PTR [ebp-0x20],edx
  403ef3:	mov    ebx,edx
  403ef5:	jb     0x403d40
  403efb:	jmp    0x403d84
  403f00:	mov    ecx,eax
  403f02:	and    ecx,0x600
  403f08:	cmp    ecx,0x200
  403f0e:	je     0x403e6b
  403f14:	cmp    DWORD PTR [ebp-0x28],0x6f
  403f18:	jne    0x403ddb
  403f1e:	test   ah,0x4
  403f21:	mov    ebx,edx
  403f23:	jne    0x403e2a
  403f29:	jmp    0x403ee6
  403f2b:	nop
  403f2c:	lea    esi,[esi+eiz*1+0x0]
  403f30:	mov    edx,DWORD PTR [ebp-0x38]
  403f33:	mov    edi,DWORD PTR [ebp+0x8]
  403f36:	and    dh,0xf7
  403f39:	mov    DWORD PTR [edi+0x4],edx
  403f3c:	jmp    0x403c99
  403f41:	mov    edi,0xffffffff
  403f46:	jmp    0x403d33
  403f4b:	nop
  403f4c:	lea    esi,[esi+eiz*1+0x0]
  403f50:	push   ebp
  403f51:	mov    ebp,esp
  403f53:	push   edi
  403f54:	push   esi
  403f55:	push   ebx
  403f56:	mov    ebx,eax
  403f58:	sub    esp,0x3c
  403f5b:	cmp    DWORD PTR [eax+0x10],0xfffffffd
  403f5f:	je     0x403ff2
  403f65:	movzx  edx,WORD PTR [eax+0x14]
  403f69:	test   dx,dx
  403f6c:	je     0x403fd0
  403f6e:	mov    eax,DWORD PTR [ebx+0x10]
  403f71:	mov    DWORD PTR [ebp-0x2c],esp
  403f74:	add    eax,0xf
  403f77:	and    eax,0xfffffff0
  403f7a:	call   0x402830
  403f7f:	sub    esp,eax
  403f81:	lea    eax,[ebp-0x1c]
  403f84:	mov    DWORD PTR [ebp-0x1c],0x0
  403f8b:	lea    edi,[esp+0x10]
  403f8f:	mov    DWORD PTR [esp+0x4],edx
  403f93:	mov    DWORD PTR [esp+0x8],eax
  403f97:	mov    DWORD PTR [esp],edi
  403f9a:	call   0x408140
  403f9f:	test   eax,eax
  403fa1:	jle    0x403fe4
  403fa3:	lea    esi,[edi+eax*1]
  403fa6:	lea    esi,[esi+0x0]
  403fa9:	lea    edi,[edi+eiz*1+0x0]
  403fb0:	add    edi,0x1
  403fb3:	movsx  eax,BYTE PTR [edi-0x1]
  403fb7:	mov    edx,ebx
  403fb9:	call   0x403570
  403fbe:	cmp    edi,esi
  403fc0:	jne    0x403fb0
  403fc2:	mov    esp,DWORD PTR [ebp-0x2c]
  403fc5:	lea    esp,[ebp-0xc]
  403fc8:	pop    ebx
  403fc9:	pop    esi
  403fca:	pop    edi
  403fcb:	pop    ebp
  403fcc:	ret    
  403fcd:	lea    esi,[esi+0x0]
  403fd0:	mov    edx,ebx
  403fd2:	mov    eax,0x2e
  403fd7:	call   0x403570
  403fdc:	lea    esp,[ebp-0xc]
  403fdf:	pop    ebx
  403fe0:	pop    esi
  403fe1:	pop    edi
  403fe2:	pop    ebp
  403fe3:	ret    
  403fe4:	mov    edx,ebx
  403fe6:	mov    eax,0x2e
  403feb:	call   0x403570
  403ff0:	jmp    0x403fc2
  403ff2:	mov    DWORD PTR [ebp-0x1c],0x0
  403ff9:	call   0x408328
  403ffe:	lea    edx,[ebp-0x1c]
  404001:	mov    DWORD PTR [esp+0x8],0x10
  404009:	mov    DWORD PTR [esp+0xc],edx
  40400d:	mov    eax,DWORD PTR [eax]
  40400f:	mov    DWORD PTR [esp+0x4],eax
  404013:	lea    eax,[ebp-0x1e]
  404016:	mov    DWORD PTR [esp],eax
  404019:	call   0x407e90
  40401e:	test   eax,eax
  404020:	jle    0x404032
  404022:	movzx  edx,WORD PTR [ebp-0x1e]
  404026:	mov    WORD PTR [ebx+0x14],dx
  40402a:	mov    DWORD PTR [ebx+0x10],eax
  40402d:	jmp    0x403f69
  404032:	movzx  edx,WORD PTR [ebx+0x14]
  404036:	jmp    0x40402a
  404038:	nop
  404039:	lea    esi,[esi+eiz*1+0x0]
  404040:	push   ebp
  404041:	push   edi
  404042:	mov    ebp,eax
  404044:	push   esi
  404045:	push   ebx
  404046:	mov    esi,ecx
  404048:	mov    edi,edx
  40404a:	sub    esp,0x1c
  40404d:	test   esi,esi
  40404f:	mov    ebx,DWORD PTR [esp+0x30]
  404053:	mov    ecx,DWORD PTR [ebx+0x8]
  404056:	jle    0x404221
  40405c:	cmp    esi,ecx
  40405e:	jge    0x404190
  404064:	sub    ecx,esi
  404066:	mov    DWORD PTR [ebx+0x8],ecx
  404069:	test   ecx,ecx
  40406b:	js     0x404190
  404071:	mov    eax,DWORD PTR [ebx+0xc]
  404074:	cmp    eax,ecx
  404076:	jge    0x404190
  40407c:	sub    ecx,eax
  40407e:	test   ecx,ecx
  404080:	mov    DWORD PTR [ebx+0x8],ecx
  404083:	jle    0x40419c
  404089:	test   eax,eax
  40408b:	jle    0x4042c1
  404091:	sub    ecx,0x1
  404094:	test   esi,esi
  404096:	mov    DWORD PTR [ebx+0x8],ecx
  404099:	jle    0x4040a5
  40409b:	test   BYTE PTR [ebx+0x5],0x10
  40409f:	jne    0x4041ae
  4040a5:	test   ecx,ecx
  4040a7:	jle    0x4040e9
  4040a9:	test   ebp,ebp
  4040ab:	jne    0x4040bb
  4040ad:	mov    eax,DWORD PTR [ebx+0x4]
  4040b0:	test   eax,0x1c0
  4040b5:	je     0x4042a0
  4040bb:	sub    ecx,0x1
  4040be:	test   ecx,ecx
  4040c0:	mov    DWORD PTR [ebx+0x8],ecx
  4040c3:	jle    0x4040e9
  4040c5:	test   DWORD PTR [ebx+0x4],0x600
  4040cc:	jne    0x4040e9
  4040ce:	jmp    0x4040dc
  4040d0:	mov    edx,ebx
  4040d2:	mov    eax,0x20
  4040d7:	call   0x403570
  4040dc:	mov    eax,DWORD PTR [ebx+0x8]
  4040df:	lea    edx,[eax-0x1]
  4040e2:	test   eax,eax
  4040e4:	mov    DWORD PTR [ebx+0x8],edx
  4040e7:	jg     0x4040d0
  4040e9:	test   ebp,ebp
  4040eb:	jne    0x404210
  4040f1:	mov    eax,DWORD PTR [ebx+0x4]
  4040f4:	test   ah,0x1
  4040f7:	jne    0x404234
  4040fd:	test   al,0x40
  4040ff:	jne    0x4042b0
  404105:	mov    edx,DWORD PTR [ebx+0x8]
  404108:	test   edx,edx
  40410a:	jle    0x40411f
  40410c:	mov    eax,DWORD PTR [ebx+0x4]
  40410f:	and    eax,0x600
  404114:	cmp    eax,0x200
  404119:	je     0x404245
  40411f:	test   esi,esi
  404121:	jle    0x404271
  404127:	lea    eax,[ebx+0x1c]
  40412a:	mov    ebp,0x55555556
  40412f:	mov    DWORD PTR [esp+0xc],eax
  404133:	movzx  edx,BYTE PTR [edi]
  404136:	mov    eax,0x30
  40413b:	test   dl,dl
  40413d:	je     0x404145
  40413f:	add    edi,0x1
  404142:	movsx  eax,dl
  404145:	mov    edx,ebx
  404147:	call   0x403570
  40414c:	sub    esi,0x1
  40414f:	je     0x40435f
  404155:	test   BYTE PTR [ebx+0x5],0x10
  404159:	je     0x404133
  40415b:	cmp    WORD PTR [ebx+0x1c],0x0
  404160:	je     0x404133
  404162:	mov    eax,esi
  404164:	imul   ebp
  404166:	mov    eax,esi
  404168:	sar    eax,0x1f
  40416b:	sub    edx,eax
  40416d:	lea    eax,[edx+edx*2]
  404170:	cmp    esi,eax
  404172:	jne    0x404133
  404174:	mov    eax,DWORD PTR [esp+0xc]
  404178:	mov    ecx,ebx
  40417a:	mov    edx,0x1
  40417f:	call   0x4035d0
  404184:	jmp    0x404133
  404186:	lea    esi,[esi+0x0]
  404189:	lea    edi,[edi+eiz*1+0x0]
  404190:	mov    DWORD PTR [ebx+0x8],0xffffffff
  404197:	mov    ecx,0xffffffff
  40419c:	test   esi,esi
  40419e:	jle    0x4040e9
  4041a4:	test   BYTE PTR [ebx+0x5],0x10
  4041a8:	je     0x4040e9
  4041ae:	cmp    WORD PTR [ebx+0x1c],0x0
  4041b3:	je     0x4040a5
  4041b9:	lea    eax,[esi+0x2]
  4041bc:	mov    edx,0x55555556
  4041c1:	mov    DWORD PTR [esp+0xc],eax
  4041c5:	imul   edx
  4041c7:	mov    eax,DWORD PTR [esp+0xc]
  4041cb:	sar    eax,0x1f
  4041ce:	sub    edx,eax
  4041d0:	cmp    edx,0x1
  4041d3:	jle    0x4040a5
  4041d9:	test   ecx,ecx
  4041db:	jle    0x4040e9
  4041e1:	mov    eax,ecx
  4041e3:	sub    eax,edx
  4041e5:	add    eax,0x1
  4041e8:	jmp    0x4041f8
  4041ea:	lea    esi,[esi+0x0]
  4041f0:	test   ecx,ecx
  4041f2:	je     0x404353
  4041f8:	sub    ecx,0x1
  4041fb:	cmp    ecx,eax
  4041fd:	jne    0x4041f0
  4041ff:	mov    DWORD PTR [ebx+0x8],ecx
  404202:	jmp    0x4040a5
  404207:	mov    esi,esi
  404209:	lea    edi,[edi+eiz*1+0x0]
  404210:	mov    edx,ebx
  404212:	mov    eax,0x2d
  404217:	call   0x403570
  40421c:	jmp    0x404105
  404221:	test   ecx,ecx
  404223:	jle    0x404069
  404229:	sub    ecx,0x1
  40422c:	mov    DWORD PTR [ebx+0x8],ecx
  40422f:	jmp    0x404071
  404234:	mov    edx,ebx
  404236:	mov    eax,0x2b
  40423b:	call   0x403570
  404240:	jmp    0x404105
  404245:	sub    edx,0x1
  404248:	mov    DWORD PTR [ebx+0x8],edx
  40424b:	nop
  40424c:	lea    esi,[esi+eiz*1+0x0]
  404250:	mov    edx,ebx
  404252:	mov    eax,0x30
  404257:	call   0x403570
  40425c:	mov    eax,DWORD PTR [ebx+0x8]
  40425f:	lea    edx,[eax-0x1]
  404262:	test   eax,eax
  404264:	mov    DWORD PTR [ebx+0x8],edx
  404267:	jg     0x404250
  404269:	test   esi,esi
  40426b:	jg     0x404127
  404271:	mov    eax,0x30
  404276:	mov    edx,ebx
  404278:	call   0x403570
  40427d:	mov    eax,DWORD PTR [ebx+0xc]
  404280:	test   eax,eax
  404282:	jg     0x4042f0
  404284:	test   BYTE PTR [ebx+0x5],0x8
  404288:	jne    0x4042f0
  40428a:	test   esi,esi
  40428c:	jne    0x404333
  404292:	sub    eax,0x1
  404295:	mov    DWORD PTR [ebx+0xc],eax
  404298:	add    esp,0x1c
  40429b:	pop    ebx
  40429c:	pop    esi
  40429d:	pop    edi
  40429e:	pop    ebp
  40429f:	ret    
  4042a0:	test   ah,0x6
  4042a3:	je     0x4040dc
  4042a9:	jmp    0x4040f1
  4042ae:	xchg   ax,ax
  4042b0:	mov    edx,ebx
  4042b2:	mov    eax,0x20
  4042b7:	call   0x403570
  4042bc:	jmp    0x404105
  4042c1:	mov    eax,DWORD PTR [ebx+0x4]
  4042c4:	test   ah,0x8
  4042c7:	jne    0x404091
  4042cd:	test   esi,esi
  4042cf:	jle    0x4040a9
  4042d5:	test   ah,0x10
  4042d8:	je     0x4040a9
  4042de:	cmp    WORD PTR [ebx+0x1c],0x0
  4042e3:	jne    0x4041b9
  4042e9:	jmp    0x4040a9
  4042ee:	xchg   ax,ax
  4042f0:	mov    eax,ebx
  4042f2:	call   0x403f50
  4042f7:	test   esi,esi
  4042f9:	je     0x404319
  4042fb:	jmp    0x404330
  4042fd:	lea    esi,[esi+0x0]
  404300:	movzx  edx,BYTE PTR [edi]
  404303:	mov    eax,0x30
  404308:	test   dl,dl
  40430a:	je     0x404312
  40430c:	add    edi,0x1
  40430f:	movsx  eax,dl
  404312:	mov    edx,ebx
  404314:	call   0x403570
  404319:	mov    eax,DWORD PTR [ebx+0xc]
  40431c:	lea    edx,[eax-0x1]
  40431f:	test   eax,eax
  404321:	mov    DWORD PTR [ebx+0xc],edx
  404324:	jg     0x404300
  404326:	add    esp,0x1c
  404329:	pop    ebx
  40432a:	pop    esi
  40432b:	pop    edi
  40432c:	pop    ebp
  40432d:	ret    
  40432e:	xchg   ax,ax
  404330:	mov    eax,DWORD PTR [ebx+0xc]
  404333:	add    eax,esi
  404335:	mov    DWORD PTR [ebx+0xc],eax
  404338:	nop
  404339:	lea    esi,[esi+eiz*1+0x0]
  404340:	mov    edx,ebx
  404342:	mov    eax,0x30
  404347:	call   0x403570
  40434c:	add    esi,0x1
  40434f:	jne    0x404340
  404351:	jmp    0x404319
  404353:	mov    DWORD PTR [ebx+0x8],0x0
  40435a:	jmp    0x4040e9
  40435f:	mov    eax,DWORD PTR [ebx+0xc]
  404362:	test   eax,eax
  404364:	jle    0x404370
  404366:	mov    eax,ebx
  404368:	call   0x403f50
  40436d:	jmp    0x404319
  40436f:	nop
  404370:	test   BYTE PTR [ebx+0x5],0x8
  404374:	jne    0x404366
  404376:	jmp    0x404292
  40437b:	nop
  40437c:	lea    esi,[esi+eiz*1+0x0]
  404380:	push   ebp
  404381:	push   edi
  404382:	sub    ecx,0x1
  404385:	push   esi
  404386:	push   ebx
  404387:	mov    ebx,0x66666667
  40438c:	mov    ebp,edx
  40438e:	mov    esi,0x1
  404393:	sub    esp,0x2c
  404396:	mov    DWORD PTR [esp+0x14],eax
  40439a:	mov    eax,ecx
  40439c:	mov    DWORD PTR [esp+0x18],ecx
  4043a0:	sar    eax,0x1f
  4043a3:	mov    edi,DWORD PTR [esp+0x40]
  4043a7:	mov    DWORD PTR [esp+0x1c],eax
  4043ab:	mov    eax,ecx
  4043ad:	sar    ecx,0x1f
  4043b0:	imul   ebx
  4043b2:	mov    ebx,edx
  4043b4:	sar    ebx,0x2
  4043b7:	sub    ebx,ecx
  4043b9:	je     0x4043d3
  4043bb:	mov    ecx,0x66666667
  4043c0:	mov    eax,ebx
  4043c2:	sar    ebx,0x1f
  4043c5:	add    esi,0x1
  4043c8:	imul   ecx
  4043ca:	sar    edx,0x2
  4043cd:	sub    edx,ebx
  4043cf:	mov    ebx,edx
  4043d1:	jne    0x4043c0
  4043d3:	mov    eax,DWORD PTR [edi+0x28]
  4043d6:	cmp    esi,eax
  4043d8:	cmovl  esi,eax
  4043db:	mov    eax,DWORD PTR [edi+0x8]
  4043de:	lea    edx,[esi+0x2]
  4043e1:	cmp    eax,edx
  4043e3:	jg     0x404440
  4043e5:	mov    DWORD PTR [edi+0x8],0xffffffff
  4043ec:	mov    eax,DWORD PTR [esp+0x14]
  4043f0:	mov    DWORD PTR [esp],edi
  4043f3:	mov    ecx,0x1
  4043f8:	mov    edx,ebp
  4043fa:	add    esi,0x1
  4043fd:	call   0x404040
  404402:	mov    eax,DWORD PTR [edi+0x28]
  404405:	mov    DWORD PTR [edi+0xc],eax
  404408:	mov    eax,DWORD PTR [edi+0x4]
  40440b:	mov    edx,eax
  40440d:	and    eax,0x20
  404410:	or     edx,0x1c0
  404416:	or     eax,0x45
  404419:	mov    DWORD PTR [edi+0x4],edx
  40441c:	mov    edx,edi
  40441e:	call   0x403570
  404423:	add    DWORD PTR [edi+0x8],esi
  404426:	mov    eax,DWORD PTR [esp+0x18]
  40442a:	mov    ecx,edi
  40442c:	mov    edx,DWORD PTR [esp+0x1c]
  404430:	call   0x4038a0
  404435:	add    esp,0x2c
  404438:	pop    ebx
  404439:	pop    esi
  40443a:	pop    edi
  40443b:	pop    ebp
  40443c:	ret    
  40443d:	lea    esi,[esi+0x0]
  404440:	sub    eax,edx
  404442:	mov    DWORD PTR [edi+0x8],eax
  404445:	jmp    0x4043ec
  404447:	mov    esi,esi
  404449:	lea    edi,[edi+eiz*1+0x0]
  404450:	push   esi
  404451:	push   ebx
  404452:	mov    ebx,eax
  404454:	sub    esp,0x44
  404457:	mov    edx,DWORD PTR [eax+0xc]
  40445a:	test   edx,edx
  40445c:	js     0x4044d0
  40445e:	add    edx,0x1
  404461:	fld    TBYTE PTR [esp+0x50]
  404465:	lea    eax,[esp+0x28]
  404469:	mov    DWORD PTR [esp+0x10],edx
  40446d:	mov    DWORD PTR [esp+0x18],eax
  404471:	lea    eax,[esp+0x2c]
  404475:	mov    DWORD PTR [esp+0x14],eax
  404479:	fstp   TBYTE PTR [esp+0x30]
  40447d:	mov    eax,DWORD PTR [esp+0x30]
  404481:	mov    DWORD PTR [esp],eax
  404484:	mov    eax,DWORD PTR [esp+0x34]
  404488:	mov    DWORD PTR [esp+0x4],eax
  40448c:	mov    eax,DWORD PTR [esp+0x38]
  404490:	mov    DWORD PTR [esp+0x8],eax
  404494:	mov    eax,DWORD PTR [esp+0x3c]
  404498:	mov    DWORD PTR [esp+0xc],eax
  40449c:	mov    eax,0x2
  4044a1:	call   0x403470
  4044a6:	mov    ecx,DWORD PTR [esp+0x2c]
  4044aa:	mov    esi,eax
  4044ac:	cmp    ecx,0xffff8000
  4044b2:	je     0x4044e0
  4044b4:	mov    edx,eax
  4044b6:	mov    eax,DWORD PTR [esp+0x28]
  4044ba:	mov    DWORD PTR [esp],ebx
  4044bd:	call   0x404380
  4044c2:	mov    DWORD PTR [esp],esi
  4044c5:	call   0x405880
  4044ca:	add    esp,0x44
  4044cd:	pop    ebx
  4044ce:	pop    esi
  4044cf:	ret    
  4044d0:	mov    DWORD PTR [eax+0xc],0x6
  4044d7:	mov    edx,0x7
  4044dc:	jmp    0x404461
  4044de:	xchg   ax,ax
  4044e0:	mov    edx,eax
  4044e2:	mov    eax,DWORD PTR [esp+0x28]
  4044e6:	mov    ecx,ebx
  4044e8:	call   0x403800
  4044ed:	mov    DWORD PTR [esp],esi
  4044f0:	call   0x405880
  4044f5:	add    esp,0x44
  4044f8:	pop    ebx
  4044f9:	pop    esi
  4044fa:	ret    
  4044fb:	nop
  4044fc:	lea    esi,[esi+eiz*1+0x0]
  404500:	push   edi
  404501:	push   esi
  404502:	push   ebx
  404503:	mov    ebx,eax
  404505:	sub    esp,0x40
  404508:	mov    eax,DWORD PTR [eax+0xc]
  40450b:	test   eax,eax
  40450d:	js     0x4045b0
  404513:	fld    TBYTE PTR [esp+0x50]
  404517:	mov    DWORD PTR [esp+0x10],eax
  40451b:	lea    edx,[esp+0x28]
  40451f:	mov    DWORD PTR [esp+0x18],edx
  404523:	lea    edx,[esp+0x2c]
  404527:	mov    DWORD PTR [esp+0x14],edx
  40452b:	fstp   TBYTE PTR [esp+0x30]
  40452f:	mov    eax,DWORD PTR [esp+0x30]
  404533:	mov    DWORD PTR [esp],eax
  404536:	mov    eax,DWORD PTR [esp+0x34]
  40453a:	mov    DWORD PTR [esp+0x4],eax
  40453e:	mov    eax,DWORD PTR [esp+0x38]
  404542:	mov    DWORD PTR [esp+0x8],eax
  404546:	mov    eax,DWORD PTR [esp+0x3c]
  40454a:	mov    DWORD PTR [esp+0xc],eax
  40454e:	mov    eax,0x3
  404553:	call   0x403470
  404558:	mov    ecx,DWORD PTR [esp+0x2c]
  40455c:	mov    edi,eax
  40455e:	cmp    ecx,0xffff8000
  404564:	je     0x4045c1
  404566:	mov    edx,eax
  404568:	mov    eax,DWORD PTR [esp+0x28]
  40456c:	mov    DWORD PTR [esp],ebx
  40456f:	call   0x404040
  404574:	mov    eax,DWORD PTR [ebx+0x8]
  404577:	lea    edx,[eax-0x1]
  40457a:	test   eax,eax
  40457c:	mov    DWORD PTR [ebx+0x8],edx
  40457f:	jle    0x40459a
  404581:	mov    edx,ebx
  404583:	mov    eax,0x20
  404588:	call   0x403570
  40458d:	mov    ecx,DWORD PTR [ebx+0x8]
  404590:	lea    esi,[ecx-0x1]
  404593:	test   ecx,ecx
  404595:	mov    DWORD PTR [ebx+0x8],esi
  404598:	jg     0x404581
  40459a:	mov    DWORD PTR [esp],edi
  40459d:	call   0x405880
  4045a2:	add    esp,0x40
  4045a5:	pop    ebx
  4045a6:	pop    esi
  4045a7:	pop    edi
  4045a8:	ret    
  4045a9:	lea    esi,[esi+eiz*1+0x0]
  4045b0:	mov    DWORD PTR [ebx+0xc],0x6
  4045b7:	mov    eax,0x6
  4045bc:	jmp    0x404513
  4045c1:	mov    edx,eax
  4045c3:	mov    eax,DWORD PTR [esp+0x28]
  4045c7:	mov    ecx,ebx
  4045c9:	call   0x403800
  4045ce:	mov    DWORD PTR [esp],edi
  4045d1:	call   0x405880
  4045d6:	add    esp,0x40
  4045d9:	pop    ebx
  4045da:	pop    esi
  4045db:	pop    edi
  4045dc:	ret    
  4045dd:	lea    esi,[esi+0x0]
  4045e0:	push   edi
  4045e1:	push   esi
  4045e2:	push   ebx
  4045e3:	mov    ebx,eax
  4045e5:	sub    esp,0x40
  4045e8:	mov    eax,DWORD PTR [eax+0xc]
  4045eb:	test   eax,eax
  4045ed:	js     0x404720
  4045f3:	je     0x404703
  4045f9:	fld    TBYTE PTR [esp+0x50]
  4045fd:	mov    DWORD PTR [esp+0x10],eax
  404601:	lea    edx,[esp+0x28]
  404605:	mov    DWORD PTR [esp+0x18],edx
  404609:	lea    edx,[esp+0x2c]
  40460d:	mov    DWORD PTR [esp+0x14],edx
  404611:	fstp   TBYTE PTR [esp+0x30]
  404615:	mov    eax,DWORD PTR [esp+0x30]
  404619:	mov    DWORD PTR [esp],eax
  40461c:	mov    eax,DWORD PTR [esp+0x34]
  404620:	mov    DWORD PTR [esp+0x4],eax
  404624:	mov    eax,DWORD PTR [esp+0x38]
  404628:	mov    DWORD PTR [esp+0x8],eax
  40462c:	mov    eax,DWORD PTR [esp+0x3c]
  404630:	mov    DWORD PTR [esp+0xc],eax
  404634:	mov    eax,0x2
  404639:	call   0x403470
  40463e:	mov    esi,DWORD PTR [esp+0x2c]
  404642:	mov    edi,eax
  404644:	cmp    esi,0xffff8000
  40464a:	je     0x404740
  404650:	cmp    esi,0xfffffffd
  404653:	jl     0x4046d0
  404655:	mov    eax,DWORD PTR [ebx+0xc]
  404658:	cmp    esi,eax
  40465a:	jg     0x4046d0
  40465c:	test   BYTE PTR [ebx+0x5],0x8
  404660:	jne    0x404731
  404666:	mov    DWORD PTR [esp],edi
  404669:	call   0x4082f0
  40466e:	sub    eax,esi
  404670:	test   eax,eax
  404672:	mov    DWORD PTR [ebx+0xc],eax
  404675:	js     0x404750
  40467b:	mov    eax,DWORD PTR [esp+0x28]
  40467f:	mov    edx,edi
  404681:	mov    DWORD PTR [esp],ebx
  404684:	mov    ecx,esi
  404686:	call   0x404040
  40468b:	mov    eax,DWORD PTR [ebx+0x8]
  40468e:	lea    edx,[eax-0x1]
  404691:	test   eax,eax
  404693:	mov    DWORD PTR [ebx+0x8],edx
  404696:	jle    0x4046f4
  404698:	nop
  404699:	lea    esi,[esi+eiz*1+0x0]
  4046a0:	mov    edx,ebx
  4046a2:	mov    eax,0x20
  4046a7:	call   0x403570
  4046ac:	mov    ecx,DWORD PTR [ebx+0x8]
  4046af:	lea    esi,[ecx-0x1]
  4046b2:	test   ecx,ecx
  4046b4:	mov    DWORD PTR [ebx+0x8],esi
  4046b7:	jg     0x4046a0
  4046b9:	mov    DWORD PTR [esp],edi
  4046bc:	call   0x405880
  4046c1:	add    esp,0x40
  4046c4:	pop    ebx
  4046c5:	pop    esi
  4046c6:	pop    edi
  4046c7:	ret    
  4046c8:	nop
  4046c9:	lea    esi,[esi+eiz*1+0x0]
  4046d0:	test   BYTE PTR [ebx+0x5],0x8
  4046d4:	jne    0x404714
  4046d6:	mov    DWORD PTR [esp],edi
  4046d9:	call   0x4082f0
  4046de:	sub    eax,0x1
  4046e1:	mov    DWORD PTR [ebx+0xc],eax
  4046e4:	mov    eax,DWORD PTR [esp+0x28]
  4046e8:	mov    DWORD PTR [esp],ebx
  4046eb:	mov    ecx,esi
  4046ed:	mov    edx,edi
  4046ef:	call   0x404380
  4046f4:	mov    DWORD PTR [esp],edi
  4046f7:	call   0x405880
  4046fc:	add    esp,0x40
  4046ff:	pop    ebx
  404700:	pop    esi
  404701:	pop    edi
  404702:	ret    
  404703:	mov    DWORD PTR [ebx+0xc],0x1
  40470a:	mov    eax,0x1
  40470f:	jmp    0x4045f9
  404714:	sub    DWORD PTR [ebx+0xc],0x1
  404718:	jmp    0x4046e4
  40471a:	lea    esi,[esi+0x0]
  404720:	mov    DWORD PTR [ebx+0xc],0x6
  404727:	mov    eax,0x6
  40472c:	jmp    0x4045f9
  404731:	sub    eax,esi
  404733:	mov    DWORD PTR [ebx+0xc],eax
  404736:	jmp    0x40467b
  40473b:	nop
  40473c:	lea    esi,[esi+eiz*1+0x0]
  404740:	mov    edx,eax
  404742:	mov    eax,DWORD PTR [esp+0x28]
  404746:	mov    ecx,ebx
  404748:	call   0x403800
  40474d:	jmp    0x4046f4
  40474f:	nop
  404750:	mov    edx,DWORD PTR [ebx+0x8]
  404753:	test   edx,edx
  404755:	jle    0x40467b
  40475b:	add    eax,edx
  40475d:	mov    DWORD PTR [ebx+0x8],eax
  404760:	jmp    0x40467b
  404765:	lea    esi,[esi+eiz*1+0x0]
  404769:	lea    edi,[edi+eiz*1+0x0]
  404770:	push   ebp
  404771:	push   edi
  404772:	push   esi
  404773:	push   ebx
  404774:	mov    ebx,eax
  404776:	sub    esp,0x5c
  404779:	fld    TBYTE PTR [esp+0x70]
  40477d:	fld    st(0)
  40477f:	fstp   TBYTE PTR [esp+0x28]
  404783:	fxam   
  404785:	fstsw  ax
  404788:	and    ax,0x4500
  40478c:	cmp    ax,0x100
  404790:	je     0x404c74
  404796:	movzx  edi,WORD PTR [esp+0x30]
  40479b:	mov    esi,edi
  40479d:	and    esi,0x8000
  4047a3:	jne    0x4048e0
  4047a9:	fxam   
  4047ab:	fstsw  ax
  4047ae:	fstp   st(0)
  4047b0:	and    ax,0x4500
  4047b4:	cmp    ax,0x500
  4047b8:	je     0x404c89
  4047be:	and    di,0x7fff
  4047c3:	mov    ecx,edi
  4047c5:	je     0x4048f0
  4047cb:	mov    ebp,DWORD PTR [ebx+0xc]
  4047ce:	lea    eax,[ecx-0x3fff]
  4047d4:	mov    esi,DWORD PTR [esp+0x28]
  4047d8:	mov    edi,DWORD PTR [esp+0x2c]
  4047dc:	mov    WORD PTR [esp+0x16],ax
  4047e1:	cmp    ebp,0xe
  4047e4:	jbe    0x404a41
  4047ea:	mov    eax,edi
  4047ec:	or     eax,esi
  4047ee:	je     0x404c0b
  4047f4:	mov    eax,DWORD PTR [ebx+0x4]
  4047f7:	lea    ecx,[esp+0x38]
  4047fb:	movzx  edx,WORD PTR [esp+0x16]
  404800:	mov    DWORD PTR [esp+0x8],ebx
  404804:	mov    ebp,ecx
  404806:	mov    DWORD PTR [esp+0xc],ecx
  40480a:	mov    ecx,eax
  40480c:	mov    DWORD PTR [esp+0x18],eax
  404810:	and    eax,0x20
  404813:	and    ecx,0x800
  404819:	mov    BYTE PTR [esp+0x10],al
  40481d:	mov    DWORD PTR [esp+0x1c],ecx
  404821:	mov    ecx,ebp
  404823:	jmp    0x404867
  404825:	mov    ebx,DWORD PTR [esp+0x8]
  404829:	mov    ebx,DWORD PTR [ebx+0xc]
  40482c:	test   ebx,ebx
  40482e:	jle    0x40483a
  404830:	mov    ebp,DWORD PTR [esp+0x8]
  404834:	sub    ebx,0x1
  404837:	mov    DWORD PTR [ebp+0xc],ebx
  40483a:	shrd   esi,edi,0x4
  40483e:	shr    edi,0x4
  404841:	test   eax,eax
  404843:	mov    ebp,ecx
  404845:	je     0x4048bf
  404847:	cmp    eax,0x9
  40484a:	lea    ecx,[ebp+0x1]
  40484d:	jle    0x4048d7
  404853:	add    eax,0x37
  404856:	or     al,BYTE PTR [esp+0x10]
  40485a:	mov    BYTE PTR [ebp+0x0],al
  40485d:	mov    eax,edi
  40485f:	or     eax,esi
  404861:	je     0x404940
  404867:	mov    eax,esi
  404869:	and    eax,0xf
  40486c:	cmp    eax,esi
  40486e:	jne    0x404825
  404870:	cmp    ecx,DWORD PTR [esp+0xc]
  404874:	ja     0x404890
  404876:	mov    ebp,DWORD PTR [esp+0x1c]
  40487a:	test   ebp,ebp
  40487c:	jne    0x404890
  40487e:	mov    ebx,DWORD PTR [esp+0x8]
  404882:	mov    ebp,ecx
  404884:	mov    ebx,DWORD PTR [ebx+0xc]
  404887:	test   ebx,ebx
  404889:	jle    0x404896
  40488b:	nop
  40488c:	lea    esi,[esi+eiz*1+0x0]
  404890:	lea    ebp,[ecx+0x1]
  404893:	mov    BYTE PTR [ecx],0x2e
  404896:	cmp    edi,0x0
  404899:	ja     0x4048a0
  40489b:	cmp    esi,0x1
  40489e:	jbe    0x4048b7
  4048a0:	lea    ecx,[edx-0x1]
  4048a3:	shrd   esi,edi,0x1
  4048a7:	shr    edi,1
  4048a9:	mov    edx,ecx
  4048ab:	mov    ebx,esi
  4048ad:	lea    ecx,[edx-0x1]
  4048b0:	xor    ebx,0x1
  4048b3:	or     ebx,edi
  4048b5:	jne    0x4048a3
  4048b7:	xor    esi,esi
  4048b9:	xor    edi,edi
  4048bb:	test   eax,eax
  4048bd:	jne    0x404847
  4048bf:	cmp    ebp,DWORD PTR [esp+0xc]
  4048c3:	ja     0x4048d4
  4048c5:	mov    ecx,DWORD PTR [esp+0x8]
  4048c9:	mov    ecx,DWORD PTR [ecx+0xc]
  4048cc:	test   ecx,ecx
  4048ce:	js     0x404ac0
  4048d4:	lea    ecx,[ebp+0x1]
  4048d7:	add    eax,0x30
  4048da:	jmp    0x40485a
  4048df:	nop
  4048e0:	or     DWORD PTR [ebx+0x4],0x80
  4048e7:	jmp    0x4047a9
  4048ec:	lea    esi,[esi+eiz*1+0x0]
  4048f0:	mov    edx,DWORD PTR [esp+0x2c]
  4048f4:	mov    eax,DWORD PTR [esp+0x28]
  4048f8:	mov    edi,edx
  4048fa:	or     edi,eax
  4048fc:	je     0x404bfc
  404902:	test   edx,edx
  404904:	js     0x404cae
  40490a:	mov    ecx,0xffffc001
  40490f:	nop
  404910:	shld   edx,eax,0x1
  404914:	mov    edi,ecx
  404916:	add    eax,eax
  404918:	sub    ecx,0x1
  40491b:	test   edx,edx
  40491d:	jns    0x404910
  40491f:	mov    WORD PTR [esp+0x16],di
  404924:	mov    esi,eax
  404926:	mov    edi,edx
  404928:	mov    ebp,DWORD PTR [ebx+0xc]
  40492b:	cmp    ebp,0xe
  40492e:	jbe    0x404a5f
  404934:	jmp    0x4047f4
  404939:	lea    esi,[esi+eiz*1+0x0]
  404940:	cmp    ecx,DWORD PTR [esp+0xc]
  404944:	mov    WORD PTR [esp+0x16],dx
  404949:	mov    ebp,ecx
  40494b:	mov    ebx,DWORD PTR [esp+0x8]
  40494f:	je     0x404ca6
  404955:	mov    eax,DWORD PTR [ebx+0x8]
  404958:	test   eax,eax
  40495a:	mov    DWORD PTR [esp+0x8],eax
  40495e:	jle    0x404be9
  404964:	mov    eax,ebp
  404966:	sub    eax,DWORD PTR [esp+0xc]
  40496a:	mov    edx,DWORD PTR [ebx+0xc]
  40496d:	movsx  edi,WORD PTR [esp+0x16]
  404972:	test   edx,edx
  404974:	lea    ecx,[eax+edx*1]
  404977:	mov    edx,DWORD PTR [esp+0x18]
  40497b:	mov    DWORD PTR [esp+0x10],edi
  40497f:	cmovg  eax,ecx
  404982:	mov    ecx,0x66666667
  404987:	and    edx,0x1c0
  40498d:	cmp    edx,0x1
  404990:	sbb    edx,edx
  404992:	lea    esi,[eax+edx*1+0x6]
  404996:	mov    eax,edi
  404998:	imul   ecx
  40499a:	mov    eax,edi
  40499c:	sar    eax,0x1f
  40499f:	mov    ecx,edx
  4049a1:	sar    ecx,0x2
  4049a4:	sub    ecx,eax
  4049a6:	je     0x404c9c
  4049ac:	mov    edi,0x2
  4049b1:	mov    eax,0x66666667
  4049b6:	add    esi,0x1
  4049b9:	add    edi,0x1
  4049bc:	imul   ecx
  4049be:	sar    ecx,0x1f
  4049c1:	sar    edx,0x2
  4049c4:	sub    edx,ecx
  4049c6:	mov    ecx,edx
  4049c8:	jne    0x4049b1
  4049ca:	movsx  edi,di
  4049cd:	cmp    DWORD PTR [esp+0x8],esi
  4049d1:	jle    0x404ad0
  4049d7:	mov    eax,DWORD PTR [esp+0x8]
  4049db:	sub    eax,esi
  4049dd:	test   DWORD PTR [esp+0x18],0x600
  4049e5:	jne    0x404c36
  4049eb:	lea    edx,[eax-0x1]
  4049ee:	test   eax,eax
  4049f0:	mov    DWORD PTR [ebx+0x8],edx
  4049f3:	jle    0x404ad7
  4049f9:	lea    esi,[esi+eiz*1+0x0]
  404a00:	mov    edx,ebx
  404a02:	mov    eax,0x20
  404a07:	call   0x403570
  404a0c:	mov    eax,DWORD PTR [ebx+0x8]
  404a0f:	lea    edx,[eax-0x1]
  404a12:	test   eax,eax
  404a14:	mov    DWORD PTR [ebx+0x8],edx
  404a17:	jg     0x404a00
  404a19:	mov    eax,DWORD PTR [ebx+0x4]
  404a1c:	mov    DWORD PTR [esp+0x18],eax
  404a20:	test   BYTE PTR [esp+0x18],0x80
  404a25:	je     0x404ae2
  404a2b:	nop
  404a2c:	lea    esi,[esi+eiz*1+0x0]
  404a30:	mov    edx,ebx
  404a32:	mov    eax,0x2d
  404a37:	call   0x403570
  404a3c:	jmp    0x404afb
  404a41:	test   edi,edi
  404a43:	js     0x404a5f
  404a45:	mov    ecx,eax
  404a47:	mov    esi,esi
  404a49:	lea    edi,[edi+eiz*1+0x0]
  404a50:	shld   edi,esi,0x1
  404a54:	add    esi,esi
  404a56:	test   edi,edi
  404a58:	jns    0x404a50
  404a5a:	mov    WORD PTR [esp+0x16],cx
  404a5f:	mov    ecx,0xe
  404a64:	mov    eax,0x4
  404a69:	xor    edx,edx
  404a6b:	sub    ecx,ebp
  404a6d:	shl    ecx,0x2
  404a70:	shrd   esi,edi,0x1
  404a74:	shld   edx,eax,cl
  404a77:	shr    edi,1
  404a79:	shl    eax,cl
  404a7b:	test   cl,0x20
  404a7e:	je     0x404a84
  404a80:	mov    edx,eax
  404a82:	xor    eax,eax
  404a84:	add    eax,esi
  404a86:	adc    edx,edi
  404a88:	test   edx,edx
  404a8a:	js     0x404c69
  404a90:	shld   edx,eax,0x1
  404a94:	add    eax,eax
  404a96:	mov    ecx,0xf
  404a9b:	xor    esi,esi
  404a9d:	sub    ecx,ebp
  404a9f:	shl    ecx,0x2
  404aa2:	shrd   eax,edx,cl
  404aa5:	shr    edx,cl
  404aa7:	test   cl,0x20
  404aaa:	cmovne eax,edx
  404aad:	cmovne edx,esi
  404ab0:	mov    edi,edx
  404ab2:	mov    esi,eax
  404ab4:	jmp    0x4047f4
  404ab9:	lea    esi,[esi+eiz*1+0x0]
  404ac0:	mov    ecx,ebp
  404ac2:	jmp    0x40485d
  404ac7:	mov    esi,esi
  404ac9:	lea    edi,[edi+eiz*1+0x0]
  404ad0:	mov    DWORD PTR [ebx+0x8],0xffffffff
  404ad7:	test   BYTE PTR [esp+0x18],0x80
  404adc:	jne    0x404a30
  404ae2:	test   DWORD PTR [esp+0x18],0x100
  404aea:	jne    0x404c47
  404af0:	test   BYTE PTR [esp+0x18],0x40
  404af5:	jne    0x404c58
  404afb:	mov    edx,ebx
  404afd:	mov    eax,0x30
  404b02:	call   0x403570
  404b07:	mov    eax,DWORD PTR [ebx+0x4]
  404b0a:	mov    edx,ebx
  404b0c:	and    eax,0x20
  404b0f:	or     eax,0x58
  404b12:	call   0x403570
  404b17:	mov    eax,DWORD PTR [ebx+0x8]
  404b1a:	test   eax,eax
  404b1c:	jle    0x404b49
  404b1e:	test   BYTE PTR [ebx+0x5],0x2
  404b22:	je     0x404b49
  404b24:	sub    eax,0x1
  404b27:	mov    DWORD PTR [ebx+0x8],eax
  404b2a:	lea    esi,[esi+0x0]
  404b30:	mov    edx,ebx
  404b32:	mov    eax,0x30
  404b37:	call   0x403570
  404b3c:	mov    eax,DWORD PTR [ebx+0x8]
  404b3f:	lea    edx,[eax-0x1]
  404b42:	test   eax,eax
  404b44:	mov    DWORD PTR [ebx+0x8],edx
  404b47:	jg     0x404b30
  404b49:	cmp    ebp,DWORD PTR [esp+0xc]
  404b4d:	mov    esi,DWORD PTR [esp+0xc]
  404b51:	ja     0x404b77
  404b53:	jmp    0x404b9d
  404b55:	movzx  eax,WORD PTR [ebx+0x1c]
  404b59:	test   ax,ax
  404b5c:	mov    WORD PTR [esp+0x26],ax
  404b61:	je     0x404b73
  404b63:	lea    eax,[esp+0x26]
  404b67:	mov    ecx,ebx
  404b69:	mov    edx,0x1
  404b6e:	call   0x4035d0
  404b73:	cmp    ebp,esi
  404b75:	je     0x404b9d
  404b77:	sub    ebp,0x1
  404b7a:	movsx  eax,BYTE PTR [ebp+0x0]
  404b7e:	cmp    eax,0x2e
  404b81:	je     0x404be0
  404b83:	cmp    eax,0x2c
  404b86:	je     0x404b55
  404b88:	mov    edx,ebx
  404b8a:	call   0x403570
  404b8f:	jmp    0x404b73
  404b91:	mov    edx,ebx
  404b93:	mov    eax,0x30
  404b98:	call   0x403570
  404b9d:	mov    eax,DWORD PTR [ebx+0xc]
  404ba0:	lea    edx,[eax-0x1]
  404ba3:	test   eax,eax
  404ba5:	mov    DWORD PTR [ebx+0xc],edx
  404ba8:	jg     0x404b91
  404baa:	mov    eax,DWORD PTR [ebx+0x4]
  404bad:	mov    edx,ebx
  404baf:	and    eax,0x20
  404bb2:	or     eax,0x50
  404bb5:	call   0x403570
  404bba:	mov    eax,DWORD PTR [esp+0x10]
  404bbe:	add    DWORD PTR [ebx+0x8],edi
  404bc1:	mov    ecx,ebx
  404bc3:	or     DWORD PTR [ebx+0x4],0x1c0
  404bca:	cdq    
  404bcb:	call   0x4038a0
  404bd0:	add    esp,0x5c
  404bd3:	pop    ebx
  404bd4:	pop    esi
  404bd5:	pop    edi
  404bd6:	pop    ebp
  404bd7:	ret    
  404bd8:	nop
  404bd9:	lea    esi,[esi+eiz*1+0x0]
  404be0:	mov    eax,ebx
  404be2:	call   0x403f50
  404be7:	jmp    0x404b73
  404be9:	movsx  eax,WORD PTR [esp+0x16]
  404bee:	mov    edi,0x2
  404bf3:	mov    DWORD PTR [esp+0x10],eax
  404bf7:	jmp    0x404ad7
  404bfc:	mov    ebp,DWORD PTR [ebx+0xc]
  404bff:	cmp    ebp,0xe
  404c02:	jbe    0x404c3e
  404c04:	xor    edx,edx
  404c06:	mov    WORD PTR [esp+0x16],dx
  404c0b:	mov    eax,DWORD PTR [ebx+0x4]
  404c0e:	mov    DWORD PTR [esp+0x18],eax
  404c12:	lea    eax,[esp+0x38]
  404c16:	mov    DWORD PTR [esp+0xc],eax
  404c1a:	test   ebp,ebp
  404c1c:	jle    0x404cc1
  404c22:	lea    eax,[esp+0x39]
  404c26:	mov    BYTE PTR [esp+0x38],0x2e
  404c2b:	lea    ebp,[eax+0x1]
  404c2e:	mov    BYTE PTR [eax],0x30
  404c31:	jmp    0x404955
  404c36:	mov    DWORD PTR [ebx+0x8],eax
  404c39:	jmp    0x404ad7
  404c3e:	xor    esi,esi
  404c40:	xor    edi,edi
  404c42:	jmp    0x404a50
  404c47:	mov    edx,ebx
  404c49:	mov    eax,0x2b
  404c4e:	call   0x403570
  404c53:	jmp    0x404afb
  404c58:	mov    edx,ebx
  404c5a:	mov    eax,0x20
  404c5f:	call   0x403570
  404c64:	jmp    0x404afb
  404c69:	add    WORD PTR [esp+0x16],0x1
  404c6f:	jmp    0x404a96
  404c74:	fstp   st(0)
  404c76:	mov    ecx,ebx
  404c78:	mov    edx,0x40a520
  404c7d:	xor    eax,eax
  404c7f:	call   0x403800
  404c84:	jmp    0x404bd0
  404c89:	mov    ecx,ebx
  404c8b:	mov    edx,0x40a524
  404c90:	mov    eax,esi
  404c92:	call   0x403800
  404c97:	jmp    0x404bd0
  404c9c:	mov    edi,0x2
  404ca1:	jmp    0x4049cd
  404ca6:	mov    ebp,DWORD PTR [ebx+0xc]
  404ca9:	jmp    0x404c1a
  404cae:	mov    esi,eax
  404cb0:	mov    eax,0xffffc002
  404cb5:	mov    edi,edx
  404cb7:	mov    WORD PTR [esp+0x16],ax
  404cbc:	jmp    0x404928
  404cc1:	test   DWORD PTR [esp+0x18],0x800
  404cc9:	mov    eax,DWORD PTR [esp+0xc]
  404ccd:	je     0x404c2b
  404cd3:	jmp    0x404c22
  404cd8:	nop
  404cd9:	lea    esi,[esi+eiz*1+0x0]
  404ce0:	push   ebp
  404ce1:	push   edi
  404ce2:	push   esi
  404ce3:	push   ebx
  404ce4:	xor    esi,esi
  404ce6:	xor    ebx,ebx
  404ce8:	sub    esp,0x6c
  404ceb:	mov    ebp,DWORD PTR [esp+0x8c]
  404cf2:	call   0x408378
  404cf7:	mov    eax,DWORD PTR [eax]
  404cf9:	mov    DWORD PTR [esp],0x40a53d
  404d00:	mov    DWORD PTR [esp+0x3c],0xffffffff
  404d08:	mov    DWORD PTR [esp+0x40],0xffffffff
  404d10:	mov    DWORD PTR [esp+0x44],0xfffffffd
  404d18:	mov    WORD PTR [esp+0x48],bx
  404d1d:	mov    DWORD PTR [esp+0x1c],eax
  404d21:	mov    eax,DWORD PTR [esp+0x84]
  404d28:	mov    DWORD PTR [esp+0x4c],0x0
  404d30:	mov    WORD PTR [esp+0x50],si
  404d35:	mov    DWORD PTR [esp+0x54],0x0
  404d3d:	mov    DWORD PTR [esp+0x34],eax
  404d41:	mov    eax,DWORD PTR [esp+0x80]
  404d48:	and    eax,0x6000
  404d4d:	mov    DWORD PTR [esp+0x18],eax
  404d51:	mov    DWORD PTR [esp+0x38],eax
  404d55:	mov    eax,DWORD PTR [esp+0x88]
  404d5c:	mov    DWORD PTR [esp+0x58],eax
  404d60:	call   0x408330
  404d65:	test   eax,eax
  404d67:	je     0x404d79
  404d69:	movsx  edx,BYTE PTR [eax]
  404d6c:	mov    eax,0x2
  404d71:	sub    edx,0x30
  404d74:	cmp    edx,0x2
  404d77:	jbe    0x404d86
  404d79:	call   0x408490
  404d7e:	and    eax,0x1
  404d81:	neg    eax
  404d83:	add    eax,0x3
  404d86:	mov    DWORD PTR [esp+0x5c],eax
  404d8a:	movzx  edx,BYTE PTR [ebp+0x0]
  404d8e:	xchg   ax,ax
  404d90:	movsx  eax,dl
  404d93:	lea    esi,[ebp+0x1]
  404d96:	test   eax,eax
  404d98:	je     0x404e30
  404d9e:	cmp    eax,0x25
  404da1:	jne    0x404e40
  404da7:	mov    eax,DWORD PTR [esp+0x18]
  404dab:	movzx  edx,BYTE PTR [ebp+0x1]
  404daf:	xor    edi,edi
  404db1:	mov    DWORD PTR [esp+0x40],0xffffffff
  404db9:	mov    DWORD PTR [esp+0x3c],0xffffffff
  404dc1:	mov    ebx,esi
  404dc3:	mov    DWORD PTR [esp+0x10],0x0
  404dcb:	mov    DWORD PTR [esp+0x38],eax
  404dcf:	lea    eax,[esp+0x3c]
  404dd3:	test   dl,dl
  404dd5:	mov    DWORD PTR [esp+0x14],eax
  404dd9:	je     0x404e17
  404ddb:	lea    ecx,[edx-0x20]
  404dde:	lea    ebp,[ebx+0x1]
  404de1:	movsx  eax,dl
  404de4:	cmp    cl,0x5a
  404de7:	ja     0x405460
  404ded:	movzx  ecx,cl
  404df0:	jmp    DWORD PTR [ecx*4+0x40a554]
  404df7:	mov    esi,esi
  404df9:	lea    edi,[edi+eiz*1+0x0]
  404e00:	movzx  edx,BYTE PTR [ebx+0x1]
  404e04:	mov    DWORD PTR [esp+0x10],0x2
  404e0c:	mov    edi,0x4
  404e11:	mov    ebx,ebp
  404e13:	test   dl,dl
  404e15:	jne    0x404ddb
  404e17:	movsx  eax,dl
  404e1a:	mov    ebp,ebx
  404e1c:	test   eax,eax
  404e1e:	lea    esi,[ebp+0x1]
  404e21:	jne    0x404d9e
  404e27:	mov    esi,esi
  404e29:	lea    edi,[edi+eiz*1+0x0]
  404e30:	mov    eax,DWORD PTR [esp+0x54]
  404e34:	add    esp,0x6c
  404e37:	pop    ebx
  404e38:	pop    esi
  404e39:	pop    edi
  404e3a:	pop    ebp
  404e3b:	ret    
  404e3c:	lea    esi,[esi+eiz*1+0x0]
  404e40:	lea    edx,[esp+0x34]
  404e44:	call   0x403570
  404e49:	movzx  edx,BYTE PTR [ebp+0x1]
  404e4d:	mov    ebp,esi
  404e4f:	jmp    0x404d90
  404e54:	mov    edx,DWORD PTR [esp+0x10]
  404e58:	mov    eax,DWORD PTR [esp+0x90]
  404e5f:	sub    edx,0x2
  404e62:	cmp    edx,0x1
  404e65:	jbe    0x4054b2
  404e6b:	mov    ebx,DWORD PTR [eax]
  404e6d:	add    DWORD PTR [esp+0x90],0x4
  404e75:	test   ebx,ebx
  404e77:	je     0x404f57
  404e7d:	mov    DWORD PTR [esp],ebx
  404e80:	call   0x4082f0
  404e85:	mov    edx,eax
  404e87:	lea    ecx,[esp+0x34]
  404e8b:	mov    eax,ebx
  404e8d:	call   0x4036f0
  404e92:	movzx  edx,BYTE PTR [ebp+0x0]
  404e96:	jmp    0x404d90
  404e9b:	nop
  404e9c:	lea    esi,[esi+eiz*1+0x0]
  404ea0:	test   edi,edi
  404ea2:	jne    0x404eb2
  404ea4:	mov    eax,DWORD PTR [esp+0x18]
  404ea8:	cmp    DWORD PTR [esp+0x38],eax
  404eac:	je     0x4056bd
  404eb2:	mov    eax,DWORD PTR [esp+0x90]
  404eb9:	xor    ecx,ecx
  404ebb:	mov    DWORD PTR [esp+0x2c],0x0
  404ec3:	lea    ebx,[eax+0x4]
  404ec6:	mov    eax,DWORD PTR [eax]
  404ec8:	mov    DWORD PTR [esp+0x28],eax
  404ecc:	mov    eax,DWORD PTR [esp+0x90]
  404ed3:	mov    edx,DWORD PTR [eax]
  404ed5:	lea    eax,[esp+0x34]
  404ed9:	mov    DWORD PTR [esp],eax
  404edc:	mov    eax,0x78
  404ee1:	call   0x403ba0
  404ee6:	mov    DWORD PTR [esp+0x90],ebx
  404eed:	jmp    0x404e92
  404eef:	nop
  404ef0:	cmp    DWORD PTR [esp+0x10],0x4
  404ef5:	mov    eax,DWORD PTR [esp+0x90]
  404efc:	mov    edx,DWORD PTR [esp+0x54]
  404f00:	mov    eax,DWORD PTR [eax]
  404f02:	je     0x405615
  404f08:	cmp    DWORD PTR [esp+0x10],0x1
  404f0d:	je     0x405680
  404f13:	cmp    DWORD PTR [esp+0x10],0x2
  404f18:	je     0x40571d
  404f1e:	cmp    DWORD PTR [esp+0x10],0x3
  404f23:	mov    DWORD PTR [eax],edx
  404f25:	je     0x405792
  404f2b:	mov    eax,DWORD PTR [esp+0x90]
  404f32:	add    eax,0x4
  404f35:	mov    DWORD PTR [esp+0x90],eax
  404f3c:	jmp    0x404e92
  404f41:	mov    eax,DWORD PTR [esp+0x1c]
  404f45:	mov    DWORD PTR [esp],eax
  404f48:	call   0x4082f8
  404f4d:	test   eax,eax
  404f4f:	mov    ebx,eax
  404f51:	jne    0x404e7d
  404f57:	mov    edx,0x6
  404f5c:	mov    ebx,0x40a536
  404f61:	jmp    0x404e87
  404f66:	lea    esi,[esi+0x0]
  404f69:	lea    edi,[edi+eiz*1+0x0]
  404f70:	movzx  edx,BYTE PTR [ebx+0x1]
  404f74:	cmp    dl,0x6c
  404f77:	je     0x405598
  404f7d:	mov    DWORD PTR [esp+0x10],0x2
  404f85:	mov    edi,0x4
  404f8a:	mov    ebx,ebp
  404f8c:	jmp    0x404e13
  404f91:	movzx  edx,BYTE PTR [ebx+0x1]
  404f95:	mov    DWORD PTR [esp+0x10],0x3
  404f9d:	mov    edi,0x4
  404fa2:	mov    ebx,ebp
  404fa4:	jmp    0x404e13
  404fa9:	lea    esi,[esi+eiz*1+0x0]
  404fb0:	mov    eax,DWORD PTR [esp+0x38]
  404fb4:	mov    edx,DWORD PTR [esp+0x90]
  404fbb:	or     eax,0x20
  404fbe:	test   al,0x4
  404fc0:	mov    DWORD PTR [esp+0x38],eax
  404fc4:	je     0x405243
  404fca:	fld    TBYTE PTR [edx]
  404fcc:	lea    eax,[esp+0x34]
  404fd0:	add    DWORD PTR [esp+0x90],0xc
  404fd8:	fstp   TBYTE PTR [esp]
  404fdb:	call   0x4045e0
  404fe0:	jmp    0x404e92
  404fe5:	mov    eax,DWORD PTR [esp+0x38]
  404fe9:	mov    edx,DWORD PTR [esp+0x90]
  404ff0:	or     eax,0x20
  404ff3:	test   al,0x4
  404ff5:	mov    DWORD PTR [esp+0x38],eax
  404ff9:	je     0x405273
  404fff:	fld    TBYTE PTR [edx]
  405001:	lea    eax,[esp+0x34]
  405005:	add    DWORD PTR [esp+0x90],0xc
  40500d:	fstp   TBYTE PTR [esp]
  405010:	call   0x404500
  405015:	jmp    0x404e92
  40501a:	lea    esi,[esi+0x0]
  405020:	movzx  edx,BYTE PTR [ebx+0x1]
  405024:	cmp    dl,0x68
  405027:	je     0x40557d
  40502d:	mov    DWORD PTR [esp+0x10],0x1
  405035:	mov    edi,0x4
  40503a:	mov    ebx,ebp
  40503c:	jmp    0x404e13
  405041:	mov    eax,DWORD PTR [esp+0x38]
  405045:	mov    edx,DWORD PTR [esp+0x90]
  40504c:	or     eax,0x20
  40504f:	test   al,0x4
  405051:	mov    DWORD PTR [esp+0x38],eax
  405055:	je     0x4052a3
  40505b:	fld    TBYTE PTR [edx]
  40505d:	lea    eax,[esp+0x34]
  405061:	add    DWORD PTR [esp+0x90],0xc
  405069:	fstp   TBYTE PTR [esp]
  40506c:	call   0x404450
  405071:	jmp    0x404e92
  405076:	lea    esi,[esi+0x0]
  405079:	lea    edi,[edi+eiz*1+0x0]
  405080:	or     DWORD PTR [esp+0x38],0x80
  405088:	cmp    DWORD PTR [esp+0x10],0x3
  40508d:	mov    eax,DWORD PTR [esp+0x90]
  405094:	je     0x4055b3
  40509a:	cmp    DWORD PTR [esp+0x10],0x2
  40509f:	je     0x40565d
  4050a5:	lea    edx,[eax+0x4]
  4050a8:	mov    eax,DWORD PTR [eax]
  4050aa:	mov    DWORD PTR [esp+0x28],eax
  4050ae:	sar    eax,0x1f
  4050b1:	cmp    DWORD PTR [esp+0x10],0x1
  4050b6:	mov    DWORD PTR [esp+0x2c],eax
  4050ba:	je     0x405701
  4050c0:	cmp    DWORD PTR [esp+0x10],0x4
  4050c5:	mov    DWORD PTR [esp+0x90],edx
  4050cc:	je     0x40577d
  4050d2:	mov    eax,DWORD PTR [esp+0x28]
  4050d6:	mov    edx,DWORD PTR [esp+0x2c]
  4050da:	lea    ecx,[esp+0x34]
  4050de:	call   0x4038a0
  4050e3:	jmp    0x404e92
  4050e8:	nop
  4050e9:	lea    esi,[esi+eiz*1+0x0]
  4050f0:	mov    edx,DWORD PTR [esp+0x10]
  4050f4:	mov    eax,DWORD PTR [esp+0x90]
  4050fb:	mov    DWORD PTR [esp+0x40],0xffffffff
  405103:	sub    edx,0x2
  405106:	cmp    edx,0x1
  405109:	jbe    0x4052c8
  40510f:	mov    eax,DWORD PTR [eax]
  405111:	lea    ecx,[esp+0x34]
  405115:	mov    edx,0x1
  40511a:	add    DWORD PTR [esp+0x90],0x4
  405122:	mov    BYTE PTR [esp+0x28],al
  405126:	lea    eax,[esp+0x28]
  40512a:	call   0x4036f0
  40512f:	jmp    0x404e92
  405134:	mov    eax,DWORD PTR [esp+0x38]
  405138:	mov    edx,DWORD PTR [esp+0x90]
  40513f:	or     eax,0x20
  405142:	test   al,0x4
  405144:	mov    DWORD PTR [esp+0x38],eax
  405148:	je     0x405313
  40514e:	fld    TBYTE PTR [edx]
  405150:	lea    eax,[esp+0x34]
  405154:	add    DWORD PTR [esp+0x90],0xc
  40515c:	fstp   TBYTE PTR [esp]
  40515f:	call   0x404770
  405164:	jmp    0x404e92
  405169:	lea    esi,[esi+eiz*1+0x0]
  405170:	cmp    DWORD PTR [esp+0x10],0x3
  405175:	mov    edi,DWORD PTR [esp+0x90]
  40517c:	je     0x4055f9
  405182:	cmp    DWORD PTR [esp+0x10],0x2
  405187:	je     0x405699
  40518d:	cmp    DWORD PTR [esp+0x10],0x1
  405192:	lea    edx,[edi+0x4]
  405195:	mov    edi,DWORD PTR [edi]
  405197:	mov    DWORD PTR [esp+0x2c],0x0
  40519f:	mov    DWORD PTR [esp+0x28],edi
  4051a3:	je     0x405735
  4051a9:	cmp    DWORD PTR [esp+0x10],0x4
  4051ae:	mov    DWORD PTR [esp+0x90],edx
  4051b5:	je     0x405767
  4051bb:	cmp    eax,0x75
  4051be:	je     0x4050d2
  4051c4:	lea    edi,[esp+0x34]
  4051c8:	mov    edx,DWORD PTR [esp+0x28]
  4051cc:	mov    ecx,DWORD PTR [esp+0x2c]
  4051d0:	mov    DWORD PTR [esp],edi
  4051d3:	call   0x403ba0
  4051d8:	jmp    0x404e92
  4051dd:	lea    esi,[esi+0x0]
  4051e0:	movzx  edx,BYTE PTR [ebx+0x1]
  4051e4:	or     DWORD PTR [esp+0x38],0x4
  4051e9:	mov    edi,0x4
  4051ee:	mov    ebx,ebp
  4051f0:	jmp    0x404e13
  4051f5:	movzx  edx,BYTE PTR [ebx+0x1]
  4051f9:	cmp    dl,0x36
  4051fc:	je     0x4055d6
  405202:	cmp    dl,0x33
  405205:	jne    0x404f7d
  40520b:	cmp    BYTE PTR [ebx+0x2],0x32
  40520f:	je     0x4056d1
  405215:	mov    edx,0x33
  40521a:	mov    DWORD PTR [esp+0x10],0x2
  405222:	mov    edi,0x4
  405227:	mov    ebx,ebp
  405229:	jmp    0x404e13
  40522e:	xchg   ax,ax
  405230:	mov    eax,DWORD PTR [esp+0x38]
  405234:	mov    edx,DWORD PTR [esp+0x90]
  40523b:	test   al,0x4
  40523d:	jne    0x404fca
  405243:	fld    QWORD PTR [edx]
  405245:	lea    eax,[esp+0x34]
  405249:	add    DWORD PTR [esp+0x90],0x8
  405251:	fstp   TBYTE PTR [esp]
  405254:	call   0x4045e0
  405259:	jmp    0x404e92
  40525e:	xchg   ax,ax
  405260:	mov    eax,DWORD PTR [esp+0x38]
  405264:	mov    edx,DWORD PTR [esp+0x90]
  40526b:	test   al,0x4
  40526d:	jne    0x404fff
  405273:	fld    QWORD PTR [edx]
  405275:	lea    eax,[esp+0x34]
  405279:	add    DWORD PTR [esp+0x90],0x8
  405281:	fstp   TBYTE PTR [esp]
  405284:	call   0x404500
  405289:	jmp    0x404e92
  40528e:	xchg   ax,ax
  405290:	mov    eax,DWORD PTR [esp+0x38]
  405294:	mov    edx,DWORD PTR [esp+0x90]
  40529b:	test   al,0x4
  40529d:	jne    0x40505b
  4052a3:	fld    QWORD PTR [edx]
  4052a5:	lea    eax,[esp+0x34]
  4052a9:	add    DWORD PTR [esp+0x90],0x8
  4052b1:	fstp   TBYTE PTR [esp]
  4052b4:	call   0x404450
  4052b9:	jmp    0x404e92
  4052be:	xchg   ax,ax
  4052c0:	mov    DWORD PTR [esp+0x40],0xffffffff
  4052c8:	mov    eax,DWORD PTR [esp+0x90]
  4052cf:	lea    ecx,[esp+0x34]
  4052d3:	mov    edx,0x1
  4052d8:	lea    ebx,[eax+0x4]
  4052db:	mov    eax,DWORD PTR [eax]
  4052dd:	mov    WORD PTR [esp+0x28],ax
  4052e2:	lea    eax,[esp+0x28]
  4052e6:	call   0x4035d0
  4052eb:	mov    DWORD PTR [esp+0x90],ebx
  4052f2:	jmp    0x404e92
  4052f7:	mov    esi,esi
  4052f9:	lea    edi,[edi+eiz*1+0x0]
  405300:	mov    eax,DWORD PTR [esp+0x38]
  405304:	mov    edx,DWORD PTR [esp+0x90]
  40530b:	test   al,0x4
  40530d:	jne    0x40514e
  405313:	fld    QWORD PTR [edx]
  405315:	lea    eax,[esp+0x34]
  405319:	add    DWORD PTR [esp+0x90],0x8
  405321:	fstp   TBYTE PTR [esp]
  405324:	call   0x404770
  405329:	jmp    0x404e92
  40532e:	xchg   ax,ax
  405330:	test   edi,edi
  405332:	jne    0x4054f0
  405338:	movzx  edx,BYTE PTR [ebx+0x1]
  40533c:	or     DWORD PTR [esp+0x38],0x200
  405344:	mov    ebx,ebp
  405346:	jmp    0x404e13
  40534b:	nop
  40534c:	lea    esi,[esi+eiz*1+0x0]
  405350:	cmp    edi,0x1
  405353:	jbe    0x40562d
  405359:	movzx  edx,BYTE PTR [ebx+0x1]
  40535d:	mov    edi,0x4
  405362:	mov    ebx,ebp
  405364:	jmp    0x404e13
  405369:	lea    esi,[esi+eiz*1+0x0]
  405370:	test   edi,edi
  405372:	jne    0x4053ec
  405374:	movzx  edx,BYTE PTR [ebx+0x1]
  405378:	or     DWORD PTR [esp+0x38],0x400
  405380:	mov    ebx,ebp
  405382:	jmp    0x404e13
  405387:	mov    esi,esi
  405389:	lea    edi,[edi+eiz*1+0x0]
  405390:	test   edi,edi
  405392:	jne    0x4053ec
  405394:	movzx  edx,BYTE PTR [ebx+0x1]
  405398:	or     DWORD PTR [esp+0x38],0x100
  4053a0:	mov    ebx,ebp
  4053a2:	jmp    0x404e13
  4053a7:	mov    esi,esi
  4053a9:	lea    edi,[edi+eiz*1+0x0]
  4053b0:	test   edi,edi
  4053b2:	jne    0x4053ec
  4053b4:	movzx  edx,BYTE PTR [ebx+0x1]
  4053b8:	or     DWORD PTR [esp+0x38],0x800
  4053c0:	mov    ebx,ebp
  4053c2:	jmp    0x404e13
  4053c7:	mov    esi,esi
  4053c9:	lea    edi,[edi+eiz*1+0x0]
  4053d0:	test   edi,edi
  4053d2:	jne    0x4053ec
  4053d4:	movzx  edx,BYTE PTR [ebx+0x1]
  4053d8:	or     DWORD PTR [esp+0x38],0x40
  4053dd:	mov    ebx,ebp
  4053df:	jmp    0x404e13
  4053e4:	test   edi,edi
  4053e6:	je     0x405528
  4053ec:	movzx  edx,BYTE PTR [ebx+0x1]
  4053f0:	mov    ebx,ebp
  4053f2:	jmp    0x404e13
  4053f7:	mov    esi,esi
  4053f9:	lea    edi,[edi+eiz*1+0x0]
  405400:	lea    edx,[esp+0x34]
  405404:	call   0x403570
  405409:	jmp    0x404e92
  40540e:	xchg   ax,ax
  405410:	mov    ecx,DWORD PTR [esp+0x14]
  405414:	test   ecx,ecx
  405416:	je     0x405359
  40541c:	test   edi,0xfffffffd
  405422:	jne    0x405510
  405428:	mov    eax,DWORD PTR [esp+0x90]
  40542f:	mov    edx,DWORD PTR [esp+0x14]
  405433:	lea    ecx,[eax+0x4]
  405436:	mov    eax,DWORD PTR [eax]
  405438:	test   eax,eax
  40543a:	mov    DWORD PTR [edx],eax
  40543c:	js     0x405752
  405442:	movzx  edx,BYTE PTR [ebx+0x1]
  405446:	mov    DWORD PTR [esp+0x90],ecx
  40544d:	mov    ebx,ebp
  40544f:	mov    DWORD PTR [esp+0x14],0x0
  405457:	jmp    0x404e13
  40545c:	lea    esi,[esi+eiz*1+0x0]
  405460:	sub    edx,0x30
  405463:	cmp    dl,0x9
  405466:	ja     0x4056ec
  40546c:	cmp    edi,0x3
  40546f:	ja     0x4056ec
  405475:	test   edi,edi
  405477:	jne    0x4054f9
  40547d:	mov    edi,0x1
  405482:	mov    edx,DWORD PTR [esp+0x14]
  405486:	test   edx,edx
  405488:	je     0x4053ec
  40548e:	mov    ecx,DWORD PTR [esp+0x14]
  405492:	mov    edx,DWORD PTR [ecx]
  405494:	test   edx,edx
  405496:	js     0x40564d
  40549c:	lea    edx,[edx+edx*4]
  40549f:	mov    ecx,DWORD PTR [esp+0x14]
  4054a3:	lea    eax,[eax+edx*2-0x30]
  4054a7:	movzx  edx,BYTE PTR [ebx+0x1]
  4054ab:	mov    DWORD PTR [ecx],eax
  4054ad:	jmp    0x4053f0
  4054b2:	mov    eax,DWORD PTR [esp+0x90]
  4054b9:	mov    ebx,DWORD PTR [eax]
  4054bb:	lea    esi,[eax+0x4]
  4054be:	mov    eax,0x40a528
  4054c3:	test   ebx,ebx
  4054c5:	cmove  ebx,eax
  4054c8:	mov    DWORD PTR [esp],ebx
  4054cb:	call   0x4082c8
  4054d0:	lea    ecx,[esp+0x34]
  4054d4:	mov    edx,eax
  4054d6:	mov    eax,ebx
  4054d8:	call   0x4035d0
  4054dd:	mov    DWORD PTR [esp+0x90],esi
  4054e4:	jmp    0x404e92
  4054e9:	lea    esi,[esi+eiz*1+0x0]
  4054f0:	cmp    edi,0x3
  4054f3:	ja     0x4056ec
  4054f9:	cmp    edi,0x2
  4054fc:	mov    edx,0x3
  405501:	cmove  edi,edx
  405504:	jmp    0x405482
  405509:	lea    esi,[esi+eiz*1+0x0]
  405510:	movzx  edx,BYTE PTR [ebx+0x1]
  405514:	mov    DWORD PTR [esp+0x14],0x0
  40551c:	mov    edi,0x4
  405521:	mov    ebx,ebp
  405523:	jmp    0x404e13
  405528:	or     DWORD PTR [esp+0x38],0x1000
  405530:	mov    DWORD PTR [esp+0x28],0x0
  405538:	call   0x408328
  40553d:	lea    ecx,[esp+0x28]
  405541:	mov    DWORD PTR [esp+0x8],0x10
  405549:	mov    DWORD PTR [esp+0xc],ecx
  40554d:	mov    eax,DWORD PTR [eax+0x4]
  405550:	mov    DWORD PTR [esp+0x4],eax
  405554:	lea    eax,[esp+0x26]
  405558:	mov    DWORD PTR [esp],eax
  40555b:	call   0x407e90
  405560:	test   eax,eax
  405562:	jle    0x40556e
  405564:	movzx  edx,WORD PTR [esp+0x26]
  405569:	mov    WORD PTR [esp+0x50],dx
  40556e:	movzx  edx,BYTE PTR [ebx+0x1]
  405572:	mov    DWORD PTR [esp+0x4c],eax
  405576:	mov    ebx,ebp
  405578:	jmp    0x404e13
  40557d:	lea    ebp,[ebx+0x2]
  405580:	movzx  edx,BYTE PTR [ebx+0x2]
  405584:	mov    DWORD PTR [esp+0x10],0x4
  40558c:	mov    edi,0x4
  405591:	mov    ebx,ebp
  405593:	jmp    0x404e13
  405598:	lea    ebp,[ebx+0x2]
  40559b:	movzx  edx,BYTE PTR [ebx+0x2]
  40559f:	mov    DWORD PTR [esp+0x10],0x3
  4055a7:	mov    edi,0x4
  4055ac:	mov    ebx,ebp
  4055ae:	jmp    0x404e13
  4055b3:	mov    edx,DWORD PTR [eax+0x4]
  4055b6:	mov    eax,DWORD PTR [eax]
  4055b8:	mov    DWORD PTR [esp+0x28],eax
  4055bc:	mov    eax,DWORD PTR [esp+0x90]
  4055c3:	mov    DWORD PTR [esp+0x2c],edx
  4055c7:	add    eax,0x8
  4055ca:	mov    DWORD PTR [esp+0x90],eax
  4055d1:	jmp    0x4050d2
  4055d6:	cmp    BYTE PTR [ebx+0x2],0x34
  4055da:	je     0x4057b0
  4055e0:	mov    edx,0x36
  4055e5:	mov    DWORD PTR [esp+0x10],0x2
  4055ed:	mov    edi,0x4
  4055f2:	mov    ebx,ebp
  4055f4:	jmp    0x404e13
  4055f9:	mov    ecx,DWORD PTR [edi]
  4055fb:	mov    ebx,DWORD PTR [edi+0x4]
  4055fe:	add    edi,0x8
  405601:	mov    DWORD PTR [esp+0x90],edi
  405608:	mov    DWORD PTR [esp+0x28],ecx
  40560c:	mov    DWORD PTR [esp+0x2c],ebx
  405610:	jmp    0x4051bb
  405615:	mov    BYTE PTR [eax],dl
  405617:	mov    eax,DWORD PTR [esp+0x90]
  40561e:	add    eax,0x4
  405621:	mov    DWORD PTR [esp+0x90],eax
  405628:	jmp    0x404e92
  40562d:	lea    eax,[esp+0x40]
  405631:	movzx  edx,BYTE PTR [ebx+0x1]
  405635:	mov    DWORD PTR [esp+0x40],0x0
  40563d:	mov    edi,0x2
  405642:	mov    ebx,ebp
  405644:	mov    DWORD PTR [esp+0x14],eax
  405648:	jmp    0x404e13
  40564d:	sub    eax,0x30
  405650:	movzx  edx,BYTE PTR [ebx+0x1]
  405654:	mov    ebx,ebp
  405656:	mov    DWORD PTR [ecx],eax
  405658:	jmp    0x404e13
  40565d:	mov    eax,DWORD PTR [eax]
  40565f:	mov    DWORD PTR [esp+0x28],eax
  405663:	sar    eax,0x1f
  405666:	mov    DWORD PTR [esp+0x2c],eax
  40566a:	mov    eax,DWORD PTR [esp+0x90]
  405671:	add    eax,0x4
  405674:	mov    DWORD PTR [esp+0x90],eax
  40567b:	jmp    0x4050d2
  405680:	mov    WORD PTR [eax],dx
  405683:	mov    eax,DWORD PTR [esp+0x90]
  40568a:	add    eax,0x4
  40568d:	mov    DWORD PTR [esp+0x90],eax
  405694:	jmp    0x404e92
  405699:	mov    edi,DWORD PTR [edi]
  40569b:	mov    DWORD PTR [esp+0x2c],0x0
  4056a3:	mov    DWORD PTR [esp+0x28],edi
  4056a7:	mov    edi,DWORD PTR [esp+0x90]
  4056ae:	add    edi,0x4
  4056b1:	mov    DWORD PTR [esp+0x90],edi
  4056b8:	jmp    0x4051bb
  4056bd:	or     ah,0x2
  4056c0:	mov    DWORD PTR [esp+0x40],0x8
  4056c8:	mov    DWORD PTR [esp+0x38],eax
  4056cc:	jmp    0x404eb2
  4056d1:	lea    ebp,[ebx+0x3]
  4056d4:	movzx  edx,BYTE PTR [ebx+0x3]
  4056d8:	mov    DWORD PTR [esp+0x10],0x2
  4056e0:	mov    edi,0x4
  4056e5:	mov    ebx,ebp
  4056e7:	jmp    0x404e13
  4056ec:	lea    edx,[esp+0x34]
  4056f0:	mov    eax,0x25
  4056f5:	mov    ebp,esi
  4056f7:	call   0x403570
  4056fc:	jmp    0x404e92
  405701:	movsx  eax,WORD PTR [esp+0x28]
  405706:	mov    DWORD PTR [esp+0x90],edx
  40570d:	mov    DWORD PTR [esp+0x28],eax
  405711:	sar    eax,0x1f
  405714:	mov    DWORD PTR [esp+0x2c],eax
  405718:	jmp    0x4050d2
  40571d:	mov    DWORD PTR [eax],edx
  40571f:	mov    eax,DWORD PTR [esp+0x90]
  405726:	add    eax,0x4
  405729:	mov    DWORD PTR [esp+0x90],eax
  405730:	jmp    0x404e92
  405735:	movzx  ecx,WORD PTR [esp+0x28]
  40573a:	mov    DWORD PTR [esp+0x2c],0x0
  405742:	mov    DWORD PTR [esp+0x90],edx
  405749:	mov    DWORD PTR [esp+0x28],ecx
  40574d:	jmp    0x4051bb
  405752:	test   edi,edi
  405754:	jne    0x4057cb
  405756:	or     DWORD PTR [esp+0x38],0x400
  40575e:	neg    DWORD PTR [esp+0x3c]
  405762:	jmp    0x405442
  405767:	movzx  edx,BYTE PTR [esp+0x28]
  40576c:	mov    DWORD PTR [esp+0x2c],0x0
  405774:	mov    DWORD PTR [esp+0x28],edx
  405778:	jmp    0x4051bb
  40577d:	movsx  eax,BYTE PTR [esp+0x28]
  405782:	mov    DWORD PTR [esp+0x28],eax
  405786:	sar    eax,0x1f
  405789:	mov    DWORD PTR [esp+0x2c],eax
  40578d:	jmp    0x4050d2
  405792:	mov    edi,edx
  405794:	sar    edi,0x1f
  405797:	mov    DWORD PTR [eax+0x4],edi
  40579a:	mov    eax,DWORD PTR [esp+0x90]
  4057a1:	add    eax,0x4
  4057a4:	mov    DWORD PTR [esp+0x90],eax
  4057ab:	jmp    0x404e92
  4057b0:	lea    ebp,[ebx+0x3]
  4057b3:	movzx  edx,BYTE PTR [ebx+0x3]
  4057b7:	mov    DWORD PTR [esp+0x10],0x3
  4057bf:	mov    edi,0x4
  4057c4:	mov    ebx,ebp
  4057c6:	jmp    0x404e13
  4057cb:	movzx  edx,BYTE PTR [ebx+0x1]
  4057cf:	mov    DWORD PTR [esp+0x40],0xffffffff
  4057d7:	mov    ebx,ebp
  4057d9:	mov    DWORD PTR [esp+0x90],ecx
  4057e0:	mov    DWORD PTR [esp+0x14],0x0
  4057e8:	jmp    0x404e13
  4057ed:	nop
  4057ee:	nop
  4057ef:	nop
  4057f0:	push   ebx
  4057f1:	xor    ebx,ebx
  4057f3:	sub    esp,0x18
  4057f6:	mov    ecx,DWORD PTR [esp+0x20]
  4057fa:	cmp    ecx,0x13
  4057fd:	jle    0x405810
  4057ff:	mov    eax,0x4
  405804:	add    eax,eax
  405806:	add    ebx,0x1
  405809:	lea    edx,[eax+0xf]
  40580c:	cmp    edx,ecx
  40580e:	jl     0x405804
  405810:	mov    DWORD PTR [esp],ebx
  405813:	call   0x407250
  405818:	mov    DWORD PTR [eax],ebx
  40581a:	add    esp,0x18
  40581d:	add    eax,0x4
  405820:	pop    ebx
  405821:	ret    
  405822:	lea    esi,[esi+eiz*1+0x0]
  405829:	lea    edi,[edi+eiz*1+0x0]
  405830:	push   esi
  405831:	push   ebx
  405832:	sub    esp,0x14
  405835:	mov    eax,DWORD PTR [esp+0x28]
  405839:	mov    ebx,DWORD PTR [esp+0x20]
  40583d:	mov    esi,DWORD PTR [esp+0x24]
  405841:	mov    DWORD PTR [esp],eax
  405844:	call   0x4057f0
  405849:	movzx  edx,BYTE PTR [ebx]
  40584c:	lea    ecx,[ebx+0x1]
  40584f:	test   dl,dl
  405851:	mov    BYTE PTR [eax],dl
  405853:	mov    edx,eax
  405855:	je     0x405870
  405857:	mov    esi,esi
  405859:	lea    edi,[edi+eiz*1+0x0]
  405860:	add    ecx,0x1
  405863:	movzx  ebx,BYTE PTR [ecx-0x1]
  405867:	add    edx,0x1
  40586a:	test   bl,bl
  40586c:	mov    BYTE PTR [edx],bl
  40586e:	jne    0x405860
  405870:	test   esi,esi
  405872:	je     0x405876
  405874:	mov    DWORD PTR [esi],edx
  405876:	add    esp,0x14
  405879:	pop    ebx
  40587a:	pop    esi
  40587b:	ret    
  40587c:	lea    esi,[esi+eiz*1+0x0]
  405880:	mov    eax,DWORD PTR [esp+0x4]
  405884:	mov    edx,0x1
  405889:	mov    ecx,DWORD PTR [eax-0x4]
  40588c:	sub    eax,0x4
  40588f:	shl    edx,cl
  405891:	mov    DWORD PTR [eax+0x4],ecx
  405894:	mov    DWORD PTR [eax+0x8],edx
  405897:	mov    DWORD PTR [esp+0x4],eax
  40589b:	jmp    0x407320
  4058a0:	push   ebp
  4058a1:	push   edi
  4058a2:	push   esi
  4058a3:	push   ebx
  4058a4:	sub    esp,0x4c
  4058a7:	mov    eax,DWORD PTR [esp+0x64]
  4058ab:	mov    edi,DWORD PTR [esp+0x60]
  4058af:	mov    edx,DWORD PTR [eax+0x10]
  4058b2:	xor    eax,eax
  4058b4:	cmp    edx,DWORD PTR [edi+0x10]
  4058b7:	jg     0x405a93
  4058bd:	mov    eax,DWORD PTR [esp+0x64]
  4058c1:	mov    esi,DWORD PTR [esp+0x60]
  4058c5:	add    eax,0x14
  4058c8:	add    esi,0x14
  4058cb:	mov    edi,eax
  4058cd:	mov    DWORD PTR [esp+0x38],eax
  4058d1:	lea    eax,[edx-0x1]
  4058d4:	xor    edx,edx
  4058d6:	mov    DWORD PTR [esp+0x2c],esi
  4058da:	mov    DWORD PTR [esp+0x30],eax
  4058de:	shl    eax,0x2
  4058e1:	add    edi,eax
  4058e3:	add    eax,esi
  4058e5:	mov    DWORD PTR [esp+0x28],edi
  4058e9:	mov    edi,DWORD PTR [edi]
  4058eb:	mov    DWORD PTR [esp+0x3c],eax
  4058ef:	mov    eax,DWORD PTR [eax]
  4058f1:	lea    ecx,[edi+0x1]
  4058f4:	mov    DWORD PTR [esp+0x10],edi
  4058f8:	div    ecx
  4058fa:	test   eax,eax
  4058fc:	mov    ebp,eax
  4058fe:	mov    DWORD PTR [esp+0x34],eax
  405902:	je     0x4059cf
  405908:	mov    edi,DWORD PTR [esp+0x38]
  40590c:	mov    DWORD PTR [esp+0x20],0x0
  405914:	mov    DWORD PTR [esp+0x24],0x0
  40591c:	mov    DWORD PTR [esp+0x10],0x0
  405924:	mov    DWORD PTR [esp+0x14],0x0
  40592c:	lea    esi,[esi+eiz*1+0x0]
  405930:	add    edi,0x4
  405933:	mov    eax,ebp
  405935:	mov    ecx,DWORD PTR [esi]
  405937:	mul    DWORD PTR [edi-0x4]
  40593a:	mov    DWORD PTR [esp+0x1c],0x0
  405942:	add    eax,DWORD PTR [esp+0x20]
  405946:	adc    edx,DWORD PTR [esp+0x24]
  40594a:	xor    ebx,ebx
  40594c:	mov    DWORD PTR [esp+0x24],ebx
  405950:	xor    ebx,ebx
  405952:	mov    DWORD PTR [esp+0x18],eax
  405956:	sub    ecx,DWORD PTR [esp+0x18]
  40595a:	sbb    ebx,DWORD PTR [esp+0x1c]
  40595e:	sub    ecx,DWORD PTR [esp+0x10]
  405962:	sbb    ebx,DWORD PTR [esp+0x14]
  405966:	add    esi,0x4
  405969:	mov    DWORD PTR [esp+0x20],edx
  40596d:	mov    DWORD PTR [esp+0x14],0x0
  405975:	mov    eax,ebx
  405977:	mov    DWORD PTR [esi-0x4],ecx
  40597a:	and    eax,0x1
  40597d:	cmp    DWORD PTR [esp+0x28],edi
  405981:	mov    DWORD PTR [esp+0x10],eax
  405985:	jae    0x405930
  405987:	mov    eax,DWORD PTR [esp+0x3c]
  40598b:	mov    edx,DWORD PTR [eax]
  40598d:	test   edx,edx
  40598f:	jne    0x4059cf
  405991:	mov    esi,DWORD PTR [esp+0x2c]
  405995:	mov    edi,eax
  405997:	sub    eax,0x4
  40599a:	cmp    esi,eax
  40599c:	jae    0x4059c4
  40599e:	mov    edi,DWORD PTR [edi-0x4]
  4059a1:	test   edi,edi
  4059a3:	jne    0x4059c4
  4059a5:	mov    ecx,esi
  4059a7:	mov    edx,DWORD PTR [esp+0x30]
  4059ab:	jmp    0x4059b6
  4059ad:	lea    esi,[esi+0x0]
  4059b0:	mov    ebx,DWORD PTR [eax]
  4059b2:	test   ebx,ebx
  4059b4:	jne    0x4059c0
  4059b6:	sub    eax,0x4
  4059b9:	sub    edx,0x1
  4059bc:	cmp    ecx,eax
  4059be:	jb     0x4059b0
  4059c0:	mov    DWORD PTR [esp+0x30],edx
  4059c4:	mov    eax,DWORD PTR [esp+0x60]
  4059c8:	mov    edi,DWORD PTR [esp+0x30]
  4059cc:	mov    DWORD PTR [eax+0x10],edi
  4059cf:	mov    eax,DWORD PTR [esp+0x64]
  4059d3:	mov    DWORD PTR [esp+0x4],eax
  4059d7:	mov    eax,DWORD PTR [esp+0x60]
  4059db:	mov    DWORD PTR [esp],eax
  4059de:	call   0x4078d0
  4059e3:	test   eax,eax
  4059e5:	js     0x405a8f
  4059eb:	xor    esi,esi
  4059ed:	xor    edi,edi
  4059ef:	lea    eax,[ebp+0x1]
  4059f2:	mov    DWORD PTR [esp+0x10],esi
  4059f6:	mov    DWORD PTR [esp+0x14],edi
  4059fa:	mov    ebp,DWORD PTR [esp+0x2c]
  4059fe:	mov    esi,DWORD PTR [esp+0x38]
  405a02:	mov    edi,DWORD PTR [esp+0x28]
  405a06:	mov    DWORD PTR [esp+0x34],eax
  405a0a:	lea    esi,[esi+0x0]
  405a10:	add    esi,0x4
  405a13:	mov    eax,DWORD PTR [ebp+0x0]
  405a16:	mov    ecx,DWORD PTR [esi-0x4]
  405a19:	xor    ebx,ebx
  405a1b:	xor    edx,edx
  405a1d:	sub    eax,ecx
  405a1f:	sbb    edx,ebx
  405a21:	sub    eax,DWORD PTR [esp+0x10]
  405a25:	sbb    edx,DWORD PTR [esp+0x14]
  405a29:	add    ebp,0x4
  405a2c:	mov    DWORD PTR [esp+0x14],0x0
  405a34:	mov    ebx,edx
  405a36:	mov    DWORD PTR [ebp-0x4],eax
  405a39:	and    ebx,0x1
  405a3c:	cmp    edi,esi
  405a3e:	mov    DWORD PTR [esp+0x10],ebx
  405a42:	jae    0x405a10
  405a44:	mov    edi,DWORD PTR [esp+0x30]
  405a48:	mov    eax,DWORD PTR [esp+0x2c]
  405a4c:	lea    edx,[eax+edi*4]
  405a4f:	mov    edi,DWORD PTR [edx]
  405a51:	test   edi,edi
  405a53:	jne    0x405a8f
  405a55:	mov    edi,DWORD PTR [esp+0x2c]
  405a59:	lea    eax,[edx-0x4]
  405a5c:	cmp    edi,eax
  405a5e:	jae    0x405a84
  405a60:	mov    esi,DWORD PTR [edx-0x4]
  405a63:	test   esi,esi
  405a65:	jne    0x405a84
  405a67:	mov    ecx,edi
  405a69:	mov    edx,DWORD PTR [esp+0x30]
  405a6d:	jmp    0x405a76
  405a6f:	nop
  405a70:	mov    ebx,DWORD PTR [eax]
  405a72:	test   ebx,ebx
  405a74:	jne    0x405a80
  405a76:	sub    eax,0x4
  405a79:	sub    edx,0x1
  405a7c:	cmp    ecx,eax
  405a7e:	jb     0x405a70
  405a80:	mov    DWORD PTR [esp+0x30],edx
  405a84:	mov    eax,DWORD PTR [esp+0x60]
  405a88:	mov    edi,DWORD PTR [esp+0x30]
  405a8c:	mov    DWORD PTR [eax+0x10],edi
  405a8f:	mov    eax,DWORD PTR [esp+0x34]
  405a93:	add    esp,0x4c
  405a96:	pop    ebx
  405a97:	pop    esi
  405a98:	pop    edi
  405a99:	pop    ebp
  405a9a:	ret    
  405a9b:	nop
  405a9c:	nop
  405a9d:	nop
  405a9e:	nop
  405a9f:	nop
  405aa0:	push   ebp
  405aa1:	push   edi
  405aa2:	push   esi
  405aa3:	push   ebx
  405aa4:	sub    esp,0x7c
  405aa7:	mov    eax,DWORD PTR [esp+0x9c]
  405aae:	mov    edi,DWORD PTR [esp+0x9c]
  405ab5:	mov    ebx,DWORD PTR [eax]
  405ab7:	mov    eax,ebx
  405ab9:	and    eax,0xffffffcf
  405abc:	mov    DWORD PTR [edi],eax
  405abe:	mov    eax,ebx
  405ac0:	and    eax,0x7
  405ac3:	cmp    eax,0x4
  405ac6:	ja     0x406fd3
  405acc:	jmp    DWORD PTR [eax*4+0x40a6d0]
  405ad3:	mov    eax,DWORD PTR [esp+0x90]
  405ada:	xor    edx,edx
  405adc:	mov    esi,DWORD PTR [eax]
  405ade:	cmp    esi,0x20
  405ae1:	jle    0x405af9
  405ae3:	mov    eax,0x20
  405ae8:	nop
  405ae9:	lea    esi,[esi+eiz*1+0x0]
  405af0:	add    eax,eax
  405af2:	add    edx,0x1
  405af5:	cmp    esi,eax
  405af7:	jg     0x405af0
  405af9:	mov    DWORD PTR [esp],edx
  405afc:	call   0x407250
  405b01:	mov    edi,DWORD PTR [esp+0x98]
  405b08:	mov    ebp,eax
  405b0a:	lea    eax,[esi-0x1]
  405b0d:	lea    ecx,[ebp+0x14]
  405b10:	mov    edx,DWORD PTR [esp+0x98]
  405b17:	sar    eax,0x5
  405b1a:	lea    edi,[edi+eax*4]
  405b1d:	mov    DWORD PTR [esp+0x10],ecx
  405b21:	mov    eax,ecx
  405b23:	mov    ecx,DWORD PTR [edx]
  405b25:	add    edx,0x4
  405b28:	add    eax,0x4
  405b2b:	cmp    edi,edx
  405b2d:	mov    DWORD PTR [eax-0x4],ecx
  405b30:	jae    0x405b23
  405b32:	mov    ecx,DWORD PTR [esp+0x10]
  405b36:	sub    eax,ecx
  405b38:	sar    eax,0x2
  405b3b:	jmp    0x405b4a
  405b3d:	lea    esi,[esi+0x0]
  405b40:	test   edx,edx
  405b42:	mov    eax,edx
  405b44:	je     0x406011
  405b4a:	lea    edx,[eax-0x1]
  405b4d:	mov    edi,DWORD PTR [ecx+edx*4]
  405b50:	test   edi,edi
  405b52:	je     0x405b40
  405b54:	bsr    edx,DWORD PTR [ebp+eax*4+0x10]
  405b59:	mov    DWORD PTR [ebp+0x10],eax
  405b5c:	shl    eax,0x5
  405b5f:	xor    edx,0x1f
  405b62:	sub    eax,edx
  405b64:	mov    DWORD PTR [esp+0x28],eax
  405b68:	mov    DWORD PTR [esp],ebp
  405b6b:	call   0x407100
  405b70:	mov    edi,DWORD PTR [esp+0x94]
  405b77:	test   eax,eax
  405b79:	mov    DWORD PTR [esp+0x6c],eax
  405b7d:	mov    DWORD PTR [esp+0x30],edi
  405b81:	jne    0x406025
  405b87:	mov    ecx,DWORD PTR [ebp+0x10]
  405b8a:	test   ecx,ecx
  405b8c:	jne    0x405c40
  405b92:	mov    DWORD PTR [esp],ebp
  405b95:	call   0x407320
  405b9a:	mov    eax,DWORD PTR [esp+0xa8]
  405ba1:	mov    DWORD PTR [eax],0x1
  405ba7:	mov    eax,DWORD PTR [esp+0xac]
  405bae:	mov    DWORD PTR [esp+0x8],0x1
  405bb6:	mov    DWORD PTR [esp],0x40a6cd
  405bbd:	mov    DWORD PTR [esp+0x4],eax
  405bc1:	call   0x405830
  405bc6:	add    esp,0x7c
  405bc9:	pop    ebx
  405bca:	pop    esi
  405bcb:	pop    edi
  405bcc:	pop    ebp
  405bcd:	ret    
  405bce:	xchg   ax,ax
  405bd0:	mov    eax,DWORD PTR [esp+0xa8]
  405bd7:	mov    DWORD PTR [eax],0xffff8000
  405bdd:	mov    eax,DWORD PTR [esp+0xac]
  405be4:	mov    DWORD PTR [esp+0x8],0x3
  405bec:	mov    DWORD PTR [esp],0x40a6c9
  405bf3:	mov    DWORD PTR [esp+0x4],eax
  405bf7:	call   0x405830
  405bfc:	add    esp,0x7c
  405bff:	pop    ebx
  405c00:	pop    esi
  405c01:	pop    edi
  405c02:	pop    ebp
  405c03:	ret    
  405c04:	mov    eax,DWORD PTR [esp+0xa8]
  405c0b:	mov    DWORD PTR [eax],0xffff8000
  405c11:	mov    eax,DWORD PTR [esp+0xac]
  405c18:	mov    DWORD PTR [esp+0x8],0x8
  405c20:	mov    DWORD PTR [esp],0x40a6c0
  405c27:	mov    DWORD PTR [esp+0x4],eax
  405c2b:	call   0x405830
  405c30:	add    esp,0x7c
  405c33:	pop    ebx
  405c34:	pop    esi
  405c35:	pop    edi
  405c36:	pop    ebp
  405c37:	ret    
  405c38:	nop
  405c39:	lea    esi,[esi+eiz*1+0x0]
  405c40:	lea    eax,[esp+0x6c]
  405c44:	mov    DWORD PTR [esp],ebp
  405c47:	mov    DWORD PTR [esp+0x4],eax
  405c4b:	call   0x407ac0
  405c50:	fstp   QWORD PTR [esp+0x10]
  405c54:	mov    edx,DWORD PTR [esp+0x14]
  405c58:	mov    eax,DWORD PTR [esp+0x10]
  405c5c:	mov    edi,DWORD PTR [esp+0x30]
  405c60:	mov    ecx,DWORD PTR [esp+0x28]
  405c64:	and    edx,0xfffff
  405c6a:	mov    DWORD PTR [esp+0x10],eax
  405c6e:	or     edx,0x3ff00000
  405c74:	lea    ecx,[edi+ecx*1-0x1]
  405c78:	mov    DWORD PTR [esp+0x14],edx
  405c7c:	fld    QWORD PTR [esp+0x10]
  405c80:	mov    DWORD PTR [esp+0x1c],ecx
  405c84:	mov    edi,ecx
  405c86:	sar    edi,0x1f
  405c89:	fsub   DWORD PTR ds:0x40a6e4
  405c8f:	mov    eax,edi
  405c91:	xor    eax,ecx
  405c93:	sub    eax,edi
  405c95:	sub    eax,0x435
  405c9a:	test   eax,eax
  405c9c:	fmul   QWORD PTR ds:0x40a6e8
  405ca2:	fld    QWORD PTR ds:0x40a6f0
  405ca8:	faddp  st(1),st
  405caa:	fild   DWORD PTR [esp+0x1c]
  405cae:	fmul   QWORD PTR ds:0x40a6f8
  405cb4:	faddp  st(1),st
  405cb6:	jle    0x405cc8
  405cb8:	mov    DWORD PTR [esp+0x1c],eax
  405cbc:	fild   DWORD PTR [esp+0x1c]
  405cc0:	fmul   QWORD PTR ds:0x40a700
  405cc6:	faddp  st(1),st
  405cc8:	fnstcw WORD PTR [esp+0x5e]
  405ccc:	movzx  eax,WORD PTR [esp+0x5e]
  405cd1:	mov    ah,0xc
  405cd3:	mov    WORD PTR [esp+0x5c],ax
  405cd8:	fldcw  WORD PTR [esp+0x5c]
  405cdc:	fist   DWORD PTR [esp+0x1c]
  405ce0:	fldcw  WORD PTR [esp+0x5e]
  405ce4:	fldz   
  405ce6:	fucomip st,st(1)
  405ce8:	ja     0x406550
  405cee:	fstp   st(0)
  405cf0:	mov    eax,ecx
  405cf2:	mov    DWORD PTR [esp+0x44],0x1
  405cfa:	shl    eax,0x14
  405cfd:	add    eax,edx
  405cff:	cmp    DWORD PTR [esp+0x1c],0x16
  405d04:	mov    DWORD PTR [esp+0x14],eax
  405d08:	ja     0x405d32
  405d0a:	mov    eax,DWORD PTR [esp+0x1c]
  405d0e:	fld    QWORD PTR [eax*8+0x40a780]
  405d15:	fld    QWORD PTR [esp+0x10]
  405d19:	fxch   st(1)
  405d1b:	fucomip st,st(1)
  405d1d:	fstp   st(0)
  405d1f:	jbe    0x406070
  405d25:	sub    DWORD PTR [esp+0x1c],0x1
  405d2a:	mov    DWORD PTR [esp+0x44],0x0
  405d32:	mov    eax,DWORD PTR [esp+0x28]
  405d36:	mov    DWORD PTR [esp+0x34],0x0
  405d3e:	sub    eax,ecx
  405d40:	sub    eax,0x1
  405d43:	mov    edi,eax
  405d45:	js     0x406540
  405d4b:	mov    eax,DWORD PTR [esp+0x1c]
  405d4f:	test   eax,eax
  405d51:	js     0x406520
  405d57:	add    edi,eax
  405d59:	mov    DWORD PTR [esp+0x50],eax
  405d5d:	mov    DWORD PTR [esp+0x3c],0x0
  405d65:	cmp    DWORD PTR [esp+0xa0],0x9
  405d6d:	ja     0x406050
  405d73:	cmp    DWORD PTR [esp+0xa0],0x5
  405d7b:	jle    0x40605b
  405d81:	sub    DWORD PTR [esp+0xa0],0x4
  405d89:	xor    eax,eax
  405d8b:	cmp    DWORD PTR [esp+0xa0],0x3
  405d93:	je     0x406737
  405d99:	jle    0x406470
  405d9f:	cmp    DWORD PTR [esp+0xa0],0x4
  405da7:	mov    DWORD PTR [esp+0x40],0x1
  405daf:	je     0x406080
  405db5:	cmp    DWORD PTR [esp+0xa0],0x5
  405dbd:	jne    0x406486
  405dc3:	mov    ecx,DWORD PTR [esp+0x1c]
  405dc7:	add    ecx,DWORD PTR [esp+0xa4]
  405dce:	mov    DWORD PTR [esp+0x54],ecx
  405dd2:	add    ecx,0x1
  405dd5:	test   ecx,ecx
  405dd7:	mov    DWORD PTR [esp+0x2c],ecx
  405ddb:	jle    0x406988
  405de1:	cmp    ecx,0xe
  405de4:	mov    DWORD PTR [esp+0x6c],ecx
  405de8:	setbe  dl
  405deb:	and    eax,edx
  405ded:	mov    BYTE PTR [esp+0x48],al
  405df1:	mov    eax,ecx
  405df3:	mov    DWORD PTR [esp],eax
  405df6:	call   0x4057f0
  405dfb:	mov    DWORD PTR [esp+0x38],eax
  405dff:	mov    eax,DWORD PTR [esp+0x90]
  405e06:	mov    eax,DWORD PTR [eax+0xc]
  405e09:	sub    eax,0x1
  405e0c:	mov    DWORD PTR [esp+0x20],eax
  405e10:	je     0x405e36
  405e12:	mov    ecx,DWORD PTR [esp+0x20]
  405e16:	mov    eax,0x2
  405e1b:	test   ecx,ecx
  405e1d:	cmovns eax,ecx
  405e20:	and    ebx,0x8
  405e23:	mov    DWORD PTR [esp+0x20],eax
  405e27:	je     0x405e36
  405e29:	mov    eax,0x3
  405e2e:	sub    eax,DWORD PTR [esp+0x20]
  405e32:	mov    DWORD PTR [esp+0x20],eax
  405e36:	cmp    BYTE PTR [esp+0x48],0x0
  405e3b:	je     0x406135
  405e41:	mov    eax,DWORD PTR [esp+0x20]
  405e45:	or     eax,DWORD PTR [esp+0x1c]
  405e49:	jne    0x406135
  405e4f:	mov    eax,DWORD PTR [esp+0x44]
  405e53:	fld    QWORD PTR [esp+0x10]
  405e57:	mov    DWORD PTR [esp+0x6c],0x0
  405e5f:	fst    QWORD PTR [esp+0x20]
  405e63:	test   eax,eax
  405e65:	je     0x405e75
  405e67:	fld1   
  405e69:	fucomip st,st(1)
  405e6b:	ja     0x406df0
  405e71:	fstp   st(0)
  405e73:	jmp    0x405e77
  405e75:	fstp   st(0)
  405e77:	fld    QWORD PTR [esp+0x20]
  405e7b:	fadd   st,st(0)
  405e7d:	fadd   DWORD PTR ds:0x40a71c
  405e83:	fstp   QWORD PTR [esp+0x48]
  405e87:	mov    eax,DWORD PTR [esp+0x48]
  405e8b:	mov    DWORD PTR [esp+0x10],eax
  405e8f:	mov    eax,DWORD PTR [esp+0x4c]
  405e93:	sub    eax,0x3400000
  405e98:	mov    DWORD PTR [esp+0x14],eax
  405e9c:	mov    eax,DWORD PTR [esp+0x2c]
  405ea0:	test   eax,eax
  405ea2:	je     0x4060e1
  405ea8:	mov    ecx,DWORD PTR [esp+0x2c]
  405eac:	fld    QWORD PTR [esp+0x20]
  405eb0:	mov    DWORD PTR [esp+0x48],0x0
  405eb8:	mov    ebx,DWORD PTR [esp+0x40]
  405ebc:	test   ebx,ebx
  405ebe:	je     0x406a7d
  405ec4:	fld    DWORD PTR ds:0x40a724
  405eca:	fnstcw WORD PTR [esp+0x5e]
  405ece:	movzx  eax,WORD PTR [esp+0x5e]
  405ed3:	mov    edx,DWORD PTR [esp+0x38]
  405ed7:	mov    DWORD PTR [esp+0x6c],0x0
  405edf:	fdiv   QWORD PTR [ecx*8+0x40a778]
  405ee6:	mov    ah,0xc
  405ee8:	lea    ebx,[edx+0x1]
  405eeb:	mov    WORD PTR [esp+0x5c],ax
  405ef0:	fsub   QWORD PTR [esp+0x10]
  405ef4:	fxch   st(1)
  405ef6:	fldcw  WORD PTR [esp+0x5c]
  405efa:	fist   DWORD PTR [esp+0x10]
  405efe:	fldcw  WORD PTR [esp+0x5e]
  405f02:	movzx  eax,BYTE PTR [esp+0x10]
  405f07:	fild   DWORD PTR [esp+0x10]
  405f0b:	add    eax,0x30
  405f0e:	fsubp  st(1),st
  405f10:	fxch   st(1)
  405f12:	mov    BYTE PTR [edx],al
  405f14:	fucomi st,st(1)
  405f16:	ja     0x405fad
  405f1c:	fld    st(1)
  405f1e:	fsubr  DWORD PTR ds:0x40a710
  405f24:	fxch   st(1)
  405f26:	fucomi st,st(1)
  405f28:	fstp   st(1)
  405f2a:	ja     0x406b55
  405f30:	mov    eax,DWORD PTR [esp+0x6c]
  405f34:	add    eax,0x1
  405f37:	cmp    ecx,eax
  405f39:	mov    DWORD PTR [esp+0x6c],eax
  405f3d:	jle    0x406109
  405f43:	fld    DWORD PTR ds:0x40a714
  405f49:	jmp    0x405f7b
  405f4b:	nop
  405f4c:	lea    esi,[esi+eiz*1+0x0]
  405f50:	fld    st(1)
  405f52:	fsubr  DWORD PTR ds:0x40a710
  405f58:	fxch   st(1)
  405f5a:	fucomi st,st(1)
  405f5c:	fstp   st(1)
  405f5e:	ja     0x406b5b
  405f64:	mov    eax,DWORD PTR [esp+0x6c]
  405f68:	add    eax,0x1
  405f6b:	cmp    ecx,eax
  405f6d:	mov    DWORD PTR [esp+0x6c],eax
  405f71:	jle    0x40610f
  405f77:	fxch   st(1)
  405f79:	fxch   st(2)
  405f7b:	fmul   st(1),st
  405f7d:	add    ebx,0x1
  405f80:	fmul   st(2),st
  405f82:	fxch   st(2)
  405f84:	fldcw  WORD PTR [esp+0x5c]
  405f88:	fist   DWORD PTR [esp+0x10]
  405f8c:	fldcw  WORD PTR [esp+0x5e]
  405f90:	movzx  eax,BYTE PTR [esp+0x10]
  405f95:	fild   DWORD PTR [esp+0x10]
  405f99:	add    eax,0x30
  405f9c:	fsubp  st(1),st
  405f9e:	fxch   st(1)
  405fa0:	mov    BYTE PTR [ebx-0x1],al
  405fa3:	fucomi st,st(1)
  405fa5:	jbe    0x405f50
  405fa7:	fstp   st(0)
  405fa9:	fstp   st(1)
  405fab:	jmp    0x405faf
  405fad:	fstp   st(0)
  405faf:	fldz   
  405fb1:	fxch   st(1)
  405fb3:	mov    eax,DWORD PTR [esp+0x48]
  405fb7:	fucomip st,st(1)
  405fb9:	fstp   st(0)
  405fbb:	jp     0x405fc3
  405fbd:	je     0x40696a
  405fc3:	add    eax,0x1
  405fc6:	mov    edi,0x10
  405fcb:	mov    DWORD PTR [esp+0x1c],eax
  405fcf:	nop
  405fd0:	mov    DWORD PTR [esp],ebp
  405fd3:	call   0x407320
  405fd8:	mov    eax,DWORD PTR [esp+0xa8]
  405fdf:	mov    esi,DWORD PTR [esp+0x1c]
  405fe3:	mov    BYTE PTR [ebx],0x0
  405fe6:	mov    DWORD PTR [eax],esi
  405fe8:	mov    eax,DWORD PTR [esp+0xac]
  405fef:	test   eax,eax
  405ff1:	je     0x405ffc
  405ff3:	mov    eax,DWORD PTR [esp+0xac]
  405ffa:	mov    DWORD PTR [eax],ebx
  405ffc:	mov    eax,DWORD PTR [esp+0x9c]
  406003:	or     DWORD PTR [eax],edi
  406005:	mov    eax,DWORD PTR [esp+0x38]
  406009:	add    esp,0x7c
  40600c:	pop    ebx
  40600d:	pop    esi
  40600e:	pop    edi
  40600f:	pop    ebp
  406010:	ret    
  406011:	mov    DWORD PTR [ebp+0x10],0x0
  406018:	mov    DWORD PTR [esp+0x28],0x0
  406020:	jmp    0x405b68
  406025:	mov    DWORD PTR [esp+0x4],eax
  406029:	mov    DWORD PTR [esp],ebp
  40602c:	call   0x406fe0
  406031:	mov    eax,DWORD PTR [esp+0x6c]
  406035:	mov    edi,DWORD PTR [esp+0x94]
  40603c:	sub    DWORD PTR [esp+0x28],eax
  406040:	add    edi,eax
  406042:	mov    DWORD PTR [esp+0x30],edi
  406046:	jmp    0x405b87
  40604b:	nop
  40604c:	lea    esi,[esi+eiz*1+0x0]
  406050:	mov    DWORD PTR [esp+0xa0],0x0
  40605b:	add    ecx,0x3fe
  406061:	cmp    ecx,0x7f7
  406067:	setbe  al
  40606a:	jmp    0x405d8b
  40606f:	nop
  406070:	mov    DWORD PTR [esp+0x44],0x0
  406078:	jmp    0x405d32
  40607d:	lea    esi,[esi+0x0]
  406080:	mov    edx,DWORD PTR [esp+0xa4]
  406087:	test   edx,edx
  406089:	jle    0x4069a8
  40608f:	cmp    DWORD PTR [esp+0xa4],0xe
  406097:	setbe  dl
  40609a:	mov    ecx,DWORD PTR [esp+0xa4]
  4060a1:	and    edx,eax
  4060a3:	mov    BYTE PTR [esp+0x48],dl
  4060a7:	mov    DWORD PTR [esp+0x6c],ecx
  4060ab:	mov    eax,ecx
  4060ad:	mov    DWORD PTR [esp+0x54],ecx
  4060b1:	mov    DWORD PTR [esp+0x2c],ecx
  4060b5:	jmp    0x405df3
  4060ba:	fstp   st(0)
  4060bc:	fld    QWORD PTR [esp+0x20]
  4060c0:	fadd   st,st(0)
  4060c2:	fadd   DWORD PTR ds:0x40a71c
  4060c8:	fstp   QWORD PTR [esp+0x48]
  4060cc:	mov    eax,DWORD PTR [esp+0x48]
  4060d0:	mov    DWORD PTR [esp+0x10],eax
  4060d4:	mov    eax,DWORD PTR [esp+0x4c]
  4060d8:	sub    eax,0x3400000
  4060dd:	mov    DWORD PTR [esp+0x14],eax
  4060e1:	fld    QWORD PTR [esp+0x20]
  4060e5:	fsub   DWORD PTR ds:0x40a720
  4060eb:	fld    QWORD PTR [esp+0x10]
  4060ef:	fxch   st(1)
  4060f1:	fucomi st,st(1)
  4060f3:	ja     0x406a62
  4060f9:	fxch   st(1)
  4060fb:	fchs   
  4060fd:	fucomip st,st(1)
  4060ff:	fstp   st(0)
  406101:	ja     0x4064f8
  406107:	jmp    0x40611d
  406109:	fstp   st(0)
  40610b:	fstp   st(0)
  40610d:	jmp    0x40611d
  40610f:	fstp   st(0)
  406111:	fstp   st(0)
  406113:	fstp   st(0)
  406115:	jmp    0x40611d
  406117:	fstp   st(0)
  406119:	jmp    0x40611d
  40611b:	fstp   st(0)
  40611d:	mov    eax,DWORD PTR [esp+0x20]
  406121:	mov    edx,DWORD PTR [esp+0x24]
  406125:	mov    DWORD PTR [esp+0x20],0x0
  40612d:	mov    DWORD PTR [esp+0x10],eax
  406131:	mov    DWORD PTR [esp+0x14],edx
  406135:	mov    ecx,DWORD PTR [esp+0x30]
  406139:	test   ecx,ecx
  40613b:	js     0x4061e0
  406141:	mov    ebx,DWORD PTR [esp+0x90]
  406148:	mov    eax,DWORD PTR [esp+0x1c]
  40614c:	cmp    eax,DWORD PTR [ebx+0x14]
  40614f:	jg     0x4061e0
  406155:	mov    esi,DWORD PTR [esp+0x2c]
  406159:	fld    QWORD PTR [eax*8+0x40a780]
  406160:	test   esi,esi
  406162:	jg     0x40689f
  406168:	mov    eax,DWORD PTR [esp+0xa4]
  40616f:	shr    eax,0x1f
  406172:	test   al,al
  406174:	je     0x40689f
  40617a:	test   esi,esi
  40617c:	jne    0x4064f6
  406182:	fmul   DWORD PTR ds:0x40a720
  406188:	fld    QWORD PTR [esp+0x10]
  40618c:	fxch   st(1)
  40618e:	fucomip st,st(1)
  406190:	fstp   st(0)
  406192:	jae    0x4064f8
  406198:	mov    eax,DWORD PTR [esp+0x1c]
  40619c:	mov    DWORD PTR [esp+0x10],0x0
  4061a4:	xor    esi,esi
  4061a6:	add    eax,0x2
  4061a9:	mov    DWORD PTR [esp+0x1c],eax
  4061ad:	mov    eax,DWORD PTR [esp+0x38]
  4061b1:	mov    edi,0x20
  4061b6:	lea    ebx,[eax+0x1]
  4061b9:	mov    BYTE PTR [eax],0x31
  4061bc:	mov    eax,DWORD PTR [esp+0x10]
  4061c0:	mov    DWORD PTR [esp],eax
  4061c3:	call   0x407320
  4061c8:	test   esi,esi
  4061ca:	je     0x405fd0
  4061d0:	mov    DWORD PTR [esp],esi
  4061d3:	call   0x407320
  4061d8:	jmp    0x405fd0
  4061dd:	lea    esi,[esi+0x0]
  4061e0:	mov    eax,DWORD PTR [esp+0x40]
  4061e4:	test   eax,eax
  4061e6:	je     0x406570
  4061ec:	mov    ebx,DWORD PTR [esp+0x90]
  4061f3:	sub    esi,DWORD PTR [esp+0x28]
  4061f7:	mov    ecx,DWORD PTR [esp+0x30]
  4061fb:	mov    edx,DWORD PTR [ebx+0x4]
  4061fe:	lea    eax,[esi+0x1]
  406201:	sub    ecx,esi
  406203:	cmp    ecx,edx
  406205:	mov    DWORD PTR [esp+0x6c],eax
  406209:	jge    0x40623d
  40620b:	mov    esi,DWORD PTR [esp+0xa0]
  406212:	lea    ecx,[esi-0x3]
  406215:	and    ecx,0xfffffffd
  406218:	je     0x40623d
  40621a:	mov    eax,DWORD PTR [esp+0x30]
  40621e:	mov    esi,DWORD PTR [esp+0x2c]
  406222:	sub    eax,edx
  406224:	add    eax,0x1
  406227:	test   esi,esi
  406229:	setg   cl
  40622c:	cmp    esi,eax
  40622e:	mov    DWORD PTR [esp+0x6c],eax
  406232:	setl   dl
  406235:	test   cl,dl
  406237:	je     0x4069bd
  40623d:	cmp    DWORD PTR [esp+0xa0],0x1
  406245:	jle    0x4069bd
  40624b:	mov    esi,DWORD PTR [esp+0x3c]
  40624f:	mov    eax,DWORD PTR [esp+0x2c]
  406253:	mov    edx,esi
  406255:	sub    eax,0x1
  406258:	sub    edx,eax
  40625a:	cmp    esi,eax
  40625c:	jge    0x40626e
  40625e:	mov    edx,eax
  406260:	sub    edx,DWORD PTR [esp+0x3c]
  406264:	mov    DWORD PTR [esp+0x3c],eax
  406268:	add    DWORD PTR [esp+0x50],edx
  40626c:	xor    edx,edx
  40626e:	mov    eax,DWORD PTR [esp+0x2c]
  406272:	test   eax,eax
  406274:	js     0x406ce0
  40627a:	mov    ebx,DWORD PTR [esp+0x34]
  40627e:	mov    DWORD PTR [esp+0x6c],eax
  406282:	mov    DWORD PTR [esp],0x1
  406289:	mov    DWORD PTR [esp+0x10],edx
  40628d:	add    edi,eax
  40628f:	add    DWORD PTR [esp+0x34],eax
  406293:	call   0x407480
  406298:	mov    edx,DWORD PTR [esp+0x10]
  40629c:	mov    esi,eax
  40629e:	test   edi,edi
  4062a0:	jle    0x4062b9
  4062a2:	test   ebx,ebx
  4062a4:	jle    0x4062b9
  4062a6:	cmp    edi,ebx
  4062a8:	mov    eax,ebx
  4062aa:	cmovle eax,edi
  4062ad:	sub    DWORD PTR [esp+0x34],eax
  4062b1:	mov    DWORD PTR [esp+0x6c],eax
  4062b5:	sub    ebx,eax
  4062b7:	sub    edi,eax
  4062b9:	mov    eax,DWORD PTR [esp+0x3c]
  4062bd:	test   eax,eax
  4062bf:	jle    0x406311
  4062c1:	mov    ecx,DWORD PTR [esp+0x40]
  4062c5:	test   ecx,ecx
  4062c7:	je     0x406720
  4062cd:	test   edx,edx
  4062cf:	jle    0x406305
  4062d1:	mov    DWORD PTR [esp+0x4],edx
  4062d5:	mov    DWORD PTR [esp],esi
  4062d8:	mov    DWORD PTR [esp+0x30],edx
  4062dc:	call   0x407630
  4062e1:	mov    DWORD PTR [esp+0x4],ebp
  4062e5:	mov    DWORD PTR [esp],eax
  4062e8:	mov    esi,eax
  4062ea:	call   0x4074b0
  4062ef:	mov    DWORD PTR [esp],ebp
  4062f2:	mov    DWORD PTR [esp+0x10],eax
  4062f6:	call   0x407320
  4062fb:	mov    eax,DWORD PTR [esp+0x10]
  4062ff:	mov    edx,DWORD PTR [esp+0x30]
  406303:	mov    ebp,eax
  406305:	mov    eax,DWORD PTR [esp+0x3c]
  406309:	sub    eax,edx
  40630b:	jne    0x406724
  406311:	mov    DWORD PTR [esp],0x1
  406318:	call   0x407480
  40631d:	mov    ecx,DWORD PTR [esp+0x50]
  406321:	mov    DWORD PTR [esp+0x10],eax
  406325:	test   ecx,ecx
  406327:	jle    0x406433
  40632d:	mov    DWORD PTR [esp+0x4],ecx
  406331:	mov    DWORD PTR [esp],eax
  406334:	call   0x407630
  406339:	cmp    DWORD PTR [esp+0xa0],0x1
  406341:	mov    DWORD PTR [esp+0x10],eax
  406345:	jg     0x406352
  406347:	cmp    DWORD PTR [esp+0x28],0x1
  40634c:	je     0x4069f7
  406352:	mov    DWORD PTR [esp+0x28],0x0
  40635a:	mov    ecx,DWORD PTR [esp+0x10]
  40635e:	mov    eax,DWORD PTR [ecx+0x10]
  406361:	bsr    eax,DWORD PTR [ecx+eax*4+0x10]
  406366:	xor    eax,0x1f
  406369:	sub    eax,edi
  40636b:	mov    edx,DWORD PTR [esp+0x34]
  40636f:	sub    eax,0x4
  406372:	and    eax,0x1f
  406375:	add    edx,eax
  406377:	mov    ecx,eax
  406379:	mov    DWORD PTR [esp+0x6c],eax
  40637d:	test   edx,edx
  40637f:	jle    0x40639b
  406381:	mov    DWORD PTR [esp],ebp
  406384:	mov    DWORD PTR [esp+0x4],edx
  406388:	mov    DWORD PTR [esp+0x30],eax
  40638c:	call   0x4077a0
  406391:	mov    ecx,DWORD PTR [esp+0x30]
  406395:	mov    ebp,eax
  406397:	mov    eax,DWORD PTR [esp+0x6c]
  40639b:	add    eax,edi
  40639d:	test   eax,eax
  40639f:	jle    0x4063bd
  4063a1:	mov    DWORD PTR [esp+0x4],eax
  4063a5:	mov    eax,DWORD PTR [esp+0x10]
  4063a9:	mov    DWORD PTR [esp+0x30],ecx
  4063ad:	mov    DWORD PTR [esp],eax
  4063b0:	call   0x4077a0
  4063b5:	mov    ecx,DWORD PTR [esp+0x30]
  4063b9:	mov    DWORD PTR [esp+0x10],eax
  4063bd:	mov    eax,DWORD PTR [esp+0x44]
  4063c1:	test   eax,eax
  4063c3:	jne    0x406744
  4063c9:	mov    eax,DWORD PTR [esp+0x2c]
  4063cd:	test   eax,eax
  4063cf:	jg     0x406580
  4063d5:	cmp    DWORD PTR [esp+0xa0],0x2
  4063dd:	jle    0x406580
  4063e3:	mov    eax,DWORD PTR [esp+0x2c]
  4063e7:	test   eax,eax
  4063e9:	jne    0x406502
  4063ef:	mov    eax,DWORD PTR [esp+0x10]
  4063f3:	mov    DWORD PTR [esp+0x8],0x0
  4063fb:	mov    DWORD PTR [esp+0x4],0x5
  406403:	mov    DWORD PTR [esp],eax
  406406:	call   0x407390
  40640b:	mov    DWORD PTR [esp],ebp
  40640e:	mov    DWORD PTR [esp+0x4],eax
  406412:	mov    DWORD PTR [esp+0x10],eax
  406416:	call   0x4078d0
  40641b:	test   eax,eax
  40641d:	jle    0x406502
  406423:	mov    eax,DWORD PTR [esp+0x1c]
  406427:	add    eax,0x2
  40642a:	mov    DWORD PTR [esp+0x1c],eax
  40642e:	jmp    0x4061ad
  406433:	cmp    DWORD PTR [esp+0xa0],0x1
  40643b:	jg     0x406448
  40643d:	cmp    DWORD PTR [esp+0x28],0x1
  406442:	je     0x406d55
  406448:	mov    DWORD PTR [esp+0x28],0x0
  406450:	mov    edx,DWORD PTR [esp+0x50]
  406454:	mov    eax,0x1f
  406459:	test   edx,edx
  40645b:	je     0x406369
  406461:	jmp    0x40635a
  406466:	lea    esi,[esi+0x0]
  406469:	lea    edi,[edi+eiz*1+0x0]
  406470:	cmp    DWORD PTR [esp+0xa0],0x2
  406478:	mov    DWORD PTR [esp+0x40],0x0
  406480:	je     0x406080
  406486:	mov    DWORD PTR [esp+0x20],esi
  40648a:	fild   DWORD PTR [esp+0x20]
  40648e:	fmul   QWORD PTR ds:0x40a708
  406494:	fldcw  WORD PTR [esp+0x5c]
  406498:	fistp  DWORD PTR [esp+0x58]
  40649c:	fldcw  WORD PTR [esp+0x5e]
  4064a0:	mov    eax,DWORD PTR [esp+0x58]
  4064a4:	add    eax,0x3
  4064a7:	mov    DWORD PTR [esp],eax
  4064aa:	mov    DWORD PTR [esp+0x6c],eax
  4064ae:	call   0x4057f0
  4064b3:	mov    DWORD PTR [esp+0x38],eax
  4064b7:	mov    eax,DWORD PTR [esp+0x90]
  4064be:	mov    eax,DWORD PTR [eax+0xc]
  4064c1:	sub    eax,0x1
  4064c4:	mov    DWORD PTR [esp+0x20],eax
  4064c8:	jne    0x4069ca
  4064ce:	mov    DWORD PTR [esp+0x40],0x1
  4064d6:	mov    DWORD PTR [esp+0x54],0xffffffff
  4064de:	mov    DWORD PTR [esp+0x2c],0xffffffff
  4064e6:	mov    DWORD PTR [esp+0xa4],0x0
  4064f1:	jmp    0x406135
  4064f6:	fstp   st(0)
  4064f8:	mov    DWORD PTR [esp+0x10],0x0
  406500:	xor    esi,esi
  406502:	mov    eax,DWORD PTR [esp+0xa4]
  406509:	mov    ebx,DWORD PTR [esp+0x38]
  40650d:	mov    edi,0x10
  406512:	neg    eax
  406514:	mov    DWORD PTR [esp+0x1c],eax
  406518:	jmp    0x4061bc
  40651d:	lea    esi,[esi+0x0]
  406520:	mov    eax,DWORD PTR [esp+0x1c]
  406524:	sub    DWORD PTR [esp+0x34],eax
  406528:	mov    DWORD PTR [esp+0x50],0x0
  406530:	neg    eax
  406532:	mov    DWORD PTR [esp+0x3c],eax
  406536:	jmp    0x405d65
  40653b:	nop
  40653c:	lea    esi,[esi+eiz*1+0x0]
  406540:	neg    edi
  406542:	mov    DWORD PTR [esp+0x34],edi
  406546:	xor    edi,edi
  406548:	jmp    0x405d4b
  40654d:	lea    esi,[esi+0x0]
  406550:	fild   DWORD PTR [esp+0x1c]
  406554:	fucomip st,st(1)
  406556:	fstp   st(0)
  406558:	jp     0x406560
  40655a:	je     0x405cf0
  406560:	sub    DWORD PTR [esp+0x1c],0x1
  406565:	jmp    0x405cf0
  40656a:	lea    esi,[esi+0x0]
  406570:	mov    edx,DWORD PTR [esp+0x3c]
  406574:	mov    ebx,DWORD PTR [esp+0x34]
  406578:	xor    esi,esi
  40657a:	jmp    0x40629e
  40657f:	nop
  406580:	mov    edi,DWORD PTR [esp+0x40]
  406584:	test   edi,edi
  406586:	je     0x4067b5
  40658c:	lea    eax,[ebx+ecx*1]
  40658f:	test   eax,eax
  406591:	jle    0x4065a1
  406593:	mov    DWORD PTR [esp],esi
  406596:	mov    DWORD PTR [esp+0x4],eax
  40659a:	call   0x4077a0
  40659f:	mov    esi,eax
  4065a1:	mov    ebx,DWORD PTR [esp+0x28]
  4065a5:	mov    DWORD PTR [esp+0x34],esi
  4065a9:	test   ebx,ebx
  4065ab:	jne    0x406d0f
  4065b1:	mov    ebx,DWORD PTR [esp+0x38]
  4065b5:	mov    DWORD PTR [esp+0x6c],0x1
  4065bd:	mov    DWORD PTR [esp+0x28],ebx
  4065c1:	mov    ebx,DWORD PTR [esp+0x34]
  4065c5:	jmp    0x4066af
  4065ca:	lea    esi,[esi+0x0]
  4065d0:	mov    DWORD PTR [esp],edx
  4065d3:	mov    DWORD PTR [esp+0x34],eax
  4065d7:	call   0x407320
  4065dc:	mov    eax,DWORD PTR [esp+0x34]
  4065e0:	mov    ecx,eax
  4065e2:	or     ecx,DWORD PTR [esp+0xa0]
  4065e9:	jne    0x406603
  4065eb:	mov    edx,DWORD PTR [esp+0x20]
  4065ef:	test   edx,edx
  4065f1:	jne    0x406603
  4065f3:	mov    ecx,DWORD PTR [esp+0x98]
  4065fa:	test   BYTE PTR [ecx],0x1
  4065fd:	je     0x406eb6
  406603:	test   edi,edi
  406605:	js     0x406ba3
  40660b:	or     edi,DWORD PTR [esp+0xa0]
  406612:	jne    0x406624
  406614:	mov    edi,DWORD PTR [esp+0x98]
  40661b:	test   BYTE PTR [edi],0x1
  40661e:	je     0x406ba3
  406624:	test   eax,eax
  406626:	jle    0x406633
  406628:	cmp    DWORD PTR [esp+0x20],0x2
  40662d:	jne    0x406daa
  406633:	add    DWORD PTR [esp+0x28],0x1
  406638:	mov    eax,DWORD PTR [esp+0x28]
  40663c:	mov    edi,eax
  40663e:	movzx  eax,BYTE PTR [esp+0x30]
  406643:	mov    BYTE PTR [edi-0x1],al
  406646:	mov    eax,DWORD PTR [esp+0x2c]
  40664a:	cmp    DWORD PTR [esp+0x6c],eax
  40664e:	je     0x406ddf
  406654:	mov    DWORD PTR [esp],ebp
  406657:	mov    DWORD PTR [esp+0x8],0x0
  40665f:	mov    DWORD PTR [esp+0x4],0xa
  406667:	call   0x407390
  40666c:	cmp    esi,ebx
  40666e:	mov    ebp,eax
  406670:	mov    DWORD PTR [esp+0x8],0x0
  406678:	mov    DWORD PTR [esp+0x4],0xa
  406680:	mov    DWORD PTR [esp],esi
  406683:	je     0x406715
  406689:	call   0x407390
  40668e:	mov    DWORD PTR [esp],ebx
  406691:	mov    DWORD PTR [esp+0x8],0x0
  406699:	mov    esi,eax
  40669b:	mov    DWORD PTR [esp+0x4],0xa
  4066a3:	call   0x407390
  4066a8:	mov    ebx,eax
  4066aa:	add    DWORD PTR [esp+0x6c],0x1
  4066af:	mov    eax,DWORD PTR [esp+0x10]
  4066b3:	mov    DWORD PTR [esp],ebp
  4066b6:	mov    DWORD PTR [esp+0x4],eax
  4066ba:	call   0x4058a0
  4066bf:	mov    edi,eax
  4066c1:	mov    DWORD PTR [esp+0x4],esi
  4066c5:	mov    DWORD PTR [esp],ebp
  4066c8:	add    edi,0x30
  4066cb:	mov    DWORD PTR [esp+0x3c],eax
  4066cf:	mov    DWORD PTR [esp+0x30],edi
  4066d3:	call   0x4078d0
  4066d8:	mov    edi,eax
  4066da:	mov    eax,DWORD PTR [esp+0x10]
  4066de:	mov    DWORD PTR [esp+0x4],ebx
  4066e2:	mov    DWORD PTR [esp],eax
  4066e5:	call   0x407920
  4066ea:	mov    edx,eax
  4066ec:	mov    eax,0x1
  4066f1:	mov    ecx,DWORD PTR [edx+0xc]
  4066f4:	test   ecx,ecx
  4066f6:	jne    0x4065d0
  4066fc:	mov    DWORD PTR [esp+0x4],edx
  406700:	mov    DWORD PTR [esp],ebp
  406703:	mov    DWORD PTR [esp+0x34],edx
  406707:	call   0x4078d0
  40670c:	mov    edx,DWORD PTR [esp+0x34]
  406710:	jmp    0x4065d0
  406715:	call   0x407390
  40671a:	mov    esi,eax
  40671c:	mov    ebx,eax
  40671e:	jmp    0x4066aa
  406720:	mov    eax,DWORD PTR [esp+0x3c]
  406724:	mov    DWORD PTR [esp],ebp
  406727:	mov    DWORD PTR [esp+0x4],eax
  40672b:	call   0x407630
  406730:	mov    ebp,eax
  406732:	jmp    0x406311
  406737:	mov    DWORD PTR [esp+0x40],0x0
  40673f:	jmp    0x405dc3
  406744:	mov    eax,DWORD PTR [esp+0x10]
  406748:	mov    DWORD PTR [esp],ebp
  40674b:	mov    DWORD PTR [esp+0x30],ecx
  40674f:	mov    DWORD PTR [esp+0x4],eax
  406753:	call   0x4078d0
  406758:	test   eax,eax
  40675a:	mov    ecx,DWORD PTR [esp+0x30]
  40675e:	jns    0x4063c9
  406764:	mov    DWORD PTR [esp],ebp
  406767:	mov    DWORD PTR [esp+0x8],0x0
  40676f:	mov    DWORD PTR [esp+0x4],0xa
  406777:	sub    DWORD PTR [esp+0x1c],0x1
  40677c:	mov    DWORD PTR [esp+0x2c],ecx
  406780:	call   0x407390
  406785:	mov    ebp,eax
  406787:	mov    eax,DWORD PTR [esp+0x40]
  40678b:	test   eax,eax
  40678d:	jne    0x406f48
  406793:	mov    eax,DWORD PTR [esp+0x54]
  406797:	test   eax,eax
  406799:	jg     0x4067ad
  40679b:	cmp    DWORD PTR [esp+0xa0],0x2
  4067a3:	mov    DWORD PTR [esp+0x2c],eax
  4067a7:	jg     0x4063e3
  4067ad:	mov    eax,DWORD PTR [esp+0x54]
  4067b1:	mov    DWORD PTR [esp+0x2c],eax
  4067b5:	mov    DWORD PTR [esp+0x28],esi
  4067b9:	mov    DWORD PTR [esp+0x6c],0x1
  4067c1:	mov    ebx,DWORD PTR [esp+0x38]
  4067c5:	mov    edi,DWORD PTR [esp+0x2c]
  4067c9:	mov    esi,DWORD PTR [esp+0x10]
  4067cd:	jmp    0x4067ef
  4067cf:	nop
  4067d0:	mov    DWORD PTR [esp],ebp
  4067d3:	mov    DWORD PTR [esp+0x8],0x0
  4067db:	mov    DWORD PTR [esp+0x4],0xa
  4067e3:	call   0x407390
  4067e8:	add    DWORD PTR [esp+0x6c],0x1
  4067ed:	mov    ebp,eax
  4067ef:	mov    DWORD PTR [esp+0x4],esi
  4067f3:	mov    DWORD PTR [esp],ebp
  4067f6:	add    ebx,0x1
  4067f9:	call   0x4058a0
  4067fe:	lea    edx,[eax+0x30]
  406801:	mov    BYTE PTR [ebx-0x1],dl
  406804:	cmp    DWORD PTR [esp+0x6c],edi
  406808:	jl     0x4067d0
  40680a:	mov    esi,DWORD PTR [esp+0x28]
  40680e:	mov    DWORD PTR [esp+0x30],edx
  406812:	mov    DWORD PTR [esp+0x28],0x0
  40681a:	mov    eax,DWORD PTR [esp+0x20]
  40681e:	test   eax,eax
  406820:	je     0x406c84
  406826:	cmp    eax,0x2
  406829:	je     0x406cbc
  40682f:	cmp    DWORD PTR [ebp+0x10],0x1
  406833:	jle    0x406e86
  406839:	movzx  edx,BYTE PTR [ebx-0x1]
  40683d:	mov    ecx,DWORD PTR [esp+0x38]
  406841:	jmp    0x406851
  406843:	cmp    eax,ecx
  406845:	je     0x406a4c
  40684b:	movzx  edx,BYTE PTR [eax-0x1]
  40684f:	mov    ebx,eax
  406851:	cmp    dl,0x39
  406854:	lea    eax,[ebx-0x1]
  406857:	je     0x406843
  406859:	add    edx,0x1
  40685c:	mov    edi,0x20
  406861:	mov    BYTE PTR [eax],dl
  406863:	mov    eax,DWORD PTR [esp+0x10]
  406867:	mov    DWORD PTR [esp],eax
  40686a:	call   0x407320
  40686f:	test   esi,esi
  406871:	je     0x406978
  406877:	mov    eax,DWORD PTR [esp+0x28]
  40687b:	cmp    eax,esi
  40687d:	je     0x40688f
  40687f:	test   eax,eax
  406881:	je     0x40688f
  406883:	mov    eax,DWORD PTR [esp+0x28]
  406887:	mov    DWORD PTR [esp],eax
  40688a:	call   0x407320
  40688f:	mov    eax,DWORD PTR [esp+0x1c]
  406893:	add    eax,0x1
  406896:	mov    DWORD PTR [esp+0x1c],eax
  40689a:	jmp    0x4061d0
  40689f:	fld    QWORD PTR [esp+0x10]
  4068a3:	fnstcw WORD PTR [esp+0x5e]
  4068a7:	movzx  eax,WORD PTR [esp+0x5e]
  4068ac:	mov    esi,DWORD PTR [esp+0x38]
  4068b0:	mov    DWORD PTR [esp+0x6c],0x1
  4068b8:	fld    st(0)
  4068ba:	fdiv   st,st(2)
  4068bc:	mov    ah,0xc
  4068be:	lea    ebx,[esi+0x1]
  4068c1:	mov    WORD PTR [esp+0x5c],ax
  4068c6:	fldcw  WORD PTR [esp+0x5c]
  4068ca:	fistp  DWORD PTR [esp+0x58]
  4068ce:	fldcw  WORD PTR [esp+0x5e]
  4068d2:	mov    eax,DWORD PTR [esp+0x58]
  4068d6:	mov    DWORD PTR [esp+0x10],eax
  4068da:	lea    edx,[eax+0x30]
  4068dd:	fild   DWORD PTR [esp+0x10]
  4068e1:	mov    BYTE PTR [esi],dl
  4068e3:	fmul   st,st(2)
  4068e5:	fsubp  st(1),st
  4068e7:	fldz   
  4068e9:	fxch   st(1)
  4068eb:	fucomi st,st(1)
  4068ed:	fstp   st(1)
  4068ef:	jp     0x4068f3
  4068f1:	je     0x406962
  4068f3:	mov    edx,DWORD PTR [esp+0x6c]
  4068f7:	cmp    DWORD PTR [esp+0x2c],edx
  4068fb:	je     0x406a28
  406901:	fld    DWORD PTR ds:0x40a714
  406907:	mov    ecx,DWORD PTR [esp+0x2c]
  40690b:	jmp    0x40691c
  40690d:	lea    esi,[esi+0x0]
  406910:	mov    edx,DWORD PTR [esp+0x6c]
  406914:	cmp    ecx,edx
  406916:	je     0x406a26
  40691c:	fmul   st(1),st
  40691e:	add    edx,0x1
  406921:	add    ebx,0x1
  406924:	mov    DWORD PTR [esp+0x6c],edx
  406928:	fld    st(1)
  40692a:	fdiv   st,st(3)
  40692c:	fldcw  WORD PTR [esp+0x5c]
  406930:	fistp  DWORD PTR [esp+0x58]
  406934:	fldcw  WORD PTR [esp+0x5e]
  406938:	mov    eax,DWORD PTR [esp+0x58]
  40693c:	mov    DWORD PTR [esp+0x10],eax
  406940:	lea    edx,[eax+0x30]
  406943:	fild   DWORD PTR [esp+0x10]
  406947:	mov    BYTE PTR [ebx-0x1],dl
  40694a:	fmul   st,st(3)
  40694c:	fsubp  st(2),st
  40694e:	fldz   
  406950:	fxch   st(2)
  406952:	fucomi st,st(2)
  406954:	fstp   st(2)
  406956:	jp     0x406910
  406958:	jne    0x406910
  40695a:	fstp   st(0)
  40695c:	fstp   st(0)
  40695e:	fstp   st(0)
  406960:	jmp    0x406966
  406962:	fstp   st(0)
  406964:	fstp   st(0)
  406966:	mov    eax,DWORD PTR [esp+0x1c]
  40696a:	add    eax,0x1
  40696d:	xor    edi,edi
  40696f:	mov    DWORD PTR [esp+0x1c],eax
  406973:	jmp    0x405fd0
  406978:	mov    eax,DWORD PTR [esp+0x1c]
  40697c:	add    eax,0x1
  40697f:	mov    DWORD PTR [esp+0x1c],eax
  406983:	jmp    0x405fd0
  406988:	cmp    DWORD PTR [esp+0x2c],0xe
  40698d:	mov    DWORD PTR [esp+0x6c],0x1
  406995:	setbe  dl
  406998:	and    eax,edx
  40699a:	mov    BYTE PTR [esp+0x48],al
  40699e:	mov    eax,0x1
  4069a3:	jmp    0x405df3
  4069a8:	mov    edx,0x1
  4069ad:	mov    DWORD PTR [esp+0xa4],0x1
  4069b8:	jmp    0x40609a
  4069bd:	mov    edx,DWORD PTR [esp+0x3c]
  4069c1:	mov    ebx,DWORD PTR [esp+0x34]
  4069c5:	jmp    0x406282
  4069ca:	mov    BYTE PTR [esp+0x48],0x0
  4069cf:	mov    DWORD PTR [esp+0x40],0x1
  4069d7:	mov    DWORD PTR [esp+0x54],0xffffffff
  4069df:	mov    DWORD PTR [esp+0x2c],0xffffffff
  4069e7:	mov    DWORD PTR [esp+0xa4],0x0
  4069f2:	jmp    0x405e12
  4069f7:	mov    eax,DWORD PTR [esp+0x90]
  4069fe:	mov    eax,DWORD PTR [eax+0x4]
  406a01:	add    eax,0x1
  406a04:	cmp    DWORD PTR [esp+0x94],eax
  406a0b:	jle    0x406352
  406a11:	add    DWORD PTR [esp+0x34],0x1
  406a16:	add    edi,0x1
  406a19:	mov    DWORD PTR [esp+0x28],0x1
  406a21:	jmp    0x406450
  406a26:	fstp   st(0)
  406a28:	mov    edx,DWORD PTR [esp+0x20]
  406a2c:	test   edx,edx
  406a2e:	je     0x406d7c
  406a34:	fstp   st(0)
  406a36:	fstp   st(0)
  406a38:	cmp    DWORD PTR [esp+0x20],0x1
  406a3d:	je     0x406e71
  406a43:	mov    eax,DWORD PTR [esp+0x1c]
  406a47:	jmp    0x405fc3
  406a4c:	mov    eax,DWORD PTR [esp+0x38]
  406a50:	add    DWORD PTR [esp+0x1c],0x1
  406a55:	mov    edi,0x20
  406a5a:	mov    BYTE PTR [eax],0x31
  406a5d:	jmp    0x406863
  406a62:	fstp   st(0)
  406a64:	fstp   st(0)
  406a66:	mov    DWORD PTR [esp+0x1c],0x2
  406a6e:	mov    DWORD PTR [esp+0x10],0x0
  406a76:	xor    esi,esi
  406a78:	jmp    0x4061ad
  406a7d:	fld    QWORD PTR [esp+0x10]
  406a81:	fnstcw WORD PTR [esp+0x5e]
  406a85:	movzx  eax,WORD PTR [esp+0x5e]
  406a8a:	mov    DWORD PTR [esp+0x6c],0x1
  406a92:	mov    ebx,DWORD PTR [esp+0x38]
  406a96:	fmul   QWORD PTR [ecx*8+0x40a778]
  406a9d:	mov    ah,0xc
  406a9f:	mov    WORD PTR [esp+0x5c],ax
  406aa4:	fld    DWORD PTR ds:0x40a714
  406aaa:	fxch   st(2)
  406aac:	jmp    0x406ab9
  406aae:	xchg   ax,ax
  406ab0:	fmul   st,st(2)
  406ab2:	add    edx,0x1
  406ab5:	mov    DWORD PTR [esp+0x6c],edx
  406ab9:	fldcw  WORD PTR [esp+0x5c]
  406abd:	fist   DWORD PTR [esp+0x58]
  406ac1:	fldcw  WORD PTR [esp+0x5e]
  406ac5:	mov    eax,DWORD PTR [esp+0x58]
  406ac9:	test   eax,eax
  406acb:	je     0x406ad7
  406acd:	mov    DWORD PTR [esp+0x10],eax
  406ad1:	fild   DWORD PTR [esp+0x10]
  406ad5:	fsubp  st(1),st
  406ad7:	add    ebx,0x1
  406ada:	add    eax,0x30
  406add:	mov    BYTE PTR [ebx-0x1],al
  406ae0:	mov    edx,DWORD PTR [esp+0x6c]
  406ae4:	cmp    edx,ecx
  406ae6:	jne    0x406ab0
  406ae8:	fstp   st(2)
  406aea:	fxch   st(1)
  406aec:	fld    DWORD PTR ds:0x40a724
  406af2:	fld    st(2)
  406af4:	fadd   st,st(1)
  406af6:	fxch   st(2)
  406af8:	fucomi st,st(2)
  406afa:	fstp   st(2)
  406afc:	ja     0x406b63
  406afe:	fsubrp st(2),st
  406b00:	fxch   st(1)
  406b02:	fucomip st,st(1)
  406b04:	jbe    0x406117
  406b0a:	fldz   
  406b0c:	fxch   st(1)
  406b0e:	fucomip st,st(1)
  406b10:	fstp   st(0)
  406b12:	jp     0x406f2d
  406b18:	jne    0x406f2d
  406b1e:	xor    edi,edi
  406b20:	jmp    0x406b28
  406b22:	movzx  eax,BYTE PTR [ebx-0x2]
  406b26:	mov    ebx,edx
  406b28:	cmp    al,0x30
  406b2a:	lea    edx,[ebx-0x1]
  406b2d:	je     0x406b22
  406b2f:	mov    eax,DWORD PTR [esp+0x48]
  406b33:	add    eax,0x1
  406b36:	mov    DWORD PTR [esp+0x1c],eax
  406b3a:	jmp    0x405fd0
  406b3f:	mov    esi,DWORD PTR [esp+0x1c]
  406b43:	test   al,0x1
  406b45:	movzx  eax,BYTE PTR [ebx-0x1]
  406b49:	mov    DWORD PTR [esp+0x48],esi
  406b4d:	je     0x406f2d
  406b53:	jmp    0x406b69
  406b55:	fstp   st(0)
  406b57:	fstp   st(0)
  406b59:	jmp    0x406b69
  406b5b:	fstp   st(0)
  406b5d:	fstp   st(0)
  406b5f:	fstp   st(0)
  406b61:	jmp    0x406b69
  406b63:	fstp   st(0)
  406b65:	fstp   st(0)
  406b67:	fstp   st(0)
  406b69:	mov    ecx,DWORD PTR [esp+0x38]
  406b6d:	jmp    0x406b7e
  406b6f:	nop
  406b70:	cmp    edx,ecx
  406b72:	je     0x406cf7
  406b78:	movzx  eax,BYTE PTR [edx-0x1]
  406b7c:	mov    ebx,edx
  406b7e:	cmp    al,0x39
  406b80:	lea    edx,[ebx-0x1]
  406b83:	je     0x406b70
  406b85:	mov    DWORD PTR [esp+0x38],ecx
  406b89:	add    eax,0x1
  406b8c:	mov    BYTE PTR [edx],al
  406b8e:	mov    eax,DWORD PTR [esp+0x48]
  406b92:	mov    edi,0x20
  406b97:	add    eax,0x1
  406b9a:	mov    DWORD PTR [esp+0x1c],eax
  406b9e:	jmp    0x405fd0
  406ba3:	mov    ecx,DWORD PTR [esp+0x20]
  406ba7:	mov    DWORD PTR [esp+0x34],ebx
  406bab:	mov    edx,DWORD PTR [esp+0x30]
  406baf:	mov    ebx,DWORD PTR [esp+0x28]
  406bb3:	test   ecx,ecx
  406bb5:	je     0x406e4f
  406bbb:	cmp    DWORD PTR [ebp+0x10],0x1
  406bbf:	jle    0x406e45
  406bc5:	cmp    DWORD PTR [esp+0x20],0x2
  406bca:	je     0x406e63
  406bd0:	mov    edi,ebx
  406bd2:	mov    DWORD PTR [esp+0x20],edx
  406bd6:	mov    ebx,DWORD PTR [esp+0x34]
  406bda:	jmp    0x406c43
  406bdc:	lea    esi,[esi+eiz*1+0x0]
  406be0:	movzx  eax,BYTE PTR [esp+0x20]
  406be5:	add    edi,0x1
  406be8:	mov    BYTE PTR [edi-0x1],al
  406beb:	mov    DWORD PTR [esp],ebx
  406bee:	mov    DWORD PTR [esp+0x8],0x0
  406bf6:	mov    DWORD PTR [esp+0x4],0xa
  406bfe:	call   0x407390
  406c03:	cmp    esi,ebx
  406c05:	mov    DWORD PTR [esp],ebp
  406c08:	mov    DWORD PTR [esp+0x8],0x0
  406c10:	mov    DWORD PTR [esp+0x4],0xa
  406c18:	cmove  esi,eax
  406c1b:	mov    DWORD PTR [esp+0x28],eax
  406c1f:	call   0x407390
  406c24:	mov    ebp,eax
  406c26:	mov    eax,DWORD PTR [esp+0x10]
  406c2a:	mov    DWORD PTR [esp],ebp
  406c2d:	mov    DWORD PTR [esp+0x4],eax
  406c31:	call   0x4058a0
  406c36:	mov    edx,DWORD PTR [esp+0x28]
  406c3a:	add    eax,0x30
  406c3d:	mov    DWORD PTR [esp+0x20],eax
  406c41:	mov    ebx,edx
  406c43:	mov    eax,DWORD PTR [esp+0x10]
  406c47:	mov    DWORD PTR [esp+0x4],ebx
  406c4b:	mov    DWORD PTR [esp],eax
  406c4e:	call   0x4078d0
  406c53:	test   eax,eax
  406c55:	jg     0x406be0
  406c57:	mov    edx,DWORD PTR [esp+0x20]
  406c5b:	mov    DWORD PTR [esp+0x34],ebx
  406c5f:	mov    ebx,edi
  406c61:	cmp    edx,0x39
  406c64:	je     0x406e98
  406c6a:	add    edx,0x1
  406c6d:	mov    edi,0x20
  406c72:	mov    BYTE PTR [ebx],dl
  406c74:	mov    DWORD PTR [esp+0x28],esi
  406c78:	add    ebx,0x1
  406c7b:	mov    esi,DWORD PTR [esp+0x34]
  406c7f:	jmp    0x406863
  406c84:	mov    DWORD PTR [esp],ebp
  406c87:	mov    DWORD PTR [esp+0x4],0x1
  406c8f:	call   0x4077a0
  406c94:	mov    ebp,eax
  406c96:	mov    eax,DWORD PTR [esp+0x10]
  406c9a:	mov    DWORD PTR [esp],ebp
  406c9d:	mov    DWORD PTR [esp+0x4],eax
  406ca1:	call   0x4078d0
  406ca6:	cmp    eax,0x0
  406ca9:	jg     0x406839
  406caf:	jne    0x406cbc
  406cb1:	test   BYTE PTR [esp+0x30],0x1
  406cb6:	jne    0x406839
  406cbc:	cmp    DWORD PTR [ebp+0x10],0x1
  406cc0:	mov    edi,0x10
  406cc5:	jg     0x406cd2
  406cc7:	jmp    0x406fa4
  406ccc:	lea    esi,[esi+eiz*1+0x0]
  406cd0:	mov    ebx,eax
  406cd2:	cmp    BYTE PTR [ebx-0x1],0x30
  406cd6:	lea    eax,[ebx-0x1]
  406cd9:	je     0x406cd0
  406cdb:	jmp    0x406863
  406ce0:	mov    ebx,DWORD PTR [esp+0x34]
  406ce4:	mov    DWORD PTR [esp+0x6c],0x0
  406cec:	xor    eax,eax
  406cee:	sub    ebx,DWORD PTR [esp+0x2c]
  406cf2:	jmp    0x406282
  406cf7:	mov    DWORD PTR [esp+0x38],ecx
  406cfb:	add    DWORD PTR [esp+0x48],0x1
  406d00:	mov    edx,ecx
  406d02:	mov    BYTE PTR [ecx],0x30
  406d05:	mov    eax,0x31
  406d0a:	jmp    0x406b8c
  406d0f:	mov    eax,DWORD PTR [esi+0x4]
  406d12:	mov    DWORD PTR [esp],eax
  406d15:	call   0x407250
  406d1a:	lea    ecx,[eax+0xc]
  406d1d:	mov    ebx,eax
  406d1f:	mov    eax,DWORD PTR [esi+0x10]
  406d22:	mov    DWORD PTR [esp],ecx
  406d25:	lea    edx,[eax*4+0x8]
  406d2c:	lea    eax,[esi+0xc]
  406d2f:	mov    DWORD PTR [esp+0x8],edx
  406d33:	mov    DWORD PTR [esp+0x4],eax
  406d37:	call   0x408318
  406d3c:	mov    DWORD PTR [esp+0x4],0x1
  406d44:	mov    DWORD PTR [esp],ebx
  406d47:	call   0x4077a0
  406d4c:	mov    DWORD PTR [esp+0x34],eax
  406d50:	jmp    0x4065b1
  406d55:	mov    eax,DWORD PTR [esp+0x90]
  406d5c:	mov    DWORD PTR [esp+0x28],0x0
  406d64:	mov    eax,DWORD PTR [eax+0x4]
  406d67:	add    eax,0x1
  406d6a:	cmp    DWORD PTR [esp+0x94],eax
  406d71:	jle    0x406450
  406d77:	jmp    0x406a11
  406d7c:	fadd   st,st(0)
  406d7e:	fucomi st,st(1)
  406d80:	ja     0x406e6d
  406d86:	fxch   st(1)
  406d88:	fucomip st,st(1)
  406d8a:	fstp   st(0)
  406d8c:	jp     0x406d94
  406d8e:	je     0x406b3f
  406d94:	mov    esi,DWORD PTR [esp+0x1c]
  406d98:	movzx  eax,BYTE PTR [ebx-0x1]
  406d9c:	mov    edi,0x10
  406da1:	mov    DWORD PTR [esp+0x48],esi
  406da5:	jmp    0x406b28
  406daa:	cmp    DWORD PTR [esp+0x30],0x39
  406daf:	mov    DWORD PTR [esp+0x34],ebx
  406db3:	mov    ebx,DWORD PTR [esp+0x28]
  406db7:	mov    eax,ebx
  406db9:	je     0x406e9a
  406dbf:	movzx  eax,BYTE PTR [esp+0x30]
  406dc4:	mov    DWORD PTR [esp+0x28],esi
  406dc8:	add    ebx,0x1
  406dcb:	mov    esi,DWORD PTR [esp+0x34]
  406dcf:	mov    edi,0x20
  406dd4:	add    eax,0x1
  406dd7:	mov    BYTE PTR [ebx-0x1],al
  406dda:	jmp    0x406863
  406ddf:	mov    eax,ebx
  406de1:	mov    ebx,DWORD PTR [esp+0x28]
  406de5:	mov    DWORD PTR [esp+0x28],esi
  406de9:	mov    esi,eax
  406deb:	jmp    0x40681a
  406df0:	mov    eax,DWORD PTR [esp+0x2c]
  406df4:	test   eax,eax
  406df6:	je     0x4060ba
  406dfc:	mov    eax,DWORD PTR [esp+0x54]
  406e00:	test   eax,eax
  406e02:	jle    0x40611b
  406e08:	mov    ecx,eax
  406e0a:	fmul   DWORD PTR ds:0x40a714
  406e10:	fld    st(0)
  406e12:	fmul   DWORD PTR ds:0x40a718
  406e18:	fadd   DWORD PTR ds:0x40a71c
  406e1e:	fstp   QWORD PTR [esp+0x48]
  406e22:	mov    ebx,DWORD PTR [esp+0x4c]
  406e26:	mov    edx,DWORD PTR [esp+0x48]
  406e2a:	mov    DWORD PTR [esp+0x48],0xffffffff
  406e32:	sub    ebx,0x3400000
  406e38:	mov    DWORD PTR [esp+0x10],edx
  406e3c:	mov    DWORD PTR [esp+0x14],ebx
  406e40:	jmp    0x405eb8
  406e45:	cmp    DWORD PTR [ebp+0x14],0x0
  406e49:	jne    0x406bc5
  406e4f:	test   eax,eax
  406e51:	jg     0x406ee2
  406e57:	xor    edi,edi
  406e59:	cmp    DWORD PTR [ebp+0x10],0x1
  406e5d:	jle    0x406f37
  406e63:	mov    edi,0x10
  406e68:	jmp    0x406c72
  406e6d:	fstp   st(0)
  406e6f:	fstp   st(0)
  406e71:	mov    esi,DWORD PTR [esp+0x1c]
  406e75:	movzx  eax,BYTE PTR [ebx-0x1]
  406e79:	mov    ecx,DWORD PTR [esp+0x38]
  406e7d:	mov    DWORD PTR [esp+0x48],esi
  406e81:	jmp    0x406b7e
  406e86:	mov    edx,DWORD PTR [ebp+0x14]
  406e89:	test   edx,edx
  406e8b:	jne    0x406839
  406e91:	xor    edi,edi
  406e93:	jmp    0x406cd2
  406e98:	mov    eax,ebx
  406e9a:	mov    DWORD PTR [esp+0x28],esi
  406e9e:	add    ebx,0x1
  406ea1:	mov    esi,DWORD PTR [esp+0x34]
  406ea5:	mov    BYTE PTR [eax],0x39
  406ea8:	mov    edx,0x39
  406ead:	mov    ecx,DWORD PTR [esp+0x38]
  406eb1:	jmp    0x406851
  406eb6:	mov    edx,DWORD PTR [esp+0x30]
  406eba:	mov    DWORD PTR [esp+0x34],ebx
  406ebe:	mov    ebx,DWORD PTR [esp+0x28]
  406ec2:	cmp    edx,0x39
  406ec5:	mov    eax,ebx
  406ec7:	je     0x406e9a
  406ec9:	test   edi,edi
  406ecb:	jle    0x406fb4
  406ed1:	mov    edx,DWORD PTR [esp+0x3c]
  406ed5:	mov    edi,0x20
  406eda:	add    edx,0x31
  406edd:	jmp    0x406c72
  406ee2:	mov    DWORD PTR [esp],ebp
  406ee5:	mov    DWORD PTR [esp+0x4],0x1
  406eed:	mov    DWORD PTR [esp+0x20],edx
  406ef1:	call   0x4077a0
  406ef6:	mov    ebp,eax
  406ef8:	mov    eax,DWORD PTR [esp+0x10]
  406efc:	mov    DWORD PTR [esp],ebp
  406eff:	mov    DWORD PTR [esp+0x4],eax
  406f03:	call   0x4078d0
  406f08:	cmp    eax,0x0
  406f0b:	mov    edx,DWORD PTR [esp+0x20]
  406f0f:	jle    0x406f8d
  406f11:	mov    eax,DWORD PTR [esp+0x30]
  406f15:	cmp    eax,0x39
  406f18:	je     0x406e98
  406f1e:	add    eax,0x1
  406f21:	mov    edi,0x20
  406f26:	mov    edx,eax
  406f28:	jmp    0x406e59
  406f2d:	mov    edi,0x10
  406f32:	jmp    0x406b28
  406f37:	cmp    DWORD PTR [ebp+0x14],0x0
  406f3b:	mov    eax,0x10
  406f40:	cmovne edi,eax
  406f43:	jmp    0x406c72
  406f48:	mov    DWORD PTR [esp],esi
  406f4b:	mov    DWORD PTR [esp+0x8],0x0
  406f53:	mov    DWORD PTR [esp+0x4],0xa
  406f5b:	call   0x407390
  406f60:	mov    esi,eax
  406f62:	mov    eax,DWORD PTR [esp+0x54]
  406f66:	mov    ecx,DWORD PTR [esp+0x2c]
  406f6a:	test   eax,eax
  406f6c:	jg     0x406f80
  406f6e:	cmp    DWORD PTR [esp+0xa0],0x2
  406f76:	mov    DWORD PTR [esp+0x2c],eax
  406f7a:	jg     0x4063e3
  406f80:	mov    eax,DWORD PTR [esp+0x54]
  406f84:	mov    DWORD PTR [esp+0x2c],eax
  406f88:	jmp    0x40658c
  406f8d:	jne    0x406f9a
  406f8f:	test   BYTE PTR [esp+0x30],0x1
  406f94:	jne    0x406f11
  406f9a:	mov    edi,0x20
  406f9f:	jmp    0x406e59
  406fa4:	cmp    DWORD PTR [ebp+0x14],0x1
  406fa8:	sbb    edi,edi
  406faa:	not    edi
  406fac:	and    edi,0x10
  406faf:	jmp    0x406cd2
  406fb4:	cmp    DWORD PTR [ebp+0x10],0x1
  406fb8:	mov    edi,0x10
  406fbd:	jg     0x406c72
  406fc3:	cmp    DWORD PTR [ebp+0x14],0x1
  406fc7:	sbb    edi,edi
  406fc9:	not    edi
  406fcb:	and    edi,0x10
  406fce:	jmp    0x406c72
  406fd3:	xor    eax,eax
  406fd5:	jmp    0x405bc6
  406fda:	nop
  406fdb:	nop
  406fdc:	nop
  406fdd:	nop
  406fde:	nop
  406fdf:	nop
  406fe0:	push   ebp
  406fe1:	push   edi
  406fe2:	push   esi
  406fe3:	push   ebx
  406fe4:	sub    esp,0x10
  406fe7:	mov    ebp,DWORD PTR [esp+0x24]
  406feb:	mov    ecx,DWORD PTR [esp+0x28]
  406fef:	mov    edx,DWORD PTR [ebp+0x10]
  406ff2:	mov    eax,ecx
  406ff4:	lea    ebx,[ebp+0x14]
  406ff7:	sar    eax,0x5
  406ffa:	cmp    eax,edx
  406ffc:	jge    0x407094
  407002:	lea    eax,[ebx+eax*4]
  407005:	and    ecx,0x1f
  407008:	lea    edi,[ebx+edx*4]
  40700b:	mov    DWORD PTR [esp],ecx
  40700e:	mov    DWORD PTR [esp+0x4],eax
  407012:	je     0x4070b0
  407018:	mov    esi,DWORD PTR [esp]
  40701b:	mov    eax,0x20
  407020:	sub    eax,esi
  407022:	mov    DWORD PTR [esp],esi
  407025:	mov    DWORD PTR [esp+0x8],eax
  407029:	mov    eax,DWORD PTR [esp+0x4]
  40702d:	mov    ecx,DWORD PTR [eax]
  40702f:	lea    edx,[eax+0x4]
  407032:	mov    eax,ecx
  407034:	mov    ecx,esi
  407036:	shr    eax,cl
  407038:	cmp    edi,edx
  40703a:	jbe    0x4070f9
  407040:	mov    DWORD PTR [esp+0x24],ebp
  407044:	mov    ebp,DWORD PTR [esp+0x8]
  407048:	mov    esi,ebx
  40704a:	mov    DWORD PTR [esp+0xc],ebx
  40704e:	xchg   ax,ax
  407050:	mov    ebx,DWORD PTR [edx]
  407052:	mov    ecx,ebp
  407054:	add    esi,0x4
  407057:	add    edx,0x4
  40705a:	shl    ebx,cl
  40705c:	movzx  ecx,BYTE PTR [esp]
  407060:	or     eax,ebx
  407062:	mov    DWORD PTR [esi-0x4],eax
  407065:	mov    eax,DWORD PTR [edx-0x4]
  407068:	shr    eax,cl
  40706a:	cmp    edi,edx
  40706c:	ja     0x407050
  40706e:	sub    edi,DWORD PTR [esp+0x4]
  407072:	mov    ebx,DWORD PTR [esp+0xc]
  407076:	mov    ebp,DWORD PTR [esp+0x24]
  40707a:	lea    edx,[edi-0x5]
  40707d:	shr    edx,0x2
  407080:	lea    edx,[ebx+edx*4+0x4]
  407084:	test   eax,eax
  407086:	mov    DWORD PTR [edx],eax
  407088:	je     0x4070f0
  40708a:	lea    eax,[edx+0x4]
  40708d:	sub    eax,ebx
  40708f:	sar    eax,0x2
  407092:	jmp    0x4070d9
  407094:	mov    DWORD PTR [ebp+0x10],0x0
  40709b:	mov    DWORD PTR [ebp+0x14],0x0
  4070a2:	add    esp,0x10
  4070a5:	pop    ebx
  4070a6:	pop    esi
  4070a7:	pop    edi
  4070a8:	pop    ebp
  4070a9:	ret    
  4070aa:	lea    esi,[esi+0x0]
  4070b0:	cmp    edi,eax
  4070b2:	jbe    0x407094
  4070b4:	add    eax,0x4
  4070b7:	mov    edx,DWORD PTR [eax-0x4]
  4070ba:	add    ebx,0x4
  4070bd:	cmp    edi,eax
  4070bf:	mov    DWORD PTR [ebx-0x4],edx
  4070c2:	ja     0x4070b4
  4070c4:	mov    eax,DWORD PTR [esp+0x4]
  4070c8:	not    eax
  4070ca:	add    eax,edi
  4070cc:	shr    eax,0x2
  4070cf:	lea    eax,[eax*4+0x4]
  4070d6:	sar    eax,0x2
  4070d9:	test   eax,eax
  4070db:	mov    DWORD PTR [ebp+0x10],eax
  4070de:	je     0x40709b
  4070e0:	add    esp,0x10
  4070e3:	pop    ebx
  4070e4:	pop    esi
  4070e5:	pop    edi
  4070e6:	pop    ebp
  4070e7:	ret    
  4070e8:	nop
  4070e9:	lea    esi,[esi+eiz*1+0x0]
  4070f0:	mov    eax,edx
  4070f2:	sub    eax,ebx
  4070f4:	sar    eax,0x2
  4070f7:	jmp    0x4070d9
  4070f9:	mov    edx,ebx
  4070fb:	jmp    0x407084
  4070fd:	lea    esi,[esi+0x0]
  407100:	push   ebx
  407101:	mov    eax,DWORD PTR [esp+0x8]
  407105:	mov    ecx,DWORD PTR [eax+0x10]
  407108:	lea    edx,[eax+0x14]
  40710b:	lea    ebx,[edx+ecx*4]
  40710e:	cmp    edx,ebx
  407110:	jae    0x40713a
  407112:	mov    ecx,DWORD PTR [eax+0x14]
  407115:	xor    eax,eax
  407117:	test   ecx,ecx
  407119:	je     0x407126
  40711b:	jmp    0x407132
  40711d:	lea    esi,[esi+0x0]
  407120:	mov    ecx,DWORD PTR [edx]
  407122:	test   ecx,ecx
  407124:	jne    0x407132
  407126:	add    edx,0x4
  407129:	add    eax,0x20
  40712c:	cmp    ebx,edx
  40712e:	ja     0x407120
  407130:	pop    ebx
  407131:	ret    
  407132:	tzcnt  ecx,ecx
  407136:	add    eax,ecx
  407138:	pop    ebx
  407139:	ret    
  40713a:	xor    eax,eax
  40713c:	pop    ebx
  40713d:	ret    
  40713e:	nop
  40713f:	nop
  407140:	push   esi
  407141:	push   ebx
  407142:	mov    esi,eax
  407144:	sub    esp,0x14
  407147:	mov    edx,DWORD PTR ds:0x40bda8
  40714d:	cmp    edx,0x2
  407150:	je     0x4071c6
  407152:	test   edx,edx
  407154:	je     0x407183
  407156:	cmp    edx,0x1
  407159:	jne    0x40717d
  40715b:	mov    ebx,DWORD PTR ds:0x40c1c4
  407161:	mov    DWORD PTR [esp],0x1
  407168:	call   ebx
  40716a:	mov    edx,DWORD PTR ds:0x40bda8
  407170:	sub    esp,0x4
  407173:	cmp    edx,0x1
  407176:	je     0x407161
  407178:	cmp    edx,0x2
  40717b:	je     0x4071c6
  40717d:	add    esp,0x14
  407180:	pop    ebx
  407181:	pop    esi
  407182:	ret    
  407183:	mov    eax,0x1
  407188:	xchg   DWORD PTR ds:0x40bda8,eax
  40718e:	test   eax,eax
  407190:	jne    0x4071e2
  407192:	mov    ebx,DWORD PTR ds:0x40c1a8
  407198:	mov    DWORD PTR [esp],0x40bdc0
  40719f:	call   ebx
  4071a1:	sub    esp,0x4
  4071a4:	mov    DWORD PTR [esp],0x40bdd8
  4071ab:	call   ebx
  4071ad:	sub    esp,0x4
  4071b0:	mov    DWORD PTR [esp],0x407210
  4071b7:	call   0x4017a0
  4071bc:	mov    DWORD PTR ds:0x40bda8,0x2
  4071c6:	lea    eax,[esi+esi*2]
  4071c9:	lea    eax,[eax*8+0x40bdc0]
  4071d0:	mov    DWORD PTR [esp],eax
  4071d3:	call   DWORD PTR ds:0x40c17c
  4071d9:	sub    esp,0x4
  4071dc:	add    esp,0x14
  4071df:	pop    ebx
  4071e0:	pop    esi
  4071e1:	ret    
  4071e2:	cmp    eax,0x2
  4071e5:	je     0x407200
  4071e7:	mov    edx,DWORD PTR ds:0x40bda8
  4071ed:	cmp    edx,0x1
  4071f0:	je     0x40715b
  4071f6:	jmp    0x407178
  4071f8:	nop
  4071f9:	lea    esi,[esi+eiz*1+0x0]
  407200:	mov    DWORD PTR ds:0x40bda8,0x2
  40720a:	jmp    0x4071c6
  40720c:	lea    esi,[esi+eiz*1+0x0]
  407210:	mov    eax,0x3
  407215:	xchg   DWORD PTR ds:0x40bda8,eax
  40721b:	cmp    eax,0x2
  40721e:	je     0x407221
  407220:	ret    
  407221:	push   ebx
  407222:	sub    esp,0x18
  407225:	mov    ebx,DWORD PTR ds:0x40c178
  40722b:	mov    DWORD PTR [esp],0x40bdc0
  407232:	call   ebx
  407234:	sub    esp,0x4
  407237:	mov    DWORD PTR [esp],0x40bdd8
  40723e:	call   ebx
  407240:	sub    esp,0x4
  407243:	add    esp,0x18
  407246:	pop    ebx
  407247:	ret    
  407248:	nop
  407249:	lea    esi,[esi+eiz*1+0x0]
  407250:	push   edi
  407251:	push   esi
  407252:	xor    eax,eax
  407254:	push   ebx
  407255:	sub    esp,0x10
  407258:	mov    ebx,DWORD PTR [esp+0x20]
  40725c:	call   0x407140
  407261:	cmp    ebx,0x9
  407264:	jg     0x407295
  407266:	mov    edi,DWORD PTR [ebx*4+0x40bd80]
  40726d:	test   edi,edi
  40726f:	je     0x4072e0
  407271:	cmp    DWORD PTR ds:0x40bda8,0x2
  407278:	mov    edx,DWORD PTR [edi]
  40727a:	mov    DWORD PTR [ebx*4+0x40bd80],edx
  407281:	jne    0x4072c8
  407283:	mov    DWORD PTR [esp],0x40bdc0
  40728a:	call   DWORD PTR ds:0x40c1b0
  407290:	sub    esp,0x4
  407293:	jmp    0x4072c8
  407295:	mov    esi,0x1
  40729a:	mov    ecx,ebx
  40729c:	shl    esi,cl
  40729e:	lea    edx,[esi*4+0x1b]
  4072a5:	shr    edx,0x3
  4072a8:	shl    edx,0x3
  4072ab:	mov    DWORD PTR [esp],edx
  4072ae:	call   0x408320
  4072b3:	test   eax,eax
  4072b5:	mov    edi,eax
  4072b7:	je     0x407319
  4072b9:	cmp    DWORD PTR ds:0x40bda8,0x2
  4072c0:	mov    DWORD PTR [edi+0x4],ebx
  4072c3:	mov    DWORD PTR [edi+0x8],esi
  4072c6:	je     0x407283
  4072c8:	mov    DWORD PTR [edi+0x10],0x0
  4072cf:	mov    DWORD PTR [edi+0xc],0x0
  4072d6:	mov    eax,edi
  4072d8:	add    esp,0x10
  4072db:	pop    ebx
  4072dc:	pop    esi
  4072dd:	pop    edi
  4072de:	ret    
  4072df:	nop
  4072e0:	mov    edi,DWORD PTR ds:0x409050
  4072e6:	mov    ecx,ebx
  4072e8:	mov    esi,0x1
  4072ed:	shl    esi,cl
  4072ef:	lea    edx,[esi*4+0x1b]
  4072f6:	mov    ecx,edi
  4072f8:	sub    ecx,0x40b480
  4072fe:	shr    edx,0x3
  407301:	sar    ecx,0x3
  407304:	add    ecx,edx
  407306:	cmp    ecx,0x120
  40730c:	ja     0x4072a8
  40730e:	lea    edx,[edi+edx*8]
  407311:	mov    DWORD PTR ds:0x409050,edx
  407317:	jmp    0x4072b9
  407319:	xor    eax,eax
  40731b:	jmp    0x4072d8
  40731d:	lea    esi,[esi+0x0]
  407320:	push   ebx
  407321:	sub    esp,0x18
  407324:	mov    ebx,DWORD PTR [esp+0x20]
  407328:	test   ebx,ebx
  40732a:	je     0x407355
  40732c:	cmp    DWORD PTR [ebx+0x4],0x9
  407330:	jg     0x407360
  407332:	xor    eax,eax
  407334:	call   0x407140
  407339:	mov    eax,DWORD PTR [ebx+0x4]
  40733c:	cmp    DWORD PTR ds:0x40bda8,0x2
  407343:	mov    edx,DWORD PTR [eax*4+0x40bd80]
  40734a:	mov    DWORD PTR [eax*4+0x40bd80],ebx
  407351:	mov    DWORD PTR [ebx],edx
  407353:	je     0x407370
  407355:	add    esp,0x18
  407358:	pop    ebx
  407359:	ret    
  40735a:	lea    esi,[esi+0x0]
  407360:	add    esp,0x18
  407363:	pop    ebx
  407364:	jmp    0x408340
  407369:	lea    esi,[esi+eiz*1+0x0]
  407370:	mov    DWORD PTR [esp],0x40bdc0
  407377:	call   DWORD PTR ds:0x40c1b0
  40737d:	sub    esp,0x4
  407380:	add    esp,0x18
  407383:	pop    ebx
  407384:	ret    
  407385:	lea    esi,[esi+eiz*1+0x0]
  407389:	lea    edi,[edi+eiz*1+0x0]
  407390:	push   ebp
  407391:	push   edi
  407392:	xor    ecx,ecx
  407394:	push   esi
  407395:	push   ebx
  407396:	sub    esp,0x2c
  407399:	mov    eax,DWORD PTR [esp+0x40]
  40739d:	mov    edi,DWORD PTR [esp+0x48]
  4073a1:	mov    eax,DWORD PTR [eax+0x10]
  4073a4:	mov    ebp,edi
  4073a6:	sar    ebp,0x1f
  4073a9:	mov    DWORD PTR [esp+0x1c],eax
  4073ad:	mov    eax,DWORD PTR [esp+0x40]
  4073b1:	lea    ebx,[eax+0x14]
  4073b4:	mov    eax,DWORD PTR [esp+0x44]
  4073b8:	mov    DWORD PTR [esp+0x10],eax
  4073bc:	sar    eax,0x1f
  4073bf:	mov    DWORD PTR [esp+0x14],eax
  4073c3:	mov    eax,DWORD PTR [ebx+ecx*4]
  4073c6:	mov    esi,DWORD PTR [esp+0x14]
  4073ca:	imul   esi,eax
  4073cd:	mul    DWORD PTR [esp+0x10]
  4073d1:	add    edx,esi
  4073d3:	add    eax,edi
  4073d5:	adc    edx,ebp
  4073d7:	mov    DWORD PTR [ebx+ecx*4],eax
  4073da:	xor    ebp,ebp
  4073dc:	add    ecx,0x1
  4073df:	cmp    DWORD PTR [esp+0x1c],ecx
  4073e3:	mov    edi,edx
  4073e5:	jg     0x4073c3
  4073e7:	mov    edx,ebp
  4073e9:	mov    eax,DWORD PTR [esp+0x40]
  4073ed:	or     edx,edi
  4073ef:	je     0x40740e
  4073f1:	mov    edx,DWORD PTR [esp+0x1c]
  4073f5:	cmp    edx,DWORD PTR [eax+0x8]
  4073f8:	jge    0x407420
  4073fa:	mov    edx,DWORD PTR [esp+0x40]
  4073fe:	mov    eax,DWORD PTR [esp+0x1c]
  407402:	mov    DWORD PTR [edx+eax*4+0x14],edi
  407406:	add    eax,0x1
  407409:	mov    DWORD PTR [edx+0x10],eax
  40740c:	mov    eax,edx
  40740e:	add    esp,0x2c
  407411:	pop    ebx
  407412:	pop    esi
  407413:	pop    edi
  407414:	pop    ebp
  407415:	ret    
  407416:	lea    esi,[esi+0x0]
  407419:	lea    edi,[edi+eiz*1+0x0]
  407420:	mov    eax,DWORD PTR [eax+0x4]
  407423:	mov    DWORD PTR [esp+0x10],eax
  407427:	add    eax,0x1
  40742a:	mov    DWORD PTR [esp],eax
  40742d:	call   0x407250
  407432:	test   eax,eax
  407434:	mov    ebx,eax
  407436:	je     0x407472
  407438:	lea    ecx,[eax+0xc]
  40743b:	mov    eax,DWORD PTR [esp+0x40]
  40743f:	mov    eax,DWORD PTR [eax+0x10]
  407442:	mov    DWORD PTR [esp],ecx
  407445:	lea    edx,[eax*4+0x8]
  40744c:	mov    eax,DWORD PTR [esp+0x40]
  407450:	mov    DWORD PTR [esp+0x8],edx
  407454:	add    eax,0xc
  407457:	mov    DWORD PTR [esp+0x4],eax
  40745b:	call   0x408318
  407460:	mov    eax,DWORD PTR [esp+0x40]
  407464:	mov    DWORD PTR [esp],eax
  407467:	call   0x407320
  40746c:	mov    DWORD PTR [esp+0x40],ebx
  407470:	jmp    0x4073fa
  407472:	xor    eax,eax
  407474:	jmp    0x40740e
  407476:	lea    esi,[esi+0x0]
  407479:	lea    edi,[edi+eiz*1+0x0]
  407480:	sub    esp,0x1c
  407483:	mov    DWORD PTR [esp],0x1
  40748a:	call   0x407250
  40748f:	test   eax,eax
  407491:	je     0x4074a1
  407493:	mov    edx,DWORD PTR [esp+0x20]
  407497:	mov    DWORD PTR [eax+0x10],0x1
  40749e:	mov    DWORD PTR [eax+0x14],edx
  4074a1:	add    esp,0x1c
  4074a4:	ret    
  4074a5:	lea    esi,[esi+eiz*1+0x0]
  4074a9:	lea    edi,[edi+eiz*1+0x0]
  4074b0:	push   ebp
  4074b1:	push   edi
  4074b2:	push   esi
  4074b3:	push   ebx
  4074b4:	sub    esp,0x4c
  4074b7:	mov    edi,DWORD PTR [esp+0x60]
  4074bb:	mov    ebp,DWORD PTR [esp+0x64]
  4074bf:	mov    ebx,DWORD PTR [edi+0x10]
  4074c2:	mov    esi,DWORD PTR [ebp+0x10]
  4074c5:	cmp    ebx,esi
  4074c7:	jl     0x407614
  4074cd:	mov    eax,esi
  4074cf:	mov    esi,ebx
  4074d1:	mov    ebx,eax
  4074d3:	lea    eax,[esi+ebx*1]
  4074d6:	cmp    eax,DWORD PTR [edi+0x8]
  4074d9:	mov    DWORD PTR [esp+0x34],eax
  4074dd:	setg   al
  4074e0:	movzx  eax,al
  4074e3:	add    eax,DWORD PTR [edi+0x4]
  4074e6:	mov    DWORD PTR [esp],eax
  4074e9:	call   0x407250
  4074ee:	test   eax,eax
  4074f0:	mov    DWORD PTR [esp+0x3c],eax
  4074f4:	je     0x40761f
  4074fa:	mov    ecx,DWORD PTR [esp+0x34]
  4074fe:	lea    eax,[eax+0x14]
  407501:	mov    DWORD PTR [esp+0x28],eax
  407505:	lea    ecx,[eax+ecx*4]
  407508:	mov    edx,ecx
  40750a:	mov    DWORD PTR [esp+0x38],ecx
  40750e:	cmp    eax,edx
  407510:	jae    0x40752d
  407512:	mov    edx,DWORD PTR [esp+0x38]
  407516:	lea    esi,[esi+0x0]
  407519:	lea    edi,[edi+eiz*1+0x0]
  407520:	mov    DWORD PTR [eax],0x0
  407526:	add    eax,0x4
  407529:	cmp    edx,eax
  40752b:	ja     0x407520
  40752d:	lea    eax,[edi+0x14]
  407530:	mov    DWORD PTR [esp+0x30],eax
  407534:	lea    eax,[eax+esi*4]
  407537:	mov    DWORD PTR [esp+0x20],eax
  40753b:	lea    eax,[ebp+0x14]
  40753e:	lea    esi,[eax+ebx*4]
  407541:	mov    DWORD PTR [esp+0x24],eax
  407545:	cmp    eax,esi
  407547:	mov    DWORD PTR [esp+0x2c],esi
  40754b:	jae    0x4075ce
  407551:	add    DWORD PTR [esp+0x24],0x4
  407556:	mov    eax,DWORD PTR [esp+0x24]
  40755a:	mov    ebp,DWORD PTR [eax-0x4]
  40755d:	test   ebp,ebp
  40755f:	je     0x4075bf
  407561:	mov    edi,DWORD PTR [esp+0x28]
  407565:	xor    ebx,ebx
  407567:	xor    ecx,ecx
  407569:	mov    edx,ebx
  40756b:	mov    DWORD PTR [esp+0x1c],ebp
  40756f:	mov    esi,DWORD PTR [esp+0x30]
  407573:	mov    ebp,edx
  407575:	mov    ebx,edi
  407577:	mov    edi,ecx
  407579:	jmp    0x407582
  40757b:	nop
  40757c:	lea    esi,[esi+eiz*1+0x0]
  407580:	mov    ebx,ecx
  407582:	mov    eax,DWORD PTR [ebx]
  407584:	add    esi,0x4
  407587:	xor    edx,edx
  407589:	mov    DWORD PTR [esp+0x14],edx
  40758d:	mov    DWORD PTR [esp+0x10],eax
  407591:	mov    eax,DWORD PTR [esp+0x1c]
  407595:	mul    DWORD PTR [esi-0x4]
  407598:	mov    ecx,edx
  40759a:	mov    edx,eax
  40759c:	add    edx,DWORD PTR [esp+0x10]
  4075a0:	adc    ecx,DWORD PTR [esp+0x14]
  4075a4:	add    edx,edi
  4075a6:	adc    ecx,ebp
  4075a8:	xor    ebp,ebp
  4075aa:	cmp    DWORD PTR [esp+0x20],esi
  4075ae:	mov    edi,ecx
  4075b0:	lea    ecx,[ebx+0x4]
  4075b3:	mov    DWORD PTR [ecx-0x4],edx
  4075b6:	ja     0x407580
  4075b8:	mov    eax,edi
  4075ba:	mov    edi,ebx
  4075bc:	mov    DWORD PTR [edi+0x4],eax
  4075bf:	add    DWORD PTR [esp+0x28],0x4
  4075c4:	mov    ebx,DWORD PTR [esp+0x24]
  4075c8:	cmp    DWORD PTR [esp+0x2c],ebx
  4075cc:	ja     0x407551
  4075ce:	mov    eax,DWORD PTR [esp+0x34]
  4075d2:	test   eax,eax
  4075d4:	jle    0x407601
  4075d6:	mov    ecx,DWORD PTR [esp+0x38]
  4075da:	mov    ebx,DWORD PTR [ecx-0x4]
  4075dd:	test   ebx,ebx
  4075df:	jne    0x407601
  4075e1:	mov    edx,DWORD PTR [esp+0x34]
  4075e5:	mov    eax,edx
  4075e7:	shl    eax,0x2
  4075ea:	sub    ecx,eax
  4075ec:	mov    eax,ecx
  4075ee:	jmp    0x4075f8
  4075f0:	mov    ecx,DWORD PTR [eax+edx*4-0x4]
  4075f4:	test   ecx,ecx
  4075f6:	jne    0x4075fd
  4075f8:	sub    edx,0x1
  4075fb:	jne    0x4075f0
  4075fd:	mov    DWORD PTR [esp+0x34],edx
  407601:	mov    eax,DWORD PTR [esp+0x3c]
  407605:	mov    ecx,DWORD PTR [esp+0x34]
  407609:	mov    DWORD PTR [eax+0x10],ecx
  40760c:	add    esp,0x4c
  40760f:	pop    ebx
  407610:	pop    esi
  407611:	pop    edi
  407612:	pop    ebp
  407613:	ret    
  407614:	mov    eax,edi
  407616:	mov    edi,ebp
  407618:	mov    ebp,eax
  40761a:	jmp    0x4074d3
  40761f:	xor    eax,eax
  407621:	jmp    0x40760c
  407623:	lea    esi,[esi+0x0]
  407629:	lea    edi,[edi+eiz*1+0x0]
  407630:	push   ebp
  407631:	push   edi
  407632:	push   esi
  407633:	push   ebx
  407634:	sub    esp,0x1c
  407637:	mov    ebx,DWORD PTR [esp+0x34]
  40763b:	mov    ebp,DWORD PTR [esp+0x30]
  40763f:	mov    eax,ebx
  407641:	and    eax,0x3
  407644:	jne    0x4076e0
  40764a:	sar    ebx,0x2
  40764d:	mov    eax,ebp
  40764f:	test   ebx,ebx
  407651:	je     0x4076a3
  407653:	mov    edi,DWORD PTR ds:0x40b440
  407659:	test   edi,edi
  40765b:	je     0x40772b
  407661:	test   bl,0x1
  407664:	jne    0x407681
  407666:	lea    esi,[esi+0x0]
  407669:	lea    edi,[edi+eiz*1+0x0]
  407670:	sar    ebx,1
  407672:	je     0x4076a1
  407674:	mov    esi,DWORD PTR [edi]
  407676:	test   esi,esi
  407678:	je     0x4076b0
  40767a:	mov    edi,esi
  40767c:	test   bl,0x1
  40767f:	je     0x407670
  407681:	mov    DWORD PTR [esp+0x4],edi
  407685:	mov    DWORD PTR [esp],ebp
  407688:	call   0x4074b0
  40768d:	test   eax,eax
  40768f:	mov    esi,eax
  407691:	je     0x407705
  407693:	mov    DWORD PTR [esp],ebp
  407696:	mov    ebp,esi
  407698:	call   0x407320
  40769d:	sar    ebx,1
  40769f:	jne    0x407674
  4076a1:	mov    eax,ebp
  4076a3:	add    esp,0x1c
  4076a6:	pop    ebx
  4076a7:	pop    esi
  4076a8:	pop    edi
  4076a9:	pop    ebp
  4076aa:	ret    
  4076ab:	nop
  4076ac:	lea    esi,[esi+eiz*1+0x0]
  4076b0:	mov    eax,0x1
  4076b5:	call   0x407140
  4076ba:	mov    esi,DWORD PTR [edi]
  4076bc:	test   esi,esi
  4076be:	je     0x40770f
  4076c0:	cmp    DWORD PTR ds:0x40bda8,0x2
  4076c7:	jne    0x40767a
  4076c9:	mov    DWORD PTR [esp],0x40bdd8
  4076d0:	mov    edi,esi
  4076d2:	call   DWORD PTR ds:0x40c1b0
  4076d8:	sub    esp,0x4
  4076db:	jmp    0x40767c
  4076dd:	lea    esi,[esi+0x0]
  4076e0:	mov    eax,DWORD PTR [eax*4+0x40a73c]
  4076e7:	mov    DWORD PTR [esp],ebp
  4076ea:	mov    DWORD PTR [esp+0x8],0x0
  4076f2:	mov    DWORD PTR [esp+0x4],eax
  4076f6:	call   0x407390
  4076fb:	test   eax,eax
  4076fd:	mov    ebp,eax
  4076ff:	jne    0x40764a
  407705:	xor    eax,eax
  407707:	add    esp,0x1c
  40770a:	pop    ebx
  40770b:	pop    esi
  40770c:	pop    edi
  40770d:	pop    ebp
  40770e:	ret    
  40770f:	mov    DWORD PTR [esp+0x4],edi
  407713:	mov    DWORD PTR [esp],edi
  407716:	call   0x4074b0
  40771b:	test   eax,eax
  40771d:	mov    esi,eax
  40771f:	mov    DWORD PTR [edi],eax
  407721:	je     0x407705
  407723:	mov    DWORD PTR [eax],0x0
  407729:	jmp    0x4076c0
  40772b:	mov    eax,0x1
  407730:	call   0x407140
  407735:	mov    edi,DWORD PTR ds:0x40b440
  40773b:	test   edi,edi
  40773d:	je     0x407761
  40773f:	cmp    DWORD PTR ds:0x40bda8,0x2
  407746:	jne    0x407661
  40774c:	mov    DWORD PTR [esp],0x40bdd8
  407753:	call   DWORD PTR ds:0x40c1b0
  407759:	sub    esp,0x4
  40775c:	jmp    0x407661
  407761:	mov    DWORD PTR [esp],0x1
  407768:	call   0x407250
  40776d:	test   eax,eax
  40776f:	mov    edi,eax
  407771:	je     0x40778e
  407773:	mov    DWORD PTR [eax+0x14],0x271
  40777a:	mov    DWORD PTR [eax+0x10],0x1
  407781:	mov    ds:0x40b440,eax
  407786:	mov    DWORD PTR [eax],0x0
  40778c:	jmp    0x40773f
  40778e:	mov    DWORD PTR ds:0x40b440,0x0
  407798:	xor    eax,eax
  40779a:	jmp    0x407707
  40779f:	nop
  4077a0:	push   ebp
  4077a1:	push   edi
  4077a2:	push   esi
  4077a3:	push   ebx
  4077a4:	sub    esp,0x3c
  4077a7:	mov    eax,DWORD PTR [esp+0x50]
  4077ab:	mov    edi,DWORD PTR [esp+0x54]
  4077af:	mov    ecx,eax
  4077b1:	mov    edx,DWORD PTR [eax+0x4]
  4077b4:	mov    eax,DWORD PTR [eax+0x10]
  4077b7:	sar    edi,0x5
  4077ba:	add    eax,edi
  4077bc:	lea    esi,[eax+0x1]
  4077bf:	mov    DWORD PTR [esp+0x28],eax
  4077c3:	mov    eax,DWORD PTR [ecx+0x8]
  4077c6:	cmp    esi,eax
  4077c8:	jle    0x4077d9
  4077ca:	lea    esi,[esi+0x0]
  4077d0:	add    eax,eax
  4077d2:	add    edx,0x1
  4077d5:	cmp    esi,eax
  4077d7:	jg     0x4077d0
  4077d9:	mov    DWORD PTR [esp],edx
  4077dc:	call   0x407250
  4077e1:	test   eax,eax
  4077e3:	mov    DWORD PTR [esp+0x24],eax
  4077e7:	je     0x4078c2
  4077ed:	test   edi,edi
  4077ef:	lea    ebx,[eax+0x14]
  4077f2:	jle    0x407811
  4077f4:	xor    eax,eax
  4077f6:	lea    esi,[esi+0x0]
  4077f9:	lea    edi,[edi+eiz*1+0x0]
  407800:	mov    DWORD PTR [ebx+eax*4],0x0
  407807:	add    eax,0x1
  40780a:	cmp    eax,edi
  40780c:	jne    0x407800
  40780e:	lea    ebx,[ebx+eax*4]
  407811:	mov    eax,DWORD PTR [esp+0x50]
  407815:	lea    edx,[eax+0x14]
  407818:	mov    eax,DWORD PTR [eax+0x10]
  40781b:	lea    ebp,[edx+eax*4]
  40781e:	mov    eax,DWORD PTR [esp+0x54]
  407822:	and    eax,0x1f
  407825:	mov    DWORD PTR [esp+0x1c],eax
  407829:	je     0x4078a0
  40782b:	mov    eax,0x20
  407830:	sub    eax,DWORD PTR [esp+0x1c]
  407834:	mov    DWORD PTR [esp+0x2c],esi
  407838:	mov    edi,eax
  40783a:	xor    eax,eax
  40783c:	mov    DWORD PTR [esp+0x20],edi
  407840:	jmp    0x407844
  407842:	mov    ebx,esi
  407844:	movzx  ecx,BYTE PTR [esp+0x1c]
  407849:	mov    edi,DWORD PTR [edx]
  40784b:	lea    esi,[ebx+0x4]
  40784e:	add    edx,0x4
  407851:	shl    edi,cl
  407853:	movzx  ecx,BYTE PTR [esp+0x20]
  407858:	or     eax,edi
  40785a:	mov    DWORD PTR [esi-0x4],eax
  40785d:	mov    eax,DWORD PTR [edx-0x4]
  407860:	shr    eax,cl
  407862:	cmp    ebp,edx
  407864:	ja     0x407842
  407866:	mov    edx,DWORD PTR [esp+0x28]
  40786a:	mov    esi,DWORD PTR [esp+0x2c]
  40786e:	mov    DWORD PTR [ebx+0x4],eax
  407871:	add    edx,0x2
  407874:	test   eax,eax
  407876:	cmovne esi,edx
  407879:	mov    edi,DWORD PTR [esp+0x24]
  40787d:	mov    eax,DWORD PTR [esp+0x50]
  407881:	sub    esi,0x1
  407884:	mov    DWORD PTR [edi+0x10],esi
  407887:	mov    DWORD PTR [esp],eax
  40788a:	call   0x407320
  40788f:	mov    eax,edi
  407891:	add    esp,0x3c
  407894:	pop    ebx
  407895:	pop    esi
  407896:	pop    edi
  407897:	pop    ebp
  407898:	ret    
  407899:	lea    esi,[esi+eiz*1+0x0]
  4078a0:	add    edx,0x4
  4078a3:	mov    eax,DWORD PTR [edx-0x4]
  4078a6:	add    ebx,0x4
  4078a9:	cmp    ebp,edx
  4078ab:	mov    DWORD PTR [ebx-0x4],eax
  4078ae:	jbe    0x407879
  4078b0:	add    edx,0x4
  4078b3:	mov    eax,DWORD PTR [edx-0x4]
  4078b6:	add    ebx,0x4
  4078b9:	cmp    ebp,edx
  4078bb:	mov    DWORD PTR [ebx-0x4],eax
  4078be:	ja     0x4078a0
  4078c0:	jmp    0x407879
  4078c2:	xor    eax,eax
  4078c4:	jmp    0x407891
  4078c6:	lea    esi,[esi+0x0]
  4078c9:	lea    edi,[edi+eiz*1+0x0]
  4078d0:	push   ebx
  4078d1:	mov    ecx,DWORD PTR [esp+0x8]
  4078d5:	mov    ebx,DWORD PTR [esp+0xc]
  4078d9:	mov    eax,DWORD PTR [ecx+0x10]
  4078dc:	mov    edx,DWORD PTR [ebx+0x10]
  4078df:	sub    eax,edx
  4078e1:	test   eax,eax
  4078e3:	jne    0x407909
  4078e5:	shl    edx,0x2
  4078e8:	add    ecx,0x14
  4078eb:	lea    eax,[ecx+edx*1]
  4078ee:	lea    edx,[ebx+edx*1+0x14]
  4078f2:	jmp    0x4078f8
  4078f4:	cmp    ecx,eax
  4078f6:	jae    0x407910
  4078f8:	sub    edx,0x4
  4078fb:	sub    eax,0x4
  4078fe:	mov    ebx,DWORD PTR [edx]
  407900:	cmp    DWORD PTR [eax],ebx
  407902:	je     0x4078f4
  407904:	sbb    eax,eax
  407906:	or     eax,0x1
  407909:	pop    ebx
  40790a:	ret    
  40790b:	nop
  40790c:	lea    esi,[esi+eiz*1+0x0]
  407910:	xor    eax,eax
  407912:	pop    ebx
  407913:	ret    
  407914:	lea    esi,[esi+0x0]
  40791a:	lea    edi,[edi+0x0]
  407920:	push   ebp
  407921:	push   edi
  407922:	push   esi
  407923:	push   ebx
  407924:	sub    esp,0x3c
  407927:	mov    ebp,DWORD PTR [esp+0x50]
  40792b:	mov    esi,DWORD PTR [esp+0x54]
  40792f:	mov    DWORD PTR [esp],ebp
  407932:	mov    DWORD PTR [esp+0x4],esi
  407936:	call   0x4078d0
  40793b:	test   eax,eax
  40793d:	je     0x407a72
  407943:	mov    ebx,0x0
  407948:	js     0x407aa0
  40794e:	mov    eax,DWORD PTR [ebp+0x4]
  407951:	mov    DWORD PTR [esp],eax
  407954:	call   0x407250
  407959:	test   eax,eax
  40795b:	mov    DWORD PTR [esp+0x28],eax
  40795f:	mov    edi,eax
  407961:	je     0x407aad
  407967:	mov    DWORD PTR [eax+0xc],ebx
  40796a:	mov    eax,DWORD PTR [ebp+0x10]
  40796d:	add    ebp,0x14
  407970:	lea    ebx,[esi+0x14]
  407973:	lea    ecx,[edi+0x14]
  407976:	xor    edi,edi
  407978:	mov    DWORD PTR [esp+0x14],edi
  40797c:	mov    DWORD PTR [esp+0x20],eax
  407980:	lea    eax,[ebp+eax*4+0x0]
  407984:	mov    DWORD PTR [esp+0x24],eax
  407988:	mov    eax,DWORD PTR [esi+0x10]
  40798b:	xor    esi,esi
  40798d:	mov    DWORD PTR [esp+0x10],esi
  407991:	lea    eax,[ebx+eax*4]
  407994:	mov    DWORD PTR [esp+0x1c],eax
  407998:	nop
  407999:	lea    esi,[esi+eiz*1+0x0]
  4079a0:	add    ebx,0x4
  4079a3:	add    ebp,0x4
  4079a6:	mov    eax,DWORD PTR [ebp-0x4]
  4079a9:	mov    esi,DWORD PTR [ebx-0x4]
  4079ac:	xor    edi,edi
  4079ae:	xor    edx,edx
  4079b0:	sub    eax,esi
  4079b2:	sbb    edx,edi
  4079b4:	sub    eax,DWORD PTR [esp+0x10]
  4079b8:	sbb    edx,DWORD PTR [esp+0x14]
  4079bc:	add    ecx,0x4
  4079bf:	mov    DWORD PTR [esp+0x14],0x0
  4079c7:	mov    edi,edx
  4079c9:	mov    DWORD PTR [ecx-0x4],eax
  4079cc:	mov    edx,eax
  4079ce:	and    edi,0x1
  4079d1:	cmp    DWORD PTR [esp+0x1c],ebx
  4079d5:	mov    DWORD PTR [esp+0x10],edi
  4079d9:	ja     0x4079a0
  4079db:	mov    eax,DWORD PTR [esp+0x24]
  4079df:	mov    esi,DWORD PTR [esp+0x10]
  4079e3:	mov    edi,DWORD PTR [esp+0x14]
  4079e7:	mov    DWORD PTR [esp+0x1c],ebp
  4079eb:	cmp    eax,ebp
  4079ed:	jbe    0x407a3a
  4079ef:	mov    DWORD PTR [esp+0x2c],ecx
  4079f3:	mov    DWORD PTR [esp+0x10],eax
  4079f7:	mov    esi,esi
  4079f9:	lea    edi,[edi+eiz*1+0x0]
  407a00:	add    ebp,0x4
  407a03:	mov    eax,DWORD PTR [ebp-0x4]
  407a06:	xor    edx,edx
  407a08:	sub    eax,esi
  407a0a:	sbb    edx,edi
  407a0c:	add    ecx,0x4
  407a0f:	xor    edi,edi
  407a11:	mov    ebx,edx
  407a13:	mov    DWORD PTR [ecx-0x4],eax
  407a16:	mov    edx,eax
  407a18:	and    ebx,0x1
  407a1b:	cmp    DWORD PTR [esp+0x10],ebp
  407a1f:	mov    esi,ebx
  407a21:	ja     0x407a00
  407a23:	mov    esi,DWORD PTR [esp+0x1c]
  407a27:	mov    eax,DWORD PTR [esp+0x24]
  407a2b:	mov    ebx,DWORD PTR [esp+0x2c]
  407a2f:	not    esi
  407a31:	add    eax,esi
  407a33:	shr    eax,0x2
  407a36:	lea    ecx,[ebx+eax*4+0x4]
  407a3a:	test   edx,edx
  407a3c:	jne    0x407a5f
  407a3e:	mov    edi,DWORD PTR [esp+0x20]
  407a42:	mov    eax,edi
  407a44:	shl    eax,0x2
  407a47:	sub    ecx,eax
  407a49:	mov    eax,edi
  407a4b:	nop
  407a4c:	lea    esi,[esi+eiz*1+0x0]
  407a50:	sub    eax,0x1
  407a53:	mov    edx,DWORD PTR [ecx+eax*4-0x4]
  407a57:	test   edx,edx
  407a59:	je     0x407a50
  407a5b:	mov    DWORD PTR [esp+0x20],eax
  407a5f:	mov    eax,DWORD PTR [esp+0x28]
  407a63:	mov    ecx,DWORD PTR [esp+0x20]
  407a67:	mov    DWORD PTR [eax+0x10],ecx
  407a6a:	add    esp,0x3c
  407a6d:	pop    ebx
  407a6e:	pop    esi
  407a6f:	pop    edi
  407a70:	pop    ebp
  407a71:	ret    
  407a72:	mov    DWORD PTR [esp],0x0
  407a79:	call   0x407250
  407a7e:	test   eax,eax
  407a80:	je     0x407aad
  407a82:	mov    DWORD PTR [eax+0x10],0x1
  407a89:	mov    DWORD PTR [eax+0x14],0x0
  407a90:	add    esp,0x3c
  407a93:	pop    ebx
  407a94:	pop    esi
  407a95:	pop    edi
  407a96:	pop    ebp
  407a97:	ret    
  407a98:	nop
  407a99:	lea    esi,[esi+eiz*1+0x0]
  407aa0:	mov    eax,ebp
  407aa2:	mov    bl,0x1
  407aa4:	mov    ebp,esi
  407aa6:	mov    esi,eax
  407aa8:	jmp    0x40794e
  407aad:	xor    eax,eax
  407aaf:	jmp    0x407a6a
  407ab1:	jmp    0x407ac0
  407ab3:	nop
  407ab4:	nop
  407ab5:	nop
  407ab6:	nop
  407ab7:	nop
  407ab8:	nop
  407ab9:	nop
  407aba:	nop
  407abb:	nop
  407abc:	nop
  407abd:	nop
  407abe:	nop
  407abf:	nop
  407ac0:	push   ebp
  407ac1:	push   edi
  407ac2:	mov    ecx,0x20
  407ac7:	push   esi
  407ac8:	push   ebx
  407ac9:	sub    esp,0x14
  407acc:	mov    eax,DWORD PTR [esp+0x28]
  407ad0:	mov    ebp,DWORD PTR [esp+0x2c]
  407ad4:	lea    esi,[eax+0x14]
  407ad7:	mov    eax,DWORD PTR [eax+0x10]
  407ada:	lea    ebx,[esi+eax*4]
  407add:	mov    edx,DWORD PTR [ebx-0x4]
  407ae0:	lea    edi,[ebx-0x4]
  407ae3:	bsr    eax,edx
  407ae6:	xor    eax,0x1f
  407ae9:	sub    ecx,eax
  407aeb:	cmp    eax,0xa
  407aee:	mov    DWORD PTR [ebp+0x0],ecx
  407af1:	jg     0x407b30
  407af3:	mov    ecx,0xb
  407af8:	mov    ebp,edx
  407afa:	mov    DWORD PTR [esp],0x0
  407b01:	sub    ecx,eax
  407b03:	shr    ebp,cl
  407b05:	or     ebp,0x3ff00000
  407b0b:	mov    DWORD PTR [esp+0x4],ebp
  407b0f:	xor    ebp,ebp
  407b11:	cmp    esi,edi
  407b13:	jae    0x407b1a
  407b15:	mov    ebp,DWORD PTR [ebx-0x8]
  407b18:	shr    ebp,cl
  407b1a:	lea    ecx,[eax+0x15]
  407b1d:	shl    edx,cl
  407b1f:	or     ebp,edx
  407b21:	mov    DWORD PTR [esp],ebp
  407b24:	fld    QWORD PTR [esp]
  407b27:	add    esp,0x14
  407b2a:	pop    ebx
  407b2b:	pop    esi
  407b2c:	pop    edi
  407b2d:	pop    ebp
  407b2e:	ret    
  407b2f:	nop
  407b30:	cmp    esi,edi
  407b32:	jae    0x407ba0
  407b34:	lea    edi,[ebx-0x8]
  407b37:	mov    ebp,eax
  407b39:	sub    ebp,0xb
  407b3c:	mov    DWORD PTR [esp+0xc],edi
  407b40:	mov    edi,DWORD PTR [ebx-0x8]
  407b43:	je     0x407bc4
  407b45:	mov    ecx,0x2b
  407b4a:	sub    ecx,eax
  407b4c:	mov    eax,ecx
  407b4e:	mov    ecx,ebp
  407b50:	shl    edx,cl
  407b52:	mov    ecx,eax
  407b54:	mov    DWORD PTR [esp],edx
  407b57:	mov    edx,edi
  407b59:	shr    edx,cl
  407b5b:	mov    ecx,edx
  407b5d:	mov    edx,DWORD PTR [esp]
  407b60:	mov    DWORD PTR [esp],0x0
  407b67:	or     edx,ecx
  407b69:	or     edx,0x3ff00000
  407b6f:	mov    DWORD PTR [esp+0x4],edx
  407b73:	xor    edx,edx
  407b75:	cmp    esi,DWORD PTR [esp+0xc]
  407b79:	jae    0x407b82
  407b7b:	mov    edx,DWORD PTR [ebx-0xc]
  407b7e:	mov    ecx,eax
  407b80:	shr    edx,cl
  407b82:	mov    ecx,ebp
  407b84:	shl    edi,cl
  407b86:	or     edi,edx
  407b88:	mov    DWORD PTR [esp],edi
  407b8b:	fld    QWORD PTR [esp]
  407b8e:	add    esp,0x14
  407b91:	pop    ebx
  407b92:	pop    esi
  407b93:	pop    edi
  407b94:	pop    ebp
  407b95:	ret    
  407b96:	lea    esi,[esi+0x0]
  407b99:	lea    edi,[edi+eiz*1+0x0]
  407ba0:	sub    eax,0xb
  407ba3:	mov    ebp,eax
  407ba5:	je     0x407bc2
  407ba7:	mov    ecx,ebp
  407ba9:	mov    DWORD PTR [esp],0x0
  407bb0:	xor    edi,edi
  407bb2:	shl    edx,cl
  407bb4:	or     edx,0x3ff00000
  407bba:	mov    DWORD PTR [esp+0x4],edx
  407bbe:	xor    edx,edx
  407bc0:	jmp    0x407b82
  407bc2:	xor    edi,edi
  407bc4:	or     edx,0x3ff00000
  407bca:	mov    DWORD PTR [esp],edi
  407bcd:	mov    DWORD PTR [esp+0x4],edx
  407bd1:	fld    QWORD PTR [esp]
  407bd4:	add    esp,0x14
  407bd7:	pop    ebx
  407bd8:	pop    esi
  407bd9:	pop    edi
  407bda:	pop    ebp
  407bdb:	ret    
  407bdc:	lea    esi,[esi+eiz*1+0x0]
  407be0:	push   ebp
  407be1:	push   edi
  407be2:	push   esi
  407be3:	push   ebx
  407be4:	sub    esp,0x1c
  407be7:	mov    DWORD PTR [esp],0x1
  407bee:	mov    edi,DWORD PTR [esp+0x30]
  407bf2:	mov    esi,DWORD PTR [esp+0x34]
  407bf6:	call   0x407250
  407bfb:	test   eax,eax
  407bfd:	je     0x407cc5
  407c03:	mov    ebx,esi
  407c05:	and    esi,0x7fffffff
  407c0b:	and    ebx,0xfffff
  407c11:	mov    edx,esi
  407c13:	mov    ecx,ebx
  407c15:	shr    edx,0x14
  407c18:	or     ecx,0x100000
  407c1e:	test   edx,edx
  407c20:	cmovne ebx,ecx
  407c23:	test   edi,edi
  407c25:	jne    0x407c65
  407c27:	tzcnt  ecx,ebx
  407c2b:	mov    DWORD PTR [eax+0x10],0x1
  407c32:	shr    ebx,cl
  407c34:	test   edx,edx
  407c36:	lea    esi,[ecx+0x20]
  407c39:	mov    DWORD PTR [eax+0x14],ebx
  407c3c:	mov    ebx,0x1
  407c41:	je     0x407c97
  407c43:	mov    edi,DWORD PTR [esp+0x38]
  407c47:	lea    edx,[esi+edx*1-0x433]
  407c4e:	mov    DWORD PTR [edi],edx
  407c50:	mov    edi,DWORD PTR [esp+0x3c]
  407c54:	mov    edx,0x35
  407c59:	sub    edx,esi
  407c5b:	mov    DWORD PTR [edi],edx
  407c5d:	add    esp,0x1c
  407c60:	pop    ebx
  407c61:	pop    esi
  407c62:	pop    edi
  407c63:	pop    ebp
  407c64:	ret    
  407c65:	tzcnt  esi,edi
  407c69:	mov    ecx,esi
  407c6b:	shr    edi,cl
  407c6d:	test   esi,esi
  407c6f:	je     0x407cc0
  407c71:	mov    ecx,0x20
  407c76:	mov    ebp,ebx
  407c78:	sub    ecx,esi
  407c7a:	shl    ebp,cl
  407c7c:	mov    ecx,esi
  407c7e:	or     edi,ebp
  407c80:	shr    ebx,cl
  407c82:	mov    DWORD PTR [eax+0x14],edi
  407c85:	cmp    ebx,0x1
  407c88:	mov    DWORD PTR [eax+0x18],ebx
  407c8b:	sbb    ebx,ebx
  407c8d:	add    ebx,0x2
  407c90:	test   edx,edx
  407c92:	mov    DWORD PTR [eax+0x10],ebx
  407c95:	jne    0x407c43
  407c97:	bsr    edx,DWORD PTR [eax+ebx*4+0x10]
  407c9c:	mov    edi,DWORD PTR [esp+0x38]
  407ca0:	sub    esi,0x432
  407ca6:	shl    ebx,0x5
  407ca9:	mov    DWORD PTR [edi],esi
  407cab:	mov    edi,DWORD PTR [esp+0x3c]
  407caf:	xor    edx,0x1f
  407cb2:	sub    ebx,edx
  407cb4:	mov    DWORD PTR [edi],ebx
  407cb6:	add    esp,0x1c
  407cb9:	pop    ebx
  407cba:	pop    esi
  407cbb:	pop    edi
  407cbc:	pop    ebp
  407cbd:	ret    
  407cbe:	xchg   ax,ax
  407cc0:	mov    DWORD PTR [eax+0x14],edi
  407cc3:	jmp    0x407c85
  407cc5:	xor    eax,eax
  407cc7:	jmp    0x407c5d
  407cc9:	lea    esi,[esi+eiz*1+0x0]
  407cd0:	mov    ecx,DWORD PTR [esp+0x8]
  407cd4:	mov    eax,DWORD PTR [esp+0x4]
  407cd8:	lea    edx,[ecx+0x1]
  407cdb:	movzx  ecx,BYTE PTR [ecx]
  407cde:	test   cl,cl
  407ce0:	mov    BYTE PTR [eax],cl
  407ce2:	je     0x407cf4
  407ce4:	add    edx,0x1
  407ce7:	movzx  ecx,BYTE PTR [edx-0x1]
  407ceb:	add    eax,0x1
  407cee:	test   cl,cl
  407cf0:	mov    BYTE PTR [eax],cl
  407cf2:	jne    0x407ce4
  407cf4:	repz ret 
  407cf6:	nop
  407cf7:	nop
  407cf8:	nop
  407cf9:	nop
  407cfa:	nop
  407cfb:	nop
  407cfc:	nop
  407cfd:	nop
  407cfe:	nop
  407cff:	nop
  407d00:	push   esi
  407d01:	push   ebx
  407d02:	sub    esp,0x34
  407d05:	mov    ebx,DWORD PTR [esp+0x44]
  407d09:	mov    esi,DWORD PTR [esp+0x4c]
  407d0d:	test   ebx,ebx
  407d0f:	je     0x407e50
  407d15:	mov    ecx,DWORD PTR [esp+0x48]
  407d19:	test   ecx,ecx
  407d1b:	je     0x407e60
  407d21:	mov    eax,DWORD PTR [esi]
  407d23:	mov    DWORD PTR [esi],0x0
  407d29:	mov    DWORD PTR [esp+0x2c],eax
  407d2d:	movzx  eax,BYTE PTR [ebx]
  407d30:	test   al,al
  407d32:	je     0x407dd1
  407d38:	cmp    DWORD PTR [esp+0x54],0x1
  407d3d:	jbe    0x407db4
  407d3f:	cmp    BYTE PTR [esp+0x2c],0x0
  407d44:	jne    0x407de2
  407d4a:	mov    DWORD PTR [esp+0x4],eax
  407d4e:	mov    eax,DWORD PTR [esp+0x50]
  407d52:	mov    DWORD PTR [esp],eax
  407d55:	call   DWORD PTR ds:0x40c1ac
  407d5b:	sub    esp,0x8
  407d5e:	test   eax,eax
  407d60:	je     0x407db4
  407d62:	cmp    DWORD PTR [esp+0x48],0x1
  407d67:	jbe    0x407e7f
  407d6d:	mov    eax,DWORD PTR [esp+0x40]
  407d71:	mov    DWORD PTR [esp+0x14],0x1
  407d79:	mov    DWORD PTR [esp+0xc],0x2
  407d81:	mov    DWORD PTR [esp+0x8],ebx
  407d85:	mov    DWORD PTR [esp+0x10],eax
  407d89:	mov    eax,DWORD PTR [esp+0x50]
  407d8d:	mov    DWORD PTR [esp+0x4],0x8
  407d95:	mov    DWORD PTR [esp],eax
  407d98:	call   DWORD PTR ds:0x40c1b4
  407d9e:	sub    esp,0x18
  407da1:	test   eax,eax
  407da3:	je     0x407e6a
  407da9:	add    esp,0x34
  407dac:	mov    eax,0x2
  407db1:	pop    ebx
  407db2:	pop    esi
  407db3:	ret    
  407db4:	mov    eax,DWORD PTR [esp+0x50]
  407db8:	test   eax,eax
  407dba:	jne    0x407e10
  407dbc:	movzx  eax,BYTE PTR [ebx]
  407dbf:	mov    edx,DWORD PTR [esp+0x40]
  407dc3:	mov    WORD PTR [edx],ax
  407dc6:	add    esp,0x34
  407dc9:	mov    eax,0x1
  407dce:	pop    ebx
  407dcf:	pop    esi
  407dd0:	ret    
  407dd1:	mov    eax,DWORD PTR [esp+0x40]
  407dd5:	xor    edx,edx
  407dd7:	mov    WORD PTR [eax],dx
  407dda:	xor    eax,eax
  407ddc:	add    esp,0x34
  407ddf:	pop    ebx
  407de0:	pop    esi
  407de1:	ret    
  407de2:	mov    BYTE PTR [esp+0x2d],al
  407de6:	mov    eax,DWORD PTR [esp+0x40]
  407dea:	mov    DWORD PTR [esp+0x14],0x1
  407df2:	mov    DWORD PTR [esp+0xc],0x2
  407dfa:	mov    DWORD PTR [esp+0x10],eax
  407dfe:	lea    eax,[esp+0x2c]
  407e02:	mov    DWORD PTR [esp+0x8],eax
  407e06:	jmp    0x407d89
  407e08:	nop
  407e09:	lea    esi,[esi+eiz*1+0x0]
  407e10:	mov    eax,DWORD PTR [esp+0x40]
  407e14:	mov    DWORD PTR [esp+0x14],0x1
  407e1c:	mov    DWORD PTR [esp+0xc],0x1
  407e24:	mov    DWORD PTR [esp+0x8],ebx
  407e28:	mov    DWORD PTR [esp+0x4],0x8
  407e30:	mov    DWORD PTR [esp+0x10],eax
  407e34:	mov    eax,DWORD PTR [esp+0x50]
  407e38:	mov    DWORD PTR [esp],eax
  407e3b:	call   DWORD PTR ds:0x40c1b4
  407e41:	sub    esp,0x18
  407e44:	test   eax,eax
  407e46:	je     0x407e6a
  407e48:	mov    eax,0x1
  407e4d:	jmp    0x407ddc
  407e4f:	nop
  407e50:	add    esp,0x34
  407e53:	xor    eax,eax
  407e55:	pop    ebx
  407e56:	pop    esi
  407e57:	ret    
  407e58:	nop
  407e59:	lea    esi,[esi+eiz*1+0x0]
  407e60:	mov    eax,0xfffffffe
  407e65:	jmp    0x407ddc
  407e6a:	call   0x408378
  407e6f:	mov    DWORD PTR [eax],0x2a
  407e75:	mov    eax,0xffffffff
  407e7a:	jmp    0x407ddc
  407e7f:	movzx  eax,BYTE PTR [ebx]
  407e82:	mov    BYTE PTR [esi],al
  407e84:	mov    eax,0xfffffffe
  407e89:	jmp    0x407ddc
  407e8e:	xchg   ax,ax
  407e90:	push   edi
  407e91:	push   esi
  407e92:	xor    eax,eax
  407e94:	push   ebx
  407e95:	sub    esp,0x30
  407e98:	mov    ebx,DWORD PTR [esp+0x40]
  407e9c:	mov    WORD PTR [esp+0x2e],ax
  407ea1:	lea    eax,[esp+0x2e]
  407ea5:	mov    esi,DWORD PTR [esp+0x4c]
  407ea9:	test   ebx,ebx
  407eab:	cmove  ebx,eax
  407eae:	mov    eax,ds:0x40c1f8
  407eb3:	mov    edi,DWORD PTR [eax]
  407eb5:	call   0x408570
  407eba:	mov    DWORD PTR [esp+0x10],eax
  407ebe:	mov    eax,DWORD PTR [esp+0x48]
  407ec2:	test   esi,esi
  407ec4:	mov    edx,0x40be08
  407ec9:	mov    DWORD PTR [esp+0x14],edi
  407ecd:	mov    DWORD PTR [esp],ebx
  407ed0:	cmove  esi,edx
  407ed3:	mov    DWORD PTR [esp+0x8],eax
  407ed7:	mov    eax,DWORD PTR [esp+0x44]
  407edb:	mov    DWORD PTR [esp+0xc],esi
  407edf:	mov    DWORD PTR [esp+0x4],eax
  407ee3:	call   0x407d00
  407ee8:	add    esp,0x30
  407eeb:	pop    ebx
  407eec:	pop    esi
  407eed:	pop    edi
  407eee:	ret    
  407eef:	nop
  407ef0:	push   ebp
  407ef1:	push   edi
  407ef2:	mov    eax,0x40be04
  407ef7:	push   esi
  407ef8:	push   ebx
  407ef9:	sub    esp,0x4c
  407efc:	mov    edx,DWORD PTR [esp+0x6c]
  407f00:	mov    esi,DWORD PTR [esp+0x64]
  407f04:	mov    ebp,DWORD PTR [esp+0x60]
  407f08:	mov    edi,DWORD PTR [esp+0x68]
  407f0c:	test   edx,edx
  407f0e:	cmovne eax,DWORD PTR [esp+0x6c]
  407f13:	mov    DWORD PTR [esp+0x6c],eax
  407f17:	call   0x408570
  407f1c:	mov    DWORD PTR [esp+0x28],eax
  407f20:	mov    eax,ds:0x40c1f8
  407f25:	test   esi,esi
  407f27:	mov    eax,DWORD PTR [eax]
  407f29:	mov    DWORD PTR [esp+0x2c],eax
  407f2d:	je     0x408030
  407f33:	mov    ecx,DWORD PTR [esi]
  407f35:	test   ecx,ecx
  407f37:	je     0x408030
  407f3d:	test   ebp,ebp
  407f3f:	je     0x407fc0
  407f41:	xor    ebx,ebx
  407f43:	test   edi,edi
  407f45:	je     0x408030
  407f4b:	mov    DWORD PTR [esp+0x64],esi
  407f4f:	mov    esi,ebp
  407f51:	mov    ebp,DWORD PTR [esp+0x64]
  407f55:	jmp    0x407f75
  407f57:	mov    esi,esi
  407f59:	lea    edi,[edi+eiz*1+0x0]
  407f60:	mov    ecx,DWORD PTR [ebp+0x0]
  407f63:	add    ebx,eax
  407f65:	add    esi,0x2
  407f68:	add    ecx,eax
  407f6a:	cmp    edi,ebx
  407f6c:	mov    DWORD PTR [ebp+0x0],ecx
  407f6f:	jbe    0x408020
  407f75:	mov    eax,DWORD PTR [esp+0x2c]
  407f79:	mov    DWORD PTR [esp+0x4],ecx
  407f7d:	mov    DWORD PTR [esp],esi
  407f80:	mov    DWORD PTR [esp+0x14],eax
  407f84:	mov    eax,DWORD PTR [esp+0x28]
  407f88:	mov    DWORD PTR [esp+0x10],eax
  407f8c:	mov    eax,DWORD PTR [esp+0x6c]
  407f90:	mov    DWORD PTR [esp+0xc],eax
  407f94:	mov    eax,edi
  407f96:	sub    eax,ebx
  407f98:	mov    DWORD PTR [esp+0x8],eax
  407f9c:	call   0x407d00
  407fa1:	cmp    eax,0x0
  407fa4:	jg     0x407f60
  407fa6:	jne    0x408020
  407fa8:	cmp    ebx,edi
  407faa:	jae    0x408020
  407fac:	mov    DWORD PTR [ebp+0x0],0x0
  407fb3:	add    esp,0x4c
  407fb6:	mov    eax,ebx
  407fb8:	pop    ebx
  407fb9:	pop    esi
  407fba:	pop    edi
  407fbb:	pop    ebp
  407fbc:	ret    
  407fbd:	lea    esi,[esi+0x0]
  407fc0:	xor    eax,eax
  407fc2:	xor    ebx,ebx
  407fc4:	test   edi,edi
  407fc6:	mov    WORD PTR [esp+0x3e],ax
  407fcb:	lea    ebp,[esp+0x3e]
  407fcf:	je     0x408020
  407fd1:	mov    DWORD PTR [esp+0x68],edi
  407fd5:	mov    edi,esi
  407fd7:	mov    esi,DWORD PTR [esp+0x2c]
  407fdb:	jmp    0x407fee
  407fdd:	lea    esi,[esi+0x0]
  407fe0:	mov    ecx,DWORD PTR [edi]
  407fe2:	add    ebx,eax
  407fe4:	add    ecx,eax
  407fe6:	cmp    DWORD PTR [esp+0x68],ebx
  407fea:	mov    DWORD PTR [edi],ecx
  407fec:	jbe    0x408020
  407fee:	mov    eax,DWORD PTR [esp+0x28]
  407ff2:	mov    DWORD PTR [esp+0x14],esi
  407ff6:	mov    DWORD PTR [esp+0x8],esi
  407ffa:	mov    DWORD PTR [esp+0x4],ecx
  407ffe:	mov    DWORD PTR [esp],ebp
  408001:	mov    DWORD PTR [esp+0x10],eax
  408005:	mov    eax,DWORD PTR [esp+0x6c]
  408009:	mov    DWORD PTR [esp+0xc],eax
  40800d:	call   0x407d00
  408012:	test   eax,eax
  408014:	jg     0x407fe0
  408016:	lea    esi,[esi+0x0]
  408019:	lea    edi,[edi+eiz*1+0x0]
  408020:	add    esp,0x4c
  408023:	mov    eax,ebx
  408025:	pop    ebx
  408026:	pop    esi
  408027:	pop    edi
  408028:	pop    ebp
  408029:	ret    
  40802a:	lea    esi,[esi+0x0]
  408030:	add    esp,0x4c
  408033:	xor    eax,eax
  408035:	pop    ebx
  408036:	pop    esi
  408037:	pop    edi
  408038:	pop    ebp
  408039:	ret    
  40803a:	lea    esi,[esi+0x0]
  408040:	push   esi
  408041:	push   ebx
  408042:	xor    eax,eax
  408044:	sub    esp,0x34
  408047:	mov    WORD PTR [esp+0x2e],ax
  40804c:	mov    eax,ds:0x40c1f8
  408051:	mov    ebx,DWORD PTR [esp+0x48]
  408055:	mov    esi,DWORD PTR [eax]
  408057:	call   0x408570
  40805c:	mov    DWORD PTR [esp+0x10],eax
  408060:	mov    eax,DWORD PTR [esp+0x44]
  408064:	test   ebx,ebx
  408066:	mov    edx,0x40be00
  40806b:	mov    DWORD PTR [esp+0x14],esi
  40806f:	cmove  ebx,edx
  408072:	mov    DWORD PTR [esp+0x8],eax
  408076:	mov    eax,DWORD PTR [esp+0x40]
  40807a:	mov    DWORD PTR [esp+0xc],ebx
  40807e:	mov    DWORD PTR [esp+0x4],eax
  408082:	lea    eax,[esp+0x2e]
  408086:	mov    DWORD PTR [esp],eax
  408089:	call   0x407d00
  40808e:	add    esp,0x34
  408091:	pop    ebx
  408092:	pop    esi
  408093:	ret    
  408094:	nop
  408095:	nop
  408096:	nop
  408097:	nop
  408098:	nop
  408099:	nop
  40809a:	nop
  40809b:	nop
  40809c:	nop
  40809d:	nop
  40809e:	nop
  40809f:	nop
  4080a0:	sub    esp,0x4c
  4080a3:	mov    edx,DWORD PTR [esp+0x58]
  4080a7:	mov    eax,DWORD PTR [esp+0x54]
  4080ab:	test   edx,edx
  4080ad:	mov    WORD PTR [esp+0x2c],ax
  4080b2:	jne    0x4080d0
  4080b4:	cmp    ax,0xff
  4080b8:	ja     0x408128
  4080ba:	mov    ecx,DWORD PTR [esp+0x50]
  4080be:	mov    BYTE PTR [ecx],al
  4080c0:	mov    eax,0x1
  4080c5:	add    esp,0x4c
  4080c8:	ret    
  4080c9:	lea    esi,[esi+eiz*1+0x0]
  4080d0:	lea    eax,[esp+0x3c]
  4080d4:	mov    DWORD PTR [esp+0x3c],0x0
  4080dc:	mov    DWORD PTR [esp+0x18],0x0
  4080e4:	mov    DWORD PTR [esp+0xc],0x1
  4080ec:	mov    DWORD PTR [esp+0x4],0x0
  4080f4:	mov    DWORD PTR [esp+0x1c],eax
  4080f8:	mov    eax,DWORD PTR [esp+0x5c]
  4080fc:	mov    DWORD PTR [esp],edx
  4080ff:	mov    DWORD PTR [esp+0x14],eax
  408103:	mov    eax,DWORD PTR [esp+0x50]
  408107:	mov    DWORD PTR [esp+0x10],eax
  40810b:	lea    eax,[esp+0x2c]
  40810f:	mov    DWORD PTR [esp+0x8],eax
  408113:	call   DWORD PTR ds:0x40c1dc
  408119:	sub    esp,0x20
  40811c:	test   eax,eax
  40811e:	je     0x408128
  408120:	mov    edx,DWORD PTR [esp+0x3c]
  408124:	test   edx,edx
  408126:	je     0x4080c5
  408128:	call   0x408378
  40812d:	mov    DWORD PTR [eax],0x2a
  408133:	mov    eax,0xffffffff
  408138:	add    esp,0x4c
  40813b:	ret    
  40813c:	lea    esi,[esi+eiz*1+0x0]
  408140:	push   edi
  408141:	push   esi
  408142:	push   ebx
  408143:	sub    esp,0x20
  408146:	mov    ebx,DWORD PTR [esp+0x30]
  40814a:	lea    eax,[esp+0x1b]
  40814e:	mov    esi,DWORD PTR [esp+0x34]
  408152:	test   ebx,ebx
  408154:	movzx  esi,si
  408157:	cmove  ebx,eax
  40815a:	mov    eax,ds:0x40c1f8
  40815f:	mov    edi,DWORD PTR [eax]
  408161:	call   0x408570
  408166:	mov    DWORD PTR [esp+0x4],esi
  40816a:	mov    DWORD PTR [esp],ebx
  40816d:	mov    DWORD PTR [esp+0xc],edi
  408171:	mov    DWORD PTR [esp+0x8],eax
  408175:	call   0x4080a0
  40817a:	add    esp,0x20
  40817d:	pop    ebx
  40817e:	pop    esi
  40817f:	pop    edi
  408180:	ret    
  408181:	jmp    0x408190
  408183:	nop
  408184:	nop
  408185:	nop
  408186:	nop
  408187:	nop
  408188:	nop
  408189:	nop
  40818a:	nop
  40818b:	nop
  40818c:	nop
  40818d:	nop
  40818e:	nop
  40818f:	nop
  408190:	push   ebp
  408191:	push   edi
  408192:	push   esi
  408193:	push   ebx
  408194:	sub    esp,0x3c
  408197:	mov    ebx,DWORD PTR [esp+0x50]
  40819b:	call   0x408570
  4081a0:	mov    DWORD PTR [esp+0x1c],eax
  4081a4:	mov    eax,ds:0x40c1f8
  4081a9:	mov    ebp,DWORD PTR [eax]
  4081ab:	mov    eax,DWORD PTR [esp+0x54]
  4081af:	mov    edi,DWORD PTR [eax]
  4081b1:	test   edi,edi
  4081b3:	je     0x4082a0
  4081b9:	test   ebx,ebx
  4081bb:	je     0x408245
  4081c1:	mov    eax,DWORD PTR [esp+0x58]
  4081c5:	xor    esi,esi
  4081c7:	test   eax,eax
  4081c9:	je     0x408218
  4081cb:	mov    eax,esi
  4081cd:	mov    esi,edi
  4081cf:	mov    edi,ebp
  4081d1:	mov    ebp,eax
  4081d3:	jmp    0x4081e8
  4081d5:	add    ebx,eax
  4081d7:	add    ebp,eax
  4081d9:	cmp    BYTE PTR [ebx-0x1],0x0
  4081dd:	je     0x408230
  4081df:	add    esi,0x2
  4081e2:	cmp    DWORD PTR [esp+0x58],ebp
  4081e6:	jbe    0x408214
  4081e8:	mov    eax,DWORD PTR [esp+0x1c]
  4081ec:	mov    DWORD PTR [esp+0xc],edi
  4081f0:	mov    DWORD PTR [esp+0x8],eax
  4081f4:	movzx  eax,WORD PTR [esi]
  4081f7:	mov    DWORD PTR [esp],ebx
  4081fa:	mov    DWORD PTR [esp+0x4],eax
  4081fe:	call   0x4080a0
  408203:	test   eax,eax
  408205:	jg     0x4081d5
  408207:	mov    eax,0xffffffff
  40820c:	add    esp,0x3c
  40820f:	pop    ebx
  408210:	pop    esi
  408211:	pop    edi
  408212:	pop    ebp
  408213:	ret    
  408214:	mov    edi,esi
  408216:	mov    esi,ebp
  408218:	mov    eax,DWORD PTR [esp+0x54]
  40821c:	mov    DWORD PTR [eax],edi
  40821e:	add    esp,0x3c
  408221:	mov    eax,esi
  408223:	pop    ebx
  408224:	pop    esi
  408225:	pop    edi
  408226:	pop    ebp
  408227:	ret    
  408228:	nop
  408229:	lea    esi,[esi+eiz*1+0x0]
  408230:	mov    eax,DWORD PTR [esp+0x54]
  408234:	mov    DWORD PTR [eax],0x0
  40823a:	add    esp,0x3c
  40823d:	lea    eax,[ebp-0x1]
  408240:	pop    ebx
  408241:	pop    esi
  408242:	pop    edi
  408243:	pop    ebp
  408244:	ret    
  408245:	mov    edx,DWORD PTR [esp+0x58]
  408249:	lea    esi,[esp+0x2b]
  40824d:	test   edx,edx
  40824f:	je     0x4082ac
  408251:	mov    eax,ebx
  408253:	mov    ebx,edi
  408255:	mov    edi,eax
  408257:	jmp    0x408272
  408259:	lea    esi,[esi+eiz*1+0x0]
  408260:	add    edi,eax
  408262:	cmp    BYTE PTR [esp+eax*1+0x2a],0x0
  408267:	je     0x4082b3
  408269:	add    ebx,0x2
  40826c:	cmp    DWORD PTR [esp+0x58],edi
  408270:	jbe    0x4082aa
  408272:	mov    eax,DWORD PTR [esp+0x1c]
  408276:	mov    DWORD PTR [esp+0xc],ebp
  40827a:	mov    DWORD PTR [esp+0x8],eax
  40827e:	movzx  eax,WORD PTR [ebx]
  408281:	mov    DWORD PTR [esp],esi
  408284:	mov    DWORD PTR [esp+0x4],eax
  408288:	call   0x4080a0
  40828d:	test   eax,eax
  40828f:	jg     0x408260
  408291:	jmp    0x408207
  408296:	lea    esi,[esi+0x0]
  408299:	lea    edi,[edi+eiz*1+0x0]
  4082a0:	add    esp,0x3c
  4082a3:	xor    eax,eax
  4082a5:	pop    ebx
  4082a6:	pop    esi
  4082a7:	pop    edi
  4082a8:	pop    ebp
  4082a9:	ret    
  4082aa:	mov    ebx,edi
  4082ac:	mov    eax,ebx
  4082ae:	jmp    0x40820c
  4082b3:	lea    eax,[edi-0x1]
  4082b6:	jmp    0x40820c
  4082bb:	nop
  4082bc:	nop
  4082bd:	nop
  4082be:	nop
  4082bf:	nop
  4082c0:	jmp    DWORD PTR ds:0x40c280
  4082c6:	nop
  4082c7:	nop
  4082c8:	jmp    DWORD PTR ds:0x40c27c
  4082ce:	nop
  4082cf:	nop
  4082d0:	jmp    DWORD PTR ds:0x40c278
  4082d6:	nop
  4082d7:	nop
  4082d8:	jmp    DWORD PTR ds:0x40c270
  4082de:	nop
  4082df:	nop
  4082e0:	jmp    DWORD PTR ds:0x40c26c
  4082e6:	nop
  4082e7:	nop
  4082e8:	jmp    DWORD PTR ds:0x40c268
  4082ee:	nop
  4082ef:	nop
  4082f0:	jmp    DWORD PTR ds:0x40c264
  4082f6:	nop
  4082f7:	nop
  4082f8:	jmp    DWORD PTR ds:0x40c260
  4082fe:	nop
  4082ff:	nop
  408300:	jmp    DWORD PTR ds:0x40c25c
  408306:	nop
  408307:	nop
  408308:	jmp    DWORD PTR ds:0x40c258
  40830e:	nop
  40830f:	nop
  408310:	jmp    DWORD PTR ds:0x40c250
  408316:	nop
  408317:	nop
  408318:	jmp    DWORD PTR ds:0x40c24c
  40831e:	nop
  40831f:	nop
  408320:	jmp    DWORD PTR ds:0x40c248
  408326:	nop
  408327:	nop
  408328:	jmp    DWORD PTR ds:0x40c244
  40832e:	nop
  40832f:	nop
  408330:	jmp    DWORD PTR ds:0x40c240
  408336:	nop
  408337:	nop
  408338:	jmp    DWORD PTR ds:0x40c23c
  40833e:	nop
  40833f:	nop
  408340:	jmp    DWORD PTR ds:0x40c238
  408346:	nop
  408347:	nop
  408348:	jmp    DWORD PTR ds:0x40c234
  40834e:	nop
  40834f:	nop
  408350:	jmp    DWORD PTR ds:0x40c230
  408356:	nop
  408357:	nop
  408358:	jmp    DWORD PTR ds:0x40c22c
  40835e:	nop
  40835f:	nop
  408360:	jmp    DWORD PTR ds:0x40c228
  408366:	nop
  408367:	nop
  408368:	jmp    DWORD PTR ds:0x40c220
  40836e:	nop
  40836f:	nop
  408370:	jmp    DWORD PTR ds:0x40c218
  408376:	nop
  408377:	nop
  408378:	jmp    DWORD PTR ds:0x40c210
  40837e:	nop
  40837f:	nop
  408380:	jmp    DWORD PTR ds:0x40c20c
  408386:	nop
  408387:	nop
  408388:	jmp    DWORD PTR ds:0x40c208
  40838e:	nop
  40838f:	nop
  408390:	jmp    DWORD PTR ds:0x40c200
  408396:	nop
  408397:	nop
  408398:	jmp    DWORD PTR ds:0x40c1fc
  40839e:	nop
  40839f:	nop
  4083a0:	jmp    DWORD PTR ds:0x40c1ec
  4083a6:	nop
  4083a7:	nop
  4083a8:	jmp    DWORD PTR ds:0x40c1e8
  4083ae:	nop
  4083af:	nop
  4083b0:	mov    eax,ds:0x40be0c
  4083b5:	ret    
  4083b6:	lea    esi,[esi+0x0]
  4083b9:	lea    edi,[edi+eiz*1+0x0]
  4083c0:	mov    eax,DWORD PTR [esp+0x4]
  4083c4:	xchg   DWORD PTR ds:0x40be0c,eax
  4083ca:	ret    
  4083cb:	nop
  4083cc:	nop
  4083cd:	nop
  4083ce:	nop
  4083cf:	nop
  4083d0:	mov    eax,ds:0x40be10
  4083d5:	ret    
  4083d6:	lea    esi,[esi+0x0]
  4083d9:	lea    edi,[edi+eiz*1+0x0]
  4083e0:	mov    eax,DWORD PTR [esp+0x4]
  4083e4:	xchg   DWORD PTR ds:0x40be10,eax
  4083ea:	ret    
  4083eb:	nop
  4083ec:	lea    esi,[esi+eiz*1+0x0]
  4083f0:	push   ebx
  4083f1:	sub    esp,0x18
  4083f4:	mov    ebx,DWORD PTR [esp+0x20]
  4083f8:	mov    DWORD PTR [esp],0x40a8c0
  4083ff:	call   DWORD PTR ds:0x40c194
  408405:	sub    esp,0x4
  408408:	mov    DWORD PTR [esp+0x4],0x40a8d6
  408410:	mov    DWORD PTR [esp],eax
  408413:	call   DWORD PTR ds:0x40c198
  408419:	mov    edx,0x4083e0
  40841e:	sub    esp,0x8
  408421:	test   eax,eax
  408423:	cmove  eax,edx
  408426:	mov    DWORD PTR [esp+0x20],ebx
  40842a:	mov    ds:0x409060,eax
  40842f:	add    esp,0x18
  408432:	pop    ebx
  408433:	jmp    eax
  408435:	lea    esi,[esi+eiz*1+0x0]
  408439:	lea    edi,[edi+eiz*1+0x0]
  408440:	sub    esp,0x1c
  408443:	mov    DWORD PTR [esp],0x40a8c0
  40844a:	call   DWORD PTR ds:0x40c194
  408450:	sub    esp,0x4
  408453:	mov    DWORD PTR [esp+0x4],0x40a8e9
  40845b:	mov    DWORD PTR [esp],eax
  40845e:	call   DWORD PTR ds:0x40c198
  408464:	mov    edx,0x4083d0
  408469:	sub    esp,0x8
  40846c:	test   eax,eax
  40846e:	cmove  eax,edx
  408471:	mov    ds:0x40905c,eax
  408476:	add    esp,0x1c
  408479:	jmp    eax
  40847b:	nop
  40847c:	lea    esi,[esi+eiz*1+0x0]
  408480:	mov    eax,ds:0x409060
  408485:	jmp    eax
  408487:	mov    esi,esi
  408489:	lea    edi,[edi+eiz*1+0x0]
  408490:	mov    eax,ds:0x40905c
  408495:	jmp    eax
  408497:	nop
  408498:	nop
  408499:	nop
  40849a:	nop
  40849b:	nop
  40849c:	nop
  40849d:	nop
  40849e:	nop
  40849f:	nop
  4084a0:	mov    eax,ds:0x40be14
  4084a5:	mov    eax,DWORD PTR [eax]
  4084a7:	ret    
  4084a8:	nop
  4084a9:	lea    esi,[esi+eiz*1+0x0]
  4084b0:	sub    esp,0x1c
  4084b3:	mov    DWORD PTR [esp+0x4],0x0
  4084bb:	mov    DWORD PTR [esp],0x2
  4084c2:	call   0x408588
  4084c7:	mov    DWORD PTR [esp+0x4],0x2e
  4084cf:	mov    DWORD PTR [esp],eax
  4084d2:	call   0x408300
  4084d7:	mov    edx,eax
  4084d9:	xor    eax,eax
  4084db:	test   edx,edx
  4084dd:	je     0x4084ea
  4084df:	add    edx,0x1
  4084e2:	mov    DWORD PTR [esp],edx
  4084e5:	call   0x408580
  4084ea:	add    esp,0x1c
  4084ed:	ret    
  4084ee:	xchg   ax,ax
  4084f0:	push   esi
  4084f1:	push   ebx
  4084f2:	sub    esp,0x14
  4084f5:	mov    DWORD PTR [esp],0x40a8fc
  4084fc:	call   DWORD PTR ds:0x40c194
  408502:	sub    esp,0x4
  408505:	test   eax,eax
  408507:	mov    ebx,eax
  408509:	je     0x408551
  40850b:	mov    DWORD PTR [esp+0x4],0x40a912
  408513:	mov    DWORD PTR [esp],eax
  408516:	mov    esi,DWORD PTR ds:0x40c198
  40851c:	call   esi
  40851e:	sub    esp,0x8
  408521:	test   eax,eax
  408523:	je     0x408531
  408525:	mov    ds:0x409064,eax
  40852a:	add    esp,0x14
  40852d:	pop    ebx
  40852e:	pop    esi
  40852f:	jmp    eax
  408531:	mov    DWORD PTR [esp+0x4],0x40a926
  408539:	mov    DWORD PTR [esp],ebx
  40853c:	call   esi
  40853e:	mov    edx,eax
  408540:	sub    esp,0x8
  408543:	mov    ds:0x40be14,eax
  408548:	test   edx,edx
  40854a:	mov    eax,0x4084a0
  40854f:	jne    0x408525
  408551:	mov    eax,0x4084b0
  408556:	mov    ds:0x409064,eax
  40855b:	add    esp,0x14
  40855e:	pop    ebx
  40855f:	pop    esi
  408560:	jmp    eax
  408562:	lea    esi,[esi+eiz*1+0x0]
  408569:	lea    edi,[edi+eiz*1+0x0]
  408570:	mov    eax,ds:0x409064
  408575:	jmp    eax
  408577:	nop
  408578:	nop
  408579:	nop
  40857a:	nop
  40857b:	nop
  40857c:	nop
  40857d:	nop
  40857e:	nop
  40857f:	nop
  408580:	jmp    DWORD PTR ds:0x40c274
  408586:	nop
  408587:	nop
  408588:	jmp    DWORD PTR ds:0x40c254
  40858e:	nop
  40858f:	nop
  408590:	push   ebp
  408591:	push   edi
  408592:	push   esi
  408593:	push   ebx
  408594:	sub    esp,0x1c
  408597:	mov    edx,DWORD PTR [esp+0x3c]
  40859b:	mov    ebx,DWORD PTR [esp+0x30]
  40859f:	mov    ecx,DWORD PTR [esp+0x34]
  4085a3:	mov    edi,DWORD PTR [esp+0x38]
  4085a7:	test   edx,edx
  4085a9:	mov    DWORD PTR [esp+0x8],ebx
  4085ad:	mov    esi,ecx
  4085af:	mov    eax,edi
  4085b1:	jne    0x4085e4
  4085b3:	cmp    edi,ecx
  4085b5:	ja     0x408660
  4085bb:	test   edi,edi
  4085bd:	mov    ebp,edi
  4085bf:	jne    0x4085cc
  4085c1:	mov    eax,0x1
  4085c6:	xor    edx,edx
  4085c8:	div    edi
  4085ca:	mov    ebp,eax
  4085cc:	mov    eax,ecx
  4085ce:	xor    edx,edx
  4085d0:	div    ebp
  4085d2:	mov    ecx,eax
  4085d4:	mov    eax,ebx
  4085d6:	mov    edi,ecx
  4085d8:	div    ebp
  4085da:	add    esp,0x1c
  4085dd:	mov    edx,edi
  4085df:	pop    ebx
  4085e0:	pop    esi
  4085e1:	pop    edi
  4085e2:	pop    ebp
  4085e3:	ret    
  4085e4:	cmp    edx,ecx
  4085e6:	ja     0x408650
  4085e8:	bsr    edi,edx
  4085eb:	xor    edi,0x1f
  4085ee:	je     0x408672
  4085f4:	mov    ebx,0x20
  4085f9:	mov    ecx,edi
  4085fb:	mov    ebp,eax
  4085fd:	sub    ebx,edi
  4085ff:	shl    edx,cl
  408601:	mov    ecx,ebx
  408603:	shr    ebp,cl
  408605:	mov    ecx,edi
  408607:	shl    eax,cl
  408609:	or     ebp,edx
  40860b:	mov    ecx,ebx
  40860d:	mov    DWORD PTR [esp+0xc],eax
  408611:	mov    edx,esi
  408613:	mov    eax,DWORD PTR [esp+0x8]
  408617:	shr    edx,cl
  408619:	mov    ecx,edi
  40861b:	shl    esi,cl
  40861d:	mov    ecx,ebx
  40861f:	shr    eax,cl
  408621:	or     eax,esi
  408623:	div    ebp
  408625:	mov    esi,edx
  408627:	mov    ebx,eax
  408629:	mul    DWORD PTR [esp+0xc]
  40862d:	cmp    esi,edx
  40862f:	jb     0x408641
  408631:	mov    ebp,DWORD PTR [esp+0x8]
  408635:	mov    ecx,edi
  408637:	shl    ebp,cl
  408639:	cmp    ebp,eax
  40863b:	jae    0x408690
  40863d:	cmp    esi,edx
  40863f:	jne    0x408690
  408641:	add    esp,0x1c
  408644:	xor    edi,edi
  408646:	lea    eax,[ebx-0x1]
  408649:	mov    edx,edi
  40864b:	pop    ebx
  40864c:	pop    esi
  40864d:	pop    edi
  40864e:	pop    ebp
  40864f:	ret    
  408650:	add    esp,0x1c
  408653:	xor    edi,edi
  408655:	xor    eax,eax
  408657:	pop    ebx
  408658:	mov    edx,edi
  40865a:	pop    esi
  40865b:	pop    edi
  40865c:	pop    ebp
  40865d:	ret    
  40865e:	xchg   ax,ax
  408660:	add    esp,0x1c
  408663:	mov    eax,ebx
  408665:	mov    edx,ecx
  408667:	div    edi
  408669:	xor    edi,edi
  40866b:	pop    ebx
  40866c:	mov    edx,edi
  40866e:	pop    esi
  40866f:	pop    edi
  408670:	pop    ebp
  408671:	ret    
  408672:	cmp    eax,DWORD PTR [esp+0x8]
  408676:	jbe    0x408682
  408678:	xor    eax,eax
  40867a:	cmp    edx,ecx
  40867c:	jae    0x4085da
  408682:	mov    eax,0x1
  408687:	jmp    0x4085da
  40868c:	lea    esi,[esi+eiz*1+0x0]
  408690:	mov    eax,ebx
  408692:	xor    edi,edi
  408694:	jmp    0x4085da
  408699:	nop
  40869a:	nop
  40869b:	nop
  40869c:	nop
  40869d:	nop
  40869e:	nop
  40869f:	nop
  4086a0:	push   ebp
  4086a1:	push   edi
  4086a2:	push   esi
  4086a3:	push   ebx
  4086a4:	sub    esp,0x1c
  4086a7:	mov    eax,DWORD PTR [esp+0x3c]
  4086ab:	mov    ecx,DWORD PTR [esp+0x30]
  4086af:	mov    edi,DWORD PTR [esp+0x34]
  4086b3:	mov    esi,DWORD PTR [esp+0x38]
  4086b7:	test   eax,eax
  4086b9:	mov    DWORD PTR [esp+0xc],ecx
  4086bd:	mov    edx,eax
  4086bf:	mov    ebx,edi
  4086c1:	mov    DWORD PTR [esp],esi
  4086c4:	mov    DWORD PTR [esp+0x4],ecx
  4086c8:	mov    DWORD PTR [esp+0x8],edi
  4086cc:	jne    0x4086e4
  4086ce:	cmp    esi,edi
  4086d0:	jbe    0x408720
  4086d2:	mov    eax,ecx
  4086d4:	mov    edx,edi
  4086d6:	div    esi
  4086d8:	add    esp,0x1c
  4086db:	mov    eax,edx
  4086dd:	xor    edx,edx
  4086df:	pop    ebx
  4086e0:	pop    esi
  4086e1:	pop    edi
  4086e2:	pop    ebp
  4086e3:	ret    
  4086e4:	cmp    eax,edi
  4086e6:	ja     0x408740
  4086e8:	bsr    ebp,eax
  4086eb:	xor    ebp,0x1f
  4086ee:	jne    0x408750
  4086f0:	mov    ebp,DWORD PTR [esp+0x4]
  4086f4:	cmp    DWORD PTR [esp],ebp
  4086f7:	jbe    0x4087e0
  4086fd:	cmp    eax,DWORD PTR [esp+0x8]
  408701:	jb     0x4087e0
  408707:	mov    eax,DWORD PTR [esp+0x4]
  40870b:	mov    edx,DWORD PTR [esp+0x8]
  40870f:	add    esp,0x1c
  408712:	pop    ebx
  408713:	pop    esi
  408714:	pop    edi
  408715:	pop    ebp
  408716:	ret    
  408717:	mov    esi,esi
  408719:	lea    edi,[edi+eiz*1+0x0]
  408720:	test   esi,esi
  408722:	mov    ebp,esi
  408724:	jne    0x408731
  408726:	mov    eax,0x1
  40872b:	xor    edx,edx
  40872d:	div    esi
  40872f:	mov    ebp,eax
  408731:	mov    eax,edi
  408733:	xor    edx,edx
  408735:	div    ebp
  408737:	mov    eax,ecx
  408739:	div    ebp
  40873b:	jmp    0x4086d8
  40873d:	lea    esi,[esi+0x0]
  408740:	add    esp,0x1c
  408743:	mov    edx,edi
  408745:	mov    eax,ecx
  408747:	pop    ebx
  408748:	pop    esi
  408749:	pop    edi
  40874a:	pop    ebp
  40874b:	ret    
  40874c:	lea    esi,[esi+eiz*1+0x0]
  408750:	mov    edi,DWORD PTR [esp]
  408753:	mov    esi,0x20
  408758:	mov    ecx,ebp
  40875a:	sub    esi,ebp
  40875c:	shl    edx,cl
  40875e:	mov    ecx,esi
  408760:	mov    eax,edi
  408762:	shr    eax,cl
  408764:	mov    ecx,ebp
  408766:	or     eax,edx
  408768:	mov    edx,DWORD PTR [esp+0xc]
  40876c:	mov    DWORD PTR [esp],eax
  40876f:	mov    eax,edi
  408771:	mov    edi,ebx
  408773:	shl    eax,cl
  408775:	mov    ecx,esi
  408777:	shr    edi,cl
  408779:	mov    ecx,ebp
  40877b:	mov    DWORD PTR [esp+0x4],eax
  40877f:	shl    ebx,cl
  408781:	mov    ecx,esi
  408783:	shr    edx,cl
  408785:	mov    ecx,ebp
  408787:	mov    eax,edx
  408789:	mov    edx,DWORD PTR [esp+0xc]
  40878d:	or     eax,ebx
  40878f:	shl    edx,cl
  408791:	mov    DWORD PTR [esp+0x8],edx
  408795:	mov    edx,edi
  408797:	div    DWORD PTR [esp]
  40879a:	mov    ecx,edx
  40879c:	mul    DWORD PTR [esp+0x4]
  4087a0:	cmp    ecx,edx
  4087a2:	mov    ebx,eax
  4087a4:	mov    edi,edx
  4087a6:	jb     0x4087b2
  4087a8:	cmp    DWORD PTR [esp+0x8],eax
  4087ac:	jae    0x4087bd
  4087ae:	cmp    ecx,edx
  4087b0:	jne    0x4087bd
  4087b2:	mov    edi,edx
  4087b4:	mov    ebx,eax
  4087b6:	sub    ebx,DWORD PTR [esp+0x4]
  4087ba:	sbb    edi,DWORD PTR [esp]
  4087bd:	mov    edx,ecx
  4087bf:	mov    ecx,ebp
  4087c1:	mov    eax,DWORD PTR [esp+0x8]
  4087c5:	sub    eax,ebx
  4087c7:	sbb    edx,edi
  4087c9:	shr    eax,cl
  4087cb:	mov    ebx,edx
  4087cd:	mov    ecx,esi
  4087cf:	add    esp,0x1c
  4087d2:	shl    ebx,cl
  4087d4:	mov    ecx,ebp
  4087d6:	or     eax,ebx
  4087d8:	shr    edx,cl
  4087da:	pop    ebx
  4087db:	pop    esi
  4087dc:	pop    edi
  4087dd:	pop    ebp
  4087de:	ret    
  4087df:	nop
  4087e0:	mov    ebx,ecx
  4087e2:	sub    ebx,esi
  4087e4:	sbb    edi,eax
  4087e6:	mov    DWORD PTR [esp+0x4],ebx
  4087ea:	mov    DWORD PTR [esp+0x8],edi
  4087ee:	jmp    0x408707
  4087f3:	nop
  4087f4:	nop
  4087f5:	nop
  4087f6:	nop
  4087f7:	nop
  4087f8:	nop
  4087f9:	nop
  4087fa:	nop
  4087fb:	nop
  4087fc:	nop
  4087fd:	nop
  4087fe:	nop
  4087ff:	nop
  408800:	lea    ecx,[esp+0x4]
  408804:	and    esp,0xfffffff0
  408807:	push   DWORD PTR [ecx-0x4]
  40880a:	push   ebp
  40880b:	mov    ebp,esp
  40880d:	push   edi
  40880e:	push   esi
  40880f:	push   ebx
  408810:	push   ecx
  408811:	xor    edi,edi
  408813:	sub    esp,0x48
  408816:	mov    esi,DWORD PTR [ecx]
  408818:	mov    ebx,DWORD PTR [ecx+0x4]
  40881b:	call   0x401840
  408820:	mov    DWORD PTR [esp],0x1
  408827:	call   DWORD PTR ds:0x40c1bc
  40882d:	sub    esp,0x4
  408830:	mov    DWORD PTR [esp+0x10],0x0
  408838:	mov    DWORD PTR [esp+0xc],0x40a180
  408840:	mov    DWORD PTR [esp+0x8],0x40a11e
  408848:	mov    DWORD PTR [esp+0x4],ebx
  40884c:	mov    DWORD PTR [esp],esi
  40884f:	call   0x403350
  408854:	cmp    eax,0xffffffff
  408857:	je     0x4088b6
  408859:	cmp    eax,0x66
  40885c:	mov    edi,0x1
  408861:	je     0x408830
  408863:	cmp    eax,0x68
  408866:	je     0x4088a0
  408868:	cmp    eax,0x56
  40886b:	je     0x408890
  40886d:	mov    edx,DWORD PTR [ebx]
  40886f:	mov    DWORD PTR [esp],0x40a040
  408876:	mov    DWORD PTR [esp+0x4],edx
  40887a:	call   0x401560
  40887f:	mov    eax,0x1
  408884:	lea    esp,[ebp-0x10]
  408887:	pop    edx
  408888:	pop    ebx
  408889:	pop    esi
  40888a:	pop    edi
  40888b:	pop    ebp
  40888c:	lea    esp,[edx-0x4]
  40888f:	ret    
  408890:	mov    DWORD PTR [esp],0x40a0f0
  408897:	call   0x408310
  40889c:	xor    eax,eax
  40889e:	jmp    0x408884
  4088a0:	mov    ecx,DWORD PTR [ebx]
  4088a2:	mov    DWORD PTR [esp],0x40a040
  4088a9:	mov    DWORD PTR [esp+0x4],ecx
  4088ad:	call   0x401560
  4088b2:	xor    eax,eax
  4088b4:	jmp    0x408884
  4088b6:	mov    eax,ds:0x40902c
  4088bb:	mov    ecx,edi
  4088bd:	mov    DWORD PTR [ebp-0x30],ebx
  4088c0:	cmp    cl,0x1
  4088c3:	mov    DWORD PTR [ebp-0x2c],esi
  4088c6:	mov    edx,eax
  4088c8:	sbb    eax,eax
  4088ca:	lea    ecx,[eax+0x2]
  4088cd:	add    eax,0x3
  4088d0:	mov    ebx,edx
  4088d2:	mov    DWORD PTR [ebp-0x34],ecx
  4088d5:	mov    ecx,eax
  4088d7:	mov    eax,edi
  4088d9:	mov    BYTE PTR [ebp-0x35],al
  4088dc:	mov    edi,ecx
  4088de:	cmp    ebx,DWORD PTR [ebp-0x2c]
  4088e1:	jge    0x408977
  4088e7:	mov    esi,DWORD PTR [ebp-0x30]
  4088ea:	mov    esi,DWORD PTR [esi+ebx*4]
  4088ed:	mov    DWORD PTR [esp+0x8],0x1
  4088f5:	mov    DWORD PTR [esp],0x40a122
  4088fc:	mov    DWORD PTR [esp+0x4],esi
  408900:	call   0x4015e0
  408905:	test   eax,eax
  408907:	jne    0x40897e
  408909:	cmp    BYTE PTR [ebp-0x35],0x0
  40890d:	mov    DWORD PTR [ebp-0x28],0x40a132
  408914:	je     0x40891d
  408916:	mov    DWORD PTR [ebp-0x24],0x40a13a
  40891d:	mov    edx,DWORD PTR [ebp-0x34]
  408920:	lea    ecx,[ebp-0x28]
  408923:	mov    DWORD PTR [esp],edi
  408926:	mov    DWORD PTR [esp+0x4],ecx
  40892a:	mov    DWORD PTR [ebp+edx*4-0x28],0x40a150
  408932:	mov    DWORD PTR [ebp+edi*4-0x28],0x0
  40893a:	call   0x4016d8
  40893f:	test   eax,eax
  408941:	je     0x408950
  408943:	mov    DWORD PTR [esp],eax
  408946:	add    ebx,0x1
  408949:	call   0x4016d0
  40894e:	jmp    0x4088de
  408950:	mov    ebx,DWORD PTR ds:0x40c21c
  408956:	mov    DWORD PTR [esp+0x8],esi
  40895a:	mov    DWORD PTR [esp+0x4],0x40a0dd
  408962:	add    ebx,0x40
  408965:	mov    DWORD PTR [esp],ebx
  408968:	call   0x401580
  40896d:	mov    eax,0x1
  408972:	jmp    0x408884
  408977:	xor    eax,eax
  408979:	jmp    0x408884
  40897e:	call   0x4082d8
  408983:	nop
  408984:	nop
  408985:	nop
  408986:	nop
  408987:	nop
  408988:	nop
  408989:	nop
  40898a:	nop
  40898b:	nop
  40898c:	nop
  40898d:	nop
  40898e:	nop
  40898f:	nop
  408990:	pushf  
  408991:	pushf  
  408992:	pop    eax
  408993:	mov    edx,eax
  408995:	xor    eax,0x200000
  40899a:	push   eax
  40899b:	popf   
  40899c:	pushf  
  40899d:	pop    eax
  40899e:	popf   
  40899f:	xor    eax,edx
  4089a1:	test   eax,0x200000
  4089a6:	je     0x4089ed
  4089a8:	push   ebp
  4089a9:	xor    eax,eax
  4089ab:	mov    ebp,esp
  4089ad:	push   ebx
  4089ae:	cpuid  
  4089b0:	and    esp,0xfffffff0
  4089b3:	sub    esp,0x210
  4089b9:	test   eax,eax
  4089bb:	je     0x4089e9
  4089bd:	mov    eax,0x1
  4089c2:	cpuid  
  4089c4:	test   edx,0x2000000
  4089ca:	je     0x4089e9
  4089cc:	and    edx,0x1000000
  4089d2:	jne    0x4089ee
  4089d4:	stmxcsr DWORD PTR [esp+0xc]
  4089d9:	mov    eax,DWORD PTR [esp+0xc]
  4089dd:	or     ah,0x80
  4089e0:	mov    DWORD PTR [esp+0xc],eax
  4089e4:	ldmxcsr DWORD PTR [esp+0xc]
  4089e9:	mov    ebx,DWORD PTR [ebp-0x4]
  4089ec:	leave  
  4089ed:	ret    
  4089ee:	mov    DWORD PTR [esp+0x2c],0x0
  4089f6:	fxsave [esp+0x10]
  4089fb:	mov    eax,DWORD PTR [esp+0x28]
  4089ff:	mov    edx,eax
  408a01:	or     edx,0x40
  408a04:	test   BYTE PTR [esp+0x2c],0x40
  408a09:	cmovne eax,edx
  408a0c:	jmp    0x4089dd
  408a0e:	nop
  408a0f:	nop
  408a10:	push   ebp
  408a11:	mov    ebp,esp
  408a13:	sub    esp,0x18
  408a16:	call   0x401500
  408a1b:	mov    DWORD PTR [esp],0x401550
  408a22:	call   0x4017a0
  408a27:	leave  
  408a28:	ret    
  408a29:	nop
  408a2a:	nop
  408a2b:	nop
  408a2c:	nop
  408a2d:	nop
  408a2e:	nop
  408a2f:	nop
  408a30:	(bad)  
  408a31:	(bad)  
  408a32:	(bad)  
  408a33:	call   DWORD PTR [eax+0x10004089]
  408a39:	mov    al,BYTE PTR [eax+0x0]
  408a3c:	add    BYTE PTR [eax],al
  408a3e:	add    BYTE PTR [eax],al
  408a40:	(bad)  
  408a41:	(bad)  
  408a42:	(bad)  
  408a43:	inc    DWORD PTR [eax]
  408a45:	add    BYTE PTR [eax],al
	...

Disassembly of section .data:

00409000 <.data>:
  409000:	or     al,BYTE PTR [eax]
  409002:	add    BYTE PTR [eax],al
  409004:	inc    esp
  409005:	mov    al,BYTE PTR [eax+0x0]
  409008:	(bad)  
  409009:	(bad)  
  40900a:	(bad)  
  40900b:	(bad)  
  40900c:	(bad)  
  40900d:	(bad)  
  40900e:	(bad)  
  40900f:	(bad)  
  409010:	inc    DWORD PTR [eax]
  409012:	add    BYTE PTR [eax],al
  409014:	add    al,BYTE PTR [eax]
  409016:	add    BYTE PTR [eax],al
  409018:	(bad)  
  409019:	(bad)  
  40901a:	(bad)  
  40901b:	(bad)  
  40901c:	(bad)  
  40901d:	(bad)  
  40901e:	(bad)  
  40901f:	(bad)  
  409020:	(bad)  
  409021:	(bad)  
  409022:	(bad)  
  409023:	call   DWORD PTR ds:0x3f0040a4
  409029:	add    BYTE PTR [eax],al
  40902b:	add    BYTE PTR [ecx],al
  40902d:	add    BYTE PTR [eax],al
  40902f:	add    BYTE PTR [ecx],al
  409031:	add    BYTE PTR [eax],al
  409033:	add    bh,bh
  409035:	(bad)  
  409036:	(bad)  
  409037:	inc    DWORD PTR [eax+0x0]
  40903a:	add    BYTE PTR [eax],al
  40903c:	ret    
  40903d:	mov    edi,0x3fc0ffff
  409042:	add    BYTE PTR [eax],al
  409044:	add    DWORD PTR [eax],eax
  409046:	add    BYTE PTR [eax],al
  409048:	add    BYTE PTR [eax],al
  40904a:	add    BYTE PTR [eax],al
  40904c:	push   cs
  40904d:	add    BYTE PTR [eax],al
  40904f:	add    BYTE PTR [eax-0x4fffbf4c],al
  409055:	add    DWORD PTR [eax+0x0],0xffffffc0
  409059:	add    DWORD PTR [eax+0x0],0x40
  40905d:	test   BYTE PTR [eax+0x0],al
  409060:	lock add DWORD PTR [eax+0x0],0xfffffff0
  409065:	test   BYTE PTR [eax+0x0],al
  409068:	dec    esi
  409069:	out    0x40,al
  40906b:	mov    ebx,0x44bf19b1
  409070:	add    BYTE PTR [eax],al
	...

Disassembly of section .rdata:

0040a000 <.rdata>:
  40a000:	ins    BYTE PTR es:[edi],dx
  40a001:	imul   esp,DWORD PTR [edx+0x67],0x312d6a63
  40a008:	xor    ebp,DWORD PTR [esi]
  40a00a:	fs ins BYTE PTR es:[edi],dx
  40a00c:	ins    BYTE PTR es:[edi],dx
  40a00d:	add    BYTE PTR [edi+0x4a],bl
  40a010:	jbe    0x40a071
  40a012:	push   edx
  40a013:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  40a01c:	popa   
  40a01d:	jae    0x40a092
  40a01f:	gs jae 0x40a022
	...
  40a03e:	add    BYTE PTR [eax],al
  40a040:	push   ebp
  40a041:	jae    0x40a0a4
  40a043:	cmp    ah,BYTE PTR gs:[bx+si]
  40a047:	and    eax,0x2d5b2073
  40a04c:	pop    bp
  40a04e:	and    BYTE PTR [eax+esi*2],bh
  40a051:	popa   
  40a052:	je     0x40a0bc
  40a054:	or     al,BYTE PTR ds:[edi+0x65]
  40a058:	outs   dx,BYTE PTR ds:[esi]
  40a059:	gs jb  0x40a0bd
  40a05c:	je     0x40a0c3
  40a05e:	and    BYTE PTR [eax+ebp*2+0x65],dh
  40a062:	and    BYTE PTR [ecx+ebp*2+0x62],cl
  40a066:	push   esi
  40a067:	dec    esp
  40a068:	inc    ebx
  40a069:	and    BYTE PTR [eax+0x6c],dh
  40a06c:	jne    0x40a0d5
  40a06e:	imul   ebp,DWORD PTR [esi+0x73],0x63616320
  40a075:	push   0x6f662065
  40a07a:	jb     0x40a09c
  40a07c:	je     0x40a0e6
  40a07e:	and    BYTE PTR gs:[ebx+0x70],dh
  40a082:	arpl   WORD PTR gs:[ecx+0x66],bp
  40a086:	imul   esp,DWORD PTR [ebp+0x64],0x756c7020
  40a08d:	imul   ebp,DWORD PTR [bp+0x73],0x72696420
  40a095:	arpl   WORD PTR gs:[edi+ebp*2+0x72],si
  40a09a:	jns    0x40a0ca
  40a09c:	or     ah,BYTE PTR [eax]
  40a09e:	sub    eax,0x2d202c66
  40a0a3:	sub    eax,0x63726f66
  40a0a8:	and    BYTE PTR gs:[eax],ah
  40a0ab:	outs   dx,WORD PTR ds:[esi]
  40a0ad:	jb     0x40a112
  40a0af:	gs data16 jne 0x40a11f
  40a0b3:	ins    BYTE PTR es:[edi],dx
  40a0b4:	jns    0x40a0d6
  40a0b6:	jb     0x40a11d
  40a0b8:	jae    0x40a11f
  40a0ba:	je     0x40a0dc
  40a0bc:	je     0x40a126
  40a0be:	and    BYTE PTR gs:[eax+0x6c],dh
  40a0c2:	jne    0x40a12b
  40a0c4:	imul   ebp,DWORD PTR [esi+0x20],0x68636163
  40a0cb:	and    BYTE PTR gs:[eax],ch
  40a0ce:	imul   esp,DWORD PTR [esi+0x20],0x65207469
  40a0d5:	js     0x40a140
  40a0d7:	jae    0x40a14d
  40a0d9:	jae    0x40a104
  40a0db:	or     al,BYTE PTR [eax]
  40a0dd:	dec    esi
  40a0de:	outs   dx,DWORD PTR ds:[esi]
  40a0df:	and    BYTE PTR [eax+0x6c],dh
  40a0e2:	jne    0x40a14b
  40a0e4:	imul   ebp,DWORD PTR [esi+0x73],0x206e6920
  40a0eb:	and    eax,0xa73
  40a0f0:	dec    esp
  40a0f1:	imul   esp,DWORD PTR [edx+0x56],0x7020434c
  40a0f8:	ins    BYTE PTR es:[edi],dx
  40a0f9:	jne    0x40a162
  40a0fb:	imul   ebp,DWORD PTR [esi+0x73],0x63616320
  40a102:	push   0x65672065
  40a107:	outs   dx,BYTE PTR ds:[esi]
  40a108:	gs jb  0x40a16c
  40a10b:	je     0x40a176
  40a10d:	outs   dx,DWORD PTR ds:[esi]
  40a10e:	outs   dx,BYTE PTR ds:[esi]
  40a10f:	and    BYTE PTR [esi+0x65],dh
  40a112:	jb     0x40a187
  40a114:	imul   ebp,DWORD PTR [edi+0x6e],0x322e3220
  40a11b:	cs add BYTE PTR ss:[esi+0x68],ah
  40a120:	push   esi
  40a121:	add    BYTE PTR [esi+0x4c],dl
  40a124:	inc    ebx
  40a125:	pop    edi
  40a126:	push   eax
  40a127:	dec    esp
  40a128:	push   ebp
  40a129:	inc    edi
  40a12a:	dec    ecx
  40a12b:	dec    esi
  40a12c:	pop    edi
  40a12d:	push   eax
  40a12e:	inc    ecx
  40a12f:	push   esp
  40a130:	dec    eax
  40a131:	add    BYTE PTR ds:0x6975712d,ch
  40a137:	gs je  0x40a13a
  40a13a:	sub    eax,0x7365722d
  40a13f:	gs je  0x40a16f
  40a142:	jo     0x40a1b0
  40a144:	jne    0x40a1ad
  40a146:	imul   ebp,DWORD PTR [esi+0x73],0x6361632d
  40a14d:	push   0x2d2d0065
  40a152:	add    BYTE PTR [esi+0x6f],ah
  40a155:	jb     0x40a1ba
  40a157:	add    BYTE PTR gs:[eax+0x65],ch
  40a15b:	ins    BYTE PTR es:[edi],dx
  40a15c:	jo     0x40a15e
  40a15e:	jbe    0x40a1c5
  40a160:	jb     0x40a1d5
  40a162:	imul   ebp,DWORD PTR [edi+0x6e],0x0
	...
  40a17d:	add    BYTE PTR [eax],al
  40a17f:	add    BYTE PTR [ebx-0x5f],dl
  40a182:	inc    eax
	...
  40a18b:	add    BYTE PTR [esi+0x0],ah
  40a18e:	add    BYTE PTR [eax],al
  40a190:	pop    ecx
  40a191:	mov    eax,ds:0x40
  40a196:	add    BYTE PTR [eax],al
  40a198:	add    BYTE PTR [eax],al
  40a19a:	add    BYTE PTR [eax],al
  40a19c:	push   0x5e000000
  40a1a1:	mov    eax,ds:0x40
  40a1a6:	add    BYTE PTR [eax],al
  40a1a8:	add    BYTE PTR [eax],al
  40a1aa:	add    BYTE PTR [eax],al
  40a1ac:	push   esi
	...
  40a1bd:	add    BYTE PTR [eax],al
  40a1bf:	add    BYTE PTR ds:0x73253d73,ah
  40a1c5:	add    BYTE PTR [eax],al
  40a1c7:	add    BYTE PTR [eax-0x4d],al
  40a1ca:	inc    eax
  40a1cb:	add    BYTE PTR [eax-0x50],al
  40a1ce:	inc    eax
  40a1cf:	add    BYTE PTR [eax],dl
  40a1d1:	sbb    al,BYTE PTR [eax+0x0]
  40a1d4:	push   ebp
  40a1d5:	outs   dx,BYTE PTR ds:[esi]
  40a1d6:	imul   ebp,DWORD PTR [esi+0x6f],0x77
  40a1da:	outs   dx,BYTE PTR ds:[esi]
  40a1db:	and    BYTE PTR [ebp+0x72],ah
  40a1de:	jb     0x40a24f
  40a1e0:	jb     0x40a1e2
  40a1e2:	add    BYTE PTR [eax],al
  40a1e4:	pop    edi
  40a1e5:	ins    DWORD PTR es:[edi],dx
  40a1e6:	popa   
  40a1e7:	je     0x40a251
  40a1e9:	gs jb  0x40a25e
  40a1ec:	sub    BYTE PTR [ecx],ch
  40a1ee:	cmp    ah,BYTE PTR [eax]
  40a1f0:	and    eax,0x6e692073
  40a1f5:	and    BYTE PTR ds:0x67252873,ah
  40a1fb:	sub    al,0x20
  40a1fd:	and    eax,0x20202967
  40a202:	sub    BYTE PTR [edx+0x65],dh
  40a205:	je     0x40a27d
  40a207:	popa   
  40a208:	ins    BYTE PTR es:[edi],dx
  40a209:	cmp    eax,0xa296725
  40a20e:	add    BYTE PTR [eax],al
  40a210:	inc    ecx
  40a211:	jb     0x40a27a
  40a213:	jne    0x40a282
  40a215:	outs   dx,BYTE PTR gs:[esi]
  40a217:	je     0x40a239
  40a219:	outs   dx,DWORD PTR fs:[esi]
  40a21b:	ins    DWORD PTR es:[edi],dx
  40a21c:	popa   
  40a21d:	imul   ebp,DWORD PTR [esi+0x20],0x6f727265
  40a224:	jb     0x40a246
  40a226:	sub    BYTE PTR [edi+ecx*2+0x4d],al
  40a22a:	inc    ecx
  40a22b:	dec    ecx
  40a22c:	dec    esi
  40a22d:	sub    DWORD PTR [eax],eax
  40a22f:	inc    ecx
  40a230:	jb     0x40a299
  40a232:	jne    0x40a2a1
  40a234:	outs   dx,BYTE PTR gs:[esi]
  40a236:	je     0x40a258
  40a238:	jae    0x40a2a3
  40a23a:	outs   dx,BYTE PTR ds:[esi]
  40a23b:	addr16 jne 0x40a2aa
  40a23e:	popa   
  40a23f:	jb     0x40a2aa
  40a241:	je     0x40a2bc
  40a243:	and    BYTE PTR [eax],ch
  40a245:	push   ebx
  40a246:	dec    ecx
  40a247:	inc    edi
  40a248:	dec    esi
  40a249:	sub    DWORD PTR [eax],eax
  40a24b:	add    BYTE PTR [edi+0x76],cl
  40a24e:	gs jb  0x40a2b7
  40a251:	ins    BYTE PTR es:[edi],dx
  40a252:	outs   dx,DWORD PTR ds:[esi]
  40a253:	ja     0x40a275
  40a255:	jb     0x40a2b8
  40a257:	outs   dx,BYTE PTR ds:[esi]
  40a258:	and    BYTE PTR gs:[di+0x72],ah
  40a25d:	jb     0x40a2ce
  40a25f:	jb     0x40a281
  40a261:	sub    BYTE PTR [edi+0x56],cl
  40a264:	inc    ebp
  40a265:	push   edx
  40a266:	inc    esi
  40a267:	dec    esp
  40a268:	dec    edi
  40a269:	push   edi
  40a26a:	sub    DWORD PTR [eax],eax
  40a26c:	push   esp
  40a26d:	push   0x65722065
  40a272:	jae    0x40a2e9
  40a274:	ins    BYTE PTR es:[edi],dx
  40a275:	je     0x40a297
  40a277:	imul   esi,DWORD PTR [ebx+0x20],0x206f6f74
  40a27e:	jae    0x40a2ed
  40a280:	popa   
  40a281:	ins    BYTE PTR es:[edi],dx
  40a282:	ins    BYTE PTR es:[edi],dx
  40a283:	and    BYTE PTR [edi+ebp*2+0x20],dh
  40a287:	bound  esp,QWORD PTR [ebp+0x20]
  40a28a:	jb     0x40a2f1
  40a28c:	jo     0x40a300
  40a28e:	gs jae 0x40a2f6
  40a291:	outs   dx,BYTE PTR ds:[esi]
  40a292:	je     0x40a2f9
  40a294:	and    BYTE PTR fs:[eax],ch
  40a297:	push   ebp
  40a298:	dec    esi
  40a299:	inc    esp
  40a29a:	inc    ebp
  40a29b:	push   edx
  40a29c:	inc    esi
  40a29d:	dec    esp
  40a29e:	dec    edi
  40a29f:	push   edi
  40a2a0:	sub    DWORD PTR [eax],eax
  40a2a2:	add    BYTE PTR [eax],al
  40a2a4:	push   esp
  40a2a5:	outs   dx,DWORD PTR ds:[esi]
  40a2a6:	je     0x40a309
  40a2a8:	ins    BYTE PTR es:[edi],dx
  40a2a9:	and    BYTE PTR [edi+ebp*2+0x73],ch
  40a2ad:	jae    0x40a2cf
  40a2af:	outs   dx,DWORD PTR ds:[esi]
  40a2b0:	data16 and BYTE PTR [ebx+0x69],dh
  40a2b4:	outs   dx,BYTE PTR ds:[si]
  40a2b6:	imul   esp,DWORD PTR [esi+0x69],0x636e6163
  40a2bd:	and    BYTE PTR gs:[eax],ch
  40a2c0:	push   esp
  40a2c1:	dec    esp
  40a2c2:	dec    edi
  40a2c3:	push   ebx
  40a2c4:	push   ebx
  40a2c5:	sub    DWORD PTR [eax],eax
  40a2c7:	add    BYTE PTR [eax+0x61],dl
  40a2ca:	jb     0x40a340
  40a2cc:	imul   esp,DWORD PTR [ecx+0x6c],0x736f6c20
  40a2d3:	jae    0x40a2f5
  40a2d5:	outs   dx,DWORD PTR ds:[esi]
  40a2d6:	data16 and BYTE PTR [ebx+0x69],dh
  40a2da:	outs   dx,BYTE PTR ds:[si]
  40a2dc:	imul   esp,DWORD PTR [esi+0x69],0x636e6163
  40a2e3:	and    BYTE PTR gs:[eax],ch
  40a2e6:	push   eax
  40a2e7:	dec    esp
  40a2e8:	dec    edi
  40a2e9:	push   ebx
  40a2ea:	push   ebx
  40a2eb:	sub    DWORD PTR [eax],eax
  40a2ed:	add    BYTE PTR [eax],al
  40a2ef:	add    BYTE PTR [eax],dl
  40a2f1:	mov    ds:0xa22f0040,al
  40a2f6:	inc    eax
  40a2f7:	add    BYTE PTR [edx+eiz*4+0x40],cl
  40a2fb:	add    BYTE PTR [edx+eiz*4+0x40],ch
  40a2ff:	add    BYTE PTR [edx+eiz*4-0x5d37ffc0],ah
  40a306:	inc    eax
  40a307:	add    BYTE PTR [ebp+0x69],cl
  40a30a:	outs   dx,BYTE PTR ds:[esi]
  40a30b:	addr16 ja 0x40a33b
  40a30e:	ja     0x40a346
  40a310:	xor    al,0x20
  40a312:	jb     0x40a389
  40a314:	outs   dx,BYTE PTR ds:[esi]
  40a315:	je     0x40a380
  40a317:	ins    DWORD PTR es:[edi],dx
  40a318:	and    BYTE PTR gs:[esi+0x61],ah
  40a31c:	imul   ebp,DWORD PTR [ebp+esi*2+0x72],0xa3a65
  40a324:	inc    ecx
  40a325:	fs fs jb 0x40a38e
  40a329:	jae    0x40a39e
  40a32b:	and    BYTE PTR ds:0x61682070,ah
  40a331:	jae    0x40a353
  40a333:	outs   dx,BYTE PTR ds:[esi]
  40a334:	outs   dx,DWORD PTR ds:[esi]
  40a335:	and    BYTE PTR [ecx+0x6d],ch
  40a338:	popa   
  40a339:	addr16 gs sub eax,0x74636573
  40a340:	imul   ebp,DWORD PTR [edi+0x6e],0x56202000
  40a347:	imul   esi,DWORD PTR [edx+0x74],0x516c6175
  40a34e:	jne    0x40a3b5
  40a350:	jb     0x40a3cb
  40a352:	and    BYTE PTR [esi+0x61],ah
  40a355:	imul   ebp,DWORD PTR [ebp+eiz*2+0x64],0x726f6620
  40a35d:	and    BYTE PTR ds:0x79622064,ah
  40a363:	je     0x40a3ca
  40a365:	jae    0x40a387
  40a367:	popa   
  40a368:	je     0x40a38a
  40a36a:	popa   
  40a36b:	fs fs jb 0x40a3d4
  40a36f:	jae    0x40a3e4
  40a371:	and    BYTE PTR ds:0x70,ah
  40a377:	add    BYTE PTR [eax],ah
  40a379:	and    BYTE PTR [esi+0x69],dl
  40a37c:	jb     0x40a3f2
  40a37e:	jne    0x40a3e1
  40a380:	ins    BYTE PTR es:[edi],dx
  40a381:	push   eax
  40a382:	jb     0x40a3f3
  40a384:	je     0x40a3eb
  40a386:	arpl   WORD PTR [eax+eiz*1+0x66],si
  40a38a:	popa   
  40a38b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x64],0x74697720
  40a393:	push   0x646f6320
  40a398:	and    BYTE PTR gs:[eax],dh
  40a39b:	js     0x40a3c2
  40a39d:	js     0x40a39f
  40a39f:	add    BYTE PTR [eax],ah
  40a3a1:	and    BYTE PTR [ebp+0x6e],dl
  40a3a4:	imul   ebp,DWORD PTR [esi+0x6f],0x77
  40a3a8:	outs   dx,BYTE PTR ds:[esi]
  40a3a9:	and    BYTE PTR [eax+0x73],dh
  40a3ac:	gs jne 0x40a413
  40a3af:	outs   dx,DWORD PTR ds:[esi]
  40a3b0:	and    BYTE PTR [edx+0x65],dh
  40a3b3:	ins    BYTE PTR es:[edi],dx
  40a3b4:	outs   dx,DWORD PTR ds:[esi]
  40a3b5:	arpl   WORD PTR [ecx+0x74],sp
  40a3b8:	imul   ebp,DWORD PTR [edi+0x6e],0x6f727020
  40a3bf:	je     0x40a430
  40a3c1:	arpl   WORD PTR [edi+0x6c],bp
  40a3c4:	and    BYTE PTR [esi+0x65],dh
  40a3c7:	jb     0x40a43c
  40a3c9:	imul   ebp,DWORD PTR [edi+0x6e],0x2e642520
  40a3d0:	or     al,BYTE PTR [eax]
  40a3d2:	add    BYTE PTR [eax],al
  40a3d4:	and    BYTE PTR [eax],ah
  40a3d6:	push   ebp
  40a3d7:	outs   dx,BYTE PTR ds:[esi]
  40a3d8:	imul   ebp,DWORD PTR [esi+0x6f],0x77
  40a3dc:	outs   dx,BYTE PTR ds:[esi]
  40a3dd:	and    BYTE PTR [eax+0x73],dh
  40a3e0:	gs jne 0x40a447
  40a3e3:	outs   dx,DWORD PTR ds:[esi]
  40a3e4:	and    BYTE PTR [edx+0x65],dh
  40a3e7:	ins    BYTE PTR es:[edi],dx
  40a3e8:	outs   dx,DWORD PTR ds:[esi]
  40a3e9:	arpl   WORD PTR [ecx+0x74],sp
  40a3ec:	imul   ebp,DWORD PTR [edi+0x6e],0x74696220
  40a3f3:	and    BYTE PTR [ebx+0x69],dh
  40a3f6:	jp     0x40a45d
  40a3f8:	and    BYTE PTR ds:0xa2e64,ah
  40a3fe:	add    BYTE PTR [eax],al
  40a400:	and    eax,0x203a73
  40a405:	push   eax
  40a406:	dec    edi
  40a407:	push   ebx
  40a408:	dec    ecx
  40a409:	pop    eax
  40a40a:	dec    esp
  40a40b:	pop    ecx
  40a40c:	pop    edi
  40a40d:	inc    ebx
  40a40e:	dec    edi
  40a40f:	push   edx
  40a410:	push   edx
  40a411:	inc    ebp
  40a412:	inc    ebx
  40a413:	push   esp
  40a414:	add    BYTE PTR [eax],al
  40a416:	jne    0x40a486
  40a418:	imul   ebp,DWORD PTR [esi+0x6f],0x77
  40a41c:	outs   dx,BYTE PTR ds:[esi]
  40a41d:	and    BYTE PTR [edi+0x70],ch
  40a420:	je     0x40a48b
  40a422:	outs   dx,DWORD PTR ds:[esi]
  40a423:	outs   dx,BYTE PTR ds:[esi]
  40a424:	and    BYTE PTR ds:0x7325202d,ch
  40a42a:	add    BYTE PTR [ebp+0x6e],dh
  40a42d:	imul   ebp,DWORD PTR [esi+0x6f],0x77
  40a431:	outs   dx,BYTE PTR ds:[esi]
  40a432:	and    BYTE PTR [edi+0x70],ch
  40a435:	je     0x40a4a0
  40a437:	outs   dx,DWORD PTR ds:[esi]
  40a438:	outs   dx,BYTE PTR ds:[esi]
  40a439:	and    BYTE PTR ds:0x6325202d,ch
  40a43f:	add    BYTE PTR [edi+0x70],ch
  40a442:	je     0x40a4ad
  40a444:	outs   dx,DWORD PTR ds:[esi]
  40a445:	outs   dx,BYTE PTR ds:[esi]
  40a446:	and    BYTE PTR [edi+ebp*2+0x65],ah
  40a44a:	jae    0x40a4ba
  40a44c:	daa    
  40a44d:	je     0x40a46f
  40a44f:	je     0x40a4b2
  40a451:	imul   esp,DWORD PTR [ebp+0x20],0x61
  40a455:	outs   dx,BYTE PTR ds:[esi]
  40a456:	and    BYTE PTR [ecx+0x72],ah
  40a459:	addr16 jne 0x40a4c9
  40a45c:	outs   dx,BYTE PTR gs:[esi]
  40a45e:	je     0x40a480
  40a460:	sub    eax,0x2e25202d
  40a465:	sub    dh,BYTE PTR [ebx+0x0]
  40a468:	popa   
  40a469:	ins    DWORD PTR es:[edi],dx
  40a46a:	bound  ebp,QWORD PTR [ecx+0x67]
  40a46d:	jne    0x40a4de
  40a46f:	jne    0x40a4e4
  40a471:	and    BYTE PTR [edi+0x70],ch
  40a474:	je     0x40a4df
  40a476:	outs   dx,DWORD PTR ds:[esi]
  40a477:	outs   dx,BYTE PTR ds:[esi]
  40a478:	and    BYTE PTR ds:0x2e25202d,ch
  40a47e:	sub    dh,BYTE PTR [ebx+0x0]
	...
  40a49d:	add    BYTE PTR [eax],al
  40a49f:	add    BYTE PTR [edi+0x70],ch
  40a4a2:	je     0x40a50d
  40a4a4:	outs   dx,DWORD PTR ds:[esi]
  40a4a5:	outs   dx,BYTE PTR ds:[esi]
  40a4a6:	and    BYTE PTR [edx+0x65],dh
  40a4a9:	jno    0x40a520
  40a4ab:	imul   esi,DWORD PTR [edx+0x65],0x6e612073
  40a4b2:	and    BYTE PTR [ecx+0x72],ah
  40a4b5:	addr16 jne 0x40a525
  40a4b8:	outs   dx,BYTE PTR gs:[esi]
  40a4ba:	je     0x40a4dc
  40a4bc:	sub    eax,0x7325202d
	...
  40a4dd:	add    BYTE PTR [eax],al
  40a4df:	add    BYTE PTR [edi+0x70],ch
  40a4e2:	je     0x40a54d
  40a4e4:	outs   dx,DWORD PTR ds:[esi]
  40a4e5:	outs   dx,BYTE PTR ds:[esi]
  40a4e6:	and    BYTE PTR [edx+0x65],dh
  40a4e9:	jno    0x40a560
  40a4eb:	imul   esi,DWORD PTR [edx+0x65],0x6e612073
  40a4f2:	and    BYTE PTR [ecx+0x72],ah
  40a4f5:	addr16 jne 0x40a565
  40a4f8:	outs   dx,BYTE PTR gs:[esi]
  40a4fa:	je     0x40a51c
  40a4fc:	sub    eax,0x6325202d
	...
  40a51d:	add    BYTE PTR [eax],al
  40a51f:	add    BYTE PTR [esi+0x61],cl
  40a522:	dec    esi
  40a523:	add    BYTE PTR [ecx+0x6e],cl
  40a526:	data16 add BYTE PTR [eax],ch
  40a529:	add    BYTE PTR [esi+0x0],ch
  40a52c:	jne    0x40a52e
  40a52e:	ins    BYTE PTR es:[edi],dx
  40a52f:	add    BYTE PTR [eax+eax*1+0x29],ch
  40a533:	add    BYTE PTR [eax],al
  40a535:	add    BYTE PTR [eax],ch
  40a537:	outs   dx,BYTE PTR ds:[esi]
  40a538:	jne    0x40a5a6
  40a53a:	ins    BYTE PTR es:[edi],dx
  40a53b:	sub    DWORD PTR [eax],eax
  40a53d:	push   eax
  40a53e:	push   edx
  40a53f:	dec    ecx
  40a540:	dec    esi
  40a541:	push   esp
  40a542:	inc    esi
  40a543:	pop    edi
  40a544:	inc    ebp
  40a545:	pop    eax
  40a546:	push   eax
  40a547:	dec    edi
  40a548:	dec    esi
  40a549:	inc    ebp
  40a54a:	dec    esi
  40a54b:	push   esp
  40a54c:	pop    edi
  40a54d:	inc    esp
  40a54e:	dec    ecx
  40a54f:	inc    edi
  40a550:	dec    ecx
  40a551:	push   esp
  40a552:	push   ebx
  40a553:	add    al,dl
  40a555:	push   ebx
  40a556:	inc    eax
  40a557:	add    BYTE PTR [eax+0x54],ah
  40a55a:	inc    eax
  40a55b:	add    BYTE PTR [eax+0x54],ah
  40a55e:	inc    eax
  40a55f:	add    BYTE PTR [eax+0x60004053],dh
  40a565:	push   esp
  40a566:	inc    eax
  40a567:	add    BYTE PTR [eax],al
  40a569:	push   esp
  40a56a:	inc    eax
  40a56b:	add    BYTE PTR [eax+0x54],ah
  40a56e:	inc    eax
  40a56f:	add    ah,ah
  40a571:	push   ebx
  40a572:	inc    eax
  40a573:	add    BYTE PTR [eax+0x54],ah
  40a576:	inc    eax
  40a577:	add    BYTE PTR [eax+0x54],ah
  40a57a:	inc    eax
  40a57b:	add    BYTE PTR [eax],dl
  40a57d:	push   esp
  40a57e:	inc    eax
  40a57f:	add    BYTE PTR [eax+0x60004053],dl
  40a585:	push   esp
  40a586:	inc    eax
  40a587:	add    BYTE PTR [eax+0x53],dh
  40a58a:	inc    eax
  40a58b:	add    BYTE PTR [eax+0x53],dl
  40a58e:	inc    eax
  40a58f:	add    BYTE PTR [eax+0x54],ah
  40a592:	inc    eax
  40a593:	add    BYTE PTR [eax],dh
  40a595:	push   ebx
  40a596:	inc    eax
  40a597:	add    BYTE PTR [eax+0x54],ah
  40a59a:	inc    eax
  40a59b:	add    BYTE PTR [eax+0x54],ah
  40a59e:	inc    eax
  40a59f:	add    BYTE PTR [eax+0x54],ah
  40a5a2:	inc    eax
  40a5a3:	add    BYTE PTR [eax+0x54],ah
  40a5a6:	inc    eax
  40a5a7:	add    BYTE PTR [eax+0x54],ah
  40a5aa:	inc    eax
  40a5ab:	add    BYTE PTR [eax+0x54],ah
  40a5ae:	inc    eax
  40a5af:	add    BYTE PTR [eax+0x54],ah
  40a5b2:	inc    eax
  40a5b3:	add    BYTE PTR [eax+0x54],ah
  40a5b6:	inc    eax
  40a5b7:	add    BYTE PTR [eax+0x54],ah
  40a5ba:	inc    eax
  40a5bb:	add    BYTE PTR [eax+0x54],ah
  40a5be:	inc    eax
  40a5bf:	add    BYTE PTR [eax+0x54],ah
  40a5c2:	inc    eax
  40a5c3:	add    BYTE PTR [eax+0x54],ah
  40a5c6:	inc    eax
  40a5c7:	add    BYTE PTR [eax+0x54],ah
  40a5ca:	inc    eax
  40a5cb:	add    BYTE PTR [eax+0x54],ah
  40a5ce:	inc    eax
  40a5cf:	add    BYTE PTR [eax+0x54],ah
  40a5d2:	inc    eax
  40a5d3:	add    BYTE PTR [eax+0x54],ah
  40a5d6:	inc    eax
  40a5d7:	add    BYTE PTR [eax],al
  40a5d9:	push   ebx
  40a5da:	inc    eax
  40a5db:	add    BYTE PTR [eax+0x54],ah
  40a5de:	inc    eax
  40a5df:	add    al,al
  40a5e1:	push   edx
  40a5e2:	inc    eax
  40a5e3:	add    BYTE PTR [eax+0x54],ah
  40a5e6:	inc    eax
  40a5e7:	add    BYTE PTR [eax+0x60004052],dl
  40a5ed:	push   edx
  40a5ee:	inc    eax
  40a5ef:	add    BYTE PTR [eax],dh
  40a5f1:	push   edx
  40a5f2:	inc    eax
  40a5f3:	add    BYTE PTR [eax+0x54],ah
  40a5f6:	inc    eax
  40a5f7:	add    ch,dh
  40a5f9:	push   ecx
  40a5fa:	inc    eax
  40a5fb:	add    BYTE PTR [eax+0x54],ah
  40a5fe:	inc    eax
  40a5ff:	add    BYTE PTR [eax+0x54],ah
  40a602:	inc    eax
  40a603:	add    al,ah
  40a605:	push   ecx
  40a606:	inc    eax
  40a607:	add    BYTE PTR [eax+0x54],ah
  40a60a:	inc    eax
  40a60b:	add    BYTE PTR [eax+0x54],ah
  40a60e:	inc    eax
  40a60f:	add    BYTE PTR [eax+0x54],ah
  40a612:	inc    eax
  40a613:	add    BYTE PTR [eax+0x54],ah
  40a616:	inc    eax
  40a617:	add    BYTE PTR [eax+0x54],ah
  40a61a:	inc    eax
  40a61b:	add    BYTE PTR [eax+0x54],ah
  40a61e:	inc    eax
  40a61f:	add    BYTE PTR [edx+0x60004054],dh
  40a625:	push   esp
  40a626:	inc    eax
  40a627:	add    BYTE PTR [eax+0x54],ah
  40a62a:	inc    eax
  40a62b:	add    BYTE PTR [eax+0x54],ah
  40a62e:	inc    eax
  40a62f:	add    BYTE PTR [eax+0x54],ah
  40a632:	inc    eax
  40a633:	add    BYTE PTR [eax+0x51],dh
  40a636:	inc    eax
  40a637:	add    BYTE PTR [eax+0x54],ah
  40a63a:	inc    eax
  40a63b:	add    BYTE PTR [eax+0x54],ah
  40a63e:	inc    eax
  40a63f:	add    BYTE PTR [eax+0x54],ah
  40a642:	inc    eax
  40a643:	add    BYTE PTR [eax+0x54],ah
  40a646:	inc    eax
  40a647:	add    BYTE PTR [eax+0x54],ah
  40a64a:	inc    eax
  40a64b:	add    BYTE PTR [eax+0x54],ah
  40a64e:	inc    eax
  40a64f:	add    BYTE PTR [eax+0x54],ah
  40a652:	inc    eax
  40a653:	add    BYTE PTR [eax+0x54],ah
  40a656:	inc    eax
  40a657:	add    BYTE PTR [ecx+edx*2],dh
  40a65a:	inc    eax
  40a65b:	add    BYTE PTR [eax+0x54],ah
  40a65e:	inc    eax
  40a65f:	add    al,dh
  40a661:	push   eax
  40a662:	inc    eax
  40a663:	add    BYTE PTR [eax+0x41004050],al
  40a669:	push   eax
  40a66a:	inc    eax
  40a66b:	add    ch,ah
  40a66d:	dec    edi
  40a66e:	inc    eax
  40a66f:	add    BYTE PTR [eax+0x2000404f],dh
  40a675:	push   eax
  40a676:	inc    eax
  40a677:	add    BYTE PTR [eax-0x6effbfb0],al
  40a67d:	dec    edi
  40a67e:	inc    eax
  40a67f:	add    BYTE PTR [eax+0x54],ah
  40a682:	inc    eax
  40a683:	add    BYTE PTR [eax+0x4f],dh
  40a686:	inc    eax
  40a687:	add    BYTE PTR [ecx+0x4f],al
  40a68a:	inc    eax
  40a68b:	add    al,dh
  40a68d:	dec    esi
  40a68e:	inc    eax
  40a68f:	add    BYTE PTR [eax+0x51],dh
  40a692:	inc    eax
  40a693:	add    BYTE PTR [eax+0x6000404e],ah
  40a699:	push   esp
  40a69a:	inc    eax
  40a69b:	add    BYTE PTR [eax+0x54],ah
  40a69e:	inc    eax
  40a69f:	add    BYTE PTR [esi+ecx*2+0x40],dl
  40a6a3:	add    BYTE PTR [eax],al
  40a6a5:	dec    esi
  40a6a6:	inc    eax
  40a6a7:	add    BYTE PTR [eax+0x51],dh
  40a6aa:	inc    eax
  40a6ab:	add    BYTE PTR [eax+0x54],ah
  40a6ae:	inc    eax
  40a6af:	add    BYTE PTR [eax+0x54],ah
  40a6b2:	inc    eax
  40a6b3:	add    BYTE PTR [eax+0x51],dh
  40a6b6:	inc    eax
  40a6b7:	add    BYTE PTR [eax+0x54],ah
  40a6ba:	inc    eax
  40a6bb:	add    BYTE PTR [eax],al
  40a6bd:	dec    esi
  40a6be:	inc    eax
  40a6bf:	add    BYTE PTR [ecx+0x6e],cl
  40a6c2:	imul   bp,WORD PTR [esi+0x69],0x7974
  40a6c8:	add    BYTE PTR [esi+0x61],cl
  40a6cb:	dec    esi
  40a6cc:	add    BYTE PTR [eax],dh
  40a6ce:	add    BYTE PTR [eax],al
  40a6d0:	call   0x405a:0xd300405b
  40a6d7:	add    bl,dl
  40a6d9:	pop    edx
  40a6da:	inc    eax
  40a6db:	add    BYTE PTR [esp+ebx*2],al
  40a6de:	inc    eax
  40a6df:	add    al,dl
  40a6e1:	pop    ebx
  40a6e2:	inc    eax
  40a6e3:	add    BYTE PTR [eax],al
  40a6e5:	add    al,al
  40a6e7:	aas    
  40a6e8:	popa   
  40a6e9:	inc    ebx
  40a6ea:	outs   dx,DWORD PTR ds:[esi]
  40a6eb:	arpl   WORD PTR [edi-0x4cc02d79],sp
  40a6f1:	enter  0x8b60,0x28
  40a6f5:	mov    al,dh
  40a6f7:	aas    
  40a6f8:	sti    
  40a6f9:	jns    0x40a69a
  40a6fb:	push   eax
  40a6fc:	adc    eax,DWORD PTR [ebx+edx*8+0x3f]
  40a700:	add    al,0xfa
  40a702:	jge    0x40a6a1
  40a704:	push   ss
  40a705:	sub    eax,0x5a323c94
  40a70a:	inc    edi
  40a70b:	push   ebp
  40a70c:	adc    eax,DWORD PTR [ebx+edx*8+0x3f]
  40a710:	add    BYTE PTR [eax],al
  40a712:	cmp    BYTE PTR [edi],0x0
  40a715:	add    BYTE PTR [eax],ah
  40a717:	inc    ecx
  40a718:	add    BYTE PTR [eax],al
  40a71a:	inc    eax
  40a71b:	inc    eax
  40a71c:	add    BYTE PTR [eax],al
  40a71e:	loopne 0x40a760
  40a720:	add    BYTE PTR [eax],al
  40a722:	mov    al,ds:0x40
  40a727:	aas    
	...
  40a740:	add    eax,0x19000000
  40a745:	add    BYTE PTR [eax],al
  40a747:	add    BYTE PTR [ebp+0x0],bh
	...
  40a786:	lock aas 
  40a788:	add    BYTE PTR [eax],al
  40a78a:	add    BYTE PTR [eax],al
  40a78c:	add    BYTE PTR [eax],al
  40a78e:	and    al,0x40
  40a790:	add    BYTE PTR [eax],al
  40a792:	add    BYTE PTR [eax],al
  40a794:	add    BYTE PTR [eax],al
  40a796:	pop    ecx
  40a797:	inc    eax
  40a798:	add    BYTE PTR [eax],al
  40a79a:	add    BYTE PTR [eax],al
  40a79c:	add    BYTE PTR [eax-0x71],al
  40a79f:	inc    eax
  40a7a0:	add    BYTE PTR [eax],al
  40a7a2:	add    BYTE PTR [eax],al
  40a7a4:	add    BYTE PTR [eax+0x40c3],cl
  40a7aa:	add    BYTE PTR [eax],al
  40a7ac:	add    BYTE PTR [edx-0x8],ch
  40a7af:	inc    eax
  40a7b0:	add    BYTE PTR [eax],al
  40a7b2:	add    BYTE PTR [eax],al
  40a7b4:	add    BYTE PTR [esi+ebp*1+0x41],0x0
  40a7bc:	rcl    BYTE PTR [edx],1
  40a7be:	arpl   WORD PTR [ecx+0x0],ax
  40a7c1:	add    BYTE PTR [eax],al
  40a7c3:	add    BYTE PTR [edi+edx*8+0x4197],al
  40a7ca:	add    BYTE PTR [eax],al
  40a7cc:	gs int 0xcd
  40a7cf:	inc    ecx
  40a7d0:	add    BYTE PTR [eax],al
  40a7d2:	add    BYTE PTR [eax],ah
  40a7d4:	pop    edi
  40a7d5:	mov    al,ds:0x4202
  40a7da:	add    al,ch
  40a7dc:	jbe    0x40a826
  40a7de:	aaa    
  40a7df:	inc    edx
  40a7e0:	add    BYTE PTR [eax],al
  40a7e2:	add    BYTE PTR [edx+0x426d1a94],ah
  40a7e8:	add    BYTE PTR [eax],al
  40a7ea:	inc    eax
  40a7eb:	in     eax,0x9c
  40a7ed:	xor    BYTE PTR [edx-0x6fffffbe],ah
  40a7f3:	push   ds
  40a7f4:	les    edi,FWORD PTR [esi+edx*8+0x34000042]
  40a7fb:	es cmc 
  40a7fd:	imul   ecx,DWORD PTR [ebx+eax*2],0x0
  40a801:	and    al,0x37
  40a804:	jns    0x40a7c9
  40a806:	inc    ecx
  40a807:	inc    ebx
  40a808:	add    BYTE PTR [eax+0x345785d8],ah
  40a80e:	jbe    0x40a853
  40a810:	add    al,cl
  40a812:	dec    esi
  40a813:	ins    DWORD PTR es:[di],dx
  40a815:	shr    DWORD PTR [ebx-0x6ec2ffbd],0x60
  40a81c:	in     al,0x58
  40a81e:	loope  0x40a863
  40a820:	inc    eax
  40a821:	mov    WORD PTR [ebp+0x15af1d78],?
  40a827:	inc    esp
  40a828:	push   eax
  40a829:	out    dx,eax
  40a82a:	loop   0x40a802
  40a82c:	in     al,0x1a
  40a82e:	dec    ebx
  40a82f:	inc    esp
  40a830:	xchg   edx,eax
  40a831:	aad    0x4d
  40a833:	push   es
  40a834:	iret   
  40a835:	lock add BYTE PTR [eax+eax*1+0x0],0x0
  40a83b:	add    BYTE PTR [eax],al
  40a83d:	add    BYTE PTR [eax],al
  40a83f:	add    BYTE PTR [ecx+ecx*4-0x2d4d6828],bh
  40a846:	pushf  
  40a847:	cmp    al,0x33
  40a849:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a84a:	test   al,0xd5
  40a84c:	and    esi,esi
  40a84e:	dec    ecx
  40a84f:	cmp    DWORD PTR ds:0xfd44f4a7,edi
  40a855:	shld   DWORD PTR [edx],esi,cl
  40a858:	popf   
  40a859:	xchg   edi,eax
  40a85a:	mov    edi,cs
  40a85c:	or     BYTE PTR [edx+0x6f43255b],bh
  40a862:	lods   al,BYTE PTR ds:[esi]
  40a863:	sub    BYTE PTR fs:[esi],al
  40a866:	enter  0xa,0x0
	...
  40a87e:	add    BYTE PTR [eax],al
  40a880:	add    BYTE PTR [eax-0x3c86c820],al
  40a886:	inc    ecx
  40a887:	inc    ebx
  40a888:	pop    ss
  40a889:	outs   dx,BYTE PTR ds:[esi]
  40a88a:	add    eax,0x93b8b5b5
  40a88f:	inc    esi
  40a890:	cmc    
  40a891:	stc    
  40a892:	aas    
  40a893:	jmp    0x4d78f79b
  40a898:	xor    bl,BYTE PTR ds:0x7748f930
  40a89e:	sbb    BYTE PTR [edx+0x3c],0xbf
  40a8a2:	jae    0x40a923
  40a8a4:	fisttp QWORD PTR [edi+0x15]
  40a8a7:	jne    0x40a8a9
	...
  40a8bd:	add    BYTE PTR [eax],al
  40a8bf:	add    BYTE PTR [ebp+0x0],ch
  40a8c2:	jae    0x40a8c4
  40a8c4:	jbe    0x40a8c6
  40a8c6:	arpl   WORD PTR [eax],ax
  40a8c8:	jb     0x40a8ca
  40a8ca:	je     0x40a8cc
  40a8cc:	add    BYTE PTR cs:[eax+eax*1+0x6c],ah
  40a8d1:	add    BYTE PTR [eax+eax*1+0x0],ch
  40a8d5:	add    BYTE PTR [edi+0x73],bl
  40a8d8:	gs je  0x40a93a
  40a8db:	outs   dx,DWORD PTR ds:[esi]
  40a8dc:	jne    0x40a952
  40a8de:	jo     0x40a955
  40a8e0:	je     0x40a941
  40a8e2:	outs   dx,WORD PTR ds:[esi]
  40a8e4:	jb     0x40a953
  40a8e6:	popa   
  40a8e7:	je     0x40a8e9
  40a8e9:	pop    edi
  40a8ea:	addr16 gs je 0x40a94d
  40a8ee:	outs   dx,DWORD PTR ds:[esi]
  40a8ef:	jne    0x40a965
  40a8f1:	jo     0x40a968
  40a8f3:	je     0x40a954
  40a8f5:	outs   dx,WORD PTR ds:[esi]
  40a8f7:	jb     0x40a966
  40a8f9:	popa   
  40a8fa:	je     0x40a8fc
  40a8fc:	ins    DWORD PTR es:[edi],dx
  40a8fd:	add    BYTE PTR [ebx+0x0],dh
  40a900:	jbe    0x40a902
  40a902:	arpl   WORD PTR [eax],ax
  40a904:	jb     0x40a906
  40a906:	je     0x40a908
  40a908:	add    BYTE PTR cs:[eax+eax*1+0x6c],ah
  40a90d:	add    BYTE PTR [eax+eax*1+0x0],ch
  40a911:	add    BYTE PTR [edi+0x5f],bl
  40a914:	pop    edi
  40a915:	ins    BYTE PTR es:[edi],dx
  40a916:	arpl   WORD PTR [edi+0x63],bx
  40a919:	outs   dx,DWORD PTR ds:[esi]
  40a91a:	fs gs jo 0x40a97f
  40a91e:	addr16 gs pop edi
  40a921:	data16 jne 0x40a992
  40a924:	arpl   WORD PTR [eax],ax
  40a926:	pop    edi
  40a927:	pop    edi
  40a928:	ins    BYTE PTR es:[edi],dx
  40a929:	arpl   WORD PTR [edi+0x63],bx
  40a92c:	outs   dx,DWORD PTR ds:[esi]
  40a92d:	fs gs jo 0x40a992
  40a931:	add    BYTE PTR gs:[bx+0x43],al
  40a936:	inc    ebx
  40a937:	cmp    ah,BYTE PTR [eax]
  40a939:	sub    BYTE PTR [edi+0x4e],al
  40a93c:	push   ebp
  40a93d:	sub    DWORD PTR [eax],esp
  40a93f:	xor    al,0x2e
  40a941:	cmp    DWORD PTR [esi],ebp
  40a943:	xor    DWORD PTR [eax],eax
  40a945:	add    BYTE PTR [eax],al
  40a947:	add    BYTE PTR [edi+0x43],al
  40a94a:	inc    ebx
  40a94b:	cmp    ah,BYTE PTR [eax]
  40a94d:	sub    BYTE PTR [edi+0x4e],al
  40a950:	push   ebp
  40a951:	sub    DWORD PTR [eax],esp
  40a953:	xor    al,0x2e
  40a955:	cmp    DWORD PTR [esi],ebp
  40a957:	xor    al,BYTE PTR [eax]
  40a959:	add    BYTE PTR [eax],al
  40a95b:	add    BYTE PTR [edi+0x43],al
  40a95e:	inc    ebx
  40a95f:	cmp    ah,BYTE PTR [eax]
  40a961:	sub    BYTE PTR [edi+0x4e],al
  40a964:	push   ebp
  40a965:	sub    DWORD PTR [eax],esp
  40a967:	xor    al,0x2e
  40a969:	cmp    DWORD PTR [esi],ebp
  40a96b:	xor    al,BYTE PTR [eax]
  40a96d:	add    BYTE PTR [eax],al
  40a96f:	add    BYTE PTR [edi+0x43],al
  40a972:	inc    ebx
  40a973:	cmp    ah,BYTE PTR [eax]
  40a975:	sub    BYTE PTR [edi+0x4e],al
  40a978:	push   ebp
  40a979:	sub    DWORD PTR [eax],esp
  40a97b:	xor    al,0x2e
  40a97d:	cmp    DWORD PTR [esi],ebp
  40a97f:	xor    al,BYTE PTR [eax]
  40a981:	add    BYTE PTR [eax],al
  40a983:	add    BYTE PTR [edi+0x43],al
  40a986:	inc    ebx
  40a987:	cmp    ah,BYTE PTR [eax]
  40a989:	sub    BYTE PTR [edi+0x4e],al
  40a98c:	push   ebp
  40a98d:	sub    DWORD PTR [eax],esp
  40a98f:	xor    al,0x2e
  40a991:	cmp    DWORD PTR [esi],ebp
  40a993:	xor    DWORD PTR [eax],eax
  40a995:	add    BYTE PTR [eax],al
  40a997:	add    BYTE PTR [edi+0x43],al
  40a99a:	inc    ebx
  40a99b:	cmp    ah,BYTE PTR [eax]
  40a99d:	sub    BYTE PTR [edi+0x4e],al
  40a9a0:	push   ebp
  40a9a1:	sub    DWORD PTR [eax],esp
  40a9a3:	xor    al,0x2e
  40a9a5:	cmp    DWORD PTR [esi],ebp
  40a9a7:	xor    DWORD PTR [eax],eax
  40a9a9:	add    BYTE PTR [eax],al
  40a9ab:	add    BYTE PTR [edi+0x43],al
  40a9ae:	inc    ebx
  40a9af:	cmp    ah,BYTE PTR [eax]
  40a9b1:	sub    BYTE PTR [edi+0x4e],al
  40a9b4:	push   ebp
  40a9b5:	sub    DWORD PTR [eax],esp
  40a9b7:	xor    al,0x2e
  40a9b9:	cmp    DWORD PTR [esi],ebp
  40a9bb:	xor    DWORD PTR [eax],eax
  40a9bd:	add    BYTE PTR [eax],al
  40a9bf:	add    BYTE PTR [edi+0x43],al
  40a9c2:	inc    ebx
  40a9c3:	cmp    ah,BYTE PTR [eax]
  40a9c5:	sub    BYTE PTR [edi+0x4e],al
  40a9c8:	push   ebp
  40a9c9:	sub    DWORD PTR [eax],esp
  40a9cb:	xor    al,0x2e
  40a9cd:	cmp    DWORD PTR [esi],ebp
  40a9cf:	xor    DWORD PTR [eax],eax
  40a9d1:	add    BYTE PTR [eax],al
  40a9d3:	add    BYTE PTR [edi+0x43],al
  40a9d6:	inc    ebx
  40a9d7:	cmp    ah,BYTE PTR [eax]
  40a9d9:	sub    BYTE PTR [edi+0x4e],al
  40a9dc:	push   ebp
  40a9dd:	sub    DWORD PTR [eax],esp
  40a9df:	xor    al,0x2e
  40a9e1:	cmp    DWORD PTR [esi],ebp
  40a9e3:	xor    DWORD PTR [eax],eax
  40a9e5:	add    BYTE PTR [eax],al
  40a9e7:	add    BYTE PTR [edi+0x43],al
  40a9ea:	inc    ebx
  40a9eb:	cmp    ah,BYTE PTR [eax]
  40a9ed:	sub    BYTE PTR [edi+0x4e],al
  40a9f0:	push   ebp
  40a9f1:	sub    DWORD PTR [eax],esp
  40a9f3:	xor    al,0x2e
  40a9f5:	cmp    DWORD PTR [esi],ebp
  40a9f7:	xor    DWORD PTR [eax],eax
  40a9f9:	add    BYTE PTR [eax],al
  40a9fb:	add    BYTE PTR [edi+0x43],al
  40a9fe:	inc    ebx
  40a9ff:	cmp    ah,BYTE PTR [eax]
  40aa01:	sub    BYTE PTR [edi+0x4e],al
  40aa04:	push   ebp
  40aa05:	sub    DWORD PTR [eax],esp
  40aa07:	xor    al,0x2e
  40aa09:	cmp    DWORD PTR [esi],ebp
  40aa0b:	xor    DWORD PTR [eax],eax
  40aa0d:	add    BYTE PTR [eax],al
  40aa0f:	add    BYTE PTR [edi+0x43],al
  40aa12:	inc    ebx
  40aa13:	cmp    ah,BYTE PTR [eax]
  40aa15:	sub    BYTE PTR [edi+0x4e],al
  40aa18:	push   ebp
  40aa19:	sub    DWORD PTR [eax],esp
  40aa1b:	xor    al,0x2e
  40aa1d:	cmp    DWORD PTR [esi],ebp
  40aa1f:	xor    DWORD PTR [eax],eax
  40aa21:	add    BYTE PTR [eax],al
  40aa23:	add    BYTE PTR [edi+0x43],al
  40aa26:	inc    ebx
  40aa27:	cmp    ah,BYTE PTR [eax]
  40aa29:	sub    BYTE PTR [edi+0x4e],al
  40aa2c:	push   ebp
  40aa2d:	sub    DWORD PTR [eax],esp
  40aa2f:	xor    al,0x2e
  40aa31:	cmp    DWORD PTR [esi],ebp
  40aa33:	xor    DWORD PTR [eax],eax
  40aa35:	add    BYTE PTR [eax],al
  40aa37:	add    BYTE PTR [edi+0x43],al
  40aa3a:	inc    ebx
  40aa3b:	cmp    ah,BYTE PTR [eax]
  40aa3d:	sub    BYTE PTR [edi+0x4e],al
  40aa40:	push   ebp
  40aa41:	sub    DWORD PTR [eax],esp
  40aa43:	xor    al,0x2e
  40aa45:	cmp    DWORD PTR [esi],ebp
  40aa47:	xor    DWORD PTR [eax],eax
  40aa49:	add    BYTE PTR [eax],al
  40aa4b:	add    BYTE PTR [edi+0x43],al
  40aa4e:	inc    ebx
  40aa4f:	cmp    ah,BYTE PTR [eax]
  40aa51:	sub    BYTE PTR [edi+0x4e],al
  40aa54:	push   ebp
  40aa55:	sub    DWORD PTR [eax],esp
  40aa57:	xor    al,0x2e
  40aa59:	cmp    DWORD PTR [esi],ebp
  40aa5b:	xor    DWORD PTR [eax],eax
  40aa5d:	add    BYTE PTR [eax],al
  40aa5f:	add    BYTE PTR [edi+0x43],al
  40aa62:	inc    ebx
  40aa63:	cmp    ah,BYTE PTR [eax]
  40aa65:	sub    BYTE PTR [edi+0x4e],al
  40aa68:	push   ebp
  40aa69:	sub    DWORD PTR [eax],esp
  40aa6b:	xor    al,0x2e
  40aa6d:	cmp    DWORD PTR [esi],ebp
  40aa6f:	xor    DWORD PTR [eax],eax
  40aa71:	add    BYTE PTR [eax],al
  40aa73:	add    BYTE PTR [edi+0x43],al
  40aa76:	inc    ebx
  40aa77:	cmp    ah,BYTE PTR [eax]
  40aa79:	sub    BYTE PTR [edi+0x4e],al
  40aa7c:	push   ebp
  40aa7d:	sub    DWORD PTR [eax],esp
  40aa7f:	xor    al,0x2e
  40aa81:	cmp    DWORD PTR [esi],ebp
  40aa83:	xor    DWORD PTR [eax],eax
  40aa85:	add    BYTE PTR [eax],al
  40aa87:	add    BYTE PTR [edi+0x43],al
  40aa8a:	inc    ebx
  40aa8b:	cmp    ah,BYTE PTR [eax]
  40aa8d:	sub    BYTE PTR [edi+0x4e],al
  40aa90:	push   ebp
  40aa91:	sub    DWORD PTR [eax],esp
  40aa93:	xor    al,0x2e
  40aa95:	cmp    DWORD PTR [esi],ebp
  40aa97:	xor    DWORD PTR [eax],eax
  40aa99:	add    BYTE PTR [eax],al
  40aa9b:	add    BYTE PTR [edi+0x43],al
  40aa9e:	inc    ebx
  40aa9f:	cmp    ah,BYTE PTR [eax]
  40aaa1:	sub    BYTE PTR [edi+0x4e],al
  40aaa4:	push   ebp
  40aaa5:	sub    DWORD PTR [eax],esp
  40aaa7:	xor    al,0x2e
  40aaa9:	cmp    DWORD PTR [esi],ebp
  40aaab:	xor    DWORD PTR [eax],eax
  40aaad:	add    BYTE PTR [eax],al
  40aaaf:	add    BYTE PTR [edi+0x43],al
  40aab2:	inc    ebx
  40aab3:	cmp    ah,BYTE PTR [eax]
  40aab5:	sub    BYTE PTR [edi+0x4e],al
  40aab8:	push   ebp
  40aab9:	sub    DWORD PTR [eax],esp
  40aabb:	xor    al,0x2e
  40aabd:	cmp    DWORD PTR [esi],ebp
  40aabf:	xor    DWORD PTR [eax],eax
  40aac1:	add    BYTE PTR [eax],al
  40aac3:	add    BYTE PTR [edi+0x43],al
  40aac6:	inc    ebx
  40aac7:	cmp    ah,BYTE PTR [eax]
  40aac9:	sub    BYTE PTR [edi+0x4e],al
  40aacc:	push   ebp
  40aacd:	sub    DWORD PTR [eax],esp
  40aacf:	xor    al,0x2e
  40aad1:	cmp    DWORD PTR [esi],ebp
  40aad3:	xor    DWORD PTR [eax],eax
  40aad5:	add    BYTE PTR [eax],al
  40aad7:	add    BYTE PTR [edi+0x43],al
  40aada:	inc    ebx
  40aadb:	cmp    ah,BYTE PTR [eax]
  40aadd:	sub    BYTE PTR [edi+0x4e],al
  40aae0:	push   ebp
  40aae1:	sub    DWORD PTR [eax],esp
  40aae3:	xor    al,0x2e
  40aae5:	cmp    DWORD PTR [esi],ebp
  40aae7:	xor    DWORD PTR [eax],eax
  40aae9:	add    BYTE PTR [eax],al
  40aaeb:	add    BYTE PTR [edi+0x43],al
  40aaee:	inc    ebx
  40aaef:	cmp    ah,BYTE PTR [eax]
  40aaf1:	sub    BYTE PTR [edi+0x4e],al
  40aaf4:	push   ebp
  40aaf5:	sub    DWORD PTR [eax],esp
  40aaf7:	xor    al,0x2e
  40aaf9:	cmp    DWORD PTR [esi],ebp
  40aafb:	xor    DWORD PTR [eax],eax
  40aafd:	add    BYTE PTR [eax],al
  40aaff:	add    BYTE PTR [edi+0x43],al
  40ab02:	inc    ebx
  40ab03:	cmp    ah,BYTE PTR [eax]
  40ab05:	sub    BYTE PTR [edi+0x4e],al
  40ab08:	push   ebp
  40ab09:	sub    DWORD PTR [eax],esp
  40ab0b:	xor    al,0x2e
  40ab0d:	cmp    DWORD PTR [esi],ebp
  40ab0f:	xor    DWORD PTR [eax],eax
  40ab11:	add    BYTE PTR [eax],al
  40ab13:	add    BYTE PTR [edi+0x43],al
  40ab16:	inc    ebx
  40ab17:	cmp    ah,BYTE PTR [eax]
  40ab19:	sub    BYTE PTR [edi+0x4e],al
  40ab1c:	push   ebp
  40ab1d:	sub    DWORD PTR [eax],esp
  40ab1f:	xor    al,0x2e
  40ab21:	cmp    DWORD PTR [esi],ebp
  40ab23:	xor    al,BYTE PTR [eax]
  40ab25:	add    BYTE PTR [eax],al
  40ab27:	add    BYTE PTR [edi+0x43],al
  40ab2a:	inc    ebx
  40ab2b:	cmp    ah,BYTE PTR [eax]
  40ab2d:	sub    BYTE PTR [edi+0x4e],al
  40ab30:	push   ebp
  40ab31:	sub    DWORD PTR [eax],esp
  40ab33:	xor    al,0x2e
  40ab35:	cmp    DWORD PTR [esi],ebp
  40ab37:	xor    DWORD PTR [eax],eax
  40ab39:	add    BYTE PTR [eax],al
  40ab3b:	add    BYTE PTR [edi+0x43],al
  40ab3e:	inc    ebx
  40ab3f:	cmp    ah,BYTE PTR [eax]
  40ab41:	sub    BYTE PTR [edi+0x4e],al
  40ab44:	push   ebp
  40ab45:	sub    DWORD PTR [eax],esp
  40ab47:	xor    al,0x2e
  40ab49:	cmp    DWORD PTR [esi],ebp
  40ab4b:	xor    DWORD PTR [eax],eax
  40ab4d:	add    BYTE PTR [eax],al
  40ab4f:	add    BYTE PTR [edi+0x43],al
  40ab52:	inc    ebx
  40ab53:	cmp    ah,BYTE PTR [eax]
  40ab55:	sub    BYTE PTR [edi+0x4e],al
  40ab58:	push   ebp
  40ab59:	sub    DWORD PTR [eax],esp
  40ab5b:	xor    al,0x2e
  40ab5d:	cmp    DWORD PTR [esi],ebp
  40ab5f:	xor    DWORD PTR [eax],eax
  40ab61:	add    BYTE PTR [eax],al
  40ab63:	add    BYTE PTR [edi+0x43],al
  40ab66:	inc    ebx
  40ab67:	cmp    ah,BYTE PTR [eax]
  40ab69:	sub    BYTE PTR [edi+0x4e],al
  40ab6c:	push   ebp
  40ab6d:	sub    DWORD PTR [eax],esp
  40ab6f:	xor    al,0x2e
  40ab71:	cmp    DWORD PTR [esi],ebp
  40ab73:	xor    DWORD PTR [eax],eax
  40ab75:	add    BYTE PTR [eax],al
  40ab77:	add    BYTE PTR [edi+0x43],al
  40ab7a:	inc    ebx
  40ab7b:	cmp    ah,BYTE PTR [eax]
  40ab7d:	sub    BYTE PTR [edi+0x4e],al
  40ab80:	push   ebp
  40ab81:	sub    DWORD PTR [eax],esp
  40ab83:	xor    al,0x2e
  40ab85:	cmp    DWORD PTR [esi],ebp
  40ab87:	xor    DWORD PTR [eax],eax
  40ab89:	add    BYTE PTR [eax],al
  40ab8b:	add    BYTE PTR [edi+0x43],al
  40ab8e:	inc    ebx
  40ab8f:	cmp    ah,BYTE PTR [eax]
  40ab91:	sub    BYTE PTR [edi+0x4e],al
  40ab94:	push   ebp
  40ab95:	sub    DWORD PTR [eax],esp
  40ab97:	xor    al,0x2e
  40ab99:	cmp    DWORD PTR [esi],ebp
  40ab9b:	xor    DWORD PTR [eax],eax
  40ab9d:	add    BYTE PTR [eax],al
  40ab9f:	add    BYTE PTR [edi+0x43],al
  40aba2:	inc    ebx
  40aba3:	cmp    ah,BYTE PTR [eax]
  40aba5:	sub    BYTE PTR [edi+0x4e],al
  40aba8:	push   ebp
  40aba9:	sub    DWORD PTR [eax],esp
  40abab:	xor    al,0x2e
  40abad:	cmp    DWORD PTR [esi],ebp
  40abaf:	xor    DWORD PTR [eax],eax
  40abb1:	add    BYTE PTR [eax],al
  40abb3:	add    BYTE PTR [edi+0x43],al
  40abb6:	inc    ebx
  40abb7:	cmp    ah,BYTE PTR [eax]
  40abb9:	sub    BYTE PTR [edi+0x4e],al
  40abbc:	push   ebp
  40abbd:	sub    DWORD PTR [eax],esp
  40abbf:	xor    al,0x2e
  40abc1:	cmp    DWORD PTR [esi],ebp
  40abc3:	xor    DWORD PTR [eax],eax
  40abc5:	add    BYTE PTR [eax],al
  40abc7:	add    BYTE PTR [edi+0x43],al
  40abca:	inc    ebx
  40abcb:	cmp    ah,BYTE PTR [eax]
  40abcd:	sub    BYTE PTR [edi+0x4e],al
  40abd0:	push   ebp
  40abd1:	sub    DWORD PTR [eax],esp
  40abd3:	xor    al,0x2e
  40abd5:	cmp    DWORD PTR [esi],ebp
  40abd7:	xor    DWORD PTR [eax],eax
  40abd9:	add    BYTE PTR [eax],al
  40abdb:	add    BYTE PTR [edi+0x43],al
  40abde:	inc    ebx
  40abdf:	cmp    ah,BYTE PTR [eax]
  40abe1:	sub    BYTE PTR [edi+0x4e],al
  40abe4:	push   ebp
  40abe5:	sub    DWORD PTR [eax],esp
  40abe7:	xor    al,0x2e
  40abe9:	cmp    DWORD PTR [esi],ebp
  40abeb:	xor    DWORD PTR [eax],eax
  40abed:	add    BYTE PTR [eax],al
  40abef:	add    BYTE PTR [edi+0x43],al
  40abf2:	inc    ebx
  40abf3:	cmp    ah,BYTE PTR [eax]
  40abf5:	sub    BYTE PTR [edi+0x4e],al
  40abf8:	push   ebp
  40abf9:	sub    DWORD PTR [eax],esp
  40abfb:	xor    al,0x2e
  40abfd:	cmp    DWORD PTR [esi],ebp
  40abff:	xor    DWORD PTR [eax],eax
  40ac01:	add    BYTE PTR [eax],al
  40ac03:	add    BYTE PTR [edi+0x43],al
  40ac06:	inc    ebx
  40ac07:	cmp    ah,BYTE PTR [eax]
  40ac09:	sub    BYTE PTR [edi+0x4e],al
  40ac0c:	push   ebp
  40ac0d:	sub    DWORD PTR [eax],esp
  40ac0f:	xor    al,0x2e
  40ac11:	cmp    DWORD PTR [esi],ebp
  40ac13:	xor    DWORD PTR [eax],eax
  40ac15:	add    BYTE PTR [eax],al
  40ac17:	add    BYTE PTR [edi+0x43],al
  40ac1a:	inc    ebx
  40ac1b:	cmp    ah,BYTE PTR [eax]
  40ac1d:	sub    BYTE PTR [edi+0x4e],al
  40ac20:	push   ebp
  40ac21:	sub    DWORD PTR [eax],esp
  40ac23:	xor    al,0x2e
  40ac25:	cmp    DWORD PTR [esi],ebp
  40ac27:	xor    DWORD PTR [eax],eax
  40ac29:	add    BYTE PTR [eax],al
  40ac2b:	add    BYTE PTR [edi+0x43],al
  40ac2e:	inc    ebx
  40ac2f:	cmp    ah,BYTE PTR [eax]
  40ac31:	sub    BYTE PTR [edi+0x4e],al
  40ac34:	push   ebp
  40ac35:	sub    DWORD PTR [eax],esp
  40ac37:	xor    al,0x2e
  40ac39:	cmp    DWORD PTR [esi],ebp
  40ac3b:	xor    DWORD PTR [eax],eax
  40ac3d:	add    BYTE PTR [eax],al
  40ac3f:	add    BYTE PTR [edi+0x43],al
  40ac42:	inc    ebx
  40ac43:	cmp    ah,BYTE PTR [eax]
  40ac45:	sub    BYTE PTR [edi+0x4e],al
  40ac48:	push   ebp
  40ac49:	sub    DWORD PTR [eax],esp
  40ac4b:	xor    al,0x2e
  40ac4d:	cmp    DWORD PTR [esi],ebp
  40ac4f:	xor    DWORD PTR [eax],eax
  40ac51:	add    BYTE PTR [eax],al
  40ac53:	add    BYTE PTR [edi+0x43],al
  40ac56:	inc    ebx
  40ac57:	cmp    ah,BYTE PTR [eax]
  40ac59:	sub    BYTE PTR [edi+0x4e],al
  40ac5c:	push   ebp
  40ac5d:	sub    DWORD PTR [eax],esp
  40ac5f:	xor    al,0x2e
  40ac61:	cmp    DWORD PTR [esi],ebp
  40ac63:	xor    al,BYTE PTR [eax]
  40ac65:	add    BYTE PTR [eax],al
  40ac67:	add    BYTE PTR [edi+0x43],al
  40ac6a:	inc    ebx
  40ac6b:	cmp    ah,BYTE PTR [eax]
  40ac6d:	sub    BYTE PTR [edi+0x4e],al
  40ac70:	push   ebp
  40ac71:	sub    DWORD PTR [eax],esp
  40ac73:	xor    al,0x2e
  40ac75:	cmp    DWORD PTR [esi],ebp
  40ac77:	xor    al,BYTE PTR [eax]
  40ac79:	add    BYTE PTR [eax],al
  40ac7b:	add    BYTE PTR [edi+0x43],al
  40ac7e:	inc    ebx
  40ac7f:	cmp    ah,BYTE PTR [eax]
  40ac81:	sub    BYTE PTR [edi+0x4e],al
  40ac84:	push   ebp
  40ac85:	sub    DWORD PTR [eax],esp
  40ac87:	xor    al,0x2e
  40ac89:	cmp    DWORD PTR [esi],ebp
  40ac8b:	xor    al,BYTE PTR [eax]
  40ac8d:	add    BYTE PTR [eax],al
  40ac8f:	add    BYTE PTR [edi+0x43],al
  40ac92:	inc    ebx
  40ac93:	cmp    ah,BYTE PTR [eax]
  40ac95:	sub    BYTE PTR [edi+0x4e],al
  40ac98:	push   ebp
  40ac99:	sub    DWORD PTR [eax],esp
  40ac9b:	xor    al,0x2e
  40ac9d:	cmp    DWORD PTR [esi],ebp
  40ac9f:	xor    al,BYTE PTR [eax]
  40aca1:	add    BYTE PTR [eax],al
	...

Disassembly of section .bss:

0040b000 <.bss>:
	...

Disassembly of section .idata:

0040c000 <.idata>:
  40c000:	push   eax
  40c001:	rol    BYTE PTR [eax],0x0
	...
  40c00c:	mov    dh,al
  40c00e:	add    BYTE PTR [eax],al
  40c010:	ins    BYTE PTR es:[edi],dx
  40c011:	rol    DWORD PTR [eax],0x0
  40c014:	pop    esp
  40c015:	rol    BYTE PTR [eax],0x0
	...
  40c020:	cld    
  40c021:	mov    BYTE PTR [eax],0x0
  40c024:	js     0x40bfe7
  40c026:	add    BYTE PTR [eax],al
  40c028:	enter  0xc0,0x0
	...
  40c034:	lods   al,BYTE PTR ds:[esi]
  40c035:	mov    DWORD PTR [eax],0xc1e400
	...
  40c04f:	add    BYTE PTR [eax-0x67ffff3e],cl
  40c055:	ret    0x0
  40c058:	add    BYTE PTR [eax],al
  40c05a:	add    BYTE PTR [eax],al
  40c05c:	lods   al,BYTE PTR ds:[esi]
  40c05d:	ret    0x0
  40c060:	(bad)
  40c064:	fadd   st(2),st
  40c066:	add    BYTE PTR [eax],al
  40c068:	lock ret 0x0
  40c06c:	push   es
  40c06d:	ret    
  40c06e:	add    BYTE PTR [eax],al
  40c070:	sbb    al,0xc3
  40c072:	add    BYTE PTR [eax],al
  40c074:	sub    al,0xc3
  40c076:	add    BYTE PTR [eax],al
  40c078:	inc    eax
  40c079:	ret    
  40c07a:	add    BYTE PTR [eax],al
  40c07c:	push   esp
  40c07d:	ret    
  40c07e:	add    BYTE PTR [eax],al
  40c080:	retw   
  40c082:	add    BYTE PTR [eax],al
  40c084:	js     0x40c049
  40c086:	add    BYTE PTR [eax],al
  40c088:	xchg   edx,eax
  40c089:	ret    
  40c08a:	add    BYTE PTR [eax],al
  40c08c:	mov    ds:0xbe0000c3,al
  40c091:	ret    
  40c092:	add    BYTE PTR [eax],al
  40c094:	rol    bl,cl
  40c096:	add    BYTE PTR [eax],al
  40c098:	jmp    0xc4:0xc3
  40c09f:	add    BYTE PTR [edx],bl
  40c0a1:	les    eax,FWORD PTR [eax]
  40c0a3:	add    BYTE PTR [edx],ch
  40c0a5:	les    eax,FWORD PTR [eax]
  40c0a7:	add    BYTE PTR [eax-0x3c],cl
  40c0aa:	add    BYTE PTR [eax],al
  40c0ac:	push   eax
  40c0ad:	les    eax,FWORD PTR [eax]
  40c0af:	add    BYTE PTR [esp+eax*8+0x0],ah
  40c0b3:	add    BYTE PTR [edx-0x3c],dh
  40c0b6:	add    BYTE PTR [eax],al
  40c0b8:	mov    es,esp
  40c0ba:	add    BYTE PTR [eax],al
  40c0bc:	mov    al,ds:0xb00000c4
  40c0c1:	les    eax,FWORD PTR [eax]
  40c0c3:	add    BYTE PTR [eax],al
  40c0c5:	add    BYTE PTR [eax],al
  40c0c7:	add    dh,al
  40c0c9:	les    eax,FWORD PTR [eax]
  40c0cb:	add    al,dl
  40c0cd:	les    eax,FWORD PTR [eax]
  40c0cf:	add    dh,bl
  40c0d1:	les    eax,FWORD PTR [eax]
  40c0d3:	add    dh,ch
  40c0d5:	les    eax,FWORD PTR [eax]
  40c0d7:	add    dl,bh
  40c0d9:	les    eax,FWORD PTR [eax]
  40c0db:	add    BYTE PTR [edx],cl
  40c0dd:	lds    eax,FWORD PTR [eax]
  40c0df:	add    BYTE PTR [edx],bl
  40c0e1:	lds    eax,FWORD PTR [eax]
  40c0e3:	add    BYTE PTR [eax*8-0x3ac00000],ch
  40c0ea:	add    BYTE PTR [eax],al
  40c0ec:	dec    edx
  40c0ed:	lds    eax,FWORD PTR [eax]
  40c0ef:	add    BYTE PTR [eax-0x3b],bl
  40c0f2:	add    BYTE PTR [eax],al
  40c0f4:	(bad)  
  40c0f5:	lds    eax,FWORD PTR [eax]
  40c0f7:	add    BYTE PTR [ebp+eax*8+0x0],ch
  40c0fb:	add    BYTE PTR [esi-0x3b],dh
  40c0fe:	add    BYTE PTR [eax],al
  40c100:	add    ch,0x0
  40c103:	add    BYTE PTR [edx-0x6dffff3b],cl
  40c109:	lds    eax,FWORD PTR [eax]
  40c10b:	add    BYTE PTR [ebp+eax*8-0x3a5a0000],bl
  40c112:	add    BYTE PTR [eax],al
  40c114:	scas   al,BYTE PTR es:[edi]
  40c115:	lds    eax,FWORD PTR [eax]
  40c117:	add    BYTE PTR [eax-0x3fffff3b],bh
  40c11d:	lds    eax,FWORD PTR [eax]
  40c11f:	add    al,cl
  40c121:	lds    eax,FWORD PTR [eax]
  40c123:	add    dl,dl
  40c125:	lds    eax,FWORD PTR [eax]
  40c127:	add    ah,bl
  40c129:	lds    eax,FWORD PTR [eax]
  40c12b:	add    dl,ch
  40c12d:	lds    eax,FWORD PTR [eax]
  40c12f:	add    ah,dh
  40c131:	lds    eax,FWORD PTR [eax]
  40c133:	add    dh,bh
  40c135:	lds    eax,FWORD PTR [eax]
  40c137:	add    BYTE PTR [esi],al
  40c139:	mov    BYTE PTR [eax],0x0
  40c13c:	adc    al,dh
  40c13e:	add    BYTE PTR [eax],al
  40c140:	sbb    al,0xc6
  40c142:	add    BYTE PTR [eax],al
  40c144:	mov    BYTE PTR es:[eax],0x0
  40c148:	xor    al,dh
  40c14a:	add    BYTE PTR [eax],al
  40c14c:	cmp    al,0xc6
  40c14e:	add    BYTE PTR [eax],al
  40c150:	inc    esi
  40c151:	mov    BYTE PTR [eax],0x0
  40c154:	push   eax
  40c155:	mov    BYTE PTR [eax],0x0
  40c158:	pop    eax
  40c159:	mov    BYTE PTR [eax],0x0
  40c15c:	pusha  
  40c15d:	mov    BYTE PTR [eax],0x0
  40c160:	ins    BYTE PTR es:[edi],dx
  40c161:	mov    BYTE PTR [eax],0x0
  40c164:	jbe    0x40c12c
  40c166:	add    BYTE PTR [eax],al
  40c168:	add    BYTE PTR [eax],al
  40c16a:	add    BYTE PTR [eax],al
  40c16c:	mov    dl,al
  40c16e:	add    BYTE PTR [eax],al
  40c170:	cwde   
  40c171:	ret    0x0
  40c174:	add    BYTE PTR [eax],al
  40c176:	add    BYTE PTR [eax],al
  40c178:	lods   al,BYTE PTR ds:[esi]
  40c179:	ret    0x0
  40c17c:	(bad)
  40c180:	fadd   st(2),st
  40c182:	add    BYTE PTR [eax],al
  40c184:	lock ret 0x0
  40c188:	push   es
  40c189:	ret    
  40c18a:	add    BYTE PTR [eax],al
  40c18c:	sbb    al,0xc3
  40c18e:	add    BYTE PTR [eax],al
  40c190:	sub    al,0xc3
  40c192:	add    BYTE PTR [eax],al
  40c194:	inc    eax
  40c195:	ret    
  40c196:	add    BYTE PTR [eax],al
  40c198:	push   esp
  40c199:	ret    
  40c19a:	add    BYTE PTR [eax],al
  40c19c:	retw   
  40c19e:	add    BYTE PTR [eax],al
  40c1a0:	js     0x40c165
  40c1a2:	add    BYTE PTR [eax],al
  40c1a4:	xchg   edx,eax
  40c1a5:	ret    
  40c1a6:	add    BYTE PTR [eax],al
  40c1a8:	mov    ds:0xbe0000c3,al
  40c1ad:	ret    
  40c1ae:	add    BYTE PTR [eax],al
  40c1b0:	rol    bl,cl
  40c1b2:	add    BYTE PTR [eax],al
  40c1b4:	jmp    0xc4:0xc3
  40c1bb:	add    BYTE PTR [edx],bl
  40c1bd:	les    eax,FWORD PTR [eax]
  40c1bf:	add    BYTE PTR [edx],ch
  40c1c1:	les    eax,FWORD PTR [eax]
  40c1c3:	add    BYTE PTR [eax-0x3c],cl
  40c1c6:	add    BYTE PTR [eax],al
  40c1c8:	push   eax
  40c1c9:	les    eax,FWORD PTR [eax]
  40c1cb:	add    BYTE PTR [esp+eax*8+0x0],ah
  40c1cf:	add    BYTE PTR [edx-0x3c],dh
  40c1d2:	add    BYTE PTR [eax],al
  40c1d4:	mov    es,esp
  40c1d6:	add    BYTE PTR [eax],al
  40c1d8:	mov    al,ds:0xb00000c4
  40c1dd:	les    eax,FWORD PTR [eax]
  40c1df:	add    BYTE PTR [eax],al
  40c1e1:	add    BYTE PTR [eax],al
  40c1e3:	add    dh,al
  40c1e5:	les    eax,FWORD PTR [eax]
  40c1e7:	add    al,dl
  40c1e9:	les    eax,FWORD PTR [eax]
  40c1eb:	add    dh,bl
  40c1ed:	les    eax,FWORD PTR [eax]
  40c1ef:	add    dh,ch
  40c1f1:	les    eax,FWORD PTR [eax]
  40c1f3:	add    dl,bh
  40c1f5:	les    eax,FWORD PTR [eax]
  40c1f7:	add    BYTE PTR [edx],cl
  40c1f9:	lds    eax,FWORD PTR [eax]
  40c1fb:	add    BYTE PTR [edx],bl
  40c1fd:	lds    eax,FWORD PTR [eax]
  40c1ff:	add    BYTE PTR [eax*8-0x3ac00000],ch
  40c206:	add    BYTE PTR [eax],al
  40c208:	dec    edx
  40c209:	lds    eax,FWORD PTR [eax]
  40c20b:	add    BYTE PTR [eax-0x3b],bl
  40c20e:	add    BYTE PTR [eax],al
  40c210:	(bad)  
  40c211:	lds    eax,FWORD PTR [eax]
  40c213:	add    BYTE PTR [ebp+eax*8+0x0],ch
  40c217:	add    BYTE PTR [esi-0x3b],dh
  40c21a:	add    BYTE PTR [eax],al
  40c21c:	add    ch,0x0
  40c21f:	add    BYTE PTR [edx-0x6dffff3b],cl
  40c225:	lds    eax,FWORD PTR [eax]
  40c227:	add    BYTE PTR [ebp+eax*8-0x3a5a0000],bl
  40c22e:	add    BYTE PTR [eax],al
  40c230:	scas   al,BYTE PTR es:[edi]
  40c231:	lds    eax,FWORD PTR [eax]
  40c233:	add    BYTE PTR [eax-0x3fffff3b],bh
  40c239:	lds    eax,FWORD PTR [eax]
  40c23b:	add    al,cl
  40c23d:	lds    eax,FWORD PTR [eax]
  40c23f:	add    dl,dl
  40c241:	lds    eax,FWORD PTR [eax]
  40c243:	add    ah,bl
  40c245:	lds    eax,FWORD PTR [eax]
  40c247:	add    dl,ch
  40c249:	lds    eax,FWORD PTR [eax]
  40c24b:	add    ah,dh
  40c24d:	lds    eax,FWORD PTR [eax]
  40c24f:	add    dh,bh
  40c251:	lds    eax,FWORD PTR [eax]
  40c253:	add    BYTE PTR [esi],al
  40c255:	mov    BYTE PTR [eax],0x0
  40c258:	adc    al,dh
  40c25a:	add    BYTE PTR [eax],al
  40c25c:	sbb    al,0xc6
  40c25e:	add    BYTE PTR [eax],al
  40c260:	mov    BYTE PTR es:[eax],0x0
  40c264:	xor    al,dh
  40c266:	add    BYTE PTR [eax],al
  40c268:	cmp    al,0xc6
  40c26a:	add    BYTE PTR [eax],al
  40c26c:	inc    esi
  40c26d:	mov    BYTE PTR [eax],0x0
  40c270:	push   eax
  40c271:	mov    BYTE PTR [eax],0x0
  40c274:	pop    eax
  40c275:	mov    BYTE PTR [eax],0x0
  40c278:	pusha  
  40c279:	mov    BYTE PTR [eax],0x0
  40c27c:	ins    BYTE PTR es:[edi],dx
  40c27d:	mov    BYTE PTR [eax],0x0
  40c280:	jbe    0x40c248
  40c282:	add    BYTE PTR [eax],al
  40c284:	add    BYTE PTR [eax],al
  40c286:	add    BYTE PTR [eax],al
  40c288:	mov    esi,0x62696c00
  40c28d:	jbe    0x40c2fb
  40c28f:	arpl   WORD PTR [edi+0x6e],bx
  40c292:	gs ja  0x40c295
  40c295:	add    BYTE PTR [eax],al
  40c297:	add    cl,al
  40c299:	add    BYTE PTR [ecx+ebp*2+0x62],ch
  40c29d:	jbe    0x40c30b
  40c29f:	arpl   WORD PTR [edi+0x72],bx
  40c2a2:	gs ins BYTE PTR es:[edi],dx
  40c2a4:	gs popa 
  40c2a6:	jae    0x40c30d
  40c2a8:	add    BYTE PTR [eax],al
  40c2aa:	add    BYTE PTR [eax],al
  40c2ac:	aam    0x0
  40c2ae:	inc    esp
  40c2af:	gs ins BYTE PTR es:[edi],dx
  40c2b1:	gs je  0x40c319
  40c2b4:	inc    ebx
  40c2b5:	jb     0x40c320
  40c2b7:	je     0x40c322
  40c2b9:	arpl   WORD PTR [ecx+0x6c],sp
  40c2bc:	push   ebx
  40c2bd:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  40c2c2:	outs   dx,BYTE PTR ds:[esi]
  40c2c3:	add    bh,ch
  40c2c5:	add    BYTE PTR [ebp+0x6e],al
  40c2c8:	je     0x40c32f
  40c2ca:	jb     0x40c30f
  40c2cc:	jb     0x40c337
  40c2ce:	je     0x40c339
  40c2d0:	arpl   WORD PTR [ecx+0x6c],sp
  40c2d3:	push   ebx
  40c2d4:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  40c2d9:	outs   dx,BYTE PTR ds:[esi]
  40c2da:	add    BYTE PTR [eax],al
  40c2dc:	les    eax,FWORD PTR [ecx]
  40c2de:	inc    edi
  40c2df:	gs je  0x40c325
  40c2e2:	jne    0x40c356
  40c2e4:	jb     0x40c34b
  40c2e6:	outs   dx,BYTE PTR ds:[esi]
  40c2e7:	je     0x40c339
  40c2e9:	jb     0x40c35a
  40c2eb:	arpl   WORD PTR [ebp+0x73],sp
  40c2ee:	jae    0x40c2f0
  40c2f0:	lds    eax,FWORD PTR [ecx]
  40c2f2:	inc    edi
  40c2f3:	gs je  0x40c339
  40c2f6:	jne    0x40c36a
  40c2f8:	jb     0x40c35f
  40c2fa:	outs   dx,BYTE PTR ds:[esi]
  40c2fb:	je     0x40c34d
  40c2fd:	jb     0x40c36e
  40c2ff:	arpl   WORD PTR [ebp+0x73],sp
  40c302:	jae    0x40c34d
  40c304:	fs add cl,cl
  40c307:	add    DWORD PTR [edi+0x65],eax
  40c30a:	je     0x40c34f
  40c30c:	jne    0x40c380
  40c30e:	jb     0x40c375
  40c310:	outs   dx,BYTE PTR ds:[esi]
  40c311:	je     0x40c367
  40c313:	push   0x64616572
  40c318:	dec    ecx
  40c319:	add    BYTE PTR fs:[eax],al
  40c31c:	add    eax,DWORD PTR [edx]
  40c31e:	inc    edi
  40c31f:	gs je  0x40c36e
  40c322:	popa   
  40c323:	jae    0x40c399
  40c325:	inc    ebp
  40c326:	jb     0x40c39a
  40c328:	outs   dx,DWORD PTR ds:[esi]
  40c329:	jb     0x40c32b
  40c32b:	add    BYTE PTR ds:0x74654702,dl
  40c331:	dec    ebp
  40c332:	outs   dx,DWORD PTR ds:[esi]
  40c333:	fs jne 0x40c3a2
  40c336:	gs dec eax
  40c338:	popa   
  40c339:	outs   dx,BYTE PTR ds:[esi]
  40c33a:	fs ins BYTE PTR es:[edi],dx
  40c33c:	gs inc ecx
  40c33e:	add    BYTE PTR [eax],al
  40c340:	sbb    BYTE PTR [edx],al
  40c342:	inc    edi
  40c343:	gs je  0x40c393
  40c346:	outs   dx,DWORD PTR ds:[esi]
  40c347:	fs jne 0x40c3b6
  40c34a:	gs dec eax
  40c34c:	popa   
  40c34d:	outs   dx,BYTE PTR ds:[esi]
  40c34e:	fs ins BYTE PTR es:[edi],dx
  40c350:	gs push edi
  40c352:	add    BYTE PTR [eax],al
  40c354:	inc    ebp
  40c355:	add    al,BYTE PTR [edi+0x65]
  40c358:	je     0x40c3aa
  40c35a:	jb     0x40c3cb
  40c35c:	arpl   WORD PTR [ecx+0x64],ax
  40c35f:	fs jb  0x40c3c7
  40c362:	jae    0x40c3d7
  40c364:	add    BYTE PTR [eax],al
  40c366:	add    al,BYTE PTR fs:[edi+0x65]
  40c36a:	je     0x40c3bf
  40c36c:	je     0x40c3cf
  40c36e:	jb     0x40c3e4
  40c370:	jne    0x40c3e2
  40c372:	dec    ecx
  40c373:	outs   dx,BYTE PTR ds:[esi]
  40c374:	outs   dx,WORD PTR ds:[esi]
  40c376:	inc    ecx
  40c377:	add    BYTE PTR [ebx+0x2],bh
  40c37a:	inc    edi
  40c37b:	gs je  0x40c3d1
  40c37e:	jns    0x40c3f3
  40c380:	je     0x40c3e7
  40c382:	ins    DWORD PTR es:[edi],dx
  40c383:	push   esp
  40c384:	imul   ebp,DWORD PTR [ebp+0x65],0x69467341
  40c38b:	ins    BYTE PTR es:[edi],dx
  40c38c:	gs push esp
  40c38e:	imul   ebp,DWORD PTR [ebp+0x65],0x47029700
  40c395:	gs je  0x40c3ec
  40c398:	imul   esp,DWORD PTR [ebx+0x6b],0x6e756f43
  40c39f:	je     0x40c3a1
  40c3a1:	add    bl,ch
  40c3a3:	add    cl,BYTE PTR [ecx+0x6e]
  40c3a6:	imul   esi,DWORD PTR [ecx+ebp*2+0x61],0x657a696c
  40c3ae:	inc    ebx
  40c3af:	jb     0x40c41a
  40c3b1:	je     0x40c41c
  40c3b3:	arpl   WORD PTR [ecx+0x6c],sp
  40c3b6:	push   ebx
  40c3b7:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  40c3bc:	outs   dx,BYTE PTR ds:[esi]
  40c3bd:	add    BYTE PTR [edi],al
  40c3bf:	add    ecx,DWORD PTR [ecx+0x73]
  40c3c2:	inc    esp
  40c3c3:	inc    edx
  40c3c4:	inc    ebx
  40c3c5:	push   ebx
  40c3c6:	dec    esp
  40c3c7:	gs popa 
  40c3c9:	fs inc edx
  40c3cb:	jns    0x40c441
  40c3cd:	gs inc ebp
  40c3cf:	js     0x40c3d1
  40c3d1:	add    BYTE PTR [esi],ah
  40c3d3:	add    ecx,DWORD PTR [ebp+eiz*2+0x61]
  40c3d7:	jbe    0x40c43e
  40c3d9:	inc    ebx
  40c3da:	jb     0x40c445
  40c3dc:	je     0x40c447
  40c3de:	arpl   WORD PTR [ecx+0x6c],sp
  40c3e1:	push   ebx
  40c3e2:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  40c3e7:	outs   dx,BYTE PTR ds:[esi]
  40c3e8:	add    BYTE PTR [eax],al
  40c3ea:	push   ebp
  40c3eb:	add    ecx,DWORD PTR [ebp+0x75]
  40c3ee:	ins    BYTE PTR es:[edi],dx
  40c3ef:	je     0x40c45a
  40c3f1:	inc    edx
  40c3f2:	jns    0x40c468
  40c3f4:	gs push esp
  40c3f6:	outs   dx,DWORD PTR ds:[esi]
  40c3f7:	push   edi
  40c3f8:	imul   esp,DWORD PTR [ebp+eiz*2+0x43],0x726168
  40c400:	xchg   ebx,eax
  40c401:	add    edx,DWORD PTR [ecx+0x75]
  40c404:	gs jb  0x40c480
  40c407:	push   eax
  40c408:	gs jb  0x40c471
  40c40b:	outs   dx,DWORD PTR ds:[esi]
  40c40c:	jb     0x40c47b
  40c40e:	popa   
  40c40f:	outs   dx,BYTE PTR ds:[esi]
  40c410:	arpl   WORD PTR [ebp+0x43],sp
  40c413:	outs   dx,DWORD PTR ds:[esi]
  40c414:	jne    0x40c484
  40c416:	je     0x40c47d
  40c418:	jb     0x40c41a
  40c41a:	sbb    al,0x4
  40c41c:	push   ebx
  40c41d:	gs je  0x40c465
  40c420:	jb     0x40c494
  40c422:	outs   dx,DWORD PTR ds:[esi]
  40c423:	jb     0x40c472
  40c425:	outs   dx,DWORD PTR ds:[esi]
  40c426:	fs add BYTE PTR gs:[eax],al
  40c42a:	addr16 add al,0x53
  40c42d:	gs je  0x40c485
  40c430:	outs   dx,BYTE PTR ds:[esi]
  40c431:	push   0x6c646e61
  40c436:	gs fs inc ebp
  40c439:	js     0x40c49e
  40c43b:	gs jo  0x40c4b2
  40c43e:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
  40c445:	gs jb  0x40c448
  40c448:	je     0x40c44e
  40c44a:	push   ebx
  40c44b:	ins    BYTE PTR es:[edi],dx
  40c44c:	gs gs jo 0x40c450
  40c450:	add    BYTE PTR [esp+edx*2],0x65
  40c454:	jb     0x40c4c3
  40c456:	imul   ebp,DWORD PTR [esi+0x61],0x72506574
  40c45d:	outs   dx,DWORD PTR ds:[esi]
  40c45e:	arpl   WORD PTR [ebp+0x73],sp
  40c461:	jae    0x40c463
  40c463:	add    BYTE PTR [ecx+0x736c5404],cl
  40c469:	inc    edi
  40c46a:	gs je  0x40c4c3
  40c46d:	popa   
  40c46e:	ins    BYTE PTR es:[edi],dx
  40c46f:	jne    0x40c4d6
  40c471:	add    BYTE PTR [esi+0x686e5504],dl
  40c477:	popa   
  40c478:	outs   dx,BYTE PTR ds:[esi]
  40c479:	fs ins BYTE PTR es:[edi],dx
  40c47b:	gs fs inc ebp
  40c47e:	js     0x40c4e3
  40c480:	gs jo  0x40c4f7
  40c483:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
  40c48a:	gs jb  0x40c48d
  40c48d:	add    BYTE PTR [esi+0x72695604],dh
  40c493:	je     0x40c50a
  40c495:	popa   
  40c496:	ins    BYTE PTR es:[edi],dx
  40c497:	push   eax
  40c498:	jb     0x40c509
  40c49a:	je     0x40c501
  40c49c:	arpl   WORD PTR [eax+eax*1+0x0],si
  40c4a0:	mov    ecx,0x72695604
  40c4a5:	je     0x40c51c
  40c4a7:	popa   
  40c4a8:	ins    BYTE PTR es:[edi],dx
  40c4a9:	push   ecx
  40c4aa:	jne    0x40c511
  40c4ac:	jb     0x40c527
  40c4ae:	add    BYTE PTR [eax],al
  40c4b0:	fiadd  DWORD PTR [edi+edx*2]
  40c4b3:	imul   esp,DWORD PTR [ebp+eiz*2+0x43],0x54726168
  40c4bb:	outs   dx,DWORD PTR ds:[esi]
  40c4bc:	dec    ebp
  40c4bd:	jne    0x40c52b
  40c4bf:	je     0x40c52a
  40c4c1:	inc    edx
  40c4c2:	jns    0x40c538
  40c4c4:	add    BYTE PTR gs:[esi],ch
  40c4c7:	add    BYTE PTR [edi+0x5f],bl
  40c4ca:	popa   
  40c4cb:	jb     0x40c534
  40c4cd:	jbe    0x40c4cf
  40c4cf:	add    BYTE PTR [edi],dh
  40c4d1:	add    BYTE PTR [edi+0x5f],bl
  40c4d4:	fs ins BYTE PTR es:[edi],dx
  40c4d6:	ins    BYTE PTR es:[edi],dx
  40c4d7:	outs   dx,DWORD PTR ds:[esi]
  40c4d8:	outs   dx,BYTE PTR ds:[esi]
  40c4d9:	gs js  0x40c545
  40c4dc:	je     0x40c4de
  40c4de:	cmp    al,BYTE PTR [eax]
  40c4e0:	pop    edi
  40c4e1:	pop    edi
  40c4e2:	addr16 gs je 0x40c553
  40c4e6:	popa   
  40c4e7:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  40c4ee:	cmp    eax,DWORD PTR [eax]
  40c4f0:	pop    edi
  40c4f1:	pop    edi
  40c4f2:	imul   ebp,DWORD PTR [esi+0x69],0x766e6574
  40c4f9:	add    BYTE PTR [eax+eax*1+0x5f],al
  40c4fd:	pop    edi
  40c4fe:	ins    BYTE PTR es:[edi],dx
  40c4ff:	arpl   WORD PTR [edi+0x6e],bp
  40c502:	jbe    0x40c563
  40c504:	imul   ebp,DWORD PTR [esi+0x69],0x45000074
  40c50b:	add    BYTE PTR [edi+0x5f],bl
  40c50e:	ins    DWORD PTR es:[edi],dx
  40c50f:	bound  ebx,QWORD PTR [edi+0x63]
  40c512:	jne    0x40c586
  40c514:	pop    edi
  40c515:	ins    DWORD PTR es:[edi],dx
  40c516:	popa   
  40c517:	js     0x40c519
  40c519:	add    BYTE PTR [eax+0x0],ch
  40c51c:	pop    edi
  40c51d:	pop    edi
  40c51e:	jae    0x40c585
  40c520:	je     0x40c581
  40c522:	popa   
  40c523:	jo     0x40c595
  40c525:	pop    edi
  40c526:	je     0x40c5a1
  40c528:	jo     0x40c58f
  40c52a:	add    BYTE PTR [eax],al
  40c52c:	imul   eax,DWORD PTR [eax],0x5f
  40c52f:	pop    edi
  40c530:	jae    0x40c597
  40c532:	je     0x40c5a9
  40c534:	jae    0x40c59b
  40c536:	jb     0x40c5a5
  40c538:	popa   
  40c539:	je     0x40c5a3
  40c53b:	gs jb  0x40c5b0
  40c53e:	add    BYTE PTR [eax],al
  40c540:	jns    0x40c542
  40c542:	pop    edi
  40c543:	popa   
  40c544:	arpl   WORD PTR [ebp+0x64],bp
  40c547:	ins    BYTE PTR es:[edi],dx
  40c548:	outs   dx,BYTE PTR ds:[esi]
  40c549:	add    BYTE PTR [esi+0x6d615f00],cl
  40c54f:	jae    0x40c5b8
  40c551:	pop    edi
  40c552:	gs js  0x40c5be
  40c555:	je     0x40c557
  40c557:	add    BYTE PTR [edi+0x65635f00],bl
  40c55d:	js     0x40c5c8
  40c55f:	je     0x40c561
  40c561:	add    al,dl
  40c563:	add    BYTE PTR [edi+0x65],bl
  40c566:	jb     0x40c5da
  40c568:	outs   dx,BYTE PTR ds:[esi]
  40c569:	outs   dx,DWORD PTR ds:[esi]
  40c56a:	add    BYTE PTR [eax],al
  40c56c:	repz add BYTE PTR [edi+0x66],bl
  40c570:	ins    DWORD PTR es:[edi],dx
  40c571:	outs   dx,DWORD PTR ds:[esi]
  40c572:	fs add BYTE PTR gs:[eax],al
  40c576:	das    
  40c577:	add    DWORD PTR [edi+0x69],ebx
  40c57a:	outs   dx,BYTE PTR ds:[esi]
  40c57b:	imul   esi,DWORD PTR [esp+esi*2+0x65],0x33006d72
  40c583:	add    DWORD PTR [edi+0x69],ebx
  40c586:	outs   dx,DWORD PTR ds:[esi]
  40c587:	bound  eax,QWORD PTR [eax]
  40c589:	add    BYTE PTR [ecx+eax*1+0x636f6c5f],dl
  40c590:	imul   eax,DWORD PTR [eax],0x31
  40c593:	add    bl,BYTE PTR [edi+0x6f]
  40c596:	outs   dx,BYTE PTR ds:[esi]
  40c597:	gs js  0x40c603
  40c59a:	je     0x40c59c
  40c59c:	sbb    DWORD PTR [ebx],eax
  40c59e:	arpl   WORD PTR [ecx+0x6c],sp
  40c5a1:	ins    BYTE PTR es:[edi],dx
  40c5a2:	outs   dx,DWORD PTR ds:[esi]
  40c5a3:	arpl   WORD PTR [eax],ax
  40c5a5:	add    BYTE PTR [ebx],ah
  40c5a7:	add    esp,DWORD PTR [ebp+0x78]
  40c5aa:	imul   esi,DWORD PTR [eax+eax*1+0x0],0x70660333
  40c5b2:	jb     0x40c61d
  40c5b4:	outs   dx,BYTE PTR ds:[esi]
  40c5b5:	je     0x40c61d
  40c5b7:	add    BYTE PTR ds:0x75706603,dh
  40c5bd:	je     0x40c622
  40c5bf:	add    BYTE PTR [edx],bh
  40c5c1:	add    esp,DWORD PTR [esi+0x72]
  40c5c4:	gs add BYTE PTR gs:[eax],al
  40c5c8:	inc    ebp
  40c5c9:	add    esp,DWORD PTR [esi+0x77]
  40c5cc:	jb     0x40c637
  40c5ce:	je     0x40c635
  40c5d0:	add    BYTE PTR [eax],al
  40c5d2:	dec    edx
  40c5d3:	add    esp,DWORD PTR [edi+0x65]
  40c5d6:	je     0x40c63d
  40c5d8:	outs   dx,BYTE PTR ds:[esi]
  40c5d9:	jbe    0x40c5db
  40c5db:	add    BYTE PTR [ebp+0x3],ch
  40c5de:	ins    BYTE PTR es:[edi],dx
  40c5df:	outs   dx,DWORD PTR ds:[esi]
  40c5e0:	arpl   WORD PTR [ecx+0x6c],sp
  40c5e3:	arpl   WORD PTR gs:[edi+0x6e],bp
  40c5e7:	jbe    0x40c5e9
  40c5e9:	add    BYTE PTR [ecx+0x3],dh
  40c5ec:	ins    DWORD PTR es:[edi],dx
  40c5ed:	popa   
  40c5ee:	ins    BYTE PTR es:[edi],dx
  40c5ef:	ins    BYTE PTR es:[edi],dx
  40c5f0:	outs   dx,DWORD PTR ds:[esi]
  40c5f1:	arpl   WORD PTR [eax],ax
  40c5f3:	add    BYTE PTR [ecx+0x3],bh
  40c5f6:	ins    DWORD PTR es:[edi],dx
  40c5f7:	gs ins DWORD PTR es:[edi],dx
  40c5f9:	arpl   WORD PTR [eax+0x79],si
  40c5fc:	add    BYTE PTR [eax],al
  40c5fe:	test   BYTE PTR [ebx],al
  40c600:	jo     0x40c677
  40c602:	je     0x40c677
  40c604:	add    BYTE PTR [eax],al
  40c606:	xchg   edx,eax
  40c607:	add    esi,DWORD PTR [ebx+0x65]
  40c60a:	je     0x40c678
  40c60c:	outs   dx,DWORD PTR ds:[esi]
  40c60d:	arpl   WORD PTR [ecx+0x6c],sp
  40c610:	add    BYTE PTR gs:[ebx+eax*1+0x6e676973],dl
  40c618:	popa   
  40c619:	ins    BYTE PTR es:[edi],dx
  40c61a:	add    BYTE PTR [eax],al
  40c61c:	sahf   
  40c61d:	add    esi,DWORD PTR [ebx+0x74]
  40c620:	jb     0x40c685
  40c622:	push   0xa4000072
  40c627:	add    esi,DWORD PTR [ebx+0x74]
  40c62a:	jb     0x40c691
  40c62c:	jb     0x40c6a0
  40c62e:	outs   dx,DWORD PTR ds:[esi]
  40c62f:	jb     0x40c631
  40c631:	add    BYTE PTR [esi+0x72747303],ah
  40c637:	ins    BYTE PTR es:[edi],dx
  40c638:	outs   dx,BYTE PTR gs:[esi]
  40c63a:	add    BYTE PTR [eax],al
  40c63c:	test   eax,0x72747303
  40c641:	outs   dx,BYTE PTR ds:[esi]
  40c642:	arpl   WORD PTR [ebp+0x70],bp
  40c645:	add    bl,ch
  40c647:	add    ebx,DWORD PTR [edi+0x75]
  40c64a:	outs   dx,BYTE PTR ds:[esi]
  40c64b:	ins    BYTE PTR es:[edi],dx
  40c64c:	outs   dx,DWORD PTR ds:[esi]
  40c64d:	arpl   WORD PTR [ebx+0x0],bp
  40c650:	cmp    al,0x4
  40c652:	popa   
  40c653:	bound  ebp,QWORD PTR [edi+0x72]
  40c656:	je     0x40c658
  40c658:	inc    ebp
  40c659:	add    al,0x61
  40c65b:	je     0x40c6cc
  40c65d:	imul   eax,DWORD PTR [eax],0x76045900
  40c663:	data16 jo 0x40c6d8
  40c666:	imul   ebp,DWORD PTR [esi+0x74],0x6f000066
  40c66d:	add    al,0x77
  40c66f:	arpl   WORD PTR [ebx+0x6c],si
  40c672:	outs   dx,BYTE PTR gs:[esi]
  40c674:	add    BYTE PTR [eax],al
  40c676:	fadd   QWORD PTR [edi+ebx*2]
  40c679:	jo     0x40c6f0
  40c67b:	je     0x40c6e2
  40c67d:	outs   dx,BYTE PTR ds:[esi]
  40c67e:	jbe    0x40c680
  40c680:	add    al,al
  40c682:	add    BYTE PTR [eax],al
  40c684:	add    al,al
  40c686:	add    BYTE PTR [eax],al
  40c688:	ins    BYTE PTR es:[edi],dx
  40c689:	imul   esp,DWORD PTR [edx+0x76],0x642e636c
  40c690:	ins    BYTE PTR es:[edi],dx
  40c691:	ins    BYTE PTR es:[edi],dx
  40c692:	add    BYTE PTR [eax],al
  40c694:	adc    al,0xc0
  40c696:	add    BYTE PTR [eax],al
  40c698:	adc    al,0xc0
  40c69a:	add    BYTE PTR [eax],al
  40c69c:	adc    al,0xc0
  40c69e:	add    BYTE PTR [eax],al
  40c6a0:	adc    al,0xc0
  40c6a2:	add    BYTE PTR [eax],al
  40c6a4:	adc    al,0xc0
  40c6a6:	add    BYTE PTR [eax],al
  40c6a8:	adc    al,0xc0
  40c6aa:	add    BYTE PTR [eax],al
  40c6ac:	adc    al,0xc0
  40c6ae:	add    BYTE PTR [eax],al
  40c6b0:	adc    al,0xc0
  40c6b2:	add    BYTE PTR [eax],al
  40c6b4:	adc    al,0xc0
  40c6b6:	add    BYTE PTR [eax],al
  40c6b8:	adc    al,0xc0
  40c6ba:	add    BYTE PTR [eax],al
  40c6bc:	adc    al,0xc0
  40c6be:	add    BYTE PTR [eax],al
  40c6c0:	adc    al,0xc0
  40c6c2:	add    BYTE PTR [eax],al
  40c6c4:	adc    al,0xc0
  40c6c6:	add    BYTE PTR [eax],al
  40c6c8:	adc    al,0xc0
  40c6ca:	add    BYTE PTR [eax],al
  40c6cc:	adc    al,0xc0
  40c6ce:	add    BYTE PTR [eax],al
  40c6d0:	adc    al,0xc0
  40c6d2:	add    BYTE PTR [eax],al
  40c6d4:	adc    al,0xc0
  40c6d6:	add    BYTE PTR [eax],al
  40c6d8:	adc    al,0xc0
  40c6da:	add    BYTE PTR [eax],al
  40c6dc:	adc    al,0xc0
  40c6de:	add    BYTE PTR [eax],al
  40c6e0:	adc    al,0xc0
  40c6e2:	add    BYTE PTR [eax],al
  40c6e4:	adc    al,0xc0
  40c6e6:	add    BYTE PTR [eax],al
  40c6e8:	adc    al,0xc0
  40c6ea:	add    BYTE PTR [eax],al
  40c6ec:	adc    al,0xc0
  40c6ee:	add    BYTE PTR [eax],al
  40c6f0:	adc    al,0xc0
  40c6f2:	add    BYTE PTR [eax],al
  40c6f4:	adc    al,0xc0
  40c6f6:	add    BYTE PTR [eax],al
  40c6f8:	adc    al,0xc0
  40c6fa:	add    BYTE PTR [eax],al
  40c6fc:	dec    ebx
  40c6fd:	inc    ebp
  40c6fe:	push   edx
  40c6ff:	dec    esi
  40c700:	inc    ebp
  40c701:	dec    esp
  40c702:	xor    esi,DWORD PTR [edx]
  40c704:	cs fs ins BYTE PTR es:[edi],dx
  40c707:	ins    BYTE PTR es:[edi],dx
  40c708:	add    BYTE PTR [eax],al
  40c70a:	add    BYTE PTR [eax],al
  40c70c:	sub    al,al
  40c70e:	add    BYTE PTR [eax],al
  40c710:	sub    al,al
  40c712:	add    BYTE PTR [eax],al
  40c714:	sub    al,al
  40c716:	add    BYTE PTR [eax],al
  40c718:	sub    al,al
  40c71a:	add    BYTE PTR [eax],al
  40c71c:	sub    al,al
  40c71e:	add    BYTE PTR [eax],al
  40c720:	sub    al,al
  40c722:	add    BYTE PTR [eax],al
  40c724:	sub    al,al
  40c726:	add    BYTE PTR [eax],al
  40c728:	sub    al,al
  40c72a:	add    BYTE PTR [eax],al
  40c72c:	sub    al,al
  40c72e:	add    BYTE PTR [eax],al
  40c730:	sub    al,al
  40c732:	add    BYTE PTR [eax],al
  40c734:	sub    al,al
  40c736:	add    BYTE PTR [eax],al
  40c738:	sub    al,al
  40c73a:	add    BYTE PTR [eax],al
  40c73c:	sub    al,al
  40c73e:	add    BYTE PTR [eax],al
  40c740:	sub    al,al
  40c742:	add    BYTE PTR [eax],al
  40c744:	sub    al,al
  40c746:	add    BYTE PTR [eax],al
  40c748:	sub    al,al
  40c74a:	add    BYTE PTR [eax],al
  40c74c:	sub    al,al
  40c74e:	add    BYTE PTR [eax],al
  40c750:	sub    al,al
  40c752:	add    BYTE PTR [eax],al
  40c754:	sub    al,al
  40c756:	add    BYTE PTR [eax],al
  40c758:	sub    al,al
  40c75a:	add    BYTE PTR [eax],al
  40c75c:	sub    al,al
  40c75e:	add    BYTE PTR [eax],al
  40c760:	sub    al,al
  40c762:	add    BYTE PTR [eax],al
  40c764:	sub    al,al
  40c766:	add    BYTE PTR [eax],al
  40c768:	sub    al,al
  40c76a:	add    BYTE PTR [eax],al
  40c76c:	sub    al,al
  40c76e:	add    BYTE PTR [eax],al
  40c770:	sub    al,al
  40c772:	add    BYTE PTR [eax],al
  40c774:	sub    al,al
  40c776:	add    BYTE PTR [eax],al
  40c778:	sub    al,al
  40c77a:	add    BYTE PTR [eax],al
  40c77c:	sub    al,al
  40c77e:	add    BYTE PTR [eax],al
  40c780:	sub    al,al
  40c782:	add    BYTE PTR [eax],al
  40c784:	sub    al,al
  40c786:	add    BYTE PTR [eax],al
  40c788:	sub    al,al
  40c78a:	add    BYTE PTR [eax],al
  40c78c:	sub    al,al
  40c78e:	add    BYTE PTR [eax],al
  40c790:	sub    al,al
  40c792:	add    BYTE PTR [eax],al
  40c794:	sub    al,al
  40c796:	add    BYTE PTR [eax],al
  40c798:	sub    al,al
  40c79a:	add    BYTE PTR [eax],al
  40c79c:	sub    al,al
  40c79e:	add    BYTE PTR [eax],al
  40c7a0:	sub    al,al
  40c7a2:	add    BYTE PTR [eax],al
  40c7a4:	sub    al,al
  40c7a6:	add    BYTE PTR [eax],al
  40c7a8:	sub    al,al
  40c7aa:	add    BYTE PTR [eax],al
  40c7ac:	ins    DWORD PTR es:[edi],dx
  40c7ad:	jae    0x40c825
  40c7af:	arpl   WORD PTR [edx+0x74],si
  40c7b2:	cs fs ins BYTE PTR es:[edi],dx
  40c7b5:	ins    BYTE PTR es:[edi],dx
	...

Disassembly of section .CRT:

0040d000 <.CRT>:
  40d000:	add    BYTE PTR [eax],al
  40d002:	add    BYTE PTR [eax],al
  40d004:	xor    BYTE PTR [ecx],dl
  40d006:	inc    eax
	...
  40d00f:	add    BYTE PTR [eax],dl
  40d011:	adc    BYTE PTR [eax+0x0],al
  40d014:	pusha  
  40d015:	sbb    BYTE PTR [eax+0x0],al
	...
  40d020:	adc    BYTE PTR [edx],bl
  40d022:	inc    eax
  40d023:	add    al,al
  40d025:	sbb    DWORD PTR [eax+0x0],eax
	...

Disassembly of section .tls:

0040e000 <.tls>:
  40e000:	add    BYTE PTR [eax],al
  40e002:	add    BYTE PTR [eax],al
  40e004:	add    al,ah
  40e006:	inc    eax
  40e007:	add    BYTE PTR [eax+eiz*8],bl
  40e00a:	inc    eax
  40e00b:	add    al,dl
  40e00d:	mov    bl,0x40
  40e00f:	add    BYTE PTR [eax],ah
  40e011:	rol    BYTE PTR [eax+0x0],1
	...

Disassembly of section .rsrc:

0040f000 <.rsrc>:
	...
  40f00c:	add    BYTE PTR [eax],al
  40f00e:	add    al,0x0
  40f010:	add    eax,DWORD PTR [eax]
  40f012:	add    BYTE PTR [eax],al
  40f014:	xor    BYTE PTR [eax],al
  40f016:	add    BYTE PTR [eax+0xe],al
  40f01c:	add    BYTE PTR [ecx],al
  40f01e:	add    BYTE PTR [eax+0x10],al
  40f024:	xor    BYTE PTR [ecx],al
  40f026:	add    BYTE PTR [eax+0x18],al
  40f02c:	pusha  
  40f02d:	add    DWORD PTR [eax],eax
  40f02f:	add    BYTE PTR [eax],0x0
	...
  40f03e:	push   es
  40f03f:	add    BYTE PTR [ecx],al
  40f041:	add    BYTE PTR [eax],al
  40f043:	add    BYTE PTR [eax+0x0],dh
  40f046:	add    BYTE PTR [eax+0x2],al
  40f04c:	mov    BYTE PTR [eax],al
  40f04e:	add    BYTE PTR [eax+0x3],al
  40f054:	mov    al,ds:0x4800000
  40f059:	add    BYTE PTR [eax],al
  40f05b:	add    BYTE PTR [eax+0x5800000],bh
  40f061:	add    BYTE PTR [eax],al
  40f063:	add    al,dl
  40f065:	add    BYTE PTR [eax],al
  40f067:	add    BYTE PTR [esi],0x0
  40f06a:	add    BYTE PTR [eax],al
  40f06c:	call   0xc0f071
	...
  40f07d:	add    BYTE PTR [ecx],al
  40f07f:	add    BYTE PTR [ecx],cl
  40f081:	add    al,0x0
  40f083:	add    BYTE PTR [eax+0x1],ch
	...
  40f095:	add    BYTE PTR [ecx],al
  40f097:	add    BYTE PTR [ecx],cl
  40f099:	add    al,0x0
  40f09b:	add    BYTE PTR [eax+0x1],bh
	...
  40f0ad:	add    BYTE PTR [ecx],al
  40f0af:	add    BYTE PTR [ecx],cl
  40f0b1:	add    al,0x0
  40f0b3:	add    al,cl
  40f0b5:	add    DWORD PTR [eax],eax
	...
  40f0c3:	add    BYTE PTR [eax],al
  40f0c5:	add    BYTE PTR [ecx],al
  40f0c7:	add    BYTE PTR [ecx],cl
  40f0c9:	add    al,0x0
  40f0cb:	add    al,bl
  40f0cd:	add    DWORD PTR [eax],eax
	...
  40f0db:	add    BYTE PTR [eax],al
  40f0dd:	add    BYTE PTR [ecx],al
  40f0df:	add    BYTE PTR [ecx],cl
  40f0e1:	add    al,0x0
  40f0e3:	add    al,ch
  40f0e5:	add    DWORD PTR [eax],eax
	...
  40f0f3:	add    BYTE PTR [eax],al
  40f0f5:	add    BYTE PTR [ecx],al
  40f0f7:	add    BYTE PTR [ecx],cl
  40f0f9:	add    al,0x0
  40f0fb:	add    al,bh
  40f0fd:	add    DWORD PTR [eax],eax
	...
  40f10b:	add    BYTE PTR [ecx],al
  40f10d:	add    BYTE PTR [eax],al
  40f10f:	add    BYTE PTR [eax+0x18800001],dl
  40f115:	add    DWORD PTR [eax],eax
  40f117:	add    BYTE PTR [eax],0x0
	...
  40f126:	add    DWORD PTR [eax],eax
  40f128:	or     DWORD PTR [eax+eax*1],eax
  40f12b:	add    BYTE PTR [eax],cl
  40f12d:	add    al,BYTE PTR [eax]
	...
  40f13b:	add    BYTE PTR [eax],al
  40f13d:	add    BYTE PTR [ecx],al
  40f13f:	add    BYTE PTR [ecx],al
  40f141:	add    BYTE PTR [eax],al
  40f143:	add    BYTE PTR [eax+0x1],cl
  40f146:	add    BYTE PTR [eax+0x0],al
	...
  40f154:	add    BYTE PTR [eax],al
  40f156:	add    DWORD PTR [eax],eax
  40f158:	or     DWORD PTR [eax+eax*1],eax
  40f15b:	add    BYTE PTR [eax],bl
  40f15d:	add    al,BYTE PTR [eax]
	...
  40f16b:	add    BYTE PTR [eax],al
  40f16d:	add    BYTE PTR [ecx],al
  40f16f:	add    BYTE PTR [ecx],al
  40f171:	add    BYTE PTR [eax],al
  40f173:	add    BYTE PTR [eax+0x1],bh
  40f176:	add    BYTE PTR [eax+0x0],al
	...
  40f184:	add    BYTE PTR [eax],al
  40f186:	add    DWORD PTR [eax],eax
  40f188:	or     DWORD PTR [eax+eax*1],eax
  40f18b:	add    BYTE PTR [eax],ch
  40f18d:	add    al,BYTE PTR [eax]
  40f18f:	add    BYTE PTR [eax],cl
  40f191:	add    BYTE PTR [esi+0x0],dl
  40f194:	dec    esp
  40f195:	add    BYTE PTR [ebx+0x0],al
  40f198:	pop    edi
  40f199:	add    BYTE PTR [ecx+0x0],cl
  40f19c:	inc    ebx
  40f19d:	add    BYTE PTR [edi+0x0],cl
  40f1a0:	dec    esi
  40f1a1:	add    BYTE PTR [eax],al
  40f1a3:	add    BYTE PTR [eax],al
  40f1a5:	add    BYTE PTR [eax],al
  40f1a7:	add    BYTE PTR [eax],bh
  40f1a9:	repnz add BYTE PTR [eax],al
  40f1ac:	test   al,0x8
	...
  40f1b6:	add    BYTE PTR [eax],al
  40f1b8:	loopne 0x40f1b4
  40f1ba:	add    BYTE PTR [eax],al
  40f1bc:	push   0x5
  40f1c1:	add    BYTE PTR [eax],al
  40f1c3:	add    BYTE PTR [eax],al
  40f1c5:	add    BYTE PTR [eax],al
  40f1c7:	add    BYTE PTR [eax+0x0],cl
  40f1ca:	add    DWORD PTR [eax],eax
  40f1cc:	sahf   
  40f1cd:	aam    0x0
	...
  40f1d7:	add    al,ch
  40f1d9:	aam    0x1
  40f1db:	add    BYTE PTR [eax+0x25],ch
  40f1e1:	add    BYTE PTR [eax],al
  40f1e3:	add    BYTE PTR [eax],al
  40f1e5:	add    BYTE PTR [eax],al
  40f1e7:	add    BYTE PTR [eax-0x57fffe06],dl
  40f1ed:	adc    BYTE PTR [eax],al
	...
  40f1f7:	add    BYTE PTR [eax],bh
  40f1f9:	or     eax,DWORD PTR [edx]
  40f1fb:	add    BYTE PTR [eax+0x4],ch
	...
  40f206:	add    BYTE PTR [eax],al
  40f208:	mov    al,ds:0x5a00020f
	...
  40f219:	adc    BYTE PTR [edx],al
  40f21b:	add    BYTE PTR [ebx+eax*1+0x0],ah
  40f222:	add    BYTE PTR [eax],al
  40f224:	add    BYTE PTR [eax],al
  40f226:	add    BYTE PTR [eax],al
  40f228:	test   al,0x13
  40f22a:	add    al,BYTE PTR [eax]
  40f22c:	fild   WORD PTR [eax+eax*1]
	...
  40f237:	add    BYTE PTR [eax],ch
  40f239:	add    BYTE PTR [eax],al
  40f23b:	add    BYTE PTR [eax],ah
  40f23d:	add    BYTE PTR [eax],al
  40f23f:	add    BYTE PTR [eax+0x0],al
  40f242:	add    BYTE PTR [eax],al
  40f244:	add    DWORD PTR [eax],eax
  40f246:	or     BYTE PTR [eax],al
  40f248:	add    BYTE PTR [eax],al
  40f24a:	add    BYTE PTR [eax],al
  40f24c:	add    BYTE PTR [eax+eax*1],al
	...
  40f257:	add    BYTE PTR [eax],al
  40f259:	add    DWORD PTR [eax],eax
  40f25b:	add    BYTE PTR [eax],al
  40f25d:	add    DWORD PTR [eax],eax
  40f25f:	add    BYTE PTR [edx],al
  40f261:	xor    bl,BYTE PTR [edx-0x65615e00]
  40f267:	add    BYTE PTR [edx],al
  40f269:	(bad)  
  40f26b:	add    BYTE PTR [edx-0x3e],cl
  40f26e:	inc    BYTE PTR [eax]
  40f270:	push   es
  40f271:	data16 rol BYTE PTR [eax],cl
  40f274:	add    bh,BYTE PTR [edx-0x16]
  40f277:	add    dh,al
  40f279:	ret    0xba
  40f27c:	fcmovu st,st(2)
  40f27e:	rol    BYTE PTR [eax],cl
  40f280:	add    ah,BYTE PTR [edx-0x1a]
  40f283:	add    BYTE PTR [edx],al
  40f285:	push   edx
  40f286:	mov    BYTE PTR [eax],0x2
  40f289:	xchg   edx,eax
  40f28a:	cli    
  40f28b:	add    BYTE PTR [esi],ah
  40f28d:	jp     0x40f26d
  40f28f:	add    BYTE PTR [edx],al
  40f291:	outs   dx,BYTE PTR ds:[esi]
  40f292:	out    0x0,al
  40f294:	mov    esi,0xe600daca
  40f299:	out    0xde,al
  40f29b:	add    BYTE PTR [edx],al
  40f29d:	xchg   dh,dh
  40f29f:	add    BYTE PTR [edx-0x6e],dl
  40f2a2:	fiadd  WORD PTR [eax]
  40f2a4:	add    bl,BYTE PTR [edx-0x26]
  40f2a7:	add    BYTE PTR [edx],al
  40f2a9:	inc    esi
  40f2aa:	mov    dh,0x0
  40f2ac:	into   
  40f2ad:	into   
  40f2ae:	retf   0x200
  40f2b1:	outs   dx,BYTE PTR ds:[esi]
  40f2b2:	repnz add BYTE PTR [edx],al
  40f2b5:	outs   dx,BYTE PTR ds:[esi]
  40f2b6:	fiadd  WORD PTR [eax]
  40f2b8:	fcmovu st,st(2)
  40f2ba:	fiadd  WORD PTR [eax]
  40f2bc:	add    bl,BYTE PTR [edx-0x3a]
  40f2bf:	add    BYTE PTR [esi+0x200aeb2],dh
  40f2c5:	jp     0x40f2bd
  40f2c7:	add    BYTE PTR [edx],al
  40f2c9:	(bad)  
  40f2ca:	fiadd  WORD PTR [eax]
  40f2cc:	dec    edx
  40f2cd:	mov    esi,0x3e0600fe
  40f2d2:	stos   BYTE PTR es:[edi],al
  40f2d3:	add    BYTE PTR [edx],al
  40f2d5:	push   0xffffffe6
  40f2d7:	add    BYTE PTR [edx-0x6e],cl
  40f2da:	out    0x0,al
  40f2dc:	push   0xffffffa6
  40f2de:	fiadd  DWORD PTR [eax]
  40f2e0:	into   
  40f2e1:	retf   0xbe
  40f2e4:	fcmovu st,st(2)
  40f2e6:	fiadd  DWORD PTR [eax]
  40f2e8:	add    dl,BYTE PTR [edx-0x2e]
  40f2eb:	add    BYTE PTR [edx],al
  40f2ed:	jbe    0x40f2d9
  40f2ef:	add    dl,dl
  40f2f1:	ror    dh,cl
  40f2f3:	add    BYTE PTR [esi-0x75ff354e],bl
  40f2f9:	ret    0xea
  40f2fc:	add    al,BYTE PTR [edx-0x79d9ff0e]
  40f302:	out    0x0,al
  40f304:	jmp    0xf68e:0x200e6ea
  40f30b:	add    BYTE PTR [edx-0x62],dl
  40f30e:	loop   0x40f310
  40f310:	(bad)  
  40f312:	retf   0x200
  40f315:	jbe    0x40f309
  40f317:	add    BYTE PTR [esi+0x200b6ba],bh
  40f31d:	push   0xffffffde
  40f31f:	add    dh,dl
  40f321:	(bad)  
  40f322:	into   
  40f323:	add    BYTE PTR [esi],cl
  40f325:	cmp    bl,BYTE PTR [edx-0x65859a00]
  40f32b:	add    BYTE PTR [edx],al
  40f32d:	jp     0x40f321
  40f32f:	add    BYTE PTR [edx],al
  40f331:	data16 out dx,al
  40f333:	add    BYTE PTR [edx],al
  40f335:	outs   dx,BYTE PTR ds:[esi]
  40f336:	out    dx,al
  40f337:	add    BYTE PTR [edx],al
  40f339:	dec    esi
  40f33a:	ret    0xd200
  40f33d:	ror    dl,cl
  40f33f:	add    dl,ah
  40f341:	loop   0x40f321
  40f343:	add    BYTE PTR [edx],al
  40f345:	pop    edx
  40f346:	rol    BYTE PTR [eax],cl
  40f348:	add    al,BYTE PTR [edx-0x556dff0a]
  40f34e:	retf   0x4a00
  40f351:	retf   0xfe
  40f354:	push   ss
  40f355:	push   0xffffffd2
  40f357:	add    BYTE PTR [edx-0x1dff393e],bh
  40f35d:	(bad)  
  40f35f:	add    BYTE PTR [edx],al
  40f361:	data16 out 0x0,al
  40f364:	add    dl,BYTE PTR [edx-0x32]
  40f367:	add    BYTE PTR [edx],al
  40f369:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f36a:	cli    
  40f36b:	add    dh,ah
  40f36d:	out    0xe2,al
  40f36f:	add    BYTE PTR [edx],al
  40f371:	xchg   dh,bh
  40f373:	add    BYTE PTR [edx],al
  40f375:	jb     0x40f369
  40f377:	add    BYTE PTR [edx],al
  40f379:	data16 fiadd WORD PTR [eax]
  40f37c:	inc    esi
  40f37d:	sahf   
  40f37e:	jmp    0x5200:0xe28e3a00
  40f385:	mov    ds:0xbec200ea,al
  40f38a:	mov    dh,0x0
  40f38c:	(bad)  
  40f38d:	(bad)  
  40f38e:	rol    BYTE PTR [eax],cl
  40f390:	mov    dl,0xaa
  40f392:	mov    ds:0xda620200,al
  40f397:	add    BYTE PTR [esi],cl
  40f399:	jp     0x40f385
  40f39b:	add    BYTE PTR [edx],al
  40f39d:	jb     0x40f389
  40f39f:	add    BYTE PTR [edx],al
  40f3a1:	mov    dh,dh
  40f3a3:	add    BYTE PTR [edx],al
  40f3a5:	pop    esi
  40f3a6:	out    0x0,al
  40f3a8:	add    cl,BYTE PTR [edx-0x42]
  40f3ab:	add    BYTE PTR [edx],al
  40f3ad:	jle    0x40f3a5
  40f3af:	add    BYTE PTR [edx],al
  40f3b1:	inc    edx
  40f3b2:	mov    dh,0x0
  40f3b4:	add    ch,BYTE PTR [edx-0x12]
  40f3b7:	add    BYTE PTR [esi-0x6a],al
  40f3ba:	out    0x0,al
  40f3bc:	retf   0xc6ca
  40f3bf:	add    dh,bl
  40f3c1:	(bad)  
  40f3c3:	add    BYTE PTR [edx],al
  40f3c5:	push   esi
  40f3c6:	rol    BYTE PTR [eax],cl
  40f3c8:	add    bh,BYTE PTR [edx]
  40f3ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f3cb:	add    BYTE PTR [esi],bh
  40f3cd:	jp     0x40f395
  40f3cf:	add    dl,bl
  40f3d1:	ror    dl,cl
  40f3d3:	add    dh,ah
  40f3d5:	loop   0x40f3b9
  40f3d7:	add    BYTE PTR [edx],al
  40f3d9:	pop    esi
  40f3da:	(bad)  
  40f3db:	add    BYTE PTR [esi+0x200babe],bh
  40f3e1:	ss sahf 
  40f3e3:	add    BYTE PTR [edx],bh
  40f3e5:	jb     0x40f3a5
  40f3e7:	add    BYTE PTR [edx-0x3a],cl
  40f3ea:	inc    BYTE PTR [eax]
  40f3ec:	add    bh,BYTE PTR [edx-0x12]
  40f3ef:	add    dl,cl
  40f3f1:	(bad)  
  40f3f2:	mov    esi,0xd6dada00
  40f3f7:	add    BYTE PTR [edx],al
  40f3f9:	(bad)  
  40f3fa:	jmp    0x200:0xc6560200
  40f401:	call   0xde:0x823a00fa
  40f408:	add    ch,BYTE PTR [esi-0x16]
  40f40b:	add    dl,ch
  40f40d:	out    0xde,al
  40f40f:	add    BYTE PTR [edx-0x66],dl
  40f412:	out    0x0,al
  40f414:	add    al,BYTE PTR [esi-0x46]
  40f417:	add    dl,dl
  40f419:	into   
  40f41a:	retf   0x200
  40f41d:	outs   dx,BYTE PTR ds:[esi]
  40f41e:	test   BYTE PTR [eax],0xe
  40f421:	jb     0x40f405
  40f423:	add    dl,ah
  40f425:	(bad)  
  40f427:	add    BYTE PTR [edx],al
  40f429:	pop    edx
  40f42a:	into   
  40f42b:	add    BYTE PTR [esi+0x200b6b6],dh
  40f431:	(bad)  
  40f433:	add    BYTE PTR [edx],al
  40f435:	ds scas al,BYTE PTR es:[edi]
  40f437:	add    BYTE PTR [edx],al
  40f439:	push   0xffffffea
  40f43b:	add    BYTE PTR [edx+0x200ceb2],dl
  40f441:	jbe    0x40f431
  40f443:	add    dh,dl
  40f445:	ror    dh,cl
  40f447:	add    BYTE PTR [edx+0x2a00f2d2],bl
  40f44d:	mov    ah,dl
  40f44f:	add    dh,ch
  40f451:	jmp    0xfa:0x8e0200e6
  40f458:	outs   dx,BYTE PTR ds:[esi]
  40f459:	mov    ds:0x760200da,al
  40f45e:	test   BYTE PTR [eax],0x2
  40f461:	push   0xffffffe2
  40f463:	add    BYTE PTR [esi-0x72],dh
  40f466:	scas   al,BYTE PTR es:[edi]
  40f467:	add    BYTE PTR [esi-0x39ff5552],ch
  40f46d:	mov    dl,0x0
  40f470:	add    dl,BYTE PTR [edx-0x42]
  40f473:	add    BYTE PTR [esi-0x72],al
  40f476:	fiadd  WORD PTR [eax]
  40f478:	add    bh,BYTE PTR [esi-0xe]
  40f47b:	add    BYTE PTR [edx],al
  40f47d:	jb     0x40f46d
  40f47f:	add    BYTE PTR [edx-0x32],cl
  40f482:	inc    BYTE PTR [eax]
  40f484:	add    dl,BYTE PTR [esi-0x32]
  40f487:	add    BYTE PTR [esi-0x5e],bl
  40f48a:	jmp    0x200:0xda660200
  40f491:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f493:	add    dh,bl
  40f495:	(bad)  
  40f496:	into   
  40f497:	add    BYTE PTR [edx],al
  40f499:	pop    edx
  40f49a:	(bad)  
  40f49b:	add    BYTE PTR [edx],al
  40f49d:	cmp    dl,0x0
  40f4a0:	add    ah,BYTE PTR [esi-0x16]
  40f4a3:	add    BYTE PTR [edx],cl
  40f4a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4a6:	cli    
  40f4a7:	add    BYTE PTR [edx],al
  40f4a9:	jb     0x40f4a1
  40f4ab:	add    BYTE PTR [edx],al
  40f4ad:	data16 loop 0x40f4b0
  40f4b0:	add    cl,BYTE PTR [edx+0x5e0200fa]
  40f4b6:	jmp    0x200:0xfa7e0200
  40f4bd:	push   esi
  40f4be:	(bad)  
  40f4bf:	add    dh,dl
  40f4c1:	ror    dl,cl
  40f4c3:	add    dh,ah
  40f4c5:	loop   0x40f4a5
  40f4c7:	add    dh,ah
  40f4c9:	(bad)  
  40f4cb:	add    dl,ch
  40f4cd:	out    0xe2,al
  40f4cf:	add    dl,bl
  40f4d1:	(bad)  
  40f4d2:	rol    BYTE PTR [eax],cl
  40f4d4:	dec    edx
  40f4d5:	xchg   esi,eax
  40f4d6:	out    0x0,al
  40f4d8:	into   
  40f4d9:	retf   0xc6
  40f4dc:	loop   0x40f4bc
  40f4de:	fiadd  DWORD PTR [eax]
  40f4e0:	ret    0xbabe
	...
  40f65f:	add    BYTE PTR [ecx-0x5e5e5e5f],ah
  40f665:	mov    eax,ds:0xa1a1a1a1
  40f66a:	mov    eax,ds:0xa1a1a1a1
  40f66f:	mov    eax,ds:0xa1a1a1a1
  40f674:	mov    eax,ds:0xa1a1a1a1
  40f679:	mov    eax,ds:0xa1a1a1a1
  40f67e:	mov    eax,ds:0xa1a1a1a1
  40f683:	mov    eax,ds:0xa1a1a1a1
  40f688:	mov    eax,ds:0xa1a1a1a1
  40f68d:	mov    eax,ds:0xa1a1a1a1
  40f692:	mov    eax,ds:0xa1a1a1a1
  40f697:	mov    eax,ds:0xa1a1a1a1
  40f69c:	mov    eax,ds:0xa1a1a1a1
  40f6a1:	mov    eax,ds:0xa1a1a1a1
  40f6a6:	mov    eax,ds:0xa1a1a1a1
  40f6ab:	mov    eax,ds:0xa1a1a1a1
  40f6b0:	mov    eax,ds:0xa1a1a1a1
  40f6b5:	mov    eax,ds:0xa1a1a1a1
  40f6ba:	mov    eax,ds:0xa1a1a1a1
  40f6bf:	mov    eax,ds:0x17a1a1a1
  40f6c4:	pop    ss
  40f6c5:	pop    ss
  40f6c6:	pop    ss
  40f6c7:	pop    ss
  40f6c8:	pop    ss
  40f6c9:	pop    ss
  40f6ca:	pop    ss
  40f6cb:	pop    ss
  40f6cc:	pop    ss
  40f6cd:	pop    ss
  40f6ce:	pop    ss
  40f6cf:	pop    ss
  40f6d0:	pop    ss
  40f6d1:	pop    ss
  40f6d2:	pop    ss
  40f6d3:	pop    ss
  40f6d4:	pop    ss
  40f6d5:	pop    ss
  40f6d6:	pop    ss
  40f6d7:	pop    ss
  40f6d8:	pop    ss
  40f6d9:	pop    ss
  40f6da:	pop    ss
  40f6db:	pop    ss
  40f6dc:	pop    ss
  40f6dd:	mov    eax,ds:0xa1a1a1a1
  40f6e2:	mov    eax,ds:0x3036262
  40f6e7:	bound  esp,QWORD PTR [edx+0x62]
  40f6ea:	add    ebx,DWORD PTR [ebx]
  40f6ec:	sbb    ebx,DWORD PTR [ebx]
  40f6ee:	sbb    ebx,DWORD PTR [ebx]
  40f6f0:	sbb    ebx,DWORD PTR [ebx]
  40f6f2:	sbb    ebx,DWORD PTR [ebx]
  40f6f4:	add    eax,DWORD PTR [ebx]
  40f6f6:	cmp    al,0x3c
  40f6f8:	cmp    al,0x3c
  40f6fa:	cmp    al,0x3c
  40f6fc:	cmp    al,0xa1
  40f6fe:	mov    eax,ds:0xa1a1a1a1
  40f703:	inc    edx
  40f704:	inc    edx
  40f705:	or     ch,BYTE PTR [edx]
  40f707:	sub    cl,BYTE PTR [edi]
  40f709:	sbb    DWORD PTR ds:0x8510808,esi
  40f70f:	or     BYTE PTR [eax+0x2d873576],dl
  40f715:	xchg   BYTE PTR [edx],bh
  40f717:	xchg   esp,eax
  40f718:	or     cl,BYTE PTR [edx]
  40f71a:	push   0xa1a19142
  40f71f:	mov    eax,ds:0xa1a1a1a1
  40f724:	or     cl,BYTE PTR [edi]
  40f726:	daa    
  40f727:	daa    
  40f728:	xchg   ebx,eax
  40f729:	inc    ecx
  40f72a:	pop    ecx
  40f72b:	dec    ebp
  40f72c:	xchg   ebx,eax
  40f72d:	je     0x40f737
  40f72f:	nop
  40f730:	jbe    0x40f767
  40f732:	xor    eax,0x2211406a
  40f737:	or     BYTE PTR [edi],0x50
  40f73a:	or     cl,BYTE PTR [edx]
  40f73c:	mov    eax,ds:0xa1a1a1a1
  40f741:	mov    eax,ds:0x86a1a1a1
  40f746:	arpl   WORD PTR [ebp+0x54],cx
  40f749:	or     DWORD PTR [esi+0x46],ebx
  40f74c:	adc    BYTE PTR [ecx+0x51],0x34
  40f750:	xor    al,0x35
  40f752:	inc    ebp
  40f753:	xchg   DWORD PTR ds:0x5e75528e,ebx
  40f759:	or     al,0x86
  40f75b:	mov    eax,ds:0xa1a1a1a1
  40f760:	mov    eax,ds:0xa1a1a1a1
  40f765:	mov    eax,ds:0x95a0978
  40f76a:	pop    ecx
  40f76b:	sbb    dh,BYTE PTR [eax+0xb]
  40f76e:	imul   eax,DWORD PTR [ebp+0x4e284885],0x6052221d
  40f778:	adc    dl,BYTE PTR [edi-0x5e5e5e5f]
  40f77e:	mov    eax,ds:0xa1a1a1a1
  40f783:	mov    eax,ds:0x39a1a1a1
  40f788:	pop    edx
  40f789:	ss pop ebx
  40f78b:	and    eax,0x5c381316
  40f790:	cdq    
  40f791:	cwde   
  40f792:	pop    eax
  40f793:	ds or  eax,0x54001261
  40f799:	mov    eax,ds:0xa1a1a1a1
  40f79e:	mov    eax,ds:0xa1a1a1a1
  40f7a3:	mov    eax,ds:0xa1a1a1a1
  40f7a8:	sbb    al,0x81
  40f7aa:	push   es
  40f7ab:	lahf   
  40f7ac:	outs   dx,BYTE PTR ds:[esi]
  40f7ad:	cmp    BYTE PTR [esi+0x43],ch
  40f7b0:	and    al,0x38
  40f7b2:	sahf   
  40f7b3:	pop    eax
  40f7b4:	push   es
  40f7b5:	pushf  
  40f7b6:	xor    dh,BYTE PTR [ecx]
  40f7b8:	mov    eax,ds:0xa1a1a1a1
  40f7bd:	mov    eax,ds:0xa1a1a1a1
  40f7c2:	mov    eax,ds:0xa1a1a1a1
  40f7c7:	mov    eax,ds:0x83654ca1
  40f7cc:	cmp    BYTE PTR [esi+0x38],ch
  40f7cf:	and    al,0x43
  40f7d1:	outs   dx,BYTE PTR ds:[esi]
  40f7d2:	cmp    BYTE PTR [ebx-0x5e61e79b],al
  40f7d8:	mov    eax,ds:0xa1a1a1a1
  40f7dd:	mov    eax,ds:0xa1a1a1a1
  40f7e2:	mov    eax,ds:0xa1a1a1a1
  40f7e7:	mov    eax,ds:0x582e57a1
  40f7ec:	adc    eax,DWORD PTR [ebx+0x37]
  40f7ef:	inc    ebx
  40f7f0:	and    al,0x43
  40f7f2:	adc    ebx,DWORD PTR [eax+0x5f]
  40f7f5:	and    al,0x1
  40f7f7:	mov    eax,ds:0xa1a1a1a1
  40f7fc:	mov    eax,ds:0xa1a1a1a1
  40f801:	mov    eax,ds:0xa1a1a1a1
  40f806:	mov    eax,ds:0x4b82a1a1
  40f80b:	fs push cs
  40f80d:	sub    al,0x6b
  40f80f:	lea    ebx,[ebx+0x65200e2c]
  40f815:	and    BYTE PTR [eax-0x5e5e5e5f],0xa1
  40f81c:	mov    eax,ds:0xa1a1a1a1
  40f821:	mov    eax,ds:0xa1a1a1a1
  40f826:	mov    eax,ds:0x82a1a1a1
  40f82b:	and    DWORD PTR [edi+0x7e],esi
  40f82e:	adc    BYTE PTR [esi],bl
  40f830:	push   esi
  40f831:	sub    ebx,DWORD PTR [edi]
  40f833:	cmp    esi,DWORD PTR [ebx+0x6e]
  40f836:	mov    eax,ds:0xa1a1a1a1
  40f83b:	mov    eax,ds:0xa1a1a1a1
  40f840:	mov    eax,ds:0xa1a1a1a1
  40f845:	mov    eax,ds:0xa1a1a1a1
  40f84a:	cmp    eax,0x3435803d
  40f84f:	adc    al,0x2d
  40f851:	sbb    DWORD PTR [ecx],ebx
  40f853:	sbb    eax,0xa1a13d3d
  40f858:	mov    eax,ds:0xa1a1a1a1
  40f85d:	mov    eax,ds:0xa1a1a1a1
  40f862:	mov    eax,ds:0xa1a1a1a1
  40f867:	mov    eax,ds:0x7272a1a1
  40f86c:	adc    eax,0x33453523
  40f871:	daa    
  40f872:	daa    
  40f873:	xor    BYTE PTR [edx+0x72],0xa1
  40f877:	mov    eax,ds:0xa1a1a1a1
  40f87c:	mov    eax,ds:0xa1a1a1a1
  40f881:	mov    eax,ds:0xa1a1a1a1
  40f886:	mov    eax,ds:0xa1a1a1a1
  40f88b:	pop    ss
  40f88c:	das    
  40f88d:	and    esi,DWORD PTR ds:0x863a1945
  40f893:	inc    esi
  40f894:	pop    ss
  40f895:	mov    eax,ds:0xa1a1a1a1
  40f89a:	mov    eax,ds:0xa1a1a1a1
  40f89f:	mov    eax,ds:0xa1a1a1a1
  40f8a4:	mov    eax,ds:0xa1a1a1a1
  40f8a9:	mov    eax,ds:0x52f84a1
  40f8ae:	xor    eax,0x863a1945
  40f8b3:	dec    ebp
  40f8b4:	test   BYTE PTR [ecx-0x5e5e5e5f],ah
  40f8ba:	mov    eax,ds:0xa1a1a1a1
  40f8bf:	mov    eax,ds:0xa1a1a1a1
  40f8c4:	mov    eax,ds:0xa1a1a1a1
  40f8c9:	mov    eax,ds:0x238b84a1
  40f8ce:	adc    al,0x14
  40f8d0:	sbb    DWORD PTR [edx],edi
  40f8d2:	xor    ecx,DWORD PTR [esi-0x5e5e5e7c]
  40f8d8:	mov    eax,ds:0xa1a1a1a1
  40f8dd:	mov    eax,ds:0xa1a1a1a1
  40f8e2:	mov    eax,ds:0xa1a1a1a1
  40f8e7:	mov    eax,ds:0xa1a1a1a1
  40f8ec:	add    al,0x7b
  40f8ee:	push   esi
  40f8ef:	ins    BYTE PTR es:[edi],dx
  40f8f0:	dec    ecx
  40f8f1:	inc    edi
  40f8f2:	sub    BYTE PTR [ecx-0x5e5e5e5f],cl
  40f8f8:	mov    eax,ds:0xa1a1a1a1
  40f8fd:	mov    eax,ds:0xa1a1a1a1
  40f902:	mov    eax,ds:0xa1a1a1a1
  40f907:	mov    eax,ds:0xa1a1a1a1
  40f90c:	pop    eax
  40f90d:	xor    BYTE PTR [ecx],ch
  40f90f:	aas    
  40f910:	jl     0x40f89f
  40f912:	jno    0x40f944
  40f914:	mov    eax,ds:0xa1a1a1a1
  40f919:	mov    eax,ds:0xa1a1a1a1
  40f91e:	mov    eax,ds:0xa1a1a1a1
  40f923:	mov    eax,ds:0xa1a1a1a1
  40f928:	mov    eax,ds:0x58a1a1a1
  40f92d:	inc    ebx
  40f92e:	pop    es
  40f92f:	sub    DWORD PTR [edi],eax
  40f931:	inc    ebx
  40f932:	pop    eax
  40f933:	inc    ebx
  40f934:	mov    eax,ds:0xa1a1a1a1
  40f939:	mov    eax,ds:0xa1a1a1a1
  40f93e:	mov    eax,ds:0xa1a1a1a1
  40f943:	mov    eax,ds:0xa1a1a1a1
  40f948:	mov    eax,ds:0x65a1a1a1
  40f94d:	outs   dx,BYTE PTR ds:[esi]
  40f94e:	sub    DWORD PTR [ecx+ebp*1-0x5e91d687],ebx
  40f955:	mov    eax,ds:0xa1a1a1a1
  40f95a:	mov    eax,ds:0xa1a1a1a1
  40f95f:	mov    eax,ds:0xa1a1a1a1
  40f964:	mov    eax,ds:0xa1a1a1a1
  40f969:	mov    eax,ds:0x58a1a1a1
  40f96e:	pop    es
  40f96f:	sub    DWORD PTR [edi],eax
  40f971:	inc    ebx
  40f972:	dec    edx
  40f973:	mov    eax,ds:0xa1a1a1a1
  40f978:	mov    eax,ds:0xa1a1a1a1
  40f97d:	mov    eax,ds:0xa1a1a1a1
  40f982:	mov    eax,ds:0xa1a1a1a1
  40f987:	mov    eax,ds:0xa1a1a1a1
  40f98c:	mov    eax,ds:0x7c3f7c06
  40f991:	sub    al,0x6e
  40f993:	mov    eax,ds:0xa1a1a1a1
  40f998:	mov    eax,ds:0xa1a1a1a1
  40f99d:	mov    eax,ds:0xa1a1a1a1
  40f9a2:	mov    eax,ds:0xa1a1a1a1
  40f9a7:	mov    eax,ds:0xa1a1a1a1
  40f9ac:	mov    eax,ds:0x8a8a8a4f
  40f9b1:	mov    cl,BYTE PTR [edi-0x5f]
  40f9b4:	mov    eax,ds:0xa1a1a1a1
  40f9b9:	mov    eax,ds:0xa1a1a1a1
  40f9be:	mov    eax,ds:0xa1a1a1a1
  40f9c3:	mov    eax,ds:0xa1a1a1a1
  40f9c8:	mov    eax,ds:0xa1a1a1a1
  40f9cd:	mov    eax,ds:0x3596454f
  40f9d2:	mov    eax,ds:0xa1a1a1a1
  40f9d7:	mov    eax,ds:0xa1a1a1a1
  40f9dc:	mov    eax,ds:0xa1a1a1a1
  40f9e1:	mov    eax,ds:0xa1a1a1a1
  40f9e6:	mov    eax,ds:0xa1a1a1a1
  40f9eb:	mov    eax,ds:0x1915a1a1
  40f9f0:	cmp    ch,BYTE PTR [edi]
  40f9f2:	mov    eax,ds:0xa1a1a1a1
  40f9f7:	mov    eax,ds:0xa1a1a1a1
  40f9fc:	mov    eax,ds:0xa1a1a1a1
  40fa01:	mov    eax,ds:0xa1a1a1a1
  40fa06:	mov    eax,ds:0xa1a1a1a1
  40fa0b:	mov    eax,ds:0x1902a1a1
  40fa10:	inc    esp
  40fa11:	add    ah,BYTE PTR [ecx-0x5e5e5e5f]
  40fa17:	mov    eax,ds:0xa1a1a1a1
  40fa1c:	mov    eax,ds:0xa1a1a1a1
  40fa21:	mov    eax,ds:0xa1a1a1a1
  40fa26:	mov    eax,ds:0xa1a1a1a1
  40fa2b:	mov    eax,ds:0x2a1a1a1
  40fa30:	add    ah,BYTE PTR [ecx-0x5e5e5e5f]
  40fa36:	mov    eax,ds:0xa1a1a1a1
  40fa3b:	mov    eax,ds:0xa1a1a1a1
  40fa40:	mov    eax,ds:0xa1a1a1a1
  40fa45:	mov    eax,ds:0xa1a1a1a1
  40fa4a:	mov    eax,ds:0xa1a1a1a1
  40fa4f:	mov    eax,ds:0xa1a1a1a1
  40fa54:	mov    eax,ds:0xa1a1a1a1
  40fa59:	mov    eax,ds:0xa1a1a1a1
  40fa5e:	mov    eax,ds:0xffffffa1
  40fa63:	(bad)  
  40fa64:	(bad)  
  40fa65:	(bad)  
  40fa66:	(bad)  
  40fa67:	(bad)  
  40fa68:	(bad)  
  40fa69:	(bad)  
  40fa6a:	(bad)  
  40fa6b:	jmp    eax
  40fa6d:	add    BYTE PTR [eax],al
  40fa6f:	pop    es
  40fa70:	loopne 0x40fa72
  40fa72:	add    BYTE PTR [edi],al
  40fa74:	loopne 0x40fa76
  40fa76:	add    BYTE PTR [edi],al
  40fa78:	lock add BYTE PTR [eax],al
  40fa7b:	psubb  mm0,QWORD PTR [eax]
  40fa7e:	add    BYTE PTR [edi],bl
  40fa80:	cld    
  40fa81:	add    BYTE PTR [eax],al
  40fa83:	aas    
  40fa84:	inc    BYTE PTR [eax]
  40fa86:	add    BYTE PTR [edi-0x1],bh
  40fa89:	add    BYTE PTR [eax],al
  40fa8b:	(bad)  
  40fa8c:	inc    DWORD PTR [eax-0x7f0000ff]
  40fa92:	add    edi,edi
  40fa94:	inc    DWORD PTR [eax-0x3f0000ff]
  40fa9a:	add    edi,edi
  40fa9c:	inc    eax
  40fa9e:	add    edi,edi
  40faa0:	inc    eax
  40faa2:	add    edi,edi
  40faa4:	jmp    eax
  40faa6:	pop    es
  40faa7:	(bad)  
  40faa8:	jmp    eax
  40faaa:	pop    es
  40faab:	(bad)  
  40faac:	jmp    eax
  40faae:	pop    es
  40faaf:	(bad)  
  40fab0:	push   eax
  40fab2:	ud0    edi,edi
  40fab5:	lock ud0 edi,edi
  40fab9:	lock ud0 edi,edi
  40fabd:	lock ud0 edi,edi
  40fac1:	clc    
  40fac2:	pop    ds
  40fac3:	(bad)  
  40fac4:	(bad)  
  40fac5:	clc    
  40fac6:	pop    ds
  40fac7:	(bad)  
  40fac8:	(bad)  
  40fac9:	clc    
  40faca:	pop    ds
  40facb:	(bad)  
  40facc:	(bad)  
  40facd:	cld    
  40face:	aas    
  40facf:	(bad)  
  40fad0:	(bad)  
  40fad1:	cld    
  40fad2:	aas    
  40fad3:	(bad)  
  40fad4:	(bad)  
  40fad5:	cld    
  40fad6:	aas    
  40fad7:	(bad)  
  40fad8:	(bad)  
  40fad9:	(bad)  
  40fada:	jg     0x40fadb
  40fadc:	(bad)  
  40fadd:	(bad)  
  40fade:	(bad)  
  40fadf:	jmp    FWORD PTR [eax]
  40fae1:	add    BYTE PTR [eax],al
  40fae3:	add    BYTE PTR [eax],dl
  40fae5:	add    BYTE PTR [eax],al
  40fae7:	add    BYTE PTR [eax],ah
  40fae9:	add    BYTE PTR [eax],al
  40faeb:	add    BYTE PTR [ecx],al
  40faed:	add    BYTE PTR [eax],cl
  40faef:	add    BYTE PTR [eax],al
  40faf1:	add    BYTE PTR [eax],al
  40faf3:	add    BYTE PTR [eax],al
  40faf5:	add    DWORD PTR [eax],eax
	...
  40faff:	add    BYTE PTR [eax],al
  40fb01:	add    DWORD PTR [eax],eax
  40fb03:	add    BYTE PTR [eax],al
  40fb05:	add    DWORD PTR [eax],eax
  40fb07:	add    BYTE PTR [esi],cl
  40fb09:	inc    esi
  40fb0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb0b:	add    BYTE PTR [edx-0x6e],ah
  40fb0e:	retf   0x5e00
  40fb11:	mov    es,edx
  40fb13:	add    BYTE PTR [edx],bl
  40fb15:	mov    edx,0xbac600fe
  40fb1a:	scas   al,BYTE PTR es:[edi]
  40fb1b:	add    BYTE PTR [edx],al
  40fb1d:	push   0xffffffe6
  40fb1f:	add    dh,cl
  40fb21:	into   
  40fb22:	mov    BYTE PTR [eax],0x22
  40fb25:	jle    0x40fb09
  40fb27:	add    BYTE PTR [edx],al
  40fb29:	pop    edx
  40fb2a:	(bad)  
  40fb2b:	add    BYTE PTR [edx-0x6a],dh
  40fb2e:	ret    0x200
  40fb31:	jbe    0x40fb21
  40fb33:	add    BYTE PTR [edx-0x1dff3542],dh
  40fb39:	fcmove st,st(6)
  40fb3b:	add    BYTE PTR [edx],al
  40fb3d:	pop    esi
  40fb3e:	loop   0x40fb40
  40fb40:	add    dh,BYTE PTR [edx-0x1a]
  40fb43:	add    BYTE PTR [edx],bl
  40fb45:	scas   al,BYTE PTR es:[edi]
  40fb46:	inc    BYTE PTR [eax]
  40fb48:	add    cl,BYTE PTR [esi-0x4d41ff06]
  40fb4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb4f:	add    BYTE PTR [edx],al
  40fb51:	ds mov edx,0xced6de00
  40fb57:	add    BYTE PTR [edx],al
  40fb59:	xchg   edx,eax
  40fb5a:	cli    
  40fb5b:	add    dl,cl
  40fb5d:	mov    dl,0x0
  40fb60:	add    ch,BYTE PTR [edx-0x12]
  40fb63:	add    dh,dl
  40fb65:	rol    dh,cl
  40fb67:	add    BYTE PTR [edx],al
  40fb69:	jle    0x40fb61
  40fb6b:	add    BYTE PTR [edx],al
  40fb6d:	(bad)  
  40fb6e:	(bad)  
  40fb6f:	add    dh,al
  40fb71:	retf   0xce
  40fb74:	add    ah,BYTE PTR [esi-0x1a]
  40fb77:	add    BYTE PTR [edx+0x200cab6],bl
  40fb7d:	outs   dx,BYTE PTR ds:[esi]
  40fb7e:	out    0x0,al
  40fb80:	add    bh,BYTE PTR [edx-0xe]
  40fb83:	add    BYTE PTR [edx-0x1dff253e],ch
  40fb89:	(bad)  
  40fb8b:	add    BYTE PTR [edx],al
  40fb8d:	jb     0x40fb7d
  40fb8f:	add    BYTE PTR [edx],al
  40fb91:	inc    esi
  40fb92:	mov    edx,0xfe9e1a00
  40fb97:	add    BYTE PTR [edx],al
  40fb99:	jle    0x40fb95
  40fb9b:	add    BYTE PTR [esi],cl
  40fb9d:	dec    esi
  40fb9e:	mov    dl,0x0
  40fba0:	sbb    bh,BYTE PTR [esi-0x3d31ff02]
  40fba6:	mov    dl,0x0
  40fba8:	add    ch,BYTE PTR [edx-0x16]
  40fbab:	add    dh,dl
  40fbad:	into   
  40fbae:	mov    BYTE PTR [eax],0x2
  40fbb1:	pop    edx
  40fbb2:	fiadd  DWORD PTR [eax]
  40fbb4:	jbe    0x40fb58
  40fbb6:	retf   0xe00
  40fbb9:	jbe    0x40fba9
  40fbbb:	add    BYTE PTR [esi-0x19ff313e],dh
  40fbc1:	(bad)  
  40fbc3:	add    BYTE PTR [edx],al
  40fbc5:	(bad)  
  40fbc7:	add    BYTE PTR [edx],bl
  40fbc9:	mov    dh,0xfe
  40fbcb:	add    BYTE PTR [edx],ch
  40fbcd:	mov    gs,edx
  40fbcf:	add    dl,al
  40fbd1:	mov    dh,0xa6
  40fbd3:	add    dl,dl
  40fbd5:	retf   0xbe
  40fbd8:	fcmovbe st,st(2)
  40fbda:	retf   0xe00
  40fbdd:	xor    dl,0x0
  40fbe0:	add    ah,BYTE PTR [esi-0x22]
  40fbe3:	add    BYTE PTR [edx],al
  40fbe5:	jmp    0xcab6:0x9e00
  40fbeb:	add    BYTE PTR [edx],al
  40fbed:	jb     0x40fbe1
  40fbef:	add    BYTE PTR [edx],al
  40fbf1:	dec    edx
  40fbf2:	ret    0x1a00
  40fbf5:	mov    ds:0xfe,al
	...
  40ff06:	add    BYTE PTR [eax],al
  40ff08:	cmp    al,0x3c
  40ff0a:	cmp    bh,BYTE PTR [edx]
  40ff0c:	cmp    bh,BYTE PTR [edx]
  40ff0e:	cmp    bh,BYTE PTR [edx]
  40ff10:	cmp    bh,BYTE PTR [edx]
  40ff12:	cmp    bh,BYTE PTR [edx]
  40ff14:	cmp    bh,BYTE PTR [edx]
  40ff16:	cmp    al,0x3c
  40ff18:	cmp    al,0x26
  40ff1a:	xor    BYTE PTR [eax],dh
  40ff1c:	mov    db4,ebx
  40ff1f:	and    esp,DWORD PTR [ebx]
  40ff21:	cmp    edi,DWORD PTR [ebx]
  40ff23:	lsl    esp,WORD PTR [esi]
  40ff26:	es cmp al,0x3c
  40ff29:	adc    BYTE PTR [eax],dl
  40ff2b:	adc    BYTE PTR [edx],cl
  40ff2d:	add    eax,0x2116371b
  40ff32:	or     bl,BYTE PTR [esi]
  40ff34:	adc    BYTE PTR [eax],dl
  40ff36:	adc    BYTE PTR [esp+edi*1],bh
  40ff39:	cmp    al,0x36
  40ff3b:	cmp    ch,BYTE PTR ss:[edx]
  40ff3e:	das    
  40ff3f:	sbb    esp,DWORD PTR [ecx]
  40ff41:	and    DWORD PTR ds:0x3c361922,ecx
  40ff47:	cmp    al,0x3c
  40ff49:	cmp    al,0x3c
  40ff4b:	or     BYTE PTR ds:0x2d0b3801,ah
  40ff51:	sbb    al,0x2
  40ff53:	add    BYTE PTR [edx],dl
  40ff55:	cmp    al,0x3c
  40ff57:	cmp    al,0x3c
  40ff59:	cmp    al,0x3c
  40ff5b:	cmp    al,0x25
  40ff5d:	daa    
  40ff5e:	sub    DWORD PTR [edi],edx
  40ff60:	pop    ss
  40ff61:	xor    esi,DWORD PTR [edx]
  40ff63:	and    eax,0x3c3c3c3c
  40ff68:	cmp    al,0x3c
  40ff6a:	cmp    al,0x3c
  40ff6c:	cmp    al,0x27
  40ff6e:	push   es
  40ff6f:	sbb    bl,BYTE PTR [edx]
  40ff71:	adc    eax,0x3c3c3c27
  40ff76:	cmp    al,0x3c
  40ff78:	cmp    al,0x3c
  40ff7a:	cmp    al,0x3c
  40ff7c:	cmp    al,0x7
  40ff7e:	pop    es
  40ff7f:	sub    al,0x35
  40ff81:	pop    es
  40ff82:	pop    es
  40ff83:	cmp    al,0x3c
  40ff85:	cmp    al,0x3c
  40ff87:	cmp    al,0x3c
  40ff89:	cmp    al,0x3c
  40ff8b:	cmp    al,0x3c
  40ff8d:	and    DWORD PTR ds:0x210a1839,ebx
  40ff93:	cmp    al,0x3c
  40ff95:	cmp    al,0x3c
  40ff97:	cmp    al,0x3c
  40ff99:	cmp    al,0x3c
  40ff9b:	cmp    al,0x3c
  40ff9d:	cmp    al,0x5
  40ff9f:	cmp    DWORD PTR [eax],ebx
  40ffa1:	add    eax,0x3c3c3c3c
  40ffa6:	cmp    al,0x3c
  40ffa8:	cmp    al,0x3c
  40ffaa:	cmp    al,0x3c
  40ffac:	cmp    al,0x3c
  40ffae:	sub    ebx,DWORD PTR [edi]
  40ffb0:	pop    ds
  40ffb1:	or     DWORD PTR [esp+edi*1],edi
  40ffb4:	cmp    al,0x3c
  40ffb6:	cmp    al,0x3c
  40ffb8:	cmp    al,0x3c
  40ffba:	cmp    al,0x3c
  40ffbc:	cmp    al,0x3c
  40ffbe:	add    al,0x2e
  40ffc0:	or     al,0x11
  40ffc2:	cmp    al,0x3c
  40ffc4:	cmp    al,0x3c
  40ffc6:	cmp    al,0x3c
  40ffc8:	cmp    al,0x3c
  40ffca:	cmp    al,0x3c
  40ffcc:	cmp    al,0x3c
  40ffce:	xor    DWORD PTR [eax],esp
  40ffd0:	adc    esi,DWORD PTR [ecx]
  40ffd2:	cmp    al,0x3c
  40ffd4:	cmp    al,0x3c
  40ffd6:	cmp    al,0x3c
  40ffd8:	cmp    al,0x3c
  40ffda:	cmp    al,0x3c
  40ffdc:	cmp    al,0x3c
  40ffde:	cmp    al,0x31
  40ffe0:	xor    DWORD PTR [esp+edi*1],edi
  40ffe3:	cmp    al,0x3c
  40ffe5:	cmp    al,0x3c
  40ffe7:	cmp    al,0x3c
  40ffe9:	cmp    al,0x3c
  40ffeb:	cmp    al,0x3c
  40ffed:	cmp    al,0x3c
  40ffef:	push   cs
  40fff0:	push   cs
  40fff1:	cmp    al,0x3c
  40fff3:	cmp    al,0x3c
  40fff5:	cmp    al,0x3c
  40fff7:	cmp    al,0x3c
  40fff9:	cmp    al,0x3c
  40fffb:	cmp    al,0x3c
  40fffd:	cmp    al,0x3c
  40ffff:	cmp    al,0x3c
  410001:	cmp    al,0x3c
  410003:	cmp    al,0x3c
  410005:	cmp    al,0x3c
  410007:	cmp    al,0xc0
  410009:	add    eax,DWORD PTR [eax]
  41000b:	add    BYTE PTR [eax-0x7fffffff],al
  410011:	add    DWORD PTR [eax],eax
  410013:	add    al,al
  410015:	add    eax,DWORD PTR [eax]
  410017:	add    al,ah
  410019:	pop    es
  41001a:	add    BYTE PTR [eax],al
  41001c:	lock sldt WORD PTR [eax]
  410020:	clc    
  410021:	pop    ds
  410022:	add    BYTE PTR [eax],al
  410024:	clc    
  410025:	pop    ds
  410026:	add    BYTE PTR [eax],al
  410028:	clc    
  410029:	pop    ds
  41002a:	add    BYTE PTR [eax],al
  41002c:	cld    
  41002d:	aas    
  41002e:	add    BYTE PTR [eax],al
  410030:	cld    
  410031:	aas    
  410032:	add    BYTE PTR [eax],al
  410034:	cld    
  410035:	aas    
  410036:	add    BYTE PTR [eax],al
  410038:	cld    
  410039:	aas    
  41003a:	add    BYTE PTR [eax],al
  41003c:	(bad)  
  41003d:	jg     0x41003f
  41003f:	add    dh,bh
  410041:	jg     0x410043
  410043:	add    bh,bh
  410045:	inc    DWORD PTR [eax]
  410047:	add    BYTE PTR [ecx+0xd474e50],cl
  41004d:	or     bl,BYTE PTR [edx]
  41004f:	or     al,BYTE PTR [eax]
  410051:	add    BYTE PTR [eax],al
  410053:	or     eax,0x52444849
  410058:	add    BYTE PTR [eax],al
  41005a:	add    DWORD PTR [eax],eax
  41005c:	add    BYTE PTR [eax],al
  41005e:	add    DWORD PTR [eax],eax
  410060:	or     BYTE PTR [esi],al
  410062:	add    BYTE PTR [eax],al
  410064:	add    BYTE PTR [edx+esi*2-0x58],bl
  410068:	data16 add BYTE PTR [eax],al
  41006b:	and    BYTE PTR [eax],al
  41006d:	dec    ecx
  41006e:	inc    esp
  41006f:	inc    ecx
  410070:	push   esp
  410071:	js     0x41000f
  410073:	in     al,dx
  410074:	mov    ebp,0x596c9079
  410079:	pop    esi
  41007a:	fcomip st,st(7)
  41007c:	cmp    DWORD PTR [edi-0x31],esi
  41007f:	fwait
  410080:	sti    
  410081:	push   edx
  410082:	pop    ecx
  410083:	sti    
  410084:	pop    esi
  410085:	cmc    
  410086:	mov    dh,0x7e
  410088:	(bad)  [edi-0x17]
  41008b:	out    dx,al
  41008c:	jmp    0x671f9a2f
  410091:	xor    DWORD PTR [ebx-0x6f7fcccc],esi
  410097:	mov    WORD PTR ds:0x450b1b6,ds
  41009d:	or     al,BYTE PTR [edi]
  41009f:	sub    DWORD PTR ds:0x92c0a487,0x8b09b25
  4100a9:	pop    es
  4100aa:	add    cl,BYTE PTR [ebp-0x4f7f0f7f]
  4100b0:	shl    BYTE PTR [edx+0x11],0x21
  4100b4:	cmp    eax,DWORD PTR [esi+ebx*1]
  4100b7:	arpl   WORD PTR [ebx],cx
  4100b9:	sbb    DWORD PTR [esi+eax*4],eax
  4100bc:	xor    BYTE PTR [eax],dh
  4100be:	int3   
  4100bf:	ret    0xf4f4
  4100c2:	cli    
  4100c3:	(bad)  
  4100c4:	pop    edx
  4100c5:	pop    edi
  4100c6:	in     eax,dx
  4100c7:	imul   edx,DWORD PTR [esi+0x66],0x56
  4100cb:	out    dx,al
  4100cc:	retf   
  4100cd:	pop    ebp
  4100ce:	cld    
  4100cf:	(bad)  
  4100d0:	mov    ebp,0x6b5f3337
  4100d5:	nop
  4100d6:	add    cl,ch
  4100d8:	jnp    0x410089
  4100da:	fisub  WORD PTR [ebx-0x14ddc811]
  4100e0:	push   esi
  4100e1:	out    0x5d,al
  4100e3:	repnz sahf 
  4100e5:	jae    0x4100d9
  4100e7:	idiv   ebp
  4100e9:	lods   eax,DWORD PTR ds:[esi]
  4100ea:	out    0x5c,eax
  4100ec:	or     BYTE PTR [ecx],dl
  4100ee:	and    al,BYTE PTR [eax+ecx*4+0x10]
  4100f2:	and    DWORD PTR [edx-0x7c],eax
  4100f5:	or     BYTE PTR [ecx],dl
  4100f7:	and    al,BYTE PTR [eax+ecx*4+0x10]
  4100fb:	and    DWORD PTR [edx+0x7c],eax
  4100fe:	adc    BYTE PTR [eax],ah
  410100:	into   
  410101:	cli    
  410102:	push   es
  410103:	inc    edx
  410104:	cmp    al,0x1c
  410106:	cld    
  410107:	into   
  410108:	ja     0x4100cf
  41010a:	je     0x410155
  41010c:	xchg   edi,eax
  41010d:	out    0x9d,al
  41010f:	pop    edx
  410110:	imul   DWORD PTR [ecx]
  410112:	pop    ecx
  410113:	mov    ah,0xc6
  410115:	nop
  410116:	adc    al,bl
  410118:	mov    cl,0xb1
  41011a:	dec    esp
  41011b:	fisubr DWORD PTR [edx+0x76ac24ee]
  410121:	aaa    
  410122:	jmp    0x2421:0x8dae9858
  410129:	cmp    al,BYTE PTR [edx-0x5f]
  41012c:	sub    DWORD PTR [ebx-0x7276aaae],ebp
  410132:	(bad)  
  410133:	jmp    0x1e9c:0xeb92b547
  41013a:	retf   
  41013b:	pop    edx
  41013c:	jl     0x41014d
  41013e:	lds    ebx,FWORD PTR [ebp+0x56]
  410141:	mov    ds:0xfb1f3bd9,al
  410146:	xchg   ebp,eax
  410147:	int    0xfa
  410149:	pop    ecx
  41014a:	mov    bh,0x27
  41014c:	vpermil2ps xmm0,xmm7,XMMWORD PTR [eax],xmm7,0xf
  410152:	shl    eax,0x3b
  410155:	fbstp  TBYTE PTR [edi]
  410157:	je     0x4101b6
  410159:	in     eax,dx
  41015a:	push   esp
  41015b:	call   FWORD PTR [edx+0x529fba26]
  410161:	push   ebp
  410162:	addr16 push esp
  410164:	push   ss
  410165:	inc    esp
  410166:	test   esp,esp
  410168:	or     BYTE PTR [ebx],0xb6
  41016b:	add    eax,0x70170242
  410170:	pop    ebp
  410171:	out    dx,eax
  410172:	jg     0x41013b
  410174:	test   dh,0x73
  410177:	sbb    eax,0xa102c70
  41017c:	mov    eax,0xe05b1c02
  410181:	inc    eax
  410182:	(bad)  
  410183:	mov    dh,0x95
  410185:	and    edx,DWORD PTR [edi+0x31]
  410188:	mov    esi,0x7e35acdc
  41018d:	in     eax,0xf3
  41018f:	mov    edi,0x99deff67
  410194:	ss les eax,FWORD PTR cs:[ebx]
  410198:	inc    edi
  410199:	dec    eax
  41019a:	add    BYTE PTR [edi-0x7f],bh
  41019d:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41019f:	xlat   BYTE PTR ds:[ebx]
  4101a0:	mov    WORD PTR [edi],ds
  4101a2:	sahf   
  4101a3:	popf   
  4101a4:	call   0x617366a7
  4101a9:	inc    edi
  4101aa:	ins    BYTE PTR es:[edi],dx
  4101ab:	pop    es
  4101ac:	ficomp DWORD PTR [ebp-0x50]
  4101af:	ins    DWORD PTR es:[edi],dx
  4101b0:	out    dx,eax
  4101b1:	in     eax,0xba
  4101b3:	std    
  4101b4:	pop    ss
  4101b5:	fdivr  QWORD PTR [edi-0x2f5b87eb]
  4101bb:	sti    
  4101bc:	fadd   QWORD PTR ds:0x92010804
  4101c2:	add    BYTE PTR [edi-0x5f4912f5],ah
  4101c8:	sub    ah,BYTE PTR [edi+ebx*4-0x2009ad8f]
  4101cf:	cli    
  4101d0:	cld    
  4101d1:	aas    
  4101d2:	ret    
  4101d3:	jns    0x4101c9
  4101d5:	lods   eax,DWORD PTR ds:[esi]
  4101d6:	or     esi,ecx
  4101d8:	xor    BYTE PTR [eax-0x7bf20a64],ah
  4101de:	js     0x410210
  4101e0:	clc    
  4101e1:	cmc    
  4101e2:	out    dx,eax
  4101e3:	int3   
  4101e4:	jle    0x4101d5
  4101e6:	mov    BYTE PTR [edx-0xe],dh
  4101e9:	inc    ebp
  4101ea:	rol    DWORD PTR [eax],cl
  4101ec:	popa   
  4101ed:	inc    ebx
  4101ee:	inc    esp
  4101ef:	test   DWORD PTR [eax+0x640bede1],ebx
  4101f5:	fidiv  DWORD PTR [ecx-0x43]
  4101f8:	xlat   BYTE PTR ds:[ebx]
  4101f9:	sti    
  4101fa:	dec    ecx
  4101fb:	inc    eax
  4101fc:	add    BYTE PTR [eax-0x22],cl
  4101ff:	adc    BYTE PTR ss:[edx-0x1f],bh
  410203:	jp     0x41025b
  410205:	adc    ebp,0x5a0b5681
  41020b:	mov    dl,0x8b
  41020d:	pop    ebp
  41020e:	mov    ch,0xff
  410210:	jmp    0x4101b5
  410212:	jge    0x4101b7
  410214:	add    ch,BYTE PTR [ebp+0xde47d1f]
  41021a:	or     al,0xf1
  41021c:	push   eax
  41021d:	adc    BYTE PTR [edx+0x0],bl
  410220:	jg     0x410223
  410222:	lock mov edi,0x4cb9df7d
  410228:	lods   al,BYTE PTR ds:[esi]
  410229:	mov    esp,0xa678cef1
  41022e:	xor    ebp,DWORD PTR [ecx+0x405110ab]
  410234:	push   ebp
  410235:	inc    eax
  410236:	xchg   ebx,eax
  410237:	inc    ecx
  410238:	rol    DWORD PTR [eax-0x6f],1
  41023b:	cmp    al,0xd3
  41023d:	pop    esi
  41023e:	sub    BYTE PTR [eax],ah
  410240:	leave  
  410241:	js     0x410205
  410243:	out    dx,al
  410244:	or     edi,DWORD PTR [edx+ebp*4]
  410247:	idiv   DWORD PTR [edi]
  410249:	mov    ds:0x702c75bf,al
  41024e:	cmp    ah,BYTE PTR [eax-0x49]
  410251:	mov    eax,ds:0xd5a84db
  410256:	push   0xd
  410258:	test   al,0xb7
  41025a:	loope  0x4101fc
  41025c:	test   al,0x74
  41025e:	(bad)  
  41025f:	lds    ecx,FWORD PTR [edi]
  410261:	jge    0x41025b
  410263:	repz aas 
  410265:	not    ebp
  410267:	mov    bh,0xce
  410269:	mov    ah,0xd1
  41026b:	and    DWORD PTR [esi],ebx
  41026d:	or     BYTE PTR [ebx+esi*4-0x20ef7e42],ah
  410274:	ds pushf 
  410276:	push   0xfffffff5
  410278:	xchg   DWORD PTR [ecx+edi*4+0x33],ecx
  41027c:	imul   edi,DWORD PTR [ebx],0x1c76e69e
  410282:	iret   
  410283:	or     cl,BYTE PTR [eax]
  410285:	pop    esi
  410286:	scas   al,BYTE PTR es:[edi]
  410287:	or     eax,0xcffde58
  41028c:	jl     0x4102bc
  41028e:	pop    esp
  41028f:	jg     0x41021c
  410291:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410292:	cmc    
  410293:	add    edi,DWORD PTR [edi]
  410295:	inc    eax
  410296:	sub    BYTE PTR [eax],ah
  410298:	push   esp
  410299:	jg     0x4102c6
  41029b:	sub    DWORD PTR [ecx+eax*4],0xffffffe2
  41029f:	outs   dx,DWORD PTR ds:[esi]
  4102a0:	dec    ebp
  4102a1:	fst    st(2)
  4102a3:	sub    cl,bl
  4102a5:	mov    bh,0xff
  4102a7:	(bad)  
  4102a8:	fnstenv [ebp+0x4483c436]
  4102ae:	dec    eax
  4102af:	add    BYTE PTR [edi+0x38],cl
  4102b2:	jle    0x410299
  4102b4:	das    
  4102b5:	pop    esi
  4102b7:	mov    ch,0x76
  4102b9:	loope  0x4102c2
  4102bb:	lds    edx,FWORD PTR gs:[ebx]
  4102be:	je     0x410297
  4102c0:	test   BYTE PTR [edx*2-0x3f6a3eaa],0xb5
  4102c8:	add    bh,bl
  4102ca:	iret   
  4102cb:	(bad)  
  4102cc:	cmc    
  4102cd:	test   dh,bl
  4102cf:	repz pop es
  4102d1:	call   0xf70309cf
  4102d6:	int    0xfe
  4102d8:	add    BYTE PTR [esp+eax*1],0x3d
  4102dc:	mov    eax,DWORD PTR [eax-0x6e]
  4102df:	jge    0x41034c
  4102e1:	shl    DWORD PTR [edi+0xd],0x34
  4102e5:	or     eax,0xf5f946a4
  4102ea:	pop    edi
  4102eb:	std    
  4102ec:	sahf   
  4102ed:	int3   
  4102ee:	xor    esp,DWORD PTR [edi-0x2b]
  4102f1:	out    0x10,al
  4102f3:	femms  
  4102f5:	and    DWORD PTR [ecx],eax
  4102f7:	cmp    al,0xe1
  4102f9:	mov    al,0x2b
  4102fb:	xchg   ebp,eax
  4102fc:	out    dx,eax
  4102fd:	mov    ch,BYTE PTR [edx]
  4102ff:	(bad)  
  410300:	xchg   esp,eax
  410301:	sub    al,0xf9
  410303:	add    bl,BYTE PTR [edx]
  410305:	add    esp,DWORD PTR [ebx+0x8]
  410308:	xchg   esp,eax
  410309:	cmp    al,0x68
  41030b:	ret    
  41030c:	and    BYTE PTR [edx+0x1e2e71de],ah
  410312:	cmp    DWORD PTR [eax],edi
  410314:	mov    dh,0x67
  410316:	loop   0x4102d3
  410318:	mov    fs,WORD PTR [edi+0x29]
  41031b:	xor    BYTE PTR [edi+0x409f2db5],0x7c
  410322:	sub    eax,DWORD PTR [edx-0x20]
  410325:	pop    es
  410326:	or     eax,0x27c901
  41032b:	lock enter 0xaa25,0xa2
  410330:	imul   esi,DWORD PTR [edx-0x1a],0xd6fa3eaf
  410337:	xchg   BYTE PTR [eax-0x30],bh
  41033a:	or     BYTE PTR [ecx],cl
  41033c:	loopne 0x410347
  41033e:	xchg   esp,ebx
  410340:	push   0x7f
  410342:	mov    edi,0x4048bb2a
  410347:	and    al,0x9
  410349:	jp     0x41031d
  41034b:	dec    ebx
  41034c:	jecxz  0x410357
  41034e:	cmp    al,0x13
  410350:	pop    esi
  410351:	dec    esi
  410352:	xor    DWORD PTR [eax],0xffffffe8
  410355:	imul   edi,DWORD PTR [edi+eiz*4+0x2f],0xffffffcc
  41035a:	inc    edx
  41035b:	clc    
  41035c:	out    dx,al
  41035d:	cmp    edi,0x74141079
  410363:	sub    al,0x7f
  410365:	mov    edi,0x24902b1f
  41036a:	nop
  41036b:	gs nop
  41036d:	adc    eax,0x98886550
  410372:	rcr    dl,1
  410374:	pop    ebx
  410375:	(bad)  
  410376:	fidivr WORD PTR [edi-0x6]
  410379:	stc    
  41037a:	jl     0x410378
  41037c:	adc    DWORD PTR [edi],esi
  41037e:	aaa    
  41037f:	les    eax,FWORD PTR [ebx]
  410381:	inc    esi
  410382:	dec    eax
  410383:	add    BYTE PTR [edi+0x30],cl
  410386:	(bad)  
  410387:	xlat   BYTE PTR ds:[ebx]
  410388:	iret   
  410389:	setg   BYTE PTR [edi]
  41038c:	and    eax,0x24965e7
  410391:	push   ebp
  410392:	repz mov ah,0x3f
  410395:	add    ebx,edx
  410397:	(bad)  [ecx-0xb67210f]
  41039d:	repz jbe 0x410332
  4103a0:	das    
  4103a1:	call   0x80855f88
  4103a6:	std    
  4103a7:	jae    0x41032e
  4103a9:	fsubr  QWORD PTR [edi+0x48f17015]
  4103af:	inc    eax
  4103b0:	xchg   esi,eax
  4103b1:	mov    esp,0xf1782260
  4103b6:	add    BYTE PTR [ebx+0x76],dl
  4103b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4103ba:	pushf  
  4103bb:	jbe    0x4103a0
  4103bd:	push   ebx
  4103be:	movsx  edx,WORD PTR [ebp+0x42261e21]
  4103c5:	add    bh,BYTE PTR [eax-0x7e]
  4103c8:	mov    eax,ds:0x9ad3e23a
  4103cd:	jo     0x4103db
  4103cf:	add    DWORD PTR [eax-0x3075c0ef],ebp
  4103d5:	sub    BYTE PTR [edi],0x8f
  4103d8:	mov    bh,0x95
  4103da:	je     0x41042b
  4103dc:	test   al,0x83
  4103de:	test   DWORD PTR [edx],0x777d4cf
  4103e4:	loop   0x4103e6
  4103e6:	mov    ?,edi
  4103e8:	jg     0x41043a
  4103ea:	sub    esp,DWORD PTR [eax]
  4103ec:	test   bh,ah
  4103ee:	dec    DWORD PTR [ebx+0x52]
  4103f1:	fild   WORD PTR ds:0x9200e208
  4103f7:	add    BYTE PTR [ebp+0x1],cl
  4103fa:	rcl    DWORD PTR [ebp-0x492e0442],1
  410400:	cmp    ah,al
  410402:	add    DWORD PTR [esi+0x48],0x0
  410406:	dec    edi
  410407:	xor    ch,BYTE PTR [edx-0x575d401b]
  41040d:	sahf   
  41040e:	jbe    0x4103e6
  410410:	or     al,0x10
  410412:	mov    esi,0x76fc0f9a
  410417:	mov    al,ds:0xf843d017
  41041c:	ret    0xf4ed
  41041f:	add    eax,0xc1f0d03c
  410424:	popa   
  410425:	sar    DWORD PTR [ecx-0x3a2f5fbf],0x17
  41042c:	jl     0x41046d
  41042e:	sbb    BYTE PTR [eax],ch
  410430:	or     DWORD PTR [edi-0x5],ecx
  410433:	sub    esi,DWORD PTR [edx]
  410435:	sbb    BYTE PTR [edx],bh
  410437:	enter  0xcead,0xa7
  41043b:	jle    0x410430
  41043d:	outs   dx,DWORD PTR ds:[esi]
  41043e:	jl     0x410466
  410440:	repz enter 0x1bda,0xe2
  410445:	and    DWORD PTR [ebx],0x14278024
  41044b:	mov    edi,0x1733bdf4
  410450:	or     al,0xc9
  410452:	mov    edx,0xa8a0c8ae
  410457:	pop    esi
  410458:	aam    0xbf
  41045a:	push   edi
  41045b:	les    edx,FWORD PTR [ebx]
  41045d:	sbb    al,0x14
  41045f:	or     BYTE PTR [edx-0x60],dh
  410462:	jmp    0x9db765e4
  410467:	add    edi,ebx
  410469:	fild   WORD PTR [edi+0x20959e10]
  41046f:	push   es
  410470:	sbb    BYTE PTR [ecx-0x78],al
  410473:	not    DWORD PTR [ecx+0x163f080]
  410479:	jle    0x4104c7
  41047b:	inc    eax
  41047c:	adc    ebp,DWORD PTR [ebp+0x7fdbdedc]
  410482:	hlt    
  410483:	mov    DWORD PTR [edi-0x29],eax
  410486:	jmp    0x3c01:0x211a0f10
  41048d:	mov    eax,ds:0xefc52a70
  410492:	nop
  410493:	pop    ebp
  410494:	sub    esp,DWORD PTR [edx]
  410496:	dec    ecx
  410497:	mov    al,ds:0x7753f41b
  41049c:	mov    ds:0x6083ddaf,al
  4104a1:	pop    ds
  4104a2:	ss mov ebp,0x7305f20
  4104a8:	inc    eax
  4104a9:	enter  0x1503,0x81
  4104ad:	js     0x4104dd
  4104af:	and    BYTE PTR [ebx+0xd],0x58
  4104b3:	add    al,0x1
  4104b5:	and    DWORD PTR [esi+eiz*4],eax
  4104b8:	jg     0x41044a
  4104ba:	adc    al,ah
  4104bc:	daa    
  4104bd:	add    BYTE PTR [ecx],cl
  4104bf:	je     0x4104d6
  4104c1:	test   ch,ch
  4104c3:	jle    0x4104bb
  4104c5:	adc    DWORD PTR [edi],esi
  4104c7:	cmp    eax,0x484403c4
  4104cc:	add    BYTE PTR [edi+0x28],cl
  4104cf:	xor    al,0x94
  4104d1:	iret   
  4104d2:	jmp    0x55d6ac61
  4104d7:	sbb    eax,0x3fb220e4
  4104dc:	loopne 0x41048d
  4104de:	imul   DWORD PTR [eax+eax*1]
  4104e1:	mov    edi,0xac0a4016
  4104e6:	add    esp,edi
  4104e8:	lods   eax,DWORD PTR ds:[esi]
  4104e9:	jg     0x410477
  4104eb:	cmp    edx,DWORD PTR [eax-0x54417fe7]
  4104f1:	sub    bl,0x57
  4104f4:	push   cs
  4104f5:	cli    
  4104f6:	xchg   esi,eax
  4104f7:	test   esp,ebp
  4104f9:	mov    DWORD PTR [ebx],0x405e124
  4104ff:	push   ebp
  410500:	add    eax,0xc4f9d734
  410505:	scas   eax,DWORD PTR es:[edi]
  410506:	push   eax
  410508:	repz mov cl,0x47
  41050b:	fdiv   st,st(4)
  41050d:	adc    BYTE PTR [edi],cl
  41050f:	adc    BYTE PTR [ecx],ah
  410511:	add    DWORD PTR [ecx+eax*4],edi
  410514:	clc    
  410515:	lds    edi,FWORD PTR [edi-0x4ad6c1cc]
  41051b:	retf   
  41051c:	iret   
  41051d:	or     ecx,ebx
  41051f:	dec    ebx
  410520:	retf   
  410521:	sub    DWORD PTR [edx+0x34aaeb27],ebx
  410527:	nop
  410528:	mov    edi,0x3c69fa77
  41052d:	push   es
  41052e:	xor    al,0xfd
  410530:	pusha  
  410531:	sub    al,0x0
  410533:	(bad)  
  410534:	dec    edi
  410535:	sbb    DWORD PTR [edx-0x123f34ff],ecx
  41053b:	iret   
  41053c:	sbb    eax,0x28783f00
  410541:	jnp    0x410569
  410543:	jmp    DWORD PTR [eax-0x5fb75fcb]
  410549:	sub    BYTE PTR [eax],ah
  41054b:	pop    ecx
  41054c:	popf   
  41054d:	mov    edx,ebp
  41054f:	fdivrp st(1),st
  410551:	dec    ebx
  410552:	(bad)  
  410553:	mov    esp,0x103c4213
  410558:	test   BYTE PTR [eax+esi*8],al
  41055b:	add    al,0x42
  41055d:	mov    dh,0x78
  41055f:	dec    ebp
  410560:	jno    0x4104fe
  410562:	xchg   esp,eax
  410563:	and    al,0xbc
  410565:	hlt    
  410566:	pop    edi
  410567:	mov    al,ds:0x42fa1df5
  41056c:	das    
  41056d:	sub    edi,DWORD PTR [eax-0x3e]
  410570:	push   cs
  410571:	std    
  410572:	hlt    
  410573:	sahf   
  410574:	das    
  410575:	mov    esp,0x982e3fc2
  41057a:	add    ah,ah
  41057c:	ror    BYTE PTR [edi-0x7c51fbf5],cl
  410582:	sar    BYTE PTR [edi],0xdf
  410585:	icebp  
  410586:	into   
  410587:	jno    0x410590
  410589:	loop   0x41058b
  41058b:	xor    DWORD PTR [ebp-0x379f3560],0x396d90ae
  410595:	mov    WORD PTR [ebx],es
  410597:	cmp    al,0xa1
  410599:	or     BYTE PTR [ecx],cl
  41059b:	loopne 0x4105e6
  41059d:	inc    esp
  41059e:	lods   eax,DWORD PTR ds:[esi]
  41059f:	(bad)  
  4105a0:	sub    DWORD PTR [ebp-0xb],ecx
  4105a3:	dec    ebp
  4105a4:	icebp  
  4105a5:	add    BYTE PTR [eax],0xf0
  4105a8:	fadd   QWORD PTR [eax+0xc2f7a60]
  4105ae:	dec    esp
  4105af:	in     eax,dx
  4105b0:	mov    ch,0x6
  4105b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105b3:	add    edi,DWORD PTR [ebx]
  4105b5:	std    
  4105b6:	jge    0x4105f9
  4105b8:	cmp    dl,BYTE PTR [eax-0x8]
  4105bb:	fcmovu st,st(7)
  4105bd:	lds    edx,FWORD PTR [ebx]
  4105bf:	je     0x4105c7
  4105c1:	(bad)  
  4105c2:	sbb    eax,0x7ec82b88
  4105c7:	pushf  
  4105c8:	inc    ecx
  4105c9:	mov    ds:0x9888071f,al
  4105ce:	push   eax
  4105cf:	(bad)  
  4105d1:	clc    
  4105d2:	hlt    
  4105d3:	dec    edi
  4105d4:	jg     0x4105fa
  4105d6:	and    DWORD PTR [edi+0x3c4336ff],edi
  4105dc:	dec    BYTE PTR [eax]
  4105de:	or     eax,esp
  4105e0:	or     ebx,eax
  4105e2:	dec    edi
  4105e3:	mov    ebp,0xb345c468
  4105e8:	cld    
  4105e9:	jno    0x410644
  4105eb:	icebp  
  4105ec:	daa    
  4105ed:	call   0x4af1a45a
  4105f2:	dec    BYTE PTR [esi+edi*4-0x3f]
  4105f6:	enter  0x907e,0xca
  4105fa:	sbb    ecx,esp
  4105fc:	cmc    
  4105fd:	or     edi,ebx
  4105ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410600:	subps  xmm0,XMMWORD PTR ds:0xc08193e8
  410607:	mov    edx,DWORD PTR [ebx]
  410609:	add    al,0xd6
  41060b:	sbb    BYTE PTR [eax],0xf8
  41060e:	jne    0x410658
  410610:	xchg   edx,eax
  410611:	lahf   
  410612:	ins    DWORD PTR es:[edi],dx
  410613:	lock mov edi,0x423d9147
  410619:	push   eax
  41061a:	adc    al,0xd0
  41061c:	xor    eax,0xa972c42e
  410621:	stos   DWORD PTR es:[edi],eax
  410622:	movzx  esp,bp
  410625:	and    DWORD PTR [esi],ebx
  410627:	push   es
  410628:	inc    edx
  410629:	add    bh,BYTE PTR [eax-0x3e]
  41062c:	nop
  41062d:	fwait
  41062e:	sahf   
  41062f:	dec    BYTE PTR [eax+0x4911a42a]
  410635:	add    cl,BYTE PTR [ebp-0xb]
  410638:	pop    esp
  410639:	add    BYTE PTR [ebp-0x12],al
  41063c:	fwait
  41063d:	test   BYTE PTR [ecx-0x20b1c4dc],0x64
  410644:	mov    edi,0x670ef96f
  410649:	sar    BYTE PTR [edi+ebx*1-0x6dfde950],0x70
  410651:	sbb    al,0x6f
  410653:	int    0x0
  410655:	cld    
  410656:	repz test al,dh
  410659:	lods   eax,DWORD PTR ds:[esi]
  41065a:	and    BYTE PTR [eax],0x25
  41065d:	call   0xdf5884cd
  410662:	add    dl,BYTE PTR [ecx]
  410664:	mov    al,ds:0xac22b64b
  410669:	cli    
  41066a:	imul   ecx,DWORD PTR [edi+0x1e21f9a0],0x30
  410671:	inc    edx
  410672:	add    bh,BYTE PTR [eax-0x3e]
  410675:	loopne 0x41064b
  410677:	retf   0x571f
  41067a:	adc    eax,0xbfe60447
  41067f:	sub    al,0x7b
  410681:	add    DWORD PTR [ecx],edi
  410683:	imul   esp,DWORD PTR [eax+0x597bf6e],0x3ef2d7c0
  41068d:	add    DWORD PTR [eax],ecx
  41068f:	fist   WORD PTR [edi-0x7b52f989]
  410695:	and    ebx,0xebbeb506
  41069b:	hlt    
  41069c:	add    DWORD PTR [esi+0x40884901],0xfffffff3
  4106a3:	sti    
  4106a4:	fistp  WORD PTR [ecx]
  4106a6:	fs add eax,0xc5da1574
  4106ac:	jp     0x410646
  4106ae:	push   cs
  4106af:	jl     0x4106b3
  4106b1:	adc    DWORD PTR [edx],edx
  4106b3:	rcl    BYTE PTR [ebx],0x84
  4106b6:	lahf   
  4106b7:	(bad)  
  4106b8:	fdivr  QWORD PTR [eax+0x5e4e956c]
  4106be:	push   edi
  4106bf:	push   ebp
  4106c0:	das    
  4106c1:	loop   0x410672
  4106c3:	push   0x607eda78
  4106c8:	gs lahf 
  4106ca:	pusha  
  4106cb:	pop    esi
  4106cc:	jmp    DWORD PTR [eax+0x5a]
  4106cf:	scas   eax,DWORD PTR es:[edi]
  4106d0:	neg    DWORD PTR [esi-0xc]
  4106d3:	dec    ebp
  4106d4:	std    
  4106d5:	sar    DWORD PTR [ebp-0x7f],0x76
  4106d9:	out    dx,eax
  4106da:	lds    eax,FWORD PTR [ebx]
  4106dc:	sub    bl,0xf9
  4106df:	out    dx,al
  4106e0:	inc    edx
  4106e1:	loopne 0x41071d
  4106e3:	add    al,0x33
  4106e5:	push   cs
  4106e6:	pop    es
  4106e7:	pop    ebp
  4106e8:	add    al,0xc5
  4106ea:	mov    bh,0x44
  4106ec:	adc    al,0xd7
  4106ee:	jle    0x4106ee
  4106f0:	lahf   
  4106f1:	inc    eax
  4106f3:	xchg   ebp,eax
  4106f4:	icebp  
  4106f5:	xchg   edx,ebx
  4106f7:	add    DWORD PTR [ecx],esp
  4106f9:	push   ds
  4106fa:	cmp    BYTE PTR [edx+0x2],al
  4106fd:	js     0x410681
  4106ff:	and    BYTE PTR [ebp-0x46],dh
  410702:	dec    edi
  410703:	inc    edi
  410704:	push   esp
  410705:	ja     0x410748
  410707:	or     eax,0x69e6b0b4
  41070c:	loopne 0x41076c
  41070e:	sbb    eax,0x4191e3f
  410713:	imul   edi,DWORD PTR ds:0x6ba014fc,0xbe818ff7
  41071d:	out    dx,eax
  41071e:	pop    ds
  41071f:	pop    eax
  410720:	or     dh,bh
  410722:	xchg   ecx,eax
  410723:	inc    ebp
  410724:	adc    BYTE PTR [edi+0x10],al
  410727:	hlt    
  410728:	dec    edx
  410729:	mov    eax,DWORD PTR [ebx+0xae042cc]
  41072f:	loopne 0x41078c
  410731:	sbb    DWORD PTR [edx-0x5577af41],ecx
  410737:	and    BYTE PTR [ecx],0x75
  41073a:	jecxz  0x4106c3
  41073c:	out    dx,eax
  41073d:	sub    eax,0xf451fc7d
  410742:	inc    ebx
  410743:	mov    BYTE PTR [edi],al
  410745:	xchg   DWORD PTR [eax+0x34209e00],edx
  41074b:	mov    cs,WORD PTR [esi+0x5b0aae3e]
  410751:	psrld  mm7,QWORD PTR [edx+ecx*4-0x16]
  410756:	leave  
  410757:	mov    ds:0x65e8e7e2,eax
  41075c:	test   eax,0xbe0bbe5f
  410761:	cmp    edi,ebp
  410763:	or     edi,DWORD PTR [esi-0x51]
  410766:	idiv   BYTE PTR [edi]
  410768:	fcomp  DWORD PTR [ecx]
  41076a:	cwde   
  41076b:	cli    
  41076c:	mov    ebp,0x81fbfe3f
  410771:	shl    BYTE PTR [ecx-0x70],0xfa
  410775:	adc    eax,edx
  410777:	mov    bl,0xa
  410779:	push   es
  41077a:	dec    ebx
  41077b:	add    DWORD PTR [ebx-0x606dbeb7],0xd015545a
  410785:	or     al,0xf5
  410787:	cmp    ebx,DWORD PTR [esi]
  410789:	dec    ecx
  41078a:	inc    edi
  41078b:	test   BYTE PTR [eax+0x60],bh
  41078e:	or     BYTE PTR [ecx],cl
  410790:	loopne 0x41079b
  410792:	inc    edx
  410793:	xor    bl,BYTE PTR [ecx]
  410795:	std    
  410796:	lods   al,BYTE PTR ds:[esi]
  410797:	in     al,dx
  410798:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410799:	jecxz  0x41080f
  41079b:	fisttp QWORD PTR [edi+0x217dbbfc]
  4107a1:	gs inc eax
  4107a3:	sub    BYTE PTR [ebx+0x33],bh
  4107a6:	add    eax,DWORD PTR [edi]
  4107a8:	add    bh,BYTE PTR [ebp-0x7d]
  4107ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4107ac:	jnp    0x41073e
  4107ae:	repz pop ds
  4107b0:	pop    esp
  4107b1:	sbb    BYTE PTR [eax+esi*8],al
  4107b4:	jle    0x4107c7
  4107b6:	add    edi,DWORD PTR [esi+0x7f]
  4107b9:	(bad)  
  4107ba:	adc    BYTE PTR [edx+0x5a81e0d2],al
  4107c0:	and    BYTE PTR [eax+0x60164838],0xa8
  4107c7:	and    BYTE PTR [ecx-0x63],bl
  4107ca:	xlat   BYTE PTR ds:[ebx]
  4107cb:	mov    esi,0x895f37f4
  4107d0:	ds xchg edx,eax
  4107d2:	into   
  4107d3:	or     cl,dh
  4107d5:	inc    eax
  4107d6:	adc    BYTE PTR [edx],dl
  4107d8:	rcl    BYTE PTR [ebx],0x82
  4107db:	pop    edi
  4107dc:	sti    
  4107dd:	stos   DWORD PTR es:[edi],eax
  4107de:	xchg   edi,eax
  4107df:	es push esp
  4107e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107e2:	jnp    0x410821
  4107e4:	sar    BYTE PTR [esi+0x54af4eaa],1
  4107ea:	mov    bh,0xa7
  4107ec:	stc    
  4107ed:	pop    es
  4107ee:	jae    0x4107e7
  4107f0:	add    DWORD PTR [esi+0x1ffdd7f7],0x6837ee9c
  4107fa:	cli    
  4107fb:	div    DWORD PTR [esp+edi*1]
  4107fe:	hlt    
  4107ff:	push   ss
  410800:	or     BYTE PTR [ecx],dl
  410802:	push   cs
  410803:	mov    ebp,0x3f02122
  410808:	mov    eax,DWORD PTR [ecx-0x6]
  41080b:	push   eax
  41080c:	hlt    
  41080d:	daa    
  41080e:	add    eax,DWORD PTR ds:0xd2f6888b
  410814:	sub    DWORD PTR [esi+0x7b],0xef9be77c
  41081b:	mov    esi,0x253ac8fc
  410820:	les    esi,FWORD PTR [edi-0x61ff6f73]
  410826:	adc    BYTE PTR [esp+ebp*4-0x76534054],bl
  41082d:	outs   dx,BYTE PTR ds:[esi]
  41082e:	pop    edx
  41082f:	xchg   edx,eax
  410830:	std    
  410831:	adc    bl,BYTE PTR [ebp+eiz*8-0x2]
  410835:	cmp    al,0x7d
  410837:	scas   eax,DWORD PTR es:[edi]
  410838:	fimul  DWORD PTR [edi-0x16]
  41083b:	imul   ebp,DWORD PTR [eax+ebx*1+0x8],0xffffffe8
  410840:	or     eax,0xb306ff46
  410845:	add    cl,al
  410847:	call   FWORD PTR ds:[ecx+ecx*2]
  41084b:	add    ah,BYTE PTR [edi+ebx*4+0x38]
  41084f:	ficom  WORD PTR [edi+0x2f]
  410852:	and    al,ch
  410854:	xlat   BYTE PTR ds:[ebx]
  410855:	add    DWORD PTR [ecx+eax*8],eax
  410858:	inc    esi
  410859:	dec    ebp
  41085a:	icebp  
  41085b:	enter  0x9240,0x40
  41085f:	xchg   ebp,eax
  410860:	adc    BYTE PTR [edx+0x20f6bfa6],bh
  410866:	fistp  DWORD PTR ds:0x2422e1e2
  41086c:	and    BYTE PTR [edi],0x4
  41086f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410870:	sub    al,0x7f
  410872:	xchg   DWORD PTR [eax-0x71ed90a4],edx
  410878:	out    0x97,al
  41087a:	add    BYTE PTR [edi],al
  41087c:	or     al,0x80
  41087f:	loopne 0x410864
  410881:	adc    eax,0x1d7e0f3
  410886:	cmp    BYTE PTR [esi],dl
  410888:	add    edx,DWORD PTR [ebp+0x3e]
  41088b:	hlt    
  41088c:	mov    dl,0x6
  41088e:	and    bl,BYTE PTR [eax+0x19]
  410891:	enter  0x9be9,0xf9
  410895:	rcr    DWORD PTR [edx+0x1],0x81
  410899:	pop    ebx
  41089a:	loope  0x4108aa
  41089c:	add    al,0x1
  41089e:	jns    0x4108bf
  4108a0:	xchg   ecx,eax
  4108a1:	or     al,0x2e
  4108a3:	push   cs
  4108a4:	and    dh,al
  4108a6:	mov    dl,0x12
  4108a8:	adc    DWORD PTR [ebx],edx
  4108aa:	fisub  DWORD PTR [edi]
  4108ac:	test   edi,ecx
  4108ae:	cld    
  4108af:	les    esi,FWORD PTR ds:0x9eaefe11
  4108b5:	adc    BYTE PTR [ebx+eax*1-0x681ffb0b],al
  4108bc:	mov    edi,0xb54c5cef
  4108c1:	cmp    ebx,DWORD PTR [edi+0x5b62fc50]
  4108c7:	lds    edi,FWORD PTR [edi-0x64]
  4108ca:	dec    ebx
  4108cb:	nop
  4108cc:	(bad)  
  4108cd:	mov    edi,0x730810f
  4108d2:	adc    eax,DWORD PTR [edx+0x101bbeec]
  4108d8:	or     BYTE PTR [eax+0x7f1afc24],bh
  4108de:	jg     0x41089e
  4108e0:	add    cl,al
  4108e2:	data16 rol BYTE PTR [edx+0x8],1
  4108e6:	bound  eax,QWORD PTR [edi]
  4108e8:	jle    0x410930
  4108ea:	inc    eax
  4108eb:	xchg   edx,eax
  4108ec:	jmp    0xf24f183e
  4108f1:	push   DWORD PTR [edx+0xcc1ddff]
  4108f7:	inc    ecx
  4108f8:	pop    ecx
  4108f9:	add    bl,BYTE PTR [ebp+0x76]
  4108fc:	das    
  4108fd:	inc    esp
  4108fe:	xchg   edx,eax
  4108ff:	leave  
  410900:	jo     0x4108c7
  410902:	loopne 0x41092b
  410904:	add    al,0x21
  410906:	add    DWORD PTR [ecx+eax*1],edi
  410909:	nop
  41090a:	and    al,0xf9
  41090c:	inc    ebx
  41090d:	xchg   edx,eax
  41090e:	jmp    0x41089c
  410910:	retf   
  410911:	jle    0x4108fd
  410913:	dec    ebp
  410914:	xor    edi,edx
  410916:	cmp    BYTE PTR [edi],0x38
  410919:	rol    DWORD PTR [edi+0x7a],0x9f
  41091d:	jbe    0x4108e5
  41091f:	repnz mov ds:0x90b041f7,eax
  410925:	jle    0x4108bd
  410927:	clts   
  410929:	xor    al,BYTE PTR [edx]
  41092b:	add    eax,DWORD PTR [ecx+0x48afbbe]
  410931:	sbb    cl,0x84
  410934:	cmp    BYTE PTR ds:[eax+0x41],0x40
  410939:	add    BYTE PTR [esp+eiz*2],cl
  41093c:	push   ds
  41093d:	test   ah,ah
  41093f:	dec    ebp
  410940:	push   cs
  410941:	shl    BYTE PTR [eax-0x4b],cl
  410944:	les    edx,FWORD PTR [eax-0x2]
  410947:	xchg   ebp,eax
  410948:	xchg   esi,edx
  41094a:	sbb    DWORD PTR [ecx],esp
  41094c:	push   ds
  41094d:	sub    BYTE PTR [edx+0x2],al
  410950:	js     0x410954
  410952:	shr    BYTE PTR ds:0x49a63e17,1
  410958:	mov    dh,0x24
  41095a:	test   BYTE PTR [edi-0x225d7808],dh
  410960:	lahf   
  410961:	scas   al,BYTE PTR es:[edi]
  410962:	mov    ebx,0x9fe7b02f
  410967:	jecxz  0x41094b
  410969:	out    0xff,eax
  41096b:	sub    eax,0x14049bee
  410970:	xor    BYTE PTR [eax+0x7b7d4bf0],al
  410976:	rol    DWORD PTR [eax+0x32000fd],cl
  41097c:	xchg   ebx,eax
  41097d:	test   DWORD PTR [edx-0x7c52f81d],eax
  410983:	pusha  
  410984:	lods   eax,DWORD PTR ds:[esi]
  410985:	shl    al,0x23
  410988:	sbb    DWORD PTR [edi+0x15],0xa89d9038
  41098f:	out    dx,al
  410990:	in     al,dx
  410991:	jle    0x410981
  410993:	popa   
  410994:	test   BYTE PTR [edi-0x78],0x7
  410998:	xchg   DWORD PTR [eax-0x38ce200],edx
  41099e:	out    0xdf,al
  4109a0:	stc    
  4109a1:	mov    ah,0x90
  4109a3:	sbb    ebp,DWORD PTR [ebp-0x6302ab11]
  4109a9:	mov    edi,0xf26e03f0
  4109ae:	mov    al,ds:0xdc2dfe1f
  4109b3:	add    al,ch
  4109b5:	xlat   BYTE PTR ds:[ebx]
  4109b6:	add    DWORD PTR [eax+0x60f7cdf4],edi
  4109bc:	push   cs
  4109bd:	xor    BYTE PTR [ebx],0x40
  4109c0:	sbb    al,0xae
  4109c2:	cmp    edx,DWORD PTR [eax+0x28]
  4109c5:	adc    al,0x14
  4109c7:	add    ecx,edx
  4109c9:	ja     0x4109e4
  4109cb:	push   es
  4109cc:	jmp    0x4109d8
  4109ce:	fadd   QWORD PTR [ecx]
  4109d0:	lea    ebx,[edi]
  4109d2:	xchg   esp,eax
  4109d3:	pop    ds
  4109d4:	pop    es
  4109d5:	dec    edi
  4109d6:	push   cs
  4109d7:	xchg   edx,eax
  4109d8:	and    al,0x2f
  4109da:	cmp    esp,DWORD PTR [ecx]
  4109dc:	cmp    ch,BYTE PTR [ebp-0x2c098119]
  4109e2:	mov    ecx,0x3dd04791
  4109e7:	and    DWORD PTR [esi-0xffb7bb3],edi
  4109ed:	cwde   
  4109ee:	arpl   di,di
  4109f0:	mov    ebp,0xdba24b95
  4109f5:	cmp    BYTE PTR [edi],ch
  4109f7:	stc    
  4109f8:	mov    esi,DWORD PTR [ecx-0x16]
  4109fb:	cli    
  4109fc:	add    BYTE PTR [eax],0xe
  4109ff:	fdiv   st,st(3)
  410a01:	and    DWORD PTR [esi],0x7c
  410a04:	das    
  410a05:	enter  0x3fef,0xe8
  410a09:	add    edi,edi
  410a0b:	in     eax,0xf8
  410a0d:	jmp    0x410a0f
  410a0f:	imul   dl
  410a11:	push   es
  410a12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a13:	jle    0x410a86
  410a15:	push   eax
  410a16:	scas   eax,DWORD PTR es:[edi]
  410a17:	shl    BYTE PTR ds:[edi-0x18500ff4],0x5a
  410a1f:	std    
  410a20:	jge    0x4109a5
  410a22:	push   ebx
  410a23:	add    DWORD PTR [ebx+0x34b280d9],0x60
  410a2a:	add    eax,0xbac1a5f8
  410a2f:	ins    BYTE PTR es:[edi],dx
  410a30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a31:	pushf  
  410a32:	mov    ?,esp
  410a34:	fisub  DWORD PTR [ebx]
  410a36:	jmp    0x242:0x6df10a2
  410a3d:	js     0x410a0b
  410a3f:	push   ecx
  410a40:	lahf   
  410a41:	mov    ecx,0xd748b1fe
  410a46:	mov    cs,WORD PTR [eax-0x72]
  410a49:	pop    edi
  410a4a:	std    
  410a4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a4c:	jnp    0x4109d0
  410a4e:	out    dx,eax
  410a4f:	cmp    BYTE PTR [ebp-0x1],bh
  410a52:	aas    
  410a53:	mov    ah,bl
  410a55:	retf   
  410a56:	rol    DWORD PTR [eax+eiz*1+0x77c51fb9],0xed
  410a5e:	mov    esi,0x5afa0796
  410a63:	aas    
  410a64:	mov    al,dh
  410a66:	(bad)  
  410a68:	push   cs
  410a69:	adc    DWORD PTR [ebp-0x7e],0xffffff83
  410a6d:	push   esi
  410a6e:	test   BYTE PTR [edi],cl
  410a70:	xor    eax,esp
  410a72:	push   0x40
  410a74:	aas    
  410a75:	mov    dh,0x20
  410a77:	dec    ebx
  410a78:	sahf   
  410a79:	inc    ebp
  410a7a:	adc    DWORD PTR [esp+edx*1-0x1e7f8b9c],ebp
  410a81:	cdq    
  410a82:	mov    al,0x2a
  410a84:	lock or DWORD PTR [eax+0x48],eax
  410a88:	add    BYTE PTR [edi-0x50f4a5c7],cl
  410a8e:	mov    esp,0x75f27f2e
  410a93:	mov    ds:0x988551,al
  410a98:	jne    0x410ada
  410a9a:	sti    
  410a9b:	or     eax,DWORD PTR [ecx]
  410a9d:	mov    ds,WORD PTR [edi-0x6f]
  410aa0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410aa1:	test   al,0xf4
  410aa3:	mov    ds:0x9bea92f5,al
  410aa8:	cld    
  410aa9:	or     al,0xf8
  410aab:	out    dx,eax
  410aac:	outs   dx,BYTE PTR ds:[esi]
  410aad:	fistp  WORD PTR [edi+ecx*1+0x5bee7e8a]
  410ab4:	sub    DWORD PTR [eax],ebx
  410ab6:	jp     0x410b07
  410ab8:	adc    al,0xea
  410aba:	sbb    eax,0x88036c14
  410abf:	(bad)  
  410ac0:	ja     0x410ace
  410ac2:	into   
  410ac3:	or     eax,0x7240210
  410ac8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ac9:	push   ss
  410aca:	test   al,0xe
  410acc:	call   0x71e468a0
  410ad1:	in     eax,dx
  410ad2:	jnp    0x410b12
  410ad4:	test   ch,0x5f
  410ad7:	cld    
  410ad8:	mov    ch,0xc8
  410ada:	mov    ds:0xff10a7ea,eax
  410adf:	jle    0x410b31
  410ae1:	into   
  410ae2:	cli    
  410ae3:	push   es
  410ae4:	inc    edx
  410ae5:	cld    
  410ae6:	fprem  
  410ae8:	pop    ebx
  410ae9:	jg     0x410ad2
  410aeb:	out    dx,eax
  410aec:	lea    ebx,[esi]
  410aee:	in     eax,dx
  410aef:	in     eax,dx
  410af0:	aas    
  410af1:	mov    edi,0x611f89f8
  410af6:	jg     0x410ae2
  410af8:	and    eax,0x8aff1b92
  410afd:	mov    eax,0x3d5286b4
  410b02:	inc    eax
  410b03:	fsub   DWORD PTR [eax]
  410b05:	ja     0x410b47
  410b07:	sub    BYTE PTR [eax+0x34],bh
  410b0a:	sub    DWORD PTR cs:[eax+edi*2-0x11],0x4e3bc983
  410b13:	fistp  DWORD PTR [edi+0x13febfe]
  410b19:	pop    eax
  410b1a:	test   BYTE PTR [edi+0x3b],0x70
  410b1e:	pop    ss
  410b1f:	and    al,0xb9
  410b21:	outs   dx,DWORD PTR ds:[esi]
  410b22:	cmp    eax,0x17d83fbc
  410b27:	adc    al,0x5
  410b29:	cmc    
  410b2a:	loop   0x410b31
  410b2c:	add    ebp,ecx
  410b2e:	inc    edx
  410b2f:	xlat   BYTE PTR ds:[ebx]
  410b30:	push   es
  410b31:	leave  
  410b32:	push   es
  410b33:	lds    eax,FWORD PTR [esi]
  410b35:	ret    
  410b36:	xchg   BYTE PTR [esi+0x1c64dd0b],dh
  410b3c:	stc    
  410b3d:	loop   0x410af2
  410b3f:	aam    0x27
  410b41:	pop    edi
  410b42:	rcr    DWORD PTR [esi-0x2116e682],0xe6
  410b49:	push   esp
  410b4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b4b:	jl     0x410b3f
  410b4d:	adc    eax,esp
  410b4f:	nop    DWORD PTR [ecx-0x79]
  410b53:	test   eax,edi
  410b55:	jae    0x410b7a
  410b57:	and    al,0x80
  410b59:	(bad)  
  410b5a:	sbb    BYTE PTR [esi-0x3c],ah
  410b5d:	cld    
  410b5e:	call   0x7687d224
  410b63:	ja     0x410b5a
  410b65:	push   cs
  410b66:	xchg   ecx,eax
  410b67:	les    ebx,FWORD PTR [edi+eax*1]
  410b6a:	mov    bl,0x3f
  410b6c:	dec    eax
  410b6d:	and    DWORD PTR [edx],ecx
  410b6f:	iret   
  410b70:	dec    edi
  410b71:	jmp    0x410b97
  410b73:	push   0xffffffb7
  410b75:	jno    0x410bed
  410b77:	ffreep st(6)
  410b79:	test   al,0xde
  410b7b:	inc    ebp
  410b7c:	push   esp
  410b7d:	(bad)  
  410b7e:	push   eax
  410b7f:	in     al,dx
  410b80:	or     dh,BYTE PTR [edx-0x29]
  410b83:	mov    bl,0x6
  410b85:	lods   al,BYTE PTR ds:[esi]
  410b86:	cs enter 0x4f11,0x58
  410b8b:	lods   eax,DWORD PTR ds:[esi]
  410b8c:	mov    dh,0xaf
  410b8e:	mov    eax,ds:0x203b7015
  410b93:	aam    0xbe
  410b95:	lahf   
  410b96:	out    dx,eax
  410b97:	cmp    BYTE PTR [esi+0x6feb80a5],bl
  410b9d:	xor    edi,0x32
  410ba0:	mov    ebp,0x924c465
  410ba5:	xor    al,0xd9
  410ba7:	cmp    esp,DWORD PTR [edi+0xaeaf1d5]
  410bad:	test   BYTE PTR [edx-0x25d69ddd],ch
  410bb3:	jmp    0xc5b6:0x59baf724
  410bba:	sbb    cl,bl
  410bbc:	sub    ebx,DWORD PTR [edi+0xcf73721]
  410bc2:	(bad)  
  410bc3:	aaa    
  410bc4:	outs   dx,DWORD PTR ds:[esi]
  410bc5:	rcr    DWORD PTR [eax+0x5f],cl
  410bc8:	daa    
  410bc9:	push   ss
  410bca:	lea    ecx,[edx-0x2b]
  410bcd:	outs   dx,BYTE PTR ds:[esi]
  410bce:	sti    
  410bcf:	xor    eax,0xac780242
  410bd4:	adc    DWORD PTR [edx],edx
  410bd6:	shl    BYTE PTR [ebx+0xc],0x45
  410bda:	sar    DWORD PTR [edi],cl
  410bdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410bdd:	sub    ch,BYTE PTR [edx]
  410bdf:	int    0x66
  410be1:	xchg   ebx,eax
  410be2:	stos   DWORD PTR es:[edi],eax
  410be3:	xlat   BYTE PTR ds:[ebx]
  410be4:	scas   al,BYTE PTR es:[edi]
  410be5:	push   edx
  410be6:	test   eax,0xa81c7194
  410beb:	and    eax,0x3f665017
  410bf0:	inc    ebx
  410bf1:	jge    0x410be1
  410bf3:	xchg   esp,eax
  410bf4:	leave  
  410bf5:	mov    eax,ds:0x35c3d518
  410bfa:	mov    dh,0x6f
  410bfc:	std    
  410bfd:	adc    ecx,edx
  410bff:	outs   dx,BYTE PTR ds:[esi]
  410c00:	adc    ecx,0xd2b49344
  410c06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c07:	fstp   TBYTE PTR [eax+eax*1]
  410c0a:	jae    0x410c27
  410c0c:	lds    ebp,FWORD PTR [eax]
  410c0e:	shr    DWORD PTR [ebp-0x6e8bee2b],1
  410c14:	gs fcmovnbe st,st(3)
  410c17:	cli    
  410c18:	mov    dh,0x8d
  410c1a:	rol    BYTE PTR [esi],0x19
  410c1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c1e:	pusha  
  410c1f:	call   0xc82a:0x2ae1229f
  410c26:	sbb    cl,BYTE PTR [esi+0x1a6ae32b]
  410c2c:	push   edx
  410c2d:	and    al,BYTE PTR [edi-0x47]
  410c30:	sbb    esp,DWORD PTR [ebp-0x1696af24]
  410c36:	imul   eax,esi,0x5602fa3e
  410c3c:	ins    BYTE PTR es:[edi],dx
  410c3d:	and    BYTE PTR [edx+0x763e2593],0x91
  410c44:	std    
  410c45:	adc    DWORD PTR [ebx-0x22],0xfffffffd
  410c49:	(bad)  
  410c4a:	pop    ebx
  410c4b:	enter  0x4492,0xc6
  410c4f:	enter  0x71b1,0xf7
  410c53:	es fwait
  410c55:	dec    ebx
  410c56:	mov    bh,0x71
  410c58:	jno    0x410c13
  410c5a:	clc    
  410c5b:	aam    0xd3
  410c5d:	lods   al,BYTE PTR ds:[esi]
  410c5e:	scas   eax,DWORD PTR es:[edi]
  410c5f:	lods   eax,DWORD PTR ds:[esi]
  410c60:	jl     0x410c48
  410c62:	mov    edi,0xf23f9bfc
  410c67:	fistp  QWORD PTR [edi-0xf]
  410c6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c6b:	jle    0x410c3f
  410c6d:	std    
  410c6e:	ja     0x410c27
  410c70:	les    ebx,FWORD PTR ss:[ecx+0x20]
  410c74:	and    al,0x80
  410c76:	(bad)  
  410c77:	adc    al,0xff
  410c79:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c7b:	mov    edi,0xfe9a6a68
  410c80:	leave  
  410c81:	cdq    
  410c82:	fstp   DWORD PTR [ecx]
  410c84:	mov    ds:0x82491351,al
  410c89:	xchg   ecx,eax
  410c8a:	loope  0x410c9d
  410c8c:	mov    ds:0x109218d1,al
  410c91:	lods   al,BYTE PTR ds:[esi]
  410c92:	(bad)  
  410c94:	push   es
  410c95:	int    0x66
  410c97:	add    edx,DWORD PTR [esi]
  410c99:	into   
  410c9a:	adc    DWORD PTR [ebp+0x7a1ad38d],ecx
  410ca0:	xchg   ebp,eax
  410ca1:	inc    edx
  410ca2:	mov    ds:0x3cee7e89,eax
  410ca7:	leave  
  410ca8:	test   eax,0x6952a61
  410cad:	stos   BYTE PTR es:[edi],al
  410cae:	sub    cl,BYTE PTR [eax-0x310d198]
  410cb4:	jmp    0xef5e3590
  410cb9:	adc    cl,BYTE PTR [ecx-0x3a0b8398]
  410cbf:	sub    ebp,DWORD PTR [eax-0x3e]
  410cc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cc3:	push   esi
  410cc4:	scas   eax,DWORD PTR es:[edi]
  410cc5:	xchg   ebx,eax
  410cc6:	dec    esi
  410cc7:	call   0x798f23e8
  410ccc:	sti    
  410ccd:	fnstsw WORD PTR [ebx+0x73363bb4]
  410cd3:	out    0x2f,eax
  410cd5:	jb     0x410cc0
  410cd7:	rol    BYTE PTR [ebp+0xa],cl
  410cda:	daa    
  410cdb:	sub    eax,0x9a24d564
  410ce0:	int3   
  410ce1:	lock into 
  410ce3:	sbb    ebp,edi
  410ce5:	mov    al,0xbe
  410ce7:	mov    esi,0x41993c45
  410cec:	cdq    
  410ced:	mov    ebx,0x58756d82
  410cf2:	pop    ebp
  410cf3:	mov    esi,0x1229d64b
  410cf8:	mov    ebx,DWORD PTR [ecx]
  410cfa:	pop    esp
  410cfb:	mov    ecx,0xa8ac8b30
  410d00:	in     al,0x72
  410d02:	cmp    DWORD PTR [esi+0x1c2dd5f6],edi
  410d08:	(bad)  
  410d09:	and    DWORD PTR [ecx-0x68d6afb8],edx
  410d0f:	sub    BYTE PTR ds:0x8d8d4f8b,dl
  410d15:	lea    ebx,[esi+0x2]
  410d18:	outs   dx,BYTE PTR ds:[esi]
  410d19:	popf   
  410d1a:	jne    0x410d9b
  410d1c:	xchg   al,bh
  410d1e:	(bad)  
  410d1f:	or     BYTE PTR [ecx],cl
  410d21:	loopne 0x410d54
  410d23:	inc    ebp
  410d24:	ss popf 
  410d26:	jle    0x410cd6
  410d28:	push   esp
  410d29:	lods   eax,DWORD PTR ds:[esi]
  410d2a:	dec    esi
  410d2b:	mov    cs,WORD PTR [ebp+0x4c]
  410d2e:	xor    dh,BYTE PTR [esp+edx*4]
  410d31:	mov    ds:0x65827274,eax
  410d36:	(bad)  [esp+ecx*2+0x4c]
  410d3a:	nop
  410d3b:	leave  
  410d3c:	out    0xe8,al
  410d3e:	je     0x410d7b
  410d40:	xor    al,0x9a
  410d42:	or     eax,0xf976f70e
  410d47:	ror    BYTE PTR [ebx+0x4c869893],1
  410d4d:	mov    ebx,0x899b22d5
  410d52:	mov    al,0xb3
  410d54:	mov    cl,0xce
  410d56:	out    dx,al
  410d57:	out    dx,al
  410d58:	cs xchg edx,eax
  410d5a:	sub    al,0x31
  410d5c:	xor    eax,0xc4c8c73d
  410d61:	and    dh,BYTE PTR [ebp+0x746e4c96]
  410d67:	xchg   esp,eax
  410d68:	stos   BYTE PTR es:[edi],al
  410d69:	xor    ecx,DWORD PTR [esi-0x53]
  410d6c:	push   esi
  410d6d:	in     eax,0xf0
  410d6f:	enter  0x5666,0x9f
  410d73:	(bad)  
  410d74:	lea    ecx,[ecx]
  410d76:	mov    WORD PTR [ecx-0x715cb1c8],ss
  410d7c:	xchg   ecx,eax
  410d7d:	pop    esi
  410d7e:	pusha  
  410d7f:	mov    ebx,0x71b1b120
  410d84:	mov    bl,ah
  410d86:	cmp    BYTE PTR [ebp+ecx*2-0x4a],cl
  410d8a:	mov    ecx,0x4a813b30
  410d8f:	xchg   ecx,ecx
  410d91:	mov    DWORD PTR [ecx-0x7c],ecx
  410d94:	pop    ebx
  410d95:	jecxz  0x410d82
  410d97:	outs   dx,DWORD PTR ds:[esi]
  410d98:	jl     0x410d37
  410d9a:	bound  esp,QWORD PTR [ecx-0x1860c4b8]
  410da0:	lds    ecx,FWORD PTR [edi+0x4849147c]
  410da6:	aam    0xaa
  410da8:	push   ebp
  410da9:	call   0x9182:0x648906cd
  410db0:	shl    DWORD PTR [ecx-0x5a],1
  410db3:	addr16 out 0x39,eax
  410db6:	sub    eax,0x96bab197
  410dbb:	adc    DWORD PTR [ecx],esi
  410dbd:	mov    ds:0xc01211af,eax
  410dc2:	arpl   WORD PTR [ebx+0x531e0090],cx
  410dc8:	je     0x410e04
  410dca:	(bad)  
  410dcb:	daa    
  410dcc:	div    BYTE PTR [esi+0x76]
  410dcf:	xlat   BYTE PTR gs:[ebx]
  410dd1:	mov    dl,0x99
  410dd3:	popf   
  410dd4:	sahf   
  410dd5:	mov    ds:0x3a38b35e,al
  410dda:	fisub  DWORD PTR [edi-0x451e9623]
  410de0:	arpl   WORD PTR cs:[ebx-0x1d],sp
  410de4:	in     al,dx
  410de5:	ins    BYTE PTR es:[edi],dx
  410de6:	cmp    eax,DWORD PTR [ebx+eiz*2+0x31]
  410dea:	sbb    cl,BYTE PTR [ebp-0x45f451fa]
  410df0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410df1:	arpl   WORD PTR [eax],bx
  410df3:	push   es
  410df4:	fisttp QWORD PTR [esi-0x65]
  410df7:	pop    edx
  410df8:	lods   eax,DWORD PTR ds:[esi]
  410df9:	dec    edx
  410dfa:	lods   eax,DWORD PTR ds:[esi]
  410dfb:	push   esi
  410dfc:	gs data16 xchg si,ax
  410e00:	lds    ebx,FWORD PTR [ecx+0x18895229]
  410e06:	jmp    0xbbb7aa4f
  410e0b:	ret    
  410e0c:	fwait
  410e0d:	outs   dx,DWORD PTR ds:[esi]
  410e0e:	mov    esp,0xc356ad47
  410e13:	push   0x57
  410e15:	clc    
  410e16:	enter  0x2f0b,0x90
  410e1a:	mov    ecx,0xab66917a
  410e1f:	dec    ebp
  410e20:	ss popf 
  410e22:	loopne 0x410dea
  410e24:	lods   eax,DWORD PTR ds:[esi]
  410e25:	mov    ebx,0xe26d6cec
  410e2a:	cmp    BYTE PTR [esi],dh
  410e2c:	jecxz  0x410dd1
  410e2e:	ret    
  410e2f:	mov    WORD PTR [esi+ecx*4-0x1f],cs
  410e33:	or     cl,BYTE PTR [eax-0x152b9d39]
  410e39:	jne    0x410e57
  410e3b:	mov    DWORD PTR [ebp+0x56],0x84662264
  410e42:	xchg   ebx,eax
  410e43:	ret    0x9b31
  410e46:	sbb    ebx,DWORD PTR [ebx+0x33ed1e1c]
  410e4c:	ds xor ecx,ecx
  410e4f:	in     al,dx
  410e50:	cld    
  410e51:	add    cl,BYTE PTR [ecx-0x69a6e59c]
  410e57:	sub    DWORD PTR [ebx-0x7474f4d2],edi
  410e5d:	or     BYTE PTR [ecx],ah
  410e5f:	ds or  edi,esp
  410e62:	fcomp  QWORD PTR [ecx-0x9]
  410e65:	mov    BYTE PTR [bx-0x73],ch
  410e69:	nop
  410e6a:	add    BYTE PTR [esi],bl
  410e6c:	push   ebx
  410e6d:	in     al,dx
  410e6e:	pop    ds
  410e6f:	in     al,dx
  410e70:	jg     0x410e48
  410e72:	mov    cl,0x6d
  410e74:	jbe    0x410eec
  410e76:	mov    bh,0x19
  410e78:	sbb    ecx,ecx
  410e7a:	xchg   ecx,eax
  410e7b:	iret   
  410e7c:	(bad)  
  410e7d:	mov    al,ds:0x569d3aeb
  410e82:	xchg   DWORD PTR [eax+0x2c],ebp
  410e85:	inc    esi
  410e86:	ss xchg edi,eax
  410e88:	and    ebx,DWORD PTR [esi]
  410e8a:	mov    edx,DWORD PTR [ebx+0x2d3966ce]
  410e90:	xchg   edi,eax
  410e91:	mov    eax,0xb21eef77
  410e96:	sub    al,0x33
  410e98:	xlat   BYTE PTR ds:[ebx]
  410e99:	popf   
  410e9a:	and    ebx,DWORD PTR [esi]
  410e9c:	dec    edi
  410e9d:	xchg   edx,eax
  410e9e:	dec    ecx
  410e9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ea0:	mov    DWORD PTR [eax-0x74a245af],ebx
  410ea6:	xchg   ebx,eax
  410ea7:	bound  edx,QWORD PTR [ecx+0x5e83fdfd]
  410ead:	cmp    BYTE PTR [edi],0x12
  410eb0:	xor    DWORD PTR [ecx+0x34],ebp
  410eb3:	sbb    bl,dh
  410eb5:	cmc    
  410eb6:	mov    edx,0x955ad516
  410ebb:	push   0xffffffad
  410ebd:	mov    fs,WORD PTR [esi-0x7965d736]
  410ec3:	popa   
  410ec4:	push   0x45134c44
  410ec9:	xchg   esi,eax
  410eca:	(bad)  
  410ecc:	fisub  WORD PTR [ebp+0x79]
  410ecf:	jns    0x410ed6
  410ed1:	xor    ebp,DWORD PTR [edx+0x32]
  410ed4:	cmp    al,0x3c
  410ed6:	int3   
  410ed7:	cmc    
  410ed8:	scas   eax,DWORD PTR es:[di]
  410eda:	jae    0x410f2e
  410edc:	cmp    BYTE PTR [ecx+0x66],ah
  410edf:	jbe    0x410e6f
  410ee1:	in     eax,dx
  410ee2:	int    0x4d
  410ee4:	mov    dh,0xb6
  410ee6:	out    dx,al
  410ee7:	shr    DWORD PTR [esi-0x49],1
  410eea:	sbb    DWORD PTR [ebx],ebx
  410eec:	sbb    eax,DWORD PTR [edi-0x6b]
  410eef:	adc    eax,0xe80f0e8e
  410ef4:	mov    ah,0x3b
  410ef6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ef7:	rcr    DWORD PTR [ecx],cl
  410ef9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410efa:	addr16 pop ax
  410efd:	pop    ebx
  410efe:	pop    edi
  410eff:	jnp    0x410ef2
  410f01:	pop    ds
  410f02:	inc    edx
  410f04:	das    
  410f05:	in     eax,0x7f
  410f07:	call   0xa3f70ebb
  410f0c:	xor    ebp,ebp
  410f0e:	rcl    BYTE PTR [eax],1
  410f10:	fist   WORD PTR [edx]
  410f12:	and    DWORD PTR [ecx],eax
  410f14:	cmp    al,0x86
  410f16:	clc    
  410f17:	fstp   TBYTE PTR [edi-0x11]
  410f1a:	inc    edi
  410f1b:	das    
  410f1c:	stos   BYTE PTR es:[edi],al
  410f1d:	call   0x5273:0x499d3176
  410f24:	cmp    BYTE PTR [edx+0x3932eddb],ah
  410f2a:	xor    DWORD PTR [ecx-0x7537b6d4],ecx
  410f30:	inc    edx
  410f31:	mov    bh,0xdb
  410f33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f34:	push   esp
  410f35:	sub    al,0xd1
  410f37:	push   0x36
  410f39:	enter  0x1c8a,0x8a
  410f3d:	and    dl,bl
  410f3f:	outs   dx,BYTE PTR ds:[esi]
  410f40:	mov    bh,0xb0
  410f42:	ins    DWORD PTR es:[edi],dx
  410f43:	xchg   DWORD PTR [edx-0x4b],ebp
  410f46:	retf   0xba5
  410f49:	out    0x31,eax
  410f4b:	dec    ebp
  410f4c:	sbb    eax,0x15515159
  410f51:	xchg   ebp,eax
  410f52:	aaa    
  410f53:	fidivr WORD PTR [ebx+ecx*4-0x3]
  410f57:	std    
  410f58:	jge    0x410ee8
  410f5a:	push   cs
  410f5b:	(bad)  
  410f5c:	js     0x410f54
  410f5e:	cli    
  410f5f:	xor    eax,0x9d7ebf9e
  410f64:	mov    ebp,0xc72603c3
  410f69:	(bad)  
  410f6a:	sub    DWORD PTR [edi-0x1c8843d5],edx
  410f70:	push   es
  410f71:	cmc    
  410f72:	inc    esi
  410f73:	(bad)  
  410f74:	(bad)  
  410f75:	loop   0x410fb0
  410f77:	cs pushf 
  410f79:	pop    ebx
  410f7a:	and    al,0x1e
  410f7c:	lea    esp,[ecx+0x78c90a6a]
  410f82:	pushf  
  410f83:	scas   eax,DWORD PTR es:[edi]
  410f84:	jle    0x410f83
  410f86:	dec    edi
  410f87:	(bad)  
  410f89:	ffreep st(3)
  410f8b:	mov    BYTE PTR [eax+0xe773b9c],bl
  410f91:	inc    ebp
  410f92:	push   ebp
  410f93:	jmp    0x45553c0e
  410f98:	inc    ecx
  410f99:	enter  0xaa32,0xa6
  410f9d:	xchg   ecx,eax
  410f9e:	dec    esp
  410f9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410fa0:	dec    eax
  410fa1:	and    al,0x93
  410fa3:	sub    al,0x2f
  410fa5:	sub    eax,0xdb3bbb1
  410faa:	cs dec esp
  410fac:	dec    esi
  410fad:	dec    ebp
  410fae:	mov    cl,0xbb
  410fb0:	mov    bl,0xc3
  410fb2:	(bad)  
  410fb3:	out    dx,al
  410fb4:	pop    esi
  410fb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410fb6:	pop    edx
  410fb7:	test   eax,0xc6fc0abc
  410fbc:	pop    ecx
  410fbd:	imul   DWORD PTR [ebx-0x78]
  410fc0:	jg     0x410fd5
  410fc2:	and    DWORD PTR [ecx],eax
  410fc4:	cmp    al,0x86
  410fc6:	push   0x4eaf9ab5
  410fcb:	dec    esp
  410fcc:	dec    esi
  410fcd:	inc    ebp
  410fce:	xor    ebp,DWORD PTR [ecx-0x6f5545cc]
  410fd4:	dec    eax
  410fd5:	and    al,0xe8
  410fd7:	je     0x410f94
  410fd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410fda:	xor    ebx,DWORD PTR [ecx]
  410fdc:	loop   0x410fcf
  410fde:	add    al,0x2
  410fe0:	ror    edx,0xca
  410fe3:	adc    dl,BYTE PTR [ebp+0x4eed29ca]
  410fe9:	fwait
  410fea:	xchg   ecx,eax
  410feb:	loope  0x410ffe
  410fed:	inc    esi
  410fee:	xchg   BYTE PTR [edi-0x58],al
  410ff1:	push   esp
  410ff2:	sub    ebx,DWORD PTR [eax+0x468d0891]
  410ff8:	xchg   ebx,eax
  410ff9:	push   edx
  410ffa:	stc    
  410ffb:	xchg   esp,eax
  410ffc:	mov    BYTE PTR [ecx],bl
  410ffe:	and    eax,0x842af715
  411003:	sbb    al,0xd7
  411005:	mov    eax,ds:0x28a369dd
  41100a:	xor    bl,BYTE PTR [edx-0x59b56e5f]
  411010:	xor    DWORD PTR [ebp+ecx*1+0x49],esi
  411014:	xchg   esi,eax
  411015:	push   0x3a749ab6
  41101a:	sbb    eax,0xc22edd3a
  41101f:	scas   eax,DWORD PTR es:[edi]
  411020:	das    
  411021:	jbe    0x41108f
  411023:	fwait
  411024:	dec    esi
  411025:	mov    bh,0x83
  411027:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411028:	imul   ebp,DWORD PTR [eax-0x62c5b556],0x50a952a2
  411032:	cmp    DWORD PTR [ebp-0x35494d50],ebp
  411038:	rol    ecx,0x3e
  41103b:	jecxz  0x411050
  41103d:	adc    edi,DWORD PTR [eax+ebp*8+0x43]
  411041:	das    
  411042:	loop   0x411046
  411044:	jmp    0x9636aabd
  411049:	push   ebp
  41104a:	mov    edx,0x6ce92e9d
  41104f:	xchg   BYTE PTR [ebx+0x37361393],dl
  411055:	aaa    
  411056:	mov    al,0x2d
  411058:	or     ebx,ebp
  41105a:	xor    BYTE PTR [esi],bh
  41105c:	dec    ecx
  41105d:	dec    eax
  41105e:	add    BYTE PTR [edi+0x39c7c225],cl
  411064:	cmp    eax,0xff2bf886
  411069:	icebp  
  41106a:	jg     0x411066
  41106c:	fisttp WORD PTR [ecx+0x42]
  41106f:	pushf  
  411070:	dec    edi
  411071:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411072:	shl    ah,cl
  411074:	xchg   ebx,esi
  411076:	dec    esp
  411077:	dec    edi
  411078:	iret   
  411079:	jo     0x4110cd
  41107b:	cmp    BYTE PTR [esi+0x6f],ah
  41107e:	jg     0x41109f
  411080:	inc    ebp
  411081:	xchg   ecx,eax
  411082:	shl    DWORD PTR ds:0x3bb533dd,1
  411088:	sub    eax,0x71615964
  41108d:	jno    0x411020
  41108f:	inc    esp
  411090:	xor    al,BYTE PTR [ecx+0x2e]
  411093:	xchg   ebx,eax
  411094:	arpl   WORD PTR [eax],di
  411096:	aas    
  411097:	(bad)  
  411098:	into   
  411099:	out    dx,al
  41109a:	push   cs
  41109b:	sub    ebp,DWORD PTR [ebx+0x1dedec2b]
  4110a1:	pusha  
  4110a2:	(bad)  
  4110a3:	mov    ds:0x238e4d4c,al
  4110a8:	test   ah,cl
  4110aa:	in     al,dx
  4110ab:	int3   
  4110ac:	or     al,0x42
  4110ae:	adc    ch,BYTE PTR [esp+ebp*4-0x45454d52]
  4110b5:	mov    ch,ch
  4110b7:	mov    eax,0x4c31e3c4
  4110bc:	shl    DWORD PTR [edx+ebx*1],cl
  4110bf:	lea    esi,[ecx]
  4110c1:	cmp    esi,DWORD PTR [ebx]
  4110c3:	int    0xde
  4110c5:	shl    DWORD PTR [ecx],0xb7
  4110c8:	outs   dx,BYTE PTR ds:[esi]
  4110c9:	frstor [edi+esi*2+0x6f]
  4110cd:	rdpmc  
  4110cf:	sbb    ah,BYTE PTR [ebx+0x76]
  4110d2:	jp     0x4110de
  4110d4:	xor    ebx,DWORD PTR [edx]
  4110d6:	gs icebp 
  4110d8:	fsub   QWORD PTR [edx]
  4110da:	mov    ch,BYTE PTR [ebx+esi*8]
  4110dd:	out    0x9b,al
  4110df:	outs   dx,DWORD PTR ds:[esi]
  4110e0:	push   edx
  4110e1:	cs xchg edi,eax
  4110e3:	xchg   ecx,eax
  4110e4:	fs cdq 
  4110e6:	(bad)
  4110e9:	mov    ah,0x5b
  4110eb:	sub    eax,0x9d068dea
  4110f0:	mov    dh,0x57
  4110f2:	jo     0x411094
  4110f4:	sub    BYTE PTR [edx],cl
  4110f6:	jae    0x411103
  4110f8:	mov    ecx,DWORD PTR [eax]
  4110fa:	pop    ss
  4110fb:	(bad)  
  4110fc:	xlat   BYTE PTR ds:[ebx]
  4110fd:	xlat   BYTE PTR ds:[ebx]
  4110fe:	xor    BYTE PTR [ebx+eax*4],cl
  411101:	cld    
  411102:	push   eax
  411103:	ds std 
  411105:	lahf   
  411106:	jl     0x411107
  411108:	idiv   edi
  41110a:	ret    0xf5ff
  41110d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41110e:	inc    ebx
  411110:	cmp    ch,bl
  411112:	mov    esi,0x423f710d
  411117:	or     esp,eax
  411119:	xor    ebx,eax
  41111b:	(bad)  
  41111c:	std    
  41111d:	ret    
  41111e:	das    
  41111f:	or     al,0x83
  411121:	clc    
  411122:	dec    eax
  411123:	cmp    al,0x1e
  411125:	ins    DWORD PTR es:[di],dx
  411127:	jne    0x4110c2
  411129:	rcl    ecx,1
  41112b:	popa   
  41112c:	push   ss
  41112d:	pop    ss
  41112e:	push   ss
  41112f:	jo     0x41114d
  411131:	fwait
  411132:	rcl    DWORD PTR [edx+0x11],cl
  411135:	mov    ebx,0x14bcc5db
  41113a:	in     eax,0xdc
  41113c:	stc    
  41113d:	or     ebp,DWORD PTR [edi+ebp*2+0x6f]
  411141:	xor    dl,BYTE PTR [ebx+ecx*8-0x16a952ad]
  411148:	je     0x411185
  41114a:	cmp    BYTE PTR [esi-0x38eed5b3],dl
  411150:	jne    0x411113
  411152:	mov    dl,0x2c
  411154:	stos   BYTE PTR es:[edi],al
  411155:	mov    ch,0x6
  411157:	mov    ch,BYTE PTR [ebx+edx*4]
  41115a:	dec    ecx
  41115b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41115c:	jno    0x4111c4
  41115e:	and    DWORD PTR [ebp+0x74edd24c],ebx
  411164:	fcomp  st(3)
  411166:	(bad)  [edi+0x7872ab5e]
  41116c:	sbb    cl,ah
  41116e:	fsubr  st(2),st
  411170:	add    dh,BYTE PTR [ecx-0x58896b98]
  411176:	inc    ebx
  411177:	sbb    DWORD PTR es:[ebx-0x11],esp
  41117b:	loopne 0x41110d
  41117d:	dec    edx
  41117e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41117f:	loop   0x4111d0
  411181:	xor    eax,0x6233176
  411186:	xchg   BYTE PTR [ecx-0x20],ah
  411189:	cmp    ch,BYTE PTR [esi]
  41118b:	sbb    eax,0x8cc44bab
  411190:	shl    BYTE PTR [ebp-0x3c0c79d4],1
  411196:	sbb    al,0x1c
  411198:	push   ds
  411199:	mov    al,0xba
  41119b:	je     0x411134
  41119d:	xchg   ebx,eax
  41119e:	bound  ecx,QWORD PTR [ecx-0x19ba3a3b]
  4111a4:	out    0x17,eax
  4111a6:	mov    BYTE PTR [edx+eiz*1-0x58],al
  4111aa:	mov    edx,0x6356bd41
  4111af:	je     0x411225
  4111b1:	mov    WORD PTR [eax-0x2c],cs
  4111b4:	inc    esp
  4111b5:	xchg   esi,eax
  4111b6:	in     eax,0x99
  4111b8:	mov    ebp,0x8117fdfd
  4111bd:	aas    
  4111be:	cmp    al,0xdb
  4111c0:	fimul  WORD PTR ds:0x16847ef1
  4111c6:	shl    BYTE PTR [ebx-0x7a],0xf9
  4111ca:	jae    0x4111b3
  4111cc:	mov    edi,0x3f10843
  4111d1:	inc    ebx
  4111d2:	mov    ecx,0x5bdbdb3c
  4111d7:	cmp    BYTE PTR [esi+0x1088c445],cl
  4111dd:	xor    DWORD PTR [ebp-0x16],ecx
  4111e0:	lea    eax,[esi]
  4111e2:	scas   al,BYTE PTR es:[edi]
  4111e3:	jecxz  0x411217
  4111e5:	cmp    bh,BYTE PTR [esi]
  4111e7:	inc    esi
  4111e8:	ss fwait
  4111ea:	and    edx,DWORD PTR [esi]
  4111ec:	mov    esi,DWORD PTR [ecx]
  4111ee:	ss ds dec esi
  4111f1:	lods   eax,DWORD PTR ds:[esi]
  4111f2:	jp     0x4111be
  4111f4:	popf   
  4111f5:	cmp    esi,DWORD PTR [edi+0x28]
  4111f8:	adc    eax,0x428a484b
  4111fd:	ds lahf 
  4111ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411200:	arpl   WORD PTR [ecx+0x64],bx
  411203:	mov    bl,0x39
  411205:	adc    cl,BYTE PTR [ecx-0x6ebd7afc]
  41120b:	cmc    
  41120c:	jnp    0x411205
  41120e:	jo     0x41126d
  411210:	pop    ss
  411211:	(bad)  
  411212:	jne    0x4111c5
  411214:	sbb    eax,0x316bab1b
  411219:	xor    DWORD PTR ds:[esi+0x1d1ccb24],ecx
  411220:	push   ds
  411221:	mov    cl,0xb7
  411223:	mov    edi,0x4829248f
  411228:	xchg   edx,eax
  411229:	inc    esp
  41122a:	mov    bh,0xdb
  41122c:	and    eax,0x9b221f9f
  411231:	int    0xb2
  411233:	mov    bl,0x7f
  411235:	shr    BYTE PTR [ebp+0x3939379b],0x29
  41123c:	xchg   edx,eax
  41123d:	leave  
  41123e:	fs cdq 
  411240:	sahf   
  411241:	sahf   
  411242:	es push ds
  411244:	dec    edi
  411245:	mov    al,0xb0
  411247:	mov    eax,0x665cb948
  41124c:	stc    
  41124d:	out    dx,al
  41124e:	pop    ebp
  41124f:	(bad)  
  411251:	push   ss
  411252:	stc    
  411253:	cld    
  411254:	xor    BYTE PTR [edx-0x4d4d4f9f],bh
  41125a:	int3   
  41125b:	loope  0x41121e
  41125d:	ds test eax,0xd1e18a54
  411263:	push   ecx
  411264:	cmp    bl,BYTE PTR [ebp+0x5d7af50e]
  41126a:	inc    esp
  41126b:	and    edx,DWORD PTR [ecx-0x5201200b]
  411271:	(bad)  
  411272:	sti    
  411273:	(bad)  
  411274:	iret   
  411275:	mov    edx,0x8fdc437f
  41127a:	rol    BYTE PTR [edx],1
  41127c:	js     0x41124a
  41127e:	and    cl,cl
  411280:	retf   0x4f27
  411283:	or     al,BYTE PTR ds:0xb20d131a
  411289:	(bad)  [eax+edi*4]
  41128c:	ss popf 
  41128e:	jbe    0x411217
  411290:	test   DWORD PTR [ebp+0x43553445],eax
  411296:	clc    
  411297:	add    eax,0xfbfb07fa
  41129c:	push   esp
  41129d:	stos   DWORD PTR es:[edi],eax
  41129e:	push   ebp
  41129f:	and    ah,BYTE PTR [esi-0x47471277]
  4112a5:	inc    eax
  4112a6:	stos   DWORD PTR es:[edi],eax
  4112a7:	frstor [edx-0x776f162d]
  4112ad:	(bad)  
  4112ae:	cwde   
  4112af:	cdq    
  4112b0:	sahf   
  4112b1:	inc    esi
  4112b2:	shl    DWORD PTR [esp+ecx*2-0x3d],cl
  4112b6:	loopne 0x411283
  4112b8:	pop    edi
  4112b9:	std    
  4112ba:	sbb    al,BYTE PTR [edi-0x79]
  4112bd:	pop    es
  4112be:	pushf  
  4112bf:	sahf   
  4112c0:	sahf   
  4112c1:	repnz fisubr DWORD PTR [ebx]
  4112c4:	das    
  4112c5:	jae    0x4112b4
  4112c7:	retf   0x9cd3
  4112ca:	adc    al,0x4f
  4112cc:	sbb    DWORD PTR [ecx],ebx
  4112ce:	repnz add al,0xfc
  4112d1:	out    0xad,al
  4112d3:	pop    ebx
  4112d4:	mov    ah,0xdb
  4112d6:	ins    DWORD PTR es:[edi],dx
  4112d7:	fs pop ecx
  4112d9:	out    0xda,al
  4112db:	xchg   ebp,eax
  4112dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112dd:	dec    ecx
  4112de:	adc    ch,BYTE PTR es:[eax+0x31198c8a]
  4112e5:	pop    eax
  4112e6:	pop    esi
  4112e7:	pop    ecx
  4112e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112e9:	push   edx
  4112ea:	lods   eax,DWORD PTR ds:[esi]
  4112eb:	shr    ch,1
  4112ed:	pop    edx
  4112ee:	sbb    BYTE PTR [ecx],dl
  4112f0:	sbb    eax,0x71705145
  4112f5:	test   eax,0x56586ad7
  4112fa:	xchg   edi,eax
  4112fb:	dec    esp
  4112fc:	mov    esp,DWORD PTR ss:[esi+0x39b364eb]
  411303:	out    dx,al
  411304:	fdivr  QWORD PTR [esi+0x2eeedec5]
  41130a:	xchg   edx,eax
  41130b:	and    al,0x31
  41130d:	cmp    esi,DWORD PTR [edi]
  41130f:	dec    edi
  411310:	icebp  
  411311:	in     al,0x84
  411313:	jnp    0x411380
  411315:	sub    esp,DWORD PTR [edx+edx*4]
  411318:	imul   ebp,DWORD PTR [esi+ebp*2-0x703f8c09],0x86ff759d
  411323:	mov    eax,0xf005a11f
  411328:	sbb    cl,ah
  41132a:	pop    edi
  41132b:	cld    
  41132c:	out    0xbf,al
  41132e:	mov    dl,BYTE PTR [ebx+ecx*2]
  411331:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411332:	das    
  411333:	je     0x4112f0
  411335:	push   esi
  411336:	out    0xfc,al
  411338:	stc    
  411339:	or     ecx,DWORD PTR [edi+ecx*4+0x119a628f]
  411340:	xchg   edx,eax
  411341:	test   eax,0x21a69a14
  411346:	dec    ecx
  411347:	xor    ch,cl
  411349:	dec    esp
  41134a:	call   0x12ca:0xcac62c58
  411351:	daa    
  411352:	test   DWORD PTR [edx],eax
  411354:	lods   eax,DWORD PTR ds:[esi]
  411355:	push   esi
  411356:	xchg   ebx,eax
  411357:	icebp  
  411358:	icebp  
  411359:	xor    DWORD PTR [ebx+esi*1-0x76],ecx
  41135d:	mov    eax,ds:0x7286e41b
  411362:	xor    al,0x9b
  411364:	dec    ebp
  411365:	mov    dh,0x76
  411367:	mov    dh,0x69
  411369:	mov    bh,0x3b
  41136b:	enter  0x428a,0xb5
  41136f:	push   esi
  411370:	mov    ds:0x4f12ab5a,eax
  411375:	and    al,0xc9
  411377:	out    0x86,eax
  411379:	jo     0x411397
  41137b:	xchg   edi,eax
  41137c:	bound  edi,QWORD PTR [ecx+0x6846698c]
  411382:	ss pop ebx
  411384:	sbb    al,0x1d
  411386:	sbb    eax,0xb90ebae3
  41138b:	jl     0x41132b
  41138d:	js     0x4113bb
  41138f:	retf   0xfefe
  411392:	add    DWORD PTR [ebp-0x7a38f4aa],ebp
  411398:	scas   al,BYTE PTR es:[edi]
  411399:	shr    DWORD PTR gs:[esp+esi*1-0x67],1
  41139e:	call   0xdeee:0x7437469a
  4113a5:	mov    ecx,0x32f2eacb
  4113aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113ab:	xchg   ebp,eax
  4113ac:	push   ebx
  4113ad:	out    0x16,al
  4113af:	push   ss
  4113b0:	enter  0x86e5,0x48
  4113b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113b5:	shl    DWORD PTR [ebx+edx*2],cl
  4113b8:	dec    ecx
  4113b9:	mov    dh,0xb7
  4113bb:	mov    dh,0x29
  4113bd:	adc    eax,0x3973648b
  4113c2:	fs inc ebp
  4113c4:	popa   
  4113c5:	jne    0x41142c
  4113c7:	cdq    
  4113c8:	ret    0x8149
  4113cb:	js     0x411409
  4113cd:	inc    ecx
  4113ce:	lods   eax,DWORD PTR ds:[esi]
  4113cf:	push   esi
  4113d0:	dec    edi
  4113d1:	pop    edi
  4113d2:	jle    0x4113ba
  4113d4:	retf   0xde97
  4113d7:	clc    
  4113d8:	shr    DWORD PTR [edi+0x3f759c9d],cl
  4113de:	xchg   eax,ebp
  4113e0:	and    esi,DWORD PTR [eax+eax*1-0x54abdce2]
  4113e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113e8:	push   edi
  4113e9:	shr    DWORD PTR [ecx+0x2e50eccc],cl
  4113ef:	dec    edi
  4113f0:	mov    bh,0xdb
  4113f2:	es push 0x66
  4113f5:	sbb    edx,ecx
  4113f7:	out    0x88,al
  4113f9:	daa    
  4113fa:	adc    bl,BYTE PTR [esi+ebx*1]
  4113fd:	push   ds
  4113fe:	jb     0x411474
  411400:	js     0x4113c2
  411402:	enter  0x28c8,0xc3
  411406:	and    esp,DWORD PTR [ebx-0x74796558]
  41140c:	mov    ebp,DWORD PTR [ebp-0x27]
  41140f:	cwde   
  411410:	data16 add al,0x55
  411413:	ror    eax,cl
  411415:	data16 xor ah,BYTE PTR [ebx+edx*1-0x2829a9f7]
  41141d:	pop    ecx
  41141e:	pop    edi
  41141f:	pop    ebp
  411420:	ret    
  411421:	inc    ebp
  411422:	loop   0x4113a9
  411424:	(bad)  
  411426:	iret   
  411427:	xchg   ebp,eax
  411428:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411429:	das    
  41142a:	xchg   ebx,eax
  41142b:	retf   
  41142c:	in     eax,0xc8
  41142e:	xor    bh,BYTE PTR gs:[eax]
  411431:	scas   al,BYTE PTR es:[edi]
  411432:	ret    
  411433:	aaa    
  411434:	fistp  QWORD PTR [edx-0x65]
  411437:	ret    0x8171
  41143a:	jb     0x4114b5
  41143c:	xchg   esi,eax
  41143d:	or     esp,edi
  41143f:	iret   
  411440:	jno    0x41143f
  411442:	ficom  DWORD PTR [ebp+0x5a]
  411445:	in     eax,dx
  411446:	push   ss
  411447:	jecxz  0x4114ac
  411449:	mov    ds:0xe0dbddac,eax
  41144e:	imul   ch
  411450:	cmp    eax,DWORD PTR [eax]
  411452:	pop    esp
  411453:	mov    ebp,0x97cb957a
  411458:	xor    dh,BYTE PTR cs:[esp+edx*4]
  41145c:	daa    
  41145d:	cdq    
  41145e:	dec    eax
  41145f:	shr    BYTE PTR [eax+0x35],1
  411462:	cmp    DWORD PTR [esi],edi
  411464:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411466:	fldcw  WORD PTR [edx+0x12]
  411469:	mov    bh,0x2c
  41146b:	xor    al,0x45
  41146d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41146e:	fsubr  DWORD PTR [edx+edx*2]
  411471:	cs xchg edi,eax
  411473:	std    
  411474:	pop    edx
  411475:	adc    BYTE PTR [ecx+0xc],0x43
  411479:	bound  ebp,QWORD PTR [bp+si-0x76]
  41147d:	push   0xffffffa5
  41147f:	dec    edx
  411480:	mov    ebp,0x8b1e275e
  411485:	adc    ecx,DWORD PTR [edi+0x24]
  411488:	fcomp  st(3)
  41148a:	fbstp  TBYTE PTR [edi]
  41148c:	jae    0x411447
  41148e:	in     al,dx
  41148f:	sub    eax,eax
  411491:	rcr    cl,cl
  411493:	div    BYTE PTR [edx-0x78]
  411496:	inc    ecx
  411497:	test   BYTE PTR [eax+esi*8],al
  41149a:	sbb    BYTE PTR [ecx+0x67],ah
  41149d:	addr16 out 0x13,eax
  4114a0:	cs inc edx
  4114a2:	sahf   
  4114a3:	call   0xddee:0x6d7080be
  4114aa:	pop    ebx
  4114ab:	daa    
  4114ac:	xchg   edi,eax
  4114ad:	int    0x11
  4114af:	(bad)  
  4114b0:	(bad)
  4114b3:	(bad)  [edx+ebx*1]
  4114b6:	or     eax,0x18f6f60e
  4114bb:	push   ds
  4114bc:	sbb    ebp,esp
  4114be:	rcl    BYTE PTR [ebx-0x69],cl
  4114c1:	(bad)  
  4114c3:	fisub  DWORD PTR [eax+ebp*1+0x37]
  4114c7:	inc    esp
  4114c8:	jmp    0x52ea5971
  4114cd:	shl    DWORD PTR [ebp+0x1d],0x64
  4114d1:	pop    ecx
  4114d2:	inc    esi
  4114d3:	or     BYTE PTR [ecx],cl
  4114d5:	inc    ebp
  4114d6:	push   ecx
  4114d7:	mov    al,0x6c
  4114d9:	pop    es
  4114da:	and    DWORD PTR [esp+esi*1],esp
  4114dd:	dec    ebp
  4114de:	and    DWORD PTR [edx],ebx
  4114e0:	xor    eax,0x76834d31
  4114e5:	mov    ebx,0x4d9b343
  4114ea:	sbb    al,0x9a
  4114ec:	lea    edi,[edx]
  4114ee:	ror    DWORD PTR [eax+0x4],1
  4114f1:	pop    ecx
  4114f2:	xchg   edx,eax
  4114f3:	push   0xba18dbb5
  4114f8:	mov    gs,ebx
  4114fa:	mov    edx,0xaa2ead74
  4114ff:	stos   BYTE PTR es:[edi],al
  411500:	loop   0x41153a
  411502:	push   cs
  411503:	in     eax,dx
  411504:	jbe    0x41148d
  411506:	xchg   ebx,eax
  411507:	inc    edx
  411508:	add    ebx,ebx
  41150a:	repnz push esi
  41150c:	push   ss
  41150d:	sbb    DWORD PTR [ecx],ebx
  41150f:	sbb    ecx,eax
  411511:	xor    BYTE PTR [esi+eiz*8],cl
  411514:	pop    ss
  411515:	push   ss
  411516:	fcomp  st(3)
  411518:	fninit 
  41151a:	out    0x8d,al
  41151c:	imul   DWORD PTR [eax-0xac354aa]
  411522:	aam    0x65
  411524:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411525:	addr16 addr16 xchg ecx,eax
  411528:	and    al,0x5
  41152a:	(bad)  [esi+0x4c1a3669]
  411530:	dec    esi
  411531:	dec    edi
  411532:	mov    ds:0x63c30ac8,eax
  411537:	mov    ds:0x52eeeeec,eax
  41153c:	lods   eax,DWORD PTR ds:[esi]
  41153d:	(bad)  
  41153e:	mov    edi,0xb3c5f813
  411543:	out    dx,al
  411544:	out    0x10,eax
  411546:	jge    0x4114cc
  411548:	shl    BYTE PTR cs:[ebx-0x7c],0xab
  41154d:	iret   
  41154e:	mov    ebp,0x62a593f0
  411553:	jno    0x411577
  411555:	popf   
  411556:	dec    esi
  411557:	xchg   ecx,eax
  411558:	leave  
  411559:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41155a:	sub    DWORD PTR [edi+ebx*1],ebx
  41155d:	push   ecx
  41155e:	scas   eax,DWORD PTR es:[edi]
  41155f:	xlat   BYTE PTR ds:[ebx]
  411560:	adc    DWORD PTR [edx],eax
  411562:	shr    cl,cl
  411564:	or     al,0x9d
  411566:	dec    esi
  411567:	pop    ss
  411568:	and    DWORD PTR [ecx-0x1c],ecx
  41156b:	jb     0x4115a6
  41156d:	mov    ds:0x96590c66,al
  411572:	leave  
  411573:	(bad)  
  411574:	or     al,0xd3
  411576:	push   0xffffffb7
  411578:	pop    eax
  411579:	pop    esi
  41157a:	pop    esi
  41157b:	mov    ds:0x51415a72,al
  411580:	xor    eax,0xd127a7a6
  411585:	and    esp,DWORD PTR [esi]
  411587:	xchg   ebx,eax
  411588:	adc    edx,DWORD PTR [ebx+0x5631e3c4]
  41158e:	xlat   BYTE PTR ds:[ebx]
  41158f:	out    dx,eax
  411590:	jno    0x411589
  411592:	into   
  411593:	pop    ebp
  411594:	call   0x2249:0xa89116cd
  41159b:	xchg   ecx,eax
  41159c:	shl    BYTE PTR [ebp+0x61],0x76
  4115a0:	jbe    0x411528
  4115a2:	pop    edx
  4115a3:	mov    ds:0x2acacac9,eax
  4115a8:	cmp    edi,DWORD PTR [ebx+0x36bb74bb]
  4115ae:	cdq    
  4115af:	pop    esp
  4115b0:	push   ss
  4115b1:	pop    ebp
  4115b2:	rcr    DWORD PTR [ecx+0x64609f18],cl
  4115b8:	cmp    bh,cl
  4115ba:	in     eax,dx
  4115bb:	(bad)  [edi+0x59]
  4115be:	pop    edx
  4115bf:	pop    edx
  4115c0:	out    0xa4,al
  4115c2:	js     0x411586
  4115c4:	aam    0xd4
  4115c6:	and    al,0x53
  4115c8:	xchg   ebx,eax
  4115c9:	xchg   ebx,eax
  4115ca:	(bad)
  4115ce:	mov    BYTE PTR [esi-0x57],0x54
  4115d2:	sub    ch,BYTE PTR [edi+ebp*4+0x208422ae]
  4115d9:	popf   
  4115da:	dec    ecx
  4115db:	arpl   WORD PTR [ebx+0x36],bx
  4115de:	dec    ebx
  4115df:	dec    ebx
  4115e0:	ja     0x41160a
  4115e2:	sbb    al,0x1f
  4115e4:	xchg   ebx,eax
  4115e5:	pop    ds
  4115e6:	push   ds
  4115e7:	and    DWORD PTR [edi],esi
  4115e9:	xchg   esp,eax
  4115ea:	(bad)  
  4115eb:	mov    dh,0x6d
  4115ed:	cmp    bl,BYTE PTR [ebp-0x1f5d4dca]
  4115f3:	mov    eax,0x9fd3fa6e
  4115f8:	std    
  4115f9:	into   
  4115fa:	pop    edi
  4115fb:	cli    
  4115fc:	sbb    edi,0xfffffffb
  4115ff:	popf   
  411600:	out    0x59,al
  411602:	div    DWORD PTR [ebp+0x8]
  411605:	pop    fs
  411607:	add    eax,0x47e098f0
  41160c:	inc    edi
  41160e:	lahf   
  41160f:	pop    eax
  411610:	lods   al,BYTE PTR ds:[esi]
  411611:	aaa    
  411612:	sbb    dl,BYTE PTR [edi+0x6f6c1084]
  411618:	ins    DWORD PTR es:[edi],dx
  411619:	xchg   ecx,eax
  41161a:	int    0xa6
  41161c:	leave  
  41161d:	in     eax,0xb2
  41161f:	adc    al,0xa
  411621:	inc    ebp
  411622:	sbb    al,0xc7
  411624:	gs js  0x41169f
  411627:	adc    al,0x4d
  411629:	imul   DWORD PTR [edx-0x3]
  41162c:	gs pop ecx
  41162e:	data16 jge 0x41169e
  411631:	xchg   ebp,eax
  411632:	inc    esi
  411633:	mov    ds:0x248bae0e,eax
  411638:	retf   
  411639:	inc    esp
  41163a:	or     al,0x83
  41163c:	data16 mov bl,0x85
  41163f:	jmp    0x41167b
  411641:	test   al,0x8a
  411643:	inc    edx
  411644:	es popf 
  411646:	inc    esi
  411647:	rcl    DWORD PTR [esp+ecx*2-0x2d],cl
  41164b:	hlt    
  41164c:	sub    bh,ch
  41164e:	stos   BYTE PTR es:[edi],al
  41164f:	push   ebp
  411650:	mov    dh,0x6d
  411652:	fwait
  411653:	test   ecx,edi
  411655:	cmp    DWORD PTR [edx+0x53],esi
  411658:	push   ebx
  411659:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41165a:	xchg   edx,eax
  41165b:	dec    ecx
  41165c:	jb     0x4115f7
  41165e:	adc    al,0x7b
  411660:	sti    
  411661:	xchg   esp,ebp
  411663:	in     al,dx
  411664:	in     al,dx
  411665:	pusha  
  411666:	pop    ebx
  411667:	push   ss
  411668:	test   eax,0xe7f39244
  41166d:	out    0xd0,al
  41166f:	adc    al,0x2f
  411671:	sbb    esp,DWORD PTR [eax+0x46]
  411674:	or     al,0x9a
  411676:	int    0x26
  411678:	popf   
  411679:	outs   dx,BYTE PTR ds:[esi]
  41167a:	pop    es
  41167b:	ret    
  41167c:	ss jo  0x41169c
  41167f:	xchg   DWORD PTR [edx-0x53],ebx
  411682:	retf   0xc1c1
  411685:	ds xchg esi,eax
  411687:	ins    DWORD PTR es:[edi],dx
  411688:	and    DWORD PTR [ecx],ecx
  41168a:	mov    ecx,ebx
  41168c:	stc    
  41168d:	jns    0x4116a3
  41168f:	inc    ebp
  411690:	popa   
  411691:	bound  esi,QWORD PTR [edx-0x76]
  411694:	ja     0x411675
  411696:	jns    0x411633
  411698:	inc    edx
  411699:	loope  0x4116a3
  41169b:	inc    ebp
  41169c:	push   ecx
  41169d:	xchg   ecx,eax
  41169e:	fs cdq 
  4116a0:	push   0xffffffa5
  4116a2:	ret    0xeada
  4116a5:	sub    cl,cl
  4116a7:	je     0x411633
  4116a9:	xchg   ecx,eax
  4116aa:	xchg   ecx,eax
  4116ab:	push   ecx
  4116ac:	mov    cs,WORD PTR [edi]
  4116ae:	psllq  mm5,QWORD PTR [ebx]
  4116b1:	pop    ebx
  4116b2:	fwait
  4116b3:	scas   eax,DWORD PTR es:[edi]
  4116b4:	add    bh,BYTE PTR [edi+0x1dfdd679]
  4116ba:	ret    0x4843
  4116bd:	add    BYTE PTR [edi+0x7e592409],cl
  4116c3:	gs jl  0x411742
  4116c6:	xor    bh,BYTE PTR [esi+0x6e9d36c7]
  4116cc:	xchg   DWORD PTR [edx+edi*1-0x7d],ecx
  4116d0:	imul   ebx,DWORD PTR [edx-0x2df69d3c],0xa7a734a9
  4116da:	gs sub al,0xcb
  4116dd:	inc    edx
  4116de:	aad    0x34
  4116e0:	int3   
  4116e1:	dec    eax
  4116e2:	test   BYTE PTR [ebp-0x6ad5ea2b],dh
  4116e8:	push   ebx
  4116e9:	adc    BYTE PTR [edx+0x72aed76b],al
  4116ef:	icebp  
  4116f0:	loop   0x411717
  4116f2:	jmp    0xad96:0x6cd93af5
  4116f9:	fstp   QWORD PTR [ebp+0x56]
  4116fc:	push   esi
  4116fd:	(bad)  
  4116fe:	mov    bh,al
  411700:	arpl   WORD PTR [esi+ecx*2+0x4c],cx
  411704:	xor    bh,BYTE PTR [esp+edi*1]
  411707:	inc    edx
  411708:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411709:	aad    0x21
  41170b:	popf   
  41170c:	int    0xd0
  41170e:	push   0x9e9f29b7
  411713:	push   edx
  411714:	sub    BYTE PTR [eax+eiz*8-0x6d1449fe],bl
  41171b:	sbb    ebx,DWORD PTR [edx]
  41171d:	mov    ds:0x8d126cd9,al
  411722:	(bad)  
  411723:	cmp    DWORD PTR [eax],edi
  411725:	sub    al,0xb0
  411727:	mov    cl,0xb1
  411729:	mov    DWORD PTR [ebx+ecx*8],ebp
  41172c:	or     al,0x8f
  41172e:	in     al,0x99
  411730:	popf   
  411731:	popf   
  411732:	inc    esi
  411733:	push   ecx
  411734:	adc    eax,0xe946c6c6
  411739:	pop    edx
  41173a:	push   ss
  41173b:	aaa    
  41173c:	fidivr WORD PTR [ebx+0x3ec1c1c1]
  411742:	stc    
  411743:	loope  0x4117a6
  411745:	pop    esi
  411746:	jl     0x411739
  411748:	ret    
  411749:	les    esp,FWORD PTR [edx+0x31]
  41174c:	ficomp DWORD PTR [ebp+0x4744462e]
  411752:	push   ebx
  411753:	xor    eax,0x6c665924
  411758:	ins    BYTE PTR es:[edi],dx
  411759:	pushf  
  41175a:	data16 mov bl,0xc1
  41175d:	repnz repnz pop ebp
  411760:	mov    ah,BYTE PTR [edi]
  411762:	daa    
  411763:	inc    esp
  411764:	dec    esp
  411765:	xchg   ebx,eax
  411766:	push   esi
  411767:	stos   DWORD PTR es:[edi],eax
  411768:	leave  
  411769:	icebp  
  41176a:	icebp  
  41176b:	adc    DWORD PTR [edx-0x6f6d80dc],ecx
  411771:	add    BYTE PTR [esi],bl
  411773:	sbb    eax,DWORD PTR [esp+eax*1-0x6dbf6710]
  41177a:	in     al,0xd7
  41177c:	and    edx,DWORD PTR [ecx]
  41177e:	xchg   ebx,eax
  41177f:	fnstcw WORD PTR [ecx+0x1f9e0439]
  411785:	scas   al,BYTE PTR es:[edi]
  411786:	test   al,0x2a
  411788:	inc    ebx
  411789:	stc    
  41178a:	cmp    al,0xb9
  41178c:	fcom   QWORD PTR [eax]
  41178e:	fcmovnu st,st(3)
  411790:	pop    ebx
  411791:	in     al,dx
  411792:	in     eax,dx
  411793:	in     al,dx
  411794:	nop
  411795:	leave  
  411796:	cwd    
  411798:	sahf   
  411799:	cdq    
  41179a:	and    eax,0x68d34a95
  41179f:	xor    al,0x50
  4117a1:	push   ebp
  4117a2:	or     eax,0x3a23d05c
  4117a7:	call   0xddd9:0xc44a92a6
  4117ae:	fucom  st(1)
  4117b0:	clc    
  4117b1:	clc    
  4117b2:	mov    bl,ah
  4117b4:	mov    ds:0x47864663,eax
  4117b9:	js     0x4117a5
  4117bb:	loop   0x4117f6
  4117bd:	shr    cl,cl
  4117bf:	xor    al,0xa9
  4117c1:	inc    esp
  4117c2:	sbb    al,0xdb
  4117c4:	mov    cl,0xf9
  4117c6:	jmp    0x6895:0x2e52ef3b
  4117cd:	ss fwait
  4117cf:	jl     0x4117b9
  4117d1:	stc    
  4117d2:	out    0x48,eax
  4117d4:	les    esp,FWORD PTR [ebx-0x4c]
  4117d7:	pop    edx
  4117d8:	ins    DWORD PTR es:[edi],dx
  4117d9:	repnz mov ecx,0x2cef372c
  4117df:	mov    cl,0xbe
  4117e1:	mov    esi,0xcd90420e
  4117e6:	gs cdq 
  4117e8:	popf   
  4117e9:	sahf   
  4117ea:	inc    esp
  4117eb:	xlat   BYTE PTR ds:[ebx]
  4117ec:	xor    eax,0xf514a952
  4117f1:	inc    esi
  4117f2:	xchg   ebx,eax
  4117f3:	jp     0x411798
  4117f5:	add    DWORD PTR [eax+0x1bd428a2],eax
  4117fb:	jne    0x41180b
  4117fd:	push   cs
  4117fe:	imul   BYTE PTR [ecx]
  411800:	adc    al,0xa
  411802:	in     al,0xf3
  411804:	ret    
  411805:	dec    esp
  411806:	iret   
  411807:	into   
  411808:	adc    cl,BYTE PTR [ebp+0x191918c7]
  41180e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41180f:	push   edx
  411810:	lods   eax,DWORD PTR ds:[esi]
  411811:	shr    BYTE PTR [edi+edx*8-0x76f732cf],1
  411818:	js     0x4117a6
  41181a:	in     eax,dx
  41181b:	lea    ecx,ds:0x4316ad5a
  411821:	inc    ebx
  411822:	stc    
  411823:	dec    edi
  411824:	dec    bl
  411826:	(bad)  
  411828:	jge    0x411817
  41182a:	repz lahf 
  41182c:	cli    
  41182d:	fs out 0x8c,eax
  411830:	mov    ebx,0x121043c
  411835:	cmp    al,0x16
  411837:	clc    
  411838:	leave  
  411839:	lahf   
  41183a:	stc    
  41183b:	fstp   DWORD PTR [eax+edx*4-0x528b701c]
  411842:	ss stos BYTE PTR es:[edi],al
  411844:	lods   al,BYTE PTR ds:[esi]
  411845:	xor    BYTE PTR [ebx],dh
  411847:	xor    ecx,DWORD PTR [ebp+0x2f2c69a6]
  41184d:	sub    eax,0xb13a6861
  411852:	push   0xb071c70c
  411857:	in     al,dx
  411858:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41185a:	loop   0x411865
  41185c:	or     ecx,DWORD PTR [ebx+0x773c58e7]
  411862:	mov    ds,WORD PTR [eax+0x2c]
  411865:	inc    esi
  411866:	cs fwait
  411868:	mov    eax,ds:0xe0e15a7c
  41186d:	pusha  
  41186e:	pop    ds
  41186f:	(bad)  
  411870:	mov    dh,0x99
  411872:	cdq    
  411873:	popf   
  411874:	ror    DWORD PTR [ebp+eax*8+0x8d3a748],0x24
  41187c:	pop    esp
  41187d:	add    DWORD PTR [edi+0x72e51a95],esp
  411883:	or     DWORD PTR [ebx-0x29],edx
  411886:	jno    0x4118e4
  411888:	pop    es
  411889:	and    DWORD PTR [edx+eax*2],eax
  41188c:	adc    cl,BYTE PTR [eax-0x4e]
  41188f:	test   BYTE PTR [ebp-0x27],ch
  411892:	je     0x4118ce
  411894:	pop    ebp
  411895:	pop    edx
  411896:	int    0x16
  411898:	lods   eax,DWORD PTR ds:[esi]
  411899:	push   esi
  41189a:	sbb    ecx,DWORD PTR [ecx-0x6e]
  41189d:	push   eax
  41189e:	push   ebp
  41189f:	xchg   ebp,eax
  4118a0:	mov    BYTE PTR [ecx],bl
  4118a2:	shl    DWORD PTR [ecx+0x5c],0xe
  4118a6:	push   cs
  4118a7:	(bad)  
  4118a8:	pop    ecx
  4118a9:	pop    esi
  4118aa:	pop    ecx
  4118ab:	and    eax,0x4a934c99
  4118b0:	and    eax,0x29f97cb9
  4118b5:	mov    cs,WORD PTR [ebx]
  4118b7:	add    eax,0xe39e2dce
  4118bc:	call   0xb81ca1b9
  4118c1:	outs   dx,BYTE PTR ds:[esi]
  4118c2:	shr    DWORD PTR [eax+0x13c789d7],1
  4118c8:	mov    WORD PTR [ebp+0x4c],cs
  4118cb:	push   eax
  4118cc:	scas   eax,DWORD PTR es:[edi]
  4118cd:	xlat   BYTE PTR ds:[ebx]
  4118ce:	push   0x1b341a36
  4118d3:	or     eax,0x11617e6
  4118d8:	mov    DWORD PTR [ecx+0x278a0989],esi
  4118de:	inc    ebp
  4118df:	mov    ds:0x63a318b1,al
  4118e4:	arpl   bx,si
  4118e6:	out    dx,eax
  4118e7:	mov    esi,0xc0f3def7
  4118ec:	push   edi
  4118ed:	into   
  4118ee:	mov    eax,0x121043db
  4118f3:	shl    BYTE PTR [ebx-0x7f],0xd3
  4118f7:	jb     0x4118f2
  4118f9:	test   DWORD PTR [esi+ebp*2+0x68],esi
  4118fd:	mov    eax,0x75b068d9
  411902:	js     0x411944
  411904:	cs xchg edi,eax
  411906:	es aas 
  411908:	xor    al,0x44
  41190a:	lods   eax,DWORD PTR ds:[esi]
  41190b:	pop    edx
  41190c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41190d:	cs stos BYTE PTR es:[edi],al
  41190f:	in     al,dx
  411910:	in     eax,dx
  411911:	in     eax,dx
  411912:	xor    bh,BYTE PTR [edx]
  411914:	ss inc esi
  411916:	stos   DWORD PTR es:[edi],eax
  411917:	aad    0x44
  411919:	xchg   ecx,eax
  41191a:	adc    eax,0x76976eac
  41191f:	mov    ebx,0xc469a68d
  411924:	jecxz  0x411957
  411926:	cmp    bl,BYTE PTR [ebp+0x142852e]
  41192c:	pop    esp
  41192d:	xchg   edi,eax
  41192e:	fs sub cl,cl
  411931:	test   DWORD PTR [ebx-0x19],esi
  411934:	xor    ah,dh
  411936:	or     BYTE PTR [edx+0x3a1861a6],bl
  41193c:	out    dx,eax
  41193d:	mov    esp,0x7071efb
  411942:	sti    
  411943:	in     al,dx
  411944:	in     eax,dx
  411945:	out    dx,eax
  411946:	jae    0x41193d
  411948:	cdq    
  411949:	sub    edi,DWORD PTR [ebx+edi*8]
  41194c:	in     al,dx
  41194d:	xor    eax,0x988e0e0e
  411952:	pushf  
  411953:	sbb    BYTE PTR [edi-0x48dd5b0],ah
  411959:	(bad)  
  41195a:	sub    eax,0xf336ad9a
  41195f:	repz repz int3 
  411962:	int    0xce
  411964:	adc    BYTE PTR [ecx],dh
  411966:	and    ch,al
  411968:	mov    edx,0xe49d2646
  41196d:	lea    ebp,[edi-0x42]
  411970:	int    0xf6
  411972:	(bad)  
  411973:	ss xchg edx,edi
  411976:	adc    DWORD PTR [edi],ebx
  411978:	(bad)  
  411979:	fsubr  DWORD PTR [ebx-0x1c]
  41197c:	jb     0x411997
  41197e:	int3   
  41197f:	push   0x463c5894
  411984:	mov    eax,ds:0x5aeac050
  411989:	inc    esp
  41198a:	arpl   WORD PTR [ecx+0x24],dx
  41198d:	dec    ecx
  41198e:	bound  edi,QWORD PTR [ebp+0x6d]
  411991:	(bad)  
  411992:	in     eax,0xbb
  411994:	ja     0x411a06
  411996:	pop    esp
  411997:	xchg   edi,eax
  411998:	sub    edx,DWORD PTR [edi-0x52]
  41199b:	xchg   edx,eax
  41199c:	dec    esp
  41199d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41199e:	cmp    DWORD PTR [edx],edi
  4119a0:	cmp    BYTE PTR [eax-0x66dac6ae],ah
  4119a6:	dec    esi
  4119a7:	jno    0x411977
  4119a9:	xor    al,0xd1
  4119ab:	xor    al,0x4d
  4119ad:	scas   al,BYTE PTR es:[edi]
  4119ae:	push   esi
  4119af:	sub    ebp,DWORD PTR [edi+0x63c01210]
  4119b5:	adc    DWORD PTR [eax-0x13fce200],0xa7fefed
  4119bf:	dec    ecx
  4119c0:	ror    DWORD PTR [eax+ebp*8+0x766ddbb4],0x76
  4119c8:	mov    dh,0x49
  4119ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119cb:	shl    BYTE PTR [ebx+esi*4+0x59],cl
  4119cf:	mov    ah,BYTE PTR [edi]
  4119d1:	daa    
  4119d2:	mov    eax,0x9d2a4bae
  4119d7:	inc    esi
  4119d8:	xchg   esi,eax
  4119d9:	adc    eax,0x82f1122
  4119de:	mov    eax,0x7a8774b4
  4119e3:	lods   eax,DWORD PTR ds:[esi]
  4119e4:	dec    esi
  4119e5:	mov    ebx,0x4f1922d3
  4119ea:	xchg   edx,eax
  4119eb:	int    0x65
  4119ed:	imul   edx,esp,0x41bae8eb
  4119f3:	mov    ds:0x6ad9a4d9,eax
  4119f8:	and    ch,BYTE PTR [ebx]
  4119fa:	adc    cl,BYTE PTR [edx+0x74e9d26c]
  411a00:	mov    al,0xba
  411a02:	pop    esi
  411a03:	inc    ecx
  411a04:	(bad)  
  411a05:	scas   al,BYTE PTR es:[edi]
  411a06:	test   eax,0x6d818698
  411a0b:	mov    ebx,0x6a319324
  411a10:	mov    ch,0x3a
  411a12:	mov    ch,0x5a
  411a14:	sbb    eax,0xedd2eacb
  411a19:	je     0x411a4b
  411a1b:	or     eax,0x8a2c589d
  411a20:	and    al,0x4
  411a22:	mov    fs,ebx
  411a24:	loop   0x411a20
  411a26:	dec    ebx
  411a27:	push   es
  411a28:	(bad)  
  411a29:	bound  esi,QWORD PTR [ecx+0x1a]
  411a2c:	int    0x26
  411a2e:	inc    edi
  411a2f:	inc    edi
  411a30:	(bad)  
  411a31:	ins    BYTE PTR es:[edi],dx
  411a32:	outs   dx,BYTE PTR ds:[esi]
  411a33:	ins    DWORD PTR es:[edi],dx
  411a34:	xchg   ecx,eax
  411a35:	iret   
  411a36:	out    0x89,eax
  411a38:	(bad)  
  411a39:	jecxz  0x411a97
  411a3b:	jg     0x411a2b
  411a3d:	cmp    DWORD PTR [ecx+ebx*2],esp
  411a40:	data16 cmp BYTE PTR [edi],bh
  411a43:	int3   
  411a44:	xlat   BYTE PTR ds:[ebx]
  411a45:	mov    esi,0x952a15fe
  411a4a:	xor    bl,BYTE PTR [edx-0x26945eea]
  411a50:	push   esp
  411a51:	dec    edx
  411a52:	inc    ebp
  411a53:	out    dx,al
  411a54:	fdivr  QWORD PTR [esi-0x30c1af3b]
  411a5a:	in     al,0xd4
  411a5c:	xor    al,0x3b
  411a5e:	cmp    edi,DWORD PTR [ebx]
  411a60:	sbb    al,0x1d
  411a62:	sbb    al,0xa0
  411a64:	jmp    0x411a2c
  411a66:	out    0x80,eax
  411a68:	pop    ds
  411a69:	aas    
  411a6a:	jmp    0x411aea
  411a6c:	movups XMMWORD PTR [esi+0x5f1ccf01],xmm4
  411a73:	clc    
  411a74:	loop   0x411a45
  411a76:	imul   eax,DWORD PTR [edi+0x47],0xffffffc7
  411a7a:	pop    edi
  411a7b:	mov    BYTE PTR [ebp-0x33],al
  411a7e:	fdiv   st(0),st
  411a80:	les    esp,FWORD PTR [ebp*8-0x2f3cf48a]
  411a87:	pop    ecx
  411a88:	pop    eax
  411a89:	cmp    bh,cl
  411a8b:	rcl    al,1
  411a8d:	adc    BYTE PTR [esi+0x4a952519],ah
  411a93:	shr    DWORD PTR [esi+esi*1+0x28],cl
  411a97:	xchg   edi,eax
  411a98:	dec    edx
  411a99:	inc    esp
  411a9a:	and    ah,BYTE PTR [esi]
  411a9c:	xchg   BYTE PTR [ecx-0x50],ah
  411a9f:	mov    bl,0xbd
  411aa1:	dec    ebp
  411aa2:	mov    bl,0xd1
  411aa4:	les    esi,FWORD PTR [esi-0x19e8e993]
  411aaa:	mov    ebp,0x8674a022
  411aaf:	cld    
  411ab0:	push   eax
  411ab1:	mov    cs,WORD PTR [ebp+0x7dde6dad]
  411ab7:	idiv   DWORD PTR ds:0x440b8f8e
  411abd:	int3   
  411abe:	sub    BYTE PTR [ebx-0x49a73cdd],ah
  411ac4:	int    0xf4
  411ac6:	hlt    
  411ac7:	adc    al,0x92
  411ac9:	and    al,0xb3
  411acb:	mov    dh,0x7e
  411acd:	(bad)  
  411ace:	cmc    
  411acf:	jnp    0x411abc
  411ad1:	mov    eax,0x51a3442e
  411ad6:	adc    al,0x45
  411ad8:	and    DWORD PTR [edx],ebx
  411ada:	mov    esi,DWORD PTR [ecx]
  411adc:	xor    eax,0xa151c939
  411ae1:	shr    BYTE PTR [ebp+0x3fd9b75b],0x3c
  411ae8:	inc    eax
  411ae9:	ror    DWORD PTR [esi+eax*2],cl
  411aec:	mov    DWORD PTR [esi+0x30],0x178b934d
  411af3:	into   
  411af4:	and    ecx,DWORD PTR [ecx+0x32]
  411af7:	(bad)  
  411af9:	out    0x37,al
  411afb:	cmp    DWORD PTR [esi],edi
  411afd:	ds (bad) 
  411aff:	mov    dl,0x2c
  411b01:	cs cmp eax,0xd3551975
  411b07:	adc    BYTE PTR [edx-0x20],al
  411b0a:	mov    edx,0x954ab52e
  411b0f:	inc    esi
  411b10:	mov    ds:0x2fcdcce,eax
  411b15:	xchg   edx,eax
  411b16:	sub    al,0xb8
  411b18:	jne    0x411afd
  411b1a:	push   es
  411b1b:	xchg   ebp,eax
  411b1c:	push   0xffffff85
  411b1e:	pop    eax
  411b1f:	xor    al,0x4e
  411b21:	xor    al,0x1a
  411b23:	jecxz  0x411b13
  411b25:	in     eax,dx
  411b26:	pop    ebx
  411b27:	xchg   esp,eax
  411b28:	retf   
  411b29:	and    eax,0xfa44b162
  411b2e:	rcr    DWORD PTR [edi-0x1c80287],cl
  411b34:	fistp  QWORD PTR [edi-0x3]
  411b37:	fcmovnb st,st(5)
  411b39:	mov    bl,0xee
  411b3b:	dec    DWORD PTR [edi]
  411b3d:	cmp    al,BYTE PTR [edx+0xb]
  411b40:	loopne 0x411ace
  411b42:	xor    DWORD PTR [ebx+ecx*8+0x53a74d5d],edx
  411b49:	repz shr DWORD PTR [eax+0x23972649],1
  411b50:	push   0x6a
  411b52:	inc    esp
  411b53:	mov    ds:0x2ab56a31,eax
  411b58:	shr    DWORD PTR [eax+0x20992249],1
  411b5e:	fwait
  411b5f:	sbb    esp,edx
  411b61:	(bad)  
  411b63:	sub    bl,BYTE PTR [ebx-0x65]
  411b66:	sbb    ebx,DWORD PTR [esi+ebx*4+0x5f9b9996]
  411b6d:	pusha  
  411b6e:	bound  esp,QWORD PTR [edx-0x76]
  411b71:	popf   
  411b72:	in     eax,dx
  411b73:	dec    ebp
  411b74:	shr    cl,cl
  411b76:	xor    al,0x8d
  411b78:	adc    bp,WORD PTR [ebx-0x21c69c95]
  411b7f:	inc    edx
  411b80:	sbb    eax,0x769b76ed
  411b85:	mov    ebx,0xc8db6d83
  411b8a:	inc    edx
  411b8b:	xor    BYTE PTR [edx],bh
  411b8d:	xchg   edx,eax
  411b8e:	inc    edi
  411b8f:	xlat   BYTE PTR ds:[ebx]
  411b90:	or     eax,0xcd38c952
  411b95:	inc    esi
  411b96:	xchg   ebx,eax
  411b97:	outs   dx,DWORD PTR ds:[esi]
  411b98:	out    dx,al
  411b99:	in     eax,dx
  411b9a:	shr    DWORD PTR [eax+0x76d1d9d7],1
  411ba0:	cdq    
  411ba1:	fwait
  411ba2:	popf   
  411ba3:	and    DWORD PTR [esi],edx
  411ba5:	xor    eax,0x322d7769
  411baa:	leave  
  411bab:	sub    BYTE PTR [edi-0x21],ch
  411bae:	cmp    BYTE PTR [esi+0x12405270],ah
  411bb4:	add    BYTE PTR [ebp+0x738639f9],0x59
  411bbb:	(bad)  
  411bbd:	push   cs
  411bbe:	stos   BYTE PTR es:[edi],al
  411bbf:	stos   BYTE PTR es:[edi],al
  411bc0:	(bad)  
  411bc1:	fld    TBYTE PTR [ebp-0x74]
  411bc4:	dec    eax
  411bc5:	test   BYTE PTR [esi-0x4d],dl
  411bc8:	inc    ebp
  411bc9:	xor    bl,BYTE PTR [ecx-0x7080809c]
  411bcf:	in     eax,dx
  411bd0:	lods   eax,DWORD PTR ds:[esi]
  411bd1:	sub    eax,0x984e4e4e
  411bd6:	sahf   
  411bd7:	cdq    
  411bd8:	arpl   cx,si
  411bda:	ret    0x5279
  411bdd:	(bad)  [ecx+ebp*4]
  411be0:	sub    BYTE PTR fs:[edx-0x4b],0x8a
  411be5:	jmp    0x411ba1
  411be7:	(bad)
  411beb:	cdq    
  411bec:	sub    al,0x9b
  411bee:	sbb    esi,edi
  411bf0:	test   al,0x56
  411bf2:	sub    ch,BYTE PTR [eax-0x46]
  411bf5:	into   
  411bf6:	imul   edi,DWORD PTR [ecx-0x11528ce4],0x59eac02b
  411c00:	idiv   edi
  411c02:	pop    es
  411c03:	sbb    eax,0x319c0121
  411c08:	push   esi
  411c09:	push   esi
  411c0a:	push   esi
  411c0b:	ds sahf 
  411c0d:	iret   
  411c0e:	(bad)  
  411c10:	fldcw  WORD PTR [esi+edx*4-0x16]
  411c14:	imul   ecx,DWORD PTR [ecx-0x2735d388],0x4eed04d8
  411c1e:	fwait
  411c1f:	in     eax,0xa5
  411c21:	mov    ebx,0x3de1ba68
  411c26:	aam    0x43
  411c28:	xchg   esi,eax
  411c29:	push   eax
  411c2a:	push   esp
  411c2b:	xchg   ebp,eax
  411c2c:	jp     0x411beb
  411c2e:	mov    fs,WORD PTR [ecx+0x4747a4eb]
  411c34:	mov    ebp,eax
  411c36:	arpl   WORD PTR [ebx+edx*8+0x12c5ca29],sp
  411c3d:	dec    ebx
  411c3e:	sub    ebp,DWORD PTR [ebx]
  411c40:	enter  0xd042,0x6e
  411c44:	ja     0x411c5e
  411c46:	sbb    esi,ecx
  411c48:	push   ebx
  411c49:	stos   DWORD PTR es:[edi],eax
  411c4a:	aad    0x51
  411c4c:	push   esp
  411c4d:	adc    eax,0xeeeec484
  411c52:	add    DWORD PTR [ebx+0x3b],ebx
  411c55:	cmp    ecx,DWORD PTR [esi+ecx*4+0x1a18628c]
  411c5c:	fldcw  WORD PTR [esi+eax*1-0x25]
  411c60:	mov    dh,0x49
  411c62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c63:	rcl    BYTE PTR [ebx+ecx*8+0x12e58a15],cl
  411c6a:	aad    0x4a
  411c6c:	adc    eax,0x588a6a6b
  411c71:	xor    al,0x4a
  411c73:	cs xchg edi,eax
  411c75:	repz retf 0x558b
  411c79:	(bad)  
  411c7a:	in     eax,0xd5
  411c7c:	jne    0x411c14
  411c7e:	push   edi
  411c7f:	push   edi
  411c80:	mov    BYTE PTR [edx-0x1819e9af],bl
  411c86:	mov    ecx,0x272af576
  411c8b:	lds    edx,FWORD PTR [edx]
  411c8d:	shl    DWORD PTR [ebx],cl
  411c8f:	push   ebx
  411c90:	ins    BYTE PTR es:[edi],dx
  411c91:	outs   dx,BYTE PTR ds:[esi]
  411c92:	ins    BYTE PTR es:[edi],dx
  411c93:	mov    cl,0xbd
  411c95:	mov    ch,0x45
  411c97:	mov    ebx,0xa27c61dd
  411c9c:	sub    DWORD PTR [esi+0x556ad4eb],0x3a
  411ca3:	popf   
  411ca4:	push   cs
  411ca5:	(bad)  [esi-0x79]
  411ca8:	dec    ebx
  411ca9:	xchg   edi,eax
  411caa:	das    
  411cab:	shr    DWORD PTR [esi-0x4b],cl
  411cae:	sbb    DWORD PTR ds:0x2a54a71d,ebx
  411cb4:	loop   0x411c98
  411cb6:	xor    BYTE PTR [ecx],bh
  411cb8:	xor    eax,0x65dba74d
  411cbd:	jne    0x411d38
  411cbf:	jmp    0xced8fd39
  411cc4:	mov    edx,0x8e83fff
  411cc9:	or     eax,esp
  411ccb:	mov    WORD PTR [ecx+0x7c],?
  411cce:	jl     0x411ccc
  411cd0:	pop    ecx
  411cd1:	test   ah,al
  411cd3:	cld    
  411cd4:	loop   0x411cd8
  411cd6:	mov    ebx,0x8f145bdb
  411cdb:	(bad)
  411cdf:	sbb    BYTE PTR [edx-0x5a2c48b2],bh
  411ce5:	fldcw  WORD PTR [eax+0x52]
  411ce8:	sub    al,0x97
  411cea:	cwde   
  411ceb:	fwait
  411cec:	fwait
  411ced:	(bad)  
  411cee:	jne    0x411d31
  411cf0:	push   ebp
  411cf1:	push   ebp
  411cf2:	mov    edx,0x54a945b6
  411cf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411cf8:	jb     0x411d54
  411cfa:	and    DWORD PTR [ecx-0x22fd1fb4],ebx
  411d00:	dec    esi
  411d01:	fwait
  411d02:	xchg   esi,eax
  411d03:	ins    DWORD PTR es:[edi],dx
  411d04:	shr    DWORD PTR [esi+esi*1-0x67],cl
  411d08:	popf   
  411d09:	cdq    
  411d0a:	inc    esi
  411d0b:	xlat   BYTE PTR ds:[ebx]
  411d0c:	or     eax,0x5340dd0c
  411d11:	adc    eax,0xafd5fcbe
  411d16:	jno    0x411cf8
  411d18:	das    
  411d19:	or     esi,esi
  411d1b:	retf   0x2fcb
  411d1e:	jns    0x411d62
  411d20:	jl     0x411d74
  411d22:	fs je  0x411d5d
  411d25:	iret   
  411d26:	out    dx,al
  411d27:	rol    DWORD PTR [ecx],0xb7
  411d2a:	outs   dx,BYTE PTR ds:[esi]
  411d2b:	fdivrp st(2),st
  411d2d:	retf   0x8583
  411d30:	loopne 0x411cfc
  411d32:	in     eax,0xa7
  411d34:	mov    bh,al
  411d36:	loop   0x411d20
  411d38:	mov    edx,0xf846698a
  411d3d:	ret    
  411d3e:	aas    
  411d3f:	cli    
  411d40:	xor    ah,BYTE PTR [ebp-0x4c996e9e]
  411d46:	lds    esi,FWORD PTR [ebx]
  411d48:	dec    edi
  411d49:	pop    edi
  411d4a:	inc    esi
  411d4b:	aad    0x54
  411d4d:	sbb    ch,BYTE PTR [ebp-0x1f1271ea]
  411d53:	cmp    BYTE PTR [esi],cl
  411d55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d56:	sbb    DWORD PTR ds:0x8b124891,esp
  411d5c:	lds    edi,FWORD PTR [ecx-0x34e9148d]
  411d62:	retf   
  411d63:	dec    ebx
  411d64:	sub    BYTE PTR [edx+0x7a1f73c2],cl
  411d6a:	add    DWORD PTR [ecx+0x8],ecx
  411d6d:	push   cs
  411d6e:	push   cs
  411d6f:	movaps XMMWORD PTR [ebp+0x912248b],xmm2
  411d76:	into   
  411d77:	lahf   
  411d78:	mov    edi,0x30f0d0c4
  411d7d:	pop    es
  411d7e:	sti    
  411d7f:	sti    
  411d80:	fs xchg edx,esi
  411d83:	pop    ds
  411d84:	(bad)  
  411d85:	pop    edi
  411d86:	jle    0x411d81
  411d88:	lahf   
  411d89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d8a:	dec    DWORD PTR [ebx-0x2d0107e1]
  411d90:	pop    ecx
  411d91:	pop    ecx
  411d93:	pop    es
  411d94:	sbb    DWORD PTR [ecx],esp
  411d96:	add    DWORD PTR [ecx+eiz*1+0x7e67f27e],ebx
  411d9d:	outs   dx,BYTE PTR ds:[esi]
  411d9e:	jle    0x411e05
  411da0:	jne    0x411d87
  411da2:	retf   0xe1d1
  411da5:	and    edi,eax
  411da7:	pop    es
  411da8:	inc    edi
  411da9:	or     bh,dl
  411dab:	shl    DWORD PTR [esi+0x1c],0xb6
  411daf:	ss aaa 
  411db1:	mov    eax,0xa322e170
  411db6:	jecxz  0x411d9b
  411db8:	adc    al,0x8e
  411dba:	push   cs
  411dbb:	xchg   ecx,eax
  411dbc:	test   DWORD PTR [edx+eiz*4+0xf0f0ca8],eax
  411dc3:	adc    ecx,DWORD PTR [ebx-0x769b6fd9]
  411dc9:	fwait
  411dca:	out    dx,eax
  411dcb:	mov    ebp,0xa552b54b
  411dd0:	fldcw  WORD PTR [edx+esi*1+0x39]
  411dd4:	xor    eax,0xcccccc9
  411dd9:	aad    0x6a
  411ddb:	xchg   ebp,eax
  411ddc:	js     0x411e0a
  411dde:	mov    cl,0xe1
  411de1:	adc    ebx,edi
  411de3:	sti    
  411de4:	pop    es
  411de5:	and    al,0x92
  411de7:	or     edx,esi
  411de9:	inc    ebx
  411dea:	inc    ebx
  411deb:	push   0xc8ac869a
  411df0:	push   0x38ed8a9a
  411df5:	pop    esi
  411df6:	shr    BYTE PTR [edi+0x2db6c5db],0x4
  411dfd:	add    dl,BYTE PTR [edi]
  411dff:	push   eax
  411e00:	xor    eax,0xb4125915
  411e05:	mov    ebx,0xab52a1d
  411e0a:	dec    edx
  411e0b:	push   ebx
  411e0c:	mov    eax,ds:0x4a92edd3
  411e11:	jns    0x411e5e
  411e13:	or     DWORD PTR [ebp+0x3e528d8e],0x385c70ad
  411e1d:	data16 jae 0x411e93
  411e20:	mov    esi,DWORD PTR [ecx-0x1919ae2f]
  411e26:	out    0x30,al
  411e28:	int    0xe7
  411e2a:	inc    ecx
  411e2b:	inc    eax
  411e2c:	sub    bl,BYTE PTR [ebp-0x7c9c949a]
  411e32:	dec    esi
  411e33:	mov    ebx,0xb4ebae8d
  411e38:	pop    ebx
  411e39:	dec    ebp
  411e3a:	mov    cs,WORD PTR [esi+0x595d598f]
  411e40:	and    DWORD PTR [edi],edi
  411e42:	cmp    al,0xcc
  411e44:	(bad)  
  411e46:	cmp    al,0xb6
  411e48:	ins    DWORD PTR es:[edi],dx
  411e49:	push   ebx
  411e4a:	cmp    BYTE PTR [esi],bh
  411e4c:	inc    edx
  411e4d:	push   ecx
  411e4e:	fs push edx
  411e50:	test   eax,0x9bedc8d4
  411e55:	mov    bh,0x5f
  411e57:	add    bh,BYTE PTR [esi-0x15]
  411e5a:	lods   al,BYTE PTR ds:[esi]
  411e5b:	(bad)  
  411e5c:	loope  0x411de1
  411e5e:	mov    WORD PTR [eax-0x52ef3200],ss
  411e64:	dec    esi
  411e65:	out    0xa5,eax
  411e67:	ins    BYTE PTR es:[edi],dx
  411e68:	ss xchg edi,eax
  411e6a:	cmp    BYTE PTR [esi],bh
  411e6c:	cmp    ah,BYTE PTR [eax-0x18cd6ae]
  411e72:	cld    
  411e73:	and    bh,bl
  411e75:	sti    
  411e76:	sti    
  411e77:	cmp    BYTE PTR [esi-0x77399675],cl
  411e7d:	daa    
  411e7e:	adc    bl,BYTE PTR [esi+0x39311e39]
  411e84:	fcomp  st(3)
  411e86:	mov    ds:0x6c623850,eax
  411e8b:	jl     0x411e29
  411e8d:	ins    BYTE PTR es:[edi],dx
  411e8e:	es mov esp,ebx
  411e91:	sub    ch,0x58
  411e94:	aam    0xeb
  411e96:	jne    0x411e6a
  411e98:	mov    DWORD PTR [ecx+esi*8],eax
  411e9b:	push   0x88b2cb14
  411ea0:	(bad)  
  411ea1:	bound  edi,QWORD PTR [ebx+edi*2-0x1188c90d]
  411ea8:	fadd   QWORD PTR [ebp+0x37]
  411eab:	or     al,0x9e
  411ead:	jnp    0x411ea5
  411eaf:	sbb    dl,bh
  411eb1:	scas   al,BYTE PTR es:[edi]
  411eb2:	cmp    al,0x43
  411eb4:	es popf 
  411eb6:	and    DWORD PTR [edi],esi
  411eb8:	xchg   esp,eax
  411eb9:	shl    DWORD PTR [ecx+0x1c],0xde
  411ebd:	jl     0x411eaa
  411ebf:	sbb    eax,0x2712a5ca
  411ec4:	lds    ecx,FWORD PTR [ecx]
  411ec6:	out    0x67,al
  411ec8:	out    0x79,eax
  411eca:	idiv   dl
  411ecc:	jne    0x411e68
  411ece:	lods   eax,DWORD PTR ds:[esi]
  411ecf:	es adc esp,ebx
  411ed2:	arpl   sp,bx
  411ed4:	mov    ebx,0xf2d2c5b7
  411ed9:	adc    dh,BYTE PTR [esi-0x350a8c9d]
  411edf:	push   ebp
  411ee0:	cs aas 
  411ee2:	jne    0x411e75
  411ee4:	mov    eax,ds:0x4cd910fc
  411ee9:	call   0xbe6f:0x5bc3ab56
  411ef0:	inc    ebp
  411ef1:	mov    ebp,0x6ba8a55a
  411ef6:	pop    esp
  411ef7:	mov    esi,0xbd5a997c
  411efc:	dec    esi
  411efd:	mov    ch,0xe2
  411eff:	stc    
  411f00:	sti    
  411f01:	test   eax,0xf6d19a4c
  411f06:	sbb    bl,dl
  411f08:	xor    esi,DWORD PTR [ebx]
  411f0a:	dec    eax
  411f0b:	mov    dl,0xc2
  411f0d:	out    0xbd,al
  411f0f:	or     eax,0x9626cd5a
  411f14:	gs push ecx
  411f16:	stos   DWORD PTR es:[edi],eax
  411f17:	aad    0xd8
  411f19:	(bad)  
  411f1b:	mov    eax,ds:0xd4f0a95a
  411f20:	in     eax,0x67
  411f22:	fcomp  st(3)
  411f24:	fist   DWORD PTR [edi]
  411f26:	mov    dh,0xd5
  411f28:	stc    
  411f29:	add    al,0x21
  411f2b:	add    DWORD PTR [ecx+ebp*1+0x43380242],ebx
  411f32:	cmp    BYTE PTR [esi-0x3676260b],dl
  411f38:	dec    ecx
  411f39:	cmp    ch,ch
  411f3b:	push   ss
  411f3c:	mov    edx,0x1e1f93a1
  411f41:	es push 0xffffffc6
  411f44:	nop
  411f45:	fs cdq 
  411f47:	inc    esi
  411f48:	mov    ds:0x640b248e,eax
  411f4d:	pop    ecx
  411f4e:	and    DWORD PTR [esi+0x7c747048],ebx
  411f54:	dec    eax
  411f55:	mov    cl,0x58
  411f57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f58:	fldcw  WORD PTR [edx+edx*1-0x47]
  411f5c:	sbb    al,0xe1
  411f5e:	fdivr  QWORD PTR [ecx-0x1311138d]
  411f64:	xchg   edx,eax
  411f65:	int    0x65
  411f67:	cmp    BYTE PTR [ecx],ch
  411f69:	xchg   ebp,eax
  411f6a:	imul   esi,DWORD PTR [esi],0x83b6d8ea
  411f70:	mov    ds:0x828a2828,al
  411f75:	lods   al,BYTE PTR ds:[esi]
  411f76:	enter  0x8e38,0x8d
  411f7a:	nop
  411f7b:	add    al,0x91
  411f7d:	mov    BYTE PTR [ecx+0x3a],al
  411f80:	xchg   ebx,eax
  411f81:	sbb    DWORD PTR es:[edi-0x2ac9249d],ecx
  411f88:	push   0xffffff85
  411f8a:	push   esi
  411f8b:	mov    ebx,0x255ab549
  411f90:	push   ss
  411f91:	lea    esp,[eax+0x76ad2aeb]
  411f97:	xchg   DWORD PTR [eax-0x3c],ebx
  411f9a:	shl    BYTE PTR [ecx+0x1d],0x5a
  411f9e:	lods   eax,DWORD PTR ds:[esi]
  411f9f:	es mov dl,0x2c
  411fa2:	and    ecx,DWORD PTR [ecx+0x2]
  411fa5:	and    DWORD PTR [edx+ebx*1],esp
  411fa8:	lea    esp,[esi]
  411faa:	call   0x4ce9:0xed962aa
  411fb1:	sbb    dl,bh
  411fb3:	jne    0x411f4e
  411fb5:	cdq    
  411fb6:	popf   
  411fb7:	gs ja  0x412031
  411fba:	xchg   edi,eax
  411fbb:	in     eax,0xa5
  411fbd:	mov    ah,BYTE PTR gs:[ebp+0x5c2e1722]
  411fc4:	in     al,0xc2
  411fc6:	lds    ecx,FWORD PTR [ebx-0x5c]
  411fc9:	rcr    DWORD PTR [ecx],cl
  411fcb:	mov    ds:0x4a9518d1,al
  411fd0:	sbb    DWORD PTR [ebp-0x6f],eax
  411fd3:	dec    ecx
  411fd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411fd5:	ror    BYTE PTR [esp+ecx*2+0x4e],cl
  411fd9:	mov    dl,0xb3
  411fdb:	mov    ch,0x4d
  411fdd:	mov    ecx,0x24924254
  411fe2:	dec    esi
  411fe3:	dec    esi
  411fe4:	mov    gs,WORD PTR [ecx]
  411fe6:	xchg   ebp,eax
  411fe7:	mov    dh,BYTE PTR [esp+ebp*1-0x15]
  411feb:	sar    edi,cl
  411fed:	out    0x6f,eax
  411fef:	std    
  411ff0:	mov    dh,0xf2
  411ff2:	xchg   edi,eax
  411ff3:	ds neg ecx
  411ff6:	jo     0x411fa5
  411ff8:	shl    BYTE PTR [ebx],0x42
  411ffb:	dec    eax
  411ffc:	add    BYTE PTR [edi-0x7c],ah
  411fff:	jg     0x411ff1
  412001:	adc    edi,DWORD PTR [edi]
  412003:	xchg   ebp,eax
  412004:	mov    ch,0xac
  412006:	out    dx,al
  412007:	retf   
  412008:	mov    dl,0x90
  41200a:	mov    eax,0xa612e170
  41200f:	imul   edx,DWORD PTR [eax+0x2e],0xef555096
  412016:	xor    DWORD PTR [ebx-0x33],ebx
  412019:	and    WORD PTR [ebp-0x6597b445],0xa
  412021:	scas   al,BYTE PTR es:[edi]
  412022:	dec    ebx
  412023:	and    al,0x62
  412025:	mov    ds:0x20b82aa9,al
  41202a:	sub    ecx,DWORD PTR [edx]
  41202c:	(bad)  [edx+ebx*1+0x45]
  412030:	xchg   esi,eax
  412031:	leave  
  412032:	data16 rcr BYTE PTR [esp+ebx*4-0x49454f64],cl
  41203a:	push   cs
  41203b:	scas   al,BYTE PTR es:[edi]
  41203c:	dec    ebx
  41203d:	stos   DWORD PTR es:[edi],eax
  41203e:	frstor [esi+0x66]
  412041:	jp     0x412049
  412043:	inc    ebp
  412044:	xchg   edx,eax
  412045:	mov    esp,0x93114249
  41204a:	pop    ebx
  41204b:	ja     0x411fe3
  41204d:	(bad)  
  41204f:	fldenv [ecx]
  412051:	lahf   
  412052:	pop    ds
  412053:	bound  esp,QWORD PTR [edx+0x62]
  412056:	xor    BYTE PTR [ebx-0x75],0x8b
  41205a:	in     al,dx
  41205b:	in     eax,dx
  41205c:	in     eax,dx
  41205d:	xor    edi,DWORD PTR [ebx]
  41205f:	xor    ecx,DWORD PTR [ebx-0x5f]
  412062:	pop    eax
  412063:	fs ja  0x4120dd
  412066:	(bad)
  41206a:	aam    0xe4
  41206c:	adc    al,0x43
  41206e:	mov    ecx,0x6778b1c
  412073:	xchg   ebx,eax
  412074:	out    dx,al
  412075:	add    BYTE PTR [eax],al
  412077:	and    BYTE PTR [eax],al
  412079:	dec    ecx
  41207a:	inc    esp
  41207b:	inc    ecx
  41207c:	push   esp
  41207d:	mov    ecx,DWORD PTR [ebx-0x76d732bc]
  412083:	js     0x412021
  412085:	imul   DWORD PTR [esi-0x24]
  412088:	in     al,0xde
  41208a:	mov    BYTE PTR [esi],0x91
  41208d:	mov    cl,al
  41208f:	repz iret 
  412091:	cmp    eax,0x5ecf73c7
  412096:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412097:	jo     0x4120eb
  412099:	bound  esp,QWORD PTR fs:[edx-0x74]
  41209d:	jnp    0x412096
  41209f:	sub    DWORD PTR ss:[esi+ecx*4],edx
  4120a3:	inc    ecx
  4120a4:	or     BYTE PTR [ebx+ebx*8],ch
  4120a7:	mov    ds:0xb3b3ab59,al
  4120ac:	mov    ch,0x85
  4120ae:	and    al,0xcb
  4120b0:	and    al,0x52
  4120b2:	dec    ecx
  4120b3:	scas   al,BYTE PTR es:[edi]
  4120b4:	pop    ebp
  4120b5:	jg     0x41204d
  4120b7:	push   esi
  4120b8:	mov    ebx,0xe3972645
  4120bd:	pusha  
  4120be:	jg     0x4120df
  4120c0:	dec    ecx
  4120c1:	or     BYTE PTR [esi+0x66],ah
  4120c4:	data16 xor BYTE PTR [ebx+edx*8+0x5b],cl
  4120c9:	fcmovnbe st,st(0)
  4120cb:	mov    ebp,cs
  4120cd:	outs   dx,DWORD PTR ds:[esi]
  4120ce:	out    dx,al
  4120cf:	in     al,dx
  4120d0:	pop    ebp
  4120d1:	pop    es
  4120d2:	mov    esi,0xf1e3d671
  4120d7:	inc    ecx
  4120d8:	inc    ebp
  4120d9:	dec    eax
  4120da:	add    BYTE PTR [edi+0x4],ah
  4120dd:	inc    ebp
  4120de:	xchg   edx,eax
  4120df:	sahf   
  4120e0:	xor    edx,DWORD PTR [ebx-0x42222e57]
  4120e6:	ins    DWORD PTR es:[edi],dx
  4120e7:	xchg   BYTE PTR [edi-0x67a067ba],al
  4120ed:	arpl   WORD PTR [edi+0x67],bp
  4120f0:	mov    edx,ebx
  4120f2:	rcl    DWORD PTR [ebx-0x7c],cl
  4120f5:	sub    al,0x11
  4120f7:	shl    DWORD PTR [ebp-0x7c],1
  4120fa:	sbb    BYTE PTR [edx-0x4b],0x46
  4120fe:	mov    bl,0xd1
  412100:	fs icebp 
  412102:	cld    
  412103:	cmp    DWORD PTR [ecx+ecx*2],esp
  412106:	and    ah,BYTE PTR [edx+0x78]
  412109:	mov    bl,0xf2
  41210b:	ss out dx,al
  41210d:	ins    DWORD PTR es:[edi],dx
  41210e:	push   eax
  41210f:	lods   eax,DWORD PTR ds:[esi]
  412110:	xlat   BYTE PTR ds:[ebx]
  412111:	nop
  412112:	and    al,0x81
  412114:	in     eax,dx
  412115:	mov    eax,0xa34aaa68
  41211a:	fld    st(4)
  41211c:	jne    0x41213b
  41211e:	and    ah,BYTE PTR [esi+0x30c8c8c1]
  412124:	mov    dl,0xa2
  412126:	adc    BYTE PTR ds:0xbadd6e4d,dh
  41212c:	dec    ebp
  41212d:	mov    cl,0x58
  41212f:	mov    al,ds:0x30b3acd1
  412134:	aas    
  412135:	(bad)  
  412136:	fmul   st(4),st
  412138:	or     al,0x99
  41213a:	dec    esp
  41213b:	xchg   esi,eax
  41213c:	jl     0x41216c
  41213e:	(bad)
  412141:	add    DWORD PTR [ebx+0x6b],ebp
  412144:	imul   esi,DWORD PTR [edx+edi*4+0x5d],0x12
  412149:	mov    DWORD PTR [eax],edi
  41214b:	mov    esi,ebx
  41214d:	push   ebx
  41214e:	call   0x2b6dac0d
  412153:	sbb    BYTE PTR [edx-0x5aa94aba],bl
  412159:	aad    0x6e
  41215b:	mov    eax,ds:0x2c920aa8
  412160:	popa   
  412161:	pop    ecx
  412162:	ss xchg ebp,eax
  412164:	rcl    DWORD PTR [ebx+0xa],cl
  412167:	xchg   BYTE PTR [esi-0x3b273d15],cl
  41216d:	add    al,0x9a
  41216f:	stos   BYTE PTR es:[edi],al
  412170:	xor    bh,BYTE PTR [esi]
  412172:	xor    ecx,eax
  412174:	rcl    dl,cl
  412176:	pop    ebp
  412177:	mov    dh,0xb6
  412179:	ss nop
  41217b:	and    al,0x89
  41217d:	(bad)  
  41217e:	dec    esp
  41217f:	mov    esi,0xa942eb8c
  412184:	pop    esp
  412185:	bound  edi,QWORD PTR [edi+0x77]
  412188:	(bad)  
  412189:	push   esp
  41218a:	sub    cl,ch
  41218c:	in     eax,0x67
  41218e:	scas   al,BYTE PTR es:[edi]
  41218f:	nop
  412190:	dec    esp
  412191:	and    eax,0x253d3d39
  412196:	cmp    esi,DWORD PTR [esp+eax*2]
  412199:	sub    al,0x1a
  41219b:	push   edi
  41219c:	add    al,0xee
  41219e:	sub    eax,DWORD PTR [esp+eax*1+0xb086670]
  4121a5:	or     esi,0x5e2ee708
  4121ab:	cli    
  4121ac:	mov    eax,ds:0xe1fe3468
  4121b1:	inc    edx
  4121b2:	loope  0x41214c
  4121b4:	mov    ds:0xb3e50ce,ax
  4121ba:	cs push esp
  4121bc:	sub    dl,BYTE PTR ds:0xe336adda
  4121c2:	adc    edx,DWORD PTR [ebx]
  4121c4:	vfmsubps xmm5,xmm1,XMMWORD PTR [ebx-0x3b66ddb5],xmm0
  4121ce:	inc    esi
  4121cf:	adc    DWORD PTR [edx-0x70],eax
  4121d2:	leave  
  4121d3:	data16 xor BYTE PTR [ebp-0x696888f8],cl
  4121da:	sub    BYTE PTR ds:0x4d9a348b,dl
  4121e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121e1:	es daa 
  4121e3:	dec    ecx
  4121e4:	and    al,0x62
  4121e6:	les    esp,FWORD PTR [edx+0x79f28631]
  4121ec:	mov    cs,WORD PTR [edx]
  4121ee:	add    eax,0xa9969696
  4121f3:	(bad)  
  4121f4:	push   0x48
  4121f6:	mov    dl,0x8c
  4121f8:	adc    BYTE PTR [edx+0x5e5ab56],al
  4121fe:	adc    DWORD PTR [ebx],edx
  412200:	jno    0x4121ac
  412202:	mov    ch,0x2a
  412204:	sti    
  412205:	sti    
  412206:	pop    es
  412207:	sbb    BYTE PTR [edx-0x5e2254bf],bh
  41220d:	shr    DWORD PTR [eax-0x60],1
  412210:	test   al,0xa
  412212:	mov    ds:0x3638a3a3,eax
  412217:	lods   al,BYTE PTR ds:[esi]
  412218:	scas   al,BYTE PTR es:[edi]
  412219:	scas   al,BYTE PTR es:[edi]
  41221a:	push   ecx
  41221b:	sub    BYTE PTR [esi],dl
  41221d:	xchg   ecx,eax
  41221e:	and    al,0x19
  412220:	ror    DWORD PTR [eax+eiz*8-0x3118f128],cl
  412227:	popf   
  412228:	inc    edi
  412229:	xchg   edx,eax
  41222a:	and    al,0xde
  41222c:	mov    ebx,0xb5b58371
  412231:	xor    eax,0x8b0eadda
  412236:	out    0x16,eax
  412238:	enter  0x3264,0x24
  41223c:	xchg   ebx,eax
  41223d:	imul   esp,edx,0x3b3b38f1
  412243:	fistp  DWORD PTR [esp+edx*1+0x2992240b]
  41224a:	int3   
  41224b:	mov    cl,cl
  41224d:	cli    
  41224e:	fisubr DWORD PTR [edx]
  412250:	sub    ecx,DWORD PTR [ebx+0x4b]
  412253:	test   al,0x9a
  412255:	into   
  412256:	fdiv   st(4),st
  412258:	cmp    al,0xad
  41225a:	mov    bp,WORD PTR [edx-0x1b]
  41225e:	xchg   esp,eax
  41225f:	outs   dx,BYTE PTR ds:[esi]
  412260:	xlat   BYTE PTR ds:[ebx]
  412261:	and    bl,BYTE PTR [edi-0x572e59e1]
  412267:	push   ebx
  412268:	test   eax,0xfa3fccd4
  41226d:	sbb    edi,0xfffffffb
  412270:	in     eax,0xb3
  412272:	push   ds
  412273:	(bad)  
  412274:	cvtpi2ps xmm0,QWORD PTR [edx+0xb]
  412278:	loopne 0x412286
  41227a:	lock aaa 
  41227c:	jle    0x412262
  41227e:	out    dx,eax
  41227f:	stos   BYTE PTR es:[edi],al
  412280:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412281:	xchg   ebx,eax
  412282:	shl    BYTE PTR [edi+0x1e26db1c],cl
  412288:	mov    edx,DWORD PTR [ebx-0x57]
  41228b:	xchg   esp,eax
  41228c:	test   al,0x56
  41228e:	dec    esi
  41228f:	cdq    
  412290:	lahf   
  412291:	pop    ebx
  412292:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412293:	push   esi
  412294:	stos   DWORD PTR es:[edi],eax
  412295:	mov    ds:0xaa9a2aaa,al
  41229a:	bound  eax,QWORD PTR [esi+0x4c]
  41229d:	loop   0x412290
  41229f:	add    al,0x89
  4122a1:	fs xchg edx,eax
  4122a3:	std    
  4122a4:	mov    ebp,0xe8e8e7d
  4122a9:	enter  0xd0d,0x31
  4122ad:	xor    bh,BYTE PTR [edx+eax*2]
  4122b0:	sub    al,0x16
  4122b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122b3:	pop    esi
  4122b4:	scas   eax,DWORD PTR es:[edi]
  4122b5:	and    ecx,DWORD PTR [ecx]
  4122b7:	sub    DWORD PTR [ebx+ecx*2],0x62291324
  4122be:	mov    cl,0x38
  4122c0:	mov    cl,0x58
  4122c2:	mov    ebx,es
  4122c4:	mov    ds:0xf6f6f623,eax
  4122c9:	push   eax
  4122ca:	fs test esp,edi
  4122cd:	push   eax
  4122ce:	mov    fs,WORD PTR [edi-0x68d861d2]
  4122d4:	int    0x92
  4122d6:	int    0xa4
  4122d8:	call   0xe5bdde91
  4122dd:	popf   
  4122de:	ja     0x412289
  4122e0:	pushf  
  4122e1:	xchg   esi,eax
  4122e2:	imul   esi,DWORD PTR [esi],0x72bb5c1b
  4122e8:	test   esp,eax
  4122ea:	jae    0x4122bb
  4122ec:	shr    BYTE PTR [eax-0x4b],cl
  4122ef:	sbb    BYTE PTR [ebx],bl
  4122f1:	push   ds
  4122f2:	loop   0x4122ba
  4122f4:	int    0xbb
  4122f6:	ins    BYTE PTR es:[edi],dx
  4122f7:	ins    BYTE PTR es:[edi],dx
  4122f8:	outs   dx,BYTE PTR ds:[esi]
  4122f9:	loopne 0x4122b5
  4122fb:	xor    BYTE PTR [ebp+ecx*8+0x4730b8b2],dl
  412302:	cmp    al,0x91
  412304:	and    BYTE PTR [ebp+0x1c0f7848],dl
  41230a:	sub    DWORD PTR [esi],edx
  41230c:	jno    0x41232a
  41230e:	sbb    ecx,ebx
  412310:	mov    dh,0x70
  412312:	sbb    al,0x87
  412314:	xchg   ebx,eax
  412315:	xchg   ebx,eax
  412316:	adc    ecx,DWORD PTR [esi-0x35]
  412319:	xor    bl,BYTE PTR gs:[ecx+0x13e3e32c]
  412320:	test   al,0xaa
  412322:	(bad)  
  412323:	call   0x8834c00
  412328:	fidivr WORD PTR [ebp-0x19]
  41232b:	ins    DWORD PTR es:[edi],dx
  41232c:	inc    eax
  41232d:	sub    bl,0x52
  412330:	sub    al,0x14
  412332:	pop    eax
  412333:	pop    ebp
  412334:	pop    ebp
  412335:	mov    ds:0xf971ad56,al
  41233a:	cdq    
  41233b:	sub    esi,DWORD PTR [edx+ebx*4]
  41233e:	or     eax,0x48b6b7b6
  412343:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412344:	push   edx
  412345:	iret   
  412346:	cld    
  412347:	clc    
  412348:	pop    ss
  412349:	(bad)  
  41234a:	out    0x99,eax
  41234c:	mov    edi,0xabffb7fb
  412351:	lea    esi,[ebx+0x220f971e]
  412357:	inc    edx
  412358:	add    bh,BYTE PTR [eax]
  41235a:	add    eax,DWORD PTR [esp+ecx*4-0x38]
  41235e:	shr    ebp,cl
  412360:	pop    eax
  412361:	ja     0x412384
  412363:	popf   
  412364:	leave  
  412365:	xor    dh,BYTE PTR [esi]
  412367:	ds (bad) 
  412369:	cli    
  41236a:	cli    
  41236b:	xor    al,BYTE PTR [esi+0x4c446261]
  412371:	out    0x17,al
  412373:	push   ss
  412374:	mov    DWORD PTR [eax],ebx
  412376:	push   es
  412377:	cmc    
  412378:	jp     0x412307
  41237a:	jp     0x412339
  41237c:	dec    ecx
  41237d:	xor    al,0x1a
  41237f:	and    eax,0xe9d2cd93
  412384:	jbe    0x4123ae
  412386:	xchg   edi,eax
  412387:	dec    edx
  412388:	mov    ah,0x5b
  41238a:	sub    eax,0x5c437286
  41238f:	mov    eax,0x32648178
  412394:	inc    ebp
  412395:	ss xchg ebx,eax
  412397:	mov    eax,ds:0xf1ca7a74
  41239c:	shl    DWORD PTR [ecx],1
  41239e:	push   esi
  41239f:	mov    bh,0xc3
  4123a1:	in     al,0xd4
  4123a3:	adc    al,0xaa
  4123a5:	jmp    0xf005:0x6452124d
  4123ac:	mov    ah,0x7f
  4123ae:	lods   eax,DWORD PTR ds:[esi]
  4123af:	push   esi
  4123b0:	and    edx,DWORD PTR [esi]
  4123b2:	mov    esp,DWORD PTR [edx-0x25]
  4123b5:	mov    ch,BYTE PTR ss:[ebx+edi*2]
  4123b9:	dec    ebx
  4123ba:	test   bl,bl
  4123bc:	ss mov gs,ebx
  4123bf:	loopne 0x4123f9
  4123c1:	ss popf 
  4123c3:	jbe    0x412360
  4123c5:	push   esi
  4123c6:	mov    ebx,0x6465908b
  4123cb:	pop    ecx
  4123cc:	(bad)  
  4123cd:	xor    BYTE PTR [edx],ah
  4123cf:	fdiv   DWORD PTR [esi-0x41d6d215]
  4123d5:	jle    0x412366
  4123d7:	push   esp
  4123d8:	xor    cl,BYTE PTR [ecx-0x6467b99f]
  4123de:	pop    edi
  4123df:	loopne 0x412395
  4123e1:	pop    esp
  4123e2:	out    0xe2,al
  4123e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123e5:	or     ebp,esp
  4123e7:	out    dx,eax
  4123e8:	in     eax,dx
  4123e9:	jae    0x4123e6
  4123eb:	out    0x4d,al
  4123ed:	push   0xfffffff5
  4123ef:	cmp    dl,BYTE PTR [edi-0x51]
  4123f2:	pop    esp
  4123f3:	gs jbe 0x412474
  4123f6:	push   cs
  4123f7:	dec    ebp
  4123f8:	rcl    DWORD PTR [ecx+0x14],cl
  4123fb:	outs   dx,DWORD PTR ds:[esi]
  4123fc:	xor    DWORD PTR [eax-0x3bb6cdbc],edx
  412402:	mov    WORD PTR [eax],?
  412404:	xor    eax,0xc6e6c53d
  412409:	lds    esp,FWORD PTR es:[edx+0x9]
  41240d:	push   ebp
  41240e:	push   ebx
  41240f:	sub    DWORD PTR [edi+0x1c1c1c4b],edx
  412415:	shr    BYTE PTR [edx-0x49],cl
  412418:	rcr    DWORD PTR [ebx-0x9313b33],1
  41241e:	out    dx,al
  41241f:	stos   DWORD PTR es:[edi],eax
  412420:	rol    dh,0x19
  412423:	bswap  ebx
  412425:	pop    es
  412426:	adc    ah,BYTE PTR [ecx]
  412428:	add    DWORD PTR [ecx+eax*1-0x6cec1dfc],ebx
  41242f:	xchg   ebx,eax
  412430:	xchg   ebx,eax
  412431:	cmp    bh,BYTE PTR [eax]
  412433:	inc    esp
  412434:	int3   
  412435:	or     BYTE PTR [edi+0x5f],cl
  412438:	not    dl
  41243a:	je     0x412421
  41243c:	push   edx
  41243d:	mov    DWORD PTR [esi-0x49],esi
  412440:	inc    ebx
  412441:	ds lahf 
  412443:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412444:	aad    0x6c
  412446:	jno    0x41242f
  412448:	into   
  412449:	sbb    eax,0x20bc534
  41244e:	es xchg ebx,eax
  412450:	sub    edx,edx
  412452:	jmp    0x2f496663
  412457:	cmp    cl,BYTE PTR [edi+0x20913244]
  41245d:	xchg   ebx,eax
  41245e:	dec    esi
  41245f:	jno    0x4124bd
  412461:	cmp    cl,ah
  412463:	lock lock add bh,al
  412467:	mov    dh,0x11
  412469:	xchg   edx,eax
  41246a:	int3   
  41246b:	cmc    
  41246c:	imul   edx,edi,0x48
  41246f:	les    esp,FWORD PTR [edx-0x58]
  412472:	stos   BYTE PTR es:[edi],al
  412473:	sub    BYTE PTR [ecx-0x66],0xdc
  412477:	mov    esp,0xc6e6c4bd
  41247c:	cmp    eax,0x4f1cb932
  412481:	pop    edi
  412482:	jle    0x41240e
  412484:	sub    ecx,edi
  412486:	cmp    al,0xcd
  412488:	out    dx,al
  412489:	out    dx,al
  41248a:	rcl    DWORD PTR ds:[ebx+0x13],cl
  41248e:	xchg   esp,eax
  41248f:	retf   0xdca7
  412492:	mov    esi,0xb3669b7d
  412497:	leave  
  412498:	cld    
  412499:	ret    0xb302
  41249c:	push   ebx
  41249d:	push   ebx
  41249e:	cwde   
  41249f:	xchg   BYTE PTR [esi+0x13c4ebae],cl
  4124a5:	jno    0x412485
  4124a7:	jl     0x412474
  4124a9:	jnp    0x412459
  4124ab:	loopne 0x41246b
  4124ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124ae:	repz retf 0x2fcb
  4124b2:	xor    DWORD PTR [ebx+ebx*1+0x4a7a74a2],ebx
  4124b9:	es xchg ebx,eax
  4124bb:	mov    eax,ds:0x6ad32e54
  4124c0:	mov    ch,0xd0
  4124c2:	xor    al,0xd
  4124c4:	retf   
  4124c5:	mov    dh,0x38
  4124c7:	cmp    bh,BYTE PTR [edx]
  4124c9:	loop   0x4124a8
  4124cb:	ja     0x4124ac
  4124cd:	inc    ecx
  4124ce:	push   ebp
  4124cf:	push   esp
  4124d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124d2:	addr16 mov eax,0xd52af572
  4124d8:	ror    DWORD PTR [edx],cl
  4124da:	test   eax,0x8383864c
  4124df:	inc    ebx
  4124e0:	je     0x41253f
  4124e2:	addr16 jb 0x412557
  4124e5:	xchg   edx,eax
  4124e6:	inc    esp
  4124e7:	xor    cl,cl
  4124e9:	retf   0x12f2
  4124ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124ed:	adc    DWORD PTR [ecx+0x64],esp
  4124f0:	je     0x41247e
  4124f2:	jbe    0x41249b
  4124f4:	repz cmp dh,al
  4124f7:	stos   DWORD PTR es:[edi],eax
  4124f8:	addr16 cmp eax,0x84441f2e
  4124fe:	add    al,0x70
  412500:	push   es
  412501:	sub    BYTE PTR [ebp-0x70326035],dl
  412507:	mov    WORD PTR [eax-0x64a4d557],fs
  41250d:	fwait
  41250e:	int3   
  41250f:	dec    esp
  412510:	dec    edi
  412511:	xchg   edx,eax
  412512:	into   
  412513:	out    0x58,al
  412515:	pop    edi
  412516:	pop    ebp
  412517:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412518:	jo     0x412596
  41251a:	or     al,0xae
  41251c:	inc    ebx
  41251d:	xor    bl,BYTE PTR [ecx-0x2b6595de]
  412523:	push   0x35
  412525:	mov    edx,0xf1c59756
  41252a:	jno    0x4125a0
  41252c:	dec    ebp
  41252d:	inc    ebp
  41252e:	shl    DWORD PTR [ebp+0x64],cl
  412531:	pop    ecx
  412532:	bound  edi,QWORD PTR [ecx+0x69]
  412535:	cdq    
  412536:	dec    edx
  412537:	cmc    
  412538:	xchg   esp,eax
  412539:	inc    esi
  41253a:	jae    0x4124d6
  41253c:	push   0x992a4e2c
  412541:	mov    ds:0xd3453d52,al
  412546:	jne    0x4124e2
  412548:	int    0x26
  41254a:	mov    dh,0x63
  41254c:	mov    ds:0x1c179a4b,eax
  412551:	ins    BYTE PTR es:[edi],dx
  412552:	aam    0xb1
  412554:	ins    DWORD PTR es:[edi],dx
  412555:	fwait
  412556:	dec    edx
  412557:	in     eax,0x94
  412559:	test   al,0x61
  41255b:	mov    al,ds:0xe9003a1b
  412560:	je     0x4124f4
  412562:	push   esi
  412563:	stos   DWORD PTR es:[edi],eax
  412564:	vpunpckhwd xmm0,xmm2,XMMWORD PTR ds:0x3768b2cb
  41256c:	fwait
  41256d:	les    esp,FWORD PTR [edx+0x38891a11]
  412573:	mov    ch,BYTE PTR [ebx+eiz*4]
  412576:	clc    
  412577:	(bad)  
  412578:	sub    BYTE PTR [ebp-0x27],0xe8
  41257c:	xor    DWORD PTR [ebp-0x5cb244aa],ebx
  412582:	fisub  WORD PTR [eax+0x75]
  412585:	ins    DWORD PTR es:[edi],dx
  412586:	popf   
  412587:	mov    eax,ds:0x69a610fc
  41258c:	jb     0x412587
  41258e:	jmp    0xe0f5e33a
  412593:	int3   
  412594:	or     al,0x6f
  412596:	mov    esp,0x854a4df1
  41259b:	and    ch,BYTE PTR [edx-0x1d1e8f5a]
  4125a1:	add    eax,0x850e9d3a
  4125a6:	bound  eax,QWORD PTR [ecx-0x2f394296]
  4125ac:	push   eax
  4125ad:	push   cs
  4125ae:	dec    ebp
  4125af:	mov    edi,0xd28cd442
  4125b4:	outs   dx,BYTE PTR ds:[esi]
  4125b5:	mov    ch,0x89
  4125b7:	(bad)  
  4125b8:	jecxz  0x4125fe
  4125ba:	mov    ds:0x34e95271,eax
  4125bf:	(bad)
  4125c2:	xchg   DWORD PTR [edi-0xf],edi
  4125c5:	xchg   edi,eax
  4125c6:	jg     0x4125f5
  4125c8:	stc    
  4125c9:	cmp    DWORD PTR [edi],0xfffffff0
  4125cc:	lahf   
  4125cd:	popf   
  4125ce:	sahf   
  4125cf:	icebp  
  4125d0:	sar    BYTE PTR [eax+eiz*8+0x10],1
  4125d4:	push   es
  4125d5:	add    DWORD PTR [edi],ebx
  4125d7:	xor    DWORD PTR [esi-0x14],edi
  4125da:	daa    
  4125db:	(bad)  
  4125dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125dd:	(bad)  
  4125df:	popf   
  4125e0:	popf   
  4125e1:	pop    ds
  4125e2:	lea    ebx,[eax-0x19366e7a]
  4125e8:	fcomp  st(6)
  4125ea:	fadd   QWORD PTR [eax]
  4125ec:	xlat   BYTE PTR ds:[ebx]
  4125ed:	and    bl,BYTE PTR [esi]
  4125ef:	dec    ebx
  4125f0:	shr    BYTE PTR [esi+esi*1+0x68],1
  4125f4:	xor    al,0x1a
  4125f6:	fdiv   DWORD PTR [esi+0x1cccecc3]
  4125fc:	mov    cl,0x44
  4125fe:	add    al,BYTE PTR [ebp-0x6f]
  412601:	leave  
  412602:	fs jae 0x4125dd
  412605:	mov    dh,0x4d
  412607:	mov    ebx,0xf11222d5
  41260c:	sahf   
  41260d:	adc    dh,BYTE PTR [ebp+edi*4-0x1cb0164b]
  412614:	mov    ch,0x99
  412616:	lahf   
  412617:	cdq    
  412618:	and    DWORD PTR [ebx+0x674c90cd],ebx
  41261e:	sbb    BYTE PTR [ecx],bl
  412620:	push   ds
  412621:	out    0xde,al
  412623:	out    0x26,al
  412625:	aaa    
  412626:	outs   dx,DWORD PTR ds:[esi]
  412627:	fisub  WORD PTR [edx+0x47a22c58]
  41262d:	dec    esp
  41262e:	xchg   BYTE PTR [edi-0x74928b8e],al
  412634:	mov    ecx,0x452439d9
  412639:	gs jnp 0x4126a3
  41263c:	xchg   edi,eax
  41263d:	aad    0xd5
  41263f:	xor    eax,0xe1ef176c
  412644:	lahf   
  412645:	call   0x4e4d:0x4c9a6986
  41264c:	jno    0x4126a0
  41264e:	sub    dh,BYTE PTR [ebx-0x15]
  412651:	(bad)  
  412652:	dec    ebp
  412653:	div    dh
  412655:	div    BYTE PTR [eax]
  412657:	mov    WORD PTR [eax],cs
  412659:	arpl   WORD PTR [ebx+0x8cc44a3],sp
  41265f:	out    0xcf,eax
  412661:	popf   
  412662:	inc    ebx
  412663:	xchg   esi,eax
  412664:	adc    eax,0x6dfb7cde
  412669:	push   cs
  41266a:	femms  
  41266c:	call   0x2ed83ccb
  412671:	pop    ebp
  412672:	les    ecx,FWORD PTR [eax+0x26224418]
  412678:	stos   BYTE PTR es:[edi],al
  412679:	stos   BYTE PTR es:[edi],al
  41267a:	push   ecx
  41267b:	sub    BYTE PTR [ecx+edx*2],bl
  41267e:	test   eax,0x98989854
  412683:	inc    esp
  412684:	shl    DWORD PTR [ebp+0x56],cl
  412687:	xchg   edi,eax
  412688:	push   edi
  412689:	pop    eax
  41268a:	pop    edi
  41268b:	pop    ebx
  41268c:	repz sahf 
  41268e:	pop    ss
  41268f:	cmp    BYTE PTR [edi-0x5dab46c0],bh
  412695:	jo     0x4126f3
  412697:	mov    al,ds:0x3a30e9db
  41269c:	mov    fs,WORD PTR ds:[ebx+ebp*1]
  4126a0:	mov    ah,0x5b
  4126a2:	sub    eax,0x2f8e5964
  4126a7:	das    
  4126a8:	scas   eax,DWORD PTR es:[edi]
  4126a9:	jl     0x4126a4
  4126ab:	sbb    ebx,DWORD PTR [edi-0x5]
  4126ae:	dec    edx
  4126af:	cmp    BYTE PTR [ecx],bh
  4126b1:	call   0xf549c7
  4126b6:	push   ds
  4126b7:	xor    DWORD PTR [edx-0xbb82367],esi
  4126bd:	dec    eax
  4126be:	and    al,0x55
  4126c0:	cmp    BYTE PTR [edx],ch
  4126c2:	nop
  4126c3:	int    0xe
  4126c5:	adc    DWORD PTR [ebx-0x244a96bb],ecx
  4126cb:	aam    0x6a
  4126cd:	push   ebp
  4126ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4126d0:	addr16 jmp 0x6ec73d30
  4126d6:	pusha  
  4126d7:	cmp    DWORD PTR [esi],edx
  4126d9:	mov    cl,0x58
  4126db:	sbb    BYTE PTR [eax+0x2c],0x4e
  4126df:	xor    dl,BYTE PTR [ebp-0x6a8a929c]
  4126e5:	in     eax,dx
  4126e6:	lods   eax,DWORD PTR ds:[esi]
  4126e7:	dec    ebp
  4126e8:	mov    dl,0xd9
  4126ea:	sbb    al,0x33
  4126ec:	xor    esi,DWORD PTR [ebx]
  4126ee:	in     al,0x87
  4126f0:	inc    edi
  4126f1:	mov    esp,0x6233ac5
  4126f6:	lods   eax,DWORD PTR ds:[esi]
  4126f7:	dec    esi
  4126f8:	sbb    edx,edi
  4126fa:	jno    0x41268d
  4126fc:	std    
  4126fd:	test   DWORD PTR [ebx*2+0x6cd5a5d7],edi
  412704:	shr    cl,cl
  412706:	mov    ah,0x11
  412708:	scas   al,BYTE PTR es:[edi]
  412709:	ret    
  41270a:	fsubr  st,st(0)
  41270c:	sbb    BYTE PTR [edx-0x39b16d5e],dl
  412712:	mov    cl,0x2c
  412714:	mov    ebp,DWORD PTR [edi-0x42]
  412717:	jns    0x4126a8
  412719:	pop    edx
  41271a:	mov    ch,0x86
  41271c:	mov    ds:0xd2fcbcc8,al
  412721:	inc    edi
  412722:	dec    ecx
  412723:	and    eax,0x5d3bb493
  412728:	mov    dl,0xa9
  41272a:	sbb    bh,ch
  41272c:	fdivr  QWORD PTR [eax+0x6bf89cb]
  412732:	ror    esp,0xec
  412735:	or     al,0xd3
  412737:	fnstenv [ecx+0x3a]
  41273a:	pop    ebp
  41273b:	retf   
  41273c:	or     edi,DWORD PTR [edx]
  41273e:	ss pop ebx
  412740:	fdiv   DWORD PTR [esi-0x3bb4db73]
  412746:	loop   0x4127b9
  412748:	mov    ah,BYTE PTR [edi]
  41274a:	inc    ebp
  41274b:	ss mov bh,0xb6
  41274e:	sub    BYTE PTR [esi],dl
  412750:	dec    ebx
  412751:	dec    esp
  412752:	dec    esp
  412753:	dec    esi
  412754:	jo     0x4127c4
  412756:	icebp  
  412757:	cmp    al,0xa9
  412759:	mov    bl,BYTE PTR fs:[esi+ebp*2+0x8]
  41275e:	retf   
  41275f:	mov    dl,0x28
  412761:	xchg   edi,eax
  412762:	mov    ebp,DWORD PTR [eax]
  412764:	mov    dh,bh
  412766:	adc    ebx,ebx
  412768:	(bad)  
  41276a:	out    0xde,al
  41276c:	cli    
  41276d:	sbb    dl,ch
  41276f:	dec    edx
  412770:	xchg   ebp,eax
  412771:	jmp    0x412742
  412773:	cmp    eax,0xd875d587
  412778:	(bad)  
  41277a:	and    dl,BYTE PTR [esi-0x79e79c78]
  412780:	push   0x9f9ab5
  412785:	jle    0x41276e
  412787:	dec    esp
  412788:	pop    es
  412789:	out    0x3,eax
  41278b:	mov    al,dl
  41278d:	add    bh,BYTE PTR [eax-0x3c]
  412790:	clc    
  412791:	call   0x703c4741
  412796:	lea    ecx,[eax-0x50a1468f]
  41279c:	jno    0x41278f
  41279e:	shl    BYTE PTR ds:0xbd864746,cl
  4127a4:	cdq    
  4127a5:	jns    0x412730
  4127a7:	adc    al,0xc3
  4127a9:	mov    ds:0x28ccc423,eax
  4127ae:	adc    edx,DWORD PTR [ebx]
  4127b0:	xchg   ebx,eax
  4127b1:	xor    al,0x1b
  4127b3:	or     eax,0x69b7b676
  4127b8:	aam    0x6b
  4127ba:	cwde   
  4127bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127bc:	dec    ecx
  4127bd:	mov    ebp,0xa956a75e
  4127c2:	shr    BYTE PTR [edx-0x4a],1
  4127c5:	cwde   
  4127c6:	call   0xccd3:0xcc7c629a
  4127cd:	push   ebx
  4127ce:	jecxz  0x4127b3
  4127d0:	aam    0xea
  4127d2:	or     eax,0xb12f2eee
  4127d7:	mov    ebx,0x76d745bb
  4127dc:	leave  
  4127dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127de:	mov    bl,0xd8
  4127e0:	mov    cs,WORD PTR [ebp+0x32]
  4127e3:	cdq    
  4127e4:	and    dl,BYTE PTR [ecx+0x346f5248]
  4127ea:	(bad)  
  4127ec:	fiadd  WORD PTR [esi+0x8]
  4127ef:	jo     0x41284d
  4127f1:	push   0x5a5e5b36
  4127f6:	xor    BYTE PTR [edi+0x39466a27],bl
  4127fc:	cmp    DWORD PTR [ecx],edi
  4127fe:	loope  0x4127f8
  412800:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412801:	sub    BYTE PTR [eax+ebp*2-0x5cb249a8],0x5e
  412809:	and    ebx,DWORD PTR [ebx+0x1b9432cd]
  41280f:	loop   0x4127f9
  412811:	test   al,0xc0
  412813:	lods   eax,DWORD PTR ds:[esi]
  412814:	(bad)  [edi-0x76b068d7]
  41281a:	lds    esp,FWORD PTR [edx-0x6cf0f374]
  412820:	dec    eax
  412821:	es mov ecx,0xc722e97c
  412827:	daa    
  412828:	add    eax,0xc9bcdd6e
  41282d:	jmp    0xa1e2c19b
  412832:	cmp    al,0xa3
  412834:	and    esp,DWORD PTR [ebx+0x1c55aa54]
  41283a:	(bad)  
  41283b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41283c:	shr    DWORD PTR [eax+0x16208423],1
  412842:	mov    esi,DWORD PTR [ecx-0x17]
  412845:	test   eax,0xec1e1ccb
  41284a:	mov    bl,0xb3
  41284c:	mov    bl,0x83
  41284e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41284f:	imul   ebx,DWORD PTR [eax-0x2424e76f],0x1b
  412856:	in     al,dx
  412857:	out    dx,al
  412858:	ins    BYTE PTR es:[edi],dx
  412859:	arpl   WORD PTR [esi-0x43],ax
  41285c:	add    eax,0x76f7f743
  412861:	xchg   ebx,eax
  412862:	fcomip st,st(5)
  412864:	mov    ebp,0xfc2fd1ff
  412869:	icebp  
  41286a:	push   edi
  41286c:	sti    
  41286d:	into   
  41286e:	pop    ecx
  41286f:	(bad)  
  412870:	rol    DWORD PTR [edi],1
  412872:	or     DWORD PTR [ecx-0xef70ffb],esp
  412878:	(bad)  
  412879:	jle    0x412861
  41287b:	addr16 ror ebp,cl
  41287e:	push   esi
  41287f:	sti    
  412880:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412881:	pop    esp
  412882:	ss dec ebx
  412884:	sub    dl,BYTE PTR [ecx+0x1976eac4]
  41288a:	sbb    eax,0xca9d2619
  41288f:	mov    ds:0xbbfb0a6a,al
  412894:	jnp    0x41290a
  412896:	cmp    ch,BYTE PTR [ebp+0x12]
  412899:	mov    DWORD PTR [edx+ecx*4],esp
  41289c:	stos   BYTE PTR es:[edi],al
  41289d:	jno    0x412911
  41289f:	jb     0x41282d
  4128a1:	add    BYTE PTR [ebx*2-0x492e590d],dh
  4128a8:	mov    ebp,0xbb7781c7
  4128ad:	pop    ebp
  4128ae:	sub    dl,ch
  4128b0:	dec    edx
  4128b1:	out    dx,eax
  4128b2:	rcr    DWORD PTR [edi+0x42],1
  4128b5:	inc    eax
  4128b6:	mov    ebx,0x52b4e2d9
  4128bb:	and    eax,0xf4f1ad55
  4128c0:	(bad)
  4128c3:	xchg   BYTE PTR [esi-0x45179652],al
  4128c9:	(bad)  
  4128ca:	push   edi
  4128cb:	mov    edi,0xf7f60dfe
  4128d0:	jbe    0x41290b
  4128d2:	cmp    al,0x3c
  4128d4:	loopne 0x4128ab
  4128d6:	xchg   edi,eax
  4128d7:	pop    esi
  4128d8:	out    0xda,al
  4128da:	xchg   ebp,eax
  4128db:	cmp    BYTE PTR ds:0x3229,bh
  4128e0:	cmp    bh,BYTE PTR [esp+eax*8]
  4128e3:	loope  0x4128b6
  4128e5:	xor    DWORD PTR [edi-0x41],ebp
  4128e8:	repz push cs
  4128ea:	pop    ebp
  4128eb:	stos   DWORD PTR es:[edi],eax
  4128ec:	sub    DWORD PTR [ebp+0x3b],0x3c
  4128f0:	jge    0x4128eb
  4128f2:	adc    ch,cl
  4128f4:	push   esp
  4128f5:	or     dl,BYTE PTR [ebp-0x6f]
  4128f8:	mov    DWORD PTR [ebp-0x5d],eax
  4128fb:	cld    
  4128fc:	rcr    DWORD PTR [edi+0x62e509fc],1
  412902:	xchg   ecx,eax
  412903:	push   esi
  412904:	mov    bl,0xc9
  412906:	push   ebx
  412907:	xchg   edi,eax
  412908:	and    BYTE PTR cs:[ebx],ch
  41290b:	sub    bl,BYTE PTR [ebp-0x25]
  41290e:	add    eax,0xaa121240
  412913:	loop   0x412942
  412915:	cmp    eax,0x6b2a2aae
  41291a:	jmp    0x412987
  41291c:	fdivr  QWORD PTR [esi-0x6abaec8f]
  412922:	mov    ecx,0x7887fcfe
  412927:	jmp    0xaa12:0xa54a65f2
  41292e:	mov    ds:0x49c44b10,al
  412933:	and    al,0x13
  412935:	dec    esp
  412936:	dec    ebp
  412937:	int    0xa0
  412939:	push   0x1a
  41293b:	in     eax,0x72
  41293d:	or     ebp,ebx
  41293f:	ror    BYTE PTR [ecx+0x25],1
  412942:	push   ebx
  412943:	ins    BYTE PTR es:[edi],dx
  412944:	fcomp  QWORD PTR [ebx-0x39]
  412947:	xor    BYTE PTR [edx],ah
  412949:	mov    edx,DWORD PTR [ebx]
  41294b:	cmp    ebx,esp
  41294d:	sub    dh,al
  41294f:	int    0x33
  412951:	sbb    eax,0x42180fa4
  412956:	add    bh,BYTE PTR [eax-0x7c]
  412959:	enter  0xbe97,0x7c
  41295d:	jge    0x4129a4
  41295f:	jg     0x4129d2
  412961:	mov    esp,0xee732a54
  412966:	cld    
  412967:	jns    0x41298d
  412969:	loope  0x41291d
  41296b:	mov    ebp,0x372e49b5
  412970:	inc    esp
  412971:	jle    0x4129d7
  412973:	call   0x385c:0x716eb7bb
  41297a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41297b:	fucomi st,st(5)
  41297d:	xor    BYTE PTR [edx],bh
  41297f:	ss inc esi
  412981:	xor    dl,BYTE PTR [ecx+0x425cb4e4]
  412987:	push   ebx
  412988:	xor    eax,0xb338f112
  41298d:	jae    0x412982
  41298f:	sbb    BYTE PTR [edx+0x3704248e],bh
  412995:	outs   dx,BYTE PTR ds:[esi]
  412996:	fsub   QWORD PTR [eax-0x50ad52a6]
  41299c:	xlat   BYTE PTR ds:[ebx]
  41299d:	sbb    BYTE PTR ds:0x6c6c6519,bl
  4129a3:	or     al,0x55
  4129a5:	push   edi
  4129a6:	dec    ecx
  4129a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4129a8:	push   edx
  4129a9:	in     al,dx
  4129aa:	sbb    eax,0x5c7c711c
  4129af:	and    BYTE PTR [esi],bl
  4129b1:	mov    edx,DWORD PTR [edx+0x555066c9]
  4129b7:	adc    eax,0x64515145
  4129bc:	adc    eax,0x6d90b6cb
  4129c1:	sbb    edi,eax
  4129c3:	mov    dh,0x1
  4129c5:	dec    edi
  4129c6:	mov    BYTE PTR ds:0xbb2f671,bh
  4129cc:	(bad)  [esi-0x69]
  4129cf:	bnd jmp 0x60ebc3fe
  4129d5:	pop    ecx
  4129d6:	ss push ecx
  4129d8:	xor    ecx,DWORD PTR [edx+0xfc94669]
  4129de:	out    0x29,eax
  4129e0:	push   edi
  4129e1:	stos   BYTE PTR es:[edi],al
  4129e2:	sbb    al,0x1f
  4129e4:	sbb    eax,0xcbbdb3b1
  4129e9:	fcomp  st(0)
  4129eb:	sub    bl,al
  4129ed:	mov    ds:0xc2ff3ca3,eax
  4129f2:	xchg   DWORD PTR [eax],eax
  4129f4:	dec    eax
  4129f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4129f6:	mov    bl,0xfc
  4129f8:	jmp    0x46cea89c
  4129fd:	mov    bl,0x81
  4129ff:	loope  0x4129e9
  412a01:	pop    eax
  412a02:	popf   
  412a03:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  412a05:	jp     0x4129a4
  412a07:	in     eax,0xe5
  412a09:	gs xchg edx,eax
  412a0b:	leave  
  412a0c:	and    al,0xc3
  412a0e:	ret    
  412a0f:	and    ebx,DWORD PTR [ecx+edi*4+0x7a]
  412a13:	sbb    eax,0x56a9d74d
  412a18:	stos   BYTE PTR es:[edi],al
  412a19:	and    al,0xe2
  412a1b:	dec    ecx
  412a1c:	repnz stc 
  412a1e:	popa   
  412a1f:	mov    dh,0xc7
  412a22:	cmp    DWORD PTR [eax+ebx*8],edi
  412a25:	daa    
  412a26:	xchg   ecx,eax
  412a27:	sbb    edx,ebx
  412a29:	in     al,dx
  412a2a:	popf   
  412a2b:	outs   dx,DWORD PTR ds:[esi]
  412a2c:	mov    esp,0x8f00484c
  412a31:	adc    al,0xa1
  412a33:	or     esi,eax
  412a35:	or     cl,dh
  412a37:	dec    ecx
  412a38:	jne    0x412a39
  412a3a:	xchg   edx,ebp
  412a3c:	jecxz  0x412a0d
  412a3e:	jl     0x412a34
  412a40:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a42:	dec    edx
  412a43:	ss popf 
  412a45:	and    BYTE PTR [esi-0x4f878c78],bl
  412a4b:	inc    edi
  412a4c:	mov    ebp,0xbd534356
  412a51:	push   esp
  412a52:	pop    edx
  412a53:	mov    ds:0x121240d1,eax
  412a58:	or     ecx,DWORD PTR [ebx-0x2d5ab719]
  412a5e:	les    edx,FWORD PTR [ebx]
  412a60:	fidiv  WORD PTR [ebx+0x12a5caf5]
  412a66:	daa    
  412a67:	daa    
  412a68:	daa    
  412a69:	sub    BYTE PTR [edx+0x1c186182],cl
  412a6f:	push   ds
  412a70:	sbb    al,0x78
  412a72:	dec    edi
  412a73:	or     eax,0x2dce2592
  412a78:	sub    al,0x92
  412a7a:	dec    esi
  412a7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a7c:	enter  0xf2e6,0xc
  412a80:	out    0x73,eax
  412a82:	in     al,dx
  412a83:	in     al,dx
  412a84:	in     al,dx
  412a85:	jno    0x412a6a
  412a87:	out    0x4d,al
  412a89:	mov    cs,WORD PTR [edi+0x69d3a40b]
  412a8f:	out    0x67,al
  412a91:	addr16 nop
  412a93:	xor    eax,0x7985c58d
  412a98:	test   BYTE PTR [eax+0x36eb79b8],dl
  412a9e:	imul   ebp,DWORD PTR [ebx+0x5d3a74ab],0xfffffff2
  412aa5:	ret    
  412aa6:	jns    0x412a5a
  412aa8:	mov    ecx,0x964c992c
  412aad:	test   eax,0xddee7189
  412ab2:	fnsetpm(287 only) 
  412ab4:	out    dx,al
  412ab5:	popf   
  412ab6:	cmp    ebp,esp
  412ab8:	in     eax,dx
  412ab9:	out    dx,eax
  412aba:	xchg   ebx,eax
  412abb:	leave  
  412abc:	fs cwde 
  412abe:	fwait
  412abf:	popf   
  412ac0:	es push ss
  412ac2:	(bad)  
  412ac3:	xor    edi,DWORD PTR [ebx]
  412ac5:	xor    ecx,DWORD PTR [ebp-0x243d556]
  412acb:	idiv   BYTE PTR [ebx+0x6415ab54]
  412ad1:	inc    ebp
  412ad2:	out    0xe2,al
  412ad4:	test   DWORD PTR [ebx],ecx
  412ad6:	je     0x412a93
  412ad8:	pop    ebp
  412ad9:	call   0x1a4d:0xec8a36ad
  412ae0:	jmp    0xa2ce:0xccccbb76
  412ae7:	sbb    edx,DWORD PTR [ecx]
  412ae9:	fidivr WORD PTR [ebx-0x11]
  412aec:	pop    ebp
  412aed:	mov    cs,WORD PTR [esi]
  412aef:	(bad)  
  412af1:	xor    al,0x9d
  412af3:	jmp    0xecf94e1
  412af8:	psubusb mm3,mm3
  412afb:	fild   DWORD PTR [ebp-0x2b]
  412afe:	push   esp
  412aff:	inc    esi
  412b00:	xchg   BYTE PTR [edi-0x6f],al
  412b03:	gs cdq 
  412b05:	jbe    0x412ac2
  412b07:	test   DWORD PTR [esi-0x7555efb9],esp
  412b0d:	std    
  412b0e:	xchg   ebp,eax
  412b0f:	das    
  412b10:	jmp    0x12b3ead4
  412b15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b16:	add    ebx,DWORD PTR [edi]
  412b18:	and    DWORD PTR [ebx+esi*4+0xa0f81be],esp
  412b1f:	(bad)  
  412b20:	jmp    0xd5d78b1c
  412b25:	bnd jmp 0xfd70b7a2
  412b2b:	push   es
  412b2c:	mov    dh,0xaa
  412b2e:	mov    dl,0xb6
  412b30:	mov    esi,0xc351ab49
  412b35:	mov    BYTE PTR [eax-0x53882c22],bl
  412b3b:	push   cs
  412b3c:	jae    0x412b31
  412b3e:	or     ecx,DWORD PTR [esi+ecx*4-0x58b36e72]
  412b45:	test   eax,0xb8b8ead7
  412b4a:	and    al,0x12
  412b4c:	dec    ecx
  412b4d:	xchg   bl,dh
  412b4f:	ret    
  412b50:	aam    0x6b
  412b52:	push   ebp
  412b53:	ss aaa 
  412b55:	out    dx,al
  412b56:	jno    0x412b3f
  412b58:	out    dx,al
  412b59:	sbb    eax,0xf30a95aa
  412b5e:	or     ecx,DWORD PTR [ebx]
  412b60:	or     al,0xe5
  412b62:	xchg   DWORD PTR [eax],ebx
  412b64:	sbb    eax,0x395ca119
  412b69:	gs (bad) 
  412b6b:	call   0x5e3f2900
  412b70:	sbb    cl,ch
  412b72:	ss mov dh,0xed
  412b75:	and    BYTE PTR [ecx+0x12],cl
  412b78:	mov    dh,0x6d
  412b7a:	stc    
  412b7b:	add    ecx,0x964cb908
  412b81:	push   esp
  412b82:	xor    al,BYTE PTR [ecx+0x24]
  412b85:	mov    ds:0xd29ca953,al
  412b8a:	out    dx,al
  412b8b:	je     0x412b35
  412b8d:	push   esi
  412b8e:	sub    al,ah
  412b90:	mov    ds:0x864cb926,eax
  412b95:	xchg   ecx,eax
  412b96:	loope  0x412bd4
  412b98:	icebp  
  412b99:	js     0x412ba7
  412b9b:	(bad)  
  412b9c:	mov    ch,0x69
  412b9e:	ss pop ebx
  412ba0:	pop    eax
  412ba1:	(bad)  [esi]
  412ba3:	inc    edx
  412ba4:	and    BYTE PTR [ecx+ecx*8],0x74
  412ba8:	cmp    ebx,DWORD PTR ds:0xad0e9d3a
  412bae:	inc    esi
  412baf:	fwait
  412bb0:	xor    al,BYTE PTR fs:[ecx+0x32]
  412bb4:	in     eax,0x69
  412bb6:	hlt    
  412bb7:	mov    ebp,0x7bde7dbd
  412bbc:	out    dx,eax
  412bbd:	cmp    eax,0xde37cde
  412bc2:	div    dh
  412bc4:	idiv   BYTE PTR [ecx]
  412bc6:	ja     0x412ba9
  412bc8:	and    dl,bh
  412bca:	scas   al,BYTE PTR es:[edi]
  412bcb:	pop    ebp
  412bcc:	addr16 jbe 0x412c3d
  412bcf:	fisubr WORD PTR [ebx]
  412bd1:	cmp    dh,BYTE PTR [edx+0x6c]
  412bd4:	push   esp
  412bd5:	push   ebp
  412bd6:	and    eax,0xb1b04c91
  412bdb:	mov    cl,0xc1
  412bdd:	retf   0x12f2
  412be0:	pop    ebx
  412be1:	sbb    esi,edi
  412be3:	shl    BYTE PTR [ebp+0x3],1
  412be6:	push   ebp
  412be7:	rcr    eax,cl
  412be9:	(bad)  
  412beb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bec:	pop    eax
  412bed:	sub    al,0x13
  412bef:	pop    ds
  412bf0:	cdq    
  412bf1:	es mov edx,0x9b68bbf2
  412bf7:	sub    edx,edi
  412bf9:	jle    0x412bec
  412bfb:	sti    
  412bfc:	cs dec edi
  412bfe:	popf   
  412bff:	cmc    
  412c00:	pop    eax
  412c01:	jge    0x412b93
  412c03:	adc    BYTE PTR [edx+0x0],bl
  412c06:	(bad)
  412c0a:	int    0x2b
  412c0c:	push   es
  412c0d:	popf   
  412c0e:	jmp    DWORD PTR [esi]
  412c10:	xlat   BYTE PTR ds:[ebx]
  412c11:	cmp    al,0x56
  412c13:	ror    dl,cl
  412c15:	or     DWORD PTR [edi-0x3475847],esp
  412c1b:	fmul   QWORD PTR [ebx-0x5c]
  412c1e:	arpl   WORD PTR [esi],sp
  412c20:	in     eax,dx
  412c21:	dec    esi
  412c22:	mov    edx,DWORD PTR [edx+ebp*1+0x43]
  412c26:	ss popf 
  412c28:	inc    ecx
  412c29:	shl    DWORD PTR [ebp+0x26],cl
  412c2c:	daa    
  412c2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c2e:	push   0xaeac6a34
  412c33:	sub    al,0x79
  412c35:	jmp    0x412c1f
  412c37:	sbb    DWORD PTR [edx],edi
  412c39:	xchg   esi,eax
  412c3a:	jecxz  0x412cb4
  412c3c:	dec    edi
  412c3d:	add    dh,BYTE PTR [edx+0x61]
  412c40:	bound  esi,QWORD PTR [edx-0x6e]
  412c43:	pop    esp
  412c44:	ss inc ebx
  412c46:	les    ecx,FWORD PTR [edx+esi*1-0x5cb5c5c2]
  412c4d:	shl    eax,1
  412c4f:	imul   ch
  412c51:	pop    ebx
  412c52:	ins    BYTE PTR es:[edi],dx
  412c53:	ins    DWORD PTR es:[edi],dx
  412c54:	out    dx,eax
  412c55:	loopne 0x412c0f
  412c57:	mov    al,0xb8
  412c59:	xor    BYTE PTR [edi-0x73739792],cl
  412c5f:	mov    WORD PTR [edx],ss
  412c61:	dec    ebx
  412c62:	les    ebx,FWORD PTR [ecx-0x41]
  412c65:	mov    bh,0xc1
  412c67:	rcl    dl,cl
  412c69:	xor    cl,ch
  412c6b:	or     sp,WORD PTR [ebx]
  412c6e:	loop   0x412c9d
  412c70:	pop    ss
  412c71:	out    dx,al
  412c72:	mov    edx,0x3333532e
  412c77:	mov    ah,0xbb
  412c79:	push   ss
  412c7a:	fwait
  412c7b:	pop    ebx
  412c7c:	(bad)  
  412c7e:	pop    esi
  412c7f:	xor    BYTE PTR cs:[edx+edi*1+0x5],0x8
  412c85:	mov    bh,0xc7
  412c88:	enter  0x3264,0xac
  412c8c:	scas   al,BYTE PTR es:[edi]
  412c8d:	lods   eax,DWORD PTR ds:[esi]
  412c8e:	jae    0x412c8b
  412c90:	imul   BYTE PTR [ebp+0x4e]
  412c93:	or     ah,BYTE PTR ds:0x99c72626
  412c99:	call   0x3732:0x489e209c
  412ca0:	aaa    
  412ca1:	dec    ebx
  412ca2:	mov    ecx,0xeee9665c
  412ca7:	adc    dl,BYTE PTR [esi+0xdcb936d]
  412cad:	xchg   ecx,eax
  412cae:	dec    esi
  412caf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412cb0:	cmp    eax,ebx
  412cb2:	(bad)  [ebp-0x122c50af]
  412cb8:	je     0x412d02
  412cba:	and    al,0x13
  412cbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412cbd:	rcr    BYTE PTR [ecx],cl
  412cbf:	into   
  412cc0:	popf   
  412cc1:	cmp    ecx,DWORD PTR [edi-0xf]
  412cc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412cc5:	rol    dh,0xbd
  412cc8:	jne    0x412c96
  412cca:	pop    eax
  412ccb:	pushf  
  412ccc:	push   0xdee364c4
  412cd1:	sbb    bl,bl
  412cd3:	pop    es
  412cd4:	(bad)  
  412cd5:	sbb    BYTE PTR [ecx-0x202a16ec],ch
  412cdb:	ret    0xf2f8
  412cde:	dec    DWORD PTR [esi-0x29]
  412ce1:	jb     0x412c70
  412ce3:	push   edx
  412ce4:	mov    cl,0xf2
  412ce6:	out    0x1f,al
  412ce8:	sbb    al,0x58
  412cea:	aaa    
  412ceb:	into   
  412cec:	jp     0x412caa
  412cee:	sub    BYTE PTR ds:[eax],cl
  412cf1:	arpl   WORD PTR [eax],ax
  412cf3:	(bad)
  412cf7:	stc    
  412cf8:	xor    DWORD PTR [ebp+0x73],eax
  412cfb:	mov    WORD PTR [esi-0x48249cfc],gs
  412d01:	sbb    BYTE PTR [ebp-0x1a15ce01],dh
  412d07:	sbb    ah,cl
  412d09:	jl     0x412c95
  412d0b:	lds    ecx,FWORD PTR [ebx+0x43]
  412d0e:	sbb    BYTE PTR [edx+0x3dc6c6cd],cl
  412d14:	pop    edx
  412d15:	lods   eax,DWORD PTR ds:[esi]
  412d16:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  412d18:	imul   esp,DWORD PTR [edx],0x56ad32c9
  412d1e:	mov    edi,DWORD PTR [edx-0x53]
  412d21:	inc    esi
  412d22:	xor    bl,BYTE PTR [ebp+0x1617e66]
  412d28:	or     DWORD PTR [ecx+0x5d582aaa],eax
  412d2e:	fstp   st(5)
  412d31:	jge    0x412d5d
  412d33:	aad    0xa
  412d35:	mov    edx,0xde3b61a6
  412d3a:	ret    
  412d3b:	lods   al,BYTE PTR ds:[esi]
  412d3d:	dec    esi
  412d3e:	xlat   BYTE PTR ds:[ebx]
  412d3f:	pop    ebx
  412d40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d41:	sub    esp,DWORD PTR [edx+0x30]
  412d44:	cmp    dh,BYTE PTR [edx]
  412d46:	mov    ch,BYTE PTR [edx+0x112344aa]
  412d4c:	outs   dx,BYTE PTR ds:[esi]
  412d4d:	fnstsw WORD PTR [ebp+eax*2-0x44b5855b]
  412d54:	frstor [edx+0x61]
  412d57:	popa   
  412d58:	sahf   
  412d59:	or     esp,edi
  412d5b:	push   ss
  412d5c:	sbb    DWORD PTR [esi],ebx
  412d5e:	sbb    DWORD PTR [esi],esp
  412d60:	xchg   ebx,eax
  412d61:	dec    edx
  412d62:	mov    al,0xb7
  412d64:	jg     0x412d2e
  412d66:	cli    
  412d67:	ficomp DWORD PTR [edx]
  412d69:	(bad)  [esi-0x69]
  412d6c:	pop    eax
  412d6d:	sub    al,0xce
  412d6f:	fmul   st(4),st
  412d71:	and    al,0x46
  412d73:	and    al,0x2
  412d75:	cs inc esp
  412d77:	and    eax,DWORD PTR [esi]
  412d79:	mov    bh,0xef
  412d7b:	aam    0xe8
  412d7d:	pop    edx
  412d7e:	ss mov ch,0x46
  412d81:	sbb    eax,0x41009249
  412d86:	mov    ebp,0xad52a756
  412d8b:	loop   0x412d8f
  412d8d:	fstp   DWORD PTR [esi+ecx*1+0x55]
  412d91:	ror    DWORD PTR [eax-0x5b],cl
  412d94:	push   ebx
  412d95:	fdivr  QWORD PTR [edx+0x6b7b8379]
  412d9b:	jmp    0x412dc5
  412d9d:	stos   BYTE PTR es:[edi],al
  412d9e:	ret    0x3f47
  412da1:	cli    
  412da2:	adc    dh,cl
  412da4:	fs xchg edx,eax
  412da6:	xchg   ebx,eax
  412da7:	xchg   ebx,eax
  412da8:	adc    ebx,DWORD PTR [edx-0x5d4df933]
  412dae:	xor    BYTE PTR [ecx],dh
  412db0:	xor    ebp,eax
  412db2:	enter  0x38d8,0xd1
  412db6:	aam    0x10
  412db8:	aaa    
  412db9:	xlat   BYTE PTR ds:[ebx]
  412dba:	mov    dh,0x49
  412dbc:	mov    esi,DWORD PTR [edx]
  412dbe:	adc    ebx,DWORD PTR [edi-0x5]
  412dc1:	jne    0x412d97
  412dc3:	cmc    
  412dc4:	cmp    edi,DWORD PTR [eax]
  412dc6:	adc    cl,al
  412dc8:	xor    al,BYTE PTR [edx+eiz*1-0x1a]
  412dcc:	addr16 mov eax,ds:0xcff5
  412dd0:	iret   
  412dd1:	jp     0x412d8f
  412dd3:	sub    BYTE PTR ds:[eax],cl
  412dd6:	sub    eax,0xbf844780
  412ddb:	jl     0x412e1b
  412ddd:	cmc    
  412dde:	andps  xmm5,XMMWORD PTR [ebx-0x1f5750c7]
  412de5:	retf   0x3460
  412de8:	imul   esp,DWORD PTR [edi+esi*2],0x7e
  412dec:	pop    ss
  412ded:	mov    ecx,0x235c75f0
  412df2:	mov    bh,BYTE PTR [ecx]
  412df4:	jp     0x412d7f
  412df6:	lea    eax,[ebx+0xb8f8e53]
  412dfc:	mov    ah,0x9b
  412dfe:	jne    0x412e32
  412e00:	jmp    0xd2e3b839
  412e05:	push   0xffffffb6
  412e07:	enter  0x72e6,0x64
  412e0b:	xor    bl,BYTE PTR [ecx]
  412e0d:	fs pop ecx
  412e0f:	es xchg ebp,eax
  412e11:	dec    esi
  412e12:	adc    ecx,DWORD PTR [ebx+0x3e56be9a]
  412e18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e19:	fisubr WORD PTR [eax+0x42323233]
  412e1f:	cmp    bl,BYTE PTR [ebp-0x66ceedde]
  412e25:	cwde   
  412e26:	sbb    BYTE PTR [edi-0x434dd3b0],ah
  412e2c:	mov    edx,0x4552b54a
  412e31:	push   esi
  412e32:	xor    eax,0xbd468084
  412e37:	inc    ecx
  412e38:	cs aaa 
  412e3a:	inc    esp
  412e3b:	and    bl,BYTE PTR [ecx-0x4d52ad60]
  412e41:	mov    ebx,0x6bae87bb
  412e46:	je     0x412e02
  412e48:	push   ss
  412e49:	mov    ch,0x6a
  412e4b:	adc    eax,0xedfd1ef0
  412e50:	mov    eax,0xcdb5b9b0
  412e55:	jmp    0xc9495843
  412e5a:	pop    ebx
  412e5b:	fwait
  412e5c:	mov    al,0xdb
  412e5e:	in     eax,0xdc
  412e60:	mov    ecx,0x71212445
  412e65:	jecxz  0x412e3d
  412e67:	dec    ebp
  412e68:	(bad)  
  412e69:	xlat   BYTE PTR ds:[ebx]
  412e6a:	(bad)  
  412e6b:	push   0xc9323d35
  412e70:	or     eax,0xf3e7c8e5
  412e75:	or     al,0xd
  412e77:	in     eax,0x59
  412e79:	pop    edi
  412e7a:	pop    ebx
  412e7b:	out    0xe4,eax
  412e7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e7e:	inc    eax
  412e7f:	xor    al,0x16
  412e81:	and    edx,DWORD PTR [ecx+0x3a38524a]
  412e87:	loop   0x412e77
  412e89:	popf   
  412e8a:	(bad)  [edx+ebx*1]
  412e8d:	dec    ebp
  412e8e:	es addr16 push ss
  412e91:	dec    ecx
  412e92:	push   cs
  412e93:	dec    edi
  412e94:	mov    ds:0xeef61aea,al
  412e99:	sbb    esp,DWORD PTR [esi+ebx*8]
  412e9c:	(bad)  
  412e9d:	adc    eax,0x937e5716
  412ea2:	dec    eax
  412ea3:	icebp  
  412ea4:	or     BYTE PTR [ebx-0x7f],bl
  412ea7:	scas   al,BYTE PTR es:[edi]
  412ea8:	add    ecx,DWORD PTR [esi]
  412eaa:	shr    BYTE PTR [edx-0x6d],1
  412ead:	cld    
  412eae:	sub    edi,0xbe97f179
  412eb4:	hlt    
  412eb5:	(bad)  
  412eb6:	push   esi
  412eb7:	sti    
  412eb8:	lods   al,BYTE PTR ds:[esi]
  412eb9:	(bad)  
  412eba:	in     al,dx
  412ebb:	add    DWORD PTR [eax+0x47802d0],0xfffffff8
  412ec2:	jmp    0xb9903b16
  412ec7:	xchg   ebp,eax
  412ec8:	ret    0x9273
  412ecb:	out    0xbd,al
  412ecd:	push   edi
  412ece:	and    al,0xd0
  412ed0:	loop   0x412f32
  412ed2:	or     edx,DWORD PTR [eax-0x6a]
  412ed5:	fbld   TBYTE PTR [edx]
  412ed7:	mov    dl,0xf1
  412ed9:	push   ss
  412eda:	rcr    BYTE PTR [ebx+0x5f],cl
  412edd:	fs data16 in al,dx
  412ee0:	ret    
  412ee1:	ins    BYTE PTR es:[edi],dx
  412ee2:	imul   ecx,DWORD PTR [edi-0x1f],0xffffff88
  412ee6:	xor    al,0xd1
  412ee8:	in     al,dx
  412ee9:	adc    al,0x66
  412eeb:	jp     0x412e79
  412eed:	fdivr  st(0),st
  412eef:	add    al,0xc9
  412ef1:	js     0x412e77
  412ef3:	lods   eax,DWORD PTR ds:[esi]
  412ef4:	in     eax,dx
  412ef5:	sub    eax,0x640b8e4e
  412efa:	xchg   DWORD PTR [edx+0x7e],esi
  412efd:	(bad)  
  412efe:	fisub  WORD PTR [esi+ebx*2-0x3283b50d]
  412f05:	mov    BYTE PTR [edi-0x399e5800],dh
  412f0b:	enter  0x1324,0xdc
  412f0f:	mov    esp,0x9dbd877d
  412f14:	pop    ebp
  412f15:	test   BYTE PTR [ecx+edx*4],ah
  412f18:	pop    ds
  412f19:	sbb    ah,dl
  412f1b:	(bad)
  412f1f:	push   ebx
  412f20:	fisub  WORD PTR [ebx-0x68911343]
  412f26:	scas   eax,DWORD PTR es:[edi]
  412f27:	mov    esi,0xd3e516f5
  412f2c:	adc    cl,BYTE PTR [ebp-0x60187cba]
  412f32:	mov    ebp,0x67d9fc4e
  412f37:	imul   esi,DWORD PTR [ebx+ebx*8],0xdc73e48c
  412f3e:	mov    esp,0xe5959773
  412f43:	gs ins BYTE PTR es:[edi],dx
  412f45:	xlat   BYTE PTR ds:[ebx]
  412f46:	and    DWORD PTR [ecx],edx
  412f48:	dec    edi
  412f49:	xor    BYTE PTR [edi],dh
  412f4b:	cmp    ecx,DWORD PTR [ebp-0x2c]
  412f4e:	(bad)  
  412f4f:	adc    edx,esp
  412f51:	jmp    0x3657:0xa2858a0d
  412f58:	fsub   st(5),st
  412f5a:	loop   0x412f96
  412f5c:	push   eax
  412f5d:	lods   eax,DWORD PTR ds:[esi]
  412f5e:	push   esi
  412f5f:	test   eax,0x3668569c
  412f64:	call   0x332e:0x18c4f8c
  412f6b:	mov    bl,0x73
  412f6d:	and    BYTE PTR [ecx],ch
  412f6f:	lods   al,BYTE PTR ds:[esi]
  412f70:	mov    esp,0xd3529777
  412f75:	and    eax,0xb5284aea
  412f7a:	or     eax,0x25fe37ac
  412f7f:	repnz fnstsw WORD PTR [edi+0x4d]
  412f83:	bound  edi,QWORD PTR [edi-0x77]
  412f86:	pop    eax
  412f87:	or     ebx,DWORD PTR [edx-0x23f293fe]
  412f8d:	mov    ss,edi
  412f8f:	daa    
  412f90:	inc    edx
  412f91:	add    bh,BYTE PTR [edx-0x5a5c3633]
  412f97:	mov    ebx,0x77bf022f
  412f9c:	xchg   BYTE PTR [ebx-0xa],al
  412f9f:	add    DWORD PTR [ecx+0x48],0x8a008f00
  412fa6:	mov    al,0x5f
  412fa8:	push   eax
  412fa9:	pop    esp
  412faa:	cmp    ebp,ebp
  412fac:	pop    ss
  412fad:	(bad)
  412fb0:	mov    al,ds:0xde0fde28
  412fb5:	xchg   ebp,eax
  412fb6:	inc    ecx
  412fb7:	sub    BYTE PTR [eax],ah
  412fb9:	jbe    0x412f92
  412fbb:	sbb    DWORD PTR ds:0x1758675a,edi
  412fc1:	fdivr  DWORD PTR [ecx+0x27ca9469]
  412fc7:	push   0x488f3e8f
  412fcc:	pop    ebp
  412fcd:	inc    esi
  412fce:	retf   
  412fcf:	pop    edi
  412fd0:	mov    eax,ds:0x69d1c98d
  412fd5:	xchg   DWORD PTR [edx-0x55],ebp
  412fd8:	inc    eax
  412fd9:	xor    dl,BYTE PTR [ebp-0x585a3d19]
  412fdf:	mov    BYTE PTR [edi],ah
  412fe1:	mov    dh,0x18
  412fe3:	retf   0x28e6
  412fe6:	xchg   edi,eax
  412fe7:	sub    ebp,esp
  412fe9:	in     al,dx
  412fea:	outs   dx,BYTE PTR ds:[esi]
  412feb:	shr    DWORD PTR [edx+0x75],cl
  412fee:	cwde   
  412fef:	fwait
  412ff0:	fwait
  412ff1:	inc    edi
  412ff2:	xlat   BYTE PTR ds:[ebx]
  412ff3:	jne    0x413057
  412ff5:	icebp  
  412ff6:	mov    eax,0x5c0ec0f7
  412ffb:	sbb    cl,ch
  412ffd:	lods   eax,DWORD PTR ss:[esi]
  412fff:	jbe    0x41301c
  413001:	(bad)  
  413002:	mov    dh,0x71
  413004:	add    DWORD PTR [ecx-0x6f],ebx
  413007:	add    DWORD PTR [ecx-0x51d1ffc0],eax
  41300d:	jmp    0x412ff1
  41300f:	cmp    dh,BYTE PTR [esi]
  413011:	mov    dh,0x63
  413013:	and    ecx,DWORD PTR [ebx+0x12]
  413016:	mov    dl,0x2c
  413018:	adc    ecx,edx
  41301a:	and    edi,DWORD PTR [eax+0x49c9cbae]
  413020:	mov    ebp,ebp
  413022:	in     eax,dx
  413023:	pop    ebp
  413024:	stos   BYTE PTR es:[edi],al
  413025:	aad    0x1a
  413027:	inc    esi
  413028:	les    esp,FWORD PTR [eax+0x66]
  41302b:	jbe    0x412fc7
  41302d:	jb     0x412fd8
  41302f:	int3   
  413030:	test   DWORD PTR [ebx-0x242227e9],ecx
  413036:	in     eax,0xe6
  413038:	int    0x5b
  41303a:	aam    0x9a
  41303c:	ins    DWORD PTR es:[edi],dx
  41303d:	scas   al,BYTE PTR es:[edi]
  41303e:	pop    esp
  41303f:	jg     0x412fdf
  413041:	lds    ecx,FWORD PTR [ebx+0x2c911197]
  413047:	inc    esi
  413048:	inc    esp
  413049:	shr    DWORD PTR [edx],0x6d
  41304c:	xor    edx,DWORD PTR [ebp+edi*2-0x65]
  413050:	jmp    0xb6875e37
  413055:	out    dx,al
  413056:	mov    ds:0xab906f1c,al
  41305b:	jbe    0x4130cd
  41305d:	xor    BYTE PTR [esi-0x2ef8b900],0x5
  413064:	and    DWORD PTR [eax-0x6f],eax
  413067:	mov    eax,ds:0x28c4f96b
  41306c:	and    ebx,DWORD PTR [edi+edx*2]
  41306f:	std    
  413070:	sbb    BYTE PTR [ecx],ah
  413072:	add    DWORD PTR [edx+edx*1],edi
  413075:	mov    BYTE PTR [ebx+0x20f81be],dh
  41307b:	jle    0x413063
  41307d:	jns    0x413062
  41307f:	push   edi
  413080:	shr    BYTE PTR [edx-0x15],cl
  413083:	aas    
  413084:	push   edi
  413085:	adc    al,0xd0
  413087:	adc    eax,0xa7483430
  41308c:	inc    ecx
  41308d:	push   edx
  41308e:	inc    eax
  41308f:	xchg   esi,eax
  413090:	inc    eax
  413091:	push   edi
  413092:	cmp    eax,0x419657ff
  413097:	mov    eax,0xcba03b20
  41309c:	and    BYTE PTR [ecx-0x2bae64a0],ch
  4130a2:	cld    
  4130a3:	or     al,0xf5
  4130a5:	clc    
  4130a6:	sbb    al,0x5
  4130a8:	jne    0x413034
  4130aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130ab:	cmp    ebp,eax
  4130ad:	hlt    
  4130ae:	shr    DWORD PTR [edi+0x51cfcf11],cl
  4130b4:	ins    DWORD PTR es:[edi],dx
  4130b5:	sub    esp,esp
  4130b7:	repz sub DWORD PTR [edx-0x1b],ecx
  4130bb:	es jg  0x4130ba
  4130be:	aad    0xaf
  4130c0:	push   edx
  4130c1:	lods   eax,DWORD PTR ds:[esi]
  4130c2:	aad    0x39
  4130c4:	mov    edi,0xd70bc0b8
  4130c9:	das    
  4130ca:	jno    0x413144
  4130cc:	pop    eax
  4130cd:	inc    esp
  4130ce:	push   ebx
  4130cf:	adc    eax,0xe6e15574
  4130d4:	in     eax,dx
  4130d5:	fistp  DWORD PTR [esp+ebp*8]
  4130d8:	in     eax,dx
  4130d9:	xchg   edx,eax
  4130da:	dec    esp
  4130db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130dc:	jns    0x4130d8
  4130de:	test   eax,0x760210a7
  4130e3:	div    esi
  4130e5:	cdq    
  4130e6:	popf   
  4130e7:	sahf   
  4130e8:	mov    ds:0xe773ab52,al
  4130ed:	scas   al,BYTE PTR es:[edi]
  4130ee:	neg    DWORD PTR [eax+0x458585b1]
  4130f4:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130f7:	cmp    BYTE PTR [esi],ch
  4130f9:	pushf  
  4130fa:	adc    BYTE PTR [ecx],dh
  4130fc:	and    esp,DWORD PTR [edx+eiz*8]
  4130ff:	or     esi,ebx
  413101:	jl     0x4130fe
  413103:	pop    ebp
  413104:	ss mov bh,0x77
  413107:	mov    DWORD PTR [eax-0x2702a1cf],ebx
  41310d:	(bad)  
  41310e:	mov    BYTE PTR [eax],bl
  413110:	xor    al,BYTE PTR [edi-0x6dcf57b]
  413116:	add    al,0x9b
  413118:	sbb    edi,DWORD PTR [ebx+0x7c]
  41311b:	jecxz  0x41316c
  41311d:	(bad)  
  41311e:	adc    bl,al
  413120:	test   eax,0x60cc7170
  413125:	pop    eax
  413126:	cmp    DWORD PTR [ebp-0x5dea0b4e],esp
  41312c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41312d:	ja     0x41317f
  41312f:	mov    bh,BYTE PTR [ebx]
  413131:	sub    BYTE PTR [ebp+0x3a1b4e32],cl
  413137:	push   ss
  413138:	je     0x413196
  41313a:	test   al,0x77
  41313c:	cmp    eax,0xb01c73f2
  413141:	ins    BYTE PTR es:[edi],dx
  413142:	push   0x8363a076
  413147:	in     eax,0x40
  413149:	mov    ebx,0x776fbdeb
  41314e:	loope  0x413108
  413150:	retf   0x5b0d
  413153:	xlat   BYTE PTR ds:[ebx]
  413154:	scas   al,BYTE PTR es:[edi]
  413155:	std    
  413156:	std    
  413157:	mov    bh,0x3b
  413159:	neg    BYTE PTR [ecx-0x71]
  41315c:	fstp   QWORD PTR [edi+0x74]
  41315f:	test   BYTE PTR [esi],dl
  413161:	rol    BYTE PTR [ebx-0x3a],0xff
  413165:	jo     0x4131ac
  413167:	dec    ebp
  413168:	mov    ch,BYTE PTR [esi-0x5]
  41316b:	push   ebp
  41316c:	fld    DWORD PTR [eax]
  41316e:	dec    ecx
  41316f:	add    bl,cl
  413171:	xlat   BYTE PTR ds:[ebx]
  413172:	js     0x4131bc
  413174:	loopne 0x413180
  413176:	dec    edi
  413177:	add    ebx,edx
  413179:	mov    ?,WORD PTR [edi-0x4db7fb6b]
  41317f:	out    0x1a,eax
  413181:	pop    eax
  413182:	mov    dh,BYTE PTR [edi-0x54]
  413185:	aam    0xac
  413187:	ret    
  413188:	(bad)  
  413189:	sub    eax,0x5916e2e2
  41318e:	sbb    eax,0x9df60684
  413193:	cmp    BYTE PTR [esi+0x2c],ch
  413196:	and    DWORD PTR [ecx-0x5c],0xffffffe9
  41319a:	mov    ds,WORD PTR [esi+0x44]
  41319d:	(bad)  
  41319e:	dec    esi
  41319f:	mov    al,0x58
  4131a1:	outs   dx,BYTE PTR ds:[esi]
  4131a2:	push   ebx
  4131a3:	push   0x47
  4131a5:	dec    eax
  4131a6:	xchg   edi,eax
  4131a7:	dec    ebx
  4131a8:	je     0x4131a1
  4131aa:	stos   BYTE PTR es:[edi],al
  4131ab:	rcl    BYTE PTR [eax-0x6f],1
  4131ae:	loop   0x4131c9
  4131b0:	je     0x4131e5
  4131b2:	mov    ebp,ebp
  4131b4:	je     0x41319f
  4131b6:	mov    edx,0x1746d512
  4131bb:	cmp    eax,0x55d7409a
  4131c0:	repnz inc edx
  4131c2:	daa    
  4131c3:	sahf   
  4131c4:	mov    ss,ecx
  4131c6:	inc    edx
  4131c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131c8:	(bad)  
  4131c9:	xchg   BYTE PTR [esi-0x7d7a4fdb],ah
  4131cf:	sbb    DWORD PTR [ebp+0x51456f10],ecx
  4131d5:	gs pop es
  4131d7:	fldcw  WORD PTR [edx]
  4131d9:	mov    eax,ds:0x74498fb6
  4131de:	test   DWORD PTR [eax+0x77],0x295a41c
  4131e5:	popf   
  4131e6:	jmp    0x5cae:0x6e1da21
  4131ed:	and    BYTE PTR [edi-0x14286881],bh
  4131f3:	cmp    ebx,DWORD PTR [eax]
  4131f5:	lods   eax,DWORD PTR ds:[esi]
  4131f6:	sbb    cl,dl
  4131f8:	jp     0x413207
  4131fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131fb:	add    DWORD PTR [ecx],ebp
  4131fd:	leave  
  4131fe:	imul   ecx,DWORD PTR [edi-0x2165871b],0x52
  413205:	rol    DWORD PTR [edx],0x1c
  413208:	fcmovnbe st,st(3)
  41320a:	lock xchg esi,eax
  41320c:	or     eax,0x8111eb8
  413211:	loope  0x4131c8
  413213:	rol    esi,1
  413215:	outs   dx,DWORD PTR ds:[esi]
  413216:	stos   DWORD PTR es:[edi],eax
  413217:	out    dx,eax
  413218:	push   es
  413219:	push   0x9d18bcb2
  41321e:	sahf   
  41321f:	mov    esi,0xef2bdbcc
  413224:	sahf   
  413225:	in     eax,dx
  413226:	call   0x4888f828
  41322b:	add    BYTE PTR [edi],cl
  41322d:	sbb    ebx,edx
  41322f:	iret   
  413230:	pop    esp
  413231:	mov    eax,0x7375beda
  413236:	fcmovb st,st(5)
  413238:	sti    
  413239:	sar    DWORD PTR [ebx-0x28329bfe],1
  41323f:	idiv   BYTE PTR [eax+0x51]
  413242:	pop    eax
  413243:	pop    ecx
  413244:	repnz test BYTE PTR [ecx-0x243dfdb9],ah
  41324b:	daa    
  41324c:	stc    
  41324d:	lahf   
  41324e:	mov    ebx,0x3a091c02
  413253:	adc    cl,BYTE PTR [eax+0x36]
  413256:	enter  0x154e,0xb9
  41325a:	pop    ebp
  41325b:	inc    ebp
  41325c:	adc    eax,0xeffb09b
  413261:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413262:	add    al,0x97
  413264:	jmp    0x413204
  413266:	das    
  413267:	ins    DWORD PTR es:[edi],dx
  413268:	fild   WORD PTR [edi+eiz*8]
  41326b:	call   DWORD PTR [ecx+0x48]
  41326e:	push   0x4d47206
  413273:	and    eax,edx
  413275:	adc    eax,0x259ce5db
  41327a:	and    DWORD PTR [edi-0x5e],eax
  41327d:	test   al,0x7b
  41327f:	imul   ebx,DWORD PTR [ecx+ecx*2],0x745b6223
  413286:	mov    ds:0xc3ab6626,eax
  41328b:	inc    edi
  41328c:	sbb    edx,DWORD PTR [ebp+0x5c]
  41328f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413290:	dec    ebx
  413291:	hlt    
  413292:	pop    eax
  413293:	ret    0x13fe
  413296:	or     esp,DWORD PTR [ebx+0x3611435e]
  41329c:	mov    dl,0xdc
  41329e:	in     eax,0xd9
  4132a0:	push   esi
  4132a1:	sbb    eax,0xd1144d3a
  4132a6:	sar    DWORD PTR [ebp-0xb6fa7f5],0x3c
  4132ad:	pop    es
  4132ae:	and    al,dl
  4132b0:	mov    bl,0x62
  4132b2:	ins    BYTE PTR es:[edi],dx
  4132b3:	or     DWORD PTR [eax*1+0xb2c1444],ebx
  4132ba:	pop    esp
  4132bb:	retf   
  4132bc:	fwait
  4132bd:	jae    0x4132df
  4132bf:	and    al,0x10
  4132c1:	mov    dh,0xd7
  4132c3:	push   ss
  4132c4:	loope  0x413340
  4132c6:	in     eax,dx
  4132c7:	in     al,dx
  4132c8:	pop    edx
  4132c9:	js     0x41325a
  4132cb:	sbb    edx,DWORD PTR [ebp-0x1c490844]
  4132d1:	mov    ch,0xd7
  4132d3:	lds    esp,FWORD PTR [ebx]
  4132d5:	or     BYTE PTR [ebp+0x6],al
  4132d8:	add    eax,0x2fb810db
  4132dd:	add    esp,DWORD PTR [ecx]
  4132df:	add    DWORD PTR [esp+eiz*2],edi
  4132e2:	test   BYTE PTR [eax+esi*8],al
  4132e5:	nop
  4132e6:	push   ecx
  4132e7:	(bad)  
  4132e9:	sti    
  4132ea:	mov    ah,0xae
  4132ec:	mov    eax,0x64d00842
  4132f1:	dec    edi
  4132f2:	shr    DWORD PTR [ecx-0x6df9b876],cl
  4132f8:	add    al,0x48
  4132fa:	jge    0x41327d
  4132fc:	pop    es
  4132fd:	dec    edi
  4132fe:	jo     0x4132f0
  413300:	mov    ch,0xa1
  413302:	jmp    0x4132e6
  413304:	dec    ecx
  413305:	xchg   BYTE PTR [edx+edx*4],al
  413308:	jmp    0x4132c7
  41330a:	test   BYTE PTR [eax],al
  41330c:	and    DWORD PTR [ebx+0x1f],edi
  41330f:	mov    ebx,0xb03f1792
  413314:	pop    ebp
  413315:	das    
  413316:	mov    cl,BYTE PTR [esi-0x4fd0e21d]
  41331c:	push   eax
  41331d:	in     eax,dx
  41331e:	sbb    dh,BYTE PTR [edx+ebp*2]
  413321:	mov    eax,0x9832182e
  413326:	xchg   edx,eax
  413327:	outs   dx,DWORD PTR ds:[esi]
  413328:	pop    ebp
  413329:	in     al,dx
  41332a:	jp     0x413303
  41332c:	xor    eax,0x305cb054
  413331:	add    eax,0xc37702c4
  413336:	icebp  
  413337:	mov    esi,0x1a7aaa3f
  41333c:	pop    ebx
  41333d:	enter  0xbde,0xc9
  413341:	sti    
  413342:	(bad)
  413348:	scas   al,BYTE PTR es:[edi]
  413349:	in     eax,dx
  41334a:	frstor [edi+0x7d66f83]
  413350:	mov    bh,0xea
  413352:	imul   esi,DWORD PTR [ecx+eiz*8-0x41],0x5c
  413357:	cmp    al,0x41
  413359:	ja     0x41337f
  41335b:	iret   
  41335c:	adc    eax,0x402b7c90
  413361:	push   ss
  413362:	sahf   
  413363:	pop    ebx
  413364:	sub    bl,0x7d
  413367:	addr16 pusha 
  413369:	sbb    eax,0x4088c008
  41336e:	jno    0x41336d
  413370:	fidiv  WORD PTR [edi+0x3]
  413373:	aas    
  413374:	sti    
  413375:	test   al,0xc6
  413377:	jmp    0x12f1bdff
  41337c:	lock and edx,esp
  41337f:	(bad)  
  413380:	pop    edi
  413381:	(bad)  
  413382:	retf   0xe9f6
  413385:	jmp    0x3816a831
  41338a:	sti    
  41338b:	add    eax,0x178ac8
  413390:	or     al,0x34
  413392:	cmp    eax,0x2c0bf6be
  413397:	add    al,0xc7
  413399:	icebp  
  41339a:	add    eax,0x27139fdf
  41339f:	or     eax,0x1c010758
  4133a4:	(bad)  
  4133a5:	jnp    0x4133b0
  4133a7:	call   0xd4c211f7
  4133ac:	mov    ecx,0x570723c2
  4133b1:	add    DWORD PTR [ecx-0x80],esp
  4133b4:	stos   DWORD PTR es:[edi],eax
  4133b5:	and    BYTE PTR ds:0xab832581,0x83
  4133bc:	stos   DWORD PTR es:[edi],eax
  4133bd:	jns    0x4133ae
  4133bf:	test   esi,ebp
  4133c1:	mov    ebp,0xe864b7
  4133c6:	mov    gs,edx
  4133c8:	sbb    eax,0x68048eb
  4133cd:	sub    al,ah
  4133cf:	or     al,0x8
  4133d1:	cmp    DWORD PTR [edx-0x20],esp
  4133d4:	cmp    eax,DWORD PTR [ebp-0x247c2a59]
  4133da:	adc    bh,dh
  4133dc:	xor    DWORD PTR [esi+0x4b7dff7b],ebp
  4133e2:	dec    BYTE PTR [esp+eax*2]
  4133e5:	(bad)  
  4133e6:	ja     0x41345b
  4133e8:	add    al,0x1e
  4133ea:	and    DWORD PTR [eax-0x484d57d2],edi
  4133f0:	aas    
  4133f1:	mov    al,0x80
  4133f3:	pop    esp
  4133f4:	xlat   BYTE PTR ds:[ebx]
  4133f5:	and    eax,DWORD PTR [esi]
  4133f7:	pop    ecx
  4133f8:	sub    BYTE PTR [edx],0xa4
  4133fb:	stos   DWORD PTR es:[edi],eax
  4133fc:	aas    
  4133fd:	(bad)  
  4133fe:	stc    
  4133ff:	jmp    0x3676bbb5
  413404:	and    DWORD PTR [esp+eax*4],edi
  413407:	add    al,0xf0
  413409:	adc    BYTE PTR [ecx+0x8],ah
  41340c:	in     eax,dx
  41340d:	mov    ds:0x85e7d92e,al
  413412:	(bad)  
  413414:	xchg   edx,eax
  413415:	add    BYTE PTR [ebp-0xd],bl
  413418:	add    al,0x14
  41341a:	mov    bh,0x2f
  41341c:	and    BYTE PTR [esi+0x7fa603b],ch
  413422:	pop    ebx
  413423:	pop    edi
  413424:	sub    BYTE PTR [edi+eax*8],bl
  413427:	adc    esi,DWORD PTR [eax+eax*1-0x34dde342]
  41342e:	ficomp WORD PTR [ebx]
  413430:	dec    ecx
  413431:	jmp    0x83fb:0xfa75cb5f
  413438:	jg     0x413440
  41343a:	add    eax,0x63bd75d2
  41343f:	or     BYTE PTR [esi-0x7f6ec19],ch
  413445:	add    al,0xe3
  413447:	push   cs
  413448:	jl     0x4133cb
  41344a:	cmp    esi,DWORD PTR [eax+0x3d]
  41344d:	jno    0x41344e
  41344f:	mov    ch,0x82
  413451:	jecxz  0x4134ce
  413453:	in     eax,dx
  413454:	nop
  413455:	sti    
  413456:	fbstp  TBYTE PTR [ecx]
  413458:	js     0x4134b6
  41345a:	iret   
  41345b:	lods   eax,DWORD PTR ds:[esi]
  41345c:	icebp  
  41345d:	jge    0x4134da
  41345f:	dec    ecx
  413460:	mov    edx,0x671dddf
  413465:	dec    eax
  413466:	gs nop
  413468:	or     BYTE PTR [ecx+ecx*1],ah
  41346b:	adc    al,0xba
  41346d:	fld    st(3)
  41346f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413470:	int    0x97
  413472:	pop    ds
  413473:	enter  0x8440,0xf8
  413477:	xor    edx,DWORD PTR [ecx]
  413479:	adc    al,al
  41347b:	inc    ebx
  41347c:	inc    esp
  41347d:	and    al,0x12
  41347f:	jge    0x4134ce
  413481:	jb     0x4134e0
  413483:	xchg   ebx,eax
  413484:	rcr    DWORD PTR [edi],0xb7
  413487:	pop    ds
  413488:	stc    
  413489:	xchg   DWORD PTR [esi-0x7e83f5c0],edi
  41348f:	ret    0x80d7
  413492:	mov    esi,0x73f02c6f
  413497:	jecxz  0x41345a
  413499:	icebp  
  41349a:	add    edx,DWORD PTR [esi-0x7d]
  41349d:	adc    ecx,DWORD PTR [eax]
  41349f:	mov    ds:0xd771ccf0,eax
  4134a4:	daa    
  4134a5:	mov    al,BYTE PTR [eax-0x48]
  4134a8:	add    al,0x20
  4134aa:	jl     0x41350d
  4134ac:	ja     0x41351b
  4134ae:	iret   
  4134af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134b0:	ja     0x41352f
  4134b2:	jmp    0x413456
  4134b4:	inc    edi
  4134b5:	cs (bad) 
  4134b7:	xor    eax,0xc3407b1c
  4134bc:	sti    
  4134bd:	inc    esp
  4134be:	and    ah,BYTE PTR [esi+edi*8+0xc93e1bd]
  4134c5:	clc    
  4134c6:	xlat   BYTE PTR ds:[ebx]
  4134c7:	jo     0x4134c3
  4134c9:	sti    
  4134ca:	pop    esp
  4134cb:	(bad)  
  4134cc:	sti    
  4134cd:	xor    esi,0x8
  4134d0:	mov    esp,0x23d0ba36
  4134d5:	es gs inc eax
  4134d8:	shl    edi,cl
  4134da:	sub    al,0x17
  4134dc:	mov    edi,0x1a4f8aad
  4134e1:	xchg   edx,eax
  4134e2:	call   0x8a417e42
  4134e7:	sbb    BYTE PTR [eax+0x2a],0xfe
  4134eb:	jmp    0x216570f7
  4134f0:	fiadd  WORD PTR [edi+0x221e0090]
  4134f6:	pushf  
  4134f7:	jp     0x4134e6
  4134f9:	jne    0x4134c4
  4134fb:	div    ecx
  4134fd:	and    eax,0x329700fc
  413502:	and    al,bl
  413504:	add    eax,DWORD PTR [ecx]
  413506:	aas    
  413507:	lock dec ebp
  413509:	arpl   WORD PTR [edi+ecx*8+0xeefa954],di
  413510:	cmp    BYTE PTR [esi],cl
  413512:	fdivr  DWORD PTR [esi-0xc]
  413515:	cmp    al,0xf8
  413517:	sub    al,0x18
  413519:	mov    eax,0x9e3a34fb
  41351e:	xor    BYTE PTR [ebx],bh
  413520:	jle    0x4134d2
  413522:	xor    eax,edx
  413524:	rol    cl,1
  413526:	outs   dx,BYTE PTR ds:[esi]
  413527:	imul   esp,DWORD PTR [eax],0x766810b6
  41352d:	loope  0x4134ea
  41352f:	and    eax,0x683f6981
  413534:	cmp    eax,0xe42faa48
  413539:	xchg   esi,eax
  41353a:	jg     0x4134fb
  41353c:	outs   dx,BYTE PTR ds:[esi]
  41353d:	fist   WORD PTR ds:0xd9fdc111
  413543:	jge    0x413538
  413545:	aas    
  413546:	and    BYTE PTR [eax-0x30406340],dl
  41354c:	mov    ebp,0xd0736e09
  413551:	call   0x5df:0x52abf7f0
  413558:	adc    bh,BYTE PTR [eax+0x31]
  41355b:	adc    al,BYTE PTR [ebp+0x5]
  41355e:	leave  
  41355f:	mov    dl,0x5e
  413561:	std    
  413562:	pop    ss
  413563:	aas    
  413564:	cld    
  413565:	inc    edx
  413566:	hlt    
  413567:	add    DWORD PTR [esi],ecx
  413569:	dec    ecx
  41356a:	mov    bh,dh
  41356c:	and    DWORD PTR [eax+eax*4],esp
  41356f:	xchg   DWORD PTR [edi+edi*2-0x1ccc420e],eax
  413576:	xor    al,0xaa
  413578:	iret   
  413579:	test   eax,0x5624df6a
  41357e:	xchg   ebp,eax
  41357f:	sti    
  413580:	cmp    DWORD PTR [ebx+0x41],0xfffffff4
  413584:	pop    ebx
  413585:	or     cl,ah
  413587:	ja     0x4135e8
  413589:	add    BYTE PTR [edx+0x52a0203],bh
  41358f:	sbb    dh,BYTE PTR [ecx-0x40]
  413592:	in     al,0xf
  413594:	lods   al,BYTE PTR ds:[esi]
  413595:	test   DWORD PTR [eax-0x4e],eax
  413598:	test   ebx,ebp
  41359a:	or     edi,DWORD PTR [esi]
  41359c:	fdivp  st(6),st
  41359e:	loopne 0x4135bc
  4135a0:	outs   dx,DWORD PTR ds:[esi]
  4135a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135a2:	das    
  4135a3:	mov    esp,0x40f991f8
  4135a8:	dec    eax
  4135a9:	and    DWORD PTR [eax-0x62],0xfffffffb
  4135ad:	sub    eax,0x4c17b584
  4135b2:	in     al,dx
  4135b3:	out    dx,eax
  4135b4:	jmp    0x413613
  4135b6:	dec    ebx
  4135b7:	out    dx,al
  4135b8:	pop    edi
  4135b9:	das    
  4135ba:	mov    al,0x68
  4135bc:	sbb    BYTE PTR [eax],dh
  4135be:	jmp    0x413543
  4135c0:	sti    
  4135c1:	push   edx
  4135c2:	xchg   esp,eax
  4135c3:	mov    esi,0x2373d225
  4135c8:	xor    BYTE PTR [esi-0x30],0x27
  4135cc:	mov    ebx,0xf85fb341
  4135d1:	push   ss
  4135d2:	inc    ecx
  4135d3:	iret   
  4135d4:	sbb    dh,BYTE PTR [eax-0x20e4ccc6]
  4135da:	js     0x4135d3
  4135dc:	lds    eax,FWORD PTR [edi]
  4135de:	xor    BYTE PTR [ecx+eiz*1],bl
  4135e1:	dec    BYTE PTR [esp+eax*4]
  4135e4:	add    al,0xf0
  4135e6:	nop
  4135e7:	mov    al,ds:0x8417e91b
  4135ec:	gs out 0x84,eax
  4135ef:	in     al,0x5
  4135f1:	mov    ebx,0x7f83f084
  4135f6:	push   edx
  4135f7:	pop    edi
  4135f8:	sub    BYTE PTR [edi+edi*1],bl
  4135fb:	add    eax,0x73ede486
  413600:	jmp    0xdbc545f4
  413605:	jbe    0x413683
  413607:	jg     0x413648
  413609:	adc    BYTE PTR [edx-0x49],al
  41360c:	mov    edi,0xea4d7d75
  413611:	je     0x41360e
  413613:	lahf   
  413614:	(bad)  
  413616:	popa   
  413617:	loopne 0x4135d4
  413619:	pop    es
  41361a:	ret    0x81c
  41361d:	mov    ah,0x10
  41361f:	loopne 0x413619
  413621:	jmp    0x86f7d4e0
  413626:	sahf   
  413627:	xchg   si,ax
  413629:	adc    al,0x8f
  41362b:	add    al,0x1c
  41362d:	mov    ebx,0x5b65dff
  413632:	clc    
  413633:	sbb    bh,BYTE PTR [edi+0x7740c17]
  413639:	fcomp  QWORD PTR [eax-0x3e7ec8ff]
  41363f:	js     0x4135c5
  413641:	out    dx,eax
  413642:	push   0x4
  413644:	xor    eax,0x1737e10
  413649:	out    dx,eax
  41364a:	mov    ebp,0x2033578b
  41364f:	lock cli 
  413651:	dec    ecx
  413652:	push   cs
  413653:	loop   0x41365e
  413655:	add    dl,BYTE PTR [ecx+eiz*2+0xb]
  413659:	pop    ecx
  41365a:	push   edx
  41365b:	pop    edi
  41365c:	std    
  41365d:	mov    dh,0x7
  41365f:	and    eax,esp
  413661:	lahf   
  413662:	mov    DWORD PTR [eax+0x4a121e00],edx
  413668:	retf   
  413669:	dec    ebx
  41366a:	scas   eax,DWORD PTR es:[edi]
  41366b:	imul   ebx,esi,0xffffffea
  41366e:	fstp   TBYTE PTR ds:0xc5072f2d
  413674:	cmp    eax,0x914c407e
  413679:	mov    eax,0x3f46b03f
  41367e:	and    eax,0xfb279c16
  413683:	test   al,ah
  413685:	clc    
  413686:	xchg   ecx,eax
  413687:	mul    DWORD PTR [eax-0x39]
  41368a:	mov    al,ds:0x10c41cc9
  41368f:	cmp    BYTE PTR [ebp-0x3f],0xff
  413693:	adc    DWORD PTR [esi+0x5],0x3
  413697:	add    DWORD PTR [edx],edi
  413699:	xlat   BYTE PTR ds:[ebx]
  41369a:	(bad)
  41369e:	add    esi,DWORD PTR [eax-0x43]
  4136a1:	jecxz  0x41371b
  4136a3:	lahf   
  4136a4:	dec    edi
  4136a5:	pop    ds
  4136a6:	cwde   
  4136a7:	cld    
  4136a8:	add    DWORD PTR [ebx-0x7],ebp
  4136ab:	(bad)  
  4136ad:	pop    eax
  4136ae:	hlt    
  4136af:	loop   0x4136c0
  4136b1:	sbb    DWORD PTR [eax],0x74
  4136b4:	adc    DWORD PTR [edx-0x12],edi
  4136b7:	(bad)  
  4136b8:	(bad)  
  4136b9:	jmp    0x51ba:0xdf443865
  4136c0:	push   es
  4136c1:	add    al,BYTE PTR [ebx+0x33f0ae]
  4136c7:	mov    dl,0x67
  4136c9:	add    DWORD PTR [eax-0x932c7f6],ebp
  4136cf:	jmp    0x413710
  4136d1:	(bad)  
  4136d2:	cmp    eax,0xb5a4e10b
  4136d7:	xchg   DWORD PTR [eax+edx*4+0x7e021e00],eax
  4136de:	div    bl
  4136e0:	xchg   ebx,eax
  4136e1:	push   ecx
  4136e2:	push   ebp
  4136e3:	je     0x413744
  4136e5:	or     DWORD PTR [ebx+ebx*8-0x40],ecx
  4136e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136ea:	push   ebp
  4136eb:	adc    al,0x4f
  4136ed:	mov    ds:0xb667aebb,eax
  4136f2:	idiv   DWORD PTR [edx+eiz*2-0x49]
  4136f6:	scas   eax,DWORD PTR es:[edi]
  4136f7:	ins    DWORD PTR es:[edi],dx
  4136f8:	add    eax,0x981fbf9e
  4136fd:	iret   
  4136fe:	loopne 0x413691
  413700:	sub    BYTE PTR [edi+esi*8],0xad
  413704:	add    eax,0xeb900be8
  413709:	idiv   ch
  41370b:	jo     0x413756
  41370d:	clc    
  41370e:	mov    ecx,0xe7efa77c
  413713:	mul    DWORD PTR [edx+0x0]
  413716:	into   
  413717:	add    BYTE PTR [eax+0x7],0xd7
  41371b:	jbe    0x413723
  41371d:	jl     0x413792
  41371f:	push   es
  413720:	int3   
  413721:	std    
  413722:	rcl    DWORD PTR [edi+0x6b3d537f],0x22
  413729:	clc    
  41372a:	lds    eax,FWORD PTR [ecx+ebx*4]
  41372d:	lea    eax,[ecx]
  41372f:	xchg   edi,eax
  413730:	xor    BYTE PTR fs:[esi-0x40ca1c30],ch
  413737:	xadd   BYTE PTR [ebx+0x7ee49043],ch
  41373e:	lahf   
  41373f:	or     BYTE PTR [edi],bh
  413741:	and    al,BYTE PTR ss:0x29641ddf
  413748:	jl     0x4136fc
  41374a:	nop
  41374b:	and    eax,0xf5170e10
  413750:	push   0x37b7e2ec
  413755:	and    ah,BYTE PTR [ecx]
  413757:	(bad)  
  413758:	sub    al,0x84
  41375a:	add    al,0xf0
  41375c:	adc    BYTE PTR [eax+0x26bd9b19],dl
  413762:	ja     0x413750
  413764:	jns    0x4137b3
  413766:	repz mov ds:0x9a048ad9,al
  41376c:	not    DWORD PTR [esi+ebp*4-0xda3cba2]
  413773:	out    0xbf,eax
  413775:	retf   
  413776:	add    DWORD PTR [edx+0x46],0x5f
  41377a:	fild   DWORD PTR [ebx]
  41377d:	sbb    BYTE PTR cs:[ebx],0x8
  413781:	xor    eax,0x7a03eaf4
  413786:	es aas 
  413788:	adc    ch,0x17
  41378b:	clc    
  41378c:	push   ds
  41378d:	push   ecx
  41378e:	jo     0x41380f
  413790:	or     eax,0x6100c381
  413795:	add    al,0xd6
  413797:	test   BYTE PTR [edi+ecx*2-0x38],al
  41379b:	jnp    0x4137fe
  41379d:	add    esi,DWORD PTR [edi+0x20]
  4137a0:	loopne 0x413769
  4137a2:	sti    
  4137a3:	or     BYTE PTR [edx+eiz*4-0x1dc257d1],0x1a
  4137ab:	or     al,0x28
  4137ad:	push   es
  4137ae:	xchg   DWORD PTR [esi],ecx
  4137b0:	push   0xf88f1ef8
  4137b5:	std    
  4137b6:	loopne 0x41379a
  4137b8:	lahf   
  4137b9:	jecxz  0x41375a
  4137bb:	imul   edi,DWORD PTR [ebx-0x2848c03],0xffffff82
  4137c2:	pop    ds
  4137c3:	das    
  4137c4:	xchg   ecx,eax
  4137c5:	inc    ecx
  4137c6:	cmp    BYTE PTR [ebp-0x38b4cb8],bl
  4137cc:	shl    BYTE PTR [edi-0x41ded7c3],cl
  4137d2:	and    eax,0x8780242
  4137d7:	cmp    BYTE PTR [ecx-0x552c1c85],bh
  4137dd:	out    0x78,al
  4137df:	mov    edi,0x64b25f7b
  4137e4:	jg     0x413810
  4137e6:	jo     0x413837
  4137e8:	xchg   ebx,eax
  4137e9:	inc    edx
  4137ea:	das    
  4137eb:	stos   BYTE PTR es:[edi],al
  4137ec:	aas    
  4137ed:	sub    BYTE PTR [eax-0x9a02bbf],ch
  4137f3:	fild   WORD PTR [edi]
  4137f5:	xchg   ebp,eax
  4137f6:	adc    eax,0x17
  4137f9:	fcomp  QWORD PTR [esi+0x405f4f89]
  4137ff:	cmp    DWORD PTR [ecx+0x5],0xffffff81
  413803:	(bad)  
  413804:	pop    ss
  413805:	mov    esi,0xc2dbd17b
  41380a:	jge    0x4137dd
  41380c:	neg    DWORD PTR [esi-0x4]
  41380f:	and    DWORD PTR [eax+0x647dc10],edi
  413815:	sar    DWORD PTR [ebp-0x3f528fc],0xfa
  41381c:	shr    BYTE PTR [edx+0x8],0x52
  413820:	mov    es,WORD PTR [ecx-0x65]
  413823:	add    al,0x62
  413826:	pusha  
  413827:	or     al,BYTE PTR [esi+ebp*1]
  41382a:	dec    edx
  41382b:	out    dx,eax
  41382c:	jp     0x4137ec
  41382e:	shl    bh,0x88
  413831:	xchg   BYTE PTR [esi+0x14808bd0],bh
  413837:	pop    es
  413838:	mov    dh,0x8a
  41383a:	in     al,0xfd
  41383c:	cmp    BYTE PTR [ebx],ah
  41383e:	sbb    dh,BYTE PTR [edx+ecx*1-0x801100b]
  413845:	sbb    eax,0x76ff108b
  41384a:	test   BYTE PTR [eax+esi*8],al
  41384d:	xor    cl,0xab
  413850:	jg     0x41384f
  413852:	inc    ebx
  413853:	adc    ch,BYTE PTR [ebp+0x48a07fee]
  413859:	jge    0x41387c
  41385b:	push   ecx
  41385c:	fs aas 
  41385e:	aad    0x36
  413860:	and    BYTE PTR [eax+esi*1+0x440fbbe0],bh
  413867:	fadd   QWORD PTR [ebx+0x541a7be3]
  41386d:	js     0x41389d
  41386f:	inc    ecx
  413870:	push   eax
  413871:	cmp    bh,BYTE PTR [edi+ebx*4+0x2f]
  413875:	push   ds
  413876:	and    BYTE PTR [eax],bh
  413878:	lahf   
  413879:	jle    0x4138db
  41387b:	xor    BYTE PTR [eax+0x7cfe033],al
  413881:	pop    ecx
  413882:	add    ah,bh
  413884:	sbb    BYTE PTR [eax-0x70],al
  413887:	call   DWORD PTR [edi]
  413889:	xchg   edx,eax
  41388a:	dec    edi
  41388b:	and    cl,al
  41388d:	cmp    DWORD PTR [ecx+0x740beeaf],eax
  413893:	inc    eax
  413894:	xor    al,BYTE PTR [ecx+0x41]
  413897:	iret   
  413898:	jge    0x4138fe
  41389a:	loop   0x41385b
  41389c:	add    BYTE PTR [edx-0x5b811f5e],0x41
  4138a3:	push   edx
  4138a4:	rcr    bl,0xca
  4138a7:	mov    dl,0x27
  4138a9:	loopne 0x413835
  4138ab:	aam    0x6f
  4138ad:	dec    ebx
  4138ae:	das    
  4138af:	xor    eax,DWORD PTR [ecx+0x3f48315f]
  4138b5:	sbb    BYTE PTR [edx],ch
  4138b7:	retf   
  4138b8:	mov    al,ds:0x9bb6e0aa
  4138bd:	xlat   BYTE PTR ds:[ebx]
  4138be:	jg     0x4138a1
  4138c0:	aas    
  4138c1:	jl     0x413929
  4138c3:	in     al,0xdb
  4138c5:	sbb    ebx,DWORD PTR [ecx+0x210adf10]
  4138cb:	add    DWORD PTR [eax+eiz*2],edi
  4138ce:	sbb    al,0xdd
  4138d0:	pop    eax
  4138d1:	ds scas eax,DWORD PTR es:[edi]
  4138d3:	pop    edx
  4138d4:	(bad)  
  4138d5:	retf   
  4138d6:	xchg   edx,eax
  4138d7:	outs   dx,DWORD PTR ds:[esi]
  4138d8:	ret    0x92ca
  4138db:	xchg   edi,eax
  4138dc:	rcl    DWORD PTR [esi+0x6],cl
  4138df:	or     al,BYTE PTR [eax-0x8241022]
  4138e5:	add    DWORD PTR es:[ecx-0x3],ecx
  4138e9:	xor    bl,BYTE PTR [ecx-0x29]
  4138ec:	jmp    0x3fb0348
  4138f1:	add    dl,ch
  4138f3:	mov    edi,DWORD PTR [edi+eax*1+0x2fd1685f]
  4138fa:	fcomp  DWORD PTR [ecx]
  4138fc:	hlt    
  4138fd:	mov    ds:0x60d60be9,eax
  413902:	sub    al,0x2
  413904:	mov    al,ds:0xc8311337
  413909:	dec    eax
  41390a:	cmp    BYTE PTR [ebp+0x2],bh
  41390d:	jmp    0x38fd:0xf7a51605
  413914:	les    eax,FWORD PTR [eax]
  413916:	pop    ecx
  413917:	or     al,0x56
  413919:	adc    BYTE PTR [esi],al
  41391b:	ins    DWORD PTR es:[edi],dx
  41391c:	or     bl,BYTE PTR [edi+eax*1+0x1]
  413920:	enter  0xc7f7,0x3
  413924:	add    ch,BYTE PTR [ebx+0x43881ec5]
  41392a:	hlt    
  41392b:	cmp    al,0x1f
  41392d:	call   FWORD PTR [edi]
  41392f:	inc    ebp
  413930:	out    dx,al
  413931:	imul   edi,DWORD PTR [ebp+0x45],0xffffffea
  413935:	test   DWORD PTR ds:0x1ed58402,0x7c6d6e2a
  41393f:	hlt    
  413940:	fistp  DWORD PTR ds:0x26ff109b
  413946:	inc    edx
  413947:	add    bh,BYTE PTR [eax-0x40]
  41394a:	push   eax
  41394b:	push   ebp
  41394c:	icebp  
  41394d:	mov    dl,0x84
  41394f:	arpl   si,si
  413951:	mov    ds:0x1d1af8df,al
  413956:	outs   dx,DWORD PTR ds:[esi]
  413957:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413958:	pop    esp
  413959:	push   eax
  41395a:	leave  
  41395b:	pop    ss
  41395c:	clc    
  41395d:	mov    DWORD PTR [ecx-0x26be037],0x7dfb0a0e
  413967:	jne    0x41395e
  413969:	jle    0x41394c
  41396b:	or     eax,0xe0ed5941
  413970:	xor    DWORD PTR [ebx],eax
  413972:	sbb    DWORD PTR [edx],eax
  413974:	xlat   BYTE PTR ds:[ebx]
  413975:	cmc    
  413976:	lods   al,BYTE PTR ds:[esi]
  413977:	(bad)  
  413978:	rcl    bh,0x86
  41397b:	jle    0x4138fd
  41397d:	cs rcr al,1
  413980:	neg    DWORD PTR [ecx-0x5b85c114]
  413986:	add    DWORD PTR [edi+0xe],0x9480cd8e
  41398d:	shl    BYTE PTR [edi],cl
  41398f:	push   ds
  413990:	(bad)  
  413992:	call   0xf7456d6c
  413997:	and    ch,dh
  413999:	test   DWORD PTR [ebx+0x3f7c8f5f],edi
  41399f:	or     esp,esi
  4139a1:	dec    edx
  4139a2:	test   DWORD PTR [ecx],eax
  4139a4:	xor    DWORD PTR [eax+0x5bc081fe],esi
  4139aa:	pop    ss
  4139ab:	mov    al,ds:0x9fae2f77
  4139b0:	sub    eax,0xd5401fa1
  4139b5:	xor    eax,0x7c0aac3d
  4139ba:	or     BYTE PTR [eax],cl
  4139bc:	or     eax,esp
  4139be:	add    DWORD PTR [ebx+0x57],eax
  4139c1:	aam    0xd7
  4139c3:	add    ecx,DWORD PTR [ebp+0x6f]
  4139c6:	sti    
  4139c7:	inc    edx
  4139c8:	adc    al,0xac
  4139ca:	add    al,0xa4
  4139cc:	enter  0x4e7e,0x9c
  4139d0:	add    DWORD PTR [edi-0x40],edx
  4139d3:	cmc    
  4139d4:	sub    al,0x5
  4139d6:	jnp    0x413998
  4139d8:	mov    edi,gs
  4139da:	xchg   ebp,eax
  4139db:	stc    
  4139dc:	cli    
  4139dd:	call   0xef8b4737
  4139e2:	xor    esi,DWORD PTR [ebp+0xc1417a1]
  4139e8:	push   edx
  4139e9:	jnp    0x4139bd
  4139eb:	and    BYTE PTR [eax],0xca
  4139ee:	cmp    DWORD PTR [esi+0x23f080fb],0xffffffe8
  4139f5:	dec    ebp
  4139f6:	(bad)  ds:0xb62fbdce
  4139fc:	xor    BYTE PTR [eax+0xa],dl
  4139ff:	jl     0x4139e0
  413a01:	jge    0x413a33
  413a03:	adc    BYTE PTR [edi-0x40],cl
  413a06:	jmp    FWORD PTR [esi]
  413a08:	addr16 pusha 
  413a0a:	addr16 jo 0x4139fa
  413a0d:	xor    BYTE PTR [ecx-0x7e],0xfb
  413a11:	jne    0x413a02
  413a13:	aas    
  413a14:	pop    edi
  413a15:	xchg   edx,eax
  413a16:	call   0x32bd5f82
  413a1b:	xor    esp,DWORD PTR [edi+ebp*4+0x5f]
  413a1f:	in     al,0x1
  413a21:	aaa    
  413a22:	and    ecx,DWORD PTR [eax+0x742a6809]
  413a28:	dec    esi
  413a29:	dec    ebx
  413a2a:	pop    ds
  413a2b:	sti    
  413a2c:	daa    
  413a2d:	fbstp  TBYTE PTR [edi]
  413a2f:	push   ds
  413a30:	stc    
  413a31:	ja     0x4139c2
  413a33:	inc    eax
  413a34:	mov    BYTE PTR [edi],bh
  413a36:	cmovb  eax,DWORD PTR [edx]
  413a39:	js     0x4139bb
  413a3b:	clc    
  413a3c:	jmp    0xed892090
  413a41:	rcl    DWORD PTR [ebx-0x4680dae9],cl
  413a47:	das    
  413a48:	aad    0xdf
  413a4a:	dec    edx
  413a4b:	repnz shr BYTE PTR [eax+edi*1+0x5f],0x48
  413a51:	jnp    0x413a86
  413a53:	jmp    0x41b5bc5e
  413a58:	mov    edx,0x7a0b702c
  413a5d:	adc    edi,DWORD PTR [esi+eax*1-0x3]
  413a61:	ins    BYTE PTR es:[edi],dx
  413a62:	pop    edi
  413a63:	cwde   
  413a64:	jp     0x413a8c
  413a66:	js     0x413a48
  413a68:	push   cs
  413a69:	or     al,0x8
  413a6b:	das    
  413a6c:	hlt    
  413a6d:	sub    eax,0xc1ffe08a
  413a72:	bound  ebx,QWORD PTR [edi+0x7dff48c1]
  413a78:	lahf   
  413a79:	add    eax,0x1c7fe6f7
  413a7e:	in     al,dx
  413a7f:	push   cs
  413a80:	scas   al,BYTE PTR es:[edi]
  413a81:	fnstenv [ebx]
  413a83:	fild   WORD PTR [edi]
  413a85:	lods   al,BYTE PTR ds:[esi]
  413a86:	(bad)  
  413a87:	fiadd  WORD PTR [ebp+eiz*1-0x21]
  413a8b:	adc    dh,BYTE PTR [ecx-0x3]
  413a8e:	imul   eax,esp,0x631c60d2
  413a94:	rcr    BYTE PTR [edx+0x18],0x24
  413a98:	mov    cl,0xe0
  413a9a:	jnp    0x413b16
  413a9c:	jne    0x413a9e
  413a9e:	hlt    
  413a9f:	iret   
  413aa0:	or     edx,ebx
  413aa2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413aa3:	dec    eax
  413aa4:	sahf   
  413aa5:	inc    ebp
  413aa6:	and    esi,DWORD PTR [ebp-0x13]
  413aa9:	pop    ecx
  413aaa:	mov    bh,0xad
  413aac:	aas    
  413aad:	sti    
  413aae:	out    0x1e,eax
  413ab0:	xchg   esp,eax
  413ab1:	adc    bh,bh
  413ab3:	push   esi
  413ab4:	test   BYTE PTR [eax+esi*8],al
  413ab7:	add    BYTE PTR [ecx-0x4d4c25e5],ah
  413abd:	arpl   di,sp
  413abf:	xor    DWORD PTR [edx+0x57],0x21
  413ac3:	mov    esp,0xb97ac025
  413ac8:	jb     0x413b29
  413aca:	sti    
  413acb:	fisttp DWORD PTR [esi+0x3c234667]
  413ad1:	add    DWORD PTR [edx],ecx
  413ad3:	dec    edx
  413ad4:	add    DWORD PTR [edi],0xe6836753
  413ada:	jmp    DWORD PTR [eax+0x62818bf0]
  413ae0:	call   0x7c3:0x4f402cc1
  413ae7:	fist   WORD PTR ds:0x7c06ff04
  413aed:	cmc    
  413aee:	ror    BYTE PTR ds:0xfd01a5e8,0xf9
  413af5:	add    eax,0xc417dfd0
  413afa:	sbb    eax,0x602f37a
  413aff:	pop    esp
  413b00:	lea    esp,[eax]
  413b02:	into   
  413b03:	jo     0x413b64
  413b05:	sub    dl,BYTE PTR [eax-0xc]
  413b08:	scas   eax,DWORD PTR es:[edi]
  413b09:	das    
  413b0a:	and    al,0xaf
  413b0c:	mov    dl,BYTE PTR [eax-0x8]
  413b0f:	(bad)  
  413b11:	push   es
  413b12:	cs mov ebp,eax
  413b15:	pop    es
  413b16:	rcl    DWORD PTR ss:[ebx],0xf8
  413b1a:	mov    al,ds:0x78beefe2
  413b1f:	mov    ah,dl
  413b21:	mov    bh,0x8e
  413b23:	xchg   esp,eax
  413b24:	call   FWORD PTR [edi-0x6df30843]
  413b2a:	in     eax,dx
  413b2b:	shr    dh,0xfb
  413b2e:	jle    0x413b67
  413b30:	je     0x413b11
  413b32:	into   
  413b33:	cmp    DWORD PTR [ebp-0x31],ecx
  413b36:	je     0x413b87
  413b38:	sahf   
  413b39:	xchg   edi,eax
  413b3a:	add    BYTE PTR [edi],0x60
  413b3d:	mov    cl,0xc0
  413b3f:	bound  esi,QWORD PTR [ecx+0x2281b979]
  413b45:	ja     0x413b60
  413b47:	ins    BYTE PTR es:[edi],dx
  413b48:	push   ecx
  413b49:	sub    bl,bl
  413b4b:	gs fwait
  413b4d:	scas   al,BYTE PTR es:[edi]
  413b4e:	(bad)  
  413b4f:	fstp   DWORD PTR [edi+0x54]
  413b52:	xor    ch,BYTE PTR [ecx-0x69ea5bf1]
  413b58:	ss inc ebp
  413b5a:	push   edx
  413b5b:	xchg   esi,eax
  413b5c:	imul   edx,DWORD PTR [ebp+0x5972c902],0x25d16655
  413b66:	pop    ebx
  413b67:	mov    eax,ds:0x45960fc8
  413b6c:	pop    ss
  413b6d:	and    eax,0x6291652
  413b72:	mov    ebx,edx
  413b74:	and    eax,0x38bc0176
  413b79:	outs   dx,DWORD PTR ds:[esi]
  413b7a:	jb     0x413b66
  413b7c:	sahf   
  413b7d:	cdq    
  413b7e:	into   
  413b7f:	cmp    esp,ebx
  413b81:	call   0xee30b895
  413b86:	cmp    ebp,DWORD PTR [edi+0x33]
  413b89:	adc    BYTE PTR ds:0x5539dc16,0xaf
  413b90:	fimul  WORD PTR [edi+ecx*2-0x9]
  413b94:	in     eax,dx
  413b95:	fstp   TBYTE PTR [ebp-0x11]
  413b98:	dec    ecx
  413b99:	push   ebx
  413b9b:	aas    
  413b9c:	out    0xd8,eax
  413b9e:	push   ecx
  413b9f:	sub    BYTE PTR [eax],0x3a
  413ba2:	xchg   ecx,eax
  413ba3:	and    DWORD PTR ds:0x4f937b4e,0x748bedbe
  413bad:	sub    eax,0xdae457
  413bb2:	mov    esp,0xacbd3283
  413bb7:	jg     0x413b87
  413bb9:	outs   dx,DWORD PTR ds:[esi]
  413bba:	xchg   edi,eax
  413bbb:	sti    
  413bbc:	and    al,0xdb
  413bbe:	retf   
  413bbf:	sti    
  413bc0:	cld    
  413bc1:	jae    0x413c12
  413bc3:	sub    cl,BYTE PTR [ecx-0x62]
  413bc6:	cld    
  413bc7:	sbb    eax,0x5ccc384f
  413bcc:	rcr    DWORD PTR ds:0xec01c04c,1
  413bd2:	sbb    al,0xcf
  413bd4:	call   0x42f82bfb
  413bd9:	mov    DWORD PTR [eax],esi
  413bdb:	push   ebx
  413bdc:	pusha  
  413bdd:	pmulhw mm2,mm6
  413be0:	xor    DWORD PTR [eax],ecx
  413be2:	push   edi
  413be3:	inc    eax
  413be4:	inc    edx
  413be5:	inc    edi
  413be6:	ret    
  413be7:	ins    BYTE PTR es:[edi],dx
  413be8:	xor    esp,esi
  413bea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413beb:	adc    al,0x98
  413bed:	jns    0x413c33
  413bef:	loop   0x413bde
  413bf1:	sbb    BYTE PTR [ecx+ecx*1+0x47],dh
  413bf5:	into   
  413bf6:	popa   
  413bf7:	pop    esp
  413bf8:	(bad)  
  413bf9:	into   
  413bfa:	fsub   st(3),st
  413bfc:	pop    edi
  413bfd:	jns    0x413c4e
  413bff:	dec    edi
  413c00:	mov    edx,0x9e0c62e0
  413c05:	iret   
  413c06:	loopne 0x413c24
  413c08:	dec    ebx
  413c09:	pusha  
  413c0a:	fiadd  WORD PTR [edi]
  413c0c:	add    BYTE PTR [ebx-0x7a],dh
  413c0f:	and    BYTE PTR [ebp+eax*1+0x8],bl
  413c13:	(bad)  
  413c15:	ins    BYTE PTR es:[edi],dx
  413c16:	aas    
  413c17:	inc    edi
  413c18:	push   ecx
  413c19:	pusha  
  413c1a:	js     0x413c8d
  413c1c:	(bad)  
  413c1d:	mov    ecx,0xf095e9ff
  413c22:	push   ebx
  413c23:	lahf   
  413c24:	call   0x5cd01a83
  413c29:	sbb    eax,DWORD PTR [eax-0x3801b789]
  413c2f:	push   edi
  413c30:	and    esp,DWORD PTR [ecx]
  413c32:	xor    al,0xed
  413c34:	adc    ecx,esi
  413c36:	test   al,0x2b
  413c38:	lods   al,BYTE PTR ds:[esi]
  413c39:	jns    0x413c2e
  413c3b:	(bad)  
  413c3d:	sbb    al,0xdd
  413c3f:	not    esi
  413c41:	enter  0x8745,0x18
  413c45:	jecxz  0x413c68
  413c47:	idiv   DWORD PTR [eax]
  413c49:	pop    esi
  413c4a:	xlat   BYTE PTR ds:[ebx]
  413c4b:	mov    ds:0xd8752e83,eax
  413c50:	int    0xb1
  413c52:	int    0xab
  413c54:	and    eax,0x5c89473d
  413c59:	mov    edx,0x59f003b0
  413c5e:	jae    0x413c45
  413c60:	jae    0x413bf0
  413c62:	jecxz  0x413c08
  413c64:	pop    ss
  413c65:	cs pop ds
  413c67:	shr    bl,0xf5
  413c6a:	inc    ebp
  413c6b:	cmp    edi,DWORD PTR [edi+esi*8+0x18]
  413c6f:	and    esp,DWORD PTR [edi]
  413c71:	xor    dh,BYTE PTR [ecx+0x7e]
  413c74:	mov    dh,0xc0
  413c76:	xor    eax,0x235a6e04
  413c7b:	mov    edx,0xf8c57fa7
  413c80:	cmp    dh,al
  413c82:	into   
  413c83:	shl    DWORD PTR ds:0x3783ce1c,0xe5
  413c8a:	jno    0x413c99
  413c8c:	call   0xf0f:0x2d253368
  413c93:	inc    eax
  413c94:	cwde   
  413c95:	arpl   WORD PTR [ecx],bx
  413c97:	mov    ds:0xdd20b208,al
  413c9c:	into   
  413c9d:	outs   dx,DWORD PTR ds:[esi]
  413c9e:	ins    DWORD PTR es:[edi],dx
  413c9f:	ins    DWORD PTR es:[edi],dx
  413ca0:	mov    ebp,0x7bee97c3
  413ca5:	pop    edx
  413ca6:	scas   al,BYTE PTR es:[edi]
  413ca7:	or     eax,0x4b243bc0
  413cac:	iret   
  413cad:	fdivr  QWORD PTR [ecx-0x2a]
  413cb0:	addr16 pop ecx
  413cb2:	jmp    0x413d02
  413cb4:	clc    
  413cb5:	out    dx,eax
  413cb6:	in     al,0xbe
  413cb8:	mov    ds:0x4fa954fc,al
  413cbd:	cwde   
  413cbe:	xlat   BYTE PTR ds:[ebx]
  413cbf:	rol    DWORD PTR [ebp-0x71],0xe2
  413cc3:	sbb    BYTE PTR [ebp-0x4646c4c9],0x30
  413cca:	ret    
  413ccb:	test   DWORD PTR [esp+ebp*8-0x70],0x7338f0da
  413cd3:	dec    edi
  413cd4:	add    al,0x61
  413cd6:	sbb    dh,BYTE PTR [ebx+0x45]
  413cd9:	xchg   esp,eax
  413cda:	and    al,0xf7
  413cdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413cdd:	push   edi
  413cde:	rol    BYTE PTR [edi+edx*1],cl
  413ce1:	clc    
  413ce2:	repz test cl,dh
  413ce5:	cs pop eax
  413ce7:	out    0x88,eax
  413ce9:	push   ebx
  413cea:	es mov ah,0xf3
  413ced:	js     0x413cf6
  413cef:	mov    al,ds:0x8279fa7b
  413cf4:	arpl   sp,ax
  413cf6:	sub    al,0xae
  413cf8:	dec    esp
  413cf9:	add    al,0x7a
  413cfb:	cmp    dl,dl
  413cfd:	jo     0x413d40
  413cff:	inc    esp
  413d00:	sti    
  413d01:	pop    esp
  413d02:	and    eax,0x150a5e61
  413d07:	cwde   
  413d08:	xchg   ebx,eax
  413d09:	or     BYTE PTR [ebx+esi*2-0x52],0xec
  413d0e:	xchg   BYTE PTR [ecx],bh
  413d10:	arpl   WORD PTR [esi-0x46],cx
  413d13:	sbb    BYTE PTR [edx+0x6892fefd],ah
  413d19:	iret   
  413d1a:	adc    al,0xb0
  413d1c:	hlt    
  413d1d:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d1f:	aaa    
  413d20:	clc    
  413d21:	call   0xd781f781
  413d26:	repnz xor eax,0xbc00dae5
  413d2c:	inc    ebx
  413d2d:	rcr    bl,cl
  413d2f:	aas    
  413d30:	clc    
  413d31:	jle    0x413cf2
  413d33:	ins    BYTE PTR es:[edi],dx
  413d34:	dec    ecx
  413d35:	pop    esi
  413d36:	and    eax,0xbaf0def7
  413d3b:	xor    DWORD PTR [edi],ecx
  413d3d:	cdq    
  413d3e:	sbb    eax,0xfd94ef8f
  413d43:	and    al,0xaf
  413d45:	mov    ds:0x186ccad9,al
  413d4a:	repz xor ah,BYTE PTR [edx+0x3d737a53]
  413d51:	stos   DWORD PTR es:[edi],eax
  413d52:	in     eax,dx
  413d53:	lods   eax,DWORD PTR ds:[esi]
  413d54:	popf   
  413d55:	cmp    al,0xfd
  413d57:	or     ah,cl
  413d59:	xchg   BYTE PTR [edi+0x653822ae],ch
  413d5f:	inc    edi
  413d60:	addr16 dec esi
  413d62:	adc    BYTE PTR [ebx-0x51787fb6],0xeb
  413d69:	mov    DWORD PTR [esi+0x5c],ecx
  413d6c:	(bad)  
  413d6d:	out    dx,al
  413d6e:	js     0x413ddc
  413d70:	(bad)  
  413d71:	adc    dh,BYTE PTR [ecx+0x15]
  413d74:	jo     0x413dea
  413d76:	add    DWORD PTR es:[ecx-0x39c3e214],edi
  413d7d:	ret    0x6739
  413d80:	jae    0x413d90
  413d82:	repnz cdq 
  413d84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d85:	dec    ebp
  413d86:	dec    ecx
  413d87:	xchg   esi,eax
  413d88:	or     ax,0x5e3f
  413d8c:	jecxz  0x413d12
  413d8e:	out    0x67,eax
  413d90:	lahf   
  413d91:	cmp    bh,al
  413d93:	add    ebx,DWORD PTR [ecx+edi*1+0x69d9288]
  413d9a:	mov    ah,0xe
  413d9c:	(bad)  
  413d9d:	jg     0x413d87
  413d9f:	fstp   TBYTE PTR [esi+0x75f2d738]
  413da5:	in     eax,0xda
  413da7:	add    BYTE PTR [ebx+eax*1-0x64c0880e],bh
  413dae:	adc    al,0xf4
  413db0:	pop    esi
  413db1:	div    DWORD PTR [ebx]
  413db3:	ds paddusw mm2,mm7
  413db7:	bound  edx,QWORD PTR [esi-0x42]
  413dba:	jb     0x413dd0
  413dbc:	ret    0xf645
  413dbf:	cdq    
  413dc0:	xchg   DWORD PTR [esi+ecx*4+0x27bb0071],edi
  413dc7:	shl    BYTE PTR [ebp-0x21],0x4f
  413dcb:	jne    0x413dce
  413dcd:	mov    dh,bl
  413dcf:	push   eax
  413dd0:	fmul   st,st(5)
  413dd2:	ffreep st(1)
  413dd4:	inc    ebp
  413dd5:	ficomp WORD PTR [edi-0x6d667eea]
  413ddb:	mov    ecx,0x786bfad
  413de0:	push   edi
  413de1:	jo     0x413e35
  413de3:	adc    bh,cl
  413de5:	fs push ds
  413de7:	div    DWORD PTR [eax]
  413de9:	sahf   
  413dea:	mov    esp,0x4e1cf9dd
  413def:	jb     0x79a90f8c
  413df5:	into   
  413df6:	ror    DWORD PTR [ecx+0x9],cl
  413df9:	mov    esp,0x558bcb9f
  413dfe:	cmp    BYTE PTR [ecx-0x70938474],dl
  413e04:	mov    eax,ds:0x3720d270
  413e09:	aam    0xb7
  413e0b:	mov    edi,0xc063c307
  413e10:	sbb    al,0x82
  413e12:	nop
  413e13:	shr    BYTE PTR [eiz*4-0x21d36e],0xbf
  413e1b:	(bad)  
  413e1c:	call   0xbd9d3493
  413e21:	xlat   BYTE PTR ss:[ebx]
  413e23:	repnz (bad) 
  413e25:	in     eax,0xda
  413e27:	add    BYTE PTR [ebx+eax*1-0x16403c1e],bh
  413e2e:	aaa    
  413e2f:	mov    ch,0xbb
  413e31:	outs   dx,BYTE PTR ds:[esi]
  413e32:	sbb    DWORD PTR [edi-0x4c],ecx
  413e35:	ret    
  413e36:	pop    edx
  413e37:	iret   
  413e38:	mov    al,0xc
  413e3a:	sub    al,0x9b
  413e3c:	pop    ss
  413e3d:	add    BYTE PTR [esi+0x7],ch
  413e40:	fist   WORD PTR [ebp+0x2b9c5ad0]
  413e46:	mov    ah,BYTE PTR [ebx-0x30ca59e4]
  413e4c:	out    dx,eax
  413e4d:	sbb    eax,0xa4b7b03a
  413e52:	daa    
  413e53:	xor    BYTE PTR [edi],ah
  413e55:	in     al,dx
  413e56:	cmp    al,0x5d
  413e58:	jmp    0x413e11
  413e5a:	mov    ecx,?
  413e5c:	jae    0x413e1b
  413e5e:	cmp    ebp,DWORD PTR gs:[edi-0xbc3e979]
  413e65:	xlat   BYTE PTR fs:[ebx]
  413e67:	sbb    BYTE PTR [eax+0x1e],bl
  413e6a:	add    eax,0x9c20e617
  413e6f:	pop    ebx
  413e70:	out    0x73,al
  413e72:	jp     0x413e73
  413e74:	sbb    eax,0x8bd3d1b0
  413e79:	loopne 0x413e8d
  413e7b:	xchg   edx,eax
  413e7c:	sub    al,0xf
  413e7e:	out    dx,eax
  413e7f:	fbstp  TBYTE PTR [ebx+0x6e]
  413e82:	push   cs
  413e83:	test   eax,0x7afca1c7
  413e88:	add    DWORD PTR [edi],edi
  413e8a:	pop    es
  413e8b:	pop    edi
  413e8c:	jo     0x413ed0
  413e8e:	jg     0x413eb7
  413e90:	sub    al,BYTE PTR [edx]
  413e92:	jnp    0x413ed0
  413e94:	call   0xa85a:0x8609329d
  413e9b:	aas    
  413e9c:	cmp    DWORD PTR [esi-0xb],edi
  413e9f:	ins    DWORD PTR es:[edi],dx
  413ea0:	pop    edi
  413ea1:	mov    ah,0x6b
  413ea3:	add    DWORD PTR [esi+0x223bc00d],ebp
  413ea9:	dec    edx
  413eaa:	sub    dh,bh
  413eac:	adc    ecx,eax
  413eae:	mov    ah,0x22
  413eb0:	pop    esi
  413eb1:	mov    edx,0x87edbbad
  413eb6:	(bad)  [ebp+0x2d]
  413eb9:	mov    ebx,esi
  413ebb:	push   eax
  413ebc:	sbb    dh,ah
  413ebe:	mov    al,ds:0x9ece2498
  413ec3:	arpl   ax,bp
  413ec5:	test   cl,0x9c
  413ec8:	nop
  413ec9:	xlat   BYTE PTR ds:[ebx]
  413eca:	inc    ebp
  413ecb:	add    bh,ah
  413ecd:	sahf   
  413ece:	ror    BYTE PTR [ebx],cl
  413ed0:	fidivr WORD PTR [ecx-0x10c2bb3d]
  413ed6:	jmp    0xe96d2a53
  413edb:	add    dh,bl
  413edd:	jecxz  0x413f59
  413edf:	jnp    0x413ee9
  413ee1:	add    al,0x61
  413ee3:	(bad)  
  413ee4:	shr    DWORD PTR [edi+0x78],cl
  413ee7:	adc    BYTE PTR [eax+0x47],bh
  413eea:	imul   eax,DWORD PTR ds:0x4d1b9598,0xe617cc3b
  413ef4:	xchg   DWORD PTR [eax-0x58],esi
  413ef7:	(bad)  
  413ef8:	dec    esi
  413ef9:	clc    
  413efa:	das    
  413efb:	js     0x413f11
  413efd:	aad    0xfb
  413eff:	push   esi
  413f00:	mov    ?,edx
  413f02:	cmp    edi,DWORD PTR [edi+0x72]
  413f05:	aas    
  413f06:	aaa    
  413f07:	repz adc al,0xc9
  413f0a:	daa    
  413f0b:	iret   
  413f0c:	aas    
  413f0d:	xchg   ebx,eax
  413f0e:	shl    DWORD PTR [edi],cl
  413f10:	loopne 0x413e96
  413f12:	sti    
  413f13:	push   cs
  413f14:	and    dl,ch
  413f16:	sub    al,0x52
  413f18:	icebp  
  413f19:	fst    DWORD PTR [ecx+0x60844f80]
  413f1f:	xor    bh,BYTE PTR [ecx-0x33]
  413f22:	or     bh,BYTE PTR [edi+eax*4-0x1c]
  413f26:	fiadd  DWORD PTR [eax]
  413f28:	mov    esp,0xeab6a203
  413f2d:	aas    
  413f2e:	sub    bl,bl
  413f30:	mov    bl,0xfe
  413f32:	fnstsw WORD PTR [esi]
  413f34:	jns    0x413f31
  413f36:	ja     0x413efb
  413f38:	cwde   
  413f39:	sub    DWORD PTR [ebx],edx
  413f3b:	int3   
  413f3c:	inc    edx
  413f3d:	pop    ebx
  413f3e:	outs   dx,DWORD PTR ds:[esi]
  413f3f:	push   ds
  413f40:	out    dx,eax
  413f41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f42:	or     cl,BYTE PTR [esi-0x1]
  413f45:	mov    edi,0xaf3be373
  413f4a:	add    edi,DWORD PTR [ebx]
  413f4c:	xchg   DWORD PTR [esi-0x5d7c7753],esi
  413f52:	sbb    DWORD PTR [ebp-0x27a1c419],0xffffff9a
  413f59:	pop    ds
  413f5a:	repz dec edx
  413f5c:	das    
  413f5d:	add    ah,0xd5
  413f60:	jp     0x413f1e
  413f62:	js     0x413f29
  413f64:	push   es
  413f65:	pop    esp
  413f66:	jmp    0xe7d3fbab
  413f6b:	aas    
  413f6c:	inc    ebp
  413f6d:	sub    eax,0x93425c06
  413f72:	aaa    
  413f73:	inc    edx
  413f74:	mov    cl,0x6c
  413f76:	rcl    al,0xcd
  413f79:	and    DWORD PTR [ebx+eiz*2],ebx
  413f7c:	and    eax,0x9d79d7c
  413f81:	repz jo 0x413fe3
  413f84:	lock sbb BYTE PTR [ecx],ch
  413f87:	(bad)  
  413f88:	sbb    dl,cl
  413f8a:	push   ds
  413f8b:	int3   
  413f8c:	ret    
  413f8d:	imul   eax,DWORD PTR [eiz*1+0x2c76de71],0xffffffcb
  413f95:	pusha  
  413f96:	dec    ebp
  413f97:	aam    0x4f
  413f99:	cld    
  413f9a:	(bad)  
  413f9b:	dec    edi
  413f9c:	mov    esi,0x7c0acd7a
  413fa1:	pop    es
  413fa2:	in     al,0xda
  413fa4:	add    BYTE PTR [ebp+ecx*2-0x48c06a07],bh
  413fab:	xchg   esp,eax
  413fac:	adc    eax,DWORD PTR [esi+0x1f645783]
  413fb2:	push   edi
  413fb3:	(bad)  
  413fb4:	pop    esi
  413fb5:	leave  
  413fb6:	repz repnz xchg ebp,eax
  413fb9:	mov    ds:0xeb8e4e78,eax
  413fbe:	js     0x414033
  413fc0:	dec    ecx
  413fc1:	pushf  
  413fc2:	xchg   esp,edx
  413fc4:	outs   dx,BYTE PTR ds:[esi]
  413fc5:	fs out dx,al
  413fc7:	add    esp,eax
  413fc9:	sbb    al,0x4e
  413fcb:	rcl    BYTE PTR ds:0xae737c5,0x66
  413fd2:	jmp    0x5eb4854a
  413fd7:	out    dx,eax
  413fd8:	push   esi
  413fd9:	sbb    al,0x24
  413fdb:	rcr    BYTE PTR [eax-0x41b1817d],0xee
  413fe2:	nop
  413fe3:	mov    ds,WORD PTR [esi+ebx*4-0x7ad6d404]
  413fea:	xor    BYTE PTR [edi],bh
  413fec:	pop    es
  413fed:	pop    es
  413fee:	in     al,dx
  413fef:	jae    0x414005
  413ff1:	fadd   QWORD PTR [ecx]
  413ff3:	sub    al,0x9d
  413ff5:	cmp    al,0xdf
  413ff7:	fstp   QWORD PTR [ebx-0x20]
  413ffa:	add    DWORD PTR [eax],esp
  413ffc:	frstor [esi+0x24]
  413fff:	daa    
  414000:	cld    
  414001:	mov    bh,0x43
  414003:	add    ecx,eax
  414005:	repz cdq 
  414007:	mov    ebp,0x31783b8
  41400c:	shl    ebx,0x9e
  41400f:	pop    esi
  414010:	lods   al,BYTE PTR ds:[esi]
  414011:	les    ecx,FWORD PTR [ecx+0x37]
  414014:	fs jno 0x414075
  414017:	dec    ecx
  414018:	mov    al,0xa6
  41401a:	xchg   ebx,eax
  41401b:	lea    edx,[ebx-0xc21129]
  414021:	mov    dh,0x2e
  414023:	fdiv   QWORD PTR [ebp-0x1ff92900]
  414029:	ins    DWORD PTR es:[edi],dx
  41402a:	dec    ebx
  41402b:	and    al,0xb5
  41402d:	clc    
  41402e:	ds push esp
  414030:	ins    DWORD PTR es:[edi],dx
  414031:	shl    ecx,0xaf
  414034:	or     ecx,esp
  414036:	xor    DWORD PTR [eax],eax
  414038:	outs   dx,DWORD PTR ds:[esi]
  414039:	(bad)  
  41403a:	pushf  
  41403b:	mov    ds:0x84878ef8,eax
  414040:	mov    ecx,0xc7828a42
  414045:	jo     0x41401f
  414047:	mov    edi,0xde01bd3b
  41404c:	test   eax,0xcd83b3c1
  414051:	(bad)  
  414052:	jae    0x414046
  414054:	jb     0x41400d
  414056:	push   0x28
  414058:	int3   
  414059:	jno    0x41405f
  41405b:	aaa    
  41405c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41405d:	jbe    0x41403d
  41405f:	retf   
  414060:	xchg   ebx,eax
  414061:	iret   
  414062:	cmp    ebp,DWORD PTR [ecx]
  414064:	xchg   al,ah
  414066:	push   ecx
  414067:	jle    0x414040
  414069:	pusha  
  41406a:	cmp    BYTE PTR [edi+0x61],ch
  41406d:	out    0xf3,eax
  41406f:	mov    ss,WORD PTR [edx]
  414071:	cmp    ah,BYTE PTR ds:0x860f0141
  414077:	pusha  
  414078:	mov    edi,0x1879339f
  41407d:	std    
  41407e:	inc    esp
  41407f:	sar    BYTE PTR [edx+0x0],0x0
  414083:	and    BYTE PTR [eax],al
  414085:	dec    ecx
  414086:	inc    esp
  414087:	inc    ecx
  414088:	push   esp
  414089:	iret   
  41408a:	repz scas al,BYTE PTR es:[edi]
  41408c:	adc    BYTE PTR [ecx+0x30cdff98],dl
  414092:	out    0x4a,al
  414094:	out    dx,al
  414095:	sbb    BYTE PTR [edx],cl
  414097:	push   ecx
  414098:	call   0xcc88:0xd79d04b3
  41409f:	or     eax,0x80933b94
  4140a4:	stc    
  4140a5:	enter  0x5974,0x30
  4140a9:	and    al,0x8b
  4140ab:	jmp    0x414106
  4140ad:	sub    edi,0x801b5c84
  4140b3:	mov    bh,0x29
  4140b5:	popf   
  4140b6:	add    DWORD PTR [edi-0x19fbf461],0xffffffca
  4140bd:	sub    cl,BYTE PTR [ebx+0x51dffcb3]
  4140c3:	jp     0x414074
  4140c5:	xlat   BYTE PTR ds:[ebx]
  4140c6:	jae    0x4140a3
  4140c8:	jnp    0x414069
  4140ca:	inc    esi
  4140cb:	out    dx,al
  4140cc:	cmp    eax,0x2b60288a
  4140d1:	test   DWORD PTR [eax],edi
  4140d3:	(bad)  
  4140d4:	fist   DWORD PTR [ebp+0x6f1e1ea1]
  4140da:	in     al,dx
  4140db:	jp     0x414135
  4140dd:	sti    
  4140de:	jno    0x4140cc
  4140e0:	call   FWORD PTR [ebp-0x7dd8ff02]
  4140e6:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140e8:	add    eax,0x3869155f
  4140ed:	cvtps2pd xmm6,QWORD PTR [ebx+0x25]
  4140f1:	hlt    
  4140f2:	jbe    0x4140ed
  4140f4:	mov    ecx,0xf626ec8a
  4140f9:	int3   
  4140fa:	adc    eax,0x4b1cf4d8
  4140ff:	mov    al,0x41
  414101:	dec    edi
  414102:	cmp    al,0x9e
  414104:	fld    TBYTE PTR [ebx+0x87cc2e8]
  41410a:	test   al,0x13
  41410c:	adc    DWORD PTR [eax],ebx
  41410e:	push   cs
  41410f:	sahf   
  414110:	loopne 0x41414e
  414112:	out    0x9,al
  414114:	sti    
  414115:	popf   
  414116:	pushf  
  414117:	pop    edi
  414118:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41411a:	or     eax,0xbd03b078
  41411f:	scas   eax,DWORD PTR es:[edi]
  414120:	jle    0x414120
  414122:	jg     0x414123
  414124:	icebp  
  414125:	idiv   DWORD PTR ds:0xcb5c3e85
  41412b:	mov    bh,0x2b
  41412d:	xlat   BYTE PTR ds:[ebx]
  41412e:	push   es
  41412f:	loopne 0x41419e
  414131:	enter  0xfdaf,0x97
  414135:	iret   
  414136:	add    eax,0x9f9967c
  41413b:	ja     0x4140fc
  41413d:	lahf   
  41413e:	jge    0x41417b
  414140:	dec    edx
  414141:	mov    esi,0xbbcfcb39
  414146:	mov    ecx,0x13f4bbc7
  41414b:	jo     0x414110
  41414d:	jb     0x414126
  41414f:	jnp    0x4141ac
  414151:	jae    0x414117
  414153:	fild   WORD PTR ds:0x73cf3cf4
  414159:	cwde   
  41415a:	jl     0x4141b3
  41415c:	dec    edx
  41415d:	push   0xffffff96
  41415f:	out    0x79,eax
  414161:	int3   
  414162:	xchg   ebp,eax
  414163:	xlat   BYTE PTR ds:[ebx]
  414164:	pop    ebp
  414165:	(bad)  
  414167:	xchg   esp,eax
  414168:	in     eax,dx
  414169:	in     al,dx
  41416a:	jecxz  0x4141a4
  41416c:	out    dx,eax
  41416d:	in     eax,dx
  41416e:	loop   0x414175
  414170:	imul   BYTE PTR [ebx-0x61]
  414173:	xor    bl,BYTE PTR ss:[edi+0x55]
  414177:	xlat   BYTE PTR ds:[ebx]
  414178:	ja     0x4141cc
  41417a:	add    eax,0x803df147
  41417f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414180:	imul   esp,esp,0x3c
  414183:	inc    esi
  414184:	(bad)  
  414185:	(bad)  ds:0xc97478e8
  41418b:	sbb    DWORD PTR [bp-0x140a],0x7c
  414191:	ss icebp 
  414193:	leave  
  414194:	sti    
  414195:	fnstsw WORD PTR [eax]
  414197:	lahf   
  414198:	fisttp DWORD PTR [ecx-0x2c3fe394]
  41419e:	icebp  
  41419f:	(bad)  
  4141a0:	push   ss
  4141a1:	sub    DWORD PTR ss:[eax-0x29],ecx
  4141a5:	out    dx,al
  4141a6:	cli    
  4141a7:	adc    al,0x65
  4141a9:	jecxz  0x414186
  4141ab:	mov    ebp,0x5572d766
  4141b0:	scas   al,BYTE PTR es:[edi]
  4141b1:	or     eax,0x7310dbc0
  4141b6:	cmp    bh,BYTE PTR [ebx+eiz*1-0x31a438b2]
  4141bd:	or     al,0x7c
  4141bf:	mov    DWORD PTR [ebx-0x1343dc47],0xcd9579e7
  4141c9:	in     eax,dx
  4141ca:	je     0x41418f
  4141cc:	xchg   ebx,eax
  4141cd:	add    edi,DWORD PTR [ebx]
  4141cf:	sahf   
  4141d0:	push   eax
  4141d1:	rcr    BYTE PTR [ebp-0x38cb102b],0x48
  4141d8:	sahf   
  4141d9:	sub    esp,esp
  4141db:	or     al,0xfc
  4141dd:	pushf  
  4141de:	mov    ebp,0xbf3f2cf9
  4141e3:	push   edx
  4141e4:	dec    esi
  4141e5:	xor    esp,edi
  4141e7:	dec    edx
  4141e8:	jmp    0xd0dda16a
  4141ed:	pushf  
  4141ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141ef:	mov    esp,0x77ff27ba
  4141f4:	mov    ebp,0xd74da7be
  4141f9:	stos   DWORD PTR es:[edi],eax
  4141fa:	fsub   DWORD PTR [esi+0x5b963f31]
  414200:	adc    dh,BYTE PTR [esp+ecx*4-0x7f]
  414204:	jge    0x414212
  414206:	ror    DWORD PTR [esi],cl
  414208:	jmp    0xade414ea
  41420d:	(bad)
  414210:	inc    esi
  414211:	add    bl,BYTE PTR [esi]
  414213:	cli    
  414214:	mov    cl,0x75
  414216:	aad    0xfb
  414218:	cmp    ebp,DWORD PTR [edi+edi*1-0xbc55068]
  41421f:	push   esi
  414220:	cmp    eax,0x9654a01c
  414225:	inc    ecx
  414226:	xor    al,0xd5
  414228:	dec    eax
  414229:	out    0xbc,eax
  41422b:	jp     0x41426a
  41422d:	and    al,0xe4
  41422f:	ins    DWORD PTR es:[edi],dx
  414230:	retf   0x1b5
  414233:	js     0x414250
  414235:	xor    ch,BYTE PTR [edx-0x6c1cc02c]
  41423b:	lods   eax,DWORD PTR ds:[esi]
  41423c:	cdq    
  41423d:	mov    edx,0x965e5edb
  414242:	addr16 dec edx
  414244:	sub    al,0x60
  414246:	xchg   edi,eax
  414247:	mov    ecx,0x25b1d798
  41424c:	(bad)  
  41424d:	adc    bh,BYTE PTR [edx]
  41424f:	mov    esp,0x5c1100
  414254:	int3   
  414255:	add    cl,BYTE PTR gs:[edx+0x59672f33]
  41425c:	imul   BYTE PTR [ebx-0x7b]
  41425f:	mov    ecx,0xd6157832
  414264:	fwait
  414265:	dec    edx
  414266:	cmp    BYTE PTR [ecx],ah
  414268:	mov    ebp,0xc7783113
  41426d:	jns    0x414278
  41426f:	jbe    0x414286
  414271:	loope  0x4142bd
  414273:	or     esi,DWORD PTR [eax-0x1258b819]
  414279:	sbb    BYTE PTR [ebx],cl
  41427b:	mov    bh,0x95
  41427d:	xlat   BYTE PTR ds:[ebx]
  41427e:	pop    ebx
  41427f:	xchg   edi,eax
  414280:	(bad)  
  414281:	arpl   WORD PTR [eax-0x2a3d9564],bp
  414287:	and    al,0xdf
  414289:	adc    ebp,DWORD PTR [ecx+0x63bf3c78]
  41428f:	rcr    BYTE PTR [edi+ecx*8-0x62decd11],1
  414296:	jae    0x414249
  414298:	push   ebx
  414299:	add    edi,eax
  41429b:	sub    BYTE PTR [eax],bh
  41429d:	fisttp WORD PTR [ebx-0x404b29a5]
  4142a3:	inc    ebx
  4142a4:	sar    DWORD PTR [esi],1
  4142a6:	mov    ?,WORD PTR [edi-0x3c081e96]
  4142ac:	mov    al,0xda
  4142ae:	cli    
  4142af:	cld    
  4142b0:	mov    bh,0x79
  4142b2:	leave  
  4142b3:	scas   al,BYTE PTR es:[edi]
  4142b4:	in     eax,0x29
  4142b6:	mov    ecx,0x436f0036
  4142bb:	cld    
  4142bc:	enter  0x719f,0xe8
  4142c0:	mov    edx,0xe1ddf70e
  4142c5:	clc    
  4142c6:	jnp    0x414285
  4142c8:	mov    ds:0xde38018b,eax
  4142cd:	adc    eax,0xa371055c
  4142d2:	jae    0x414347
  4142d4:	out    dx,al
  4142d5:	adc    eax,0x7e7c2a79
  4142da:	mov    edx,0xde55f7d4
  4142df:	fdivrp st(3),st
  4142e1:	push   ds
  4142e2:	out    dx,al
  4142e3:	call   0xb8de7e58
  4142e8:	mov    ds:0xf7954fac,al
  4142ed:	mov    esp,0xe995c1d8
  4142f2:	inc    eax
  4142f3:	(bad)  
  4142f4:	pop    esp
  4142f5:	mov    eax,ds:0xc45fb4dd
  4142fa:	sub    eax,0xa8d79f3
  4142ff:	and    BYTE PTR [edi-0x32ac26ab],0x70
  414306:	xchg   ebp,eax
  414307:	fiadd  DWORD PTR [ebx+0x48]
  41430a:	jb     0x41434a
  41430c:	ficom  WORD PTR [edi+0x6d]
  41430f:	das    
  414310:	bound  ebx,QWORD PTR [esi]
  414312:	add    DWORD PTR [eax-0x5433ed05],edi
  414318:	push   ebp
  414319:	add    ah,BYTE PTR [edi-0x9]
  41431c:	mov    eax,ds:0x7cf81df3
  414321:	pusha  
  414322:	dec    esp
  414323:	inc    edi
  414324:	scas   eax,DWORD PTR es:[edi]
  414325:	cld    
  414326:	repnz mul DWORD PTR [edi-0x2d]
  41432a:	pop    edi
  41432b:	test   DWORD PTR [edx],0x9537cb5d
  414331:	imul   eax,DWORD PTR [ebx],0xfffffff0
  414334:	push   ss
  414335:	in     eax,0x97
  414337:	ds xchg edx,eax
  414339:	pop    esp
  41433a:	aaa    
  41433b:	inc    edi
  41433c:	in     eax,dx
  41433d:	pop    ss
  41433e:	mov    ebp,0x7efc2f83
  414343:	jnp    0x414361
  414345:	xchg   edi,eax
  414346:	daa    
  414347:	ins    BYTE PTR es:[edi],dx
  414348:	add    eax,0x3cbce3e6
  41434d:	retf   0x45ef
  414350:	out    0xdd,eax
  414352:	pop    ecx
  414353:	add    BYTE PTR [eax+0x74],bh
  414356:	aad    0x7e
  414358:	in     al,dx
  414359:	retf   0x7f8c
  41435c:	cwde   
  41435d:	jecxz  0x414365
  41435f:	dec    esi
  414360:	or     ch,ch
  414362:	sbb    al,0xc3
  414364:	sbb    ecx,edx
  414366:	jnp    0x41437c
  414368:	lds    edx,FWORD PTR [ecx]
  41436a:	loope  0x414315
  41436c:	call   0xbc7daf34
  414371:	pop    ebx
  414372:	cmp    BYTE PTR [eax+eiz*4-0x2e9fea24],0x9
  41437a:	jmp    0x387b3d0c
  41437f:	jo     0x414304
  414381:	sar    DWORD PTR [edi+0x2e9000e0],cl
  414387:	ss loopne 0x41434b
  41438a:	sbb    al,0x1c
  41438c:	xor    BYTE PTR [eax],dl
  41438e:	iret   
  41438f:	mov    cl,0x9d
  414391:	mov    al,cl
  414393:	mov    eax,DWORD PTR [ebx]
  414395:	cmp    dl,ah
  414397:	je     0x4143ed
  414399:	cmp    bl,BYTE PTR [edi-0x6d]
  41439c:	mov    bh,0x33
  41439e:	shl    bh,1
  4143a0:	nop
  4143a1:	xchg   BYTE PTR [ebx+eiz*4],dh
  4143a4:	push   0xeaf5ca1a
  4143a9:	mov    al,0xb7
  4143ab:	and    edi,edx
  4143ad:	push   es
  4143ae:	loopne 0x4143dd
  4143b0:	mov    dl,BYTE PTR [edx]
  4143b2:	or     al,0xbd
  4143b4:	sub    bl,BYTE PTR [ecx+0x66]
  4143b7:	aam    0x7b
  4143b9:	repz cmp bl,BYTE PTR [ebp+0x6b]
  4143bd:	mov    es,WORD PTR [edx]
  4143bf:	sbb    esi,edx
  4143c1:	aad    0x11
  4143c3:	pusha  
  4143c4:	pop    esi
  4143c5:	add    BYTE PTR gs:[edx+ebp*1-0x51],bl
  4143ca:	retf   
  4143cb:	or     eax,eax
  4143cd:	sahf   
  4143ce:	jmp    0x4143ff
  4143d0:	int    0x95
  4143d2:	fild   QWORD PTR [ebp+0x68d7ba3]
  4143d8:	mov    eax,0xe4371c24
  4143dd:	test   BYTE PTR [esi+0x2e31ee4],0xf3
  4143e4:	or     dl,al
  4143e6:	ins    DWORD PTR es:[edi],dx
  4143e7:	adc    DWORD PTR [esi+0x72],esi
  4143ea:	jb     0x4143ad
  4143ec:	jle    0x41441d
  4143ee:	sti    
  4143ef:	test   eax,0xc4a89e16
  4143f4:	jecxz  0x4143c7
  4143f6:	fst    st(2)
  4143f8:	sahf   
  4143f9:	add    eax,0xb27f3c82
  4143fe:	cmp    edx,0xffffff8b
  414401:	mov    esi,0x3e62b62b
  414406:	cdq    
  414407:	fcom   DWORD PTR [ebx]
  414409:	loope  0x4143c3
  41440b:	push   esp
  41440c:	pop    esi
  41440d:	sar    esi,0x8c
  414410:	push   cs
  414411:	popa   
  414412:	mov    bh,BYTE PTR [ecx+0x6b]
  414415:	mov    bl,0x20
  414417:	int3   
  414418:	jmp    0x41cf22ed
  41441d:	dec    esi
  41441e:	aam    0xe3
  414420:	sub    BYTE PTR [edi+0x65075df3],bh
  414426:	inc    eax
  414427:	lock jg 0x414420
  41442a:	lods   eax,DWORD PTR ds:[esi]
  41442b:	pop    esi
  41442c:	ret    
  41442d:	imul   edi,DWORD PTR [ecx+0x596f0036],0x26
  414434:	adc    ecx,0xffffffe7
  414437:	std    
  414438:	repnz cld 
  41443a:	data16 jbe 0x414452
  41443d:	inc    edi
  41443e:	call   0x5ed4:0x73585583
  414445:	fs sahf 
  414447:	push   edi
  414448:	mov    ebx,0x63ed7fd3
  41444d:	pop    ecx
  41444e:	fdiv   DWORD PTR [eax+eiz*2+0x214777fb]
  414455:	pushf  
  414456:	xlat   BYTE PTR ds:[ebx]
  414457:	cmp    dl,cl
  414459:	sub    BYTE PTR [esi-0x32],0xf3
  41445d:	imul   edx,ebx,0x63ac2b98
  414463:	inc    esp
  414464:	mov    esp,0xb1060ee2
  414469:	out    0x21,al
  41446b:	mov    eax,0xd2bfd917
  414470:	fild   QWORD PTR [edi+0x5b]
  414473:	add    BYTE PTR [edi],ah
  414475:	cmp    bh,BYTE PTR [ecx+0xec3dc32]
  41447b:	(bad)  
  41447c:	frstor [ecx-0x1c5ce1e3]
  414482:	or     eax,0xa492dc12
  414487:	cmp    BYTE PTR [edi-0x24],bh
  41448a:	sub    eax,0xc3063a05
  41448f:	add    esi,edx
  414491:	cmp    DWORD PTR [ebp+0x12],edx
  414494:	daa    
  414495:	sbb    dh,BYTE PTR [edx-0x6a]
  414498:	test   BYTE PTR [eax-0xa],cl
  41449b:	mov    ecx,0x17083c3a
  4144a0:	or     al,0x15
  4144a2:	out    0x6c,al
  4144a4:	inc    eax
  4144a5:	ins    BYTE PTR es:[edi],dx
  4144a6:	ret    
  4144a7:	jmp    0xd4fa:0xd3a8c1f3
  4144ae:	aas    
  4144af:	clc    
  4144b0:	cdq    
  4144b1:	aas    
  4144b2:	scas   eax,DWORD PTR es:[edi]
  4144b3:	mov    esp,0x2d784b85
  4144b8:	pop    esp
  4144b9:	sbb    eax,DWORD PTR [eax-0x1680db49]
  4144bf:	or     edi,DWORD PTR [edi+0x33]
  4144c2:	arpl   WORD PTR [ebp-0x670550dd],ax
  4144c8:	jnp    0x414545
  4144ca:	push   ecx
  4144cb:	cwde   
  4144cc:	jne    0x4144cd
  4144ce:	cmp    DWORD PTR [eax-0x38339e66],eax
  4144d4:	pop    esi
  4144d5:	add    DWORD PTR [esi+0x7982f437],ebp
  4144db:	mov    ss,WORD PTR [edi+0x73]
  4144de:	xlat   BYTE PTR ds:[ebx]
  4144df:	jbe    0x41451c
  4144e1:	xchg   ecx,eax
  4144e2:	test   BYTE PTR [edi],ah
  4144e4:	xor    eax,0xcef27870
  4144e9:	jae    0x414488
  4144eb:	xlat   BYTE PTR ds:[ebx]
  4144ec:	cmp    edi,DWORD PTR [edx-0x5195ff1b]
  4144f2:	jle    0x41456f
  4144f4:	cmp    al,0x26
  4144f6:	js     0x41448c
  4144f8:	aam    0x63
  4144fa:	dec    eax
  4144fb:	fdivr  st(3),st
  4144fd:	icebp  
  4144fe:	test   ch,ah
  414500:	mov    ?,WORD PTR [eax-0x319c233]
  414506:	addr16 push edi
  414508:	stc    
  414509:	sbb    eax,0x1b985240
  41450e:	and    edi,esp
  414510:	repz jp 0x41452c
  414513:	test   DWORD PTR [esi],ecx
  414515:	shl    edi,0x4a
  414518:	mov    bl,0x93
  41451a:	xor    BYTE PTR [edi-0x7156c4be],ah
  414520:	mov    ebx,0xef9cc1e
  414525:	cwde   
  414526:	sbb    ecx,DWORD PTR [edi+0x59]
  414529:	cwde   
  41452a:	aaa    
  41452b:	inc    ebx
  41452c:	mov    DWORD PTR [esi+0x64],esi
  41452f:	loopne 0x41454e
  414531:	mov    ch,0xe6
  414533:	jle    0x41457c
  414535:	call   0x7d9f:0x950d31ba
  41453c:	mov    edx,DWORD PTR [edi-0x51a1840e]
  414542:	or     eax,0xf2905bc0
  414547:	loop   0x41453b
  414549:	jae    0x4144de
  41454b:	inc    eax
  41454c:	jl     0x41451f
  41454e:	icebp  
  41454f:	push   esi
  414550:	xor    BYTE PTR ds:0x9e49ff2f,0x9b
  414557:	ficom  DWORD PTR [ecx+0x78]
  41455a:	inc    edi
  41455b:	out    0x9e,eax
  41455d:	push   ds
  41455e:	add    ah,BYTE PTR [edx]
  414560:	mov    DWORD PTR [esi],esi
  414562:	add    ecx,edi
  414564:	add    esp,ebp
  414566:	in     al,dx
  414567:	out    0xb9,eax
  414569:	fwait
  41456a:	sbb    DWORD PTR [eax-0x7189e991],0x31e676e5
  414574:	push   edi
  414575:	data16 (bad) 
  414577:	cwde   
  414578:	mov    eax,0x71c7dbbf
  41457d:	fiadd  DWORD PTR [edi-0x61d295a3]
  414583:	div    DWORD PTR [ecx+0x580773f3]
  414589:	jae    0x41455a
  41458b:	xlat   BYTE PTR ds:[ebx]
  41458c:	icebp  
  41458d:	loop   0x41455d
  41458f:	jns    0x41460b
  414591:	add    BYTE PTR [edi+edx*1-0x34],0xb3
  414596:	sar    DWORD PTR ds:0x4f2ccdf7,0x14
  41459d:	(bad)
  4145a2:	add    di,WORD PTR [edx]
  4145a5:	(bad)  
  4145a7:	or     eax,0xa01c579f
  4145ac:	shl    DWORD PTR [ecx],cl
  4145ae:	or     bl,BYTE PTR [ecx]
  4145b0:	(bad)  
  4145b1:	pushf  
  4145b2:	push   esi
  4145b3:	lea    esi,[eax]
  4145b5:	sbb    DWORD PTR ds:0x18e8c31c,0x9
  4145bc:	pop    ecx
  4145bd:	add    al,0xbf
  4145bf:	add    BYTE PTR [edx+0x24],al
  4145c2:	call   0x3e9849e2
  4145c7:	(bad)  
  4145c8:	in     eax,dx
  4145c9:	pop    ebp
  4145ca:	shr    DWORD PTR [ebx+0x71],0xe4
  4145ce:	fiadd  DWORD PTR [eax]
  4145d0:	mov    esp,0x3d3f3905
  4145d5:	std    
  4145d6:	and    DWORD PTR [esi-0x641777c2],esi
  4145dc:	jns    0x414608
  4145de:	inc    ecx
  4145df:	mov    al,0xbd
  4145e1:	xchg   ebx,eax
  4145e2:	adc    ebp,edx
  4145e4:	cmp    bh,BYTE PTR [eax+0x1c1b5f00]
  4145ea:	cmp    DWORD PTR [ecx+0x65977832],0x58
  4145f1:	and    BYTE PTR [esi-0x29],0xf6
  4145f5:	dec    ebp
  4145f6:	xchg   DWORD PTR [edi-0x46f9de11],ebp
  4145fc:	mov    ds:0x95dc2cbb,eax
  414601:	loopne 0x4145e1
  414603:	push   ds
  414604:	jmp    FWORD PTR [ebx]
  414606:	push   ebp
  414607:	add    DWORD PTR [ebx],edi
  414609:	xor    eax,0xe771f270
  41460e:	out    dx,eax
  41460f:	out    dx,al
  414610:	cmp    al,0x7f
  414612:	(bad)  
  414613:	div    DWORD PTR [edi-0x38bfbe50]
  414619:	jmp    0x41464e
  41461b:	idiv   esi
  41461d:	pop    esi
  41461e:	jecxz  0x414601
  414620:	add    cl,BYTE PTR [edi+0x10652570]
  414626:	and    al,0xe6
  414628:	ret    
  414629:	inc    ecx
  41462a:	ins    BYTE PTR es:[edi],dx
  41462b:	jecxz  0x41460e
  41462d:	mov    dl,0x3
  41462f:	popf   
  414630:	inc    esi
  414631:	and    dh,ah
  414633:	out    0xea,eax
  414635:	sub    BYTE PTR [edi+eiz*8-0x3017331d],dh
  41463c:	int3   
  41463d:	xchg   ebp,eax
  41463e:	fstp   TBYTE PTR [ecx]
  414640:	push   edi
  414641:	inc    edi
  414642:	jmp    0xb082cd04
  414647:	fild   WORD PTR [edi+0x34]
  41464a:	popa   
  41464b:	mov    esp,0xaf4e9774
  414650:	ja     0x41468f
  414652:	and    al,0xe4
  414654:	sub    eax,0xf801b5ca
  414659:	ss in  eax,0xaf
  41465c:	cld    
  41465d:	int3   
  41465e:	pop    edi
  41465f:	push   edi
  414660:	aam    0x51
  414662:	not    DWORD PTR [ebx]
  414664:	repnz repnz dec ebx
  414667:	test   al,0x5b
  414669:	das    
  41466a:	and    cl,BYTE PTR [esi+0x67]
  41466d:	(bad)  
  41466e:	cmp    esp,DWORD PTR [eax]
  414670:	xchg   edi,eax
  414671:	xchg   ebx,eax
  414672:	mov    ds:0xaf3e817a,eax
  414677:	inc    ecx
  414678:	lock out 0xe4,al
  41467b:	xchg   ch,ch
  41467d:	jmp    0x83d9e73f
  414682:	jo     0x414647
  414684:	cmp    al,0x2d
  414686:	jo     0x4146cb
  414688:	jnp    0x4146c6
  41468a:	(bad)  
  41468b:	cmc    
  41468c:	sbb    BYTE PTR [edi+eax*4],dl
  41468f:	ja     0x414611
  414691:	xor    BYTE PTR [edi+0x13],ah
  414694:	pop    edx
  414695:	push   ss
  414696:	push   edi
  414697:	call   0x3829555a
  41469c:	jg     0x41467e
  41469e:	sub    dh,BYTE PTR [esi]
  4146a0:	loopne 0x4146ca
  4146a2:	lods   al,BYTE PTR ds:[esi]
  4146a3:	xlat   BYTE PTR ds:[ebx]
  4146a4:	sbb    BYTE PTR [ecx+0x19],bh
  4146a7:	test   dh,cl
  4146a9:	mov    cl,0x5d
  4146ab:	int3   
  4146ac:	sar    cl,0xdf
  4146af:	stc    
  4146b0:	lods   al,BYTE PTR ds:[esi]
  4146b1:	sahf   
  4146b2:	outs   dx,BYTE PTR ds:[esi]
  4146b3:	inc    edx
  4146b4:	out    0x5c,eax
  4146b6:	mov    ebp,0x949ddf5e
  4146bb:	and    al,0x79
  4146bd:	enter  0x8250,0xfb
  4146c1:	jno    0x414683
  4146c3:	adc    edx,esi
  4146c5:	jnp    0x4146e2
  4146c7:	mov    eax,ds:0x94e6b2c
  4146cc:	jbe    0x4146ad
  4146ce:	push   esi
  4146cf:	add    al,0xd9
  4146d1:	adc    BYTE PTR [ecx+0x24],0xc0
  4146d5:	fs std 
  4146d7:	push   ebp
  4146d8:	adc    ah,BYTE PTR [ecx-0x1402240]
  4146de:	aas    
  4146df:	cld    
  4146e0:	cld    
  4146e1:	jmp    0x91c5:0xaf157eb7
  4146e8:	imul   eax,DWORD PTR [ebx],0xfffffff0
  4146eb:	ins    DWORD PTR es:[edi],dx
  4146ec:	mov    ch,BYTE PTR [eax]
  4146ee:	dec    ecx
  4146ef:	mov    bh,0x6
  4146f1:	cmp    esi,0xffffff8d
  4146f4:	mov    al,0x4f
  4146f6:	out    0xe2,al
  4146f8:	cdq    
  4146f9:	mov    edi,0xb224f908
  4146fe:	data16 mov bl,0xd3
  414701:	in     al,dx
  414702:	outs   dx,DWORD PTR ds:[esi]
  414703:	shl    DWORD PTR [ebp-0x46],cl
  414706:	mov    ecx,0xe8df99af
  41470b:	outs   dx,BYTE PTR ds:[esi]
  41470c:	adc    ecx,DWORD PTR [edi-0x52fdfe20]
  414712:	stc    
  414713:	arpl   si,bx
  414715:	rcr    DWORD PTR [edi],0xae
  414718:	and    bh,BYTE PTR [ebx]
  41471a:	sahf   
  41471b:	fmul   DWORD PTR [ecx]
  41471d:	iret   
  41471e:	rol    DWORD PTR ds:0xc1289cf0,0xe1
  414725:	adc    BYTE PTR [eax+0x4549d417],bh
  41472b:	cmp    al,0x69
  41472d:	mov    ah,BYTE PTR [ebx+0x74]
  414730:	data16 daa 
  414732:	xor    bh,BYTE PTR [edi+0x1e]
  414735:	int3   
  414736:	push   ebx
  414737:	add    DWORD PTR [edi],ebp
  414739:	and    eax,0xf00599d8
  41473e:	je     0x4147ab
  414740:	scas   eax,DWORD PTR es:[edi]
  414741:	xlat   BYTE PTR ds:[ebx]
  414742:	xor    BYTE PTR [eax+0x2836c12d],bh
  414748:	loope  0x414762
  41474a:	cmp    al,0xaf
  41474c:	js     0x414779
  41474e:	add    BYTE PTR [eax],cl
  414750:	repz (bad) 
  414752:	ror    BYTE PTR [esi+0x7a7277a7],0x51
  414759:	call   0x7ee2:0x32a77b7b
  414760:	xchg   DWORD PTR [esi],ebx
  414762:	dec    esi
  414763:	sub    BYTE PTR [edx+eax*4-0x20],0x13
  414768:	cmp    BYTE PTR [edx-0xd5bfc0f],bh
  41476e:	stos   DWORD PTR es:[edi],eax
  41476f:	clc    
  414770:	fs xor esi,ebx
  414773:	ins    BYTE PTR es:[edi],dx
  414774:	mov    ch,0xae
  414776:	aaa    
  414777:	or     BYTE PTR [edi+0x36b905],bh
  41477d:	fbld   TBYTE PTR [esi-0x30162d5c]
  414783:	push   0xa6d7e69a
  414788:	and    ebp,DWORD PTR [esi]
  41478a:	cmp    ah,BYTE PTR [esi]
  41478c:	xchg   edi,ebp
  41478e:	dec    DWORD PTR [ecx]
  414790:	and    ah,BYTE PTR [ebp+0x215b7e0c]
  414796:	popf   
  414797:	adc    DWORD PTR [esi+0x30],edx
  41479a:	idiv   DWORD PTR [esi+ecx*8+0x7c]
  41479e:	aas    
  41479f:	out    0x31,eax
  4147a1:	xchg   edi,eax
  4147a2:	fcmove st,st(2)
  4147a4:	jl     0x4147f4
  4147a6:	(bad)  
  4147a8:	sbb    BYTE PTR [ebx+eax*1+0x440339ec],0x1d
  4147b0:	adc    cl,BYTE PTR [edi-0x58401a5]
  4147b6:	stc    
  4147b7:	ret    0x7ffc
  4147ba:	xchg   edi,eax
  4147bb:	(bad)  
  4147bd:	jmp    0xecf43c08
  4147c2:	sub    al,0x13
  4147c4:	sub    al,0x1d
  4147c6:	xlat   BYTE PTR ds:[ebx]
  4147c7:	dec    eax
  4147c8:	js     0x414787
  4147ca:	xor    eax,0x701a3cc2
  4147cf:	call   0x20f9d692
  4147d4:	and    BYTE PTR [esi],bl
  4147d6:	cmp    al,0xc0
  4147d8:	sub    DWORD PTR [ebp-0x26],edx
  4147db:	out    dx,eax
  4147dc:	gs jmp 0xb001:0xece0ce36
  4147e4:	lea    ecx,[ecx+0x54e82cb7]
  4147ea:	dec    eax
  4147eb:	mov    esp,0x8ccec62d
  4147f0:	inc    ebx
  4147f1:	xlat   BYTE PTR ds:[ebx]
  4147f2:	fdiv   DWORD PTR [eax]
  4147f4:	pop    es
  4147f5:	add    ebp,ebx
  4147f7:	stc    
  4147f8:	add    dl,dl
  4147fa:	int3   
  4147fb:	repz sti 
  4147fd:	std    
  4147fe:	xor    bh,ch
  414800:	dec    edi
  414801:	cld    
  414802:	add    al,0xd1
  414804:	cmp    ebx,DWORD PTR [edi-0x7f79783f]
  41480a:	inc    eax
  41480b:	xor    BYTE PTR [eax],bl
  41480d:	cld    
  41480e:	fcomp  QWORD PTR [ebx-0x42]
  414811:	test   al,0xdf
  414813:	ret    
  414814:	jb     0x414883
  414816:	add    BYTE PTR [esi-0x12ca2eb3],bh
  41481c:	xor    edi,DWORD PTR [esi]
  41481e:	fld    DWORD PTR [edi-0x4d]
  414821:	fld    st(0)
  414823:	sbb    al,0xb5
  414825:	cmp    DWORD PTR ds:0xff7da845,ebx
  41482b:	pop    ss
  41482c:	rcl    BYTE PTR [edi+0x33a79056],1
  414832:	add    eax,0x4ebca870
  414837:	or     DWORD PTR [edi-0x1ffcaa40],0xffffff84
  41483e:	jmp    0x4147ce
  414840:	xor    bh,BYTE PTR [eax]
  414842:	inc    eax
  414843:	fwait
  414844:	xor    edx,0x3b
  414847:	stc    
  414848:	mov    ebx,0x73b40788
  41484d:	pop    esi
  41484e:	iret   
  41484f:	cmp    al,0xa7
  414851:	ja     0x414846
  414853:	jp     0x41489c
  414855:	sub    DWORD PTR [ebp+0x71],0x73
  414859:	jae    0x414832
  41485b:	popf   
  41485c:	xor    ah,BYTE PTR [edi-0x6]
  41485f:	or     DWORD PTR [ebx+0x63],esi
  414862:	loope  0x4147f1
  414864:	xor    BYTE PTR [edx+esi*2-0x70],bl
  414868:	imul   ebx,edi,0xc6ee2614
  41486e:	pusha  
  41486f:	out    dx,eax
  414870:	test   BYTE PTR [edi+0x47],bl
  414873:	xchg   ecx,eax
  414874:	mov    ebp,0xc4bd875b
  414879:	and    bh,dl
  41487b:	dec    eax
  41487c:	cdq    
  41487d:	jbe    0x414857
  41487f:	out    dx,eax
  414880:	pusha  
  414881:	and    ecx,DWORD PTR [esi-0x4c610d9f]
  414887:	jae    0x4148d3
  414889:	loop   0x4148c7
  41488b:	mov    ds:0x89dfce71,al
  414890:	adc    bl,BYTE PTR [ebx+eiz*2+0x5348169a]
  414897:	xor    BYTE PTR [ebx+0x21],al
  41489a:	mov    edx,0x9893ffdf
  41489f:	pop    ebx
  4148a0:	aas    
  4148a1:	rol    BYTE PTR [edx+0x32],0x4a
  4148a5:	mov    ds:0x4cb2c756,eax
  4148aa:	inc    esi
  4148ab:	ret    
  4148ac:	shr    DWORD PTR [ebx],1
  4148ae:	jg     0x41489f
  4148b0:	xchg   edi,eax
  4148b1:	call   DWORD PTR [edi-0x5343a41c]
  4148b7:	fbstp  TBYTE PTR [ebx-0x41ff928e]
  4148bd:	or     eax,0xf77fdbf9
  4148c2:	pop    ds
  4148c3:	sub    al,0xab
  4148c5:	call   0x1e24:0x993262f6
  4148cc:	dec    ebx
  4148cd:	nop
  4148ce:	into   
  4148cf:	out    0xd0,al
  4148d1:	jp     0x414948
  4148d3:	mov    edx,0x8fd39666
  4148d8:	inc    BYTE PTR [edx]
  4148da:	pop    ss
  4148db:	fwait
  4148dc:	pop    ds
  4148dd:	les    ebp,FWORD PTR [edi]
  4148df:	cmp    DWORD PTR [ecx],0xfb5678f6
  4148e5:	inc    esi
  4148e6:	(bad)  
  4148e7:	in     eax,dx
  4148e8:	sbb    ebx,esp
  4148ea:	or     DWORD PTR [edi+0x73881701],eax
  4148f0:	cmp    al,0xb4
  4148f2:	out    dx,al
  4148f3:	int3   
  4148f4:	div    DWORD PTR [ebx-0x78e77b1a]
  4148fa:	adc    al,0xe4
  4148fc:	dec    ebp
  4148fd:	add    esi,DWORD PTR [eax]
  4148ff:	jo     0x4148a8
  414901:	in     eax,0x82
  414903:	pop    es
  414904:	int3   
  414905:	mov    bl,0x3c
  414907:	dec    edx
  414908:	in     al,0xe4
  41490a:	hlt    
  41490b:	xor    BYTE PTR [edi-0x3d79241d],ch
  414911:	mov    ebp,DWORD PTR [ecx]
  414913:	cmp    BYTE PTR [edi+0x27b9e511],ch
  414919:	jbe    0x41495e
  41491b:	jp     0x414989
  41491d:	and    esp,DWORD PTR [ecx+0x1b]
  414920:	and    DWORD PTR [edi-0x8],ebp
  414923:	out    dx,eax
  414924:	aam    0xf8
  414926:	add    eax,0x9e790409
  41492b:	data16 js 0x4148bb
  41492e:	lea    esp,[ebx-0x54]
  414931:	pushf  
  414932:	out    dx,eax
  414933:	ret    0x6734
  414936:	out    0xed,eax
  414938:	xchg   esp,eax
  414939:	cmc    
  41493a:	add    al,0xc9
  41493c:	out    0xfa,al
  41493e:	jnp    0x41497e
  414940:	mov    edx,DWORD PTR [ebx-0x7e6cc7d6]
  414946:	add    eax,0x84132401
  41494b:	sub    DWORD PTR [eax-0x15],esi
  41494e:	add    eax,0x5f83fea
  414953:	push   ds
  414954:	dec    esi
  414955:	or     cl,BYTE PTR [eax]
  414957:	xchg   ebx,eax
  414958:	push   ds
  414959:	std    
  41495a:	jle    0x4148eb
  41495c:	data16 mov bl,0x41
  41495f:	mov    edi,0x993265d7
  414964:	xchg   esp,eax
  414965:	sbb    ecx,ebp
  414967:	out    0x4b,al
  414969:	out    dx,eax
  41496a:	fadd   st,st(5)
  41496c:	(bad)  
  41496d:	push   ds
  41496e:	adc    ecx,edi
  414970:	fnstsw WORD PTR [esi]
  414972:	xor    edi,0xf4924892
  414978:	push   0xffffffb7
  41497a:	ror    DWORD PTR [ebp-0x5c],cl
  41497d:	shr    BYTE PTR [ecx],cl
  41497f:	adc    al,0x45
  414981:	and    DWORD PTR [edx],ebx
  414983:	(bad)  
  414984:	shr    edi,1
  414986:	jne    0x4149d0
  414988:	inc    esp
  414989:	jl     0x4149ef
  41498b:	repz dec ebx
  41498d:	cmp    al,0x9e
  41498f:	cld    
  414990:	gs mov eax,0x8ed619f1
  414996:	(bad)  
  414997:	cmp    esp,ebp
  414999:	mov    ebp,0x365cf339
  41499e:	pop    ecx
  41499f:	ror    BYTE PTR ds:0x7f0e61d1,0xdb
  4149a6:	xchg   cl,al
  4149a8:	out    dx,eax
  4149a9:	leave  
  4149aa:	test   DWORD PTR [ebp-0x23f4cd9b],edi
  4149b0:	test   eax,0x75ed92c0
  4149b5:	add    eax,0x615e628f
  4149ba:	pop    ss
  4149bb:	fiadd  DWORD PTR [edi]
  4149bd:	mov    edi,0x5f5bb212
  4149c2:	popf   
  4149c3:	pop    DWORD PTR [ebx+0x7e7890c7]
  4149c9:	jmp    FWORD PTR [edx-0x42599fcf]
  4149cf:	sar    BYTE PTR [bx+di],0xa6
  4149d3:	cmp    al,0x8b
  4149d5:	outs   dx,BYTE PTR ds:[esi]
  4149d6:	sbb    al,0xc0
  4149d8:	push   eax
  4149d9:	nop
  4149da:	out    0x9f,eax
  4149dc:	lds    edi,FWORD PTR [ebx]
  4149de:	popa   
  4149df:	fdivr  st,st(1)
  4149e1:	mov    WORD PTR [esi+0x59a411e1],cs
  4149e7:	mov    edx,0x173b3161
  4149ec:	shl    DWORD PTR [edx+0x3dfb1ba3],cl
  4149f2:	or     eax,0xc24a392f
  4149f7:	fnstsw WORD PTR [edi+0x60]
  4149fa:	or     ah,BYTE PTR [eax]
  4149fc:	sbb    ah,al
  4149fe:	fwait
  4149ff:	inc    edx
  414a00:	daa    
  414a01:	sbb    BYTE PTR [edx-0x774c048e],ah
  414a07:	das    
  414a08:	(bad)  
  414a09:	daa    
  414a0a:	push   esp
  414a0b:	dec    esi
  414a0c:	stos   BYTE PTR es:[edi],al
  414a0d:	dec    esp
  414a0e:	ficom  DWORD PTR ds:0xcd00d1fa
  414a14:	adc    bx,WORD PTR [ecx-0x6a]
  414a18:	or     DWORD PTR [edi-0x5e],eax
  414a1b:	add    al,0x7a
  414a1d:	jge    0x414a6b
  414a1f:	test   bh,cl
  414a21:	add    BYTE PTR [edi-0x2ca31205],bh
  414a27:	out    dx,eax
  414a28:	jne    0x4149bb
  414a2a:	mov    esi,0xc5ae53f9
  414a2f:	xchg   ecx,eax
  414a30:	int    0x9b
  414a32:	mov    bh,0xff
  414a34:	call   0x9e3:0x26cfa9a6
  414a3b:	and    dl,BYTE PTR [ecx-0x6fdf7df8]
  414a41:	leave  
  414a42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a43:	or     DWORD PTR [ebp+0x3f1404c2],eax
  414a49:	leave  
  414a4a:	dec    eax
  414a4b:	adc    BYTE PTR [ecx],bh
  414a4d:	jmp    FWORD PTR [ebx+eax*8]
  414a50:	aad    0xef
  414a52:	inc    ebx
  414a53:	dec    ebx
  414a54:	in     eax,0x9
  414a56:	sbb    ecx,DWORD PTR [ebp+0x7c]
  414a59:	mov    ebp,0x4e13a206
  414a5e:	jnp    0x4149e0
  414a60:	sub    eax,0xe09a5991
  414a65:	ins    BYTE PTR es:[edi],dx
  414a66:	ret    
  414a67:	jne    0x4149f0
  414a69:	mov    BYTE PTR gs:[ebx+0x62],dh
  414a6d:	mov    WORD PTR [ebx-0x71],ss
  414a70:	aaa    
  414a71:	dec    ebp
  414a72:	mov    ebx,0x595b103b
  414a77:	xor    eax,0xc2a7d530
  414a7c:	jg     0x414a59
  414a7e:	sbb    BYTE PTR [ebp+edx*8+0x64],bh
  414a82:	pop    ds
  414a83:	sti    
  414a84:	jg     0x414a6d
  414a86:	cmp    BYTE PTR [esi],cl
  414a88:	cs popa 
  414a8a:	cmp    DWORD PTR [esi-0x39],eax
  414a8d:	sti    
  414a8e:	add    DWORD PTR [ebp-0x110e3bec],ebx
  414a94:	dec    esi
  414a95:	call   0xd7e77608
  414a9a:	mov    ebx,0x69d00e0b
  414a9f:	int    0x9f
  414aa1:	out    0x88,eax
  414aa3:	fld    TBYTE PTR [eax-0x3081871c]
  414aa9:	cmp    dh,BYTE PTR [edx]
  414aab:	mov    bh,0xeb
  414aad:	(bad)  
  414aae:	fyl2xp1 
  414ab0:	call   0xfdf49603
  414ab5:	cwde   
  414ab6:	outs   dx,BYTE PTR ds:[esi]
  414ab7:	xor    BYTE PTR [ecx],0x5
  414aba:	push   ecx
  414abb:	pop    es
  414abc:	push   edx
  414abd:	sub    DWORD PTR [edx+0x1bcd3e77],ebx
  414ac3:	mov    edi,DWORD PTR [edi]
  414ac5:	dec    esp
  414ac6:	hlt    
  414ac7:	mov    ecx,0x50893cf
  414acc:	cmp    al,bl
  414ace:	jns    0x414b14
  414ad0:	xor    bl,BYTE PTR [ebp+0x70285f26]
  414ad6:	jl     0x414b50
  414ad8:	dec    eax
  414ad9:	cmp    bl,BYTE PTR [ebx+0x302f9f25]
  414adf:	push   ebp
  414ae0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ae1:	mov    WORD PTR [edi-0x5d],es
  414ae4:	call   0x901a4978
  414ae9:	std    
  414aea:	(bad)  
  414aec:	sti    
  414aed:	cmp    edi,edi
  414aef:	retf   0x6cb3
  414af2:	cld    
  414af3:	pop    edx
  414af4:	mov    esi,0x801b5c91
  414af9:	outs   dx,DWORD PTR ds:[esi]
  414afa:	push   ecx
  414afb:	jle    0x414ade
  414afd:	outs   dx,DWORD PTR ds:[esi]
  414afe:	dec    edi
  414b00:	mov    ecx,ecx
  414b02:	fs cli 
  414b04:	mov    edi,DWORD PTR [edx-0x2cd3d852]
  414b0a:	and    al,0x9b
  414b0c:	iret   
  414b0d:	jno    0x414b87
  414b0f:	js     0x414b51
  414b11:	cs lahf 
  414b13:	and    DWORD PTR [edi+0x787c702f],ebx
  414b19:	test   BYTE PTR [eax],ah
  414b1b:	rol    BYTE PTR [edx+0x36],0xc5
  414b1f:	stc    
  414b20:	stc    
  414b21:	and    eax,0xa1349307
  414b26:	push   edi
  414b27:	(bad)  
  414b28:	push   ebx
  414b29:	hlt    
  414b2a:	ret    0xd32a
  414b2d:	inc    BYTE PTR ds:0x4f89b511
  414b33:	popf   
  414b34:	sbb    eax,0x6d10f2cb
  414b39:	sbb    al,0xbd
  414b3b:	adc    DWORD PTR ds:0x7ca38051,edi
  414b41:	mov    dl,0x8d
  414b43:	mov    bh,BYTE PTR [ebx]
  414b45:	sub    DWORD PTR [edx-0x62c3b125],eax
  414b4b:	jns    0x414ba2
  414b4d:	scas   eax,DWORD PTR es:[edi]
  414b4e:	ja     0x414bc7
  414b50:	stos   DWORD PTR es:[edi],eax
  414b51:	or     DWORD PTR [esi],ebx
  414b53:	nop
  414b54:	into   
  414b55:	jge    0x414b33
  414b57:	jmp    0x414b4a
  414b59:	popf   
  414b5a:	lahf   
  414b5b:	cmp    eax,0xca77be88
  414b60:	scas   eax,DWORD PTR es:[edi]
  414b61:	add    edx,DWORD PTR [eax+0x3a]
  414b64:	outs   dx,BYTE PTR ds:[esi]
  414b65:	fmul   QWORD PTR [ebp+0x20c43c0e]
  414b6b:	push   ecx
  414b6c:	bound  ecx,QWORD PTR [esi]
  414b6e:	xlat   BYTE PTR ds:[ebx]
  414b6f:	pop    ebx
  414b70:	out    dx,al
  414b71:	push   ebx
  414b72:	fucom  st(7)
  414b74:	mov    ebx,0x501d0833
  414b79:	iret   
  414b7a:	div    dl
  414b7c:	mov    edx,0xeefcf73e
  414b81:	loopne 0x414b92
  414b83:	out    0xbc,eax
  414b85:	or     al,0x40
  414b87:	mov    ch,0xcf
  414b89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b8a:	mov    eax,0x1ff9eb46
  414b8f:	data16 hlt 
  414b91:	mov    DWORD PTR [edi+0x14fe5066],ebx
  414b97:	mov    cl,0x44
  414b99:	xchg   esi,eax
  414b9a:	bound  edi,QWORD PTR [edx]
  414b9c:	(bad)  
  414b9d:	push   0xc374430
  414ba2:	push   ss
  414ba3:	mov    ecx,DWORD PTR [ebx-0x8]
  414ba6:	adc    eax,0x93aeba3f
  414bab:	dec    esp
  414bac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414bad:	xor    BYTE PTR [ebp+0x3],cl
  414bb0:	pop    ecx
  414bb1:	div    BYTE PTR [ecx+0x71]
  414bb4:	push   ecx
  414bb5:	dec    ebp
  414bb6:	out    0x73,al
  414bb8:	stc    
  414bb9:	jg     0x414bac
  414bbb:	mov    ebx,0x2fb7f2ff
  414bc0:	(bad)  
  414bc2:	aad    0xfe
  414bc4:	ficom  WORD PTR [ecx+0x5be014eb]
  414bca:	adc    al,0xd3
  414bcc:	mov    dl,0x9e
  414bce:	cmovbe esp,DWORD PTR [edx+0x40204acb]
  414bd5:	stos   DWORD PTR es:[edi],eax
  414bd6:	push   ecx
  414bd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414bd8:	fucomi st,st(1)
  414bda:	mov    al,ds:0x4a952aa9
  414bdf:	test   DWORD PTR [edx+ebp*1+0x4b],esi
  414be3:	mov    ebx,0x6ed9a6d3
  414be8:	adc    cl,BYTE PTR [edi+eax*4]
  414beb:	shl    DWORD PTR [ebp-0x7d1095d7],1
  414bf1:	mov    bl,0x63
  414bf3:	fdivr  DWORD PTR [eax+0xd3917f3]
  414bf9:	mov    ebp,0xebdad39f
  414bfe:	fdiv   QWORD PTR [esi]
  414c00:	pop    ds
  414c01:	adc    ch,BYTE PTR [ebp+0xf2e117c]
  414c07:	mov    al,0x26
  414c09:	and    BYTE PTR [edx],ch
  414c0b:	and    BYTE PTR [edx+0xa79e27c],bh
  414c11:	loopne 0x414c23
  414c13:	mov    BYTE PTR [edx+ebp*8-0x30504c7f],bl
  414c1a:	repnz add BYTE PTR [ebx-0x72],dh
  414c1e:	out    0x37,eax
  414c20:	popf   
  414c21:	xor    bh,bl
  414c23:	repz jp 0x414bf1
  414c26:	repz ja 0x414c40
  414c29:	(bad)  
  414c2a:	out    0xab,eax
  414c2c:	or     eax,0x4053b38c
  414c31:	hlt    
  414c32:	lock or BYTE PTR [ebx+esi*2],ch
  414c36:	mov    ?,WORD PTR [edi]
  414c38:	js     0x414bd1
  414c3a:	cmp    BYTE PTR [eax],0x40
  414c3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c3e:	lock adc al,0x46
  414c41:	jo     0x414ca8
  414c43:	sub    al,0xb8
  414c45:	xor    DWORD PTR [ecx],0x3c
  414c48:	push   ebp
  414c49:	mov    eax,ds:0xb2839870
  414c4e:	xor    al,0x9f
  414c50:	outs   dx,DWORD PTR ds:[esi]
  414c51:	add    BYTE PTR [eax],ah
  414c53:	sbb    al,al
  414c55:	js     0x414c3d
  414c57:	std    
  414c58:	(bad)  
  414c59:	dec    edx
  414c5a:	or     BYTE PTR [ebx-0x183b922c],0x7f
  414c61:	add    al,0xa3
  414c63:	hlt    
  414c64:	inc    ecx
  414c65:	(bad)  
  414c67:	ds and eax,0xeb709f59
  414c6d:	inc    esi
  414c6e:	mov    BYTE PTR [edx-0x56ad5826],bh
  414c74:	adc    BYTE PTR [esi-0x2523267c],cl
  414c7a:	mov    ds:0xefd2eddb,al
  414c7f:	imul   DWORD PTR [ecx]
  414c81:	das    
  414c82:	scas   eax,DWORD PTR es:[edi]
  414c83:	push   eax
  414c84:	lods   eax,DWORD PTR ds:[esi]
  414c85:	pushf  
  414c86:	loope  0x414cdf
  414c88:	adc    al,0x4c
  414c8a:	ret    
  414c8b:	pusha  
  414c8c:	xor    bl,BYTE PTR [esi-0x2e3c7808]
  414c92:	mov    DWORD PTR [eax+0x3723bfd7],0xb9419fc1
  414c9c:	ss add bh,bl
  414c9f:	mov    ds:0x1ffdfb74,al
  414ca4:	mov    WORD PTR [ebp+0x63],es
  414ca7:	add    al,0xe2
  414ca9:	xor    DWORD PTR [edx-0x33],ebx
  414cac:	push   es
  414cad:	and    BYTE PTR [eax],0x10
  414cb0:	pop    edi
  414cb2:	sbb    BYTE PTR ds:0x43868c47,cl
  414cb8:	xor    ch,cl
  414cba:	xor    al,0x67
  414cbc:	xchg   ebp,eax
  414cbd:	xor    edi,DWORD PTR [edx+0x72a50e9d]
  414cc3:	cdq    
  414cc4:	shl    DWORD PTR [eax-0x78],1
  414cc7:	gs call 0x9b67ca11
  414ccd:	retf   
  414cce:	gs mov edx,0xe17a05d9
  414cd4:	mov    edi,0x60ef58c0
  414cd9:	push   ebp
  414cda:	inc    BYTE PTR [ebp+eax*4-0x624bbc02]
  414ce1:	ffreep st(3)
  414ce3:	fistp  QWORD PTR [esi]
  414ce5:	inc    eax
  414ce6:	xor    DWORD PTR [esp+esi*1+0x15],ecx
  414cea:	lock loope 0x414d3b
  414ced:	add    al,0x12
  414cef:	inc    ebp
  414cf0:	mov    ebx,0x3228ef66
  414cf5:	mov    bl,0xc8
  414cf7:	inc    ecx
  414cf8:	fs into 
  414cfa:	adc    eax,0xd8eb22f0
  414cff:	pusha  
  414d00:	mov    ds:0x857c3697,al
  414d05:	lahf   
  414d06:	outs   dx,DWORD PTR ds:[esi]
  414d07:	(bad)  
  414d08:	out    dx,al
  414d09:	cld    
  414d0a:	shr    ebp,1
  414d0c:	push   cs
  414d0d:	je     0x414ca7
  414d0f:	jg     0x414caf
  414d11:	jmp    0x1f2d:0xdb15cc04
  414d18:	cmp    ch,ah
  414d1a:	ds pop es
  414d1c:	mov    ah,0x84
  414d1e:	jns    0x414d09
  414d20:	into   
  414d21:	sub    DWORD PTR [edi],esi
  414d23:	cmp    al,BYTE PTR [esi]
  414d25:	enter  0x2783,0x0
  414d29:	repz pop ecx
  414d2b:	and    DWORD PTR [esi],0xeaa816c8
  414d31:	lods   al,BYTE PTR ds:[esi]
  414d32:	mov    esp,0x987326a9
  414d37:	ja     0x414d98
  414d39:	in     eax,0x3c
  414d3b:	jl     0x414cd8
  414d3d:	aaa    
  414d3e:	jnp    0x414d49
  414d40:	or     BYTE PTR [ebx],0x37
  414d43:	fcomp  st(0)
  414d45:	fsub   st,st(2)
  414d47:	(bad)  
  414d48:	imul   edi,DWORD PTR [edi-0x3e],0xffffffb4
  414d4c:	jge    0x414d0f
  414d4e:	cwde   
  414d4f:	adc    al,0xdd
  414d51:	dec    esi
  414d52:	fwait
  414d53:	std    
  414d54:	mov    ebp,0x1fdfa5d
  414d59:	das    
  414d5a:	jg     0x414d3c
  414d5c:	add    esi,DWORD PTR [edx+edi*1+0x1d]
  414d60:	mov    dh,0x1f
  414d62:	aas    
  414d63:	bound  esp,QWORD PTR [ebx-0xd]
  414d66:	push   es
  414d67:	xchg   BYTE PTR [ecx-0x318e8e8d],ah
  414d6d:	loop   0x414dc1
  414d6f:	mov    DWORD PTR [esi-0x59],ecx
  414d72:	dec    ebp
  414d73:	xor    BYTE PTR [esp+eiz*2],dl
  414d76:	cmp    al,0x9e
  414d78:	cld    
  414d79:	adc    al,dh
  414d7b:	neg    edi
  414d7d:	fldcw  WORD PTR [ebx-0x51a89801]
  414d83:	push   ebx
  414d84:	sub    BYTE PTR [edi+0x41],0xfe
  414d88:	into   
  414d89:	(bad)  
  414d8b:	gs pop edi
  414d8d:	mov    bl,0xd9
  414d8f:	cli    
  414d90:	lds    edi,FWORD PTR [eax+0x3c]
  414d93:	mov    cl,0x10
  414d95:	or     al,0x86
  414d97:	adc    BYTE PTR [ebp-0x6f],al
  414d9a:	ins    BYTE PTR es:[edi],dx
  414d9b:	cs inc edi
  414d9d:	ss xchg edi,eax
  414d9f:	popa   
  414da0:	cmp    bl,BYTE PTR [esi+0x29e7cb90]
  414da6:	cs sub al,0xa2
  414da9:	test   eax,0x10c18253
  414dae:	fstp   DWORD PTR [esi+ecx*4+0x48]
  414db2:	and    al,0x4a
  414db4:	es fwait
  414db6:	gs xor al,0x1e
  414db9:	mov    ds:0x48d11a6b,al
  414dbe:	and    BYTE PTR [eax+edi*1-0x38],0xa3
  414dc3:	in     eax,dx
  414dc4:	cmp    eax,0x8411074e
  414dc9:	sbb    ebx,DWORD PTR [edi-0x3019833d]
  414dcf:	jae    0x414d71
  414dd1:	ins    BYTE PTR es:[edi],dx
  414dd2:	ror    DWORD PTR [ebp-0x1931efd2],1
  414dd8:	or     al,cl
  414dda:	sbb    dh,BYTE PTR [edx+0x1a984631]
  414de0:	pop    eax
  414de1:	stos   BYTE PTR es:[edi],al
  414de2:	cmp    eax,0xd021df27
  414de7:	js     0x414e26
  414de9:	in     eax,dx
  414dea:	je     0x414d72
  414dec:	pushf  
  414ded:	mov    ebx,0x2b987593
  414df2:	scas   eax,DWORD PTR es:[edi]
  414df3:	fucomi st,st(2)
  414df5:	retf   
  414df6:	sbb    al,0x81
  414df8:	mov    bh,0x84
  414dfa:	jns    0x414d90
  414dfc:	loopne 0x414e2b
  414dfe:	or     edi,DWORD PTR [edx-0x76f0e05c]
  414e04:	(bad)  
  414e05:	stos   DWORD PTR es:[edi],eax
  414e06:	loopne 0x414de6
  414e08:	enter  0x4dc0,0x1
  414e0c:	sahf   
  414e0d:	or     bh,cl
  414e0f:	popa   
  414e10:	jle    0x414e3e
  414e12:	out    dx,eax
  414e13:	icebp  
  414e14:	add    al,0x1b
  414e16:	icebp  
  414e17:	pop    ss
  414e18:	push   esp
  414e19:	adc    BYTE PTR [eax+edx*1+0x70],ch
  414e1d:	sub    al,0x87
  414e1f:	cmp    BYTE PTR [edi+0x56],dl
  414e22:	cwde   
  414e23:	cmp    al,0xf3
  414e25:	and    ecx,DWORD PTR [edi+edi*1-0x6643ac04]
  414e2c:	stc    
  414e2d:	and    DWORD PTR [esi],eax
  414e2f:	pop    ebx
  414e30:	call   DWORD PTR [ecx]
  414e32:	adc    ebp,0x16cc910f
  414e38:	pop    ecx
  414e39:	dec    eax
  414e3a:	(bad)  
  414e3b:	or     edx,edi
  414e3d:	inc    esp
  414e3e:	sub    ah,BYTE PTR [edi+0x27]
  414e41:	pop    eax
  414e42:	add    bl,ah
  414e44:	mov    esp,0xa74e9b79
  414e49:	ret    
  414e4a:	jmp    0x61025828
  414e4f:	adc    BYTE PTR [ebp+0x51],al
  414e52:	cmp    BYTE PTR [ecx],bh
  414e54:	cmp    DWORD PTR [ecx-0x30],esp
  414e57:	out    dx,eax
  414e58:	adc    DWORD PTR [edx],ecx
  414e5a:	xchg   DWORD PTR [eax+0x3a746bd7],ebp
  414e60:	sbb    eax,0x9d30a142
  414e65:	outs   dx,BYTE PTR ds:[esi]
  414e66:	fwait
  414e67:	push   0x14304a34
  414e6c:	mov    ?,WORD PTR [edi-0x4]
  414e6f:	xchg   ebx,eax
  414e70:	lahf   
  414e71:	cld    
  414e72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e73:	jg     0x414e65
  414e75:	jnp    0x414e76
  414e77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e78:	neg    DWORD PTR ds:0xccfe25bc
  414e7e:	enter  0x475,0xf0
  414e82:	sub    eax,0xf9f9d9c8
  414e87:	int    0x6e
  414e89:	mov    bh,0x7b
  414e8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e8c:	push   esp
  414e8d:	cs jae 0x414f09
  414e90:	jns    0x414e60
  414e92:	inc    edx
  414e93:	jno    0x414ea6
  414e95:	retf   
  414e96:	mov    dl,0x8
  414e98:	add    eax,0x6d6c6c02
  414e9d:	add    DWORD PTR [edx],eax
  414e9f:	call   0x1026:0x5a54b1a6
  414ea6:	or     al,0x50
  414ea8:	scas   eax,DWORD PTR es:[edi]
  414ea9:	aad    0xb0
  414eab:	dec    esp
  414eac:	xchg   ebx,eax
  414ead:	shl    dl,cl
  414eaf:	xor    bl,ch
  414eb1:	jbe    0x414e4e
  414eb3:	inc    edi
  414eb4:	(bad)  
  414eb5:	push   ds
  414eb6:	xchg   edx,eax
  414eb7:	dec    esi
  414eb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414eb9:	sub    DWORD PTR [edi+0x1609232c],ebp
  414ebf:	(bad)  
  414ec0:	mov    eax,0x976cfb45
  414ec5:	aad    0x97
  414ec7:	pop    esi
  414ec8:	sar    DWORD PTR [ebx+esi*8-0x60b90bfd],0x64
  414ed0:	nop
  414ed1:	dec    ebp
  414ed2:	mov    eax,ds:0x95c65d1a
  414ed7:	pop    es
  414ed8:	sub    al,0x48
  414eda:	push   ebp
  414edb:	test   al,0xbe
  414edd:	shl    eax,0xf0
  414ee0:	dec    edi
  414ee1:	or     DWORD PTR [ebx+0x21d37c15],ebp
  414ee7:	(bad)  
  414ee8:	aam    0x98
  414eea:	xchg   ebp,eax
  414eeb:	rol    BYTE PTR [eax+edx*8-0x3a],1
  414eef:	ss cdq 
  414ef1:	inc    esi
  414ef2:	call   0x9360:0x33826e03
  414ef9:	jns    0x414f24
  414efb:	rcl    BYTE PTR [ebp+0x74],1
  414efe:	iret   
  414eff:	arpl   WORD PTR [esi],cx
  414f01:	or     al,ch
  414f03:	lods   eax,DWORD PTR ds:[esi]
  414f04:	jmp    0x85d01d6c
  414f09:	out    0x71,eax
  414f0b:	aaa    
  414f0c:	(bad)  
  414f0d:	pop    ss
  414f0e:	mov    ebp,0x820db407
  414f13:	lods   eax,DWORD PTR ds:[esi]
  414f14:	loopne 0x414f18
  414f16:	xor    eax,DWORD PTR [eax-0x2e]
  414f19:	jns    0x414f77
  414f1b:	push   ss
  414f1c:	inc    ecx
  414f1d:	nop
  414f1e:	inc    ecx
  414f1f:	xor    eax,0xd0c50ac1
  414f24:	and    esp,DWORD PTR ds:0xc84d91c6
  414f2a:	cmp    eax,0xcb34e1cb
  414f2f:	or     DWORD PTR [ebx],0xffffff83
  414f32:	fcom   st(2)
  414f34:	sbb    eax,0x726e3656
  414f39:	mov    al,0xf7
  414f3b:	test   BYTE PTR [ebx-0x329de26d],dh
  414f41:	add    DWORD PTR [edi],ebx
  414f43:	cli    
  414f44:	call   0xb8a60090
  414f49:	mov    eax,0x8d122738
  414f4e:	jno    0x414f4b
  414f50:	cdq    
  414f51:	cmp    ecx,DWORD PTR [esi+eax*1]
  414f54:	inc    ebx
  414f55:	push   ss
  414f56:	mov    cl,BYTE PTR [ebx+0x4243c68c]
  414f5c:	rcl    DWORD PTR [eax],0xeb
  414f5f:	jmp    0x414efc
  414f61:	inc    esp
  414f62:	mov    ds:0xb83e1e11,al
  414f67:	dec    edi
  414f68:	sub    bl,BYTE PTR [ebp+0x71cd9726]
  414f6e:	push   ecx
  414f6f:	cmp    eax,0x52891227
  414f74:	pop    eax
  414f75:	pop    eax
  414f76:	mov    al,ds:0x8b11efdf
  414f7b:	lds    edx,FWORD PTR [eax+0x55]
  414f7e:	sub    eax,0x3f4e9d35
  414f83:	add    al,0xfc
  414f85:	mov    bl,0xef
  414f87:	fcomp  QWORD PTR ds:0xae4767f1
  414f8d:	or     eax,0x9920b7c0
  414f92:	ins    BYTE PTR es:[edi],dx
  414f93:	not    BYTE PTR [ebx-0xb]
  414f96:	pop    edx
  414f97:	dec    ebp
  414f98:	sbb    DWORD PTR ds:0x5d3b7407,ecx
  414f9e:	rcr    BYTE PTR [ecx-0x738736f4],cl
  414fa4:	ret    
  414fa5:	ret    
  414fa6:	inc    ebx
  414fa7:	mov    dh,0xb6
  414fa9:	outs   dx,BYTE PTR ds:[esi]
  414faa:	adc    BYTE PTR [edx],cl
  414fac:	xchg   DWORD PTR [eax],edi
  414fae:	fcomp  st(3)
  414fb0:	and    ebx,DWORD PTR [edx]
  414fb2:	lea    esi,[ecx-0x36364e42]
  414fb8:	shl    DWORD PTR [ecx],1
  414fba:	cmc    
  414fbb:	inc    esi
  414fbc:	sbb    eax,0x94501441
  414fc1:	add    BYTE PTR [edx-0x44a68ed8],ah
  414fc7:	and    al,0xbf
  414fc9:	mov    al,0xc0
  414fcb:	lea    ebx,[ebx-0x7e2226c9]
  414fd1:	push   0x3c74ce3c
  414fd6:	and    bl,BYTE PTR [ecx]
  414fd8:	icebp  
  414fd9:	xchg   ebx,eax
  414fda:	mov    WORD PTR [edx],gs
  414fdc:	test   BYTE PTR [ebx],ah
  414fde:	inc    ecx
  414fdf:	fidivr WORD PTR [eax+0x63]
  414fe2:	xchg   DWORD PTR [esi+0x3b],eax
  414fe5:	inc    eax
  414fe6:	addr16 in eax,0x53
  414fe9:	in     al,0x3f
  414feb:	clc    
  414fec:	lahf   
  414fed:	rcr    DWORD PTR [edx+0x3b],1
  414ff0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ff1:	jae    0x414fac
  414ff3:	inc    edi
  414ff4:	cmp    DWORD PTR [ecx],esp
  414ff6:	mov    dl,0x14
  414ff8:	sbb    dh,BYTE PTR [edx]
  414ffa:	lods   eax,DWORD PTR ds:[esi]
  414ffb:	aas    
  414ffc:	rcl    edi,0x3d
  414fff:	inc    ebp
  415000:	mov    esp,0xfe706538
  415005:	add    BYTE PTR [ecx+0x3c],bh
  415008:	ror    edi,0x4
  41500b:	inc    ecx
  41500c:	xor    eax,0x32b326b1
  415011:	call   0xb4db:0xde380983
  415018:	push   ecx
  415019:	jbe    0x41508a
  41501b:	ja     0x414fbf
  41501d:	xor    ebp,DWORD PTR [ecx+0x701df9d8]
  415023:	inc    edi
  415024:	mov    DWORD PTR [ebx-0x2c34f82b],edi
  41502a:	jo     0x415010
  41502c:	adc    BYTE PTR [eax+0x35e5edb2],0x30
  415033:	cld    
  415034:	and    BYTE PTR [edx],ch
  415036:	xor    DWORD PTR [edi+edi*2],ecx
  415039:	add    dl,al
  41503b:	retf   
  41503c:	push   0x430712e1
  415041:	xor    DWORD PTR [ebx+0x7d391471],0xfadc293
  41504b:	rcl    ecx,cl
  41504d:	add    bl,BYTE PTR [esi+edx*2]
  415050:	sbb    ah,ah
  415052:	adc    ecx,DWORD PTR [ebx+0x78e42e2c]
  415058:	scas   al,BYTE PTR es:[edi]
  415059:	fbld   TBYTE PTR [esi]
  41505b:	sbb    al,0xf4
  41505d:	adc    esi,eax
  41505f:	mov    ebp,DWORD PTR [edi+esi*2-0x15]
  415063:	mov    BYTE PTR [esi-0x1d6addb7],dl
  415069:	mov    ds:0xe8e8e55a,al
  41506e:	mov    BYTE PTR [edx-0x53],bl
  415071:	(bad)  
  415072:	retf   
  415073:	das    
  415074:	mov    edi,0xa09e3c4c
  415079:	aad    0x6c
  41507b:	jae    0x4150f9
  41507d:	jl     0x414fff
  41507f:	loop   0x415078
  415081:	repz int3 
  415083:	fnstsw WORD PTR [ebx-0xe7fb5d8]
  415089:	js     0x4150cf
  41508b:	jno    0x415036
  41508d:	inc    esp
  41508e:	xor    bl,BYTE PTR [ecx-0x6cf1ebe0]
  415094:	into   
  415095:	or     BYTE PTR fs:[ebx+eax*4],al
  415099:	dec    eax
  41509a:	mov    dl,0x44
  41509c:	ss xchg edi,eax
  41509e:	arpl   WORD PTR [edx+ebx*1],di
  4150a1:	and    cl,BYTE PTR [edx-0x7366cde]
  4150a7:	repz pop esp
  4150a9:	sbb    eax,DWORD PTR [eax+0xdae496f]
  4150af:	shl    BYTE PTR [edi-0x2ab25e0],0x6c
  4150b6:	and    BYTE PTR [eax],bl
  4150b8:	inc    edx
  4150b9:	ror    DWORD PTR ds:0x7aa2cb2c,cl
  4150bf:	push   esi
  4150c0:	and    DWORD PTR [esi],ebx
  4150c2:	or     DWORD PTR [ecx],esi
  4150c4:	push   ds
  4150c5:	(bad)  
  4150c6:	cmp    DWORD PTR [ecx],edi
  4150c8:	bound  esi,QWORD PTR ds:[ebp+0x75]
  4150cc:	(bad)  
  4150cd:	shr    DWORD PTR [eax+0x44],1
  4150d0:	scas   eax,DWORD PTR es:[edi]
  4150d1:	xlat   BYTE PTR ds:[ebx]
  4150d2:	and    ebx,DWORD PTR [eax]
  4150d4:	or     al,0xe2
  4150d6:	repz int 0xd6
  4150d9:	add    dl,bh
  4150db:	cs cs mov eax,0x2c0bc2fb
  4150e2:	test   eax,0x4bb5ea25
  4150e7:	inc    esp
  4150e8:	push   ecx
  4150e9:	and    BYTE PTR [esp+ecx*1],dl
  4150ec:	mov    cl,0xbc
  4150ee:	mov    dl,0x46
  4150f0:	cmp    dl,BYTE PTR [ebx+0x5068d1a1]
  4150f6:	cmp    DWORD PTR ds:0xb0891225,edi
  4150fc:	push   esp
  4150fd:	and    ecx,DWORD PTR cs:[ecx]
  415100:	push   ss
  415101:	cmp    BYTE PTR [esi],0xa4
  415104:	ja     0x41517f
  415106:	les    ebp,FWORD PTR [ebp-0x2a56dd4b]
  41510c:	push   ebp
  41510d:	fisubr DWORD PTR [ecx-0x798b76d4]
  415113:	dec    edx
  415114:	stos   DWORD PTR es:[edi],eax
  415115:	retf   
  415116:	fchs   
  415118:	sbb    DWORD PTR [edx+0xf9930f9],esp
  41511e:	inc    esi
  41511f:	mov    ecx,0xf2e03d3c
  415124:	loopne 0x415157
  415126:	or     ecx,DWORD PTR [ecx]
  415128:	xor    ebp,0xb4df1c7c
  41512e:	int    0xb0
  415130:	jnp    0x41517a
  415132:	push   edx
  415133:	xor    al,0x69
  415135:	popf   
  415136:	sahf   
  415137:	xor    ch,dh
  415139:	pushf  
  41513a:	loop   0x415153
  41513c:	pop    es
  41513d:	inc    esp
  41513e:	adc    eax,0xc602108b
  415143:	inc    esp
  415144:	inc    ebp
  415145:	adc    cl,BYTE PTR [esp+ebp*1+0x7d]
  415149:	ret    0x3c78
  41514c:	jo     0x4151b5
  41514e:	adc    eax,0xe0828a28
  415153:	scas   al,BYTE PTR es:[edi]
  415154:	xor    dl,dh
  415156:	xor    ebx,DWORD PTR [esi+0xd4c4cea]
  41515c:	shl    edi,cl
  41515e:	daa    
  41515f:	pushf  
  415160:	pop    edi
  415161:	and    al,0x18
  415163:	xor    bl,BYTE PTR cs:[eax+0x393304c8]
  41516a:	jp     0x4151aa
  41516c:	aas    
  41516d:	sti    
  41516e:	addr16 arpl dx,bx
  415171:	shl    DWORD PTR [eax],cl
  415173:	test   eax,0xad2c5bd5
  415178:	mov    edi,0x90fab38f
  41517d:	mov    eax,ds:0x942d9329
  415182:	cdq    
  415183:	push   0x6
  415185:	push   0xfffffff5
  415187:	pushf  
  415188:	in     eax,0x8d
  41518a:	push   ebp
  41518b:	add    al,0x43
  41518d:	gs out 0x8f,eax
  415190:	(bad)  
  415191:	sub    eax,0x85076efd
  415196:	xor    DWORD PTR [edi-0x49e7e829],esi
  41519c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41519d:	je     0x4151da
  41519f:	inc    ebx
  4151a0:	push   es
  4151a1:	xchg   edx,eax
  4151a2:	dec    esp
  4151a3:	jno    0x41520e
  4151a5:	mov    DWORD PTR [edx+ebp*1-0x33],esp
  4151a9:	cli    
  4151aa:	mov    BYTE PTR [esi],0x8d
  4151ad:	inc    esi
  4151ae:	popf   
  4151af:	mov    ds:0x67e7df89,ax
  4151b5:	xor    bl,BYTE PTR [ecx-0x34444850]
  4151bb:	div    dh
  4151bd:	arpl   dx,sp
  4151bf:	icebp  
  4151c0:	add    al,0x2f
  4151c2:	mov    ebp,0xe7aa01f4
  4151c7:	push   ebp
  4151c8:	sub    ah,BYTE PTR [edi-0x5]
  4151cb:	in     al,0xb
  4151cd:	or     ebp,DWORD PTR [esi+ebp*2+0x6d]
  4151d1:	jno    0x415224
  4151d3:	lods   eax,DWORD PTR ds:[esi]
  4151d4:	shr    BYTE PTR [esi+esi*1+0x59],cl
  4151d8:	sub    dl,BYTE PTR [ebp+0xc9ab568]
  4151de:	cli    
  4151df:	jge    0x4151f3
  4151e1:	leave  
  4151e2:	and    al,0x95
  4151e4:	dec    edx
  4151e5:	add    eax,0xf4199659
  4151ea:	pop    es
  4151eb:	scas   eax,DWORD PTR es:[edi]
  4151ec:	(bad)  
  4151ed:	rcr    bh,cl
  4151ef:	jmp    ebp
  4151f1:	fmul   DWORD PTR [edi-0x1]
  4151f4:	in     al,0x5f
  4151f6:	mov    esi,0x89be034e
  4151fb:	pop    esp
  4151fc:	sbb    eax,DWORD PTR [eax-0x1c80dd91]
  415202:	out    0xfe,eax
  415204:	push   esi
  415205:	test   eax,0x94be6cd9
  41520a:	dec    esp
  41520b:	(bad)  
  41520c:	leave  
  41520d:	in     eax,0x72
  41520f:	mov    BYTE PTR [edx+0x40deb340],ah
  415215:	xchg   esp,eax
  415216:	fs (bad) 
  415219:	sbb    ch,ch
  41521b:	dec    esi
  41521c:	xchg   edi,eax
  41521d:	loop   0x415293
  41521f:	dec    edx
  415220:	ss fwait
  415222:	in     eax,0xe4
  415224:	in     al,0x84
  415226:	leave  
  415227:	je     0x4151eb
  415229:	jmp    0xa23:0xa1ba1ada
  415230:	add    ah,BYTE PTR [edx]
  415232:	add    bh,cl
  415234:	jl     0x4151d4
  415236:	pop    esp
  415237:	xchg   DWORD PTR ss:[ebx+ecx*4],esp
  41523b:	sbb    al,0x1d
  41523d:	pop    ds
  41523e:	xor    bl,BYTE PTR [ebp+0x62c5884c]
  415244:	sbb    BYTE PTR [esi-0x5b2244bf],al
  41524a:	xlat   BYTE PTR ds:[ebx]
  41524b:	in     eax,dx
  41524c:	nop
  41524d:	dec    edx
  41524e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41524f:	fcomp  st(4)
  415251:	mov    esp,0x84482081
  415256:	ret    0x621
  415259:	std    
  41525a:	add    DWORD PTR [esi+0x11a18165],edx
  415260:	or     ecx,DWORD PTR [edx-0x64]
  415263:	imul   DWORD PTR [ebx+0xc]
  415266:	jmp    0xcf12:0x742e7447
  41526d:	mov    ebp,0xbdcfbb8f
  415272:	int3   
  415273:	jno    0x415227
  415275:	dec    eax
  415276:	es mov bh,0xc0
  415279:	jo     0x4152ad
  41527b:	in     eax,0xc9
  41527d:	into   
  41527e:	add    ebp,DWORD PTR cs:[esi-0x4e]
  415282:	mov    ecx,0x7dfc4ebe
  415287:	xor    DWORD PTR [esi],ecx
  415289:	div    DWORD PTR [edi-0x3f]
  41528c:	xor    bl,BYTE PTR [ecx+0x2e]
  41528f:	adc    eax,0x470289f1
  415294:	inc    edi
  415295:	xchg   DWORD PTR [ebx+ecx*1],edx
  415298:	pop    ecx
  415299:	inc    edx
  41529a:	add    DWORD PTR [edi],edi
  41529c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41529d:	daa    
  41529e:	(bad)  
  41529f:	xor    al,0xeb
  4152a1:	xchg   edi,eax
  4152a2:	adc    al,0x16
  4152a4:	mov    ch,BYTE PTR [ebp*1-0x4a932dd3]
  4152ab:	cdq    
  4152ac:	dec    esi
  4152ad:	jne    0x4152c5
  4152af:	xchg   edi,eax
  4152b0:	xchg   esi,eax
  4152b1:	push   0xef6c0677
  4152b6:	push   ds
  4152b7:	adc    BYTE PTR [edi-0x5a],cl
  4152ba:	pop    eax
  4152bb:	pop    ebp
  4152bc:	pop    ebx
  4152bd:	arpl   WORD PTR [eax],di
  4152bf:	call   0x9b26:0x4a747070
  4152c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152c7:	pop    eax
  4152c8:	pop    eax
  4152c9:	and    al,0xbc
  4152cb:	ss pusha 
  4152cd:	shr    BYTE PTR [eax+esi*4-0x4c],cl
  4152d1:	mov    cl,0xc1
  4152d3:	jns    0x4152ba
  4152d5:	cwde   
  4152d6:	pop    es
  4152d7:	cmp    ecx,DWORD PTR [edi-0xed64b2f]
  4152dd:	dec    eax
  4152de:	cwde   
  4152df:	int    0x8d
  4152e1:	dec    ebp
  4152e2:	inc    edx
  4152e3:	loop   0x415279
  4152e5:	pop    eax
  4152e6:	inc    eax
  4152e7:	mov    al,ds:0xf8a29bdf
  4152ec:	std    
  4152ed:	adc    BYTE PTR [ebp+0x702fc851],cl
  4152f3:	jl     0x415369
  4152f5:	(bad)  
  4152f6:	out    dx,al
  4152f7:	into   
  4152f8:	adc    eax,DWORD PTR [esi]
  4152fa:	std    
  4152fb:	ds iret 
  4152fd:	mov    ebp,0x363645ef
  415302:	ss mov ecx,0xd0c4bcbc
  415308:	addr16 mov ds:0x728d,eax
  41530c:	stc    
  41530d:	sub    al,0xf1
  41530f:	inc    esp
  415310:	xchg   edx,eax
  415311:	dec    esp
  415312:	ss (bad) 
  415314:	xchg   edi,eax
  415315:	push   esp
  415317:	dec    ebx
  415318:	cwde   
  415319:	xchg   BYTE PTR [ecx+0x52a3e7cf],cl
  41531f:	cmp    DWORD PTR [ebx+0x6f],esp
  415322:	ja     0x4152bb
  415324:	sar    DWORD PTR [eax-0x3c],1
  415327:	repnz retf 0xcd0a
  41532b:	jp     0x4152ca
  41532d:	fstp   QWORD PTR [ebp-0x472193d9]
  415333:	sub    DWORD PTR [eax],0x1d1c9c0a
  415339:	xchg   ecx,eax
  41533a:	sub    ebp,DWORD PTR [eax+eiz*1]
  41533d:	mov    dl,BYTE PTR [edx]
  41533f:	std    
  415340:	pop    esi
  415341:	xchg   edi,eax
  415342:	inc    esp
  415343:	xor    cl,BYTE PTR [ecx]
  415345:	cmp    BYTE PTR [eax+0x8be6182],0xfc
  41534c:	(bad)  
  41534d:	mov    ebx,0xb77cff7d
  415352:	retf   
  415353:	mov    ch,0x1
  415355:	clc    
  415356:	adc    cl,BYTE PTR es:[eax]
  415359:	clc    
  41535a:	pop    edi
  41535b:	push   ds
  41535c:	or     al,0x7
  41535e:	test   eax,0x9622c5c5
  415363:	gs push edx
  415365:	enter  0x602f,0x99
  415369:	push   es
  41536a:	mov    DWORD PTR [esp+ebx*4+0x78],esp
  41536e:	and    cl,dh
  415370:	loope  0x415370
  415372:	add    DWORD PTR [edx+0x20],ecx
  415375:	inc    eax
  415376:	es fwait
  415378:	ret    
  415379:	add    dl,BYTE PTR [eiz*1-0x46ba6a00]
  415380:	push   esp
  415381:	adc    BYTE PTR es:[eax-0x18],dl
  415385:	or     eax,0x5d3b747a
  41538a:	adc    cl,cl
  41538c:	adc    al,0xf9
  41538e:	pop    esp
  41538f:	mov    ds,WORD PTR [edx-0x13]
  415392:	adc    ebx,eax
  415394:	inc    BYTE PTR [eax]
  415396:	inc    ecx
  415397:	adc    BYTE PTR [ecx+0x2c],bl
  41539a:	xchg   ebp,eax
  41539b:	dec    ecx
  41539c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41539d:	xor    ecx,DWORD PTR [edi+eax*1]
  4153a0:	add    ecx,DWORD PTR [ebx+ecx*8+0x24]
  4153a4:	adc    al,0x9
  4153a6:	mov    bl,0xb2
  4153a8:	mov    edx,0xa4953242
  4153ad:	fucomi st,st(6)
  4153af:	jb     0x4153a0
  4153b1:	ficomp WORD PTR [ebx]
  4153b3:	add    BYTE PTR [eax-0x46],ch
  4153b6:	dec    esi
  4153b7:	and    dl,BYTE PTR [ecx+0x30ca9524]
  4153bd:	aad    0x26
  4153bf:	pop    eax
  4153c0:	push   ss
  4153c1:	mov    WORD PTR [esi+0x274b4403],es
  4153c7:	in     al,dx
  4153c8:	xor    edx,DWORD PTR [ecx]
  4153ca:	xor    al,0x8d
  4153cc:	pop    esi
  4153cd:	std    
  4153ce:	test   cl,dl
  4153d0:	jo     0x415416
  4153d2:	sub    ecx,DWORD PTR [eax]
  4153d4:	iret   
  4153d5:	lods   al,BYTE PTR ds:[esi]
  4153d6:	jg     0x415370
  4153d8:	test   al,0x6f
  4153da:	sbb    eax,0xa2c58801
  4153df:	cld    
  4153e0:	mov    ebx,0xc712f93f
  4153e5:	(bad)  
  4153e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153e7:	aam    0x6a
  4153e9:	sub    eax,0xfe1f23e
  4153ee:	icebp  
  4153ef:	int3   
  4153f0:	repz pop ds
  4153f2:	in     al,0xb2
  4153f4:	push   esi
  4153f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153f6:	push   eax
  4153f7:	enter  0x5971,0x6b
  4153fb:	repnz pusha 
  4153fd:	sti    
  4153fe:	push   ds
  4153ff:	adc    edx,DWORD PTR [ebp-0x3b]
  415402:	adc    BYTE PTR [edx-0x4c2300c4],al
  415408:	les    edx,FWORD PTR [ebx+0x1f3e7c69]
  41540e:	add    ebp,eax
  415410:	iret   
  415411:	loope  0x415401
  415413:	adc    ebx,edx
  415415:	aad    0x23
  415417:	(bad)  
  415418:	in     eax,dx
  415419:	or     esi,DWORD PTR [esi]
  41541b:	xchg   edi,eax
  41541c:	xor    ah,BYTE PTR [ebx+esi*4+0x4aa24261]
  415423:	fsub   DWORD PTR [edi-0x4fd3681d]
  415429:	xor    al,0x22
  41542b:	loope  0x41543d
  41542d:	mov    ds:0x3b395220,al
  415432:	jecxz  0x415415
  415434:	ret    
  415435:	pop    es
  415436:	add    al,0x2
  415438:	add    DWORD PTR [esi+0x57],edx
  41543b:	push   edi
  41543c:	jns    0x41543d
  41543e:	sti    
  41543f:	fisttp WORD PTR [edi-0x51]
  415442:	fbld   TBYTE PTR [edi+0x79]
  415445:	jns    0x4153e0
  415447:	mov    ebp,0x9d3a1ddd
  41544c:	push   ss
  41544d:	ds lahf 
  41544f:	sub    BYTE PTR [esi-0x63a3a395],0xf3
  415456:	call   0xd163581c
  41545b:	sub    BYTE PTR [ebx],bl
  41545d:	sbb    ebx,DWORD PTR [ebx+0x5fe7ddc]
  415463:	aam    0xa9
  415465:	mov    ch,BYTE PTR [eax]
  415467:	or     al,BYTE PTR [ebx+eiz*8+0x31]
  41546b:	adc    BYTE PTR [esi+ebp*2],al
  41546e:	fistp  QWORD PTR [ecx-0x7a]
  415471:	inc    esi
  415472:	mov    ds:0x21dbb74e,eax
  415477:	cdq    
  415478:	dec    esp
  415479:	shr    ebp,cl
  41547b:	mov    ah,0x39
  41547d:	cmp    DWORD PTR [esi],edi
  41547f:	inc    esi
  415480:	xlat   BYTE PTR ds:[ebx]
  415481:	jne    0x415449
  415483:	jecxz  0x4154b6
  415485:	int    0x46
  415487:	cmp    esi,0xffffffa0
  41548a:	dec    edi
  41548b:	sbb    BYTE PTR fs:[ebp-0x75dd9327],ah
  415492:	add    bl,cl
  415494:	pop    esp
  415495:	push   ds
  415496:	shl    DWORD PTR [eax],cl
  415498:	imul   esi,DWORD PTR [ebx+ebx*8+0xdae59f],0xaeb9537c
  4154a3:	add    bh,BYTE PTR [ebx+edx*1+0x79]
  4154a7:	out    0xb9,al
  4154a9:	idiv   ebp
  4154ab:	aad    0xf1
  4154ad:	fs cld 
  4154af:	pop    esp
  4154b0:	cmp    al,0x9e
  4154b2:	and    BYTE PTR [edx+ecx*4],dl
  4154b5:	mov    al,ds:0x952ca74e
  4154ba:	dec    ebx
  4154bb:	enter  0x48a2,0x28
  4154bf:	adc    al,0x26
  4154c1:	xchg   ebp,eax
  4154c2:	sahf   
  4154c3:	dec    ebp
  4154c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154c5:	mov    dh,0x4c
  4154c7:	mov    edi,DWORD PTR [eax+0x3c]
  4154ca:	dec    esi
  4154cb:	sub    dl,BYTE PTR [ebp-0x5ea5431e]
  4154d1:	xlat   BYTE PTR ds:[ebx]
  4154d2:	jmp    0x415465
  4154d4:	int    0x66
  4154d6:	rcl    DWORD PTR [ebp+ebx*4-0x7d],1
  4154da:	std    
  4154db:	jge    0x4154e3
  4154dd:	std    
  4154de:	add    DWORD PTR [ecx+0x30d30060],eax
  4154e4:	sbb    ah,dh
  4154e6:	sti    
  4154e7:	sub    BYTE PTR [edx+0x26e6c6c2],cl
  4154ed:	mov    DWORD PTR [eax-0x74],edi
  4154f0:	je     0x415518
  4154f2:	dec    ebx
  4154f3:	and    BYTE PTR [eax],dl
  4154f5:	loopne 0x4154b3
  4154f7:	jb     0x4154bf
  4154f9:	in     eax,0xc5
  4154fb:	add    eax,0x6980204a
  415500:	call   0x43c6:0x4c6b2ed4
  415507:	inc    edx
  415508:	mov    eax,ds:0x1b9b1b10
  41550d:	test   BYTE PTR [edx+0x61],al
  415510:	or     al,BYTE PTR [ebp-0x678f1ede]
  415516:	aaa    
  415517:	fistp  QWORD PTR [eax-0x7d]
  41551a:	cmp    ebp,0x7d
  41551d:	ror    DWORD PTR es:[ecx],cl
  415520:	sar    DWORD PTR [eax+0x1c],1
  415523:	dec    ecx
  415524:	xchg   edx,eax
  415525:	mov    al,0x2c
  415527:	xchg   ebx,eax
  415528:	loop   0x4154fc
  41552a:	and    ah,BYTE PTR [esi+0x54ad509]
  415530:	push   ebp
  415531:	push   ebp
  415532:	adc    DWORD PTR ds:0xcdbb6e99,esp
  415538:	pusha  
  415539:	shl    BYTE PTR [ebx],1
  41553b:	adc    al,0xa
  41553d:	mov    dl,0x58
  41553f:	pop    esp
  415540:	inc    eax
  415541:	shl    BYTE PTR [edi+edx*8-0x7974ec93],0x19
  415549:	or     eax,0x9e5c5c06
  41554e:	and    ecx,DWORD PTR [edx]
  415550:	add    ch,cl
  415552:	push   esp
  415553:	xchg   edx,eax
  415554:	pop    eax
  415555:	xor    al,0x4c
  415557:	mov    ds:0xa75344d1,eax
  41555c:	or     BYTE PTR [edx+0x623c68c8],al
  415562:	rcr    BYTE PTR [edi],1
  415564:	push   eax
  415565:	sub    dl,BYTE PTR [edi+0x1cfdf9f0]
  41556b:	sbb    eax,0xbbb3b11d
  415570:	mov    esp,DWORD PTR [esi+0x19d3a469]
  415576:	push   edx
  415577:	test   eax,0x654b8b24
  41557c:	repnz test DWORD PTR [edi+ebp*2],edi
  415580:	mov    esi,0xe7e73afe
  415585:	out    0xe8,eax
  415587:	xchg   cl,al
  415589:	(bad)  
  41558a:	(bad)  
  41558b:	push   ss
  41558c:	mov    dl,0x2c
  41558e:	shr    edi,1
  415590:	div    DWORD PTR [ecx]
  415592:	dec    ebp
  415593:	or     ecx,DWORD PTR [ebp-0x29]
  415596:	shl    DWORD PTR ds:0xd8df59d,1
  41559c:	mov    dl,0x99
  41559e:	or     al,0xf
  4155a0:	out    dx,al
  4155a1:	fbld   TBYTE PTR [edi+0x4a23a8de]
  4155a7:	and    ah,BYTE PTR [ebp-0x6868cd0e]
  4155ad:	pop    ss
  4155ae:	push   esp
  4155af:	sub    edx,DWORD PTR ds:0xb16962c0
  4155b5:	inc    esp
  4155b6:	cmp    BYTE PTR [edx],dl
  4155b8:	es sbb al,0x89
  4155bb:	shr    bh,cl
  4155bd:	cmc    
  4155be:	adc    DWORD PTR [ecx+eax*4],eax
  4155c1:	cmc    
  4155c2:	lea    ecx,ds:0x8718d122
  4155c8:	pop    es
  4155c9:	sti    
  4155ca:	inc    esp
  4155cb:	mov    ds:0x57565631,al
  4155d0:	cmp    DWORD PTR ds:0x4d34c13d,edi
  4155d6:	ss mov bh,0x6e
  4155d9:	shr    BYTE PTR [esi+esi*1+0x8],1
  4155dd:	sub    ah,BYTE PTR [ecx]
  4155df:	mov    dl,0xd9
  4155e1:	sbb    al,0x2
  4155e3:	push   eax
  4155e4:	stos   DWORD PTR es:[edi],eax
  4155e5:	aad    0xc2
  4155e7:	lahf   
  4155e8:	cli    
  4155e9:	in     al,dx
  4155ea:	lahf   
  4155eb:	sti    
  4155ec:	mov    ch,0xff
  4155ee:	out    dx,eax
  4155ef:	ud0    ebp,DWORD PTR [ebp-0xfd0f207]
  4155f6:	idiv   DWORD PTR [eax+0x6f801b5c]
  4155fc:	and    BYTE PTR [edi-0x8],bl
  4155ff:	mov    ecx,0xb249885f
  415604:	cld    
  415605:	mov    bh,0xc
  415607:	ret    
  415608:	dec    eax
  415609:	jmp    0xfb87:0xf8f3369a
  415610:	xchg   esp,eax
  415611:	dec    ebx
  415612:	dec    ebx
  415613:	add    al,0x43
  415615:	inc    ecx
  415616:	mov    cs,WORD PTR [edi+0x1224498f]
  41561c:	(bad)
  415620:	mov    bh,0x1f
  415622:	xor    DWORD PTR [ebp+0x55],edx
  415625:	mov    dl,0xb9
  415627:	sbb    al,0xd5
  415629:	push   0xffffff85
  41562b:	mov    ecx,DWORD PTR [ebx+0x1261a62a]
  415631:	or     BYTE PTR [ecx+ebp*8],al
  415634:	idiv   BYTE PTR [edx-0x359c39b4]
  41563a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41563b:	mov    cl,BYTE PTR gs:[ebx-0x2df4d3bb]
  415642:	cdq    
  415643:	sub    al,0x9a
  415645:	stos   BYTE PTR es:[edi],al
  415646:	xor    bl,BYTE PTR [eax]
  415648:	or     al,0x9
  41564a:	xchg   ebx,eax
  41564c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41564d:	rcr    BYTE PTR [ecx],cl
  41564f:	div    BYTE PTR [edi-0x9]
  415652:	mov    eax,0x8f18d7ac
  415657:	xchg   BYTE PTR [esp+edx*1],ch
  41565a:	or     al,BYTE PTR [edx+eiz*4+0x51]
  41565e:	add    al,0x41
  415660:	and    BYTE PTR [ebp+0x169a62cd],bl
  415666:	(bad)  [esi+0x7]
  415669:	fldenv [edi]
  41566b:	jecxz  0x415604
  41566d:	jge    0x41560b
  41566f:	pushf  
  415670:	sahf   
  415671:	shr    bl,1
  415673:	jne    0x4156a6
  415675:	or     al,0x83
  415677:	pop    ebx
  415678:	mov    bh,0x6e
  41567a:	xchg   edx,eax
  41567b:	int    0x64
  41567d:	dec    ecx
  41567e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41567f:	shr    BYTE PTR [edi+edx*4],cl
  415682:	dec    edx
  415683:	pushf  
  415684:	push   esi
  415685:	into   
  415686:	js     0x415678
  415688:	loopne 0x41568b
  41568a:	lea    esp,[esi-0x75]
  41568d:	pop    eax
  41568e:	xor    al,0xca
  415690:	fcmovu st,st(2)
  415692:	sbb    al,BYTE PTR [ecx-0x72326fa0]
  415698:	xor    eax,0xcde45124
  41569d:	jnp    0x415696
  41569f:	(bad)  
  4156a1:	(bad)  [ebx+0x32]
  4156a4:	cdq    
  4156a5:	mov    dl,0x50
  4156a7:	pop    esp
  4156a8:	and    BYTE PTR [ebx+0x264c934e],dl
  4156ae:	pop    ecx
  4156af:	pop    esi
  4156b0:	cs jae 0x41572b
  4156b3:	js     0x415679
  4156b5:	add    DWORD PTR [edi-0x31a956f1],0x49
  4156bc:	xor    ch,BYTE PTR [si-0x54]
  4156c0:	scas   eax,DWORD PTR es:[edi]
  4156c1:	adc    cl,BYTE PTR [ebx+0x5b5f58c5]
  4156c7:	inc    ebp
  4156c8:	xlat   BYTE PTR ds:[ebx]
  4156c9:	jne    0x415689
  4156cb:	repnz in eax,0xd7
  4156ce:	jmp    0x653a50e2
  4156d3:	pop    ds
  4156d4:	mov    bh,0x6e
  4156d6:	fld    QWORD PTR [eax]
  4156d8:	inc    ecx
  4156d9:	inc    esp
  4156da:	adc    al,0x25
  4156dc:	inc    esp
  4156dd:	inc    ecx
  4156de:	mov    al,ds:0x1c336edd
  4156e3:	push   cs
  4156e4:	sub    DWORD PTR [esi],edx
  4156e6:	pop    ss
  4156e7:	xchg   ecx,eax
  4156e8:	mov    DWORD PTR gs:[ebp+0x79d84f27],ebx
  4156ef:	mov    dl,0x8b
  4156f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156f2:	test   eax,0x20dd6d6c
  4156f7:	adc    DWORD PTR [edi+0x10],ecx
  4156fa:	(bad)  
  4156fb:	lds    edx,FWORD PTR [eax]
  4156fd:	add    al,0x81
  4156ff:	inc    esi
  415700:	lods   eax,DWORD PTR ds:[esi]
  415701:	mov    fs,WORD PTR [esi+0x6fadac69]
  415707:	xor    BYTE PTR [ecx-0xf0b87b4],bl
  41570d:	ds int 0x46
  415710:	adc    DWORD PTR [edx+0x3e39495d],0x3c
  415717:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415718:	(bad)  [ecx-0x6d]
  41571b:	int    0xce
  41571d:	ds xchg edi,eax
  41571f:	xor    BYTE PTR [ebx],al
  415721:	test   DWORD PTR [eax],0x53a44286
  415727:	imul   eax,edx,0xd1a330e1
  41572d:	mov    BYTE PTR [edx+esi*1+0x45],dl
  415731:	sub    al,0x11
  415733:	(bad)  
  415734:	aam    0x75
  415736:	ret    0x30e1
  415739:	push   ss
  41573a:	push   ss
  41573b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41573c:	imul   edx,DWORD PTR [edx-0x53],0xdccf5354
  415743:	mov    esi,0xf6fd7ff3
  415748:	push   ebx
  41574a:	das    
  41574b:	push   0xffffffef
  41574d:	idiv   BYTE PTR [ebp-0xc]
  415750:	(bad)  [edi+edx*8]
  415753:	sub    eax,eax
  415755:	aaa    
  415756:	nop
  415757:	jl     0x41577a
  415759:	jg     0x415712
  41575b:	jp     0x4157bb
  41575d:	pop    ebx
  41575e:	dec    ecx
  41575f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415760:	xor    ebx,DWORD PTR [edi+edx*2+0x3b76e8cf]
  415767:	dec    esp
  415768:	daa    
  415769:	adc    ebp,DWORD PTR [edx-0xd1af52b]
  41576f:	xor    cl,ch
  415771:	inc    esi
  415772:	add    ebx,DWORD PTR [ecx+0x12]
  415775:	xchg   ecx,eax
  415776:	inc    esp
  415777:	adc    DWORD PTR [ebp+0x33],ebx
  41577a:	cmp    BYTE PTR [edi],bh
  41577c:	aas    
  41577d:	daa    
  41577e:	adc    al,0xa
  415780:	adc    cl,BYTE PTR [ebx-0x244b173b]
  415786:	je     0x415803
  415788:	cmp    eax,0x85badc6e
  41578d:	in     al,dx
  41578e:	xchg   ebx,eax
  41578f:	push   0xba681bd4
  415794:	xchg   BYTE PTR [esi+0x19326419],ch
  41579a:	jb     0x415721
  41579c:	add    eax,0x6c2bcfce
  4157a1:	aas    
  4157a2:	jp     0x4157e4
  4157a4:	xor    al,0x96
  4157a6:	pusha  
  4157a7:	ins    DWORD PTR es:[edi],dx
  4157a8:	jne    0x415737
  4157aa:	dec    eax
  4157ab:	sub    al,0x42
  4157ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157ae:	rol    DWORD PTR [ebx+ecx*8],cl
  4157b1:	inc    edx
  4157b2:	push   ecx
  4157b3:	add    al,BYTE PTR [edx+eiz*1+0x31]
  4157b7:	loop   0x4157aa
  4157b9:	add    al,0xc9
  4157bb:	push   esp
  4157bc:	and    BYTE PTR [ebx-0x6189dc3d],0x3c
  4157c3:	inc    ecx
  4157c4:	xchg   edx,eax
  4157c5:	and    eax,0xb26f3736
  4157ca:	mov    cl,0xb9
  4157cc:	mov    DWORD PTR [ecx+0x17142c1b],esp
  4157d2:	call   0x278e124b
  4157d7:	adc    edi,DWORD PTR [edx-0x43]
  4157da:	rcl    DWORD PTR ds:[eax+0x10],0x2c
  4157df:	nop
  4157e0:	and    al,0x9
  4157e2:	pop    ebp
  4157e3:	rcl    DWORD PTR [eax+0x30509124],cl
  4157e9:	inc    eax
  4157ea:	xor    al,0x1a
  4157ec:	and    eax,0x9ba10a12
  4157f1:	es mov ebp,0x64c9975e
  4157f7:	int3   
  4157f8:	jo     0x415832
  4157fa:	and    bl,BYTE PTR [esi+ecx*1]
  4157fd:	and    DWORD PTR [ecx+0x12],ecx
  415800:	loope  0x415872
  415802:	cwde   
  415803:	jo     0x415835
  415805:	mov    BYTE PTR [ecx+0x1a],ah
  415808:	push   0xecb209d3
  41580d:	ret    
  41580e:	xor    al,0xd
  415810:	je     0x41585f
  415812:	cmp    BYTE PTR [bp+si],bl
  415815:	rcr    DWORD PTR [edi],1
  415817:	or     al,0xd0
  415819:	push   esp
  41581a:	xchg   ebp,eax
  41581b:	fs xor cl,cl
  41581e:	jo     0x415854
  415820:	and    al,0x57
  415822:	enter  0x7a73,0x7a
  415826:	(bad)  
  415827:	into   
  415828:	into   
  415829:	cs stos BYTE PTR es:[edi],al
  41582b:	stos   BYTE PTR es:[edi],al
  41582c:	mov    dl,0xb9
  41582e:	mov    ch,0xc9
  415830:	mov    bl,0x77
  415832:	out    dx,eax
  415833:	xchg   edx,eax
  415834:	int    0xe5
  415836:	enter  0x7365,0x4c
  41583a:	es xchg ebx,eax
  41583c:	pop    ecx
  41583d:	mov    gs,WORD PTR [edi+0x1a]
  415840:	sbb    BYTE PTR [esi-0x56b15572],al
  415846:	push   esi
  415847:	sub    cl,BYTE PTR [esi+eax*8+0x34a95263]
  41584e:	ja     0x41583e
  415850:	fisub  WORD PTR [ebp+0x79497976]
  415856:	jns    0x4157f1
  415858:	push   0xffffffb5
  41585a:	and    BYTE PTR [esi+0x913c469],0x2c
  415861:	retf   
  415862:	in     al,0xf1
  415864:	mov    ds:0x1e1f1c47,eax
  415869:	xchg   ecx,eax
  41586a:	dec    edx
  41586b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41586c:	(bad)  
  41586e:	fsub   QWORD PTR [edx-0x9]
  415871:	leave  
  415872:	adc    ebx,DWORD PTR [edx]
  415874:	int    0x6
  415876:	jmp    0x415863
  415878:	sbb    ebp,DWORD PTR [esi+ebp*1]
  41587b:	cs push edx
  41587d:	lods   eax,DWORD PTR ds:[esi]
  41587e:	push   esp
  41587f:	imul   esi,DWORD PTR [edi+0x2eaeac9a],0xe8776ad3
  415889:	jne    0x415846
  41588b:	in     al,0xb
  41588d:	or     ebx,DWORD PTR [edi+ebx*1]
  415890:	sbb    eax,0x4da69a62
  415895:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415896:	adc    dl,BYTE PTR [ebp+0x31f870c1]
  41589c:	loopne 0x41589c
  41589e:	mov    ebx,0x377d1f7d
  4158a3:	retf   
  4158a4:	mov    ch,0x1
  4158a6:	clc    
  4158a7:	push   es
  4158a8:	mov    dl,0x7f
  4158aa:	jo     0x4158a4
  4158ac:	stc    
  4158ad:	js     0x4158eb
  4158af:	sub    BYTE PTR cs:[edx-0x80],cl
  4158b3:	jo     0x4158ed
  4158b5:	inc    edx
  4158b6:	ss fwait
  4158b8:	addr16 xor al,0x1c
  4158bb:	shr    cl,cl
  4158bd:	mov    ah,0x59
  4158bf:	pop    ecx
  4158c0:	pop    ecx
  4158c1:	and    eax,0x6ad18f16
  4158c6:	mov    dh,0x59
  4158c8:	pop    edx
  4158c9:	sub    dl,BYTE PTR [ecx+0x3d3817cb]
  4158cf:	ds ret 0x57ef
  4158d3:	pop    eax
  4158d4:	pop    edx
  4158d5:	sub    ah,BYTE PTR [ebx-0x27]
  4158d8:	and    eax,DWORD PTR [ecx-0x1ec17c7a]
  4158de:	jo     0x415864
  4158e0:	push   0xefcf8624
  4158e5:	arpl   WORD PTR [edi+0x6f],di
  4158e8:	(bad)  
  4158e9:	shr    DWORD PTR [eax-0x78],1
  4158ec:	and    al,0xcb
  4158ee:	call   0x4a69df9d
  4158f3:	hlt    
  4158f4:	mov    edx,0xe2c12c6d
  4158f9:	imul   ch
  4158fb:	cmp    eax,DWORD PTR [edx+eax*4+0x891c221]
  415902:	std    
  415903:	rol    DWORD PTR [eax+0x6e8dbb4e],0xe8
  41590a:	sub    BYTE PTR [esi+0x1f],bh
  41590d:	mov    edx,0x265a63ae
  415912:	jecxz  0x415912
  415914:	or     BYTE PTR [edi-0x6f5e981e],bh
  41591a:	inc    edi
  41591b:	push   ecx
  41591c:	adc    al,0xb2
  41591e:	fldcw  WORD PTR [ebp*8+0x5fd79b56]
  415925:	jg     0x41592a
  415927:	push   ebp
  415928:	popf   
  415929:	xor    bl,BYTE PTR [ebp-0x661987b2]
  41592f:	cmp    ecx,DWORD PTR [eax-0x6e]
  415932:	test   BYTE PTR [eax],ah
  415934:	inc    eax
  415935:	cmp    al,0x96
  415937:	loopne 0x4158fa
  415939:	mov    ds:0x1e1d1cc7,eax
  41593e:	xchg   edx,eax
  41593f:	dec    ecx
  415940:	addr16 pop eax
  415942:	pop    ebx
  415943:	pop    ebx
  415944:	jecxz  0x41591c
  415946:	lods   eax,DWORD PTR ds:[esi]
  415947:	pop    ebx
  415948:	pushf  
  415949:	popf   
  41594a:	push   ebp
  41594b:	pop    eax
  41594c:	pop    edi
  41594d:	pop    edi
  41594e:	mov    ds:0x78706f5e,eax
  415953:	je     0x415921
  415955:	js     0x41598b
  415957:	bound  esp,QWORD PTR [ebx+0x63]
  41595a:	popf   
  41595b:	test   DWORD PTR [ebp+0x13a6ba02],eax
  415961:	dec    edi
  415962:	les    ecx,FWORD PTR [ecx+0x24]
  415965:	loop   0x415923
  415967:	jns    0x415958
  415969:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41596c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41596d:	inc    esp
  41596e:	jecxz  0x4159a1
  415970:	pop    esi
  415971:	js     0x415954
  415973:	add    eax,0x25f97a5e
  415978:	mov    edx,0x4b8b1edd
  41597d:	inc    ebp
  41597e:	mov    dh,0x1f
  415980:	outs   dx,DWORD PTR ds:[esi]
  415981:	push   ebx
  415982:	mov    ebx,0x743744bc
  415987:	(bad)  
  415988:	(bad)  
  415989:	xlat   BYTE PTR ds:[ebx]
  41598a:	or     DWORD PTR [edx+eax*1],eax
  41598d:	sbb    BYTE PTR [edx+0x663278ce],bh
  415993:	stos   BYTE PTR es:[edi],al
  415994:	stos   BYTE PTR es:[edi],al
  415995:	adc    al,0x8a
  415997:	mov    ebp,DWORD PTR [eax-0x66]
  41599a:	retf   0xdbad
  41599d:	mov    bh,0x39
  41599f:	cmp    bh,BYTE PTR [edx]
  4159a1:	addr16 sbb cx,WORD PTR [di-0x2d]
  4159a7:	leave  
  4159a8:	in     eax,0xf2
  4159aa:	test   bl,al
  4159ac:	and    DWORD PTR [ebx+edx*8],ecx
  4159af:	mov    al,ds:0xa21af5e
  4159b4:	add    bl,BYTE PTR [ebx+0x2648379b]
  4159ba:	push   ebx
  4159bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4159bc:	push   edx
  4159bd:	dec    ecx
  4159be:	div    BYTE PTR [esi+0x77]
  4159c1:	adc    DWORD PTR ds:0xca2c6891,esp
  4159c7:	jmp    0x7488b95
  4159cc:	sti    
  4159cd:	sbb    BYTE PTR [esi+0x5266b989],al
  4159d3:	stos   DWORD PTR es:[edi],eax
  4159d4:	pop    ebp
  4159d5:	mov    dl,0xf3
  4159d7:	fs fwait
  4159d9:	in     eax,0xd5
  4159db:	xor    eax,0xbb28d1a2
  4159e0:	mov    ebx,0x2952a43b
  4159e5:	add    al,BYTE PTR [ecx]
  4159e7:	test   DWORD PTR [edx-0x4b],ebp
  4159ea:	dec    edx
  4159eb:	and    bl,BYTE PTR [esi+0x121c3060]
  4159f1:	push   cs
  4159f2:	test   eax,ebp
  4159f4:	jbe    0xf5bf6199
  4159fa:	fnstsw WORD PTR [ebp-0x1a444175]
  415a00:	cmp    al,BYTE PTR ds:0xb3f23af8
  415a06:	aas    
  415a07:	dec    DWORD PTR [ebx]
  415a09:	push   edx
  415a0a:	stos   DWORD PTR es:[edi],eax
  415a0b:	aad    0xfe
  415a0d:	stc    
  415a0e:	xor    dh,BYTE PTR fs:[ebp-0x76d96698]
  415a15:	inc    esp
  415a16:	xor    BYTE PTR [eax+0x34],0x42
  415a1a:	and    bh,BYTE PTR [esi]
  415a1c:	or     ecx,ebx
  415a1e:	pop    ss
  415a1f:	pop    ss
  415a20:	dec    ebx
  415a21:	test   bl,al
  415a23:	popa   
  415a24:	push   esp
  415a25:	jne    0x4159f1
  415a27:	ret    0x9142
  415a2a:	je     0x415a56
  415a2c:	mov    DWORD PTR [edx],edx
  415a2e:	or     al,0xe1
  415a30:	idiv   ebx
  415a32:	xchg   ecx,eax
  415a33:	inc    esp
  415a34:	xchg   ecx,eax
  415a35:	inc    eax
  415a36:	xor    BYTE PTR [eax-0x4f],cl
  415a39:	pop    eax
  415a3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a3b:	fucomi st,st(3)
  415a3d:	jb     0x415abb
  415a3f:	js     0x4159c9
  415a41:	sub    BYTE PTR [eax],cl
  415a43:	test   dl,al
  415a45:	popa   
  415a46:	sub    ah,BYTE PTR [edi-0x59]
  415a49:	hlt    
  415a4a:	jp     0x415a89
  415a4c:	push   esp
  415a4d:	jne    0x415a19
  415a4f:	fcmovu st,st(2)
  415a51:	sbb    dh,BYTE PTR [edx+0x1a2003ec]
  415a57:	mov    DWORD PTR [edx],esp
  415a59:	dec    ecx
  415a5a:	xor    ah,BYTE PTR [esi+0x66cd9265]
  415a60:	xor    BYTE PTR [ebx*4-0x2de170b9],cl
  415a67:	in     eax,dx
  415a68:	je     0x415a7b
  415a6a:	add    al,0x28
  415a6c:	sub    eax,0x91451195
  415a71:	inc    esp
  415a72:	xor    al,BYTE PTR [ebp-0x4897fb5e]
  415a78:	fist   DWORD PTR [esi+ecx*8+0x2a]
  415a7c:	add    al,0x2
  415a7e:	inc    ecx
  415a7f:	xor    al,0x4d
  415a81:	jecxz  0x415a75
  415a83:	repnz adc cl,BYTE PTR [ebp-0x2d]
  415a87:	mov    ch,al
  415a89:	bound  ebp,QWORD PTR [edi+edx*4]
  415a8c:	dec    ebx
  415a8d:	enter  0x1f3e,0x51
  415a91:	sti    
  415a92:	jl     0x415b0b
  415a94:	jbe    0x415a8c
  415a96:	test   al,0xd7
  415a98:	jmp    0x415a26
  415a9a:	(bad)  
  415a9b:	adc    ebp,DWORD PTR [esi-0x22]
  415a9e:	mov    esp,0x25972e41
  415aa3:	push   ss
  415aa4:	lea    esi,[edx+0x1a31c850]
  415aaa:	(bad)  
  415aab:	jns    0x415aa9
  415aad:	call   0x9b9847c3
  415ab2:	dec    eax
  415ab3:	xor    al,0xca
  415ab5:	(bad)  
  415ab6:	out    0x6,al
  415ab8:	mov    dl,BYTE PTR [edx]
  415aba:	cwde   
  415abb:	jge    0x415a9b
  415abd:	push   eax
  415abe:	nop
  415abf:	mov    ebp,0x9d3a03fd
  415ac4:	push   cs
  415ac5:	mov    ds:0xb2b2b324,al
  415aca:	mov    WORD PTR [ecx+0x18],gs
  415acd:	je     0x415b09
  415acf:	ins    DWORD PTR es:[edi],dx
  415ad0:	fs pop ecx
  415ad2:	data16 cmp dl,BYTE PTR [ebp-0x67]
  415ad6:	dec    esp
  415ad7:	daa    
  415ad8:	shr    BYTE PTR fs:[ecx-0x4e],cl
  415adc:	stc    
  415add:	cmp    al,0x87
  415adf:	pop    es
  415ae0:	pop    es
  415ae1:	cmp    al,0x7e
  415ae3:	hlt    
  415ae4:	cwde   
  415ae5:	mov    ds:0x6654b941,ax
  415aeb:	mov    cl,0xb4
  415aed:	inc    esp
  415aee:	xor    bl,BYTE PTR [esi-0x2eb36ae0]
  415af4:	imul   esi,DWORD PTR [edi+0x12af3f39],0x2649070e
  415afe:	push   ebx
  415aff:	pushf  
  415b00:	popf   
  415b01:	sahf   
  415b02:	mov    cl,0xbd
  415b04:	std    
  415b05:	mov    cl,dh
  415b07:	push   0x5b8dd6c2
  415b0c:	sub    BYTE PTR [ecx],al
  415b0e:	aas    
  415b0f:	xchg   BYTE PTR [ecx-0x6fb0e1cd],ah
  415b15:	and    al,0x99
  415b17:	dec    eax
  415b18:	and    al,0xca
  415b1a:	in     eax,dx
  415b1b:	cmp    ecx,edi
  415b1d:	xor    al,ch
  415b1f:	idiv   DWORD PTR [ecx]
  415b21:	cmp    eax,0x6161633b
  415b26:	xor    DWORD PTR [eax+0x38],0x4f2793c4
  415b2d:	cwde   
  415b2e:	dec    esi
  415b2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b31:	push   ebx
  415b32:	imul   ebp,DWORD PTR [esi],0xaf392f2f
  415b38:	push   esi
  415b39:	mov    DWORD PTR [ebx+eiz*4+0xc],eax
  415b3d:	jp     0x415b9c
  415b3f:	sbb    cl,ch
  415b41:	es jmp 0x652af193
  415b47:	inc    edx
  415b48:	sub    BYTE PTR [edx+eax*8],bl
  415b4b:	out    dx,eax
  415b4c:	repz lds edi,FWORD PTR [edi-0x6602c11]
  415b53:	(bad)  
  415b54:	mov    edi,0x75fe6fff
  415b59:	call   FWORD PTR [ebp-0x42]
  415b5c:	popf   
  415b5d:	mov    esi,0xdae56b
  415b62:	jl     0x415b81
  415b64:	stc    
  415b65:	clc    
  415b66:	idiv   DWORD PTR [ebp-0x6]
  415b69:	out    0x65,al
  415b6b:	lods   eax,DWORD PTR ds:[esi]
  415b6c:	div    BYTE PTR [ebx+0x6e5850e1]
  415b72:	mov    bh,0x5b
  415b74:	xchg   esp,eax
  415b75:	retf   
  415b76:	sub    ebp,DWORD PTR [eax-0x3f9f7b16]
  415b7c:	iret   
  415b7d:	shl    BYTE PTR [edx+0x9],cl
  415b80:	dec    ebp
  415b81:	ror    DWORD PTR [eax],cl
  415b83:	push   es
  415b84:	add    esp,esp
  415b86:	jae    0x415b8d
  415b88:	je     0x415be7
  415b8a:	xor    bl,BYTE PTR [bx+di-0x74f0]
  415b8f:	inc    ebp
  415b90:	dec    ecx
  415b91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b92:	rcr    DWORD PTR [edi+ebx*1],cl
  415b95:	sbb    eax,0x925daf51
  415b9a:	dec    edx
  415b9b:	and    eax,0x9ca74e99
  415ba0:	popf   
  415ba1:	push   ebp
  415ba2:	call   0xa30655b6
  415ba7:	adc    edx,esp
  415ba9:	icebp  
  415baa:	add    al,0xfd
  415bac:	jle    0x415b8d
  415bae:	gs mov al,0x45
  415bb1:	and    dl,BYTE PTR [ecx]
  415bb3:	rcr    BYTE PTR [ecx-0x7d870ef4],cl
  415bb9:	mov    ebp,0x4f4e1dbd
  415bbe:	dec    esi
  415bbf:	add    al,dh
  415bc1:	stc    
  415bc2:	cld    
  415bc3:	mov    edi,es
  415bc5:	and    esp,DWORD PTR [esi]
  415bc7:	xchg   ebx,eax
  415bc8:	xor    DWORD PTR [ecx+0x71629c58],esi
  415bce:	xchg   ecx,eax
  415bcf:	pusha  
  415bd0:	xor    BYTE PTR [eax+0x22],cl
  415bd3:	xchg   ebp,eax
  415bd4:	es push ss
  415bd6:	mov    esi,ecx
  415bd8:	out    0x1b,al
  415bda:	outs   dx,DWORD PTR ds:[esi]
  415bdb:	jo     0x415c57
  415bdd:	jbe    0x415ba9
  415bdf:	push   0x5e5ca434
  415be4:	es xchg edi,eax
  415be6:	retf   
  415be7:	adc    cl,BYTE PTR [esi+eax*4]
  415bea:	sub    BYTE PTR [ebp+0x1d5bb44b],dl
  415bf0:	mov    dh,0xb7
  415bf2:	mov    bh,0x69
  415bf4:	xor    al,0xea
  415bf6:	dec    eax
  415bf7:	ds aas 
  415bf9:	add    DWORD PTR [ebp+0x61],eax
  415bfc:	xor    bl,BYTE PTR [ecx+0x8e7cf92]
  415c02:	test   DWORD PTR [edx+0x34],eax
  415c05:	pop    ebx
  415c06:	ins    DWORD PTR es:[edi],dx
  415c07:	push   cs
  415c08:	push   cs
  415c09:	push   cs
  415c0a:	nop
  415c0b:	and    al,0x19
  415c0d:	pop    ebp
  415c0e:	aaa    
  415c0f:	push   eax
  415c10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c11:	push   ebx
  415c12:	jl     0x415c52
  415c14:	pop    ds
  415c15:	stc    
  415c16:	ret    0x9a02
  415c19:	scas   al,BYTE PTR es:[edi]
  415c1a:	mov    cl,0xb7
  415c1c:	mov    bh,0x47
  415c1e:	mov    ds:0x3bf59cd9,eax
  415c23:	and    al,0x13
  415c25:	sbb    BYTE PTR [esi+0x375bcdce],al
  415c2b:	xor    DWORD PTR [ebp-0x7d],esi
  415c2e:	xlat   BYTE PTR ds:[ebx]
  415c2f:	fistp  QWORD PTR [eax-0x63]
  415c32:	mov    ds:0xc30c23a3,eax
  415c37:	fs jae 0x415cad
  415c3a:	xchg   ebx,eax
  415c3b:	cmp    al,BYTE PTR fs:[ebp+0x61]
  415c3f:	popa   
  415c40:	sbb    DWORD PTR [esi+ebp*1-0x3d],0xda6ded93
  415c48:	in     eax,dx
  415c49:	push   ss
  415c4a:	xchg   edx,eax
  415c4b:	sub    al,0x53
  415c4d:	pop    edx
  415c4e:	sub    dh,BYTE PTR [ebx]
  415c50:	push   ds
  415c51:	lea    edi,[eax]
  415c53:	cmp    al,0x3c
  415c55:	inc    eax
  415c56:	push   ebp
  415c57:	push   ebp
  415c58:	mov    ds:0x489138f1,al
  415c5d:	test   BYTE PTR [ebp-0x36adca2b],dl
  415c63:	adc    al,0xbb
  415c65:	cmp    edi,DWORD PTR [ebx]
  415c67:	or     al,0x6
  415c69:	add    eax,DWORD PTR [edx+0x58b12081]
  415c6f:	xchg   esp,eax
  415c70:	ret    
  415c71:	ret    
  415c72:	add    esi,esi
  415c74:	div    edi
  415c76:	mov    bh,al
  415c78:	arpl   WORD PTR [esp+ebp*4+0x28822ac],bp
  415c7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c80:	popa   
  415c81:	xor    BYTE PTR [esi],bl
  415c83:	vprotq ymm13,[edx*4+0x6142844a],xmm3
  415c8d:	into   
  415c8e:	dec    esi
  415c8f:	dec    esi
  415c90:	dec    ecx
  415c91:	and    al,0x13
  415c93:	lods   al,BYTE PTR ds:[esi]
  415c94:	outs   dx,DWORD PTR ds:[esi]
  415c95:	ins    BYTE PTR es:[edi],dx
  415c96:	jo     0x415d14
  415c98:	je     0x415c1e
  415c9a:	gs cdq 
  415c9c:	fdivr  QWORD PTR [eax-0x40816c87]
  415ca2:	(bad)  
  415ca3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ca4:	stos   BYTE PTR es:[edi],al
  415ca5:	lods   al,BYTE PTR ds:[esi]
  415ca6:	outs   dx,BYTE PTR ds:[esi]
  415ca7:	ins    BYTE PTR es:[edi],dx
  415ca8:	pusha  
  415ca9:	sbb    BYTE PTR [edx],bh
  415cab:	xchg   edx,eax
  415cac:	and    al,0x33
  415cae:	sahf   
  415caf:	mov    WORD PTR [ebx-0x53],es
  415cb2:	push   esi
  415cb3:	jmp    0x415c40
  415cb5:	jg     0x415cb1
  415cb7:	lds    edi,FWORD PTR [edi]
  415cb9:	jns    0x415caf
  415cbb:	fisttp WORD PTR cs:[esi-0x21]
  415cbf:	mov    ch,0x72
  415cc1:	popf   
  415cc2:	add    bh,BYTE PTR [ebp+ebx*1-0xf]
  415cc6:	leave  
  415cc7:	mov    esi,0x18a2494f
  415ccc:	cwde   
  415ccd:	stos   BYTE PTR es:[edi],al
  415cce:	push   ebx
  415ccf:	push   es
  415cd0:	std    
  415cd1:	add    DWORD PTR [ebp+0x5145177e],edi
  415cd7:	cmp    BYTE PTR [ebx],bh
  415cd9:	cmp    eax,0x645850a5
  415cde:	cmp    al,0x1e
  415ce0:	mov    cl,0xb7
  415ce2:	mov    bl,0xc7
  415ce4:	(bad)  
  415ce5:	out    0x26,al
  415ce7:	loope  0x415d31
  415ce9:	test   bh,dl
  415ceb:	fistp  QWORD PTR [eax-0x63]
  415cee:	pop    eax
  415cef:	xor    al,0xc2
  415cf1:	(bad)  
  415cf2:	lea    ebx,[ebx+0x4c]
  415cf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415cf6:	adc    ebx,edx
  415cf8:	popf   
  415cf9:	push   cs
  415cfa:	mov    ebx,0xca94bbbb
  415cff:	gs adc dh,cl
  415d02:	cmp    BYTE PTR [ebp+0x1fc5074e],bl
  415d08:	and    BYTE PTR [ebp+0x124b22cd],dl
  415d0e:	rcr    DWORD PTR [eax-0x74],1
  415d11:	inc    esi
  415d12:	mov    ebp,0x22d3a741
  415d17:	sbb    al,0x8d
  415d19:	push   edx
  415d1a:	cs sub eax,0x194e9d33
  415d20:	pop    DWORD PTR [edi+0x54]
  415d23:	stos   DWORD PTR es:[edi],eax
  415d24:	adc    eax,0xdccb9796
  415d29:	mov    esi,0x46cd0cfd
  415d2e:	xor    DWORD PTR [esi+eiz*1+0x4d],0xfffffff5
  415d33:	mov    esp,0x4976ad4a
  415d38:	and    BYTE PTR [esi+eiz*4],dl
  415d3b:	nop
  415d3c:	das    
  415d3d:	adc    BYTE PTR [esi+eax*4],cl
  415d40:	adc    BYTE PTR [ecx+eax*1],al
  415d43:	pop    ebp
  415d44:	aaa    
  415d45:	lock sti 
  415d47:	jge    0x415d4d
  415d49:	add    cl,BYTE PTR [edx]
  415d4b:	dec    edx
  415d4c:	and    BYTE PTR [eax+0x3e],cl
  415d4f:	fwait
  415d50:	out    0xf1,al
  415d52:	div    BYTE PTR [esi]
  415d54:	aad    0xf3
  415d56:	jae    0x415d5c
  415d58:	mov    al,ds:0xb5b22850
  415d5d:	mov    cl,0x41
  415d5f:	and    al,0x12
  415d61:	and    eax,0xeaa38f19
  415d66:	sub    bl,BYTE PTR [edi-0x2]
  415d69:	retf   0x74eb
  415d6c:	cmp    ch,BYTE PTR [ebp+0x54]
  415d6f:	push   ebp
  415d70:	jecxz  0x415d35
  415d72:	pop    ds
  415d73:	jp     0x415d0a
  415d75:	push   0x6aae862c
  415d7a:	xor    ch,BYTE PTR fs:[ecx]
  415d7d:	fidivr WORD PTR [ebx+esi*8+0x1e]
  415d81:	xchg   DWORD PTR [edi+0x47],eax
  415d84:	pop    eax
  415d85:	pop    eax
  415d86:	adc    al,0xa
  415d88:	jns    0x415de0
  415d8a:	xchg   edi,eax
  415d8b:	retf   
  415d8c:	add    al,0x3
  415d8e:	inc    ecx
  415d8f:	xor    ch,cl
  415d91:	and    al,0xed
  415d93:	jbe    0x415d30
  415d95:	outs   dx,BYTE PTR ds:[esi]
  415d96:	mov    bh,0x8b
  415d98:	imul   ebx,DWORD PTR [edx+0x69869a68],0x5dbaf499
  415da2:	dec    esp
  415da3:	ret    
  415da4:	xor    bl,BYTE PTR fs:[esi+0x30e6cb90]
  415dab:	dec    ebp
  415dac:	mov    edx,DWORD PTR [edx-0x47]
  415daf:	int3   
  415db0:	js     0x415de4
  415db2:	loop   0x415d92
  415db4:	fwait
  415db5:	imul   DWORD PTR [eax+0x36]
  415db8:	jmp    0x7eaf:0xabce9aa8
  415dbf:	enter  0x2aee,0xb4
  415dc3:	xor    BYTE PTR [ebx+edx*4],cl
  415dc6:	je     0x415dee
  415dc8:	and    DWORD PTR [eax],0x8
  415dcb:	fdivr  QWORD PTR [edx-0x44896483]
  415dd1:	inc    ebp
  415dd2:	in     eax,0xf4
  415dd4:	adc    al,0xcd
  415dd6:	shl    BYTE PTR [ecx],1
  415dd8:	dec    ebp
  415dd9:	mov    edx,DWORD PTR [esi-0x55]
  415ddc:	(bad)
  415ddf:	inc    edi
  415de0:	add    al,0x94
  415de2:	and    BYTE PTR [edi+0x3a61dcee],dh
  415de8:	sbb    ebx,edx
  415dea:	out    dx,eax
  415deb:	wrmsr  
  415ded:	sub    eax,0xbd9e678b
  415df2:	mov    esp,DWORD PTR [ecx-0x18]
  415df5:	pop    eax
  415df6:	pop    eax
  415df7:	fs mov bl,0x59
  415dfa:	jb     0x415db5
  415dfc:	cmp    al,0x1
  415dfe:	inc    ebp
  415dff:	shl    edi,0xf3
  415e02:	mov    cl,0xb2
  415e04:	mov    edx,0x249a6586
  415e09:	loop   0x415e54
  415e0b:	cs das 
  415e0d:	into   
  415e0e:	sbb    esp,esi
  415e10:	sti    
  415e11:	test   BYTE PTR [edx-0x5f],al
  415e14:	pop    ds
  415e15:	add    BYTE PTR [esi-0xd],bh
  415e18:	fnstsw WORD PTR [esi-0x1aa44161]
  415e1e:	cmp    al,BYTE PTR [edx]
  415e20:	clc    
  415e21:	cmp    dh,dl
  415e23:	loop   0x415df0
  415e25:	pop    ds
  415e26:	clc    
  415e27:	pop    ecx
  415e28:	push   ecx
  415e29:	xchg   esp,eax
  415e2a:	mov    dh,0x72
  415e2c:	stc    
  415e2d:	cmp    al,0xe3
  415e2f:	loope  0x415dc1
  415e31:	test   eax,0x2a0a11aa
  415e36:	je     0x415df3
  415e38:	sbb    eax,0x96465924
  415e3d:	and    eax,0x2536d4bb
  415e42:	sbb    BYTE PTR [eax],cl
  415e44:	shr    ch,1
  415e46:	mov    ah,0xe9
  415e48:	jne    0x415ec5
  415e4a:	add    al,0x3
  415e4c:	add    edx,edx
  415e4e:	cdq    
  415e4f:	or     al,0xad
  415e51:	push   esi
  415e52:	or     eax,DWORD PTR [ecx+0x14]
  415e55:	(bad)  
  415e57:	fsub   QWORD PTR [edx+edx*1]
  415e5a:	mov    edx,DWORD PTR [ecx]
  415e5c:	pop    edi
  415e5e:	push   ecx
  415e5f:	adc    al,0x3f
  415e61:	mov    ds:0x3da7ace1,eax
  415e66:	xchg   ebx,eax
  415e67:	iret   
  415e68:	xor    ebx,DWORD PTR [edx]
  415e6a:	or     al,0xd8
  415e6c:	fnstcw WORD PTR [esi+0x4c]
  415e6f:	mov    edi,0x25143d7
  415e74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e75:	shr    DWORD PTR [ecx-0x3a],cl
  415e78:	xchg   ebx,eax
  415e79:	xor    DWORD PTR [ecx+0x34489450],edx
  415e7f:	mov    ah,BYTE PTR [ecx+ecx*4]
  415e82:	dec    eax
  415e83:	xchg   edx,eax
  415e84:	dec    eax
  415e85:	mov    esi,0xaf56a050
  415e8a:	mov    cl,0xbf
  415e8c:	mov    ebx,0x92f2ed43
  415e91:	je     0x415ecd
  415e93:	cmp    eax,0x99241f4b
  415e98:	cmc    
  415e99:	lea    esi,[ebp+0x26]
  415e9c:	xchg   ebx,eax
  415e9d:	or     DWORD PTR [edi-0x61637879],eax
  415ea3:	pushf  
  415ea4:	and    ah,BYTE PTR [eax]
  415ea6:	and    BYTE PTR [edx-0x670e6cee],cl
  415eac:	pusha  
  415ead:	and    BYTE PTR [eax+0x3a],cl
  415eb0:	xchg   ebx,eax
  415eb1:	add    ecx,eax
  415eb3:	mov    ds:0xb4473d5a,al
  415eb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415eb9:	(bad)  
  415eba:	xor    al,0x1b
  415ebc:	dec    ebp
  415ebd:	push   esp
  415ebe:	push   ebp
  415ebf:	and    eax,0x4a924a99
  415ec4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ec5:	call   0xb62ec6bf
  415eca:	and    DWORD PTR [eax-0x70],0xbb47b76e
  415ed1:	frstor [esi]
  415ed3:	push   ss
  415ed4:	mov    edx,DWORD PTR [edx-0x72e658b2]
  415eda:	inc    esi
  415edb:	cmp    al,0xd9
  415edd:	fldenv [ecx+0x3a]
  415ee0:	cdq    
  415ee1:	and    bl,bh
  415ee3:	cld    
  415ee4:	test   BYTE PTR [edx+0x1],al
  415ee7:	ret    0x30e1
  415eea:	aaa    
  415eeb:	outs   dx,BYTE PTR ds:[esi]
  415eec:	fsubrp st(0),st
  415eee:	mov    esp,0x7b83c17a
  415ef3:	imul   DWORD PTR [eax-0x4c5b54aa]
  415ef9:	sbb    DWORD PTR [esi],esi
  415efb:	xlat   BYTE PTR ss:[ebx]
  415efd:	or     DWORD PTR [edi+0x79f3e4c2],eax
  415f03:	sub    al,0xcb
  415f05:	outs   dx,DWORD PTR fs:[esi]
  415f07:	outs   dx,DWORD PTR ds:[esi]
  415f08:	pop    es
  415f09:	dec    ebx
  415f0a:	aaa    
  415f0b:	leave  
  415f0c:	in     eax,0x72
  415f0e:	cwde   
  415f0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f10:	shl    esi,0xa3
  415f13:	inc    edi
  415f14:	sbb    al,0x1f
  415f16:	push   ds
  415f17:	adc    BYTE PTR [ebp+0x4a952946],cl
  415f1d:	test   BYTE PTR [ebx+0x3499d251],ah
  415f23:	jecxz  0x415ef6
  415f25:	mov    BYTE PTR [edx-0x53],bl
  415f28:	dec    esi
  415f29:	mov    eax,ds:0x5b9f2790
  415f2e:	loopne 0x415f21
  415f30:	jecxz  0x415eb9
  415f32:	aam    0x6a
  415f34:	xor    eax,0x549f8afc
  415f39:	xor    cl,cl
  415f3b:	loope  0x415f3b
  415f3d:	add    DWORD PTR [edi],eax
  415f3f:	pop    es
  415f40:	sti    
  415f41:	in     al,0xf3
  415f43:	add    eax,0xd508d122
  415f48:	dec    edx
  415f49:	test   ecx,ecx
  415f4b:	fs ret 0xa952
  415f4f:	test   BYTE PTR [edx],bh
  415f51:	push   ebp
  415f52:	jmp    0x53665a4c
  415f57:	dec    ecx
  415f58:	xor    al,0x4d
  415f5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f5b:	shr    esi,cl
  415f5d:	adc    BYTE PTR [esi],cl
  415f5f:	inc    edi
  415f60:	cmp    BYTE PTR [ecx],bh
  415f62:	cmp    eax,0x4c449241
  415f67:	ror    DWORD PTR [esi+edi*8-0x702a00e9],cl
  415f6e:	(bad)  
  415f6f:	cli    
  415f70:	outs   dx,DWORD PTR ds:[esi]
  415f71:	call   esi
  415f73:	outs   dx,DWORD PTR ds:[esi]
  415f74:	test   eax,0xf53df6ef
  415f79:	(bad)  [eax]
  415f7b:	xlat   BYTE PTR ds:[ebx]
  415f7c:	adc    eax,eax
  415f7e:	xlat   BYTE PTR ds:[ebx]
  415f7f:	nop
  415f80:	mov    edi,0xcdffdff6
  415f85:	bound  ebp,QWORD PTR [ebx-0x6cc68123]
  415f8b:	leave  
  415f8c:	adc    BYTE PTR [ebp+0x33654945],cl
  415f92:	hlt    
  415f93:	sti    
  415f94:	cmp    eax,0xd30cd9b2
  415f99:	jmp    0xc5fcd636
  415f9e:	ret    0x2c2
  415fa1:	xchg   ecx,eax
  415fa2:	push   0x8faf7e84
  415fa7:	mov    ds:0x5e5e5804,al
  415fac:	gs jg  0x41602e
  415faf:	pop    ss
  415fb0:	lahf   
  415fb1:	iret   
  415fb2:	dec    edi
  415fb3:	cs lahf 
  415fb5:	(bad)  
  415fb6:	ror    BYTE PTR ds:0xd3a25964,1
  415fbc:	in     eax,dx
  415fbd:	and    al,BYTE PTR [eax]
  415fbf:	jmp    0x20a1e610
  415fc4:	shr    bl,0xaf
  415fc7:	jg     0x415f4e
  415fc9:	icebp  
  415fca:	js     0x415f50
  415fcc:	stos   BYTE PTR es:[edi],al
  415fcd:	test   eax,0x42614284
  415fd2:	mov    eax,ds:0x4e99310
  415fd7:	pop    ecx
  415fd8:	xchg   esi,eax
  415fd9:	pop    eax
  415fda:	sub    BYTE PTR [esi],ch
  415fdc:	and    BYTE PTR [edx+0x12],cl
  415fdf:	test   eax,0xb74e8264
  415fe4:	retf   
  415fe5:	into   
  415fe6:	xchg   ebx,eax
  415fe7:	sbb    eax,0x34c7430c
  415fec:	dec    ebp
  415fed:	add    cl,BYTE PTR [edx-0x70]
  415ff0:	inc    eax
  415ff1:	xor    al,cl
  415ff3:	push   0xc4410134
  415ff8:	out    0xf7,eax
  415ffa:	xchg   ecx,eax
  415ffb:	leave  
  415ffc:	enterw 0x72e5,0xb4
  416001:	pop    edx
  416002:	xor    eax,DWORD PTR [edx-0xeaaab34]
  416008:	sti    
  416009:	jl     0x416087
  41600b:	call   0x89540fd3
  416010:	inc    esp
  416011:	adc    BYTE PTR [ebp-0x7f],al
  416014:	dec    eax
  416015:	and    al,0xc2
  416017:	jmp    0x415fc8
  416019:	mov    edi,0x19c9e9ce
  41601e:	xchg   ebp,eax
  41601f:	retf   0xef19
  416022:	jg     0x41600d
  416024:	std    
  416025:	mov    esp,0xb817bef8
  41602a:	lods   al,BYTE PTR ds:[esi]
  41602b:	aad    0x28
  41602d:	push   ss
  41602e:	mov    esi,DWORD PTR [ebx+ebx*8-0x1c872193]
  416035:	push   ds
  416036:	jecxz  0x416029
  416038:	nop
  416039:	leave  
  41603a:	fs retf 0xe6d6
  41603e:	push   es
  41603f:	mov    cl,0x58
  416041:	mov    WORD PTR [eax+0x34],?
  416044:	inc    esp
  416045:	sub    BYTE PTR [eax],dl
  416047:	out    0x8b,al
  416049:	pop    edi
  41604a:	cli    
  41604b:	and    dl,BYTE PTR [ebp-0x12c5cc4d]
  416051:	ss lahf 
  416053:	cld    
  416054:	mov    esi,0x2749924f
  416059:	jmp    0x33a65bd2
  41605e:	sbb    DWORD PTR [edx+0x17],ebp
  416061:	xor    eax,0x8209e326
  416066:	sub    al,0xa1
  416068:	test   eax,0x97769d2a
  41606d:	ret    
  41606e:	ret    
  41606f:	add    eax,edx
  416071:	mov    ch,0x30
  416073:	leave  
  416074:	push   esp
  416075:	call   0xb74e:0x91785e17
  41607c:	ret    
  41607d:	lea    ebx,[ebx]
  41607f:	aaa    
  416080:	fnstcw WORD PTR [esi-0x4]
  416083:	cwde   
  416084:	retf   
  416085:	retf   
  416086:	jae    0x4160b4
  416088:	shl    DWORD PTR [eax+0x65],cl
  41608b:	loopne 0x4160ca
  41608d:	add    BYTE PTR [eax],al
  41608f:	and    BYTE PTR [eax],al
  416091:	dec    ecx
  416092:	inc    esp
  416093:	inc    ecx
  416094:	push   esp
  416095:	fs xor al,0x1a
  416098:	adc    DWORD PTR [ecx+0x3c3e394e],ebx
  41609e:	mov    al,ds:0x8d106cd5
  4160a3:	lds    edi,FWORD PTR [eax-0x12]
  4160a6:	test   edi,esp
  4160a8:	push   ecx
  4160a9:	jl     0x4160e9
  4160ab:	(bad)
  4160b0:	adc    DWORD PTR [esi],ecx
  4160b2:	xchg   DWORD PTR [ecx],ebp
  4160b4:	xchg   ebp,eax
  4160b5:	xchg   esi,eax
  4160b6:	imul   esi,DWORD PTR [ebp+0x672a545a],0xa74c0a20
  4160c0:	adc    ebp,DWORD PTR [edx-0x4b]
  4160c3:	dec    ebx
  4160c4:	div    bh
  4160c6:	neg    DWORD PTR [ecx+0x5f]
  4160c9:	fild   WORD PTR [eax+0x55]
  4160cc:	push   ebp
  4160cd:	div    bh
  4160cf:	jbe    0x4160da
  4160d1:	fld    TBYTE PTR [ecx-0x2c]
  4160d4:	std    
  4160d5:	jnp    0x416146
  4160d7:	and    cl,BYTE PTR [eax]
  4160d9:	add    ah,BYTE PTR [edx-0x817cfd8]
  4160df:	sub    BYTE PTR [ebp+0x60c1997],dl
  4160e5:	imul   esp,DWORD PTR [edi-0x59],0xffffffd5
  4160e9:	out    0x81,eax
  4160eb:	aas    
  4160ec:	jp     0x4160a5
  4160ee:	out    dx,eax
  4160ef:	stos   DWORD PTR es:[edi],eax
  4160f0:	out    dx,eax
  4160f1:	inc    esi
  4160f2:	mov    ecx,0x5b5f0036
  4160f7:	fidivr WORD PTR [edi]
  4160f9:	sbb    al,0xc
  4160fb:	mov    dl,0xe5
  4160fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160fe:	adc    dl,BYTE PTR [esi-0x5ab56d97]
  416104:	or     BYTE PTR [edx],ch
  416106:	or     al,cl
  416108:	inc    eax
  416109:	nop
  41610a:	lds    esp,FWORD PTR [ebp-0xc6482ce]
  416110:	mov    edi,0xb345b9b1
  416115:	push   ecx
  416116:	mov    esp,0x10cd9d22
  41611c:	or     BYTE PTR [eax+edx*4],al
  41611f:	inc    esp
  416120:	mov    DWORD PTR [esi-0x4d],esi
  416123:	test   DWORD PTR [edx+0xa1429f8],esp
  416129:	aam    0x6a
  41612b:	xor    eax,0x26de3c9e
  416130:	xchg   ebp,eax
  416131:	dec    esi
  416132:	push   ebx
  416133:	pop    esi
  416134:	pop    esi
  416135:	inc    esi
  416136:	inc    eax
  416137:	cwde   
  416138:	mov    cl,0xd8
  41613a:	jmp    0x404e:0xb03ed675
  416141:	push   ecx
  416142:	push   0x9248dbb7
  416147:	dec    eax
  416148:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416149:	push   edx
  41614a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41614b:	xlat   BYTE PTR ds:[ebx]
  41614c:	in     eax,dx
  41614d:	adc    cl,BYTE PTR [edi+0xafc50c7]
  416153:	mov    ebp,0x3aa98f5e
  416158:	mov    eax,ds:0xdcf068d1
  41615d:	jae    0x41612e
  41615f:	mov    eax,ds:0xe4922aeb
  416164:	inc    ebx
  416165:	or     DWORD PTR [esi],eax
  416167:	jns    0x4161d9
  416169:	jmp    DWORD PTR [ecx]
  41616b:	pop    ss
  41616c:	pop    ss
  41616d:	push   ebp
  41616e:	(bad)  
  416170:	mov    DWORD PTR ss:[edx+eax*4+0x7c],eax
  416175:	mov    eax,ds:0x20d1b340
  41617a:	adc    cl,BYTE PTR [ebx+0x18f5efd2]
  416180:	push   cs
  416181:	cli    
  416182:	clc    
  416183:	ins    BYTE PTR es:[edi],dx
  416184:	and    al,dl
  416186:	xor    al,0x4d
  416188:	dec    esp
  416189:	retf   
  41618a:	inc    eax
  41618b:	push   ebx
  41618c:	xor    eax,0x2044927c
  416191:	cmp    bl,dh
  416193:	loop   0x416156
  416195:	pusha  
  416196:	nop
  416197:	jbe    0x416154
  416199:	lea    ebp,[edx+0x7d35d14e]
  41619f:	xchg   esi,eax
  4161a0:	cmp    ecx,ebx
  4161a2:	adc    al,BYTE PTR [edx+0x26196020]
  4161a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161a9:	imul   esp,DWORD PTR [eax],0x49243ec9
  4161af:	sbb    cl,BYTE PTR es:[ebp-0x47f2102e]
  4161b6:	sbb    al,0xe
  4161b8:	cmp    BYTE PTR [ebx-0x680816aa],ch
  4161be:	mov    ch,al
  4161c0:	arpl   WORD PTR [ebp+ebx*8-0x44],bp
  4161c4:	inc    ecx
  4161c5:	and    al,0x12
  4161c7:	and    DWORD PTR [edi-0x21108fd1],ebx
  4161cd:	fwait
  4161ce:	pushf  
  4161cf:	sahf   
  4161d0:	sahf   
  4161d1:	adc    BYTE PTR [esp+eax*1],cl
  4161d4:	stc    
  4161d5:	lock inc edi
  4161d7:	mov    ah,BYTE PTR [edx+eiz*8]
  4161da:	xor    esp,edi
  4161dc:	jle    0x4161fd
  4161de:	mov    edx,0x64fb23a6
  4161e3:	and    BYTE PTR [ecx+0xb0b0b30],0xa4
  4161ea:	shr    BYTE PTR [ecx],cl
  4161ec:	out    dx,al
  4161ed:	fistp  QWORD PTR [edi+0x4672b547]
  4161f3:	cmp    al,0x9e
  4161f5:	in     al,0x23
  4161f7:	pop    ds
  4161f8:	call   FWORD PTR [eax]
  4161fa:	int    0x46
  4161fc:	and    DWORD PTR [esi-0x55],0xffffffc9
  416200:	xor    ah,BYTE PTR fs:[ebp-0xd]
  416204:	(bad)  
  416205:	dec    ebp
  416206:	push   es
  416207:	sbb    DWORD PTR [esi],0xffffffa5
  41620a:	push   edx
  41620b:	mov    DWORD PTR [ebx-0x5fd3ac2d],esi
  416211:	pop    esp
  416212:	sub    dl,BYTE PTR [ebx]
  416214:	mov    al,BYTE PTR [ecx+edi*2-0x5dde1704]
  41621b:	sub    BYTE PTR [eax],ah
  41621d:	dec    ecx
  41621e:	adc    al,BYTE PTR [edi-0x50bf8f9]
  416224:	jge    0x4161ba
  416226:	pusha  
  416227:	adc    BYTE PTR [ebx-0x3c79dc1d],0x21
  41622e:	fldcw  WORD PTR [esi+ecx*4-0x1f]
  416232:	jo     0x41627c
  416234:	and    BYTE PTR [eax],bl
  416236:	and    BYTE PTR [ebp-0x59a59f33],bl
  41623c:	xor    ah,ch
  41623e:	(bad)  
  416240:	int    0xb5
  416242:	add    eax,edi
  416244:	call   0xf90d:0x7c029d72
  41624b:	rol    BYTE PTR [edi+0x3f],1
  41624e:	not    bl
  416250:	mov    ds:0x4505f0e1,eax
  416255:	cdq    
  416256:	xor    eax,0x3860cf6
  41625b:	dec    edx
  41625c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41625d:	xor    ah,BYTE PTR [esi+0x470e11a9]
  416263:	enter  0xd264,0x8c
  416267:	push   es
  416268:	inc    ebx
  416269:	jl     0x4162e9
  41626b:	pop    ds
  41626c:	(bad)  [esi+edx*1-0x3d]
  416270:	xor    BYTE PTR [eax-0x75d71429],ch
  416276:	inc    edx
  416277:	scas   al,BYTE PTR es:[edi]
  416278:	push   eax
  416279:	loopne 0x41625b
  41627b:	pusha  
  41627c:	(bad)  
  41627d:	rcl    ebx,cl
  41627f:	adc    edi,DWORD PTR [esi+edi*1+0x5]
  416283:	add    al,0x81
  416285:	retf   
  416286:	retf   
  416287:	or     eax,DWORD PTR [esi-0x5d]
  41628a:	and    ecx,ebx
  41628c:	inc    edx
  41628d:	sahf   
  41628e:	test   DWORD PTR [edx-0x6f],esp
  416291:	leave  
  416292:	fs inc edx
  416294:	xor    bl,BYTE PTR [ecx+0x20081022]
  41629a:	or     BYTE PTR [edx],al
  41629c:	mov    DWORD PTR [edx+edx*4+0x64],esp
  4162a0:	and    al,cl
  4162a2:	into   
  4162a3:	div    BYTE PTR [esi]
  4162a5:	aad    0x6a
  4162a7:	xchg   ebp,eax
  4162a8:	shr    DWORD PTR [eax+0x44],1
  4162ab:	sub    al,0x1e
  4162ad:	and    esp,DWORD PTR [eax+0x4aaa6828]
  4162b3:	sub    al,0x1e
  4162b5:	daa    
  4162b6:	sbb    al,0x89
  4162b8:	xor    BYTE PTR [esi],bl
  4162ba:	dec    edi
  4162bb:	or     BYTE PTR [edi+0x51a2c4c3],al
  4162c1:	mov    dh,0x1f
  4162c3:	iret   
  4162c4:	nop
  4162c5:	sti    
  4162c6:	icebp  
  4162c7:	fs ret 0x3b9d
  4162cb:	ja     0x416295
  4162cd:	out    0xf3,eax
  4162cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4162d0:	xor    ebx,DWORD PTR [ecx]
  4162d2:	push   esi
  4162d3:	retf   0x8e25
  4162d6:	(bad)  
  4162d7:	dec    edi
  4162d8:	mov    eax,0x973eff7f
  4162dd:	xchg   edi,eax
  4162de:	xchg   edi,eax
  4162df:	add    al,0x82
  4162e1:	inc    ecx
  4162e2:	dec    edx
  4162e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162e4:	adc    ah,BYTE PTR [edx-0x4e464dd8]
  4162ea:	mov    es,WORD PTR [ebp+0xf47c3c0]
  4162f0:	(bad)  
  4162f2:	fild   DWORD PTR [edi+0x55]
  4162f5:	push   ebp
  4162f6:	adc    dh,dh
  4162f8:	mov    cl,0x93
  4162fa:	leave  
  4162fb:	and    al,0xeb
  4162fd:	imul   ebp,DWORD PTR [ebx-0xd60e1e4],0xfffffff0
  416304:	loope  0x416349
  416306:	into   
  416307:	into   
  416308:	sub    al,BYTE PTR [ebx+eiz*2+0x31]
  41630c:	push   esi
  41630d:	xchg   edi,eax
  41630e:	retf   
  41630f:	clc    
  416310:	add    eax,DWORD PTR [ecx]
  416312:	outs   dx,BYTE PTR ds:[esi]
  416313:	fnstsw WORD PTR [edx+0x7d022335]
  416319:	in     eax,0x2b
  41631b:	aam    0x6a
  41631d:	xor    ebp,DWORD PTR [esi-0x33]
  416320:	in     eax,dx
  416321:	(bad)  [edi-0x3dfefdaf]
  416327:	xchg   ecx,eax
  416328:	or     BYTE PTR [edx+0x20],cl
  41632b:	rcr    cl,0xd9
  41632e:	sub    DWORD PTR [ebp+0x2674876e],edi
  416334:	dec    ebx
  416335:	cmp    al,0x91
  416337:	loopne 0x416325
  416339:	in     al,dx
  41633a:	mov    WORD PTR [edi],fs
  41633c:	dec    edi
  41633d:	mov    dh,0x99
  41633f:	mov    WORD PTR [edi],fs
  416341:	xchg   esp,eax
  416342:	push   edi
  416343:	xchg   esi,eax
  416344:	leave  
  416345:	out    0x72,eax
  416347:	xor    bl,BYTE PTR fs:[ecx]
  41634a:	ret    0x2891
  41634d:	pop    es
  41634e:	sti    
  41634f:	sti    
  416350:	push   0x364c9553
  416355:	mov    eax,DWORD PTR [eax+0x36cecec0]
  41635b:	mov    DWORD PTR [edi+0x47],0x1639b264
  416362:	or     bh,BYTE PTR [ecx+0x7a]
  416365:	std    
  416366:	push   ds
  416367:	mov    ds:0xdfbf08e1,eax
  41636c:	dec    edi
  41636d:	ss xchg ebx,eax
  41636f:	and    eax,0x582cd93
  416374:	in     eax,dx
  416375:	push   esi
  416376:	xchg   ebx,eax
  416377:	ins    BYTE PTR es:[edi],dx
  416378:	ss iret 
  41637a:	fcmovb st,st(6)
  41637c:	cmp    ah,BYTE PTR [edi-0x5557d8d9]
  416382:	retf   0x5bad
  416385:	mov    bh,0x18
  416387:	mov    es,WORD PTR [esi+0x365d3af4]
  41638d:	mov    dh,0xb6
  41638f:	cwde   
  416390:	dec    esi
  416391:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416392:	add    al,0x14
  416394:	test   DWORD PTR [eax+0x24],esi
  416397:	ret    0xaa74
  41639a:	jb     0x416415
  41639c:	jns    0x4163af
  41639e:	cli    
  41639f:	clc    
  4163a0:	idiv   DWORD PTR [ebp-0xa]
  4163a3:	xlat   BYTE PTR ds:[ebx]
  4163a4:	mov    edi,0xe8feeff8
  4163a9:	call   0x47:0x5c94f815
  4163b0:	dec    edi
  4163b1:	leave  
  4163b2:	scas   eax,DWORD PTR es:[edi]
  4163b3:	inc    bl
  4163b5:	jmp    FWORD PTR ds:0x3eb46f5c
  4163bb:	adc    cl,BYTE PTR [ebp-0x248b173b]
  4163c1:	mov    BYTE PTR [edx+0x635ebd40],ah
  4163c7:	jge    0x416446
  4163c9:	(bad)  
  4163ca:	leave  
  4163cb:	js     0x416411
  4163cd:	in     eax,dx
  4163ce:	repnz nop
  4163d0:	mov    ebx,0xae873dcf
  4163d5:	jmp    0x4163c3
  4163d7:	ins    BYTE PTR es:[edi],dx
  4163d8:	outs   dx,DWORD PTR ds:[esi]
  4163d9:	mov    bl,0xb1
  4163db:	mov    ch,0x45
  4163dd:	xor    al,0x1a
  4163df:	mov    ds:0xa74c795a,eax
  4163e4:	aad    0xc6
  4163e6:	out    0xf7,eax
  4163e8:	popa   
  4163e9:	call   0xacf5:0x4a89d326
  4163f0:	ret    0x7733
  4163f3:	lahf   
  4163f4:	mov    eax,ds:0xd7a45c58
  4163f9:	jmp    0x41645d
  4163fb:	sbb    DWORD PTR [esi],esp
  4163fd:	xchg   ecx,eax
  4163fe:	enter  0x998c,0x97
  416402:	retf   0xa964
  416405:	xlat   BYTE PTR ds:[ebx]
  416406:	jmp    0x244f:0x10edec1c
  41640d:	sub    BYTE PTR [edi],ch
  41640f:	scas   eax,DWORD PTR es:[edi]
  416410:	and    bl,bh
  416412:	fs add al,0x41
  416415:	pusha  
  416416:	xor    al,0x1a
  416418:	adc    ecx,DWORD PTR [ebp+0x13c449c6]
  41641e:	les    esp,FWORD PTR [ebx+0x31]
  416421:	xor    bh,BYTE PTR [ecx-0x987324]
  416427:	call   0x94b1f54d
  41642c:	aad    0xf5
  41642e:	jne    0x4163ba
  416430:	mov    ecx,DWORD PTR [ebx+0x5263c78c]
  416436:	test   eax,0x8e1a314
  41643b:	shl    DWORD PTR [edx],cl
  41643d:	sbb    DWORD PTR [esi],ecx
  41643f:	pop    es
  416440:	fs mov bl,0x69
  416443:	add    al,0x41
  416445:	mov    ah,0x4b
  416447:	je     0x41649c
  416449:	inc    eax
  41644a:	and    BYTE PTR [ebp+0x6eba24c],dl
  416450:	mov    DWORD PTR [eax+0xc],edi
  416453:	push   ebp
  416454:	push   ebx
  416455:	imul   edx,esp,0x43870cea
  41645b:	call   0x43bd:0x9f7726cd
  416462:	cmp    BYTE PTR [edx],dl
  416464:	data16 xor bl,BYTE PTR [ecx-0x27dbb76e]
  41646b:	fstp   TBYTE PTR [edi]
  41646d:	mov    al,ds:0x4a22ebdf
  416472:	xchg   edx,eax
  416473:	int    0x64
  416475:	or     al,0x10
  416477:	lea    eax,[eax+edx*4-0x14]
  41647b:	fist   WORD PTR [ecx]
  41647d:	inc    esp
  41647e:	adc    al,0x45
  416480:	and    DWORD PTR [esi+ecx*1],ebx
  416483:	jae    0x4164f6
  416485:	jns    0x416450
  416487:	leave  
  416488:	rcl    DWORD PTR [ecx],1
  41648a:	push   ebx
  41648b:	push   ebp
  41648c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41648d:	push   esp
  41648e:	sub    dh,BYTE PTR [ecx-0x1d]
  416491:	out    0x4d,al
  416493:	push   edx
  416494:	test   eax,0x12e54b34
  416499:	ror    ecx,cl
  41649b:	fs inc esi
  41649d:	sbb    DWORD PTR [esi],0xa244890d
  4164a3:	add    al,0x94
  4164a5:	add    BYTE PTR [ebp+0x5d0c4b8b],dh
  4164ab:	and    edx,DWORD PTR [edx+ecx*1]
  4164ae:	mov    cl,0x75
  4164b0:	jecxz  0x4164b8
  4164b2:	mov    ebp,0xcd8d8f6e
  4164b7:	dec    ebp
  4164b8:	cs into 
  4164ba:	sub    esi,DWORD PTR [ebx+ebx*8+0x4649241d]
  4164c1:	push   ebp
  4164c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164c3:	sbb    al,0x1d
  4164c5:	push   ds
  4164c6:	repnz clc 
  4164c8:	icebp  
  4164c9:	and    esp,DWORD PTR [edx+0x7d2f38d1]
  4164cf:	loopne 0x416536
  4164d1:	pop    edx
  4164d2:	int    0x26
  4164d4:	lea    edi,[edx+0x3]
  4164d7:	mov    edi,0x679dcfcf
  4164dc:	sahf   
  4164dd:	cmp    bl,BYTE PTR gs:[ecx+0x6cd92c45]
  4164e4:	xchg   BYTE PTR [esi+eiz*1+0x43],cl
  4164e8:	and    al,0x1a
  4164ea:	and    edx,esp
  4164ec:	in     eax,dx
  4164ed:	mov    bl,0xb6
  4164ef:	mov    dh,0x8e
  4164f1:	dec    edi
  4164f2:	not    BYTE PTR [ecx]
  4164f4:	pop    DWORD PTR [edi+0x51]
  4164f7:	add    DWORD PTR [ecx],0xfffffffa
  4164fa:	std    
  4164fb:	add    edx,esp
  4164fd:	ins    BYTE PTR es:[edi],dx
  4164fe:	fidiv  DWORD PTR ss:[ebx]
  416501:	fwait
  416502:	aaa    
  416503:	out    dx,eax
  416504:	ins    BYTE PTR es:[edi],dx
  416505:	add    bl,bl
  416507:	out    dx,eax
  416508:	repnz in eax,dx
  41650a:	cmc    
  41650b:	pop    ebp
  41650c:	daa    
  41650d:	xlat   BYTE PTR ds:[ebx]
  41650e:	adc    eax,eax
  416510:	push   ebx
  416511:	repnz add ebx,DWORD PTR [edi]
  416514:	pop    esp
  416515:	jge    0x4164c5
  416517:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416518:	(bad)  
  416519:	jle    0x416541
  41651b:	sbb    cl,BYTE PTR [esi]
  41651d:	or     bl,ah
  41651f:	ror    DWORD PTR [eax-0x44cac5ac],1
  416525:	cmp    DWORD PTR ds:0x6a010250,eax
  41652b:	cmc    
  41652c:	call   0x3468:0xd02f23dd
  416533:	sbb    DWORD PTR [edi-0x7075d739],ecx
  416539:	jmp    0xdff0afb2
  41653e:	daa    
  41653f:	push   ds
  416540:	mov    edx,DWORD PTR [ebx+0x1c302fcf]
  416546:	cmc    
  416547:	ins    DWORD PTR es:[edi],dx
  416548:	ret    0x914e
  41654b:	dec    eax
  41654c:	sub    al,0x4a
  41654e:	es fwait
  416550:	ret    
  416551:	out    dx,eax
  416552:	div    DWORD PTR [ebx+0x76]
  416555:	jp     0x416599
  416557:	mov    ebx,0x7715b2dd
  41655c:	enter  0xc9e9,0x31
  416560:	add    DWORD PTR [ecx-0x61],0x78
  416564:	cmp    al,0xce
  416566:	jmp    0xcb90:0x20821aea
  41656d:	out    0x10,eax
  41656f:	mov    al,0xe8
  416571:	je     0x41652d
  416573:	dec    esp
  416574:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416575:	rcr    DWORD PTR [ecx+0x1d],cl
  416578:	mov    ebp,0x7672a6d3
  41657d:	dec    edx
  41657e:	mov    bh,0xdb
  416580:	arpl   WORD PTR [ecx+0x6b736254],bp
  416586:	mov    ecx,DWORD PTR [eax+0x24]
  416589:	cmp    dh,BYTE PTR [ebx]
  41658b:	dec    esp
  41658c:	shl    DWORD PTR [ecx],cl
  41658e:	pop    edi
  41658f:	stc    
  416590:	repnz imul ebx,DWORD PTR [ebp+ebx*4+0x261ba19d],0xffffffa5
  416599:	rcl    BYTE PTR [edx],cl
  41659b:	mov    dl,0x24
  41659d:	xchg   ecx,eax
  41659e:	leave  
  41659f:	fs dec eax
  4165a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165a2:	xchg   edx,eax
  4165a3:	push   esp
  4165a4:	sub    edx,DWORD PTR [ebp-0xa]
  4165a7:	div    dh
  4165a9:	sbb    BYTE PTR [ebp-0x502ae19a],cl
  4165af:	sub    al,ch
  4165b1:	call   0x69ba:0x22d2d2ce
  4165b8:	jb     0x41662c
  4165ba:	jl     0x4165fe
  4165bc:	mov    ch,0x5a
  4165be:	add    eax,0x8182041
  4165c3:	bound  ebx,QWORD PTR [edx+0x26]
  4165c6:	(bad)
  4165c9:	test   eax,0xa3838264
  4165ce:	and    esi,DWORD PTR [esi-0x2a59c0e1]
  4165d4:	push   0xffffff93
  4165d6:	das    
  4165d7:	in     al,0x29
  4165d9:	cs cs xchg edx,eax
  4165dc:	dec    esp
  4165dd:	es mov ecx,0xe726e371
  4165e3:	out    0x55,eax
  4165e5:	sahf   
  4165e6:	cmp    al,0xd9
  4165e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165e9:	fucomi st,st(1)
  4165eb:	mov    dl,0xb4
  4165ed:	mov    eax,0x99797948
  4165f2:	icebp  
  4165f3:	js     0x416641
  4165f5:	and    BYTE PTR [eax],dl
  4165f7:	inc    eax
  4165f8:	push   ebx
  4165f9:	push   ebp
  4165fa:	call   0xcacf:0xd93e26cd
  416601:	jmp    0x8fc7:0x876edd2a
  416608:	push   ds
  416609:	push   ecx
  41660a:	cmp    DWORD PTR [ebx],edi
  41660c:	and    eax,0xa96050bf
  416611:	mov    eax,0xb36baa84
  416616:	or     BYTE PTR [ebx+0x30],ch
  416619:	inc    eax
  41661a:	xlat   BYTE PTR ds:[ebx]
  41661b:	xor    al,0x96
  41661d:	dec    edx
  41661e:	and    eax,0x1e254a96
  416623:	ds mov eax,0x23d7af4f
  416629:	adc    cl,BYTE PTR [ebp+0x760128a2]
  41662f:	in     eax,dx
  416630:	call   0x48302f95
  416635:	cmp    al,bl
  416637:	fbld   TBYTE PTR [ebx+0x32]
  41663a:	sbb    DWORD PTR [ebx+0x5e],edx
  41663d:	pop    esi
  41663e:	popa   
  41663f:	cmp    BYTE PTR [eax],bl
  416641:	shr    ch,cl
  416643:	into   
  416644:	mov    edx,0xa4494500
  416649:	aad    0x6c
  41664b:	nop
  41664c:	into   
  41664d:	fs mov ecx,0xd7a73f38
  416653:	popf   
  416654:	xor    DWORD PTR [edi+eiz*4],esp
  416657:	mov    edx,0x8486cbe1
  41665c:	sti    
  41665d:	mov    edi,0xfaffbbf3
  416662:	retf   
  416663:	out    dx,eax
  416664:	idiv   ch
  416666:	cmc    
  416667:	frstor [esi]
  416669:	out    dx,eax
  41666a:	(bad)  [eax]
  41666c:	loopne 0x41666a
  41666e:	xchg   edi,eax
  41666f:	outs   dx,BYTE PTR ds:[esi]
  416670:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416671:	xchg   BYTE PTR [ecx+0x62fc5767],dh
  416677:	jg     0x41664e
  416679:	mov    edi,0x234aafff
  41667e:	popa   
  41667f:	and    DWORD PTR [edx+edi*8],esp
  416682:	jecxz  0x416685
  416684:	rcl    eax,1
  416686:	add    dl,0x74
  416689:	adc    al,0xb0
  41668b:	je     0x4166e2
  41668d:	mov    ah,0x2c
  41668f:	dec    ebx
  416690:	adc    al,0x2d
  416692:	pop    ebp
  416693:	aam    0x45
  416695:	pop    ecx
  416696:	and    al,0x91
  416698:	xchg   esp,eax
  416699:	sub    eax,0x434cb053
  41669e:	adc    eax,0xb7ec6d2d
  4166a3:	sub    al,0x7b
  4166a5:	mov    dh,0x1e
  4166a7:	repz loope 0x416642
  4166aa:	arpl   WORD PTR ds:[edx-0x23c5c03],sp
  4166b1:	mov    ebx,0x41051794
  4166b6:	adc    al,0x49
  4166b8:	addr16 mov dl,0x64
  4166bb:	mov    bl,0x79
  4166bd:	cmp    ch,ch
  4166bf:	push   ss
  4166c0:	mov    edx,0x64c991a1
  4166c5:	imul   edx,esp,0x3dfbf4eb
  4166cb:	dec    edx
  4166cc:	in     eax,0x92
  4166ce:	imul   eax,DWORD PTR [eax],0xffffffe2
  4166d1:	icebp  
  4166d2:	and    al,0xc1
  4166d4:	push   eax
  4166d5:	mov    ch,bh
  4166d7:	mov    ebp,0x2449443d
  4166dc:	xchg   ecx,eax
  4166dd:	dec    esp
  4166de:	mov    al,0xb9
  4166e0:	mov    ecx,0x7428a285
  4166e5:	mov    ebx,0xe9d3a5d
  4166ea:	cdq    
  4166eb:	ins    BYTE PTR es:[edi],dx
  4166ec:	xchg   BYTE PTR [eax+0x3a],bh
  4166ef:	ret    
  4166f0:	mov    ds:0xd190f47,eax
  4166f5:	push   es
  4166f6:	or     BYTE PTR [edx-0x6a9a86c0],al
  4166fc:	ret    0x9162
  4166ff:	outs   dx,BYTE PTR ds:[esi]
  416700:	mov    ebx,0x484a288b
  416705:	mov    dl,0x44
  416707:	ds xchg edi,eax
  416709:	daa    
  41670a:	cdq    
  41670b:	dec    edx
  41670c:	shr    edi,cl
  41670e:	ja     0x416789
  416710:	repnz in al,0x11
  416713:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416714:	imul   esp,DWORD PTR [ecx-0x7a7ac515],0x12e2c53c
  41671e:	stos   BYTE PTR es:[edi],al
  41671f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416720:	arpl   WORD PTR [ecx+0x25daf526],bx
  416726:	popf   
  416727:	jbe    0x4166b4
  416729:	inc    esp
  41672a:	and    cl,BYTE PTR [esi+0x5554c165]
  416730:	sbb    DWORD PTR [esi+0x3070cc6],ecx
  416736:	push   edx
  416737:	leave  
  416738:	and    al,0xac
  41673a:	pop    edx
  41673b:	xor    eax,DWORD PTR [edx+0x4d]
  41673e:	xor    al,0xca
  416740:	out    dx,al
  416741:	into   
  416742:	push   ds
  416743:	mov    ch,0x8b
  416745:	sbb    ch,ch
  416747:	jbe    0x4166e4
  416749:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41674a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41674b:	and    dh,BYTE PTR [edi+0x6e]
  41674e:	frstor [edx]
  416750:	fwait
  416751:	leave  
  416752:	xchg   edx,eax
  416753:	iret   
  416754:	cmp    DWORD PTR [bx],edi
  416757:	mov    edi,0xf777764
  41675c:	dec    ebp
  41675d:	push   ebx
  41675e:	mov    DWORD PTR [ebx+eax*8-0x41d0744],eax
  416765:	mov    BYTE PTR [ebx+eiz*1+0x28],al
  416769:	mov    al,BYTE PTR [edx+0x30]
  41676c:	mov    al,ds:0x43c1ff70
  416771:	inc    esi
  416772:	jecxz  0x4167a5
  416774:	or     BYTE PTR ds:0x9600c182,bl
  41677a:	imul   esi,DWORD PTR [ecx],0xd318d1e
  416780:	sbb    eax,0x3f2b3c9f
  416785:	cli    
  416786:	jge    0x416789
  416788:	sub    al,0x4
  41678a:	mov    dh,0x1f
  41678c:	aas    
  41678d:	outs   dx,WORD PTR ds:[esi]
  41678f:	outs   dx,DWORD PTR ds:[esi]
  416790:	outs   dx,DWORD PTR ds:[esi]
  416791:	push   esi
  416792:	and    eax,0x979371b8
  416797:	pop    esi
  416798:	jle    0x41671f
  41679a:	shl    DWORD PTR [eax-0x1a62c5b9],0xe0
  4167a1:	pusha  
  4167a2:	(bad)  
  4167a3:	shr    DWORD PTR [eax-0x74],1
  4167a6:	and    al,0x49
  4167a8:	test   al,0xaa
  4167aa:	(bad)  
  4167ab:	jmp    0x1ed09189
  4167b0:	ds and al,0x91
  4167b3:	dec    esp
  4167b4:	lock in al,dx
  4167b6:	mov    bl,0x77
  4167b8:	mov    DWORD PTR [esi-0x5d],eax
  4167bb:	call   0x45e7767a
  4167c0:	xor    al,0x16
  4167c2:	inc    ebx
  4167c3:	xchg   esp,eax
  4167c4:	outs   dx,BYTE PTR fs:[esi]
  4167c6:	fnstsw WORD PTR [esi-0x5f2e54b3]
  4167cc:	shr    DWORD PTR [edx+eiz*4+0x4],1
  4167d0:	add    cl,BYTE PTR [edi+eax*1]
  4167d3:	add    ecx,esi
  4167d5:	sub    esp,DWORD PTR [edi-0x64]
  4167d8:	push   edi
  4167d9:	iret   
  4167da:	pop    ecx
  4167db:	pop    esi
  4167dc:	pop    ecx
  4167dd:	popa   
  4167de:	cmp    BYTE PTR [edx+esi*2],bl
  4167e1:	js     0x416857
  4167e3:	and    BYTE PTR [eax],0x88
  4167e6:	xor    bl,BYTE PTR fs:[ecx]
  4167e9:	sub    ah,BYTE PTR [edi+0x23870c27]
  4167ef:	(bad)
  4167f4:	add    edi,DWORD PTR [edi+0x3571367f]
  4167fa:	sbb    cl,BYTE PTR [ecx+0x7ca8bf51]
  416800:	loope  0x416821
  416802:	jg     0x41685e
  416804:	clc    
  416805:	mov    al,ds:0x80b25a28
  41680a:	xor    bl,bl
  41680c:	out    0x8c,al
  41680e:	xor    esp,DWORD PTR [esi-0x2efbed23]
  416814:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416815:	retf   
  416816:	jle    0x416871
  416818:	pop    ss
  416819:	add    eax,0xd4df04b
  41681e:	inc    ebx
  41681f:	xor    BYTE PTR ds:0x53441453,al
  416825:	adc    al,BYTE PTR [ebx+edx*2]
  416828:	nop
  416829:	fs dec ebx
  41682b:	xchg   edi,eax
  41682c:	adc    eax,0x11e510d5
  416831:	call   0xb9b1:0xcd690a36
  416838:	nop
  416839:	lods   al,BYTE PTR ds:[esi]
  41683a:	sahf   
  41683b:	test   BYTE PTR [esi+0x3e],bl
  41683e:	retf   0xee34
  416841:	popf   
  416842:	jle    0x41683a
  416844:	(bad)  
  416845:	cmp    al,0x3f
  416847:	jg     0x416820
  416849:	adc    al,0xe1
  41684b:	ins    DWORD PTR es:[edi],dx
  41684c:	retf   0xce7b
  41684f:	add    BYTE PTR [edi+edi*8],bl
  416852:	test   bh,0x9
  416855:	add    DWORD PTR [edi-0x36200a41],0x89fbdad
  41685f:	pop    esp
  416860:	outs   dx,BYTE PTR ds:[esi]
  416861:	scas   eax,DWORD PTR es:[edi]
  416862:	pop    ecx
  416863:	push   ss
  416864:	and    BYTE PTR [edx+0x1ac73adf],al
  41686a:	lahf   
  41686b:	iret   
  41686c:	xlat   BYTE PTR ds:[ebx]
  41686d:	pop    cx
  41686f:	mov    bl,0xa5
  416871:	sbb    esp,DWORD PTR [esi+0x69265b39]
  416877:	cmc    
  416878:	pop    ebx
  416879:	mov    bl,0xcd
  41687b:	cmp    eax,esi
  41687d:	ins    BYTE PTR es:[edi],dx
  41687e:	in     eax,dx
  41687f:	adc    al,0x16
  416881:	out    dx,al
  416882:	ret    0x4b4c
  416885:	lahf   
  416886:	lea    edi,[ebx+ebp*8-0x569581a8]
  41688d:	add    dl,cl
  41688f:	icebp  
  416890:	add    BYTE PTR [ebx+0x30],al
  416893:	pop    ecx
  416894:	pop    eax
  416895:	cwde   
  416896:	push   ecx
  416897:	pop    ecx
  416898:	mov    ecx,DWORD PTR [ebx-0x7afefdbb]
  41689e:	pop    eax
  41689f:	xor    al,0xc6
  4168a1:	repnz retf 0x9332
  4168a5:	shl    DWORD PTR [esi+esi*1-0x28],1
  4168a9:	arpl   WORD PTR [ecx-0x67],di
  4168ac:	pop    esi
  4168ad:	scas   eax,DWORD PTR es:[edi]
  4168ae:	xchg   DWORD PTR [esi+0x18],ebp
  4168b1:	les    esp,FWORD PTR [edx-0x4122918f]
  4168b7:	sub    DWORD PTR [ebx+edi*8],0x38
  4168bb:	cmp    eax,0x60c2c13e
  4168c0:	jne    0x41692f
  4168c2:	popf   
  4168c3:	(bad)  
  4168c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168c5:	into   
  4168c6:	jmp    0x56ee72b4
  4168cb:	mov    esi,ebp
  4168cd:	dec    ebp
  4168ce:	add    DWORD PTR [edx+eiz*1-0x3f],0x70
  4168d3:	xor    BYTE PTR [eax+0x57],al
  4168d6:	xor    eax,0x8a2c99b2
  4168db:	fistp  QWORD PTR [edi]
  4168dd:	stos   DWORD PTR es:[edi],eax
  4168de:	sbb    al,bh
  4168e0:	jl     0x4168ce
  4168e2:	pop    ds
  4168e3:	sbb    al,0xd0
  4168e5:	out    dx,eax
  4168e6:	jbe    0x416940
  4168e8:	pop    esp
  4168e9:	sub    dl,BYTE PTR [ecx]
  4168eb:	or     al,0x4
  4168ed:	nop
  4168ee:	jge    0x41696e
  4168f0:	push   es
  4168f1:	mov    ebp,0x253a9a1e
  4168f6:	push   ds
  4168f7:	mov    esi,DWORD PTR [ebx-0xd]
  4168fa:	imul   BYTE PTR [ebp+0x7c]
  4168fd:	mov    dl,0xf
  4168ff:	inc    ecx
  416900:	adc    al,0xf9
  416902:	sar    BYTE PTR [edi-0x4a68dd01],cl
  416908:	dec    ebx
  416909:	sbb    cl,ch
  41690b:	es mov bh,0x6f
  41690e:	(bad)  
  416910:	into   
  416911:	popf   
  416912:	cmp    ebx,DWORD PTR [esi+ebx*4-0x29]
  416916:	sub    BYTE PTR [ebp+0x559e9ccb],dl
  41691c:	cmp    DWORD PTR [ecx],edi
  41691e:	cmp    DWORD PTR [esi+0x51],eax
  416921:	adc    al,0x16
  416923:	xchg   edi,eax
  416924:	xchg   esi,eax
  416925:	mov    BYTE PTR [edi],ah
  416927:	loop   0x4168dd
  416929:	pop    ebx
  41692a:	sub    eax,0x5304c912
  41692f:	push   ebp
  416930:	mov    ds:0x6ad16ad9,eax
  416935:	or     BYTE PTR ss:[esp+edx*1],al
  416939:	xor    al,0x3b
  41693b:	and    al,0x9f
  41693d:	dec    esi
  41693e:	and    eax,0xcb9fbf64
  416943:	pop    edx
  416944:	popf   
  416945:	xchg   ebx,eax
  416946:	jecxz  0x4169ab
  416948:	inc    edx
  416949:	loope  0x41695b
  41694b:	icebp  
  41694c:	js     0x4168e0
  41694e:	ins    BYTE PTR es:[edi],dx
  41694f:	mov    ebp,DWORD PTR ss:[esi-0x34356b55]
  416956:	je     0x416992
  416958:	pop    ebp
  416959:	dec    esi
  41695a:	dec    edi
  41695b:	iret   
  41695c:	mov    eax,0x2a52af38
  416961:	xchg   edi,eax
  416962:	fstp   DWORD PTR [eax-0x21]
  416965:	loopne 0x41694c
  416967:	xchg   edi,eax
  416968:	pop    edi
  416969:	inc    ecx
  41696a:	xchg   edx,eax
  41696b:	fs loop 0x416937
  41696e:	and    al,0x7f
  416970:	cld    
  416971:	xchg   DWORD PTR [edi+0x48],edi
  416974:	stos   DWORD PTR es:[edi],eax
  416975:	aad    0x64
  416977:	xor    bl,BYTE PTR [ecx+0x187c57e0]
  41697d:	xchg   cl,ah
  41697f:	xchg   esi,eax
  416980:	dec    ebp
  416981:	adc    eax,0x58b8a145
  416986:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416987:	push   eax
  416988:	pop    eax
  416989:	and    BYTE PTR [ebp-0x60250fb6],dl
  41698f:	mov    esi,0x43dfb0c6
  416994:	xchg   edx,eax
  416995:	inc    esp
  416996:	je     0x4169e5
  416998:	mov    ds:0xad516add,eax
  41699d:	push   esp
  41699e:	pop    ecx
  41699f:	pop    esp
  4169a0:	pop    edx
  4169a1:	in     al,0xf6
  4169a3:	popf   
  4169a4:	addr16 call 0xe266251f
  4169aa:	jno    0x416966
  4169ac:	in     eax,dx
  4169ad:	ss xchg ecx,eax
  4169af:	jo     0x416935
  4169b1:	cmc    
  4169b2:	lea    ecx,ds:0xbb14c992
  4169b8:	cmp    ecx,DWORD PTR [edi+0x66]
  4169bb:	mov    eax,0xc9c23843
  4169c0:	leave  
  4169c1:	xor    ebp,edi
  4169c3:	pop    esi
  4169c4:	lahf   
  4169c5:	ins    BYTE PTR es:[edi],dx
  4169c6:	cs dec ebx
  4169c8:	in     eax,0xec
  4169ca:	xchg   esp,eax
  4169cb:	pop    edx
  4169cc:	lods   eax,DWORD PTR ds:[esi]
  4169cd:	dec    esi
  4169ce:	and    bl,BYTE PTR [ecx-0x5e50aa5c]
  4169d4:	test   eax,0x2bcbca53
  4169d9:	dec    esp
  4169da:	(bad)  
  4169db:	arpl   dx,di
  4169dd:	add    DWORD PTR [ecx],0x3
  4169e0:	sub    edi,DWORD PTR [esi+0x3fb2b234]
  4169e6:	sahf   
  4169e7:	jmp    0x54dd:0xcb2530d4
  4169ee:	sub    al,0x4b
  4169f0:	mov    bl,0x30
  4169f2:	pop    eax
  4169f3:	push   ss
  4169f4:	xor    eax,0x7b369184
  4169f9:	fcomp  QWORD PTR [esi-0x1fa5db84]
  4169ff:	mov    bl,0xc7
  416a01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a02:	mov    ebp,DWORD PTR [edx+0x1f]
  416a05:	outs   dx,BYTE PTR ds:[si]
  416a07:	mov    ah,BYTE PTR [ebp-0x6c972f80]
  416a0d:	loop   0x416a86
  416a0f:	xor    BYTE PTR [edi+ebx*8-0x1b],ah
  416a13:	out    dx,eax
  416a14:	jmp    edi
  416a16:	test   edi,ebx
  416a18:	push   esp
  416a19:	sar    edi,1
  416a1b:	(bad)  
  416a1c:	dec    DWORD PTR [bx-0x8ba]
  416a21:	fst    st(4)
  416a23:	lea    esi,[edi+0x14b9ef22]
  416a29:	loopne 0x4169da
  416a2b:	cmp    al,0x3b
  416a2d:	std    
  416a2e:	aad    0xe0
  416a30:	stc    
  416a31:	xchg   edi,eax
  416a32:	(bad)  
  416a33:	stos   BYTE PTR es:[edi],al
  416a34:	in     al,0x9b
  416a36:	and    al,0x5
  416a38:	cdq    
  416a39:	stc    
  416a3a:	and    cl,BYTE PTR [ebx-0x6f]
  416a3d:	sub    eax,DWORD PTR [ebx+0x7e670d33]
  416a43:	cmp    eax,0x9c372533
  416a48:	imul   edi,DWORD PTR [eax+0x4ee73d82],0x14d6bf98
  416a52:	shl    DWORD PTR [edi-0x3f],0xae
  416a56:	jg     0x4169f1
  416a58:	(bad)  
  416a59:	rcl    DWORD PTR [edi],1
  416a5b:	or     DWORD PTR [ebx+0x16],ecx
  416a5e:	mov    ebp,0xe2e28f4e
  416a63:	and    al,bl
  416a65:	rol    DWORD PTR [eax-0x1d3fd7b0],0xe2
  416a6c:	adc    al,bl
  416a6e:	inc    ecx
  416a6f:	pop    ds
  416a70:	lds    ebx,FWORD PTR [edi]
  416a72:	and    BYTE PTR [ebx-0xec53133],dl
  416a78:	je     0x416a17
  416a7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a7b:	repnz xor ch,dl
  416a7e:	fs int3 
  416a80:	rcl    ecx,1
  416a82:	adc    DWORD PTR [edx+0x66cd932c],esi
  416a88:	cmp    DWORD PTR [esi],edi
  416a8a:	cmp    ah,ah
  416a8c:	in     al,dx
  416a8d:	mov    ah,0x82
  416a8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a90:	stos   BYTE PTR es:[edi],al
  416a91:	sub    BYTE PTR [ecx-0x70a14300],al
  416a97:	icebp  
  416a98:	je     0x416ae6
  416a9a:	test   eax,0x54a96654
  416a9f:	inc    esi
  416aa0:	xchg   esi,eax
  416aa1:	xor    dh,BYTE PTR gs:[esi]
  416aa4:	pop    edx
  416aa5:	cmp    eax,0xa5664f1d
  416aaa:	mov    edi,0xa3a38a54
  416aaf:	inc    ebx
  416ab0:	imul   edx,DWORD PTR cs:[edi-0x359cb9b4],0x2b
  416ab8:	sub    esp,DWORD PTR [edx+edx*1-0x56bbf24d]
  416abf:	je     0x416a5b
  416ac1:	icebp  
  416ac2:	js     0x416a90
  416ac4:	jmp    0x6edb94a2
  416ac9:	adc    BYTE PTR [eax],cl
  416acb:	add    al,0xb8
  416acd:	cmp    BYTE PTR [edi-0x6e8a142e],ch
  416ad3:	gs pop ds
  416ad5:	aaa    
  416ad6:	outs   dx,DWORD PTR ds:[esi]
  416ad7:	frstor [ecx+edx*1]
  416ada:	dec    edi
  416adb:	adc    BYTE PTR [ebx+0x162e2945],cl
  416ae1:	test   eax,0xe4f39f9e
  416ae6:	icebp  
  416ae7:	ss int 0x56
  416aea:	sub    DWORD PTR [esi+eiz*1-0x35],0xffffff8d
  416aef:	sbb    ebx,DWORD PTR [ebx+0x36512244]
  416af5:	xlat   BYTE PTR ds:[ebx]
  416af6:	xlat   BYTE PTR ds:[ebx]
  416af7:	mov    al,0x10
  416af9:	js     0x416ae8
  416afb:	mov    ch,0xd7
  416afd:	cmp    BYTE PTR ds:0x1c30653d,bh
  416b03:	mov    cl,0xb5
  416b05:	mov    ecx,0x259b364e
  416b0a:	pop    edi
  416b0b:	enter  0x52b3,0x5e
  416b0f:	addr16 addr16 xchg di,ax
  416b13:	fstp   st(5)
  416b15:	pop    ebp
  416b16:	cs into 
  416b18:	das    
  416b19:	sub    BYTE PTR [esi],dl
  416b1b:	mov    ebp,DWORD PTR [esp+ebp*2-0x52]
  416b1f:	adc    ecx,DWORD PTR [ebx-0x68d6a63a]
  416b25:	shl    DWORD PTR [edx*4+0x31eef7fb],1
  416b2c:	sahf   
  416b2d:	dec    esp
  416b2e:	push   eax
  416b2f:	adc    al,0x85
  416b31:	cmc    
  416b32:	cmc    
  416b33:	xor    eax,0x8611c306
  416b38:	cmp    DWORD PTR [ebx],esp
  416b3a:	lock mov WORD PTR [esi+0x65555443],es
  416b41:	ins    DWORD PTR es:[edi],dx
  416b42:	ins    DWORD PTR es:[edi],dx
  416b43:	sbb    eax,0xf47934c3
  416b48:	lock add edi,eax
  416b4b:	(bad)  
  416b4c:	daa    
  416b4d:	mov    BYTE PTR [edx-0x48647240],al
  416b53:	mov    DWORD PTR [ebx+eax*2+0x44418304],eax
  416b5a:	push   ecx
  416b5b:	mov    ds:0x596068d1,al
  416b60:	push   ss
  416b61:	sbb    ebx,DWORD PTR [ebx+0x43870c5b]
  416b67:	push   ds
  416b68:	aas    
  416b69:	jle    0x416baf
  416b6b:	mov    ebp,0xc402e33e
  416b70:	mov    ds:0x8e8f0e31,al
  416b75:	push   0x73645ab7
  416b7a:	cmp    DWORD PTR [edx],esi
  416b7c:	jmp    0x4aa4c8d
  416b81:	push   ebp
  416b82:	popf   
  416b83:	bound  ebx,QWORD PTR [eax]
  416b85:	push   es
  416b86:	mov    ecx,0xf2f28e5c
  416b8b:	or     cl,ch
  416b8d:	push   esi
  416b8e:	xor    ecx,0x68
  416b91:	int3   
  416b92:	mov    bl,0xcf
  416b94:	ds retf 
  416b96:	pusha  
  416b97:	cmp    BYTE PTR [ebp+edx*8+0x75b5b06c],ah
  416b9e:	add    edx,DWORD PTR [ecx-0x6a]
  416ba1:	sbb    BYTE PTR [esi],cl
  416ba3:	xchg   DWORD PTR [esi+edx*1],ebp
  416ba6:	pop    ss
  416ba7:	shl    DWORD PTR [ebp+edx*1+0x5d],1
  416bab:	shr    eax,cl
  416bad:	test   eax,0x8b69fe26
  416bb2:	dec    esp
  416bb3:	mov    ebx,0x14cf2182
  416bb8:	fistp  QWORD PTR [ebx]
  416bba:	push   ebp
  416bbb:	fstp   DWORD PTR [ecx-0x3f]
  416bbe:	es dec ecx
  416bc0:	not    BYTE PTR [esi+0xe8ec162]
  416bc6:	in     al,dx
  416bc7:	push   ecx
  416bc8:	push   0xffffff92
  416bca:	xor    al,0x1f
  416bcc:	sahf   
  416bcd:	sub    cl,BYTE PTR [edx]
  416bcf:	mov    bl,0x49
  416bd1:	(bad)  
  416bd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416bd3:	add    BYTE PTR [esi],bh
  416bd5:	ror    DWORD PTR [esp+eax*2+0xd9783a7],1
  416bdc:	popf   
  416bdd:	xchg   edi,eax
  416bde:	pop    esi
  416bdf:	stc    
  416be0:	mov    eax,ds:0xdf8dfe1f
  416be5:	cli    
  416be6:	jecxz  0x416c2f
  416be8:	cli    
  416be9:	jg     0x416c43
  416beb:	lea    edi,[eax+0x7b]
  416bee:	repnz sahf 
  416bf0:	xor    al,BYTE PTR [eax]
  416bf2:	movd   ecx,mm6
  416bf5:	jecxz  0x416b96
  416bf7:	dec    edx
  416bf8:	push   esi
  416bf9:	(bad)  
  416bfa:	clc    
  416bfb:	push   edi
  416bfc:	in     al,0xe8
  416bfe:	in     al,dx
  416bff:	ja     0x416bf0
  416c01:	dec    esp
  416c02:	cmp    esp,DWORD PTR [edi+0x70]
  416c05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c06:	mov    bl,0x74
  416c08:	ret    0x5119
  416c0b:	ins    DWORD PTR es:[edi],dx
  416c0c:	call   0x965671af
  416c11:	mov    ebp,0xcf9acf7f
  416c16:	fnsave [edi-0x4a]
  416c19:	in     eax,0x48
  416c1b:	sub    bh,ah
  416c1d:	sti    
  416c1e:	lock or esi,esp
  416c21:	arpl   WORD PTR [ebx-0x5c],bp
  416c24:	adc    edx,DWORD PTR [ecx]
  416c26:	call   0x4d18:0x48e126cd
  416c2d:	push   ebp
  416c2e:	imul   esi,DWORD PTR ds:0xaeaf2ceb,0xa8b769d1
  416c38:	xlat   BYTE PTR ds:[ebx]
  416c39:	jmp    0x416c1f
  416c3b:	repz jns 0x416c64
  416c3e:	shr    DWORD PTR [ecx],cl
  416c40:	jnp    0x416cbd
  416c42:	jnp    0x416bc8
  416c44:	add    BYTE PTR [ecx-0x3e],0x91
  416c48:	or     BYTE PTR [edi+0x7],al
  416c4b:	sti    
  416c4c:	hlt    
  416c4d:	jp     0x416ccc
  416c4f:	mov    bh,0x71
  416c51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c52:	fucomip st,st(7)
  416c54:	and    ecx,DWORD PTR [ecx+0x12]
  416c57:	fwait
  416c58:	pop    ebx
  416c59:	aaa    
  416c5a:	lock sti 
  416c5c:	cld    
  416c5d:	enter  0x4cb2,0x28
  416c61:	sbb    al,0x46
  416c63:	xchg   edx,eax
  416c64:	inc    esp
  416c65:	fs dec ecx
  416c67:	and    bh,BYTE PTR [edi-0x14285bb0]
  416c6d:	icebp  
  416c6e:	lock loope 0x416c74
  416c71:	cli    
  416c72:	std    
  416c73:	push   ds
  416c74:	jle    0x416c35
  416c76:	pop    ds
  416c77:	lds    ebp,FWORD PTR [edi+0x977e830]
  416c7d:	add    al,0x82
  416c7f:	in     al,0xf2
  416c81:	jns    0x416cc5
  416c83:	mov    eax,ds:0xc8204a30
  416c88:	inc    edx
  416c89:	jno    0x416c0c
  416c8b:	push   0xffffffe5
  416c8d:	mov    WORD PTR [edi],?
  416c8f:	fistp  QWORD PTR [eax-0x7d]
  416c92:	push   esi
  416c93:	mov    bl,0x45
  416c95:	cmp    al,0x9e
  416c97:	pusha  
  416c98:	test   eax,0x1600425c
  416c9d:	xchg   edi,eax
  416c9e:	dec    edx
  416c9f:	call   0x5ae6b33e
  416ca4:	mov    eax,ds:0xdf8e7e7a
  416ca9:	scas   eax,DWORD PTR es:[edi]
  416caa:	mov    al,ds:0x5edd1aaa
  416caf:	sqrtps xmm2,XMMWORD PTR [ecx+ecx*8]
  416cb3:	out    0xf3,eax
  416cb5:	inc    esp
  416cb6:	ret    0x7a61
  416cb9:	std    
  416cba:	mov    esi,0x6714a65d
  416cbf:	xchg   ebx,eax
  416cc0:	mov    eax,esi
  416cc2:	arpl   WORD PTR [edx-0x4f],sp
  416cc5:	sbb    BYTE PTR [ebx-0x75],cl
  416cc8:	dec    ebx
  416cc9:	call   0x6aebfb88
  416cce:	inc    esp
  416ccf:	and    dl,BYTE PTR [ecx]
  416cd1:	(bad)  
  416cd3:	push   ss
  416cd4:	xchg   edi,eax
  416cd5:	pop    ss
  416cd6:	xor    eax,0x9256edb7
  416cdb:	inc    esp
  416cdc:	dec    esi
  416cdd:	mov    cs,WORD PTR [edi+0x66]
  416ce0:	pop    ebp
  416ce1:	jge    0x416cd9
  416ce3:	sar    BYTE PTR [edi-0x41],0xa2
  416ce7:	push   eax
  416ce8:	sub    dl,BYTE PTR [ebp+0x3c7b74e8]
  416cee:	mov    esp,0xd9ea9f7f
  416cf3:	sbb    ecx,edx
  416cf5:	js     0x416c8b
  416cf7:	xchg   ebp,eax
  416cf8:	xchg   ebp,eax
  416cf9:	push   ebp
  416cfa:	loop   0x416ced
  416cfc:	cmp    BYTE PTR [ebx],ch
  416cfe:	stos   DWORD PTR es:[edi],eax
  416cff:	stos   DWORD PTR es:[edi],eax
  416d00:	pop    eax
  416d01:	xchg   esi,eax
  416d02:	leave  
  416d03:	ret    
  416d04:	sti    
  416d05:	div    DWORD PTR [eax+0x3c78812c]
  416d0b:	dec    esi
  416d0c:	xor    BYTE PTR [eax],bl
  416d0e:	pusha  
  416d0f:	ja     0x416d88
  416d11:	xchg   edx,ecx
  416d13:	fldcw  WORD PTR [ecx]
  416d15:	mov    ah,BYTE PTR [edx+0x132f2e50]
  416d1b:	(bad)  
  416d1c:	iret   
  416d1d:	sub    dh,cl
  416d1f:	shr    ecx,cl
  416d21:	test   BYTE PTR [ebx-0x6e5d9c5d],ah
  416d27:	or     cl,bl
  416d29:	ins    BYTE PTR es:[edi],dx
  416d2a:	mov    ss,ebx
  416d2c:	xchg   ebx,eax
  416d2d:	adc    esi,esi
  416d2f:	div    edi
  416d31:	mov    cl,0x4c
  416d33:	xchg   ebx,eax
  416d34:	in     eax,0xd5
  416d36:	adc    eax,0xa73a8d1a
  416d3b:	daa    
  416d3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d3d:	clc    
  416d3e:	jl     0x416d7e
  416d40:	xchg   esi,eax
  416d41:	dec    edx
  416d42:	and    eax,0x9d475d0c
  416d47:	dec    esi
  416d48:	icebp  
  416d49:	sti    
  416d4a:	adc    eax,0xb118f1e2
  416d4f:	js     0x416cdd
  416d51:	icebp  
  416d52:	push   0x90c79b34
  416d57:	leave  
  416d58:	xor    BYTE PTR [esi],bl
  416d5a:	lea    esp,[esi+0x3]
  416d5d:	inc    edx
  416d5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d5f:	rcr    ecx,cl
  416d61:	nop
  416d62:	(bad)  
  416d63:	jp     0x416d82
  416d65:	push   ebp
  416d66:	aad    0x41
  416d68:	xchg   esi,eax
  416d69:	enter  0x1ed5,0xb8
  416d6d:	adc    edx,DWORD PTR [eax+0x65a15b25]
  416d73:	shl    DWORD PTR [esi+0x10],1
  416d76:	mul    BYTE PTR [ebx-0x32]
  416d79:	pop    esi
  416d7a:	push   es
  416d7b:	addr16 retf 
  416d7d:	mov    bl,0xe4
  416d7f:	sub    al,0x4b
  416d81:	mov    cl,0xc5
  416d83:	pop    ecx
  416d84:	(bad)  
  416d85:	loop   0x416da1
  416d87:	or     DWORD PTR [ecx],ecx
  416d89:	adc    al,0x4d
  416d8b:	pop    ebx
  416d8c:	jmp    0x416de9
  416d8e:	mov    esi,0x7ebe6fc6
  416d93:	stc    
  416d94:	(bad)
  416d97:	push   es
  416d98:	mov    esp,0x329ef2f3
  416d9d:	add    BYTE PTR [edi],bh
  416d9f:	cmc    
  416da0:	and    bh,BYTE PTR [edi+0x3675f31a]
  416da6:	dec    ebp
  416da7:	sti    
  416da8:	lods   al,BYTE PTR ds:[esi]
  416da9:	popf   
  416daa:	gs sbb esi,ecx
  416dad:	jmp    0x1763:0x38d9c16c
  416db4:	jnp    0x416dc2
  416db6:	int    0x36
  416db8:	or     BYTE PTR [esi-0x26316c43],al
  416dbe:	inc    eax
  416dbf:	imul   esp,edi,0xffffffff
  416dc2:	xchg   BYTE PTR [ebx+0x18],ah
  416dc5:	or     al,0x98
  416dc7:	and    bl,dh
  416dc9:	pop    es
  416dca:	loope  0x416ddb
  416dcc:	adc    cl,BYTE PTR [ecx-0x1a]
  416dcf:	leave  
  416dd0:	fs push edx
  416dd2:	dec    esp
  416dd3:	(bad)  
  416dd4:	arpl   WORD PTR [ebp+ecx*2+0x43],si
  416dd8:	or     DWORD PTR [eax],ebp
  416dda:	or     al,0x87
  416ddc:	std    
  416ddd:	sbb    DWORD PTR [eax],edi
  416ddf:	data16 sbb BYTE PTR [esi+edx*8+0x2e],bl
  416de4:	adc    DWORD PTR [ecx+edx*1+0x59],eax
  416de8:	xchg   edx,eax
  416de9:	imul   edx,esi,0x23468c1b
  416def:	adc    cl,BYTE PTR [ecx-0x2e5965fc]
  416df5:	jmp    0x416dec
  416df7:	sub    BYTE PTR [esp+edx*1],ch
  416dfa:	sub    DWORD PTR [edi-0x6efd429a],edx
  416e00:	push   0x1b86d674
  416e05:	mov    DWORD PTR [eax-0x7f758b2],edx
  416e0b:	adc    eax,0x687676f6
  416e10:	xor    al,0x6b
  416e12:	clc    
  416e13:	gs pop ds
  416e15:	xchg   esi,eax
  416e16:	shr    DWORD PTR gs:[eax+0x478f18d5],1
  416e1d:	in     al,0xb3
  416e1f:	cmp    edx,ecx
  416e21:	sub    ebp,DWORD PTR [ebx]
  416e23:	inc    esp
  416e24:	and    dl,BYTE PTR [ecx+0x16]
  416e27:	mov    ecx,DWORD PTR [ebx+0x4e53a74c]
  416e2d:	dec    esi
  416e2e:	mov    gs,WORD PTR [ecx+0x36]
  416e31:	addr16 in eax,0x45
  416e34:	push   ebp
  416e35:	push   ebp
  416e36:	addr16 sub eax,0x52c19ac5
  416e3c:	test   eax,0x88b162c4
  416e41:	mov    ds:0x152d2c28,al
  416e46:	xor    DWORD PTR ds:0xf97f2f93,ecx
  416e4c:	xor    eax,0x20068d5a
  416e51:	jo     0x416e3a
  416e53:	into   
  416e54:	ins    DWORD PTR es:[edi],dx
  416e55:	bound  esi,QWORD PTR [ecx+0x25a5a518]
  416e5b:	shr    cl,cl
  416e5d:	adc    al,0x8f
  416e5f:	mov    bh,0xb7
  416e61:	jns    0x416e15
  416e63:	std    
  416e64:	test   BYTE PTR [edx-0x43],bh
  416e67:	dec    esi
  416e68:	sub    dl,BYTE PTR [ebp+0x30b8a166]
  416e6e:	repz loopne 0x416e8c
  416e71:	imul   esi,DWORD PTR [edx+edi*1+0x5d],0xffffffee
  416e76:	fistp  QWORD PTR [edi-0x40]
  416e79:	leave  
  416e7a:	leave  
  416e7b:	xor    DWORD PTR [eax],ecx
  416e7d:	add    ch,BYTE PTR [ebx]
  416e7f:	sub    ebp,DWORD PTR [ebx]
  416e81:	inc    esp
  416e82:	and    edx,DWORD PTR [ecx]
  416e84:	xchg   esi,eax
  416e85:	retf   
  416e86:	retf   
  416e87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e88:	shr    BYTE PTR [ecx],cl
  416e8a:	push   ds
  416e8b:	ds js  0x416e4e
  416e8e:	loope  0x416e61
  416e90:	and    DWORD PTR [ebp-0x325260a2],edi
  416e96:	or     eax,0x48161616
  416e9b:	and    al,0x92
  416e9d:	sub    al,0x97
  416e9f:	retf   
  416ea0:	xor    al,0x1a
  416ea2:	sub    eax,0xd076f776
  416ea7:	je     0x416e46
  416ea9:	inc    edx
  416eaa:	popa   
  416eab:	cmp    DWORD PTR [eax+0x3c],0x29d9d9ce
  416eb2:	xchg   BYTE PTR [esi-0x7ef9e45d],ch
  416eb8:	inc    eax
  416eb9:	nop
  416eba:	dec    eax
  416ebb:	and    al,0xcc
  416ebd:	out    0xd6,al
  416ebf:	(bad)  
  416ec0:	fldcw  WORD PTR [eax-0x51]
  416ec3:	popf   
  416ec4:	sbb    eax,0xd81fdfa
  416ec9:	and    al,0xa6
  416ecb:	mov    eax,0x33473f38
  416ed0:	data16 jmp 0x416e90
  416ed3:	mov    ds:0xf2a508d1,eax
  416ed8:	xor    al,ch
  416eda:	test   DWORD PTR [edx],esp
  416edc:	(bad)  
  416edd:	pop    ds
  416ede:	cmp    eax,0xb21a3862
  416ee3:	mov    al,0x58
  416ee5:	fs stos BYTE PTR es:[edi],al
  416ee7:	stos   BYTE PTR es:[edi],al
  416ee8:	in     al,dx
  416ee9:	ds jns 0x416f2e
  416eec:	mov    ebx,0x2f9f24d5
  416ef1:	pusha  
  416ef2:	pop    edx
  416ef3:	push   ss
  416ef4:	fcmovnu st,st(3)
  416ef6:	fisttp DWORD PTR [eax]
  416ef8:	add    BYTE PTR [eax-0x4f],0x58
  416efc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416efd:	shr    DWORD PTR [esi-0x2f],cl
  416f00:	jmp    0xf4273879
  416f05:	add    BYTE PTR [edi+ebx*4-0x1a306c61],bl
  416f0c:	cdq    
  416f0d:	push   0x53
  416f0f:	stos   BYTE PTR es:[edi],al
  416f10:	out    0xe7,eax
  416f12:	test   bl,al
  416f14:	popa   
  416f15:	dec    esi
  416f16:	mov    cs,WORD PTR [edi+0x68e3c649]
  416f1c:	dec    edx
  416f1d:	test   al,bh
  416f1f:	lds    edi,FWORD PTR [ebp+0x2]
  416f22:	cli    
  416f23:	hlt    
  416f24:	retf   0x2556
  416f27:	addr16 fwait
  416f29:	xchg   ecx,eax
  416f2a:	test   BYTE PTR ds:0x2063d91c,bh
  416f30:	fdiv   QWORD PTR [ecx]
  416f32:	out    0xf6,eax
  416f34:	jecxz  0x416ed8
  416f36:	cmp    BYTE PTR [edi-0x11],bl
  416f39:	out    0x46,al
  416f3b:	bswap  esi
  416f3d:	jmp    0x416f86
  416f3f:	std    
  416f40:	sbb    ebx,DWORD PTR [edi]
  416f42:	stc    
  416f43:	(bad)  
  416f44:	jg     0x416f2a
  416f46:	xlat   BYTE PTR ds:[ebx]
  416f47:	(bad)  
  416f48:	out    dx,eax
  416f49:	aas    
  416f4a:	jl     0x416f80
  416f4c:	std    
  416f4d:	dec    esi
  416f4e:	jmp    0x416f12
  416f50:	cmp    esp,DWORD PTR ds:0xe00c19ef
  416f56:	fisubr WORD PTR [edi-0x6e4c1704]
  416f5c:	popf   
  416f5d:	jg     0x416f5d
  416f5f:	imul   ebp,DWORD PTR [ebx],0x17a88f66
  416f65:	in     al,dx
  416f66:	popf   
  416f67:	jae    0x416fa3
  416f69:	mov    bl,0x30
  416f6b:	int    0xe
  416f6d:	mov    esp,0x8ed7d5dc
  416f72:	out    0x37,eax
  416f74:	in     eax,dx
  416f75:	and    eax,0x6af8f61b
  416f7a:	shl    DWORD PTR [esi+eiz*2+0x0],cl
  416f7e:	cmp    al,0x38
  416f80:	and    BYTE PTR [eax+0x41],0xc3
  416f84:	xchg   edi,eax
  416f85:	mov    ds:0xfb48c42d,al
  416f8a:	add    al,0x4
  416f8c:	shl    DWORD PTR [edx],cl
  416f8e:	cdq    
  416f8f:	dec    esp
  416f90:	popa   
  416f91:	pop    ecx
  416f92:	push   eax
  416f93:	cs xchg edi,eax
  416f95:	rcl    esp,1
  416f97:	or     DWORD PTR [edx+0x142851a6],ebx
  416f9d:	test   al,0xd7
  416f9f:	fwait
  416fa0:	or     al,0xfb
  416fa2:	add    edx,DWORD PTR [esi+0x4a]
  416fa5:	gs mov edx,0xdefd0edd
  416fab:	sub    BYTE PTR [eax+0x34],0xc6
  416faf:	retf   0x1f8a
  416fb2:	inc    ebp
  416fb3:	or     DWORD PTR [eax+0x1a],esp
  416fb6:	es es fcom st(3)
  416fba:	imul   esp,ebx,0xffffffd4
  416fbd:	imul   esi,DWORD PTR [ebp-0x32],0xffffffce
  416fc1:	into   
  416fc2:	pop    eax
  416fc3:	pop    esp
  416fc4:	pop    esp
  416fc5:	and    al,0x97
  416fc7:	sub    esi,DWORD PTR [eax]
  416fc9:	sahf   
  416fca:	dec    esi
  416fcb:	call   0x4addaac5
  416fd0:	(bad)  
  416fd1:	cmp    al,0xfb
  416fd3:	cld    
  416fd4:	rep lods al,BYTE PTR ds:[esi]
  416fd6:	outs   dx,DWORD PTR ds:[esi]
  416fd7:	outs   dx,BYTE PTR ds:[esi]
  416fd8:	shr    bl,cl
  416fda:	jbe    0x416fed
  416fdc:	mov    DWORD PTR gs:[esi-0x49],ebp
  416fe0:	mov    esp,DWORD PTR [ecx+0x1a]
  416fe3:	sub    cl,al
  416fe5:	add    BYTE PTR [edx+0x5dab5028],al
  416feb:	mov    ds:0xc96453aa,al
  416ff0:	(bad)  
  416ff1:	in     eax,dx
  416ff2:	cmp    esi,DWORD PTR [edi-0x30]
  416ff5:	or     eax,0x8b4cb03
  416ffa:	add    al,0x14
  416ffc:	push   ds
  416ffd:	cmp    eax,0xc5c5c47a
  417002:	cmp    DWORD PTR [ebx+0x7e28ebab],ebp
  417008:	pop    ds
  417009:	ror    DWORD PTR [eax-0x6c],1
  41700c:	mov    gs,WORD PTR [esi+0x20]
  41700f:	or     dl,al
  417011:	mov    eax,?
  417013:	and    ecx,DWORD PTR [ebx-0x38]
  417016:	mov    dl,0xcf
  417018:	outs   dx,BYTE PTR ds:[esi]
  417019:	add    al,0x9a
  41701b:	xor    BYTE PTR [esi],bl
  41701d:	pop    ecx
  41701f:	mov    dl,0x90
  417021:	fs cdq 
  417023:	dec    esp
  417024:	sub    dh,BYTE PTR [ecx]
  417026:	fld    TBYTE PTR [ebp-0x70]
  417029:	dec    esi
  41702a:	jae    0x417062
  41702c:	lods   eax,DWORD PTR ds:[esi]
  41702d:	shr    dh,cl
  41702f:	mov    ah,0xd0
  417031:	push   esp
  417032:	(bad)  
  417033:	leave  
  417034:	fs inc edx
  417036:	cmp    al,0x1a
  417038:	inc    ebp
  417039:	int    0x64
  41703b:	lock sti 
  41703d:	adc    eax,0xaa645924
  417042:	stos   BYTE PTR es:[edi],al
  417043:	mov    bl,0xf2
  417045:	lahf   
  417046:	xor    DWORD PTR gs:[ecx-0x3870e6b4],ebx
  41704d:	pop    esp
  41704e:	pop    esi
  41704f:	pop    esp
  417050:	pusha  
  417051:	call   0x526e2270
  417056:	sub    dl,BYTE PTR [ebp-0x3bbcfaf8]
  41705c:	arpl   WORD PTR [ecx],si
  41705e:	out    dx,al
  41705f:	mov    edi,0xc3c38f79
  417064:	jge    0x417008
  417066:	rcr    DWORD PTR [eax],1
  417068:	scas   eax,DWORD PTR es:[edi]
  417069:	jl     0x41705b
  41706b:	inc    ebx
  41706c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41706d:	outs   dx,BYTE PTR ds:[esi]
  41706e:	and    al,0xe8
  417070:	cmc    
  417071:	xchg   bx,ax
  417073:	mov    BYTE PTR [ecx+ebx*2-0x3a],ah
  417077:	mov    dl,0x20
  417079:	outs   dx,DWORD PTR ds:[esi]
  41707a:	sub    ebp,edx
  41707c:	std    
  41707d:	sti    
  41707e:	idiv   DWORD PTR [eax]
  417080:	fcomp  st(7)
  417082:	and    ebx,DWORD PTR [ecx+0x2bcaf24c]
  417088:	pop    ds
  417089:	(bad)  
  41708a:	out    dx,eax
  41708b:	div    DWORD PTR [ebx]
  41708d:	sbb    cl,BYTE PTR [edi-0x6b654a97]
  417093:	xchg   esi,eax
  417094:	dec    ebx
  417095:	les    edx,FWORD PTR [ebx+0x9]
  417098:	outs   dx,BYTE PTR ds:[esi]
  417099:	fnstsw WORD PTR [edx-0x73130ab3]
  41709f:	loope  0x417111
  4170a1:	dec    eax
  4170a2:	sub    al,0x16
  4170a4:	add    esp,DWORD PTR [eax+0x77]
  4170a7:	ja     0x417030
  4170a9:	outs   dx,BYTE PTR ds:[esi]
  4170aa:	mov    bh,0x43
  4170ac:	sub    BYTE PTR [esp+eiz*4],bl
  4170af:	shr    DWORD PTR [edx+esi*2+0x70],1
  4170b3:	jo     0x41703d
  4170b5:	in     al,dx
  4170b6:	repz xchg ecx,eax
  4170b8:	retf   
  4170b9:	out    0x39,eax
  4170bb:	cmp    DWORD PTR [esi],edi
  4170bd:	mov    ds:0x4e93efd7,al
  4170c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170c3:	cmp    BYTE PTR [ebx],bh
  4170c5:	cmp    DWORD PTR [ebp-0x30],esp
  4170c8:	out    dx,eax
  4170c9:	shl    edx,1
  4170cb:	sti    
  4170cc:	inc    eax
  4170cd:	adc    BYTE PTR [eax+0x26],cl
  4170d0:	jecxz  0x417106
  4170d2:	inc    edi
  4170d3:	sbb    bh,BYTE PTR [ebp-0x52bb7198]
  4170d9:	xchg   DWORD PTR [esi+0x2b],ebp
  4170dc:	mov    bl,0xcc
  4170de:	sub    al,0x25
  4170e0:	xor    al,0x9c
  4170e2:	push   ebp
  4170e3:	imul   esp,edx,0xc
  4170e6:	cmp    esi,edx
  4170e8:	mov    ebx,esi
  4170ea:	adc    edx,ebp
  4170ec:	add    dh,bl
  4170ee:	lea    ecx,[ebx-0x7e]
  4170f1:	in     eax,0x59
  4170f3:	mov    edx,0xb2ca7cc2
  4170f8:	and    eax,0xad1b5c43
  4170fd:	(bad)  
  4170fe:	sbb    al,BYTE PTR [edi-0x3601fc61]
  417104:	ja     0x417164
  417106:	and    ebx,esi
  417108:	sbb    DWORD PTR [ecx-0x31],edi
  41710b:	inc    esp
  41710c:	add    bh,bh
  41710e:	in     eax,dx
  41710f:	retf   
  417110:	sar    DWORD PTR [edi-0x60d528ec],1
  417116:	adc    ah,bh
  417118:	mov    bl,0x35
  41711a:	push   ebx
  41711b:	push   cs
  41711c:	shl    bh,1
  41711e:	out    dx,al
  41711f:	mov    ebp,0x8d237b7
  417124:	push   cs
  417125:	mov    edx,0xb52cce6f
  41712a:	outs   dx,BYTE PTR ds:[esi]
  41712b:	jp     0x4170fd
  41712d:	jle    0x41716a
  41712f:	xor    dh,BYTE PTR [eax]
  417131:	int    0x39
  417133:	repnz outs dx,DWORD PTR ds:[esi]
  417135:	sbb    BYTE PTR [eax],ah
  417137:	jmp    0xb36dfa8c
  41713c:	mov    ds:0x901a22dc,eax
  417141:	adc    DWORD PTR ds:0x89d86ec9,esp
  417147:	adc    cl,BYTE PTR [ebp+0x7e5eed86]
  41714d:	aas    
  41714e:	fstp   DWORD PTR [esi+ecx*1+0x49]
  417152:	adc    dh,cl
  417154:	stc    
  417155:	jl     0x4170fb
  417157:	xchg   edx,eax
  417158:	sub    DWORD PTR [edx-0x1f],eax
  41715b:	xor    BYTE PTR [ecx-0x2ca2e5b4],ch
  417161:	data16 or dl,BYTE PTR [ebp-0x3bb0ed33]
  417168:	cmp    DWORD PTR [ecx],edi
  41716a:	mov    ds:0x4c926cdd,al
  417170:	es push ecx
  417172:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417173:	push   ebx
  417174:	dec    esi
  417175:	dec    esi
  417176:	dec    esi
  417177:	call   0x92664bf2
  41717c:	or     DWORD PTR [edx-0xf],esp
  41717f:	cmp    ch,bh
  417181:	outs   dx,BYTE PTR ds:[esi]
  417182:	xchg   edi,eax
  417183:	push   0x2c0a3674
  417188:	adc    al,0xe
  41718a:	push   ebx
  41718b:	pop    eax
  41718c:	sub    BYTE PTR [edx-0x386dbb4],dl
  417192:	call   0x27e8d8b8
  417197:	push   0xa52b369a
  41719c:	imul   ebp,DWORD PTR [edx],0x5484c993
  4171a2:	cmp    cl,BYTE PTR [ebp+0x26]
  4171a5:	xchg   ebx,eax
  4171a6:	inc    ecx
  4171a7:	adc    BYTE PTR [edi+0x58],ah
  4171aa:	inc    ecx
  4171ab:	xor    bl,BYTE PTR [ecx-0x4021e20]
  4171b1:	aam    0xea
  4171b3:	xor    eax,0x5b018386
  4171b8:	pop    ebx
  4171b9:	aaa    
  4171ba:	sub    BYTE PTR [esp+ebp*1],ch
  4171bd:	adc    BYTE PTR [ebp+0x5b5f59c7],cl
  4171c3:	mov    ds:0xbdce7e7a,eax
  4171c8:	jnp    0x4171c1
  4171ca:	imul   esi,DWORD PTR [edx+ebx*1],0x6ccafcf8
  4171d1:	jg     0x417171
  4171d3:	popa   
  4171d4:	push   eax
  4171d5:	cs das 
  4171d7:	mov    ds:0x8f0e7e28,eax
  4171dc:	(bad)  
  4171dd:	cmp    DWORD PTR [esp+edi*1],edi
  4171e0:	inc    esp
  4171e1:	shl    DWORD PTR [ebp-0x4],cl
  4171e4:	retf   0x3d2c
  4171e7:	or     DWORD PTR [edi+0x254a9422],eax
  4171ed:	cs das 
  4171ef:	imul   edi,DWORD PTR [eax+edi*2],0xfffffff8
  4171f3:	nop
  4171f4:	pop    edx
  4171f5:	in     eax,dx
  4171f6:	adc    al,ch
  4171f8:	scas   eax,DWORD PTR es:[edi]
  4171f9:	push   eax
  4171fa:	sub    al,0x16
  4171fc:	icebp  
  4171fd:	stc    
  4171fe:	std    
  4171ff:	fdivr  QWORD PTR [edx-0x28aae48b]
  417205:	clc    
  417206:	retf   0xbf97
  417209:	int3   
  41720a:	(bad)  
  41720c:	sub    DWORD PTR [edx-0x29148cd8],esp
  417212:	sub    eax,0xa904f1e2
  417217:	je     0x4171b3
  417219:	dec    eax
  41721a:	xor    al,0xca
  41721c:	loope  0x4171df
  41721e:	ds mov ebp,0xdfbf00fe
  417224:	inc    edi
  417225:	cs xchg edi,eax
  417227:	mov    ds:0xbbb06ad9,eax
  41722c:	mov    ebx,0x26416983
  417231:	popf   
  417232:	es xchg ecx,eax
  417234:	mov    WORD PTR [ebx+0x3246b2b2],?
  41723a:	xchg   ecx,eax
  41723b:	pusha  
  41723c:	ja     0x4172b5
  41723e:	xchg   DWORD PTR [ecx-0x41],eax
  417241:	dec    edi
  417242:	and    al,0x1c
  417244:	and    DWORD PTR [edx],edx
  417246:	lea    esi,[eax+0x70]
  417249:	mov    al,0xcf
  41724b:	inc    cl
  41724d:	shr    DWORD PTR [ebp+ebx*4-0x4fea8687],0x10
  417255:	add    al,0x81
  417257:	(bad)  
  417258:	pusha  
  417259:	mov    dl,ah
  41725b:	div    DWORD PTR [ebx+0x3a41b1b6]
  417261:	xchg   ebp,eax
  417262:	out    0xe4,al
  417264:	clc    
  417265:	or     bl,dl
  417267:	xor    BYTE PTR [ecx+0x5e],bl
  41726a:	pop    esi
  41726b:	mov    eax,ds:0xab516cd1
  417270:	pop    ebp
  417271:	nop
  417272:	dec    edx
  417273:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417274:	sbb    DWORD PTR [ebp+0x5f9f9c86],ecx
  41727a:	adc    BYTE PTR [eax+0x2],dl
  41727d:	mov    BYTE PTR [edx+0x2152b548],dl
  417283:	mov    bh,0x50
  417285:	and    BYTE PTR [esi+ebx*4],bl
  417288:	lea    esi,[ecx+0x4b]
  41728b:	and    eax,0x9d548c53
  417290:	dec    ecx
  417291:	std    
  417292:	cwde   
  417293:	inc    edx
  417294:	mov    bh,0x82
  417296:	popa   
  417297:	jnp    0x41730b
  417299:	addr16 push edi
  41729b:	mov    eax,ds:0xb3df8124
  4172a0:	inc    esi
  4172a1:	or     eax,0xebc68e66
  4172a6:	in     eax,dx
  4172a7:	ror    esi,0xff
  4172aa:	in     eax,dx
  4172ab:	in     eax,0x2b
  4172ad:	into   
  4172ae:	out    0x26,al
  4172b0:	imul   DWORD PTR [edi-0x40]
  4172b3:	aam    0x94
  4172b5:	in     al,0x7f
  4172b7:	je     0x417268
  4172b9:	neg    DWORD PTR [esi-0x6101b6e7]
  4172bf:	mov    BYTE PTR [eax],al
  4172c1:	push   ds
  4172c2:	(bad)  
  4172c3:	fidivr DWORD PTR [edi-0x13]
  4172c6:	(bad)  
  4172c8:	stc    
  4172c9:	xchg   edi,eax
  4172ca:	lahf   
  4172cb:	pop    ss
  4172cc:	jl     0x41724e
  4172ce:	daa    
  4172cf:	mov    edi,0x39505777
  4172d4:	jmp    0x41727f
  4172d6:	add    eax,0xfb39eecf
  4172db:	addr16 dec ecx
  4172dd:	pushf  
  4172de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172df:	add    eax,0xc70c0ece
  4172e4:	adc    BYTE PTR [eax],bl
  4172e6:	mov    edx,0xd0e8098d
  4172eb:	xor    edi,ebp
  4172ed:	add    al,0x2
  4172ef:	sbb    DWORD PTR [ecx],0x50944609
  4172f5:	aad    0x29
  4172f7:	test   DWORD PTR [edx-0x7f],eax
  4172fa:	jle    0x4172b3
  4172fc:	dec    ebx
  4172fd:	sub    bl,BYTE PTR [ebp+0x528e1426]
  417303:	scas   eax,DWORD PTR es:[edi]
  417304:	aaa    
  417305:	or     BYTE PTR [edi+0x2993a4c3],al
  41730b:	sbb    ch,ch
  41730d:	es stos BYTE PTR es:[edi],al
  41730f:	stos   BYTE PTR es:[edi],al
  417310:	push   ecx
  417311:	cs das 
  417313:	xor    ebx,DWORD PTR [ecx-0x24242674]
  417319:	and    edx,DWORD PTR [ebp-0x45454eb4]
  41731f:	(bad)  
  417320:	jo     0x417352
  417322:	in     al,0xf2
  417324:	repnz adc al,BYTE PTR [ecx+0x14]
  417328:	sub    BYTE PTR [ebp+0x74536796],dl
  41732e:	push   es
  41732f:	jge    0x41735d
  417331:	shl    DWORD PTR [edx-0xebbaf48],cl
  417337:	stc    
  417338:	mov    dh,al
  41733a:	mov    ds:0xea0d9ab4,al
  41733f:	mov    ch,0x1a
  417341:	mov    DWORD PTR [eax-0x64],edi
  417344:	loop   0x417398
  417346:	or     DWORD PTR [ebp+0x37],ecx
  417349:	cwde   
  41734a:	mov    WORD PTR [edi],fs
  41734c:	xor    al,0x1a
  41734e:	jne    0x4173c7
  417350:	test   BYTE PTR [esi-0x53],dl
  417353:	push   ecx
  417354:	daa    
  417355:	popf   
  417356:	dec    esp
  417357:	jb     0x4173d5
  417359:	jb     0x41731d
  41735b:	fsubp  st(6),st
  41735d:	push   ds
  41735e:	leave  
  41735f:	push   esp
  417360:	xchg   edx,eax
  417361:	push   edx
  417362:	test   eax,0xa295224c
  417367:	fucomp st(5)
  417369:	mov    al,ds:0xa1860a28
  41736e:	jecxz  0x417367
  417370:	sti    
  417371:	mov    DWORD PTR [ebp-0x5d],eax
  417374:	test   BYTE PTR [ebx+0x73f3cc11],ah
  41737a:	cli    
  41737b:	mov    ebp,0x9f7e832e
  417380:	aad    0xd5
  417382:	xor    eax,0xf0565756
  417387:	sti    
  417388:	std    
  417389:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41738a:	adc    dh,BYTE PTR [ecx+0x26]
  41738d:	shr    DWORD PTR [ecx],cl
  41738f:	pop    edi
  417390:	cld    
  417391:	rcl    BYTE PTR [edi],cl
  417393:	sbb    DWORD PTR [edi],ecx
  417395:	inc    edi
  417396:	pop    eax
  417397:	xchg   esi,eax
  417398:	(bad)
  41739b:	div    BYTE PTR [ecx]
  41739d:	loop   0x417370
  41739f:	cmp    BYTE PTR [edx-0x5ab16e52],bl
  4173a5:	js     0x417394
  4173a7:	mov    ch,0xd7
  4173a9:	test   al,0xd7
  4173ab:	push   0xffffffc8
  4173ad:	jle    0x4173ee
  4173af:	pop    ebx
  4173b0:	pop    ebx
  4173b1:	mov    bl,0xd9
  4173b3:	add    DWORD PTR [esi-0x3bb76e9b],eax
  4173b9:	imul   esi,DWORD PTR [ebp-0x755597a6],0xb248cb24
  4173c3:	les    ebp,FWORD PTR [eax+0x34]
  4173c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173c7:	pop    edx
  4173c8:	test   eax,0x993ae9a0
  4173cd:	dec    esp
  4173ce:	call   0xb0a0:0x251952a5
  4173d5:	mov    dh,0xb6
  4173d7:	xchg   BYTE PTR [esi-0x1c842317],ah
  4173dd:	int    0x59
  4173df:	retf   
  4173e0:	outs   dx,DWORD PTR ds:[esi]
  4173e1:	sub    ah,al
  4173e3:	jmp    0x9e31:0xaaaa0aca
  4173ea:	mov    WORD PTR [eax-0x2b],ss
  4173ed:	pop    ecx
  4173ee:	aas    
  4173ef:	mov    edi,0xeb73f3e2
  4173f4:	into   
  4173f5:	sbb    eax,0xe716ed5a
  4173fa:	out    0xe7,eax
  4173fc:	dec    esp
  4173fd:	(bad)  
  4173fe:	push   ebx
  4173ff:	push   esp
  417400:	push   ebp
  417401:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417402:	aad    0x6e
  417404:	mov    cl,0xbd
  417406:	mov    ebp,0xf0a0204d
  41740b:	in     al,dx
  41740c:	mov    bl,0x77
  41740e:	dec    ecx
  41740f:	adc    ch,BYTE PTR es:[eax-0x2c44b966]
  417416:	es xchg edi,eax
  417418:	int    0xa1
  41741a:	xchg   esp,eax
  41741b:	add    dl,BYTE PTR [edi+edx*1]
  41741e:	xchg   edi,eax
  41741f:	call   0x13662f9a
  417424:	dec    ecx
  417425:	outs   dx,BYTE PTR ds:[esi]
  417426:	fnstsw WORD PTR [edx+0x40d9a345]
  41742c:	adc    al,0x61
  41742e:	jne    0x41749d
  417430:	adc    eax,0x9dd19c51
  417435:	pop    ss
  417436:	pop    ss
  417437:	push   ss
  417438:	sbb    DWORD PTR [edi-0x3a],ecx
  41743b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41743c:	shr    BYTE PTR [ecx+0x26],cl
  41743f:	xchg   ebx,eax
  417440:	or     DWORD PTR [edx+0x15303228],edx
  417446:	push   esp
  417447:	jnp    0x4173f4
  417449:	adc    al,dh
  41744b:	jl     0x417478
  41744d:	mov    bl,0xc4
  41744f:	mov    esp,0x7677e46a
  417454:	xor    edx,esp
  417456:	icebp  
  417457:	inc    dl
  417459:	in     al,dx
  41745a:	mov    ecx,0x39920586
  41745f:	add    ecx,DWORD PTR [esi-0x263f6b63]
  417465:	fwait
  417466:	sub    bl,bh
  417468:	and    DWORD PTR [ecx],edi
  41746a:	scas   al,BYTE PTR es:[edi]
  41746b:	jle    0x417469
  41746d:	aaa    
  41746e:	(bad)  
  41746f:	fwait
  417470:	pop    ss
  417471:	xchg   esi,eax
  417472:	inc    dl
  417474:	aas    
  417475:	jl     0x417474
  417477:	in     al,dx
  417478:	aas    
  417479:	mov    ah,0x9e
  41747b:	mov    esp,0x444f7915
  417480:	add    BYTE PTR [edi],bh
  417482:	cmc    
  417483:	arpl   WORD PTR [edi],bx
  417485:	jnp    0x4174c5
  417487:	je     0x41747d
  417489:	mov    ebx,0x803905f
  41748e:	out    dx,al
  41748f:	scas   al,BYTE PTR es:[edi]
  417490:	cmp    al,0x73
  417492:	lea    cx,[ebp+0x3]
  417496:	ja     0x41747f
  417498:	popf   
  417499:	gs int3 
  41749b:	inc    ebx
  41749c:	jl     0x41748a
  41749e:	cld    
  41749f:	fidiv  WORD PTR [eax+0x52735f15]
  4174a5:	add    BYTE PTR [ebx+0xe],ah
  4174a8:	add    BYTE PTR [edx],bh
  4174aa:	js     0x41746c
  4174ac:	fs add al,bh
  4174af:	bound  eax,QWORD PTR [esi-0x33da06b7]
  4174b5:	leave  
  4174b6:	sbb    BYTE PTR [ecx-0x6e],dl
  4174b9:	imul   esi,DWORD PTR [edi+0x49d3a4db],0xc31efdfa
  4174c3:	loope  0x41744d
  4174c5:	(bad)
  4174c8:	cs das 
  4174ca:	das    
  4174cb:	mov    eax,0xbf20bf3c
  4174d0:	push   eax
  4174d1:	pusha  
  4174d2:	xor    bl,BYTE PTR [ecx-0x7c4c444e]
  4174d8:	sub    BYTE PTR [ecx+0x4],cl
  4174db:	cld    
  4174dc:	or     dl,BYTE PTR [edi-0x2245aa19]
  4174e2:	cs jle 0x417484
  4174e5:	lahf   
  4174e6:	pusha  
  4174e7:	sub    BYTE PTR [eax-0x51],cl
  4174ea:	xlat   BYTE PTR ds:[ebx]
  4174eb:	inc    ebp
  4174ec:	mov    ah,0xbb
  4174ee:	cmc    
  4174ef:	loop   0x4174c2
  4174f1:	sbb    BYTE PTR [ecx-0x2040fd88],dh
  4174f7:	(bad)  
  4174f8:	jo     0x417532
  4174fa:	cmp    BYTE PTR fs:[eax],bl
  4174fd:	xchg   edx,eax
  4174fe:	int    0xe5
  417500:	sbb    DWORD PTR [edi-0x420d0299],ecx
  417506:	out    dx,al
  417507:	sub    al,0x4c
  417509:	cs xchg ebp,eax
  41750b:	retf   0xfa68
  41750e:	ins    BYTE PTR es:[edi],dx
  41750f:	test   al,0x47
  417511:	xor    BYTE PTR [eax],bl
  417513:	inc    eax
  417514:	aad    0x35
  417516:	je     0x417575
  417518:	daa    
  417519:	fwait
  41751a:	int    0x52
  41751c:	scas   eax,DWORD PTR es:[edi]
  41751d:	aad    0xd8
  41751f:	aas    
  417520:	cwde   
  417521:	or     eax,0xe42858e7
  417526:	(bad)  
  417528:	fsub   QWORD PTR [edx]
  41752a:	sbb    BYTE PTR [edx+esi*4],cl
  41752d:	mov    dh,0xb6
  41752f:	into   
  417530:	fs cmp ah,ch
  417533:	(bad)  
  417534:	mov    ebp,0x1e1d1c7b
  417539:	popa   
  41753a:	pop    edx
  41753b:	mov    DWORD PTR es:[eax+0x2],edi
  41753f:	retf   
  417540:	and    BYTE PTR [eax+0x28],0x4c
  417544:	sub    bl,BYTE PTR [ebp+0x71efdba2]
  41754a:	mov    al,0x7f
  41754c:	sub    BYTE PTR [edx-0x67f7df97],0x86
  417553:	leave  
  417554:	js     0x41758a
  417556:	(bad)
  41755b:	retf   
  41755c:	dec    ebx
  41755d:	push   0xfffffff5
  41755f:	cli    
  417560:	lods   al,BYTE PTR ds:[esi]
  417561:	xor    al,BYTE PTR [edx+0x223478c5]
  417567:	xchg   ebx,eax
  417568:	retf   
  417569:	adc    cl,BYTE PTR [edi-0x40c7463b]
  41756f:	in     al,0xc9
  417571:	xchg   ebx,eax
  417572:	daa    
  417573:	hlt    
  417574:	cli    
  417575:	jge    0x417539
  417577:	mov    eax,ds:0x8e5c9910
  41757c:	je     0x4175a8
  41757e:	int    0xc6
  417580:	mov    BYTE PTR [esi],0x27
  417583:	daa    
  417584:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417585:	ins    BYTE PTR es:[edi],dx
  417586:	outs   dx,DWORD PTR ds:[esi]
  417587:	aas    
  417588:	out    0xfc,al
  41758a:	loop   0x41750e
  41758c:	jl     0x4175bc
  41758e:	iret   
  41758f:	cli    
  417590:	cli    
  417591:	push   es
  417592:	or     BYTE PTR [edx],al
  417594:	test   eax,0xd3550a54
  417599:	ins    BYTE PTR es:[edi],dx
  41759a:	cmp    dh,BYTE PTR [edi+ecx*4-0x798e9d7b]
  4175a1:	hlt    
  4175a2:	aas    
  4175a3:	jl     0x417565
  4175a5:	jmp    0x54ea7f9b
  4175aa:	call   0x891:0xc2358df5
  4175b1:	icebp  
  4175b2:	pop    eax
  4175b3:	mov    WORD PTR [esi-0x41],?
  4175b6:	inc    edi
  4175b7:	mov    bl,0xd9
  4175b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175ba:	push   eax
  4175bb:	pop    esp
  4175bc:	pusha  
  4175bd:	mov    eax,ds:0xf6f1e050
  4175c2:	arpl   dx,bp
  4175c4:	cmc    
  4175c5:	push   es
  4175c6:	add    DWORD PTR [eax-0x80],0xd1cf2e5c
  4175cd:	icebp  
  4175ce:	adc    DWORD PTR [ebx],edi
  4175d0:	dec    edi
  4175d1:	push   ds
  4175d2:	xchg   ebx,eax
  4175d3:	dec    ecx
  4175d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4175d5:	pop    ecx
  4175d6:	pop    eax
  4175d7:	pop    esp
  4175d8:	pushf  
  4175d9:	adc    DWORD PTR [esi+eiz*4+0x13],edi
  4175dd:	and    dl,BYTE PTR [ecx+0x7c44f130]
  4175e3:	mov    dh,0x34
  4175e5:	fs xor al,0x63
  4175e8:	inc    ebp
  4175e9:	(bad)  
  4175ea:	bound  esi,QWORD PTR [ecx+0x6]
  4175ed:	sbb    DWORD PTR [esi],0xffffff89
  4175f0:	fs adc al,bl
  4175f3:	xor    BYTE PTR [ecx],dl
  4175f5:	inc    ebp
  4175f6:	add    ebx,ecx
  4175f8:	mov    dl,0x68
  4175fa:	ss sbb ebp,eax
  4175fd:	xchg   esi,eax
  4175fe:	adc    BYTE PTR [esi-0x27],0xa1
  417602:	sar    BYTE PTR [ebx],1
  417604:	popf   
  417605:	scas   eax,DWORD PTR es:[edi]
  417606:	pusha  
  417607:	mov    bh,0xef
  417609:	xor    ecx,edx
  41760b:	mul    ah
  41760d:	push   cs
  41760e:	xor    al,ch
  417610:	in     al,0xf6
  417612:	cs loopne 0x41759c
  417615:	popf   
  417616:	xor    cl,BYTE PTR [eax-0x5d33520d]
  41761c:	mov    bl,0x5b
  41761e:	rol    esi,1
  417620:	add    BYTE PTR [ecx+ecx*1+0x2c],al
  417624:	fisttp QWORD PTR [edx]
  417626:	mov    WORD PTR [esp+ecx*8-0x6a0d803d],ss
  41762d:	fidivr DWORD PTR [ebx+0x62]
  417630:	inc    ecx
  417631:	jmp    0xb04398b1
  417636:	idiv   BYTE PTR [edi-0x9]
  417639:	jae    0x417679
  41763b:	lahf   
  41763c:	in     eax,0xae
  41763e:	test   eax,0xa8ef9a43
  417643:	adc    eax,ebp
  417645:	cdq    
  417646:	push   edx
  417647:	cmp    ebp,DWORD PTR [ebx-0x55]
  41764a:	sub    eax,0xa5e7d340
  41764f:	aas    
  417650:	rol    DWORD PTR [esi],cl
  417652:	sti    
  417653:	inc    esp
  417654:	rcr    esi,1
  417656:	cmp    eax,0x99fece6f
  41765b:	out    0xcc,al
  41765d:	loop   0x41762a
  41765f:	add    dh,ah
  417661:	xor    eax,0xc81b3698
  417666:	call   0xb272d86f
  41766b:	mov    ecx,0x9356ed1c
  417670:	mov    ds:0xa51a344e,ax
  417676:	fldcw  WORD PTR [edx+0x71]
  417679:	jb     0x4176f7
  41767b:	mov    BYTE PTR [eax+0x41],ah
  41767e:	jg     0x417650
  417680:	addr16 jg 0x417702
  417683:	lahf   
  417684:	inc    esp
  417685:	cmp    al,0x8e
  417687:	in     al,dx
  417688:	xchg   ebx,eax
  417689:	cmp    DWORD PTR [edi-0x1dd9b7aa],ebp
  41768f:	in     al,0xb
  417691:	add    eax,0x3e0a952a
  417696:	lds    ecx,FWORD PTR [edi-0x4f]
  417699:	pop    eax
  41769a:	inc    esp
  41769b:	adc    al,0x24
  41769d:	add    al,BYTE PTR [ecx]
  41769f:	test   DWORD PTR [esi-0x45],ebp
  4176a2:	lea    esp,[ecx+0x58]
  4176a5:	and    al,0x12
  4176a7:	or     DWORD PTR [edx-0x6a0ef3f],eax
  4176ad:	retf   0x336b
  4176b0:	push   ds
  4176b1:	and    BYTE PTR [ecx-0x779b316d],0x46
  4176b8:	jecxz  0x4176ae
  4176ba:	sti    
  4176bb:	pop    ebp
  4176bc:	and    al,0x59
  4176be:	es xchg ebp,eax
  4176c0:	dec    edx
  4176c1:	and    DWORD PTR [eax],ecx
  4176c3:	jmp    0x417649
  4176c5:	ret    
  4176c6:	adc    DWORD PTR [esi+0x1f0f11a3],eax
  4176cc:	ds rcl al,0x75
  4176d0:	xor    al,0x75
  4176d2:	inc    edx
  4176d3:	cmp    BYTE PTR [edx],dl
  4176d5:	jno    0x417700
  4176d7:	mov    ebp,0x1ed825a6
  4176dc:	dec    ebp
  4176dd:	call   0x5ea3:0x49a69381
  4176e4:	addr16 mov ds:0xd4aa,al
  4176e8:	imul   esi,DWORD PTR [ebp-0x62],0xffffffb9
  4176ec:	jge    0x417689
  4176ee:	inc    eax
  4176ef:	and    BYTE PTR [eax+0x16344580],cl
  4176f5:	in     eax,0x4b
  4176f7:	pop    edi
  4176f8:	cli    
  4176f9:	adc    al,BYTE PTR [edi+0x5e5c0787]
  4176ff:	pop    esp
  417700:	repnz icebp 
  417702:	(bad)  
  417703:	jg     0x417699
  417705:	out    0xee,eax
  417707:	fisub  WORD PTR [ebp-0x474fd070]
  41770d:	push   esp
  41770e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41770f:	pop    edx
  417710:	cmp    eax,0x87a3e1e7
  417715:	mov    WORD PTR [edi+0x23],es
  417718:	and    al,0x51
  41771a:	in     al,0xb9
  41771c:	out    0x9e,eax
  41771e:	and    edx,DWORD PTR [ebp-0x79f5eeb6]
  417724:	lock sti 
  417726:	jge    0x417724
  417728:	fsubp  st(7),st
  41772a:	inc    DWORD PTR [ecx]
  41772c:	cmc    
  41772d:	fisub  DWORD PTR ds:0x9b98f1e3
  417733:	mov    bh,0x6e
  417735:	adc    DWORD PTR [ebx],esi
  417737:	or     al,0xba
  417739:	mov    ebp,0x88204a3e
  41773e:	sub    al,0xfb
  417740:	xor    BYTE PTR [ebx+edx*4],cl
  417743:	jo     0x41777d
  417745:	test   BYTE PTR [esi-0x626263e5],ch
  41774b:	mov    al,0xbf
  41774d:	ja     0x41770f
  41774f:	jns    0x417736
  417751:	mov    WORD PTR [esi+edi*2-0x7f],?
  417755:	idiv   DWORD PTR [edi+0x7ffe25ff]
  41775b:	neg    dh
  41775d:	cmp    al,0xc6
  41775f:	mov    dl,0xec
  417761:	mov    esi,0xbb9cfbef
  417766:	mov    ebp,0x7bed5ebd
  41776b:	push   edi
  41776c:	ja     0x4177c5
  41776e:	out    dx,eax
  41776f:	fnsave [ebx]
  417771:	in     al,0x70
  417773:	dec    eax
  417774:	mov    dl,BYTE PTR [esp+eax*2+0x7128a653]
  41777b:	xchg   ecx,eax
  41777c:	gs pop ecx
  41777e:	and    DWORD PTR [ebx],0x4024124
  417784:	stc    
  417785:	(bad)  
  417786:	mov    DWORD PTR [ebx-0x37f8de03],esi
  41778c:	jmp    0xe24e:0xd8918120
  417793:	clc    
  417794:	pop    eax
  417796:	dec    esi
  417797:	sbb    al,0x20
  417799:	mov    dl,0x2d
  41779b:	sub    esi,edx
  41779d:	and    ch,BYTE PTR [eax]
  41779f:	inc    esi
  4177a0:	add    al,0x39
  4177a2:	mov    gs,WORD PTR ds:0x9222b2c9
  4177a8:	adc    al,ch
  4177aa:	xchg   BYTE PTR gs:0x557756bd,bh
  4177b1:	ja     0x417828
  4177b3:	xlat   BYTE PTR ds:[ebx]
  4177b4:	mov    esi,0x7f6f57bf
  4177b9:	ja     0x417784
  4177bb:	pop    ds
  4177bc:	out    0xfc,eax
  4177be:	into   
  4177bf:	cmp    eax,0xb1c729af
  4177c4:	les    ebx,FWORD PTR [ecx+0x40be0b69]
  4177ca:	jne    0x417823
  4177cc:	mov    ebp,0xcf739777
  4177d1:	stc    
  4177d2:	sub    eax,0xe27adfdf
  4177d7:	cmp    BYTE PTR [esi+0x69],ah
  4177da:	stc    
  4177db:	sub    BYTE PTR [ebp+0x2453c05d],0x49
  4177e2:	int3   
  4177e3:	fstp   DWORD PTR [ecx-0x7d]
  4177e6:	(bad)  
  4177e7:	(bad)  
  4177e8:	push   ds
  4177e9:	push   edx
  4177ea:	sub    dl,BYTE PTR [edi-0x19a5a5a7]
  4177f0:	in     eax,dx
  4177f1:	mov    bh,0xdf
  4177f3:	(bad)  
  4177f4:	repz jge 0x4177e1
  4177f7:	arpl   WORD PTR [ebp-0x43],si
  4177fa:	daa    
  4177fb:	inc    eax
  4177fc:	loopne 0x4177b1
  4177fe:	mov    esp,0xcececcbc
  417803:	push   cs
  417804:	fwait
  417805:	sbb    ecx,edi
  417807:	sbb    ah,al
  417809:	inc    ebx
  41780a:	pop    ebp
  41780b:	jae    0x41787e
  41780d:	jo     0x4177cf
  41780f:	ficom  DWORD PTR [ebx+0x16161635]
  417815:	je     0x4177d6
  417817:	shl    BYTE PTR [edi],0x6b
  41781a:	in     al,dx
  41781b:	out    dx,al
  41781c:	in     al,dx
  41781d:	jb     0x417898
  41781f:	jne    0x4177b6
  417821:	repz out 0x39,al
  417824:	das    
  417825:	ss aaa 
  417827:	jne    0x4177e6
  417829:	inc    ebp
  41782a:	mov    edi,0x758df3c7
  41782f:	cs pop esi
  417831:	pop    edx
  417832:	in     eax,0xc5
  417834:	out    0x26,al
  417836:	(bad)  [esi+0x17]
  417839:	fild   QWORD PTR [ebx]
  41783b:	push   eax
  41783c:	dec    ecx
  41783d:	call   0xb300:0xe5007b4
  417844:	inc    BYTE PTR [ebp+0x13293720]
  41784a:	mov    ds:0x2cbb305c,eax
  41784f:	mov    DWORD PTR [edx+0x71],esi
  417852:	dec    ebp
  417853:	dec    ebp
  417854:	or     al,0x22
  417856:	push   eax
  417857:	push   es
  417858:	and    bh,BYTE PTR [eax-0x1a]
  41785b:	test   esp,0xfdaa0ef8
  417861:	mov    ds:0xe67e009f,eax
  417866:	and    esi,0xffffff93
  417869:	(bad)  
  41786b:	icebp  
  41786c:	fisub  DWORD PTR [ebx]
  41786e:	xor    BYTE PTR [ebp+0x4193fd9f],0xb4
  417875:	repz ficomp WORD PTR [edi+0x65cd7b2d]
  41787c:	bound  esi,QWORD PTR gs:[edx+eiz*8-0x5296bc24]
  417884:	psubusb mm5,QWORD PTR [ebp+0x5bee04ae]
  41788b:	cwde   
  41788c:	outs   dx,DWORD PTR ds:[esi]
  41788d:	cwde   
  41788e:	ds add eax,0x9a6d93bb
  417894:	jmp    0x26cb:0xe0d095c5
  41789b:	or     al,0xfb
  41789d:	jge    0x417879
  41789f:	sub    ebx,DWORD PTR [edi]
  4178a1:	bound  esi,QWORD PTR gs:[esi-0x77]
  4178a5:	pop    edx
  4178a6:	mov    ch,0xc2
  4178a8:	and    BYTE PTR [esi],bl
  4178aa:	push   edx
  4178ab:	scas   eax,DWORD PTR es:[edi]
  4178ac:	xlat   BYTE PTR ds:[ebx]
  4178ad:	mov    eax,0x7b12f174
  4178b2:	sti    
  4178b3:	sti    
  4178b4:	aam    0xc7
  4178b6:	(bad)  
  4178b7:	cdq    
  4178b8:	fwait
  4178b9:	fwait
  4178ba:	jecxz  0x4178b0
  4178bc:	hlt    
  4178bd:	xchg   esp,eax
  4178be:	shl    bh,0xb9
  4178c1:	jbe    0x4178c0
  4178c3:	cmp    al,bl
  4178c5:	loope  0x417857
  4178c7:	and    al,0x4e
  4178c9:	dec    esp
  4178ca:	jg     0x4178cb
  4178cc:	sub    DWORD PTR [edx+0x145112a5],ecx
  4178d2:	xchg   ecx,eax
  4178d3:	les    ebx,FWORD PTR [edx]
  4178d5:	outs   dx,BYTE PTR ds:[esi]
  4178d6:	sub    al,0x2d
  4178d8:	cs jb  0x4178b1
  4178db:	push   0x3c1e0f0
  4178e0:	cli    
  4178e1:	mov    ebp,0x9142851e
  4178e6:	(bad)  
  4178e7:	fstp   DWORD PTR [ecx+0x14afe9ee]
  4178ed:	aaa    
  4178ee:	outs   dx,BYTE PTR ds:[esi]
  4178ef:	fisub  WORD PTR [edx+0x3130a952]
  4178f5:	cmp    DWORD PTR [ecx-0x5b],ecx
  4178f8:	push   edx
  4178f9:	loope  0x4178e3
  4178fb:	call   0x43c4fc80
  417900:	sub    ah,ch
  417902:	or     cl,dl
  417904:	push   ebx
  417905:	in     al,dx
  417906:	out    dx,al
  417907:	call   0x8a7239f6
  41790c:	mov    eax,0x9316f371
  417911:	adc    edx,DWORD PTR [ebx-0x5fa0d0d4]
  417917:	ss push esi
  417919:	jecxz  0x4178f9
  41791b:	jnp    0x417994
  41791d:	pop    ecx
  41791e:	pop    ebx
  41791f:	pop    ebx
  417920:	mov    ds:0x1f53efdf,eax
  417925:	pop    ds
  417926:	daa    
  417927:	sub    dl,BYTE PTR [esp+esi*2]
  41792a:	pop    ebx
  41792b:	lock test DWORD PTR [ebp-0x1e],eax
  41792f:	cmp    BYTE PTR [esi+0x6f],ah
  417932:	outs   dx,DWORD PTR ds:[esi]
  417933:	(bad)  
  417934:	jle    0x4178f5
  417936:	inc    edi
  417937:	mov    cl,0x58
  417939:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41793a:	shr    DWORD PTR [eax+0x72],1
  41793d:	jbe    0x417915
  41793f:	pusha  
  417940:	lods   al,BYTE PTR ds:[esi]
  417941:	ss (bad) 
  417943:	cld    
  417944:	cld    
  417945:	cmp    al,0x4a
  417947:	inc    ecx
  417948:	mov    ds:0xd15ca0d1,eax
  41794d:	mov    ebx,0x6ceeed1b
  417952:	xchg   ebx,eax
  417953:	and    al,0x31
  417955:	xor    esi,DWORD PTR [ebx-0x7272738d]
  41795b:	mov    cl,0xb7
  41795d:	mov    ebx,0x818e30c7
  417962:	mov    WORD PTR [esi-0x55],cs
  417965:	inc    ebp
  417966:	mov    bh,0xd7
  417968:	arpl   WORD PTR [ecx+0x79],di
  41796b:	sbb    edi,ebx
  41796d:	idiv   DWORD PTR [ecx-0x4f]
  417970:	stc    
  417971:	xor    BYTE PTR [ebp-0x6db77039],0x84
  417978:	leave  
  417979:	test   eax,0xea262629
  41797e:	sub    al,0x2f
  417980:	pop    edi
  417981:	pusha  
  417982:	popa   
  417983:	jno    0x417906
  417985:	mov    ebx,0x6f63df77
  41798a:	addr16 xchg edi,eax
  41798c:	pop    esi
  41798d:	scas   eax,DWORD PTR es:[edi]
  41798e:	(bad)  
  41798f:	in     eax,dx
  417990:	aaa    
  417991:	out    dx,al
  417992:	push   eax
  417993:	sub    BYTE PTR [esi],dl
  417995:	sbb    DWORD PTR [esi+eax*1],ecx
  417998:	mov    al,ds:0x16adda3c
  41799d:	mov    ebp,0x4b959f7e
  4179a2:	xchg   edi,eax
  4179a3:	sbb    DWORD PTR [edi],ebx
  4179a5:	pop    ds
  4179a6:	out    0xd1,eax
  4179a8:	add    DWORD PTR [edi],0xffffffec
  4179ab:	out    dx,al
  4179ac:	in     eax,dx
  4179ad:	inc    edx
  4179ae:	call   0xcfce:0x15cae572
  4179b5:	pop    ebx
  4179b6:	pushf  
  4179b7:	sahf   
  4179b8:	pushf  
  4179b9:	adc    bh,al
  4179bb:	mov    cl,0x6e
  4179bd:	aaa    
  4179be:	ds cmp eax,0xb85f2c5
  4179c4:	mov    ah,0xdb
  4179c6:	ins    DWORD PTR es:[edi],dx
  4179c7:	div    BYTE PTR [esi+0x77]
  4179ca:	pop    eax
  4179cb:	pop    esp
  4179cc:	pop    edx
  4179cd:	bound  ebp,QWORD PTR [edx+0x6a]
  4179d0:	xchg   ch,dh
  4179d2:	cmc    
  4179d3:	jne    0x41796f
  4179d5:	lea    eax,[esi]
  4179d7:	lds    edx,FWORD PTR [edx-0x67]
  4179da:	loope  0x41798c
  4179dc:	iret   
  4179dd:	cli    
  4179de:	cli    
  4179df:	cmp    dh,cl
  4179e1:	jo     0x4179ab
  4179e3:	int3   
  4179e4:	int3   
  4179e5:	sub    al,0x4f
  4179e7:	lahf   
  4179e8:	ds loope 0x4179d3
  4179eb:	clc    
  4179ec:	nop
  4179ed:	(bad)  
  4179ef:	pop    ecx
  4179f0:	mov    dh,0x5e
  4179f2:	mov    esp,0x88e8e8e0
  4179f7:	inc    edx
  4179f8:	push   esp
  4179f9:	pusha  
  4179fa:	addr16 addr16 fwait
  4179fd:	icebp  
  4179fe:	icebp  
  4179ff:	or     edx,ecx
  417a01:	mov    ch,0xa
  417a03:	aad    0x7b
  417a05:	mov    edi,0x516ed646
  417a0a:	sub    DWORD PTR [ecx-0x7b],ebp
  417a0d:	loopne 0x4179b8
  417a0f:	sbb    al,0x9
  417a11:	dec    eax
  417a12:	call   0x2ec2bc66
  417a17:	sub    dl,BYTE PTR [eax+0x5071568d]
  417a1d:	or     ecx,0x41
  417a20:	rol    DWORD PTR [edi+0x20f7cef9],cl
  417a26:	sbb    ecx,DWORD PTR [edi+eiz*2]
  417a29:	jg     0x417a1f
  417a2b:	pop    edi
  417a2c:	std    
  417a2d:	aaa    
  417a2e:	(bad)  
  417a2f:	cli    
  417a30:	das    
  417a31:	cld    
  417a32:	cli    
  417a33:	cmp    ebp,ebp
  417a35:	neg    DWORD PTR [ebx-0x384081c1]
  417a3b:	imul   ecx,DWORD PTR [edi-0x3a053e00],0x6b
  417a42:	popa   
  417a43:	imul   DWORD PTR [di+0x24]
  417a47:	neg    BYTE PTR [edi+0x1857a66a]
  417a4d:	addr16 mov al,ds:0x7461
  417a51:	iret   
  417a52:	add    DWORD PTR [ecx+0x22a4be09],0xffffffa5
  417a59:	popf   
  417a5a:	out    dx,eax
  417a5b:	xchg   edx,eax
  417a5c:	pop    eax
  417a5d:	or     eax,DWORD PTR [ecx]
  417a5f:	fwait
  417a60:	cmp    esp,DWORD PTR [eax-0x1e]
  417a63:	mov    esi,0xfb4e1483
  417a68:	push   eax
  417a69:	dec    esi
  417a6a:	xchg   DWORD PTR [edi+esi*2],edx
  417a6d:	fbld   TBYTE PTR [ebx]
  417a6f:	pop    ebx
  417a70:	mov    ecx,0x66ddbb43
  417a75:	jbe    0x417add
  417a77:	xchg   BYTE PTR [edx-0x4b],ch
  417a7a:	inc    esp
  417a7b:	mov    eax,ds:0x7575615c
  417a80:	xchg   ebp,eax
  417a81:	inc    edx
  417a82:	mov    eax,ds:0xe552b540
  417a87:	repnz jmp 0xa580:0xc1c3002a
  417a8f:	lds    esp,FWORD PTR ds:0x49bd45b2
  417a95:	(bad)  
  417a96:	jns    0x417acb
  417a98:	mov    dh,0xc9
  417a9a:	cmp    BYTE PTR [edi],cl
  417a9c:	pop    ds
  417a9d:	mov    al,ds:0x144e7e75
  417aa3:	push   es
  417aa4:	data16 jnp 0x417a95
  417aa7:	mov    ebx,es
  417aa9:	ret    
  417aaa:	add    edx,DWORD PTR [esi+0x7db89797]
  417ab0:	sti    
  417ab1:	ss dec edi
  417ab3:	lahf   
  417ab4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ab6:	pop    edx
  417ab7:	lods   eax,DWORD PTR ds:[esi]
  417ab8:	jb     0x417b30
  417aba:	jp     0x417a3e
  417abc:	push   edx
  417abd:	mov    ch,BYTE PTR [edx-0x5b]
  417ac0:	ret    0xd4f4
  417ac3:	adc    al,0xbf
  417ac5:	repz lea esp,[edi-0x29072aca]
  417acc:	in     eax,dx
  417acd:	cmp    ebx,DWORD PTR [esi+edi*4+0x7c]
  417ad1:	test   DWORD PTR [ebp+0x26265dfd],edi
  417ad7:	daa    
  417ad8:	fcomp  st(7)
  417ada:	fbld   TBYTE PTR [ebx-0x56ac9523]
  417ae0:	(bad)  
  417ae1:	sub    BYTE PTR [edi],al
  417ae3:	add    DWORD PTR [ebp-0x2188b88a],ebx
  417ae9:	cmp    eax,0x1f23e7d8
  417aee:	stc    
  417aef:	or     BYTE PTR [ebx-0xb],ah
  417af2:	cmp    dh,bl
  417af4:	repz repz int3 
  417af7:	int    0xcf
  417af9:	mov    bl,0xf6
  417afb:	clc    
  417afc:	xor    DWORD PTR [edi],ecx
  417afe:	out    dx,al
  417aff:	ffreep st(3)
  417b01:	test   DWORD PTR [ebx-0x40],0xdbedcee3
  417b08:	push   esp
  417b09:	sub    edx,DWORD PTR ds:0x48a7a6a6
  417b0f:	mov    bl,0x8c
  417b11:	outs   dx,DWORD PTR ds:[esi]
  417b12:	jle    0x417b07
  417b14:	pop    ebx
  417b15:	pushf  
  417b16:	pushf  
  417b17:	pushf  
  417b18:	jo     0x417b8e
  417b1a:	je     0x417ae0
  417b1c:	popf   
  417b1d:	cmp    esi,DWORD PTR [edi-0x8]
  417b20:	clc    
  417b21:	daa    
  417b22:	shl    DWORD PTR ds:[eax+0x6979603f],0x89
  417b2a:	mov    ch,0xa7
  417b2c:	dec    edi
  417b2d:	js     0x417b23
  417b2f:	loopne 0x417b42
  417b31:	sahf   
  417b32:	out    dx,eax
  417b33:	icebp  
  417b34:	jge    0x417ad5
  417b36:	cli    
  417b37:	ds fdivp st(2),st
  417b3a:	fadd   st,st(7)
  417b3c:	pop    eax
  417b3d:	pop    eax
  417b3e:	pop    edx
  417b3f:	bound  ebp,QWORD PTR [esi+0x7e]
  417b42:	mov    ?,WORD PTR [ebx+0x36365393]
  417b48:	(bad)  
  417b49:	jmp    0x9fddf643
  417b4e:	lahf   
  417b4f:	jae    0x417b3c
  417b51:	(bad)  
  417b52:	sub    eax,0x388a38c3
  417b57:	dec    ecx
  417b58:	sub    BYTE PTR [edx+ecx*1],dl
  417b5b:	js     0x417afb
  417b5d:	bound  edi,QWORD PTR [edx+0x66]
  417b60:	xchg   bl,dl
  417b62:	jecxz  0x417bc7
  417b64:	pop    esi
  417b65:	mov    esi,0xdedec97c
  417b6a:	scas   al,BYTE PTR es:[edi]
  417b6b:	scas   al,BYTE PTR es:[edi]
  417b6c:	pop    ebp
  417b6d:	mov    eax,0xc9898d76
  417b72:	or     DWORD PTR [edx-0x3b9bff58],esp
  417b78:	dec    ecx
  417b79:	dec    esp
  417b7a:	loopne 0x417b77
  417b7c:	dec    esp
  417b7d:	dec    ebp
  417b7e:	dec    edi
  417b7f:	mov    cl,0x7f
  417b81:	mov    al,0xc7
  417b83:	cli    
  417b84:	shl    DWORD PTR [ebp-0x72],cl
  417b87:	push   cs
  417b88:	psubw  mm3,mm0
  417b8b:	fistp  DWORD PTR [edi]
  417b8d:	addr16 stc 
  417b8f:	ret    0xdeb2
  417b92:	sub    esi,DWORD PTR [eax+0x7f]
  417b95:	(bad)  
  417b96:	and    BYTE PTR [eax],cl
  417b98:	jns    0x417b7d
  417b9a:	and    ebx,DWORD PTR [edi]
  417b9c:	bound  esp,QWORD PTR gs:[edx+0x1c]
  417ba0:	das    
  417ba1:	or     BYTE PTR [eax+0x64],dl
  417ba4:	aam    0xc7
  417ba6:	jne    0x417bf3
  417ba8:	mov    al,0xad
  417baa:	pop    ss
  417bab:	fwait
  417bac:	hlt    
  417bad:	mov    edx,0x5757163d
  417bb2:	cmp    DWORD PTR [esi],edi
  417bb4:	cmp    ah,al
  417bb6:	in     al,dx
  417bb7:	hlt    
  417bb8:	xchg   esp,eax
  417bb9:	dec    edx
  417bba:	mov    ecx,0xe2d5ab4c
  417bbf:	clc    
  417bc0:	call   0x53a764d
  417bc5:	inc    ecx
  417bc6:	adc    al,0x92
  417bc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417bc9:	sbb    DWORD PTR [ebx],esi
  417bcb:	or     ecx,DWORD PTR [ebx+0x64]
  417bce:	addr16 fwait
  417bd0:	clc    
  417bd1:	int    0x43
  417bd3:	mov    edx,0x94a7f468
  417bd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417bd9:	xchg   ebp,eax
  417bda:	and    al,0x35
  417bdc:	fwait
  417bdd:	lods   eax,DWORD PTR ds:[esi]
  417bde:	sbb    bl,dl
  417be0:	dec    ecx
  417be1:	xor    esp,ebx
  417be3:	cmp    edx,DWORD PTR [edx]
  417be5:	pop    edi
  417be6:	and    DWORD PTR [ecx-0x5d7ac767],0x314a1249
  417bf0:	sti    
  417bf1:	daa    
  417bf2:	bound  eax,QWORD PTR [esp+eax*4-0x7c33565f]
  417bf9:	xor    bh,ch
  417bfb:	leave  
  417bfc:	loop   0x417bd7
  417bfe:	jecxz  0x417c3f
  417c00:	or     al,0xfc
  417c02:	in     eax,dx
  417c03:	out    dx,eax
  417c04:	xor    eax,0x8faf7c3f
  417c09:	xlat   BYTE PTR ds:[ebx]
  417c0a:	pop    esi
  417c0b:	add    BYTE PTR [ebx+ebx*1-0x41],ah
  417c0f:	mul    bl
  417c11:	xchg   ecx,eax
  417c12:	pop    ds
  417c13:	xchg   DWORD PTR [edx],esp
  417c15:	jns    0x417baa
  417c17:	loope  0x417bc1
  417c19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c1a:	push   esi
  417c1b:	or     DWORD PTR [edx],esp
  417c1d:	xor    BYTE PTR [ebx-0x4cbc39a8],bl
  417c23:	jne    0x417bdb
  417c25:	retf   0x51
  417c28:	mov    es,WORD PTR [eax-0x50]
  417c2b:	ficomp DWORD PTR [edi]
  417c2d:	jge    0x417c7c
  417c2f:	imul   eax,DWORD PTR [eax],0xffffff83
  417c32:	pop    eax
  417c33:	ret    
  417c34:	shr    cl,0xad
  417c37:	outs   dx,DWORD PTR ds:[esi]
  417c38:	jb     0x417c38
  417c3a:	test   BYTE PTR [edi+0x70],0x70
  417c3e:	js     0x417c0c
  417c40:	in     al,0x64
  417c42:	popf   
  417c43:	icebp  
  417c44:	icebp  
  417c45:	and    eax,0xa98f8f4e
  417c4a:	push   esi
  417c4b:	sub    edx,esp
  417c4d:	push   0x35
  417c4f:	push   cs
  417c50:	(bad)  
  417c51:	(bad)
  417c55:	shl    DWORD PTR [ebx],cl
  417c57:	xor    ebp,esp
  417c59:	out    dx,eax
  417c5a:	imul   ebx,DWORD PTR [eax+0x7c],0x610ad2f1
  417c61:	sbb    al,dh
  417c63:	out    dx,al
  417c64:	mov    ebx,0x5a92eaef
  417c69:	shr    DWORD PTR [eax-0xc912a5e],cl
  417c6f:	in     al,dx
  417c70:	stc    
  417c71:	jae    0x417c51
  417c73:	jp     0x417c60
  417c75:	sub    eax,0x3817db96
  417c7a:	cmp    DWORD PTR ds:0xc2334d21,edi
  417c80:	sub    BYTE PTR [edx-0x1b],ah
  417c83:	loop   0x417cca
  417c85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c88:	(bad)  
  417c8a:	fabs   
  417c8c:	leave  
  417c8d:	fisub  DWORD PTR [ebx+0x6a]
  417c90:	mov    ch,0x31
  417c92:	xchg   edx,eax
  417c93:	xor    al,0xa5
  417c95:	pop    esp
  417c96:	sub    al,0xe3
  417c98:	xchg   DWORD PTR [ecx],edx
  417c9a:	leave  
  417c9b:	jo     0x417ce5
  417c9d:	adc    al,0x85
  417c9f:	aam    0x97
  417ca1:	push   ss
  417ca2:	test   eax,0xccccaad6
  417ca7:	dec    esp
  417ca8:	jae    0x417ca9
  417caa:	fidivr WORD PTR [ebp-0x12]
  417cad:	fnstsw WORD PTR [ebx-0x1aad5ab9]
  417cb3:	cli    
  417cb4:	int    0x1b
  417cb6:	pop    esp
  417cb7:	mov    ebp,0x79e50d76
  417cbc:	dec    esp
  417cbd:	dec    esp
  417cbe:	dec    esi
  417cbf:	jb     0x417d33
  417cc1:	jb     0x417d05
  417cc3:	scas   eax,DWORD PTR es:[edi]
  417cc4:	xlat   BYTE PTR ds:[ebx]
  417cc5:	mov    ds:0xad536add,eax
  417cca:	push   ebp
  417ccb:	add    eax,esi
  417ccd:	cmp    eax,0xa219389f
  417cd2:	adc    al,0x84
  417cd4:	push   ecx
  417cd5:	dec    eax
  417cd6:	mov    ch,0x56
  417cd8:	mov    ds:0x8c332e52,eax
  417cdd:	arpl   WORD PTR [edx],di
  417cdf:	in     eax,dx
  417ce0:	push   cs
  417ce1:	std    
  417ce2:	jle    0x417c73
  417ce4:	jbe    0x417ca1
  417ce6:	inc    ebx
  417ce7:	test   eax,0x3cf3c25c
  417cec:	ficomp DWORD PTR [ebp-0x2c5781f2]
  417cf2:	ja     0x417cfb
  417cf4:	ret    
  417cf5:	and    DWORD PTR ds:[ecx],edx
  417cf8:	pop    ecx
  417cf9:	call   0x2ddb:0xb4878832
  417d00:	call   0x133e:0xbdba2567
  417d07:	adc    esp,ebx
  417d09:	mov    ah,0x3a
  417d0b:	sbb    eax,0xd8262626
  417d10:	jl     0x417d10
  417d12:	pushf  
  417d13:	(bad)  
  417d14:	cmc    
  417d15:	jne    0x417d11
  417d17:	std    
  417d18:	add    DWORD PTR [edi-0x52],edx
  417d1b:	pop    ebp
  417d1c:	loope  0x417cec
  417d1e:	popf   
  417d1f:	cmp    ecx,DWORD PTR [edi+ecx*2+0x4f]
  417d23:	xor    esi,DWORD PTR [edi]
  417d25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d26:	std    
  417d27:	sbb    ebx,ebx
  417d29:	fcmovnu st,st(3)
  417d2b:	hlt    
  417d2c:	jnp    0x417d6b
  417d2e:	xchg   BYTE PTR [ebx-0x9c35ae8],al
  417d34:	div    edi
  417d36:	mov    BYTE PTR [edi],al
  417d38:	inc    ebx
  417d39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d3c:	mov    eax,0x9d26e371
  417d41:	dec    esi
  417d42:	pop    es
  417d43:	mov    ebp,0x671ef2e3
  417d48:	addr16 addr16 add al,0x61
  417d4c:	les    esp,FWORD PTR [eax+0x30]
  417d4f:	loopne 0x417d2a
  417d51:	mov    BYTE PTR [esi],0x8f
  417d54:	pop    ds
  417d55:	aas    
  417d56:	mov    ds:0xa7c63636,al
  417d5b:	ds stc 
  417d5d:	imul   ecx,DWORD PTR [esi-0x31],0x3d3d384e
  417d64:	add    eax,0xbd5eae32
  417d69:	dec    edx
  417d6a:	push   es
  417d6b:	push   esp
  417d6c:	dec    edx
  417d6d:	and    eax,0xfcc0a8a2
  417d72:	cld    
  417d73:	add    dl,BYTE PTR [edi-0x52]
  417d76:	pop    ebp
  417d77:	in     eax,0xe8
  417d79:	inc    eax
  417d7a:	outs   dx,DWORD PTR ds:[esi]
  417d7b:	(bad)  
  417d7c:	mov    edx,0xa8857aba
  417d81:	adc    cl,ah
  417d83:	jns    0x417da3
  417d85:	pop    ss
  417d86:	xchg   esi,eax
  417d87:	jne    0x417da2
  417d89:	hlt    
  417d8a:	loop   0x417d4e
  417d8c:	and    bl,BYTE PTR [esi-0x4f]
  417d8f:	mov    WORD PTR [edx-0x10],?
  417d92:	sub    edi,DWORD PTR [eax-0x3d]
  417d95:	add    al,0x3c
  417d97:	push   0xd42c610f
  417d9c:	nop
  417d9d:	aas    
  417d9e:	dec    ecx
  417d9f:	popa   
  417da0:	enter  0x5d28,0xf9
  417da4:	or     al,BYTE PTR [edx+0x63]
  417da7:	push   edx
  417da8:	es inc esi
  417daa:	and    BYTE PTR [esi+eax*8],al
  417dad:	mov    WORD PTR [esp+edi*1-0x3aa6a0ec],ss
  417db4:	prefetcht1 BYTE PTR [ebx-0x57aee2ff]
  417dbb:	push   ds
  417dbc:	aas    
  417dbd:	cli    
  417dbe:	jno    0x417dbe
  417dc0:	cmp    DWORD PTR [eax],edx
  417dc2:	add    BYTE PTR [edi-0xd0ff64b],ch
  417dc8:	stos   DWORD PTR es:[edi],eax
  417dc9:	jg     0x417e20
  417dcb:	jns    0x417d5c
  417dcd:	push   ecx
  417dcf:	lahf   
  417dd0:	lds    edi,FWORD PTR cs:[ebx-0x7a538ca9]
  417dd7:	aad    0xde
  417dd9:	sbb    ch,0x1e
  417ddc:	sbb    eax,DWORD PTR [edi]
  417dde:	shl    BYTE PTR [edi-0x68],cl
  417de1:	adc    BYTE PTR [ebp+0x79244cf9],cl
  417de7:	xchg   esi,eax
  417de8:	cmp    DWORD PTR [edx],eax
  417dea:	ror    BYTE PTR [eax],0x87
  417ded:	mov    ebp,0x7a077416
  417df2:	out    0xdb,eax
  417df4:	push   0xffffffb7
  417df6:	dec    ebx
  417df7:	push   esi
  417df8:	(bad)  
  417df9:	fmul   DWORD PTR ds:0x1e6bd02f
  417dff:	jb     0x417e7a
  417e01:	jne    0x417d98
  417e03:	fstp   QWORD PTR [ebp-0x303031e3]
  417e09:	pop    ecx
  417e0a:	pop    esp
  417e0b:	pop    esp
  417e0c:	bound  esi,QWORD PTR [edi+0x67]
  417e0f:	fwait
  417e10:	popf   
  417e11:	in     eax,dx
  417e12:	sbb    eax,0x39a6a7a6
  417e17:	cmp    eax,0xcbe5e33b
  417e1c:	pop    ss
  417e1d:	(bad)
  417e21:	mov    bh,BYTE PTR [eax]
  417e23:	cmp    DWORD PTR [ecx],edi
  417e25:	mov    eax,ds:0x36316add
  417e2a:	push   esi
  417e2b:	arpl   WORD PTR [esi+0x6e],bp
  417e2e:	pop    esi
  417e2f:	out    dx,eax
  417e30:	add    al,0x54
  417e32:	sub    al,0x32
  417e34:	aas    
  417e35:	aaa    
  417e36:	retf   
  417e37:	pop    eax
  417e38:	mov    ebp,0x9cececce
  417e3d:	test   eax,0xe8e2dc06
  417e42:	call   0x78395597
  417e47:	ficomp DWORD PTR [esi+ebx*1]
  417e4a:	sbb    al,0xd0
  417e4c:	push   0xffffffb5
  417e4e:	hlt    
  417e4f:	es sbb al,0xd7
  417e52:	scas   al,BYTE PTR es:[edi]
  417e53:	loope  0x417e80
  417e55:	(bad)  
  417e56:	fyl2xp1 
  417e58:	jns    0x417e0c
  417e5a:	or     al,0xf6
  417e5c:	dec    ebp
  417e5d:	inc    ebp
  417e5e:	pop    ebx
  417e5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e60:	push   edx
  417e61:	in     eax,0xac
  417e63:	rcl    eax,1
  417e65:	sahf   
  417e66:	repnz pop esi
  417e68:	lahf   
  417e69:	retf   
  417e6a:	xchg   edi,eax
  417e6b:	cs jae 0x417e57
  417e6e:	repnz inc ebp
  417e70:	retf   0xa95
  417e73:	xchg   edi,eax
  417e74:	cs pop ebp
  417e76:	bound  ebx,QWORD PTR [eax]
  417e78:	(bad)  
  417e79:	mov    esp,0xec3bcefb
  417e7e:	in     eax,dx
  417e7f:	out    dx,al
  417e80:	shr    bh,1
  417e82:	cmc    
  417e83:	mov    ecx,0xd51aed7a
  417e88:	stos   BYTE PTR es:[edi],al
  417e89:	outs   dx,BYTE PTR ds:[esi]
  417e8a:	int    0x35
  417e8c:	xor    eax,0xc6fac939
  417e91:	cmp    cl,BYTE PTR [edi-0x1b1bc3e2]
  417e97:	hlt    
  417e98:	xchg   esp,eax
  417e99:	push   0xffffffb5
  417e9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e9c:	mov    ebp,DWORD PTR [ebp-0x6c]
  417e9f:	(bad)  
  417ea0:	cmc    
  417ea1:	sbb    edx,edi
  417ea3:	push   0xf7bcdab7
  417ea8:	fidivr WORD PTR [ebx-0x44]
  417eab:	fdivr  QWORD PTR [edx+0x9]
  417eae:	shr    ah,0xec
  417eb1:	sbb    al,0x61
  417eb3:	push   esp
  417eb4:	loopne 0x417e80
  417eb6:	jmp    0xee0f:0x18dab52a
  417ebd:	fucom  st(7)
  417ebf:	jmp    0x878885be
  417ec4:	pop    es
  417ec5:	pop    esp
  417ec6:	mov    edx,0xa5a5897c
  417ecb:	and    eax,0xb8a6a6a6
  417ed0:	jb     0x417f3b
  417ed2:	xchg   ebp,eax
  417ed3:	jecxz  0x417e68
  417ed5:	arpl   WORD PTR [esi],bx
  417ed7:	ds jle 0x417f26
  417eda:	scas   eax,DWORD PTR es:[edi]
  417edb:	(bad)  [ebp+0x71]
  417ede:	jno    0x417e71
  417ee0:	cdq    
  417ee1:	fstp   DWORD PTR [ecx]
  417ee3:	sbb    ah,BYTE PTR [edi+0x67]
  417ee6:	add    al,0x51
  417ee8:	enter  0x3860,0xd4
  417eec:	leave  
  417eed:	push   eax
  417eee:	in     eax,0xa
  417ef0:	push   edi
  417ef1:	scas   eax,DWORD PTR es:[edi]
  417ef2:	pop    ebp
  417ef3:	gs ja  0x417f6d
  417ef6:	xchg   edi,eax
  417ef7:	inc    edi
  417ef8:	nop    DWORD PTR [eax-0x2d384849]
  417eff:	loop   0x417f33
  417f01:	jae    0x417f76
  417f03:	mov    bl,0xb4
  417f05:	fistp  DWORD PTR ds:0x386020fc
  417f0b:	sbb    BYTE PTR [edx+0x2f1709a6],dl
  417f11:	pop    esi
  417f12:	bound  esp,QWORD PTR [ebp+0x65]
  417f15:	test   ebx,edi
  417f17:	imul   edi
  417f19:	jae    0x417ef9
  417f1b:	cmp    al,0xa7
  417f1d:	pop    eax
  417f1e:	sub    al,0x51
  417f20:	sub    BYTE PTR [esi+0x3c],al
  417f23:	pop    ecx
  417f24:	jnp    0x417ee8
  417f26:	out    0x8b,al
  417f28:	out    0x2c,eax
  417f2a:	sub    eax,0xd5ab532e
  417f2f:	fcomp  st(6)
  417f31:	fldenv [esi+0x6530eed3]
  417f37:	ret    0x838f
  417f3a:	rol    DWORD PTR [eax-0x6166b4cc],0x9e
  417f41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f42:	pop    edx
  417f43:	stos   DWORD PTR es:[edi],eax
  417f44:	shr    ecx,1
  417f46:	mov    ah,0x99
  417f48:	pushf  
  417f49:	call   0x3aa1:0x34d23206
  417f50:	cmp    ebx,ecx
  417f52:	icebp  
  417f53:	jecxz  0x417f04
  417f55:	xor    dh,cl
  417f57:	int    0x5f
  417f59:	add    ch,BYTE PTR [edi]
  417f5b:	inc    ebx
  417f5c:	jb     0x417f25
  417f5e:	dec    edx
  417f5f:	or     DWORD PTR [ecx-0x3e235415],0xbf694a7
  417f69:	sub    al,BYTE PTR fs:[edi+0x7f3123f7]
  417f70:	xchg   ebp,eax
  417f71:	lahf   
  417f72:	das    
  417f73:	loope  0x417fb5
  417f75:	push   ecx
  417f76:	dec    esi
  417f77:	jb     0x417f88
  417f79:	fild   WORD PTR [ebx+0x7fc6a078]
  417f7f:	minsd  xmm7,xmm5
  417f83:	cdq    
  417f84:	lahf   
  417f85:	jmp    esi
  417f87:	shr    DWORD PTR [ebx-0x63],1
  417f8a:	adc    al,0xf4
  417f8c:	pop    edx
  417f8d:	and    eax,DWORD PTR [eax+0x1cb5b9b8]
  417f93:	sbb    eax,0xaf19fbbf
  417f98:	data16 mov ah,0x77
  417f9b:	mov    ebp,ds
  417f9d:	jmp    0x417ffd
  417f9f:	adc    dh,BYTE PTR [edx]
  417fa1:	in     al,0x83
  417fa3:	int3   
  417fa4:	xor    BYTE PTR [ebx+ebp*4-0xe68cc0b],bh
  417fab:	mov    bl,0x5c
  417fad:	outs   dx,BYTE PTR ds:[esi]
  417fae:	mov    BYTE PTR [eax],dl
  417fb0:	dec    eax
  417fb1:	xor    ch,BYTE PTR [eax+0x74]
  417fb4:	dec    ebp
  417fb5:	fadd   DWORD PTR [edi]
  417fb7:	dec    eax
  417fb8:	jl     0x417f52
  417fba:	jg     0x417fb4
  417fbc:	punpckhbw mm7,mm6
  417fbf:	loopne 0x417ff6
  417fc1:	jbe    0x417fc9
  417fc3:	add    DWORD PTR [edi],eax
  417fc5:	mov    ebx,0x2994a07b
  417fca:	push   esp
  417fcb:	fldenv [esi]
  417fcd:	dec    ebx
  417fce:	xor    edi,DWORD PTR [edx]
  417fd0:	fisttp QWORD PTR [esi]
  417fd2:	sbb    ecx,edi
  417fd4:	ss cwde 
  417fd6:	fwait
  417fd7:	lahf   
  417fd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417fd9:	push   eax
  417fda:	sub    BYTE PTR [eax+0x76],dh
  417fdd:	jbe    0x417fa9
  417fdf:	lds    ecx,FWORD PTR [ebx-0x69]
  417fe2:	pop    eax
  417fe3:	pop    ebp
  417fe4:	mov    ebp,0xe7cd8bc2
  417fe9:	clc    
  417fea:	mov    esi,0x14d4d4cf
  417fef:	push   edi
  417ff0:	scas   eax,DWORD PTR es:[edi]
  417ff1:	pop    esi
  417ff2:	mov    eax,ds:0x74702c50
  417ff7:	je     0x418041
  417ff9:	mov    bl,0x79
  417ffb:	into   
  417ffc:	in     al,dx
  417ffd:	int3   
  417ffe:	sbb    al,0xe3
  418000:	xchg   ebx,eax
  418001:	jecxz  0x41801f
  418003:	push   ds
  418004:	out    dx,al
  418005:	sar    DWORD PTR [edi+ebp*2],cl
  418008:	inc    edx
  418009:	push   es
  41800a:	mov    bh,0x6e
  41800c:	fbld   TBYTE PTR [ecx+0x38d1eddb]
  418012:	cmp    eax,0x83863201
  418017:	and    DWORD PTR [ebx-0xb],esp
  41801a:	cmp    dl,BYTE PTR [ebx]
  41801c:	adc    edi,DWORD PTR [edx-0x18220f65]
  418022:	sbb    esp,DWORD PTR [ecx+ebp*2]
  418025:	(bad)  
  418026:	pusha  
  418027:	shl    bl,1
  418029:	shl    ch,cl
  41802b:	sub    ecx,DWORD PTR [edi+ebp*8]
  41802e:	fsub   QWORD PTR [ecx]
  418030:	dec    ebp
  418031:	adc    bh,BYTE PTR [edi+ebx*8+0x63]
  418035:	repz stc 
  418037:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418038:	push   cs
  418039:	xor    eax,0x1068989a
  41803e:	add    al,0xf4
  418040:	xchg   DWORD PTR [ebx+0x32],eax
  418043:	je     0x417fe7
  418045:	shl    ah,1
  418047:	aam    0x34
  418049:	inc    ecx
  41804a:	adc    BYTE PTR [eax-0x55],dl
  41804d:	push   esi
  41804e:	jns    0x418040
  418050:	loopne 0x418053
  418052:	int    0xf3
  418054:	fnstsw WORD PTR es:[esi-0x61]
  418058:	aaa    
  418059:	fistp  QWORD PTR [ebx+eax*4-0x27]
  41805d:	cdq    
  41805e:	imul   ebp,edx,0x73733af5
  418064:	mov    bl,0xec
  418066:	in     eax,dx
  418067:	out    dx,al
  418068:	jno    0x4180e2
  41806a:	je     0x4180b0
  41806c:	scas   eax,DWORD PTR es:[edi]
  41806d:	(bad)  [ebp+0x76]
  418070:	xchg   si,ax
  418072:	fwait
  418073:	aaa    
  418074:	scas   al,BYTE PTR es:[edi]
  418075:	jecxz  0x4180a0
  418077:	mov    ah,0x3f
  418079:	and    ecx,DWORD PTR [eax+ebp*2-0x450ba54a]
  418080:	pop    ebp
  418081:	mov    al,ch
  418083:	add    bh,BYTE PTR [esi+0xc1fd3e7]
  418089:	push   0x3e38b79d
  41808e:	cmp    eax,DWORD PTR [ecx]
  418090:	in     eax,0x31
  418092:	xor    eax,0xa8f14939
  418097:	fsub   DWORD PTR [ebp+0x200000]
  41809d:	dec    ecx
  41809e:	inc    esp
  41809f:	inc    ecx
  4180a0:	push   esp
  4180a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4180a2:	pop    edx
  4180a3:	mov    eax,ds:0xdef12a58
  4180a8:	fnstsw WORD PTR [ebx-0x5f419194]
  4180ae:	pop    edx
  4180af:	lods   eax,DWORD PTR ds:[esi]
  4180b0:	lock (bad) 
  4180b2:	fwait
  4180b3:	outs   dx,DWORD PTR ds:[esi]
  4180b4:	repnz (bad) 
  4180b6:	sbb    ebp,DWORD PTR [edi-0x2e]
  4180b9:	in     eax,dx
  4180ba:	neg    BYTE PTR [eax+0x60e39b9b]
  4180c0:	jg     0x418061
  4180c2:	shl    DWORD PTR [eax-0x38],0xc4
  4180c6:	les    eax,FWORD PTR [ecx+esi*2]
  4180c9:	call   0x4f27:0x9d74feb2
  4180d0:	lahf   
  4180d1:	push   eax
  4180d2:	stos   DWORD PTR es:[edi],eax
  4180d3:	aad    0xf8
  4180d5:	fcomp  st(3)
  4180d7:	outs   dx,DWORD PTR ds:[esi]
  4180d8:	jae    0x4180cd
  4180da:	out    0x2d,al
  4180dc:	xchg   edx,eax
  4180dd:	js     0x418127
  4180df:	sbb    al,0xf
  4180e1:	test   eax,0xcb21558d
  4180e6:	mov    eax,0xcd26fb79
  4180eb:	inc    esi
  4180ec:	xchg   ebx,eax
  4180ed:	add    ebx,0x3
  4180f0:	ret    0x6430
  4180f3:	sbb    bh,al
  4180f5:	cmp    bl,BYTE PTR [edx+edi*8]
  4180f8:	hlt    
  4180f9:	sub    DWORD PTR [ebx],ebp
  4180fb:	sub    ebp,DWORD PTR [ebx]
  4180fd:	sub    al,0x2e
  4180ff:	sub    eax,0x9d636cf1
  418104:	dec    esi
  418105:	mov    bh,0xcb
  418107:	sbb    ebp,DWORD PTR [edi-0x44]
  41810a:	popa   
  41810b:	sbb    dh,BYTE PTR [ecx-0x4b4b4e52]
  418111:	test   bh,ah
  418113:	sub    esi,edx
  418115:	lahf   
  418116:	outs   dx,BYTE PTR ds:[esi]
  418117:	mov    dl,0x7a
  418119:	in     eax,dx
  41811a:	es mov ebx,0x7d8cfb87
  418120:	jecxz  0x418139
  418122:	or     BYTE PTR [ebx+0x28802c94],dl
  418128:	adc    DWORD PTR [esi+0x1f],0xffffffd2
  41812c:	bound  ecx,QWORD PTR [esi+0x27]
  41812f:	pusha  
  418130:	xor    al,0xbd
  418132:	xor    edi,0x99ec0e92
  418138:	lock lahf 
  41813a:	cwde   
  41813b:	or     eax,DWORD PTR [ecx-0x4edb485f]
  418141:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  418143:	add    eax,0x2228e781
  418148:	pop    ds
  418149:	retf   0x6749
  41814c:	inc    ebp
  41814d:	loope  0x4181cc
  41814f:	aas    
  418150:	lock pmaxub mm6,QWORD PTR [edi+0x46]
  418155:	stc    
  418156:	jge    0x418174
  418158:	scas   eax,DWORD PTR es:[edi]
  418159:	xor    eax,0x7e0ff802
  41815e:	pusha  
  41815f:	cld    
  418160:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418161:	sub    al,bh
  418163:	ud0    esp,DWORD PTR [ebp+0x15]
  418167:	in     eax,0xe9
  418169:	cdq    
  41816a:	(bad)  
  41816b:	nop
  41816c:	daa    
  41816d:	ja     0x418175
  41816f:	mov    al,BYTE PTR [esi+eiz*8+0x5e8f2d55]
  418176:	aam    0x38
  418178:	rcl    edi,1
  41817a:	and    eax,0xd52ef9b1
  41817f:	lahf   
  418180:	mov    bh,0xfa
  418182:	mov    al,0x7f
  418184:	sahf   
  418185:	push   edi
  418186:	test   DWORD PTR [ecx],ebp
  418188:	bsf    ebx,DWORD PTR [esi-0x34]
  41818c:	inc    esp
  41818d:	test   DWORD PTR ds:0xc7dfcbed,0xd30adcd4
  418197:	xchg   ebx,eax
  418198:	jne    0x418190
  41819a:	psadbw mm3,QWORD PTR [ecx+0x6560989c]
  4181a1:	inc    ebp
  4181a2:	imul   DWORD PTR [eax+0x5c8b162b]
  4181a8:	mov    ebp,0xc32c8d76
  4181ad:	and    al,0x5
  4181af:	dec    ebp
  4181b0:	push   eax
  4181b1:	lods   eax,DWORD PTR ds:[esi]
  4181b2:	push   esi
  4181b3:	cdq    
  4181b4:	popf   
  4181b5:	cdq    
  4181b6:	mov    eax,ds:0xb0722850
  4181bb:	mov    edi,0x67d7b747
  4181c0:	jns    0x418233
  4181c2:	mov    DWORD PTR [esi-0x59],ebp
  4181c5:	ret    
  4181c6:	xchg   ebx,eax
  4181c7:	(bad)  
  4181c8:	imul   esi,DWORD PTR [edx+edi*1+0x12c58a6d],0xffffff9e
  4181d0:	push   edx
  4181d1:	mov    ah,0x5b
  4181d3:	sub    eax,0x1722a54a
  4181d8:	das    
  4181d9:	pop    ebp
  4181da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181db:	push   esi
  4181dc:	stos   DWORD PTR es:[edi],eax
  4181dd:	xor    bh,BYTE PTR [ebx]
  4181df:	aaa    
  4181e0:	dec    edi
  4181e1:	ins    DWORD PTR es:[edi],dx
  4181e2:	lods   al,BYTE PTR ds:[esi]
  4181e3:	into   
  4181e4:	cli    
  4181e5:	cli    
  4181e6:	adc    esi,DWORD PTR [esi]
  4181e8:	lahf   
  4181e9:	cmp    eax,0xcf0f2943
  4181ee:	imul   DWORD PTR [eax-0x49]
  4181f1:	pop    ebx
  4181f2:	hlt    
  4181f3:	mov    edx,0x31f5ea3d
  4181f8:	xchg   esi,eax
  4181f9:	push   edi
  4181fa:	cs push edx
  4181fc:	sub    BYTE PTR [esi*2-0x31428ea7],dl
  418203:	ja     0x4181c3
  418205:	repz cs das 
  418208:	pop    edi
  418209:	mov    esi,0x6f54ece4
  41820e:	push   edx
  41820f:	xor    dh,BYTE PTR [ebx]
  418211:	cmp    ecx,DWORD PTR [ebx-0x57]
  418214:	push   esp
  418215:	gs gs test bx,sp
  41821a:	ret    
  41821b:	arpl   WORD PTR [esi],bx
  41821d:	ds jl  0x4181c8
  418220:	jecxz  0x41821b
  418222:	or     DWORD PTR [edi-0x57],0xeddba25c
  418229:	xor    bh,BYTE PTR [edi+0x2a2148b0]
  41822f:	jo     0x4182a5
  418231:	jl     0x4181ff
  418233:	repz out 0xcf,eax
  418236:	lea    esp,[ebx+0x4b]
  418239:	jnp    0x418220
  41823b:	or     eax,DWORD PTR [ebp-0x34b4b4fe]
  418241:	xor    al,0x1a
  418243:	dec    ebp
  418244:	sahf   
  418245:	cmp    al,0x59
  418247:	jecxz  0x418241
  418249:	inc    esp
  41824a:	sti    
  41824b:	daa    
  41824c:	jmp    0xeb7b:0xdeeebaf5
  418253:	ss std 
  418255:	pop    esi
  418256:	xchg   edi,eax
  418257:	mov    ebx,0xb3cbb9df
  41825c:	lea    ecx,ds:0xeae57014
  418262:	adc    eax,0x99272726
  418267:	fwait
  418268:	fwait
  418269:	addr16 data16 call 0x38d7:0x8fc7
  418271:	cmp    eax,0x7cf3c139
  418276:	push   esi
  418277:	cs pop esi
  418279:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41827a:	xlat   BYTE PTR ds:[ebx]
  41827b:	in     eax,dx
  41827c:	mov    cl,0xb3
  41827e:	std    
  41827f:	xchg   edx,eax
  418280:	shl    DWORD PTR [eax+0x40],0xa1
  418284:	mov    al,ds:0xbc5d073b
  418289:	js     0x418214
  41828b:	jmp    0x3c5fac79
  418290:	mov    eax,0x8cf379cf
  418295:	ror    BYTE PTR [edi],0x59
  418298:	cwde   
  418299:	pop    edi
  41829a:	pusha  
  41829b:	addr16 ja 0x418239
  41829e:	cmc    
  41829f:	cmc    
  4182a0:	jne    0x4182ac
  4182a2:	lds    esp,FWORD PTR [edx]
  4182a4:	sub    ebp,DWORD PTR [ebx]
  4182a6:	pop    ss
  4182a7:	test   eax,0x4d4ccb56
  4182ac:	dec    esp
  4182ad:	shr    BYTE PTR [edx-0x49],cl
  4182b0:	cmp    DWORD PTR [edi+0x34],ebp
  4182b3:	mov    eax,0xb9856170
  4182b8:	test   DWORD PTR [ecx+0x1e],edi
  4182bb:	ds js  0x4182fe
  4182be:	scas   eax,DWORD PTR es:[edi]
  4182bf:	fbld   TBYTE PTR [edi+0x7a]
  4182c2:	jp     0x41825e
  4182c4:	inc    esi
  4182c5:	mov    ds:0x3ac6c6c1,eax
  4182ca:	sahf   
  4182cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182cc:	cwde   
  4182cd:	cwde   
  4182ce:	cwde   
  4182cf:	fs ins DWORD PTR es:[edi],dx
  4182d1:	in     eax,dx
  4182d2:	xor    DWORD PTR [edi-0x4329d8d9],esp
  4182d8:	cmp    bh,BYTE PTR [edx+edi*1]
  4182db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182dc:	cmp    BYTE PTR [ecx],dh
  4182de:	dec    ebp
  4182df:	stc    
  4182e0:	imul   edi,edi,0xb
  4182e3:	rcr    ebx,cl
  4182e5:	jmp    0x4182ab
  4182e7:	popa   
  4182e8:	dec    esi
  4182e9:	and    esp,DWORD PTR [esi-0x4bccbfcc]
  4182ef:	cmp    DWORD PTR [edx+edx*8-0x75b083a2],edx
  4182f6:	jle    0x418278
  4182f8:	sbb    BYTE PTR [edi-0x141f89cd],0xff
  4182ff:	jge    0x4182a4
  418301:	in     eax,0x7d
  418303:	in     eax,0x9c
  418305:	jmp    0x4182f0
  418307:	out    dx,eax
  418308:	push   edx
  418309:	or     DWORD PTR [eax],0x42
  41830c:	add    eax,0xf4fc7f5d
  418311:	scas   eax,DWORD PTR es:[edi]
  418312:	jge    0x41830f
  418314:	in     al,0xef
  418316:	jg     0x418348
  418318:	fdivr  st(2),st
  41831a:	jnp    0x418357
  41831c:	pop    esi
  41831d:	imul   eax,DWORD PTR [ecx],0xfffffff0
  418320:	rcr    DWORD PTR [edi+0x4a4ff899],cl
  418326:	sub    DWORD PTR [ebp+0x3c4cca3b],0x60
  41832d:	xor    ebp,DWORD PTR [edi+0x18a801c4]
  418333:	sub    eax,0x931d49fe
  418338:	inc    eax
  418339:	or     bh,BYTE PTR [ebp+0x54]
  41833c:	xchg   esi,eax
  41833d:	xor    edi,DWORD PTR [ebp+0x70150184]
  418343:	rol    BYTE PTR [ebx-0x2649514d],cl
  418349:	inc    edx
  41834a:	iret   
  41834b:	push   esp
  41834c:	jl     0x4182d3
  41834e:	push   eax
  41834f:	cmp    al,0x6f
  418351:	mov    dl,0x3a
  418353:	jbe    0x418399
  418355:	out    dx,eax
  418356:	retf   0x510f
  418359:	pop    ds
  41835a:	lahf   
  41835b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41835c:	sbb    dl,bh
  41835e:	adc    al,0xa
  418360:	inc    ebp
  418361:	push   0x63
  418363:	xor    eax,0xd50ae52a
  418368:	push   0xffffff95
  41836a:	sub    al,0xcb
  41836c:	sub    BYTE PTR [esi-0x333133b6],dl
  418372:	shr    bh,cl
  418374:	cmc    
  418375:	hlt    
  418376:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418377:	sahf   
  418378:	test   DWORD PTR [edx],eax
  41837a:	push   ebx
  41837b:	xor    esi,DWORD PTR [ebx]
  41837d:	lods   al,BYTE PTR ds:[esi]
  41837e:	cmp    eax,0x60e0e35e
  418383:	lahf   
  418384:	xor    al,0x4b
  418386:	sub    DWORD PTR [esi],edx
  418388:	mov    bl,BYTE PTR [edi+esi*2+0x1dda74da]
  41838f:	push   esi
  418390:	push   esi
  418391:	cs mov al,0x7c
  418394:	popa   
  418395:	cdq    
  418396:	xor    BYTE PTR [eax],cl
  418398:	pop    ecx
  418399:	pop    eax
  41839a:	pop    edx
  41839b:	out    0xfc,al
  41839d:	mov    esp,0x1c1d1c5
  4183a2:	imul   ebx,DWORD PTR [edx-0x4c7050b0],0x469362f5
  4183ac:	mov    bl,0x49
  4183ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183af:	frstor [esi-0xb]
  4183b2:	retf   0xa615
  4183b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4183b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183b7:	sub    DWORD PTR [ebx+ecx*2],edx
  4183ba:	int3   
  4183bb:	into   
  4183bc:	into   
  4183bd:	jno    0x41843b
  4183bf:	jl     0x418385
  4183c1:	mov    ecx,ebp
  4183c3:	pop    ss
  4183c4:	hlt    
  4183c5:	sti    
  4183c6:	jge    0x41834a
  4183c8:	xor    BYTE PTR [eax+0x6cd268d1],ah
  4183ce:	ss or  bl,al
  4183d1:	nop
  4183d2:	mov    edx,DWORD PTR [edi]
  4183d4:	das    
  4183d5:	push   ebx
  4183d6:	sub    BYTE PTR [esi],dl
  4183d8:	sub    BYTE PTR [esi],dl
  4183da:	mov    ebp,DWORD PTR [ebp*1-0x40444ed2]
  4183e1:	(bad)  
  4183e2:	shl    DWORD PTR [edi+0x3f3f394f],cl
  4183e8:	addr16 popa 
  4183ea:	jno    0x41836d
  4183ec:	jmp    0x4183c5
  4183ee:	je     0x4183e3
  4183f0:	nop
  4183f1:	mov    edx,DWORD PTR [edi]
  4183f3:	xchg   esi,eax
  4183f4:	mov    DWORD PTR [edx],ecx
  4183f6:	adc    edi,ebx
  4183f8:	cli    
  4183f9:	out    0x37,al
  4183fb:	cmp    ah,bl
  4183fd:	aas    
  4183fe:	pusha  
  4183ff:	sbb    bh,al
  418401:	fdivr  QWORD PTR [esi-0x5656648b]
  418407:	sub    esi,esp
  418409:	out    0xe6,al
  41840b:	cwde   
  41840c:	pop    ebx
  41840d:	cwde   
  41840e:	out    0xd9,eax
  418410:	mov    BYTE PTR [esi],0x1b
  418413:	sbb    ebx,DWORD PTR [ebx]
  418415:	xor    al,0x9b
  418417:	out    0x2c,eax
  418419:	das    
  41841a:	das    
  41841b:	mov    bl,0xba
  41841d:	jp     0x4183b8
  41841f:	inc    edx
  418420:	mov    eax,ds:0x2cdcdcc8
  418425:	jno    0x418443
  418427:	jmp    0x418407
  418429:	add    ecx,esi
  41842b:	nop
  41842c:	icebp  
  41842d:	icebp  
  41842e:	or     ebx,edx
  418430:	nop
  418431:	hlt    
  418432:	test   BYTE PTR [ebx+0x18cd53b3],dh
  418438:	data16 loop 0x4184aa
  41843b:	fdivr  QWORD PTR [ecx+eax*2-0x1883996a]
  418442:	popf   
  418443:	outs   dx,DWORD PTR ds:[esi]
  418444:	mov    bl,0xb5
  418446:	mov    ch,0x4d
  418448:	sbb    BYTE PTR [esi+0x77dbadc],al
  41844e:	aas    
  41844f:	lock sub DWORD PTR [ebp+eax*1+0x12],eax
  418454:	mov    bl,0x41
  418456:	push   0xffffff96
  418458:	fdivr  QWORD PTR gs:[ecx-0x1d]
  41845c:	or     eax,0x1e2ddbce
  418461:	mov    esp,0xf9c68f77
  418466:	cmp    DWORD PTR [ebx-0x346b4ccd],esi
  41846c:	and    eax,0xa53c9fd6
  418471:	shr    DWORD PTR [eax+0x32],1
  418474:	cmp    DWORD PTR [ecx],edi
  418476:	leave  
  418477:	int3   
  418478:	in     al,dx
  418479:	sub    al,0xb5
  41847b:	push   0xffffff85
  41847d:	sub    al,0x85
  41847f:	dec    esi
  418480:	mov    bh,0xc3
  418482:	pop    eax
  418483:	mov    ch,0xc6
  418485:	int    0x5b
  418487:	mov    bh,0x38
  418489:	(bad)  
  41848b:	jecxz  0x418485
  41848d:	clc    
  41848e:	cwde   
  41848f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418490:	in     eax,0xb
  418492:	and    al,0x69
  418494:	retf   0xd6d6
  418497:	dec    ebx
  418498:	push   0xffffffd5
  41849a:	sbb    dh,BYTE PTR [ebp+0x5b5b1ab1]
  4184a0:	mov    ebx,0x5c136304
  4184a5:	fdivr  st,st(4)
  4184a7:	gs (bad) 
  4184a9:	mov    esi,0x61649bf3
  4184ae:	scas   al,BYTE PTR es:[edi]
  4184af:	adc    BYTE PTR [edx+0x3ea68614],dl
  4184b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184b6:	adc    al,0xe8
  4184b8:	iret   
  4184b9:	add    cl,BYTE PTR [edi+0x33]
  4184bc:	ins    DWORD PTR es:[edi],dx
  4184bd:	call   0xd4a5f2d
  4184c2:	pushf  
  4184c3:	xchg   edi,eax
  4184c4:	jl     0x4184c6
  4184c6:	aas    
  4184c7:	enter  0x4111,0x9a
  4184cb:	jmp    0x996a1938
  4184d0:	ror    BYTE PTR [ecx],0x19
  4184d3:	dec    edx
  4184d4:	mov    eax,0x38600830
  4184d9:	sbb    BYTE PTR [esi+edi*8-0x28],dl
  4184dd:	out    0x6f,eax
  4184df:	(bad)  
  4184e0:	mov    ch,0x9f
  4184e2:	(bad)  
  4184e3:	in     eax,dx
  4184e4:	std    
  4184e5:	xlat   BYTE PTR ds:[ebx]
  4184e6:	mov    dh,0x42
  4184e8:	lock mov ch,0x15
  4184eb:	add    bh,cl
  4184ed:	jg     0x4184e0
  4184ef:	aas    
  4184f0:	lahf   
  4184f1:	push   esi
  4184f2:	idiv   esi
  4184f4:	out    dx,al
  4184f5:	pop    edi
  4184f6:	sub    BYTE PTR [ebp+0x17c8f2e3],dl
  4184fc:	xchg   edx,eax
  4184fd:	into   
  4184fe:	out    0xfe,eax
  418500:	dec    ebp
  418501:	outs   dx,BYTE PTR ds:[esi]
  418502:	add    cl,BYTE PTR [eax+0x3e184f73]
  418508:	retf   
  418509:	je     0x41851d
  41850b:	nop
  41850c:	in     al,0xfe
  41850e:	dec    ebx
  41850f:	push   es
  418510:	loope  0x418542
  418512:	sbb    DWORD PTR [ebp-0x1df8b95a],0xfffffff0
  418519:	xchg   ecx,eax
  41851a:	mov    ah,0xcf
  41851c:	mov    al,0x0
  41851e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41851f:	rol    DWORD PTR [ebx],cl
  418521:	sub    ch,ch
  418523:	inc    edi
  418524:	in     al,dx
  418525:	(bad)  
  418526:	outs   dx,DWORD PTR ds:[esi]
  418527:	push   ebx
  418528:	popf   
  418529:	cwde   
  41852a:	addr16 jb 0x4184d9
  41852d:	int3   
  41852e:	(bad)  
  418530:	ds retf 0x59f3
  418534:	xor    ch,cl
  418536:	ds pop edi
  418538:	mov    esi,0xd4e4c978
  41853d:	adc    al,0xbe
  41853f:	pop    ds
  418540:	mov    al,0xbe
  418542:	mov    cl,0xce
  418544:	fldcw  WORD PTR [ecx+0xe1bccc9]
  41854a:	imul   ebx,DWORD PTR [ebp+ebx*4-0x42a3af5f],0xa9729d7e
  418555:	dec    eax
  418556:	test   eax,0x230c2258
  41855b:	or     eax,0xb9f981d9
  418560:	jns    0x41857c
  418562:	out    0x4d,eax
  418564:	push   ds
  418565:	cmp    eax,0xbcf34fb8
  41856a:	dec    ecx
  41856b:	adc    BYTE PTR [esi-0x46],al
  41856e:	dec    ebx
  41856f:	push   eax
  418570:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418571:	inc    ebx
  418572:	test   eax,0x62626652
  418577:	xchg   edx,eax
  418578:	xor    BYTE PTR [eax+edx*1],ch
  41857b:	xchg   BYTE PTR [ecx],al
  41857d:	rcl    ebx,cl
  41857f:	push   ebx
  418580:	ins    BYTE PTR es:[edi],dx
  418581:	outs   dx,DWORD PTR ds:[esi]
  418582:	ins    DWORD PTR es:[edi],dx
  418583:	jmp    0x418552
  418585:	ds push cs
  418587:	(bad)  
  418588:	cwde   
  418589:	popf   
  41858a:	popf   
  41858b:	jecxz  0x418577
  41858d:	aad    0x2b
  41858f:	inc    esp
  418590:	push   ecx
  418591:	sub    DWORD PTR [ebx],0x1fd1af57
  418597:	hlt    
  418598:	fnstcw WORD PTR [esi+esi*8-0x74]
  41859c:	addr16 iret 
  41859e:	ss enter 0x94b2,0x28
  4185a3:	mov    ch,al
  4185a5:	cmc    
  4185a6:	mov    edx,0xd302a214
  4185ab:	rcl    DWORD PTR [ebx-0x3c],cl
  4185ae:	dec    ecx
  4185af:	ret    0xd6f6
  4185b2:	push   cs
  4185b3:	pop    esi
  4185b4:	loopne 0x418597
  4185b6:	sti    
  4185b7:	ds daa 
  4185b9:	(bad)  
  4185ba:	daa    
  4185bb:	je     0x418578
  4185bd:	fiadd  DWORD PTR [esi-0x2c50e0e2]
  4185c3:	ins    BYTE PTR es:[edi],dx
  4185c4:	imul   esi,DWORD PTR ss:[edx+ebx*4],0xaf486184
  4185cc:	fbld   TBYTE PTR [edi+0x3ea73cd9]
  4185d2:	push   esi
  4185d3:	arpl   WORD PTR [esi+0x66],sp
  4185d6:	xchg   BYTE PTR [esi-0x5d],al
  4185d9:	leave  
  4185da:	shl    DWORD PTR [edi+0x7af6e84f],cl
  4185e0:	sub    bh,cl
  4185e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185e3:	pop    edx
  4185e4:	ror    DWORD PTR [esi],1
  4185e6:	ror    ebx,1
  4185e8:	xchg   edi,eax
  4185e9:	cs mov dl,0xb7
  4185ec:	jg     0x4185ae
  4185ee:	fnstsw WORD PTR [ebx-0x48444d11]
  4185f4:	(bad)  
  4185f5:	in     al,0xd4
  4185f7:	and    al,0x37
  4185f9:	outs   dx,BYTE PTR ds:[esi]
  4185fa:	fsub   QWORD PTR [esp+eiz*2+0x3870d604]
  418601:	pusha  
  418602:	jecxz  0x4185dd
  418604:	jae    0x4185d8
  418606:	xor    al,0x61
  418608:	inc    si
  41860a:	test   DWORD PTR [ebp+0x5c],0xcbcc7b5b
  418611:	xchg   edi,eax
  418612:	das    
  418613:	sub    BYTE PTR [edi+0x5d5e5cca],dl
  418619:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41861a:	pop    esp
  41861b:	scas   al,BYTE PTR es:[edi]
  41861c:	mov    al,0xb0
  41861e:	mov    al,0x48
  418620:	scas   eax,DWORD PTR es:[edi]
  418621:	xlat   BYTE PTR ds:[ebx]
  418622:	popa   
  418623:	jnp    0x4186a0
  418625:	xchg   edx,edi
  418627:	js     0x4185c6
  418629:	leave  
  41862a:	leave  
  41862b:	or     DWORD PTR [esi],esi
  41862d:	ss (bad) 
  41862f:	jns    0x4185ea
  418631:	mov    ch,0x45
  418633:	xchg   esi,eax
  418634:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418635:	pop    esp
  418636:	mov    ebp,0xe393957a
  41863b:	adc    ecx,DWORD PTR [esi]
  41863d:	push   cs
  41863e:	jns    0xc5c70f06
  418644:	inc    ebp
  418645:	mov    ah,BYTE PTR [ebp-0x1e759bde]
  41864b:	jo     0x41868d
  41864d:	test   eax,0xead2e152
  418652:	gs enter 0x1a32,0x67
  418657:	or     eax,0xc4ba5d2e
  41865c:	fcom   st(4)
  41865e:	or     al,0xfb
  418660:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418661:	addr16 pop esp
  418663:	(bad)  
  418665:	jnp    0x4185f3
  418667:	jge    0x418664
  418669:	push   edi
  41866a:	mov    ebp,edi
  41866c:	fsub   st(7),st
  41866e:	xchg   ebx,eax
  41866f:	bound  esp,QWORD PTR [edx-0x3]
  418672:	out    0xff,al
  418674:	push   edx
  418675:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418676:	jmp    0xffada44
  41867b:	inc    eax
  41867c:	or     bh,BYTE PTR [esi+0x2]
  41867f:	aas    
  418680:	call   FWORD PTR [esp+edx*1+0x4f]
  418684:	loopne 0x41861f
  418686:	sbb    al,0x0
  418688:	dec    esp
  418689:	push   cs
  41868a:	mov    dh,BYTE PTR [ecx]
  41868c:	das    
  41868d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41868e:	mov    es,eax
  418690:	xchg   edi,eax
  418691:	jnp    0x41868b
  418693:	mov    al,ds:0xf699c306
  418698:	in     al,0x8d
  41869a:	pop    edi
  41869b:	cli    
  41869c:	mov    ecx,0xbcee6eaf
  4186a1:	outs   dx,DWORD PTR ds:[esi]
  4186a2:	mov    edx,?
  4186a4:	sti    
  4186a5:	cmp    al,0x5e
  4186a7:	pop    ebx
  4186a8:	pop    ds
  4186a9:	inc    eax
  4186aa:	fcmovu st,st(4)
  4186ac:	dec    DWORD PTR [ecx+ebx*2-0xb]
  4186b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186b1:	xor    eax,DWORD PTR [ebx]
  4186b3:	lods   eax,DWORD PTR ds:[esi]
  4186b4:	rol    ah,0xfc
  4186b7:	sbb    eax,0xdd489f47
  4186bc:	int3   
  4186bd:	popa   
  4186be:	ins    BYTE PTR es:[edi],dx
  4186bf:	icebp  
  4186c0:	in     al,0xda
  4186c2:	les    ecx,FWORD PTR [esi-0x7725b0cc]
  4186c8:	popf   
  4186c9:	mov    al,0x61
  4186cb:	xchg   edx,eax
  4186cc:	inc    ecx
  4186cd:	mov    ebx,0x3390510f
  4186d2:	jle    0x41873e
  4186d4:	jb     0x418698
  4186d6:	add    DWORD PTR [eax],0xffffffe2
  4186d9:	or     BYTE PTR [edx-0x59c21b1],cl
  4186df:	in     al,0x4f
  4186e1:	mov    cl,0xf7
  4186e3:	jmp    0xc73e2d87
  4186e8:	(bad)  
  4186e9:	jo     0x41875f
  4186eb:	clc    
  4186ec:	nop
  4186ed:	jbe    0x4186aa
  4186ef:	inc    ebp
  4186f0:	xor    DWORD PTR [edx-0x6378f3e8],ecx
  4186f6:	xor    eax,0xfc7b58ce
  4186fb:	mov    BYTE PTR [ebp-0x210a68b5],dl
  418701:	add    ch,cl
  418703:	jae    0x4186d7
  418705:	xor    al,0xe5
  418707:	cli    
  418708:	int    0x1b
  41870a:	js     0x4186aa
  41870c:	inc    edi
  41870d:	mov    eax,ds:0x6ed3a458
  418712:	push   ecx
  418713:	cs push edi
  418715:	cwde   
  418716:	cwde   
  418717:	cwde   
  418718:	(bad)  
  418719:	idiv   DWORD PTR [ebp+0x5d]
  41871c:	(bad)  
  41871d:	fstp   TBYTE PTR [edx]
  41871f:	daa    
  418720:	mov    fs,WORD PTR [ebx+0x3c]
  418723:	in     eax,0x51
  418725:	xor    bh,BYTE PTR [ebx-0x38610524]
  41872b:	ret    0x22c2
  41872e:	in     eax,0x72
  418730:	cdq    
  418731:	enter  0xf014,0x3c
  418735:	jns    0x418729
  418737:	cwde   
  418738:	js     0x41876a
  41873a:	fs jmp 0x413d8d02
  418740:	ja     0x418728
  418742:	sbb    eax,0x71c4060c
  418747:	inc    edx
  418748:	pusha  
  418749:	adc    al,BYTE PTR [edi+0x18272726]
  41874f:	or     al,0x6
  418751:	mov    esp,0x8e039df7
  418756:	mov    cs,WORD PTR [edi+0x7c6a54a9]
  41875c:	out    0x33,al
  41875e:	aas    
  41875f:	dec    eax
  418760:	mov    ch,0x56
  418762:	and    eax,0x2626124d
  418767:	es stc 
  418769:	(bad)  
  41876a:	aaa    
  41876b:	mov    edi,0x2f97cbc1
  418770:	(bad)  
  418772:	fsubrp st(2),st
  418774:	sti    
  418775:	aas    
  418776:	cmc    
  418777:	sub    DWORD PTR [esi],edi
  418779:	icebp  
  41877a:	mov    DWORD PTR [edi+0x68],ecx
  41877d:	addr16 fdivr st(2),st
  418780:	and    al,BYTE PTR [edi+0x47]
  418783:	daa    
  418784:	fdiv   st(5),st
  418786:	into   
  418787:	mov    ebx,0x6e6d5ab4
  41878c:	fistp  QWORD PTR [ecx-0x48a45233]
  418792:	test   al,0xd5
  418794:	push   0x54
  418796:	retf   0x4a25
  418799:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41879a:	xor    bh,BYTE PTR [edi-0x32402403]
  4187a0:	not    dh
  4187a2:	ss int 0x46
  4187a5:	sbb    DWORD PTR [edi],0xfffffffe
  4187a8:	cld    
  4187a9:	out    0x99,eax
  4187ab:	popf   
  4187ac:	sahf   
  4187ad:	mov    eax,ds:0x7a633cd1
  4187b2:	jp     0x41873a
  4187b4:	arpl   bx,dx
  4187b6:	xchg   esp,eax
  4187b7:	xor    al,0x8a
  4187b9:	and    al,BYTE PTR [esi+0x27272183]
  4187bf:	daa    
  4187c0:	ins    BYTE PTR es:[edi],dx
  4187c1:	ins    BYTE PTR es:[edi],dx
  4187c2:	lods   al,BYTE PTR ds:[esi]
  4187c3:	push   ebx
  4187c4:	aas    
  4187c5:	cmp    DWORD PTR [esi+0x6c],esp
  4187c8:	ins    BYTE PTR es:[edi],dx
  4187c9:	mov    WORD PTR [ebx+0x24926f37],ds
  4187cf:	xor    edi,edx
  4187d1:	scas   eax,DWORD PTR es:[edi]
  4187d2:	fnstsw ax
  4187d4:	fidivr WORD PTR [ebp+0x78bd6c7b]
  4187da:	and    edi,0xbd5fae29
  4187e0:	inc    esi
  4187e1:	cmp    al,0x1c
  4187e3:	jb     0x418857
  4187e5:	jl     0x418833
  4187e7:	sbb    al,0xf
  4187e9:	or     DWORD PTR [edx+0x7cdf3780],eax
  4187ef:	push   ebx
  4187f0:	xlat   BYTE PTR ds:[ebx]
  4187f1:	pop    ebx
  4187f2:	int3   
  4187f3:	dec    esp
  4187f4:	mov    cl,0xbe
  4187f6:	inc    BYTE PTR [eiz*4+0x71f5ea3c]
  4187fd:	mov    bl,0x1
  4187ff:	jmp    0xa735751e
  418804:	jmp    0xf1f31c87
  418809:	je     0x4187a8
  41880b:	push   0xffffffad
  41880d:	(bad)  
  41880e:	in     eax,0xd5
  418810:	retf   
  418811:	adc    al,0x8e
  418813:	(bad)  
  418814:	cmp    DWORD PTR [ebx],edi
  418816:	cmp    DWORD PTR ds:0x771bcee0,eax
  41881c:	sbb    BYTE PTR [eax+0x23cde722],ch
  418822:	fidivr WORD PTR [edx-0xf]
  418825:	or     edx,DWORD PTR [edi+ebx*1]
  418828:	cld    
  418829:	push   cs
  41882a:	fst    QWORD PTR [eax]
  41882c:	and    cl,BYTE PTR [edi]
  41882e:	xchg   BYTE PTR [ebx],al
  418830:	ret    
  418831:	clc    
  418832:	pop    ecx
  418833:	outs   dx,BYTE PTR ds:[esi]
  418834:	ffreep st(7)
  418836:	mov    cl,0xa6
  418838:	pop    DWORD PTR [eax+0x41]
  41883b:	pushf  
  41883c:	in     eax,0x5e
  41883e:	jl     0x4188b0
  418840:	call   0x889b590f
  418845:	inc    ecx
  418846:	xchg   edx,eax
  418847:	(bad)  
  418848:	sbb    ebx,DWORD PTR [eax-0x6e7d3c5f]
  41884e:	lahf   
  41884f:	sub    ebx,DWORD PTR [edx]
  418851:	or     DWORD PTR [ebx],ecx
  418853:	xchg   dh,dl
  418855:	pop    edi
  418856:	nop
  418857:	test   eax,0xe3fc7ba8
  41885c:	shl    BYTE PTR [edi],0xde
  41885f:	pop    edi
  418860:	outs   dx,BYTE PTR ds:[esi]
  418861:	stc    
  418862:	mov    ebp,0x22daf1f
  418867:	clc    
  418868:	(bad)  
  41886a:	in     eax,0xfd
  41886c:	test   eax,0x6dfb6f72
  418871:	aas    
  418872:	xor    al,0x1f
  418874:	cmp    BYTE PTR [ecx],bh
  418876:	(bad)  
  418877:	test   eax,0x59b151ce
  41887c:	or     al,0xe2
  41887f:	cdq    
  418880:	test   BYTE PTR [ebp+0xfdc934],cl
  418886:	(bad)  
  418887:	loope  0x4188f0
  418889:	adc    al,BYTE PTR [edi-0x258fc5dc]
  41888f:	and    ebx,0xffffffb6
  418892:	jno    0x418894
  418894:	sbb    al,BYTE PTR [edi-0x71]
  418897:	adc    al,0x84
  418899:	inc    esp
  41889a:	mov    eax,ds:0x50070389
  41889f:	jmp    0x418916
  4188a1:	test   al,0x6f
  4188a3:	jg     0x418832
  4188a5:	dec    esi
  4188a6:	xor    DWORD PTR [eax-0x32d902c1],esp
  4188ac:	inc    esi
  4188ad:	adc    esi,DWORD PTR [edx-0x4ccc4cdf]
  4188b3:	je     0x4188ef
  4188b5:	ins    DWORD PTR es:[edi],dx
  4188b6:	jp     0x4188b5
  4188b8:	push   ds
  4188b9:	aaa    
  4188ba:	outs   dx,DWORD PTR ds:[esi]
  4188bb:	fsub   QWORD PTR [eax+0x6ad5d75e]
  4188c1:	jp     0x4188e6
  4188c3:	ror    BYTE PTR [edx],1
  4188c5:	lds    esp,FWORD PTR [edx-0x7f]
  4188c8:	stc    
  4188c9:	test   DWORD PTR ds:0x4f36adda,eax
  4188cf:	lahf   
  4188d0:	cmp    al,0x26
  4188d2:	dec    esi
  4188d3:	push   ebx
  4188d4:	push   0xffffffd5
  4188d6:	sbb    bl,bl
  4188d8:	cmp    edi,DWORD PTR [edx-0x39]
  4188db:	call   0x6e3:0x7eb84934
  4188e2:	xchg   ebp,eax
  4188e3:	jb     0x41886a
  4188e5:	push   edx
  4188e6:	test   eax,0xa55ab548
  4188eb:	shr    DWORD PTR [ecx-0x2f],cl
  4188ee:	push   0xab55a834
  4188f3:	ror    BYTE PTR fs:[ebx+0x359c9be7],0xce
  4188fb:	push   eax
  4188fc:	sahf   
  4188fd:	loop   0x41888c
  4188ff:	aaa    
  418900:	ds inc edx
  418902:	mov    ch,0x52
  418904:	arpl   WORD PTR [ecx+0x71],si
  418907:	xchg   ecx,eax
  418908:	mov    DWORD PTR [ecx+0x7c3d1e71],ecx
  41890e:	(bad)  
  41890f:	shl    DWORD PTR [edi+0x60c194f],cl
  418915:	add    al,0x7e
  418917:	inc    eax
  418918:	sbb    al,0xc7
  41891a:	hlt    
  41891b:	pop    es
  41891c:	add    esp,DWORD PTR [esi+0x67]
  41891f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418920:	sub    DWORD PTR [ebp-0x61626375],edx
  418926:	mov    ds:0x45144794,al
  41892b:	pushf  
  41892c:	sahf   
  41892d:	sahf   
  41892e:	jno    0x4189a6
  418930:	jp     0x418934
  418932:	dec    edx
  418933:	test   DWORD PTR [edi],0xf44b94a8
  418939:	jp     0x418978
  41893b:	stos   BYTE PTR es:[edi],al
  41893c:	aad    0x9a
  41893e:	out    dx,al
  41893f:	dec    ebx
  418940:	mov    eax,0x8e30c5b5
  418945:	cdq    
  418946:	call   0x9d9e:0x8d9bd29c
  41894d:	loope  0x4189c8
  41894f:	mov    edx,0xc1c1f83d
  418954:	or     DWORD PTR [esi+0xd],0x9bb1999e
  41895b:	jb     0x418999
  41895d:	jg     0x418955
  41895f:	mov    WORD PTR [ebx+ecx*2],?
  418962:	sbb    DWORD PTR [ebx],ebx
  418964:	sbb    esp,DWORD PTR [ebx-0x68cd1a4]
  41896a:	loop   0x418991
  41896c:	out    0xe6,al
  41896e:	pop    ss
  41896f:	mov    eax,0xbc3bf77b
  418974:	js     0x41896f
  418976:	adc    BYTE PTR [esi-0x55],0xc5
  41897a:	int    0x1b
  41897c:	aaa    
  41897d:	test   al,0xd5
  41897f:	jmp    0x41899b
  418981:	dec    esi
  418982:	inc    edi
  418983:	add    eax,0xd06cd1a
  418988:	arpl   bx,cx
  41898a:	(bad)  
  41898b:	lea    ecx,[edi+0x31f8f6b3]
  418991:	fwait
  418992:	fwait
  418993:	iret   
  418994:	call   0xb91e048e
  418999:	jno    0x41891e
  41899b:	and    al,0x8d
  41899d:	jmp    0x69e64517
  4189a2:	inc    esi
  4189a3:	push   esp
  4189a4:	sub    al,0x50
  4189a6:	stos   DWORD PTR es:[edi],eax
  4189a7:	push   esp
  4189a8:	mov    ecx,0x9d26f371
  4189ad:	dec    esi
  4189ae:	fwait
  4189af:	int    0xe7
  4189b1:	fwait
  4189b2:	push   esp
  4189b3:	sub    edx,DWORD PTR ds:0x6ce3ebc6
  4189b9:	ds jg  0x41898a
  4189bc:	into   
  4189bd:	out    dx,al
  4189be:	ss mov ch,0x5a
  4189c1:	(bad)  
  4189c2:	cli    
  4189c3:	clc    
  4189c4:	cmp    BYTE PTR [edi],cl
  4189c6:	out    dx,eax
  4189c7:	(bad)  
  4189c9:	hlt    
  4189ca:	in     al,0x84
  4189cc:	retf   
  4189cd:	push   edi
  4189ce:	scas   eax,DWORD PTR es:[edi]
  4189cf:	jae    0x4189a3
  4189d1:	dec    ebx
  4189d2:	cmp    DWORD PTR [eax-0x5a6f005],edi
  4189d8:	jmp    0xfa63:0xf9f148ff
  4189df:	inc    esi
  4189e0:	mov    al,0x67
  4189e2:	xchg   edx,eax
  4189e3:	std    
  4189e4:	cdq    
  4189e5:	in     eax,0xb4
  4189e7:	xchg   edx,eax
  4189e8:	gs pop edx
  4189ea:	add    BYTE PTR [eax-0xfcfed74],ah
  4189f0:	ds hlt 
  4189f2:	repnz cli 
  4189f4:	add    BYTE PTR [ebp-0x2c7ef1ea],al
  4189fa:	sub    al,0x24
  4189fc:	and    eax,0x312a0a77
  418a01:	adc    DWORD PTR [esp+edi*1+0x72f3c08f],edi
  418a08:	test   DWORD PTR [ebx],edx
  418a0a:	clc    
  418a0b:	xor    al,cl
  418a0d:	ret    0x4fc2
  418a10:	(bad)  
  418a11:	aam    0x1f
  418a13:	stc    
  418a14:	fstp   DWORD PTR [edi+0x2e7bb5ff]
  418a1a:	outs   dx,BYTE PTR ds:[esi]
  418a1b:	jge    0x418a8a
  418a1d:	mov    ss,edi
  418a1f:	push   edx
  418a20:	add    BYTE PTR [esi+edi*8-0x1a],ch
  418a24:	iret   
  418a25:	push   ebp
  418a26:	ret    0x7fbb
  418a29:	sti    
  418a2a:	mov    edi,0x99df82b
  418a2f:	pushf  
  418a30:	pop    edx
  418a31:	ins    BYTE PTR es:[edi],dx
  418a32:	inc    ecx
  418a33:	add    BYTE PTR [edx],cl
  418a35:	daa    
  418a36:	inc    ecx
  418a37:	ret    
  418a38:	icebp  
  418a39:	repnz sti 
  418a3b:	xchg   edx,eax
  418a3c:	push   ss
  418a3d:	mov    WORD PTR [esi],?
  418a3f:	das    
  418a40:	jbe    0x4189e4
  418a42:	add    dh,BYTE PTR [ecx-0x1d1cfaf8]
  418a48:	fnstsw WORD PTR [edx]
  418a4a:	cmp    DWORD PTR [esi+0x2],0x77275085
  418a51:	adc    BYTE PTR [ecx],0x4
  418a54:	mov    esi,0xdf02cfe
  418a59:	and    DWORD PTR [eax+eiz*4+0x2fe33106],eax
  418a60:	mov    edi,0x98f14cce
  418a65:	(bad)  
  418a66:	clc    
  418a67:	xor    eax,0x5c8b89a2
  418a6c:	pop    edx
  418a6d:	pop    esi
  418a6e:	and    BYTE PTR [edx-0x383839de],cl
  418a74:	add    DWORD PTR [ebp+0x18],eax
  418a77:	inc    ebp
  418a78:	dec    esp
  418a79:	dec    esi
  418a7a:	dec    esi
  418a7b:	push   eax
  418a7c:	stos   DWORD PTR es:[edi],eax
  418a7d:	lea    esi,[ecx-0x2e314142]
  418a83:	rcl    DWORD PTR [ecx],1
  418a85:	xchg   ebx,eax
  418a86:	xchg   ebx,eax
  418a87:	xchg   ebx,eax
  418a88:	hlt    
  418a89:	push   es
  418a8a:	cmp    eax,0x69b6b6b6
  418a8f:	xor    al,0x1b
  418a91:	aam    0x6a
  418a93:	xor    eax,0xe8e6e766
  418a98:	je     0x418ad4
  418a9a:	aam    0x6a
  418a9c:	arpl   WORD PTR [edi+ecx*4+0x408d9b8f],cx
  418aa3:	es cdq 
  418aa5:	cwde   
  418aa6:	cwde   
  418aa7:	in     al,0xd1
  418aa9:	ret    
  418aaa:	pop    es
  418aab:	mov    esp,0xbb49b17c
  418ab0:	shl    DWORD PTR [ecx+0x6c],cl
  418ab3:	lods   al,BYTE PTR ds:[esi]
  418ab4:	call   0xaf19:0xe77
  418aba:	(bad)  
  418abb:	push   ebx
  418abc:	sub    dl,BYTE PTR [ebp-0x18]
  418abf:	cmc    
  418ac0:	mov    edx,0x26254a94
  418ac5:	es es pop eax
  418ac8:	pop    ebx
  418ac9:	jnp    0x418a97
  418acb:	icebp  
  418acc:	icebp  
  418acd:	and    DWORD PTR [ebp-0x482470b2],edi
  418ad3:	outs   dx,DWORD PTR ds:[esi]
  418ad4:	xor    DWORD PTR [ebx+0x72],esp
  418ad7:	hlt    
  418ad8:	push   edi
  418ad9:	scas   eax,DWORD PTR es:[edi]
  418ada:	pop    esp
  418adb:	loope  0x418ac2
  418add:	mov    edx,DWORD PTR [edi+0x7bdef7bc]
  418ae3:	in     al,dx
  418ae4:	out    dx,al
  418ae5:	out    dx,al
  418ae6:	push   eax
  418ae7:	sub    dl,BYTE PTR [ebp+0x11acb0b8]
  418aed:	les    edx,FWORD PTR [ebp+0x61842bd5]
  418af3:	sar    BYTE PTR [ebx+0x77],0xdf
  418af7:	arpl   WORD PTR [ebp+0x63],di
  418afa:	cmp    DWORD PTR [esi+0x57],0x17
  418afe:	retf   0x6ad4
  418b01:	xor    eax,0x5ce3ebc6
  418b06:	mov    edx,0xcf679174
  418b0b:	sahf   
  418b0c:	icebp  
  418b0d:	loopne 0x418aed
  418b0f:	cmp    eax,0x74777776
  418b14:	mov    ds:0x28974bd2,eax
  418b19:	push   edi
  418b1a:	stos   DWORD PTR es:[edi],eax
  418b1b:	pop    esp
  418b1c:	mov    edi,0xb75e9d71
  418b21:	(bad)  
  418b22:	mov    ebx,0xe39779df
  418b27:	jecxz  0x418b8c
  418b29:	mov    al,BYTE PTR [ebp-0x2391c8fe]
  418b2f:	and    al,0xa
  418b31:	add    ecx,DWORD PTR [edx+0x25]
  418b34:	mov    ebp,0xd6d6c969
  418b39:	dec    ebx
  418b3a:	(bad)  
  418b3c:	out    0x4c,eax
  418b3e:	dec    edi
  418b3f:	dec    ebp
  418b40:	push   ecx
  418b41:	scas   al,BYTE PTR es:[edi]
  418b42:	push   esp
  418b43:	fcomp  st(1)
  418b45:	fisub  WORD PTR [edx-0x13]
  418b48:	icebp  
  418b49:	sbb    ch,BYTE PTR [ecx+0x12]
  418b4c:	mov    bl,0xbc
  418b4e:	mov    esp,0x2ccceccc
  418b53:	jae    0x418b60
  418b55:	or     ecx,DWORD PTR [ebp+edx*8+0x64fa78c7]
  418b5c:	int    0x84
  418b5e:	repnz or DWORD PTR es:[ebx+0x4fa7f588],esp
  418b66:	jns    0x418b66
  418b68:	cld    
  418b69:	sbb    DWORD PTR [ebx],edx
  418b6b:	xchg   ebx,eax
  418b6c:	adc    ebx,DWORD PTR [esi+edi*4-0x44]
  418b70:	stos   BYTE PTR es:[edi],al
  418b71:	mov    bh,0x36
  418b73:	(bad)  
  418b75:	cli    
  418b76:	mov    ebp,0x7118611e
  418b7b:	gs jne 0x418b13
  418b7e:	cdq    
  418b7f:	mov    ecx,0x17f99d39
  418b84:	(bad)  
  418b85:	pop    esp
  418b86:	mov    eax,0xdddd8170
  418b8b:	sbb    eax,0x89b6b6b6
  418b90:	jmp    0x37ef:0x4a7e84b3
  418b97:	(bad)  
  418b98:	xor    dl,BYTE PTR [edi-0x3dc60222]
  418b9e:	mov    sp,WORD PTR [ecx-0x713b1377]
  418ba5:	iret   
  418ba6:	(bad)  
  418ba7:	push   ebx
  418ba8:	push   ss
  418ba9:	inc    eax
  418baa:	push   0x5f
  418bac:	push   eax
  418bad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418bae:	mov    edi,0x406899af
  418bb3:	call   0xc110aba3
  418bb8:	inc    eax
  418bba:	sar    DWORD PTR [edi-0x59],cl
  418bbd:	sub    ch,BYTE PTR [edi+0x8]
  418bc0:	loop   0x418bdb
  418bc2:	and    eax,0x19033b63
  418bc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418bc8:	xchg   esp,eax
  418bc9:	fs mov ecx,0x4d6049
  418bcf:	psubsb mm6,QWORD PTR [ebp-0x460aa419]
  418bd6:	mov    edi,0xb1bf73f9
  418bdb:	jno    0x418bd9
  418bdd:	add    DWORD PTR [eax-0xe0cc032],esi
  418be3:	pop    edx
  418be4:	call   0xb27c:0xafb3c900
  418beb:	xchg   esp,eax
  418bec:	sbb    al,0xaf
  418bee:	stos   BYTE PTR es:[edi],al
  418bef:	xor    bh,BYTE PTR [edx+ebx*2+0x406123e4]
  418bf6:	dec    edi
  418bf7:	in     al,dx
  418bf8:	jge    0x418c53
  418bfa:	sbb    BYTE PTR [ebp+0x5a46006b],ah
  418c00:	adc    BYTE PTR [ecx+0x4d260eff],0xd3
  418c07:	sbb    DWORD PTR [esi+0xc],0xffffffcd
  418c0b:	sahf   
  418c0c:	mov    cl,0xf9
  418c0e:	xor    BYTE PTR [ecx+0x1f],ah
  418c11:	adc    edi,ebx
  418c13:	adc    eax,0x85912024
  418c18:	je     0x418c22
  418c1a:	inc    ecx
  418c1b:	or     ch,bh
  418c1d:	adc    al,0x8a
  418c1f:	mov    edi,0x3dbcabf3
  418c24:	rep ins DWORD PTR es:[edi],dx
  418c26:	ficomp DWORD PTR [edi-0x65c62808]
  418c2c:	cld    
  418c2d:	dec    ecx
  418c2e:	xchg   edx,eax
  418c2f:	mov    al,0xc6
  418c31:	test   ebp,esp
  418c33:	cmp    ah,BYTE PTR [edi-0x39]
  418c36:	daa    
  418c37:	cmp    al,0x7a
  418c39:	lock sbb cl,0xd9
  418c3d:	pop    ecx
  418c3e:	xchg   esi,eax
  418c3f:	cs pop esp
  418c41:	mov    al,ds:0xece4de75
  418c46:	in     al,dx
  418c47:	or     al,0xf5
  418c49:	fsub   DWORD PTR [ebx-0xb]
  418c4c:	shr    BYTE PTR [edx],cl
  418c4e:	adc    edx,DWORD PTR [ebx+0x4d9ab493]
  418c54:	fld    TBYTE PTR [ecx-0x7675ac29]
  418c5a:	icebp  
  418c5b:	jno    0x418c6b
  418c5d:	(bad)  
  418c5e:	vmwrite esi,ecx
  418c61:	bound  edx,QWORD PTR [ebx-0x68c54e4f]
  418c67:	scas   eax,DWORD PTR es:[edi]
  418c68:	lods   al,BYTE PTR ds:[esi]
  418c69:	push   edx
  418c6a:	mov    BYTE PTR [edx],cl
  418c6c:	fs pop ecx
  418c6e:	(bad)  
  418c6f:	stc    
  418c70:	jns    0x418c05
  418c72:	mov    cl,0xb1
  418c74:	cmp    dl,BYTE PTR [ebx+0x33]
  418c77:	mov    edx,0xac7d7e1f
  418c7c:	into   
  418c7d:	xchg   ebx,eax
  418c7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c7f:	dec    edi
  418c80:	jns    0x418c7e
  418c82:	call   0x8dac4198
  418c87:	stos   DWORD PTR es:[edi],eax
  418c88:	xlat   BYTE PTR ds:[ebx]
  418c89:	scas   eax,DWORD PTR es:[edi]
  418c8a:	mov    cl,0xb4
  418c8c:	mov    ah,0x44
  418c8e:	mov    bh,0xd3
  418c90:	gs push 0x6a
  418c93:	pop    edx
  418c94:	out    dx,eax
  418c95:	fwait
  418c96:	xchg   edi,eax
  418c97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c98:	mov    ah,0x5b
  418c9a:	out    0x24,eax
  418c9c:	leave  
  418c9d:	xor    al,0x41
  418c9f:	loopne 0x418c8c
  418ca1:	test   BYTE PTR [esi+0x79e51f7e],bl
  418ca7:	aam    0xc6
  418ca9:	(bad)  
  418caa:	cwde   
  418cab:	fwait
  418cac:	fwait
  418cad:	addr16 push 0x6a
  418cb0:	and    cl,0x30
  418cb3:	out    0xf4,al
  418cb5:	hlt    
  418cb6:	test   BYTE PTR [esi-0x45],cl
  418cb9:	dec    ebp
  418cba:	mov    ds:0xe9ade4d9,eax
  418cbf:	sub    DWORD PTR [edx],ebp
  418cc1:	aad    0xa
  418cc3:	fnsave [esi-0x79]
  418cc6:	icebp  
  418cc7:	mov    DWORD PTR [ecx],ecx
  418cc9:	sahf   
  418cca:	call   0xf3c7:0xd0debb8e
  418cd1:	cmp    al,0x4a
  418cd3:	in     eax,0x12
  418cd5:	inc    ecx
  418cd6:	loopne 0x418c6b
  418cd8:	or     DWORD PTR es:[ecx-0x56],ecx
  418cdc:	jae    0x418cfc
  418cde:	mov    dl,0x54
  418ce0:	ja     0x418ce7
  418ce2:	fcmovu st,st(1)
  418ce4:	(bad)  
  418ce6:	stc    
  418ce7:	out    0x73,al
  418ce9:	jp     0x418ca8
  418ceb:	push   ds
  418cec:	sub    edx,DWORD PTR [edi]
  418cee:	das    
  418cef:	jb     0x418ce4
  418cf1:	out    0x2d,al
  418cf3:	es mov bh,0xb9
  418cf7:	mov    al,0x7c
  418cf9:	sub    DWORD PTR [esi-0x41],0x8fc793cb
  418d00:	jmp    0xcd0e87fa
  418d05:	dec    esp
  418d06:	push   ebx
  418d07:	sub    dl,BYTE PTR [ebp-0x5fc7c7c8]
  418d0d:	aad    0x3a
  418d0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d10:	push   eax
  418d11:	sub    al,0x72
  418d13:	imul   esi,ebp,0x1313e332
  418d19:	pop    esp
  418d1a:	mov    edi,0x83c38371
  418d1f:	add    ecx,DWORD PTR [esi]
  418d21:	femms  
  418d23:	mov    ebx,edx
  418d25:	test   BYTE PTR [esi-0x59],ch
  418d28:	retf   
  418d29:	fmulp  st(6),st
  418d2b:	push   cs
  418d2c:	imul   ebp,DWORD PTR [ebx+0x6b],0xffffff94
  418d30:	retf   
  418d31:	fidivr WORD PTR gs:[ebx+eiz*8+0xd]
  418d36:	sub    dl,BYTE PTR [ebp-0x7f1e3cd6]
  418d3c:	inc    esi
  418d3d:	jecxz  0x418cd3
  418d3f:	mov    edx,DWORD PTR [edi]
  418d41:	push   edi
  418d42:	dec    eax
  418d43:	xchg   BYTE PTR [ecx],dh
  418d45:	pop    ss
  418d46:	das    
  418d47:	pop    ebp
  418d48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d49:	mov    ebx,0x6f1853e1
  418d4e:	jb     0x418d79
  418d50:	pop    ebx
  418d51:	addr16 out 0xef,al
  418d54:	call   FWORD PTR [ecx-0x4]
  418d57:	xchg   edi,eax
  418d58:	fwait
  418d59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d5a:	add    DWORD PTR [edx+eax*2],ecx
  418d5d:	lock xor ebx,DWORD PTR [ebp+0x359be9e5]
  418d64:	dec    esi
  418d65:	sbb    al,0xe5
  418d67:	and    DWORD PTR [esi+0x7b41e07c],esi
  418d6d:	mov    al,ds:0xc0e78085
  418d72:	jnp    0x418d34
  418d74:	data16 clc 
  418d76:	and    al,0x99
  418d78:	mov    esi,0x9b2e8d97
  418d7d:	bound  esi,QWORD PTR [edx]
  418d7f:	popa   
  418d80:	pushf  
  418d81:	and    al,0xd3
  418d83:	pop    edx
  418d84:	xor    al,0xc
  418d86:	bnd jmp 0x418d1d
  418d89:	inc    ecx
  418d8a:	add    BYTE PTR [ecx-0x7cb0377e],ch
  418d90:	loop   0x418d53
  418d92:	repz pop ds
  418d94:	add    ebx,DWORD PTR [esi]
  418d96:	jg     0x418de7
  418d98:	cdq    
  418d99:	in     al,0x7b
  418d9b:	je     0x418d59
  418d9d:	xchg   esi,eax
  418d9e:	or     al,ah
  418da0:	(bad)  
  418da2:	push   0x9256effc
  418da7:	fstp   QWORD PTR [edi]
  418da9:	hlt    
  418daa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418dab:	cld    
  418dac:	xlat   BYTE PTR ds:[ebx]
  418dad:	retf   
  418dae:	xor    eax,0x402e92bd
  418db3:	sbb    BYTE PTR [edi+0x4ac8f18e],ah
  418db9:	adc    dl,BYTE PTR [eax+0x1ccafdb4]
  418dbf:	add    DWORD PTR [ecx+0x381ff0b9],edx
  418dc5:	out    dx,eax
  418dc6:	ret    
  418dc7:	out    dx,al
  418dc8:	cdq    
  418dc9:	xchg   BYTE PTR [esi+0x12],bh
  418dcc:	cli    
  418dcd:	push   ecx
  418dce:	data16 loope 0x418e1b
  418dd1:	(bad)
  418dd4:	rep stos BYTE PTR es:[edi],al
  418dd6:	div    DWORD PTR [edi]
  418dd8:	or     eax,DWORD PTR [eax-0x392d688a]
  418dde:	out    dx,eax
  418ddf:	loopne 0x418da0
  418de1:	cld    
  418de2:	inc    edi
  418de3:	in     al,dx
  418de4:	mov    bh,0x3b
  418de6:	and    al,0x93
  418de8:	push   edi
  418de9:	dec    ecx
  418dea:	mov    esp,0x9e2fdb32
  418def:	shr    DWORD PTR [esp+ebx*4+0x52],1
  418df3:	sub    dl,BYTE PTR [ebp+0x68c6d5a9]
  418df9:	xor    al,0x1a
  418dfb:	adc    al,0xa2
  418dfd:	mov    bl,cl
  418dff:	xchg   edi,eax
  418e00:	das    
  418e01:	push   ebx
  418e02:	stos   DWORD PTR es:[edi],eax
  418e03:	lea    esi,[ecx]
  418e05:	xor    edi,DWORD PTR ds:0x1cfbef83
  418e0b:	sbb    eax,0x3f3ad21d
  418e10:	addr16 jl 0x418e75
  418e13:	or     BYTE PTR [esi-0x59],0xcd
  418e17:	retf   
  418e18:	int    0x4d
  418e1a:	cmp    bl,BYTE PTR [ebp+0x31b1b536]
  418e20:	cs pop esi
  418e22:	mov    esi,0x3931428c
  418e27:	xor    eax,0x668a5285
  418e2c:	jecxz  0x418dba
  418e2e:	repz (bad) 
  418e30:	sbb    ebp,edx
  418e32:	ficomp DWORD PTR [eax-0x7483f127]
  418e38:	dec    esi
  418e39:	mov    bh,0xc3
  418e3b:	repnz shl BYTE PTR [edx],cl
  418e3e:	push   edi
  418e3f:	scas   eax,DWORD PTR es:[edi]
  418e40:	pop    esi
  418e41:	mov    ds:0x7563563a,eax
  418e46:	cmc    
  418e47:	xor    dh,BYTE PTR [ecx-0x64]
  418e4a:	push   0x49b9bdf8
  418e4f:	call   0x2881:0x70b85c65
  418e56:	or     al,0x99
  418e58:	sahf   
  418e59:	cdq    
  418e5a:	bound  esp,QWORD PTR gs:[edx-0x7e]
  418e5e:	lods   eax,DWORD PTR ds:[esi]
  418e5f:	lods   eax,DWORD PTR ds:[esi]
  418e60:	sub    eax,0xa23f1ed6
  418e65:	shr    esi,cl
  418e67:	adc    BYTE PTR [ecx+eiz*1+0x349962a5],al
  418e6e:	lea    ebx,[ecx-0x47]
  418e71:	mov    eax,0x67dfa0c2
  418e76:	arpl   WORD PTR [ebx-0x7d],sp
  418e79:	in     eax,dx
  418e7a:	in     eax,dx
  418e7b:	sbb    eax,0x5e47740
  418e80:	mov    eax,0xecb75178
  418e85:	pop    edx
  418e86:	pop    ebx
  418e87:	pop    ebx
  418e88:	jecxz  0x418e53
  418e8a:	fisub  DWORD PTR [ebx-0x32]
  418e8d:	sbb    ah,BYTE PTR [edi-0x34]
  418e90:	int    0x2f
  418e92:	jo     0x418ef5
  418e94:	imul   ecx,DWORD PTR [ecx-0x51961637],0xf6c1b8df
  418e9e:	test   BYTE PTR [ebx+0x1e],0x3d
  418ea2:	jp     0x418ee8
  418ea4:	mov    bl,0xd1
  418ea6:	pusha  
  418ea7:	gs in  eax,0x22
  418eaa:	jae    0x418f1f
  418eac:	mov    bl,0xc
  418eae:	jecxz  0x418e48
  418eb0:	jb     0x418e57
  418eb2:	inc    edx
  418eb3:	mov    bh,0xdb
  418eb5:	jecxz  0x418ea3
  418eb7:	in     al,dx
  418eb8:	mov    WORD PTR [edx-0x4f],fs
  418ebb:	enter  0xf2e2,0x32
  418ebf:	inc    edi
  418ec0:	inc    edi
  418ec1:	xchg   DWORD PTR [edx+edi*4],edi
  418ec4:	jg     0x418e65
  418ec6:	in     eax,dx
  418ec7:	sbb    eax,0xbcbc1a9d
  418ecc:	mov    esp,0x54b94002
  418ed1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ed2:	shr    esi,cl
  418ed4:	shr    BYTE PTR [ebp+ebx*4-0x4d],1
  418ed8:	mov    eax,0xd2e2c8b0
  418edd:	adc    cl,BYTE PTR [edi]
  418edf:	out    dx,al
  418ee0:	(bad)  
  418ee2:	lock call 0x3155d178
  418ee8:	cmp    esi,DWORD PTR [edi]
  418eea:	retf   
  418eeb:	out    0xe6,al
  418eed:	jae    0x418f4c
  418eef:	adc    BYTE PTR [ebp+0x1b],0x63
  418ef3:	imul   edi,ecx,0xda18ed02
  418ef9:	ret    
  418efa:	test   BYTE PTR [eax-0x1],dh
  418efd:	pop    ebp
  418efe:	scas   al,BYTE PTR es:[edi]
  418eff:	scas   al,BYTE PTR es:[edi]
  418f00:	std    
  418f01:	cmp    al,0x93
  418f03:	(bad)  
  418f05:	inc    ebp
  418f06:	rcl    BYTE PTR [ebx+0x68601406],cl
  418f0c:	mov    ah,0x7d
  418f0e:	xchg   edx,eax
  418f0f:	jmp    0x298e:0xbd29b7f5
  418f16:	cwde   
  418f17:	fs cmp esp,eax
  418f1a:	xchg   edi,eax
  418f1b:	ficom  WORD PTR [ecx-0x732caf6b]
  418f21:	js     0x418f22
  418f23:	vmovntdq XMMWORD PTR [ebx],xmm7
  418f27:	mov    ah,0x21
  418f29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f2a:	xor    dl,0xf2
  418f2d:	jb     0x418f90
  418f2f:	jmp    0x7119933a
  418f34:	mov    al,ds:0xd2959484
  418f39:	ret    0x1fa3
  418f3c:	dec    esp
  418f3d:	and    al,0x7f
  418f3f:	cld    
  418f40:	pop    edi
  418f41:	stc    
  418f42:	mov    DWORD PTR [edi-0x35004007],edi
  418f48:	ja     0x418f88
  418f4a:	add    dh,ch
  418f4c:	stc    
  418f4d:	cmp    ebx,DWORD PTR [bp+0x3b]
  418f51:	add    al,0xf0
  418f53:	loopne 0x418f04
  418f55:	cld    
  418f56:	icebp  
  418f57:	xor    BYTE PTR [edx-0x2],bh
  418f5a:	aad    0xcf
  418f5c:	or     esp,ebx
  418f5e:	pop    ecx
  418f5f:	push   es
  418f60:	push   ss
  418f61:	addr16 pusha 
  418f63:	xchg   edx,eax
  418f64:	or     ebp,DWORD PTR [ecx-0x5c]
  418f67:	sbb    al,0xd3
  418f69:	sbb    al,0x2
  418f6b:	int    0x82
  418f6d:	inc    eax
  418f6e:	jnp    0x418f69
  418f70:	xor    edx,DWORD PTR [ebx-0x14]
  418f73:	xchg   ecx,eax
  418f74:	stos   BYTE PTR es:[edi],al
  418f75:	fadd   QWORD PTR [ecx-0x18]
  418f78:	pop    es
  418f79:	jo     0x418f4d
  418f7b:	(bad)  
  418f7c:	push   esi
  418f7d:	adc    ebp,DWORD PTR [edx]
  418f7f:	gs pushf 
  418f81:	jg     0x418f69
  418f83:	cmp    bh,BYTE PTR [ebx-0x1ac23138]
  418f89:	shr    DWORD PTR [edx],1
  418f8b:	add    ebp,DWORD PTR [edi]
  418f8d:	rol    BYTE PTR [esi+edx*2+0x3a],cl
  418f91:	fsubr  st(2),st
  418f93:	(bad)  
  418f94:	jecxz  0x418f95
  418f96:	xchg   ebp,eax
  418f97:	into   
  418f98:	fisubr WORD PTR [edi-0x201d8370]
  418f9e:	pusha  
  418f9f:	jbe    0x418f9f
  418fa1:	push   cs
  418fa2:	xchg   DWORD PTR [ebp-0x3d5e9edf],ecx
  418fa8:	sar    BYTE PTR [esi+ebx*8+0x2c58b6f9],cl
  418faf:	jo     0x419021
  418fb1:	mov    al,0x8f
  418fb3:	push   edx
  418fb4:	jp     0x418fed
  418fb6:	pusha  
  418fb7:	jmp    0xb7ac6747
  418fbc:	call   0x589e4b37
  418fc1:	pop    ecx
  418fc2:	popa   
  418fc3:	jle    0x419026
  418fc5:	xchg   ecx,eax
  418fc6:	xchg   ebx,eax
  418fc7:	xchg   ebx,eax
  418fc8:	and    ecx,eax
  418fca:	adc    al,0x51
  418fcc:	adc    al,0xb2
  418fce:	mov    al,0xbc
  418fd0:	inc    esp
  418fd1:	mov    ebp,0xd3a74636
  418fd6:	out    0xd1,al
  418fd8:	ret    
  418fd9:	pop    es
  418fda:	fisubr DWORD PTR [edi]
  418fdc:	jo     0x418fbc
  418fde:	(bad)  
  418fdf:	in     eax,0xe2
  418fe1:	and    eax,0x4cbe5d2e
  418fe6:	xchg   edx,eax
  418fe7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418fe8:	add    al,0x61
  418fea:	(bad)
  418fee:	mov    DWORD PTR [edi-0x39],0xd215cb94
  418ff5:	sub    al,0x65
  418ff7:	cmp    BYTE PTR [eax+esi*1],bl
  418ffa:	sbb    BYTE PTR [esi],cl
  418ffc:	imul   esi,DWORD PTR [ebp-0x27e245a6],0xe79e0aca
  419006:	xor    DWORD PTR [esi-0x55],edx
  419009:	icebp  
  41900a:	repnz lds ecx,FWORD PTR [ebx+0x4e]
  41900e:	mov    cs,WORD PTR [edi+0x5cdbb769]
  419014:	mov    edx,0x9bb9997c
  419019:	mov    bl,0x4c
  41901b:	dec    ebp
  41901c:	dec    ebp
  41901d:	xor    BYTE PTR [edi],bh
  41901f:	aas    
  419020:	iret   
  419021:	not    dh
  419023:	push   cs
  419024:	das    
  419025:	pop    esi
  419026:	mov    esp,0x32edd3a0
  41902b:	xor    eax,0x1f5bc935
  419030:	sti    
  419031:	sbb    BYTE PTR [ebp-0x7b6095e],ah
  419037:	jle    0x418ff9
  419039:	fnstsw WORD PTR [ebx+0x5ab56977]
  41903f:	add    al,0x51
  419041:	inc    esp
  419042:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419043:	pop    esp
  419044:	bound  ebx,QWORD PTR [eax]
  419046:	cmovns ecx,edi
  419049:	push   ebx
  41904a:	cmp    ch,ch
  41904c:	ss mov esi,0x972e521f
  419052:	sub    DWORD PTR [edi-0x29117fd5],edx
  419058:	mov    bl,0xb1
  41905a:	mov    esi,0xe152b941
  41905f:	(bad)  
  419060:	lea    ebx,[ebx]
  419062:	jl     0x419046
  419064:	xchg   ebx,eax
  419065:	lahf   
  419066:	mov    ds:0xb0b2ebdf,al
  41906b:	xor    bh,cl
  41906d:	mov    ebx,0xf39b7cef
  419072:	push   esi
  419073:	mov    ebp,DWORD PTR [edx+0x4d]
  419076:	imul   edx
  419078:	fcmovnu st,st(1)
  41907a:	(bad)  
  41907c:	(bad)  
  41907d:	mov    ebp,0x4f8f8cbb
  419082:	jo     0x419079
  419084:	fidiv  DWORD PTR [ebp+0x3e]
  419087:	cli    
  419088:	shl    DWORD PTR [edi+0x4dd294f0],1
  41908e:	inc    ebx
  41908f:	adc    DWORD PTR [eax-0x5a374eae],0xffffffd5
  419096:	dec    ebx
  419097:	sbb    al,0x1e
  419099:	sbb    al,0xf0
  41909b:	ins    BYTE PTR es:[edi],dx
  41909c:	arpl   WORD PTR [ebx-0x3f3acdc],ax
  4190a2:	xor    bl,bl
  4190a4:	inc    edi
  4190a5:	daa    
  4190a6:	in     al,dx
  4190a7:	jl     0x41908c
  4190a9:	out    dx,eax
  4190aa:	jb     0x41911d
  4190ac:	neg    DWORD PTR [edi]
  4190ae:	xor    esi,DWORD PTR [edi+0x4fd50f7b]
  4190b4:	jmp    0xd392eebb
  4190b9:	and    bh,0xd2
  4190bc:	add    cl,BYTE PTR [esi+0x71]
  4190bf:	pop    eax
  4190c0:	xchg   esi,eax
  4190c1:	jg     0x4190e9
  4190c3:	cdq    
  4190c4:	jle    0x4190c8
  4190c6:	jecxz  0x419143
  4190c8:	add    ebx,DWORD PTR [eax+0x65b43b2a]
  4190ce:	sbb    al,BYTE PTR [esi+0x4bfb6e42]
  4190d4:	xchg   DWORD PTR [eax],esp
  4190d6:	dec    esp
  4190d7:	mov    eax,ds:0x9025490
  4190dc:	and    dl,BYTE PTR [ebp-0x46d6dd1a]
  4190e2:	inc    ebx
  4190e3:	(bad)  
  4190e5:	add    DWORD PTR [eax],0xcf8d9daa
  4190eb:	xor    al,0xcf
  4190ed:	pop    ss
  4190ee:	xchg   esi,eax
  4190ef:	adc    bh,0xae
  4190f2:	inc    edi
  4190f3:	shr    BYTE PTR [ebx+0x27],0x0
  4190f7:	and    BYTE PTR [eax],0xba
  4190fa:	adc    esi,ebp
  4190fc:	neg    edi
  4190fe:	push   edx
  4190ff:	xor    eax,0x78efbbc7
  419104:	clc    
  419105:	lds    edi,FWORD PTR [ebx+0x7bedca8f]
  41910b:	push   edi
  41910c:	fisttp DWORD PTR [ebx+0x5ab01053]
  419112:	aas    
  419113:	lock xor eax,0x7b8682d3
  419119:	pop    es
  41911a:	sub    eax,0x4a7be76d
  41911f:	jnp    0x4190a9
  419121:	sar    DWORD PTR [eax-0x1],0x43
  419125:	arpl   WORD PTR [esi],dx
  419127:	mov    BYTE PTR [esi-0x6cdc7dd0],al
  41912d:	sbb    al,0x1
  41912f:	mov    al,0x9d
  419131:	xchg   BYTE PTR [edx],dh
  419133:	dec    edi
  419134:	(bad)  
  419135:	xchg   edx,eax
  419136:	dec    ebx
  419137:	pop    ebx
  419138:	iret   
  419139:	mov    BYTE PTR [esi],cl
  41913b:	dec    DWORD PTR [ebx+edx*4]
  41913e:	mov    ebp,DWORD PTR [ebx]
  419140:	pushf  
  419141:	pop    esi
  419142:	(bad)  
  419143:	push   ecx
  419144:	loop   0x4191a7
  419146:	(bad)  
  419147:	std    
  419148:	(bad)  
  419149:	sbb    BYTE PTR [esi-0x57],bh
  41914c:	into   
  41914d:	cld    
  41914e:	ret    0xfb0c
  419151:	mov    ebx,0xffbfdc5b
  419156:	push   ds
  419157:	adc    esp,ebx
  419159:	xchg   ebx,eax
  41915a:	pop    esp
  41915b:	mov    eax,0x36b54cb0
  419160:	inc    esi
  419161:	(bad)  [edi+ecx*8-0x63]
  419165:	sahf   
  419166:	sahf   
  419167:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419168:	pop    eax
  419169:	sub    al,0xb3
  41916b:	xor    bl,BYTE PTR [eax+0x21]
  41916e:	sub    al,BYTE PTR [esp+edi*1+0x7d]
  419172:	mov    dl,0xce
  419174:	rcl    ecx,1
  419176:	ds xchg edi,eax
  419178:	push   edi
  419179:	scas   eax,DWORD PTR es:[edi]
  41917a:	push   ecx
  41917b:	sub    dl,BYTE PTR [eax+esi*8]
  41917e:	jl     0x41911f
  419180:	outs   dx,BYTE PTR ds:[esi]
  419181:	scas   eax,DWORD PTR es:[edi]
  419182:	(bad)  
  419183:	pusha  
  419184:	xor    BYTE PTR [eax+0x72],ah
  419187:	jb     0x41919b
  419189:	dec    edi
  41918a:	sub    DWORD PTR [edx+0x52a512c5],ecx
  419190:	xchg   ecx,eax
  419191:	(bad)  
  419193:	int    0xff
  419195:	xchg   ebp,edi
  419197:	std    
  419198:	add    ecx,DWORD PTR [esi]
  41919a:	(bad)  
  41919b:	vmread ebx,esi
  41919e:	int    0x37
  4191a0:	mov    ecx,0xbb0efb7d
  4191a5:	cmp    edi,DWORD PTR [ebx-0x3745a354]
  4191ab:	out    0xf3,al
  4191ad:	dec    ebp
  4191ae:	pop    esi
  4191af:	outs   dx,BYTE PTR ds:[esi]
  4191b0:	mov    ebp,0x591518a0
  4191b5:	pop    esp
  4191b6:	pop    esi
  4191b7:	mov    ds:0xad53af5e,al
  4191bc:	lea    esi,[ecx]
  4191be:	xor    DWORD PTR [ecx],esi
  4191c0:	dec    esi
  4191c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4191c2:	frstor [esi-0x424e9123]
  4191c8:	mov    ebp,0x4c8093ad
  4191cd:	push   cs
  4191ce:	inc    edx
  4191cf:	adc    al,0x15
  4191d1:	or     BYTE PTR [ebx-0x6106c4b0],al
  4191d7:	aas    
  4191d8:	mov    ds:0x99991510,eax
  4191dd:	popf   
  4191de:	gs jno 0x41924a
  4191e1:	xchg   ecx,eax
  4191e2:	sub    al,0x4b
  4191e4:	pop    ecx
  4191e5:	mov    ecx,0x53138978
  4191ea:	or     al,0x74
  4191ec:	mov    al,0xbf
  4191ee:	(bad)  
  4191ef:	jmp    0x45bc:0xdc6e15ea
  4191f6:	test   eax,0x428c2458
  4191fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191fd:	addr16 clc 
  4191ff:	lea    ebx,[edi-0x1]
  419202:	jne    0x4191d2
  419204:	sbb    cl,BYTE PTR ds:0x54a52492
  41920a:	sub    dh,BYTE PTR [ecx]
  41920c:	sbb    BYTE PTR [eax+edi*1],cl
  41920f:	cmp    edi,DWORD PTR [ebx]
  419211:	shl    edi,0x3d
  419214:	push   0x63
  419216:	jne    0x419246
  419218:	pop    esi
  419219:	pop    esi
  41921a:	outs   dx,BYTE PTR gs:[esi]
  41921c:	jbe    0x4191ac
  41921e:	jmp    0xfeffebbc
  419223:	pop    ebx
  419224:	pop    edi
  419225:	jecxz  0x41921f
  419227:	in     al,0x94
  419229:	or     al,0x28
  41922b:	adc    al,0xa
  41922d:	pushf  
  41922e:	sahf   
  41922f:	pushf  
  419230:	jo     0x4192a6
  419232:	je     0x4191fc
  419234:	inc    esp
  419235:	mov    ebp,0x37db9dce
  41923a:	push   0xb0b22f9d
  41923f:	mov    ah,0xc2
  419241:	rep lods eax,DWORD PTR ds:[esi]
  419243:	cmp    eax,0xc58c6892
  419248:	icebp  
  419249:	nop
  41924a:	mov    cl,0x67
  41924c:	mov    edi,0x22feef0c
  419251:	lahf   
  419252:	cmp    al,0xdc
  419254:	ror    BYTE PTR [edi+0x4c0c0fa1],0x5b
  41925b:	outs   dx,DWORD PTR ds:[esi]
  41925c:	push   edx
  41925d:	in     eax,dx
  41925e:	repz xchg ecx,eax
  419260:	cs push eax
  419262:	mov    esi,0x6c44c759
  419267:	jb     0x41920e
  419269:	xlat   BYTE PTR ds:[ebx]
  41926a:	sub    al,0xf2
  41926c:	mov    al,ds:0x88e41b1f
  419271:	data16 in al,dx
  419273:	jbe    0x4192e1
  419275:	ins    BYTE PTR es:[edi],dx
  419276:	test   BYTE PTR [ebx*2+0x5ae5925b],0x5f
  41927e:	adc    al,0x44
  419280:	pushf  
  419281:	imul   esp,ebp,0x53a4dd21
  419287:	mov    WORD PTR [ecx],ds
  419289:	jmp    0x2624:0x2967e7e9
  419290:	pop    esp
  419291:	sbb    BYTE PTR [ebx],bl
  419293:	call   0x3648:0xa048d0cb
  41929a:	push   ss
  41929b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41929c:	test   edi,ecx
  41929e:	add    edi,DWORD PTR [edi-0x3]
  4192a1:	std    
  4192a2:	out    0x9f,al
  4192a4:	jg     0x41927c
  4192a6:	jecxz  0x41925d
  4192a8:	adc    eax,DWORD PTR [eax]
  4192aa:	test   DWORD PTR [eax-0x61e67ad1],ebx
  4192b0:	les    ebx,FWORD PTR [edx-0x4b]
  4192b3:	mul    DWORD PTR [esi]
  4192b5:	addr16 inc esi
  4192b7:	enter  0x9be1,0x54
  4192bb:	stc    
  4192bc:	dec    ecx
  4192bd:	mov    WORD PTR [edi+0x1c],ds
  4192c0:	xor    al,0x1e
  4192c2:	stc    
  4192c3:	ret    0x5e83
  4192c6:	cld    
  4192c7:	and    al,0xd5
  4192c9:	sbb    bh,dh
  4192cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4192cc:	add    eax,0x23943ebd
  4192d1:	jge    0x419266
  4192d3:	add    al,0x43
  4192d5:	inc    eax
  4192d6:	push   es
  4192d7:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4192d9:	pop    ecx
  4192da:	sahf   
  4192db:	loope  0x419282
  4192dd:	xchg   esp,eax
  4192de:	and    DWORD PTR [edx],edx
  4192e0:	dec    ecx
  4192e1:	hlt    
  4192e2:	jo     0x41934e
  4192e4:	ret    0x54d3
  4192e7:	fstp   TBYTE PTR [ebp+0x41]
  4192ea:	add    BYTE PTR [ebx+0x17ad8204],al
  4192f0:	int3   
  4192f1:	in     al,dx
  4192f2:	cld    
  4192f3:	outs   dx,DWORD PTR ds:[esi]
  4192f4:	test   al,0x87
  4192f6:	jg     0x41927f
  4192f8:	ret    
  4192f9:	jmp    0xf97a038d
  4192fe:	imul   edi,esp,0xb231fd8f
  419304:	push   0xc138bf02
  419309:	shl    ecx,0x31
  41930c:	stos   DWORD PTR es:[edi],eax
  41930d:	push   edi
  41930e:	push   esi
  41930f:	mov    ecx,0x8116eb75
  419314:	out    dx,eax
  419315:	push   ecx
  419316:	pop    ds
  419317:	pop    ds
  419318:	out    0xe4,eax
  41931a:	inc    esp
  41931b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41931c:	loopne 0x4192b4
  41931e:	dec    edx
  41931f:	adc    eax,0x8f2ab56a
  419324:	pop    ds
  419325:	cmp    eax,0x84f8e4e4
  41932a:	loope  0x41931c
  41932c:	and    DWORD PTR [edi],ebx
  41932e:	sti    
  41932f:	fadd   st,st(7)
  419331:	mov    ecx,0x6326f375
  419336:	cmc    
  419337:	xor    edx,ebp
  419339:	cmc    
  41933a:	jno    0x4193b2
  41933c:	mov    dh,0xb7
  41933e:	cmp    DWORD PTR [eax+edi*1],edi
  419341:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419342:	ss push esi
  419344:	arpl   WORD PTR [esi+0x76],bp
  419347:	push   ss
  419348:	iret   
  419349:	repz dec ecx
  41934b:	loop   0x41936e
  41934d:	in     eax,dx
  41934e:	push   esi
  41934f:	mov    ebp,DWORD PTR [eax+0x3636a050]
  419355:	inc    esi
  419356:	jge    0x419304
  419358:	into   
  419359:	hlt    
  41935a:	int3   
  41935b:	or     al,0x8f
  41935d:	push   ds
  41935e:	cmp    eax,0x73f9f364
  419363:	cmp    al,0xcf
  419365:	xlat   BYTE PTR ds:[ebx]
  419366:	jbe    0x41935e
  419368:	cmc    
  419369:	imul   edx,DWORD PTR [ebx+ebp*4+0x3870e2ba],0x18
  419371:	lock aad 0xaf
  419374:	jl     0x41930b
  419376:	rcl    ebx,cl
  419378:	push   ebx
  419379:	jp     0x419338
  41937b:	push   ds
  41937c:	lahf   
  41937d:	(bad)  
  41937e:	hlt    
  41937f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419380:	hlt    
  419381:	push   cs
  419382:	lds    edi,FWORD PTR [ebp+0x3333331e]
  419388:	cmp    al,0x7c
  41938a:	clc    
  41938b:	xor    ch,0xa7
  41938e:	sbb    edi,DWORD PTR [edx+0x5b]
  419391:	repnz mov ecx,0xbf5c6e39
  419397:	into   
  419398:	in     al,0xe4
  41939a:	adc    al,0x33
  41939c:	rcl    DWORD PTR [ebx+0x1c],cl
  41939f:	sbb    eax,0xa078721d
  4193a4:	adc    ecx,DWORD PTR [eax+0x41018306]
  4193aa:	sbb    BYTE PTR [eax],dl
  4193ac:	daa    
  4193ad:	xor    ebp,edi
  4193af:	push   esi
  4193b0:	(bad)  
  4193b2:	lock cdq 
  4193b4:	pushf  
  4193b5:	call   0xeae5:0x736ddba4
  4193bc:	jne    0x4193d8
  4193be:	lea    eax,[esi]
  4193c0:	(bad)  
  4193c1:	pop    ds
  4193c2:	cmp    eax,0x80f0e8e2
  4193c7:	jmp    0x419400
  4193c9:	outs   dx,DWORD PTR ds:[esi]
  4193ca:	jb     0x4193b3
  4193cc:	into   
  4193cd:	sbb    edx,esp
  4193cf:	jmp    0x419434
  4193d1:	test   BYTE PTR [ecx+0x48],al
  4193d4:	pushf  
  4193d5:	and    al,0x84
  4193d7:	push   ecx
  4193d8:	dec    eax
  4193d9:	lods   eax,DWORD PTR ds:[esi]
  4193da:	push   edx
  4193db:	loope  0x4193cf
  4193dd:	in     eax,0x55
  4193df:	jbe    0x419397
  4193e1:	mov    bh,0x78
  4193e3:	cld    
  4193e4:	clc    
  4193e5:	xor    DWORD PTR [ebp+0x4f898366],ebp
  4193eb:	jle    0x419377
  4193ed:	repnz fmul DWORD PTR [ebx+edi*4]
  4193f1:	addr16 jge 0x4193fa
  4193f4:	pop    ebx
  4193f5:	fist   DWORD PTR [edi+ecx*2]
  4193f8:	out    dx,al
  4193f9:	repz mov ecx,0xec603ffe
  4193ff:	fwait
  419400:	mov    edi,0xa0747f85
  419405:	aaa    
  419406:	inc    ecx
  419407:	or     DWORD PTR [ebx+esi*4],ecx
  41940a:	lds    esp,FWORD PTR [esi-0x27e70c5]
  419410:	mov    eax,ds:0x9c1b99af
  419415:	adc    DWORD PTR ds:[ecx+0x5e],ebx
  419419:	into   
  41941a:	fwait
  41941b:	and    eax,0x6f8be339
  419420:	shl    bh,0x21
  419423:	xor    eax,DWORD PTR ds:0xc412f561
  419429:	add    eax,DWORD PTR [esi+0x7c]
  41942c:	add    eax,0x34123c22
  419431:	mov    bl,0x8
  419433:	xor    cl,BYTE PTR [esp+ecx*4]
  419436:	out    0x3f,eax
  419438:	xor    eax,0x3aa4042
  41943d:	cmp    eax,0x4cd24e87
  419442:	pop    edi
  419443:	jecxz  0x419470
  419445:	sub    BYTE PTR [edi-0x403b418a],dh
  41944b:	adc    BYTE PTR [eax],al
  41944d:	(bad)  
  41944e:	ffreep st(7)
  419450:	sar    DWORD PTR [edi-0x86bd80d],cl
  419456:	loopne 0x41942f
  419458:	mov    esi,0xdb3317e0
  41945d:	mov    cl,BYTE PTR [ecx]
  41945f:	jb     0x419419
  419461:	sahf   
  419462:	sbb    DWORD PTR [ebp-0x7f],0xa55dc4d4
  419469:	adc    BYTE PTR [ebx-0x70],al
  41946c:	sub    DWORD PTR [esp+edi*4],0x8d4bc0f2
  419473:	nop
  419474:	dec    eax
  419475:	and    DWORD PTR [ecx+eiz*8],esi
  419478:	les    ebx,FWORD PTR [ebp+0x7e004333]
  41947e:	fmulp  st(0),st
  419480:	inc    ecx
  419481:	mov    edx,0x138104c3
  419486:	(bad)  
  419487:	and    DWORD PTR [edi-0x431c88ed],ebp
  41948d:	inc    edx
  41948e:	xor    al,0x2
  419490:	sub    DWORD PTR [ebx-0x5c55abfc],edx
  419496:	add    eax,0xecea0503
  41949b:	pushf  
  41949c:	cdq    
  41949d:	xchg   ebx,eax
  41949e:	scas   eax,DWORD PTR es:[edi]
  41949f:	xor    ah,ch
  4194a1:	jg     0x419438
  4194a3:	loope  0x41949f
  4194a5:	fbld   TBYTE PTR [eax]
  4194a7:	mov    eax,0xb5a423fd
  4194ac:	(bad)  
  4194ad:	jb     0x4194e1
  4194af:	ja     0x41943a
  4194b1:	and    al,0xa8
  4194b3:	xor    dl,BYTE PTR [ebp+eax*2-0x5a]
  4194b7:	out    0x96,eax
  4194b9:	pop    eax
  4194ba:	cwde   
  4194bb:	lahf   
  4194bc:	popa   
  4194bd:	addr16 jmp 0x4194c5
  4194c0:	(bad)  
  4194c1:	xlat   BYTE PTR ds:[ebx]
  4194c2:	(bad)  
  4194c3:	mov    BYTE PTR [edx-0x50a85478],ah
  4194c9:	cdq    
  4194ca:	shl    BYTE PTR [edx+0x7],1
  4194cd:	fcomip st,st(7)
  4194cf:	mov    ebx,esp
  4194d1:	cwde   
  4194d2:	pop    edx
  4194d3:	lods   eax,DWORD PTR ds:[esi]
  4194d4:	(bad)  
  4194d5:	mov    dl,0xb7
  4194d7:	int3   
  4194d8:	(bad)  
  4194d9:	in     al,0x14
  4194db:	imul   ecx,DWORD PTR [edi-0x9494ce2],0xffffff88
  4194e2:	test   al,0x50
  4194e4:	(bad)  
  4194e5:	(bad)  
  4194e6:	call   0x24261146
  4194eb:	pop    ds
  4194ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194ed:	push   esp
  4194ee:	sub    al,0x31
  4194f0:	cmp    DWORD PTR ds:0x19e9d9c5,esi
  4194f6:	(bad)  
  4194f7:	(bad)  
  4194f8:	sbb    DWORD PTR [ebp+0x576b8366],ecx
  4194fe:	scas   eax,DWORD PTR es:[edi]
  4194ff:	adc    DWORD PTR ds:0xcf4f4c0a,edx
  419505:	xor    al,ch
  419507:	test   DWORD PTR [ecx-0x2d],0x9379e694
  41950e:	push   esi
  41950f:	mov    bl,0x49
  419511:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419512:	pop    eax
  419513:	inc    edx
  419514:	jns    0x4194a0
  419516:	xor    BYTE PTR [ecx+esi*8],cl
  419519:	cmp    al,0xf
  41951b:	pop    edi
  41951c:	jns    0x4194e2
  41951e:	jno    0x4194e2
  419520:	jo     0x41955a
  419522:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419523:	xlat   BYTE PTR ds:[ebx]
  419524:	out    dx,eax
  419525:	xchg   ecx,eax
  419526:	and    al,0x89
  419528:	into   
  419529:	pop    edi
  41952a:	sub    BYTE PTR ds:0x4f741529,dl
  419530:	ret    0xc3c3
  419533:	inc    ebx
  419534:	sahf   
  419535:	aas    
  419536:	jg     0x419586
  419538:	mov    ebx,0x7c0822d5
  41953d:	cs pop esi
  41953f:	mov    esp,0xe1d3bb48
  419544:	ret    0x1585
  419547:	ss (bad) 
  419549:	lahf   
  41954a:	mov    dl,0xf6
  41954c:	js     0x4194db
  41954e:	shl    DWORD PTR [eax],0xe6
  419551:	lods   eax,DWORD PTR ds:[esi]
  419552:	mov    bh,0x3e
  419554:	retf   0xdbed
  419557:	mov    bh,0x99
  419559:	fwait
  41955a:	fwait
  41955b:	arpl   WORD PTR [esi+0x66],sp
  41955e:	xchg   esi,eax
  41955f:	mov    ds:0x4f4e23e3,eax
  419564:	dec    edi
  419565:	mov    ah,0xd5
  419567:	push   ss
  419568:	jmp    0x419536
  41956a:	mov    edi,0xa46bc7b5
  41956f:	pop    ecx
  419570:	retf   0xccdc
  419573:	sub    al,0x77
  419575:	out    dx,al
  419576:	fsub   QWORD PTR [ecx-0x474e9123]
  41957c:	mov    eax,0x5ded8bcc
  419581:	pop    edx
  419582:	inc    ebx
  419583:	(bad)  
  419584:	rcl    ah,cl
  419586:	add    eax,0xe5e52c92
  41958b:	mov    bh,0x7e
  41958d:	cdq    
  41958e:	hlt    
  41958f:	(bad)  
  419590:	dec    ebp
  419592:	je     0x419587
  419594:	sbb    eax,0xa4dbdaa6
  419599:	cmp    eax,0x30c1588
  41959e:	xor    ebx,edi
  4195a0:	call   0x11372caa
  4195a5:	call   0x6c921dd7
  4195aa:	jnp    0x41957c
  4195ac:	je     0x41953e
  4195ae:	sbb    bh,BYTE PTR [edx]
  4195b0:	push   eax
  4195b1:	test   eax,0xf2a901e9
  4195b6:	pushf  
  4195b7:	jg     0x4195ca
  4195b9:	test   ch,0x1e
  4195bc:	sub    al,0x4c
  4195be:	push   0x79fa1034
  4195c3:	pop    eax
  4195c4:	sar    BYTE PTR [eax+0x708a6c8f],1
  4195ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4195cb:	repnz cld 
  4195cd:	xchg   edx,eax
  4195ce:	push   esp
  4195cf:	in     eax,0x4a
  4195d1:	ret    0x3957
  4195d4:	sub    eax,0xa2f8cd0a
  4195d9:	cwde   
  4195da:	inc    edx
  4195db:	sub    BYTE PTR [edi],dh
  4195dd:	sahf   
  4195de:	jg     0x4195ce
  4195e0:	push   edi
  4195e1:	inc    edx
  4195e3:	dec    edi
  4195e4:	dec    ebp
  4195e5:	std    
  4195e6:	enter  0xfa9f,0x85
  4195ea:	xlat   BYTE PTR ds:[ebx]
  4195eb:	sub    bl,BYTE PTR [edx]
  4195ed:	lock pop edx
  4195ef:	or     DWORD PTR [eax],eax
  4195f1:	(bad)  
  4195f2:	call   DWORD PTR [edx-0x30]
  4195f5:	jp     0x4195e8
  4195f7:	std    
  4195f8:	pop    esi
  4195f9:	xor    eax,0x8922f587
  4195fe:	inc    ebp
  4195ff:	sbb    BYTE PTR [eax+0x7b],cl
  419602:	es leave 
  419604:	jmp    0x41964d
  419606:	in     eax,0x92
  419608:	cmp    BYTE PTR [esi],dh
  41960a:	cmp    edi,esp
  41960c:	sub    BYTE PTR [edi+0x4f],cl
  41960f:	jle    0x419637
  419611:	xor    BYTE PTR [eax],dh
  419613:	rcl    DWORD PTR [eax],1
  419615:	out    dx,eax
  419616:	mov    ah,0x5
  419618:	xchg   DWORD PTR ds:0x9c3c0c2d,ecx
  41961e:	sub    al,0xaf
  419620:	sub    al,0x5f
  419622:	cmp    BYTE PTR [ecx],dl
  419624:	es inc edx
  419626:	xor    al,0x92
  419628:	cmp    eax,0x97863568
  41962d:	daa    
  41962e:	xchg   DWORD PTR [eax+0x42],edi
  419631:	sbb    eax,0x9837f19e
  419636:	int    0x22
  419638:	xchg   BYTE PTR [ecx+0x393c2ec9],ah
  41963e:	and    al,bh
  419640:	int    0x9f
  419642:	out    0x52,eax
  419644:	hlt    
  419645:	rep lods al,BYTE PTR ds:[esi]
  419647:	into   
  419648:	lods   eax,DWORD PTR ds:[esi]
  419649:	rcr    bh,1
  41964b:	sti    
  41964c:	or     BYTE PTR [edi+0x58728fb5],al
  419652:	mov    eax,0x21fd178c
  419657:	xchg   edx,eax
  419658:	push   0xd0afd49c
  41965d:	ins    BYTE PTR es:[edi],dx
  41965e:	mov    ch,0xc9
  419660:	push   edx
  419661:	pop    eax
  419662:	mov    ebp,0xa5728572
  419667:	dec    esp
  419668:	mov    ecx,0xd4386552
  41966d:	fwait
  41966e:	(bad)  
  41966f:	sahf   
  419670:	mov    bh,0xce
  419672:	mov    ecx,0xca3af57c
  419677:	push   edi
  419678:	inc    esp
  419679:	push   ecx
  41967a:	inc    esp
  41967b:	sbb    al,bh
  41967d:	mov    edx,0xcebd4e73
  419682:	retf   0x1585
  419685:	out    0x16,al
  419687:	out    0x38,al
  419689:	aas    
  41968a:	aas    
  41968b:	out    0x9d,eax
  41968d:	ja     0x41964d
  41968f:	inc    ebp
  419690:	mov    ebx,0x1e57c6d5
  419695:	lahf   
  419696:	(bad)  
  419697:	(bad)  
  419698:	pop    ds
  419699:	mov    al,ds:0x65912c54
  41969e:	xor    BYTE PTR [esi-0x55],dl
  4196a1:	repnz fidivr WORD PTR [ebp+0x7f3e6cbb]
  4196a8:	into   
  4196a9:	clc    
  4196aa:	les    esp,FWORD PTR [edi+ebp*2]
  4196ad:	jge    0x4196a3
  4196af:	sub    eax,0xdbf8fede
  4196b4:	ins    BYTE PTR es:[edi],dx
  4196b5:	ins    DWORD PTR es:[edi],dx
  4196b6:	outs   dx,DWORD PTR ds:[esi]
  4196b7:	mov    bl,0xb2
  4196b9:	jb     0x41963c
  4196bb:	ret    
  4196bc:	ret    
  4196bd:	inc    ebx
  4196be:	out    dx,al
  4196bf:	fnstsw WORD PTR [ebp-0x71]
  4196c2:	jle    0x419683
  4196c4:	inc    edi
  4196c5:	mul    DWORD PTR [esi-0x69]
  4196c8:	retf   
  4196c9:	xchg   edi,eax
  4196ca:	push   edi
  4196cb:	sub    DWORD PTR [edi-0x56],edx
  4196ce:	aam    0xaa
  4196d0:	push   ebp
  4196d1:	dec    edx
  4196d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196d3:	and    bh,BYTE PTR [edi+0x73aff5f3]
  4196d9:	jo     0x41974b
  4196db:	rol    cl,0xfe
  4196de:	ds aas 
  4196e0:	hlt    
  4196e1:	xchg   DWORD PTR [edi],edi
  4196e3:	(bad)  
  4196e4:	int3   
  4196e5:	int3   
  4196e6:	or     al,0xe7
  4196e8:	int    0x26
  4196ea:	shl    DWORD PTR [ebx],cl
  4196ec:	xor    ebx,DWORD PTR [edi+edi*1+0x7e7e726c]
  4196f3:	dec    esi
  4196f4:	adc    BYTE PTR [esi-0x48b9a65c],al
  4196fa:	(bad)  [ebx+0x6f]
  4196fd:	outs   dx,DWORD PTR ds:[esi]
  4196fe:	(bad)  
  4196ff:	pop    esi
  419700:	scas   eax,DWORD PTR es:[edi]
  419701:	xchg   DWORD PTR [edx+0x70],edx
  419704:	std    
  419705:	cli    
  419706:	or     eax,0xfae638e2
  41970b:	(bad)  
  41970c:	jmp    0x41974a
  41970e:	jge    0x419702
  419710:	test   bh,ah
  419712:	sbb    ebp,ebx
  419714:	fs sahf 
  419716:	(bad)  
  419717:	stc    
  419718:	loop   0x41977f
  41971a:	mov    ah,BYTE PTR [ebx-0x2d]
  41971d:	ins    BYTE PTR es:[edi],dx
  41971e:	sbb    eax,0x4ff78975
  419723:	dec    ecx
  419724:	cmp    eax,DWORD PTR [edi-0x44]
  419727:	push   ebp
  419728:	fldenv [ecx-0x16]
  41972b:	hlt    
  41972c:	pop    ebp
  41972d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41972e:	jg     0x419713
  419730:	cmp    eax,0x44a7bdb2
  419735:	mov    DWORD PTR [esi-0x1df37c2e],eax
  41973b:	ror    BYTE PTR [eax],1
  41973d:	jnp    0x419712
  41973f:	mov    ecx,0x8e71877
  419744:	nop
  419745:	push   esp
  419746:	lahf   
  419747:	daa    
  419748:	data16 lahf 
  41974a:	daa    
  41974b:	sahf   
  41974c:	jnp    0x4197bf
  41974e:	cli    
  41974f:	sbb    ah,BYTE PTR [esi]
  419751:	mov    ah,0x29
  419753:	mov    edx,0x469004c6
  419758:	pop    ds
  419759:	jno    0x41975d
  41975b:	add    eax,0x1a5ace0f
  419760:	leave  
  419761:	inc    ebp
  419762:	xchg   ecx,eax
  419763:	push   ecx
  419764:	and    al,0x7e
  419766:	push   ds
  419767:	ins    DWORD PTR es:[edi],dx
  419768:	push   edx
  419769:	push   es
  41976a:	sbb    DWORD PTR [esi],ecx
  41976c:	adc    edi,ebp
  41976e:	int3   
  41976f:	bound  ebx,QWORD PTR [eax+0x64e2949b]
  419775:	xchg   esp,eax
  419776:	(bad)  
  419777:	loope  0x419727
  419779:	out    dx,eax
  41977a:	add    dl,dh
  41977c:	or     BYTE PTR [ebx+0x31],dl
  41977f:	in     eax,dx
  419780:	into   
  419781:	inc    ebp
  419782:	in     eax,dx
  419783:	repz dec edi
  419785:	add    edi,DWORD PTR [edi-0x11]
  419788:	jnp    0x419756
  41978a:	xor    eax,0xb5e3afbf
  41978f:	adc    al,BYTE PTR [eax]
  419791:	dec    BYTE PTR [ebx+0xa217faf]
  419797:	loop   0x41973b
  419799:	aad    0xe6
  41979b:	sub    dh,BYTE PTR [edi]
  41979d:	out    0x31,eax
  41979f:	nop
  4197a0:	fsubrp st(6),st
  4197a2:	add    bl,BYTE PTR [eax]
  4197a4:	fwait
  4197a5:	dec    esi
  4197a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197a7:	mov    ebp,0x5044d7b5
  4197ac:	mov    al,ds:0x40cf39ed
  4197b1:	inc    DWORD PTR [ecx+0xc]
  4197b4:	jnp    0x4197dd
  4197b6:	cli    
  4197b7:	jmp    FWORD PTR [edx+0x31]
  4197ba:	daa    
  4197bb:	add    BYTE PTR ds:0x9d90c4d6,al
  4197c1:	pop    edi
  4197c2:	inc    esp
  4197c3:	cli    
  4197c4:	mov    ebp,DWORD PTR ds:0x1a57abe8
  4197ca:	inc    esp
  4197cb:	fs jns 0x419827
  4197ce:	sub    ah,ah
  4197d0:	xor    BYTE PTR [ecx+0x11142f34],dl
  4197d6:	fild   WORD PTR [ecx+0x6a]
  4197d9:	and    bl,BYTE PTR [ecx]
  4197db:	jmp    0xede3a3ae
  4197e0:	pop    ss
  4197e1:	pop    esp
  4197e2:	mov    bh,BYTE PTR [esi-0x67]
  4197e5:	test   DWORD PTR [edx-0x7f],esp
  4197e8:	sar    ebp,0x15
  4197eb:	es scas eax,DWORD PTR es:[edi]
  4197ed:	std    
  4197ee:	adc    BYTE PTR [esi-0x7],bl
  4197f1:	or     ah,BYTE PTR [edi-0x1b]
  4197f4:	gs push esp
  4197f6:	sbb    BYTE PTR [eax-0x2c],dh
  4197f9:	dec    esi
  4197fa:	push   0xe5ea0525
  4197ff:	dec    ecx
  419800:	aam    0xa0
  419802:	ret    
  419803:	rcl    ecx,0x11
  419806:	mov    DWORD PTR [edi+0x7a],0x7f8f821f
  41980d:	cld    
  41980e:	xchg   ebx,eax
  41980f:	jp     0x419798
  419811:	fidiv  WORD PTR [ebx+eiz*4]
  419814:	push   esp
  419815:	sub    dh,BYTE PTR [ecx+0x2f11f8f6]
  41981b:	pop    edi
  41981c:	mov    esi,0x42b9dda4
  419821:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419822:	push   edx
  419823:	mov    eax,ds:0xc493af5e
  419828:	or     DWORD PTR [esi-0x4b112c11],ebx
  41982e:	jne    0x41986b
  419830:	icebp  
  419831:	and    BYTE PTR [eax+ecx*1],ah
  419834:	add    eax,DWORD PTR [esi]
  419836:	std    
  419837:	add    DWORD PTR [ecx-0x6e],esi
  41983a:	shr    BYTE PTR [esi-0x49],1
  41983d:	lock jl 0x4197df
  419840:	jb     0x4197fb
  419842:	int3   
  419843:	int3   
  419844:	hlt    
  419845:	xor    al,0x95
  419847:	jb     0x4197ce
  419849:	mov    ds:0x21d7a749,ax
  41984f:	push   ds
  419850:	push   0x58
  419852:	pop    edi
  419853:	cs xchg edi,eax
  419855:	sub    BYTE PTR [esi],dl
  419857:	or     dh,BYTE PTR [esi-0x59]
  41985a:	loop   0x41987c
  41985c:	aam    0x6d
  41985e:	mov    ch,0x8b
  419860:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419861:	adc    bl,BYTE PTR [ebp-0x58b164b2]
  419867:	retf   
  419868:	loope  0x41984b
  41986a:	add    DWORD PTR [ebx+0x18e750c1],eax
  419870:	lods   al,BYTE PTR ds:[esi]
  419871:	lods   al,BYTE PTR ds:[esi]
  419872:	push   eax
  419873:	scas   eax,DWORD PTR es:[edi]
  419874:	xlat   BYTE PTR ds:[ebx]
  419875:	cdq    
  419876:	test   al,0xd7
  419878:	mov    ecx,0x5b2eef77
  41987d:	das    
  41987e:	pop    edi
  41987f:	push   eax
  419880:	sub    dl,BYTE PTR [esi+0x7dcfa1f8]
  419886:	mov    ds,WORD PTR [ecx+0x1b4e3999]
  41988c:	dec    ebp
  41988d:	mov    ds:0x795e38f2,al
  419892:	or     cl,dl
  419894:	push   ebx
  419895:	int3   
  419896:	dec    esi
  419897:	(bad)  
  419898:	dec    eax
  419899:	call   0xc1ef:0xef7cbc7b
  4198a0:	mov    bl,0xaf
  4198a2:	xor    DWORD PTR [esi],esi
  4198a4:	pop    esp
  4198a5:	fisub  WORD PTR ds:[bp+di]
  4198a9:	jmp    0xf33:0x350e931c
  4198b0:	cmp    eax,0x14d3f1ad
  4198b5:	xchg   esp,eax
  4198b6:	xchg   ebx,eax
  4198b7:	mov    ebp,0xc85a7be9
  4198bc:	xchg   DWORD PTR [ecx-0x65db0b77],eax
  4198c2:	imul   edi,DWORD PTR [ebp+0x65],0x36b370ec
  4198c9:	adc    dl,BYTE PTR [eax]
  4198cb:	or     bh,BYTE PTR [ebx+edx*8-0x5]
  4198cf:	shr    DWORD PTR [ebx+edx*2+0x6860c214],1
  4198d6:	out    dx,al
  4198d7:	arpl   si,cx
  4198d9:	repz cmp al,0x4d
  4198dc:	pop    ds
  4198dd:	leave  
  4198de:	add    BYTE PTR [esi-0x71],dh
  4198e1:	loope  0x4198c9
  4198e3:	and    dh,BYTE PTR [ebx+edi*4+0x39]
  4198e7:	jge    0x4198ed
  4198e9:	sub    ah,BYTE PTR [edi+0x3c08e911]
  4198ef:	dec    esp
  4198f0:	mov    al,0xda
  4198f2:	ret    0xe56
  4198f5:	xchg   edx,eax
  4198f6:	rcr    DWORD PTR [edi+0x12164f22],cl
  4198fc:	mov    edx,0x3c287c09
  419901:	sti    
  419902:	cmc    
  419903:	lahf   
  419904:	loopne 0x419965
  419906:	or     BYTE PTR [eax+0xde1f27f],al
  41990c:	mov    ebx,0x2cfdf65f
  419911:	iret   
  419912:	mov    dl,0x12
  419914:	or     eax,0xe20298eb
  419919:	adc    ah,dh
  41991b:	dec    esp
  41991c:	adc    DWORD PTR [eax-0x689af8c8],0x834c09f
  419926:	sbb    DWORD PTR [edx],edi
  419928:	pop    edx
  419929:	inc    ecx
  41992a:	sub    DWORD PTR [eax+0x75],ebp
  41992d:	mov    ch,0x94
  41992f:	(bad)  
  419931:	fs xchg ebx,eax
  419933:	(bad)  
  419934:	mov    es,ebx
  419936:	adc    al,0x4a
  419938:	and    DWORD PTR [edx+ecx*1+0x73d777b9],edx
  41993f:	into   
  419940:	xchg   ecx,eax
  419941:	int    0x44
  419943:	bound  edx,QWORD PTR [ebx-0x2]
  419946:	sub    DWORD PTR [ecx+0x2d54e683],ebx
  41994c:	xor    al,0xc
  41994e:	push   esp
  41994f:	leave  
  419950:	xor    dh,ah
  419952:	xchg   ecx,edi
  419954:	(bad)  [ebx]
  419956:	enter  0xa740,0x94
  41995a:	add    DWORD PTR [esi-0x5081972a],edi
  419960:	dec    edi
  419961:	ins    DWORD PTR es:[edi],dx
  419962:	test   DWORD PTR [ecx],0x2e13d6d9
  419968:	adc    al,0xe1
  41996a:	push   edx
  41996b:	mov    ebp,0xcf36b24e
  419970:	imul   esp,DWORD PTR [ecx-0x7b],0x9d917f81
  419977:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419978:	(bad)  
  419979:	push   eax
  41997a:	mov    edi,0x8b0b36f8
  41997f:	repz mov ah,0x86
  419982:	sbb    DWORD PTR [edx+0x2bdf4d3c],ebp
  419988:	push   ebx
  419989:	lods   al,BYTE PTR ds:[esi]
  41998a:	iret   
  41998b:	push   edx
  41998c:	sub    DWORD PTR [esp+edx*2-0x20119ad5],eax
  419993:	mov    edi,0x31f1f1cf
  419998:	std    
  419999:	jle    0x41993a
  41999b:	iret   
  41999c:	jle    0x419994
  41999e:	mov    bl,0xbc
  4199a0:	std    
  4199a1:	neg    bl
  4199a3:	sbb    al,0x1d
  4199a5:	push   ds
  4199a6:	xor    bh,BYTE PTR [edi-0x21013750]
  4199ac:	push   ds
  4199ad:	out    dx,eax
  4199ae:	fnstsw WORD PTR [ebx-0x71]
  4199b1:	and    BYTE PTR [eax+0x36fb73b8],cl
  4199b7:	aaa    
  4199b8:	outs   dx,DWORD PTR ds:[esi]
  4199b9:	fst    st(2)
  4199bb:	mov    DWORD PTR [edx+0x13],ecx
  4199be:	adc    ecx,DWORD PTR [edi+eax*1]
  4199c1:	jp     0x419a3e
  4199c3:	scas   eax,DWORD PTR es:[edi]
  4199c4:	mov    ebp,0xad2e7dfd
  4199c9:	pop    esp
  4199ca:	fs jbe 0x419a4b
  4199cd:	mov    ds,WORD PTR [ebx]
  4199cf:	aaa    
  4199d0:	outs   dx,DWORD PTR ds:[esi]
  4199d1:	shr    DWORD PTR [ecx-0x49],1
  4199d4:	pop    ecx
  4199d5:	pop    edx
  4199d6:	pop    edx
  4199d7:	loop   0x4199a2
  4199d9:	adc    edi,DWORD PTR [ebp-0x41fa7cb]
  4199df:	fdivr  QWORD PTR [esi-0x20c8788d]
  4199e5:	js     0x41997a
  4199e7:	jmp    0x97d803d5
  4199ec:	xchg   esi,eax
  4199ed:	cmp    BYTE PTR [edi],bh
  4199ef:	aas    
  4199f0:	out    0xee,eax
  4199f2:	ja     0x4199d2
  4199f4:	mov    eax,ds:0x96436edd
  4199f9:	repnz test bh,0x3f
  4199fd:	dec    ecx
  4199fe:	lods   al,BYTE PTR gs:[esi]
  419a00:	xchg   dl,al
  419a02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a03:	push   esp
  419a04:	lods   eax,DWORD PTR ds:[esi]
  419a05:	ror    edi,cl
  419a07:	mov    BYTE PTR ss:[ebx+0x49b1c231],al
  419a0e:	into   
  419a0f:	sti    
  419a10:	push   ds
  419a11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a12:	das    
  419a13:	pop    edi
  419a14:	jo     0x419a0a
  419a16:	repnz xor DWORD PTR [edi],edx
  419a19:	mov    BYTE PTR [esi-0x4e93e7a4],0x38
  419a20:	jl     0x4199a9
  419a22:	icebp  
  419a23:	lea    esp,[edi]
  419a25:	adc    al,0xee
  419a27:	out    dx,al
  419a28:	mov    al,ds:0x8c1427da
  419a2d:	xchg   esi,eax
  419a2e:	mov    ss,WORD PTR [ebx-0x33]
  419a31:	lock cdq 
  419a33:	sub    esp,ecx
  419a35:	popa   
  419a36:	push   0x9b97bea0
  419a3b:	imul   esi,DWORD PTR [edx+0x6bf9d6fe],0xf3f43818
  419a45:	mov    edx,0x9e6d148f
  419a4a:	lds    eax,FWORD PTR [ebx+0x7d]
  419a4d:	outs   dx,BYTE PTR ds:[esi]
  419a4e:	dec    edx
  419a4f:	(bad)  
  419a50:	pop    ecx
  419a51:	xchg   edx,eax
  419a52:	call   0x3b728c0c
  419a57:	add    DWORD PTR ds:0xe8f8d8e,esp
  419a5d:	or     edi,ebp
  419a5f:	sahf   
  419a60:	ret    0x79b5
  419a63:	sub    eax,0x7cf2c828
  419a68:	adc    BYTE PTR [eax],bl
  419a6a:	push   ebp
  419a6b:	add    dl,al
  419a6d:	fcom   QWORD PTR [edx+0x31]
  419a70:	push   0xba68821d
  419a75:	xchg   esp,eax
  419a76:	sbb    eax,0xd874a485
  419a7b:	aaa    
  419a7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a7d:	inc    ebx
  419a7e:	xor    DWORD PTR ds:0x7f2bee7c,ebp
  419a84:	out    0xb3,al
  419a86:	xchg   ebp,eax
  419a87:	iret   
  419a88:	cld    
  419a89:	jmp    0x5aaf13ed
  419a8e:	test   DWORD PTR [ebp-0x1c9ffdca],edi
  419a94:	outs   dx,DWORD PTR ds:[esi]
  419a95:	std    
  419a96:	jnp    0x419acb
  419a98:	loope  0x419ad5
  419a9a:	jg     0x419a91
  419a9c:	mov    bl,0xaa
  419a9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a9f:	xor    eax,0x93303277
  419aa4:	in     al,dx
  419aa5:	xchg   cl,bh
  419aa7:	rcr    BYTE PTR [eax+ecx*1-0x8b2b4e],cl
  419aae:	icebp  
  419aaf:	repz es lahf 
  419ab2:	mov    BYTE PTR [ebx],dh
  419ab4:	inc    esi
  419ab5:	cwde   
  419ab6:	iret   
  419ab7:	js     0x419b2e
  419ab9:	xchg   DWORD PTR [ecx],esi
  419abb:	sbb    al,0x35
  419abd:	mov    al,ds:0xb5b3c833
  419ac2:	or     al,dh
  419ac4:	cmp    al,0x8
  419ac6:	sbb    al,0x4d
  419ac8:	lahf   
  419ac9:	xchg   ecx,eax
  419aca:	inc    ebx
  419acb:	cld    
  419acc:	or     al,0x63
  419ace:	das    
  419acf:	sbb    al,BYTE PTR [ecx+0x9c97b22]
  419ad5:	and    dh,BYTE PTR [ecx+0x510ce23d]
  419adb:	mov    BYTE PTR [ecx],bh
  419add:	popa   
  419ade:	std    
  419adf:	adc    dh,al
  419ae1:	push   ecx
  419ae2:	test   al,0x44
  419ae4:	mov    ebp,DWORD PTR [eax]
  419ae6:	rol    DWORD PTR [ebx-0x7c2b7c32],cl
  419aec:	jle    0x419af4
  419aee:	pop    esi
  419aef:	rcr    DWORD PTR [edi+esi*2+0x6e3b20d6],0x30
  419af7:	in     eax,dx
  419af8:	aas    
  419af9:	data16 mov BYTE PTR [ebx-0x52afce14],0x33
  419b01:	xor    eax,0x37b2c736
  419b06:	adc    edi,0xffffffbf
  419b09:	dec    ecx
  419b0a:	jae    0x419b8b
  419b0c:	mov    gs,ebp
  419b0e:	push   esi
  419b0f:	inc    eax
  419b10:	xor    BYTE PTR [ebp-0x67],dh
  419b13:	mov    ecx,0xceccdbd5
  419b18:	iret   
  419b19:	rcr    BYTE PTR [edx],cl
  419b1b:	and    al,0x94
  419b1d:	daa    
  419b1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b1f:	call   0x90a5adce
  419b24:	inc    esp
  419b25:	arpl   WORD PTR [edx*4-0x7ca179f7],ax
  419b2c:	(bad)  
  419b2e:	and    ebx,DWORD PTR [ebx]
  419b30:	or     al,0x48
  419b32:	std    
  419b33:	mov    BYTE PTR [ecx+0x15326585],bh
  419b39:	xor    BYTE PTR [esi],bh
  419b3b:	pop    esi
  419b3c:	daa    
  419b3d:	dec    esi
  419b3e:	bound  edi,QWORD PTR [esi-0x2e905207]
  419b44:	push   0xffffffb5
  419b46:	fdivr  DWORD PTR [ebx]
  419b48:	cmp    ah,dl
  419b4a:	(bad)  
  419b4b:	sbb    ebp,DWORD PTR [edi+0x52]
  419b4e:	test   eax,0x3fef4d6
  419b53:	xchg   ebx,eax
  419b54:	push   ebx
  419b55:	ins    BYTE PTR es:[edi],dx
  419b56:	in     eax,dx
  419b57:	in     al,dx
  419b58:	jno    0x419b30
  419b5a:	ins    BYTE PTR es:[edi],dx
  419b5b:	adc    DWORD PTR [esi-0x6a9d7dfb],eax
  419b61:	retf   0xcf8
  419b64:	xchg   ebp,eax
  419b65:	outs   dx,BYTE PTR ds:[esi]
  419b66:	sub    BYTE PTR [edx],0x4d
  419b69:	nop
  419b6a:	or     eax,0x1c68923d
  419b6f:	(bad)  
  419b70:	adc    bl,BYTE PTR [esi+0x75]
  419b73:	xchg   ch,bh
  419b75:	mov    bl,0xe
  419b77:	fwait
  419b78:	jmp    0x419b15
  419b7a:	test   al,0xc1
  419b7c:	cmp    DWORD PTR [ebx-0x7da8ee6d],ecx
  419b82:	dec    ebp
  419b83:	push   ss
  419b84:	cld    
  419b85:	pop    es
  419b86:	sub    al,0x76
  419b88:	mov    ebx,0xdffabf78
  419b8d:	push   ebx
  419b8e:	fdivr  QWORD PTR [esi-0x34]
  419b91:	aad    0xf4
  419b93:	test   dl,dl
  419b95:	mov    al,0x43
  419b97:	sub    BYTE PTR [esi+0x5a],cl
  419b9a:	mov    cl,0xd7
  419b9c:	add    ebx,DWORD PTR [ebp-0x6656c58]
  419ba2:	mov    dh,0x1e
  419ba4:	sti    
  419ba5:	xor    al,0x67
  419ba7:	mov    edx,0xa673d52c
  419bac:	les    esp,FWORD PTR [ecx-0x628cc199]
  419bb2:	je     0x419bca
  419bb4:	test   eax,0x60663391
  419bb9:	(bad)  
  419bba:	fdiv   QWORD PTR [edi]
  419bbc:	mov    ah,BYTE PTR [ecx+edx*1]
  419bbf:	in     al,0xe6
  419bc1:	cwde   
  419bc2:	xchg   edx,eax
  419bc3:	cwde   
  419bc4:	addr16 dec edx
  419bc6:	mul    BYTE PTR [edi+0xfb741ef]
  419bcc:	jnp    0x419bdb
  419bce:	mov    eax,0x1830b32
  419bd3:	ss adc eax,0xa27dc258
  419bd9:	fst    QWORD PTR [ebx-0xc]
  419bdc:	sbb    ah,al
  419bde:	das    
  419bdf:	mov    al,ds:0x310c4dc8
  419be4:	and    edx,DWORD PTR [ecx-0x70]
  419be7:	test   al,0xd1
  419be9:	adc    al,0xe1
  419beb:	push   0xffffffdc
  419bed:	mov    esp,0xdf542ad6
  419bf2:	add    bh,BYTE PTR [esi-0x659ec206]
  419bf8:	out    dx,eax
  419bf9:	shl    ecx,0xda
  419bfc:	or     BYTE PTR [eax-0x181e1f14],al
  419c02:	or     ebx,DWORD PTR [esi+0x67]
  419c05:	inc    edx
  419c06:	pop    edx
  419c07:	jl     0x419be2
  419c09:	xchg   esp,eax
  419c0a:	dec    ebx
  419c0b:	sbb    al,0x24
  419c0d:	pusha  
  419c0e:	push   cs
  419c0f:	sbb    ebx,DWORD PTR [esi-0x521090dd]
  419c15:	dec    esp
  419c16:	ins    DWORD PTR es:[edi],dx
  419c17:	ja     0x419c2b
  419c19:	add    esp,DWORD PTR [esi]
  419c1b:	or     eax,0x88ba5334
  419c20:	mov    ds:0x3f4e85d3,eax
  419c25:	(bad)  
  419c26:	adc    BYTE PTR [esi+edi*2],al
  419c29:	jle    0x419c66
  419c2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c2c:	je     0x419c76
  419c2e:	shl    ch,1
  419c30:	xor    eax,0x7490e088
  419c35:	push   eax
  419c36:	jno    0x419c76
  419c38:	or     dl,BYTE PTR [ecx]
  419c3a:	js     0x419c15
  419c3c:	ja     0x419c55
  419c3e:	adc    BYTE PTR [ebp+0x5e04d189],ah
  419c44:	cs and al,0x24
  419c47:	xchg   edx,eax
  419c48:	and    bh,dl
  419c4a:	fcom   st(4)
  419c4c:	push   ecx
  419c4d:	out    0x3b,eax
  419c4f:	dec    ecx
  419c50:	and    eax,0x19e802f5
  419c55:	add    DWORD PTR [ecx],edx
  419c57:	add    bl,BYTE PTR [ecx-0x4d]
  419c5a:	inc    ecx
  419c5b:	jp     0x419c39
  419c5d:	and    BYTE PTR [edx-0x51],ch
  419c60:	mov    eax,ds:0x1732af92
  419c65:	ret    0x6c
  419c68:	ret    
  419c69:	enter  0xafc3,0x4c
  419c6d:	mov    al,0x50
  419c6f:	fwait
  419c70:	loope  0x419ce4
  419c72:	mov    cl,0x48
  419c74:	aam    0xbc
  419c76:	dec    eax
  419c77:	ja     0x419ce0
  419c79:	mov    al,BYTE PTR [ebx+0x106347be]
  419c7f:	loop   0x419cb0
  419c81:	scas   eax,DWORD PTR es:[edi]
  419c82:	xor    bh,BYTE PTR [ecx]
  419c84:	mov    ebx,0x1699adc8
  419c89:	or     DWORD PTR [ebp-0x3e],eax
  419c8c:	fidiv  WORD PTR [esi]
  419c8e:	dec    edi
  419c8f:	out    dx,eax
  419c90:	sbb    eax,0xcfbbb5b1
  419c95:	hlt    
  419c96:	int3   
  419c97:	cmp    al,0x93
  419c99:	push   ebx
  419c9a:	push   ebx
  419c9b:	pop    esp
  419c9c:	mov    eax,0xcf01bba0
  419ca1:	iret   
  419ca2:	int    0x70
  419ca4:	jo     0x419c5e
  419ca6:	retf   
  419ca7:	(bad)  
  419ca9:	cmp    DWORD PTR ds:[esi-0x71],0xffffffe5
  419cae:	test   DWORD PTR [ecx],edi
  419cb0:	jmp    0xaf50:0x2c9c5825
  419cb7:	adc    al,0x49
  419cb9:	(bad)  
  419cba:	push   ds
  419cbb:	lock ins BYTE PTR es:[edi],dx
  419cbd:	jecxz  0x419c57
  419cbf:	sub    ebp,0xffffffe7
  419cc2:	je     0x419c8e
  419cc4:	add    ebx,edx
  419cc6:	lds    ecx,FWORD PTR [edi+ecx*8-0x3c3bd808]
  419ccd:	cmp    eax,0xe8761e26
  419cd2:	jge    0x419d41
  419cd4:	popf   
  419cd5:	jmp    0x419ca4
  419cd7:	jge    0x419c5b
  419cd9:	jbe    0x419c76
  419cdb:	pop    edx
  419cdc:	mov    eax,ds:0x6ae83447
  419ce1:	xchg   ebx,eax
  419ce2:	ins    BYTE PTR es:[edi],dx
  419ce3:	push   0x4693626c
  419ce8:	fwait
  419ce9:	jp     0x419ce5
  419ceb:	inc    DWORD PTR [ebp+eiz*8+0x70]
  419cef:	pop    esi
  419cf0:	fidiv  DWORD PTR [esi-0x75688975]
  419cf6:	mov    edx,0x6b277cd4
  419cfb:	sub    al,0xe9
  419cfd:	fucom  st(2)
  419cff:	leave  
  419d00:	(bad)  
  419d01:	xlat   BYTE PTR ds:[ebx]
  419d02:	xor    BYTE PTR [esi+0x10],bl
  419d05:	push   esi
  419d06:	sbb    al,0xe7
  419d08:	imul   edi,DWORD PTR [eax-0x7485692],0x7474d202
  419d12:	jg     0x419d1c
  419d14:	jl     0x419d73
  419d16:	dec    ebx
  419d17:	loop   0x419caa
  419d19:	out    0x87,eax
  419d1b:	js     0x419cb6
  419d1d:	inc    esi
  419d1e:	adc    al,BYTE PTR [ecx+0x70a7fb07]
  419d24:	jne    0x419ce7
  419d26:	clc    
  419d27:	mov    edx,edx
  419d29:	pushf  
  419d2a:	data16 xchg BYTE PTR [ecx-0x71ddc6d],cl
  419d31:	pop    ss
  419d32:	and    al,0xda
  419d34:	and    al,0x39
  419d36:	add    ah,BYTE PTR [esi-0x8]
  419d39:	and    ecx,DWORD PTR [ebp+0x15214546]
  419d3f:	adc    eax,0x7f5b4784
  419d44:	xchg   esp,eax
  419d45:	jg     0x419d68
  419d47:	add    BYTE PTR [esi-0x36dbd705],bh
  419d4d:	pop    ss
  419d4e:	inc    esp
  419d4f:	retf   
  419d50:	xchg   edx,eax
  419d51:	cmp    bl,BYTE PTR [edx+0x46484316]
  419d57:	adc    ebp,DWORD PTR [eax]
  419d59:	iret   
  419d5a:	sub    al,0xa0
  419d5c:	rcr    BYTE PTR [ebx],cl
  419d5e:	xor    DWORD PTR [eax+0x376d696a],edx
  419d64:	jb     0x419d56
  419d66:	repz cwde 
  419d68:	outs   dx,DWORD PTR ds:[esi]
  419d69:	data16 mov BYTE PTR [esi-0x3d96c82d],ch
  419d70:	cdq    
  419d71:	data16 xor al,0xeb
  419d74:	push   eax
  419d75:	and    al,0x67
  419d77:	push   eax
  419d78:	dec    ecx
  419d79:	in     al,0x0
  419d7b:	ins    BYTE PTR es:[edi],dx
  419d7c:	mov    ebx,0x961b2927
  419d81:	ins    BYTE PTR es:[edi],dx
  419d82:	mov    al,0xcc
  419d84:	pop    ecx
  419d85:	in     al,dx
  419d86:	mov    WORD PTR [edi+0x18],ss
  419d89:	fcmove st,st(7)
  419d8b:	cmp    eax,0x128042c4
  419d90:	inc    ebx
  419d91:	push   ss
  419d92:	sub    eax,0x6e635925
  419d97:	cmp    ebp,DWORD PTR [ecx-0x7]
  419d9a:	pop    esi
  419d9b:	sbb    edi,ebx
  419d9d:	sub    DWORD PTR [edi+0x10],0xe939328d
  419da4:	icebp  
  419da5:	push   eax
  419da6:	fild   QWORD PTR [edi+0x28]
  419da9:	and    BYTE PTR [edi-0x6708bd69],0xe4
  419db0:	lock cwde 
  419db2:	inc    edx
  419db3:	or     ch,BYTE PTR [edx]
  419db5:	jnp    0x419d4e
  419db7:	call   0x107b:0xc959750f
  419dbe:	xchg   esp,eax
  419dbf:	popa   
  419dc0:	es or  al,0xf1
  419dc3:	mov    ebp,0xce808488
  419dc8:	xor    BYTE PTR [ebp-0x36],ah
  419dcb:	repz enter 0x80fc,0x72
  419dd0:	lods   eax,DWORD PTR ds:[esi]
  419dd1:	ret    0xb97c
  419dd4:	enter  0xc1ad,0x90
  419dd8:	ret    0x4476
  419ddb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ddc:	shl    DWORD PTR [ebp+0x48a3ebd0],cl
  419de2:	or     DWORD PTR [ebx],esi
  419de4:	lahf   
  419de5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419de6:	inc    edx
  419de7:	enter  0x70ea,0x40
  419deb:	rcl    BYTE PTR [eax+0x1e23d874],0x76
  419df2:	mov    eax,0xcbd641e1
  419df7:	mov    ds:0xaf59e227,eax
  419dfc:	add    BYTE PTR [esi+0x5d],0x86
  419e00:	push   ecx
  419e01:	bound  esp,QWORD PTR [ebx]
  419e03:	mov    esp,0x9a471d09
  419e08:	jns    0x419e21
  419e0a:	ja     0x419da7
  419e0c:	fldcw  WORD PTR ss:[eax+0x3]
  419e10:	arpl   WORD PTR [esi],bx
  419e12:	mov    DWORD PTR [esi+0x1f],edx
  419e15:	jmp    0x82d1fefb
  419e1a:	push   ebp
  419e1b:	fmul   DWORD PTR [esi]
  419e1d:	inc    ebx
  419e1e:	dec    ecx
  419e1f:	dec    ebp
  419e20:	ds in  al,0x73
  419e23:	sub    al,0x7e
  419e25:	and    DWORD PTR [ecx+0x3142d804],ecx
  419e2b:	sbb    al,0xe6
  419e2d:	iret   
  419e2e:	inc    esi
  419e2f:	and    eax,DWORD PTR ds:0xbfed23f2
  419e35:	mov    dl,BYTE PTR [ecx-0x1128f092]
  419e3b:	ret    0xd54
  419e3e:	xchg   BYTE PTR [esi+0x69],al
  419e41:	nop
  419e42:	push   0x1
  419e44:	xchg   ecx,eax
  419e45:	nop
  419e46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e47:	(bad)  
  419e48:	pop    ss
  419e49:	mov    WORD PTR [ecx+0x75f58c32],?
  419e4f:	test   al,0xbc
  419e51:	jle    0x419e77
  419e53:	inc    ecx
  419e54:	pop    edi
  419e55:	arpl   WORD PTR [ecx-0x33],bp
  419e58:	mov    ebx,cs
  419e5a:	pop    fs
  419e5c:	(bad)  
  419e5e:	(bad)  
  419e5f:	loope  0x419e10
  419e61:	cld    
  419e62:	xchg   ebp,eax
  419e63:	jg     0x419e90
  419e65:	cld    
  419e66:	int3   
  419e67:	mov    edi,0xbf8757fd
  419e6c:	pop    ss
  419e6d:	ds stc 
  419e6f:	pop    esi
  419e70:	pop    ds
  419e71:	scas   eax,DWORD PTR es:[edi]
  419e72:	test   DWORD PTR [eax],eax
  419e74:	js     0x419e67
  419e76:	sub    edi,edi
  419e78:	dec    ebp
  419e79:	int    0xff
  419e7b:	lea    edi,[edi]
  419e7d:	jmp    DWORD PTR [ebx-0x51ccaea2]
  419e83:	mov    ah,0xef
  419e85:	(bad)  
  419e86:	popa   
  419e87:	cmp    bl,bl
  419e89:	lock rcl ebx,cl
  419e8c:	test   BYTE PTR ds:0x4fa38ec7,dl
  419e92:	cld    
  419e93:	add    esp,esp
  419e95:	add    BYTE PTR [eax+0x6c],0xc8
  419e99:	cmp    cl,dl
  419e9b:	out    0x8a,eax
  419e9d:	ss icebp 
  419e9f:	jge    0x419e8e
  419ea1:	inc    esp
  419ea2:	mov    dl,0x8e
  419ea4:	sbb    esi,DWORD PTR [edx-0x38]
  419ea7:	es push eax
  419ea9:	pop    esi
  419eaa:	mov    ah,0xbb
  419eac:	or     eax,0x20541a31
  419eb1:	leave  
  419eb2:	inc    eax
  419eb3:	jbe    0x419e5c
  419eb5:	pop    eax
  419eb6:	and    esp,esp
  419eb8:	sub    al,0x87
  419eba:	jp     0x419e84
  419ebc:	test   esi,0xc343085c
  419ec2:	in     al,0xe6
  419ec4:	jle    0x419e48
  419ec6:	pop    esp
  419ec7:	inc    esp
  419ec8:	inc    ebx
  419ec9:	enter  0x82b9,0x1e
  419ecd:	and    al,0xcc
  419ecf:	in     eax,0xab
  419ed1:	mov    esp,0x9bd8a9c1
  419ed6:	jno    0x419e6a
  419ed8:	xchg   DWORD PTR [edi],ebp
  419eda:	leave  
  419edb:	or     al,0xff
  419edd:	sbb    BYTE PTR [ecx+0x27],ah
  419ee0:	fimul  DWORD PTR ds:0xdda40180
  419ee6:	and    DWORD PTR [ecx],esi
  419ee8:	call   0x9acd:0x8c0e4ac6
  419eef:	(bad)  
  419ef0:	cmp    dh,bh
  419ef2:	and    DWORD PTR [ebp-0x3affd7e8],eax
  419ef8:	and    bh,bh
  419efa:	ds xor eax,0x468d8ce3
  419f00:	adc    edi,ebx
  419f02:	adc    eax,0xc48e113
  419f07:	arpl   WORD PTR [ebx+0x712da350],bp
  419f0d:	pushf  
  419f0e:	fcmovb st,st(4)
  419f10:	sbb    DWORD PTR [ebx],esi
  419f12:	xchg   BYTE PTR [ecx+eax*4],ch
  419f15:	ins    BYTE PTR es:[edi],dx
  419f16:	push   0x991d36fe
  419f1b:	ins    BYTE PTR es:[edi],dx
  419f1c:	cs xchg ecx,esi
  419f1f:	fwait
  419f20:	sub    bl,ah
  419f22:	and    ecx,ecx
  419f24:	enter  0x3105,0x99
  419f28:	leave  
  419f29:	in     al,0x1c
  419f2b:	out    0xe7,al
  419f2d:	jnp    0x419f15
  419f2f:	ffree  st(5)
  419f31:	xor    al,0xc3
  419f33:	add    ebx,edi
  419f35:	or     BYTE PTR [edi+0x32fda661],cl
  419f3b:	imul   esp,DWORD PTR [esi-0x34],0x88384705
  419f42:	push   edx
  419f43:	mov    dh,0xa9
  419f45:	mov    edi,0xc63e8c66
  419f4a:	hlt    
  419f4b:	xor    BYTE PTR [esi],ah
  419f4d:	mov    bl,ch
  419f4f:	cmovs  edx,DWORD PTR [ebx]
  419f52:	cmp    BYTE PTR [ebx-0x3d],ch
  419f55:	ror    BYTE PTR [ecx+ebx*4-0x7286de1d],cl
  419f5c:	dec    eax
  419f5d:	data16 rol BYTE PTR [ecx+ecx*4+0x2f738810],1
  419f65:	xor    eax,0xbccf668e
  419f6a:	push   0xffffffa0
  419f6c:	jb     0x419f6d
  419f6e:	xchg   ecx,eax
  419f6f:	and    al,0x18
  419f71:	jns    0x419f31
  419f73:	push   esi
  419f74:	inc    esi
  419f75:	(bad)
  419f78:	fist   DWORD PTR [ecx-0x9]
  419f7b:	lock push es
  419f7d:	jo     0x419f6e
  419f7f:	call   FWORD PTR [edi]
  419f81:	ja     0x419f3f
  419f83:	mov    edi,0x3f4ff787
  419f88:	in     eax,0xfd
  419f8a:	aas    
  419f8b:	mov    esp,0x840fc9c6
  419f90:	dec    ecx
  419f91:	imul   ebx,DWORD PTR [ecx-0x2e],0x33
  419f95:	add    eax,0xa5b949de
  419f9a:	cld    
  419f9b:	js     0x419fdf
  419f9d:	loopne 0x419f4d
  419f9f:	mov    ah,0x17
  419fa1:	or     eax,0x231ae7ed
  419fa6:	xor    edx,edx
  419fa8:	push   edi
  419fa9:	sbb    DWORD PTR [ebx+0x9063640],edx
  419faf:	or     al,0xd4
  419fb1:	pop    ss
  419fb2:	mov    edi,0x44f03882
  419fb7:	jb     0x419fc4
  419fb9:	xcrypt-cfb (bad)
  419fba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419fbb:	pusha  
  419fbc:	pop    ebx
  419fbd:	(bad)  
  419fbe:	sti    
  419fbf:	out    0x99,al
  419fc1:	out    dx,al
  419fc2:	add    dh,BYTE PTR ds:[esi+0x707c80ee]
  419fc9:	and    eax,DWORD PTR [esp+edx*4-0x1b]
  419fcd:	sbb    bl,BYTE PTR [edi]
  419fcf:	rol    DWORD PTR [esi+eiz*8+0x7724b2d5],1
  419fd6:	ss retf 0x2606
  419fda:	cmp    bh,ah
  419fdc:	retf   0x69ef
  419fdf:	xchg   esi,eax
  419fe0:	jnp    0x419f98
  419fe2:	add    eax,0x954c0841
  419fe7:	inc    ebx
  419fe8:	leave  
  419fe9:	repz xchg ebx,eax
  419feb:	pushf  
  419fec:	fdivr  DWORD PTR [ebp+0x65]
  419fef:	in     al,dx
  419ff0:	ins    BYTE PTR es:[edi],dx
  419ff1:	popa   
  419ff2:	jp     0x41a053
  419ff4:	idiv   DWORD PTR [edx]
  419ff6:	int3   
  419ff7:	xchg   esp,eax
  419ff8:	(bad)  
  419ff9:	aas    
  419ffa:	or     eax,0x78110ff4
  419fff:	inc    ebp
  41a000:	enter  0xb422,0xc6
  41a004:	ss lahf 
  41a006:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a007:	es jge 0x41a03f
  41a00a:	adc    eax,0x415ea344
  41a00f:	arpl   WORD PTR [eax+0x4],bp
  41a012:	xchg   esi,eax
  41a013:	es push cs
  41a015:	int3   
  41a016:	xor    eax,0x683656da
  41a01b:	adc    DWORD PTR [ecx],esp
  41a01d:	xchg   edi,eax
  41a01e:	loope  0x41a060
  41a020:	arpl   di,cx
  41a022:	cdq    
  41a023:	aas    
  41a024:	jecxz  0x419fc3
  41a026:	adc    eax,DWORD PTR [edi]
  41a028:	test   eax,0x173c5ff8
  41a02d:	add    DWORD PTR [ecx],edi
  41a02f:	pop    esi
  41a030:	ja     0x419ffa
  41a032:	add    eax,0xa9ffd8a5
  41a037:	sub    DWORD PTR [edx+0x3920945c],0x1d
  41a03e:	jbe    0x41a017
  41a040:	pop    ds
  41a041:	and    edx,eax
  41a043:	gs pop ebx
  41a045:	scas   eax,DWORD PTR es:[edi]
  41a046:	sub    al,0xcd
  41a048:	test   DWORD PTR [esi-0xc0fcd24],esi
  41a04e:	mov    ecx,0x188d230b
  41a053:	ror    esp,cl
  41a055:	aam    0x81
  41a057:	sbb    BYTE PTR [esi+eiz*1],ah
  41a05a:	or     DWORD PTR [esi+0x1680a7d6],esp
  41a060:	out    dx,al
  41a061:	mov    esi,0xea5f99a7
  41a066:	or     al,0x4
  41a068:	push   ecx
  41a069:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a06a:	into   
  41a06b:	stc    
  41a06c:	push   esi
  41a06d:	sar    bl,0x50
  41a070:	push   eax
  41a071:	clc    
  41a072:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a073:	popa   
  41a074:	clc    
  41a075:	arpl   WORD PTR [edi-0xf83d8c5],di
  41a07b:	(bad)  
  41a07c:	imul   esp,DWORD PTR [ecx],0x0
  41a07f:	fdivr  st,st(5)
  41a081:	into   
  41a082:	xchg   edi,eax
  41a083:	add    bh,BYTE PTR [edi]
  41a085:	int    0x55
  41a087:	nop
  41a088:	in     eax,0x96
  41a08a:	sbb    al,0x4a
  41a08c:	pop    ebx
  41a08d:	ins    DWORD PTR es:[edi],dx
  41a08e:	pushf  
  41a08f:	out    0x9a,al
  41a091:	ficom  DWORD PTR [ebx-0x3a]
  41a094:	mov    ebx,0x2f6bd60b
  41a099:	jl     0x41a0bf
  41a09b:	fstp   QWORD PTR [esi-0x1d]
  41a09e:	sub    al,0x67
  41a0a0:	ins    BYTE PTR es:[edi],dx
  41a0a1:	pop    ecx
  41a0a2:	fst    st(0)
  41a0a4:	les    eax,FWORD PTR [eax]
  41a0a6:	add    BYTE PTR [eax],ah
  41a0a8:	add    BYTE PTR [ecx+0x44],cl
  41a0ab:	inc    ecx
  41a0ac:	push   esp
  41a0ad:	shr    DWORD PTR [edx+esi*8-0x194b7a7f],1
  41a0b4:	sbb    edx,esp
  41a0b6:	and    esi,esi
  41a0b8:	mov    dl,0xbc
  41a0ba:	mov    al,ds:0xd74fec43
  41a0bf:	fistp  DWORD PTR [ecx+edi*1+0x7f26ea4c]
  41a0c6:	add    BYTE PTR [ebx],0x61
  41a0c9:	int    0x67
  41a0cb:	mov    DWORD PTR [ecx],esp
  41a0cd:	jbe    0x41a0f0
  41a0cf:	inc    esi
  41a0d0:	das    
  41a0d1:	enter  0x9435,0x6c
  41a0d5:	inc    ebx
  41a0d6:	and    eax,0xdadb0f11
  41a0db:	int3   
  41a0dc:	pushf  
  41a0dd:	sub    ecx,ecx
  41a0df:	sub    al,0x43
  41a0e1:	and    ecx,DWORD PTR [edx+edx*8-0x314020d4]
  41a0e8:	es mov edx,0x964030e0
  41a0ee:	inc    edi
  41a0ef:	inc    ebx
  41a0f0:	les    edx,FWORD PTR [ecx+0x173c0b16]
  41a0f6:	xchg   edi,eax
  41a0f7:	js     0x41a093
  41a0f9:	inc    edi
  41a0fa:	ss and al,0x8f
  41a0fd:	and    dh,BYTE PTR [ecx]
  41a0ff:	sbb    bl,BYTE PTR [edx+0x5a]
  41a102:	lods   al,BYTE PTR ds:[esi]
  41a103:	mov    esi,edx
  41a105:	add    eax,0x64b19246
  41a10a:	adc    edx,DWORD PTR [esi]
  41a10c:	jno    0x41a18c
  41a10e:	dec    edx
  41a10f:	inc    esp
  41a110:	inc    esi
  41a111:	mov    al,ds:0xe27b92b6
  41a116:	push   cs
  41a117:	sub    bh,BYTE PTR [edi]
  41a119:	push   edi
  41a11a:	dec    edi
  41a11b:	js     0x41a0db
  41a11d:	mov    esi,0xe39f856
  41a122:	mov    ah,0xcc
  41a124:	mov    ecx,0x23ef3536
  41a129:	arpl   WORD PTR [eax],dx
  41a12b:	pop    edx
  41a12c:	or     BYTE PTR [edi+eax*1],bh
  41a12f:	rcr    DWORD PTR [ecx-0x317c7705],0xa
  41a136:	mov    al,ds:0x820211cc
  41a13b:	loopne 0x41a179
  41a13d:	sbb    eax,0x7c5bb7e7
  41a142:	stos   DWORD PTR es:[edi],eax
  41a143:	cld    
  41a144:	jge    0x41a0da
  41a146:	pop    ecx
  41a147:	bswap  ecx
  41a149:	stc    
  41a14a:	push   edi
  41a14b:	push   ds
  41a14c:	adc    al,0xa
  41a14e:	mov    ecx,0x399c4802
  41a153:	adc    edx,DWORD PTR [ebx]
  41a155:	shl    DWORD PTR [edi],1
  41a157:	hlt    
  41a158:	and    ebx,DWORD PTR [ebx]
  41a15a:	mov    WORD PTR [esi+ecx*8+0x446e85b8],fs
  41a161:	nop
  41a162:	clc    
  41a163:	sahf   
  41a164:	(bad)  
  41a165:	mov    edi,0xf3728150
  41a16a:	loope  0x41a183
  41a16c:	out    dx,eax
  41a16d:	push   ebp
  41a16f:	jg     0x41a158
  41a171:	mov    ch,0xe0
  41a173:	mov    ebp,0x9b107d0f
  41a178:	(bad)  
  41a179:	call   0xe215b74d
  41a17e:	(bad)  [edi]
  41a180:	jp     0x41a187
  41a182:	repz add ebx,0x254d224d
  41a189:	imul   BYTE PTR [edi]
  41a18b:	or     esp,ebx
  41a18d:	dec    ecx
  41a18e:	jl     0x41a167
  41a190:	pop    esp
  41a191:	loop   0x41a1cc
  41a193:	out    0xa3,eax
  41a195:	int3   
  41a196:	mov    ds:0xf6c5f399,al
  41a19b:	pop    DWORD PTR [edx+0x28]
  41a19e:	xchg   eax,ebx
  41a1a0:	out    0xd,al
  41a1a2:	inc    edx
  41a1a3:	dec    esp
  41a1a4:	add    bh,bl
  41a1a6:	test   al,ch
  41a1a8:	test   DWORD PTR [eax-0x71f6ed94],ebx
  41a1ae:	arpl   WORD PTR [ecx-0x14],cx
  41a1b1:	je     0x41a136
  41a1b3:	sbb    al,0x44
  41a1b5:	loopne 0x41a1af
  41a1b7:	bound  ecx,QWORD PTR [eax+0x19]
  41a1ba:	adc    BYTE PTR [esi],0xa7
  41a1bd:	(bad)  
  41a1be:	adc    BYTE PTR [eax+0x55693468],ch
  41a1c4:	es jo  0x41a19b
  41a1c7:	(bad)  
  41a1c8:	std    
  41a1c9:	mov    ebx,0xfdcc3a45
  41a1ce:	inc    esp
  41a1cf:	loopne 0x41a231
  41a1d1:	scas   al,BYTE PTR es:[edi]
  41a1d2:	mov    ebx,esp
  41a1d4:	pop    esp
  41a1d5:	ror    al,0x67
  41a1d8:	cmp    BYTE PTR [edx],0x52
  41a1db:	enter  0x50d3,0xd
  41a1df:	jae    0x41a16c
  41a1e1:	mov    al,ds:0x7ce8d40c
  41a1e6:	leave  
  41a1e7:	mov    ebx,0x8f7f6ba
  41a1ec:	jmp    0x1162:0xc645de72
  41a1f3:	xchg   ebx,esi
  41a1f5:	sbb    al,0xf7
  41a1f7:	adc    BYTE PTR [ebx+0x59],bh
  41a1fa:	pusha  
  41a1fb:	mov    esi,0x99cf3bdd
  41a200:	sub    esi,DWORD PTR [edi-0x4bb27c59]
  41a206:	jb     0x41a1e6
  41a208:	pop    edi
  41a209:	xchg   ecx,eax
  41a20a:	xor    ebp,DWORD PTR [esi-0x20]
  41a20d:	sbb    ebp,DWORD PTR ds:0xb73f20eb
  41a213:	or     eax,0x605fbc97
  41a218:	sbb    bh,dl
  41a21a:	ss jbe 0x41a20e
  41a21d:	jb     0x41a1c6
  41a21f:	mov    ds:0xc2650384,al
  41a224:	adc    ah,BYTE PTR [ebx+0x12]
  41a227:	ficom  DWORD PTR [edi+ebp*2+0x4da53779]
  41a22e:	or     DWORD PTR [ecx+0x10],esi
  41a231:	mov    esp,DWORD PTR [eax]
  41a233:	or     eax,DWORD PTR [ebx-0x3]
  41a236:	scas   al,BYTE PTR es:[edi]
  41a237:	push   ecx
  41a238:	mov    al,ds:0xc8544095
  41a23d:	add    eax,0x24174490
  41a242:	xor    DWORD PTR [edx+ecx*1],0xfffffff2
  41a246:	test   DWORD PTR [edx+eax*2+0x20a497c7],0x401f6828
  41a251:	pop    eax
  41a252:	test   DWORD PTR [edx-0x9],ecx
  41a255:	jmp    0xd36bf669
  41a25a:	pop    ss
  41a25b:	mov    esi,0xf83f067b
  41a260:	jecxz  0x41a2a5
  41a262:	pop    ss
  41a263:	add    dh,bl
  41a265:	fabs   
  41a267:	fwait
  41a268:	shl    eax,1
  41a26a:	in     al,0x86
  41a26c:	push   edi
  41a26d:	pusha  
  41a26e:	xchg   esp,eax
  41a26f:	icebp  
  41a270:	sbb    eax,0x83e79067
  41a275:	pop    ebx
  41a276:	push   ss
  41a277:	ins    BYTE PTR es:[edi],dx
  41a278:	popa   
  41a279:	jne    0x41a211
  41a27b:	adc    esp,DWORD PTR [edx+0x66891d0d]
  41a281:	adc    al,BYTE PTR [esi]
  41a283:	aaa    
  41a284:	xlat   BYTE PTR ds:[ebx]
  41a285:	test   DWORD PTR [esi+0x1],esp
  41a288:	inc    ebx
  41a289:	mov    bl,0x78
  41a28b:	mov    dh,0xb8
  41a28d:	enter  0x96d1,0xa2
  41a291:	jne    0x41a310
  41a293:	iret   
  41a294:	popa   
  41a295:	outs   dx,BYTE PTR ds:[esi]
  41a296:	sar    esi,1
  41a298:	pop    ecx
  41a299:	dec    esi
  41a29a:	sbb    BYTE PTR [edi+0x50617e6a],ch
  41a2a0:	xor    DWORD PTR [ebx],eax
  41a2a2:	enter  0xdb4,0x1b
  41a2a6:	sbb    esp,DWORD PTR [edx]
  41a2a8:	mov    dl,0x5b
  41a2aa:	dec    esp
  41a2ab:	xchg   ebx,eax
  41a2ac:	imul   esp,DWORD PTR [edx],0xc
  41a2af:	popa   
  41a2b0:	cli    
  41a2b1:	push   cs
  41a2b2:	ror    DWORD PTR [ecx-0xc],0xc1
  41a2b6:	aaa    
  41a2b7:	mov    ebx,fs
  41a2b9:	and    cl,BYTE PTR [ebx]
  41a2bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2bc:	repnz and dl,BYTE PTR [ebx]
  41a2bf:	or     edx,0xcae6e260
  41a2c5:	xor    DWORD PTR [ecx],esp
  41a2c7:	shl    BYTE PTR [ebx+0x64],1
  41a2ca:	mov    bh,0xb3
  41a2cc:	add    bl,BYTE PTR [ebx-0x56e110ed]
  41a2d2:	and    ebp,DWORD PTR [eax+0x4]
  41a2d5:	popa   
  41a2d6:	mov    ecx,0xeb764e49
  41a2db:	xor    eax,0x80474e61
  41a2e0:	or     BYTE PTR [ebx],ah
  41a2e2:	mov    esp,esi
  41a2e4:	adc    al,0x46
  41a2e6:	push   es
  41a2e7:	mov    bl,0x56
  41a2e9:	sub    bl,BYTE PTR [edi+0x27]
  41a2ec:	pop    ebx
  41a2ed:	shl    ch,0x3e
  41a2f0:	iret   
  41a2f1:	and    BYTE PTR [esi],bl
  41a2f3:	in     eax,0x54
  41a2f5:	fnstsw WORD PTR [ecx-0x160ec31f]
  41a2fb:	enter  0x45d8,0x9b
  41a2ff:	dec    edx
  41a300:	mov    dh,0x9d
  41a302:	sti    
  41a303:	dec    esp
  41a304:	icebp  
  41a305:	lods   eax,DWORD PTR ds:[esi]
  41a306:	dec    eax
  41a307:	and    ecx,DWORD PTR [esi+0x889ccd4]
  41a30d:	dec    esi
  41a30e:	sub    ebp,ebp
  41a310:	xor    eax,0x2c168856
  41a315:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a316:	add    edx,DWORD PTR [eax-0x77ced253]
  41a31c:	iret   
  41a31d:	div    DWORD PTR [ebp+0x599acf73]
  41a323:	xchg   BYTE PTR [esi+0x7908d0c2],al
  41a329:	das    
  41a32a:	jg     0x41a2e2
  41a32c:	or     BYTE PTR ds:0x22e02be9,dl
  41a332:	retf   
  41a333:	rcl    bh,0x48
  41a336:	das    
  41a337:	or     BYTE PTR [eax+eax*8+0x17e00b08],dh
  41a33e:	mov    ah,0x73
  41a340:	(bad)  
  41a341:	das    
  41a342:	inc    ebx
  41a343:	mov    cl,0x1a
  41a345:	pop    ss
  41a346:	or     esp,DWORD PTR [edi-0x50dd06a1]
  41a34c:	shl    ecx,0xa1
  41a34f:	or     eax,DWORD PTR [eax-0x3201e08]
  41a355:	icebp  
  41a356:	sub    BYTE PTR [edx+0x752211bd],cl
  41a35c:	mov    cl,bl
  41a35e:	cmp    cl,BYTE PTR [ebp+0x6c4a5b1c]
  41a364:	jg     0x41a351
  41a366:	gs xor eax,0x3b2f5bdf
  41a36c:	pop    eax
  41a36d:	cmp    BYTE PTR [edx+edx*8],ch
  41a370:	mov    ebx,0x1de29a10
  41a375:	(bad)  
  41a376:	mov    esp,0xb5c923c0
  41a37b:	mov    al,0xad
  41a37d:	sub    eax,0xae221720
  41a382:	(bad)  [ecx]
  41a384:	inc    ebx
  41a385:	mov    bl,0x85
  41a387:	and    eax,0x624d8c0e
  41a38c:	out    0x3b,eax
  41a38e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a38f:	(bad)  
  41a390:	(bad)  
  41a391:	jmp    0x41a354
  41a393:	mov    ebp,0xc86d73d1
  41a398:	dec    eax
  41a399:	xor    al,0x95
  41a39b:	sub    DWORD PTR [eax-0x6f],edx
  41a39e:	sub    BYTE PTR [eax+0x489f9e72],al
  41a3a4:	push   0xffffffb3
  41a3a6:	ret    0x2c96
  41a3a9:	fucomi st,st(3)
  41a3ab:	sbb    eax,0xc0931686
  41a3b0:	xchg   cl,al
  41a3b2:	int3   
  41a3b3:	stos   BYTE PTR es:[edi],al
  41a3b4:	mov    ?,WORD PTR [edx+eax*2]
  41a3b7:	push   ecx
  41a3b8:	pop    eax
  41a3b9:	fild   WORD PTR [edi]
  41a3bb:	data16 jle 0x41a342
  41a3be:	sub    DWORD PTR ds:0x5e1b17cc,0x808469c6
  41a3c8:	inc    ebp
  41a3c9:	aas    
  41a3ca:	loop   0x41a3e3
  41a3cc:	nop
  41a3cd:	out    0xa,eax
  41a3cf:	or     dh,BYTE PTR [ebx-0x30]
  41a3d2:	xchg   esp,eax
  41a3d3:	popf   
  41a3d4:	das    
  41a3d5:	stc    
  41a3d6:	xor    edi,ecx
  41a3d8:	adc    al,BYTE PTR [ecx-0x55]
  41a3db:	cmp    al,0x67
  41a3dd:	sbb    al,0xa9
  41a3df:	repz scas al,BYTE PTR es:[edi]
  41a3e1:	imul   ebp,DWORD PTR [esi],0xa5cdca8
  41a3e7:	xchg   esp,eax
  41a3e8:	dec    ecx
  41a3e9:	out    dx,al
  41a3ea:	retf   0x1f72
  41a3ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3ee:	adc    eax,0x715a0e1a
  41a3f3:	int    0x92
  41a3f5:	inc    eax
  41a3f6:	jmp    0x4683f329
  41a3fb:	sahf   
  41a3fc:	xor    eax,DWORD PTR [esi-0x37]
  41a3ff:	or     dl,BYTE PTR [esi+ecx*4-0x5bcb7d42]
  41a406:	in     al,0xb7
  41a408:	sbb    al,0x69
  41a40a:	in     eax,dx
  41a40b:	in     eax,dx
  41a40c:	push   ss
  41a40d:	add    al,BYTE PTR ds:0xfcc3fda2
  41a413:	cdq    
  41a414:	mov    esi,0xdbe20b41
  41a419:	push   eax
  41a41a:	jle    0x41a3aa
  41a41c:	cld    
  41a41d:	cld    
  41a41e:	dec    eax
  41a41f:	sti    
  41a420:	adc    al,dl
  41a422:	mov    ds:0x6a283dfe,al
  41a427:	(bad)  
  41a428:	test   ebx,0x2c2015e0
  41a42e:	inc    ecx
  41a42f:	aam    0x3b
  41a431:	clc    
  41a432:	xor    ch,BYTE PTR [edi+0xaa1f1c1]
  41a438:	adc    BYTE PTR [edi],0xbf
  41a43b:	hlt    
  41a43c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a43d:	mov    ebp,0x447f0d28
  41a442:	cmp    esi,ecx
  41a444:	push   ss
  41a445:	mov    DWORD PTR [edi],ebx
  41a447:	stos   DWORD PTR es:[edi],eax
  41a448:	and    bh,bh
  41a44a:	pop    ebp
  41a44b:	sbb    BYTE PTR [esi+0x41],al
  41a44e:	mov    ss,WORD PTR [edx]
  41a450:	mov    WORD PTR [edi+0x55],?
  41a453:	sub    DWORD PTR [ebp-0x5],0x6acfb02d
  41a45a:	push   ss
  41a45b:	addr16 icebp 
  41a45d:	inc    edx
  41a45e:	pop    edi
  41a45f:	or     eax,DWORD PTR [edx+0x190bd3c0]
  41a465:	js     0x41a420
  41a467:	popf   
  41a468:	das    
  41a469:	int3   
  41a46a:	es xchg ebp,eax
  41a46c:	(bad)  
  41a46e:	sbb    BYTE PTR [ecx],ch
  41a470:	div    BYTE PTR [ecx+0x3a10a436]
  41a476:	fdiv   DWORD PTR [edx+0x53]
  41a479:	iret   
  41a47a:	dec    eax
  41a47b:	jnp    0x41a496
  41a47d:	mov    ebx,0x2f397768
  41a482:	jne    0x41a4b8
  41a484:	test   eax,0x6797f71b
  41a489:	clc    
  41a48a:	(bad)  
  41a48b:	sub    ecx,DWORD PTR [esi+0x251b02e]
  41a491:	rol    BYTE PTR [esi+0x6055ad16],0xb4
  41a498:	mov    ebx,0x723ca538
  41a49d:	shl    ebp,0x9a
  41a4a0:	adc    eax,0xaeed7102
  41a4a5:	dec    eax
  41a4a6:	jmp    0xdf9c97d3
  41a4ab:	cmp    ecx,0x53
  41a4ae:	ss mov edx,0xc23fac00
  41a4b4:	jne    0x41a530
  41a4b6:	mov    ah,BYTE PTR [ebx+0x4f]
  41a4b9:	test   BYTE PTR [ebx-0x7a],ch
  41a4bc:	ret    
  41a4bd:	rol    BYTE PTR [esi-0x1f6653ff],1
  41a4c3:	int3   
  41a4c4:	lahf   
  41a4c5:	mov    ebp,0x38a7044e
  41a4ca:	sub    al,0x45
  41a4cc:	xor    BYTE PTR [edx+0x4a62249b],dl
  41a4d2:	mov    ecx,0xb80e5f09
  41a4d7:	enter  0x7b4b,0xc9
  41a4db:	adc    edx,ebx
  41a4dd:	mov    BYTE PTR [edi-0x69d996b8],cl
  41a4e3:	cmp    DWORD PTR [ecx+esi*1+0x336632a4],edx
  41a4ea:	daa    
  41a4eb:	scas   al,BYTE PTR es:[edi]
  41a4ec:	mov    ecx,0x522a8820
  41a4f1:	push   eax
  41a4f2:	mov    ah,dh
  41a4f4:	dec    edi
  41a4f5:	fs call 0x5ab598c2
  41a4fb:	xchg   edx,eax
  41a4fc:	and    BYTE PTR es:[esi+0x24],ch
  41a500:	leave  
  41a501:	data16 sub cl,BYTE PTR [edx+0x898d793]
  41a508:	popa   
  41a509:	or     BYTE PTR [edx],ch
  41a50b:	add    bh,BYTE PTR [edi-0x4082946c]
  41a511:	or     BYTE PTR [esi+0x64],bl
  41a514:	call   0xf7bfadd3
  41a519:	lds    esp,FWORD PTR [edi-0x71]
  41a51c:	fdivp  st(1),st
  41a51e:	test   DWORD PTR [ecx+0x3e],ebx
  41a521:	in     al,0xe3
  41a523:	inc    ebx
  41a524:	adc    eax,0xf2794100
  41a529:	push   0x61
  41a52b:	mov    al,0xfb
  41a52d:	dec    ecx
  41a52e:	adc    eax,0x1ec5bfe9
  41a533:	xchg   edi,eax
  41a534:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a535:	lahf   
  41a536:	push   esi
  41a537:	mov    edx,0xc180dd82
  41a53c:	xor    dl,BYTE PTR [ecx-0x65085bc7]
  41a542:	out    dx,eax
  41a543:	jmp    0x41a501
  41a545:	add    cl,cl
  41a547:	adc    eax,0xfccd4208
  41a54c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a54d:	xchg   edx,eax
  41a54e:	out    dx,al
  41a54f:	repnz adc ecx,DWORD PTR [ecx-0x6d19efe7]
  41a556:	pop    edx
  41a557:	push   ss
  41a558:	push   esp
  41a559:	sub    ebx,esp
  41a55b:	xchg   ecx,eax
  41a55c:	dec    edi
  41a55d:	jae    0x41a50c
  41a55f:	ins    DWORD PTR es:[edi],dx
  41a560:	cdq    
  41a561:	sar    al,cl
  41a563:	sbb    al,0x7c
  41a565:	xchg   DWORD PTR [ecx-0x3c],edi
  41a568:	scas   al,BYTE PTR es:[edi]
  41a569:	pop    ds
  41a56a:	icebp  
  41a56b:	cmp    edx,DWORD PTR es:[eax]
  41a56e:	push   esi
  41a56f:	mov    ah,0xbb
  41a571:	xor    eax,0x50ac031
  41a576:	jo     0x41a52c
  41a578:	sahf   
  41a579:	xor    DWORD PTR [edi-0x8c712ea],0xfdac334f
  41a583:	ins    BYTE PTR es:[edi],dx
  41a584:	mov    BYTE PTR fs:[esi+0x67b830c6],bh
  41a58b:	(bad)  
  41a58c:	push   ss
  41a58d:	sbb    edx,DWORD PTR [eax+eiz*4-0x52]
  41a591:	push   0x5a4b093d
  41a596:	lods   eax,DWORD PTR ds:[esi]
  41a597:	lods   al,BYTE PTR ds:[esi]
  41a598:	repnz sti 
  41a59a:	and    DWORD PTR [ecx+0x70],0xdadde987
  41a5a1:	push   es
  41a5a2:	popa   
  41a5a3:	push   eax
  41a5a4:	push   edi
  41a5a5:	stos   DWORD PTR es:[edi],eax
  41a5a6:	retf   
  41a5a7:	mov    ebx,0xe72b5309
  41a5ac:	sahf   
  41a5ad:	loop   0x41a584
  41a5af:	dec    edi
  41a5b0:	adc    edx,DWORD PTR [ebx]
  41a5b2:	sbb    dl,BYTE PTR [ecx+edi*4+0x40]
  41a5b6:	enter  0xf99c,0x91
  41a5ba:	(bad)  
  41a5bb:	in     eax,dx
  41a5bc:	repz sbb eax,0x9c844c33
  41a5c2:	inc    ebp
  41a5c3:	cmp    BYTE PTR [edx+ecx*1+0x2216bb63],cl
  41a5ca:	je     0x41a594
  41a5cc:	(bad)  
  41a5cd:	daa    
  41a5ce:	cmp    DWORD PTR [esi+ebp*1],ebx
  41a5d1:	mov    edx,0x7e9eec02
  41a5d6:	sbb    ecx,DWORD PTR ss:[edi-0x1b]
  41a5da:	jae    0x41a60b
  41a5dc:	rol    DWORD PTR [ebx],1
  41a5de:	xchg   ebp,eax
  41a5df:	jmp    0x4103e5b1
  41a5e4:	sti    
  41a5e5:	mov    BYTE PTR [edx-0x2414717f],cl
  41a5eb:	stos   BYTE PTR es:[edi],al
  41a5ec:	push   edx
  41a5ed:	jae    0x41a5fe
  41a5ef:	mov    WORD PTR [ecx],cs
  41a5f1:	adc    BYTE PTR [esi-0x47],al
  41a5f4:	int    0x2f
  41a5f6:	hlt    
  41a5f7:	pop    ss
  41a5f8:	test   DWORD PTR [edx-0x297d5d52],ebx
  41a5fe:	cli    
  41a5ff:	push   ecx
  41a600:	add    eax,0x250432a2
  41a605:	std    
  41a606:	jecxz  0x41a61f
  41a608:	int3   
  41a609:	jl     0x41a593
  41a60b:	jecxz  0x41a643
  41a60d:	add    al,0x3f
  41a60f:	ins    DWORD PTR es:[edi],dx
  41a610:	dec    ebp
  41a611:	repnz cld 
  41a613:	xchg   edi,eax
  41a614:	mov    DWORD PTR ds:[edi+0x2a87c7c],0xcdfcd920
  41a61f:	aas    
  41a620:	loop   0x41a655
  41a622:	mov    BYTE PTR [esi+edi*1],al
  41a625:	leave  
  41a626:	fimul  DWORD PTR [ecx]
  41a628:	adc    esp,DWORD PTR [ebx]
  41a62a:	jg     0x41a627
  41a62c:	cmp    DWORD PTR [ecx-0x80],edx
  41a62f:	add    esp,DWORD PTR [edi+0x1d]
  41a632:	(bad)
  41a637:	xor    DWORD PTR [esi-0x4d],esi
  41a63a:	mov    al,0xc5
  41a63c:	dec    eax
  41a63d:	fwait
  41a63e:	add    ch,ah
  41a640:	or     BYTE PTR [edx],ch
  41a642:	xchg   ecx,eax
  41a643:	mov    cl,0xf3
  41a645:	cld    
  41a646:	pop    esp
  41a647:	jae    0x41a653
  41a649:	xchg   ebx,eax
  41a64a:	(bad)  
  41a64b:	jno    0x41a6bb
  41a64d:	pop    ebx
  41a64e:	or     dh,BYTE PTR [ecx-0x7a288876]
  41a654:	ficom  WORD PTR [esi-0x71e2cda7]
  41a65a:	adc    bl,BYTE PTR [esi+0x10]
  41a65d:	out    0xf0,al
  41a65f:	int3   
  41a660:	jge    0x41a627
  41a662:	outs   dx,BYTE PTR ds:[esi]
  41a663:	dec    ebp
  41a664:	push   edx
  41a665:	sub    eax,0x87c65c90
  41a66a:	pushf  
  41a66b:	mov    DWORD PTR [esp+edi*4],esp
  41a66e:	cdq    
  41a66f:	cmp    BYTE PTR [esi],bl
  41a671:	in     al,dx
  41a672:	aam    0xa9
  41a674:	js     0x41a689
  41a676:	dec    ebp
  41a677:	push   cs
  41a678:	mov    ecx,0x42504f33
  41a67d:	xchg   esi,eax
  41a67e:	cdq    
  41a67f:	loop   0x41a695
  41a681:	mov    WORD PTR [eax],?
  41a683:	lock inc esi
  41a685:	mov    ds:0xdbb27204,eax
  41a68a:	jmp    0x28236b05
  41a68f:	ficom  DWORD PTR [esi+0x1c]
  41a692:	push   esi
  41a693:	push   cs
  41a694:	mov    ds:0x7acb084b,eax
  41a699:	in     eax,dx
  41a69a:	push   ebx
  41a69b:	out    0x96,eax
  41a69d:	jno    0x41a6dd
  41a69f:	div    DWORD PTR [edx+0x78]
  41a6a2:	jle    0x41a6d2
  41a6a4:	nop
  41a6a5:	push   ebx
  41a6a6:	leave  
  41a6a7:	push   es
  41a6a8:	xor    al,0xd7
  41a6aa:	mov    ecx,0x6a24308
  41a6af:	scas   al,BYTE PTR es:[edi]
  41a6b0:	jp     0x41a709
  41a6b2:	and    cl,BYTE PTR [edx+esi*4+0x51]
  41a6b6:	push   0x615d902f
  41a6bb:	add    al,0xa6
  41a6bd:	test   DWORD PTR [edx+0x39],eax
  41a6c0:	mov    edx,0xcc90a891
  41a6c5:	mov    esi,DWORD PTR ds:0x893ae439
  41a6cb:	push   0x64
  41a6cd:	jns    0x41a719
  41a6cf:	mov    bh,0x52
  41a6d1:	mov    edx,0x7b64b77d
  41a6d6:	xchg   esi,eax
  41a6d7:	or     ebx,DWORD PTR [edx-0xd]
  41a6da:	xchg   edi,eax
  41a6db:	add    ch,BYTE PTR [eax-0xf1d4b6b]
  41a6e1:	cmp    al,0xe3
  41a6e3:	ror    DWORD PTR [edi],0x8c
  41a6e6:	stc    
  41a6e7:	push   0x233d12aa
  41a6ec:	or     BYTE PTR [edx+0x45],cl
  41a6ef:	int    0xf4
  41a6f1:	push   ecx
  41a6f2:	adc    DWORD PTR [edx-0x75f6016e],esp
  41a6f8:	sbb    ah,dh
  41a6fa:	jnp    0x41a71d
  41a6fc:	adc    BYTE PTR [eax+0x24],ch
  41a6ff:	and    dh,ah
  41a701:	stos   DWORD PTR es:[edi],eax
  41a702:	daa    
  41a703:	or     eax,0xbdfd3245
  41a708:	fidivr DWORD PTR [edi-0x1bc1da01]
  41a70e:	jecxz  0x41a6d3
  41a710:	inc    ebp
  41a711:	add    BYTE PTR [ebp+0x5e0f9fe7],cl
  41a717:	fstp   DWORD PTR [edi-0x531778f3]
  41a71d:	and    ecx,edx
  41a71f:	and    DWORD PTR [eax],ebx
  41a721:	cmp    DWORD PTR [esi-0x58],0x21f94b5c
  41a728:	jbe    0x41a78c
  41a72a:	push   ebx
  41a72b:	jecxz  0x41a789
  41a72d:	push   edx
  41a72e:	mov    BYTE PTR [esi],0xc
  41a731:	jl     0x41a6f0
  41a733:	cwde   
  41a734:	popa   
  41a735:	mov    al,ds:0x40c338cb
  41a73a:	pop    ss
  41a73b:	inc    BYTE PTR [ecx+eax*2]
  41a73e:	sahf   
  41a73f:	mov    esp,0x493c3021
  41a744:	(bad)  
  41a745:	(bad)  ds:0x21c6608c
  41a74b:	or     al,0x68
  41a74d:	xor    eax,0x712cf398
  41a752:	dec    esi
  41a753:	mov    edx,0xe54caae1
  41a758:	idiv   BYTE PTR [eax-0x24f22c74]
  41a75e:	mov    ecx,0x1011464e
  41a763:	out    dx,al
  41a764:	es xchg ebp,eax
  41a766:	push   ds
  41a767:	fsubr  DWORD PTR [ecx+eax*2]
  41a76a:	xor    edx,0xfe90bbe2
  41a770:	cmc    
  41a771:	push   edx
  41a772:	add    ch,bl
  41a774:	mov    edx,DWORD PTR [esi-0x3d]
  41a777:	xor    BYTE PTR [edx+0x468eeccb],bl
  41a77d:	iret   
  41a77e:	pushf  
  41a77f:	iret   
  41a780:	lods   eax,DWORD PTR ds:[esi]
  41a781:	jg     0x41a786
  41a783:	inc    edi
  41a784:	retf   
  41a785:	retf   
  41a786:	sbb    ah,BYTE PTR [esi+ecx*4-0x67]
  41a78a:	nop
  41a78b:	cmp    DWORD PTR [eax],ecx
  41a78d:	inc    ebp
  41a78e:	xor    al,0xb4
  41a790:	xor    eax,DWORD PTR [edi]
  41a792:	and    al,BYTE PTR [eax+0x31]
  41a795:	jae    0x41a728
  41a797:	dec    eax
  41a798:	adc    DWORD PTR [esi-0x7e],ecx
  41a79b:	repz pusha 
  41a79d:	ins    BYTE PTR es:[edi],dx
  41a79e:	in     al,0xc6
  41a7a0:	cmp    dh,BYTE PTR [eax-0x73]
  41a7a3:	loopne 0x41a736
  41a7a5:	sti    
  41a7a6:	or     esp,ebx
  41a7a8:	pop    cx
  41a7aa:	cs or  al,0x1
  41a7ad:	fwait
  41a7ae:	stos   DWORD PTR es:[edi],eax
  41a7af:	out    dx,eax
  41a7b0:	call   0x35c8:0xf25a2e0a
  41a7b7:	mov    esp,0x5e411a20
  41a7bc:	test   al,0x7c
  41a7be:	frstor [ebx+edi*2]
  41a7c1:	das    
  41a7c2:	ret    
  41a7c3:	clc    
  41a7c4:	test   DWORD PTR [edx-0x41facee4],esi
  41a7ca:	push   esi
  41a7cb:	push   cs
  41a7cc:	xchg   ecx,eax
  41a7cd:	mov    eax,ds:0x8987c88b
  41a7d2:	jno    0x41a837
  41a7d4:	push   ss
  41a7d5:	adc    al,0xf2
  41a7d7:	pop    eax
  41a7d8:	mov    edi,0x9512146c
  41a7dd:	jb     0x41a780
  41a7df:	loopne 0x41a828
  41a7e1:	push   eax
  41a7e2:	sub    BYTE PTR [ecx+0x58],al
  41a7e5:	(bad)  
  41a7e6:	loope  0x41a7a5
  41a7e8:	inc    edx
  41a7e9:	dec    ebp
  41a7ea:	xor    edi,DWORD PTR [edi+0x2480846f]
  41a7f0:	cmp    cl,cl
  41a7f2:	mov    edx,0x33ec22a7
  41a7f7:	sub    eax,0xb3eefc18
  41a7fc:	iret   
  41a7fd:	sbb    eax,0xac9fadfc
  41a802:	std    
  41a803:	xchg   ebx,eax
  41a804:	cmp    esp,esp
  41a806:	std    
  41a807:	aas    
  41a808:	ds mov ah,0x4c
  41a80b:	shl    BYTE PTR [edi],0x7f
  41a80e:	icebp  
  41a80f:	ror    DWORD PTR [ebx+0x3e37f1de],cl
  41a815:	jmp    0x41a864
  41a817:	cmp    BYTE PTR [eax+0x50],dl
  41a81a:	pusha  
  41a81b:	scas   eax,DWORD PTR es:[edi]
  41a81c:	push   0x426b4082
  41a821:	icebp  
  41a822:	call   0xc3a2bd02
  41a827:	and    al,0x6e
  41a829:	test   al,0xcb
  41a82b:	cmp    dl,dh
  41a82d:	dec    esp
  41a82e:	stc    
  41a82f:	sub    eax,0x8b82d360
  41a834:	(bad)  
  41a835:	or     al,0x18
  41a837:	or     al,0xf4
  41a839:	out    0x83,eax
  41a83b:	sbb    BYTE PTR [ebx-0x4],bl
  41a83e:	and    esp,esi
  41a840:	sub    eax,0xc83fa45a
  41a845:	arpl   WORD PTR [esi-0x473ca376],si
  41a84b:	jge    0x41a84d
  41a84d:	(bad)  
  41a84e:	into   
  41a84f:	adc    al,0xbf
  41a851:	test   ah,dl
  41a853:	add    ecx,DWORD PTR [eax]
  41a855:	inc    esp
  41a856:	test   ecx,0x78408851
  41a85c:	pop    ebx
  41a85d:	iret   
  41a85e:	mov    al,ds:0x5e2c3872
  41a863:	gs aaa 
  41a865:	je     0x41a8cf
  41a867:	arpl   dx,bx
  41a869:	out    0x3a,al
  41a86b:	test   eax,0x11e54332
  41a870:	or     cl,al
  41a872:	(bad)  
  41a874:	sub    eax,0x2b8eb172
  41a879:	inc    edi
  41a87a:	mov    bl,0xa
  41a87c:	push   ebx
  41a87d:	(bad)  
  41a87e:	in     al,0xb6
  41a880:	jbe    0x41a8cc
  41a882:	cs xor al,0x3c
  41a885:	fild   WORD PTR [eax+0x5d]
  41a888:	pushf  
  41a889:	icebp  
  41a88a:	cdq    
  41a88b:	xlat   BYTE PTR ds:[ebx]
  41a88c:	sti    
  41a88d:	scas   al,BYTE PTR es:[edi]
  41a88e:	xor    DWORD PTR [ebx+0x338b01dc],ebp
  41a894:	jle    0x41a847
  41a896:	out    dx,eax
  41a897:	ins    DWORD PTR es:[edi],dx
  41a898:	(bad)  
  41a899:	lahf   
  41a89a:	(bad)  
  41a89b:	mov    BYTE PTR [esi-0x49],dh
  41a89e:	adc    BYTE PTR [edx-0x1b],0xf3
  41a8a2:	in     al,dx
  41a8a3:	push   0x7e
  41a8a5:	pop    ss
  41a8a6:	adc    DWORD PTR ds:0xf333984e,esp
  41a8ac:	inc    eax
  41a8ad:	cmp    DWORD PTR [ecx+0x8],edx
  41a8b0:	int3   
  41a8b1:	mov    bl,0x94
  41a8b3:	mov    DWORD PTR [ebx+0x38e39e67],edi
  41a8b9:	dec    esp
  41a8ba:	jae    0x41a8fd
  41a8bc:	fwait
  41a8bd:	inc    edx
  41a8be:	sahf   
  41a8bf:	xchg   edx,eax
  41a8c0:	stos   DWORD PTR es:[edi],eax
  41a8c1:	repnz sti 
  41a8c3:	mov    DWORD PTR [eax-0x6c],eax
  41a8c6:	mov    ecx,0xfbf4142f
  41a8cb:	pop    ss
  41a8cc:	sbb    al,0xff
  41a8ce:	push   eax
  41a8cf:	lods   eax,DWORD PTR ds:[esi]
  41a8d0:	or     dl,ch
  41a8d2:	cmp    dl,BYTE PTR [esi-0x20]
  41a8d5:	stc    
  41a8d6:	sar    BYTE PTR [ebp-0x38],cl
  41a8d9:	adc    edx,ebx
  41a8db:	test   eax,0x2a0fde9
  41a8e0:	ret    
  41a8e1:	rcr    BYTE PTR [esi+0x5e81e8d1],1
  41a8e7:	das    
  41a8e8:	mov    ebx,0x1483bea6
  41a8ed:	add    DWORD PTR [edi],ebp
  41a8ef:	jne    0x41a901
  41a8f1:	mov    ds:0xf4ff410f,eax
  41a8f6:	bound  ebx,QWORD PTR [esp+ebx*1-0x1]
  41a8fa:	ds loopne 0x41a8d4
  41a8fd:	clc    
  41a8fe:	nop
  41a8ff:	mov    cs,WORD PTR [edi]
  41a901:	dec    ebp
  41a902:	add    BYTE PTR [ebx+ecx*8],dl
  41a905:	rcr    DWORD PTR [edi-0x654dcbd1],cl
  41a90b:	sbb    ecx,edx
  41a90d:	adc    eax,DWORD PTR [esi]
  41a90f:	push   edi
  41a910:	and    DWORD PTR [eax+0x7c],esp
  41a913:	add    edx,ecx
  41a915:	and    DWORD PTR [esi],edx
  41a917:	jmp    0x41a8a5
  41a919:	xor    edi,esp
  41a91b:	cli    
  41a91c:	mov    esi,0xf0854103
  41a921:	xor    edx,eax
  41a923:	inc    esp
  41a924:	int3   
  41a925:	push   es
  41a926:	arpl   bx,di
  41a928:	xchg   edi,eax
  41a929:	dec    ebx
  41a92a:	pop    eax
  41a92b:	clc    
  41a92c:	outs   dx,BYTE PTR ds:[esi]
  41a92d:	jmp    0x79977d65
  41a932:	ret    0x2d8
  41a935:	pop    ss
  41a936:	sti    
  41a937:	add    ebp,DWORD PTR [eax]
  41a939:	jnp    0x41a8d5
  41a93b:	shl    BYTE PTR [edi+ecx*4],0xdc
  41a93f:	xchg   BYTE PTR [esi-0x371b234e],al
  41a945:	xor    cl,BYTE PTR [ebp+0x20]
  41a948:	xchg   edx,eax
  41a949:	stos   BYTE PTR es:[edi],al
  41a94a:	sub    bl,BYTE PTR [esi]
  41a94c:	arpl   WORD PTR [ecx],bx
  41a94e:	mov    bl,0xad
  41a950:	add    al,0x76
  41a952:	dec    ebp
  41a953:	sbb    al,0x47
  41a955:	arpl   WORD PTR [ecx-0x6909b58d],cx
  41a95b:	retf   
  41a95c:	xchg   edx,eax
  41a95d:	sbb    al,0xd5
  41a95f:	mov    bh,dl
  41a961:	fbstp  TBYTE PTR [edx]
  41a963:	mov    edx,0x76c00144
  41a968:	sub    al,0xca
  41a96a:	enter  0xafa1,0x9b
  41a96e:	mov    eax,0x10b54c33
  41a973:	xchg   edx,eax
  41a974:	or     DWORD PTR ds:[edx-0x4186756a],edx
  41a97b:	sbb    ebp,DWORD PTR [ebx-0x6d9f18e9]
  41a981:	imul   eax,DWORD PTR [edx],0x9348e615
  41a987:	pushf  
  41a988:	popa   
  41a989:	push   eax
  41a98a:	cmp    DWORD PTR [esi+edx*1+0x848dfc7],esi
  41a991:	xchg   ecx,eax
  41a992:	pop    esp
  41a993:	push   0x8b8326b8
  41a998:	sub    ch,BYTE PTR [esp+esi*8]
  41a99b:	xchg   ebp,eax
  41a99c:	addr16 retf 0xcb7a
  41a9a0:	sbb    BYTE PTR [di],cl
  41a9a3:	out    dx,al
  41a9a4:	out    0x8e,eax
  41a9a6:	push   edi
  41a9a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9a8:	je     0x41a954
  41a9aa:	scas   eax,DWORD PTR es:[edi]
  41a9ab:	test   BYTE PTR [ebx+0x5],dh
  41a9ae:	adc    eax,0x72051cd9
  41a9b3:	inc    ecx
  41a9b4:	loopne 0x41a9cf
  41a9b6:	pop    edx
  41a9b7:	push   eax
  41a9b8:	xor    dl,dl
  41a9ba:	in     eax,dx
  41a9bb:	daa    
  41a9bc:	push   ebp
  41a9bd:	jns    0x41a9e1
  41a9bf:	xchg   ebp,eax
  41a9c0:	cmp    BYTE PTR [eax+0x65],ch
  41a9c3:	cwde   
  41a9c4:	(bad)  
  41a9c5:	inc    ecx
  41a9c6:	in     al,dx
  41a9c7:	jmp    0x88029a5e
  41a9cc:	ficomp DWORD PTR [eax+0x2389fad6]
  41a9d2:	adc    al,0x43
  41a9d4:	inc    edi
  41a9d5:	xor    BYTE PTR [esi+0x40],ah
  41a9d8:	pop    eax
  41a9d9:	jno    0x41a9c1
  41a9db:	push   edx
  41a9dc:	outs   dx,BYTE PTR ds:[esi]
  41a9dd:	data16 rcl BYTE PTR es:[edi],0x53
  41a9e2:	iret   
  41a9e3:	rcr    BYTE PTR [eax-0x78a4b95c],1
  41a9e9:	sub    esp,esp
  41a9eb:	mov    eax,ds:0xf9fe0552
  41a9f0:	test   BYTE PTR [edi-0x7ff5de0d],0xf
  41a9f7:	int    0x4
  41a9f9:	or     BYTE PTR [esi],al
  41a9fb:	pop    es
  41a9fc:	pop    edi
  41a9fd:	hlt    
  41a9fe:	mov    ds:0xd69bdad4,eax
  41aa03:	outs   dx,BYTE PTR ds:[esi]
  41aa04:	or     esi,DWORD PTR [eax-0x5b09db75]
  41aa0a:	mov    ebx,0x5e4da839
  41aa0f:	adc    DWORD PTR [ecx+0xbbfe7ec],ebp
  41aa15:	or     al,0x16
  41aa17:	cmp    BYTE PTR [ecx+0x13],ch
  41aa1a:	jb     0x41aa98
  41aa1c:	or     eax,0x7b5f22d5
  41aa21:	jns    0x41a9ae
  41aa23:	test   esp,ebx
  41aa25:	das    
  41aa26:	push   eax
  41aa27:	sub    ch,BYTE PTR [eax-0x17]
  41aa2a:	pop    ds
  41aa2b:	sbb    DWORD PTR [ebx+0x30],ebx
  41aa2e:	repnz mov ch,0x2f
  41aa31:	mov    al,ds:0x49dbd3d7
  41aa36:	mov    edi,esi
  41aa38:	ja     0x41aa22
  41aa3a:	cmp    BYTE PTR [esi+0x2178ff6c],bh
  41aa40:	mov    dl,ah
  41aa42:	fdivr  DWORD PTR [edi+0x8a5c1a2]
  41aa48:	lds    ecx,FWORD PTR [edi+ebx*2+0x324795ca]
  41aa4f:	call   0x9a8d6a24
  41aa54:	mov    al,0x40
  41aa56:	arpl   WORD PTR [ebx-0x5c],di
  41aa59:	mov    ecx,0x7cd92bcd
  41aa5e:	es popa 
  41aa60:	iret   
  41aa61:	xchg   bl,al
  41aa63:	add    al,0xd
  41aa65:	fsincos 
  41aa67:	xchg   edx,eax
  41aa68:	xor    eax,DWORD PTR [ecx-0x39125755]
  41aa6e:	xchg   ebp,eax
  41aa6f:	xchg   BYTE PTR [ecx],cl
  41aa71:	in     eax,dx
  41aa72:	mov    esi,0x4680c207
  41aa77:	sub    dl,bl
  41aa79:	sub    al,0xc4
  41aa7b:	sub    al,0x17
  41aa7d:	sub    BYTE PTR [eax+0x611b19a3],dl
  41aa83:	adc    al,bh
  41aa85:	out    dx,al
  41aa86:	clc    
  41aa87:	popa   
  41aa88:	in     al,dx
  41aa89:	ret    
  41aa8a:	pushf  
  41aa8b:	jmp    ebp
  41aa8d:	pop    esi
  41aa8e:	scas   al,BYTE PTR es:[edi]
  41aa8f:	sub    DWORD PTR [eax+0x5],esp
  41aa92:	pop    es
  41aa93:	mov    WORD PTR [edx],cs
  41aa95:	xchg   ecx,eax
  41aa96:	in     al,dx
  41aa97:	xchg   ebp,eax
  41aa98:	jne    0x41aa8d
  41aa9a:	repz repz pop esp
  41aa9d:	out    0xa6,eax
  41aa9f:	cmc    
  41aaa0:	test   eax,edi
  41aaa2:	push   cs
  41aaa3:	pop    edx
  41aaa4:	jb     0x41aaf6
  41aaa6:	mov    esi,DWORD PTR [edx+0x4]
  41aaa9:	mov    eax,?
  41aaab:	gs adc al,0x18
  41aaae:	mov    eax,ds:0xe46d846d
  41aab3:	jmp    0x41aaf2
  41aab5:	add    ebx,ecx
  41aab7:	add    eax,0x67517ff3
  41aabc:	or     BYTE PTR [esi-0x36],dl
  41aabf:	push   eax
  41aac0:	sbb    eax,0xa6d102d7
  41aac5:	add    ebx,edi
  41aac7:	pop    edx
  41aac8:	mov    ebx,0xb61a11fb
  41aacd:	xchg   edi,eax
  41aace:	lea    esp,[esi+0xf]
  41aad1:	or     eax,0xddef9a5d
  41aad6:	jns    0x41aa88
  41aad8:	jecxz  0x41aad1
  41aada:	repnz sub DWORD PTR [ecx-0x47673f7e],esi
  41aae1:	cdq    
  41aae2:	xor    DWORD PTR [ebx],eax
  41aae4:	mov    esp,0x723fa7f3
  41aae9:	bnd jmp 0x41aaeb
  41aaec:	gs xchg ecx,eax
  41aaee:	psubsw mm7,mm0
  41aaf1:	push   eax
  41aaf2:	add    al,0xc0
  41aaf4:	rcl    edi,0x7e
  41aaf7:	jbe    0x41aad5
  41aaf9:	aas    
  41aafa:	pop    ecx
  41aafb:	sti    
  41aafc:	mov    esp,0xc3acff84
  41ab01:	iret   
  41ab02:	js     0x41ab4e
  41ab04:	fld    QWORD PTR [ecx+edx*1+0x19e57959]
  41ab0b:	daa    
  41ab0c:	retf   0x132b
  41ab0f:	outs   dx,BYTE PTR ds:[esi]
  41ab10:	jecxz  0x41aaff
  41ab12:	add    dl,BYTE PTR [ebx-0x3]
  41ab15:	sbb    al,0xda
  41ab17:	pop    edx
  41ab18:	addr16 mov ds:0x8ed2,al
  41ab1c:	call   0x464a:0x793b4142
  41ab23:	add    BYTE PTR [ebx+ecx*1+0x85bebda],dl
  41ab2a:	dec    ebp
  41ab2b:	mov    WORD PTR [edi+0x61],ss
  41ab2e:	ins    DWORD PTR es:[edi],dx
  41ab2f:	jno    0x41ab01
  41ab31:	or     eax,0x3d5d8722
  41ab36:	cmp    edx,DWORD PTR es:[esp+ecx*2+0x79170a23]
  41ab3e:	dec    eax
  41ab3f:	clc    
  41ab40:	push   eax
  41ab41:	or     BYTE PTR [eax+0x20],bl
  41ab44:	jnp    0x41ab72
  41ab46:	or     eax,0xfa1e552a
  41ab4b:	push   ss
  41ab4c:	out    0x24,al
  41ab4e:	retf   
  41ab4f:	jecxz  0x41ab4f
  41ab51:	sahf   
  41ab52:	and    DWORD PTR [eax-0x535e31cc],ebx
  41ab58:	fwait
  41ab59:	cdq    
  41ab5a:	sbb    BYTE PTR [eax+0xe],bh
  41ab5d:	lods   al,BYTE PTR ds:[esi]
  41ab5e:	iret   
  41ab5f:	mov    WORD PTR [ebx+0x20cdcb30],?
  41ab65:	mov    bh,0xed
  41ab67:	mov    ch,0xf5
  41ab69:	jp     0x41abd2
  41ab6b:	cmp    ebx,esp
  41ab6d:	js     0x41ab53
  41ab6f:	int3   
  41ab70:	xchg   edx,eax
  41ab71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab72:	jns    0x41ab3c
  41ab74:	push   ebx
  41ab75:	(bad)  
  41ab76:	outs   dx,BYTE PTR ds:[esi]
  41ab77:	popf   
  41ab78:	jnp    0x41ab8c
  41ab7a:	repnz add al,0xb
  41ab7d:	out    dx,eax
  41ab7e:	fst    QWORD PTR [eax-0x58]
  41ab81:	mov    eax,esi
  41ab83:	xor    bl,BYTE PTR [edi+edi*4-0x21b247b]
  41ab8a:	mov    bl,0xdc
  41ab8c:	sub    esi,0xffffff86
  41ab8f:	jmp    0x17b861da
  41ab94:	pop    eax
  41ab95:	into   
  41ab96:	call   0x32bf9198
  41ab9b:	jecxz  0x41abb4
  41ab9d:	jns    0x41abd4
  41ab9f:	out    0x42,eax
  41aba1:	rol    BYTE PTR [edx-0x66],1
  41aba4:	xchg   ecx,eax
  41aba5:	inc    edi
  41aba6:	popa   
  41aba7:	or     al,0x7d
  41aba9:	sub    BYTE PTR [ebp+0x1e],cl
  41abac:	and    eax,DWORD PTR [edx+0x9ba340f]
  41abb2:	add    edx,DWORD PTR [ebx+0x409463e8]
  41abb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41abb9:	nop
  41abba:	aaa    
  41abbb:	sub    BYTE PTR [ecx],0x16
  41abbe:	xor    al,0x12
  41abc0:	test   al,0xd6
  41abc2:	jne    0x41ab96
  41abc4:	mov    ss,WORD PTR [edx+0x5a]
  41abc7:	adc    ecx,edi
  41abc9:	xchg   ecx,eax
  41abca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41abcb:	xor    eax,0xf54def0b
  41abd0:	test   eax,0x14dc6e8b
  41abd5:	outs   dx,BYTE PTR ds:[esi]
  41abd6:	sti    
  41abd7:	pop    esi
  41abd8:	and    ah,BYTE PTR [ecx+0x483be345]
  41abde:	imul   eax,esp,0x2f
  41abe1:	push   edx
  41abe2:	add    BYTE PTR [edi+0x780ee2f3],ch
  41abe8:	mov    bh,0xf9
  41abea:	nop
  41abeb:	mov    cs,WORD PTR [edi]
  41abed:	lds    eax,FWORD PTR [eax+ebx*1]
  41abf0:	ins    BYTE PTR es:[edi],dx
  41abf1:	(bad)  
  41abf2:	fimul  DWORD PTR [edi]
  41abf4:	push   esi
  41abf5:	imul   ecx,esi,0x2e3c8923
  41abfb:	lods   al,BYTE PTR ds:[esi]
  41abfc:	jae    0x41ac1e
  41abfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41abff:	jne    0x41aba1
  41ac01:	js     0x41abfc
  41ac03:	inc    esp
  41ac04:	retf   
  41ac05:	add    bl,BYTE PTR [eax-0x1e]
  41ac08:	push   ebx
  41ac09:	pop    edx
  41ac0a:	xor    BYTE PTR [eax+0x5a6c57d7],cl
  41ac10:	jo     0x41ab9a
  41ac12:	int3   
  41ac13:	sub    al,0x4e
  41ac15:	jns    0x41ac33
  41ac17:	mov    edx,0xe91810a7
  41ac1c:	or     ebx,eax
  41ac1e:	ss push ebx
  41ac20:	std    
  41ac21:	and    DWORD PTR [esi+0x13349c8f],esi
  41ac27:	adc    eax,0xd0325527
  41ac2c:	test   cl,ah
  41ac2e:	sbb    DWORD PTR [ebp+0x54],0x6349f049
  41ac35:	ins    BYTE PTR es:[edi],dx
  41ac36:	aas    
  41ac37:	add    bh,bl
  41ac39:	je     0x41abcd
  41ac3b:	shl    DWORD PTR [eax],0x8d
  41ac3e:	int    0x38
  41ac40:	retf   
  41ac41:	jb     0x41abe9
  41ac43:	adc    al,0x49
  41ac45:	and    DWORD PTR [edx+ebx*4+0x18],eax
  41ac49:	fld    DWORD PTR [ebp+0x36762385]
  41ac50:	cmp    DWORD PTR [ebp+esi*4+0x36ae88d9],esp
  41ac57:	jne    0x41ac8d
  41ac59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac5a:	fcom   st(6)
  41ac5c:	push   edx
  41ac5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac5e:	es jl  0x41ac4a
  41ac61:	push   0xfffffff5
  41ac63:	aam    0x8c
  41ac65:	cmp    eax,0x9b434749
  41ac6a:	sar    ah,cl
  41ac6c:	inc    esp
  41ac6d:	std    
  41ac6e:	les    ebp,FWORD PTR cs:[edx-0x72ea1ee9]
  41ac75:	cs pop edx
  41ac77:	dec    esp
  41ac78:	cmp    DWORD PTR [edi+ebx*4-0x1a],ecx
  41ac7c:	jbe    0x41ac30
  41ac7e:	adc    eax,0x6eac6686
  41ac83:	mov    DWORD PTR [edi-0x20c82433],esi
  41ac89:	stc    
  41ac8a:	fisubr WORD PTR [ebx]
  41ac8c:	lds    edx,FWORD PTR [esi+eiz*8+0x3e]
  41ac90:	test   eax,0xa81cbbe2
  41ac95:	and    ch,BYTE PTR [edi+eax*1-0x3a]
  41ac99:	in     al,0xc2
  41ac9b:	cmp    esi,0x4968d29e
  41aca1:	into   
  41aca2:	retf   
  41aca3:	xor    BYTE PTR ds:0x8543c83d,cl
  41aca9:	or     DWORD PTR [ecx-0xd73eaf4],0x9ff64c09
  41acb3:	out    dx,eax
  41acb4:	inc    ebx
  41acb5:	test   eax,0xe6485e46
  41acba:	in     eax,0xca
  41acbc:	imul   eax,DWORD PTR [esp+ebx*8],0x344cc238
  41acc3:	mov    ebx,0x9788e68d
  41acc8:	fbld   TBYTE PTR [eax]
  41acca:	push   esp
  41accb:	or     ecx,DWORD PTR [edx]
  41accd:	mov    dl,0x51
  41accf:	inc    ebp
  41acd0:	daa    
  41acd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41acd2:	sub    al,0xa
  41acd4:	xor    BYTE PTR [eax],0x51
  41acd7:	leave  
  41acd8:	leave  
  41acd9:	cmp    edi,DWORD PTR [edi+0x14]
  41acdc:	clc    
  41acdd:	ss pop ds
  41acdf:	ret    0xa1f1
  41ace2:	and    BYTE PTR [eax],al
  41ace4:	push   DWORD PTR [ebp+edi*8-0x35]
  41ace8:	pop    esi
  41ace9:	nop
  41acea:	mov    ?,WORD PTR [edx+edx*2]
  41aced:	push   esp
  41acee:	bound  ebx,QWORD PTR [eax-0x226cc9c5]
  41acf4:	pop    edi
  41acf5:	int    0xcb
  41acf7:	add    eax,0x40ccfd83
  41acfc:	sub    al,0x77
  41acfe:	adc    DWORD PTR [eax-0x1c],0x764d811d
  41ad05:	xchg   edi,eax
  41ad06:	or     dh,BYTE PTR [ebx+eiz*2]
  41ad09:	push   es
  41ad0a:	inc    ebp
  41ad0b:	popf   
  41ad0c:	adc    DWORD PTR [ebp-0x56],0x2c5004e7
  41ad13:	push   0x8191206d
  41ad18:	mov    dl,0x9
  41ad1a:	adc    DWORD PTR [edx],ecx
  41ad1c:	sbb    dl,BYTE PTR [eax]
  41ad1e:	ins    DWORD PTR es:[edi],dx
  41ad1f:	xor    ecx,DWORD PTR [eax+eiz*4-0x21]
  41ad23:	add    DWORD PTR [ecx+0xf],0xffffff9b
  41ad27:	sub    eax,0x26e6c0a7
  41ad2c:	dec    eax
  41ad2d:	pop    edi
  41ad2e:	cmp    DWORD PTR [ebx+0x5361eee7],ebx
  41ad34:	jl     0x41acdb
  41ad36:	mov    BYTE PTR [eax+ebx*1+0x48],al
  41ad3a:	mov    BYTE PTR [edx-0x64],al
  41ad3d:	jns    0x41acf5
  41ad3f:	das    
  41ad40:	mov    eax,ds:0xad854740
  41ad45:	sbb    BYTE PTR [esi+ebx*2-0x4869b6ff],dl
  41ad4c:	and    al,0x83
  41ad4e:	fsubr  QWORD PTR [ebx-0x66d1d0d3]
  41ad54:	ins    BYTE PTR es:[edi],dx
  41ad55:	xor    al,BYTE PTR [edi]
  41ad57:	nop
  41ad58:	imul   ebp,DWORD PTR [esi-0x25],0xffffff99
  41ad5c:	dec    eax
  41ad5d:	in     eax,0x85
  41ad5f:	dec    ecx
  41ad60:	fs cmp ebx,esi
  41ad63:	pop    ebx
  41ad64:	out    0x33,al
  41ad66:	xchg   edi,eax
  41ad67:	mov    ebx,0xd0564085
  41ad6c:	xchg   edx,eax
  41ad6d:	imul   edi,DWORD PTR [ebx],0x37
  41ad70:	dec    edx
  41ad71:	and    esi,DWORD PTR [ecx+0xf6c397f]
  41ad77:	add    al,0xa3
  41ad79:	xchg   ebp,eax
  41ad7a:	in     eax,dx
  41ad7b:	xchg   ecx,eax
  41ad7c:	in     eax,0xe6
  41ad7e:	or     ah,0x85
  41ad81:	(bad)  [eax-0x69bd8ecd]
  41ad87:	in     al,0x82
  41ad89:	les    ebp,FWORD PTR [ebp+0x6892900f]
  41ad8f:	in     eax,0x30
  41ad91:	push   ebp
  41ad92:	sub    BYTE PTR [esi+0x6cce8393],ah
  41ad98:	push   esp
  41ad99:	enter  0xbb30,0xd4
  41ad9d:	add    eax,0x5e98644
  41ada2:	cli    
  41ada3:	pop    ebx
  41ada4:	scas   eax,DWORD PTR es:[edi]
  41ada5:	mov    edi,0xafb0b09
  41adaa:	stos   BYTE PTR es:[edi],al
  41adab:	arpl   WORD PTR [esi-0x25],ax
  41adae:	sbb    ecx,DWORD PTR [ebp+0x2f]
  41adb1:	mov    DWORD PTR [eax-0x12],ebp
  41adb4:	and    DWORD PTR es:[eax-0x1a1cb98b],eax
  41adbb:	add    BYTE PTR [edx],0x1c
  41adbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41adbf:	xchg   ebp,eax
  41adc0:	cmp    edi,esp
  41adc2:	cdq    
  41adc3:	ja     0x41adda
  41adc5:	cmp    al,BYTE PTR [ecx+0x39]
  41adc8:	add    al,BYTE PTR [ebx-0x2a]
  41adcb:	cmp    al,0x2
  41adcd:	scas   eax,DWORD PTR es:[edi]
  41adce:	mov    cl,0xf1
  41add0:	and    ecx,DWORD PTR [ebp+0x43f0ff27]
  41add6:	loope  0x41ad9d
  41add8:	cldemote BYTE PTR [ecx]
  41addb:	sbb    al,0x3d
  41addd:	(bad)  
  41adde:	in     eax,dx
  41addf:	(bad)  
  41ade0:	cli    
  41ade1:	jg     0x41addf
  41ade3:	dec    ebx
  41ade4:	aas    
  41ade5:	jmp    0x45da:0x3e2c0f19
  41adec:	or     eax,0x275b2716
  41adf1:	xchg   edi,eax
  41adf2:	adc    BYTE PTR [eax+0x2],ah
  41adf5:	sub    dh,BYTE PTR [esp+ecx*8]
  41adf8:	addr16 mov ah,0xa8
  41adfb:	jl     0x41ae0c
  41adfd:	push   es
  41adfe:	add    bh,BYTE PTR [edx]
  41ae00:	(bad)  
  41ae02:	push   ebp
  41ae03:	outs   dx,DWORD PTR ds:[esi]
  41ae04:	mov    dh,0x1c
  41ae06:	or     cl,BYTE PTR [eax+0x200d90aa]
  41ae0c:	out    dx,al
  41ae0d:	inc    ecx
  41ae0e:	xchg   ecx,eax
  41ae0f:	cmp    al,0x8f
  41ae11:	cmp    ecx,DWORD PTR [esi+0x75]
  41ae14:	inc    ebx
  41ae15:	or     ebx,edi
  41ae17:	clc    
  41ae18:	add    BYTE PTR [edx],dh
  41ae1a:	repnz retf 0xb93a
  41ae1e:	in     eax,0x20
  41ae20:	push   es
  41ae21:	aas    
  41ae22:	add    DWORD PTR [ebp+0x0],edx
  41ae25:	dec    esp
  41ae26:	pop    edx
  41ae27:	test   al,0x34
  41ae29:	mov    DWORD PTR [eax-0x3f589bc4],0xe48f86e6
  41ae33:	das    
  41ae34:	fs jns 0x41ade5
  41ae37:	ror    DWORD PTR [eax+0x45],0x63
  41ae3b:	call   0xde99:0xcb24d743
  41ae42:	in     eax,dx
  41ae43:	mov    ebx,DWORD PTR [eax]
  41ae45:	sbb    ch,ch
  41ae47:	sub    eax,0x9b485e9b
  41ae4c:	xor    DWORD PTR [ecx-0x2fd8a351],edi
  41ae52:	cld    
  41ae53:	aad    0x86
  41ae55:	sbb    DWORD PTR [edx+0x6604460e],eax
  41ae5b:	xchg   ch,ch
  41ae5d:	pop    esi
  41ae5e:	add    ebx,eax
  41ae60:	push   ss
  41ae61:	pushw  ss
  41ae63:	cmp    eax,ecx
  41ae65:	cmp    eax,0x1cb505c8
  41ae6a:	and    dl,BYTE PTR [esp+edx*4+0x3b]
  41ae6e:	leave  
  41ae6f:	retf   0xdf39
  41ae72:	retf   
  41ae73:	cmp    eax,0x873192f4
  41ae78:	inc    ecx
  41ae79:	jne    0x41ae51
  41ae7b:	jl     0x41aeed
  41ae7d:	mov    BYTE PTR [ecx],0xd8
  41ae80:	mov    ds:0x7d08df2c,al
  41ae85:	jmp    0x41ae68
  41ae87:	ja     0x41ae57
  41ae89:	repz pushf 
  41ae8b:	jne    0x41ae84
  41ae8d:	xchg   ebp,eax
  41ae8e:	scas   al,BYTE PTR es:[edi]
  41ae8f:	mov    cl,0x17
  41ae91:	and    DWORD PTR [ebx-0x33],0xe8979500
  41ae98:	mov    ds:0x6509fa9c,al
  41ae9d:	mov    dl,0x40
  41ae9f:	jge    0x41af0e
  41aea1:	repz dec ebx
  41aea3:	push   ecx
  41aea4:	dec    edi
  41aea5:	push   eax
  41aea6:	sub    BYTE PTR [eax-0x3e],0x30
  41aeaa:	mov    bl,0x11
  41aeac:	add    ch,BYTE PTR [esi-0x62]
  41aeaf:	mov    DWORD PTR [eax-0x78ef9aac],esp
  41aeb5:	inc    ebp
  41aeb6:	push   ebp
  41aeb7:	jle    0x41af27
  41aeb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aeba:	mov    ecx,0x545dd5a
  41aebf:	sub    BYTE PTR [edi],al
  41aec1:	dec    ebp
  41aec2:	mov    ebp,0x11524822
  41aec7:	add    bh,ah
  41aec9:	movsx  ebp,WORD PTR [edi]
  41aecc:	sbb    DWORD PTR [esi+edx*2],esi
  41aecf:	and    DWORD PTR [edi+0x7c7c07c],0x7786002e
  41aed9:	inc    esi
  41aedb:	daa    
  41aedc:	mov    ecx,ecx
  41aede:	shl    DWORD PTR [ebp+0x55],0x74
  41aee2:	cwde   
  41aee3:	inc    ebx
  41aee4:	push   ss
  41aee5:	pop    ecx
  41aee6:	sbb    BYTE PTR [edi-0x60],dl
  41aee9:	ins    DWORD PTR es:[edi],dx
  41aeea:	dec    esp
  41aeeb:	fisub  WORD PTR [eax+0x42]
  41aeee:	push   ss
  41aeef:	(bad)  
  41aef0:	int    0xa8
  41aef2:	add    cl,BYTE PTR [ebx+0x48c4d202]
  41aef8:	ins    DWORD PTR es:[edi],dx
  41aef9:	jae    0x41af2a
  41aefb:	sub    ebx,DWORD PTR [ecx+0x21021c9d]
  41af01:	loop   0x41aec5
  41af03:	add    al,0x64
  41af05:	xchg   DWORD PTR [edx-0x4d],ebx
  41af08:	clc    
  41af09:	xchg   edx,eax
  41af0a:	in     eax,dx
  41af0b:	xchg   ebp,eax
  41af0c:	push   0xffffffad
  41af0e:	xor    BYTE PTR [eax],bl
  41af10:	ret    0x70d0
  41af13:	arpl   WORD PTR [edx+ebx*2-0x71],bp
  41af17:	mov    esi,esi
  41af19:	adc    eax,0xe81c3a6d
  41af1e:	mov    cl,0xf9
  41af20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af21:	dec    eax
  41af22:	and    al,0xf3
  41af24:	hlt    
  41af25:	(bad)  
  41af26:	clc    
  41af27:	push   es
  41af28:	in     al,dx
  41af29:	jnp    0x41af54
  41af2b:	in     al,dx
  41af2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af2d:	xchg   ebx,eax
  41af2e:	ss dec esp
  41af30:	out    0xcc,eax
  41af32:	test   DWORD PTR [ebp+0x6b],ebp
  41af35:	outs   dx,BYTE PTR ds:[esi]
  41af36:	int3   
  41af37:	add    dl,BYTE PTR [edi+0xb]
  41af3a:	dec    ebx
  41af3b:	add    ecx,DWORD PTR [ebx-0x65]
  41af3e:	cmp    DWORD PTR [edi+0x7cb399a3],eax
  41af44:	ds in  al,0x59
  41af47:	adc    ah,BYTE PTR [ebp-0x6f241870]
  41af4d:	lahf   
  41af4e:	inc    ecx
  41af4f:	and    eax,0xdac0422
  41af54:	in     eax,dx
  41af55:	cwde   
  41af56:	cmp    DWORD PTR [ebx],esp
  41af58:	push   cs
  41af59:	sub    al,0x99
  41af5b:	imul   eax,DWORD PTR [edi+0x1f],0xffffffa5
  41af5f:	ret    0x8e94
  41af62:	xor    BYTE PTR [ecx+ebp*4-0x69f39944],dh
  41af69:	sub    DWORD PTR [ebx+eiz*4],ecx
  41af6c:	mov    eax,0x957b309a
  41af71:	clc    
  41af72:	leave  
  41af73:	mov    ds:0x2db1f20c,eax
  41af78:	inc    esp
  41af79:	adc    ah,BYTE PTR [esi]
  41af7b:	retf   0x531c
  41af7e:	ror    DWORD PTR [ebp+ecx*2-0x75dd21e8],0x2c
  41af86:	xlat   BYTE PTR ds:[ebx]
  41af87:	enter  0x4f32,0x12
  41af8b:	push   ecx
  41af8c:	jno    0x41b009
  41af8e:	icebp  
  41af8f:	mov    DWORD PTR [ecx],ebp
  41af91:	es inc ebp
  41af93:	popa   
  41af94:	(bad)
  41af97:	pop    es
  41af98:	imul   esi,DWORD PTR [eax+edi*2-0xaf4a19f],0xd127c491
  41afa3:	out    0xf2,al
  41afa5:	or     al,0x11
  41afa7:	scas   al,BYTE PTR es:[edi]
  41afa8:	inc    esi
  41afa9:	sub    BYTE PTR [ebx+0x3b],bl
  41afac:	pop    edi
  41afad:	pop    esi
  41afae:	dec    ebp
  41afaf:	adc    BYTE PTR [esp+ebx*2+0x7815ce6b],ch
  41afb6:	xor    ah,BYTE PTR [edx-0x5afaa374]
  41afbc:	shl    bl,0xe2
  41afbf:	push   0xfcbfadf8
  41afc4:	gs loopne 0x41b046
  41afc7:	loop   0x41afcc
  41afc9:	ds ds jo 0x41afce
  41afcd:	mov    al,ds:0x18bed78e
  41afd2:	clc    
  41afd3:	mov    DWORD PTR [esi+0x56],esp
  41afd6:	rcl    BYTE PTR [ebx-0x136cc61b],1
  41afdc:	cmp    BYTE PTR [ecx-0x14],bl
  41afdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41afe0:	lahf   
  41afe1:	sub    ah,BYTE PTR [edi]
  41afe3:	push   0x65
  41afe5:	and    al,0xea
  41afe7:	dec    eax
  41afe8:	(bad)  
  41afe9:	pusha  
  41afea:	aas    
  41afeb:	xlat   BYTE PTR ds:[ebx]
  41afec:	push   edx
  41afed:	(bad)  
  41afee:	out    dx,al
  41afef:	xor    al,0xc2
  41aff1:	ret    0x244d
  41aff4:	rol    DWORD PTR [ebx],1
  41aff6:	rol    BYTE PTR [edx-0x4f3c55de],1
  41affc:	add    DWORD PTR [ecx-0x60],ebx
  41afff:	sbb    eax,DWORD PTR [esi+edx*1+0x140e640c]
  41b006:	and    al,0xa6
  41b008:	fcmovne st,st(5)
  41b00a:	shl    BYTE PTR [ebx],0x9a
  41b00d:	jne    0x41aff7
  41b00f:	inc    eax
  41b010:	imul   ecx,DWORD PTR [eax+edx*4-0x45bf7dcf],0x601e78e2
  41b01b:	pop    edx
  41b01c:	inc    ebx
  41b01d:	inc    ebp
  41b01e:	xchg   ecx,eax
  41b01f:	adc    edx,DWORD PTR [esi+0x73]
  41b022:	xor    al,0x93
  41b024:	fwait
  41b025:	add    BYTE PTR [ebx-0x13],ah
  41b028:	push   0x2fe1abf3
  41b02d:	jl     0x41afe3
  41b02f:	mov    ecx,0x66e5f421
  41b034:	mov    ecx,0x32d84309
  41b039:	pop    edx
  41b03a:	repz sahf 
  41b03c:	sub    DWORD PTR [edx-0x4d],ebx
  41b03f:	mov    edx,0xa7b946e1
  41b044:	mov    ebx,0x2fa49635
  41b049:	sub    ebx,DWORD PTR [eax]
  41b04b:	icebp  
  41b04c:	mov    eax,ds:0x68ac108c
  41b051:	cmp    eax,0xe22ef0d1
  41b056:	xor    ah,BYTE PTR [ebx+0x72]
  41b059:	ret    
  41b05a:	jns    0x41b03e
  41b05c:	add    esi,DWORD PTR [ecx-0x33]
  41b05f:	add    eax,0x4c964fc8
  41b064:	dec    edx
  41b065:	jmp    0x41b036
  41b067:	leave  
  41b068:	hlt    
  41b069:	sbb    BYTE PTR [esi-0x7c],al
  41b06c:	pop    DWORD PTR [ebx+0x4e984da]
  41b072:	popa   
  41b073:	fmul   st,st(0)
  41b075:	dec    eax
  41b076:	xchg   esi,eax
  41b077:	mov    edi,0x14221c8b
  41b07c:	sub    eax,0xb19a5412
  41b081:	arpl   di,sp
  41b083:	pop    edx
  41b084:	iret   
  41b085:	xor    ebx,DWORD PTR [ebx+0x7e]
  41b088:	xchg   ebx,eax
  41b089:	pop    ss
  41b08a:	stc    
  41b08b:	adc    al,0x8c
  41b08d:	push   edi
  41b08e:	fild   QWORD PTR [ebx]
  41b090:	inc    edx
  41b091:	pop    eax
  41b092:	xlat   BYTE PTR ds:[ebx]
  41b093:	int3   
  41b094:	das    
  41b095:	adc    ebx,DWORD PTR [esi-0x5a38193b]
  41b09b:	sbb    DWORD PTR [ecx-0x6a],edi
  41b09e:	mov    DWORD PTR [edx],ecx
  41b0a0:	pop    eax
  41b0a1:	ror    BYTE PTR [ebx-0x4f],cl
  41b0a4:	push   ebp
  41b0a5:	xor    DWORD PTR [esi],0xac98effe
  41b0ab:	xor    ah,BYTE PTR [esi]
  41b0ad:	and    eax,0x5cf9c288
  41b0b2:	out    0x2b,al
  41b0b4:	inc    ebx
  41b0b5:	pop    ebp
  41b0b7:	push   edi
  41b0b8:	icebp  
  41b0b9:	(bad)  
  41b0ba:	repnz and DWORD PTR [eax],ecx
  41b0bd:	add    ch,dh
  41b0bf:	dec    edi
  41b0c0:	aas    
  41b0c1:	in     eax,0x7b
  41b0c3:	ja     0x41b131
  41b0c5:	std    
  41b0c6:	lods   eax,DWORD PTR ds:[esi]
  41b0c7:	jg     0x41b096
  41b0c9:	(bad)  
  41b0ca:	ss push ecx
  41b0cd:	outs   dx,DWORD PTR ds:[esi]
  41b0ce:	push   ebp
  41b0cf:	mov    ds:0xd0aa4fdd,al
  41b0d4:	jns    0x41b08e
  41b0d6:	add    al,0xcc
  41b0d8:	inc    ebp
  41b0d9:	mov    bl,0x39
  41b0db:	pop    edx
  41b0dc:	push   esp
  41b0dd:	sbb    dh,al
  41b0df:	(bad)  
  41b0e0:	std    
  41b0e1:	mov    dl,BYTE PTR [edi-0x687f4128]
  41b0e7:	jmp    FWORD PTR [esi+0x35]
  41b0ea:	(bad)  
  41b0eb:	jecxz  0x41b138
  41b0ed:	adc    BYTE PTR [eax],cl
  41b0ef:	daa    
  41b0f0:	add    ah,BYTE PTR ds:0x76c79bed
  41b0f6:	and    ebp,ebp
  41b0f8:	in     al,0xcf
  41b0fa:	mov    ch,0x61
  41b0fc:	scas   al,BYTE PTR es:[edi]
  41b0fd:	inc    esp
  41b0fe:	(bad)  
  41b100:	jno    0x41b0ac
  41b102:	adc    DWORD PTR [ecx-0x6b6f59cc],eax
  41b108:	rcr    al,cl
  41b10a:	xor    BYTE PTR [esi+0x7fb6cf8c],dh
  41b110:	repnz dec esp
  41b112:	xchg   BYTE PTR [eax+0x27246d31],bl
  41b118:	and    BYTE PTR [eax],cl
  41b11a:	int3   
  41b11b:	xor    eax,0x18689d92
  41b120:	ins    DWORD PTR es:[edi],dx
  41b121:	add    al,0x15
  41b123:	js     0x41b0bf
  41b125:	mov    BYTE PTR [edx-0x25c58942],dl
  41b12b:	fadd   QWORD PTR [eax]
  41b12d:	sbb    BYTE PTR [ecx],cl
  41b12f:	ret    
  41b130:	(bad)  
  41b132:	xchg   DWORD PTR [eax+0x16cc4c6b],edx
  41b138:	xlat   BYTE PTR ds:[ebx]
  41b139:	xchg   BYTE PTR [ecx-0x6522595c],cl
  41b13f:	add    ch,BYTE PTR [esi+0x388c5206]
  41b145:	test   al,0x5c
  41b147:	addr16 pusha 
  41b149:	xchg   esi,eax
  41b14a:	jmp    0x30d38863
  41b14f:	call   0x8113:0xf6ae9cd1
  41b156:	and    ebx,esi
  41b158:	imul   ecx,ebp,0x32d7a532
  41b15e:	xor    edx,DWORD PTR [eax+0x4213a25f]
  41b164:	hlt    
  41b165:	dec    ecx
  41b166:	in     al,dx
  41b167:	cwde   
  41b168:	sbb    esp,esp
  41b16a:	div    DWORD PTR [ecx+0x79f2751e]
  41b170:	int3   
  41b171:	enter  0x8251,0xa4
  41b175:	adc    cl,BYTE PTR [ebx+0x33]
  41b178:	adc    al,0x45
  41b17a:	mov    ?,WORD PTR [esp+edx*1-0x47]
  41b17e:	mov    ebx,db1
  41b181:	jb     0x41b1e2
  41b183:	mov    WORD PTR [edi+eiz*8+0x523f45b6],?
  41b18a:	das    
  41b18b:	push   ecx
  41b18c:	shl    BYTE PTR [ecx+0x7c],1
  41b18f:	mov    edi,0xdb595e0c
  41b194:	std    
  41b195:	pop    ecx
  41b196:	stos   BYTE PTR es:[edi],al
  41b197:	(bad)  
  41b198:	mov    WORD PTR [esi+esi*1+0x63],gs
  41b19c:	call   0xff6877e6
  41b1a1:	mov    ecx,0x34accfed
  41b1a6:	jl     0x41b16d
  41b1a8:	pop    es
  41b1a9:	mov    al,ds:0xf200bf1c
  41b1ae:	mov    bh,0x9
  41b1b0:	ins    DWORD PTR es:[edi],dx
  41b1b1:	fld    TBYTE PTR [eax+0x343d2894]
  41b1b7:	popf   
  41b1b8:	or     DWORD PTR fs:[ebx+edi*4],ecx
  41b1bc:	push   ecx
  41b1bd:	xor    edi,esi
  41b1bf:	enter  0xdf4f,0xaa
  41b1c3:	jmp    DWORD PTR [ecx+0x7c3b73f]
  41b1c9:	js     0x41b247
  41b1cb:	mov    al,ds:0x4d2fc008
  41b1d0:	fisttp WORD PTR [esi]
  41b1d2:	xchg   ebx,eax
  41b1d3:	mov    ds:0x2c05798f,eax
  41b1d8:	mov    ah,0x1a
  41b1da:	jmp    0x79e0ddd7
  41b1df:	fcom   DWORD PTR [edi*1+0x28b2f04b]
  41b1e6:	cdq    
  41b1e7:	xchg   BYTE PTR [ebp-0x6e],ch
  41b1ea:	mov    ebp,0x66043996
  41b1ef:	and    eax,DWORD PTR [edx+esi*4]
  41b1f2:	sub    BYTE PTR [esi-0x3ba6dbdf],al
  41b1f8:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41b1fa:	or     al,0xb5
  41b1fc:	xchg   esp,eax
  41b1fd:	test   DWORD PTR [ebx],0x7b4852a0
  41b203:	jp     0x41b196
  41b205:	mov    dl,0x4c
  41b207:	dec    edi
  41b208:	dec    eax
  41b209:	call   0xff72:0x4e20d368
  41b210:	inc    eax
  41b211:	jmp    0x9520:0x8868043b
  41b218:	lods   al,BYTE PTR ds:[esi]
  41b219:	mov    bh,0xc
  41b21b:	fwait
  41b21c:	loope  0x41b243
  41b21e:	cmp    edx,ebp
  41b220:	js     0x41b208
  41b222:	pop    ecx
  41b223:	dec    ecx
  41b224:	mov    bl,ch
  41b226:	xor    al,0xd2
  41b228:	repz (bad) 
  41b22a:	leave  
  41b22b:	pusha  
  41b22c:	mov    ah,0x96
  41b22e:	mov    al,ds:0xf4cc8019
  41b233:	ret    0x31c7
  41b236:	aaa    
  41b237:	test   BYTE PTR [ecx],ah
  41b239:	les    esp,FWORD PTR [ebx+0x3b5e4e0f]
  41b23f:	in     al,0x8
  41b241:	and    cl,bl
  41b243:	push   ebx
  41b244:	test   DWORD PTR [ebp-0x4606aaea],ebp
  41b24a:	push   ds
  41b24b:	mov    ecx,0x34cb20ef
  41b250:	retf   0x6389
  41b253:	lods   al,BYTE PTR ds:[esi]
  41b254:	pusha  
  41b255:	adc    BYTE PTR [esi-0x31],al
  41b258:	enter  0xdf99,0xe6
  41b25c:	xor    al,0x18
  41b25e:	out    0x12,al
  41b260:	fcmove st,st(5)
  41b263:	push   cs
  41b264:	mov    ah,0xc9
  41b266:	inc    edx
  41b267:	cdq    
  41b268:	inc    ecx
  41b269:	xor    BYTE PTR [esi-0x1d38ecc0],cl
  41b26f:	dec    eax
  41b270:	loop   0x41b2c1
  41b272:	mov    esi,0x58d7944
  41b277:	pop    edx
  41b278:	xor    dh,al
  41b27a:	es out 0xc2,eax
  41b27d:	inc    esi
  41b27e:	dec    ebx
  41b27f:	enter  0x9bd1,0xf8
  41b283:	popa   
  41b284:	fadd   QWORD PTR [edx-0x67e416e1]
  41b28a:	sub    ebx,edx
  41b28c:	(bad)  
  41b28d:	pop    ds
  41b28e:	ins    BYTE PTR es:[edi],dx
  41b28f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b290:	push   ds
  41b291:	cdq    
  41b292:	pop    esi
  41b293:	push   edi
  41b294:	leave  
  41b295:	call   0xe58408e
  41b29a:	stos   DWORD PTR es:[edi],eax
  41b29b:	mov    gs,WORD PTR es:[edi-0x56]
  41b29f:	cmc    
  41b2a0:	adc    BYTE PTR [ecx+ebp*2+0x13fd6606],al
  41b2a7:	data16 outs dx,BYTE PTR ds:[esi]
  41b2a9:	add    eax,0xda4388ad
  41b2ae:	mov    esi,0xc748abc7
  41b2b3:	int3   
  41b2b4:	xchg   DWORD PTR [ebx],ebp
  41b2b6:	sbb    BYTE PTR [esi+0x72],al
  41b2b9:	push   edi
  41b2ba:	xchg   edx,eax
  41b2bb:	pop    esp
  41b2bc:	js     0x41b276
  41b2be:	mov    cl,BYTE PTR [ebp+eax*1+0x58]
  41b2c2:	pop    edi
  41b2c3:	or     bh,0x70
  41b2c6:	sub    al,0xe9
  41b2c8:	lds    edi,FWORD PTR [edi]
  41b2ca:	or     al,0xfc
  41b2cc:	sbb    al,0x1f
  41b2ce:	loopne 0x41b2c1
  41b2d0:	or     DWORD PTR [edx],0xf9d06080
  41b2d6:	bound  esp,QWORD PTR [eax-0x6c3a3f1e]
  41b2dc:	and    dl,BYTE PTR [ecx]
  41b2de:	fstp   QWORD PTR ds:0x1cfdc7d
  41b2e4:	sbb    ecx,DWORD PTR [edi]
  41b2e6:	push   ss
  41b2e7:	xor    BYTE PTR [ebp-0x556eda5f],0xca
  41b2ee:	mov    ecx,0x66982bc7
  41b2f3:	inc    esp
  41b2f4:	pop    edx
  41b2f5:	arpl   WORD PTR [esi+0x77],di
  41b2f8:	mov    ebp,0x122691b2
  41b2fd:	or     al,0xf4
  41b2ff:	rcr    DWORD PTR [esi-0x1e07a2c8],cl
  41b305:	cdq    
  41b306:	xor    BYTE PTR [ecx-0x6e],dl
  41b309:	in     al,0x1a
  41b30b:	sub    bl,cl
  41b30d:	dec    esp
  41b30e:	bound  ecx,QWORD PTR [edi-0x5a]
  41b311:	aaa    
  41b312:	mov    bl,0x90
  41b314:	pop    esi
  41b315:	jae    0x41b375
  41b317:	cli    
  41b318:	retf   0x3218
  41b31b:	dec    ebp
  41b31c:	mov    al,ds:0x1966119e
  41b321:	sbb    ch,BYTE PTR [esi]
  41b323:	mov    DWORD PTR [ebx+0x2308011c],0x5b07425b
  41b32d:	inc    eax
  41b32e:	and    al,0x71
  41b330:	jnp    0x41b323
  41b332:	psubusb mm3,QWORD PTR [edi+edi*2]
  41b336:	adc    DWORD PTR [edx-0xd93a19a],edx
  41b33c:	mov    ?,WORD PTR [edx+edi*4+0x166a43ca]
  41b343:	icebp  
  41b344:	fs stc 
  41b346:	cmp    eax,0x7215236d
  41b34b:	in     al,0x12
  41b34d:	daa    
  41b34e:	call   0xedd5:0x64dd5e89
  41b355:	popf   
  41b356:	sub    cl,ch
  41b358:	mov    edx,0xc9a46299
  41b35d:	test   eax,0xaaf4609b
  41b362:	and    BYTE PTR [edi+0x11],dh
  41b365:	sbb    DWORD PTR [ecx-0x62],ebx
  41b368:	cs popf 
  41b36a:	cmp    cl,BYTE PTR [eax-0xcc3fad1]
  41b370:	mov    bh,0x15
  41b372:	out    0xf2,al
  41b374:	ins    BYTE PTR es:[edi],dx
  41b375:	xchg   ebp,eax
  41b376:	mov    ds:0xcc84651e,eax
  41b37b:	ror    ah,1
  41b37d:	push   edi
  41b37e:	mov    cl,BYTE PTR [esi-0x62e24724]
  41b384:	jge    0x41b32b
  41b386:	xlat   BYTE PTR ds:[ebx]
  41b387:	or     eax,0x26fb9cf4
  41b38c:	push   edx
  41b38d:	in     al,0x47
  41b38f:	adc    BYTE PTR [ecx+ebx*1+0x27921c6d],cl
  41b396:	icebp  
  41b397:	fs into 
  41b399:	clc    
  41b39a:	or     al,0x93
  41b39c:	cli    
  41b39d:	inc    edx
  41b39e:	pop    edi
  41b39f:	xchg   cl,ah
  41b3a1:	pop    ebp
  41b3a2:	enter  0x6b2e,0x26
  41b3a6:	mov    ds,WORD PTR [edi-0x1b]
  41b3a9:	jl     0x41b3b9
  41b3ab:	fcomp  DWORD PTR [esp+edx*4]
  41b3ae:	adc    edx,ebx
  41b3b0:	jmp    DWORD PTR ss:[edi-0x72]
  41b3b4:	bound  esi,QWORD PTR [edx+0x13]
  41b3b7:	fild   QWORD PTR [esp+eax*4+0x2b]
  41b3bb:	int3   
  41b3bc:	loopne 0x41b3b2
  41b3be:	popf   
  41b3bf:	das    
  41b3c0:	repnz pop es
  41b3c2:	push   ebp
  41b3c3:	add    ah,ch
  41b3c5:	std    
  41b3c6:	jmp    0xf3ff:0xc3d4a17f
  41b3cd:	dec    ebx
  41b3ce:	pop    esi
  41b3cf:	xor    DWORD PTR [ebx-0x1564e172],esi
  41b3d5:	dec    ebx
  41b3d6:	push   cs
  41b3d7:	xchg   DWORD PTR [ecx+esi*8+0x2d],esp
  41b3db:	pushf  
  41b3dc:	xor    al,0x5f
  41b3de:	dec    edx
  41b3df:	sahf   
  41b3e0:	mov    eax,0x342aa65b
  41b3e5:	out    0x6a,eax
  41b3e7:	adc    al,BYTE PTR [ecx+0xc]
  41b3ea:	and    ecx,DWORD PTR [edi+ebp*1-0x2e]
  41b3ee:	pop    ecx
  41b3ef:	sbb    BYTE PTR [edi-0x60],bl
  41b3f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3f3:	and    DWORD PTR [esi-0x73dbfad4],ecx
  41b3f9:	addr16 mov ah,0xba
  41b3fc:	push   edx
  41b3fd:	call   0xa48:0xee61d330
  41b404:	dec    ebp
  41b405:	push   esp
  41b406:	inc    eax
  41b407:	adc    dh,BYTE PTR [ecx-0x3c]
  41b40a:	push   edi
  41b40b:	mov    al,ds:0x110d4832
  41b410:	fcmove st,st(6)
  41b412:	mov    ah,0x82
  41b414:	adc    al,0x18
  41b416:	std    
  41b417:	fcmovnb st,st(2)
  41b419:	pop    ebp
  41b41a:	xor    edi,DWORD PTR [eax-0x35]
  41b41d:	addr16 dec edx
  41b41f:	fld    TBYTE PTR [edx+0x75cbb198]
  41b425:	ret    0x244
  41b428:	fstp   QWORD PTR ds:0xae88
  41b42d:	push   esi
  41b42e:	adc    DWORD PTR [edx],eax
  41b430:	push   ebx
  41b431:	pusha  
  41b432:	fwait
  41b433:	push   edx
  41b434:	mov    bh,BYTE PTR [edi+0x5bbf3334]
  41b43a:	lods   eax,DWORD PTR ds:[esi]
  41b43b:	ins    DWORD PTR es:[edi],dx
  41b43c:	ins    BYTE PTR es:[edi],dx
  41b43d:	arpl   WORD PTR [ebp-0x62],sp
  41b440:	and    eax,0xaa3776b1
  41b445:	and    bl,dh
  41b447:	or     DWORD PTR es:[edi-0x68],eax
  41b44b:	stc    
  41b44c:	adc    eax,0x7068a4e7
  41b451:	retf   
  41b452:	or     BYTE PTR [esi-0x27333140],cl
  41b458:	and    eax,0xe64609f
  41b45d:	sbb    BYTE PTR [ebp+0x44],dh
  41b460:	fidiv  DWORD PTR [ebp+0x74]
  41b463:	nop
  41b464:	inc    ebx
  41b465:	push   cs
  41b466:	dec    ebx
  41b467:	enter  0x7b8b,0xe4
  41b46b:	sbb    al,0x93
  41b46d:	jp     0x41b3fc
  41b46f:	arpl   dx,si
  41b471:	sub    BYTE PTR [eax+eiz*2-0x3dd85eed],dh
  41b478:	mov    DWORD PTR [ebx+ecx*1-0x8],ecx
  41b47c:	mov    al,ds:0xd7c3afa6
  41b481:	test   al,0xcf
  41b483:	cmp    ah,BYTE PTR [ebp-0x7b]
  41b486:	test   BYTE PTR ds:[ecx],ah
  41b489:	adc    eax,0x66598db6
  41b48e:	fmulp  st(1),st
  41b490:	sub    ch,BYTE PTR [eax]
  41b492:	cdq    
  41b493:	pop    ds
  41b494:	addr16 mov esp,0xb42e5732
  41b49a:	mov    bh,0x21
  41b49c:	aas    
  41b49d:	pop    es
  41b49e:	sbb    eax,ebx
  41b4a0:	pop    es
  41b4a1:	cmp    eax,ebp
  41b4a3:	or     DWORD PTR [edi],esp
  41b4a5:	das    
  41b4a6:	and    bl,cl
  41b4a8:	mov    ah,0x3f
  41b4aa:	ret    0xfe3b
  41b4ad:	(bad)  
  41b4ae:	out    0x9b,eax
  41b4b0:	out    dx,eax
  41b4b1:	cld    
  41b4b2:	iret   
  41b4b3:	jecxz  0x41b518
  41b4b5:	pop    ds
  41b4b6:	sti    
  41b4b7:	xchg   ebx,eax
  41b4b8:	addr16 jl 0x41b4fb
  41b4bb:	mov    DWORD PTR [edi],0xbd060087
  41b4c1:	or     edi,DWORD PTR [esi-0x15]
  41b4c4:	leave  
  41b4c5:	idiv   DWORD PTR [ebx-0x1d]
  41b4c8:	push   es
  41b4c9:	adc    bh,cl
  41b4cb:	fsub   DWORD PTR [esi+0x1600c21e]
  41b4d1:	pop    edx
  41b4d2:	mov    ds:0xf202cf3f,eax
  41b4d7:	mov    ebp,0x67933ce1
  41b4dc:	popf   
  41b4dd:	out    0xda,al
  41b4df:	dec    esp
  41b4e0:	push   ss
  41b4e1:	shl    DWORD PTR [ebx],0xd2
  41b4e4:	aam    0x85
  41b4e6:	outs   dx,BYTE PTR ds:[esi]
  41b4e7:	push   esi
  41b4e8:	ret    
  41b4e9:	dec    ebx
  41b4ea:	jbe    0x41b48d
  41b4ec:	adc    BYTE PTR [ebx-0x3d232488],bl
  41b4f2:	lea    edx,[ebp*1-0x19c273ec]
  41b4f9:	inc    edi
  41b4fa:	cli    
  41b4fb:	outs   dx,DWORD PTR ds:[esi]
  41b4fc:	adc    ch,BYTE PTR [ebp+0x2e]
  41b4ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b500:	add    ebp,DWORD PTR [ebx+ebp*8+0x67]
  41b504:	imul   edi,eax,0xd4fa9e28
  41b50a:	iret   
  41b50b:	jge    0x41b513
  41b50d:	xchg   edx,eax
  41b50e:	xchg   ecx,eax
  41b50f:	sub    dl,bl
  41b511:	cmp    al,0x25
  41b513:	addr16 jp 0x41b507
  41b516:	inc    edx
  41b517:	retf   
  41b518:	fbld   TBYTE PTR [edx+0x5b]
  41b51b:	mov    ebx,0x76610d11
  41b520:	sbb    DWORD PTR [esi+0x79a9f7d8],edi
  41b526:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b527:	mov    WORD PTR [edx+ebp*8],ds
  41b52a:	rcpps  xmm2,XMMWORD PTR [ebx+0x733e64d0]
  41b531:	loope  0x41b4ec
  41b533:	push   0x27a2932
  41b538:	mov    bl,0xbf
  41b53a:	mov    ebp,0x5d312f68
  41b53f:	enter  0x2d9f,0xcc
  41b543:	jmp    0x4bcd:0x80630ef9
  41b54a:	rol    bl,0x76
  41b54d:	dec    edx
  41b54e:	mov    dh,0x9e
  41b550:	in     eax,dx
  41b551:	int3   
  41b552:	or     BYTE PTR [ecx+0x47],dh
  41b555:	fwait
  41b556:	sub    cl,BYTE PTR [edi]
  41b558:	mov    ebp,0xbce7b25b
  41b55d:	iret   
  41b55e:	out    dx,eax
  41b55f:	xchg   BYTE PTR [eax],cl
  41b561:	xchg   esp,eax
  41b562:	rcl    eax,1
  41b564:	imul   edi,DWORD PTR [esi+0x4e],0xa5f30e46
  41b56b:	loopne 0x41b538
  41b56d:	cmc    
  41b56e:	pop    ecx
  41b56f:	sub    bh,cl
  41b571:	adc    BYTE PTR [esi+eax*2-0x12],ch
  41b575:	pop    esp
  41b576:	push   ebp
  41b577:	mov    cs,WORD PTR [ecx+0x24]
  41b57a:	out    0x99,eax
  41b57c:	icebp  
  41b57d:	clc    
  41b57e:	add    eax,0xd9e4aaf0
  41b583:	mov    ds:0xf14b5ebe,eax
  41b588:	imul   esp,DWORD PTR [ebx+eax*2-0x17210119],0x98c3c2ef
  41b593:	mov    ecx,0xb764d491
  41b598:	pop    ss
  41b599:	and    BYTE PTR [ebp+0x60],0x73
  41b59d:	imul   ebp,DWORD PTR [edx],0xdf47f163
  41b5a3:	sbb    esp,ebp
  41b5a5:	cwde   
  41b5a6:	mov    dl,0x22
  41b5a8:	adc    ch,cl
  41b5aa:	pop    esp
  41b5ab:	mov    BYTE PTR [ebx],dh
  41b5ad:	pop    esp
  41b5ae:	daa    
  41b5af:	mov    esi,DWORD PTR ds:0x77bd9216
  41b5b5:	jle    0x41b5b7
  41b5b7:	clc    
  41b5b8:	mov    edi,0xf8e80f8
  41b5bd:	dec    esi
  41b5be:	add    BYTE PTR [esp+edi*8-0x4f7de83a],bh
  41b5c5:	pop    edi
  41b5c6:	test   BYTE PTR [ebx+edx*4],0x59
  41b5ca:	call   0xae84b9f9
  41b5cf:	mov    ecx,0x8d3675d
  41b5d4:	mov    eax,ds:0xdd717caa
  41b5d9:	pushw  ss
  41b5db:	mov    dl,0x70
  41b5dd:	div    BYTE PTR [edi+0x11]
  41b5e0:	or     al,0xa2
  41b5e2:	and    DWORD PTR [ebp+0x2c7b6def],ebx
  41b5e8:	popa   
  41b5e9:	sbb    BYTE PTR [ebx+0x5f],dh
  41b5ec:	and    al,0x84
  41b5ee:	sbb    BYTE PTR [ebx+0x55],ah
  41b5f1:	ins    BYTE PTR es:[edi],dx
  41b5f2:	out    0x10,al
  41b5f4:	xchg   esp,eax
  41b5f5:	lahf   
  41b5f6:	call   0x6b96b2ea
  41b5fb:	jnp    0x41b57e
  41b5fd:	enter  0xa69,0x69
  41b601:	add    BYTE PTR [ecx-0x37bcfc60],dl
  41b607:	mov    dl,0x83
  41b609:	ins    DWORD PTR es:[edi],dx
  41b60a:	or     dh,BYTE PTR [esi+0xa7c5944]
  41b610:	scas   eax,DWORD PTR es:[edi]
  41b611:	push   0x6e
  41b613:	or     DWORD PTR [ecx-0x3b],ebx
  41b616:	loop   0x41b5d4
  41b618:	push   edx
  41b619:	jns    0x41b68a
  41b61b:	add    BYTE PTR [edi+0x2b],dh
  41b61e:	imul   ebp,DWORD PTR [ecx],0x4a
  41b621:	adc    bh,BYTE PTR [ebx]
  41b623:	ficom  WORD PTR [ebx+0x319cab7b]
  41b629:	fstp   st(6)
  41b62b:	test   DWORD PTR [edx+0x4189093],edx
  41b631:	xchg   ecx,eax
  41b632:	mov    eax,ds:0xd91a2407
  41b637:	ins    DWORD PTR es:[edi],dx
  41b638:	stc    
  41b639:	in     eax,0xda
  41b63b:	mov    al,0xdf
  41b63d:	add    eax,0xe19c955
  41b642:	repz mov ebx,0xe72809ed
  41b648:	or     ah,BYTE PTR [edi+edx*4+0x35]
  41b64c:	adc    edi,eax
  41b64e:	call   0xebb1:0xafc969ab
  41b655:	addr16 xchg esp,eax
  41b657:	adc    al,0x80
  41b65a:	xor    BYTE PTR [ebp+0x6118f1fd],dh
  41b660:	dec    edx
  41b661:	jo     0x41b6df
  41b663:	add    ecx,edi
  41b665:	push   edx
  41b666:	pop    ebx
  41b667:	xor    al,0xa3
  41b669:	cmp    al,0xcd
  41b66b:	in     al,dx
  41b66c:	mov    esi,0x4299fad1
  41b671:	out    0x88,eax
  41b673:	sub    BYTE PTR [eax+0x4d37105b],cl
  41b679:	in     al,0xc2
  41b67b:	inc    esp
  41b67c:	add    BYTE PTR [edx+0x7dcbe957],dh
  41b682:	pop    ds
  41b683:	xlat   BYTE PTR ds:[ebx]
  41b684:	mov    dh,0x32
  41b686:	jmp    0x41b66d
  41b688:	rcr    BYTE PTR [ecx+0x6112328],cl
  41b68e:	repnz push cs
  41b690:	add    al,BYTE PTR [esi+0x10d6873c]
  41b696:	mov    bl,0x22
  41b698:	sbb    edi,DWORD PTR [ebp+0x1e]
  41b69b:	data16 fisttp QWORD PTR [eax-0x3f]
  41b69f:	or     esi,DWORD PTR [ebx]
  41b6a1:	aam    0xe9
  41b6a3:	sbb    DWORD PTR [edi],0xffffffe3
  41b6a6:	cpuid  
  41b6a8:	add    BYTE PTR [eax],cl
  41b6aa:	mov    bl,0xc1
  41b6ac:	pop    ss
  41b6ad:	sub    BYTE PTR [eax],0xcb
  41b6b0:	in     eax,dx
  41b6b1:	sub    eax,DWORD PTR [edi+0x11c6dc30]
  41b6b7:	xchg   edx,eax
  41b6b8:	adc    ebp,DWORD PTR [edi]
  41b6ba:	int3   
  41b6bb:	lea    esp,cs:0x6390926c
  41b6c2:	xchg   edi,eax
  41b6c3:	pop    edx
  41b6c4:	fs and eax,0xb23dcbd0
  41b6ca:	pushf  
  41b6cb:	add    BYTE PTR [ebp-0x4aa93a38],0x55
  41b6d2:	pop    ecx
  41b6d3:	loop   0x41b659
  41b6d5:	xchg   ecx,eax
  41b6d6:	add    eax,0x6b0880f2
  41b6db:	or     ah,BYTE PTR [ebx+eax*8-0x64]
  41b6df:	push   eax
  41b6e0:	mov    ebp,0xed3bfea2
  41b6e5:	imul   esp,esp,0xccf1e320
  41b6eb:	cwde   
  41b6ec:	and    al,0xc7
  41b6ee:	fidiv  WORD PTR [edi]
  41b6f0:	and    BYTE PTR [eax],0x8c
  41b6f3:	mov    al,0xb1
  41b6f5:	in     eax,dx
  41b6f6:	les    ebp,FWORD PTR [edx+edi*2]
  41b6f9:	call   0xeba8f98d
  41b6fe:	or     al,0x24
  41b700:	xlat   BYTE PTR ds:[ebx]
  41b701:	out    dx,al
  41b702:	rcr    ch,cl
  41b704:	push   edi
  41b705:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b706:	xchg   edx,esi
  41b708:	inc    esi
  41b709:	xchg   ebx,eax
  41b70a:	jl     0x41b73e
  41b70c:	out    0xf7,eax
  41b70e:	les    ecx,FWORD PTR [eax]
  41b710:	add    dl,BYTE PTR [esi+ebp*8+0x55]
  41b714:	pop    ds
  41b715:	cdq    
  41b716:	add    dl,cl
  41b718:	ds in  al,0x10
  41b71b:	pop    edi
  41b71c:	test   eax,0xec8939bc
  41b721:	xchg   edi,eax
  41b722:	and    dl,bl
  41b724:	fld    QWORD PTR [esi+0x6991d2fb]
  41b72a:	xor    al,0x13
  41b72c:	mov    ?,WORD PTR [ebp-0x480ccdd9]
  41b732:	inc    ebp
  41b733:	arpl   dx,sp
  41b735:	in     al,0x7a
  41b737:	test   DWORD PTR [ecx+0x5dcdde71],edx
  41b73d:	inc    ebx
  41b73e:	xor    al,BYTE PTR [esi-0x6d]
  41b741:	ins    DWORD PTR es:[edi],dx
  41b742:	int3   
  41b743:	sti    
  41b744:	js     0x41b787
  41b746:	(bad)  
  41b747:	sub    BYTE PTR [ebp-0x2e],ah
  41b74a:	push   0xffffff85
  41b74c:	push   cs
  41b74d:	add    al,0x66
  41b74f:	jnp    0x41b73f
  41b751:	repz fs ds int3 
  41b755:	inc    ebp
  41b756:	sub    dl,ah
  41b758:	pop    edx
  41b759:	aas    
  41b75a:	xor    ebx,DWORD PTR [ecx]
  41b75c:	mov    al,ds:0xfb4f7de2
  41b761:	nop
  41b762:	je     0x41b784
  41b764:	in     eax,dx
  41b765:	cmp    ch,bh
  41b767:	adc    BYTE PTR [ebx],bl
  41b769:	shl    DWORD PTR [eax-0x22],0x57
  41b76d:	(bad)  
  41b76e:	xchg   ebx,eax
  41b76f:	loope  0x41b7a1
  41b771:	mov    dh,0xd0
  41b773:	(bad)  
  41b774:	arpl   WORD PTR [esi-0x8359828],ax
  41b77a:	push   cs
  41b77b:	push   esp
  41b77c:	sbb    BYTE PTR [ecx+0x4],al
  41b77f:	adc    BYTE PTR [edx],0xe4
  41b782:	cmp    bh,BYTE PTR [edi]
  41b784:	pop    edi
  41b785:	dec    edi
  41b786:	push   edi
  41b787:	fdivr  DWORD PTR [edx+0x4217af26]
  41b78d:	sar    BYTE PTR [edi-0x7],1
  41b790:	stc    
  41b791:	out    0xd7,al
  41b793:	(bad)  
  41b794:	fnclex 
  41b796:	fsub   DWORD PTR [edi+0x1f1eb3fe]
  41b79c:	shl    cl,0x81
  41b79f:	or     BYTE PTR [eax+0x13fa5ffd],al
  41b7a5:	xchg   ebx,eax
  41b7a6:	jmp    0xc49b:0xce7ecfc1
  41b7ad:	mov    esi,0x29c364b4
  41b7b2:	sbb    al,0x4d
  41b7b4:	and    DWORD PTR [edx-0x2a],edx
  41b7b7:	sbb    al,0x92
  41b7b9:	jo     0x41b7dc
  41b7bb:	out    0x64,eax
  41b7bd:	sub    DWORD PTR [esi-0x27159035],esi
  41b7c3:	mov    cl,BYTE PTR [edx+0x34]
  41b7c6:	cdq    
  41b7c7:	stos   DWORD PTR es:[edi],eax
  41b7c8:	add    eax,0x3aafc21a
  41b7ce:	adc    al,0xf5
  41b7d0:	int    0xb1
  41b7d2:	fiadd  DWORD PTR [edi]
  41b7d4:	shl    ch,1
  41b7d6:	(bad)  
  41b7d7:	cmp    eax,0x62cc7023
  41b7dc:	adc    BYTE PTR [eax-0x7593fa9],al
  41b7e2:	or     al,BYTE PTR [ecx-0x1993fc9a]
  41b7e8:	popa   
  41b7e9:	out    0x2c,al
  41b7eb:	mov    ds:0x52126a6f,al
  41b7f0:	leave  
  41b7f1:	and    BYTE PTR [esp+eax*8],dh
  41b7f4:	push   ss
  41b7f5:	stos   BYTE PTR es:[edi],al
  41b7f6:	cld    
  41b7f7:	xor    edi,DWORD PTR [ebx]
  41b7f9:	xor    al,0xa5
  41b7fb:	lods   eax,DWORD PTR ds:[esi]
  41b7fc:	or     al,0xb7
  41b7fe:	outs   dx,DWORD PTR ds:[esi]
  41b7ff:	lahf   
  41b800:	in     eax,dx
  41b801:	mov    ebx,gs
  41b803:	push   0x5edf3706
  41b808:	pushf  
  41b809:	pop    ebp
  41b80a:	mov    dh,0xec
  41b80c:	aad    0x77
  41b80e:	inc    eax
  41b80f:	push   edx
  41b810:	push   0x8
  41b812:	fild   WORD PTR [ecx+0x3f]
  41b815:	and    ch,BYTE PTR [eax+0x7c]
  41b818:	xchg   DWORD PTR [ecx],ebx
  41b81a:	rcr    eax,0xf1
  41b81d:	push   ds
  41b81e:	ss neg edi
  41b821:	jne    0x41b81f
  41b823:	mov    DWORD PTR [eax-0x33a79e4c],eax
  41b829:	xor    esp,ebx
  41b82b:	shl    DWORD PTR [ebx-0x1c],1
  41b82e:	fnstenv [esi]
  41b830:	das    
  41b831:	inc    ebx
  41b832:	(bad)  
  41b833:	imul   eax,DWORD PTR [ebx+ebx*4],0xfa337b8d
  41b83a:	or     al,0xeb
  41b83c:	xor    bl,dh
  41b83e:	sbb    cl,cl
  41b840:	stos   BYTE PTR es:[edi],al
  41b841:	adc    eax,DWORD PTR [ecx+0x66e6e36e]
  41b847:	or     eax,0x77cdcd5e
  41b84c:	ja     0x41b7d3
  41b84e:	push   ss
  41b84f:	mov    bl,0xcd
  41b851:	xor    ebx,DWORD PTR [ebx+0x7cc8a89b]
  41b857:	addr16 sahf 
  41b859:	lahf   
  41b85a:	es nop
  41b85c:	xor    al,0x8c
  41b85e:	or     edi,esp
  41b860:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b861:	cmp    ebp,DWORD PTR [ebx]
  41b863:	add    eax,0x70fb157e
  41b868:	ja     0x41b875
  41b86a:	scas   eax,DWORD PTR es:[edi]
  41b86b:	or     al,0xf2
  41b86d:	sahf   
  41b86e:	xchg   edx,eax
  41b86f:	xor    DWORD PTR [ecx],edi
  41b871:	repz sbb edi,DWORD PTR [edx+0x53]
  41b875:	push   ds
  41b876:	stc    
  41b877:	(bad)  
  41b878:	outs   dx,BYTE PTR ds:[esi]
  41b879:	es cmp edx,ebp
  41b87c:	inc    esi
  41b87d:	or     ebx,DWORD PTR [ecx+eiz*1]
  41b880:	addr16 jge 0x41b8d4
  41b883:	sbb    ax,0x82ad
  41b887:	adc    DWORD PTR [eax+eiz*8],edx
  41b88a:	or     dl,BYTE PTR [eax]
  41b88c:	inc    ecx
  41b88d:	cmp    DWORD PTR [eax-0x36432229],eax
  41b893:	mov    al,0xf1
  41b895:	ss lock xor eax,0x3e3803e
  41b89c:	adc    DWORD PTR [eax],eax
  41b89e:	stos   BYTE PTR es:[edi],al
  41b89f:	aad    0xf8
  41b8a1:	ret    
  41b8a2:	popa   
  41b8a3:	rcr    BYTE PTR [edi+0x4db75896],1
  41b8a9:	in     al,0x81
  41b8ab:	adc    DWORD PTR [ebx],edi
  41b8ad:	leave  
  41b8ae:	fidivr DWORD PTR [edi+0x3320166]
  41b8b4:	mov    ebx,0xa67fde6d
  41b8b9:	inc    edi
  41b8ba:	lods   al,BYTE PTR ds:[esi]
  41b8bb:	xor    BYTE PTR [edi+ebp*2+0x34],cl
  41b8bf:	inc    edx
  41b8c0:	dec    edx
  41b8c1:	cs jge 0x41b909
  41b8c4:	sbb    BYTE PTR [eax-0x1f],bl
  41b8c7:	and    DWORD PTR [edx+0x4a8ac1dd],edx
  41b8cd:	mov    ah,0xab
  41b8cf:	test   BYTE PTR [esi+0x6],dh
  41b8d2:	nop
  41b8d3:	pushf  
  41b8d4:	out    0xcc,al
  41b8d6:	lahf   
  41b8d7:	bound  eax,QWORD PTR [ebx+edx*4+0x7c3a440f]
  41b8de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b8df:	arpl   WORD PTR [ecx-0x66],bp
  41b8e2:	pop    eax
  41b8e3:	rcr    BYTE PTR [esi+0x5b380346],cl
  41b8e9:	arpl   WORD PTR [ecx-0x24f7411b],dx
  41b8ef:	push   esp
  41b8f0:	push   ebx
  41b8f1:	pusha  
  41b8f2:	fs stos BYTE PTR es:[edi],al
  41b8f4:	jge    0x41b8fb
  41b8f6:	loop   0x41b87c
  41b8f8:	xchg   ebx,eax
  41b8f9:	ja     0x41b892
  41b8fb:	rcr    BYTE PTR [edx+0x5f],cl
  41b8fe:	dec    esp
  41b8ff:	push   ds
  41b900:	xor    esi,DWORD PTR [esi]
  41b902:	fld    DWORD PTR [edi-0x25cd6c0]
  41b908:	sbb    eax,0x9a781bac
  41b90d:	cs ins DWORD PTR es:[edi],dx
  41b90f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b910:	pushf  
  41b911:	jns    0x41b897
  41b913:	fild   DWORD PTR [esp+eax*2]
  41b916:	out    dx,al
  41b917:	ins    DWORD PTR es:[edi],dx
  41b918:	ins    DWORD PTR es:[edi],dx
  41b919:	pop    ecx
  41b91a:	popa   
  41b91b:	dec    esi
  41b91c:	mov    al,0x3d
  41b91e:	pop    es
  41b91f:	sbb    al,0x59
  41b921:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b922:	dec    ebp
  41b923:	adc    ebp,DWORD PTR [edi]
  41b925:	inc    edi
  41b926:	push   ss
  41b927:	xor    cl,BYTE PTR [edi-0xa]
  41b92a:	out    0xca,al
  41b92c:	mov    cl,0xb3
  41b92e:	sbb    ebp,edi
  41b930:	fld    QWORD PTR [esi-0x573fbafe]
  41b936:	sbb    al,0x55
  41b938:	sub    BYTE PTR [eax+0x43247990],dh
  41b93e:	rcl    ecx,cl
  41b940:	mov    esi,gs
  41b942:	(bad)  
  41b944:	push   0x8bddf971
  41b949:	inc    esi
  41b94a:	xor    eax,0xa900a0a8
  41b94f:	push   edi
  41b950:	adc    ah,al
  41b952:	popfw  
  41b954:	mov    ebx,0x136979e6
  41b959:	mov    dl,0x9e
  41b95b:	into   
  41b95c:	test   eax,0x82b03590
  41b961:	dec    eax
  41b962:	dec    esi
  41b963:	sub    edx,DWORD PTR [ecx+0x44a3002b]
  41b969:	inc    esp
  41b96a:	mov    al,ds:0x52799cc9
  41b96f:	call   0x9ba6:0xb202b4ae
  41b976:	lods   al,BYTE PTR ds:[esi]
  41b977:	lahf   
  41b978:	adc    DWORD PTR [edx],ecx
  41b97a:	and    dl,BYTE PTR [esp+eax*1-0x1b9181a]
  41b981:	call   0xf2cda441
  41b986:	cmp    DWORD PTR [ecx-0x5c5dec8d],esi
  41b98c:	push   eax
  41b98d:	dec    edx
  41b98e:	aas    
  41b98f:	sar    DWORD PTR [ebx],cl
  41b991:	(bad)  
  41b993:	xor    bh,BYTE PTR [edi-0x70]
  41b996:	add    al,0x40
  41b998:	nop
  41b999:	je     0x41b95a
  41b99b:	adc    BYTE PTR [ecx+ebx*2+0xe],al
  41b99f:	ror    DWORD PTR [ebp-0x7f80eff0],0x6b
  41b9a6:	enter  0xb9d9,0x4a
  41b9aa:	jae    0x41b92e
  41b9ac:	add    BYTE PTR [esi+0x6c],al
  41b9af:	dec    BYTE PTR [ebx+eax*8]
  41b9b2:	fdiv   DWORD PTR [edx-0x67]
  41b9b5:	jecxz  0x41b9f4
  41b9b7:	xchg   edi,eax
  41b9b8:	dec    eax
  41b9b9:	cmp    BYTE PTR [edi+ebp*2+0x1d],0x50
  41b9be:	sub    bl,BYTE PTR [edi+0x5c]
  41b9c1:	xor    ch,BYTE PTR [ebp-0x6e2ba2d3]
  41b9c7:	(bad)  
  41b9c8:	mov    WORD PTR [esi+0x27],fs
  41b9cb:	bound  edx,QWORD PTR [esi]
  41b9cd:	jl     0x41b9cf
  41b9cf:	leave  
  41b9d0:	cmp    DWORD PTR [ebx+esi*4],eax
  41b9d3:	pop    eax
  41b9d4:	test   eax,0xc09a87ed
  41b9d9:	shl    BYTE PTR [ecx],cl
  41b9db:	jns    0x41ba28
  41b9dd:	and    DWORD PTR [edi-0x7afcce00],eax
  41b9e3:	(bad)
  41b9e6:	mov    al,0xda
  41b9e8:	fcmovbe st,st(4)
  41b9ea:	cdq    
  41b9eb:	jle    0x41ba0c
  41b9ed:	xor    DWORD PTR [ecx],edx
  41b9ef:	ins    BYTE PTR es:[edi],dx
  41b9f0:	lsl    esi,WORD PTR [ebx-0x73]
  41b9f4:	adc    BYTE PTR [edx+0x6a],bh
  41b9f7:	mov    dl,0xfb
  41b9f9:	in     al,0xde
  41b9fb:	xchg   edx,eax
  41b9fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b9fd:	adc    bl,BYTE PTR [eax+0x23275871]
  41ba03:	mov    ecx,0x1afbb1c6
  41ba08:	test   al,0xfc
  41ba0a:	(bad)  [esi+eiz*2+0x6c2ffb43]
  41ba11:	retf   
  41ba12:	ins    DWORD PTR es:[edi],dx
  41ba13:	sbb    cl,bl
  41ba15:	inc    ebx
  41ba16:	pusha  
  41ba17:	and    al,0xa1
  41ba19:	inc    edi
  41ba1a:	mov    esi,0x48f33957
  41ba1f:	dec    ebp
  41ba20:	mov    ebp,0x51b70908
  41ba25:	jmp    0x41ba2f
  41ba27:	ror    DWORD PTR [ebx],0xa3
  41ba2a:	stos   BYTE PTR es:[edi],al
  41ba2b:	pop    esp
  41ba2c:	xor    cl,cl
  41ba2e:	out    0xa9,al
  41ba30:	push   esi
  41ba31:	pop    eax
  41ba32:	cmp    cl,BYTE PTR [ecx-0x49bb3da6]
  41ba38:	cmp    al,0x5c
  41ba3a:	(bad)  
  41ba3b:	scas   al,BYTE PTR es:[edi]
  41ba3c:	jb     0x41ba12
  41ba3e:	and    DWORD PTR [eax],edx
  41ba40:	fbld   TBYTE PTR [edx]
  41ba42:	aaa    
  41ba43:	sub    DWORD PTR [ecx],ecx
  41ba45:	ja     0x41b9fb
  41ba47:	scas   al,BYTE PTR es:[edi]
  41ba48:	repnz popa 
  41ba4a:	js     0x41ba4e
  41ba4c:	imul   ebx,ebx,0x681985ac
  41ba52:	sub    bl,BYTE PTR [edx-0x22]
  41ba55:	lods   al,BYTE PTR ds:[esi]
  41ba56:	lods   eax,DWORD PTR ds:[esi]
  41ba57:	pop    edi
  41ba58:	aam    0x3f
  41ba5a:	xchg   esi,eax
  41ba5b:	sahf   
  41ba5c:	in     al,0xfe
  41ba5e:	xchg   BYTE PTR [esi],al
  41ba60:	in     eax,dx
  41ba61:	mov    eax,0xfe54d264
  41ba66:	mov    ecx,0x7a65bcbc
  41ba6b:	pop    es
  41ba6c:	sub    eax,0x603b388d
  41ba71:	les    edi,FWORD PTR [ecx-0x12ec7918]
  41ba77:	push   esi
  41ba78:	jno    0x41ba98
  41ba7a:	call   0xc1a1:0x2d988703
  41ba81:	sub    eax,DWORD PTR [ebx+0x17c6fb3a]
  41ba87:	into   
  41ba88:	(bad)  
  41ba8a:	pop    ds
  41ba8b:	(bad)  
  41ba8c:	jmp    0x41ba68
  41ba8e:	pop    ebx
  41ba8f:	call   DWORD PTR [ecx-0x34]
  41ba92:	sti    
  41ba93:	jl     0x41ba51
  41ba95:	out    dx,eax
  41ba96:	add    ah,al
  41ba98:	clc    
  41ba99:	fstp   TBYTE PTR [edi-0x5b]
  41ba9c:	mov    ds:0xfd3fe37e,al
  41baa1:	xchg   edx,eax
  41baa2:	push   edi
  41baa3:	and    DWORD PTR [edi],ecx
  41baa5:	lds    ecx,FWORD PTR [ecx]
  41baa7:	in     al,0x14
  41baa9:	sbb    edx,DWORD PTR [eax]
  41baab:	jb     0x41ba35
  41baad:	in     al,0x32
  41baaf:	mov    gs,ebx
  41bab1:	sub    edx,DWORD PTR [eax+0x6e61acb8]
  41bab7:	mov    bh,0x93
  41bab9:	lods   al,BYTE PTR ds:[esi]
  41baba:	xor    BYTE PTR [edx+0x362d990b],dh
  41bac0:	jbe    0x41bad9
  41bac2:	(bad)  
  41bac5:	test   eax,0xb682835c
  41baca:	out    dx,eax
  41bacb:	mov    ebp,0x6f0da0c8
  41bad0:	je     0x41ba8f
  41bad2:	icebp  
  41bad3:	or     al,0x84
  41bad5:	cmp    al,0x87
  41bad7:	pusha  
  41bad8:	and    dl,bh
  41bada:	cld    
  41badb:	adc    al,0x74
  41badd:	test   DWORD PTR [ecx],esp
  41badf:	mov    esi,edi
  41bae1:	push   ds
  41bae2:	enter  0x763b,0xc8
  41bae6:	clc    
  41bae7:	add    eax,0xbd33928e
  41baec:	jne    0x41bb4e
  41baee:	mov    cl,BYTE PTR [ecx]
  41baf0:	loope  0x41bb22
  41baf2:	mov    edi,0x43001ad
  41baf7:	sub    eax,0x91848f1d
  41bafc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bafd:	fldcw  WORD PTR [eax+0xceb97cc]
  41bb03:	adc    eax,edx
  41bb05:	xchg   esp,eax
  41bb06:	out    0x17,al
  41bb08:	ret    0x5688
  41bb0b:	xor    cl,al
  41bb0d:	dec    eax
  41bb0e:	jmp    0x41bb42
  41bb10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb11:	mov    al,0x7d
  41bb13:	add    al,BYTE PTR [ecx+eax*8+0x6aed015d]
  41bb1a:	gs stos DWORD PTR es:[edi],eax
  41bb1c:	sbb    DWORD PTR [ebp-0x7727ffa4],edi
  41bb22:	push   es
  41bb23:	scas   eax,DWORD PTR es:[edi]
  41bb24:	push   0xc55f9971
  41bb29:	dec    eax
  41bb2a:	push   esi
  41bb2b:	pushf  
  41bb2c:	sub    esp,DWORD PTR [esp]
  41bb2f:	add    ah,ah
  41bb31:	push   esi
  41bb32:	jns    0x41bb8e
  41bb34:	cmp    ebx,DWORD PTR [edi-0x20a4042f]
  41bb3a:	test   BYTE PTR [ebx-0x53],dh
  41bb3d:	int    0xbb
  41bb3f:	pop    ss
  41bb40:	test   BYTE PTR [ebp+0xd247d34],ah
  41bb46:	sub    eax,0x95be65ac
  41bb4b:	stc    
  41bb4c:	fdiv   QWORD PTR [esi-0x76]
  41bb4f:	xor    dh,bl
  41bb51:	adc    al,0x8c
  41bb53:	in     eax,0xef
  41bb55:	push   0x79
  41bb57:	push   edi
  41bb58:	sbb    BYTE PTR [ecx],bh
  41bb5a:	retf   
  41bb5b:	(bad)  
  41bb5c:	sub    esi,edi
  41bb5e:	sbb    DWORD PTR [ebx-0x45],ebp
  41bb61:	fdiv   st,st(4)
  41bb65:	jb     0x41bb36
  41bb67:	jns    0x41bbd0
  41bb69:	cdq    
  41bb6a:	imul   eax,DWORD PTR [ecx+0x3e],0x38
  41bb6e:	repz or BYTE PTR [ecx-0x78],bh
  41bb72:	fwait
  41bb73:	cld    
  41bb74:	pop    edx
  41bb75:	jmp    0x41bbce
  41bb77:	xchg   ecx,eax
  41bb78:	imul   eax,esp,0xfffffff4
  41bb7b:	imul   ebp,DWORD PTR [ebp+edi*2+0x5feced3c],0x3ef21e03
  41bb86:	pop    ds
  41bb87:	out    dx,eax
  41bb88:	mov    ebx,0x7d9ec800
  41bb8d:	std    
  41bb8e:	xchg   ebx,eax
  41bb8f:	inc    ecx
  41bb90:	jbe    0x41bb50
  41bb92:	and    dh,BYTE PTR [esi-0x63]
  41bb95:	std    
  41bb96:	fdiv   st(4),st
  41bb98:	arpl   WORD PTR [ecx+0x759a10d4],cx
  41bb9e:	mov    al,0xd8
  41bba0:	xchg   ebx,eax
  41bba1:	sbb    al,0x82
  41bba3:	rcr    BYTE PTR [edi+esi*8+0x5812b42a],0x25
  41bbab:	add    BYTE PTR [ebp+0x16],0x5f
  41bbaf:	add    al,0x8e
  41bbb1:	sti    
  41bbb2:	push   eax
  41bbb3:	pop    ecx
  41bbb4:	pop    esp
  41bbb5:	out    0x5e,eax
  41bbb7:	pop    esi
  41bbb8:	mov    al,ds:0x74dc6121
  41bbbd:	or     ch,cl
  41bbbf:	fadd   QWORD PTR [edi-0x5c]
  41bbc2:	jne    0x41bc36
  41bbc4:	scas   al,BYTE PTR es:[edi]
  41bbc5:	out    dx,eax
  41bbc6:	adc    eax,0xe4edc9d4
  41bbcb:	fadd   st,st(0)
  41bbcd:	push   esp
  41bbce:	mov    ecx,0x441244b7
  41bbd3:	xchg   ebx,eax
  41bbd4:	sbb    esp,DWORD PTR [esi+0x52]
  41bbd7:	mov    eax,ds:0xccf256be
  41bbdc:	sbb    DWORD PTR [edx],edi
  41bbde:	push   0x60945180
  41bbe3:	aaa    
  41bbe4:	dec    eax
  41bbe5:	dec    ecx
  41bbe6:	pop    esi
  41bbe7:	cmp    edi,eax
  41bbe9:	jne    0x41bbab
  41bbeb:	inc    ecx
  41bbec:	mov    ds,WORD PTR [esp+ebx*1-0x4420dcff]
  41bbf3:	add    cl,0x4d
  41bbf6:	push   ebx
  41bbf7:	jbe    0x41bbe0
  41bbf9:	fisub  DWORD PTR [edx]
  41bbfb:	pop    es
  41bbfc:	in     eax,0xfc
  41bbfe:	sub    eax,0xb761ec04
  41bc03:	xlat   BYTE PTR ds:[ebx]
  41bc04:	jb     0x41bc79
  41bc06:	sbb    esp,ebp
  41bc08:	jecxz  0x41bc66
  41bc0a:	lods   eax,DWORD PTR ds:[esi]
  41bc0b:	sub    ecx,DWORD PTR [esi+ebp*8+0x22]
  41bc0f:	sub    al,0x87
  41bc11:	stc    
  41bc12:	(bad)  
  41bc14:	push   edi
  41bc15:	dec    edi
  41bc16:	cli    
  41bc17:	xor    eax,0x6dfcaffa
  41bc1c:	test   BYTE PTR [eax-0x1a],al
  41bc1f:	mov    es,WORD PTR [ebx+0x7e]
  41bc22:	pop    ss
  41bc23:	pop    ebx
  41bc24:	lds    esi,FWORD PTR [ebx]
  41bc26:	sbb    bh,0x65
  41bc29:	sbb    al,0x3f
  41bc2b:	pop    ds
  41bc2c:	dec    ebx
  41bc2d:	jl     0x41bc91
  41bc2f:	(bad)  
  41bc30:	enter  0xe0d5,0xce
  41bc34:	(bad)  
  41bc35:	cwde   
  41bc36:	and    BYTE PTR [esi+0x9],bl
  41bc39:	push   esp
  41bc3a:	sar    DWORD PTR [ecx],1
  41bc3c:	inc    edi
  41bc3d:	call   0xe6318965
  41bc42:	or     cl,BYTE PTR [edi+0x5]
  41bc45:	fidiv  DWORD PTR [edi+0x55a1d0e2]
  41bc4b:	cmp    ah,ah
  41bc4d:	iret   
  41bc4e:	add    esi,edx
  41bc50:	mov    ebp,0xb9477c11
  41bc55:	sbb    esp,eax
  41bc57:	loop   0x41bbfb
  41bc59:	adc    eax,0x7c675cfb
  41bc5e:	scas   al,BYTE PTR es:[edi]
  41bc5f:	ret    0x83f0
  41bc62:	les    ecx,FWORD PTR [edi-0x34148189]
  41bc68:	cld    
  41bc69:	inc    ecx
  41bc6a:	adc    BYTE PTR [eax],al
  41bc6c:	in     al,dx
  41bc6d:	jge    0x41bc54
  41bc6f:	retf   
  41bc70:	inc    ecx
  41bc71:	xor    al,0xd4
  41bc73:	je     0x41bc96
  41bc75:	sbb    dl,cl
  41bc77:	rcl    DWORD PTR [eax+eax*4],1
  41bc7a:	lea    edi,[edi-0x4a907275]
  41bc80:	mov    esi,0x4c48802c
  41bc85:	pop    esi
  41bc86:	cdq    
  41bc87:	pop    eax
  41bc88:	jb     0x41bc6c
  41bc8a:	mov    bl,0x87
  41bc8c:	jnp    0x41bcdd
  41bc8e:	inc    edi
  41bc8f:	adc    BYTE PTR [esi+ecx*4+0x14],ah
  41bc93:	mov    bh,0x97
  41bc95:	cmp    ebp,DWORD PTR [eax-0x3f]
  41bc98:	sub    eax,DWORD PTR [ebx+0x5ad7e76a]
  41bc9e:	mov    ds:0x34a58d11,al
  41bca3:	or     cl,BYTE PTR [eax+0x14]
  41bca6:	mov    edx,0xc6694478
  41bcab:	into   
  41bcac:	xor    cl,BYTE PTR [ebp+0x54]
  41bcaf:	mov    edx,DWORD PTR ss:[eax]
  41bcb2:	inc    eax
  41bcb3:	loop   0x41bca4
  41bcb5:	scas   al,BYTE PTR es:[edi]
  41bcb6:	pop    ds
  41bcb7:	inc    eax
  41bcb8:	imul   eax,DWORD PTR [edx+0x1da41157],0xd6c9e246
  41bcc2:	loope  0x41bc5a
  41bcc4:	jmp    0xc8681ff9
  41bcc9:	ror    BYTE PTR [eax],0x11
  41bccc:	mov    cl,0x35
  41bcce:	add    eax,0x3a19a441
  41bcd3:	inc    edi
  41bcd4:	and    cl,bl
  41bcd6:	scas   eax,DWORD PTR es:[edi]
  41bcd7:	ja     0x41bcc8
  41bcd9:	popa   
  41bcda:	dec    ebp
  41bcdb:	sbb    bl,dh
  41bcdd:	mov    es,WORD PTR [edx]
  41bcdf:	aad    0x7d
  41bce1:	(bad)  
  41bce2:	adc    DWORD PTR [ebx+0x2e0d55eb],edx
  41bce8:	xchg   ebx,eax
  41bce9:	and    ebx,DWORD PTR [esi-0x461a4489]
  41bcef:	xchg   edi,eax
  41bcf0:	fisttp WORD PTR [ebx-0x32]
  41bcf3:	repz inc edx
  41bcf5:	inc    edi
  41bcf6:	xor    BYTE PTR [ebx],bl
  41bcf8:	inc    esi
  41bcf9:	xchg   edi,eax
  41bcfa:	jnp    0x41bcb6
  41bcfc:	lods   eax,DWORD PTR ds:[esi]
  41bcfd:	fdiv   QWORD PTR [edx]
  41bcff:	inc    edi
  41bd00:	mov    bl,0xbb
  41bd02:	mov    WORD PTR ds:0xd18cb34e,fs
  41bd08:	imul   ebp,DWORD PTR [ebp+0x367597b6],0x7b
  41bd0f:	repz lea esp,[edi+ebp*2+0x6]
  41bd14:	stc    
  41bd15:	cld    
  41bd16:	fs jge 0x41bcc6
  41bd19:	stc    
  41bd1a:	mov    bl,0x1
  41bd1c:	mov    ecx,0x2011c7bf
  41bd21:	ss inc ebx
  41bd23:	sar    DWORD PTR [eax-0x1f],1
  41bd26:	std    
  41bd27:	stos   BYTE PTR es:[edi],al
  41bd28:	mov    ecx,0x399fce3e
  41bd2d:	bound  eax,QWORD PTR [edx]
  41bd2f:	cld    
  41bd30:	xor    DWORD PTR cs:[ebx+ecx*2-0x75],edi
  41bd35:	into   
  41bd36:	sbb    al,0xbd
  41bd38:	jmp    0x8e8d:0x9f0575ac
  41bd3f:	sbb    BYTE PTR [edx],bl
  41bd41:	mov    cl,0x28
  41bd43:	dec    esp
  41bd44:	faddp  st(3),st
  41bd46:	adc    eax,0x364e51a0
  41bd4b:	and    ch,BYTE PTR [esp+edi*8]
  41bd4e:	bound  eax,QWORD PTR [esi+0x52fb3c37]
  41bd54:	repz sub edi,edi
  41bd57:	icebp  
  41bd58:	pop    edi
  41bd59:	sbb    al,0xfb
  41bd5b:	int3   
  41bd5c:	lahf   
  41bd5d:	ja     0x41bdd0
  41bd5f:	fcomip st,st(7)
  41bd61:	cld    
  41bd62:	js     0x41bdc3
  41bd64:	add    eax,0xfa3fe9c0
  41bd69:	repz add edi,esi
  41bd6c:	(bad)  
  41bd6d:	rcl    BYTE PTR [edi+0x152e62bc],cl
  41bd73:	pop    ebp
  41bd74:	inc    edi
  41bd75:	mov    WORD PTR [edx+0x33671d91],es
  41bd7b:	test   DWORD PTR [ebp-0x12],esi
  41bd7e:	loope  0x41bdac
  41bd80:	or     BYTE PTR [esp+esi*4+0x68],0x6d
  41bd85:	or     ecx,DWORD PTR [ebp+0x1d]
  41bd88:	mov    DWORD PTR [edx],ebp
  41bd8a:	fisttp WORD PTR [ebp-0x64a8cfc0]
  41bd90:	mov    BYTE PTR [edi-0x1e498e40],bl
  41bd96:	pushf  
  41bd97:	out    0x97,eax
  41bd99:	and    BYTE PTR ds:0x391509b,ch
  41bd9f:	pop    ebx
  41bda0:	inc    edi
  41bda1:	mov    al,ds:0xc7590fa2
  41bda6:	fcomp  DWORD PTR [eax-0x4fd6dcba]
  41bdac:	ror    BYTE PTR [ebp-0x44],1
  41bdaf:	shl    BYTE PTR [ebx],1
  41bdb1:	sbb    al,BYTE PTR [esi-0xe]
  41bdb4:	or     dh,BYTE PTR [edx]
  41bdb6:	out    0xd9,eax
  41bdb8:	and    eax,0x8b29974
  41bdbd:	push   es
  41bdbe:	inc    ebx
  41bdbf:	lock mov dh,0xc8
  41bdc2:	dec    ecx
  41bdc3:	add    al,0x96
  41bdc5:	cdq    
  41bdc6:	pop    ds
  41bdc7:	sub    edx,0xf8964842
  41bdcd:	mov    bl,0x5c
  41bdcf:	nop
  41bdd0:	repnz outs dx,BYTE PTR fs:[esi]
  41bdd3:	repnz call 0xca51:0xafc83422
  41bddb:	shl    DWORD PTR [esi+0x72],1
  41bdde:	scas   al,BYTE PTR es:[edi]
  41bddf:	lahf   
  41bde0:	pop    ecx
  41bde2:	out    0x5f,al
  41bde4:	inc    eax
  41bde5:	push   cs
  41bde6:	shl    DWORD PTR [ecx+0x4],cl
  41bde9:	test   BYTE PTR [eax],dl
  41bdeb:	xor    DWORD PTR [esp+ebp*4+0x79fa75a3],ecx
  41bdf2:	push   cs
  41bdf3:	rcr    DWORD PTR [ebx+0x3c6f49fb],0xf1
  41bdfa:	sbb    BYTE PTR [ebx+0x7f],0x89
  41bdfe:	(bad)  
  41be00:	or     BYTE PTR [edx],dh
  41be02:	aaa    
  41be03:	fwait
  41be04:	push   ebx
  41be05:	sbb    BYTE PTR [edi],ah
  41be07:	cmp    DWORD PTR [ecx+edx*1],0x4c
  41be0b:	sbb    al,0xb9
  41be0d:	or     DWORD PTR [esi+eiz*4+0x31],esp
  41be11:	dec    ebx
  41be12:	rol    bl,cl
  41be14:	(bad)  
  41be15:	dec    esi
  41be16:	pop    eax
  41be17:	lahf   
  41be18:	dec    edi
  41be19:	inc    eax
  41be1a:	fimul  WORD PTR [ecx-0x28]
  41be1d:	popa   
  41be1e:	xor    al,0x64
  41be20:	pop    eax
  41be21:	gs repz push ebp
  41be24:	cwde   
  41be25:	rcr    DWORD PTR [esi+0x4f664c5b],cl
  41be2b:	je     0x41bdc1
  41be2d:	into   
  41be2e:	enter  0x18ef,0xba
  41be32:	adc    BYTE PTR [ebp+0x26],ah
  41be35:	add    al,BYTE PTR [esi-0x3a]
  41be38:	es iret 
  41be3a:	or     esi,DWORD PTR [ecx-0x33d4df82]
  41be40:	mov    WORD PTR [edi+0x31af7323],ds
  41be46:	arpl   sp,si
  41be48:	sbb    al,0xc5
  41be4a:	xchg   edi,eax
  41be4b:	add    eax,0x7fd6b5e0
  41be50:	and    BYTE PTR [ebx-0x49fba624],ch
  41be56:	jns    0x41be77
  41be58:	(bad)  
  41be59:	not    DWORD PTR [ebp+0x0]
  41be5c:	fs stos BYTE PTR es:[edi],al
  41be5e:	inc    DWORD PTR [esi-0x68]
  41be61:	out    dx,al
  41be62:	(bad)  
  41be64:	test   BYTE PTR [ecx],ah
  41be66:	add    al,0xe
  41be68:	or     al,BYTE PTR [ebx-0x47]
  41be6b:	mov    dh,0x9d
  41be6d:	jb     0x41be8f
  41be6f:	push   ss
  41be70:	mov    esp,es
  41be72:	jmp    0x41bee1
  41be74:	cmp    BYTE PTR [edi],cl
  41be76:	xor    esi,ecx
  41be78:	push   ds
  41be79:	cmp    al,BYTE PTR [esp+eiz*8]
  41be7c:	sub    al,0xcc
  41be7e:	stos   DWORD PTR es:[edi],eax
  41be7f:	jo     0x41bed2
  41be81:	push   cs
  41be82:	stos   DWORD PTR es:[edi],eax
  41be83:	gs inc ebp
  41be85:	repz cmp DWORD PTR [esi-0x5a],esi
  41be89:	or     BYTE PTR [ecx],bl
  41be8b:	xchg   esp,eax
  41be8c:	bound  edi,QWORD PTR es:[edi+0x11d0d906]
  41be93:	cmp    ch,BYTE PTR [esi-0x3fb7ca14]
  41be99:	outs   dx,BYTE PTR ds:[esi]
  41be9a:	adc    dl,BYTE PTR [edx+0x5052a602]
  41bea0:	cdq    
  41bea1:	in     al,dx
  41bea2:	mov    dl,0xb4
  41bea4:	arpl   WORD PTR [eax+0x6884303e],cx
  41beaa:	sbb    bh,al
  41beac:	mov    ebx,DWORD PTR [ecx+eiz*8]
  41beaf:	daa    
  41beb0:	call   0x11c442fb
  41beb5:	or     al,0x8a
  41beb7:	cld    
  41beb8:	popf   
  41beb9:	add    al,0xe
  41bebb:	or     bh,dl
  41bebd:	mov    cl,0xc
  41bebf:	stos   DWORD PTR es:[edi],eax
  41bec0:	jb     0x41be8f
  41bec2:	gs sub esi,esi
  41bec5:	int3   
  41bec6:	stc    
  41bec7:	mov    dh,0x8a
  41bec9:	dec    ebp
  41beca:	adc    BYTE PTR [ebp-0x66],cl
  41becd:	mov    edi,0xccab10a3
  41bed2:	adc    DWORD PTR ds:0xa8f9cea8,0x9bb42251
  41bedc:	mov    ch,0xbc
  41bede:	bound  esi,QWORD PTR [edx]
  41bee0:	pop    eax
  41bee1:	fistp  DWORD PTR [edi-0x4c]
  41bee4:	mov    esi,0x2751c57a
  41bee9:	sbb    cl,dh
  41beeb:	call   FWORD PTR [ebp-0x2]
  41beee:	jbe    0x41bf09
  41bef0:	dec    edx
  41bef1:	ficomp WORD PTR [ecx]
  41bef3:	jb     0x41bf50
  41bef5:	fist   DWORD PTR ds:0x4ce0226e
  41befb:	in     eax,0x66
  41befd:	push   ss
  41befe:	out    0x63,eax
  41bf00:	adc    eax,0x344e23b4
  41bf05:	jmp    0x41be8b
  41bf07:	jae    0x41be8d
  41bf09:	pushf  
  41bf0a:	jge    0x41be9a
  41bf0c:	sbb    esp,DWORD PTR fs:[edx-0x4c]
  41bf10:	mov    edi,0x89a61e71
  41bf15:	inc    ebx
  41bf16:	push   ebx
  41bf17:	scas   al,BYTE PTR es:[edi]
  41bf18:	xchg   di,ax
  41bf1a:	jnp    0x41bf64
  41bf1c:	hlt    
  41bf1d:	rol    BYTE PTR [ebp-0x4742f116],0x8
  41bf24:	xchg   ecx,eax
  41bf25:	aam    0xdc
  41bf27:	xlat   BYTE PTR ds:[ebx]
  41bf28:	dec    ecx
  41bf29:	out    dx,eax
  41bf2a:	and    eax,0xb048e333
  41bf2f:	popa   
  41bf30:	dec    ebp
  41bf31:	pop    esp
  41bf32:	mov    edi,0x15821397
  41bf37:	in     eax,0xe7
  41bf39:	cmp    cl,BYTE PTR ds:0x895bb0fd
  41bf3f:	mov    bh,0x7e
  41bf41:	test   BYTE PTR [ebx+0x3ef0cfc0],0x1e
  41bf48:	out    dx,eax
  41bf49:	scas   eax,DWORD PTR es:[edi]
  41bf4a:	or     DWORD PTR [eax+0xb1fedff],esi
  41bf50:	cld    
  41bf51:	inc    ecx
  41bf52:	mov    al,ds:0xf21ecf24
  41bf57:	push   ebp
  41bf58:	xchg   edi,eax
  41bf59:	or     esi,esi
  41bf5b:	repz lds edx,FWORD PTR [ebp+0x3e8eb789]
  41bf62:	mov    ebp,ebx
  41bf64:	mov    dh,BYTE PTR [edi+edx*1-0x53]
  41bf68:	and    esp,ecx
  41bf6a:	and    bl,0x90
  41bf6d:	xchg   ecx,eax
  41bf6e:	ret    
  41bf6f:	test   ebp,edi
  41bf71:	push   edx
  41bf72:	fucom  st(5)
  41bf74:	inc    eax
  41bf75:	dec    ebx
  41bf76:	sbb    ebp,DWORD PTR [esi+0x33]
  41bf79:	dec    esp
  41bf7a:	popa   
  41bf7b:	imul   ebp,ebx,0xffffff95
  41bf7e:	jbe    0x41bf86
  41bf80:	mov    ah,BYTE PTR [ebx]
  41bf82:	rol    BYTE PTR [esi-0x44a5faf3],cl
  41bf88:	les    eax,FWORD PTR [ecx]
  41bf8a:	mov    ds:0xe7f205be,eax
  41bf8f:	sub    bh,cl
  41bf91:	inc    esp
  41bf92:	adc    al,0x9c
  41bf94:	xor    DWORD PTR [ebp-0x39fbbcbd],esp
  41bf9a:	push   fs
  41bf9c:	and    al,BYTE PTR [esi-0x3e]
  41bf9f:	inc    ebp
  41bfa0:	xchg   esi,eax
  41bfa1:	fadd   DWORD PTR [eax+edi*4-0x667561fc]
  41bfa8:	nop
  41bfa9:	in     eax,0xf7
  41bfab:	retf   
  41bfac:	(bad)
  41bfb0:	jmp    FWORD PTR [ebx+ecx*8]
  41bfb3:	sbb    eax,0x126e4087
  41bfb8:	mov    eax,0xa157d64e
  41bfbd:	mov    cl,0xf3
  41bfbf:	outs   dx,BYTE PTR ds:[esi]
  41bfc0:	scas   al,BYTE PTR es:[edi]
  41bfc1:	mov    ds:0x6c5b0f0f,eax
  41bfc6:	jecxz  0x41c029
  41bfc8:	fiadd  WORD PTR [edi-0x34]
  41bfcb:	mov    BYTE PTR [edi+0x7d],dl
  41bfce:	or     BYTE PTR [edx],ch
  41bfd0:	jg     0x41c001
  41bfd2:	sub    eax,DWORD PTR [edi+0x5c]
  41bfd5:	mov    BYTE PTR [ebx-0xe],ch
  41bfd8:	out    dx,eax
  41bfd9:	lods   eax,DWORD PTR ds:[esi]
  41bfda:	push   es
  41bfdb:	xchg   ebp,eax
  41bfdc:	pop    ds
  41bfdd:	ror    BYTE PTR [eax],1
  41bfdf:	sub    BYTE PTR [ecx],ah
  41bfe1:	out    dx,eax
  41bfe2:	repnz xor al,0xd4
  41bfe5:	xlat   BYTE PTR ds:[ebx]
  41bfe6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfe7:	ret    
  41bfe8:	shl    DWORD PTR [ecx-0x52920736],1
  41bfee:	or     edx,0x5
  41bff1:	jecxz  0x41c06a
  41bff3:	int    0xbf
  41bff5:	js     0x41bfce
  41bff7:	or     eax,0xbfd8d80d
  41bffc:	push   0xbbfe72d9
  41c001:	xor    eax,0x83851d11
  41c006:	retf   0x13a3
  41c009:	jbe    0x41bfa9
  41c00b:	and    al,0x6d
  41c00d:	fiadd  DWORD PTR [ecx-0x56]
  41c010:	scas   eax,DWORD PTR es:[edi]
  41c011:	scas   al,BYTE PTR es:[edi]
  41c012:	mov    ebp,0x18332e84
  41c017:	imul   edx,DWORD PTR [esi],0xd9da14a2
  41c01d:	dec    ebx
  41c01e:	(bad)  
  41c01f:	cs pop esi
  41c021:	pusha  
  41c022:	out    0xd6,al
  41c024:	int3   
  41c025:	lds    ecx,FWORD PTR [eax+0x33c393a2]
  41c02b:	xchg   ecx,eax
  41c02c:	mov    ah,BYTE PTR [ecx-0x19]
  41c02f:	inc    edi
  41c030:	stc    
  41c031:	out    0x55,eax
  41c033:	add    BYTE PTR [ebp+ebx*8+0x7d9545fd],bl
  41c03a:	in     eax,dx
  41c03b:	mov    edi,0x245f82fa
  41c040:	mul    DWORD PTR [edx-0x65465d36]
  41c046:	pop    ebp
  41c047:	mov    al,ds:0xed8523aa
  41c04c:	in     al,0x3b
  41c04e:	xchg   edx,eax
  41c04f:	xlat   BYTE PTR ds:[ebx]
  41c050:	push   0x4e
  41c052:	xchg   ecx,eax
  41c053:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c054:	repnz xchg ebp,eax
  41c056:	inc    edi
  41c057:	ficom  WORD PTR [edx-0x14]
  41c05a:	adc    eax,0xc81cad49
  41c05f:	jmp    0xe49eb79e
  41c064:	push   es
  41c065:	mov    es,eax
  41c067:	lock shr DWORD PTR [ebx+0x5dedbffe],0x5d
  41c06f:	scas   eax,DWORD PTR es:[edi]
  41c070:	fs inc edi
  41c072:	jne    0x41c0d1
  41c074:	push   ebp
  41c075:	out    0xf4,eax
  41c077:	popf   
  41c078:	jnp    0x41c061
  41c07a:	mov    gs,edi
  41c07c:	js     0x41c044
  41c07e:	mov    WORD PTR [ecx],fs
  41c080:	push   esi
  41c081:	pushf  
  41c082:	enter  0x8022,0x40
  41c086:	push   ss
  41c087:	pop    edi
  41c088:	and    dl,BYTE PTR [ecx+0x8cb0915]
  41c08e:	xor    BYTE PTR [edx+0x1e],dl
  41c091:	repnz xchg esp,eax
  41c093:	inc    edi
  41c094:	inc    BYTE PTR [eax]
  41c096:	push   ecx
  41c097:	clc    
  41c098:	add    edi,DWORD PTR [ecx+esi*8+0xf02220f]
  41c09f:	mov    BYTE PTR [edi],dh
  41c0a1:	and    al,0x78
  41c0a3:	add    al,0xe5
  41c0a5:	and    DWORD PTR [edx+0x2],eax
  41c0a8:	or     DWORD PTR [ecx-0x7ed7ef7c],eax
  41c0ae:	jns    0x41c093
  41c0b0:	or     al,0x0
  41c0b2:	add    BYTE PTR [ebx*1+0x54414449],dl
  41c0b9:	inc    ecx
  41c0ba:	inc    ecx
  41c0bb:	and    al,0x80
  41c0bd:	push   es
  41c0be:	sbb    al,0x4c
  41c0c0:	ins    BYTE PTR es:[edi],dx
  41c0c1:	(bad)  
  41c0c2:	arpl   dx,ax
  41c0c4:	js     0x41c0b4
  41c0c6:	jl     0x41c0be
  41c0c8:	std    
  41c0c9:	jmp    0xaed7:0xb387953e
  41c0d0:	push   ebp
  41c0d1:	mov    ebx,0xee160f4f
  41c0d6:	sub    edx,DWORD PTR [ecx]
  41c0d8:	shl    DWORD PTR ds:0xe7dddbdd,1
  41c0de:	aam    0xa9
  41c0e0:	(bad)  
  41c0e1:	pop    ebp
  41c0e2:	jnp    0x41c093
  41c0e4:	mov    ebp,0xcb00f3ea
  41c0e9:	(bad)  ds:0x19206f39
  41c0ef:	jnp    0x41c159
  41c0f1:	inc    esi
  41c0f2:	mov    ah,0xe9
  41c0f4:	in     eax,0x84
  41c0f6:	xor    eax,0x59bee734
  41c0fb:	rol    BYTE PTR [ebx-0x569c79c0],1
  41c101:	or     edi,DWORD PTR ds:0xd6a51641
  41c107:	mov    bl,0x12
  41c109:	and    BYTE PTR [ebp-0xd57efdb],al
  41c10f:	das    
  41c110:	fld    TBYTE PTR [ebx-0x16]
  41c113:	mov    ecx,0xef052cf4
  41c118:	jnp    0x41c0cd
  41c11a:	push   ds
  41c11b:	add    cl,BYTE PTR [esi]
  41c11d:	sahf   
  41c11e:	xchg   edi,eax
  41c11f:	sbb    DWORD PTR [edx-0x17],ebp
  41c122:	in     al,0x3d
  41c124:	or     BYTE PTR [ecx+0x44d9ac1e],ch
  41c12a:	push   esi
  41c12b:	outs   dx,DWORD PTR ds:[esi]
  41c12c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c12d:	fimul  WORD PTR [ebx+0x3769732]
  41c133:	out    0xd3,eax
  41c135:	stc    
  41c136:	ror    BYTE PTR [edi],cl
  41c138:	pop    ebx
  41c139:	popa   
  41c13a:	jmp    0x5b8bfe2a
  41c13f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c140:	xchg   cx,ax
  41c142:	mov    WORD PTR [ecx],es
  41c144:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c145:	es pop ecx
  41c147:	mov    edi,0x7ca07b08
  41c14c:	in     al,dx
  41c14d:	sbb    dl,bh
  41c14f:	fnstcw WORD PTR [ebx]
  41c151:	rcr    DWORD PTR [edx-0xa70c727],cl
  41c157:	int    0x9d
  41c159:	sbb    DWORD PTR [ecx],esp
  41c15b:	mov    ah,0x95
  41c15d:	add    bh,BYTE PTR [edi-0x438df3f4]
  41c163:	mov    ds:0xa9207409,al
  41c168:	(bad)  
  41c169:	cmc    
  41c16a:	mov    ah,0x7a
  41c16c:	aam    0x73
  41c16e:	fsubr  DWORD PTR cs:[ebp+0x13f69d32]
  41c175:	scas   eax,DWORD PTR es:[edi]
  41c176:	push   eax
  41c177:	rol    edx,0xf3
  41c17a:	data16 jle 0x41c1b8
  41c17d:	inc    eax
  41c17e:	mov    esi,0xce8fd3fb
  41c183:	pop    edi
  41c184:	cld    
  41c185:	(bad)  
  41c186:	xchg   ebp,eax
  41c187:	mov    ecx,DWORD PTR [edi+0x7d]
  41c18a:	cld    
  41c18b:	xor    BYTE PTR [esi-0x43],ah
  41c18e:	test   eax,0xe00c7e70
  41c193:	clc    
  41c194:	(bad)  
  41c195:	push   ebx
  41c196:	(bad)  
  41c198:	cmc    
  41c199:	mov    edi,0x78d157ca
  41c19e:	or     al,0x88
  41c1a0:	xor    BYTE PTR [edx],0x24
  41c1a3:	mov    al,ds:0xfe91e66e
  41c1a8:	jg     0x41c188
  41c1aa:	adc    edi,ebp
  41c1ac:	pusha  
  41c1ad:	push   esp
  41c1ae:	into   
  41c1af:	sub    DWORD PTR ds:0x686f0e2,0xffffffda
  41c1b6:	sbb    DWORD PTR [ebx],0x7e86c831
  41c1bc:	inc    ecx
  41c1bd:	adc    al,0x97
  41c1bf:	sub    eax,0x6ebdea9a
  41c1c4:	(bad)  
  41c1c6:	clc    
  41c1c7:	sbb    al,0x84
  41c1c9:	jmp    0x41c235
  41c1cb:	mov    ecx,0x57d11074
  41c1d0:	ja     0x41c1f7
  41c1d2:	xor    al,0xb4
  41c1d4:	dec    edi
  41c1d5:	imul   ebp,DWORD PTR [esi+0x12],0x2686e265
  41c1dc:	xchg   BYTE PTR [ecx],al
  41c1de:	imul   ah
  41c1e0:	pusha  
  41c1e1:	xchg   BYTE PTR [eax+0x6f17a80c],ah
  41c1e7:	stos   BYTE PTR es:[edi],al
  41c1e8:	shr    BYTE PTR [eax],0x7d
  41c1eb:	jno    0x41c19c
  41c1ed:	push   edi
  41c1ee:	das    
  41c1ef:	xlat   BYTE PTR ds:[ebx]
  41c1f0:	test   BYTE PTR [esi+0x3],dl
  41c1f3:	pop    eax
  41c1f4:	popa   
  41c1f5:	pcmpgtb mm7,QWORD PTR [esi]
  41c1f8:	pop    esi
  41c1f9:	push   esi
  41c1fa:	aad    0x68
  41c1fc:	xor    eax,0xf1adfd64
  41c201:	inc    esp
  41c202:	inc    ecx
  41c203:	xchg   ecx,eax
  41c204:	xor    DWORD PTR [edx+0x71],edi
  41c207:	int    0x90
  41c209:	inc    esi
  41c20a:	mov    bl,0x94
  41c20c:	ins    BYTE PTR es:[di],dx
  41c20e:	mov    al,ds:0x26dfd20e
  41c213:	xor    esp,DWORD PTR [ebx]
  41c215:	xor    eax,0xffffffe5
  41c218:	int    0xca
  41c21a:	xchg   al,bh
  41c21c:	sub    al,0x65
  41c21e:	sidtd  [eax+0x5]
  41c222:	xor    al,BYTE PTR [edx]
  41c224:	cmp    eax,0x20036db
  41c229:	fstp   TBYTE PTR [ebp+0x7efda83b]
  41c22f:	xor    cl,BYTE PTR [ecx]
  41c231:	pop    ebp
  41c232:	dec    ebp
  41c233:	fidivr DWORD PTR [eax]
  41c235:	sbb    BYTE PTR [edx],al
  41c237:	sub    BYTE PTR [edx+0x5a],al
  41c23a:	aam    0xdb
  41c23c:	add    BYTE PTR [eax],bl
  41c23e:	ins    BYTE PTR es:[edi],dx
  41c23f:	xor    eax,edi
  41c241:	sub    eax,0xb4b28101
  41c246:	and    cl,BYTE PTR ss:[eax]
  41c249:	xchg   esp,eax
  41c24a:	shr    DWORD PTR [ecx+0x35],1
  41c24d:	pusha  
  41c24e:	and    dh,BYTE PTR [edx-0x1ab7d5f9]
  41c254:	(bad)  
  41c256:	imul   ecx,ebx,0x17
  41c259:	mov    edi,0xaf801cfa
  41c25e:	jecxz  0x41c1fc
  41c260:	ret    0x1f9
  41c263:	ror    ch,0x17
  41c266:	ds shl ecx,1
  41c269:	je     0x41c27a
  41c26b:	mov    ebp,0x3a8111f4
  41c270:	inc    ebp
  41c271:	and    ch,BYTE PTR [eax+eax*4+0x2a7c007b]
  41c278:	inc    esp
  41c279:	cmp    al,0x36
  41c27b:	sti    
  41c27c:	jno    0x41c21a
  41c27e:	xchg   esi,eax
  41c27f:	ror    DWORD PTR [edi-0x70],cl
  41c282:	loop   0x41c26d
  41c284:	cmp    ch,BYTE PTR [ebx-0x60]
  41c287:	jp     0x41c290
  41c289:	sbb    ch,BYTE PTR [ecx+0x75d9620e]
  41c28f:	out    dx,eax
  41c290:	fbstp  TBYTE PTR [edx]
  41c292:	ds scas eax,DWORD PTR es:[edi]
  41c294:	fst    DWORD PTR [eax+eiz*2-0x46c295c7]
  41c29b:	jg     0x41c277
  41c29d:	and    ecx,DWORD PTR ds:0xfd0de1a3
  41c2a3:	xchg   ebx,eax
  41c2a4:	jp     0x41c29e
  41c2a6:	enter  0xfb3c,0xe0
  41c2aa:	dec    esp
  41c2ab:	daa    
  41c2ac:	leave  
  41c2ad:	push   esp
  41c2ae:	fwait
  41c2af:	or     al,0xa4
  41c2b1:	inc    ebp
  41c2b2:	call   0xa41:0x7158634e
  41c2b9:	push   cs
  41c2ba:	dec    edx
  41c2bb:	imul   esi,DWORD PTR [eax+edx*8],0x94107560
  41c2c2:	(bad)  
  41c2c4:	push   eax
  41c2c5:	inc    ecx
  41c2c6:	imul   ebp,edx,0x21f03559
  41c2cc:	pop    esp
  41c2cd:	jecxz  0x41c2a5
  41c2cf:	imul   ecx,ecx,0xacbbebc3
  41c2d5:	cmc    
  41c2d6:	lock scas al,BYTE PTR es:[edi]
  41c2d8:	or     BYTE PTR ds:0xe19c12a,cl
  41c2de:	jmp    0xb8c69a18
  41c2e3:	xchg   ebx,eax
  41c2e4:	pusha  
  41c2e5:	jns    0x41c28b
  41c2e7:	imul   eax,DWORD PTR [ecx+ebx*2-0x10],0x53
  41c2ec:	cdq    
  41c2ed:	inc    esi
  41c2ee:	jae    0x41c32e
  41c2f0:	mov    al,ds:0xec0709b0
  41c2f5:	push   cs
  41c2f6:	enter  0xa08f,0x76
  41c2fa:	adc    DWORD PTR [edx+eiz*4-0x46a95ff9],0x629b5e25
  41c305:	dec    edx
  41c306:	ins    BYTE PTR es:[edi],dx
  41c307:	mov    ds:0x1dd23f02,eax
  41c30c:	push   es
  41c30d:	call   0x16cb1a5f
  41c312:	arpl   WORD PTR es:[eax],sp
  41c315:	cmp    ch,BYTE PTR [esi+0x7999c7a0]
  41c31b:	es push es
  41c31d:	aam    0x5d
  41c31f:	cmp    BYTE PTR cs:[ebx-0xe185409],bh
  41c326:	call   DWORD PTR [edx]
  41c328:	add    BYTE PTR [esi-0x5],bl
  41c32b:	(bad)  
  41c32c:	repz mov ebp,0xcf51fe2c
  41c332:	xchg   ebx,eax
  41c333:	mov    edx,0xec6eb39a
  41c338:	mov    al,ds:0x5492f972
  41c33d:	mov    eax,ds:0x7978aeae
  41c342:	adc    al,0xb2
  41c344:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41c346:	idiv   DWORD PTR [ebx-0x75666b8c]
  41c34c:	inc    eax
  41c34d:	fs sub eax,0x7c19f915
  41c353:	push   ecx
  41c354:	or     ebp,DWORD PTR [edi]
  41c356:	pop    eax
  41c357:	fnstcw WORD PTR [edx-0x3e561cb5]
  41c35d:	ficomp DWORD PTR [edi]
  41c35f:	je     0x41c390
  41c361:	push   ebp
  41c362:	cmp    al,0x6a
  41c364:	or     eax,0x7f24ac11
  41c369:	lahf   
  41c36a:	ror    BYTE PTR [esi+eax*4-0x21e8ada],cl
  41c371:	and    dh,bh
  41c373:	imul   ebp,DWORD PTR [esi+edi*1],0xe5394760
  41c37a:	idiv   BYTE PTR [esi-0x4894cd71]
  41c380:	dec    edx
  41c381:	mov    esp,0xd6535f9f
  41c386:	shr    BYTE PTR [ebx+0x8],0xdf
  41c38a:	pop    ecx
  41c38b:	sub    DWORD PTR [ebx],ebx
  41c38d:	mov    esp,0x252a72d2
  41c392:	pop    es
  41c393:	jmp    0x41c328
  41c395:	adc    BYTE PTR [edi-0x265bdc1c],0x10
  41c39c:	dec    edi
  41c39d:	lea    ebx,[edx]
  41c39f:	pop    edi
  41c3a0:	pop    es
  41c3a1:	fs popf 
  41c3a3:	xor    eax,0x7b9ecd00
  41c3a8:	aaa    
  41c3a9:	and    BYTE PTR [ebp+0x5d],ah
  41c3ac:	xchg   esp,eax
  41c3ad:	mov    ebp,0xc01292b0
  41c3b2:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41c3b4:	cs add eax,0x1b3405c0
  41c3ba:	jg     0x41c3d6
  41c3bc:	fldcw  WORD PTR [edx]
  41c3be:	dec    ebx
  41c3bf:	retf   0xbdb5
  41c3c2:	sbb    BYTE PTR [edi+0x32c7e559],ah
  41c3c8:	mov    cl,0xfe
  41c3ca:	sub    al,0x87
  41c3cc:	cmp    BYTE PTR [ebx],al
  41c3ce:	cmp    dl,BYTE PTR [edi+0xca0cba6]
  41c3d4:	mov    ds,WORD PTR es:[edi]
  41c3d7:	inc    esp
  41c3d8:	cdq    
  41c3d9:	xor    ch,BYTE PTR [ebp-0x5fc25bf4]
  41c3df:	jnp    0x41c3d1
  41c3e1:	mov    bl,0x8f
  41c3e3:	(bad)  
  41c3e5:	into   
  41c3e6:	aas    
  41c3e7:	pop    esp
  41c3e8:	mov    esp,0xe7e7dcf4
  41c3ed:	cmp    BYTE PTR [edi+0x361f8710],al
  41c3f3:	adc    ch,BYTE PTR [esi-0x2]
  41c3f6:	retf   
  41c3f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c3f8:	scas   al,BYTE PTR es:[edi]
  41c3f9:	in     eax,0xfb
  41c3fb:	(bad)  
  41c3fc:	stc    
  41c3fd:	ins    BYTE PTR es:[edi],dx
  41c3fe:	ja     0x41c411
  41c400:	jne    0x41c413
  41c402:	add    al,0x77
  41c404:	addr16 inc ebp
  41c406:	add    DWORD PTR [eax],ecx
  41c408:	sbb    ah,BYTE PTR [esi-0x3e47c0f4]
  41c40e:	xlat   BYTE PTR ds:[ebx]
  41c40f:	icebp  
  41c410:	ret    
  41c411:	out    dx,al
  41c412:	in     eax,dx
  41c413:	mov    al,ds:0x9f29fe5d
  41c418:	cmp    ch,BYTE PTR [edi+0x4f]
  41c41b:	iret   
  41c41c:	dec    ebx
  41c41d:	test   dh,cl
  41c41f:	pushf  
  41c420:	stos   BYTE PTR es:[edi],al
  41c421:	or     ebx,DWORD PTR [esi+0x15]
  41c424:	inc    eax
  41c425:	jae    0x41c43f
  41c427:	test   eax,0xe0a30dff
  41c42c:	cmp    DWORD PTR [ebp-0x5eb54bf9],esp
  41c432:	shl    DWORD PTR [ecx-0x72],cl
  41c435:	loop   0x41c431
  41c437:	fld    TBYTE PTR [eax]
  41c439:	cmp    eax,0x432de680
  41c43e:	lods   al,BYTE PTR ds:[esi]
  41c43f:	xchg   DWORD PTR [edi],eax
  41c441:	add    eax,DWORD PTR [ebp+0x5f]
  41c444:	and    DWORD PTR [esi-0x5e9395ba],0xc501c72c
  41c44e:	ror    esi,0xaa
  41c451:	jecxz  0x41c46e
  41c453:	jo     0x41c44a
  41c455:	push   ds
  41c456:	xchg   edi,eax
  41c457:	adc    al,0xfb
  41c459:	fiadd  DWORD PTR [ecx]
  41c45b:	sub    esp,DWORD PTR [ebx]
  41c45d:	inc    edi
  41c45e:	std    
  41c45f:	cmp    eax,ecx
  41c461:	push   esi
  41c462:	dec    eax
  41c463:	cmp    eax,0x8c68e0c5
  41c468:	(bad)  
  41c469:	sbb    al,0xe4
  41c46b:	cmp    DWORD PTR [ebp-0x48],eax
  41c46e:	inc    ecx
  41c46f:	mov    dh,BYTE PTR [edi]
  41c471:	dec    eax
  41c472:	jp     0x41c43e
  41c474:	ins    BYTE PTR es:[edi],dx
  41c475:	sub    al,0xed
  41c477:	inc    ecx
  41c478:	retf   
  41c479:	inc    eax
  41c47a:	jecxz  0x41c48b
  41c47c:	rcl    ch,0xac
  41c47f:	jmp    0x4d482c34
  41c484:	mov    esi,DWORD PTR [ebx+0x2540dc00]
  41c48a:	arpl   WORD PTR [ecx],bx
  41c48c:	sub    eax,DWORD PTR [eax]
  41c48e:	push   0xffffffa0
  41c490:	fstp   QWORD PTR [eax+ecx*1]
  41c493:	xchg   edx,eax
  41c494:	shr    DWORD PTR [eax+eiz*1-0x16],1
  41c498:	das    
  41c499:	xlat   BYTE PTR ds:[ebx]
  41c49a:	cmp    al,0xe3
  41c49c:	or     edi,DWORD PTR [edx]
  41c49e:	sbb    BYTE PTR [edx-0x34735f16],cl
  41c4a4:	and    al,0xfd
  41c4a6:	xchg   ebx,eax
  41c4a7:	jl     0x41c4aa
  41c4a9:	mov    eax,0xf60eba9e
  41c4ae:	(bad)  
  41c4af:	fidiv  WORD PTR [esi+eax*2+0x1a]
  41c4b3:	xlat   BYTE PTR ds:[ebx]
  41c4b4:	rcl    ch,cl
  41c4b6:	fbld   TBYTE PTR [eax-0x218817c3]
  41c4bc:	dec    ebx
  41c4bd:	mov    ds:0x7c3877be,eax
  41c4c2:	jnp    0x41c47e
  41c4c4:	jo     0x41c4bb
  41c4c6:	cmp    DWORD PTR [eax],0xffffffa7
  41c4c9:	jo     0x41c4f9
  41c4cb:	or     al,0xa0
  41c4cd:	pop    ebx
  41c4ce:	sahf   
  41c4cf:	cmp    al,0x37
  41c4d1:	jmp    0x41c522
  41c4d3:	scas   al,BYTE PTR es:[edi]
  41c4d4:	jb     0x41c4b4
  41c4d6:	sar    ebx,cl
  41c4d8:	test   ch,bl
  41c4da:	call   0xb5e525d0
  41c4df:	mov    edx,0x7f03d41d
  41c4e4:	jae    0x41c4ef
  41c4e6:	push   0x6c960aae
  41c4eb:	fs mov ecx,0x68cf502c
  41c4f1:	sub    ebp,DWORD PTR [eax-0x2861344c]
  41c4f7:	add    eax,DWORD PTR [ecx+0x1c]
  41c4fa:	pop    esp
  41c4fb:	push   0x4689a4dc
  41c500:	xlat   BYTE PTR ds:[ebx]
  41c501:	mov    ah,dh
  41c503:	int    0xd0
  41c505:	add    edi,ecx
  41c507:	xor    dl,BYTE PTR [eax+0x6e]
  41c50a:	mov    eax,ds:0x115129f6
  41c50f:	fdivr  QWORD PTR [ebp+0x34a02a3a]
  41c515:	inc    edi
  41c516:	dec    esp
  41c517:	jne    0x41c51b
  41c519:	inc    edx
  41c51a:	lods   al,BYTE PTR ds:[esi]
  41c51b:	adc    eax,DWORD PTR [ebx]
  41c51d:	(bad)  
  41c51e:	ror    BYTE PTR [esp+eax*4],1
  41c521:	or     al,0xc9
  41c523:	out    0x94,eax
  41c525:	push   ecx
  41c526:	aas    
  41c527:	imul   edx,DWORD PTR [esp+edx*2],0x8e933d74
  41c52e:	jecxz  0x41c535
  41c530:	jle    0x41c4e8
  41c532:	cmp    DWORD PTR [esi],0x72afda4b
  41c538:	pusha  
  41c539:	fistp  WORD PTR [edx+eiz*2+0x7bb5e7b2]
  41c540:	in     al,0x6
  41c542:	enter  0x44b,0x38
  41c546:	jmp    0x797530aa
  41c54b:	push   DWORD PTR [edi]
  41c54d:	mov    eax,ds:0x603ba49e
  41c552:	jne    0x41c509
  41c554:	push   ds
  41c555:	inc    edi
  41c556:	rol    BYTE PTR [ebx],cl
  41c558:	or     ecx,DWORD PTR [ecx-0x5da0d423]
  41c55e:	sub    eax,0x162ae46
  41c563:	shr    ah,1
  41c565:	test   al,0xe4
  41c567:	sbb    BYTE PTR [ecx+0x1a],al
  41c56a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c56b:	lods   al,BYTE PTR cs:[esi]
  41c56d:	sbb    esp,eax
  41c56f:	jecxz  0x41c5b9
  41c571:	imul   ecx,DWORD PTR [edi],0x85abf5de
  41c577:	pop    ss
  41c578:	scas   eax,DWORD PTR es:[edi]
  41c579:	int3   
  41c57a:	shr    BYTE PTR [esi],0x29
  41c57d:	les    eax,FWORD PTR [ebx+0x664ed78b]
  41c583:	loopne 0x41c5c3
  41c585:	nop
  41c586:	pop    es
  41c587:	aam    0xc1
  41c589:	sbb    bh,BYTE PTR ds:[eax]
  41c58c:	adc    edx,DWORD PTR [esi+0x1b335cee]
  41c592:	mov    ds:0x2b7a952c,eax
  41c597:	retf   
  41c598:	test   BYTE PTR [ebp-0x21bfb784],dh
  41c59e:	pop    ecx
  41c59f:	and    ch,bl
  41c5a1:	(bad)  
  41c5a2:	(bad)  
  41c5a4:	add    al,bh
  41c5a6:	push   ds
  41c5a7:	into   
  41c5a8:	and    DWORD PTR [ebx+ecx*1+0x5e0fc803],ebx
  41c5af:	jge    0x41c56f
  41c5b1:	fwait
  41c5b2:	sub    eax,0xce48d2eb
  41c5b7:	mov    DWORD PTR [ebx+0x28a0922],ebp
  41c5bd:	adc    eax,0x27dfbd71
  41c5c2:	shl    DWORD PTR [edi],cl
  41c5c4:	out    dx,al
  41c5c5:	stc    
  41c5c6:	push   ecx
  41c5c7:	shl    DWORD PTR [ebx+0x5b26472],cl
  41c5cd:	and    dh,al
  41c5cf:	or     al,0xcd
  41c5d1:	xor    dl,BYTE PTR [edi+eax*2+0x69]
  41c5d5:	inc    ebx
  41c5d6:	pop    ecx
  41c5d7:	mov    dl,0xc
  41c5d9:	aaa    
  41c5da:	dec    esp
  41c5db:	popa   
  41c5dc:	sbb    edi,DWORD PTR [esi+0x76d8afea]
  41c5e2:	rcr    DWORD PTR [ebp-0x48],1
  41c5e5:	ret    0x91ea
  41c5e8:	pop    ebx
  41c5e9:	ds adc eax,0x2f490d64
  41c5ef:	scas   al,BYTE PTR es:[edi]
  41c5f0:	repz jmp 0xf2b3:0xdc8607de
  41c5f8:	mov    ebx,0x5ba82b97
  41c5fd:	xchg   DWORD PTR ds:0x6ef800de,ebp
  41c603:	inc    edx
  41c604:	xor    BYTE PTR [ebx],cl
  41c606:	jp     0x41c5e5
  41c608:	inc    ebp
  41c609:	cmc    
  41c60a:	fmul   st,st(3)
  41c60c:	mov    bl,0xea
  41c60e:	and    eax,0xf73cd3fd
  41c613:	mov    al,0x80
  41c615:	outs   dx,DWORD PTR ds:[esi]
  41c616:	and    ebp,0x77be63f2
  41c61c:	ror    BYTE PTR [edi+0x33],1
  41c61f:	cmp    al,BYTE PTR [ebx-0x69a45361]
  41c625:	jecxz  0x41c696
  41c627:	push   cs
  41c628:	into   
  41c629:	xor    edi,edi
  41c62b:	popa   
  41c62c:	imul   edi,ecx,0x24641e68
  41c632:	push   esi
  41c633:	jbe    0x41c695
  41c635:	cld    
  41c636:	out    dx,al
  41c637:	in     eax,0x1
  41c639:	pushf  
  41c63a:	add    eax,0x70b8ed31
  41c63f:	dec    ecx
  41c640:	call   FWORD PTR [eax+0x7f]
  41c643:	jg     0x41c626
  41c645:	sub    cl,bl
  41c647:	test   ebp,edx
  41c649:	popf   
  41c64a:	push   ds
  41c64b:	xchg   edx,eax
  41c64c:	rol    BYTE PTR [edi-0x596d812e],0x27
  41c653:	icebp  
  41c654:	(bad)  
  41c655:	xor    al,0xf4
  41c657:	xchg   esp,eax
  41c658:	cmp    DWORD PTR [ebp+eax*1-0x1d],0x5e8d1c54
  41c660:	inc    esi
  41c661:	fstp   QWORD PTR ds:0x3220c94c
  41c667:	cld    
  41c668:	mov    esp,0x4ead6e40
  41c66d:	pop    ss
  41c66e:	push   eax
  41c66f:	iret   
  41c670:	push   ss
  41c671:	cwde   
  41c672:	aad    0x3c
  41c674:	(bad)  
  41c676:	addr16 stc 
  41c678:	sub    esi,DWORD PTR [edx+0x4d]
  41c67b:	retf   
  41c67c:	call   0x67e:0xa082be25
  41c683:	push   esi
  41c684:	leave  
  41c685:	out    0xf2,eax
  41c687:	cs nop
  41c689:	out    0x2f,eax
  41c68b:	jge    0x41c6f9
  41c68d:	(bad)  
  41c68e:	pop    ds
  41c68f:	pop    edi
  41c690:	aam    0xf9
  41c692:	or     BYTE PTR [ebp-0x3ffc727b],0xfd
  41c699:	lahf   
  41c69a:	jl     0x41c715
  41c69c:	das    
  41c69d:	(bad)  
  41c69f:	icebp  
  41c6a0:	(bad)  
  41c6a1:	cld    
  41c6a2:	sub    eax,0x1a282aaa
  41c6a7:	pushf  
  41c6a8:	or     DWORD PTR [ecx*8+0x764b6346],esi
  41c6af:	sahf   
  41c6b0:	jle    0x41c634
  41c6b2:	xor    al,0x22
  41c6b4:	mov    ebp,0x7654fb2a
  41c6b9:	(bad)  
  41c6ba:	jbe    0x41c6a0
  41c6bc:	fld    QWORD PTR ds:0x7ecb85c0
  41c6c2:	popf   
  41c6c3:	aaa    
  41c6c4:	and    al,0x19
  41c6c6:	test   BYTE PTR [edx],bl
  41c6c8:	sub    al,0xd1
  41c6ca:	mov    ecx,0xe7ddaf87
  41c6cf:	inc    eax
  41c6d0:	push   eax
  41c6d1:	sahf   
  41c6d2:	aad    0x72
  41c6d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c6d5:	push   cs
  41c6d6:	call   0x9fea73f9
  41c6db:	sub    al,0x4f
  41c6dd:	outs   dx,DWORD PTR ds:[esi]
  41c6de:	dec    eax
  41c6df:	xchg   ebx,eax
  41c6e0:	pop    esi
  41c6e1:	mov    bl,0xfd
  41c6e3:	xor    ecx,DWORD PTR [ecx+ebx*1+0x7ae45038]
  41c6ea:	ins    DWORD PTR es:[edi],dx
  41c6eb:	gs push cs
  41c6ed:	fiadd  DWORD PTR [esi]
  41c6ef:	sar    BYTE PTR [ecx+ebx*8-0x10],0xb2
  41c6f4:	(bad)  
  41c6f5:	shl    DWORD PTR [edi+0x206c610e],1
  41c6fb:	push   edi
  41c6fc:	add    ebx,DWORD PTR ds:0x3a7f8c23
  41c702:	ds enter 0xfcb4,0x9c
  41c707:	jnp    0x41c6fa
  41c709:	mov    dl,0xbe
  41c70b:	cwde   
  41c70c:	dec    eax
  41c70d:	mov    esp,0xa507c12c
  41c712:	jbe    0x41c73d
  41c714:	add    ah,dl
  41c716:	cmp    eax,0x52371609
  41c71b:	cli    
  41c71c:	popa   
  41c71d:	push   ecx
  41c71e:	rol    DWORD PTR [ebx+ecx*2+0x7408c994],0x59
  41c726:	jb     0x41c704
  41c728:	in     al,dx
  41c729:	push   esp
  41c72a:	int3   
  41c72b:	enter  0x275d,0x84
  41c72f:	or     eax,0xc741db1
  41c734:	and    DWORD PTR [eax-0x20],0xffffff8c
  41c738:	xor    edi,0xffffffa8
  41c73b:	inc    edi
  41c73c:	popf   
  41c73d:	or     al,0xc2
  41c73f:	mov    eax,ds:0xc8c27b82
  41c744:	loop   0x41c738
  41c746:	and    eax,0xb6f7f7b8
  41c74b:	call   0x5f42:0xad70ce89
  41c752:	retf   
  41c753:	jecxz  0x41c74e
  41c755:	sub    DWORD PTR [ebp-0x234e0499],ecx
  41c75b:	xchg   ecx,eax
  41c75c:	into   
  41c75d:	pop    es
  41c75e:	ret    
  41c75f:	cmc    
  41c760:	cmp    BYTE PTR [eax-0x55470c9b],ch
  41c766:	mov    bh,0xf1
  41c768:	cmp    ecx,esi
  41c76a:	dec    al
  41c76c:	add    BYTE PTR [esi-0x80],dh
  41c76f:	mov    esp,0xa7f79ff8
  41c774:	popf   
  41c775:	retf   
  41c776:	jg     0x41c6f9
  41c778:	jae    0x41c782
  41c77a:	sbb    ebp,edi
  41c77c:	add    ch,BYTE PTR [edi+ebx*2]
  41c77f:	(bad)  
  41c780:	out    dx,al
  41c781:	xchg   DWORD PTR [esi+0x78],esp
  41c784:	std    
  41c785:	iret   
  41c786:	push   esi
  41c787:	fidiv  WORD PTR [edx+eax*1-0x6078ab4c]
  41c78e:	xor    edi,DWORD PTR [ecx+0x199bd767]
  41c794:	add    BYTE PTR [edx+0x30],dl
  41c797:	outs   dx,BYTE PTR ds:[esi]
  41c798:	xchg   edi,eax
  41c799:	add    al,0x7c
  41c79b:	xlat   BYTE PTR ds:[ebx]
  41c79c:	sahf   
  41c79d:	scas   eax,DWORD PTR es:[edi]
  41c79e:	shl    BYTE PTR [edx+0x5a],0x4a
  41c7a2:	xor    eax,DWORD PTR [ecx+0x78d9f516]
  41c7a8:	dec    edx
  41c7a9:	mov    DWORD PTR [ebp-0x6034ebb3],ecx
  41c7af:	push   esp
  41c7b0:	xchg   edx,eax
  41c7b1:	jmp    0xba82539a
  41c7b6:	or     cl,BYTE PTR [edi+esi*4]
  41c7b9:	loope  0x41c741
  41c7bb:	jmp    0x27cc104a
  41c7c0:	or     DWORD PTR [edx-0x56],0x28
  41c7c4:	leave  
  41c7c5:	retf   0x54e3
  41c7c8:	pop    edx
  41c7c9:	mov    edi,cs
  41c7cb:	sbb    DWORD PTR [edx],eax
  41c7cd:	retf   
  41c7ce:	(bad)  
  41c7cf:	mov    dl,0x12
  41c7d1:	mov    al,0x8a
  41c7d3:	add    DWORD PTR [ebx-0x79],edx
  41c7d6:	mov    dh,0xfb
  41c7d8:	inc    ebx
  41c7d9:	stc    
  41c7da:	sar    BYTE PTR [eax+0x3afaf68d],1
  41c7e0:	add    BYTE PTR [esi-0x73],cl
  41c7e3:	add    dh,BYTE PTR [ebp-0x1f]
  41c7e6:	nop
  41c7e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c7e8:	popf   
  41c7e9:	in     al,0x1a
  41c7eb:	in     eax,0x2a
  41c7ed:	xchg   esp,eax
  41c7ee:	xlat   BYTE PTR ds:[ebx]
  41c7ef:	inc    ebx
  41c7f0:	inc    edx
  41c7f1:	jge    0x41c7d4
  41c7f3:	sub    cl,bl
  41c7f5:	arpl   WORD PTR [eax],ax
  41c7f7:	dec    ebx
  41c7f8:	pandn  mm2,QWORD PTR [ebx+ebx*2+0x6e3692f3]
  41c800:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c801:	int3   
  41c802:	xor    bl,dl
  41c804:	pop    ecx
  41c805:	add    eax,0xa7cb80ca
  41c80a:	test   DWORD PTR ds:0xabb184a5,esp
  41c810:	(bad)  
  41c811:	cld    
  41c812:	test   DWORD PTR [edx],ebp
  41c814:	repz cmp eax,0x495d8581
  41c81a:	cmp    esi,DWORD PTR [ecx]
  41c81c:	retf   0x9d19
  41c81f:	leave  
  41c820:	cmp    DWORD PTR ds:0x9a95dd00,ebx
  41c826:	scas   eax,DWORD PTR es:[edi]
  41c827:	jmp    0x41c829
  41c829:	mov    ebx,0xab8d5d5d
  41c82e:	cli    
  41c82f:	shl    BYTE PTR [ecx-0x80],0xc6
  41c833:	inc    ebx
  41c834:	lgs    ebp,FWORD PTR ds:0x7d4eaa1b
  41c83b:	sar    DWORD PTR [edx+0x16],cl
  41c83e:	mov    ah,0x75
  41c840:	push   ss
  41c841:	cdq    
  41c842:	push   0x77
  41c844:	mov    ds:0xfcf57c31,al
  41c849:	fisubr DWORD PTR [ebp-0x50]
  41c84c:	jmp    0x9e817714
  41c851:	popf   
  41c852:	pop    ebp
  41c853:	call   edx
  41c855:	daa    
  41c856:	add    BYTE PTR [edi+eax*8-0x7a],bl
  41c85a:	ret    
  41c85b:	out    0xc7,al
  41c85d:	add    BYTE PTR [esi-0x3],ch
  41c860:	repnz and ebx,DWORD PTR [ebp+0x7f]
  41c864:	xchg   esi,eax
  41c865:	xlat   BYTE PTR ds:[ebx]
  41c866:	dec    esi
  41c867:	das    
  41c868:	imul   eax,DWORD PTR [ebp-0x3564173b],0xd088cfb3
  41c872:	mov    al,0x26
  41c874:	inc    eax
  41c875:	push   ds
  41c876:	mov    al,ds:0x7dad06e0
  41c87b:	lods   al,BYTE PTR ds:[esi]
  41c87c:	test   al,0x74
  41c87e:	push   ebx
  41c87f:	les    ebp,FWORD PTR [ecx]
  41c881:	hlt    
  41c882:	fstp   DWORD PTR [edx-0x46967829]
  41c888:	or     edx,DWORD PTR [eax+0x60cc8d2e]
  41c88e:	mov    eax,0x7ab8e003
  41c893:	adc    DWORD PTR [edi-0x11],ebp
  41c896:	test   BYTE PTR [edx+0x3c],bh
  41c899:	mov    bh,0x79
  41c89b:	retf   
  41c89c:	mov    eax,0x80c1c02e
  41c8a1:	push   es
  41c8a2:	sbb    BYTE PTR ds:0xe5c576ca,dl
  41c8a8:	push   eax
  41c8a9:	lahf   
  41c8aa:	(bad)  
  41c8ab:	sbb    ecx,edx
  41c8ad:	pop    ecx
  41c8ae:	add    eax,0x4f329dde
  41c8b3:	jecxz  0x41c8a8
  41c8b5:	icebp  
  41c8b6:	inc    ebx
  41c8b7:	int    0x27
  41c8b9:	inc    ecx
  41c8ba:	add    BYTE PTR [eax+eax*4-0x58],0x70
  41c8bf:	imul   ebp,DWORD PTR [edx+0x74d53dca],0x77cd7069
  41c8c9:	add    eax,0x69678d54
  41c8ce:	addr16 out 0x65,al
  41c8d1:	sar    esp,1
  41c8d3:	mov    ch,0x63
  41c8d5:	xor    al,0x10
  41c8d7:	jnp    0x41c86f
  41c8d9:	lods   al,BYTE PTR ds:[esi]
  41c8da:	and    ebx,0x37
  41c8dd:	add    dl,ch
  41c8df:	push   esp
  41c8e0:	mov    al,0x1c
  41c8e2:	shl    ebp,1
  41c8e4:	jb     0x41c917
  41c8e6:	mov    ds:0xba6b97d5,eax
  41c8eb:	ins    BYTE PTR es:[edi],dx
  41c8ec:	or     BYTE PTR [eax],dl
  41c8ee:	cmp    esi,DWORD PTR ds:0x5d9184df
  41c8f4:	in     al,0x83
  41c8f6:	sar    ebx,1
  41c8f8:	sti    
  41c8f9:	add    ah,BYTE PTR [eiz*2-0x668ac593]
  41c900:	imul   edi,DWORD PTR [edx-0x68],0xffffffa1
  41c904:	sar    DWORD PTR [ebx],1
  41c906:	bswap  edx
  41c908:	push   ds
  41c909:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c90a:	add    BYTE PTR [ecx-0xb],0x4b
  41c90e:	inc    eax
  41c90f:	mov    ch,0x31
  41c911:	jo     0x41c984
  41c913:	sub    bl,BYTE PTR [esi]
  41c915:	addr16 inc edx
  41c917:	ds dec ebp
  41c919:	cmp    ah,dl
  41c91b:	add    al,0x53
  41c91d:	pop    edi
  41c91e:	nop
  41c91f:	jnp    0x41c95d
  41c921:	or     esp,eax
  41c923:	jae    0x41c8fd
  41c925:	jo     0x41c8ff
  41c927:	cmp    BYTE PTR [eax],al
  41c929:	in     al,0xe1
  41c92b:	out    dx,al
  41c92c:	inc    edi
  41c92d:	mov    edx,0xa19e345d
  41c932:	xor    DWORD PTR [eax+0x5b],esi
  41c935:	sub    ebp,0x61
  41c938:	dec    edx
  41c939:	cwde   
  41c93a:	xor    bl,BYTE PTR [esi-0x30]
  41c93d:	or     BYTE PTR [esi],ah
  41c93f:	add    BYTE PTR [edi-0x4bc9d22e],0x2e
  41c946:	out    dx,al
  41c947:	enter  0xcf13,0xf3
  41c94b:	jae    0x41c9af
  41c94d:	test   dl,bl
  41c94f:	rol    DWORD PTR [edi-0x1d],0x58
  41c953:	aaa    
  41c954:	mov    eax,ds:0xa37182bb
  41c959:	sar    BYTE PTR [edx+edi*2-0x2d2fc09b],1
  41c960:	cmp    al,0x12
  41c962:	xchg   edi,eax
  41c963:	out    dx,al
  41c964:	push   0xfffffffb
  41c966:	xchg   ebx,eax
  41c967:	push   ss
  41c968:	stos   DWORD PTR es:[edi],eax
  41c969:	and    bh,BYTE PTR [ecx-0x22a2a70f]
  41c96f:	and    edx,ecx
  41c971:	add    ebx,DWORD PTR [edx+0x7f]
  41c974:	mov    ah,0xd8
  41c976:	or     DWORD PTR [esp+esi*8-0x46],eax
  41c97a:	add    dl,ch
  41c97c:	push   esp
  41c97d:	pop    ss
  41c97e:	rol    DWORD PTR [edx],cl
  41c980:	call   0xc656:0x831a6ad3
  41c987:	xchg   ebp,eax
  41c988:	in     al,dx
  41c989:	xchg   ecx,eax
  41c98a:	xor    eax,0x69ea4e03
  41c98f:	xchg   ebx,eax
  41c990:	xchg   esp,eax
  41c991:	xlat   BYTE PTR ds:[ebx]
  41c992:	add    DWORD PTR [eax+0xbd851de],ebx
  41c998:	fld    DWORD PTR [ebx-0x4e0cfd7d]
  41c99e:	mov    esp,0xcf9adb0b
  41c9a3:	pop    edx
  41c9a4:	cmp    eax,0x4143ad7c
  41c9a9:	rcr    DWORD PTR [edi-0x71],cl
  41c9ac:	cmp    al,bl
  41c9ae:	ins    DWORD PTR es:[edi],dx
  41c9af:	loope  0x41c97f
  41c9b1:	call   0xcc91:0xf1c94bac
  41c9b8:	in     eax,0xd5
  41c9ba:	ins    BYTE PTR es:[edi],dx
  41c9bb:	mov    bl,0x19
  41c9bd:	rcr    BYTE PTR [ebp-0x3b],1
  41c9c0:	mov    eax,0xe3ca6b19
  41c9c5:	sub    cl,BYTE PTR [ebx]
  41c9c7:	fs nop
  41c9c9:	push   ebx
  41c9ca:	jg     0x41ca22
  41c9cc:	imul   BYTE PTR [ebx]
  41c9ce:	inc    eax
  41c9cf:	out    dx,al
  41c9d0:	in     eax,0xf0
  41c9d2:	fwait
  41c9d3:	iret   
  41c9d4:	push   0x5c
  41c9d6:	dec    eax
  41c9d7:	pop    esp
  41c9d8:	mov    gs:0x72b92d91,al
  41c9de:	enter  0x75f5,0xbf
  41c9e2:	rcr    DWORD PTR [eax-0x61],cl
  41c9e5:	jl     0x41c9de
  41c9e7:	pop    edi
  41c9e8:	lahf   
  41c9e9:	cmp    eax,0x5707ed7d
  41c9ee:	jbe    0x41c9ce
  41c9f0:	test   ah,0x46
  41c9f3:	push   edi
  41c9f4:	add    eax,0xe600146e
  41c9f9:	xlat   BYTE PTR ds:[ebx]
  41c9fa:	mov    edi,0xadf0c4f6
  41c9ff:	dec    edi
  41ca00:	jle    0x41ca2a
  41ca02:	cmp    eax,0x6ee38a2e
  41ca07:	sar    DWORD PTR [esi],0x55
  41ca0a:	or     BYTE PTR [eax+0x45],al
  41ca0d:	pop    ebp
  41ca0e:	adc    eax,0xd02a1a9a
  41ca13:	or     ch,BYTE PTR ds:0xac0e350a
  41ca19:	hlt    
  41ca1a:	adc    al,BYTE PTR [edi-0x7f]
  41ca1d:	and    BYTE PTR [esi-0x103c73e3],ah
  41ca23:	inc    edi
  41ca24:	out    dx,eax
  41ca25:	or     ah,dl
  41ca27:	out    dx,al
  41ca28:	(bad)  
  41ca29:	and    eax,DWORD PTR [eax]
  41ca2b:	test   BYTE PTR [ecx-0x2dc048ce],0x49
  41ca32:	dec    ebx
  41ca33:	ret    
  41ca34:	sti    
  41ca35:	cwde   
  41ca36:	inc    ebp
  41ca37:	stos   BYTE PTR es:[edi],al
  41ca38:	test   eax,0x560668c6
  41ca3d:	adc    ch,BYTE PTR [edx+0x78fe4ed7]
  41ca43:	mov    bl,0x3d
  41ca45:	fcmove st,st(3)
  41ca47:	bound  eax,QWORD PTR [eax]
  41ca49:	push   ecx
  41ca4a:	xor    al,0x5d
  41ca4c:	stos   DWORD PTR es:[edi],eax
  41ca4d:	cmp    edi,DWORD PTR ds:0xed8b1eaf
  41ca53:	jns    0x41ca87
  41ca55:	adc    BYTE PTR [eax-0x73f526b0],al
  41ca5b:	lods   eax,DWORD PTR ds:[esi]
  41ca5c:	xor    al,0xe7
  41ca5e:	(bad)  
  41ca5f:	mov    cl,0xe
  41ca61:	inc    eax
  41ca62:	mov    bl,0xba
  41ca64:	rol    cl,1
  41ca66:	test   DWORD PTR [ebp+0x4086ca4],eax
  41ca6c:	inc    ebp
  41ca6d:	outs   dx,BYTE PTR ds:[esi]
  41ca6e:	adc    DWORD PTR [esp+eax*4],esi
  41ca71:	mov    DWORD PTR [edx+esi*2],esi
  41ca74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca75:	fcom   QWORD PTR ds:0x5dd49264
  41ca7b:	sub    DWORD PTR [eax],edi
  41ca7d:	rcr    DWORD PTR [ebx],cl
  41ca7f:	push   0x1c
  41ca81:	scas   eax,DWORD PTR es:[edi]
  41ca82:	xor    DWORD PTR [ecx+edi*2+0x1f703762],0x48
  41ca8a:	sti    
  41ca8b:	and    DWORD PTR [edi],ebx
  41ca8d:	xchg   esi,eax
  41ca8e:	push   ebp
  41ca8f:	inc    eax
  41ca90:	enter  0x31af,0xe4
  41ca94:	xor    eax,0x53f852f7
  41ca99:	inc    eax
  41ca9a:	mov    BYTE PTR [esi+0x5b],bl
  41ca9d:	inc    ecx
  41ca9e:	ret    0x19ba
  41caa1:	int    0xc2
  41caa3:	sub    ecx,ebp
  41caa5:	mov    ebx,DWORD PTR [edi-0x60b9c3c4]
  41caab:	sar    DWORD PTR [eax+ecx*1+0x5da20648],cl
  41cab2:	sahf   
  41cab3:	pop    edi
  41cab4:	cmp    edi,ecx
  41cab6:	stc    
  41cab7:	xchg   edi,eax
  41cab8:	call   DWORD PTR [edx]
  41caba:	shl    BYTE PTR [edi],0xb1
  41cabd:	shl    DWORD PTR [eax-0xc47ffaf],0x9d
  41cac4:	jg     0x41cb42
  41cac6:	out    0xca,al
  41cac8:	in     al,dx
  41cac9:	hlt    
  41caca:	xchg   edx,eax
  41cacb:	out    dx,eax
  41cacc:	jle    0x41cb30
  41cace:	add    edx,DWORD PTR [edx]
  41cad0:	mov    DWORD PTR [ebp-0x10],esi
  41cad3:	dec    edx
  41cad4:	imul   edx,eax,0xebf2f3a
  41cada:	sub    eax,0x1a457681
  41cadf:	test   DWORD PTR ds:0x5dfaf884,esi
  41cae5:	add    DWORD PTR [edx-0x35],0xc74a78c2
  41caec:	xor    al,0xe
  41caee:	out    dx,eax
  41caef:	jne    0x41caf1
  41caf1:	mov    es,edi
  41caf3:	iret   
  41caf4:	je     0x41caf6
  41caf6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41caf7:	dec    ebx
  41caf8:	sbb    bh,dl
  41cafa:	mov    dh,0x1f
  41cafc:	popa   
  41cafd:	fmul   QWORD PTR [ebx-0x15fc4732]
  41cb03:	scas   al,BYTE PTR es:[edi]
  41cb04:	cmp    bh,BYTE PTR [ebx+0x5fae396]
  41cb0a:	push   edx
  41cb0b:	jp     0x41cb40
  41cb0d:	inc    esp
  41cb0e:	push   DWORD PTR [edx+esi*4-0x6ee59008]
  41cb15:	je     0x41cb2e
  41cb17:	jl     0x41cafe
  41cb19:	sbb    DWORD PTR ds:0x5e83ec80,ecx
  41cb1f:	adc    eax,0x7c580752
  41cb24:	add    eax,DWORD PTR [ebp+0x2e]
  41cb27:	pop    ecx
  41cb28:	and    eax,0xfae24090
  41cb2d:	pop    eax
  41cb2e:	sbb    BYTE PTR [ecx],0x60
  41cb31:	xor    edx,DWORD PTR [esi-0x5f]
  41cb34:	jns    0x41cb66
  41cb36:	pop    ebp
  41cb37:	retf   
  41cb38:	stos   DWORD PTR es:[edi],eax
  41cb39:	pop    ecx
  41cb3a:	cdq    
  41cb3b:	test   eax,0xbed486ac
  41cb40:	xor    al,0xd9
  41cb42:	push   esp
  41cb43:	jo     0x41cb4f
  41cb45:	pop    ebp
  41cb46:	mov    esp,0x8d2411e4
  41cb4b:	xor    ah,dh
  41cb4d:	xchg   ebx,eax
  41cb4e:	sub    eax,0xb36a66bf
  41cb53:	pop    es
  41cb54:	mov    al,0x83
  41cb56:	icebp  
  41cb57:	ins    BYTE PTR es:[edi],dx
  41cb58:	xchg   BYTE PTR [ebp-0x11f5a130],bh
  41cb5e:	retf   0x268c
  41cb61:	repnz push 0x1ee10874
  41cb67:	lea    ebx,[ecx+0x690ea9cf]
  41cb6d:	pop    edx
  41cb6e:	sbb    eax,0x47127d5a
  41cb73:	xor    cl,bl
  41cb75:	add    eax,0x96ab2ed5
  41cb7a:	push   ebx
  41cb7b:	cmc    
  41cb7c:	xor    edi,DWORD PTR [edi+ebx*8]
  41cb7f:	in     eax,dx
  41cb80:	das    
  41cb81:	jo     0x41cb76
  41cb83:	xchg   edi,edi
  41cb85:	cld    
  41cb86:	or     al,0xfe
  41cb88:	nop
  41cb89:	add    eax,esp
  41cb8b:	ror    ebp,0x1b
  41cb8e:	out    dx,eax
  41cb8f:	jge    0x41cb5c
  41cb91:	mov    ch,0x45
  41cb93:	inc    ebp
  41cb94:	ror    BYTE PTR [eax+0x3b3ceb8c],0x29
  41cb9b:	sub    eax,0x434431af
  41cba0:	inc    ebp
  41cba1:	mov    eax,0x9a6be317
  41cba6:	jmp    0xb4d2:0x211aa645
  41cbad:	mov    BYTE PTR [esi+0x5fef069a],bh
  41cbb3:	test   bh,ch
  41cbb5:	pop    edx
  41cbb6:	or     DWORD PTR [ebp+0xb],0xffffffa5
  41cbba:	mov    esp,esi
  41cbbc:	int    0x79
  41cbbe:	ror    bh,cl
  41cbc0:	add    cl,BYTE PTR [eax-0xe]
  41cbc3:	outs   dx,BYTE PTR ds:[esi]
  41cbc4:	cmp    DWORD PTR [eax-0x7297ff0a],0xb29397da
  41cbce:	loope  0x41cb73
  41cbd0:	pop    ss
  41cbd1:	xor    al,0x9a
  41cbd3:	dec    ebp
  41cbd4:	inc    ebx
  41cbd5:	repz push ebx
  41cbd7:	jno    0x41cc24
  41cbd9:	imul   ecx,DWORD PTR [esi+ebp*2-0x30],0x26
  41cbde:	dec    edi
  41cbdf:	pop    edi
  41cbe0:	in     al,0x4
  41cbe2:	mov    ecx,0x80995ea7
  41cbe7:	inc    ecx
  41cbe8:	mov    WORD PTR gs:[edx-0x29],?
  41cbec:	mov    ds:0x891e58b8,eax
  41cbf1:	xlat   BYTE PTR ds:[ebx]
  41cbf2:	pusha  
  41cbf3:	mov    dl,0x94
  41cbf5:	pop    ebp
  41cbf6:	mul    DWORD PTR [ebx-0x18]
  41cbf9:	es call 0x5ea:0xac01f644
  41cc01:	scas   eax,DWORD PTR es:[edi]
  41cc02:	test   eax,0x961f309e
  41cc07:	shl    DWORD PTR [esi+0x6d],cl
  41cc0a:	shl    BYTE PTR [ecx+0x1c],1
  41cc0d:	cmp    ah,ah
  41cc0f:	dec    eax
  41cc10:	ds and al,0xd
  41cc13:	sbb    ecx,ecx
  41cc15:	inc    edi
  41cc16:	sub    BYTE PTR [edi-0x5d],ch
  41cc19:	shl    DWORD PTR [bp+di+0x76c7],1
  41cc1e:	(bad)  
  41cc1f:	xor    ch,BYTE PTR [edx]
  41cc21:	cwde   
  41cc22:	inc    esp
  41cc23:	pop    ebp
  41cc24:	mov    edi,cs
  41cc26:	inc    ebp
  41cc27:	data16 adc ch,dh
  41cc2a:	sub    DWORD PTR [edx],edi
  41cc2c:	mov    dh,0xa9
  41cc2e:	jno    0x41cbb1
  41cc30:	cwde   
  41cc31:	cs inc ecx
  41cc33:	loopne 0x41cc57
  41cc35:	jo     0x41ccad
  41cc37:	je     0x41cc34
  41cc39:	mov    ebp,0x2cd870d8
  41cc3e:	add    edi,DWORD PTR [eax-0x1b]
  41cc41:	aad    0xa7
  41cc43:	sti    
  41cc44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc45:	inc    esi
  41cc46:	scas   eax,DWORD PTR es:[edi]
  41cc47:	fcom   DWORD PTR [eax+edx*2-0x43]
  41cc4b:	cmp    al,0x1b
  41cc4d:	add    dh,BYTE PTR [edx+0x2d]
  41cc50:	push   edx
  41cc51:	and    BYTE PTR [esi],al
  41cc53:	inc    ebp
  41cc54:	push   eax
  41cc55:	add    eax,0x41541d10
  41cc5a:	mov    eax,0x6189ccd6
  41cc5f:	mov    ch,0xc1
  41cc61:	sbb    edx,edx
  41cc63:	inc    ebx
  41cc64:	jle    0x41cc11
  41cc66:	xchg   ecx,eax
  41cc67:	call   0x1bbbfc93
  41cc6c:	dec    esi
  41cc6d:	mov    ch,0xd1
  41cc6f:	inc    ebx
  41cc70:	in     al,dx
  41cc71:	fcomp  DWORD PTR [edi]
  41cc73:	push   eax
  41cc74:	imul   DWORD PTR [eax]
  41cc76:	xchg   esp,eax
  41cc77:	icebp  
  41cc78:	shl    DWORD PTR [edi+0x2a],cl
  41cc7b:	cs loope 0x41ccd9
  41cc7e:	pusha  
  41cc7f:	std    
  41cc80:	cmp    DWORD PTR ds:0x2c7798c0,eax
  41cc86:	pop    edx
  41cc87:	inc    edx
  41cc88:	inc    ebx
  41cc89:	test   eax,0x8010b39b
  41cc8e:	push   esi
  41cc8f:	ds loop 0x41cc13
  41cc92:	fucomp st(0)
  41cc94:	xor    dl,BYTE PTR [esi+0x37]
  41cc97:	out    dx,eax
  41cc98:	push   eax
  41cc99:	rcl    DWORD PTR [ebp+0x29],0x49
  41cc9d:	mov    ecx,0xa9133b39
  41cca2:	outs   dx,DWORD PTR ds:[esi]
  41cca3:	(bad)  
  41cca4:	push   esi
  41cca5:	imul   esi,DWORD PTR [ebp-0x7d81cb54],0xb230bb0a
  41ccaf:	adc    BYTE PTR [esi+edx*1+0x32bdb518],ch
  41ccb6:	push   0xffffffb7
  41ccb8:	add    ebp,DWORD PTR [eax-0x45]
  41ccbb:	ja     0x41cc59
  41ccbd:	call   0x75a7:0xf228e355
  41ccc4:	adc    al,ah
  41ccc6:	icebp  
  41ccc7:	jl     0x41cd1d
  41ccc9:	bt     DWORD PTR [edi-0x6053859a],esp
  41ccd0:	jmp    0x170:0x23f720e1
  41ccd7:	lods   eax,DWORD PTR ds:[esi]
  41ccd8:	push   cs
  41ccd9:	scas   al,BYTE PTR es:[edi]
  41ccda:	rcl    DWORD PTR [ebp+0x5f5abfa8],cl
  41cce0:	sub    eax,0x1a44745f
  41cce5:	sbb    BYTE PTR [edi+0x6],ah
  41cce8:	je     0x41cd51
  41ccea:	retf   
  41cceb:	mul    DWORD PTR [ebx-0x3d]
  41ccee:	popa   
  41ccef:	mov    ds:0xbb7a7000,eax
  41ccf4:	mov    esp,0x3a40070b
  41ccf9:	adc    ebx,0x5639f65
  41ccff:	push   esi
  41cd00:	push   ecx
  41cd01:	pop    eax
  41cd02:	pop    es
  41cd03:	fdiv   QWORD PTR [edx+eiz*8+0x69f7871a]
  41cd0a:	push   eax
  41cd0b:	jno    0x41ccd6
  41cd0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd0e:	ss push esp
  41cd10:	ret    0xa2aa
  41cd13:	inc    eax
  41cd14:	rcr    BYTE PTR [eax+0x630ffaf2],cl
  41cd1a:	pop    ds
  41cd1b:	mov    WORD PTR [ebx-0x52356090],es
  41cd21:	retf   0x9f1e
  41cd24:	lea    ebp,[edi+eiz*1+0x7a]
  41cd28:	add    DWORD PTR ds:0xe8a023c8,ebx
  41cd2e:	sbb    DWORD PTR [eax+0x73406caa],esi
  41cd34:	loopne 0x41cd9e
  41cd36:	xchg   ebx,eax
  41cd37:	xchg   esi,eax
  41cd38:	(bad)  
  41cd39:	and    edi,DWORD PTR [edx+0x19]
  41cd3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd3d:	adc    edx,DWORD PTR ds:0x8350328f
  41cd43:	cwde   
  41cd44:	sub    bl,BYTE PTR [ebx+0x2c]
  41cd47:	dec    ebx
  41cd48:	hlt    
  41cd49:	xchg   esi,eax
  41cd4a:	sub    dl,BYTE PTR [ebx]
  41cd4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd4d:	shr    esi,0xd2
  41cd50:	adc    al,0xe5
  41cd52:	push   esi
  41cd53:	cmp    DWORD PTR [eax],esi
  41cd55:	outs   dx,BYTE PTR ds:[esi]
  41cd56:	mov    esp,0x9c63e5a7
  41cd5b:	xor    bl,cl
  41cd5d:	mov    cl,0x92
  41cd5f:	push   esi
  41cd60:	sub    al,0x67
  41cd62:	sub    al,0xa3
  41cd64:	xchg   esi,eax
  41cd65:	push   ebx
  41cd66:	inc    ecx
  41cd67:	bound  ebp,QWORD PTR [edx]
  41cd69:	outs   dx,DWORD PTR ds:[esi]
  41cd6a:	xchg   BYTE PTR [ecx],ch
  41cd6c:	pop    ebp
  41cd6d:	sar    DWORD PTR [eax-0x514e644f],1
  41cd73:	sahf   
  41cd74:	cli    
  41cd75:	pop    ebp
  41cd76:	sbb    eax,0x235d692
  41cd7b:	mov    ds:0x7ac96b76,eax
  41cd80:	xor    dh,BYTE PTR [eax-0x7038048]
  41cd86:	inc    esp
  41cd87:	int    0xde
  41cd89:	push   esp
  41cd8a:	fsubr  DWORD PTR [eax]
  41cd8c:	add    BYTE PTR [edi+ebx*1],bl
  41cd8f:	into   
  41cd90:	movhps xmm6,QWORD PTR [edi]
  41cd93:	cmp    dh,0x3d
  41cd96:	add    BYTE PTR [esi-0x678b7014],cl
  41cd9c:	inc    edx
  41cd9d:	xlat   BYTE PTR ds:[ebx]
  41cd9e:	(bad)  
  41cd9f:	lea    edi,[ebp+0x1e]
  41cda2:	inc    ebp
  41cda3:	out    0x38,eax
  41cda5:	sbb    cl,bh
  41cda7:	inc    esi
  41cda8:	cmp    eax,0xb490eb91
  41cdad:	push   edx
  41cdae:	mov    bl,cl
  41cdb0:	mov    esp,0xaeb29038
  41cdb5:	retf   
  41cdb6:	adc    BYTE PTR [eax+0x1b4f96af],0x4e
  41cdbd:	jmp    0x41cd7f
  41cdbf:	and    BYTE PTR [ecx+edi*2+0x45],dl
  41cdc3:	add    DWORD PTR [edx-0x30],esp
  41cdc6:	xor    al,0xb9
  41cdc8:	cmp    eax,0x1eaf0694
  41cdcd:	mov    bh,BYTE PTR [edi+0x5af18eb5]
  41cdd3:	xchg   esp,eax
  41cdd4:	and    edx,eax
  41cdd6:	imul   DWORD PTR [ecx-0x50155844]
  41cddc:	fisubr WORD PTR [edx+ecx*8]
  41cddf:	xor    esp,DWORD PTR [esi-0xf691ce5]
  41cde5:	dec    esp
  41cde6:	dec    esp
  41cde7:	xchg   ebx,eax
  41cde8:	jno    0x41ce63
  41cdea:	dec    ebp
  41cdeb:	lahf   
  41cdec:	mov    ds:0xd597a33c,eax
  41cdf1:	icebp  
  41cdf2:	and    dl,BYTE PTR [esi-0x5669f1c9]
  41cdf8:	pop    esi
  41cdf9:	inc    esp
  41cdfa:	cmp    DWORD PTR [ebx+eax*1+0x2996589d],ebp
  41ce01:	mov    al,ds:0xab3d87c
  41ce06:	mov    al,ds:0xa99c4d65
  41ce0b:	mov    ah,0xa6
  41ce0d:	scas   al,BYTE PTR es:[edi]
  41ce0e:	imul   ebx,DWORD PTR [ecx],0x665d9df8
  41ce14:	fiadd  DWORD PTR [ecx+0x7f79be1a]
  41ce1a:	fadd   QWORD PTR [edx]
  41ce1c:	out    0xff,al
  41ce1e:	sti    
  41ce1f:	push   eax
  41ce20:	or     eax,0x46c2bdfb
  41ce25:	add    eax,esp
  41ce27:	cmc    
  41ce28:	xchg   ebx,eax
  41ce29:	xor    al,0x1c
  41ce2b:	std    
  41ce2c:	push   edi
  41ce2d:	sar    DWORD PTR [esi],0x80
  41ce30:	cld    
  41ce31:	and    al,0x80
  41ce33:	sub    ebp,DWORD PTR [eax+0x57bd5e9e]
  41ce39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce3a:	jmp    0x519382c9
  41ce3f:	push   esp
  41ce40:	jns    0x41ce18
  41ce42:	xor    eax,0x350ad018
  41ce47:	pop    esi
  41ce48:	mov    ecx,edx
  41ce4a:	pop    ds
  41ce4b:	lea    esp,ds:0x35d63f76
  41ce51:	in     al,0x94
  41ce53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce54:	lahf   
  41ce55:	bound  edx,QWORD PTR [eax]
  41ce57:	gs loop 0x41ceb3
  41ce5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce5b:	xchg   DWORD PTR [edx+edx*8-0x4f42e044],esp
  41ce62:	xchg   esi,eax
  41ce63:	cmp    eax,0xd2029c2a
  41ce68:	cmp    ch,BYTE PTR [edi+0x1c]
  41ce6b:	retf   
  41ce6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce6d:	mul    ebx
  41ce6f:	mov    ch,0x1
  41ce71:	jne    0x41cea4
  41ce73:	(bad)  
  41ce74:	push   esp
  41ce75:	sbb    DWORD PTR [eax+0x6345b969],eax
  41ce7b:	cwde   
  41ce7c:	bound  ecx,QWORD PTR [edi]
  41ce7e:	push   ebx
  41ce7f:	(bad)  
  41ce80:	cmp    DWORD PTR ds:0x82baf11a,eax
  41ce86:	jns    0x41ce94
  41ce88:	shr    ebx,1
  41ce8a:	imul   edi,DWORD PTR ds:0x7e54dd62,0x5a
  41ce91:	out    0x58,al
  41ce93:	xchg   edi,eax
  41ce94:	test   eax,0xc4cb467
  41ce99:	push   ebx
  41ce9a:	xlat   BYTE PTR ds:[ebx]
  41ce9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce9c:	je     0x41cef1
  41ce9e:	jecxz  0x41cf08
  41cea0:	jns    0x41cf15
  41cea2:	mov    BYTE PTR [ebx+0x63],cl
  41cea5:	iret   
  41cea6:	jb     0x41cef7
  41cea8:	add    ebp,ebx
  41ceaa:	jae    0x41cec7
  41ceac:	sbb    BYTE PTR [esi+0x2],bh
  41ceaf:	fdivr  QWORD PTR [edx+0x37de5133]
  41ceb5:	sbb    DWORD PTR [esi],esi
  41ceb7:	or     al,BYTE PTR [eax]
  41ceb9:	xlat   BYTE PTR ds:[ebx]
  41ceba:	outs   dx,DWORD PTR ds:[esi]
  41cebb:	out    dx,al
  41cebc:	cmp    eax,0x732be778
  41cec1:	cmp    al,0x79
  41cec3:	push   es
  41cec4:	int3   
  41cec5:	pop    esi
  41cec6:	add    dh,BYTE PTR [esi+0x1e]
  41cec9:	add    esi,edx
  41cecb:	mov    ds:0xee639718,eax
  41ced0:	mov    ds:0x7a603645,al
  41ced5:	jo     0x41cf05
  41ced7:	sbb    bl,bl
  41ced9:	ret    
  41ceda:	or     al,0x7d
  41cedc:	dec    edx
  41cedd:	imul   edx,DWORD PTR [eax],0x6f33e9ae
  41cee3:	xchg   esp,eax
  41cee4:	fiadd  DWORD PTR [esi+0x7a]
  41cee7:	or     BYTE PTR [edi+eiz*4+0x1d],cl
  41ceeb:	sbb    edi,DWORD PTR [ebp+ebx*4+0x67]
  41ceef:	mov    bl,bl
  41cef1:	pop    edi
  41cef2:	mov    ds:0x67ca9f37,eax
  41cef7:	or     cl,BYTE PTR [esp+esi*4+0x2e]
  41cefb:	adc    DWORD PTR [edi+eiz*4],ebx
  41cefe:	sahf   
  41ceff:	(bad)  
  41cf00:	in     eax,0x5d
  41cf02:	daa    
  41cf03:	lahf   
  41cf04:	sbb    BYTE PTR [edx-0x7862804],ah
  41cf0a:	sub    DWORD PTR [edi+0x329dd31b],ebp
  41cf10:	mov    eax,0x8df6de75
  41cf15:	mov    al,0xa
  41cf17:	lods   eax,DWORD PTR ds:[esi]
  41cf18:	retf   
  41cf19:	cmp    ah,BYTE PTR [eax+0x177ee7d2]
  41cf1f:	call   0xf79dac73
  41cf24:	jnp    0x41cf43
  41cf26:	pusha  
  41cf27:	and    ah,bl
  41cf29:	(bad)  
  41cf2a:	in     eax,dx
  41cf2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf2c:	add    BYTE PTR [edx*8+0x748364e6],dh
  41cf33:	xchg   edx,eax
  41cf34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf35:	sbb    BYTE PTR [edi],cl
  41cf37:	lahf   
  41cf38:	cmp    eax,0x602dca02
  41cf3d:	jno    0x41cf52
  41cf3f:	mov    eax,0xa7e05bfb
  41cf44:	aaa    
  41cf45:	es bnd jg 0x41cedc
  41cf49:	popa   
  41cf4a:	mov    ds:0x61eaf000,eax
  41cf4f:	jg     0x41cf4c
  41cf51:	fistp  WORD PTR [edi+0x0]
  41cf54:	mov    cs,WORD PTR [esi-0x80]
  41cf57:	mov    ebp,0xcbdec00b
  41cf5c:	shr    BYTE PTR [edi+ebx*1-0xa26b9a1],0x40
  41cf64:	sahf   
  41cf65:	popa   
  41cf66:	cmp    al,0x83
  41cf68:	fild   WORD PTR [esi]
  41cf6a:	test   eax,0x35beed7c
  41cf6f:	sub    bh,ah
  41cf71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf72:	add    DWORD PTR [eax+0x3],edi
  41cf75:	stc    
  41cf76:	stos   BYTE PTR es:[edi],al
  41cf77:	ss mov ebx,0x64249cd6
  41cf7d:	(bad)  
  41cf7f:	cmp    al,0x37
  41cf81:	dec    ebx
  41cf82:	xchg   DWORD PTR [ebx+0x11df4e8],edi
  41cf88:	jmp    0x41cf62
  41cf8a:	xor    DWORD PTR [edx],edx
  41cf8c:	jmp    0x2734:0xb6fe41ee
  41cf93:	or     DWORD PTR [ecx-0x56],eax
  41cf96:	stc    
  41cf97:	stc    
  41cf98:	inc    ecx
  41cf99:	adc    eax,0x6120cfa8
  41cf9e:	cmc    
  41cf9f:	mov    al,0x10
  41cfa1:	sub    eax,0x54b7096f
  41cfa6:	cmp    DWORD PTR [esi+ebx*8+0x19c699fc],esi
  41cfad:	and    BYTE PTR [edx+0x48004d79],0x1
  41cfb4:	call   0x1c9:0x49c6fff9
  41cfbb:	sbb    eax,0xcd091e4d
  41cfc0:	hlt    
  41cfc1:	jecxz  0x41cfdb
  41cfc3:	sbb    ebp,ebp
  41cfc5:	scas   al,BYTE PTR es:[edi]
  41cfc6:	aas    
  41cfc7:	xor    eax,0xb1f24192
  41cfcc:	xor    al,BYTE PTR [ecx]
  41cfce:	push   0x59064277
  41cfd3:	inc    eax
  41cfd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cfd5:	push   ds
  41cfd6:	mov    ecx,0x4c7bd17b
  41cfdb:	int3   
  41cfdc:	aas    
  41cfdd:	mov    ds:0xa8116f3d,eax
  41cfe2:	dec    ebx
  41cfe3:	cdq    
  41cfe4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cfe5:	lods   al,BYTE PTR ds:[esi]
  41cfe6:	cmp    dl,ch
  41cfe8:	push   edi
  41cfe9:	inc    edx
  41cfea:	test   DWORD PTR [ecx+0x75],0x3067d7c8
  41cff1:	ins    DWORD PTR es:[edi],dx
  41cff2:	dec    ecx
  41cff3:	mov    bl,0xd9
  41cff5:	(bad)  [ecx-0x55c6ab8b]
  41cffb:	ins    BYTE PTR es:[edi],dx
  41cffc:	sub    edi,esi
  41cffe:	loopne 0x41d014
  41d000:	mov    al,BYTE PTR [esi+ecx*2-0x70]
  41d004:	cli    
  41d005:	sub    edx,eax
  41d007:	or     ch,BYTE PTR [eax]
  41d009:	mov    edx,0x2395726c
  41d00e:	dec    edx
  41d00f:	aad    0x55
  41d011:	xchg   esp,eax
  41d012:	mov    edx,0x6796af1
  41d017:	sub    al,0x6d
  41d019:	xor    edx,edi
  41d01b:	jmp    0xabc4039
  41d020:	mov    esp,0xe5f8037c
  41d025:	outs   dx,DWORD PTR ds:[esi]
  41d026:	mov    ebp,0xb0b1bc03
  41d02b:	push   ecx
  41d02c:	add    BYTE PTR [eax],ch
  41d02e:	ret    
  41d02f:	cld    
  41d030:	(bad)  
  41d031:	int    0x39
  41d033:	lock fwait
  41d035:	xlat   BYTE PTR ds:[ebx]
  41d036:	cmp    DWORD PTR [esi-0x2a94a0e1],0xf621a377
  41d040:	mov    dh,0x96
  41d042:	mov    esp,0x7c00154b
  41d047:	mov    esp,0x4d67072e
  41d04c:	test   DWORD PTR [eax+0x6c79f5c6],esi
  41d052:	xor    DWORD PTR [edx-0x60],ebp
  41d055:	sub    ah,BYTE PTR [edi+0x73]
  41d058:	int    0xfe
  41d05a:	imul   esp,DWORD PTR [ebx],0x9b67d416
  41d060:	jmp    0x41d033
  41d062:	fcomp  DWORD PTR [eax+0x609153f]
  41d068:	sub    al,cl
  41d06a:	mov    esi,DWORD PTR [ebx+ebp*2]
  41d06d:	jmp    0x5c47:0xa80973c3
  41d074:	or     esp,DWORD PTR [eax]
  41d076:	and    eax,0x16d95da0
  41d07b:	sti    
  41d07c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d07d:	bound  esp,QWORD PTR [eax-0x42]
  41d080:	inc    eax
  41d081:	daa    
  41d082:	sub    BYTE PTR [eax],dl
  41d084:	rcl    DWORD PTR [edx+0x6506186f],0x25
  41d08b:	pusha  
  41d08c:	lds    esi,FWORD PTR [ebx+ebx*1]
  41d08f:	pop    es
  41d090:	dec    esi
  41d091:	lds    edx,FWORD PTR [edi-0x47]
  41d094:	lds    esi,FWORD PTR [ecx+edx*2-0x1b]
  41d098:	aam    0x2c
  41d09a:	lock adc DWORD PTR [eax+0x1e],esp
  41d09e:	add    al,0x0
  41d0a0:	jl     0x41d0cb
  41d0a2:	outs   dx,DWORD PTR ds:[esi]
  41d0a3:	xchg   edx,eax
  41d0a4:	js     0x41d072
  41d0a6:	fdivrp st(2),st
  41d0a8:	mov    ds:0x2f7329ec,eax
  41d0ad:	ja     0x41d058
  41d0af:	gs cs mov esp,0x34c5e517
  41d0b6:	dec    esp
  41d0b7:	push   cs
  41d0b8:	pop    esi
  41d0b9:	pop    ds
  41d0ba:	add    dh,BYTE PTR [eax+0x7136cde4]
  41d0c0:	ss cs jno 0x41d0ce
  41d0c4:	loopne 0x41d0f5
  41d0c6:	pusha  
  41d0c7:	aad    0x77
  41d0c9:	pop    ds
  41d0ca:	mov    edx,0x4f2d317c
  41d0cf:	ss dec ebp
  41d0d1:	add    edx,ebp
  41d0d3:	mov    dh,0xf3
  41d0d5:	into   
  41d0d6:	scas   al,BYTE PTR es:[edi]
  41d0d7:	imul   edx,DWORD PTR [edi],0x208b9d56
  41d0dd:	mov    ebx,0x97f0f1ae
  41d0e2:	loopne 0x41d0fe
  41d0e4:	add    BYTE PTR [edx-0x7],bh
  41d0e7:	push   es
  41d0e8:	jmp    0x41d0f7
  41d0ea:	pop    ebx
  41d0eb:	cli    
  41d0ec:	retf   
  41d0ed:	in     eax,0xf8
  41d0ef:	cs enter 0x961,0x2c
  41d0f4:	push   es
  41d0f5:	clc    
  41d0f6:	outs   dx,BYTE PTR ds:[esi]
  41d0f7:	leave  
  41d0f8:	lds    eax,FWORD PTR [edx]
  41d0fa:	js     0x41d0e9
  41d0fc:	adc    BYTE PTR [eax],bl
  41d0fe:	repnz ficomp WORD PTR [ebp+0x736d6071]
  41d105:	popa   
  41d106:	mov    ds:0xcff57000,eax
  41d10b:	lahf   
  41d10c:	clc    
  41d10d:	shl    edx,1
  41d10f:	(bad)  
  41d110:	dec    ebx
  41d111:	jg     0x41d0ea
  41d113:	(bad)  [edx]
  41d115:	xchg   edi,eax
  41d116:	popa   
  41d117:	mov    al,0x17
  41d119:	lods   al,BYTE PTR ds:[esi]
  41d11a:	pop    edx
  41d11b:	in     eax,0xd4
  41d11d:	jecxz  0x41d10a
  41d11f:	or     esp,DWORD PTR [esi]
  41d121:	mov    ebp,0x3c800b1d
  41d126:	ss pop eax
  41d128:	jae    0x41d176
  41d12a:	push   ebx
  41d12b:	outs   dx,BYTE PTR ds:[esi]
  41d12c:	sbb    edx,DWORD PTR [esi+0x77]
  41d12f:	mov    dh,0xb9
  41d131:	and    BYTE PTR [edx],0x28
  41d134:	dec    esp
  41d135:	arpl   WORD PTR [ecx],dx
  41d137:	push   ss
  41d138:	xlat   BYTE PTR ds:[ebx]
  41d139:	mov    ah,0x71
  41d13b:	inc    ebp
  41d13c:	adc    DWORD PTR [eax+0x7f],0x6f34b1b3
  41d143:	and    dh,BYTE PTR [edi+edx*4]
  41d146:	mov    ebx,0x3ad44546
  41d14b:	clc    
  41d14c:	mov    cl,0xe1
  41d14e:	mov    ds:0x2531ee70,al
  41d153:	pop    ds
  41d154:	xor    eax,0x43b29f4e
  41d159:	mov    ds:0x8d412b43,eax
  41d15e:	int    0xe3
  41d160:	or     dl,BYTE PTR [eax+0x45]
  41d163:	rcr    BYTE PTR [eax-0x5f],1
  41d166:	clc    
  41d167:	adc    eax,DWORD PTR [eax+0x37e44417]
  41d16d:	push   edi
  41d16e:	dec    esi
  41d16f:	ret    0xe509
  41d172:	mov    al,ds:0xac4964c1
  41d177:	test   eax,0xd48c3453
  41d17c:	ds pop edi
  41d17e:	add    bl,BYTE PTR [ebx+0x31f2d050]
  41d184:	shl    DWORD PTR [edx],0xf7
  41d187:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d188:	ins    BYTE PTR es:[edi],dx
  41d189:	or     eax,0x53da4bc8
  41d18e:	daa    
  41d18f:	or     ch,BYTE PTR [ecx+0x7a]
  41d192:	(bad)  
  41d193:	lods   al,BYTE PTR ds:[esi]
  41d194:	jmp    0xece4:0x9eb98081
  41d19b:	xor    dl,BYTE PTR ds:0x3ed53446
  41d1a1:	or     al,BYTE PTR [ebp+eiz*2+0x2e8da042]
  41d1a8:	and    eax,0xd40bba34
  41d1ad:	addr16 hlt 
  41d1af:	push   eax
  41d1b0:	xchg   edi,eax
  41d1b1:	in     eax,0xe0
  41d1b3:	(bad)  
  41d1b4:	jnp    0x41d13c
  41d1b6:	or     esp,DWORD PTR [bx+si-0x4a]
  41d1ba:	aaa    
  41d1bb:	sti    
  41d1bc:	rcr    DWORD PTR [edi],1
  41d1be:	xor    al,0x0
  41d1c0:	cld    
  41d1c1:	out    0xc6,al
  41d1c3:	sub    ebx,DWORD PTR [edi+0x39]
  41d1c6:	push   ds
  41d1c7:	lock jmp 0x78dfe3c6
  41d1cd:	aam    0x5e
  41d1cf:	mov    edi,0xbf3f49dc
  41d1d4:	out    dx,eax
  41d1d5:	pop    edx
  41d1d6:	and    eax,0xed4986f3
  41d1db:	inc    eax
  41d1dc:	cmp    bh,BYTE PTR ds:0xafa84e7a
  41d1e2:	adc    DWORD PTR [edi],edx
  41d1e4:	jecxz  0x41d1ed
  41d1e6:	loopne 0x41d217
  41d1e8:	mov    eax,0x41cd000
  41d1ed:	mov    ecx,0x60af3a2
  41d1f2:	push   esp
  41d1f3:	mov    BYTE PTR [edi*2-0x8f085c1],bh
  41d1fa:	(bad)  
  41d1fb:	(bad)  
  41d1fc:	repnz icebp 
  41d1fe:	add    BYTE PTR [ebx],cl
  41d200:	add    BYTE PTR [ebp-0x242af072],dl
  41d206:	mov    al,0x72
  41d208:	mov    esi,0x1620974c
  41d20d:	shl    BYTE PTR [eax-0xe1cd53f],cl
  41d213:	repnz mov BYTE PTR [edi],al
  41d216:	mov    esp,DWORD PTR [eax-0xd2e2a1d]
  41d21c:	pop    eax
  41d21d:	pop    esi
  41d21e:	pop    esp
  41d21f:	ss fmul st(0),st
  41d222:	mov    cl,dl
  41d224:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d225:	xchg   BYTE PTR [eax-0x22],bl
  41d228:	sbb    BYTE PTR [eax+0x24],ch
  41d22b:	mov    ah,0x6
  41d22d:	loopne 0x41d1ba
  41d22f:	in     eax,dx
  41d230:	aam    0x70
  41d232:	in     al,dx
  41d233:	es aas 
  41d235:	cmc    
  41d236:	call   0x5954c1b0
  41d23b:	fs aaa 
  41d23d:	jp     0x41d209
  41d23f:	inc    ebx
  41d240:	cmp    al,0x2e
  41d242:	jmp    0x41d28a
  41d244:	fxtract 
  41d246:	fimul  DWORD PTR [esi-0x6e]
  41d249:	xchg   edi,eax
  41d24a:	mov    esi,0xe1e55869
  41d24f:	das    
  41d250:	sub    esi,DWORD PTR [ebp-0x6f21578e]
  41d256:	sub    DWORD PTR [eax-0x7486842f],0x99aa5900
  41d260:	adc    eax,0x94c7476b
  41d265:	shl    BYTE PTR [edx],0x12
  41d268:	push   eax
  41d269:	fisttp WORD PTR [ebx+0x10]
  41d26c:	pushf  
  41d26d:	dec    esi
  41d26e:	ret    
  41d26f:	cs add eax,0xdbe01285
  41d275:	rcr    DWORD PTR [ecx+0x506c20e7],0x9d
  41d27c:	add    al,0x9f
  41d27e:	cmp    eax,0xeed7801b
  41d283:	jne    0x41d248
  41d285:	in     al,dx
  41d286:	icebp  
  41d287:	(bad)  
  41d288:	mov    esi,0xc5dc5f80
  41d28d:	es inc ebx
  41d28f:	mov    ah,0x97
  41d291:	aaa    
  41d292:	sbb    eax,0xf927f93e
  41d297:	jge    0x41d288
  41d299:	mov    eax,0xc7f9f076
  41d29e:	mov    edx,0x96ef5ff9
  41d2a3:	sar    DWORD PTR [ebx+ebx*8-0x70d068ff],cl
  41d2aa:	pop    ebp
  41d2ab:	adc    BYTE PTR [esi+eax*8+0x4f],0x1e
  41d2b0:	add    bh,BYTE PTR [ecx]
  41d2b2:	jmp    0x41d2fa
  41d2b4:	in     eax,0xea
  41d2b6:	test   BYTE PTR [edx-0x537aa319],bl
  41d2bc:	xchg   DWORD PTR ds:0xe71a5426,edi
  41d2c2:	and    eax,0xc82d6f57
  41d2c7:	scas   eax,DWORD PTR es:[edi]
  41d2c8:	push   ds
  41d2c9:	push   edi
  41d2ca:	jmp    0x8b0fed89
  41d2cf:	imul   DWORD PTR [esi]
  41d2d1:	lock inc ebx
  41d2d3:	inc    esp
  41d2d4:	stc    
  41d2d5:	scas   al,BYTE PTR es:[edi]
  41d2d6:	add    BYTE PTR [edi+0x3],ah
  41d2d9:	test   eax,0x8459567d
  41d2de:	push   edx
  41d2df:	push   0xeca52e35
  41d2e4:	jmp    0xa418:0x2ceb9be5
  41d2eb:	lods   al,BYTE PTR ds:[esi]
  41d2ec:	mov    ds:0xe516438,al
  41d2f1:	nop
  41d2f2:	mov    eax,ds:0xb34243ce
  41d2f7:	adc    esi,DWORD PTR [ecx-0x1169110f]
  41d2fd:	fs mov esi,0xd7821aca
  41d303:	jecxz  0x41d28f
  41d305:	mov    ebp,0xb42f5201
  41d30a:	gs jne 0x41d346
  41d30d:	mov    BYTE PTR [eax-0x47],ah
  41d310:	add    esi,DWORD PTR [eax-0x1fdd095f]
  41d316:	(bad)  
  41d317:	dec    eax
  41d318:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d319:	push   ds
  41d31a:	lea    esp,[ecx-0x59]
  41d31d:	add    BYTE PTR [ebx+0xa],0xc6
  41d321:	sub    dh,BYTE PTR [ebx-0x4a]
  41d324:	scas   eax,DWORD PTR es:[edi]
  41d325:	mov    ah,0x55
  41d327:	rcr    DWORD PTR [eax+0x6deaf6d2],cl
  41d32d:	and    edx,DWORD PTR [ebx]
  41d32f:	fwait
  41d330:	add    bl,BYTE PTR [edi-0x6a]
  41d333:	mov    cl,0x48
  41d335:	fist   DWORD PTR [edx-0x62]
  41d338:	sub    al,0xfa
  41d33a:	and    BYTE PTR [ebp-0x54],ch
  41d33d:	sub    al,0x54
  41d33f:	mov    dl,0x1f
  41d341:	(bad)  [edi+0x30]
  41d344:	mov    al,ds:0xa4107294
  41d349:	sbb    bl,dl
  41d34b:	outs   dx,DWORD PTR ds:[esi]
  41d34c:	in     al,dx
  41d34d:	clc    
  41d34e:	xor    DWORD PTR fs:[edx-0x1],edi
  41d352:	add    eax,eax
  41d354:	cld    
  41d355:	ds jo  0x41d3d2
  41d358:	or     al,0x9c
  41d35a:	int    0x66
  41d35c:	js     0x41d343
  41d35e:	jbe    0x41d319
  41d360:	(bad)  
  41d361:	jmp    0x41d340
  41d363:	daa    
  41d364:	aas    
  41d365:	repz dec edi
  41d367:	push   esi
  41d369:	loop   0x41d342
  41d36b:	mov    al,0xe1
  41d36d:	mov    al,0x71
  41d36f:	add    BYTE PTR [eax],al
  41d371:	sub    BYTE PTR [edi],0xfe
  41d374:	std    
  41d375:	fbld   TBYTE PTR [esi-0x50702a1]
  41d37b:	xchg   edi,esi
  41d37d:	imul   DWORD PTR [edi-0x24251f83]
  41d383:	push   cs
  41d384:	sahf   
  41d385:	js     0x41d368
  41d387:	pop    es
  41d388:	fistp  QWORD PTR [eax-0x56]
  41d38b:	sbb    al,0xf5
  41d38d:	push   edi
  41d38e:	scas   eax,DWORD PTR es:[edi]
  41d38f:	mov    esi,0xcb07adf5
  41d394:	stc    
  41d395:	mov    ebp,0xb8f2d247
  41d39a:	out    dx,eax
  41d39b:	cs pusha 
  41d39d:	(bad)  
  41d39e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d39f:	rcr    ebp,cl
  41d3a1:	mov    dl,0x2c
  41d3a3:	jge    0x41d3a7
  41d3a5:	shl    BYTE PTR [edi-0x5c],1
  41d3a8:	popa   
  41d3a9:	inc    eax
  41d3aa:	mov    dl,0x81
  41d3ac:	mov    esp,0xbb909094
  41d3b1:	retf   
  41d3b2:	test   eax,0x2943194b
  41d3b7:	sbb    BYTE PTR [edx+0x64ba08eb],cl
  41d3bd:	cli    
  41d3be:	call   0xff0a3f61
  41d3c3:	mov    ch,BYTE PTR [ebx-0x45]
  41d3c6:	into   
  41d3c7:	push   edi
  41d3c8:	fs repz mov esp,0x600f4cb9
  41d3cf:	sub    eax,0x5911e5d8
  41d3d4:	pop    ebp
  41d3d5:	adc    dh,dl
  41d3d7:	jb     0x41d425
  41d3d9:	xchg   esi,ebx
  41d3db:	cmp    DWORD PTR [ebp+0x53],0xfffffff6
  41d3df:	adc    DWORD PTR [ebx-0x678bbc80],0x65f64333
  41d3e9:	test   eax,0xbfa9fa69
  41d3ee:	xchg   esi,eax
  41d3ef:	lea    esp,ss:[ebp+0x69]
  41d3f3:	je     0x41d42a
  41d3f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d3f6:	cli    
  41d3f7:	dec    edx
  41d3f8:	outs   dx,DWORD PTR ds:[esi]
  41d3f9:	sub    cl,bh
  41d3fb:	xchg   edx,eax
  41d3fc:	inc    eax
  41d3fd:	push   edi
  41d3fe:	xchg   BYTE PTR [esi+ebx*2-0x4e1d3f41],ch
  41d405:	sub    al,0x68
  41d407:	retf   
  41d408:	or     bh,BYTE PTR [ebx+0x350f79ef]
  41d40e:	lods   eax,DWORD PTR ds:[esi]
  41d40f:	(bad)  
  41d410:	sub    BYTE PTR [ebx+0x15565de4],cl
  41d416:	mov    ebp,0x845bf814
  41d41b:	mov    ch,0xab
  41d41d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d41e:	std    
  41d41f:	push   0x5
  41d421:	dec    edx
  41d422:	cmc    
  41d423:	(bad)  
  41d424:	outs   dx,BYTE PTR ds:[esi]
  41d425:	inc    eax
  41d426:	int    0x67
  41d428:	adc    ah,BYTE PTR [ebx]
  41d42a:	sub    DWORD PTR [esi-0x72],ebx
  41d42d:	mov    cl,0xa8
  41d42f:	adc    eax,0xb2d79865
  41d434:	mov    WORD PTR [ebp-0x6c],gs
  41d437:	jae    0x41d3e2
  41d439:	jnp    0x41d45d
  41d43b:	xchg   esp,eax
  41d43c:	xor    esp,DWORD PTR [edi-0x5a6c66b6]
  41d442:	mov    eax,ds:0x160049f5
  41d447:	inc    ebx
  41d448:	icebp  
  41d449:	neg    BYTE PTR [eax]
  41d44b:	mov    bl,0x48
  41d44d:	or     eax,0x171248c3
  41d452:	nop
  41d453:	mov    dh,0x45
  41d455:	fld    TBYTE PTR [esi-0x524e6b5b]
  41d45b:	add    BYTE PTR [ebx+esi*8+0x4c],ah
  41d45f:	and    eax,0xfc643c71
  41d464:	shl    DWORD PTR [ebp+0x60],1
  41d467:	push   ecx
  41d468:	push   eax
  41d469:	adc    dh,BYTE PTR [edx+0x9c8596f]
  41d46f:	pop    eax
  41d470:	sub    al,0xd3
  41d472:	nop
  41d473:	lods   eax,DWORD PTR ds:[esi]
  41d474:	mov    ds:0x549521cb,al
  41d479:	out    dx,al
  41d47a:	xchg   ebp,eax
  41d47b:	xchg   edx,eax
  41d47c:	into   
  41d47d:	add    BYTE PTR [edx+esi*4-0x101ce7a8],0xd2
  41d485:	mov    dl,0xeb
  41d487:	ja     0x41d418
  41d489:	(bad)  
  41d48a:	push   ds
  41d48b:	loopne 0x41d4f1
  41d48d:	call   0x3cc92488
  41d492:	cmp    edi,DWORD PTR [esp+edi*1]
  41d495:	mov    esp,0x9f4fef71
  41d49a:	jle    0x41d496
  41d49c:	mov    edi,0xeef2dff7
  41d4a1:	xchg   edi,eax
  41d4a2:	push   cs
  41d4a3:	pop    edi
  41d4a4:	std    
  41d4a5:	(bad)
  41d4a8:	lahf   
  41d4a9:	sbb    al,0x7d
  41d4ab:	sti    
  41d4ac:	mov    bl,0xdf
  41d4ae:	fnsave [eax+0x6d86dfeb]
  41d4b4:	fadd   DWORD PTR [esi+0x6d86d86d]
  41d4ba:	fadd   DWORD PTR [esi+0x6d86d86d]
  41d4c0:	fadd   DWORD PTR [esi+0x6d86d86d]
  41d4c6:	fadd   DWORD PTR [esi+0x6d86d86d]
  41d4cc:	fadd   DWORD PTR [esi+0x7ff08e3f]
  41d4d2:	lahf   
  41d4d3:	std    
  41d4d4:	push   ebp
  41d4d5:	inc    esp
  41d4d6:	cs pop edx
  41d4d8:	adc    bh,BYTE PTR [edi+0x0]
  41d4db:	add    BYTE PTR [eax],al
  41d4dd:	add    BYTE PTR [ecx+0x45],cl
  41d4e0:	dec    esi
  41d4e1:	inc    esp
  41d4e2:	scas   al,BYTE PTR es:[edi]
  41d4e3:	inc    edx
  41d4e4:	pusha  
  41d4e5:	add    BYTE PTR [eax],0x0
  41d4e8:	sub    BYTE PTR [eax],al
  41d4ea:	add    BYTE PTR [eax],al
  41d4ec:	xor    BYTE PTR [eax],al
  41d4ee:	add    BYTE PTR [eax],al
  41d4f0:	pusha  
  41d4f1:	add    BYTE PTR [eax],al
  41d4f3:	add    BYTE PTR [ecx],al
  41d4f5:	add    BYTE PTR [eax],ah
  41d4f7:	add    BYTE PTR [eax],al
  41d4f9:	add    BYTE PTR [eax],al
  41d4fb:	add    BYTE PTR [eax+0x25],al
	...
  41d5dd:	add    BYTE PTR [eax],al
  41d5df:	add    BYTE PTR [ebx+eax*2],bl
  41d5e2:	mov    DWORD PTR [eax+0x13],edx
  41d5e5:	cmp    eax,0x3805899b
  41d5ea:	pushf  
  41d5eb:	xchg   ebx,eax
  41d5ec:	add    BYTE PTR [edx],dh
  41d5ee:	fwait
  41d5ef:	xchg   esi,eax
  41d5f0:	add    BYTE PTR [edx],dh
  41d5f2:	pushf  
  41d5f3:	cwde   
  41d5f4:	or     edi,DWORD PTR [edi]
  41d5f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5f7:	cwde   
  41d5f8:	sbb    ecx,DWORD PTR [edi-0x4f]
  41d5fb:	cdq    
  41d5fc:	sbb    DWORD PTR [esi-0x4e],ecx
  41d5ff:	cdq    
  41d600:	sbb    DWORD PTR [esi-0x4f],ecx
  41d603:	cdq    
  41d604:	sbb    DWORD PTR [edi-0x4e],ecx
  41d607:	cdq    
  41d608:	sbb    DWORD PTR [eax-0x4d],edx
  41d60b:	cdq    
  41d60c:	sbb    dl,BYTE PTR [eax-0x4c]
  41d60f:	cdq    
  41d610:	sbb    DWORD PTR [ecx-0x4c],edx
  41d613:	cdq    
  41d614:	sbb    DWORD PTR [ecx-0x4c],edx
  41d617:	cdq    
  41d618:	sbb    dl,BYTE PTR [ecx-0x4b]
  41d61b:	cdq    
  41d61c:	sbb    BYTE PTR [edi-0x4c],cl
  41d61f:	cdq    
  41d620:	push   ss
  41d621:	dec    edi
  41d622:	mov    ch,0x9a
  41d624:	push   ss
  41d625:	dec    edi
  41d626:	mov    ch,0x9a
  41d628:	push   ss
  41d629:	push   eax
  41d62a:	mov    ch,0x9a
  41d62c:	push   ss
  41d62d:	dec    edi
  41d62e:	mov    ch,0x9a
  41d630:	push   ss
  41d631:	push   eax
  41d632:	mov    ch,0x9a
  41d634:	push   ss
  41d635:	push   eax
  41d636:	mov    ch,0x9a
  41d638:	push   ss
  41d639:	push   eax
  41d63a:	mov    ch,0x9a
  41d63c:	push   ss
  41d63d:	push   eax
  41d63e:	mov    dh,0x9a
  41d640:	push   ss
  41d641:	push   eax
  41d642:	mov    dh,0x9a
  41d644:	push   ss
  41d645:	push   ecx
  41d646:	mov    dh,0x9a
  41d648:	pop    ss
  41d649:	push   ecx
  41d64a:	mov    bh,0x9a
  41d64c:	push   ss
  41d64d:	push   ecx
  41d64e:	mov    bh,0x9a
  41d650:	push   ss
  41d651:	push   ecx
  41d652:	mov    eax,0xb751179a
  41d657:	call   0x5217:0x9ab85217
  41d65e:	mov    ecx,0xb851179a
  41d663:	call   0x5118:0x9ab65017
  41d66a:	mov    dh,0x9a
  41d66c:	push   ss
  41d66d:	dec    esi
  41d66e:	mov    bl,0x99
  41d670:	add    BYTE PTR [edi],dh
  41d672:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d673:	xchg   edi,eax
  41d674:	add    eax,0x1693a63e
  41d679:	inc    esp
  41d67a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d67b:	mov    BYTE PTR [ecx],ch
  41d67d:	dec    edi
  41d67e:	(bad)  
  41d67f:	aas    
	...
  41d6a0:	add    BYTE PTR [eax-0x3b],ah
  41d6a3:	jmp    0x62ca8
  41d6a8:	add    BYTE PTR [eax-0x3b],bl
  41d6ab:	inc    DWORD PTR [eax]
  41d6ad:	pop    eax
  41d6ae:	(bad)  
  41d6b1:	pop    eax
  41d6b2:	(bad)  
  41d6b5:	pop    eax
  41d6b6:	(bad)  
  41d6b9:	pop    eax
  41d6ba:	(bad)  
  41d6bd:	pop    ecx
  41d6be:	(bad)  
  41d6c1:	pop    ecx
  41d6c2:	(bad)  
  41d6c5:	pop    ecx
  41d6c6:	(bad)  
  41d6c9:	pop    ecx
  41d6ca:	(bad)  
  41d6cd:	pop    edx
  41d6ce:	(bad)  
  41d6d1:	pop    edx
  41d6d2:	(bad)  
  41d6d5:	pop    edx
  41d6d6:	(bad)  
  41d6d9:	pop    edx
  41d6da:	(bad)  
  41d6dd:	pop    edx
  41d6de:	(bad)  
  41d6df:	inc    DWORD PTR [eax]
  41d6e1:	pop    edx
  41d6e2:	(bad)  
  41d6e3:	inc    DWORD PTR [eax]
  41d6e5:	pop    edx
  41d6e6:	(bad)  
  41d6e7:	inc    DWORD PTR [eax]
  41d6e9:	pop    edx
  41d6ea:	(bad)  
  41d6eb:	inc    DWORD PTR [eax]
  41d6ed:	pop    ebx
  41d6ee:	(bad)  
  41d6ef:	inc    DWORD PTR [eax]
  41d6f1:	pop    ebx
  41d6f2:	(bad)  
  41d6f3:	inc    DWORD PTR [eax]
  41d6f5:	pop    ebx
  41d6f6:	(bad)  
  41d6f7:	inc    DWORD PTR [eax]
  41d6f9:	pop    ebx
  41d6fa:	(bad)  
  41d6fb:	inc    DWORD PTR [eax]
  41d6fd:	pop    ebx
  41d6fe:	(bad)  
  41d6ff:	inc    DWORD PTR [eax]
  41d701:	pop    ebx
  41d702:	(bad)  
  41d703:	inc    DWORD PTR [eax]
  41d705:	pop    ebx
  41d706:	(bad)  
  41d707:	inc    DWORD PTR [eax]
  41d709:	pop    ebx
  41d70a:	(bad)  
  41d70b:	inc    DWORD PTR [eax]
  41d70d:	pop    ebx
  41d70e:	(bad)  
  41d70f:	inc    DWORD PTR [eax]
  41d711:	pop    ebx
  41d712:	(bad)  
  41d713:	inc    DWORD PTR [eax]
  41d715:	pop    ebx
  41d716:	(bad)  
  41d717:	inc    DWORD PTR [eax]
  41d719:	pop    ebx
  41d71a:	(bad)  
  41d71b:	inc    DWORD PTR [eax]
  41d71d:	pop    ebx
  41d71e:	(bad)  
  41d71f:	inc    DWORD PTR [eax]
  41d721:	pop    ebx
  41d722:	(bad)  
  41d723:	inc    DWORD PTR [eax]
  41d725:	pop    ebx
  41d726:	(bad)  
  41d727:	inc    DWORD PTR [eax]
  41d729:	pop    ebx
  41d72a:	(bad)  
  41d72b:	inc    DWORD PTR [eax]
  41d72d:	pop    ebx
  41d72e:	(bad)  
  41d72f:	inc    DWORD PTR [eax]
  41d731:	pop    ebx
  41d732:	(bad)  
  41d733:	inc    DWORD PTR [eax]
  41d735:	pop    ebx
  41d736:	(bad)  
  41d737:	inc    DWORD PTR [eax]
  41d739:	pop    ebx
  41d73a:	(bad)  
  41d73d:	pop    edi
  41d73e:	mov    ebp,0xd4
	...
  41d75f:	add    BYTE PTR ds:0x38d3f9a8,cl
  41d765:	enter  0xffff,0x38
  41d769:	(bad)  
  41d76a:	(bad)  
  41d76b:	(bad)  
  41d76c:	cmp    dh,al
  41d76e:	(bad)  
  41d76f:	(bad)  
  41d770:	cmp    ch,al
  41d772:	(bad)  
  41d773:	(bad)  
  41d774:	cmp    ch,al
  41d776:	(bad)  
  41d777:	(bad)  
  41d778:	cmp    bh,al
  41d77a:	(bad)  
  41d77b:	(bad)  
  41d77c:	cmp    dl,cl
  41d77e:	(bad)  
  41d77f:	(bad)  
  41d780:	cmp    al,cl
  41d782:	(bad)  
  41d783:	(bad)  
  41d784:	cmp    al,cl
  41d786:	(bad)  
  41d787:	(bad)  
  41d788:	cmp    ah,al
  41d78a:	(bad)  
  41d78b:	(bad)  
  41d78c:	cmp    BYTE PTR [ebp-0x45c70001],bh
  41d792:	(bad)  
  41d793:	(bad)  
  41d794:	cmp    BYTE PTR [ecx-0x47c70001],bh
  41d79a:	(bad)  
  41d79b:	(bad)  
  41d79c:	cmp    BYTE PTR [eax-0x48c70001],bh
  41d7a2:	(bad)  
  41d7a3:	(bad)  
  41d7a4:	cmp    BYTE PTR [edi-0x48c70001],dh
  41d7aa:	(bad)  
  41d7ab:	(bad)  
  41d7ac:	cmp    BYTE PTR [edi-0x48c70001],dh
  41d7b2:	(bad)  
  41d7b3:	(bad)  
  41d7b4:	cmp    BYTE PTR [eax-0x47c70001],bh
  41d7ba:	(bad)  
  41d7bb:	(bad)  
  41d7bc:	cmp    BYTE PTR [eax-0x46c70001],bh
  41d7c2:	(bad)  
  41d7c3:	(bad)  
  41d7c4:	cmp    BYTE PTR [edx-0x45c70001],bh
  41d7ca:	(bad)  
  41d7cb:	(bad)  
  41d7cc:	cmp    BYTE PTR [ebp-0x3ec70001],bh
  41d7d2:	(bad)  
  41d7d3:	(bad)  
  41d7d4:	cmp    al,cl
  41d7d6:	(bad)  
  41d7d7:	(bad)  
  41d7d8:	cmp    bl,cl
  41d7da:	(bad)  
  41d7db:	(bad)  
  41d7dc:	cmp    bl,cl
  41d7de:	(bad)  
  41d7df:	(bad)  
  41d7e0:	cmp    bl,cl
  41d7e2:	(bad)  
  41d7e3:	(bad)  
  41d7e4:	cmp    ah,cl
  41d7e6:	(bad)  
  41d7e7:	(bad)  
  41d7e8:	cmp    ah,cl
  41d7ea:	(bad)  
  41d7eb:	(bad)  
  41d7ec:	cmp    ah,cl
  41d7ee:	(bad)  
  41d7ef:	(bad)  
  41d7f0:	cmp    ch,cl
  41d7f2:	(bad)  
  41d7f3:	(bad)  
  41d7f4:	cmp    bh,cl
  41d7f6:	(bad)  
  41d7f7:	(bad)  
  41d7f8:	cmp    dh,dl
  41d7fa:	(bad)  
  41d7fb:	call   DWORD PTR [edx]
  41d7fd:	stos   BYTE PTR es:[edi],al
  41d7fe:	out    dx,eax
  41d7ff:	mov    ebx,0x0
	...
  41d820:	aas    
  41d821:	mov    edx,0xad0097f9
  41d826:	(bad)  
  41d827:	inc    DWORD PTR [eax]
  41d829:	scas   al,BYTE PTR es:[edi]
  41d82a:	(bad)  
  41d82b:	inc    DWORD PTR [eax]
  41d82d:	stos   DWORD PTR es:[edi],eax
  41d82e:	(bad)  
  41d82f:	inc    DWORD PTR [eax]
  41d831:	test   eax,0xa900ffff
  41d836:	(bad)  
  41d837:	inc    DWORD PTR [eax]
  41d839:	stos   BYTE PTR es:[edi],al
  41d83a:	(bad)  
  41d83b:	inc    DWORD PTR [eax]
  41d83d:	stos   DWORD PTR es:[edi],eax
  41d83e:	(bad)  
  41d83f:	inc    DWORD PTR [eax]
  41d841:	stos   DWORD PTR es:[edi],eax
  41d842:	(bad)  
  41d843:	inc    DWORD PTR [eax]
  41d845:	mov    ds:0x8e00fffe,eax
  41d84a:	sti    
  41d84b:	inc    DWORD PTR [eax]
  41d84d:	mov    bh,bl
  41d84f:	inc    DWORD PTR [eax]
  41d851:	mov    bh,bl
  41d853:	inc    DWORD PTR [eax]
  41d855:	mov    edi,ebx
  41d857:	inc    DWORD PTR [eax]
  41d859:	mov    ebx,?
  41d85b:	inc    DWORD PTR [eax]
  41d85d:	(bad)  
  41d85e:	sti    
  41d85f:	inc    DWORD PTR [eax]
  41d861:	mov    ebx,?
  41d863:	inc    DWORD PTR [eax]
  41d865:	mov    ebx,?
  41d867:	inc    DWORD PTR [eax]
  41d869:	(bad)  
  41d86a:	cld    
  41d86b:	inc    DWORD PTR [eax]
  41d86d:	(bad)  
  41d86e:	sti    
  41d86f:	inc    DWORD PTR [eax]
  41d871:	(bad)  
  41d872:	sti    
  41d873:	inc    DWORD PTR [eax]
  41d875:	(bad)  
  41d876:	sti    
  41d877:	inc    DWORD PTR [eax]
  41d879:	(bad)  
  41d87a:	sti    
  41d87b:	inc    DWORD PTR [eax]
  41d87d:	(bad)  
  41d87e:	sti    
  41d87f:	inc    DWORD PTR [eax]
  41d881:	(bad)  
  41d882:	sti    
  41d883:	inc    DWORD PTR [eax]
  41d885:	mov    ?,ebx
  41d887:	inc    DWORD PTR [eax]
  41d889:	mov    ?,ebx
  41d88b:	inc    DWORD PTR [eax]
  41d88d:	(bad)  
  41d88e:	sti    
  41d88f:	inc    DWORD PTR [eax]
  41d891:	mov    ?,ebx
  41d893:	inc    DWORD PTR [eax]
  41d895:	xchg   ebx,eax
  41d896:	sti    
  41d897:	inc    DWORD PTR [eax]
  41d899:	test   eax,0xaf00fffe
  41d89e:	(bad)  
  41d89f:	inc    DWORD PTR [eax]
  41d8a1:	scas   eax,DWORD PTR es:[edi]
  41d8a2:	(bad)  
  41d8a3:	inc    DWORD PTR [eax]
  41d8a5:	mov    al,0xff
  41d8a7:	inc    DWORD PTR [eax]
  41d8a9:	mov    cl,0xff
  41d8ab:	inc    DWORD PTR [eax]
  41d8ad:	mov    dl,0xff
  41d8af:	inc    DWORD PTR [eax]
  41d8b1:	mov    ah,0xff
  41d8b3:	inc    DWORD PTR [eax]
  41d8b5:	mov    dh,0xff
  41d8b7:	inc    DWORD PTR [eax]
  41d8b9:	mov    eax,0xcc57ffff
  41d8be:	sti    
  41d8bf:	je     0x41d8c1
	...
  41d8dd:	add    BYTE PTR [eax],al
  41d8df:	add    BYTE PTR [esi+edi*4-0xd],ah
  41d8e3:	push   ecx
  41d8e4:	add    BYTE PTR [ebx-0x5aff0003],ah
  41d8ea:	(bad)  
  41d8eb:	inc    DWORD PTR [eax]
  41d8ed:	mov    eax,ds:0x9f00fffd
  41d8f2:	cld    
  41d8f3:	inc    DWORD PTR [eax]
  41d8f5:	sahf   
  41d8f6:	cld    
  41d8f7:	inc    DWORD PTR [eax]
  41d8f9:	lahf   
  41d8fa:	cld    
  41d8fb:	inc    DWORD PTR [eax]
  41d8fd:	mov    eax,ds:0xa100fffd
  41d902:	std    
  41d903:	inc    DWORD PTR [eax]
  41d905:	mov    ecx,?
  41d907:	inc    DWORD PTR [eax]
  41d909:	cmp    eax,0xffffffff
  41d90c:	add    BYTE PTR [esi-0x76ff0006],al
  41d912:	sti    
  41d913:	inc    DWORD PTR [eax]
  41d915:	mov    edi,esp
  41d917:	inc    DWORD PTR [eax]
  41d919:	mov    ?,ebp
  41d91b:	inc    DWORD PTR [eax]
  41d91d:	nop
  41d91e:	(bad)  
  41d91f:	inc    DWORD PTR [eax]
  41d921:	xchg   ecx,eax
  41d922:	(bad)  
  41d923:	inc    DWORD PTR [eax]
  41d925:	nop
  41d926:	(bad)  
  41d927:	inc    DWORD PTR [eax]
  41d929:	mov    ?,esi
  41d92b:	inc    DWORD PTR [eax]
  41d92d:	mov    ?,esi
  41d92f:	inc    DWORD PTR [eax]
  41d931:	mov    ?,esi
  41d933:	inc    DWORD PTR [eax]
  41d935:	(bad)  
  41d936:	(bad)  
  41d937:	inc    DWORD PTR [eax]
  41d939:	nop
  41d93a:	(bad)  
  41d93b:	inc    DWORD PTR [eax]
  41d93d:	xchg   ecx,eax
  41d93e:	(bad)  
  41d93f:	inc    DWORD PTR [eax]
  41d941:	xchg   ecx,eax
  41d942:	(bad)  
  41d943:	inc    DWORD PTR [eax]
  41d945:	nop
  41d946:	std    
  41d947:	inc    DWORD PTR [eax]
  41d949:	mov    esp,?
  41d94b:	inc    DWORD PTR [eax]
  41d94d:	mov    ebx,edi
  41d94f:	inc    DWORD PTR [eax]
  41d951:	mov    cl,bh
  41d953:	inc    DWORD PTR [eax]
  41d955:	xchg   cl,bh
  41d957:	inc    DWORD PTR [eax]
  41d959:	xchg   edx,eax
  41d95a:	sti    
  41d95b:	inc    DWORD PTR [eax]
  41d95d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d95e:	(bad)  
  41d95f:	inc    DWORD PTR [eax]
  41d961:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d962:	std    
  41d963:	inc    DWORD PTR [eax]
  41d965:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d966:	std    
  41d967:	inc    DWORD PTR [eax]
  41d969:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d96a:	std    
  41d96b:	inc    DWORD PTR [eax]
  41d96d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d96e:	(bad)  
  41d96f:	inc    DWORD PTR [eax]
  41d971:	stos   BYTE PTR es:[edi],al
  41d972:	(bad)  
  41d973:	inc    DWORD PTR [eax]
  41d975:	mov    cl,0xff
  41d977:	inc    DWORD PTR [edx]
  41d979:	mov    ch,0xfe
  41d97b:	sti    
  41d97c:	test   esp,edx
  41d97e:	imul   DWORD PTR [ebx]
	...
  41d9a0:	xchg   eax,ecx
  41d9a2:	out    dx,eax
  41d9a3:	adc    DWORD PTR [ebx],ecx
  41d9a5:	mov    al,ds:0x9d00eaf9
  41d9aa:	cld    
  41d9ab:	inc    DWORD PTR [eax]
  41d9ad:	cdq    
  41d9ae:	sti    
  41d9af:	inc    DWORD PTR [eax]
  41d9b1:	xchg   edi,eax
  41d9b2:	cli    
  41d9b3:	inc    DWORD PTR [eax]
  41d9b5:	xchg   esi,eax
  41d9b6:	cli    
  41d9b7:	inc    DWORD PTR [eax]
  41d9b9:	cwde   
  41d9ba:	cli    
  41d9bb:	inc    DWORD PTR [eax]
  41d9bd:	call   0xfffa:0x9200fffb
  41d9c4:	add    BYTE PTR [esi-0xa],bh
  41d9c7:	inc    DWORD PTR [eax]
  41d9c9:	xchg   ecx,edi
  41d9cb:	inc    DWORD PTR [eax]
  41d9cd:	mov    bh,bl
  41d9cf:	inc    DWORD PTR [eax]
  41d9d1:	mov    esp,edi
  41d9d3:	inc    DWORD PTR [eax]
  41d9d5:	xchg   ebp,edi
  41d9d7:	inc    DWORD PTR [eax]
  41d9d9:	cmp    bl,0xff
  41d9dc:	add    BYTE PTR [ecx+edi*8-0x1],bh
  41d9e0:	add    BYTE PTR [esi-0xa],dh
  41d9e3:	inc    DWORD PTR [eax]
  41d9e5:	jb     0x41d9db
  41d9e7:	inc    DWORD PTR [eax]
  41d9e9:	outs   dx,DWORD PTR ds:[esi]
  41d9ea:	repnz inc DWORD PTR [eax]
  41d9ed:	outs   dx,BYTE PTR ds:[esi]
  41d9ee:	icebp  
  41d9ef:	inc    DWORD PTR [eax]
  41d9f1:	jo     0x41d9e5
  41d9f3:	inc    DWORD PTR [eax]
  41d9f5:	jbe    0x41d9eb
  41d9f7:	inc    DWORD PTR [eax]
  41d9f9:	jns    0x41d9f1
  41d9fb:	inc    DWORD PTR [eax]
  41d9fd:	cmp    cl,0xff
  41da00:	add    BYTE PTR [edx-0x6fff0004],cl
  41da06:	std    
  41da07:	inc    DWORD PTR [eax]
  41da09:	nop
  41da0a:	(bad)  
  41da0b:	inc    DWORD PTR [eax]
  41da0d:	nop
  41da0e:	std    
  41da0f:	inc    DWORD PTR [eax]
  41da11:	xchg   ecx,eax
  41da12:	cld    
  41da13:	inc    DWORD PTR [eax]
  41da15:	test   eax,edi
  41da17:	inc    DWORD PTR [eax]
  41da19:	xor    esi,0xfb9800ff
  41da1f:	inc    DWORD PTR [eax]
  41da21:	pushf  
  41da22:	sti    
  41da23:	inc    DWORD PTR [eax]
  41da25:	fwait
  41da26:	sti    
  41da27:	inc    DWORD PTR [eax]
  41da29:	pushf  
  41da2a:	sti    
  41da2b:	inc    DWORD PTR [eax]
  41da2d:	sahf   
  41da2e:	sti    
  41da2f:	inc    DWORD PTR [eax]
  41da31:	mov    ds:0xa900fffc,al
  41da36:	(bad)  
  41da37:	call   FWORD PTR [edx]
  41da39:	mov    bl,0xfb
  41da3b:	rcr    DWORD PTR [ebp+0x3f5d9],cl
	...
  41da61:	add    BYTE PTR [eax],al
  41da63:	add    BYTE PTR [ebx],ch
  41da65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da66:	rep stos DWORD PTR es:[edi],eax
  41da68:	add    BYTE PTR [esi-0x6bff0006],dl
  41da6e:	clc    
  41da6f:	inc    DWORD PTR [eax]
  41da71:	nop
  41da72:	clc    
  41da73:	inc    DWORD PTR [eax]
  41da75:	(bad)  
  41da76:	idiv   edi
  41da78:	add    BYTE PTR [edi-0x6eff0009],cl
  41da7e:	clc    
  41da7f:	inc    DWORD PTR [eax]
  41da81:	mov    bh,al
  41da83:	inc    DWORD PTR [eax]
  41da85:	xor    bh,0xff
  41da88:	add    BYTE PTR [eax+0x7400fff8],al
  41da8e:	hlt    
  41da8f:	inc    DWORD PTR [eax]
  41da91:	push   0xffffffed
  41da93:	inc    DWORD PTR [eax]
  41da95:	fs jmp 0xe6a1db9a
  41da9b:	inc    DWORD PTR [eax]
  41da9d:	pop    edi
  41da9e:	in     eax,0xff
  41daa0:	add    BYTE PTR [edi-0x1b],bl
  41daa3:	inc    DWORD PTR [eax]
  41daa5:	popa   
  41daa6:	out    0xff,eax
  41daa8:	add    BYTE PTR [ebx-0x19],ah
  41daab:	inc    DWORD PTR [eax]
  41daad:	fs jmp 0xeaa7dbb2
  41dab3:	inc    DWORD PTR [eax]
  41dab5:	imul   ebp,ebx,0xec6a00ff
  41dabb:	inc    DWORD PTR [eax]
  41dabd:	ins    BYTE PTR es:[edi],dx
  41dabe:	in     eax,dx
  41dabf:	inc    DWORD PTR [eax]
  41dac1:	outs   dx,DWORD PTR ds:[esi]
  41dac2:	out    dx,al
  41dac3:	inc    DWORD PTR [eax]
  41dac5:	jb     0x41dab7
  41dac7:	inc    DWORD PTR [eax]
  41dac9:	ja     0x41dabd
  41dacb:	inc    DWORD PTR [eax]
  41dacd:	xor    esi,0xf98900ff
  41dad3:	inc    DWORD PTR [eax]
  41dad5:	mov    edi,ebx
  41dad7:	inc    DWORD PTR [eax]
  41dad9:	cmp    eax,0xffffffff
  41dadc:	add    BYTE PTR [edx-0x6aff0008],cl
  41dae2:	stc    
  41dae3:	inc    DWORD PTR [eax]
  41dae5:	xchg   ebx,eax
  41dae6:	stc    
  41dae7:	inc    DWORD PTR [eax]
  41dae9:	xchg   ebx,eax
  41daea:	clc    
  41daeb:	inc    DWORD PTR [eax]
  41daed:	xchg   esi,eax
  41daee:	stc    
  41daef:	inc    DWORD PTR [eax]
  41daf1:	popf   
  41daf2:	sti    
  41daf3:	inc    DWORD PTR [eax]
  41daf5:	mov    ds:0xbc4bfffd,al
  41dafa:	test   DWORD PTR [ecx+0x0],0x0
	...
  41db24:	pop    ecx
  41db25:	mov    dl,0xee
  41db27:	pop    ebp
  41db28:	add    BYTE PTR [ecx-0x70ff0008],dl
  41db2e:	idiv   bh
  41db30:	add    BYTE PTR [ecx-0x78ff000b],cl
  41db36:	hlt    
  41db37:	inc    DWORD PTR [eax]
  41db39:	mov    ch,dh
  41db3b:	inc    DWORD PTR [eax]
  41db3d:	mov    dh,dh
  41db3f:	inc    DWORD PTR [eax]
  41db41:	jns    0x41db36
  41db43:	inc    DWORD PTR [eax]
  41db45:	imul   ebp,ebx,0xffffffff
  41db48:	add    BYTE PTR [ebp+ebx*8-0x1],bl
  41db4c:	add    BYTE PTR [edi-0x28],dl
  41db4f:	inc    DWORD PTR [eax]
  41db51:	pop    eax
  41db52:	fdivr  st,st(7)
  41db54:	add    BYTE PTR [ebp-0x25],bl
  41db57:	inc    DWORD PTR [eax]
  41db59:	pusha  
  41db5a:	(bad)  
  41db5c:	add    BYTE PTR [esi-0x20],bl
  41db5f:	inc    DWORD PTR [eax]
  41db61:	pop    edi
  41db62:	jecxz  0x41db63
  41db64:	add    BYTE PTR [edx-0x1a],ah
  41db67:	inc    DWORD PTR [eax]
  41db69:	gs call 0xe9a8dc6e
  41db6f:	inc    DWORD PTR [eax]
  41db71:	push   0x6c00ffea
  41db76:	in     al,dx
  41db77:	inc    DWORD PTR [eax]
  41db79:	ins    DWORD PTR es:[edi],dx
  41db7a:	in     al,dx
  41db7b:	inc    DWORD PTR [eax]
  41db7d:	outs   dx,BYTE PTR ds:[esi]
  41db7e:	in     al,dx
  41db7f:	inc    DWORD PTR [eax]
  41db81:	ins    DWORD PTR es:[edi],dx
  41db82:	in     al,dx
  41db83:	inc    DWORD PTR [eax]
  41db85:	imul   ebp,ecx,0xffffffff
  41db88:	add    BYTE PTR [edi-0x19],ah
  41db8b:	inc    DWORD PTR [eax]
  41db8d:	data16 in al,0xff
  41db90:	add    BYTE PTR [edx-0x20],ah
  41db93:	inc    DWORD PTR [eax]
  41db95:	fs in  al,0xff
  41db98:	add    BYTE PTR [ebx-0x12],dh
  41db9b:	inc    DWORD PTR [eax]
  41db9d:	mov    eax,edi
  41db9f:	inc    DWORD PTR [eax]
  41dba1:	mov    ?,eax
  41dba3:	inc    DWORD PTR [eax]
  41dba5:	mov    esi,ebp
  41dba7:	inc    DWORD PTR [eax]
  41dba9:	mov    ebp,?
  41dbab:	inc    DWORD PTR [eax]
  41dbad:	xchg   edx,eax
  41dbae:	idiv   edi
  41dbb0:	add    BYTE PTR [ecx-0x62ff0007],bl
  41dbb6:	sti    
  41dbb7:	push   DWORD PTR [edi+eax*8-0xd]
  41dbbb:	cmp    eax,0x0
	...
  41dbe4:	outs   dx,DWORD PTR ds:[esi]
  41dbe5:	mov    bh,0xe8
  41dbe7:	pop    ds
  41dbe8:	add    al,0x8e
  41dbea:	hlt    
  41dbeb:	test   BYTE PTR [eax],0x88
  41dbee:	cmc    
  41dbef:	inc    DWORD PTR [eax]
  41dbf1:	xor    dl,0xff
  41dbf4:	add    BYTE PTR [edi-0xf],bh
  41dbf7:	inc    DWORD PTR [eax]
  41dbf9:	xor    edx,0xef7800ff
  41dbff:	inc    DWORD PTR [eax]
  41dc01:	pop    ecx
  41dc02:	fdivr  st,st(7)
  41dc04:	add    BYTE PTR [edi+eax*8-0x1],cl
  41dc08:	add    BYTE PTR [ecx-0x36],dl
  41dc0b:	inc    DWORD PTR [eax]
  41dc0d:	pop    ebx
  41dc0e:	aam    0xff
  41dc10:	add    BYTE PTR [edx-0x25],ah
  41dc13:	inc    DWORD PTR [eax]
  41dc15:	addr16 (bad) 
  41dc18:	add    BYTE PTR [ebx-0x1c],ch
  41dc1b:	inc    DWORD PTR [eax]
  41dc1d:	arpl   bx,sp
  41dc1f:	inc    DWORD PTR [eax]
  41dc21:	pusha  
  41dc22:	jecxz  0x41dc23
  41dc24:	add    BYTE PTR [ebx-0x1a],ah
  41dc27:	inc    DWORD PTR [eax]
  41dc29:	callw  0xdd2c
  41dc2d:	push   0x6b00ffe9
  41dc32:	jmp    0x41dc33
  41dc34:	add    BYTE PTR [ebp-0x14],ch
  41dc37:	inc    DWORD PTR [eax]
  41dc39:	jo     0x41dc28
  41dc3b:	inc    DWORD PTR [eax]
  41dc3d:	jno    0x41dc2d
  41dc3f:	inc    DWORD PTR [eax]
  41dc41:	jno    0x41dc2f
  41dc43:	inc    DWORD PTR [eax]
  41dc45:	outs   dx,BYTE PTR ds:[esi]
  41dc46:	jmp    0xff:0xe86c00ff
  41dc4d:	fs loope 0x41dc4f
  41dc50:	add    BYTE PTR [ecx-0x2b],bl
  41dc53:	inc    DWORD PTR [eax]
  41dc55:	dec    edi
  41dc56:	retf   0xff
  41dc59:	dec    ebx
  41dc5a:	(bad)  
  41dc5b:	inc    DWORD PTR [eax]
  41dc5d:	pop    ebp
  41dc5e:	(bad)  
  41dc60:	add    BYTE PTR [edi-0xf],bh
  41dc63:	inc    DWORD PTR [eax]
  41dc65:	xchg   esp,esi
  41dc67:	inc    DWORD PTR [eax]
  41dc69:	xchg   esp,esi
  41dc6b:	inc    DWORD PTR [eax]
  41dc6d:	(bad)  
  41dc6e:	idiv   bh
  41dc70:	add    BYTE PTR [eax+edi*8-0x85fec01],dl
  41dc77:	fst    QWORD PTR [edx+0x7f0cf]
	...
  41dca5:	add    BYTE PTR [eax],al
  41dca7:	add    BYTE PTR [ebx],ah
  41dca9:	xchg   esi,eax
  41dcaa:	out    dx,eax
  41dcab:	mov    ebp,0xfff38300
  41dcb0:	add    BYTE PTR [edi+ebp*8-0x1],bh
  41dcb4:	add    BYTE PTR [eax-0x13],bh
  41dcb7:	inc    DWORD PTR [eax]
  41dcb9:	ja     0x41dca8
  41dcbb:	inc    DWORD PTR [eax]
  41dcbd:	push   edi
  41dcbe:	into   
  41dcbf:	inc    DWORD PTR [eax]
  41dcc1:	inc    ecx
  41dcc2:	mov    ah,0xff
  41dcc4:	add    BYTE PTR [ebp-0x3f],cl
  41dcc7:	inc    DWORD PTR [eax]
  41dcc9:	pop    eax
  41dcca:	into   
  41dccb:	inc    DWORD PTR [eax]
  41dccd:	pop    ebp
  41dcce:	aam    0xff
  41dcd0:	add    BYTE PTR [edx-0x26],ah
  41dcd3:	inc    DWORD PTR [eax]
  41dcd5:	addr16 (bad) 
  41dcd8:	add    BYTE PTR [ebx+eiz*8-0x1],ch
  41dcdc:	add    BYTE PTR [ebp-0x1d],ah
  41dcdf:	inc    DWORD PTR [eax]
  41dce1:	popa   
  41dce2:	jecxz  0x41dce3
  41dce4:	add    BYTE PTR [ebx-0x1a],ah
  41dce7:	inc    DWORD PTR [eax]
  41dce9:	addr16 jmp 0xeaaaddee
  41dcef:	inc    DWORD PTR [eax]
  41dcf1:	ins    BYTE PTR es:[edi],dx
  41dcf2:	in     al,dx
  41dcf3:	inc    DWORD PTR [eax]
  41dcf5:	outs   dx,DWORD PTR ds:[esi]
  41dcf6:	in     al,dx
  41dcf7:	inc    DWORD PTR [eax]
  41dcf9:	jb     0x41dce8
  41dcfb:	inc    DWORD PTR [eax]
  41dcfd:	je     0x41dced
  41dcff:	inc    DWORD PTR [eax]
  41dd01:	je     0x41dcf0
  41dd03:	inc    DWORD PTR [eax]
  41dd05:	jb     0x41dcf3
  41dd07:	inc    DWORD PTR [eax]
  41dd09:	ins    DWORD PTR es:[edi],dx
  41dd0a:	call   0xe0a5de0e
  41dd0f:	inc    DWORD PTR [eax]
  41dd11:	pop    ecx
  41dd12:	aam    0xff
  41dd14:	add    BYTE PTR [ebp-0x3a],cl
  41dd17:	inc    DWORD PTR [eax]
  41dd19:	inc    ebx
  41dd1a:	mov    bh,0xff
  41dd1c:	add    BYTE PTR [esi],bh
  41dd1e:	mov    cl,0xff
  41dd20:	add    BYTE PTR [edx-0x30],bl
  41dd23:	inc    DWORD PTR [eax]
  41dd25:	je     0x41dd12
  41dd27:	inc    DWORD PTR [eax]
  41dd29:	jne    0x41dd15
  41dd2b:	inc    DWORD PTR [eax]
  41dd2d:	xor    cl,0xff
  41dd30:	add    BYTE PTR [esi-0x54c50009],cl
  41dd36:	repz popf 
	...
  41dd68:	inc    esp
  41dd69:	mov    eax,ds:0x800070e9
  41dd6e:	repnz inc DWORD PTR [eax]
  41dd71:	jns    0x41dd61
  41dd73:	inc    DWORD PTR [eax]
  41dd75:	jae    0x41dd62
  41dd77:	inc    DWORD PTR [eax]
  41dd79:	imul   esp,ebx,0xffffffff
  41dd7c:	add    BYTE PTR [esi],bh
  41dd7e:	lods   al,BYTE PTR ds:[esi]
  41dd7f:	inc    DWORD PTR [eax]
  41dd81:	inc    eax
  41dd82:	scas   al,BYTE PTR es:[edi]
  41dd83:	inc    DWORD PTR [eax]
  41dd85:	push   ecx
  41dd86:	(bad)  
  41dd87:	inc    DWORD PTR [eax]
  41dd89:	push   esi
  41dd8a:	int3   
  41dd8b:	inc    DWORD PTR [eax]
  41dd8d:	pop    esp
  41dd8e:	sar    edi,cl
  41dd90:	add    BYTE PTR [edx-0x27],ah
  41dd93:	inc    DWORD PTR [eax]
  41dd95:	data16 fdivp st(7),st
  41dd98:	add    BYTE PTR [ebx-0x1d],ch
  41dd9b:	inc    DWORD PTR [eax]
  41dd9d:	gs in  eax,0xff
  41dda0:	add    BYTE PTR [ebp-0x1b],bl
  41dda3:	inc    DWORD PTR [eax]
  41dda5:	pop    edi
  41dda6:	jmp    0xeba3deaa
  41ddab:	inc    DWORD PTR [eax]
  41ddad:	fs in  eax,dx
  41ddaf:	inc    DWORD PTR [eax]
  41ddb1:	push   0x6b00ffee
  41ddb6:	out    dx,eax
  41ddb7:	inc    DWORD PTR [eax]
  41ddb9:	outs   dx,BYTE PTR ds:[esi]
  41ddba:	lock inc DWORD PTR [eax]
  41ddbd:	jb     0x41ddaf
  41ddbf:	inc    DWORD PTR [eax]
  41ddc1:	je     0x41ddb2
  41ddc3:	inc    DWORD PTR [eax]
  41ddc5:	je     0x41ddb5
  41ddc7:	inc    DWORD PTR [eax]
  41ddc9:	outs   dx,DWORD PTR ds:[esi]
  41ddca:	jmp    0xdea4dece
  41ddcf:	inc    DWORD PTR [eax]
  41ddd1:	pop    eax
  41ddd2:	sar    edi,1
  41ddd4:	add    BYTE PTR [ebp-0x3d],cl
  41ddd7:	inc    DWORD PTR [eax]
  41ddd9:	inc    esp
  41ddda:	mov    dh,0xff
  41dddc:	add    BYTE PTR [esi],dh
  41ddde:	mov    ds:0xac3f00ff,al
  41dde3:	inc    DWORD PTR [eax]
  41dde5:	pop    edi
  41dde6:	(bad)  
  41dde8:	add    BYTE PTR [edx-0x2a],bl
  41ddeb:	inc    DWORD PTR [eax]
  41dded:	fs loopne 0x41ddef
  41ddf0:	add    BYTE PTR [eax-0x13],bh
  41ddf3:	call   FWORD PTR [ebx-0x52]
  41ddf6:	call   0x41de49
	...
  41de27:	add    BYTE PTR [ebp-0x4e],ch
  41de2a:	in     al,0x28
  41de2c:	add    al,BYTE PTR [ecx+0x7800faf0]
  41de32:	out    dx,al
  41de33:	inc    DWORD PTR [eax]
  41de35:	jo     0x41de20
  41de37:	inc    DWORD PTR [eax]
  41de39:	push   0xffffffe3
  41de3b:	inc    DWORD PTR [eax]
  41de3d:	cmp    ah,BYTE PTR [ebx-0x54c0ff01]
  41de43:	inc    DWORD PTR [eax]
  41de45:	push   eax
  41de46:	sar    edi,0x0
  41de49:	push   esi
  41de4a:	retf   0xff
  41de4d:	pop    ebx
  41de4e:	sar    bh,cl
  41de50:	add    BYTE PTR [ebp-0x26],bl
  41de53:	inc    DWORD PTR [eax]
  41de55:	(bad)  
  41de56:	(bad)  
  41de58:	add    al,0x6f
  41de5a:	loop   0x41de5b
  41de5c:	sbb    BYTE PTR [esi-0x1f],dh
  41de5f:	push   DWORD PTR [edx]
  41de61:	jl     0x41de3e
  41de63:	call   FWORD PTR [ecx-0x6c]
  41de66:	(bad)  
  41de68:	push   esi
  41de69:	xchg   ebx,eax
  41de6a:	(bad)  
  41de6c:	xor    BYTE PTR [ecx-0x65a3001d],0xdc
  41de73:	push   DWORD PTR [ebp-0x56]
  41de76:	jecxz  0x41de77
  41de78:	inc    ebp
  41de79:	xchg   edx,eax
  41de7a:	(bad)  
  41de7c:	inc    edx
  41de7d:	xchg   ebx,eax
  41de7e:	out    0xff,al
  41de80:	adc    eax,0x1ffe97f
  41de85:	jbe    0x41de73
  41de87:	inc    DWORD PTR [eax]
  41de89:	push   0xffffffea
  41de8b:	inc    DWORD PTR [eax]
  41de8d:	pop    esi
  41de8e:	(bad)  
  41de90:	add    BYTE PTR [ebp-0x32],dl
  41de93:	inc    DWORD PTR [eax]
  41de95:	dec    ebx
  41de96:	sar    bh,0x0
  41de99:	inc    ebx
  41de9a:	mov    bl,0xff
  41de9c:	add    BYTE PTR ds:0x3a00ff9d,dh
  41dea2:	mov    ds:0xd15500ff,eax
  41dea7:	inc    DWORD PTR [eax]
  41dea9:	push   ebp
  41deaa:	sar    edi,1
  41deac:	add    BYTE PTR [ebx+ebx*8-0x1],bl
  41deb0:	push   es
  41deb1:	imul   ebx,edi,0xcb9656ea
  41deb7:	adc    DWORD PTR [eax],eax
	...
  41dee5:	add    BYTE PTR [eax],al
  41dee7:	add    BYTE PTR [edi-0x48],bh
  41deea:	loopne 0x41deef
  41deec:	push   ss
  41deed:	xchg   bl,ch
  41deef:	rol    BYTE PTR [eax],1
  41def1:	jbe    0x41dee2
  41def3:	inc    DWORD PTR [eax]
  41def5:	outs   dx,DWORD PTR ds:[esi]
  41def6:	jmp    0xff:0xe46800ff
  41defd:	inc    edi
  41defe:	mov    ch,0xff
  41df00:	add    BYTE PTR [ecx],bh
  41df02:	mov    eax,ds:0xbf4e00ff
  41df07:	inc    DWORD PTR [eax]
  41df09:	push   ecx
  41df0a:	retf   0x5ff
  41df0d:	pop    esi
  41df0e:	sar    bh,1
  41df10:	pop    esi
  41df11:	xchg   esi,eax
  41df12:	(bad)  
  41df13:	(bad)  
  41df14:	jp     0x41deb7
  41df16:	retf   0xcaff
  41df19:	aam    0xdc
  41df1b:	inc    ebx
  41df1d:	mov    dh,0xff
  41df20:	in     al,0xe2
  41df22:	fdivp  st(7),st
  41df24:	aad    0xcd
  41df26:	ret    0xebff
  41df29:	out    0xe0,eax
  41df2b:	(bad)  
  41df2c:	fcmovbe st,st(2)
  41df2e:	(bad)  
  41df2f:	(bad)  
  41df30:	jmp    0x41df19
  41df32:	loope  0x41df33
  41df34:	fnop   
  41df36:	(bad)  
  41df39:	in     eax,0xdf
  41df3b:	dec    edx
  41df3d:	lds    edi,FWORD PTR [esi-0x22232501]
  41df43:	call   FWORD PTR [ebp-0x70003f50]
  41df49:	mov    cl,0xd4
  41df4b:	push   DWORD PTR [edx]
  41df4d:	ja     0x41df1d
  41df4f:	inc    DWORD PTR [edx]
  41df51:	push   ebp
  41df52:	retf   
  41df53:	inc    DWORD PTR [eax]
  41df55:	inc    esi
  41df56:	mov    edi,0xaf4100ff
  41df5b:	inc    DWORD PTR [eax]
  41df5d:	xor    ebx,DWORD PTR [eax-0x56c2ff01]
  41df63:	inc    DWORD PTR [eax]
  41df65:	dec    esi
  41df66:	leave  
  41df67:	inc    DWORD PTR [eax]
  41df69:	push   esp
  41df6a:	sar    edi,1
  41df6c:	add    BYTE PTR [ecx-0x25],bl
  41df6f:	call   FWORD PTR [esi]
  41df71:	jae    0x41df47
  41df73:	test   eax,0x0
	...
  41dfac:	cmp    dl,BYTE PTR [ebp+0x740085e5]
  41dfb2:	out    dx,eax
  41dfb3:	inc    DWORD PTR [eax]
  41dfb5:	outs   dx,DWORD PTR ds:[esi]
  41dfb6:	jmp    0x41dfb7
  41dfb8:	add    BYTE PTR [ebp-0x1e],ah
  41dfbb:	inc    DWORD PTR [eax]
  41dfbd:	dec    edi
  41dfbe:	(bad)  
  41dfbf:	inc    DWORD PTR [eax]
  41dfc1:	aaa    
  41dfc2:	sahf   
  41dfc3:	inc    DWORD PTR [eax]
  41dfc5:	dec    ecx
  41dfc6:	mov    ebx,0xbb743cff
  41dfcb:	inc    ecx
  41dfcd:	leave  
  41dfce:	sar    edi,1
  41dfd0:	(bad)
  41dfd3:	jmp    ebp
  41dfd5:	loope  0x41dfb3
  41dfd7:	dec    esi
  41dfd9:	retf   0xffc3
  41dfdc:	in     eax,0xe3
  41dfde:	loope  0x41dfdf
  41dfe0:	leave  
  41dfe1:	mov    dl,0xff
  41dfe4:	in     al,0xe3
  41dfe6:	loopne 0x41dfe7
  41dfe8:	into   
  41dfe9:	int3   
  41dfea:	enter  0xe6ff,0xe5
  41dfee:	loop   0x41dfef
  41dff0:	iret   
  41dff1:	int    0xc8
  41dff3:	jmp    ebp
  41dff5:	in     al,0xe1
  41dff7:	dec    ebx
  41dff9:	leave  
  41dffa:	(bad)  
  41dffb:	jmp    edx
  41dffd:	loope  0x41dfdd
  41dfff:	inc    esi
  41e001:	ret    0xffbd
  41e004:	loopne 0x41dfe3
  41e006:	fcos   
  41e008:	ret    
  41e009:	mov    ebx,0xd8daffb0
  41e00e:	aam    0xff
  41e010:	mov    bl,BYTE PTR [ecx+0x632fffab]
  41e016:	mov    dl,0xff
  41e018:	add    BYTE PTR [ebx],bh
  41e01a:	stos   DWORD PTR es:[edi],eax
  41e01b:	inc    DWORD PTR [eax]
  41e01d:	xor    DWORD PTR [edi+edi*8-0x57c600],edx
  41e024:	add    BYTE PTR [ebx-0x39],cl
  41e027:	inc    DWORD PTR [eax]
  41e029:	push   ebx
  41e02a:	sar    bh,cl
  41e02c:	add    BYTE PTR [ecx-0x25],bl
  41e02f:	push   DWORD PTR [ebx]
  41e031:	jnp    0x41dffa
  41e033:	bound  eax,QWORD PTR [eax]
	...
  41e069:	add    BYTE PTR [eax],al
  41e06b:	add    BYTE PTR [esi-0x5f],dl
  41e06e:	loopne 0x41e0a8
  41e070:	add    BYTE PTR [edi-0x11],dh
  41e073:	inc    BYTE PTR [eax]
  41e075:	jno    0x41e064
  41e077:	inc    DWORD PTR [eax]
  41e079:	gs loop 0x41e07b
  41e07c:	add    BYTE PTR [ebx-0x32],dl
  41e07f:	inc    DWORD PTR [ecx]
  41e081:	cmp    BYTE PTR [ebx-0x5f8eaf01],ah
  41e087:	call   esi
  41e089:	aam    0xce
  41e08b:	(bad)  
  41e08c:	mov    edx,0xdcffaeb5
  41e091:	fcmovnu st,st(1)
  41e093:	inc    edx
  41e095:	sar    DWORD PTR [esi-0x1f1e1d01],0xff
  41e09c:	int3   
  41e09d:	retf   
  41e09e:	(bad)  
  41e09f:	jmp    ebx
  41e0a1:	loope  0x41e082
  41e0a3:	dec    esp
  41e0a5:	retf   0xffc5
  41e0a8:	out    0xe4,al
  41e0aa:	loop   0x41e0ab
  41e0ac:	ror    dh,1
  41e0ae:	leave  
  41e0af:	jmp    edi
  41e0b1:	in     eax,0xe3
  41e0b3:	dec    edi
  41e0b5:	int3   
  41e0b6:	(bad)  
  41e0b7:	jmp    ebp
  41e0b9:	jecxz  0x41e09c
  41e0bb:	dec    ecx
  41e0bd:	mov    cl,0xff
  41e0c0:	loopne 0x41e0a1
  41e0c2:	fdiv   st(7),st
  41e0c4:	mov    esi,0xd9ffb8bc
  41e0c9:	fcom   st(6)
  41e0cb:	push   DWORD PTR [ebx-0x2a00524f]
  41e0d1:	ror    ch,cl
  41e0d3:	jmp    DWORD PTR [edx+0x3cff969e]
  41e0d9:	pop    esi
  41e0da:	xchg   edi,eax
  41e0db:	inc    DWORD PTR [eax]
  41e0dd:	sub    eax,0x3c00ff95
  41e0e2:	lods   eax,DWORD PTR ds:[esi]
  41e0e3:	inc    DWORD PTR [eax]
  41e0e5:	dec    ebx
  41e0e6:	leave  
  41e0e7:	inc    DWORD PTR [eax]
  41e0e9:	push   ebx
  41e0ea:	aad    0xff
  41e0ec:	add    ebx,DWORD PTR [edi+edx*8-0xc]
  41e0f0:	inc    edx
  41e0f1:	cmp    BYTE PTR [edx+0x1c],0x0
	...
  41e12c:	je     0x41e0de
  41e12e:	fld    QWORD PTR ds:0xdaeb7f10
  41e134:	add    BYTE PTR [edx-0x11],dh
  41e137:	inc    DWORD PTR [eax]
  41e139:	addr16 in al,0xff
  41e13c:	add    BYTE PTR [eax-0x28],bl
  41e13f:	call   DWORD PTR [esi]
  41e141:	dec    edi
  41e142:	stos   BYTE PTR es:[edi],al
  41e143:	inc    ebp
  41e145:	ret    
  41e146:	mov    esi,0xa3a9abff
  41e14b:	call   edi
  41e14d:	(bad)  
  41e14e:	aam    0xff
  41e150:	mov    esp,0xdfffb6ba
  41e155:	(bad)  
  41e157:	dec    ecx
  41e159:	enter  0xffc4,0xe5
  41e15d:	in     al,0xe2
  41e15f:	dec    edx
  41e161:	enter  0xffc3,0xe5
  41e165:	jecxz  0x41e147
  41e167:	call   eax
  41e169:	int    0xc8
  41e16b:	jmp    edi
  41e16d:	out    0xe3,al
  41e16f:	call   ecx
  41e171:	into   
  41e172:	retf   0xe6ff
  41e175:	in     eax,0xe2
  41e177:	dec    ebp
  41e179:	retf   0xffc6
  41e17c:	jecxz  0x41e15f
  41e17e:	(bad)  
  41e180:	mov    bl,0xbe
  41e183:	(bad)  
  41e184:	fstp   st(4)
  41e186:	(bad)  
  41e188:	mov    ecx,0xd6ffb3b7
  41e18d:	aad    0xd3
  41e18f:	jmp    DWORD PTR [edi-0x33005e5b]
  41e195:	retf   0xffc6
  41e198:	add    DWORD PTR [ecx+0x390aff80],0x3f00ff96
  41e1a2:	mov    bh,0xff
  41e1a4:	add    BYTE PTR [ebx+ecx*8-0x1],cl
  41e1a8:	add    BYTE PTR [ebx-0x27],dl
  41e1ab:	call   DWORD PTR ds:0xbdcd65
	...
  41e1ed:	add    BYTE PTR [eax],al
  41e1ef:	add    BYTE PTR [esi],dh
  41e1f1:	(bad)  
  41e1f2:	jecxz  0x41e17d
  41e1f4:	add    BYTE PTR [edx-0xf],dh
  41e1f7:	inc    DWORD PTR [eax]
  41e1f9:	push   0x5b00ffe8
  41e1fe:	fdivp  st(7),st
  41e200:	inc    edi
  41e201:	jge    0x41e1cd
  41e203:	inc    DWORD PTR [ebp-0x2f00817d]
  41e209:	iret   
  41e20a:	int    0xff
  41e20c:	mov    bl,0xb1
  41e20e:	lods   eax,DWORD PTR ds:[esi]
  41e20f:	(bad)  
  41e210:	(bad)  
  41e212:	fcos   
  41e214:	(bad)
  41e218:	loop   0x41e1fb
  41e21a:	loopne 0x41e21b
  41e21c:	iret   
  41e21d:	int    0xc9
  41e21f:	jmp    ebx
  41e221:	loop   0x41e203
  41e223:	dec    esi
  41e225:	retf   
  41e226:	(bad)  
  41e227:	jmp    edi
  41e229:	out    0xe3,al
  41e22b:	call   esp
  41e22d:	ror    esp,1
  41e22f:	(bad)  
  41e230:	call   0xd341c61b
  41e235:	iret   
  41e236:	retf   0xe5ff
  41e239:	in     al,0xe1
  41e23b:	dec    edx
  41e23d:	mov    edx,0xdddfe1ff
  41e243:	(bad)  
  41e244:	mov    edi,0xdaffb8bd
  41e249:	fcom   st(6)
  41e24b:	push   DWORD PTR [ecx-0x2f005552]
  41e251:	iret   
  41e252:	int3   
  41e253:	call   FWORD PTR [ebx-0x49006f69]
  41e259:	mov    bh,0xb9
  41e25b:	dec    DWORD PTR [ecx]
  41e25d:	mov    ds:0xbf4200ff,eax
  41e263:	inc    DWORD PTR [eax]
  41e265:	dec    ebp
  41e266:	iret   
  41e267:	inc    DWORD PTR [eax]
  41e269:	push   esp
  41e26a:	(bad)  
  41e26c:	sub    ch,BYTE PTR [esi-0x46]
  41e26f:	popa   
	...
  41e2b0:	xchg   ebp,eax
  41e2b1:	ret    0xae6
  41e2b4:	and    eax,0x4e4ae487
  41e2b9:	cdq    
  41e2ba:	loope  0x41e311
  41e2bc:	sub    DWORD PTR [eax+0x7a2457e1],ecx
  41e2c2:	into   
  41e2c3:	pop    ecx
  41e2c4:	mov    dh,0xb7
  41e2c6:	mov    bh,0xea
  41e2c8:	mov    eax,ds:0xd6ff989e
  41e2cd:	aad    0xd3
  41e2cf:	(bad)  
  41e2d0:	mov    ebx,0xdfffb5b9
  41e2d5:	(bad)  
  41e2d7:	dec    edx
  41e2d9:	enter  0xffc4,0xe6
  41e2dd:	in     eax,0xe2
  41e2df:	dec    esp
  41e2e1:	retf   0xffc5
  41e2e4:	out    0xe4,al
  41e2e6:	loope  0x41e2e7
  41e2e8:	ror    bh,cl
  41e2ea:	retf   0xe8ff
  41e2ed:	out    0xe4,al
  41e2ef:	call   ebx
  41e2f1:	ror    bl,1
  41e2f3:	jmp    edi
  41e2f5:	out    0xe3,al
  41e2f7:	dec    edi
  41e2f9:	int3   
  41e2fa:	enter  0xe3ff,0xe2
  41e2fe:	(bad)  
  41e300:	mov    bl,0xbe
  41e303:	(bad)  
  41e304:	(bad)  
  41e306:	fcos   
  41e308:	mov    eax,0xd5ffb1b5
  41e30d:	aam    0xd1
  41e30f:	jmp    DWORD PTR [edx+eiz*4-0x3a370063]
  41e316:	ret    0x6fff
  41e319:	ja     0x41e39a
  41e31b:	lds    ebx,FWORD PTR [ecx]
  41e31d:	pop    esi
  41e31e:	mov    al,0x5d
  41e320:	or     al,0x5b
  41e322:	mov    ah,0x57
  41e324:	sub    DWORD PTR [edi-0x49],esp
  41e327:	push   esp
  41e328:	adc    eax,0x4d44be5f
  41e32d:	sub    DWORD PTR [edi+0x4],0x0
	...
  41e384:	mov    DWORD PTR [ecx-0x39377a88],eax
  41e38a:	(bad)  
  41e38b:	push   DWORD PTR [ecx-0x25005451]
  41e391:	(bad)  
  41e393:	inc    esp
  41e395:	sar    DWORD PTR [ebp-0x201e1c01],0xff
  41e39c:	ror    dh,1
  41e39e:	leave  
  41e39f:	jmp    esi
  41e3a1:	in     eax,0xe2
  41e3a3:	call   eax
  41e3a5:	int    0xc8
  41e3a7:	(bad)  
  41e3a8:	call   0xd741c793
  41e3ad:	ror    ah,cl
  41e3af:	(bad)  
  41e3b0:	jmp    0xd541c89c
  41e3b5:	ror    bl,1
  41e3b7:	jmp    esi
  41e3b9:	in     eax,0xe2
  41e3bb:	dec    esp
  41e3bd:	enter  0xffc3,0xe1
  41e3c1:	(bad)  
  41e3c3:	(bad)  
  41e3c4:	mov    edi,0xd9ffb7bc
  41e3c9:	xlat   BYTE PTR ds:[ebx]
  41e3ca:	aad    0xff
  41e3cc:	mov    al,0xad
  41e3ce:	test   al,0xff
  41e3d0:	into   
  41e3d1:	int3   
  41e3d2:	retf   0x8dff
  41e3d5:	mov    DWORD PTR [ebp-0x4f494501],eax
  41e3db:	jle    0x41e3dd
	...
  41e441:	add    BYTE PTR [eax],al
  41e443:	add    BYTE PTR [edx+esi*4-0x7572a952],dh
  41e44a:	test   edi,edi
  41e44c:	aam    0xd3
  41e44e:	sar    bh,1
  41e450:	mov    ecx,0xe0ffb2b6
  41e455:	(bad)  
  41e457:	call   ecx
  41e459:	retf   0xffc1
  41e45c:	in     al,dx
  41e45d:	call   0xd41ee444
  41e462:	(bad)  
  41e463:	(bad)  
  41e464:	jmp    0x41e44d
  41e466:	loopne 0x41e467
  41e468:	fcom   st(3)
  41e46a:	retf   0xeaff
  41e46d:	call   0xd419e457
  41e472:	int    0xff
  41e474:	jmp    0x41e45e
  41e476:	jecxz  0x41e477
  41e478:	fcmovbe st,st(1)
  41e47a:	(bad)  
  41e47d:	in     eax,0xde
  41e47f:	call   edx
  41e481:	(bad)  
  41e482:	mov    ebx,0xd8dde1ff
  41e487:	(bad)  
  41e488:	mov    eax,0xd4ffaeb4
  41e48d:	ror    bh,cl
  41e48f:	jmp    DWORD PTR [eax-0x40006864]
  41e495:	mov    ebp,0x8e92fcba
  41e49a:	mov    DWORD PTR [esi],esp
	...
  41e504:	xchg   esi,eax
  41e505:	xchg   ebx,eax
  41e506:	(bad)  
  41e507:	push   cs
  41e508:	mov    esi,0xaaf0b9bc
  41e50d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e50e:	mov    al,ds:0xd5dbdfff
  41e513:	(bad)  
  41e514:	mov    edi,0xbcffbcbf
  41e519:	retf   
  41e51a:	fdivr  st,st(7)
  41e51c:	jns    0x41e4c8
  41e51e:	xlat   BYTE PTR ds:[ebx]
  41e51f:	jmp    DWORD PTR [ebp-0x60]
  41e522:	loope  0x41e523
  41e524:	inc    eax
  41e525:	mov    ecx,esp
  41e527:	push   DWORD PTR [edx]
  41e529:	mov    dh,ah
  41e52b:	jmp    FWORD PTR [eax+ecx*4]
  41e52e:	jmp    0x34ff:0xeb8c2cff
  41e535:	xchg   ebx,eax
  41e536:	jmp    0x58ff:0xe59942ff
  41e53d:	mov    al,ds:0xb38bffde
  41e542:	xlat   BYTE PTR ds:[ebx]
  41e543:	call   FWORD PTR [ebp-0x30004152]
  41e549:	int    0xc9
  41e54b:	push   DWORD PTR [ebp-0x34005e53]
  41e551:	enter  0xffc5,0x87
  41e555:	cmp    DWORD PTR [esi-0x37],0xffffff91
  41e559:	mov    cs,WORD PTR [edx+0x1]
	...
  41e5c7:	add    BYTE PTR [ebx-0x3c5b817a],cl
  41e5cd:	ret    
  41e5ce:	sar    edi,0x64
  41e5d1:	mov    ?,WORD PTR [esi-0x2c8de001]
  41e5d7:	inc    DWORD PTR [eax]
  41e5d9:	imul   esp,ecx,0xffffffff
  41e5dc:	add    BYTE PTR [edi-0x16],ch
  41e5df:	inc    DWORD PTR [eax]
  41e5e1:	ins    DWORD PTR es:[edi],dx
  41e5e2:	in     eax,dx
  41e5e3:	inc    DWORD PTR [eax]
  41e5e5:	fs out dx,al
  41e5e7:	inc    DWORD PTR [eax]
  41e5e9:	imul   esi,ecx,0xffffffff
  41e5ec:	add    BYTE PTR [eax-0xe],dh
  41e5ef:	inc    DWORD PTR [eax]
  41e5f1:	jne    0x41e5e6
  41e5f3:	inc    DWORD PTR [eax]
  41e5f5:	jns    0x41e5ec
  41e5f7:	inc    DWORD PTR [eax]
  41e5f9:	jl     0x41e5f1
  41e5fb:	inc    DWORD PTR [eax]
  41e5fd:	jl     0x41e5f5
  41e5ff:	inc    DWORD PTR [eax]
  41e601:	ja     0x41e5f6
  41e603:	inc    DWORD PTR [ecx]
  41e605:	imul   esp,esp,0xffffffff
  41e608:	and    ebp,DWORD PTR [ebx-0x35]
  41e60b:	push   DWORD PTR [edi-0x6e]
  41e60e:	mov    dh,0xff
  41e610:	xchg   esp,eax
  41e611:	nop
  41e612:	mov    edi,edi
  41e614:	mov    edx,0xa0b2b7
	...
  41e685:	add    BYTE PTR [eax],al
  41e687:	add    BYTE PTR [ebx+0x2568a1a7],ch
  41e68d:	pop    esp
  41e68e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e68f:	inc    DWORD PTR [eax]
  41e691:	push   esi
  41e692:	int    0xff
  41e694:	add    BYTE PTR [eax-0x2b],ah
  41e697:	inc    DWORD PTR [eax]
  41e699:	imul   ebx,edi,0xffffffff
  41e69c:	add    BYTE PTR [eax+ebp*8-0x1],dh
  41e6a0:	add    BYTE PTR [ebp-0x14],dh
  41e6a3:	inc    DWORD PTR [eax]
  41e6a5:	push   0xffffffec
  41e6a7:	inc    DWORD PTR [eax]
  41e6a9:	outs   dx,DWORD PTR ds:[esi]
  41e6aa:	out    dx,eax
  41e6ab:	inc    DWORD PTR [eax]
  41e6ad:	je     0x41e6a0
  41e6af:	inc    DWORD PTR [eax]
  41e6b1:	jns    0x41e6a6
  41e6b3:	inc    DWORD PTR [eax]
  41e6b5:	jle    0x41e6aa
  41e6b7:	inc    DWORD PTR [eax]
  41e6b9:	xor    esp,0xf38200ff
  41e6bf:	inc    DWORD PTR [eax]
  41e6c1:	jns    0x41e6b2
  41e6c3:	inc    DWORD PTR [eax]
  41e6c5:	push   0x5400ffe2
  41e6ca:	sar    bh,1
  41e6cc:	add    BYTE PTR [esi+edi*4-0x1],al
  41e6d0:	aas    
  41e6d1:	arpl   WORD PTR [esi+edi*8+0x38859199],bx
	...
  41e748:	inc    eax
  41e749:	gs xchg ebx,eax
  41e74b:	sbb    DWORD PTR [eax],eax
  41e74d:	inc    eax
  41e74e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e74f:	repnz add BYTE PTR [eax-0x3a],bl
  41e753:	inc    DWORD PTR [eax]
  41e755:	(bad)  
  41e75a:	fdivp  st(7),st
  41e75c:	add    BYTE PTR [edi+eiz*8-0x1],dh
  41e760:	add    BYTE PTR [edi-0x14],dh
  41e763:	inc    DWORD PTR [eax]
  41e765:	imul   ebp,ebp,0xffffffff
  41e768:	add    BYTE PTR [edi-0x10],ch
  41e76b:	inc    DWORD PTR [eax]
  41e76d:	je     0x41e760
  41e76f:	inc    DWORD PTR [eax]
  41e771:	jp     0x41e766
  41e773:	inc    DWORD PTR [eax]
  41e775:	jg     0x41e76b
  41e777:	inc    DWORD PTR [eax]
  41e779:	xor    esp,0xf38200ff
  41e77f:	inc    DWORD PTR [eax]
  41e781:	ja     0x41e770
  41e783:	inc    DWORD PTR [eax]
  41e785:	data16 (bad) 
  41e788:	add    BYTE PTR [ebp-0x35],dl
  41e78b:	inc    DWORD PTR [eax]
  41e78d:	inc    edi
  41e78e:	mov    eax,0x9b3a03ff
  41e793:	fild   WORD PTR [ebp+0x68]
  41e796:	xchg   edx,eax
  41e797:	or     BYTE PTR [eax],al
	...
  41e809:	add    BYTE PTR [eax],al
  41e80b:	add    BYTE PTR ds:0xbf9d3f,al
  41e811:	push   ebx
  41e812:	sar    bh,0x0
  41e815:	(bad)  
  41e81a:	(bad)  
  41e81c:	add    BYTE PTR [ebx-0x1a],dh
  41e81f:	inc    DWORD PTR [eax]
  41e821:	jns    0x41e810
  41e823:	inc    DWORD PTR [eax]
  41e825:	ins    BYTE PTR es:[edi],dx
  41e826:	in     eax,dx
  41e827:	inc    DWORD PTR [eax]
  41e829:	outs   dx,DWORD PTR ds:[esi]
  41e82a:	lock inc DWORD PTR [eax]
  41e82d:	je     0x41e821
  41e82f:	inc    DWORD PTR [eax]
  41e831:	jp     0x41e826
  41e833:	inc    DWORD PTR [eax]
  41e835:	jg     0x41e82b
  41e837:	inc    DWORD PTR [eax]
  41e839:	xor    ah,0xff
  41e83c:	add    BYTE PTR [ecx+0x7600fff3],al
  41e842:	in     eax,dx
  41e843:	inc    DWORD PTR [eax]
  41e845:	arpl   sp,bx
  41e847:	inc    DWORD PTR [eax]
  41e849:	push   ebx
  41e84a:	enter  0xff,0x42
  41e84e:	mov    al,0xff
  41e850:	or     al,0x42
  41e852:	cwde   
  41e853:	popf   
	...
  41e8cc:	adc    DWORD PTR [ecx-0x65],ecx
  41e8cf:	je     0x41e8d1
  41e8d1:	dec    ebx
  41e8d2:	mov    bh,0xff
  41e8d4:	add    BYTE PTR [ecx-0x31],ah
  41e8d7:	inc    DWORD PTR [eax]
  41e8d9:	push   0xffffffdb
  41e8db:	inc    DWORD PTR [eax]
  41e8dd:	jae    0x41e8c5
  41e8df:	inc    DWORD PTR [eax]
  41e8e1:	jp     0x41e8d0
  41e8e3:	inc    DWORD PTR [eax]
  41e8e5:	ins    DWORD PTR es:[edi],dx
  41e8e6:	in     eax,dx
  41e8e7:	inc    DWORD PTR [eax]
  41e8e9:	outs   dx,DWORD PTR ds:[esi]
  41e8ea:	lock inc DWORD PTR [eax]
  41e8ed:	jne    0x41e8e1
  41e8ef:	inc    DWORD PTR [eax]
  41e8f1:	jnp    0x41e8e7
  41e8f3:	inc    DWORD PTR [eax]
  41e8f5:	xor    ah,0xff
  41e8f8:	add    BYTE PTR [ebx-0x7eff000b],al
  41e8fe:	repz inc DWORD PTR [eax]
  41e901:	je     0x41e8ef
  41e903:	inc    DWORD PTR [eax]
  41e905:	popa   
  41e906:	fcos   
  41e908:	add    BYTE PTR [eax-0x3c],dl
  41e90b:	inc    DWORD PTR [eax]
  41e90d:	cmp    eax,0x4e18ffa8
  41e912:	cdq    
  41e913:	push   edx
	...
  41e98c:	sbb    BYTE PTR [eax-0x67],dl
  41e98f:	add    BYTE PTR cs:[ebp+ebp*4-0x5],al
  41e994:	add    BYTE PTR [eax-0x33],ah
  41e997:	inc    DWORD PTR [eax]
  41e999:	imul   ebx,edx,0xe57300ff
  41e99f:	inc    DWORD PTR [eax]
  41e9a1:	jnp    0x41e990
  41e9a3:	inc    DWORD PTR [eax]
  41e9a5:	outs   dx,DWORD PTR ds:[esi]
  41e9a6:	in     eax,dx
  41e9a7:	inc    DWORD PTR [eax]
  41e9a9:	outs   dx,DWORD PTR ds:[esi]
  41e9aa:	lock inc DWORD PTR [eax]
  41e9ad:	jne    0x41e9a1
  41e9af:	inc    DWORD PTR [eax]
  41e9b1:	jl     0x41e9a7
  41e9b3:	inc    DWORD PTR [eax]
  41e9b5:	xor    ebp,0xf58400ff
  41e9bb:	inc    DWORD PTR [eax]
  41e9bd:	xor    ebx,0xea7200ff
  41e9c3:	inc    DWORD PTR [eax]
  41e9c5:	pop    ebp
  41e9c6:	aad    0xff
  41e9c8:	add    BYTE PTR [ebp-0x41],cl
  41e9cb:	inc    DWORD PTR [ecx]
  41e9cd:	cmp    al,0xa0
  41e9cf:	in     eax,dx
  41e9d0:	pop    ss
  41e9d1:	dec    edi
  41e9d2:	xchg   esi,eax
  41e9d3:	adc    al,0x0
	...
  41ea49:	add    BYTE PTR [eax],al
  41ea4b:	add    BYTE PTR [esi+edx*2],bl
  41ea4e:	cdq    
  41ea4f:	add    eax,DWORD PTR ds:0xd2a443
  41ea55:	pop    edx
  41ea56:	enter  0xff,0x68
  41ea5a:	fdivr  st,st(7)
  41ea5c:	add    BYTE PTR [ecx-0x1c],dh
  41ea5f:	inc    DWORD PTR [eax]
  41ea61:	jl     0x41ea50
  41ea63:	inc    DWORD PTR [eax]
  41ea65:	jo     0x41ea55
  41ea67:	inc    DWORD PTR [eax]
  41ea69:	outs   dx,DWORD PTR ds:[esi]
  41ea6a:	lock inc DWORD PTR [eax]
  41ea6d:	jbe    0x41ea62
  41ea6f:	inc    DWORD PTR [eax]
  41ea71:	jl     0x41ea67
  41ea73:	inc    DWORD PTR [eax]
  41ea75:	xor    ebp,0xf58400ff
  41ea7b:	inc    DWORD PTR [eax]
  41ea7d:	xor    dl,0xff
  41ea80:	add    BYTE PTR [edi-0x19],ch
  41ea83:	inc    DWORD PTR [eax]
  41ea85:	pop    edx
  41ea86:	sar    edi,1
  41ea88:	add    BYTE PTR [eax-0x47],cl
  41ea8b:	dec    DWORD PTR [eax]
  41ea8d:	inc    eax
  41ea8e:	pushf  
  41ea8f:	mov    bh,0x0
	...
  41eb0d:	add    BYTE PTR [eax],al
  41eb0f:	add    BYTE PTR [esi],cl
  41eb11:	inc    edi
  41eb12:	sahf   
  41eb13:	xchg   ecx,eax
  41eb14:	add    BYTE PTR [edx-0x41],dl
  41eb17:	inc    DWORD PTR [eax]
  41eb19:	push   0x7100ffd6
  41eb1e:	jecxz  0x41eb1f
  41eb20:	add    BYTE PTR [ebx-0x14],bh
  41eb23:	inc    DWORD PTR [eax]
  41eb25:	jno    0x41eb16
  41eb27:	inc    DWORD PTR [eax]
  41eb29:	imul   esi,ecx,0xffffffff
  41eb2c:	add    BYTE PTR [edx-0xc],dh
  41eb2f:	inc    DWORD PTR [eax]
  41eb31:	jns    0x41eb28
  41eb33:	inc    DWORD PTR [eax]
  41eb35:	jg     0x41eb2e
  41eb37:	inc    DWORD PTR [eax]
  41eb39:	xor    esi,0xffffffff
  41eb3c:	add    BYTE PTR [edi-0xe],bh
  41eb3f:	inc    DWORD PTR [eax]
  41eb41:	imul   esp,esp,0xffffffff
  41eb44:	add    BYTE PTR [edi-0x32],dl
  41eb47:	inc    DWORD PTR [eax]
  41eb49:	inc    edx
  41eb4a:	mov    al,0xff
  41eb4c:	adc    ecx,DWORD PTR [ecx-0x67]
  41eb4f:	outs   dx,BYTE PTR ds:[esi]
	...
  41ebd0:	adc    al,0x4d
  41ebd2:	call   0xff:0xb54a0045
  41ebd9:	popa   
  41ebda:	aad    0xff
  41ebdc:	add    BYTE PTR [ebp-0x1d],ch
  41ebdf:	inc    DWORD PTR [edi+edi*2]
  41ebe2:	in     al,dx
  41ebe3:	call   DWORD PTR [esi]
  41ebe5:	sub    esp,0xeb8023ff
  41ebeb:	jmp    FWORD PTR [ebx]
  41ebed:	mov    ebp,ebp
  41ebef:	jmp    FWORD PTR [edx]
  41ebf1:	(bad)  
  41ebf2:	out    dx,al
  41ebf3:	jmp    DWORD PTR [edx]
  41ebf5:	(bad)  
  41ebf6:	out    dx,eax
  41ebf7:	call   DWORD PTR [esp+ecx*4]
  41ebfa:	icebp  
  41ebfb:	inc    DWORD PTR [ecx]
  41ebfd:	jge    0x41ebf0
  41ebff:	inc    DWORD PTR [eax]
  41ec01:	arpl   bx,sp
  41ec03:	inc    DWORD PTR [eax]
  41ec05:	push   eax
  41ec06:	retf   0xff
  41ec09:	aas    
  41ec0a:	test   al,0xfa
  41ec0c:	pop    ss
  41ec0d:	dec    edi
  41ec0e:	xchg   edi,eax
  41ec0f:	sub    BYTE PTR [eax],al
	...
  41ec8d:	add    BYTE PTR [eax],al
  41ec8f:	add    BYTE PTR [ecx],dl
  41ec91:	dec    ebp
  41ec92:	cwde   
  41ec93:	push   cs
  41ec94:	add    eax,DWORD PTR [ebp-0x57]
  41ec97:	out    0x6f,al
  41ec99:	lahf   
  41ec9a:	aam    0xff
  41ec9c:	lea    ebp,[edi-0x1e260033]
  41eca2:	out    0xff,eax
  41eca4:	into   
  41eca5:	rcl    dl,cl
  41eca7:	(bad)  
  41eca8:	jmp    0xd3d9:0xddffe6e9
  41ecaf:	(bad)  
  41ecb0:	in     eax,dx
  41ecb1:	jmp    0x41ec9b
  41ecb3:	(bad)  
  41ecb4:	fcom   st(6)
  41ecb6:	sar    bh,1
  41ecb8:	(bad)  
  41ecba:	loop   0x41ecbb
  41ecbc:	stos   BYTE PTR es:[edi],al
  41ecbd:	mov    edx,0xb69dffc8
  41ecc2:	sar    edi,1
  41ecc4:	xor    ebp,DWORD PTR [edx-0x47]
  41ecc7:	inc    DWORD PTR [edx]
  41ecc9:	mov    al,ds:0x9b5315cc
  41eccf:	add    al,BYTE PTR [eax]
	...
  41ed51:	add    BYTE PTR [eax],al
  41ed53:	add    BYTE PTR [ebp-0x404c576b],al
  41ed59:	mov    dh,0xaa
  41ed5b:	(bad)  
  41ed5c:	jmp    0xdc41cc45
  41ed61:	aam    0xcc
  41ed63:	(bad)  
  41ed64:	in     al,dx
  41ed65:	jmp    0xffcf:0xd5daffe7
  41ed6c:	in     eax,dx
  41ed6d:	jmp    0x41ed57
  41ed6f:	(bad)  
  41ed70:	fstp   st(1)
  41ed72:	sar    edi,cl
  41ed74:	jmp    0x41ed5f
  41ed76:	out    0xff,al
  41ed78:	(bad)  
  41ed79:	ror    al,1
  41ed7b:	jmp    esi
  41ed7d:	loope  0x41ed5b
  41ed7f:	inc    esi
  41ed81:	mov    esp,0xced3ffaf
  41ed86:	enter  0x5aff,0x72
  41ed8a:	nop
  41ed8b:	test   DWORD PTR [eax],eax
	...
  41ee11:	add    BYTE PTR [eax],al
  41ee13:	add    BYTE PTR [ecx-0x2e9f7e76],dl
  41ee19:	iret   
  41ee1a:	int3   
  41ee1b:	dec    ecx
  41ee1d:	mov    al,0xff
  41ee20:	call   0xdb41d30c
  41ee25:	xlat   BYTE PTR ds:[ebx]
  41ee26:	sar    edi,cl
  41ee28:	jmp    0x41ee13
  41ee2a:	out    0xff,al
  41ee2c:	(bad)  
  41ee2e:	sar    edi,cl
  41ee30:	in     al,dx
  41ee31:	jmp    0xffd0:0xd5d8ffe8
  41ee38:	out    0xe5,eax
  41ee3a:	loop   0x41ee3b
  41ee3c:	enter  0xbdc3,0xff
  41ee40:	(bad)  
  41ee42:	aam    0xff
  41ee44:	popf   
  41ee45:	cwde   
  41ee46:	xchg   ecx,eax
  41ee47:	(bad)  
  41ee48:	mov    bh,0xb3
  41ee4a:	lods   al,BYTE PTR ds:[esi]
  41ee4b:	dec    esi
	...
  41eed4:	xchg   edi,eax
  41eed5:	xchg   esp,eax
  41eed6:	mov    fs,WORD PTR [ecx]
  41eed8:	sahf   
  41eed9:	call   0xffdc:0xdfe0f494
  41eee0:	rcl    eax,cl
  41eee2:	retf   
  41eee3:	(bad)  
  41eee4:	jmp    0x41eed0
  41eee6:	out    0xff,eax
  41eee8:	fcom   st(5)
  41eeea:	sar    bh,1
  41eeec:	in     al,dx
  41eeed:	jmp    0xffd3:0xd8dcffe8
  41eef4:	jmp    0xc8ce:0xd2ffe6e8
  41eefb:	jmp    ecx
  41eefd:	(bad)  
  41eeff:	push   DWORD PTR [ebx-0x3a005751]
  41ef05:	ret    
  41ef06:	mov    edi,0x92979ced
  41ef0b:	or     DWORD PTR [eax],eax
	...
  41ef95:	add    BYTE PTR [eax],al
  41ef97:	add    cl,al
  41ef99:	mov    edi,0xbcbfd7bb
  41ef9e:	mov    dh,0xff
  41efa0:	out    0xe5,eax
  41efa2:	loop   0x41efa3
  41efa4:	fcmovbe st,st(7)
  41efa6:	sar    bh,cl
  41efa8:	jmp    0x41ef93
  41efaa:	out    0xff,al
  41efac:	(bad)  
  41efae:	aam    0xff
  41efb0:	in     al,dx
  41efb1:	jmp    0x41ef9b
  41efb3:	(bad)  
  41efb4:	fcom   st(4)
  41efb6:	iret   
  41efb7:	jmp    esi
  41efb9:	in     al,0xe1
  41efbb:	inc    ebx
  41efbd:	mov    edi,0xd1d4ffb9
  41efc2:	into   
  41efc3:	call   DWORD PTR [ecx+0xa0878c]
	...
  41f055:	add    BYTE PTR [eax],al
  41f057:	add    BYTE PTR [edx-0x27897873],dl
  41f05d:	(bad)  
  41f05e:	sar    edi,cl
  41f060:	ror    ch,1
  41f062:	enter  0xebff,0xea
  41f066:	call   0xd218cb6a
  41f06b:	(bad)  
  41f06c:	in     al,dx
  41f06d:	jmp    0x41f057
  41f06f:	(bad)  
  41f070:	(bad)  
  41f072:	aam    0xff
  41f074:	jmp    0xc6cc:0xd0ffe6e9
  41f07b:	(bad)  
  41f07c:	(bad)  
  41f07e:	fdivr  st,st(7)
  41f080:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f081:	mov    al,ds:0xb7baff99
  41f086:	mov    bl,0x70
	...
  41f118:	stos   BYTE PTR es:[edi],al
  41f119:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f11a:	mov    ds:0x9ea4a83f,al
  41f11f:	(bad)  
  41f120:	in     eax,0xe3
  41f122:	loope  0x41f123
  41f124:	(bad)  
  41f126:	sar    bh,cl
  41f128:	jmp    0x41f114
  41f12a:	out    0xff,eax
  41f12c:	(bad)  
  41f12e:	aam    0xff
  41f130:	in     al,dx
  41f131:	jmp    0xffcf:0xd5d8ffe8
  41f138:	out    0xe3,al
  41f13a:	loopne 0x41f13b
  41f13c:	mov    esp,0xcaffb1b7
  41f141:	mov    esp,0x878c90f5
  41f147:	push   ss
	...
  41f1d8:	xchg   ebx,eax
  41f1d9:	(bad)
  41f1dd:	mov    dl,0xe8
  41f1e0:	retf   
  41f1e1:	mov    eax,0xe6eaefff
  41f1e7:	jmp    ebp
  41f1e9:	(bad)  
  41f1eb:	push   edx
  41f1ed:	out    dx,al
  41f1ee:	out    0xff,eax
  41f1f0:	call   0xf141c4d2
  41f1f5:	jmp    0xffc0:0xcbd3ffe4
  41f1fc:	fcmovbe st,st(7)
  41f1fe:	sar    edi,cl
  41f200:	cwde   
  41f201:	xchg   esp,eax
  41f202:	mov    ?,WORD PTR [eax+0x0]
	...
  41f29c:	popf   
  41f29d:	xchg   ebp,eax
  41f29e:	mov    edx,DWORD PTR [ebx-0x252527]
  41f2a4:	lods   al,BYTE PTR ds:[esi]
  41f2a5:	(bad)
  41f2a8:	enter  0xecdc,0xff
  41f2ac:	(bad)  
  41f2ad:	mov    bh,0xdf
  41f2af:	inc    esp
  41f2b1:	fucomi st,st(7)
  41f2b3:	call   DWORD PTR [edi-0x30002543]
  41f2b9:	(bad)  
  41f2bb:	jmp    FWORD PTR [edx-0x41005957]
  41f2c1:	mov    ecx,0x8fb2
	...
  41f35a:	add    BYTE PTR [eax],al
  41f35c:	pop    esp
  41f35d:	ja     0x41f2f9
  41f35f:	dec    esp
  41f360:	adc    al,0x68
  41f362:	(bad)  
  41f363:	inc    DWORD PTR [eax]
  41f365:	jge    0x41f351
  41f367:	inc    DWORD PTR [eax]
  41f369:	jne    0x41f35d
  41f36b:	inc    DWORD PTR [eax]
  41f36d:	outs   dx,BYTE PTR ds:[esi]
  41f36e:	cmc    
  41f36f:	inc    DWORD PTR [eax]
  41f371:	jl     0x41f36b
  41f373:	inc    DWORD PTR [eax]
  41f375:	cmp    eax,0xffffffff
  41f378:	add    BYTE PTR [ecx-0x17],dh
  41f37b:	call   FWORD PTR [ecx]
  41f37d:	pop    edx
  41f37e:	mov    eax,0x95765cfb
  41f383:	sub    al,BYTE PTR [eax]
	...
  41f419:	add    BYTE PTR [eax],al
  41f41b:	add    BYTE PTR ds:0x109f52,dl
  41f421:	push   ecx
  41f422:	mov    esp,0xe67800eb
  41f427:	inc    DWORD PTR [eax]
  41f429:	jp     0x41f41b
  41f42b:	inc    DWORD PTR [eax]
  41f42d:	je     0x41f422
  41f42f:	inc    DWORD PTR [eax]
  41f431:	xor    dh,0xff
  41f434:	add    BYTE PTR [esi+0x6900fff6],al
  41f43a:	jecxz  0x41f43b
  41f43c:	add    DWORD PTR [eax-0x4f],ecx
  41f43f:	into   
  41f440:	sbb    ebx,DWORD PTR [edx-0x5f]
  41f443:	add    eax,DWORD PTR [eax]
	...
  41f4dd:	add    BYTE PTR [eax],al
  41f4df:	add    BYTE PTR [edx],cl
  41f4e1:	dec    edi
  41f4e2:	scas   al,BYTE PTR es:[edi]
  41f4e3:	scas   eax,DWORD PTR es:[edi]
  41f4e4:	add    BYTE PTR [edx-0x20],dh
  41f4e7:	inc    DWORD PTR [eax]
  41f4e9:	jge    0x41f4db
  41f4eb:	inc    DWORD PTR [eax]
  41f4ed:	je     0x41f4e2
  41f4ef:	inc    DWORD PTR [eax]
  41f4f1:	xor    esi,0xf58400ff
  41f4f7:	inc    DWORD PTR [eax]
  41f4f9:	pusha  
  41f4fa:	fcos   
  41f4fc:	or     al,0x4c
  41f4fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4ff:	mov    BYTE PTR [eax],al
	...
  41f59d:	add    BYTE PTR [eax],al
  41f59f:	add    BYTE PTR [esi],cl
  41f5a1:	dec    ebp
  41f5a2:	mov    ds:0xd7690062,eax
  41f5a7:	inc    DWORD PTR [eax]
  41f5a9:	jle    0x41f59b
  41f5ab:	inc    DWORD PTR [eax]
  41f5ad:	je     0x41f5a2
  41f5af:	inc    DWORD PTR [eax]
  41f5b1:	xor    bh,0xff
  41f5b4:	add    BYTE PTR [ecx+0x5600fff4],al
  41f5ba:	int3   
  41f5bb:	call   DWORD PTR [edx]
  41f5bd:	dec    edi
  41f5be:	lahf   
  41f5bf:	inc    ebx
	...
  41f660:	and    esp,DWORD PTR [ecx-0x59]
  41f663:	sbb    eax,0xf5cb6002
  41f668:	add    BYTE PTR [edi-0x10],bh
  41f66b:	inc    DWORD PTR [eax]
  41f66d:	ja     0x41f663
  41f66f:	inc    DWORD PTR [eax]
  41f671:	test   ecx,edi
  41f673:	inc    DWORD PTR [eax]
  41f675:	jge    0x41f669
  41f677:	inc    DWORD PTR [ebx]
  41f679:	push   ecx
  41f67a:	mov    esi,0xa15a1ae2
  41f67f:	or     al,BYTE PTR [eax]
	...
  41f721:	add    BYTE PTR [eax],al
  41f723:	add    BYTE PTR [edi],al
  41f725:	pop    ecx
  41f726:	mov    esi,0xeb6f00ae
  41f72b:	inc    DWORD PTR [eax]
  41f72d:	ja     0x41f722
  41f72f:	inc    DWORD PTR [eax]
  41f731:	test   esi,esi
  41f733:	inc    DWORD PTR [eax]
  41f735:	jae    0x41f721
  41f737:	inc    DWORD PTR [esi]
  41f739:	push   eax
  41f73a:	mov    bl,0x88
	...
  41f7e4:	sbb    al,0x63
  41f7e6:	mov    edx,0xc5560319
  41f7eb:	ja     0x41f7ee
  41f7ed:	pop    edx
  41f7ee:	enter  0x297,0x59
  41f7f2:	(bad)  
  41f7f3:	xchg   ebp,eax
  41f7f4:	add    eax,0x186ec156
  41f7f9:	imul   edi,DWORD PTR [ebx+0xd],0x0
	...
  41f910:	(bad)  
  41f911:	(bad)  
  41f912:	(bad)  
  41f913:	(bad)  
  41f914:	(bad)  
  41f915:	inc    DWORD PTR [eax]
  41f917:	add    al,dh
  41f919:	add    BYTE PTR [eax],al
  41f91b:	add    BYTE PTR [eax],al
  41f91d:	sldt   WORD PTR [eax]
  41f920:	lock add BYTE PTR [eax],al
  41f923:	add    BYTE PTR [eax],al
  41f925:	sldt   WORD PTR [eax]
  41f928:	lock add BYTE PTR [eax],al
  41f92b:	add    BYTE PTR [eax],al
  41f92d:	sldt   WORD PTR [eax]
  41f930:	lock add BYTE PTR [eax],al
  41f933:	add    BYTE PTR [eax],al
  41f935:	sldt   WORD PTR [eax]
  41f938:	lock add BYTE PTR [eax],al
  41f93b:	add    BYTE PTR [eax],al
  41f93d:	sldt   WORD PTR [eax]
  41f940:	lock add BYTE PTR [eax],al
  41f943:	add    BYTE PTR [eax],al
  41f945:	sldt   WORD PTR [eax]
  41f948:	clc    
  41f949:	add    BYTE PTR [eax],al
  41f94b:	add    BYTE PTR [eax],al
  41f94d:	pop    ds
  41f94e:	add    BYTE PTR [eax],al
  41f950:	clc    
  41f951:	add    BYTE PTR [eax],al
  41f953:	add    BYTE PTR [eax],al
  41f955:	pop    ds
  41f956:	add    BYTE PTR [eax],al
  41f958:	clc    
  41f959:	add    BYTE PTR [eax],al
  41f95b:	add    BYTE PTR [eax],al
  41f95d:	pop    ds
  41f95e:	add    BYTE PTR [eax],al
  41f960:	cld    
  41f961:	add    BYTE PTR [eax],al
  41f963:	add    BYTE PTR [eax],al
  41f965:	aas    
  41f966:	add    BYTE PTR [eax],al
  41f968:	cld    
  41f969:	add    BYTE PTR [eax],al
  41f96b:	add    BYTE PTR [eax],al
  41f96d:	aas    
  41f96e:	add    BYTE PTR [eax],al
  41f970:	cld    
  41f971:	add    BYTE PTR [eax],al
  41f973:	add    BYTE PTR [eax],al
  41f975:	aas    
  41f976:	add    BYTE PTR [eax],al
  41f978:	cld    
  41f979:	add    BYTE PTR [eax],al
  41f97b:	add    BYTE PTR [eax],al
  41f97d:	jg     0x41f97f
  41f97f:	add    dh,bh
  41f981:	add    BYTE PTR [eax],al
  41f983:	add    BYTE PTR [eax],al
  41f985:	jg     0x41f987
  41f987:	add    dh,bh
  41f989:	add    BYTE PTR [eax],al
  41f98b:	add    BYTE PTR [eax],al
  41f98d:	jg     0x41f98f
  41f98f:	add    dh,bh
  41f991:	add    BYTE PTR [eax],al
  41f993:	add    BYTE PTR [eax],al
  41f995:	inc    DWORD PTR [eax]
  41f997:	add    bh,bh
  41f999:	add    BYTE PTR [eax],al
  41f99b:	add    BYTE PTR [eax],al
  41f99d:	inc    DWORD PTR [eax]
  41f99f:	add    bh,bh
  41f9a1:	add    BYTE PTR [eax],al
  41f9a3:	add    BYTE PTR [eax],al
  41f9a5:	inc    DWORD PTR [eax]
  41f9a7:	add    bh,bh
  41f9a9:	clc    
  41f9aa:	add    BYTE PTR [eax],al
  41f9ac:	pop    ds
  41f9ad:	inc    DWORD PTR [eax]
  41f9af:	add    bh,bh
  41f9b1:	clc    
  41f9b2:	add    BYTE PTR [eax],al
  41f9b4:	pop    ds
  41f9b5:	inc    DWORD PTR [eax]
  41f9b7:	add    bh,bh
  41f9b9:	clc    
  41f9ba:	add    BYTE PTR [eax],al
  41f9bc:	pop    ds
  41f9bd:	inc    DWORD PTR [eax]
  41f9bf:	add    bh,bh
  41f9c1:	cld    
  41f9c2:	add    BYTE PTR [eax],al
  41f9c4:	aas    
  41f9c5:	inc    DWORD PTR [eax]
  41f9c7:	add    bh,bh
  41f9c9:	cld    
  41f9ca:	add    BYTE PTR [eax],al
  41f9cc:	aas    
  41f9cd:	inc    DWORD PTR [eax]
  41f9cf:	add    bh,bh
  41f9d1:	cld    
  41f9d2:	add    BYTE PTR [eax],al
  41f9d4:	aas    
  41f9d5:	inc    DWORD PTR [eax]
  41f9d7:	add    bh,bh
  41f9d9:	inc    BYTE PTR [eax]
  41f9db:	add    BYTE PTR [edi-0x1],bh
  41f9de:	add    BYTE PTR [eax],al
  41f9e0:	(bad)  
  41f9e1:	inc    BYTE PTR [eax]
  41f9e3:	add    BYTE PTR [edi-0x1],bh
  41f9e6:	add    BYTE PTR [eax],al
  41f9e8:	(bad)  
  41f9e9:	inc    BYTE PTR [eax]
  41f9eb:	add    BYTE PTR [edi-0x1],bh
  41f9ee:	add    BYTE PTR [eax],al
  41f9f0:	(bad)  
  41f9f1:	inc    BYTE PTR [eax]
  41f9f3:	add    bh,bh
  41f9f5:	inc    DWORD PTR [eax]
  41f9f7:	add    bh,bh
  41f9f9:	inc    DWORD PTR [eax]
  41f9fb:	add    bh,bh
  41f9fd:	inc    DWORD PTR [eax]
  41f9ff:	add    bh,bh
  41fa01:	inc    DWORD PTR [eax]
  41fa03:	add    bh,bh
  41fa05:	inc    DWORD PTR [eax]
  41fa07:	add    bh,bh
  41fa09:	inc    DWORD PTR [eax]
  41fa0b:	add    bh,bh
  41fa0d:	inc    DWORD PTR [eax]
  41fa0f:	add    bh,bh
  41fa11:	inc    DWORD PTR [eax+0xffff01]
  41fa17:	add    bh,bh
  41fa19:	inc    DWORD PTR [eax+0xffff01]
  41fa1f:	add    bh,bh
  41fa21:	inc    DWORD PTR [eax+0xffff01]
  41fa27:	add    bh,bh
  41fa29:	inc    eax
  41fa2b:	add    edi,edi
  41fa2d:	inc    DWORD PTR [eax]
  41fa2f:	add    bh,bh
  41fa31:	inc    eax
  41fa33:	add    edi,edi
  41fa35:	inc    DWORD PTR [eax]
  41fa37:	add    bh,bh
  41fa39:	inc    eax
  41fa3b:	add    edi,edi
  41fa3d:	inc    DWORD PTR [eax]
  41fa3f:	add    bh,bh
  41fa41:	inc    eax
  41fa43:	pop    es
  41fa44:	(bad)  
  41fa45:	inc    DWORD PTR [eax]
  41fa47:	add    bh,bh
  41fa49:	jmp    eax
  41fa4b:	pop    es
  41fa4c:	(bad)  
  41fa4d:	inc    DWORD PTR [eax]
  41fa4f:	add    bh,bh
  41fa51:	jmp    eax
  41fa53:	pop    es
  41fa54:	(bad)  
  41fa55:	inc    DWORD PTR [eax]
  41fa57:	add    bh,bh
  41fa59:	jmp    eax
  41fa5b:	pop    es
  41fa5c:	(bad)  
  41fa5d:	inc    DWORD PTR [eax]
  41fa5f:	add    bh,bh
  41fa61:	push   eax
  41fa63:	ud0    edi,edi
  41fa66:	add    BYTE PTR [eax],al
  41fa68:	(bad)  
  41fa69:	push   eax
  41fa6b:	ud0    edi,edi
  41fa6e:	add    BYTE PTR [eax],al
  41fa70:	(bad)  
  41fa71:	push   eax
  41fa73:	ud0    edi,edi
  41fa76:	add    BYTE PTR [eax],al
  41fa78:	(bad)  
  41fa79:	(bad)  
  41fa7a:	clc    
  41fa7b:	pop    ds
  41fa7c:	(bad)  
  41fa7d:	inc    DWORD PTR [eax]
  41fa7f:	add    bh,bh
  41fa81:	(bad)  
  41fa82:	clc    
  41fa83:	pop    ds
  41fa84:	(bad)  
  41fa85:	inc    DWORD PTR [eax]
  41fa87:	add    bh,bh
  41fa89:	(bad)  
  41fa8a:	(bad)  
  41fa8b:	(bad)  
  41fa8c:	(bad)  
  41fa8d:	inc    DWORD PTR [eax]
  41fa8f:	add    BYTE PTR [eax],ch
  41fa91:	add    BYTE PTR [eax],al
  41fa93:	add    BYTE PTR [eax],ah
  41fa95:	add    BYTE PTR [eax],al
  41fa97:	add    BYTE PTR [eax+0x0],al
  41fa9a:	add    BYTE PTR [eax],al
  41fa9c:	add    DWORD PTR [eax],eax
  41fa9e:	and    BYTE PTR [eax],al
  41faa0:	add    BYTE PTR [eax],al
  41faa2:	add    BYTE PTR [eax],al
  41faa4:	adc    BYTE PTR [eax],0x0
	...
  41fb43:	add    BYTE PTR [edx],dl
  41fb45:	inc    ebp
  41fb46:	cdq    
  41fb47:	jb     0x41fb49
  41fb49:	pop    eax
  41fb4a:	(bad)  
  41fb4d:	pop    eax
  41fb4e:	(bad)  
  41fb51:	pop    eax
  41fb52:	(bad)  
  41fb55:	pop    eax
  41fb56:	(bad)  
  41fb59:	pop    eax
  41fb5a:	(bad)  
  41fb5d:	pop    eax
  41fb5e:	(bad)  
  41fb61:	pop    eax
  41fb62:	(bad)  
  41fb65:	pop    eax
  41fb66:	(bad)  
  41fb69:	pop    eax
  41fb6a:	(bad)  
  41fb6d:	pop    eax
  41fb6e:	(bad)  
  41fb71:	pop    eax
  41fb72:	(bad)  
  41fb75:	pop    eax
  41fb76:	(bad)  
  41fb79:	pop    eax
  41fb7a:	(bad)  
  41fb7d:	pop    eax
  41fb7e:	(bad)  
  41fb81:	pop    eax
  41fb82:	(bad)  
  41fb85:	pop    eax
  41fb86:	(bad)  
  41fb89:	pop    eax
  41fb8a:	(bad)  
  41fb8d:	pop    eax
  41fb8e:	(bad)  
  41fb91:	pop    eax
  41fb92:	(bad)  
  41fb95:	pop    eax
  41fb96:	(bad)  
  41fb99:	pop    eax
  41fb9a:	(bad)  
  41fb9d:	pop    eax
  41fb9e:	(bad)  
  41fba1:	pop    eax
  41fba2:	(bad)  
  41fba5:	pop    eax
  41fba6:	(bad)  
  41fba9:	inc    esp
  41fbaa:	lahf   
  41fbab:	jp     0x41fbad
	...
  41fbc1:	add    BYTE PTR [eax],al
  41fbc3:	add    BYTE PTR [edx],al
  41fbc5:	xchg   esi,eax
  41fbc6:	out    dx,al
  41fbc7:	lock dec edx
  41fbc9:	(bad)  
  41fbcc:	dec    edx
  41fbcd:	(bad)  
  41fbce:	(bad)  
  41fbcf:	dec    DWORD PTR [edx-0x3d]
  41fbd2:	(bad)  
  41fbd3:	dec    DWORD PTR [edx-0x3b]
  41fbd6:	(bad)  
  41fbd7:	dec    DWORD PTR [edx-0x3a]
  41fbda:	(bad)  
  41fbdb:	dec    DWORD PTR [edx-0x3b]
  41fbde:	(bad)  
  41fbdf:	dec    DWORD PTR [edx-0x3f]
  41fbe2:	(bad)  
  41fbe3:	dec    DWORD PTR [edx-0x42]
  41fbe6:	(bad)  
  41fbe7:	dec    DWORD PTR [edx-0x42]
  41fbea:	(bad)  
  41fbeb:	dec    DWORD PTR [edx-0x43]
  41fbee:	(bad)  
  41fbef:	dec    DWORD PTR [edx-0x42]
  41fbf2:	(bad)  
  41fbf3:	dec    DWORD PTR [edx-0x42]
  41fbf6:	(bad)  
  41fbf7:	dec    DWORD PTR [edx-0x42]
  41fbfa:	(bad)  
  41fbfb:	dec    DWORD PTR [edx-0x42]
  41fbfe:	(bad)  
  41fbff:	dec    DWORD PTR [edx-0x42]
  41fc02:	(bad)  
  41fc03:	dec    DWORD PTR [edx-0x42]
  41fc06:	(bad)  
  41fc07:	dec    DWORD PTR [edx-0x40]
  41fc0a:	(bad)  
  41fc0b:	dec    DWORD PTR [edx-0x3d]
  41fc0e:	(bad)  
  41fc0f:	dec    DWORD PTR [edx-0x38]
  41fc12:	(bad)  
  41fc13:	dec    DWORD PTR [edx-0x37]
  41fc16:	(bad)  
  41fc17:	dec    DWORD PTR [edx-0x37]
  41fc1a:	(bad)  
  41fc1b:	dec    DWORD PTR [edx-0x37]
  41fc1e:	(bad)  
  41fc1f:	dec    DWORD PTR [edx-0x36]
  41fc22:	(bad)  
  41fc23:	dec    DWORD PTR [edx-0x34]
  41fc26:	(bad)  
  41fc27:	inc    DWORD PTR [eax]
  41fc29:	scas   eax,DWORD PTR es:[edi]
  41fc2a:	sti    
  41fc2b:	inc    DWORD PTR [eax]
	...
  41fc41:	add    BYTE PTR [eax],al
  41fc43:	add    BYTE PTR [ecx],ch
  41fc45:	mov    eax,0xad00b8fc
  41fc4a:	(bad)  
  41fc4b:	inc    DWORD PTR [eax]
  41fc4d:	stos   DWORD PTR es:[edi],eax
  41fc4e:	(bad)  
  41fc4f:	inc    DWORD PTR [eax]
  41fc51:	test   eax,0xab00ffff
  41fc56:	(bad)  
  41fc57:	inc    DWORD PTR [eax]
  41fc59:	lods   al,BYTE PTR ds:[esi]
  41fc5a:	(bad)  
  41fc5b:	inc    DWORD PTR [eax]
  41fc5d:	cdq    
  41fc5e:	std    
  41fc5f:	inc    DWORD PTR [eax]
  41fc61:	mov    ebx,?
  41fc63:	inc    DWORD PTR [eax]
  41fc65:	(bad)  
  41fc66:	cld    
  41fc67:	inc    DWORD PTR [eax]
  41fc69:	(bad)  
  41fc6a:	std    
  41fc6b:	inc    DWORD PTR [eax]
  41fc6d:	xchg   ecx,eax
  41fc6e:	std    
  41fc6f:	inc    DWORD PTR [eax]
  41fc71:	xchg   ecx,eax
  41fc72:	(bad)  
  41fc73:	inc    DWORD PTR [eax]
  41fc75:	xchg   ecx,eax
  41fc76:	(bad)  
  41fc77:	inc    DWORD PTR [eax]
  41fc79:	xchg   ecx,eax
  41fc7a:	(bad)  
  41fc7b:	inc    DWORD PTR [eax]
  41fc7d:	xchg   ecx,eax
  41fc7e:	(bad)  
  41fc7f:	inc    DWORD PTR [eax]
  41fc81:	xchg   ecx,eax
  41fc82:	std    
  41fc83:	inc    DWORD PTR [eax]
  41fc85:	nop
  41fc86:	std    
  41fc87:	inc    DWORD PTR [eax]
  41fc89:	(bad)  
  41fc8a:	cld    
  41fc8b:	inc    DWORD PTR [eax]
  41fc8d:	(bad)  
  41fc8e:	sti    
  41fc8f:	inc    DWORD PTR [eax]
  41fc91:	fwait
  41fc92:	std    
  41fc93:	inc    DWORD PTR [eax]
  41fc95:	scas   eax,DWORD PTR es:[edi]
  41fc96:	(bad)  
  41fc97:	inc    DWORD PTR [eax]
  41fc99:	mov    al,0xff
  41fc9b:	inc    DWORD PTR [eax]
  41fc9d:	mov    cl,0xff
  41fc9f:	inc    DWORD PTR [eax]
  41fca1:	mov    bl,0xff
  41fca3:	inc    DWORD PTR [eax]
  41fca5:	mov    bh,0xff
  41fca7:	call   FWORD PTR [esi]
  41fca9:	sar    esi,0xc7
	...
  41fcc4:	push   edx
  41fcc5:	mov    eax,0x9d0071f4
  41fcca:	std    
  41fccb:	inc    DWORD PTR [eax]
  41fccd:	fwait
  41fcce:	sti    
  41fccf:	inc    DWORD PTR [eax]
  41fcd1:	cwde   
  41fcd2:	sti    
  41fcd3:	inc    DWORD PTR [eax]
  41fcd5:	fwait
  41fcd6:	sti    
  41fcd7:	inc    DWORD PTR [eax]
  41fcd9:	xchg   ebp,eax
  41fcda:	cli    
  41fcdb:	inc    DWORD PTR [eax]
  41fcdd:	cmp    eax,0xffffffff
  41fce0:	add    BYTE PTR [eax-0x77ff0005],cl
  41fce6:	std    
  41fce7:	inc    DWORD PTR [eax]
  41fce9:	test   esp,edi
  41fceb:	inc    DWORD PTR [eax]
  41fced:	cmp    edx,0xf87d00ff
  41fcf3:	inc    DWORD PTR [eax]
  41fcf5:	jns    0x41fced
  41fcf7:	inc    DWORD PTR [eax]
  41fcf9:	jl     0x41fcf2
  41fcfb:	inc    DWORD PTR [eax]
  41fcfd:	cmp    ecx,0xfc8800ff
  41fd03:	inc    DWORD PTR [eax]
  41fd05:	(bad)  
  41fd06:	std    
  41fd07:	inc    DWORD PTR [eax]
  41fd09:	mov    ?,ebp
  41fd0b:	inc    DWORD PTR [eax]
  41fd0d:	(bad)  
  41fd0e:	cld    
  41fd0f:	inc    DWORD PTR [eax]
  41fd11:	test   eax,edi
  41fd13:	inc    DWORD PTR [eax]
  41fd15:	xchg   edi,eax
  41fd16:	sti    
  41fd17:	inc    DWORD PTR [eax]
  41fd19:	lahf   
  41fd1a:	cld    
  41fd1b:	inc    DWORD PTR [eax]
  41fd1d:	sahf   
  41fd1e:	cld    
  41fd1f:	inc    DWORD PTR [eax]
  41fd21:	mov    ds:0xa900fffd,al
  41fd26:	(bad)  
  41fd27:	call   FWORD PTR [edx-0x39]
  41fd2a:	stc    
  41fd2b:	imul   eax,DWORD PTR [eax],0x0
	...
  41fd42:	add    BYTE PTR [eax],al
  41fd44:	jae    0x41fd05
  41fd46:	out    dx,al
  41fd47:	sub    al,BYTE PTR [edx]
  41fd49:	xchg   edi,eax
  41fd4a:	clc    
  41fd4b:	sti    
  41fd4c:	add    BYTE PTR [ecx-0x72ff0008],dl
  41fd52:	idiv   bh
  41fd54:	add    BYTE PTR [edi-0x77ff0008],cl
  41fd5a:	clc    
  41fd5b:	inc    DWORD PTR [eax]
  41fd5d:	jns    0x41fd53
  41fd5f:	inc    DWORD PTR [eax]
  41fd61:	ins    DWORD PTR es:[edi],dx
  41fd62:	in     al,dx
  41fd63:	inc    DWORD PTR [eax]
  41fd65:	fs out 0xff,al
  41fd68:	add    BYTE PTR [eax-0x1c],ah
  41fd6b:	inc    DWORD PTR [eax]
  41fd6d:	pop    edi
  41fd6e:	in     al,0xff
  41fd70:	add    BYTE PTR [ecx-0x19],ah
  41fd73:	inc    DWORD PTR [eax]
  41fd75:	arpl   ax,bp
  41fd77:	inc    DWORD PTR [eax]
  41fd79:	jmp    0xeb6a:0xff
  41fd7f:	inc    DWORD PTR [eax]
  41fd81:	ins    DWORD PTR es:[edi],dx
  41fd82:	in     eax,dx
  41fd83:	inc    DWORD PTR [eax]
  41fd85:	jno    0x41fd75
  41fd87:	inc    DWORD PTR [eax]
  41fd89:	jbe    0x41fd7b
  41fd8b:	inc    DWORD PTR [eax]
  41fd8d:	jle    0x41fd82
  41fd8f:	inc    DWORD PTR [eax]
  41fd91:	xor    bh,0xff
  41fd94:	add    BYTE PTR [ebx-0x6cff0007],cl
  41fd9a:	stc    
  41fd9b:	inc    DWORD PTR [eax]
  41fd9d:	xchg   ecx,eax
  41fd9e:	clc    
  41fd9f:	inc    DWORD PTR [eax]
  41fda1:	cwde   
  41fda2:	cli    
  41fda3:	inc    DWORD PTR [ebx]
  41fda5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fda6:	sti    
  41fda7:	stc    
  41fda8:	xchg   eax,edx
  41fdaa:	hlt    
  41fdab:	add    BYTE PTR es:[eax],al
	...
  41fdc2:	add    BYTE PTR [eax],al
  41fdc4:	mov    dl,al
  41fdc6:	call   0xf2da16cd
  41fdcb:	int    0x0
  41fdcd:	xchg   ah,dh
  41fdcf:	inc    DWORD PTR [eax]
  41fdd1:	xor    dl,0xff
  41fdd4:	add    BYTE PTR [ecx+0x6600fff3],al
  41fdda:	loope  0x41fddb
  41fddc:	add    BYTE PTR [edx-0x31],dl
  41fddf:	inc    DWORD PTR [eax]
  41fde1:	push   edi
  41fde2:	sar    bh,cl
  41fde4:	add    BYTE PTR [ecx-0x25],ah
  41fde7:	inc    DWORD PTR [eax]
  41fde9:	gs loope 0x41fdeb
  41fdec:	add    BYTE PTR [eax-0x1e],ah
  41fdef:	inc    DWORD PTR [eax]
  41fdf1:	arpl   si,sp
  41fdf3:	inc    DWORD PTR [eax]
  41fdf5:	addr16 jmp 0xebabfefa
  41fdfb:	inc    DWORD PTR [eax]
  41fdfd:	outs   dx,BYTE PTR ds:[esi]
  41fdfe:	in     eax,dx
  41fdff:	inc    DWORD PTR [eax]
  41fe01:	jo     0x41fdef
  41fe03:	inc    DWORD PTR [eax]
  41fe05:	ins    DWORD PTR es:[edi],dx
  41fe06:	jmp    0xff:0xe56700ff
  41fe0d:	pop    ebx
  41fe0e:	fdivr  st,st(7)
  41fe10:	add    BYTE PTR [ebx-0x30],dl
  41fe13:	inc    DWORD PTR [eax]
  41fe15:	imul   esp,ecx,0xf58600ff
  41fe1b:	inc    DWORD PTR [eax]
  41fe1d:	mov    ebp,esi
  41fe1f:	inc    DWORD PTR [eax]
  41fe21:	xchg   ecx,eax
  41fe22:	clc    
  41fe23:	call   FWORD PTR [edi]
  41fe25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe26:	test   ecx,0x1f1d399
	...
  41fe48:	mov    eax,ds:0x7d0083eb
  41fe4e:	icebp  
  41fe4f:	inc    DWORD PTR [eax]
  41fe51:	js     0x41fe42
  41fe53:	inc    DWORD PTR [eax]
  41fe55:	fs (bad) 
  41fe58:	add    BYTE PTR [edx-0x4b],al
  41fe5b:	inc    DWORD PTR [eax]
  41fe5d:	push   ecx
  41fe5e:	(bad)  
  41fe5f:	inc    DWORD PTR [eax]
  41fe61:	pop    ebp
  41fe62:	aam    0xff
  41fe64:	add    BYTE PTR [ebp-0x23],ah
  41fe67:	inc    DWORD PTR [eax]
  41fe69:	imul   esp,ebx,0xe45f00ff
  41fe6f:	inc    DWORD PTR [eax]
  41fe71:	pop    edi
  41fe72:	call   0xeca5ff76
  41fe77:	inc    DWORD PTR [eax]
  41fe79:	push   0x6d00ffee
  41fe7e:	out    dx,eax
  41fe7f:	inc    DWORD PTR [eax]
  41fe81:	jno    0x41fe73
  41fe83:	inc    DWORD PTR [eax]
  41fe85:	jb     0x41fe75
  41fe87:	inc    DWORD PTR [eax]
  41fe89:	imul   esp,esi,0xffffffff
  41fe8c:	add    BYTE PTR [edx-0x2b],bl
  41fe8f:	inc    DWORD PTR [eax]
  41fe91:	dec    eax
  41fe92:	mov    esi,0xae3c00ff
  41fe97:	inc    DWORD PTR [eax]
  41fe99:	pop    esi
  41fe9a:	aam    0xff
  41fe9c:	add    BYTE PTR [edi-0x19],ch
  41fe9f:	inc    DWORD PTR [eax]
  41fea1:	jle    0x41fe94
  41fea3:	dec    DWORD PTR [ebx-0x50]
  41fea6:	bnd jg 0x41fea9
	...
  41fec5:	add    BYTE PTR [eax],al
  41fec7:	add    BYTE PTR [ebx-0x52],ah
  41feca:	in     eax,0x37
  41fecc:	add    BYTE PTR [edi+ebp*8-0x2],bh
  41fed0:	add    BYTE PTR [ebp+ebp*8-0x1],dh
  41fed4:	add    BYTE PTR [esi+eax*8-0x1],dl
  41fed8:	add    BYTE PTR [edi+eiz*4],bh
  41fedb:	inc    DWORD PTR [eax]
  41fedd:	push   ebx
  41fede:	(bad)  
  41fedf:	inc    DWORD PTR [eax]
  41fee1:	push   edi
  41fee2:	aam    0xff
  41fee4:	add    BYTE PTR [ecx-0x23],ah
  41fee7:	dec    DWORD PTR [esi]
  41fee9:	jb     0x41fecc
  41feeb:	jmp    DWORD PTR [esi]
  41feed:	js     0x41fecd
  41feef:	(bad)  
  41fef0:	cmp    DWORD PTR [edx-0x73ba0023],eax
  41fef6:	fdivp  st(7),st
  41fef8:	inc    ebp
  41fef9:	mov    ds,edi
  41fefb:	(bad)  
  41fefc:	cmp    cl,BYTE PTR [edx+eiz*8-0x1a7ad901]
  41ff03:	dec    DWORD PTR ds:0xffea7b
  41ff09:	push   0x5400ffe6
  41ff0e:	sar    bh,cl
  41ff10:	add    BYTE PTR [eax-0x44],cl
  41ff13:	inc    DWORD PTR [eax]
  41ff15:	ss lahf 
  41ff17:	inc    DWORD PTR [eax]
  41ff19:	inc    esi
  41ff1a:	mov    eax,0xd55600ff
  41ff1f:	inc    DWORD PTR [eax]
  41ff21:	(bad)  
  41ff22:	(bad)  
  41ff24:	push   ecx
  41ff25:	cdq    
  41ff26:	aad    0x34
	...
  41ff48:	jnp    0x41ff00
  41ff4a:	loopne 0x41ff52
  41ff4c:	adc    al,BYTE PTR [ebx+0x6f00d9ec]
  41ff52:	in     al,dx
  41ff53:	inc    DWORD PTR [eax]
  41ff55:	pop    edx
  41ff56:	sar    edi,1
  41ff58:	add    BYTE PTR [edx],bh
  41ff5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff5b:	inc    DWORD PTR [eax]
  41ff5d:	dec    edi
  41ff5e:	ret    0x3eff
  41ff61:	jp     0x41ff29
  41ff63:	dec    DWORD PTR [ebx-0x37003b5a]
  41ff69:	into   
  41ff6a:	sar    edi,cl
  41ff6c:	retf   0xc4c9
  41ff6f:	(bad)  
  41ff70:	fstp   st(1)
  41ff72:	sar    edi,1
  41ff74:	fcom   st(0)
  41ff76:	(bad)  
  41ff77:	jmp    eax
  41ff79:	fcmovbe st,st(2)
  41ff7b:	call   esp
  41ff7d:	int    0xc3
  41ff7f:	call   ebp
  41ff81:	ror    bh,cl
  41ff83:	push   DWORD PTR [eax-0x61004148]
  41ff89:	mov    ah,0xcd
  41ff8b:	(bad)  
  41ff8c:	cmp    esi,DWORD PTR [ebx-0x41]
  41ff8f:	inc    DWORD PTR [eax]
  41ff91:	inc    esp
  41ff92:	mov    bh,0xff
  41ff94:	add    BYTE PTR [ebx],dh
  41ff96:	fwait
  41ff97:	inc    DWORD PTR [eax]
  41ff99:	inc    edx
  41ff9a:	mov    ch,0xff
  41ff9c:	add    BYTE PTR [ecx-0x2d],dl
  41ff9f:	dec    DWORD PTR [esi]
  41ffa1:	data16 (bad) 
  41ffa3:	(bad)  
  41ffa4:	push   esi
  41ffa5:	nop
  41ffa6:	mov    edi,0x5
	...
  41ffcb:	add    BYTE PTR [edi],ch
  41ffcd:	(bad)  
  41ffce:	out    0x95,eax
  41ffd0:	add    BYTE PTR [edi-0x12],ch
  41ffd3:	inc    DWORD PTR [eax]
  41ffd5:	pop    esp
  41ffd6:	(bad)  
  41ffd8:	add    eax,0x75ffaa3f
  41ffdd:	mov    WORD PTR [edi+edi*8-0x514742],gs
  41ffe4:	(bad)  
  41ffe6:	into   
  41ffe7:	dec    esi
  41ffe9:	retf   0xffc4
  41ffec:	(bad)  
  41ffee:	(bad)  
  41ffef:	dec    ebp
  41fff1:	retf   0xffc6
  41fff4:	fstp   st(4)
  41fff6:	fdivr  st,st(7)
  41fff8:	ror    ch,1
  41fffa:	enter  0xdcff,0xda
  41fffe:	xlat   BYTE PTR ds:[ebx]
  41ffff:	dec    edx
  420001:	mov    cl,0xff
  420004:	aad    0xd2
  420006:	int    0xff
  420008:	sar    BYTE PTR [ecx-0x3a350051],0xbd
  42000f:	jmp    DWORD PTR [ebp+0x7a]
  420012:	fwait
  420013:	dec    DWORD PTR ds:0xff993a
  420019:	inc    eax
  42001a:	mov    bh,0xff
  42001c:	add    BYTE PTR [ecx-0x2a],dl
  42001f:	jmp    DWORD PTR [edx]
  420021:	outs   dx,DWORD PTR ds:[esi]
  420022:	retf   
  420023:	nop
	...
  42004c:	push   ebx
  42004d:	sahf   
  42004e:	fiadd  WORD PTR [ebp+0x0]
  420051:	jno    0x420042
  420053:	inc    DWORD PTR [eax]
  420055:	pop    ebp
  420056:	in     al,0xff
  420058:	push   ds
  420059:	pop    ecx
  42005a:	mov    cl,0xff
  42005c:	mov    ds:0xcaff8f9a,al
  420061:	leave  
  420062:	(bad)  
  420063:	inc    eax
  420065:	mov    esi,0xd9daffbb
  42006a:	(bad)  
  42006b:	dec    ebp
  42006d:	retf   
  42006e:	(bad)  
  42006f:	(bad)  
  420070:	(bad)  
  420072:	xlat   BYTE PTR ds:[ebx]
  420073:	call   edx
  420075:	iret   
  420076:	retf   0xdfff
  420079:	fstp   st(1)
  42007b:	dec    edi
  42007d:	int3   
  42007e:	(bad)  
  42007f:	(bad)  
  420080:	(bad)  
  420082:	aam    0xff
  420084:	sar    DWORD PTR [esi-0x35330046],0xc7
  42008b:	jmp    FWORD PTR [ecx-0x47005d5a]
  420091:	mov    dl,0xaa
  420093:	jmp    DWORD PTR [eax]
  420095:	dec    eax
  420096:	xchg   esi,eax
  420097:	inc    DWORD PTR [eax]
  420099:	inc    ecx
  42009a:	(bad)  
  42009d:	push   ebx
  42009e:	fcos   
  4200a0:	aaa    
  4200a1:	jbe    0x42005b
  4200a3:	inc    edx
	...
  4200cc:	mov    ds:0x3804e3c7,al
  4200d1:	xchg   ecx,eax
  4200d2:	out    0x5f,al
  4200d4:	das    
  4200d5:	mov    ebp,esp
  4200d7:	jae    0x420105
  4200d9:	jne    0x42009c
  4200db:	jge    0x42008d
  4200dd:	scas   al,BYTE PTR es:[edi]
  4200de:	test   eax,0xacb1b3f7
  4200e3:	call   edx
  4200e5:	ror    esi,1
  4200e7:	dec    esp
  4200e9:	leave  
  4200ea:	(bad)  
  4200ed:	(bad)  
  4200ef:	call   eax
  4200f1:	int    0xc7
  4200f3:	(bad)  
  4200f4:	(bad)  
  4200f6:	fcos   
  4200f8:	ror    bh,cl
  4200fa:	retf   0xdeff
  4200fd:	(bad)  
  4200ff:	dec    ebx
  420101:	enter  0xffc3,0xd3
  420105:	ror    dh,cl
  420107:	push   DWORD PTR [esi-0x3f00504d]
  42010d:	mov    esi,0x8a8effba
  420112:	xor    esi,0x28
  420115:	pop    edi
  420116:	mov    ds:0xbb5a1081,eax
  42011b:	jae    0x420139
  42011d:	arpl   WORD PTR [edi-0x517cafa0],di
  420123:	add    eax,0x0
	...
  42015c:	mov    es,WORD PTR [edi-0x3c3a4481]
  420162:	sar    edi,0xc3
  420165:	mov    edi,0xdce1ffb8
  42016a:	aam    0xff
  42016c:	fst    st(4)
  42016e:	enter  0xe7ff,0xe0
  420172:	xlat   BYTE PTR ds:[ebx]
  420173:	(bad)  
  420174:	(bad)  
  420176:	retf   
  420177:	(bad)  
  420178:	call   0xde41dc5f
  42017d:	rol    edi,cl
  42017f:	jmp    ebx
  420181:	(bad)  
  420183:	dec    edx
  420185:	ret    0xffb7
  420188:	int    0xc9
  42018a:	(bad)  
  42018b:	jmp    DWORD PTR [ecx-0x51006662]
  420191:	test   eax,0xcda3
	...
  4201da:	add    BYTE PTR [eax],al
  4201dc:	test   eax,0xac85a3a7
  4201e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4201e2:	pushf  
  4201e3:	dec    ecx
  4201e5:	retf   
  4201e6:	int3   
  4201e7:	call   DWORD PTR [edx+0x6dffcdb0]
  4201ed:	mov    ds:0x9252ffda,eax
  4201f2:	fdivp  st(7),st
  4201f4:	dec    eax
  4201f5:	xchg   ebx,eax
  4201f6:	in     al,0xff
  4201f8:	dec    eax
  4201f9:	xchg   edi,eax
  4201fa:	out    0xff,al
  4201fc:	push   ebx
  4201fd:	lahf   
  4201fe:	jecxz  0x4201ff
  420200:	push   0xffffffa5
  420202:	(bad)  
  420204:	nop
  420205:	stos   DWORD PTR es:[edi],eax
  420206:	enter  0xaaff,0xac
  42020a:	lods   eax,DWORD PTR ds:[esi]
  42020b:	(bad)  
  42020c:	mov    ebp,0x8cffb1b8
  420211:	mov    BYTE PTR [ebx+0x78],al
	...
  42025b:	add    BYTE PTR [esi+0x7e2d8794],bl
  420261:	xchg   esp,eax
  420262:	scas   eax,DWORD PTR es:[edi]
  420263:	std    
  420264:	push   ss
  420265:	push   0xffffffd0
  420267:	inc    DWORD PTR [eax]
  420269:	imul   esp,edx,0xec6f00ff
  42026f:	inc    DWORD PTR [eax]
  420271:	out    dx,ax
  420273:	inc    DWORD PTR [eax]
  420275:	ins    DWORD PTR es:[edi],dx
  420276:	repnz inc DWORD PTR [eax]
  420279:	jne    0x42026f
  42027b:	inc    DWORD PTR [eax]
  42027d:	jnp    0x420275
  42027f:	inc    DWORD PTR [eax]
  420281:	jnp    0x420279
  420283:	inc    DWORD PTR [eax]
  420285:	push   0xffffffe8
  420287:	call   DWORD PTR [esi]
  420289:	pop    edi
  42028a:	enter  0x5cff,0x72
  42028e:	xchg   ebp,eax
  42028f:	std    
  420290:	mov    ah,0xac
  420292:	mov    ds:0x3c,eax
	...
  4202db:	add    BYTE PTR [ebp+0x6d],cl
  4202de:	xchg   edx,eax
  4202df:	add    eax,DWORD PTR [edi]
  4202e1:	dec    eax
  4202e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4202e3:	rol    DWORD PTR [eax],1
  4202e5:	pop    edx
  4202e6:	iret   
  4202e7:	inc    DWORD PTR [eax]
  4202e9:	ins    BYTE PTR es:[edi],dx
  4202ea:	(bad)  
  4202ec:	add    BYTE PTR [esi-0x16],dh
  4202ef:	inc    DWORD PTR [eax]
  4202f1:	ins    DWORD PTR es:[edi],dx
  4202f2:	in     eax,dx
  4202f3:	inc    DWORD PTR [eax]
  4202f5:	jb     0x4202e8
  4202f7:	inc    DWORD PTR [eax]
  4202f9:	jnp    0x4202ee
  4202fb:	inc    DWORD PTR [eax]
  4202fd:	xor    esp,0xf28000ff
  420303:	inc    DWORD PTR [eax]
  420305:	push   0xffffffe3
  420307:	inc    DWORD PTR [eax]
  420309:	dec    ebp
  42030a:	(bad)  
  42030b:	inc    DWORD PTR [esi]
  42030d:	inc    eax
  42030e:	mov    al,ds:0x916c4bd5
  420313:	add    al,0x0
	...
  42035d:	add    BYTE PTR [eax],al
  42035f:	add    BYTE PTR [ebx],cl
  420361:	inc    edi
  420362:	lahf   
  420363:	mov    eax,DWORD PTR [eax]
  420365:	pop    eax
  420366:	(bad)  
  420367:	inc    DWORD PTR [eax]
  420369:	imul   ebx,ebp,0xffffffff
  42036c:	add    BYTE PTR [edi-0x16],dh
  42036f:	inc    DWORD PTR [eax]
  420371:	outs   dx,BYTE PTR ds:[esi]
  420372:	out    dx,al
  420373:	inc    DWORD PTR [eax]
  420375:	jb     0x420368
  420377:	inc    DWORD PTR [eax]
  420379:	jl     0x42036f
  42037b:	inc    DWORD PTR [eax]
  42037d:	xor    ch,0xff
  420380:	add    BYTE PTR [edi-0xe],bh
  420383:	inc    DWORD PTR [eax]
  420385:	data16 (bad) 
  420388:	add    BYTE PTR [edx-0x43],cl
  42038b:	dec    DWORD PTR ds:0x8f9c46
	...
  4203dd:	add    BYTE PTR [eax],al
  4203df:	add    BYTE PTR [esi],dl
  4203e1:	dec    esi
  4203e2:	call   0xff:0xbe510042
  4203e9:	imul   ebx,esp,0xffffffff
  4203ec:	add    BYTE PTR [eax-0x16],bh
  4203ef:	inc    DWORD PTR [eax]
  4203f1:	jo     0x4203e1
  4203f3:	inc    DWORD PTR [eax]
  4203f5:	jb     0x4203e8
  4203f7:	inc    DWORD PTR [eax]
  4203f9:	jl     0x4203ef
  4203fb:	inc    DWORD PTR [eax]
  4203fd:	xor    ebp,0xffffffff
  420400:	add    BYTE PTR [ebp-0xf],bh
  420403:	inc    DWORD PTR [eax]
  420405:	(bad)  
  420406:	(bad)  
  420408:	add    BYTE PTR [ebx+esi*4-0x1],al
  42040c:	adc    ecx,DWORD PTR [ebx-0x68]
  42040f:	inc    edi
	...
  420460:	and    BYTE PTR [eax-0x64],bl
  420463:	or     eax,0xe6b24d03
  420468:	add    BYTE PTR [edi-0x27],ah
  42046b:	inc    DWORD PTR [eax]
  42046d:	jne    0x420459
  42046f:	inc    DWORD PTR [eax]
  420471:	outs   dx,BYTE PTR ds:[esi]
  420472:	lock inc DWORD PTR [eax]
  420475:	ins    BYTE PTR es:[edi],dx
  420476:	hlt    
  420477:	inc    DWORD PTR [eax]
  420479:	js     0x420471
  42047b:	inc    DWORD PTR [eax]
  42047d:	xor    bh,0xff
  420480:	add    BYTE PTR [ecx-0xf],bh
  420483:	inc    DWORD PTR [eax]
  420485:	pop    ebx
  420486:	aad    0xff
  420488:	add    eax,DWORD PTR [ebx-0x57]
  42048b:	out    0x1d,eax
  42048d:	push   esi
  42048e:	call   0x0:0xf
	...
  4204e1:	add    BYTE PTR [eax],al
  4204e3:	add    BYTE PTR [edx],al
  4204e5:	inc    esi
  4204e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204e7:	lods   eax,DWORD PTR ds:[esi]
  4204e8:	add    eax,0x28ffd366
  4204ed:	mov    ah,bl
  4204ef:	inc    DWORD PTR [ebp+edx*4-0x1b]
  4204f3:	call   DWORD PTR [ebx-0x67]
  4204f6:	out    0xff,al
  4204f8:	push   ebx
  4204f9:	mov    al,ds:0x9e44ffe8
  4204fe:	jmp    0xe5c82c02
  420503:	inc    DWORD PTR [ebx]
  420505:	push   edi
  420506:	int3   
  420507:	inc    DWORD PTR [edx]
  420509:	inc    ecx
  42050a:	mov    eax,ds:0xa9
	...
  420563:	add    BYTE PTR [ebx],bh
  420565:	gs cdq 
  420567:	bound  esi,QWORD PTR [ebp-0x2a003641]
  42056d:	ror    bl,cl
  42056f:	(bad)  
  420570:	jmp    0xcfdc:0xe5ffdee5
  420577:	(bad)  
  420578:	out    dx,al
  420579:	out    0xde,al
  42057b:	(bad)  
  42057c:	(bad)  
  42057e:	retf   0xd9ff
  420581:	aad    0xd0
  420583:	dec    DWORD PTR [esi+edx*4+0x6d47ffa6]
  42058a:	popf   
  42058b:	bound  eax,QWORD PTR [eax]
	...
  4205e1:	add    BYTE PTR [eax],al
  4205e3:	add    BYTE PTR [ebp-0x4fd55d58],ch
  4205e9:	stos   BYTE PTR es:[edi],al
  4205ea:	mov    al,ds:0xd9dde0f7
  4205ef:	(bad)  
  4205f0:	fcmovbe st,st(7)
  4205f2:	sar    bh,cl
  4205f4:	in     eax,0xe3
  4205f6:	(bad)  
  4205f8:	fcmovnu st,st(0)
  4205fa:	sar    edi,cl
  4205fc:	loope  0x4205dc
  4205fe:	(bad)  
  420600:	mov    cl,0xba
  420603:	inc    eax
  420605:	mov    ebx,0x9096f8b4
  42060a:	xchg   DWORD PTR [esi],ebx
	...
  420668:	mov    ecx,0xcdd2b2b7
  42066d:	retf   
  42066e:	(bad)  
  420671:	jecxz  0x420652
  420673:	(bad)  
  420674:	fcmovbe st,st(6)
  420676:	sar    edi,1
  420678:	in     eax,0xe3
  42067a:	(bad)  
  42067c:	aam    0xd0
  42067e:	retf   0xd3ff
  420681:	iret   
  420682:	retf   
  420683:	call   FWORD PTR [edx+0xc18f95]
	...
  4206e5:	add    BYTE PTR [eax],al
  4206e7:	add    BYTE PTR [esi-0x2983736e],dl
  4206ed:	aam    0xd0
  4206ef:	(bad)  
  4206f0:	fcmovbe st,st(7)
  4206f2:	sar    edi,cl
  4206f4:	in     eax,0xe3
  4206f6:	(bad)  
  4206f8:	fcmovnu st,st(0)
  4206fa:	sar    edi,cl
  4206fc:	loopne 0x4206db
  4206fe:	fcos   
  420700:	mov    ecx,0xafffadb4
  420705:	lods   al,BYTE PTR ds:[esi]
  420706:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420707:	mov    eax,DWORD PTR [eax]
	...
  420765:	add    BYTE PTR [eax],al
  420767:	add    BYTE PTR [esi-0x3ebf5955],ch
  42076d:	mov    ecx,0xe6edfdb0
  420772:	fdivp  st(7),st
  420774:	out    0xdd,al
  420776:	sar    edi,1
  420778:	in     eax,dx
  420779:	out    0xde,al
  42077b:	(bad)  
  42077c:	fst    st(2)
  42077e:	(bad)  
  420781:	lds    edi,FWORD PTR [ebp-0x736c6702]
  420787:	xor    DWORD PTR [eax],eax
	...
  4207e5:	add    BYTE PTR [eax],al
  4207e7:	add    BYTE PTR [ebp+ecx*4-0x6073f975],cl
  4207ee:	mov    dl,0xdd
  4207f0:	addr16 test eax,0xa25effe1
  4207f6:	call   0xe9e55cfa
  4207fb:	jmp    FWORD PTR [ebx-0x59]
  4207fe:	fdivp  st(7),st
  420800:	jp     0x42078e
  420802:	mov    ds:0x888b8bd5,eax
  420807:	add    al,0x0
	...
  420869:	add    BYTE PTR [eax],al
  42086b:	add    BYTE PTR [eax],cl
  42086d:	push   ebx
  42086e:	mov    al,0x96
  420870:	add    BYTE PTR [ecx-0x18],dh
  420873:	inc    DWORD PTR [eax]
  420875:	jno    0x42086b
  420877:	inc    DWORD PTR [eax]
  420879:	jle    0x420874
  42087b:	inc    DWORD PTR [eax]
  42087d:	outs   dx,BYTE PTR ds:[esi]
  42087e:	in     eax,dx
  42087f:	dec    DWORD PTR [ecx]
  420881:	dec    edi
  420882:	scas   eax,DWORD PTR es:[edi]
  420883:	cwde   
	...
  4208ec:	adc    DWORD PTR [ecx-0x5c],edx
  4208ef:	dec    esp
  4208f0:	add    BYTE PTR [edi-0x23],ch
  4208f3:	inc    DWORD PTR [eax]
  4208f5:	jns    0x4208eb
  4208f7:	inc    DWORD PTR [eax]
  4208f9:	cmp    eax,0xffffffff
  4208fc:	add    BYTE PTR [ecx-0x21],ch
  4208ff:	call   DWORD PTR [ecx]
  420901:	dec    edi
  420902:	mov    ds:0x50,eax
	...
  42096b:	add    BYTE PTR [edi],bl
  42096d:	pop    ebp
  42096e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42096f:	adc    BYTE PTR [edx],al
  420971:	data16 shr ch,1
  420974:	add    BYTE PTR [edi+esi*8-0x1],bh
  420978:	add    BYTE PTR [esi+0x6001fffc],al
  42097e:	shl    cl,1
  420980:	adc    eax,0x139e54
	...
  4209ed:	add    BYTE PTR [eax],al
  4209ef:	add    BYTE PTR [eax],dl
  4209f1:	popa   
  4209f2:	shl    DWORD PTR [eax+eax*1+0x67],0xde
  4209f7:	fild   DWORD PTR [ecx]
  4209f9:	ins    DWORD PTR es:[edi],dx
  4209fa:	(bad)  
  4209fc:	or     bl,BYTE PTR [edi-0x3f]
  4209ff:	ja     0x420a01
	...
  420ab5:	add    BYTE PTR [eax],al
  420ab7:	add    bh,bh
  420ab9:	(bad)  
  420aba:	(bad)  
  420abb:	jmp    eax
  420abd:	add    BYTE PTR [eax],al
  420abf:	pop    es
  420ac0:	loopne 0x420ac2
  420ac2:	add    BYTE PTR [edi],al
  420ac4:	loopne 0x420ac6
  420ac6:	add    BYTE PTR [edi],al
  420ac8:	loopne 0x420aca
  420aca:	add    BYTE PTR [edi],al
  420acc:	loopne 0x420ace
  420ace:	add    BYTE PTR [edi],al
  420ad0:	loopne 0x420ad2
  420ad2:	add    BYTE PTR [edi],al
  420ad4:	lock add BYTE PTR [eax],al
  420ad7:	(bad)  
  420ad9:	add    BYTE PTR [eax],al
  420adb:	(bad)  
  420add:	add    BYTE PTR [eax],al
  420adf:	psubb  mm0,QWORD PTR [eax]
  420ae2:	add    BYTE PTR [edi],bl
  420ae4:	clc    
  420ae5:	add    BYTE PTR [eax],al
  420ae7:	pop    ds
  420ae8:	clc    
  420ae9:	add    BYTE PTR [eax],al
  420aeb:	pop    ds
  420aec:	inc    DWORD PTR [eax-0x7f0000ff]
  420af2:	add    edi,edi
  420af4:	inc    DWORD PTR [eax-0x7f0000ff]
  420afa:	add    edi,edi
  420afc:	inc    eax
  420afe:	add    edi,edi
  420b00:	inc    eax
  420b02:	add    edi,edi
  420b04:	inc    eax
  420b06:	add    edi,edi
  420b08:	jmp    eax
  420b0a:	pop    es
  420b0b:	(bad)  
  420b0c:	jmp    eax
  420b0e:	pop    es
  420b0f:	(bad)  
  420b10:	jmp    eax
  420b12:	pop    es
  420b13:	(bad)  
  420b14:	push   eax
  420b16:	ud0    edi,edi
  420b19:	lock ud0 edi,edi
  420b1d:	lock ud0 edi,edi
  420b21:	lock ud0 edi,edi
  420b25:	clc    
  420b26:	pop    ds
  420b27:	(bad)  
  420b28:	(bad)  
  420b29:	clc    
  420b2a:	pop    ds
  420b2b:	(bad)  
  420b2c:	(bad)  
  420b2d:	clc    
  420b2e:	pop    ds
  420b2f:	(bad)  
  420b30:	(bad)  
  420b31:	cld    
  420b32:	aas    
  420b33:	(bad)  
  420b34:	(bad)  
  420b35:	(bad)  
  420b36:	(bad)  
  420b37:	jmp    FWORD PTR [eax]
  420b39:	add    BYTE PTR [eax],al
  420b3b:	add    BYTE PTR [eax],dl
  420b3d:	add    BYTE PTR [eax],al
  420b3f:	add    BYTE PTR [eax],ah
  420b41:	add    BYTE PTR [eax],al
  420b43:	add    BYTE PTR [ecx],al
  420b45:	add    BYTE PTR [eax],ah
  420b47:	add    BYTE PTR [eax],al
  420b49:	add    BYTE PTR [eax],al
  420b4b:	add    BYTE PTR [eax+0x4],al
	...
  420b62:	add    BYTE PTR [eax],al
  420b64:	or     BYTE PTR [esp+esi*4+0x64],bl
  420b68:	add    BYTE PTR [eax-0x3b],bl
  420b6b:	inc    DWORD PTR [eax]
  420b6d:	pop    eax
  420b6e:	(bad)  
  420b71:	pop    eax
  420b72:	(bad)  
  420b75:	pop    eax
  420b76:	(bad)  
  420b79:	pop    eax
  420b7a:	(bad)  
  420b7d:	pop    eax
  420b7e:	(bad)  
  420b81:	pop    eax
  420b82:	(bad)  
  420b85:	pop    eax
  420b86:	(bad)  
  420b89:	pop    eax
  420b8a:	(bad)  
  420b8d:	pop    eax
  420b8e:	(bad)  
  420b91:	pop    eax
  420b92:	(bad)  
  420b95:	pop    eax
  420b96:	(bad)  
  420b99:	mov    si,0x66
  420b9d:	add    BYTE PTR [eax],al
  420b9f:	add    BYTE PTR [eax],al
  420ba1:	add    BYTE PTR [eax],al
  420ba3:	add    BYTE PTR [esi],dh
  420ba5:	mov    ecx,0xb51a8afb
  420baa:	(bad)  
  420bab:	call   FWORD PTR [edx]
  420bad:	mov    ch,0xff
  420baf:	call   FWORD PTR [edx]
  420bb1:	lods   al,BYTE PTR ds:[esi]
  420bb2:	(bad)  
  420bb3:	call   FWORD PTR [edx]
  420bb5:	mov    al,ds:0xa01affff
  420bba:	(bad)  
  420bbb:	call   FWORD PTR [edx]
  420bbd:	sahf   
  420bbe:	(bad)  
  420bbf:	call   FWORD PTR [edx]
  420bc1:	lahf   
  420bc2:	(bad)  
  420bc3:	call   FWORD PTR [edx]
  420bc5:	mov    ds:0xa31affff,eax
  420bca:	(bad)  
  420bcb:	call   FWORD PTR [edx]
  420bcd:	scas   al,BYTE PTR es:[edi]
  420bce:	(bad)  
  420bcf:	call   FWORD PTR [edx]
  420bd1:	mov    edx,0xbd1affff
  420bd6:	(bad)  
  420bd7:	push   DWORD PTR [ebx]
  420bd9:	(bad)  
  420bda:	dec    DWORD PTR [edi+0x0]
  420be0:	add    BYTE PTR [eax],al
  420be2:	add    BYTE PTR [eax],al
  420be4:	jae    0x420ba5
  420be6:	out    dx,eax
  420be7:	xor    al,BYTE PTR [eax]
  420be9:	nop
  420bea:	clc    
  420beb:	inc    DWORD PTR [eax]
  420bed:	(bad)  
  420bee:	clc    
  420bef:	inc    DWORD PTR [eax]
  420bf1:	ja     0x420be2
  420bf3:	inc    DWORD PTR [eax]
  420bf5:	push   0xffffffe7
  420bf7:	inc    DWORD PTR [eax]
  420bf9:	callw  0xcfc
  420bfd:	gs jmp 0xff:0xee6b00ff
  420c05:	jae    0x420bf7
  420c07:	inc    DWORD PTR [eax]
  420c09:	jbe    0x420bf9
  420c0b:	inc    DWORD PTR [eax]
  420c0d:	jnp    0x420c00
  420c0f:	inc    DWORD PTR [eax]
  420c11:	xchg   edx,eax
  420c12:	cli    
  420c13:	inc    DWORD PTR [eax]
  420c15:	call   0x38f6:0xce7dfffb
	...
  420c24:	cmp    DWORD PTR [edi-0x73ecfc1a],0xfffffff1
  420c2b:	fild   DWORD PTR [eax]
  420c2d:	addr16 fdivp st(7),st
  420c30:	add    BYTE PTR [edx-0x3f],cl
  420c33:	inc    DWORD PTR [eax]
  420c35:	pop    edx
  420c36:	fcos   
  420c38:	add    BYTE PTR [edx-0x1d],ah
  420c3b:	inc    DWORD PTR [ecx]
  420c3d:	out    0xff,ax
  420c40:	add    dh,BYTE PTR [eax-0x14]
  420c43:	inc    DWORD PTR [eax]
  420c45:	jno    0x420c36
  420c47:	inc    DWORD PTR [eax]
  420c49:	pop    esi
  420c4a:	loope  0x420c4b
  420c4c:	add    BYTE PTR [ebx+edi*4-0x1],al
  420c50:	add    BYTE PTR [eax-0x2a],ah
  420c53:	dec    DWORD PTR [edi]
  420c55:	mov    esi,ebp
  420c57:	loope  0x420be1
  420c59:	(bad)  
  420c5a:	jmp    0x420c64
	...
  420c67:	add    BYTE PTR [ecx],dh
  420c69:	xchg   ebx,eax
  420c6a:	jmp    0xeff:0xd5580092
  420c71:	dec    esp
  420c72:	mov    dl,0xff
  420c74:	bound  edx,QWORD PTR [ecx-0x4b620037]
  420c7a:	retf   
  420c7b:	push   DWORD PTR [ebx-0x4b003542]
  420c81:	ror    esp,0xff
  420c84:	fwait
  420c85:	mov    ah,0xca
  420c87:	call   FWORD PTR [esi-0x74]
  420c8a:	ret    
  420c8b:	dec    DWORD PTR [esi]
  420c8d:	inc    ebp
  420c8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c8f:	inc    DWORD PTR [eax]
  420c91:	aas    
  420c92:	mov    ebx,0xd17223ff
  420c97:	call   0x0:0x0
	...
  420ca6:	add    BYTE PTR [eax],al
  420ca8:	pusha  
  420ca9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420caa:	loop   0x420ce8
  420cac:	add    ah,BYTE PTR [ebx-0x1b]
  420caf:	repz pusha 
  420cb1:	jnp    0x420c55
  420cb3:	dec    bh
  420cb5:	ret    
  420cb6:	mov    bl,0xff
  420cb8:	aam    0xcd
  420cba:	(bad)  
  420cbb:	call   edi
  420cbd:	rol    dh,1
  420cbf:	(bad)  
  420cc0:	fcom   st(1)
  420cc2:	enter  0xd0ff,0xc8
  420cc6:	mov    edi,0xa6b7c1ff
  420ccb:	call   FWORD PTR [edi+0x70]
  420cce:	nop
  420ccf:	inc    BYTE PTR [eax]
  420cd1:	inc    ebx
  420cd2:	(bad)
  420cd5:	js     0x420c93
  420cd7:	inc    edx
	...
  420cec:	push   ebx
  420ced:	popf   
  420cee:	fst    QWORD PTR [ecx]
  420cf0:	or     BYTE PTR [ebp-0x453b7e6d],0xae
  420cf7:	dec    esi
  420cf9:	int3   
  420cfa:	(bad)  
  420cfb:	inc    esi
  420cfd:	leave  
  420cfe:	int    0xff
  420d00:	(bad)  
  420d01:	retf   
  420d02:	into   
  420d03:	dec    eax
  420d05:	mov    cl,0xff
  420d08:	mov    eax,0x7fffa2af
  420d0d:	xchg   BYTE PTR [edx-0x5094d57b],cl
  420d13:	adc    DWORD PTR [eax],eax
	...
  420d2d:	add    BYTE PTR [eax],al
  420d2f:	add    BYTE PTR [esi+0x522e868e],dl
  420d35:	xor    BYTE PTR [esi-0x1c81df01],0xff
  420d3c:	or     al,0x75
  420d3e:	out    dx,al
  420d3f:	dec    DWORD PTR [edx+eax*4]
  420d42:	repnz call FWORD PTR [esi]
  420d45:	sub    eax,0xffffffff
  420d48:	dec    ebx
  420d49:	je     0x420cfa
  420d4b:	call   DWORD PTR [ebp+0x33878f]
	...
  420d6d:	add    BYTE PTR [eax],al
  420d6f:	add    BYTE PTR [esi],ah
  420d71:	pop    ecx
  420d72:	xchg   esi,eax
  420d73:	add    eax,DWORD PTR [eax]
  420d75:	dec    esi
  420d76:	mov    ecx,0xe76f00db
  420d7b:	inc    DWORD PTR [eax]
  420d7d:	jo     0x420d70
  420d7f:	inc    DWORD PTR [eax]
  420d81:	jg     0x420d79
  420d83:	inc    DWORD PTR [eax]
  420d85:	je     0x420d75
  420d87:	inc    DWORD PTR [eax]
  420d89:	inc    ebp
  420d8a:	mov    ah,0xe0
  420d8c:	sub    BYTE PTR [ebx-0x68],bl
  420d8f:	add    eax,0x0
	...
  420db4:	or     BYTE PTR [edi-0x55],cl
  420db7:	xchg   esp,eax
  420db8:	add    BYTE PTR [ebx-0x1c],ch
  420dbb:	inc    DWORD PTR [eax]
  420dbd:	jo     0x420db1
  420dbf:	inc    DWORD PTR [eax]
  420dc1:	jg     0x420dbb
  420dc3:	inc    DWORD PTR [eax]
  420dc5:	push   0xffffffe8
  420dc7:	inc    DWORD PTR [edi]
  420dc9:	inc    edi
  420dca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420dcb:	fwait
	...
  420df4:	xor    DWORD PTR [ecx-0x64],esp
  420df7:	inc    esi
  420df8:	ja     0x420d9a
  420dfa:	retf   0xa8ff
  420dfd:	rcr    edx,0xff
  420e00:	test   al,0xc4
  420e02:	fcos   
  420e04:	jae    0x420d9d
  420e06:	ret    0x30ff
  420e09:	pop    ebp
  420e0a:	cdq    
  420e0b:	dec    ebp
	...
  420e34:	xchg   edi,eax
  420e35:	xchg   ecx,eax
  420e36:	mov    DWORD PTR [esp+eax*8],ecx
  420e39:	mov    ebx,0xdde5edaf
  420e3e:	sar    edi,cl
  420e40:	loop   0x420e1b
  420e42:	iret   
  420e43:	(bad)  
  420e44:	mov    ebp,0x97f0a6b2
  420e49:	xchg   edx,eax
  420e4a:	mov    dl,BYTE PTR [eax]
	...
  420e78:	mov    dl,0xab
  420e7a:	mov    eax,ds:0xd4dce1ae
  420e7f:	(bad)  
  420e80:	fst    st(7)
  420e82:	into   
  420e83:	jmp    FWORD PTR [edi+0xb59ba6]
	...
  420eb5:	add    BYTE PTR [eax],al
  420eb7:	add    BYTE PTR [esp+esi*2-0x5e],cl
  420ebb:	pusha  
  420ebc:	sub    eax,0x2bffe98b
  420ec1:	mov    edx,gs
  420ec3:	dec    DWORD PTR [ebx+0x72]
  420ec6:	mov    ds:0x67,al
	...
  420ef7:	add    BYTE PTR [ecx],dl
  420ef9:	push   esi
  420efa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420efb:	sbb    al,0x0
  420efd:	jo     0x420ee6
  420eff:	inc    DWORD PTR [eax]
  420f01:	jb     0x420eee
  420f03:	dec    DWORD PTR ds:0x21a350
	...
  420f39:	add    BYTE PTR [eax],al
  420f3b:	add    BYTE PTR [eax],cl
  420f3d:	sar    BYTE PTR [si+0x4],1
  420f41:	rol    BYTE PTR gs:[eax+0x0],1
	...
  420f60:	add    BYTE PTR [ecx],0x0
  420f63:	add    BYTE PTR [eax-0x7fffffff],al
  420f69:	add    DWORD PTR [eax],eax
  420f6b:	add    BYTE PTR [eax-0x3fffffff],al
  420f71:	add    eax,DWORD PTR [eax]
  420f73:	add    al,al
  420f75:	add    eax,DWORD PTR [eax]
  420f77:	add    al,ah
  420f79:	pop    es
  420f7a:	add    BYTE PTR [eax],al
  420f7c:	lock sldt WORD PTR [eax]
  420f80:	lock sldt WORD PTR [eax]
  420f84:	clc    
  420f85:	pop    ds
  420f86:	add    BYTE PTR [eax],al
  420f88:	clc    
  420f89:	pop    ds
  420f8a:	add    BYTE PTR [eax],al
  420f8c:	clc    
  420f8d:	pop    ds
  420f8e:	add    BYTE PTR [eax],al
  420f90:	cld    
  420f91:	aas    
  420f92:	add    BYTE PTR [eax],al
  420f94:	cld    
  420f95:	aas    
  420f96:	add    BYTE PTR [eax],al
  420f98:	cld    
  420f99:	aas    
  420f9a:	add    BYTE PTR [eax],al
  420f9c:	(bad)  
  420f9d:	jg     0x420f9f
  420f9f:	add    BYTE PTR [eax],al
  420fa1:	add    BYTE PTR [ecx],al
  420fa3:	add    BYTE PTR [esi],al
  420fa5:	add    BYTE PTR [eax],ah
  420fa7:	and    BYTE PTR [eax],al
  420fa9:	add    BYTE PTR [ecx],al
  420fab:	add    BYTE PTR [eax],cl
  420fad:	add    BYTE PTR [eax+0x1000008],ch
  420fb3:	add    BYTE PTR [eax],dl
  420fb5:	adc    BYTE PTR [eax],al
  420fb7:	add    BYTE PTR [ecx],al
  420fb9:	add    BYTE PTR [eax],cl
  420fbb:	add    BYTE PTR [eax+0x5],ch
  420fbe:	add    BYTE PTR [eax],al
  420fc0:	add    al,BYTE PTR [eax]
  420fc2:	add    BYTE PTR [eax],al
  420fc4:	add    BYTE PTR [eax],al
  420fc6:	add    DWORD PTR [eax],eax
  420fc8:	and    BYTE PTR [eax],al
  420fca:	sahf   
  420fcb:	aam    0x0
  420fcd:	add    BYTE PTR [ebx],al
  420fcf:	add    BYTE PTR [eax],dh
  420fd1:	xor    BYTE PTR [eax],al
  420fd3:	add    BYTE PTR [ecx],al
  420fd5:	add    BYTE PTR [eax],ah
  420fd7:	add    BYTE PTR [eax+0x4000025],ch
  420fdd:	add    BYTE PTR [eax],ah
  420fdf:	and    BYTE PTR [eax],al
  420fe1:	add    BYTE PTR [ecx],al
  420fe3:	add    BYTE PTR [eax],ah
  420fe5:	add    BYTE PTR [eax+0x5000010],ch
  420feb:	add    BYTE PTR [eax],dl
  420fed:	adc    BYTE PTR [eax],al
  420fef:	add    BYTE PTR [ecx],al
  420ff1:	add    BYTE PTR [eax],ah
  420ff3:	add    BYTE PTR [eax+0x4],ch
  420ff6:	add    BYTE PTR [eax],al
  420ff8:	push   es
  420ff9:	add    BYTE PTR [eax],al
  420ffb:	add    BYTE PTR [eax],al
  420ffd:	add    BYTE PTR [eax],al
  420fff:	add    BYTE PTR [ebx+eax*1+0x34],ah
  421006:	push   esi
  421007:	add    BYTE PTR [ebx+0x0],dl
  42100a:	pop    edi
  42100b:	add    BYTE PTR [esi+0x0],dl
  42100e:	inc    ebp
  42100f:	add    BYTE PTR [edx+0x0],dl
  421012:	push   ebx
  421013:	add    BYTE PTR [ecx+0x0],cl
  421016:	dec    edi
  421017:	add    BYTE PTR [esi+0x0],cl
  42101a:	pop    edi
  42101b:	add    BYTE PTR [ecx+0x0],cl
  42101e:	dec    esi
  42101f:	add    BYTE PTR [esi+0x0],al
  421022:	dec    edi
  421023:	add    BYTE PTR [eax],al
  421025:	add    BYTE PTR [eax],al
  421027:	add    BYTE PTR [ebp+0xfeef04],bh
  42102d:	add    BYTE PTR [ecx],al
  42102f:	add    BYTE PTR [edx],al
  421031:	add    BYTE PTR [edx],al
  421033:	add    BYTE PTR [eax],al
  421035:	add    BYTE PTR [esi],al
  421037:	add    BYTE PTR [edx],al
  421039:	add    BYTE PTR [edx],al
  42103b:	add    BYTE PTR [eax],al
  42103d:	add    BYTE PTR [esi],al
	...
  421047:	add    BYTE PTR [eax+eax*1],al
  42104a:	add    BYTE PTR [eax],al
  42104c:	add    DWORD PTR [eax],eax
	...
  42105a:	add    BYTE PTR [eax],al
  42105c:	add    al,0x3
  42105e:	add    BYTE PTR [eax],al
  421060:	add    DWORD PTR [eax],eax
  421062:	push   ebx
  421063:	add    BYTE PTR [eax+eax*1+0x72],dh
  421067:	add    BYTE PTR [ecx+0x0],ch
  42106a:	outs   dx,BYTE PTR ds:[esi]
  42106b:	add    BYTE PTR [edi+0x0],ah
  42106e:	inc    esi
  42106f:	add    BYTE PTR [ecx+0x0],ch
  421072:	ins    BYTE PTR es:[edi],dx
  421073:	add    BYTE PTR [ebp+0x0],ah
  421076:	dec    ecx
  421077:	add    BYTE PTR [esi+0x0],ch
  42107a:	data16 add BYTE PTR [edi+0x0],ch
  42107e:	add    BYTE PTR [eax],al
  421080:	loopne 0x421084
  421082:	add    BYTE PTR [eax],al
  421084:	add    DWORD PTR [eax],eax
  421086:	xor    BYTE PTR [eax],al
  421088:	xor    al,0x0
  42108a:	xor    BYTE PTR [eax],al
  42108c:	cmp    DWORD PTR [eax],eax
  42108e:	xor    BYTE PTR [eax],al
  421090:	xor    al,0x0
  421092:	inc    ebp
  421093:	add    BYTE PTR [eax+eax*1],dh
  421096:	add    BYTE PTR [eax],al
  421098:	xor    al,BYTE PTR [eax]
  42109a:	or     DWORD PTR [eax],eax
  42109c:	add    DWORD PTR [eax],eax
  42109e:	inc    ebx
  42109f:	add    BYTE PTR [edi+0x0],ch
  4210a2:	ins    DWORD PTR es:[edi],dx
  4210a3:	add    BYTE PTR [eax+0x0],dh
  4210a6:	popa   
  4210a7:	add    BYTE PTR [esi+0x0],ch
  4210aa:	jns    0x4210ac
  4210ac:	dec    esi
  4210ad:	add    BYTE PTR [ecx+0x0],ah
  4210b0:	ins    DWORD PTR es:[edi],dx
  4210b1:	add    BYTE PTR [ebp+0x0],ah
  4210b4:	add    BYTE PTR [eax],al
  4210b6:	add    BYTE PTR [eax],al
  4210b8:	push   esi
  4210b9:	add    BYTE PTR [ecx+0x0],ch
  4210bc:	add    BYTE PTR fs:[ebp+0x0],ah
  4210c0:	outs   dx,DWORD PTR ds:[esi]
  4210c1:	add    BYTE PTR [eax+eax*1+0x41],cl
  4210c5:	add    BYTE PTR [esi+0x0],cl
  4210c8:	add    BYTE PTR [eax],al
  4210ca:	add    BYTE PTR [eax],al
  4210cc:	inc    edx
  4210cd:	add    BYTE PTR [ecx],dl
  4210cf:	add    BYTE PTR [ecx],al
  4210d1:	add    BYTE PTR [eax+0x0],dl
  4210d4:	jb     0x4210d6
  4210d6:	outs   dx,DWORD PTR ds:[esi]
  4210d7:	add    BYTE PTR [eax+eax*1+0x75],ah
  4210db:	add    BYTE PTR [ebx+0x0],ah
  4210de:	je     0x4210e0
  4210e0:	dec    esi
  4210e1:	add    BYTE PTR [ecx+0x0],ah
  4210e4:	ins    DWORD PTR es:[edi],dx
  4210e5:	add    BYTE PTR [ebp+0x0],ah
  4210e8:	add    BYTE PTR [eax],al
  4210ea:	add    BYTE PTR [eax],al
  4210ec:	push   esi
  4210ed:	add    BYTE PTR [eax+eax*1+0x43],cl
  4210f1:	add    BYTE PTR [eax],ah
  4210f3:	add    BYTE PTR [ebp+0x0],ch
  4210f6:	add    BYTE PTR gs:[eax+eax*1+0x69],ah
  4210fb:	add    BYTE PTR [ecx+0x0],ah
  4210fe:	and    BYTE PTR [eax],al
  421100:	jo     0x421102
  421102:	ins    BYTE PTR es:[edi],dx
  421103:	add    BYTE PTR [ecx+0x0],ah
  421106:	jns    0x421108
  421108:	add    BYTE PTR gs:[edx+0x0],dh
  42110c:	add    BYTE PTR [eax],al
  42110e:	add    BYTE PTR [eax],al
  421110:	xor    al,0x0
  421112:	or     BYTE PTR [eax],al
  421114:	add    DWORD PTR [eax],eax
  421116:	push   eax
  421117:	add    BYTE PTR [edx+0x0],dh
  42111a:	outs   dx,DWORD PTR ds:[esi]
  42111b:	add    BYTE PTR [eax+eax*1+0x75],ah
  42111f:	add    BYTE PTR [ebx+0x0],ah
  421122:	je     0x421124
  421124:	push   esi
  421125:	add    BYTE PTR [ebp+0x0],ah
  421128:	jb     0x42112a
  42112a:	jae    0x42112c
  42112c:	imul   eax,DWORD PTR [eax],0x6e006f
  421132:	add    BYTE PTR [eax],al
  421134:	xor    al,BYTE PTR [eax]
  421136:	sub    al,0x0
  421138:	xor    al,BYTE PTR [eax]
  42113a:	sub    al,0x0
  42113c:	add    BYTE PTR ss:[eax+eax*1],ch
  421140:	xor    BYTE PTR [eax],al
  421142:	add    BYTE PTR [eax],al
  421144:	sub    BYTE PTR [eax],al
  421146:	add    al,0x0
  421148:	add    DWORD PTR [eax],eax
  42114a:	dec    ecx
  42114b:	add    BYTE PTR [esi+0x0],ch
  42114e:	je     0x421150
  421150:	add    BYTE PTR gs:[edx+0x0],dh
  421154:	outs   dx,BYTE PTR ds:[esi]
  421155:	add    BYTE PTR [ecx+0x0],ah
  421158:	ins    BYTE PTR es:[edi],dx
  421159:	add    BYTE PTR [esi+0x0],cl
  42115c:	popa   
  42115d:	add    BYTE PTR [ebp+0x0],ch
  421160:	add    BYTE PTR gs:[eax],al
  421163:	add    BYTE PTR [esi+0x0],dh
  421166:	ins    BYTE PTR es:[edi],dx
  421167:	add    BYTE PTR [ebx+0x0],ah
  42116a:	add    BYTE PTR [eax],al
  42116c:	cmp    BYTE PTR [eax],al
  42116e:	or     BYTE PTR [eax],al
  421170:	add    DWORD PTR [eax],eax
  421172:	dec    edi
  421173:	add    BYTE PTR [edx+0x0],dh
  421176:	imul   eax,DWORD PTR [eax],0x690067
  42117c:	outs   dx,BYTE PTR ds:[esi]
  42117d:	add    BYTE PTR [ecx+0x0],ah
  421180:	ins    BYTE PTR es:[edi],dx
  421181:	add    BYTE PTR [esi+0x0],al
  421184:	imul   eax,DWORD PTR [eax],0x65006c
  42118a:	outs   dx,BYTE PTR ds:[esi]
  42118b:	add    BYTE PTR [ecx+0x0],ah
  42118e:	ins    DWORD PTR es:[edi],dx
  42118f:	add    BYTE PTR [ebp+0x0],ah
  421192:	add    BYTE PTR [eax],al
  421194:	jbe    0x421196
  421196:	ins    BYTE PTR es:[edi],dx
  421197:	add    BYTE PTR [ebx+0x0],ah
  42119a:	add    BYTE PTR cs:[ebp+0x0],ah
  42119e:	js     0x4211a0
  4211a0:	add    BYTE PTR gs:[eax],al
  4211a3:	add    BYTE PTR [eax+eax*1],ch
  4211a6:	push   es
  4211a7:	add    BYTE PTR [ecx],al
  4211a9:	add    BYTE PTR [esi+0x0],al
  4211ac:	imul   eax,DWORD PTR [eax],0x65006c
  4211b2:	push   esi
  4211b3:	add    BYTE PTR [ebp+0x0],ah
  4211b6:	jb     0x4211b8
  4211b8:	jae    0x4211ba
  4211ba:	imul   eax,DWORD PTR [eax],0x6e006f
  4211c0:	add    BYTE PTR [eax],al
  4211c2:	add    BYTE PTR [eax],al
  4211c4:	xor    al,BYTE PTR [eax]
  4211c6:	add    BYTE PTR cs:[edx],dh
  4211c9:	add    BYTE PTR [esi],ch
  4211cb:	add    BYTE PTR [esi],dh
  4211cd:	add    BYTE PTR [eax],al
  4211cf:	add    BYTE PTR [edx+0x0],cl
  4211d2:	adc    DWORD PTR [eax],eax
  4211d4:	add    DWORD PTR [eax],eax
  4211d6:	inc    esi
  4211d7:	add    BYTE PTR [ecx+0x0],ch
  4211da:	ins    BYTE PTR es:[edi],dx
  4211db:	add    BYTE PTR [ebp+0x0],ah
  4211de:	inc    esp
  4211df:	add    BYTE PTR [ebp+0x0],ah
  4211e2:	jae    0x4211e4
  4211e4:	arpl   WORD PTR [eax],ax
  4211e6:	jb     0x4211e8
  4211e8:	imul   eax,DWORD PTR [eax],0x740070
  4211ee:	imul   eax,DWORD PTR [eax],0x6e006f
  4211f4:	add    BYTE PTR [eax],al
  4211f6:	add    BYTE PTR [eax],al
  4211f8:	push   esi
  4211f9:	add    BYTE PTR [eax+eax*1+0x43],cl
  4211fd:	add    BYTE PTR [eax],ah
  4211ff:	add    BYTE PTR [ebp+0x0],ch
  421202:	add    BYTE PTR gs:[eax+eax*1+0x69],ah
  421207:	add    BYTE PTR [ecx+0x0],ah
  42120a:	and    BYTE PTR [eax],al
  42120c:	jo     0x42120e
  42120e:	ins    BYTE PTR es:[edi],dx
  42120f:	add    BYTE PTR [ecx+0x0],ah
  421212:	jns    0x421214
  421214:	add    BYTE PTR gs:[edx+0x0],dh
  421218:	add    BYTE PTR [eax],al
  42121a:	add    BYTE PTR [eax],al
  42121c:	add    BYTE PTR [eax],0x2f
  42121f:	add    BYTE PTR [ecx],al
  421221:	add    BYTE PTR [eax+eax*1+0x65],cl
  421225:	add    BYTE PTR [edi+0x0],ah
  421228:	popa   
  421229:	add    BYTE PTR [eax+eax*1+0x43],ch
  42122d:	add    BYTE PTR [edi+0x0],ch
  421230:	jo     0x421232
  421232:	jns    0x421234
  421234:	jb     0x421236
  421236:	imul   eax,DWORD PTR [eax],0x680067
  42123c:	je     0x42123e
  42123e:	add    BYTE PTR [eax],al
  421240:	inc    ebx
  421241:	add    BYTE PTR [edi+0x0],ch
  421244:	jo     0x421246
  421246:	jns    0x421248
  421248:	jb     0x42124a
  42124a:	imul   eax,DWORD PTR [eax],0x680067
  421250:	je     0x421252
  421252:	and    BYTE PTR [eax],al
  421254:	test   eax,0x31002000
  421259:	add    BYTE PTR [ecx],bh
  42125b:	add    BYTE PTR [ecx],bh
  42125d:	add    BYTE PTR [esi],dh
  42125f:	add    BYTE PTR ds:0x30003200,ch
  421265:	add    BYTE PTR [ecx],dh
  421267:	add    BYTE PTR [edi],dh
  421269:	add    BYTE PTR [eax],ah
  42126b:	add    BYTE PTR [esi+0x0],dl
  42126e:	imul   eax,DWORD PTR [eax],0x650064
  421274:	outs   dx,DWORD PTR ds:[esi]
  421275:	add    BYTE PTR [eax+eax*1+0x41],cl
  421279:	add    BYTE PTR [esi+0x0],cl
  42127c:	and    BYTE PTR [eax],al
  42127e:	popa   
  42127f:	add    BYTE PTR [esi+0x0],ch
  421282:	add    BYTE PTR fs:[eax],ah
  421285:	add    BYTE PTR [esi+0x0],dl
  421288:	dec    esp
  421289:	add    BYTE PTR [ebx+0x0],al
  42128c:	and    BYTE PTR [eax],al
  42128e:	inc    ecx
  42128f:	add    BYTE PTR [ebp+0x0],dh
  421292:	je     0x421294
  421294:	push   0x72006f00
  421299:	add    BYTE PTR [ebx+0x0],dh
  42129c:	add    BYTE PTR [eax],al
  42129e:	add    BYTE PTR [eax],al
  4212a0:	rol    BYTE PTR [eax],0x4c
  4212a3:	add    BYTE PTR [ecx],al
  4212a5:	add    BYTE PTR [eax+eax*1+0x65],cl
  4212a9:	add    BYTE PTR [edi+0x0],ah
  4212ac:	popa   
  4212ad:	add    BYTE PTR [eax+eax*1+0x54],ch
  4212b1:	add    BYTE PTR [edx+0x0],dh
  4212b4:	popa   
  4212b5:	add    BYTE PTR [eax+eax*1+0x65],ah
  4212b9:	add    BYTE PTR [ebp+0x0],ch
  4212bc:	popa   
  4212bd:	add    BYTE PTR [edx+0x0],dh
  4212c0:	imul   eax,DWORD PTR [eax],0x73
  4212c3:	add    BYTE PTR [eax],al
  4212c5:	add    BYTE PTR [eax],al
  4212c7:	add    BYTE PTR [esi+0x0],dl
  4212ca:	dec    esp
  4212cb:	add    BYTE PTR [ebx+0x0],al
  4212ce:	and    BYTE PTR [eax],al
  4212d0:	ins    DWORD PTR es:[edi],dx
  4212d1:	add    BYTE PTR [ebp+0x0],ah
  4212d4:	add    BYTE PTR fs:[ecx+0x0],ch
  4212d8:	popa   
  4212d9:	add    BYTE PTR [eax],ah
  4212db:	add    BYTE PTR [eax+0x0],dh
  4212de:	ins    BYTE PTR es:[edi],dx
  4212df:	add    BYTE PTR [ecx+0x0],ah
  4212e2:	jns    0x4212e4
  4212e4:	add    BYTE PTR gs:[edx+0x0],dh
  4212e8:	sub    al,0x0
  4212ea:	and    BYTE PTR [eax],al
  4212ec:	push   esi
  4212ed:	add    BYTE PTR [ecx+0x0],ch
  4212f0:	add    BYTE PTR fs:[ebp+0x0],ah
  4212f4:	outs   dx,DWORD PTR ds:[esi]
  4212f5:	add    BYTE PTR [eax+eax*1+0x41],cl
  4212f9:	add    BYTE PTR [esi+0x0],cl
  4212fc:	and    BYTE PTR [eax],al
  4212fe:	popa   
  4212ff:	add    BYTE PTR [esi+0x0],ch
  421302:	add    BYTE PTR fs:[eax],ah
  421305:	add    BYTE PTR [eax+0x0],bh
  421308:	xor    al,BYTE PTR [eax]
  42130a:	add    BYTE PTR ss:[eax+eax*1],dh
  42130e:	and    BYTE PTR [eax],al
  421310:	popa   
  421311:	add    BYTE PTR [edx+0x0],dh
  421314:	add    BYTE PTR gs:[eax],ah
  421317:	add    BYTE PTR [edx+0x0],dh
  42131a:	add    BYTE PTR gs:[edi+0x0],ah
  42131e:	imul   eax,DWORD PTR [eax],0x740073
  421324:	add    BYTE PTR gs:[edx+0x0],dh
  421328:	add    BYTE PTR gs:[eax+eax*1+0x20],ah
  42132d:	add    BYTE PTR [eax+eax*1+0x72],dh
  421331:	add    BYTE PTR [ecx+0x0],ah
  421334:	add    BYTE PTR fs:[ebp+0x0],ah
  421338:	ins    DWORD PTR es:[edi],dx
  421339:	add    BYTE PTR [ecx+0x0],ah
  42133c:	jb     0x42133e
  42133e:	imul   eax,DWORD PTR [eax],0x73
  421341:	add    BYTE PTR [eax],ah
  421343:	add    BYTE PTR [esi+0x0],ah
  421346:	jb     0x421348
  421348:	outs   dx,DWORD PTR ds:[esi]
  421349:	add    BYTE PTR [ebp+0x0],ch
  42134c:	and    BYTE PTR [eax],al
  42134e:	push   esi
  42134f:	add    BYTE PTR [ecx+0x0],ch
  421352:	add    BYTE PTR fs:[ebp+0x0],ah
  421356:	outs   dx,DWORD PTR ds:[esi]
  421357:	add    BYTE PTR [eax+eax*1+0x41],cl
  42135b:	add    BYTE PTR [esi+0x0],cl
  42135e:	add    BYTE PTR [eax],al
  421360:	inc    esp
  421361:	add    BYTE PTR [eax],al
  421363:	add    BYTE PTR [ecx],al
  421365:	add    BYTE PTR [esi+0x0],dl
  421368:	popa   
  421369:	add    BYTE PTR [edx+0x0],dh
  42136c:	inc    esi
  42136d:	add    BYTE PTR [ecx+0x0],ch
  421370:	ins    BYTE PTR es:[edi],dx
  421371:	add    BYTE PTR [ebp+0x0],ah
  421374:	dec    ecx
  421375:	add    BYTE PTR [esi+0x0],ch
  421378:	data16 add BYTE PTR [edi+0x0],ch
  42137c:	add    BYTE PTR [eax],al
  42137e:	add    BYTE PTR [eax],al
  421380:	and    al,0x0
  421382:	add    al,0x0
  421384:	add    BYTE PTR [eax],al
  421386:	push   esp
  421387:	add    BYTE PTR [edx+0x0],dh
  42138a:	popa   
  42138b:	add    BYTE PTR [esi+0x0],ch
  42138e:	jae    0x421390
  421390:	ins    BYTE PTR es:[edi],dx
  421391:	add    BYTE PTR [ecx+0x0],ah
  421394:	je     0x421396
  421396:	imul   eax,DWORD PTR [eax],0x6e006f
  42139c:	add    BYTE PTR [eax],al
  42139e:	add    BYTE PTR [eax],al
  4213a0:	or     DWORD PTR [esp+eiz*8],eax
  4213a3:	add    al,0x0
  4213a5:	add    BYTE PTR [eax],al
  4213a7:	add    bh,ch
  4213a9:	mov    ebx,0x783f3cbf
  4213ae:	ins    DWORD PTR es:[edi],dx
  4213af:	ins    BYTE PTR es:[edi],dx
  4213b0:	and    BYTE PTR [esi+0x65],dh
  4213b3:	jb     0x421428
  4213b5:	imul   ebp,DWORD PTR [edi+0x6e],0x2e31223d
  4213bc:	xor    BYTE PTR [edx],ah
  4213be:	and    BYTE PTR [ebp+0x6e],ah
  4213c1:	arpl   WORD PTR [edi+0x64],bp
  4213c4:	imul   ebp,DWORD PTR [esi+0x67],0x5455223d
  4213cb:	inc    esi
  4213cc:	sub    eax,0x73202238
  4213d1:	je     0x421434
  4213d3:	outs   dx,BYTE PTR ds:[esi]
  4213d4:	fs popa 
  4213d6:	ins    BYTE PTR es:[edi],dx
  4213d7:	outs   dx,DWORD PTR ds:[esi]
  4213d8:	outs   dx,BYTE PTR ds:[esi]
  4213d9:	gs cmp eax,0x73657922
  4213df:	and    bh,BYTE PTR [edi]
  4213e1:	or     bh,BYTE PTR ds:[ecx+eiz*2]
  4213e5:	jae    0x42145a
  4213e7:	gs ins DWORD PTR es:[edi],dx
  4213e9:	bound  ebp,QWORD PTR [ecx+edi*2+0x20]
  4213ed:	js     0x42145c
  4213ef:	ins    BYTE PTR es:[edi],dx
  4213f0:	outs   dx,BYTE PTR ds:[esi]
  4213f1:	jae    0x421430
  4213f3:	and    dh,BYTE PTR [ebp+0x72]
  4213f6:	outs   dx,BYTE PTR ds:[esi]
  4213f7:	cmp    dh,BYTE PTR [ebx+0x63]
  4213fa:	push   0x73616d65
  4213ff:	sub    eax,0x7263696d
  421404:	outs   dx,DWORD PTR ds:[esi]
  421405:	jae    0x421476
  421407:	data16 je 0x421437
  42140a:	arpl   WORD PTR [edi+0x6d],bp
  42140d:	cmp    ah,BYTE PTR [ecx+0x73]
  421410:	ins    DWORD PTR es:[edi],dx
  421411:	cs jbe 0x421445
  421414:	and    ah,BYTE PTR [eax]
  421416:	ins    DWORD PTR es:[edi],dx
  421417:	popa   
  421418:	outs   dx,BYTE PTR ds:[esi]
  421419:	imul   esp,DWORD PTR [esi+0x65],0x65567473
  421420:	jb     0x421495
  421422:	imul   ebp,DWORD PTR [edi+0x6e],0x2e31223d
  421429:	xor    BYTE PTR [edx],ah
  42142b:	or     ah,BYTE PTR ds:[eax]
  42142e:	and    BYTE PTR [eax],ah
  421430:	and    BYTE PTR [ecx+eiz*2],bh
  421433:	jae    0x4214a8
  421435:	gs ins DWORD PTR es:[edi],dx
  421437:	bound  ebp,QWORD PTR [ecx+edi*2+0x49]
  42143b:	fs outs dx,BYTE PTR gs:[esi]
  42143e:	je     0x4214a9
  421440:	je     0x4214bb
  421442:	or     ah,BYTE PTR [eax]
  421444:	and    BYTE PTR [eax],ah
  421446:	and    BYTE PTR [eax],ah
  421448:	and    BYTE PTR [eax],ah
  42144a:	and    BYTE PTR [esi+0x65],dh
  42144d:	jb     0x4214c2
  42144f:	imul   ebp,DWORD PTR [edi+0x6e],0x2e31223d
  421456:	xor    BYTE PTR [esi],ch
  421458:	xor    BYTE PTR [esi],ch
  42145a:	xor    BYTE PTR [edx],ah
  42145c:	or     ah,BYTE PTR [eax]
  42145e:	and    BYTE PTR [eax],ah
  421460:	and    BYTE PTR [eax],ah
  421462:	and    BYTE PTR [eax],ah
  421464:	and    BYTE PTR [eax+0x72],dh
  421467:	outs   dx,DWORD PTR ds:[esi]
  421468:	arpl   WORD PTR [ebp+0x73],sp
  42146b:	jae    0x4214dc
  42146d:	jb     0x4214b0
  42146f:	jb     0x4214d4
  421471:	push   0x63657469
  421476:	je     0x4214ed
  421478:	jb     0x4214df
  42147a:	cmp    eax,0xa222a22
  42147f:	and    BYTE PTR [eax],ah
  421481:	and    BYTE PTR [eax],ah
  421483:	and    BYTE PTR [eax],ah
  421485:	and    BYTE PTR [eax],ah
  421487:	outs   dx,BYTE PTR ds:[esi]
  421488:	popa   
  421489:	ins    DWORD PTR es:[edi],dx
  42148a:	gs cmp eax,0x64695622
  421490:	outs   dx,DWORD PTR gs:[esi]
  421492:	dec    esp
  421493:	inc    ecx
  421494:	dec    esi
  421495:	cs push esi
  421497:	dec    esp
  421498:	inc    ebx
  421499:	and    cl,BYTE PTR [edx]
  42149b:	and    BYTE PTR [eax],ah
  42149d:	and    BYTE PTR [eax],ah
  42149f:	and    BYTE PTR [eax],ah
  4214a1:	and    BYTE PTR [eax],ah
  4214a3:	je     0x42151e
  4214a5:	jo     0x42150c
  4214a7:	cmp    eax,0x6e697722
  4214ac:	xor    esi,DWORD PTR [edx]
  4214ae:	and    cl,BYTE PTR [edx]
  4214b0:	and    BYTE PTR [eax],ah
  4214b2:	and    BYTE PTR [eax],ah
  4214b4:	das    
  4214b5:	or     ah,BYTE PTR ds:[eax]
  4214b8:	and    BYTE PTR [eax],ah
  4214ba:	and    BYTE PTR [esp+eiz*2],bh
  4214bd:	gs jae 0x421523
  4214c0:	jb     0x42152b
  4214c2:	jo     0x421538
  4214c4:	imul   ebp,DWORD PTR [edi+0x6e],0x6565733e
  4214cb:	and    BYTE PTR [eax+0x74],ch
  4214ce:	je     0x421540
  4214d0:	cmp    ch,BYTE PTR [edi]
  4214d2:	das    
  4214d3:	ja     0x42154c
  4214d5:	ja     0x421505
  4214d7:	jbe    0x421542
  4214d9:	fs outs dx,DWORD PTR gs:[esi]
  4214dc:	ins    BYTE PTR es:[edi],dx
  4214dd:	popa   
  4214de:	outs   dx,BYTE PTR ds:[esi]
  4214df:	outs   dx,DWORD PTR cs:[esi]
  4214e1:	jb     0x42154a
  4214e3:	das    
  4214e4:	cmp    al,0x2f
  4214e6:	fs gs jae 0x42154d
  4214ea:	jb     0x421555
  4214ec:	jo     0x421562
  4214ee:	imul   ebp,DWORD PTR [edi+0x6e],0x20200a3e
  4214f5:	and    BYTE PTR [eax],ah
  4214f7:	and    BYTE PTR [esp+esi*2],bh
  4214fa:	jb     0x421571
  4214fc:	jae    0x421572
  4214fe:	dec    ecx
  4214ff:	outs   dx,BYTE PTR ds:[esi]
  421500:	outs   dx,WORD PTR ds:[esi]
  421502:	and    BYTE PTR [eax+0x6d],bh
  421505:	ins    BYTE PTR es:[edi],dx
  421506:	outs   dx,BYTE PTR ds:[esi]
  421507:	jae    0x421546
  421509:	and    dh,BYTE PTR [ebp+0x72]
  42150c:	outs   dx,BYTE PTR ds:[esi]
  42150d:	cmp    dh,BYTE PTR [ebx+0x63]
  421510:	push   0x73616d65
  421515:	sub    eax,0x7263696d
  42151a:	outs   dx,DWORD PTR ds:[esi]
  42151b:	jae    0x42158c
  42151d:	data16 je 0x42154d
  421520:	arpl   WORD PTR [edi+0x6d],bp
  421523:	cmp    ah,BYTE PTR [ecx+0x73]
  421526:	ins    DWORD PTR es:[edi],dx
  421527:	cs jbe 0x42155d
  42152a:	and    bh,BYTE PTR [esi]
  42152c:	or     ah,BYTE PTR [eax]
  42152e:	and    BYTE PTR [eax],ah
  421530:	and    BYTE PTR [eax],ah
  421532:	and    BYTE PTR [eax],ah
  421534:	and    BYTE PTR [ebx+esi*2],bh
  421537:	arpl   WORD PTR gs:[ebp+0x72],si
  42153b:	imul   esi,DWORD PTR [ecx+edi*2+0x3e],0x2020200a
  421543:	and    BYTE PTR [eax],ah
  421545:	and    BYTE PTR [eax],ah
  421547:	and    BYTE PTR [eax],ah
  421549:	and    BYTE PTR [eax],ah
  42154b:	and    BYTE PTR [edx+esi*2],bh
  42154e:	gs jno 0x4215c6
  421551:	gs jae 0x4215c8
  421554:	gs fs push eax
  421557:	jb     0x4215c2
  421559:	jbe    0x4215c4
  42155b:	ins    BYTE PTR es:[edi],dx
  42155c:	gs addr16 gs jae 0x42159f
  421561:	or     ah,BYTE PTR [eax]
  421563:	and    BYTE PTR [eax],ah
  421565:	and    BYTE PTR [eax],ah
  421567:	and    BYTE PTR [eax],ah
  421569:	and    BYTE PTR [eax],ah
  42156b:	and    BYTE PTR [eax],ah
  42156d:	and    BYTE PTR [eax],ah
  42156f:	and    BYTE PTR [eax],ah
  421571:	and    BYTE PTR [edx+esi*2],bh
  421574:	gs jno 0x4215ec
  421577:	gs jae 0x4215ee
  42157a:	gs fs inc ebp
  42157d:	js     0x4215e4
  42157f:	arpl   WORD PTR [ebp+0x74],si
  421582:	imul   ebp,DWORD PTR [edi+0x6e],0x6576654c
  421589:	ins    BYTE PTR es:[edi],dx
  42158a:	and    BYTE PTR [ebp+eiz*2+0x76],ch
  42158e:	gs ins BYTE PTR es:[edi],dx
  421590:	cmp    eax,0x49736122
  421595:	outs   dx,BYTE PTR ds:[esi]
  421596:	jbe    0x421607
  421598:	imul   esp,DWORD PTR [ebp+0x72],0x22
  42159c:	and    BYTE PTR [edi],ch
  42159e:	or     ah,BYTE PTR ds:[eax]
  4215a1:	and    BYTE PTR [eax],ah
  4215a3:	and    BYTE PTR [eax],ah
  4215a5:	and    BYTE PTR [eax],ah
  4215a7:	and    BYTE PTR [eax],ah
  4215a9:	and    BYTE PTR [eax],ah
  4215ab:	and    BYTE PTR [edi+ebp*1],bh
  4215ae:	jb     0x421615
  4215b0:	jno    0x421627
  4215b2:	gs jae 0x421629
  4215b5:	gs fs push eax
  4215b8:	jb     0x421623
  4215ba:	jbe    0x421625
  4215bc:	ins    BYTE PTR es:[edi],dx
  4215bd:	gs addr16 gs jae 0x421600
  4215c2:	or     ah,BYTE PTR [eax]
  4215c4:	and    BYTE PTR [eax],ah
  4215c6:	and    BYTE PTR [eax],ah
  4215c8:	and    BYTE PTR [eax],ah
  4215ca:	and    BYTE PTR [edi+ebp*1],bh
  4215cd:	jae    0x421634
  4215cf:	arpl   WORD PTR [ebp+0x72],si
  4215d2:	imul   esi,DWORD PTR [ecx+edi*2+0x3e],0x2020200a
  4215da:	and    BYTE PTR [edi+ebp*1],bh
  4215dd:	je     0x421651
  4215df:	jne    0x421654
  4215e1:	je     0x42162c
  4215e3:	outs   dx,BYTE PTR ds:[esi]
  4215e4:	outs   dx,WORD PTR ds:[esi]
  4215e6:	or     ah,BYTE PTR ds:[eax]
  4215e9:	and    BYTE PTR [eax],ah
  4215eb:	and    BYTE PTR [esp+eiz*2],bh
  4215ee:	gs jo  0x421656
  4215f1:	outs   dx,BYTE PTR ds:[esi]
  4215f2:	fs outs dx,BYTE PTR gs:[esi]
  4215f5:	arpl   WORD PTR [ecx+0x3e],di
  4215f8:	or     ah,BYTE PTR [eax]
  4215fa:	and    BYTE PTR [eax],ah
  4215fc:	and    BYTE PTR [eax],ah
  4215fe:	and    BYTE PTR [eax],ah
  421600:	and    BYTE PTR [esp+eiz*2],bh
  421603:	gs jo  0x42166b
  421606:	outs   dx,BYTE PTR ds:[esi]
  421607:	fs outs dx,BYTE PTR gs:[esi]
  42160a:	je     0x42164d
  42160c:	jae    0x421681
  42160e:	gs ins DWORD PTR es:[edi],dx
  421610:	bound  ebp,QWORD PTR [ecx+edi*2+0x3e]
  421614:	or     ah,BYTE PTR [eax]
  421616:	and    BYTE PTR [eax],ah
  421618:	and    BYTE PTR [eax],ah
  42161a:	and    BYTE PTR [eax],ah
  42161c:	and    BYTE PTR [eax],ah
  42161e:	and    BYTE PTR [eax],ah
  421620:	and    BYTE PTR [ecx+eiz*2],bh
  421623:	jae    0x421698
  421625:	gs ins DWORD PTR es:[edi],dx
  421627:	bound  ebp,QWORD PTR [ecx+edi*2+0x49]
  42162b:	fs outs dx,BYTE PTR gs:[esi]
  42162e:	je     0x421699
  421630:	je     0x4216ab
  421632:	or     ah,BYTE PTR [eax]
  421634:	and    BYTE PTR [eax],ah
  421636:	and    BYTE PTR [eax],ah
  421638:	and    BYTE PTR [eax],ah
  42163a:	and    BYTE PTR [eax],ah
  42163c:	and    BYTE PTR [eax],ah
  42163e:	and    BYTE PTR [eax],ah
  421640:	and    BYTE PTR [eax],ah
  421642:	and    BYTE PTR [ecx+edi*2+0x70],dh
  421646:	gs cmp eax,0x6e697722
  42164c:	xor    esi,DWORD PTR [edx]
  42164e:	and    cl,BYTE PTR [edx]
  421650:	and    BYTE PTR [eax],ah
  421652:	and    BYTE PTR [eax],ah
  421654:	and    BYTE PTR [eax],ah
  421656:	and    BYTE PTR [eax],ah
  421658:	and    BYTE PTR [eax],ah
  42165a:	and    BYTE PTR [eax],ah
  42165c:	and    BYTE PTR [eax],ah
  42165e:	and    BYTE PTR [eax],ah
  421660:	outs   dx,BYTE PTR ds:[esi]
  421661:	popa   
  421662:	ins    DWORD PTR es:[edi],dx
  421663:	gs cmp eax,0x63694d22
  421669:	jb     0x4216da
  42166b:	jae    0x4216dc
  42166d:	data16 je 0x42169e
  421670:	push   edi
  421671:	imul   ebp,DWORD PTR [esi+0x64],0x2e73776f
  421678:	inc    ebx
  421679:	outs   dx,DWORD PTR ds:[esi]
  42167a:	ins    DWORD PTR es:[edi],dx
  42167b:	ins    DWORD PTR es:[edi],dx
  42167c:	outs   dx,DWORD PTR ds:[esi]
  42167d:	outs   dx,BYTE PTR ds:[esi]
  42167e:	sub    eax,0x746e6f43
  421683:	jb     0x4216f4
  421685:	ins    BYTE PTR es:[edi],dx
  421686:	jae    0x4216aa
  421688:	or     ah,BYTE PTR [eax]
  42168a:	and    BYTE PTR [eax],ah
  42168c:	and    BYTE PTR [eax],ah
  42168e:	and    BYTE PTR [eax],ah
  421690:	and    BYTE PTR [eax],ah
  421692:	and    BYTE PTR [eax],ah
  421694:	and    BYTE PTR [eax],ah
  421696:	and    BYTE PTR [eax],ah
  421698:	and    BYTE PTR [esi+0x65],dh
  42169b:	jb     0x421710
  42169d:	imul   ebp,DWORD PTR [edi+0x6e],0x2e36223d
  4216a4:	xor    BYTE PTR [esi],ch
  4216a6:	xor    BYTE PTR [esi],ch
  4216a8:	xor    BYTE PTR [edx],ah
  4216aa:	or     ah,BYTE PTR [eax]
  4216ac:	and    BYTE PTR [eax],ah
  4216ae:	and    BYTE PTR [eax],ah
  4216b0:	and    BYTE PTR [eax],ah
  4216b2:	and    BYTE PTR [eax],ah
  4216b4:	and    BYTE PTR [eax],ah
  4216b6:	and    BYTE PTR [eax],ah
  4216b8:	and    BYTE PTR [eax],ah
  4216ba:	and    BYTE PTR [eax+0x72],dh
  4216bd:	outs   dx,DWORD PTR ds:[esi]
  4216be:	arpl   WORD PTR [ebp+0x73],sp
  4216c1:	jae    0x421732
  4216c3:	jb     0x421706
  4216c5:	jb     0x42172a
  4216c7:	push   0x63657469
  4216cc:	je     0x421743
  4216ce:	jb     0x421735
  4216d0:	cmp    eax,0xa222a22
  4216d5:	and    BYTE PTR [eax],ah
  4216d7:	and    BYTE PTR [eax],ah
  4216d9:	and    BYTE PTR [eax],ah
  4216db:	and    BYTE PTR [eax],ah
  4216dd:	and    BYTE PTR [eax],ah
  4216df:	and    BYTE PTR [eax],ah
  4216e1:	and    BYTE PTR [eax],ah
  4216e3:	and    BYTE PTR [eax],ah
  4216e5:	jo     0x42175c
  4216e7:	bound  ebp,QWORD PTR [ecx+ebp*2+0x63]
  4216eb:	dec    ebx
  4216ec:	gs jns 0x421743
  4216ef:	outs   dx,DWORD PTR ds:[esi]
  4216f0:	imul   esp,DWORD PTR [ebp+0x6e],0x3d
  4216f4:	and    dh,BYTE PTR [esi]
  4216f6:	xor    eax,0x36623539
  4216fb:	xor    al,0x31
  4216fd:	xor    al,0x34
  4216ff:	arpl   WORD PTR [ebx+0x66],sp
  421702:	xor    DWORD PTR [esi+eiz*2+0x22],esp
  421706:	or     ah,BYTE PTR [eax]
  421708:	and    BYTE PTR [eax],ah
  42170a:	and    BYTE PTR [eax],ah
  42170c:	and    BYTE PTR [eax],ah
  42170e:	and    BYTE PTR [eax],ah
  421710:	and    BYTE PTR [eax],ah
  421712:	and    BYTE PTR [eax],ah
  421714:	and    BYTE PTR [eax],ah
  421716:	and    BYTE PTR [ecx+eiz*2+0x6e],ch
  42171a:	addr16 jne 0x42177e
  42171d:	addr16 gs cmp eax,0xa222a22
  421724:	and    BYTE PTR [eax],ah
  421726:	and    BYTE PTR [eax],ah
  421728:	and    BYTE PTR [eax],ah
  42172a:	and    BYTE PTR [eax],ah
  42172c:	and    BYTE PTR [eax],ah
  42172e:	and    BYTE PTR [eax],ah
  421730:	das    
  421731:	or     ah,BYTE PTR ds:[eax]
  421734:	and    BYTE PTR [eax],ah
  421736:	and    BYTE PTR [eax],ah
  421738:	and    BYTE PTR [eax],ah
  42173a:	and    BYTE PTR [edi+ebp*1],bh
  42173d:	fs gs jo 0x4217a6
  421741:	outs   dx,BYTE PTR ds:[esi]
  421742:	fs outs dx,BYTE PTR gs:[esi]
  421745:	je     0x421788
  421747:	jae    0x4217bc
  421749:	gs ins DWORD PTR es:[edi],dx
  42174b:	bound  ebp,QWORD PTR [ecx+edi*2+0x3e]
  42174f:	or     ah,BYTE PTR [eax]
  421751:	and    BYTE PTR [eax],ah
  421753:	and    BYTE PTR [edi+ebp*1],bh
  421756:	fs gs jo 0x4217bf
  42175a:	outs   dx,BYTE PTR ds:[esi]
  42175b:	fs outs dx,BYTE PTR gs:[esi]
  42175e:	arpl   WORD PTR [ecx+0x3e],di
  421761:	or     ah,BYTE PTR [eax]
  421763:	and    BYTE PTR [eax],ah
  421765:	and    BYTE PTR [ebx+eiz*2],bh
  421768:	outs   dx,DWORD PTR ds:[esi]
  421769:	ins    DWORD PTR es:[edi],dx
  42176a:	jo     0x4217cd
  42176c:	je     0x4217d7
  42176e:	bound  ebp,QWORD PTR [ecx+0x6c]
  421771:	imul   esi,DWORD PTR [ecx+edi*2+0x20],0x6e6c6d78
  421779:	jae    0x4217b8
  42177b:	and    dh,BYTE PTR [ebp+0x72]
  42177e:	outs   dx,BYTE PTR ds:[esi]
  42177f:	cmp    dh,BYTE PTR [ebx+0x63]
  421782:	push   0x73616d65
  421787:	sub    eax,0x7263696d
  42178c:	outs   dx,DWORD PTR ds:[esi]
  42178d:	jae    0x4217fe
  42178f:	data16 je 0x4217bf
  421792:	arpl   WORD PTR [edi+0x6d],bp
  421795:	cmp    ah,BYTE PTR [ebx+0x6f]
  421798:	ins    DWORD PTR es:[edi],dx
  421799:	jo     0x4217fc
  42179b:	je     0x421806
  42179d:	bound  ebp,QWORD PTR [ecx+0x6c]
  4217a0:	imul   esi,DWORD PTR [ecx+edi*2+0x2e],0x3e223176
  4217a8:	or     ah,BYTE PTR [eax]
  4217aa:	and    BYTE PTR [eax],ah
  4217ac:	and    BYTE PTR [eax],ah
  4217ae:	and    BYTE PTR [eax],ah
  4217b0:	and    BYTE PTR [ecx+eiz*2],bh
  4217b3:	jo     0x421825
  4217b5:	ins    BYTE PTR es:[edi],dx
  4217b6:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  4217bd:	or     ah,BYTE PTR ds:[eax]
  4217c0:	and    BYTE PTR [eax],ah
  4217c2:	and    BYTE PTR [eax],ah
  4217c4:	and    BYTE PTR [eax],ah
  4217c6:	and    BYTE PTR [eax],ah
  4217c8:	and    BYTE PTR [eax],ah
  4217ca:	and    BYTE PTR [ecx+eiz*1],bh
  4217cd:	sub    eax,0x6568542d
  4217d2:	and    BYTE PTR [ecx+0x44],cl
  4217d5:	and    BYTE PTR [edx+0x65],ah
  4217d8:	ins    BYTE PTR es:[edi],dx
  4217d9:	outs   dx,DWORD PTR ds:[esi]
  4217da:	ja     0x4217fc
  4217dc:	imul   ebp,DWORD PTR [esi+0x64],0x74616369
  4217e3:	gs jae 0x421806
  4217e6:	popa   
  4217e7:	jo     0x421859
  4217e9:	and    BYTE PTR [ebx+0x75],dh
  4217ec:	jo     0x42185e
  4217ee:	outs   dx,DWORD PTR ds:[esi]
  4217ef:	jb     0x421865
  4217f1:	and    BYTE PTR [esi+0x6f],ah
  4217f4:	jb     0x421816
  4217f6:	push   edi
  4217f7:	imul   ebp,DWORD PTR [esi+0x64],0x2073776f
  4217fe:	push   esi
  4217ff:	imul   esi,DWORD PTR [ebx+0x74],0x2d2d2061
  421806:	or     ah,BYTE PTR ds:[eax]
  421809:	and    BYTE PTR [eax],ah
  42180b:	and    BYTE PTR [eax],ah
  42180d:	and    BYTE PTR [eax],ah
  42180f:	and    BYTE PTR [eax],ah
  421811:	and    BYTE PTR [eax],ah
  421813:	and    BYTE PTR [ebx+esi*2],bh
  421816:	jne    0x421888
  421818:	jo     0x421889
  42181a:	jb     0x421890
  42181c:	gs fs dec edi
  42181f:	push   ebx
  421820:	and    BYTE PTR [ecx+0x64],cl
  421823:	cmp    eax,0x32657b22
  421828:	xor    BYTE PTR [ecx],dh
  42182a:	xor    DWORD PTR [esi*1+0x35312d37],esi
  421831:	xor    al,0x36
  421833:	sub    eax,0x35633334
  421838:	sub    eax,0x65663561
  42183d:	sub    eax,0x64383030
  421842:	gs gs xor esp,DWORD PTR gs:[ebx+esi*1+0x66]
  421849:	xor    BYTE PTR [ebp+0x22],bh
  42184c:	das    
  42184d:	or     ah,BYTE PTR ds:[eax]
  421850:	and    BYTE PTR [eax],ah
  421852:	and    BYTE PTR [eax],ah
  421854:	and    BYTE PTR [eax],ah
  421856:	and    BYTE PTR [edi+ebp*1],bh
  421859:	popa   
  42185a:	jo     0x4218cc
  42185c:	ins    BYTE PTR es:[edi],dx
  42185d:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  421864:	or     ah,BYTE PTR ds:[eax]
  421867:	and    BYTE PTR [eax],ah
  421869:	and    BYTE PTR [edi+ebp*1],bh
  42186c:	arpl   WORD PTR [edi+0x6d],bp
  42186f:	jo     0x4218d2
  421871:	je     0x4218dc
  421873:	bound  ebp,QWORD PTR [ecx+0x6c]
  421876:	imul   esi,DWORD PTR [ecx+edi*2+0x3e],0x612f3c0a
  42187e:	jae    0x4218f3
  421880:	gs ins DWORD PTR es:[edi],dx
  421882:	bound  ebp,QWORD PTR [ecx+edi*2+0x3e]
  421886:	or     al,BYTE PTR [eax]

Disassembly of section .gnu_debuglink:

00422000 <.gnu_debuglink>:
  422000:	jbe    0x42206e
  422002:	arpl   WORD PTR ds:0x68636163,bp
  422008:	gs sub eax,0x2e6e6567
  42200e:	gs js  0x422076
  422011:	cs bound esp,QWORD PTR fs:[edi+0x0]
  422016:	add    BYTE PTR [eax],al
  422018:	ja     0x421fcd
  42201a:	dec    ecx
  42201b:	pop    edx
