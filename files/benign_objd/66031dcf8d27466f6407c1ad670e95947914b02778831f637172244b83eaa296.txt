
66031dcf8d27466f6407c1ad670e95947914b02778831f637172244b83eaa296.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x5ef5]        # 0x406f10
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x5ef6]        # 0x406f20
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x5ef9]        # 0x406f30
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x5ebc]        # 0x406f00
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x5d6f]        # 0x406dc0
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x5e91]        # 0x406ef0
  40105f:	mov    DWORD PTR [rip+0x8fa3],edx        # 0x40a008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x403cf8
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x402cb0
  401081:	mov    rdx,QWORD PTR [rip+0x5dc8]        # 0x406e50
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x5dae]        # 0x406e40
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x5e14]        # 0x406eb0
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x5d4b]        # 0x406df0
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x402890
  4010af:	mov    rax,QWORD PTR [rip+0x5cba]        # 0x406d70
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x403cf8
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0x1a69]        # 0x402b90
  401127:	call   0x402b80
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x5d75]        # 0x406ee0
  40116b:	lea    r8,[rip+0x8ea6]        # 0x40a018
  401172:	lea    rdx,[rip+0x8ea7]        # 0x40a020
  401179:	lea    rcx,[rip+0x8ea8]        # 0x40a028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x8e78],eax        # 0x40a000
  401188:	lea    rax,[rip+0x8e71]        # 0x40a000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x5d05]        # 0x406ea0
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x403d10
  4011a3:	mov    DWORD PTR [rip+0x8e67],eax        # 0x40a010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x5d2a]        # 0x406ef0
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x5c2b]        # 0x406e20
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0xa50a]        # 0x40b70c
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x5c07]        # 0x406e30
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0x8dba],0x1        # 0x40a004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x5b4c]        # 0x406db0
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x402ea0
  40127d:	lea    rcx,[rip+0x21bc]        # 0x403440
  401284:	call   QWORD PTR [rip+0xa47a]        # 0x40b704
  40128a:	mov    rdx,QWORD PTR [rip+0x5b7f]        # 0x406e10
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x403350
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x403d40
  4012a5:	call   0x402c90
  4012aa:	mov    rax,QWORD PTR [rip+0x5b0f]        # 0x406dc0
  4012b1:	mov    QWORD PTR [rip+0x9750],rax        # 0x40aa08
  4012b8:	mov    rax,QWORD PTR [rip+0x5b21]        # 0x406de0
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0x96e9],rax        # 0x40aa00
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x3cca],eax        # 0x405000
  401336:	mov    r12d,DWORD PTR [rip+0x8ceb]        # 0x40a028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x403c88
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x8cc2]        # 0x40a020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x403c68
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x403c88
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x403c80
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x8c6a],rbp        # 0x40a020
  4013b6:	call   0x402860
  4013bb:	mov    rax,QWORD PTR [rip+0x5a0e]        # 0x406dd0
  4013c2:	mov    rdx,QWORD PTR [rip+0x8c4f]        # 0x40a018
  4013c9:	mov    ecx,DWORD PTR [rip+0x8c59]        # 0x40a028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x8c3c]        # 0x40a018
  4013dc:	mov    rdx,QWORD PTR [rip+0x8c3d]        # 0x40a020
  4013e3:	call   0x403e10
  4013e8:	mov    ecx,DWORD PTR [rip+0x8c1a]        # 0x40a008
  4013ee:	mov    DWORD PTR [rip+0x8c18],eax        # 0x40a00c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0x8c02]        # 0x40a004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x403ce0
  40140b:	mov    eax,DWORD PTR [rip+0x8bfb]        # 0x40a00c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x59f9]        # 0x406e30
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x403ce8
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x5a0d]        # 0x406e70
  401463:	mov    rcx,QWORD PTR [rip+0x59f6]        # 0x406e60
  40146a:	call   0x403cd8
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0xa21b]        # 0x40b6b4
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x59e9]        # 0x406e90
  4014a7:	mov    rcx,QWORD PTR [rip+0x59d2]        # 0x406e80
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x403cd8
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x403ca8
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x5a15]        # 0x406ef0
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x4028a0
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x59e5]        # 0x406ef0
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x4028a0
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	sub    rsp,0x38
  401534:	mov    rdx,QWORD PTR [rip+0x94dd]        # 0x40aa18
  40153b:	test   rdx,rdx
  40153e:	je     0x40158e
  401540:	lea    rcx,[rip+0x4ab9]        # 0x406000
  401547:	call   0x402678
  40154c:	mov    rcx,QWORD PTR [rip+0x8aed]        # 0x40a040
  401553:	lea    r8,[rip+0xc6]        # 0x401620
  40155a:	mov    DWORD PTR [rsp+0x28],0x0
  401562:	mov    QWORD PTR [rsp+0x20],0x0
  40156b:	xor    r9d,r9d
  40156e:	mov    rdx,rax
  401571:	call   0x4025d8
  401576:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401580:	mov    edx,0x1
  401585:	xor    ecx,ecx
  401587:	call   0x4026a0
  40158c:	jmp    0x401580
  40158e:	mov    rcx,QWORD PTR [rip+0x8aab]        # 0x40a040
  401595:	lea    r8,[rip+0x84]        # 0x401620
  40159c:	lea    rdx,[rip+0x4a69]        # 0x40600c
  4015a3:	mov    DWORD PTR [rsp+0x28],0x0
  4015ab:	mov    QWORD PTR [rsp+0x20],0x0
  4015b4:	xor    r9d,r9d
  4015b7:	call   0x4025d8
  4015bc:	jmp    0x401580
  4015be:	xchg   ax,ax
  4015c0:	push   rbx
  4015c1:	sub    rsp,0x20
  4015c5:	mov    rdx,QWORD PTR [rcx]
  4015c8:	lea    rbx,[rcx+0x8]
  4015cc:	test   rdx,rdx
  4015cf:	je     0x4015ea
  4015d1:	lea    rcx,[rip+0x4a3c]        # 0x406014
  4015d8:	add    rbx,0x8
  4015dc:	call   0x402698
  4015e1:	mov    rdx,QWORD PTR [rbx-0x8]
  4015e5:	test   rdx,rdx
  4015e8:	jne    0x4015d1
  4015ea:	add    rsp,0x20
  4015ee:	pop    rbx
  4015ef:	ret    
  4015f0:	mov    rax,QWORD PTR [rip+0xa025]        # 0x40b61c
  4015f7:	lea    rcx,[rip+0x4a1a]        # 0x406018
  4015fe:	mov    r9d,DWORD PTR [rax]
  401601:	mov    rax,QWORD PTR [rip+0xa01c]        # 0x40b624
  401608:	mov    r8d,DWORD PTR [rax]
  40160b:	mov    rax,QWORD PTR [rip+0xa002]        # 0x40b614
  401612:	mov    edx,DWORD PTR [rax]
  401614:	jmp    0x402698
  401619:	nop    DWORD PTR [rax+0x0]
  401620:	push   rdi
  401621:	push   rsi
  401622:	push   rbx
  401623:	sub    rsp,0x20
  401627:	mov    rdi,rdx
  40162a:	call   0x4025b8
  40162f:	mov    edx,0x1
  401634:	mov    rcx,rax
  401637:	mov    rsi,rax
  40163a:	call   0x402600
  40163f:	lea    rcx,[rip+0x49dc]        # 0x406022
  401646:	mov    r8,rax
  401649:	mov    rdx,rdi
  40164c:	mov    rbx,rax
  40164f:	call   0x402698
  401654:	mov    rcx,rsi
  401657:	call   0x4025f0
  40165c:	mov    rcx,rbx
  40165f:	add    rsp,0x20
  401663:	pop    rbx
  401664:	pop    rsi
  401665:	pop    rdi
  401666:	jmp    0x4026a8
  40166b:	nop    DWORD PTR [rax+rax*1+0x0]
  401670:	push   rsi
  401671:	push   rbx
  401672:	sub    rsp,0x28
  401676:	mov    rdx,QWORD PTR [rip+0x939b]        # 0x40aa18
  40167d:	mov    rcx,QWORD PTR [rip+0x89bc]        # 0x40a040
  401684:	call   0x4025b8
  401689:	mov    edx,0x1
  40168e:	mov    rcx,rax
  401691:	mov    rsi,rax
  401694:	call   0x402600
  401699:	lea    rcx,[rip+0x4974]        # 0x406014
  4016a0:	mov    rdx,rax
  4016a3:	mov    rbx,rax
  4016a6:	call   0x402698
  4016ab:	mov    rcx,rsi
  4016ae:	call   0x4025f0
  4016b3:	mov    rcx,rbx
  4016b6:	add    rsp,0x28
  4016ba:	pop    rbx
  4016bb:	pop    rsi
  4016bc:	jmp    0x4026a8
  4016c1:	nop    DWORD PTR [rax+rax*1+0x0]
  4016c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4016d0:	sub    rsp,0x28
  4016d4:	mov    rdx,QWORD PTR [rip+0x933d]        # 0x40aa18
  4016db:	mov    rcx,QWORD PTR [rip+0x895e]        # 0x40a040
  4016e2:	call   0x4025b0
  4016e7:	lea    rdx,[rip+0x4941]        # 0x40602f
  4016ee:	test   eax,eax
  4016f0:	lea    rax,[rip+0x4933]        # 0x40602a
  4016f7:	lea    rcx,[rip+0x4916]        # 0x406014
  4016fe:	cmovne rdx,rax
  401702:	add    rsp,0x28
  401706:	jmp    0x402698
  40170b:	nop    DWORD PTR [rax+rax*1+0x0]
  401710:	push   rbx
  401711:	sub    rsp,0x20
  401715:	mov    rcx,QWORD PTR [rip+0x891c]        # 0x40a038
  40171c:	call   0x402548
  401721:	mov    rbx,rax
  401724:	mov    rcx,rax
  401727:	call   0x4015c0
  40172c:	mov    rcx,rbx
  40172f:	add    rsp,0x20
  401733:	pop    rbx
  401734:	jmp    0x402670
  401739:	nop    DWORD PTR [rax+0x0]
  401740:	push   rdi
  401741:	push   rsi
  401742:	push   rbx
  401743:	sub    rsp,0x30
  401747:	lea    rdx,[rip+0x48e7]        # 0x406035
  40174e:	xor    r9d,r9d
  401751:	lea    r8,[rsp+0x28]
  401756:	mov    rsi,rcx
  401759:	call   0x4025e8
  40175e:	mov    rcx,QWORD PTR [rsp+0x28]
  401763:	call   0x402548
  401768:	mov    rdx,QWORD PTR [rax]
  40176b:	mov    rdi,rax
  40176e:	lea    rbx,[rax+0x8]
  401772:	test   rdx,rdx
  401775:	je     0x401795
  401777:	nop    WORD PTR [rax+rax*1+0x0]
  401780:	add    rbx,0x8
  401784:	mov    rcx,rsi
  401787:	call   0x402590
  40178c:	mov    rdx,QWORD PTR [rbx-0x8]
  401790:	test   rdx,rdx
  401793:	jne    0x401780
  401795:	mov    rcx,QWORD PTR [rsp+0x28]
  40179a:	call   0x402510
  40179f:	mov    rcx,rdi
  4017a2:	call   0x402670
  4017a7:	nop
  4017a8:	add    rsp,0x30
  4017ac:	pop    rbx
  4017ad:	pop    rsi
  4017ae:	pop    rdi
  4017af:	ret    
  4017b0:	push   rdi
  4017b1:	push   rsi
  4017b2:	push   rbx
  4017b3:	sub    rsp,0x20
  4017b7:	mov    rcx,QWORD PTR [rip+0x8882]        # 0x40a040
  4017be:	call   0x4025c8
  4017c3:	mov    rcx,QWORD PTR [rip+0x8876]        # 0x40a040
  4017ca:	call   0x401740
  4017cf:	mov    rcx,QWORD PTR [rip+0x886a]        # 0x40a040
  4017d6:	call   0x4025a8
  4017db:	mov    rdx,QWORD PTR [rax]
  4017de:	mov    rdi,rax
  4017e1:	lea    rbx,[rax+0x8]
  4017e5:	test   rdx,rdx
  4017e8:	je     0x40181c
  4017ea:	nop    WORD PTR [rax+rax*1+0x0]
  4017f0:	mov    rcx,QWORD PTR [rip+0x8849]        # 0x40a040
  4017f7:	add    rbx,0x8
  4017fb:	call   0x4025c0
  401800:	mov    rsi,rax
  401803:	mov    rcx,rax
  401806:	call   0x401740
  40180b:	mov    rcx,rsi
  40180e:	call   0x4025e0
  401813:	mov    rdx,QWORD PTR [rbx-0x8]
  401817:	test   rdx,rdx
  40181a:	jne    0x4017f0
  40181c:	mov    rcx,rdi
  40181f:	call   0x402670
  401824:	mov    rcx,QWORD PTR [rip+0x8815]        # 0x40a040
  40182b:	call   0x4025d0
  401830:	nop
  401831:	add    rsp,0x20
  401835:	pop    rbx
  401836:	pop    rsi
  401837:	pop    rdi
  401838:	jmp    0x402500
  40183d:	nop    DWORD PTR [rax]
  401840:	sub    rsp,0x28
  401844:	mov    rdx,QWORD PTR [rip+0x91cd]        # 0x40aa18
  40184b:	mov    rcx,QWORD PTR [rip+0x87ee]        # 0x40a040
  401852:	call   0x402590
  401857:	nop
  401858:	add    rsp,0x28
  40185c:	jmp    0x402500
  401861:	nop    DWORD PTR [rax+rax*1+0x0]
  401866:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401870:	push   rdi
  401871:	push   rsi
  401872:	push   rbx
  401873:	sub    rsp,0x40
  401877:	mov    rcx,QWORD PTR [rip+0x87b2]        # 0x40a030
  40187e:	mov    QWORD PTR [rsp+0x38],0x0
  401887:	lea    rdi,[rsp+0x38]
  40188c:	call   0x402560
  401891:	mov    rdx,QWORD PTR [rip+0x9178]        # 0x40aa10
  401898:	xor    r9d,r9d
  40189b:	xor    r8d,r8d
  40189e:	mov    QWORD PTR [rsp+0x20],rdi
  4018a3:	mov    rcx,rax
  4018a6:	mov    rsi,rax
  4018a9:	call   0x402610
  4018ae:	test   rax,rax
  4018b1:	mov    rbx,rax
  4018b4:	je     0x401900
  4018b6:	mov    rcx,QWORD PTR [rip+0x8773]        # 0x40a030
  4018bd:	mov    rdx,rbx
  4018c0:	call   0x402558
  4018c5:	test   eax,eax
  4018c7:	je     0x40198d
  4018cd:	mov    rdx,QWORD PTR [rip+0x9144]        # 0x40aa18
  4018d4:	mov    rcx,QWORD PTR [rip+0x8765]        # 0x40a040
  4018db:	mov    r8,rbx
  4018de:	call   0x402508
  4018e3:	test   eax,eax
  4018e5:	je     0x40196f
  4018eb:	call   0x402500
  4018f0:	xor    ecx,ecx
  4018f2:	call   0x4026a8
  4018f7:	nop
  4018f8:	add    rsp,0x40
  4018fc:	pop    rbx
  4018fd:	pop    rsi
  4018fe:	pop    rdi
  4018ff:	ret    
  401900:	lea    rdx,[rip+0x473e]        # 0x406045
  401907:	mov    rcx,rsi
  40190a:	call   0x4025f8
  40190f:	test   eax,eax
  401911:	mov    rdx,QWORD PTR [rip+0x90f8]        # 0x40aa10
  401918:	je     0x40194c
  40191a:	movzx  eax,BYTE PTR [rdx]
  40191d:	cmp    al,0x27
  40191f:	je     0x40194c
  401921:	cmp    al,0x22
  401923:	je     0x40194c
  401925:	mov    rcx,rdi
  401928:	call   0x4026b0
  40192d:	mov    rcx,QWORD PTR [rip+0x90dc]        # 0x40aa10
  401934:	call   0x402618
  401939:	test   rax,rax
  40193c:	mov    rbx,rax
  40193f:	jne    0x4018b6
  401945:	mov    rdx,QWORD PTR [rip+0x90c4]        # 0x40aa10
  40194c:	mov    rcx,QWORD PTR [rsp+0x38]
  401951:	call   0x402608
  401956:	lea    rcx,[rip+0x46ea]        # 0x406047
  40195d:	mov    rdx,rax
  401960:	call   0x402690
  401965:	mov    ecx,0x1
  40196a:	call   0x403ca8
  40196f:	lea    rcx,[rip+0x470c]        # 0x406082
  401976:	call   0x4026d0
  40197b:	mov    rcx,rax
  40197e:	call   0x402690
  401983:	mov    ecx,0x1
  401988:	call   0x403ca8
  40198d:	lea    rcx,[rip+0x46bc]        # 0x406050
  401994:	call   0x4026d0
  401999:	mov    rcx,rax
  40199c:	call   0x402690
  4019a1:	mov    rcx,rbx
  4019a4:	call   0x4025f0
  4019a9:	mov    ecx,0x1
  4019ae:	call   0x403ca8
  4019b3:	nop
  4019b4:	xchg   ax,ax
  4019b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4019c0:	push   rbp
  4019c1:	push   rdi
  4019c2:	push   rsi
  4019c3:	push   rbx
  4019c4:	sub    rsp,0xc8
  4019cb:	mov    rcx,QWORD PTR [rip+0x865e]        # 0x40a030
  4019d2:	lea    rdi,[rip+0x46c8]        # 0x4060a1
  4019d9:	call   0x402568
  4019de:	lea    rdx,[rip+0x46b6]        # 0x40609b
  4019e5:	lea    r9,[rsp+0x28]
  4019ea:	lea    r8,[rsp+0x30]
  4019ef:	mov    rcx,rax
  4019f2:	mov    rbp,rax
  4019f5:	call   0x402638
  4019fa:	mov    rdx,QWORD PTR [rsp+0x30]
  4019ff:	mov    ecx,0x5
  401a04:	mov    rsi,rdx
  401a07:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  401a09:	je     0x401ad0
  401a0f:	lea    rdi,[rip+0x4699]        # 0x4060af
  401a16:	mov    ecx,0x6
  401a1b:	mov    rsi,rdx
  401a1e:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  401a20:	je     0x401af0
  401a26:	lea    rdi,[rip+0x469d]        # 0x4060ca
  401a2d:	mov    ecx,0x5
  401a32:	mov    rsi,rdx
  401a35:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  401a37:	je     0x401a4c
  401a39:	lea    rdi,[rip+0x468f]        # 0x4060cf
  401a40:	mov    ecx,0x6
  401a45:	mov    rsi,rdx
  401a48:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  401a4a:	jne    0x401aad
  401a4c:	lea    rcx,[rip+0x45c1]        # 0x406014
  401a53:	lea    rsi,[rsp+0x40]
  401a58:	lea    rdi,[rsp+0x38]
  401a5d:	call   0x402698
  401a62:	mov    rdx,QWORD PTR [rsp+0x28]
  401a67:	mov    rcx,rsi
  401a6a:	call   0x402628
  401a6f:	jmp    0x401a97
  401a71:	mov    rcx,QWORD PTR [rsp+0x38]
  401a76:	xor    edx,edx
  401a78:	call   0x402600
  401a7d:	lea    rcx,[rip+0x4590]        # 0x406014
  401a84:	mov    rbx,rax
  401a87:	mov    rdx,rax
  401a8a:	call   0x402698
  401a8f:	mov    rcx,rbx
  401a92:	call   0x4026a8
  401a97:	lea    rdx,[rip+0x4637]        # 0x4060d5
  401a9e:	mov    r8,rdi
  401aa1:	mov    rcx,rsi
  401aa4:	call   0x402620
  401aa9:	test   eax,eax
  401aab:	jne    0x401a71
  401aad:	mov    rcx,QWORD PTR [rsp+0x28]
  401ab2:	call   0x4025f0
  401ab7:	mov    rcx,rbp
  401aba:	call   0x4025f0
  401abf:	nop
  401ac0:	add    rsp,0xc8
  401ac7:	pop    rbx
  401ac8:	pop    rsi
  401ac9:	pop    rdi
  401aca:	pop    rbp
  401acb:	ret    
  401acc:	nop    DWORD PTR [rax+0x0]
  401ad0:	mov    rcx,QWORD PTR [rsp+0x28]
  401ad5:	call   0x402630
  401ada:	lea    rcx,[rip+0x45c5]        # 0x4060a6
  401ae1:	lea    rdx,[rax+0x1]
  401ae5:	call   0x402698
  401aea:	jmp    0x401aad
  401aec:	nop    DWORD PTR [rax+0x0]
  401af0:	mov    rcx,QWORD PTR [rsp+0x28]
  401af5:	lea    r9,[rsp+0x40]
  401afa:	lea    r8,[rsp+0x38]
  401aff:	lea    rdx,[rip+0x45af]        # 0x4060b5
  401b06:	call   0x402638
  401b0b:	mov    rcx,QWORD PTR [rsp+0x38]
  401b10:	xor    edx,edx
  401b12:	call   0x402600
  401b17:	mov    rcx,QWORD PTR [rsp+0x40]
  401b1c:	xor    edx,edx
  401b1e:	mov    rsi,rax
  401b21:	call   0x402600
  401b26:	mov    rcx,QWORD PTR [rsp+0x38]
  401b2b:	mov    rbx,rax
  401b2e:	call   0x402630
  401b33:	lea    rcx,[rip+0x4580]        # 0x4060ba
  401b3a:	mov    r9,rbx
  401b3d:	mov    r8,rsi
  401b40:	mov    rdx,rax
  401b43:	call   0x402698
  401b48:	mov    rcx,QWORD PTR [rsp+0x38]
  401b4d:	call   0x4025f0
  401b52:	mov    rcx,QWORD PTR [rsp+0x40]
  401b57:	call   0x4025f0
  401b5c:	mov    rcx,rsi
  401b5f:	call   0x4026a8
  401b64:	mov    rcx,rbx
  401b67:	call   0x4026a8
  401b6c:	jmp    0x401aad
  401b71:	nop    DWORD PTR [rax+rax*1+0x0]
  401b76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401b80:	sub    rsp,0x38
  401b84:	mov    rcx,QWORD PTR [rip+0x84bd]        # 0x40a048
  401b8b:	xor    r8d,r8d
  401b8e:	mov    edx,0x1
  401b93:	lea    r9,[rsp+0x28]
  401b98:	call   0x402538
  401b9d:	mov    rcx,QWORD PTR [rsp+0x28]
  401ba2:	call   0x4015c0
  401ba7:	mov    rcx,QWORD PTR [rsp+0x28]
  401bac:	call   0x402670
  401bb1:	nop
  401bb2:	add    rsp,0x38
  401bb6:	ret    
  401bb7:	nop    WORD PTR [rax+rax*1+0x0]
  401bc0:	sub    rsp,0x38
  401bc4:	mov    rcx,QWORD PTR [rip+0x847d]        # 0x40a048
  401bcb:	xor    r9d,r9d
  401bce:	mov    edx,0x1
  401bd3:	lea    r8,[rsp+0x28]
  401bd8:	call   0x402538
  401bdd:	mov    rcx,QWORD PTR [rsp+0x28]
  401be2:	call   0x4015c0
  401be7:	mov    rcx,QWORD PTR [rsp+0x28]
  401bec:	call   0x402670
  401bf1:	nop
  401bf2:	add    rsp,0x38
  401bf6:	ret    
  401bf7:	nop    WORD PTR [rax+rax*1+0x0]
  401c00:	push   r13
  401c02:	push   r12
  401c04:	push   rbp
  401c05:	push   rdi
  401c06:	push   rsi
  401c07:	push   rbx
  401c08:	sub    rsp,0x38
  401c0c:	lea    rdx,[rip+0x4422]        # 0x406035
  401c13:	xor    r9d,r9d
  401c16:	lea    r8,[rsp+0x28]
  401c1b:	mov    rbp,rcx
  401c1e:	call   0x4025e8
  401c23:	mov    rcx,QWORD PTR [rsp+0x28]
  401c28:	call   0x402548
  401c2d:	mov    rdx,QWORD PTR [rax]
  401c30:	mov    r13,rax
  401c33:	mov    rbx,rax
  401c36:	test   rdx,rdx
  401c39:	je     0x401c9a
  401c3b:	nop    DWORD PTR [rax+rax*1+0x0]
  401c40:	mov    rcx,rbp
  401c43:	add    rbx,0x8
  401c47:	call   0x4025b8
  401c4c:	mov    edx,0x1
  401c51:	mov    rcx,rax
  401c54:	mov    rdi,rax
  401c57:	call   0x402600
  401c5c:	mov    rcx,QWORD PTR [rsp+0x28]
  401c61:	mov    r12,QWORD PTR [rbx-0x8]
  401c65:	mov    rsi,rax
  401c68:	call   0x402588
  401c6d:	lea    rcx,[rip+0x4463]        # 0x4060d7
  401c74:	mov    rdx,rax
  401c77:	mov    r9,rsi
  401c7a:	mov    r8,r12
  401c7d:	call   0x402698
  401c82:	mov    rcx,rdi
  401c85:	call   0x4025f0
  401c8a:	mov    rcx,rsi
  401c8d:	call   0x4026a8
  401c92:	mov    rdx,QWORD PTR [rbx]
  401c95:	test   rdx,rdx
  401c98:	jne    0x401c40
  401c9a:	mov    rcx,QWORD PTR [rsp+0x28]
  401c9f:	call   0x402510
  401ca4:	mov    rcx,r13
  401ca7:	call   0x402670
  401cac:	mov    rcx,rbp
  401caf:	call   0x4025a8
  401cb4:	mov    rdx,QWORD PTR [rax]
  401cb7:	mov    rdi,rax
  401cba:	lea    rbx,[rax+0x8]
  401cbe:	test   rdx,rdx
  401cc1:	je     0x401ceb
  401cc3:	mov    rcx,rbp
  401cc6:	add    rbx,0x8
  401cca:	call   0x4025c0
  401ccf:	mov    rsi,rax
  401cd2:	mov    rcx,rax
  401cd5:	call   0x401c00
  401cda:	mov    rcx,rsi
  401cdd:	call   0x4025e0
  401ce2:	mov    rdx,QWORD PTR [rbx-0x8]
  401ce6:	test   rdx,rdx
  401ce9:	jne    0x401cc3
  401ceb:	mov    rcx,rdi
  401cee:	call   0x402670
  401cf3:	nop
  401cf4:	add    rsp,0x38
  401cf8:	pop    rbx
  401cf9:	pop    rsi
  401cfa:	pop    rdi
  401cfb:	pop    rbp
  401cfc:	pop    r12
  401cfe:	pop    r13
  401d00:	ret    
  401d01:	nop    DWORD PTR [rax+rax*1+0x0]
  401d06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401d10:	push   r14
  401d12:	push   r13
  401d14:	push   r12
  401d16:	push   rbp
  401d17:	push   rdi
  401d18:	push   rsi
  401d19:	push   rbx
  401d1a:	sub    rsp,0x40
  401d1e:	mov    rcx,QWORD PTR [rip+0x831b]        # 0x40a040
  401d25:	xor    ebx,ebx
  401d27:	call   0x4025a8
  401d2c:	mov    rdi,QWORD PTR [rax]
  401d2f:	mov    rbp,rax
  401d32:	lea    rsi,[rax+0x8]
  401d36:	test   rdi,rdi
  401d39:	mov    rcx,rdi
  401d3c:	je     0x401e30
  401d42:	call   0x403c68
  401d47:	mov    rdx,rax
  401d4a:	movsxd rax,ebx
  401d4d:	cmp    rdx,rax
  401d50:	cmova  ebx,edx
  401d53:	add    rsi,0x8
  401d57:	mov    rcx,QWORD PTR [rsi-0x8]
  401d5b:	test   rcx,rcx
  401d5e:	jne    0x401d42
  401d60:	mov    rsi,rbp
  401d63:	lea    r13,[rsp+0x30]
  401d68:	lea    r12,[rsp+0x38]
  401d6d:	jmp    0x401db6
  401d6f:	nop
  401d70:	mov    rcx,QWORD PTR [rsp+0x30]
  401d75:	call   0x402588
  401d7a:	mov    r8,QWORD PTR [rsi]
  401d7d:	lea    rcx,[rip+0x4362]        # 0x4060e6
  401d84:	mov    r9,rax
  401d87:	mov    edx,ebx
  401d89:	call   0x402698
  401d8e:	mov    rcx,rdi
  401d91:	add    rsi,0x8
  401d95:	call   0x4025e0
  401d9a:	mov    rcx,QWORD PTR [rsp+0x30]
  401d9f:	call   0x402510
  401da4:	mov    rcx,QWORD PTR [rsp+0x38]
  401da9:	call   0x4026a8
  401dae:	mov    rdi,QWORD PTR [rsi]
  401db1:	test   rdi,rdi
  401db4:	je     0x401e30
  401db6:	mov    rcx,QWORD PTR [rip+0x8283]        # 0x40a040
  401dbd:	mov    rdx,rdi
  401dc0:	call   0x4025c0
  401dc5:	lea    r9,[rip+0x4315]        # 0x4060e1
  401dcc:	lea    rdx,[rip+0x4262]        # 0x406035
  401dd3:	mov    rcx,rax
  401dd6:	mov    r8,r13
  401dd9:	mov    QWORD PTR [rsp+0x28],0x0
  401de2:	mov    QWORD PTR [rsp+0x20],r12
  401de7:	mov    rdi,rax
  401dea:	call   0x4025e8
  401def:	mov    rcx,QWORD PTR [rsp+0x30]
  401df4:	call   0x402578
  401df9:	test   rax,rax
  401dfc:	jne    0x401d70
  401e02:	mov    r14,QWORD PTR [rsp+0x38]
  401e07:	mov    rcx,QWORD PTR [rsp+0x30]
  401e0c:	call   0x402588
  401e11:	mov    QWORD PTR [rsp+0x20],r14
  401e16:	mov    r8,QWORD PTR [rsi]
  401e19:	lea    rcx,[rip+0x42d1]        # 0x4060f1
  401e20:	mov    r9,rax
  401e23:	mov    edx,ebx
  401e25:	call   0x402698
  401e2a:	jmp    0x401d8e
  401e2f:	nop
  401e30:	mov    rcx,rbp
  401e33:	call   0x402670
  401e38:	nop
  401e39:	add    rsp,0x40
  401e3d:	pop    rbx
  401e3e:	pop    rsi
  401e3f:	pop    rdi
  401e40:	pop    rbp
  401e41:	pop    r12
  401e43:	pop    r13
  401e45:	pop    r14
  401e47:	ret    
  401e48:	nop    DWORD PTR [rax+rax*1+0x0]
  401e50:	push   r13
  401e52:	push   r12
  401e54:	push   rbp
  401e55:	push   rdi
  401e56:	push   rsi
  401e57:	push   rbx
  401e58:	sub    rsp,0x38
  401e5c:	mov    rbp,rdx
  401e5f:	mov    r12d,ecx
  401e62:	xor    ecx,ecx
  401e64:	call   0x402650
  401e69:	test   rbp,rbp
  401e6c:	mov    rbx,rax
  401e6f:	je     0x402239
  401e75:	lea    rdi,[rip+0x42ea]        # 0x406166
  401e7c:	mov    ecx,0x5
  401e81:	mov    rsi,rbp
  401e84:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  401e86:	je     0x401fd2
  401e8c:	lea    rdx,[rip+0x42e3]        # 0x406176
  401e93:	mov    rcx,rbp
  401e96:	call   0x403c70
  401e9b:	test   eax,eax
  401e9d:	je     0x402115
  401ea3:	lea    rdx,[rip+0x42f9]        # 0x4061a3
  401eaa:	mov    rcx,rbp
  401ead:	call   0x403c70
  401eb2:	test   eax,eax
  401eb4:	je     0x402255
  401eba:	lea    rdx,[rip+0x431c]        # 0x4061dd
  401ec1:	mov    rcx,rbp
  401ec4:	call   0x403c70
  401ec9:	test   eax,eax
  401ecb:	je     0x402270
  401ed1:	lea    rdx,[rip+0x4347]        # 0x40621f
  401ed8:	mov    rcx,rbp
  401edb:	call   0x403c70
  401ee0:	test   eax,eax
  401ee2:	je     0x402201
  401ee8:	lea    rdx,[rip+0x4352]        # 0x406241
  401eef:	mov    rcx,rbp
  401ef2:	call   0x403c70
  401ef7:	test   eax,eax
  401ef9:	je     0x4022a6
  401eff:	lea    rdx,[rip+0x4365]        # 0x40626b
  401f06:	mov    rcx,rbp
  401f09:	call   0x403c70
  401f0e:	test   eax,eax
  401f10:	je     0x4022c1
  401f16:	lea    rdx,[rip+0x43ab]        # 0x4062c8
  401f1d:	mov    rcx,rbp
  401f20:	call   0x403c70
  401f25:	test   eax,eax
  401f27:	je     0x4022dc
  401f2d:	lea    rdx,[rip+0x417b]        # 0x4060af
  401f34:	mov    rcx,rbp
  401f37:	call   0x403c70
  401f3c:	test   eax,eax
  401f3e:	je     0x40228b
  401f44:	lea    rdx,[rip+0x43c5]        # 0x406310
  401f4b:	mov    rcx,rbp
  401f4e:	call   0x403c70
  401f53:	test   eax,eax
  401f55:	je     0x4022f7
  401f5b:	lea    rdx,[rip+0x43d0]        # 0x406332
  401f62:	mov    rcx,rbp
  401f65:	call   0x403c70
  401f6a:	test   eax,eax
  401f6c:	je     0x402312
  401f72:	lea    rdx,[rip+0x43de]        # 0x406357
  401f79:	mov    rcx,rbp
  401f7c:	call   0x403c70
  401f81:	test   eax,eax
  401f83:	je     0x40232d
  401f89:	lea    rdx,[rip+0x440b]        # 0x40639b
  401f90:	mov    rcx,rbp
  401f93:	call   0x403c70
  401f98:	test   eax,eax
  401f9a:	je     0x402348
  401fa0:	lea    rdx,[rip+0x4416]        # 0x4063bd
  401fa7:	mov    rcx,rbp
  401faa:	call   0x403c70
  401faf:	test   eax,eax
  401fb1:	jne    0x40221c
  401fb7:	lea    rcx,[rip+0x440a]        # 0x4063c8
  401fbe:	lea    rsi,[rip+0x418d]        # 0x406152
  401fc5:	call   0x4026d0
  401fca:	mov    rdi,rax
  401fcd:	jmp    0x40212b
  401fd2:	lea    rcx,[rip+0x4192]        # 0x40616b
  401fd9:	lea    rsi,[rip+0x411f]        # 0x4060ff
  401fe0:	call   0x4026d0
  401fe5:	mov    rdi,rax
  401fe8:	mov    rcx,rsi
  401feb:	call   0x4026d0
  401ff0:	lea    rcx,[rip+0x4451]        # 0x406448
  401ff7:	mov    r13,rax
  401ffa:	call   0x4026d0
  401fff:	mov    r9,r13
  402002:	mov    r8,rbp
  402005:	mov    rdx,rax
  402008:	mov    rcx,rbx
  40200b:	mov    QWORD PTR [rsp+0x20],rdi
  402010:	call   0x402660
  402015:	lea    rcx,[rip+0x4463]        # 0x40647f
  40201c:	call   0x4026d0
  402021:	mov    rcx,rbx
  402024:	mov    rdx,rax
  402027:	call   0x402668
  40202c:	lea    rcx,[rip+0x445d]        # 0x406490
  402033:	call   0x4026d0
  402038:	mov    rcx,rbx
  40203b:	mov    rdx,rax
  40203e:	call   0x402668
  402043:	lea    rdx,[rip+0x40b5]        # 0x4060ff
  40204a:	mov    rcx,rsi
  40204d:	call   0x403c58
  402052:	test   rax,rax
  402055:	je     0x402188
  40205b:	lea    rcx,[rip+0x446e]        # 0x4064d0
  402062:	call   0x4026d0
  402067:	mov    rcx,rbx
  40206a:	mov    rdx,rax
  40206d:	call   0x402668
  402072:	lea    rdx,[rip+0x44e1]        # 0x40655a
  402079:	mov    rcx,rsi
  40207c:	call   0x403c58
  402081:	test   rax,rax
  402084:	je     0x4021cd
  40208a:	lea    rcx,[rip+0x44cf]        # 0x406560
  402091:	call   0x4026d0
  402096:	mov    rcx,rbx
  402099:	mov    rdx,rax
  40209c:	call   0x402668
  4020a1:	lea    rdx,[rip+0x4517]        # 0x4065bf
  4020a8:	mov    rcx,rsi
  4020ab:	call   0x403c58
  4020b0:	test   rax,rax
  4020b3:	je     0x4020cc
  4020b5:	lea    rcx,[rip+0x4509]        # 0x4065c5
  4020bc:	call   0x4026d0
  4020c1:	mov    rcx,rbx
  4020c4:	mov    rdx,rax
  4020c7:	call   0x402668
  4020cc:	lea    rdx,[rip+0x4510]        # 0x4065e3
  4020d3:	mov    rcx,rbx
  4020d6:	call   0x402668
  4020db:	test   r12d,r12d
  4020de:	mov    rdx,QWORD PTR [rbx]
  4020e1:	jne    0x4021bc
  4020e7:	lea    rcx,[rip+0x3f26]        # 0x406014
  4020ee:	call   0x402690
  4020f3:	mov    edx,0x1
  4020f8:	mov    rcx,rbx
  4020fb:	call   0x402658
  402100:	xor    eax,eax
  402102:	test   r12d,r12d
  402105:	sete   al
  402108:	add    rsp,0x38
  40210c:	pop    rbx
  40210d:	pop    rsi
  40210e:	pop    rdi
  40210f:	pop    rbp
  402110:	pop    r12
  402112:	pop    r13
  402114:	ret    
  402115:	lea    rcx,[rip+0x4064]        # 0x406180
  40211c:	lea    rsi,[rip+0x3fe6]        # 0x406109
  402123:	call   0x4026d0
  402128:	mov    rdi,rax
  40212b:	cmp    BYTE PTR [rsi],0x0
  40212e:	jne    0x401fe8
  402134:	lea    rcx,[rip+0x430d]        # 0x406448
  40213b:	call   0x4026d0
  402140:	lea    r9,[rip+0x3fc2]        # 0x406109
  402147:	mov    r8,rbp
  40214a:	mov    rdx,rax
  40214d:	mov    rcx,rbx
  402150:	mov    QWORD PTR [rsp+0x20],rdi
  402155:	call   0x402660
  40215a:	lea    rcx,[rip+0x431e]        # 0x40647f
  402161:	call   0x4026d0
  402166:	mov    rcx,rbx
  402169:	mov    rdx,rax
  40216c:	call   0x402668
  402171:	lea    rcx,[rip+0x4318]        # 0x406490
  402178:	call   0x4026d0
  40217d:	mov    rcx,rbx
  402180:	mov    rdx,rax
  402183:	call   0x402668
  402188:	lea    rdx,[rip+0x4370]        # 0x4064ff
  40218f:	mov    rcx,rsi
  402192:	call   0x403c58
  402197:	test   rax,rax
  40219a:	je     0x402072
  4021a0:	lea    rcx,[rip+0x4361]        # 0x406508
  4021a7:	call   0x4026d0
  4021ac:	mov    rcx,rbx
  4021af:	mov    rdx,rax
  4021b2:	call   0x402668
  4021b7:	jmp    0x402072
  4021bc:	lea    rcx,[rip+0x3e84]        # 0x406047
  4021c3:	call   0x402698
  4021c8:	jmp    0x4020f3
  4021cd:	lea    rdx,[rip+0x43be]        # 0x406592
  4021d4:	mov    rcx,rsi
  4021d7:	call   0x403c58
  4021dc:	test   rax,rax
  4021df:	je     0x4020a1
  4021e5:	lea    rcx,[rip+0x43ac]        # 0x406598
  4021ec:	call   0x4026d0
  4021f1:	mov    rcx,rbx
  4021f4:	mov    rdx,rax
  4021f7:	call   0x402668
  4021fc:	jmp    0x4020a1
  402201:	lea    rcx,[rip+0x4021]        # 0x406229
  402208:	lea    rsi,[rip+0x3efb]        # 0x40610a
  40220f:	call   0x4026d0
  402214:	mov    rdi,rax
  402217:	jmp    0x40212b
  40221c:	lea    rcx,[rip+0x420e]        # 0x406431
  402223:	xor    r12d,r12d
  402226:	call   0x4026d0
  40222b:	mov    r8,rbp
  40222e:	mov    rdx,rax
  402231:	mov    rcx,rbx
  402234:	call   0x402648
  402239:	lea    rcx,[rip+0x43a8]        # 0x4065e8
  402240:	call   0x4026d0
  402245:	mov    rcx,rbx
  402248:	mov    rdx,rax
  40224b:	call   0x402668
  402250:	jmp    0x4020db
  402255:	lea    rcx,[rip+0x3f54]        # 0x4061b0
  40225c:	lea    rsi,[rip+0x3ea6]        # 0x406109
  402263:	call   0x4026d0
  402268:	mov    rdi,rax
  40226b:	jmp    0x40212b
  402270:	lea    rcx,[rip+0x3f81]        # 0x4061f8
  402277:	lea    rsi,[rip+0x3e8b]        # 0x406109
  40227e:	call   0x4026d0
  402283:	mov    rdi,rax
  402286:	jmp    0x40212b
  40228b:	lea    rcx,[rip+0x4056]        # 0x4062e8
  402292:	lea    rsi,[rip+0x3e8f]        # 0x406128
  402299:	call   0x4026d0
  40229e:	mov    rdi,rax
  4022a1:	jmp    0x40212b
  4022a6:	lea    rcx,[rip+0x3fa2]        # 0x40624f
  4022ad:	lea    rsi,[rip+0x3e56]        # 0x40610a
  4022b4:	call   0x4026d0
  4022b9:	mov    rdi,rax
  4022bc:	jmp    0x40212b
  4022c1:	lea    rcx,[rip+0x3fb8]        # 0x406280
  4022c8:	lea    rsi,[rip+0x3e49]        # 0x406118
  4022cf:	call   0x4026d0
  4022d4:	mov    rdi,rax
  4022d7:	jmp    0x40212b
  4022dc:	lea    rcx,[rip+0x3fe9]        # 0x4062cc
  4022e3:	lea    rsi,[rip+0x3e3e]        # 0x406128
  4022ea:	call   0x4026d0
  4022ef:	mov    rdi,rax
  4022f2:	jmp    0x40212b
  4022f7:	lea    rcx,[rip+0x4016]        # 0x406314
  4022fe:	lea    rsi,[rip+0x3e35]        # 0x40613a
  402305:	call   0x4026d0
  40230a:	mov    rdi,rax
  40230d:	jmp    0x40212b
  402312:	lea    rcx,[rip+0x401f]        # 0x406338
  402319:	lea    rsi,[rip+0x3e08]        # 0x406128
  402320:	call   0x4026d0
  402325:	mov    rdi,rax
  402328:	jmp    0x40212b
  40232d:	lea    rcx,[rip+0x403c]        # 0x406370
  402334:	lea    rsi,[rip+0x3dcf]        # 0x40610a
  40233b:	call   0x4026d0
  402340:	mov    rdi,rax
  402343:	jmp    0x40212b
  402348:	lea    rcx,[rip+0x4055]        # 0x4063a4
  40234f:	lea    rsi,[rip+0x3dd2]        # 0x406128
  402356:	call   0x4026d0
  40235b:	mov    rdi,rax
  40235e:	jmp    0x40212b
  402363:	nop    DWORD PTR [rax]
  402366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402370:	push   rsi
  402371:	push   rbx
  402372:	sub    rsp,0x38
  402376:	mov    rcx,QWORD PTR [rip+0x7cc3]        # 0x40a040
  40237d:	test   rcx,rcx
  402380:	je     0x402390
  402382:	call   0x401c00
  402387:	nop
  402388:	add    rsp,0x38
  40238c:	pop    rbx
  40238d:	pop    rsi
  40238e:	ret    
  40238f:	nop
  402390:	mov    rcx,QWORD PTR [rip+0x7cb1]        # 0x40a048
  402397:	lea    r8,[rsp+0x28]
  40239c:	xor    r9d,r9d
  40239f:	mov    edx,0x1
  4023a4:	call   0x402538
  4023a9:	mov    rax,QWORD PTR [rsp+0x28]
  4023ae:	mov    rcx,QWORD PTR [rax]
  4023b1:	test   rcx,rcx
  4023b4:	je     0x4023ea
  4023b6:	mov    ebx,0x8
  4023bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4023c0:	call   0x4025a0
  4023c5:	mov    rsi,rax
  4023c8:	mov    rcx,rax
  4023cb:	call   0x401c00
  4023d0:	mov    rcx,rsi
  4023d3:	call   0x4025e0
  4023d8:	mov    rax,QWORD PTR [rsp+0x28]
  4023dd:	mov    rcx,QWORD PTR [rax+rbx*1]
  4023e1:	add    rbx,0x8
  4023e5:	test   rcx,rcx
  4023e8:	jne    0x4023c0
  4023ea:	mov    rcx,rax
  4023ed:	call   0x402670
  4023f2:	nop
  4023f3:	add    rsp,0x38
  4023f7:	pop    rbx
  4023f8:	pop    rsi
  4023f9:	ret    
  4023fa:	nop    WORD PTR [rax+rax*1+0x0]
  402400:	push   rbx
  402401:	sub    rsp,0x20
  402405:	test   rcx,rcx
  402408:	mov    rbx,rdx
  40240b:	je     0x40243d
  40240d:	call   0x402578
  402412:	test   rax,rax
  402415:	mov    ecx,0x1
  40241a:	je     0x402435
  40241c:	lea    rcx,[rip+0x4525]        # 0x406948
  402423:	call   0x4026d0
  402428:	mov    rdx,rbx
  40242b:	mov    rcx,rax
  40242e:	call   0x402690
  402433:	xor    ecx,ecx
  402435:	mov    eax,ecx
  402437:	add    rsp,0x20
  40243b:	pop    rbx
  40243c:	ret    
  40243d:	lea    rcx,[rip+0x44ee]        # 0x406932
  402444:	jmp    0x402423
  402446:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402450:	push   rsi
  402451:	push   rbx
  402452:	sub    rsp,0x28
  402456:	movzx  eax,BYTE PTR [rcx]
  402459:	mov    rbx,rcx
  40245c:	test   al,al
  40245e:	je     0x4024c1
  402460:	cmp    al,0x2f
  402462:	je     0x402483
  402464:	lea    rcx,[rip+0x452d]        # 0x406998
  40246b:	xor    esi,esi
  40246d:	call   0x4026d0
  402472:	mov    rcx,rax
  402475:	call   0x402690
  40247a:	mov    eax,esi
  40247c:	add    rsp,0x28
  402480:	pop    rbx
  402481:	pop    rsi
  402482:	ret    
  402483:	lea    rdx,[rip+0x4530]        # 0x4069ba
  40248a:	call   0x402680
  40248f:	test   eax,eax
  402491:	mov    esi,eax
  402493:	je     0x4024e0
  402495:	lea    rdx,[rip+0x4544]        # 0x4069e0
  40249c:	mov    rcx,rbx
  40249f:	call   0x403c58
  4024a4:	test   rax,rax
  4024a7:	je     0x4024d9
  4024a9:	lea    rcx,[rip+0x4538]        # 0x4069e8
  4024b0:	xor    esi,esi
  4024b2:	call   0x4026d0
  4024b7:	mov    rcx,rax
  4024ba:	call   0x402690
  4024bf:	jmp    0x40247a
  4024c1:	lea    rcx,[rip+0x44bd]        # 0x406985
  4024c8:	xor    esi,esi
  4024ca:	call   0x4026d0
  4024cf:	mov    rcx,rax
  4024d2:	call   0x402690
  4024d7:	jmp    0x40247a
  4024d9:	mov    esi,0x1
  4024de:	jmp    0x40247a
  4024e0:	lea    rcx,[rip+0x44d9]        # 0x4069c0
  4024e7:	call   0x4026d0
  4024ec:	mov    rcx,rax
  4024ef:	call   0x402690
  4024f4:	jmp    0x40247a
  4024f6:	nop
  4024f7:	nop
  4024f8:	nop
  4024f9:	nop
  4024fa:	nop
  4024fb:	nop
  4024fc:	nop
  4024fd:	nop
  4024fe:	nop
  4024ff:	nop
  402500:	jmp    QWORD PTR [rip+0x902e]        # 0x40b534
  402506:	nop
  402507:	nop
  402508:	jmp    QWORD PTR [rip+0x901e]        # 0x40b52c
  40250e:	nop
  40250f:	nop
  402510:	jmp    QWORD PTR [rip+0x900e]        # 0x40b524
  402516:	nop
  402517:	nop
  402518:	jmp    QWORD PTR [rip+0x8ffe]        # 0x40b51c
  40251e:	nop
  40251f:	nop
  402520:	jmp    QWORD PTR [rip+0x8fee]        # 0x40b514
  402526:	nop
  402527:	nop
  402528:	jmp    QWORD PTR [rip+0x8fde]        # 0x40b50c
  40252e:	nop
  40252f:	nop
  402530:	jmp    QWORD PTR [rip+0x8fce]        # 0x40b504
  402536:	nop
  402537:	nop
  402538:	jmp    QWORD PTR [rip+0x8fbe]        # 0x40b4fc
  40253e:	nop
  40253f:	nop
  402540:	jmp    QWORD PTR [rip+0x8fae]        # 0x40b4f4
  402546:	nop
  402547:	nop
  402548:	jmp    QWORD PTR [rip+0x8f9e]        # 0x40b4ec
  40254e:	nop
  40254f:	nop
  402550:	jmp    QWORD PTR [rip+0x8f8e]        # 0x40b4e4
  402556:	nop
  402557:	nop
  402558:	jmp    QWORD PTR [rip+0x8f7e]        # 0x40b4dc
  40255e:	nop
  40255f:	nop
  402560:	jmp    QWORD PTR [rip+0x8f6e]        # 0x40b4d4
  402566:	nop
  402567:	nop
  402568:	jmp    QWORD PTR [rip+0x8f5e]        # 0x40b4cc
  40256e:	nop
  40256f:	nop
  402570:	jmp    QWORD PTR [rip+0x8f4e]        # 0x40b4c4
  402576:	nop
  402577:	nop
  402578:	jmp    QWORD PTR [rip+0x8f3e]        # 0x40b4bc
  40257e:	nop
  40257f:	nop
  402580:	jmp    QWORD PTR [rip+0x8f2e]        # 0x40b4b4
  402586:	nop
  402587:	nop
  402588:	jmp    QWORD PTR [rip+0x8f1e]        # 0x40b4ac
  40258e:	nop
  40258f:	nop
  402590:	jmp    QWORD PTR [rip+0x8f0e]        # 0x40b4a4
  402596:	nop
  402597:	nop
  402598:	jmp    QWORD PTR [rip+0x8efe]        # 0x40b49c
  40259e:	nop
  40259f:	nop
  4025a0:	jmp    QWORD PTR [rip+0x8eee]        # 0x40b494
  4025a6:	nop
  4025a7:	nop
  4025a8:	jmp    QWORD PTR [rip+0x8ede]        # 0x40b48c
  4025ae:	nop
  4025af:	nop
  4025b0:	jmp    QWORD PTR [rip+0x8ece]        # 0x40b484
  4025b6:	nop
  4025b7:	nop
  4025b8:	jmp    QWORD PTR [rip+0x8ebe]        # 0x40b47c
  4025be:	nop
  4025bf:	nop
  4025c0:	jmp    QWORD PTR [rip+0x8eae]        # 0x40b474
  4025c6:	nop
  4025c7:	nop
  4025c8:	jmp    QWORD PTR [rip+0x8e9e]        # 0x40b46c
  4025ce:	nop
  4025cf:	nop
  4025d0:	jmp    QWORD PTR [rip+0x8e8e]        # 0x40b464
  4025d6:	nop
  4025d7:	nop
  4025d8:	jmp    QWORD PTR [rip+0x9066]        # 0x40b644
  4025de:	nop
  4025df:	nop
  4025e0:	jmp    QWORD PTR [rip+0x9056]        # 0x40b63c
  4025e6:	nop
  4025e7:	nop
  4025e8:	jmp    QWORD PTR [rip+0x9046]        # 0x40b634
  4025ee:	nop
  4025ef:	nop
  4025f0:	jmp    QWORD PTR [rip+0x9016]        # 0x40b60c
  4025f6:	nop
  4025f7:	nop
  4025f8:	jmp    QWORD PTR [rip+0x9006]        # 0x40b604
  4025fe:	nop
  4025ff:	nop
  402600:	jmp    QWORD PTR [rip+0x8ff6]        # 0x40b5fc
  402606:	nop
  402607:	nop
  402608:	jmp    QWORD PTR [rip+0x8fe6]        # 0x40b5f4
  40260e:	nop
  40260f:	nop
  402610:	jmp    QWORD PTR [rip+0x8fd6]        # 0x40b5ec
  402616:	nop
  402617:	nop
  402618:	jmp    QWORD PTR [rip+0x8fc6]        # 0x40b5e4
  40261e:	nop
  40261f:	nop
  402620:	jmp    QWORD PTR [rip+0x8fb6]        # 0x40b5dc
  402626:	nop
  402627:	nop
  402628:	jmp    QWORD PTR [rip+0x8fa6]        # 0x40b5d4
  40262e:	nop
  40262f:	nop
  402630:	jmp    QWORD PTR [rip+0x8f96]        # 0x40b5cc
  402636:	nop
  402637:	nop
  402638:	jmp    QWORD PTR [rip+0x8f86]        # 0x40b5c4
  40263e:	nop
  40263f:	nop
  402640:	jmp    QWORD PTR [rip+0x8f76]        # 0x40b5bc
  402646:	nop
  402647:	nop
  402648:	jmp    QWORD PTR [rip+0x8f66]        # 0x40b5b4
  40264e:	nop
  40264f:	nop
  402650:	jmp    QWORD PTR [rip+0x8f56]        # 0x40b5ac
  402656:	nop
  402657:	nop
  402658:	jmp    QWORD PTR [rip+0x8f46]        # 0x40b5a4
  40265e:	nop
  40265f:	nop
  402660:	jmp    QWORD PTR [rip+0x8f36]        # 0x40b59c
  402666:	nop
  402667:	nop
  402668:	jmp    QWORD PTR [rip+0x8f26]        # 0x40b594
  40266e:	nop
  40266f:	nop
  402670:	jmp    QWORD PTR [rip+0x8f16]        # 0x40b58c
  402676:	nop
  402677:	nop
  402678:	jmp    QWORD PTR [rip+0x8f06]        # 0x40b584
  40267e:	nop
  40267f:	nop
  402680:	jmp    QWORD PTR [rip+0x8ef6]        # 0x40b57c
  402686:	nop
  402687:	nop
  402688:	jmp    QWORD PTR [rip+0x8ee6]        # 0x40b574
  40268e:	nop
  40268f:	nop
  402690:	jmp    QWORD PTR [rip+0x8ed6]        # 0x40b56c
  402696:	nop
  402697:	nop
  402698:	jmp    QWORD PTR [rip+0x8ec6]        # 0x40b564
  40269e:	nop
  40269f:	nop
  4026a0:	jmp    QWORD PTR [rip+0x8eb6]        # 0x40b55c
  4026a6:	nop
  4026a7:	nop
  4026a8:	jmp    QWORD PTR [rip+0x8ea6]        # 0x40b554
  4026ae:	nop
  4026af:	nop
  4026b0:	jmp    QWORD PTR [rip+0x8e96]        # 0x40b54c
  4026b6:	nop
  4026b7:	nop
  4026b8:	jmp    QWORD PTR [rip+0x8e86]        # 0x40b544
  4026be:	nop
  4026bf:	nop
  4026c0:	jmp    QWORD PTR [rip+0x8fae]        # 0x40b674
  4026c6:	nop
  4026c7:	nop
  4026c8:	jmp    QWORD PTR [rip+0x8f9e]        # 0x40b66c
  4026ce:	nop
  4026cf:	nop
  4026d0:	jmp    QWORD PTR [rip+0x8f8e]        # 0x40b664
  4026d6:	nop
  4026d7:	nop
  4026d8:	jmp    QWORD PTR [rip+0x8f7e]        # 0x40b65c
  4026de:	nop
  4026df:	nop
  4026e0:	jmp    QWORD PTR [rip+0x8f6e]        # 0x40b654
  4026e6:	nop
  4026e7:	nop
  4026e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4026f0:	push   rbx
  4026f1:	sub    rsp,0x30
  4026f5:	mov    rbx,rcx
  4026f8:	mov    rcx,QWORD PTR [rip+0x8321]        # 0x40aa20
  4026ff:	call   0x402ca0
  402704:	cmp    rax,0xffffffffffffffff
  402708:	mov    QWORD PTR [rsp+0x20],rax
  40270d:	je     0x402785
  40270f:	mov    ecx,0x8
  402714:	call   0x403cd0
  402719:	mov    rcx,QWORD PTR [rip+0x8300]        # 0x40aa20
  402720:	call   0x402ca0
  402725:	mov    rcx,QWORD PTR [rip+0x82fc]        # 0x40aa28
  40272c:	mov    QWORD PTR [rsp+0x20],rax
  402731:	call   0x402ca0
  402736:	lea    rdx,[rsp+0x20]
  40273b:	lea    r8,[rsp+0x28]
  402740:	mov    rcx,rbx
  402743:	mov    QWORD PTR [rsp+0x28],rax
  402748:	call   0x403d18
  40274d:	mov    rcx,QWORD PTR [rsp+0x20]
  402752:	mov    rbx,rax
  402755:	call   0x402cb0
  40275a:	mov    rcx,QWORD PTR [rsp+0x28]
  40275f:	mov    QWORD PTR [rip+0x82ba],rax        # 0x40aa20
  402766:	call   0x402cb0
  40276b:	mov    ecx,0x8
  402770:	mov    QWORD PTR [rip+0x82b1],rax        # 0x40aa28
  402777:	call   0x403cc0
  40277c:	mov    rax,rbx
  40277f:	add    rsp,0x30
  402783:	pop    rbx
  402784:	ret    
  402785:	mov    rax,QWORD PTR [rip+0x4674]        # 0x406e00
  40278c:	mov    rcx,rbx
  40278f:	call   QWORD PTR [rax]
  402791:	add    rsp,0x30
  402795:	pop    rbx
  402796:	ret    
  402797:	nop    WORD PTR [rax+rax*1+0x0]
  4027a0:	sub    rsp,0x28
  4027a4:	call   0x4026f0
  4027a9:	test   rax,rax
  4027ac:	sete   al
  4027af:	movzx  eax,al
  4027b2:	neg    eax
  4027b4:	add    rsp,0x28
  4027b8:	ret    
  4027b9:	nop
  4027ba:	nop
  4027bb:	nop
  4027bc:	nop
  4027bd:	nop
  4027be:	nop
  4027bf:	nop
  4027c0:	sub    rsp,0x28
  4027c4:	mov    rax,QWORD PTR [rip+0x2845]        # 0x405010
  4027cb:	mov    rax,QWORD PTR [rax]
  4027ce:	test   rax,rax
  4027d1:	je     0x4027f0
  4027d3:	call   rax
  4027d5:	mov    rax,QWORD PTR [rip+0x2834]        # 0x405010
  4027dc:	lea    rdx,[rax+0x8]
  4027e0:	mov    rax,QWORD PTR [rax+0x8]
  4027e4:	mov    QWORD PTR [rip+0x2825],rdx        # 0x405010
  4027eb:	test   rax,rax
  4027ee:	jne    0x4027d3
  4027f0:	add    rsp,0x28
  4027f4:	ret    
  4027f5:	nop
  4027f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402800:	push   rsi
  402801:	push   rbx
  402802:	sub    rsp,0x28
  402806:	mov    rsi,QWORD PTR [rip+0x4573]        # 0x406d80
  40280d:	mov    rax,QWORD PTR [rsi]
  402810:	cmp    eax,0xffffffff
  402813:	mov    ebx,eax
  402815:	je     0x402840
  402817:	test   ebx,ebx
  402819:	je     0x40282a
  40281b:	nop    DWORD PTR [rax+rax*1+0x0]
  402820:	mov    eax,ebx
  402822:	call   QWORD PTR [rsi+rax*8]
  402825:	sub    ebx,0x1
  402828:	jne    0x402820
  40282a:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x4027c0
  402831:	add    rsp,0x28
  402835:	pop    rbx
  402836:	pop    rsi
  402837:	jmp    0x4027a0
  40283c:	nop    DWORD PTR [rax+0x0]
  402840:	xor    ebx,ebx
  402842:	jmp    0x402846
  402844:	mov    ebx,eax
  402846:	lea    edx,[rbx+0x1]
  402849:	cmp    QWORD PTR [rsi+rdx*8],0x0
  40284e:	mov    rax,rdx
  402851:	jne    0x402844
  402853:	jmp    0x402817
  402855:	nop
  402856:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402860:	mov    eax,DWORD PTR [rip+0x77ea]        # 0x40a050
  402866:	test   eax,eax
  402868:	je     0x402870
  40286a:	repz ret 
  40286c:	nop    DWORD PTR [rax+0x0]
  402870:	mov    DWORD PTR [rip+0x77d6],0x1        # 0x40a050
  40287a:	jmp    0x402800
  40287c:	nop
  40287d:	nop
  40287e:	nop
  40287f:	nop
  402880:	mov    rax,QWORD PTR [rip+0x8ee5]        # 0x40b76c
  402887:	rex.W jmp rax
  40288a:	nop
  40288b:	nop
  40288c:	nop
  40288d:	nop
  40288e:	nop
  40288f:	nop
  402890:	xor    eax,eax
  402892:	ret    
  402893:	nop
  402894:	nop
  402895:	nop
  402896:	nop
  402897:	nop
  402898:	nop
  402899:	nop
  40289a:	nop
  40289b:	nop
  40289c:	nop
  40289d:	nop
  40289e:	nop
  40289f:	nop
  4028a0:	push   r12
  4028a2:	push   rbp
  4028a3:	push   rdi
  4028a4:	push   rsi
  4028a5:	push   rbx
  4028a6:	sub    rsp,0x40
  4028aa:	mov    rbx,QWORD PTR [rip+0x27bf]        # 0x405070
  4028b1:	movabs rax,0x2b992ddfa232
  4028bb:	mov    QWORD PTR [rsp+0x20],0x0
  4028c4:	cmp    rbx,rax
  4028c7:	je     0x4028e0
  4028c9:	not    rbx
  4028cc:	mov    QWORD PTR [rip+0x27ad],rbx        # 0x405080
  4028d3:	add    rsp,0x40
  4028d7:	pop    rbx
  4028d8:	pop    rsi
  4028d9:	pop    rdi
  4028da:	pop    rbp
  4028db:	pop    r12
  4028dd:	ret    
  4028de:	xchg   ax,ax
  4028e0:	lea    rcx,[rsp+0x20]
  4028e5:	call   QWORD PTR [rip+0x8dd1]        # 0x40b6bc
  4028eb:	mov    r12,QWORD PTR [rsp+0x20]
  4028f0:	call   QWORD PTR [rip+0x8da6]        # 0x40b69c
  4028f6:	mov    ebp,eax
  4028f8:	call   QWORD PTR [rip+0x8da6]        # 0x40b6a4
  4028fe:	mov    edi,eax
  402900:	call   QWORD PTR [rip+0x8dbe]        # 0x40b6c4
  402906:	lea    rcx,[rsp+0x30]
  40290b:	mov    esi,eax
  40290d:	call   QWORD PTR [rip+0x8dc9]        # 0x40b6dc
  402913:	xor    r12,QWORD PTR [rsp+0x30]
  402918:	mov    edx,edi
  40291a:	movabs rax,0xffffffffffff
  402924:	xor    rbp,r12
  402927:	mov    rdi,rbp
  40292a:	xor    rdi,rdx
  40292d:	mov    edx,esi
  40292f:	xor    rdi,rdx
  402932:	mov    rsi,rdi
  402935:	and    rsi,rax
  402938:	cmp    rsi,rbx
  40293b:	je     0x402960
  40293d:	mov    rax,rsi
  402940:	not    rax
  402943:	mov    QWORD PTR [rip+0x2726],rsi        # 0x405070
  40294a:	mov    QWORD PTR [rip+0x272f],rax        # 0x405080
  402951:	add    rsp,0x40
  402955:	pop    rbx
  402956:	pop    rsi
  402957:	pop    rdi
  402958:	pop    rbp
  402959:	pop    r12
  40295b:	ret    
  40295c:	nop    DWORD PTR [rax+0x0]
  402960:	movabs rax,0xffffd466d2205dcc
  40296a:	movabs rsi,0x2b992ddfa233
  402974:	jmp    0x402943
  402976:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402980:	push   rbp
  402981:	push   rsi
  402982:	push   rbx
  402983:	mov    rbp,rsp
  402986:	sub    rsp,0x70
  40298a:	mov    rsi,rcx
  40298d:	lea    rcx,[rip+0x76ec]        # 0x40a080
  402994:	call   QWORD PTR [rip+0x8d52]        # 0x40b6ec
  40299a:	mov    rbx,QWORD PTR [rip+0x77d7]        # 0x40a178
  4029a1:	xor    r8d,r8d
  4029a4:	lea    rdx,[rbp-0x28]
  4029a8:	mov    rcx,rbx
  4029ab:	call   QWORD PTR [rip+0x8d43]        # 0x40b6f4
  4029b1:	test   rax,rax
  4029b4:	mov    r9,rax
  4029b7:	je     0x402a60
  4029bd:	lea    rax,[rbp-0x20]
  4029c1:	mov    QWORD PTR [rsp+0x38],0x0
  4029ca:	mov    r8,rbx
  4029cd:	mov    rdx,QWORD PTR [rbp-0x28]
  4029d1:	xor    ecx,ecx
  4029d3:	mov    QWORD PTR [rsp+0x30],rax
  4029d8:	lea    rax,[rbp-0x18]
  4029dc:	mov    QWORD PTR [rsp+0x28],rax
  4029e1:	lea    rax,[rip+0x7698]        # 0x40a080
  4029e8:	mov    QWORD PTR [rsp+0x20],rax
  4029ed:	call   QWORD PTR [rip+0x8d09]        # 0x40b6fc
  4029f3:	mov    rax,QWORD PTR [rip+0x777e]        # 0x40a178
  4029fa:	xor    ecx,ecx
  4029fc:	mov    QWORD PTR [rip+0x76fd],rsi        # 0x40a100
  402a03:	mov    DWORD PTR [rip+0x7b73],0xc0000409        # 0x40a580
  402a0d:	mov    DWORD PTR [rip+0x7b6d],0x1        # 0x40a584
  402a17:	mov    QWORD PTR [rip+0x7b72],rax        # 0x40a590
  402a1e:	mov    rax,QWORD PTR [rip+0x264b]        # 0x405070
  402a25:	mov    QWORD PTR [rbp-0x10],rax
  402a29:	mov    rax,QWORD PTR [rip+0x2650]        # 0x405080
  402a30:	mov    QWORD PTR [rbp-0x8],rax
  402a34:	call   QWORD PTR [rip+0x8cca]        # 0x40b704
  402a3a:	lea    rcx,[rip+0x409f]        # 0x406ae0
  402a41:	call   QWORD PTR [rip+0x8cdd]        # 0x40b724
  402a47:	call   QWORD PTR [rip+0x8c47]        # 0x40b694
  402a4d:	mov    edx,0xc0000409
  402a52:	mov    rcx,rax
  402a55:	call   QWORD PTR [rip+0x8cb9]        # 0x40b714
  402a5b:	call   0x403cb8
  402a60:	mov    rax,QWORD PTR [rbp+0x18]
  402a64:	mov    QWORD PTR [rip+0x770d],rax        # 0x40a178
  402a6b:	lea    rax,[rbp+0x8]
  402a6f:	mov    QWORD PTR [rip+0x76a2],rax        # 0x40a118
  402a76:	jmp    0x4029f3
  402a7b:	nop
  402a7c:	nop
  402a7d:	nop
  402a7e:	nop
  402a7f:	nop
  402a80:	sub    rsp,0x28
  402a84:	test   edx,edx
  402a86:	je     0x402aa0
  402a88:	cmp    edx,0x3
  402a8b:	je     0x402aa0
  402a8d:	mov    eax,0x1
  402a92:	add    rsp,0x28
  402a96:	ret    
  402a97:	nop    WORD PTR [rax+rax*1+0x0]
  402aa0:	call   0x403790
  402aa5:	mov    eax,0x1
  402aaa:	add    rsp,0x28
  402aae:	ret    
  402aaf:	nop
  402ab0:	push   rsi
  402ab1:	push   rbx
  402ab2:	sub    rsp,0x28
  402ab6:	mov    rax,QWORD PTR [rip+0x42a3]        # 0x406d60
  402abd:	cmp    DWORD PTR [rax],0x2
  402ac0:	je     0x402ac8
  402ac2:	mov    DWORD PTR [rax],0x2
  402ac8:	cmp    edx,0x2
  402acb:	je     0x402ae0
  402acd:	cmp    edx,0x1
  402ad0:	je     0x402b12
  402ad2:	mov    eax,0x1
  402ad7:	add    rsp,0x28
  402adb:	pop    rbx
  402adc:	pop    rsi
  402add:	ret    
  402ade:	xchg   ax,ax
  402ae0:	lea    rbx,[rip+0xa579]        # 0x40d060
  402ae7:	lea    rsi,[rip+0xa572]        # 0x40d060
  402aee:	cmp    rbx,rsi
  402af1:	je     0x402ad2
  402af3:	mov    rax,QWORD PTR [rbx]
  402af6:	test   rax,rax
  402af9:	je     0x402afd
  402afb:	call   rax
  402afd:	add    rbx,0x8
  402b01:	cmp    rbx,rsi
  402b04:	jne    0x402af3
  402b06:	mov    eax,0x1
  402b0b:	add    rsp,0x28
  402b0f:	pop    rbx
  402b10:	pop    rsi
  402b11:	ret    
  402b12:	call   0x403790
  402b17:	jmp    0x402ad2
  402b19:	nop    DWORD PTR [rax+0x0]
  402b20:	xor    eax,eax
  402b22:	ret    
  402b23:	nop
  402b24:	nop
  402b25:	nop
  402b26:	nop
  402b27:	nop
  402b28:	nop
  402b29:	nop
  402b2a:	nop
  402b2b:	nop
  402b2c:	nop
  402b2d:	nop
  402b2e:	nop
  402b2f:	nop
  402b30:	sub    rsp,0x58
  402b34:	mov    rax,QWORD PTR [rip+0x7b25]        # 0x40a660
  402b3b:	test   rax,rax
  402b3e:	je     0x402b6c
  402b40:	movsd  xmm0,QWORD PTR [rsp+0x80]
  402b49:	mov    DWORD PTR [rsp+0x20],ecx
  402b4d:	lea    rcx,[rsp+0x20]
  402b52:	mov    QWORD PTR [rsp+0x28],rdx
  402b57:	movsd  QWORD PTR [rsp+0x30],xmm2
  402b5d:	movsd  QWORD PTR [rsp+0x38],xmm3
  402b63:	movsd  QWORD PTR [rsp+0x40],xmm0
  402b69:	call   rax
  402b6b:	nop
  402b6c:	add    rsp,0x58
  402b70:	ret    
  402b71:	nop    DWORD PTR [rax+rax*1+0x0]
  402b76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402b80:	mov    QWORD PTR [rip+0x7ad9],rcx        # 0x40a660
  402b87:	jmp    0x403cf0
  402b8c:	nop    DWORD PTR [rax+0x0]
  402b90:	push   rsi
  402b91:	push   rbx
  402b92:	sub    rsp,0x78
  402b96:	movaps XMMWORD PTR [rsp+0x40],xmm6
  402b9b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  402ba0:	movaps XMMWORD PTR [rsp+0x60],xmm8
  402ba6:	cmp    DWORD PTR [rcx],0x6
  402ba9:	ja     0x402c80
  402baf:	mov    edx,DWORD PTR [rcx]
  402bb1:	lea    rax,[rip+0x406c]        # 0x406c24
  402bb8:	movsxd rdx,DWORD PTR [rax+rdx*4]
  402bbc:	add    rax,rdx
  402bbf:	jmp    rax
  402bc1:	lea    rbx,[rip+0x3f38]        # 0x406b00
  402bc8:	nop    DWORD PTR [rax+rax*1+0x0]
  402bd0:	movsd  xmm8,QWORD PTR [rcx+0x20]
  402bd6:	mov    rsi,QWORD PTR [rcx+0x8]
  402bda:	movsd  xmm7,QWORD PTR [rcx+0x18]
  402bdf:	movsd  xmm6,QWORD PTR [rcx+0x10]
  402be4:	call   0x403d08
  402be9:	movsd  QWORD PTR [rsp+0x30],xmm8
  402bf0:	lea    rcx,[rax+0x60]
  402bf4:	lea    rdx,[rip+0x3ffd]        # 0x406bf8
  402bfb:	movsd  QWORD PTR [rsp+0x28],xmm7
  402c01:	mov    r9,rsi
  402c04:	mov    r8,rbx
  402c07:	movsd  QWORD PTR [rsp+0x20],xmm6
  402c0d:	call   0x403ca0
  402c12:	nop
  402c13:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  402c18:	xor    eax,eax
  402c1a:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  402c1f:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  402c25:	add    rsp,0x78
  402c29:	pop    rbx
  402c2a:	pop    rsi
  402c2b:	ret    
  402c2c:	nop    DWORD PTR [rax+0x0]
  402c30:	lea    rbx,[rip+0x3ee8]        # 0x406b1f
  402c37:	jmp    0x402bd0
  402c39:	nop    DWORD PTR [rax+0x0]
  402c40:	lea    rbx,[rip+0x3ef9]        # 0x406b40
  402c47:	jmp    0x402bd0
  402c49:	nop    DWORD PTR [rax+0x0]
  402c50:	lea    rbx,[rip+0x3f59]        # 0x406bb0
  402c57:	jmp    0x402bd0
  402c5c:	nop    DWORD PTR [rax+0x0]
  402c60:	lea    rbx,[rip+0x3f21]        # 0x406b88
  402c67:	jmp    0x402bd0
  402c6c:	nop    DWORD PTR [rax+0x0]
  402c70:	lea    rbx,[rip+0x3ee9]        # 0x406b60
  402c77:	jmp    0x402bd0
  402c7c:	nop    DWORD PTR [rax+0x0]
  402c80:	lea    rbx,[rip+0x3f5f]        # 0x406be6
  402c87:	jmp    0x402bd0
  402c8c:	nop
  402c8d:	nop
  402c8e:	nop
  402c8f:	nop
  402c90:	fninit 
  402c92:	ret    
  402c93:	nop
  402c94:	nop
  402c95:	nop
  402c96:	nop
  402c97:	nop
  402c98:	nop
  402c99:	nop
  402c9a:	nop
  402c9b:	nop
  402c9c:	nop
  402c9d:	nop
  402c9e:	nop
  402c9f:	nop
  402ca0:	mov    rax,rcx
  402ca3:	ret    
  402ca4:	xchg   ax,ax
  402ca6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402cb0:	mov    rax,rcx
  402cb3:	ret    
  402cb4:	nop
  402cb5:	nop
  402cb6:	nop
  402cb7:	nop
  402cb8:	nop
  402cb9:	nop
  402cba:	nop
  402cbb:	nop
  402cbc:	nop
  402cbd:	nop
  402cbe:	nop
  402cbf:	nop
  402cc0:	push   rsi
  402cc1:	push   rbx
  402cc2:	sub    rsp,0x38
  402cc6:	lea    rax,[rsp+0x58]
  402ccb:	mov    rbx,rcx
  402cce:	mov    QWORD PTR [rsp+0x58],rdx
  402cd3:	mov    QWORD PTR [rsp+0x60],r8
  402cd8:	mov    QWORD PTR [rsp+0x68],r9
  402cdd:	mov    QWORD PTR [rsp+0x28],rax
  402ce2:	call   0x403d08
  402ce7:	lea    rcx,[rip+0x3f52]        # 0x406c40
  402cee:	lea    r9,[rax+0x60]
  402cf2:	mov    r8d,0x1b
  402cf8:	mov    edx,0x1
  402cfd:	call   0x403c90
  402d02:	mov    rsi,QWORD PTR [rsp+0x28]
  402d07:	call   0x403d08
  402d0c:	lea    rcx,[rax+0x60]
  402d10:	mov    rdx,rbx
  402d13:	mov    r8,rsi
  402d16:	call   0x403c50
  402d1b:	call   0x403cb8
  402d20:	nop
  402d21:	nop    DWORD PTR [rax+rax*1+0x0]
  402d26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402d30:	push   r13
  402d32:	push   r12
  402d34:	push   rbp
  402d35:	push   rdi
  402d36:	push   rsi
  402d37:	push   rbx
  402d38:	sub    rsp,0x58
  402d3c:	movsxd rbp,DWORD PTR [rip+0x7941]        # 0x40a684
  402d43:	mov    rbx,rcx
  402d46:	mov    rsi,rdx
  402d49:	mov    rdi,r8
  402d4c:	test   ebp,ebp
  402d4e:	jle    0x402e4a
  402d54:	mov    rax,QWORD PTR [rip+0x792d]        # 0x40a688
  402d5b:	xor    r9d,r9d
  402d5e:	add    rax,0x8
  402d62:	mov    r10,QWORD PTR [rax]
  402d65:	cmp    rbx,r10
  402d68:	jb     0x402d7e
  402d6a:	mov    rdx,QWORD PTR [rax+0x8]
  402d6e:	mov    r11d,DWORD PTR [rdx+0x8]
  402d72:	add    r10,r11
  402d75:	cmp    rbx,r10
  402d78:	jb     0x402e30
  402d7e:	add    r9d,0x1
  402d82:	add    rax,0x18
  402d86:	cmp    r9d,ebp
  402d89:	jne    0x402d62
  402d8b:	mov    rcx,rbx
  402d8e:	call   0x4039a0
  402d93:	test   rax,rax
  402d96:	mov    r12,rax
  402d99:	je     0x402e82
  402d9f:	lea    rbp,[rbp+rbp*2+0x0]
  402da4:	shl    rbp,0x3
  402da8:	mov    r13,rbp
  402dab:	add    r13,QWORD PTR [rip+0x78d6]        # 0x40a688
  402db2:	mov    QWORD PTR [r13+0x10],rax
  402db6:	mov    DWORD PTR [r13+0x0],0x0
  402dbe:	call   0x403ac0
  402dc3:	mov    edx,DWORD PTR [r12+0xc]
  402dc8:	mov    r8d,0x30
  402dce:	add    rax,rdx
  402dd1:	lea    rdx,[rsp+0x20]
  402dd6:	mov    QWORD PTR [r13+0x8],rax
  402dda:	mov    rax,QWORD PTR [rip+0x78a7]        # 0x40a688
  402de1:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  402de6:	call   QWORD PTR [rip+0x8948]        # 0x40b734
  402dec:	test   rax,rax
  402def:	je     0x402e65
  402df1:	mov    eax,DWORD PTR [rsp+0x44]
  402df5:	lea    edx,[rax-0x4]
  402df8:	and    edx,0xfffffffb
  402dfb:	je     0x402e29
  402dfd:	sub    eax,0x40
  402e00:	and    eax,0xffffffbf
  402e03:	je     0x402e29
  402e05:	mov    r9,rbp
  402e08:	add    r9,QWORD PTR [rip+0x7879]        # 0x40a688
  402e0f:	mov    r8d,0x40
  402e15:	mov    rdx,QWORD PTR [rsp+0x38]
  402e1a:	mov    rcx,QWORD PTR [rsp+0x20]
  402e1f:	call   QWORD PTR [rip+0x8907]        # 0x40b72c
  402e25:	test   eax,eax
  402e27:	je     0x402e51
  402e29:	add    DWORD PTR [rip+0x7854],0x1        # 0x40a684
  402e30:	mov    r8,rdi
  402e33:	mov    rdx,rsi
  402e36:	mov    rcx,rbx
  402e39:	add    rsp,0x58
  402e3d:	pop    rbx
  402e3e:	pop    rsi
  402e3f:	pop    rdi
  402e40:	pop    rbp
  402e41:	pop    r12
  402e43:	pop    r13
  402e45:	jmp    0x403c80
  402e4a:	xor    ebp,ebp
  402e4c:	jmp    0x402d8b
  402e51:	call   QWORD PTR [rip+0x8855]        # 0x40b6ac
  402e57:	lea    rcx,[rip+0x3e5a]        # 0x406cb8
  402e5e:	mov    edx,eax
  402e60:	call   0x402cc0
  402e65:	mov    rax,QWORD PTR [rip+0x781c]        # 0x40a688
  402e6c:	mov    edx,DWORD PTR [r12+0x8]
  402e71:	lea    rcx,[rip+0x3e08]        # 0x406c80
  402e78:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  402e7d:	call   0x402cc0
  402e82:	lea    rcx,[rip+0x3dd7]        # 0x406c60
  402e89:	mov    rdx,rbx
  402e8c:	call   0x402cc0
  402e91:	nop
  402e92:	nop    DWORD PTR [rax+0x0]
  402e96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402ea0:	push   rbp
  402ea1:	push   r14
  402ea3:	push   r13
  402ea5:	push   r12
  402ea7:	push   rdi
  402ea8:	push   rsi
  402ea9:	push   rbx
  402eaa:	mov    rbp,rsp
  402ead:	sub    rsp,0x60
  402eb1:	mov    ebx,DWORD PTR [rip+0x77c9]        # 0x40a680
  402eb7:	test   ebx,ebx
  402eb9:	je     0x402ed0
  402ebb:	mov    rsp,rbp
  402ebe:	pop    rbx
  402ebf:	pop    rsi
  402ec0:	pop    rdi
  402ec1:	pop    r12
  402ec3:	pop    r13
  402ec5:	pop    r14
  402ec7:	pop    rbp
  402ec8:	ret    
  402ec9:	nop    DWORD PTR [rax+0x0]
  402ed0:	mov    DWORD PTR [rip+0x77a6],0x1        # 0x40a680
  402eda:	call   0x4039f0
  402edf:	cdqe   
  402ee1:	lea    rax,[rax+rax*2]
  402ee5:	lea    rax,[rax*8+0x1e]
  402eed:	and    rax,0xfffffffffffffff0
  402ef1:	call   0x403c10
  402ef6:	mov    rsi,QWORD PTR [rip+0x3e93]        # 0x406d90
  402efd:	mov    rbx,QWORD PTR [rip+0x3e9c]        # 0x406da0
  402f04:	sub    rsp,rax
  402f07:	mov    DWORD PTR [rip+0x7773],0x0        # 0x40a684
  402f11:	lea    rax,[rsp+0x20]
  402f16:	mov    QWORD PTR [rip+0x776b],rax        # 0x40a688
  402f1d:	mov    rax,rsi
  402f20:	sub    rax,rbx
  402f23:	cmp    rax,0x7
  402f27:	jle    0x402ebb
  402f29:	cmp    rax,0xb
  402f2d:	jle    0x402f55
  402f2f:	mov    r11d,DWORD PTR [rbx]
  402f32:	test   r11d,r11d
  402f35:	jne    0x403080
  402f3b:	mov    r10d,DWORD PTR [rbx+0x4]
  402f3f:	test   r10d,r10d
  402f42:	jne    0x403080
  402f48:	mov    r9d,DWORD PTR [rbx+0x8]
  402f4c:	test   r9d,r9d
  402f4f:	jne    0x402f6c
  402f51:	add    rbx,0xc
  402f55:	mov    r8d,DWORD PTR [rbx]
  402f58:	test   r8d,r8d
  402f5b:	jne    0x403080
  402f61:	mov    ecx,DWORD PTR [rbx+0x4]
  402f64:	test   ecx,ecx
  402f66:	jne    0x403080
  402f6c:	mov    edx,DWORD PTR [rbx+0x8]
  402f6f:	cmp    edx,0x1
  402f72:	jne    0x40318c
  402f78:	add    rbx,0xc
  402f7c:	cmp    rbx,rsi
  402f7f:	jae    0x402ebb
  402f85:	mov    r12,QWORD PTR [rip+0x3e34]        # 0x406dc0
  402f8c:	lea    r13,[rbp-0x30]
  402f90:	movabs r14,0xffffffff00000000
  402f9a:	mov    ecx,DWORD PTR [rbx+0x4]
  402f9d:	mov    eax,DWORD PTR [rbx]
  402f9f:	movzx  edx,BYTE PTR [rbx+0x8]
  402fa3:	add    rax,r12
  402fa6:	add    rcx,r12
  402fa9:	cmp    edx,0x10
  402fac:	mov    r8,QWORD PTR [rax]
  402faf:	je     0x4030f6
  402fb5:	jbe    0x4030bd
  402fbb:	cmp    edx,0x20
  402fbe:	je     0x40313f
  402fc4:	cmp    edx,0x40
  402fc7:	jne    0x40312b
  402fcd:	sub    r8,rax
  402fd0:	mov    rdx,r13
  402fd3:	mov    rdi,r13
  402fd6:	mov    rax,r8
  402fd9:	add    rax,QWORD PTR [rcx]
  402fdc:	mov    r8d,0x8
  402fe2:	mov    QWORD PTR [rbp-0x30],rax
  402fe6:	call   0x402d30
  402feb:	add    rbx,0xc
  402fef:	cmp    rbx,rsi
  402ff2:	jb     0x402f9a
  402ff4:	mov    eax,DWORD PTR [rip+0x768a]        # 0x40a684
  402ffa:	xor    ebx,ebx
  402ffc:	xor    esi,esi
  402ffe:	test   eax,eax
  403000:	jle    0x402ebb
  403006:	mov    r14,QWORD PTR [rip+0x8727]        # 0x40b734
  40300d:	lea    r13,[rbp-0x34]
  403011:	mov    r12,QWORD PTR [rip+0x8714]        # 0x40b72c
  403018:	jmp    0x403033
  40301a:	nop    WORD PTR [rax+rax*1+0x0]
  403020:	add    esi,0x1
  403023:	add    rbx,0x18
  403027:	cmp    esi,DWORD PTR [rip+0x7657]        # 0x40a684
  40302d:	jge    0x402ebb
  403033:	mov    rax,rbx
  403036:	add    rax,QWORD PTR [rip+0x764b]        # 0x40a688
  40303d:	mov    edx,DWORD PTR [rax]
  40303f:	test   edx,edx
  403041:	je     0x403020
  403043:	mov    rcx,QWORD PTR [rax+0x8]
  403047:	mov    r8d,0x30
  40304d:	mov    rdx,rdi
  403050:	call   r14
  403053:	test   rax,rax
  403056:	je     0x40316e
  40305c:	mov    rax,QWORD PTR [rip+0x7625]        # 0x40a688
  403063:	mov    r9,r13
  403066:	mov    rdx,QWORD PTR [rbp-0x18]
  40306a:	mov    rcx,QWORD PTR [rbp-0x30]
  40306e:	mov    r8d,DWORD PTR [rax+rbx*1]
  403072:	call   r12
  403075:	jmp    0x403020
  403077:	nop    WORD PTR [rax+rax*1+0x0]
  403080:	cmp    rbx,rsi
  403083:	jae    0x402ebb
  403089:	mov    r12,QWORD PTR [rip+0x3d30]        # 0x406dc0
  403090:	lea    rdi,[rbp-0x30]
  403094:	mov    ecx,DWORD PTR [rbx+0x4]
  403097:	mov    eax,DWORD PTR [rbx]
  403099:	mov    r8d,0x4
  40309f:	mov    rdx,rdi
  4030a2:	add    rbx,0x8
  4030a6:	add    rcx,r12
  4030a9:	add    eax,DWORD PTR [rcx]
  4030ab:	mov    DWORD PTR [rbp-0x30],eax
  4030ae:	call   0x402d30
  4030b3:	cmp    rbx,rsi
  4030b6:	jb     0x403094
  4030b8:	jmp    0x402ff4
  4030bd:	cmp    edx,0x8
  4030c0:	jne    0x40312b
  4030c2:	movzx  edx,BYTE PTR [rcx]
  4030c5:	mov    rdi,r13
  4030c8:	mov    r10,rdx
  4030cb:	or     r10,0xffffffffffffff00
  4030d2:	test   dl,dl
  4030d4:	cmovs  rdx,r10
  4030d8:	sub    rdx,rax
  4030db:	lea    rax,[r8+rdx*1]
  4030df:	mov    r8d,0x1
  4030e5:	mov    rdx,r13
  4030e8:	mov    QWORD PTR [rbp-0x30],rax
  4030ec:	call   0x402d30
  4030f1:	jmp    0x402feb
  4030f6:	movzx  edx,WORD PTR [rcx]
  4030f9:	mov    rdi,r13
  4030fc:	mov    r10,rdx
  4030ff:	or     r10,0xffffffffffff0000
  403106:	test   dx,dx
  403109:	cmovs  rdx,r10
  40310d:	sub    rdx,rax
  403110:	lea    rax,[r8+rdx*1]
  403114:	mov    r8d,0x2
  40311a:	mov    rdx,r13
  40311d:	mov    QWORD PTR [rbp-0x30],rax
  403121:	call   0x402d30
  403126:	jmp    0x402feb
  40312b:	lea    rcx,[rip+0x3be6]        # 0x406d18
  403132:	mov    QWORD PTR [rbp-0x30],0x0
  40313a:	call   0x402cc0
  40313f:	mov    edx,DWORD PTR [rcx]
  403141:	mov    rdi,r13
  403144:	mov    r10,rdx
  403147:	or     r10,r14
  40314a:	test   edx,edx
  40314c:	cmovs  rdx,r10
  403150:	sub    rdx,rax
  403153:	lea    rax,[r8+rdx*1]
  403157:	mov    r8d,0x4
  40315d:	mov    rdx,r13
  403160:	mov    QWORD PTR [rbp-0x30],rax
  403164:	call   0x402d30
  403169:	jmp    0x402feb
  40316e:	add    rbx,QWORD PTR [rip+0x7513]        # 0x40a688
  403175:	lea    rcx,[rip+0x3b04]        # 0x406c80
  40317c:	mov    rax,QWORD PTR [rbx+0x10]
  403180:	mov    r8,QWORD PTR [rbx+0x8]
  403184:	mov    edx,DWORD PTR [rax+0x8]
  403187:	call   0x402cc0
  40318c:	lea    rcx,[rip+0x3b4d]        # 0x406ce0
  403193:	call   0x402cc0
  403198:	nop
  403199:	nop
  40319a:	nop
  40319b:	nop
  40319c:	nop
  40319d:	nop
  40319e:	nop
  40319f:	nop
  4031a0:	sub    rsp,0x28
  4031a4:	mov    eax,DWORD PTR [rcx]
  4031a6:	cmp    eax,0xc0000091
  4031ab:	ja     0x403210
  4031ad:	cmp    eax,0xc000008d
  4031b2:	jae    0x40322f
  4031b4:	cmp    eax,0xc0000008
  4031b9:	je     0x4032d0
  4031bf:	ja     0x4032a0
  4031c5:	cmp    eax,0x80000002
  4031ca:	je     0x4032d0
  4031d0:	cmp    eax,0xc0000005
  4031d5:	jne    0x4032ae
  4031db:	xor    edx,edx
  4031dd:	mov    ecx,0xb
  4031e2:	call   0x403c78
  4031e7:	cmp    rax,0x1
  4031eb:	je     0x403330
  4031f1:	test   rax,rax
  4031f4:	je     0x403310
  4031fa:	mov    ecx,0xb
  4031ff:	call   rax
  403201:	xor    eax,eax
  403203:	add    rsp,0x28
  403207:	ret    
  403208:	nop    DWORD PTR [rax+rax*1+0x0]
  403210:	cmp    eax,0xc0000094
  403215:	je     0x4032e0
  40321b:	ja     0x403260
  40321d:	cmp    eax,0xc0000092
  403222:	je     0x4032d0
  403228:	cmp    eax,0xc0000093
  40322d:	jne    0x4032ae
  40322f:	xor    edx,edx
  403231:	mov    ecx,0x8
  403236:	call   0x403c78
  40323b:	cmp    rax,0x1
  40323f:	mov    rdx,rax
  403242:	je     0x4032b8
  403244:	test   rdx,rdx
  403247:	mov    eax,0x1
  40324c:	je     0x403203
  40324e:	mov    ecx,0x8
  403253:	call   rdx
  403255:	xor    eax,eax
  403257:	add    rsp,0x28
  40325b:	ret    
  40325c:	nop    DWORD PTR [rax+0x0]
  403260:	cmp    eax,0xc0000095
  403265:	je     0x4032d0
  403267:	cmp    eax,0xc0000096
  40326c:	jne    0x4032ae
  40326e:	xor    edx,edx
  403270:	mov    ecx,0x4
  403275:	call   0x403c78
  40327a:	cmp    rax,0x1
  40327e:	je     0x40331a
  403284:	test   rax,rax
  403287:	je     0x403310
  40328d:	mov    ecx,0x4
  403292:	call   rax
  403294:	xor    eax,eax
  403296:	jmp    0x403203
  40329b:	nop    DWORD PTR [rax+rax*1+0x0]
  4032a0:	cmp    eax,0xc000001d
  4032a5:	je     0x40326e
  4032a7:	cmp    eax,0xc000008c
  4032ac:	je     0x4032d0
  4032ae:	mov    eax,0x1
  4032b3:	add    rsp,0x28
  4032b7:	ret    
  4032b8:	mov    edx,0x1
  4032bd:	mov    ecx,0x8
  4032c2:	call   0x403c78
  4032c7:	call   0x402c90
  4032cc:	nop    DWORD PTR [rax+0x0]
  4032d0:	xor    eax,eax
  4032d2:	add    rsp,0x28
  4032d6:	ret    
  4032d7:	nop    WORD PTR [rax+rax*1+0x0]
  4032e0:	xor    edx,edx
  4032e2:	mov    ecx,0x8
  4032e7:	call   0x403c78
  4032ec:	cmp    rax,0x1
  4032f0:	mov    rdx,rax
  4032f3:	jne    0x403244
  4032f9:	mov    edx,0x1
  4032fe:	mov    ecx,0x8
  403303:	call   0x403c78
  403308:	xor    eax,eax
  40330a:	jmp    0x403203
  40330f:	nop
  403310:	mov    eax,0x4
  403315:	add    rsp,0x28
  403319:	ret    
  40331a:	mov    edx,0x1
  40331f:	mov    ecx,0x4
  403324:	call   0x403c78
  403329:	xor    eax,eax
  40332b:	jmp    0x403203
  403330:	mov    edx,0x1
  403335:	mov    ecx,0xb
  40333a:	call   0x403c78
  40333f:	xor    eax,eax
  403341:	jmp    0x403203
  403346:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403350:	push   r12
  403352:	push   rbp
  403353:	push   rdi
  403354:	push   rsi
  403355:	push   rbx
  403356:	sub    rsp,0x20
  40335a:	call   0x403ac0
  40335f:	mov    rbp,rax
  403362:	mov    eax,DWORD PTR [rip+0x7360]        # 0x40a6c8
  403368:	test   eax,eax
  40336a:	jne    0x403391
  40336c:	test   rbp,rbp
  40336f:	je     0x403391
  403371:	lea    rcx,[rip+0x39d8]        # 0x406d50
  403378:	mov    DWORD PTR [rip+0x7346],0x1        # 0x40a6c8
  403382:	call   0x403900
  403387:	test   rax,rax
  40338a:	je     0x4033a0
  40338c:	mov    eax,0x1
  403391:	add    rsp,0x20
  403395:	pop    rbx
  403396:	pop    rsi
  403397:	pop    rdi
  403398:	pop    rbp
  403399:	pop    r12
  40339b:	ret    
  40339c:	nop    DWORD PTR [rax+0x0]
  4033a0:	lea    rbx,[rip+0x7459]        # 0x40a800
  4033a7:	mov    ecx,0x30
  4033ac:	lea    rdx,[rip+0x734d]        # 0x40a700
  4033b3:	lea    r12,[rip+0xfffffffffffffde6]        # 0x4031a0
  4033ba:	xor    esi,esi
  4033bc:	mov    rdi,rbx
  4033bf:	rep stos QWORD PTR es:[rdi],rax
  4033c2:	mov    rdi,rdx
  4033c5:	sub    r12,rbp
  4033c8:	mov    cl,0x20
  4033ca:	rep stos QWORD PTR es:[rdi],rax
  4033cd:	mov    rdi,rdx
  4033d0:	jmp    0x403400
  4033d2:	mov    BYTE PTR [rdi],0x9
  4033d5:	mov    DWORD PTR [rdi+0x4],r12d
  4033d9:	add    rsi,0x1
  4033dd:	mov    edx,DWORD PTR [rax+0xc]
  4033e0:	add    rbx,0xc
  4033e4:	mov    DWORD PTR [rbx-0xc],edx
  4033e7:	add    edx,DWORD PTR [rax+0x8]
  4033ea:	mov    rax,rdi
  4033ed:	sub    rax,rbp
  4033f0:	add    rdi,0x8
  4033f4:	mov    DWORD PTR [rbx-0x4],eax
  4033f7:	mov    DWORD PTR [rbx-0x8],edx
  4033fa:	cmp    rsi,0x20
  4033fe:	je     0x403435
  403400:	mov    rcx,rsi
  403403:	call   0x403a30
  403408:	test   rax,rax
  40340b:	jne    0x4033d2
  40340d:	test   rsi,rsi
  403410:	je     0x40338c
  403416:	mov    edx,esi
  403418:	nop    DWORD PTR [rax+rax*1+0x0]
  403420:	mov    r8,rbp
  403423:	lea    rcx,[rip+0x73d6]        # 0x40a800
  40342a:	call   QWORD PTR [rip+0x82b4]        # 0x40b6e4
  403430:	jmp    0x40338c
  403435:	mov    edx,0x20
  40343a:	jmp    0x403420
  40343c:	nop    DWORD PTR [rax+0x0]
  403440:	push   rbx
  403441:	sub    rsp,0x20
  403445:	mov    rdx,QWORD PTR [rcx]
  403448:	mov    eax,DWORD PTR [rdx]
  40344a:	mov    r8d,eax
  40344d:	and    r8d,0x20ffffff
  403454:	cmp    r8d,0x20474343
  40345b:	je     0x403560
  403461:	cmp    eax,0xc0000091
  403466:	mov    rbx,rcx
  403469:	ja     0x4034f0
  40346f:	cmp    eax,0xc000008d
  403474:	jae    0x403507
  40347a:	cmp    eax,0xc0000008
  40347f:	je     0x4034b3
  403481:	ja     0x4034c0
  403483:	cmp    eax,0x80000002
  403488:	je     0x4034b3
  40348a:	cmp    eax,0xc0000005
  40348f:	jne    0x4034d2
  403491:	xor    edx,edx
  403493:	mov    ecx,0xb
  403498:	call   0x403c78
  40349d:	cmp    rax,0x1
  4034a1:	je     0x4035d0
  4034a7:	test   rax,rax
  4034aa:	je     0x4034d2
  4034ac:	mov    ecx,0xb
  4034b1:	call   rax
  4034b3:	mov    eax,0xffffffff
  4034b8:	add    rsp,0x20
  4034bc:	pop    rbx
  4034bd:	ret    
  4034be:	xchg   ax,ax
  4034c0:	cmp    eax,0xc000001d
  4034c5:	je     0x403586
  4034cb:	cmp    eax,0xc000008c
  4034d0:	je     0x4034b3
  4034d2:	mov    rax,QWORD PTR [rip+0x71e7]        # 0x40a6c0
  4034d9:	test   rax,rax
  4034dc:	je     0x4034b8
  4034de:	mov    rcx,rbx
  4034e1:	add    rsp,0x20
  4034e5:	pop    rbx
  4034e6:	rex.W jmp rax
  4034e9:	nop    DWORD PTR [rax+0x0]
  4034f0:	cmp    eax,0xc0000094
  4034f5:	je     0x403532
  4034f7:	ja     0x403570
  4034f9:	cmp    eax,0xc0000092
  4034fe:	je     0x4034b3
  403500:	cmp    eax,0xc0000093
  403505:	jne    0x4034d2
  403507:	xor    edx,edx
  403509:	mov    ecx,0x8
  40350e:	call   0x403c78
  403513:	cmp    rax,0x1
  403517:	jne    0x403544
  403519:	mov    edx,0x1
  40351e:	mov    ecx,0x8
  403523:	call   0x403c78
  403528:	call   0x402c90
  40352d:	jmp    0x4034b3
  403532:	xor    edx,edx
  403534:	mov    ecx,0x8
  403539:	call   0x403c78
  40353e:	cmp    rax,0x1
  403542:	je     0x4035b2
  403544:	test   rax,rax
  403547:	je     0x4034d2
  403549:	mov    ecx,0x8
  40354e:	call   rax
  403550:	mov    eax,0xffffffff
  403555:	jmp    0x4034b8
  40355a:	nop    WORD PTR [rax+rax*1+0x0]
  403560:	test   BYTE PTR [rdx+0x4],0x1
  403564:	jne    0x403461
  40356a:	jmp    0x4034b3
  40356f:	nop
  403570:	cmp    eax,0xc0000095
  403575:	je     0x4034b3
  40357b:	cmp    eax,0xc0000096
  403580:	jne    0x4034d2
  403586:	xor    edx,edx
  403588:	mov    ecx,0x4
  40358d:	call   0x403c78
  403592:	cmp    rax,0x1
  403596:	je     0x4035e4
  403598:	test   rax,rax
  40359b:	je     0x4034d2
  4035a1:	mov    ecx,0x4
  4035a6:	call   rax
  4035a8:	mov    eax,0xffffffff
  4035ad:	jmp    0x4034b8
  4035b2:	mov    edx,0x1
  4035b7:	mov    ecx,0x8
  4035bc:	call   0x403c78
  4035c1:	jmp    0x4034b3
  4035c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4035d0:	mov    edx,0x1
  4035d5:	mov    ecx,0xb
  4035da:	call   0x403c78
  4035df:	jmp    0x4034b3
  4035e4:	mov    edx,0x1
  4035e9:	mov    ecx,0x4
  4035ee:	call   0x403c78
  4035f3:	jmp    0x4034b3
  4035f8:	nop
  4035f9:	nop
  4035fa:	nop
  4035fb:	nop
  4035fc:	nop
  4035fd:	nop
  4035fe:	nop
  4035ff:	nop
  403600:	push   rbp
  403601:	push   rdi
  403602:	push   rsi
  403603:	push   rbx
  403604:	sub    rsp,0x28
  403608:	lea    rcx,[rip+0x7391]        # 0x40a9a0
  40360f:	call   QWORD PTR [rip+0x8077]        # 0x40b68c
  403615:	mov    rbx,QWORD PTR [rip+0x7364]        # 0x40a980
  40361c:	test   rbx,rbx
  40361f:	je     0x403654
  403621:	mov    rbp,QWORD PTR [rip+0x80f4]        # 0x40b71c
  403628:	mov    rdi,QWORD PTR [rip+0x807d]        # 0x40b6ac
  40362f:	nop
  403630:	mov    ecx,DWORD PTR [rbx]
  403632:	call   rbp
  403634:	mov    rsi,rax
  403637:	call   rdi
  403639:	test   eax,eax
  40363b:	jne    0x40364b
  40363d:	test   rsi,rsi
  403640:	je     0x40364b
  403642:	mov    rax,QWORD PTR [rbx+0x8]
  403646:	mov    rcx,rsi
  403649:	call   rax
  40364b:	mov    rbx,QWORD PTR [rbx+0x10]
  40364f:	test   rbx,rbx
  403652:	jne    0x403630
  403654:	mov    rax,QWORD PTR [rip+0x8079]        # 0x40b6d4
  40365b:	lea    rcx,[rip+0x733e]        # 0x40a9a0
  403662:	add    rsp,0x28
  403666:	pop    rbx
  403667:	pop    rsi
  403668:	pop    rdi
  403669:	pop    rbp
  40366a:	rex.W jmp rax
  40366d:	nop    DWORD PTR [rax]
  403670:	push   rdi
  403671:	push   rsi
  403672:	push   rbx
  403673:	sub    rsp,0x20
  403677:	mov    eax,DWORD PTR [rip+0x730b]        # 0x40a988
  40367d:	test   eax,eax
  40367f:	jne    0x403690
  403681:	add    rsp,0x20
  403685:	pop    rbx
  403686:	pop    rsi
  403687:	pop    rdi
  403688:	ret    
  403689:	nop    DWORD PTR [rax+0x0]
  403690:	mov    rsi,rdx
  403693:	mov    edi,ecx
  403695:	mov    edx,0x18
  40369a:	mov    ecx,0x1
  40369f:	call   0x403cb0
  4036a4:	test   rax,rax
  4036a7:	mov    rbx,rax
  4036aa:	je     0x4036e8
  4036ac:	mov    DWORD PTR [rax],edi
  4036ae:	mov    QWORD PTR [rax+0x8],rsi
  4036b2:	lea    rcx,[rip+0x72e7]        # 0x40a9a0
  4036b9:	call   QWORD PTR [rip+0x7fcd]        # 0x40b68c
  4036bf:	mov    rax,QWORD PTR [rip+0x72ba]        # 0x40a980
  4036c6:	lea    rcx,[rip+0x72d3]        # 0x40a9a0
  4036cd:	mov    QWORD PTR [rip+0x72ac],rbx        # 0x40a980
  4036d4:	mov    QWORD PTR [rbx+0x10],rax
  4036d8:	call   QWORD PTR [rip+0x7ff6]        # 0x40b6d4
  4036de:	xor    eax,eax
  4036e0:	add    rsp,0x20
  4036e4:	pop    rbx
  4036e5:	pop    rsi
  4036e6:	pop    rdi
  4036e7:	ret    
  4036e8:	mov    eax,0xffffffff
  4036ed:	jmp    0x403681
  4036ef:	nop
  4036f0:	push   rbx
  4036f1:	sub    rsp,0x20
  4036f5:	mov    eax,DWORD PTR [rip+0x728d]        # 0x40a988
  4036fb:	test   eax,eax
  4036fd:	jne    0x403710
  4036ff:	xor    eax,eax
  403701:	add    rsp,0x20
  403705:	pop    rbx
  403706:	ret    
  403707:	nop    WORD PTR [rax+rax*1+0x0]
  403710:	mov    ebx,ecx
  403712:	lea    rcx,[rip+0x7287]        # 0x40a9a0
  403719:	call   QWORD PTR [rip+0x7f6d]        # 0x40b68c
  40371f:	mov    rdx,QWORD PTR [rip+0x725a]        # 0x40a980
  403726:	test   rdx,rdx
  403729:	je     0x403747
  40372b:	mov    eax,DWORD PTR [rdx]
  40372d:	cmp    eax,ebx
  40372f:	jne    0x40373e
  403731:	jmp    0x40377f
  403733:	mov    r8d,DWORD PTR [rax]
  403736:	cmp    r8d,ebx
  403739:	je     0x403760
  40373b:	mov    rdx,rax
  40373e:	mov    rax,QWORD PTR [rdx+0x10]
  403742:	test   rax,rax
  403745:	jne    0x403733
  403747:	lea    rcx,[rip+0x7252]        # 0x40a9a0
  40374e:	call   QWORD PTR [rip+0x7f80]        # 0x40b6d4
  403754:	xor    eax,eax
  403756:	add    rsp,0x20
  40375a:	pop    rbx
  40375b:	ret    
  40375c:	nop    DWORD PTR [rax+0x0]
  403760:	mov    rcx,rax
  403763:	mov    rax,QWORD PTR [rax+0x10]
  403767:	mov    QWORD PTR [rdx+0x10],rax
  40376b:	call   0x403c98
  403770:	lea    rcx,[rip+0x7229]        # 0x40a9a0
  403777:	call   QWORD PTR [rip+0x7f57]        # 0x40b6d4
  40377d:	jmp    0x403754
  40377f:	mov    rax,QWORD PTR [rdx+0x10]
  403783:	mov    rcx,rdx
  403786:	mov    QWORD PTR [rip+0x71f3],rax        # 0x40a980
  40378d:	jmp    0x40376b
  40378f:	nop
  403790:	push   rbx
  403791:	sub    rsp,0x20
  403795:	cmp    edx,0x1
  403798:	je     0x403830
  40379e:	jb     0x4037d0
  4037a0:	cmp    edx,0x2
  4037a3:	je     0x4037c0
  4037a5:	cmp    edx,0x3
  4037a8:	jne    0x4037c5
  4037aa:	mov    eax,DWORD PTR [rip+0x71d8]        # 0x40a988
  4037b0:	test   eax,eax
  4037b2:	je     0x4037c5
  4037b4:	call   0x403600
  4037b9:	jmp    0x4037c5
  4037bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4037c0:	call   0x402c90
  4037c5:	mov    eax,0x1
  4037ca:	add    rsp,0x20
  4037ce:	pop    rbx
  4037cf:	ret    
  4037d0:	mov    eax,DWORD PTR [rip+0x71b2]        # 0x40a988
  4037d6:	test   eax,eax
  4037d8:	jne    0x403860
  4037de:	mov    eax,DWORD PTR [rip+0x71a4]        # 0x40a988
  4037e4:	cmp    eax,0x1
  4037e7:	jne    0x4037c5
  4037e9:	mov    rcx,QWORD PTR [rip+0x7190]        # 0x40a980
  4037f0:	test   rcx,rcx
  4037f3:	je     0x403806
  4037f5:	mov    rbx,QWORD PTR [rcx+0x10]
  4037f9:	call   0x403c98
  4037fe:	test   rbx,rbx
  403801:	mov    rcx,rbx
  403804:	jne    0x4037f5
  403806:	lea    rcx,[rip+0x7193]        # 0x40a9a0
  40380d:	mov    QWORD PTR [rip+0x7168],0x0        # 0x40a980
  403818:	mov    DWORD PTR [rip+0x7166],0x0        # 0x40a988
  403822:	call   QWORD PTR [rip+0x7e5c]        # 0x40b684
  403828:	jmp    0x4037c5
  40382a:	nop    WORD PTR [rax+rax*1+0x0]
  403830:	mov    eax,DWORD PTR [rip+0x7152]        # 0x40a988
  403836:	test   eax,eax
  403838:	je     0x403850
  40383a:	mov    eax,0x1
  40383f:	mov    DWORD PTR [rip+0x713f],0x1        # 0x40a988
  403849:	add    rsp,0x20
  40384d:	pop    rbx
  40384e:	ret    
  40384f:	nop
  403850:	lea    rcx,[rip+0x7149]        # 0x40a9a0
  403857:	call   QWORD PTR [rip+0x7e6f]        # 0x40b6cc
  40385d:	jmp    0x40383a
  40385f:	nop
  403860:	call   0x403600
  403865:	jmp    0x4037de
  40386a:	nop
  40386b:	nop
  40386c:	nop
  40386d:	nop
  40386e:	nop
  40386f:	nop
  403870:	movsxd rax,DWORD PTR [rcx+0x3c]
  403874:	add    rcx,rax
  403877:	xor    eax,eax
  403879:	cmp    DWORD PTR [rcx],0x4550
  40387f:	je     0x403883
  403881:	repz ret 
  403883:	xor    eax,eax
  403885:	cmp    WORD PTR [rcx+0x18],0x20b
  40388b:	sete   al
  40388e:	ret    
  40388f:	nop
  403890:	cmp    WORD PTR [rcx],0x5a4d
  403895:	je     0x4038a0
  403897:	xor    eax,eax
  403899:	ret    
  40389a:	nop    WORD PTR [rax+rax*1+0x0]
  4038a0:	jmp    0x403870
  4038a2:	nop    DWORD PTR [rax+0x0]
  4038a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4038b0:	movsxd rax,DWORD PTR [rcx+0x3c]
  4038b4:	add    rcx,rax
  4038b7:	movzx  eax,WORD PTR [rcx+0x14]
  4038bb:	lea    rax,[rcx+rax*1+0x18]
  4038c0:	movzx  ecx,WORD PTR [rcx+0x6]
  4038c4:	test   ecx,ecx
  4038c6:	je     0x4038f1
  4038c8:	sub    ecx,0x1
  4038cb:	lea    rcx,[rcx+rcx*4]
  4038cf:	lea    r9,[rax+rcx*8+0x28]
  4038d4:	mov    r8d,DWORD PTR [rax+0xc]
  4038d8:	cmp    r8,rdx
  4038db:	mov    rcx,r8
  4038de:	ja     0x4038e8
  4038e0:	add    ecx,DWORD PTR [rax+0x8]
  4038e3:	cmp    rdx,rcx
  4038e6:	jb     0x4038f3
  4038e8:	add    rax,0x28
  4038ec:	cmp    rax,r9
  4038ef:	jne    0x4038d4
  4038f1:	xor    eax,eax
  4038f3:	repz ret 
  4038f5:	nop
  4038f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403900:	push   rdi
  403901:	push   rsi
  403902:	push   rbx
  403903:	sub    rsp,0x20
  403907:	mov    rsi,rcx
  40390a:	call   0x403c68
  40390f:	cmp    rax,0x8
  403913:	ja     0x403930
  403915:	mov    rbx,QWORD PTR [rip+0x34a4]        # 0x406dc0
  40391c:	xor    edi,edi
  40391e:	cmp    WORD PTR [rbx],0x5a4d
  403923:	je     0x403940
  403925:	mov    rax,rdi
  403928:	add    rsp,0x20
  40392c:	pop    rbx
  40392d:	pop    rsi
  40392e:	pop    rdi
  40392f:	ret    
  403930:	xor    edi,edi
  403932:	mov    rax,rdi
  403935:	add    rsp,0x20
  403939:	pop    rbx
  40393a:	pop    rsi
  40393b:	pop    rdi
  40393c:	ret    
  40393d:	nop    DWORD PTR [rax]
  403940:	mov    rcx,rbx
  403943:	call   0x403870
  403948:	test   eax,eax
  40394a:	je     0x403925
  40394c:	movsxd rdx,DWORD PTR [rbx+0x3c]
  403950:	add    rdx,rbx
  403953:	movzx  eax,WORD PTR [rdx+0x14]
  403957:	lea    rbx,[rdx+rax*1+0x18]
  40395c:	movzx  eax,WORD PTR [rdx+0x6]
  403960:	test   eax,eax
  403962:	je     0x403925
  403964:	sub    eax,0x1
  403967:	lea    rax,[rax+rax*4]
  40396b:	lea    rdi,[rbx+rax*8+0x28]
  403970:	jmp    0x40397b
  403972:	add    rbx,0x28
  403976:	cmp    rbx,rdi
  403979:	je     0x403930
  40397b:	mov    r8d,0x8
  403981:	mov    rdx,rsi
  403984:	mov    rcx,rbx
  403987:	call   0x403c60
  40398c:	test   eax,eax
  40398e:	jne    0x403972
  403990:	mov    rdi,rbx
  403993:	mov    rax,rdi
  403996:	add    rsp,0x20
  40399a:	pop    rbx
  40399b:	pop    rsi
  40399c:	pop    rdi
  40399d:	ret    
  40399e:	xchg   ax,ax
  4039a0:	push   rsi
  4039a1:	push   rbx
  4039a2:	sub    rsp,0x28
  4039a6:	mov    rbx,QWORD PTR [rip+0x3413]        # 0x406dc0
  4039ad:	cmp    WORD PTR [rbx],0x5a4d
  4039b2:	je     0x4039c0
  4039b4:	xor    eax,eax
  4039b6:	add    rsp,0x28
  4039ba:	pop    rbx
  4039bb:	pop    rsi
  4039bc:	ret    
  4039bd:	nop    DWORD PTR [rax]
  4039c0:	mov    rsi,rcx
  4039c3:	mov    rcx,rbx
  4039c6:	call   0x403870
  4039cb:	test   eax,eax
  4039cd:	je     0x4039b4
  4039cf:	sub    rsi,rbx
  4039d2:	mov    rcx,rbx
  4039d5:	mov    rdx,rsi
  4039d8:	add    rsp,0x28
  4039dc:	pop    rbx
  4039dd:	pop    rsi
  4039de:	jmp    0x4038b0
  4039e3:	nop    DWORD PTR [rax]
  4039e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4039f0:	push   rbx
  4039f1:	sub    rsp,0x20
  4039f5:	mov    rbx,QWORD PTR [rip+0x33c4]        # 0x406dc0
  4039fc:	xor    eax,eax
  4039fe:	cmp    WORD PTR [rbx],0x5a4d
  403a03:	je     0x403a10
  403a05:	add    rsp,0x20
  403a09:	pop    rbx
  403a0a:	ret    
  403a0b:	nop    DWORD PTR [rax+rax*1+0x0]
  403a10:	mov    rcx,rbx
  403a13:	call   0x403870
  403a18:	test   eax,eax
  403a1a:	je     0x403a05
  403a1c:	movsxd rax,DWORD PTR [rbx+0x3c]
  403a20:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  403a25:	add    rsp,0x20
  403a29:	pop    rbx
  403a2a:	ret    
  403a2b:	nop    DWORD PTR [rax+rax*1+0x0]
  403a30:	push   rdi
  403a31:	push   rsi
  403a32:	push   rbx
  403a33:	sub    rsp,0x20
  403a37:	mov    rsi,QWORD PTR [rip+0x3382]        # 0x406dc0
  403a3e:	xor    edi,edi
  403a40:	mov    rbx,rcx
  403a43:	cmp    WORD PTR [rsi],0x5a4d
  403a48:	je     0x403a55
  403a4a:	mov    rax,rdi
  403a4d:	add    rsp,0x20
  403a51:	pop    rbx
  403a52:	pop    rsi
  403a53:	pop    rdi
  403a54:	ret    
  403a55:	mov    rcx,rsi
  403a58:	call   0x403870
  403a5d:	test   eax,eax
  403a5f:	je     0x403a4a
  403a61:	movsxd rax,DWORD PTR [rsi+0x3c]
  403a65:	add    rsi,rax
  403a68:	movzx  eax,WORD PTR [rsi+0x14]
  403a6c:	lea    rdx,[rsi+rax*1+0x18]
  403a71:	movzx  eax,WORD PTR [rsi+0x6]
  403a75:	test   eax,eax
  403a77:	je     0x403a4a
  403a79:	sub    eax,0x1
  403a7c:	lea    rax,[rax+rax*4]
  403a80:	lea    rax,[rdx+rax*8+0x28]
  403a85:	test   BYTE PTR [rdx+0x27],0x20
  403a89:	je     0x403a94
  403a8b:	test   rbx,rbx
  403a8e:	je     0x403ab0
  403a90:	sub    rbx,0x1
  403a94:	add    rdx,0x28
  403a98:	cmp    rdx,rax
  403a9b:	jne    0x403a85
  403a9d:	xor    edi,edi
  403a9f:	mov    rax,rdi
  403aa2:	add    rsp,0x20
  403aa6:	pop    rbx
  403aa7:	pop    rsi
  403aa8:	pop    rdi
  403aa9:	ret    
  403aaa:	nop    WORD PTR [rax+rax*1+0x0]
  403ab0:	mov    rdi,rdx
  403ab3:	mov    rax,rdi
  403ab6:	add    rsp,0x20
  403aba:	pop    rbx
  403abb:	pop    rsi
  403abc:	pop    rdi
  403abd:	ret    
  403abe:	xchg   ax,ax
  403ac0:	push   rsi
  403ac1:	push   rbx
  403ac2:	sub    rsp,0x28
  403ac6:	mov    rsi,QWORD PTR [rip+0x32f3]        # 0x406dc0
  403acd:	xor    ebx,ebx
  403acf:	cmp    WORD PTR [rsi],0x5a4d
  403ad4:	je     0x403ae0
  403ad6:	mov    rax,rbx
  403ad9:	add    rsp,0x28
  403add:	pop    rbx
  403ade:	pop    rsi
  403adf:	ret    
  403ae0:	mov    rcx,rsi
  403ae3:	call   0x403870
  403ae8:	test   eax,eax
  403aea:	cmovne rbx,rsi
  403aee:	mov    rax,rbx
  403af1:	add    rsp,0x28
  403af5:	pop    rbx
  403af6:	pop    rsi
  403af7:	ret    
  403af8:	nop    DWORD PTR [rax+rax*1+0x0]
  403b00:	push   rsi
  403b01:	push   rbx
  403b02:	sub    rsp,0x28
  403b06:	mov    rbx,QWORD PTR [rip+0x32b3]        # 0x406dc0
  403b0d:	xor    eax,eax
  403b0f:	cmp    WORD PTR [rbx],0x5a4d
  403b14:	je     0x403b20
  403b16:	add    rsp,0x28
  403b1a:	pop    rbx
  403b1b:	pop    rsi
  403b1c:	ret    
  403b1d:	nop    DWORD PTR [rax]
  403b20:	mov    rsi,rcx
  403b23:	mov    rcx,rbx
  403b26:	call   0x403870
  403b2b:	test   eax,eax
  403b2d:	je     0x403b16
  403b2f:	sub    rsi,rbx
  403b32:	mov    rcx,rbx
  403b35:	mov    rdx,rsi
  403b38:	call   0x4038b0
  403b3d:	test   rax,rax
  403b40:	je     0x403b51
  403b42:	mov    eax,DWORD PTR [rax+0x24]
  403b45:	not    eax
  403b47:	shr    eax,0x1f
  403b4a:	add    rsp,0x28
  403b4e:	pop    rbx
  403b4f:	pop    rsi
  403b50:	ret    
  403b51:	xor    eax,eax
  403b53:	jmp    0x403b16
  403b55:	nop
  403b56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403b60:	push   rbp
  403b61:	push   rdi
  403b62:	push   rsi
  403b63:	push   rbx
  403b64:	sub    rsp,0x28
  403b68:	mov    rdi,QWORD PTR [rip+0x3251]        # 0x406dc0
  403b6f:	xor    ebp,ebp
  403b71:	mov    esi,ecx
  403b73:	cmp    WORD PTR [rdi],0x5a4d
  403b78:	je     0x403b90
  403b7a:	mov    rax,rbp
  403b7d:	add    rsp,0x28
  403b81:	pop    rbx
  403b82:	pop    rsi
  403b83:	pop    rdi
  403b84:	pop    rbp
  403b85:	ret    
  403b86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403b90:	mov    rcx,rdi
  403b93:	call   0x403870
  403b98:	test   eax,eax
  403b9a:	je     0x403b7a
  403b9c:	movsxd rax,DWORD PTR [rdi+0x3c]
  403ba0:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  403ba7:	test   edx,edx
  403ba9:	je     0x403b7a
  403bab:	mov    ebx,edx
  403bad:	mov    rcx,rdi
  403bb0:	mov    rdx,rbx
  403bb3:	call   0x4038b0
  403bb8:	test   rax,rax
  403bbb:	je     0x403b7a
  403bbd:	add    rbx,rdi
  403bc0:	mov    rdx,rbx
  403bc3:	jne    0x403bd7
  403bc5:	jmp    0x403b7a
  403bc7:	nop    WORD PTR [rax+rax*1+0x0]
  403bd0:	sub    esi,0x1
  403bd3:	add    rdx,0x14
  403bd7:	mov    ecx,DWORD PTR [rdx+0x4]
  403bda:	test   ecx,ecx
  403bdc:	jne    0x403be5
  403bde:	mov    eax,DWORD PTR [rdx+0xc]
  403be1:	test   eax,eax
  403be3:	je     0x403c00
  403be5:	test   esi,esi
  403be7:	jg     0x403bd0
  403be9:	mov    ebp,DWORD PTR [rdx+0xc]
  403bec:	add    rbp,rdi
  403bef:	mov    rax,rbp
  403bf2:	add    rsp,0x28
  403bf6:	pop    rbx
  403bf7:	pop    rsi
  403bf8:	pop    rdi
  403bf9:	pop    rbp
  403bfa:	ret    
  403bfb:	nop    DWORD PTR [rax+rax*1+0x0]
  403c00:	xor    ebp,ebp
  403c02:	mov    rax,rbp
  403c05:	add    rsp,0x28
  403c09:	pop    rbx
  403c0a:	pop    rsi
  403c0b:	pop    rdi
  403c0c:	pop    rbp
  403c0d:	ret    
  403c0e:	nop
  403c0f:	nop
  403c10:	push   rcx
  403c11:	push   rax
  403c12:	cmp    rax,0x1000
  403c18:	lea    rcx,[rsp+0x18]
  403c1d:	jb     0x403c38
  403c1f:	sub    rcx,0x1000
  403c26:	or     QWORD PTR [rcx],0x0
  403c2a:	sub    rax,0x1000
  403c30:	cmp    rax,0x1000
  403c36:	ja     0x403c1f
  403c38:	sub    rcx,rax
  403c3b:	or     QWORD PTR [rcx],0x0
  403c3f:	pop    rax
  403c40:	pop    rcx
  403c41:	ret    
  403c42:	nop
  403c43:	nop
  403c44:	nop
  403c45:	nop
  403c46:	nop
  403c47:	nop
  403c48:	nop
  403c49:	nop
  403c4a:	nop
  403c4b:	nop
  403c4c:	nop
  403c4d:	nop
  403c4e:	nop
  403c4f:	nop
  403c50:	jmp    QWORD PTR [rip+0x7bd6]        # 0x40b82c
  403c56:	nop
  403c57:	nop
  403c58:	jmp    QWORD PTR [rip+0x7bc6]        # 0x40b824
  403c5e:	nop
  403c5f:	nop
  403c60:	jmp    QWORD PTR [rip+0x7bb6]        # 0x40b81c
  403c66:	nop
  403c67:	nop
  403c68:	jmp    QWORD PTR [rip+0x7ba6]        # 0x40b814
  403c6e:	nop
  403c6f:	nop
  403c70:	jmp    QWORD PTR [rip+0x7b96]        # 0x40b80c
  403c76:	nop
  403c77:	nop
  403c78:	jmp    QWORD PTR [rip+0x7b86]        # 0x40b804
  403c7e:	nop
  403c7f:	nop
  403c80:	jmp    QWORD PTR [rip+0x7b76]        # 0x40b7fc
  403c86:	nop
  403c87:	nop
  403c88:	jmp    QWORD PTR [rip+0x7b66]        # 0x40b7f4
  403c8e:	nop
  403c8f:	nop
  403c90:	jmp    QWORD PTR [rip+0x7b56]        # 0x40b7ec
  403c96:	nop
  403c97:	nop
  403c98:	jmp    QWORD PTR [rip+0x7b46]        # 0x40b7e4
  403c9e:	nop
  403c9f:	nop
  403ca0:	jmp    QWORD PTR [rip+0x7b36]        # 0x40b7dc
  403ca6:	nop
  403ca7:	nop
  403ca8:	jmp    QWORD PTR [rip+0x7b26]        # 0x40b7d4
  403cae:	nop
  403caf:	nop
  403cb0:	jmp    QWORD PTR [rip+0x7b16]        # 0x40b7cc
  403cb6:	nop
  403cb7:	nop
  403cb8:	jmp    QWORD PTR [rip+0x7b06]        # 0x40b7c4
  403cbe:	nop
  403cbf:	nop
  403cc0:	jmp    QWORD PTR [rip+0x7af6]        # 0x40b7bc
  403cc6:	nop
  403cc7:	nop
  403cc8:	jmp    QWORD PTR [rip+0x7ae6]        # 0x40b7b4
  403cce:	nop
  403ccf:	nop
  403cd0:	jmp    QWORD PTR [rip+0x7ad6]        # 0x40b7ac
  403cd6:	nop
  403cd7:	nop
  403cd8:	jmp    QWORD PTR [rip+0x7ac6]        # 0x40b7a4
  403cde:	nop
  403cdf:	nop
  403ce0:	jmp    QWORD PTR [rip+0x7aae]        # 0x40b794
  403ce6:	nop
  403ce7:	nop
  403ce8:	jmp    QWORD PTR [rip+0x7a9e]        # 0x40b78c
  403cee:	nop
  403cef:	nop
  403cf0:	jmp    QWORD PTR [rip+0x7a86]        # 0x40b77c
  403cf6:	nop
  403cf7:	nop
  403cf8:	jmp    QWORD PTR [rip+0x7a76]        # 0x40b774
  403cfe:	nop
  403cff:	nop
  403d00:	jmp    QWORD PTR [rip+0x7a66]        # 0x40b76c
  403d06:	nop
  403d07:	nop
  403d08:	jmp    QWORD PTR [rip+0x7a56]        # 0x40b764
  403d0e:	nop
  403d0f:	nop
  403d10:	jmp    QWORD PTR [rip+0x7a3e]        # 0x40b754
  403d16:	nop
  403d17:	nop
  403d18:	jmp    QWORD PTR [rip+0x7a2e]        # 0x40b74c
  403d1e:	nop
  403d1f:	nop
  403d20:	jmp    QWORD PTR [rip+0x7a1e]        # 0x40b744
  403d26:	nop
  403d27:	nop
  403d28:	nop    DWORD PTR [rax+rax*1+0x0]
  403d30:	mov    rax,QWORD PTR [rip+0x6cb9]        # 0x40a9f0
  403d37:	ret    
  403d38:	nop    DWORD PTR [rax+rax*1+0x0]
  403d40:	mov    rax,rcx
  403d43:	xchg   QWORD PTR [rip+0x6ca6],rax        # 0x40a9f0
  403d4a:	ret    
  403d4b:	nop
  403d4c:	nop
  403d4d:	nop
  403d4e:	nop
  403d4f:	nop
  403d50:	jmp    QWORD PTR [rip+0x79de]        # 0x40b734
  403d56:	nop
  403d57:	nop
  403d58:	jmp    QWORD PTR [rip+0x79ce]        # 0x40b72c
  403d5e:	nop
  403d5f:	nop
  403d60:	jmp    QWORD PTR [rip+0x79be]        # 0x40b724
  403d66:	nop
  403d67:	nop
  403d68:	jmp    QWORD PTR [rip+0x79ae]        # 0x40b71c
  403d6e:	nop
  403d6f:	nop
  403d70:	jmp    QWORD PTR [rip+0x799e]        # 0x40b714
  403d76:	nop
  403d77:	nop
  403d78:	jmp    QWORD PTR [rip+0x798e]        # 0x40b70c
  403d7e:	nop
  403d7f:	nop
  403d80:	jmp    QWORD PTR [rip+0x797e]        # 0x40b704
  403d86:	nop
  403d87:	nop
  403d88:	jmp    QWORD PTR [rip+0x796e]        # 0x40b6fc
  403d8e:	nop
  403d8f:	nop
  403d90:	jmp    QWORD PTR [rip+0x795e]        # 0x40b6f4
  403d96:	nop
  403d97:	nop
  403d98:	jmp    QWORD PTR [rip+0x794e]        # 0x40b6ec
  403d9e:	nop
  403d9f:	nop
  403da0:	jmp    QWORD PTR [rip+0x793e]        # 0x40b6e4
  403da6:	nop
  403da7:	nop
  403da8:	jmp    QWORD PTR [rip+0x792e]        # 0x40b6dc
  403dae:	nop
  403daf:	nop
  403db0:	jmp    QWORD PTR [rip+0x791e]        # 0x40b6d4
  403db6:	nop
  403db7:	nop
  403db8:	jmp    QWORD PTR [rip+0x790e]        # 0x40b6cc
  403dbe:	nop
  403dbf:	nop
  403dc0:	jmp    QWORD PTR [rip+0x78fe]        # 0x40b6c4
  403dc6:	nop
  403dc7:	nop
  403dc8:	jmp    QWORD PTR [rip+0x78ee]        # 0x40b6bc
  403dce:	nop
  403dcf:	nop
  403dd0:	jmp    QWORD PTR [rip+0x78de]        # 0x40b6b4
  403dd6:	nop
  403dd7:	nop
  403dd8:	jmp    QWORD PTR [rip+0x78ce]        # 0x40b6ac
  403dde:	nop
  403ddf:	nop
  403de0:	jmp    QWORD PTR [rip+0x78be]        # 0x40b6a4
  403de6:	nop
  403de7:	nop
  403de8:	jmp    QWORD PTR [rip+0x78ae]        # 0x40b69c
  403dee:	nop
  403def:	nop
  403df0:	jmp    QWORD PTR [rip+0x789e]        # 0x40b694
  403df6:	nop
  403df7:	nop
  403df8:	jmp    QWORD PTR [rip+0x788e]        # 0x40b68c
  403dfe:	nop
  403dff:	nop
  403e00:	jmp    QWORD PTR [rip+0x787e]        # 0x40b684
  403e06:	nop
  403e07:	nop
  403e08:	nop    DWORD PTR [rax+rax*1+0x0]
  403e10:	push   r12
  403e12:	push   rbp
  403e13:	push   rdi
  403e14:	push   rsi
  403e15:	push   rbx
  403e16:	sub    rsp,0x30
  403e1a:	mov    ebx,ecx
  403e1c:	mov    rbp,rdx
  403e1f:	call   0x402860
  403e24:	lea    rdx,[rip+0x22de]        # 0x406109
  403e2b:	xor    ecx,ecx
  403e2d:	call   0x4026c8
  403e32:	lea    rcx,[rip+0x2be0]        # 0x406a19
  403e39:	call   0x4026c0
  403e3e:	call   0x4026b8
  403e43:	lea    rcx,[rip+0x2bcf]        # 0x406a19
  403e4a:	mov    rdx,rax
  403e4d:	mov    rsi,rax
  403e50:	call   0x4026d8
  403e55:	mov    rcx,rsi
  403e58:	call   0x4026a8
  403e5d:	lea    rdx,[rip+0x2bbc]        # 0x406a20
  403e64:	lea    rcx,[rip+0x2bae]        # 0x406a19
  403e6b:	call   0x4026e0
  403e70:	cmp    ebx,0x1
  403e73:	jle    0x4040e4
  403e79:	call   0x402540
  403e7e:	cmp    ebx,0x3
  403e81:	mov    QWORD PTR [rip+0x61c0],rax        # 0x40a048
  403e88:	jg     0x403f86
  403e8e:	mov    rcx,QWORD PTR [rip+0x61b3]        # 0x40a048
  403e95:	test   rcx,rcx
  403e98:	je     0x4041ee
  403e9e:	call   0x402520
  403ea3:	mov    r12,QWORD PTR [rbp+0x8]
  403ea7:	lea    rdi,[rip+0x22b8]        # 0x406166
  403eae:	mov    ecx,0x5
  403eb3:	mov    rsi,r12
  403eb6:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403eb8:	je     0x4040ef
  403ebe:	cmp    ebx,0x2
  403ec1:	je     0x403fde
  403ec7:	cmp    ebx,0x3
  403eca:	je     0x404144
  403ed0:	cmp    ebx,0x4
  403ed3:	mov    esi,ebx
  403ed5:	je     0x40407f
  403edb:	cmp    ebx,0x5
  403ede:	je     0x40435d
  403ee4:	cmp    ebx,0x3
  403ee7:	je     0x404380
  403eed:	cmp    ebx,0x4
  403ef0:	je     0x4043c3
  403ef6:	sub    esi,0x3
  403ef9:	cmp    esi,0x1
  403efc:	ja     0x4040d8
  403f02:	lea    rdx,[rip+0x24b4]        # 0x4063bd
  403f09:	mov    rcx,r12
  403f0c:	lea    rsi,[rip+0xffffffffffffd61d]        # 0x401530
  403f13:	call   0x403c70
  403f18:	test   eax,eax
  403f1a:	jne    0x4040d8
  403f20:	mov    rcx,QWORD PTR [rbp+0x10]
  403f24:	cmp    BYTE PTR [rcx],0x0
  403f27:	je     0x4041d0
  403f2d:	lea    rdx,[rip+0x2ba3]        # 0x406ad7
  403f34:	mov    r8d,0x2
  403f3a:	call   0x402640
  403f3f:	mov    rcx,QWORD PTR [rip+0x6102]        # 0x40a048
  403f46:	mov    rdx,QWORD PTR [rax]
  403f49:	mov    r8d,0x1
  403f4f:	mov    rdi,rax
  403f52:	call   0x402530
  403f57:	mov    rcx,rax
  403f5a:	mov    QWORD PTR [rip+0x60d7],rax        # 0x40a038
  403f61:	cmp    QWORD PTR [rdi+0x8],0x0
  403f66:	je     0x4043fb
  403f6c:	mov    rdx,QWORD PTR [rdi]
  403f6f:	call   0x402400
  403f74:	test   eax,eax
  403f76:	jne    0x4042c7
  403f7c:	mov    eax,0x1
  403f81:	jmp    0x404074
  403f86:	mov    rcx,QWORD PTR [rbp+0x8]
  403f8a:	lea    rdx,[rip+0x2a95]        # 0x406a26
  403f91:	call   0x402688
  403f96:	test   eax,eax
  403f98:	je     0x403e8e
  403f9e:	lea    rsi,[rsp+0x28]
  403fa3:	mov    rcx,QWORD PTR [rbp+0x10]
  403fa7:	mov    rdx,QWORD PTR [rip+0x609a]        # 0x40a048
  403fae:	xor    r8d,r8d
  403fb1:	mov    QWORD PTR [rsp+0x28],0x0
  403fba:	mov    r9,rsi
  403fbd:	call   0x402528
  403fc2:	test   rax,rax
  403fc5:	mov    QWORD PTR [rip+0x607c],rax        # 0x40a048
  403fcc:	je     0x40442a
  403fd2:	add    rbp,0x10
  403fd6:	sub    ebx,0x2
  403fd9:	jmp    0x403ea3
  403fde:	lea    rdx,[rip+0x2191]        # 0x406176
  403fe5:	mov    rcx,r12
  403fe8:	call   0x403c70
  403fed:	test   eax,eax
  403fef:	jne    0x404102
  403ff5:	lea    rsi,[rip+0xffffffffffffd5f4]        # 0x4015f0
  403ffc:	call   rsi
  403ffe:	mov    rcx,QWORD PTR [rip+0x6043]        # 0x40a048
  404005:	test   rcx,rcx
  404008:	je     0x40401a
  40400a:	mov    QWORD PTR [rip+0x6033],0x0        # 0x40a048
  404015:	call   0x402518
  40401a:	mov    rcx,QWORD PTR [rip+0x600f]        # 0x40a030
  404021:	test   rcx,rcx
  404024:	je     0x404036
  404026:	mov    QWORD PTR [rip+0x5fff],0x0        # 0x40a030
  404031:	call   0x402550
  404036:	mov    rcx,QWORD PTR [rip+0x5ffb]        # 0x40a038
  40403d:	test   rcx,rcx
  404040:	je     0x404052
  404042:	mov    QWORD PTR [rip+0x5feb],0x0        # 0x40a038
  40404d:	call   0x402510
  404052:	mov    rcx,QWORD PTR [rip+0x5fe7]        # 0x40a040
  404059:	test   rcx,rcx
  40405c:	je     0x404234
  404062:	mov    QWORD PTR [rip+0x5fd3],0x0        # 0x40a040
  40406d:	call   0x4025e0
  404072:	xor    eax,eax
  404074:	add    rsp,0x30
  404078:	pop    rbx
  404079:	pop    rsi
  40407a:	pop    rdi
  40407b:	pop    rbp
  40407c:	pop    r12
  40407e:	ret    
  40407f:	lea    rdx,[rip+0x2029]        # 0x4060af
  404086:	mov    rcx,r12
  404089:	call   0x403c70
  40408e:	test   eax,eax
  404090:	jne    0x40409e
  404092:	lea    rsi,[rip+0xffffffffffffd927]        # 0x4019c0
  404099:	jmp    0x404162
  40409e:	lea    rdx,[rip+0x2223]        # 0x4062c8
  4040a5:	mov    rcx,r12
  4040a8:	call   0x403c70
  4040ad:	test   eax,eax
  4040af:	je     0x4042bb
  4040b5:	lea    rdx,[rip+0x2276]        # 0x406332
  4040bc:	mov    rcx,r12
  4040bf:	call   0x403c70
  4040c4:	test   eax,eax
  4040c6:	jne    0x4043c3
  4040cc:	lea    rsi,[rip+0xffffffffffffd76d]        # 0x401840
  4040d3:	jmp    0x403f20
  4040d8:	mov    rdx,r12
  4040db:	xor    ecx,ecx
  4040dd:	call   0x401e50
  4040e2:	jmp    0x404074
  4040e4:	xor    edx,edx
  4040e6:	xor    ecx,ecx
  4040e8:	call   0x401e50
  4040ed:	jmp    0x404074
  4040ef:	mov    rdx,QWORD PTR [rbp+0x10]
  4040f3:	mov    ecx,0x1
  4040f8:	call   0x401e50
  4040fd:	jmp    0x404074
  404102:	lea    rdx,[rip+0x209a]        # 0x4061a3
  404109:	mov    rcx,r12
  40410c:	call   0x403c70
  404111:	test   eax,eax
  404113:	jne    0x404121
  404115:	lea    rsi,[rip+0xffffffffffffdaa4]        # 0x401bc0
  40411c:	jmp    0x403ffc
  404121:	lea    rdx,[rip+0x20b5]        # 0x4061dd
  404128:	mov    rcx,r12
  40412b:	call   0x403c70
  404130:	test   eax,eax
  404132:	jne    0x40420c
  404138:	lea    rsi,[rip+0xffffffffffffda41]        # 0x401b80
  40413f:	jmp    0x403ffc
  404144:	lea    rdx,[rip+0x20d4]        # 0x40621f
  40414b:	mov    rcx,r12
  40414e:	call   0x403c70
  404153:	test   eax,eax
  404155:	jne    0x40423b
  40415b:	lea    rsi,[rip+0xffffffffffffd5ae]        # 0x401710
  404162:	mov    rcx,QWORD PTR [rbp+0x10]
  404166:	cmp    BYTE PTR [rcx],0x0
  404169:	je     0x4041d0
  40416b:	lea    rdx,[rip+0x2965]        # 0x406ad7
  404172:	mov    r8d,0x2
  404178:	call   0x402640
  40417d:	mov    rcx,QWORD PTR [rip+0x5ec4]        # 0x40a048
  404184:	mov    rdx,QWORD PTR [rax]
  404187:	mov    rdi,rax
  40418a:	mov    r8d,0x1
  404190:	call   0x402530
  404195:	cmp    QWORD PTR [rdi+0x8],0x0
  40419a:	mov    rcx,rax
  40419d:	mov    QWORD PTR [rip+0x5e94],rax        # 0x40a038
  4041a4:	je     0x4043e6
  4041aa:	mov    rdx,QWORD PTR [rdi]
  4041ad:	call   0x402400
  4041b2:	test   eax,eax
  4041b4:	je     0x403f7c
  4041ba:	mov    rcx,QWORD PTR [rdi+0x8]
  4041be:	call   0x402450
  4041c3:	test   eax,eax
  4041c5:	jne    0x4042f1
  4041cb:	jmp    0x403f7c
  4041d0:	lea    rcx,[rip+0x289b]        # 0x406a72
  4041d7:	call   0x4026d0
  4041dc:	mov    rcx,rax
  4041df:	call   0x402690
  4041e4:	mov    eax,0x1
  4041e9:	jmp    0x404074
  4041ee:	lea    rcx,[rip+0x2867]        # 0x406a5c
  4041f5:	call   0x4026d0
  4041fa:	mov    rcx,rax
  4041fd:	call   0x402690
  404202:	mov    eax,0x1
  404207:	jmp    0x404074
  40420c:	lea    rdx,[rip+0x2058]        # 0x40626b
  404213:	mov    rcx,r12
  404216:	mov    esi,0x2
  40421b:	call   0x403c70
  404220:	test   eax,eax
  404222:	jne    0x403ef6
  404228:	lea    rsi,[rip+0xffffffffffffe141]        # 0x402370
  40422f:	jmp    0x403ffc
  404234:	xor    eax,eax
  404236:	jmp    0x404074
  40423b:	lea    rdx,[rip+0x1fff]        # 0x406241
  404242:	mov    rcx,r12
  404245:	call   0x403c70
  40424a:	test   eax,eax
  40424c:	je     0x404351
  404252:	lea    rdx,[rip+0x2012]        # 0x40626b
  404259:	mov    rcx,r12
  40425c:	mov    esi,0x3
  404261:	call   0x403c70
  404266:	test   eax,eax
  404268:	jne    0x404380
  40426e:	mov    rcx,QWORD PTR [rbp+0x10]
  404272:	cmp    BYTE PTR [rcx],0x0
  404275:	je     0x4041d0
  40427b:	lea    rdx,[rip+0x2855]        # 0x406ad7
  404282:	mov    r8d,0x2
  404288:	lea    rsi,[rip+0xffffffffffffe0e1]        # 0x402370
  40428f:	call   0x402640
  404294:	mov    rcx,QWORD PTR [rip+0x5dad]        # 0x40a048
  40429b:	mov    rdx,QWORD PTR [rax]
  40429e:	mov    r8d,0x1
  4042a4:	mov    rdi,rax
  4042a7:	call   0x402530
  4042ac:	mov    rcx,rax
  4042af:	mov    QWORD PTR [rip+0x5d82],rax        # 0x40a038
  4042b6:	jmp    0x403f61
  4042bb:	lea    rsi,[rip+0xffffffffffffd3ae]        # 0x401670
  4042c2:	jmp    0x403f20
  4042c7:	mov    rcx,QWORD PTR [rdi+0x8]
  4042cb:	call   0x402450
  4042d0:	test   eax,eax
  4042d2:	je     0x403f7c
  4042d8:	mov    r8,QWORD PTR [rdi+0x8]
  4042dc:	mov    rcx,QWORD PTR [rip+0x5d55]        # 0x40a038
  4042e3:	xor    edx,edx
  4042e5:	call   0x402598
  4042ea:	mov    QWORD PTR [rip+0x5d4f],rax        # 0x40a040
  4042f1:	mov    rcx,rdi
  4042f4:	call   0x402670
  4042f9:	cmp    ebx,0x3
  4042fc:	jle    0x403ffc
  404302:	mov    rdx,QWORD PTR [rbp+0x18]
  404306:	mov    rcx,QWORD PTR [rip+0x5d2b]        # 0x40a038
  40430d:	call   0x402570
  404312:	test   eax,eax
  404314:	je     0x4043a3
  40431a:	mov    rdx,QWORD PTR [rbp+0x18]
  40431e:	mov    rcx,QWORD PTR [rip+0x5d13]        # 0x40a038
  404325:	mov    QWORD PTR [rip+0x66ec],rdx        # 0x40aa18
  40432c:	call   0x402580
  404331:	cmp    ebx,0x4
  404334:	mov    QWORD PTR [rip+0x5cf5],rax        # 0x40a030
  40433b:	je     0x403ffc
  404341:	mov    rax,QWORD PTR [rbp+0x20]
  404345:	mov    QWORD PTR [rip+0x66c4],rax        # 0x40aa10
  40434c:	jmp    0x403ffc
  404351:	lea    rsi,[rip+0xffffffffffffd9b8]        # 0x401d10
  404358:	jmp    0x403f20
  40435d:	lea    rdx,[rip+0x1fac]        # 0x406310
  404364:	mov    rcx,r12
  404367:	call   0x403c70
  40436c:	test   eax,eax
  40436e:	jne    0x403ef6
  404374:	lea    rsi,[rip+0xffffffffffffd4f5]        # 0x401870
  40437b:	jmp    0x403f20
  404380:	lea    rdx,[rip+0x1fd0]        # 0x406357
  404387:	mov    rcx,r12
  40438a:	call   0x403c70
  40438f:	test   eax,eax
  404391:	jne    0x403ef6
  404397:	lea    rsi,[rip+0xffffffffffffd412]        # 0x4017b0
  40439e:	jmp    0x403f20
  4043a3:	mov    rbx,QWORD PTR [rbp+0x18]
  4043a7:	lea    rcx,[rip+0x2717]        # 0x406ac5
  4043ae:	call   0x4026d0
  4043b3:	mov    rdx,rbx
  4043b6:	mov    rcx,rax
  4043b9:	call   0x402690
  4043be:	jmp    0x403f7c
  4043c3:	lea    rdx,[rip+0x1fd1]        # 0x40639b
  4043ca:	mov    rcx,r12
  4043cd:	call   0x403c70
  4043d2:	test   eax,eax
  4043d4:	jne    0x403ef6
  4043da:	lea    rsi,[rip+0xffffffffffffd2ef]        # 0x4016d0
  4043e1:	jmp    0x403f20
  4043e6:	test   rcx,rcx
  4043e9:	jne    0x4042f1
  4043ef:	mov    rbx,QWORD PTR [rdi]
  4043f2:	lea    rcx,[rip+0x2539]        # 0x406932
  4043f9:	jmp    0x4043ae
  4043fb:	test   rcx,rcx
  4043fe:	mov    r12,QWORD PTR [rdi]
  404401:	je     0x404463
  404403:	call   0x402578
  404408:	test   rax,rax
  40440b:	je     0x40447f
  40440d:	mov    rcx,QWORD PTR [rip+0x5c24]        # 0x40a038
  404414:	xor    r8d,r8d
  404417:	xor    edx,edx
  404419:	call   0x402598
  40441e:	mov    QWORD PTR [rip+0x5c1b],rax        # 0x40a040
  404425:	jmp    0x4042f1
  40442a:	mov    rax,QWORD PTR [rsp+0x28]
  40442f:	mov    rbx,QWORD PTR [rbp+0x10]
  404433:	lea    rcx,[rip+0x25fe]        # 0x406a38
  40443a:	mov    rdi,QWORD PTR [rax+0x8]
  40443e:	call   0x4026d0
  404443:	mov    rdx,rbx
  404446:	mov    rcx,rax
  404449:	mov    r8,rdi
  40444c:	call   0x402690
  404451:	mov    rcx,rsi
  404454:	call   0x4026b0
  404459:	mov    eax,0x1
  40445e:	jmp    0x404074
  404463:	lea    rcx,[rip+0x24c8]        # 0x406932
  40446a:	call   0x4026d0
  40446f:	mov    rdx,r12
  404472:	mov    rcx,rax
  404475:	call   0x402690
  40447a:	jmp    0x403f7c
  40447f:	lea    rcx,[rip+0x260a]        # 0x406a90
  404486:	call   0x4026d0
  40448b:	mov    rdx,r12
  40448e:	mov    rcx,rax
  404491:	call   0x402690
  404496:	jmp    0x403f7c
  40449b:	nop
  40449c:	nop
  40449d:	nop
  40449e:	nop
  40449f:	nop
  4044a0:	(bad)  
  4044a1:	(bad)  
  4044a2:	(bad)  
  4044a3:	(bad)  
  4044a4:	(bad)  
  4044a5:	(bad)  
  4044a6:	(bad)  
  4044a7:	inc    DWORD PTR [rax]
  4044a9:	add    BYTE PTR [rax],al
  4044ab:	add    BYTE PTR [rax],al
  4044ad:	add    BYTE PTR [rax],al
  4044af:	add    bh,bh
  4044b1:	(bad)  
  4044b2:	(bad)  
  4044b3:	(bad)  
  4044b4:	(bad)  
  4044b5:	(bad)  
  4044b6:	(bad)  
  4044b7:	inc    DWORD PTR [rax]
  4044b9:	add    BYTE PTR [rax],al
  4044bb:	add    BYTE PTR [rax],al
  4044bd:	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000405000 <.data>:
  405000:	or     al,BYTE PTR [rax]
	...
  40500e:	add    BYTE PTR [rax],al
  405010:	mov    eax,0x4044
	...
  40501d:	add    BYTE PTR [rax],al
  40501f:	add    bh,bh
  405021:	(bad)  
  405022:	(bad)  
  405023:	(bad)  
  405024:	(bad)  
  405025:	(bad)  
  405026:	(bad)  
  405027:	inc    DWORD PTR [rax]
  405029:	add    BYTE PTR [rax],al
  40502b:	add    BYTE PTR [rax],al
  40502d:	add    BYTE PTR [rax],al
  40502f:	add    bh,bh
	...
  40503d:	add    BYTE PTR [rax],al
  40503f:	add    BYTE PTR [rdx],al
	...
  40504d:	add    BYTE PTR [rax],al
  40504f:	add    bh,bh
  405051:	(bad)  
  405052:	(bad)  
  405053:	inc    DWORD PTR [rax]
	...
  40505d:	add    BYTE PTR [rax],al
  40505f:	add    BYTE PTR [rax],dh
  405061:	cmp    eax,0x40
  405066:	add    BYTE PTR [rax],al
  405068:	rex cmp eax,0x40
  40506e:	add    BYTE PTR [rax],al
  405070:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
	...
  40507e:	add    BYTE PTR [rax],al
  405080:	int    0x5d
  405082:	and    dl,dl
  405084:	data16 (bad) 
  405086:	(bad)  
  405087:	inc    DWORD PTR [rax]
  405089:	add    BYTE PTR [rax],al
  40508b:	add    BYTE PTR [rax],al
  40508d:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

0000000000406000 <.rdata>:
  406000:	movsxd ebp,DWORD PTR [rax+0x61]
  406003:	outs   dx,BYTE PTR ds:[rsi]
  406004:	gs cmp bh,BYTE PTR fs:[edx]
  406009:	and    eax,0x68630073
  40600e:	(bad)  
  40600f:	outs   dx,BYTE PTR ds:[rsi]
  406010:	gs add BYTE PTR fs:[eip+0x25000a73],ah        # 0x25406a8c
  406019:	fs cs and eax,0x64252e64
  406020:	or     al,BYTE PTR [rax]
  406022:	and    eax,0x25203a73
  406027:	jae    0x406033
  406029:	add    BYTE PTR [rdx+rsi*2+0x75],dh
  40602d:	add    BYTE PTR gs:[rsi+0x61],ah
  406031:	ins    BYTE PTR es:[rdi],dx
  406032:	jae    0x406099
  406034:	add    BYTE PTR [rbx+0x65],dh
  406037:	je     0x4060ad
  406039:	imul   ebp,DWORD PTR [rsi+0x67],0x63732d73
  406040:	push   0x616d65
  406045:	jae    0x406047
  406047:	and    eax,0x73
  40604c:	add    BYTE PTR [rax],al
  40604e:	add    BYTE PTR [rax],al
  406050:	push   rsp
  406051:	push   0x72702065
  406056:	outs   dx,DWORD PTR ds:[rsi]
  406057:	jbe    0x4060c2
  406059:	fs gs and BYTE PTR fs:[rsi+0x61],dh
  40605f:	ins    BYTE PTR es:[rdi],dx
  406060:	jne    0x4060c7
  406062:	and    BYTE PTR [rcx+0x73],ch
  406065:	and    BYTE PTR [rdi+0x75],ch
  406068:	je     0x4060dd
  40606a:	imul   esp,DWORD PTR [rbp+riz*2+0x20],0x7420666f
  406072:	push   0x61762065
  406077:	ins    BYTE PTR es:[rdi],dx
  406078:	imul   esp,DWORD PTR [rax+riz*1+0x72],0x65676e61
  406080:	or     al,BYTE PTR [rax]
  406082:	push   rsp
  406083:	push   0x656b2065
  406088:	jns    0x4060aa
  40608a:	imul   esi,DWORD PTR [rbx+0x20],0x20746f6e
  406091:	ja     0x406105
  406093:	imul   esi,DWORD PTR [rcx+riz*2+0x62],0xa656c
  40609b:	sub    BYTE PTR [rsi],ah
  40609d:	jae    0x406115
  40609f:	sub    DWORD PTR [rax],eax
  4060a1:	je     0x40611c
  4060a3:	jo     0x40610a
  4060a5:	add    BYTE PTR [rcx+rdi*2+0x70],dh
  4060a9:	and    BYTE PTR gs:[rip+0x72000a73],ah        # 0x72406b23
  4060b0:	(bad)  
  4060b1:	outs   dx,BYTE PTR ds:[rsi]
  4060b2:	add    BYTE PTR gs:[eax],ch
  4060b6:	sub    ch,BYTE PTR [rdx]
  4060b8:	sub    DWORD PTR [rax],eax
  4060ba:	jb     0x40611d
  4060bc:	outs   dx,BYTE PTR ds:[rsi]
  4060bd:	and    BYTE PTR gs:[eip+0x73252073],ah        # 0x73658138
  4060c5:	and    BYTE PTR [rip+0x65000a73],ah        # 0x65406b3e
  4060cb:	outs   dx,BYTE PTR ds:[rsi]
  4060cc:	jne    0x40613b
  4060ce:	add    BYTE PTR [rsi+0x6c],ah
  4060d1:	(bad)  
  4060d2:	addr32 jae 0x4060d5
  4060d5:	sub    al,BYTE PTR [rax]
  4060d7:	and    eax,0x73252073
  4060dc:	and    BYTE PTR [rip+0x70000a73],ah        # 0x70406b55
  4060e2:	(bad)  
  4060e3:	je     0x40614d
  4060e5:	add    BYTE PTR [rip+0x20732a2d],ah        # 0x20b38b18
  4060eb:	and    BYTE PTR [rax],ah
  4060ed:	and    eax,0x25000a73
  4060f2:	sub    eax,0x2020732a
  4060f7:	and    BYTE PTR [rip+0x73253a73],ah        # 0x73659b70
  4060fd:	or     al,BYTE PTR [rax]
  4060ff:	pop    rbx
  406100:	rex.XB
  406101:	rex.WRXB
  406102:	rex.WRB
  406103:	rex.WRB
  406104:	rex.B
  406105:	rex.WRX
  406106:	rex.R pop rbp
  406108:	add    BYTE PTR [rax],al
  40610a:	push   rbx
  40610b:	rex.XB
  40610c:	rex.W
  40610d:	rex.RB
  40610e:	rex.WRB
  40610f:	pop    r11
  406111:	cmp    dl,BYTE PTR [rax+0x41]
  406114:	push   rsp
  406115:	rex.W pop rbp
  406117:	add    BYTE PTR [rbx+0x53],bl
  40611a:	rex.XB
  40611b:	rex.W
  40611c:	rex.RB
  40611d:	rex.WRB
  40611e:	pop    r11
  406120:	cmp    dl,BYTE PTR [rax+0x41]
  406123:	push   rsp
  406124:	rex.W pop rbp
  406126:	pop    rbp
  406127:	add    BYTE PTR [rbx+0x43],dl
  40612a:	rex.W
  40612b:	rex.RB
  40612c:	rex.WRB
  40612d:	pop    r11
  40612f:	cmp    dl,BYTE PTR [rax+0x41]
  406132:	push   rsp
  406133:	rex.W pop rbp
  406135:	and    BYTE PTR [rbx+0x45],cl
  406138:	pop    rcx
  406139:	add    BYTE PTR [rbx+0x43],dl
  40613c:	rex.W
  40613d:	rex.RB
  40613e:	rex.WRB
  40613f:	pop    r11
  406141:	cmp    dl,BYTE PTR [rax+0x41]
  406144:	push   rsp
  406145:	rex.W pop rbp
  406147:	and    BYTE PTR [rbx+0x45],cl
  40614a:	pop    rcx
  40614b:	and    BYTE PTR [rsi+0x41],dl
  40614e:	rex.WR push rbp
  406150:	add    BYTE PTR [r11+0x43],r10b
  406154:	rex.W
  406155:	rex.RB
  406156:	rex.WRB
  406157:	pop    r11
  406159:	cmp    dl,BYTE PTR [rax+0x41]
  40615c:	push   rsp
  40615d:	rex.W pop rbp
  40615f:	and    BYTE PTR [rbx+0x4b],bl
  406162:	rex.RB pop r9
  406164:	pop    rbp
  406165:	add    BYTE PTR [rax+0x65],ch
  406168:	ins    BYTE PTR es:[rdi],dx
  406169:	jo     0x40616b
  40616b:	push   rax
  40616c:	jb     0x4061d7
  40616e:	outs   dx,BYTE PTR ds:[rsi]
  40616f:	je     0x406191
  406171:	push   0x706c65
  406176:	sub    eax,0x7265762d
  40617b:	jae    0x4061e6
  40617d:	outs   dx,DWORD PTR ds:[rsi]
  40617e:	outs   dx,BYTE PTR ds:[rsi]
  40617f:	add    BYTE PTR [rax+0x72],dl
  406182:	imul   ebp,DWORD PTR [rsi+0x74],0x72657620
  406189:	jae    0x4061f4
  40618b:	outs   dx,DWORD PTR ds:[rsi]
  40618c:	outs   dx,BYTE PTR ds:[rsi]
  40618d:	and    BYTE PTR [rcx+0x6e],ch
  406190:	outs   dx,WORD PTR ds:[rsi]
  406192:	jb     0x406201
  406194:	(bad)  
  406195:	je     0x406200
  406197:	outs   dx,DWORD PTR ds:[rsi]
  406198:	outs   dx,BYTE PTR ds:[rsi]
  406199:	and    BYTE PTR [rcx+0x6e],ah
  40619c:	and    BYTE PTR fs:[rbp+0x78],ah
  4061a0:	imul   esi,DWORD PTR [rax+rax*1+0x6c],0x2d747369
  4061a8:	jae    0x40620d
  4061aa:	push   0x73616d65
  4061af:	add    BYTE PTR [rcx+rbp*2+0x73],cl
  4061b3:	je     0x4061d5
  4061b5:	je     0x40621f
  4061b7:	and    BYTE PTR gs:[rcx+0x6e],ch
  4061bb:	jae    0x406231
  4061bd:	(bad)  
  4061be:	ins    BYTE PTR es:[rdi],dx
  4061bf:	ins    BYTE PTR es:[rdi],dx
  4061c0:	gs and BYTE PTR fs:[rax],ch
  4061c4:	outs   dx,BYTE PTR ds:[rsi]
  4061c5:	outs   dx,DWORD PTR ds:[rsi]
  4061c6:	outs   dx,BYTE PTR ds:[rsi]
  4061c7:	sub    eax,0x6f6c6572
  4061cc:	movsxd esp,DWORD PTR [rcx+0x74]
  4061cf:	(bad)  
  4061d0:	(bad)  
  4061d1:	ins    BYTE PTR es:[rdi],dx
  4061d2:	sub    DWORD PTR gs:[rax],esp
  4061d5:	jae    0x40623a
  4061d7:	push   0x73616d65
  4061dc:	add    BYTE PTR [rcx+rbp*2+0x73],ch
  4061e0:	je     0x40620f
  4061e2:	jb     0x406249
  4061e4:	ins    BYTE PTR es:[rdi],dx
  4061e5:	outs   dx,DWORD PTR ds:[rsi]
  4061e6:	movsxd esp,DWORD PTR [rcx+0x74]
  4061e9:	(bad)  
  4061ea:	(bad)  
  4061eb:	ins    BYTE PTR es:[rdi],dx
  4061ec:	gs sub eax,0x65686373
  4061f2:	ins    DWORD PTR es:[rdi],dx
  4061f3:	(bad)  
  4061f4:	jae    0x4061f6
  4061f6:	add    BYTE PTR [rax],al
  4061f8:	imul   r14,QWORD PTR [rbx+0x74],0x65687420
  406200:	and    BYTE PTR [rcx+0x6e],ch
  406203:	jae    0x406279
  406205:	(bad)  
  406206:	ins    BYTE PTR es:[rdi],dx
  406207:	ins    BYTE PTR es:[rdi],dx
  406208:	gs and BYTE PTR fs:[rdx+0x65],dh
  40620d:	ins    BYTE PTR es:[rdi],dx
  40620e:	outs   dx,DWORD PTR ds:[rsi]
  40620f:	movsxd esp,DWORD PTR [rcx+0x74]
  406212:	(bad)  
  406213:	(bad)  
  406214:	ins    BYTE PTR es:[rdi],dx
  406215:	and    BYTE PTR gs:[rbx+0x63],dh
  406219:	push   0x73616d65
  40621e:	add    BYTE PTR [rcx+rbp*2+0x73],ch
  406222:	je     0x406251
  406224:	imul   esp,DWORD PTR [rbp+0x79],0x73
  406228:	add    BYTE PTR [rcx+rbp*2+0x73],cl
  40622c:	je     0x40624e
  40622e:	je     0x406298
  406230:	and    BYTE PTR gs:[rbx+0x65],ch
  406234:	jns    0x4062a9
  406236:	and    BYTE PTR [rcx+0x6e],ch
  406239:	and    BYTE PTR [rbx+0x43],dl
  40623c:	rex.W
  40623d:	rex.RB
  40623e:	rex.WRB
  40623f:	add    BYTE PTR [r9+rbp*2+0x73],bpl
  406244:	je     0x406273
  406246:	movsxd ebp,DWORD PTR [rax+0x69]
  406249:	ins    BYTE PTR es:[rdi],dx
  40624a:	fs jb  0x4062b2
  40624d:	outs   dx,BYTE PTR ds:[rsi]
  40624e:	add    BYTE PTR [rcx+rbp*2+0x73],cl
  406252:	je     0x406274
  406254:	je     0x4062be
  406256:	and    BYTE PTR gs:[rbx+0x68],ah
  40625a:	imul   ebp,DWORD PTR [rsp+riz*2+0x72],0x6f206e65
  406262:	data16 and BYTE PTR [rbx+0x43],dl
  406266:	rex.W
  406267:	rex.RB
  406268:	rex.WRB
  406269:	add    BYTE PTR [r9+rbp*2+0x73],bpl
  40626e:	je     0x40629d
  406270:	jb     0x4062d7
  406272:	movsxd esi,DWORD PTR [rbp+0x72]
  406275:	jae    0x4062e0
  406277:	jbe    0x4062de
  406279:	ins    BYTE PTR es:[rdi],dx
  40627a:	jns    0x40627c
  40627c:	add    BYTE PTR [rax],al
  40627e:	add    BYTE PTR [rax],al
  406280:	imul   r14,QWORD PTR [rbx+0x74],0x79656b20
  406288:	jae    0x4062aa
  40628a:	(bad)  
  40628b:	outs   dx,BYTE PTR ds:[rsi]
  40628c:	and    BYTE PTR fs:[rsi+0x61],dh
  406290:	ins    BYTE PTR es:[rdi],dx
  406291:	jne    0x4062f8
  406293:	jae    0x4062c1
  406295:	and    BYTE PTR [rdx+0x65],dh
  406298:	movsxd esi,DWORD PTR [rbp+0x72]
  40629b:	jae    0x406306
  40629d:	jbe    0x406304
  40629f:	ins    BYTE PTR es:[rdi],dx
  4062a0:	jns    0x4062ac
  4062a2:	rex.WB
  4062a3:	data16 and BYTE PTR [rsi+0x6f],ch
  4062a7:	and    BYTE PTR [rbx+0x43],dl
  4062aa:	rex.W
  4062ab:	rex.RB
  4062ac:	rex.WRB
  4062ad:	and    BYTE PTR [r9+0x73],bpl
  4062b1:	and    BYTE PTR [rdi+0x69],ah
  4062b4:	jbe    0x40631b
  4062b6:	outs   dx,BYTE PTR ds:[rsi]
  4062b7:	sub    al,0x20
  4062b9:	ins    BYTE PTR es:[rdi],dx
  4062ba:	imul   esi,DWORD PTR [rbx+0x74],0x6c6c6120
  4062c1:	and    BYTE PTR [rbx+0x65],ch
  4062c4:	jns    0x406339
  4062c6:	or     al,BYTE PTR [rax]
  4062c8:	addr32 gs je 0x4062cc
  4062cc:	rex.RXB
  4062cd:	gs je  0x4062f0
  4062d0:	je     0x40633a
  4062d2:	and    BYTE PTR gs:[rsi+0x61],dh
  4062d6:	ins    BYTE PTR es:[rdi],dx
  4062d7:	jne    0x40633e
  4062d9:	and    BYTE PTR [rdi+0x66],ch
  4062dc:	and    BYTE PTR [rbx+0x45],cl
  4062df:	pop    rcx
	...
  4062e8:	push   rcx
  4062e9:	jne    0x406350
  4062eb:	jb     0x406366
  4062ed:	and    BYTE PTR [rax+rbp*2+0x65],dh
  4062f1:	and    BYTE PTR [rdx+0x61],dh
  4062f4:	outs   dx,BYTE PTR ds:[rsi]
  4062f5:	and    BYTE PTR gs:[edi+0x66],ch
  4062fa:	and    BYTE PTR [rsi+0x61],dh
  4062fd:	ins    BYTE PTR es:[rdi],dx
  4062fe:	imul   esp,DWORD PTR [rax+riz*1+0x76],0x65756c61
  406306:	jae    0x406328
  406308:	outs   dx,WORD PTR ds:[rsi]
  40630a:	jb     0x40632c
  40630c:	rex.WXB
  40630d:	rex.RB pop r9
  40630f:	add    BYTE PTR [rbx+0x65],dh
  406312:	je     0x406314
  406314:	push   rbx
  406315:	gs je  0x406338
  406318:	je     0x406382
  40631a:	and    BYTE PTR gs:[rsi+0x61],dh
  40631e:	ins    BYTE PTR es:[rdi],dx
  40631f:	jne    0x406386
  406321:	and    BYTE PTR [rdi+0x66],ch
  406324:	and    BYTE PTR [rbx+0x45],cl
  406327:	pop    rcx
  406328:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40632c:	push   rsi
  40632d:	rex.B
  40632e:	rex.WR push rbp
  406330:	add    BYTE PTR [r10+0x65],r14b
  406334:	jae    0x40639b
  406336:	je     0x406338
  406338:	push   rdx
  406339:	gs jae 0x4063a1
  40633c:	je     0x40635e
  40633e:	rex.WXB
  40633f:	rex.RB pop r9
  406341:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  406345:	imul   esi,DWORD PTR [rbx+rsi*2+0x20],0x61666564
  40634d:	jne    0x4063bb
  40634f:	je     0x406371
  406351:	jbe    0x4063b4
  406353:	ins    BYTE PTR es:[rdi],dx
  406354:	jne    0x4063bb
  406356:	add    BYTE PTR [rdx+0x65],dh
  406359:	jae    0x4063c0
  40635b:	je     0x40638a
  40635d:	jb     0x4063c4
  40635f:	movsxd esi,DWORD PTR [rbp+0x72]
  406362:	jae    0x4063cd
  406364:	jbe    0x4063cb
  406366:	ins    BYTE PTR es:[rdi],dx
  406367:	jns    0x406369
  406369:	add    BYTE PTR [rax],al
  40636b:	add    BYTE PTR [rax],al
  40636d:	add    BYTE PTR [rax],al
  40636f:	add    BYTE PTR [rdx+0x65],dl
  406372:	jae    0x4063d9
  406374:	je     0x406396
  406376:	(bad)  
  406377:	ins    BYTE PTR es:[rdi],dx
  406378:	ins    BYTE PTR es:[rdi],dx
  406379:	and    BYTE PTR [rbx+0x65],ch
  40637c:	jns    0x4063f1
  40637e:	and    BYTE PTR [rcx+0x6e],ch
  406381:	and    BYTE PTR [rbx+0x43],dl
  406384:	rex.W
  406385:	rex.RB
  406386:	rex.WRB
  406387:	and    BYTE PTR [r15+rbp*2+0x20],sil
  40638c:	je     0x4063f6
  40638e:	imul   esi,DWORD PTR gs:[rdx+0x20],0x61666564
  406396:	jne    0x406404
  406398:	je     0x40640d
  40639a:	add    BYTE PTR [rdi+0x72],dh
  40639d:	imul   esi,DWORD PTR [rcx+riz*2+0x62],0x4300656c
  4063a5:	push   0x206b6365
  4063aa:	imul   esp,DWORD PTR [rsi+0x20],0x2059454b
  4063b1:	imul   esi,DWORD PTR [rbx+0x20],0x74697277
  4063b8:	(bad)  
  4063b9:	(bad)  
  4063ba:	ins    BYTE PTR es:[rdi],dx
  4063bb:	add    BYTE PTR gs:[rbp+0x6f],ch
  4063bf:	outs   dx,BYTE PTR ds:[rsi]
  4063c0:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x0
  4063c8:	rex.WRB outs dx,DWORD PTR ds:[rsi]
  4063ca:	outs   dx,BYTE PTR ds:[rsi]
  4063cb:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x59454b20
  4063d3:	and    BYTE PTR [rsi+0x6f],ah
  4063d6:	jb     0x4063f8
  4063d8:	movsxd ebp,DWORD PTR [rax+0x61]
  4063db:	outs   dx,BYTE PTR ds:[rsi]
  4063dc:	addr32 gs jae 0x40640e
  4063e0:	or     cl,BYTE PTR [rcx+0x66]
  4063e3:	and    BYTE PTR [rsi+0x6f],ch
  4063e6:	and    BYTE PTR [rbx+0x45],cl
  4063e9:	pop    rcx
  4063ea:	and    BYTE PTR [rcx+0x73],ch
  4063ed:	and    BYTE PTR [rbx+0x70],dh
  4063f0:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  4063f4:	imul   esp,DWORD PTR [rbp+0x64],0x6f6d202c
  4063fb:	outs   dx,BYTE PTR ds:[rsi]
  4063fc:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x6c6c6120
  406404:	and    BYTE PTR [rbx+0x65],ch
  406407:	jns    0x40647c
  406409:	and    BYTE PTR [rcx+0x6e],ch
  40640c:	and    BYTE PTR [rbx+0x43],dl
  40640f:	rex.W
  406410:	rex.RB
  406411:	rex.WRB
  406412:	rex.B
  406413:	or     dl,BYTE PTR cs:[rbp+0x73]
  406417:	and    BYTE PTR gs:[rsi+0x43],bl
  40641b:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40641f:	jae    0x406495
  406421:	outs   dx,DWORD PTR ds:[rsi]
  406422:	jo     0x406444
  406424:	ins    DWORD PTR es:[rdi],dx
  406425:	outs   dx,DWORD PTR ds:[rsi]
  406426:	outs   dx,BYTE PTR ds:[rsi]
  406427:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x2e676e69
  40642f:	or     al,BYTE PTR [rax]
  406431:	push   rbp
  406432:	outs   dx,BYTE PTR ds:[rsi]
  406433:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  406437:	outs   dx,BYTE PTR ds:[rsi]
  406438:	and    BYTE PTR [rbx+0x6f],ah
  40643b:	ins    DWORD PTR es:[rdi],dx
  40643c:	ins    DWORD PTR es:[rdi],dx
  40643d:	(bad)  
  40643e:	outs   dx,BYTE PTR ds:[rsi]
  40643f:	and    BYTE PTR fs:[rip+0xa0a73],ah        # 0x4a6eb9
  406446:	add    BYTE PTR [rax],al
  406448:	push   rbp
  406449:	jae    0x4064ac
  40644b:	cmp    cl,BYTE PTR gs:[edx]
  40644f:	and    BYTE PTR [rax],ah
  406451:	addr32 jae 0x4064b9
  406454:	je     0x4064ca
  406456:	imul   ebp,DWORD PTR [rsi+0x67],0x2d5b2073
  40645d:	sub    eax,0x65686373
  406462:	ins    DWORD PTR es:[rdi],dx
  406463:	(bad)  
  406464:	imul   esi,DWORD PTR fs:[rdx+0x20],0x45484353
  40646c:	rex.WRB
  40646d:	rex.B
  40646e:	rex.R
  40646f:	rex.WB push r10
  406471:	pop    rbp
  406472:	and    BYTE PTR [rip+0x73252073],ah        # 0x736584eb
  406478:	or     cl,BYTE PTR [rdx]
  40647a:	and    eax,0xa0a73
  40647f:	rex.B jb 0x4064e9
  406482:	jne    0x4064f1
  406484:	outs   dx,BYTE PTR gs:[rsi]
  406486:	je     0x4064fb
  406488:	cmp    cl,BYTE PTR [rdx]
  40648a:	add    BYTE PTR [rax],al
  40648c:	add    BYTE PTR [rax],al
  40648e:	add    BYTE PTR [rax],al
  406490:	and    BYTE PTR [rax],ah
  406492:	push   rbx
  406493:	rex.XB
  406494:	rex.W
  406495:	rex.RB
  406496:	rex.WRB
  406497:	rex.B
  406498:	rex.R
  406499:	rex.WB push r10
  40649b:	and    BYTE PTR [rcx+0x20],al
  40649e:	imul   esi,DWORD PTR fs:[rdx+0x65],0x726f7463
  4064a6:	jns    0x4064c8
  4064a8:	je     0x406519
  4064aa:	and    BYTE PTR [rbx+0x65],dh
  4064ad:	(bad)  
  4064ae:	jb     0x406513
  4064b0:	push   0x726f6620
  4064b5:	and    BYTE PTR [rcx+0x64],ah
  4064b8:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x206c616e
  4064c1:	jae    0x406526
  4064c3:	push   0x73616d65
  4064c8:	or     al,BYTE PTR [rax]
  4064ca:	add    BYTE PTR [rax],al
  4064cc:	add    BYTE PTR [rax],al
  4064ce:	add    BYTE PTR [rax],al
  4064d0:	and    BYTE PTR [rax],ah
  4064d2:	rex.XB
  4064d3:	rex.WRXB
  4064d4:	rex.WRB
  4064d5:	rex.WRB
  4064d6:	rex.B
  4064d7:	rex.WRX
  4064d8:	and    BYTE PTR [rax],r12b
  4064db:	and    BYTE PTR [rax+rbp*2+0x65],dl
  4064df:	and    BYTE PTR [rax],ch
  4064e1:	outs   dx,DWORD PTR ds:[rsi]
  4064e2:	jo     0x406558
  4064e4:	imul   ebp,DWORD PTR [rdi+0x6e],0x20296c61
  4064eb:	movsxd ebp,DWORD PTR [rdi+0x6d]
  4064ee:	ins    DWORD PTR es:[rdi],dx
  4064ef:	(bad)  
  4064f0:	outs   dx,BYTE PTR ds:[rsi]
  4064f1:	and    BYTE PTR fs:[rdi+rbp*2+0x20],dh
  4064f6:	gs js  0x406569
  4064f9:	ins    BYTE PTR es:[rdi],dx
  4064fa:	(bad)  
  4064fb:	imul   ebp,DWORD PTR [rsi+0xa],0x48435300
  406502:	rex.RB
  406503:	rex.WRB
  406504:	add    BYTE PTR [r8],al
  406507:	add    BYTE PTR [rax],ah
  406509:	and    BYTE PTR [rbx+0x43],dl
  40650c:	rex.W
  40650d:	rex.RB
  40650e:	rex.WRB
  40650f:	and    BYTE PTR [r8],spl
  406512:	and    BYTE PTR [rax],ah
  406514:	push   rsp
  406515:	push   0x616e2065
  40651a:	ins    DWORD PTR es:[rdi],dx
  40651b:	and    BYTE PTR gs:[rdi+0x66],ch
  40651f:	and    BYTE PTR [rax+rbp*2+0x65],dh
  406523:	and    BYTE PTR [rbx+0x63],dh
  406526:	push   0xa616d65
  40652b:	and    BYTE PTR [rax],ah
  40652d:	push   rax
  40652e:	push   r12
  406530:	rex.W and BYTE PTR [rax],spl
  406533:	and    BYTE PTR [rax],ah
  406535:	and    BYTE PTR [rax],ah
  406537:	push   rsp
  406538:	push   0x61702065
  40653d:	je     0x4065a7
  40653f:	sub    al,0x20
  406541:	outs   dx,WORD PTR ds:[rsi]
  406543:	jb     0x406565
  406545:	jb     0x4065ac
  406547:	ins    BYTE PTR es:[rdi],dx
  406548:	outs   dx,DWORD PTR ds:[rsi]
  406549:	movsxd esp,DWORD PTR [rcx+0x74]
  40654c:	(bad)  
  40654d:	(bad)  
  40654e:	ins    BYTE PTR es:[rdi],dx
  40654f:	and    BYTE PTR gs:[rbx+0x63],dh
  406553:	push   0x73616d65
  406558:	or     al,BYTE PTR [rax]
  40655a:	pop    rbx
  40655b:	rex.WXB
  40655c:	rex.RB pop r9
  40655e:	pop    rbp
  40655f:	add    BYTE PTR [rax],ah
  406561:	and    BYTE PTR [rbx+0x45],cl
  406564:	pop    rcx
  406565:	and    BYTE PTR [rax],ah
  406567:	and    BYTE PTR [rax],ah
  406569:	and    BYTE PTR [rax],ah
  40656b:	and    BYTE PTR [rax+rbp*2+0x65],dl
  40656f:	and    BYTE PTR [rax],ch
  406571:	outs   dx,DWORD PTR ds:[rsi]
  406572:	jo     0x4065e8
  406574:	imul   ebp,DWORD PTR [rdi+0x6e],0x20296c61
  40657b:	imul   esp,DWORD PTR [rbp+0x79],0x20
  40657f:	ja     0x4065ea
  406581:	je     0x4065eb
  406583:	imul   ebp,DWORD PTR [rsi+0x20],0x20656874
  40658a:	jae    0x4065ef
  40658c:	push   0xa616d65
  406591:	add    BYTE PTR [rbx+0x45],cl
  406594:	pop    rcx
  406595:	add    BYTE PTR [rax],al
  406597:	add    BYTE PTR [rax],ah
  406599:	and    BYTE PTR [rbx+0x45],cl
  40659c:	pop    rcx
  40659d:	and    BYTE PTR [rax],ah
  40659f:	and    BYTE PTR [rax],ah
  4065a1:	and    BYTE PTR [rax],ah
  4065a3:	and    BYTE PTR [rax+rbp*2+0x65],dl
  4065a7:	and    BYTE PTR [rbx+0x65],ch
  4065aa:	jns    0x4065cc
  4065ac:	ja     0x406617
  4065ae:	je     0x406618
  4065b0:	imul   ebp,DWORD PTR [rsi+0x20],0x20656874
  4065b7:	jae    0x40661c
  4065b9:	push   0xa616d65
  4065be:	add    BYTE PTR [rsi+0x41],dl
  4065c1:	rex.WR push rbp
  4065c3:	add    BYTE PTR [r8],r12b
  4065c6:	and    BYTE PTR [rsi+0x41],dl
  4065c9:	rex.WR push rbp
  4065cb:	and    BYTE PTR [r8],r12b
  4065ce:	and    BYTE PTR [rax],ah
  4065d0:	and    BYTE PTR [rax+rbp*2+0x65],dl
  4065d4:	and    BYTE PTR [rsi+0x61],dh
  4065d7:	ins    BYTE PTR es:[rdi],dx
  4065d8:	jne    0x40663f
  4065da:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  4065de:	jae    0x406645
  4065e0:	je     0x4065ec
  4065e2:	add    BYTE PTR [rdx],cl
  4065e4:	add    BYTE PTR [rax],al
  4065e6:	add    BYTE PTR [rax],al
  4065e8:	push   rbp
  4065e9:	jae    0x40664c
  4065eb:	cmp    cl,BYTE PTR gs:[edx]
  4065ef:	and    BYTE PTR [rax],ah
  4065f1:	addr32 jae 0x406659
  4065f4:	je     0x40666a
  4065f6:	imul   ebp,DWORD PTR [rsi+0x67],0x2d2d2073
  4065fd:	jbe    0x406664
  4065ff:	jb     0x406674
  406601:	imul   ebp,DWORD PTR [rdi+0x6e],0x6720200a
  406608:	jae    0x40666f
  40660a:	je     0x406680
  40660c:	imul   ebp,DWORD PTR [rsi+0x67],0x2d5b2073
  406613:	sub    eax,0x65686373
  406618:	ins    DWORD PTR es:[rdi],dx
  406619:	(bad)  
  40661a:	imul   esi,DWORD PTR fs:[rdx+0x20],0x45484353
  406622:	rex.WRB
  406623:	rex.B
  406624:	rex.R
  406625:	rex.WB push r10
  406627:	pop    rbp
  406628:	and    BYTE PTR [rbx+0x4f],al
  40662b:	rex.WRB
  40662c:	rex.WRB
  40662d:	rex.B
  40662e:	rex.WRX
  40662f:	and    BYTE PTR [rbx+0x41],r11b
  406633:	push   rdx
  406634:	rex.RXB push r11
  406636:	cs cs cs pop rbp
  40663a:	or     cl,BYTE PTR [rdx]
  40663c:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40663e:	ins    DWORD PTR es:[rdi],dx
  40663f:	ins    DWORD PTR es:[rdi],dx
  406640:	(bad)  
  406641:	outs   dx,BYTE PTR ds:[rsi]
  406642:	fs jae 0x40667f
  406645:	or     ah,BYTE PTR [rax]
  406647:	and    BYTE PTR [rax+0x65],ch
  40664a:	ins    BYTE PTR es:[rdi],dx
  40664b:	jo     0x40666d
  40664d:	and    BYTE PTR [rax],ah
  40664f:	and    BYTE PTR [rax],ah
  406651:	and    BYTE PTR [rax],ah
  406653:	and    BYTE PTR [rax],ah
  406655:	and    BYTE PTR [rax],ah
  406657:	and    BYTE PTR [rax],ah
  406659:	and    BYTE PTR [rax],ah
  40665b:	and    BYTE PTR [rax],ah
  40665d:	and    BYTE PTR [rax],ah
  40665f:	and    BYTE PTR [rax],ah
  406661:	and    BYTE PTR [rbx+0x68],dl
  406664:	outs   dx,DWORD PTR ds:[rsi]
  406665:	ja     0x406687
  406667:	je     0x4066d1
  406669:	imul   esi,DWORD PTR [rbx+0x20],0x6f666e69
  406670:	jb     0x4066df
  406672:	(bad)  
  406673:	je     0x4066de
  406675:	outs   dx,DWORD PTR ds:[rsi]
  406676:	outs   dx,BYTE PTR ds:[rsi]
  406677:	or     ah,BYTE PTR [rax]
  406679:	and    BYTE PTR [rcx+rbp*2+0x73],ch
  40667d:	je     0x4066ac
  40667f:	jae    0x4066e4
  406681:	push   0x73616d65
  406686:	and    BYTE PTR [rax],ah
  406688:	and    BYTE PTR [rax],ah
  40668a:	and    BYTE PTR [rax],ah
  40668c:	and    BYTE PTR [rax],ah
  40668e:	and    BYTE PTR [rax],ah
  406690:	and    BYTE PTR [rax],ah
  406692:	and    BYTE PTR [rax],ah
  406694:	imul   r14,QWORD PTR [rbx+0x74],0x736e6920
  40669c:	je     0x4066ff
  40669e:	ins    BYTE PTR es:[rdi],dx
  40669f:	ins    BYTE PTR es:[rdi],dx
  4066a0:	gs and BYTE PTR fs:[rbx+0x63],dh
  4066a5:	push   0x73616d65
  4066aa:	or     ah,BYTE PTR [rax]
  4066ac:	and    BYTE PTR [rcx+rbp*2+0x73],ch
  4066b0:	je     0x4066df
  4066b2:	jb     0x406719
  4066b4:	ins    BYTE PTR es:[rdi],dx
  4066b5:	outs   dx,DWORD PTR ds:[rsi]
  4066b6:	movsxd esp,DWORD PTR [rcx+0x74]
  4066b9:	(bad)  
  4066ba:	(bad)  
  4066bb:	ins    BYTE PTR es:[rdi],dx
  4066bc:	gs sub eax,0x65686373
  4066c2:	ins    DWORD PTR es:[rdi],dx
  4066c3:	(bad)  
  4066c4:	jae    0x4066e6
  4066c6:	and    BYTE PTR [rcx+rbp*2+0x73],cl
  4066ca:	je     0x4066ec
  4066cc:	jb     0x406733
  4066ce:	ins    BYTE PTR es:[rdi],dx
  4066cf:	outs   dx,DWORD PTR ds:[rsi]
  4066d0:	movsxd esp,DWORD PTR [rcx+0x74]
  4066d3:	(bad)  
  4066d4:	(bad)  
  4066d5:	ins    BYTE PTR es:[rdi],dx
  4066d6:	and    BYTE PTR gs:[rbx+0x63],dh
  4066da:	push   0x73616d65
  4066df:	or     ah,BYTE PTR [rax]
  4066e1:	and    BYTE PTR [rcx+rbp*2+0x73],ch
  4066e5:	je     0x406714
  4066e7:	imul   esp,DWORD PTR [rbp+0x79],0x73
  4066eb:	and    BYTE PTR [rax],ah
  4066ed:	and    BYTE PTR [rax],ah
  4066ef:	and    BYTE PTR [rax],ah
  4066f1:	and    BYTE PTR [rax],ah
  4066f3:	and    BYTE PTR [rax],ah
  4066f5:	and    BYTE PTR [rax],ah
  4066f7:	and    BYTE PTR [rax],ah
  4066f9:	and    BYTE PTR [rax],ah
  4066fb:	and    BYTE PTR [rcx+rbp*2+0x73],cl
  4066ff:	je     0x406721
  406701:	imul   esp,DWORD PTR [rbp+0x79],0x73
  406705:	and    BYTE PTR [rcx+0x6e],ch
  406708:	and    BYTE PTR [rcx+0x20],ah
  40670b:	jae    0x406770
  40670d:	push   0xa616d65
  406712:	and    BYTE PTR [rax],ah
  406714:	ins    BYTE PTR es:[rdi],dx
  406715:	imul   esi,DWORD PTR [rbx+0x74],0x6968632d
  40671c:	ins    BYTE PTR es:[rdi],dx
  40671d:	fs jb  0x406785
  406720:	outs   dx,BYTE PTR ds:[rsi]
  406721:	and    BYTE PTR [rax],ah
  406723:	and    BYTE PTR [rax],ah
  406725:	and    BYTE PTR [rax],ah
  406727:	and    BYTE PTR [rax],ah
  406729:	and    BYTE PTR [rax],ah
  40672b:	and    BYTE PTR [rax],ah
  40672d:	and    BYTE PTR [rcx+rbp*2+0x73],cl
  406731:	je     0x406753
  406733:	movsxd ebp,DWORD PTR [rax+0x69]
  406736:	ins    BYTE PTR es:[rdi],dx
  406737:	fs jb  0x40679f
  40673a:	outs   dx,BYTE PTR ds:[rsi]
  40673b:	and    BYTE PTR [rdi+0x66],ch
  40673e:	and    BYTE PTR [rcx+0x20],ah
  406741:	jae    0x4067a6
  406743:	push   0xa616d65
  406748:	and    BYTE PTR [rax],ah
  40674a:	ins    BYTE PTR es:[rdi],dx
  40674b:	imul   esi,DWORD PTR [rbx+0x74],0x6365722d
  406752:	jne    0x4067c6
  406754:	jae    0x4067bf
  406756:	jbe    0x4067bd
  406758:	ins    BYTE PTR es:[rdi],dx
  406759:	jns    0x40677b
  40675b:	and    BYTE PTR [rax],ah
  40675d:	and    BYTE PTR [rax],ah
  40675f:	and    BYTE PTR [rax],ah
  406761:	and    BYTE PTR [rax],ah
  406763:	and    BYTE PTR [rcx+rbp*2+0x73],cl
  406767:	je     0x406789
  406769:	imul   esp,DWORD PTR [rbp+0x79],0x73
  40676d:	and    BYTE PTR [rcx+0x6e],ah
  406770:	and    BYTE PTR fs:[rsi+0x61],dh
  406774:	ins    BYTE PTR es:[rdi],dx
  406775:	jne    0x4067dc
  406777:	jae    0x4067a5
  406779:	and    BYTE PTR [rdx+0x65],dh
  40677c:	movsxd esi,DWORD PTR [rbp+0x72]
  40677f:	jae    0x4067ea
  406781:	jbe    0x4067e8
  406783:	ins    BYTE PTR es:[rdi],dx
  406784:	jns    0x406790
  406786:	and    BYTE PTR [rax],ah
  406788:	jb     0x4067eb
  40678a:	outs   dx,BYTE PTR ds:[rsi]
  40678b:	and    BYTE PTR gs:[eax],ah
  40678f:	and    BYTE PTR [rax],ah
  406791:	and    BYTE PTR [rax],ah
  406793:	and    BYTE PTR [rax],ah
  406795:	and    BYTE PTR [rax],ah
  406797:	and    BYTE PTR [rax],ah
  406799:	and    BYTE PTR [rax],ah
  40679b:	and    BYTE PTR [rax],ah
  40679d:	and    BYTE PTR [rax],ah
  40679f:	and    BYTE PTR [rax],ah
  4067a1:	and    BYTE PTR [rcx+0x75],dl
  4067a4:	gs jb  0x406810
  4067a7:	gs jae 0x4067ca
  4067aa:	je     0x406814
  4067ac:	and    BYTE PTR gs:[rdx+0x61],dh
  4067b0:	outs   dx,BYTE PTR ds:[rsi]
  4067b1:	and    BYTE PTR gs:[edi+0x66],ch
  4067b6:	and    BYTE PTR [rcx+0x20],ah
  4067b9:	imul   esp,DWORD PTR [rbp+0x79],0xa
  4067bd:	and    BYTE PTR [rax],ah
  4067bf:	addr32 gs je 0x4067e3
  4067c3:	and    BYTE PTR [rax],ah
  4067c5:	and    BYTE PTR [rax],ah
  4067c7:	and    BYTE PTR [rax],ah
  4067c9:	and    BYTE PTR [rax],ah
  4067cb:	and    BYTE PTR [rax],ah
  4067cd:	and    BYTE PTR [rax],ah
  4067cf:	and    BYTE PTR [rax],ah
  4067d1:	and    BYTE PTR [rax],ah
  4067d3:	and    BYTE PTR [rax],ah
  4067d5:	and    BYTE PTR [rax],ah
  4067d7:	and    BYTE PTR [rax],ah
  4067d9:	rex.RXB
  4067da:	gs je  0x4067fd
  4067dd:	je     0x406847
  4067df:	and    BYTE PTR gs:[rsi+0x61],dh
  4067e3:	ins    BYTE PTR es:[rdi],dx
  4067e4:	jne    0x40684b
  4067e6:	and    BYTE PTR [rdi+0x66],ch
  4067e9:	and    BYTE PTR [rcx+0x20],ah
  4067ec:	imul   esp,DWORD PTR [rbp+0x79],0xa
  4067f0:	and    BYTE PTR [rax],ah
  4067f2:	jae    0x406859
  4067f4:	je     0x406816
  4067f6:	and    BYTE PTR [rax],ah
  4067f8:	and    BYTE PTR [rax],ah
  4067fa:	and    BYTE PTR [rax],ah
  4067fc:	and    BYTE PTR [rax],ah
  4067fe:	and    BYTE PTR [rax],ah
  406800:	and    BYTE PTR [rax],ah
  406802:	and    BYTE PTR [rax],ah
  406804:	and    BYTE PTR [rax],ah
  406806:	and    BYTE PTR [rax],ah
  406808:	and    BYTE PTR [rax],ah
  40680a:	and    BYTE PTR [rax],ah
  40680c:	push   rbx
  40680d:	gs je  0x406830
  406810:	je     0x40687a
  406812:	and    BYTE PTR gs:[rsi+0x61],dh
  406816:	ins    BYTE PTR es:[rdi],dx
  406817:	jne    0x40687e
  406819:	and    BYTE PTR [rdi+0x66],ch
  40681c:	and    BYTE PTR [rcx+0x20],ah
  40681f:	imul   esp,DWORD PTR [rbp+0x79],0xa
  406823:	and    BYTE PTR [rax],ah
  406825:	jb     0x40688c
  406827:	jae    0x40688e
  406829:	je     0x40684b
  40682b:	and    BYTE PTR [rax],ah
  40682d:	and    BYTE PTR [rax],ah
  40682f:	and    BYTE PTR [rax],ah
  406831:	and    BYTE PTR [rax],ah
  406833:	and    BYTE PTR [rax],ah
  406835:	and    BYTE PTR [rax],ah
  406837:	and    BYTE PTR [rax],ah
  406839:	and    BYTE PTR [rax],ah
  40683b:	and    BYTE PTR [rax],ah
  40683d:	and    BYTE PTR [rax],ah
  40683f:	push   rdx
  406840:	gs jae 0x4068a8
  406843:	je     0x406865
  406845:	je     0x4068af
  406847:	and    BYTE PTR gs:[rsi+0x61],dh
  40684b:	ins    BYTE PTR es:[rdi],dx
  40684c:	jne    0x4068b3
  40684e:	and    BYTE PTR [rdi+0x66],ch
  406851:	and    BYTE PTR [rcx+0x20],ah
  406854:	imul   esp,DWORD PTR [rbp+0x79],0xa
  406858:	and    BYTE PTR [rax],ah
  40685a:	jb     0x4068c1
  40685c:	jae    0x4068c3
  40685e:	je     0x40688d
  406860:	jb     0x4068c7
  406862:	movsxd esi,DWORD PTR [rbp+0x72]
  406865:	jae    0x4068d0
  406867:	jbe    0x4068ce
  406869:	ins    BYTE PTR es:[rdi],dx
  40686a:	jns    0x40688c
  40686c:	and    BYTE PTR [rax],ah
  40686e:	and    BYTE PTR [rax],ah
  406870:	and    BYTE PTR [rax],ah
  406872:	and    BYTE PTR [rax],ah
  406874:	push   rdx
  406875:	gs jae 0x4068dd
  406878:	je     0x40689a
  40687a:	(bad)  
  40687b:	ins    BYTE PTR es:[rdi],dx
  40687c:	ins    BYTE PTR es:[rdi],dx
  40687d:	and    BYTE PTR [rsi+0x61],dh
  406880:	ins    BYTE PTR es:[rdi],dx
  406881:	jne    0x4068e8
  406883:	jae    0x4068a5
  406885:	imul   ebp,DWORD PTR [rsi+0x20],0x69672061
  40688c:	jbe    0x4068f3
  40688e:	outs   dx,BYTE PTR ds:[rsi]
  40688f:	and    BYTE PTR [rbx+0x63],dh
  406892:	push   0xa616d65
  406897:	and    BYTE PTR [rax],ah
  406899:	ja     0x40690d
  40689b:	imul   esi,DWORD PTR [rcx+riz*2+0x62],0x2020656c
  4068a3:	and    BYTE PTR [rax],ah
  4068a5:	and    BYTE PTR [rax],ah
  4068a7:	and    BYTE PTR [rax],ah
  4068a9:	and    BYTE PTR [rax],ah
  4068ab:	and    BYTE PTR [rax],ah
  4068ad:	and    BYTE PTR [rax],ah
  4068af:	and    BYTE PTR [rax],ah
  4068b1:	and    BYTE PTR [rax],ah
  4068b3:	rex.XB push 0x206b6365
  4068b9:	imul   esp,DWORD PTR [rsi+0x20],0x656b2061
  4068c0:	jns    0x4068e2
  4068c2:	imul   esi,DWORD PTR [rbx+0x20],0x74697277
  4068c9:	(bad)  
  4068ca:	(bad)  
  4068cb:	ins    BYTE PTR es:[rdi],dx
  4068cc:	or     ah,BYTE PTR gs:[rax]
  4068cf:	and    BYTE PTR [rbp+0x6f],ch
  4068d2:	outs   dx,BYTE PTR ds:[rsi]
  4068d3:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x20202020
  4068db:	and    BYTE PTR [rax],ah
  4068dd:	and    BYTE PTR [rax],ah
  4068df:	and    BYTE PTR [rax],ah
  4068e1:	and    BYTE PTR [rax],ah
  4068e3:	and    BYTE PTR [rax],ah
  4068e5:	and    BYTE PTR [rax],ah
  4068e7:	and    BYTE PTR [rax],ah
  4068e9:	and    BYTE PTR [rdi+0x61],dl
  4068ec:	je     0x406951
  4068ee:	push   0x726f6620
  4068f3:	and    BYTE PTR [rbx+0x68],ah
  4068f6:	(bad)  
  4068f7:	outs   dx,BYTE PTR ds:[rsi]
  4068f8:	addr32 gs jae 0x406906
  4068fc:	or     dl,BYTE PTR [rbp+0x73]
  4068ff:	and    BYTE PTR gs:[rdi],ah
  406902:	addr32 jae 0x40696a
  406905:	je     0x40697b
  406907:	imul   ebp,DWORD PTR [rsi+0x67],0x65682073
  40690e:	ins    BYTE PTR es:[rdi],dx
  40690f:	jo     0x406931
  406911:	rex.XB
  406912:	rex.WRXB
  406913:	rex.WRB
  406914:	rex.WRB
  406915:	rex.B
  406916:	rex.WRX
  406917:	rex.R (bad) 
  406919:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40691d:	addr32 gs je 0x406941
  406921:	fs gs je 0x406986
  406925:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x6c656820
  40692d:	jo     0x40695d
  40692f:	or     cl,BYTE PTR [rdx]
  406931:	add    BYTE PTR [rsi+0x6f],cl
  406934:	and    BYTE PTR [rbx+0x75],dh
  406937:	movsxd ebp,DWORD PTR [rax+0x20]
  40693a:	jae    0x40699f
  40693c:	push   0x20616d65
  406941:	(bad)  
  406942:	and    eax,0xa2773
  406947:	add    BYTE PTR [rbx+0x63],dl
  40694a:	push   0x20616d65
  40694f:	(bad)  
  406950:	and    eax,0x69202773
  406955:	jae    0x406977
  406957:	outs   dx,BYTE PTR ds:[rsi]
  406958:	outs   dx,DWORD PTR ds:[rsi]
  406959:	je     0x40697b
  40695b:	jb     0x4069c2
  40695d:	ins    BYTE PTR es:[rdi],dx
  40695e:	outs   dx,DWORD PTR ds:[rsi]
  40695f:	movsxd esp,DWORD PTR [rcx+0x74]
  406962:	(bad)  
  406963:	(bad)  
  406964:	ins    BYTE PTR es:[rdi],dx
  406965:	and    BYTE PTR gs:[rax],ch
  406968:	jo     0x4069cb
  40696a:	je     0x4069d4
  40696c:	and    BYTE PTR [rbp+0x75],ch
  40696f:	jae    0x4069e5
  406971:	and    BYTE PTR [rsi+0x6f],ch
  406974:	je     0x406996
  406976:	(bad)  
  406977:	and    BYTE PTR gs:[rbx+0x70],dh
  40697b:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  40697f:	imul   esp,DWORD PTR [rbp+0x64],0x45000a29
  406986:	ins    DWORD PTR es:[rdi],dx
  406987:	jo     0x4069fd
  406989:	jns    0x4069ab
  40698b:	jo     0x4069ee
  40698d:	je     0x4069f7
  40698f:	and    BYTE PTR [rdi+0x69],ah
  406992:	jbe    0x4069f9
  406994:	outs   dx,BYTE PTR ds:[rsi]
  406995:	or     al,BYTE PTR cs:[rax]
  406998:	push   rax
  406999:	(bad)  
  40699a:	je     0x406a04
  40699c:	and    BYTE PTR [rbp+0x75],ch
  40699f:	jae    0x406a15
  4069a1:	and    BYTE PTR [rdx+0x65],ah
  4069a4:	imul   ebp,DWORD PTR [esi+0x20],0x68746977
  4069ac:	and    BYTE PTR [rcx+0x20],ah
  4069af:	jae    0x406a1d
  4069b1:	(bad)  
  4069b2:	jae    0x406a1c
  4069b4:	and    BYTE PTR [rax],ch
  4069b6:	(bad)  
  4069b7:	sub    DWORD PTR [rdx],ecx
  4069b9:	add    BYTE PTR [rdi],ch
  4069bb:	add    BYTE PTR [rax],al
  4069bd:	add    BYTE PTR [rax],al
  4069bf:	add    BYTE PTR [rax+0x61],dl
  4069c2:	je     0x406a2c
  4069c4:	and    BYTE PTR [rbp+0x75],ch
  4069c7:	jae    0x406a3d
  4069c9:	and    BYTE PTR [rbp+0x6e],ah
  4069cc:	and    BYTE PTR fs:[rdi+0x69],dh
  4069d0:	je     0x406a3a
  4069d2:	and    BYTE PTR [rcx+0x20],ah
  4069d5:	jae    0x406a43
  4069d7:	(bad)  
  4069d8:	jae    0x406a42
  4069da:	and    BYTE PTR [rax],ch
  4069dc:	(bad)  
  4069dd:	sub    DWORD PTR [rdx],ecx
  4069df:	add    BYTE PTR [rdi],ch
  4069e1:	(bad)  
  4069e2:	add    BYTE PTR [rax],al
  4069e4:	add    BYTE PTR [rax],al
  4069e6:	add    BYTE PTR [rax],al
  4069e8:	push   rax
  4069e9:	(bad)  
  4069ea:	je     0x406a54
  4069ec:	and    BYTE PTR [rbp+0x75],ch
  4069ef:	jae    0x406a65
  4069f1:	and    BYTE PTR [rsi+0x6f],ch
  4069f4:	je     0x406a16
  4069f6:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4069f9:	je     0x406a5c
  4069fb:	imul   ebp,DWORD PTR [rsi+0x20],0x206f7774
  406a02:	(bad)  
  406a03:	fs push 0x61
  406a06:	movsxd esp,DWORD PTR [rbp+0x6e]
  406a09:	je     0x406a2b
  406a0b:	jae    0x406a79
  406a0d:	(bad)  
  406a0e:	jae    0x406a78
  406a10:	gs jae 0x406a33
  406a13:	sub    BYTE PTR [rdi],ch
  406a15:	(bad)  
  406a16:	sub    DWORD PTR [rdx],ecx
  406a18:	add    BYTE PTR [rdi+0x6c],ah
  406a1b:	imul   esp,DWORD PTR [rdx+0x32],0x54550030
  406a22:	rex.RX sub eax,0x2d2d0038
  406a28:	jae    0x406a8d
  406a2a:	push   0x64616d65
  406a2f:	imul   esi,DWORD PTR [rdx+0x0],0x0
  406a36:	add    BYTE PTR [rax],al
  406a38:	rex.XB outs dx,DWORD PTR ds:[rsi]
  406a3a:	jne    0x406aa8
  406a3c:	and    BYTE PTR fs:[rsi+0x6f],ch
  406a40:	je     0x406a62
  406a42:	ins    BYTE PTR es:[rdi],dx
  406a43:	outs   dx,DWORD PTR ds:[rsi]
  406a44:	(bad)  
  406a45:	and    BYTE PTR fs:[rbx+0x63],dh
  406a49:	push   0x73616d65
  406a4e:	and    BYTE PTR [rsi+0x72],ah
  406a51:	outs   dx,DWORD PTR ds:[rsi]
  406a52:	ins    DWORD PTR es:[rdi],dx
  406a53:	and    BYTE PTR [rip+0x25203a73],ah        # 0x2560a4cc
  406a59:	jae    0x406a65
  406a5b:	add    BYTE PTR [rsi+0x6f],cl
  406a5e:	and    BYTE PTR [rbx+0x63],dh
  406a61:	push   0x73616d65
  406a66:	and    BYTE PTR [rcx+0x6e],ch
  406a69:	jae    0x406adf
  406a6b:	(bad)  
  406a6c:	ins    BYTE PTR es:[rdi],dx
  406a6d:	ins    BYTE PTR es:[rdi],dx
  406a6e:	gs or  al,BYTE PTR fs:[rax]
  406a72:	rex.RB ins DWORD PTR es:[rdi],dx
  406a74:	jo     0x406aea
  406a76:	jns    0x406a98
  406a78:	jae    0x406add
  406a7a:	push   0x20616d65
  406a7f:	outs   dx,BYTE PTR ds:[rsi]
  406a80:	(bad)  
  406a81:	ins    DWORD PTR es:[rdi],dx
  406a82:	and    BYTE PTR gs:[rdi+0x69],ah
  406a86:	jbe    0x406aed
  406a88:	outs   dx,BYTE PTR ds:[rsi]
  406a89:	or     al,BYTE PTR [rax]
  406a8b:	add    BYTE PTR [rax],al
  406a8d:	add    BYTE PTR [rax],al
  406a8f:	add    BYTE PTR [rbx+0x63],dl
  406a92:	push   0x20616d65
  406a97:	(bad)  
  406a98:	and    eax,0x69202773
  406a9d:	jae    0x406abf
  406a9f:	jb     0x406b06
  406aa1:	ins    BYTE PTR es:[rdi],dx
  406aa2:	outs   dx,DWORD PTR ds:[rsi]
  406aa3:	movsxd esp,DWORD PTR [rcx+0x74]
  406aa6:	(bad)  
  406aa7:	(bad)  
  406aa8:	ins    BYTE PTR es:[rdi],dx
  406aa9:	and    BYTE PTR gs:[rax],ch
  406aac:	jo     0x406b0f
  406aae:	je     0x406b18
  406ab0:	and    BYTE PTR [rbp+0x75],ch
  406ab3:	jae    0x406b29
  406ab5:	and    BYTE PTR [rdx+0x65],ah
  406ab8:	and    BYTE PTR [rbx+0x70],dh
  406abb:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  406abf:	imul   esp,DWORD PTR [rbp+0x64],0x4e000a29
  406ac6:	outs   dx,DWORD PTR ds:[rsi]
  406ac7:	and    BYTE PTR [rbx+0x75],dh
  406aca:	movsxd ebp,DWORD PTR [rax+0x20]
  406acd:	imul   esp,DWORD PTR [rbp+0x79],0x20
  406ad1:	(bad)  
  406ad2:	and    eax,0xa2773
  406ad7:	cmp    al,BYTE PTR [rax]
  406ad9:	add    BYTE PTR [rax],al
  406adb:	add    BYTE PTR [rax],al
  406add:	add    BYTE PTR [rax],al
  406adf:	add    BYTE PTR [rax+0x40a5],al
  406ae5:	add    BYTE PTR [rax],al
  406ae7:	add    BYTE PTR [rax+0x40a0],al
  406aed:	add    BYTE PTR [rax],al
  406aef:	add    BYTE PTR [rax+0x402a],dh
	...
  406afd:	add    BYTE PTR [rax],al
  406aff:	add    BYTE PTR [rcx+0x72],al
  406b02:	addr32 jne 0x406b72
  406b05:	outs   dx,BYTE PTR gs:[rsi]
  406b07:	je     0x406b29
  406b09:	outs   dx,DWORD PTR fs:[rsi]
  406b0b:	ins    DWORD PTR es:[rdi],dx
  406b0c:	(bad)  
  406b0d:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
  406b14:	jb     0x406b36
  406b16:	sub    BYTE PTR [rdi+rcx*2+0x4d],al
  406b1a:	rex.B
  406b1b:	rex.WB
  406b1c:	rex.WRX sub QWORD PTR [rax],r8
  406b1f:	rex.B jb 0x406b89
  406b22:	jne    0x406b91
  406b24:	outs   dx,BYTE PTR gs:[rsi]
  406b26:	je     0x406b48
  406b28:	jae    0x406b93
  406b2a:	outs   dx,BYTE PTR ds:[rsi]
  406b2b:	addr32 jne 0x406b9a
  406b2e:	(bad)  
  406b2f:	jb     0x406b9a
  406b31:	je     0x406bac
  406b33:	and    BYTE PTR [rax],ch
  406b35:	push   rbx
  406b36:	rex.WB
  406b37:	rex.RXB
  406b38:	rex.WRX sub QWORD PTR [rax],r8
  406b3b:	add    BYTE PTR [rax],al
  406b3d:	add    BYTE PTR [rax],al
  406b3f:	add    BYTE PTR [rdi+0x76],cl
  406b42:	gs jb  0x406bab
  406b45:	ins    BYTE PTR es:[rdi],dx
  406b46:	outs   dx,DWORD PTR ds:[rsi]
  406b47:	ja     0x406b69
  406b49:	jb     0x406bac
  406b4b:	outs   dx,BYTE PTR ds:[rsi]
  406b4c:	and    BYTE PTR gs:[ebp+0x72],ah
  406b51:	jb     0x406bc2
  406b53:	jb     0x406b75
  406b55:	sub    BYTE PTR [rdi+0x56],cl
  406b58:	rex.RB push r10
  406b5a:	rex.RX
  406b5b:	rex.WR
  406b5c:	rex.WRXB push r15
  406b5e:	sub    DWORD PTR [rax],eax
  406b60:	push   rax
  406b61:	(bad)  
  406b62:	jb     0x406bd8
  406b64:	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
  406b6b:	jae    0x406b8d
  406b6d:	outs   dx,DWORD PTR ds:[rsi]
  406b6e:	data16 and BYTE PTR [rbx+0x69],dh
  406b72:	outs   dx,BYTE PTR ds:[esi]
  406b74:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  406b7b:	and    BYTE PTR gs:[rax],ch
  406b7e:	push   rax
  406b7f:	rex.WR
  406b80:	rex.WRXB push r11
  406b82:	push   rbx
  406b83:	sub    DWORD PTR [rax],eax
  406b85:	add    BYTE PTR [rax],al
  406b87:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  406b8b:	(bad)  
  406b8c:	ins    BYTE PTR es:[rdi],dx
  406b8d:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  406b91:	jae    0x406bb3
  406b93:	outs   dx,DWORD PTR ds:[rsi]
  406b94:	data16 and BYTE PTR [rbx+0x69],dh
  406b98:	outs   dx,BYTE PTR ds:[esi]
  406b9a:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  406ba1:	and    BYTE PTR gs:[rax],ch
  406ba4:	push   rsp
  406ba5:	rex.WR
  406ba6:	rex.WRXB push r11
  406ba8:	push   rbx
  406ba9:	sub    DWORD PTR [rax],eax
  406bab:	add    BYTE PTR [rax],al
  406bad:	add    BYTE PTR [rax],al
  406baf:	add    BYTE PTR [rax+rbp*2+0x65],dl
  406bb3:	and    BYTE PTR [rdx+0x65],dh
  406bb6:	jae    0x406c2d
  406bb8:	ins    BYTE PTR es:[rdi],dx
  406bb9:	je     0x406bdb
  406bbb:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  406bc2:	jae    0x406c31
  406bc4:	(bad)  
  406bc5:	ins    BYTE PTR es:[rdi],dx
  406bc6:	ins    BYTE PTR es:[rdi],dx
  406bc7:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  406bcb:	(bad)  
  406bcc:	and    BYTE PTR gs:[rdx+0x65],dh
  406bd0:	jo     0x406c44
  406bd2:	gs jae 0x406c3a
  406bd5:	outs   dx,BYTE PTR ds:[rsi]
  406bd6:	je     0x406c3d
  406bd8:	and    BYTE PTR fs:[rax],ch
  406bdb:	push   rbp
  406bdc:	rex.WRX
  406bdd:	rex.R
  406bde:	rex.RB push r10
  406be0:	rex.RX
  406be1:	rex.WR
  406be2:	rex.WRXB push r15
  406be4:	sub    DWORD PTR [rax],eax
  406be6:	push   rbp
  406be7:	outs   dx,BYTE PTR ds:[rsi]
  406be8:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  406bec:	outs   dx,BYTE PTR ds:[rsi]
  406bed:	and    BYTE PTR [rbp+0x72],ah
  406bf0:	jb     0x406c61
  406bf2:	jb     0x406bf4
  406bf4:	add    BYTE PTR [rax],al
  406bf6:	add    BYTE PTR [rax],al
  406bf8:	pop    rdi
  406bf9:	ins    DWORD PTR es:[rdi],dx
  406bfa:	(bad)  
  406bfb:	je     0x406c65
  406bfd:	gs jb  0x406c72
  406c00:	sub    BYTE PTR [rcx],ch
  406c02:	cmp    ah,BYTE PTR [rax]
  406c04:	and    eax,0x6e692073
  406c09:	and    BYTE PTR [rip+0x67252873],ah        # 0x67659482
  406c0f:	sub    al,0x20
  406c11:	and    eax,0x20202967
  406c16:	sub    BYTE PTR [rdx+0x65],dh
  406c19:	je     0x406c91
  406c1b:	(bad)  
  406c1c:	ins    BYTE PTR es:[rdi],dx
  406c1d:	cmp    eax,0xa296725
  406c22:	add    BYTE PTR [rax],al
  406c24:	pop    rsp
  406c25:	sar    bh,0xff
  406c28:	popf   
  406c29:	mov    edi,0xc00cffff
  406c2e:	(bad)  
  406c2f:	call   FWORD PTR [rax+rax*8]
  406c32:	(bad)  
  406c33:	jmp    FWORD PTR [rax+rax*8]
  406c36:	(bad)  
  406c37:	(bad)  
  406c38:	cmp    al,0xc0
  406c3a:	(bad)  
  406c3b:	dec    DWORD PTR [rax+rax*8-0x1]
  406c3f:	dec    DWORD PTR [rbp+0x69]
  406c42:	outs   dx,BYTE PTR ds:[rsi]
  406c43:	addr32 ja 0x406c73
  406c46:	ja     0x406c7e
  406c48:	xor    al,0x20
  406c4a:	jb     0x406cc1
  406c4c:	outs   dx,BYTE PTR ds:[rsi]
  406c4d:	je     0x406cb8
  406c4f:	ins    DWORD PTR es:[rdi],dx
  406c50:	and    BYTE PTR gs:[rsi+0x61],ah
  406c54:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
  406c5c:	add    BYTE PTR [rax],al
  406c5e:	add    BYTE PTR [rax],al
  406c60:	rex.B
  406c61:	fs fs jb 0x406cca
  406c65:	jae    0x406cda
  406c67:	and    BYTE PTR [rip+0x61682070],ah        # 0x61a88cdd
  406c6d:	jae    0x406c8f
  406c6f:	outs   dx,BYTE PTR ds:[rsi]
  406c70:	outs   dx,DWORD PTR ds:[rsi]
  406c71:	and    BYTE PTR [rcx+0x6d],ch
  406c74:	(bad)  
  406c75:	addr32 gs sub eax,0x74636573
  406c7c:	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
  406c83:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  406c8a:	jne    0x406cf1
  406c8c:	jb     0x406d07
  406c8e:	and    BYTE PTR [rsi+0x61],ah
  406c91:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
  406c99:	and    BYTE PTR [rip+0x79622064],ah        # 0x79a28d03
  406c9f:	je     0x406d06
  406ca1:	jae    0x406cc3
  406ca3:	(bad)  
  406ca4:	je     0x406cc6
  406ca6:	(bad)  
  406ca7:	fs fs jb 0x406d10
  406cab:	jae    0x406d20
  406cad:	and    BYTE PTR [rip+0x70],ah        # 0x406d23
  406cb3:	add    BYTE PTR [rax],al
  406cb5:	add    BYTE PTR [rax],al
  406cb7:	add    BYTE PTR [rax],ah
  406cb9:	and    BYTE PTR [rsi+0x69],dl
  406cbc:	jb     0x406d32
  406cbe:	jne    0x406d21
  406cc0:	ins    BYTE PTR es:[rdi],dx
  406cc1:	push   rax
  406cc2:	jb     0x406d33
  406cc4:	je     0x406d2b
  406cc6:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  406cca:	(bad)  
  406ccb:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  406cd3:	push   0x646f6320
  406cd8:	and    BYTE PTR gs:[rax],dh
  406cdb:	js     0x406d02
  406cdd:	js     0x406cdf
  406cdf:	add    BYTE PTR [rax],ah
  406ce1:	and    BYTE PTR [rbp+0x6e],dl
  406ce4:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  406ce8:	outs   dx,BYTE PTR ds:[rsi]
  406ce9:	and    BYTE PTR [rax+0x73],dh
  406cec:	gs jne 0x406d53
  406cef:	outs   dx,DWORD PTR ds:[rsi]
  406cf0:	and    BYTE PTR [rdx+0x65],dh
  406cf3:	ins    BYTE PTR es:[rdi],dx
  406cf4:	outs   dx,DWORD PTR ds:[rsi]
  406cf5:	movsxd esp,DWORD PTR [rcx+0x74]
  406cf8:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  406cff:	je     0x406d70
  406d01:	movsxd ebp,DWORD PTR [rdi+0x6c]
  406d04:	and    BYTE PTR [rsi+0x65],dh
  406d07:	jb     0x406d7c
  406d09:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  406d10:	or     al,BYTE PTR [rax]
  406d12:	add    BYTE PTR [rax],al
  406d14:	add    BYTE PTR [rax],al
  406d16:	add    BYTE PTR [rax],al
  406d18:	and    BYTE PTR [rax],ah
  406d1a:	push   rbp
  406d1b:	outs   dx,BYTE PTR ds:[rsi]
  406d1c:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  406d20:	outs   dx,BYTE PTR ds:[rsi]
  406d21:	and    BYTE PTR [rax+0x73],dh
  406d24:	gs jne 0x406d8b
  406d27:	outs   dx,DWORD PTR ds:[rsi]
  406d28:	and    BYTE PTR [rdx+0x65],dh
  406d2b:	ins    BYTE PTR es:[rdi],dx
  406d2c:	outs   dx,DWORD PTR ds:[rsi]
  406d2d:	movsxd esp,DWORD PTR [rcx+0x74]
  406d30:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
  406d37:	and    BYTE PTR [rbx+0x69],dh
  406d3a:	jp     0x406da1
  406d3c:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4a9ba6
	...
  406d4e:	add    BYTE PTR [rax],al
  406d50:	cs jo  0x406db7
  406d53:	(bad)  
  406d54:	je     0x406db7
	...
  406d5e:	add    BYTE PTR [rax],al
  406d60:	rex push rax
  406d62:	add    BYTE PTR [rax],al
	...
  406d6d:	add    BYTE PTR [rax],al
  406d6f:	add    BYTE PTR [rax+0x50],dl
  406d72:	add    BYTE PTR [rax],al
	...
  406d7d:	add    BYTE PTR [rax],al
  406d7f:	add    BYTE PTR [rax+0x4044],ah
	...
  406d8d:	add    BYTE PTR [rax],al
  406d8f:	add    BYTE PTR [rax+0x4072],ah
	...
  406d9d:	add    BYTE PTR [rax],al
  406d9f:	add    BYTE PTR [rax+0x4072],ah
	...
  406dad:	add    BYTE PTR [rax],al
  406daf:	add    al,dh
  406db1:	push   0x40
	...
  406dbf:	add    BYTE PTR [rax],al
  406dc1:	add    BYTE PTR [rax+0x0],al
	...
  406dd0:	pop    rsp
  406dd1:	mov    bh,0x40
	...
  406ddf:	add    BYTE PTR [rdi+rsi*4+0x40],al
	...
  406dee:	add    BYTE PTR [rax],al
  406df0:	pushf  
  406df1:	mov    bh,0x40
	...
  406dff:	add    BYTE PTR [rdi+rsi*4+0x40],dh
	...
  406e0e:	add    BYTE PTR [rax],al
  406e10:	shl    BYTE PTR [rsi+0x40],0x0
	...
  406e1f:	add    BYTE PTR [rax],bh
  406e21:	stos   BYTE PTR es:[rdi],al
  406e22:	add    BYTE PTR [rax],al
	...
  406e2d:	add    BYTE PTR [rax],al
  406e2f:	add    BYTE PTR [rax],dh
  406e31:	stos   BYTE PTR es:[rdi],al
  406e32:	add    BYTE PTR [rax],al
	...
  406e3d:	add    BYTE PTR [rax],al
  406e3f:	add    BYTE PTR [rax],ah
  406e41:	stos   BYTE PTR es:[rdi],al
  406e42:	add    BYTE PTR [rax],al
	...
  406e4d:	add    BYTE PTR [rax],al
  406e4f:	add    BYTE PTR [rax],ch
  406e51:	stos   BYTE PTR es:[rdi],al
  406e52:	add    BYTE PTR [rax],al
	...
  406e61:	rol    BYTE PTR [rax+0x0],1
	...
  406e70:	adc    al,dl
  406e72:	add    BYTE PTR [rax],al
	...
  406e7d:	add    BYTE PTR [rax],al
  406e7f:	add    BYTE PTR [rax],bl
  406e81:	rol    BYTE PTR [rax+0x0],1
	...
  406e90:	xor    al,dl
  406e92:	add    BYTE PTR [rax],al
	...
  406e9d:	add    BYTE PTR [rax],al
  406e9f:	add    BYTE PTR [rax-0x60],ah
  406ea2:	add    BYTE PTR [rax],al
	...
  406ead:	add    BYTE PTR [rax],al
  406eaf:	add    BYTE PTR [rax+0x40a6],dl
	...
  406ebd:	add    BYTE PTR [rax],al
  406ebf:	add    BYTE PTR [rax+0x34],al
  406ec2:	add    BYTE PTR [rax],al
	...
  406ecd:	add    BYTE PTR [rax],al
  406ecf:	add    BYTE PTR [rax+0x402b],dl
	...
  406edd:	add    BYTE PTR [rax],al
  406edf:	add    BYTE PTR [rax-0x5a],al
  406ee2:	add    BYTE PTR [rax],al
	...
  406eed:	add    BYTE PTR [rax],al
  406eef:	add    BYTE PTR [rax-0x5a],dh
  406ef2:	add    BYTE PTR [rax],al
	...
  406efd:	add    BYTE PTR [rax],al
  406eff:	add    BYTE PTR [rax-0x60],dh
  406f02:	add    BYTE PTR [rax],al
	...
  406f0d:	add    BYTE PTR [rax],al
  406f0f:	add    BYTE PTR [rax-0x5a],bl
  406f12:	add    BYTE PTR [rax],al
	...
  406f1d:	add    BYTE PTR [rax],al
  406f1f:	add    BYTE PTR [rsi+riz*4+0x40],dl
	...
  406f2f:	add    BYTE PTR [rax-0x5a],dl
  406f32:	add    BYTE PTR [rax],al
	...
  406f3d:	add    BYTE PTR [rax],al
  406f3f:	add    BYTE PTR [rdi+0x43],al
  406f42:	rex.XB cmp spl,BYTE PTR [r8]
  406f45:	sub    BYTE PTR [rdi+0x4e],al
  406f48:	push   rbp
  406f49:	sub    DWORD PTR [rax],esp
  406f4b:	xor    al,0x2e
  406f4d:	cmp    DWORD PTR [rsi],ebp
  406f4f:	xor    al,0x0
	...
  406f5d:	add    BYTE PTR [rax],al
  406f5f:	add    BYTE PTR [rdi+0x43],al
  406f62:	rex.XB cmp spl,BYTE PTR [r8]
  406f65:	sub    BYTE PTR [rdi+0x4e],al
  406f68:	push   rbp
  406f69:	sub    DWORD PTR [rax],esp
  406f6b:	xor    al,0x2e
  406f6d:	cmp    DWORD PTR [rsi],ebp
  406f6f:	xor    al,0x0
	...
  406f7d:	add    BYTE PTR [rax],al
  406f7f:	add    BYTE PTR [rdi+0x43],al
  406f82:	rex.XB cmp spl,BYTE PTR [r8]
  406f85:	sub    BYTE PTR [rdi+0x4e],al
  406f88:	push   rbp
  406f89:	sub    DWORD PTR [rax],esp
  406f8b:	xor    al,0x2e
  406f8d:	cmp    DWORD PTR [rsi],ebp
  406f8f:	xor    al,0x0
	...
  406f9d:	add    BYTE PTR [rax],al
  406f9f:	add    BYTE PTR [rdi+0x43],al
  406fa2:	rex.XB cmp spl,BYTE PTR [r8]
  406fa5:	sub    BYTE PTR [rdi+0x4e],al
  406fa8:	push   rbp
  406fa9:	sub    DWORD PTR [rax],esp
  406fab:	xor    al,0x2e
  406fad:	cmp    DWORD PTR [rsi],ebp
  406faf:	xor    al,0x0
	...
  406fbd:	add    BYTE PTR [rax],al
  406fbf:	add    BYTE PTR [rdi+0x43],al
  406fc2:	rex.XB cmp spl,BYTE PTR [r8]
  406fc5:	sub    BYTE PTR [rdi+0x4e],al
  406fc8:	push   rbp
  406fc9:	sub    DWORD PTR [rax],esp
  406fcb:	xor    al,0x2e
  406fcd:	cmp    DWORD PTR [rsi],ebp
  406fcf:	xor    al,0x0
	...
  406fdd:	add    BYTE PTR [rax],al
  406fdf:	add    BYTE PTR [rdi+0x43],al
  406fe2:	rex.XB cmp spl,BYTE PTR [r8]
  406fe5:	sub    BYTE PTR [rdi+0x4e],al
  406fe8:	push   rbp
  406fe9:	sub    DWORD PTR [rax],esp
  406feb:	xor    al,0x2e
  406fed:	cmp    DWORD PTR [rsi],ebp
  406fef:	xor    al,0x0
	...
  406ffd:	add    BYTE PTR [rax],al
  406fff:	add    BYTE PTR [rdi+0x43],al
  407002:	rex.XB cmp spl,BYTE PTR [r8]
  407005:	sub    BYTE PTR [rdi+0x4e],al
  407008:	push   rbp
  407009:	sub    DWORD PTR [rax],esp
  40700b:	xor    al,0x2e
  40700d:	cmp    DWORD PTR [rsi],ebp
  40700f:	xor    al,0x0
	...
  40701d:	add    BYTE PTR [rax],al
  40701f:	add    BYTE PTR [rdi+0x43],al
  407022:	rex.XB cmp spl,BYTE PTR [r8]
  407025:	sub    BYTE PTR [rdi+0x4e],al
  407028:	push   rbp
  407029:	sub    DWORD PTR [rax],esp
  40702b:	xor    al,0x2e
  40702d:	cmp    DWORD PTR [rsi],ebp
  40702f:	xor    al,0x0
	...
  40703d:	add    BYTE PTR [rax],al
  40703f:	add    BYTE PTR [rdi+0x43],al
  407042:	rex.XB cmp spl,BYTE PTR [r8]
  407045:	sub    BYTE PTR [rdi+0x4e],al
  407048:	push   rbp
  407049:	sub    DWORD PTR [rax],esp
  40704b:	xor    al,0x2e
  40704d:	cmp    DWORD PTR [rsi],ebp
  40704f:	xor    al,0x0
	...
  40705d:	add    BYTE PTR [rax],al
  40705f:	add    BYTE PTR [rdi+0x43],al
  407062:	rex.XB cmp spl,BYTE PTR [r8]
  407065:	sub    BYTE PTR [rdi+0x4e],al
  407068:	push   rbp
  407069:	sub    DWORD PTR [rax],esp
  40706b:	xor    al,0x2e
  40706d:	cmp    DWORD PTR [rsi],ebp
  40706f:	xor    al,0x0
	...
  40707d:	add    BYTE PTR [rax],al
  40707f:	add    BYTE PTR [rdi+0x43],al
  407082:	rex.XB cmp spl,BYTE PTR [r8]
  407085:	sub    BYTE PTR [rdi+0x4e],al
  407088:	push   rbp
  407089:	sub    DWORD PTR [rax],esp
  40708b:	xor    al,0x2e
  40708d:	cmp    DWORD PTR [rsi],ebp
  40708f:	xor    al,0x0
	...
  40709d:	add    BYTE PTR [rax],al
  40709f:	add    BYTE PTR [rdi+0x43],al
  4070a2:	rex.XB cmp spl,BYTE PTR [r8]
  4070a5:	sub    BYTE PTR [rdi+0x4e],al
  4070a8:	push   rbp
  4070a9:	sub    DWORD PTR [rax],esp
  4070ab:	xor    al,0x2e
  4070ad:	cmp    DWORD PTR [rsi],ebp
  4070af:	xor    al,0x0
	...
  4070bd:	add    BYTE PTR [rax],al
  4070bf:	add    BYTE PTR [rdi+0x43],al
  4070c2:	rex.XB cmp spl,BYTE PTR [r8]
  4070c5:	sub    BYTE PTR [rdi+0x4e],al
  4070c8:	push   rbp
  4070c9:	sub    DWORD PTR [rax],esp
  4070cb:	xor    al,0x2e
  4070cd:	cmp    DWORD PTR [rsi],ebp
  4070cf:	xor    al,0x0
	...
  4070dd:	add    BYTE PTR [rax],al
  4070df:	add    BYTE PTR [rdi+0x43],al
  4070e2:	rex.XB cmp spl,BYTE PTR [r8]
  4070e5:	sub    BYTE PTR [rdi+0x4e],al
  4070e8:	push   rbp
  4070e9:	sub    DWORD PTR [rax],esp
  4070eb:	xor    al,0x2e
  4070ed:	cmp    DWORD PTR [rsi],ebp
  4070ef:	xor    al,0x0
	...
  4070fd:	add    BYTE PTR [rax],al
  4070ff:	add    BYTE PTR [rdi+0x43],al
  407102:	rex.XB cmp spl,BYTE PTR [r8]
  407105:	sub    BYTE PTR [rdi+0x4e],al
  407108:	push   rbp
  407109:	sub    DWORD PTR [rax],esp
  40710b:	xor    al,0x2e
  40710d:	cmp    DWORD PTR [rsi],ebp
  40710f:	xor    al,0x0
	...
  40711d:	add    BYTE PTR [rax],al
  40711f:	add    BYTE PTR [rdi+0x43],al
  407122:	rex.XB cmp spl,BYTE PTR [r8]
  407125:	sub    BYTE PTR [rdi+0x4e],al
  407128:	push   rbp
  407129:	sub    DWORD PTR [rax],esp
  40712b:	xor    al,0x2e
  40712d:	cmp    DWORD PTR [rsi],ebp
  40712f:	xor    al,0x0
	...
  40713d:	add    BYTE PTR [rax],al
  40713f:	add    BYTE PTR [rdi+0x43],al
  407142:	rex.XB cmp spl,BYTE PTR [r8]
  407145:	sub    BYTE PTR [rdi+0x4e],al
  407148:	push   rbp
  407149:	sub    DWORD PTR [rax],esp
  40714b:	xor    al,0x2e
  40714d:	cmp    DWORD PTR [rsi],ebp
  40714f:	xor    al,0x0
	...
  40715d:	add    BYTE PTR [rax],al
  40715f:	add    BYTE PTR [rdi+0x43],al
  407162:	rex.XB cmp spl,BYTE PTR [r8]
  407165:	sub    BYTE PTR [rdi+0x4e],al
  407168:	push   rbp
  407169:	sub    DWORD PTR [rax],esp
  40716b:	xor    al,0x2e
  40716d:	cmp    DWORD PTR [rsi],ebp
  40716f:	xor    al,0x0
	...
  40717d:	add    BYTE PTR [rax],al
  40717f:	add    BYTE PTR [rdi+0x43],al
  407182:	rex.XB cmp spl,BYTE PTR [r8]
  407185:	sub    BYTE PTR [rdi+0x4e],al
  407188:	push   rbp
  407189:	sub    DWORD PTR [rax],esp
  40718b:	xor    al,0x2e
  40718d:	cmp    DWORD PTR [rsi],ebp
  40718f:	xor    al,0x0
	...
  40719d:	add    BYTE PTR [rax],al
  40719f:	add    BYTE PTR [rdi+0x43],al
  4071a2:	rex.XB cmp spl,BYTE PTR [r8]
  4071a5:	sub    BYTE PTR [rdi+0x4e],al
  4071a8:	push   rbp
  4071a9:	sub    DWORD PTR [rax],esp
  4071ab:	xor    al,0x2e
  4071ad:	cmp    DWORD PTR [rsi],ebp
  4071af:	xor    al,0x0
	...
  4071bd:	add    BYTE PTR [rax],al
  4071bf:	add    BYTE PTR [rdi+0x43],al
  4071c2:	rex.XB cmp spl,BYTE PTR [r8]
  4071c5:	sub    BYTE PTR [rdi+0x4e],al
  4071c8:	push   rbp
  4071c9:	sub    DWORD PTR [rax],esp
  4071cb:	xor    al,0x2e
  4071cd:	cmp    DWORD PTR [rsi],ebp
  4071cf:	xor    al,0x0
	...
  4071dd:	add    BYTE PTR [rax],al
  4071df:	add    BYTE PTR [rdi+0x43],al
  4071e2:	rex.XB cmp spl,BYTE PTR [r8]
  4071e5:	sub    BYTE PTR [rdi+0x4e],al
  4071e8:	push   rbp
  4071e9:	sub    DWORD PTR [rax],esp
  4071eb:	xor    al,0x2e
  4071ed:	cmp    DWORD PTR [rsi],ebp
  4071ef:	xor    al,0x0
	...
  4071fd:	add    BYTE PTR [rax],al
  4071ff:	add    BYTE PTR [rdi+0x43],al
  407202:	rex.XB cmp spl,BYTE PTR [r8]
  407205:	sub    BYTE PTR [rdi+0x4e],al
  407208:	push   rbp
  407209:	sub    DWORD PTR [rax],esp
  40720b:	xor    al,0x2e
  40720d:	cmp    DWORD PTR [rsi],ebp
  40720f:	xor    al,0x0
	...
  40721d:	add    BYTE PTR [rax],al
  40721f:	add    BYTE PTR [rdi+0x43],al
  407222:	rex.XB cmp spl,BYTE PTR [r8]
  407225:	sub    BYTE PTR [rdi+0x4e],al
  407228:	push   rbp
  407229:	sub    DWORD PTR [rax],esp
  40722b:	xor    al,0x2e
  40722d:	cmp    DWORD PTR [rsi],ebp
  40722f:	xor    al,0x0
	...
  40723d:	add    BYTE PTR [rax],al
  40723f:	add    BYTE PTR [rdi+0x43],al
  407242:	rex.XB cmp spl,BYTE PTR [r8]
  407245:	sub    BYTE PTR [rdi+0x4e],al
  407248:	push   rbp
  407249:	sub    DWORD PTR [rax],esp
  40724b:	xor    al,0x2e
  40724d:	cmp    DWORD PTR [rsi],ebp
  40724f:	xor    al,0x0
	...
  40725d:	add    BYTE PTR [rax],al
  40725f:	add    BYTE PTR [rdi+0x43],al
  407262:	rex.XB cmp spl,BYTE PTR [r8]
  407265:	sub    BYTE PTR [rdi+0x4e],al
  407268:	push   rbp
  407269:	sub    DWORD PTR [rax],esp
  40726b:	xor    al,0x2e
  40726d:	cmp    DWORD PTR [rsi],ebp
  40726f:	xor    al,0x0
	...
  40727d:	add    BYTE PTR [rax],al
  40727f:	add    BYTE PTR [rdi+0x43],al
  407282:	rex.XB cmp spl,BYTE PTR [r8]
  407285:	sub    BYTE PTR [rdi+0x4e],al
  407288:	push   rbp
  407289:	sub    DWORD PTR [rax],esp
  40728b:	xor    al,0x2e
  40728d:	cmp    DWORD PTR [rsi],ebp
  40728f:	xor    al,0x0
	...

Disassembly of section .pdata:

0000000000408000 <.pdata>:
  408000:	add    BYTE PTR [rax],dl
  408002:	add    BYTE PTR [rax],al
  408004:	add    DWORD PTR [rax],edx
  408006:	add    BYTE PTR [rax],al
  408008:	add    BYTE PTR [rax+0x10100000],dl
  40800e:	add    BYTE PTR [rax],al
  408010:	push   rcx
  408011:	adc    DWORD PTR [rax],eax
  408013:	add    BYTE PTR [rax+rdx*4],al
  408016:	add    BYTE PTR [rax],al
  408018:	(bad)  
  408019:	adc    DWORD PTR [rax],eax
  40801b:	add    BYTE PTR [rsi+0xc000011],ch
  408021:	nop
  408022:	add    BYTE PTR [rax],al
  408024:	mov    al,0x11
  408026:	add    BYTE PTR [rax],al
  408028:	(bad)  
  408029:	adc    al,0x0
  40802b:	add    BYTE PTR [rax+rdx*4],dl
  40802e:	add    BYTE PTR [rax],al
  408030:	rcl    BYTE PTR [rax+rax*1],1
  408033:	add    dl,dh
  408035:	adc    al,0x0
  408037:	add    BYTE PTR [rax],ch
  408039:	nop
  40803a:	add    BYTE PTR [rax],al
  40803c:	add    BYTE PTR [rip+0x15220000],dl        # 0x15628042
  408042:	add    BYTE PTR [rax],al
  408044:	rex.W nop
  408046:	add    BYTE PTR [rax],al
  408048:	xor    BYTE PTR [rip+0x15be0000],dl        # 0x15fe804e
  40804e:	add    BYTE PTR [rax],al
  408050:	push   0xffffffffc0000090
  408055:	adc    eax,0x15f00000
  40805a:	add    BYTE PTR [rax],al
  40805c:	jo     0x407fee
  40805e:	add    BYTE PTR [rax],al
  408060:	lock adc eax,0x16190000
  408066:	add    BYTE PTR [rax],al
  408068:	js     0x407ffa
  40806a:	add    BYTE PTR [rax],al
  40806c:	and    BYTE PTR [rsi],dl
  40806e:	add    BYTE PTR [rax],al
  408070:	imul   edx,DWORD PTR [rsi],0x0
  408073:	add    BYTE PTR [rax+rdx*4+0x0],bh
  408077:	add    BYTE PTR [rax+0x16],dh
  40807a:	add    BYTE PTR [rax],al
  40807c:	rcl    DWORD PTR [rsi],0x0
  40807f:	add    BYTE PTR [rax-0x2fffff70],cl
  408085:	(bad)  
  408086:	add    BYTE PTR [rax],al
  408088:	or     edx,DWORD PTR [rdi]
  40808a:	add    BYTE PTR [rax],al
  40808c:	xchg   esp,eax
  40808d:	nop
  40808e:	add    BYTE PTR [rax],al
  408090:	adc    BYTE PTR [rdi],dl
  408092:	add    BYTE PTR [rax],al
  408094:	cmp    DWORD PTR [rdi],edx
  408096:	add    BYTE PTR [rax],al
  408098:	pushf  
  408099:	nop
  40809a:	add    BYTE PTR [rax],al
  40809c:	rex (bad) 
  40809e:	add    BYTE PTR [rax],al
  4080a0:	mov    al,0x17
  4080a2:	add    BYTE PTR [rax],al
  4080a4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4080a5:	nop
  4080a6:	add    BYTE PTR [rax],al
  4080a8:	mov    al,0x17
  4080aa:	add    BYTE PTR [rax],al
  4080ac:	cmp    eax,0xb0000018
  4080b1:	nop
  4080b2:	add    BYTE PTR [rax],al
  4080b4:	sbb    BYTE PTR [rax],al
  4080b7:	add    BYTE PTR [rcx+0x18],ah
  4080ba:	add    BYTE PTR [rax],al
  4080bc:	mov    esp,0x70000090
  4080c1:	sbb    BYTE PTR [rax],al
  4080c3:	add    BYTE PTR [rcx+rbx*1-0x6f3c0000],dh
  4080ca:	add    BYTE PTR [rax],al
  4080cc:	rcr    BYTE PTR [rcx],0x0
  4080cf:	add    BYTE PTR [rcx+0x1b],dh
  4080d2:	add    BYTE PTR [rax],al
  4080d4:	rcl    BYTE PTR [rax+0x1b800000],1
  4080da:	add    BYTE PTR [rax],al
  4080dc:	mov    bh,0x1b
  4080de:	add    BYTE PTR [rax],al
  4080e0:	loopne 0x408072
  4080e2:	add    BYTE PTR [rax],al
  4080e4:	rcr    BYTE PTR [rbx],0x0
  4080e7:	add    bh,dh
  4080e9:	sbb    eax,DWORD PTR [rax]
  4080eb:	add    al,ch
  4080ed:	nop
  4080ee:	add    BYTE PTR [rax],al
  4080f0:	add    BYTE PTR [rax+rax*1],bl
  4080f3:	add    BYTE PTR [rcx],al
  4080f5:	sbb    eax,0x90f00000
  4080fa:	add    BYTE PTR [rax],al
  4080fc:	adc    BYTE PTR [rip+0x1e480000],bl        # 0x1e888102
  408102:	add    BYTE PTR [rax],al
  408104:	add    al,0x91
  408106:	add    BYTE PTR [rax],al
  408108:	push   rax
  408109:	(bad)  
  40810a:	add    BYTE PTR [rax],al
  40810c:	movsxd esp,DWORD PTR [rbx]
  40810e:	add    BYTE PTR [rax],al
  408110:	sbb    BYTE PTR [rcx+0x23700000],dl
  408116:	add    BYTE PTR [rax],al
  408118:	cli    
  408119:	and    eax,DWORD PTR [rax]
  40811b:	add    BYTE PTR [rcx+rdx*4],ch
  40811e:	add    BYTE PTR [rax],al
  408120:	add    BYTE PTR [rax+rax*1],ah
  408123:	add    BYTE PTR [rsi+0x24],al
  408126:	add    BYTE PTR [rax],al
  408128:	cmp    BYTE PTR [rcx+0x24500000],dl
  40812e:	add    BYTE PTR [rax],al
  408130:	mul    BYTE PTR [rax+rax*1]
  408133:	add    BYTE PTR [rax-0x6f],al
  408136:	add    BYTE PTR [rax],al
  408138:	lock add BYTE PTR es:[rax],al
  40813c:	xchg   edi,eax
  40813d:	(bad)  
  40813e:	add    BYTE PTR [rax],al
  408140:	pop    rsp
  408141:	xchg   ecx,eax
  408142:	add    BYTE PTR [rax],al
  408144:	movabs al,ds:0x64000027b9000027
  40814d:	xchg   ecx,eax
  40814e:	add    BYTE PTR [rax],al
  408150:	shl    BYTE PTR [rdi],0x0
  408153:	add    ch,dh
  408155:	(bad)  
  408156:	add    BYTE PTR [rax],al
  408158:	ins    BYTE PTR es:[rdi],dx
  408159:	xchg   ecx,eax
  40815a:	add    BYTE PTR [rax],al
  40815c:	add    BYTE PTR [rax],ch
  40815e:	add    BYTE PTR [rax],al
  408160:	push   rbp
  408161:	sub    BYTE PTR [rax],al
  408163:	add    BYTE PTR [rcx+rdx*4+0x0],dh
  408167:	add    BYTE PTR [rax+0x28],ah
  40816a:	add    BYTE PTR [rax],al
  40816c:	jl     0x408196
  40816e:	add    BYTE PTR [rax],al
  408170:	adc    BYTE PTR [rcx+0x28800000],0x0
  408177:	add    BYTE PTR [rdx-0x7bffffd8],cl
  40817d:	xchg   ecx,eax
  40817e:	add    BYTE PTR [rax],al
  408180:	nop
  408181:	sub    BYTE PTR [rax],al
  408183:	add    BYTE PTR [rbx-0x77ffffd8],dl
  408189:	xchg   ecx,eax
  40818a:	add    BYTE PTR [rax],al
  40818c:	movabs al,ds:0x8c00002976000028
  408195:	xchg   ecx,eax
  408196:	add    BYTE PTR [rax],al
  408198:	sub    BYTE PTR [rcx],0x0
  40819b:	add    BYTE PTR [rbx+0x2a],bh
  40819e:	add    BYTE PTR [rax],al
  4081a0:	pushf  
  4081a1:	xchg   ecx,eax
  4081a2:	add    BYTE PTR [rax],al
  4081a4:	sub    BYTE PTR [rdx],0x0
  4081a7:	add    BYTE PTR [rdi-0x53ffffd6],ch
  4081ad:	xchg   ecx,eax
  4081ae:	add    BYTE PTR [rax],al
  4081b0:	mov    al,0x2a
  4081b2:	add    BYTE PTR [rax],al
  4081b4:	sbb    DWORD PTR [rbx],ebp
  4081b6:	add    BYTE PTR [rax],al
  4081b8:	mov    ah,0x91
  4081ba:	add    BYTE PTR [rax],al
  4081bc:	and    BYTE PTR [rbx],ch
  4081be:	add    BYTE PTR [rax],al
  4081c0:	and    ebp,DWORD PTR [rbx]
  4081c2:	add    BYTE PTR [rax],al
  4081c4:	rcl    BYTE PTR [rcx+0x2b300000],0x0
  4081cb:	add    BYTE PTR [rcx+0x2b],dh
  4081ce:	add    BYTE PTR [rax],al
  4081d0:	(bad)  
  4081d1:	xchg   ecx,eax
  4081d2:	add    BYTE PTR [rax],al
  4081d4:	sub    BYTE PTR [rbx],0x0
  4081d7:	add    BYTE PTR [rbx+rbp*1-0x6e340000],cl
  4081de:	add    BYTE PTR [rax],al
  4081e0:	nop
  4081e1:	sub    eax,DWORD PTR [rax]
  4081e3:	add    BYTE PTR [rsp+rbp*1-0x6e300000],cl
  4081ea:	add    BYTE PTR [rax],al
  4081ec:	nop
  4081ed:	sub    al,0x0
  4081ef:	add    BYTE PTR [rbx-0x17ffffd4],dl
  4081f5:	xchg   ecx,eax
  4081f6:	add    BYTE PTR [rax],al
  4081f8:	movabs al,ds:0xec00002ca400002c
  408201:	xchg   ecx,eax
  408202:	add    BYTE PTR [rax],al
  408204:	mov    al,0x2c
  408206:	add    BYTE PTR [rax],al
  408208:	mov    ah,0x2c
  40820a:	add    BYTE PTR [rax],al
  40820c:	lock xchg ecx,eax
  40820e:	add    BYTE PTR [rax],al
  408210:	shr    BYTE PTR [rax+rax*1],0x0
  408214:	and    DWORD PTR [rip+0xffffffff91f40000],ebp        # 0xffffffff9234821a
  40821a:	add    BYTE PTR [rax],al
  40821c:	xor    BYTE PTR [rip+0x2e920000],ch        # 0x2ed28222
  408222:	add    BYTE PTR [rax],al
  408224:	add    BYTE PTR [rdx+0x2ea00000],dl
  40822a:	add    BYTE PTR [rax],al
  40822c:	cdq    
  40822d:	xor    DWORD PTR [rax],eax
  40822f:	add    BYTE PTR [rdx+rdx*4],dl
  408232:	add    BYTE PTR [rax],al
  408234:	movabs al,ds:0x2c00003346000031
  40823d:	xchg   edx,eax
  40823e:	add    BYTE PTR [rax],al
  408240:	push   rax
  408241:	xor    eax,DWORD PTR [rax]
  408243:	add    BYTE PTR [rsp+rsi*1],bh
  408246:	add    BYTE PTR [rax],al
  408248:	xor    al,0x92
  40824a:	add    BYTE PTR [rax],al
  40824c:	xor    al,0x0
  40824f:	add    al,bh
  408251:	xor    eax,0x92440000
  408256:	add    BYTE PTR [rax],al
  408258:	add    BYTE PTR [rsi],dh
  40825a:	add    BYTE PTR [rax],al
  40825c:	ins    DWORD PTR es:[rdi],dx
  40825d:	add    BYTE PTR ss:[rax],al
  408260:	rex.WR xchg rdx,rax
  408262:	add    BYTE PTR [rax],al
  408264:	jo     0x40829c
  408266:	add    BYTE PTR [rax],al
  408268:	out    dx,eax
  408269:	add    BYTE PTR ss:[rax],al
  40826c:	pop    rsp
  40826d:	xchg   edx,eax
  40826e:	add    BYTE PTR [rax],al
  408270:	lock add BYTE PTR ss:[rax],al
  408274:	(bad)  
  408275:	(bad)  
  408276:	add    BYTE PTR [rax],al
  408278:	push   0xffffffff90000092
  40827d:	(bad)  
  40827e:	add    BYTE PTR [rax],al
  408280:	push   0x38
  408282:	add    BYTE PTR [rax],al
  408284:	jo     0x408218
  408286:	add    BYTE PTR [rax],al
  408288:	jo     0x4082c2
  40828a:	add    BYTE PTR [rax],al
  40828c:	(bad)  
  40828d:	cmp    BYTE PTR [rax],al
  40828f:	add    BYTE PTR [rax-0x6e],bh
  408292:	add    BYTE PTR [rax],al
  408294:	nop
  408295:	cmp    BYTE PTR [rax],al
  408297:	add    BYTE PTR [rdx+0x7c000038],ah
  40829d:	xchg   edx,eax
  40829e:	add    BYTE PTR [rax],al
  4082a0:	mov    al,0x38
  4082a2:	add    BYTE PTR [rax],al
  4082a4:	cmc    
  4082a5:	cmp    BYTE PTR [rax],al
  4082a7:	add    BYTE PTR [rax+0x92],al
  4082ad:	cmp    DWORD PTR [rax],eax
  4082af:	add    BYTE PTR [rsi-0x7bffffc7],bl
  4082b5:	xchg   edx,eax
  4082b6:	add    BYTE PTR [rax],al
  4082b8:	movabs al,ds:0x90000039e3000039
  4082c1:	xchg   edx,eax
  4082c2:	add    BYTE PTR [rax],al
  4082c4:	lock cmp DWORD PTR [rax],eax
  4082c7:	add    BYTE PTR [rbx],ch
  4082c9:	cmp    al,BYTE PTR [rax]
  4082cb:	add    BYTE PTR [rdx+rdx*4+0x3a300000],bl
  4082d2:	add    BYTE PTR [rax],al
  4082d4:	mov    esi,0xa400003a
  4082d9:	xchg   edx,eax
  4082da:	add    BYTE PTR [rax],al
  4082dc:	sar    BYTE PTR [rdx],0x0
  4082df:	add    al,bh
  4082e1:	cmp    al,BYTE PTR [rax]
  4082e3:	add    BYTE PTR [rax+0x92],dh
  4082e9:	cmp    eax,DWORD PTR [rax]
  4082eb:	add    BYTE PTR [rbp+0x3b],dl
  4082ee:	add    BYTE PTR [rax],al
  4082f0:	mov    esp,0x60000092
  4082f5:	cmp    eax,DWORD PTR [rax]
  4082f7:	add    BYTE PTR [rsi],cl
  4082f9:	cmp    al,0x0
  4082fb:	add    al,cl
  4082fd:	xchg   edx,eax
  4082fe:	add    BYTE PTR [rax],al
  408300:	xor    BYTE PTR [rip+0x3d380000],bh        # 0x3d788306
  408306:	add    BYTE PTR [rax],al
  408308:	fcom   DWORD PTR [rdx+0x3d400000]
  40830e:	add    BYTE PTR [rax],al
  408310:	rex.WXB cmp rax,0xffffffff92dc0000
  408316:	add    BYTE PTR [rax],al
  408318:	adc    BYTE PTR [rsi],bh
  40831a:	add    BYTE PTR [rax],al
  40831c:	fwait
  40831d:	add    BYTE PTR [rax],r8b
  408320:	rex.WR xchg rcx,rax
	...

Disassembly of section .xdata:

0000000000409000 <.xdata>:
  409000:	add    DWORD PTR [rax],eax
  409002:	add    BYTE PTR [rax],al
  409004:	add    DWORD PTR [rcx+rax*1],eax
  409007:	add    BYTE PTR [rdx+rax*2],al
  40900a:	add    BYTE PTR [rax],al
  40900c:	add    DWORD PTR [rcx+rax*1],eax
  40900f:	add    BYTE PTR [rdx+riz*2],al
  409012:	add    BYTE PTR [rax],al
  409014:	add    DWORD PTR [rdi],ecx
  409016:	or     BYTE PTR [rax],al
  409018:	lgdt   [rbx]
  40901b:	add    BYTE PTR [rax],cl
  40901d:	xor    BYTE PTR [rdi],al
  40901f:	(bad)  
  409020:	(bad)  
  409021:	jo     0x409028
  409023:	push   rax
  409024:	add    al,0xc0
  409026:	add    dl,al
  409028:	or     DWORD PTR [rcx+rax*1],eax
  40902b:	add    BYTE PTR [rdx+rax*2],al
  40902e:	add    BYTE PTR [rax],al
  409030:	and    BYTE PTR [rip+0x10000],bh        # 0x419036
  409036:	add    BYTE PTR [rax],al
  409038:	(bad)  
  409039:	adc    al,0x0
  40903b:	add    ah,ch
  40903d:	adc    al,0x0
  40903f:	add    BYTE PTR [rax+0x34],al
  409042:	add    BYTE PTR [rax],al
  409044:	in     al,dx
  409045:	adc    al,0x0
  409047:	add    BYTE PTR [rcx],cl
  409049:	add    al,0x1
  40904b:	add    BYTE PTR [rdx+rax*2],al
  40904e:	add    BYTE PTR [rax],al
  409050:	and    BYTE PTR [rip+0x10000],bh        # 0x419056
  409056:	add    BYTE PTR [rax],al
  409058:	add    al,0x15
  40905a:	add    BYTE PTR [rax],al
  40905c:	sbb    al,0x15
  40905e:	add    BYTE PTR [rax],al
  409060:	xor    al,0x0
  409063:	add    BYTE PTR [rdx*1+0x4010000],bl
  40906a:	add    DWORD PTR [rax],eax
  40906c:	add    al,0x62
  40906e:	add    BYTE PTR [rax],al
  409070:	add    DWORD PTR [rip+0x32050002],eax        # 0x32459078
  409076:	add    DWORD PTR [rax],esi
  409078:	add    DWORD PTR [rax],eax
  40907a:	add    BYTE PTR [rax],al
  40907c:	add    DWORD PTR [rdi],eax
  40907e:	add    al,0x0
  409080:	(bad)  
  409081:	xor    al,BYTE PTR [rbx]
  409083:	xor    BYTE PTR [rdx],al
  409085:	(bad)  
  409086:	add    DWORD PTR [rax+0x1],esi
  409089:	(bad)  
  40908a:	add    eax,DWORD PTR [rax]
  40908c:	(bad)  
  40908d:	rex.X add sil,BYTE PTR [rax]
  409090:	add    DWORD PTR [rax+0x0],esp
  409093:	add    BYTE PTR [rcx],al
  409095:	add    al,0x1
  409097:	add    BYTE PTR [rdx+rax*2],al
  40909a:	add    BYTE PTR [rax],al
  40909c:	add    DWORD PTR [rip+0x32050002],eax        # 0x324590a4
  4090a2:	add    DWORD PTR [rax],esi
  4090a4:	add    DWORD PTR [rdi],eax
  4090a6:	add    al,0x0
  4090a8:	(bad)  
  4090a9:	push   rdx
  4090aa:	add    esi,DWORD PTR [rax]
  4090ac:	add    ah,BYTE PTR [rax+0x1]
  4090af:	jo     0x4090b2
  4090b1:	(bad)  
  4090b2:	add    al,0x0
  4090b4:	(bad)  
  4090b5:	xor    al,BYTE PTR [rbx]
  4090b7:	xor    BYTE PTR [rdx],al
  4090b9:	(bad)  
  4090ba:	add    DWORD PTR [rax+0x1],esi
  4090bd:	add    al,0x1
  4090bf:	add    BYTE PTR [rdx+rax*2],al
  4090c2:	add    BYTE PTR [rax],al
  4090c4:	add    DWORD PTR [rdi],eax
  4090c6:	add    al,0x0
  4090c8:	(bad)  
  4090c9:	jb     0x4090ce
  4090cb:	xor    BYTE PTR [rdx],al
  4090cd:	(bad)  
  4090ce:	add    DWORD PTR [rax+0x1],esi
  4090d1:	or     eax,DWORD PTR [rsi]
  4090d3:	add    BYTE PTR [rbx],cl
  4090d5:	add    DWORD PTR [rcx],ebx
  4090d7:	add    BYTE PTR [rax+rsi*1],al
  4090da:	add    esp,DWORD PTR [rax+0x2]
  4090dd:	jo     0x4090e0
  4090df:	push   rax
  4090e0:	add    DWORD PTR [rcx+rax*1],eax
  4090e3:	add    BYTE PTR [rdx+riz*2],al
  4090e6:	add    BYTE PTR [rax],al
  4090e8:	add    DWORD PTR [rcx+rax*1],eax
  4090eb:	add    BYTE PTR [rdx+riz*2],al
  4090ee:	add    BYTE PTR [rax],al
  4090f0:	add    DWORD PTR [rdi+rax*1],ecx
  4090f3:	add    BYTE PTR [rdx+riz*2],cl
  4090f6:	or     BYTE PTR [rax],dh
  4090f8:	(bad)  
  4090f9:	(bad)  
  4090fa:	(bad)  
  4090fb:	jo     0x409102
  4090fd:	push   rax
  4090fe:	add    al,0xc0
  409100:	add    dl,al
  409102:	add    BYTE PTR [rax],al
  409104:	add    DWORD PTR [rsi],ecx
  409106:	or     BYTE PTR [rax],al
  409108:	(bad)  
  409109:	jb     0x409115
  40910b:	xor    BYTE PTR [rcx],cl
  40910d:	(bad)  
  40910e:	or     BYTE PTR [rax+0x7],dh
  409111:	push   rax
  409112:	(bad)  
  409113:	rol    BYTE PTR [rax+rdx*8],0x2
  409117:	loopne 0x40911a
  409119:	or     al,0x7
  40911b:	add    BYTE PTR [rdx+riz*2],cl
  40911e:	or     BYTE PTR [rax],dh
  409120:	(bad)  
  409121:	(bad)  
  409122:	(bad)  
  409123:	jo     0x40912a
  409125:	push   rax
  409126:	add    al,0xc0
  409128:	add    dl,al
  40912a:	add    BYTE PTR [rax],al
  40912c:	add    DWORD PTR [rsi],eax
  40912e:	add    eax,DWORD PTR [rax]
  409130:	(bad)  
  409131:	(bad)  
  409133:	xor    BYTE PTR [rcx],al
  409135:	(bad)  
  409136:	add    BYTE PTR [rax],al
  409138:	add    DWORD PTR [rip+0x32050002],eax        # 0x32459140
  40913e:	add    DWORD PTR [rax],esi
  409140:	add    DWORD PTR [rsi],eax
  409142:	add    eax,DWORD PTR [rax]
  409144:	(bad)  
  409145:	rex.X add sil,BYTE PTR [rax]
  409148:	add    DWORD PTR [rax+0x0],esp
  40914b:	add    BYTE PTR [rcx],al
  40914d:	or     al,BYTE PTR [rsi]
  40914f:	add    BYTE PTR [rdx],cl
  409151:	push   rdx
  409152:	(bad)  
  409153:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b095b9
  409159:	push   rax
  40915a:	add    al,al
  40915c:	add    DWORD PTR [rip+0x52050002],eax        # 0x52459164
  409162:	add    DWORD PTR [rax],esi
  409164:	add    DWORD PTR [rcx+rax*1],eax
  409167:	add    BYTE PTR [rdx+rax*2],al
  40916a:	add    BYTE PTR [rax],al
  40916c:	add    DWORD PTR [rcx+rax*1],eax
  40916f:	add    BYTE PTR [rdx+rax*2],al
  409172:	add    BYTE PTR [rax],al
  409174:	add    DWORD PTR [rsi],eax
  409176:	add    eax,DWORD PTR [rax]
  409178:	(bad)  
  409179:	rex.X add sil,BYTE PTR [rax]
  40917c:	add    DWORD PTR [rax+0x0],esp
  40917f:	add    BYTE PTR [rcx],al
  409181:	add    BYTE PTR [rax],al
  409183:	add    BYTE PTR [rcx],al
  409185:	add    BYTE PTR [rax],al
  409187:	add    BYTE PTR [rcx],al
  409189:	add    BYTE PTR [rax],al
  40918b:	add    BYTE PTR [rcx],al
  40918d:	or     al,BYTE PTR [rsi]
  40918f:	add    BYTE PTR [rdx],cl
  409191:	jb     0x409199
  409193:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b095f9
  409199:	push   rax
  40919a:	add    al,al
  40919c:	add    DWORD PTR [rdx],ecx
  40919e:	add    eax,0x6d20a05
  4091a3:	add    eax,DWORD PTR [rbx]
  4091a5:	xor    BYTE PTR [rdx],al
  4091a7:	(bad)  
  4091a8:	add    DWORD PTR [rax+0x0],edx
  4091ab:	add    BYTE PTR [rcx],al
  4091ad:	add    al,0x1
  4091af:	add    BYTE PTR [rdx+rax*2],al
  4091b2:	add    BYTE PTR [rax],al
  4091b4:	add    DWORD PTR [rsi],eax
  4091b6:	add    eax,DWORD PTR [rax]
  4091b8:	(bad)  
  4091b9:	rex.X add sil,BYTE PTR [rax]
  4091bc:	add    DWORD PTR [rax+0x0],esp
  4091bf:	add    BYTE PTR [rcx],al
  4091c1:	add    BYTE PTR [rax],al
  4091c3:	add    BYTE PTR [rcx],al
  4091c5:	add    al,0x1
  4091c7:	add    BYTE PTR [rdx+riz*4],al
  4091ca:	add    BYTE PTR [rax],al
  4091cc:	add    DWORD PTR [rax],eax
  4091ce:	add    BYTE PTR [rax],al
  4091d0:	add    DWORD PTR [rsi],edx
  4091d2:	or     DWORD PTR [rax],eax
  4091d4:	(bad)  
  4091d5:	mov    BYTE PTR [rsi],al
  4091d7:	add    BYTE PTR [rax],dl
  4091d9:	js     0x4091e0
  4091db:	add    BYTE PTR [rbx],cl
  4091dd:	push   0xffffffffe2060004
  4091e2:	add    dh,BYTE PTR [rax]
  4091e4:	add    DWORD PTR [rax+0x0],esp
  4091e7:	add    BYTE PTR [rcx],al
  4091e9:	add    BYTE PTR [rax],al
  4091eb:	add    BYTE PTR [rcx],al
  4091ed:	add    BYTE PTR [rax],al
  4091ef:	add    BYTE PTR [rcx],al
  4091f1:	add    BYTE PTR [rax],al
  4091f3:	add    BYTE PTR [rcx],al
  4091f5:	(bad)  
  4091f6:	add    eax,DWORD PTR [rax]
  4091f8:	(bad)  
  4091f9:	(bad)  
  4091fb:	xor    BYTE PTR [rcx],al
  4091fd:	(bad)  
  4091fe:	add    BYTE PTR [rax],al
  409200:	add    DWORD PTR [rdi+rax*1],ecx
  409203:	add    BYTE PTR [rdx+riz*4],cl
  409206:	or     BYTE PTR [rax],dh
  409208:	(bad)  
  409209:	(bad)  
  40920a:	(bad)  
  40920b:	jo     0x409212
  40920d:	push   rax
  40920e:	add    al,0xc0
  409210:	add    dl,al
  409212:	add    BYTE PTR [rax],al
  409214:	add    DWORD PTR [rcx],edx
  409216:	or     DWORD PTR [rip+0x30db211],eax        # 0x34e442d
  40921c:	or     dh,BYTE PTR [rax]
  40921e:	or     DWORD PTR [rax+0x8],esp
  409221:	jo     0x40922a
  409223:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x22095fa
  40922a:	add    BYTE PTR [rax],al
  40922c:	add    DWORD PTR [rcx+rax*1],eax
  40922f:	add    BYTE PTR [rdx+rax*2],al
  409232:	add    BYTE PTR [rax],al
  409234:	add    DWORD PTR [rdx],ecx
  409236:	(bad)  
  409237:	add    BYTE PTR [rdx],cl
  409239:	xor    al,BYTE PTR [rsi]
  40923b:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b096a1
  409241:	push   rax
  409242:	add    al,al
  409244:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245924c
  40924a:	add    DWORD PTR [rax],esi
  40924c:	add    DWORD PTR [rax],ecx
  40924e:	add    eax,0x4420800
  409253:	xor    BYTE PTR [rbx],al
  409255:	(bad)  
  409256:	add    dh,BYTE PTR [rax+0x1]
  409259:	push   rax
  40925a:	add    BYTE PTR [rax],al
  40925c:	add    DWORD PTR [rdi],eax
  40925e:	add    al,0x0
  409260:	(bad)  
  409261:	xor    al,BYTE PTR [rbx]
  409263:	xor    BYTE PTR [rdx],al
  409265:	(bad)  
  409266:	add    DWORD PTR [rax+0x1],esi
  409269:	add    eax,0x32050002
  40926e:	add    DWORD PTR [rax],esi
  409270:	add    DWORD PTR [rip+0x32050002],eax        # 0x32459278
  409276:	add    DWORD PTR [rax],esi
  409278:	add    DWORD PTR [rax],eax
  40927a:	add    BYTE PTR [rax],al
  40927c:	add    DWORD PTR [rax],eax
  40927e:	add    BYTE PTR [rax],al
  409280:	add    DWORD PTR [rax],eax
  409282:	add    BYTE PTR [rax],al
  409284:	add    DWORD PTR [rdi],eax
  409286:	add    al,0x0
  409288:	(bad)  
  409289:	xor    al,BYTE PTR [rbx]
  40928b:	xor    BYTE PTR [rdx],al
  40928d:	(bad)  
  40928e:	add    DWORD PTR [rax+0x1],esi
  409291:	(bad)  
  409292:	add    eax,DWORD PTR [rax]
  409294:	(bad)  
  409295:	rex.X add sil,BYTE PTR [rax]
  409298:	add    DWORD PTR [rax+0x0],esp
  40929b:	add    BYTE PTR [rcx],al
  40929d:	add    eax,0x32050002
  4092a2:	add    DWORD PTR [rax],esi
  4092a4:	add    DWORD PTR [rdi],eax
  4092a6:	add    al,0x0
  4092a8:	(bad)  
  4092a9:	xor    al,BYTE PTR [rbx]
  4092ab:	xor    BYTE PTR [rdx],al
  4092ad:	(bad)  
  4092ae:	add    DWORD PTR [rax+0x1],esi
  4092b1:	(bad)  
  4092b2:	add    eax,DWORD PTR [rax]
  4092b4:	(bad)  
  4092b5:	rex.X add sil,BYTE PTR [rax]
  4092b8:	add    DWORD PTR [rax+0x0],esp
  4092bb:	add    BYTE PTR [rcx],al
  4092bd:	(bad)  
  4092be:	add    eax,DWORD PTR [rax]
  4092c0:	(bad)  
  4092c1:	rex.X add sil,BYTE PTR [rax]
  4092c4:	add    DWORD PTR [rax+0x0],esp
  4092c7:	add    BYTE PTR [rcx],al
  4092c9:	or     BYTE PTR [rip+0x4420800],al        # 0x4829acf
  4092cf:	xor    BYTE PTR [rbx],al
  4092d1:	(bad)  
  4092d2:	add    dh,BYTE PTR [rax+0x1]
  4092d5:	push   rax
  4092d6:	add    BYTE PTR [rax],al
  4092d8:	add    DWORD PTR [rax],eax
  4092da:	add    BYTE PTR [rax],al
  4092dc:	add    DWORD PTR [rax],eax
	...

Disassembly of section .bss:

000000000040a000 <.bss>:
	...

Disassembly of section .idata:

000000000040b000 <.idata>:
  40b000:	mov    WORD PTR [rax+0x0],?
  40b006:	add    BYTE PTR [rax],al
  40b008:	add    BYTE PTR [rax],al
  40b00a:	add    BYTE PTR [rax],al
  40b00c:	xor    al,0xc2
  40b00e:	add    BYTE PTR [rax],al
  40b010:	fs mov ah,0x0
  40b013:	add    BYTE PTR [rcx+rsi*4+0x0],ch
	...
  40b01f:	add    BYTE PTR [rdx+rax*8-0x4abc0000],bh
  40b026:	add    BYTE PTR [rax],al
  40b028:	pop    rsp
  40b029:	mov    dl,0x0
	...
  40b033:	add    ah,bl
  40b035:	ret    0x0
  40b038:	xor    al,0xb6
  40b03a:	add    BYTE PTR [rax],al
  40b03c:	jl     0x40aff0
	...
  40b046:	add    BYTE PTR [rax],al
  40b048:	or     bl,al
  40b04a:	add    BYTE PTR [rax],al
  40b04c:	push   rsp
  40b04d:	mov    dh,0x0
  40b04f:	add    BYTE PTR [rdx+rsi*4+0x0],ch
  40b056:	add    BYTE PTR [rax],al
  40b058:	add    BYTE PTR [rax],al
  40b05a:	add    BYTE PTR [rax],al
  40b05c:	je     0x40b021
  40b05e:	add    BYTE PTR [rax],al
  40b060:	test   BYTE PTR [rsi-0x4c940000],dh
	...
  40b06e:	add    BYTE PTR [rax],al
  40b070:	cld    
  40b071:	ret    
  40b072:	add    BYTE PTR [rax],al
  40b074:	rex.R mov dil,0x0
	...
  40b08b:	add    BYTE PTR [rax+rdi*4],bh
  40b08e:	add    BYTE PTR [rax],al
  40b090:	add    BYTE PTR [rax],al
  40b092:	add    BYTE PTR [rax],al
  40b094:	push   rax
  40b095:	mov    eax,0x0
  40b09a:	add    BYTE PTR [rax],al
  40b09c:	fs mov eax,0x0
  40b0a2:	add    BYTE PTR [rax],al
  40b0a4:	jl     0x40b05e
  40b0a6:	add    BYTE PTR [rax],al
  40b0a8:	add    BYTE PTR [rax],al
  40b0aa:	add    BYTE PTR [rax],al
  40b0ac:	xchg   esp,eax
  40b0ad:	mov    eax,0x0
  40b0b2:	add    BYTE PTR [rax],al
  40b0b4:	mov    al,0xb8
  40b0b6:	add    BYTE PTR [rax],al
  40b0b8:	add    BYTE PTR [rax],al
  40b0ba:	add    BYTE PTR [rax],al
  40b0bc:	int3   
  40b0bd:	mov    eax,0x0
  40b0c2:	add    BYTE PTR [rax],al
  40b0c4:	loopne 0x40b07e
  40b0c6:	add    BYTE PTR [rax],al
  40b0c8:	add    BYTE PTR [rax],al
  40b0ca:	add    BYTE PTR [rax],al
  40b0cc:	clc    
  40b0cd:	mov    eax,0x0
  40b0d2:	add    BYTE PTR [rax],al
  40b0d4:	or     al,0xb9
  40b0d6:	add    BYTE PTR [rax],al
  40b0d8:	add    BYTE PTR [rax],al
  40b0da:	add    BYTE PTR [rax],al
  40b0dc:	sub    BYTE PTR [rcx+0x0],bh
  40b0e2:	add    BYTE PTR [rax],al
  40b0e4:	rex.R mov ecx,0x0
  40b0ea:	add    BYTE PTR [rax],al
  40b0ec:	fs mov ecx,0x0
  40b0f2:	add    BYTE PTR [rax],al
  40b0f4:	cmp    BYTE PTR [rcx+0x0],0x0
  40b0fb:	add    BYTE PTR [rcx+rdi*4+0x0],ah
  40b102:	add    BYTE PTR [rax],al
  40b104:	int3   
  40b105:	mov    ecx,0x0
  40b10a:	add    BYTE PTR [rax],al
  40b10c:	lock mov ecx,0x0
  40b112:	add    BYTE PTR [rax],al
  40b114:	adc    BYTE PTR [rdx+0x0],bh
  40b11a:	add    BYTE PTR [rax],al
  40b11c:	xor    BYTE PTR [rdx+0x0],bh
  40b122:	add    BYTE PTR [rax],al
  40b124:	pop    rax
  40b125:	mov    edx,0x0
  40b12a:	add    BYTE PTR [rax],al
  40b12c:	cmp    BYTE PTR [rdx+0x0],0x0
  40b133:	add    BYTE PTR [rdx+rdi*4+0x0],ah
  40b13a:	add    BYTE PTR [rax],al
  40b13c:	(bad)  
  40b13d:	mov    edx,0x0
  40b142:	add    BYTE PTR [rax],al
  40b144:	hlt    
  40b145:	mov    edx,0x0
  40b14a:	add    BYTE PTR [rax],al
  40b14c:	sbb    BYTE PTR [rbx+0x0],bh
  40b152:	add    BYTE PTR [rax],al
  40b154:	xor    al,0xbb
  40b156:	add    BYTE PTR [rax],al
  40b158:	add    BYTE PTR [rax],al
  40b15a:	add    BYTE PTR [rax],al
  40b15c:	rex.WR movabs rbx,0x0
  40b166:	add    BYTE PTR [rax],al
  40b168:	add    BYTE PTR [rax],al
  40b16a:	add    BYTE PTR [rax],al
  40b16c:	(bad)  
  40b16d:	mov    ebx,0x0
  40b172:	add    BYTE PTR [rax],al
  40b174:	js     0x40b131
  40b176:	add    BYTE PTR [rax],al
  40b178:	add    BYTE PTR [rax],al
  40b17a:	add    BYTE PTR [rax],al
  40b17c:	mov    BYTE PTR [rbx+0x0],bh
  40b182:	add    BYTE PTR [rax],al
  40b184:	xchg   esp,eax
  40b185:	mov    ebx,0x0
  40b18a:	add    BYTE PTR [rax],al
  40b18c:	mov    al,0xbb
  40b18e:	add    BYTE PTR [rax],al
  40b190:	add    BYTE PTR [rax],al
  40b192:	add    BYTE PTR [rax],al
  40b194:	mov    esp,0xbb
  40b199:	add    BYTE PTR [rax],al
  40b19b:	add    ah,cl
  40b19d:	mov    ebx,0x0
  40b1a2:	add    BYTE PTR [rax],al
  40b1a4:	fdivr  QWORD PTR [rbx+0x0]
  40b1aa:	add    BYTE PTR [rax],al
  40b1ac:	lock mov ebx,0x0
  40b1b2:	add    BYTE PTR [rax],al
  40b1b4:	add    al,0xbc
  40b1b6:	add    BYTE PTR [rax],al
  40b1b8:	add    BYTE PTR [rax],al
  40b1ba:	add    BYTE PTR [rax],al
  40b1bc:	adc    al,0xbc
  40b1be:	add    BYTE PTR [rax],al
  40b1c0:	add    BYTE PTR [rax],al
  40b1c2:	add    BYTE PTR [rax],al
  40b1c4:	sub    BYTE PTR [rax+rax*1+0x0],bh
  40b1cb:	add    BYTE PTR [rsp+rdi*4+0x0],al
  40b1cf:	add    BYTE PTR [rax],al
  40b1d1:	add    BYTE PTR [rax],al
  40b1d3:	add    BYTE PTR [rsp+rdi*4+0x0],dl
  40b1d7:	add    BYTE PTR [rax],al
  40b1d9:	add    BYTE PTR [rax],al
  40b1db:	add    BYTE PTR [rsp+rdi*4+0x0],ah
  40b1df:	add    BYTE PTR [rax],al
  40b1e1:	add    BYTE PTR [rax],al
  40b1e3:	add    BYTE PTR [rax-0x44],bh
  40b1e6:	add    BYTE PTR [rax],al
  40b1e8:	add    BYTE PTR [rax],al
  40b1ea:	add    BYTE PTR [rax],al
  40b1ec:	mov    BYTE PTR [rax+rax*1+0x0],bh
  40b1f3:	add    BYTE PTR [rax+0xbc],bl
  40b1f9:	add    BYTE PTR [rax],al
  40b1fb:	add    BYTE PTR [rsp+rdi*4+0x0],dh
  40b202:	add    BYTE PTR [rax],al
  40b204:	int3   
  40b205:	mov    esp,0x0
  40b20a:	add    BYTE PTR [rax],al
  40b20c:	in     al,0xbc
  40b20e:	add    BYTE PTR [rax],al
  40b210:	add    BYTE PTR [rax],al
  40b212:	add    BYTE PTR [rax],al
  40b214:	cld    
  40b215:	mov    esp,0x0
  40b21a:	add    BYTE PTR [rax],al
  40b21c:	adc    BYTE PTR [rbp+0x0],bh
  40b222:	add    BYTE PTR [rax],al
  40b224:	cmp    BYTE PTR [rbp+0x0],bh
  40b22a:	add    BYTE PTR [rax],al
  40b22c:	rex.WR movabs rbp,0xbd64000000000000
  40b236:	add    BYTE PTR [rax],al
  40b238:	add    BYTE PTR [rax],al
  40b23a:	add    BYTE PTR [rax],al
  40b23c:	js     0x40b1fb
  40b23e:	add    BYTE PTR [rax],al
  40b240:	add    BYTE PTR [rax],al
  40b242:	add    BYTE PTR [rax],al
  40b244:	nop
  40b245:	mov    ebp,0x0
  40b24a:	add    BYTE PTR [rax],al
  40b24c:	test   al,0xbd
	...
  40b25a:	add    BYTE PTR [rax],al
  40b25c:	sar    BYTE PTR [rbp+0x0],0x0
  40b263:	add    al,dl
  40b265:	mov    ebp,0x0
  40b26a:	add    BYTE PTR [rax],al
  40b26c:	in     al,0xbd
	...
  40b27a:	add    BYTE PTR [rax],al
  40b27c:	cld    
  40b27d:	mov    ebp,0x0
  40b282:	add    BYTE PTR [rax],al
  40b284:	and    BYTE PTR [rsi+0x0],bh
  40b28a:	add    BYTE PTR [rax],al
  40b28c:	cmp    al,0xbe
  40b28e:	add    BYTE PTR [rax],al
  40b290:	add    BYTE PTR [rax],al
  40b292:	add    BYTE PTR [rax],al
  40b294:	push   rax
  40b295:	mov    esi,0x0
  40b29a:	add    BYTE PTR [rax],al
  40b29c:	fs mov esi,0x0
	...
  40b2aa:	add    BYTE PTR [rax],al
  40b2ac:	jl     0x40b26c
  40b2ae:	add    BYTE PTR [rax],al
  40b2b0:	add    BYTE PTR [rax],al
  40b2b2:	add    BYTE PTR [rax],al
  40b2b4:	xchg   esp,eax
  40b2b5:	mov    esi,0x0
  40b2ba:	add    BYTE PTR [rax],al
  40b2bc:	lods   al,BYTE PTR ds:[rsi]
  40b2bd:	mov    esi,0x0
  40b2c2:	add    BYTE PTR [rax],al
  40b2c4:	sar    BYTE PTR [rsi+0x0],0x0
  40b2cb:	add    dh,dl
  40b2cd:	mov    esi,0x0
  40b2d2:	add    BYTE PTR [rax],al
  40b2d4:	in     al,dx
  40b2d5:	mov    esi,0x0
  40b2da:	add    BYTE PTR [rax],al
  40b2dc:	cld    
  40b2dd:	mov    esi,0x0
  40b2e2:	add    BYTE PTR [rax],al
  40b2e4:	(bad)  
  40b2e5:	mov    edi,0x0
  40b2ea:	add    BYTE PTR [rax],al
  40b2ec:	sub    BYTE PTR [rdi+0x0],bh
  40b2f2:	add    BYTE PTR [rax],al
  40b2f4:	cmp    BYTE PTR [rdi+0x0],bh
  40b2fa:	add    BYTE PTR [rax],al
  40b2fc:	push   rsp
  40b2fd:	mov    edi,0x0
  40b302:	add    BYTE PTR [rax],al
  40b304:	ins    BYTE PTR es:[rdi],dx
  40b305:	mov    edi,0x0
  40b30a:	add    BYTE PTR [rax],al
  40b30c:	xchg   BYTE PTR [rdi+0x0],bh
  40b312:	add    BYTE PTR [rax],al
  40b314:	pushf  
  40b315:	mov    edi,0x0
  40b31a:	add    BYTE PTR [rax],al
  40b31c:	mov    al,0xbf
  40b31e:	add    BYTE PTR [rax],al
  40b320:	add    BYTE PTR [rax],al
  40b322:	add    BYTE PTR [rax],al
  40b324:	retf   0xbf
  40b327:	add    BYTE PTR [rax],al
  40b329:	add    BYTE PTR [rax],al
  40b32b:	add    dh,bl
  40b32d:	mov    edi,0x0
  40b332:	add    BYTE PTR [rax],al
  40b334:	cld    
  40b335:	mov    edi,0x0
  40b33a:	add    BYTE PTR [rax],al
  40b33c:	add    al,0xc0
  40b33e:	add    BYTE PTR [rax],al
  40b340:	add    BYTE PTR [rax],al
  40b342:	add    BYTE PTR [rax],al
  40b344:	sbb    al,al
  40b346:	add    BYTE PTR [rax],al
  40b348:	add    BYTE PTR [rax],al
  40b34a:	add    BYTE PTR [rax],al
  40b34c:	rol    BYTE PTR es:[rax],0x0
  40b350:	add    BYTE PTR [rax],al
  40b352:	add    BYTE PTR [rax],al
  40b354:	rex.X rol BYTE PTR [rax],0x0
  40b358:	add    BYTE PTR [rax],al
  40b35a:	add    BYTE PTR [rax],al
  40b35c:	push   rsp
  40b35d:	rol    BYTE PTR [rax],0x0
	...
  40b36c:	rol    BYTE PTR fs:[rax],0x0
  40b370:	add    BYTE PTR [rax],al
  40b372:	add    BYTE PTR [rax],al
  40b374:	jl     0x40b336
  40b376:	add    BYTE PTR [rax],al
  40b378:	add    BYTE PTR [rax],al
  40b37a:	add    BYTE PTR [rax],al
  40b37c:	mov    al,al
  40b37e:	add    BYTE PTR [rax],al
  40b380:	add    BYTE PTR [rax],al
  40b382:	add    BYTE PTR [rax],al
  40b384:	(bad)  
  40b385:	rol    BYTE PTR [rax],0x0
  40b388:	add    BYTE PTR [rax],al
  40b38a:	add    BYTE PTR [rax],al
  40b38c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40b38d:	rol    BYTE PTR [rax],0x0
  40b390:	add    BYTE PTR [rax],al
  40b392:	add    BYTE PTR [rax],al
  40b394:	mov    ah,0xc0
  40b396:	add    BYTE PTR [rax],al
  40b398:	add    BYTE PTR [rax],al
  40b39a:	add    BYTE PTR [rax],al
  40b39c:	(bad)  
  40b39d:	rol    BYTE PTR [rax],0x0
  40b3a0:	add    BYTE PTR [rax],al
  40b3a2:	add    BYTE PTR [rax],al
  40b3a4:	(bad)  
  40b3a5:	rol    BYTE PTR [rax],0x0
  40b3a8:	add    BYTE PTR [rax],al
  40b3aa:	add    BYTE PTR [rax],al
  40b3ac:	(bad)  
  40b3ad:	rol    BYTE PTR [rax],0x0
  40b3b0:	add    BYTE PTR [rax],al
  40b3b2:	add    BYTE PTR [rax],al
  40b3b4:	hlt    
  40b3b5:	rol    BYTE PTR [rax],0x0
  40b3b8:	add    BYTE PTR [rax],al
  40b3ba:	add    BYTE PTR [rax],al
  40b3bc:	add    al,cl
  40b3be:	add    BYTE PTR [rax],al
  40b3c0:	add    BYTE PTR [rax],al
  40b3c2:	add    BYTE PTR [rax],al
  40b3c4:	or     al,0xc1
  40b3c6:	add    BYTE PTR [rax],al
  40b3c8:	add    BYTE PTR [rax],al
  40b3ca:	add    BYTE PTR [rax],al
  40b3cc:	(bad)  
  40b3cd:	rol    DWORD PTR [rax],0x0
  40b3d0:	add    BYTE PTR [rax],al
  40b3d2:	add    BYTE PTR [rax],al
  40b3d4:	and    al,cl
  40b3d6:	add    BYTE PTR [rax],al
  40b3d8:	add    BYTE PTR [rax],al
  40b3da:	add    BYTE PTR [rax],al
  40b3dc:	sub    al,cl
  40b3de:	add    BYTE PTR [rax],al
  40b3e0:	add    BYTE PTR [rax],al
  40b3e2:	add    BYTE PTR [rax],al
  40b3e4:	xor    al,0xc1
  40b3e6:	add    BYTE PTR [rax],al
  40b3e8:	add    BYTE PTR [rax],al
  40b3ea:	add    BYTE PTR [rax],al
  40b3ec:	rol    DWORD PTR ds:[rax],0x0
  40b3f0:	add    BYTE PTR [rax],al
  40b3f2:	add    BYTE PTR [rax],al
  40b3f4:	rex.RX rol DWORD PTR [rax],0x0
  40b3f8:	add    BYTE PTR [rax],al
  40b3fa:	add    BYTE PTR [rax],al
  40b3fc:	push   rax
  40b3fd:	rol    DWORD PTR [rax],0x0
  40b400:	add    BYTE PTR [rax],al
  40b402:	add    BYTE PTR [rax],al
  40b404:	pop    rax
  40b405:	rol    DWORD PTR [rax],0x0
  40b408:	add    BYTE PTR [rax],al
  40b40a:	add    BYTE PTR [rax],al
  40b40c:	(bad)  
  40b40e:	add    BYTE PTR [rax],al
  40b410:	add    BYTE PTR [rax],al
  40b412:	add    BYTE PTR [rax],al
  40b414:	push   0xffffffffffffffc1
  40b416:	add    BYTE PTR [rax],al
  40b418:	add    BYTE PTR [rax],al
  40b41a:	add    BYTE PTR [rax],al
  40b41c:	je     0x40b3df
  40b41e:	add    BYTE PTR [rax],al
  40b420:	add    BYTE PTR [rax],al
  40b422:	add    BYTE PTR [rax],al
  40b424:	jle    0x40b3e7
  40b426:	add    BYTE PTR [rax],al
  40b428:	add    BYTE PTR [rax],al
  40b42a:	add    BYTE PTR [rax],al
  40b42c:	mov    cl,al
  40b42e:	add    BYTE PTR [rax],al
  40b430:	add    BYTE PTR [rax],al
  40b432:	add    BYTE PTR [rax],al
  40b434:	xchg   edx,eax
  40b435:	rol    DWORD PTR [rax],0x0
  40b438:	add    BYTE PTR [rax],al
  40b43a:	add    BYTE PTR [rax],al
  40b43c:	pushf  
  40b43d:	rol    DWORD PTR [rax],0x0
  40b440:	add    BYTE PTR [rax],al
  40b442:	add    BYTE PTR [rax],al
  40b444:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40b445:	rol    DWORD PTR [rax],0x0
  40b448:	add    BYTE PTR [rax],al
  40b44a:	add    BYTE PTR [rax],al
  40b44c:	mov    al,0xc1
  40b44e:	add    BYTE PTR [rax],al
  40b450:	add    BYTE PTR [rax],al
  40b452:	add    BYTE PTR [rax],al
  40b454:	mov    edx,0xc1
	...
  40b461:	add    BYTE PTR [rax],al
  40b463:	add    BYTE PTR [rax+rdi*4],bh
  40b466:	add    BYTE PTR [rax],al
  40b468:	add    BYTE PTR [rax],al
  40b46a:	add    BYTE PTR [rax],al
  40b46c:	push   rax
  40b46d:	mov    eax,0x0
  40b472:	add    BYTE PTR [rax],al
  40b474:	fs mov eax,0x0
  40b47a:	add    BYTE PTR [rax],al
  40b47c:	jl     0x40b436
  40b47e:	add    BYTE PTR [rax],al
  40b480:	add    BYTE PTR [rax],al
  40b482:	add    BYTE PTR [rax],al
  40b484:	xchg   esp,eax
  40b485:	mov    eax,0x0
  40b48a:	add    BYTE PTR [rax],al
  40b48c:	mov    al,0xb8
  40b48e:	add    BYTE PTR [rax],al
  40b490:	add    BYTE PTR [rax],al
  40b492:	add    BYTE PTR [rax],al
  40b494:	int3   
  40b495:	mov    eax,0x0
  40b49a:	add    BYTE PTR [rax],al
  40b49c:	loopne 0x40b456
  40b49e:	add    BYTE PTR [rax],al
  40b4a0:	add    BYTE PTR [rax],al
  40b4a2:	add    BYTE PTR [rax],al
  40b4a4:	clc    
  40b4a5:	mov    eax,0x0
  40b4aa:	add    BYTE PTR [rax],al
  40b4ac:	or     al,0xb9
  40b4ae:	add    BYTE PTR [rax],al
  40b4b0:	add    BYTE PTR [rax],al
  40b4b2:	add    BYTE PTR [rax],al
  40b4b4:	sub    BYTE PTR [rcx+0x0],bh
  40b4ba:	add    BYTE PTR [rax],al
  40b4bc:	rex.R mov ecx,0x0
  40b4c2:	add    BYTE PTR [rax],al
  40b4c4:	fs mov ecx,0x0
  40b4ca:	add    BYTE PTR [rax],al
  40b4cc:	cmp    BYTE PTR [rcx+0x0],0x0
  40b4d3:	add    BYTE PTR [rcx+rdi*4+0x0],ah
  40b4da:	add    BYTE PTR [rax],al
  40b4dc:	int3   
  40b4dd:	mov    ecx,0x0
  40b4e2:	add    BYTE PTR [rax],al
  40b4e4:	lock mov ecx,0x0
  40b4ea:	add    BYTE PTR [rax],al
  40b4ec:	adc    BYTE PTR [rdx+0x0],bh
  40b4f2:	add    BYTE PTR [rax],al
  40b4f4:	xor    BYTE PTR [rdx+0x0],bh
  40b4fa:	add    BYTE PTR [rax],al
  40b4fc:	pop    rax
  40b4fd:	mov    edx,0x0
  40b502:	add    BYTE PTR [rax],al
  40b504:	cmp    BYTE PTR [rdx+0x0],0x0
  40b50b:	add    BYTE PTR [rdx+rdi*4+0x0],ah
  40b512:	add    BYTE PTR [rax],al
  40b514:	(bad)  
  40b515:	mov    edx,0x0
  40b51a:	add    BYTE PTR [rax],al
  40b51c:	hlt    
  40b51d:	mov    edx,0x0
  40b522:	add    BYTE PTR [rax],al
  40b524:	sbb    BYTE PTR [rbx+0x0],bh
  40b52a:	add    BYTE PTR [rax],al
  40b52c:	xor    al,0xbb
  40b52e:	add    BYTE PTR [rax],al
  40b530:	add    BYTE PTR [rax],al
  40b532:	add    BYTE PTR [rax],al
  40b534:	rex.WR movabs rbx,0x0
  40b53e:	add    BYTE PTR [rax],al
  40b540:	add    BYTE PTR [rax],al
  40b542:	add    BYTE PTR [rax],al
  40b544:	(bad)  
  40b545:	mov    ebx,0x0
  40b54a:	add    BYTE PTR [rax],al
  40b54c:	js     0x40b509
  40b54e:	add    BYTE PTR [rax],al
  40b550:	add    BYTE PTR [rax],al
  40b552:	add    BYTE PTR [rax],al
  40b554:	mov    BYTE PTR [rbx+0x0],bh
  40b55a:	add    BYTE PTR [rax],al
  40b55c:	xchg   esp,eax
  40b55d:	mov    ebx,0x0
  40b562:	add    BYTE PTR [rax],al
  40b564:	mov    al,0xbb
  40b566:	add    BYTE PTR [rax],al
  40b568:	add    BYTE PTR [rax],al
  40b56a:	add    BYTE PTR [rax],al
  40b56c:	mov    esp,0xbb
  40b571:	add    BYTE PTR [rax],al
  40b573:	add    ah,cl
  40b575:	mov    ebx,0x0
  40b57a:	add    BYTE PTR [rax],al
  40b57c:	fdivr  QWORD PTR [rbx+0x0]
  40b582:	add    BYTE PTR [rax],al
  40b584:	lock mov ebx,0x0
  40b58a:	add    BYTE PTR [rax],al
  40b58c:	add    al,0xbc
  40b58e:	add    BYTE PTR [rax],al
  40b590:	add    BYTE PTR [rax],al
  40b592:	add    BYTE PTR [rax],al
  40b594:	adc    al,0xbc
  40b596:	add    BYTE PTR [rax],al
  40b598:	add    BYTE PTR [rax],al
  40b59a:	add    BYTE PTR [rax],al
  40b59c:	sub    BYTE PTR [rax+rax*1+0x0],bh
  40b5a3:	add    BYTE PTR [rsp+rdi*4+0x0],al
  40b5a7:	add    BYTE PTR [rax],al
  40b5a9:	add    BYTE PTR [rax],al
  40b5ab:	add    BYTE PTR [rsp+rdi*4+0x0],dl
  40b5af:	add    BYTE PTR [rax],al
  40b5b1:	add    BYTE PTR [rax],al
  40b5b3:	add    BYTE PTR [rsp+rdi*4+0x0],ah
  40b5b7:	add    BYTE PTR [rax],al
  40b5b9:	add    BYTE PTR [rax],al
  40b5bb:	add    BYTE PTR [rax-0x44],bh
  40b5be:	add    BYTE PTR [rax],al
  40b5c0:	add    BYTE PTR [rax],al
  40b5c2:	add    BYTE PTR [rax],al
  40b5c4:	mov    BYTE PTR [rax+rax*1+0x0],bh
  40b5cb:	add    BYTE PTR [rax+0xbc],bl
  40b5d1:	add    BYTE PTR [rax],al
  40b5d3:	add    BYTE PTR [rsp+rdi*4+0x0],dh
  40b5da:	add    BYTE PTR [rax],al
  40b5dc:	int3   
  40b5dd:	mov    esp,0x0
  40b5e2:	add    BYTE PTR [rax],al
  40b5e4:	in     al,0xbc
  40b5e6:	add    BYTE PTR [rax],al
  40b5e8:	add    BYTE PTR [rax],al
  40b5ea:	add    BYTE PTR [rax],al
  40b5ec:	cld    
  40b5ed:	mov    esp,0x0
  40b5f2:	add    BYTE PTR [rax],al
  40b5f4:	adc    BYTE PTR [rbp+0x0],bh
  40b5fa:	add    BYTE PTR [rax],al
  40b5fc:	cmp    BYTE PTR [rbp+0x0],bh
  40b602:	add    BYTE PTR [rax],al
  40b604:	rex.WR movabs rbp,0xbd64000000000000
  40b60e:	add    BYTE PTR [rax],al
  40b610:	add    BYTE PTR [rax],al
  40b612:	add    BYTE PTR [rax],al
  40b614:	js     0x40b5d3
  40b616:	add    BYTE PTR [rax],al
  40b618:	add    BYTE PTR [rax],al
  40b61a:	add    BYTE PTR [rax],al
  40b61c:	nop
  40b61d:	mov    ebp,0x0
  40b622:	add    BYTE PTR [rax],al
  40b624:	test   al,0xbd
	...
  40b632:	add    BYTE PTR [rax],al
  40b634:	sar    BYTE PTR [rbp+0x0],0x0
  40b63b:	add    al,dl
  40b63d:	mov    ebp,0x0
  40b642:	add    BYTE PTR [rax],al
  40b644:	in     al,0xbd
	...
  40b652:	add    BYTE PTR [rax],al
  40b654:	cld    
  40b655:	mov    ebp,0x0
  40b65a:	add    BYTE PTR [rax],al
  40b65c:	and    BYTE PTR [rsi+0x0],bh
  40b662:	add    BYTE PTR [rax],al
  40b664:	cmp    al,0xbe
  40b666:	add    BYTE PTR [rax],al
  40b668:	add    BYTE PTR [rax],al
  40b66a:	add    BYTE PTR [rax],al
  40b66c:	push   rax
  40b66d:	mov    esi,0x0
  40b672:	add    BYTE PTR [rax],al
  40b674:	fs mov esi,0x0
	...
  40b682:	add    BYTE PTR [rax],al
  40b684:	jl     0x40b644
  40b686:	add    BYTE PTR [rax],al
  40b688:	add    BYTE PTR [rax],al
  40b68a:	add    BYTE PTR [rax],al
  40b68c:	xchg   esp,eax
  40b68d:	mov    esi,0x0
  40b692:	add    BYTE PTR [rax],al
  40b694:	lods   al,BYTE PTR ds:[rsi]
  40b695:	mov    esi,0x0
  40b69a:	add    BYTE PTR [rax],al
  40b69c:	sar    BYTE PTR [rsi+0x0],0x0
  40b6a3:	add    dh,dl
  40b6a5:	mov    esi,0x0
  40b6aa:	add    BYTE PTR [rax],al
  40b6ac:	in     al,dx
  40b6ad:	mov    esi,0x0
  40b6b2:	add    BYTE PTR [rax],al
  40b6b4:	cld    
  40b6b5:	mov    esi,0x0
  40b6ba:	add    BYTE PTR [rax],al
  40b6bc:	(bad)  
  40b6bd:	mov    edi,0x0
  40b6c2:	add    BYTE PTR [rax],al
  40b6c4:	sub    BYTE PTR [rdi+0x0],bh
  40b6ca:	add    BYTE PTR [rax],al
  40b6cc:	cmp    BYTE PTR [rdi+0x0],bh
  40b6d2:	add    BYTE PTR [rax],al
  40b6d4:	push   rsp
  40b6d5:	mov    edi,0x0
  40b6da:	add    BYTE PTR [rax],al
  40b6dc:	ins    BYTE PTR es:[rdi],dx
  40b6dd:	mov    edi,0x0
  40b6e2:	add    BYTE PTR [rax],al
  40b6e4:	xchg   BYTE PTR [rdi+0x0],bh
  40b6ea:	add    BYTE PTR [rax],al
  40b6ec:	pushf  
  40b6ed:	mov    edi,0x0
  40b6f2:	add    BYTE PTR [rax],al
  40b6f4:	mov    al,0xbf
  40b6f6:	add    BYTE PTR [rax],al
  40b6f8:	add    BYTE PTR [rax],al
  40b6fa:	add    BYTE PTR [rax],al
  40b6fc:	retf   0xbf
  40b6ff:	add    BYTE PTR [rax],al
  40b701:	add    BYTE PTR [rax],al
  40b703:	add    dh,bl
  40b705:	mov    edi,0x0
  40b70a:	add    BYTE PTR [rax],al
  40b70c:	cld    
  40b70d:	mov    edi,0x0
  40b712:	add    BYTE PTR [rax],al
  40b714:	add    al,0xc0
  40b716:	add    BYTE PTR [rax],al
  40b718:	add    BYTE PTR [rax],al
  40b71a:	add    BYTE PTR [rax],al
  40b71c:	sbb    al,al
  40b71e:	add    BYTE PTR [rax],al
  40b720:	add    BYTE PTR [rax],al
  40b722:	add    BYTE PTR [rax],al
  40b724:	rol    BYTE PTR es:[rax],0x0
  40b728:	add    BYTE PTR [rax],al
  40b72a:	add    BYTE PTR [rax],al
  40b72c:	rex.X rol BYTE PTR [rax],0x0
  40b730:	add    BYTE PTR [rax],al
  40b732:	add    BYTE PTR [rax],al
  40b734:	push   rsp
  40b735:	rol    BYTE PTR [rax],0x0
	...
  40b744:	rol    BYTE PTR fs:[rax],0x0
  40b748:	add    BYTE PTR [rax],al
  40b74a:	add    BYTE PTR [rax],al
  40b74c:	jl     0x40b70e
  40b74e:	add    BYTE PTR [rax],al
  40b750:	add    BYTE PTR [rax],al
  40b752:	add    BYTE PTR [rax],al
  40b754:	mov    al,al
  40b756:	add    BYTE PTR [rax],al
  40b758:	add    BYTE PTR [rax],al
  40b75a:	add    BYTE PTR [rax],al
  40b75c:	(bad)  
  40b75d:	rol    BYTE PTR [rax],0x0
  40b760:	add    BYTE PTR [rax],al
  40b762:	add    BYTE PTR [rax],al
  40b764:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40b765:	rol    BYTE PTR [rax],0x0
  40b768:	add    BYTE PTR [rax],al
  40b76a:	add    BYTE PTR [rax],al
  40b76c:	mov    ah,0xc0
  40b76e:	add    BYTE PTR [rax],al
  40b770:	add    BYTE PTR [rax],al
  40b772:	add    BYTE PTR [rax],al
  40b774:	(bad)  
  40b775:	rol    BYTE PTR [rax],0x0
  40b778:	add    BYTE PTR [rax],al
  40b77a:	add    BYTE PTR [rax],al
  40b77c:	(bad)  
  40b77d:	rol    BYTE PTR [rax],0x0
  40b780:	add    BYTE PTR [rax],al
  40b782:	add    BYTE PTR [rax],al
  40b784:	(bad)  
  40b785:	rol    BYTE PTR [rax],0x0
  40b788:	add    BYTE PTR [rax],al
  40b78a:	add    BYTE PTR [rax],al
  40b78c:	hlt    
  40b78d:	rol    BYTE PTR [rax],0x0
  40b790:	add    BYTE PTR [rax],al
  40b792:	add    BYTE PTR [rax],al
  40b794:	add    al,cl
  40b796:	add    BYTE PTR [rax],al
  40b798:	add    BYTE PTR [rax],al
  40b79a:	add    BYTE PTR [rax],al
  40b79c:	or     al,0xc1
  40b79e:	add    BYTE PTR [rax],al
  40b7a0:	add    BYTE PTR [rax],al
  40b7a2:	add    BYTE PTR [rax],al
  40b7a4:	(bad)  
  40b7a5:	rol    DWORD PTR [rax],0x0
  40b7a8:	add    BYTE PTR [rax],al
  40b7aa:	add    BYTE PTR [rax],al
  40b7ac:	and    al,cl
  40b7ae:	add    BYTE PTR [rax],al
  40b7b0:	add    BYTE PTR [rax],al
  40b7b2:	add    BYTE PTR [rax],al
  40b7b4:	sub    al,cl
  40b7b6:	add    BYTE PTR [rax],al
  40b7b8:	add    BYTE PTR [rax],al
  40b7ba:	add    BYTE PTR [rax],al
  40b7bc:	xor    al,0xc1
  40b7be:	add    BYTE PTR [rax],al
  40b7c0:	add    BYTE PTR [rax],al
  40b7c2:	add    BYTE PTR [rax],al
  40b7c4:	rol    DWORD PTR ds:[rax],0x0
  40b7c8:	add    BYTE PTR [rax],al
  40b7ca:	add    BYTE PTR [rax],al
  40b7cc:	rex.RX rol DWORD PTR [rax],0x0
  40b7d0:	add    BYTE PTR [rax],al
  40b7d2:	add    BYTE PTR [rax],al
  40b7d4:	push   rax
  40b7d5:	rol    DWORD PTR [rax],0x0
  40b7d8:	add    BYTE PTR [rax],al
  40b7da:	add    BYTE PTR [rax],al
  40b7dc:	pop    rax
  40b7dd:	rol    DWORD PTR [rax],0x0
  40b7e0:	add    BYTE PTR [rax],al
  40b7e2:	add    BYTE PTR [rax],al
  40b7e4:	(bad)  
  40b7e6:	add    BYTE PTR [rax],al
  40b7e8:	add    BYTE PTR [rax],al
  40b7ea:	add    BYTE PTR [rax],al
  40b7ec:	push   0xffffffffffffffc1
  40b7ee:	add    BYTE PTR [rax],al
  40b7f0:	add    BYTE PTR [rax],al
  40b7f2:	add    BYTE PTR [rax],al
  40b7f4:	je     0x40b7b7
  40b7f6:	add    BYTE PTR [rax],al
  40b7f8:	add    BYTE PTR [rax],al
  40b7fa:	add    BYTE PTR [rax],al
  40b7fc:	jle    0x40b7bf
  40b7fe:	add    BYTE PTR [rax],al
  40b800:	add    BYTE PTR [rax],al
  40b802:	add    BYTE PTR [rax],al
  40b804:	mov    cl,al
  40b806:	add    BYTE PTR [rax],al
  40b808:	add    BYTE PTR [rax],al
  40b80a:	add    BYTE PTR [rax],al
  40b80c:	xchg   edx,eax
  40b80d:	rol    DWORD PTR [rax],0x0
  40b810:	add    BYTE PTR [rax],al
  40b812:	add    BYTE PTR [rax],al
  40b814:	pushf  
  40b815:	rol    DWORD PTR [rax],0x0
  40b818:	add    BYTE PTR [rax],al
  40b81a:	add    BYTE PTR [rax],al
  40b81c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40b81d:	rol    DWORD PTR [rax],0x0
  40b820:	add    BYTE PTR [rax],al
  40b822:	add    BYTE PTR [rax],al
  40b824:	mov    al,0xc1
  40b826:	add    BYTE PTR [rax],al
  40b828:	add    BYTE PTR [rax],al
  40b82a:	add    BYTE PTR [rax],al
  40b82c:	mov    edx,0xc1
	...
  40b839:	add    BYTE PTR [rax],al
  40b83b:	add    BYTE PTR [rip+0x735f6705],bl        # 0x73a01f46
  40b841:	gs je  0x40b8b8
  40b844:	imul   ebp,DWORD PTR [rsi+0x67],0x70615f73
  40b84b:	jo     0x40b8b9
  40b84d:	jns    0x40b84f
  40b84f:	add    BYTE PTR [rax*1+0x65735f67],ch
  40b856:	je     0x40b8cc
  40b858:	imul   ebp,DWORD PTR [rsi+0x67],0x65645f73
  40b85f:	ins    BYTE PTR es:[rdi],dx
  40b860:	(bad)  
  40b861:	jns    0x40b863
  40b863:	add    BYTE PTR [rdi],ch
  40b865:	add    eax,0x65735f67
  40b86a:	je     0x40b8e0
  40b86c:	imul   ebp,DWORD PTR [rsi+0x67],0x65675f73
  40b873:	je     0x40b8d4
  40b875:	movsxd ebp,DWORD PTR [rax+0x69]
  40b878:	ins    BYTE PTR es:[rdi],dx
  40b879:	add    BYTE PTR fs:[rax],al
  40b87c:	cmp    eax,0x735f6705
  40b881:	gs je  0x40b8f8
  40b884:	imul   ebp,DWORD PTR [rsi+0x67],0x65675f73
  40b88b:	je     0x40b8ec
  40b88d:	jbe    0x40b8f0
  40b88f:	ins    BYTE PTR es:[rdi],dx
  40b890:	jne    0x40b8f7
  40b892:	add    BYTE PTR [rax],al
  40b894:	ds add eax,0x65735f67
  40b89a:	je     0x40b910
  40b89c:	imul   ebp,DWORD PTR [rsi+0x67],0x73695f73
  40b8a3:	pop    rdi
  40b8a4:	ja     0x40b918
  40b8a6:	imul   esi,DWORD PTR [rcx+riz*2+0x62],0x656c
  40b8ae:	add    BYTE PTR [rax],al
  40b8b0:	(bad)  
  40b8b1:	add    eax,0x65735f67
  40b8b6:	je     0x40b92c
  40b8b8:	imul   ebp,DWORD PTR [rsi+0x67],0x696c5f73
  40b8bf:	jae    0x40b935
  40b8c1:	pop    rdi
  40b8c2:	movsxd ebp,DWORD PTR [rax+0x69]
  40b8c5:	ins    BYTE PTR es:[rdi],dx
  40b8c6:	fs jb  0x40b92e
  40b8c9:	outs   dx,BYTE PTR ds:[rsi]
  40b8ca:	add    BYTE PTR [rax],al
  40b8cc:	rex.XB add eax,0x65735f67
  40b8d2:	je     0x40b948
  40b8d4:	imul   ebp,DWORD PTR [rsi+0x67],0x656e5f73
  40b8db:	ja     0x40b8dd
  40b8dd:	add    BYTE PTR [rax],al
  40b8df:	add    BYTE PTR [rbp+rax*1+0x67],al
  40b8e3:	pop    rdi
  40b8e4:	jae    0x40b94b
  40b8e6:	je     0x40b95c
  40b8e8:	imul   ebp,DWORD PTR [rsi+0x67],0x656e5f73
  40b8ef:	ja     0x40b950
  40b8f1:	data16 jne 0x40b960
  40b8f4:	ins    BYTE PTR es:[rdi],dx
  40b8f5:	add    BYTE PTR [rax],al
  40b8f7:	add    BYTE PTR [rcx+0x5],cl
  40b8fa:	addr32 pop rdi
  40b8fc:	jae    0x40b963
  40b8fe:	je     0x40b974
  40b900:	imul   ebp,DWORD PTR [rsi+0x67],0x65725f73
  40b907:	jae    0x40b96e
  40b909:	je     0x40b90b
  40b90b:	add    BYTE PTR [rbx+0x5],cl
  40b90e:	addr32 pop rdi
  40b910:	jae    0x40b977
  40b912:	je     0x40b988
  40b914:	imul   ebp,DWORD PTR [rsi+0x67],0x63735f73
  40b91b:	push   0x5f616d65
  40b920:	addr32 gs je 0x40b983
  40b924:	imul   esp,DWORD PTR [rax+rax*1+0x0],0x5f67054c
  40b92c:	jae    0x40b993
  40b92e:	je     0x40b9a4
  40b930:	imul   ebp,DWORD PTR [rsi+0x67],0x63735f73
  40b937:	push   0x5f616d65
  40b93c:	addr32 gs je 0x40b99f
  40b940:	imul   esp,DWORD PTR [rbp+0x79],0x0
  40b944:	rex.WRB add rax,0x65735f67
  40b94a:	je     0x40b9c0
  40b94c:	imul   ebp,DWORD PTR [rsi+0x67],0x63735f73
  40b953:	push   0x5f616d65
  40b958:	addr32 gs je 0x40b9bb
  40b95c:	jo     0x40b9bf
  40b95e:	je     0x40b9c8
  40b960:	add    BYTE PTR [rax],al
  40b962:	add    BYTE PTR [rax],al
  40b964:	rex.WRXB add rax,0x65735f67
  40b96a:	je     0x40b9e0
  40b96c:	imul   ebp,DWORD PTR [rsi+0x67],0x63735f73
  40b973:	push   0x5f616d65
  40b978:	push   0x6b5f7361
  40b97d:	gs jns 0x40b980
  40b980:	push   rbx
  40b981:	add    eax,0x65735f67
  40b986:	je     0x40b9fc
  40b988:	imul   ebp,DWORD PTR [rsi+0x67],0x63735f73
  40b98f:	push   0x5f616d65
  40b994:	imul   esp,DWORD PTR [rbp+0x79],0x5f
  40b998:	addr32 gs je 0x40b9fb
  40b99c:	jb     0x40b9ff
  40b99e:	outs   dx,BYTE PTR ds:[rsi]
  40b99f:	add    BYTE PTR gs:[eax],al
  40b9a3:	add    BYTE PTR [rsi+0x5],dl
  40b9a6:	addr32 pop rdi
  40b9a8:	jae    0x40ba0f
  40b9aa:	je     0x40ba20
  40b9ac:	imul   ebp,DWORD PTR [rsi+0x67],0x63735f73
  40b9b3:	push   0x5f616d65
  40b9b8:	imul   esp,DWORD PTR [rbp+0x79],0x5f
  40b9bc:	addr32 gs je 0x40ba1f
  40b9c0:	jbe    0x40ba23
  40b9c2:	ins    BYTE PTR es:[rdi],dx
  40b9c3:	jne    0x40ba2a
  40b9c5:	pop    rdi
  40b9c6:	je     0x40ba41
  40b9c8:	jo     0x40ba2f
  40b9ca:	add    BYTE PTR [rax],al
  40b9cc:	push   rdi
  40b9cd:	add    eax,0x65735f67
  40b9d2:	je     0x40ba48
  40b9d4:	imul   ebp,DWORD PTR [rsi+0x67],0x63735f73
  40b9db:	push   0x5f616d65
  40b9e0:	imul   esp,DWORD PTR [rbp+0x79],0x5f
  40b9e4:	jb     0x40ba47
  40b9e6:	outs   dx,BYTE PTR ds:[rsi]
  40b9e7:	addr32 gs pop rdi
  40b9ea:	movsxd ebp,DWORD PTR [rax+0x65]
  40b9ed:	movsxd ebp,DWORD PTR [rbx+0x0]
  40b9f0:	pop    rcx
  40b9f1:	add    eax,0x65735f67
  40b9f6:	je     0x40ba6c
  40b9f8:	imul   ebp,DWORD PTR [rsi+0x67],0x63735f73
  40b9ff:	push   0x5f616d65
  40ba04:	imul   esp,DWORD PTR [rbp+0x79],0x5f
  40ba08:	jne    0x40ba78
  40ba0a:	jb     0x40ba71
  40ba0c:	data16 add BYTE PTR [rax],al
  40ba0f:	add    BYTE PTR [rbx+0x5],bl
  40ba12:	addr32 pop rdi
  40ba14:	jae    0x40ba7b
  40ba16:	je     0x40ba8c
  40ba18:	imul   ebp,DWORD PTR [rsi+0x67],0x63735f73
  40ba1f:	push   0x5f616d65
  40ba24:	ins    BYTE PTR es:[rdi],dx
  40ba25:	imul   esi,DWORD PTR [rbx+0x74],0x79656b5f
  40ba2c:	jae    0x40ba2e
  40ba2e:	add    BYTE PTR [rax],al
  40ba30:	pop    rbp
  40ba31:	add    eax,0x65735f67
  40ba36:	je     0x40baac
  40ba38:	imul   ebp,DWORD PTR [rsi+0x67],0x63735f73
  40ba3f:	push   0x5f616d65
  40ba44:	jae    0x40bab5
  40ba46:	jne    0x40baba
  40ba48:	movsxd esp,DWORD PTR [rbp+0x5f]
  40ba4b:	addr32 gs je 0x40baae
  40ba4f:	fs gs data16 (bad) 
  40ba53:	jne    0x40bac1
  40ba55:	je     0x40ba57
  40ba57:	add    BYTE PTR [rdi+0x5],bl
  40ba5a:	addr32 pop rdi
  40ba5c:	jae    0x40bac3
  40ba5e:	je     0x40bad4
  40ba60:	imul   ebp,DWORD PTR [rsi+0x67],0x63735f73
  40ba67:	push   0x5f616d65
  40ba6c:	jae    0x40badd
  40ba6e:	jne    0x40bae2
  40ba70:	movsxd esp,DWORD PTR [rbp+0x5f]
  40ba73:	ins    BYTE PTR es:[rdi],dx
  40ba74:	imul   esi,DWORD PTR [rbx+0x74],0x6863735f
  40ba7b:	gs ins DWORD PTR es:[rdi],dx
  40ba7d:	(bad)  
  40ba7e:	jae    0x40ba80
  40ba80:	(bad)  
  40ba81:	add    eax,0x65735f67
  40ba86:	je     0x40bafc
  40ba88:	imul   ebp,DWORD PTR [rsi+0x67],0x63735f73
  40ba8f:	push   0x5f616d65
  40ba94:	jae    0x40bb05
  40ba96:	jne    0x40bb0a
  40ba98:	movsxd esp,DWORD PTR [rbp+0x5f]
  40ba9b:	ins    BYTE PTR es:[rdi],dx
  40ba9c:	outs   dx,DWORD PTR ds:[rsi]
  40ba9d:	outs   dx,DWORD PTR ds:[rsi]
  40ba9e:	imul   esi,DWORD PTR [rbp+0x70],0x0
  40baa2:	add    BYTE PTR [rax],al
  40baa4:	(bad)  
  40baa5:	add    eax,0x65735f67
  40baaa:	je     0x40bb20
  40baac:	imul   ebp,DWORD PTR [rsi+0x67],0x63735f73
  40bab3:	push   0x5f616d65
  40bab8:	jae    0x40bb29
  40baba:	jne    0x40bb2e
  40babc:	movsxd esp,DWORD PTR [rbp+0x5f]
  40babf:	outs   dx,BYTE PTR ds:[rsi]
  40bac0:	gs ja  0x40bb22
  40bac3:	data16 jb 0x40bb35
  40bac6:	ins    DWORD PTR es:[rdi],dx
  40bac7:	pop    rdi
  40bac8:	imul   esi,DWORD PTR fs:[rdx+0x65],0x726f7463
  40bad0:	jns    0x40bad2
  40bad2:	add    BYTE PTR [rax],al
  40bad4:	(bad)  
  40bad5:	add    eax,0x65735f67
  40bada:	je     0x40bb50
  40badc:	imul   ebp,DWORD PTR [rsi+0x67],0x63735f73
  40bae3:	push   0x5f616d65
  40bae8:	jae    0x40bb59
  40baea:	jne    0x40bb5e
  40baec:	movsxd esp,DWORD PTR [rbp+0x5f]
  40baef:	jb     0x40bb56
  40baf1:	data16 add BYTE PTR [rax],al
  40baf4:	movsxd eax,DWORD PTR [rip+0x65735f67]        # 0x65b41a61
  40bafa:	je     0x40bb70
  40bafc:	imul   ebp,DWORD PTR [rsi+0x67],0x63735f73
  40bb03:	push   0x5f616d65
  40bb08:	jae    0x40bb79
  40bb0a:	jne    0x40bb7e
  40bb0c:	movsxd esp,DWORD PTR [rbp+0x5f]
  40bb0f:	jne    0x40bb7f
  40bb11:	jb     0x40bb78
  40bb13:	data16 add BYTE PTR [rax],al
  40bb16:	add    BYTE PTR [rax],al
  40bb18:	fs add eax,0x65735f67
  40bb1e:	je     0x40bb94
  40bb20:	imul   ebp,DWORD PTR [rsi+0x67],0x63735f73
  40bb27:	push   0x5f616d65
  40bb2c:	jne    0x40bb9c
  40bb2e:	jb     0x40bb95
  40bb30:	data16 add BYTE PTR [rax],al
  40bb33:	add    BYTE PTR [rsi+0x5],ch
  40bb36:	addr32 pop rdi
  40bb38:	jae    0x40bb9f
  40bb3a:	je     0x40bbb0
  40bb3c:	imul   ebp,DWORD PTR [rsi+0x67],0x65735f73
  40bb43:	je     0x40bba4
  40bb45:	jbe    0x40bba8
  40bb47:	ins    BYTE PTR es:[rdi],dx
  40bb48:	jne    0x40bbaf
  40bb4a:	add    BYTE PTR [rax],al
  40bb4c:	outs   dx,DWORD PTR ds:[rsi]
  40bb4d:	add    eax,0x65735f67
  40bb52:	je     0x40bbc8
  40bb54:	imul   ebp,DWORD PTR [rsi+0x67],0x79735f73
  40bb5b:	outs   dx,BYTE PTR ds:[rsi]
  40bb5c:	movsxd eax,DWORD PTR [rax]
  40bb5e:	add    BYTE PTR [rax],al
  40bb60:	add    DWORD PTR [rax],eax
  40bb62:	pop    rdi
  40bb63:	ins    BYTE PTR es:[edi],dx
  40bb65:	imul   esp,DWORD PTR [rdx+0x5f],0x5f746567
  40bb6c:	ins    BYTE PTR es:[rdi],dx
  40bb6d:	outs   dx,DWORD PTR ds:[rsi]
  40bb6e:	movsxd esp,DWORD PTR [rcx+0x6c]
  40bb71:	gs pop rdi
  40bb73:	imul   esi,DWORD PTR fs:[rdx+0x0],0x6700c200
  40bb7b:	pop    rdi
  40bb7c:	movsxd ebp,DWORD PTR [rbp+riz*2+0x61]
  40bb80:	jb     0x40bbe1
  40bb82:	gs jb  0x40bbf7
  40bb85:	outs   dx,DWORD PTR ds:[rsi]
  40bb86:	jb     0x40bb88
  40bb88:	jp     0x40bb8b
  40bb8a:	addr32 pop rdi
  40bb8c:	data16 jb 0x40bbf4
  40bb8f:	add    BYTE PTR gs:[rax],al
  40bb92:	add    BYTE PTR [rax],al
  40bb94:	jge    0x40bb98
  40bb96:	addr32 pop rdi
  40bb98:	ins    DWORD PTR es:[rdi],dx
  40bb99:	(bad)  
  40bb9a:	imul   ebp,DWORD PTR [rsi+0x5f],0x746e6f63
  40bba1:	gs js  0x40bc18
  40bba4:	pop    rdi
  40bba5:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x6f697461
  40bbad:	outs   dx,BYTE PTR ds:[rsi]
  40bbae:	add    BYTE PTR [rax],al
  40bbb0:	(bad)  
  40bbb1:	add    esp,DWORD PTR [rdi+0x5f]
  40bbb4:	jo     0x40bc28
  40bbb6:	imul   ebp,DWORD PTR [rsi+0x74],0x30000000
  40bbbd:	add    esp,DWORD PTR [rdi+0x5f]
  40bbc0:	jo     0x40bc34
  40bbc2:	imul   ebp,DWORD PTR [rsi+0x74],0x727265
  40bbc9:	add    BYTE PTR [rax],al
  40bbcb:	add    BYTE PTR [rsi+0x4],ch
  40bbce:	addr32 pop rdi
  40bbd0:	jae    0x40bc46
  40bbd2:	jb     0x40bc33
  40bbd4:	gs jno 0x40bc4c
  40bbd7:	(bad)  
  40bbd8:	ins    BYTE PTR es:[rdi],dx
  40bbd9:	add    BYTE PTR [rax],al
  40bbdb:	add    BYTE PTR [rax+0x4],dh
  40bbde:	addr32 pop rdi
  40bbe0:	jae    0x40bc56
  40bbe2:	jb     0x40bc43
  40bbe4:	push   0x735f7361
  40bbe9:	jne    0x40bc51
  40bbeb:	imul   di,WORD PTR [rax+0x0],0x8000
  40bbf1:	add    al,0x67
  40bbf3:	pop    rdi
  40bbf4:	jae    0x40bc6a
  40bbf6:	jb     0x40bc5c
  40bbf8:	jne    0x40bc6a
  40bbfa:	pop    rdi
  40bbfb:	jo     0x40bc6f
  40bbfd:	imul   ebp,DWORD PTR [rsi+0x74],0x66
  40bc04:	test   DWORD PTR [rdi+riz*2],eax
  40bc07:	pop    rdi
  40bc08:	jae    0x40bc7e
  40bc0a:	jb     0x40bc72
  40bc0c:	jb     0x40bc73
  40bc0e:	gs jbe 0x40bc11
  40bc11:	add    BYTE PTR [rax],al
  40bc13:	add    BYTE PTR [rsi+0x735f6704],al
  40bc19:	je     0x40bc8d
  40bc1b:	imul   ebp,DWORD PTR [rsi+0x67],0x7070615f
  40bc22:	outs   dx,BYTE PTR gs:[rsi]
  40bc24:	add    BYTE PTR fs:[rax],al
  40bc27:	add    BYTE PTR [rcx+0x735f6704],cl
  40bc2d:	je     0x40bca1
  40bc2f:	imul   ebp,DWORD PTR [rsi+0x67],0x7070615f
  40bc36:	outs   dx,BYTE PTR gs:[rsi]
  40bc38:	fs pop rdi
  40bc3a:	jo     0x40bcae
  40bc3c:	imul   ebp,DWORD PTR [rsi+0x74],0x66
  40bc43:	add    BYTE PTR [rcx+0x735f6704],bl
  40bc49:	je     0x40bcbd
  40bc4b:	imul   ebp,DWORD PTR [rsi+0x67],0x6572665f
  40bc52:	add    BYTE PTR gs:[rax+0x735f6704],ah
  40bc59:	je     0x40bccd
  40bc5b:	imul   ebp,DWORD PTR [rsi+0x67],0x77656e5f
  40bc62:	add    BYTE PTR [rax],al
  40bc64:	test   al,0x4
  40bc66:	addr32 pop rdi
  40bc68:	jae    0x40bcde
  40bc6a:	jb     0x40bcd5
  40bc6c:	outs   dx,BYTE PTR ds:[rsi]
  40bc6d:	addr32 pop rdi
  40bc6f:	jo     0x40bce3
  40bc71:	imul   ebp,DWORD PTR [rsi+0x74],0x66
  40bc78:	mov    edx,0x735f6704
  40bc7d:	je     0x40bcf1
  40bc7f:	jae    0x40bcf1
  40bc81:	ins    BYTE PTR es:[rdi],dx
  40bc82:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x5ba0000
  40bc8a:	addr32 pop rdi
  40bc8c:	jbe    0x40bcef
  40bc8e:	jb     0x40bcf9
  40bc90:	(bad)  
  40bc91:	outs   dx,BYTE PTR ds:[rsi]
  40bc92:	je     0x40bcf3
  40bc94:	addr32 gs je 0x40bc98
  40bc98:	rol    BYTE PTR [rip+0x61765f67],1        # 0x61b71c05
  40bc9e:	jb     0x40bd09
  40bca0:	(bad)  
  40bca1:	outs   dx,BYTE PTR ds:[rsi]
  40bca2:	je     0x40bd03
  40bca4:	addr32 gs je 0x40bd07
  40bca8:	je     0x40bd23
  40bcaa:	jo     0x40bd11
  40bcac:	pop    rdi
  40bcad:	jae    0x40bd23
  40bcaf:	jb     0x40bd1a
  40bcb1:	outs   dx,BYTE PTR ds:[rsi]
  40bcb2:	addr32 add bh,bl
  40bcb5:	add    eax,0x61765f67
  40bcba:	jb     0x40bd25
  40bcbc:	(bad)  
  40bcbd:	outs   dx,BYTE PTR ds:[rsi]
  40bcbe:	je     0x40bd1f
  40bcc0:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x696e695f
  40bcc8:	je     0x40bcca
  40bcca:	add    BYTE PTR [rax],al
  40bccc:	loopne 0x40bcd3
  40bcce:	addr32 pop rdi
  40bcd0:	jbe    0x40bd33
  40bcd2:	jb     0x40bd3d
  40bcd4:	(bad)  
  40bcd5:	outs   dx,BYTE PTR ds:[rsi]
  40bcd6:	je     0x40bd37
  40bcd8:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x6f6f6c5f
  40bce0:	jo     0x40bce2
  40bce2:	add    BYTE PTR [rax],al
  40bce4:	inc    BYTE PTR [rip+0x61765f67]        # 0x61b71c51
  40bcea:	jb     0x40bd55
  40bcec:	(bad)  
  40bced:	outs   dx,BYTE PTR ds:[rsi]
  40bcee:	je     0x40bd4f
  40bcf0:	outs   dx,BYTE PTR ds:[rsi]
  40bcf1:	gs ja  0x40bd53
  40bcf4:	jae    0x40bd6a
  40bcf6:	jb     0x40bd61
  40bcf8:	outs   dx,BYTE PTR ds:[rsi]
  40bcf9:	add    BYTE PTR [eax],al
  40bcfc:	(bad)  
  40bcfd:	(bad)  
  40bcfe:	addr32 pop rdi
  40bd00:	jbe    0x40bd63
  40bd02:	jb     0x40bd6d
  40bd04:	(bad)  
  40bd05:	outs   dx,BYTE PTR ds:[rsi]
  40bd06:	je     0x40bd67
  40bd08:	jo     0x40bd6b
  40bd0a:	jb     0x40bd7f
  40bd0c:	add    BYTE PTR gs:[rax],al
  40bd0f:	add    BYTE PTR [rax],cl
  40bd11:	(bad)  
  40bd12:	addr32 pop rdi
  40bd14:	jbe    0x40bd77
  40bd16:	jb     0x40bd81
  40bd18:	(bad)  
  40bd19:	outs   dx,BYTE PTR ds:[rsi]
  40bd1a:	je     0x40bd7b
  40bd1c:	jo     0x40bd7f
  40bd1e:	jb     0x40bd93
  40bd20:	gs pop rdi
  40bd22:	gs jb  0x40bd97
  40bd25:	outs   dx,DWORD PTR ds:[rsi]
  40bd26:	jb     0x40bd87
  40bd28:	jo     0x40bd9c
  40bd2a:	imul   ebp,DWORD PTR [rsi+0x74],0x6e6f635f
  40bd31:	je     0x40bd98
  40bd33:	js     0x40bda9
  40bd35:	add    BYTE PTR [rax],al
  40bd37:	add    BYTE PTR [rbx],cl
  40bd39:	(bad)  
  40bd3a:	addr32 pop rdi
  40bd3c:	jbe    0x40bd9f
  40bd3e:	jb     0x40bda9
  40bd40:	(bad)  
  40bd41:	outs   dx,BYTE PTR ds:[rsi]
  40bd42:	je     0x40bda3
  40bd44:	jo     0x40bdb8
  40bd46:	imul   ebp,DWORD PTR [rsi+0x74],0x1e000000
  40bd4d:	(bad)  
  40bd4e:	addr32 pop rdi
  40bd50:	jbe    0x40bdb3
  40bd52:	jb     0x40bdbd
  40bd54:	(bad)  
  40bd55:	outs   dx,BYTE PTR ds:[rsi]
  40bd56:	je     0x40bdb7
  40bd58:	je     0x40bdd3
  40bd5a:	jo     0x40bdc1
  40bd5c:	pop    rdi
  40bd5d:	gs jno 0x40bdd5
  40bd60:	(bad)  
  40bd61:	ins    BYTE PTR es:[rdi],dx
  40bd62:	add    BYTE PTR [rax],al
  40bd64:	rex.X (bad) 
  40bd66:	addr32 pop rdi
  40bd68:	jbe    0x40bdcb
  40bd6a:	jb     0x40bdd5
  40bd6c:	(bad)  
  40bd6d:	outs   dx,BYTE PTR ds:[rsi]
  40bd6e:	je     0x40bdcf
  40bd70:	jne    0x40bde0
  40bd72:	jb     0x40bdd9
  40bd74:	data16 add BYTE PTR [rax],al
  40bd77:	add    BYTE PTR [rcx+0x6],bl
  40bd7a:	ins    BYTE PTR es:[edi],dx
  40bd7c:	imul   esp,DWORD PTR [rdx+0x5f],0x6f6a616d
  40bd83:	jb     0x40bde4
  40bd85:	jbe    0x40bdec
  40bd87:	jb     0x40bdfc
  40bd89:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
  40bd90:	pop    rbx
  40bd91:	(bad)  
  40bd92:	ins    BYTE PTR es:[edi],dx
  40bd94:	imul   esp,DWORD PTR [rdx+0x5f],0x7263696d
  40bd9b:	outs   dx,DWORD PTR ds:[rsi]
  40bd9c:	pop    rdi
  40bd9d:	jbe    0x40be04
  40bd9f:	jb     0x40be14
  40bda1:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
  40bda8:	pop    rsp
  40bda9:	(bad)  
  40bdaa:	ins    BYTE PTR es:[edi],dx
  40bdac:	imul   esp,DWORD PTR [rdx+0x5f],0x6f6e696d
  40bdb3:	jb     0x40be14
  40bdb5:	jbe    0x40be1c
  40bdb7:	jb     0x40be2c
  40bdb9:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
  40bdc0:	jnp    0x40bdc2
  40bdc2:	addr32 pop rdi
  40bdc4:	outs   dx,DWORD PTR ds:[rsi]
  40bdc5:	(bad)  
  40bdc6:	push   0x65
  40bdc8:	movsxd esi,DWORD PTR [rdi+rbx*2+0x67]
  40bdcc:	gs je  0x40bdcf
  40bdcf:	add    BYTE PTR [rbx+0x6f5f6700],bl
  40bdd5:	(bad)  
  40bdd6:	push   0x65
  40bdd8:	movsxd esi,DWORD PTR [rdi+rbx*2+0x75]
  40bddc:	outs   dx,BYTE PTR ds:[rsi]
  40bddd:	jb     0x40be44
  40bddf:	data16 add BYTE PTR [rax],al
  40bde2:	add    BYTE PTR [rax],al
  40bde4:	fiadd  WORD PTR [rax]
  40bde6:	addr32 pop rdi
  40bde8:	jae    0x40be53
  40bdea:	outs   dx,BYTE PTR ds:[esi]
  40bdec:	(bad)  
  40bded:	ins    BYTE PTR es:[rdi],dx
  40bdee:	pop    rdi
  40bdef:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40bdf2:	outs   dx,BYTE PTR ds:[rsi]
  40bdf3:	movsxd esi,DWORD PTR gs:[rdi+rbx*2+0x64]
  40bdf8:	(bad)  
  40bdf9:	je     0x40be5c
  40bdfb:	add    BYTE PTR [rip+0x62696c00],bl        # 0x62aa2a01
  40be01:	imul   ebp,DWORD PTR [rsi+0x74],0x69625f6c
  40be08:	outs   dx,BYTE PTR ds:[rsi]
  40be09:	fs pop rdi
  40be0b:	je     0x40be72
  40be0d:	js     0x40be83
  40be0f:	outs   dx,DWORD PTR fs:[rsi]
  40be11:	ins    DWORD PTR es:[rdi],dx
  40be12:	(bad)  
  40be13:	imul   ebp,DWORD PTR [rsi+0x5f],0x65646f63
  40be1a:	jae    0x40be81
  40be1c:	je     0x40be1e
  40be1e:	add    BYTE PTR [rax],al
  40be20:	(bad)  
  40be21:	add    BYTE PTR [rcx+rbp*2+0x62],ch
  40be25:	imul   ebp,DWORD PTR [rsi+0x74],0x69625f6c
  40be2c:	outs   dx,BYTE PTR ds:[rsi]
  40be2d:	fs je  0x40be95
  40be30:	js     0x40bea6
  40be32:	outs   dx,DWORD PTR fs:[rsi]
  40be34:	ins    DWORD PTR es:[rdi],dx
  40be35:	(bad)  
  40be36:	imul   ebp,DWORD PTR [rsi+0x0],0x26000000
  40be3d:	add    BYTE PTR [rcx+rbp*2+0x62],ch
  40be41:	imul   ebp,DWORD PTR [rsi+0x74],0x65675f6c
  40be48:	je     0x40bebe
  40be4a:	gs js  0x40bec1
  40be4d:	add    BYTE PTR [rax],al
  40be4f:	add    BYTE PTR [rcx+0x0],al
  40be52:	ins    BYTE PTR es:[rdi],dx
  40be53:	imul   esp,DWORD PTR [rdx+0x69],0x5f6c746e
  40be5a:	jae    0x40bec1
  40be5c:	je     0x40beca
  40be5e:	outs   dx,DWORD PTR ds:[rsi]
  40be5f:	movsxd esp,DWORD PTR [rcx+0x6c]
  40be62:	add    BYTE PTR gs:[rbp+0x0],al
  40be66:	ins    BYTE PTR es:[rdi],dx
  40be67:	imul   esp,DWORD PTR [rdx+0x69],0x5f6c746e
  40be6e:	je     0x40bed5
  40be70:	js     0x40bee6
  40be72:	outs   dx,DWORD PTR fs:[rsi]
  40be74:	ins    DWORD PTR es:[rdi],dx
  40be75:	(bad)  
  40be76:	imul   ebp,DWORD PTR [rsi+0x0],0xd8000000
  40be7d:	add    BYTE PTR [rbp+riz*2+0x6c],al
  40be81:	gs je  0x40bee9
  40be84:	rex.XB jb 0x40bef0
  40be87:	je     0x40bef2
  40be89:	movsxd esp,DWORD PTR [rcx+0x6c]
  40be8c:	push   rbx
  40be8d:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40be92:	outs   dx,BYTE PTR ds:[rsi]
  40be93:	add    al,bh
  40be95:	add    BYTE PTR [rbp+0x6e],al
  40be98:	je     0x40beff
  40be9a:	jb     0x40bedf
  40be9c:	jb     0x40bf07
  40be9e:	je     0x40bf09
  40bea0:	movsxd esp,DWORD PTR [rcx+0x6c]
  40bea3:	push   rbx
  40bea4:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40bea9:	outs   dx,BYTE PTR ds:[rsi]
  40beaa:	add    BYTE PTR [rax],al
  40beac:	int    0x1
  40beae:	rex.RXB
  40beaf:	gs je  0x40bef5
  40beb2:	jne    0x40bf26
  40beb4:	jb     0x40bf1b
  40beb6:	outs   dx,BYTE PTR ds:[rsi]
  40beb7:	je     0x40bf09
  40beb9:	jb     0x40bf2a
  40bebb:	movsxd esp,DWORD PTR [rbp+0x73]
  40bebe:	jae    0x40bec0
  40bec0:	(bad)  
  40bec1:	add    DWORD PTR [rdi+0x65],eax
  40bec4:	je     0x40bf09
  40bec6:	jne    0x40bf3a
  40bec8:	jb     0x40bf2f
  40beca:	outs   dx,BYTE PTR ds:[rsi]
  40becb:	je     0x40bf1d
  40becd:	jb     0x40bf3e
  40becf:	movsxd esp,DWORD PTR [rbp+0x73]
  40bed2:	jae    0x40bf1d
  40bed4:	fs add dl,dl
  40bed7:	add    DWORD PTR [rdi+0x65],eax
  40beda:	je     0x40bf1f
  40bedc:	jne    0x40bf50
  40bede:	jb     0x40bf45
  40bee0:	outs   dx,BYTE PTR ds:[rsi]
  40bee1:	je     0x40bf37
  40bee3:	push   0x64616572
  40bee8:	rex.WB
  40bee9:	add    BYTE PTR fs:[rax],al
  40beec:	adc    BYTE PTR [rdx],al
  40beee:	rex.RXB
  40beef:	gs je  0x40bf3e
  40bef2:	(bad)  
  40bef3:	jae    0x40bf69
  40bef5:	rex.RB jb 0x40bf6a
  40bef8:	outs   dx,DWORD PTR ds:[rsi]
  40bef9:	jb     0x40befb
  40befb:	add    BYTE PTR [rbx+0x2],dh
  40befe:	rex.RXB
  40beff:	gs je  0x40bf55
  40bf02:	je     0x40bf65
  40bf04:	jb     0x40bf7a
  40bf06:	jne    0x40bf78
  40bf08:	rex.WB outs dx,BYTE PTR ds:[rsi]
  40bf0a:	outs   dx,WORD PTR ds:[rsi]
  40bf0c:	add    BYTE PTR [r10+0x74654702],cl
  40bf13:	push   rbx
  40bf14:	jns    0x40bf89
  40bf16:	je     0x40bf7d
  40bf18:	ins    DWORD PTR es:[rdi],dx
  40bf19:	push   rsp
  40bf1a:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
  40bf21:	ins    BYTE PTR es:[rdi],dx
  40bf22:	gs push rsp
  40bf24:	imul   ebp,DWORD PTR [rbp+0x65],0x4702a500
  40bf2b:	gs je  0x40bf82
  40bf2e:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
  40bf35:	je     0x40bf37
  40bf37:	add    cl,bh
  40bf39:	add    cl,BYTE PTR [rcx+0x6e]
  40bf3c:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  40bf44:	rex.XB jb 0x40bfb0
  40bf47:	je     0x40bfb2
  40bf49:	movsxd esp,DWORD PTR [rcx+0x6c]
  40bf4c:	push   rbx
  40bf4d:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40bf52:	outs   dx,BYTE PTR ds:[rsi]
  40bf53:	add    BYTE PTR [rbx+0x3],cl
  40bf56:	rex.WR
  40bf57:	gs (bad) 
  40bf59:	jbe    0x40bfc0
  40bf5b:	rex.XB jb 0x40bfc7
  40bf5e:	je     0x40bfc9
  40bf60:	movsxd esp,DWORD PTR [rcx+0x6c]
  40bf63:	push   rbx
  40bf64:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40bf69:	outs   dx,BYTE PTR ds:[rsi]
  40bf6a:	add    BYTE PTR [rax],al
  40bf6c:	mov    ebx,0x65755103
  40bf71:	jb     0x40bfec
  40bf73:	push   rax
  40bf74:	gs jb  0x40bfdd
  40bf77:	outs   dx,DWORD PTR ds:[rsi]
  40bf78:	jb     0x40bfe7
  40bf7a:	(bad)  
  40bf7b:	outs   dx,BYTE PTR ds:[rsi]
  40bf7c:	movsxd esp,DWORD PTR [rbp+0x43]
  40bf7f:	outs   dx,DWORD PTR ds:[rsi]
  40bf80:	jne    0x40bff0
  40bf82:	je     0x40bfe9
  40bf84:	jb     0x40bf86
  40bf86:	add    DWORD PTR [rdx+rdx*2],eax
  40bf89:	je     0x40bff7
  40bf8b:	rex.B
  40bf8c:	fs fs rex.RX jne 0x40bfff
  40bf91:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40bf95:	outs   dx,BYTE PTR ds:[rsi]
  40bf96:	push   rsp
  40bf97:	(bad)  
  40bf98:	(bad)  
  40bf99:	ins    BYTE PTR es:[rdi],dx
  40bf9a:	add    BYTE PTR gs:[rdx],al
  40bf9d:	add    al,0x52
  40bf9f:	je     0x40c00d
  40bfa1:	rex.XB (bad) 
  40bfa3:	jo     0x40c019
  40bfa5:	jne    0x40c019
  40bfa7:	rex.XB outs dx,DWORD PTR gs:[rsi]
  40bfaa:	outs   dx,BYTE PTR ds:[rsi]
  40bfab:	je     0x40c012
  40bfad:	js     0x40c023
  40bfaf:	add    BYTE PTR [rcx],cl
  40bfb1:	add    al,0x52
  40bfb3:	je     0x40c021
  40bfb5:	rex.WR outs dx,DWORD PTR ds:[rsi]
  40bfb7:	outs   dx,DWORD PTR ds:[rsi]
  40bfb8:	imul   esi,DWORD PTR [rbp+0x70],0x46
  40bfbc:	jne    0x40c02c
  40bfbe:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40bfc2:	outs   dx,BYTE PTR ds:[rsi]
  40bfc3:	rex.RB outs dx,BYTE PTR ds:[rsi]
  40bfc5:	je     0x40c039
  40bfc7:	jns    0x40bfc9
  40bfc9:	add    BYTE PTR [rax],dl
  40bfcb:	add    al,0x52
  40bfcd:	je     0x40c03b
  40bfcf:	push   rsi
  40bfd0:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
  40bfd7:	outs   dx,BYTE PTR ds:[rsi]
  40bfd8:	ja     0x40c043
  40bfda:	outs   dx,BYTE PTR ds:[rsi]
  40bfdb:	add    BYTE PTR fs:[rax],al
  40bfde:	lahf   
  40bfdf:	add    al,0x53
  40bfe1:	gs je  0x40c039
  40bfe4:	outs   dx,BYTE PTR ds:[rsi]
  40bfe5:	push   0x6c646e61
  40bfea:	gs fs rex.RB js 0x40c052
  40bfef:	gs jo  0x40c066
  40bff2:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  40bff9:	gs jb  0x40bffc
  40bffc:	lods   al,BYTE PTR ds:[rsi]
  40bffd:	add    al,0x53
  40bfff:	ins    BYTE PTR es:[rdi],dx
  40c000:	gs gs jo 0x40c004
  40c004:	mov    edx,0x72655404
  40c009:	ins    DWORD PTR es:[rdi],dx
  40c00a:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
  40c011:	outs   dx,DWORD PTR ds:[rsi]
  40c012:	movsxd esp,DWORD PTR [rbp+0x73]
  40c015:	jae    0x40c017
  40c017:	add    cl,al
  40c019:	add    al,0x54
  40c01b:	ins    BYTE PTR es:[rdi],dx
  40c01c:	jae    0x40c065
  40c01e:	gs je  0x40c077
  40c021:	(bad)  
  40c022:	ins    BYTE PTR es:[rdi],dx
  40c023:	jne    0x40c08a
  40c025:	add    dh,cl
  40c027:	add    al,0x55
  40c029:	outs   dx,BYTE PTR ds:[rsi]
  40c02a:	push   0x6c646e61
  40c02f:	gs fs rex.RB js 0x40c097
  40c034:	gs jo  0x40c0ab
  40c037:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  40c03e:	gs jb  0x40c041
  40c041:	add    ah,ch
  40c043:	add    al,0x56
  40c045:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
  40c04c:	jb     0x40c0bd
  40c04e:	je     0x40c0b5
  40c050:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  40c054:	out    dx,al
  40c055:	add    al,0x56
  40c057:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  40c05e:	jne    0x40c0c5
  40c060:	jb     0x40c0db
  40c062:	add    BYTE PTR [rax],al
  40c064:	(bad)  
  40c065:	add    BYTE PTR [rdi+0x5f],bl
  40c068:	rex.XB pop r15
  40c06a:	jae    0x40c0dc
  40c06c:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  40c070:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
  40c077:	ins    BYTE PTR es:[rdi],dx
  40c078:	gs jb  0x40c07b
  40c07b:	add    BYTE PTR [rsi+0x0],cl
  40c07e:	pop    rdi
  40c07f:	pop    rdi
  40c080:	fs ins BYTE PTR es:[rdi],dx
  40c082:	ins    BYTE PTR es:[rdi],dx
  40c083:	outs   dx,DWORD PTR ds:[rsi]
  40c084:	outs   dx,BYTE PTR ds:[rsi]
  40c085:	gs js  0x40c0f1
  40c088:	je     0x40c08a
  40c08a:	push   rcx
  40c08b:	add    BYTE PTR [rdi+0x5f],bl
  40c08e:	addr32 gs je 0x40c0ff
  40c092:	(bad)  
  40c093:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
  40c09a:	push   rdx
  40c09b:	add    BYTE PTR [rdi+0x5f],bl
  40c09e:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
  40c0a5:	add    BYTE PTR [rbx+0x0],dl
  40c0a8:	pop    rdi
  40c0a9:	pop    rdi
  40c0aa:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
  40c0b1:	movsxd eax,DWORD PTR [rax]
  40c0b3:	add    BYTE PTR [rdx+0x0],bl
  40c0b6:	pop    rdi
  40c0b7:	pop    rdi
  40c0b8:	ins    BYTE PTR es:[rdi],dx
  40c0b9:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40c0bc:	jbe    0x40c11d
  40c0be:	imul   ebp,DWORD PTR [rsi+0x69],0x60000074
  40c0c5:	add    BYTE PTR [rdi+0x5f],bl
  40c0c8:	jae    0x40c12f
  40c0ca:	je     0x40c12b
  40c0cc:	(bad)  
  40c0cd:	jo     0x40c13f
  40c0cf:	pop    rdi
  40c0d0:	je     0x40c14b
  40c0d2:	jo     0x40c139
  40c0d4:	add    BYTE PTR [rax],al
  40c0d6:	(bad)  
  40c0d7:	add    BYTE PTR [rdi+0x5f],bl
  40c0da:	jae    0x40c141
  40c0dc:	je     0x40c153
  40c0de:	jae    0x40c145
  40c0e0:	jb     0x40c14f
  40c0e2:	(bad)  
  40c0e3:	je     0x40c14d
  40c0e5:	gs jb  0x40c15a
  40c0e8:	add    BYTE PTR [rax],al
  40c0ea:	jno    0x40c0ec
  40c0ec:	pop    rdi
  40c0ed:	(bad)  
  40c0ee:	movsxd ebp,DWORD PTR [rbp+0x64]
  40c0f1:	ins    BYTE PTR es:[rdi],dx
  40c0f2:	outs   dx,BYTE PTR ds:[rsi]
  40c0f3:	add    BYTE PTR [rax+0x0],bh
  40c0f6:	pop    rdi
  40c0f7:	(bad)  
  40c0f8:	ins    DWORD PTR es:[rdi],dx
  40c0f9:	jae    0x40c162
  40c0fb:	pop    rdi
  40c0fc:	gs js  0x40c168
  40c0ff:	je     0x40c101
  40c101:	add    BYTE PTR [rdx+0x65635f00],cl
  40c107:	js     0x40c172
  40c109:	je     0x40c10b
  40c10b:	add    dl,bl
  40c10d:	add    BYTE PTR [rdi+0x66],bl
  40c110:	ins    DWORD PTR es:[rdi],dx
  40c111:	outs   dx,DWORD PTR ds:[rsi]
  40c112:	fs add BYTE PTR gs:[rax],al
  40c116:	sbb    al,BYTE PTR [rcx]
  40c118:	pop    rdi
  40c119:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
  40c120:	ins    DWORD PTR es:[rdi],dx
  40c121:	add    BYTE PTR [rax+0x6f6c5f01],al
  40c127:	movsxd ebp,DWORD PTR [rbx+0x0]
  40c12a:	and    eax,0x6e6f5f02
  40c12f:	gs js  0x40c19b
  40c132:	je     0x40c134
  40c134:	(bad)
  40c138:	outs   dx,BYTE PTR ds:[rsi]
  40c139:	ins    BYTE PTR es:[rdi],dx
  40c13a:	outs   dx,DWORD PTR ds:[rsi]
  40c13b:	movsxd ebp,DWORD PTR [rbx+0x0]
  40c13e:	jg     0x40c143
  40c140:	(bad)  
  40c141:	(bad)  
  40c142:	outs   dx,DWORD PTR ds:[rsi]
  40c143:	jb     0x40c1b9
  40c145:	add    BYTE PTR [rax+0x6c616303],dl
  40c14b:	ins    BYTE PTR es:[rdi],dx
  40c14c:	outs   dx,DWORD PTR ds:[rsi]
  40c14d:	movsxd eax,DWORD PTR [rax]
  40c14f:	add    BYTE PTR [rbp+0x69786503],bl
  40c155:	je     0x40c157
  40c157:	add    BYTE PTR [rax+0x72706603],dh
  40c15d:	imul   ebp,DWORD PTR [rsi+0x74],0x3b70066
  40c164:	data16 jb 0x40c1cc
  40c167:	add    BYTE PTR gs:[rax],al
  40c16a:	ret    0x6603
  40c16d:	ja     0x40c1e1
  40c16f:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x6d03f000
  40c177:	(bad)  
  40c178:	ins    BYTE PTR es:[rdi],dx
  40c179:	ins    BYTE PTR es:[rdi],dx
  40c17a:	outs   dx,DWORD PTR ds:[rsi]
  40c17b:	movsxd eax,DWORD PTR [rax]
  40c17d:	add    al,bh
  40c17f:	add    ebp,DWORD PTR [rbp+0x65]
  40c182:	ins    DWORD PTR es:[rdi],dx
  40c183:	movsxd esi,DWORD PTR [rax+0x79]
  40c186:	add    BYTE PTR [rax],al
  40c188:	(bad)  
  40c189:	add    al,0x73
  40c18b:	imul   esp,DWORD PTR [rdi+0x6e],0x6c61
  40c192:	and    al,0x4
  40c194:	jae    0x40c20a
  40c196:	jb     0x40c1fb
  40c198:	ins    DWORD PTR es:[rdi],dx
  40c199:	jo     0x40c19b
  40c19b:	add    BYTE PTR [rbx],ch
  40c19d:	add    al,0x73
  40c19f:	je     0x40c213
  40c1a1:	ins    BYTE PTR es:[rdi],dx
  40c1a2:	outs   dx,BYTE PTR gs:[rsi]
  40c1a4:	add    BYTE PTR [rax],al
  40c1a6:	cs add al,0x73
  40c1a9:	je     0x40c21d
  40c1ab:	outs   dx,BYTE PTR ds:[rsi]
  40c1ac:	movsxd ebp,DWORD PTR [rbp+0x70]
  40c1af:	add    BYTE PTR [rsp+rax*1],dh
  40c1b2:	jae    0x40c228
  40c1b4:	jb     0x40c229
  40c1b6:	je     0x40c22a
  40c1b8:	add    BYTE PTR [rax],al
  40c1ba:	rex.WRX add al,0x76
  40c1bd:	data16 jo 0x40c232
  40c1c0:	imul   ebp,DWORD PTR [rsi+0x74],0x66
  40c1c7:	add    BYTE PTR [rax],al
  40c1c9:	mov    al,0x0
  40c1cb:	add    BYTE PTR [rax],al
  40c1cd:	mov    al,0x0
  40c1cf:	add    BYTE PTR [rax],al
  40c1d1:	mov    al,0x0
  40c1d3:	add    BYTE PTR [rax],al
  40c1d5:	mov    al,0x0
  40c1d7:	add    BYTE PTR [rax],al
  40c1d9:	mov    al,0x0
  40c1db:	add    BYTE PTR [rax],al
  40c1dd:	mov    al,0x0
  40c1df:	add    BYTE PTR [rax],al
  40c1e1:	mov    al,0x0
  40c1e3:	add    BYTE PTR [rax],al
  40c1e5:	mov    al,0x0
  40c1e7:	add    BYTE PTR [rax],al
  40c1e9:	mov    al,0x0
  40c1eb:	add    BYTE PTR [rax],al
  40c1ed:	mov    al,0x0
  40c1ef:	add    BYTE PTR [rax],al
  40c1f1:	mov    al,0x0
  40c1f3:	add    BYTE PTR [rax],al
  40c1f5:	mov    al,0x0
  40c1f7:	add    BYTE PTR [rax],al
  40c1f9:	mov    al,0x0
  40c1fb:	add    BYTE PTR [rax],al
  40c1fd:	mov    al,0x0
  40c1ff:	add    BYTE PTR [rax],al
  40c201:	mov    al,0x0
  40c203:	add    BYTE PTR [rax],al
  40c205:	mov    al,0x0
  40c207:	add    BYTE PTR [rax],al
  40c209:	mov    al,0x0
  40c20b:	add    BYTE PTR [rax],al
  40c20d:	mov    al,0x0
  40c20f:	add    BYTE PTR [rax],al
  40c211:	mov    al,0x0
  40c213:	add    BYTE PTR [rax],al
  40c215:	mov    al,0x0
  40c217:	add    BYTE PTR [rax],al
  40c219:	mov    al,0x0
  40c21b:	add    BYTE PTR [rax],al
  40c21d:	mov    al,0x0
  40c21f:	add    BYTE PTR [rax],al
  40c221:	mov    al,0x0
  40c223:	add    BYTE PTR [rax],al
  40c225:	mov    al,0x0
  40c227:	add    BYTE PTR [rax],al
  40c229:	mov    al,0x0
  40c22b:	add    BYTE PTR [rax],al
  40c22d:	mov    al,0x0
  40c22f:	add    BYTE PTR [rax],al
  40c231:	mov    al,0x0
  40c233:	add    BYTE PTR [rcx+rbp*2+0x62],ch
  40c237:	imul   ebp,DWORD PTR [edi+0x2d],0x2d302e32
  40c23f:	xor    BYTE PTR [rsi],ch
  40c241:	fs ins BYTE PTR es:[rdi],dx
  40c243:	ins    BYTE PTR es:[rdi],dx
  40c244:	add    BYTE PTR [rax],al
  40c246:	add    BYTE PTR [rax],al
  40c248:	adc    al,0xb0
  40c24a:	add    BYTE PTR [rax],al
  40c24c:	adc    al,0xb0
  40c24e:	add    BYTE PTR [rax],al
  40c250:	adc    al,0xb0
  40c252:	add    BYTE PTR [rax],al
  40c254:	adc    al,0xb0
  40c256:	add    BYTE PTR [rax],al
  40c258:	adc    al,0xb0
  40c25a:	add    BYTE PTR [rax],al
  40c25c:	adc    al,0xb0
  40c25e:	add    BYTE PTR [rax],al
  40c260:	adc    al,0xb0
  40c262:	add    BYTE PTR [rax],al
  40c264:	adc    al,0xb0
  40c266:	add    BYTE PTR [rax],al
  40c268:	adc    al,0xb0
  40c26a:	add    BYTE PTR [rax],al
  40c26c:	adc    al,0xb0
  40c26e:	add    BYTE PTR [rax],al
  40c270:	adc    al,0xb0
  40c272:	add    BYTE PTR [rax],al
  40c274:	adc    al,0xb0
  40c276:	add    BYTE PTR [rax],al
  40c278:	adc    al,0xb0
  40c27a:	add    BYTE PTR [rax],al
  40c27c:	adc    al,0xb0
  40c27e:	add    BYTE PTR [rax],al
  40c280:	adc    al,0xb0
  40c282:	add    BYTE PTR [rax],al
  40c284:	adc    al,0xb0
  40c286:	add    BYTE PTR [rax],al
  40c288:	adc    al,0xb0
  40c28a:	add    BYTE PTR [rax],al
  40c28c:	adc    al,0xb0
  40c28e:	add    BYTE PTR [rax],al
  40c290:	adc    al,0xb0
  40c292:	add    BYTE PTR [rax],al
  40c294:	adc    al,0xb0
  40c296:	add    BYTE PTR [rax],al
  40c298:	adc    al,0xb0
  40c29a:	add    BYTE PTR [rax],al
  40c29c:	adc    al,0xb0
  40c29e:	add    BYTE PTR [rax],al
  40c2a0:	adc    al,0xb0
  40c2a2:	add    BYTE PTR [rax],al
  40c2a4:	adc    al,0xb0
  40c2a6:	add    BYTE PTR [rax],al
  40c2a8:	adc    al,0xb0
  40c2aa:	add    BYTE PTR [rax],al
  40c2ac:	adc    al,0xb0
  40c2ae:	add    BYTE PTR [rax],al
  40c2b0:	adc    al,0xb0
  40c2b2:	add    BYTE PTR [rax],al
  40c2b4:	adc    al,0xb0
  40c2b6:	add    BYTE PTR [rax],al
  40c2b8:	adc    al,0xb0
  40c2ba:	add    BYTE PTR [rax],al
  40c2bc:	ins    BYTE PTR es:[rdi],dx
  40c2bd:	imul   esp,DWORD PTR [rdx+0x67],0x2d62696c
  40c2c4:	xor    ch,BYTE PTR [rsi]
  40c2c6:	xor    BYTE PTR [rip+0x6c642e30],ch        # 0x6ca4f0fc
  40c2cc:	ins    BYTE PTR es:[rdi],dx
  40c2cd:	add    BYTE PTR [rax],al
  40c2cf:	add    BYTE PTR [rax],ch
  40c2d1:	mov    al,0x0
  40c2d3:	add    BYTE PTR [rax],ch
  40c2d5:	mov    al,0x0
  40c2d7:	add    BYTE PTR [rax],ch
  40c2d9:	mov    al,0x0
  40c2db:	add    BYTE PTR [rcx+rbp*2+0x62],ch
  40c2df:	outs   dx,DWORD PTR ds:[esi]
  40c2e1:	(bad)  
  40c2e2:	push   0x65
  40c2e4:	movsxd esi,DWORD PTR [rbp+rbp*1+0x32]
  40c2e8:	xor    BYTE PTR cs:[rip+0x6c642e30],ch        # 0x6ca4f11f
  40c2ef:	ins    BYTE PTR es:[rdi],dx
  40c2f0:	add    BYTE PTR [rax],al
  40c2f2:	add    BYTE PTR [rax],al
  40c2f4:	cmp    al,0xb0
  40c2f6:	add    BYTE PTR [rax],al
  40c2f8:	cmp    al,0xb0
  40c2fa:	add    BYTE PTR [rax],al
  40c2fc:	cmp    al,0xb0
  40c2fe:	add    BYTE PTR [rax],al
  40c300:	cmp    al,0xb0
  40c302:	add    BYTE PTR [rax],al
  40c304:	cmp    al,0xb0
  40c306:	add    BYTE PTR [rax],al
  40c308:	ins    BYTE PTR es:[rdi],dx
  40c309:	imul   esp,DWORD PTR [rdx+0x69],0x2d6c746e
  40c310:	cmp    BYTE PTR [rsi],ch
  40c312:	fs ins BYTE PTR es:[rdi],dx
  40c314:	ins    BYTE PTR es:[rdi],dx
  40c315:	add    BYTE PTR [rax],al
  40c317:	add    BYTE PTR [rax-0x50],dl
  40c31a:	add    BYTE PTR [rax],al
  40c31c:	push   rax
  40c31d:	mov    al,0x0
  40c31f:	add    BYTE PTR [rax-0x50],dl
  40c322:	add    BYTE PTR [rax],al
  40c324:	push   rax
  40c325:	mov    al,0x0
  40c327:	add    BYTE PTR [rax-0x50],dl
  40c32a:	add    BYTE PTR [rax],al
  40c32c:	push   rax
  40c32d:	mov    al,0x0
  40c32f:	add    BYTE PTR [rax-0x50],dl
  40c332:	add    BYTE PTR [rax],al
  40c334:	push   rax
  40c335:	mov    al,0x0
  40c337:	add    BYTE PTR [rax-0x50],dl
  40c33a:	add    BYTE PTR [rax],al
  40c33c:	push   rax
  40c33d:	mov    al,0x0
  40c33f:	add    BYTE PTR [rax-0x50],dl
  40c342:	add    BYTE PTR [rax],al
  40c344:	push   rax
  40c345:	mov    al,0x0
  40c347:	add    BYTE PTR [rax-0x50],dl
  40c34a:	add    BYTE PTR [rax],al
  40c34c:	push   rax
  40c34d:	mov    al,0x0
  40c34f:	add    BYTE PTR [rax-0x50],dl
  40c352:	add    BYTE PTR [rax],al
  40c354:	push   rax
  40c355:	mov    al,0x0
  40c357:	add    BYTE PTR [rax-0x50],dl
  40c35a:	add    BYTE PTR [rax],al
  40c35c:	push   rax
  40c35d:	mov    al,0x0
  40c35f:	add    BYTE PTR [rax-0x50],dl
  40c362:	add    BYTE PTR [rax],al
  40c364:	push   rax
  40c365:	mov    al,0x0
  40c367:	add    BYTE PTR [rax-0x50],dl
  40c36a:	add    BYTE PTR [rax],al
  40c36c:	push   rax
  40c36d:	mov    al,0x0
  40c36f:	add    BYTE PTR [rax-0x50],dl
  40c372:	add    BYTE PTR [rax],al
  40c374:	rex.WXB
  40c375:	rex.RB push r10
  40c377:	rex.WRX
  40c378:	rex.RB
  40c379:	xor    r14,QWORD PTR [rdx]
  40c37c:	cs fs ins BYTE PTR es:[rdi],dx
  40c37f:	ins    BYTE PTR es:[rdi],dx
  40c380:	add    BYTE PTR [rax],al
  40c382:	add    BYTE PTR [rax],al
  40c384:	fs mov al,0x0
  40c387:	add    BYTE PTR [rax+rsi*4+0x0],ah
  40c38b:	add    BYTE PTR [rax+rsi*4+0x0],ah
  40c38f:	add    BYTE PTR [rax+rsi*4+0x0],ah
  40c393:	add    BYTE PTR [rax+rsi*4+0x0],ah
  40c397:	add    BYTE PTR [rax+rsi*4+0x0],ah
  40c39b:	add    BYTE PTR [rax+rsi*4+0x0],ah
  40c39f:	add    BYTE PTR [rax+rsi*4+0x0],ah
  40c3a3:	add    BYTE PTR [rax+rsi*4+0x0],ah
  40c3a7:	add    BYTE PTR [rax+rsi*4+0x0],ah
  40c3ab:	add    BYTE PTR [rax+rsi*4+0x0],ah
  40c3af:	add    BYTE PTR [rax+rsi*4+0x0],ah
  40c3b3:	add    BYTE PTR [rax+rsi*4+0x0],ah
  40c3b7:	add    BYTE PTR [rax+rsi*4+0x0],ah
  40c3bb:	add    BYTE PTR [rax+rsi*4+0x0],ah
  40c3bf:	add    BYTE PTR [rax+rsi*4+0x0],ah
  40c3c3:	add    BYTE PTR [rax+rsi*4+0x0],ah
  40c3c7:	add    BYTE PTR [rax+rsi*4+0x0],ah
  40c3cb:	add    BYTE PTR [rax+rsi*4+0x0],ah
  40c3cf:	add    BYTE PTR [rax+rsi*4+0x0],ah
  40c3d3:	add    BYTE PTR [rax+rsi*4+0x0],ah
  40c3d7:	add    BYTE PTR [rax+rsi*4+0x0],ah
  40c3db:	add    BYTE PTR [rax+rsi*4+0x0],ah
  40c3df:	add    BYTE PTR [rax+rsi*4+0x0],ah
  40c3e3:	add    BYTE PTR [rax+rsi*4+0x0],ah
  40c3e7:	add    BYTE PTR [rax+rsi*4+0x0],ah
  40c3eb:	add    BYTE PTR [rax+rsi*4+0x0],ah
  40c3ef:	add    BYTE PTR [rax+rsi*4+0x0],ah
  40c3f3:	add    BYTE PTR [rax+rsi*4+0x0],ah
  40c3f7:	add    BYTE PTR [rax+rsi*4+0x0],ah
  40c3fb:	add    BYTE PTR [rbp+0x73],ch
  40c3fe:	jbe    0x40c463
  40c400:	jb     0x40c476
  40c402:	cs fs ins BYTE PTR es:[rdi],dx
  40c405:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .CRT:

000000000040d000 <.CRT>:
	...
  40d008:	(bad)  
  40d009:	adc    DWORD PTR [rax+0x0],eax
	...
  40d020:	adc    BYTE PTR [rax],dl
  40d022:	add    BYTE PTR [rax],al
  40d025:	add    BYTE PTR [rax],al
  40d027:	add    BYTE PTR [rax+0x4028],al
	...
  40d03d:	add    BYTE PTR [rax],al
  40d03f:	add    BYTE PTR [rax+0x402a],dh
  40d045:	add    BYTE PTR [rax],al
  40d047:	add    BYTE PTR [rax+0x402a],al
	...

Disassembly of section .tls:

000000000040e000 <.tls>:
	...
  40e020:	add    al,ah
  40e022:	add    BYTE PTR [rax],al
  40e025:	add    BYTE PTR [rax],al
  40e027:	add    BYTE PTR [rax-0x20],ah
  40e02a:	add    BYTE PTR [rax],al
  40e02d:	add    BYTE PTR [rax],al
  40e02f:	add    BYTE PTR [rsi+riz*4+0x40],bl
  40e033:	add    BYTE PTR [rax],al
  40e035:	add    BYTE PTR [rax],al
  40e037:	add    BYTE PTR [rax-0x30],al
  40e03a:	add    BYTE PTR [rax],al
	...
