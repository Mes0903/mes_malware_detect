
e24e9b04c7f2f50da89c36779bc0f9a17e55755845c0c4fc33d25d2cbb912a0d.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
	...
   140001010:	mov    rax,rsp
   140001013:	mov    QWORD PTR [rax+0x8],rbx
   140001017:	mov    QWORD PTR [rax+0x10],rbp
   14000101b:	mov    QWORD PTR [rax+0x18],rsi
   14000101f:	mov    QWORD PTR [rax+0x20],rdi
   140001023:	push   r12
   140001025:	push   r14
   140001027:	push   r15
   140001029:	sub    rsp,0x40
   14000102d:	mov    rbx,QWORD PTR [rsp+0x90]
   140001035:	mov    r15,r9
   140001038:	mov    sil,r8b
   14000103b:	mov    r14d,edx
   14000103e:	mov    r12,rcx
   140001041:	test   rbx,rbx
   140001044:	je     0x1400010b4
   140001046:	mov    rbp,QWORD PTR [rsp+0x80]
   14000104e:	mov    eax,edx
   140001050:	test   edx,edx
   140001052:	je     0x140001076
   140001054:	cmp    eax,0x1
   140001057:	jne    0x140001079
   140001059:	movzx  ecx,r8b
   14000105d:	mov    eax,0x100
   140001062:	inc    ecx
   140001064:	mov    QWORD PTR [rbx+0x10],r9
   140001068:	test   r8b,r8b
   14000106b:	mov    QWORD PTR [rbx+0x18],rbp
   14000106f:	cmovne eax,ecx
   140001072:	mov    DWORD PTR [rbx],eax
   140001074:	jmp    0x140001079
   140001076:	and    DWORD PTR [rbx],0x0
   140001079:	mov    rdi,QWORD PTR [rbx+0x28]
   14000107d:	test   rdi,rdi
   140001080:	je     0x1400010b4
   140001082:	mov    rcx,rdi
   140001085:	call   QWORD PTR [rip+0x52bd]        # 0x140006348
   14000108b:	mov    rax,QWORD PTR [rbx+0x30]
   14000108f:	mov    r9,r15
   140001092:	mov    QWORD PTR [rsp+0x30],rax
   140001097:	mov    r8b,sil
   14000109a:	mov    rax,QWORD PTR [rsp+0x88]
   1400010a2:	mov    edx,r14d
   1400010a5:	mov    QWORD PTR [rsp+0x28],rax
   1400010aa:	mov    rcx,r12
   1400010ad:	mov    QWORD PTR [rsp+0x20],rbp
   1400010b2:	call   rdi
   1400010b4:	mov    rbx,QWORD PTR [rsp+0x60]
   1400010b9:	mov    rbp,QWORD PTR [rsp+0x68]
   1400010be:	mov    rsi,QWORD PTR [rsp+0x70]
   1400010c3:	mov    rdi,QWORD PTR [rsp+0x78]
   1400010c8:	add    rsp,0x40
   1400010cc:	pop    r15
   1400010ce:	pop    r14
   1400010d0:	pop    r12
   1400010d2:	ret    
   1400010d3:	int3   
   1400010d4:	int3   
   1400010d5:	int3   
   1400010d6:	int3   
   1400010d7:	int3   
   1400010d8:	int3   
   1400010d9:	int3   
   1400010da:	int3   
   1400010db:	int3   
   1400010dc:	rex push rbx
   1400010de:	sub    rsp,0x50
   1400010e2:	mov    rax,QWORD PTR [rip+0x8f1f]        # 0x14000a008
   1400010e9:	xor    rax,rsp
   1400010ec:	mov    QWORD PTR [rsp+0x40],rax
   1400010f1:	mov    r11,QWORD PTR [rsp+0x88]
   1400010f9:	lea    r10,[rdx+0x1]
   1400010fd:	mov    rbx,rcx
   140001100:	mov    QWORD PTR [rsp+0x28],r11
   140001105:	mov    ecx,edx
   140001107:	lea    rax,[rip+0x70da]        # 0x1400081e8
   14000110e:	sub    ecx,eax
   140001110:	mov    al,BYTE PTR [rip+0x7192]        # 0x1400082a8
   140001116:	movzx  eax,BYTE PTR [rdx]
   140001119:	shl    eax,0x18
   14000111c:	or     eax,ecx
   14000111e:	mov    DWORD PTR [rsp+0x30],eax
   140001122:	movzx  eax,WORD PTR [r10]
   140001126:	mov    DWORD PTR [rsp+0x34],eax
   14000112a:	mov    eax,DWORD PTR [r10+0x2]
   14000112e:	mov    DWORD PTR [rsp+0x38],eax
   140001132:	mov    eax,DWORD PTR [r10+0x6]
   140001136:	add    r10,0xa
   14000113a:	mov    DWORD PTR [rsp+0x3c],eax
   14000113e:	mov    rax,QWORD PTR [rbx+0x8]
   140001142:	mov    QWORD PTR [r11],rax
   140001145:	mov    rax,QWORD PTR [rbx+0x8]
   140001149:	movzx  edx,WORD PTR [rax]
   14000114c:	mov    DWORD PTR [r11+0x8],edx
   140001150:	lea    rdx,[rsp+0x30]
   140001155:	mov    DWORD PTR [r11+0xc],0x2
   14000115d:	mov    QWORD PTR [r11+0x10],r10
   140001161:	movzx  eax,WORD PTR [r10]
   140001165:	mov    DWORD PTR [r11+0x18],eax
   140001169:	mov    eax,DWORD PTR [rsp+0x80]
   140001170:	mov    DWORD PTR [r11+0x1c],0x1
   140001178:	mov    rcx,QWORD PTR [rbx+0x20]
   14000117c:	mov    DWORD PTR [rsp+0x20],eax
   140001180:	call   QWORD PTR [rip+0x513a]        # 0x1400062c0
   140001186:	mov    rcx,QWORD PTR [rsp+0x40]
   14000118b:	xor    rcx,rsp
   14000118e:	call   0x140004400
   140001193:	add    rsp,0x50
   140001197:	pop    rbx
   140001198:	ret    
   140001199:	int3   
   14000119a:	int3   
   14000119b:	int3   
   14000119c:	int3   
   14000119d:	int3   
   14000119e:	int3   
   14000119f:	int3   
   1400011a0:	lea    rax,[rip+0xe9]        # 0x140001290
   1400011a7:	mov    QWORD PTR [rip+0xa3da],rax        # 0x14000b588
   1400011ae:	lea    rax,[rip+0x1eb]        # 0x1400013a0
   1400011b5:	mov    QWORD PTR [rip+0xa3bc],rax        # 0x14000b578
   1400011bc:	lea    rax,[rip+0x22d]        # 0x1400013f0
   1400011c3:	mov    QWORD PTR [rip+0xa3b6],rax        # 0x14000b580
   1400011ca:	ret    
   1400011cb:	int3   
   1400011cc:	int3   
   1400011cd:	int3   
   1400011ce:	int3   
   1400011cf:	int3   
   1400011d0:	lea    rcx,[rip+0x41f9]        # 0x1400053d0
   1400011d7:	jmp    0x140004598
   1400011dc:	int3   
   1400011dd:	int3   
   1400011de:	int3   
   1400011df:	int3   
   1400011e0:	lea    rcx,[rip+0x41c9]        # 0x1400053b0
   1400011e7:	jmp    0x140004598
   1400011ec:	int3   
   1400011ed:	int3   
   1400011ee:	int3   
   1400011ef:	int3   
   1400011f0:	lea    rcx,[rip+0x4199]        # 0x140005390
   1400011f7:	jmp    0x140004598
   1400011fc:	int3   
   1400011fd:	int3   
   1400011fe:	int3   
   1400011ff:	int3   
   140001200:	rex push rbx
   140001202:	sub    rsp,0x20
   140001206:	mov    eax,DWORD PTR [rip+0xa3d8]        # 0x14000b5e4
   14000120c:	lea    rbx,[rip+0xa3d5]        # 0x14000b5e8
   140001213:	test   al,0x1
   140001215:	jne    0x140001249
   140001217:	and    QWORD PTR [rip+0xa3d1],0x0        # 0x14000b5f0
   14000121f:	lea    rcx,[rip+0x41ca]        # 0x1400053f0
   140001226:	or     eax,0x1
   140001229:	mov    QWORD PTR [rip+0xa3a8],rbx        # 0x14000b5d8
   140001230:	mov    DWORD PTR [rip+0xa3ae],eax        # 0x14000b5e4
   140001236:	lea    rax,[rip+0x572b]        # 0x140006968
   14000123d:	mov    QWORD PTR [rip+0xa3a4],rax        # 0x14000b5e8
   140001244:	call   0x140004598
   140001249:	test   rbx,rbx
   14000124c:	setne  BYTE PTR [rip+0xa3b9]        # 0x14000b60c
   140001253:	add    rsp,0x20
   140001257:	pop    rbx
   140001258:	ret    
   140001259:	int3   
   14000125a:	int3   
   14000125b:	int3   
   14000125c:	int3   
   14000125d:	int3   
   14000125e:	int3   
   14000125f:	int3   
   140001260:	int3   
   140001261:	int3   
   140001262:	int3   
   140001263:	int3   
   140001264:	int3   
   140001265:	int3   
   140001266:	int3   
   140001267:	int3   
   140001268:	int3   
   140001269:	int3   
   14000126a:	int3   
   14000126b:	int3   
   14000126c:	int3   
   14000126d:	int3   
   14000126e:	int3   
   14000126f:	int3   
   140001270:	mov    DWORD PTR [rip+0xa31a],ecx        # 0x14000b590
   140001276:	mov    eax,0x1
   14000127b:	ret    
   14000127c:	int3   
   14000127d:	int3   
   14000127e:	int3   
   14000127f:	int3   
   140001280:	int3   
   140001281:	int3   
   140001282:	int3   
   140001283:	int3   
   140001284:	int3   
   140001285:	int3   
   140001286:	int3   
   140001287:	int3   
   140001288:	int3   
   140001289:	int3   
   14000128a:	int3   
   14000128b:	int3   
   14000128c:	int3   
   14000128d:	int3   
   14000128e:	int3   
   14000128f:	int3   
   140001290:	mov    QWORD PTR [rsp+0x8],rbx
   140001295:	push   rsi
   140001296:	sub    rsp,0x150
   14000129d:	mov    rax,QWORD PTR [rip+0x8d64]        # 0x14000a008
   1400012a4:	xor    rax,rsp
   1400012a7:	mov    QWORD PTR [rsp+0x140],rax
   1400012af:	mov    al,BYTE PTR [rip+0xa313]        # 0x14000b5c8
   1400012b5:	lea    rsi,[rip+0xa354]        # 0x14000b610
   1400012bc:	test   al,al
   1400012be:	jne    0x140001374
   1400012c4:	mov    ebx,0x40
   1400012c9:	xor    edx,edx
   1400012cb:	mov    r8d,ebx
   1400012ce:	mov    rcx,rsi
   1400012d1:	call   0x14000503c
   1400012d6:	and    QWORD PTR [rsp+0x20],0x0
   1400012dc:	lea    r8,[rsp+0x20]
   1400012e1:	lea    rdx,[rip+0xffffffffffffff88]        # 0x140001270
   1400012e8:	lea    ecx,[rbx-0x3a]
   1400012eb:	call   QWORD PTR [rip+0x4dcf]        # 0x1400060c0
   1400012f1:	test   eax,eax
   1400012f3:	je     0x14000136d
   1400012f5:	mov    rcx,QWORD PTR [rsp+0x20]
   1400012fa:	lea    rdx,[rsp+0x30]
   1400012ff:	mov    r8d,0x104
   140001305:	call   QWORD PTR [rip+0x4dbd]        # 0x1400060c8
   14000130b:	test   eax,eax
   14000130d:	je     0x14000136d
   14000130f:	lea    rcx,[rsp+0x30]
   140001314:	or     rax,0xffffffffffffffff
   140001318:	inc    rax
   14000131b:	cmp    BYTE PTR [rcx+rax*1],0x0
   14000131f:	jne    0x140001318
   140001321:	lea    rdx,[rsp+0x30]
   140001326:	add    rdx,rax
   140001329:	jmp    0x140001334
   14000132b:	cmp    BYTE PTR [rdx-0x1],0x5c
   14000132f:	je     0x14000133e
   140001331:	dec    rdx
   140001334:	lea    rax,[rsp+0x30]
   140001339:	cmp    rdx,rax
   14000133c:	ja     0x14000132b
   14000133e:	mov    rcx,rsi
   140001341:	sub    rdx,rsi
   140001344:	lea    rax,[rbx+0x7fffffbe]
   14000134b:	test   rax,rax
   14000134e:	je     0x140001362
   140001350:	mov    al,BYTE PTR [rdx+rcx*1]
   140001353:	test   al,al
   140001355:	je     0x140001362
   140001357:	mov    BYTE PTR [rcx],al
   140001359:	inc    rcx
   14000135c:	sub    rbx,0x1
   140001360:	jne    0x140001344
   140001362:	test   rbx,rbx
   140001365:	jne    0x14000136a
   140001367:	dec    rcx
   14000136a:	mov    BYTE PTR [rcx],0x0
   14000136d:	mov    BYTE PTR [rip+0xa254],0x1        # 0x14000b5c8
   140001374:	mov    rax,rsi
   140001377:	mov    rcx,QWORD PTR [rsp+0x140]
   14000137f:	xor    rcx,rsp
   140001382:	call   0x140004400
   140001387:	mov    rbx,QWORD PTR [rsp+0x160]
   14000138f:	add    rsp,0x150
   140001396:	pop    rsi
   140001397:	ret    
   140001398:	int3   
   140001399:	int3   
   14000139a:	int3   
   14000139b:	int3   
   14000139c:	int3   
   14000139d:	int3   
   14000139e:	int3   
   14000139f:	int3   
   1400013a0:	rex push rbx
   1400013a2:	sub    rsp,0x20
   1400013a6:	lea    rcx,[rip+0x5243]        # 0x1400065f0
   1400013ad:	call   QWORD PTR [rip+0x4d05]        # 0x1400060b8
   1400013b3:	test   rax,rax
   1400013b6:	je     0x1400013db
   1400013b8:	lea    rdx,[rip+0x5249]        # 0x140006608
   1400013bf:	mov    rcx,rax
   1400013c2:	call   QWORD PTR [rip+0x4ce8]        # 0x1400060b0
   1400013c8:	mov    rbx,rax
   1400013cb:	test   rax,rax
   1400013ce:	je     0x1400013db
   1400013d0:	mov    rcx,rax
   1400013d3:	call   QWORD PTR [rip+0x4f6f]        # 0x140006348
   1400013d9:	call   rbx
   1400013db:	add    rsp,0x20
   1400013df:	pop    rbx
   1400013e0:	ret    
   1400013e1:	int3   
   1400013e2:	int3   
   1400013e3:	int3   
   1400013e4:	int3   
   1400013e5:	int3   
   1400013e6:	int3   
   1400013e7:	int3   
   1400013e8:	int3   
   1400013e9:	int3   
   1400013ea:	int3   
   1400013eb:	int3   
   1400013ec:	int3   
   1400013ed:	int3   
   1400013ee:	int3   
   1400013ef:	int3   
   1400013f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400013f5:	mov    QWORD PTR [rsp+0x10],rsi
   1400013fa:	push   rdi
   1400013fb:	sub    rsp,0x20
   1400013ff:	mov    rdi,QWORD PTR [rip+0xa1aa]        # 0x14000b5b0
   140001406:	xor    ebx,ebx
   140001408:	mov    esi,ecx
   14000140a:	test   rdi,rdi
   14000140d:	jne    0x140001456
   14000140f:	mov    rax,QWORD PTR [rip+0xa182]        # 0x14000b598
   140001416:	test   rax,rax
   140001419:	jne    0x140001437
   14000141b:	xor    edx,edx
   14000141d:	lea    rcx,[rip+0x51cc]        # 0x1400065f0
   140001424:	mov    r8d,0x800
   14000142a:	call   QWORD PTR [rip+0x4c78]        # 0x1400060a8
   140001430:	mov    QWORD PTR [rip+0xa161],rax        # 0x14000b598
   140001437:	lea    rdx,[rip+0x51ea]        # 0x140006628
   14000143e:	mov    rcx,rax
   140001441:	call   QWORD PTR [rip+0x4c69]        # 0x1400060b0
   140001447:	mov    QWORD PTR [rip+0xa162],rax        # 0x14000b5b0
   14000144e:	mov    rdi,rax
   140001451:	test   rax,rax
   140001454:	je     0x140001465
   140001456:	mov    rcx,rdi
   140001459:	call   QWORD PTR [rip+0x4ee9]        # 0x140006348
   14000145f:	mov    ecx,esi
   140001461:	call   rdi
   140001463:	mov    ebx,eax
   140001465:	mov    rsi,QWORD PTR [rsp+0x38]
   14000146a:	mov    eax,ebx
   14000146c:	mov    rbx,QWORD PTR [rsp+0x30]
   140001471:	add    rsp,0x20
   140001475:	pop    rdi
   140001476:	ret    
   140001477:	int3   
   140001478:	int3   
   140001479:	int3   
   14000147a:	int3   
   14000147b:	int3   
   14000147c:	int3   
   14000147d:	int3   
   14000147e:	int3   
   14000147f:	int3   
   140001480:	xor    r9d,r9d
   140001483:	xor    r8d,r8d
   140001486:	lea    edx,[r9+0x1]
   14000148a:	rex.W jmp QWORD PTR [rip+0x4bd7]        # 0x140006068
   140001491:	int3   
   140001492:	int3   
   140001493:	int3   
   140001494:	int3   
   140001495:	int3   
   140001496:	int3   
   140001497:	int3   
   140001498:	int3   
   140001499:	int3   
   14000149a:	int3   
   14000149b:	int3   
   14000149c:	int3   
   14000149d:	int3   
   14000149e:	int3   
   14000149f:	int3   
   1400014a0:	mov    eax,DWORD PTR [rip+0xa13a]        # 0x14000b5e0
   1400014a6:	ret    
   1400014a7:	int3   
   1400014a8:	int3   
   1400014a9:	int3   
   1400014aa:	int3   
   1400014ab:	int3   
   1400014ac:	int3   
   1400014ad:	int3   
   1400014ae:	int3   
   1400014af:	int3   
   1400014b0:	lea    rax,[rip+0x78b1]        # 0x140008d68
   1400014b7:	ret    
   1400014b8:	int3   
   1400014b9:	int3   
   1400014ba:	int3   
   1400014bb:	int3   
   1400014bc:	int3   
   1400014bd:	int3   
   1400014be:	int3   
   1400014bf:	int3   
   1400014c0:	lea    rax,[rip+0x78b9]        # 0x140008d80
   1400014c7:	ret    
   1400014c8:	int3   
   1400014c9:	int3   
   1400014ca:	int3   
   1400014cb:	int3   
   1400014cc:	int3   
   1400014cd:	int3   
   1400014ce:	int3   
   1400014cf:	int3   
   1400014d0:	lea    rax,[rip+0x78b1]        # 0x140008d88
   1400014d7:	ret    
   1400014d8:	int3   
   1400014d9:	int3   
   1400014da:	int3   
   1400014db:	int3   
   1400014dc:	int3   
   1400014dd:	int3   
   1400014de:	int3   
   1400014df:	int3   
   1400014e0:	lea    rax,[rip+0xa0e9]        # 0x14000b5d0
   1400014e7:	ret    
   1400014e8:	int3   
   1400014e9:	int3   
   1400014ea:	int3   
   1400014eb:	int3   
   1400014ec:	int3   
   1400014ed:	int3   
   1400014ee:	int3   
   1400014ef:	int3   
   1400014f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400014f5:	push   rdi
   1400014f6:	sub    rsp,0x20
   1400014fa:	mov    rdi,rcx
   1400014fd:	mov    rbx,rdx
   140001500:	mov    rcx,rdx
   140001503:	call   QWORD PTR [rip+0x4c2f]        # 0x140006138
   140001509:	mov    QWORD PTR [rdi],rbx
   14000150c:	mov    rax,rdi
   14000150f:	mov    rbx,QWORD PTR [rsp+0x30]
   140001514:	add    rsp,0x20
   140001518:	pop    rdi
   140001519:	ret    
   14000151a:	int3   
   14000151b:	int3   
   14000151c:	int3   
   14000151d:	int3   
   14000151e:	int3   
   14000151f:	int3   
   140001520:	mov    QWORD PTR [rsp+0x8],rbx
   140001525:	mov    QWORD PTR [rsp+0x18],rbp
   14000152a:	mov    QWORD PTR [rsp+0x10],rdx
   14000152f:	push   rsi
   140001530:	push   rdi
   140001531:	push   r12
   140001533:	push   r13
   140001535:	push   r14
   140001537:	sub    rsp,0x20
   14000153b:	mov    bpl,r8b
   14000153e:	lea    rsi,[rip+0x782b]        # 0x140008d70
   140001545:	mov    r14,rcx
   140001548:	lea    r13,[rip+0x7839]        # 0x140008d88
   14000154f:	lea    r12,[rip+0xffffffffffffff4a]        # 0x1400014a0
   140001556:	cmp    rsi,r13
   140001559:	jae    0x140001617
   14000155f:	cmp    QWORD PTR [rsi],0x0
   140001563:	je     0x14000160a
   140001569:	mov    rax,QWORD PTR [r14]
   14000156c:	cmp    QWORD PTR [rax+0x18],r12
   140001570:	jne    0x14000157a
   140001572:	mov    eax,DWORD PTR [rip+0xa068]        # 0x14000b5e0
   140001578:	jmp    0x14000157c
   14000157a:	xor    eax,eax
   14000157c:	test   eax,eax
   14000157e:	je     0x140001589
   140001580:	test   bpl,bpl
   140001583:	je     0x140001613
   140001589:	mov    rax,QWORD PTR [rsi]
   14000158c:	mov    rcx,QWORD PTR [rax+0x18]
   140001590:	mov    rax,QWORD PTR [rcx]
   140001593:	test   rax,rax
   140001596:	je     0x14000160a
   140001598:	lea    rdx,[rip+0xa031]        # 0x14000b5d0
   14000159f:	lea    rcx,[rsp+0x58]
   1400015a4:	call   0x1400014f0
   1400015a9:	mov    rax,QWORD PTR [rsi]
   1400015ac:	mov    rcx,QWORD PTR [rax+0x18]
   1400015b0:	mov    rbx,QWORD PTR [rcx]
   1400015b3:	test   rbx,rbx
   1400015b6:	jne    0x1400015cf
   1400015b8:	mov    rcx,QWORD PTR [rsp+0x58]
   1400015bd:	test   rcx,rcx
   1400015c0:	je     0x14000160a
   1400015c2:	call   QWORD PTR [rip+0x4b68]        # 0x140006130
   1400015c8:	and    QWORD PTR [rsp+0x58],rbx
   1400015cd:	jmp    0x14000160a
   1400015cf:	and    QWORD PTR [rcx],0x0
   1400015d3:	mov    rcx,QWORD PTR [rsp+0x58]
   1400015d8:	test   rcx,rcx
   1400015db:	je     0x1400015e9
   1400015dd:	call   QWORD PTR [rip+0x4b4d]        # 0x140006130
   1400015e3:	and    QWORD PTR [rsp+0x58],0x0
   1400015e9:	mov    rcx,rbx
   1400015ec:	call   QWORD PTR [rip+0x4b66]        # 0x140006158
   1400015f2:	mov    rdi,rax
   1400015f5:	mov    rcx,QWORD PTR [rax]
   1400015f8:	mov    rbx,QWORD PTR [rcx+0x10]
   1400015fc:	mov    rcx,rbx
   1400015ff:	call   QWORD PTR [rip+0x4d43]        # 0x140006348
   140001605:	mov    rcx,rdi
   140001608:	call   rbx
   14000160a:	add    rsi,0x8
   14000160e:	jmp    0x140001556
   140001613:	xor    al,al
   140001615:	jmp    0x14000162f
   140001617:	mov    rax,QWORD PTR [r14]
   14000161a:	cmp    QWORD PTR [rax+0x18],r12
   14000161e:	jne    0x140001628
   140001620:	mov    eax,DWORD PTR [rip+0x9fba]        # 0x14000b5e0
   140001626:	jmp    0x14000162a
   140001628:	xor    eax,eax
   14000162a:	test   eax,eax
   14000162c:	sete   al
   14000162f:	mov    rbx,QWORD PTR [rsp+0x50]
   140001634:	mov    rbp,QWORD PTR [rsp+0x60]
   140001639:	add    rsp,0x20
   14000163d:	pop    r14
   14000163f:	pop    r13
   140001641:	pop    r12
   140001643:	pop    rdi
   140001644:	pop    rsi
   140001645:	ret    
   140001646:	int3   
   140001647:	int3   
   140001648:	int3   
   140001649:	int3   
   14000164a:	int3   
   14000164b:	int3   
   14000164c:	int3   
   14000164d:	int3   
   14000164e:	int3   
   14000164f:	int3   
   140001650:	rex push rbx
   140001652:	sub    rsp,0x20
   140001656:	lea    rax,[rip+0x546b]        # 0x140006ac8
   14000165d:	mov    rbx,rcx
   140001660:	mov    QWORD PTR [rcx],rax
   140001663:	test   dl,0x1
   140001666:	je     0x14000166d
   140001668:	call   0x1400045c4
   14000166d:	mov    rax,rbx
   140001670:	add    rsp,0x20
   140001674:	pop    rbx
   140001675:	ret    
   140001676:	int3   
   140001677:	int3   
   140001678:	int3   
   140001679:	int3   
   14000167a:	int3   
   14000167b:	int3   
   14000167c:	int3   
   14000167d:	int3   
   14000167e:	int3   
   14000167f:	int3   
   140001680:	mov    DWORD PTR [rdx],r8d
   140001683:	mov    rax,rdx
   140001686:	mov    QWORD PTR [rdx+0x8],rcx
   14000168a:	ret    
   14000168b:	int3   
   14000168c:	int3   
   14000168d:	int3   
   14000168e:	int3   
   14000168f:	int3   
   140001690:	int3   
   140001691:	int3   
   140001692:	int3   
   140001693:	int3   
   140001694:	int3   
   140001695:	int3   
   140001696:	int3   
   140001697:	int3   
   140001698:	int3   
   140001699:	int3   
   14000169a:	int3   
   14000169b:	int3   
   14000169c:	int3   
   14000169d:	int3   
   14000169e:	int3   
   14000169f:	int3   
   1400016a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400016a5:	mov    QWORD PTR [rsp+0x10],rsi
   1400016aa:	mov    QWORD PTR [rsp+0x18],rdi
   1400016af:	push   r14
   1400016b1:	sub    rsp,0x30
   1400016b5:	mov    rax,QWORD PTR [rcx]
   1400016b8:	mov    rsi,rcx
   1400016bb:	mov    r14,r8
   1400016be:	mov    edi,edx
   1400016c0:	mov    rbx,QWORD PTR [rax+0x18]
   1400016c4:	mov    rcx,rbx
   1400016c7:	call   QWORD PTR [rip+0x4c7b]        # 0x140006348
   1400016cd:	mov    r8d,edi
   1400016d0:	lea    rdx,[rsp+0x20]
   1400016d5:	mov    rcx,rsi
   1400016d8:	call   rbx
   1400016da:	mov    rcx,QWORD PTR [r14+0x8]
   1400016de:	cmp    QWORD PTR [rax+0x8],rcx
   1400016e2:	jne    0x1400016f2
   1400016e4:	mov    ecx,DWORD PTR [r14]
   1400016e7:	cmp    DWORD PTR [rax],ecx
   1400016e9:	jne    0x1400016f2
   1400016eb:	mov    eax,0x1
   1400016f0:	jmp    0x1400016f4
   1400016f2:	xor    eax,eax
   1400016f4:	mov    rbx,QWORD PTR [rsp+0x40]
   1400016f9:	mov    rsi,QWORD PTR [rsp+0x48]
   1400016fe:	mov    rdi,QWORD PTR [rsp+0x50]
   140001703:	add    rsp,0x30
   140001707:	pop    r14
   140001709:	ret    
   14000170a:	int3   
   14000170b:	int3   
   14000170c:	int3   
   14000170d:	int3   
   14000170e:	int3   
   14000170f:	int3   
   140001710:	cmp    rcx,QWORD PTR [rdx+0x8]
   140001714:	jne    0x140001721
   140001716:	cmp    DWORD PTR [rdx],r8d
   140001719:	jne    0x140001721
   14000171b:	mov    eax,0x1
   140001720:	ret    
   140001721:	xor    eax,eax
   140001723:	ret    
   140001724:	int3   
   140001725:	int3   
   140001726:	int3   
   140001727:	int3   
   140001728:	int3   
   140001729:	int3   
   14000172a:	int3   
   14000172b:	int3   
   14000172c:	int3   
   14000172d:	int3   
   14000172e:	int3   
   14000172f:	int3   
   140001730:	lea    rax,[rip+0x4f11]        # 0x140006648
   140001737:	ret    
   140001738:	int3   
   140001739:	int3   
   14000173a:	int3   
   14000173b:	int3   
   14000173c:	int3   
   14000173d:	int3   
   14000173e:	int3   
   14000173f:	int3   
   140001740:	rex push rbx
   140001742:	sub    rsp,0x30
   140001746:	and    DWORD PTR [rsp+0x20],0x0
   14000174b:	mov    ecx,r8d
   14000174e:	mov    rbx,rdx
   140001751:	call   QWORD PTR [rip+0x4bb1]        # 0x140006308
   140001757:	lea    rdx,[rip+0x4ef2]        # 0x140006650
   14000175e:	mov    rcx,rbx
   140001761:	test   rax,rax
   140001764:	cmovne rdx,rax
   140001768:	call   0x140001cc0
   14000176d:	mov    rax,rbx
   140001770:	add    rsp,0x30
   140001774:	pop    rbx
   140001775:	ret    
   140001776:	int3   
   140001777:	int3   
   140001778:	int3   
   140001779:	int3   
   14000177a:	int3   
   14000177b:	int3   
   14000177c:	int3   
   14000177d:	int3   
   14000177e:	int3   
   14000177f:	int3   
   140001780:	lea    rax,[rip+0x4ed9]        # 0x140006660
   140001787:	ret    
   140001788:	int3   
   140001789:	int3   
   14000178a:	int3   
   14000178b:	int3   
   14000178c:	int3   
   14000178d:	int3   
   14000178e:	int3   
   14000178f:	int3   
   140001790:	rex push rbx
   140001792:	sub    rsp,0x30
   140001796:	and    DWORD PTR [rsp+0x20],0x0
   14000179b:	mov    rbx,rdx
   14000179e:	cmp    r8d,0x1
   1400017a2:	jne    0x1400017b5
   1400017a4:	lea    rdx,[rip+0x4ec5]        # 0x140006670
   1400017ab:	mov    rcx,rbx
   1400017ae:	call   0x140001cc0
   1400017b3:	jmp    0x1400017ba
   1400017b5:	call   0x140001740
   1400017ba:	mov    rax,rbx
   1400017bd:	add    rsp,0x30
   1400017c1:	pop    rbx
   1400017c2:	ret    
   1400017c3:	int3   
   1400017c4:	int3   
   1400017c5:	int3   
   1400017c6:	int3   
   1400017c7:	int3   
   1400017c8:	int3   
   1400017c9:	int3   
   1400017ca:	int3   
   1400017cb:	int3   
   1400017cc:	int3   
   1400017cd:	int3   
   1400017ce:	int3   
   1400017cf:	int3   
   1400017d0:	lea    rax,[rip+0x4eb1]        # 0x140006688
   1400017d7:	ret    
   1400017d8:	int3   
   1400017d9:	int3   
   1400017da:	int3   
   1400017db:	int3   
   1400017dc:	int3   
   1400017dd:	int3   
   1400017de:	int3   
   1400017df:	int3   
   1400017e0:	rex push rbx
   1400017e2:	sub    rsp,0x30
   1400017e6:	and    DWORD PTR [rsp+0x20],0x0
   1400017eb:	mov    ecx,r8d
   1400017ee:	mov    rbx,rdx
   1400017f1:	call   QWORD PTR [rip+0x4b09]        # 0x140006300
   1400017f7:	lea    rdx,[rip+0x4e52]        # 0x140006650
   1400017fe:	mov    rcx,rbx
   140001801:	test   rax,rax
   140001804:	cmovne rdx,rax
   140001808:	call   0x140001cc0
   14000180d:	mov    rax,rbx
   140001810:	add    rsp,0x30
   140001814:	pop    rbx
   140001815:	ret    
   140001816:	int3   
   140001817:	int3   
   140001818:	int3   
   140001819:	int3   
   14000181a:	int3   
   14000181b:	int3   
   14000181c:	int3   
   14000181d:	int3   
   14000181e:	int3   
   14000181f:	int3   
   140001820:	mov    QWORD PTR [rsp+0x8],rbx
   140001825:	push   rdi
   140001826:	sub    rsp,0x20
   14000182a:	mov    ecx,r8d
   14000182d:	mov    edi,r8d
   140001830:	mov    rbx,rdx
   140001833:	call   QWORD PTR [rip+0x4acf]        # 0x140006308
   140001839:	test   rax,rax
   14000183c:	mov    DWORD PTR [rbx],edi
   14000183e:	lea    rax,[rip+0x8833]        # 0x14000a078
   140001845:	jne    0x14000184e
   140001847:	lea    rax,[rip+0x8812]        # 0x14000a060
   14000184e:	mov    QWORD PTR [rbx+0x8],rax
   140001852:	mov    rax,rbx
   140001855:	mov    rbx,QWORD PTR [rsp+0x30]
   14000185a:	add    rsp,0x20
   14000185e:	pop    rdi
   14000185f:	ret    
   140001860:	int3   
   140001861:	int3   
   140001862:	int3   
   140001863:	int3   
   140001864:	int3   
   140001865:	int3   
   140001866:	int3   
   140001867:	int3   
   140001868:	int3   
   140001869:	int3   
   14000186a:	int3   
   14000186b:	int3   
   14000186c:	int3   
   14000186d:	int3   
   14000186e:	int3   
   14000186f:	int3   
   140001870:	xchg   ax,ax
   140001872:	ret    
   140001873:	int3   
   140001874:	int3   
   140001875:	int3   
   140001876:	int3   
   140001877:	int3   
   140001878:	int3   
   140001879:	int3   
   14000187a:	int3   
   14000187b:	int3   
   14000187c:	int3   
   14000187d:	int3   
   14000187e:	int3   
   14000187f:	int3   
   140001880:	mov    eax,DWORD PTR [rsp+0x30]
   140001884:	mov    r10,r9
   140001887:	mov    r9,QWORD PTR [rsp+0x28]
   14000188c:	mov    rdx,r8
   14000188f:	mov    r8,r10
   140001892:	mov    DWORD PTR [rsp+0x28],eax
   140001896:	jmp    0x1400025c8
   14000189b:	int3   
   14000189c:	int3   
   14000189d:	int3   
   14000189e:	int3   
   14000189f:	int3   
   1400018a0:	int3   
   1400018a1:	int3   
   1400018a2:	int3   
   1400018a3:	int3   
   1400018a4:	mov    QWORD PTR [rsp+0x8],rbx
   1400018a9:	mov    QWORD PTR [rsp+0x10],rdi
   1400018ae:	push   rbp
   1400018af:	mov    rbp,rsp
   1400018b2:	sub    rsp,0x80
   1400018b9:	mov    rax,QWORD PTR [rip+0x8748]        # 0x14000a008
   1400018c0:	xor    rax,rsp
   1400018c3:	mov    QWORD PTR [rbp-0x8],rax
   1400018c7:	mov    rax,QWORD PTR [rip+0x875a]        # 0x14000a028
   1400018ce:	lea    r9,[rip+0x876b]        # 0x14000a040
   1400018d5:	xor    ebx,ebx
   1400018d7:	lea    r8,[rip+0x8742]        # 0x14000a020
   1400018de:	lea    rdx,[rip+0xfffffffffffff72b]        # 0x140001010
   1400018e5:	lea    rcx,[rbp-0x18]
   1400018e9:	movups xmm0,XMMWORD PTR [rax-0x10]
   1400018ed:	mov    QWORD PTR [rip+0x8754],rbx        # 0x14000a048
   1400018f4:	mov    QWORD PTR [rip+0x8755],rbx        # 0x14000a050
   1400018fb:	movdqu XMMWORD PTR [rbp-0x18],xmm0
   140001900:	call   QWORD PTR [rip+0x49c2]        # 0x1400062c8
   140001906:	lea    edi,[rbx+0x2]
   140001909:	test   eax,eax
   14000190b:	jne    0x140001927
   14000190d:	mov    r8,QWORD PTR [rip+0x8714]        # 0x14000a028
   140001914:	mov    edx,edi
   140001916:	mov    rcx,QWORD PTR [rip+0x8723]        # 0x14000a040
   14000191d:	movzx  r9d,WORD PTR [r8]
   140001921:	call   QWORD PTR [rip+0x4991]        # 0x1400062b8
   140001927:	xor    edx,edx
   140001929:	xor    ecx,ecx
   14000192b:	call   QWORD PTR [rip+0x46d7]        # 0x140006008
   140001931:	test   eax,eax
   140001933:	js     0x140001a60
   140001939:	mov    QWORD PTR [rsp+0x40],rbx
   14000193e:	xor    r9d,r9d
   140001941:	mov    DWORD PTR [rsp+0x38],ebx
   140001945:	xor    r8d,r8d
   140001948:	mov    QWORD PTR [rsp+0x30],rbx
   14000194d:	or     edx,0xffffffff
   140001950:	mov    DWORD PTR [rsp+0x28],edi
   140001954:	xor    ecx,ecx
   140001956:	mov    DWORD PTR [rsp+0x20],edi
   14000195a:	call   QWORD PTR [rip+0x46d8]        # 0x140006038
   140001960:	test   eax,eax
   140001962:	js     0x140001a5a
   140001968:	xor    r9d,r9d
   14000196b:	xor    r8d,r8d
   14000196e:	xor    ecx,ecx
   140001970:	lea    edx,[r9+0x1]
   140001974:	call   QWORD PTR [rip+0x47a6]        # 0x140006120
   14000197a:	mov    QWORD PTR [rbp-0x28],rax
   14000197e:	lea    rdi,[rip+0x9c63]        # 0x14000b5e8
   140001985:	lea    rax,[rip+0x4e1c]        # 0x1400067a8
   14000198c:	mov    QWORD PTR [rbp-0x30],rax
   140001990:	mov    eax,DWORD PTR [rip+0x9c4e]        # 0x14000b5e4
   140001996:	test   al,0x1
   140001998:	jne    0x1400019cb
   14000199a:	or     eax,0x1
   14000199d:	mov    QWORD PTR [rip+0x9c34],rdi        # 0x14000b5d8
   1400019a4:	mov    DWORD PTR [rip+0x9c3a],eax        # 0x14000b5e4
   1400019aa:	lea    rcx,[rip+0x3a3f]        # 0x1400053f0
   1400019b1:	lea    rax,[rip+0x4fb0]        # 0x140006968
   1400019b8:	mov    QWORD PTR [rip+0x9c31],rbx        # 0x14000b5f0
   1400019bf:	mov    QWORD PTR [rip+0x9c22],rax        # 0x14000b5e8
   1400019c6:	call   0x140004598
   1400019cb:	cmp    QWORD PTR [rip+0x9c1e],rbx        # 0x14000b5f0
   1400019d2:	jne    0x140001a01
   1400019d4:	lea    rax,[rip+0x5025]        # 0x140006a00
   1400019db:	mov    BYTE PTR [rip+0x9c77],bl        # 0x14000b658
   1400019e1:	mov    QWORD PTR [rip+0x9c68],rax        # 0x14000b650
   1400019e8:	lea    rax,[rbp-0x30]
   1400019ec:	mov    QWORD PTR [rip+0x9c6d],rax        # 0x14000b660
   1400019f3:	lea    rax,[rip+0x9c56]        # 0x14000b650
   1400019fa:	mov    QWORD PTR [rip+0x9bef],rax        # 0x14000b5f0
   140001a01:	mov    rcx,rdi
   140001a04:	call   0x140002904
   140001a09:	test   eax,eax
   140001a0b:	js     0x140001a3c
   140001a0d:	lea    rdx,[rbp-0x20]
   140001a11:	mov    QWORD PTR [rbp-0x20],rdi
   140001a15:	lea    rcx,[rbp-0x18]
   140001a19:	call   0x140002678
   140001a1e:	mov    rcx,QWORD PTR [rbp-0x28]
   140001a22:	or     edx,0xffffffff
   140001a25:	call   QWORD PTR [rip+0x46ed]        # 0x140006118
   140001a2b:	cmp    BYTE PTR [rbp-0x10],bl
   140001a2e:	je     0x140001a3c
   140001a30:	lea    rcx,[rbp-0x18]
   140001a34:	mov    BYTE PTR [rbp-0x10],bl
   140001a37:	call   0x140001ac0
   140001a3c:	mov    rcx,QWORD PTR [rbp-0x28]
   140001a40:	lea    rax,[rip+0x5001]        # 0x140006a48
   140001a47:	mov    QWORD PTR [rbp-0x30],rax
   140001a4b:	test   rcx,rcx
   140001a4e:	je     0x140001a5a
   140001a50:	call   QWORD PTR [rip+0x4632]        # 0x140006088
   140001a56:	test   eax,eax
   140001a58:	je     0x140001a9d
   140001a5a:	call   QWORD PTR [rip+0x45b0]        # 0x140006010
   140001a60:	mov    rcx,QWORD PTR [rip+0x85d9]        # 0x14000a040
   140001a67:	call   QWORD PTR [rip+0x4843]        # 0x1400062b0
   140001a6d:	xor    eax,eax
   140001a6f:	mov    QWORD PTR [rip+0x85ca],rbx        # 0x14000a040
   140001a76:	mov    DWORD PTR [rip+0x85a4],ebx        # 0x14000a020
   140001a7c:	mov    rcx,QWORD PTR [rbp-0x8]
   140001a80:	xor    rcx,rsp
   140001a83:	call   0x140004400
   140001a88:	lea    r11,[rsp+0x80]
   140001a90:	mov    rbx,QWORD PTR [r11+0x10]
   140001a94:	mov    rdi,QWORD PTR [r11+0x18]
   140001a98:	mov    rsp,r11
   140001a9b:	pop    rbp
   140001a9c:	ret    
   140001a9d:	call   QWORD PTR [rip+0x45bd]        # 0x140006060
   140001aa3:	movzx  ecx,ax
   140001aa6:	or     ecx,0x80070000
   140001aac:	test   eax,eax
   140001aae:	cmovle ecx,eax
   140001ab1:	call   0x140001480
   140001ab6:	int3   
   140001ab7:	int3   
   140001ab8:	int3   
   140001ab9:	int3   
   140001aba:	int3   
   140001abb:	int3   
   140001abc:	int3   
   140001abd:	int3   
   140001abe:	int3   
   140001abf:	int3   
   140001ac0:	mov    rax,rsp
   140001ac3:	mov    QWORD PTR [rax+0x8],rbx
   140001ac7:	mov    QWORD PTR [rax+0x10],rbp
   140001acb:	mov    QWORD PTR [rax+0x18],rsi
   140001acf:	mov    QWORD PTR [rax+0x20],rdi
   140001ad3:	push   r12
   140001ad5:	push   r14
   140001ad7:	push   r15
   140001ad9:	sub    rsp,0x20
   140001add:	mov    r15,QWORD PTR [rcx]
   140001ae0:	lea    rsi,[rip+0x7289]        # 0x140008d70
   140001ae7:	xor    r12d,r12d
   140001aea:	lea    rax,[rip+0x728f]        # 0x140008d80
   140001af1:	lea    rdi,[rip+0x728f]        # 0x140008d87
   140001af8:	mov    ebp,r12d
   140001afb:	sub    rdi,rsi
   140001afe:	mov    ecx,r12d
   140001b01:	shr    rdi,0x3
   140001b05:	cmp    rsi,rax
   140001b08:	mov    rax,rsi
   140001b0b:	cmova  rdi,r12
   140001b0f:	test   rdi,rdi
   140001b12:	je     0x140001bf7
   140001b18:	cmp    QWORD PTR [rax],r12
   140001b1b:	je     0x140001b1f
   140001b1d:	inc    ebp
   140001b1f:	add    rax,0x8
   140001b23:	inc    rcx
   140001b26:	cmp    rcx,rdi
   140001b29:	jb     0x140001b18
   140001b2b:	test   ebp,ebp
   140001b2d:	je     0x140001bf7
   140001b33:	mov    ecx,ebp
   140001b35:	mov    eax,0x4
   140001b3a:	mul    rcx
   140001b3d:	mov    rcx,0xffffffffffffffff
   140001b44:	lea    rdx,[rip+0x4fe5]        # 0x140006b30
   140001b4b:	cmovo  rax,rcx
   140001b4f:	mov    rcx,rax
   140001b52:	call   0x140004428
   140001b57:	mov    r14,rax
   140001b5a:	test   rax,rax
   140001b5d:	jne    0x140001b69
   140001b5f:	mov    ebx,0x8007000e
   140001b64:	jmp    0x140001beb
   140001b69:	mov    r9d,r12d
   140001b6c:	mov    r8,r12
   140001b6f:	mov    rdx,rsi
   140001b72:	test   rdi,rdi
   140001b75:	je     0x140001b9c
   140001b77:	mov    rax,QWORD PTR [rdx]
   140001b7a:	test   rax,rax
   140001b7d:	je     0x140001b90
   140001b7f:	mov    rax,QWORD PTR [rax+0x18]
   140001b83:	mov    ecx,r9d
   140001b86:	inc    r9d
   140001b89:	mov    eax,DWORD PTR [rax+0x8]
   140001b8c:	mov    DWORD PTR [r14+rcx*4],eax
   140001b90:	add    rdx,0x8
   140001b94:	inc    r8
   140001b97:	cmp    r8,rdi
   140001b9a:	jb     0x140001b77
   140001b9c:	mov    rax,QWORD PTR [r15]
   140001b9f:	mov    rbx,QWORD PTR [rax+0x58]
   140001ba3:	mov    rcx,rbx
   140001ba6:	call   QWORD PTR [rip+0x479c]        # 0x140006348
   140001bac:	mov    r9d,ebp
   140001baf:	mov    r8,r14
   140001bb2:	xor    edx,edx
   140001bb4:	mov    rcx,r15
   140001bb7:	call   rbx
   140001bb9:	mov    ebx,eax
   140001bbb:	mov    r9d,r12d
   140001bbe:	mov    r8,r12
   140001bc1:	test   rdi,rdi
   140001bc4:	je     0x140001beb
   140001bc6:	mov    rdx,QWORD PTR [rsi]
   140001bc9:	test   rdx,rdx
   140001bcc:	je     0x140001bdf
   140001bce:	mov    rdx,QWORD PTR [rdx+0x18]
   140001bd2:	mov    ecx,r9d
   140001bd5:	inc    r9d
   140001bd8:	mov    eax,DWORD PTR [r14+rcx*4]
   140001bdc:	mov    DWORD PTR [rdx+0x8],eax
   140001bdf:	add    rsi,0x8
   140001be3:	inc    r8
   140001be6:	cmp    r8,rdi
   140001be9:	jb     0x140001bc6
   140001beb:	mov    rcx,r14
   140001bee:	call   0x1400045b8
   140001bf3:	test   ebx,ebx
   140001bf5:	js     0x140001c6c
   140001bf7:	lea    rcx,[rip+0x718a]        # 0x140008d88
   140001bfe:	lea    rdx,[rip+0x7183]        # 0x140008d88
   140001c05:	mov    rax,rcx
   140001c08:	cmp    rcx,rdx
   140001c0b:	jae    0x140001c6c
   140001c0d:	cmp    QWORD PTR [rax],r12
   140001c10:	jne    0x140001c1b
   140001c12:	add    rax,0x8
   140001c16:	cmp    rax,rdx
   140001c19:	jmp    0x140001c0b
   140001c1b:	mov    rax,QWORD PTR [r15]
   140001c1e:	lea    rdx,[rip+0x47b]        # 0x1400020a0
   140001c25:	cmp    QWORD PTR [rax+0x48],rdx
   140001c29:	je     0x140001c3a
   140001c2b:	xor    edx,edx
   140001c2d:	mov    ecx,0x80004001
   140001c32:	call   QWORD PTR [rip+0x4530]        # 0x140006168
   140001c38:	jmp    0x140001c6c
   140001c3a:	lea    rdx,[rip+0x714e]        # 0x140008d8f
   140001c41:	mov    r8,r12
   140001c44:	sub    rdx,rcx
   140001c47:	shr    rdx,0x3
   140001c4b:	test   rdx,rdx
   140001c4e:	je     0x140001c6c
   140001c50:	mov    rax,QWORD PTR [rcx]
   140001c53:	test   rax,rax
   140001c56:	je     0x140001c60
   140001c58:	mov    rax,QWORD PTR [rax+0x18]
   140001c5c:	mov    QWORD PTR [rax+0x8],r12
   140001c60:	add    rcx,0x8
   140001c64:	inc    r8
   140001c67:	cmp    r8,rdx
   140001c6a:	jb     0x140001c50
   140001c6c:	xor    r8d,r8d
   140001c6f:	mov    rcx,r15
   140001c72:	mov    rbx,QWORD PTR [rsp+0x40]
   140001c77:	mov    rbp,QWORD PTR [rsp+0x48]
   140001c7c:	mov    rsi,QWORD PTR [rsp+0x50]
   140001c81:	mov    rdi,QWORD PTR [rsp+0x58]
   140001c86:	add    rsp,0x20
   140001c8a:	pop    r15
   140001c8c:	pop    r14
   140001c8e:	pop    r12
   140001c90:	jmp    0x140001520
   140001c95:	int3   
   140001c96:	int3   
   140001c97:	int3   
   140001c98:	int3   
   140001c99:	int3   
   140001c9a:	int3   
   140001c9b:	int3   
   140001c9c:	int3   
   140001c9d:	int3   
   140001c9e:	int3   
   140001c9f:	int3   
   140001ca0:	sub    rsp,0x28
   140001ca4:	mov    rcx,QWORD PTR [rcx+0x8]
   140001ca8:	call   QWORD PTR [rip+0x43da]        # 0x140006088
   140001cae:	test   eax,eax
   140001cb0:	setne  al
   140001cb3:	add    rsp,0x28
   140001cb7:	ret    
   140001cb8:	int3   
   140001cb9:	int3   
   140001cba:	int3   
   140001cbb:	int3   
   140001cbc:	int3   
   140001cbd:	int3   
   140001cbe:	int3   
   140001cbf:	int3   
   140001cc0:	mov    QWORD PTR [rsp+0x8],rbx
   140001cc5:	mov    QWORD PTR [rsp+0x10],rsi
   140001cca:	push   rdi
   140001ccb:	sub    rsp,0x20
   140001ccf:	and    QWORD PTR [rcx+0x10],0x0
   140001cd4:	mov    rsi,rdx
   140001cd7:	mov    QWORD PTR [rcx+0x18],0xf
   140001cdf:	mov    rbx,rcx
   140001ce2:	mov    BYTE PTR [rcx],0x0
   140001ce5:	cmp    BYTE PTR [rdx],0x0
   140001ce8:	jne    0x140001cee
   140001cea:	xor    edi,edi
   140001cec:	jmp    0x140001cfb
   140001cee:	or     rdi,0xffffffffffffffff
   140001cf2:	inc    rdi
   140001cf5:	cmp    BYTE PTR [rdx+rdi*1],0x0
   140001cf9:	jne    0x140001cf2
   140001cfb:	mov    rdx,QWORD PTR [rcx+0x18]
   140001cff:	cmp    rdx,0x10
   140001d03:	jb     0x140001d0a
   140001d05:	mov    rax,QWORD PTR [rcx]
   140001d08:	jmp    0x140001d0d
   140001d0a:	mov    rax,rcx
   140001d0d:	cmp    rsi,rax
   140001d10:	jb     0x140001d48
   140001d12:	cmp    rdx,0x10
   140001d16:	jb     0x140001d1b
   140001d18:	mov    rcx,QWORD PTR [rcx]
   140001d1b:	add    rcx,QWORD PTR [rbx+0x10]
   140001d1f:	cmp    rcx,rsi
   140001d22:	jbe    0x140001d48
   140001d24:	cmp    rdx,0x10
   140001d28:	jb     0x140001d2f
   140001d2a:	mov    rax,QWORD PTR [rbx]
   140001d2d:	jmp    0x140001d32
   140001d2f:	mov    rax,rbx
   140001d32:	sub    rsi,rax
   140001d35:	mov    r9,rdi
   140001d38:	mov    r8,rsi
   140001d3b:	mov    rdx,rbx
   140001d3e:	mov    rcx,rbx
   140001d41:	call   0x1400022a4
   140001d46:	jmp    0x140001db9
   140001d48:	cmp    rdi,0xfffffffffffffffe
   140001d4c:	ja     0x140001dcc
   140001d4e:	cmp    rdx,rdi
   140001d51:	jae    0x140001d64
   140001d53:	mov    r8,QWORD PTR [rbx+0x10]
   140001d57:	mov    rdx,rdi
   140001d5a:	mov    rcx,rbx
   140001d5d:	call   0x1400024bc
   140001d62:	jmp    0x140001d7e
   140001d64:	test   rdi,rdi
   140001d67:	jne    0x140001d83
   140001d69:	and    QWORD PTR [rbx+0x10],rdi
   140001d6d:	cmp    rdx,0x10
   140001d71:	jb     0x140001d78
   140001d73:	mov    rax,QWORD PTR [rbx]
   140001d76:	jmp    0x140001d7b
   140001d78:	mov    rax,rbx
   140001d7b:	mov    BYTE PTR [rax],0x0
   140001d7e:	test   rdi,rdi
   140001d81:	je     0x140001db9
   140001d83:	cmp    QWORD PTR [rbx+0x18],0x10
   140001d88:	jb     0x140001d8f
   140001d8a:	mov    rcx,QWORD PTR [rbx]
   140001d8d:	jmp    0x140001d92
   140001d8f:	mov    rcx,rbx
   140001d92:	test   rdi,rdi
   140001d95:	je     0x140001da2
   140001d97:	mov    r8,rdi
   140001d9a:	mov    rdx,rsi
   140001d9d:	call   0x1400051aa
   140001da2:	cmp    QWORD PTR [rbx+0x18],0x10
   140001da7:	mov    QWORD PTR [rbx+0x10],rdi
   140001dab:	jb     0x140001db2
   140001dad:	mov    rax,QWORD PTR [rbx]
   140001db0:	jmp    0x140001db5
   140001db2:	mov    rax,rbx
   140001db5:	mov    BYTE PTR [rax+rdi*1],0x0
   140001db9:	mov    rsi,QWORD PTR [rsp+0x38]
   140001dbe:	mov    rax,rbx
   140001dc1:	mov    rbx,QWORD PTR [rsp+0x30]
   140001dc6:	add    rsp,0x20
   140001dca:	pop    rdi
   140001dcb:	ret    
   140001dcc:	call   0x14000248c
   140001dd1:	int3   
   140001dd2:	int3   
   140001dd3:	int3   
   140001dd4:	int3   
   140001dd5:	int3   
   140001dd6:	int3   
   140001dd7:	int3   
   140001dd8:	int3   
   140001dd9:	int3   
   140001dda:	int3   
   140001ddb:	int3   
   140001ddc:	int3   
   140001ddd:	int3   
   140001dde:	int3   
   140001ddf:	int3   
   140001de0:	mov    QWORD PTR [rsp+0x8],rbx
   140001de5:	mov    QWORD PTR [rsp+0x10],rsi
   140001dea:	push   rdi
   140001deb:	sub    rsp,0x20
   140001def:	xor    edi,edi
   140001df1:	mov    rsi,rcx
   140001df4:	mov    QWORD PTR [r8],rdi
   140001df7:	cmp    DWORD PTR [rdx],edi
   140001df9:	jne    0x140001e1c
   140001dfb:	mov    eax,DWORD PTR [rip+0x48bb]        # 0x1400066bc
   140001e01:	cmp    DWORD PTR [rdx+0x4],eax
   140001e04:	jne    0x140001e1c
   140001e06:	mov    eax,DWORD PTR [rip+0x48b4]        # 0x1400066c0
   140001e0c:	cmp    DWORD PTR [rdx+0x8],eax
   140001e0f:	jne    0x140001e1c
   140001e11:	mov    eax,DWORD PTR [rip+0x48ad]        # 0x1400066c4
   140001e17:	cmp    DWORD PTR [rdx+0xc],eax
   140001e1a:	je     0x140001e45
   140001e1c:	cmp    DWORD PTR [rdx],0x2c41527a
   140001e22:	jne    0x140001e5f
   140001e24:	mov    eax,DWORD PTR [rip+0x4af2]        # 0x14000691c
   140001e2a:	cmp    DWORD PTR [rdx+0x4],eax
   140001e2d:	jne    0x140001e5f
   140001e2f:	mov    eax,DWORD PTR [rip+0x4aeb]        # 0x140006920
   140001e35:	cmp    DWORD PTR [rdx+0x8],eax
   140001e38:	jne    0x140001e5f
   140001e3a:	mov    eax,DWORD PTR [rip+0x4ae4]        # 0x140006924
   140001e40:	cmp    DWORD PTR [rdx+0xc],eax
   140001e43:	jne    0x140001e5f
   140001e45:	mov    QWORD PTR [r8],rcx
   140001e48:	mov    rax,QWORD PTR [rcx]
   140001e4b:	mov    rbx,QWORD PTR [rax+0x8]
   140001e4f:	mov    rcx,rbx
   140001e52:	call   QWORD PTR [rip+0x44f0]        # 0x140006348
   140001e58:	mov    rcx,rsi
   140001e5b:	call   rbx
   140001e5d:	jmp    0x140001e64
   140001e5f:	mov    edi,0x80004002
   140001e64:	mov    rbx,QWORD PTR [rsp+0x30]
   140001e69:	mov    eax,edi
   140001e6b:	mov    rsi,QWORD PTR [rsp+0x38]
   140001e70:	add    rsp,0x20
   140001e74:	pop    rdi
   140001e75:	ret    
   140001e76:	int3   
   140001e77:	int3   
   140001e78:	int3   
   140001e79:	int3   
   140001e7a:	int3   
   140001e7b:	int3   
   140001e7c:	int3   
   140001e7d:	int3   
   140001e7e:	int3   
   140001e7f:	int3   
   140001e80:	mov    eax,0x1
   140001e85:	lock xadd DWORD PTR [rcx+0xc],eax
   140001e8a:	inc    eax
   140001e8c:	ret    
   140001e8d:	int3   
   140001e8e:	int3   
   140001e8f:	int3   
   140001e90:	int3   
   140001e91:	int3   
   140001e92:	int3   
   140001e93:	int3   
   140001e94:	int3   
   140001e95:	int3   
   140001e96:	int3   
   140001e97:	int3   
   140001e98:	int3   
   140001e99:	int3   
   140001e9a:	int3   
   140001e9b:	int3   
   140001e9c:	int3   
   140001e9d:	int3   
   140001e9e:	int3   
   140001e9f:	int3   
   140001ea0:	mov    QWORD PTR [rsp+0x8],rbx
   140001ea5:	mov    QWORD PTR [rsp+0x10],rsi
   140001eaa:	push   rdi
   140001eab:	sub    rsp,0x20
   140001eaf:	mov    rsi,rcx
   140001eb2:	or     edi,0xffffffff
   140001eb5:	lock xadd DWORD PTR [rcx+0xc],edi
   140001eba:	sub    edi,0x1
   140001ebd:	jne    0x140001efd
   140001ebf:	test   rcx,rcx
   140001ec2:	je     0x140001edc
   140001ec4:	mov    rax,QWORD PTR [rcx]
   140001ec7:	mov    rbx,QWORD PTR [rax+0x20]
   140001ecb:	mov    rcx,rbx
   140001ece:	call   QWORD PTR [rip+0x4474]        # 0x140006348
   140001ed4:	lea    edx,[rdi+0x1]
   140001ed7:	mov    rcx,rsi
   140001eda:	call   rbx
   140001edc:	mov    rsi,QWORD PTR [rip+0x96f5]        # 0x14000b5d8
   140001ee3:	test   rsi,rsi
   140001ee6:	je     0x140001efd
   140001ee8:	mov    rdx,QWORD PTR [rsi]
   140001eeb:	mov    rbx,QWORD PTR [rdx+0x10]
   140001eef:	mov    rcx,rbx
   140001ef2:	call   QWORD PTR [rip+0x4450]        # 0x140006348
   140001ef8:	mov    rcx,rsi
   140001efb:	call   rbx
   140001efd:	mov    rbx,QWORD PTR [rsp+0x30]
   140001f02:	mov    eax,edi
   140001f04:	mov    rsi,QWORD PTR [rsp+0x38]
   140001f09:	add    rsp,0x20
   140001f0d:	pop    rdi
   140001f0e:	ret    
   140001f0f:	int3   
   140001f10:	int3   
   140001f11:	int3   
   140001f12:	int3   
   140001f13:	int3   
   140001f14:	int3   
   140001f15:	int3   
   140001f16:	int3   
   140001f17:	int3   
   140001f18:	int3   
   140001f19:	int3   
   140001f1a:	int3   
   140001f1b:	int3   
   140001f1c:	int3   
   140001f1d:	int3   
   140001f1e:	int3   
   140001f1f:	int3   
   140001f20:	mov    QWORD PTR [rsp+0x8],rbx
   140001f25:	mov    QWORD PTR [rsp+0x10],rsi
   140001f2a:	push   rdi
   140001f2b:	sub    rsp,0x20
   140001f2f:	xor    edi,edi
   140001f31:	mov    rsi,rcx
   140001f34:	mov    QWORD PTR [r8],rdi
   140001f37:	cmp    DWORD PTR [rdx],edi
   140001f39:	jne    0x140001f5c
   140001f3b:	mov    eax,DWORD PTR [rip+0x477b]        # 0x1400066bc
   140001f41:	cmp    DWORD PTR [rdx+0x4],eax
   140001f44:	jne    0x140001f5c
   140001f46:	mov    eax,DWORD PTR [rip+0x4774]        # 0x1400066c0
   140001f4c:	cmp    DWORD PTR [rdx+0x8],eax
   140001f4f:	jne    0x140001f5c
   140001f51:	mov    eax,DWORD PTR [rip+0x476d]        # 0x1400066c4
   140001f57:	cmp    DWORD PTR [rdx+0xc],eax
   140001f5a:	je     0x140001f85
   140001f5c:	cmp    DWORD PTR [rdx],0x324a68b
   140001f62:	jne    0x140001f9f
   140001f64:	mov    eax,DWORD PTR [rip+0x4b92]        # 0x140006afc
   140001f6a:	cmp    DWORD PTR [rdx+0x4],eax
   140001f6d:	jne    0x140001f9f
   140001f6f:	mov    eax,DWORD PTR [rip+0x4b8b]        # 0x140006b00
   140001f75:	cmp    DWORD PTR [rdx+0x8],eax
   140001f78:	jne    0x140001f9f
   140001f7a:	mov    eax,DWORD PTR [rip+0x4b84]        # 0x140006b04
   140001f80:	cmp    DWORD PTR [rdx+0xc],eax
   140001f83:	jne    0x140001f9f
   140001f85:	mov    QWORD PTR [r8],rcx
   140001f88:	mov    rax,QWORD PTR [rcx]
   140001f8b:	mov    rbx,QWORD PTR [rax+0x8]
   140001f8f:	mov    rcx,rbx
   140001f92:	call   QWORD PTR [rip+0x43b0]        # 0x140006348
   140001f98:	mov    rcx,rsi
   140001f9b:	call   rbx
   140001f9d:	jmp    0x140001fa4
   140001f9f:	mov    edi,0x80004002
   140001fa4:	mov    rbx,QWORD PTR [rsp+0x30]
   140001fa9:	mov    eax,edi
   140001fab:	mov    rsi,QWORD PTR [rsp+0x38]
   140001fb0:	add    rsp,0x20
   140001fb4:	pop    rdi
   140001fb5:	ret    
   140001fb6:	int3   
   140001fb7:	int3   
   140001fb8:	int3   
   140001fb9:	int3   
   140001fba:	int3   
   140001fbb:	int3   
   140001fbc:	int3   
   140001fbd:	int3   
   140001fbe:	int3   
   140001fbf:	int3   
   140001fc0:	mov    QWORD PTR [rsp+0x8],rbx
   140001fc5:	mov    QWORD PTR [rsp+0x10],rsi
   140001fca:	push   rdi
   140001fcb:	sub    rsp,0x20
   140001fcf:	mov    rsi,rcx
   140001fd2:	or     edi,0xffffffff
   140001fd5:	lock xadd DWORD PTR [rcx+0xc],edi
   140001fda:	sub    edi,0x1
   140001fdd:	jne    0x14000201d
   140001fdf:	test   rcx,rcx
   140001fe2:	je     0x140001ffc
   140001fe4:	mov    rax,QWORD PTR [rcx]
   140001fe7:	mov    rbx,QWORD PTR [rax+0x38]
   140001feb:	mov    rcx,rbx
   140001fee:	call   QWORD PTR [rip+0x4354]        # 0x140006348
   140001ff4:	lea    edx,[rdi+0x1]
   140001ff7:	mov    rcx,rsi
   140001ffa:	call   rbx
   140001ffc:	mov    rsi,QWORD PTR [rip+0x95d5]        # 0x14000b5d8
   140002003:	test   rsi,rsi
   140002006:	je     0x14000201d
   140002008:	mov    rdx,QWORD PTR [rsi]
   14000200b:	mov    rbx,QWORD PTR [rdx+0x10]
   14000200f:	mov    rcx,rbx
   140002012:	call   QWORD PTR [rip+0x4330]        # 0x140006348
   140002018:	mov    rcx,rsi
   14000201b:	call   rbx
   14000201d:	mov    rbx,QWORD PTR [rsp+0x30]
   140002022:	mov    eax,edi
   140002024:	mov    rsi,QWORD PTR [rsp+0x38]
   140002029:	add    rsp,0x20
   14000202d:	pop    rdi
   14000202e:	ret    
   14000202f:	int3   
   140002030:	int3   
   140002031:	int3   
   140002032:	int3   
   140002033:	int3   
   140002034:	int3   
   140002035:	int3   
   140002036:	int3   
   140002037:	int3   
   140002038:	int3   
   140002039:	int3   
   14000203a:	int3   
   14000203b:	int3   
   14000203c:	int3   
   14000203d:	int3   
   14000203e:	int3   
   14000203f:	int3   
   140002040:	mov    QWORD PTR [rsp+0x8],rbx
   140002045:	mov    QWORD PTR [rsp+0x10],rsi
   14000204a:	push   rdi
   14000204b:	sub    rsp,0x20
   14000204f:	xor    eax,eax
   140002051:	xor    edi,edi
   140002053:	mov    esi,r9d
   140002056:	mov    rbx,r8
   140002059:	test   r9d,r9d
   14000205c:	je     0x14000207f
   14000205e:	test   eax,eax
   140002060:	js     0x14000207f
   140002062:	mov    ecx,DWORD PTR [rbx]
   140002064:	test   ecx,ecx
   140002066:	je     0x140002075
   140002068:	call   QWORD PTR [rip+0x3fc2]        # 0x140006030
   14000206e:	test   eax,eax
   140002070:	js     0x140002075
   140002072:	and    DWORD PTR [rbx],0x0
   140002075:	inc    edi
   140002077:	add    rbx,0x4
   14000207b:	cmp    edi,esi
   14000207d:	jb     0x14000205e
   14000207f:	mov    rbx,QWORD PTR [rsp+0x30]
   140002084:	mov    rsi,QWORD PTR [rsp+0x38]
   140002089:	add    rsp,0x20
   14000208d:	pop    rdi
   14000208e:	ret    
   14000208f:	int3   
   140002090:	int3   
   140002091:	int3   
   140002092:	int3   
   140002093:	int3   
   140002094:	int3   
   140002095:	int3   
   140002096:	int3   
   140002097:	int3   
   140002098:	int3   
   140002099:	int3   
   14000209a:	int3   
   14000209b:	int3   
   14000209c:	int3   
   14000209d:	int3   
   14000209e:	int3   
   14000209f:	int3   
   1400020a0:	xor    eax,eax
   1400020a2:	ret    
   1400020a3:	int3   
   1400020a4:	int3   
   1400020a5:	int3   
   1400020a6:	int3   
   1400020a7:	int3   
   1400020a8:	int3   
   1400020a9:	int3   
   1400020aa:	int3   
   1400020ab:	int3   
   1400020ac:	int3   
   1400020ad:	int3   
   1400020ae:	int3   
   1400020af:	int3   
   1400020b0:	rex.W jmp QWORD PTR [rip+0x3f69]        # 0x140006020
   1400020b7:	int3   
   1400020b8:	int3   
   1400020b9:	int3   
   1400020ba:	int3   
   1400020bb:	int3   
   1400020bc:	int3   
   1400020bd:	int3   
   1400020be:	int3   
   1400020bf:	int3   
   1400020c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400020c5:	mov    QWORD PTR [rsp+0x10],rsi
   1400020ca:	push   rdi
   1400020cb:	sub    rsp,0x20
   1400020cf:	mov    rdi,rcx
   1400020d2:	call   QWORD PTR [rip+0x3f68]        # 0x140006040
   1400020d8:	mov    esi,eax
   1400020da:	test   eax,eax
   1400020dc:	jne    0x1400020f7
   1400020de:	mov    rdi,QWORD PTR [rdi+0x8]
   1400020e2:	mov    rdx,QWORD PTR [rdi]
   1400020e5:	mov    rbx,QWORD PTR [rdx+0x8]
   1400020e9:	mov    rcx,rbx
   1400020ec:	call   QWORD PTR [rip+0x4256]        # 0x140006348
   1400020f2:	mov    rcx,rdi
   1400020f5:	call   rbx
   1400020f7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400020fc:	mov    eax,esi
   1400020fe:	mov    rsi,QWORD PTR [rsp+0x38]
   140002103:	add    rsp,0x20
   140002107:	pop    rdi
   140002108:	ret    
   140002109:	int3   
   14000210a:	int3   
   14000210b:	int3   
   14000210c:	int3   
   14000210d:	int3   
   14000210e:	int3   
   14000210f:	int3   
   140002110:	mov    QWORD PTR [rsp+0x8],rbx
   140002115:	mov    QWORD PTR [rsp+0x10],rsi
   14000211a:	push   rdi
   14000211b:	sub    rsp,0x20
   14000211f:	mov    rsi,QWORD PTR [rcx+0x8]
   140002123:	lea    rax,[rip+0x45a6]        # 0x1400066d0
   14000212a:	mov    QWORD PTR [rcx],rax
   14000212d:	mov    rdi,rcx
   140002130:	test   rsi,rsi
   140002133:	je     0x140002159
   140002135:	cmp    BYTE PTR [rsi+0x8],0x0
   140002139:	je     0x140002154
   14000213b:	mov    rax,QWORD PTR [rsi]
   14000213e:	mov    rbx,QWORD PTR [rax]
   140002141:	mov    rcx,rbx
   140002144:	call   QWORD PTR [rip+0x41fe]        # 0x140006348
   14000214a:	mov    edx,0x1
   14000214f:	mov    rcx,rsi
   140002152:	call   rbx
   140002154:	and    QWORD PTR [rdi+0x8],0x0
   140002159:	lea    rax,[rip+0x46e8]        # 0x140006848
   140002160:	mov    r8b,0x1
   140002163:	mov    rcx,rdi
   140002166:	mov    QWORD PTR [rdi],rax
   140002169:	call   0x140001520
   14000216e:	and    QWORD PTR [rip+0x9462],0x0        # 0x14000b5d8
   140002176:	mov    rbx,QWORD PTR [rsp+0x30]
   14000217b:	mov    rsi,QWORD PTR [rsp+0x38]
   140002180:	mov    BYTE PTR [rip+0x9485],0x0        # 0x14000b60c
   140002187:	add    rsp,0x20
   14000218b:	pop    rdi
   14000218c:	ret    
   14000218d:	int3   
   14000218e:	int3   
   14000218f:	int3   
   140002190:	int3   
   140002191:	int3   
   140002192:	int3   
   140002193:	int3   
   140002194:	int3   
   140002195:	int3   
   140002196:	int3   
   140002197:	int3   
   140002198:	int3   
   140002199:	int3   
   14000219a:	int3   
   14000219b:	int3   
   14000219c:	int3   
   14000219d:	int3   
   14000219e:	int3   
   14000219f:	int3   
   1400021a0:	mov    eax,0x1
   1400021a5:	lock xadd DWORD PTR [rip+0x9433],eax        # 0x14000b5e0
   1400021ad:	inc    eax
   1400021af:	ret    
   1400021b0:	int3   
   1400021b1:	int3   
   1400021b2:	int3   
   1400021b3:	int3   
   1400021b4:	int3   
   1400021b5:	int3   
   1400021b6:	int3   
   1400021b7:	int3   
   1400021b8:	int3   
   1400021b9:	int3   
   1400021ba:	int3   
   1400021bb:	int3   
   1400021bc:	int3   
   1400021bd:	int3   
   1400021be:	int3   
   1400021bf:	int3   
   1400021c0:	or     eax,0xffffffff
   1400021c3:	lock xadd DWORD PTR [rip+0x9415],eax        # 0x14000b5e0
   1400021cb:	dec    eax
   1400021cd:	ret    
   1400021ce:	int3   
   1400021cf:	int3   
   1400021d0:	int3   
   1400021d1:	int3   
   1400021d2:	int3   
   1400021d3:	int3   
   1400021d4:	int3   
   1400021d5:	int3   
   1400021d6:	int3   
   1400021d7:	int3   
   1400021d8:	int3   
   1400021d9:	int3   
   1400021da:	int3   
   1400021db:	int3   
   1400021dc:	int3   
   1400021dd:	int3   
   1400021de:	int3   
   1400021df:	int3   
   1400021e0:	sub    rsp,0x28
   1400021e4:	xor    edx,edx
   1400021e6:	mov    ecx,0x80004001
   1400021eb:	call   QWORD PTR [rip+0x3f77]        # 0x140006168
   1400021f1:	mov    eax,0x80004001
   1400021f6:	add    rsp,0x28
   1400021fa:	ret    
   1400021fb:	int3   
   1400021fc:	int3   
   1400021fd:	int3   
   1400021fe:	int3   
   1400021ff:	int3   
   140002200:	int3   
   140002201:	int3   
   140002202:	int3   
   140002203:	int3   
   140002204:	int3   
   140002205:	int3   
   140002206:	int3   
   140002207:	int3   
   140002208:	int3   
   140002209:	int3   
   14000220a:	int3   
   14000220b:	int3   
   14000220c:	int3   
   14000220d:	int3   
   14000220e:	int3   
   14000220f:	int3   
   140002210:	mov    QWORD PTR [rsp+0x8],rbx
   140002215:	push   rdi
   140002216:	sub    rsp,0x20
   14000221a:	mov    ebx,edx
   14000221c:	mov    rdi,rcx
   14000221f:	call   0x140002110
   140002224:	test   bl,0x1
   140002227:	je     0x140002231
   140002229:	mov    rcx,rdi
   14000222c:	call   0x1400045c4
   140002231:	mov    rax,rdi
   140002234:	mov    rbx,QWORD PTR [rsp+0x30]
   140002239:	add    rsp,0x20
   14000223d:	pop    rdi
   14000223e:	ret    
   14000223f:	int3   
   140002240:	int3   
   140002241:	int3   
   140002242:	int3   
   140002243:	int3   
   140002244:	int3   
   140002245:	int3   
   140002246:	int3   
   140002247:	int3   
   140002248:	int3   
   140002249:	int3   
   14000224a:	int3   
   14000224b:	int3   
   14000224c:	int3   
   14000224d:	int3   
   14000224e:	int3   
   14000224f:	int3   
   140002250:	mov    QWORD PTR [rsp+0x8],rbx
   140002255:	push   rdi
   140002256:	sub    rsp,0x20
   14000225a:	lea    rax,[rip+0x45e7]        # 0x140006848
   140002261:	mov    r8b,0x1
   140002264:	mov    QWORD PTR [rcx],rax
   140002267:	mov    ebx,edx
   140002269:	mov    rdi,rcx
   14000226c:	call   0x140001520
   140002271:	and    QWORD PTR [rip+0x935f],0x0        # 0x14000b5d8
   140002279:	mov    BYTE PTR [rip+0x938c],0x0        # 0x14000b60c
   140002280:	test   bl,0x1
   140002283:	je     0x14000228d
   140002285:	mov    rcx,rdi
   140002288:	call   0x1400045c4
   14000228d:	mov    rax,rdi
   140002290:	mov    rbx,QWORD PTR [rsp+0x30]
   140002295:	add    rsp,0x20
   140002299:	pop    rdi
   14000229a:	ret    
   14000229b:	int3   
   14000229c:	int3   
   14000229d:	int3   
   14000229e:	int3   
   14000229f:	int3   
   1400022a0:	int3   
   1400022a1:	int3   
   1400022a2:	int3   
   1400022a3:	int3   
   1400022a4:	mov    QWORD PTR [rsp+0x8],rbx
   1400022a9:	mov    QWORD PTR [rsp+0x10],rbp
   1400022ae:	mov    QWORD PTR [rsp+0x18],rdi
   1400022b3:	push   r14
   1400022b5:	sub    rsp,0x20
   1400022b9:	mov    rdi,QWORD PTR [rdx+0x10]
   1400022bd:	mov    rbp,r8
   1400022c0:	mov    r14,rdx
   1400022c3:	mov    rbx,rcx
   1400022c6:	cmp    rdi,r8
   1400022c9:	jb     0x1400023e7
   1400022cf:	sub    rdi,r8
   1400022d2:	cmp    r9,rdi
   1400022d5:	cmovb  rdi,r9
   1400022d9:	cmp    rcx,rdx
   1400022dc:	jne    0x14000234f
   1400022de:	lea    rax,[rdi+r8*1]
   1400022e2:	cmp    QWORD PTR [rcx+0x10],rax
   1400022e6:	jb     0x1400023ed
   1400022ec:	cmp    QWORD PTR [rcx+0x18],0x10
   1400022f1:	mov    QWORD PTR [rcx+0x10],rax
   1400022f5:	jb     0x1400022fa
   1400022f7:	mov    rcx,QWORD PTR [rcx]
   1400022fa:	mov    BYTE PTR [rcx+rax*1],0x0
   1400022fe:	mov    rdi,QWORD PTR [rbx+0x10]
   140002302:	cmp    rdi,r8
   140002305:	ja     0x140002323
   140002307:	and    QWORD PTR [rbx+0x10],0x0
   14000230c:	cmp    QWORD PTR [rbx+0x18],0x10
   140002311:	jb     0x140002318
   140002313:	mov    rax,QWORD PTR [rbx]
   140002316:	jmp    0x14000231b
   140002318:	mov    rax,rbx
   14000231b:	mov    BYTE PTR [rax],0x0
   14000231e:	jmp    0x1400023ce
   140002323:	test   r8,r8
   140002326:	je     0x1400023ce
   14000232c:	cmp    QWORD PTR [rbx+0x18],0x10
   140002331:	jb     0x140002338
   140002333:	mov    rcx,QWORD PTR [rbx]
   140002336:	jmp    0x14000233b
   140002338:	mov    rcx,rbx
   14000233b:	sub    rdi,r8
   14000233e:	je     0x1400023b7
   140002340:	lea    rdx,[rcx+r8*1]
   140002344:	mov    r8,rdi
   140002347:	call   QWORD PTR [rip+0x3f13]        # 0x140006260
   14000234d:	jmp    0x1400023b7
   14000234f:	cmp    rdi,0xfffffffffffffffe
   140002353:	ja     0x1400023f3
   140002359:	cmp    QWORD PTR [rcx+0x18],rdi
   14000235d:	jae    0x14000236d
   14000235f:	mov    r8,QWORD PTR [rcx+0x10]
   140002363:	mov    rdx,rdi
   140002366:	call   0x1400024bc
   14000236b:	jmp    0x140002388
   14000236d:	test   rdi,rdi
   140002370:	jne    0x14000238d
   140002372:	and    QWORD PTR [rcx+0x10],rdi
   140002376:	cmp    QWORD PTR [rcx+0x18],0x10
   14000237b:	jb     0x140002382
   14000237d:	mov    rax,QWORD PTR [rcx]
   140002380:	jmp    0x140002385
   140002382:	mov    rax,rcx
   140002385:	mov    BYTE PTR [rax],0x0
   140002388:	test   rdi,rdi
   14000238b:	je     0x1400023ce
   14000238d:	cmp    QWORD PTR [r14+0x18],0x10
   140002392:	jb     0x140002397
   140002394:	mov    r14,QWORD PTR [r14]
   140002397:	cmp    QWORD PTR [rbx+0x18],0x10
   14000239c:	jb     0x1400023a3
   14000239e:	mov    rcx,QWORD PTR [rbx]
   1400023a1:	jmp    0x1400023a6
   1400023a3:	mov    rcx,rbx
   1400023a6:	test   rdi,rdi
   1400023a9:	je     0x1400023b7
   1400023ab:	lea    rdx,[r14+rbp*1]
   1400023af:	mov    r8,rdi
   1400023b2:	call   0x1400051aa
   1400023b7:	cmp    QWORD PTR [rbx+0x18],0x10
   1400023bc:	mov    QWORD PTR [rbx+0x10],rdi
   1400023c0:	jb     0x1400023c7
   1400023c2:	mov    rax,QWORD PTR [rbx]
   1400023c5:	jmp    0x1400023ca
   1400023c7:	mov    rax,rbx
   1400023ca:	mov    BYTE PTR [rax+rdi*1],0x0
   1400023ce:	mov    rbp,QWORD PTR [rsp+0x38]
   1400023d3:	mov    rax,rbx
   1400023d6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400023db:	mov    rdi,QWORD PTR [rsp+0x40]
   1400023e0:	add    rsp,0x20
   1400023e4:	pop    r14
   1400023e6:	ret    
   1400023e7:	call   0x1400024a4
   1400023ec:	int3   
   1400023ed:	call   0x1400024a4
   1400023f2:	int3   
   1400023f3:	call   0x14000248c
   1400023f8:	int3   
   1400023f9:	int3   
   1400023fa:	int3   
   1400023fb:	int3   
   1400023fc:	int3   
   1400023fd:	int3   
   1400023fe:	int3   
   1400023ff:	int3   
   140002400:	mov    QWORD PTR [rsp+0x8],rbx
   140002405:	mov    QWORD PTR [rsp+0x10],rsi
   14000240a:	push   rdi
   14000240b:	sub    rsp,0x20
   14000240f:	mov    rdi,r8
   140002412:	mov    rbx,rcx
   140002415:	test   dl,dl
   140002417:	je     0x140002438
   140002419:	cmp    QWORD PTR [rcx+0x18],0x10
   14000241e:	jb     0x140002438
   140002420:	mov    rsi,QWORD PTR [rcx]
   140002423:	test   r8,r8
   140002426:	je     0x140002430
   140002428:	mov    rdx,rsi
   14000242b:	call   0x1400051aa
   140002430:	mov    rcx,rsi
   140002433:	call   0x1400045c4
   140002438:	mov    rsi,QWORD PTR [rsp+0x38]
   14000243d:	mov    QWORD PTR [rbx+0x18],0xf
   140002445:	mov    QWORD PTR [rbx+0x10],rdi
   140002449:	mov    BYTE PTR [rdi+rbx*1],0x0
   14000244d:	mov    rbx,QWORD PTR [rsp+0x30]
   140002452:	add    rsp,0x20
   140002456:	pop    rdi
   140002457:	ret    
   140002458:	int3   
   140002459:	int3   
   14000245a:	int3   
   14000245b:	int3   
   14000245c:	int3   
   14000245d:	int3   
   14000245e:	int3   
   14000245f:	int3   
   140002460:	rex push rbx
   140002462:	sub    rsp,0x20
   140002466:	lea    rax,[rip+0x448b]        # 0x1400068f8
   14000246d:	mov    rbx,rcx
   140002470:	mov    QWORD PTR [rcx],rax
   140002473:	test   dl,0x1
   140002476:	je     0x14000247d
   140002478:	call   0x1400045c4
   14000247d:	mov    rax,rbx
   140002480:	add    rsp,0x20
   140002484:	pop    rbx
   140002485:	ret    
   140002486:	int3   
   140002487:	int3   
   140002488:	int3   
   140002489:	int3   
   14000248a:	int3   
   14000248b:	int3   
   14000248c:	sub    rsp,0x28
   140002490:	lea    rcx,[rip+0x41f9]        # 0x140006690
   140002497:	call   QWORD PTR [rip+0x3e7b]        # 0x140006318
   14000249d:	int3   
   14000249e:	int3   
   14000249f:	int3   
   1400024a0:	int3   
   1400024a1:	int3   
   1400024a2:	int3   
   1400024a3:	int3   
   1400024a4:	sub    rsp,0x28
   1400024a8:	lea    rcx,[rip+0x41f1]        # 0x1400066a0
   1400024af:	call   QWORD PTR [rip+0x3e5b]        # 0x140006310
   1400024b5:	int3   
   1400024b6:	int3   
   1400024b7:	int3   
   1400024b8:	int3   
   1400024b9:	int3   
   1400024ba:	int3   
   1400024bb:	int3   
   1400024bc:	mov    rax,rsp
   1400024bf:	mov    QWORD PTR [rax+0x18],r8
   1400024c3:	mov    QWORD PTR [rax+0x10],rdx
   1400024c7:	mov    QWORD PTR [rax+0x8],rcx
   1400024cb:	push   rbx
   1400024cc:	push   rsi
   1400024cd:	push   rdi
   1400024ce:	push   r14
   1400024d0:	sub    rsp,0x38
   1400024d4:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   1400024dc:	mov    rsi,r8
   1400024df:	mov    rbx,rcx
   1400024e2:	mov    rdi,rdx
   1400024e5:	or     rdi,0xf
   1400024e9:	mov    r9,0xfffffffffffffffe
   1400024f0:	cmp    rdi,r9
   1400024f3:	jbe    0x1400024fa
   1400024f5:	mov    rdi,rdx
   1400024f8:	jmp    0x14000252b
   1400024fa:	mov    r8,QWORD PTR [rcx+0x18]
   1400024fe:	mov    rcx,r8
   140002501:	shr    rcx,1
   140002504:	movabs rax,0xaaaaaaaaaaaaaaab
   14000250e:	mul    rdi
   140002511:	shr    rdx,1
   140002514:	cmp    rcx,rdx
   140002517:	jbe    0x14000252b
   140002519:	mov    rax,r9
   14000251c:	sub    rax,rcx
   14000251f:	cmp    r8,rax
   140002522:	lea    rdi,[rcx+r8*1]
   140002526:	jbe    0x14000252b
   140002528:	mov    rdi,r9
   14000252b:	lea    rcx,[rdi+0x1]
   14000252f:	xor    r14d,r14d
   140002532:	test   rcx,rcx
   140002535:	je     0x140002551
   140002537:	cmp    rcx,0xffffffffffffffff
   14000253b:	ja     0x14000254a
   14000253d:	call   0x1400045fc
   140002542:	mov    r14,rax
   140002545:	test   rax,rax
   140002548:	jne    0x140002551
   14000254a:	call   QWORD PTR [rip+0x3da8]        # 0x1400062f8
   140002550:	nop
   140002551:	jmp    0x140002567
   140002553:	mov    rbx,QWORD PTR [rsp+0x60]
   140002558:	mov    rsi,QWORD PTR [rsp+0x70]
   14000255d:	mov    rdi,QWORD PTR [rsp+0x68]
   140002562:	mov    r14,QWORD PTR [rsp+0x78]
   140002567:	test   rsi,rsi
   14000256a:	je     0x14000258b
   14000256c:	cmp    QWORD PTR [rbx+0x18],0x10
   140002571:	jb     0x140002578
   140002573:	mov    rdx,QWORD PTR [rbx]
   140002576:	jmp    0x14000257b
   140002578:	mov    rdx,rbx
   14000257b:	test   rsi,rsi
   14000257e:	je     0x14000258b
   140002580:	mov    r8,rsi
   140002583:	mov    rcx,r14
   140002586:	call   0x1400051aa
   14000258b:	cmp    QWORD PTR [rbx+0x18],0x10
   140002590:	jb     0x14000259a
   140002592:	mov    rcx,QWORD PTR [rbx]
   140002595:	call   0x1400045c4
   14000259a:	mov    BYTE PTR [rbx],0x0
   14000259d:	mov    QWORD PTR [rbx],r14
   1400025a0:	mov    QWORD PTR [rbx+0x18],rdi
   1400025a4:	mov    QWORD PTR [rbx+0x10],rsi
   1400025a8:	cmp    rdi,0x10
   1400025ac:	jb     0x1400025b1
   1400025ae:	mov    rbx,r14
   1400025b1:	mov    BYTE PTR [rbx+rsi*1],0x0
   1400025b5:	add    rsp,0x38
   1400025b9:	pop    r14
   1400025bb:	pop    rdi
   1400025bc:	pop    rsi
   1400025bd:	pop    rbx
   1400025be:	ret    
   1400025bf:	int3   
   1400025c0:	int3   
   1400025c1:	int3   
   1400025c2:	int3   
   1400025c3:	int3   
   1400025c4:	int3   
   1400025c5:	int3   
   1400025c6:	int3   
   1400025c7:	int3   
   1400025c8:	mov    rax,rsp
   1400025cb:	mov    QWORD PTR [rax+0x8],rbx
   1400025cf:	mov    QWORD PTR [rax+0x10],rsi
   1400025d3:	mov    QWORD PTR [rax+0x18],rdi
   1400025d7:	mov    QWORD PTR [rax+0x20],r14
   1400025db:	push   r15
   1400025dd:	sub    rsp,0x30
   1400025e1:	xor    ebx,ebx
   1400025e3:	xor    esi,esi
   1400025e5:	mov    rdi,r9
   1400025e8:	mov    r14,r8
   1400025eb:	mov    r15,rdx
   1400025ee:	cmp    DWORD PTR [rsp+0x60],ebx
   1400025f2:	jbe    0x14000262f
   1400025f4:	test   ebx,ebx
   1400025f6:	js     0x14000263b
   1400025f8:	mov    rdx,QWORD PTR [r14]
   1400025fb:	lea    rax,[rdi+rsi*4]
   1400025ff:	mov    r9d,0x5
   140002605:	mov    ecx,esi
   140002607:	shl    rcx,0x4
   14000260b:	add    rcx,r15
   14000260e:	mov    QWORD PTR [rsp+0x20],rax
   140002613:	lea    r8d,[r9-0x1]
   140002617:	call   QWORD PTR [rip+0x3a0b]        # 0x140006028
   14000261d:	inc    esi
   14000261f:	add    r14,0x8
   140002623:	mov    ebx,eax
   140002625:	cmp    esi,DWORD PTR [rsp+0x60]
   140002629:	jb     0x1400025f4
   14000262b:	test   eax,eax
   14000262d:	js     0x14000263b
   14000262f:	call   QWORD PTR [rip+0x39e3]        # 0x140006018
   140002635:	mov    ebx,eax
   140002637:	test   eax,eax
   140002639:	jns    0x140002654
   14000263b:	test   esi,esi
   14000263d:	je     0x140002654
   14000263f:	mov    ecx,DWORD PTR [rdi]
   140002641:	call   QWORD PTR [rip+0x39e9]        # 0x140006030
   140002647:	and    DWORD PTR [rdi],0x0
   14000264a:	lea    rdi,[rdi+0x4]
   14000264e:	sub    rsi,0x1
   140002652:	jne    0x14000263f
   140002654:	mov    rsi,QWORD PTR [rsp+0x48]
   140002659:	mov    eax,ebx
   14000265b:	mov    rbx,QWORD PTR [rsp+0x40]
   140002660:	mov    rdi,QWORD PTR [rsp+0x50]
   140002665:	mov    r14,QWORD PTR [rsp+0x58]
   14000266a:	add    rsp,0x30
   14000266e:	pop    r15
   140002670:	ret    
   140002671:	int3   
   140002672:	int3   
   140002673:	int3   
   140002674:	int3   
   140002675:	int3   
   140002676:	int3   
   140002677:	int3   
   140002678:	mov    rax,QWORD PTR [rdx]
   14000267b:	mov    QWORD PTR [rcx],rax
   14000267e:	mov    rax,rcx
   140002681:	mov    BYTE PTR [rcx+0x8],0x1
   140002685:	ret    
   140002686:	int3   
   140002687:	int3   
   140002688:	int3   
   140002689:	int3   
   14000268a:	int3   
   14000268b:	int3   
   14000268c:	int3   
   14000268d:	int3   
   14000268e:	int3   
   14000268f:	int3   
   140002690:	mov    rax,rsp
   140002693:	mov    QWORD PTR [rax+0x8],rbx
   140002697:	mov    QWORD PTR [rax+0x10],rbp
   14000269b:	mov    QWORD PTR [rax+0x18],rsi
   14000269f:	mov    QWORD PTR [rax+0x20],rdi
   1400026a3:	push   r14
   1400026a5:	sub    rsp,0x30
   1400026a9:	and    QWORD PTR [rax-0x18],0x0
   1400026ae:	lea    rdx,[rip+0x447b]        # 0x140006b30
   1400026b5:	mov    r14,rcx
   1400026b8:	mov    rsi,r9
   1400026bb:	mov    ecx,0x18
   1400026c0:	mov    rbp,r8
   1400026c3:	call   0x140004640
   1400026c8:	mov    rbx,rax
   1400026cb:	test   rax,rax
   1400026ce:	je     0x140002799
   1400026d4:	lea    rdi,[rip+0x4255]        # 0x140006930
   1400026db:	mov    DWORD PTR [rax+0xc],0x1
   1400026e2:	mov    rcx,QWORD PTR [rdi+0x8]
   1400026e6:	mov    DWORD PTR [rax+0x14],0x4
   1400026ed:	mov    QWORD PTR [rax],rdi
   1400026f0:	call   QWORD PTR [rip+0x3c52]        # 0x140006348
   1400026f6:	mov    rcx,rbx
   1400026f9:	call   QWORD PTR [rdi+0x8]
   1400026fc:	mov    rax,QWORD PTR [rbx]
   1400026ff:	mov    QWORD PTR [rsp+0x20],rbx
   140002704:	mov    rdi,QWORD PTR [rax+0x10]
   140002708:	mov    rcx,rdi
   14000270b:	call   QWORD PTR [rip+0x3c37]        # 0x140006348
   140002711:	mov    rcx,rbx
   140002714:	call   rdi
   140002716:	mov    eax,DWORD PTR [r14]
   140002719:	mov    DWORD PTR [rbx+0x14],eax
   14000271c:	mov    rax,QWORD PTR [rbx]
   14000271f:	mov    rdi,QWORD PTR [rax]
   140002722:	mov    rcx,rdi
   140002725:	call   QWORD PTR [rip+0x3c1d]        # 0x140006348
   14000272b:	mov    r8,rsi
   14000272e:	mov    rdx,rbp
   140002731:	mov    rcx,rbx
   140002734:	call   rdi
   140002736:	test   BYTE PTR [r14],0x1
   14000273a:	mov    esi,eax
   14000273c:	je     0x14000277d
   14000273e:	test   eax,eax
   140002740:	js     0x140002779
   140002742:	test   BYTE PTR [r14],0x4
   140002746:	je     0x140002775
   140002748:	mov    rax,QWORD PTR [rip+0x8e89]        # 0x14000b5d8
   14000274f:	mov    rcx,QWORD PTR [rax]
   140002752:	lea    rax,[rip+0xfffffffffffff957]        # 0x1400020b0
   140002759:	cmp    QWORD PTR [rcx+0x8],rax
   14000275d:	jne    0x140002767
   14000275f:	call   QWORD PTR [rip+0x38bb]        # 0x140006020
   140002765:	jmp    0x14000277d
   140002767:	lock inc DWORD PTR [rip+0x8e72]        # 0x14000b5e0
   14000276e:	mov    rbx,QWORD PTR [rsp+0x20]
   140002773:	jmp    0x14000277d
   140002775:	xor    ebx,ebx
   140002777:	jmp    0x14000277d
   140002779:	and    DWORD PTR [rbx+0x14],0xfffffffa
   14000277d:	test   rbx,rbx
   140002780:	je     0x14000279e
   140002782:	mov    rax,QWORD PTR [rbx]
   140002785:	mov    rdi,QWORD PTR [rax+0x10]
   140002789:	mov    rcx,rdi
   14000278c:	call   QWORD PTR [rip+0x3bb6]        # 0x140006348
   140002792:	mov    rcx,rbx
   140002795:	call   rdi
   140002797:	jmp    0x14000279e
   140002799:	mov    esi,0x8007000e
   14000279e:	mov    rbx,QWORD PTR [rsp+0x40]
   1400027a3:	mov    eax,esi
   1400027a5:	mov    rsi,QWORD PTR [rsp+0x50]
   1400027aa:	mov    rbp,QWORD PTR [rsp+0x48]
   1400027af:	mov    rdi,QWORD PTR [rsp+0x58]
   1400027b4:	add    rsp,0x30
   1400027b8:	pop    r14
   1400027ba:	ret    
   1400027bb:	int3   
   1400027bc:	int3   
   1400027bd:	int3   
   1400027be:	int3   
   1400027bf:	int3   
   1400027c0:	int3   
   1400027c1:	int3   
   1400027c2:	int3   
   1400027c3:	int3   
   1400027c4:	int3   
   1400027c5:	int3   
   1400027c6:	int3   
   1400027c7:	int3   
   1400027c8:	int3   
   1400027c9:	int3   
   1400027ca:	int3   
   1400027cb:	int3   
   1400027cc:	int3   
   1400027cd:	int3   
   1400027ce:	int3   
   1400027cf:	int3   
   1400027d0:	mov    rax,rsp
   1400027d3:	mov    QWORD PTR [rax+0x8],rbx
   1400027d7:	mov    QWORD PTR [rax+0x10],rbp
   1400027db:	mov    QWORD PTR [rax+0x18],rsi
   1400027df:	mov    QWORD PTR [rax+0x20],rdi
   1400027e3:	push   r14
   1400027e5:	sub    rsp,0x30
   1400027e9:	and    QWORD PTR [rax-0x18],0x0
   1400027ee:	lea    rdx,[rip+0x433b]        # 0x140006b30
   1400027f5:	mov    r14,rcx
   1400027f8:	mov    rsi,r9
   1400027fb:	mov    ecx,0x18
   140002800:	mov    rbp,r8
   140002803:	call   0x140004640
   140002808:	mov    rbx,rax
   14000280b:	test   rax,rax
   14000280e:	je     0x1400028d9
   140002814:	lea    rdi,[rip+0x3f1d]        # 0x140006738
   14000281b:	mov    DWORD PTR [rax+0xc],0x1
   140002822:	mov    rcx,QWORD PTR [rdi+0x8]
   140002826:	mov    DWORD PTR [rax+0x14],0x4
   14000282d:	mov    QWORD PTR [rax],rdi
   140002830:	call   QWORD PTR [rip+0x3b12]        # 0x140006348
   140002836:	mov    rcx,rbx
   140002839:	call   QWORD PTR [rdi+0x8]
   14000283c:	mov    rax,QWORD PTR [rbx]
   14000283f:	mov    QWORD PTR [rsp+0x20],rbx
   140002844:	mov    rdi,QWORD PTR [rax+0x10]
   140002848:	mov    rcx,rdi
   14000284b:	call   QWORD PTR [rip+0x3af7]        # 0x140006348
   140002851:	mov    rcx,rbx
   140002854:	call   rdi
   140002856:	mov    eax,DWORD PTR [r14]
   140002859:	mov    DWORD PTR [rbx+0x14],eax
   14000285c:	mov    rax,QWORD PTR [rbx]
   14000285f:	mov    rdi,QWORD PTR [rax]
   140002862:	mov    rcx,rdi
   140002865:	call   QWORD PTR [rip+0x3add]        # 0x140006348
   14000286b:	mov    r8,rsi
   14000286e:	mov    rdx,rbp
   140002871:	mov    rcx,rbx
   140002874:	call   rdi
   140002876:	test   BYTE PTR [r14],0x1
   14000287a:	mov    esi,eax
   14000287c:	je     0x1400028bd
   14000287e:	test   eax,eax
   140002880:	js     0x1400028b9
   140002882:	test   BYTE PTR [r14],0x4
   140002886:	je     0x1400028b5
   140002888:	mov    rax,QWORD PTR [rip+0x8d49]        # 0x14000b5d8
   14000288f:	mov    rcx,QWORD PTR [rax]
   140002892:	lea    rax,[rip+0xfffffffffffff817]        # 0x1400020b0
   140002899:	cmp    QWORD PTR [rcx+0x8],rax
   14000289d:	jne    0x1400028a7
   14000289f:	call   QWORD PTR [rip+0x377b]        # 0x140006020
   1400028a5:	jmp    0x1400028bd
   1400028a7:	lock inc DWORD PTR [rip+0x8d32]        # 0x14000b5e0
   1400028ae:	mov    rbx,QWORD PTR [rsp+0x20]
   1400028b3:	jmp    0x1400028bd
   1400028b5:	xor    ebx,ebx
   1400028b7:	jmp    0x1400028bd
   1400028b9:	and    DWORD PTR [rbx+0x14],0xfffffffa
   1400028bd:	test   rbx,rbx
   1400028c0:	je     0x1400028de
   1400028c2:	mov    rax,QWORD PTR [rbx]
   1400028c5:	mov    rdi,QWORD PTR [rax+0x10]
   1400028c9:	mov    rcx,rdi
   1400028cc:	call   QWORD PTR [rip+0x3a76]        # 0x140006348
   1400028d2:	mov    rcx,rbx
   1400028d5:	call   rdi
   1400028d7:	jmp    0x1400028de
   1400028d9:	mov    esi,0x8007000e
   1400028de:	mov    rbx,QWORD PTR [rsp+0x40]
   1400028e3:	mov    eax,esi
   1400028e5:	mov    rsi,QWORD PTR [rsp+0x50]
   1400028ea:	mov    rbp,QWORD PTR [rsp+0x48]
   1400028ef:	mov    rdi,QWORD PTR [rsp+0x58]
   1400028f4:	add    rsp,0x30
   1400028f8:	pop    r14
   1400028fa:	ret    
   1400028fb:	int3   
   1400028fc:	int3   
   1400028fd:	int3   
   1400028fe:	int3   
   1400028ff:	int3   
   140002900:	int3   
   140002901:	int3   
   140002902:	int3   
   140002903:	int3   
   140002904:	mov    QWORD PTR [rsp+0x10],rdx
   140002909:	mov    QWORD PTR [rsp+0x8],rcx
   14000290e:	push   rbx
   14000290f:	push   rbp
   140002910:	push   rsi
   140002911:	push   rdi
   140002912:	push   r12
   140002914:	push   r13
   140002916:	push   r14
   140002918:	push   r15
   14000291a:	sub    rsp,0x48
   14000291e:	xor    ebx,ebx
   140002920:	lea    r14,[rip+0x6449]        # 0x140008d70
   140002927:	lea    rax,[rip+0x6452]        # 0x140008d80
   14000292e:	mov    r13,rcx
   140002931:	lea    rbp,[rip+0x644f]        # 0x140008d87
   140002938:	mov    esi,ebx
   14000293a:	sub    rbp,r14
   14000293d:	mov    r12d,ebx
   140002940:	shr    rbp,0x3
   140002944:	mov    edx,ebx
   140002946:	cmp    r14,rax
   140002949:	mov    edi,0x8007000e
   14000294e:	mov    rax,r14
   140002951:	cmova  rbp,rbx
   140002955:	or     r9,0xffffffffffffffff
   140002959:	test   rbp,rbp
   14000295c:	je     0x140002b94
   140002962:	cmp    QWORD PTR [rax],rbx
   140002965:	je     0x14000296a
   140002967:	inc    r12d
   14000296a:	add    rax,0x8
   14000296e:	inc    rdx
   140002971:	cmp    rdx,rbp
   140002974:	jb     0x140002962
   140002976:	test   r12d,r12d
   140002979:	je     0x140002b94
   14000297f:	mov    ebx,r12d
   140002982:	mov    eax,0x4
   140002987:	mul    rbx
   14000298a:	lea    rdx,[rip+0x419f]        # 0x140006b30
   140002991:	cmovo  rax,r9
   140002995:	mov    rcx,rax
   140002998:	call   0x140004428
   14000299d:	mov    r15,rax
   1400029a0:	mov    QWORD PTR [rsp+0xa0],rax
   1400029a8:	mov    rcx,0xffffffffffffffff
   1400029af:	mov    eax,0x8
   1400029b4:	mul    rbx
   1400029b7:	lea    rdx,[rip+0x4172]        # 0x140006b30
   1400029be:	cmovo  rax,rcx
   1400029c2:	mov    rcx,rax
   1400029c5:	call   0x140004428
   1400029ca:	mov    r13,rax
   1400029cd:	mov    rcx,0xffffffffffffffff
   1400029d4:	mov    eax,0x10
   1400029d9:	mul    rbx
   1400029dc:	lea    rdx,[rip+0x414d]        # 0x140006b30
   1400029e3:	cmovo  rax,rcx
   1400029e7:	mov    rcx,rax
   1400029ea:	call   0x140004428
   1400029ef:	xor    ebx,ebx
   1400029f1:	mov    QWORD PTR [rsp+0xa8],rax
   1400029f9:	test   r15,r15
   1400029fc:	je     0x140002b61
   140002a02:	test   r13,r13
   140002a05:	je     0x140002b61
   140002a0b:	test   rax,rax
   140002a0e:	je     0x140002b61
   140002a14:	lea    rax,[rip+0x6365]        # 0x140008d80
   140002a1b:	mov    edi,ebx
   140002a1d:	mov    r15,r14
   140002a20:	cmp    r14,rax
   140002a23:	jae    0x140002ab8
   140002a29:	test   esi,esi
   140002a2b:	js     0x140002b2a
   140002a31:	mov    rax,QWORD PTR [r15]
   140002a34:	test   rax,rax
   140002a37:	je     0x140002aa0
   140002a39:	mov    DWORD PTR [rsp+0x98],0x2
   140002a44:	mov    QWORD PTR [rsp+0x30],rbx
   140002a49:	mov    rbx,QWORD PTR [rax]
   140002a4c:	mov    rcx,rbx
   140002a4f:	call   QWORD PTR [rip+0x38f3]        # 0x140006348
   140002a55:	mov    rdx,QWORD PTR [r15]
   140002a58:	lea    r9,[rsp+0x30]
   140002a5d:	lea    r8,[rip+0x3ea4]        # 0x140006908
   140002a64:	lea    rcx,[rsp+0x98]
   140002a6c:	call   rbx
   140002a6e:	xor    ebx,ebx
   140002a70:	mov    esi,eax
   140002a72:	test   eax,eax
   140002a74:	js     0x140002aa0
   140002a76:	mov    rcx,QWORD PTR [rsp+0x30]
   140002a7b:	mov    rax,QWORD PTR [rsp+0xa8]
   140002a83:	mov    r8d,edi
   140002a86:	mov    QWORD PTR [r13+r8*8+0x0],rcx
   140002a8b:	add    r8,r8
   140002a8e:	mov    rcx,QWORD PTR [r15]
   140002a91:	inc    edi
   140002a93:	mov    rdx,QWORD PTR [rcx+0x8]
   140002a97:	movups xmm0,XMMWORD PTR [rdx]
   140002a9a:	movdqu XMMWORD PTR [rax+r8*8],xmm0
   140002aa0:	add    r15,0x8
   140002aa4:	lea    rax,[rip+0x62d5]        # 0x140008d80
   140002aab:	cmp    r15,rax
   140002aae:	jb     0x140002a29
   140002ab4:	test   esi,esi
   140002ab6:	js     0x140002b2a
   140002ab8:	mov    rsi,QWORD PTR [rsp+0x90]
   140002ac0:	mov    rax,QWORD PTR [rsi]
   140002ac3:	mov    rbx,QWORD PTR [rax+0x50]
   140002ac7:	mov    rcx,rbx
   140002aca:	call   QWORD PTR [rip+0x3878]        # 0x140006348
   140002ad0:	mov    r15,QWORD PTR [rsp+0xa0]
   140002ad8:	mov    r9,r13
   140002adb:	mov    r8,QWORD PTR [rsp+0xa8]
   140002ae3:	xor    edx,edx
   140002ae5:	mov    rcx,rsi
   140002ae8:	mov    DWORD PTR [rsp+0x28],r12d
   140002aed:	mov    QWORD PTR [rsp+0x20],r15
   140002af2:	call   rbx
   140002af4:	xor    ebx,ebx
   140002af6:	mov    esi,eax
   140002af8:	test   eax,eax
   140002afa:	js     0x140002b32
   140002afc:	mov    edi,ebx
   140002afe:	mov    edx,ebx
   140002b00:	test   rbp,rbp
   140002b03:	je     0x140002b32
   140002b05:	mov    rcx,QWORD PTR [r14]
   140002b08:	test   rcx,rcx
   140002b0b:	je     0x140002b1c
   140002b0d:	mov    rcx,QWORD PTR [rcx+0x18]
   140002b11:	mov    eax,edi
   140002b13:	inc    edi
   140002b15:	mov    eax,DWORD PTR [r15+rax*4]
   140002b19:	mov    DWORD PTR [rcx+0x8],eax
   140002b1c:	add    r14,0x8
   140002b20:	inc    rdx
   140002b23:	cmp    rdx,rbp
   140002b26:	jb     0x140002b05
   140002b28:	jmp    0x140002b32
   140002b2a:	mov    r15,QWORD PTR [rsp+0xa0]
   140002b32:	test   edi,edi
   140002b34:	je     0x140002b63
   140002b36:	mov    r14,r13
   140002b39:	mov    ebp,edi
   140002b3b:	mov    rdi,QWORD PTR [r14]
   140002b3e:	mov    rax,QWORD PTR [rdi]
   140002b41:	mov    rbx,QWORD PTR [rax+0x10]
   140002b45:	mov    rcx,rbx
   140002b48:	call   QWORD PTR [rip+0x37fa]        # 0x140006348
   140002b4e:	mov    rcx,rdi
   140002b51:	call   rbx
   140002b53:	lea    r14,[r14+0x8]
   140002b57:	sub    rbp,0x1
   140002b5b:	jne    0x140002b3b
   140002b5d:	xor    ebx,ebx
   140002b5f:	jmp    0x140002b63
   140002b61:	mov    esi,edi
   140002b63:	mov    rcx,r15
   140002b66:	call   0x1400045b8
   140002b6b:	mov    rcx,QWORD PTR [rsp+0xa8]
   140002b73:	call   0x1400045b8
   140002b78:	mov    rcx,r13
   140002b7b:	call   0x1400045b8
   140002b80:	test   esi,esi
   140002b82:	js     0x140002ca3
   140002b88:	mov    r13,QWORD PTR [rsp+0x90]
   140002b90:	or     r9,0xffffffffffffffff
   140002b94:	lea    r14,[rip+0x61ed]        # 0x140008d88
   140002b9b:	mov    eax,ebx
   140002b9d:	lea    rcx,[rip+0x61e4]        # 0x140008d88
   140002ba4:	mov    r8,rbx
   140002ba7:	lea    rdi,[rip+0x61e1]        # 0x140008d8f
   140002bae:	sub    rdi,r14
   140002bb1:	shr    rdi,0x3
   140002bb5:	cmp    r14,rcx
   140002bb8:	mov    rcx,r14
   140002bbb:	cmova  rdi,rbx
   140002bbf:	test   rdi,rdi
   140002bc2:	je     0x140002ca3
   140002bc8:	cmp    QWORD PTR [rcx],rbx
   140002bcb:	je     0x140002bcf
   140002bcd:	inc    eax
   140002bcf:	add    rcx,0x8
   140002bd3:	inc    r8
   140002bd6:	cmp    r8,rdi
   140002bd9:	jb     0x140002bc8
   140002bdb:	test   eax,eax
   140002bdd:	je     0x140002ca3
   140002be3:	mov    ecx,eax
   140002be5:	mov    eax,0x8
   140002bea:	mul    rcx
   140002bed:	lea    rdx,[rip+0x3f3c]        # 0x140006b30
   140002bf4:	cmovo  rax,r9
   140002bf8:	mov    rcx,rax
   140002bfb:	call   0x140004428
   140002c00:	test   rax,rax
   140002c03:	mov    r12,rax
   140002c06:	mov    eax,0x8007000e
   140002c0b:	cmove  esi,eax
   140002c0e:	test   esi,esi
   140002c10:	js     0x140002c9b
   140002c16:	mov    r15d,ebx
   140002c19:	mov    rbp,rbx
   140002c1c:	mov    rsi,r14
   140002c1f:	test   rdi,rdi
   140002c22:	je     0x140002c53
   140002c24:	mov    rbx,QWORD PTR [rsi]
   140002c27:	test   rbx,rbx
   140002c2a:	je     0x140002c45
   140002c2c:	mov    rbx,QWORD PTR [rbx+0x8]
   140002c30:	mov    rcx,rbx
   140002c33:	call   QWORD PTR [rip+0x370f]        # 0x140006348
   140002c39:	call   rbx
   140002c3b:	mov    ecx,r15d
   140002c3e:	inc    r15d
   140002c41:	mov    QWORD PTR [r12+rcx*8],rax
   140002c45:	add    rsi,0x8
   140002c49:	inc    rbp
   140002c4c:	cmp    rbp,rdi
   140002c4f:	jb     0x140002c24
   140002c51:	xor    ebx,ebx
   140002c53:	mov    rax,QWORD PTR [r13+0x0]
   140002c57:	lea    rcx,[rip+0xfffffffffffff442]        # 0x1400020a0
   140002c5e:	cmp    QWORD PTR [rax+0x40],rcx
   140002c62:	jne    0x140002c8c
   140002c64:	mov    esi,ebx
   140002c66:	mov    rcx,rbx
   140002c69:	test   rdi,rdi
   140002c6c:	je     0x140002c9b
   140002c6e:	mov    rax,QWORD PTR [r14]
   140002c71:	test   rax,rax
   140002c74:	je     0x140002c7e
   140002c76:	mov    rax,QWORD PTR [rax+0x18]
   140002c7a:	mov    QWORD PTR [rax+0x8],rbx
   140002c7e:	add    r14,0x8
   140002c82:	inc    rcx
   140002c85:	cmp    rcx,rdi
   140002c88:	jb     0x140002c6e
   140002c8a:	jmp    0x140002c9b
   140002c8c:	mov    esi,0x80004001
   140002c91:	xor    edx,edx
   140002c93:	mov    ecx,esi
   140002c95:	call   QWORD PTR [rip+0x34cd]        # 0x140006168
   140002c9b:	mov    rcx,r12
   140002c9e:	call   0x1400045b8
   140002ca3:	mov    eax,esi
   140002ca5:	add    rsp,0x48
   140002ca9:	pop    r15
   140002cab:	pop    r14
   140002cad:	pop    r13
   140002caf:	pop    r12
   140002cb1:	pop    rdi
   140002cb2:	pop    rsi
   140002cb3:	pop    rbp
   140002cb4:	pop    rbx
   140002cb5:	ret    
   140002cb6:	int3   
   140002cb7:	int3   
   140002cb8:	int3   
   140002cb9:	int3   
   140002cba:	int3   
   140002cbb:	int3   
   140002cbc:	int3   
   140002cbd:	int3   
   140002cbe:	int3   
   140002cbf:	int3   
   140002cc0:	mov    rcx,QWORD PTR [rcx+0x10]
   140002cc4:	mov    rcx,QWORD PTR [rcx+0x8]
   140002cc8:	rex.W jmp QWORD PTR [rip+0x3459]        # 0x140006128
   140002ccf:	int3   
   140002cd0:	int3   
   140002cd1:	int3   
   140002cd2:	int3   
   140002cd3:	int3   
   140002cd4:	int3   
   140002cd5:	int3   
   140002cd6:	int3   
   140002cd7:	int3   
   140002cd8:	int3   
   140002cd9:	int3   
   140002cda:	int3   
   140002cdb:	int3   
   140002cdc:	int3   
   140002cdd:	int3   
   140002cde:	int3   
   140002cdf:	int3   
   140002ce0:	mov    QWORD PTR [rsp+0x8],rbx
   140002ce5:	mov    QWORD PTR [rsp+0x18],rbp
   140002cea:	push   rsi
   140002ceb:	push   rdi
   140002cec:	push   r14
   140002cee:	sub    rsp,0x20
   140002cf2:	and    QWORD PTR [r9],0x0
   140002cf6:	mov    r14,r9
   140002cf9:	mov    rbp,r8
   140002cfc:	test   rdx,rdx
   140002cff:	je     0x140002d14
   140002d01:	mov    ebx,0x80040110
   140002d06:	xor    edx,edx
   140002d08:	mov    ecx,ebx
   140002d0a:	call   QWORD PTR [rip+0x3458]        # 0x140006168
   140002d10:	mov    eax,ebx
   140002d12:	jmp    0x140002d72
   140002d14:	and    QWORD PTR [rsp+0x48],0x0
   140002d1a:	lea    rcx,[rsp+0x48]
   140002d1f:	call   0x14000306c
   140002d24:	mov    esi,eax
   140002d26:	test   eax,eax
   140002d28:	js     0x140002d4b
   140002d2a:	mov    rbx,QWORD PTR [rsp+0x48]
   140002d2f:	mov    rax,QWORD PTR [rbx]
   140002d32:	mov    rdi,QWORD PTR [rax]
   140002d35:	mov    rcx,rdi
   140002d38:	call   QWORD PTR [rip+0x360a]        # 0x140006348
   140002d3e:	mov    r8,r14
   140002d41:	mov    rdx,rbp
   140002d44:	mov    rcx,rbx
   140002d47:	call   rdi
   140002d49:	mov    esi,eax
   140002d4b:	mov    rdi,QWORD PTR [rsp+0x48]
   140002d50:	test   rdi,rdi
   140002d53:	je     0x140002d70
   140002d55:	and    QWORD PTR [rsp+0x48],0x0
   140002d5b:	mov    rdx,QWORD PTR [rdi]
   140002d5e:	mov    rbx,QWORD PTR [rdx+0x10]
   140002d62:	mov    rcx,rbx
   140002d65:	call   QWORD PTR [rip+0x35dd]        # 0x140006348
   140002d6b:	mov    rcx,rdi
   140002d6e:	call   rbx
   140002d70:	mov    eax,esi
   140002d72:	mov    rbx,QWORD PTR [rsp+0x40]
   140002d77:	mov    rbp,QWORD PTR [rsp+0x50]
   140002d7c:	add    rsp,0x20
   140002d80:	pop    r14
   140002d82:	pop    rdi
   140002d83:	pop    rsi
   140002d84:	ret    
   140002d85:	int3   
   140002d86:	int3   
   140002d87:	int3   
   140002d88:	int3   
   140002d89:	int3   
   140002d8a:	int3   
   140002d8b:	int3   
   140002d8c:	int3   
   140002d8d:	int3   
   140002d8e:	int3   
   140002d8f:	int3   
   140002d90:	rex push rbx
   140002d92:	sub    rsp,0x20
   140002d96:	mov    ebx,0x1
   140002d9b:	lock xadd DWORD PTR [rcx+0xc],ebx
   140002da0:	inc    ebx
   140002da2:	test   BYTE PTR [rcx+0x14],0x6
   140002da6:	jne    0x140002dd3
   140002da8:	cmp    ebx,0x2
   140002dab:	jne    0x140002dd3
   140002dad:	mov    rax,QWORD PTR [rip+0x8824]        # 0x14000b5d8
   140002db4:	mov    rcx,QWORD PTR [rax]
   140002db7:	lea    rax,[rip+0xfffffffffffff2f2]        # 0x1400020b0
   140002dbe:	cmp    QWORD PTR [rcx+0x8],rax
   140002dc2:	jne    0x140002dcc
   140002dc4:	call   QWORD PTR [rip+0x3256]        # 0x140006020
   140002dca:	jmp    0x140002dd3
   140002dcc:	lock inc DWORD PTR [rip+0x880d]        # 0x14000b5e0
   140002dd3:	mov    eax,ebx
   140002dd5:	add    rsp,0x20
   140002dd9:	pop    rbx
   140002dda:	ret    
   140002ddb:	int3   
   140002ddc:	int3   
   140002ddd:	int3   
   140002dde:	int3   
   140002ddf:	int3   
   140002de0:	int3   
   140002de1:	int3   
   140002de2:	int3   
   140002de3:	int3   
   140002de4:	int3   
   140002de5:	int3   
   140002de6:	int3   
   140002de7:	int3   
   140002de8:	int3   
   140002de9:	int3   
   140002dea:	int3   
   140002deb:	int3   
   140002dec:	int3   
   140002ded:	int3   
   140002dee:	int3   
   140002def:	int3   
   140002df0:	mov    QWORD PTR [rsp+0x8],rbx
   140002df5:	mov    QWORD PTR [rsp+0x10],rsi
   140002dfa:	mov    QWORD PTR [rsp+0x18],rdi
   140002dff:	push   r14
   140002e01:	sub    rsp,0x20
   140002e05:	mov    r14,rcx
   140002e08:	or     esi,0xffffffff
   140002e0b:	lock xadd DWORD PTR [rcx+0xc],esi
   140002e10:	sub    esi,0x1
   140002e13:	jne    0x140002e4e
   140002e15:	mov    eax,DWORD PTR [rcx+0x14]
   140002e18:	and    eax,0x5
   140002e1b:	cmp    al,0x5
   140002e1d:	mov    rax,QWORD PTR [rcx]
   140002e20:	sete   dil
   140002e24:	mov    rbx,QWORD PTR [rax+0x28]
   140002e28:	mov    rcx,rbx
   140002e2b:	call   QWORD PTR [rip+0x3517]        # 0x140006348
   140002e31:	lea    edx,[rsi+0x1]
   140002e34:	mov    rcx,r14
   140002e37:	call   rbx
   140002e39:	test   dil,dil
   140002e3c:	je     0x140002e75
   140002e3e:	mov    rdi,QWORD PTR [rip+0x8793]        # 0x14000b5d8
   140002e45:	mov    rax,QWORD PTR [rdi]
   140002e48:	mov    rbx,QWORD PTR [rax+0x10]
   140002e4c:	jmp    0x140002e67
   140002e4e:	test   BYTE PTR [rcx+0x14],0x6
   140002e52:	jne    0x140002e75
   140002e54:	cmp    esi,0x1
   140002e57:	jne    0x140002e75
   140002e59:	mov    rdi,QWORD PTR [rip+0x8778]        # 0x14000b5d8
   140002e60:	mov    rdx,QWORD PTR [rdi]
   140002e63:	mov    rbx,QWORD PTR [rdx+0x10]
   140002e67:	mov    rcx,rbx
   140002e6a:	call   QWORD PTR [rip+0x34d8]        # 0x140006348
   140002e70:	mov    rcx,rdi
   140002e73:	call   rbx
   140002e75:	mov    rbx,QWORD PTR [rsp+0x30]
   140002e7a:	mov    eax,esi
   140002e7c:	mov    rsi,QWORD PTR [rsp+0x38]
   140002e81:	mov    rdi,QWORD PTR [rsp+0x40]
   140002e86:	add    rsp,0x20
   140002e8a:	pop    r14
   140002e8c:	ret    
   140002e8d:	int3   
   140002e8e:	int3   
   140002e8f:	int3   
   140002e90:	int3   
   140002e91:	int3   
   140002e92:	int3   
   140002e93:	int3   
   140002e94:	int3   
   140002e95:	int3   
   140002e96:	int3   
   140002e97:	int3   
   140002e98:	int3   
   140002e99:	int3   
   140002e9a:	int3   
   140002e9b:	int3   
   140002e9c:	int3   
   140002e9d:	int3   
   140002e9e:	int3   
   140002e9f:	int3   
   140002ea0:	mov    QWORD PTR [rsp+0x8],rbx
   140002ea5:	mov    QWORD PTR [rsp+0x10],rsi
   140002eaa:	push   rdi
   140002eab:	sub    rsp,0x20
   140002eaf:	xor    edi,edi
   140002eb1:	mov    rsi,rcx
   140002eb4:	mov    QWORD PTR [r8],rdi
   140002eb7:	cmp    DWORD PTR [rdx],edi
   140002eb9:	jne    0x140002edc
   140002ebb:	mov    eax,DWORD PTR [rip+0x37fb]        # 0x1400066bc
   140002ec1:	cmp    DWORD PTR [rdx+0x4],eax
   140002ec4:	jne    0x140002edc
   140002ec6:	mov    eax,DWORD PTR [rip+0x37f4]        # 0x1400066c0
   140002ecc:	cmp    DWORD PTR [rdx+0x8],eax
   140002ecf:	jne    0x140002edc
   140002ed1:	mov    eax,DWORD PTR [rip+0x37ed]        # 0x1400066c4
   140002ed7:	cmp    DWORD PTR [rdx+0xc],eax
   140002eda:	je     0x140002f02
   140002edc:	cmp    DWORD PTR [rdx],0x1
   140002edf:	jne    0x140002f1c
   140002ee1:	mov    eax,DWORD PTR [rip+0x3a25]        # 0x14000690c
   140002ee7:	cmp    DWORD PTR [rdx+0x4],eax
   140002eea:	jne    0x140002f1c
   140002eec:	mov    eax,DWORD PTR [rip+0x3a1e]        # 0x140006910
   140002ef2:	cmp    DWORD PTR [rdx+0x8],eax
   140002ef5:	jne    0x140002f1c
   140002ef7:	mov    eax,DWORD PTR [rip+0x3a17]        # 0x140006914
   140002efd:	cmp    DWORD PTR [rdx+0xc],eax
   140002f00:	jne    0x140002f1c
   140002f02:	mov    QWORD PTR [r8],rcx
   140002f05:	mov    rax,QWORD PTR [rcx]
   140002f08:	mov    rbx,QWORD PTR [rax+0x8]
   140002f0c:	mov    rcx,rbx
   140002f0f:	call   QWORD PTR [rip+0x3433]        # 0x140006348
   140002f15:	mov    rcx,rsi
   140002f18:	call   rbx
   140002f1a:	jmp    0x140002f21
   140002f1c:	mov    edi,0x80004002
   140002f21:	mov    rbx,QWORD PTR [rsp+0x30]
   140002f26:	mov    eax,edi
   140002f28:	mov    rsi,QWORD PTR [rsp+0x38]
   140002f2d:	add    rsp,0x20
   140002f31:	pop    rdi
   140002f32:	ret    
   140002f33:	int3   
   140002f34:	int3   
   140002f35:	int3   
   140002f36:	int3   
   140002f37:	int3   
   140002f38:	int3   
   140002f39:	int3   
   140002f3a:	int3   
   140002f3b:	int3   
   140002f3c:	int3   
   140002f3d:	int3   
   140002f3e:	int3   
   140002f3f:	int3   
   140002f40:	mov    QWORD PTR [rsp+0x8],rbx
   140002f45:	push   rdi
   140002f46:	sub    rsp,0x20
   140002f4a:	mov    rdi,QWORD PTR [rip+0x8687]        # 0x14000b5d8
   140002f51:	test   rdi,rdi
   140002f54:	jne    0x140002f69
   140002f56:	mov    ebx,0x80004005
   140002f5b:	xor    edx,edx
   140002f5d:	mov    ecx,ebx
   140002f5f:	call   QWORD PTR [rip+0x3203]        # 0x140006168
   140002f65:	mov    eax,ebx
   140002f67:	jmp    0x140002fa2
   140002f69:	mov    rax,QWORD PTR [rdi]
   140002f6c:	test   edx,edx
   140002f6e:	je     0x140002f8e
   140002f70:	lea    rcx,[rip+0xfffffffffffff139]        # 0x1400020b0
   140002f77:	cmp    QWORD PTR [rax+0x8],rcx
   140002f7b:	jne    0x140002f85
   140002f7d:	call   QWORD PTR [rip+0x309d]        # 0x140006020
   140002f83:	jmp    0x140002fa0
   140002f85:	lock inc DWORD PTR [rip+0x8654]        # 0x14000b5e0
   140002f8c:	jmp    0x140002fa0
   140002f8e:	mov    rbx,QWORD PTR [rax+0x10]
   140002f92:	mov    rcx,rbx
   140002f95:	call   QWORD PTR [rip+0x33ad]        # 0x140006348
   140002f9b:	mov    rcx,rdi
   140002f9e:	call   rbx
   140002fa0:	xor    eax,eax
   140002fa2:	mov    rbx,QWORD PTR [rsp+0x30]
   140002fa7:	add    rsp,0x20
   140002fab:	pop    rdi
   140002fac:	ret    
   140002fad:	int3   
   140002fae:	int3   
   140002faf:	int3   
   140002fb0:	int3   
   140002fb1:	int3   
   140002fb2:	int3   
   140002fb3:	int3   
   140002fb4:	int3   
   140002fb5:	int3   
   140002fb6:	int3   
   140002fb7:	int3   
   140002fb8:	int3   
   140002fb9:	int3   
   140002fba:	int3   
   140002fbb:	int3   
   140002fbc:	int3   
   140002fbd:	int3   
   140002fbe:	int3   
   140002fbf:	int3   
   140002fc0:	mov    QWORD PTR [rsp+0x8],rbx
   140002fc5:	mov    QWORD PTR [rsp+0x18],rbp
   140002fca:	push   rsi
   140002fcb:	push   rdi
   140002fcc:	push   r14
   140002fce:	sub    rsp,0x20
   140002fd2:	and    QWORD PTR [r9],0x0
   140002fd6:	mov    r14,r9
   140002fd9:	mov    rbp,r8
   140002fdc:	test   rdx,rdx
   140002fdf:	je     0x140002ff4
   140002fe1:	mov    ebx,0x80040110
   140002fe6:	xor    edx,edx
   140002fe8:	mov    ecx,ebx
   140002fea:	call   QWORD PTR [rip+0x3178]        # 0x140006168
   140002ff0:	mov    eax,ebx
   140002ff2:	jmp    0x140003052
   140002ff4:	and    QWORD PTR [rsp+0x48],0x0
   140002ffa:	lea    rcx,[rsp+0x48]
   140002fff:	call   0x140003134
   140003004:	mov    esi,eax
   140003006:	test   eax,eax
   140003008:	js     0x14000302b
   14000300a:	mov    rbx,QWORD PTR [rsp+0x48]
   14000300f:	mov    rax,QWORD PTR [rbx]
   140003012:	mov    rdi,QWORD PTR [rax]
   140003015:	mov    rcx,rdi
   140003018:	call   QWORD PTR [rip+0x332a]        # 0x140006348
   14000301e:	mov    r8,r14
   140003021:	mov    rdx,rbp
   140003024:	mov    rcx,rbx
   140003027:	call   rdi
   140003029:	mov    esi,eax
   14000302b:	mov    rdi,QWORD PTR [rsp+0x48]
   140003030:	test   rdi,rdi
   140003033:	je     0x140003050
   140003035:	and    QWORD PTR [rsp+0x48],0x0
   14000303b:	mov    rdx,QWORD PTR [rdi]
   14000303e:	mov    rbx,QWORD PTR [rdx+0x10]
   140003042:	mov    rcx,rbx
   140003045:	call   QWORD PTR [rip+0x32fd]        # 0x140006348
   14000304b:	mov    rcx,rdi
   14000304e:	call   rbx
   140003050:	mov    eax,esi
   140003052:	mov    rbx,QWORD PTR [rsp+0x40]
   140003057:	mov    rbp,QWORD PTR [rsp+0x50]
   14000305c:	add    rsp,0x20
   140003060:	pop    r14
   140003062:	pop    rdi
   140003063:	pop    rsi
   140003064:	ret    
   140003065:	int3   
   140003066:	int3   
   140003067:	int3   
   140003068:	int3   
   140003069:	int3   
   14000306a:	int3   
   14000306b:	int3   
   14000306c:	mov    QWORD PTR [rsp+0x8],rbx
   140003071:	mov    QWORD PTR [rsp+0x10],rsi
   140003076:	push   rdi
   140003077:	sub    rsp,0x20
   14000307b:	and    QWORD PTR [rcx],0x0
   14000307f:	lea    rdx,[rip+0x3aaa]        # 0x140006b30
   140003086:	mov    rsi,rcx
   140003089:	mov    ecx,0x10
   14000308e:	call   0x140004640
   140003093:	mov    rbx,rax
   140003096:	test   rax,rax
   140003099:	je     0x140003115
   14000309b:	mov    DWORD PTR [rax+0xc],0x1
   1400030a2:	lea    rax,[rip+0x396f]        # 0x140006a18
   1400030a9:	mov    QWORD PTR [rbx],rax
   1400030ac:	mov    rax,QWORD PTR [rip+0x8525]        # 0x14000b5d8
   1400030b3:	test   rax,rax
   1400030b6:	je     0x1400030d7
   1400030b8:	mov    rax,QWORD PTR [rax]
   1400030bb:	lea    rcx,[rip+0xffffffffffffefee]        # 0x1400020b0
   1400030c2:	cmp    QWORD PTR [rax+0x8],rcx
   1400030c6:	jne    0x1400030d0
   1400030c8:	call   QWORD PTR [rip+0x2f52]        # 0x140006020
   1400030ce:	jmp    0x1400030d7
   1400030d0:	lock inc DWORD PTR [rip+0x8509]        # 0x14000b5e0
   1400030d7:	lea    rax,[rip+0x38f2]        # 0x1400069d0
   1400030de:	mov    rdi,QWORD PTR [rax]
   1400030e1:	mov    rcx,rdi
   1400030e4:	mov    QWORD PTR [rbx],rax
   1400030e7:	call   QWORD PTR [rip+0x325b]        # 0x140006348
   1400030ed:	mov    r8,rsi
   1400030f0:	lea    rdx,[rip+0x35c1]        # 0x1400066b8
   1400030f7:	mov    rcx,rbx
   1400030fa:	call   rdi
   1400030fc:	mov    rcx,QWORD PTR [rbx]
   1400030ff:	mov    esi,eax
   140003101:	mov    rdi,QWORD PTR [rcx+0x10]
   140003105:	mov    rcx,rdi
   140003108:	call   QWORD PTR [rip+0x323a]        # 0x140006348
   14000310e:	mov    rcx,rbx
   140003111:	call   rdi
   140003113:	jmp    0x14000311a
   140003115:	mov    esi,0x8007000e
   14000311a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000311f:	mov    eax,esi
   140003121:	mov    rsi,QWORD PTR [rsp+0x38]
   140003126:	add    rsp,0x20
   14000312a:	pop    rdi
   14000312b:	ret    
   14000312c:	int3   
   14000312d:	int3   
   14000312e:	int3   
   14000312f:	int3   
   140003130:	int3   
   140003131:	int3   
   140003132:	int3   
   140003133:	int3   
   140003134:	mov    QWORD PTR [rsp+0x8],rbx
   140003139:	mov    QWORD PTR [rsp+0x10],rsi
   14000313e:	push   rdi
   14000313f:	sub    rsp,0x20
   140003143:	and    QWORD PTR [rcx],0x0
   140003147:	lea    rdx,[rip+0x39e2]        # 0x140006b30
   14000314e:	mov    rsi,rcx
   140003151:	mov    ecx,0x18
   140003156:	call   0x140004640
   14000315b:	mov    rbx,rax
   14000315e:	test   rax,rax
   140003161:	je     0x1400031e2
   140003163:	mov    DWORD PTR [rax+0xc],0x1
   14000316a:	lea    rax,[rip+0x373f]        # 0x1400068b0
   140003171:	mov    QWORD PTR [rbx],rax
   140003174:	mov    rax,QWORD PTR [rip+0x845d]        # 0x14000b5d8
   14000317b:	test   rax,rax
   14000317e:	je     0x14000319f
   140003180:	mov    rax,QWORD PTR [rax]
   140003183:	lea    rcx,[rip+0xffffffffffffef26]        # 0x1400020b0
   14000318a:	cmp    QWORD PTR [rax+0x8],rcx
   14000318e:	jne    0x140003198
   140003190:	call   QWORD PTR [rip+0x2e8a]        # 0x140006020
   140003196:	jmp    0x14000319f
   140003198:	lock inc DWORD PTR [rip+0x8441]        # 0x14000b5e0
   14000319f:	lea    rax,[rip+0x365a]        # 0x140006800
   1400031a6:	mov    rdi,QWORD PTR [rax]
   1400031a9:	mov    QWORD PTR [rbx],rax
   1400031ac:	mov    rcx,rdi
   1400031af:	and    QWORD PTR [rbx+0x10],0x0
   1400031b4:	call   QWORD PTR [rip+0x318e]        # 0x140006348
   1400031ba:	mov    r8,rsi
   1400031bd:	lea    rdx,[rip+0x34f4]        # 0x1400066b8
   1400031c4:	mov    rcx,rbx
   1400031c7:	call   rdi
   1400031c9:	mov    rcx,QWORD PTR [rbx]
   1400031cc:	mov    esi,eax
   1400031ce:	mov    rdi,QWORD PTR [rcx+0x10]
   1400031d2:	mov    rcx,rdi
   1400031d5:	call   QWORD PTR [rip+0x316d]        # 0x140006348
   1400031db:	mov    rcx,rbx
   1400031de:	call   rdi
   1400031e0:	jmp    0x1400031e7
   1400031e2:	mov    esi,0x8007000e
   1400031e7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400031ec:	mov    eax,esi
   1400031ee:	mov    rsi,QWORD PTR [rsp+0x38]
   1400031f3:	add    rsp,0x20
   1400031f7:	pop    rdi
   1400031f8:	ret    
   1400031f9:	int3   
   1400031fa:	int3   
   1400031fb:	int3   
   1400031fc:	int3   
   1400031fd:	int3   
   1400031fe:	int3   
   1400031ff:	int3   
   140003200:	rex push rbx
   140003202:	sub    rsp,0x20
   140003206:	mov    DWORD PTR [rcx+0xc],0xc0000001
   14000320d:	mov    rbx,rcx
   140003210:	test   dl,0x1
   140003213:	je     0x14000321a
   140003215:	call   0x1400045c4
   14000321a:	mov    rax,rbx
   14000321d:	add    rsp,0x20
   140003221:	pop    rbx
   140003222:	ret    
   140003223:	int3   
   140003224:	int3   
   140003225:	int3   
   140003226:	int3   
   140003227:	int3   
   140003228:	int3   
   140003229:	int3   
   14000322a:	int3   
   14000322b:	int3   
   14000322c:	int3   
   14000322d:	int3   
   14000322e:	int3   
   14000322f:	int3   
   140003230:	mov    QWORD PTR [rsp+0x8],rbx
   140003235:	mov    QWORD PTR [rsp+0x10],rbp
   14000323a:	mov    QWORD PTR [rsp+0x18],rsi
   14000323f:	push   rdi
   140003240:	sub    rsp,0x20
   140003244:	mov    rsi,QWORD PTR [rcx+0x10]
   140003248:	mov    ebp,edx
   14000324a:	mov    rdi,rcx
   14000324d:	test   rsi,rsi
   140003250:	je     0x14000326c
   140003252:	and    QWORD PTR [rcx+0x10],0x0
   140003257:	mov    rax,QWORD PTR [rsi]
   14000325a:	mov    rbx,QWORD PTR [rax+0x10]
   14000325e:	mov    rcx,rbx
   140003261:	call   QWORD PTR [rip+0x30e1]        # 0x140006348
   140003267:	mov    rcx,rsi
   14000326a:	call   rbx
   14000326c:	mov    DWORD PTR [rdi+0xc],0xc0000001
   140003273:	test   bpl,0x1
   140003277:	je     0x140003281
   140003279:	mov    rcx,rdi
   14000327c:	call   0x1400045c4
   140003281:	mov    rbx,QWORD PTR [rsp+0x30]
   140003286:	mov    rax,rdi
   140003289:	mov    rbp,QWORD PTR [rsp+0x38]
   14000328e:	mov    rsi,QWORD PTR [rsp+0x40]
   140003293:	add    rsp,0x20
   140003297:	pop    rdi
   140003298:	ret    
   140003299:	int3   
   14000329a:	int3   
   14000329b:	int3   
   14000329c:	int3   
   14000329d:	int3   
   14000329e:	int3   
   14000329f:	int3   
   1400032a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400032a5:	mov    QWORD PTR [rsp+0x10],rbp
   1400032aa:	mov    QWORD PTR [rsp+0x18],rsi
   1400032af:	push   rdi
   1400032b0:	sub    rsp,0x20
   1400032b4:	mov    rdi,QWORD PTR [rcx+0x10]
   1400032b8:	xor    eax,eax
   1400032ba:	mov    esi,r8d
   1400032bd:	mov    rbp,rdx
   1400032c0:	test   rdi,rdi
   1400032c3:	je     0x1400032e0
   1400032c5:	mov    rax,QWORD PTR [rdi]
   1400032c8:	mov    rbx,QWORD PTR [rax+0x20]
   1400032cc:	mov    rcx,rbx
   1400032cf:	call   QWORD PTR [rip+0x3073]        # 0x140006348
   1400032d5:	mov    r8d,esi
   1400032d8:	mov    rdx,rbp
   1400032db:	mov    rcx,rdi
   1400032de:	call   rbx
   1400032e0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400032e5:	mov    rbp,QWORD PTR [rsp+0x38]
   1400032ea:	mov    rsi,QWORD PTR [rsp+0x40]
   1400032ef:	add    rsp,0x20
   1400032f3:	pop    rdi
   1400032f4:	ret    
   1400032f5:	int3   
   1400032f6:	int3   
   1400032f7:	int3   
   1400032f8:	int3   
   1400032f9:	int3   
   1400032fa:	int3   
   1400032fb:	int3   
   1400032fc:	int3   
   1400032fd:	int3   
   1400032fe:	int3   
   1400032ff:	int3   
   140003300:	mov    QWORD PTR [rsp+0x8],rbx
   140003305:	push   rdi
   140003306:	sub    rsp,0x20
   14000330a:	mov    rdi,QWORD PTR [rcx+0x10]
   14000330e:	xor    eax,eax
   140003310:	test   rdi,rdi
   140003313:	je     0x14000332a
   140003315:	mov    rax,QWORD PTR [rdi]
   140003318:	mov    rbx,QWORD PTR [rax+0x30]
   14000331c:	mov    rcx,rbx
   14000331f:	call   QWORD PTR [rip+0x3023]        # 0x140006348
   140003325:	mov    rcx,rdi
   140003328:	call   rbx
   14000332a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000332f:	add    rsp,0x20
   140003333:	pop    rdi
   140003334:	ret    
   140003335:	int3   
   140003336:	int3   
   140003337:	int3   
   140003338:	int3   
   140003339:	int3   
   14000333a:	int3   
   14000333b:	int3   
   14000333c:	int3   
   14000333d:	int3   
   14000333e:	int3   
   14000333f:	int3   
   140003340:	test   rdx,rdx
   140003343:	je     0x140003348
   140003345:	and    DWORD PTR [rdx],0x0
   140003348:	mov    eax,0x80004001
   14000334d:	ret    
   14000334e:	int3   
   14000334f:	int3   
   140003350:	int3   
   140003351:	int3   
   140003352:	int3   
   140003353:	int3   
   140003354:	int3   
   140003355:	int3   
   140003356:	int3   
   140003357:	int3   
   140003358:	int3   
   140003359:	int3   
   14000335a:	int3   
   14000335b:	int3   
   14000335c:	int3   
   14000335d:	int3   
   14000335e:	int3   
   14000335f:	int3   
   140003360:	mov    QWORD PTR [rsp+0x8],rbx
   140003365:	mov    QWORD PTR [rsp+0x10],rsi
   14000336a:	push   rdi
   14000336b:	sub    rsp,0x20
   14000336f:	mov    rdi,rdx
   140003372:	mov    rsi,rcx
   140003375:	cmp    QWORD PTR [rcx+0x10],rdx
   140003379:	je     0x1400033b7
   14000337b:	test   rdx,rdx
   14000337e:	je     0x140003395
   140003380:	mov    rax,QWORD PTR [rdx]
   140003383:	mov    rbx,QWORD PTR [rax+0x8]
   140003387:	mov    rcx,rbx
   14000338a:	call   QWORD PTR [rip+0x2fb8]        # 0x140006348
   140003390:	mov    rcx,rdi
   140003393:	call   rbx
   140003395:	mov    rbx,QWORD PTR [rsi+0x10]
   140003399:	mov    QWORD PTR [rsi+0x10],rdi
   14000339d:	test   rbx,rbx
   1400033a0:	je     0x1400033b7
   1400033a2:	mov    rax,QWORD PTR [rbx]
   1400033a5:	mov    rdi,QWORD PTR [rax+0x10]
   1400033a9:	mov    rcx,rdi
   1400033ac:	call   QWORD PTR [rip+0x2f96]        # 0x140006348
   1400033b2:	mov    rcx,rbx
   1400033b5:	call   rdi
   1400033b7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400033bc:	xor    eax,eax
   1400033be:	mov    rsi,QWORD PTR [rsp+0x38]
   1400033c3:	add    rsp,0x20
   1400033c7:	pop    rdi
   1400033c8:	ret    
   1400033c9:	int3   
   1400033ca:	int3   
   1400033cb:	int3   
   1400033cc:	int3   
   1400033cd:	int3   
   1400033ce:	int3   
   1400033cf:	int3   
   1400033d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400033d5:	push   rbp
   1400033d6:	mov    rbp,rsp
   1400033d9:	sub    rsp,0x70
   1400033dd:	mov    rax,QWORD PTR [rip+0x6c24]        # 0x14000a008
   1400033e4:	xor    rax,rsp
   1400033e7:	mov    QWORD PTR [rbp-0x10],rax
   1400033eb:	lea    rcx,[rbp-0x50]
   1400033ef:	call   0x140001cc0
   1400033f4:	mov    rcx,QWORD PTR [rbp-0x40]
   1400033f8:	cmp    rcx,0x3
   1400033fc:	jb     0x140003455
   1400033fe:	cmp    QWORD PTR [rbp-0x38],0x10
   140003403:	lea    r8,[rbp-0x50]
   140003407:	lea    rdx,[rbp-0x50]
   14000340b:	mov    QWORD PTR [rbp-0x18],0x7
   140003413:	cmovae r8,QWORD PTR [rbp-0x50]
   140003418:	add    r8,rcx
   14000341b:	lea    rcx,[rbp-0x30]
   14000341f:	cmp    QWORD PTR [rbp-0x38],0x10
   140003424:	cmovae rdx,QWORD PTR [rbp-0x50]
   140003429:	xor    eax,eax
   14000342b:	mov    QWORD PTR [rbp-0x20],rax
   14000342f:	mov    WORD PTR [rbp-0x30],ax
   140003433:	call   0x140003fbc
   140003438:	lea    rdx,[rbp-0x30]
   14000343c:	call   0x14000348c
   140003441:	cmp    QWORD PTR [rbp-0x18],0x8
   140003446:	mov    ebx,eax
   140003448:	jb     0x14000345a
   14000344a:	mov    rcx,QWORD PTR [rbp-0x30]
   14000344e:	call   0x1400045c4
   140003453:	jmp    0x14000345a
   140003455:	mov    ebx,0x80070057
   14000345a:	cmp    QWORD PTR [rbp-0x38],0x10
   14000345f:	jb     0x14000346a
   140003461:	mov    rcx,QWORD PTR [rbp-0x50]
   140003465:	call   0x1400045c4
   14000346a:	mov    eax,ebx
   14000346c:	mov    rcx,QWORD PTR [rbp-0x10]
   140003470:	xor    rcx,rsp
   140003473:	call   0x140004400
   140003478:	mov    rbx,QWORD PTR [rsp+0x80]
   140003480:	add    rsp,0x70
   140003484:	pop    rbp
   140003485:	ret    
   140003486:	int3   
   140003487:	int3   
   140003488:	int3   
   140003489:	int3   
   14000348a:	int3   
   14000348b:	int3   
   14000348c:	mov    rax,rsp
   14000348f:	push   rbp
   140003490:	push   rdi
   140003491:	push   r12
   140003493:	push   r14
   140003495:	push   r15
   140003497:	lea    rbp,[rsp-0x60]
   14000349c:	sub    rsp,0x160
   1400034a3:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   1400034ac:	mov    QWORD PTR [rax+0x8],rbx
   1400034b0:	mov    QWORD PTR [rax+0x18],rsi
   1400034b4:	mov    rax,QWORD PTR [rip+0x6b4d]        # 0x14000a008
   1400034bb:	xor    rax,rsp
   1400034be:	mov    QWORD PTR [rbp+0x58],rax
   1400034c2:	mov    rdi,rdx
   1400034c5:	xor    r14d,r14d
   1400034c8:	mov    DWORD PTR [rbp-0x20],r14d
   1400034cc:	mov    r9b,r14b
   1400034cf:	mov    BYTE PTR [rbp-0x1c],r14b
   1400034d3:	movabs r12,0x400000000000
   1400034dd:	mov    rcx,QWORD PTR [rip+0x6b54]        # 0x14000a038
   1400034e4:	mov    rdx,QWORD PTR [rip+0x6b45]        # 0x14000a030
   1400034eb:	mov    r8d,DWORD PTR [rip+0x6b2e]        # 0x14000a020
   1400034f2:	cmp    r8d,0x5
   1400034f6:	jbe    0x140003531
   1400034f8:	test   r12,rdx
   1400034fb:	je     0x140003531
   1400034fd:	mov    rax,rcx
   140003500:	and    rax,r12
   140003503:	cmp    rax,rcx
   140003506:	jne    0x140003531
   140003508:	lea    rdx,[rbp-0x18]
   14000350c:	lea    ecx,[r14+0x3]
   140003510:	call   QWORD PTR [rip+0x2d92]        # 0x1400062a8
   140003516:	mov    r9b,BYTE PTR [rbp-0x1c]
   14000351a:	mov    rcx,QWORD PTR [rip+0x6b17]        # 0x14000a038
   140003521:	mov    rdx,QWORD PTR [rip+0x6b08]        # 0x14000a030
   140003528:	mov    r8d,DWORD PTR [rip+0x6af1]        # 0x14000a020
   14000352f:	jmp    0x140003537
   140003531:	xor    eax,eax
   140003533:	mov    QWORD PTR [rbp-0x18],rax
   140003537:	mov    DWORD PTR [rbp-0x20],0x1
   14000353e:	cmp    r8d,0x5
   140003542:	jbe    0x1400035ef
   140003548:	test   r12,rdx
   14000354b:	je     0x1400035ef
   140003551:	mov    rax,rcx
   140003554:	and    rax,r12
   140003557:	cmp    rax,rcx
   14000355a:	jne    0x1400035ef
   140003560:	cmp    QWORD PTR [rdi+0x18],0x8
   140003565:	jb     0x14000356c
   140003567:	mov    rcx,QWORD PTR [rdi]
   14000356a:	jmp    0x14000356f
   14000356c:	mov    rcx,rdi
   14000356f:	lea    rdx,[rip+0x35be]        # 0x140006b34
   140003576:	mov    rax,r14
   140003579:	test   rcx,rcx
   14000357c:	je     0x14000358f
   14000357e:	mov    rdx,rcx
   140003581:	or     rax,0xffffffffffffffff
   140003585:	inc    rax
   140003588:	cmp    WORD PTR [rcx+rax*2],r14w
   14000358d:	jne    0x140003585
   14000358f:	mov    QWORD PTR [rbp+0x48],rdx
   140003593:	lea    eax,[rax*2+0x2]
   14000359a:	mov    DWORD PTR [rbp+0x50],eax
   14000359d:	mov    DWORD PTR [rbp+0x54],r14d
   1400035a1:	test   r9b,r9b
   1400035a4:	je     0x1400035c4
   1400035a6:	cmp    DWORD PTR [rbp-0x8],r14d
   1400035aa:	jne    0x1400035be
   1400035ac:	cmp    DWORD PTR [rbp-0x4],r14d
   1400035b0:	jne    0x1400035be
   1400035b2:	cmp    DWORD PTR [rbp+0x0],r14d
   1400035b6:	jne    0x1400035be
   1400035b8:	cmp    DWORD PTR [rbp+0x4],r14d
   1400035bc:	je     0x1400035c4
   1400035be:	lea    r9,[rbp-0x8]
   1400035c2:	jmp    0x1400035c7
   1400035c4:	mov    r9,r14
   1400035c7:	lea    rax,[rbp+0x28]
   1400035cb:	mov    QWORD PTR [rsp+0x28],rax
   1400035d0:	mov    DWORD PTR [rsp+0x20],0x3
   1400035d8:	lea    r8,[rbp-0x18]
   1400035dc:	lea    rdx,[rip+0x4c42]        # 0x140008225
   1400035e3:	lea    rcx,[rip+0x6a36]        # 0x14000a020
   1400035ea:	call   0x1400010dc
   1400035ef:	mov    DWORD PTR [rsp+0x30],r14d
   1400035f4:	mov    r15d,0x7
   1400035fa:	mov    QWORD PTR [rbp-0x28],r15
   1400035fe:	mov    QWORD PTR [rbp-0x30],r14
   140003602:	mov    WORD PTR [rbp-0x40],r14w
   140003607:	movzx  eax,WORD PTR [rip+0x352a]        # 0x140006b38
   14000360e:	neg    ax
   140003611:	sbb    rbx,rbx
   140003614:	and    ebx,0x5
   140003617:	lea    rsi,[rip+0x351a]        # 0x140006b38
   14000361e:	lea    rax,[rbp-0x40]
   140003622:	cmp    rsi,rax
   140003625:	jb     0x14000364f
   140003627:	lea    rax,[rbp-0x40]
   14000362b:	cmp    rax,rsi
   14000362e:	jbe    0x14000364f
   140003630:	lea    rax,[rbp-0x40]
   140003634:	sub    rsi,rax
   140003637:	sar    rsi,1
   14000363a:	mov    r9d,ebx
   14000363d:	mov    r8,rsi
   140003640:	lea    rdx,[rbp-0x40]
   140003644:	lea    rcx,[rbp-0x40]
   140003648:	call   0x140003bdc
   14000364d:	jmp    0x1400036cc
   14000364f:	movabs rax,0x7ffffffffffffffe
   140003659:	cmp    rbx,rax
   14000365c:	jbe    0x140003664
   14000365e:	call   0x14000248c
   140003663:	int3   
   140003664:	cmp    rbx,r15
   140003667:	jbe    0x14000367a
   140003669:	xor    r8d,r8d
   14000366c:	mov    rdx,rbx
   14000366f:	lea    rcx,[rbp-0x40]
   140003673:	call   0x140003e28
   140003678:	jmp    0x140003688
   14000367a:	test   rbx,rbx
   14000367d:	jne    0x14000368d
   14000367f:	mov    QWORD PTR [rbp-0x30],r14
   140003683:	mov    WORD PTR [rbp-0x40],r14w
   140003688:	test   rbx,rbx
   14000368b:	je     0x1400036cc
   14000368d:	lea    rax,[rbp-0x40]
   140003691:	mov    rcx,QWORD PTR [rbp-0x40]
   140003695:	cmp    QWORD PTR [rbp-0x28],0x8
   14000369a:	cmovae rax,rcx
   14000369e:	test   rbx,rbx
   1400036a1:	je     0x1400036b6
   1400036a3:	lea    r8,[rbx+rbx*1]
   1400036a7:	mov    rdx,rsi
   1400036aa:	mov    rcx,rax
   1400036ad:	call   0x1400051aa
   1400036b2:	mov    rcx,QWORD PTR [rbp-0x40]
   1400036b6:	mov    QWORD PTR [rbp-0x30],rbx
   1400036ba:	lea    rax,[rbp-0x40]
   1400036be:	cmp    QWORD PTR [rbp-0x28],0x8
   1400036c3:	cmovae rax,rcx
   1400036c7:	mov    WORD PTR [rax+rbx*2],r14w
   1400036cc:	lea    rdx,[rbp-0x40]
   1400036d0:	cmp    QWORD PTR [rbp-0x28],0x8
   1400036d5:	cmovae rdx,QWORD PTR [rbp-0x40]
   1400036da:	mov    r9,QWORD PTR [rbp-0x30]
   1400036de:	mov    rcx,rdi
   1400036e1:	call   0x140003a78
   1400036e6:	test   rax,rax
   1400036e9:	jne    0x140003780
   1400036ef:	mov    eax,0x3f
   1400036f4:	mov    WORD PTR [rsp+0x38],ax
   1400036f9:	lea    r9d,[rax-0x3e]
   1400036fd:	lea    rdx,[rsp+0x38]
   140003702:	mov    rcx,rdi
   140003705:	call   0x140003a78
   14000370a:	mov    rbx,rax
   14000370d:	mov    r9,rax
   140003710:	mov    r8,QWORD PTR [rbp-0x30]
   140003714:	lea    rdx,[rbp+0x28]
   140003718:	mov    rcx,rdi
   14000371b:	call   0x140003a04
   140003720:	nop
   140003721:	cmp    rbx,0xffffffffffffffff
   140003725:	lea    r8,[rbx+0x1]
   140003729:	jne    0x14000372f
   14000372b:	mov    r8,QWORD PTR [rdi+0x10]
   14000372f:	or     r9,0xffffffffffffffff
   140003733:	lea    rdx,[rbp+0x8]
   140003737:	mov    rcx,rdi
   14000373a:	call   0x140003a04
   14000373f:	nop
   140003740:	lea    r8,[rbp+0x8]
   140003744:	lea    rdx,[rbp+0x28]
   140003748:	call   0x1400038ec
   14000374d:	mov    DWORD PTR [rsp+0x30],eax
   140003751:	cmp    QWORD PTR [rbp+0x20],0x8
   140003756:	jb     0x140003761
   140003758:	mov    rcx,QWORD PTR [rbp+0x8]
   14000375c:	call   0x1400045c4
   140003761:	mov    QWORD PTR [rbp+0x20],r15
   140003765:	mov    QWORD PTR [rbp+0x18],r14
   140003769:	mov    WORD PTR [rbp+0x8],r14w
   14000376e:	cmp    QWORD PTR [rbp+0x40],0x8
   140003773:	jb     0x1400037e1
   140003775:	mov    rcx,QWORD PTR [rbp+0x28]
   140003779:	call   0x1400045c4
   14000377e:	jmp    0x1400037e1
   140003780:	mov    ebx,0x70
   140003785:	mov    r8d,ebx
   140003788:	xor    edx,edx
   14000378a:	lea    rcx,[rsp+0x50]
   14000378f:	call   0x14000503c
   140003794:	mov    DWORD PTR [rsp+0x50],ebx
   140003798:	lea    rax,[rip+0x33a9]        # 0x140006b48
   14000379f:	mov    QWORD PTR [rsp+0x60],rax
   1400037a4:	cmp    QWORD PTR [rdi+0x18],0x8
   1400037a9:	jb     0x1400037ae
   1400037ab:	mov    rdi,QWORD PTR [rdi]
   1400037ae:	mov    QWORD PTR [rsp+0x68],rdi
   1400037b3:	mov    DWORD PTR [rbp-0x80],0x1
   1400037ba:	lea    rcx,[rsp+0x50]
   1400037bf:	call   QWORD PTR [rip+0x2b23]        # 0x1400062e8
   1400037c5:	test   eax,eax
   1400037c7:	jne    0x1400037e1
   1400037c9:	call   QWORD PTR [rip+0x2891]        # 0x140006060
   1400037cf:	movzx  ecx,ax
   1400037d2:	or     ecx,0x80070000
   1400037d8:	test   eax,eax
   1400037da:	cmovle ecx,eax
   1400037dd:	mov    DWORD PTR [rsp+0x30],ecx
   1400037e1:	mov    edi,0x2
   1400037e6:	mov    DWORD PTR [rbp-0x20],edi
   1400037e9:	cmp    DWORD PTR [rip+0x6830],0x5        # 0x14000a020
   1400037f0:	jbe    0x14000384a
   1400037f2:	test   QWORD PTR [rip+0x6837],r12        # 0x14000a030
   1400037f9:	je     0x14000384a
   1400037fb:	mov    rax,QWORD PTR [rip+0x6836]        # 0x14000a038
   140003802:	and    rax,r12
   140003805:	cmp    rax,QWORD PTR [rip+0x682c]        # 0x14000a038
   14000380c:	jne    0x14000384a
   14000380e:	lea    rax,[rsp+0x30]
   140003813:	mov    QWORD PTR [rbp+0x48],rax
   140003817:	mov    QWORD PTR [rbp+0x50],0x4
   14000381f:	lea    rax,[rbp+0x28]
   140003823:	mov    QWORD PTR [rsp+0x28],rax
   140003828:	mov    DWORD PTR [rsp+0x20],0x3
   140003830:	xor    r9d,r9d
   140003833:	lea    r8,[rbp-0x18]
   140003837:	lea    rdx,[rip+0x4a05]        # 0x140008243
   14000383e:	lea    rcx,[rip+0x67db]        # 0x14000a020
   140003845:	call   0x1400010dc
   14000384a:	mov    ebx,DWORD PTR [rsp+0x30]
   14000384e:	cmp    QWORD PTR [rbp-0x28],0x8
   140003853:	jb     0x14000385e
   140003855:	mov    rcx,QWORD PTR [rbp-0x40]
   140003859:	call   0x1400045c4
   14000385e:	mov    QWORD PTR [rbp-0x28],r15
   140003862:	mov    QWORD PTR [rbp-0x30],r14
   140003866:	mov    WORD PTR [rbp-0x40],r14w
   14000386b:	cmp    DWORD PTR [rbp-0x20],0x1
   14000386f:	jne    0x140003884
   140003871:	mov    DWORD PTR [rbp-0x20],edi
   140003874:	lea    rdx,[rbp-0x18]
   140003878:	lea    rcx,[rip+0x67a1]        # 0x14000a020
   14000387f:	call   0x140003f48
   140003884:	mov    eax,ebx
   140003886:	mov    rcx,QWORD PTR [rbp+0x58]
   14000388a:	xor    rcx,rsp
   14000388d:	call   0x140004400
   140003892:	lea    r11,[rsp+0x160]
   14000389a:	mov    rbx,QWORD PTR [r11+0x30]
   14000389e:	mov    rsi,QWORD PTR [r11+0x40]
   1400038a2:	mov    rsp,r11
   1400038a5:	pop    r15
   1400038a7:	pop    r14
   1400038a9:	pop    r12
   1400038ab:	pop    rdi
   1400038ac:	pop    rbp
   1400038ad:	ret    
   1400038ae:	int3   
   1400038af:	int3   
   1400038b0:	int3   
   1400038b1:	int3   
   1400038b2:	int3   
   1400038b3:	int3   
   1400038b4:	rex push rbx
   1400038b6:	sub    rsp,0x20
   1400038ba:	cmp    DWORD PTR [rcx],0x1
   1400038bd:	mov    rbx,rcx
   1400038c0:	jne    0x1400038d8
   1400038c2:	mov    DWORD PTR [rcx],0x2
   1400038c8:	lea    rdx,[rcx+0x8]
   1400038cc:	lea    rcx,[rip+0x674d]        # 0x14000a020
   1400038d3:	call   0x140003f48
   1400038d8:	mov    DWORD PTR [rbx],0x3
   1400038de:	add    rsp,0x20
   1400038e2:	pop    rbx
   1400038e3:	ret    
   1400038e4:	int3   
   1400038e5:	int3   
   1400038e6:	int3   
   1400038e7:	int3   
   1400038e8:	int3   
   1400038e9:	int3   
   1400038ea:	int3   
   1400038eb:	int3   
   1400038ec:	mov    r11,rsp
   1400038ef:	mov    QWORD PTR [r11+0x8],rcx
   1400038f3:	push   rsi
   1400038f4:	push   rdi
   1400038f5:	push   r14
   1400038f7:	sub    rsp,0x40
   1400038fb:	mov    QWORD PTR [r11-0x28],0xfffffffffffffffe
   140003903:	mov    QWORD PTR [r11+0x10],rbx
   140003907:	mov    r14,r8
   14000390a:	mov    rsi,rdx
   14000390d:	and    QWORD PTR [r11+0x20],0x0
   140003912:	lea    rax,[r11+0x20]
   140003916:	mov    QWORD PTR [r11-0x38],rax
   14000391a:	lea    r9,[rip+0x3247]        # 0x140006b68
   140003921:	xor    edx,edx
   140003923:	lea    r8d,[rdx+0x4]
   140003927:	lea    rcx,[rip+0x322a]        # 0x140006b58
   14000392e:	call   QWORD PTR [rip+0x26cc]        # 0x140006000
   140003934:	mov    edi,eax
   140003936:	test   eax,eax
   140003938:	js     0x140003990
   14000393a:	xor    edx,edx
   14000393c:	mov    rcx,QWORD PTR [rsp+0x78]
   140003941:	call   QWORD PTR [rip+0x2991]        # 0x1400062d8
   140003947:	mov    edi,eax
   140003949:	test   eax,eax
   14000394b:	js     0x140003990
   14000394d:	cmp    QWORD PTR [r14+0x18],0x8
   140003952:	jb     0x140003957
   140003954:	mov    r14,QWORD PTR [r14]
   140003957:	cmp    QWORD PTR [rsi+0x18],0x8
   14000395c:	jb     0x140003961
   14000395e:	mov    rsi,QWORD PTR [rsi]
   140003961:	mov    rbx,QWORD PTR [rsp+0x78]
   140003966:	mov    rax,QWORD PTR [rbx]
   140003969:	mov    rdi,QWORD PTR [rax+0x18]
   14000396d:	mov    rcx,rdi
   140003970:	call   QWORD PTR [rip+0x29d2]        # 0x140006348
   140003976:	lea    rax,[rsp+0x60]
   14000397b:	mov    QWORD PTR [rsp+0x20],rax
   140003980:	xor    r9d,r9d
   140003983:	mov    r8,r14
   140003986:	mov    rdx,rsi
   140003989:	mov    rcx,rbx
   14000398c:	call   rdi
   14000398e:	mov    edi,eax
   140003990:	mov    rsi,QWORD PTR [rsp+0x78]
   140003995:	test   rsi,rsi
   140003998:	je     0x1400039b5
   14000399a:	and    QWORD PTR [rsp+0x78],0x0
   1400039a0:	mov    rax,QWORD PTR [rsi]
   1400039a3:	mov    rbx,QWORD PTR [rax+0x10]
   1400039a7:	mov    rcx,rbx
   1400039aa:	call   QWORD PTR [rip+0x2998]        # 0x140006348
   1400039b0:	mov    rcx,rsi
   1400039b3:	call   rbx
   1400039b5:	mov    eax,edi
   1400039b7:	mov    rbx,QWORD PTR [rsp+0x68]
   1400039bc:	add    rsp,0x40
   1400039c0:	pop    r14
   1400039c2:	pop    rdi
   1400039c3:	pop    rsi
   1400039c4:	ret    
   1400039c5:	int3   
   1400039c6:	int3   
   1400039c7:	int3   
   1400039c8:	int3   
   1400039c9:	int3   
   1400039ca:	int3   
   1400039cb:	int3   
   1400039cc:	rex push rbx
   1400039ce:	sub    rsp,0x20
   1400039d2:	cmp    QWORD PTR [rcx+0x18],0x8
   1400039d7:	mov    rbx,rcx
   1400039da:	jb     0x1400039e4
   1400039dc:	mov    rcx,QWORD PTR [rcx]
   1400039df:	call   0x1400045c4
   1400039e4:	xor    eax,eax
   1400039e6:	mov    QWORD PTR [rbx+0x18],0x7
   1400039ee:	mov    QWORD PTR [rbx+0x10],rax
   1400039f2:	mov    WORD PTR [rbx],ax
   1400039f5:	add    rsp,0x20
   1400039f9:	pop    rbx
   1400039fa:	ret    
   1400039fb:	int3   
   1400039fc:	int3   
   1400039fd:	int3   
   1400039fe:	int3   
   1400039ff:	int3   
   140003a00:	int3   
   140003a01:	int3   
   140003a02:	int3   
   140003a03:	int3   
   140003a04:	rex push rbx
   140003a06:	sub    rsp,0x30
   140003a0a:	xor    eax,eax
   140003a0c:	mov    QWORD PTR [rdx+0x18],0x7
   140003a14:	mov    QWORD PTR [rdx+0x10],rax
   140003a18:	mov    rbx,rdx
   140003a1b:	mov    WORD PTR [rdx],ax
   140003a1e:	mov    rdx,rcx
   140003a21:	mov    rcx,rbx
   140003a24:	mov    DWORD PTR [rsp+0x20],eax
   140003a28:	call   0x140003bdc
   140003a2d:	mov    rax,rbx
   140003a30:	add    rsp,0x30
   140003a34:	pop    rbx
   140003a35:	ret    
   140003a36:	int3   
   140003a37:	int3   
   140003a38:	int3   
   140003a39:	int3   
   140003a3a:	int3   
   140003a3b:	int3   
   140003a3c:	mov    QWORD PTR [rsp+0x8],rbx
   140003a41:	push   rdi
   140003a42:	sub    rsp,0x20
   140003a46:	mov    rdi,QWORD PTR [rcx]
   140003a49:	test   rdi,rdi
   140003a4c:	je     0x140003a67
   140003a4e:	and    QWORD PTR [rcx],0x0
   140003a52:	mov    rax,QWORD PTR [rdi]
   140003a55:	mov    rbx,QWORD PTR [rax+0x10]
   140003a59:	mov    rcx,rbx
   140003a5c:	call   QWORD PTR [rip+0x28e6]        # 0x140006348
   140003a62:	mov    rcx,rdi
   140003a65:	call   rbx
   140003a67:	mov    rbx,QWORD PTR [rsp+0x30]
   140003a6c:	add    rsp,0x20
   140003a70:	pop    rdi
   140003a71:	ret    
   140003a72:	int3   
   140003a73:	int3   
   140003a74:	int3   
   140003a75:	int3   
   140003a76:	int3   
   140003a77:	int3   
   140003a78:	mov    QWORD PTR [rsp+0x8],rbx
   140003a7d:	mov    QWORD PTR [rsp+0x10],rsi
   140003a82:	mov    QWORD PTR [rsp+0x18],rdi
   140003a87:	mov    r11,r9
   140003a8a:	mov    rsi,rdx
   140003a8d:	mov    r8,rcx
   140003a90:	test   r9,r9
   140003a93:	jne    0x140003a9c
   140003a95:	xor    eax,eax
   140003a97:	jmp    0x140003b56
   140003a9c:	mov    r9,QWORD PTR [rcx+0x10]
   140003aa0:	test   r9,r9
   140003aa3:	je     0x140003b52
   140003aa9:	cmp    r11,r9
   140003aac:	ja     0x140003b52
   140003ab2:	mov    eax,0x1
   140003ab7:	sub    rax,r11
   140003aba:	add    r9,rax
   140003abd:	cmp    QWORD PTR [rcx+0x18],0x8
   140003ac2:	jb     0x140003ac9
   140003ac4:	mov    rdi,QWORD PTR [rcx]
   140003ac7:	jmp    0x140003acc
   140003ac9:	mov    rdi,rcx
   140003acc:	test   r9,r9
   140003acf:	je     0x140003ae9
   140003ad1:	movzx  ecx,WORD PTR [rsi]
   140003ad4:	mov    rax,r9
   140003ad7:	mov    rdx,rdi
   140003ada:	cmp    WORD PTR [rdx],cx
   140003add:	je     0x140003aeb
   140003adf:	add    rdx,0x2
   140003ae3:	sub    rax,0x1
   140003ae7:	jne    0x140003ada
   140003ae9:	xor    edx,edx
   140003aeb:	test   rdx,rdx
   140003aee:	je     0x140003b52
   140003af0:	mov    rbx,r11
   140003af3:	mov    rcx,rsi
   140003af6:	mov    r10,rdx
   140003af9:	test   r11,r11
   140003afc:	je     0x140003b15
   140003afe:	movzx  eax,WORD PTR [rcx]
   140003b01:	cmp    WORD PTR [r10],ax
   140003b05:	jne    0x140003b34
   140003b07:	add    r10,0x2
   140003b0b:	add    rcx,0x2
   140003b0f:	sub    rbx,0x1
   140003b13:	jne    0x140003afe
   140003b15:	xor    eax,eax
   140003b17:	test   eax,eax
   140003b19:	je     0x140003b3d
   140003b1b:	or     rax,0xffffffffffffffff
   140003b1f:	mov    rcx,rdx
   140003b22:	sub    rcx,rdi
   140003b25:	lea    rdi,[rdx+0x2]
   140003b29:	sar    rcx,1
   140003b2c:	sub    rax,rcx
   140003b2f:	add    r9,rax
   140003b32:	jmp    0x140003acc
   140003b34:	sbb    eax,eax
   140003b36:	and    eax,0xfffffffe
   140003b39:	inc    eax
   140003b3b:	jmp    0x140003b17
   140003b3d:	cmp    QWORD PTR [r8+0x18],0x8
   140003b42:	jb     0x140003b47
   140003b44:	mov    r8,QWORD PTR [r8]
   140003b47:	sub    rdx,r8
   140003b4a:	sar    rdx,1
   140003b4d:	mov    rax,rdx
   140003b50:	jmp    0x140003b56
   140003b52:	or     rax,0xffffffffffffffff
   140003b56:	mov    rbx,QWORD PTR [rsp+0x8]
   140003b5b:	mov    rsi,QWORD PTR [rsp+0x10]
   140003b60:	mov    rdi,QWORD PTR [rsp+0x18]
   140003b65:	ret    
   140003b66:	int3   
   140003b67:	int3   
   140003b68:	int3   
   140003b69:	int3   
   140003b6a:	int3   
   140003b6b:	int3   
   140003b6c:	mov    QWORD PTR [rsp+0x8],rbx
   140003b71:	mov    QWORD PTR [rsp+0x10],rbp
   140003b76:	mov    QWORD PTR [rsp+0x18],rsi
   140003b7b:	push   rdi
   140003b7c:	sub    rsp,0x20
   140003b80:	xor    ebp,ebp
   140003b82:	mov    rdi,r8
   140003b85:	mov    rbx,rcx
   140003b88:	test   dl,dl
   140003b8a:	je     0x140003bae
   140003b8c:	cmp    QWORD PTR [rcx+0x18],0x8
   140003b91:	jb     0x140003bae
   140003b93:	mov    rsi,QWORD PTR [rcx]
   140003b96:	test   r8,r8
   140003b99:	je     0x140003ba6
   140003b9b:	add    r8,r8
   140003b9e:	mov    rdx,rsi
   140003ba1:	call   0x1400051aa
   140003ba6:	mov    rcx,rsi
   140003ba9:	call   0x1400045c4
   140003bae:	mov    rsi,QWORD PTR [rsp+0x40]
   140003bb3:	mov    QWORD PTR [rbx+0x18],0x7
   140003bbb:	mov    QWORD PTR [rbx+0x10],rdi
   140003bbf:	mov    WORD PTR [rbx+rdi*2],bp
   140003bc3:	mov    rbx,QWORD PTR [rsp+0x30]
   140003bc8:	mov    rbp,QWORD PTR [rsp+0x38]
   140003bcd:	add    rsp,0x20
   140003bd1:	pop    rdi
   140003bd2:	ret    
   140003bd3:	int3   
   140003bd4:	int3   
   140003bd5:	int3   
   140003bd6:	int3   
   140003bd7:	int3   
   140003bd8:	int3   
   140003bd9:	int3   
   140003bda:	int3   
   140003bdb:	int3   
   140003bdc:	mov    rax,rsp
   140003bdf:	mov    QWORD PTR [rax+0x8],rbx
   140003be3:	mov    QWORD PTR [rax+0x10],rbp
   140003be7:	mov    QWORD PTR [rax+0x18],rsi
   140003beb:	mov    QWORD PTR [rax+0x20],rdi
   140003bef:	push   r14
   140003bf1:	sub    rsp,0x20
   140003bf5:	mov    rdi,QWORD PTR [rdx+0x10]
   140003bf9:	mov    rbp,r8
   140003bfc:	mov    r14,rdx
   140003bff:	mov    rbx,rcx
   140003c02:	cmp    rdi,r8
   140003c05:	jb     0x140003d3a
   140003c0b:	sub    rdi,r8
   140003c0e:	cmp    r9,rdi
   140003c11:	cmovb  rdi,r9
   140003c15:	cmp    rcx,rdx
   140003c18:	jne    0x140003c91
   140003c1a:	lea    rax,[rdi+r8*1]
   140003c1e:	cmp    QWORD PTR [rcx+0x10],rax
   140003c22:	jb     0x140003d40
   140003c28:	cmp    QWORD PTR [rcx+0x18],0x8
   140003c2d:	mov    QWORD PTR [rcx+0x10],rax
   140003c31:	jb     0x140003c36
   140003c33:	mov    rcx,QWORD PTR [rcx]
   140003c36:	xor    esi,esi
   140003c38:	mov    WORD PTR [rcx+rax*2],si
   140003c3c:	mov    rdi,QWORD PTR [rbx+0x10]
   140003c40:	cmp    rdi,r8
   140003c43:	ja     0x140003c60
   140003c45:	cmp    QWORD PTR [rbx+0x18],0x8
   140003c4a:	mov    QWORD PTR [rbx+0x10],rsi
   140003c4e:	jb     0x140003c55
   140003c50:	mov    rax,QWORD PTR [rbx]
   140003c53:	jmp    0x140003c58
   140003c55:	mov    rax,rbx
   140003c58:	mov    WORD PTR [rax],si
   140003c5b:	jmp    0x140003d1c
   140003c60:	test   r8,r8
   140003c63:	je     0x140003d1c
   140003c69:	cmp    QWORD PTR [rbx+0x18],0x8
   140003c6e:	jb     0x140003c75
   140003c70:	mov    rcx,QWORD PTR [rbx]
   140003c73:	jmp    0x140003c78
   140003c75:	mov    rcx,rbx
   140003c78:	sub    rdi,r8
   140003c7b:	je     0x140003d05
   140003c81:	lea    r8,[rdi+rdi*1]
   140003c85:	lea    rdx,[rcx+rbp*2]
   140003c89:	call   QWORD PTR [rip+0x25d1]        # 0x140006260
   140003c8f:	jmp    0x140003d05
   140003c91:	movabs rax,0x7ffffffffffffffe
   140003c9b:	cmp    rdi,rax
   140003c9e:	ja     0x140003d46
   140003ca4:	xor    esi,esi
   140003ca6:	cmp    QWORD PTR [rcx+0x18],rdi
   140003caa:	jae    0x140003cba
   140003cac:	mov    r8,QWORD PTR [rcx+0x10]
   140003cb0:	mov    rdx,rdi
   140003cb3:	call   0x140003e28
   140003cb8:	jmp    0x140003cd5
   140003cba:	test   rdi,rdi
   140003cbd:	jne    0x140003cda
   140003cbf:	cmp    QWORD PTR [rcx+0x18],0x8
   140003cc4:	mov    QWORD PTR [rcx+0x10],rsi
   140003cc8:	jb     0x140003ccf
   140003cca:	mov    rax,QWORD PTR [rcx]
   140003ccd:	jmp    0x140003cd2
   140003ccf:	mov    rax,rcx
   140003cd2:	mov    WORD PTR [rax],si
   140003cd5:	test   rdi,rdi
   140003cd8:	je     0x140003d1c
   140003cda:	cmp    QWORD PTR [r14+0x18],0x8
   140003cdf:	jb     0x140003ce4
   140003ce1:	mov    r14,QWORD PTR [r14]
   140003ce4:	cmp    QWORD PTR [rbx+0x18],0x8
   140003ce9:	jb     0x140003cf0
   140003ceb:	mov    rcx,QWORD PTR [rbx]
   140003cee:	jmp    0x140003cf3
   140003cf0:	mov    rcx,rbx
   140003cf3:	test   rdi,rdi
   140003cf6:	je     0x140003d05
   140003cf8:	lea    r8,[rdi+rdi*1]
   140003cfc:	lea    rdx,[r14+rbp*2]
   140003d00:	call   0x1400051aa
   140003d05:	cmp    QWORD PTR [rbx+0x18],0x8
   140003d0a:	mov    QWORD PTR [rbx+0x10],rdi
   140003d0e:	jb     0x140003d15
   140003d10:	mov    rax,QWORD PTR [rbx]
   140003d13:	jmp    0x140003d18
   140003d15:	mov    rax,rbx
   140003d18:	mov    WORD PTR [rax+rdi*2],si
   140003d1c:	mov    rbp,QWORD PTR [rsp+0x38]
   140003d21:	mov    rax,rbx
   140003d24:	mov    rbx,QWORD PTR [rsp+0x30]
   140003d29:	mov    rsi,QWORD PTR [rsp+0x40]
   140003d2e:	mov    rdi,QWORD PTR [rsp+0x48]
   140003d33:	add    rsp,0x20
   140003d37:	pop    r14
   140003d39:	ret    
   140003d3a:	call   0x1400024a4
   140003d3f:	int3   
   140003d40:	call   0x1400024a4
   140003d45:	int3   
   140003d46:	call   0x14000248c
   140003d4b:	int3   
   140003d4c:	int3   
   140003d4d:	int3   
   140003d4e:	int3   
   140003d4f:	int3   
   140003d50:	int3   
   140003d51:	int3   
   140003d52:	int3   
   140003d53:	int3   
   140003d54:	mov    rax,rsp
   140003d57:	mov    QWORD PTR [rax+0x8],rbx
   140003d5b:	mov    QWORD PTR [rax+0x10],rbp
   140003d5f:	mov    QWORD PTR [rax+0x18],rsi
   140003d63:	mov    QWORD PTR [rax+0x20],rdi
   140003d67:	push   r14
   140003d69:	sub    rsp,0x20
   140003d6d:	movabs rax,0x7ffffffffffffffe
   140003d77:	mov    rsi,rdx
   140003d7a:	mov    rbx,rcx
   140003d7d:	cmp    rdx,rax
   140003d80:	ja     0x140003e1c
   140003d86:	xor    edi,edi
   140003d88:	cmp    QWORD PTR [rcx+0x18],rdx
   140003d8c:	jae    0x140003d99
   140003d8e:	mov    r8,QWORD PTR [rcx+0x10]
   140003d92:	call   0x140003e28
   140003d97:	jmp    0x140003dfb
   140003d99:	test   r8b,r8b
   140003d9c:	je     0x140003de5
   140003d9e:	cmp    rdx,0x8
   140003da2:	jae    0x140003de5
   140003da4:	mov    r14,QWORD PTR [rcx+0x10]
   140003da8:	cmp    rdx,r14
   140003dab:	cmovb  r14,rdx
   140003daf:	cmp    QWORD PTR [rcx+0x18],0x8
   140003db4:	jb     0x140003dd2
   140003db6:	mov    rbp,QWORD PTR [rcx]
   140003db9:	test   r14,r14
   140003dbc:	je     0x140003dca
   140003dbe:	lea    r8,[r14+r14*1]
   140003dc2:	mov    rdx,rbp
   140003dc5:	call   0x1400051aa
   140003dca:	mov    rcx,rbp
   140003dcd:	call   0x1400045c4
   140003dd2:	mov    QWORD PTR [rbx+0x18],0x7
   140003dda:	mov    QWORD PTR [rbx+0x10],r14
   140003dde:	mov    WORD PTR [rbx+r14*2],di
   140003de3:	jmp    0x140003dfb
   140003de5:	test   rdx,rdx
   140003de8:	jne    0x140003dfb
   140003dea:	cmp    QWORD PTR [rcx+0x18],0x8
   140003def:	mov    QWORD PTR [rcx+0x10],rdi
   140003df3:	jb     0x140003df8
   140003df5:	mov    rbx,QWORD PTR [rcx]
   140003df8:	mov    WORD PTR [rbx],di
   140003dfb:	mov    rbx,QWORD PTR [rsp+0x30]
   140003e00:	test   rsi,rsi
   140003e03:	mov    rbp,QWORD PTR [rsp+0x38]
   140003e08:	mov    rsi,QWORD PTR [rsp+0x40]
   140003e0d:	setne  al
   140003e10:	mov    rdi,QWORD PTR [rsp+0x48]
   140003e15:	add    rsp,0x20
   140003e19:	pop    r14
   140003e1b:	ret    
   140003e1c:	call   0x14000248c
   140003e21:	int3   
   140003e22:	int3   
   140003e23:	int3   
   140003e24:	int3   
   140003e25:	int3   
   140003e26:	int3   
   140003e27:	int3   
   140003e28:	mov    rax,rsp
   140003e2b:	mov    QWORD PTR [rax+0x18],r8
   140003e2f:	mov    QWORD PTR [rax+0x10],rdx
   140003e33:	mov    QWORD PTR [rax+0x8],rcx
   140003e37:	push   rbx
   140003e38:	push   rsi
   140003e39:	push   rdi
   140003e3a:	push   r14
   140003e3c:	push   r15
   140003e3e:	sub    rsp,0x30
   140003e42:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   140003e4a:	mov    r14,r8
   140003e4d:	mov    rbx,rcx
   140003e50:	mov    rdi,rdx
   140003e53:	or     rdi,0x7
   140003e57:	movabs r9,0x7ffffffffffffffe
   140003e61:	cmp    rdi,r9
   140003e64:	jbe    0x140003e6b
   140003e66:	mov    rdi,rdx
   140003e69:	jmp    0x140003e9c
   140003e6b:	mov    r8,QWORD PTR [rcx+0x18]
   140003e6f:	mov    rcx,r8
   140003e72:	shr    rcx,1
   140003e75:	movabs rax,0xaaaaaaaaaaaaaaab
   140003e7f:	mul    rdi
   140003e82:	shr    rdx,1
   140003e85:	cmp    rcx,rdx
   140003e88:	jbe    0x140003e9c
   140003e8a:	mov    rax,r9
   140003e8d:	sub    rax,rcx
   140003e90:	cmp    r8,rax
   140003e93:	lea    rdi,[rcx+r8*1]
   140003e97:	jbe    0x140003e9c
   140003e99:	mov    rdi,r9
   140003e9c:	lea    rcx,[rdi+0x1]
   140003ea0:	xor    esi,esi
   140003ea2:	mov    r15d,esi
   140003ea5:	test   rcx,rcx
   140003ea8:	je     0x140003ed0
   140003eaa:	movabs rax,0x7fffffffffffffff
   140003eb4:	cmp    rcx,rax
   140003eb7:	ja     0x140003ec9
   140003eb9:	add    rcx,rcx
   140003ebc:	call   0x1400045fc
   140003ec1:	mov    r15,rax
   140003ec4:	test   rax,rax
   140003ec7:	jne    0x140003ed0
   140003ec9:	call   QWORD PTR [rip+0x2429]        # 0x1400062f8
   140003ecf:	nop
   140003ed0:	jmp    0x140003ee8
   140003ed2:	xor    esi,esi
   140003ed4:	mov    rbx,QWORD PTR [rsp+0x60]
   140003ed9:	mov    r14,QWORD PTR [rsp+0x70]
   140003ede:	mov    rdi,QWORD PTR [rsp+0x68]
   140003ee3:	mov    r15,QWORD PTR [rsp+0x78]
   140003ee8:	test   r14,r14
   140003eeb:	je     0x140003f0d
   140003eed:	cmp    QWORD PTR [rbx+0x18],0x8
   140003ef2:	jb     0x140003ef9
   140003ef4:	mov    rdx,QWORD PTR [rbx]
   140003ef7:	jmp    0x140003efc
   140003ef9:	mov    rdx,rbx
   140003efc:	test   r14,r14
   140003eff:	je     0x140003f0d
   140003f01:	lea    r8,[r14+r14*1]
   140003f05:	mov    rcx,r15
   140003f08:	call   0x1400051aa
   140003f0d:	cmp    QWORD PTR [rbx+0x18],0x8
   140003f12:	jb     0x140003f1c
   140003f14:	mov    rcx,QWORD PTR [rbx]
   140003f17:	call   0x1400045c4
   140003f1c:	mov    QWORD PTR [rbx],r15
   140003f1f:	mov    QWORD PTR [rbx+0x18],rdi
   140003f23:	mov    QWORD PTR [rbx+0x10],r14
   140003f27:	cmp    rdi,0x8
   140003f2b:	jb     0x140003f30
   140003f2d:	mov    rbx,r15
   140003f30:	mov    WORD PTR [rbx+r14*2],si
   140003f35:	add    rsp,0x30
   140003f39:	pop    r15
   140003f3b:	pop    r14
   140003f3d:	pop    rdi
   140003f3e:	pop    rsi
   140003f3f:	pop    rbx
   140003f40:	ret    
   140003f41:	int3   
   140003f42:	int3   
   140003f43:	int3   
   140003f44:	int3   
   140003f45:	int3   
   140003f46:	int3   
   140003f47:	int3   
   140003f48:	sub    rsp,0x68
   140003f4c:	mov    rax,QWORD PTR [rip+0x60b5]        # 0x14000a008
   140003f53:	xor    rax,rsp
   140003f56:	mov    QWORD PTR [rsp+0x50],rax
   140003f5b:	cmp    DWORD PTR [rcx],0x5
   140003f5e:	jbe    0x140003fa1
   140003f60:	movabs r8,0x400000000000
   140003f6a:	test   QWORD PTR [rcx+0x10],r8
   140003f6e:	je     0x140003fa1
   140003f70:	mov    rax,QWORD PTR [rcx+0x18]
   140003f74:	and    rax,r8
   140003f77:	cmp    rax,QWORD PTR [rcx+0x18]
   140003f7b:	jne    0x140003fa1
   140003f7d:	lea    rax,[rsp+0x30]
   140003f82:	mov    r8,rdx
   140003f85:	mov    QWORD PTR [rsp+0x28],rax
   140003f8a:	lea    rdx,[rip+0x4268]        # 0x1400081f9
   140003f91:	xor    r9d,r9d
   140003f94:	mov    DWORD PTR [rsp+0x20],0x2
   140003f9c:	call   0x1400010dc
   140003fa1:	mov    rcx,QWORD PTR [rsp+0x50]
   140003fa6:	xor    rcx,rsp
   140003fa9:	call   0x140004400
   140003fae:	add    rsp,0x68
   140003fb2:	ret    
   140003fb3:	int3   
   140003fb4:	int3   
   140003fb5:	int3   
   140003fb6:	int3   
   140003fb7:	int3   
   140003fb8:	int3   
   140003fb9:	int3   
   140003fba:	int3   
   140003fbb:	int3   
   140003fbc:	mov    rax,rsp
   140003fbf:	mov    QWORD PTR [rax+0x18],r8
   140003fc3:	mov    QWORD PTR [rax+0x10],rdx
   140003fc7:	mov    QWORD PTR [rax+0x8],rcx
   140003fcb:	push   rsi
   140003fcc:	push   rdi
   140003fcd:	push   r14
   140003fcf:	sub    rsp,0x30
   140003fd3:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   140003fdb:	mov    QWORD PTR [rax+0x20],rbx
   140003fdf:	mov    rax,r8
   140003fe2:	mov    rbx,rcx
   140003fe5:	sub    rax,rdx
   140003fe8:	mov    rdi,QWORD PTR [rcx+0x10]
   140003fec:	cmp    rdi,rax
   140003fef:	ja     0x140004021
   140003ff1:	cmp    QWORD PTR [rcx+0x18],rax
   140003ff5:	je     0x140004021
   140003ff7:	mov    r8b,0x1
   140003ffa:	mov    rdx,rax
   140003ffd:	call   0x140003d54
   140004002:	xor    esi,esi
   140004004:	test   al,al
   140004006:	je     0x140004023
   140004008:	mov    QWORD PTR [rbx+0x10],rdi
   14000400c:	cmp    QWORD PTR [rbx+0x18],0x8
   140004011:	jb     0x140004018
   140004013:	mov    rax,QWORD PTR [rbx]
   140004016:	jmp    0x14000401b
   140004018:	mov    rax,rbx
   14000401b:	mov    WORD PTR [rax+rdi*2],si
   14000401f:	jmp    0x140004023
   140004021:	xor    esi,esi
   140004023:	mov    rdx,QWORD PTR [rsp+0x58]
   140004028:	cmp    rdx,QWORD PTR [rsp+0x60]
   14000402d:	je     0x1400040d1
   140004033:	movsx  r14d,BYTE PTR [rdx]
   140004037:	mov    r8,QWORD PTR [rbx+0x10]
   14000403b:	or     rax,0xffffffffffffffff
   14000403f:	sub    rax,r8
   140004042:	cmp    rax,0x1
   140004046:	ja     0x14000404d
   140004048:	call   0x14000248c
   14000404d:	lea    rdi,[r8+0x1]
   140004051:	movabs rax,0x7ffffffffffffffe
   14000405b:	cmp    rdi,rax
   14000405e:	jbe    0x140004065
   140004060:	call   0x14000248c
   140004065:	cmp    QWORD PTR [rbx+0x18],rdi
   140004069:	jae    0x140004078
   14000406b:	mov    rdx,rdi
   14000406e:	mov    rcx,rbx
   140004071:	call   0x140003e28
   140004076:	jmp    0x140004093
   140004078:	test   rdi,rdi
   14000407b:	jne    0x140004098
   14000407d:	mov    QWORD PTR [rbx+0x10],rsi
   140004081:	cmp    QWORD PTR [rbx+0x18],0x8
   140004086:	jb     0x14000408d
   140004088:	mov    rax,QWORD PTR [rbx]
   14000408b:	jmp    0x140004090
   14000408d:	mov    rax,rbx
   140004090:	mov    WORD PTR [rax],si
   140004093:	test   rdi,rdi
   140004096:	je     0x1400040c7
   140004098:	mov    rcx,QWORD PTR [rbx+0x10]
   14000409c:	cmp    QWORD PTR [rbx+0x18],0x8
   1400040a1:	jb     0x1400040a8
   1400040a3:	mov    rax,QWORD PTR [rbx]
   1400040a6:	jmp    0x1400040ab
   1400040a8:	mov    rax,rbx
   1400040ab:	mov    WORD PTR [rax+rcx*2],r14w
   1400040b0:	mov    QWORD PTR [rbx+0x10],rdi
   1400040b4:	cmp    QWORD PTR [rbx+0x18],0x8
   1400040b9:	jb     0x1400040c0
   1400040bb:	mov    rax,QWORD PTR [rbx]
   1400040be:	jmp    0x1400040c3
   1400040c0:	mov    rax,rbx
   1400040c3:	mov    WORD PTR [rax+rdi*2],si
   1400040c7:	inc    QWORD PTR [rsp+0x58]
   1400040cc:	jmp    0x140004023
   1400040d1:	mov    rbx,QWORD PTR [rsp+0x68]
   1400040d6:	add    rsp,0x30
   1400040da:	pop    r14
   1400040dc:	pop    rdi
   1400040dd:	pop    rsi
   1400040de:	ret    
   1400040df:	int3   
   1400040e0:	int3   
   1400040e1:	int3   
   1400040e2:	int3   
   1400040e3:	int3   
   1400040e4:	int3   
   1400040e5:	int3   
   1400040e6:	int3   
   1400040e7:	int3   
   1400040e8:	int3   
   1400040e9:	int3   
   1400040ea:	int3   
   1400040eb:	int3   
   1400040ec:	int3   
   1400040ed:	int3   
   1400040ee:	int3   
   1400040ef:	int3   
   1400040f0:	sub    rsp,0x28
   1400040f4:	call   0x140004114
   1400040f9:	or     QWORD PTR [rax],0x4
   1400040fd:	call   0x140004124
   140004102:	or     QWORD PTR [rax],0x2
   140004106:	xor    eax,eax
   140004108:	add    rsp,0x28
   14000410c:	ret    
   14000410d:	int3   
   14000410e:	int3   
   14000410f:	int3   
   140004110:	int3   
   140004111:	int3   
   140004112:	int3   
   140004113:	int3   
   140004114:	lea    rax,[rip+0x6e75]        # 0x14000af90
   14000411b:	ret    
   14000411c:	int3   
   14000411d:	int3   
   14000411e:	int3   
   14000411f:	int3   
   140004120:	int3   
   140004121:	int3   
   140004122:	int3   
   140004123:	int3   
   140004124:	lea    rax,[rip+0x6e6d]        # 0x14000af98
   14000412b:	ret    
   14000412c:	int3   
   14000412d:	int3   
   14000412e:	int3   
   14000412f:	int3   
   140004130:	int3   
   140004131:	int3   
   140004132:	int3   
   140004133:	int3   
   140004134:	int3   
   140004135:	int3   
   140004136:	int3   
   140004137:	int3   
   140004138:	int3   
   140004139:	int3   
   14000413a:	int3   
   14000413b:	int3   
   14000413c:	int3   
   14000413d:	int3   
   14000413e:	int3   
   14000413f:	int3   
   140004140:	sub    rsp,0x28
   140004144:	call   0x140004114
   140004149:	or     QWORD PTR [rax],0x18
   14000414d:	call   0x140004124
   140004152:	or     QWORD PTR [rax],0x4
   140004156:	xor    eax,eax
   140004158:	add    rsp,0x28
   14000415c:	ret    
   14000415d:	int3   
   14000415e:	int3   
   14000415f:	int3   
   140004160:	int3   
   140004161:	int3   
   140004162:	int3   
   140004163:	int3   
   140004164:	int3   
   140004165:	int3   
   140004166:	int3   
   140004167:	int3   
   140004168:	int3   
   140004169:	int3   
   14000416a:	int3   
   14000416b:	int3   
   14000416c:	int3   
   14000416d:	int3   
   14000416e:	int3   
   14000416f:	int3   
   140004170:	rex push rbx
   140004172:	sub    rsp,0x20
   140004176:	mov    ecx,0x1
   14000417b:	call   0x140004ff4
   140004180:	call   0x140004724
   140004185:	mov    ecx,eax
   140004187:	call   0x140005000
   14000418c:	call   0x140004f3a
   140004191:	mov    rbx,rax
   140004194:	call   0x1400020a0
   140004199:	mov    ecx,0x1
   14000419e:	mov    DWORD PTR [rbx],eax
   1400041a0:	call   0x140004470
   1400041a5:	test   al,al
   1400041a7:	je     0x140004211
   1400041a9:	call   0x140004a70
   1400041ae:	lea    rcx,[rip+0x91b]        # 0x140004ad0
   1400041b5:	call   0x140004598
   1400041ba:	call   0x140004718
   1400041bf:	mov    ecx,eax
   1400041c1:	call   0x140004f82
   1400041c6:	test   eax,eax
   1400041c8:	jne    0x14000421c
   1400041ca:	call   0x140004730
   1400041cf:	call   0x14000475c
   1400041d4:	call   0x140004824
   1400041d9:	test   eax,eax
   1400041db:	je     0x1400041e9
   1400041dd:	lea    rcx,[rip+0xffffffffffffdebc]        # 0x1400020a0
   1400041e4:	call   0x140004ee6
   1400041e9:	call   0x140004750
   1400041ee:	call   0x140004750
   1400041f3:	call   0x1400020a0
   1400041f8:	mov    ecx,eax
   1400041fa:	call   0x140004f76
   1400041ff:	call   0x140004fb2
   140004204:	call   0x1400020a0
   140004209:	xor    eax,eax
   14000420b:	add    rsp,0x20
   14000420f:	pop    rbx
   140004210:	ret    
   140004211:	mov    ecx,0x7
   140004216:	call   0x140004868
   14000421b:	int3   
   14000421c:	mov    ecx,0x7
   140004221:	call   0x140004868
   140004226:	int3   
   140004227:	int3   
   140004228:	int3   
   140004229:	int3   
   14000422a:	int3   
   14000422b:	int3   
   14000422c:	int3   
   14000422d:	int3   
   14000422e:	int3   
   14000422f:	int3   
   140004230:	sub    rsp,0x28
   140004234:	call   0x140004a10
   140004239:	call   0x1400020a0
   14000423e:	mov    ecx,eax
   140004240:	add    rsp,0x28
   140004244:	jmp    0x14000500c
   140004249:	int3   
   14000424a:	int3   
   14000424b:	int3   
   14000424c:	int3   
   14000424d:	int3   
   14000424e:	int3   
   14000424f:	int3   
   140004250:	mov    QWORD PTR [rsp+0x8],rbx
   140004255:	mov    QWORD PTR [rsp+0x10],rsi
   14000425a:	push   rdi
   14000425b:	sub    rsp,0x30
   14000425f:	mov    ecx,0x1
   140004264:	call   0x140004464
   140004269:	test   al,al
   14000426b:	jne    0x140004278
   14000426d:	mov    ecx,0x7
   140004272:	call   0x140004868
   140004277:	int3   
   140004278:	xor    sil,sil
   14000427b:	mov    BYTE PTR [rsp+0x20],sil
   140004280:	call   0x140004434
   140004285:	mov    bl,al
   140004287:	mov    ecx,DWORD PTR [rip+0x6d53]        # 0x14000afe0
   14000428d:	cmp    ecx,0x1
   140004290:	jne    0x14000429c
   140004292:	mov    ecx,0x7
   140004297:	call   0x140004868
   14000429c:	test   ecx,ecx
   14000429e:	jne    0x1400042ea
   1400042a0:	mov    DWORD PTR [rip+0x6d36],0x1        # 0x14000afe0
   1400042aa:	lea    rdx,[rip+0x2107]        # 0x1400063b8
   1400042b1:	lea    rcx,[rip+0x20e0]        # 0x140006398
   1400042b8:	call   0x140004efe
   1400042bd:	test   eax,eax
   1400042bf:	je     0x1400042cb
   1400042c1:	mov    eax,0xff
   1400042c6:	jmp    0x1400043b8
   1400042cb:	lea    rdx,[rip+0x20be]        # 0x140006390
   1400042d2:	lea    rcx,[rip+0x207f]        # 0x140006358
   1400042d9:	call   0x140004ef2
   1400042de:	mov    DWORD PTR [rip+0x6cf8],0x2        # 0x14000afe0
   1400042e8:	jmp    0x1400042f2
   1400042ea:	mov    sil,0x1
   1400042ed:	mov    BYTE PTR [rsp+0x20],sil
   1400042f2:	mov    cl,bl
   1400042f4:	call   0x14000452c
   1400042f9:	call   0x140004838
   1400042fe:	mov    rbx,rax
   140004301:	cmp    QWORD PTR [rax],0x0
   140004305:	je     0x14000432a
   140004307:	mov    rcx,rax
   14000430a:	call   0x140004780
   14000430f:	test   al,al
   140004311:	je     0x14000432a
   140004313:	mov    rbx,QWORD PTR [rbx]
   140004316:	mov    rcx,rbx
   140004319:	call   QWORD PTR [rip+0x2029]        # 0x140006348
   14000431f:	xor    r8d,r8d
   140004322:	lea    edx,[r8+0x2]
   140004326:	xor    ecx,ecx
   140004328:	call   rbx
   14000432a:	call   0x140004848
   14000432f:	mov    rbx,rax
   140004332:	cmp    QWORD PTR [rax],0x0
   140004336:	je     0x14000434c
   140004338:	mov    rcx,rax
   14000433b:	call   0x140004780
   140004340:	test   al,al
   140004342:	je     0x14000434c
   140004344:	mov    rcx,QWORD PTR [rbx]
   140004347:	call   0x140004f16
   14000434c:	call   0x140004f2e
   140004351:	mov    rdi,rax
   140004354:	call   0x140004f22
   140004359:	mov    rbx,rax
   14000435c:	call   0x140004fa6
   140004361:	mov    r8,rax
   140004364:	mov    rdx,QWORD PTR [rdi]
   140004367:	mov    ecx,DWORD PTR [rbx]
   140004369:	call   0x1400018a4
   14000436e:	mov    ebx,eax
   140004370:	call   0x1400049b4
   140004375:	test   al,al
   140004377:	jne    0x140004380
   140004379:	mov    ecx,ebx
   14000437b:	call   0x140005018
   140004380:	test   sil,sil
   140004383:	jne    0x14000438a
   140004385:	call   0x140004f6a
   14000438a:	xor    edx,edx
   14000438c:	mov    cl,0x1
   14000438e:	call   0x140004464
   140004393:	mov    eax,ebx
   140004395:	jmp    0x1400043b8
   140004397:	mov    ebx,eax
   140004399:	call   0x1400049b4
   14000439e:	test   al,al
   1400043a0:	jne    0x1400043aa
   1400043a2:	mov    ecx,ebx
   1400043a4:	call   0x140004f9a
   1400043a9:	int3   
   1400043aa:	cmp    BYTE PTR [rsp+0x20],0x0
   1400043af:	jne    0x1400043b6
   1400043b1:	call   0x140004f0a
   1400043b6:	mov    eax,ebx
   1400043b8:	mov    rbx,QWORD PTR [rsp+0x40]
   1400043bd:	mov    rsi,QWORD PTR [rsp+0x48]
   1400043c2:	add    rsp,0x30
   1400043c6:	pop    rdi
   1400043c7:	ret    
   1400043c8:	int3   
   1400043c9:	int3   
   1400043ca:	int3   
   1400043cb:	int3   
   1400043cc:	int3   
   1400043cd:	int3   
   1400043ce:	int3   
   1400043cf:	int3   
   1400043d0:	sub    rsp,0x28
   1400043d4:	call   0x140004664
   1400043d9:	add    rsp,0x28
   1400043dd:	jmp    0x140004250
   1400043e2:	int3   
   1400043e3:	int3   
   1400043e4:	int3   
   1400043e5:	int3   
   1400043e6:	int3   
   1400043e7:	int3   
   1400043e8:	int3   
   1400043e9:	int3   
   1400043ea:	int3   
   1400043eb:	int3   
   1400043ec:	int3   
   1400043ed:	int3   
   1400043ee:	int3   
   1400043ef:	int3   
   1400043f0:	int3   
   1400043f1:	int3   
   1400043f2:	int3   
   1400043f3:	int3   
   1400043f4:	int3   
   1400043f5:	int3   
   1400043f6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140004400:	cmp    rcx,QWORD PTR [rip+0x5c01]        # 0x14000a008
   140004407:	jne    0x14000441a
   140004409:	rol    rcx,0x10
   14000440d:	test   cx,0xffff
   140004412:	jne    0x140004416
   140004414:	repz ret 
   140004416:	ror    rcx,0x10
   14000441a:	jmp    0x140004b90
   14000441f:	int3   
   140004420:	int3   
   140004421:	int3   
   140004422:	int3   
   140004423:	int3   
   140004424:	int3   
   140004425:	int3   
   140004426:	int3   
   140004427:	int3   
   140004428:	jmp    0x140004640
   14000442d:	int3   
   14000442e:	int3   
   14000442f:	int3   
   140004430:	int3   
   140004431:	int3   
   140004432:	int3   
   140004433:	int3   
   140004434:	mov    rax,QWORD PTR gs:0x30
   14000443d:	mov    rcx,QWORD PTR [rax+0x8]
   140004441:	jmp    0x140004448
   140004443:	cmp    rcx,rax
   140004446:	je     0x140004458
   140004448:	xor    eax,eax
   14000444a:	lock cmpxchg QWORD PTR [rip+0x6b95],rcx        # 0x14000afe8
   140004453:	jne    0x140004443
   140004455:	xor    al,al
   140004457:	ret    
   140004458:	mov    al,0x1
   14000445a:	ret    
   14000445b:	int3   
   14000445c:	int3   
   14000445d:	int3   
   14000445e:	int3   
   14000445f:	int3   
   140004460:	int3   
   140004461:	int3   
   140004462:	int3   
   140004463:	int3   
   140004464:	mov    al,0x1
   140004466:	ret    
   140004467:	int3   
   140004468:	int3   
   140004469:	int3   
   14000446a:	int3   
   14000446b:	int3   
   14000446c:	int3   
   14000446d:	int3   
   14000446e:	int3   
   14000446f:	int3   
   140004470:	rex push rbp
   140004472:	mov    rbp,rsp
   140004475:	sub    rsp,0x40
   140004479:	test   ecx,ecx
   14000447b:	jne    0x1400044a8
   14000447d:	lea    rcx,[rip+0x6b1c]        # 0x14000afa0
   140004484:	call   0x140004fbe
   140004489:	test   eax,eax
   14000448b:	je     0x140004495
   14000448d:	xor    al,al
   14000448f:	add    rsp,0x40
   140004493:	pop    rbp
   140004494:	ret    
   140004495:	lea    rcx,[rip+0x6b1c]        # 0x14000afb8
   14000449c:	call   0x140004fbe
   1400044a1:	test   eax,eax
   1400044a3:	sete   al
   1400044a6:	jmp    0x14000448f
   1400044a8:	cmp    ecx,0x1
   1400044ab:	jne    0x140004519
   1400044ad:	mov    rdx,QWORD PTR [rip+0x5b54]        # 0x14000a008
   1400044b4:	or     r8,0xffffffffffffffff
   1400044b8:	mov    eax,edx
   1400044ba:	mov    ecx,0x40
   1400044bf:	and    eax,0x3f
   1400044c2:	sub    ecx,eax
   1400044c4:	mov    al,0x1
   1400044c6:	ror    r8,cl
   1400044c9:	xor    r8,rdx
   1400044cc:	mov    QWORD PTR [rbp-0x20],r8
   1400044d0:	mov    QWORD PTR [rbp-0x18],r8
   1400044d4:	movups xmm0,XMMWORD PTR [rbp-0x20]
   1400044d8:	mov    QWORD PTR [rbp-0x10],r8
   1400044dc:	movsd  xmm1,QWORD PTR [rbp-0x10]
   1400044e1:	movups XMMWORD PTR [rip+0x6ab8],xmm0        # 0x14000afa0
   1400044e8:	mov    QWORD PTR [rbp-0x20],r8
   1400044ec:	mov    QWORD PTR [rbp-0x18],r8
   1400044f0:	movups xmm0,XMMWORD PTR [rbp-0x20]
   1400044f4:	mov    QWORD PTR [rbp-0x10],r8
   1400044f8:	movsd  QWORD PTR [rip+0x6ab0],xmm1        # 0x14000afb0
   140004500:	movsd  xmm1,QWORD PTR [rbp-0x10]
   140004505:	movups XMMWORD PTR [rip+0x6aac],xmm0        # 0x14000afb8
   14000450c:	movsd  QWORD PTR [rip+0x6ab4],xmm1        # 0x14000afc8
   140004514:	jmp    0x14000448f
   140004519:	mov    ecx,0x5
   14000451e:	call   0x140004868
   140004523:	int3   
   140004524:	int3   
   140004525:	int3   
   140004526:	int3   
   140004527:	int3   
   140004528:	int3   
   140004529:	int3   
   14000452a:	int3   
   14000452b:	int3   
   14000452c:	xor    eax,eax
   14000452e:	test   cl,cl
   140004530:	jne    0x140004539
   140004532:	xchg   QWORD PTR [rip+0x6aaf],rax        # 0x14000afe8
   140004539:	ret    
   14000453a:	int3   
   14000453b:	int3   
   14000453c:	int3   
   14000453d:	int3   
   14000453e:	int3   
   14000453f:	int3   
   140004540:	rex push rbx
   140004542:	sub    rsp,0x20
   140004546:	mov    rdx,QWORD PTR [rip+0x5abb]        # 0x14000a008
   14000454d:	mov    rbx,rcx
   140004550:	mov    ecx,edx
   140004552:	xor    rdx,QWORD PTR [rip+0x6a47]        # 0x14000afa0
   140004559:	and    ecx,0x3f
   14000455c:	ror    rdx,cl
   14000455f:	cmp    rdx,0xffffffffffffffff
   140004563:	jne    0x14000456f
   140004565:	mov    rcx,rbx
   140004568:	call   0x140004f8e
   14000456d:	jmp    0x14000457e
   14000456f:	mov    rdx,rbx
   140004572:	lea    rcx,[rip+0x6a27]        # 0x14000afa0
   140004579:	call   0x140004fdc
   14000457e:	xor    ecx,ecx
   140004580:	test   eax,eax
   140004582:	cmove  rcx,rbx
   140004586:	mov    rax,rcx
   140004589:	add    rsp,0x20
   14000458d:	pop    rbx
   14000458e:	ret    
   14000458f:	int3   
   140004590:	int3   
   140004591:	int3   
   140004592:	int3   
   140004593:	int3   
   140004594:	int3   
   140004595:	int3   
   140004596:	int3   
   140004597:	int3   
   140004598:	sub    rsp,0x28
   14000459c:	call   0x140004540
   1400045a1:	neg    rax
   1400045a4:	sbb    eax,eax
   1400045a6:	neg    eax
   1400045a8:	dec    eax
   1400045aa:	add    rsp,0x28
   1400045ae:	ret    
   1400045af:	int3   
   1400045b0:	int3   
   1400045b1:	int3   
   1400045b2:	int3   
   1400045b3:	int3   
   1400045b4:	int3   
   1400045b5:	int3   
   1400045b6:	int3   
   1400045b7:	int3   
   1400045b8:	jmp    0x1400045c4
   1400045bd:	int3   
   1400045be:	int3   
   1400045bf:	int3   
   1400045c0:	int3   
   1400045c1:	int3   
   1400045c2:	int3   
   1400045c3:	int3   
   1400045c4:	jmp    0x140005024
   1400045c9:	int3   
   1400045ca:	int3   
   1400045cb:	int3   
   1400045cc:	int3   
   1400045cd:	int3   
   1400045ce:	int3   
   1400045cf:	int3   
   1400045d0:	rex push rbx
   1400045d2:	sub    rsp,0x20
   1400045d6:	lea    rax,[rip+0x1f4b]        # 0x140006528
   1400045dd:	mov    rbx,rcx
   1400045e0:	mov    QWORD PTR [rcx],rax
   1400045e3:	test   dl,0x1
   1400045e6:	je     0x1400045ed
   1400045e8:	call   0x1400045c4
   1400045ed:	mov    rax,rbx
   1400045f0:	add    rsp,0x20
   1400045f4:	pop    rbx
   1400045f5:	ret    
   1400045f6:	int3   
   1400045f7:	int3   
   1400045f8:	int3   
   1400045f9:	int3   
   1400045fa:	int3   
   1400045fb:	int3   
   1400045fc:	rex push rbx
   1400045fe:	sub    rsp,0x20
   140004602:	mov    rbx,rcx
   140004605:	jmp    0x140004628
   140004607:	mov    rcx,rbx
   14000460a:	call   0x140004f5e
   14000460f:	test   eax,eax
   140004611:	jne    0x140004625
   140004613:	cmp    rbx,0xffffffffffffffff
   140004617:	jne    0x140004620
   140004619:	call   0x140004e8c
   14000461e:	jmp    0x140004625
   140004620:	call   0x140004e64
   140004625:	mov    rcx,rbx
   140004628:	call   0x140005030
   14000462d:	test   rax,rax
   140004630:	je     0x140004607
   140004632:	add    rsp,0x20
   140004636:	pop    rbx
   140004637:	ret    
   140004638:	int3   
   140004639:	int3   
   14000463a:	int3   
   14000463b:	int3   
   14000463c:	int3   
   14000463d:	int3   
   14000463e:	int3   
   14000463f:	int3   
   140004640:	sub    rsp,0x38
   140004644:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000464d:	call   0x1400045fc
   140004652:	jmp    0x140004656
   140004654:	xor    eax,eax
   140004656:	add    rsp,0x38
   14000465a:	ret    
   14000465b:	int3   
   14000465c:	int3   
   14000465d:	int3   
   14000465e:	int3   
   14000465f:	int3   
   140004660:	int3   
   140004661:	int3   
   140004662:	int3   
   140004663:	int3   
   140004664:	mov    QWORD PTR [rsp+0x20],rbx
   140004669:	push   rbp
   14000466a:	mov    rbp,rsp
   14000466d:	sub    rsp,0x20
   140004671:	and    QWORD PTR [rbp+0x18],0x0
   140004676:	movabs rbx,0x2b992ddfa232
   140004680:	mov    rax,QWORD PTR [rip+0x5981]        # 0x14000a008
   140004687:	cmp    rax,rbx
   14000468a:	jne    0x1400046fb
   14000468c:	lea    rcx,[rbp+0x18]
   140004690:	call   QWORD PTR [rip+0x1ab2]        # 0x140006148
   140004696:	mov    rax,QWORD PTR [rbp+0x18]
   14000469a:	mov    QWORD PTR [rbp+0x10],rax
   14000469e:	call   QWORD PTR [rip+0x1a4c]        # 0x1400060f0
   1400046a4:	mov    eax,eax
   1400046a6:	xor    QWORD PTR [rbp+0x10],rax
   1400046aa:	call   QWORD PTR [rip+0x1a38]        # 0x1400060e8
   1400046b0:	mov    eax,eax
   1400046b2:	lea    rcx,[rbp+0x20]
   1400046b6:	xor    QWORD PTR [rbp+0x10],rax
   1400046ba:	call   QWORD PTR [rip+0x1a48]        # 0x140006108
   1400046c0:	mov    eax,DWORD PTR [rbp+0x20]
   1400046c3:	lea    rcx,[rbp+0x10]
   1400046c7:	shl    rax,0x20
   1400046cb:	xor    rax,QWORD PTR [rbp+0x20]
   1400046cf:	xor    rax,QWORD PTR [rbp+0x10]
   1400046d3:	xor    rax,rcx
   1400046d6:	movabs rcx,0xffffffffffff
   1400046e0:	and    rax,rcx
   1400046e3:	movabs rcx,0x2b992ddfa233
   1400046ed:	cmp    rax,rbx
   1400046f0:	cmove  rax,rcx
   1400046f4:	mov    QWORD PTR [rip+0x590d],rax        # 0x14000a008
   1400046fb:	mov    rbx,QWORD PTR [rsp+0x48]
   140004700:	not    rax
   140004703:	mov    QWORD PTR [rip+0x5906],rax        # 0x14000a010
   14000470a:	add    rsp,0x20
   14000470e:	pop    rbp
   14000470f:	ret    
   140004710:	int3   
   140004711:	int3   
   140004712:	int3   
   140004713:	int3   
   140004714:	int3   
   140004715:	int3   
   140004716:	int3   
   140004717:	int3   
   140004718:	mov    eax,0x1
   14000471d:	ret    
   14000471e:	int3   
   14000471f:	int3   
   140004720:	int3   
   140004721:	int3   
   140004722:	int3   
   140004723:	int3   
   140004724:	mov    eax,0x4000
   140004729:	ret    
   14000472a:	int3   
   14000472b:	int3   
   14000472c:	int3   
   14000472d:	int3   
   14000472e:	int3   
   14000472f:	int3   
   140004730:	lea    rcx,[rip+0x6899]        # 0x14000afd0
   140004737:	rex.W jmp QWORD PTR [rip+0x195a]        # 0x140006098
   14000473e:	int3   
   14000473f:	int3   
   140004740:	int3   
   140004741:	int3   
   140004742:	int3   
   140004743:	int3   
   140004744:	int3   
   140004745:	int3   
   140004746:	int3   
   140004747:	int3   
   140004748:	int3   
   140004749:	int3   
   14000474a:	int3   
   14000474b:	int3   
   14000474c:	int3   
   14000474d:	int3   
   14000474e:	int3   
   14000474f:	int3   
   140004750:	ret    0x0
   140004753:	int3   
   140004754:	int3   
   140004755:	int3   
   140004756:	int3   
   140004757:	int3   
   140004758:	int3   
   140004759:	int3   
   14000475a:	int3   
   14000475b:	int3   
   14000475c:	sub    rsp,0x28
   140004760:	call   0x140004114
   140004765:	or     QWORD PTR [rax],0x4
   140004769:	call   0x140004124
   14000476e:	or     QWORD PTR [rax],0x2
   140004772:	add    rsp,0x28
   140004776:	ret    
   140004777:	int3   
   140004778:	int3   
   140004779:	int3   
   14000477a:	int3   
   14000477b:	int3   
   14000477c:	int3   
   14000477d:	int3   
   14000477e:	int3   
   14000477f:	int3   
   140004780:	sub    rsp,0x18
   140004784:	mov    r8,rcx
   140004787:	mov    eax,0x5a4d
   14000478c:	cmp    WORD PTR [rip+0xffffffffffffb86d],ax        # 0x140000000
   140004793:	jne    0x140004811
   140004795:	movsxd rax,DWORD PTR [rip+0xffffffffffffb8a0]        # 0x14000003c
   14000479c:	lea    rdx,[rip+0xffffffffffffb85d]        # 0x140000000
   1400047a3:	lea    rcx,[rax+rdx*1]
   1400047a7:	cmp    DWORD PTR [rcx],0x4550
   1400047ad:	jne    0x140004811
   1400047af:	mov    eax,0x20b
   1400047b4:	cmp    WORD PTR [rcx+0x18],ax
   1400047b8:	jne    0x140004811
   1400047ba:	sub    r8,rdx
   1400047bd:	movzx  eax,WORD PTR [rcx+0x14]
   1400047c1:	lea    rdx,[rcx+0x18]
   1400047c5:	add    rdx,rax
   1400047c8:	movzx  eax,WORD PTR [rcx+0x6]
   1400047cc:	lea    rcx,[rax+rax*4]
   1400047d0:	lea    r9,[rdx+rcx*8]
   1400047d4:	mov    QWORD PTR [rsp],rdx
   1400047d8:	cmp    rdx,r9
   1400047db:	je     0x1400047f5
   1400047dd:	mov    ecx,DWORD PTR [rdx+0xc]
   1400047e0:	cmp    r8,rcx
   1400047e3:	jb     0x1400047ef
   1400047e5:	mov    eax,DWORD PTR [rdx+0x8]
   1400047e8:	add    eax,ecx
   1400047ea:	cmp    r8,rax
   1400047ed:	jb     0x1400047f7
   1400047ef:	add    rdx,0x28
   1400047f3:	jmp    0x1400047d4
   1400047f5:	xor    edx,edx
   1400047f7:	test   rdx,rdx
   1400047fa:	jne    0x140004800
   1400047fc:	xor    al,al
   1400047fe:	jmp    0x140004817
   140004800:	test   DWORD PTR [rdx+0x24],0x80000000
   140004807:	je     0x14000480d
   140004809:	xor    al,al
   14000480b:	jmp    0x140004817
   14000480d:	mov    al,0x1
   14000480f:	jmp    0x140004817
   140004811:	xor    al,al
   140004813:	jmp    0x140004817
   140004815:	xor    al,al
   140004817:	add    rsp,0x18
   14000481b:	ret    
   14000481c:	int3   
   14000481d:	int3   
   14000481e:	int3   
   14000481f:	int3   
   140004820:	int3   
   140004821:	int3   
   140004822:	int3   
   140004823:	int3   
   140004824:	xor    eax,eax
   140004826:	cmp    DWORD PTR [rip+0x57d4],eax        # 0x14000a000
   14000482c:	sete   al
   14000482f:	ret    
   140004830:	int3   
   140004831:	int3   
   140004832:	int3   
   140004833:	int3   
   140004834:	int3   
   140004835:	int3   
   140004836:	int3   
   140004837:	int3   
   140004838:	lea    rax,[rip+0x6e31]        # 0x14000b670
   14000483f:	ret    
   140004840:	int3   
   140004841:	int3   
   140004842:	int3   
   140004843:	int3   
   140004844:	int3   
   140004845:	int3   
   140004846:	int3   
   140004847:	int3   
   140004848:	lea    rax,[rip+0x6e19]        # 0x14000b668
   14000484f:	ret    
   140004850:	int3   
   140004851:	int3   
   140004852:	int3   
   140004853:	int3   
   140004854:	int3   
   140004855:	int3   
   140004856:	int3   
   140004857:	int3   
   140004858:	and    DWORD PTR [rip+0x6791],0x0        # 0x14000aff0
   14000485f:	ret    
   140004860:	int3   
   140004861:	int3   
   140004862:	int3   
   140004863:	int3   
   140004864:	int3   
   140004865:	int3   
   140004866:	int3   
   140004867:	int3   
   140004868:	mov    QWORD PTR [rsp+0x8],rbx
   14000486d:	push   rbp
   14000486e:	lea    rbp,[rsp-0x4c0]
   140004876:	sub    rsp,0x5c0
   14000487d:	mov    ebx,ecx
   14000487f:	mov    ecx,0x17
   140004884:	call   0x140005078
   140004889:	test   eax,eax
   14000488b:	je     0x140004891
   14000488d:	mov    ecx,ebx
   14000488f:	int    0x29
   140004891:	and    DWORD PTR [rip+0x6758],0x0        # 0x14000aff0
   140004898:	lea    rcx,[rbp-0x10]
   14000489c:	xor    edx,edx
   14000489e:	mov    r8d,0x4d0
   1400048a4:	call   0x14000503c
   1400048a9:	lea    rcx,[rbp-0x10]
   1400048ad:	call   QWORD PTR [rip+0x1a7d]        # 0x140006330
   1400048b3:	mov    rbx,QWORD PTR [rbp+0xe8]
   1400048ba:	lea    rdx,[rbp+0x4d8]
   1400048c1:	mov    rcx,rbx
   1400048c4:	xor    r8d,r8d
   1400048c7:	call   QWORD PTR [rip+0x1a6b]        # 0x140006338
   1400048cd:	test   rax,rax
   1400048d0:	je     0x14000490e
   1400048d2:	and    QWORD PTR [rsp+0x38],0x0
   1400048d8:	lea    rcx,[rbp+0x4e0]
   1400048df:	mov    rdx,QWORD PTR [rbp+0x4d8]
   1400048e6:	mov    r9,rax
   1400048e9:	mov    QWORD PTR [rsp+0x30],rcx
   1400048ee:	mov    r8,rbx
   1400048f1:	lea    rcx,[rbp+0x4e8]
   1400048f8:	mov    QWORD PTR [rsp+0x28],rcx
   1400048fd:	lea    rcx,[rbp-0x10]
   140004901:	mov    QWORD PTR [rsp+0x20],rcx
   140004906:	xor    ecx,ecx
   140004908:	call   QWORD PTR [rip+0x1a1a]        # 0x140006328
   14000490e:	mov    rax,QWORD PTR [rbp+0x4c8]
   140004915:	lea    rcx,[rsp+0x50]
   14000491a:	mov    QWORD PTR [rbp+0xe8],rax
   140004921:	xor    edx,edx
   140004923:	lea    rax,[rbp+0x4c8]
   14000492a:	mov    r8d,0x98
   140004930:	add    rax,0x8
   140004934:	mov    QWORD PTR [rbp+0x88],rax
   14000493b:	call   0x14000503c
   140004940:	mov    rax,QWORD PTR [rbp+0x4c8]
   140004947:	mov    QWORD PTR [rsp+0x60],rax
   14000494c:	mov    DWORD PTR [rsp+0x50],0x40000015
   140004954:	mov    DWORD PTR [rsp+0x54],0x1
   14000495c:	call   QWORD PTR [rip+0x16ee]        # 0x140006050
   140004962:	cmp    eax,0x1
   140004965:	lea    rax,[rsp+0x50]
   14000496a:	mov    QWORD PTR [rsp+0x40],rax
   14000496f:	lea    rax,[rbp-0x10]
   140004973:	sete   bl
   140004976:	mov    QWORD PTR [rsp+0x48],rax
   14000497b:	xor    ecx,ecx
   14000497d:	call   QWORD PTR [rip+0x16ed]        # 0x140006070
   140004983:	lea    rcx,[rsp+0x40]
   140004988:	call   QWORD PTR [rip+0x16ea]        # 0x140006078
   14000498e:	test   eax,eax
   140004990:	jne    0x14000499c
   140004992:	neg    bl
   140004994:	sbb    eax,eax
   140004996:	and    DWORD PTR [rip+0x6654],eax        # 0x14000aff0
   14000499c:	mov    rbx,QWORD PTR [rsp+0x5d0]
   1400049a4:	add    rsp,0x5c0
   1400049ab:	pop    rbp
   1400049ac:	ret    
   1400049ad:	int3   
   1400049ae:	int3   
   1400049af:	int3   
   1400049b0:	int3   
   1400049b1:	int3   
   1400049b2:	int3   
   1400049b3:	int3   
   1400049b4:	sub    rsp,0x28
   1400049b8:	xor    ecx,ecx
   1400049ba:	call   QWORD PTR [rip+0x16f8]        # 0x1400060b8
   1400049c0:	mov    rcx,rax
   1400049c3:	test   rax,rax
   1400049c6:	jne    0x1400049cc
   1400049c8:	xor    al,al
   1400049ca:	jmp    0x140004a03
   1400049cc:	mov    eax,0x5a4d
   1400049d1:	cmp    WORD PTR [rcx],ax
   1400049d4:	jne    0x1400049c8
   1400049d6:	movsxd rax,DWORD PTR [rcx+0x3c]
   1400049da:	add    rax,rcx
   1400049dd:	cmp    DWORD PTR [rax],0x4550
   1400049e3:	jne    0x1400049c8
   1400049e5:	mov    ecx,0x20b
   1400049ea:	cmp    WORD PTR [rax+0x18],cx
   1400049ee:	jne    0x1400049c8
   1400049f0:	cmp    DWORD PTR [rax+0x84],0xe
   1400049f7:	jbe    0x1400049c8
   1400049f9:	cmp    DWORD PTR [rax+0xf8],0x0
   140004a00:	setne  al
   140004a03:	add    rsp,0x28
   140004a07:	ret    
   140004a08:	int3   
   140004a09:	int3   
   140004a0a:	int3   
   140004a0b:	int3   
   140004a0c:	int3   
   140004a0d:	int3   
   140004a0e:	int3   
   140004a0f:	int3   
   140004a10:	lea    rcx,[rip+0x19]        # 0x140004a30
   140004a17:	rex.W jmp QWORD PTR [rip+0x1652]        # 0x140006070
   140004a1e:	int3   
   140004a1f:	int3   
   140004a20:	int3   
   140004a21:	int3   
   140004a22:	int3   
   140004a23:	int3   
   140004a24:	int3   
   140004a25:	int3   
   140004a26:	int3   
   140004a27:	int3   
   140004a28:	int3   
   140004a29:	int3   
   140004a2a:	int3   
   140004a2b:	int3   
   140004a2c:	int3   
   140004a2d:	int3   
   140004a2e:	int3   
   140004a2f:	int3   
   140004a30:	sub    rsp,0x28
   140004a34:	mov    rax,QWORD PTR [rcx]
   140004a37:	cmp    DWORD PTR [rax],0xe06d7363
   140004a3d:	jne    0x140004a5b
   140004a3f:	cmp    DWORD PTR [rax+0x18],0x4
   140004a43:	jne    0x140004a5b
   140004a45:	mov    ecx,DWORD PTR [rax+0x20]
   140004a48:	lea    eax,[rcx-0x19930520]
   140004a4e:	cmp    eax,0x2
   140004a51:	jbe    0x140004a62
   140004a53:	cmp    ecx,0x1994000
   140004a59:	je     0x140004a62
   140004a5b:	xor    eax,eax
   140004a5d:	add    rsp,0x28
   140004a61:	ret    
   140004a62:	call   0x140005048
   140004a67:	int3   
   140004a68:	int3   
   140004a69:	int3   
   140004a6a:	int3   
   140004a6b:	int3   
   140004a6c:	int3   
   140004a6d:	int3   
   140004a6e:	int3   
   140004a6f:	int3   
   140004a70:	mov    QWORD PTR [rsp+0x8],rbx
   140004a75:	mov    QWORD PTR [rsp+0x10],rsi
   140004a7a:	push   rdi
   140004a7b:	sub    rsp,0x20
   140004a7f:	lea    rbx,[rip+0x3c22]        # 0x1400086a8
   140004a86:	lea    rsi,[rip+0x3c1b]        # 0x1400086a8
   140004a8d:	jmp    0x140004aa6
   140004a8f:	mov    rdi,QWORD PTR [rbx]
   140004a92:	test   rdi,rdi
   140004a95:	je     0x140004aa2
   140004a97:	mov    rcx,rdi
   140004a9a:	call   QWORD PTR [rip+0x18a8]        # 0x140006348
   140004aa0:	call   rdi
   140004aa2:	add    rbx,0x8
   140004aa6:	cmp    rbx,rsi
   140004aa9:	jb     0x140004a8f
   140004aab:	mov    rbx,QWORD PTR [rsp+0x30]
   140004ab0:	mov    rsi,QWORD PTR [rsp+0x38]
   140004ab5:	add    rsp,0x20
   140004ab9:	pop    rdi
   140004aba:	ret    
   140004abb:	int3   
   140004abc:	int3   
   140004abd:	int3   
   140004abe:	int3   
   140004abf:	int3   
   140004ac0:	int3   
   140004ac1:	int3   
   140004ac2:	int3   
   140004ac3:	int3   
   140004ac4:	int3   
   140004ac5:	int3   
   140004ac6:	int3   
   140004ac7:	int3   
   140004ac8:	int3   
   140004ac9:	int3   
   140004aca:	int3   
   140004acb:	int3   
   140004acc:	int3   
   140004acd:	int3   
   140004ace:	int3   
   140004acf:	int3   
   140004ad0:	mov    QWORD PTR [rsp+0x8],rbx
   140004ad5:	mov    QWORD PTR [rsp+0x10],rsi
   140004ada:	push   rdi
   140004adb:	sub    rsp,0x20
   140004adf:	lea    rbx,[rip+0x3bd2]        # 0x1400086b8
   140004ae6:	lea    rsi,[rip+0x3bcb]        # 0x1400086b8
   140004aed:	jmp    0x140004b06
   140004aef:	mov    rdi,QWORD PTR [rbx]
   140004af2:	test   rdi,rdi
   140004af5:	je     0x140004b02
   140004af7:	mov    rcx,rdi
   140004afa:	call   QWORD PTR [rip+0x1848]        # 0x140006348
   140004b00:	call   rdi
   140004b02:	add    rbx,0x8
   140004b06:	cmp    rbx,rsi
   140004b09:	jb     0x140004aef
   140004b0b:	mov    rbx,QWORD PTR [rsp+0x30]
   140004b10:	mov    rsi,QWORD PTR [rsp+0x38]
   140004b15:	add    rsp,0x20
   140004b19:	pop    rdi
   140004b1a:	ret    
   140004b1b:	int3   
   140004b1c:	int3   
   140004b1d:	int3   
   140004b1e:	int3   
   140004b1f:	int3   
   140004b20:	int3   
   140004b21:	int3   
   140004b22:	int3   
   140004b23:	int3   
   140004b24:	rex push rbx
   140004b26:	sub    rsp,0x20
   140004b2a:	mov    rbx,rcx
   140004b2d:	call   QWORD PTR [rip+0x151d]        # 0x140006050
   140004b33:	mov    ecx,0x1
   140004b38:	mov    DWORD PTR [rip+0x6a32],eax        # 0x14000b570
   140004b3e:	call   0x140004858
   140004b43:	xor    ecx,ecx
   140004b45:	call   QWORD PTR [rip+0x1525]        # 0x140006070
   140004b4b:	mov    rcx,rbx
   140004b4e:	call   QWORD PTR [rip+0x1524]        # 0x140006078
   140004b54:	cmp    DWORD PTR [rip+0x6a15],0x0        # 0x14000b570
   140004b5b:	jne    0x140004b67
   140004b5d:	mov    ecx,0x1
   140004b62:	call   0x140004858
   140004b67:	call   QWORD PTR [rip+0x1573]        # 0x1400060e0
   140004b6d:	mov    rcx,rax
   140004b70:	mov    edx,0xc0000409
   140004b75:	add    rsp,0x20
   140004b79:	pop    rbx
   140004b7a:	rex.W jmp QWORD PTR [rip+0x1577]        # 0x1400060f8
   140004b81:	int3   
   140004b82:	int3   
   140004b83:	int3   
   140004b84:	int3   
   140004b85:	int3   
   140004b86:	int3   
   140004b87:	int3   
   140004b88:	int3   
   140004b89:	int3   
   140004b8a:	int3   
   140004b8b:	int3   
   140004b8c:	int3   
   140004b8d:	int3   
   140004b8e:	int3   
   140004b8f:	int3   
   140004b90:	mov    QWORD PTR [rsp+0x8],rcx
   140004b95:	sub    rsp,0x38
   140004b99:	mov    ecx,0x17
   140004b9e:	call   0x140005078
   140004ba3:	test   eax,eax
   140004ba5:	je     0x140004bae
   140004ba7:	mov    ecx,0x2
   140004bac:	int    0x29
   140004bae:	lea    rcx,[rip+0x64eb]        # 0x14000b0a0
   140004bb5:	call   0x140004c68
   140004bba:	mov    rax,QWORD PTR [rsp+0x38]
   140004bbf:	mov    QWORD PTR [rip+0x65d2],rax        # 0x14000b198
   140004bc6:	lea    rax,[rsp+0x38]
   140004bcb:	add    rax,0x8
   140004bcf:	mov    QWORD PTR [rip+0x6562],rax        # 0x14000b138
   140004bd6:	mov    rax,QWORD PTR [rip+0x65bb]        # 0x14000b198
   140004bdd:	mov    QWORD PTR [rip+0x642c],rax        # 0x14000b010
   140004be4:	mov    rax,QWORD PTR [rsp+0x40]
   140004be9:	mov    QWORD PTR [rip+0x6530],rax        # 0x14000b120
   140004bf0:	mov    DWORD PTR [rip+0x6406],0xc0000409        # 0x14000b000
   140004bfa:	mov    DWORD PTR [rip+0x6400],0x1        # 0x14000b004
   140004c04:	mov    DWORD PTR [rip+0x640a],0x1        # 0x14000b018
   140004c0e:	mov    eax,0x8
   140004c13:	imul   rax,rax,0x0
   140004c17:	lea    rcx,[rip+0x6402]        # 0x14000b020
   140004c1e:	mov    QWORD PTR [rcx+rax*1],0x2
   140004c26:	mov    eax,0x8
   140004c2b:	imul   rax,rax,0x0
   140004c2f:	mov    rcx,QWORD PTR [rip+0x53d2]        # 0x14000a008
   140004c36:	mov    QWORD PTR [rsp+rax*1+0x20],rcx
   140004c3b:	mov    eax,0x8
   140004c40:	imul   rax,rax,0x1
   140004c44:	mov    rcx,QWORD PTR [rip+0x53c5]        # 0x14000a010
   140004c4b:	mov    QWORD PTR [rsp+rax*1+0x20],rcx
   140004c50:	lea    rcx,[rip+0x1901]        # 0x140006558
   140004c57:	call   0x140004b24
   140004c5c:	add    rsp,0x38
   140004c60:	ret    
   140004c61:	int3   
   140004c62:	int3   
   140004c63:	int3   
   140004c64:	int3   
   140004c65:	int3   
   140004c66:	int3   
   140004c67:	int3   
   140004c68:	rex push rbx
   140004c6a:	push   rsi
   140004c6b:	push   rdi
   140004c6c:	sub    rsp,0x40
   140004c70:	mov    rbx,rcx
   140004c73:	call   QWORD PTR [rip+0x16b7]        # 0x140006330
   140004c79:	mov    rsi,QWORD PTR [rbx+0xf8]
   140004c80:	xor    edi,edi
   140004c82:	xor    r8d,r8d
   140004c85:	lea    rdx,[rsp+0x60]
   140004c8a:	mov    rcx,rsi
   140004c8d:	call   QWORD PTR [rip+0x16a5]        # 0x140006338
   140004c93:	test   rax,rax
   140004c96:	je     0x140004cd1
   140004c98:	and    QWORD PTR [rsp+0x38],0x0
   140004c9e:	lea    rcx,[rsp+0x68]
   140004ca3:	mov    rdx,QWORD PTR [rsp+0x60]
   140004ca8:	mov    r9,rax
   140004cab:	mov    QWORD PTR [rsp+0x30],rcx
   140004cb0:	mov    r8,rsi
   140004cb3:	lea    rcx,[rsp+0x70]
   140004cb8:	mov    QWORD PTR [rsp+0x28],rcx
   140004cbd:	xor    ecx,ecx
   140004cbf:	mov    QWORD PTR [rsp+0x20],rbx
   140004cc4:	call   QWORD PTR [rip+0x165e]        # 0x140006328
   140004cca:	inc    edi
   140004ccc:	cmp    edi,0x2
   140004ccf:	jl     0x140004c82
   140004cd1:	add    rsp,0x40
   140004cd5:	pop    rdi
   140004cd6:	pop    rsi
   140004cd7:	pop    rbx
   140004cd8:	ret    
   140004cd9:	int3   
   140004cda:	int3   
   140004cdb:	int3   
   140004cdc:	int3   
   140004cdd:	int3   
   140004cde:	int3   
   140004cdf:	int3   
   140004ce0:	rex push rbx
   140004ce2:	sub    rsp,0x20
   140004ce6:	mov    rbx,rcx
   140004ce9:	mov    rax,rdx
   140004cec:	lea    rcx,[rip+0x187d]        # 0x140006570
   140004cf3:	mov    QWORD PTR [rbx],rcx
   140004cf6:	lea    rdx,[rbx+0x8]
   140004cfa:	xor    ecx,ecx
   140004cfc:	mov    QWORD PTR [rdx],rcx
   140004cff:	mov    QWORD PTR [rdx+0x8],rcx
   140004d03:	lea    rcx,[rax+0x8]
   140004d07:	call   0x140004f46
   140004d0c:	lea    rax,[rip+0x188d]        # 0x1400065a0
   140004d13:	mov    QWORD PTR [rbx],rax
   140004d16:	mov    rax,rbx
   140004d19:	add    rsp,0x20
   140004d1d:	pop    rbx
   140004d1e:	ret    
   140004d1f:	int3   
   140004d20:	int3   
   140004d21:	int3   
   140004d22:	int3   
   140004d23:	int3   
   140004d24:	int3   
   140004d25:	int3   
   140004d26:	int3   
   140004d27:	int3   
   140004d28:	xor    eax,eax
   140004d2a:	mov    QWORD PTR [rcx+0x10],rax
   140004d2e:	lea    rax,[rip+0x187b]        # 0x1400065b0
   140004d35:	mov    QWORD PTR [rcx+0x8],rax
   140004d39:	lea    rax,[rip+0x1860]        # 0x1400065a0
   140004d40:	mov    QWORD PTR [rcx],rax
   140004d43:	mov    rax,rcx
   140004d46:	ret    
   140004d47:	int3   
   140004d48:	int3   
   140004d49:	int3   
   140004d4a:	int3   
   140004d4b:	int3   
   140004d4c:	int3   
   140004d4d:	int3   
   140004d4e:	int3   
   140004d4f:	int3   
   140004d50:	rex push rbx
   140004d52:	sub    rsp,0x20
   140004d56:	mov    rbx,rcx
   140004d59:	mov    rax,rdx
   140004d5c:	lea    rcx,[rip+0x180d]        # 0x140006570
   140004d63:	mov    QWORD PTR [rbx],rcx
   140004d66:	lea    rdx,[rbx+0x8]
   140004d6a:	xor    ecx,ecx
   140004d6c:	mov    QWORD PTR [rdx],rcx
   140004d6f:	mov    QWORD PTR [rdx+0x8],rcx
   140004d73:	lea    rcx,[rax+0x8]
   140004d77:	call   0x140004f46
   140004d7c:	lea    rax,[rip+0x1845]        # 0x1400065c8
   140004d83:	mov    QWORD PTR [rbx],rax
   140004d86:	mov    rax,rbx
   140004d89:	add    rsp,0x20
   140004d8d:	pop    rbx
   140004d8e:	ret    
   140004d8f:	int3   
   140004d90:	int3   
   140004d91:	int3   
   140004d92:	int3   
   140004d93:	int3   
   140004d94:	int3   
   140004d95:	int3   
   140004d96:	int3   
   140004d97:	int3   
   140004d98:	xor    eax,eax
   140004d9a:	mov    QWORD PTR [rcx+0x10],rax
   140004d9e:	lea    rax,[rip+0x1833]        # 0x1400065d8
   140004da5:	mov    QWORD PTR [rcx+0x8],rax
   140004da9:	lea    rax,[rip+0x1818]        # 0x1400065c8
   140004db0:	mov    QWORD PTR [rcx],rax
   140004db3:	mov    rax,rcx
   140004db6:	ret    
   140004db7:	int3   
   140004db8:	int3   
   140004db9:	int3   
   140004dba:	int3   
   140004dbb:	int3   
   140004dbc:	int3   
   140004dbd:	int3   
   140004dbe:	int3   
   140004dbf:	int3   
   140004dc0:	rex push rbx
   140004dc2:	sub    rsp,0x20
   140004dc6:	mov    rbx,rcx
   140004dc9:	mov    rax,rdx
   140004dcc:	lea    rcx,[rip+0x179d]        # 0x140006570
   140004dd3:	mov    QWORD PTR [rbx],rcx
   140004dd6:	lea    rdx,[rbx+0x8]
   140004dda:	xor    ecx,ecx
   140004ddc:	mov    QWORD PTR [rdx],rcx
   140004ddf:	mov    QWORD PTR [rdx+0x8],rcx
   140004de3:	lea    rcx,[rax+0x8]
   140004de7:	call   0x140004f46
   140004dec:	mov    rax,rbx
   140004def:	add    rsp,0x20
   140004df3:	pop    rbx
   140004df4:	ret    
   140004df5:	int3   
   140004df6:	int3   
   140004df7:	int3   
   140004df8:	int3   
   140004df9:	int3   
   140004dfa:	int3   
   140004dfb:	int3   
   140004dfc:	lea    rax,[rip+0x176d]        # 0x140006570
   140004e03:	mov    QWORD PTR [rcx],rax
   140004e06:	add    rcx,0x8
   140004e0a:	jmp    0x140004f52
   140004e0f:	int3   
   140004e10:	int3   
   140004e11:	int3   
   140004e12:	int3   
   140004e13:	int3   
   140004e14:	int3   
   140004e15:	int3   
   140004e16:	int3   
   140004e17:	int3   
   140004e18:	int3   
   140004e19:	int3   
   140004e1a:	int3   
   140004e1b:	int3   
   140004e1c:	int3   
   140004e1d:	int3   
   140004e1e:	int3   
   140004e1f:	int3   
   140004e20:	mov    QWORD PTR [rsp+0x8],rbx
   140004e25:	push   rdi
   140004e26:	sub    rsp,0x20
   140004e2a:	lea    rax,[rip+0x173f]        # 0x140006570
   140004e31:	mov    rdi,rcx
   140004e34:	mov    QWORD PTR [rcx],rax
   140004e37:	mov    ebx,edx
   140004e39:	add    rcx,0x8
   140004e3d:	call   0x140004f52
   140004e42:	test   bl,0x1
   140004e45:	je     0x140004e4f
   140004e47:	mov    rcx,rdi
   140004e4a:	call   0x1400045c4
   140004e4f:	mov    rax,rdi
   140004e52:	mov    rbx,QWORD PTR [rsp+0x30]
   140004e57:	add    rsp,0x20
   140004e5b:	pop    rdi
   140004e5c:	ret    
   140004e5d:	int3   
   140004e5e:	int3   
   140004e5f:	int3   
   140004e60:	int3   
   140004e61:	int3   
   140004e62:	int3   
   140004e63:	int3   
   140004e64:	sub    rsp,0x48
   140004e68:	lea    rcx,[rsp+0x20]
   140004e6d:	call   0x140004d28
   140004e72:	lea    rdx,[rip+0x3dff]        # 0x140008c78
   140004e79:	lea    rcx,[rsp+0x20]
   140004e7e:	call   0x14000506c
   140004e83:	int3   
   140004e84:	int3   
   140004e85:	int3   
   140004e86:	int3   
   140004e87:	int3   
   140004e88:	int3   
   140004e89:	int3   
   140004e8a:	int3   
   140004e8b:	int3   
   140004e8c:	sub    rsp,0x48
   140004e90:	lea    rcx,[rsp+0x20]
   140004e95:	call   0x140004d98
   140004e9a:	lea    rdx,[rip+0x3e5f]        # 0x140008d00
   140004ea1:	lea    rcx,[rsp+0x20]
   140004ea6:	call   0x14000506c
   140004eab:	int3   
   140004eac:	int3   
   140004ead:	int3   
   140004eae:	int3   
   140004eaf:	int3   
   140004eb0:	int3   
   140004eb1:	int3   
   140004eb2:	int3   
   140004eb3:	int3   
   140004eb4:	int3   
   140004eb5:	int3   
   140004eb6:	int3   
   140004eb7:	int3   
   140004eb8:	int3   
   140004eb9:	int3   
   140004eba:	int3   
   140004ebb:	int3   
   140004ebc:	int3   
   140004ebd:	int3   
   140004ebe:	int3   
   140004ebf:	int3   
   140004ec0:	cmp    QWORD PTR [rcx+0x8],0x0
   140004ec5:	lea    rax,[rip+0x16b4]        # 0x140006580
   140004ecc:	cmovne rax,QWORD PTR [rcx+0x8]
   140004ed1:	ret    
   140004ed2:	int3   
   140004ed3:	int3   
   140004ed4:	int3   
   140004ed5:	int3   
   140004ed6:	int3   
   140004ed7:	int3   
   140004ed8:	int3   
   140004ed9:	int3   
   140004eda:	int3   
   140004edb:	int3   
   140004edc:	int3   
   140004edd:	int3   
   140004ede:	int3   
   140004edf:	int3   
   140004ee0:	int3   
   140004ee1:	int3   
   140004ee2:	int3   
   140004ee3:	int3   
   140004ee4:	int3   
   140004ee5:	int3   
   140004ee6:	jmp    QWORD PTR [rip+0x128c]        # 0x140006178
   140004eec:	int3   
   140004eed:	int3   
   140004eee:	int3   
   140004eef:	int3   
   140004ef0:	int3   
   140004ef1:	int3   
   140004ef2:	jmp    QWORD PTR [rip+0x1388]        # 0x140006280
   140004ef8:	int3   
   140004ef9:	int3   
   140004efa:	int3   
   140004efb:	int3   
   140004efc:	int3   
   140004efd:	int3   
   140004efe:	jmp    QWORD PTR [rip+0x138c]        # 0x140006290
   140004f04:	int3   
   140004f05:	int3   
   140004f06:	int3   
   140004f07:	int3   
   140004f08:	int3   
   140004f09:	int3   
   140004f0a:	jmp    QWORD PTR [rip+0x1388]        # 0x140006298
   140004f10:	int3   
   140004f11:	int3   
   140004f12:	int3   
   140004f13:	int3   
   140004f14:	int3   
   140004f15:	int3   
   140004f16:	jmp    QWORD PTR [rip+0x136c]        # 0x140006288
   140004f1c:	int3   
   140004f1d:	int3   
   140004f1e:	int3   
   140004f1f:	int3   
   140004f20:	int3   
   140004f21:	int3   
   140004f22:	jmp    QWORD PTR [rip+0x1328]        # 0x140006250
   140004f28:	int3   
   140004f29:	int3   
   140004f2a:	int3   
   140004f2b:	int3   
   140004f2c:	int3   
   140004f2d:	int3   
   140004f2e:	jmp    QWORD PTR [rip+0x1314]        # 0x140006248
   140004f34:	int3   
   140004f35:	int3   
   140004f36:	int3   
   140004f37:	int3   
   140004f38:	int3   
   140004f39:	int3   
   140004f3a:	jmp    QWORD PTR [rip+0x1300]        # 0x140006240
   140004f40:	int3   
   140004f41:	int3   
   140004f42:	int3   
   140004f43:	int3   
   140004f44:	int3   
   140004f45:	int3   
   140004f46:	jmp    QWORD PTR [rip+0x131c]        # 0x140006268
   140004f4c:	int3   
   140004f4d:	int3   
   140004f4e:	int3   
   140004f4f:	int3   
   140004f50:	int3   
   140004f51:	int3   
   140004f52:	jmp    QWORD PTR [rip+0x1300]        # 0x140006258
   140004f58:	int3   
   140004f59:	int3   
   140004f5a:	int3   
   140004f5b:	int3   
   140004f5c:	int3   
   140004f5d:	int3   
   140004f5e:	jmp    QWORD PTR [rip+0x1224]        # 0x140006188
   140004f64:	int3   
   140004f65:	int3   
   140004f66:	int3   
   140004f67:	int3   
   140004f68:	int3   
   140004f69:	int3   
   140004f6a:	jmp    QWORD PTR [rip+0x1220]        # 0x140006190
   140004f70:	int3   
   140004f71:	int3   
   140004f72:	int3   
   140004f73:	int3   
   140004f74:	int3   
   140004f75:	int3   
   140004f76:	jmp    QWORD PTR [rip+0x121c]        # 0x140006198
   140004f7c:	int3   
   140004f7d:	int3   
   140004f7e:	int3   
   140004f7f:	int3   
   140004f80:	int3   
   140004f81:	int3   
   140004f82:	jmp    QWORD PTR [rip+0x1218]        # 0x1400061a0
   140004f88:	int3   
   140004f89:	int3   
   140004f8a:	int3   
   140004f8b:	int3   
   140004f8c:	int3   
   140004f8d:	int3   
   140004f8e:	jmp    QWORD PTR [rip+0x1214]        # 0x1400061a8
   140004f94:	int3   
   140004f95:	int3   
   140004f96:	int3   
   140004f97:	int3   
   140004f98:	int3   
   140004f99:	int3   
   140004f9a:	jmp    QWORD PTR [rip+0x1210]        # 0x1400061b0
   140004fa0:	int3   
   140004fa1:	int3   
   140004fa2:	int3   
   140004fa3:	int3   
   140004fa4:	int3   
   140004fa5:	int3   
   140004fa6:	jmp    QWORD PTR [rip+0x120c]        # 0x1400061b8
   140004fac:	int3   
   140004fad:	int3   
   140004fae:	int3   
   140004faf:	int3   
   140004fb0:	int3   
   140004fb1:	int3   
   140004fb2:	jmp    QWORD PTR [rip+0x1208]        # 0x1400061c0
   140004fb8:	int3   
   140004fb9:	int3   
   140004fba:	int3   
   140004fbb:	int3   
   140004fbc:	int3   
   140004fbd:	int3   
   140004fbe:	jmp    QWORD PTR [rip+0x1204]        # 0x1400061c8
   140004fc4:	int3   
   140004fc5:	int3   
   140004fc6:	int3   
   140004fc7:	int3   
   140004fc8:	int3   
   140004fc9:	int3   
   140004fca:	int3   
   140004fcb:	int3   
   140004fcc:	int3   
   140004fcd:	int3   
   140004fce:	int3   
   140004fcf:	int3   
   140004fd0:	jmp    QWORD PTR [rip+0x11fa]        # 0x1400061d0
   140004fd6:	int3   
   140004fd7:	int3   
   140004fd8:	int3   
   140004fd9:	int3   
   140004fda:	int3   
   140004fdb:	int3   
   140004fdc:	jmp    QWORD PTR [rip+0x11f6]        # 0x1400061d8
   140004fe2:	int3   
   140004fe3:	int3   
   140004fe4:	int3   
   140004fe5:	int3   
   140004fe6:	int3   
   140004fe7:	int3   
   140004fe8:	jmp    QWORD PTR [rip+0x1282]        # 0x140006270
   140004fee:	int3   
   140004fef:	int3   
   140004ff0:	int3   
   140004ff1:	int3   
   140004ff2:	int3   
   140004ff3:	int3   
   140004ff4:	jmp    QWORD PTR [rip+0x11e6]        # 0x1400061e0
   140004ffa:	int3   
   140004ffb:	int3   
   140004ffc:	int3   
   140004ffd:	int3   
   140004ffe:	int3   
   140004fff:	int3   
   140005000:	jmp    QWORD PTR [rip+0x11e2]        # 0x1400061e8
   140005006:	int3   
   140005007:	int3   
   140005008:	int3   
   140005009:	int3   
   14000500a:	int3   
   14000500b:	int3   
   14000500c:	jmp    QWORD PTR [rip+0x11de]        # 0x1400061f0
   140005012:	int3   
   140005013:	int3   
   140005014:	int3   
   140005015:	int3   
   140005016:	int3   
   140005017:	int3   
   140005018:	jmp    QWORD PTR [rip+0x11e2]        # 0x140006200
   14000501e:	int3   
   14000501f:	int3   
   140005020:	int3   
   140005021:	int3   
   140005022:	int3   
   140005023:	int3   
   140005024:	jmp    QWORD PTR [rip+0x11de]        # 0x140006208
   14000502a:	int3   
   14000502b:	int3   
   14000502c:	int3   
   14000502d:	int3   
   14000502e:	int3   
   14000502f:	int3   
   140005030:	jmp    QWORD PTR [rip+0x11da]        # 0x140006210
   140005036:	int3   
   140005037:	int3   
   140005038:	int3   
   140005039:	int3   
   14000503a:	int3   
   14000503b:	int3   
   14000503c:	jmp    QWORD PTR [rip+0x11d6]        # 0x140006218
   140005042:	int3   
   140005043:	int3   
   140005044:	int3   
   140005045:	int3   
   140005046:	int3   
   140005047:	int3   
   140005048:	jmp    QWORD PTR [rip+0x11d2]        # 0x140006220
   14000504e:	int3   
   14000504f:	int3   
   140005050:	int3   
   140005051:	int3   
   140005052:	int3   
   140005053:	int3   
   140005054:	jmp    QWORD PTR [rip+0x11ce]        # 0x140006228
   14000505a:	int3   
   14000505b:	int3   
   14000505c:	int3   
   14000505d:	int3   
   14000505e:	int3   
   14000505f:	int3   
   140005060:	jmp    QWORD PTR [rip+0x11ca]        # 0x140006230
   140005066:	int3   
   140005067:	int3   
   140005068:	int3   
   140005069:	int3   
   14000506a:	int3   
   14000506b:	int3   
   14000506c:	jmp    QWORD PTR [rip+0x11c6]        # 0x140006238
   140005072:	int3   
   140005073:	int3   
   140005074:	int3   
   140005075:	int3   
   140005076:	int3   
   140005077:	int3   
   140005078:	jmp    QWORD PTR [rip+0x105a]        # 0x1400060d8
   14000507e:	int3   
   14000507f:	int3   
   140005080:	int3   
   140005081:	int3   
   140005082:	int3   
   140005083:	int3   
   140005084:	sub    rsp,0x28
   140005088:	mov    r8,QWORD PTR [r9+0x38]
   14000508c:	mov    rcx,rdx
   14000508f:	mov    rdx,r9
   140005092:	call   0x1400050a8
   140005097:	mov    eax,0x1
   14000509c:	add    rsp,0x28
   1400050a0:	ret    
   1400050a1:	int3   
   1400050a2:	int3   
   1400050a3:	int3   
   1400050a4:	int3   
   1400050a5:	int3   
   1400050a6:	int3   
   1400050a7:	int3   
   1400050a8:	rex push rbx
   1400050aa:	sub    rsp,0x20
   1400050ae:	mov    r11d,DWORD PTR [r8]
   1400050b1:	mov    rbx,rdx
   1400050b4:	and    r11d,0xfffffff8
   1400050b8:	mov    r9,rcx
   1400050bb:	test   BYTE PTR [r8],0x4
   1400050bf:	mov    r10,rcx
   1400050c2:	je     0x1400050d7
   1400050c4:	mov    eax,DWORD PTR [r8+0x8]
   1400050c8:	movsxd r10,DWORD PTR [r8+0x4]
   1400050cc:	neg    eax
   1400050ce:	add    r10,rcx
   1400050d1:	movsxd rcx,eax
   1400050d4:	and    r10,rcx
   1400050d7:	movsxd rax,r11d
   1400050da:	mov    rdx,QWORD PTR [rax+r10*1]
   1400050de:	mov    rax,QWORD PTR [rbx+0x10]
   1400050e2:	mov    ecx,DWORD PTR [rax+0x8]
   1400050e5:	add    rcx,QWORD PTR [rbx+0x8]
   1400050e9:	test   BYTE PTR [rcx+0x3],0xf
   1400050ed:	je     0x1400050fb
   1400050ef:	movzx  eax,BYTE PTR [rcx+0x3]
   1400050f3:	and    eax,0xfffffff0
   1400050f6:	cdqe   
   1400050f8:	add    r9,rax
   1400050fb:	xor    r9,rdx
   1400050fe:	mov    rcx,r9
   140005101:	add    rsp,0x20
   140005105:	pop    rbx
   140005106:	jmp    0x140004400
   14000510b:	int3   
   14000510c:	int3   
   14000510d:	int3   
   14000510e:	int3   
   14000510f:	int3   
   140005110:	int3   
   140005111:	int3   
   140005112:	int3   
   140005113:	int3   
   140005114:	mov    rax,rsp
   140005117:	mov    QWORD PTR [rax+0x8],rbx
   14000511b:	mov    QWORD PTR [rax+0x10],rbp
   14000511f:	mov    QWORD PTR [rax+0x18],rsi
   140005123:	mov    QWORD PTR [rax+0x20],rdi
   140005127:	push   r14
   140005129:	sub    rsp,0x20
   14000512d:	mov    rbx,QWORD PTR [r9+0x38]
   140005131:	mov    rsi,rdx
   140005134:	mov    r14,r8
   140005137:	mov    rbp,rcx
   14000513a:	mov    rdx,r9
   14000513d:	mov    rcx,rsi
   140005140:	mov    rdi,r9
   140005143:	lea    r8,[rbx+0x4]
   140005147:	call   0x1400050a8
   14000514c:	mov    r11d,DWORD PTR [rbx+0x4]
   140005150:	mov    r8d,0x1
   140005156:	mov    r10d,DWORD PTR [rbp+0x4]
   14000515a:	mov    eax,r11d
   14000515d:	and    eax,r8d
   140005160:	and    r11d,0x2
   140005164:	and    r10b,0x66
   140005168:	cmove  r11d,eax
   14000516c:	test   r11d,r11d
   14000516f:	je     0x140005185
   140005171:	mov    r9,rdi
   140005174:	mov    r8,r14
   140005177:	mov    rdx,rsi
   14000517a:	mov    rcx,rbp
   14000517d:	call   0x140005060
   140005182:	mov    r8d,eax
   140005185:	mov    rbx,QWORD PTR [rsp+0x30]
   14000518a:	mov    eax,r8d
   14000518d:	mov    rbp,QWORD PTR [rsp+0x38]
   140005192:	mov    rsi,QWORD PTR [rsp+0x40]
   140005197:	mov    rdi,QWORD PTR [rsp+0x48]
   14000519c:	add    rsp,0x20
   1400051a0:	pop    r14
   1400051a2:	ret    
   1400051a3:	int3   
   1400051a4:	int3   
   1400051a5:	int3   
   1400051a6:	int3   
   1400051a7:	int3   
   1400051a8:	int3   
   1400051a9:	int3   
   1400051aa:	jmp    QWORD PTR [rip+0x1048]        # 0x1400061f8
   1400051b0:	int3   
   1400051b1:	int3   
   1400051b2:	int3   
   1400051b3:	int3   
   1400051b4:	int3   
   1400051b5:	int3   
   1400051b6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400051c0:	jmp    rax
   1400051c2:	int3   
   1400051c3:	int3   
   1400051c4:	int3   
   1400051c5:	int3   
   1400051c6:	int3   
   1400051c7:	int3   
   1400051c8:	mov    QWORD PTR [rsp+0x10],rdx
   1400051cd:	push   rbp
   1400051ce:	sub    rsp,0x20
   1400051d2:	mov    rbp,rdx
   1400051d5:	mov    rcx,QWORD PTR [rbp+0x68]
   1400051d9:	mov    QWORD PTR [rbp+0x68],rcx
   1400051dd:	xor    eax,eax
   1400051df:	add    rcx,0x1
   1400051e3:	je     0x1400051fb
   1400051e5:	cmp    rcx,0xffffffffffffffff
   1400051e9:	ja     0x1400051f5
   1400051eb:	call   0x1400045fc
   1400051f0:	test   rax,rax
   1400051f3:	jne    0x1400051fb
   1400051f5:	call   QWORD PTR [rip+0x10fd]        # 0x1400062f8
   1400051fb:	mov    QWORD PTR [rbp+0x78],rax
   1400051ff:	lea    rax,[rip+0xffffffffffffd34d]        # 0x140002553
   140005206:	add    rsp,0x20
   14000520a:	pop    rbp
   14000520b:	ret    
   14000520c:	int3   
   14000520d:	mov    QWORD PTR [rsp+0x10],rdx
   140005212:	push   rbp
   140005213:	sub    rsp,0x20
   140005217:	mov    rbp,rdx
   14000521a:	xor    r8d,r8d
   14000521d:	mov    dl,0x1
   14000521f:	mov    rcx,QWORD PTR [rbp+0x60]
   140005223:	call   0x140002400
   140005228:	xor    edx,edx
   14000522a:	xor    ecx,ecx
   14000522c:	call   0x14000506c
   140005231:	nop
   140005232:	int3   
   140005233:	int3   
   140005234:	int3   
   140005235:	int3   
   140005236:	int3   
   140005237:	int3   
   140005238:	lea    rcx,[rdx+0xe0]
   14000523f:	jmp    0x1400038b4
   140005244:	lea    rcx,[rdx+0xc0]
   14000524b:	jmp    0x1400039cc
   140005250:	lea    rcx,[rdx+0x128]
   140005257:	jmp    0x1400039cc
   14000525c:	lea    rcx,[rdx+0x108]
   140005263:	jmp    0x1400039cc
   140005268:	int3   
   140005269:	int3   
   14000526a:	int3   
   14000526b:	int3   
   14000526c:	int3   
   14000526d:	int3   
   14000526e:	lea    rcx,[rdx+0x78]
   140005275:	jmp    0x140003a3c
   14000527a:	int3   
   14000527b:	int3   
   14000527c:	int3   
   14000527d:	int3   
   14000527e:	int3   
   14000527f:	int3   
   140005280:	mov    QWORD PTR [rsp+0x10],rdx
   140005285:	push   rbp
   140005286:	sub    rsp,0x20
   14000528a:	mov    rbp,rdx
   14000528d:	mov    rcx,QWORD PTR [rbp+0x68]
   140005291:	mov    QWORD PTR [rbp+0x68],rcx
   140005295:	xor    eax,eax
   140005297:	add    rcx,0x1
   14000529b:	je     0x1400052bf
   14000529d:	movabs rax,0x7fffffffffffffff
   1400052a7:	cmp    rcx,rax
   1400052aa:	ja     0x1400052b9
   1400052ac:	add    rcx,rcx
   1400052af:	call   0x1400045fc
   1400052b4:	test   rax,rax
   1400052b7:	jne    0x1400052bf
   1400052b9:	call   QWORD PTR [rip+0x1039]        # 0x1400062f8
   1400052bf:	mov    QWORD PTR [rbp+0x78],rax
   1400052c3:	lea    rax,[rip+0xffffffffffffec08]        # 0x140003ed2
   1400052ca:	add    rsp,0x20
   1400052ce:	pop    rbp
   1400052cf:	ret    
   1400052d0:	int3   
   1400052d1:	mov    QWORD PTR [rsp+0x10],rdx
   1400052d6:	push   rbp
   1400052d7:	sub    rsp,0x20
   1400052db:	mov    rbp,rdx
   1400052de:	xor    r8d,r8d
   1400052e1:	mov    dl,0x1
   1400052e3:	mov    rcx,QWORD PTR [rbp+0x60]
   1400052e7:	call   0x140003b6c
   1400052ec:	xor    edx,edx
   1400052ee:	xor    ecx,ecx
   1400052f0:	call   0x14000506c
   1400052f5:	nop
   1400052f6:	int3   
   1400052f7:	int3   
   1400052f8:	int3   
   1400052f9:	int3   
   1400052fa:	int3   
   1400052fb:	int3   
   1400052fc:	mov    QWORD PTR [rsp+0x10],rdx
   140005301:	push   rbp
   140005302:	sub    rsp,0x20
   140005306:	mov    rbp,rdx
   140005309:	xor    r8d,r8d
   14000530c:	mov    dl,0x1
   14000530e:	mov    rcx,QWORD PTR [rbp+0x50]
   140005312:	call   0x140003b6c
   140005317:	xor    edx,edx
   140005319:	xor    ecx,ecx
   14000531b:	call   0x14000506c
   140005320:	nop
   140005321:	int3   
   140005322:	int3   
   140005323:	int3   
   140005324:	int3   
   140005325:	int3   
   140005326:	int3   
   140005327:	rex push rbp
   140005329:	sub    rsp,0x20
   14000532d:	mov    rbp,rdx
   140005330:	mov    rax,QWORD PTR [rcx]
   140005333:	mov    rdx,rcx
   140005336:	mov    ecx,DWORD PTR [rax]
   140005338:	call   0x140004fe8
   14000533d:	nop
   14000533e:	add    rsp,0x20
   140005342:	pop    rbp
   140005343:	ret    
   140005344:	int3   
   140005345:	int3   
   140005346:	int3   
   140005347:	int3   
   140005348:	int3   
   140005349:	int3   
   14000534a:	int3   
   14000534b:	mov    QWORD PTR [rsp+0x10],rdx
   140005350:	push   rbp
   140005351:	sub    rsp,0x20
   140005355:	mov    rbp,rdx
   140005358:	lea    rax,[rip+0xfffffffffffff2f5]        # 0x140004654
   14000535f:	add    rsp,0x20
   140005363:	pop    rbp
   140005364:	ret    
   140005365:	int3   
   140005366:	int3   
   140005367:	int3   
   140005368:	int3   
   140005369:	int3   
   14000536a:	int3   
   14000536b:	int3   
   14000536c:	rex push rbp
   14000536e:	mov    rbp,rdx
   140005371:	mov    rax,QWORD PTR [rcx]
   140005374:	xor    ecx,ecx
   140005376:	cmp    DWORD PTR [rax],0xc0000005
   14000537c:	sete   cl
   14000537f:	mov    eax,ecx
   140005381:	pop    rbp
   140005382:	ret    
   140005383:	int3   
   140005384:	int3   
   140005385:	int3   
   140005386:	int3   
   140005387:	int3   
   140005388:	int3   
   140005389:	int3   
   14000538a:	int3   
   14000538b:	int3   
   14000538c:	int3   
   14000538d:	int3   
   14000538e:	int3   
   14000538f:	int3   
   140005390:	lea    rax,[rip+0x1731]        # 0x140006ac8
   140005397:	mov    QWORD PTR [rip+0x4cc2],rax        # 0x14000a060
   14000539e:	ret    
   14000539f:	int3   
   1400053a0:	int3   
   1400053a1:	int3   
   1400053a2:	int3   
   1400053a3:	int3   
   1400053a4:	int3   
   1400053a5:	int3   
   1400053a6:	int3   
   1400053a7:	int3   
   1400053a8:	int3   
   1400053a9:	int3   
   1400053aa:	int3   
   1400053ab:	int3   
   1400053ac:	int3   
   1400053ad:	int3   
   1400053ae:	int3   
   1400053af:	int3   
   1400053b0:	lea    rax,[rip+0x1711]        # 0x140006ac8
   1400053b7:	mov    QWORD PTR [rip+0x4caa],rax        # 0x14000a068
   1400053be:	ret    
   1400053bf:	int3   
   1400053c0:	int3   
   1400053c1:	int3   
   1400053c2:	int3   
   1400053c3:	int3   
   1400053c4:	int3   
   1400053c5:	int3   
   1400053c6:	int3   
   1400053c7:	int3   
   1400053c8:	int3   
   1400053c9:	int3   
   1400053ca:	int3   
   1400053cb:	int3   
   1400053cc:	int3   
   1400053cd:	int3   
   1400053ce:	int3   
   1400053cf:	int3   
   1400053d0:	lea    rax,[rip+0x16f1]        # 0x140006ac8
   1400053d7:	mov    QWORD PTR [rip+0x4c9a],rax        # 0x14000a078
   1400053de:	ret    
   1400053df:	int3   
   1400053e0:	int3   
   1400053e1:	int3   
   1400053e2:	int3   
   1400053e3:	int3   
   1400053e4:	int3   
   1400053e5:	int3   
   1400053e6:	int3   
   1400053e7:	int3   
   1400053e8:	int3   
   1400053e9:	int3   
   1400053ea:	int3   
   1400053eb:	int3   
   1400053ec:	int3   
   1400053ed:	int3   
   1400053ee:	int3   
   1400053ef:	int3   
   1400053f0:	lea    rcx,[rip+0x61f1]        # 0x14000b5e8
   1400053f7:	jmp    0x140002110

Disassembly of section .rdata:

0000000140006000 <.rdata>:
   140006000:	neg    BYTE PTR [rbx+0x0]
   140006006:	add    BYTE PTR [rax],al
   140006008:	xor    BYTE PTR [rax+0x0],bl
   14000600e:	add    BYTE PTR [rax],al
   140006010:	mov    WORD PTR [rsi+0x0],ss
   140006016:	add    BYTE PTR [rax],al
   140006018:	jle    0x140005fb2
   14000601a:	add    BYTE PTR [rax],al
   14000601c:	add    BYTE PTR [rax],al
   14000601e:	add    BYTE PTR [rax],al
   140006020:	(bad)  
   140006021:	xchg   esi,eax
   140006022:	add    BYTE PTR [rax],al
   140006024:	add    BYTE PTR [rax],al
   140006026:	add    BYTE PTR [rax],al
   140006028:	pop    rax
   140006029:	cwde   
   14000602a:	add    BYTE PTR [rax],al
   14000602c:	add    BYTE PTR [rax],al
   14000602e:	add    BYTE PTR [rax],al
   140006030:	rex.X cwde 
   140006032:	add    BYTE PTR [rax],al
   140006034:	add    BYTE PTR [rax],al
   140006036:	add    BYTE PTR [rax],al
   140006038:	xchg   rdi,rax
   14000603a:	add    BYTE PTR [rax],al
   14000603c:	add    BYTE PTR [rax],al
   14000603e:	add    BYTE PTR [rax],al
   140006040:	rcl    BYTE PTR [rdi+0x0],1
	...
   14000604e:	add    BYTE PTR [rax],al
   140006050:	or     al,0x99
	...
   14000605e:	add    BYTE PTR [rax],al
   140006060:	scas   al,BYTE PTR es:[rdi]
   140006061:	xchg   edi,eax
   140006062:	add    BYTE PTR [rax],al
   140006064:	add    BYTE PTR [rax],al
   140006066:	add    BYTE PTR [rax],al
   140006068:	pushf  
   140006069:	xchg   edi,eax
   14000606a:	add    BYTE PTR [rax],al
   14000606c:	add    BYTE PTR [rax],al
   14000606e:	add    BYTE PTR [rax],al
   140006070:	cmp    al,0x99
   140006072:	add    BYTE PTR [rax],al
   140006074:	add    BYTE PTR [rax],al
   140006076:	add    BYTE PTR [rax],al
   140006078:	and    BYTE PTR [rcx+0x0],bl
	...
   140006086:	add    BYTE PTR [rax],al
   140006088:	jo     0x140006022
	...
   140006096:	add    BYTE PTR [rax],al
   140006098:	neg    BYTE PTR [rax+0x0]
	...
   1400060a6:	add    BYTE PTR [rax],al
   1400060a8:	sahf   
   1400060a9:	xchg   esi,eax
   1400060aa:	add    BYTE PTR [rax],al
   1400060ac:	add    BYTE PTR [rax],al
   1400060ae:	add    BYTE PTR [rax],al
   1400060b0:	mov    esi,0x97
   1400060b5:	add    BYTE PTR [rax],al
   1400060b7:	add    BYTE PTR [rdx],bl
   1400060b9:	xchg   edi,eax
   1400060ba:	add    BYTE PTR [rax],al
   1400060bc:	add    BYTE PTR [rax],al
   1400060be:	add    BYTE PTR [rax],al
   1400060c0:	mov    al,0x96
   1400060c2:	add    BYTE PTR [rax],al
   1400060c4:	add    BYTE PTR [rax],al
   1400060c6:	add    BYTE PTR [rax],al
   1400060c8:	or     bl,BYTE PTR [rax+0x0]
	...
   1400060d6:	add    BYTE PTR [rax],al
   1400060d8:	pop    rdx
   1400060d9:	cdq    
   1400060da:	add    BYTE PTR [rax],al
   1400060dc:	add    BYTE PTR [rax],al
   1400060de:	add    BYTE PTR [rax],al
   1400060e0:	jbe    0x14000607b
   1400060e2:	add    BYTE PTR [rax],al
   1400060e4:	add    BYTE PTR [rax],al
   1400060e6:	add    BYTE PTR [rax],al
   1400060e8:	mov    al,0x98
   1400060ea:	add    BYTE PTR [rax],al
   1400060ec:	add    BYTE PTR [rax],al
   1400060ee:	add    BYTE PTR [rax],al
   1400060f0:	(bad)  
   1400060f1:	cwde   
   1400060f2:	add    BYTE PTR [rax],al
   1400060f4:	add    BYTE PTR [rax],al
   1400060f6:	add    BYTE PTR [rax],al
   1400060f8:	mov    bl,BYTE PTR [rcx+0x0]
	...
   140006106:	add    BYTE PTR [rax],al
   140006108:	xchg   esi,eax
   140006109:	cwde   
	...
   140006116:	add    BYTE PTR [rax],al
   140006118:	ficom  WORD PTR [rsi+0x0]
   14000611e:	add    BYTE PTR [rax],al
   140006120:	(bad)  
   140006121:	xchg   edi,eax
   140006122:	add    BYTE PTR [rax],al
   140006124:	add    BYTE PTR [rax],al
   140006126:	add    BYTE PTR [rax],al
   140006128:	hlt    
   140006129:	xchg   esi,eax
   14000612a:	add    BYTE PTR [rax],al
   14000612c:	add    BYTE PTR [rax],al
   14000612e:	add    BYTE PTR [rax],al
   140006130:	add    BYTE PTR [rdi+0x0],dl
   140006136:	add    BYTE PTR [rax],al
   140006138:	cs xchg edi,eax
	...
   140006146:	add    BYTE PTR [rax],al
   140006148:	fcomp  QWORD PTR [rax+0x0]
	...
   140006156:	add    BYTE PTR [rax],al
   140006158:	cli    
   140006159:	xchg   edi,eax
	...
   140006166:	add    BYTE PTR [rax],al
   140006168:	jb     0x140006101
	...
   140006176:	add    BYTE PTR [rax],al
   140006178:	sub    al,0x93
	...
   140006186:	add    BYTE PTR [rax],al
   140006188:	xchg   rsp,rax
   14000618a:	add    BYTE PTR [rax],al
   14000618c:	add    BYTE PTR [rax],al
   14000618e:	add    BYTE PTR [rax],al
   140006190:	pop    rax
   140006191:	xchg   esp,eax
   140006192:	add    BYTE PTR [rax],al
   140006194:	add    BYTE PTR [rax],al
   140006196:	add    BYTE PTR [rax],al
   140006198:	fs xchg esp,eax
   14000619a:	add    BYTE PTR [rax],al
   14000619c:	add    BYTE PTR [rax],al
   14000619e:	add    BYTE PTR [rax],al
   1400061a0:	jle    0x140006136
   1400061a2:	add    BYTE PTR [rax],al
   1400061a4:	add    BYTE PTR [rax],al
   1400061a6:	add    BYTE PTR [rax],al
   1400061a8:	(bad)  
   1400061a9:	xchg   esp,eax
   1400061aa:	add    BYTE PTR [rax],al
   1400061ac:	add    BYTE PTR [rax],al
   1400061ae:	add    BYTE PTR [rax],al
   1400061b0:	lods   al,BYTE PTR ds:[rsi]
   1400061b1:	xchg   esp,eax
   1400061b2:	add    BYTE PTR [rax],al
   1400061b4:	add    BYTE PTR [rax],al
   1400061b6:	add    BYTE PTR [rax],al
   1400061b8:	mov    eax,0x94
   1400061bd:	add    BYTE PTR [rax],al
   1400061bf:	add    dh,bl
   1400061c1:	xchg   esp,eax
   1400061c2:	add    BYTE PTR [rax],al
   1400061c4:	add    BYTE PTR [rax],al
   1400061c6:	add    BYTE PTR [rax],al
   1400061c8:	add    dl,BYTE PTR [rbp+0x0]
   1400061ce:	add    BYTE PTR [rax],al
   1400061d0:	and    BYTE PTR [rbp+0x0],dl
   1400061d6:	add    BYTE PTR [rax],al
   1400061d8:	xor    BYTE PTR [rbp+0x0],dl
   1400061de:	add    BYTE PTR [rax],al
   1400061e0:	xchg   bp,ax
   1400061e2:	add    BYTE PTR [rax],al
   1400061e4:	add    BYTE PTR [rax],al
   1400061e6:	add    BYTE PTR [rax],al
   1400061e8:	jp     0x14000617f
   1400061ea:	add    BYTE PTR [rax],al
   1400061ec:	add    BYTE PTR [rax],al
   1400061ee:	add    BYTE PTR [rax],al
   1400061f0:	mov    dl,BYTE PTR [rbp+0x0]
   1400061f6:	add    BYTE PTR [rax],al
   1400061f8:	cmp    bl,BYTE PTR [rax+rax*1+0x0]
   1400061ff:	add    BYTE PTR [rsi+0x95],bl
   140006205:	add    BYTE PTR [rax],al
   140006207:	add    BYTE PTR [rax+0x95],ch
   14000620d:	add    BYTE PTR [rax],al
   14000620f:	add    BYTE PTR [rdx+0x95],dh
   140006215:	add    BYTE PTR [rax],al
   140006217:	add    BYTE PTR [rsi+0x95],bh
   14000621d:	add    BYTE PTR [rax],al
   14000621f:	add    dl,cl
   140006221:	xchg   ebp,eax
   140006222:	add    BYTE PTR [rax],al
   140006224:	add    BYTE PTR [rax],al
   140006226:	add    BYTE PTR [rax],al
   140006228:	ficom  DWORD PTR [rbp+0x0]
   14000622e:	add    BYTE PTR [rax],al
   140006230:	repnz xchg ebp,eax
   140006232:	add    BYTE PTR [rax],al
   140006234:	add    BYTE PTR [rax],al
   140006236:	add    BYTE PTR [rax],al
   140006238:	or     BYTE PTR [rsi+0x0],dl
   14000623e:	add    BYTE PTR [rax],al
   140006240:	(bad)  
   140006241:	xchg   ebx,eax
   140006242:	add    BYTE PTR [rax],al
   140006244:	add    BYTE PTR [rax],al
   140006246:	add    BYTE PTR [rax],al
   140006248:	out    dx,al
   140006249:	xchg   ebx,eax
   14000624a:	add    BYTE PTR [rax],al
   14000624c:	add    BYTE PTR [rax],al
   14000624e:	add    BYTE PTR [rax],al
   140006250:	ficom  WORD PTR [rbx+0x0]
   140006256:	add    BYTE PTR [rax],al
   140006258:	sub    dl,BYTE PTR [rax+rax*1+0x0]
   14000625f:	add    ah,dl
   140006261:	xchg   ebx,eax
   140006262:	add    BYTE PTR [rax],al
   140006264:	add    BYTE PTR [rax],al
   140006266:	add    BYTE PTR [rax],al
   140006268:	adc    BYTE PTR [rax+rax*1+0x0],dl
   14000626f:	add    BYTE PTR [rax-0x6b],dl
	...
   14000627e:	add    BYTE PTR [rax],al
   140006280:	rex xchg ebx,eax
   140006282:	add    BYTE PTR [rax],al
   140006284:	add    BYTE PTR [rax],al
   140006286:	add    BYTE PTR [rax],al
   140006288:	fs xchg ebx,eax
   14000628a:	add    BYTE PTR [rax],al
   14000628c:	add    BYTE PTR [rax],al
   14000628e:	add    BYTE PTR [rax],al
   140006290:	rex.WR xchg rbx,rax
   140006292:	add    BYTE PTR [rax],al
   140006294:	add    BYTE PTR [rax],al
   140006296:	add    BYTE PTR [rax],al
   140006298:	pop    rdx
   140006299:	xchg   ebx,eax
	...
   1400062a6:	add    BYTE PTR [rax],al
   1400062a8:	and    BYTE PTR [rax+rax*1+0x0],bl
   1400062af:	add    BYTE PTR [rax-0x69],ah
   1400062b2:	add    BYTE PTR [rax],al
   1400062b4:	add    BYTE PTR [rax],al
   1400062b6:	add    BYTE PTR [rax],al
   1400062b8:	xchg   BYTE PTR [rdi+0x0],dl
   1400062be:	add    BYTE PTR [rax],al
   1400062c0:	or     bl,BYTE PTR [rax+rax*1+0x0]
   1400062c7:	add    BYTE PTR [rax],ah
   1400062c9:	cwde   
	...
   1400062d6:	add    BYTE PTR [rax],al
   1400062d8:	(bad)  
   1400062d9:	fwait
	...
   1400062e6:	add    BYTE PTR [rax],al
   1400062e8:	rcr    BYTE PTR [rbx+0x0],0x0
	...
   1400062f7:	add    al,al
   1400062f9:	xchg   edx,eax
   1400062fa:	add    BYTE PTR [rax],al
   1400062fc:	add    BYTE PTR [rax],al
   1400062fe:	add    BYTE PTR [rax],al
   140006300:	adc    BYTE PTR [rdx+0x0],0x0
   140006307:	add    BYTE PTR [rax+0x92],ah
   14000630d:	add    BYTE PTR [rax],al
   14000630f:	add    dl,bl
   140006311:	xchg   edx,eax
   140006312:	add    BYTE PTR [rax],al
   140006314:	add    BYTE PTR [rax],al
   140006316:	add    BYTE PTR [rax],al
   140006318:	cld    
   140006319:	xchg   edx,eax
	...
   140006326:	add    BYTE PTR [rax],al
   140006328:	outs   dx,BYTE PTR ds:[rsi]
   140006329:	xchg   esi,eax
   14000632a:	add    BYTE PTR [rax],al
   14000632c:	add    BYTE PTR [rax],al
   14000632e:	add    BYTE PTR [rax],al
   140006330:	rex xchg esi,eax
   140006332:	add    BYTE PTR [rax],al
   140006334:	add    BYTE PTR [rax],al
   140006336:	add    BYTE PTR [rax],al
   140006338:	push   rsp
   140006339:	xchg   esi,eax
	...
   140006346:	add    BYTE PTR [rax],al
   140006348:	push   rax
   140006349:	rex.RXB add BYTE PTR [r8+0x1],r8b
   14000634d:	add    BYTE PTR [rax],al
   14000634f:	add    al,al
   140006351:	push   rcx
   140006352:	add    BYTE PTR [rax+0x1],al
	...
   14000635d:	add    BYTE PTR [rax],al
   14000635f:	add    BYTE PTR [rax],dh
   140006361:	rex.X add BYTE PTR [rax+0x1],al
   140006365:	add    BYTE PTR [rax],al
   140006367:	add    BYTE PTR [rax+0x1400011],ah
   14000636d:	add    BYTE PTR [rax],al
   14000636f:	add    al,dl
   140006371:	adc    DWORD PTR [rax],eax
   140006373:	rex add DWORD PTR [rax],eax
   140006376:	add    BYTE PTR [rax],al
   140006378:	loopne 0x14000638b
   14000637a:	add    BYTE PTR [rax+0x1],al
   14000637d:	add    BYTE PTR [rax],al
   14000637f:	add    al,dh
   140006381:	adc    DWORD PTR [rax],eax
   140006383:	rex add DWORD PTR [rax],eax
   140006386:	add    BYTE PTR [rax],al
   140006388:	add    BYTE PTR [rdx],dl
   14000638a:	add    BYTE PTR [rax+0x1],al
	...
   14000639d:	add    BYTE PTR [rax],al
   14000639f:	add    BYTE PTR [rax+0x41],dh
   1400063a2:	add    BYTE PTR [rax+0x1],al
   1400063a5:	add    BYTE PTR [rax],al
   1400063a7:	add    al,dh
   1400063a9:	add    BYTE PTR [rax+0x1],al
   1400063ad:	add    BYTE PTR [rax],al
   1400063af:	add    BYTE PTR [rax+0x41],al
   1400063b2:	add    BYTE PTR [rax+0x1],al
	...
   1400063dd:	add    BYTE PTR [rax],al
   1400063df:	add    BYTE PTR [rax],dl
   1400063e1:	adc    BYTE PTR [rax],al
   1400063e3:	add    BYTE PTR [rax-0x2fffffef],ah
   1400063e9:	adc    DWORD PTR [rax],eax
   1400063eb:	add    al,ah
   1400063ed:	adc    DWORD PTR [rax],eax
   1400063ef:	add    al,dh
   1400063f1:	adc    DWORD PTR [rax],eax
   1400063f3:	add    BYTE PTR [rax],al
   1400063f5:	adc    al,BYTE PTR [rax]
   1400063f7:	add    BYTE PTR [rax+0x12],dh
   1400063fa:	add    BYTE PTR [rax],al
   1400063fc:	nop
   1400063fd:	adc    al,BYTE PTR [rax]
   1400063ff:	add    BYTE PTR [rax-0xfffffed],ah
   140006405:	adc    eax,DWORD PTR [rax]
   140006407:	add    BYTE PTR [rax-0x4fffffec],ah
   14000640d:	adc    al,0x0
   14000640f:	add    al,al
   140006411:	adc    al,0x0
   140006413:	add    al,dl
   140006415:	adc    al,0x0
   140006417:	add    al,ah
   140006419:	adc    al,0x0
   14000641b:	add    BYTE PTR [rax+0x16],dl
   14000641e:	add    BYTE PTR [rax],al
   140006420:	adc    BYTE PTR [rsi],0x0
   140006423:	add    BYTE PTR [rax+0x10000016],ah
   140006429:	(bad)  
   14000642a:	add    BYTE PTR [rax],al
   14000642c:	xor    BYTE PTR [rdi],dl
   14000642e:	add    BYTE PTR [rax],al
   140006430:	rex (bad) 
   140006432:	add    BYTE PTR [rax],al
   140006434:	adc    BYTE PTR [rdi],0x0
   140006437:	add    BYTE PTR [rax-0x2fffffe9],dl
   14000643d:	(bad)  
   14000643e:	add    BYTE PTR [rax],al
   140006440:	loopne 0x140006459
   140006442:	add    BYTE PTR [rax],al
   140006444:	and    BYTE PTR [rax],bl
   140006446:	add    BYTE PTR [rax],al
   140006448:	jo     0x140006462
   14000644a:	add    BYTE PTR [rax],al
   14000644c:	sbb    BYTE PTR [rax],0x0
   14000644f:	add    BYTE PTR [rax-0x1fffffe4],ah
   140006455:	sbb    eax,0x1e800000
   14000645a:	add    BYTE PTR [rax],al
   14000645c:	movabs al,ds:0xc000001f2000001e
   140006465:	(bad)  
   140006466:	add    BYTE PTR [rax],al
   140006468:	and    BYTE PTR [rax],al
   14000646b:	add    BYTE PTR [rax-0x4fffffe0],ah
   140006471:	and    BYTE PTR [rax],al
   140006473:	add    al,al
   140006475:	and    BYTE PTR [rax],al
   140006477:	add    BYTE PTR [rax-0x3fffffdf],ah
   14000647d:	and    DWORD PTR [rax],eax
   14000647f:	add    al,ah
   140006481:	and    DWORD PTR [rax],eax
   140006483:	add    BYTE PTR [rax],dl
   140006485:	and    al,BYTE PTR [rax]
   140006487:	add    BYTE PTR [rax+0x22],dl
   14000648a:	add    BYTE PTR [rax],al
   14000648c:	(bad)  
   14000648d:	and    al,0x0
   14000648f:	add    BYTE PTR [rax-0x2fffffda],dl
   140006495:	(bad)  
   140006496:	add    BYTE PTR [rax],al
   140006498:	shr    BYTE PTR [rax+rax*1],0x0
   14000649c:	loopne 0x1400064ca
   14000649e:	add    BYTE PTR [rax],al
   1400064a0:	nop
   1400064a1:	sub    eax,0x2df00000
   1400064a6:	add    BYTE PTR [rax],al
   1400064a8:	movabs al,ds:0xc000002f4000002e
   1400064b1:	(bad)  
   1400064b2:	add    BYTE PTR [rax],al
   1400064b4:	add    BYTE PTR [rdx],dh
   1400064b6:	add    BYTE PTR [rax],al
   1400064b8:	xor    BYTE PTR [rdx],dh
   1400064ba:	add    BYTE PTR [rax],al
   1400064bc:	movabs al,ds:0x4000003300000032
   1400064c5:	xor    eax,DWORD PTR [rax]
   1400064c7:	add    BYTE PTR [rax+0x33],ah
   1400064ca:	add    BYTE PTR [rax],al
   1400064cc:	shl    BYTE PTR [rbx],1
   1400064ce:	add    BYTE PTR [rax],al
   1400064d0:	lock add BYTE PTR [rax],al
   1400064d4:	rex
   1400064d5:	add    BYTE PTR [r8],al
   1400064d8:	jo     0x14000651b
   1400064da:	add    BYTE PTR [rax],al
   1400064dc:	xor    BYTE PTR [rdx+0x0],al
   1400064df:	add    al,dl
   1400064e1:	rex.XB add BYTE PTR [r8],al
   1400064e4:	rol    BYTE PTR [rbp+0x0],1
   1400064e7:	add    BYTE PTR [rax+0x47],dl
   1400064ea:	add    BYTE PTR [rax],al
   1400064ec:	xor    BYTE PTR [rdx+0x0],cl
   1400064ef:	add    al,dl
   1400064f1:	rex.WX add BYTE PTR [rax],al
   1400064f4:	nop
   1400064f5:	rex.WXB add BYTE PTR [r8],al
   1400064f8:	and    BYTE PTR [rsi+0x0],cl
   1400064fb:	add    al,al
   1400064fd:	rex.WRX add BYTE PTR [rax],r8b
   140006500:	ror    BYTE PTR [rdi+0x0],1
   140006503:	add    BYTE PTR [rax-0x4fffffad],dl
   140006509:	push   rbx
   14000650a:	add    BYTE PTR [rax],al
   14000650c:	rcl    BYTE PTR [rbx+0x0],1
   14000650f:	add    al,dh
   140006511:	push   rbx
	...
   14000651e:	add    BYTE PTR [rax],al
   140006520:	rex ins DWORD PTR es:[rdi],dx
   140006522:	add    BYTE PTR [rax+0x1],al
   140006525:	add    BYTE PTR [rax],al
   140006527:	add    al,dl
   140006529:	add    BYTE PTR [r8+0x1],r8b
   14000652d:	add    BYTE PTR [rax],al
   14000652f:	add    BYTE PTR [rdx],ah
   140006531:	add    eax,0x21993
   140006536:	add    BYTE PTR [rax],al
   140006538:	clc    
   140006539:	mov    al,BYTE PTR [rax]
   14000653b:	add    BYTE PTR [rcx],al
   14000653d:	add    BYTE PTR [rax],al
   14000653f:	add    BYTE PTR [rbx+rcx*4+0x40000],dh
   140006546:	add    BYTE PTR [rax],al
   140006548:	loopne 0x1400064d5
   14000654a:	add    BYTE PTR [rax],al
   14000654c:	and    BYTE PTR [rax],al
   14000654e:	add    BYTE PTR [rax],al
   140006550:	add    BYTE PTR [rax],al
   140006552:	add    BYTE PTR [rax],al
   140006554:	add    DWORD PTR [rax],eax
   140006556:	add    BYTE PTR [rax],al
   140006558:	add    BYTE PTR [rax+0x14000],dh
   14000655e:	add    BYTE PTR [rax],al
   140006560:	movabs al,ds:0xb8000000014000b0
   140006569:	ins    DWORD PTR es:[rdi],dx
   14000656a:	add    BYTE PTR [rax+0x1],al
   14000656d:	add    BYTE PTR [rax],al
   14000656f:	add    BYTE PTR [rax],ah
   140006571:	rex.WRX add BYTE PTR [rax+0x1],r8b
   140006575:	add    BYTE PTR [rax],al
   140006577:	add    al,al
   140006579:	rex.WRX add BYTE PTR [rax+0x1],r8b
   14000657d:	add    BYTE PTR [rax],al
   14000657f:	add    BYTE PTR [rbp+0x6e],dl
   140006582:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   140006586:	outs   dx,BYTE PTR ds:[rsi]
   140006587:	and    BYTE PTR [rbp+0x78],ah
   14000658a:	movsxd esp,DWORD PTR [rbp+0x70]
   14000658d:	je     0x1400065f8
   14000658f:	outs   dx,DWORD PTR ds:[rsi]
   140006590:	outs   dx,BYTE PTR ds:[rsi]
   140006591:	add    BYTE PTR [rax],al
   140006593:	add    BYTE PTR [rax],al
   140006595:	add    BYTE PTR [rax],al
   140006597:	add    BYTE PTR [rax],dh
   140006599:	outs   dx,BYTE PTR ds:[rsi]
   14000659a:	add    BYTE PTR [rax+0x1],al
   14000659d:	add    BYTE PTR [rax],al
   14000659f:	add    BYTE PTR [rax],ah
   1400065a1:	rex.WRX add BYTE PTR [rax+0x1],r8b
   1400065a5:	add    BYTE PTR [rax],al
   1400065a7:	add    al,al
   1400065a9:	rex.WRX add BYTE PTR [rax+0x1],r8b
   1400065ad:	add    BYTE PTR [rax],al
   1400065af:	add    BYTE PTR [rdx+0x61],ah
   1400065b2:	and    BYTE PTR fs:[rcx+0x6c],ah
   1400065b6:	ins    BYTE PTR es:[rdi],dx
   1400065b7:	outs   dx,DWORD PTR ds:[rsi]
   1400065b8:	movsxd esp,DWORD PTR [rcx+0x74]
   1400065bb:	imul   ebp,DWORD PTR [rdi+0x6e],0x6eb00000
   1400065c2:	add    BYTE PTR [rax+0x1],al
   1400065c5:	add    BYTE PTR [rax],al
   1400065c7:	add    BYTE PTR [rax],ah
   1400065c9:	rex.WRX add BYTE PTR [rax+0x1],r8b
   1400065cd:	add    BYTE PTR [rax],al
   1400065cf:	add    al,al
   1400065d1:	rex.WRX add BYTE PTR [rax+0x1],r8b
   1400065d5:	add    BYTE PTR [rax],al
   1400065d7:	add    BYTE PTR [rdx+0x61],ah
   1400065da:	and    BYTE PTR fs:[rcx+0x72],ah
   1400065de:	jb     0x140006641
   1400065e0:	jns    0x140006602
   1400065e2:	outs   dx,BYTE PTR ds:[rsi]
   1400065e3:	gs ja  0x140006606
   1400065e6:	ins    BYTE PTR es:[rdi],dx
   1400065e7:	outs   dx,BYTE PTR gs:[rsi]
   1400065e9:	addr32 je 0x140006654
   1400065ec:	add    BYTE PTR [rax],al
   1400065ee:	add    BYTE PTR [rax],al
   1400065f0:	outs   dx,BYTE PTR ds:[rsi]
   1400065f1:	add    BYTE PTR [rax+rax*1+0x64],dh
   1400065f5:	add    BYTE PTR [rax+rax*1+0x6c],ch
   1400065f9:	add    BYTE PTR [rsi],ch
   1400065fb:	add    BYTE PTR [rax+rax*1+0x6c],ah
   1400065ff:	add    BYTE PTR [rax+rax*1+0x0],ch
   140006603:	add    BYTE PTR [rax],al
   140006605:	add    BYTE PTR [rax],al
   140006607:	add    BYTE PTR [rsp+riz*2+0x72],cl
   14000660b:	rex.RX (bad) 
   14000660d:	jae    0x140006683
   14000660f:	rex.RX (bad) 
   140006611:	imul   ebp,DWORD PTR [rcx+rcx*2+0x6e],0x64616f4c
   140006619:	gs jb  0x14000665f
   14000661c:	(bad)  
   14000661d:	ins    BYTE PTR es:[rdi],dx
   14000661e:	ins    BYTE PTR es:[rdi],dx
   14000661f:	outs   dx,DWORD PTR ds:[rsi]
   140006620:	jne    0x140006696
   140006622:	add    BYTE PTR [rax],al
   140006624:	add    BYTE PTR [rax],al
   140006626:	add    BYTE PTR [rax],al
   140006628:	push   rdx
   140006629:	je     0x140006697
   14000662b:	rex.WRX je 0x140006681
   14000662e:	je     0x140006691
   140006630:	je     0x1400066a7
   140006632:	jae    0x140006688
   140006634:	outs   dx,DWORD PTR ds:[rsi]
   140006635:	rex.R outs dx,DWORD PTR ds:[rsi]
   140006637:	jae    0x14000667e
   140006639:	jb     0x1400066ad
   14000663b:	outs   dx,DWORD PTR ds:[rsi]
   14000663c:	jb     0x14000668c
   14000663e:	outs   dx,DWORD PTR ds:[rsi]
   14000663f:	push   rsp
   140006640:	gs (bad) 
   140006642:	add    BYTE PTR [rax],al
   140006644:	add    BYTE PTR [rax],al
   140006646:	add    BYTE PTR [rax],al
   140006648:	outs   dx,BYTE PTR gs:[esi]
   14000664b:	gs jb  0x1400066b7
   14000664e:	movsxd eax,DWORD PTR [rax]
   140006650:	jne    0x1400066c0
   140006652:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   140006656:	outs   dx,BYTE PTR ds:[rsi]
   140006657:	and    BYTE PTR [rbp+0x72],ah
   14000665a:	jb     0x1400066cb
   14000665c:	jb     0x14000665e
   14000665e:	add    BYTE PTR [rax],al
   140006660:	imul   ebp,DWORD PTR [rdi+0x73],0x61657274
   140006667:	ins    DWORD PTR es:[rdi],dx
	...
   140006670:	imul   ebp,DWORD PTR [rdi+0x73],0x61657274
   140006677:	ins    DWORD PTR es:[rdi],dx
   140006678:	and    BYTE PTR [rbx+0x74],dh
   14000667b:	jb     0x1400066e2
   14000667d:	(bad)  
   14000667e:	ins    DWORD PTR es:[rdi],dx
   14000667f:	and    BYTE PTR [rbp+0x72],ah
   140006682:	jb     0x1400066f3
   140006684:	jb     0x140006686
   140006686:	add    BYTE PTR [rax],al
   140006688:	jae    0x140006703
   14000668a:	jae    0x140006700
   14000668c:	gs ins DWORD PTR es:[rdi],dx
   14000668e:	add    BYTE PTR [rax],al
   140006690:	jae    0x140006706
   140006692:	jb     0x1400066fd
   140006694:	outs   dx,BYTE PTR ds:[rsi]
   140006695:	and    BYTE PTR [edi+ebp*2+0x6f],dh
   14000669a:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   14000669e:	add    BYTE PTR [ecx+0x6e],ch
   1400066a2:	jbe    0x140006705
   1400066a4:	ins    BYTE PTR es:[rdi],dx
   1400066a5:	imul   esp,DWORD PTR [rax+riz*1+0x73],0x6e697274
   1400066ad:	and    BYTE PTR [eax+0x6f],dh
   1400066b1:	jae    0x14000671c
   1400066b3:	je     0x14000671e
   1400066b5:	outs   dx,DWORD PTR ds:[rsi]
   1400066b6:	outs   dx,BYTE PTR ds:[rsi]
	...
   1400066bf:	add    al,al
   1400066c1:	add    BYTE PTR [rax],al
   1400066c3:	add    BYTE PTR [rax],al
   1400066c5:	add    BYTE PTR [rax],al
   1400066c7:	rex.RX (bad) 
   1400066c9:	add    DWORD PTR [rax],0x140
   1400066cf:	add    BYTE PTR [rax],dl
   1400066d1:	and    al,BYTE PTR [rax]
   1400066d3:	rex add DWORD PTR [rax],eax
   1400066d6:	add    BYTE PTR [rax],al
   1400066d8:	movabs al,ds:0xc000000001400021
   1400066e1:	and    DWORD PTR [rax],eax
   1400066e3:	rex add DWORD PTR [rax],eax
   1400066e6:	add    BYTE PTR [rax],al
   1400066e8:	movabs al,ds:0xb000000001400020
   1400066f1:	adc    al,0x0
   1400066f3:	rex add DWORD PTR [rax],eax
   1400066f6:	add    BYTE PTR [rax],al
   1400066f8:	rcl    BYTE PTR [rax+rax*1],0x40
   1400066fc:	add    DWORD PTR [rax],eax
   1400066fe:	add    BYTE PTR [rax],al
   140006700:	rcl    BYTE PTR [rax+rax*1],1
   140006703:	rex add DWORD PTR [rax],eax
   140006706:	add    BYTE PTR [rax],al
   140006708:	loopne 0x14000671e
   14000670a:	add    BYTE PTR [rax+0x1],al
   14000670d:	add    BYTE PTR [rax],al
   14000670f:	add    al,ah
   140006711:	and    DWORD PTR [rax],eax
   140006713:	rex add DWORD PTR [rax],eax
   140006716:	add    BYTE PTR [rax],al
   140006718:	loopne 0x14000673b
   14000671a:	add    BYTE PTR [rax+0x1],al
   14000671d:	add    BYTE PTR [rax],al
   14000671f:	add    al,ah
   140006721:	and    DWORD PTR [rax],eax
   140006723:	rex add DWORD PTR [rax],eax
   140006726:	add    BYTE PTR [rax],al
   140006728:	loopne 0x14000674b
   14000672a:	add    BYTE PTR [rax+0x1],al
   14000672d:	add    BYTE PTR [rax],al
   14000672f:	add    BYTE PTR [rax+0x1400072],bh
   140006735:	add    BYTE PTR [rax],al
   140006737:	add    BYTE PTR [rax+0x140002e],ah
   14000673d:	add    BYTE PTR [rax],al
   14000673f:	add    BYTE PTR [rax+0x140002d],dl
   140006745:	add    BYTE PTR [rax],al
   140006747:	add    al,dh
   140006749:	sub    eax,0x14000
   14000674e:	add    BYTE PTR [rax],al
   140006750:	shr    BYTE PTR [rdi],0x0
   140006753:	rex add DWORD PTR [rax],eax
   140006756:	add    BYTE PTR [rax],al
   140006758:	rex (bad) 
   14000675a:	add    BYTE PTR [rax+0x1],al
   14000675d:	add    BYTE PTR [rax],al
   14000675f:	add    BYTE PTR [rax],al
   140006761:	xor    al,BYTE PTR [rax]
   140006763:	rex add DWORD PTR [rax],eax
   140006766:	add    BYTE PTR [rax],al
   140006768:	xor    BYTE PTR [rax+rax*1+0x40],dh
   14000676c:	add    DWORD PTR [rax],eax
   14000676e:	add    BYTE PTR [rax],al
   140006770:	push   rax
   140006771:	(bad)  
   140006772:	add    BYTE PTR [rax+0x1],al
   140006775:	add    BYTE PTR [rax],al
   140006777:	add    BYTE PTR [rax],dh
   140006779:	(bad)  
   14000677a:	add    BYTE PTR [rax+0x1],al
   14000677d:	add    BYTE PTR [rax],al
   14000677f:	add    BYTE PTR [rax+0x17],al
   140006782:	add    BYTE PTR [rax+0x1],al
   140006785:	add    BYTE PTR [rax],al
   140006787:	add    BYTE PTR [rax+0x1400016],al
   14000678d:	add    BYTE PTR [rax],al
   14000678f:	add    BYTE PTR [rax],dl
   140006791:	(bad)  
   140006792:	add    BYTE PTR [rax+0x1],al
   140006795:	add    BYTE PTR [rax],al
   140006797:	add    BYTE PTR [rax+0x1400016],ah
   14000679d:	add    BYTE PTR [rax],al
   14000679f:	add    BYTE PTR [rax+0x1400080],ah
   1400067a5:	add    BYTE PTR [rax],al
   1400067a7:	add    BYTE PTR [rax+0x140001c],ah
   1400067ad:	add    BYTE PTR [rax],al
   1400067af:	add    BYTE PTR [rip+0xffffffffb619003d],ah        # 0xf61967f2
   1400067b5:	(bad)  
   1400067b6:	xlat   BYTE PTR ds:[rbx]
   1400067b7:	rex.RXB movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400067b9:	out    0xd2,al
   1400067bb:	popf   
   1400067bc:	mov    DWORD PTR [rdx],edi
   1400067be:	in     al,0xe2
   1400067c0:	jno    0x140006744
   1400067c2:	(bad)  
   1400067c3:	retf   
   1400067c4:	fs sahf 
   1400067c6:	loope  0x140006816
   1400067c8:	stos   DWORD PTR es:[rdi],eax
   1400067c9:	repnz movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400067cb:	in     al,dx
   1400067cc:	test   DWORD PTR [rdx],edx
   1400067ce:	repz push rdx
   1400067d0:	nop
   1400067d1:	add    BYTE PTR es:[rax+0x1],al
   1400067d5:	add    BYTE PTR [rax],al
   1400067d7:	add    al,al
   1400067d9:	add    BYTE PTR [eax+0x1],al
	...
   1400067e5:	add    BYTE PTR [rax],al
   1400067e7:	add    BYTE PTR [rax+0x14000b5],ah
	...
   1400067f5:	add    BYTE PTR [rax],al
   1400067f7:	add    BYTE PTR [rax],bh
   1400067f9:	jb     0x1400067fb
   1400067fb:	rex add DWORD PTR [rax],eax
   1400067fe:	add    BYTE PTR [rax],al
   140006800:	and    BYTE PTR [rdi],bl
   140006802:	add    BYTE PTR [rax+0x1],al
   140006805:	add    BYTE PTR [rax],al
   140006807:	add    BYTE PTR [rax+0x140001e],al
   14000680d:	add    BYTE PTR [rax],al
   14000680f:	add    al,al
   140006811:	(bad)  
   140006812:	add    BYTE PTR [rax+0x1],al
   140006815:	add    BYTE PTR [rax],al
   140006817:	add    BYTE PTR [rax+0x1400032],ah
   14000681d:	add    BYTE PTR [rax],al
   14000681f:	add    BYTE PTR [rax],al
   140006821:	xor    eax,DWORD PTR [rax]
   140006823:	rex add DWORD PTR [rax],eax
   140006826:	add    BYTE PTR [rax],al
   140006828:	rex xor eax,DWORD PTR [rax]
   14000682b:	rex add DWORD PTR [rax],eax
   14000682e:	add    BYTE PTR [rax],al
   140006830:	(bad)  
   140006831:	xor    eax,DWORD PTR [rax]
   140006833:	rex add DWORD PTR [rax],eax
   140006836:	add    BYTE PTR [rax],al
   140006838:	xor    BYTE PTR [rdx],dh
   14000683a:	add    BYTE PTR [rax+0x1],al
   14000683d:	add    BYTE PTR [rax],al
   14000683f:	add    BYTE PTR [rax+0x78],cl
   140006842:	add    BYTE PTR [rax+0x1],al
   140006845:	add    BYTE PTR [rax],al
   140006847:	add    BYTE PTR [rax+0x22],dl
   14000684a:	add    BYTE PTR [rax+0x1],al
   14000684d:	add    BYTE PTR [rax],al
   14000684f:	add    BYTE PTR [rax+0x1400021],ah
   140006855:	add    BYTE PTR [rax],al
   140006857:	add    al,al
   140006859:	and    DWORD PTR [rax],eax
   14000685b:	rex add DWORD PTR [rax],eax
   14000685e:	add    BYTE PTR [rax],al
   140006860:	movabs al,ds:0xb000000001400014
   140006869:	adc    al,0x0
   14000686b:	rex add DWORD PTR [rax],eax
   14000686e:	add    BYTE PTR [rax],al
   140006870:	rcl    BYTE PTR [rax+rax*1],0x40
   140006874:	add    DWORD PTR [rax],eax
   140006876:	add    BYTE PTR [rax],al
   140006878:	rcl    BYTE PTR [rax+rax*1],1
   14000687b:	rex add DWORD PTR [rax],eax
   14000687e:	add    BYTE PTR [rax],al
   140006880:	loopne 0x140006896
   140006882:	add    BYTE PTR [rax+0x1],al
   140006885:	add    BYTE PTR [rax],al
   140006887:	add    al,ah
   140006889:	and    DWORD PTR [rax],eax
   14000688b:	rex add DWORD PTR [rax],eax
   14000688e:	add    BYTE PTR [rax],al
   140006890:	loopne 0x1400068b3
   140006892:	add    BYTE PTR [rax+0x1],al
   140006895:	add    BYTE PTR [rax],al
   140006897:	add    al,ah
   140006899:	and    DWORD PTR [rax],eax
   14000689b:	rex add DWORD PTR [rax],eax
   14000689e:	add    BYTE PTR [rax],al
   1400068a0:	loopne 0x1400068c3
   1400068a2:	add    BYTE PTR [rax+0x1],al
   1400068a5:	add    BYTE PTR [rax],al
   1400068a7:	add    BYTE PTR [rax],cl
   1400068a9:	jle    0x1400068ab
   1400068ab:	rex add DWORD PTR [rax],eax
   1400068ae:	add    BYTE PTR [rax],al
   1400068b0:	and    BYTE PTR [rdi],bl
   1400068b2:	add    BYTE PTR [rax+0x1],al
   1400068b5:	add    BYTE PTR [rax],al
   1400068b7:	add    BYTE PTR [rax+0x140001e],al
   1400068bd:	add    BYTE PTR [rax],al
   1400068bf:	add    al,al
   1400068c1:	(bad)  
   1400068c2:	add    BYTE PTR [rax+0x1],al
   1400068c5:	add    BYTE PTR [rax],al
   1400068c7:	add    al,dl
   1400068c9:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   1400068cd:	add    BYTE PTR [rax],al
   1400068cf:	add    al,dl
   1400068d1:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   1400068d5:	add    BYTE PTR [rax],al
   1400068d7:	add    al,dl
   1400068d9:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   1400068dd:	add    BYTE PTR [rax],al
   1400068df:	add    al,dl
   1400068e1:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   1400068e5:	add    BYTE PTR [rax],al
   1400068e7:	add    BYTE PTR [rax],al
   1400068e9:	xor    al,BYTE PTR [rax]
   1400068eb:	rex add DWORD PTR [rax],eax
   1400068ee:	add    BYTE PTR [rax],al
   1400068f0:	mov    BYTE PTR [rax+rax*1+0x40],dh
   1400068f4:	add    DWORD PTR [rax],eax
   1400068f6:	add    BYTE PTR [rax],al
   1400068f8:	(bad)  
   1400068f9:	and    al,0x0
   1400068fb:	rex add DWORD PTR [rax],eax
   1400068fe:	add    BYTE PTR [rax],al
   140006900:	ror    BYTE PTR [rdi+0x0],1
   140006903:	rex add DWORD PTR [rax],eax
   140006906:	add    BYTE PTR [rax],al
   140006908:	add    DWORD PTR [rax],eax
   14000690a:	add    BYTE PTR [rax],al
   14000690c:	add    BYTE PTR [rax],al
   14000690e:	add    BYTE PTR [rax],al
   140006910:	rol    BYTE PTR [rax],0x0
   140006913:	add    BYTE PTR [rax],al
   140006915:	add    BYTE PTR [rax],al
   140006917:	rex.RX jp 0x14000696c
   14000691a:	rex.B sub al,0xd
   14000691d:	and    eax,0x5ebe403e
   140006922:	icebp  
   140006923:	mov    ebx,DWORD PTR [rdx-0x18]
   140006926:	lods   al,BYTE PTR fs:[rsi]
   140006928:	cmp    BYTE PTR [rdi+0x0],ch
   14000692b:	rex add DWORD PTR [rax],eax
   14000692e:	add    BYTE PTR [rax],al
   140006930:	movabs al,ds:0x900000000140002e
   140006939:	sub    eax,0x14000
   14000693e:	add    BYTE PTR [rax],al
   140006940:	lock sub eax,0x14000
   140006946:	add    BYTE PTR [rax],al
   140006948:	loopne 0x140006976
   14000694a:	add    BYTE PTR [rax+0x1],al
   14000694d:	add    BYTE PTR [rax],al
   14000694f:	add    BYTE PTR [rax+0x2f],al
   140006952:	add    BYTE PTR [rax+0x1],al
   140006955:	add    BYTE PTR [rax],al
   140006957:	add    BYTE PTR [rax],al
   140006959:	xor    al,BYTE PTR [rax]
   14000695b:	rex add DWORD PTR [rax],eax
   14000695e:	add    BYTE PTR [rax],al
   140006960:	test   al,0x6f
   140006962:	add    BYTE PTR [rax+0x1],al
   140006965:	add    BYTE PTR [rax],al
   140006967:	add    BYTE PTR [rax],dl
   140006969:	and    al,BYTE PTR [rax]
   14000696b:	rex add DWORD PTR [rax],eax
   14000696e:	add    BYTE PTR [rax],al
   140006970:	mov    al,0x20
   140006972:	add    BYTE PTR [rax+0x1],al
   140006975:	add    BYTE PTR [rax],al
   140006977:	add    al,al
   140006979:	and    BYTE PTR [rax],al
   14000697b:	rex add DWORD PTR [rax],eax
   14000697e:	add    BYTE PTR [rax],al
   140006980:	movabs al,ds:0xb000000001400020
   140006989:	adc    al,0x0
   14000698b:	rex add DWORD PTR [rax],eax
   14000698e:	add    BYTE PTR [rax],al
   140006990:	rcl    BYTE PTR [rax+rax*1],0x40
   140006994:	add    DWORD PTR [rax],eax
   140006996:	add    BYTE PTR [rax],al
   140006998:	rcl    BYTE PTR [rax+rax*1],1
   14000699b:	rex add DWORD PTR [rax],eax
   14000699e:	add    BYTE PTR [rax],al
   1400069a0:	loopne 0x1400069b6
   1400069a2:	add    BYTE PTR [rax+0x1],al
   1400069a5:	add    BYTE PTR [rax],al
   1400069a7:	add    BYTE PTR [rax+0x1400020],ah
   1400069ad:	add    BYTE PTR [rax],al
   1400069af:	add    BYTE PTR [rax+0x1400020],ah
   1400069b5:	add    BYTE PTR [rax],al
   1400069b7:	add    BYTE PTR [rax+0x1400018],al
   1400069bd:	add    BYTE PTR [rax],al
   1400069bf:	add    BYTE PTR [rax+0x20],al
   1400069c2:	add    BYTE PTR [rax+0x1],al
   1400069c5:	add    BYTE PTR [rax],al
   1400069c7:	add    al,ch
   1400069c9:	jl     0x1400069cb
   1400069cb:	rex add DWORD PTR [rax],eax
   1400069ce:	add    BYTE PTR [rax],al
   1400069d0:	loopne 0x1400069ef
   1400069d2:	add    BYTE PTR [rax+0x1],al
   1400069d5:	add    BYTE PTR [rax],al
   1400069d7:	add    BYTE PTR [rax+0x140001e],al
   1400069dd:	add    BYTE PTR [rax],al
   1400069df:	add    BYTE PTR [rax+0x140001e],ah
   1400069e5:	add    BYTE PTR [rax],al
   1400069e7:	add    al,dl
   1400069e9:	xor    eax,DWORD PTR [rax]
   1400069eb:	rex add DWORD PTR [rax],eax
   1400069ee:	add    BYTE PTR [rax],al
   1400069f0:	add    BYTE PTR [rdx],dh
   1400069f2:	add    BYTE PTR [rax+0x1],al
   1400069f5:	add    BYTE PTR [rax],al
   1400069f7:	add    al,al
   1400069f9:	jno    0x1400069fb
   1400069fb:	rex add DWORD PTR [rax],eax
   1400069fe:	add    BYTE PTR [rax],al
   140006a00:	(bad)  
   140006a01:	and    al,0x0
   140006a03:	rex add DWORD PTR [rax],eax
   140006a06:	add    BYTE PTR [rax],al
   140006a08:	shr    BYTE PTR [rax+rax*1],0x40
   140006a0c:	add    DWORD PTR [rax],eax
   140006a0e:	add    BYTE PTR [rax],al
   140006a10:	loopne 0x140006a88
   140006a12:	add    BYTE PTR [rax+0x1],al
   140006a15:	add    BYTE PTR [rax],al
   140006a17:	add    al,ah
   140006a19:	sbb    eax,0x14000
   140006a1e:	add    BYTE PTR [rax],al
   140006a20:	sbb    BYTE PTR [rsi],0x0
   140006a23:	rex add DWORD PTR [rax],eax
   140006a26:	add    BYTE PTR [rax],al
   140006a28:	movabs al,ds:0xd00000000140001e
   140006a31:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   140006a35:	add    BYTE PTR [rax],al
   140006a37:	add    BYTE PTR [rax],al
   140006a39:	xor    al,BYTE PTR [rax]
   140006a3b:	rex add DWORD PTR [rax],eax
   140006a3e:	add    BYTE PTR [rax],al
   140006a40:	test   al,0x79
   140006a42:	add    BYTE PTR [rax+0x1],al
   140006a45:	add    BYTE PTR [rax],al
   140006a47:	add    BYTE PTR [rax+0x140001c],ah
   140006a4d:	add    BYTE PTR [rax],al
   140006a4f:	add    al,al
   140006a51:	jl     0x140006a53
   140006a53:	rex add DWORD PTR [rax],eax
   140006a56:	add    BYTE PTR [rax],al
   140006a58:	push   rax
   140006a59:	(bad)  
   140006a5a:	add    BYTE PTR [rax+0x1],al
   140006a5d:	add    BYTE PTR [rax],al
   140006a5f:	add    al,dl
   140006a61:	(bad)  
   140006a62:	add    BYTE PTR [rax+0x1],al
   140006a65:	add    BYTE PTR [rax],al
   140006a67:	add    al,ah
   140006a69:	(bad)  
   140006a6a:	add    BYTE PTR [rax+0x1],al
   140006a6d:	add    BYTE PTR [rax],al
   140006a6f:	add    BYTE PTR [rax],ah
   140006a71:	sbb    BYTE PTR [rax],al
   140006a73:	rex add DWORD PTR [rax],eax
   140006a76:	add    BYTE PTR [rax],al
   140006a78:	adc    BYTE PTR [rdi],dl
   140006a7a:	add    BYTE PTR [rax+0x1],al
   140006a7d:	add    BYTE PTR [rax],al
   140006a7f:	add    BYTE PTR [rax+0x1400016],ah
   140006a85:	add    BYTE PTR [rax],al
   140006a87:	add    BYTE PTR [rax+0x1400076],dl
   140006a8d:	add    BYTE PTR [rax],al
   140006a8f:	add    BYTE PTR [rax+0x16],dl
   140006a92:	add    BYTE PTR [rax+0x1],al
   140006a95:	add    BYTE PTR [rax],al
   140006a97:	add    BYTE PTR [rax+0x1400017],al
   140006a9d:	add    BYTE PTR [rax],al
   140006a9f:	add    BYTE PTR [rax+0x1400017],dl
   140006aa5:	add    BYTE PTR [rax],al
   140006aa7:	add    BYTE PTR [rax+0x1400016],al
   140006aad:	add    BYTE PTR [rax],al
   140006aaf:	add    BYTE PTR [rax],dl
   140006ab1:	(bad)  
   140006ab2:	add    BYTE PTR [rax+0x1],al
   140006ab5:	add    BYTE PTR [rax],al
   140006ab7:	add    BYTE PTR [rax+0x1400016],ah
   140006abd:	add    BYTE PTR [rax],al
   140006abf:	add    BYTE PTR [rax],ch
   140006ac1:	jbe    0x140006ac3
   140006ac3:	rex add DWORD PTR [rax],eax
   140006ac6:	add    BYTE PTR [rax],al
   140006ac8:	push   rax
   140006ac9:	(bad)  
   140006aca:	add    BYTE PTR [rax+0x1],al
   140006acd:	add    BYTE PTR [rax],al
   140006acf:	add    al,dl
   140006ad1:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   140006ad5:	add    BYTE PTR [rax],al
   140006ad7:	add    al,dl
   140006ad9:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   140006add:	add    BYTE PTR [rax],al
   140006adf:	add    BYTE PTR [rax+0x1400016],al
   140006ae5:	add    BYTE PTR [rax],al
   140006ae7:	add    BYTE PTR [rax],dl
   140006ae9:	(bad)  
   140006aea:	add    BYTE PTR [rax+0x1],al
   140006aed:	add    BYTE PTR [rax],al
   140006aef:	add    BYTE PTR [rax+0x1400016],ah
   140006af5:	add    BYTE PTR [rax],al
   140006af7:	add    BYTE PTR [rbx-0xcfcdb5a],cl
   140006afd:	(bad)  
   140006afe:	nop
   140006aff:	rex.WRXB cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140006b01:	popf   
   140006b02:	rcr    BYTE PTR [rcx],cl
   140006b04:	ss int3 
   140006b06:	(bad)  
   140006b07:	xor    al,0xd0
   140006b09:	(bad)  
   140006b0a:	add    BYTE PTR [rax+0x1],al
   140006b0d:	add    BYTE PTR [rax],al
   140006b0f:	add    BYTE PTR [rax+0x1400067],dh
	...
   140006b1d:	add    BYTE PTR [rax],al
   140006b1f:	add    BYTE PTR [rax+0x14000b5],bh
	...
   140006b35:	add    BYTE PTR [rax],al
   140006b37:	add    BYTE PTR [rcx+0x0],ah
   140006b3a:	jo     0x140006b3c
   140006b3c:	jo     0x140006b3e
   140006b3e:	js     0x140006b40
   140006b40:	cmp    al,BYTE PTR [rax]
   140006b42:	add    BYTE PTR [rax],al
   140006b44:	add    BYTE PTR [rax],al
   140006b46:	add    BYTE PTR [rax],al
   140006b48:	outs   dx,DWORD PTR ds:[rsi]
   140006b49:	add    BYTE PTR [rax+0x0],dh
   140006b4c:	add    BYTE PTR gs:[rsi+0x0],ch
	...
   140006b58:	jge    0x140006b6c
   140006b5a:	mov    edx,0xea10a845
   140006b5f:	rex.RX mov r14b,BYTE PTR [rdi+0x7890ea56]
   140006b66:	xchg   esp,eax
   140006b67:	cmp    al,0x41
   140006b69:	adc    DWORD PTR [rsi+rbp*1+0x47567f97],edx
   140006b70:	mov    edx,0xdeec9d1d
   140006b75:	mov    DWORD PTR [rdx+0x3d],ecx
   140006b78:	and    al,BYTE PTR [rip+0x41993]        # 0x140048511
   140006b7e:	add    BYTE PTR [rax],al
   140006b80:	mov    ah,0x87
   140006b82:	add    BYTE PTR [rax],al
   140006b84:	add    al,BYTE PTR [rax]
   140006b86:	add    BYTE PTR [rax],al
   140006b88:	(bad)  
   140006b89:	xchg   DWORD PTR [rax],eax
   140006b8b:	add    BYTE PTR [rax],cl
   140006b8d:	add    BYTE PTR [rax],al
   140006b8f:	add    BYTE PTR [rax],dh
   140006b91:	mov    BYTE PTR [rax],al
   140006b93:	add    BYTE PTR [rax],ah
   140006b95:	add    BYTE PTR [rax],al
   140006b97:	add    BYTE PTR [rax],al
   140006b99:	add    BYTE PTR [rax],al
   140006b9b:	add    BYTE PTR [rcx],al
   140006b9d:	add    BYTE PTR [rax],al
   140006b9f:	add    BYTE PTR [rdx],ah
   140006ba1:	add    eax,0x21993
   140006ba6:	add    BYTE PTR [rax],al
   140006ba8:	clc    
   140006ba9:	mov    al,BYTE PTR [rax]
   140006bab:	add    BYTE PTR [rcx],al
   140006bad:	add    BYTE PTR [rax],al
   140006baf:	add    BYTE PTR [rax],cl
   140006bb1:	mov    eax,DWORD PTR [rax]
   140006bb3:	add    BYTE PTR [rip+0x30000000],al        # 0x170006bb9
   140006bb9:	mov    eax,DWORD PTR [rax]
   140006bbb:	add    BYTE PTR [rax],ah
   140006bbd:	add    BYTE PTR [rax],al
   140006bbf:	add    BYTE PTR [rax],al
   140006bc1:	add    BYTE PTR [rax],al
   140006bc3:	add    BYTE PTR [rcx],al
   140006bc5:	add    BYTE PTR [rax],al
   140006bc7:	add    BYTE PTR [rdx],ah
   140006bc9:	add    eax,0x41993
   140006bce:	add    BYTE PTR [rax],al
   140006bd0:	mov    ah,0x87
   140006bd2:	add    BYTE PTR [rax],al
   140006bd4:	add    al,BYTE PTR [rax]
   140006bd6:	add    BYTE PTR [rax],al
   140006bd8:	xor    BYTE PTR [rdx+0x80000],cl
   140006bde:	add    BYTE PTR [rax],al
   140006be0:	or     BYTE PTR [rdx+0x200000],0x0
   140006be7:	add    BYTE PTR [rax],al
   140006be9:	add    BYTE PTR [rax],al
   140006beb:	add    BYTE PTR [rcx],al
   140006bed:	add    BYTE PTR [rax],al
   140006bef:	add    BYTE PTR [rdx],ah
   140006bf1:	add    eax,0x11993
   140006bf6:	add    BYTE PTR [rax],al
   140006bf8:	ror    BYTE PTR [rcx+0x0],1
   140006bfe:	add    BYTE PTR [rax],al
   140006c00:	add    BYTE PTR [rax],al
   140006c02:	add    BYTE PTR [rax],al
   140006c04:	add    eax,DWORD PTR [rax]
   140006c06:	add    BYTE PTR [rax],al
   140006c08:	fmul   DWORD PTR [rcx+0x300000]
   140006c0e:	add    BYTE PTR [rax],al
   140006c10:	add    BYTE PTR [rax],al
   140006c12:	add    BYTE PTR [rax],al
   140006c14:	add    DWORD PTR [rax],eax
   140006c16:	add    BYTE PTR [rax],al
   140006c18:	and    al,BYTE PTR [rip+0x41993]        # 0x1400485b1
   140006c1e:	add    BYTE PTR [rax],al
   140006c20:	push   rax
   140006c21:	mov    DWORD PTR [rax],eax
	...
   140006c2b:	add    BYTE PTR [rcx],cl
   140006c2d:	add    BYTE PTR [rax],al
   140006c2f:	add    BYTE PTR [rax-0x77],dh
   140006c32:	add    BYTE PTR [rax],al
   140006c34:	add    BYTE PTR [rax],al
   140006c37:	add    BYTE PTR [rax],al
   140006c39:	add    BYTE PTR [rax],al
   140006c3b:	add    BYTE PTR [rcx],al
   140006c3d:	add    BYTE PTR [rax],al
   140006c3f:	add    BYTE PTR [rax],al
   140006c41:	add    BYTE PTR [rax],al
   140006c43:	add    BYTE PTR [rsi+0x3c],cl
   140006c46:	lahf   
   140006c47:	push   rbp
   140006c48:	add    BYTE PTR [rax],al
   140006c4a:	add    BYTE PTR [rax],al
   140006c4c:	add    al,BYTE PTR [rax]
   140006c4e:	add    BYTE PTR [rax],al
   140006c50:	sub    DWORD PTR [rax],eax
   140006c52:	add    BYTE PTR [rax],al
   140006c54:	lods   al,BYTE PTR ds:[rsi]
   140006c55:	(bad)  
   140006c56:	add    BYTE PTR [rax],al
   140006c58:	lods   al,BYTE PTR ds:[rsi]
   140006c59:	push   0x0
   140006c5b:	add    BYTE PTR [rax],al
   140006c5d:	add    BYTE PTR [rax],al
   140006c5f:	add    BYTE PTR [rsi+0x3c],cl
   140006c62:	lahf   
   140006c63:	push   rbp
   140006c64:	add    BYTE PTR [rax],al
   140006c66:	add    BYTE PTR [rax],al
   140006c68:	or     eax,0xb4000000
   140006c6d:	add    eax,DWORD PTR [rax]
   140006c6f:	add    ah,ch
   140006c71:	(bad)  
   140006c72:	add    BYTE PTR [rax],al
   140006c74:	in     al,dx
   140006c75:	push   0x0
	...
   140006c9f:	add    BYTE PTR [rax+0x0],ah
	...
   140006cf5:	add    BYTE PTR [rax],al
   140006cf7:	add    BYTE PTR [rax],cl
   140006cf9:	movabs al,ds:0x14000
	...
   140006d0e:	add    BYTE PTR [rax],al
   140006d10:	movsxd rax,DWORD PTR [rax]
   140006d13:	rex add DWORD PTR [rax],eax
   140006d16:	add    BYTE PTR [rax],al
   140006d18:	push   rax
   140006d19:	movsxd eax,DWORD PTR [rax]
   140006d1b:	rex add DWORD PTR [rax],eax
   140006d1e:	add    BYTE PTR [rax],al
   140006d20:	loopne 0x140006d85
   140006d22:	add    BYTE PTR [rax+0x1],al
   140006d25:	add    BYTE PTR [rax],al
   140006d27:	add    BYTE PTR [rbp+0x0],cl
   140006d2a:	add    BYTE PTR [rax],al
   140006d2c:	add    BYTE PTR [rax],al
   140006d2e:	add    BYTE PTR [rax],al
   140006d30:	add    BYTE PTR [rip+0x0],dh        # 0x140006d36
	...
   140006d3e:	add    BYTE PTR [rax],al
   140006d40:	add    DWORD PTR [rax],eax
	...
   140006d4a:	add    BYTE PTR [rax],al
   140006d4c:	and    BYTE PTR [rax+0x6d680000],0x0
   140006d53:	add    BYTE PTR [rax+0x6d],al
	...
   140006d6e:	add    BYTE PTR [rax],al
   140006d70:	add    DWORD PTR [rax],eax
   140006d72:	add    BYTE PTR [rax],al
   140006d74:	sub    BYTE PTR [rbp+0x0],0x0
	...
   140006d80:	nop
   140006d81:	ins    DWORD PTR es:[rdi],dx
	...
   140006d8e:	add    BYTE PTR [rax],al
   140006d90:	and    BYTE PTR [rax+0x0],0x0
   140006d97:	add    BYTE PTR [rax],al
   140006d99:	add    BYTE PTR [rax],al
   140006d9b:	add    bh,bh
   140006d9d:	(bad)  
   140006d9e:	(bad)  
   140006d9f:	inc    DWORD PTR [rax]
   140006da1:	add    BYTE PTR [rax],al
   140006da3:	add    BYTE PTR [rax+0x0],al
   140006da6:	add    BYTE PTR [rax],al
   140006da8:	push   0x6d
	...
   140006db5:	add    BYTE PTR [rax],al
   140006db7:	add    BYTE PTR [rcx],al
	...
   140006dc1:	add    BYTE PTR [rax],al
   140006dc3:	add    al,cl
   140006dc5:	movabs al,ds:0x6db800006de00000
	...
   140006de6:	add    BYTE PTR [rax],al
   140006de8:	add    DWORD PTR [rax],eax
   140006dea:	add    BYTE PTR [rax],al
   140006dec:	clc    
   140006ded:	ins    DWORD PTR es:[rdi],dx
	...
   140006df6:	add    BYTE PTR [rax],al
   140006df8:	or     BYTE PTR [rsi+0x0],ch
	...
   140006e07:	add    al,cl
   140006e09:	movabs al,ds:0x0
   140006e12:	add    BYTE PTR [rax],al
   140006e14:	(bad)  
   140006e15:	(bad)  
   140006e16:	(bad)  
   140006e17:	inc    DWORD PTR [rax]
   140006e19:	add    BYTE PTR [rax],al
   140006e1b:	add    BYTE PTR [rax+0x0],al
   140006e1e:	add    BYTE PTR [rax],al
   140006e20:	loopne 0x140006e8f
	...
   140006e2e:	add    BYTE PTR [rax],al
   140006e30:	add    DWORD PTR [rax],eax
	...
   140006e3a:	add    BYTE PTR [rax],al
   140006e3c:	movabs al,ds:0x3000006e580000a0
   140006e45:	outs   dx,BYTE PTR ds:[rsi]
	...
   140006e5e:	add    BYTE PTR [rax],al
   140006e60:	add    al,BYTE PTR [rax]
   140006e62:	add    BYTE PTR [rax],al
   140006e64:	jo     0x140006ed4
	...
   140006e6e:	add    BYTE PTR [rax],al
   140006e70:	mov    BYTE PTR [rsi+0x0],ch
   140006e73:	add    BYTE PTR [rax],cl
   140006e75:	outs   dx,BYTE PTR ds:[rsi]
	...
   140006e86:	add    BYTE PTR [rax],al
   140006e88:	movabs al,ds:0x10000a0
   140006e91:	add    BYTE PTR [rax],al
   140006e93:	add    bh,bh
   140006e95:	(bad)  
   140006e96:	(bad)  
   140006e97:	inc    DWORD PTR [rax]
   140006e99:	add    BYTE PTR [rax],al
   140006e9b:	add    BYTE PTR [rax+0x0],al
   140006e9e:	add    BYTE PTR [rax],al
   140006ea0:	pop    rax
   140006ea1:	outs   dx,BYTE PTR ds:[rsi]
	...
   140006eae:	add    BYTE PTR [rax],al
   140006eb0:	add    DWORD PTR [rax],eax
	...
   140006eba:	add    BYTE PTR [rax],al
   140006ebc:	lock movabs al,ds:0x6eb000006ed80000
	...
   140006ede:	add    BYTE PTR [rax],al
   140006ee0:	add    eax,DWORD PTR [rax]
   140006ee2:	add    BYTE PTR [rax],al
   140006ee4:	lock outs dx,BYTE PTR ds:[rsi]
	...
   140006eee:	add    BYTE PTR [rax],al
   140006ef0:	adc    BYTE PTR [rdi+0x0],ch
   140006ef3:	add    BYTE PTR [rax+0x800006e],cl
   140006ef9:	outs   dx,BYTE PTR ds:[rsi]
	...
   140006f0e:	add    BYTE PTR [rax],al
   140006f10:	lock movabs al,ds:0x20000
   140006f1a:	add    BYTE PTR [rax],al
   140006f1c:	(bad)  
   140006f1d:	(bad)  
   140006f1e:	(bad)  
   140006f1f:	inc    DWORD PTR [rax]
   140006f21:	add    BYTE PTR [rax],al
   140006f23:	add    BYTE PTR [rax+0x0],al
   140006f26:	add    BYTE PTR [rax],al
   140006f28:	fsubr  DWORD PTR [rsi+0x0]
	...
   140006f37:	add    BYTE PTR [rcx],al
	...
   140006f41:	add    BYTE PTR [rax],al
   140006f43:	add    BYTE PTR [rax],ah
   140006f45:	test   eax,0x73500000
   140006f4a:	add    BYTE PTR [rax],al
   140006f4c:	cmp    BYTE PTR [rdi+0x0],ch
	...
   140006f67:	add    BYTE PTR [rbx],al
   140006f69:	add    BYTE PTR [rax],al
   140006f6b:	add    BYTE PTR [rax+0x7e],ch
	...
   140006f76:	add    BYTE PTR [rax],al
   140006f78:	mov    al,0x7f
   140006f7a:	add    BYTE PTR [rax],al
   140006f7c:	mov    eax,0x76
	...
   140006f91:	add    BYTE PTR [rax],al
   140006f93:	add    BYTE PTR [rcx],al
   140006f95:	add    BYTE PTR [rax],al
   140006f97:	add    BYTE PTR [rdx],cl
   140006f99:	add    BYTE PTR [rax],al
   140006f9b:	add    al,dl
   140006f9d:	jo     0x140006f9f
	...
   140006fa7:	add    BYTE PTR [rcx],al
	...
   140006fb1:	add    BYTE PTR [rax],al
   140006fb3:	add    BYTE PTR [rax],bh
   140006fb5:	stos   BYTE PTR es:[rdi],al
   140006fb6:	add    BYTE PTR [rax],al
   140006fb8:	loopne 0x140007038
   140006fba:	add    BYTE PTR [rax],al
   140006fbc:	test   al,0x6f
	...
   140006fd2:	add    BYTE PTR [rax],al
   140006fd4:	add    DWORD PTR [rax],eax
   140006fd6:	add    BYTE PTR [rax],al
   140006fd8:	or     BYTE PTR [rax],al
   140006fda:	add    BYTE PTR [rax],al
   140006fdc:	sar    BYTE PTR [rbp+0x0],0x0
	...
   140006fe8:	adc    BYTE PTR [rdi+0x0],ch
   140006fee:	add    BYTE PTR [rax],al
   140006ff0:	or     al,BYTE PTR [rax]
   140006ff2:	add    BYTE PTR [rax],al
   140006ff4:	(bad)  
   140006ff5:	(bad)  
   140006ff6:	(bad)  
   140006ff7:	inc    DWORD PTR [rax]
   140006ff9:	add    BYTE PTR [rax],al
   140006ffb:	add    BYTE PTR [rax+0x0],al
   140006ffe:	add    BYTE PTR [rax],al
   140007000:	xor    BYTE PTR [rcx+0x0],al
	...
   140007016:	add    BYTE PTR [rax],al
   140007018:	add    al,BYTE PTR [rax]
   14000701a:	add    BYTE PTR [rax],al
   14000701c:	movabs al,ds:0x78
   140007025:	add    BYTE PTR [rax],al
   140007027:	add    BYTE PTR [rax+0x75],ah
	...
   14000703e:	add    BYTE PTR [rax],al
   140007040:	add    DWORD PTR [rax],eax
   140007042:	add    BYTE PTR [rax],al
   140007044:	loopne 0x1400070be
	...
   14000704e:	add    BYTE PTR [rax],al
   140007050:	test   al,0xa7
   140007052:	add    BYTE PTR [rax],al
   140007054:	add    BYTE PTR [rax],al
   140007056:	add    BYTE PTR [rax],al
   140007058:	or     BYTE PTR [rax],al
   14000705a:	add    BYTE PTR [rax],al
   14000705c:	(bad)  
   14000705d:	(bad)  
   14000705e:	(bad)  
   14000705f:	inc    DWORD PTR [rax]
   140007061:	add    BYTE PTR [rax],al
   140007063:	add    BYTE PTR [rbp+0x0],cl
   140007066:	add    BYTE PTR [rax],al
   140007068:	clc    
   140007069:	jle    0x14000706b
	...
   140007077:	add    BYTE PTR [rax],dl
   140007079:	scas   eax,DWORD PTR es:[rdi]
	...
   140007082:	add    BYTE PTR [rax],al
   140007084:	(bad)  
   140007085:	(bad)  
   140007086:	(bad)  
   140007087:	inc    DWORD PTR [rax]
   140007089:	add    BYTE PTR [rax],al
   14000708b:	add    BYTE PTR [rax+0x0],al
   14000708e:	add    BYTE PTR [rax],al
   140007090:	xor    BYTE PTR [rcx+0x0],al
	...
   14000709e:	add    BYTE PTR [rax],al
   1400070a0:	js     0x140007112
	...
   1400070b2:	add    BYTE PTR [rax],al
   1400070b4:	add    DWORD PTR [rax],eax
   1400070b6:	add    BYTE PTR [rax],al
   1400070b8:	or     al,BYTE PTR [rax]
   1400070ba:	add    BYTE PTR [rax],al
   1400070bc:	and    BYTE PTR [rax+0x0],al
	...
   1400070ce:	add    BYTE PTR [rax],al
   1400070d0:	shl    BYTE PTR [rdi+0x0],0x0
   1400070d4:	sar    BYTE PTR [rcx+0x0],1
   1400070d7:	add    BYTE PTR [rax],dh
   1400070d9:	jl     0x1400070db
   1400070db:	add    BYTE PTR [rax+0x28000071],al
   1400070e1:	jae    0x1400070e3
   1400070e3:	add    BYTE PTR [rax],cl
   1400070e5:	je     0x1400070e7
   1400070e7:	add    BYTE PTR [rax+0x50000078],bh
   1400070ed:	jo     0x1400070ef
   1400070ef:	add    BYTE PTR [rax+0x7c],dh
   1400070f2:	add    BYTE PTR [rax],al
   1400070f4:	call   0x140007168
	...
   14000712d:	add    BYTE PTR [rax],al
   14000712f:	add    BYTE PTR [rdx],al
   140007131:	add    BYTE PTR [rax],al
   140007133:	add    BYTE PTR [rax],dh
   140007135:	jle    0x140007137
	...
   14000713f:	add    BYTE PTR [rax-0x5d],ah
   140007142:	add    BYTE PTR [rax],al
   140007144:	add    BYTE PTR [rax],al
   140007146:	add    BYTE PTR [rax],al
   140007148:	adc    DWORD PTR [rax],eax
   14000714a:	add    BYTE PTR [rax],al
   14000714c:	(bad)  
   14000714d:	(bad)  
   14000714e:	(bad)  
   14000714f:	inc    DWORD PTR [rax]
   140007151:	add    BYTE PTR [rax],al
   140007153:	add    BYTE PTR [rbp+0x0],cl
   140007156:	add    BYTE PTR [rax],al
   140007158:	push   0x71
	...
   14000716d:	add    BYTE PTR [rax],al
   14000716f:	add    BYTE PTR [rcx],al
   140007171:	add    BYTE PTR [rax],al
   140007173:	add    BYTE PTR [rax],ch
   140007175:	jge    0x140007177
	...
   14000717f:	add    al,ah
   140007181:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140007182:	add    BYTE PTR [rax],al
   140007184:	add    al,BYTE PTR [rax]
   140007186:	add    BYTE PTR [rax],al
   140007188:	add    BYTE PTR [rax],al
   14000718a:	add    BYTE PTR [rax],al
   14000718c:	(bad)  
   14000718d:	(bad)  
   14000718e:	(bad)  
   14000718f:	inc    DWORD PTR [rax]
   140007191:	add    BYTE PTR [rax],al
   140007193:	add    BYTE PTR [rax+0x0],al
   140007196:	add    BYTE PTR [rax],al
   140007198:	(bad)  
   140007199:	outs   dx,DWORD PTR ds:[rsi]
	...
   1400071a6:	add    BYTE PTR [rax],al
   1400071a8:	clc    
   1400071a9:	ja     0x1400071ab
   1400071ab:	add    BYTE PTR [rax+0x75],ah
	...
   1400071be:	add    BYTE PTR [rax],al
   1400071c0:	add    DWORD PTR [rax],eax
	...
   1400071ca:	add    BYTE PTR [rax],al
   1400071cc:	nop
   1400071cd:	test   eax,0x74580000
   1400071d2:	add    BYTE PTR [rax],al
   1400071d4:	shl    BYTE PTR [rcx+0x0],0x0
	...
   1400071e8:	push   rax
   1400071e9:	lods   al,BYTE PTR ds:[rsi]
   1400071ea:	add    BYTE PTR [rax],al
   1400071ec:	add    al,BYTE PTR [rax]
   1400071ee:	add    BYTE PTR [rax],al
   1400071f0:	add    BYTE PTR [rax],al
   1400071f2:	add    BYTE PTR [rax],al
   1400071f4:	(bad)  
   1400071f5:	(bad)  
   1400071f6:	(bad)  
   1400071f7:	inc    DWORD PTR [rax]
   1400071f9:	add    BYTE PTR [rax],al
   1400071fb:	add    BYTE PTR [rax+0x0],al
   1400071fe:	add    BYTE PTR [rax],al
   140007200:	adc    BYTE PTR [rbp+0x0],bh
	...
   14000720f:	add    BYTE PTR [rax],al
   140007211:	lods   al,BYTE PTR ds:[rsi]
	...
   14000721a:	add    BYTE PTR [rax],al
   14000721c:	(bad)  
   14000721d:	(bad)  
   14000721e:	(bad)  
   14000721f:	inc    DWORD PTR [rax]
   140007221:	add    BYTE PTR [rax],al
   140007223:	add    BYTE PTR [rax+0x0],al
   140007226:	add    BYTE PTR [rax],al
   140007228:	cmp    BYTE PTR [rax+0x0],dh
	...
   140007237:	add    BYTE PTR [rcx],al
	...
   140007241:	add    BYTE PTR [rax],al
   140007243:	add    al,dh
   140007245:	movabs ds:0x723800006f900000,al
	...
   140007266:	add    BYTE PTR [rax],al
   140007268:	add    eax,DWORD PTR [rax]
   14000726a:	add    BYTE PTR [rax],al
   14000726c:	mov    BYTE PTR [rbp+0x0],dh
	...
   140007277:	add    al,dh
   140007279:	js     0x14000727b
   14000727b:	add    al,ah
   14000727d:	jb     0x14000727f
   14000727f:	add    BYTE PTR [rax-0x47ffff81],dh
   140007285:	jbe    0x140007287
	...
   1400072a7:	add    BYTE PTR [rbx],al
   1400072a9:	add    BYTE PTR [rax],al
   1400072ab:	add    BYTE PTR [rax],cl
   1400072ad:	jae    0x1400072af
	...
   1400072b7:	add    BYTE PTR [rcx],al
	...
   1400072c1:	add    BYTE PTR [rax],al
   1400072c3:	add    BYTE PTR [rax-0x5f],ah
   1400072c6:	add    BYTE PTR [rax],al
   1400072c8:	enter  0x7b,0x0
   1400072cc:	mov    eax,0x72
	...
   1400072dd:	add    BYTE PTR [rax],al
   1400072df:	add    BYTE PTR [rax+0x20000ae],dh
   1400072e5:	add    BYTE PTR [rax],al
   1400072e7:	add    BYTE PTR [rax],al
   1400072e9:	add    BYTE PTR [rax],al
   1400072eb:	add    bh,bh
   1400072ed:	(bad)  
   1400072ee:	(bad)  
   1400072ef:	inc    DWORD PTR [rax]
   1400072f1:	add    BYTE PTR [rax],al
   1400072f3:	add    BYTE PTR [rax+0x0],al
   1400072f6:	add    BYTE PTR [rax],al
   1400072f8:	(bad)  
   1400072f9:	jb     0x1400072fb
	...
   140007307:	add    BYTE PTR [rax+0x79],al
   14000730a:	add    BYTE PTR [rax],al
   14000730c:	mov    al,0x74
   14000730e:	add    BYTE PTR [rax],al
   140007310:	adc    BYTE PTR [rdx+0x0],dh
	...
   140007327:	add    BYTE PTR [rax],ch
   140007329:	movabs ds:0x10000,eax
   140007332:	add    BYTE PTR [rax],al
   140007334:	(bad)  
   140007335:	(bad)  
   140007336:	(bad)  
   140007337:	inc    DWORD PTR [rax]
   140007339:	add    BYTE PTR [rax],al
   14000733b:	add    BYTE PTR [rax+0x0],al
   14000733e:	add    BYTE PTR [rax],al
   140007340:	adc    BYTE PTR [rax+0x0],dh
	...
   140007353:	add    BYTE PTR [rcx],al
   140007355:	add    BYTE PTR [rax],al
   140007357:	add    BYTE PTR [rbx],cl
   140007359:	add    BYTE PTR [rax],al
   14000735b:	add    al,dl
   14000735d:	add    BYTE PTR [rax],0x0
	...
   140007368:	call   0xe80073de
   14000736d:	jne    0x14000736f
   14000736f:	add    BYTE PTR [rax],cl
   140007371:	je     0x140007373
	...
   14000738f:	add    al,ah
   140007391:	jp     0x140007393
   140007393:	add    BYTE PTR [rax+0x7d],cl
   140007396:	add    BYTE PTR [rax],al
   140007398:	lock jg 0x14000739b
   14000739b:	add    al,ch
   14000739d:	jno    0x14000739f
   14000739f:	add    BYTE PTR [rax+0x8000075],ch
   1400073a5:	je     0x1400073a7
   1400073a7:	add    BYTE PTR [rax+0x5000007a],ah
   1400073ad:	jo     0x1400073af
   1400073af:	add    BYTE PTR [rax+0x7c],dh
   1400073b2:	add    BYTE PTR [rax],al
   1400073b4:	call   0x180007428
   1400073b9:	jno    0x1400073bb
	...
   1400073f7:	add    BYTE PTR [rcx],al
   1400073f9:	add    BYTE PTR [rax],al
   1400073fb:	add    BYTE PTR [rax],bh
   1400073fd:	jge    0x1400073ff
	...
   140007407:	add    BYTE PTR [rax],dh
   140007409:	lods   al,BYTE PTR ds:[rsi]
	...
   140007412:	add    BYTE PTR [rax],al
   140007414:	(bad)  
   140007415:	(bad)  
   140007416:	(bad)  
   140007417:	inc    DWORD PTR [rax]
   140007419:	add    BYTE PTR [rax],al
   14000741b:	add    BYTE PTR [rax+0x0],al
   14000741e:	add    BYTE PTR [rax],al
   140007420:	fdiv   DWORD PTR [rax+rax*1+0x0]
	...
   140007430:	add    DWORD PTR [rax],eax
	...
   14000743a:	add    BYTE PTR [rax],al
   14000743c:	adc    BYTE PTR [rbp+0x7fd80000],ch
   140007442:	add    BYTE PTR [rax],al
   140007444:	xor    BYTE PTR [rax+rax*1+0x0],dh
	...
   140007460:	add    al,BYTE PTR [rax]
   140007462:	add    BYTE PTR [rax],al
   140007464:	test   al,0x71
	...
   140007472:	add    BYTE PTR [rax],al
   140007474:	add    DWORD PTR [rax],eax
   140007476:	add    BYTE PTR [rax],al
   140007478:	or     DWORD PTR [rax],eax
   14000747a:	add    BYTE PTR [rax],al
   14000747c:	push   rax
   14000747d:	jnp    0x14000747f
	...
   140007487:	add    BYTE PTR [rcx],al
	...
   140007491:	add    BYTE PTR [rax],al
   140007493:	add    al,dh
   140007495:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140007496:	add    BYTE PTR [rax],al
   140007498:	jo     0x140007512
   14000749a:	add    BYTE PTR [rax],al
   14000749c:	mov    BYTE PTR [rax+rax*1+0x0],dh
	...
   1400074b0:	adc    BYTE PTR [rbp+0x10000],ch
   1400074b6:	add    BYTE PTR [rax],al
   1400074b8:	add    BYTE PTR [rax],al
   1400074ba:	add    BYTE PTR [rax],al
   1400074bc:	(bad)  
   1400074bd:	(bad)  
   1400074be:	(bad)  
   1400074bf:	inc    DWORD PTR [rax]
   1400074c1:	add    BYTE PTR [rax],al
   1400074c3:	add    BYTE PTR [rax+0x0],al
   1400074c6:	add    BYTE PTR [rax],al
   1400074c8:	fdivr  DWORD PTR [rdi+0x0]
	...
   1400074df:	add    BYTE PTR [rcx],al
   1400074e1:	add    BYTE PTR [rax],al
   1400074e3:	add    al,ch
   1400074e5:	ja     0x1400074e7
	...
   1400074ef:	add    BYTE PTR [rax+0x20000a3],ah
   1400074f5:	add    BYTE PTR [rax],al
   1400074f7:	add    BYTE PTR [rax],al
   1400074f9:	add    BYTE PTR [rax],al
   1400074fb:	add    bh,bh
   1400074fd:	(bad)  
   1400074fe:	(bad)  
   1400074ff:	inc    DWORD PTR [rax]
   140007501:	add    BYTE PTR [rax],al
   140007503:	add    BYTE PTR [rax+0x0],al
   140007506:	add    BYTE PTR [rax],al
   140007508:	add    QWORD PTR [rax],0x0
	...
   140007517:	add    BYTE PTR [rax+0x7b],ah
	...
   140007525:	add    BYTE PTR [rax],al
   140007527:	add    BYTE PTR [rax],bl
   140007529:	jns    0x14000752b
	...
   140007537:	add    al,ah
   140007539:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000753a:	add    BYTE PTR [rax],al
   14000753c:	add    al,BYTE PTR [rax]
   14000753e:	add    BYTE PTR [rax],al
   140007540:	add    BYTE PTR [rax],al
   140007542:	add    BYTE PTR [rax],al
   140007544:	(bad)  
   140007545:	(bad)  
   140007546:	(bad)  
   140007547:	inc    DWORD PTR [rax]
   140007549:	add    BYTE PTR [rax],al
   14000754b:	add    BYTE PTR [rax+0x0],al
   14000754e:	add    BYTE PTR [rax],al
   140007550:	push   0x79
	...
   14000755d:	add    BYTE PTR [rax],al
   14000755f:	add    al,dh
   140007561:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
	...
   14000756a:	add    BYTE PTR [rax],al
   14000756c:	(bad)  
   14000756d:	(bad)  
   14000756e:	(bad)  
   14000756f:	inc    DWORD PTR [rax]
   140007571:	add    BYTE PTR [rax],al
   140007573:	add    BYTE PTR [rax+0x0],al
   140007576:	add    BYTE PTR [rax],al
   140007578:	jo     0x1400075f2
	...
   140007586:	add    BYTE PTR [rax],al
   140007588:	loopne 0x1400075fc
   14000758a:	add    BYTE PTR [rax],al
   14000758c:	mov    al,0x7f
   14000758e:	add    BYTE PTR [rax],al
   140007590:	mov    eax,0x76
	...
   1400075a5:	add    BYTE PTR [rax],al
   1400075a7:	add    al,bh
   1400075a9:	test   al,0x0
   1400075ab:	add    BYTE PTR [rcx],al
   1400075ad:	add    BYTE PTR [rax],al
   1400075af:	add    BYTE PTR [rax],al
   1400075b1:	add    BYTE PTR [rax],al
   1400075b3:	add    bh,bh
   1400075b5:	(bad)  
   1400075b6:	(bad)  
   1400075b7:	inc    DWORD PTR [rax]
   1400075b9:	add    BYTE PTR [rax],al
   1400075bb:	add    BYTE PTR [rax+0x0],al
   1400075be:	add    BYTE PTR [rax],al
   1400075c0:	mov    al,0x81
	...
   1400075ce:	add    BYTE PTR [rax],al
   1400075d0:	rex.W jge 0x1400075d3
   1400075d3:	add    al,dh
   1400075d5:	jg     0x1400075d7
   1400075d7:	add    al,ch
   1400075d9:	jno    0x1400075db
   1400075db:	add    BYTE PTR [rax+0x8000075],ch
   1400075e1:	je     0x1400075e3
   1400075e3:	add    BYTE PTR [rax+0x5000007a],ah
   1400075e9:	jo     0x1400075eb
   1400075eb:	add    BYTE PTR [rax+0x7c],dh
   1400075ee:	add    BYTE PTR [rax],al
   1400075f0:	call   0x180007664
   1400075f5:	jno    0x1400075f7
	...
   140007627:	add    BYTE PTR [rcx],al
	...
   140007635:	lods   al,BYTE PTR ds:[rsi]
   140007636:	add    BYTE PTR [rax],al
   140007638:	cmp    BYTE PTR [rax+0x0],dh
   14000763b:	add    BYTE PTR [rax],ch
   14000763d:	jbe    0x14000763f
	...
   14000764f:	add    BYTE PTR [rax+0x10000a6],dh
   140007655:	add    BYTE PTR [rax],al
   140007657:	add    BYTE PTR [rax],al
   140007659:	add    BYTE PTR [rax],al
   14000765b:	add    bh,bh
   14000765d:	(bad)  
   14000765e:	(bad)  
   14000765f:	inc    DWORD PTR [rax]
   140007661:	add    BYTE PTR [rax],al
   140007663:	add    BYTE PTR [rax+0x0],al
   140007666:	add    BYTE PTR [rax],al
   140007668:	js     0x1400076e1
	...
   14000767e:	add    BYTE PTR [rax],al
   140007680:	add    al,BYTE PTR [rax]
   140007682:	add    BYTE PTR [rax],al
   140007684:	or     BYTE PTR [rdi+0x0],dh
	...
   14000768f:	add    BYTE PTR [rcx],al
	...
   140007699:	add    BYTE PTR [rax],al
   14000769b:	add    al,ah
   14000769d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000769e:	add    BYTE PTR [rax],al
   1400076a0:	push   0xffffffff90000079
   1400076a5:	jbe    0x1400076a7
	...
   1400076b7:	add    BYTE PTR [rax],ah
   1400076b9:	movabs eax,ds:0x0
   1400076c2:	add    BYTE PTR [rax],al
   1400076c4:	(bad)  
   1400076c5:	(bad)  
   1400076c6:	(bad)  
   1400076c7:	inc    DWORD PTR [rax]
   1400076c9:	add    BYTE PTR [rax],al
   1400076cb:	add    BYTE PTR [rax+0x0],al
   1400076ce:	add    BYTE PTR [rax],al
   1400076d0:	lock jae 0x1400076d3
	...
   1400076df:	add    BYTE PTR [rcx],al
	...
   1400076e9:	add    BYTE PTR [rax],al
   1400076eb:	add    BYTE PTR [rax],ah
   1400076ed:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400076ee:	add    BYTE PTR [rax],al
   1400076f0:	mov    BYTE PTR [rdx+0x0],bh
   1400076f3:	add    al,ah
   1400076f5:	jbe    0x1400076f7
	...
   140007707:	add    BYTE PTR [rax+0x800007e],ah
   14000770d:	je     0x14000770f
	...
   14000771f:	add    BYTE PTR [rax-0x5d],ah
	...
   14000772a:	add    BYTE PTR [rax],al
   14000772c:	(bad)  
   14000772d:	(bad)  
   14000772e:	(bad)  
   14000772f:	inc    DWORD PTR [rax]
   140007731:	add    BYTE PTR [rax],al
   140007733:	add    BYTE PTR [rax+0x0],al
   140007736:	add    BYTE PTR [rax],al
   140007738:	push   0x71
	...
   140007745:	add    BYTE PTR [rax],al
   140007747:	add    BYTE PTR [rax],ah
   140007749:	js     0x14000774b
   14000774b:	add    al,dh
   14000774d:	js     0x14000774f
   14000774f:	add    al,ah
   140007751:	jb     0x140007753
   140007753:	add    BYTE PTR [rax-0x47ffff81],dh
   140007759:	jbe    0x14000775b
	...
   14000777f:	add    BYTE PTR [rdx],al
   140007781:	add    BYTE PTR [rax],al
   140007783:	add    al,bh
   140007785:	jns    0x140007787
	...
   140007793:	add    BYTE PTR [rcx],al
   140007795:	add    BYTE PTR [rax],al
   140007797:	add    BYTE PTR [rdx],cl
   140007799:	add    BYTE PTR [rax],al
   14000779b:	add    al,dl
   14000779d:	jne    0x14000779f
	...
   1400077af:	add    BYTE PTR [rcx],al
   1400077b1:	add    BYTE PTR [rax],al
   1400077b3:	add    BYTE PTR [rax],ch
   1400077b5:	jne    0x1400077b7
	...
   1400077bf:	add    al,dh
   1400077c1:	movabs ds:0x90000,al
   1400077ca:	add    BYTE PTR [rax],al
   1400077cc:	(bad)  
   1400077cd:	(bad)  
   1400077ce:	(bad)  
   1400077cf:	inc    DWORD PTR [rax]
   1400077d1:	add    BYTE PTR [rax],al
   1400077d3:	add    BYTE PTR [rax+0x0],al
   1400077d6:	add    BYTE PTR [rax],al
   1400077d8:	nop
   1400077d9:	outs   dx,DWORD PTR ds:[rsi]
	...
   1400077e6:	add    BYTE PTR [rax],al
   1400077e8:	or     BYTE PTR [rax+rax*1+0x0],dh
	...
   1400077f8:	nop
   1400077f9:	test   eax,0x10000
   1400077fe:	add    BYTE PTR [rax],al
   140007800:	add    BYTE PTR [rax],al
   140007802:	add    BYTE PTR [rax],al
   140007804:	(bad)  
   140007805:	(bad)  
   140007806:	(bad)  
   140007807:	inc    DWORD PTR [rax]
   140007809:	add    BYTE PTR [rax],al
   14000780b:	add    BYTE PTR [rax+0x0],al
   14000780e:	add    BYTE PTR [rax],al
   140007810:	pop    rax
   140007811:	je     0x140007813
	...
   14000781f:	add    BYTE PTR [rax],bh
   140007821:	stos   BYTE PTR es:[rdi],al
   140007822:	add    BYTE PTR [rax],al
   140007824:	add    al,0x0
   140007826:	add    BYTE PTR [rax],al
   140007828:	add    BYTE PTR [rax],al
   14000782a:	add    BYTE PTR [rax],al
   14000782c:	(bad)  
   14000782d:	(bad)  
   14000782e:	(bad)  
   14000782f:	inc    DWORD PTR [rax]
   140007831:	add    BYTE PTR [rax],al
   140007833:	add    BYTE PTR [rax+0x0],al
   140007836:	add    BYTE PTR [rax],al
   140007838:	loopne 0x1400078b8
	...
   140007846:	add    BYTE PTR [rax],al
   140007848:	add    DWORD PTR [rax],eax
	...
   140007852:	add    BYTE PTR [rax],al
   140007854:	(bad)  
   140007855:	scas   al,BYTE PTR es:[rdi]
   140007856:	add    BYTE PTR [rax],al
   140007858:	mov    BYTE PTR [rax+0x0],bh
   14000785b:	add    BYTE PTR [rax+0x78],cl
	...
   140007876:	add    BYTE PTR [rax],al
   140007878:	add    DWORD PTR [rax],eax
   14000787a:	add    BYTE PTR [rax],al
   14000787c:	sub    BYTE PTR [rax+0x0],dh
	...
   14000788f:	add    BYTE PTR [rdx],al
   140007891:	add    BYTE PTR [rax],al
   140007893:	add    BYTE PTR [rax+0x6f],bh
	...
   14000789e:	add    BYTE PTR [rax],al
   1400078a0:	sub    BYTE PTR [rbx+0x0],dh
   1400078a3:	add    BYTE PTR [rax],cl
   1400078a5:	je     0x1400078a7
	...
   1400078b7:	add    BYTE PTR [rax-0x59],ah
   1400078ba:	add    BYTE PTR [rax],al
   1400078bc:	add    DWORD PTR [rax],eax
   1400078be:	add    BYTE PTR [rax],al
   1400078c0:	or     BYTE PTR [rax],al
   1400078c2:	add    BYTE PTR [rax],al
   1400078c4:	(bad)  
   1400078c5:	(bad)  
   1400078c6:	(bad)  
   1400078c7:	inc    DWORD PTR [rax]
   1400078c9:	add    BYTE PTR [rax],al
   1400078cb:	add    BYTE PTR [rax+0x0],al
   1400078ce:	add    BYTE PTR [rax],al
   1400078d0:	sub    BYTE PTR [rcx+0x0],dh
	...
   1400078df:	add    BYTE PTR [rax],dl
   1400078e1:	jb     0x1400078e3
	...
   1400078ef:	add    al,dh
   1400078f1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400078f2:	add    BYTE PTR [rax],al
   1400078f4:	add    eax,DWORD PTR [rax]
   1400078f6:	add    BYTE PTR [rax],al
   1400078f8:	add    BYTE PTR [rax],al
   1400078fa:	add    BYTE PTR [rax],al
   1400078fc:	(bad)  
   1400078fd:	(bad)  
   1400078fe:	(bad)  
   1400078ff:	inc    DWORD PTR [rax]
   140007901:	add    BYTE PTR [rax],al
   140007903:	add    BYTE PTR [rax+0x0],al
   140007906:	add    BYTE PTR [rax],al
   140007908:	enter  0x7e,0x0
	...
   140007918:	jo     0x1400078be
	...
   140007922:	add    BYTE PTR [rax],al
   140007924:	(bad)  
   140007925:	(bad)  
   140007926:	(bad)  
   140007927:	inc    DWORD PTR [rax]
   140007929:	add    BYTE PTR [rax],al
   14000792b:	add    BYTE PTR [rax+0x0],al
   14000792e:	add    BYTE PTR [rax],al
   140007930:	test   al,0x77
	...
   14000793e:	add    BYTE PTR [rax],al
   140007940:	test   al,0x0
   140007943:	add    BYTE PTR [rdx],al
   140007945:	add    BYTE PTR [rax],al
   140007947:	add    BYTE PTR [rax],al
   140007949:	add    BYTE PTR [rax],al
   14000794b:	add    bh,bh
   14000794d:	(bad)  
   14000794e:	(bad)  
   14000794f:	inc    DWORD PTR [rax]
   140007951:	add    BYTE PTR [rax],al
   140007953:	add    BYTE PTR [rax+0x0],al
   140007956:	add    BYTE PTR [rax],al
   140007958:	movabs al,ds:0x72
	...
   14000796d:	add    BYTE PTR [rax],al
   14000796f:	add    BYTE PTR [rbx],al
   140007971:	add    BYTE PTR [rax],al
   140007973:	add    al,cl
   140007975:	add    DWORD PTR [rax],0x0
   14000797b:	add    BYTE PTR [rax],al
   14000797d:	add    BYTE PTR [rax],al
   14000797f:	add    BYTE PTR [rax+0x10000a8],dh
   140007985:	add    BYTE PTR [rax],al
   140007987:	add    BYTE PTR [rax],al
   140007989:	add    BYTE PTR [rax],al
   14000798b:	add    bh,bh
   14000798d:	(bad)  
   14000798e:	(bad)  
   14000798f:	inc    DWORD PTR [rax]
   140007991:	add    BYTE PTR [rax],al
   140007993:	add    BYTE PTR [rax+0x0],al
   140007996:	add    BYTE PTR [rax],al
   140007998:	or     BYTE PTR [rbx+0x0],bh
	...
   1400079a7:	add    BYTE PTR [rcx],al
	...
   1400079b1:	add    BYTE PTR [rax],al
   1400079b3:	add    BYTE PTR [rax-0x5c],dh
   1400079b6:	add    BYTE PTR [rax],al
   1400079b8:	test   al,0x77
   1400079ba:	add    BYTE PTR [rax],al
   1400079bc:	test   al,0x79
	...
   1400079ce:	add    BYTE PTR [rax],al
   1400079d0:	shl    BYTE PTR [rcx+0x80000],1
   1400079d6:	add    BYTE PTR [rax],al
   1400079d8:	add    BYTE PTR [rax],al
   1400079da:	add    BYTE PTR [rax],al
   1400079dc:	(bad)  
   1400079dd:	(bad)  
   1400079de:	(bad)  
   1400079df:	inc    DWORD PTR [rax]
   1400079e1:	add    BYTE PTR [rax],al
   1400079e3:	add    BYTE PTR [rax+0x0],al
   1400079e6:	add    BYTE PTR [rax],al
   1400079e8:	jo     0x140007a5e
	...
   1400079f6:	add    BYTE PTR [rax],al
   1400079f8:	push   rax
   1400079f9:	jbe    0x1400079fb
   1400079fb:	add    BYTE PTR [rax],bl
   1400079fd:	jns    0x1400079ff
	...
   140007a0f:	add    BYTE PTR [rax+0x8000075],ch
   140007a15:	je     0x140007a17
	...
   140007a2b:	add    BYTE PTR [rcx],al
   140007a2d:	add    BYTE PTR [rax],al
   140007a2f:	add    BYTE PTR [rax],cl
   140007a31:	add    BYTE PTR [rax],al
   140007a33:	add    BYTE PTR [rax],dl
   140007a35:	jg     0x140007a37
	...
   140007a3f:	add    BYTE PTR [rax],dh
   140007a41:	jl     0x140007a43
   140007a43:	add    BYTE PTR [rax+0x28000071],al
   140007a49:	jae    0x140007a4b
   140007a4b:	add    BYTE PTR [rax],cl
   140007a4d:	je     0x140007a4f
   140007a4f:	add    BYTE PTR [rax+0x50000078],bh
   140007a55:	jo     0x140007a57
   140007a57:	add    BYTE PTR [rax+0x7c],dh
   140007a5a:	add    BYTE PTR [rax],al
   140007a5c:	call   0x140007ad0
	...
   140007a89:	add    BYTE PTR [rax],al
   140007a8b:	add    BYTE PTR [rcx],al
   140007a8d:	add    BYTE PTR [rax],al
   140007a8f:	add    BYTE PTR [rcx],cl
   140007a91:	add    BYTE PTR [rax],al
   140007a93:	add    BYTE PTR [rax+0x7f],ah
	...
   140007a9e:	add    BYTE PTR [rax],al
   140007aa0:	mov    al,0xa8
   140007aa2:	add    BYTE PTR [rax],al
   140007aa4:	add    DWORD PTR [rax],eax
   140007aa6:	add    BYTE PTR [rax],al
   140007aa8:	or     BYTE PTR [rax],al
   140007aaa:	add    BYTE PTR [rax],al
   140007aac:	(bad)  
   140007aad:	(bad)  
   140007aae:	(bad)  
   140007aaf:	inc    DWORD PTR [rax]
   140007ab1:	add    BYTE PTR [rax],al
   140007ab3:	add    BYTE PTR [rax+0x0],al
   140007ab6:	add    BYTE PTR [rax],al
   140007ab8:	or     BYTE PTR [rbx+0x0],bh
	...
   140007acb:	add    BYTE PTR [rcx],al
   140007acd:	add    BYTE PTR [rax],al
   140007acf:	add    BYTE PTR [rax],cl
   140007ad1:	add    BYTE PTR [rax],al
   140007ad3:	add    BYTE PTR [rax+0x7a],al
	...
   140007ade:	add    BYTE PTR [rax],al
   140007ae0:	(bad)  
   140007ae1:	movabs eax,ds:0xa0000
   140007aea:	add    BYTE PTR [rax],al
   140007aec:	(bad)  
   140007aed:	(bad)  
   140007aee:	(bad)  
   140007aef:	inc    DWORD PTR [rax]
   140007af1:	add    BYTE PTR [rax],al
   140007af3:	add    BYTE PTR [rax+0x0],al
   140007af6:	add    BYTE PTR [rax],al
   140007af8:	enter  0x7b,0x0
	...
   140007b10:	add    al,BYTE PTR [rax]
   140007b12:	add    BYTE PTR [rax],al
   140007b14:	and    BYTE PTR [rbx+0x0],bh
	...
   140007b1f:	add    BYTE PTR [rax-0x67ffff87],al
   140007b25:	jge    0x140007b27
	...
   140007b37:	add    BYTE PTR [rax+0x7d],dh
	...
   140007b4e:	add    BYTE PTR [rax],al
   140007b50:	sar    BYTE PTR [rcx+0x0],1
   140007b53:	add    BYTE PTR [rax],dh
   140007b55:	jl     0x140007b57
   140007b57:	add    BYTE PTR [rax+0x28000071],al
   140007b5d:	jae    0x140007b5f
   140007b5f:	add    BYTE PTR [rax],cl
   140007b61:	je     0x140007b63
   140007b63:	add    BYTE PTR [rax+0x50000078],bh
   140007b69:	jo     0x140007b6b
   140007b6b:	add    BYTE PTR [rax+0x7c],dh
   140007b6e:	add    BYTE PTR [rax],al
   140007b70:	call   0x140007be4
	...
   140007b9d:	add    BYTE PTR [rax],al
   140007b9f:	add    BYTE PTR [rax+0xa7],ch
   140007ba5:	add    BYTE PTR [rax],al
   140007ba7:	add    BYTE PTR [rax],al
   140007ba9:	add    BYTE PTR [rax],al
   140007bab:	add    bh,bh
   140007bad:	(bad)  
   140007bae:	(bad)  
   140007baf:	inc    DWORD PTR [rax]
   140007bb1:	add    BYTE PTR [rax],al
   140007bb3:	add    BYTE PTR [rax+0x0],al
   140007bb6:	add    BYTE PTR [rax],al
   140007bb8:	clc    
   140007bb9:	jle    0x140007bbb
	...
   140007bcb:	add    BYTE PTR [rcx],al
   140007bcd:	add    BYTE PTR [rax],al
   140007bcf:	add    BYTE PTR [rbx],cl
   140007bd1:	add    BYTE PTR [rax],al
   140007bd3:	add    BYTE PTR [rax+0x73],dl
   140007bd9:	add    BYTE PTR [rax],al
   140007bdb:	add    BYTE PTR [rax],al
   140007bdd:	add    BYTE PTR [rax],al
   140007bdf:	add    BYTE PTR [rax],ah
   140007be1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140007be2:	add    BYTE PTR [rax],al
   140007be4:	or     BYTE PTR [rax],al
   140007be6:	add    BYTE PTR [rax],al
   140007be8:	add    BYTE PTR [rax],al
   140007bea:	add    BYTE PTR [rax],al
   140007bec:	(bad)  
   140007bed:	(bad)  
   140007bee:	(bad)  
   140007bef:	inc    DWORD PTR [rax]
   140007bf1:	add    BYTE PTR [rax],al
   140007bf3:	add    BYTE PTR [rax+0x0],al
   140007bf6:	add    BYTE PTR [rax],al
   140007bf8:	mov    BYTE PTR [rdx+0x0],bh
	...
   140007c07:	add    BYTE PTR [rax],ah
   140007c09:	test   eax,0xa0000
   140007c0e:	add    BYTE PTR [rax],al
   140007c10:	add    BYTE PTR [rax],al
   140007c12:	add    BYTE PTR [rax],al
   140007c14:	(bad)  
   140007c15:	(bad)  
   140007c16:	(bad)  
   140007c17:	inc    DWORD PTR [rax]
   140007c19:	add    BYTE PTR [rax],al
   140007c1b:	add    BYTE PTR [rax+0x0],al
   140007c1e:	add    BYTE PTR [rax],al
   140007c20:	push   rax
   140007c21:	jae    0x140007c23
	...
   140007c2f:	add    BYTE PTR [rax+0x70000ad],dl
   140007c35:	add    BYTE PTR [rax],al
   140007c37:	add    BYTE PTR [rax],al
   140007c39:	add    BYTE PTR [rax],al
   140007c3b:	add    bh,bh
   140007c3d:	(bad)  
   140007c3e:	(bad)  
   140007c3f:	inc    DWORD PTR [rax]
   140007c41:	add    BYTE PTR [rax],al
   140007c43:	add    BYTE PTR [rax+0x0],al
   140007c46:	add    BYTE PTR [rax],al
   140007c48:	enter  0x7a,0x0
	...
   140007c60:	add    DWORD PTR [rax],eax
   140007c62:	add    BYTE PTR [rax],al
   140007c64:	cmp    BYTE PTR [rbx+0x0],bh
	...
   140007c6f:	add    BYTE PTR [rax-0x53],cl
   140007c72:	add    BYTE PTR [rax],al
   140007c74:	add    BYTE PTR [rax],al
   140007c76:	add    BYTE PTR [rax],al
   140007c78:	or     DWORD PTR [rax],eax
   140007c7a:	add    BYTE PTR [rax],al
   140007c7c:	(bad)  
   140007c7d:	(bad)  
   140007c7e:	(bad)  
   140007c7f:	inc    DWORD PTR [rax]
   140007c81:	add    BYTE PTR [rax],al
   140007c83:	add    BYTE PTR [rbp+0x0],cl
   140007c86:	add    BYTE PTR [rax],al
   140007c88:	pop    rax
   140007c89:	jl     0x140007c8b
	...
   140007c97:	add    BYTE PTR [rax-0x59],ah
   140007c9a:	add    BYTE PTR [rax],al
   140007c9c:	add    DWORD PTR [rax],eax
   140007c9e:	add    BYTE PTR [rax],al
   140007ca0:	add    BYTE PTR [rax],al
   140007ca2:	add    BYTE PTR [rax],al
   140007ca4:	(bad)  
   140007ca5:	(bad)  
   140007ca6:	(bad)  
   140007ca7:	inc    DWORD PTR [rax]
   140007ca9:	add    BYTE PTR [rax],al
   140007cab:	add    BYTE PTR [rax+0x0],al
   140007cae:	add    BYTE PTR [rax],al
   140007cb0:	sub    BYTE PTR [rcx+0x0],dh
	...
   140007cbf:	add    BYTE PTR [rcx],al
	...
   140007cc9:	add    BYTE PTR [rax],al
   140007ccb:	add    BYTE PTR [rax-0x58],al
   140007cce:	add    BYTE PTR [rax],al
   140007cd0:	movabs al,ds:0x7cc0000072
	...
   140007ce5:	add    BYTE PTR [rax],al
   140007ce7:	add    BYTE PTR [rcx],al
	...
   140007cf1:	add    BYTE PTR [rax],al
   140007cf3:	add    BYTE PTR [rax-0x58],bh
   140007cf6:	add    BYTE PTR [rax],al
   140007cf8:	mov    al,0x70
   140007cfa:	add    BYTE PTR [rax],al
   140007cfc:	call   0x140007d7d
	...
   140007d15:	add    BYTE PTR [rax],al
   140007d17:	add    BYTE PTR [rbx],al
   140007d19:	add    BYTE PTR [rax],al
   140007d1b:	add    BYTE PTR [rax+0x73],ch
	...
   140007d26:	add    BYTE PTR [rax],al
   140007d28:	and    BYTE PTR [rdi+0x0],dh
	...
   140007d37:	add    BYTE PTR [rax+0x76],bh
	...
   140007d45:	add    BYTE PTR [rax],al
   140007d47:	add    BYTE PTR [rax+0x90000a2],dl
   140007d4d:	add    BYTE PTR [rax],al
   140007d4f:	add    BYTE PTR [rax],al
   140007d51:	add    BYTE PTR [rax],al
   140007d53:	add    bh,bh
   140007d55:	(bad)  
   140007d56:	(bad)  
   140007d57:	inc    DWORD PTR [rax]
   140007d59:	add    BYTE PTR [rax],al
   140007d5b:	add    BYTE PTR [rax+0x0],al
   140007d5e:	add    BYTE PTR [rax],al
   140007d60:	nop
   140007d61:	ja     0x140007d63
	...
   140007d6f:	add    BYTE PTR [rax-0x53],cl
	...
   140007d7a:	add    BYTE PTR [rax],al
   140007d7c:	(bad)  
   140007d7d:	(bad)  
   140007d7e:	(bad)  
   140007d7f:	inc    DWORD PTR [rax]
   140007d81:	add    BYTE PTR [rax],al
   140007d83:	add    BYTE PTR [rax+0x0],al
   140007d86:	add    BYTE PTR [rax],al
   140007d88:	pop    rax
   140007d89:	jl     0x140007d8b
	...
   140007d97:	add    BYTE PTR [rax+0xa7],ch
   140007d9d:	add    BYTE PTR [rax],al
   140007d9f:	add    BYTE PTR [rax],al
   140007da1:	add    BYTE PTR [rax],al
   140007da3:	add    bh,bh
   140007da5:	(bad)  
   140007da6:	(bad)  
   140007da7:	inc    DWORD PTR [rax]
   140007da9:	add    BYTE PTR [rax],al
   140007dab:	add    BYTE PTR [rbp+0x0],cl
   140007dae:	add    BYTE PTR [rax],al
   140007db0:	clc    
   140007db1:	jle    0x140007db3
	...
   140007dbf:	add    BYTE PTR [rax-0xfffff7f],cl
   140007dc5:	je     0x140007dc7
   140007dc7:	add    BYTE PTR [rax+0x800007e],ah
   140007dcd:	je     0x140007dcf
   140007dcf:	add    BYTE PTR [rax+0x50000078],bh
   140007dd5:	jo     0x140007dd7
   140007dd7:	add    BYTE PTR [rax+0x7c],dh
   140007dda:	add    BYTE PTR [rax],al
   140007ddc:	call   0x140007e50
	...
   140007e05:	add    BYTE PTR [rax],al
   140007e07:	add    BYTE PTR [rcx],al
	...
   140007e11:	add    BYTE PTR [rax],al
   140007e13:	add    al,dl
   140007e15:	movabs eax,ds:0x7e08000074700000
	...
   140007e2e:	add    BYTE PTR [rax],al
   140007e30:	cwde   
   140007e31:	jl     0x140007e33
   140007e33:	add    BYTE PTR [rax+0x7d],bl
	...
   140007e45:	add    BYTE PTR [rax],al
   140007e47:	add    al,dh
   140007e49:	je     0x140007e4b
   140007e4b:	add    BYTE PTR [rax+0x800007e],ah
   140007e51:	je     0x140007e53
	...
   140007e67:	add    BYTE PTR [rax+0x28000071],al
   140007e6d:	jae    0x140007e6f
   140007e6f:	add    BYTE PTR [rax],cl
   140007e71:	je     0x140007e73
	...
   140007e87:	add    BYTE PTR [rax+0x10000074],dh
   140007e8d:	jb     0x140007e8f
	...
   140007e9f:	add    BYTE PTR [rax-0x51],dl
   140007ea2:	add    BYTE PTR [rax],al
   140007ea4:	add    DWORD PTR [rax],eax
   140007ea6:	add    BYTE PTR [rax],al
   140007ea8:	add    BYTE PTR [rax],al
   140007eaa:	add    BYTE PTR [rax],al
   140007eac:	(bad)  
   140007ead:	(bad)  
   140007eae:	(bad)  
   140007eaf:	inc    DWORD PTR [rax]
   140007eb1:	add    BYTE PTR [rax],al
   140007eb3:	add    BYTE PTR [rax+0x0],al
   140007eb6:	add    BYTE PTR [rax],al
   140007eb8:	js     0x140007f30
	...
   140007ece:	add    BYTE PTR [rax],al
   140007ed0:	add    al,0x0
   140007ed2:	add    BYTE PTR [rax],al
   140007ed4:	js     0x140007f48
	...
   140007ee6:	add    BYTE PTR [rax],al
   140007ee8:	add    eax,0x48000000
   140007eed:	ja     0x140007eef
	...
   140007eff:	add    BYTE PTR [rcx],al
   140007f01:	add    BYTE PTR [rax],al
   140007f03:	add    BYTE PTR [rax],bl
   140007f05:	jne    0x140007f07
	...
   140007f0f:	add    al,dh
   140007f11:	jg     0x140007f13
   140007f13:	add    al,ch
   140007f15:	jno    0x140007f17
   140007f17:	add    BYTE PTR [rax+0x8000075],ch
   140007f1d:	je     0x140007f1f
   140007f1f:	add    BYTE PTR [rax+0x5000007a],ah
   140007f25:	jo     0x140007f27
   140007f27:	add    BYTE PTR [rax+0x7c],dh
   140007f2a:	add    BYTE PTR [rax],al
   140007f2c:	call   0x140007fa0
	...
   140007f5d:	add    BYTE PTR [rax],al
   140007f5f:	add    al,ah
   140007f61:	jnp    0x140007f63
   140007f63:	add    BYTE PTR [rax-0xfffff7f],cl
   140007f69:	je     0x140007f6b
   140007f6b:	add    BYTE PTR [rax+0x800007e],ah
   140007f71:	je     0x140007f73
   140007f73:	add    BYTE PTR [rax+0x50000078],bh
   140007f79:	jo     0x140007f7b
   140007f7b:	add    BYTE PTR [rax+0x7c],dh
   140007f7e:	add    BYTE PTR [rax],al
   140007f80:	call   0x140007ff4
	...
   140007fad:	add    BYTE PTR [rax],al
   140007faf:	add    BYTE PTR [rax-0x52],ah
   140007fb2:	add    BYTE PTR [rax],al
   140007fb4:	add    DWORD PTR [rax],eax
   140007fb6:	add    BYTE PTR [rax],al
   140007fb8:	add    BYTE PTR [rax],al
   140007fba:	add    BYTE PTR [rax],al
   140007fbc:	(bad)  
   140007fbd:	(bad)  
   140007fbe:	(bad)  
   140007fbf:	inc    DWORD PTR [rax]
   140007fc1:	add    BYTE PTR [rax],al
   140007fc3:	add    BYTE PTR [rax+0x0],al
   140007fc6:	add    BYTE PTR [rax],al
   140007fc8:	mov    BYTE PTR [rax+0x0],bh
	...
   140007fdf:	add    BYTE PTR [rdx],al
   140007fe1:	add    BYTE PTR [rax],al
   140007fe3:	add    BYTE PTR [rax+0x7e],cl
   140007fe9:	add    BYTE PTR [rax],al
   140007feb:	add    BYTE PTR [rax],al
   140007fed:	add    BYTE PTR [rax],al
   140007fef:	add    BYTE PTR [rax-0x56],dh
   140007ff2:	add    BYTE PTR [rax],al
   140007ff4:	(bad)  
   140007ff5:	add    BYTE PTR [rax],al
   140007ff7:	add    BYTE PTR [rax],al
   140007ff9:	add    BYTE PTR [rax],al
   140007ffb:	add    bh,bh
   140007ffd:	(bad)  
   140007ffe:	(bad)  
   140007fff:	inc    DWORD PTR [rax]
   140008001:	add    BYTE PTR [rax],al
   140008003:	add    BYTE PTR [rax+0x0],al
   140008006:	add    BYTE PTR [rax],al
   140008008:	sub    BYTE PTR [rdx+0x0],bh
	...
   14000801f:	add    BYTE PTR [rax-0x80],bh
   140008022:	add    BYTE PTR [rax],al
   140008024:	loopne 0x1400080a1
   140008026:	add    BYTE PTR [rax],al
   140008028:	mov    BYTE PTR [rcx+0x74f00000],al
   14000802e:	add    BYTE PTR [rax],al
   140008030:	movabs al,ds:0xb80000740800007e
   140008039:	js     0x14000803b
   14000803b:	add    BYTE PTR [rax+0x70],dl
   14000803e:	add    BYTE PTR [rax],al
   140008040:	jo     0x1400080be
   140008042:	add    BYTE PTR [rax],al
   140008044:	call   0x1400080b8
	...
   140008075:	add    BYTE PTR [rax],al
   140008077:	add    BYTE PTR [rax-0x58],bh
   14000807a:	add    BYTE PTR [rax],al
   14000807c:	or     DWORD PTR [rax],eax
   14000807e:	add    BYTE PTR [rax],al
   140008080:	add    BYTE PTR [rax],al
   140008082:	add    BYTE PTR [rax],al
   140008084:	(bad)  
   140008085:	(bad)  
   140008086:	(bad)  
   140008087:	inc    DWORD PTR [rax]
   140008089:	add    BYTE PTR [rax],al
   14000808b:	add    BYTE PTR [rax+0x0],al
   14000808e:	add    BYTE PTR [rax],al
   140008090:	mov    al,0x70
	...
   14000809e:	add    BYTE PTR [rax],al
   1400080a0:	add    DWORD PTR [rax],eax
	...
   1400080aa:	add    BYTE PTR [rax],al
   1400080ac:	mov    al,0xa6
   1400080ae:	add    BYTE PTR [rax],al
   1400080b0:	js     0x140008129
   1400080b2:	add    BYTE PTR [rax],al
   1400080b4:	movabs al,ds:0x80
	...
   1400080cd:	add    BYTE PTR [rax],al
   1400080cf:	add    BYTE PTR [rax],cl
   1400080d1:	jl     0x1400080d3
   1400080d3:	add    BYTE PTR [rax+0x7d],cl
   1400080d6:	add    BYTE PTR [rax],al
   1400080d8:	lock jg 0x1400080db
   1400080db:	add    al,ch
   1400080dd:	jno    0x1400080df
   1400080df:	add    BYTE PTR [rax+0x8000075],ch
   1400080e5:	je     0x1400080e7
   1400080e7:	add    BYTE PTR [rax+0x5000007a],ah
   1400080ed:	jo     0x1400080ef
   1400080ef:	add    BYTE PTR [rax+0x7c],dh
   1400080f2:	add    BYTE PTR [rax],al
   1400080f4:	call   0x180008168
   1400080f9:	jno    0x1400080fb
	...
   140008137:	add    BYTE PTR [rcx],al
   140008139:	add    BYTE PTR [rax],al
   14000813b:	add    BYTE PTR [rax+0x70],ah
	...
   14000814d:	add    BYTE PTR [rax],al
   14000814f:	add    BYTE PTR [rbx],al
   140008151:	add    BYTE PTR [rax],al
   140008153:	add    BYTE PTR [rax+0x7e],cl
	...
   14000815e:	add    BYTE PTR [rax],al
   140008160:	add    DWORD PTR [rax],eax
	...
   14000816a:	add    BYTE PTR [rax],al
   14000816c:	mov    al,0xae
   14000816e:	add    BYTE PTR [rax],al
   140008170:	(bad)  
   140008171:	jb     0x140008173
   140008173:	add    BYTE PTR [rax-0x7f],ah
	...
   140008186:	add    BYTE PTR [rax],al
   140008188:	xor    BYTE PTR [rbx+0x70000],ch
   14000818e:	add    BYTE PTR [rax],al
   140008190:	add    BYTE PTR [rax],al
   140008192:	add    BYTE PTR [rax],al
   140008194:	(bad)  
   140008195:	(bad)  
   140008196:	(bad)  
   140008197:	inc    DWORD PTR [rax]
   140008199:	add    BYTE PTR [rax],al
   14000819b:	add    BYTE PTR [rax+0x0],al
   14000819e:	add    BYTE PTR [rax],al
   1400081a0:	shr    BYTE PTR [rdi+0x0],1
	...
   1400081b7:	add    BYTE PTR [rdx],al
   1400081b9:	add    BYTE PTR [rax],al
   1400081bb:	add    BYTE PTR [rax],dl
   1400081bd:	jp     0x1400081bf
	...
   1400081c7:	add    BYTE PTR [rax],bh
   1400081c9:	jne    0x1400081cb
   1400081cb:	add    BYTE PTR [rax+0x10000074],dh
   1400081d1:	jb     0x1400081d3
	...
   1400081e7:	add    BYTE PTR [rbp+0x54],al
   1400081ea:	push   rdi
   1400081eb:	xor    BYTE PTR [rax],dl
   1400081ed:	add    BYTE PTR [rax],al
   1400081ef:	add    DWORD PTR [rsi+0x2b88040e],eax
   1400081f5:	add    eax,0xb03bb8a
   1400081fa:	add    eax,0x2
   1400081ff:	add    BYTE PTR [rax],al
   140008201:	add    BYTE PTR [rax],al
   140008204:	and    BYTE PTR [rax],al
   140008206:	add    BYTE PTR [rcx+0x63],al
   140008209:	je     0x140008274
   14000820b:	jbe    0x140008276
   14000820d:	je     0x140008288
   14000820f:	push   rbx
   140008210:	je     0x140008281
   140008212:	jo     0x140008284
   140008214:	gs fs rex.B jne 0x14000828d
   140008219:	outs   dx,DWORD PTR ds:[rsi]
   14000821a:	ins    DWORD PTR es:[rdi],dx
   14000821b:	(bad)  
   14000821c:	je     0x140008287
   14000821e:	movsxd esp,DWORD PTR [rcx+0x6c]
   140008221:	ins    BYTE PTR es:[rdi],dx
   140008222:	jns    0x140008224
   140008224:	add    ecx,DWORD PTR [rbx]
   140008226:	add    eax,0x1
   14000822b:	add    BYTE PTR [rax],al
   14000822d:	add    BYTE PTR [rax],al
   140008230:	adc    al,BYTE PTR [rax]
   140008232:	add    BYTE PTR [rcx+riz*2+0x75],cl
   140008236:	outs   dx,BYTE PTR ds:[rsi]
   140008237:	movsxd ebp,DWORD PTR [rax+0x55]
   14000823a:	jb     0x1400082a5
   14000823c:	add    BYTE PTR [rbp+0x72],dh
   14000823f:	imul   eax,DWORD PTR [rax],0x50b0301
   140008245:	add    al,BYTE PTR [rax]
   140008247:	add    BYTE PTR [rax],al
   140008249:	add    BYTE PTR [rax],al
   14000824b:	add    BYTE PTR [rax],al
   14000824e:	(bad)  
   14000824f:	add    BYTE PTR [rax],al
   140008251:	rex.WR (bad) 
   140008253:	jne    0x1400082c3
   140008255:	movsxd ebp,DWORD PTR [rax+0x55]
   140008258:	jb     0x1400082c3
   14000825a:	add    BYTE PTR [rdx+0x65],dh
   14000825d:	jae    0x1400082d4
   14000825f:	ins    BYTE PTR es:[rdi],dx
   140008260:	je     0x140008262
   140008262:	xchg   DWORD PTR [rdi],ecx
   140008264:	add    al,0xff
   140008266:	stos   DWORD PTR es:[rdi],eax
   140008267:	(bad)  
   140008268:	rex.WX ins DWORD PTR es:[rdi],dx
   14000826a:	xor    al,0xdc
   14000826c:	push   rsi
   14000826d:	cli    
   14000826e:	xchg   ebx,ebp
   140008270:	(bad)  
   140008271:	sub    esi,edi
   140008273:	or     dh,BYTE PTR [ebx]
   140008276:	add    BYTE PTR [rbp+0x69],cl
   140008279:	movsxd esi,DWORD PTR [rdx+0x6f]
   14000827c:	jae    0x1400082ed
   14000827e:	data16 je 0x1400082af
   140008281:	push   rdi
   140008282:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   140008289:	rex.XB
   14000828a:	rex.R push rax
   14000828c:	cs push rbx
   14000828e:	gs jb  0x140008307
   140008291:	imul   esp,DWORD PTR [rbx+0x65],0x1001300
   140008298:	sbb    dh,BYTE PTR [rbx+0x50]
   14000829b:	rex.WRXB iretq 
   14000829d:	mov    DWORD PTR [rdx-0x231f4cb9],eax
   1400082a3:	call   0xfa768771
   1400082a8:	add    DWORD PTR [rax],eax
   1400082aa:	add    BYTE PTR [rax],al
   1400082ac:	push   rdx
   1400082ad:	push   rbx
   1400082ae:	rex.R push rbx
   1400082b0:	loope  0x1400082f4
   1400082b2:	ror    BYTE PTR [rax],0x3
   1400082b5:	jbe    0x1400082db
   1400082b7:	rex.RB xchg r8d,eax
   1400082b9:	test   BYTE PTR [rbp-0x105ebc85],cl
   1400082bf:	int3   
   1400082c0:	add    DWORD PTR [rax],eax
   1400082c2:	add    BYTE PTR [rax],al
   1400082c4:	rex.XB
   1400082c5:	rex.R push rax
   1400082c7:	push   rdx
   1400082c8:	gs data16 gs jb 0x140008332
   1400082cd:	outs   dx,BYTE PTR ds:[rsi]
   1400082ce:	movsxd esp,DWORD PTR [rbp+0x2e]
   1400082d1:	jo     0x140008337
   1400082d3:	(bad)  
	...
   1400082ec:	rex.RXB
   1400082ed:	rex.XB push r12
   1400082ef:	rex.WR add BYTE PTR [rax],r10b
   1400082f2:	add    BYTE PTR [rax],al
   1400082f4:	cdq    
   1400082f5:	add    DWORD PTR [rax],eax
   1400082f7:	add    BYTE PTR [rsi],ch
   1400082f9:	je     0x140008360
   1400082fb:	js     0x140008371
   1400082fd:	add    BYTE PTR [rax],al
   1400082ff:	add    BYTE PTR [rcx+rdx*1+0xbd0000],bl
   140008306:	add    BYTE PTR [rax],al
   140008308:	cs je  0x140008370
   14000830b:	js     0x140008381
   14000830d:	and    al,0x64
   14000830f:	imul   eax,DWORD PTR [rax],0x60000000
   140008315:	adc    al,BYTE PTR [rax]
   140008317:	add    BYTE PTR [rax+0x3f],dl
   14000831a:	add    BYTE PTR [rax],al
   14000831c:	cs je  0x140008384
   14000831f:	js     0x140008395
   140008321:	and    al,0x6d
   140008323:	outs   dx,BYTE PTR ds:[rsi]
   140008324:	add    BYTE PTR [rax],al
   140008326:	add    BYTE PTR [rax],al
   140008328:	mov    al,0x51
   14000832a:	add    BYTE PTR [rax],al
   14000832c:	adc    al,BYTE PTR [rax]
   14000832e:	add    BYTE PTR [rax],al
   140008330:	cs je  0x140008398
   140008333:	js     0x1400083a9
   140008335:	and    al,0x6d
   140008337:	outs   dx,BYTE PTR ds:[rsi]
   140008338:	and    al,0x30
   14000833a:	xor    BYTE PTR [rax],al
   14000833c:	ret    0x51
   14000833f:	add    dl,al
   140008341:	add    DWORD PTR [rax],eax
   140008343:	add    BYTE PTR [rsi],ch
   140008345:	je     0x1400083ac
   140008347:	js     0x1400083bd
   140008349:	and    al,0x78
   14000834b:	add    BYTE PTR [rbx+rdx*2+0x780000],al
   140008352:	add    BYTE PTR [rax],al
   140008354:	cs je  0x1400083bc
   140008357:	js     0x1400083cd
   140008359:	and    al,0x79
   14000835b:	add    BYTE PTR fs:[rax],al
   14000835e:	add    BYTE PTR [rax],al
   140008360:	add    BYTE PTR [rax+0x0],ah
   140008363:	add    BYTE PTR [rax+0x3],cl
   140008366:	add    BYTE PTR [rax],al
   140008368:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x352461
   140008371:	add    BYTE PTR [rax],al
   140008373:	add    BYTE PTR [rax+0x63],cl
   140008376:	add    BYTE PTR [rax],al
   140008378:	adc    BYTE PTR [rax],al
   14000837a:	add    BYTE PTR [rax],al
   14000837c:	xor    BYTE PTR cs:[rax],dh
   14000837f:	movsxd esp,DWORD PTR [rsi+0x67]
   140008382:	add    BYTE PTR [rax],al
   140008384:	pop    rax
   140008385:	movsxd eax,DWORD PTR [rax]
   140008387:	add    BYTE PTR [rax],cl
   140008389:	add    BYTE PTR [rax],al
   14000838b:	add    BYTE PTR [rsi],ch
   14000838d:	rex.XB push r10
   14000838f:	push   rsp
   140008390:	and    al,0x58
   140008392:	rex.XB
   140008393:	add    BYTE PTR [r8],al
   140008396:	add    BYTE PTR [rax],al
   140008398:	(bad)  
   140008399:	movsxd eax,DWORD PTR [rax]
   14000839b:	add    BYTE PTR [rax],cl
   14000839d:	add    BYTE PTR [rax],al
   14000839f:	add    BYTE PTR [rsi],ch
   1400083a1:	rex.XB push r10
   1400083a3:	push   rsp
   1400083a4:	and    al,0x58
   1400083a6:	rex.XB
   1400083a7:	rex.B
   1400083a8:	add    BYTE PTR [r8],al
   1400083ab:	add    BYTE PTR [rax+0x63],ch
   1400083ae:	add    BYTE PTR [rax],al
   1400083b0:	sub    BYTE PTR [rax],al
   1400083b2:	add    BYTE PTR [rax],al
   1400083b4:	cs rex.XB push r10
   1400083b7:	push   rsp
   1400083b8:	and    al,0x58
   1400083ba:	rex.XB push r13
   1400083bc:	add    BYTE PTR [rax],al
   1400083be:	add    BYTE PTR [rax],al
   1400083c0:	nop
   1400083c1:	movsxd eax,DWORD PTR [rax]
   1400083c3:	add    BYTE PTR [rax],cl
   1400083c5:	add    BYTE PTR [rax],al
   1400083c7:	add    BYTE PTR [rsi],ch
   1400083c9:	rex.XB push r10
   1400083cb:	push   rsp
   1400083cc:	and    al,0x58
   1400083ce:	rex.XB pop r10
   1400083d0:	add    BYTE PTR [rax],al
   1400083d2:	add    BYTE PTR [rax],al
   1400083d4:	cwde   
   1400083d5:	movsxd eax,DWORD PTR [rax]
   1400083d7:	add    BYTE PTR [rax],cl
   1400083d9:	add    BYTE PTR [rax],al
   1400083db:	add    BYTE PTR [rsi],ch
   1400083dd:	rex.XB push r10
   1400083df:	push   rsp
   1400083e0:	and    al,0x58
   1400083e2:	rex.WB
   1400083e3:	add    BYTE PTR [r8],al
   1400083e6:	add    BYTE PTR [rax],al
   1400083e8:	movabs al,ds:0x2e00000008000063
   1400083f1:	rex.XB push r10
   1400083f3:	push   rsp
   1400083f4:	and    al,0x58
   1400083f6:	rex.WB
   1400083f7:	rex.B
   1400083f8:	add    BYTE PTR [r8],al
   1400083fb:	add    BYTE PTR [rax+0x10000063],ch
   140008401:	add    BYTE PTR [rax],al
   140008403:	add    BYTE PTR [rsi],ch
   140008405:	rex.XB push r10
   140008407:	push   rsp
   140008408:	and    al,0x58
   14000840a:	rex.WB
   14000840b:	rex.XB add BYTE PTR [r8],al
   14000840e:	add    BYTE PTR [rax],al
   140008410:	mov    eax,0x8000063
   140008415:	add    BYTE PTR [rax],al
   140008417:	add    BYTE PTR [rsi],ch
   140008419:	rex.XB push r10
   14000841b:	push   rsp
   14000841c:	and    al,0x58
   14000841e:	rex.WB pop r10
   140008420:	add    BYTE PTR [rax],al
   140008422:	add    BYTE PTR [rax],al
   140008424:	shl    BYTE PTR [rbx+0x0],0x0
   140008428:	or     BYTE PTR [rax],al
   14000842a:	add    BYTE PTR [rax],al
   14000842c:	cs rex.XB push r10
   14000842f:	push   rsp
   140008430:	and    al,0x58
   140008432:	push   rax
   140008433:	add    BYTE PTR [r8],al
   140008436:	add    BYTE PTR [rax],al
   140008438:	enter  0x63,0x0
   14000843c:	or     BYTE PTR [rax],al
   14000843e:	add    BYTE PTR [rax],al
   140008440:	cs rex.XB push r10
   140008443:	push   rsp
   140008444:	and    al,0x58
   140008446:	push   rax
   140008447:	pop    rdx
   140008448:	add    BYTE PTR [rax],al
   14000844a:	add    BYTE PTR [rax],al
   14000844c:	shl    BYTE PTR [rbx+0x0],1
   14000844f:	add    BYTE PTR [rax],cl
   140008451:	add    BYTE PTR [rax],al
   140008453:	add    BYTE PTR [rsi],ch
   140008455:	rex.XB push r10
   140008457:	push   rsp
   140008458:	and    al,0x58
   14000845a:	push   rsp
   14000845b:	add    BYTE PTR [r8],al
   14000845e:	add    BYTE PTR [rax],al
   140008460:	fsub   DWORD PTR [rbx+0x0]
   140008463:	add    BYTE PTR [rax],cl
   140008465:	add    BYTE PTR [rax],al
   140008467:	add    BYTE PTR [rsi],ch
   140008469:	rex.XB push r10
   14000846b:	push   rsp
   14000846c:	and    al,0x58
   14000846e:	push   rsp
   14000846f:	pop    rdx
   140008470:	add    BYTE PTR [rax],al
   140008472:	add    BYTE PTR [rax],al
   140008474:	loopne 0x1400084d9
   140008476:	add    BYTE PTR [rax],al
   140008478:	xor    al,0x1
   14000847a:	add    BYTE PTR [rax],al
   14000847c:	imul   sp,WORD PTR cs:[ebx+esi*2+0x24],0x78
   140008485:	add    BYTE PTR [rax],al
   140008487:	add    BYTE PTR [rax],ah
   140008489:	add    BYTE PTR gs:[rax],al
   14000848c:	and    BYTE PTR [rax],cl
   14000848e:	add    BYTE PTR [rax],al
   140008490:	cs jb  0x1400084f7
   140008493:	(bad)  
   140008494:	je     0x1400084f7
   140008496:	add    BYTE PTR [rax],al
   140008498:	rex ins DWORD PTR es:[rdi],dx
   14000849a:	add    BYTE PTR [rax],al
   14000849c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000849d:	adc    al,0x0
   14000849f:	add    BYTE PTR [rsi],ch
   1400084a1:	jb     0x140008507
   1400084a3:	(bad)  
   1400084a4:	je     0x140008507
   1400084a6:	and    al,0x72
   1400084a8:	add    BYTE PTR [rax],al
   1400084aa:	add    BYTE PTR [rax],al
   1400084ac:	call   0x150008532
   1400084b1:	add    BYTE PTR [rax],al
   1400084b3:	add    BYTE PTR [rsi],ch
   1400084b5:	jb     0x14000851b
   1400084b7:	(bad)  
   1400084b8:	je     0x14000851b
   1400084ba:	and    al,0x7a
   1400084bc:	rex.RB push r12
   1400084be:	push   rdi
   1400084bf:	xor    BYTE PTR [rax],al
   1400084c1:	add    BYTE PTR [rax],al
   1400084c3:	add    al,bh
   1400084c5:	add    DWORD PTR [rax],0x6c00
   1400084cb:	add    BYTE PTR [rsi],ch
   1400084cd:	jb     0x140008533
   1400084cf:	(bad)  
   1400084d0:	je     0x140008533
   1400084d2:	and    al,0x7a
   1400084d4:	rex.RB push r12
   1400084d6:	push   rdi
   1400084d7:	xor    DWORD PTR [rax],eax
   1400084d9:	add    BYTE PTR [rax],al
   1400084db:	add    BYTE PTR [rdx+rax*4+0x0],ah
   1400084df:	add    BYTE PTR [rax+rax*1+0x0],al
   1400084e3:	add    BYTE PTR [rsi],ch
   1400084e5:	jb     0x14000854b
   1400084e7:	(bad)  
   1400084e8:	je     0x14000854b
   1400084ea:	and    al,0x7a
   1400084ec:	rex.RB push r12
   1400084ee:	push   rdi
   1400084ef:	xor    al,BYTE PTR [rax]
   1400084f1:	add    BYTE PTR [rax],al
   1400084f3:	add    BYTE PTR [rax+0x1000082],ch
   1400084f9:	add    BYTE PTR [rax],al
   1400084fb:	add    BYTE PTR [rsi],ch
   1400084fd:	jb     0x140008563
   1400084ff:	(bad)  
   140008500:	je     0x140008563
   140008502:	and    al,0x7a
   140008504:	rex.RB push r12
   140008506:	push   rdi
   140008507:	cmp    DWORD PTR [rax],eax
   140008509:	add    BYTE PTR [rax],al
   14000850b:	add    BYTE PTR [rdx+rax*4+0x3f40000],ch
   140008512:	add    BYTE PTR [rax],al
   140008514:	cs jb  0x14000857b
   140008517:	(bad)  
   140008518:	je     0x14000857b
   14000851a:	and    al,0x7a
   14000851c:	jp     0x140008598
   14000851e:	fs (bad) 
   140008520:	add    BYTE PTR [eax],al
   140008523:	add    BYTE PTR [rax+0x8000086],ah
   140008529:	add    BYTE PTR [rax],al
   14000852b:	add    BYTE PTR [rsi],ch
   14000852d:	jb     0x1400085a3
   14000852f:	movsxd esp,DWORD PTR [rcx+rcx*2]
   140008532:	rex.B
   140008533:	add    BYTE PTR [r8],al
   140008536:	add    BYTE PTR [rax],al
   140008538:	test   al,0x86
   14000853a:	add    BYTE PTR [rax],al
   14000853c:	or     BYTE PTR [rax],al
   14000853e:	add    BYTE PTR [rax],al
   140008540:	cs jb  0x1400085b7
   140008543:	movsxd esp,DWORD PTR [rcx+rcx*2]
   140008546:	pop    rdx
   140008547:	pop    rdx
   140008548:	add    BYTE PTR [rax],al
   14000854a:	add    BYTE PTR [rax],al
   14000854c:	mov    al,0x86
   14000854e:	add    BYTE PTR [rax],al
   140008550:	or     BYTE PTR [rax],al
   140008552:	add    BYTE PTR [rax],al
   140008554:	cs jb  0x1400085cb
   140008557:	movsxd esp,DWORD PTR [rsp+rdx*2]
   14000855a:	rex.B
   14000855b:	add    BYTE PTR [r8],al
   14000855e:	add    BYTE PTR [rax],al
   140008560:	mov    eax,0x8000086
   140008565:	add    BYTE PTR [rax],al
   140008567:	add    BYTE PTR [rsi],ch
   140008569:	jb     0x1400085df
   14000856b:	movsxd esp,DWORD PTR [rsp+rdx*2]
   14000856e:	pop    rdx
   14000856f:	pop    rdx
   140008570:	add    BYTE PTR [rax],al
   140008572:	add    BYTE PTR [rax],al
   140008574:	rol    BYTE PTR [rsi+0x5b40000],0x0
   14000857b:	add    BYTE PTR [rsi],ch
   14000857d:	js     0x1400085e3
   14000857f:	(bad)  
   140008580:	je     0x1400085e3
   140008582:	add    BYTE PTR [rax],al
   140008584:	js     0x140008512
   140008586:	add    BYTE PTR [rax],al
   140008588:	in     al,dx
   140008589:	add    BYTE PTR [rax],al
   14000858b:	add    BYTE PTR [rsi],ch
   14000858d:	js     0x1400085f3
   14000858f:	(bad)  
   140008590:	je     0x1400085f3
   140008592:	and    al,0x78
   140008594:	add    BYTE PTR [rax],al
   140008596:	add    BYTE PTR [rax],al
   140008598:	push   0x800008d
   14000859d:	add    BYTE PTR [rax],al
   14000859f:	add    BYTE PTR [rbp+0x69],ch
   1400085a2:	outs   dx,BYTE PTR ds:[rsi]
   1400085a3:	push   r12
   1400085a5:	rex.WR and al,0x5f
   1400085a8:	pop    rdi
   1400085a9:	(bad)  
   1400085aa:	add    BYTE PTR [rax],al
   1400085ac:	jo     0x14000853b
   1400085ae:	add    BYTE PTR [rax],al
   1400085b0:	adc    BYTE PTR [rax],al
   1400085b2:	add    BYTE PTR [rax],al
   1400085b4:	ins    DWORD PTR es:[rdi],dx
   1400085b5:	imul   ebp,DWORD PTR [rsi+0x41],0x5f244c54
   1400085bc:	pop    rdi
   1400085bd:	data16 add BYTE PTR [rax],al
   1400085c0:	or     BYTE PTR [rbp+0x80000],0x0
   1400085c7:	add    BYTE PTR [rbp+0x69],ch
   1400085ca:	outs   dx,BYTE PTR ds:[rsi]
   1400085cb:	push   r12
   1400085cd:	rex.WR and al,0x5f
   1400085d0:	pop    rdi
   1400085d1:	ins    DWORD PTR es:[rdi],dx
   1400085d2:	add    BYTE PTR [rax],al
   1400085d4:	mov    BYTE PTR [rbp+0x80000],cl
   1400085da:	add    BYTE PTR [rax],al
   1400085dc:	ins    DWORD PTR es:[rdi],dx
   1400085dd:	imul   ebp,DWORD PTR [rsi+0x41],0x5f244c54
   1400085e4:	pop    rdi
   1400085e5:	jp     0x1400085e7
   1400085e7:	add    BYTE PTR [rax-0x6fffff73],dl
   1400085ed:	add    DWORD PTR [rax],eax
   1400085ef:	add    BYTE PTR [rsi],ch
   1400085f1:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x322461
   1400085f9:	add    BYTE PTR [rax],al
   1400085fb:	add    BYTE PTR [rax],ah
   1400085fd:	pop    QWORD PTR [rax]
   1400085ff:	add    BYTE PTR [rax+rax*1],dl
   140008602:	add    BYTE PTR [rax],al
   140008604:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   14000860d:	add    BYTE PTR [rax],al
   14000860f:	add    BYTE PTR [rax],bh
   140008611:	pop    QWORD PTR [rax]
   140008613:	add    BYTE PTR [rax+0x3],cl
   140008616:	add    BYTE PTR [rax],al
   140008618:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x342461
   140008621:	add    BYTE PTR [rax],al
   140008623:	add    BYTE PTR [rax-0x3bffff6e],al
   140008629:	or     DWORD PTR [rax],eax
   14000862b:	add    BYTE PTR [rsi],ch
   14000862d:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x362461
   140008635:	add    BYTE PTR [rax],al
   140008637:	add    BYTE PTR [rax],al
   140008639:	movabs al,ds:0x642e000000800000
   140008642:	(bad)  
   140008643:	je     0x1400086a6
   140008645:	add    BYTE PTR [rax],al
   140008647:	add    BYTE PTR [rax+0x50000a0],al
   14000864d:	sldt   WORD PTR [rax]
   140008650:	cs fs (bad) 
   140008653:	je     0x1400086b6
   140008655:	and    al,0x72
   140008657:	add    BYTE PTR [rax-0x17ffff51],dl
   14000865d:	(bad)  
   14000865e:	add    BYTE PTR [rax],al
   140008660:	cs (bad) 
   140008663:	jae    0x140008665
   140008665:	add    BYTE PTR [rax],al
   140008667:	add    BYTE PTR [rax],al
   140008669:	rol    BYTE PTR [rax],0x0
   14000866c:	add    al,0x5
   14000866e:	add    BYTE PTR [rax],al
   140008670:	cs jo  0x1400086d7
   140008673:	(bad)  
   140008674:	je     0x1400086d7
   140008676:	add    BYTE PTR [rax],al
   140008678:	add    al,dl
   14000867a:	add    BYTE PTR [rax],al
   14000867c:	pop    rax
   14000867d:	add    BYTE PTR [rax],al
   14000867f:	add    BYTE PTR [rsi],ch
   140008681:	jb     0x1400086f6
   140008683:	jb     0x1400086e8
   140008685:	and    al,0x30
   140008687:	xor    DWORD PTR [rax],eax
   140008689:	add    BYTE PTR [rax],al
   14000868b:	add    BYTE PTR [rax-0x30],ah
   14000868e:	add    BYTE PTR [rax],al
   140008690:	rol    BYTE PTR [rbx],0x0
   140008693:	add    BYTE PTR [rsi],ch
   140008695:	jb     0x14000870a
   140008697:	jb     0x1400086fc
   140008699:	and    al,0x30
   14000869b:	xor    al,BYTE PTR [rax]
	...
   1400086bd:	add    BYTE PTR [rax],al
   1400086bf:	add    BYTE PTR [rcx],bl
   1400086c1:	(bad)  
   1400086c2:	add    eax,0x2c340d00
   1400086c7:	add    BYTE PTR [rip+0x6002a01],cl        # 0x14600b0ce
   1400086cd:	(bad)  
   1400086ce:	add    BYTE PTR [rax],al
   1400086d0:	test   BYTE PTR [rax+0x0],dl
   1400086d3:	add    BYTE PTR [rax+0x1],al
   1400086d6:	add    BYTE PTR [rax],al
   1400086d8:	add    DWORD PTR [rsi],eax
   1400086da:	add    al,BYTE PTR [rax]
   1400086dc:	(bad)  
   1400086dd:	xor    al,BYTE PTR [rdx]
   1400086df:	xor    BYTE PTR [rcx],al
   1400086e1:	clts   
   1400086e3:	add    BYTE PTR [rdi],cl
   1400086e5:	fs (bad) 
   1400086e7:	add    BYTE PTR [rdi],cl
   1400086e9:	xor    al,0x6
   1400086eb:	add    BYTE PTR [rdi],cl
   1400086ed:	xor    cl,BYTE PTR [rbx]
   1400086ef:	jo     0x1400086f2
   1400086f1:	or     al,BYTE PTR [rax+rax*1]
   1400086f4:	or     dh,BYTE PTR [rsi+rax*1]
   1400086f7:	add    BYTE PTR [rdx],cl
   1400086f9:	xor    al,BYTE PTR [rsi]
   1400086fb:	jo     0x1400086fe
   1400086fd:	sbb    ecx,DWORD PTR [rdx]
   1400086ff:	add    BYTE PTR [rbx],bl
   140008701:	push   rsp
   140008702:	or     al,0x0
   140008704:	sbb    esi,DWORD PTR [rdx+rcx*1]
   140008707:	add    BYTE PTR [rbx],bl
   140008709:	xor    dl,BYTE PTR [rdi]
   14000870b:	loopne 0x140008722
   14000870d:	rcl    BYTE PTR [rbx],1
   14000870f:	rcl    BYTE PTR [rcx],0x70
   140008712:	adc    BYTE PTR [rax+0x1],ah
   140008715:	sbb    eax,0x741d000c
   14000871a:	ltr    WORD PTR [rip+0x1d000e64]        # 0x15d009585
   140008721:	push   rsp
   140008722:	or     eax,0xc341d00
   140008727:	add    BYTE PTR [rip+0x17f01972],bl        # 0x157f0a09f
   14000872d:	loopne 0x140008744
   14000872f:	rol    BYTE PTR [rcx],0x15
   140008732:	or     BYTE PTR [rax],al
   140008734:	adc    eax,0x15000a74
   140008739:	or     DWORD PTR fs:[rax],eax
   14000873c:	adc    eax,0x15000834
   140008741:	push   rdx
   140008742:	adc    eax,esp
   140008744:	add    DWORD PTR [rsi],eax
   140008746:	add    al,BYTE PTR [rax]
   140008748:	(bad)  
   140008749:	push   rdx
   14000874a:	add    dh,BYTE PTR [rax]
   14000874c:	sbb    DWORD PTR [rbx],esp
   14000874e:	(bad)  
   14000874f:	add    BYTE PTR [rip+0x15001374],dl        # 0x155009ac9
   140008755:	xor    al,0x12
   140008757:	add    BYTE PTR [rip+0xffffffff84500bf2],dl        # 0xc450934f
   14000875d:	push   rax
   14000875e:	add    BYTE PTR [rax],al
   140008760:	js     0x140008762
   140008762:	add    BYTE PTR [rax],al
   140008764:	add    DWORD PTR [rip+0x741d000c],ebx        # 0x1b41d8776
   14000876a:	or     eax,DWORD PTR [rax]
   14000876c:	sbb    eax,0x1d000a64
   140008771:	push   rsp
   140008772:	or     DWORD PTR [rax],eax
   140008774:	sbb    eax,0x1d000834
   140008779:	xor    bl,BYTE PTR [rcx]
   14000877b:	lock (bad) 
   14000877d:	loopne 0x140008794
   14000877f:	rol    BYTE PTR [rcx],0x4
   140008782:	add    DWORD PTR [rax],eax
   140008784:	add    al,0x42
   140008786:	add    BYTE PTR [rax],al
   140008788:	add    DWORD PTR [rip+0x74150008],edx        # 0x1b4158796
   14000878e:	or     BYTE PTR [rax],al
   140008790:	adc    eax,0x15000754
   140008795:	xor    al,0x6
   140008797:	add    BYTE PTR [rip+0x19e01132],dl        # 0x159e098cf
   14000879d:	and    BYTE PTR [rip+0x14621800],al        # 0x154629fa3
   1400087a3:	loopne 0x1400087b7
   1400087a5:	jo     0x1400087b8
   1400087a7:	(bad)  
   1400087a8:	adc    BYTE PTR [rax],dh
   1400087aa:	add    BYTE PTR [rax],al
   1400087ac:	(bad)  
   1400087ad:	push   rax
   1400087ae:	add    BYTE PTR [rax],al
   1400087b0:	js     0x14000881d
   1400087b2:	add    BYTE PTR [rax],al
   1400087b4:	(bad)  
   1400087b5:	(bad)  
   1400087b6:	(bad)  
   1400087b7:	inc    DWORD PTR [rax]
   1400087b9:	add    BYTE PTR [rax],al
   1400087bb:	add    bh,bh
   1400087bd:	(bad)  
   1400087be:	(bad)  
   1400087bf:	inc    DWORD PTR [rax]
   1400087c1:	add    BYTE PTR [rax],al
   1400087c3:	add    BYTE PTR [rcx],al
   1400087c5:	add    BYTE PTR [rax],al
   1400087c7:	add    BYTE PTR [rax],al
   1400087c9:	add    BYTE PTR [rax],al
   1400087cb:	add    BYTE PTR [rcx],al
	...
   1400087d9:	add    BYTE PTR [rax],al
   1400087db:	add    BYTE PTR [rbx],al
   1400087dd:	add    BYTE PTR [rax],al
   1400087df:	add    BYTE PTR [rcx],al
   1400087e1:	add    BYTE PTR [rax],al
   1400087e3:	add    ah,bh
   1400087e5:	xchg   DWORD PTR [rax],eax
   1400087e7:	add    BYTE PTR [rdx],al
   1400087e9:	add    BYTE PTR [rax],al
   1400087eb:	add    BYTE PTR [rdx],al
   1400087ed:	add    BYTE PTR [rax],al
   1400087ef:	add    BYTE PTR [rbx],al
   1400087f1:	add    BYTE PTR [rax],al
   1400087f3:	add    BYTE PTR [rcx],al
   1400087f5:	add    BYTE PTR [rax],al
   1400087f7:	add    BYTE PTR [rax],dl
   1400087f9:	mov    BYTE PTR [rax],al
   1400087fb:	add    BYTE PTR [rax+0x0],al
	...
   140008806:	add    BYTE PTR [rax],al
   140008808:	enter  0x51,0x0
   14000880c:	cmp    BYTE PTR [rax],al
   14000880e:	add    BYTE PTR [rax],al
   140008810:	add    BYTE PTR [rax],al
	...
   14000881b:	add    BYTE PTR [rip+0x38000052],cl        # 0x178008873
	...
   14000882d:	add    BYTE PTR [rax],al
   14000882f:	add    BYTE PTR [rsp-0x10000],bh
   140008836:	(bad)  
   140008837:	jmp    FWORD PTR [rbx]
   140008839:	and    eax,0x0
   14000883e:	add    BYTE PTR [rax],al
   140008840:	push   rcx
   140008841:	and    eax,0xffff0000
   140008846:	(bad)  
   140008847:	dec    eax
   140008849:	push   rcx
   14000884a:	add    BYTE PTR [rax],al
   14000884c:	add    BYTE PTR [rax],al
   14000884e:	add    BYTE PTR [rax],al
   140008850:	(bad)  
   140008851:	push   rcx
   140008852:	add    BYTE PTR [rax],al
   140008854:	add    DWORD PTR [rax],eax
   140008856:	add    BYTE PTR [rax],al
   140008858:	fst    QWORD PTR [rcx+0x0]
   14000885b:	add    BYTE PTR [rdx],al
   14000885d:	add    BYTE PTR [rax],al
   14000885f:	add    bh,bh
   140008861:	push   rcx
   140008862:	add    BYTE PTR [rax],al
   140008864:	add    BYTE PTR [rax],al
   140008866:	add    BYTE PTR [rax],al
   140008868:	sbb    dl,BYTE PTR [rdx+0x0]
   14000886b:	add    BYTE PTR [rbx],al
   14000886d:	add    BYTE PTR [rax],al
   14000886f:	add    BYTE PTR [rcx],bl
   140008871:	or     al,BYTE PTR [rdx]
   140008873:	add    BYTE PTR [rdx],cl
   140008875:	xor    al,BYTE PTR [rsi]
   140008877:	push   rax
   140008878:	(bad)  
   140008879:	push   rax
   14000887a:	add    BYTE PTR [rax],al
   14000887c:	js     0x1400088e9
   14000887e:	add    BYTE PTR [rax],al
   140008880:	add    DWORD PTR [rcx],ebx
   140008882:	or     al,BYTE PTR [rax]
   140008884:	sbb    esp,esp
   140008886:	or     eax,DWORD PTR [rax]
   140008888:	sbb    DWORD PTR [rdx+rcx*1+0x0],esi
   14000888c:	sbb    DWORD PTR [rcx+rcx*1+0x0],esp
   140008890:	sbb    DWORD PTR [rax+rcx*1],esi
   140008893:	add    BYTE PTR [rcx],bl
   140008895:	push   rdx
   140008896:	adc    eax,0xa1901f0
   14000889b:	add    BYTE PTR [rcx],bl
   14000889d:	je     0x1400088aa
   14000889f:	add    BYTE PTR [rcx],bl
   1400088a1:	or     al,BYTE PTR fs:[rax]
   1400088a4:	sbb    DWORD PTR [rcx+rcx*1+0x0],edx
   1400088a8:	sbb    DWORD PTR [rax+rcx*1],esi
   1400088ab:	add    BYTE PTR [rcx],bl
   1400088ad:	push   rdx
   1400088ae:	adc    eax,0x91a01e0
   1400088b3:	add    BYTE PTR [rdx],bl
   1400088b5:	(bad)  
   1400088b6:	(bad)  
   1400088b7:	lock adc al,0xe0
   1400088ba:	adc    dl,al
   1400088bc:	adc    al,al
   1400088be:	(bad)  
   1400088bf:	jo     0x1400088ce
   1400088c1:	(bad)  
   1400088c2:	or     al,0x50
   1400088c4:	or     esi,DWORD PTR [rax]
   1400088c6:	add    BYTE PTR [rax],al
   1400088c8:	add    DWORD PTR [rdx],edx
   1400088ca:	or     BYTE PTR [rax],al
   1400088cc:	adc    dl,BYTE PTR [rdx+rcx*1+0x0]
   1400088d0:	adc    dh,BYTE PTR [rax+rcx*1]
   1400088d3:	add    BYTE PTR [rdx],dl
   1400088d5:	xor    cl,BYTE PTR [rsi]
   1400088d7:	loopne 0x1400088e5
   1400088d9:	jo     0x1400088e6
   1400088db:	(bad)  
   1400088dc:	add    DWORD PTR [rip+0x74150008],edx        # 0x1b41588ea
   1400088e2:	or     BYTE PTR [rax],al
   1400088e4:	adc    eax,0x15000764
   1400088e9:	xor    al,0x6
   1400088eb:	add    BYTE PTR [rip+0x1e01132],dl        # 0x141e09a23
   1400088f1:	adc    al,0x8
   1400088f3:	add    BYTE PTR [rsp+riz*2],dl
   1400088f6:	or     BYTE PTR [rax],al
   1400088f8:	adc    al,0x54
   1400088fa:	(bad)  
   1400088fb:	add    BYTE PTR [rsp+rsi*1],dl
   1400088fe:	(bad)  
   1400088ff:	add    BYTE PTR [rdx+rsi*1],dl
   140008902:	adc    BYTE PTR [rax+0x19],dh
   140008905:	adc    eax,0x92060002
   14000890a:	add    dh,BYTE PTR [rax]
   14000890c:	test   BYTE PTR [rax+0x0],dl
   14000890f:	add    BYTE PTR [rax+0x0],al
   140008912:	add    BYTE PTR [rax],al
   140008914:	sbb    DWORD PTR [rbx],ebx
   140008916:	add    al,0x0
   140008918:	or     eax,0xd001034
   14000891d:	rol    BYTE PTR [rsi],cl
   14000891f:	push   rax
   140008920:	test   BYTE PTR [rax+0x0],dl
   140008923:	add    BYTE PTR [rax+0x0],ah
   140008926:	add    BYTE PTR [rax],al
   140008928:	sbb    DWORD PTR [rsi],esi
   14000892a:	or     eax,DWORD PTR [rax]
   14000892c:	sub    BYTE PTR [rsp+rsi*1+0x0],ah
   140008930:	and    al,0x34
   140008932:	xor    al,BYTE PTR [rax]
   140008934:	(bad)  
   140008935:	add    DWORD PTR [rax+rax*1],ebp
   140008938:	or     esi,eax
   14000893a:	or     eax,esp
   14000893c:	(bad)  
   14000893d:	rol    BYTE PTR [rip+0x500470],0x0        # 0x140508db4
   140008944:	adc    al,0x51
   140008946:	add    BYTE PTR [rax],al
   140008948:	sbb    BYTE PTR [rax+rax*1+0x0],ch
   14000894c:	pop    rdx
   14000894d:	add    DWORD PTR [rax],eax
   14000894f:	add    bh,bh
   140008951:	(bad)  
   140008952:	(bad)  
   140008953:	(bad)  
   140008954:	cmp    BYTE PTR [rdx+0x0],dl
   140008957:	add    BYTE PTR [rax],al
   140008959:	add    BYTE PTR [rax],al
   14000895b:	add    BYTE PTR [rdx+rdx*2+0x0],al
   14000895f:	add    BYTE PTR [rcx],al
   140008961:	add    BYTE PTR [rax],al
   140008963:	add    BYTE PTR [rax+0x52],dl
   140008966:	add    BYTE PTR [rax],al
   140008968:	add    al,BYTE PTR [rax]
   14000896a:	add    BYTE PTR [rax],al
   14000896c:	pop    rsp
   14000896d:	push   rdx
   14000896e:	add    BYTE PTR [rax],al
   140008970:	mov    WORD PTR [rax+rax*1],?
   140008973:	add    bh,bh
   140008975:	(bad)  
   140008976:	(bad)  
   140008977:	call   rbx
   140008979:	xor    al,0x0
   14000897b:	add    BYTE PTR [rax],al
   14000897d:	add    BYTE PTR [rax],al
   14000897f:	add    ah,cl
   140008981:	add    BYTE PTR ss:[rax],al
   140008984:	add    DWORD PTR [rax],eax
   140008986:	add    BYTE PTR [rax],al
   140008988:	and    DWORD PTR [rdi],esi
   14000898a:	add    BYTE PTR [rax],al
   14000898c:	add    al,BYTE PTR [rax]
   14000898e:	add    BYTE PTR [rax],al
   140008990:	rex (bad) 
   140008992:	add    BYTE PTR [rax],al
   140008994:	add    eax,DWORD PTR [rax]
   140008996:	add    BYTE PTR [rax],al
   140008998:	push   rcx
   140008999:	(bad)  
   14000899a:	add    BYTE PTR [rax],al
   14000899c:	add    al,BYTE PTR [rax]
   14000899e:	add    BYTE PTR [rax],al
   1400089a0:	outs   dx,BYTE PTR ds:[rsi]
   1400089a1:	(bad)  
   1400089a2:	add    BYTE PTR [rax],al
   1400089a4:	add    DWORD PTR [rax],eax
   1400089a6:	add    BYTE PTR [rax],al
   1400089a8:	rex.WRX cmp BYTE PTR [rax],r8b
   1400089ab:	add    BYTE PTR [rax],al
   1400089ad:	add    BYTE PTR [rax],al
   1400089af:	add    BYTE PTR [rbx+0x38],ch
   1400089b2:	add    BYTE PTR [rax],al
   1400089b4:	(bad)  
   1400089b5:	(bad)  
   1400089b6:	(bad)  
   1400089b7:	call   QWORD PTR [rcx]
   1400089b9:	sbb    eax,DWORD PTR [rsi]
   1400089bb:	add    BYTE PTR [rbx],bl
   1400089bd:	xor    al,0xd
   1400089bf:	add    BYTE PTR [rdi],cl
   1400089c1:	jb     0x1400089ce
   1400089c3:	loopne 0x1400089ce
   1400089c5:	jo     0x1400089cf
   1400089c7:	(bad)  
   1400089c8:	(bad)  
   1400089c9:	push   rax
   1400089ca:	add    BYTE PTR [rax],al
   1400089cc:	lock imul eax,DWORD PTR [rax],0x0
   1400089d0:	(bad)  
   1400089d1:	(bad)  
   1400089d2:	(bad)  
   1400089d3:	jmp    FWORD PTR [rsi+0x52]
   1400089d6:	add    BYTE PTR [rax],al
   1400089d8:	in     al,dx
   1400089d9:	cmp    BYTE PTR [rax],al
   1400089db:	add    bh,bh
   1400089dd:	(bad)  
   1400089de:	(bad)  
   1400089df:	call   QWORD PTR [rdx]
   1400089e1:	cmp    DWORD PTR [rax],eax
   1400089e3:	add    BYTE PTR [rax],al
   1400089e5:	add    BYTE PTR [rax],al
   1400089e7:	add    BYTE PTR [rax-0xffffc7],dl
   1400089ed:	(bad)  
   1400089ee:	(bad)  
   1400089ef:	inc    DWORD PTR [rcx]
   1400089f1:	clts   
   1400089f3:	add    BYTE PTR [rdi],cl
   1400089f5:	je     0x1400089fa
   1400089f7:	add    BYTE PTR [rdx],cl
   1400089f9:	add    al,BYTE PTR fs:[rax]
   1400089fc:	add    eax,0x1000134
   140008a01:	sbb    DWORD PTR [rdx],ecx
   140008a03:	add    BYTE PTR [rcx],bl
   140008a05:	je     0x140008a10
   140008a07:	add    BYTE PTR [rcx],bl
   140008a09:	or     BYTE PTR fs:[rax],al
   140008a0c:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   140008a10:	sbb    DWORD PTR [rsi+rax*1],esi
   140008a13:	add    BYTE PTR [rcx],bl
   140008a15:	xor    dl,BYTE PTR [rip+0x62219e0]        # 0x14622a3fb
   140008a1b:	add    BYTE PTR [rdx],bl
   140008a1d:	push   rdx
   140008a1e:	(bad)  
   140008a1f:	lock adc al,0xe0
   140008a22:	adc    dh,BYTE PTR [rax+0x11]
   140008a25:	(bad)  
   140008a26:	adc    BYTE PTR [rax],dh
   140008a28:	(bad)  
   140008a29:	push   rax
   140008a2a:	add    BYTE PTR [rax],al
   140008a2c:	enter  0x6b,0x0
	...
   140008a38:	add    eax,DWORD PTR [rax]
   140008a3a:	add    BYTE PTR [rax],al
   140008a3c:	add    DWORD PTR [rax],eax
   140008a3e:	add    BYTE PTR [rax],al
   140008a40:	pop    rax
   140008a41:	mov    al,BYTE PTR [rax]
   140008a43:	add    BYTE PTR [rdx],al
   140008a45:	add    BYTE PTR [rax],al
   140008a47:	add    BYTE PTR [rdx],al
   140008a49:	add    BYTE PTR [rax],al
   140008a4b:	add    BYTE PTR [rbx],al
   140008a4d:	add    BYTE PTR [rax],al
   140008a4f:	add    BYTE PTR [rcx],al
   140008a51:	add    BYTE PTR [rax],al
   140008a53:	add    BYTE PTR [rdx+rcx*4+0x0],ch
   140008a57:	add    BYTE PTR [rax+0x0],al
	...
   140008a62:	add    BYTE PTR [rax],al
   140008a64:	adc    BYTE PTR [rdx+0x0],0x0
   140008a68:	cmp    BYTE PTR [rax],al
   140008a6a:	add    BYTE PTR [rax],al
   140008a6c:	add    BYTE PTR [rax],al
	...
   140008a77:	add    cl,dl
   140008a79:	push   rdx
   140008a7a:	add    BYTE PTR [rax],al
   140008a7c:	cmp    BYTE PTR [rax],al
   140008a7e:	add    BYTE PTR [rax],al
   140008a80:	sub    BYTE PTR [rsi],bh
   140008a82:	add    BYTE PTR [rax],al
   140008a84:	(bad)  
   140008a85:	(bad)  
   140008a86:	(bad)  
   140008a87:	call   FWORD PTR [rsi+rdi*1+0x0]
   140008a8e:	add    BYTE PTR [rax],al
   140008a90:	sar    BYTE PTR [rsi],1
   140008a92:	add    BYTE PTR [rax],al
   140008a94:	(bad)  
   140008a95:	(bad)  
   140008a96:	(bad)  
   140008a97:	inc    DWORD PTR [rax+0x52]
   140008a9d:	add    BYTE PTR [rax],al
   140008a9f:	add    BYTE PTR [rbp+0x1000052],cl
   140008aa5:	add    BYTE PTR [rax],al
   140008aa7:	add    BYTE PTR [rbp+0x2000052],dl
   140008aad:	add    BYTE PTR [rax],al
   140008aaf:	add    bl,al
   140008ab1:	push   rdx
   140008ab2:	add    BYTE PTR [rax],al
   140008ab4:	add    BYTE PTR [rax],al
   140008ab6:	add    BYTE PTR [rax],al
   140008ab8:	ficom  WORD PTR [rdx+0x0]
   140008abb:	add    BYTE PTR [rbx],al
   140008abd:	add    BYTE PTR [rax],al
   140008abf:	add    BYTE PTR [rcx],bl
   140008ac1:	or     al,BYTE PTR [rdx]
   140008ac3:	add    BYTE PTR [rdx],cl
   140008ac5:	xor    al,BYTE PTR [rsi]
   140008ac7:	push   rax
   140008ac8:	(bad)  
   140008ac9:	push   rax
   140008aca:	add    BYTE PTR [rax],al
   140008acc:	enter  0x6b,0x0
   140008ad0:	sbb    DWORD PTR [rbx],edx
   140008ad2:	add    DWORD PTR [rax],eax
   140008ad4:	add    al,0xc2
   140008ad6:	add    BYTE PTR [rax],al
   140008ad8:	test   BYTE PTR [rax+0x0],dl
   140008adb:	add    BYTE PTR [rax+0x0],dl
   140008ade:	add    BYTE PTR [rax],al
   140008ae0:	sbb    DWORD PTR [rbx],esp
   140008ae2:	(bad)  
   140008ae3:	add    BYTE PTR [rbx],ah
   140008ae5:	xor    al,0xd
   140008ae7:	add    BYTE PTR [rdi],dl
   140008ae9:	push   rdx
   140008aea:	adc    esp,eax
   140008aec:	adc    DWORD PTR [rax+0x10],esi
   140008aef:	(bad)  
   140008af0:	(bad)  
   140008af1:	push   rax
   140008af2:	add    BYTE PTR [rax],al
   140008af4:	movabs al,ds:0xffffffff00006b
   140008afd:	add    BYTE PTR [rax],al
   140008aff:	add    bh,bh
   140008b01:	(bad)  
   140008b02:	(bad)  
   140008b03:	inc    DWORD PTR [rax]
	...
   140008b0d:	add    BYTE PTR [rax],al
   140008b0f:	add    BYTE PTR [rcx],al
   140008b11:	add    BYTE PTR [rax],al
   140008b13:	add    BYTE PTR [rcx],al
   140008b15:	add    BYTE PTR [rax],al
   140008b17:	add    BYTE PTR [rbx+rcx*4],bl
   140008b1a:	add    BYTE PTR [rax],al
   140008b1c:	add    BYTE PTR [rax],al
	...
   140008b27:	add    ah,bh
   140008b29:	push   rdx
   140008b2a:	add    BYTE PTR [rax],al
   140008b2c:	cmp    BYTE PTR [rax],al
   140008b2e:	add    BYTE PTR [rax],al
   140008b30:	mov    esp,0xff00003f
   140008b35:	(bad)  
   140008b36:	(bad)  
   140008b37:	jmp    QWORD PTR [rbx]
   140008b39:	add    BYTE PTR [rax],al
   140008b3c:	add    BYTE PTR [rax],al
   140008b3e:	add    BYTE PTR [rax],al
   140008b40:	rol    DWORD PTR [rax+0x0],1
   140008b43:	add    bh,bh
   140008b45:	(bad)  
   140008b46:	(bad)  
   140008b47:	(bad)  
   140008b48:	cld    
   140008b49:	push   rdx
   140008b4a:	add    BYTE PTR [rax],al
   140008b4c:	add    BYTE PTR [rax],al
   140008b4e:	add    BYTE PTR [rax],al
   140008b50:	or     DWORD PTR [rbx+0x0],edx
   140008b53:	add    BYTE PTR [rcx],al
   140008b55:	add    BYTE PTR [rax],al
   140008b57:	add    BYTE PTR [rcx],bl
   140008b59:	or     al,BYTE PTR [rdx]
   140008b5b:	add    BYTE PTR [rdx],cl
   140008b5d:	xor    al,BYTE PTR [rsi]
   140008b5f:	push   rax
   140008b60:	(bad)  
   140008b61:	push   rax
   140008b62:	add    BYTE PTR [rax],al
   140008b64:	movabs al,ds:0xf00060f0900006b
   140008b6d:	or     DWORD PTR fs:[rax],eax
   140008b70:	sysenter 
   140008b72:	or     BYTE PTR [rax],al
   140008b74:	rsqrtps xmm1,XMMWORD PTR [rbx]
   140008b77:	jo     0x140008bcd
   140008b79:	push   rax
   140008b7a:	add    BYTE PTR [rax],al
   140008b7c:	add    DWORD PTR [rax],eax
   140008b7e:	add    BYTE PTR [rax],al
   140008b80:	add    BYTE PTR [rdx+0x0],0x0
   140008b84:	xchg   edi,eax
   140008b85:	rex.XB add BYTE PTR [r8],al
   140008b88:	(bad)  
   140008b89:	push   rbx
   140008b8a:	add    BYTE PTR [rax],al
   140008b8c:	xchg   edi,eax
   140008b8d:	rex.XB add BYTE PTR [r8],al
   140008b90:	add    DWORD PTR [rsi],eax
   140008b92:	add    al,BYTE PTR [rax]
   140008b94:	(bad)  
   140008b95:	xor    al,BYTE PTR [rdx]
   140008b97:	push   rax
   140008b98:	add    DWORD PTR [rax],eax
   140008b9a:	add    BYTE PTR [rax],al
   140008b9c:	add    DWORD PTR [rcx],ecx
   140008b9e:	add    al,BYTE PTR [rax]
   140008ba0:	or     DWORD PTR [rdx+0x2],esi
   140008ba3:	push   rax
   140008ba4:	sbb    DWORD PTR [rip+0x62040001],ecx        # 0x1a2048bab
   140008baa:	add    BYTE PTR [rax],al
   140008bac:	(bad)  
   140008bad:	push   rax
   140008bae:	add    BYTE PTR [rax],al
   140008bb0:	xor    BYTE PTR [rbp+0x0],ah
	...
   140008bbb:	add    BYTE PTR [rcx],al
   140008bbd:	add    BYTE PTR [rax],al
   140008bbf:	add    BYTE PTR [rcx],al
   140008bc1:	add    BYTE PTR [rax],al
   140008bc3:	add    al,cl
   140008bc5:	mov    eax,DWORD PTR [rax]
   140008bc7:	add    BYTE PTR [rax+0x0],al
	...
   140008bd2:	add    BYTE PTR [rax],al
   140008bd4:	rex.WXB push r11
   140008bd6:	add    BYTE PTR [rax],al
   140008bd8:	cmp    BYTE PTR [rax],al
   140008bda:	add    BYTE PTR [rax],al
   140008bdc:	add    BYTE PTR [rax],al
   140008bde:	add    BYTE PTR [rax],al
   140008be0:	rex
   140008be1:	rex.RX add BYTE PTR [rax],r8b
   140008be4:	(bad)  
   140008be5:	(bad)  
   140008be6:	(bad)  
   140008be7:	dec    DWORD PTR [rbp+0x46]
   140008bea:	add    BYTE PTR [rax],al
   140008bec:	add    BYTE PTR [rax],al
   140008bee:	add    BYTE PTR [rax],al
   140008bf0:	push   rsp
   140008bf1:	rex.RX add BYTE PTR [rax],r8b
   140008bf4:	(bad)  
   140008bf5:	(bad)  
   140008bf6:	(bad)  
   140008bf7:	call   QWORD PTR [rsi+0x46]
   140008bfa:	add    BYTE PTR [rax],al
   140008bfc:	add    BYTE PTR [rax],al
   140008bfe:	add    BYTE PTR [rax],al
   140008c00:	sbb    DWORD PTR [rdx],ecx
   140008c02:	add    al,BYTE PTR [rax]
   140008c04:	or     dh,BYTE PTR [rdx]
   140008c06:	(bad)  
   140008c07:	push   rax
   140008c08:	(bad)  
   140008c09:	push   rax
   140008c0a:	add    BYTE PTR [rax],al
   140008c0c:	xor    BYTE PTR [rbp+0x0],ah
   140008c0f:	add    BYTE PTR [rcx],al
   140008c11:	or     eax,0x340d0004
   140008c16:	or     DWORD PTR [rax],eax
   140008c18:	or     eax,0x9500632
   140008c1d:	add    al,0x1
   140008c1f:	add    BYTE PTR [rdx+riz*1],al
   140008c22:	add    BYTE PTR [rax],al
   140008c24:	push   rsp
   140008c25:	push   rax
   140008c26:	add    BYTE PTR [rax],al
   140008c28:	add    DWORD PTR [rax],eax
   140008c2a:	add    BYTE PTR [rax],al
   140008c2c:	xchg   DWORD PTR [rdi+0x0],eax
   140008c2f:	add    BYTE PTR [rip+0x6c000048],dl        # 0x1ac008c7d
   140008c35:	push   rbx
   140008c36:	add    BYTE PTR [rax],al
   140008c38:	adc    eax,0x1000048
   140008c3d:	add    al,BYTE PTR [rcx]
   140008c3f:	add    BYTE PTR [rdx],al
   140008c41:	push   rax
   140008c42:	add    BYTE PTR [rax],al
   140008c44:	add    DWORD PTR [rip+0x34150005],edx        # 0x174158c4f
   140008c4a:	mov    edx,0xb8011500
   140008c4f:	add    BYTE PTR [rsi],al
   140008c51:	push   rax
   140008c52:	add    BYTE PTR [rax],al
   140008c54:	add    DWORD PTR [rcx],ecx
   140008c56:	add    DWORD PTR [rax],eax
   140008c58:	or     DWORD PTR [rdx+0x0],esp
   140008c5b:	add    BYTE PTR [rcx],al
   140008c5d:	or     BYTE PTR [rax+rax*1],al
   140008c60:	or     BYTE PTR [rdx+0x4],dh
   140008c63:	jo     0x140008c68
   140008c65:	(bad)  
   140008c66:	add    dh,BYTE PTR [rax]
   140008c68:	add    DWORD PTR [rcx+rax*1],eax
   140008c6b:	add    BYTE PTR [rdx+rax*4],al
   140008c6e:	add    BYTE PTR [rax],al
   140008c70:	add    DWORD PTR [rax],eax
	...
   140008c7a:	add    BYTE PTR [rax],al
   140008c7c:	cld    
   140008c7d:	rex.WRB add BYTE PTR [r8],r8b
   140008c80:	add    BYTE PTR [rax],al
   140008c82:	add    BYTE PTR [rax],al
   140008c84:	cwde   
   140008c85:	mov    WORD PTR [rax],es
	...
   140008c97:	add    BYTE PTR [rdx],al
   140008c99:	add    BYTE PTR [rax],al
   140008c9b:	add    BYTE PTR [rax-0x27ffff74],dh
   140008ca1:	mov    WORD PTR [rax],es
	...
   140008caf:	add    BYTE PTR [rax],dl
   140008cb1:	add    BYTE PTR [rax],al
   140008cb3:	add    BYTE PTR [rax+0xa0],ah
   140008cb9:	add    BYTE PTR [rax],al
   140008cbb:	add    bh,bh
   140008cbd:	(bad)  
   140008cbe:	(bad)  
   140008cbf:	inc    DWORD PTR [rax]
   140008cc1:	add    BYTE PTR [rax],al
   140008cc3:	add    BYTE PTR [rax],bl
   140008cc5:	add    BYTE PTR [rax],al
   140008cc7:	add    al,ah
   140008cc9:	rex.WR add BYTE PTR [rax],r8b
	...
   140008cdc:	enter  0xa0,0x0
   140008ce0:	add    BYTE PTR [rax],al
   140008ce2:	add    BYTE PTR [rax],al
   140008ce4:	(bad)  
   140008ce5:	(bad)  
   140008ce6:	(bad)  
   140008ce7:	inc    DWORD PTR [rax]
   140008ce9:	add    BYTE PTR [rax],al
   140008ceb:	add    BYTE PTR [rax],bl
   140008ced:	add    BYTE PTR [rax],al
   140008cef:	add    al,al
   140008cf1:	rex.WRB add BYTE PTR [r8],r8b
	...
   140008d04:	cld    
   140008d05:	rex.WRB add BYTE PTR [r8],r8b
   140008d08:	add    BYTE PTR [rax],al
   140008d0a:	add    BYTE PTR [rax],al
   140008d0c:	and    BYTE PTR [rbp+0x0],cl
	...
   140008d1e:	add    BYTE PTR [rax],al
   140008d20:	add    eax,DWORD PTR [rax]
   140008d22:	add    BYTE PTR [rax],al
   140008d24:	rex lea eax,[rax]
   140008d27:	add    BYTE PTR [rax-0x27ffff74],dh
   140008d2d:	mov    WORD PTR [rax],es
	...
   140008d43:	add    al,dh
   140008d45:	movabs al,ds:0xffff000000000000
   140008d4e:	(bad)  
   140008d4f:	inc    DWORD PTR [rax]
   140008d51:	add    BYTE PTR [rax],al
   140008d53:	add    BYTE PTR [rax],bl
   140008d55:	add    BYTE PTR [rax],al
   140008d57:	add    BYTE PTR [rax+0x4d],dl
	...
   140008d6e:	add    BYTE PTR [rax],al
   140008d70:	shl    BYTE PTR [rdi+0x0],1
   140008d73:	rex add DWORD PTR [rax],eax
   140008d76:	add    BYTE PTR [rax],al
   140008d78:	or     BYTE PTR [rbx+0x0],ch
   140008d7b:	rex add DWORD PTR [rax],eax
	...
   140008d8e:	add    BYTE PTR [rax],al
   140008d90:	xor    BYTE PTR [rdx+0x0],dl
   140008d96:	add    BYTE PTR [rax],al
   140008d98:	add    BYTE PTR [rax],al
   140008d9a:	add    BYTE PTR [rax],al
   140008d9c:	(bad)  
   140008d9d:	xchg   ebx,eax
   140008d9e:	add    BYTE PTR [rax],al
   140008da0:	clc    
   140008da1:	(bad)  
   140008da2:	add    BYTE PTR [rax],al
   140008da4:	mov    al,0x90
	...
   140008dae:	add    BYTE PTR [rax],al
   140008db0:	xchg   edx,eax
   140008db1:	xchg   ebx,eax
   140008db2:	add    BYTE PTR [rax],al
   140008db4:	js     0x140008e17
   140008db6:	add    BYTE PTR [rax],al
   140008db8:	mov    eax,0x91
   140008dbd:	add    BYTE PTR [rax],al
   140008dbf:	add    BYTE PTR [rax],al
   140008dc1:	add    BYTE PTR [rax],al
   140008dc3:	add    BYTE PTR [rdx-0x7fffff6d],dh
   140008dc9:	(bad)  
   140008dca:	add    BYTE PTR [rax],al
   140008dcc:	rcl    BYTE PTR [rax+0x0],0x0
   140008dd3:	add    BYTE PTR [rax],al
   140008dd5:	add    BYTE PTR [rax],al
   140008dd7:	add    BYTE PTR [rsi],bl
   140008dd9:	xchg   esi,eax
   140008dda:	add    BYTE PTR [rax],al
   140008ddc:	mov    BYTE PTR [rcx+0x0],ah
   140008ddf:	add    BYTE PTR [rax-0x6e],ah
	...
   140008dea:	add    BYTE PTR [rax],al
   140008dec:	(bad)  
   140008ded:	xchg   esi,eax
   140008dee:	add    BYTE PTR [rax],al
   140008df0:	sub    BYTE PTR [rbx+0x0],ah
   140008df3:	add    BYTE PTR [rax],bh
   140008df5:	pop    QWORD PTR [rax]
	...
   140008dff:	add    BYTE PTR [rsi+0x99],bl
   140008e05:	(bad)  
   140008e06:	add    BYTE PTR [rax],al
   140008e08:	loopne 0x140008d99
	...
   140008e12:	add    BYTE PTR [rax],al
   140008e14:	mov    esi,0xa8000099
   140008e19:	(bad)  
   140008e1a:	add    BYTE PTR [rax],al
   140008e1c:	push   rax
   140008e1d:	nop
	...
   140008e26:	add    BYTE PTR [rax],al
   140008e28:	call   0x158008ec6
   140008e2d:	(bad)  
   140008e2e:	add    BYTE PTR [rax],al
   140008e30:	loopne 0x140008dc3
	...
   140008e3a:	add    BYTE PTR [rax],al
   140008e3c:	or     bl,BYTE PTR [rdx+0x62a80000]
   140008e42:	add    BYTE PTR [rax],al
   140008e44:	movabs al,ds:0x90
   140008e4d:	add    BYTE PTR [rax],al
   140008e4f:	add    BYTE PTR [rdx],dh
   140008e51:	(bad)  
   140008e52:	add    BYTE PTR [rax],al
   140008e54:	push   0xffffffff98000061
   140008e59:	pop    QWORD PTR [rax]
	...
   140008e63:	add    BYTE PTR [rdx-0x66],bl
   140008e66:	add    BYTE PTR [rax],al
   140008e68:	(bad)  
   140008e69:	(bad)  
   140008e6a:	add    BYTE PTR [rax],al
   140008e6c:	nop
   140008e6d:	nop
	...
   140008e76:	add    BYTE PTR [rax],al
   140008e78:	test   BYTE PTR [rdx+0x61580000],bl
   140008e7e:	add    BYTE PTR [rax],al
   140008e80:	ror    BYTE PTR [rdi+0x0],0x0
   140008e87:	add    BYTE PTR [rax],al
   140008e89:	add    BYTE PTR [rax],al
   140008e8b:	add    BYTE PTR [rdx+rbx*4+0x60880000],ah
   140008e92:	add    BYTE PTR [rax],al
   140008e94:	rex xchg eax,eax
	...
   140008e9e:	add    BYTE PTR [rax],al
   140008ea0:	(bad)  
   140008ea1:	(bad)  
   140008ea2:	add    BYTE PTR [rax],al
   140008ea4:	or     BYTE PTR [rcx+0x0],ah
   140008ea7:	add    BYTE PTR [rax],dl
   140008ea9:	nop
	...
   140008eb2:	add    BYTE PTR [rax],al
   140008eb4:	(bad)  
   140008eb5:	(bad)  
   140008eb6:	add    BYTE PTR [rax],al
   140008eb8:	fsub   DWORD PTR [rax+0x0]
   140008ebb:	add    BYTE PTR [rax+0x90],al
   140008ec1:	add    BYTE PTR [rax],al
   140008ec3:	add    BYTE PTR [rax],al
   140008ec5:	add    BYTE PTR [rax],al
   140008ec7:	add    BYTE PTR [rbx+rbx*4],dl
   140008eca:	add    BYTE PTR [rax],al
   140008ecc:	rex.W (bad) 
   140008ece:	add    BYTE PTR [rax],al
   140008ed0:	ror    BYTE PTR [rdi+0x0],1
   140008ed6:	add    BYTE PTR [rax],al
   140008ed8:	add    BYTE PTR [rax],al
   140008eda:	add    BYTE PTR [rax],al
   140008edc:	cmp    BYTE PTR [rbx+0x60980000],bl
   140008ee2:	add    BYTE PTR [rax],al
   140008ee4:	mov    BYTE PTR [rdi+0x0],cl
   140008eea:	add    BYTE PTR [rax],al
   140008eec:	add    BYTE PTR [rax],al
   140008eee:	add    BYTE PTR [rax],al
   140008ef0:	(bad)  
   140008ef1:	fwait
   140008ef2:	add    BYTE PTR [rax],al
   140008ef4:	push   rax
   140008ef5:	(bad)  
   140008ef6:	add    BYTE PTR [rax],al
   140008ef8:	adc    BYTE PTR [rdx+0x0],dl
   140008efe:	add    BYTE PTR [rax],al
   140008f00:	add    BYTE PTR [rax],al
   140008f02:	add    BYTE PTR [rax],al
   140008f04:	movabs al,ds:0x20000062d800009b
   140008f0d:	xchg   edx,eax
	...
   140008f16:	add    BYTE PTR [rax],al
   140008f18:	rcr    BYTE PTR [rbx+0x62e80000],cl
	...
   140008f36:	add    BYTE PTR [rax],al
   140008f38:	neg    BYTE PTR [rbx+0x0]
   140008f3e:	add    BYTE PTR [rax],al
   140008f40:	xor    BYTE PTR [rax+0x0],bl
   140008f46:	add    BYTE PTR [rax],al
   140008f48:	mov    WORD PTR [rsi+0x0],ss
   140008f4e:	add    BYTE PTR [rax],al
   140008f50:	jle    0x140008eea
   140008f52:	add    BYTE PTR [rax],al
   140008f54:	add    BYTE PTR [rax],al
   140008f56:	add    BYTE PTR [rax],al
   140008f58:	(bad)  
   140008f59:	xchg   esi,eax
   140008f5a:	add    BYTE PTR [rax],al
   140008f5c:	add    BYTE PTR [rax],al
   140008f5e:	add    BYTE PTR [rax],al
   140008f60:	pop    rax
   140008f61:	cwde   
   140008f62:	add    BYTE PTR [rax],al
   140008f64:	add    BYTE PTR [rax],al
   140008f66:	add    BYTE PTR [rax],al
   140008f68:	rex.X cwde 
   140008f6a:	add    BYTE PTR [rax],al
   140008f6c:	add    BYTE PTR [rax],al
   140008f6e:	add    BYTE PTR [rax],al
   140008f70:	xchg   rdi,rax
   140008f72:	add    BYTE PTR [rax],al
   140008f74:	add    BYTE PTR [rax],al
   140008f76:	add    BYTE PTR [rax],al
   140008f78:	rcl    BYTE PTR [rdi+0x0],1
	...
   140008f86:	add    BYTE PTR [rax],al
   140008f88:	or     al,0x99
	...
   140008f96:	add    BYTE PTR [rax],al
   140008f98:	scas   al,BYTE PTR es:[rdi]
   140008f99:	xchg   edi,eax
   140008f9a:	add    BYTE PTR [rax],al
   140008f9c:	add    BYTE PTR [rax],al
   140008f9e:	add    BYTE PTR [rax],al
   140008fa0:	pushf  
   140008fa1:	xchg   edi,eax
   140008fa2:	add    BYTE PTR [rax],al
   140008fa4:	add    BYTE PTR [rax],al
   140008fa6:	add    BYTE PTR [rax],al
   140008fa8:	cmp    al,0x99
   140008faa:	add    BYTE PTR [rax],al
   140008fac:	add    BYTE PTR [rax],al
   140008fae:	add    BYTE PTR [rax],al
   140008fb0:	and    BYTE PTR [rcx+0x0],bl
	...
   140008fbe:	add    BYTE PTR [rax],al
   140008fc0:	jo     0x140008f5a
	...
   140008fce:	add    BYTE PTR [rax],al
   140008fd0:	neg    BYTE PTR [rax+0x0]
	...
   140008fde:	add    BYTE PTR [rax],al
   140008fe0:	sahf   
   140008fe1:	xchg   esi,eax
   140008fe2:	add    BYTE PTR [rax],al
   140008fe4:	add    BYTE PTR [rax],al
   140008fe6:	add    BYTE PTR [rax],al
   140008fe8:	mov    esi,0x97
   140008fed:	add    BYTE PTR [rax],al
   140008fef:	add    BYTE PTR [rdx],bl
   140008ff1:	xchg   edi,eax
   140008ff2:	add    BYTE PTR [rax],al
   140008ff4:	add    BYTE PTR [rax],al
   140008ff6:	add    BYTE PTR [rax],al
   140008ff8:	mov    al,0x96
   140008ffa:	add    BYTE PTR [rax],al
   140008ffc:	add    BYTE PTR [rax],al
   140008ffe:	add    BYTE PTR [rax],al
   140009000:	or     bl,BYTE PTR [rax+0x0]
	...
   14000900e:	add    BYTE PTR [rax],al
   140009010:	pop    rdx
   140009011:	cdq    
   140009012:	add    BYTE PTR [rax],al
   140009014:	add    BYTE PTR [rax],al
   140009016:	add    BYTE PTR [rax],al
   140009018:	jbe    0x140008fb3
   14000901a:	add    BYTE PTR [rax],al
   14000901c:	add    BYTE PTR [rax],al
   14000901e:	add    BYTE PTR [rax],al
   140009020:	mov    al,0x98
   140009022:	add    BYTE PTR [rax],al
   140009024:	add    BYTE PTR [rax],al
   140009026:	add    BYTE PTR [rax],al
   140009028:	(bad)  
   140009029:	cwde   
   14000902a:	add    BYTE PTR [rax],al
   14000902c:	add    BYTE PTR [rax],al
   14000902e:	add    BYTE PTR [rax],al
   140009030:	mov    bl,BYTE PTR [rcx+0x0]
	...
   14000903e:	add    BYTE PTR [rax],al
   140009040:	xchg   esi,eax
   140009041:	cwde   
	...
   14000904e:	add    BYTE PTR [rax],al
   140009050:	ficom  WORD PTR [rsi+0x0]
   140009056:	add    BYTE PTR [rax],al
   140009058:	(bad)  
   140009059:	xchg   edi,eax
   14000905a:	add    BYTE PTR [rax],al
   14000905c:	add    BYTE PTR [rax],al
   14000905e:	add    BYTE PTR [rax],al
   140009060:	hlt    
   140009061:	xchg   esi,eax
   140009062:	add    BYTE PTR [rax],al
   140009064:	add    BYTE PTR [rax],al
   140009066:	add    BYTE PTR [rax],al
   140009068:	add    BYTE PTR [rdi+0x0],dl
   14000906e:	add    BYTE PTR [rax],al
   140009070:	cs xchg edi,eax
	...
   14000907e:	add    BYTE PTR [rax],al
   140009080:	fcomp  QWORD PTR [rax+0x0]
	...
   14000908e:	add    BYTE PTR [rax],al
   140009090:	cli    
   140009091:	xchg   edi,eax
	...
   14000909e:	add    BYTE PTR [rax],al
   1400090a0:	jb     0x140009039
	...
   1400090ae:	add    BYTE PTR [rax],al
   1400090b0:	sub    al,0x93
	...
   1400090be:	add    BYTE PTR [rax],al
   1400090c0:	xchg   rsp,rax
   1400090c2:	add    BYTE PTR [rax],al
   1400090c4:	add    BYTE PTR [rax],al
   1400090c6:	add    BYTE PTR [rax],al
   1400090c8:	pop    rax
   1400090c9:	xchg   esp,eax
   1400090ca:	add    BYTE PTR [rax],al
   1400090cc:	add    BYTE PTR [rax],al
   1400090ce:	add    BYTE PTR [rax],al
   1400090d0:	fs xchg esp,eax
   1400090d2:	add    BYTE PTR [rax],al
   1400090d4:	add    BYTE PTR [rax],al
   1400090d6:	add    BYTE PTR [rax],al
   1400090d8:	jle    0x14000906e
   1400090da:	add    BYTE PTR [rax],al
   1400090dc:	add    BYTE PTR [rax],al
   1400090de:	add    BYTE PTR [rax],al
   1400090e0:	(bad)  
   1400090e1:	xchg   esp,eax
   1400090e2:	add    BYTE PTR [rax],al
   1400090e4:	add    BYTE PTR [rax],al
   1400090e6:	add    BYTE PTR [rax],al
   1400090e8:	lods   al,BYTE PTR ds:[rsi]
   1400090e9:	xchg   esp,eax
   1400090ea:	add    BYTE PTR [rax],al
   1400090ec:	add    BYTE PTR [rax],al
   1400090ee:	add    BYTE PTR [rax],al
   1400090f0:	mov    eax,0x94
   1400090f5:	add    BYTE PTR [rax],al
   1400090f7:	add    dh,bl
   1400090f9:	xchg   esp,eax
   1400090fa:	add    BYTE PTR [rax],al
   1400090fc:	add    BYTE PTR [rax],al
   1400090fe:	add    BYTE PTR [rax],al
   140009100:	add    dl,BYTE PTR [rbp+0x0]
   140009106:	add    BYTE PTR [rax],al
   140009108:	and    BYTE PTR [rbp+0x0],dl
   14000910e:	add    BYTE PTR [rax],al
   140009110:	xor    BYTE PTR [rbp+0x0],dl
   140009116:	add    BYTE PTR [rax],al
   140009118:	xchg   bp,ax
   14000911a:	add    BYTE PTR [rax],al
   14000911c:	add    BYTE PTR [rax],al
   14000911e:	add    BYTE PTR [rax],al
   140009120:	jp     0x1400090b7
   140009122:	add    BYTE PTR [rax],al
   140009124:	add    BYTE PTR [rax],al
   140009126:	add    BYTE PTR [rax],al
   140009128:	mov    dl,BYTE PTR [rbp+0x0]
   14000912e:	add    BYTE PTR [rax],al
   140009130:	cmp    bl,BYTE PTR [rax+rax*1+0x0]
   140009137:	add    BYTE PTR [rsi+0x95],bl
   14000913d:	add    BYTE PTR [rax],al
   14000913f:	add    BYTE PTR [rax+0x95],ch
   140009145:	add    BYTE PTR [rax],al
   140009147:	add    BYTE PTR [rdx+0x95],dh
   14000914d:	add    BYTE PTR [rax],al
   14000914f:	add    BYTE PTR [rsi+0x95],bh
   140009155:	add    BYTE PTR [rax],al
   140009157:	add    dl,cl
   140009159:	xchg   ebp,eax
   14000915a:	add    BYTE PTR [rax],al
   14000915c:	add    BYTE PTR [rax],al
   14000915e:	add    BYTE PTR [rax],al
   140009160:	ficom  DWORD PTR [rbp+0x0]
   140009166:	add    BYTE PTR [rax],al
   140009168:	repnz xchg ebp,eax
   14000916a:	add    BYTE PTR [rax],al
   14000916c:	add    BYTE PTR [rax],al
   14000916e:	add    BYTE PTR [rax],al
   140009170:	or     BYTE PTR [rsi+0x0],dl
   140009176:	add    BYTE PTR [rax],al
   140009178:	(bad)  
   140009179:	xchg   ebx,eax
   14000917a:	add    BYTE PTR [rax],al
   14000917c:	add    BYTE PTR [rax],al
   14000917e:	add    BYTE PTR [rax],al
   140009180:	out    dx,al
   140009181:	xchg   ebx,eax
   140009182:	add    BYTE PTR [rax],al
   140009184:	add    BYTE PTR [rax],al
   140009186:	add    BYTE PTR [rax],al
   140009188:	ficom  WORD PTR [rbx+0x0]
   14000918e:	add    BYTE PTR [rax],al
   140009190:	sub    dl,BYTE PTR [rax+rax*1+0x0]
   140009197:	add    ah,dl
   140009199:	xchg   ebx,eax
   14000919a:	add    BYTE PTR [rax],al
   14000919c:	add    BYTE PTR [rax],al
   14000919e:	add    BYTE PTR [rax],al
   1400091a0:	adc    BYTE PTR [rax+rax*1+0x0],dl
   1400091a7:	add    BYTE PTR [rax-0x6b],dl
	...
   1400091b6:	add    BYTE PTR [rax],al
   1400091b8:	rex xchg ebx,eax
   1400091ba:	add    BYTE PTR [rax],al
   1400091bc:	add    BYTE PTR [rax],al
   1400091be:	add    BYTE PTR [rax],al
   1400091c0:	fs xchg ebx,eax
   1400091c2:	add    BYTE PTR [rax],al
   1400091c4:	add    BYTE PTR [rax],al
   1400091c6:	add    BYTE PTR [rax],al
   1400091c8:	rex.WR xchg rbx,rax
   1400091ca:	add    BYTE PTR [rax],al
   1400091cc:	add    BYTE PTR [rax],al
   1400091ce:	add    BYTE PTR [rax],al
   1400091d0:	pop    rdx
   1400091d1:	xchg   ebx,eax
	...
   1400091de:	add    BYTE PTR [rax],al
   1400091e0:	and    BYTE PTR [rax+rax*1+0x0],bl
   1400091e7:	add    BYTE PTR [rax-0x69],ah
   1400091ea:	add    BYTE PTR [rax],al
   1400091ec:	add    BYTE PTR [rax],al
   1400091ee:	add    BYTE PTR [rax],al
   1400091f0:	xchg   BYTE PTR [rdi+0x0],dl
   1400091f6:	add    BYTE PTR [rax],al
   1400091f8:	or     bl,BYTE PTR [rax+rax*1+0x0]
   1400091ff:	add    BYTE PTR [rax],ah
   140009201:	cwde   
	...
   14000920e:	add    BYTE PTR [rax],al
   140009210:	(bad)  
   140009211:	fwait
	...
   14000921e:	add    BYTE PTR [rax],al
   140009220:	rcr    BYTE PTR [rbx+0x0],0x0
	...
   14000922f:	add    al,al
   140009231:	xchg   edx,eax
   140009232:	add    BYTE PTR [rax],al
   140009234:	add    BYTE PTR [rax],al
   140009236:	add    BYTE PTR [rax],al
   140009238:	adc    BYTE PTR [rdx+0x0],0x0
   14000923f:	add    BYTE PTR [rax+0x92],ah
   140009245:	add    BYTE PTR [rax],al
   140009247:	add    dl,bl
   140009249:	xchg   edx,eax
   14000924a:	add    BYTE PTR [rax],al
   14000924c:	add    BYTE PTR [rax],al
   14000924e:	add    BYTE PTR [rax],al
   140009250:	cld    
   140009251:	xchg   edx,eax
	...
   14000925e:	add    BYTE PTR [rax],al
   140009260:	outs   dx,BYTE PTR ds:[rsi]
   140009261:	xchg   esi,eax
   140009262:	add    BYTE PTR [rax],al
   140009264:	add    BYTE PTR [rax],al
   140009266:	add    BYTE PTR [rax],al
   140009268:	rex xchg esi,eax
   14000926a:	add    BYTE PTR [rax],al
   14000926c:	add    BYTE PTR [rax],al
   14000926e:	add    BYTE PTR [rax],al
   140009270:	push   rsp
   140009271:	xchg   esi,eax
	...
   14000927e:	add    BYTE PTR [rax],al
   140009280:	mov    dl,0x2
   140009282:	(bad)  
   140009283:	pop    rdi
   140009284:	push   rdi
   140009285:	imul   ebp,DWORD PTR [rsi+0x65],0x726f7272
   14000928c:	pop    rdi
   14000928d:	ins    DWORD PTR es:[rdi],dx
   14000928e:	(bad)  
   14000928f:	jo     0x1400092d1
   140009291:	jae    0x140009307
   140009293:	fs rex
   140009295:	rex pop rcx
   140009297:	push   r8
   140009299:	rex.RB
   14000929a:	rex.X
   14000929b:	rex.R
   14000929c:	rex.W
   14000929d:	rex pop rdx
   14000929f:	add    BYTE PTR [rbp+0x535f3f02],bl
   1400092a5:	jns    0x14000931a
   1400092a7:	gs jb  0x14000931c
   1400092aa:	outs   dx,DWORD PTR ds:[rsi]
   1400092ab:	jb     0x14000930c
   1400092ad:	ins    DWORD PTR es:[rdi],dx
   1400092ae:	(bad)  
   1400092af:	jo     0x1400092f1
   1400092b1:	jae    0x140009327
   1400092b3:	fs rex
   1400092b5:	rex pop rcx
   1400092b7:	push   r8
   1400092b9:	rex.RB
   1400092ba:	rex.X
   1400092bb:	rex.R
   1400092bc:	rex.W
   1400092bd:	rex pop rdx
   1400092bf:	add    BYTE PTR [rsi+0x585f3f02],dh
   1400092c5:	(bad)
   1400092ca:	ins    BYTE PTR es:[rdi],dx
   1400092cb:	ins    BYTE PTR es:[rdi],dx
   1400092cc:	outs   dx,DWORD PTR ds:[rsi]
   1400092cd:	movsxd eax,DWORD PTR [rax+0x73]
   1400092d0:	je     0x140009336
   1400092d2:	rex
   1400092d3:	rex pop rcx
   1400092d5:	pop    r8
   1400092d7:	pop    rax
   1400092d8:	pop    rdx
   1400092d9:	add    BYTE PTR [rdx+0x585f3f02],bh
   1400092df:	outs   dx,DWORD PTR ds:[rsi]
   1400092e0:	jne    0x140009356
   1400092e2:	pop    rdi
   1400092e3:	outs   dx,DWORD PTR ds:[rsi]
   1400092e4:	pop    di
   1400092e6:	jb     0x140009349
   1400092e8:	outs   dx,BYTE PTR ds:[rsi]
   1400092e9:	addr32 gs rex jae 0x140009362
   1400092ee:	fs rex
   1400092f0:	rex pop rcx
   1400092f2:	pop    r8
   1400092f4:	push   rax
   1400092f5:	rex.RB
   1400092f6:	rex.X
   1400092f7:	rex.R
   1400092f8:	rex pop rdx
   1400092fa:	add    BYTE PTR [rax],al
   1400092fc:	mov    ecx,0x585f3f02
   140009301:	ins    BYTE PTR es:[rdi],dx
   140009302:	outs   dx,BYTE PTR gs:[rsi]
   140009304:	addr32 je 0x14000936f
   140009307:	pop    rdi
   140009308:	gs jb  0x14000937d
   14000930b:	outs   dx,DWORD PTR ds:[rsi]
   14000930c:	jb     0x14000934e
   14000930e:	jae    0x140009384
   140009310:	fs rex
   140009312:	rex pop rcx
   140009314:	pop    r8
   140009316:	push   rax
   140009317:	rex.RB
   140009318:	rex.X
   140009319:	rex.R
   14000931a:	rex pop rdx
   14000931c:	add    BYTE PTR [rax],al
   14000931e:	ins    DWORD PTR es:[rdi],dx
   14000931f:	jae    0x140009397
   140009321:	movsxd esi,DWORD PTR [rax+0x5f]
   140009324:	ja     0x14000938f
   140009326:	outs   dx,BYTE PTR ds:[rsi]
   140009327:	cs fs ins BYTE PTR es:[rdi],dx
   14000932a:	ins    BYTE PTR es:[rdi],dx
   14000932b:	add    BYTE PTR [rcx],cl
   14000932d:	add    BYTE PTR [rdi+0x5f],bl
   140009330:	jae    0x140009397
   140009332:	je     0x1400093a9
   140009334:	jae    0x14000939b
   140009336:	jb     0x1400093a5
   140009338:	(bad)  
   140009339:	je     0x1400093a3
   14000933b:	gs jb  0x1400093b0
   14000933e:	add    BYTE PTR [rax],al
   140009340:	add    BYTE PTR ss:[rdi+0x69],bl
   140009344:	outs   dx,BYTE PTR ds:[rsi]
   140009345:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x37006d72
   14000934d:	add    BYTE PTR [rdi+0x69],bl
   140009350:	outs   dx,BYTE PTR ds:[rsi]
   140009351:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x655f6d72
   140009359:	add    BYTE PTR [rip+0x5f635f00],dl        # 0x19f63f25f
   14000935f:	gs js  0x1400093cb
   140009362:	je     0x140009364
   140009364:	cmp    eax,0x65725f00
   140009369:	imul   esi,DWORD PTR [ebx+0x74],0x745f7265
   140009371:	push   0x64616572
   140009376:	pop    rdi
   140009377:	ins    BYTE PTR es:[rdi],dx
   140009378:	outs   dx,DWORD PTR ds:[rsi]
   140009379:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000937c:	pop    rdi
   14000937d:	gs js  0x1400093e5
   140009380:	pop    rdi
   140009381:	(bad)  
   140009382:	je     0x1400093e9
   140009384:	js     0x1400093ef
   140009386:	je     0x1400093e7
   140009388:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000938b:	ins    BYTE PTR es:[rdi],dx
   14000938c:	(bad)  
   14000938e:	movsxd ebp,DWORD PTR [rbx+0x0]
   140009391:	add    BYTE PTR [rcx+0x70],ah
   140009394:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e070b
   14000939e:	jb     0x140009414
   1400093a0:	sub    eax,0x6874616d
   1400093a5:	sub    eax,0x312d316c
   1400093aa:	sub    eax,0x6c642e30
   1400093af:	ins    BYTE PTR es:[rdi],dx
   1400093b0:	add    BYTE PTR [rax],al
   1400093b2:	(bad)  
   1400093b3:	jo     0x14000941e
   1400093b5:	sub    eax,0x772d736d
   1400093ba:	imul   ebp,DWORD PTR [rsi+0x2d],0x2d747263
   1400093c1:	jb     0x140009438
   1400093c3:	outs   dx,BYTE PTR ds:[rsi]
   1400093c4:	je     0x14000942f
   1400093c6:	ins    DWORD PTR es:[rdi],dx
   1400093c7:	gs sub eax,0x312d316c
   1400093cd:	sub    eax,0x6c642e30
   1400093d2:	ins    BYTE PTR es:[rdi],dx
   1400093d3:	add    BYTE PTR [rdi+0x4],bl
   1400093d6:	ins    DWORD PTR es:[rdi],dx
   1400093d7:	gs ins DWORD PTR es:[rdi],dx
   1400093d9:	ins    DWORD PTR es:[rdi],dx
   1400093da:	outs   dx,DWORD PTR ds:[rsi]
   1400093db:	jbe    0x140009442
   1400093dd:	add    BYTE PTR [rbx+0x0],cl
   1400093e0:	pop    rdi
   1400093e1:	outs   dx,DWORD PTR ds:[rsi]
   1400093e2:	pop    rdi
   1400093e3:	pop    rdi
   1400093e4:	pop    rdi
   1400093e5:	jo     0x140009446
   1400093e7:	pop    rdi
   1400093e8:	pop    rdi
   1400093e9:	(bad)  
   1400093ea:	jb     0x140009453
   1400093ec:	movsxd eax,DWORD PTR [rax]
   1400093ee:	rex.WR add BYTE PTR [rdi+0x6f],r11b
   1400093f2:	pop    rdi
   1400093f3:	pop    rdi
   1400093f4:	pop    rdi
   1400093f5:	jo     0x140009456
   1400093f7:	pop    rdi
   1400093f8:	pop    rdi
   1400093f9:	(bad)  
   1400093fa:	jb     0x140009463
   1400093fc:	jbe    0x1400093fe
   1400093fe:	rex.WRXB add BYTE PTR [r15+0x6f],r11b
   140009402:	pop    rdi
   140009403:	pop    rdi
   140009404:	pop    rdi
   140009405:	jo     0x140009466
   140009407:	pop    rdi
   140009408:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000940b:	ins    DWORD PTR es:[rdi],dx
   14000940c:	outs   dx,DWORD PTR ds:[rsi]
   14000940d:	fs add BYTE PTR gs:[rdx+0x0],bl
   140009412:	pop    rdi
   140009413:	outs   dx,DWORD PTR ds:[rsi]
   140009414:	pop    rdi
   140009415:	pop    rdi
   140009416:	pop    rdi
   140009417:	jae    0x14000948d
   140009419:	fs pop rdi
   14000941b:	gs js  0x140009481
   14000941e:	gs jo  0x140009495
   140009421:	imul   ebp,DWORD PTR [rdi+0x6e],0x706f635f
   140009428:	jns    0x14000942a
   14000942a:	pop    rbx
   14000942b:	add    BYTE PTR [rdi+0x6f],bl
   14000942e:	pop    rdi
   14000942f:	pop    rdi
   140009430:	pop    rdi
   140009431:	jae    0x1400094a7
   140009433:	fs pop rdi
   140009435:	gs js  0x14000949b
   140009438:	gs jo  0x1400094af
   14000943b:	imul   ebp,DWORD PTR [rdi+0x6e],0x7365645f
   140009442:	je     0x1400094b6
   140009444:	outs   dx,DWORD PTR ds:[rsi]
   140009445:	jns    0x140009447
   140009447:	add    BYTE PTR [rbp+0x5f6f5f00],cl
   14000944d:	pop    rdi
   14000944e:	movsxd esp,DWORD PTR [rcx+0x6c]
   140009451:	ins    BYTE PTR es:[rdi],dx
   140009452:	outs   dx,BYTE PTR ds:[rsi]
   140009453:	gs ja  0x1400094be
   140009456:	add    BYTE PTR [rax],al
   140009458:	pop    QWORD PTR [rax]
   14000945a:	pop    rdi
   14000945b:	outs   dx,DWORD PTR ds:[rsi]
   14000945c:	pop    rdi
   14000945d:	pop    rdi
   14000945e:	movsxd esp,DWORD PTR [rbp+0x78]
   140009461:	imul   esi,DWORD PTR [rax+rax*1-0x65],0x5f6f5f00
   140009469:	pop    rdi
   14000946a:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14000946d:	imul   sp,WORD PTR [rdi+0x74],0x7268
   140009473:	gs (bad) 
   140009475:	fs ins BYTE PTR es:[rdi],dx
   140009477:	outs   dx,DWORD PTR ds:[rsi]
   140009478:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000947b:	add    BYTE PTR gs:[rax],al
   14000947e:	pushf  
   14000947f:	add    BYTE PTR [rdi+0x6f],bl
   140009482:	pop    rdi
   140009483:	pop    rdi
   140009484:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140009487:	imul   sp,WORD PTR [rdi+0x75],0x6572
   14000948d:	pop    rdi
   14000948e:	outs   dx,BYTE PTR ds:[rsi]
   14000948f:	(bad)  
   140009490:	jb     0x140009504
   140009492:	outs   dx,DWORD PTR ds:[rsi]
   140009493:	ja     0x1400094f4
   140009495:	(bad)  
   140009496:	jb     0x1400094ff
   140009498:	jbe    0x14000949a
   14000949a:	movabs ds:0x7472635f5f6f5f00,eax
   1400094a3:	pop    rdi
   1400094a4:	(bad)  
   1400094a5:	je     0x14000950c
   1400094a7:	js     0x140009512
   1400094a9:	je     0x1400094ab
   1400094ab:	add    bl,al
   1400094ad:	add    BYTE PTR [rdi+0x6f],bl
   1400094b0:	pop    rdi
   1400094b1:	pop    rdi
   1400094b2:	gs js  0x14000951e
   1400094b5:	je     0x1400094b7
   1400094b7:	add    BYTE PTR [rdx],cl
   1400094b9:	add    DWORD PTR [rdi+0x6f],ebx
   1400094bc:	pop    rdi
   1400094bd:	pop    rdi
   1400094be:	addr32 gs je 0x140009521
   1400094c2:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   1400094c9:	pop    rdi
   1400094ca:	outs   dx,BYTE PTR ds:[rsi]
   1400094cb:	(bad)  
   1400094cc:	jb     0x140009540
   1400094ce:	outs   dx,DWORD PTR ds:[rsi]
   1400094cf:	ja     0x140009530
   1400094d1:	outs   dx,BYTE PTR gs:[rsi]
   1400094d3:	jbe    0x14000953e
   1400094d5:	jb     0x140009546
   1400094d7:	outs   dx,BYTE PTR ds:[rsi]
   1400094d8:	ins    DWORD PTR es:[rdi],dx
   1400094d9:	outs   dx,BYTE PTR gs:[rsi]
   1400094db:	je     0x1400094dd
   1400094dd:	add    BYTE PTR [rax],bh
   1400094df:	add    DWORD PTR [rdi+0x6f],ebx
   1400094e2:	pop    rdi
   1400094e3:	pop    rdi
   1400094e4:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   1400094eb:	imul   edi,DWORD PTR [rdx+0x65],0x72616e5f
   1400094f2:	jb     0x140009563
   1400094f4:	ja     0x140009555
   1400094f6:	outs   dx,BYTE PTR gs:[rsi]
   1400094f8:	jbe    0x140009563
   1400094fa:	jb     0x14000956b
   1400094fc:	outs   dx,BYTE PTR ds:[rsi]
   1400094fd:	ins    DWORD PTR es:[rdi],dx
   1400094fe:	outs   dx,BYTE PTR gs:[rsi]
   140009500:	je     0x140009502
   140009502:	cmp    DWORD PTR [rcx],eax
   140009504:	pop    rdi
   140009505:	outs   dx,DWORD PTR ds:[rsi]
   140009506:	pop    rdi
   140009507:	pop    rdi
   140009508:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   14000950f:	imul   edi,DWORD PTR [rdx+0x65],0x656e6f5f
   140009516:	js     0x140009581
   140009518:	je     0x140009579
   14000951a:	je     0x14000957d
   14000951c:	(bad)  
   14000951d:	ins    BYTE PTR es:[rdi],dx
   14000951e:	add    BYTE PTR gs:[rdi],bh
   140009521:	add    bl,BYTE PTR [rdi+0x6f]
   140009524:	pop    rdi
   140009525:	pop    rdi
   140009526:	jo     0x14000959d
   140009528:	jb     0x14000958f
   14000952a:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000952d:	ins    BYTE PTR es:[rdi],dx
   14000952e:	add    BYTE PTR [rax],al
   140009530:	rex.WRB add r11b,BYTE PTR [r15+0x6f]
   140009534:	pop    rdi
   140009535:	pop    rdi
   140009536:	jb     0x14000959d
   140009538:	imul   esi,DWORD PTR [ebx+0x74],0x6f5f7265
   140009540:	outs   dx,BYTE PTR ds:[rsi]
   140009541:	gs js  0x1400095ad
   140009544:	je     0x1400095a5
   140009546:	data16 jne 0x1400095b7
   140009549:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000954d:	outs   dx,BYTE PTR ds:[rsi]
   14000954e:	add    BYTE PTR [rax],al
   140009550:	push   rsi
   140009551:	add    bl,BYTE PTR [rdi+0x6f]
   140009554:	pop    rdi
   140009555:	pop    rdi
   140009556:	jae    0x1400095bd
   140009558:	push   0x6c69665f
   14000955d:	je     0x1400095c4
   14000955f:	jb     0x1400095c0
   140009561:	gs js  0x1400095c9
   140009564:	add    BYTE PTR [rax],al
   140009566:	pop    rax
   140009567:	add    bl,BYTE PTR [rdi+0x6f]
   14000956a:	pop    rdi
   14000956b:	pop    rdi
   14000956c:	jae    0x1400095d3
   14000956e:	je     0x1400095cf
   140009570:	(bad)  
   140009571:	jo     0x1400095e3
   140009573:	pop    rdi
   140009574:	je     0x1400095ef
   140009576:	jo     0x1400095dd
   140009578:	add    BYTE PTR [rax],al
   14000957a:	pop    rbx
   14000957b:	add    bl,BYTE PTR [rdi+0x6f]
   14000957e:	pop    rdi
   14000957f:	pop    rdi
   140009580:	jae    0x1400095e7
   140009582:	je     0x1400095e3
   140009584:	ins    WORD PTR es:[rdi],dx
   140009586:	outs   dx,DWORD PTR ds:[rsi]
   140009587:	fs add BYTE PTR gs:[rsi+0x2],bl
   14000958c:	pop    rdi
   14000958d:	outs   dx,DWORD PTR ds:[rsi]
   14000958e:	pop    rdi
   14000958f:	pop    rdi
   140009590:	jae    0x1400095f7
   140009592:	je     0x1400095f3
   140009594:	outs   dx,BYTE PTR ds:[rsi]
   140009595:	gs ja  0x1400095f7
   140009598:	ins    DWORD PTR es:[rdi],dx
   140009599:	outs   dx,DWORD PTR ds:[rsi]
   14000959a:	fs add BYTE PTR gs:[rax],al
   14000959e:	imul   eax,DWORD PTR [rbx],0x655f6f5f
   1400095a4:	js     0x14000960f
   1400095a6:	je     0x1400095a8
   1400095a8:	mov    BYTE PTR [rbx],al
   1400095aa:	pop    rdi
   1400095ab:	outs   dx,DWORD PTR ds:[rsi]
   1400095ac:	pop    rdi
   1400095ad:	data16 jb 0x140009615
   1400095b0:	gs add bl,dl
   1400095b3:	add    ebx,DWORD PTR [rdi+0x6f]
   1400095b6:	pop    rdi
   1400095b7:	ins    DWORD PTR es:[rdi],dx
   1400095b8:	(bad)  
   1400095b9:	ins    BYTE PTR es:[rdi],dx
   1400095ba:	ins    BYTE PTR es:[rdi],dx
   1400095bb:	outs   dx,DWORD PTR ds:[rsi]
   1400095bc:	movsxd eax,DWORD PTR [rax]
   1400095be:	fild   WORD PTR [rbx]
   1400095c0:	pop    rdi
   1400095c1:	outs   dx,DWORD PTR ds:[rsi]
   1400095c2:	pop    rdi
   1400095c3:	ins    DWORD PTR es:[rdi],dx
   1400095c4:	gs ins DWORD PTR es:[rdi],dx
   1400095c6:	jae    0x14000962d
   1400095c8:	je     0x1400095ca
   1400095ca:	xor    DWORD PTR [rdi+rbx*2],eax
   1400095cd:	outs   dx,DWORD PTR ds:[rsi]
   1400095ce:	pop    rdi
   1400095cf:	je     0x140009636
   1400095d1:	jb     0x140009640
   1400095d3:	imul   ebp,DWORD PTR [rsi+0x61],0x6574
   1400095da:	or     al,0x0
   1400095dc:	pop    rdi
   1400095dd:	pop    rdi
   1400095de:	rex.XB pop r15
   1400095e0:	jae    0x140009652
   1400095e2:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   1400095e6:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   1400095ed:	ins    BYTE PTR es:[rdi],dx
   1400095ee:	gs jb  0x1400095f1
   1400095f1:	add    BYTE PTR [rcx],dl
   1400095f3:	add    BYTE PTR [rdi+0x5f],bl
   1400095f6:	rex.XB js 0x140009671
   1400095f9:	rex.RX jb 0x14000965d
   1400095fc:	ins    DWORD PTR es:[rdi],dx
   1400095fd:	gs rex.W (bad) 
   140009600:	outs   dx,BYTE PTR ds:[rsi]
   140009601:	fs ins BYTE PTR es:[rdi],dx
   140009603:	gs jb  0x140009639
   140009606:	add    BYTE PTR [rax],al
   140009608:	add    DWORD PTR [rax],eax
   14000960a:	pop    rdi
   14000960b:	rex.XB js 0x140009686
   14000960e:	push   rsp
   14000960f:	push   0x45776f72
   140009614:	js     0x140009679
   140009616:	gs jo  0x14000968d
   140009619:	imul   ebp,DWORD PTR [rdi+0x6e],0x70610000
   140009620:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e0997
   14000962a:	jb     0x1400096a0
   14000962c:	sub    eax,0x76697270
   140009631:	(bad)  
   140009632:	je     0x140009699
   140009634:	sub    eax,0x312d316c
   140009639:	sub    eax,0x6c642e30
   14000963e:	ins    BYTE PTR es:[rdi],dx
   14000963f:	add    dh,al
   140009641:	add    dl,BYTE PTR [rdx+0x74]
   140009644:	ins    BYTE PTR es:[rdi],dx
   140009645:	rex.XB (bad) 
   140009647:	jo     0x1400096bd
   140009649:	jne    0x1400096bd
   14000964b:	rex.XB outs dx,DWORD PTR gs:[rsi]
   14000964e:	outs   dx,BYTE PTR ds:[rsi]
   14000964f:	je     0x1400096b6
   140009651:	js     0x1400096c7
   140009653:	add    BYTE PTR [rdi+0x4],dh
   140009656:	push   rdx
   140009657:	je     0x1400096c5
   140009659:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000965b:	outs   dx,DWORD PTR ds:[rsi]
   14000965c:	imul   esi,DWORD PTR [rbp+0x70],0x46
   140009660:	jne    0x1400096d0
   140009662:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140009666:	outs   dx,BYTE PTR ds:[rsi]
   140009667:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140009669:	je     0x1400096dd
   14000966b:	jns    0x14000966d
   14000966d:	add    BYTE PTR [rbx+0x6c745205],cl
   140009673:	push   rsi
   140009674:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   14000967b:	outs   dx,BYTE PTR ds:[rsi]
   14000967c:	ja     0x1400096e7
   14000967e:	outs   dx,BYTE PTR ds:[rsi]
   14000967f:	add    BYTE PTR fs:[rax],al
   140009682:	outs   dx,BYTE PTR ds:[rsi]
   140009683:	je     0x1400096e9
   140009685:	ins    BYTE PTR es:[rdi],dx
   140009686:	ins    BYTE PTR es:[rdi],dx
   140009687:	cs fs ins BYTE PTR es:[rdi],dx
   14000968a:	ins    BYTE PTR es:[rdi],dx
   14000968b:	add    BYTE PTR [rdx+0x0],al
   14000968e:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140009690:	push   rbp
   140009691:	outs   dx,BYTE PTR ds:[rsi]
   140009692:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   140009699:	imul   edi,DWORD PTR [rdx+0x65],0x170000
   1400096a0:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400096a2:	(bad)  
   1400096a3:	imul   r12,QWORD PTR fs:[rdx+0x72],0x45797261
   1400096ac:	js     0x140009705
   1400096ae:	add    BYTE PTR [rax],al
   1400096b0:	adc    al,BYTE PTR [rax]
   1400096b2:	rex.RXB
   1400096b3:	gs je  0x140009703
   1400096b6:	outs   dx,DWORD PTR ds:[rsi]
   1400096b7:	fs jne 0x140009726
   1400096ba:	gs rex.W (bad) 
   1400096bd:	outs   dx,BYTE PTR ds:[rsi]
   1400096be:	fs ins BYTE PTR es:[rdi],dx
   1400096c0:	gs rex.RB js 0x14000971b
   1400096c4:	add    BYTE PTR [rax],al
   1400096c6:	add    al,BYTE PTR [rax]
   1400096c8:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400096ca:	rex.B
   1400096cb:	fs fs push rdx
   1400096ce:	gs push bx
   1400096d1:	gs jb  0x14000974a
   1400096d4:	gs jb  0x140009727
   1400096d7:	jb     0x140009748
   1400096d9:	movsxd esp,DWORD PTR [rbp+0x73]
   1400096dc:	jae    0x1400096de
   1400096de:	add    BYTE PTR ss:[rdi+0x61],dl
   1400096e2:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x6e695372
   1400096ea:	ins    BYTE PTR es:[edi],dx
   1400096ec:	gs rex.WRXB (bad) 
   1400096ef:	push   0x65
   1400096f1:	movsxd esi,DWORD PTR [rax+rax*1+0x29]
   1400096f5:	add    BYTE PTR [rbx+0x65],dl
   1400096f8:	je     0x14000973f
   1400096fa:	jbe    0x140009761
   1400096fc:	outs   dx,BYTE PTR ds:[rsi]
   1400096fd:	je     0x1400096ff
   1400096ff:	add    BYTE PTR [rax+rax*1],ah
   140009702:	push   rdx
   140009703:	gs ins BYTE PTR es:[rdi],dx
   140009705:	gs (bad) 
   140009707:	jae    0x14000976e
   140009709:	push   rbx
   14000970a:	push   rdx
   14000970b:	push   rdi
   14000970c:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000970e:	movsxd ebp,DWORD PTR [rbx+0x45]
   140009711:	js     0x140009776
   140009713:	ins    BYTE PTR es:[rdi],dx
   140009714:	jne    0x140009789
   140009716:	imul   esi,DWORD PTR [rsi+0x65],0x47001300
   14000971d:	gs je  0x14000976d
   140009720:	outs   dx,DWORD PTR ds:[rsi]
   140009721:	fs jne 0x140009790
   140009724:	gs rex.W (bad) 
   140009727:	outs   dx,BYTE PTR ds:[rsi]
   140009728:	fs ins BYTE PTR es:[rdi],dx
   14000972a:	gs push rdi
   14000972c:	add    BYTE PTR [rax],al
   14000972e:	add    BYTE PTR [rax],al
   140009730:	movsxd esi,DWORD PTR [r9+0x75]
   140009734:	imul   esi,DWORD PTR [rdx+0x65],0x4c575253
   14000973b:	outs   dx,DWORD PTR ds:[rsi]
   14000973c:	movsxd ebp,DWORD PTR [rbx+0x45]
   14000973f:	js     0x1400097a4
   140009741:	ins    BYTE PTR es:[rdi],dx
   140009742:	jne    0x1400097b7
   140009744:	imul   esi,DWORD PTR [rsi+0x65],0x43002700
   14000974b:	outs   dx,DWORD PTR ds:[rsi]
   14000974c:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000974e:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140009756:	push   rbx
   140009757:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000975b:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x45000500
   140009763:	jbe    0x1400097ca
   140009765:	outs   dx,BYTE PTR ds:[rsi]
   140009766:	je     0x1400097bd
   140009768:	outs   dx,BYTE PTR ds:[rsi]
   140009769:	jb     0x1400097d0
   14000976b:	imul   esi,DWORD PTR [ebx+0x74],0x9007265
   140009773:	add    BYTE PTR [rdx+0x6f],dl
   140009776:	rex.WRXB jb 0x1400097e2
   140009779:	imul   ebp,DWORD PTR [esi+0x61],0x72456574
   140009781:	jb     0x1400097f2
   140009783:	jb     0x140009785
   140009785:	add    BYTE PTR [rax+rax*1],al
   140009788:	rex.RB jbe 0x1400097f0
   14000978b:	outs   dx,BYTE PTR ds:[rsi]
   14000978c:	je     0x1400097e1
   14000978e:	gs je  0x1400097da
   140009791:	outs   dx,BYTE PTR ds:[rsi]
   140009792:	outs   dx,WORD PTR ds:[rsi]
   140009794:	jb     0x140009803
   140009796:	(bad)  
   140009797:	je     0x140009802
   140009799:	outs   dx,DWORD PTR ds:[rsi]
   14000979a:	outs   dx,BYTE PTR ds:[rsi]
   14000979b:	add    BYTE PTR [rdi],al
   14000979d:	add    BYTE PTR [rdx+0x61],dl
   1400097a0:	imul   esi,DWORD PTR [rbx+0x65],0x65637845
   1400097a7:	jo     0x14000981d
   1400097a9:	imul   ebp,DWORD PTR [rdi+0x6e],0x50000
   1400097b0:	rex.RXB
   1400097b1:	gs je  0x140009800
   1400097b4:	(bad)  
   1400097b5:	jae    0x14000982b
   1400097b7:	rex.RB jb 0x14000982c
   1400097ba:	outs   dx,DWORD PTR ds:[rsi]
   1400097bb:	jb     0x1400097bd
   1400097bd:	add    BYTE PTR [rax+rax*1],dl
   1400097c0:	rex.RXB
   1400097c1:	gs je  0x140009814
   1400097c4:	jb     0x140009835
   1400097c6:	movsxd eax,DWORD PTR [rcx+0x64]
   1400097c9:	fs jb  0x140009831
   1400097cc:	jae    0x140009841
   1400097ce:	add    BYTE PTR [rax],al
   1400097d0:	add    BYTE PTR ss:[rbx+0x6f],al
   1400097d4:	push   rdx
   1400097d5:	gs ins BYTE PTR es:[rdi],dx
   1400097d7:	gs (bad) 
   1400097d9:	jae    0x140009840
   1400097db:	push   rbx
   1400097dc:	gs jb  0x140009855
   1400097df:	gs jb  0x140009832
   1400097e2:	jb     0x140009853
   1400097e4:	movsxd esp,DWORD PTR [rbp+0x73]
   1400097e7:	jae    0x1400097e9
   1400097e9:	add    BYTE PTR [rsi],al
   1400097eb:	add    BYTE PTR [rbx+0x72],al
   1400097ee:	gs (bad) 
   1400097f0:	je     0x140009857
   1400097f2:	rex.RB jbe 0x14000985a
   1400097f5:	outs   dx,BYTE PTR ds:[rsi]
   1400097f6:	je     0x14000984f
   1400097f8:	add    BYTE PTR [rax],al
   1400097fa:	add    DWORD PTR [rax],eax
   1400097fc:	rex.R
   1400097fd:	movsxd ebp,DWORD PTR gs:[rdi+0x64]
   140009801:	gs push rax
   140009803:	outs   dx,DWORD PTR ds:[rsi]
   140009804:	imul   ebp,DWORD PTR [rsi+0x74],0xe007265
   14000980b:	add    BYTE PTR [rdi+0x65],al
   14000980e:	je     0x14000985d
   140009810:	outs   dx,DWORD PTR ds:[rsi]
   140009811:	fs jne 0x140009880
   140009814:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x41656d61
   14000981e:	add    BYTE PTR [rax],al
   140009820:	add    eax,DWORD PTR [rax]
   140009822:	rex.RB jbe 0x14000988a
   140009825:	outs   dx,BYTE PTR ds:[rsi]
   140009826:	je     0x14000987a
   140009828:	imul   esi,DWORD PTR gs:[ebx+0x74],0x26007265
   140009831:	add    BYTE PTR [rbx+0x6f],al
   140009834:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140009836:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000983e:	rex.RB js 0x140009841
   140009841:	add    BYTE PTR [rcx],bh
   140009843:	add    BYTE PTR [rbx+0x6f],al
   140009846:	push   rdx
   140009847:	gs jbe 0x1400098b9
   14000984a:	imul   esp,DWORD PTR [rbp+0x43],0x6c
   14000984e:	(bad)  
   14000984f:	jae    0x1400098c4
   140009851:	rex.WRXB (bad) 
   140009853:	push   0x65
   140009855:	movsxd esi,DWORD PTR [rax+rax*1+0x32]
   140009859:	add    BYTE PTR [rbx+0x6f],al
   14000985c:	push   rdx
   14000985d:	imul   esi,DWORD PTR gs:[ebx+0x74],0x6c437265
   140009866:	(bad)  
   140009867:	jae    0x1400098dc
   140009869:	rex.WRXB (bad) 
   14000986b:	push   0x65
   14000986d:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
   140009871:	add    BYTE PTR [rbx+0x6c],al
   140009874:	outs   dx,DWORD PTR ds:[rsi]
   140009875:	jae    0x1400098dc
   140009877:	rex.W (bad) 
   140009879:	outs   dx,BYTE PTR ds:[rsi]
   14000987a:	fs ins BYTE PTR es:[rdi],dx
   14000987c:	add    BYTE PTR gs:[rdi],dh
   14000987f:	add    BYTE PTR [rbx+0x6f],al
   140009882:	push   rdx
   140009883:	gs jae 0x1400098fb
   140009886:	ins    DWORD PTR es:[rdi],dx
   140009887:	gs rex.XB ins BYTE PTR es:[rdi],dx
   14000988a:	(bad)  
   14000988b:	jae    0x140009900
   14000988d:	rex.WRXB (bad) 
   14000988f:	push   0x65
   140009891:	movsxd esi,DWORD PTR [rbx+rsi*2+0x0]
   140009895:	add    BYTE PTR [rax],al
   140009897:	add    BYTE PTR [rcx+0x75],dl
   14000989a:	gs jb  0x140009916
   14000989d:	push   rax
   14000989e:	gs jb  0x140009907
   1400098a1:	outs   dx,DWORD PTR ds:[rsi]
   1400098a2:	jb     0x140009911
   1400098a4:	(bad)  
   1400098a5:	outs   dx,BYTE PTR ds:[rsi]
   1400098a6:	movsxd esp,DWORD PTR [rbp+0x43]
   1400098a9:	outs   dx,DWORD PTR ds:[rsi]
   1400098aa:	jne    0x14000991a
   1400098ac:	je     0x140009913
   1400098ae:	jb     0x1400098b0
   1400098b0:	or     eax,0x74654700
   1400098b5:	rex.XB jne 0x14000992a
   1400098b8:	jb     0x14000991f
   1400098ba:	outs   dx,BYTE PTR ds:[rsi]
   1400098bb:	je     0x14000990d
   1400098bd:	jb     0x14000992e
   1400098bf:	movsxd esp,DWORD PTR [rbp+0x73]
   1400098c2:	jae    0x14000990d
   1400098c4:	add    BYTE PTR fs:[rcx],dl
   1400098c7:	add    BYTE PTR [rdi+0x65],al
   1400098ca:	je     0x14000990f
   1400098cc:	jne    0x140009940
   1400098ce:	jb     0x140009935
   1400098d0:	outs   dx,BYTE PTR ds:[rsi]
   1400098d1:	je     0x140009927
   1400098d3:	push   0x64616572
   1400098d8:	rex.WB
   1400098d9:	add    BYTE PTR fs:[rax],al
   1400098dc:	adc    al,0x0
   1400098de:	rex.RXB
   1400098df:	gs je  0x140009935
   1400098e2:	jns    0x140009957
   1400098e4:	je     0x14000994b
   1400098e6:	ins    DWORD PTR es:[rdi],dx
   1400098e7:	push   rsp
   1400098e8:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   1400098ef:	ins    BYTE PTR es:[rdi],dx
   1400098f0:	gs push rsp
   1400098f2:	imul   ebp,DWORD PTR [rbp+0x65],0x49000000
   1400098f9:	outs   dx,BYTE PTR ds:[rsi]
   1400098fa:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140009902:	push   rbx
   140009903:	imul   r14,QWORD PTR [rbx+0x74],0x64616548
   14000990b:	add    BYTE PTR [rip+0x44734900],al        # 0x18473e211
   140009911:	gs (bad) 
   140009913:	jne    0x14000997c
   140009915:	addr32 gs jb 0x140009969
   140009919:	jb     0x140009980
   14000991b:	jae    0x140009982
   14000991d:	outs   dx,BYTE PTR ds:[rsi]
   14000991e:	je     0x140009920
   140009920:	adc    DWORD PTR [rax],eax
   140009922:	push   rbp
   140009923:	outs   dx,BYTE PTR ds:[rsi]
   140009924:	push   0x6c646e61
   140009929:	gs fs rex.RB js 0x140009991
   14000992e:	gs jo  0x1400099a5
   140009931:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140009938:	gs jb  0x14000993b
   14000993b:	add    BYTE PTR [rdi],cl
   14000993d:	add    BYTE PTR [rbx+0x65],dl
   140009940:	je     0x140009997
   140009942:	outs   dx,BYTE PTR ds:[rsi]
   140009943:	push   0x6c646e61
   140009948:	gs fs rex.RB js 0x1400099b0
   14000994d:	gs jo  0x1400099c4
   140009950:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140009957:	gs jb  0x14000995a
   14000995a:	add    BYTE PTR cs:[rcx+0x73],cl
   14000995e:	push   rax
   14000995f:	jb     0x1400099d0
   140009961:	movsxd esp,DWORD PTR [rbp+0x73]
   140009964:	jae    0x1400099d5
   140009966:	jb     0x1400099ae
   140009968:	gs (bad) 
   14000996a:	je     0x1400099e1
   14000996c:	jb     0x1400099d3
   14000996e:	push   rax
   14000996f:	jb     0x1400099d6
   140009971:	jae    0x1400099d8
   140009973:	outs   dx,BYTE PTR ds:[rsi]
   140009974:	je     0x140009976
   140009976:	or     al,0x0
   140009978:	rex.RXB
   140009979:	gs je  0x1400099bf
   14000997c:	jne    0x1400099f0
   14000997e:	jb     0x1400099e5
   140009980:	outs   dx,BYTE PTR ds:[rsi]
   140009981:	je     0x1400099d3
   140009983:	jb     0x1400099f4
   140009985:	movsxd esp,DWORD PTR [rbp+0x73]
   140009988:	jae    0x14000998a
   14000998a:	rex.WXB add BYTE PTR [r13+r12*2+0x72],dl
   14000998f:	ins    DWORD PTR es:[rdi],dx
   140009990:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   140009997:	outs   dx,DWORD PTR ds:[rsi]
   140009998:	movsxd esp,DWORD PTR [rbp+0x73]
   14000999b:	jae    0x14000999d
   14000999d:	add    BYTE PTR [rcx+0x70],ah
   1400099a0:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e0d17
   1400099aa:	outs   dx,DWORD PTR ds:[rsi]
   1400099ab:	jb     0x140009a12
   1400099ad:	sub    eax,0x2d6d6f63
   1400099b2:	ins    BYTE PTR es:[rdi],dx
   1400099b3:	xor    DWORD PTR [rip+0x2e312d31],ebp        # 0x16e31c6ea
   1400099b9:	fs ins BYTE PTR es:[rdi],dx
   1400099bb:	ins    BYTE PTR es:[rdi],dx
   1400099bc:	add    BYTE PTR [rax],al
   1400099be:	(bad)  
   1400099bf:	jo     0x140009a2a
   1400099c1:	sub    eax,0x772d736d
   1400099c6:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   1400099cd:	sub    eax,0x7262696c
   1400099d2:	(bad)  
   1400099d3:	jb     0x140009a4e
   1400099d5:	ins    BYTE PTR es:[rdi],dx
   1400099d6:	outs   dx,DWORD PTR ds:[rsi]
   1400099d7:	(bad)  
   1400099d8:	fs gs jb 0x140009a09
   1400099dc:	ins    BYTE PTR es:[rdi],dx
   1400099dd:	xor    DWORD PTR [rip+0x2e302d32],ebp        # 0x16e30c715
   1400099e3:	fs ins BYTE PTR es:[rdi],dx
   1400099e5:	ins    BYTE PTR es:[rdi],dx
   1400099e6:	add    BYTE PTR [rax],al
   1400099e8:	(bad)  
   1400099e9:	jo     0x140009a54
   1400099eb:	sub    eax,0x772d736d
   1400099f0:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   1400099f7:	sub    eax,0x636e7973
   1400099fc:	push   0x2d316c2d
   140009a01:	xor    ch,BYTE PTR [rip+0x6c642e30]        # 0x1ac64c837
   140009a07:	ins    BYTE PTR es:[rdi],dx
   140009a08:	add    BYTE PTR [rax],al
   140009a0a:	(bad)  
   140009a0b:	jo     0x140009a76
   140009a0d:	sub    eax,0x772d736d
   140009a12:	imul   ebp,DWORD PTR [rsi+0x2d],0x6e657665
   140009a19:	je     0x140009a84
   140009a1b:	outs   dx,BYTE PTR ds:[rsi]
   140009a1c:	addr32 sub eax,0x766f7270
   140009a22:	imul   esp,DWORD PTR [rbp+riz*2+0x72],0x2d316c2d
   140009a2a:	xor    DWORD PTR [rip+0x6c642e30],ebp        # 0x1ac64c860
   140009a30:	ins    BYTE PTR es:[rdi],dx
   140009a31:	add    BYTE PTR [rcx+0x70],ah
   140009a34:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e0dab
   140009a3e:	outs   dx,DWORD PTR ds:[rsi]
   140009a3f:	jb     0x140009aa6
   140009a41:	sub    eax,0x726e6977
   140009a46:	je     0x140009a75
   140009a48:	gs jb  0x140009abd
   140009a4b:	outs   dx,DWORD PTR ds:[rsi]
   140009a4c:	jb     0x140009a7b
   140009a4e:	ins    BYTE PTR es:[rdi],dx
   140009a4f:	xor    DWORD PTR [rip+0x2e312d31],ebp        # 0x16e31c786
   140009a55:	fs ins BYTE PTR es:[rdi],dx
   140009a57:	ins    BYTE PTR es:[rdi],dx
   140009a58:	add    BYTE PTR [rax],al
   140009a5a:	(bad)  
   140009a5b:	jo     0x140009ac6
   140009a5d:	sub    eax,0x772d736d
   140009a62:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140009a69:	sub    eax,0x6f727265
   140009a6e:	jb     0x140009ad8
   140009a70:	(bad)  
   140009a71:	outs   dx,BYTE PTR ds:[rsi]
   140009a72:	fs ins BYTE PTR es:[rdi],dx
   140009a74:	imul   ebp,DWORD PTR [rsi+0x67],0x2d316c2d
   140009a7b:	xor    DWORD PTR [rip+0x6c642e31],ebp        # 0x1ac64c8b2
   140009a81:	ins    BYTE PTR es:[rdi],dx
   140009a82:	add    BYTE PTR [rax],al
   140009a84:	(bad)  
   140009a85:	jo     0x140009af0
   140009a87:	sub    eax,0x772d736d
   140009a8c:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140009a93:	sub    eax,0x6c697475
   140009a98:	sub    eax,0x312d316c
   140009a9d:	sub    eax,0x6c642e30
   140009aa2:	ins    BYTE PTR es:[rdi],dx
   140009aa3:	add    BYTE PTR [rcx+0x70],ah
   140009aa6:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e0e1d
   140009ab0:	outs   dx,DWORD PTR ds:[rsi]
   140009ab1:	jb     0x140009b18
   140009ab3:	sub    eax,0x646e6168
   140009ab8:	ins    BYTE PTR es:[rdi],dx
   140009ab9:	gs sub eax,0x312d316c
   140009abf:	sub    eax,0x6c642e30
   140009ac4:	ins    BYTE PTR es:[rdi],dx
   140009ac5:	add    BYTE PTR [rcx+0x70],ah
   140009ac8:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e0e3f
   140009ad2:	outs   dx,DWORD PTR ds:[rsi]
   140009ad3:	jb     0x140009b3a
   140009ad5:	sub    eax,0x666f7270
   140009ada:	imul   ebp,DWORD PTR [rbp+riz*2+0x2d],0x312d316c
   140009ae2:	sub    eax,0x6c642e30
   140009ae7:	ins    BYTE PTR es:[rdi],dx
   140009ae8:	add    BYTE PTR [rax],al
   140009aea:	(bad)  
   140009aeb:	jo     0x140009b56
   140009aed:	sub    eax,0x772d736d
   140009af2:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140009af9:	sub    eax,0x636f7270
   140009afe:	gs jae 0x140009b74
   140009b01:	je     0x140009b6b
   140009b03:	jb     0x140009b6a
   140009b05:	(bad)  
   140009b06:	fs jae 0x140009b36
   140009b09:	ins    BYTE PTR es:[rdi],dx
   140009b0a:	xor    DWORD PTR [rip+0x2e322d31],ebp        # 0x16e32c841
   140009b10:	fs ins BYTE PTR es:[rdi],dx
   140009b12:	ins    BYTE PTR es:[rdi],dx
   140009b13:	add    BYTE PTR [rcx+0x70],ah
   140009b16:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e0e8d
   140009b20:	outs   dx,DWORD PTR ds:[rsi]
   140009b21:	jb     0x140009b88
   140009b23:	sub    eax,0x69737973
   140009b28:	outs   dx,BYTE PTR ds:[rsi]
   140009b29:	outs   dx,WORD PTR ds:[rsi]
   140009b2b:	sub    eax,0x322d316c
   140009b30:	sub    eax,0x6c642e31
   140009b35:	ins    BYTE PTR es:[rdi],dx
   140009b36:	add    BYTE PTR [rax],al
   140009b38:	(bad)  
   140009b39:	jo     0x140009ba4
   140009b3b:	sub    eax,0x772d736d
   140009b40:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140009b47:	sub    eax,0x65746e69
   140009b4c:	jb     0x140009bba
   140009b4e:	outs   dx,DWORD PTR ds:[rsi]
   140009b4f:	movsxd ebp,DWORD PTR [rbx+0x65]
   140009b52:	fs sub eax,0x322d316c
   140009b58:	sub    eax,0x6c642e30
   140009b5d:	ins    BYTE PTR es:[rdi],dx
   140009b5e:	add    BYTE PTR [rax],al
   140009b60:	(bad)  
   140009b61:	jo     0x140009bcc
   140009b63:	sub    eax,0x772d736d
   140009b68:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140009b6f:	sub    eax,0x75626564
   140009b74:	addr32 sub eax,0x312d316c
   140009b7a:	sub    eax,0x6c642e31
   140009b7f:	ins    BYTE PTR es:[rdi],dx
   140009b80:	add    BYTE PTR [rax],al
   140009b82:	add    al,0x0
   140009b84:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140009b86:	rex.B ins BYTE PTR es:[rdi],dx
   140009b88:	ins    BYTE PTR es:[rdi],dx
   140009b89:	outs   dx,DWORD PTR ds:[rsi]
   140009b8a:	ja     0x140009bdf
   140009b8c:	gs je  0x140009bd5
   140009b8f:	outs   dx,DWORD PTR ds:[rsi]
   140009b90:	jb     0x140009bf7
   140009b92:	addr32 jb 0x140009c04
   140009b95:	jne    0x140009c05
   140009b97:	fs push rdi
   140009b99:	imul   ebp,DWORD PTR [rsi+0x64],0x776f
   140009ba0:	gs js  0x140009c17
   140009ba3:	sub    eax,0x772d736d
   140009ba8:	imul   ebp,DWORD PTR [rsi+0x2d],0x2d6d6f63
   140009baf:	outs   dx,DWORD PTR ds:[rsi]
   140009bb0:	ins    BYTE PTR es:[rdi],dx
   140009bb1:	xor    esi,DWORD PTR gs:[rdx]
   140009bb4:	sub    eax,0x312d316c
   140009bb9:	sub    eax,0x6c642e31
   140009bbe:	ins    BYTE PTR es:[rdi],dx
   140009bbf:	add    BYTE PTR [rip+0x65685300],cl        # 0x1a568eec5
   140009bc5:	ins    BYTE PTR es:[rdi],dx
   140009bc6:	ins    BYTE PTR es:[rdi],dx
   140009bc7:	rex.RB js 0x140009c2f
   140009bca:	movsxd esi,DWORD PTR [rbp+0x74]
   140009bcd:	gs rex.RB js 0x140009c28
   140009bd1:	add    BYTE PTR [rbp+0x78],ah
   140009bd4:	je     0x140009c03
   140009bd6:	ins    DWORD PTR es:[rdi],dx
   140009bd7:	jae    0x140009c06
   140009bd9:	ja     0x140009c44
   140009bdb:	outs   dx,BYTE PTR ds:[rsi]
   140009bdc:	sub    eax,0x6c656873
   140009be1:	ins    BYTE PTR es:[rdi],dx
   140009be2:	sub    eax,0x6c656873
   140009be7:	ins    BYTE PTR es:[rdi],dx
   140009be8:	xor    esi,DWORD PTR [rdx]
   140009bea:	sub    eax,0x322d316c
   140009bef:	sub    eax,0x6c642e30
   140009bf4:	ins    BYTE PTR es:[rdi],dx
   140009bf5:	add    BYTE PTR [rax],cl
   140009bf7:	add    BYTE PTR [rbx+0x6f],al
   140009bfa:	rex.XB jb 0x140009c62
   140009bfd:	(bad)  
   140009bfe:	je     0x140009c65
   140009c00:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140009c02:	jae    0x140009c78
   140009c04:	(bad)  
   140009c05:	outs   dx,BYTE PTR ds:[rsi]
   140009c06:	movsxd esp,DWORD PTR [rbp+0x0]
   140009c09:	add    BYTE PTR [rcx],cl
   140009c0b:	add    BYTE PTR [rbp+0x76],al
   140009c0e:	outs   dx,BYTE PTR gs:[rsi]
   140009c10:	je     0x140009c69
   140009c12:	jb     0x140009c7d
   140009c14:	je     0x140009c7b
   140009c16:	push   rsp
   140009c17:	jb     0x140009c7a
   140009c19:	outs   dx,BYTE PTR ds:[rsi]
   140009c1a:	jae    0x140009c82
   140009c1c:	gs jb  0x140009c1f
   140009c1f:	add    BYTE PTR [rax],al
   140009c21:	add    BYTE PTR [rbp+0x76],al
   140009c24:	outs   dx,BYTE PTR gs:[rsi]
   140009c26:	je     0x140009c69
   140009c28:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
   140009c2c:	imul   esi,DWORD PTR [rcx+rdi*2+0x49],0x6e6f4364
   140009c34:	je     0x140009ca8
   140009c36:	outs   dx,DWORD PTR ds:[rsi]
   140009c37:	ins    BYTE PTR es:[rdi],dx
   140009c38:	add    BYTE PTR [rax],al
   140009c3a:	pop    rsi
   140009c3b:	add    al,0x6d
   140009c3d:	gs ins DWORD PTR es:[rdi],dx
   140009c3f:	movsxd esi,DWORD PTR [rax+0x79]
	...

Disassembly of section .data:

000000014000a000 <.data>:
   14000a000:	add    DWORD PTR [rax],eax
   14000a002:	add    BYTE PTR [rax],al
   14000a004:	add    BYTE PTR [rax],al
   14000a006:	add    BYTE PTR [rax],al
   14000a008:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14000a00e:	add    BYTE PTR [rax],al
   14000a010:	int    0x5d
   14000a012:	and    dl,dl
   14000a014:	data16 (bad) 
   14000a016:	(bad)  
   14000a017:	inc    DWORD PTR [rax]
	...
   14000a025:	add    BYTE PTR [rax],al
   14000a027:	add    BYTE PTR [rbp-0x7e],dh
   14000a02a:	add    BYTE PTR [rax+0x1],al
	...
   14000a055:	add    BYTE PTR [rax],al
   14000a057:	add    BYTE PTR [rax+0x18],dh
   14000a05a:	add    BYTE PTR [rax+0x1],al
   14000a05d:	add    BYTE PTR [rax],al
   14000a05f:	add    BYTE PTR [rax+0x6a],bl
   14000a062:	add    BYTE PTR [rax+0x1],al
   14000a065:	add    BYTE PTR [rax],al
   14000a067:	add    BYTE PTR [rax+0x140006a],dl
   14000a06d:	add    BYTE PTR [rax],al
   14000a06f:	add    BYTE PTR [rcx],al
   14000a071:	add    BYTE PTR [rax],al
   14000a073:	add    BYTE PTR [rax],al
   14000a075:	add    BYTE PTR [rax],al
   14000a077:	add    BYTE PTR [rax+0x67],dh
   14000a07a:	add    BYTE PTR [rax+0x1],al
   14000a07d:	add    BYTE PTR [rax],al
   14000a07f:	add    BYTE PTR [rax],ch
   14000a081:	add    BYTE PTR gs:[rax+0x1],al
	...
   14000a08d:	add    BYTE PTR [rax],al
   14000a08f:	add    BYTE PTR [rsi],ch
   14000a091:	(bad)  
   14000a092:	push   r14
   14000a094:	je     0x14000a10f
   14000a096:	jo     0x14000a0fd
   14000a098:	pop    rdi
   14000a099:	imul   ebp,DWORD PTR [rsi+0x66],0x40406f
   14000a0a0:	sub    BYTE PTR [rbp+0x0],ah
   14000a0a3:	rex add DWORD PTR [rax],eax
	...
   14000a0ae:	add    BYTE PTR [rax],al
   14000a0b0:	cs (bad) 
   14000a0b2:	push   r14
   14000a0b4:	(bad)
   14000a0b9:	ins    BYTE PTR es:[rdi],dx
   14000a0ba:	ins    BYTE PTR es:[rdi],dx
   14000a0bb:	outs   dx,DWORD PTR ds:[rsi]
   14000a0bc:	movsxd eax,DWORD PTR [rax+0x73]
   14000a0bf:	je     0x14000a125
   14000a0c1:	rex
   14000a0c2:	add    BYTE PTR [rax],al
   14000a0c5:	add    BYTE PTR [rax],al
   14000a0c7:	add    BYTE PTR [rax],ch
   14000a0c9:	add    BYTE PTR gs:[rax+0x1],al
	...
   14000a0d5:	add    BYTE PTR [rax],al
   14000a0d7:	add    BYTE PTR [rsi],ch
   14000a0d9:	(bad)  
   14000a0da:	push   r14
   14000a0dc:	gs js  0x14000a142
   14000a0df:	gs jo  0x14000a156
   14000a0e2:	imul   ebp,DWORD PTR [rdi+0x6e],0x64747340
   14000a0e9:	rex
   14000a0ea:	add    BYTE PTR [rax],al
   14000a0ed:	add    BYTE PTR [rax],al
   14000a0ef:	add    BYTE PTR [rax],ch
   14000a0f1:	add    BYTE PTR gs:[rax+0x1],al
	...
   14000a0fd:	add    BYTE PTR [rax],al
   14000a0ff:	add    BYTE PTR [rsi],ch
   14000a101:	(bad)  
   14000a102:	push   r14
   14000a104:	(bad)
   14000a109:	jb     0x14000a17d
   14000a10b:	(bad)  
   14000a10c:	jns    0x14000a16d
   14000a10e:	outs   dx,BYTE PTR ds:[rsi]
   14000a10f:	gs ja  0x14000a171
   14000a112:	ins    BYTE PTR es:[rdi],dx
   14000a113:	outs   dx,BYTE PTR gs:[rsi]
   14000a115:	addr32 je 0x14000a180
   14000a118:	rex jae 0x14000a18f
   14000a11b:	fs rex
   14000a11d:	add    BYTE PTR [rax],al
   14000a120:	sub    BYTE PTR [rbp+0x0],ah
   14000a123:	rex add DWORD PTR [rax],eax
	...
   14000a12e:	add    BYTE PTR [rax],al
   14000a130:	cs (bad) 
   14000a132:	push   r14
   14000a134:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14000a136:	fs jne 0x14000a1a5
   14000a139:	gs rex.X (bad) 
   14000a13c:	jae    0x14000a1a3
   14000a13e:	rex
   14000a13f:	rex.R
   14000a140:	gs je  0x14000a1a4
   14000a143:	imul   ebp,DWORD PTR [rbx+rsi*2+0x40],0x404c5257
   14000a14b:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000a153:	je     0x14000a195
   14000a155:	add    BYTE PTR [rax],al
	...
   14000a160:	sub    BYTE PTR [rbp+0x0],ah
   14000a163:	rex add DWORD PTR [rax],eax
	...
   14000a16e:	add    BYTE PTR [rax],al
   14000a170:	cs (bad) 
   14000a172:	push   r14
   14000a174:	(bad)  
   14000a175:	and    al,0x53
   14000a177:	imul   ebp,DWORD PTR [rbp+0x70],0x6c43656c
   14000a17e:	(bad)  
   14000a17f:	jae    0x14000a1f4
   14000a181:	rex.RX (bad) 
   14000a183:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14000a187:	jns    0x14000a1c9
   14000a189:	push   rsi
   14000a18a:	push   rdx
   14000a18b:	gs data16 gs jb 0x14000a1f5
   14000a190:	outs   dx,BYTE PTR ds:[rsi]
   14000a191:	movsxd esp,DWORD PTR [rbp+0x52]
   14000a194:	gs ins DWORD PTR es:[rdi],dx
   14000a196:	outs   dx,DWORD PTR ds:[rsi]
   14000a197:	je     0x14000a1fe
   14000a199:	push   rsp
   14000a19a:	gs js  0x14000a211
   14000a19d:	push   rbx
   14000a19e:	jns    0x14000a213
   14000a1a0:	je     0x14000a207
   14000a1a2:	ins    DWORD PTR es:[rdi],dx
   14000a1a3:	rex.W (bad) 
   14000a1a5:	outs   dx,BYTE PTR ds:[rsi]
   14000a1a6:	fs ins BYTE PTR es:[rdi],dx
   14000a1a8:	gs jb  0x14000a1eb
   14000a1ab:	and    al,0x30
   14000a1ae:	rex.B
   14000a1af:	rex
   14000a1b0:	rex push rdi
   14000a1b2:	push   rdx
   14000a1b3:	rex.WR
   14000a1b4:	rex
   14000a1b5:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000a1bd:	je     0x14000a1ff
   14000a1bf:	add    BYTE PTR [rax],al
	...
   14000a1ce:	add    BYTE PTR [rax],al
   14000a1d0:	sub    BYTE PTR [rbp+0x0],ah
   14000a1d3:	rex add DWORD PTR [rax],eax
	...
   14000a1de:	add    BYTE PTR [rax],al
   14000a1e0:	cs (bad) 
   14000a1e2:	push   r14
   14000a1e4:	(bad)  
   14000a1e5:	and    al,0x52
   14000a1e7:	jne    0x14000a257
   14000a1e9:	je     0x14000a254
   14000a1eb:	ins    DWORD PTR es:[rdi],dx
   14000a1ec:	gs rex.XB ins BYTE PTR es:[rdi],dx
   14000a1ef:	(bad)  
   14000a1f0:	jae    0x14000a265
   14000a1f2:	rex push rbp
   14000a1f4:	(bad)  
   14000a1f5:	and    al,0x52
   14000a1f7:	jne    0x14000a267
   14000a1f9:	je     0x14000a264
   14000a1fb:	ins    DWORD PTR es:[rdi],dx
   14000a1fc:	gs rex.XB ins BYTE PTR es:[rdi],dx
   14000a1ff:	(bad)  
   14000a200:	jae    0x14000a275
   14000a202:	rex.RX ins BYTE PTR es:[rdi],dx
   14000a204:	(bad)  
   14000a205:	addr32 jae 0x14000a248
   14000a208:	and    al,0x30
   14000a20a:	xor    DWORD PTR [rax+0x57],eax
   14000a20d:	push   rdx
   14000a20e:	rex.WR
   14000a20f:	rex
   14000a210:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000a218:	je     0x14000a25a
   14000a21a:	rex push rbp
   14000a21c:	rex.WB
   14000a21d:	rex.XB
   14000a21e:	rex.R push rax
   14000a220:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000a222:	ins    DWORD PTR es:[rdi],dx
   14000a223:	push   rdx
   14000a224:	gs ins DWORD PTR es:[rdi],dx
   14000a226:	outs   dx,DWORD PTR ds:[rsi]
   14000a227:	je     0x14000a28e
   14000a229:	push   rsp
   14000a22a:	gs js  0x14000a2a1
   14000a22d:	push   rbx
   14000a22e:	jns    0x14000a2a3
   14000a230:	je     0x14000a297
   14000a232:	ins    DWORD PTR es:[rdi],dx
   14000a233:	rex.W (bad) 
   14000a235:	outs   dx,BYTE PTR ds:[rsi]
   14000a236:	fs ins BYTE PTR es:[rdi],dx
   14000a238:	gs jb  0x14000a27b
   14000a23b:	rex push rsi
   14000a23d:	imul   r13,QWORD PTR [rax+r8*2+0x44],0x69617465
   14000a246:	ins    BYTE PTR es:[rdi],dx
   14000a247:	jae    0x14000a289
   14000a249:	xor    dh,BYTE PTR [rbx]
   14000a24b:	rex push rsi
   14000a24d:	xor    eax,0x40333236
   14000a252:	push   rsi
   14000a253:	xor    eax,0x40333236
   14000a258:	push   rsi
   14000a259:	xor    eax,0x40333236
   14000a25e:	push   rsi
   14000a25f:	xor    eax,0x40333236
   14000a264:	push   rsi
   14000a265:	xor    eax,0x40333236
   14000a26a:	push   rsi
   14000a26b:	xor    eax,0x40333236
   14000a270:	push   rsi
   14000a271:	xor    eax,0x40333236
   14000a276:	rex push rdi
   14000a278:	push   rdx
   14000a279:	rex.WR
   14000a27a:	rex
   14000a27b:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000a283:	je     0x14000a2c5
   14000a285:	add    BYTE PTR [rax],al
	...
   14000a290:	sub    BYTE PTR [rbp+0x0],ah
   14000a293:	rex add DWORD PTR [rax],eax
	...
   14000a29e:	add    BYTE PTR [rax],al
   14000a2a0:	cs (bad) 
   14000a2a2:	push   r14
   14000a2a4:	(bad)  
   14000a2a5:	and    al,0x43
   14000a2a7:	ins    BYTE PTR es:[rdi],dx
   14000a2a8:	(bad)  
   14000a2a9:	jae    0x14000a31e
   14000a2ab:	rex.RX (bad) 
   14000a2ad:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14000a2b1:	jns    0x14000a2f3
   14000a2b3:	push   rsi
   14000a2b4:	imul   r13,QWORD PTR [rax+r8*2+0x44],0x69617465
   14000a2bd:	ins    BYTE PTR es:[rdi],dx
   14000a2be:	jae    0x14000a300
   14000a2c0:	push   rdi
   14000a2c1:	push   rdx
   14000a2c2:	rex.WR
   14000a2c3:	rex
   14000a2c4:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000a2cc:	je     0x14000a30e
   14000a2ce:	rex push rsi
   14000a2d0:	xor    DWORD PTR [rdx],esi
   14000a2d2:	xor    esi,DWORD PTR [rax+rax*2]
   14000a2d5:	push   rsi
   14000a2d6:	xor    DWORD PTR [rdx],esi
   14000a2d8:	xor    esi,DWORD PTR [rax+rax*2]
   14000a2db:	and    al,0x30
   14000a2dd:	rex.B
   14000a2de:	rex
   14000a2df:	rex push rdi
   14000a2e1:	push   rdx
   14000a2e2:	rex.WR
   14000a2e3:	rex
   14000a2e4:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000a2ec:	je     0x14000a32e
   14000a2ee:	add    BYTE PTR [rax],bpl
   14000a2f1:	add    BYTE PTR gs:[rax+0x1],al
	...
   14000a2fd:	add    BYTE PTR [rax],al
   14000a2ff:	add    BYTE PTR [rsi],ch
   14000a301:	(bad)  
   14000a302:	push   r14
   14000a304:	push   rdx
   14000a305:	gs data16 gs jb 0x14000a36f
   14000a30a:	outs   dx,BYTE PTR ds:[rsi]
   14000a30b:	movsxd esp,DWORD PTR [rbp+0x52]
   14000a30e:	gs ins DWORD PTR es:[rdi],dx
   14000a310:	outs   dx,DWORD PTR ds:[rsi]
   14000a311:	je     0x14000a378
   14000a313:	push   rsp
   14000a314:	gs js  0x14000a38b
   14000a317:	push   rbx
   14000a318:	jns    0x14000a38d
   14000a31a:	je     0x14000a381
   14000a31c:	ins    DWORD PTR es:[rdi],dx
   14000a31d:	rex.W (bad) 
   14000a31f:	outs   dx,BYTE PTR ds:[rsi]
   14000a320:	fs ins BYTE PTR es:[rdi],dx
   14000a322:	gs jb  0x14000a365
   14000a325:	add    BYTE PTR [rax],al
   14000a328:	sub    BYTE PTR [rbp+0x0],ah
   14000a32b:	rex add DWORD PTR [rax],eax
	...
   14000a336:	add    BYTE PTR [rax],al
   14000a338:	cs (bad) 
   14000a33a:	push   r13
   14000a33c:	rex.WB
   14000a33d:	rex.XB
   14000a33e:	rex.R push rax
   14000a340:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000a342:	ins    DWORD PTR es:[rdi],dx
   14000a343:	push   rdx
   14000a344:	gs ins DWORD PTR es:[rdi],dx
   14000a346:	outs   dx,DWORD PTR ds:[rsi]
   14000a347:	je     0x14000a3ae
   14000a349:	push   rsp
   14000a34a:	gs js  0x14000a3c1
   14000a34d:	push   rbx
   14000a34e:	jns    0x14000a3c3
   14000a350:	je     0x14000a3b7
   14000a352:	ins    DWORD PTR es:[rdi],dx
   14000a353:	rex.W (bad) 
   14000a355:	outs   dx,BYTE PTR ds:[rsi]
   14000a356:	fs ins BYTE PTR es:[rdi],dx
   14000a358:	gs jb  0x14000a39b
   14000a35b:	add    BYTE PTR [rax],al
   14000a35e:	add    BYTE PTR [rax],al
   14000a360:	sub    BYTE PTR [rbp+0x0],ah
   14000a363:	rex add DWORD PTR [rax],eax
	...
   14000a36e:	add    BYTE PTR [rax],al
   14000a370:	cs (bad) 
   14000a372:	push   r14
   14000a374:	rex.RX (bad) 
   14000a376:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14000a37a:	jns    0x14000a3be
   14000a37c:	(bad)  
   14000a37d:	jae    0x14000a3e4
   14000a37f:	rex
   14000a380:	rex.R
   14000a381:	gs je  0x14000a3e5
   14000a384:	imul   ebp,DWORD PTR [rbx+rsi*2+0x40],0x404c5257
   14000a38c:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000a394:	je     0x14000a3d6
   14000a396:	add    BYTE PTR [rax],al
   14000a399:	add    BYTE PTR [rax],al
   14000a39b:	add    BYTE PTR [rax],al
   14000a39d:	add    BYTE PTR [rax],al
   14000a39f:	add    BYTE PTR [rax],ch
   14000a3a1:	add    BYTE PTR gs:[rax+0x1],al
	...
   14000a3ad:	add    BYTE PTR [rax],al
   14000a3af:	add    BYTE PTR [rsi],ch
   14000a3b1:	(bad)  
   14000a3b2:	push   r13
   14000a3b4:	(bad)  
   14000a3b5:	and    al,0x49
   14000a3b7:	ins    DWORD PTR es:[rdi],dx
   14000a3b8:	jo     0x14000a426
   14000a3ba:	gs ins DWORD PTR es:[rdi],dx
   14000a3bc:	outs   dx,BYTE PTR gs:[rsi]
   14000a3be:	je     0x14000a433
   14000a3c0:	rex.W
   14000a3c1:	gs ins BYTE PTR es:[rdi],dx
   14000a3c3:	jo     0x14000a42a
   14000a3c5:	jb     0x14000a407
   14000a3c7:	push   rbp
   14000a3c8:	(bad)  
   14000a3c9:	and    al,0x52
   14000a3cb:	jne    0x14000a43b
   14000a3cd:	je     0x14000a438
   14000a3cf:	ins    DWORD PTR es:[rdi],dx
   14000a3d0:	gs rex.XB ins BYTE PTR es:[rdi],dx
   14000a3d3:	(bad)  
   14000a3d4:	jae    0x14000a449
   14000a3d6:	rex.RX ins BYTE PTR es:[rdi],dx
   14000a3d8:	(bad)  
   14000a3d9:	addr32 jae 0x14000a41c
   14000a3dc:	and    al,0x30
   14000a3de:	xor    DWORD PTR [rax+0x57],eax
   14000a3e1:	push   rdx
   14000a3e2:	rex.WR
   14000a3e3:	rex
   14000a3e4:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000a3ec:	je     0x14000a42e
   14000a3ee:	rex push rbp
   14000a3f0:	(bad)  
   14000a3f1:	and    al,0x49
   14000a3f3:	outs   dx,BYTE PTR ds:[rsi]
   14000a3f4:	je     0x14000a45b
   14000a3f6:	jb     0x14000a45e
   14000a3f8:	(bad)  
   14000a3f9:	movsxd esp,DWORD PTR [rbp+0x4c]
   14000a3fc:	imul   esi,DWORD PTR [rbx+0x74],0x43495540
   14000a403:	rex.R push rax
   14000a405:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000a407:	ins    DWORD PTR es:[rdi],dx
   14000a408:	rex.B jo 0x14000a47b
   14000a40b:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000a40d:	outs   dx,BYTE PTR ds:[rsi]
   14000a40e:	je     0x14000a482
   14000a410:	outs   dx,DWORD PTR ds:[rsi]
   14000a411:	ins    BYTE PTR es:[rdi],dx
   14000a412:	push   rbx
   14000a413:	jns    0x14000a488
   14000a415:	je     0x14000a47c
   14000a417:	ins    DWORD PTR es:[rdi],dx
   14000a418:	rex.W (bad) 
   14000a41a:	outs   dx,BYTE PTR ds:[rsi]
   14000a41b:	fs ins BYTE PTR es:[rdi],dx
   14000a41d:	gs jb  0x14000a460
   14000a420:	rex push rsi
   14000a422:	imul   r13,QWORD PTR [rax+r8*2+0x44],0x69617465
   14000a42b:	ins    BYTE PTR es:[rdi],dx
   14000a42c:	jae    0x14000a46e
   14000a42e:	push   rdi
   14000a42f:	push   rdx
   14000a430:	rex.WR
   14000a431:	rex
   14000a432:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000a43a:	je     0x14000a47c
   14000a43c:	rex
   14000a43d:	rex
   14000a43e:	rex.R
   14000a43f:	gs je  0x14000a4a3
   14000a442:	imul   ebp,DWORD PTR [rbx+rsi*2+0x40],0x24403332
   14000a44a:	xor    BYTE PTR [rcx+0x40],al
   14000a44d:	and    al,0x30
   14000a44f:	rex.B
   14000a450:	rex
   14000a451:	rex
   14000a452:	rex.R
   14000a453:	gs je  0x14000a4b7
   14000a456:	imul   ebp,DWORD PTR [rbx+rsi*2+0x40],0x404c5257
   14000a45e:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000a466:	je     0x14000a4a8
   14000a468:	add    BYTE PTR [rax],al
   14000a46b:	add    BYTE PTR [rax],al
   14000a46d:	add    BYTE PTR [rax],al
   14000a46f:	add    BYTE PTR [rax],ch
   14000a471:	add    BYTE PTR gs:[rax+0x1],al
	...
   14000a47d:	add    BYTE PTR [rax],al
   14000a47f:	add    BYTE PTR [rsi],ch
   14000a481:	(bad)  
   14000a482:	push   r14
   14000a484:	(bad)  
   14000a485:	and    al,0x48
   14000a487:	(bad)  
   14000a488:	outs   dx,BYTE PTR ds:[rsi]
   14000a489:	fs ins BYTE PTR es:[rdi],dx
   14000a48b:	gs push rsp
   14000a48d:	rex push rbp
   14000a48f:	rex.RB jbe 0x14000a4f7
   14000a492:	outs   dx,BYTE PTR ds:[rsi]
   14000a493:	je     0x14000a4e9
   14000a495:	jb     0x14000a4f8
   14000a497:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x646e6148
   14000a49f:	ins    BYTE PTR es:[rdi],dx
   14000a4a0:	gs push rsp
   14000a4a2:	jb     0x14000a505
   14000a4a4:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x70617257
   14000a4ac:	jo     0x14000a513
   14000a4ae:	jb     0x14000a523
   14000a4b0:	rex push rdi
   14000a4b2:	push   rdx
   14000a4b3:	rex.WR
   14000a4b4:	rex
   14000a4b5:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000a4bd:	je     0x14000a4ff
   14000a4bf:	rex
   14000a4c0:	rex push rdi
   14000a4c2:	jb     0x14000a525
   14000a4c4:	jo     0x14000a536
   14000a4c6:	gs jb  0x14000a53c
   14000a4c9:	rex push rdi
   14000a4cb:	push   rdx
   14000a4cc:	rex.WR
   14000a4cd:	rex
   14000a4ce:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000a4d6:	je     0x14000a518
   14000a4d8:	add    BYTE PTR [rax],al
   14000a4db:	add    BYTE PTR [rax],al
   14000a4dd:	add    BYTE PTR [rax],al
   14000a4df:	add    BYTE PTR [rax],ch
   14000a4e1:	add    BYTE PTR gs:[rax+0x1],al
	...
   14000a4ed:	add    BYTE PTR [rax],al
   14000a4ef:	add    BYTE PTR [rsi],ch
   14000a4f1:	(bad)  
   14000a4f2:	push   r14
   14000a4f4:	pop    rdi
   14000a4f5:	rex.WB outs dx,DWORD PTR ds:[rsi]
   14000a4f7:	jae    0x14000a56d
   14000a4f9:	jb     0x14000a560
   14000a4fb:	(bad)  
   14000a4fc:	ins    DWORD PTR es:[rdi],dx
   14000a4fd:	pop    rdi
   14000a4fe:	gs jb  0x14000a573
   14000a501:	outs   dx,DWORD PTR ds:[rsi]
   14000a502:	jb     0x14000a563
   14000a504:	movsxd esp,DWORD PTR [rcx+0x74]
   14000a507:	outs   dx,DWORD PTR gs:[esi]
   14000a50a:	jb     0x14000a585
   14000a50c:	rex jae 0x14000a583
   14000a50f:	fs rex
   14000a511:	add    BYTE PTR [rax],al
	...
   14000a520:	sub    BYTE PTR [rbp+0x0],ah
   14000a523:	rex add DWORD PTR [rax],eax
	...
   14000a52e:	add    BYTE PTR [rax],al
   14000a530:	cs (bad) 
   14000a532:	push   r14
   14000a534:	(bad)  
   14000a535:	and    al,0x52
   14000a537:	jne    0x14000a5a7
   14000a539:	je     0x14000a5a4
   14000a53b:	ins    DWORD PTR es:[rdi],dx
   14000a53c:	gs rex.XB ins BYTE PTR es:[rdi],dx
   14000a53f:	(bad)  
   14000a540:	jae    0x14000a5b5
   14000a542:	rex push rbp
   14000a544:	(bad)  
   14000a545:	and    al,0x52
   14000a547:	jne    0x14000a5b7
   14000a549:	je     0x14000a5b4
   14000a54b:	ins    DWORD PTR es:[rdi],dx
   14000a54c:	gs rex.XB ins BYTE PTR es:[rdi],dx
   14000a54f:	(bad)  
   14000a550:	jae    0x14000a5c5
   14000a552:	rex.RX ins BYTE PTR es:[rdi],dx
   14000a554:	(bad)  
   14000a555:	addr32 jae 0x14000a598
   14000a558:	and    al,0x30
   14000a55a:	xor    DWORD PTR [rax+0x57],eax
   14000a55d:	push   rdx
   14000a55e:	rex.WR
   14000a55f:	rex
   14000a560:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000a568:	je     0x14000a5aa
   14000a56a:	rex push rbp
   14000a56c:	rex.WB
   14000a56d:	rex.XB
   14000a56e:	rex.R push rax
   14000a570:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000a572:	ins    DWORD PTR es:[rdi],dx
   14000a573:	rex.B jo 0x14000a5e6
   14000a576:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000a578:	outs   dx,BYTE PTR ds:[rsi]
   14000a579:	je     0x14000a5ed
   14000a57b:	outs   dx,DWORD PTR ds:[rsi]
   14000a57c:	ins    BYTE PTR es:[rdi],dx
   14000a57d:	push   rbx
   14000a57e:	jns    0x14000a5f3
   14000a580:	je     0x14000a5e7
   14000a582:	ins    DWORD PTR es:[rdi],dx
   14000a583:	rex.W (bad) 
   14000a585:	outs   dx,BYTE PTR ds:[rsi]
   14000a586:	fs ins BYTE PTR es:[rdi],dx
   14000a588:	gs jb  0x14000a5cb
   14000a58b:	rex push rsi
   14000a58d:	imul   r13,QWORD PTR [rax+r8*2+0x44],0x69617465
   14000a596:	ins    BYTE PTR es:[rdi],dx
   14000a597:	jae    0x14000a5d9
   14000a599:	xor    dh,BYTE PTR [rbx]
   14000a59b:	rex push rsi
   14000a59d:	xor    eax,0x40333236
   14000a5a2:	push   rsi
   14000a5a3:	xor    eax,0x40333236
   14000a5a8:	push   rsi
   14000a5a9:	xor    eax,0x40333236
   14000a5ae:	push   rsi
   14000a5af:	xor    eax,0x40333236
   14000a5b4:	push   rsi
   14000a5b5:	xor    eax,0x40333236
   14000a5ba:	push   rsi
   14000a5bb:	xor    eax,0x40333236
   14000a5c0:	push   rsi
   14000a5c1:	xor    eax,0x40333236
   14000a5c6:	rex push rdi
   14000a5c8:	push   rdx
   14000a5c9:	rex.WR
   14000a5ca:	rex
   14000a5cb:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000a5d3:	je     0x14000a615
   14000a5d5:	add    BYTE PTR [rax],al
	...
   14000a5e0:	sub    BYTE PTR [rbp+0x0],ah
   14000a5e3:	rex add DWORD PTR [rax],eax
	...
   14000a5ee:	add    BYTE PTR [rax],al
   14000a5f0:	cs (bad) 
   14000a5f2:	push   r13
   14000a5f4:	(bad)  
   14000a5f5:	and    al,0x49
   14000a5f7:	ins    DWORD PTR es:[rdi],dx
   14000a5f8:	jo     0x14000a666
   14000a5fa:	gs ins DWORD PTR es:[rdi],dx
   14000a5fc:	outs   dx,BYTE PTR gs:[rsi]
   14000a5fe:	je     0x14000a673
   14000a600:	rex.W
   14000a601:	gs ins BYTE PTR es:[rdi],dx
   14000a603:	jo     0x14000a66a
   14000a605:	jb     0x14000a647
   14000a607:	push   rbp
   14000a608:	(bad)  
   14000a609:	and    al,0x52
   14000a60b:	jne    0x14000a67b
   14000a60d:	je     0x14000a678
   14000a60f:	ins    DWORD PTR es:[rdi],dx
   14000a610:	gs rex.XB ins BYTE PTR es:[rdi],dx
   14000a613:	(bad)  
   14000a614:	jae    0x14000a689
   14000a616:	rex.RX ins BYTE PTR es:[rdi],dx
   14000a618:	(bad)  
   14000a619:	addr32 jae 0x14000a65c
   14000a61c:	and    al,0x30
   14000a61e:	xor    DWORD PTR [rax+0x57],eax
   14000a621:	push   rdx
   14000a622:	rex.WR
   14000a623:	rex
   14000a624:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000a62c:	je     0x14000a66e
   14000a62e:	rex push rbp
   14000a630:	(bad)  
   14000a631:	and    al,0x49
   14000a633:	outs   dx,BYTE PTR ds:[rsi]
   14000a634:	je     0x14000a69b
   14000a636:	jb     0x14000a69e
   14000a638:	(bad)  
   14000a639:	movsxd esp,DWORD PTR [rbp+0x4c]
   14000a63c:	imul   esi,DWORD PTR [rbx+0x74],0x43495540
   14000a643:	rex.R push rax
   14000a645:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000a647:	ins    DWORD PTR es:[rdi],dx
   14000a648:	push   rdx
   14000a649:	gs ins DWORD PTR es:[rdi],dx
   14000a64b:	outs   dx,DWORD PTR ds:[rsi]
   14000a64c:	je     0x14000a6b3
   14000a64e:	push   rsp
   14000a64f:	gs js  0x14000a6c6
   14000a652:	push   rbx
   14000a653:	jns    0x14000a6c8
   14000a655:	je     0x14000a6bc
   14000a657:	ins    DWORD PTR es:[rdi],dx
   14000a658:	rex.W (bad) 
   14000a65a:	outs   dx,BYTE PTR ds:[rsi]
   14000a65b:	fs ins BYTE PTR es:[rdi],dx
   14000a65d:	gs jb  0x14000a6a0
   14000a660:	rex push rsi
   14000a662:	imul   r13,QWORD PTR [rax+r8*2+0x44],0x69617465
   14000a66b:	ins    BYTE PTR es:[rdi],dx
   14000a66c:	jae    0x14000a6ae
   14000a66e:	push   rdi
   14000a66f:	push   rdx
   14000a670:	rex.WR
   14000a671:	rex
   14000a672:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000a67a:	je     0x14000a6bc
   14000a67c:	rex
   14000a67d:	rex
   14000a67e:	rex.R
   14000a67f:	gs je  0x14000a6e3
   14000a682:	imul   ebp,DWORD PTR [rbx+rsi*2+0x40],0x24403332
   14000a68a:	xor    BYTE PTR [rcx+0x40],al
   14000a68d:	and    al,0x30
   14000a68f:	rex.B
   14000a690:	rex
   14000a691:	rex
   14000a692:	rex.R
   14000a693:	gs je  0x14000a6f7
   14000a696:	imul   ebp,DWORD PTR [rbx+rsi*2+0x40],0x404c5257
   14000a69e:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000a6a6:	je     0x14000a6e8
   14000a6a8:	add    BYTE PTR [rax],al
   14000a6ab:	add    BYTE PTR [rax],al
   14000a6ad:	add    BYTE PTR [rax],al
   14000a6af:	add    BYTE PTR [rax],ch
   14000a6b1:	add    BYTE PTR gs:[rax+0x1],al
	...
   14000a6bd:	add    BYTE PTR [rax],al
   14000a6bf:	add    BYTE PTR [rsi],ch
   14000a6c1:	(bad)  
   14000a6c2:	push   r14
   14000a6c4:	rex.RB jbe 0x14000a72c
   14000a6c7:	outs   dx,BYTE PTR ds:[rsi]
   14000a6c8:	je     0x14000a70a
   14000a6ca:	push   rdi
   14000a6cb:	jb     0x14000a72e
   14000a6cd:	jo     0x14000a73f
   14000a6cf:	gs jb  0x14000a745
   14000a6d2:	rex push rdi
   14000a6d4:	push   rdx
   14000a6d5:	rex.WR
   14000a6d6:	rex
   14000a6d7:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000a6df:	je     0x14000a721
   14000a6e1:	add    BYTE PTR [rax],al
	...
   14000a6f0:	sub    BYTE PTR [rbp+0x0],ah
   14000a6f3:	rex add DWORD PTR [rax],eax
	...
   14000a6fe:	add    BYTE PTR [rax],al
   14000a700:	cs (bad) 
   14000a702:	push   r14
   14000a704:	push   rdx
   14000a705:	gs ins BYTE PTR es:[rdi],dx
   14000a707:	gs (bad) 
   14000a709:	jae    0x14000a770
   14000a70b:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14000a70d:	je     0x14000a778
   14000a70f:	imul   sp,WORD PTR [rbp+0x72],0x3f40
   14000a715:	and    al,0x4f
   14000a717:	jne    0x14000a78d
   14000a719:	rex.WRXB
   14000a71a:	push   ax
   14000a71c:	jb     0x14000a78d
   14000a71e:	movsxd ecx,DWORD PTR [rbp+0x6f]
   14000a721:	fs jne 0x14000a790
   14000a724:	gs rex.X (bad) 
   14000a727:	jae    0x14000a78e
   14000a729:	rex push rsi
   14000a72b:	rex.WRB jne 0x14000a79a
   14000a72e:	je     0x14000a799
   14000a730:	push   rbp
   14000a731:	jae    0x14000a798
   14000a733:	rex.WRXB jne 0x14000a7aa
   14000a736:	rex.WRXB
   14000a737:	push   ax
   14000a739:	jb     0x14000a7aa
   14000a73b:	movsxd ecx,DWORD PTR [rbp+0x6f]
   14000a73e:	fs jne 0x14000a7ad
   14000a741:	gs rex
   14000a743:	rex
   14000a744:	rex
   14000a745:	rex.R
   14000a746:	gs je  0x14000a7aa
   14000a749:	imul   ebp,DWORD PTR [rbx+rsi*2+0x40],0x404c5257
   14000a751:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000a759:	je     0x14000a79b
   14000a75b:	add    BYTE PTR [rax],al
   14000a75e:	add    BYTE PTR [rax],al
   14000a760:	sub    BYTE PTR [rbp+0x0],ah
   14000a763:	rex add DWORD PTR [rax],eax
	...
   14000a76e:	add    BYTE PTR [rax],al
   14000a770:	cs (bad) 
   14000a772:	push   r14
   14000a774:	(bad)  
   14000a775:	and    al,0x52
   14000a777:	jne    0x14000a7e7
   14000a779:	je     0x14000a7e4
   14000a77b:	ins    DWORD PTR es:[rdi],dx
   14000a77c:	gs rex.XB ins BYTE PTR es:[rdi],dx
   14000a77f:	(bad)  
   14000a780:	jae    0x14000a7f5
   14000a782:	rex.X (bad) 
   14000a784:	jae    0x14000a7eb
   14000a786:	push   rsp
   14000a787:	and    al,0x30
   14000a78a:	xor    DWORD PTR [rax+0x44],eax
   14000a78d:	gs je  0x14000a7f1
   14000a790:	imul   ebp,DWORD PTR [rbx+rsi*2+0x40],0x404c5257
   14000a798:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000a7a0:	je     0x14000a7e2
   14000a7a2:	add    BYTE PTR [rax],al
   14000a7a5:	add    BYTE PTR [rax],al
   14000a7a7:	add    BYTE PTR [rax],ch
   14000a7a9:	add    BYTE PTR gs:[rax+0x1],al
	...
   14000a7b5:	add    BYTE PTR [rax],al
   14000a7b7:	add    BYTE PTR [rsi],ch
   14000a7b9:	(bad)  
   14000a7ba:	push   r14
   14000a7bc:	push   rdx
   14000a7bd:	jne    0x14000a82d
   14000a7bf:	je     0x14000a82a
   14000a7c1:	ins    DWORD PTR es:[rdi],dx
   14000a7c2:	gs rex.XB ins BYTE PTR es:[rdi],dx
   14000a7c5:	(bad)  
   14000a7c6:	jae    0x14000a83b
   14000a7c8:	rex.X (bad) 
   14000a7ca:	jae    0x14000a831
   14000a7cc:	rex
   14000a7cd:	rex.R
   14000a7ce:	gs je  0x14000a832
   14000a7d1:	imul   ebp,DWORD PTR [rbx+rsi*2+0x40],0x404c5257
   14000a7d9:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000a7e1:	je     0x14000a823
   14000a7e3:	add    BYTE PTR [rax],al
	...
   14000a7ee:	add    BYTE PTR [rax],al
   14000a7f0:	sub    BYTE PTR [rbp+0x0],ah
   14000a7f3:	rex add DWORD PTR [rax],eax
	...
   14000a7fe:	add    BYTE PTR [rax],al
   14000a800:	cs (bad) 
   14000a802:	push   r14
   14000a804:	(bad)  
   14000a805:	and    al,0x4d
   14000a807:	outs   dx,DWORD PTR ds:[rsi]
   14000a808:	fs jne 0x14000a877
   14000a80b:	gs and al,0x30
   14000a80f:	xor    DWORD PTR [rsi+0x4d],edx
   14000a812:	jne    0x14000a880
   14000a814:	je     0x14000a87f
   14000a816:	push   rbp
   14000a817:	jae    0x14000a87e
   14000a819:	rex.WRXB jne 0x14000a890
   14000a81c:	rex.WRXB
   14000a81d:	push   ax
   14000a81f:	jb     0x14000a890
   14000a821:	movsxd ecx,DWORD PTR [rbp+0x6f]
   14000a824:	fs jne 0x14000a893
   14000a827:	gs rex
   14000a829:	rex
   14000a82a:	rex push rdi
   14000a82c:	push   rdx
   14000a82d:	rex.WR
   14000a82e:	rex
   14000a82f:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000a837:	je     0x14000a879
   14000a839:	add    BYTE PTR [rax],al
   14000a83c:	add    BYTE PTR [rax],al
   14000a83e:	add    BYTE PTR [rax],al
   14000a840:	sub    BYTE PTR [rbp+0x0],ah
   14000a843:	rex add DWORD PTR [rax],eax
	...
   14000a84e:	add    BYTE PTR [rax],al
   14000a850:	cs (bad) 
   14000a852:	push   r14
   14000a854:	pop    rdi
   14000a855:	push   rbx
   14000a856:	jns    0x14000a8cb
   14000a858:	je     0x14000a8bf
   14000a85a:	ins    DWORD PTR es:[rdi],dx
   14000a85b:	pop    rdi
   14000a85c:	gs jb  0x14000a8d1
   14000a85f:	outs   dx,DWORD PTR ds:[rsi]
   14000a860:	jb     0x14000a8c1
   14000a862:	movsxd esp,DWORD PTR [rcx+0x74]
   14000a865:	outs   dx,DWORD PTR gs:[esi]
   14000a868:	jb     0x14000a8e3
   14000a86a:	rex jae 0x14000a8e1
   14000a86d:	fs rex
   14000a86f:	add    BYTE PTR [rax],al
   14000a872:	add    BYTE PTR [rax],al
   14000a874:	add    BYTE PTR [rax],al
   14000a876:	add    BYTE PTR [rax],al
   14000a878:	sub    BYTE PTR [rbp+0x0],ah
   14000a87b:	rex add DWORD PTR [rax],eax
	...
   14000a886:	add    BYTE PTR [rax],al
   14000a888:	cs (bad) 
   14000a88a:	push   r14
   14000a88c:	push   rdx
   14000a88d:	gs data16 gs jb 0x14000a8f7
   14000a892:	outs   dx,BYTE PTR ds:[rsi]
   14000a893:	movsxd esp,DWORD PTR [rbp+0x41]
   14000a896:	jo     0x14000a908
   14000a898:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000a89a:	outs   dx,BYTE PTR ds:[rsi]
   14000a89b:	je     0x14000a90f
   14000a89d:	outs   dx,DWORD PTR ds:[rsi]
   14000a89e:	ins    BYTE PTR es:[rdi],dx
   14000a89f:	push   rbx
   14000a8a0:	jns    0x14000a915
   14000a8a2:	je     0x14000a909
   14000a8a4:	ins    DWORD PTR es:[rdi],dx
   14000a8a5:	rex.W (bad) 
   14000a8a7:	outs   dx,BYTE PTR ds:[rsi]
   14000a8a8:	fs ins BYTE PTR es:[rdi],dx
   14000a8aa:	gs jb  0x14000a8ed
   14000a8ad:	add    BYTE PTR [rax],al
   14000a8b0:	sub    BYTE PTR [rbp+0x0],ah
   14000a8b3:	rex add DWORD PTR [rax],eax
	...
   14000a8be:	add    BYTE PTR [rax],al
   14000a8c0:	cs (bad) 
   14000a8c2:	push   r14
   14000a8c4:	(bad)  
   14000a8c5:	and    al,0x52
   14000a8c7:	jne    0x14000a937
   14000a8c9:	je     0x14000a934
   14000a8cb:	ins    DWORD PTR es:[rdi],dx
   14000a8cc:	gs rex.XB ins BYTE PTR es:[rdi],dx
   14000a8cf:	(bad)  
   14000a8d0:	jae    0x14000a945
   14000a8d2:	rex.X (bad) 
   14000a8d4:	jae    0x14000a93b
   14000a8d6:	push   rsp
   14000a8d7:	and    al,0x30
   14000a8da:	xor    eax,0x74654440
   14000a8df:	(bad)  
   14000a8e0:	imul   ebp,DWORD PTR [rbx+rsi*2+0x40],0x404c5257
   14000a8e8:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000a8f0:	je     0x14000a932
   14000a8f2:	add    BYTE PTR [rax],al
   14000a8f5:	add    BYTE PTR [rax],al
   14000a8f7:	add    BYTE PTR [rax],ch
   14000a8f9:	add    BYTE PTR gs:[rax+0x1],al
	...
   14000a905:	add    BYTE PTR [rax],al
   14000a907:	add    BYTE PTR [rsi],ch
   14000a909:	(bad)  
   14000a90a:	push   r13
   14000a90c:	rex.WB
   14000a90d:	rex.XB ins BYTE PTR es:[rdi],dx
   14000a90f:	(bad)  
   14000a910:	jae    0x14000a985
   14000a912:	rex.RX (bad) 
   14000a914:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14000a918:	jns    0x14000a95a
   14000a91a:	add    BYTE PTR [rax],al
   14000a91d:	add    BYTE PTR [rax],al
   14000a91f:	add    BYTE PTR [rax],ch
   14000a921:	add    BYTE PTR gs:[rax+0x1],al
	...
   14000a92d:	add    BYTE PTR [rax],al
   14000a92f:	add    BYTE PTR [rsi],ch
   14000a931:	(bad)  
   14000a932:	push   r14
   14000a934:	(bad)  
   14000a935:	and    al,0x53
   14000a937:	imul   ebp,DWORD PTR [rbp+0x70],0x6c43656c
   14000a93e:	(bad)  
   14000a93f:	jae    0x14000a9b4
   14000a941:	rex.RX (bad) 
   14000a943:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14000a947:	jns    0x14000a989
   14000a949:	push   rsi
   14000a94a:	push   rdx
   14000a94b:	gs data16 gs jb 0x14000a9b5
   14000a950:	outs   dx,BYTE PTR ds:[rsi]
   14000a951:	movsxd esp,DWORD PTR [rbp+0x41]
   14000a954:	jo     0x14000a9c6
   14000a956:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000a958:	outs   dx,BYTE PTR ds:[rsi]
   14000a959:	je     0x14000a9cd
   14000a95b:	outs   dx,DWORD PTR ds:[rsi]
   14000a95c:	ins    BYTE PTR es:[rdi],dx
   14000a95d:	push   rbx
   14000a95e:	jns    0x14000a9d3
   14000a960:	je     0x14000a9c7
   14000a962:	ins    DWORD PTR es:[rdi],dx
   14000a963:	rex.W (bad) 
   14000a965:	outs   dx,BYTE PTR ds:[rsi]
   14000a966:	fs ins BYTE PTR es:[rdi],dx
   14000a968:	gs jb  0x14000a9ab
   14000a96b:	and    al,0x30
   14000a96e:	rex.B
   14000a96f:	rex
   14000a970:	rex push rdi
   14000a972:	push   rdx
   14000a973:	rex.WR
   14000a974:	rex
   14000a975:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000a97d:	je     0x14000a9bf
   14000a97f:	add    BYTE PTR [rax],al
	...
   14000a98e:	add    BYTE PTR [rax],al
   14000a990:	sub    BYTE PTR [rbp+0x0],ah
   14000a993:	rex add DWORD PTR [rax],eax
	...
   14000a99e:	add    BYTE PTR [rax],al
   14000a9a0:	cs (bad) 
   14000a9a2:	push   r14
   14000a9a4:	(bad)  
   14000a9a5:	and    al,0x47
   14000a9a7:	outs   dx,BYTE PTR gs:[rsi]
   14000a9a9:	gs jb  0x14000aa15
   14000a9ac:	movsxd edx,DWORD PTR [rdx+0x65]
   14000a9af:	ins    BYTE PTR es:[rdi],dx
   14000a9b0:	gs (bad) 
   14000a9b2:	jae    0x14000aa19
   14000a9b4:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14000a9b6:	je     0x14000aa21
   14000a9b8:	imul   sp,WORD PTR [rbp+0x72],0x5640
   14000a9be:	cmp    al,0x6c
   14000a9c0:	(bad)  
   14000a9c1:	ins    DWORD PTR es:[rdi],dx
   14000a9c2:	(bad)  
   14000a9c3:	fs (bad) 
   14000a9c5:	pop    rdi
   14000a9c6:	(bad)  
   14000a9c7:	fs data16 (bad) 
   14000a9ca:	xor    al,0x66
   14000a9cc:	(bad)  
   14000a9cd:	xor    DWORD PTR [rax],esi
   14000a9cf:	movsxd esp,DWORD PTR fs:[rdx+0x35]
   14000a9d3:	cmp    DWORD PTR [rbx+0x37],esp
   14000a9d6:	xor    bh,BYTE PTR [rax]
   14000a9d8:	xor    esi,DWORD PTR [rax+rdi*1]
   14000a9db:	xor    esp,DWORD PTR gs:[rsi+0x33]
   14000a9df:	cmp    DWORD PTR [rsi],esi
   14000a9e1:	xor    esp,DWORD PTR [rbx+0x36]
   14000a9e4:	(bad)  
   14000a9e5:	data16 ds rex
   14000a9e8:	rex
   14000a9e9:	rex (bad) 
   14000a9eb:	and    al,0x4f
   14000a9ed:	jne    0x14000aa63
   14000a9ef:	rex.WRXB
   14000a9f0:	push   ax
   14000a9f2:	jb     0x14000aa63
   14000a9f4:	movsxd ecx,DWORD PTR [rbp+0x6f]
   14000a9f7:	fs jne 0x14000aa66
   14000a9fa:	gs rex.X (bad) 
   14000a9fd:	jae    0x14000aa64
   14000a9ff:	rex push rsi
   14000aa01:	rex.WRB jne 0x14000aa70
   14000aa04:	je     0x14000aa6f
   14000aa06:	push   rbp
   14000aa07:	jae    0x14000aa6e
   14000aa09:	rex.WRXB jne 0x14000aa80
   14000aa0c:	rex.WRXB
   14000aa0d:	push   ax
   14000aa0f:	jb     0x14000aa80
   14000aa11:	movsxd ecx,DWORD PTR [rbp+0x6f]
   14000aa14:	fs jne 0x14000aa83
   14000aa17:	gs rex
   14000aa19:	rex
   14000aa1a:	rex
   14000aa1b:	rex.R
   14000aa1c:	gs je  0x14000aa80
   14000aa1f:	imul   ebp,DWORD PTR [rbx+rsi*2+0x40],0x404c5257
   14000aa27:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000aa2f:	je     0x14000aa71
   14000aa31:	add    BYTE PTR [rax],al
   14000aa34:	add    BYTE PTR [rax],al
   14000aa36:	add    BYTE PTR [rax],al
   14000aa38:	sub    BYTE PTR [rbp+0x0],ah
   14000aa3b:	rex add DWORD PTR [rax],eax
	...
   14000aa46:	add    BYTE PTR [rax],al
   14000aa48:	cs (bad) 
   14000aa4a:	push   r14
   14000aa4c:	rex.WRB jne 0x14000aabb
   14000aa4f:	je     0x14000aaba
   14000aa51:	push   rbp
   14000aa52:	jae    0x14000aab9
   14000aa54:	rex.WRXB jne 0x14000aacb
   14000aa57:	rex.WRXB
   14000aa58:	push   ax
   14000aa5a:	jb     0x14000aacb
   14000aa5c:	movsxd ecx,DWORD PTR [rbp+0x6f]
   14000aa5f:	fs jne 0x14000aace
   14000aa62:	gs rex
   14000aa64:	add    BYTE PTR [rax],al
	...
   14000aa6f:	add    BYTE PTR [rax],ch
   14000aa71:	add    BYTE PTR gs:[rax+0x1],al
	...
   14000aa7d:	add    BYTE PTR [rax],al
   14000aa7f:	add    BYTE PTR [rsi],ch
   14000aa81:	(bad)  
   14000aa82:	push   r14
   14000aa84:	(bad)  
   14000aa85:	and    al,0x52
   14000aa87:	jne    0x14000aaf7
   14000aa89:	je     0x14000aaf4
   14000aa8b:	ins    DWORD PTR es:[rdi],dx
   14000aa8c:	gs rex.XB ins BYTE PTR es:[rdi],dx
   14000aa8f:	(bad)  
   14000aa90:	jae    0x14000ab05
   14000aa92:	rex push rbp
   14000aa94:	(bad)  
   14000aa95:	and    al,0x49
   14000aa97:	outs   dx,BYTE PTR ds:[rsi]
   14000aa98:	je     0x14000aaff
   14000aa9a:	jb     0x14000ab02
   14000aa9c:	(bad)  
   14000aa9d:	movsxd esp,DWORD PTR [rbp+0x4c]
   14000aaa0:	imul   esi,DWORD PTR [rbx+0x74],0x43495540
   14000aaa7:	ins    BYTE PTR es:[rdi],dx
   14000aaa8:	(bad)  
   14000aaa9:	jae    0x14000ab1e
   14000aaab:	rex.RX (bad) 
   14000aaad:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14000aab1:	jns    0x14000aaf3
   14000aab3:	rex push rsi
   14000aab5:	imul   r13,QWORD PTR [rax+r8*2+0x44],0x69617465
   14000aabe:	ins    BYTE PTR es:[rdi],dx
   14000aabf:	jae    0x14000ab01
   14000aac1:	push   rdi
   14000aac2:	push   rdx
   14000aac3:	rex.WR
   14000aac4:	rex
   14000aac5:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000aacd:	je     0x14000ab0f
   14000aacf:	rex
   14000aad0:	rex
   14000aad1:	rex.R
   14000aad2:	gs je  0x14000ab36
   14000aad5:	imul   ebp,DWORD PTR [rbx+rsi*2+0x40],0x404c5257
   14000aadd:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000aae5:	je     0x14000ab27
   14000aae7:	rex push rbp
   14000aae9:	(bad)  
   14000aaea:	and    al,0x52
   14000aaec:	jne    0x14000ab5c
   14000aaee:	je     0x14000ab59
   14000aaf0:	ins    DWORD PTR es:[rdi],dx
   14000aaf1:	gs rex.XB ins BYTE PTR es:[rdi],dx
   14000aaf4:	(bad)  
   14000aaf5:	jae    0x14000ab6a
   14000aaf7:	rex.RX ins BYTE PTR es:[rdi],dx
   14000aaf9:	(bad)  
   14000aafa:	addr32 jae 0x14000ab3d
   14000aafd:	and    al,0x30
   14000aaff:	xor    eax,0x40343340
   14000ab04:	and    al,0x30
   14000ab06:	rex.B
   14000ab07:	and    al,0x30
   14000ab0a:	rex.B
   14000ab0b:	and    al,0x30
   14000ab0e:	rex.B
   14000ab0f:	rex
   14000ab10:	rex
   14000ab11:	rex.R
   14000ab12:	gs je  0x14000ab76
   14000ab15:	imul   ebp,DWORD PTR [rbx+rsi*2+0x40],0x404c5257
   14000ab1d:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000ab25:	je     0x14000ab67
   14000ab27:	add    BYTE PTR [rax],al
   14000ab2a:	add    BYTE PTR [rax],al
   14000ab2c:	add    BYTE PTR [rax],al
   14000ab2e:	add    BYTE PTR [rax],al
   14000ab30:	sub    BYTE PTR [rbp+0x0],ah
   14000ab33:	rex add DWORD PTR [rax],eax
	...
   14000ab3e:	add    BYTE PTR [rax],al
   14000ab40:	cs (bad) 
   14000ab42:	push   r14
   14000ab44:	(bad)  
   14000ab45:	and    al,0x52
   14000ab47:	jne    0x14000abb7
   14000ab49:	je     0x14000abb4
   14000ab4b:	ins    DWORD PTR es:[rdi],dx
   14000ab4c:	gs rex.XB ins BYTE PTR es:[rdi],dx
   14000ab4f:	(bad)  
   14000ab50:	jae    0x14000abc5
   14000ab52:	rex push rbp
   14000ab54:	(bad)  
   14000ab55:	and    al,0x49
   14000ab57:	outs   dx,BYTE PTR ds:[rsi]
   14000ab58:	je     0x14000abbf
   14000ab5a:	jb     0x14000abc2
   14000ab5c:	(bad)  
   14000ab5d:	movsxd esp,DWORD PTR [rbp+0x4c]
   14000ab60:	imul   esi,DWORD PTR [rbx+0x74],0x43495540
   14000ab67:	rex.R push rax
   14000ab69:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000ab6b:	ins    DWORD PTR es:[rdi],dx
   14000ab6c:	rex.B jo 0x14000abdf
   14000ab6f:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000ab71:	outs   dx,BYTE PTR ds:[rsi]
   14000ab72:	je     0x14000abe6
   14000ab74:	outs   dx,DWORD PTR ds:[rsi]
   14000ab75:	ins    BYTE PTR es:[rdi],dx
   14000ab76:	push   rbx
   14000ab77:	jns    0x14000abec
   14000ab79:	je     0x14000abe0
   14000ab7b:	ins    DWORD PTR es:[rdi],dx
   14000ab7c:	rex.W (bad) 
   14000ab7e:	outs   dx,BYTE PTR ds:[rsi]
   14000ab7f:	fs ins BYTE PTR es:[rdi],dx
   14000ab81:	gs jb  0x14000abc4
   14000ab84:	rex push rsi
   14000ab86:	imul   r13,QWORD PTR [rax+r8*2+0x44],0x69617465
   14000ab8f:	ins    BYTE PTR es:[rdi],dx
   14000ab90:	jae    0x14000abd2
   14000ab92:	push   rdi
   14000ab93:	push   rdx
   14000ab94:	rex.WR
   14000ab95:	rex
   14000ab96:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000ab9e:	je     0x14000abe0
   14000aba0:	rex
   14000aba1:	rex
   14000aba2:	rex.R
   14000aba3:	gs je  0x14000ac07
   14000aba6:	imul   ebp,DWORD PTR [rbx+rsi*2+0x40],0x404c5257
   14000abae:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000abb6:	je     0x14000abf8
   14000abb8:	rex push rbp
   14000abba:	(bad)  
   14000abbb:	and    al,0x52
   14000abbd:	jne    0x14000ac2d
   14000abbf:	je     0x14000ac2a
   14000abc1:	ins    DWORD PTR es:[rdi],dx
   14000abc2:	gs rex.XB ins BYTE PTR es:[rdi],dx
   14000abc5:	(bad)  
   14000abc6:	jae    0x14000ac3b
   14000abc8:	rex.RX ins BYTE PTR es:[rdi],dx
   14000abca:	(bad)  
   14000abcb:	addr32 jae 0x14000ac0e
   14000abce:	and    al,0x30
   14000abd0:	xor    DWORD PTR [rax+0x33],eax
   14000abd3:	xor    al,0x40
   14000abd5:	and    al,0x30
   14000abd7:	xor    BYTE PTR [rax+rsi*1],ah
   14000abda:	rex.B
   14000abdb:	and    al,0x30
   14000abde:	rex.B
   14000abdf:	rex
   14000abe0:	rex
   14000abe1:	rex.R
   14000abe2:	gs je  0x14000ac46
   14000abe5:	imul   ebp,DWORD PTR [rbx+rsi*2+0x40],0x404c5257
   14000abed:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000abf5:	je     0x14000ac37
   14000abf7:	add    BYTE PTR [rax],al
   14000abfa:	add    BYTE PTR [rax],al
   14000abfc:	add    BYTE PTR [rax],al
   14000abfe:	add    BYTE PTR [rax],al
   14000ac00:	sub    BYTE PTR [rbp+0x0],ah
   14000ac03:	rex add DWORD PTR [rax],eax
	...
   14000ac0e:	add    BYTE PTR [rax],al
   14000ac10:	cs (bad) 
   14000ac12:	push   r14
   14000ac14:	gs jb  0x14000ac89
   14000ac17:	outs   dx,DWORD PTR ds:[rsi]
   14000ac18:	jb     0x14000ac79
   14000ac1a:	movsxd esp,DWORD PTR [rcx+0x74]
   14000ac1d:	outs   dx,DWORD PTR gs:[esi]
   14000ac20:	jb     0x14000ac9b
   14000ac22:	rex jae 0x14000ac99
   14000ac25:	fs rex
   14000ac27:	add    BYTE PTR [rax],al
   14000ac2a:	add    BYTE PTR [rax],al
   14000ac2c:	add    BYTE PTR [rax],al
   14000ac2e:	add    BYTE PTR [rax],al
   14000ac30:	sub    BYTE PTR [rbp+0x0],ah
   14000ac33:	rex add DWORD PTR [rax],eax
	...
   14000ac3e:	add    BYTE PTR [rax],al
   14000ac40:	cs (bad) 
   14000ac42:	push   r13
   14000ac44:	rex.WB push r13
   14000ac46:	outs   dx,BYTE PTR ds:[rsi]
   14000ac47:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   14000ac4b:	outs   dx,BYTE PTR ds:[rsi]
   14000ac4c:	rex
   14000ac4d:	add    BYTE PTR [rax],al
   14000ac50:	sub    BYTE PTR [rbp+0x0],ah
   14000ac53:	rex add DWORD PTR [rax],eax
	...
   14000ac5e:	add    BYTE PTR [rax],al
   14000ac60:	cs (bad) 
   14000ac62:	push   r13
   14000ac64:	(bad)  
   14000ac65:	and    al,0x49
   14000ac67:	ins    DWORD PTR es:[rdi],dx
   14000ac68:	jo     0x14000acd6
   14000ac6a:	gs ins DWORD PTR es:[rdi],dx
   14000ac6c:	outs   dx,BYTE PTR gs:[rsi]
   14000ac6e:	je     0x14000ace3
   14000ac70:	rex.W
   14000ac71:	gs ins BYTE PTR es:[rdi],dx
   14000ac73:	jo     0x14000acda
   14000ac75:	jb     0x14000acb7
   14000ac77:	push   rbp
   14000ac78:	(bad)  
   14000ac79:	and    al,0x52
   14000ac7b:	jne    0x14000aceb
   14000ac7d:	je     0x14000ace8
   14000ac7f:	ins    DWORD PTR es:[rdi],dx
   14000ac80:	gs rex.XB ins BYTE PTR es:[rdi],dx
   14000ac83:	(bad)  
   14000ac84:	jae    0x14000acf9
   14000ac86:	rex.RX ins BYTE PTR es:[rdi],dx
   14000ac88:	(bad)  
   14000ac89:	addr32 jae 0x14000accc
   14000ac8c:	and    al,0x30
   14000ac8e:	xor    eax,0x4c525740
   14000ac93:	rex
   14000ac94:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000ac9c:	je     0x14000acde
   14000ac9e:	rex push rbp
   14000aca0:	(bad)  
   14000aca1:	and    al,0x49
   14000aca3:	outs   dx,BYTE PTR ds:[rsi]
   14000aca4:	je     0x14000ad0b
   14000aca6:	jb     0x14000ad0e
   14000aca8:	(bad)  
   14000aca9:	movsxd esp,DWORD PTR [rbp+0x4c]
   14000acac:	imul   esi,DWORD PTR [rbx+0x74],0x43495540
   14000acb3:	ins    BYTE PTR es:[rdi],dx
   14000acb4:	(bad)  
   14000acb5:	jae    0x14000ad2a
   14000acb7:	rex.RX (bad) 
   14000acb9:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14000acbd:	jns    0x14000acff
   14000acbf:	rex push rsi
   14000acc1:	imul   r13,QWORD PTR [rax+r8*2+0x44],0x69617465
   14000acca:	ins    BYTE PTR es:[rdi],dx
   14000accb:	jae    0x14000ad0d
   14000accd:	push   rdi
   14000acce:	push   rdx
   14000accf:	rex.WR
   14000acd0:	rex
   14000acd1:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000acd9:	je     0x14000ad1b
   14000acdb:	rex
   14000acdc:	rex
   14000acdd:	rex.R
   14000acde:	gs je  0x14000ad42
   14000ace1:	imul   ebp,DWORD PTR [rbx+rsi*2+0x40],0x24403332
   14000ace9:	xor    BYTE PTR [rcx+0x40],al
   14000acec:	and    al,0x30
   14000acee:	rex.B
   14000acef:	rex
   14000acf0:	rex
   14000acf1:	rex.R
   14000acf2:	gs je  0x14000ad56
   14000acf5:	imul   ebp,DWORD PTR [rbx+rsi*2+0x40],0x404c5257
   14000acfd:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000ad05:	je     0x14000ad47
   14000ad07:	add    BYTE PTR [rax],al
   14000ad0a:	add    BYTE PTR [rax],al
   14000ad0c:	add    BYTE PTR [rax],al
   14000ad0e:	add    BYTE PTR [rax],al
   14000ad10:	sub    BYTE PTR [rbp+0x0],ah
   14000ad13:	rex add DWORD PTR [rax],eax
	...
   14000ad1e:	add    BYTE PTR [rax],al
   14000ad20:	cs (bad) 
   14000ad22:	push   r14
   14000ad24:	pop    rdi
   14000ad25:	rex.RXB
   14000ad26:	outs   dx,BYTE PTR gs:[rsi]
   14000ad28:	gs jb  0x14000ad94
   14000ad2b:	movsxd ebx,DWORD PTR [rdi+0x65]
   14000ad2e:	jb     0x14000ada2
   14000ad30:	outs   dx,DWORD PTR ds:[rsi]
   14000ad31:	jb     0x14000ad92
   14000ad33:	movsxd esp,DWORD PTR [rcx+0x74]
   14000ad36:	outs   dx,DWORD PTR gs:[esi]
   14000ad39:	jb     0x14000adb4
   14000ad3b:	rex jae 0x14000adb2
   14000ad3e:	fs rex
   14000ad40:	add    BYTE PTR [rax],al
   14000ad43:	add    BYTE PTR [rax],al
   14000ad45:	add    BYTE PTR [rax],al
   14000ad47:	add    BYTE PTR [rax],ch
   14000ad49:	add    BYTE PTR gs:[rax+0x1],al
	...
   14000ad55:	add    BYTE PTR [rax],al
   14000ad57:	add    BYTE PTR [rsi],ch
   14000ad59:	(bad)  
   14000ad5a:	push   r13
   14000ad5c:	(bad)  
   14000ad5d:	and    al,0x52
   14000ad5f:	jne    0x14000adcf
   14000ad61:	je     0x14000adcc
   14000ad63:	ins    DWORD PTR es:[rdi],dx
   14000ad64:	gs rex.XB ins BYTE PTR es:[rdi],dx
   14000ad67:	(bad)  
   14000ad68:	jae    0x14000addd
   14000ad6a:	rex.RX ins BYTE PTR es:[rdi],dx
   14000ad6c:	(bad)  
   14000ad6d:	addr32 jae 0x14000adb0
   14000ad70:	and    al,0x30
   14000ad72:	xor    eax,DWORD PTR [rax+0x57]
   14000ad75:	push   rdx
   14000ad76:	rex.WR
   14000ad77:	rex
   14000ad78:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000ad80:	je     0x14000adc2
   14000ad82:	add    BYTE PTR [rax],al
	...
   14000ad8d:	add    BYTE PTR [rax],al
   14000ad8f:	add    BYTE PTR [rax],ch
   14000ad91:	add    BYTE PTR gs:[rax+0x1],al
	...
   14000ad9d:	add    BYTE PTR [rax],al
   14000ad9f:	add    BYTE PTR [rsi],ch
   14000ada1:	(bad)  
   14000ada2:	push   r14
   14000ada4:	(bad)  
   14000ada5:	and    al,0x52
   14000ada7:	jne    0x14000ae17
   14000ada9:	je     0x14000ae14
   14000adab:	ins    DWORD PTR es:[rdi],dx
   14000adac:	gs rex.XB ins BYTE PTR es:[rdi],dx
   14000adaf:	(bad)  
   14000adb0:	jae    0x14000ae25
   14000adb2:	rex push rbp
   14000adb4:	(bad)  
   14000adb5:	and    al,0x49
   14000adb7:	outs   dx,BYTE PTR ds:[rsi]
   14000adb8:	je     0x14000ae1f
   14000adba:	jb     0x14000ae22
   14000adbc:	(bad)  
   14000adbd:	movsxd esp,DWORD PTR [rbp+0x4c]
   14000adc0:	imul   esi,DWORD PTR [rbx+0x74],0x43495540
   14000adc7:	rex.R push rax
   14000adc9:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000adcb:	ins    DWORD PTR es:[rdi],dx
   14000adcc:	push   rdx
   14000adcd:	gs ins DWORD PTR es:[rdi],dx
   14000adcf:	outs   dx,DWORD PTR ds:[rsi]
   14000add0:	je     0x14000ae37
   14000add2:	push   rsp
   14000add3:	gs js  0x14000ae4a
   14000add6:	push   rbx
   14000add7:	jns    0x14000ae4c
   14000add9:	je     0x14000ae40
   14000addb:	ins    DWORD PTR es:[rdi],dx
   14000addc:	rex.W (bad) 
   14000adde:	outs   dx,BYTE PTR ds:[rsi]
   14000addf:	fs ins BYTE PTR es:[rdi],dx
   14000ade1:	gs jb  0x14000ae24
   14000ade4:	rex push rsi
   14000ade6:	imul   r13,QWORD PTR [rax+r8*2+0x44],0x69617465
   14000adef:	ins    BYTE PTR es:[rdi],dx
   14000adf0:	jae    0x14000ae32
   14000adf2:	push   rdi
   14000adf3:	push   rdx
   14000adf4:	rex.WR
   14000adf5:	rex
   14000adf6:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000adfe:	je     0x14000ae40
   14000ae00:	rex
   14000ae01:	rex
   14000ae02:	rex.R
   14000ae03:	gs je  0x14000ae67
   14000ae06:	imul   ebp,DWORD PTR [rbx+rsi*2+0x40],0x404c5257
   14000ae0e:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000ae16:	je     0x14000ae58
   14000ae18:	rex push rbp
   14000ae1a:	(bad)  
   14000ae1b:	and    al,0x52
   14000ae1d:	jne    0x14000ae8d
   14000ae1f:	je     0x14000ae8a
   14000ae21:	ins    DWORD PTR es:[rdi],dx
   14000ae22:	gs rex.XB ins BYTE PTR es:[rdi],dx
   14000ae25:	(bad)  
   14000ae26:	jae    0x14000ae9b
   14000ae28:	rex.RX ins BYTE PTR es:[rdi],dx
   14000ae2a:	(bad)  
   14000ae2b:	addr32 jae 0x14000ae6e
   14000ae2e:	and    al,0x30
   14000ae30:	xor    DWORD PTR [rax+0x33],eax
   14000ae33:	xor    al,0x40
   14000ae35:	and    al,0x30
   14000ae37:	xor    BYTE PTR [rax+rsi*1],ah
   14000ae3a:	rex.B
   14000ae3b:	and    al,0x30
   14000ae3e:	rex.B
   14000ae3f:	rex
   14000ae40:	rex
   14000ae41:	rex.R
   14000ae42:	gs je  0x14000aea6
   14000ae45:	imul   ebp,DWORD PTR [rbx+rsi*2+0x40],0x404c5257
   14000ae4d:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000ae55:	je     0x14000ae97
   14000ae57:	add    BYTE PTR [rax],al
   14000ae5a:	add    BYTE PTR [rax],al
   14000ae5c:	add    BYTE PTR [rax],al
   14000ae5e:	add    BYTE PTR [rax],al
   14000ae60:	sub    BYTE PTR [rbp+0x0],ah
   14000ae63:	rex add DWORD PTR [rax],eax
	...
   14000ae6e:	add    BYTE PTR [rax],al
   14000ae70:	cs (bad) 
   14000ae72:	push   r14
   14000ae74:	(bad)  
   14000ae75:	and    al,0x4d
   14000ae77:	outs   dx,DWORD PTR ds:[rsi]
   14000ae78:	fs jne 0x14000aee7
   14000ae7b:	gs and al,0x30
   14000ae7f:	xor    BYTE PTR [rsi+0x4d],dl
   14000ae82:	jne    0x14000aef0
   14000ae84:	je     0x14000aeef
   14000ae86:	push   rbp
   14000ae87:	jae    0x14000aeee
   14000ae89:	rex.WRXB jne 0x14000af00
   14000ae8c:	rex.WRXB
   14000ae8d:	push   ax
   14000ae8f:	jb     0x14000af00
   14000ae91:	movsxd ecx,DWORD PTR [rbp+0x6f]
   14000ae94:	fs jne 0x14000af03
   14000ae97:	gs rex
   14000ae99:	rex
   14000ae9a:	rex push rdi
   14000ae9c:	push   rdx
   14000ae9d:	rex.WR
   14000ae9e:	rex
   14000ae9f:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000aea7:	je     0x14000aee9
   14000aea9:	add    BYTE PTR [rax],al
   14000aeac:	add    BYTE PTR [rax],al
   14000aeae:	add    BYTE PTR [rax],al
   14000aeb0:	sub    BYTE PTR [rbp+0x0],ah
   14000aeb3:	rex add DWORD PTR [rax],eax
	...
   14000aebe:	add    BYTE PTR [rax],al
   14000aec0:	cs (bad) 
   14000aec2:	push   r14
   14000aec4:	(bad)  
   14000aec5:	and    al,0x4f
   14000aec7:	jne    0x14000af3d
   14000aec9:	rex.WRXB
   14000aeca:	push   ax
   14000aecc:	jb     0x14000af3d
   14000aece:	movsxd ecx,DWORD PTR [rbp+0x6f]
   14000aed1:	fs jne 0x14000af40
   14000aed4:	gs rex.X (bad) 
   14000aed7:	jae    0x14000af3e
   14000aed9:	rex push rsi
   14000aedb:	rex.WRB jne 0x14000af4a
   14000aede:	je     0x14000af49
   14000aee0:	push   rbp
   14000aee1:	jae    0x14000af48
   14000aee3:	rex.WRXB jne 0x14000af5a
   14000aee6:	rex.WRXB
   14000aee7:	push   ax
   14000aee9:	jb     0x14000af5a
   14000aeeb:	movsxd ecx,DWORD PTR [rbp+0x6f]
   14000aeee:	fs jne 0x14000af5d
   14000aef1:	gs rex
   14000aef3:	rex
   14000aef4:	rex
   14000aef5:	rex.R
   14000aef6:	gs je  0x14000af5a
   14000aef9:	imul   ebp,DWORD PTR [rbx+rsi*2+0x40],0x404c5257
   14000af01:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000af09:	je     0x14000af4b
   14000af0b:	add    BYTE PTR [rax],al
   14000af0e:	add    BYTE PTR [rax],al
   14000af10:	sub    BYTE PTR [rbp+0x0],ah
   14000af13:	rex add DWORD PTR [rax],eax
	...
   14000af1e:	add    BYTE PTR [rax],al
   14000af20:	cs (bad) 
   14000af22:	push   r14
   14000af24:	rex.R outs dx,DWORD PTR ds:[rsi]
   14000af26:	outs   dx,BYTE PTR ds:[rsi]
   14000af27:	je     0x14000af7e
   14000af29:	jae    0x14000af90
   14000af2b:	rex.WRX
   14000af2c:	gs ja  0x14000af84
   14000af2f:	jae    0x14000af96
   14000af31:	rex.WRB (bad) 
   14000af33:	imul   esp,DWORD PTR [rbp+0x40],0x44
   14000af37:	gs je  0x14000af9b
   14000af3a:	imul   ebp,DWORD PTR [rbx+rsi*2+0x40],0x404c5257
   14000af42:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000af4a:	je     0x14000af8c
   14000af4c:	add    BYTE PTR [rax],al
   14000af4f:	add    BYTE PTR [rax],ch
   14000af51:	add    BYTE PTR gs:[rax+0x1],al
	...
   14000af5d:	add    BYTE PTR [rax],al
   14000af5f:	add    BYTE PTR [rsi],ch
   14000af61:	(bad)  
   14000af62:	push   r13
   14000af64:	rex.WB
   14000af65:	rex.XB
   14000af66:	rex.R push rax
   14000af68:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000af6a:	ins    DWORD PTR es:[rdi],dx
   14000af6b:	rex.B jo 0x14000afde
   14000af6e:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000af70:	outs   dx,BYTE PTR ds:[rsi]
   14000af71:	je     0x14000afe5
   14000af73:	outs   dx,DWORD PTR ds:[rsi]
   14000af74:	ins    BYTE PTR es:[rdi],dx
   14000af75:	push   rbx
   14000af76:	jns    0x14000afeb
   14000af78:	je     0x14000afdf
   14000af7a:	ins    DWORD PTR es:[rdi],dx
   14000af7b:	rex.W (bad) 
   14000af7d:	outs   dx,BYTE PTR ds:[rsi]
   14000af7e:	fs ins BYTE PTR es:[rdi],dx
   14000af80:	gs jb  0x14000afc3
   14000af83:	add    BYTE PTR [rax],al
	...

Disassembly of section .pdata:

000000014000c000 <.pdata>:
   14000c000:	adc    BYTE PTR [rax],dl
   14000c002:	add    BYTE PTR [rax],al
   14000c004:	rcl    DWORD PTR [rax],cl
   14000c006:	add    BYTE PTR [rax],al
   14000c008:	adc    al,0x87
   14000c00a:	add    BYTE PTR [rax],al
   14000c00c:	fcom   QWORD PTR [rax]
   14000c00e:	add    BYTE PTR [rax],al
   14000c010:	cdq    
   14000c011:	adc    DWORD PTR [rax],eax
   14000c013:	add    BYTE PTR [rcx+rcx*4],al
   14000c016:	add    BYTE PTR [rax],al
   14000c018:	add    BYTE PTR [rdx],dl
   14000c01a:	add    BYTE PTR [rax],al
   14000c01c:	pop    rcx
   14000c01d:	adc    al,BYTE PTR [rax]
   14000c01f:	add    al,bl
   14000c021:	xchg   BYTE PTR [rax],al
   14000c023:	add    BYTE PTR [rax-0x67ffffee],dl
   14000c029:	adc    eax,DWORD PTR [rax]
   14000c02b:	add    al,al
   14000c02d:	xchg   BYTE PTR [rax],al
   14000c02f:	add    BYTE PTR [rax-0x1effffed],ah
   14000c035:	adc    eax,DWORD PTR [rax]
   14000c037:	add    al,bl
   14000c039:	xchg   BYTE PTR [rax],al
   14000c03b:	add    al,dh
   14000c03d:	adc    eax,DWORD PTR [rax]
   14000c03f:	add    BYTE PTR [rdi+0x14],dh
   14000c042:	add    BYTE PTR [rax],al
   14000c044:	loopne 0x14000bfcc
   14000c046:	add    BYTE PTR [rax],al
   14000c048:	lock adc al,0x0
   14000c04b:	add    BYTE PTR [rdx],bl
   14000c04d:	adc    eax,0x86f00000
   14000c052:	add    BYTE PTR [rax],al
   14000c054:	and    BYTE PTR [rip+0x16460000],dl        # 0x15646c05a
   14000c05a:	add    BYTE PTR [rax],al
   14000c05c:	cld    
   14000c05d:	xchg   BYTE PTR [rax],al
   14000c05f:	add    BYTE PTR [rax+0x16],dl
   14000c062:	add    BYTE PTR [rax],al
   14000c064:	jbe    0x14000c07c
   14000c066:	add    BYTE PTR [rax],al
   14000c068:	fadd   DWORD PTR [rsi+0x16a00000]
   14000c06e:	add    BYTE PTR [rax],al
   14000c070:	or     dl,BYTE PTR [rdi]
   14000c072:	add    BYTE PTR [rax],al
   14000c074:	xor    BYTE PTR [rdi+0x17400000],al
   14000c07a:	add    BYTE PTR [rax],al
   14000c07c:	jbe    0x14000c095
   14000c07e:	add    BYTE PTR [rax],al
   14000c080:	xchg   DWORD PTR [rax],r8d
   14000c083:	add    BYTE PTR [rax-0x3cffffe9],dl
   14000c089:	(bad)  
   14000c08a:	add    BYTE PTR [rax],al
   14000c08c:	xchg   DWORD PTR [rax],r8d
   14000c08f:	add    al,ah
   14000c091:	(bad)  
   14000c092:	add    BYTE PTR [rax],al
   14000c094:	(bad)  
   14000c095:	sbb    BYTE PTR [rax],al
   14000c097:	add    BYTE PTR [rdi+rax*4+0x0],al
   14000c09b:	add    BYTE PTR [rax],ah
   14000c09d:	sbb    BYTE PTR [rax],al
   14000c09f:	add    BYTE PTR [rax+0x18],ah
   14000c0a2:	add    BYTE PTR [rax],al
   14000c0a4:	lock xchg BYTE PTR [rax],al
   14000c0a7:	add    BYTE PTR [rax+rbx*1+0x1ab70000],ah
   14000c0ae:	add    BYTE PTR [rax],al
   14000c0b0:	xchg   QWORD PTR [rax],r8
   14000c0b3:	add    al,al
   14000c0b5:	sbb    al,BYTE PTR [rax]
   14000c0b7:	add    BYTE PTR [rbp+0x6400001c],dl
   14000c0bd:	xchg   DWORD PTR [rax],eax
   14000c0bf:	add    BYTE PTR [rax-0x47ffffe4],ah
   14000c0c5:	sbb    al,0x0
   14000c0c7:	add    BYTE PTR [rax-0x3fffff79],al
   14000c0cd:	sbb    al,0x0
   14000c0cf:	add    dl,dl
   14000c0d1:	sbb    eax,0x86e00000
   14000c0d6:	add    BYTE PTR [rax],al
   14000c0d8:	loopne 0x14000c0f7
   14000c0da:	add    BYTE PTR [rax],al
   14000c0dc:	jbe    0x14000c0fc
   14000c0de:	add    BYTE PTR [rax],al
   14000c0e0:	loopne 0x14000c068
   14000c0e2:	add    BYTE PTR [rax],al
   14000c0e4:	movabs al,ds:0xe000001f0f00001e
   14000c0ed:	xchg   BYTE PTR [rax],al
   14000c0ef:	add    BYTE PTR [rax],ah
   14000c0f1:	(bad)  
   14000c0f2:	add    BYTE PTR [rax],al
   14000c0f4:	mov    dh,0x1f
   14000c0f6:	add    BYTE PTR [rax],al
   14000c0f8:	loopne 0x14000c080
   14000c0fa:	add    BYTE PTR [rax],al
   14000c0fc:	rcr    BYTE PTR [rdi],0x0
   14000c0ff:	add    BYTE PTR [rdi],ch
   14000c101:	and    BYTE PTR [rax],al
   14000c103:	add    al,ah
   14000c105:	xchg   BYTE PTR [rax],al
   14000c107:	add    BYTE PTR [rax+0x20],al
   14000c10a:	add    BYTE PTR [rax],al
   14000c10c:	(bad)  
   14000c10d:	and    BYTE PTR [rax],al
   14000c10f:	add    al,ah
   14000c111:	xchg   BYTE PTR [rax],al
   14000c113:	add    al,al
   14000c115:	and    BYTE PTR [rax],al
   14000c117:	add    BYTE PTR [rcx],cl
   14000c119:	and    DWORD PTR [rax],eax
   14000c11b:	add    al,ah
   14000c11d:	xchg   BYTE PTR [rax],al
   14000c11f:	add    BYTE PTR [rax],dl
   14000c121:	and    DWORD PTR [rax],eax
   14000c123:	add    BYTE PTR [rbp-0x1fffffdf],cl
   14000c129:	xchg   BYTE PTR [rax],al
   14000c12b:	add    al,ah
   14000c12d:	and    DWORD PTR [rax],eax
   14000c12f:	add    bl,bh
   14000c131:	and    DWORD PTR [rax],eax
   14000c133:	add    BYTE PTR [rax+0x10000087],al
   14000c139:	and    al,BYTE PTR [rax]
   14000c13b:	add    BYTE PTR [rdi],bh
   14000c13d:	and    al,BYTE PTR [rax]
   14000c13f:	add    al,dh
   14000c141:	xchg   BYTE PTR [rax],al
   14000c143:	add    BYTE PTR [rax+0x22],dl
   14000c146:	add    BYTE PTR [rax],al
   14000c148:	fwait
   14000c149:	and    al,BYTE PTR [rax]
   14000c14b:	add    al,dh
   14000c14d:	xchg   BYTE PTR [rax],al
   14000c14f:	add    BYTE PTR [rdx+riz*1+0x23f90000],ah
   14000c156:	add    BYTE PTR [rax],al
   14000c158:	mov    BYTE PTR [rdi+0x24000000],al
   14000c15e:	add    BYTE PTR [rax],al
   14000c160:	pop    rax
   14000c161:	and    al,0x0
   14000c163:	add    al,ah
   14000c165:	xchg   BYTE PTR [rax],al
   14000c167:	add    BYTE PTR [rax+0x24],ah
   14000c16a:	add    BYTE PTR [rax],al
   14000c16c:	xchg   BYTE PTR [rax+rax*1],ah
   14000c16f:	add    al,bl
   14000c171:	xchg   BYTE PTR [rax],al
   14000c173:	add    BYTE PTR [rsp+0x249e0000],cl
   14000c17a:	add    BYTE PTR [rax],al
   14000c17c:	add    BYTE PTR [rdi+0x24a40000],0x0
   14000c183:	add    BYTE PTR [rsi-0x7fffffdc],dh
   14000c189:	xchg   DWORD PTR [rax],eax
   14000c18b:	add    BYTE PTR [rsp+0x25bf0000],bh
   14000c192:	add    BYTE PTR [rax],al
   14000c194:	pushf  
   14000c195:	xchg   DWORD PTR [rax],eax
   14000c197:	add    al,cl
   14000c199:	and    eax,0x26710000
   14000c19e:	add    BYTE PTR [rax],al
   14000c1a0:	or     BYTE PTR [rax+0x26900000],0x0
   14000c1a7:	add    BYTE PTR [rbx-0x67ffffd9],bh
   14000c1ad:	mov    BYTE PTR [rax],al
   14000c1af:	add    al,dl
   14000c1b1:	(bad)  
   14000c1b2:	add    BYTE PTR [rax],al
   14000c1b4:	sti    
   14000c1b5:	sub    BYTE PTR [rax],al
   14000c1b7:	add    BYTE PTR [rax+0x4000088],bl
   14000c1bd:	sub    DWORD PTR [rax],eax
   14000c1bf:	add    BYTE PTR [rsi-0x4fffffd4],dh
   14000c1c5:	mov    BYTE PTR [rax],al
   14000c1c7:	add    al,ah
   14000c1c9:	sub    al,0x0
   14000c1cb:	add    BYTE PTR [rbp-0x37ffffd3],al
   14000c1d1:	mov    BYTE PTR [rax],al
   14000c1d3:	add    BYTE PTR [rax-0x24ffffd3],dl
   14000c1d9:	sub    eax,0x86d80000
   14000c1de:	add    BYTE PTR [rax],al
   14000c1e0:	lock sub eax,0x2e8d0000
   14000c1e6:	add    BYTE PTR [rax],al
   14000c1e8:	fmul   QWORD PTR [rax+0x2ea00000]
   14000c1ee:	add    BYTE PTR [rax],al
   14000c1f0:	xor    ebp,DWORD PTR [rdi]
   14000c1f2:	add    BYTE PTR [rax],al
   14000c1f4:	loopne 0x14000c17c
   14000c1f6:	add    BYTE PTR [rax],al
   14000c1f8:	rex (bad) 
   14000c1fa:	add    BYTE PTR [rax],al
   14000c1fc:	lods   eax,DWORD PTR ds:[rsi]
   14000c1fd:	(bad)  
   14000c1fe:	add    BYTE PTR [rax],al
   14000c200:	lock xchg BYTE PTR [rax],al
   14000c203:	add    al,al
   14000c205:	(bad)  
   14000c206:	add    BYTE PTR [rax],al
   14000c208:	xor    BYTE PTR gs:[rax],al
   14000c20b:	add    al,cl
   14000c20d:	mov    BYTE PTR [rax],al
   14000c20f:	add    BYTE PTR [rax+rsi*1+0x0],ch
   14000c213:	add    BYTE PTR [rcx+rsi*1],ch
   14000c216:	add    BYTE PTR [rax],al
   14000c218:	loopne 0x14000c1a0
   14000c21a:	add    BYTE PTR [rax],al
   14000c21c:	xor    al,0x31
   14000c21e:	add    BYTE PTR [rax],al
   14000c220:	stc    
   14000c221:	xor    DWORD PTR [rax],eax
   14000c223:	add    al,ah
   14000c225:	xchg   BYTE PTR [rax],al
   14000c227:	add    BYTE PTR [rax],al
   14000c229:	xor    al,BYTE PTR [rax]
   14000c22b:	add    BYTE PTR [rbx],ah
   14000c22d:	xor    al,BYTE PTR [rax]
   14000c22f:	add    al,bl
   14000c231:	xchg   BYTE PTR [rax],al
   14000c233:	add    BYTE PTR [rax],dh
   14000c235:	xor    al,BYTE PTR [rax]
   14000c237:	add    BYTE PTR [rcx-0xfffffce],bl
   14000c23d:	mov    BYTE PTR [rax],al
   14000c23f:	add    BYTE PTR [rax-0xaffffce],ah
   14000c245:	xor    al,BYTE PTR [rax]
   14000c247:	add    al,dh
   14000c249:	mov    BYTE PTR [rax],al
   14000c24b:	add    BYTE PTR [rax],al
   14000c24d:	xor    eax,DWORD PTR [rax]
   14000c24f:	add    BYTE PTR [rip+0xfffffffff0000033],dh        # 0x13000c288
   14000c255:	xchg   BYTE PTR [rax],al
   14000c257:	add    BYTE PTR [rax+0x33],ah
   14000c25a:	add    BYTE PTR [rax],al
   14000c25c:	leave  
   14000c25d:	xor    eax,DWORD PTR [rax]
   14000c25f:	add    al,ah
   14000c261:	xchg   BYTE PTR [rax],al
   14000c263:	add    al,dl
   14000c265:	xor    eax,DWORD PTR [rax]
   14000c267:	add    BYTE PTR [rsi+0x14000034],al
   14000c26d:	mov    DWORD PTR [rax],eax
   14000c26f:	add    BYTE PTR [rsp+rsi*1+0x38ae0000],cl
   14000c276:	add    BYTE PTR [rax],al
   14000c278:	sub    BYTE PTR [rcx+0x38b40000],cl
   14000c27e:	add    BYTE PTR [rax],al
   14000c280:	in     al,0x38
   14000c282:	add    BYTE PTR [rax],al
   14000c284:	fadd   DWORD PTR [rsi+0x38ec0000]
   14000c28a:	add    BYTE PTR [rax],al
   14000c28c:	(bad)
   14000c28f:	add    BYTE PTR [rax-0x33ffff77],bh
   14000c295:	cmp    DWORD PTR [rax],eax
   14000c297:	add    bl,bh
   14000c299:	cmp    DWORD PTR [rax],eax
   14000c29b:	add    al,bl
   14000c29d:	xchg   BYTE PTR [rax],al
   14000c29f:	add    BYTE PTR [rdx+rdi*1],al
   14000c2a2:	add    BYTE PTR [rax],al
   14000c2a4:	cmp    al,BYTE PTR ss:[rax]
   14000c2a7:	add    BYTE PTR [rdi+rax*4+0x0],al
   14000c2ab:	add    BYTE PTR [rdx+rdi*1],bh
   14000c2ae:	add    BYTE PTR [rax],al
   14000c2b0:	jb     0x14000c2ec
   14000c2b2:	add    BYTE PTR [rax],al
   14000c2b4:	lock xchg BYTE PTR [rax],al
   14000c2b7:	add    BYTE PTR [rax+0x3a],bh
   14000c2ba:	add    BYTE PTR [rax],al
   14000c2bc:	cmp    ax,WORD PTR [rax]
   14000c2bf:	add    al,dh
   14000c2c1:	mov    DWORD PTR [rax],eax
   14000c2c3:	add    BYTE PTR [rbx+rdi*1+0x0],ch
   14000c2c7:	add    bl,dl
   14000c2c9:	cmp    eax,DWORD PTR [rax]
   14000c2cb:	add    al,dh
   14000c2cd:	mov    BYTE PTR [rax],al
   14000c2cf:	add    ah,bl
   14000c2d1:	cmp    eax,DWORD PTR [rax]
   14000c2d3:	add    BYTE PTR [rbp+rdi*1+0x0],cl
   14000c2d7:	add    BYTE PTR [rax],al
   14000c2d9:	mov    al,BYTE PTR [rax]
   14000c2db:	add    BYTE PTR [rbp+rdi*1+0x0],dl
   14000c2df:	add    BYTE PTR [rdx],ah
   14000c2e1:	add    BYTE PTR ds:[rax],al
   14000c2e4:	add    BYTE PTR [rdx+0x3e280000],cl
   14000c2ea:	add    BYTE PTR [rax],al
   14000c2ec:	rex.B (bad) 
   14000c2ee:	add    BYTE PTR [rax],al
   14000c2f0:	sbb    BYTE PTR [rdx+0x3f480000],cl
   14000c2f6:	add    BYTE PTR [rax],al
   14000c2f8:	mov    bl,0x3f
   14000c2fa:	add    BYTE PTR [rax],al
   14000c2fc:	ror    BYTE PTR [rdx+0x3fbc0000],1
   14000c302:	add    BYTE PTR [rax],al
   14000c304:	fild   WORD PTR [rax+0x0]
   14000c307:	add    al,ah
   14000c309:	mov    al,BYTE PTR [rax]
   14000c30b:	add    al,dh
   14000c30d:	add    BYTE PTR [rax],al
   14000c310:	or     eax,0x80000041
   14000c315:	xchg   DWORD PTR [rax],eax
   14000c317:	add    BYTE PTR [rax+0x41],al
   14000c31a:	add    BYTE PTR [rax],al
   14000c31c:	pop    rbp
   14000c31d:	add    BYTE PTR [r8],al
   14000c320:	add    BYTE PTR [rdi+0x41700000],0x0
   14000c327:	add    BYTE PTR [rdi],ah
   14000c329:	rex.X add BYTE PTR [rax],al
   14000c32c:	fadd   DWORD PTR [rsi+0x42300000]
   14000c332:	add    BYTE PTR [rax],al
   14000c334:	rex.WB
   14000c335:	rex.X add BYTE PTR [rax],al
   14000c338:	add    BYTE PTR [rdi+0x42500000],0x0
   14000c33f:	add    al,cl
   14000c341:	rex.XB add BYTE PTR [r8],al
   14000c344:	push   0xffffffffd000008b
   14000c349:	rex.XB add BYTE PTR [r8],al
   14000c34c:	loop   0x14000c391
   14000c34e:	add    BYTE PTR [rax],al
   14000c350:	add    BYTE PTR [rdi+0x44000000],0x0
   14000c357:	add    BYTE PTR [rdi],bl
   14000c359:	add    BYTE PTR [rax],r8b
   14000c35c:	cwde   
   14000c35d:	mov    eax,DWORD PTR [rax]
   14000c35f:	add    BYTE PTR [rax+0x44],dh
   14000c362:	add    BYTE PTR [rax],al
   14000c364:	and    al,0x45
   14000c366:	add    BYTE PTR [rax],al
   14000c368:	pushf  
   14000c369:	mov    eax,DWORD PTR [rax]
   14000c36b:	add    BYTE PTR [rax+0x45],al
   14000c36e:	add    BYTE PTR [rax],al
   14000c370:	pop    QWORD PTR [rbp+0x0]
   14000c373:	add    al,bl
   14000c375:	xchg   BYTE PTR [rax],al
   14000c377:	add    BYTE PTR [rax-0x50ffffbb],bl
   14000c37d:	add    BYTE PTR [r8],r8b
   14000c380:	add    BYTE PTR [rdi+0x45d00000],0x0
   14000c387:	add    dh,dh
   14000c389:	add    BYTE PTR [r8],r8b
   14000c38c:	fadd   DWORD PTR [rsi+0x45fc0000]
   14000c392:	add    BYTE PTR [rax],al
   14000c394:	cmp    BYTE PTR [rsi+0x0],al
   14000c397:	add    al,bl
   14000c399:	xchg   BYTE PTR [rax],al
   14000c39b:	add    BYTE PTR [rax+0x46],al
   14000c39e:	add    BYTE PTR [rax],al
   14000c3a0:	pop    rsp
   14000c3a1:	rex.RX add BYTE PTR [rax],r8b
   14000c3a4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c3a5:	mov    eax,DWORD PTR [rax]
   14000c3a7:	add    BYTE PTR [rsi+rax*2+0x0],ah
   14000c3ab:	add    BYTE PTR [rax],dl
   14000c3ad:	rex.RXB add BYTE PTR [r8],r8b
   14000c3b0:	adc    BYTE PTR [rax+rax*1+0x475c00],cl
   14000c3b7:	add    BYTE PTR [rdi+0x47],dh
   14000c3ba:	add    BYTE PTR [rax],al
   14000c3bc:	add    BYTE PTR [rdi+0x47800000],0x0
   14000c3c3:	add    BYTE PTR [rax+rcx*2],bl
   14000c3c6:	add    BYTE PTR [rax],al
   14000c3c8:	sbb    al,0x8c
   14000c3ca:	add    BYTE PTR [rax],al
   14000c3cc:	push   0xffffffffad000048
   14000c3d1:	rex.WB add BYTE PTR [r8],al
   14000c3d4:	rex.R mov WORD PTR [rax],es
   14000c3d7:	add    BYTE PTR [rcx+rcx*2+0x4a080000],dh
   14000c3de:	add    BYTE PTR [rax],al
   14000c3e0:	add    BYTE PTR [rdi+0x4a300000],0x0
   14000c3e7:	add    BYTE PTR [rax+0x4a],ch
   14000c3ea:	add    BYTE PTR [rax],al
   14000c3ec:	add    BYTE PTR [rdi+0x4a700000],0x0
   14000c3f3:	add    BYTE PTR [rbx-0x1fffffb6],bh
   14000c3f9:	xchg   BYTE PTR [rax],al
   14000c3fb:	add    al,dl
   14000c3fd:	rex.WX add BYTE PTR [rax],al
   14000c400:	sbb    ecx,DWORD PTR [rbx+0x0]
   14000c403:	add    al,ah
   14000c405:	xchg   BYTE PTR [rax],al
   14000c407:	add    BYTE PTR [rbx+rcx*2],ah
   14000c40a:	add    BYTE PTR [rax],al
   14000c40c:	or     DWORD PTR [rbx+0x0],0x86d800
   14000c413:	add    BYTE PTR [rax+0x6100004b],dl
   14000c419:	rex.WR add BYTE PTR [rax],r8b
   14000c41c:	push   rsp
   14000c41d:	mov    WORD PTR [rax],es
   14000c41f:	add    BYTE PTR [rax+0x4c],ch
   14000c422:	add    BYTE PTR [rax],al
   14000c424:	(bad)  [rax+rax*1+0x0]
   14000c428:	pop    rsp
   14000c429:	mov    WORD PTR [rax],es
   14000c42b:	add    al,ah
   14000c42d:	rex.WR add BYTE PTR [rax],r8b
   14000c430:	(bad)  
   14000c431:	rex.WRB add BYTE PTR [r8],r8b
   14000c434:	fadd   DWORD PTR [rsi+0x4d500000]
   14000c43a:	add    BYTE PTR [rax],al
   14000c43c:	(bad)  
   14000c43d:	rex.WRB add BYTE PTR [r8],r8b
   14000c440:	fadd   DWORD PTR [rsi+0x4dc00000]
   14000c446:	add    BYTE PTR [rax],al
   14000c448:	cmc    
   14000c449:	rex.WRB add BYTE PTR [r8],r8b
   14000c44c:	fadd   DWORD PTR [rsi+0x4e200000]
   14000c452:	add    BYTE PTR [rax],al
   14000c454:	pop    rbp
   14000c455:	rex.WRX add BYTE PTR [rax],r8b
   14000c458:	lock xchg BYTE PTR [rax],al
   14000c45b:	add    BYTE PTR [rsi+rcx*2+0x0],ah
   14000c45f:	add    BYTE PTR [rsi+rcx*2-0x73980000],al
   14000c466:	add    BYTE PTR [rax],al
   14000c468:	mov    WORD PTR [rsi+0x0],cs
   14000c46b:	add    BYTE PTR [rsi+rcx*2-0x73980000],ch
   14000c472:	add    BYTE PTR [rax],al
   14000c474:	test   BYTE PTR [rax+0x0],dl
   14000c477:	add    BYTE PTR [rcx-0x7fffffb0],ah
   14000c47d:	xchg   DWORD PTR [rax],eax
   14000c47f:	add    BYTE PTR [rax+0xb000050],ch
   14000c485:	push   rcx
   14000c486:	add    BYTE PTR [rax],al
   14000c488:	fadd   DWORD PTR [rsi+0x51140000]
   14000c48e:	add    BYTE PTR [rax],al
   14000c490:	movabs ds:0xc000008a00000051,eax
   14000c499:	push   rcx
   14000c49a:	add    BYTE PTR [rax],al
   14000c49c:	ret    0x51
   14000c49f:	add    BYTE PTR [rax-0x74],dh
   14000c4a2:	add    BYTE PTR [rax],al
   14000c4a4:	enter  0x51,0x0
   14000c4a8:	or     eax,0x70000052
   14000c4ad:	mov    BYTE PTR [rax],al
   14000c4af:	add    BYTE PTR [rip+0x32000052],cl        # 0x17200c507
   14000c4b5:	push   rdx
   14000c4b6:	add    BYTE PTR [rax],al
   14000c4b8:	jo     0x14000c442
   14000c4ba:	add    BYTE PTR [rax],al
   14000c4bc:	adc    BYTE PTR [rdx+0x0],0x0
   14000c4c0:	rcl    DWORD PTR [rdx+0x0],1
   14000c4c3:	add    al,al
   14000c4c5:	mov    al,BYTE PTR [rax]
   14000c4c7:	add    cl,dl
   14000c4c9:	push   rdx
   14000c4ca:	add    BYTE PTR [rax],al
   14000c4cc:	not    BYTE PTR [rdx+0x0]
   14000c4cf:	add    al,al
   14000c4d1:	mov    al,BYTE PTR [rax]
   14000c4d3:	add    ah,bh
   14000c4d5:	push   rdx
   14000c4d6:	add    BYTE PTR [rax],al
   14000c4d8:	and    DWORD PTR [rbx+0x0],edx
   14000c4db:	add    BYTE PTR [rax-0x75],bl
   14000c4de:	add    BYTE PTR [rax],al
   14000c4e0:	(bad)  
   14000c4e1:	push   rbx
   14000c4e2:	add    BYTE PTR [rax],al
   14000c4e4:	rex.RB push r11
   14000c4e6:	add    BYTE PTR [rax],al
   14000c4e8:	nop
   14000c4e9:	mov    eax,DWORD PTR [rax]
   14000c4eb:	add    BYTE PTR [rbx+0x53],cl
   14000c4ee:	add    BYTE PTR [rax],al
   14000c4f0:	push   bx
   14000c4f2:	add    BYTE PTR [rax],al
   14000c4f4:	add    BYTE PTR [rax+rax*1+0x536c00],cl
   14000c4fb:	add    BYTE PTR [rbx+rdx*2-0x73c40000],al
	...

Disassembly of section .rsrc:

000000014000d000 <.rsrc>:
	...
   14000d00c:	add    BYTE PTR [rax],al
   14000d00e:	add    DWORD PTR [rax],eax
   14000d010:	adc    BYTE PTR [rax],al
   14000d012:	add    BYTE PTR [rax],al
   14000d014:	sbb    BYTE PTR [rax],al
   14000d016:	add    BYTE PTR [rax+0x0],al
	...
   14000d024:	add    BYTE PTR [rax],al
   14000d026:	add    DWORD PTR [rax],eax
   14000d028:	add    DWORD PTR [rax],eax
   14000d02a:	add    BYTE PTR [rax],al
   14000d02c:	xor    BYTE PTR [rax],al
   14000d02e:	add    BYTE PTR [rax+0x0],al
	...
   14000d03c:	add    BYTE PTR [rax],al
   14000d03e:	add    DWORD PTR [rax],eax
   14000d040:	or     DWORD PTR [rax+rax*1],eax
   14000d043:	add    BYTE PTR [rax+0x0],cl
   14000d046:	add    BYTE PTR [rax],al
   14000d048:	(bad)  
   14000d049:	rol    BYTE PTR [rax],1
   14000d04b:	add    al,al
   14000d04d:	add    eax,DWORD PTR [rax]
	...
   14000d05f:	add    al,al
   14000d061:	add    esi,DWORD PTR [rax+rax*1]
   14000d064:	add    BYTE PTR [rax],al
   14000d066:	push   rsi
   14000d067:	add    BYTE PTR [rbx+0x0],dl
   14000d06a:	pop    rdi
   14000d06b:	add    BYTE PTR [rsi+0x0],dl
   14000d06e:	add    BYTE PTR [r10+0x0],r10b
   14000d072:	push   rbx
   14000d073:	add    BYTE PTR [rcx+0x0],cl
   14000d076:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14000d07a:	pop    rdi
   14000d07b:	add    BYTE PTR [rcx+0x0],cl
   14000d07e:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   14000d082:	rex.WRXB add BYTE PTR [r8],r8b
   14000d085:	add    BYTE PTR [rax],al
   14000d087:	add    BYTE PTR [rbp+0xfeef04],bh
   14000d08d:	add    BYTE PTR [rcx],al
   14000d08f:	add    BYTE PTR [rax],al
   14000d091:	add    BYTE PTR [rdx],cl
   14000d093:	add    BYTE PTR [rax],al
   14000d095:	add    BYTE PTR [rax],bpl
   14000d098:	add    BYTE PTR [rax],al
   14000d09a:	or     al,BYTE PTR [rax]
   14000d09c:	add    BYTE PTR [rax+0x0],al
   14000d09f:	sub    BYTE PTR [rdi],bh
   14000d0a1:	add    BYTE PTR [rax],al
   14000d0a3:	add    BYTE PTR [rax],al
   14000d0a5:	add    BYTE PTR [rax],al
   14000d0a7:	add    BYTE PTR [rax+rax*1],al
   14000d0aa:	add    al,0x0
   14000d0ac:	add    DWORD PTR [rax],eax
	...
   14000d0ba:	add    BYTE PTR [rax],al
   14000d0bc:	(bad)  
   14000d0bd:	add    eax,DWORD PTR [rax]
   14000d0bf:	add    BYTE PTR [rcx],al
   14000d0c1:	add    BYTE PTR [rbx+0x0],dl
   14000d0c4:	je     0x14000d0c6
   14000d0c6:	jb     0x14000d0c8
   14000d0c8:	imul   eax,DWORD PTR [rax],0x67006e
   14000d0ce:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000d0d2:	ins    BYTE PTR es:[rdi],dx
   14000d0d3:	add    BYTE PTR [rbp+0x0],ah
   14000d0d6:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000d0da:	data16 add BYTE PTR [rdi+0x0],ch
   14000d0de:	add    BYTE PTR [rax],al
   14000d0e0:	cli    
   14000d0e1:	add    al,BYTE PTR [rax]
   14000d0e3:	add    BYTE PTR [rcx],al
   14000d0e5:	add    BYTE PTR [rax],dh
   14000d0e7:	add    BYTE PTR [rax+rax*1],dh
   14000d0ea:	xor    BYTE PTR [rax],al
   14000d0ec:	cmp    DWORD PTR [rax],eax
   14000d0ee:	xor    BYTE PTR [rax],al
   14000d0f0:	xor    al,0x0
   14000d0f2:	rex.X add BYTE PTR [rax],sil
   14000d0f5:	add    BYTE PTR [rax],al
   14000d0f7:	add    BYTE PTR [rax+rax*1+0x16],cl
   14000d0fb:	add    BYTE PTR [rcx],al
   14000d0fd:	add    BYTE PTR [rbx+0x0],al
   14000d100:	outs   dx,DWORD PTR ds:[rsi]
   14000d101:	add    BYTE PTR [rbp+0x0],ch
   14000d104:	jo     0x14000d106
   14000d106:	(bad)  
   14000d107:	add    BYTE PTR [rsi+0x0],ch
   14000d10a:	jns    0x14000d10c
   14000d10c:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000d110:	ins    DWORD PTR es:[rdi],dx
   14000d111:	add    BYTE PTR [rbp+0x0],ah
   14000d114:	add    BYTE PTR [rax],al
   14000d116:	add    BYTE PTR [rax],al
   14000d118:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000d11c:	movsxd eax,DWORD PTR [rax]
   14000d11e:	jb     0x14000d120
   14000d120:	outs   dx,DWORD PTR ds:[rsi]
   14000d121:	add    BYTE PTR [rbx+0x0],dh
   14000d124:	outs   dx,DWORD PTR ds:[rsi]
   14000d125:	add    BYTE PTR [rsi+0x0],ah
   14000d128:	je     0x14000d12a
   14000d12a:	and    BYTE PTR [rax],al
   14000d12c:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000d130:	jb     0x14000d132
   14000d132:	jo     0x14000d134
   14000d134:	outs   dx,DWORD PTR ds:[rsi]
   14000d135:	add    BYTE PTR [rdx+0x0],dh
   14000d138:	(bad)  
   14000d139:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000d13d:	add    BYTE PTR [rdi+0x0],ch
   14000d140:	outs   dx,BYTE PTR ds:[rsi]
   14000d141:	add    BYTE PTR [rax],al
   14000d143:	add    BYTE PTR [rdx+0x0],ch
   14000d146:	and    DWORD PTR [rax],eax
   14000d148:	add    DWORD PTR [rax],eax
   14000d14a:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000d14e:	ins    BYTE PTR es:[rdi],dx
   14000d14f:	add    BYTE PTR [rbp+0x0],ah
   14000d152:	add    BYTE PTR [rbp+0x0],r12b
   14000d156:	jae    0x14000d158
   14000d158:	movsxd eax,DWORD PTR [rax]
   14000d15a:	jb     0x14000d15c
   14000d15c:	imul   eax,DWORD PTR [rax],0x740070
   14000d162:	imul   eax,DWORD PTR [rax],0x6e006f
   14000d168:	add    BYTE PTR [rax],al
   14000d16a:	add    BYTE PTR [rax],al
   14000d16c:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000d170:	movsxd eax,DWORD PTR [rax]
   14000d172:	jb     0x14000d174
   14000d174:	outs   dx,DWORD PTR ds:[rsi]
   14000d175:	add    BYTE PTR [rbx+0x0],dh
   14000d178:	outs   dx,DWORD PTR ds:[rsi]
   14000d179:	add    BYTE PTR [rsi+0x0],ah
   14000d17c:	je     0x14000d17e
   14000d17e:	and    BYTE PTR [rax],al
   14000d180:	sub    BYTE PTR [rax],al
   14000d182:	push   rdx
   14000d183:	add    BYTE PTR [rcx],ch
   14000d185:	add    BYTE PTR [rax],ah
   14000d187:	add    BYTE PTR [rbx+0x0],al
   14000d18a:	add    BYTE PTR [rax+0x0],r10b
   14000d18e:	and    BYTE PTR [rax],al
   14000d190:	push   rdx
   14000d191:	add    BYTE PTR [rbp+0x0],ah
   14000d194:	data16 add BYTE PTR [rbp+0x0],ah
   14000d198:	jb     0x14000d19a
   14000d19a:	add    BYTE PTR gs:[rsi+0x0],ch
   14000d19e:	movsxd eax,DWORD PTR [rax]
   14000d1a0:	add    BYTE PTR gs:[rax],ah
   14000d1a3:	add    BYTE PTR [rax+0x0],cl
   14000d1a6:	outs   dx,DWORD PTR ds:[rsi]
   14000d1a7:	add    BYTE PTR [rbx+0x0],dh
   14000d1aa:	je     0x14000d1ac
   14000d1ac:	add    BYTE PTR [rax],al
   14000d1ae:	add    BYTE PTR [rax],al
   14000d1b0:	data16 add BYTE PTR [rbx],ah
   14000d1b3:	add    BYTE PTR [rcx],al
   14000d1b5:	add    BYTE PTR [rsi+0x0],al
   14000d1b8:	imul   eax,DWORD PTR [rax],0x65006c
   14000d1be:	push   rsi
   14000d1bf:	add    BYTE PTR [rbp+0x0],ah
   14000d1c2:	jb     0x14000d1c4
   14000d1c4:	jae    0x14000d1c6
   14000d1c6:	imul   eax,DWORD PTR [rax],0x6e006f
   14000d1cc:	add    BYTE PTR [rax],al
   14000d1ce:	add    BYTE PTR [rax],al
   14000d1d0:	xor    DWORD PTR [rax],eax
   14000d1d2:	xor    BYTE PTR [rax],al
   14000d1d4:	add    BYTE PTR cs:[rax],dh
   14000d1d7:	add    BYTE PTR [rsi],ch
   14000d1d9:	add    BYTE PTR [rcx],dh
   14000d1db:	add    BYTE PTR [rax],dh
   14000d1dd:	add    BYTE PTR [rdx],dh
   14000d1df:	add    BYTE PTR [rax+rax*1],dh
   14000d1e2:	xor    BYTE PTR [rax],al
   14000d1e4:	add    BYTE PTR cs:[rcx],dh
   14000d1e7:	add    BYTE PTR [rsi],dh
   14000d1e9:	add    BYTE PTR [rbx],dh
   14000d1eb:	add    BYTE PTR [rax],bh
   14000d1ed:	add    BYTE PTR [rax+rax*1],dh
   14000d1f0:	and    BYTE PTR [rax],al
   14000d1f2:	sub    BYTE PTR [rax],al
   14000d1f4:	je     0x14000d1f6
   14000d1f6:	push   0x2e003100
   14000d1fb:	add    BYTE PTR [rcx],dh
   14000d1fd:	add    BYTE PTR [rip+0x37003000],dh        # 0x177010203
   14000d203:	add    BYTE PTR [rax],dh
   14000d205:	add    BYTE PTR [rcx],bh
   14000d207:	add    BYTE PTR [rip+0x37003100],ch        # 0x17701030d
   14000d20d:	add    BYTE PTR [rax],dh
   14000d20f:	add    BYTE PTR [rax],dh
   14000d211:	add    BYTE PTR [rcx],ch
   14000d213:	add    BYTE PTR [rax],al
   14000d215:	add    BYTE PTR [rax],al
   14000d217:	add    BYTE PTR [rdx+0x0],al
   14000d21a:	adc    DWORD PTR [rax],eax
   14000d21c:	add    DWORD PTR [rax],eax
   14000d21e:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000d222:	je     0x14000d224
   14000d224:	add    BYTE PTR gs:[rdx+0x0],dh
   14000d228:	outs   dx,BYTE PTR ds:[rsi]
   14000d229:	add    BYTE PTR [rcx+0x0],ah
   14000d22c:	ins    BYTE PTR es:[rdi],dx
   14000d22d:	add    BYTE PTR [rsi+0x0],cl
   14000d230:	(bad)  
   14000d231:	add    BYTE PTR [rbp+0x0],ch
   14000d234:	add    BYTE PTR gs:[rax],al
   14000d237:	add    BYTE PTR [rbx+0x0],al
   14000d23a:	add    BYTE PTR [rax+0x0],r10b
   14000d23e:	push   rdx
   14000d23f:	add    BYTE PTR [rbp+0x0],ah
   14000d242:	data16 add BYTE PTR [rbp+0x0],ah
   14000d246:	jb     0x14000d248
   14000d248:	add    BYTE PTR gs:[rsi+0x0],ch
   14000d24c:	movsxd eax,DWORD PTR [rax]
   14000d24e:	add    BYTE PTR gs:[rsi],ch
   14000d251:	add    BYTE PTR [rbp+0x0],ah
   14000d254:	js     0x14000d256
   14000d256:	add    BYTE PTR gs:[rax],al
   14000d259:	add    BYTE PTR [rax],al
   14000d25b:	add    BYTE PTR [rax+0x1002e00],al
   14000d261:	add    BYTE PTR [rax+rax*1+0x65],cl
   14000d265:	add    BYTE PTR [rdi+0x0],ah
   14000d268:	(bad)  
   14000d269:	add    BYTE PTR [rax+rax*1+0x43],ch
   14000d26d:	add    BYTE PTR [rdi+0x0],ch
   14000d270:	jo     0x14000d272
   14000d272:	jns    0x14000d274
   14000d274:	jb     0x14000d276
   14000d276:	imul   eax,DWORD PTR [rax],0x680067
   14000d27c:	je     0x14000d27e
   14000d27e:	add    BYTE PTR [rax],al
   14000d280:	test   eax,0x4d002000
   14000d285:	add    BYTE PTR [rcx+0x0],ch
   14000d288:	movsxd eax,DWORD PTR [rax]
   14000d28a:	jb     0x14000d28c
   14000d28c:	outs   dx,DWORD PTR ds:[rsi]
   14000d28d:	add    BYTE PTR [rbx+0x0],dh
   14000d290:	outs   dx,DWORD PTR ds:[rsi]
   14000d291:	add    BYTE PTR [rsi+0x0],ah
   14000d294:	je     0x14000d296
   14000d296:	and    BYTE PTR [rax],al
   14000d298:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000d29c:	jb     0x14000d29e
   14000d29e:	jo     0x14000d2a0
   14000d2a0:	outs   dx,DWORD PTR ds:[rsi]
   14000d2a1:	add    BYTE PTR [rdx+0x0],dh
   14000d2a4:	(bad)  
   14000d2a5:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000d2a9:	add    BYTE PTR [rdi+0x0],ch
   14000d2ac:	outs   dx,BYTE PTR ds:[rsi]
   14000d2ad:	add    BYTE PTR [rsi],ch
   14000d2af:	add    BYTE PTR [rax],ah
   14000d2b1:	add    BYTE PTR [rcx+0x0],al
   14000d2b4:	ins    BYTE PTR es:[rdi],dx
   14000d2b5:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000d2b9:	add    BYTE PTR [rdx+0x0],dh
   14000d2bc:	imul   eax,DWORD PTR [rax],0x680067
   14000d2c2:	je     0x14000d2c4
   14000d2c4:	jae    0x14000d2c6
   14000d2c6:	and    BYTE PTR [rax],al
   14000d2c8:	jb     0x14000d2ca
   14000d2ca:	add    BYTE PTR gs:[rbx+0x0],dh
   14000d2ce:	add    BYTE PTR gs:[rdx+0x0],dh
   14000d2d2:	jbe    0x14000d2d4
   14000d2d4:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   14000d2d9:	add    BYTE PTR [rax],al
   14000d2db:	add    BYTE PTR [rdx+0x0],cl
   14000d2de:	adc    DWORD PTR [rax],eax
   14000d2e0:	add    DWORD PTR [rax],eax
   14000d2e2:	rex.WRXB add BYTE PTR [r10+0x0],r14b
   14000d2e6:	imul   eax,DWORD PTR [rax],0x690067
   14000d2ec:	outs   dx,BYTE PTR ds:[rsi]
   14000d2ed:	add    BYTE PTR [rcx+0x0],ah
   14000d2f0:	ins    BYTE PTR es:[rdi],dx
   14000d2f1:	add    BYTE PTR [rsi+0x0],al
   14000d2f4:	imul   eax,DWORD PTR [rax],0x65006c
   14000d2fa:	outs   dx,BYTE PTR ds:[rsi]
   14000d2fb:	add    BYTE PTR [rcx+0x0],ah
   14000d2fe:	ins    DWORD PTR es:[rdi],dx
   14000d2ff:	add    BYTE PTR [rbp+0x0],ah
   14000d302:	add    BYTE PTR [rax],al
   14000d304:	add    BYTE PTR [r8+r8*1+0x50],al
   14000d309:	add    BYTE PTR [rdx+0x0],dl
   14000d30c:	add    BYTE PTR gs:[rsi+0x0],ah
   14000d310:	add    BYTE PTR gs:[rdx+0x0],dh
   14000d314:	add    BYTE PTR gs:[rsi+0x0],ch
   14000d318:	movsxd eax,DWORD PTR [rax]
   14000d31a:	add    BYTE PTR gs:[rsi],ch
   14000d31d:	add    BYTE PTR [rbp+0x0],ah
   14000d320:	js     0x14000d322
   14000d322:	add    BYTE PTR gs:[rax],al
   14000d325:	add    BYTE PTR [rax],al
   14000d327:	add    BYTE PTR [rdx+0x0],ch
   14000d32a:	and    eax,0x50000100
   14000d32f:	add    BYTE PTR [rdx+0x0],dh
   14000d332:	outs   dx,DWORD PTR ds:[rsi]
   14000d333:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000d337:	add    BYTE PTR [rbx+0x0],ah
   14000d33a:	je     0x14000d33c
   14000d33c:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000d340:	ins    DWORD PTR es:[rdi],dx
   14000d341:	add    BYTE PTR [rbp+0x0],ah
   14000d344:	add    BYTE PTR [rax],al
   14000d346:	add    BYTE PTR [rax],al
   14000d348:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000d34c:	movsxd eax,DWORD PTR [rax]
   14000d34e:	jb     0x14000d350
   14000d350:	outs   dx,DWORD PTR ds:[rsi]
   14000d351:	add    BYTE PTR [rbx+0x0],dh
   14000d354:	outs   dx,DWORD PTR ds:[rsi]
   14000d355:	add    BYTE PTR [rsi+0x0],ah
   14000d358:	je     0x14000d35a
   14000d35a:	scas   al,BYTE PTR es:[rdi]
   14000d35b:	add    BYTE PTR [rax],ah
   14000d35d:	add    BYTE PTR [rdi+0x0],dl
   14000d360:	imul   eax,DWORD PTR [rax],0x64006e
   14000d366:	outs   dx,DWORD PTR ds:[rsi]
   14000d367:	add    BYTE PTR [rdi+0x0],dh
   14000d36a:	jae    0x14000d36c
   14000d36c:	scas   al,BYTE PTR es:[rdi]
   14000d36d:	add    BYTE PTR [rax],ah
   14000d36f:	add    BYTE PTR [rdi+0x0],cl
   14000d372:	jo     0x14000d374
   14000d374:	add    BYTE PTR gs:[rdx+0x0],dh
   14000d378:	(bad)  
   14000d379:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000d37d:	add    BYTE PTR [rsi+0x0],ch
   14000d380:	add    BYTE PTR [eax],ah
   14000d383:	add    BYTE PTR [rbx+0x0],dl
   14000d386:	jns    0x14000d388
   14000d388:	jae    0x14000d38a
   14000d38a:	je     0x14000d38c
   14000d38c:	add    BYTE PTR gs:[rbp+0x0],ch
   14000d390:	add    BYTE PTR [rax],al
   14000d392:	add    BYTE PTR [rax],al
   14000d394:	rex.RX add BYTE PTR [rcx],r10b
   14000d397:	add    BYTE PTR [rcx],al
   14000d399:	add    BYTE PTR [rax+0x0],dl
   14000d39c:	jb     0x14000d39e
   14000d39e:	outs   dx,DWORD PTR ds:[rsi]
   14000d39f:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000d3a3:	add    BYTE PTR [rbx+0x0],ah
   14000d3a6:	je     0x14000d3a8
   14000d3a8:	push   rsi
   14000d3a9:	add    BYTE PTR [rbp+0x0],ah
   14000d3ac:	jb     0x14000d3ae
   14000d3ae:	jae    0x14000d3b0
   14000d3b0:	imul   eax,DWORD PTR [rax],0x6e006f
   14000d3b6:	add    BYTE PTR [rax],al
   14000d3b8:	xor    DWORD PTR [rax],eax
   14000d3ba:	xor    BYTE PTR [rax],al
   14000d3bc:	add    BYTE PTR cs:[rax],dh
   14000d3bf:	add    BYTE PTR [rsi],ch
   14000d3c1:	add    BYTE PTR [rcx],dh
   14000d3c3:	add    BYTE PTR [rax],dh
   14000d3c5:	add    BYTE PTR [rdx],dh
   14000d3c7:	add    BYTE PTR [rax+rax*1],dh
   14000d3ca:	xor    BYTE PTR [rax],al
   14000d3cc:	add    BYTE PTR cs:[rcx],dh
   14000d3cf:	add    BYTE PTR [rsi],dh
   14000d3d1:	add    BYTE PTR [rbx],dh
   14000d3d3:	add    BYTE PTR [rax],bh
   14000d3d5:	add    BYTE PTR [rax+rax*1],dh
   14000d3d8:	add    BYTE PTR [rax],al
   14000d3da:	add    BYTE PTR [rax],al
   14000d3dc:	add    BYTE PTR [rax],r8b
   14000d3df:	add    BYTE PTR [rcx],al
   14000d3e1:	add    BYTE PTR [rsi+0x0],dl
   14000d3e4:	(bad)  
   14000d3e5:	add    BYTE PTR [rdx+0x0],dh
   14000d3e8:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000d3ec:	ins    BYTE PTR es:[rdi],dx
   14000d3ed:	add    BYTE PTR [rbp+0x0],ah
   14000d3f0:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000d3f4:	data16 add BYTE PTR [rdi+0x0],ch
   14000d3f8:	add    BYTE PTR [rax],al
   14000d3fa:	add    BYTE PTR [rax],al
   14000d3fc:	and    al,0x0
   14000d3fe:	add    al,0x0
   14000d400:	add    BYTE PTR [rax],al
   14000d402:	push   rsp
   14000d403:	add    BYTE PTR [rdx+0x0],dh
   14000d406:	(bad)  
   14000d407:	add    BYTE PTR [rsi+0x0],ch
   14000d40a:	jae    0x14000d40c
   14000d40c:	ins    BYTE PTR es:[rdi],dx
   14000d40d:	add    BYTE PTR [rcx+0x0],ah
   14000d410:	je     0x14000d412
   14000d412:	imul   eax,DWORD PTR [rax],0x6e006f
   14000d418:	add    BYTE PTR [rax],al
   14000d41a:	add    BYTE PTR [rax],al
   14000d41c:	or     DWORD PTR [rax+rsi*4],eax
   14000d41f:	.byte 0x4

Disassembly of section .reloc:

000000014000e000 <.reloc>:
   14000e000:	add    BYTE PTR [rax+0x0],ah
   14000e003:	add    BYTE PTR [rax+0x1],al
   14000e006:	add    BYTE PTR [rax],al
   14000e008:	movabs ds:0xa370a368a360a350,rax
   14000e012:	js     0x14000dfb7
   14000e014:	and    BYTE PTR [rbx-0x5c5f5c78],0xa8
   14000e01b:	movabs ds:0xa558a528a520a3b0,eax
   14000e024:	(bad)  
   14000e025:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000e026:	push   0x78a570a5
   14000e02b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000e02c:	cwde   
   14000e02d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000e02e:	movabs al,ds:0xd0a5c8a5c0a5a8a5
   14000e037:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000e038:	enter  0xd0a6,0xa6
   14000e03c:	fsub   DWORD PTR [rsi-0x59175920]
   14000e042:	lock cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e044:	clc    
   14000e045:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e046:	add    BYTE PTR [rdi-0x58ef58f8],ah
   14000e04c:	sbb    BYTE PTR [rdi-0x58d758e0],ah
   14000e052:	xor    BYTE PTR [rdi-0x58bf58c8],ah
   14000e058:	cmps   QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   14000e05a:	push   rax
   14000e05b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e05c:	pop    rax
   14000e05d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e05e:	(bad)  
   14000e05f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e060:	push   0x78a770a7
   14000e065:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e066:	and    BYTE PTR [rdi-0x586f5878],0x98
   14000e06d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e06e:	movabs al,ds:0xe8a7d8a7d0a7a8a7
   14000e077:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e078:	clc    
   14000e079:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e07a:	add    BYTE PTR [rax-0x57ef57f8],ch
   14000e080:	sbb    BYTE PTR [rax-0x57d757e0],ch
   14000e086:	xor    BYTE PTR [rax-0x57bf57c8],ch
   14000e08c:	rex.W test al,0x50
   14000e08f:	test   al,0x58
   14000e091:	test   al,0x60
   14000e093:	test   al,0x68
   14000e095:	test   al,0x70
   14000e097:	test   al,0x78
   14000e099:	test   al,0x80
   14000e09b:	test   al,0x88
   14000e09d:	test   al,0x90
   14000e09f:	test   al,0x98
   14000e0a1:	test   al,0xa0
   14000e0a3:	test   al,0xa8
   14000e0a5:	test   al,0xb0
   14000e0a7:	test   al,0xb8
   14000e0a9:	test   al,0xc0
   14000e0ab:	test   al,0xc8
   14000e0ad:	test   al,0xd0
   14000e0af:	test   al,0xd8
   14000e0b1:	test   al,0xe0
   14000e0b3:	test   al,0xe8
   14000e0b5:	test   al,0xf0
   14000e0b7:	test   al,0xf8
   14000e0b9:	test   al,0x0
   14000e0bb:	test   eax,0xa930a928
   14000e0c0:	cmp    BYTE PTR [rcx-0x56b756c0],ch
   14000e0c6:	push   rax
   14000e0c7:	test   eax,0xa960a958
   14000e0cc:	push   0x78a970a9
   14000e0d1:	test   eax,0xa988a980
   14000e0d6:	nop
   14000e0d7:	test   eax,0xa9a0a998
   14000e0dc:	test   al,0xa9
   14000e0de:	mov    al,0xa9
   14000e0e0:	mov    eax,0xc8a9c0a9
   14000e0e5:	test   eax,0xa9d8a9d0
   14000e0ea:	loopne 0x14000e095
   14000e0ec:	call   0x138aad19a
   14000e0f1:	test   eax,0xaa08aa00
   14000e0f6:	adc    BYTE PTR [rdx-0x55df55e8],ch
   14000e0fc:	sub    BYTE PTR [rdx-0x55c755d0],ch
   14000e102:	stos   BYTE PTR es:[rdi],al
   14000e104:	rex.W stos BYTE PTR es:[rdi],al
   14000e106:	push   rax
   14000e107:	stos   BYTE PTR es:[rdi],al
   14000e108:	pop    rax
   14000e109:	stos   BYTE PTR es:[rdi],al
   14000e10a:	(bad)  
   14000e10b:	stos   BYTE PTR es:[rdi],al
   14000e10c:	push   0x78aa70aa
   14000e111:	stos   BYTE PTR es:[rdi],al
   14000e112:	sub    BYTE PTR [rdx-0x556f5578],0x98
   14000e119:	stos   BYTE PTR es:[rdi],al
   14000e11a:	movabs al,ds:0xc0aab8aab0aaa8aa
   14000e123:	stos   BYTE PTR es:[rdi],al
   14000e124:	enter  0xd0aa,0xaa
   14000e128:	fsubr  DWORD PTR [rdx-0x55175520]
   14000e12e:	lock stos BYTE PTR es:[rdi],al
   14000e130:	or     BYTE PTR [rbx-0x54df54f0],ch
   14000e136:	clc    
   14000e137:	lods   al,BYTE PTR ds:[rsi]
   14000e138:	adc    BYTE PTR [rbp-0x52df52e8],ch
   14000e13e:	add    BYTE PTR [rax],al
   14000e140:	add    BYTE PTR [rax+0xc0000],al
   14000e146:	add    BYTE PTR [rax],al
   14000e148:	jo     0x14000e0f7
   14000e14a:	js     0x14000e0f9
   14000e14c:	add    BYTE PTR [rax+0x640000],ah
   14000e152:	add    BYTE PTR [rax],al
   14000e154:	sub    BYTE PTR [rax-0x5f9f5fa8],ah
   14000e15a:	push   0xffffffff80a078a0
   14000e15f:	movabs al,ds:0xa120a0f0a0c8a0a0
   14000e168:	(bad)  
   14000e169:	movabs eax,ds:0xa328a2f0a290a1d0
   14000e172:	(bad)  
   14000e173:	movabs ds:0xa520a4e0a470a3a0,eax
   14000e17c:	loopne 0x14000e123
   14000e17e:	mov    al,0xa6
   14000e180:	lock cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e182:	(bad)  
   14000e183:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e184:	test   al,0xa7
   14000e186:	lock cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e188:	test   al,0x78
   14000e18b:	test   al,0xb0
   14000e18d:	test   al,0xf8
   14000e18f:	test   al,0x20
   14000e191:	test   eax,0xaa38a990
   14000e196:	jo     0x14000e142
   14000e198:	xor    BYTE PTR [rbx-0x53cf5400],ch
   14000e19e:	push   rax
   14000e19f:	lods   al,BYTE PTR ds:[rsi]
   14000e1a0:	adc    BYTE PTR [rbp-0x526f52b8],ch
   14000e1a6:	(bad)  
   14000e1a7:	scas   al,BYTE PTR es:[rdi]
   14000e1a8:	mov    al,0xae
   14000e1aa:	adc    BYTE PTR [rdi+0xaf50],ch
