
1c639fbba837b57f28691e7f210a034dd1b55380a13649a64e47be55bb8308a0.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
	...
   140001008:	mov    rax,rsp
   14000100b:	mov    QWORD PTR [rax+0x8],rbx
   14000100f:	mov    QWORD PTR [rax+0x10],rbp
   140001013:	mov    QWORD PTR [rax+0x20],rsi
   140001017:	push   rdi
   140001018:	push   r14
   14000101a:	push   r15
   14000101c:	sub    rsp,0x20
   140001020:	mov    r14,QWORD PTR [rdx]
   140001023:	mov    rbp,rdx
   140001026:	mov    r15,rcx
   140001029:	mov    BYTE PTR [rax+0x19],0x0
   14000102d:	mov    al,BYTE PTR [r14]
   140001030:	test   al,al
   140001032:	je     0x140001102
   140001038:	cmp    al,0x5
   14000103a:	je     0x140001102
   140001040:	movzx  ecx,al
   140001043:	inc    r14
   140001046:	sub    ecx,0x1
   140001049:	je     0x1400010c7
   14000104b:	sub    ecx,0x1
   14000104e:	je     0x140001095
   140001050:	sub    ecx,0x1
   140001053:	je     0x14000106d
   140001055:	cmp    ecx,0x1
   140001058:	jne    0x14000102d
   14000105a:	cmp    BYTE PTR [r15],0xd
   14000105e:	je     0x140001066
   140001060:	cmp    BYTE PTR [r15],0xa
   140001064:	jne    0x140001090
   140001066:	xor    eax,eax
   140001068:	jmp    0x140001109
   14000106d:	movzx  r8d,BYTE PTR [r15]
   140001071:	mov    edx,0x1
   140001076:	mov    eax,r8d
   140001079:	shr    r8,0x3
   14000107d:	and    eax,0x7
   140001080:	mov    cl,al
   140001082:	shl    edx,cl
   140001084:	mov    al,BYTE PTR [r8+r14*1]
   140001088:	test   al,dl
   14000108a:	je     0x140001066
   14000108c:	add    r14,0x20
   140001090:	inc    r15
   140001093:	jmp    0x14000102d
   140001095:	movzx  ecx,BYTE PTR [r15]
   140001099:	inc    r15
   14000109c:	cmp    DWORD PTR [rip+0x7fc5],0x0        # 0x140009068
   1400010a3:	jne    0x1400010b7
   1400010a5:	mov    BYTE PTR [rsp+0x50],cl
   1400010a9:	lea    rcx,[rsp+0x50]
   1400010ae:	call   QWORD PTR [rip+0x62a4]        # 0x140007358
   1400010b4:	movzx  ecx,BYTE PTR [rax]
   1400010b7:	movzx  eax,BYTE PTR [r14]
   1400010bb:	inc    r14
   1400010be:	cmp    ecx,eax
   1400010c0:	jne    0x140001066
   1400010c2:	jmp    0x14000102d
   1400010c7:	mov    rsi,QWORD PTR [rip+0x11422]        # 0x1400124f0
   1400010ce:	movzx  ebx,BYTE PTR [r14]
   1400010d2:	mov    rcx,rsi
   1400010d5:	call   QWORD PTR [rip+0x62ed]        # 0x1400073c8
   1400010db:	mov    r8d,ebx
   1400010de:	lea    rdx,[r14+0x1]
   1400010e2:	mov    rcx,r15
   1400010e5:	call   rsi
   1400010e7:	test   eax,eax
   1400010e9:	jne    0x140001066
   1400010ef:	movzx  eax,BYTE PTR [r14]
   1400010f3:	add    r15,rax
   1400010f6:	inc    eax
   1400010f8:	cdqe   
   1400010fa:	add    r14,rax
   1400010fd:	jmp    0x14000102d
   140001102:	mov    QWORD PTR [rbp+0x0],r14
   140001106:	mov    rax,r15
   140001109:	mov    rbx,QWORD PTR [rsp+0x40]
   14000110e:	mov    rbp,QWORD PTR [rsp+0x48]
   140001113:	mov    rsi,QWORD PTR [rsp+0x58]
   140001118:	add    rsp,0x20
   14000111c:	pop    r15
   14000111e:	pop    r14
   140001120:	pop    rdi
   140001121:	ret    
   140001122:	int3   
   140001123:	int3   
   140001124:	int3   
   140001125:	int3   
   140001126:	int3   
   140001127:	int3   
   140001128:	mov    QWORD PTR [rsp+0x8],rbx
   14000112d:	mov    QWORD PTR [rsp+0x10],rdx
   140001132:	push   rbp
   140001133:	push   rsi
   140001134:	push   rdi
   140001135:	sub    rsp,0x20
   140001139:	cmp    BYTE PTR [rdx],0x0
   14000113c:	mov    rdi,rdx
   14000113f:	mov    rbx,rcx
   140001142:	je     0x140001167
   140001144:	cmp    BYTE PTR [rdx],0x5
   140001147:	je     0x140001167
   140001149:	lea    rdx,[rsp+0x48]
   14000114e:	call   0x140001008
   140001153:	mov    rbx,rax
   140001156:	test   rax,rax
   140001159:	jne    0x140001162
   14000115b:	xor    eax,eax
   14000115d:	jmp    0x140001224
   140001162:	mov    rdi,QWORD PTR [rsp+0x48]
   140001167:	mov    cl,BYTE PTR [rdi]
   140001169:	mov    ebp,0x1
   14000116e:	add    rdi,rbp
   140001171:	test   cl,cl
   140001173:	je     0x140001222
   140001179:	mov    BYTE PTR [rsp+0x51],0x0
   14000117e:	lea    rax,[rip+0x63bb]        # 0x140007540
   140001185:	movzx  ecx,BYTE PTR [rdi]
   140001188:	movsxd rsi,DWORD PTR [rax+rcx*4]
   14000118c:	add    rsi,rdi
   14000118f:	sub    ecx,0x2
   140001192:	je     0x140001213
   140001194:	sub    ecx,ebp
   140001196:	je     0x1400011d8
   140001198:	cmp    ecx,ebp
   14000119a:	je     0x1400011ab
   14000119c:	jmp    0x14000115b
   14000119e:	cmp    BYTE PTR [rbx],0xd
   1400011a1:	je     0x14000115b
   1400011a3:	cmp    BYTE PTR [rbx],0xa
   1400011a6:	je     0x14000115b
   1400011a8:	add    rbx,rbp
   1400011ab:	mov    rdx,rsi
   1400011ae:	mov    rcx,rbx
   1400011b1:	call   0x140001128
   1400011b6:	test   eax,eax
   1400011b8:	je     0x14000119e
   1400011ba:	jmp    0x140001222
   1400011bc:	movzx  r8d,BYTE PTR [rbx]
   1400011c0:	mov    edx,ebp
   1400011c2:	mov    ecx,r8d
   1400011c5:	shr    r8,0x3
   1400011c9:	and    ecx,0x7
   1400011cc:	shl    edx,cl
   1400011ce:	test   BYTE PTR [r8+rdi*1+0x1],dl
   1400011d3:	je     0x14000115b
   1400011d5:	add    rbx,rbp
   1400011d8:	mov    rdx,rsi
   1400011db:	mov    rcx,rbx
   1400011de:	call   0x140001128
   1400011e3:	test   eax,eax
   1400011e5:	je     0x1400011bc
   1400011e7:	jmp    0x140001222
   1400011e9:	movzx  eax,BYTE PTR [rbx]
   1400011ec:	add    rbx,rbp
   1400011ef:	cmp    DWORD PTR [rip+0x7e72],0x0        # 0x140009068
   1400011f6:	jne    0x14000120a
   1400011f8:	lea    rcx,[rsp+0x50]
   1400011fd:	mov    BYTE PTR [rsp+0x50],al
   140001201:	call   QWORD PTR [rip+0x6151]        # 0x140007358
   140001207:	movzx  eax,BYTE PTR [rax]
   14000120a:	cmp    al,BYTE PTR [rdi+0x1]
   14000120d:	jne    0x14000115b
   140001213:	mov    rdx,rsi
   140001216:	mov    rcx,rbx
   140001219:	call   0x140001128
   14000121e:	test   eax,eax
   140001220:	je     0x1400011e9
   140001222:	mov    eax,ebp
   140001224:	mov    rbx,QWORD PTR [rsp+0x40]
   140001229:	add    rsp,0x20
   14000122d:	pop    rdi
   14000122e:	pop    rsi
   14000122f:	pop    rbp
   140001230:	ret    
   140001231:	int3   
   140001232:	int3   
   140001233:	int3   
   140001234:	int3   
   140001235:	int3   
   140001236:	int3   
   140001237:	int3   
   140001238:	mov    QWORD PTR [rsp+0x8],rbx
   14000123d:	movzx  r10d,r8b
   140001241:	shr    r10,0x3
   140001245:	movzx  r11d,r8b
   140001249:	add    r10,rcx
   14000124c:	and    r11d,0x7
   140001250:	cmp    r8b,r9b
   140001253:	ja     0x1400012b8
   140001255:	lea    rbx,[rcx+rdx*1]
   140001259:	test   r11d,r11d
   14000125c:	jne    0x140001286
   14000125e:	movzx  ecx,r8b
   140001262:	add    ecx,0x8
   140001265:	movzx  eax,r9b
   140001269:	cmp    ecx,eax
   14000126b:	jg     0x140001286
   14000126d:	cmp    r10,rbx
   140001270:	jae    0x1400012a1
   140001272:	mov    eax,DWORD PTR [rsp+0x28]
   140001276:	neg    eax
   140001278:	sbb    cl,cl
   14000127a:	mov    BYTE PTR [r10],cl
   14000127d:	inc    r10
   140001280:	add    r8b,0x8
   140001284:	jmp    0x1400012b3
   140001286:	cmp    r10,rbx
   140001289:	jae    0x1400012a1
   14000128b:	movsx  edx,BYTE PTR [r10]
   14000128f:	mov    ecx,r11d
   140001292:	mov    al,BYTE PTR [rsp+0x28]
   140001296:	btr    edx,r11d
   14000129a:	shl    al,cl
   14000129c:	or     dl,al
   14000129e:	mov    BYTE PTR [r10],dl
   1400012a1:	inc    r11d
   1400012a4:	cmp    r11d,0x8
   1400012a8:	jne    0x1400012b0
   1400012aa:	inc    r10
   1400012ad:	xor    r11d,r11d
   1400012b0:	inc    r8b
   1400012b3:	cmp    r8b,r9b
   1400012b6:	jbe    0x140001259
   1400012b8:	mov    rbx,QWORD PTR [rsp+0x8]
   1400012bd:	ret    
   1400012be:	int3   
   1400012bf:	int3   
   1400012c0:	int3   
   1400012c1:	int3   
   1400012c2:	int3   
   1400012c3:	int3   
   1400012c4:	mov    rax,rsp
   1400012c7:	mov    QWORD PTR [rax+0x10],rbx
   1400012cb:	mov    QWORD PTR [rax+0x18],rsi
   1400012cf:	mov    QWORD PTR [rax+0x20],rdi
   1400012d3:	push   rbp
   1400012d4:	push   r12
   1400012d6:	push   r13
   1400012d8:	push   r14
   1400012da:	push   r15
   1400012dc:	lea    rbp,[rax-0x178]
   1400012e3:	sub    rsp,0x250
   1400012ea:	mov    rax,QWORD PTR [rip+0x7d27]        # 0x140009018
   1400012f1:	xor    rax,rsp
   1400012f4:	mov    QWORD PTR [rbp+0x140],rax
   1400012fb:	xor    r13d,r13d
   1400012fe:	mov    rdi,rcx
   140001301:	cmp    DWORD PTR [rip+0x7d60],r13d        # 0x140009068
   140001308:	mov    BYTE PTR [rsp+0x31],r13b
   14000130d:	mov    BYTE PTR [rsp+0x39],r13b
   140001312:	mov    BYTE PTR [rsp+0x35],r13b
   140001317:	jne    0x14000132b
   140001319:	or     rdx,0xffffffffffffffff
   14000131d:	inc    rdx
   140001320:	cmp    BYTE PTR [rcx+rdx*1],r13b
   140001324:	jne    0x14000131d
   140001326:	call   0x140004dec
   14000132b:	cmp    BYTE PTR [rdi],0x5e
   14000132e:	lea    rsi,[rsp+0x40]
   140001333:	mov    r12d,0x1
   140001339:	jne    0x140001348
   14000133b:	mov    BYTE PTR [rsp+0x40],0x5e
   140001340:	lea    rsi,[rsp+0x41]
   140001345:	add    rdi,r12
   140001348:	cmp    BYTE PTR [rdi],r13b
   14000134b:	je     0x14000168c
   140001351:	mov    r15b,0x5c
   140001354:	lea    rax,[rbp+0x13e]
   14000135b:	cmp    rsi,rax
   14000135e:	ja     0x14000172d
   140001364:	lea    rdx,[rip+0x61c9]        # 0x140007534
   14000136b:	mov    rcx,rdi
   14000136e:	mov    r14d,0xfffffffe
   140001374:	call   QWORD PTR [rip+0x5fae]        # 0x140007328
   14000137a:	movsxd rcx,eax
   14000137d:	mov    rbx,rax
   140001380:	cmp    BYTE PTR [rcx+rdi*1],r15b
   140001384:	jne    0x1400013ba
   140001386:	mov    r14d,ebx
   140001389:	add    ebx,r12d
   14000138c:	movsxd rcx,ebx
   14000138f:	cmp    BYTE PTR [rcx+rdi*1],r13b
   140001393:	je     0x1400016cf
   140001399:	add    ebx,r12d
   14000139c:	lea    rdx,[rip+0x6191]        # 0x140007534
   1400013a3:	movsxd rcx,ebx
   1400013a6:	add    rcx,rdi
   1400013a9:	call   QWORD PTR [rip+0x5f79]        # 0x140007328
   1400013af:	add    ebx,eax
   1400013b1:	movsxd rax,ebx
   1400013b4:	cmp    BYTE PTR [rax+rdi*1],r15b
   1400013b8:	je     0x140001386
   1400013ba:	movsxd rax,ebx
   1400013bd:	cmp    BYTE PTR [rax+rdi*1],0x2a
   1400013c1:	jne    0x1400013da
   1400013c3:	mov    eax,ebx
   1400013c5:	sub    ebx,r12d
   1400013c8:	test   eax,eax
   1400013ca:	je     0x1400016cf
   1400013d0:	lea    eax,[rbx-0x1]
   1400013d3:	cmp    r14d,eax
   1400013d6:	cmove  ebx,r14d
   1400013da:	test   ebx,ebx
   1400013dc:	jle    0x140001449
   1400013de:	cmp    ebx,r12d
   1400013e1:	je     0x140001431
   1400013e3:	cmp    ebx,0x2
   1400013e6:	jne    0x1400013ed
   1400013e8:	cmp    BYTE PTR [rdi],r15b
   1400013eb:	je     0x140001431
   1400013ed:	mov    BYTE PTR [rsi],r12b
   1400013f0:	add    rsi,r12
   1400013f3:	mov    rcx,rsi
   1400013f6:	add    rsi,r12
   1400013f9:	sub    ebx,r12d
   1400013fc:	cmp    BYTE PTR [rdi],r15b
   1400013ff:	jne    0x140001407
   140001401:	add    rdi,r12
   140001404:	sub    ebx,r12d
   140001407:	lea    rax,[rbp+0x13f]
   14000140e:	cmp    rsi,rax
   140001411:	ja     0x140001717
   140001417:	mov    al,BYTE PTR [rdi]
   140001419:	add    rdi,r12
   14000141c:	mov    BYTE PTR [rsi],al
   14000141e:	add    rsi,r12
   140001421:	test   ebx,ebx
   140001423:	jg     0x1400013f9
   140001425:	mov    al,sil
   140001428:	sub    al,cl
   14000142a:	sub    al,r12b
   14000142d:	mov    BYTE PTR [rcx],al
   14000142f:	jmp    0x140001449
   140001431:	mov    BYTE PTR [rsi],0x2
   140001434:	add    rsi,r12
   140001437:	cmp    BYTE PTR [rdi],r15b
   14000143a:	jne    0x14000143f
   14000143c:	add    rdi,r12
   14000143f:	mov    al,BYTE PTR [rdi]
   140001441:	mov    BYTE PTR [rsi],al
   140001443:	add    rsi,r12
   140001446:	add    rdi,r12
   140001449:	lea    rax,[rbp+0x13d]
   140001450:	cmp    rsi,rax
   140001453:	ja     0x140001722
   140001459:	mov    al,BYTE PTR [rdi]
   14000145b:	test   al,al
   14000145d:	je     0x14000168c
   140001463:	cmp    al,0x2e
   140001465:	jne    0x140001483
   140001467:	add    rdi,r12
   14000146a:	cmp    BYTE PTR [rdi],0x2a
   14000146d:	jne    0x140001478
   14000146f:	add    rdi,r12
   140001472:	mov    BYTE PTR [rsi],0x5
   140001475:	add    rsi,r12
   140001478:	mov    BYTE PTR [rsi],0x4
   14000147b:	add    rsi,r12
   14000147e:	jmp    0x140001683
   140001483:	cmp    al,0x5b
   140001485:	jne    0x140001664
   14000148b:	add    rdi,r12
   14000148e:	cmp    BYTE PTR [rdi],r13b
   140001491:	je     0x1400016cf
   140001497:	xor    edx,edx
   140001499:	mov    BYTE PTR [rsi],0x3
   14000149c:	add    rsi,r12
   14000149f:	mov    rcx,rsi
   1400014a2:	lea    r8d,[rdx+0x20]
   1400014a6:	call   0x1400060c2
   1400014ab:	cmp    BYTE PTR [rdi],0x5e
   1400014ae:	mov    r15d,r12d
   1400014b1:	jne    0x14000162c
   1400014b7:	mov    r8d,0x20
   1400014bd:	or     edx,0xffffffff
   1400014c0:	mov    rcx,rsi
   1400014c3:	add    rdi,r12
   1400014c6:	call   0x1400060c2
   1400014cb:	mov    r9b,0xd
   1400014ce:	mov    DWORD PTR [rsp+0x20],r13d
   1400014d3:	lea    rbx,[rbp+0x140]
   1400014da:	mov    r8b,r9b
   1400014dd:	sub    rbx,rsi
   1400014e0:	mov    rcx,rsi
   1400014e3:	mov    rdx,rbx
   1400014e6:	call   0x140001238
   1400014eb:	mov    r9b,0xa
   1400014ee:	mov    DWORD PTR [rsp+0x20],r13d
   1400014f3:	mov    r8b,r9b
   1400014f6:	mov    rdx,rbx
   1400014f9:	mov    rcx,rsi
   1400014fc:	call   0x140001238
   140001501:	mov    r15d,r13d
   140001504:	jmp    0x14000162c
   140001509:	test   al,al
   14000150b:	je     0x1400016cf
   140001511:	cmp    al,0x5c
   140001513:	jne    0x140001522
   140001515:	add    rdi,r12
   140001518:	mov    al,BYTE PTR [rdi]
   14000151a:	test   al,al
   14000151c:	je     0x1400016cf
   140001522:	add    rdi,r12
   140001525:	movzx  edx,al
   140001528:	cmp    BYTE PTR [rdi],0x2d
   14000152b:	jne    0x140001555
   14000152d:	lea    rcx,[rdi+0x1]
   140001531:	mov    al,BYTE PTR [rcx]
   140001533:	test   al,al
   140001535:	je     0x140001555
   140001537:	cmp    al,0x5d
   140001539:	je     0x140001555
   14000153b:	mov    rdi,rcx
   14000153e:	cmp    al,0x5c
   140001540:	jne    0x14000154d
   140001542:	lea    rax,[rcx+0x1]
   140001546:	cmp    BYTE PTR [rax],r13b
   140001549:	cmovne rdi,rax
   14000154d:	movzx  eax,BYTE PTR [rdi]
   140001550:	add    rdi,r12
   140001553:	jmp    0x140001557
   140001555:	mov    eax,edx
   140001557:	mov    BYTE PTR [rsp+0x34],dl
   14000155b:	lea    rcx,[rsp+0x34]
   140001560:	lea    rdx,[rsp+0x38]
   140001565:	mov    BYTE PTR [rsp+0x38],al
   140001569:	call   QWORD PTR [rip+0x5dd9]        # 0x140007348
   14000156f:	test   eax,eax
   140001571:	jg     0x14000162c
   140001577:	mov    ebx,r13d
   14000157a:	lea    rdx,[rsp+0x30]
   14000157f:	mov    BYTE PTR [rsp+0x30],bl
   140001583:	lea    rcx,[rsp+0x34]
   140001588:	call   QWORD PTR [rip+0x5dba]        # 0x140007348
   14000158e:	test   eax,eax
   140001590:	jg     0x14000161d
   140001596:	lea    rdx,[rsp+0x38]
   14000159b:	lea    rcx,[rsp+0x30]
   1400015a0:	call   QWORD PTR [rip+0x5da2]        # 0x140007348
   1400015a6:	test   eax,eax
   1400015a8:	jg     0x14000161d
   1400015aa:	mov    r9b,BYTE PTR [rsp+0x30]
   1400015af:	lea    r14,[rbp+0x140]
   1400015b6:	sub    r14,rsi
   1400015b9:	mov    DWORD PTR [rsp+0x20],r15d
   1400015be:	mov    rdx,r14
   1400015c1:	mov    r8b,r9b
   1400015c4:	mov    rcx,rsi
   1400015c7:	call   0x140001238
   1400015cc:	cmp    DWORD PTR [rip+0x7a95],r13d        # 0x140009068
   1400015d3:	jne    0x14000161d
   1400015d5:	mov    ecx,ebx
   1400015d7:	call   QWORD PTR [rip+0x5d5b]        # 0x140007338
   1400015dd:	test   eax,eax
   1400015df:	je     0x1400015ee
   1400015e1:	lea    rcx,[rsp+0x30]
   1400015e6:	call   QWORD PTR [rip+0x5d7c]        # 0x140007368
   1400015ec:	jmp    0x140001605
   1400015ee:	mov    ecx,ebx
   1400015f0:	call   QWORD PTR [rip+0x5d22]        # 0x140007318
   1400015f6:	test   eax,eax
   1400015f8:	je     0x14000161d
   1400015fa:	lea    rcx,[rsp+0x30]
   1400015ff:	call   QWORD PTR [rip+0x5d53]        # 0x140007358
   140001605:	mov    r9b,BYTE PTR [rsp+0x30]
   14000160a:	mov    rdx,r14
   14000160d:	mov    r8b,r9b
   140001610:	mov    DWORD PTR [rsp+0x20],r15d
   140001615:	mov    rcx,rsi
   140001618:	call   0x140001238
   14000161d:	add    ebx,r12d
   140001620:	cmp    ebx,0x100
   140001626:	jb     0x14000157a
   14000162c:	mov    al,BYTE PTR [rdi]
   14000162e:	cmp    al,0x5d
   140001630:	jne    0x140001509
   140001636:	add    rdi,r12
   140001639:	cmp    BYTE PTR [rdi],0x2a
   14000163c:	jne    0x14000165b
   14000163e:	mov    r8d,0x21
   140001644:	lea    rdx,[rsi-0x1]
   140001648:	mov    rcx,rsi
   14000164b:	call   QWORD PTR [rip+0x5ba7]        # 0x1400071f8
   140001651:	mov    BYTE PTR [rsi-0x1],0x5
   140001655:	add    rsi,r12
   140001658:	add    rdi,r12
   14000165b:	add    rsi,0x20
   14000165f:	mov    r15b,0x5c
   140001662:	jmp    0x140001683
   140001664:	mov    BYTE PTR [rsi],0x5
   140001667:	add    rsi,r12
   14000166a:	mov    BYTE PTR [rsi],0x2
   14000166d:	add    rsi,r12
   140001670:	cmp    al,r15b
   140001673:	jne    0x140001678
   140001675:	add    rdi,r12
   140001678:	mov    al,BYTE PTR [rdi]
   14000167a:	mov    BYTE PTR [rsi],al
   14000167c:	add    rsi,r12
   14000167f:	add    rdi,0x2
   140001683:	cmp    BYTE PTR [rdi],r13b
   140001686:	jne    0x140001354
   14000168c:	mov    BYTE PTR [rsi],r13b
   14000168f:	lea    rax,[rsp+0x40]
   140001694:	add    rsi,r12
   140001697:	sub    esi,eax
   140001699:	mov    ecx,esi
   14000169b:	mov    edi,esi
   14000169d:	call   QWORD PTR [rip+0x5c5d]        # 0x140007300
   1400016a3:	mov    rbx,rax
   1400016a6:	test   rax,rax
   1400016a9:	jne    0x1400016d3
   1400016ab:	lea    ecx,[rax+0x2]
   1400016ae:	call   0x140005e38
   1400016b3:	mov    r8,QWORD PTR [rip+0x8dfe]        # 0x14000a4b8
   1400016ba:	lea    edx,[rbx+0x2]
   1400016bd:	mov    rcx,rax
   1400016c0:	call   0x1400052ec
   1400016c5:	lea    ecx,[rbx+0x2]
   1400016c8:	call   QWORD PTR [rip+0x5c3a]        # 0x140007308
   1400016ce:	int3   
   1400016cf:	xor    eax,eax
   1400016d1:	jmp    0x1400016e7
   1400016d3:	movsxd r8,edi
   1400016d6:	lea    rdx,[rsp+0x40]
   1400016db:	mov    rcx,rax
   1400016de:	call   QWORD PTR [rip+0x5b14]        # 0x1400071f8
   1400016e4:	mov    rax,rbx
   1400016e7:	mov    rcx,QWORD PTR [rbp+0x140]
   1400016ee:	xor    rcx,rsp
   1400016f1:	call   0x140005820
   1400016f6:	lea    r11,[rsp+0x250]
   1400016fe:	mov    rbx,QWORD PTR [r11+0x38]
   140001702:	mov    rsi,QWORD PTR [r11+0x40]
   140001706:	mov    rdi,QWORD PTR [r11+0x48]
   14000170a:	mov    rsp,r11
   14000170d:	pop    r15
   14000170f:	pop    r14
   140001711:	pop    r13
   140001713:	pop    r12
   140001715:	pop    rbp
   140001716:	ret    
   140001717:	mov    ecx,0x10
   14000171c:	call   0x140002524
   140001721:	int3   
   140001722:	mov    ecx,0x10
   140001727:	call   0x140002524
   14000172c:	int3   
   14000172d:	mov    ecx,0x10
   140001732:	call   0x140002524
   140001737:	int3   
   140001738:	int3   
   140001739:	int3   
   14000173a:	int3   
   14000173b:	int3   
   14000173c:	int3   
   14000173d:	int3   
   14000173e:	int3   
   14000173f:	int3   
   140001740:	mov    rax,rsp
   140001743:	mov    QWORD PTR [rax+0x8],rbx
   140001747:	mov    QWORD PTR [rax+0x10],rbp
   14000174b:	mov    QWORD PTR [rax+0x18],rsi
   14000174f:	mov    QWORD PTR [rax+0x20],rdi
   140001753:	push   r15
   140001755:	sub    rsp,0x30
   140001759:	cmp    BYTE PTR [rcx],0x5e
   14000175c:	mov    rdi,rdx
   14000175f:	mov    rbx,rcx
   140001762:	jne    0x140001767
   140001764:	inc    rbx
   140001767:	mov    r15d,0x20
   14000176d:	xor    edx,edx
   14000176f:	mov    r8d,r15d
   140001772:	mov    rcx,rdi
   140001775:	call   0x1400060c2
   14000177a:	jmp    0x140001845
   14000177f:	xor    esi,esi
   140001781:	cmp    al,0x5
   140001783:	jne    0x14000178d
   140001785:	mov    esi,0x1
   14000178a:	inc    rbx
   14000178d:	movzx  ecx,BYTE PTR [rbx]
   140001790:	inc    rbx
   140001793:	test   ecx,ecx
   140001795:	je     0x1400017b8
   140001797:	sub    ecx,0x1
   14000179a:	je     0x140001818
   14000179c:	sub    ecx,0x1
   14000179f:	je     0x140001825
   1400017a5:	sub    ecx,0x1
   1400017a8:	je     0x140001800
   1400017aa:	sub    ecx,0x1
   1400017ad:	je     0x1400017c4
   1400017af:	cmp    ecx,0x1
   1400017b2:	jne    0x140001841
   1400017b8:	mov    ecx,0x2
   1400017bd:	call   QWORD PTR [rip+0x5b45]        # 0x140007308
   1400017c3:	int3   
   1400017c4:	mov    r8,r15
   1400017c7:	or     edx,0xffffffff
   1400017ca:	mov    rcx,rdi
   1400017cd:	call   0x1400060c2
   1400017d2:	and    DWORD PTR [rsp+0x20],0x0
   1400017d7:	mov    r9b,0xd
   1400017da:	mov    r8b,r9b
   1400017dd:	mov    rdx,r15
   1400017e0:	mov    rcx,rdi
   1400017e3:	call   0x140001238
   1400017e8:	and    DWORD PTR [rsp+0x20],0x0
   1400017ed:	mov    r9b,0xa
   1400017f0:	mov    r8b,r9b
   1400017f3:	mov    rdx,r15
   1400017f6:	mov    rcx,rdi
   1400017f9:	call   0x140001238
   1400017fe:	jmp    0x140001841
   140001800:	mov    rcx,rdi
   140001803:	mov    rdx,r15
   140001806:	mov    al,BYTE PTR [rbx]
   140001808:	inc    rbx
   14000180b:	or     BYTE PTR [rcx],al
   14000180d:	inc    rcx
   140001810:	sub    rdx,0x1
   140001814:	jne    0x140001806
   140001816:	jmp    0x140001841
   140001818:	test   esi,esi
   14000181a:	jne    0x140001870
   14000181c:	mov    al,BYTE PTR [rbx]
   14000181e:	inc    rbx
   140001821:	test   al,al
   140001823:	je     0x140001870
   140001825:	mov    r9b,BYTE PTR [rbx]
   140001828:	mov    rdx,r15
   14000182b:	mov    r8b,r9b
   14000182e:	mov    DWORD PTR [rsp+0x20],0x1
   140001836:	mov    rcx,rdi
   140001839:	call   0x140001238
   14000183e:	inc    rbx
   140001841:	test   esi,esi
   140001843:	je     0x140001852
   140001845:	mov    al,BYTE PTR [rbx]
   140001847:	mov    rbp,rbx
   14000184a:	test   al,al
   14000184c:	jne    0x14000177f
   140001852:	mov    rbx,QWORD PTR [rsp+0x40]
   140001857:	mov    rax,rbp
   14000185a:	mov    rbp,QWORD PTR [rsp+0x48]
   14000185f:	mov    rsi,QWORD PTR [rsp+0x50]
   140001864:	mov    rdi,QWORD PTR [rsp+0x58]
   140001869:	add    rsp,0x30
   14000186d:	pop    r15
   14000186f:	ret    
   140001870:	mov    ecx,0x2
   140001875:	call   QWORD PTR [rip+0x5a8d]        # 0x140007308
   14000187b:	int3   
   14000187c:	int3   
   14000187d:	int3   
   14000187e:	int3   
   14000187f:	int3   
   140001880:	int3   
   140001881:	int3   
   140001882:	int3   
   140001883:	int3   
   140001884:	int3   
   140001885:	int3   
   140001886:	int3   
   140001887:	int3   
   140001888:	int3   
   140001889:	int3   
   14000188a:	int3   
   14000188b:	int3   
   14000188c:	int3   
   14000188d:	int3   
   14000188e:	int3   
   14000188f:	int3   
   140001890:	cmp    rcx,rdx
   140001893:	sbb    rax,rax
   140001896:	and    rax,rcx
   140001899:	ret    
   14000189a:	int3   
   14000189b:	int3   
   14000189c:	int3   
   14000189d:	int3   
   14000189e:	int3   
   14000189f:	int3   
   1400018a0:	mov    QWORD PTR [rsp+0x18],rbx
   1400018a5:	push   rbp
   1400018a6:	push   rsi
   1400018a7:	push   rdi
   1400018a8:	lea    rbp,[rsp-0x30]
   1400018ad:	sub    rsp,0x130
   1400018b4:	mov    rax,QWORD PTR [rip+0x775d]        # 0x140009018
   1400018bb:	xor    rax,rsp
   1400018be:	mov    QWORD PTR [rbp+0x20],rax
   1400018c2:	movsxd rbx,edx
   1400018c5:	mov    rsi,rcx
   1400018c8:	cmp    ebx,0x2
   1400018cb:	jl     0x140001972
   1400018d1:	cmp    BYTE PTR [rcx],0x5c
   1400018d4:	jne    0x140001972
   1400018da:	cmp    BYTE PTR [rcx+0x1],0x3c
   1400018de:	jne    0x140001972
   1400018e4:	test   BYTE PTR [rip+0x8595],0x8        # 0x140009e80
   1400018eb:	mov    edi,0x100
   1400018f0:	jne    0x140001942
   1400018f2:	lea    eax,[rbx-0x2]
   1400018f5:	movsxd r8,eax
   1400018f8:	lea    rax,[r8+0xd]
   1400018fc:	cmp    rax,rdi
   1400018ff:	ja     0x140001a21
   140001905:	mov    eax,DWORD PTR [rip+0x7735]        # 0x140009040
   14000190b:	lea    rdx,[rcx+0x2]
   14000190f:	movsd  xmm0,QWORD PTR [rip+0x7721]        # 0x140009038
   140001917:	lea    rcx,[rsp+0x2d]
   14000191c:	mov    DWORD PTR [rsp+0x28],eax
   140001920:	mov    al,BYTE PTR [rip+0x771e]        # 0x140009044
   140001926:	mov    BYTE PTR [rsp+0x2c],al
   14000192a:	movsd  QWORD PTR [rsp+0x20],xmm0
   140001930:	call   0x1400060b6
   140001935:	lea    edx,[rbx+0xb]
   140001938:	lea    rcx,[rsp+0x20]
   14000193d:	call   0x140001a60
   140001942:	lea    eax,[rbx-0x2]
   140001945:	movsxd r8,eax
   140001948:	lea    rax,[r8+0x1]
   14000194c:	cmp    rax,rdi
   14000194f:	ja     0x140001a2c
   140001955:	mov    al,BYTE PTR [rip+0x76ed]        # 0x140009048
   14000195b:	lea    rdx,[rsi+0x2]
   14000195f:	lea    rcx,[rsp+0x21]
   140001964:	mov    BYTE PTR [rsp+0x20],al
   140001968:	call   0x1400060b6
   14000196d:	jmp    0x1400019f5
   140001972:	test   BYTE PTR [rip+0x8507],0x10        # 0x140009e80
   140001979:	mov    edi,0x100
   14000197e:	jne    0x1400019cf
   140001980:	lea    eax,[rbx-0x2]
   140001983:	movsxd r8,eax
   140001986:	lea    rax,[r8+0xd]
   14000198a:	cmp    rax,rdi
   14000198d:	ja     0x140001a37
   140001993:	mov    rdx,rcx
   140001996:	lea    rcx,[rsp+0x20]
   14000199b:	call   0x1400060b6
   1400019a0:	movsd  xmm0,QWORD PTR [rip+0x7690]        # 0x140009038
   1400019a8:	lea    edx,[rbx+0xb]
   1400019ab:	movsd  QWORD PTR [rsp+rbx*1+0x1e],xmm0
   1400019b1:	lea    rcx,[rsp+0x20]
   1400019b6:	mov    eax,DWORD PTR [rip+0x7684]        # 0x140009040
   1400019bc:	mov    DWORD PTR [rsp+rbx*1+0x26],eax
   1400019c0:	mov    al,BYTE PTR [rip+0x767e]        # 0x140009044
   1400019c6:	mov    BYTE PTR [rsp+rbx*1+0x2a],al
   1400019ca:	call   0x140001a60
   1400019cf:	lea    eax,[rbx-0x2]
   1400019d2:	movsxd r8,eax
   1400019d5:	lea    rax,[r8+0x1]
   1400019d9:	cmp    rax,rdi
   1400019dc:	ja     0x140001a42
   1400019de:	mov    rdx,rsi
   1400019e1:	lea    rcx,[rsp+0x20]
   1400019e6:	call   0x1400060b6
   1400019eb:	mov    al,BYTE PTR [rip+0x763f]        # 0x140009030
   1400019f1:	mov    BYTE PTR [rsp+rbx*1+0x1e],al
   1400019f5:	lea    edx,[rbx-0x1]
   1400019f8:	lea    rcx,[rsp+0x20]
   1400019fd:	call   0x140001a60
   140001a02:	mov    rcx,QWORD PTR [rbp+0x20]
   140001a06:	xor    rcx,rsp
   140001a09:	call   0x140005820
   140001a0e:	mov    rbx,QWORD PTR [rsp+0x160]
   140001a16:	add    rsp,0x130
   140001a1d:	pop    rdi
   140001a1e:	pop    rsi
   140001a1f:	pop    rbp
   140001a20:	ret    
   140001a21:	mov    ecx,0x2
   140001a26:	call   0x140002524
   140001a2b:	int3   
   140001a2c:	mov    ecx,0x2
   140001a31:	call   0x140002524
   140001a36:	int3   
   140001a37:	mov    ecx,0x2
   140001a3c:	call   0x140002524
   140001a41:	int3   
   140001a42:	mov    ecx,0x2
   140001a47:	call   0x140002524
   140001a4c:	int3   
   140001a4d:	int3   
   140001a4e:	int3   
   140001a4f:	int3   
   140001a50:	int3   
   140001a51:	int3   
   140001a52:	int3   
   140001a53:	int3   
   140001a54:	int3   
   140001a55:	int3   
   140001a56:	int3   
   140001a57:	int3   
   140001a58:	int3   
   140001a59:	int3   
   140001a5a:	int3   
   140001a5b:	int3   
   140001a5c:	int3   
   140001a5d:	int3   
   140001a5e:	int3   
   140001a5f:	int3   
   140001a60:	mov    QWORD PTR [rsp+0x18],rbx
   140001a65:	push   rbp
   140001a66:	push   rsi
   140001a67:	push   rdi
   140001a68:	push   r14
   140001a6a:	push   r15
   140001a6c:	lea    rbp,[rsp-0x60]
   140001a71:	sub    rsp,0x160
   140001a78:	mov    rax,QWORD PTR [rip+0x7599]        # 0x140009018
   140001a7f:	xor    rax,rsp
   140001a82:	mov    QWORD PTR [rbp+0x50],rax
   140001a86:	lea    r15,[rip+0xfffffffffffffe03]        # 0x140001890
   140001a8d:	movsxd rbx,edx
   140001a90:	cmp    QWORD PTR [rip+0x10b71],r15        # 0x140012608
   140001a97:	je     0x140001add
   140001a99:	mov    r8d,ebx
   140001a9c:	mov    rdx,rcx
   140001a9f:	mov    r10b,0x5c
   140001aa2:	cmp    ebx,0x2
   140001aa5:	jl     0x140001ab2
   140001aa7:	cmp    BYTE PTR [rcx],r10b
   140001aaa:	jne    0x140001ab2
   140001aac:	cmp    BYTE PTR [rcx+0x1],0x3c
   140001ab0:	je     0x140001ad6
   140001ab2:	test   ebx,ebx
   140001ab4:	jle    0x140001b00
   140001ab6:	mov    al,BYTE PTR [rdx]
   140001ab8:	dec    r8d
   140001abb:	inc    rdx
   140001abe:	cmp    al,r10b
   140001ac1:	jne    0x140001ad1
   140001ac3:	sub    r8d,0x1
   140001ac7:	jne    0x140001ace
   140001ac9:	cmp    BYTE PTR [rdx],0x3e
   140001acc:	je     0x140001ad6
   140001ace:	inc    rdx
   140001ad1:	test   r8d,r8d
   140001ad4:	jmp    0x140001ab4
   140001ad6:	mov    edx,ebx
   140001ad8:	call   0x1400018a0
   140001add:	mov    rcx,QWORD PTR [rbp+0x50]
   140001ae1:	xor    rcx,rsp
   140001ae4:	call   0x140005820
   140001ae9:	mov    rbx,QWORD PTR [rsp+0x1a0]
   140001af1:	add    rsp,0x160
   140001af8:	pop    r15
   140001afa:	pop    r14
   140001afc:	pop    rdi
   140001afd:	pop    rsi
   140001afe:	pop    rbp
   140001aff:	ret    
   140001b00:	cmp    BYTE PTR [rcx],0x5e
   140001b03:	mov    edi,DWORD PTR [rip+0x8377]        # 0x140009e80
   140001b09:	mov    BYTE PTR [rsp+0x21],0x0
   140001b0e:	jne    0x140001b13
   140001b10:	or     edi,0x8
   140001b13:	xor    edx,edx
   140001b15:	lea    r8d,[rbx-0x1]
   140001b19:	lea    r9d,[rdx-0x2]
   140001b1d:	test   r8d,r8d
   140001b20:	jle    0x140001b37
   140001b22:	movsxd rax,edx
   140001b25:	cmp    BYTE PTR [rax+rcx*1],r10b
   140001b29:	jne    0x140001b30
   140001b2b:	mov    r9d,edx
   140001b2e:	inc    edx
   140001b30:	inc    edx
   140001b32:	cmp    edx,r8d
   140001b35:	jl     0x140001b22
   140001b37:	test   ebx,ebx
   140001b39:	jle    0x140001b50
   140001b3b:	cmp    BYTE PTR [rbx+rcx*1-0x1],0x24
   140001b40:	jne    0x140001b50
   140001b42:	lea    eax,[rbx-0x2]
   140001b45:	cmp    r9d,eax
   140001b48:	je     0x140001b50
   140001b4a:	mov    ebx,r8d
   140001b4d:	or     edi,0x10
   140001b50:	cmp    ebx,0xfe
   140001b56:	jg     0x140001d2a
   140001b5c:	mov    r8,rcx
   140001b5f:	movsxd rsi,ebx
   140001b62:	mov    r14d,0x100
   140001b68:	lea    rcx,[rsp+0x50]
   140001b6d:	mov    r9,rsi
   140001b70:	mov    edx,r14d
   140001b73:	call   QWORD PTR [rip+0x5797]        # 0x140007310
   140001b79:	test   dil,0x10
   140001b7d:	je     0x140001b86
   140001b7f:	mov    BYTE PTR [rsp+rsi*1+0x50],0xd
   140001b84:	inc    ebx
   140001b86:	movsxd rax,ebx
   140001b89:	cmp    rax,r14
   140001b8c:	jae    0x140001d35
   140001b92:	lea    rcx,[rsp+0x50]
   140001b97:	mov    BYTE PTR [rsp+rax*1+0x50],0x0
   140001b9c:	call   0x1400012c4
   140001ba1:	mov    rsi,rax
   140001ba4:	test   rax,rax
   140001ba7:	je     0x140001add
   140001bad:	inc    DWORD PTR [rip+0x10a4d]        # 0x140012600
   140001bb3:	test   dil,0x8
   140001bb7:	jne    0x140001bc9
   140001bb9:	lea    rdx,[rsp+0x28]
   140001bbe:	mov    rcx,rax
   140001bc1:	call   0x140001740
   140001bc6:	mov    rsi,rax
   140001bc9:	lea    rdx,[rsp+0x28]
   140001bce:	mov    rcx,rsi
   140001bd1:	call   0x140001740
   140001bd6:	cmp    BYTE PTR [rax],0x0
   140001bd9:	jne    0x140001be7
   140001bdb:	mov    QWORD PTR [rip+0x10a26],r15        # 0x140012608
   140001be2:	jmp    0x140001add
   140001be7:	xor    ebx,ebx
   140001be9:	lea    rdi,[rip+0xffffffffffffe410]        # 0x140000000
   140001bf0:	movsxd r14,ebx
   140001bf3:	mov    ecx,ebx
   140001bf5:	mov    rax,r14
   140001bf8:	and    ecx,0x7
   140001bfb:	sar    rax,0x3
   140001bff:	movsx  eax,BYTE PTR [rsp+rax*1+0x28]
   140001c04:	bt     eax,ecx
   140001c07:	jae    0x140001cce
   140001c0d:	mov    ecx,0x10
   140001c12:	call   QWORD PTR [rip+0x56e8]        # 0x140007300
   140001c18:	mov    r15,rax
   140001c1b:	test   rax,rax
   140001c1e:	je     0x140001d04
   140001c24:	movzx  edi,BYTE PTR [r14+rdi*1+0x12500]
   140001c2d:	mov    QWORD PTR [rax+0x8],rsi
   140001c31:	test   edi,edi
   140001c33:	jne    0x140001cb1
   140001c35:	movsxd rdi,DWORD PTR [rip+0x73f8]        # 0x140009034
   140001c3c:	inc    DWORD PTR [rip+0x73f2]        # 0x140009034
   140001c42:	cmp    edi,0x100
   140001c48:	jge    0x140001ce1
   140001c4e:	lea    rcx,[rip+0xffffffffffffe3ab]        # 0x140000000
   140001c55:	and    QWORD PTR [rcx+rdi*8+0x9680],0x0
   140001c5e:	cmp    DWORD PTR [rip+0x7403],0x0        # 0x140009068
   140001c65:	mov    BYTE PTR [r14+rcx*1+0x12500],dil
   140001c6d:	jne    0x140001cb1
   140001c6f:	mov    ecx,ebx
   140001c71:	call   QWORD PTR [rip+0x56c9]        # 0x140007340
   140001c77:	test   eax,eax
   140001c79:	je     0x140001cb1
   140001c7b:	lea    rcx,[rsp+0x20]
   140001c80:	mov    BYTE PTR [rsp+0x20],bl
   140001c84:	call   QWORD PTR [rip+0x56de]        # 0x140007368
   140001c8a:	cmp    BYTE PTR [rax],bl
   140001c8c:	jne    0x140001c9d
   140001c8e:	lea    rcx,[rsp+0x20]
   140001c93:	call   QWORD PTR [rip+0x56bf]        # 0x140007358
   140001c99:	cmp    BYTE PTR [rax],bl
   140001c9b:	je     0x140001cb1
   140001c9d:	movzx  eax,BYTE PTR [rsp+0x20]
   140001ca2:	lea    rcx,[rip+0xffffffffffffe357]        # 0x140000000
   140001ca9:	mov    BYTE PTR [rax+rcx*1+0x12500],dil
   140001cb1:	movsxd rcx,edi
   140001cb4:	lea    rdi,[rip+0xffffffffffffe345]        # 0x140000000
   140001cbb:	mov    rax,QWORD PTR [rdi+rcx*8+0x9680]
   140001cc3:	mov    QWORD PTR [r15],rax
   140001cc6:	mov    QWORD PTR [rdi+rcx*8+0x9680],r15
   140001cce:	inc    ebx
   140001cd0:	cmp    ebx,0x100
   140001cd6:	jge    0x140001add
   140001cdc:	jmp    0x140001bf0
   140001ce1:	mov    ebx,0x2
   140001ce6:	mov    ecx,ebx
   140001ce8:	call   0x140005e38
   140001ced:	mov    rcx,rax
   140001cf0:	lea    edx,[rbx+0x8]
   140001cf3:	xor    r8d,r8d
   140001cf6:	call   0x1400052ec
   140001cfb:	mov    ecx,ebx
   140001cfd:	call   QWORD PTR [rip+0x5605]        # 0x140007308
   140001d03:	int3   
   140001d04:	mov    ebx,0x2
   140001d09:	mov    ecx,ebx
   140001d0b:	call   0x140005e38
   140001d10:	mov    r8,QWORD PTR [rip+0x87a1]        # 0x14000a4b8
   140001d17:	mov    rcx,rax
   140001d1a:	mov    edx,ebx
   140001d1c:	call   0x1400052ec
   140001d21:	mov    ecx,ebx
   140001d23:	call   QWORD PTR [rip+0x55df]        # 0x140007308
   140001d29:	int3   
   140001d2a:	mov    ecx,0x2
   140001d2f:	call   0x140002524
   140001d34:	int3   
   140001d35:	call   0x140005a18
   140001d3a:	int3   
   140001d3b:	int3   
   140001d3c:	int3   
   140001d3d:	int3   
   140001d3e:	int3   
   140001d3f:	int3   
   140001d40:	int3   
   140001d41:	int3   
   140001d42:	int3   
   140001d43:	int3   
   140001d44:	int3   
   140001d45:	int3   
   140001d46:	int3   
   140001d47:	int3   
   140001d48:	int3   
   140001d49:	int3   
   140001d4a:	int3   
   140001d4b:	int3   
   140001d4c:	int3   
   140001d4d:	int3   
   140001d4e:	int3   
   140001d4f:	int3   
   140001d50:	mov    QWORD PTR [rsp+0x10],rdx
   140001d55:	push   rbx
   140001d56:	push   rsi
   140001d57:	push   rdi
   140001d58:	push   r14
   140001d5a:	push   r15
   140001d5c:	sub    rsp,0x30
   140001d60:	mov    rsi,rdx
   140001d63:	mov    rbx,rcx
   140001d66:	mov    r14,rcx
   140001d69:	mov    QWORD PTR [rsp+0x70],rcx
   140001d6e:	lea    r15,[rip+0xffffffffffffe28b]        # 0x140000000
   140001d75:	cmp    rbx,rsi
   140001d78:	jae    0x140001e38
   140001d7e:	movzx  eax,BYTE PTR [rbx]
   140001d81:	movzx  ecx,BYTE PTR [rax+r15*1+0x12500]
   140001d8a:	inc    rbx
   140001d8d:	test   ecx,ecx
   140001d8f:	je     0x140001d75
   140001d91:	mov    rdi,QWORD PTR [r15+rcx*8+0x9680]
   140001d99:	test   rdi,rdi
   140001d9c:	jne    0x140001da8
   140001d9e:	lea    ecx,[rdi+0x2]
   140001da1:	call   QWORD PTR [rip+0x5561]        # 0x140007308
   140001da7:	int3   
   140001da8:	dec    rbx
   140001dab:	mov    QWORD PTR [rsp+0x60],rbx
   140001db0:	test   rdi,rdi
   140001db3:	je     0x140001e30
   140001db5:	mov    rdx,QWORD PTR [rdi+0x8]
   140001db9:	mov    rdi,QWORD PTR [rdi]
   140001dbc:	mov    QWORD PTR [rsp+0x78],rdi
   140001dc1:	cmp    BYTE PTR [rdx],0x5e
   140001dc4:	jne    0x140001dd4
   140001dc6:	inc    rdx
   140001dc9:	cmp    rbx,r14
   140001dcc:	jbe    0x140001dd4
   140001dce:	cmp    BYTE PTR [rbx-0x1],0xa
   140001dd2:	jne    0x140001db0
   140001dd4:	mov    rax,QWORD PTR [rip+0x5575]        # 0x140007350
   140001ddb:	mov    QWORD PTR [rip+0x1070e],rax        # 0x1400124f0
   140001de2:	cmp    DWORD PTR [rip+0x727f],0x0        # 0x140009068
   140001de9:	cmove  rax,QWORD PTR [rip+0x553f]        # 0x140007330
   140001df1:	mov    QWORD PTR [rip+0x106f8],rax        # 0x1400124f0
   140001df8:	mov    rcx,rbx
   140001dfb:	call   0x140001128
   140001e00:	mov    DWORD PTR [rsp+0x20],eax
   140001e04:	jmp    0x140001e27
   140001e06:	xor    eax,eax
   140001e08:	mov    DWORD PTR [rsp+0x20],eax
   140001e0c:	lea    r15,[rip+0xffffffffffffe1ed]        # 0x140000000
   140001e13:	mov    rsi,QWORD PTR [rsp+0x68]
   140001e18:	mov    rbx,QWORD PTR [rsp+0x60]
   140001e1d:	mov    r14,QWORD PTR [rsp+0x70]
   140001e22:	mov    rdi,QWORD PTR [rsp+0x78]
   140001e27:	test   eax,eax
   140001e29:	je     0x140001db0
   140001e2b:	mov    rax,rbx
   140001e2e:	jmp    0x140001e3a
   140001e30:	inc    rbx
   140001e33:	jmp    0x140001d75
   140001e38:	xor    eax,eax
   140001e3a:	add    rsp,0x30
   140001e3e:	pop    r15
   140001e40:	pop    r14
   140001e42:	pop    rdi
   140001e43:	pop    rsi
   140001e44:	pop    rbx
   140001e45:	ret    
   140001e46:	int3   
   140001e47:	int3   
   140001e48:	int3   
   140001e49:	int3   
   140001e4a:	int3   
   140001e4b:	int3   
   140001e4c:	mov    QWORD PTR [rsp+0x8],rbx
   140001e51:	mov    QWORD PTR [rsp+0x10],rbp
   140001e56:	mov    QWORD PTR [rsp+0x18],rsi
   140001e5b:	push   rdi
   140001e5c:	push   r14
   140001e5e:	push   r15
   140001e60:	sub    rsp,0x20
   140001e64:	mov    rsi,QWORD PTR [rip+0x1068d]        # 0x1400124f8
   140001e6b:	or     rbx,0xffffffffffffffff
   140001e6f:	mov    BYTE PTR [rcx],0x0
   140001e72:	mov    r15,r8
   140001e75:	mov    r14,rcx
   140001e78:	mov    ebp,0x1
   140001e7d:	cmp    QWORD PTR [rsi],rsi
   140001e80:	je     0x140001eb8
   140001e82:	mov    edi,0x105
   140001e87:	mov    rsi,QWORD PTR [rsi]
   140001e8a:	mov    rax,rbx
   140001e8d:	lea    r8,[rsi+0x20]
   140001e91:	inc    rax
   140001e94:	cmp    BYTE PTR [r8+rax*1],0x0
   140001e99:	jne    0x140001e91
   140001e9b:	add    ebp,eax
   140001e9d:	cmp    ebp,edi
   140001e9f:	ja     0x140001f1a
   140001ea1:	mov    rdx,rdi
   140001ea4:	mov    rcx,r14
   140001ea7:	call   QWORD PTR [rip+0x543b]        # 0x1400072e8
   140001ead:	cmp    rsi,QWORD PTR [rip+0x10644]        # 0x1400124f8
   140001eb4:	je     0x140001ede
   140001eb6:	jmp    0x140001e87
   140001eb8:	lea    r8,[rsi+0x20]
   140001ebc:	mov    rax,rbx
   140001ebf:	inc    rax
   140001ec2:	cmp    BYTE PTR [r8+rax*1],0x0
   140001ec7:	jne    0x140001ebf
   140001ec9:	add    eax,ebp
   140001ecb:	mov    edi,0x105
   140001ed0:	mov    ebp,eax
   140001ed2:	cmp    eax,edi
   140001ed4:	ja     0x140001f25
   140001ed6:	mov    edx,edi
   140001ed8:	call   QWORD PTR [rip+0x541a]        # 0x1400072f8
   140001ede:	inc    rbx
   140001ee1:	cmp    BYTE PTR [r15+rbx*1],0x0
   140001ee6:	jne    0x140001ede
   140001ee8:	mov    eax,ebp
   140001eea:	add    rbx,rax
   140001eed:	cmp    rbx,rdi
   140001ef0:	ja     0x140001f30
   140001ef2:	mov    r8,r15
   140001ef5:	mov    rdx,rdi
   140001ef8:	mov    rcx,r14
   140001efb:	mov    rbx,QWORD PTR [rsp+0x40]
   140001f00:	mov    rbp,QWORD PTR [rsp+0x48]
   140001f05:	mov    rsi,QWORD PTR [rsp+0x50]
   140001f0a:	add    rsp,0x20
   140001f0e:	pop    r15
   140001f10:	pop    r14
   140001f12:	pop    rdi
   140001f13:	rex.W jmp QWORD PTR [rip+0x53ce]        # 0x1400072e8
   140001f1a:	mov    ecx,0x2
   140001f1f:	call   0x140002524
   140001f24:	int3   
   140001f25:	mov    ecx,0x2
   140001f2a:	call   0x140002524
   140001f2f:	int3   
   140001f30:	mov    ecx,0x2
   140001f35:	call   0x140002524
   140001f3a:	int3   
   140001f3b:	int3   
   140001f3c:	int3   
   140001f3d:	int3   
   140001f3e:	int3   
   140001f3f:	int3   
   140001f40:	int3   
   140001f41:	int3   
   140001f42:	int3   
   140001f43:	int3   
   140001f44:	mov    QWORD PTR [rsp+0x10],rbx
   140001f49:	push   rbp
   140001f4a:	push   rsi
   140001f4b:	push   rdi
   140001f4c:	push   r12
   140001f4e:	push   r13
   140001f50:	push   r14
   140001f52:	push   r15
   140001f54:	lea    rbp,[rsp-0x500]
   140001f5c:	sub    rsp,0x600
   140001f63:	mov    rax,QWORD PTR [rip+0x70ae]        # 0x140009018
   140001f6a:	xor    rax,rsp
   140001f6d:	mov    QWORD PTR [rbp+0x4f0],rax
   140001f74:	mov    rbx,QWORD PTR [rip+0x1057d]        # 0x1400124f8
   140001f7b:	or     rsi,0xffffffffffffffff
   140001f7f:	movsxd rax,r9d
   140001f82:	mov    r13,r8
   140001f85:	mov    QWORD PTR [rsp+0x68],r8
   140001f8a:	mov    rdi,rcx
   140001f8d:	mov    QWORD PTR [rsp+0x58],rcx
   140001f92:	mov    r15,rax
   140001f95:	test   rbx,rbx
   140001f98:	jne    0x140002175
   140001f9e:	mov    ecx,0x12d
   140001fa3:	call   QWORD PTR [rip+0x5357]        # 0x140007300
   140001fa9:	mov    QWORD PTR [rip+0x10548],rax        # 0x1400124f8
   140001fb0:	mov    rbx,rax
   140001fb3:	test   rax,rax
   140001fb6:	jne    0x140001fc1
   140001fb8:	or     rax,0xffffffffffffffff
   140001fbc:	jmp    0x1400024f3
   140001fc1:	imul   rcx,r15,0x110
   140001fc8:	call   QWORD PTR [rip+0x5332]        # 0x140007300
   140001fce:	mov    QWORD PTR [rbx+0x18],rax
   140001fd2:	test   rax,rax
   140001fd5:	jne    0x140001fe2
   140001fd7:	mov    rcx,rbx
   140001fda:	call   QWORD PTR [rip+0x5380]        # 0x140007360
   140001fe0:	jmp    0x140001fb8
   140001fe2:	mov    BYTE PTR [rbx+0x20],0x0
   140001fe6:	lea    rax,[rbp+0x2f0]
   140001fed:	mov    r14d,0x100
   140001ff3:	mov    QWORD PTR [rbx+0x10],rsi
   140001ff7:	mov    QWORD PTR [rsp+0x40],r14
   140001ffc:	lea    r9,[rbp+0x3f0]
   140002003:	mov    QWORD PTR [rsp+0x38],rax
   140002008:	lea    rdx,[rsp+0x50]
   14000200d:	lea    rax,[rbp+0x1f0]
   140002014:	mov    QWORD PTR [rbx+0x8],rbx
   140002018:	mov    QWORD PTR [rbx],rbx
   14000201b:	mov    r12d,0x3
   140002021:	mov    rcx,QWORD PTR [r13+0x0]
   140002025:	mov    r8d,r12d
   140002028:	mov    QWORD PTR [rsp+0x30],r14
   14000202d:	mov    QWORD PTR [rsp+0x28],rax
   140002032:	mov    QWORD PTR [rsp+0x20],r14
   140002037:	call   QWORD PTR [rip+0x52a3]        # 0x1400072e0
   14000203d:	mov    rcx,QWORD PTR [rip+0x104b4]        # 0x1400124f8
   140002044:	lea    ebx,[r14+0x6]
   140002048:	add    rcx,0x20
   14000204c:	lea    r8,[rsp+0x50]
   140002051:	mov    edx,ebx
   140002053:	call   QWORD PTR [rip+0x529f]        # 0x1400072f8
   140002059:	mov    rcx,QWORD PTR [rip+0x10498]        # 0x1400124f8
   140002060:	lea    r8,[rbp+0x3f0]
   140002067:	add    rcx,0x20
   14000206b:	mov    edx,ebx
   14000206d:	call   QWORD PTR [rip+0x5275]        # 0x1400072e8
   140002073:	mov    rcx,QWORD PTR [r13+0x0]
   140002077:	mov    rbx,rsi
   14000207a:	inc    rbx
   14000207d:	cmp    BYTE PTR [rcx+rbx*1],0x0
   140002081:	jne    0x14000207a
   140002083:	lea    r8,[rbp+0x1f0]
   14000208a:	lea    rdx,[rbx+0x1]
   14000208e:	call   QWORD PTR [rip+0x5264]        # 0x1400072f8
   140002094:	mov    rcx,QWORD PTR [r13+0x0]
   140002098:	lea    r8,[rbp+0x2f0]
   14000209f:	lea    rdx,[rbx+0x1]
   1400020a3:	call   QWORD PTR [rip+0x523f]        # 0x1400072e8
   1400020a9:	mov    edi,0x1
   1400020ae:	jmp    0x14000212c
   1400020b0:	mov    rcx,QWORD PTR [r13+rdi*8+0x0]
   1400020b5:	lea    rax,[rbp+0x2f0]
   1400020bc:	mov    QWORD PTR [rsp+0x40],r14
   1400020c1:	lea    r9,[rbp+0x3f0]
   1400020c8:	mov    QWORD PTR [rsp+0x38],rax
   1400020cd:	lea    rdx,[rsp+0x50]
   1400020d2:	lea    rax,[rbp+0x1f0]
   1400020d9:	mov    QWORD PTR [rsp+0x30],r14
   1400020de:	mov    QWORD PTR [rsp+0x28],rax
   1400020e3:	mov    r8,r12
   1400020e6:	mov    QWORD PTR [rsp+0x20],r14
   1400020eb:	call   QWORD PTR [rip+0x51ef]        # 0x1400072e0
   1400020f1:	mov    rcx,QWORD PTR [r13+rdi*8+0x0]
   1400020f6:	mov    rbx,rsi
   1400020f9:	inc    rbx
   1400020fc:	cmp    BYTE PTR [rcx+rbx*1],0x0
   140002100:	jne    0x1400020f9
   140002102:	lea    r8,[rbp+0x1f0]
   140002109:	lea    rdx,[rbx+0x1]
   14000210d:	call   QWORD PTR [rip+0x51e5]        # 0x1400072f8
   140002113:	mov    rcx,QWORD PTR [r13+rdi*8+0x0]
   140002118:	lea    r8,[rbp+0x2f0]
   14000211f:	lea    rdx,[rbx+0x1]
   140002123:	call   QWORD PTR [rip+0x51bf]        # 0x1400072e8
   140002129:	inc    rdi
   14000212c:	cmp    rdi,r15
   14000212f:	jl     0x1400020b0
   140002135:	mov    rbx,QWORD PTR [rip+0x103bc]        # 0x1400124f8
   14000213c:	test   r15,r15
   14000213f:	jle    0x140002167
   140002141:	xor    ecx,ecx
   140002143:	mov    rdx,r15
   140002146:	mov    rax,QWORD PTR [rbx+0x18]
   14000214a:	mov    QWORD PTR [rcx+rax*1],rsi
   14000214e:	lea    rcx,[rcx+0x110]
   140002155:	mov    rax,QWORD PTR [rbx+0x18]
   140002159:	mov    BYTE PTR [rcx+rax*1-0x106],0x0
   140002161:	sub    rdx,0x1
   140002165:	jne    0x140002146
   140002167:	test   rbx,rbx
   14000216a:	je     0x1400024f1
   140002170:	mov    rdi,QWORD PTR [rsp+0x58]
   140002175:	mov    rcx,QWORD PTR [rbx+0x10]
   140002179:	cmp    rcx,rsi
   14000217c:	jne    0x1400021a8
   14000217e:	lea    r8,[rip+0x53e3]        # 0x140007568
   140002185:	mov    rcx,rdi
   140002188:	call   0x140001e4c
   14000218d:	lea    rdx,[rsp+0x70]
   140002192:	mov    rcx,rdi
   140002195:	call   QWORD PTR [rip+0x4eed]        # 0x140007088
   14000219b:	mov    rbx,QWORD PTR [rip+0x10356]        # 0x1400124f8
   1400021a2:	mov    QWORD PTR [rbx+0x10],rax
   1400021a6:	jmp    0x1400021c2
   1400021a8:	lea    rdx,[rsp+0x70]
   1400021ad:	call   QWORD PTR [rip+0x4ef5]        # 0x1400070a8
   1400021b3:	mov    rbx,QWORD PTR [rip+0x1033e]        # 0x1400124f8
   1400021ba:	test   eax,eax
   1400021bc:	je     0x140002440
   1400021c2:	cmp    QWORD PTR [rbx+0x10],rsi
   1400021c6:	je     0x140002440
   1400021cc:	test   BYTE PTR [rsp+0x70],0x10
   1400021d1:	je     0x1400022cc
   1400021d7:	cmp    DWORD PTR [rbp+0x560],0x0
   1400021de:	je     0x140002167
   1400021e0:	mov    cl,BYTE PTR [rbp-0x64]
   1400021e3:	cmp    cl,BYTE PTR [rip+0x5383]        # 0x14000756c
   1400021e9:	mov    al,BYTE PTR [rbp-0x63]
   1400021ec:	jne    0x1400021fa
   1400021ee:	cmp    al,BYTE PTR [rip+0x5379]        # 0x14000756d
   1400021f4:	je     0x140002167
   1400021fa:	cmp    cl,BYTE PTR [rip+0x5370]        # 0x140007570
   140002200:	jne    0x140002219
   140002202:	cmp    al,BYTE PTR [rip+0x5369]        # 0x140007571
   140002208:	jne    0x140002219
   14000220a:	mov    al,BYTE PTR [rbp-0x62]
   14000220d:	cmp    al,BYTE PTR [rip+0x535f]        # 0x140007572
   140002213:	je     0x140002167
   140002219:	mov    ecx,0x12d
   14000221e:	call   QWORD PTR [rip+0x50dc]        # 0x140007300
   140002224:	mov    rdi,rax
   140002227:	test   rax,rax
   14000222a:	je     0x140002167
   140002230:	imul   rcx,r15,0x110
   140002237:	call   QWORD PTR [rip+0x50c3]        # 0x140007300
   14000223d:	mov    QWORD PTR [rdi+0x18],rax
   140002241:	test   rax,rax
   140002244:	je     0x1400024be
   14000224a:	lea    r8,[rbp-0x64]
   14000224e:	mov    edx,0x106
   140002253:	lea    rcx,[rdi+0x20]
   140002257:	call   QWORD PTR [rip+0x509b]        # 0x1400072f8
   14000225d:	lea    r8,[rip+0x5310]        # 0x140007574
   140002264:	mov    edx,0x106
   140002269:	lea    rcx,[rdi+0x20]
   14000226d:	call   QWORD PTR [rip+0x5075]        # 0x1400072e8
   140002273:	mov    r8,QWORD PTR [rip+0x1027e]        # 0x1400124f8
   14000227a:	mov    QWORD PTR [rdi+0x10],rsi
   14000227e:	mov    rax,QWORD PTR [r8]
   140002281:	mov    QWORD PTR [rdi],rax
   140002284:	mov    QWORD PTR [rdi+0x8],r8
   140002288:	test   r15,r15
   14000228b:	jle    0x1400022b3
   14000228d:	xor    ecx,ecx
   14000228f:	mov    rdx,r15
   140002292:	mov    rax,QWORD PTR [rdi+0x18]
   140002296:	mov    QWORD PTR [rcx+rax*1],rsi
   14000229a:	lea    rcx,[rcx+0x110]
   1400022a1:	mov    rax,QWORD PTR [rdi+0x18]
   1400022a5:	mov    BYTE PTR [rcx+rax*1-0x106],0x0
   1400022ad:	sub    rdx,0x1
   1400022b1:	jne    0x140002292
   1400022b3:	mov    QWORD PTR [r8],rdi
   1400022b6:	mov    rbx,rdi
   1400022b9:	mov    rax,QWORD PTR [rdi]
   1400022bc:	mov    QWORD PTR [rip+0x10235],rbx        # 0x1400124f8
   1400022c3:	mov    QWORD PTR [rax+0x8],rdi
   1400022c7:	jmp    0x140002167
   1400022cc:	mov    r12,QWORD PTR [rbx+0x18]
   1400022d0:	mov    eax,r15d
   1400022d3:	mov    r14d,eax
   1400022d6:	test   eax,eax
   1400022d8:	jle    0x140002167
   1400022de:	imul   rbx,r15,0x110
   1400022e5:	lea    r13,[r13+r15*8+0x0]
   1400022ea:	add    rbx,r12
   1400022ed:	xor    edi,edi
   1400022ef:	lea    rbx,[rbx-0x110]
   1400022f6:	dec    r14d
   1400022f9:	lea    r13,[r13-0x8]
   1400022fd:	cmp    QWORD PTR [rbx],rdi
   140002300:	setne  dil
   140002304:	cmp    QWORD PTR [rbx],rsi
   140002307:	jne    0x140002371
   140002309:	mov    r8,QWORD PTR [r13+0x0]
   14000230d:	mov    rcx,QWORD PTR [rsp+0x58]
   140002312:	call   0x140001e4c
   140002317:	mov    rcx,QWORD PTR [rsp+0x58]
   14000231c:	lea    rdx,[rbp+0xb0]
   140002323:	call   QWORD PTR [rip+0x4d5f]        # 0x140007088
   140002329:	xor    edi,edi
   14000232b:	mov    BYTE PTR [rbx+0x8],0x0
   14000232f:	cmp    rax,rsi
   140002332:	mov    QWORD PTR [rbx],rax
   140002335:	setne  dil
   140002339:	test   edi,edi
   14000233b:	je     0x1400023d3
   140002341:	movsxd rax,r14d
   140002344:	lea    r8,[rbp+0xdc]
   14000234b:	imul   rcx,rax,0x110
   140002352:	mov    edx,0x104
   140002357:	add    rcx,0xa
   14000235b:	add    rcx,r12
   14000235e:	call   QWORD PTR [rip+0x4f94]        # 0x1400072f8
   140002364:	mov    al,BYTE PTR [rbp+0xb0]
   14000236a:	and    al,0x10
   14000236c:	mov    BYTE PTR [rbx+0x9],al
   14000236f:	jmp    0x1400023c0
   140002371:	cmp    BYTE PTR [rbx+0x8],0x0
   140002375:	je     0x1400023c0
   140002377:	mov    rcx,QWORD PTR [rbx]
   14000237a:	lea    rdx,[rbp+0xb0]
   140002381:	call   QWORD PTR [rip+0x4d21]        # 0x1400070a8
   140002387:	mov    BYTE PTR [rbx+0x8],0x0
   14000238b:	mov    edi,eax
   14000238d:	test   eax,eax
   14000238f:	je     0x1400023d3
   140002391:	movsxd rcx,r14d
   140002394:	lea    r8,[rbp+0xdc]
   14000239b:	imul   rcx,rcx,0x110
   1400023a2:	mov    edx,0x104
   1400023a7:	add    rcx,0xa
   1400023ab:	add    rcx,r12
   1400023ae:	call   QWORD PTR [rip+0x4f44]        # 0x1400072f8
   1400023b4:	mov    cl,BYTE PTR [rbp+0xb0]
   1400023ba:	and    cl,0x10
   1400023bd:	mov    BYTE PTR [rbx+0x9],cl
   1400023c0:	test   edi,edi
   1400023c2:	je     0x1400023d3
   1400023c4:	cmp    BYTE PTR [rbx+0x9],0x0
   1400023c8:	je     0x1400023ee
   1400023ca:	mov    BYTE PTR [rbx+0x8],0x1
   1400023ce:	jmp    0x140002304
   1400023d3:	mov    rcx,QWORD PTR [rbx]
   1400023d6:	test   rcx,rcx
   1400023d9:	je     0x1400023ea
   1400023db:	cmp    rcx,rsi
   1400023de:	je     0x1400023e6
   1400023e0:	call   QWORD PTR [rip+0x4cca]        # 0x1400070b0
   1400023e6:	and    QWORD PTR [rbx],0x0
   1400023ea:	mov    BYTE PTR [rbx+0x8],0x0
   1400023ee:	test   edi,edi
   1400023f0:	je     0x140002426
   1400023f2:	movsxd rax,r14d
   1400023f5:	lea    r8,[r12+0xa]
   1400023fa:	imul   rcx,rax,0x110
   140002401:	lea    rax,[rbp-0x64]
   140002405:	add    r8,rcx
   140002408:	sub    r8,rax
   14000240b:	movzx  ecx,BYTE PTR [rax]
   14000240e:	movzx  edx,BYTE PTR [rax+r8*1]
   140002413:	sub    ecx,edx
   140002415:	jne    0x14000241e
   140002417:	inc    rax
   14000241a:	test   edx,edx
   14000241c:	jne    0x14000240b
   14000241e:	test   ecx,ecx
   140002420:	je     0x1400024cc
   140002426:	test   r14d,r14d
   140002429:	jg     0x1400022ed
   14000242f:	mov    rbx,QWORD PTR [rip+0x100c2]        # 0x1400124f8
   140002436:	mov    r13,QWORD PTR [rsp+0x68]
   14000243b:	jmp    0x140002167
   140002440:	mov    rcx,QWORD PTR [rbx+0x10]
   140002444:	cmp    rcx,rsi
   140002447:	je     0x140002456
   140002449:	call   QWORD PTR [rip+0x4c61]        # 0x1400070b0
   14000244f:	mov    rbx,QWORD PTR [rip+0x100a2]        # 0x1400124f8
   140002456:	mov    rdi,rbx
   140002459:	mov    rbx,QWORD PTR [rbx+0x8]
   14000245d:	mov    QWORD PTR [rip+0x10094],rbx        # 0x1400124f8
   140002464:	cmp    rbx,rdi
   140002467:	je     0x140002478
   140002469:	mov    rax,QWORD PTR [rdi]
   14000246c:	mov    QWORD PTR [rbx],rax
   14000246f:	mov    rax,QWORD PTR [rdi]
   140002472:	mov    QWORD PTR [rax+0x8],rbx
   140002476:	jmp    0x140002481
   140002478:	xor    ebx,ebx
   14000247a:	mov    QWORD PTR [rip+0x10077],rbx        # 0x1400124f8
   140002481:	mov    r14,QWORD PTR [rdi+0x18]
   140002485:	test   r15,r15
   140002488:	jle    0x1400024b4
   14000248a:	mov    rbx,r15
   14000248d:	mov    rcx,QWORD PTR [r14]
   140002490:	lea    rax,[rcx-0x1]
   140002494:	cmp    rax,0xfffffffffffffffd
   140002498:	ja     0x1400024a0
   14000249a:	call   QWORD PTR [rip+0x4c10]        # 0x1400070b0
   1400024a0:	add    r14,0x110
   1400024a7:	sub    rbx,0x1
   1400024ab:	jne    0x14000248d
   1400024ad:	mov    rbx,QWORD PTR [rip+0x10044]        # 0x1400124f8
   1400024b4:	mov    rcx,QWORD PTR [rdi+0x18]
   1400024b8:	call   QWORD PTR [rip+0x4ea2]        # 0x140007360
   1400024be:	mov    rcx,rdi
   1400024c1:	call   QWORD PTR [rip+0x4e99]        # 0x140007360
   1400024c7:	jmp    0x140002167
   1400024cc:	mov    rcx,QWORD PTR [rsp+0x58]
   1400024d1:	movsxd rdx,r14d
   1400024d4:	imul   r8,rdx,0x110
   1400024db:	mov    BYTE PTR [r8+r12*1+0x8],0x1
   1400024e1:	lea    r8,[rbp-0x64]
   1400024e5:	call   0x140001e4c
   1400024ea:	mov    eax,0x1
   1400024ef:	jmp    0x1400024f3
   1400024f1:	mov    eax,esi
   1400024f3:	mov    rcx,QWORD PTR [rbp+0x4f0]
   1400024fa:	xor    rcx,rsp
   1400024fd:	call   0x140005820
   140002502:	mov    rbx,QWORD PTR [rsp+0x648]
   14000250a:	add    rsp,0x600
   140002511:	pop    r15
   140002513:	pop    r14
   140002515:	pop    r13
   140002517:	pop    r12
   140002519:	pop    rdi
   14000251a:	pop    rsi
   14000251b:	pop    rbp
   14000251c:	ret    
   14000251d:	int3   
   14000251e:	int3   
   14000251f:	int3   
   140002520:	int3   
   140002521:	int3   
   140002522:	int3   
   140002523:	int3   
   140002524:	rex push rbx
   140002526:	sub    rsp,0x20
   14000252a:	mov    ebx,ecx
   14000252c:	mov    ecx,0x2
   140002531:	call   0x140005e38
   140002536:	mov    r8,QWORD PTR [rip+0x7f7b]        # 0x14000a4b8
   14000253d:	mov    rcx,rax
   140002540:	mov    edx,ebx
   140002542:	call   0x1400052ec
   140002547:	mov    ecx,0x2
   14000254c:	call   QWORD PTR [rip+0x4db6]        # 0x140007308
   140002552:	int3   
   140002553:	int3   
   140002554:	int3   
   140002555:	int3   
   140002556:	int3   
   140002557:	int3   
   140002558:	int3   
   140002559:	int3   
   14000255a:	int3   
   14000255b:	int3   
   14000255c:	test   rcx,rcx
   14000255f:	je     0x1400025a0
   140002561:	push   rbx
   140002562:	sub    rsp,0x20
   140002566:	mov    rbx,rcx
   140002569:	mov    rcx,QWORD PTR [rbx+0x8]
   14000256d:	test   rcx,rcx
   140002570:	je     0x140002579
   140002572:	call   0x14000255c
   140002577:	jmp    0x14000257f
   140002579:	dec    DWORD PTR [rip+0x10081]        # 0x140012600
   14000257f:	mov    rcx,rbx
   140002582:	mov    rbx,QWORD PTR [rbx]
   140002585:	movsxd rax,DWORD PTR [rcx+0x10]
   140002589:	sub    rcx,rax
   14000258c:	and    rcx,0xfffffffffffffff8
   140002590:	call   QWORD PTR [rip+0x4dca]        # 0x140007360
   140002596:	test   rbx,rbx
   140002599:	jne    0x140002569
   14000259b:	add    rsp,0x20
   14000259f:	pop    rbx
   1400025a0:	ret    
   1400025a1:	int3   
   1400025a2:	int3   
   1400025a3:	int3   
   1400025a4:	int3   
   1400025a5:	int3   
   1400025a6:	int3   
   1400025a7:	int3   
   1400025a8:	mov    rax,rsp
   1400025ab:	mov    QWORD PTR [rax+0x8],rbx
   1400025af:	mov    QWORD PTR [rax+0x10],rbp
   1400025b3:	mov    QWORD PTR [rax+0x18],rsi
   1400025b7:	mov    QWORD PTR [rax+0x20],rdi
   1400025bb:	push   r14
   1400025bd:	sub    rsp,0x20
   1400025c1:	movsxd rsi,edx
   1400025c4:	mov    eax,0x8
   1400025c9:	mov    r8d,esi
   1400025cc:	mov    r14,rcx
   1400025cf:	and    r8d,0x7
   1400025d3:	sub    eax,r8d
   1400025d6:	neg    r8d
   1400025d9:	lea    edx,[rsi+0x18]
   1400025dc:	sbb    ebx,ebx
   1400025de:	and    ebx,eax
   1400025e0:	cmp    edx,0x18
   1400025e3:	jb     0x14000266d
   1400025e9:	lea    eax,[rsi+0x18]
   1400025ec:	add    eax,ebx
   1400025ee:	cmp    eax,edx
   1400025f0:	jb     0x14000266d
   1400025f2:	cmp    eax,0xffffffff
   1400025f5:	ja     0x14000266d
   1400025f7:	mov    ecx,eax
   1400025f9:	mov    ebp,eax
   1400025fb:	call   QWORD PTR [rip+0x4cff]        # 0x140007300
   140002601:	test   rax,rax
   140002604:	jne    0x14000262a
   140002606:	lea    ebx,[rax+0x2]
   140002609:	mov    ecx,ebx
   14000260b:	call   0x140005e38
   140002610:	mov    r8,QWORD PTR [rip+0x7ea1]        # 0x14000a4b8
   140002617:	mov    rcx,rax
   14000261a:	mov    edx,ebx
   14000261c:	call   0x1400052ec
   140002621:	mov    ecx,ebx
   140002623:	call   QWORD PTR [rip+0x4cdf]        # 0x140007308
   140002629:	int3   
   14000262a:	movsxd rdi,ebx
   14000262d:	mov    r9,rsi
   140002630:	add    rdi,rax
   140002633:	mov    r8,r14
   140002636:	mov    rcx,rdi
   140002639:	mov    rdx,rbp
   14000263c:	call   QWORD PTR [rip+0x4cce]        # 0x140007310
   140002642:	mov    rbx,QWORD PTR [rsp+0x30]
   140002647:	lea    rax,[rsi+rdi*1]
   14000264b:	and    QWORD PTR [rax],0x0
   14000264f:	and    QWORD PTR [rax+0x8],0x0
   140002654:	mov    rbp,QWORD PTR [rsp+0x38]
   140002659:	mov    rdi,QWORD PTR [rsp+0x48]
   14000265e:	mov    DWORD PTR [rax+0x10],esi
   140002661:	mov    rsi,QWORD PTR [rsp+0x40]
   140002666:	add    rsp,0x20
   14000266a:	pop    r14
   14000266c:	ret    
   14000266d:	mov    ecx,0x10
   140002672:	call   0x140002524
   140002677:	int3   
   140002678:	int3   
   140002679:	int3   
   14000267a:	int3   
   14000267b:	int3   
   14000267c:	int3   
   14000267d:	int3   
   14000267e:	int3   
   14000267f:	int3   
   140002680:	mov    QWORD PTR [rsp+0x8],rbx
   140002685:	mov    QWORD PTR [rsp+0x10],rsi
   14000268a:	push   rdi
   14000268b:	sub    rsp,0x20
   14000268f:	mov    eax,DWORD PTR [rcx+0x10]
   140002692:	mov    rdi,rcx
   140002695:	sub    eax,r8d
   140002698:	mov    r9,rdx
   14000269b:	add    DWORD PTR [rip+0xbe27],eax        # 0x14000e4c8
   1400026a1:	mov    rsi,rcx
   1400026a4:	movsxd rax,DWORD PTR [rcx+0x10]
   1400026a8:	sub    rdi,rax
   1400026ab:	mov    DWORD PTR [rcx+0x10],r8d
   1400026af:	and    rdi,0xfffffffffffffff8
   1400026b3:	test   r8b,0x7
   1400026b7:	je     0x1400026ca
   1400026b9:	mov    edx,r8d
   1400026bc:	mov    ecx,0x8
   1400026c1:	and    edx,0x7
   1400026c4:	sub    rcx,rdx
   1400026c7:	add    rdi,rcx
   1400026ca:	movsxd rbx,r8d
   1400026cd:	mov    rdx,r9
   1400026d0:	mov    r8,rbx
   1400026d3:	mov    rcx,rdi
   1400026d6:	call   QWORD PTR [rip+0x4b1c]        # 0x1400071f8
   1400026dc:	add    rdi,rbx
   1400026df:	mov    r8d,0x18
   1400026e5:	mov    rcx,rdi
   1400026e8:	mov    rdx,rsi
   1400026eb:	call   QWORD PTR [rip+0x4b07]        # 0x1400071f8
   1400026f1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400026f6:	mov    rax,rdi
   1400026f9:	mov    rsi,QWORD PTR [rsp+0x38]
   1400026fe:	add    rsp,0x20
   140002702:	pop    rdi
   140002703:	ret    
   140002704:	int3   
   140002705:	int3   
   140002706:	int3   
   140002707:	int3   
   140002708:	int3   
   140002709:	int3   
   14000270a:	int3   
   14000270b:	int3   
   14000270c:	mov    QWORD PTR [rsp+0x8],rbx
   140002711:	mov    QWORD PTR [rsp+0x10],rbp
   140002716:	push   rsi
   140002717:	push   rdi
   140002718:	push   r14
   14000271a:	sub    rsp,0x20
   14000271e:	lea    ebp,[r8+rdx*1]
   140002722:	mov    BYTE PTR [rsp+0x59],0x0
   140002727:	mov    esi,r8d
   14000272a:	mov    r14,rcx
   14000272d:	mov    r8d,DWORD PTR [rip+0x6944]        # 0x140009078
   140002734:	cmp    ebp,r8d
   140002737:	cmova  ebp,r8d
   14000273b:	jmp    0x1400027dc
   140002740:	movzx  edi,BYTE PTR [r14]
   140002744:	inc    r14
   140002747:	mov    eax,DWORD PTR [rip+0x6963]        # 0x1400090b0
   14000274d:	lea    r9,[rip+0xfeec]        # 0x140012640
   140002754:	cmp    edi,eax
   140002756:	mov    ecx,r8d
   140002759:	cmovb  eax,edi
   14000275c:	mov    DWORD PTR [rip+0x694e],eax        # 0x1400090b0
   140002762:	mov    eax,DWORD PTR [rip+0xffdc]        # 0x140012744
   140002768:	cmp    edi,eax
   14000276a:	cmova  eax,edi
   14000276d:	sub    ecx,esi
   14000276f:	mov    DWORD PTR [rip+0xffcf],eax        # 0x140012744
   140002775:	movsx  eax,BYTE PTR [rdi+r9*1]
   14000277a:	cmp    ecx,eax
   14000277c:	jae    0x140002788
   14000277e:	mov    al,r8b
   140002781:	sub    al,sil
   140002784:	mov    BYTE PTR [rdi+r9*1],al
   140002788:	cmp    DWORD PTR [rip+0x68d9],0x0        # 0x140009068
   14000278f:	jne    0x1400027da
   140002791:	mov    ecx,edi
   140002793:	call   QWORD PTR [rip+0x4ba7]        # 0x140007340
   140002799:	test   eax,eax
   14000279b:	je     0x1400027d3
   14000279d:	mov    ecx,edi
   14000279f:	call   QWORD PTR [rip+0x4b73]        # 0x140007318
   1400027a5:	test   eax,eax
   1400027a7:	jne    0x1400027d3
   1400027a9:	lea    rcx,[rsp+0x58]
   1400027ae:	mov    BYTE PTR [rsp+0x58],dil
   1400027b3:	mov    ebx,edi
   1400027b5:	call   QWORD PTR [rip+0x4bad]        # 0x140007368
   1400027bb:	movzx  edi,BYTE PTR [rax]
   1400027be:	movzx  eax,BYTE PTR [rsp+0x58]
   1400027c3:	cmp    ebx,eax
   1400027c5:	je     0x1400027d3
   1400027c7:	mov    r8d,DWORD PTR [rip+0x68aa]        # 0x140009078
   1400027ce:	jmp    0x140002747
   1400027d3:	mov    r8d,DWORD PTR [rip+0x689e]        # 0x140009078
   1400027da:	inc    esi
   1400027dc:	cmp    esi,ebp
   1400027de:	jb     0x140002740
   1400027e4:	mov    rbx,QWORD PTR [rsp+0x40]
   1400027e9:	mov    rbp,QWORD PTR [rsp+0x48]
   1400027ee:	add    rsp,0x20
   1400027f2:	pop    r14
   1400027f4:	pop    rdi
   1400027f5:	pop    rsi
   1400027f6:	ret    
   1400027f7:	int3   
   1400027f8:	int3   
   1400027f9:	int3   
   1400027fa:	int3   
   1400027fb:	int3   
   1400027fc:	int3   
   1400027fd:	int3   
   1400027fe:	int3   
   1400027ff:	int3   
   140002800:	mov    DWORD PTR [rsp+0x10],edx
   140002804:	mov    QWORD PTR [rsp+0x8],rcx
   140002809:	push   rbx
   14000280a:	push   rbp
   14000280b:	push   rsi
   14000280c:	push   rdi
   14000280d:	push   r12
   14000280f:	push   r13
   140002811:	push   r14
   140002813:	push   r15
   140002815:	sub    rsp,0x28
   140002819:	mov    eax,DWORD PTR [rip+0x6859]        # 0x140009078
   14000281f:	lea    rsi,[rip+0xffffffffffffd7da]        # 0x140000000
   140002826:	mov    edi,DWORD PTR [rip+0xbca4]        # 0x14000e4d0
   14000282c:	cmp    edi,eax
   14000282e:	movzx  edx,BYTE PTR [rip+0x7a7b]        # 0x14000a2b0
   140002835:	cmovb  eax,edi
   140002838:	mov    BYTE PTR [rsp+0x79],0x0
   14000283d:	mov    DWORD PTR [rip+0x6835],eax        # 0x140009078
   140002843:	mov    ecx,edx
   140002845:	movzx  eax,BYTE PTR [rdx+rsi*1+0x12500]
   14000284d:	test   eax,eax
   14000284f:	jne    0x1400028f5
   140002855:	movsxd rax,DWORD PTR [rip+0x6834]        # 0x140009090
   14000285c:	mov    rbx,rax
   14000285f:	inc    eax
   140002861:	mov    DWORD PTR [rip+0x6829],eax        # 0x140009090
   140002867:	cmp    ebx,0x80
   14000286d:	jge    0x140002ad3
   140002873:	lea    r14,[rsi+0x9eb0]
   14000287a:	mov    BYTE PTR [rdx+rsi*1+0x12500],bl
   140002881:	lea    r14,[r14+rbx*8]
   140002885:	and    QWORD PTR [r14],0x0
   140002889:	cmp    DWORD PTR [rip+0x67d8],0x0        # 0x140009068
   140002890:	jne    0x1400028df
   140002892:	movzx  ecx,dl
   140002895:	call   QWORD PTR [rip+0x4aa5]        # 0x140007340
   14000289b:	test   eax,eax
   14000289d:	je     0x1400028df
   14000289f:	mov    al,BYTE PTR [rip+0x7a0b]        # 0x14000a2b0
   1400028a5:	lea    rcx,[rsp+0x78]
   1400028aa:	mov    BYTE PTR [rsp+0x78],al
   1400028ae:	call   QWORD PTR [rip+0x4ab4]        # 0x140007368
   1400028b4:	mov    cl,BYTE PTR [rip+0x79f6]        # 0x14000a2b0
   1400028ba:	cmp    BYTE PTR [rax],cl
   1400028bc:	jne    0x1400028d3
   1400028be:	lea    rcx,[rsp+0x78]
   1400028c3:	call   QWORD PTR [rip+0x4a8f]        # 0x140007358
   1400028c9:	mov    cl,BYTE PTR [rip+0x79e1]        # 0x14000a2b0
   1400028cf:	cmp    BYTE PTR [rax],cl
   1400028d1:	je     0x1400028df
   1400028d3:	movzx  eax,BYTE PTR [rsp+0x78]
   1400028d8:	mov    BYTE PTR [rax+rsi*1+0x12500],bl
   1400028df:	sub    edi,0x1
   1400028e2:	jne    0x14000290d
   1400028e4:	mov    rcx,QWORD PTR [r14]
   1400028e7:	call   0x14000255c
   1400028ec:	and    QWORD PTR [r14],0x0
   1400028f0:	jmp    0x140002a1b
   1400028f5:	lea    r14,[rsi+0x9eb0]
   1400028fc:	lea    r14,[r14+rax*8]
   140002900:	cmp    QWORD PTR [r14],0x0
   140002904:	jne    0x1400028df
   140002906:	xor    eax,eax
   140002908:	jmp    0x140002a26
   14000290d:	mov    rsi,QWORD PTR [r14]
   140002910:	lea    r15,[rip+0x799a]        # 0x14000a2b1
   140002917:	jmp    0x140002a02
   14000291c:	cmp    edi,DWORD PTR [rsi+0x10]
   14000291f:	mov    r12d,edi
   140002922:	movsxd rax,DWORD PTR [rsi+0x10]
   140002926:	mov    r13,rsi
   140002929:	cmovg  r12d,DWORD PTR [rsi+0x10]
   14000292e:	sub    r13,rax
   140002931:	cmp    DWORD PTR [rip+0x6730],0x0        # 0x140009068
   140002938:	mov    rbx,QWORD PTR [rip+0x49f1]        # 0x140007330
   14000293f:	cmovne rbx,QWORD PTR [rip+0x4a09]        # 0x140007350
   140002947:	mov    rcx,rbx
   14000294a:	mov    DWORD PTR [rsp+0x80],r12d
   140002952:	movsxd rbp,r12d
   140002955:	call   QWORD PTR [rip+0x4a6d]        # 0x1400073c8
   14000295b:	mov    r8,rbp
   14000295e:	mov    rdx,r13
   140002961:	mov    rcx,r15
   140002964:	call   rbx
   140002966:	mov    DWORD PTR [rsp+0x70],eax
   14000296a:	test   eax,eax
   14000296c:	je     0x1400029c8
   14000296e:	mov    rcx,rbx
   140002971:	mov    rbp,r15
   140002974:	call   QWORD PTR [rip+0x4a4e]        # 0x1400073c8
   14000297a:	mov    r8d,0x1
   140002980:	mov    rdx,r13
   140002983:	mov    rcx,r15
   140002986:	call   rbx
   140002988:	test   eax,eax
   14000298a:	jne    0x1400029bf
   14000298c:	sub    r13,r15
   14000298f:	mov    r12,rbx
   140002992:	inc    rbp
   140002995:	mov    rbx,r13
   140002998:	mov    rcx,r12
   14000299b:	add    rbx,rbp
   14000299e:	call   QWORD PTR [rip+0x4a24]        # 0x1400073c8
   1400029a4:	mov    r8d,0x1
   1400029aa:	mov    rdx,rbx
   1400029ad:	mov    rcx,rbp
   1400029b0:	call   r12
   1400029b3:	test   eax,eax
   1400029b5:	je     0x140002992
   1400029b7:	mov    r12d,DWORD PTR [rsp+0x80]
   1400029bf:	mov    eax,DWORD PTR [rsp+0x70]
   1400029c3:	sub    ebp,r15d
   1400029c6:	jmp    0x1400029cb
   1400029c8:	mov    ebp,r12d
   1400029cb:	test   ebp,ebp
   1400029cd:	jne    0x1400029db
   1400029cf:	test   eax,eax
   1400029d1:	js     0x140002a0b
   1400029d3:	mov    r14,rsi
   1400029d6:	mov    rsi,QWORD PTR [rsi]
   1400029d9:	jmp    0x140002a02
   1400029db:	cmp    r12d,ebp
   1400029de:	jne    0x140002a67
   1400029e4:	cmp    r12d,edi
   1400029e7:	je     0x140002a37
   1400029e9:	lea    r14,[rsi+0x8]
   1400029ed:	mov    rsi,QWORD PTR [r14]
   1400029f0:	test   rsi,rsi
   1400029f3:	je     0x140002906
   1400029f9:	movsxd rax,r12d
   1400029fc:	add    r15,rax
   1400029ff:	sub    edi,r12d
   140002a02:	test   rsi,rsi
   140002a05:	jne    0x14000291c
   140002a0b:	mov    edx,edi
   140002a0d:	mov    rcx,r15
   140002a10:	call   0x1400025a8
   140002a15:	mov    QWORD PTR [r14],rax
   140002a18:	mov    QWORD PTR [rax],rsi
   140002a1b:	inc    DWORD PTR [rip+0xfbdf]        # 0x140012600
   140002a21:	mov    eax,0x1
   140002a26:	add    rsp,0x28
   140002a2a:	pop    r15
   140002a2c:	pop    r14
   140002a2e:	pop    r13
   140002a30:	pop    r12
   140002a32:	pop    rdi
   140002a33:	pop    rsi
   140002a34:	pop    rbp
   140002a35:	pop    rbx
   140002a36:	ret    
   140002a37:	movsxd rax,DWORD PTR [rsi+0x10]
   140002a3b:	mov    rdx,rsi
   140002a3e:	sub    rdx,rax
   140002a41:	mov    r8d,edi
   140002a44:	mov    rcx,rsi
   140002a47:	call   0x140002680
   140002a4c:	mov    QWORD PTR [r14],rax
   140002a4f:	mov    rbx,rax
   140002a52:	mov    rcx,QWORD PTR [rax+0x8]
   140002a56:	test   rcx,rcx
   140002a59:	je     0x140002a21
   140002a5b:	call   0x14000255c
   140002a60:	and    QWORD PTR [rbx+0x8],0x0
   140002a65:	jmp    0x140002a1b
   140002a67:	movsxd rax,DWORD PTR [rsi+0x10]
   140002a6b:	mov    edx,DWORD PTR [rsi+0x10]
   140002a6e:	movsxd r12,ebp
   140002a71:	sub    edx,ebp
   140002a73:	mov    rcx,r12
   140002a76:	sub    rcx,rax
   140002a79:	add    rcx,rsi
   140002a7c:	call   0x1400025a8
   140002a81:	movsxd rcx,DWORD PTR [rsi+0x10]
   140002a85:	mov    rdx,rsi
   140002a88:	sub    rdx,rcx
   140002a8b:	mov    r8d,ebp
   140002a8e:	mov    rcx,rsi
   140002a91:	mov    rbx,rax
   140002a94:	call   0x140002680
   140002a99:	mov    QWORD PTR [r14],rax
   140002a9c:	sub    edi,ebp
   140002a9e:	mov    edx,edi
   140002aa0:	mov    rsi,rax
   140002aa3:	mov    rcx,QWORD PTR [rax+0x8]
   140002aa7:	mov    QWORD PTR [rbx+0x8],rcx
   140002aab:	lea    rcx,[r12+r15*1]
   140002aaf:	call   0x1400025a8
   140002ab4:	cmp    DWORD PTR [rsp+0x70],0x0
   140002ab9:	jge    0x140002ac7
   140002abb:	mov    QWORD PTR [rsi+0x8],rax
   140002abf:	mov    QWORD PTR [rax],rbx
   140002ac2:	jmp    0x140002a1b
   140002ac7:	mov    QWORD PTR [rbx],rax
   140002aca:	mov    QWORD PTR [rsi+0x8],rbx
   140002ace:	jmp    0x140002a1b
   140002ad3:	mov    ecx,0xa
   140002ad8:	call   0x140002524
   140002add:	int3   
   140002ade:	int3   
   140002adf:	int3   
   140002ae0:	int3   
   140002ae1:	int3   
   140002ae2:	int3   
   140002ae3:	int3   
   140002ae4:	int3   
   140002ae5:	int3   
   140002ae6:	int3   
   140002ae7:	int3   
   140002ae8:	int3   
   140002ae9:	int3   
   140002aea:	int3   
   140002aeb:	int3   
   140002aec:	int3   
   140002aed:	int3   
   140002aee:	int3   
   140002aef:	int3   
   140002af0:	mov    rax,rsp
   140002af3:	mov    QWORD PTR [rax+0x8],rbx
   140002af7:	mov    QWORD PTR [rax+0x10],rbp
   140002afb:	mov    QWORD PTR [rax+0x18],rsi
   140002aff:	mov    QWORD PTR [rax+0x20],rdi
   140002b03:	push   r15
   140002b05:	sub    rsp,0x20
   140002b09:	mov    ebp,DWORD PTR [rip+0x7371]        # 0x140009e80
   140002b0f:	lea    r15,[rip+0x779a]        # 0x14000a2b0
   140002b16:	and    ebp,0x10
   140002b19:	mov    edi,edx
   140002b1b:	mov    rsi,rcx
   140002b1e:	mov    rbx,r15
   140002b21:	test   edx,edx
   140002b23:	jle    0x140002b67
   140002b25:	mov    cl,BYTE PTR [rsi]
   140002b27:	dec    edi
   140002b29:	inc    rsi
   140002b2c:	mov    BYTE PTR [rbx],cl
   140002b2e:	cmp    cl,0x5c
   140002b31:	je     0x140002b46
   140002b33:	test   edi,edi
   140002b35:	jle    0x140002b60
   140002b37:	call   QWORD PTR [rip+0x45d3]        # 0x140007110
   140002b3d:	test   eax,eax
   140002b3f:	je     0x140002b60
   140002b41:	inc    rbx
   140002b44:	jmp    0x140002b57
   140002b46:	test   edi,edi
   140002b48:	jle    0x140002b60
   140002b4a:	movsx  ecx,BYTE PTR [rsi]
   140002b4d:	call   QWORD PTR [rip+0x4745]        # 0x140007298
   140002b53:	test   eax,eax
   140002b55:	jne    0x140002b60
   140002b57:	mov    al,BYTE PTR [rsi]
   140002b59:	dec    edi
   140002b5b:	mov    BYTE PTR [rbx],al
   140002b5d:	inc    rsi
   140002b60:	inc    rbx
   140002b63:	test   edi,edi
   140002b65:	jg     0x140002b25
   140002b67:	test   ebp,ebp
   140002b69:	je     0x140002b71
   140002b6b:	mov    BYTE PTR [rbx],0xd
   140002b6e:	inc    rbx
   140002b71:	sub    ebx,r15d
   140002b74:	cmp    DWORD PTR [rip+0x64ed],0x0        # 0x140009068
   140002b7b:	mov    DWORD PTR [rip+0xb94f],ebx        # 0x14000e4d0
   140002b81:	jne    0x140002b8d
   140002b83:	mov    edx,ebx
   140002b85:	mov    rcx,r15
   140002b88:	call   0x140004dec
   140002b8d:	mov    rbx,QWORD PTR [rsp+0x30]
   140002b92:	mov    rbp,QWORD PTR [rsp+0x38]
   140002b97:	mov    rsi,QWORD PTR [rsp+0x40]
   140002b9c:	mov    rdi,QWORD PTR [rsp+0x48]
   140002ba1:	add    rsp,0x20
   140002ba5:	pop    r15
   140002ba7:	jmp    0x140002800
   140002bac:	int3   
   140002bad:	int3   
   140002bae:	int3   
   140002baf:	int3   
   140002bb0:	int3   
   140002bb1:	int3   
   140002bb2:	int3   
   140002bb3:	int3   
   140002bb4:	int3   
   140002bb5:	int3   
   140002bb6:	int3   
   140002bb7:	int3   
   140002bb8:	int3   
   140002bb9:	int3   
   140002bba:	int3   
   140002bbb:	int3   
   140002bbc:	int3   
   140002bbd:	int3   
   140002bbe:	int3   
   140002bbf:	int3   
   140002bc0:	rex push rbx
   140002bc2:	push   rbp
   140002bc3:	push   rsi
   140002bc4:	push   rdi
   140002bc5:	push   r13
   140002bc7:	push   r14
   140002bc9:	push   r15
   140002bcb:	sub    rsp,0x340
   140002bd2:	mov    rax,QWORD PTR [rip+0x643f]        # 0x140009018
   140002bd9:	xor    rax,rsp
   140002bdc:	mov    QWORD PTR [rsp+0x330],rax
   140002be4:	mov    r15,r8
   140002be7:	mov    r14,rdx
   140002bea:	mov    rbx,rcx
   140002bed:	cmp    rcx,rdx
   140002bf0:	jae    0x140002de7
   140002bf6:	mov    r13d,0x1
   140002bfc:	mov    ecx,r14d
   140002bff:	mov    rax,rbx
   140002c02:	sub    ecx,ebx
   140002c04:	je     0x140002c31
   140002c06:	sub    ecx,r13d
   140002c09:	mov    rdx,r15
   140002c0c:	cmp    BYTE PTR [r15],0x0
   140002c10:	je     0x140002c25
   140002c12:	mov    r8b,BYTE PTR [r15]
   140002c15:	cmp    BYTE PTR [rax],r8b
   140002c18:	je     0x140002c25
   140002c1a:	add    rdx,r13
   140002c1d:	mov    r8b,BYTE PTR [rdx]
   140002c20:	test   r8b,r8b
   140002c23:	jne    0x140002c15
   140002c25:	cmp    BYTE PTR [rdx],0x0
   140002c28:	je     0x140002c31
   140002c2a:	add    rax,r13
   140002c2d:	test   ecx,ecx
   140002c2f:	jne    0x140002c06
   140002c31:	sub    eax,ebx
   140002c33:	cdqe   
   140002c35:	add    rbx,rax
   140002c38:	cmp    rbx,r14
   140002c3b:	jae    0x140002de7
   140002c41:	mov    r8d,r14d
   140002c44:	mov    rdx,r15
   140002c47:	sub    r8d,ebx
   140002c4a:	mov    rcx,rbx
   140002c4d:	call   0x1400052b4
   140002c52:	movsxd rbp,eax
   140002c55:	cmp    ebp,0x200
   140002c5b:	jge    0x140002e40
   140002c61:	mov    rdi,QWORD PTR [rip+0xfae8]        # 0x140012750
   140002c68:	test   rdi,rdi
   140002c6b:	jne    0x140002d5c
   140002c71:	cmp    ebp,0x100
   140002c77:	jge    0x140002e2f
   140002c7d:	mov    edx,ebp
   140002c7f:	cmp    ebp,0x2
   140002c82:	jl     0x140002c8f
   140002c84:	cmp    BYTE PTR [rbx],0x5c
   140002c87:	jne    0x140002c8f
   140002c89:	cmp    BYTE PTR [rbx+0x1],0x3c
   140002c8d:	je     0x140002cb0
   140002c8f:	test   eax,eax
   140002c91:	jle    0x140002cb8
   140002c93:	mov    al,BYTE PTR [rcx]
   140002c95:	sub    edx,r13d
   140002c98:	add    rcx,r13
   140002c9b:	cmp    al,0x5c
   140002c9d:	jne    0x140002cac
   140002c9f:	sub    edx,r13d
   140002ca2:	jne    0x140002ca9
   140002ca4:	cmp    BYTE PTR [rcx],0x3e
   140002ca7:	je     0x140002cb0
   140002ca9:	add    rcx,r13
   140002cac:	test   edx,edx
   140002cae:	jmp    0x140002c91
   140002cb0:	mov    esi,r13d
   140002cb3:	jmp    0x140002d41
   140002cb8:	mov    r8,rbp
   140002cbb:	lea    rcx,[rsp+0x20]
   140002cc0:	mov    rdx,rbx
   140002cc3:	call   QWORD PTR [rip+0x452f]        # 0x1400071f8
   140002cc9:	cmp    rbp,0x100
   140002cd0:	jae    0x140002e29
   140002cd6:	mov    BYTE PTR [rsp+rbp*1+0x20],0x0
   140002cdb:	cmp    BYTE PTR [rsp+0x20],0x0
   140002ce0:	je     0x140002ce9
   140002ce2:	cmp    BYTE PTR [rsp+rbp*1+0x1f],0x24
   140002ce7:	je     0x140002cb0
   140002ce9:	lea    rcx,[rsp+0x20]
   140002cee:	call   0x1400012c4
   140002cf3:	mov    rdx,rax
   140002cf6:	test   rax,rax
   140002cf9:	jne    0x140002cff
   140002cfb:	xor    esi,esi
   140002cfd:	jmp    0x140002d41
   140002cff:	mov    al,BYTE PTR [rax]
   140002d01:	mov    esi,r13d
   140002d04:	cmp    al,0x5e
   140002d06:	je     0x140002d38
   140002d08:	test   al,al
   140002d0a:	je     0x140002d38
   140002d0c:	xor    esi,esi
   140002d0e:	mov    rcx,rdx
   140002d11:	movzx  eax,BYTE PTR [rcx]
   140002d14:	add    rcx,r13
   140002d17:	cmp    eax,r13d
   140002d1a:	je     0x140002e10
   140002d20:	cmp    eax,0x2
   140002d23:	je     0x140002e0b
   140002d29:	add    eax,0xfffffffd
   140002d2c:	cmp    eax,0x2
   140002d2f:	ja     0x140002e1b
   140002d35:	mov    esi,r13d
   140002d38:	mov    rcx,rdx
   140002d3b:	call   QWORD PTR [rip+0x461f]        # 0x140007360
   140002d41:	test   esi,esi
   140002d43:	lea    rdi,[rip+0xfffffffffffffda6]        # 0x140002af0
   140002d4a:	lea    rax,[rip+0xffffffffffffed0f]        # 0x140001a60
   140002d51:	cmovne rdi,rax
   140002d55:	mov    QWORD PTR [rip+0xf9f4],rdi        # 0x140012750
   140002d5c:	mov    r8,rbp
   140002d5f:	lea    rcx,[rsp+0x120]
   140002d67:	mov    rdx,rbx
   140002d6a:	call   0x1400060b6
   140002d6f:	lea    eax,[rbp+0x1]
   140002d72:	mov    BYTE PTR [rsp+rbp*1+0x120],0xa
   140002d7a:	movsxd rcx,eax
   140002d7d:	cmp    rcx,0x202
   140002d84:	jae    0x140002e3a
   140002d8a:	lea    rax,[rip+0xffffffffffffeccf]        # 0x140001a60
   140002d91:	mov    BYTE PTR [rsp+rcx*1+0x120],0x0
   140002d99:	cmp    rdi,rax
   140002d9c:	je     0x140002dcb
   140002d9e:	test   BYTE PTR [rip+0x70db],0x8        # 0x140009e80
   140002da5:	jne    0x140002dcb
   140002da7:	lea    rdx,[rsp+0x121]
   140002daf:	add    rdx,rbp
   140002db2:	lea    rcx,[rsp+0x120]
   140002dba:	call   0x140004f80
   140002dbf:	test   rax,rax
   140002dc2:	jne    0x140002ddb
   140002dc4:	mov    rdi,QWORD PTR [rip+0xf985]        # 0x140012750
   140002dcb:	mov    rcx,rdi
   140002dce:	call   QWORD PTR [rip+0x45f4]        # 0x1400073c8
   140002dd4:	mov    edx,ebp
   140002dd6:	mov    rcx,rbx
   140002dd9:	call   rdi
   140002ddb:	add    rbx,rbp
   140002dde:	cmp    rbx,r14
   140002de1:	jb     0x140002bfc
   140002de7:	xor    eax,eax
   140002de9:	mov    rcx,QWORD PTR [rsp+0x330]
   140002df1:	xor    rcx,rsp
   140002df4:	call   0x140005820
   140002df9:	add    rsp,0x340
   140002e00:	pop    r15
   140002e02:	pop    r14
   140002e04:	pop    r13
   140002e06:	pop    rdi
   140002e07:	pop    rsi
   140002e08:	pop    rbp
   140002e09:	pop    rbx
   140002e0a:	ret    
   140002e0b:	add    rcx,r13
   140002e0e:	jmp    0x140002e1b
   140002e10:	movzx  eax,BYTE PTR [rcx]
   140002e13:	add    eax,r13d
   140002e16:	cdqe   
   140002e18:	add    rcx,rax
   140002e1b:	cmp    BYTE PTR [rcx],sil
   140002e1e:	je     0x140002d38
   140002e24:	jmp    0x140002d11
   140002e29:	call   0x140005a18
   140002e2e:	int3   
   140002e2f:	mov    ecx,0x2
   140002e34:	call   0x140002524
   140002e39:	int3   
   140002e3a:	call   0x140005a18
   140002e3f:	int3   
   140002e40:	mov    ecx,0x10
   140002e45:	call   0x140002524
   140002e4a:	int3   
   140002e4b:	int3   
   140002e4c:	int3   
   140002e4d:	int3   
   140002e4e:	int3   
   140002e4f:	int3   
   140002e50:	int3   
   140002e51:	int3   
   140002e52:	int3   
   140002e53:	int3   
   140002e54:	mov    QWORD PTR [rsp+0x8],rbx
   140002e59:	mov    QWORD PTR [rsp+0x10],rbp
   140002e5e:	mov    QWORD PTR [rsp+0x18],rsi
   140002e63:	push   rdi
   140002e64:	sub    rsp,0x20
   140002e68:	xor    esi,esi
   140002e6a:	mov    ebp,edx
   140002e6c:	mov    rbx,rcx
   140002e6f:	lea    edi,[rsi+0x1]
   140002e72:	test   rcx,rcx
   140002e75:	je     0x140002eaa
   140002e77:	movsxd rdx,DWORD PTR [rbx+0x10]
   140002e7b:	mov    rcx,rbx
   140002e7e:	sub    rcx,rdx
   140002e81:	mov    r8d,ebp
   140002e84:	call   0x14000270c
   140002e89:	mov    rcx,QWORD PTR [rbx+0x8]
   140002e8d:	test   rcx,rcx
   140002e90:	je     0x140002e9e
   140002e92:	mov    edx,DWORD PTR [rbx+0x10]
   140002e95:	add    edx,ebp
   140002e97:	call   0x140002e54
   140002e9c:	jmp    0x140002ea0
   140002e9e:	mov    eax,edi
   140002ea0:	mov    rbx,QWORD PTR [rbx]
   140002ea3:	add    esi,eax
   140002ea5:	test   rbx,rbx
   140002ea8:	jne    0x140002e77
   140002eaa:	mov    rbx,QWORD PTR [rsp+0x30]
   140002eaf:	test   esi,esi
   140002eb1:	mov    rbp,QWORD PTR [rsp+0x38]
   140002eb6:	cmovne edi,esi
   140002eb9:	mov    rsi,QWORD PTR [rsp+0x40]
   140002ebe:	mov    eax,edi
   140002ec0:	add    rsp,0x20
   140002ec4:	pop    rdi
   140002ec5:	ret    
   140002ec6:	int3   
   140002ec7:	int3   
   140002ec8:	int3   
   140002ec9:	int3   
   140002eca:	int3   
   140002ecb:	int3   
   140002ecc:	mov    QWORD PTR [rsp+0x8],rbx
   140002ed1:	push   rdi
   140002ed2:	sub    rsp,0x40
   140002ed6:	mov    rbx,rcx
   140002ed9:	call   QWORD PTR [rip+0x4199]        # 0x140007078
   140002edf:	cmp    eax,0xffffffff
   140002ee2:	je     0x140002f09
   140002ee4:	test   al,0x10
   140002ee6:	je     0x140002eee
   140002ee8:	or     rax,0xffffffffffffffff
   140002eec:	jmp    0x140002f5c
   140002eee:	bt     eax,0xc
   140002ef2:	jae    0x140002f09
   140002ef4:	test   DWORD PTR [rip+0x6f82],0x200        # 0x140009e80
   140002efe:	jne    0x140002f09
   140002f00:	mov    BYTE PTR [rip+0xf841],0x1        # 0x140012748
   140002f07:	jmp    0x140002ee8
   140002f09:	and    QWORD PTR [rsp+0x30],0x0
   140002f0f:	mov    r8d,0x3
   140002f15:	mov    DWORD PTR [rsp+0x28],0x100000
   140002f1d:	xor    r9d,r9d
   140002f20:	mov    edx,0x80000000
   140002f25:	mov    DWORD PTR [rsp+0x20],r8d
   140002f2a:	mov    rcx,rbx
   140002f2d:	call   QWORD PTR [rip+0x414d]        # 0x140007080
   140002f33:	mov    rdi,rax
   140002f36:	cmp    rax,0xffffffffffffffff
   140002f3a:	jne    0x140002f59
   140002f3c:	lea    ecx,[rax+0x3]
   140002f3f:	call   0x140005e38
   140002f44:	mov    r8,QWORD PTR [rip+0x756d]        # 0x14000a4b8
   140002f4b:	lea    edx,[rdi+0x5]
   140002f4e:	mov    rcx,rax
   140002f51:	mov    r9,rbx
   140002f54:	call   0x1400052ec
   140002f59:	mov    rax,rdi
   140002f5c:	mov    rbx,QWORD PTR [rsp+0x50]
   140002f61:	add    rsp,0x40
   140002f65:	pop    rdi
   140002f66:	ret    
   140002f67:	int3   
   140002f68:	int3   
   140002f69:	int3   
   140002f6a:	int3   
   140002f6b:	int3   
   140002f6c:	int3   
   140002f6d:	int3   
   140002f6e:	int3   
   140002f6f:	int3   
   140002f70:	sub    rsp,0x28
   140002f74:	cmp    ecx,0x1
   140002f77:	ja     0x140002fbf
   140002f79:	cmp    WORD PTR [rip+0xf697],0x0        # 0x140012618
   140002f81:	je     0x140002fbf
   140002f83:	lea    rcx,[rip+0x6efe]        # 0x140009e88
   140002f8a:	call   QWORD PTR [rip+0x4240]        # 0x1400071d0
   140002f90:	mov    ecx,0xfffffff5
   140002f95:	mov    BYTE PTR [rip+0xf7c2],0x1        # 0x14001275e
   140002f9c:	call   QWORD PTR [rip+0x41a6]        # 0x140007148
   140002fa2:	movzx  edx,WORD PTR [rip+0xf66f]        # 0x140012618
   140002fa9:	mov    rcx,rax
   140002fac:	call   QWORD PTR [rip+0x407e]        # 0x140007030
   140002fb2:	lea    rcx,[rip+0x6ecf]        # 0x140009e88
   140002fb9:	call   QWORD PTR [rip+0x4201]        # 0x1400071c0
   140002fbf:	xor    eax,eax
   140002fc1:	add    rsp,0x28
   140002fc5:	ret    
   140002fc6:	int3   
   140002fc7:	int3   
   140002fc8:	int3   
   140002fc9:	int3   
   140002fca:	int3   
   140002fcb:	int3   
   140002fcc:	int3   
   140002fcd:	int3   
   140002fce:	int3   
   140002fcf:	int3   
   140002fd0:	rex push rbx
   140002fd2:	push   rbp
   140002fd3:	push   rsi
   140002fd4:	push   rdi
   140002fd5:	push   r12
   140002fd7:	push   r14
   140002fd9:	push   r15
   140002fdb:	sub    rsp,0x250
   140002fe2:	mov    rax,QWORD PTR [rip+0x602f]        # 0x140009018
   140002fe9:	xor    rax,rsp
   140002fec:	mov    QWORD PTR [rsp+0x240],rax
   140002ff4:	cmp    QWORD PTR [rip+0x6074],0xffffffffffffffff        # 0x140009070
   140002ffc:	lea    rbx,[rip+0x6e85]        # 0x140009e88
   140003003:	movzx  esi,r8w
   140003007:	mov    edi,edx
   140003009:	mov    rbp,rcx
   14000300c:	jne    0x14000303b
   14000300e:	mov    ecx,0xfffffff5
   140003013:	call   QWORD PTR [rip+0x412f]        # 0x140007148
   140003019:	mov    rcx,rbx
   14000301c:	mov    QWORD PTR [rip+0x604d],rax        # 0x140009070
   140003023:	call   QWORD PTR [rip+0x418f]        # 0x1400071b8
   140003029:	mov    edx,0x1
   14000302e:	lea    rcx,[rip+0xffffffffffffff3b]        # 0x140002f70
   140003035:	call   QWORD PTR [rip+0x3fdd]        # 0x140007018
   14000303b:	xor    r15d,r15d
   14000303e:	test   si,si
   140003041:	je     0x140003083
   140003043:	mov    rcx,rbx
   140003046:	call   QWORD PTR [rip+0x4184]        # 0x1400071d0
   14000304c:	cmp    BYTE PTR [rip+0xf70b],r15b        # 0x14001275e
   140003053:	jne    0x140003065
   140003055:	mov    rcx,QWORD PTR [rip+0x6014]        # 0x140009070
   14000305c:	movzx  edx,si
   14000305f:	call   QWORD PTR [rip+0x3fcb]        # 0x140007030
   140003065:	mov    rcx,rbx
   140003068:	call   QWORD PTR [rip+0x4152]        # 0x1400071c0
   14000306e:	cmp    BYTE PTR [rip+0xf6e9],r15b        # 0x14001275e
   140003075:	je     0x140003083
   140003077:	mov    ecx,0x2
   14000307c:	call   QWORD PTR [rip+0x40e6]        # 0x140007168
   140003082:	int3   
   140003083:	test   edi,edi
   140003085:	je     0x1400030e5
   140003087:	mov    r12d,0x200
   14000308d:	movsxd rax,edi
   140003090:	mov    ebx,edi
   140003092:	cmp    rax,r12
   140003095:	cmova  ebx,r12d
   140003099:	cmp    ebx,r12d
   14000309c:	jg     0x14000313f
   1400030a2:	movsxd r14,ebx
   1400030a5:	lea    rcx,[rsp+0x40]
   1400030aa:	mov    r8,r14
   1400030ad:	mov    rdx,rbp
   1400030b0:	call   0x1400060b6
   1400030b5:	mov    rcx,QWORD PTR [rip+0x5fb4]        # 0x140009070
   1400030bc:	lea    r9,[rsp+0x30]
   1400030c1:	mov    r8d,ebx
   1400030c4:	mov    QWORD PTR [rsp+0x20],r15
   1400030c9:	lea    rdx,[rsp+0x40]
   1400030ce:	call   QWORD PTR [rip+0x3fbc]        # 0x140007090
   1400030d4:	test   eax,eax
   1400030d6:	je     0x140003120
   1400030d8:	cmp    DWORD PTR [rsp+0x30],ebx
   1400030dc:	jne    0x140003120
   1400030de:	add    rbp,r14
   1400030e1:	sub    edi,ebx
   1400030e3:	jne    0x14000308d
   1400030e5:	test   si,si
   1400030e8:	je     0x1400030fe
   1400030ea:	movzx  edx,WORD PTR [rip+0xf527]        # 0x140012618
   1400030f1:	mov    rcx,QWORD PTR [rip+0x5f78]        # 0x140009070
   1400030f8:	call   QWORD PTR [rip+0x3f32]        # 0x140007030
   1400030fe:	mov    rcx,QWORD PTR [rsp+0x240]
   140003106:	xor    rcx,rsp
   140003109:	call   0x140005820
   14000310e:	add    rsp,0x250
   140003115:	pop    r15
   140003117:	pop    r14
   140003119:	pop    r12
   14000311b:	pop    rdi
   14000311c:	pop    rsi
   14000311d:	pop    rbp
   14000311e:	pop    rbx
   14000311f:	ret    
   140003120:	movzx  edx,WORD PTR [rip+0xf4f1]        # 0x140012618
   140003127:	mov    rcx,QWORD PTR [rip+0x5f42]        # 0x140009070
   14000312e:	call   QWORD PTR [rip+0x3efc]        # 0x140007030
   140003134:	mov    ecx,0x5
   140003139:	call   0x140002524
   14000313e:	int3   
   14000313f:	mov    ecx,0x2
   140003144:	call   0x140002524
   140003149:	int3   
   14000314a:	int3   
   14000314b:	int3   
   14000314c:	int3   
   14000314d:	int3   
   14000314e:	int3   
   14000314f:	int3   
   140003150:	test   edx,edx
   140003152:	jle    0x140003268
   140003158:	mov    rax,rsp
   14000315b:	mov    QWORD PTR [rax+0x8],rbx
   14000315f:	mov    QWORD PTR [rax+0x10],rbp
   140003163:	mov    QWORD PTR [rax+0x18],rsi
   140003167:	mov    QWORD PTR [rax+0x20],rdi
   14000316b:	push   r14
   14000316d:	sub    rsp,0x30
   140003171:	mov    esi,edx
   140003173:	lea    r14,[rip+0xffffffffffffce86]        # 0x140000000
   14000317a:	mov    edx,DWORD PTR [rip+0xf5d8]        # 0x140012758
   140003180:	mov    rbp,rcx
   140003183:	cmp    DWORD PTR [rip+0x5ef2],0x0        # 0x14000907c
   14000318a:	je     0x140003269
   140003190:	movsxd rcx,edx
   140003193:	mov    edi,DWORD PTR [r14+rcx*4+0x9098]
   14000319b:	test   edi,edi
   14000319d:	jne    0x14000320e
   14000319f:	mov    rbx,QWORD PTR [r14+rcx*8+0x7670]
   1400031a7:	mov    ecx,0xfffffff5
   1400031ac:	call   QWORD PTR [rip+0x3f96]        # 0x140007148
   1400031b2:	and    QWORD PTR [rsp+0x20],0x0
   1400031b8:	lea    r9,[rip+0x72f1]        # 0x14000a4b0
   1400031bf:	mov    rcx,rax
   1400031c2:	mov    r8d,0x2000
   1400031c8:	mov    rdx,rbx
   1400031cb:	call   QWORD PTR [rip+0x3ebf]        # 0x140007090
   1400031d1:	movsxd rdx,DWORD PTR [rip+0xf580]        # 0x140012758
   1400031d8:	mov    DWORD PTR [rip+0x5e9e],eax        # 0x14000907c
   1400031de:	mov    rax,QWORD PTR [r14+rdx*8+0x7670]
   1400031e6:	mov    DWORD PTR [r14+rdx*4+0x9098],0x2000
   1400031f2:	mov    QWORD PTR [r14+rdx*8+0x90a0],rax
   1400031fa:	xor    edx,0x1
   1400031fd:	movsxd rcx,edx
   140003200:	mov    DWORD PTR [rip+0xf552],edx        # 0x140012758
   140003206:	mov    edi,DWORD PTR [r14+rcx*4+0x9098]
   14000320e:	mov    rcx,QWORD PTR [r14+rcx*8+0x90a0]
   140003216:	cmp    edi,esi
   140003218:	mov    rdx,rbp
   14000321b:	cmovg  edi,esi
   14000321e:	movsxd rbx,edi
   140003221:	mov    r8,rbx
   140003224:	call   QWORD PTR [rip+0x3fce]        # 0x1400071f8
   14000322a:	movsxd rdx,DWORD PTR [rip+0xf527]        # 0x140012758
   140003231:	sub    esi,edi
   140003233:	add    rbp,rbx
   140003236:	sub    DWORD PTR [r14+rdx*4+0x9098],edi
   14000323e:	add    QWORD PTR [r14+rdx*8+0x90a0],rbx
   140003246:	test   esi,esi
   140003248:	jg     0x140003183
   14000324e:	mov    rbx,QWORD PTR [rsp+0x40]
   140003253:	mov    rbp,QWORD PTR [rsp+0x48]
   140003258:	mov    rsi,QWORD PTR [rsp+0x50]
   14000325d:	mov    rdi,QWORD PTR [rsp+0x58]
   140003262:	add    rsp,0x30
   140003266:	pop    r14
   140003268:	ret    
   140003269:	mov    ebx,0x2
   14000326e:	mov    ecx,ebx
   140003270:	call   0x140005e38
   140003275:	mov    r8,QWORD PTR [rip+0x723c]        # 0x14000a4b8
   14000327c:	lea    edx,[rbx+0x3]
   14000327f:	mov    rcx,rax
   140003282:	call   0x1400052ec
   140003287:	mov    ecx,ebx
   140003289:	call   QWORD PTR [rip+0x4079]        # 0x140007308
   14000328f:	int3   
   140003290:	int3   
   140003291:	int3   
   140003292:	int3   
   140003293:	int3   
   140003294:	int3   
   140003295:	int3   
   140003296:	int3   
   140003297:	int3   
   140003298:	int3   
   140003299:	int3   
   14000329a:	int3   
   14000329b:	int3   
   14000329c:	int3   
   14000329d:	int3   
   14000329e:	int3   
   14000329f:	int3   
   1400032a0:	ret    0x0
   1400032a3:	int3   
   1400032a4:	int3   
   1400032a5:	int3   
   1400032a6:	int3   
   1400032a7:	int3   
   1400032a8:	int3   
   1400032a9:	int3   
   1400032aa:	int3   
   1400032ab:	int3   
   1400032ac:	int3   
   1400032ad:	int3   
   1400032ae:	int3   
   1400032af:	int3   
   1400032b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400032b5:	push   rdi
   1400032b6:	sub    rsp,0x30
   1400032ba:	movsxd rbx,DWORD PTR [rip+0xf497]        # 0x140012758
   1400032c1:	lea    rax,[rip+0xffffffffffffcd38]        # 0x140000000
   1400032c8:	mov    edi,0x2000
   1400032cd:	sub    edi,DWORD PTR [rax+rbx*4+0x9098]
   1400032d4:	test   edi,edi
   1400032d6:	jle    0x140003344
   1400032d8:	mov    rbx,QWORD PTR [rax+rbx*8+0x7670]
   1400032e0:	mov    ecx,0xfffffff5
   1400032e5:	call   QWORD PTR [rip+0x3e5d]        # 0x140007148
   1400032eb:	and    QWORD PTR [rsp+0x20],0x0
   1400032f1:	lea    r9,[rip+0x71b8]        # 0x14000a4b0
   1400032f8:	mov    rcx,rax
   1400032fb:	mov    r8d,edi
   1400032fe:	mov    rdx,rbx
   140003301:	call   QWORD PTR [rip+0x3d89]        # 0x140007090
   140003307:	or     ecx,0xffffffff
   14000330a:	mov    DWORD PTR [rip+0x5d6c],eax        # 0x14000907c
   140003310:	test   eax,eax
   140003312:	cmovne ecx,DWORD PTR [rip+0x7197]        # 0x14000a4b0
   140003319:	cmp    ecx,edi
   14000331b:	je     0x140003344
   14000331d:	mov    ebx,0x2
   140003322:	mov    ecx,ebx
   140003324:	call   0x140005e38
   140003329:	mov    r8,QWORD PTR [rip+0x7188]        # 0x14000a4b8
   140003330:	lea    edx,[rbx+0x3]
   140003333:	mov    rcx,rax
   140003336:	call   0x1400052ec
   14000333b:	mov    ecx,ebx
   14000333d:	call   QWORD PTR [rip+0x3fc5]        # 0x140007308
   140003343:	int3   
   140003344:	mov    rbx,QWORD PTR [rsp+0x40]
   140003349:	add    rsp,0x30
   14000334d:	pop    rdi
   14000334e:	ret    
   14000334f:	int3   
   140003350:	int3   
   140003351:	int3   
   140003352:	int3   
   140003353:	int3   
   140003354:	int3   
   140003355:	int3   
   140003356:	int3   
   140003357:	int3   
   140003358:	int3   
   140003359:	int3   
   14000335a:	int3   
   14000335b:	int3   
   14000335c:	int3   
   14000335d:	int3   
   14000335e:	int3   
   14000335f:	int3   
   140003360:	mov    QWORD PTR [rsp+0x20],rbx
   140003365:	push   rbp
   140003366:	push   rsi
   140003367:	push   rdi
   140003368:	push   r12
   14000336a:	push   r13
   14000336c:	push   r14
   14000336e:	push   r15
   140003370:	sub    rsp,0x160
   140003377:	mov    rax,QWORD PTR [rip+0x5c9a]        # 0x140009018
   14000337e:	xor    rax,rsp
   140003381:	mov    QWORD PTR [rsp+0x150],rax
   140003389:	mov    rbx,QWORD PTR [rip+0xf278]        # 0x140012608
   140003390:	mov    r13,rcx
   140003393:	xor    ebp,ebp
   140003395:	mov    QWORD PTR [rsp+0x20],r8
   14000339a:	mov    r14,rcx
   14000339d:	mov    rdi,r8
   1400033a0:	mov    rcx,rbx
   1400033a3:	mov    r15,rdx
   1400033a6:	mov    r12d,ebp
   1400033a9:	call   QWORD PTR [rip+0x4019]        # 0x1400073c8
   1400033af:	mov    rcx,r14
   1400033b2:	mov    rdx,r15
   1400033b5:	call   rbx
   1400033b7:	mov    rsi,rax
   1400033ba:	test   rax,rax
   1400033bd:	je     0x1400035cc
   1400033c3:	mov    edx,DWORD PTR [rip+0x6ab7]        # 0x140009e80
   1400033c9:	dec    rsi
   1400033cc:	test   dl,0x8
   1400033cf:	je     0x14000340d
   1400033d1:	cmp    DWORD PTR [rip+0xf251],ebp        # 0x140012628
   1400033d7:	jne    0x1400033ea
   1400033d9:	cmp    DWORD PTR [rip+0xf361],ebp        # 0x140012740
   1400033df:	jne    0x1400033ea
   1400033e1:	cmp    rsi,QWORD PTR [rip+0xf248]        # 0x140012630
   1400033e8:	jb     0x14000340d
   1400033ea:	cmp    BYTE PTR [rsi],0xa
   1400033ed:	je     0x14000340d
   1400033ef:	mov    r8d,r15d
   1400033f2:	lea    rdx,[rip+0x417f]        # 0x140007578
   1400033f9:	sub    r8d,esi
   1400033fc:	mov    rcx,rsi
   1400033ff:	call   0x1400052b4
   140003404:	inc    eax
   140003406:	cdqe   
   140003408:	jmp    0x14000359e
   14000340d:	mov    DWORD PTR [rip+0x5c81],ebp        # 0x140009094
   140003413:	test   dl,0x2
   140003416:	jne    0x1400035b9
   14000341c:	mov    rcx,rsi
   14000341f:	call   0x140004f34
   140003424:	dec    eax
   140003426:	cdqe   
   140003428:	sub    rsi,rax
   14000342b:	test   dl,0x1
   14000342e:	je     0x140003497
   140003430:	test   r12d,r12d
   140003433:	jne    0x14000346f
   140003435:	or     rax,0xffffffffffffffff
   140003439:	inc    rax
   14000343c:	cmp    BYTE PTR [rdi+rax*1],bpl
   140003440:	jne    0x140003439
   140003442:	add    rax,0x2
   140003446:	cmp    rax,0x106
   14000344c:	ja     0x140003604
   140003452:	mov    r9,rdi
   140003455:	lea    r8,[rip+0x4120]        # 0x14000757c
   14000345c:	mov    edx,0x106
   140003461:	lea    rcx,[rsp+0x40]
   140003466:	call   QWORD PTR [rip+0x3e54]        # 0x1400072c0
   14000346c:	mov    r12d,eax
   14000346f:	mov    rbx,QWORD PTR [rip+0x5bea]        # 0x140009060
   140003476:	mov    rcx,rbx
   140003479:	call   QWORD PTR [rip+0x3f49]        # 0x1400073c8
   14000347f:	movzx  r8d,WORD PTR [rip+0xf2d5]        # 0x14001275c
   140003487:	lea    rcx,[rsp+0x40]
   14000348c:	mov    edx,r12d
   14000348f:	call   rbx
   140003491:	mov    edx,DWORD PTR [rip+0x69e9]        # 0x140009e80
   140003497:	test   dl,0x4
   14000349a:	je     0x140003505
   14000349c:	mov    ecx,ebp
   14000349e:	jmp    0x1400034ac
   1400034a0:	mov    al,BYTE PTR [r14]
   1400034a3:	inc    r14
   1400034a6:	cmp    al,0xa
   1400034a8:	jne    0x1400034ac
   1400034aa:	inc    ecx
   1400034ac:	cmp    r14,rsi
   1400034af:	jb     0x1400034a0
   1400034b1:	mov    r9d,DWORD PTR [rip+0xb00c]        # 0x14000e4c4
   1400034b8:	lea    r8,[rip+0x40c1]        # 0x140007580
   1400034bf:	add    r9d,ecx
   1400034c2:	mov    edx,0xc
   1400034c7:	lea    rcx,[rsp+0x28]
   1400034cc:	mov    DWORD PTR [rip+0xaff1],r9d        # 0x14000e4c4
   1400034d3:	call   QWORD PTR [rip+0x3de7]        # 0x1400072c0
   1400034d9:	mov    rdi,QWORD PTR [rip+0x5b80]        # 0x140009060
   1400034e0:	mov    ebx,eax
   1400034e2:	mov    rcx,rdi
   1400034e5:	call   QWORD PTR [rip+0x3edd]        # 0x1400073c8
   1400034eb:	movzx  r8d,WORD PTR [rip+0xf269]        # 0x14001275c
   1400034f3:	lea    rcx,[rsp+0x28]
   1400034f8:	mov    edx,ebx
   1400034fa:	call   rdi
   1400034fc:	mov    edx,DWORD PTR [rip+0x697e]        # 0x140009e80
   140003502:	mov    r14,rsi
   140003505:	test   dl,dl
   140003507:	jns    0x140003550
   140003509:	mov    r9d,DWORD PTR [rip+0xafbc]        # 0x14000e4cc
   140003510:	lea    r8,[rip+0x406d]        # 0x140007584
   140003517:	sub    r9d,r13d
   14000351a:	lea    rcx,[rsp+0x28]
   14000351f:	add    r9d,esi
   140003522:	mov    edx,0xc
   140003527:	call   QWORD PTR [rip+0x3d93]        # 0x1400072c0
   14000352d:	mov    rdi,QWORD PTR [rip+0x5b2c]        # 0x140009060
   140003534:	mov    ebx,eax
   140003536:	mov    rcx,rdi
   140003539:	call   QWORD PTR [rip+0x3e89]        # 0x1400073c8
   14000353f:	movzx  r8d,WORD PTR [rip+0xf215]        # 0x14001275c
   140003547:	lea    rcx,[rsp+0x28]
   14000354c:	mov    edx,ebx
   14000354e:	call   rdi
   140003550:	mov    r11d,r15d
   140003553:	lea    rdx,[rip+0x401e]        # 0x140007578
   14000355a:	sub    r11d,esi
   14000355d:	mov    rcx,rsi
   140003560:	mov    r8d,r11d
   140003563:	call   0x1400052b4
   140003568:	mov    rbx,QWORD PTR [rip+0x5af1]        # 0x140009060
   14000356f:	mov    rdx,r15
   140003572:	sub    rdx,rsi
   140003575:	lea    edi,[rax+0x1]
   140003578:	movsxd rcx,edi
   14000357b:	cmp    rcx,rdx
   14000357e:	mov    rcx,rbx
   140003581:	cmovg  edi,r11d
   140003585:	call   QWORD PTR [rip+0x3e3d]        # 0x1400073c8
   14000358b:	movzx  r8d,bp
   14000358f:	mov    edx,edi
   140003591:	mov    rcx,rsi
   140003594:	call   rbx
   140003596:	movsxd rax,edi
   140003599:	mov    rdi,QWORD PTR [rsp+0x20]
   14000359e:	mov    rbx,QWORD PTR [rip+0xf063]        # 0x140012608
   1400035a5:	add    rsi,rax
   1400035a8:	mov    rcx,rbx
   1400035ab:	call   QWORD PTR [rip+0x3e17]        # 0x1400073c8
   1400035b1:	mov    rcx,rsi
   1400035b4:	jmp    0x1400033b2
   1400035b9:	mov    eax,0x1
   1400035be:	jmp    0x1400035d9
   1400035c0:	mov    al,BYTE PTR [r14]
   1400035c3:	inc    r14
   1400035c6:	cmp    al,0xa
   1400035c8:	jne    0x1400035cc
   1400035ca:	inc    ebp
   1400035cc:	cmp    r14,r15
   1400035cf:	jb     0x1400035c0
   1400035d1:	add    DWORD PTR [rip+0xaeed],ebp        # 0x14000e4c4
   1400035d7:	xor    eax,eax
   1400035d9:	mov    rcx,QWORD PTR [rsp+0x150]
   1400035e1:	xor    rcx,rsp
   1400035e4:	call   0x140005820
   1400035e9:	mov    rbx,QWORD PTR [rsp+0x1b8]
   1400035f1:	add    rsp,0x160
   1400035f8:	pop    r15
   1400035fa:	pop    r14
   1400035fc:	pop    r13
   1400035fe:	pop    r12
   140003600:	pop    rdi
   140003601:	pop    rsi
   140003602:	pop    rbp
   140003603:	ret    
   140003604:	mov    ecx,0x2
   140003609:	call   0x140002524
   14000360e:	int3   
   14000360f:	int3   
   140003610:	int3   
   140003611:	int3   
   140003612:	int3   
   140003613:	int3   
   140003614:	int3   
   140003615:	int3   
   140003616:	int3   
   140003617:	int3   
   140003618:	rex push rbx
   14000361a:	push   rbp
   14000361b:	push   rsi
   14000361c:	push   rdi
   14000361d:	push   r12
   14000361f:	push   r13
   140003621:	push   r14
   140003623:	push   r15
   140003625:	sub    rsp,0x158
   14000362c:	mov    rax,QWORD PTR [rip+0x59e5]        # 0x140009018
   140003633:	xor    rax,rsp
   140003636:	mov    QWORD PTR [rsp+0x140],rax
   14000363e:	mov    eax,DWORD PTR [rip+0x683c]        # 0x140009e80
   140003644:	xor    r13d,r13d
   140003647:	mov    rbp,r9
   14000364a:	mov    rsi,r8
   14000364d:	mov    r12,rdx
   140003650:	mov    r15,rcx
   140003653:	mov    r14d,r13d
   140003656:	test   al,0x85
   140003658:	je     0x1400037c8
   14000365e:	cmp    r8,r9
   140003661:	jae    0x1400037e6
   140003667:	test   al,0x1
   140003669:	je     0x1400036d2
   14000366b:	test   r14d,r14d
   14000366e:	jne    0x1400036aa
   140003670:	or     rax,0xffffffffffffffff
   140003674:	inc    rax
   140003677:	cmp    BYTE PTR [r15+rax*1],r13b
   14000367b:	jne    0x140003674
   14000367d:	add    rax,0x2
   140003681:	cmp    rax,0x106
   140003687:	ja     0x14000380a
   14000368d:	mov    r9,r15
   140003690:	lea    r8,[rip+0x3ee5]        # 0x14000757c
   140003697:	mov    edx,0x106
   14000369c:	lea    rcx,[rsp+0x30]
   1400036a1:	call   QWORD PTR [rip+0x3c19]        # 0x1400072c0
   1400036a7:	mov    r14d,eax
   1400036aa:	mov    rbx,QWORD PTR [rip+0x59af]        # 0x140009060
   1400036b1:	mov    rcx,rbx
   1400036b4:	call   QWORD PTR [rip+0x3d0e]        # 0x1400073c8
   1400036ba:	movzx  r8d,WORD PTR [rip+0xf09a]        # 0x14001275c
   1400036c2:	lea    rcx,[rsp+0x30]
   1400036c7:	mov    edx,r14d
   1400036ca:	call   rbx
   1400036cc:	mov    eax,DWORD PTR [rip+0x67ae]        # 0x140009e80
   1400036d2:	test   al,0x4
   1400036d4:	je     0x140003727
   1400036d6:	mov    eax,DWORD PTR [rip+0xade8]        # 0x14000e4c4
   1400036dc:	lea    r8,[rip+0x3e9d]        # 0x140007580
   1400036e3:	mov    r9d,eax
   1400036e6:	lea    rcx,[rsp+0x20]
   1400036eb:	inc    eax
   1400036ed:	mov    edx,0xc
   1400036f2:	mov    DWORD PTR [rip+0xadcc],eax        # 0x14000e4c4
   1400036f8:	call   QWORD PTR [rip+0x3bc2]        # 0x1400072c0
   1400036fe:	mov    rdi,QWORD PTR [rip+0x595b]        # 0x140009060
   140003705:	mov    ebx,eax
   140003707:	mov    rcx,rdi
   14000370a:	call   QWORD PTR [rip+0x3cb8]        # 0x1400073c8
   140003710:	movzx  r8d,WORD PTR [rip+0xf044]        # 0x14001275c
   140003718:	lea    rcx,[rsp+0x20]
   14000371d:	mov    edx,ebx
   14000371f:	call   rdi
   140003721:	mov    eax,DWORD PTR [rip+0x6759]        # 0x140009e80
   140003727:	test   al,al
   140003729:	jns    0x140003772
   14000372b:	mov    r9d,DWORD PTR [rip+0xad9a]        # 0x14000e4cc
   140003732:	lea    r8,[rip+0x3e4b]        # 0x140007584
   140003739:	sub    r9d,r12d
   14000373c:	lea    rcx,[rsp+0x20]
   140003741:	add    r9d,esi
   140003744:	mov    edx,0xc
   140003749:	call   QWORD PTR [rip+0x3b71]        # 0x1400072c0
   14000374f:	mov    rdi,QWORD PTR [rip+0x590a]        # 0x140009060
   140003756:	mov    ebx,eax
   140003758:	mov    rcx,rdi
   14000375b:	call   QWORD PTR [rip+0x3c67]        # 0x1400073c8
   140003761:	movzx  r8d,WORD PTR [rip+0xeff3]        # 0x14001275c
   140003769:	lea    rcx,[rsp+0x20]
   14000376e:	mov    edx,ebx
   140003770:	call   rdi
   140003772:	mov    r8d,ebp
   140003775:	lea    rdx,[rip+0x3dfc]        # 0x140007578
   14000377c:	sub    r8d,esi
   14000377f:	mov    rcx,rsi
   140003782:	call   0x1400052b4
   140003787:	mov    rdx,rbp
   14000378a:	movsxd rdi,eax
   14000378d:	sub    rdx,rsi
   140003790:	cmp    rdi,rdx
   140003793:	jge    0x140003797
   140003795:	inc    edi
   140003797:	mov    rbx,QWORD PTR [rip+0x58c2]        # 0x140009060
   14000379e:	mov    rcx,rbx
   1400037a1:	call   QWORD PTR [rip+0x3c21]        # 0x1400073c8
   1400037a7:	movzx  r8d,r13w
   1400037ab:	mov    edx,edi
   1400037ad:	mov    rcx,rsi
   1400037b0:	call   rbx
   1400037b2:	movsxd rax,edi
   1400037b5:	add    rsi,rax
   1400037b8:	cmp    rsi,rbp
   1400037bb:	jae    0x1400037e6
   1400037bd:	mov    eax,DWORD PTR [rip+0x66bd]        # 0x140009e80
   1400037c3:	jmp    0x140003667
   1400037c8:	mov    rbx,QWORD PTR [rip+0x5891]        # 0x140009060
   1400037cf:	sub    ebp,r8d
   1400037d2:	mov    rcx,rbx
   1400037d5:	call   QWORD PTR [rip+0x3bed]        # 0x1400073c8
   1400037db:	movzx  r8d,r13w
   1400037df:	mov    edx,ebp
   1400037e1:	mov    rcx,rsi
   1400037e4:	call   rbx
   1400037e6:	mov    rcx,QWORD PTR [rsp+0x140]
   1400037ee:	xor    rcx,rsp
   1400037f1:	call   0x140005820
   1400037f6:	add    rsp,0x158
   1400037fd:	pop    r15
   1400037ff:	pop    r14
   140003801:	pop    r13
   140003803:	pop    r12
   140003805:	pop    rdi
   140003806:	pop    rsi
   140003807:	pop    rbp
   140003808:	pop    rbx
   140003809:	ret    
   14000380a:	mov    ecx,0x2
   14000380f:	call   0x140002524
   140003814:	int3   
   140003815:	int3   
   140003816:	int3   
   140003817:	int3   
   140003818:	int3   
   140003819:	int3   
   14000381a:	int3   
   14000381b:	int3   
   14000381c:	int3   
   14000381d:	int3   
   14000381e:	int3   
   14000381f:	int3   
   140003820:	mov    QWORD PTR [rsp+0x8],rbx
   140003825:	mov    QWORD PTR [rsp+0x10],rbp
   14000382a:	mov    QWORD PTR [rsp+0x18],rsi
   14000382f:	push   rdi
   140003830:	push   r14
   140003832:	push   r15
   140003834:	sub    rsp,0x20
   140003838:	mov    rbx,QWORD PTR [rip+0xedc9]        # 0x140012608
   14000383f:	mov    r14,rcx
   140003842:	mov    rsi,rcx
   140003845:	mov    r15,r8
   140003848:	mov    rcx,rbx
   14000384b:	mov    rbp,rdx
   14000384e:	call   QWORD PTR [rip+0x3b74]        # 0x1400073c8
   140003854:	mov    rcx,rsi
   140003857:	mov    rdx,rbp
   14000385a:	call   rbx
   14000385c:	mov    rdi,rax
   14000385f:	test   rax,rax
   140003862:	je     0x140003929
   140003868:	mov    edx,DWORD PTR [rip+0x6612]        # 0x140009e80
   14000386e:	dec    rdi
   140003871:	test   dl,0x8
   140003874:	je     0x1400038b4
   140003876:	cmp    DWORD PTR [rip+0xedab],0x0        # 0x140012628
   14000387d:	jne    0x140003891
   14000387f:	cmp    DWORD PTR [rip+0xeeba],0x0        # 0x140012740
   140003886:	jne    0x140003891
   140003888:	cmp    rdi,QWORD PTR [rip+0xeda1]        # 0x140012630
   14000388f:	jb     0x1400038b4
   140003891:	cmp    BYTE PTR [rdi],0xa
   140003894:	je     0x1400038b4
   140003896:	mov    r8d,ebp
   140003899:	lea    rdx,[rip+0x3cd8]        # 0x140007578
   1400038a0:	sub    r8d,edi
   1400038a3:	mov    rcx,rdi
   1400038a6:	call   0x1400052b4
   1400038ab:	inc    eax
   1400038ad:	cdqe   
   1400038af:	add    rdi,rax
   1400038b2:	jmp    0x14000390a
   1400038b4:	mov    rcx,rdi
   1400038b7:	call   0x140004f34
   1400038bc:	dec    eax
   1400038be:	cdqe   
   1400038c0:	sub    rdi,rax
   1400038c3:	cmp    rdi,rsi
   1400038c6:	jbe    0x1400038e5
   1400038c8:	and    DWORD PTR [rip+0x57c5],0x0        # 0x140009094
   1400038cf:	test   dl,0x2
   1400038d2:	jne    0x140003922
   1400038d4:	mov    r9,rdi
   1400038d7:	mov    r8,rsi
   1400038da:	mov    rdx,r14
   1400038dd:	mov    rcx,r15
   1400038e0:	call   0x140003618
   1400038e5:	mov    r8d,ebp
   1400038e8:	lea    rdx,[rip+0x3c89]        # 0x140007578
   1400038ef:	sub    r8d,edi
   1400038f2:	mov    rcx,rdi
   1400038f5:	call   0x1400052b4
   1400038fa:	inc    eax
   1400038fc:	cdqe   
   1400038fe:	add    rdi,rax
   140003901:	inc    DWORD PTR [rip+0xabbd]        # 0x14000e4c4
   140003907:	mov    rsi,rdi
   14000390a:	mov    rbx,QWORD PTR [rip+0xecf7]        # 0x140012608
   140003911:	mov    rcx,rbx
   140003914:	call   QWORD PTR [rip+0x3aae]        # 0x1400073c8
   14000391a:	mov    rcx,rdi
   14000391d:	jmp    0x140003857
   140003922:	mov    eax,0x1
   140003927:	jmp    0x140003951
   140003929:	cmp    rbp,rsi
   14000392c:	jbe    0x14000394f
   14000392e:	and    DWORD PTR [rip+0x575f],0x0        # 0x140009094
   140003935:	test   BYTE PTR [rip+0x6544],0x2        # 0x140009e80
   14000393c:	jne    0x140003922
   14000393e:	mov    r9,rbp
   140003941:	mov    r8,rsi
   140003944:	mov    rdx,r14
   140003947:	mov    rcx,r15
   14000394a:	call   0x140003618
   14000394f:	xor    eax,eax
   140003951:	mov    rbx,QWORD PTR [rsp+0x40]
   140003956:	mov    rbp,QWORD PTR [rsp+0x48]
   14000395b:	mov    rsi,QWORD PTR [rsp+0x50]
   140003960:	add    rsp,0x20
   140003964:	pop    r15
   140003966:	pop    r14
   140003968:	pop    rdi
   140003969:	ret    
   14000396a:	int3   
   14000396b:	int3   
   14000396c:	int3   
   14000396d:	int3   
   14000396e:	int3   
   14000396f:	int3   
   140003970:	mov    QWORD PTR [rsp+0x20],rbx
   140003975:	push   rsi
   140003976:	push   rdi
   140003977:	push   r12
   140003979:	push   r14
   14000397b:	push   r15
   14000397d:	sub    rsp,0x80
   140003984:	mov    rax,QWORD PTR [rip+0x568d]        # 0x140009018
   14000398b:	xor    rax,rsp
   14000398e:	mov    QWORD PTR [rsp+0x78],rax
   140003993:	mov    rbx,r8
   140003996:	mov    QWORD PTR [rsp+0x38],rbx
   14000399b:	mov    QWORD PTR [rsp+0x48],rdx
   1400039a0:	mov    QWORD PTR [rsp+0x40],rcx
   1400039a5:	mov    QWORD PTR [rsp+0x58],rdx
   1400039aa:	xor    edi,edi
   1400039ac:	mov    DWORD PTR [rip+0xed8e],edi        # 0x140012740
   1400039b2:	mov    DWORD PTR [rip+0xab14],edi        # 0x14000e4cc
   1400039b8:	mov    DWORD PTR [rip+0xab02],0x1        # 0x14000e4c4
   1400039c2:	mov    r15d,edi
   1400039c5:	mov    DWORD PTR [rsp+0x30],edi
   1400039c9:	mov    rsi,QWORD PTR [rip+0x56b0]        # 0x140009080
   1400039d0:	mov    ecx,0xfffffff6
   1400039d5:	call   QWORD PTR [rip+0x376d]        # 0x140007148
   1400039db:	mov    ecx,edi
   1400039dd:	cmp    rbx,rax
   1400039e0:	sete   cl
   1400039e3:	mov    DWORD PTR [rip+0xec3f],ecx        # 0x140012628
   1400039e9:	test   ecx,ecx
   1400039eb:	jne    0x140003ae0
   1400039f1:	lea    rdx,[rsp+0x34]
   1400039f6:	mov    rcx,rbx
   1400039f9:	call   QWORD PTR [rip+0x36a1]        # 0x1400070a0
   1400039ff:	mov    DWORD PTR [rip+0x6aaf],eax        # 0x14000a4b4
   140003a05:	cmp    eax,0xffffffff
   140003a08:	jne    0x140003a18
   140003a0a:	call   QWORD PTR [rip+0x3658]        # 0x140007068
   140003a10:	test   eax,eax
   140003a12:	jne    0x140003e1a
   140003a18:	cmp    DWORD PTR [rip+0x6a96],edi        # 0x14000a4b4
   140003a1e:	jne    0x140003a2a
   140003a20:	cmp    DWORD PTR [rsp+0x34],edi
   140003a24:	je     0x140003e1a
   140003a2a:	cmp    DWORD PTR [rsp+0x34],edi
   140003a2e:	jne    0x140003ad6
   140003a34:	test   DWORD PTR [rip+0x6a76],0x80000000        # 0x14000a4b4
   140003a3e:	jne    0x140003ad6
   140003a44:	mov    QWORD PTR [rsp+0x28],rdi
   140003a49:	mov    DWORD PTR [rsp+0x20],edi
   140003a4d:	xor    r9d,r9d
   140003a50:	xor    edx,edx
   140003a52:	lea    r8d,[r9+0x2]
   140003a56:	mov    rcx,rbx
   140003a59:	call   QWORD PTR [rip+0x3691]        # 0x1400070f0
   140003a5f:	mov    rbx,rax
   140003a62:	test   rax,rax
   140003a65:	jne    0x140003a86
   140003a67:	lea    ecx,[rax+0x2]
   140003a6a:	call   0x140005e38
   140003a6f:	mov    rcx,rax
   140003a72:	mov    r8,QWORD PTR [rip+0x6a3f]        # 0x14000a4b8
   140003a79:	lea    edx,[rbx+0xd]
   140003a7c:	call   0x1400052ec
   140003a81:	jmp    0x140003e1a
   140003a86:	mov    QWORD PTR [rsp+0x20],rdi
   140003a8b:	xor    r9d,r9d
   140003a8e:	xor    r8d,r8d
   140003a91:	lea    edx,[r9+0x4]
   140003a95:	mov    rcx,rax
   140003a98:	call   QWORD PTR [rip+0x369a]        # 0x140007138
   140003a9e:	mov    QWORD PTR [rip+0xeb8b],rax        # 0x140012630
   140003aa5:	mov    rcx,rbx
   140003aa8:	call   QWORD PTR [rip+0x3622]        # 0x1400070d0
   140003aae:	mov    rbx,QWORD PTR [rsp+0x38]
   140003ab3:	cmp    QWORD PTR [rip+0xeb76],rdi        # 0x140012630
   140003aba:	je     0x140003ad6
   140003abc:	mov    rsi,QWORD PTR [rip+0xeb6d]        # 0x140012630
   140003ac3:	mov    QWORD PTR [rip+0x55b6],rsi        # 0x140009080
   140003aca:	mov    DWORD PTR [rip+0x63b0],0x1        # 0x140009e84
   140003ad4:	jmp    0x140003ae0
   140003ad6:	mov    DWORD PTR [rip+0xec60],0x1        # 0x140012740
   140003ae0:	cmp    DWORD PTR [rip+0xeb42],edi        # 0x140012628
   140003ae6:	jne    0x140003af0
   140003ae8:	cmp    DWORD PTR [rip+0xec52],edi        # 0x140012740
   140003aee:	je     0x140003b22
   140003af0:	lea    rsi,[rip+0xa9ed]        # 0x14000e4e4
   140003af7:	mov    QWORD PTR [rip+0x5582],rsi        # 0x140009080
   140003afe:	mov    QWORD PTR [rsp+0x20],rdi
   140003b03:	lea    r9,[rip+0x69aa]        # 0x14000a4b4
   140003b0a:	mov    r8d,0x2000
   140003b10:	mov    rdx,rsi
   140003b13:	mov    rcx,rbx
   140003b16:	call   QWORD PTR [rip+0x357c]        # 0x140007098
   140003b1c:	mov    DWORD PTR [rip+0x6362],eax        # 0x140009e84
   140003b22:	test   DWORD PTR [rip+0x6354],0x100        # 0x140009e80
   140003b2c:	je     0x140003b65
   140003b2e:	mov    rbx,rsi
   140003b31:	mov    r14d,DWORD PTR [rip+0x697c]        # 0x14000a4b4
   140003b38:	sub    r14d,0x1
   140003b3c:	je     0x140003b65
   140003b3e:	cmp    BYTE PTR [rbx],0x20
   140003b41:	jae    0x140003b5c
   140003b43:	movzx  edx,BYTE PTR [rbx]
   140003b46:	lea    rcx,[rip+0x3a43]        # 0x140007590
   140003b4d:	call   QWORD PTR [rip+0x374d]        # 0x1400072a0
   140003b53:	test   rax,rax
   140003b56:	je     0x140003df5
   140003b5c:	inc    rbx
   140003b5f:	add    r14d,0xffffffff
   140003b63:	jne    0x140003b3e
   140003b65:	or     r12,0xffffffffffffffff
   140003b69:	lea    rdx,[rip+0x5510]        # 0x140009080
   140003b70:	mov    ecx,r12d
   140003b73:	cmp    DWORD PTR [rip+0x630b],edi        # 0x140009e84
   140003b79:	cmovne ecx,DWORD PTR [rip+0x6934]        # 0x14000a4b4
   140003b80:	lea    eax,[rcx+r15*1]
   140003b84:	test   eax,eax
   140003b86:	jle    0x140003df5
   140003b8c:	cmp    DWORD PTR [rip+0xea96],edi        # 0x140012628
   140003b92:	jne    0x140003bbd
   140003b94:	cmp    DWORD PTR [rip+0xeba6],edi        # 0x140012740
   140003b9a:	jne    0x140003bbd
   140003b9c:	movsxd r14,ecx
   140003b9f:	movsxd rax,r15d
   140003ba2:	sub    r14,rax
   140003ba5:	add    r14,rsi
   140003ba8:	mov    DWORD PTR [rip+0x6906],edi        # 0x14000a4b4
   140003bae:	mov    DWORD PTR [rip+0x62cc],0x1        # 0x140009e84
   140003bb8:	jmp    0x140003d12
   140003bbd:	test   ecx,ecx
   140003bbf:	jg     0x140003bd5
   140003bc1:	mov    WORD PTR [rsi],0xa0d
   140003bc6:	add    rsi,0x2
   140003bca:	mov    r14,rsi
   140003bcd:	mov    r15d,edi
   140003bd0:	jmp    0x140003d12
   140003bd5:	movsxd r14,ecx
   140003bd8:	lea    rcx,[r14-0x1]
   140003bdc:	add    rcx,rsi
   140003bdf:	call   0x140004f34
   140003be4:	movsxd r15,eax
   140003be7:	sub    r14,r15
   140003bea:	add    r14,rsi
   140003bed:	movsxd rax,DWORD PTR [rsp+0x30]
   140003bf2:	xor    rax,0x1
   140003bf6:	mov    QWORD PTR [rsp+0x50],rax
   140003bfb:	mov    rsi,QWORD PTR [rdx+rax*8]
   140003bff:	mov    r8,r15
   140003c02:	mov    rdx,r14
   140003c05:	mov    rcx,rsi
   140003c08:	call   QWORD PTR [rip+0x35ea]        # 0x1400071f8
   140003c0e:	add    rsi,r15
   140003c11:	cmp    r15d,0x1000
   140003c18:	jle    0x140003cd2
   140003c1e:	cmp    r15d,0x2000
   140003c25:	jl     0x140003cb7
   140003c2b:	add    DWORD PTR [rip+0xa89a],r15d        # 0x14000e4cc
   140003c32:	mov    r15d,edi
   140003c35:	mov    rsi,QWORD PTR [rsp+0x50]
   140003c3a:	lea    rax,[rip+0x543f]        # 0x140009080
   140003c41:	mov    rsi,QWORD PTR [rax+rsi*8]
   140003c45:	cmp    DWORD PTR [rip+0xe9dd],edi        # 0x140012628
   140003c4b:	jne    0x140003c55
   140003c4d:	cmp    DWORD PTR [rip+0xeaed],edi        # 0x140012740
   140003c53:	je     0x140003c7b
   140003c55:	mov    QWORD PTR [rsp+0x20],rdi
   140003c5a:	lea    r9,[rip+0x6853]        # 0x14000a4b4
   140003c61:	mov    r8d,0x2000
   140003c67:	mov    rdx,rsi
   140003c6a:	mov    rcx,QWORD PTR [rsp+0x38]
   140003c6f:	call   QWORD PTR [rip+0x3423]        # 0x140007098
   140003c75:	mov    DWORD PTR [rip+0x6209],eax        # 0x140009e84
   140003c7b:	mov    r8d,0xa
   140003c81:	lea    rdx,[rsp+0x68]
   140003c86:	mov    ecx,DWORD PTR [rip+0xa838]        # 0x14000e4c4
   140003c8c:	call   QWORD PTR [rip+0x35d6]        # 0x140007268
   140003c92:	mov    ecx,0x2
   140003c97:	call   0x140005e38
   140003c9c:	mov    rcx,rax
   140003c9f:	lea    r9,[rsp+0x68]
   140003ca4:	mov    r8,QWORD PTR [rip+0x680d]        # 0x14000a4b8
   140003cab:	mov    edx,0x12
   140003cb0:	call   0x1400052ec
   140003cb5:	jmp    0x140003d12
   140003cb7:	cmp    DWORD PTR [rip+0xe96b],edi        # 0x140012628
   140003cbd:	jne    0x140003cc7
   140003cbf:	cmp    DWORD PTR [rip+0xea7b],edi        # 0x140012740
   140003cc5:	je     0x140003d12
   140003cc7:	mov    r8d,0x2000
   140003ccd:	sub    r8d,r15d
   140003cd0:	jmp    0x140003cf2
   140003cd2:	cmp    DWORD PTR [rip+0xe950],edi        # 0x140012628
   140003cd8:	jne    0x140003ce2
   140003cda:	cmp    DWORD PTR [rip+0xea60],edi        # 0x140012740
   140003ce0:	je     0x140003d12
   140003ce2:	mov    r8d,0x2000
   140003ce8:	sub    r8d,r15d
   140003ceb:	and    r8d,0xfffffc00
   140003cf2:	mov    QWORD PTR [rsp+0x20],rdi
   140003cf7:	lea    r9,[rip+0x67b6]        # 0x14000a4b4
   140003cfe:	mov    rdx,rsi
   140003d01:	mov    rcx,QWORD PTR [rsp+0x38]
   140003d06:	call   QWORD PTR [rip+0x338c]        # 0x140007098
   140003d0c:	mov    DWORD PTR [rip+0x6172],eax        # 0x140009e84
   140003d12:	movsxd rbx,DWORD PTR [rsp+0x30]
   140003d17:	mov    rcx,QWORD PTR [rsp+0x40]
   140003d1c:	mov    rax,QWORD PTR [rip+0x36a5]        # 0x1400073c8
   140003d23:	call   rax
   140003d25:	mov    r8,QWORD PTR [rsp+0x48]
   140003d2a:	mov    rdx,r14
   140003d2d:	lea    rax,[rip+0x534c]        # 0x140009080
   140003d34:	mov    rcx,QWORD PTR [rax+rbx*8]
   140003d38:	call   QWORD PTR [rsp+0x40]
   140003d3c:	mov    DWORD PTR [rsp+0x60],eax
   140003d40:	test   eax,eax
   140003d42:	je     0x140003db4
   140003d44:	mov    rsi,QWORD PTR [rsp+0x48]
   140003d49:	inc    r12
   140003d4c:	cmp    BYTE PTR [rsi+r12*1],dil
   140003d50:	jne    0x140003d49
   140003d52:	mov    rbx,QWORD PTR [rip+0x5307]        # 0x140009060
   140003d59:	mov    rcx,rbx
   140003d5c:	mov    rax,QWORD PTR [rip+0x3665]        # 0x1400073c8
   140003d63:	call   rax
   140003d65:	movzx  r8d,di
   140003d69:	mov    edx,r12d
   140003d6c:	mov    rcx,rsi
   140003d6f:	call   rbx
   140003d71:	mov    rbx,QWORD PTR [rip+0x52e8]        # 0x140009060
   140003d78:	mov    rcx,rbx
   140003d7b:	mov    rax,QWORD PTR [rip+0x3646]        # 0x1400073c8
   140003d82:	call   rax
   140003d84:	movzx  r8d,di
   140003d88:	mov    edx,0x2
   140003d8d:	lea    rcx,[rip+0x3804]        # 0x140007598
   140003d94:	call   rbx
   140003d96:	cmp    DWORD PTR [rip+0xe88c],edi        # 0x140012628
   140003d9c:	jne    0x140003e1a
   140003d9e:	cmp    DWORD PTR [rip+0xe99c],edi        # 0x140012740
   140003da4:	jne    0x140003e1a
   140003da6:	mov    rcx,QWORD PTR [rip+0xe883]        # 0x140012630
   140003dad:	test   rcx,rcx
   140003db0:	je     0x140003e1a
   140003db2:	jmp    0x140003e14
   140003db4:	lea    rdx,[rip+0x52c5]        # 0x140009080
   140003dbb:	sub    r14d,DWORD PTR [rdx+rbx*8]
   140003dbf:	add    DWORD PTR [rip+0xa706],r14d        # 0x14000e4cc
   140003dc6:	xor    DWORD PTR [rsp+0x30],0x1
   140003dcb:	jmp    0x140003b70
   140003dd0:	mov    ecx,0x2
   140003dd5:	call   0x140005e38
   140003dda:	mov    rcx,rax
   140003ddd:	mov    r9,QWORD PTR [rsp+0x58]
   140003de2:	mov    r8,QWORD PTR [rip+0x66cf]        # 0x14000a4b8
   140003de9:	mov    edx,0xf
   140003dee:	call   0x1400052ec
   140003df3:	xor    edi,edi
   140003df5:	cmp    DWORD PTR [rip+0xe82d],edi        # 0x140012628
   140003dfb:	jne    0x140003e1a
   140003dfd:	cmp    DWORD PTR [rip+0xe93d],edi        # 0x140012740
   140003e03:	jne    0x140003e1a
   140003e05:	mov    rsi,QWORD PTR [rip+0xe824]        # 0x140012630
   140003e0c:	test   rsi,rsi
   140003e0f:	je     0x140003e1a
   140003e11:	mov    rcx,rsi
   140003e14:	call   QWORD PTR [rip+0x3316]        # 0x140007130
   140003e1a:	mov    rcx,QWORD PTR [rsp+0x78]
   140003e1f:	xor    rcx,rsp
   140003e22:	call   0x140005820
   140003e27:	mov    rbx,QWORD PTR [rsp+0xc8]
   140003e2f:	add    rsp,0x80
   140003e36:	pop    r15
   140003e38:	pop    r14
   140003e3a:	pop    r12
   140003e3c:	pop    rdi
   140003e3d:	pop    rsi
   140003e3e:	ret    
   140003e3f:	int3   
   140003e40:	int3   
   140003e41:	int3   
   140003e42:	int3   
   140003e43:	int3   
   140003e44:	int3   
   140003e45:	int3   
   140003e46:	int3   
   140003e47:	int3   
   140003e48:	mov    QWORD PTR [rsp+0x18],rbx
   140003e4d:	push   rbp
   140003e4e:	push   rsi
   140003e4f:	push   rdi
   140003e50:	push   r12
   140003e52:	push   r13
   140003e54:	push   r14
   140003e56:	push   r15
   140003e58:	lea    rbp,[rsp-0x520]
   140003e60:	sub    rsp,0x620
   140003e67:	mov    rax,QWORD PTR [rip+0x51aa]        # 0x140009018
   140003e6e:	xor    rax,rsp
   140003e71:	mov    QWORD PTR [rbp+0x510],rax
   140003e78:	xor    esi,esi
   140003e7a:	movsxd r13,ecx
   140003e7d:	mov    rbx,rdx
   140003e80:	mov    QWORD PTR [rsp+0x50],rdx
   140003e85:	xor    r9d,r9d
   140003e88:	mov    DWORD PTR [rsp+0x58],r13d
   140003e8d:	xor    r8d,r8d
   140003e90:	mov    DWORD PTR [rsp+0x5c],esi
   140003e94:	lea    r15d,[rsi+0x1]
   140003e98:	mov    QWORD PTR [rsp+0x68],rsi
   140003e9d:	mov    edx,r15d
   140003ea0:	mov    BYTE PTR [rsp+0x40],sil
   140003ea5:	xor    ecx,ecx
   140003ea7:	mov    BYTE PTR [rsp+0x41],sil
   140003eac:	mov    r12d,esi
   140003eaf:	mov    r14d,esi
   140003eb2:	call   QWORD PTR [rip+0x3228]        # 0x1400070e0
   140003eb8:	xor    r8d,r8d
   140003ebb:	xor    edx,edx
   140003ebd:	mov    ecx,0x100
   140003ec2:	call   QWORD PTR [rip+0x3258]        # 0x140007120
   140003ec8:	call   0x140005f00
   140003ecd:	lea    edi,[rsi+0x8]
   140003ed0:	test   al,al
   140003ed2:	je     0x140003f01
   140003ed4:	test   r13d,r13d
   140003ed7:	je     0x140003efb
   140003ed9:	mov    edi,r13d
   140003edc:	mov    rdx,QWORD PTR [rbx]
   140003edf:	mov    rcx,rdx
   140003ee2:	call   QWORD PTR [rip+0x10118]        # 0x140014000
   140003ee8:	lea    rbx,[rbx+0x8]
   140003eec:	sub    rdi,r15
   140003eef:	jne    0x140003edc
   140003ef1:	mov    rbx,QWORD PTR [rsp+0x50]
   140003ef6:	mov    edi,0x8
   140003efb:	call   QWORD PTR [rip+0x31bf]        # 0x1400070c0
   140003f01:	call   QWORD PTR [rip+0x3369]        # 0x140007270
   140003f07:	mov    ecx,0xfffffff5
   140003f0c:	call   QWORD PTR [rip+0x3236]        # 0x140007148
   140003f12:	mov    rcx,rax
   140003f15:	lea    rdx,[rip+0xe6f4]        # 0x140012610
   140003f1c:	call   QWORD PTR [rip+0x3106]        # 0x140007028
   140003f22:	movzx  eax,WORD PTR [rip+0xe6ef]        # 0x140012618
   140003f29:	lea    rcx,[rbp+0xb0]
   140003f30:	or     ax,di
   140003f33:	xor    edx,edx
   140003f35:	mov    r8d,0x320
   140003f3b:	mov    WORD PTR [rip+0xe81a],ax        # 0x14001275c
   140003f42:	call   0x1400060c2
   140003f47:	lea    rdi,[rip+0x3652]        # 0x1400075a0
   140003f4e:	mov    ecx,r15d
   140003f51:	mov    rdx,rdi
   140003f54:	call   QWORD PTR [rip+0x32f6]        # 0x140007250
   140003f5a:	mov    rdx,rdi
   140003f5d:	mov    ecx,0x3
   140003f62:	call   QWORD PTR [rip+0x32e8]        # 0x140007250
   140003f68:	mov    rdx,rdi
   140003f6b:	mov    ecx,0x4
   140003f70:	call   QWORD PTR [rip+0x32da]        # 0x140007250
   140003f76:	mov    rdx,rdi
   140003f79:	mov    ecx,0x5
   140003f7e:	call   QWORD PTR [rip+0x32cc]        # 0x140007250
   140003f84:	call   QWORD PTR [rip+0x3086]        # 0x140007010
   140003f8a:	lea    r8,[rip+0x361f]        # 0x1400075b0
   140003f91:	mov    edx,0x8
   140003f96:	mov    r9d,eax
   140003f99:	lea    rcx,[rbp+0x3f0]
   140003fa0:	call   QWORD PTR [rip+0x3322]        # 0x1400072c8
   140003fa6:	lea    rdx,[rbp+0x3f0]
   140003fad:	mov    ecx,0x2
   140003fb2:	call   QWORD PTR [rip+0x3298]        # 0x140007250
   140003fb8:	lea    rax,[rip+0x35f9]        # 0x1400075b8
   140003fbf:	mov    BYTE PTR [rip+0xa4fb],r15b        # 0x14000e4c1
   140003fc6:	mov    r8d,0x100
   140003fcc:	mov    QWORD PTR [rip+0x64e5],rax        # 0x14000a4b8
   140003fd3:	mov    edx,r15d
   140003fd6:	mov    BYTE PTR [rip+0xa4e3],r15b        # 0x14000e4c0
   140003fdd:	lea    rcx,[rip+0xe65c]        # 0x140012640
   140003fe4:	call   0x1400060c2
   140003fe9:	mov    ecx,r15d
   140003fec:	mov    DWORD PTR [rip+0x5e8e],esi        # 0x140009e80
   140003ff2:	call   0x140005e38
   140003ff7:	mov    rcx,rax
   140003ffa:	call   QWORD PTR [rip+0x3260]        # 0x140007260
   140004000:	mov    edi,0x8000
   140004005:	mov    ecx,eax
   140004007:	mov    edx,edi
   140004009:	call   QWORD PTR [rip+0x3249]        # 0x140007258
   14000400f:	mov    ecx,0x2
   140004014:	call   0x140005e38
   140004019:	mov    rcx,rax
   14000401c:	call   QWORD PTR [rip+0x323e]        # 0x140007260
   140004022:	mov    ecx,eax
   140004024:	mov    edx,edi
   140004026:	call   QWORD PTR [rip+0x322c]        # 0x140007258
   14000402c:	mov    rax,r15
   14000402f:	mov    DWORD PTR [rsp+0x48],esi
   140004033:	mov    QWORD PTR [rbp+0x3d0],rax
   14000403a:	mov    rcx,r13
   14000403d:	mov    QWORD PTR [rsp+0x60],rcx
   140004042:	lea    r9,[rip+0xffffffffffffda17]        # 0x140001a60
   140004049:	cmp    r13,rax
   14000404c:	jle    0x1400044b2
   140004052:	lea    r8,[rip+0xffffffffffffea97]        # 0x140002af0
   140004059:	xor    edx,edx
   14000405b:	mov    rbx,QWORD PTR [rbx+rax*8]
   14000405f:	mov    al,BYTE PTR [rbx]
   140004061:	sub    al,0x2d
   140004063:	test   al,0xfd
   140004065:	jne    0x140004431
   14000406b:	inc    rbx
   14000406e:	mov    dil,BYTE PTR [rbx]
   140004071:	test   dil,dil
   140004074:	je     0x1400043b4
   14000407a:	movsx  ecx,dil
   14000407e:	cmp    ecx,0x58
   140004081:	jg     0x14000411a
   140004087:	je     0x140004379
   14000408d:	cmp    ecx,0x4e
   140004090:	jg     0x1400040da
   140004092:	je     0x140004147
   140004098:	sub    ecx,0x3f
   14000409b:	je     0x1400043d7
   1400040a1:	sub    ecx,0x3
   1400040a4:	je     0x14000417b
   1400040aa:	sub    ecx,0x3
   1400040ad:	je     0x14000416f
   1400040b3:	sub    ecx,0x4
   1400040b6:	je     0x140004164
   1400040bc:	sub    ecx,0x3
   1400040bf:	je     0x140004153
   1400040c5:	cmp    ecx,0x1
   1400040c8:	jne    0x140004219
   1400040ce:	or     DWORD PTR [rip+0x5dab],0x2        # 0x140009e80
   1400040d5:	jmp    0x1400043a2
   1400040da:	sub    ecx,0x4f
   1400040dd:	je     0x14000418b
   1400040e3:	sub    ecx,0x1
   1400040e6:	je     0x14000439a
   1400040ec:	sub    ecx,0x2
   1400040ef:	je     0x14000438c
   1400040f5:	sub    ecx,0x1
   1400040f8:	je     0x140004382
   1400040fe:	cmp    ecx,0x3
   140004101:	jne    0x140004219
   140004107:	lea    rax,[rip+0xfffffffffffff712]        # 0x140003820
   14000410e:	mov    QWORD PTR [rip+0x4f3b],rax        # 0x140009050
   140004115:	jmp    0x1400043a2
   14000411a:	cmp    ecx,0x6f
   14000411d:	jg     0x1400041ec
   140004123:	je     0x14000418b
   140004125:	sub    ecx,0x62
   140004128:	je     0x14000417b
   14000412a:	sub    ecx,0x3
   14000412d:	je     0x14000416f
   14000412f:	sub    ecx,0x4
   140004132:	je     0x140004164
   140004134:	sub    ecx,0x3
   140004137:	je     0x140004153
   140004139:	sub    ecx,0x1
   14000413c:	je     0x1400040ce
   14000413e:	cmp    ecx,0x1
   140004141:	jne    0x140004219
   140004147:	or     DWORD PTR [rip+0x5d32],0x4        # 0x140009e80
   14000414e:	jmp    0x1400043a2
   140004153:	mov    QWORD PTR [rip+0xe5f6],r8        # 0x140012750
   14000415a:	mov    BYTE PTR [rsp+0x40],0x1
   14000415f:	jmp    0x1400043a2
   140004164:	mov    DWORD PTR [rip+0x4efe],edx        # 0x140009068
   14000416a:	jmp    0x1400043a2
   14000416f:	or     DWORD PTR [rip+0x5d0a],0x10        # 0x140009e80
   140004176:	jmp    0x1400043a2
   14000417b:	mov    eax,0x8
   140004180:	or     DWORD PTR [rip+0x5cfa],eax        # 0x140009e80
   140004186:	jmp    0x1400043a2
   14000418b:	lea    rdx,[rip+0x342e]        # 0x1400075c0
   140004192:	mov    rcx,rbx
   140004195:	call   QWORD PTR [rip+0x3135]        # 0x1400072d0
   14000419b:	xor    edi,edi
   14000419d:	test   eax,eax
   14000419f:	jne    0x1400041aa
   1400041a1:	lea    rcx,[rip+0x3418]        # 0x1400075c0
   1400041a8:	jmp    0x1400041c5
   1400041aa:	lea    rdx,[rip+0x3417]        # 0x1400075c8
   1400041b1:	mov    rcx,rbx
   1400041b4:	call   QWORD PTR [rip+0x3116]        # 0x1400072d0
   1400041ba:	test   eax,eax
   1400041bc:	jne    0x1400041df
   1400041be:	lea    rcx,[rip+0x3403]        # 0x1400075c8
   1400041c5:	bts    DWORD PTR [rip+0x5cb3],0x9        # 0x140009e80
   1400041cd:	call   QWORD PTR [rip+0x2fd5]        # 0x1400071a8
   1400041d3:	dec    eax
   1400041d5:	cdqe   
   1400041d7:	add    rbx,rax
   1400041da:	jmp    0x140004335
   1400041df:	bts    DWORD PTR [rip+0x5c99],0x7        # 0x140009e80
   1400041e7:	jmp    0x140004335
   1400041ec:	sub    ecx,0x70
   1400041ef:	je     0x14000439a
   1400041f5:	sub    ecx,0x2
   1400041f8:	je     0x14000438c
   1400041fe:	sub    ecx,0x1
   140004201:	je     0x140004382
   140004207:	sub    ecx,0x3
   14000420a:	je     0x140004107
   140004210:	cmp    ecx,0x2
   140004213:	je     0x140004379
   140004219:	cmp    BYTE PTR [rbx+0x1],0x3a
   14000421d:	jne    0x140004277
   14000421f:	add    rbx,0x2
   140004223:	xor    eax,eax
   140004225:	cmp    BYTE PTR [rbx],al
   140004227:	je     0x1400043f9
   14000422d:	mov    rcx,rbx
   140004230:	call   QWORD PTR [rip+0x2f72]        # 0x1400071a8
   140004236:	mov    edx,eax
   140004238:	movsx  eax,dil
   14000423c:	cmp    eax,0x61
   14000423f:	jg     0x140004301
   140004245:	lea    ecx,[rax-0x41]
   140004248:	test   ecx,0xffffffdf
   14000424e:	je     0x1400042ad
   140004250:	cmp    eax,0x43
   140004253:	je     0x140004347
   140004259:	cmp    eax,0x44
   14000425c:	je     0x140004329
   140004262:	add    eax,0xffffffba
   140004265:	cmp    eax,0x1
   140004268:	jbe    0x140004313
   14000426e:	lea    eax,[rdx-0x1]
   140004271:	movsxd rcx,eax
   140004274:	add    rbx,rcx
   140004277:	xor    eax,eax
   140004279:	mov    BYTE PTR [rsp+0x44],0x2f
   14000427e:	mov    BYTE PTR [rsp+0x45],dil
   140004283:	mov    BYTE PTR [rsp+0x46],al
   140004287:	lea    ecx,[rax+0x2]
   14000428a:	call   0x140005e38
   14000428f:	mov    r8,QWORD PTR [rip+0x6222]        # 0x14000a4b8
   140004296:	lea    r9,[rsp+0x44]
   14000429b:	mov    rcx,rax
   14000429e:	mov    edx,0x6
   1400042a3:	call   0x1400052ec
   1400042a8:	jmp    0x140004335
   1400042ad:	xor    edi,edi
   1400042af:	mov    WORD PTR [rip+0xe4a6],di        # 0x14001275c
   1400042b6:	jmp    0x1400042f6
   1400042b8:	movsx  ecx,al
   1400042bb:	call   QWORD PTR [rip+0x2f6f]        # 0x140007230
   1400042c1:	test   eax,eax
   1400042c3:	je     0x1400042fc
   1400042c5:	cmp    BYTE PTR [rbx],0x39
   1400042c8:	jg     0x1400042d2
   1400042ca:	movsx  eax,BYTE PTR [rbx]
   1400042cd:	sub    eax,0x30
   1400042d0:	jmp    0x1400042de
   1400042d2:	movsx  ecx,BYTE PTR [rbx]
   1400042d5:	call   QWORD PTR [rip+0x3095]        # 0x140007370
   1400042db:	sub    eax,0x57
   1400042de:	movzx  ecx,WORD PTR [rip+0xe477]        # 0x14001275c
   1400042e5:	shl    cx,0x4
   1400042e9:	add    cx,ax
   1400042ec:	mov    WORD PTR [rip+0xe469],cx        # 0x14001275c
   1400042f3:	inc    rbx
   1400042f6:	mov    al,BYTE PTR [rbx]
   1400042f8:	test   al,al
   1400042fa:	jne    0x1400042b8
   1400042fc:	dec    rbx
   1400042ff:	jmp    0x140004335
   140004301:	cmp    eax,0x63
   140004304:	je     0x140004347
   140004306:	cmp    eax,0x64
   140004309:	je     0x140004329
   14000430b:	add    eax,0xffffff9a
   14000430e:	jmp    0x140004265
   140004313:	sub    dil,0x46
   140004317:	test   dil,0xdf
   14000431b:	je     0x140004322
   14000431d:	mov    r14,rbx
   140004320:	jmp    0x14000432c
   140004322:	mov    QWORD PTR [rsp+0x68],rbx
   140004327:	jmp    0x14000432c
   140004329:	mov    r12,rbx
   14000432c:	lea    eax,[rdx-0x1]
   14000432f:	movsxd rcx,eax
   140004332:	add    rbx,rcx
   140004335:	lea    r8,[rip+0xffffffffffffe7b4]        # 0x140002af0
   14000433c:	xor    edx,edx
   14000433e:	lea    r9,[rip+0xffffffffffffd71b]        # 0x140001a60
   140004345:	jmp    0x1400043a2
   140004347:	lea    r8,[rip+0xffffffffffffe7a2]        # 0x140002af0
   14000434e:	mov    QWORD PTR [rip+0xe3fb],r8        # 0x140012750
   140004355:	cmp    rsi,0x64
   140004359:	jge    0x140004da8
   14000435f:	inc    DWORD PTR [rsp+0x5c]
   140004363:	lea    eax,[rdx-0x1]
   140004366:	mov    QWORD PTR [rbp+rsi*8+0xb0],rbx
   14000436e:	inc    rsi
   140004371:	movsxd rcx,eax
   140004374:	add    rbx,rcx
   140004377:	jmp    0x14000433c
   140004379:	or     DWORD PTR [rip+0x5b00],0x18        # 0x140009e80
   140004380:	jmp    0x1400043a2
   140004382:	mov    DWORD PTR [rsp+0x48],0x1
   14000438a:	jmp    0x1400043a2
   14000438c:	mov    QWORD PTR [rip+0xe3bd],r9        # 0x140012750
   140004393:	mov    BYTE PTR [rsp+0x41],0x1
   140004398:	jmp    0x1400043a2
   14000439a:	bts    DWORD PTR [rip+0x5ade],0x8        # 0x140009e80
   1400043a2:	inc    rbx
   1400043a5:	mov    dil,BYTE PTR [rbx]
   1400043a8:	test   dil,dil
   1400043ab:	jne    0x14000407a
   1400043b1:	mov    rcx,r13
   1400043b4:	mov    rax,QWORD PTR [rbp+0x3d0]
   1400043bb:	inc    r15d
   1400043be:	inc    rax
   1400043c1:	mov    QWORD PTR [rbp+0x3d0],rax
   1400043c8:	cmp    rax,rcx
   1400043cb:	jge    0x140004431
   1400043cd:	mov    rbx,QWORD PTR [rsp+0x50]
   1400043d2:	jmp    0x14000405b
   1400043d7:	mov    ecx,0x1
   1400043dc:	call   0x140005e38
   1400043e1:	xor    r8d,r8d
   1400043e4:	mov    rcx,rax
   1400043e7:	lea    edx,[r8+0x3]
   1400043eb:	call   0x1400052ec
   1400043f0:	xor    ecx,ecx
   1400043f2:	call   QWORD PTR [rip+0x2f10]        # 0x140007308
   1400043f8:	int3   
   1400043f9:	mov    ecx,0x2
   1400043fe:	mov    BYTE PTR [rsp+0x44],dil
   140004403:	mov    BYTE PTR [rsp+0x45],al
   140004407:	call   0x140005e38
   14000440c:	mov    r8,QWORD PTR [rip+0x60a5]        # 0x14000a4b8
   140004413:	lea    r9,[rsp+0x44]
   140004418:	mov    rcx,rax
   14000441b:	mov    edx,0xb
   140004420:	call   0x1400052ec
   140004425:	mov    ecx,0x2
   14000442a:	call   QWORD PTR [rip+0x2ed8]        # 0x140007308
   140004430:	int3   
   140004431:	mov    al,BYTE PTR [rsp+0x40]
   140004435:	xor    esi,esi
   140004437:	mov    cl,BYTE PTR [rsp+0x41]
   14000443b:	test   al,al
   14000443d:	je     0x140004450
   14000443f:	test   cl,cl
   140004441:	jne    0x140004db3
   140004447:	mov    QWORD PTR [rip+0xe302],r8        # 0x140012750
   14000444e:	jmp    0x140004464
   140004450:	mov    rax,QWORD PTR [rip+0xe2f9]        # 0x140012750
   140004457:	test   cl,cl
   140004459:	cmovne rax,r9
   14000445d:	mov    QWORD PTR [rip+0xe2ec],rax        # 0x140012750
   140004464:	movsxd rax,DWORD PTR [rsp+0x5c]
   140004469:	test   eax,eax
   14000446b:	je     0x1400044b2
   14000446d:	mov    rdi,rsi
   140004470:	mov    rsi,rax
   140004473:	test   rax,rax
   140004476:	jle    0x1400044b0
   140004478:	mov    rbx,QWORD PTR [rbp+rdi*8+0xb0]
   140004480:	test   rbx,rbx
   140004483:	je     0x1400044ab
   140004485:	mov    rcx,rbx
   140004488:	call   QWORD PTR [rip+0x2d1a]        # 0x1400071a8
   14000448e:	movsxd rdx,eax
   140004491:	lea    r8,[rip+0x3134]        # 0x1400075cc
   140004498:	add    rdx,rbx
   14000449b:	mov    rcx,rbx
   14000449e:	call   0x140002bc0
   1400044a3:	inc    rdi
   1400044a6:	cmp    rdi,rsi
   1400044a9:	jl     0x140004478
   1400044ab:	mov    r13d,DWORD PTR [rsp+0x58]
   1400044b0:	xor    esi,esi
   1400044b2:	cmp    r15d,r13d
   1400044b5:	jne    0x1400044c8
   1400044b7:	cmp    DWORD PTR [rip+0xe143],esi        # 0x140012600
   1400044bd:	jne    0x1400044c8
   1400044bf:	test   r14,r14
   1400044c2:	je     0x140004dbe
   1400044c8:	mov    rax,QWORD PTR [rip+0x4bb9]        # 0x140009088
   1400044cf:	mov    ecx,0x1
   1400044d4:	mov    BYTE PTR [rax-0x1],0xa
   1400044d8:	mov    rax,QWORD PTR [rip+0x4ba1]        # 0x140009080
   1400044df:	mov    BYTE PTR [rax-0x1],0xa
   1400044e3:	call   0x140005e38
   1400044e8:	mov    rcx,rax
   1400044eb:	call   QWORD PTR [rip+0x2d6f]        # 0x140007260
   1400044f1:	mov    ecx,eax
   1400044f3:	call   QWORD PTR [rip+0x2daf]        # 0x1400072a8
   1400044f9:	test   eax,eax
   1400044fb:	je     0x140004519
   1400044fd:	lea    rax,[rip+0xffffffffffffeacc]        # 0x140002fd0
   140004504:	mov    QWORD PTR [rip+0x4b55],rax        # 0x140009060
   14000450b:	lea    rax,[rip+0xffffffffffffed8e]        # 0x1400032a0
   140004512:	mov    QWORD PTR [rip+0x4b3f],rax        # 0x140009058
   140004519:	mov    edi,0xfffffff6
   14000451e:	test   r14,r14
   140004521:	je     0x1400045f7
   140004527:	mov    al,BYTE PTR [r14]
   14000452a:	cmp    al,BYTE PTR [rip+0x30a0]        # 0x1400075d0
   140004530:	jne    0x14000453e
   140004532:	mov    al,BYTE PTR [r14+0x1]
   140004536:	cmp    al,BYTE PTR [rip+0x3095]        # 0x1400075d1
   14000453c:	je     0x140004555
   14000453e:	mov    al,BYTE PTR [r14]
   140004541:	cmp    al,BYTE PTR [rip+0x308d]        # 0x1400075d4
   140004547:	jne    0x1400045a2
   140004549:	mov    al,BYTE PTR [r14+0x1]
   14000454d:	cmp    al,BYTE PTR [rip+0x3082]        # 0x1400075d5
   140004553:	jne    0x1400045a2
   140004555:	mov    ecx,edi
   140004557:	call   QWORD PTR [rip+0x2beb]        # 0x140007148
   14000455d:	mov    rbx,rax
   140004560:	mov    r8,rbx
   140004563:	lea    rdx,[rip+0x302e]        # 0x140007598
   14000456a:	lea    rcx,[rip+0xffffffffffffe64f]        # 0x140002bc0
   140004571:	call   0x140003970
   140004576:	mov    ecx,edi
   140004578:	call   QWORD PTR [rip+0x2bca]        # 0x140007148
   14000457e:	cmp    rbx,rax
   140004581:	je     0x14000458c
   140004583:	mov    rcx,rbx
   140004586:	call   QWORD PTR [rip+0x2b44]        # 0x1400070d0
   14000458c:	mov    r14,QWORD PTR [rsp+0x50]
   140004591:	cmp    DWORD PTR [rip+0xe069],esi        # 0x140012600
   140004597:	jne    0x14000462f
   14000459d:	jmp    0x140004dc9
   1400045a2:	mov    QWORD PTR [rsp+0x30],rsi
   1400045a7:	xor    r9d,r9d
   1400045aa:	mov    DWORD PTR [rsp+0x28],esi
   1400045ae:	xor    r8d,r8d
   1400045b1:	mov    edx,0x80000000
   1400045b6:	mov    DWORD PTR [rsp+0x20],0x3
   1400045be:	mov    rcx,r14
   1400045c1:	call   QWORD PTR [rip+0x2ab9]        # 0x140007080
   1400045c7:	mov    rbx,rax
   1400045ca:	cmp    rax,0xffffffffffffffff
   1400045ce:	jne    0x140004560
   1400045d0:	lea    ecx,[rax+0x3]
   1400045d3:	call   0x140005e38
   1400045d8:	mov    r8,QWORD PTR [rip+0x5ed9]        # 0x14000a4b8
   1400045df:	lea    edx,[rbx+0x8]
   1400045e2:	mov    rcx,rax
   1400045e5:	mov    r9,r14
   1400045e8:	call   0x1400052ec
   1400045ed:	lea    ecx,[rbx+0x3]
   1400045f0:	call   QWORD PTR [rip+0x2d12]        # 0x140007308
   1400045f6:	int3   
   1400045f7:	cmp    DWORD PTR [rip+0xe003],esi        # 0x140012600
   1400045fd:	mov    r14,QWORD PTR [rsp+0x50]
   140004602:	jne    0x14000462f
   140004604:	movsxd rax,r15d
   140004607:	inc    r15d
   14000460a:	or     rdx,0xffffffffffffffff
   14000460e:	mov    rcx,QWORD PTR [r14+rax*8]
   140004612:	inc    rdx
   140004615:	cmp    BYTE PTR [rcx+rdx*1],sil
   140004619:	jne    0x140004612
   14000461b:	add    rdx,rcx
   14000461e:	lea    r8,[rip+0x2fb3]        # 0x1400075d8
   140004625:	call   0x140002bc0
   14000462a:	jmp    0x140004591
   14000462f:	lea    rax,[rip+0xffffffffffffd42a]        # 0x140001a60
   140004636:	cmp    QWORD PTR [rip+0xe113],rax        # 0x140012750
   14000463d:	je     0x140004762
   140004643:	mov    edx,DWORD PTR [rip+0x4a2f]        # 0x140009078
   140004649:	lea    rcx,[rip+0xdff0]        # 0x140012640
   140004650:	inc    edx
   140004652:	mov    r8d,0x100
   140004658:	call   0x1400060c2
   14000465d:	lea    rax,[rip+0x91c]        # 0x140004f80
   140004664:	mov    edi,esi
   140004666:	mov    QWORD PTR [rip+0xdf9b],rax        # 0x140012608
   14000466d:	lea    r13,[rip+0xffffffffffffb98c]        # 0x140000000
   140004674:	mov    ebx,esi
   140004676:	cmp    DWORD PTR [rip+0x49ec],esi        # 0x140009068
   14000467c:	jne    0x140004696
   14000467e:	mov    ecx,ebx
   140004680:	call   QWORD PTR [rip+0x2cba]        # 0x140007340
   140004686:	test   eax,eax
   140004688:	je     0x140004696
   14000468a:	mov    ecx,ebx
   14000468c:	call   QWORD PTR [rip+0x2c86]        # 0x140007318
   140004692:	test   eax,eax
   140004694:	jne    0x1400046d7
   140004696:	mov    esi,ebx
   140004698:	xor    eax,eax
   14000469a:	cmp    BYTE PTR [rsi+r13*1+0x12500],al
   1400046a2:	je     0x1400046d5
   1400046a4:	xor    r8d,r8d
   1400046a7:	mov    BYTE PTR [rsp+0x40],bl
   1400046ab:	lea    edx,[rax+0x1]
   1400046ae:	lea    rcx,[rsp+0x40]
   1400046b3:	call   0x14000270c
   1400046b8:	movsx  rcx,BYTE PTR [rsi+r13*1+0x12500]
   1400046c1:	mov    edx,0x1
   1400046c6:	mov    rcx,QWORD PTR [r13+rcx*8+0x9eb0]
   1400046ce:	call   0x140002e54
   1400046d3:	add    edi,eax
   1400046d5:	xor    esi,esi
   1400046d7:	inc    ebx
   1400046d9:	cmp    ebx,0x100
   1400046df:	jb     0x140004676
   1400046e1:	mov    eax,DWORD PTR [rip+0xdf19]        # 0x140012600
   1400046e7:	mov    r13d,DWORD PTR [rsp+0x58]
   1400046ec:	cmp    edi,eax
   1400046ee:	je     0x14000474c
   1400046f0:	mov    ebx,0xf
   1400046f5:	lea    rdx,[rbp+0x3e0]
   1400046fc:	mov    r8d,ebx
   1400046ff:	mov    ecx,edi
   140004701:	lea    r9d,[rbx-0x5]
   140004705:	call   QWORD PTR [rip+0x2bad]        # 0x1400072b8
   14000470b:	mov    ecx,DWORD PTR [rip+0xdeef]        # 0x140012600
   140004711:	lea    r9d,[rbx-0x5]
   140004715:	mov    r8d,ebx
   140004718:	lea    rdx,[rbp+0x3d0]
   14000471f:	call   QWORD PTR [rip+0x2b93]        # 0x1400072b8
   140004725:	lea    ecx,[rbx-0xd]
   140004728:	call   0x140005e38
   14000472d:	mov    rcx,rax
   140004730:	lea    r9,[rbp+0x3d0]
   140004737:	lea    r8,[rbp+0x3e0]
   14000473e:	lea    edx,[rbx-0x7]
   140004741:	call   0x1400052ec
   140004746:	mov    eax,DWORD PTR [rip+0xdeb4]        # 0x140012600
   14000474c:	cmp    eax,0x1
   14000474f:	jne    0x14000477e
   140004751:	cmp    DWORD PTR [rip+0x4911],esi        # 0x140009068
   140004757:	je     0x14000477e
   140004759:	lea    rax,[rip+0x710]        # 0x140004e70
   140004760:	jmp    0x140004777
   140004762:	mov    rax,QWORD PTR [rip+0xde9f]        # 0x140012608
   140004769:	lea    rcx,[rip+0xffffffffffffd5e0]        # 0x140001d50
   140004770:	test   rax,rax
   140004773:	cmove  rax,rcx
   140004777:	mov    QWORD PTR [rip+0xde8a],rax        # 0x140012608
   14000477e:	mov    rdi,QWORD PTR [rsp+0x68]
   140004783:	test   rdi,rdi
   140004786:	je     0x14000489c
   14000478c:	or     DWORD PTR [rip+0x56ed],0x1        # 0x140009e80
   140004793:	mov    al,BYTE PTR [rdi]
   140004795:	cmp    al,BYTE PTR [rip+0x2e35]        # 0x1400075d0
   14000479b:	jne    0x1400047a8
   14000479d:	mov    al,BYTE PTR [rdi+0x1]
   1400047a0:	cmp    al,BYTE PTR [rip+0x2e2b]        # 0x1400075d1
   1400047a6:	je     0x1400047bd
   1400047a8:	mov    al,BYTE PTR [rdi]
   1400047aa:	cmp    al,BYTE PTR [rip+0x2e24]        # 0x1400075d4
   1400047b0:	jne    0x1400047cc
   1400047b2:	mov    al,BYTE PTR [rdi+0x1]
   1400047b5:	cmp    al,BYTE PTR [rip+0x2e1a]        # 0x1400075d5
   1400047bb:	jne    0x1400047cc
   1400047bd:	xor    ecx,ecx
   1400047bf:	call   0x140005e38
   1400047c4:	mov    rbx,rax
   1400047c7:	jmp    0x14000486b
   1400047cc:	lea    rdx,[rip+0x2e09]        # 0x1400075dc
   1400047d3:	mov    rcx,rdi
   1400047d6:	call   QWORD PTR [rip+0x2b44]        # 0x140007320
   1400047dc:	mov    rbx,rax
   1400047df:	test   rax,rax
   1400047e2:	jne    0x14000486b
   1400047e8:	lea    ecx,[rax+0x2]
   1400047eb:	call   0x140005e38
   1400047f0:	mov    r8,QWORD PTR [rip+0x5cc1]        # 0x14000a4b8
   1400047f7:	lea    edx,[rbx+0x9]
   1400047fa:	mov    rcx,rax
   1400047fd:	mov    r9,rdi
   140004800:	call   0x1400052ec
   140004805:	lea    ecx,[rbx+0x2]
   140004808:	call   QWORD PTR [rip+0x2afa]        # 0x140007308
   14000480e:	int3   
   14000480f:	lea    rdx,[rip+0x2d82]        # 0x140007598
   140004816:	lea    rcx,[rbp+0x400]
   14000481d:	call   QWORD PTR [rip+0x2b05]        # 0x140007328
   140004823:	cmp    rax,0x105
   140004829:	jae    0x140004dd4
   14000482f:	lea    rcx,[rbp+0x400]
   140004836:	mov    BYTE PTR [rbp+rax*1+0x400],sil
   14000483e:	call   0x140002ecc
   140004843:	mov    rdi,rax
   140004846:	cmp    rax,0xffffffffffffffff
   14000484a:	je     0x14000486b
   14000484c:	mov    rcx,QWORD PTR [rip+0x47fd]        # 0x140009050
   140004853:	lea    rdx,[rbp+0x400]
   14000485a:	mov    r8,rax
   14000485d:	call   0x140003970
   140004862:	mov    rcx,rdi
   140004865:	call   QWORD PTR [rip+0x2865]        # 0x1400070d0
   14000486b:	mov    r8,rbx
   14000486e:	lea    rcx,[rbp+0x400]
   140004875:	mov    edx,0x105
   14000487a:	call   QWORD PTR [rip+0x2a10]        # 0x140007290
   140004880:	test   rax,rax
   140004883:	jne    0x14000480f
   140004885:	xor    ecx,ecx
   140004887:	call   0x140005e38
   14000488c:	cmp    rbx,rax
   14000488f:	je     0x1400048c4
   140004891:	mov    rcx,rbx
   140004894:	call   QWORD PTR [rip+0x29a6]        # 0x140007240
   14000489a:	jmp    0x1400048c4
   14000489c:	cmp    r15d,r13d
   14000489f:	jne    0x1400048c4
   1400048a1:	and    DWORD PTR [rip+0x55d8],0xfffffffc        # 0x140009e80
   1400048a8:	mov    ecx,0xfffffff6
   1400048ad:	call   QWORD PTR [rip+0x2895]        # 0x140007148
   1400048b3:	mov    rcx,QWORD PTR [rip+0x4796]        # 0x140009050
   1400048ba:	xor    edx,edx
   1400048bc:	mov    r8,rax
   1400048bf:	call   0x140003970
   1400048c4:	mov    esi,DWORD PTR [rsp+0x48]
   1400048c8:	lea    eax,[r15+0x1]
   1400048cc:	xor    edi,edi
   1400048ce:	cmp    r13d,eax
   1400048d1:	jg     0x1400048fd
   1400048d3:	test   esi,esi
   1400048d5:	jne    0x1400048fd
   1400048d7:	cmp    r15d,r13d
   1400048da:	jge    0x140004904
   1400048dc:	movsxd rax,r15d
   1400048df:	mov    rcx,QWORD PTR [r14+rax*8]
   1400048e3:	test   rcx,rcx
   1400048e6:	je     0x140004904
   1400048e8:	jmp    0x1400048f5
   1400048ea:	cmp    al,0x3f
   1400048ec:	je     0x1400048fd
   1400048ee:	cmp    al,0x2a
   1400048f0:	je     0x1400048fd
   1400048f2:	inc    rcx
   1400048f5:	mov    al,BYTE PTR [rcx]
   1400048f7:	test   al,al
   1400048f9:	jne    0x1400048ea
   1400048fb:	jmp    0x140004904
   1400048fd:	or     DWORD PTR [rip+0x557c],0x1        # 0x140009e80
   140004904:	test   r12,r12
   140004907:	je     0x140004bcc
   14000490d:	cmp    BYTE PTR [r12],dil
   140004911:	je     0x140004bcc
   140004917:	xor    edx,edx
   140004919:	xor    ecx,ecx
   14000491b:	mov    rsi,rdi
   14000491e:	call   QWORD PTR [rip+0x2834]        # 0x140007158
   140004924:	mov    ebx,eax
   140004926:	test   eax,eax
   140004928:	je     0x140004b99
   14000492e:	mov    ecx,ebx
   140004930:	call   QWORD PTR [rip+0x29ca]        # 0x140007300
   140004936:	mov    rsi,rax
   140004939:	test   rax,rax
   14000493c:	jne    0x140004962
   14000493e:	lea    ecx,[rax+0x2]
   140004941:	call   0x140005e38
   140004946:	mov    r8,QWORD PTR [rip+0x5b6b]        # 0x14000a4b8
   14000494d:	lea    edx,[rsi+0x2]
   140004950:	mov    rcx,rax
   140004953:	call   0x1400052ec
   140004958:	lea    ecx,[rsi+0x2]
   14000495b:	call   QWORD PTR [rip+0x29a7]        # 0x140007308
   140004961:	int3   
   140004962:	mov    rdx,rax
   140004965:	mov    ecx,ebx
   140004967:	call   QWORD PTR [rip+0x27eb]        # 0x140007158
   14000496d:	test   eax,eax
   14000496f:	je     0x140004b99
   140004975:	mov    edx,0x3b
   14000497a:	mov    rcx,r12
   14000497d:	call   QWORD PTR [rip+0x291d]        # 0x1400072a0
   140004983:	mov    QWORD PTR [rsp+0x60],rax
   140004988:	mov    r14,rax
   14000498b:	test   rax,rax
   14000498e:	je     0x140004993
   140004990:	mov    BYTE PTR [rax],dil
   140004993:	cmp    BYTE PTR [r12],dil
   140004997:	je     0x140004ae5
   14000499d:	mov    rbx,QWORD PTR [rip+0x46bc]        # 0x140009060
   1400049a4:	mov    rcx,rbx
   1400049a7:	call   QWORD PTR [rip+0x2a1b]        # 0x1400073c8
   1400049ad:	movzx  r8d,WORD PTR [rip+0xdda7]        # 0x14001275c
   1400049b5:	lea    rcx,[rip+0x2c24]        # 0x1400075e0
   1400049bc:	mov    edx,0x2
   1400049c1:	call   rbx
   1400049c3:	mov    rcx,r12
   1400049c6:	call   QWORD PTR [rip+0x27dc]        # 0x1400071a8
   1400049cc:	mov    rdi,QWORD PTR [rip+0x468d]        # 0x140009060
   1400049d3:	mov    ebx,eax
   1400049d5:	mov    rcx,rdi
   1400049d8:	call   QWORD PTR [rip+0x29ea]        # 0x1400073c8
   1400049de:	movzx  r8d,WORD PTR [rip+0xdd76]        # 0x14001275c
   1400049e6:	mov    edx,ebx
   1400049e8:	mov    rcx,r12
   1400049eb:	call   rdi
   1400049ed:	mov    rbx,QWORD PTR [rip+0x466c]        # 0x140009060
   1400049f4:	mov    rcx,rbx
   1400049f7:	call   QWORD PTR [rip+0x29cb]        # 0x1400073c8
   1400049fd:	movzx  r8d,WORD PTR [rip+0xdd57]        # 0x14001275c
   140004a05:	lea    rcx,[rip+0x2bd8]        # 0x1400075e4
   140004a0c:	mov    edx,0x3
   140004a11:	call   rbx
   140004a13:	mov    rcx,rsi
   140004a16:	call   QWORD PTR [rip+0x2734]        # 0x140007150
   140004a1c:	xor    edi,edi
   140004a1e:	test   eax,eax
   140004a20:	je     0x140004b63
   140004a26:	mov    rcx,r12
   140004a29:	call   QWORD PTR [rip+0x2721]        # 0x140007150
   140004a2f:	test   eax,eax
   140004a31:	jne    0x140004a55
   140004a33:	lea    ecx,[rdi+0x2]
   140004a36:	call   0x140005e38
   140004a3b:	mov    r8,QWORD PTR [rip+0x5a76]        # 0x14000a4b8
   140004a42:	lea    edx,[rdi+0x4]
   140004a45:	mov    rcx,rax
   140004a48:	mov    r9,r12
   140004a4b:	call   0x1400052ec
   140004a50:	jmp    0x140004ae5
   140004a55:	mov    rcx,QWORD PTR [rsp+0x50]
   140004a5a:	mov    ebx,r13d
   140004a5d:	movsxd rax,r15d
   140004a60:	sub    ebx,r15d
   140004a63:	mov    r9d,ebx
   140004a66:	lea    r12,[rcx+rax*8]
   140004a6a:	mov    eax,DWORD PTR [rsp+0x48]
   140004a6e:	mov    r8,r12
   140004a71:	mov    DWORD PTR [rsp+0x20],eax
   140004a75:	lea    rcx,[rbp+0x400]
   140004a7c:	call   0x140001f44
   140004a81:	test   eax,eax
   140004a83:	js     0x140004ae5
   140004a85:	mov    r13d,DWORD PTR [rsp+0x48]
   140004a8a:	lea    rcx,[rbp+0x400]
   140004a91:	call   0x140002ecc
   140004a96:	mov    rdi,rax
   140004a99:	cmp    rax,0xffffffffffffffff
   140004a9d:	je     0x140004abe
   140004a9f:	mov    rcx,QWORD PTR [rip+0x45aa]        # 0x140009050
   140004aa6:	lea    rdx,[rbp+0x400]
   140004aad:	mov    r8,rax
   140004ab0:	call   0x140003970
   140004ab5:	mov    rcx,rdi
   140004ab8:	call   QWORD PTR [rip+0x2612]        # 0x1400070d0
   140004abe:	mov    r9d,ebx
   140004ac1:	mov    DWORD PTR [rsp+0x20],r13d
   140004ac6:	mov    r8,r12
   140004ac9:	lea    rcx,[rbp+0x400]
   140004ad0:	call   0x140001f44
   140004ad5:	test   eax,eax
   140004ad7:	jns    0x140004a8a
   140004ad9:	mov    r14,QWORD PTR [rsp+0x60]
   140004ade:	xor    edi,edi
   140004ae0:	mov    r13d,DWORD PTR [rsp+0x58]
   140004ae5:	lea    r12,[r14+0x1]
   140004ae9:	test   r14,r14
   140004aec:	jne    0x140004975
   140004af2:	mov    rcx,rsi
   140004af5:	call   QWORD PTR [rip+0x2865]        # 0x140007360
   140004afb:	mov    rbx,QWORD PTR [rip+0x4556]        # 0x140009058
   140004b02:	mov    rcx,rbx
   140004b05:	call   QWORD PTR [rip+0x28bd]        # 0x1400073c8
   140004b0b:	call   rbx
   140004b0d:	xor    eax,eax
   140004b0f:	cmp    BYTE PTR [rip+0xdc33],al        # 0x140012748
   140004b15:	je     0x140004b33
   140004b17:	lea    ecx,[rax+0x2]
   140004b1a:	call   0x140005e38
   140004b1f:	mov    r8,QWORD PTR [rip+0x5992]        # 0x14000a4b8
   140004b26:	mov    rcx,rax
   140004b29:	mov    edx,0x16
   140004b2e:	call   0x1400052ec
   140004b33:	mov    eax,DWORD PTR [rip+0x455b]        # 0x140009094
   140004b39:	mov    rcx,QWORD PTR [rbp+0x510]
   140004b40:	xor    rcx,rsp
   140004b43:	call   0x140005820
   140004b48:	mov    rbx,QWORD PTR [rsp+0x670]
   140004b50:	add    rsp,0x620
   140004b57:	pop    r15
   140004b59:	pop    r14
   140004b5b:	pop    r13
   140004b5d:	pop    r12
   140004b5f:	pop    rdi
   140004b60:	pop    rsi
   140004b61:	pop    rbp
   140004b62:	ret    
   140004b63:	mov    rcx,rsi
   140004b66:	call   QWORD PTR [rip+0x27f4]        # 0x140007360
   140004b6c:	mov    ecx,0x2
   140004b71:	call   0x140005e38
   140004b76:	mov    r8,QWORD PTR [rip+0x593b]        # 0x14000a4b8
   140004b7d:	mov    rcx,rax
   140004b80:	mov    r9,rsi
   140004b83:	mov    edx,0x4
   140004b88:	call   0x1400052ec
   140004b8d:	mov    ecx,0x2
   140004b92:	call   QWORD PTR [rip+0x2770]        # 0x140007308
   140004b98:	int3   
   140004b99:	mov    rcx,rsi
   140004b9c:	call   QWORD PTR [rip+0x27be]        # 0x140007360
   140004ba2:	mov    ecx,0x2
   140004ba7:	call   0x140005e38
   140004bac:	mov    r8,QWORD PTR [rip+0x5905]        # 0x14000a4b8
   140004bb3:	mov    rcx,rax
   140004bb6:	mov    edx,0x11
   140004bbb:	call   0x1400052ec
   140004bc0:	mov    ecx,0x2
   140004bc5:	call   QWORD PTR [rip+0x273d]        # 0x140007308
   140004bcb:	int3   
   140004bcc:	test   esi,esi
   140004bce:	je     0x140004c39
   140004bd0:	cmp    r13d,r15d
   140004bd3:	jle    0x140004c39
   140004bd5:	mov    rcx,QWORD PTR [rsp+0x50]
   140004bda:	sub    r13d,r15d
   140004bdd:	movsxd rax,r15d
   140004be0:	lea    rdi,[rcx+rax*8]
   140004be4:	jmp    0x140004c1a
   140004be6:	lea    rcx,[rbp+0x400]
   140004bed:	call   0x140002ecc
   140004bf2:	mov    rbx,rax
   140004bf5:	cmp    rax,0xffffffffffffffff
   140004bf9:	je     0x140004c1a
   140004bfb:	mov    rcx,QWORD PTR [rip+0x444e]        # 0x140009050
   140004c02:	lea    rdx,[rbp+0x400]
   140004c09:	mov    r8,rax
   140004c0c:	call   0x140003970
   140004c11:	mov    rcx,rbx
   140004c14:	call   QWORD PTR [rip+0x24b6]        # 0x1400070d0
   140004c1a:	mov    r9d,r13d
   140004c1d:	mov    DWORD PTR [rsp+0x20],esi
   140004c21:	mov    r8,rdi
   140004c24:	lea    rcx,[rbp+0x400]
   140004c2b:	call   0x140001f44
   140004c30:	test   eax,eax
   140004c32:	jns    0x140004be6
   140004c34:	jmp    0x140004afb
   140004c39:	movsxd rsi,r15d
   140004c3c:	cmp    rsi,QWORD PTR [rsp+0x60]
   140004c41:	jge    0x140004afb
   140004c47:	mov    rax,QWORD PTR [rsp+0x50]
   140004c4c:	or     r12,0xffffffffffffffff
   140004c50:	lea    r14,[rax+rsi*8]
   140004c54:	mov    rcx,QWORD PTR [r14]
   140004c57:	lea    rdx,[rsp+0x70]
   140004c5c:	call   QWORD PTR [rip+0x2426]        # 0x140007088
   140004c62:	mov    r13,rax
   140004c65:	cmp    rax,r12
   140004c68:	jne    0x140004c90
   140004c6a:	mov    ecx,0x2
   140004c6f:	call   0x140005e38
   140004c74:	mov    r9,QWORD PTR [r14]
   140004c77:	mov    rcx,rax
   140004c7a:	mov    r8,QWORD PTR [rip+0x5837]        # 0x14000a4b8
   140004c81:	mov    edx,0x4
   140004c86:	call   0x1400052ec
   140004c8b:	jmp    0x140004d91
   140004c90:	xor    edx,edx
   140004c92:	mov    rdi,QWORD PTR [r14]
   140004c95:	mov    r15,r12
   140004c98:	inc    r15
   140004c9b:	cmp    BYTE PTR [rdi+r15*1],dl
   140004c9f:	jne    0x140004c98
   140004ca1:	mov    rbx,r12
   140004ca4:	inc    rbx
   140004ca7:	cmp    BYTE PTR [rdi+rbx*1],dl
   140004caa:	jne    0x140004ca4
   140004cac:	test   ebx,ebx
   140004cae:	js     0x140004cd5
   140004cb0:	movsxd r12,ebx
   140004cb3:	add    r12,rdi
   140004cb6:	cmp    BYTE PTR [r12],0x5c
   140004cbb:	jne    0x140004ccd
   140004cbd:	mov    edx,ebx
   140004cbf:	mov    rcx,rdi
   140004cc2:	call   0x140005438
   140004cc7:	xor    edx,edx
   140004cc9:	test   eax,eax
   140004ccb:	je     0x140004ce3
   140004ccd:	dec    r12
   140004cd0:	sub    ebx,0x1
   140004cd3:	jns    0x140004cb6
   140004cd5:	mov    rcx,rdx
   140004cd8:	test   rcx,rcx
   140004cdb:	je     0x140004ceb
   140004cdd:	sub    ecx,edi
   140004cdf:	inc    ecx
   140004ce1:	jmp    0x140004cfe
   140004ce3:	movsxd rcx,ebx
   140004ce6:	add    rcx,rdi
   140004ce9:	jmp    0x140004cd8
   140004ceb:	cmp    r15,0x2
   140004cef:	jb     0x140004cfc
   140004cf1:	cmp    BYTE PTR [rdi+0x1],0x3a
   140004cf5:	mov    ecx,0x2
   140004cfa:	je     0x140004cfe
   140004cfc:	mov    ecx,edx
   140004cfe:	or     r12,0xffffffffffffffff
   140004d02:	lea    rax,[rbp-0x64]
   140004d06:	mov    r8,r12
   140004d09:	inc    r8
   140004d0c:	cmp    BYTE PTR [rax+r8*1],dl
   140004d10:	jne    0x140004d09
   140004d12:	movsxd rbx,ecx
   140004d15:	lea    rax,[rbx+0x1]
   140004d19:	add    rax,r8
   140004d1c:	cmp    rax,0x104
   140004d22:	ja     0x140004dda
   140004d28:	lea    rcx,[rbp-0x64]
   140004d2c:	inc    r8
   140004d2f:	add    rcx,rbx
   140004d32:	lea    rdx,[rbp-0x64]
   140004d36:	call   QWORD PTR [rip+0x24bc]        # 0x1400071f8
   140004d3c:	mov    r8,rbx
   140004d3f:	lea    rcx,[rbp-0x64]
   140004d43:	mov    rdx,rdi
   140004d46:	call   QWORD PTR [rip+0x24ac]        # 0x1400071f8
   140004d4c:	lea    rcx,[rbp-0x64]
   140004d50:	call   0x140002ecc
   140004d55:	mov    rbx,rax
   140004d58:	cmp    rax,r12
   140004d5b:	je     0x140004d79
   140004d5d:	mov    rcx,QWORD PTR [rip+0x42ec]        # 0x140009050
   140004d64:	lea    rdx,[rbp-0x64]
   140004d68:	mov    r8,rax
   140004d6b:	call   0x140003970
   140004d70:	mov    rcx,rbx
   140004d73:	call   QWORD PTR [rip+0x2357]        # 0x1400070d0
   140004d79:	lea    rdx,[rsp+0x70]
   140004d7e:	mov    rcx,r13
   140004d81:	call   QWORD PTR [rip+0x2321]        # 0x1400070a8
   140004d87:	xor    edx,edx
   140004d89:	test   eax,eax
   140004d8b:	jne    0x140004c92
   140004d91:	inc    rsi
   140004d94:	add    r14,0x8
   140004d98:	cmp    rsi,QWORD PTR [rsp+0x60]
   140004d9d:	jl     0x140004c54
   140004da3:	jmp    0x140004afb
   140004da8:	mov    ecx,0x15
   140004dad:	call   0x140002524
   140004db2:	int3   
   140004db3:	mov    ecx,0x13
   140004db8:	call   0x140002524
   140004dbd:	int3   
   140004dbe:	mov    ecx,0x1
   140004dc3:	call   0x140002524
   140004dc8:	int3   
   140004dc9:	mov    ecx,0xc
   140004dce:	call   0x140002524
   140004dd3:	int3   
   140004dd4:	call   0x140005a18
   140004dd9:	int3   
   140004dda:	mov    ecx,0x2
   140004ddf:	call   0x140002524
   140004de4:	int3   
   140004de5:	int3   
   140004de6:	int3   
   140004de7:	int3   
   140004de8:	int3   
   140004de9:	int3   
   140004dea:	int3   
   140004deb:	int3   
   140004dec:	mov    QWORD PTR [rsp+0x8],rbx
   140004df1:	mov    QWORD PTR [rsp+0x18],rsi
   140004df6:	push   rdi
   140004df7:	sub    rsp,0x20
   140004dfb:	xor    ebx,ebx
   140004dfd:	mov    BYTE PTR [rsp+0x39],0x0
   140004e02:	movsxd rsi,edx
   140004e05:	mov    rdi,rcx
   140004e08:	test   edx,edx
   140004e0a:	jle    0x140004e4b
   140004e0c:	movzx  ecx,BYTE PTR [rbx+rdi*1]
   140004e10:	call   QWORD PTR [rip+0x252a]        # 0x140007340
   140004e16:	test   eax,eax
   140004e18:	je     0x140004e33
   140004e1a:	mov    al,BYTE PTR [rbx+rdi*1]
   140004e1d:	lea    rcx,[rsp+0x38]
   140004e22:	mov    BYTE PTR [rsp+0x38],al
   140004e26:	call   QWORD PTR [rip+0x252c]        # 0x140007358
   140004e2c:	mov    cl,BYTE PTR [rax]
   140004e2e:	mov    BYTE PTR [rbx+rdi*1],cl
   140004e31:	jmp    0x140004e43
   140004e33:	mov    cl,BYTE PTR [rbx+rdi*1]
   140004e36:	call   QWORD PTR [rip+0x22d4]        # 0x140007110
   140004e3c:	test   eax,eax
   140004e3e:	je     0x140004e43
   140004e40:	inc    rbx
   140004e43:	inc    rbx
   140004e46:	cmp    rbx,rsi
   140004e49:	jl     0x140004e0c
   140004e4b:	mov    rbx,QWORD PTR [rsp+0x30]
   140004e50:	mov    rax,rdi
   140004e53:	mov    rsi,QWORD PTR [rsp+0x40]
   140004e58:	add    rsp,0x20
   140004e5c:	pop    rdi
   140004e5d:	ret    
   140004e5e:	int3   
   140004e5f:	int3   
   140004e60:	int3   
   140004e61:	int3   
   140004e62:	int3   
   140004e63:	int3   
   140004e64:	int3   
   140004e65:	int3   
   140004e66:	int3   
   140004e67:	int3   
   140004e68:	int3   
   140004e69:	int3   
   140004e6a:	int3   
   140004e6b:	int3   
   140004e6c:	int3   
   140004e6d:	int3   
   140004e6e:	int3   
   140004e6f:	int3   
   140004e70:	mov    rax,rsp
   140004e73:	mov    QWORD PTR [rax+0x8],rbx
   140004e77:	mov    QWORD PTR [rax+0x10],rbp
   140004e7b:	mov    QWORD PTR [rax+0x18],rsi
   140004e7f:	mov    QWORD PTR [rax+0x20],rdi
   140004e83:	push   r14
   140004e85:	sub    rsp,0x20
   140004e89:	mov    eax,DWORD PTR [rip+0x9641]        # 0x14000e4d0
   140004e8f:	mov    rdi,rdx
   140004e92:	dec    eax
   140004e94:	mov    rbx,rcx
   140004e97:	movsxd r8,eax
   140004e9a:	mov    rbp,rcx
   140004e9d:	sub    rdi,r8
   140004ea0:	cmp    rdi,rcx
   140004ea3:	jbe    0x140004f0c
   140004ea5:	lea    r14,[rip+0x5404]        # 0x14000a2b0
   140004eac:	mov    edx,ebx
   140004eae:	mov    rcx,rbp
   140004eb1:	sub    edx,ebp
   140004eb3:	mov    rsi,r14
   140004eb6:	call   0x140005438
   140004ebb:	movsxd r9,DWORD PTR [rip+0x960e]        # 0x14000e4d0
   140004ec2:	test   eax,eax
   140004ec4:	jne    0x140004eeb
   140004ec6:	mov    edx,r9d
   140004ec9:	test   r9d,r9d
   140004ecc:	jle    0x140004ee7
   140004ece:	mov    r8,rbx
   140004ed1:	sub    r8,r14
   140004ed4:	mov    cl,BYTE PTR [rsi]
   140004ed6:	mov    al,BYTE PTR [r8+rsi*1]
   140004eda:	inc    rsi
   140004edd:	cmp    cl,al
   140004edf:	jne    0x140004ee7
   140004ee1:	dec    edx
   140004ee3:	test   edx,edx
   140004ee5:	jg     0x140004ed4
   140004ee7:	test   edx,edx
   140004ee9:	je     0x140004f29
   140004eeb:	lea    rax,[rbx+0x1]
   140004eef:	cmp    rax,rdi
   140004ef2:	jae    0x140004f0c
   140004ef4:	movzx  ecx,BYTE PTR [r9+rbx*1]
   140004ef9:	lea    rax,[rip+0xd740]        # 0x140012640
   140004f00:	movzx  eax,BYTE PTR [rcx+rax*1]
   140004f04:	add    rbx,rax
   140004f07:	cmp    rbx,rdi
   140004f0a:	jb     0x140004eac
   140004f0c:	xor    eax,eax
   140004f0e:	mov    rbx,QWORD PTR [rsp+0x30]
   140004f13:	mov    rbp,QWORD PTR [rsp+0x38]
   140004f18:	mov    rsi,QWORD PTR [rsp+0x40]
   140004f1d:	mov    rdi,QWORD PTR [rsp+0x48]
   140004f22:	add    rsp,0x20
   140004f26:	pop    r14
   140004f28:	ret    
   140004f29:	mov    rax,rbx
   140004f2c:	jmp    0x140004f0e
   140004f2e:	int3   
   140004f2f:	int3   
   140004f30:	int3   
   140004f31:	int3   
   140004f32:	int3   
   140004f33:	int3   
   140004f34:	cmp    DWORD PTR [rip+0xd6ed],0x0        # 0x140012628
   140004f3b:	lea    rax,[rcx+0x1]
   140004f3f:	jne    0x140004f5d
   140004f41:	cmp    DWORD PTR [rip+0xd7f8],0x0        # 0x140012740
   140004f48:	jne    0x140004f5d
   140004f4a:	dec    rax
   140004f4d:	cmp    rax,QWORD PTR [rip+0xd6dc]        # 0x140012630
   140004f54:	jb     0x140004f65
   140004f56:	cmp    BYTE PTR [rax],0xa
   140004f59:	jne    0x140004f4a
   140004f5b:	jmp    0x140004f65
   140004f5d:	dec    rax
   140004f60:	cmp    BYTE PTR [rax],0xa
   140004f63:	jne    0x140004f5d
   140004f65:	sub    rcx,rax
   140004f68:	mov    eax,ecx
   140004f6a:	ret    
   140004f6b:	int3   
   140004f6c:	int3   
   140004f6d:	int3   
   140004f6e:	int3   
   140004f6f:	int3   
   140004f70:	int3   
   140004f71:	int3   
   140004f72:	int3   
   140004f73:	int3   
   140004f74:	int3   
   140004f75:	int3   
   140004f76:	int3   
   140004f77:	int3   
   140004f78:	int3   
   140004f79:	int3   
   140004f7a:	int3   
   140004f7b:	int3   
   140004f7c:	int3   
   140004f7d:	int3   
   140004f7e:	int3   
   140004f7f:	int3   
   140004f80:	mov    QWORD PTR [rsp+0x8],rbx
   140004f85:	mov    QWORD PTR [rsp+0x10],rsi
   140004f8a:	push   rdi
   140004f8b:	sub    rsp,0x20
   140004f8f:	movsxd rax,DWORD PTR [rip+0x40d2]        # 0x140009068
   140004f96:	lea    rbx,[rip+0x25bb]        # 0x140007558
   140004f9d:	mov    rsi,rcx
   140004fa0:	mov    rdi,rdx
   140004fa3:	mov    rbx,QWORD PTR [rbx+rax*8]
   140004fa7:	mov    rcx,rbx
   140004faa:	call   QWORD PTR [rip+0x2418]        # 0x1400073c8
   140004fb0:	mov    rdx,rdi
   140004fb3:	mov    rcx,rsi
   140004fb6:	mov    rax,rbx
   140004fb9:	mov    rbx,QWORD PTR [rsp+0x30]
   140004fbe:	mov    rsi,QWORD PTR [rsp+0x38]
   140004fc3:	add    rsp,0x20
   140004fc7:	pop    rdi
   140004fc8:	rex.W jmp rax
   140004fcb:	int3   
   140004fcc:	int3   
   140004fcd:	int3   
   140004fce:	int3   
   140004fcf:	int3   
   140004fd0:	int3   
   140004fd1:	int3   
   140004fd2:	int3   
   140004fd3:	int3   
   140004fd4:	int3   
   140004fd5:	int3   
   140004fd6:	int3   
   140004fd7:	int3   
   140004fd8:	int3   
   140004fd9:	int3   
   140004fda:	int3   
   140004fdb:	int3   
   140004fdc:	int3   
   140004fdd:	int3   
   140004fde:	int3   
   140004fdf:	int3   
   140004fe0:	mov    rax,rsp
   140004fe3:	mov    QWORD PTR [rax+0x8],rbx
   140004fe7:	mov    QWORD PTR [rax+0x10],rbp
   140004feb:	mov    QWORD PTR [rax+0x18],rsi
   140004fef:	mov    QWORD PTR [rax+0x20],rdi
   140004ff3:	push   r12
   140004ff5:	push   r14
   140004ff7:	push   r15
   140004ff9:	sub    rsp,0x20
   140004ffd:	mov    rsi,rdx
   140005000:	mov    r14,rdx
   140005003:	mov    edx,DWORD PTR [rip+0x406f]        # 0x140009078
   140005009:	mov    rbx,rcx
   14000500c:	mov    r15,rcx
   14000500f:	lea    eax,[rdx-0x1]
   140005012:	cmp    eax,0xfffffffd
   140005015:	ja     0x140005044
   140005017:	lea    r8d,[rdx-0x1]
   14000501b:	sub    rsi,r8
   14000501e:	cmp    rcx,rsi
   140005021:	jbe    0x140005047
   140005023:	xor    eax,eax
   140005025:	mov    rbx,QWORD PTR [rsp+0x40]
   14000502a:	mov    rbp,QWORD PTR [rsp+0x48]
   14000502f:	mov    rsi,QWORD PTR [rsp+0x50]
   140005034:	mov    rdi,QWORD PTR [rsp+0x58]
   140005039:	add    rsp,0x20
   14000503d:	pop    r15
   14000503f:	pop    r14
   140005041:	pop    r12
   140005043:	ret    
   140005044:	cmp    rcx,rsi
   140005047:	jae    0x140005023
   140005049:	lea    r12,[rip+0xffffffffffffafb0]        # 0x140000000
   140005050:	movzx  eax,BYTE PTR [rbx]
   140005053:	movzx  edi,BYTE PTR [rax+r12*1+0x12500]
   14000505c:	test   edi,edi
   14000505e:	je     0x1400050d1
   140005060:	mov    edx,ebx
   140005062:	mov    rcx,r15
   140005065:	sub    edx,r15d
   140005068:	call   0x140005438
   14000506d:	test   eax,eax
   14000506f:	jne    0x1400050cb
   140005071:	mov    rdi,QWORD PTR [r12+rdi*8+0x9eb0]
   140005079:	test   rdi,rdi
   14000507c:	je     0x1400050aa
   14000507e:	lea    rbp,[rbx+0x1]
   140005082:	jmp    0x1400050bc
   140005084:	mov    r8,rcx
   140005087:	mov    rdx,rdi
   14000508a:	sub    rdx,rcx
   14000508d:	mov    rcx,rbp
   140005090:	call   QWORD PTR [rip+0x22ba]        # 0x140007350
   140005096:	test   eax,eax
   140005098:	jne    0x1400050b2
   14000509a:	movsxd rax,DWORD PTR [rdi+0x10]
   14000509e:	mov    rdi,QWORD PTR [rdi+0x8]
   1400050a2:	add    rbp,rax
   1400050a5:	test   rdi,rdi
   1400050a8:	jne    0x1400050bc
   1400050aa:	mov    rax,rbx
   1400050ad:	jmp    0x140005025
   1400050b2:	js     0x1400050cb
   1400050b4:	mov    rdi,QWORD PTR [rdi]
   1400050b7:	test   rdi,rdi
   1400050ba:	je     0x1400050cb
   1400050bc:	movsxd rcx,DWORD PTR [rdi+0x10]
   1400050c0:	mov    rax,r14
   1400050c3:	sub    rax,rbp
   1400050c6:	cmp    rax,rcx
   1400050c9:	jge    0x140005084
   1400050cb:	mov    edx,DWORD PTR [rip+0x3fa7]        # 0x140009078
   1400050d1:	lea    rax,[rbx+0x1]
   1400050d5:	cmp    rax,rsi
   1400050d8:	jae    0x140005023
   1400050de:	cmp    edx,0xffffffff
   1400050e1:	jne    0x1400050e8
   1400050e3:	mov    rbx,rax
   1400050e6:	jmp    0x1400050fa
   1400050e8:	mov    eax,edx
   1400050ea:	movzx  ecx,BYTE PTR [rax+rbx*1]
   1400050ee:	movzx  eax,BYTE PTR [rcx+r12*1+0x12640]
   1400050f7:	add    rbx,rax
   1400050fa:	cmp    rbx,rsi
   1400050fd:	jae    0x140005023
   140005103:	jmp    0x140005050
   140005108:	int3   
   140005109:	int3   
   14000510a:	int3   
   14000510b:	int3   
   14000510c:	int3   
   14000510d:	int3   
   14000510e:	int3   
   14000510f:	int3   
   140005110:	mov    QWORD PTR [rsp+0x10],rbx
   140005115:	push   rbp
   140005116:	push   rsi
   140005117:	push   rdi
   140005118:	push   r12
   14000511a:	push   r13
   14000511c:	push   r14
   14000511e:	push   r15
   140005120:	sub    rsp,0x20
   140005124:	mov    r9d,DWORD PTR [rip+0x3f4d]        # 0x140009078
   14000512b:	mov    rsi,rdx
   14000512e:	mov    rbx,rcx
   140005131:	mov    QWORD PTR [rsp+0x70],rcx
   140005136:	lea    eax,[r9-0x1]
   14000513a:	cmp    eax,0xfffffffd
   14000513d:	ja     0x140005162
   14000513f:	lea    r8d,[r9-0x1]
   140005143:	sub    rsi,r8
   140005146:	cmp    rcx,rsi
   140005149:	jbe    0x140005165
   14000514b:	xor    eax,eax
   14000514d:	mov    rbx,QWORD PTR [rsp+0x68]
   140005152:	add    rsp,0x20
   140005156:	pop    r15
   140005158:	pop    r14
   14000515a:	pop    r13
   14000515c:	pop    r12
   14000515e:	pop    rdi
   14000515f:	pop    rsi
   140005160:	pop    rbp
   140005161:	ret    
   140005162:	cmp    rcx,rsi
   140005165:	jae    0x14000514b
   140005167:	lea    r14,[rip+0xffffffffffffae92]        # 0x140000000
   14000516e:	movzx  eax,BYTE PTR [rbx]
   140005171:	movzx  edi,BYTE PTR [rax+r14*1+0x12500]
   14000517a:	test   edi,edi
   14000517c:	je     0x14000526e
   140005182:	mov    edx,ebx
   140005184:	sub    edx,ecx
   140005186:	call   0x140005438
   14000518b:	test   eax,eax
   14000518d:	jne    0x140005267
   140005193:	mov    rdi,QWORD PTR [r14+rdi*8+0x9eb0]
   14000519b:	test   rdi,rdi
   14000519e:	je     0x14000523a
   1400051a4:	lea    edx,[rax+0x1]
   1400051a7:	mov    rcx,rbx
   1400051aa:	call   0x140005438
   1400051af:	mov    edx,eax
   1400051b1:	lea    r13,[rbx+0x1]
   1400051b5:	movsxd r12,DWORD PTR [rdi+0x10]
   1400051b9:	mov    rbp,rdi
   1400051bc:	and    DWORD PTR [rsp+0x60],0x0
   1400051c1:	sub    rbp,r12
   1400051c4:	mov    rcx,r12
   1400051c7:	mov    r15,r13
   1400051ca:	mov    r14d,edx
   1400051cd:	test   r12d,r12d
   1400051d0:	je     0x14000521d
   1400051d2:	mov    cl,BYTE PTR [r15]
   1400051d5:	cmp    cl,BYTE PTR [rbp+0x0]
   1400051d8:	jne    0x1400051f6
   1400051da:	test   r14d,r14d
   1400051dd:	jne    0x1400051f1
   1400051df:	call   QWORD PTR [rip+0x1f2b]        # 0x140007110
   1400051e5:	test   eax,eax
   1400051e7:	je     0x1400051f1
   1400051e9:	mov    r14d,0x1
   1400051ef:	jmp    0x140005211
   1400051f1:	xor    r14d,r14d
   1400051f4:	jmp    0x140005211
   1400051f6:	test   r14d,r14d
   1400051f9:	jne    0x140005242
   1400051fb:	lea    r8d,[r14+0x1]
   1400051ff:	mov    rdx,rbp
   140005202:	mov    rcx,r15
   140005205:	call   QWORD PTR [rip+0x2125]        # 0x140007330
   14000520b:	mov    ecx,eax
   14000520d:	test   eax,eax
   14000520f:	jne    0x14000524c
   140005211:	inc    r15
   140005214:	inc    rbp
   140005217:	sub    r12d,0x1
   14000521b:	jne    0x1400051d2
   14000521d:	mov    edx,r14d
   140005220:	xor    ecx,ecx
   140005222:	test   ecx,ecx
   140005224:	jne    0x140005252
   140005226:	movsxd rax,DWORD PTR [rdi+0x10]
   14000522a:	mov    rdi,QWORD PTR [rdi+0x8]
   14000522e:	add    r13,rax
   140005231:	test   rdi,rdi
   140005234:	jne    0x1400051b5
   14000523a:	mov    rax,rbx
   14000523d:	jmp    0x14000514d
   140005242:	movzx  ecx,BYTE PTR [r15]
   140005246:	movzx  eax,BYTE PTR [rbp+0x0]
   14000524a:	sub    ecx,eax
   14000524c:	mov    edx,DWORD PTR [rsp+0x60]
   140005250:	jmp    0x140005222
   140005252:	js     0x140005260
   140005254:	mov    rdi,QWORD PTR [rdi]
   140005257:	test   rdi,rdi
   14000525a:	jne    0x1400051b5
   140005260:	lea    r14,[rip+0xffffffffffffad99]        # 0x140000000
   140005267:	mov    r9d,DWORD PTR [rip+0x3e0a]        # 0x140009078
   14000526e:	lea    rax,[rbx+0x1]
   140005272:	cmp    rax,rsi
   140005275:	jae    0x14000514b
   14000527b:	cmp    r9d,0xffffffff
   14000527f:	jne    0x140005286
   140005281:	mov    rbx,rax
   140005284:	jmp    0x140005299
   140005286:	mov    eax,r9d
   140005289:	movzx  ecx,BYTE PTR [rax+rbx*1]
   14000528d:	movzx  eax,BYTE PTR [rcx+r14*1+0x12640]
   140005296:	add    rbx,rax
   140005299:	cmp    rbx,rsi
   14000529c:	jae    0x14000514b
   1400052a2:	mov    rcx,QWORD PTR [rsp+0x70]
   1400052a7:	jmp    0x14000516e
   1400052ac:	int3   
   1400052ad:	int3   
   1400052ae:	int3   
   1400052af:	int3   
   1400052b0:	int3   
   1400052b1:	int3   
   1400052b2:	int3   
   1400052b3:	int3   
   1400052b4:	mov    r10,rdx
   1400052b7:	mov    rax,rcx
   1400052ba:	test   r8d,r8d
   1400052bd:	je     0x1400052e1
   1400052bf:	dec    r8d
   1400052c2:	mov    r9,r10
   1400052c5:	cmp    BYTE PTR [r10],0x0
   1400052c9:	je     0x1400052dc
   1400052cb:	mov    dl,BYTE PTR [r10]
   1400052ce:	cmp    BYTE PTR [rax],dl
   1400052d0:	je     0x1400052e1
   1400052d2:	inc    r9
   1400052d5:	mov    dl,BYTE PTR [r9]
   1400052d8:	test   dl,dl
   1400052da:	jne    0x1400052ce
   1400052dc:	inc    rax
   1400052df:	jmp    0x1400052ba
   1400052e1:	sub    rax,rcx
   1400052e4:	ret    
   1400052e5:	int3   
   1400052e6:	int3   
   1400052e7:	int3   
   1400052e8:	int3   
   1400052e9:	int3   
   1400052ea:	int3   
   1400052eb:	int3   
   1400052ec:	mov    rax,rsp
   1400052ef:	mov    DWORD PTR [rax+0x10],edx
   1400052f2:	mov    QWORD PTR [rax+0x18],r8
   1400052f6:	mov    QWORD PTR [rax+0x20],r9
   1400052fa:	push   rbp
   1400052fb:	push   rbx
   1400052fc:	lea    rbp,[rax-0x2f78]
   140005303:	mov    eax,0x3068
   140005308:	call   0x140006100
   14000530d:	sub    rsp,rax
   140005310:	mov    rax,QWORD PTR [rip+0x3d01]        # 0x140009018
   140005317:	xor    rax,rsp
   14000531a:	mov    QWORD PTR [rbp+0x2f50],rax
   140005321:	lea    rax,[rbp+0x2f90]
   140005328:	mov    rbx,rcx
   14000532b:	mov    QWORD PTR [rsp+0x48],rax
   140005330:	mov    r8d,edx
   140005333:	lea    rax,[rsp+0x48]
   140005338:	xor    r9d,r9d
   14000533b:	mov    QWORD PTR [rsp+0x30],rax
   140005340:	xor    edx,edx
   140005342:	lea    rax,[rsp+0x50]
   140005347:	mov    DWORD PTR [rsp+0x28],0x1000
   14000534f:	mov    ecx,0x800
   140005354:	mov    QWORD PTR [rsp+0x20],rax
   140005359:	call   QWORD PTR [rip+0x1db9]        # 0x140007118
   14000535f:	mov    DWORD PTR [rsp+0x40],eax
   140005363:	test   eax,eax
   140005365:	je     0x1400053fd
   14000536b:	lea    r9,[rsp+0x50]
   140005370:	mov    DWORD PTR [rsp+0x20],eax
   140005374:	lea    r8,[rsp+0x40]
   140005379:	mov    edx,0x2000
   14000537e:	lea    rcx,[rbp+0xf50]
   140005385:	call   QWORD PTR [rip+0x201d]        # 0x1400073a8
   14000538b:	test   eax,eax
   14000538d:	js     0x1400053ee
   14000538f:	mov    eax,DWORD PTR [rsp+0x40]
   140005393:	lea    r9,[rbp+0xf50]
   14000539a:	lea    r8,[rsp+0x40]
   14000539f:	mov    DWORD PTR [rsp+0x20],eax
   1400053a3:	mov    edx,0xfff
   1400053a8:	lea    rcx,[rsp+0x50]
   1400053ad:	call   QWORD PTR [rip+0x1ffd]        # 0x1400073b0
   1400053b3:	test   eax,eax
   1400053b5:	js     0x1400053df
   1400053b7:	mov    eax,DWORD PTR [rsp+0x40]
   1400053bb:	cmp    rax,0x1000
   1400053c1:	jae    0x14000542b
   1400053c3:	lea    r8,[rsp+0x50]
   1400053c8:	mov    BYTE PTR [rsp+rax*1+0x50],0x0
   1400053cd:	lea    rdx,[rip+0x2214]        # 0x1400075e8
   1400053d4:	mov    rcx,rbx
   1400053d7:	call   QWORD PTR [rip+0x1e9b]        # 0x140007278
   1400053dd:	jmp    0x140005412
   1400053df:	call   QWORD PTR [rip+0x1c83]        # 0x140007068
   1400053e5:	lea    rcx,[rip+0x2204]        # 0x1400075f0
   1400053ec:	jmp    0x14000540a
   1400053ee:	call   QWORD PTR [rip+0x1c74]        # 0x140007068
   1400053f4:	lea    rcx,[rip+0x221d]        # 0x140007618
   1400053fb:	jmp    0x14000540a
   1400053fd:	call   QWORD PTR [rip+0x1c65]        # 0x140007068
   140005403:	lea    rcx,[rip+0x223e]        # 0x140007648
   14000540a:	mov    edx,eax
   14000540c:	call   QWORD PTR [rip+0x1f8e]        # 0x1400073a0
   140005412:	mov    rcx,QWORD PTR [rbp+0x2f50]
   140005419:	xor    rcx,rsp
   14000541c:	call   0x140005820
   140005421:	add    rsp,0x3068
   140005428:	pop    rbx
   140005429:	pop    rbp
   14000542a:	ret    
   14000542b:	call   0x140005a18
   140005430:	int3   
   140005431:	int3   
   140005432:	int3   
   140005433:	int3   
   140005434:	int3   
   140005435:	int3   
   140005436:	int3   
   140005437:	int3   
   140005438:	mov    QWORD PTR [rsp+0x8],rbx
   14000543d:	mov    QWORD PTR [rsp+0x10],rbp
   140005442:	mov    QWORD PTR [rsp+0x18],rsi
   140005447:	push   rdi
   140005448:	sub    rsp,0x20
   14000544c:	movsxd rbx,edx
   14000544f:	mov    rbp,rcx
   140005452:	mov    esi,ebx
   140005454:	mov    rdi,rbx
   140005457:	test   edx,edx
   140005459:	je     0x140005471
   14000545b:	mov    cl,BYTE PTR [rdi+rbp*1-0x1]
   14000545f:	call   QWORD PTR [rip+0x1cab]        # 0x140007110
   140005465:	test   eax,eax
   140005467:	je     0x140005471
   140005469:	dec    esi
   14000546b:	sub    rdi,0x1
   14000546f:	jne    0x14000545b
   140005471:	sub    ebx,esi
   140005473:	and    ebx,0x80000001
   140005479:	jge    0x140005482
   14000547b:	dec    ebx
   14000547d:	or     ebx,0xfffffffe
   140005480:	inc    ebx
   140005482:	mov    rbp,QWORD PTR [rsp+0x38]
   140005487:	mov    eax,ebx
   140005489:	mov    rbx,QWORD PTR [rsp+0x30]
   14000548e:	mov    rsi,QWORD PTR [rsp+0x40]
   140005493:	add    rsp,0x20
   140005497:	pop    rdi
   140005498:	ret    
   140005499:	int3   
   14000549a:	int3   
   14000549b:	int3   
   14000549c:	int3   
   14000549d:	int3   
   14000549e:	int3   
   14000549f:	int3   
   1400054a0:	sub    rsp,0x38
   1400054a4:	and    DWORD PTR [rsp+0x28],0x0
   1400054a9:	mov    r9,QWORD PTR [rip+0x1b98]        # 0x140007048
   1400054b0:	mov    r8,QWORD PTR [rip+0x21c9]        # 0x140007680
   1400054b7:	mov    QWORD PTR [rsp+0x20],rdx
   1400054bc:	mov    rdx,rcx
   1400054bf:	lea    rcx,[rip+0xffffffffffffab3a]        # 0x140000000
   1400054c6:	call   QWORD PTR [rip+0x1b74]        # 0x140007040
   1400054cc:	add    rsp,0x38
   1400054d0:	ret    
   1400054d1:	int3   
   1400054d2:	int3   
   1400054d3:	int3   
   1400054d4:	int3   
   1400054d5:	int3   
   1400054d6:	int3   
   1400054d7:	int3   
   1400054d8:	int3   
   1400054d9:	int3   
   1400054da:	int3   
   1400054db:	int3   
   1400054dc:	int3   
   1400054dd:	int3   
   1400054de:	int3   
   1400054df:	int3   
   1400054e0:	sub    rsp,0x28
   1400054e4:	mov    eax,0x5a4d
   1400054e9:	cmp    WORD PTR [rip+0xffffffffffffab10],ax        # 0x140000000
   1400054f0:	je     0x1400054f6
   1400054f2:	xor    eax,eax
   1400054f4:	jmp    0x140005545
   1400054f6:	movsxd rcx,DWORD PTR [rip+0xffffffffffffab3f]        # 0x14000003c
   1400054fd:	lea    rax,[rip+0xffffffffffffaafc]        # 0x140000000
   140005504:	add    rcx,rax
   140005507:	cmp    DWORD PTR [rcx],0x4550
   14000550d:	jne    0x1400054f2
   14000550f:	movzx  eax,WORD PTR [rcx+0x18]
   140005513:	cmp    eax,0x10b
   140005518:	je     0x140005534
   14000551a:	cmp    eax,0x20b
   14000551f:	jne    0x1400054f2
   140005521:	xor    eax,eax
   140005523:	cmp    DWORD PTR [rcx+0x84],0xe
   14000552a:	jbe    0x140005545
   14000552c:	cmp    DWORD PTR [rcx+0xf8],eax
   140005532:	jmp    0x140005542
   140005534:	xor    eax,eax
   140005536:	cmp    DWORD PTR [rcx+0x74],0xe
   14000553a:	jbe    0x140005545
   14000553c:	cmp    DWORD PTR [rcx+0xe8],eax
   140005542:	setne  al
   140005545:	mov    ecx,0x1
   14000554a:	mov    DWORD PTR [rip+0x3b90],eax        # 0x1400090e0
   140005550:	call   0x140005bf8
   140005555:	mov    ecx,eax
   140005557:	call   QWORD PTR [rip+0x1cb3]        # 0x140007210
   14000555d:	mov    rcx,QWORD PTR [rip+0x1d24]        # 0x140007288
   140005564:	or     rax,0xffffffffffffffff
   140005568:	mov    QWORD PTR [rip+0xd1f1],rax        # 0x140012760
   14000556f:	mov    QWORD PTR [rip+0xd1f2],rax        # 0x140012768
   140005576:	mov    eax,DWORD PTR [rip+0x3a84]        # 0x140009000
   14000557c:	mov    DWORD PTR [rcx],eax
   14000557e:	mov    rcx,QWORD PTR [rip+0x1d2b]        # 0x1400072b0
   140005585:	mov    eax,DWORD PTR [rip+0x40d5]        # 0x140009660
   14000558b:	mov    DWORD PTR [rcx],eax
   14000558d:	call   0x140005e10
   140005592:	cmp    DWORD PTR [rip+0x3a77],0x0        # 0x140009010
   140005599:	jne    0x1400055a8
   14000559b:	lea    rcx,[rip+0x86e]        # 0x140005e10
   1400055a2:	call   QWORD PTR [rip+0x1c90]        # 0x140007238
   1400055a8:	xor    eax,eax
   1400055aa:	add    rsp,0x28
   1400055ae:	ret    
   1400055af:	int3   
   1400055b0:	int3   
   1400055b1:	int3   
   1400055b2:	int3   
   1400055b3:	int3   
   1400055b4:	int3   
   1400055b5:	int3   
   1400055b6:	int3   
   1400055b7:	int3   
   1400055b8:	int3   
   1400055b9:	int3   
   1400055ba:	int3   
   1400055bb:	int3   
   1400055bc:	int3   
   1400055bd:	int3   
   1400055be:	int3   
   1400055bf:	int3   
   1400055c0:	sub    rsp,0x38
   1400055c4:	mov    eax,DWORD PTR [rip+0x409e]        # 0x140009668
   1400055ca:	lea    r8,[rip+0x3b07]        # 0x1400090d8
   1400055d1:	mov    r9d,DWORD PTR [rip+0x408c]        # 0x140009664
   1400055d8:	lea    rdx,[rip+0x3af1]        # 0x1400090d0
   1400055df:	mov    DWORD PTR [rip+0x3aff],eax        # 0x1400090e4
   1400055e5:	lea    rcx,[rip+0x3adc]        # 0x1400090c8
   1400055ec:	lea    rax,[rip+0x3af1]        # 0x1400090e4
   1400055f3:	mov    QWORD PTR [rsp+0x20],rax
   1400055f8:	call   QWORD PTR [rip+0x1c1a]        # 0x140007218
   1400055fe:	mov    DWORD PTR [rip+0x3ac8],eax        # 0x1400090cc
   140005604:	add    rsp,0x38
   140005608:	ret    
   140005609:	int3   
   14000560a:	int3   
   14000560b:	int3   
   14000560c:	int3   
   14000560d:	int3   
   14000560e:	int3   
   14000560f:	int3   
   140005610:	mov    rax,rsp
   140005613:	mov    QWORD PTR [rax+0x8],rbx
   140005617:	mov    QWORD PTR [rax+0x10],rsi
   14000561b:	mov    QWORD PTR [rax+0x18],rdi
   14000561f:	mov    QWORD PTR [rax+0x20],r12
   140005623:	push   r14
   140005625:	sub    rsp,0x30
   140005629:	mov    rax,QWORD PTR gs:0x30
   140005632:	mov    rbx,QWORD PTR [rax+0x8]
   140005636:	xor    r14d,r14d
   140005639:	xor    eax,eax
   14000563b:	lock cmpxchg QWORD PTR [rip+0xd12c],rbx        # 0x140012770
   140005644:	je     0x140005662
   140005646:	cmp    rax,rbx
   140005649:	jne    0x140005655
   14000564b:	mov    ebx,0x1
   140005650:	mov    r14d,ebx
   140005653:	jmp    0x140005667
   140005655:	mov    ecx,0x3e8
   14000565a:	call   QWORD PTR [rip+0x1b68]        # 0x1400071c8
   140005660:	jmp    0x140005639
   140005662:	mov    ebx,0x1
   140005667:	mov    eax,DWORD PTR [rip+0xd10b]        # 0x140012778
   14000566d:	cmp    eax,ebx
   14000566f:	jne    0x14000567d
   140005671:	mov    ecx,0x1f
   140005676:	call   0x140005c44
   14000567b:	jmp    0x1400056e6
   14000567d:	mov    eax,DWORD PTR [rip+0xd0f5]        # 0x140012778
   140005683:	test   eax,eax
   140005685:	jne    0x1400056e0
   140005687:	mov    DWORD PTR [rip+0xd0eb],ebx        # 0x140012778
   14000568d:	lea    r12,[rip+0x1d74]        # 0x140007408
   140005694:	lea    rdi,[rip+0x1d55]        # 0x1400073f0
   14000569b:	mov    QWORD PTR [rsp+0x28],rdi
   1400056a0:	mov    DWORD PTR [rsp+0x20],eax
   1400056a4:	cmp    rdi,r12
   1400056a7:	jae    0x1400056d2
   1400056a9:	test   eax,eax
   1400056ab:	jne    0x1400056d6
   1400056ad:	mov    rsi,QWORD PTR [rdi]
   1400056b0:	test   rsi,rsi
   1400056b3:	je     0x1400056c7
   1400056b5:	mov    rcx,rsi
   1400056b8:	mov    rax,QWORD PTR [rip+0x1d09]        # 0x1400073c8
   1400056bf:	call   rax
   1400056c1:	call   rsi
   1400056c3:	mov    DWORD PTR [rsp+0x20],eax
   1400056c7:	add    rdi,0x8
   1400056cb:	mov    QWORD PTR [rsp+0x28],rdi
   1400056d0:	jmp    0x1400056a4
   1400056d2:	test   eax,eax
   1400056d4:	je     0x1400056e6
   1400056d6:	mov    eax,0xff
   1400056db:	jmp    0x1400057c7
   1400056e0:	mov    DWORD PTR [rip+0x39de],ebx        # 0x1400090c4
   1400056e6:	mov    eax,DWORD PTR [rip+0xd08c]        # 0x140012778
   1400056ec:	cmp    eax,ebx
   1400056ee:	jne    0x14000570d
   1400056f0:	lea    rdx,[rip+0x1cf1]        # 0x1400073e8
   1400056f7:	lea    rcx,[rip+0x1cda]        # 0x1400073d8
   1400056fe:	call   0x140005e1a
   140005703:	mov    DWORD PTR [rip+0xd06b],0x2        # 0x140012778
   14000570d:	test   r14d,r14d
   140005710:	jne    0x14000571b
   140005712:	xor    eax,eax
   140005714:	xchg   QWORD PTR [rip+0xd055],rax        # 0x140012770
   14000571b:	cmp    QWORD PTR [rip+0xd05d],0x0        # 0x140012780
   140005723:	je     0x140005753
   140005725:	lea    rcx,[rip+0xd054]        # 0x140012780
   14000572c:	call   0x140005ca0
   140005731:	test   eax,eax
   140005733:	je     0x140005753
   140005735:	mov    rbx,QWORD PTR [rip+0xd044]        # 0x140012780
   14000573c:	mov    rcx,rbx
   14000573f:	mov    rax,QWORD PTR [rip+0x1c82]        # 0x1400073c8
   140005746:	call   rax
   140005748:	xor    r8d,r8d
   14000574b:	lea    edx,[r8+0x2]
   14000574f:	xor    ecx,ecx
   140005751:	call   rbx
   140005753:	mov    r8,QWORD PTR [rip+0x397e]        # 0x1400090d8
   14000575a:	mov    rdx,QWORD PTR [rip+0x396f]        # 0x1400090d0
   140005761:	mov    ecx,DWORD PTR [rip+0x3961]        # 0x1400090c8
   140005767:	call   0x140003e48
   14000576c:	mov    DWORD PTR [rip+0x394e],eax        # 0x1400090c0
   140005772:	cmp    DWORD PTR [rip+0x3967],0x0        # 0x1400090e0
   140005779:	jne    0x140005783
   14000577b:	mov    ecx,eax
   14000577d:	call   QWORD PTR [rip+0x1b85]        # 0x140007308
   140005783:	cmp    DWORD PTR [rip+0x393a],0x0        # 0x1400090c4
   14000578a:	jne    0x140005798
   14000578c:	call   QWORD PTR [rip+0x1a6e]        # 0x140007200
   140005792:	mov    eax,DWORD PTR [rip+0x3928]        # 0x1400090c0
   140005798:	jmp    0x1400057c7
   14000579a:	mov    DWORD PTR [rip+0x3920],eax        # 0x1400090c0
   1400057a0:	cmp    DWORD PTR [rip+0x3939],0x0        # 0x1400090e0
   1400057a7:	jne    0x1400057b2
   1400057a9:	mov    ecx,eax
   1400057ab:	call   QWORD PTR [rip+0x1a57]        # 0x140007208
   1400057b1:	int3   
   1400057b2:	cmp    DWORD PTR [rip+0x390b],0x0        # 0x1400090c4
   1400057b9:	jne    0x1400057c7
   1400057bb:	call   QWORD PTR [rip+0x1a3f]        # 0x140007200
   1400057c1:	mov    eax,DWORD PTR [rip+0x38f9]        # 0x1400090c0
   1400057c7:	mov    rbx,QWORD PTR [rsp+0x40]
   1400057cc:	mov    rsi,QWORD PTR [rsp+0x48]
   1400057d1:	mov    rdi,QWORD PTR [rsp+0x50]
   1400057d6:	mov    r12,QWORD PTR [rsp+0x58]
   1400057db:	add    rsp,0x30
   1400057df:	pop    r14
   1400057e1:	ret    
   1400057e2:	int3   
   1400057e3:	int3   
   1400057e4:	int3   
   1400057e5:	int3   
   1400057e6:	int3   
   1400057e7:	int3   
   1400057e8:	int3   
   1400057e9:	int3   
   1400057ea:	int3   
   1400057eb:	int3   
   1400057ec:	int3   
   1400057ed:	int3   
   1400057ee:	int3   
   1400057ef:	int3   
   1400057f0:	sub    rsp,0x28
   1400057f4:	call   0x140005d34
   1400057f9:	add    rsp,0x28
   1400057fd:	jmp    0x140005610
   140005802:	int3   
   140005803:	int3   
   140005804:	int3   
   140005805:	int3   
   140005806:	int3   
   140005807:	int3   
   140005808:	int3   
   140005809:	int3   
   14000580a:	int3   
   14000580b:	int3   
   14000580c:	int3   
   14000580d:	int3   
   14000580e:	int3   
   14000580f:	int3   
   140005810:	int3   
   140005811:	int3   
   140005812:	int3   
   140005813:	int3   
   140005814:	int3   
   140005815:	int3   
   140005816:	data16 nop WORD PTR [rax+rax*1+0x0]
   140005820:	cmp    rcx,QWORD PTR [rip+0x37f1]        # 0x140009018
   140005827:	jne    0x140005839
   140005829:	rol    rcx,0x10
   14000582d:	test   cx,0xffff
   140005832:	jne    0x140005835
   140005834:	ret    
   140005835:	ror    rcx,0x10
   140005839:	jmp    0x1400058a0
   14000583e:	int3   
   14000583f:	int3   
   140005840:	int3   
   140005841:	int3   
   140005842:	int3   
   140005843:	int3   
   140005844:	int3   
   140005845:	int3   
   140005846:	int3   
   140005847:	int3   
   140005848:	int3   
   140005849:	int3   
   14000584a:	int3   
   14000584b:	int3   
   14000584c:	int3   
   14000584d:	int3   
   14000584e:	int3   
   14000584f:	int3   
   140005850:	jmp    QWORD PTR [rip+0x1afa]        # 0x140007350
   140005856:	int3   
   140005857:	int3   
   140005858:	int3   
   140005859:	int3   
   14000585a:	int3   
   14000585b:	int3   
   14000585c:	rex push rbx
   14000585e:	sub    rsp,0x20
   140005862:	mov    rbx,rcx
   140005865:	xor    ecx,ecx
   140005867:	call   QWORD PTR [rip+0x17f3]        # 0x140007060
   14000586d:	mov    rcx,rbx
   140005870:	call   QWORD PTR [rip+0x17e2]        # 0x140007058
   140005876:	call   QWORD PTR [rip+0x190c]        # 0x140007188
   14000587c:	mov    rcx,rax
   14000587f:	mov    edx,0xc0000409
   140005884:	add    rsp,0x20
   140005888:	pop    rbx
   140005889:	rex.W jmp QWORD PTR [rip+0x18f0]        # 0x140007180
   140005890:	int3   
   140005891:	int3   
   140005892:	int3   
   140005893:	int3   
   140005894:	int3   
   140005895:	int3   
   140005896:	int3   
   140005897:	int3   
   140005898:	int3   
   140005899:	int3   
   14000589a:	int3   
   14000589b:	int3   
   14000589c:	int3   
   14000589d:	int3   
   14000589e:	int3   
   14000589f:	int3   
   1400058a0:	mov    QWORD PTR [rsp+0x8],rcx
   1400058a5:	sub    rsp,0x88
   1400058ac:	lea    rcx,[rip+0x38dd]        # 0x140009190
   1400058b3:	call   QWORD PTR [rip+0x1adf]        # 0x140007398
   1400058b9:	mov    rax,QWORD PTR [rip+0x39c8]        # 0x140009288
   1400058c0:	mov    QWORD PTR [rsp+0x48],rax
   1400058c5:	xor    r8d,r8d
   1400058c8:	lea    rdx,[rsp+0x50]
   1400058cd:	mov    rcx,QWORD PTR [rsp+0x48]
   1400058d2:	call   QWORD PTR [rip+0x1ab8]        # 0x140007390
   1400058d8:	mov    QWORD PTR [rsp+0x40],rax
   1400058dd:	cmp    QWORD PTR [rsp+0x40],0x0
   1400058e3:	je     0x140005927
   1400058e5:	mov    QWORD PTR [rsp+0x38],0x0
   1400058ee:	lea    rax,[rsp+0x58]
   1400058f3:	mov    QWORD PTR [rsp+0x30],rax
   1400058f8:	lea    rax,[rsp+0x60]
   1400058fd:	mov    QWORD PTR [rsp+0x28],rax
   140005902:	lea    rax,[rip+0x3887]        # 0x140009190
   140005909:	mov    QWORD PTR [rsp+0x20],rax
   14000590e:	mov    r9,QWORD PTR [rsp+0x40]
   140005913:	mov    r8,QWORD PTR [rsp+0x48]
   140005918:	mov    rdx,QWORD PTR [rsp+0x50]
   14000591d:	xor    ecx,ecx
   14000591f:	call   QWORD PTR [rip+0x1a93]        # 0x1400073b8
   140005925:	jmp    0x14000594a
   140005927:	mov    rax,QWORD PTR [rip+0x38fa]        # 0x140009228
   14000592e:	mov    rax,QWORD PTR [rax]
   140005931:	mov    QWORD PTR [rip+0x3950],rax        # 0x140009288
   140005938:	mov    rax,QWORD PTR [rip+0x38e9]        # 0x140009228
   14000593f:	add    rax,0x8
   140005943:	mov    QWORD PTR [rip+0x38de],rax        # 0x140009228
   14000594a:	mov    rax,QWORD PTR [rip+0x3937]        # 0x140009288
   140005951:	mov    QWORD PTR [rip+0x37a8],rax        # 0x140009100
   140005958:	mov    rax,QWORD PTR [rsp+0x90]
   140005960:	mov    QWORD PTR [rip+0x38a9],rax        # 0x140009210
   140005967:	mov    DWORD PTR [rip+0x377f],0xc0000409        # 0x1400090f0
   140005971:	mov    DWORD PTR [rip+0x3779],0x1        # 0x1400090f4
   14000597b:	mov    DWORD PTR [rip+0x3783],0x3        # 0x140009108
   140005985:	mov    eax,0x8
   14000598a:	imul   rax,rax,0x0
   14000598e:	lea    rcx,[rip+0x377b]        # 0x140009110
   140005995:	mov    QWORD PTR [rcx+rax*1],0x2
   14000599d:	mov    eax,0x8
   1400059a2:	imul   rax,rax,0x1
   1400059a6:	lea    rcx,[rip+0x3763]        # 0x140009110
   1400059ad:	mov    rdx,QWORD PTR [rip+0x3664]        # 0x140009018
   1400059b4:	mov    QWORD PTR [rcx+rax*1],rdx
   1400059b8:	mov    eax,0x8
   1400059bd:	imul   rax,rax,0x2
   1400059c1:	lea    rcx,[rip+0x3748]        # 0x140009110
   1400059c8:	mov    rdx,QWORD PTR [rip+0x3651]        # 0x140009020
   1400059cf:	mov    QWORD PTR [rcx+rax*1],rdx
   1400059d3:	mov    eax,0x8
   1400059d8:	imul   rax,rax,0x0
   1400059dc:	mov    rcx,QWORD PTR [rip+0x3635]        # 0x140009018
   1400059e3:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   1400059e8:	mov    eax,0x8
   1400059ed:	imul   rax,rax,0x1
   1400059f1:	mov    rcx,QWORD PTR [rip+0x3628]        # 0x140009020
   1400059f8:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   1400059fd:	lea    rcx,[rip+0x1a8c]        # 0x140007490
   140005a04:	call   0x14000585c
   140005a09:	add    rsp,0x88
   140005a10:	ret    
   140005a11:	int3   
   140005a12:	int3   
   140005a13:	int3   
   140005a14:	int3   
   140005a15:	int3   
   140005a16:	int3   
   140005a17:	int3   
   140005a18:	sub    rsp,0x78
   140005a1c:	lea    rcx,[rip+0x376d]        # 0x140009190
   140005a23:	call   QWORD PTR [rip+0x196f]        # 0x140007398
   140005a29:	mov    rax,QWORD PTR [rip+0x3858]        # 0x140009288
   140005a30:	mov    QWORD PTR [rsp+0x48],rax
   140005a35:	xor    r8d,r8d
   140005a38:	lea    rdx,[rsp+0x50]
   140005a3d:	mov    rcx,QWORD PTR [rsp+0x48]
   140005a42:	call   QWORD PTR [rip+0x1948]        # 0x140007390
   140005a48:	mov    QWORD PTR [rsp+0x40],rax
   140005a4d:	cmp    QWORD PTR [rsp+0x40],0x0
   140005a53:	je     0x140005a97
   140005a55:	mov    QWORD PTR [rsp+0x38],0x0
   140005a5e:	lea    rax,[rsp+0x58]
   140005a63:	mov    QWORD PTR [rsp+0x30],rax
   140005a68:	lea    rax,[rsp+0x60]
   140005a6d:	mov    QWORD PTR [rsp+0x28],rax
   140005a72:	lea    rax,[rip+0x3717]        # 0x140009190
   140005a79:	mov    QWORD PTR [rsp+0x20],rax
   140005a7e:	mov    r9,QWORD PTR [rsp+0x40]
   140005a83:	mov    r8,QWORD PTR [rsp+0x48]
   140005a88:	mov    rdx,QWORD PTR [rsp+0x50]
   140005a8d:	xor    ecx,ecx
   140005a8f:	call   QWORD PTR [rip+0x1923]        # 0x1400073b8
   140005a95:	jmp    0x140005aba
   140005a97:	mov    rax,QWORD PTR [rip+0x378a]        # 0x140009228
   140005a9e:	mov    rax,QWORD PTR [rax]
   140005aa1:	mov    QWORD PTR [rip+0x37e0],rax        # 0x140009288
   140005aa8:	mov    rax,QWORD PTR [rip+0x3779]        # 0x140009228
   140005aaf:	add    rax,0x8
   140005ab3:	mov    QWORD PTR [rip+0x376e],rax        # 0x140009228
   140005aba:	mov    rax,QWORD PTR [rip+0x37c7]        # 0x140009288
   140005ac1:	mov    QWORD PTR [rip+0x3638],rax        # 0x140009100
   140005ac8:	mov    DWORD PTR [rip+0x361e],0xc0000409        # 0x1400090f0
   140005ad2:	mov    DWORD PTR [rip+0x3618],0x1        # 0x1400090f4
   140005adc:	mov    DWORD PTR [rip+0x3622],0x1        # 0x140009108
   140005ae6:	mov    eax,0x8
   140005aeb:	imul   rax,rax,0x0
   140005aef:	lea    rcx,[rip+0x361a]        # 0x140009110
   140005af6:	mov    QWORD PTR [rcx+rax*1],0x8
   140005afe:	lea    rcx,[rip+0x198b]        # 0x140007490
   140005b05:	call   0x14000585c
   140005b0a:	add    rsp,0x78
   140005b0e:	ret    
   140005b0f:	int3   
   140005b10:	int3   
   140005b11:	int3   
   140005b12:	int3   
   140005b13:	int3   
   140005b14:	int3   
   140005b15:	int3   
   140005b16:	int3   
   140005b17:	int3   
   140005b18:	int3   
   140005b19:	int3   
   140005b1a:	int3   
   140005b1b:	int3   
   140005b1c:	int3   
   140005b1d:	int3   
   140005b1e:	int3   
   140005b1f:	int3   
   140005b20:	jmp    QWORD PTR [rip+0x180a]        # 0x140007330
   140005b26:	int3   
   140005b27:	int3   
   140005b28:	int3   
   140005b29:	int3   
   140005b2a:	int3   
   140005b2b:	int3   
   140005b2c:	int3   
   140005b2d:	int3   
   140005b2e:	int3   
   140005b2f:	int3   
   140005b30:	sub    rsp,0x28
   140005b34:	mov    rax,QWORD PTR [rcx]
   140005b37:	cmp    DWORD PTR [rax],0xe06d7363
   140005b3d:	jne    0x140005b62
   140005b3f:	cmp    DWORD PTR [rax+0x18],0x4
   140005b43:	jne    0x140005b62
   140005b45:	mov    ecx,DWORD PTR [rax+0x20]
   140005b48:	lea    eax,[rcx-0x19930520]
   140005b4e:	cmp    eax,0x2
   140005b51:	jbe    0x140005b5b
   140005b53:	cmp    ecx,0x1994000
   140005b59:	jne    0x140005b62
   140005b5b:	call   QWORD PTR [rip+0x178f]        # 0x1400072f0
   140005b61:	int3   
   140005b62:	xor    eax,eax
   140005b64:	add    rsp,0x28
   140005b68:	ret    
   140005b69:	int3   
   140005b6a:	int3   
   140005b6b:	int3   
   140005b6c:	int3   
   140005b6d:	int3   
   140005b6e:	int3   
   140005b6f:	int3   
   140005b70:	sub    rsp,0x28
   140005b74:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x140005b30
   140005b7b:	call   QWORD PTR [rip+0x14df]        # 0x140007060
   140005b81:	xor    eax,eax
   140005b83:	add    rsp,0x28
   140005b87:	ret    
   140005b88:	int3   
   140005b89:	int3   
   140005b8a:	int3   
   140005b8b:	int3   
   140005b8c:	int3   
   140005b8d:	int3   
   140005b8e:	jmp    QWORD PTR [rip+0x1694]        # 0x140007228
   140005b94:	int3   
   140005b95:	int3   
   140005b96:	int3   
   140005b97:	int3   
   140005b98:	int3   
   140005b99:	int3   
   140005b9a:	int3   
   140005b9b:	int3   
   140005b9c:	sub    rsp,0x18
   140005ba0:	xor    edx,edx
   140005ba2:	lea    rax,[rcx-0x1]
   140005ba6:	cmp    rax,0xfffffffffffffffd
   140005baa:	ja     0x140005be8
   140005bac:	mov    eax,0x5a4d
   140005bb1:	cmp    WORD PTR [rcx],ax
   140005bb4:	jne    0x140005be0
   140005bb6:	cmp    DWORD PTR [rcx+0x3c],edx
   140005bb9:	jl     0x140005be0
   140005bbb:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   140005bc2:	jae    0x140005be0
   140005bc4:	movsxd rax,DWORD PTR [rcx+0x3c]
   140005bc8:	add    rax,rcx
   140005bcb:	mov    QWORD PTR [rsp],rax
   140005bcf:	cmp    DWORD PTR [rax],0x4550
   140005bd5:	cmovne rax,rdx
   140005bd9:	mov    rdx,rax
   140005bdc:	mov    QWORD PTR [rsp],rax
   140005be0:	jmp    0x140005be8
   140005be2:	xor    edx,edx
   140005be4:	mov    QWORD PTR [rsp],rdx
   140005be8:	mov    rax,rdx
   140005beb:	add    rsp,0x18
   140005bef:	ret    
   140005bf0:	int3   
   140005bf1:	int3   
   140005bf2:	int3   
   140005bf3:	int3   
   140005bf4:	int3   
   140005bf5:	int3   
   140005bf6:	int3   
   140005bf7:	int3   
   140005bf8:	rex push rbx
   140005bfa:	sub    rsp,0x20
   140005bfe:	mov    ebx,ecx
   140005c00:	xor    ecx,ecx
   140005c02:	call   QWORD PTR [rip+0x14f8]        # 0x140007100
   140005c08:	test   rax,rax
   140005c0b:	je     0x140005c35
   140005c0d:	mov    rcx,rax
   140005c10:	call   0x140005b9c
   140005c15:	test   rax,rax
   140005c18:	je     0x140005c35
   140005c1a:	mov    ecx,0x2
   140005c1f:	cmp    WORD PTR [rax+0x5c],cx
   140005c23:	jne    0x140005c29
   140005c25:	mov    eax,ecx
   140005c27:	jmp    0x140005c37
   140005c29:	cmp    WORD PTR [rax+0x5c],0x3
   140005c2e:	mov    eax,0x1
   140005c33:	je     0x140005c37
   140005c35:	mov    eax,ebx
   140005c37:	add    rsp,0x20
   140005c3b:	pop    rbx
   140005c3c:	ret    
   140005c3d:	int3   
   140005c3e:	int3   
   140005c3f:	int3   
   140005c40:	int3   
   140005c41:	int3   
   140005c42:	int3   
   140005c43:	int3   
   140005c44:	jmp    QWORD PTR [rip+0x15d6]        # 0x140007220
   140005c4a:	int3   
   140005c4b:	int3   
   140005c4c:	int3   
   140005c4d:	int3   
   140005c4e:	int3   
   140005c4f:	int3   
   140005c50:	movsxd r8,DWORD PTR [rcx+0x3c]
   140005c54:	xor    r9d,r9d
   140005c57:	add    r8,rcx
   140005c5a:	mov    r10,rdx
   140005c5d:	movzx  eax,WORD PTR [r8+0x14]
   140005c62:	movzx  r11d,WORD PTR [r8+0x6]
   140005c67:	add    rax,0x18
   140005c6b:	add    rax,r8
   140005c6e:	test   r11d,r11d
   140005c71:	je     0x140005c91
   140005c73:	mov    edx,DWORD PTR [rax+0xc]
   140005c76:	cmp    r10,rdx
   140005c79:	jb     0x140005c85
   140005c7b:	mov    ecx,DWORD PTR [rax+0x8]
   140005c7e:	add    ecx,edx
   140005c80:	cmp    r10,rcx
   140005c83:	jb     0x140005c93
   140005c85:	inc    r9d
   140005c88:	add    rax,0x28
   140005c8c:	cmp    r9d,r11d
   140005c8f:	jb     0x140005c73
   140005c91:	xor    eax,eax
   140005c93:	ret    
   140005c94:	int3   
   140005c95:	int3   
   140005c96:	int3   
   140005c97:	int3   
   140005c98:	int3   
   140005c99:	int3   
   140005c9a:	int3   
   140005c9b:	int3   
   140005c9c:	int3   
   140005c9d:	int3   
   140005c9e:	int3   
   140005c9f:	int3   
   140005ca0:	mov    QWORD PTR [rsp+0x8],rbx
   140005ca5:	push   rdi
   140005ca6:	sub    rsp,0x20
   140005caa:	mov    rbx,rcx
   140005cad:	lea    rdi,[rip+0xffffffffffffa34c]        # 0x140000000
   140005cb4:	mov    rcx,rdi
   140005cb7:	call   0x140005d00
   140005cbc:	test   eax,eax
   140005cbe:	je     0x140005ce2
   140005cc0:	sub    rbx,rdi
   140005cc3:	mov    rdx,rbx
   140005cc6:	mov    rcx,rdi
   140005cc9:	call   0x140005c50
   140005cce:	test   rax,rax
   140005cd1:	je     0x140005ce2
   140005cd3:	mov    eax,DWORD PTR [rax+0x24]
   140005cd6:	shr    eax,0x1f
   140005cd9:	not    eax
   140005cdb:	and    eax,0x1
   140005cde:	jmp    0x140005ce2
   140005ce0:	xor    eax,eax
   140005ce2:	mov    rbx,QWORD PTR [rsp+0x30]
   140005ce7:	add    rsp,0x20
   140005ceb:	pop    rdi
   140005cec:	ret    
   140005ced:	int3   
   140005cee:	int3   
   140005cef:	int3   
   140005cf0:	int3   
   140005cf1:	int3   
   140005cf2:	int3   
   140005cf3:	int3   
   140005cf4:	int3   
   140005cf5:	int3   
   140005cf6:	int3   
   140005cf7:	int3   
   140005cf8:	int3   
   140005cf9:	int3   
   140005cfa:	int3   
   140005cfb:	int3   
   140005cfc:	int3   
   140005cfd:	int3   
   140005cfe:	int3   
   140005cff:	int3   
   140005d00:	mov    rax,rcx
   140005d03:	mov    ecx,0x5a4d
   140005d08:	cmp    WORD PTR [rax],cx
   140005d0b:	je     0x140005d10
   140005d0d:	xor    eax,eax
   140005d0f:	ret    
   140005d10:	movsxd rcx,DWORD PTR [rax+0x3c]
   140005d14:	add    rcx,rax
   140005d17:	xor    eax,eax
   140005d19:	cmp    DWORD PTR [rcx],0x4550
   140005d1f:	jne    0x140005d2d
   140005d21:	mov    edx,0x20b
   140005d26:	cmp    WORD PTR [rcx+0x18],dx
   140005d2a:	sete   al
   140005d2d:	ret    
   140005d2e:	int3   
   140005d2f:	int3   
   140005d30:	int3   
   140005d31:	int3   
   140005d32:	int3   
   140005d33:	int3   
   140005d34:	mov    QWORD PTR [rsp+0x20],rbx
   140005d39:	push   rbp
   140005d3a:	mov    rbp,rsp
   140005d3d:	sub    rsp,0x20
   140005d41:	and    QWORD PTR [rbp+0x18],0x0
   140005d46:	movabs rbx,0x2b992ddfa232
   140005d50:	mov    rax,QWORD PTR [rip+0x32c1]        # 0x140009018
   140005d57:	cmp    rax,rbx
   140005d5a:	jne    0x140005def
   140005d60:	lea    rcx,[rbp+0x18]
   140005d64:	call   QWORD PTR [rip+0x1476]        # 0x1400071e0
   140005d6a:	mov    rax,QWORD PTR [rbp+0x18]
   140005d6e:	mov    QWORD PTR [rbp+0x10],rax
   140005d72:	call   QWORD PTR [rip+0x13f8]        # 0x140007170
   140005d78:	mov    eax,eax
   140005d7a:	xor    QWORD PTR [rbp+0x10],rax
   140005d7e:	call   QWORD PTR [rip+0x13f4]        # 0x140007178
   140005d84:	mov    eax,eax
   140005d86:	xor    QWORD PTR [rbp+0x10],rax
   140005d8a:	call   QWORD PTR [rip+0x1458]        # 0x1400071e8
   140005d90:	mov    eax,eax
   140005d92:	shl    rax,0x18
   140005d96:	xor    QWORD PTR [rbp+0x10],rax
   140005d9a:	call   QWORD PTR [rip+0x1448]        # 0x1400071e8
   140005da0:	mov    eax,eax
   140005da2:	lea    rcx,[rbp+0x10]
   140005da6:	xor    rax,QWORD PTR [rbp+0x10]
   140005daa:	xor    rax,rcx
   140005dad:	lea    rcx,[rbp+0x20]
   140005db1:	mov    QWORD PTR [rbp+0x10],rax
   140005db5:	call   QWORD PTR [rip+0x13dd]        # 0x140007198
   140005dbb:	mov    eax,DWORD PTR [rbp+0x20]
   140005dbe:	movabs rcx,0xffffffffffff
   140005dc8:	shl    rax,0x20
   140005dcc:	xor    rax,QWORD PTR [rbp+0x20]
   140005dd0:	xor    rax,QWORD PTR [rbp+0x10]
   140005dd4:	and    rax,rcx
   140005dd7:	movabs rcx,0x2b992ddfa233
   140005de1:	cmp    rax,rbx
   140005de4:	cmove  rax,rcx
   140005de8:	mov    QWORD PTR [rip+0x3229],rax        # 0x140009018
   140005def:	mov    rbx,QWORD PTR [rsp+0x48]
   140005df4:	not    rax
   140005df7:	mov    QWORD PTR [rip+0x3222],rax        # 0x140009020
   140005dfe:	add    rsp,0x20
   140005e02:	pop    rbp
   140005e03:	ret    
   140005e04:	int3   
   140005e05:	int3   
   140005e06:	int3   
   140005e07:	int3   
   140005e08:	int3   
   140005e09:	int3   
   140005e0a:	int3   
   140005e0b:	int3   
   140005e0c:	int3   
   140005e0d:	int3   
   140005e0e:	int3   
   140005e0f:	int3   
   140005e10:	xor    eax,eax
   140005e12:	ret    
   140005e13:	int3   
   140005e14:	int3   
   140005e15:	int3   
   140005e16:	int3   
   140005e17:	int3   
   140005e18:	int3   
   140005e19:	int3   
   140005e1a:	jmp    QWORD PTR [rip+0x1428]        # 0x140007248
   140005e20:	int3   
   140005e21:	int3   
   140005e22:	int3   
   140005e23:	int3   
   140005e24:	int3   
   140005e25:	int3   
   140005e26:	jmp    QWORD PTR [rip+0x1454]        # 0x140007280
   140005e2c:	int3   
   140005e2d:	int3   
   140005e2e:	int3   
   140005e2f:	int3   
   140005e30:	int3   
   140005e31:	int3   
   140005e32:	int3   
   140005e33:	int3   
   140005e34:	int3   
   140005e35:	int3   
   140005e36:	int3   
   140005e37:	int3   
   140005e38:	rex push rbx
   140005e3a:	sub    rsp,0x20
   140005e3e:	mov    ebx,ecx
   140005e40:	call   0x140005f54
   140005e45:	lea    rdx,[rbx+rbx*2]
   140005e49:	shl    rdx,0x4
   140005e4d:	add    rax,rdx
   140005e50:	add    rsp,0x20
   140005e54:	pop    rbx
   140005e55:	ret    
   140005e56:	int3   
   140005e57:	int3   
   140005e58:	int3   
   140005e59:	int3   
   140005e5a:	int3   
   140005e5b:	int3   
   140005e5c:	int3   
   140005e5d:	int3   
   140005e5e:	int3   
   140005e5f:	int3   
   140005e60:	lea    rax,[rip+0xe199]        # 0x140014000
   140005e67:	jmp    0x140005e80
   140005e6c:	int3   
   140005e6d:	int3   
   140005e6e:	int3   
   140005e6f:	int3   
   140005e70:	int3   
   140005e71:	int3   
   140005e72:	int3   
   140005e73:	int3   
   140005e74:	int3   
   140005e75:	int3   
   140005e76:	int3   
   140005e77:	int3   
   140005e78:	int3   
   140005e79:	int3   
   140005e7a:	int3   
   140005e7b:	int3   
   140005e7c:	int3   
   140005e7d:	int3   
   140005e7e:	int3   
   140005e7f:	int3   
   140005e80:	mov    QWORD PTR [rsp+0x8],rcx
   140005e85:	mov    QWORD PTR [rsp+0x10],rdx
   140005e8a:	mov    QWORD PTR [rsp+0x18],r8
   140005e8f:	mov    QWORD PTR [rsp+0x20],r9
   140005e94:	sub    rsp,0x68
   140005e98:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   140005e9e:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   140005ea4:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   140005eaa:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   140005eb0:	mov    rdx,rax
   140005eb3:	lea    rcx,[rip+0x1f36]        # 0x140007df0
   140005eba:	call   0x1400054a0
   140005ebf:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   140005ec5:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   140005ecb:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   140005ed1:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   140005ed7:	mov    rcx,QWORD PTR [rsp+0x70]
   140005edc:	mov    rdx,QWORD PTR [rsp+0x78]
   140005ee1:	mov    r8,QWORD PTR [rsp+0x80]
   140005ee9:	mov    r9,QWORD PTR [rsp+0x88]
   140005ef1:	add    rsp,0x68
   140005ef5:	jmp    0x140005ef7
   140005ef7:	jmp    rax
   140005ef9:	int3   
   140005efa:	int3   
   140005efb:	int3   
   140005efc:	int3   
   140005efd:	int3   
   140005efe:	int3   
   140005eff:	int3   
   140005f00:	sub    rsp,0x28
   140005f04:	mov    ecx,DWORD PTR [rip+0x376e]        # 0x140009678
   140005f0a:	cmp    ecx,0x1
   140005f0d:	jne    0x140005f13
   140005f0f:	mov    al,cl
   140005f11:	jmp    0x140005f49
   140005f13:	cmp    ecx,0x2
   140005f16:	jne    0x140005f1c
   140005f18:	xor    al,al
   140005f1a:	jmp    0x140005f49
   140005f1c:	lea    rdx,[rsp+0x30]
   140005f21:	mov    BYTE PTR [rsp+0x30],0x0
   140005f26:	lea    rcx,[rip+0x15a3]        # 0x1400074d0
   140005f2d:	call   0x140005f70
   140005f32:	test   eax,eax
   140005f34:	js     0x140005f18
   140005f36:	mov    al,BYTE PTR [rsp+0x30]
   140005f3a:	mov    cl,al
   140005f3c:	neg    cl
   140005f3e:	sbb    edx,edx
   140005f40:	add    edx,0x2
   140005f43:	mov    DWORD PTR [rip+0x372f],edx        # 0x140009678
   140005f49:	add    rsp,0x28
   140005f4d:	ret    
   140005f4e:	int3   
   140005f4f:	int3   
   140005f50:	int3   
   140005f51:	int3   
   140005f52:	int3   
   140005f53:	int3   
   140005f54:	jmp    QWORD PTR [rip+0x141e]        # 0x140007378
   140005f5a:	int3   
   140005f5b:	int3   
   140005f5c:	int3   
   140005f5d:	int3   
   140005f5e:	int3   
   140005f5f:	int3   
   140005f60:	jmp    QWORD PTR [rip+0x10e2]        # 0x140007048
   140005f66:	int3   
   140005f67:	int3   
   140005f68:	int3   
   140005f69:	int3   
   140005f6a:	int3   
   140005f6b:	int3   
   140005f6c:	int3   
   140005f6d:	int3   
   140005f6e:	int3   
   140005f6f:	int3   
   140005f70:	jmp    QWORD PTR [rip+0x108a]        # 0x140007000
   140005f76:	int3   
   140005f77:	int3   
   140005f78:	int3   
   140005f79:	int3   
   140005f7a:	int3   
   140005f7b:	int3   
   140005f7c:	sub    rsp,0x28
   140005f80:	mov    r8,QWORD PTR [r9+0x38]
   140005f84:	mov    rcx,rdx
   140005f87:	mov    rdx,r9
   140005f8a:	call   0x140005fa0
   140005f8f:	mov    eax,0x1
   140005f94:	add    rsp,0x28
   140005f98:	ret    
   140005f99:	int3   
   140005f9a:	int3   
   140005f9b:	int3   
   140005f9c:	int3   
   140005f9d:	int3   
   140005f9e:	int3   
   140005f9f:	int3   
   140005fa0:	rex push rbx
   140005fa2:	sub    rsp,0x20
   140005fa6:	mov    r11d,DWORD PTR [r8]
   140005fa9:	mov    rbx,rdx
   140005fac:	and    r11d,0xfffffff8
   140005fb0:	mov    r9,rcx
   140005fb3:	test   BYTE PTR [r8],0x4
   140005fb7:	mov    r10,rcx
   140005fba:	je     0x140005fcf
   140005fbc:	mov    eax,DWORD PTR [r8+0x8]
   140005fc0:	movsxd r10,DWORD PTR [r8+0x4]
   140005fc4:	neg    eax
   140005fc6:	add    r10,rcx
   140005fc9:	movsxd rcx,eax
   140005fcc:	and    r10,rcx
   140005fcf:	movsxd rax,r11d
   140005fd2:	mov    rdx,QWORD PTR [rax+r10*1]
   140005fd6:	mov    rax,QWORD PTR [rbx+0x10]
   140005fda:	mov    ecx,DWORD PTR [rax+0x8]
   140005fdd:	add    rcx,QWORD PTR [rbx+0x8]
   140005fe1:	test   BYTE PTR [rcx+0x3],0xf
   140005fe5:	je     0x140005ff3
   140005fe7:	movzx  eax,BYTE PTR [rcx+0x3]
   140005feb:	and    eax,0xfffffff0
   140005fee:	cdqe   
   140005ff0:	add    r9,rax
   140005ff3:	xor    r9,rdx
   140005ff6:	mov    rcx,r9
   140005ff9:	add    rsp,0x20
   140005ffd:	pop    rbx
   140005ffe:	jmp    0x140005820
   140006003:	int3   
   140006004:	int3   
   140006005:	int3   
   140006006:	int3   
   140006007:	int3   
   140006008:	int3   
   140006009:	int3   
   14000600a:	int3   
   14000600b:	int3   
   14000600c:	mov    rax,rsp
   14000600f:	mov    QWORD PTR [rax+0x8],rbx
   140006013:	mov    QWORD PTR [rax+0x10],rbp
   140006017:	mov    QWORD PTR [rax+0x18],rsi
   14000601b:	mov    QWORD PTR [rax+0x20],rdi
   14000601f:	push   r14
   140006021:	sub    rsp,0x20
   140006025:	mov    r10,QWORD PTR [r9+0x38]
   140006029:	mov    rsi,rdx
   14000602c:	mov    r14,r8
   14000602f:	mov    rbp,rcx
   140006032:	mov    rdx,r9
   140006035:	mov    rcx,rsi
   140006038:	mov    rdi,r9
   14000603b:	mov    ebx,DWORD PTR [r10]
   14000603e:	shl    rbx,0x4
   140006042:	add    rbx,r10
   140006045:	lea    r8,[rbx+0x4]
   140006049:	call   0x140005fa0
   14000604e:	mov    r11d,DWORD PTR [rbx+0x4]
   140006052:	mov    edx,0x1
   140006057:	mov    r10d,DWORD PTR [rbp+0x4]
   14000605b:	mov    eax,r11d
   14000605e:	and    eax,edx
   140006060:	and    r11d,0x2
   140006064:	and    r10b,0x66
   140006068:	cmove  r11d,eax
   14000606c:	test   r11d,r11d
   14000606f:	je     0x140006085
   140006071:	mov    r9,rdi
   140006074:	mov    r8,r14
   140006077:	mov    rdx,rsi
   14000607a:	mov    rcx,rbp
   14000607d:	call   QWORD PTR [rip+0x11fd]        # 0x140007280
   140006083:	mov    edx,eax
   140006085:	mov    rbx,QWORD PTR [rsp+0x30]
   14000608a:	mov    eax,edx
   14000608c:	mov    rbp,QWORD PTR [rsp+0x38]
   140006091:	mov    rsi,QWORD PTR [rsp+0x40]
   140006096:	mov    rdi,QWORD PTR [rsp+0x48]
   14000609b:	add    rsp,0x20
   14000609f:	pop    r14
   1400060a1:	ret    
   1400060a2:	int3   
   1400060a3:	int3   
   1400060a4:	int3   
   1400060a5:	int3   
   1400060a6:	int3   
   1400060a7:	int3   
   1400060a8:	int3   
   1400060a9:	int3   
   1400060aa:	int3   
   1400060ab:	int3   
   1400060ac:	int3   
   1400060ad:	int3   
   1400060ae:	int3   
   1400060af:	int3   
   1400060b0:	int3   
   1400060b1:	int3   
   1400060b2:	int3   
   1400060b3:	int3   
   1400060b4:	int3   
   1400060b5:	int3   
   1400060b6:	jmp    QWORD PTR [rip+0x121c]        # 0x1400072d8
   1400060bc:	int3   
   1400060bd:	int3   
   1400060be:	int3   
   1400060bf:	int3   
   1400060c0:	int3   
   1400060c1:	int3   
   1400060c2:	jmp    QWORD PTR [rip+0x12b8]        # 0x140007380
   1400060c8:	int3   
   1400060c9:	int3   
   1400060ca:	int3   
   1400060cb:	int3   
   1400060cc:	int3   
   1400060cd:	int3   
   1400060ce:	int3   
   1400060cf:	int3   
   1400060d0:	int3   
   1400060d1:	int3   
   1400060d2:	int3   
   1400060d3:	int3   
   1400060d4:	int3   
   1400060d5:	int3   
   1400060d6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400060e0:	jmp    rax
   1400060e2:	int3   
   1400060e3:	int3   
   1400060e4:	int3   
   1400060e5:	int3   
   1400060e6:	int3   
   1400060e7:	int3   
   1400060e8:	int3   
   1400060e9:	int3   
   1400060ea:	int3   
   1400060eb:	int3   
   1400060ec:	int3   
   1400060ed:	int3   
   1400060ee:	int3   
   1400060ef:	int3   
   1400060f0:	int3   
   1400060f1:	int3   
   1400060f2:	int3   
   1400060f3:	int3   
   1400060f4:	int3   
   1400060f5:	int3   
   1400060f6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140006100:	sub    rsp,0x10
   140006104:	mov    QWORD PTR [rsp],r10
   140006108:	mov    QWORD PTR [rsp+0x8],r11
   14000610d:	xor    r11,r11
   140006110:	lea    r10,[rsp+0x18]
   140006115:	sub    r10,rax
   140006118:	cmovb  r10,r11
   14000611c:	mov    r11,QWORD PTR gs:0x10
   140006125:	cmp    r10,r11
   140006128:	jae    0x14000613f
   14000612a:	and    r10w,0xf000
   140006130:	lea    r11,[r11-0x1000]
   140006137:	test   BYTE PTR [r11],r11b
   14000613a:	cmp    r10,r11
   14000613d:	jne    0x140006130
   14000613f:	mov    r10,QWORD PTR [rsp]
   140006143:	mov    r11,QWORD PTR [rsp+0x8]
   140006148:	add    rsp,0x10
   14000614c:	ret    
   14000614d:	int3   
   14000614e:	int3   
   14000614f:	int3   
   140006150:	int3   
   140006151:	int3   
   140006152:	int3   
   140006153:	int3   
   140006154:	int3   
   140006155:	int3   
   140006156:	int3   
   140006157:	int3   
   140006158:	int3   
   140006159:	int3   
   14000615a:	int3   
   14000615b:	int3   
   14000615c:	int3   
   14000615d:	int3   
   14000615e:	int3   
   14000615f:	int3   
   140006160:	rex push rbp
   140006162:	sub    rsp,0x20
   140006166:	mov    rbp,rdx
   140006169:	mov    rax,QWORD PTR [rcx]
   14000616c:	xor    ecx,ecx
   14000616e:	cmp    DWORD PTR [rax],0xc0000005
   140006174:	sete   cl
   140006177:	mov    eax,ecx
   140006179:	add    rsp,0x20
   14000617d:	pop    rbp
   14000617e:	ret    
   14000617f:	int3   
   140006180:	int3   
   140006181:	int3   
   140006182:	int3   
   140006183:	int3   
   140006184:	int3   
   140006185:	int3   
   140006186:	rex push rbp
   140006188:	sub    rsp,0x30
   14000618c:	mov    rbp,rdx
   14000618f:	mov    rax,QWORD PTR [rcx]
   140006192:	xor    ecx,ecx
   140006194:	cmp    DWORD PTR [rax],0xc0000006
   14000619a:	sete   cl
   14000619d:	mov    eax,ecx
   14000619f:	add    rsp,0x30
   1400061a3:	pop    rbp
   1400061a4:	ret    
   1400061a5:	int3   
   1400061a6:	int3   
   1400061a7:	int3   
   1400061a8:	int3   
   1400061a9:	int3   
   1400061aa:	int3   
   1400061ab:	int3   
   1400061ac:	rex push rbp
   1400061ae:	sub    rsp,0x20
   1400061b2:	mov    rbp,rdx
   1400061b5:	mov    rax,QWORD PTR [rcx]
   1400061b8:	mov    rdx,rcx
   1400061bb:	mov    ecx,DWORD PTR [rax]
   1400061bd:	call   0x140005b8e
   1400061c2:	nop
   1400061c3:	add    rsp,0x20
   1400061c7:	pop    rbp
   1400061c8:	ret    
   1400061c9:	int3   

Disassembly of section .rdata:

0000000140007000 <.rdata>:
   140007000:	mov    dh,0x8c
	...
   14000700e:	add    BYTE PTR [rax],al
   140007010:	mov    ah,0x87
   140007012:	add    BYTE PTR [rax],al
   140007014:	add    BYTE PTR [rax],al
   140007016:	add    BYTE PTR [rax],al
   140007018:	ins    BYTE PTR es:[rdi],dx
   140007019:	mov    BYTE PTR [rax],al
	...
   140007027:	add    BYTE PTR [rsi-0x78],cl
   14000702a:	add    BYTE PTR [rax],al
   14000702c:	add    BYTE PTR [rax],al
   14000702e:	add    BYTE PTR [rax],al
   140007030:	adc    al,0x87
	...
   14000703e:	add    BYTE PTR [rax],al
   140007040:	(bad)  
   140007041:	mov    WORD PTR [rax],es
   140007043:	add    BYTE PTR [rax],al
   140007045:	add    BYTE PTR [rax],al
   140007047:	add    BYTE PTR [rax-0x74],bh
	...
   140007056:	add    BYTE PTR [rax],al
   140007058:	enter  0x88,0x0
   14000705c:	add    BYTE PTR [rax],al
   14000705e:	add    BYTE PTR [rax],al
   140007060:	in     al,0x88
   140007062:	add    BYTE PTR [rax],al
   140007064:	add    BYTE PTR [rax],al
   140007066:	add    BYTE PTR [rax],al
   140007068:	adc    cl,BYTE PTR [rax+0x0]
	...
   140007076:	add    BYTE PTR [rax],al
   140007078:	push   0x87
   14000707d:	add    BYTE PTR [rax],al
   14000707f:	add    dh,dl
   140007081:	xchg   BYTE PTR [rax],al
   140007083:	add    BYTE PTR [rax],al
   140007085:	add    BYTE PTR [rax],al
   140007087:	add    BYTE PTR [rdx+0x86],bl
   14000708d:	add    BYTE PTR [rax],al
   14000708f:	add    BYTE PTR [rax-0x79],al
   140007092:	add    BYTE PTR [rax],al
   140007094:	add    BYTE PTR [rax],al
   140007096:	add    BYTE PTR [rax],al
   140007098:	test   al,0x87
   14000709a:	add    BYTE PTR [rax],al
   14000709c:	add    BYTE PTR [rax],al
   14000709e:	add    BYTE PTR [rax],al
   1400070a0:	in     al,0x86
   1400070a2:	add    BYTE PTR [rax],al
   1400070a4:	add    BYTE PTR [rax],al
   1400070a6:	add    BYTE PTR [rax],al
   1400070a8:	mov    eax,0x86
   1400070ad:	add    BYTE PTR [rax],al
   1400070af:	add    BYTE PTR [rsi+rax*4+0x0],ch
	...
   1400070be:	add    BYTE PTR [rax],al
   1400070c0:	cmp    cl,BYTE PTR [rax+0x0]
	...
   1400070ce:	add    BYTE PTR [rax],al
   1400070d0:	mov    dl,0x88
	...
   1400070de:	add    BYTE PTR [rax],al
   1400070e0:	test   BYTE PTR [rax+0x0],cl
	...
   1400070ee:	add    BYTE PTR [rax],al
   1400070f0:	fmul   DWORD PTR [rbx+0x0]
	...
   1400070fe:	add    BYTE PTR [rax],al
   140007100:	sub    cl,BYTE PTR [rcx+0x0]
	...
   14000710e:	add    BYTE PTR [rax],al
   140007110:	xchg   esi,eax
   140007111:	xchg   DWORD PTR [rax],eax
   140007113:	add    BYTE PTR [rax],al
   140007115:	add    BYTE PTR [rax],al
   140007117:	add    BYTE PTR [rsi],ch
   140007119:	xchg   DWORD PTR [rax],eax
   14000711b:	add    BYTE PTR [rax],al
   14000711d:	add    BYTE PTR [rax],al
   14000711f:	add    dl,dh
   140007121:	xchg   DWORD PTR [rax],eax
	...
   14000712f:	add    BYTE PTR [rdx],al
   140007131:	xchg   DWORD PTR [rax],eax
   140007133:	add    BYTE PTR [rax],al
   140007135:	add    BYTE PTR [rax],al
   140007137:	add    dl,dh
   140007139:	xchg   BYTE PTR [rax],al
	...
   140007147:	add    dl,ah
   140007149:	xchg   DWORD PTR [rax],eax
   14000714b:	add    BYTE PTR [rax],al
   14000714d:	add    BYTE PTR [rax],al
   14000714f:	add    dl,cl
   140007151:	xchg   DWORD PTR [rax],eax
   140007153:	add    BYTE PTR [rax],al
   140007155:	add    BYTE PTR [rax],al
   140007157:	add    BYTE PTR [rdx+0x88],bl
	...
   140007165:	add    BYTE PTR [rax],al
   140007167:	add    al,cl
   140007169:	xchg   BYTE PTR [rax],al
   14000716b:	add    BYTE PTR [rax],al
   14000716d:	add    BYTE PTR [rax],al
   14000716f:	add    BYTE PTR [rax-0x77],bl
   140007172:	add    BYTE PTR [rax],al
   140007174:	add    BYTE PTR [rax],al
   140007176:	add    BYTE PTR [rax],al
   140007178:	outs   dx,BYTE PTR ds:[rsi]
   140007179:	mov    DWORD PTR [rax],eax
   14000717b:	add    BYTE PTR [rax],al
   14000717d:	add    BYTE PTR [rax],al
   14000717f:	add    BYTE PTR [rsi],dl
   140007181:	mov    DWORD PTR [rax],eax
   140007183:	add    BYTE PTR [rax],al
   140007185:	add    BYTE PTR [rax],al
   140007187:	add    BYTE PTR [rdx],al
   140007189:	mov    DWORD PTR [rax],eax
	...
   140007197:	add    BYTE PTR [rsi],bh
   140007199:	mov    DWORD PTR [rax],eax
	...
   1400071a7:	add    BYTE PTR [rdx],bl
   1400071a9:	mov    WORD PTR [rax],es
	...
   1400071b7:	add    BYTE PTR [rdi+rax*4+0x0],cl
   1400071bb:	add    BYTE PTR [rax],al
   1400071bd:	add    BYTE PTR [rax],al
   1400071bf:	add    BYTE PTR [rsi-0x79],bh
   1400071c2:	add    BYTE PTR [rax],al
   1400071c4:	add    BYTE PTR [rax],al
   1400071c6:	add    BYTE PTR [rax],al
   1400071c8:	ror    BYTE PTR [rax+0x0],0x0
   1400071cf:	add    BYTE PTR [rdx],ah
   1400071d1:	mov    BYTE PTR [rax],al
	...
   1400071df:	add    BYTE PTR [rcx+rcx*4+0x0],al
   1400071e6:	add    BYTE PTR [rax],al
   1400071e8:	sahf   
   1400071e9:	mov    DWORD PTR [rax],eax
	...
   1400071f7:	add    al,ah
   1400071f9:	add    DWORD PTR [rax],0x0
   1400071fc:	add    BYTE PTR [rax],al
   1400071fe:	add    BYTE PTR [rax],al
   140007200:	pushf  
   140007201:	test   DWORD PTR [rax],eax
   140007203:	add    BYTE PTR [rax],al
   140007205:	add    BYTE PTR [rax],al
   140007207:	add    BYTE PTR [rbp+rax*4+0x0],dl
   14000720e:	add    BYTE PTR [rax],al
   140007210:	(bad)  
   140007211:	test   DWORD PTR [rax],eax
   140007213:	add    BYTE PTR [rax],al
   140007215:	add    BYTE PTR [rax],al
   140007217:	add    BYTE PTR [rdx-0x7b],dh
   14000721a:	add    BYTE PTR [rax],al
   14000721c:	add    BYTE PTR [rax],al
   14000721e:	add    BYTE PTR [rax],al
   140007220:	test   DWORD PTR fs:[rax],eax
   140007223:	add    BYTE PTR [rax],al
   140007225:	add    BYTE PTR [rax],al
   140007227:	add    BYTE PTR [rsi-0x7b],dl
   14000722a:	add    BYTE PTR [rax],al
   14000722c:	add    BYTE PTR [rax],al
   14000722e:	add    BYTE PTR [rax],al
   140007230:	rex.WX test QWORD PTR [rax],rax
   140007233:	add    BYTE PTR [rax],al
   140007235:	add    BYTE PTR [rax],al
   140007237:	add    BYTE PTR [rsi+0x85],ah
   14000723d:	add    BYTE PTR [rax],al
   14000723f:	add    BYTE PTR [rax-0x7b],al
   140007242:	add    BYTE PTR [rax],al
   140007244:	add    BYTE PTR [rax],al
   140007246:	add    BYTE PTR [rax],al
   140007248:	mov    edx,0x85
   14000724d:	add    BYTE PTR [rax],al
   14000724f:	add    BYTE PTR [rdx],dh
   140007251:	test   DWORD PTR [rax],eax
   140007253:	add    BYTE PTR [rax],al
   140007255:	add    BYTE PTR [rax],al
   140007257:	add    BYTE PTR [rsi],ah
   140007259:	test   DWORD PTR [rax],eax
   14000725b:	add    BYTE PTR [rax],al
   14000725d:	add    BYTE PTR [rax],al
   14000725f:	add    BYTE PTR [rax*4+0x0],bl
   140007266:	add    BYTE PTR [rax],al
   140007268:	adc    al,BYTE PTR [rbp+0x0]
   14000726e:	add    BYTE PTR [rax],al
   140007270:	or     al,BYTE PTR [rbp+0x0]
   140007276:	add    BYTE PTR [rax],al
   140007278:	add    BYTE PTR [rbp+0x0],al
   14000727e:	add    BYTE PTR [rax],al
   140007280:	mov    BYTE PTR [rbp+0x0],0x0
   140007287:	add    dh,bl
   140007289:	test   DWORD PTR [rax],eax
   14000728b:	add    BYTE PTR [rax],al
   14000728d:	add    BYTE PTR [rax],al
   14000728f:	add    al,dh
   140007291:	test   BYTE PTR [rax],al
   140007293:	add    BYTE PTR [rax],al
   140007295:	add    BYTE PTR [rax],al
   140007297:	add    ah,bl
   140007299:	test   BYTE PTR [rax],al
   14000729b:	add    BYTE PTR [rax],al
   14000729d:	add    BYTE PTR [rax],al
   14000729f:	add    dl,dl
   1400072a1:	test   BYTE PTR [rax],al
   1400072a3:	add    BYTE PTR [rax],al
   1400072a5:	add    BYTE PTR [rax],al
   1400072a7:	add    al,cl
   1400072a9:	test   BYTE PTR [rax],al
   1400072ab:	add    BYTE PTR [rax],al
   1400072ad:	add    BYTE PTR [rax],al
   1400072af:	add    al,ch
   1400072b1:	test   DWORD PTR [rax],eax
   1400072b3:	add    BYTE PTR [rax],al
   1400072b5:	add    BYTE PTR [rax],al
   1400072b7:	add    BYTE PTR [rsi+0x84],bh
   1400072bd:	add    BYTE PTR [rax],al
   1400072bf:	add    BYTE PTR [rdx+0x84],dh
   1400072c5:	add    BYTE PTR [rax],al
   1400072c7:	add    BYTE PTR [rsp+rax*4+0x0],ah
   1400072ce:	add    BYTE PTR [rax],al
   1400072d0:	cwde   
   1400072d1:	test   BYTE PTR [rax],al
   1400072d3:	add    BYTE PTR [rax],al
   1400072d5:	add    BYTE PTR [rax],al
   1400072d7:	add    dh,dh
   1400072d9:	mov    WORD PTR [rax],es
   1400072db:	add    BYTE PTR [rax],al
   1400072dd:	add    BYTE PTR [rax],al
   1400072df:	add    BYTE PTR [rax+0x84],cl
   1400072e5:	add    BYTE PTR [rax],al
   1400072e7:	add    BYTE PTR [rsp+rax*4+0x0],bh
   1400072eb:	add    BYTE PTR [rax],al
   1400072ed:	add    BYTE PTR [rax],al
   1400072ef:	add    BYTE PTR [rax],al
   1400072f1:	xchg   BYTE PTR [rax],al
   1400072f3:	add    BYTE PTR [rax],al
   1400072f5:	add    BYTE PTR [rax],al
   1400072f7:	add    BYTE PTR [rax-0x7c],dh
   1400072fa:	add    BYTE PTR [rax],al
   1400072fc:	add    BYTE PTR [rax],al
   1400072fe:	add    BYTE PTR [rax],al
   140007300:	data16 test BYTE PTR [rax],al
   140007303:	add    BYTE PTR [rax],al
   140007305:	add    BYTE PTR [rax],al
   140007307:	add    BYTE PTR [rsi-0x7c],bl
   14000730a:	add    BYTE PTR [rax],al
   14000730c:	add    BYTE PTR [rax],al
   14000730e:	add    BYTE PTR [rax],al
   140007310:	push   rdx
   140007311:	test   BYTE PTR [rax],al
   140007313:	add    BYTE PTR [rax],al
   140007315:	add    BYTE PTR [rax],al
   140007317:	add    BYTE PTR [rax-0x7c],cl
   14000731a:	add    BYTE PTR [rax],al
   14000731c:	add    BYTE PTR [rax],al
   14000731e:	add    BYTE PTR [rax],al
   140007320:	clc    
   140007321:	test   BYTE PTR [rax],al
   140007323:	add    BYTE PTR [rax],al
   140007325:	add    BYTE PTR [rax],al
   140007327:	add    BYTE PTR [rsi],bh
   140007329:	test   BYTE PTR [rax],al
   14000732b:	add    BYTE PTR [rax],al
   14000732d:	add    BYTE PTR [rax],al
   14000732f:	add    BYTE PTR [rax],dh
   140007331:	test   BYTE PTR [rax],al
   140007333:	add    BYTE PTR [rax],al
   140007335:	add    BYTE PTR [rax],al
   140007337:	add    BYTE PTR [rsi],ah
   140007339:	test   BYTE PTR [rax],al
   14000733b:	add    BYTE PTR [rax],al
   14000733d:	add    BYTE PTR [rax],al
   14000733f:	add    BYTE PTR [rsp+rax*4],bl
   140007342:	add    BYTE PTR [rax],al
   140007344:	add    BYTE PTR [rax],al
   140007346:	add    BYTE PTR [rax],al
   140007348:	adc    al,BYTE PTR [rax+rax*1+0x0]
   14000734f:	add    BYTE PTR [rsi],al
   140007351:	test   BYTE PTR [rax],al
   140007353:	add    BYTE PTR [rax],al
   140007355:	add    BYTE PTR [rax],al
   140007357:	add    ah,bh
   140007359:	add    DWORD PTR [rax],0x0
   14000735c:	add    BYTE PTR [rax],al
   14000735e:	add    BYTE PTR [rax],al
   140007360:	hlt    
   140007361:	add    DWORD PTR [rax],0x0
   140007364:	add    BYTE PTR [rax],al
   140007366:	add    BYTE PTR [rax],al
   140007368:	(bad)  
   140007369:	add    DWORD PTR [rax],0x0
   14000736c:	add    BYTE PTR [rax],al
   14000736e:	add    BYTE PTR [rax],al
   140007370:	out    0x84,al
   140007372:	add    BYTE PTR [rax],al
   140007374:	add    BYTE PTR [rax],al
   140007376:	add    BYTE PTR [rax],al
   140007378:	push   rdx
   140007379:	mov    WORD PTR [rax],es
   14000737b:	add    BYTE PTR [rax],al
   14000737d:	add    BYTE PTR [rax],al
   14000737f:	add    BYTE PTR [rax],al
   140007381:	lea    eax,[rax]
	...
   14000738f:	add    BYTE PTR [rdx-0x7a],ah
   140007392:	add    BYTE PTR [rax],al
   140007394:	add    BYTE PTR [rax],al
   140007396:	add    BYTE PTR [rax],al
   140007398:	rex.WRX xchg BYTE PTR [rax],r8b
   14000739b:	add    BYTE PTR [rax],al
   14000739d:	add    BYTE PTR [rax],al
   14000739f:	add    BYTE PTR [rdx-0x7a],al
   1400073a2:	add    BYTE PTR [rax],al
   1400073a4:	add    BYTE PTR [rax],al
   1400073a6:	add    BYTE PTR [rax],al
   1400073a8:	sub    BYTE PTR [rsi+0x0],al
   1400073ae:	add    BYTE PTR [rax],al
   1400073b0:	adc    al,0x86
   1400073b2:	add    BYTE PTR [rax],al
   1400073b4:	add    BYTE PTR [rax],al
   1400073b6:	add    BYTE PTR [rax],al
   1400073b8:	jl     0x140007340
	...
   1400073c6:	add    BYTE PTR [rax],al
   1400073c8:	movabs al,ds:0xe000000001400032
   1400073d1:	(bad)  
   1400073d2:	add    BYTE PTR [rax+0x1],al
	...
   1400073dd:	add    BYTE PTR [rax],al
   1400073df:	add    al,al
   1400073e1:	push   rbp
   1400073e2:	add    BYTE PTR [rax+0x1],al
	...
   1400073f5:	add    BYTE PTR [rax],al
   1400073f7:	add    al,ah
   1400073f9:	push   rsp
   1400073fa:	add    BYTE PTR [rax+0x1],al
   1400073fd:	add    BYTE PTR [rax],al
   1400073ff:	add    BYTE PTR [rax+0x5b],dh
   140007402:	add    BYTE PTR [rax+0x1],al
	...
   14000740d:	add    BYTE PTR [rax],al
   14000740f:	add    BYTE PTR [rax+0x60000018],dl
   140007415:	sbb    al,BYTE PTR [rax]
   140007417:	add    BYTE PTR [rax+0x1d],dl
   14000741a:	add    BYTE PTR [rax],al
   14000741c:	lock sub al,BYTE PTR [rax]
   14000741f:	add    al,al
   140007421:	sub    eax,DWORD PTR [rax]
   140007423:	add    BYTE PTR [rax+0x2f],dh
   140007426:	add    BYTE PTR [rax],al
   140007428:	shr    BYTE PTR [rdi],1
   14000742a:	add    BYTE PTR [rax],al
   14000742c:	push   rax
   14000742d:	xor    DWORD PTR [rax],eax
   14000742f:	add    BYTE PTR [rax-0x4fffffce],ah
   140007435:	xor    al,BYTE PTR [rax]
   140007437:	add    BYTE PTR [rax+0x33],ah
   14000743a:	add    BYTE PTR [rax],al
   14000743c:	and    BYTE PTR [rax],bh
   14000743e:	add    BYTE PTR [rax],al
   140007440:	jo     0x140007490
   140007442:	add    BYTE PTR [rax],al
   140007444:	or     BYTE PTR [rdi+0x0],0x0
   140007448:	loopne 0x140007499
   14000744a:	add    BYTE PTR [rax],al
   14000744c:	adc    BYTE PTR [rcx+0x0],dl
   14000744f:	add    BYTE PTR [rax-0x1fffffac],ah
   140007455:	push   rsp
   140007456:	add    BYTE PTR [rax],al
   140007458:	rcl    BYTE PTR [rbp+0x0],0x0
   14000745c:	lock push rdi
   14000745e:	add    BYTE PTR [rax],al
   140007460:	push   rax
   140007461:	pop    rax
   140007462:	add    BYTE PTR [rax],al
   140007464:	movabs al,ds:0x3000005b20000058
   14000746d:	pop    rbx
   14000746e:	add    BYTE PTR [rax],al
   140007470:	jo     0x1400074cd
   140007472:	add    BYTE PTR [rax],al
   140007474:	adc    BYTE PTR [rsi+0x0],bl
   140007477:	add    BYTE PTR [rax+0x5e],ah
   14000747a:	add    BYTE PTR [rax],al
   14000747c:	sbb    BYTE PTR [rsi+0x0],0x0
   140007480:	(bad)  
   140007481:	pop    rdi
   140007482:	add    BYTE PTR [rax],al
   140007484:	jo     0x1400074e5
	...
   14000748e:	add    BYTE PTR [rax],al
   140007490:	lock nop
   140007492:	add    BYTE PTR [rax+0x1],al
   140007495:	add    BYTE PTR [rax],al
   140007497:	add    BYTE PTR [rax+0x1400091],dl
   14000749d:	add    BYTE PTR [rax],al
   14000749f:	add    BYTE PTR [rbp+0x78],ah
   1400074a2:	je     0x1400074d1
   1400074a4:	ins    DWORD PTR es:[rdi],dx
   1400074a5:	jae    0x1400074d4
   1400074a7:	ja     0x140007512
   1400074a9:	outs   dx,BYTE PTR ds:[rsi]
   1400074aa:	sub    eax,0x7375746e
   1400074af:	gs jb  0x1400074df
   1400074b2:	movsxd ebp,DWORD PTR [rax+0x61]
   1400074b5:	jb     0x14000752b
   1400074b7:	jb     0x14000751a
   1400074b9:	outs   dx,BYTE PTR ds:[rsi]
   1400074ba:	jae    0x140007528
   1400074bc:	(bad)  
   1400074bd:	je     0x140007528
   1400074bf:	outs   dx,DWORD PTR ds:[rsi]
   1400074c0:	outs   dx,BYTE PTR ds:[rsi]
   1400074c1:	sub    eax,0x312d316c
   1400074c6:	sub    eax,0x6c642e30
   1400074cb:	ins    BYTE PTR es:[rdi],dx
   1400074cc:	add    BYTE PTR [rax],al
   1400074ce:	add    BYTE PTR [rax],al
   1400074d0:	push   rax
   1400074d1:	add    BYTE PTR [rdx+0x0],dl
   1400074d4:	add    BYTE PTR [rax],al
   1400074d6:	add    BYTE PTR [rax],al
   1400074d8:	loopne 0x14000754e
   1400074da:	add    BYTE PTR [rax+0x1],al
   1400074dd:	add    BYTE PTR [rax],al
   1400074df:	add    BYTE PTR [rbp+0x0],ah
   1400074e2:	js     0x1400074e4
   1400074e4:	je     0x1400074e6
   1400074e6:	sub    eax,0x73006d00
   1400074eb:	add    BYTE PTR [rip+0x69007700],ch        # 0x1a900ebf1
   1400074f1:	add    BYTE PTR [rsi+0x0],ch
   1400074f4:	sub    eax,0x74006e00
   1400074f9:	add    BYTE PTR [rbp+0x0],dh
   1400074fc:	jae    0x1400074fe
   1400074fe:	add    BYTE PTR gs:[rdx+0x0],dh
   140007502:	sub    eax,0x68006300
   140007507:	add    BYTE PTR [rcx+0x0],ah
   14000750a:	jb     0x14000750c
   14000750c:	je     0x14000750e
   14000750e:	jb     0x140007510
   140007510:	(bad)  
   140007511:	add    BYTE PTR [rsi+0x0],ch
   140007514:	jae    0x140007516
   140007516:	ins    BYTE PTR es:[rdi],dx
   140007517:	add    BYTE PTR [rcx+0x0],ah
   14000751a:	je     0x14000751c
   14000751c:	imul   eax,DWORD PTR [rax],0x6e006f
   140007522:	sub    eax,0x31006c00
   140007527:	add    BYTE PTR [rip+0x2d003100],ch        # 0x16d00a62d
   14000752d:	add    BYTE PTR [rax],dh
   14000752f:	add    BYTE PTR [rax],al
   140007531:	add    BYTE PTR [rax],al
   140007533:	add    BYTE PTR [rsi],ch
   140007535:	pop    rsp
   140007536:	pop    rbx
   140007537:	sub    al,BYTE PTR [rax]
   140007539:	add    BYTE PTR [rax],al
   14000753b:	add    BYTE PTR [rax],al
   14000753d:	add    BYTE PTR [rax],al
   14000753f:	add    bh,bh
   140007541:	jg     0x140007543
   140007543:	add    bh,bh
   140007545:	jg     0x140007547
   140007547:	add    BYTE PTR [rdx],al
   140007549:	add    BYTE PTR [rax],al
   14000754b:	add    BYTE PTR [rcx],ah
   14000754d:	add    BYTE PTR [rax],al
   14000754f:	add    BYTE PTR [rcx],al
   140007551:	add    BYTE PTR [rax],al
   140007553:	add    bh,bh
   140007555:	jg     0x140007557
   140007557:	add    BYTE PTR [rax],dl
   140007559:	push   rcx
   14000755a:	add    BYTE PTR [rax+0x1],al
   14000755d:	add    BYTE PTR [rax],al
   14000755f:	add    al,ah
   140007561:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   140007565:	add    BYTE PTR [rax],al
   140007567:	add    BYTE PTR [rdx],ch
   140007569:	sub    al,BYTE PTR cs:[rax]
   14000756c:	add    BYTE PTR cs:[rax],al
   14000756f:	add    BYTE PTR [rsi],ch
   140007571:	add    BYTE PTR cs:[rax],al
   140007574:	pop    rsp
   140007575:	add    BYTE PTR [rax],al
   140007577:	add    BYTE PTR [rdx],cl
   140007579:	add    BYTE PTR [rax],al
   14000757b:	add    BYTE PTR [rip+0x25003a73],ah        # 0x16500aff4
   140007581:	jne    0x1400075bd
   140007583:	add    BYTE PTR [rip+0x3a756c],ah        # 0x1403aeaf5
   140007589:	add    BYTE PTR [rax],al
   14000758b:	add    BYTE PTR [rax],al
   14000758d:	add    BYTE PTR [rax],al
   14000758f:	add    BYTE PTR [rax],cl
   140007591:	or     DWORD PTR [rbx],ecx
   140007593:	or     eax,0x1a0c0a
   140007598:	or     eax,0xa
   14000759d:	add    BYTE PTR [rax],al
   14000759f:	add    BYTE PTR [rsi],ch
   1400075a1:	add    BYTE PTR [rdi+0x0],cl
   1400075a4:	rex.XB add BYTE PTR [r8+0x0],dl
	...
   1400075b0:	add    BYTE PTR cs:[rip+0x6400],ah        # 0x14000d9b7
   1400075b7:	add    BYTE PTR [rsi+0x49],al
   1400075ba:	rex.WRX
   1400075bb:	rex.R push rbx
   1400075bd:	push   rsp
   1400075be:	push   rdx
   1400075bf:	add    BYTE PTR [rdi+0x46],cl
   1400075c2:	rex.RX
   1400075c3:	rex.WR
   1400075c4:	rex.WB
   1400075c5:	rex.WRX
   1400075c6:	add    BYTE PTR [r15+0x46],r9b
   1400075ca:	rex.RX add BYTE PTR [rax],r8b
   1400075cd:	add    BYTE PTR [rax],al
   1400075cf:	add    BYTE PTR [rdi],ch
   1400075d1:	add    BYTE PTR [rax],al
   1400075d3:	add    BYTE PTR [rip+0x20000000],ch        # 0x1600075d9
   1400075d9:	or     DWORD PTR [rax],eax
   1400075db:	add    BYTE PTR [rdx+0x0],dh
   1400075de:	add    BYTE PTR [rax],al
   1400075e0:	and    BYTE PTR [rax],ah
   1400075e2:	add    BYTE PTR [rax],al
   1400075e4:	cmp    cl,BYTE PTR [rip+0x7325000a]        # 0x1b32575f4
   1400075ea:	add    BYTE PTR [rax],al
   1400075ec:	add    BYTE PTR [rax],al
   1400075ee:	add    BYTE PTR [rax],al
   1400075f0:	rex.RX (bad) 
   1400075f2:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6f742065
   1400075fa:	and    BYTE PTR [rbx+0x6f],ah
   1400075fd:	outs   dx,BYTE PTR ds:[rsi]
   1400075fe:	jbe    0x140007665
   140007600:	jb     0x140007676
   140007602:	and    BYTE PTR [rbp+0x6e],dl
   140007605:	imul   esp,DWORD PTR [rbx+0x6f],0x74206564
   14000760c:	outs   dx,DWORD PTR ds:[rsi]
   14000760d:	and    BYTE PTR [rdi+0x65],cl
   140007610:	ins    DWORD PTR es:[rdi],dx
   140007611:	cmp    ah,BYTE PTR [rax]
   140007613:	and    eax,0xa64
   140007618:	rex.RX (bad) 
   14000761a:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6f742065
   140007622:	and    BYTE PTR [rbx+0x6f],ah
   140007625:	outs   dx,BYTE PTR ds:[rsi]
   140007626:	jbe    0x14000768d
   140007628:	jb     0x14000769e
   14000762a:	and    BYTE PTR [rbp+0x75],cl
   14000762d:	ins    BYTE PTR es:[rdi],dx
   14000762e:	je     0x140007699
   140007630:	rex.X jns 0x1400076a7
   140007633:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
   140007638:	push   rbp
   140007639:	outs   dx,BYTE PTR ds:[rsi]
   14000763a:	imul   esp,DWORD PTR [rbx+0x6f],0x203a6564
   140007641:	and    eax,0xa64
   140007646:	add    BYTE PTR [rax],al
   140007648:	rex.RX outs dx,DWORD PTR ds:[rsi]
   14000764a:	jb     0x1400076b9
   14000764c:	(bad)  
   14000764d:	je     0x14000769c
   14000764f:	gs jae 0x1400076c5
   140007652:	(bad)  
   140007653:	and    BYTE PTR gs:[esi+0x61],ah
   140007658:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x6425203a
   140007660:	or     al,BYTE PTR [rax]
	...
   14000766e:	add    BYTE PTR [rax],al
   140007670:	shl    BYTE PTR [rax+rax*1+0x140],0x0
   140007678:	rol    ah,0x0
   14000767b:	rex add DWORD PTR [rax],eax
	...
   140007692:	add    BYTE PTR [rax],al
   140007694:	mov    edi,0x559f38
   140007699:	add    BYTE PTR [rax],al
   14000769b:	add    BYTE PTR [rdx],al
   14000769d:	add    BYTE PTR [rax],al
   14000769f:	add    BYTE PTR [rax+rax*1],ah
   1400076a2:	add    BYTE PTR [rax],al
   1400076a4:	nop
   1400076a5:	ja     0x1400076a7
   1400076a7:	add    BYTE PTR [rax+0x5d],dl
   1400076ad:	add    BYTE PTR [rax],al
   1400076af:	add    BYTE PTR [rdi+0x559f38],bh
   1400076b5:	add    BYTE PTR [rax],al
   1400076b7:	add    BYTE PTR [rip+0x58000000],cl        # 0x1980076bd
   1400076bd:	add    al,BYTE PTR [rax]
   1400076bf:	add    al,cl
   1400076c1:	ja     0x1400076c3
   1400076c3:	add    al,cl
   1400076c5:	pop    rbp
	...
   1400076ee:	add    BYTE PTR [rax],al
   1400076f0:	movabs al,ds:0x0
	...
   140007745:	add    BYTE PTR [rax],al
   140007747:	add    BYTE PTR [rax],bl
   140007749:	nop
   14000774a:	add    BYTE PTR [rax+0x1],al
	...
   14000775d:	add    BYTE PTR [rax],al
   14000775f:	add    al,cl
   140007761:	jae    0x140007763
   140007763:	rex add DWORD PTR [rax],eax
   140007766:	add    BYTE PTR [rax],al
   140007768:	shl    BYTE PTR [rbx+0x0],1
   14000776b:	rex add DWORD PTR [rax],eax
   14000776e:	add    BYTE PTR [rax],al
   140007770:	adc    BYTE PTR [rax+rax*1+0x40],dh
   140007774:	add    DWORD PTR [rax],eax
   140007776:	add    BYTE PTR [rax],al
   140007778:	(bad)  
	...
   140007781:	xor    eax,0x0
	...
   14000778e:	add    BYTE PTR [rax],al
   140007790:	push   rdx
   140007791:	push   rbx
   140007792:	rex.R push rbx
   140007794:	adc    eax,0x6c599008
   140007799:	lods   eax,DWORD PTR ds:[rsi]
   14000779a:	clc    
   14000779b:	rex.X movabs ds:0x165596033e6077a,al
   1400077a5:	add    BYTE PTR [rax],al
   1400077a7:	add    BYTE PTR [rsi+0x69],ah
   1400077aa:	outs   dx,BYTE PTR ds:[rsi]
   1400077ab:	fs jae 0x140007822
   1400077ae:	jb     0x1400077de
   1400077b0:	jo     0x140007816
   1400077b2:	(bad)  
	...
   1400077c7:	add    BYTE PTR [rdi+0x43],al
   1400077ca:	push   rsp
   1400077cb:	rex.WR add BYTE PTR [rax],r10b
   1400077ce:	add    BYTE PTR [rax],al
   1400077d0:	enter  0x50,0x0
   1400077d4:	cs je  0x14000783c
   1400077d7:	js     0x14000784d
   1400077d9:	and    al,0x6d
   1400077db:	outs   dx,BYTE PTR ds:[rsi]
   1400077dc:	add    BYTE PTR [rax],al
   1400077de:	add    BYTE PTR [rax],al
   1400077e0:	shl    BYTE PTR [rax+0x0],1
   1400077e3:	add    BYTE PTR [rbp+0x0],bh
   1400077e6:	add    BYTE PTR [rax],al
   1400077e8:	cs je  0x140007850
   1400077eb:	js     0x140007861
   1400077ed:	and    al,0x6d
   1400077ef:	outs   dx,BYTE PTR ds:[rsi]
   1400077f0:	and    al,0x30
   1400077f2:	xor    BYTE PTR [rax],al
   1400077f4:	push   rax
   1400077f5:	(bad)  
   1400077f6:	add    BYTE PTR [rax],al
   1400077f8:	jp     0x1400077fa
   1400077fa:	add    BYTE PTR [rax],al
   1400077fc:	cs je  0x140007864
   1400077ff:	js     0x140007875
   140007801:	and    al,0x78
   140007803:	add    BYTE PTR [rax],al
   140007805:	jo     0x140007807
   140007807:	add    al,cl
   140007809:	add    eax,DWORD PTR [rax]
   14000780b:	add    BYTE PTR [rsi],ch
   14000780d:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x352461
   140007815:	add    BYTE PTR [rax],al
   140007817:	add    al,cl
   140007819:	jae    0x14000781b
   14000781b:	add    BYTE PTR [rax],dl
   14000781d:	add    BYTE PTR [rax],al
   14000781f:	add    BYTE PTR [rsi],ch
   140007821:	xor    BYTE PTR [rax],dh
   140007823:	movsxd esp,DWORD PTR [rsi+0x67]
   140007826:	add    BYTE PTR [rax],al
   140007828:	fdiv   DWORD PTR [rbx+0x0]
   14000782b:	add    BYTE PTR [rax],cl
   14000782d:	add    BYTE PTR [rax],al
   14000782f:	add    BYTE PTR [rsi],ch
   140007831:	rex.XB push r10
   140007833:	push   rsp
   140007834:	and    al,0x58
   140007836:	rex.XB
   140007837:	add    BYTE PTR [r8],al
   14000783a:	add    BYTE PTR [rax],al
   14000783c:	loopne 0x1400078b1
   14000783e:	add    BYTE PTR [rax],al
   140007840:	or     BYTE PTR [rax],al
   140007842:	add    BYTE PTR [rax],al
   140007844:	cs rex.XB push r10
   140007847:	push   rsp
   140007848:	and    al,0x58
   14000784a:	rex.XB
   14000784b:	rex.B
   14000784c:	add    BYTE PTR [r8],al
   14000784f:	add    al,ch
   140007851:	jae    0x140007853
   140007853:	add    BYTE PTR [rax],cl
   140007855:	add    BYTE PTR [rax],al
   140007857:	add    BYTE PTR [rsi],ch
   140007859:	rex.XB push r10
   14000785b:	push   rsp
   14000785c:	and    al,0x58
   14000785e:	rex.XB pop r10
   140007860:	add    BYTE PTR [rax],al
   140007862:	add    BYTE PTR [rax],al
   140007864:	lock jae 0x140007867
   140007867:	add    BYTE PTR [rax],cl
   140007869:	add    BYTE PTR [rax],al
   14000786b:	add    BYTE PTR [rsi],ch
   14000786d:	rex.XB push r10
   14000786f:	push   rsp
   140007870:	and    al,0x58
   140007872:	rex.WB
   140007873:	add    BYTE PTR [r8],al
   140007876:	add    BYTE PTR [rax],al
   140007878:	clc    
   140007879:	jae    0x14000787b
   14000787b:	add    BYTE PTR [rax],cl
   14000787d:	add    BYTE PTR [rax],al
   14000787f:	add    BYTE PTR [rsi],ch
   140007881:	rex.XB push r10
   140007883:	push   rsp
   140007884:	and    al,0x58
   140007886:	rex.WB
   140007887:	rex.B
   140007888:	add    BYTE PTR [r8],al
   14000788b:	add    BYTE PTR [rax],al
   14000788d:	je     0x14000788f
   14000788f:	add    BYTE PTR [rax],cl
   140007891:	add    BYTE PTR [rax],al
   140007893:	add    BYTE PTR [rsi],ch
   140007895:	rex.XB push r10
   140007897:	push   rsp
   140007898:	and    al,0x58
   14000789a:	rex.WB pop r9
   14000789c:	add    BYTE PTR [rax],al
   14000789e:	add    BYTE PTR [rax],al
   1400078a0:	or     BYTE PTR [rax+rax*1+0x0],dh
   1400078a4:	or     BYTE PTR [rax],al
   1400078a6:	add    BYTE PTR [rax],al
   1400078a8:	cs rex.XB push r10
   1400078ab:	push   rsp
   1400078ac:	and    al,0x58
   1400078ae:	rex.WB pop r10
   1400078b0:	add    BYTE PTR [rax],al
   1400078b2:	add    BYTE PTR [rax],al
   1400078b4:	adc    BYTE PTR [rax+rax*1+0x0],dh
   1400078b8:	js     0x1400078ba
   1400078ba:	add    BYTE PTR [rax],al
   1400078bc:	imul   sp,WORD PTR cs:[ebx+esi*2+0x24],0x78
   1400078c5:	add    BYTE PTR [rax],al
   1400078c7:	add    BYTE PTR [rax+0x74],dl
   1400078cd:	add    eax,DWORD PTR [rax]
   1400078cf:	add    BYTE PTR [rsi],ch
   1400078d1:	jb     0x140007937
   1400078d3:	(bad)  
   1400078d4:	je     0x140007937
   1400078d6:	add    BYTE PTR [rax],al
   1400078d8:	nop
   1400078d9:	ja     0x1400078db
   1400078db:	add    BYTE PTR [rax+0x2e000002],dl
   1400078e1:	jb     0x140007947
   1400078e3:	(bad)  
   1400078e4:	je     0x140007947
   1400078e6:	and    al,0x7a
   1400078e8:	jp     0x140007964
   1400078ea:	fs (bad) 
   1400078ec:	add    BYTE PTR [eax],al
   1400078ef:	add    BYTE PTR [rax],ah
   1400078f1:	jp     0x1400078f3
   1400078f3:	add    al,dl
   1400078f5:	add    eax,DWORD PTR [rax]
   1400078f7:	add    BYTE PTR [rsi],ch
   1400078f9:	js     0x14000795f
   1400078fb:	(bad)  
   1400078fc:	je     0x14000795f
   1400078fe:	add    BYTE PTR [rax],al
   140007900:	lock jge 0x140007903
   140007903:	add    BYTE PTR [rax],ah
   140007905:	add    BYTE PTR [rax],al
   140007907:	add    BYTE PTR [rsi],ch
   140007909:	imul   esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3224
   140007912:	add    BYTE PTR [rax],al
   140007914:	adc    BYTE PTR [rsi+0x0],bh
   140007917:	add    BYTE PTR [rax],ah
   140007919:	add    BYTE PTR [rax],al
   14000791b:	add    BYTE PTR [rsi],ch
   14000791d:	imul   esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3324
   140007926:	add    BYTE PTR [rax],al
   140007928:	xor    BYTE PTR [rsi+0x0],bh
   14000792b:	add    BYTE PTR [rax],dl
   14000792d:	add    BYTE PTR [rax],al
   14000792f:	add    BYTE PTR [rsi],ch
   140007931:	imul   esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3424
   14000793a:	add    BYTE PTR [rax],al
   14000793c:	rex jle 0x14000793f
   14000793f:	add    BYTE PTR [rsi],cl
   140007941:	add    BYTE PTR [rax],al
   140007943:	add    BYTE PTR [rsi],ch
   140007945:	imul   esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3624
   14000794e:	add    BYTE PTR [rax],al
   140007950:	push   rax
   140007951:	jle    0x140007953
   140007953:	add    BYTE PTR [rax],dl
   140007955:	add    BYTE PTR [rax],al
   140007957:	add    BYTE PTR [rsi],ch
   140007959:	imul   esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3724
   140007962:	add    BYTE PTR [rax],al
   140007964:	(bad)  
   140007965:	jle    0x140007967
   140007967:	add    BYTE PTR [rcx+rax*1+0x692e0000],ah
   14000796e:	fs (bad) 
   140007970:	je     0x1400079d3
   140007972:	and    al,0x32
   140007974:	add    BYTE PTR [rax],al
   140007976:	add    BYTE PTR [rax],al
   140007978:	add    al,0x80
   14000797a:	add    BYTE PTR [rax],al
   14000797c:	adc    al,0x0
   14000797e:	add    BYTE PTR [rax],al
   140007980:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   140007989:	add    BYTE PTR [rax],al
   14000798b:	add    BYTE PTR [rax],bl
   14000798d:	add    BYTE PTR [rax],0x0
   140007990:	enter  0x3,0x0
   140007994:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x342461
   14000799d:	add    BYTE PTR [rax],al
   14000799f:	add    al,ah
   1400079a1:	add    DWORD PTR [rax],0x0
   1400079a4:	sub    cl,BYTE PTR [rcx]
   1400079a6:	add    BYTE PTR [rax],al
   1400079a8:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x362461
   1400079b1:	add    BYTE PTR [rax],al
   1400079b3:	add    BYTE PTR [rax],al
   1400079b5:	nop
   1400079b6:	add    BYTE PTR [rax],al
   1400079b8:	rol    BYTE PTR [rax],0x0
   1400079bb:	add    BYTE PTR [rsi],ch
   1400079bd:	fs (bad) 
   1400079bf:	je     0x140007a22
   1400079c1:	add    BYTE PTR [rax],al
   1400079c3:	add    al,al
   1400079c5:	nop
   1400079c6:	add    BYTE PTR [rax],al
   1400079c8:	enter  0x96,0x0
   1400079cc:	cs (bad) 
   1400079cf:	jae    0x1400079d1
   1400079d1:	add    BYTE PTR [rax],al
   1400079d3:	add    BYTE PTR [rax],al
   1400079d5:	xor    BYTE PTR [rcx],al
   1400079d7:	add    al,ch
   1400079d9:	add    al,BYTE PTR [rax]
   1400079db:	add    BYTE PTR [rsi],ch
   1400079dd:	jo     0x140007a43
   1400079df:	(bad)  
   1400079e0:	je     0x140007a43
   1400079e2:	add    BYTE PTR [rax],al
   1400079e4:	add    BYTE PTR [rax+0x1],al
   1400079e7:	add    BYTE PTR [rax],dl
   1400079e9:	add    BYTE PTR [rax],al
   1400079eb:	add    BYTE PTR [rsi],ch
   1400079ed:	imul   esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3524
   1400079f6:	add    BYTE PTR [rax],al
   1400079f8:	add    BYTE PTR [rax+0x1],dl
   1400079fb:	add    al,dh
   1400079fd:	add    BYTE PTR [rax],al
   1400079ff:	add    BYTE PTR [rsi],ch
   140007a01:	jb     0x140007a76
   140007a03:	jb     0x140007a68
   140007a05:	and    al,0x30
   140007a07:	xor    DWORD PTR [rax],eax
   140007a09:	add    BYTE PTR [rax],al
   140007a0b:	add    al,dh
   140007a0d:	push   rax
   140007a0e:	add    DWORD PTR [rax],eax
   140007a10:	adc    BYTE PTR [rdi],al
   140007a12:	add    BYTE PTR [rax],al
   140007a14:	cs jb  0x140007a8a
   140007a17:	jb     0x140007a7c
   140007a19:	and    al,0x30
   140007a1b:	xor    al,BYTE PTR [rax]
   140007a1d:	add    BYTE PTR [rax],al
   140007a1f:	add    BYTE PTR [rcx],al
   140007a21:	sbb    BYTE PTR [rdx],cl
   140007a23:	add    BYTE PTR [rax],bl
   140007a25:	or     eax,DWORD PTR fs:[rax]
   140007a28:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   140007a2c:	sbb    BYTE PTR [rax+rcx*1],dh
   140007a2f:	add    BYTE PTR [rax],bl
   140007a31:	xor    dl,BYTE PTR [rax+rsi*8]
   140007a34:	adc    ah,al
   140007a36:	adc    BYTE PTR [rax+0x1],dh
   140007a39:	adc    DWORD PTR [rsi],eax
   140007a3b:	add    BYTE PTR [rcx],dl
   140007a3d:	xor    al,0x8
   140007a3f:	add    BYTE PTR [rcx],dl
   140007a41:	xor    cl,BYTE PTR [rip+0xb600c70]        # 0x14b6086b7
   140007a47:	push   rax
   140007a48:	add    DWORD PTR [rip+0x34050002],eax        # 0x174057a50
   140007a4e:	add    DWORD PTR [rax],eax
   140007a50:	sbb    DWORD PTR [rdi],esi
   140007a52:	or     eax,0x53742600
   140007a57:	add    BYTE PTR [rsi],ah
   140007a59:	fs push rdx
   140007a5b:	add    BYTE PTR [rsi],ah
   140007a5d:	xor    al,0x51
   140007a5f:	add    BYTE PTR [rsi],ah
   140007a61:	add    DWORD PTR [rdx+0x0],ecx
   140007a64:	sbb    al,dh
   140007a66:	(bad)  
   140007a67:	loopne 0x140007a7d
   140007a69:	rcl    BYTE PTR [rdx],1
   140007a6b:	rcl    BYTE PTR [rax],0x50
   140007a6e:	add    BYTE PTR [rax],al
   140007a70:	jl     0x140007ad1
   140007a72:	add    BYTE PTR [rax],al
   140007a74:	add    al,BYTE PTR [rax]
   140007a77:	add    BYTE PTR [rcx],al
   140007a79:	sbb    DWORD PTR [rdx],ecx
   140007a7b:	add    BYTE PTR [rcx],bl
   140007a7d:	je     0x140007a8a
   140007a7f:	add    BYTE PTR [rcx],bl
   140007a81:	or     al,BYTE PTR fs:[rax]
   140007a84:	sbb    DWORD PTR [rcx+rcx*1+0x0],edx
   140007a88:	sbb    DWORD PTR [rax+rcx*1],esi
   140007a8b:	add    BYTE PTR [rcx],bl
   140007a8d:	push   rdx
   140007a8e:	adc    eax,0x72219f0
   140007a93:	add    BYTE PTR [rsp+rsi*1],dl
   140007a96:	sub    al,0x0
   140007a98:	adc    al,0x1
   140007a9a:	add    BYTE PTR es:[rax],cl
   140007a9d:	jo     0x140007aa6
   140007a9f:	(bad)  
   140007aa0:	(bad)  
   140007aa1:	push   rax
   140007aa2:	add    BYTE PTR [rax],al
   140007aa4:	jl     0x140007b05
   140007aa6:	add    BYTE PTR [rax],al
   140007aa8:	and    BYTE PTR [rcx],al
   140007aaa:	add    BYTE PTR [rax],al
   140007aac:	sbb    DWORD PTR [rsi],esp
   140007aae:	or     DWORD PTR [rax],eax
   140007ab0:	sbb    BYTE PTR [rsp+rsi*1],dh
   140007ab3:	add    BYTE PTR [rax],bl
   140007ab5:	add    DWORD PTR [rax+rax*1],ebp
   140007ab8:	or     al,0xf0
   140007aba:	or     ah,al
   140007abc:	or     BYTE PTR [rax+0x7],dh
   140007abf:	(bad)  
   140007ac0:	(bad)  
   140007ac1:	push   rax
   140007ac2:	add    BYTE PTR [rax],al
   140007ac4:	jl     0x140007b25
   140007ac6:	add    BYTE PTR [rax],al
   140007ac8:	push   rax
   140007ac9:	add    DWORD PTR [rax],eax
   140007acb:	add    BYTE PTR [rcx],cl
   140007acd:	adc    BYTE PTR [rsi],al
   140007acf:	add    BYTE PTR [rax],dl
   140007ad1:	push   rdx
   140007ad2:	or     al,0xf0
   140007ad4:	or     ah,al
   140007ad6:	or     BYTE PTR [rax+0x7],dh
   140007ad9:	(bad)  
   140007ada:	(bad)  
   140007adb:	xor    BYTE PTR [rsi],ah
   140007add:	pop    rsi
   140007ade:	add    BYTE PTR [rax],al
   140007ae0:	add    DWORD PTR [rax],eax
   140007ae2:	add    BYTE PTR [rax],al
   140007ae4:	(bad)  
   140007ae5:	sbb    eax,0x1e060000
   140007aea:	add    BYTE PTR [rax],al
   140007aec:	(bad)  
   140007aed:	(bad)  
   140007aee:	add    BYTE PTR [rax],al
   140007af0:	(bad)  
   140007af1:	(bad)  
   140007af2:	add    BYTE PTR [rax],al
   140007af4:	add    DWORD PTR [rsi],eax
   140007af6:	add    al,BYTE PTR [rax]
   140007af8:	(bad)  
   140007af9:	xor    al,BYTE PTR [rdx]
   140007afb:	push   rax
   140007afc:	add    DWORD PTR [rax],ebx
   140007afe:	or     al,BYTE PTR [rax]
   140007b00:	sbb    BYTE PTR [rdx+rcx*1+0x0],ah
   140007b04:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   140007b08:	sbb    BYTE PTR [rax+rcx*1],dh
   140007b0b:	add    BYTE PTR [rax],bl
   140007b0d:	xor    dl,BYTE PTR [rax+rsi*8]
   140007b10:	adc    ah,al
   140007b12:	adc    BYTE PTR [rax+0x19],dh
   140007b15:	xor    BYTE PTR [rbx],cl
   140007b17:	add    BYTE PTR [rdi],bl
   140007b19:	xor    al,0xc9
   140007b1b:	add    BYTE PTR [rdi],bl
   140007b1d:	add    eax,eax
   140007b1f:	add    BYTE PTR [rax],dl
   140007b21:	lock (bad) 
   140007b23:	loopne 0x140007b31
   140007b25:	ror    BYTE PTR [rdx],1
   140007b27:	ror    BYTE PTR [rax],0x70
   140007b2a:	(bad)  
   140007b2b:	(bad)  
   140007b2c:	(bad)  
   140007b2d:	push   rax
   140007b2e:	add    BYTE PTR [rax],al
   140007b30:	jl     0x140007b91
   140007b32:	add    BYTE PTR [rax],al
   140007b34:	lock add eax,0x6010000
   140007b3a:	add    al,BYTE PTR [rax]
   140007b3c:	(bad)  
   140007b3d:	xor    al,BYTE PTR [rdx]
   140007b3f:	xor    BYTE PTR [rcx],al
   140007b41:	or     al,BYTE PTR [rdx]
   140007b43:	add    BYTE PTR [rdx],cl
   140007b45:	xor    al,BYTE PTR [rsi]
   140007b47:	xor    BYTE PTR [rcx],al
   140007b49:	sbb    DWORD PTR [rdx],ecx
   140007b4b:	add    BYTE PTR [rcx],bl
   140007b4d:	je     0x140007b58
   140007b4f:	add    BYTE PTR [rcx],bl
   140007b51:	or     BYTE PTR fs:[rax],al
   140007b54:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   140007b58:	sbb    DWORD PTR [rsi+rax*1],esi
   140007b5b:	add    BYTE PTR [rcx],bl
   140007b5d:	xor    dl,BYTE PTR [rip+0x60f01e0]        # 0x1460f7d43
   140007b63:	add    BYTE PTR [rdi],cl
   140007b65:	fs (bad) 
   140007b67:	add    BYTE PTR [rdi],cl
   140007b69:	xor    al,0x6
   140007b6b:	add    BYTE PTR [rdi],cl
   140007b6d:	xor    cl,BYTE PTR [rbx]
   140007b6f:	jo     0x140007b72
   140007b71:	adc    cl,BYTE PTR [rax]
   140007b73:	add    BYTE PTR [rdx],dl
   140007b75:	push   rsp
   140007b76:	or     DWORD PTR [rax],eax
   140007b78:	adc    dh,BYTE PTR [rax+rcx*1]
   140007b7b:	add    BYTE PTR [rdx],dl
   140007b7d:	xor    cl,BYTE PTR [rsi]
   140007b7f:	loopne 0x140007b8d
   140007b81:	jo     0x140007b8e
   140007b83:	(bad)  
   140007b84:	add    DWORD PTR [rcx],ebx
   140007b86:	or     DWORD PTR [rax],eax
   140007b88:	sbb    DWORD PTR [rdx+0x15],eax
   140007b8b:	lock adc esp,eax
   140007b8e:	adc    eax,edx
   140007b90:	xadd   BYTE PTR [rip+0xb600c70],cl        # 0x14b608807
   140007b97:	push   rax
   140007b98:	or     dh,BYTE PTR [rax]
   140007b9a:	add    BYTE PTR [rax],al
   140007b9c:	add    DWORD PTR [rcx],ebx
   140007b9e:	or     al,BYTE PTR [rax]
   140007ba0:	sbb    DWORD PTR [rcx+rcx*1+0x0],esi
   140007ba4:	sbb    DWORD PTR [rax+rcx*1+0x0],esp
   140007ba8:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   140007bac:	sbb    DWORD PTR [rsi+rax*1],esi
   140007baf:	add    BYTE PTR [rcx],bl
   140007bb1:	xor    dl,BYTE PTR [rip+0x92419f0]        # 0x1492495a7
   140007bb7:	add    BYTE PTR [rdx],dl
   140007bb9:	add    DWORD PTR [rax+0x0],ebp
   140007bbc:	or     esi,eax
   140007bbe:	or     eax,esp
   140007bc0:	(bad)  
   140007bc1:	rol    BYTE PTR [rip+0x3600470],1        # 0x143608037
   140007bc7:	push   rax
   140007bc8:	add    dh,BYTE PTR [rax]
   140007bca:	add    BYTE PTR [rax],al
   140007bcc:	jl     0x140007c2d
   140007bce:	add    BYTE PTR [rax],al
   140007bd0:	xor    BYTE PTR [rbx],al
   140007bd2:	add    BYTE PTR [rax],al
   140007bd4:	add    DWORD PTR [rax+rcx*1],edx
   140007bd7:	add    BYTE PTR [rsp+riz*2],dl
   140007bda:	or     BYTE PTR [rax],al
   140007bdc:	adc    al,0x54
   140007bde:	(bad)  
   140007bdf:	add    BYTE PTR [rsp+rsi*1],dl
   140007be2:	(bad)  
   140007be3:	add    BYTE PTR [rdx+rsi*1],dl
   140007be6:	adc    BYTE PTR [rax+0x1],dh
   140007be9:	or     al,BYTE PTR [rax+rax*1]
   140007bec:	or     dh,BYTE PTR [rdx+rcx*1]
   140007bef:	add    BYTE PTR [rdx],cl
   140007bf1:	jb     0x140007bf9
   140007bf3:	jo     0x140007bf6
   140007bf5:	add    al,0x1
   140007bf7:	add    BYTE PTR [rdx+rax*2],al
   140007bfa:	add    BYTE PTR [rax],al
   140007bfc:	sbb    DWORD PTR [rcx+rcx*1],esp
   140007bff:	add    BYTE PTR [rdx],dl
   140007c01:	add    DWORD PTR [rdx+0x0],ecx
   140007c04:	or     esi,eax
   140007c06:	or     eax,esp
   140007c08:	(bad)  
   140007c09:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x143608080
   140007c10:	add    dh,BYTE PTR [rax]
   140007c12:	add    BYTE PTR [rax],al
   140007c14:	jl     0x140007c75
   140007c16:	add    BYTE PTR [rax],al
   140007c18:	add    al,BYTE PTR [rax]
   140007c1b:	add    BYTE PTR [rcx],al
   140007c1d:	and    DWORD PTR [rdx],ecx
   140007c1f:	add    BYTE PTR [rcx],ah
   140007c21:	je     0x140007c2e
   140007c23:	add    BYTE PTR [rcx],ah
   140007c25:	or     al,BYTE PTR fs:[rax]
   140007c28:	and    DWORD PTR [rcx+rcx*1+0x0],edx
   140007c2c:	and    DWORD PTR [rax+rcx*1],esi
   140007c2f:	add    BYTE PTR [rcx],ah
   140007c31:	push   rdx
   140007c32:	sbb    eax,0x40a01e0
   140007c37:	add    BYTE PTR [rdx],cl
   140007c39:	xor    al,0x8
   140007c3b:	add    BYTE PTR [rdx],cl
   140007c3d:	push   rdx
   140007c3e:	(bad)  
   140007c3f:	jo     0x140007c5a
   140007c41:	sub    DWORD PTR [rbx],ecx
   140007c43:	add    BYTE PTR [rdi],dl
   140007c45:	xor    al,0x37
   140007c47:	add    BYTE PTR [rdi],dl
   140007c49:	add    DWORD PTR [rax+rax*1],ebp
   140007c4c:	adc    al,dh
   140007c4e:	(bad)  
   140007c4f:	loopne 0x140007c5d
   140007c51:	ror    BYTE PTR [rdx],1
   140007c53:	ror    BYTE PTR [rax],0x70
   140007c56:	(bad)  
   140007c57:	(bad)  
   140007c58:	(bad)  
   140007c59:	push   rax
   140007c5a:	add    BYTE PTR [rax],al
   140007c5c:	jl     0x140007cbd
   140007c5e:	add    BYTE PTR [rax],al
   140007c60:	push   rax
   140007c61:	add    DWORD PTR [rax],eax
   140007c63:	add    BYTE PTR [rcx],bl
   140007c65:	or     al,BYTE PTR es:[rax]
   140007c68:	adc    al,0x1
   140007c6a:	sub    eax,DWORD PTR [rax]
   140007c6c:	or     eax,0x9e00bf0
   140007c71:	rol    BYTE PTR [rdi],1
   140007c73:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x1436080ea
   140007c7a:	add    dh,BYTE PTR [rax]
   140007c7c:	jl     0x140007cdd
   140007c7e:	add    BYTE PTR [rax],al
   140007c80:	rex add DWORD PTR [rax],eax
   140007c83:	add    BYTE PTR [rcx],bl
   140007c85:	and    ecx,DWORD PTR [rax]
   140007c87:	add    BYTE PTR [rsp+rsi*1],dl
   140007c8a:	sbb    DWORD PTR [rax],eax
   140007c8c:	adc    al,0xf2
   140007c8e:	or     eax,0x9e00bf0
   140007c93:	rol    BYTE PTR [rdi],0x70
   140007c96:	(bad)  
   140007c97:	(bad)  
   140007c98:	or     al,0x60
   140007c9a:	add    BYTE PTR [rax],al
   140007c9c:	add    DWORD PTR [rax],eax
   140007c9e:	add    BYTE PTR [rax],al
   140007ca0:	adc    bh,BYTE PTR [rip+0x3d400000]        # 0x17d407ca6
   140007ca6:	add    BYTE PTR [rax],al
   140007ca8:	xchg   BYTE PTR [rcx+0x0],ah
   140007cab:	add    al,dl
   140007cad:	cmp    eax,0x790000
   140007cb2:	add    BYTE PTR [rax],al
   140007cb4:	add    DWORD PTR [rsi],eax
   140007cb6:	add    al,BYTE PTR [rax]
   140007cb8:	(bad)  
   140007cb9:	push   rdx
   140007cba:	add    dl,BYTE PTR [rax+0x19]
   140007cbd:	xor    BYTE PTR [rbx],cl
   140007cbf:	add    BYTE PTR [rdi],bl
   140007cc1:	xor    al,0xce
   140007cc3:	add    BYTE PTR [rdi],bl
   140007cc5:	add    esp,eax
   140007cc7:	add    BYTE PTR [rax],dl
   140007cc9:	lock (bad) 
   140007ccb:	loopne 0x140007cd9
   140007ccd:	ror    BYTE PTR [rdx],1
   140007ccf:	ror    BYTE PTR [rax],0x70
   140007cd2:	(bad)  
   140007cd3:	(bad)  
   140007cd4:	(bad)  
   140007cd5:	push   rax
   140007cd6:	add    BYTE PTR [rax],al
   140007cd8:	jl     0x140007d39
   140007cda:	add    BYTE PTR [rax],al
   140007cdc:	adc    BYTE PTR [rsi],al
   140007cde:	add    BYTE PTR [rax],al
   140007ce0:	add    DWORD PTR [rdi],ecx
   140007ce2:	(bad)  
   140007ce3:	add    BYTE PTR [rdi],cl
   140007ce5:	or     BYTE PTR fs:[rax],al
   140007ce8:	sysenter 
   140007cea:	(bad)  
   140007ceb:	add    BYTE PTR [rdi],cl
   140007ced:	xor    cl,BYTE PTR [rbx]
   140007cef:	jo     0x140007cf2
   140007cf1:	sbb    eax,0x741d000c
   140007cf6:	or     eax,DWORD PTR [rax]
   140007cf8:	sbb    eax,0x1d000a64
   140007cfd:	push   rsp
   140007cfe:	or     DWORD PTR [rax],eax
   140007d00:	sbb    eax,0x1d000834
   140007d05:	xor    bl,BYTE PTR [rcx]
   140007d07:	lock (bad) 
   140007d09:	loopne 0x140007d20
   140007d0b:	rol    BYTE PTR [rcx],0x14
   140007d0e:	or     al,BYTE PTR [rax]
   140007d10:	adc    al,0x34
   140007d12:	or     eax,0x10321400
   140007d17:	lock (bad) 
   140007d19:	loopne 0x140007d27
   140007d1b:	ror    BYTE PTR [rdx],1
   140007d1d:	ror    BYTE PTR [rax],0x70
   140007d20:	(bad)  
   140007d21:	(bad)  
   140007d22:	(bad)  
   140007d23:	push   rax
   140007d24:	sbb    DWORD PTR [rip+0x1240004],esi        # 0x141247d2e
   140007d2a:	or     eax,0xf301006
   140007d2f:	push   rax
   140007d30:	jl     0x140007d91
   140007d32:	add    BYTE PTR [rax],al
   140007d34:	push   rax
   140007d35:	xor    BYTE PTR [rax],al
   140007d37:	add    BYTE PTR [rcx],al
   140007d39:	add    al,0x1
   140007d3b:	add    BYTE PTR [rdx+riz*2],al
   140007d3e:	add    BYTE PTR [rax],al
   140007d40:	or     DWORD PTR [rcx],ebx
   140007d42:	or     al,BYTE PTR [rax]
   140007d44:	sbb    esp,eax
   140007d46:	or     eax,DWORD PTR [rax]
   140007d48:	sbb    DWORD PTR [rdx+rcx*1+0x0],esi
   140007d4c:	sbb    DWORD PTR [rcx+rcx*1+0x0],esp
   140007d50:	sbb    DWORD PTR [rax+rcx*1],esi
   140007d53:	add    BYTE PTR [rcx],bl
   140007d55:	push   rdx
   140007d56:	adc    eax,0x5e26e0
   140007d5b:	add    BYTE PTR [rcx],al
   140007d5d:	add    BYTE PTR [rax],al
   140007d5f:	add    BYTE PTR [rcx],ch
   140007d61:	push   rsi
   140007d62:	add    BYTE PTR [rax],al
   140007d64:	(bad)  
   140007d65:	push   rdi
   140007d66:	add    BYTE PTR [rax],al
   140007d68:	lods   al,BYTE PTR ds:[rsi]
   140007d69:	(bad)  
   140007d6a:	add    BYTE PTR [rax],al
   140007d6c:	(bad)  
   140007d6d:	push   rdi
   140007d6e:	add    BYTE PTR [rax],al
   140007d70:	add    DWORD PTR [rax],eax
   140007d72:	add    BYTE PTR [rax],al
   140007d74:	add    DWORD PTR [rcx+rax*1],eax
   140007d77:	add    BYTE PTR [rdx+riz*8],al
   140007d7a:	add    BYTE PTR [rax],al
   140007d7c:	add    DWORD PTR [rdx+rax*1],ecx
   140007d7f:	add    BYTE PTR [rcx+rax*1],cl
   140007d82:	adc    DWORD PTR [rax],eax
   140007d84:	or     DWORD PTR [rcx+rax*1],eax
   140007d87:	add    BYTE PTR [rdx+riz*1],al
   140007d8a:	add    BYTE PTR [rax],al
   140007d8c:	es pop rsi
   140007d8e:	add    BYTE PTR [rax],al
   140007d90:	add    DWORD PTR [rax],eax
   140007d92:	add    BYTE PTR [rax],al
   140007d94:	lods   al,BYTE PTR ds:[rsi]
   140007d95:	pop    rbx
   140007d96:	add    BYTE PTR [rax],al
   140007d98:	loop   0x140007df5
   140007d9a:	add    BYTE PTR [rax],al
   140007d9c:	add    DWORD PTR [rax],eax
   140007d9e:	add    BYTE PTR [rax],al
   140007da0:	loop   0x140007dfd
   140007da2:	add    BYTE PTR [rax],al
   140007da4:	or     DWORD PTR [rdx],ecx
   140007da6:	add    al,0x0
   140007da8:	or     dh,BYTE PTR [rsi+rax*1]
   140007dab:	add    BYTE PTR [rdx],cl
   140007dad:	xor    al,BYTE PTR [rsi]
   140007daf:	jo     0x140007dd7
   140007db1:	pop    rsi
   140007db2:	add    BYTE PTR [rax],al
   140007db4:	add    DWORD PTR [rax],eax
   140007db6:	add    BYTE PTR [rax],al
   140007db8:	lods   eax,DWORD PTR ds:[rsi]
   140007db9:	pop    rsp
   140007dba:	add    BYTE PTR [rax],al
   140007dbc:	loopne 0x140007e1a
   140007dbe:	add    BYTE PTR [rax],al
   140007dc0:	(bad)  
   140007dc1:	(bad)  
   140007dc2:	add    BYTE PTR [rax],al
   140007dc4:	loopne 0x140007e22
   140007dc6:	add    BYTE PTR [rax],al
   140007dc8:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x1740d7dd2
   140007dce:	or     DWORD PTR [rax],eax
   140007dd0:	or     eax,0x500632
   140007dd5:	add    BYTE PTR [rax],al
   140007dd7:	add    BYTE PTR [rcx],al
   140007dd9:	add    BYTE PTR [rax],al
   140007ddb:	add    BYTE PTR [rcx],al
   140007ddd:	sbb    BYTE PTR [rcx],al
   140007ddf:	add    BYTE PTR [rax],bl
   140007de1:	ret    0x0
   140007de4:	add    BYTE PTR [rax],al
   140007de6:	add    BYTE PTR [rax],al
   140007de8:	add    DWORD PTR [rcx+rax*1],eax
   140007deb:	add    BYTE PTR [rdx+rdx*1],al
   140007dee:	add    BYTE PTR [rax],al
   140007df0:	add    DWORD PTR [rax],eax
   140007df2:	add    BYTE PTR [rax],al
   140007df4:	movabs al,ds:0x9670000074
   140007dfd:	rex add DWORD PTR [rax],eax
   140007e00:	xor    BYTE PTR [rsi+0x0],bh
   140007e03:	add    BYTE PTR [rax+0x7e],dl
	...
   140007e2e:	add    BYTE PTR [rax],al
   140007e30:	rex jle 0x140007e33
	...
   140007e3f:	add    BYTE PTR [rax],al
   140007e41:	add    BYTE PTR [rbx+0x68],al
   140007e44:	(bad)  
   140007e45:	jb     0x140007e9b
   140007e47:	outs   dx,DWORD PTR ds:[rsi]
   140007e48:	rex.WRXB
   140007e49:	gs ins DWORD PTR es:[rdi],dx
   140007e4b:	add    BYTE PTR [r8],al
	...
   140007e5e:	add    BYTE PTR [rax],al
   140007e60:	adc    BYTE PTR [rdx+0x0],al
   140007e66:	add    BYTE PTR [rax],al
   140007e68:	add    BYTE PTR [rax],al
   140007e6a:	add    BYTE PTR [rax],al
   140007e6c:	hlt    
   140007e6d:	test   DWORD PTR [rax],eax
   140007e6f:	add    al,bh
   140007e71:	jno    0x140007e73
   140007e73:	add    BYTE PTR [rax+0x83],ch
   140007e79:	add    BYTE PTR [rax],al
   140007e7b:	add    BYTE PTR [rax],al
   140007e7d:	add    BYTE PTR [rax],al
   140007e7f:	add    BYTE PTR [rax-0x6fffff7a],dl
   140007e85:	jae    0x140007e87
   140007e87:	add    BYTE PTR [rax+0x80],dl
   140007e8d:	add    BYTE PTR [rax],al
   140007e8f:	add    BYTE PTR [rax],al
   140007e91:	add    BYTE PTR [rax],al
   140007e93:	add    BYTE PTR [rsi+0x78000089],ch
   140007e99:	jo     0x140007e9b
   140007e9b:	add    BYTE PTR [rax+0x81],al
   140007ea1:	add    BYTE PTR [rax],al
   140007ea3:	add    BYTE PTR [rax],al
   140007ea5:	add    BYTE PTR [rax],al
   140007ea7:	add    dh,cl
   140007ea9:	mov    DWORD PTR [rax],eax
   140007eab:	add    BYTE PTR [rax+0x71],ch
   140007eae:	add    BYTE PTR [rax],al
   140007eb0:	add    QWORD PTR [rax],0x0
   140007eb7:	add    BYTE PTR [rax],al
   140007eb9:	add    BYTE PTR [rax],al
   140007ebb:	add    al,bh
   140007ebd:	mov    DWORD PTR [rax],eax
   140007ebf:	add    BYTE PTR [rax],dh
   140007ec1:	jno    0x140007ec3
   140007ec3:	add    BYTE PTR [rax-0x80],al
	...
   140007ece:	add    BYTE PTR [rax],al
   140007ed0:	sbb    cl,BYTE PTR [rdx+0x70280000]
   140007ed6:	add    BYTE PTR [rax],al
   140007ed8:	sub    BYTE PTR [rcx+0x0],al
   140007ede:	add    BYTE PTR [rax],al
   140007ee0:	add    BYTE PTR [rax],al
   140007ee2:	add    BYTE PTR [rax],al
   140007ee4:	mov    al,BYTE PTR ds:[rax]
   140007ee7:	add    BYTE PTR [rax],dl
   140007ee9:	jno    0x140007eeb
   140007eeb:	add    al,dl
   140007eed:	add    DWORD PTR [rax],0x0
   140007ef3:	add    BYTE PTR [rax],al
   140007ef5:	add    BYTE PTR [rax],al
   140007ef7:	add    BYTE PTR [rsi-0x76],ah
   140007efa:	add    BYTE PTR [rax],al
   140007efc:	mov    eax,0x28000071
   140007f01:	add    BYTE PTR [rax],0x0
	...
   140007f0c:	mov    BYTE PTR [rdx+0x70100000],cl
   140007f12:	add    BYTE PTR [rax],al
   140007f14:	(bad)  
   140007f15:	add    DWORD PTR [rax],0x0
   140007f1b:	add    BYTE PTR [rax],al
   140007f1d:	add    BYTE PTR [rax],al
   140007f1f:	add    BYTE PTR [rdx+rcx*4+0x71480000],ch
   140007f26:	add    BYTE PTR [rax],al
   140007f28:	jo     0x140007eaa
	...
   140007f32:	add    BYTE PTR [rax],al
   140007f34:	fimul  DWORD PTR [rdx+0x70580000]
   140007f3a:	add    BYTE PTR [rax],al
   140007f3c:	fadd   DWORD PTR [rax+0x0]
   140007f42:	add    BYTE PTR [rax],al
   140007f44:	add    BYTE PTR [rax],al
   140007f46:	add    BYTE PTR [rax],al
   140007f48:	add    al,0x8b
   140007f4a:	add    BYTE PTR [rax],al
   140007f4c:	shl    BYTE PTR [rax+0x0],0x0
   140007f50:	clc    
   140007f51:	add    BYTE PTR [rax],0x0
	...
   140007f5c:	and    al,0x8b
   140007f5e:	add    BYTE PTR [rax],al
   140007f60:	loopne 0x140007fd2
   140007f62:	add    BYTE PTR [rax],al
   140007f64:	call   0x140007fe9
   140007f69:	add    BYTE PTR [rax],al
   140007f6b:	add    BYTE PTR [rax],al
   140007f6d:	add    BYTE PTR [rax],al
   140007f6f:	add    BYTE PTR [rbx+rcx*4+0x0],al
   140007f73:	add    al,dl
   140007f75:	jo     0x140007f77
   140007f77:	add    BYTE PTR [rax],bl
   140007f79:	add    DWORD PTR [rax],0x0
   140007f7f:	add    BYTE PTR [rax],al
   140007f81:	add    BYTE PTR [rax],al
   140007f83:	add    BYTE PTR [rsi-0x75],ah
   140007f86:	add    BYTE PTR [rax],al
   140007f88:	add    BYTE PTR [rcx+0x0],dh
   140007f8b:	add    BYTE PTR [rax+0x81],dh
   140007f91:	add    BYTE PTR [rax],al
   140007f93:	add    BYTE PTR [rax],al
   140007f95:	add    BYTE PTR [rax],al
   140007f97:	add    BYTE PTR [rax-0x67ffff75],dl
   140007f9d:	jno    0x140007f9f
   140007f9f:	add    al,bh
   140007fa1:	add    DWORD PTR [rax],0x0
   140007fa7:	add    BYTE PTR [rax],al
   140007fa9:	add    BYTE PTR [rax],al
   140007fab:	add    BYTE PTR [rbx+rcx*4+0x71e00000],dh
   140007fb2:	add    BYTE PTR [rax],al
   140007fb4:	or     BYTE PTR [rcx+0x0],al
   140007fba:	add    BYTE PTR [rax],al
   140007fbc:	add    BYTE PTR [rax],al
   140007fbe:	add    BYTE PTR [rax],al
   140007fc0:	out    dx,al
   140007fc1:	mov    eax,DWORD PTR [rax]
   140007fc3:	add    al,dh
   140007fc5:	jo     0x140007fc7
   140007fc7:	add    al,al
   140007fc9:	add    DWORD PTR [rax],0x0
   140007fcf:	add    BYTE PTR [rax],al
   140007fd1:	add    BYTE PTR [rax],al
   140007fd3:	add    BYTE PTR [rsi],ah
   140007fd5:	mov    WORD PTR [rax],es
   140007fd7:	add    BYTE PTR [rax+0x58000071],ch
   140007fdd:	add    BYTE PTR [rax],0x0
	...
   140007fe8:	nop
   140007fe9:	mov    WORD PTR [rax],es
   140007feb:	add    BYTE PTR [rax+0x70],al
   140007fee:	add    BYTE PTR [rax],al
   140007ff0:	sbb    BYTE PTR [rax+0x0],al
   140007ff6:	add    BYTE PTR [rax],al
   140007ff8:	add    BYTE PTR [rax],al
   140007ffa:	add    BYTE PTR [rax],al
   140007ffc:	ror    BYTE PTR [rax+rax*1+0x700000],cl
	...
   140008017:	add    BYTE PTR [rsi+0x8c],dh
	...
   140008025:	add    BYTE PTR [rax],al
   140008027:	add    BYTE PTR [rdi+rax*4+0x0],dh
   14000802e:	add    BYTE PTR [rax],al
   140008030:	ins    BYTE PTR es:[rdi],dx
   140008031:	mov    BYTE PTR [rax],al
	...
   14000803f:	add    BYTE PTR [rsi-0x78],cl
   140008042:	add    BYTE PTR [rax],al
   140008044:	add    BYTE PTR [rax],al
   140008046:	add    BYTE PTR [rax],al
   140008048:	adc    al,0x87
	...
   140008056:	add    BYTE PTR [rax],al
   140008058:	(bad)  
   140008059:	mov    WORD PTR [rax],es
   14000805b:	add    BYTE PTR [rax],al
   14000805d:	add    BYTE PTR [rax],al
   14000805f:	add    BYTE PTR [rax-0x74],bh
	...
   14000806e:	add    BYTE PTR [rax],al
   140008070:	enter  0x88,0x0
   140008074:	add    BYTE PTR [rax],al
   140008076:	add    BYTE PTR [rax],al
   140008078:	in     al,0x88
   14000807a:	add    BYTE PTR [rax],al
   14000807c:	add    BYTE PTR [rax],al
   14000807e:	add    BYTE PTR [rax],al
   140008080:	adc    cl,BYTE PTR [rax+0x0]
	...
   14000808e:	add    BYTE PTR [rax],al
   140008090:	push   0x87
   140008095:	add    BYTE PTR [rax],al
   140008097:	add    dh,dl
   140008099:	xchg   BYTE PTR [rax],al
   14000809b:	add    BYTE PTR [rax],al
   14000809d:	add    BYTE PTR [rax],al
   14000809f:	add    BYTE PTR [rdx+0x86],bl
   1400080a5:	add    BYTE PTR [rax],al
   1400080a7:	add    BYTE PTR [rax-0x79],al
   1400080aa:	add    BYTE PTR [rax],al
   1400080ac:	add    BYTE PTR [rax],al
   1400080ae:	add    BYTE PTR [rax],al
   1400080b0:	test   al,0x87
   1400080b2:	add    BYTE PTR [rax],al
   1400080b4:	add    BYTE PTR [rax],al
   1400080b6:	add    BYTE PTR [rax],al
   1400080b8:	in     al,0x86
   1400080ba:	add    BYTE PTR [rax],al
   1400080bc:	add    BYTE PTR [rax],al
   1400080be:	add    BYTE PTR [rax],al
   1400080c0:	mov    eax,0x86
   1400080c5:	add    BYTE PTR [rax],al
   1400080c7:	add    BYTE PTR [rsi+rax*4+0x0],ch
	...
   1400080d6:	add    BYTE PTR [rax],al
   1400080d8:	cmp    cl,BYTE PTR [rax+0x0]
	...
   1400080e6:	add    BYTE PTR [rax],al
   1400080e8:	mov    dl,0x88
	...
   1400080f6:	add    BYTE PTR [rax],al
   1400080f8:	test   BYTE PTR [rax+0x0],cl
	...
   140008106:	add    BYTE PTR [rax],al
   140008108:	fmul   DWORD PTR [rbx+0x0]
	...
   140008116:	add    BYTE PTR [rax],al
   140008118:	sub    cl,BYTE PTR [rcx+0x0]
	...
   140008126:	add    BYTE PTR [rax],al
   140008128:	xchg   esi,eax
   140008129:	xchg   DWORD PTR [rax],eax
   14000812b:	add    BYTE PTR [rax],al
   14000812d:	add    BYTE PTR [rax],al
   14000812f:	add    BYTE PTR [rsi],ch
   140008131:	xchg   DWORD PTR [rax],eax
   140008133:	add    BYTE PTR [rax],al
   140008135:	add    BYTE PTR [rax],al
   140008137:	add    dl,dh
   140008139:	xchg   DWORD PTR [rax],eax
	...
   140008147:	add    BYTE PTR [rdx],al
   140008149:	xchg   DWORD PTR [rax],eax
   14000814b:	add    BYTE PTR [rax],al
   14000814d:	add    BYTE PTR [rax],al
   14000814f:	add    dl,dh
   140008151:	xchg   BYTE PTR [rax],al
	...
   14000815f:	add    dl,ah
   140008161:	xchg   DWORD PTR [rax],eax
   140008163:	add    BYTE PTR [rax],al
   140008165:	add    BYTE PTR [rax],al
   140008167:	add    dl,cl
   140008169:	xchg   DWORD PTR [rax],eax
   14000816b:	add    BYTE PTR [rax],al
   14000816d:	add    BYTE PTR [rax],al
   14000816f:	add    BYTE PTR [rdx+0x88],bl
	...
   14000817d:	add    BYTE PTR [rax],al
   14000817f:	add    al,cl
   140008181:	xchg   BYTE PTR [rax],al
   140008183:	add    BYTE PTR [rax],al
   140008185:	add    BYTE PTR [rax],al
   140008187:	add    BYTE PTR [rax-0x77],bl
   14000818a:	add    BYTE PTR [rax],al
   14000818c:	add    BYTE PTR [rax],al
   14000818e:	add    BYTE PTR [rax],al
   140008190:	outs   dx,BYTE PTR ds:[rsi]
   140008191:	mov    DWORD PTR [rax],eax
   140008193:	add    BYTE PTR [rax],al
   140008195:	add    BYTE PTR [rax],al
   140008197:	add    BYTE PTR [rsi],dl
   140008199:	mov    DWORD PTR [rax],eax
   14000819b:	add    BYTE PTR [rax],al
   14000819d:	add    BYTE PTR [rax],al
   14000819f:	add    BYTE PTR [rdx],al
   1400081a1:	mov    DWORD PTR [rax],eax
	...
   1400081af:	add    BYTE PTR [rsi],bh
   1400081b1:	mov    DWORD PTR [rax],eax
	...
   1400081bf:	add    BYTE PTR [rdx],bl
   1400081c1:	mov    WORD PTR [rax],es
	...
   1400081cf:	add    BYTE PTR [rdi+rax*4+0x0],cl
   1400081d3:	add    BYTE PTR [rax],al
   1400081d5:	add    BYTE PTR [rax],al
   1400081d7:	add    BYTE PTR [rsi-0x79],bh
   1400081da:	add    BYTE PTR [rax],al
   1400081dc:	add    BYTE PTR [rax],al
   1400081de:	add    BYTE PTR [rax],al
   1400081e0:	ror    BYTE PTR [rax+0x0],0x0
   1400081e7:	add    BYTE PTR [rdx],ah
   1400081e9:	mov    BYTE PTR [rax],al
	...
   1400081f7:	add    BYTE PTR [rcx+rcx*4+0x0],al
   1400081fe:	add    BYTE PTR [rax],al
   140008200:	sahf   
   140008201:	mov    DWORD PTR [rax],eax
	...
   14000820f:	add    al,ah
   140008211:	add    DWORD PTR [rax],0x0
   140008214:	add    BYTE PTR [rax],al
   140008216:	add    BYTE PTR [rax],al
   140008218:	pushf  
   140008219:	test   DWORD PTR [rax],eax
   14000821b:	add    BYTE PTR [rax],al
   14000821d:	add    BYTE PTR [rax],al
   14000821f:	add    BYTE PTR [rbp+rax*4+0x0],dl
   140008226:	add    BYTE PTR [rax],al
   140008228:	(bad)  
   140008229:	test   DWORD PTR [rax],eax
   14000822b:	add    BYTE PTR [rax],al
   14000822d:	add    BYTE PTR [rax],al
   14000822f:	add    BYTE PTR [rdx-0x7b],dh
   140008232:	add    BYTE PTR [rax],al
   140008234:	add    BYTE PTR [rax],al
   140008236:	add    BYTE PTR [rax],al
   140008238:	test   DWORD PTR fs:[rax],eax
   14000823b:	add    BYTE PTR [rax],al
   14000823d:	add    BYTE PTR [rax],al
   14000823f:	add    BYTE PTR [rsi-0x7b],dl
   140008242:	add    BYTE PTR [rax],al
   140008244:	add    BYTE PTR [rax],al
   140008246:	add    BYTE PTR [rax],al
   140008248:	rex.WX test QWORD PTR [rax],rax
   14000824b:	add    BYTE PTR [rax],al
   14000824d:	add    BYTE PTR [rax],al
   14000824f:	add    BYTE PTR [rsi+0x85],ah
   140008255:	add    BYTE PTR [rax],al
   140008257:	add    BYTE PTR [rax-0x7b],al
   14000825a:	add    BYTE PTR [rax],al
   14000825c:	add    BYTE PTR [rax],al
   14000825e:	add    BYTE PTR [rax],al
   140008260:	mov    edx,0x85
   140008265:	add    BYTE PTR [rax],al
   140008267:	add    BYTE PTR [rdx],dh
   140008269:	test   DWORD PTR [rax],eax
   14000826b:	add    BYTE PTR [rax],al
   14000826d:	add    BYTE PTR [rax],al
   14000826f:	add    BYTE PTR [rsi],ah
   140008271:	test   DWORD PTR [rax],eax
   140008273:	add    BYTE PTR [rax],al
   140008275:	add    BYTE PTR [rax],al
   140008277:	add    BYTE PTR [rax*4+0x0],bl
   14000827e:	add    BYTE PTR [rax],al
   140008280:	adc    al,BYTE PTR [rbp+0x0]
   140008286:	add    BYTE PTR [rax],al
   140008288:	or     al,BYTE PTR [rbp+0x0]
   14000828e:	add    BYTE PTR [rax],al
   140008290:	add    BYTE PTR [rbp+0x0],al
   140008296:	add    BYTE PTR [rax],al
   140008298:	mov    BYTE PTR [rbp+0x0],0x0
   14000829f:	add    dh,bl
   1400082a1:	test   DWORD PTR [rax],eax
   1400082a3:	add    BYTE PTR [rax],al
   1400082a5:	add    BYTE PTR [rax],al
   1400082a7:	add    al,dh
   1400082a9:	test   BYTE PTR [rax],al
   1400082ab:	add    BYTE PTR [rax],al
   1400082ad:	add    BYTE PTR [rax],al
   1400082af:	add    ah,bl
   1400082b1:	test   BYTE PTR [rax],al
   1400082b3:	add    BYTE PTR [rax],al
   1400082b5:	add    BYTE PTR [rax],al
   1400082b7:	add    dl,dl
   1400082b9:	test   BYTE PTR [rax],al
   1400082bb:	add    BYTE PTR [rax],al
   1400082bd:	add    BYTE PTR [rax],al
   1400082bf:	add    al,cl
   1400082c1:	test   BYTE PTR [rax],al
   1400082c3:	add    BYTE PTR [rax],al
   1400082c5:	add    BYTE PTR [rax],al
   1400082c7:	add    al,ch
   1400082c9:	test   DWORD PTR [rax],eax
   1400082cb:	add    BYTE PTR [rax],al
   1400082cd:	add    BYTE PTR [rax],al
   1400082cf:	add    BYTE PTR [rsi+0x84],bh
   1400082d5:	add    BYTE PTR [rax],al
   1400082d7:	add    BYTE PTR [rdx+0x84],dh
   1400082dd:	add    BYTE PTR [rax],al
   1400082df:	add    BYTE PTR [rsp+rax*4+0x0],ah
   1400082e6:	add    BYTE PTR [rax],al
   1400082e8:	cwde   
   1400082e9:	test   BYTE PTR [rax],al
   1400082eb:	add    BYTE PTR [rax],al
   1400082ed:	add    BYTE PTR [rax],al
   1400082ef:	add    dh,dh
   1400082f1:	mov    WORD PTR [rax],es
   1400082f3:	add    BYTE PTR [rax],al
   1400082f5:	add    BYTE PTR [rax],al
   1400082f7:	add    BYTE PTR [rax+0x84],cl
   1400082fd:	add    BYTE PTR [rax],al
   1400082ff:	add    BYTE PTR [rsp+rax*4+0x0],bh
   140008303:	add    BYTE PTR [rax],al
   140008305:	add    BYTE PTR [rax],al
   140008307:	add    BYTE PTR [rax],al
   140008309:	xchg   BYTE PTR [rax],al
   14000830b:	add    BYTE PTR [rax],al
   14000830d:	add    BYTE PTR [rax],al
   14000830f:	add    BYTE PTR [rax-0x7c],dh
   140008312:	add    BYTE PTR [rax],al
   140008314:	add    BYTE PTR [rax],al
   140008316:	add    BYTE PTR [rax],al
   140008318:	data16 test BYTE PTR [rax],al
   14000831b:	add    BYTE PTR [rax],al
   14000831d:	add    BYTE PTR [rax],al
   14000831f:	add    BYTE PTR [rsi-0x7c],bl
   140008322:	add    BYTE PTR [rax],al
   140008324:	add    BYTE PTR [rax],al
   140008326:	add    BYTE PTR [rax],al
   140008328:	push   rdx
   140008329:	test   BYTE PTR [rax],al
   14000832b:	add    BYTE PTR [rax],al
   14000832d:	add    BYTE PTR [rax],al
   14000832f:	add    BYTE PTR [rax-0x7c],cl
   140008332:	add    BYTE PTR [rax],al
   140008334:	add    BYTE PTR [rax],al
   140008336:	add    BYTE PTR [rax],al
   140008338:	clc    
   140008339:	test   BYTE PTR [rax],al
   14000833b:	add    BYTE PTR [rax],al
   14000833d:	add    BYTE PTR [rax],al
   14000833f:	add    BYTE PTR [rsi],bh
   140008341:	test   BYTE PTR [rax],al
   140008343:	add    BYTE PTR [rax],al
   140008345:	add    BYTE PTR [rax],al
   140008347:	add    BYTE PTR [rax],dh
   140008349:	test   BYTE PTR [rax],al
   14000834b:	add    BYTE PTR [rax],al
   14000834d:	add    BYTE PTR [rax],al
   14000834f:	add    BYTE PTR [rsi],ah
   140008351:	test   BYTE PTR [rax],al
   140008353:	add    BYTE PTR [rax],al
   140008355:	add    BYTE PTR [rax],al
   140008357:	add    BYTE PTR [rsp+rax*4],bl
   14000835a:	add    BYTE PTR [rax],al
   14000835c:	add    BYTE PTR [rax],al
   14000835e:	add    BYTE PTR [rax],al
   140008360:	adc    al,BYTE PTR [rax+rax*1+0x0]
   140008367:	add    BYTE PTR [rsi],al
   140008369:	test   BYTE PTR [rax],al
   14000836b:	add    BYTE PTR [rax],al
   14000836d:	add    BYTE PTR [rax],al
   14000836f:	add    ah,bh
   140008371:	add    DWORD PTR [rax],0x0
   140008374:	add    BYTE PTR [rax],al
   140008376:	add    BYTE PTR [rax],al
   140008378:	hlt    
   140008379:	add    DWORD PTR [rax],0x0
   14000837c:	add    BYTE PTR [rax],al
   14000837e:	add    BYTE PTR [rax],al
   140008380:	(bad)  
   140008381:	add    DWORD PTR [rax],0x0
   140008384:	add    BYTE PTR [rax],al
   140008386:	add    BYTE PTR [rax],al
   140008388:	out    0x84,al
   14000838a:	add    BYTE PTR [rax],al
   14000838c:	add    BYTE PTR [rax],al
   14000838e:	add    BYTE PTR [rax],al
   140008390:	push   rdx
   140008391:	mov    WORD PTR [rax],es
   140008393:	add    BYTE PTR [rax],al
   140008395:	add    BYTE PTR [rax],al
   140008397:	add    BYTE PTR [rax],al
   140008399:	lea    eax,[rax]
	...
   1400083a7:	add    BYTE PTR [rdx-0x7a],ah
   1400083aa:	add    BYTE PTR [rax],al
   1400083ac:	add    BYTE PTR [rax],al
   1400083ae:	add    BYTE PTR [rax],al
   1400083b0:	rex.WRX xchg BYTE PTR [rax],r8b
   1400083b3:	add    BYTE PTR [rax],al
   1400083b5:	add    BYTE PTR [rax],al
   1400083b7:	add    BYTE PTR [rdx-0x7a],al
   1400083ba:	add    BYTE PTR [rax],al
   1400083bc:	add    BYTE PTR [rax],al
   1400083be:	add    BYTE PTR [rax],al
   1400083c0:	sub    BYTE PTR [rsi+0x0],al
   1400083c6:	add    BYTE PTR [rax],al
   1400083c8:	adc    al,0x86
   1400083ca:	add    BYTE PTR [rax],al
   1400083cc:	add    BYTE PTR [rax],al
   1400083ce:	add    BYTE PTR [rax],al
   1400083d0:	jl     0x140008358
	...
   1400083de:	add    BYTE PTR [rax],al
   1400083e0:	xchg   esp,eax
   1400083e1:	add    al,0x6d
   1400083e3:	gs ins DWORD PTR es:[rdi],dx
   1400083e5:	ins    DWORD PTR es:[rdi],dx
   1400083e6:	outs   dx,DWORD PTR ds:[rsi]
   1400083e7:	jbe    0x14000844e
   1400083e9:	add    dh,bh
   1400083eb:	add    bl,BYTE PTR [rdi+0x73]
   1400083ee:	je     0x140008462
   1400083f0:	ins    BYTE PTR es:[rdi],dx
   1400083f1:	ja     0x140008465
   1400083f3:	add    BYTE PTR [rsp+rax*1+0x66],cl
   1400083f7:	jb     0x14000845e
   1400083f9:	add    BYTE PTR gs:[rax],al
   1400083fc:	(bad)  
   1400083fd:	add    ebx,DWORD PTR [rdi+0x73]
   140008400:	je     0x140008474
   140008402:	jne    0x140008474
   140008404:	jb     0x140008406
   140008406:	add    al,BYTE PTR [rbx]
   140008408:	pop    rdi
   140008409:	jae    0x14000847f
   14000840b:	jb     0x14000847b
   14000840d:	movsxd ebp,DWORD PTR [rdi+0x6c]
   140008410:	ins    BYTE PTR es:[rdi],dx
   140008411:	add    bl,al
   140008413:	add    al,0x73
   140008415:	je     0x140008489
   140008417:	movsxd ebp,DWORD PTR [rdi+0x6c]
   14000841a:	ins    BYTE PTR es:[rdi],dx
   14000841b:	add    BYTE PTR [rsp+rax*1+0x69],ah
   14000841f:	jae    0x140008482
   140008421:	ins    BYTE PTR es:[rdi],dx
   140008422:	jo     0x14000848c
   140008424:	(bad)  
   140008425:	add    BYTE PTR [rbp+0x4],ch
   140008428:	imul   esi,DWORD PTR [rbx+0x75],0x72657070
   14000842f:	add    BYTE PTR [rsi],al
   140008431:	add    ebx,DWORD PTR [rdi+0x73]
   140008434:	je     0x1400084a8
   140008436:	outs   dx,BYTE PTR ds:[rsi]
   140008437:	imul   esp,DWORD PTR [rbx+0x6f],0x6c6c
   14000843e:	mov    BYTE PTR [rbx+rsi*2],0x74
   140008442:	jb     0x1400084a7
   140008444:	jae    0x1400084b6
   140008446:	outs   dx,BYTE PTR ds:[rsi]
   140008447:	add    BYTE PTR [rcx+0x4],ch
   14000844a:	imul   esi,DWORD PTR [rbx+0x6c],0x7265776f
   140008451:	add    bh,cl
   140008453:	add    al,0x73
   140008455:	je     0x1400084c9
   140008457:	outs   dx,BYTE PTR ds:[rsi]
   140008458:	movsxd esi,DWORD PTR [rax+0x79]
   14000845b:	pop    rdi
   14000845c:	jae    0x14000845e
   14000845e:	xor    al,BYTE PTR [riz*2+0x746978]
   140008465:	add    BYTE PTR [rsi+0x6c616d04],al
   14000846b:	ins    BYTE PTR es:[rdi],dx
   14000846c:	outs   dx,DWORD PTR ds:[rsi]
   14000846d:	movsxd eax,DWORD PTR [rax]
   14000846f:	add    ch,al
   140008471:	add    al,0x73
   140008473:	je     0x1400084e7
   140008475:	movsxd esi,DWORD PTR [rax+0x79]
   140008478:	pop    rdi
   140008479:	jae    0x14000847b
   14000847b:	add    al,al
   14000847d:	add    al,0x73
   14000847f:	je     0x1400084f3
   140008481:	movsxd esp,DWORD PTR [rcx+0x74]
   140008484:	pop    rdi
   140008485:	jae    0x140008487
   140008487:	add    al,ch
   140008489:	add    bl,BYTE PTR [rdi+0x73]
   14000848c:	jo     0x1400084fa
   14000848e:	imul   esi,DWORD PTR [rax+rsi*2+0x61],0x735f6874
   140008496:	add    BYTE PTR [rax],al
   140008498:	cli    
   140008499:	add    bl,BYTE PTR [rdi+0x73]
   14000849c:	je     0x140008510
   14000849e:	imul   esp,DWORD PTR [rbx+0x6d],0xdc000070
   1400084a5:	add    al,0x73
   1400084a7:	ja     0x140008519
   1400084a9:	jb     0x140008514
   1400084ab:	outs   dx,BYTE PTR ds:[rsi]
   1400084ac:	je     0x140008514
   1400084ae:	pop    rdi
   1400084af:	jae    0x1400084b1
   1400084b1:	add    BYTE PTR [rcx+0x72707304],bh
   1400084b7:	imul   ebp,DWORD PTR [rsi+0x74],0x735f66
   1400084be:	fadd   DWORD PTR [rcx]
   1400084c0:	pop    rdi
   1400084c1:	imul   esi,DWORD PTR [rdi+rbp*2+0x61],0x8300735f
   1400084c9:	add    DWORD PTR [rdi+0x69],ebx
   1400084cc:	jae    0x14000852f
   1400084ce:	je     0x140008544
   1400084d0:	jns    0x1400084d2
   1400084d2:	rol    DWORD PTR [rbx+rsi*2],0x74
   1400084d6:	jb     0x14000853b
   1400084d8:	push   0x63000072
   1400084dd:	add    al,0x69
   1400084df:	jae    0x140008542
   1400084e1:	ins    BYTE PTR es:[rdi],dx
   1400084e2:	outs   dx,BYTE PTR ds:[rsi]
   1400084e3:	jne    0x140008552
   1400084e5:	add    cl,ch
   1400084e7:	add    al,0x74
   1400084e9:	outs   dx,DWORD PTR ds:[rsi]
   1400084ea:	ins    BYTE PTR es:[rdi],dx
   1400084eb:	outs   dx,DWORD PTR ds:[rsi]
   1400084ec:	ja     0x140008553
   1400084ee:	jb     0x1400084f0
   1400084f0:	cmp    al,0x4
   1400084f2:	data16 addr32 gs je 0x14000856a
   1400084f7:	add    BYTE PTR [rbx+0x4],al
   1400084fa:	outs   dx,WORD PTR ds:[rsi]
   1400084fc:	jo     0x140008563
   1400084fe:	outs   dx,BYTE PTR ds:[rsi]
   1400084ff:	add    BYTE PTR [rbp+0x4],al
   140008502:	data16 jo 0x140008577
   140008505:	imul   ebp,DWORD PTR [rsi+0x74],0x42a0066
   14000850c:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
   140008510:	imul   eax,DWORD PTR [rax],0x38
   140008513:	add    ebx,DWORD PTR [rdi+0x75]
   140008516:	ins    BYTE PTR es:[rdi],dx
   140008517:	je     0x140008588
   140008519:	(bad)  
   14000851a:	add    BYTE PTR [rax],al
   14000851c:	sbb    eax,DWORD PTR [rcx]
   14000851e:	pop    rdi
   14000851f:	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6f
   140008526:	enter  0x5f02,0x73
   14000852a:	gs je  0x14000859a
   14000852d:	outs   dx,DWORD PTR ds:[rsi]
   14000852e:	fs add BYTE PTR gs:[rax],al
   140008532:	(bad)  
   140008533:	add    ebx,DWORD PTR [rdi+0x77]
   140008536:	jae    0x14000859d
   140008538:	je     0x1400085a6
   14000853a:	outs   dx,DWORD PTR ds:[rsi]
   14000853b:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000853e:	add    BYTE PTR gs:[rsi],dh
   140008541:	add    al,0x66
   140008543:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
   140008547:	add    BYTE PTR gs:[rax],al
   14000854a:	jnp    0x140008550
   14000854c:	imul   esi,DWORD PTR [rbx+0x78],0x69676964
   140008553:	je     0x140008555
   140008555:	add    BYTE PTR [rbp+0x0],dl
   140008558:	pop    rdi
   140008559:	pop    rax
   14000855a:	movsxd esi,DWORD PTR [rax+0x74]
   14000855d:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   140008566:	pop    rdi
   140008567:	(bad)  
   140008568:	ins    DWORD PTR es:[rdi],dx
   140008569:	jae    0x1400085d2
   14000856b:	pop    rdi
   14000856c:	gs js  0x1400085d8
   14000856f:	je     0x140008571
   140008571:	add    BYTE PTR [rdi+0x0],bh
   140008574:	pop    rdi
   140008575:	pop    rdi
   140008576:	addr32 gs je 0x1400085e7
   14000857a:	(bad)  
   14000857b:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   140008582:	mov    es,WORD PTR [rax]
   140008584:	pop    rdi
   140008585:	pop    rdi
   140008586:	jae    0x1400085ed
   140008588:	je     0x1400085e9
   14000858a:	(bad)  
   14000858b:	jo     0x1400085fd
   14000858d:	pop    rdi
   14000858e:	je     0x140008609
   140008590:	jo     0x1400085f7
   140008592:	add    BYTE PTR [rax],al
   140008594:	(bad)  
   140008595:	add    DWORD PTR [rdi+0x65],ebx
   140008598:	js     0x140008603
   14000859a:	je     0x14000859c
   14000859c:	rol    DWORD PTR [rax],0x5f
   14000859f:	movsxd esp,DWORD PTR [rbp+0x78]
   1400085a2:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x5f5f0090
   1400085aa:	jae    0x140008611
   1400085ac:	je     0x140008623
   1400085ae:	jae    0x140008615
   1400085b0:	jb     0x14000861f
   1400085b2:	(bad)  
   1400085b3:	je     0x14000861d
   1400085b5:	gs jb  0x14000862a
   1400085b8:	add    BYTE PTR [rax],al
   1400085ba:	jge    0x1400085bd
   1400085bc:	pop    rdi
   1400085bd:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   1400085c4:	ins    DWORD PTR es:[rdi],dx
   1400085c5:	add    BYTE PTR [rdi+0x0],dl
   1400085c8:	pop    rdi
   1400085c9:	pop    rdi
   1400085ca:	rex.XB pop r15
   1400085cc:	jae    0x14000863e
   1400085ce:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   1400085d2:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   1400085d9:	ins    BYTE PTR es:[rdi],dx
   1400085da:	gs jb  0x1400085dd
   1400085dd:	add    BYTE PTR [rdi],ah
   1400085df:	add    DWORD PTR [rdi+0x66],ebx
   1400085e2:	ins    DWORD PTR es:[rdi],dx
   1400085e3:	outs   dx,DWORD PTR ds:[rsi]
   1400085e4:	fs add BYTE PTR gs:[rax],al
   1400085e8:	rol    BYTE PTR [rax],cl
   1400085ea:	pop    rdi
   1400085eb:	movsxd ebp,DWORD PTR [rdi+0x6d]
   1400085ee:	ins    DWORD PTR es:[rdi],dx
   1400085ef:	outs   dx,DWORD PTR ds:[rsi]
   1400085f0:	fs add BYTE PTR gs:[rax],al
   1400085f4:	ins    DWORD PTR es:[rdi],dx
   1400085f5:	jae    0x14000866d
   1400085f7:	movsxd esi,DWORD PTR [rdx+0x74]
   1400085fa:	cs fs ins BYTE PTR es:[rdi],dx
   1400085fd:	ins    BYTE PTR es:[rdi],dx
   1400085fe:	add    BYTE PTR [rax],al
   140008600:	(bad)  
   140008601:	add    BYTE PTR [rdi],bh
   140008603:	je     0x14000866a
   140008605:	jb     0x140008674
   140008607:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   14000860e:	pop    rcx
   14000860f:	pop    r8
   140008611:	pop    rax
   140008612:	pop    rdx
   140008613:	add    BYTE PTR [rbp+0x5],ah
   140008616:	push   rdx
   140008617:	je     0x140008685
   140008619:	push   rbp
   14000861a:	outs   dx,BYTE PTR ds:[rsi]
   14000861b:	imul   esp,DWORD PTR [rbx+0x6f],0x6f546564
   140008622:	rex.WRXB
   140008623:	gs ins DWORD PTR es:[rdi],dx
   140008625:	rex.WRX add BYTE PTR [rax],r8b
   140008628:	jle    0x14000862e
   14000862a:	push   rdx
   14000862b:	je     0x140008699
   14000862d:	rex.WRB jne 0x14000869c
   140008630:	je     0x14000869b
   140008632:	rex.X jns 0x1400086a9
   140008635:	gs push rsp
   140008637:	outs   dx,DWORD PTR ds:[rsi]
   140008638:	push   rbp
   140008639:	outs   dx,BYTE PTR ds:[rsi]
   14000863a:	imul   esp,DWORD PTR [rbx+0x6f],0x4e6564
   140008641:	add    BYTE PTR [rcx],ah
   140008643:	add    BYTE PTR [rdx+riz*2+0x67],al
   140008647:	push   rax
   140008648:	jb     0x1400086b3
   14000864a:	outs   dx,BYTE PTR ds:[rsi]
   14000864b:	je     0x14000864d
   14000864d:	add    dh,al
   14000864f:	add    dl,BYTE PTR [rdx+0x74]
   140008652:	ins    BYTE PTR es:[rdi],dx
   140008653:	rex.XB (bad) 
   140008655:	jo     0x1400086cb
   140008657:	jne    0x1400086cb
   140008659:	rex.XB outs dx,DWORD PTR gs:[rsi]
   14000865c:	outs   dx,BYTE PTR ds:[rsi]
   14000865d:	je     0x1400086c4
   14000865f:	js     0x1400086d5
   140008661:	add    BYTE PTR [rdi+0x4],dh
   140008664:	push   rdx
   140008665:	je     0x1400086d3
   140008667:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140008669:	outs   dx,DWORD PTR ds:[rsi]
   14000866a:	imul   esi,DWORD PTR [rbp+0x70],0x46
   14000866e:	jne    0x1400086de
   140008670:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140008674:	outs   dx,BYTE PTR ds:[rsi]
   140008675:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140008677:	je     0x1400086eb
   140008679:	jns    0x14000867b
   14000867b:	add    BYTE PTR [rbx+0x6c745205],cl
   140008681:	push   rsi
   140008682:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   140008689:	outs   dx,BYTE PTR ds:[rsi]
   14000868a:	ja     0x1400086f5
   14000868c:	outs   dx,BYTE PTR ds:[rsi]
   14000868d:	add    BYTE PTR fs:[rax],al
   140008690:	outs   dx,BYTE PTR ds:[rsi]
   140008691:	je     0x1400086f7
   140008693:	ins    BYTE PTR es:[rdi],dx
   140008694:	ins    BYTE PTR es:[rdi],dx
   140008695:	cs fs ins BYTE PTR es:[rdi],dx
   140008698:	ins    BYTE PTR es:[rdi],dx
   140008699:	add    BYTE PTR [rax],dl
   14000869b:	add    BYTE PTR [rsi+0x69],al
   14000869e:	outs   dx,BYTE PTR ds:[rsi]
   14000869f:	rex.RX imul r14d,DWORD PTR fs:[rdx+0x73],0x6c694674
   1400086a8:	add    BYTE PTR gs:[r8],al
   1400086ac:	or     al,0x0
   1400086ae:	rex.RX imul r13d,DWORD PTR [rsi+0x64],0x736f6c43
   1400086b6:	add    BYTE PTR gs:[rax],bl
   1400086b9:	add    BYTE PTR [rsi+0x69],al
   1400086bc:	outs   dx,BYTE PTR ds:[rsi]
   1400086bd:	fs rex.WRX
   1400086bf:	gs js  0x140008736
   1400086c2:	imul   r13d,DWORD PTR [rbp+r12*2+0x41],0x45000800
   1400086cb:	js     0x140008736
   1400086cd:	je     0x14000871f
   1400086cf:	jb     0x140008740
   1400086d1:	movsxd esp,DWORD PTR [rbp+0x73]
   1400086d4:	jae    0x1400086d6
   1400086d6:	add    eax,0x65724300
   1400086db:	(bad)  
   1400086dc:	je     0x140008743
   1400086de:	imul   r13d,DWORD PTR [rbp+r12*2+0x41],0x47002c00
   1400086e7:	gs je  0x140008730
   1400086ea:	imul   ebp,DWORD PTR [rbp+riz*2+0x53],0x657a69
   1400086f2:	str    WORD PTR [rbp+0x61]
   1400086f6:	jo     0x14000874e
   1400086f8:	imul   esp,DWORD PTR [rbp+0x77],0x6946664f
   1400086ff:	ins    BYTE PTR es:[rdi],dx
   140008700:	add    BYTE PTR gs:[rsi],bl
   140008703:	add    BYTE PTR [rbp+0x6e],dl
   140008706:	ins    DWORD PTR es:[rdi],dx
   140008707:	(bad)  
   140008708:	jo     0x140008760
   14000870a:	imul   esp,DWORD PTR [rbp+0x77],0x6946664f
   140008711:	ins    BYTE PTR es:[rdi],dx
   140008712:	add    BYTE PTR gs:[rax+rax*1],bl
   140008716:	push   rbx
   140008717:	gs je  0x14000875d
   14000871a:	outs   dx,DWORD PTR ds:[rsi]
   14000871b:	outs   dx,BYTE PTR ds:[rsi]
   14000871c:	jae    0x14000878d
   14000871e:	ins    BYTE PTR es:[rdi],dx
   14000871f:	gs push rsp
   140008721:	gs js  0x140008798
   140008724:	rex.B je 0x14000879b
   140008727:	jb     0x140008792
   140008729:	(bad)  
   14000872a:	jne    0x1400087a0
   14000872c:	add    BYTE PTR gs:[rdi],al
   14000872f:	add    BYTE PTR [rsi+0x6f],al
   140008732:	jb     0x1400087a1
   140008734:	(bad)  
   140008735:	je     0x140008784
   140008737:	gs jae 0x1400087ad
   14000873a:	(bad)  
   14000873b:	add    BYTE PTR gs:[r8d],al
   140008740:	pop    rcx
   140008741:	add    BYTE PTR [rdi+0x72],dl
   140008744:	imul   esi,DWORD PTR [rbp+riz*2+0x46],0x656c69
   14000874c:	sbb    BYTE PTR [rax],al
   14000874e:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140008750:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140008758:	rex.XB jb 0x1400087c4
   14000875b:	je     0x1400087c6
   14000875d:	movsxd esp,DWORD PTR [rcx+0x6c]
   140008760:	push   rbx
   140008761:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140008766:	outs   dx,BYTE PTR ds:[rsi]
   140008767:	add    BYTE PTR [rdi],ah
   140008769:	add    BYTE PTR [rdi+0x65],al
   14000876c:	je     0x1400087b4
   14000876e:	imul   ebp,DWORD PTR [rbp+riz*2+0x41],0x69727474
   140008776:	(bad)  
   140008777:	jne    0x1400087ed
   140008779:	gs jae 0x1400087bd
   14000877c:	add    BYTE PTR [rax],al
   14000877e:	sbb    eax,0x61654c00
   140008783:	jbe    0x1400087ea
   140008785:	rex.XB jb 0x1400087f1
   140008788:	je     0x1400087f3
   14000878a:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000878d:	push   rbx
   14000878e:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140008793:	outs   dx,BYTE PTR ds:[rsi]
   140008794:	add    BYTE PTR [rax],al
   140008796:	(bad)  
   140008797:	add    BYTE PTR [rcx+0x73],cl
   14000879a:	rex.R
   14000879b:	rex.X
   14000879c:	rex.XB push r11
   14000879e:	rex.WR
   14000879f:	gs (bad) 
   1400087a1:	fs rex.X jns 0x140008819
   1400087a5:	add    BYTE PTR gs:[rax],al
   1400087a8:	rex.RXB add BYTE PTR [r10+0x65],r10b
   1400087ac:	(bad)  
   1400087ad:	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x0],0x47000300
   1400087b7:	gs je  0x1400087fd
   1400087ba:	outs   dx,DWORD PTR ds:[rsi]
   1400087bb:	outs   dx,BYTE PTR ds:[rsi]
   1400087bc:	jae    0x14000882d
   1400087be:	ins    BYTE PTR es:[rdi],dx
   1400087bf:	gs rex.WRXB jne 0x140008837
   1400087c3:	jo     0x14000883a
   1400087c5:	je     0x14000880a
   1400087c7:	push   rax
   1400087c8:	add    BYTE PTR [rax],al
   1400087ca:	adc    DWORD PTR [rax],eax
   1400087cc:	push   rbx
   1400087cd:	gs je  0x140008813
   1400087d0:	jne    0x140008844
   1400087d2:	jb     0x140008839
   1400087d4:	outs   dx,BYTE PTR ds:[rsi]
   1400087d5:	je     0x14000881b
   1400087d7:	imul   esi,DWORD PTR [rdx+0x65],0x726f7463
   1400087de:	jns    0x140008821
   1400087e0:	add    BYTE PTR [rax],al
   1400087e2:	or     al,0x0
   1400087e4:	rex.RXB
   1400087e5:	gs je  0x14000883b
   1400087e8:	je     0x14000884e
   1400087ea:	rex.W (bad) 
   1400087ec:	outs   dx,BYTE PTR ds:[rsi]
   1400087ed:	fs ins BYTE PTR es:[rdi],dx
   1400087ef:	add    BYTE PTR gs:[rax],al
   1400087f2:	cmp    DWORD PTR [rax],eax
   1400087f4:	push   rbx
   1400087f5:	gs je  0x14000884c
   1400087f8:	push   0x64616572
   1400087fd:	push   rax
   1400087fe:	jb     0x140008865
   140008800:	data16 gs jb 0x140008876
   140008804:	gs fs push rbp
   140008807:	rex.WB
   140008808:	rex.WR (bad) 
   14000880a:	outs   dx,BYTE PTR ds:[rsi]
   14000880b:	addr32 jne 0x14000886f
   14000880e:	addr32 gs jae 0x140008812
   140008812:	add    eax,0x74654700
   140008817:	rex.WR (bad) 
   140008819:	jae    0x14000888f
   14000881b:	rex.RB jb 0x140008890
   14000881e:	outs   dx,DWORD PTR ds:[rsi]
   14000881f:	jb     0x140008821
   140008821:	add    BYTE PTR [rcx],dl
   140008823:	add    BYTE PTR [rbp+0x6e],al
   140008826:	je     0x14000888d
   140008828:	jb     0x14000886d
   14000882a:	jb     0x140008895
   14000882c:	je     0x140008897
   14000882e:	movsxd esp,DWORD PTR [rcx+0x6c]
   140008831:	push   rbx
   140008832:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140008837:	outs   dx,BYTE PTR ds:[rsi]
   140008838:	add    BYTE PTR [rax],al
   14000883a:	rex.WRX add BYTE PTR [rbx+0x65],r10b
   14000883e:	je     0x140008886
   140008840:	imul   ebp,DWORD PTR [rbp+riz*2+0x41],0x54736970
   140008848:	outs   dx,DWORD PTR ds:[rsi]
   140008849:	rex.WRXB
   14000884a:	rex.RB
   14000884b:	rex.WRB add BYTE PTR [r8],r8b
   14000884e:	or     DWORD PTR [rax],eax
   140008850:	rex.RXB
   140008851:	gs je  0x140008897
   140008854:	outs   dx,DWORD PTR ds:[rsi]
   140008855:	outs   dx,BYTE PTR ds:[rsi]
   140008856:	jae    0x1400088c7
   140008858:	ins    BYTE PTR es:[rdi],dx
   140008859:	gs push rbx
   14000885b:	movsxd esi,DWORD PTR [rdx+0x65]
   14000885e:	outs   dx,BYTE PTR gs:[rsi]
   140008860:	rex.X jne 0x1400088c9
   140008863:	data16 gs jb 0x1400088b0
   140008867:	outs   dx,BYTE PTR ds:[rsi]
   140008868:	outs   dx,WORD PTR ds:[rsi]
   14000886a:	add    BYTE PTR [rax],al
   14000886c:	or     al,BYTE PTR [rax]
   14000886e:	push   rbx
   14000886f:	gs je  0x1400088b5
   140008872:	outs   dx,DWORD PTR ds:[rsi]
   140008873:	outs   dx,BYTE PTR ds:[rsi]
   140008874:	jae    0x1400088e5
   140008876:	ins    BYTE PTR es:[rdi],dx
   140008877:	gs rex.XB je 0x1400088ed
   14000887b:	ins    BYTE PTR es:[rdi],dx
   14000887c:	rex.W (bad) 
   14000887e:	outs   dx,BYTE PTR ds:[rsi]
   14000887f:	fs ins BYTE PTR es:[rdi],dx
   140008881:	gs jb  0x140008884
   140008884:	or     al,BYTE PTR [rax]
   140008886:	rex.W
   140008887:	gs (bad) 
   140008889:	jo     0x1400088de
   14000888b:	gs je  0x1400088d7
   14000888e:	outs   dx,BYTE PTR ds:[rsi]
   14000888f:	outs   dx,WORD PTR ds:[rsi]
   140008891:	jb     0x140008900
   140008893:	(bad)  
   140008894:	je     0x1400088ff
   140008896:	outs   dx,DWORD PTR ds:[rsi]
   140008897:	outs   dx,BYTE PTR ds:[rsi]
   140008898:	add    BYTE PTR [rax],al
   14000889a:	(bad)  
   14000889b:	add    BYTE PTR [rdi+0x65],al
   14000889e:	je     0x1400088e3
   1400088a0:	jne    0x140008914
   1400088a2:	jb     0x140008909
   1400088a4:	outs   dx,BYTE PTR ds:[rsi]
   1400088a5:	je     0x1400088eb
   1400088a7:	imul   esi,DWORD PTR [rdx+0x65],0x726f7463
   1400088ae:	jns    0x1400088f1
   1400088b0:	add    BYTE PTR [rax],al
   1400088b2:	add    BYTE PTR [rax],al
   1400088b4:	rex.XB ins BYTE PTR es:[rdi],dx
   1400088b6:	outs   dx,DWORD PTR ds:[rsi]
   1400088b7:	jae    0x14000891e
   1400088b9:	rex.W (bad) 
   1400088bb:	outs   dx,BYTE PTR ds:[rsi]
   1400088bc:	fs ins BYTE PTR es:[rdi],dx
   1400088be:	add    BYTE PTR gs:[rip+0x656c5300],ch        # 0x1a56cdbc5
   1400088c5:	gs jo  0x1400088c8
   1400088c8:	adc    DWORD PTR [rax],eax
   1400088ca:	push   rbp
   1400088cb:	outs   dx,BYTE PTR ds:[rsi]
   1400088cc:	push   0x6c646e61
   1400088d1:	gs fs rex.RB js 0x140008939
   1400088d6:	gs jo  0x14000894d
   1400088d9:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   1400088e0:	gs jb  0x1400088e3
   1400088e3:	add    BYTE PTR [rdi],cl
   1400088e5:	add    BYTE PTR [rbx+0x65],dl
   1400088e8:	je     0x14000893f
   1400088ea:	outs   dx,BYTE PTR ds:[rsi]
   1400088eb:	push   0x6c646e61
   1400088f0:	gs fs rex.RB js 0x140008958
   1400088f5:	gs jo  0x14000896c
   1400088f8:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   1400088ff:	gs jb  0x140008902
   140008902:	or     al,0x0
   140008904:	rex.RXB
   140008905:	gs je  0x14000894b
   140008908:	jne    0x14000897c
   14000890a:	jb     0x140008971
   14000890c:	outs   dx,BYTE PTR ds:[rsi]
   14000890d:	je     0x14000895f
   14000890f:	jb     0x140008980
   140008911:	movsxd esp,DWORD PTR [rbp+0x73]
   140008914:	jae    0x140008916
   140008916:	rex.WXB add BYTE PTR [r13+r12*2+0x72],dl
   14000891b:	ins    DWORD PTR es:[rdi],dx
   14000891c:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   140008923:	outs   dx,DWORD PTR ds:[rsi]
   140008924:	movsxd esp,DWORD PTR [rbp+0x73]
   140008927:	jae    0x140008929
   140008929:	add    BYTE PTR [rbx],dl
   14000892b:	add    BYTE PTR [rdi+0x65],al
   14000892e:	je     0x14000897d
   140008930:	outs   dx,DWORD PTR ds:[rsi]
   140008931:	fs jne 0x1400089a0
   140008934:	gs rex.W (bad) 
   140008937:	outs   dx,BYTE PTR ds:[rsi]
   140008938:	fs ins BYTE PTR es:[rdi],dx
   14000893a:	gs push rdi
   14000893c:	add    BYTE PTR [rax],al
   14000893e:	add    BYTE PTR [rax],al
   140008940:	push   rcx
   140008941:	jne    0x1400089a8
   140008943:	jb     0x1400089be
   140008945:	push   rax
   140008946:	gs jb  0x1400089af
   140008949:	outs   dx,DWORD PTR ds:[rsi]
   14000894a:	jb     0x1400089b9
   14000894c:	(bad)  
   14000894d:	outs   dx,BYTE PTR ds:[rsi]
   14000894e:	movsxd esp,DWORD PTR [rbp+0x43]
   140008951:	outs   dx,DWORD PTR ds:[rsi]
   140008952:	jne    0x1400089c2
   140008954:	je     0x1400089bb
   140008956:	jb     0x140008958
   140008958:	or     eax,0x74654700
   14000895d:	rex.XB jne 0x1400089d2
   140008960:	jb     0x1400089c7
   140008962:	outs   dx,BYTE PTR ds:[rsi]
   140008963:	je     0x1400089b5
   140008965:	jb     0x1400089d6
   140008967:	movsxd esp,DWORD PTR [rbp+0x73]
   14000896a:	jae    0x1400089b5
   14000896c:	add    BYTE PTR fs:[rcx],dl
   14000896f:	add    BYTE PTR [rdi+0x65],al
   140008972:	je     0x1400089b7
   140008974:	jne    0x1400089e8
   140008976:	jb     0x1400089dd
   140008978:	outs   dx,BYTE PTR ds:[rsi]
   140008979:	je     0x1400089cf
   14000897b:	push   0x64616572
   140008980:	rex.WB
   140008981:	add    BYTE PTR fs:[rax],al
   140008984:	adc    al,0x0
   140008986:	rex.RXB
   140008987:	gs je  0x1400089dd
   14000898a:	jns    0x1400089ff
   14000898c:	je     0x1400089f3
   14000898e:	ins    DWORD PTR es:[rdi],dx
   14000898f:	push   rsp
   140008990:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   140008997:	ins    BYTE PTR es:[rdi],dx
   140008998:	gs push rsp
   14000899a:	imul   ebp,DWORD PTR [rbp+0x65],0x47001800
   1400089a1:	gs je  0x1400089f8
   1400089a4:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   1400089ab:	je     0x1400089ad
   1400089ad:	add    BYTE PTR [rcx+0x70],ah
   1400089b0:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72dfd27
   1400089ba:	outs   dx,DWORD PTR ds:[rsi]
   1400089bb:	jb     0x140008a22
   1400089bd:	sub    eax,0x656c6966
   1400089c2:	sub    eax,0x322d316c
   1400089c7:	sub    eax,0x6c642e31
   1400089cc:	ins    BYTE PTR es:[rdi],dx
   1400089cd:	add    BYTE PTR [rcx+0x70],ah
   1400089d0:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72dfd47
   1400089da:	outs   dx,DWORD PTR ds:[rsi]
   1400089db:	jb     0x140008a42
   1400089dd:	sub    eax,0x636f7270
   1400089e2:	gs jae 0x140008a58
   1400089e5:	je     0x140008a4f
   1400089e7:	jb     0x140008a4e
   1400089e9:	(bad)  
   1400089ea:	fs jae 0x140008a1a
   1400089ed:	ins    BYTE PTR es:[rdi],dx
   1400089ee:	xor    DWORD PTR [rip+0x2e322d31],ebp        # 0x16e32b725
   1400089f4:	fs ins BYTE PTR es:[rdi],dx
   1400089f6:	ins    BYTE PTR es:[rdi],dx
   1400089f7:	add    BYTE PTR [rcx+0x70],ah
   1400089fa:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72dfd71
   140008a04:	outs   dx,DWORD PTR ds:[rsi]
   140008a05:	jb     0x140008a6c
   140008a07:	sub    eax,0x6f6d656d
   140008a0c:	jb     0x140008a87
   140008a0e:	sub    eax,0x312d316c
   140008a13:	sub    eax,0x6c642e32
   140008a18:	ins    BYTE PTR es:[rdi],dx
   140008a19:	add    BYTE PTR [rcx+0x70],ah
   140008a1c:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72dfd93
   140008a26:	outs   dx,DWORD PTR ds:[rsi]
   140008a27:	jb     0x140008a8e
   140008a29:	sub    eax,0x736e6f63
   140008a2e:	outs   dx,DWORD PTR ds:[rsi]
   140008a2f:	ins    BYTE PTR es:[rdi],dx
   140008a30:	gs sub eax,0x312d326c
   140008a36:	sub    eax,0x6c642e30
   140008a3b:	ins    BYTE PTR es:[rdi],dx
   140008a3c:	add    BYTE PTR [rax],al
   140008a3e:	(bad)  
   140008a3f:	jo     0x140008aaa
   140008a41:	sub    eax,0x772d736d
   140008a46:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140008a4d:	sub    eax,0x61636f6c
   140008a52:	ins    BYTE PTR es:[rdi],dx
   140008a53:	imul   edi,DWORD PTR [rdx+0x61],0x6e6f6974
   140008a5a:	sub    eax,0x322d316c
   140008a5f:	sub    eax,0x6c642e31
   140008a64:	ins    BYTE PTR es:[rdi],dx
   140008a65:	add    BYTE PTR [rcx+0x70],ah
   140008a68:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72dfddf
   140008a72:	outs   dx,DWORD PTR ds:[rsi]
   140008a73:	jb     0x140008ada
   140008a75:	sub    eax,0x636e7973
   140008a7a:	push   0x2d316c2d
   140008a7f:	xor    ch,BYTE PTR [rip+0x6c642e30]        # 0x1ac64b8b5
   140008a85:	ins    BYTE PTR es:[rdi],dx
   140008a86:	add    BYTE PTR [rax],al
   140008a88:	(bad)  
   140008a89:	jo     0x140008af4
   140008a8b:	sub    eax,0x772d736d
   140008a90:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140008a97:	sub    eax,0x736e6f63
   140008a9c:	outs   dx,DWORD PTR ds:[rsi]
   140008a9d:	ins    BYTE PTR es:[rdi],dx
   140008a9e:	gs sub eax,0x312d316c
   140008aa4:	sub    eax,0x6c642e30
   140008aa9:	ins    BYTE PTR es:[rdi],dx
   140008aaa:	add    BYTE PTR [rax],al
   140008aac:	(bad)  
   140008aad:	jo     0x140008b18
   140008aaf:	sub    eax,0x772d736d
   140008ab4:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140008abb:	sub    eax,0x636f7270
   140008ac0:	gs jae 0x140008b36
   140008ac3:	outs   dx,BYTE PTR gs:[rsi]
   140008ac5:	jbe    0x140008b30
   140008ac7:	jb     0x140008b38
   140008ac9:	outs   dx,BYTE PTR ds:[rsi]
   140008aca:	ins    DWORD PTR es:[rdi],dx
   140008acb:	outs   dx,BYTE PTR gs:[rsi]
   140008acd:	je     0x140008afc
   140008acf:	ins    BYTE PTR es:[rdi],dx
   140008ad0:	xor    DWORD PTR [rip+0x2e302d32],ebp        # 0x16e30b808
   140008ad6:	fs ins BYTE PTR es:[rdi],dx
   140008ad8:	ins    BYTE PTR es:[rdi],dx
   140008ad9:	add    BYTE PTR [rcx+0x70],ah
   140008adc:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72dfe53
   140008ae6:	outs   dx,DWORD PTR ds:[rsi]
   140008ae7:	jb     0x140008b4e
   140008ae9:	sub    eax,0x6f727265
   140008aee:	jb     0x140008b58
   140008af0:	(bad)  
   140008af1:	outs   dx,BYTE PTR ds:[rsi]
   140008af2:	fs ins BYTE PTR es:[rdi],dx
   140008af4:	imul   ebp,DWORD PTR [rsi+0x67],0x2d316c2d
   140008afb:	xor    DWORD PTR [rip+0x6c642e31],ebp        # 0x1ac64b932
   140008b01:	ins    BYTE PTR es:[rdi],dx
   140008b02:	add    BYTE PTR [rax],al
   140008b04:	(bad)  
   140008b05:	jo     0x140008b70
   140008b07:	sub    eax,0x772d736d
   140008b0c:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140008b13:	sub    eax,0x656c6966
   140008b18:	sub    eax,0x322d316c
   140008b1d:	sub    eax,0x6c642e32
   140008b22:	ins    BYTE PTR es:[rdi],dx
   140008b23:	add    BYTE PTR [rcx+0x70],ah
   140008b26:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72dfe9d
   140008b30:	outs   dx,DWORD PTR ds:[rsi]
   140008b31:	jb     0x140008b98
   140008b33:	sub    eax,0x70616568
   140008b38:	sub    eax,0x322d316c
   140008b3d:	sub    eax,0x6c642e30
   140008b42:	ins    BYTE PTR es:[rdi],dx
   140008b43:	add    BYTE PTR [rcx+0x70],ah
   140008b46:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72dfebd
   140008b50:	outs   dx,DWORD PTR ds:[rsi]
   140008b51:	jb     0x140008bb8
   140008b53:	sub    eax,0x646e6168
   140008b58:	ins    BYTE PTR es:[rdi],dx
   140008b59:	gs sub eax,0x312d316c
   140008b5f:	sub    eax,0x6c642e30
   140008b64:	ins    BYTE PTR es:[rdi],dx
   140008b65:	add    BYTE PTR [rcx+0x70],ah
   140008b68:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72dfedf
   140008b72:	outs   dx,DWORD PTR ds:[rsi]
   140008b73:	jb     0x140008bda
   140008b75:	sub    eax,0x7262696c
   140008b7a:	(bad)  
   140008b7b:	jb     0x140008bf6
   140008b7d:	ins    BYTE PTR es:[rdi],dx
   140008b7e:	outs   dx,DWORD PTR ds:[rsi]
   140008b7f:	(bad)  
   140008b80:	fs gs jb 0x140008bb1
   140008b84:	ins    BYTE PTR es:[rdi],dx
   140008b85:	xor    DWORD PTR [rip+0x2e302d32],ebp        # 0x16e30b8bd
   140008b8b:	fs ins BYTE PTR es:[rdi],dx
   140008b8d:	ins    BYTE PTR es:[rdi],dx
   140008b8e:	add    BYTE PTR [rax],al
   140008b90:	(bad)  
   140008b91:	jo     0x140008bfc
   140008b93:	sub    eax,0x772d736d
   140008b98:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140008b9f:	sub    eax,0x666f7270
   140008ba4:	imul   ebp,DWORD PTR [rbp+riz*2+0x2d],0x312d316c
   140008bac:	sub    eax,0x6c642e30
   140008bb1:	ins    BYTE PTR es:[rdi],dx
   140008bb2:	add    BYTE PTR [rax],al
   140008bb4:	(bad)  
   140008bb5:	jo     0x140008c20
   140008bb7:	sub    eax,0x772d736d
   140008bbc:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140008bc3:	sub    eax,0x69737973
   140008bc8:	outs   dx,BYTE PTR ds:[rsi]
   140008bc9:	outs   dx,WORD PTR ds:[rsi]
   140008bcb:	sub    eax,0x322d316c
   140008bd0:	sub    eax,0x6c642e31
   140008bd5:	ins    BYTE PTR es:[rdi],dx
   140008bd6:	add    BYTE PTR [rax],al
   140008bd8:	(bad)  
   140008bd9:	add    BYTE PTR [rbx+0x72],al
   140008bdc:	gs (bad) 
   140008bde:	je     0x140008c45
   140008be0:	imul   r13d,DWORD PTR [rbp+r12*2+0x4d],0x69707061
   140008be9:	outs   dx,BYTE PTR ds:[rsi]
   140008bea:	add    BYTE PTR [r8d],al
   140008bee:	(bad)  
   140008bef:	jo     0x140008c5a
   140008bf1:	sub    eax,0x772d736d
   140008bf6:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140008bfd:	sub    eax,0x6e72656b
   140008c02:	gs ins BYTE PTR es:[rdi],dx
   140008c04:	xor    esi,DWORD PTR [rdx]
   140008c06:	sub    eax,0x6167656c
   140008c0b:	movsxd edi,DWORD PTR [rcx+0x2d]
   140008c0e:	ins    BYTE PTR es:[rdi],dx
   140008c0f:	xor    DWORD PTR [rip+0x2e312d31],ebp        # 0x16e31b946
   140008c15:	fs ins BYTE PTR es:[rdi],dx
   140008c17:	ins    BYTE PTR es:[rdi],dx
   140008c18:	add    BYTE PTR [rax],al
   140008c1a:	or     al,BYTE PTR [rax]
   140008c1c:	ins    BYTE PTR es:[rdi],dx
   140008c1d:	jae    0x140008c93
   140008c1f:	jb     0x140008c8d
   140008c21:	outs   dx,BYTE PTR gs:[rsi]
   140008c23:	add    BYTE PTR [r8],al
   140008c26:	(bad)  
   140008c27:	jo     0x140008c92
   140008c29:	sub    eax,0x772d736d
   140008c2e:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140008c35:	sub    eax,0x69727473
   140008c3a:	outs   dx,BYTE PTR ds:[rsi]
   140008c3b:	addr32 sub eax,0x6f73626f
   140008c41:	ins    BYTE PTR es:[rdi],dx
   140008c42:	gs je  0x140008caa
   140008c45:	sub    eax,0x312d316c
   140008c4a:	sub    eax,0x6c642e30
   140008c4f:	ins    BYTE PTR es:[rdi],dx
   140008c50:	add    BYTE PTR [rax],al
   140008c52:	add    DWORD PTR [rax],0x6f695f5f
   140008c58:	(bad)  
   140008c59:	pop    rdi
   140008c5a:	data16 jne 0x140008ccb
   140008c5d:	movsxd eax,DWORD PTR [rax]
   140008c5f:	add    BYTE PTR [rcx],al
   140008c61:	add    BYTE PTR [rdx+0x65],dl
   140008c64:	jae    0x140008cd5
   140008c66:	ins    BYTE PTR es:[rdi],dx
   140008c67:	jbe    0x140008cce
   140008c69:	rex.R
   140008c6a:	gs ins BYTE PTR es:[rdi],dx
   140008c6c:	(bad)  
   140008c6d:	jns    0x140008cbb
   140008c6f:	outs   dx,DWORD PTR ds:[rsi]
   140008c70:	(bad)  
   140008c71:	fs gs fs push r8
   140008c76:	rex.WB add BYTE PTR [r8],al
   140008c79:	add    BYTE PTR [rbp+riz*2+0x6c],al
   140008c7d:	(bad)  
   140008c7e:	jns    0x140008ccc
   140008c80:	outs   dx,DWORD PTR ds:[rsi]
   140008c81:	(bad)  
   140008c82:	fs rex.RX (bad) 
   140008c85:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6f6f4865
   140008c8d:	imul   eax,DWORD PTR [rax],0x0
   140008c90:	(bad)  
   140008c91:	jo     0x140008cfc
   140008c93:	sub    eax,0x772d736d
   140008c98:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140008c9f:	sub    eax,0x616c6564
   140008ca4:	jns    0x140008d12
   140008ca6:	outs   dx,DWORD PTR ds:[rsi]
   140008ca7:	(bad)  
   140008ca8:	fs sub eax,0x312d316c
   140008cae:	sub    eax,0x6c642e31
   140008cb3:	ins    BYTE PTR es:[rdi],dx
   140008cb4:	add    BYTE PTR [rax],al
   140008cb6:	add    BYTE PTR [rax],al
   140008cb8:	rex.B jo 0x140008d24
   140008cbb:	push   rbx
   140008cbc:	gs je  0x140008d10
   140008cbf:	jne    0x140008d26
   140008cc1:	jb     0x140008d3c
   140008cc3:	rex.B jo 0x140008d2f
   140008cc6:	push   rbx
   140008cc7:	gs je  0x140008d1a
   140008cca:	jb     0x140008d31
   140008ccc:	jae    0x140008d33
   140008cce:	outs   dx,BYTE PTR ds:[rsi]
   140008ccf:	movsxd esp,DWORD PTR [rbp+0x0]
   140008cd2:	(bad)  
   140008cd3:	jo     0x140008d3e
   140008cd5:	sub    eax,0x772d736d
   140008cda:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140008ce1:	sub    eax,0x71697061
   140008ce6:	jne    0x140008d4d
   140008ce8:	jb     0x140008d63
   140008cea:	sub    eax,0x312d316c
   140008cef:	sub    eax,0x6c642e30
   140008cf4:	ins    BYTE PTR es:[rdi],dx
   140008cf5:	add    BYTE PTR [rdx+0x6d656d04],dl
   140008cfb:	movsxd esi,DWORD PTR [rax+0x79]
   140008cfe:	add    BYTE PTR [rax],al
   140008d00:	xchg   esi,eax
   140008d01:	add    al,0x6d
   140008d03:	gs ins DWORD PTR es:[rdi],dx
   140008d05:	jae    0x140008d6c
   140008d07:	je     0x140008d09
	...

Disassembly of section .data:

0000000140009000 <.data>:
   140009000:	add    BYTE PTR [rax+0x0],al
	...
   14000900e:	add    BYTE PTR [rax],al
   140009010:	add    DWORD PTR [rax],eax
   140009012:	add    BYTE PTR [rax],al
   140009014:	add    BYTE PTR [rax],al
   140009016:	add    BYTE PTR [rax],al
   140009018:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14000901e:	add    BYTE PTR [rax],al
   140009020:	int    0x5d
   140009022:	and    dl,dl
   140009024:	data16 (bad) 
   140009026:	(bad)  
   140009027:	inc    DWORD PTR [rax]
   140009029:	add    BYTE PTR [rax],al
   14000902b:	add    BYTE PTR [rax],al
   14000902d:	add    BYTE PTR [rax],al
   14000902f:	add    BYTE PTR [rax+rax*1],ah
   140009032:	add    BYTE PTR [rax],al
   140009034:	add    DWORD PTR [rax],eax
   140009036:	add    BYTE PTR [rax],al
   140009038:	pop    rbx
   140009039:	pop    rsi
   14000903a:	rex.B sub eax,0x7a2d615a
   140009040:	xor    BYTE PTR [rip+0x5d5f39],ch        # 0x1405def7f
   140009046:	add    BYTE PTR [rax],al
   140009048:	pop    rsi
   140009049:	add    BYTE PTR [rax],al
   14000904b:	add    BYTE PTR [rax],al
   14000904d:	add    BYTE PTR [rax],al
   14000904f:	add    BYTE PTR [rax+0x33],ah
   140009052:	add    BYTE PTR [rax+0x1],al
   140009055:	add    BYTE PTR [rax],al
   140009057:	add    BYTE PTR [rax+0x1400032],dh
   14000905d:	add    BYTE PTR [rax],al
   14000905f:	add    BYTE PTR [rax+0x31],dl
   140009062:	add    BYTE PTR [rax+0x1],al
   140009065:	add    BYTE PTR [rax],al
   140009067:	add    BYTE PTR [rcx],al
   140009069:	add    BYTE PTR [rax],al
   14000906b:	add    BYTE PTR [rax],al
   14000906d:	add    BYTE PTR [rax],al
   14000906f:	add    bh,bh
   140009071:	(bad)  
   140009072:	(bad)  
   140009073:	(bad)  
   140009074:	(bad)  
   140009075:	(bad)  
   140009076:	(bad)  
   140009077:	(bad)  
   140009078:	(bad)  
   140009079:	(bad)  
   14000907a:	(bad)  
   14000907b:	inc    DWORD PTR [rcx]
   14000907d:	add    BYTE PTR [rax],al
   14000907f:	add    ah,ah
   140009081:	in     al,0x0
   140009083:	rex add DWORD PTR [rax],eax
   140009086:	add    BYTE PTR [rax],al
   140009088:	call   0x141409191
   14000908d:	add    BYTE PTR [rax],al
   14000908f:	add    BYTE PTR [rcx],al
   140009091:	add    BYTE PTR [rax],al
   140009093:	add    BYTE PTR [rcx],al
   140009095:	add    BYTE PTR [rax],al
   140009097:	add    BYTE PTR [rax],al
   140009099:	and    BYTE PTR [rax],al
   14000909b:	add    BYTE PTR [rax],al
   14000909d:	and    BYTE PTR [rax],al
   14000909f:	add    al,al
   1400090a1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400090a2:	add    BYTE PTR [rax+0x1],al
   1400090a5:	add    BYTE PTR [rax],al
   1400090a7:	add    al,al
   1400090a9:	(bad)  
   1400090aa:	add    BYTE PTR [rax+0x1],al
   1400090ad:	add    BYTE PTR [rax],al
   1400090af:	add    bh,bh
   1400090b1:	(bad)  
   1400090b2:	(bad)  
   1400090b3:	inc    DWORD PTR [rax]
	...

Disassembly of section .pdata:

0000000140013000 <.pdata>:
   140013000:	or     BYTE PTR [rax],dl
   140013002:	add    BYTE PTR [rax],al
   140013004:	and    dl,BYTE PTR [rcx]
   140013006:	add    BYTE PTR [rax],al
   140013008:	and    BYTE PTR [rdx+0x0],bh
   14001300b:	add    BYTE PTR [rax],ch
   14001300d:	adc    DWORD PTR [rax],eax
   14001300f:	add    BYTE PTR [rcx],dh
   140013011:	adc    al,BYTE PTR [rax]
   140013013:	add    BYTE PTR [rax],bh
   140013015:	jp     0x140013017
   140013017:	add    BYTE PTR [rax],bh
   140013019:	adc    al,BYTE PTR [rax]
   14001301b:	add    BYTE PTR [rsi+0x48000012],bh
   140013021:	jp     0x140013023
   140013023:	add    ah,al
   140013025:	adc    al,BYTE PTR [rax]
   140013027:	add    BYTE PTR [rax],bh
   140013029:	(bad)  
   14001302a:	add    BYTE PTR [rax],al
   14001302c:	push   rax
   14001302d:	jp     0x14001302f
   14001302f:	add    BYTE PTR [rax+0x17],al
   140013032:	add    BYTE PTR [rax],al
   140013034:	jl     0x14001304e
   140013036:	add    BYTE PTR [rax],al
   140013038:	js     0x1400130b4
   14001303a:	add    BYTE PTR [rax],al
   14001303c:	movabs al,ds:0x9000001a4d000018
   140013045:	jp     0x140013047
   140013047:	add    BYTE PTR [rax+0x1a],ah
   14001304a:	add    BYTE PTR [rax],al
   14001304c:	cmp    ebx,DWORD PTR [rip+0x7aac0000]        # 0x1baad3052
   140013052:	add    BYTE PTR [rax],al
   140013054:	push   rax
   140013055:	sbb    eax,0x1e460000
   14001305a:	add    BYTE PTR [rax],al
   14001305c:	int3   
   14001305d:	jp     0x14001305f
   14001305f:	add    BYTE PTR [rsi+rbx*1+0x0],cl
   140013063:	add    BYTE PTR [rbx],bh
   140013065:	(bad)  
   140013066:	add    BYTE PTR [rax],al
   140013068:	cld    
   140013069:	jp     0x14001306b
   14001306b:	add    BYTE PTR [rdi+rbx*1+0x0],al
   14001306f:	add    BYTE PTR [rip+0x14000025],bl        # 0x15401309a
   140013075:	jnp    0x140013077
   140013077:	add    BYTE PTR ds:0x25530000,ah
   14001307e:	add    BYTE PTR [rax],al
   140013080:	cmp    BYTE PTR [rbx+0x0],bh
   140013083:	add    BYTE PTR [rbp+riz*1+0x0],bl
   140013087:	add    BYTE PTR [rcx+0x40000025],ah
   14001308d:	jnp    0x14001308f
   14001308f:	add    BYTE PTR [rax+0x78000025],ch
   140013095:	add    BYTE PTR es:[rax],al
   140013098:	rex.W jnp 0x14001309b
   14001309b:	add    BYTE PTR [rax+0x4000026],al
   1400130a1:	(bad)  
   1400130a2:	add    BYTE PTR [rax],al
   1400130a4:	(bad)  
   1400130a5:	jnp    0x1400130a7
   1400130a7:	add    BYTE PTR [rdi+riz*1],cl
   1400130aa:	add    BYTE PTR [rax],al
   1400130ac:	mul    DWORD PTR [rdi]
   1400130ae:	add    BYTE PTR [rax],al
   1400130b0:	jo     0x14001312d
   1400130b2:	add    BYTE PTR [rax],al
   1400130b4:	add    BYTE PTR [rax],ch
   1400130b6:	add    BYTE PTR [rax],al
   1400130b8:	fisubr WORD PTR [rdx]
   1400130ba:	add    BYTE PTR [rax],al
   1400130bc:	test   BYTE PTR [rbx+0x0],bh
   1400130bf:	add    al,dh
   1400130c1:	sub    al,BYTE PTR [rax]
   1400130c3:	add    BYTE PTR [rbx+rbp*1+0x7b9c0000],ch
   1400130ca:	add    BYTE PTR [rax],al
   1400130cc:	shr    BYTE PTR [rbx],0x0
   1400130cf:	add    BYTE PTR [rbx+0x2e],cl
   1400130d2:	add    BYTE PTR [rax],al
   1400130d4:	mov    ah,0x7b
   1400130d6:	add    BYTE PTR [rax],al
   1400130d8:	push   rsp
   1400130d9:	add    BYTE PTR cs:[rax],al
   1400130dc:	(bad)  
   1400130dd:	add    BYTE PTR cs:[rax],al
   1400130e0:	(bad)  
   1400130e1:	jnp    0x1400130e3
   1400130e3:	add    ah,cl
   1400130e5:	add    BYTE PTR cs:[rax],al
   1400130e8:	addr32 (bad) 
   1400130ea:	add    BYTE PTR [rax],al
   1400130ec:	call   0x1b001316c
   1400130f1:	(bad)  
   1400130f2:	add    BYTE PTR [rax],al
   1400130f4:	(bad)  
   1400130f5:	(bad)  
   1400130f6:	add    BYTE PTR [rax],al
   1400130f8:	hlt    
   1400130f9:	jnp    0x1400130fb
   1400130fb:	add    al,dl
   1400130fd:	(bad)  
   1400130fe:	add    BYTE PTR [rax],al
   140013100:	rex.WX xor QWORD PTR [rax],rax
   140013103:	add    ah,bh
   140013105:	jnp    0x140013107
   140013107:	add    BYTE PTR [rax+0x31],dl
   14001310a:	add    BYTE PTR [rax],al
   14001310c:	nop
   14001310d:	xor    al,BYTE PTR [rax]
   14001310f:	add    BYTE PTR [rsp+rdi*2],bl
   140013112:	add    BYTE PTR [rax],al
   140013114:	mov    al,0x32
   140013116:	add    BYTE PTR [rax],al
   140013118:	rex.WRXB xor r8,QWORD PTR [r8]
   14001311b:	add    BYTE PTR [rsp+rdi*2],dh
   14001311e:	add    BYTE PTR [rax],al
   140013120:	(bad)  
   140013121:	xor    eax,DWORD PTR [rax]
   140013123:	add    BYTE PTR [rdi],cl
   140013125:	add    BYTE PTR ss:[rax],al
   140013128:	rex jl 0x14001312b
   14001312b:	add    BYTE PTR [rax],bl
   14001312d:	add    BYTE PTR ss:[rax],al
   140013130:	adc    eax,0x64000038
   140013135:	jl     0x140013137
   140013137:	add    BYTE PTR [rax],ah
   140013139:	cmp    BYTE PTR [rax],al
   14001313b:	add    BYTE PTR [rdx+0x39],ch
   14001313e:	add    BYTE PTR [rax],al
   140013140:	cld    
   140013141:	jp     0x140013143
   140013143:	add    BYTE PTR [rax+0x39],dh
   140013146:	add    BYTE PTR [rax],al
   140013148:	(bad)  
   140013149:	add    BYTE PTR ds:[rax],al
   14001314c:	test   BYTE PTR [rax+rax*1+0x0],bh
   140013150:	rex.W
   140013151:	add    BYTE PTR ds:[rax],al
   140013154:	in     eax,0x4d
   140013156:	add    BYTE PTR [rax],al
   140013158:	mov    esp,0xec00007c
   14001315d:	rex.WRB add BYTE PTR [r8],r8b
   140013160:	pop    rsi
   140013161:	rex.WRX add BYTE PTR [rax],r8b
   140013164:	loopne 0x1400131e2
   140013166:	add    BYTE PTR [rax],al
   140013168:	jo     0x1400131b8
   14001316a:	add    BYTE PTR [rax],al
   14001316c:	rex.WRXB add BYTE PTR cs:[r8],r8b
   140013170:	rex.W jnp 0x140013173
   140013173:	add    BYTE PTR [rax-0x34ffffb1],al
   140013179:	rex.WRXB add BYTE PTR [r8],r8b
   14001317c:	(bad)  
   14001317d:	jnp    0x14001317f
   14001317f:	add    al,ah
   140013181:	rex.WRXB add BYTE PTR [r8],r8b
   140013184:	or     BYTE PTR [rcx+0x0],dl
   140013187:	add    al,dh
   140013189:	jl     0x14001318b
   14001318b:	add    BYTE PTR [rax],dl
   14001318d:	push   rcx
   14001318e:	add    BYTE PTR [rax],al
   140013190:	lods   al,BYTE PTR ds:[rsi]
   140013191:	push   rdx
   140013192:	add    BYTE PTR [rax],al
   140013194:	or     al,0x7d
   140013196:	add    BYTE PTR [rax],al
   140013198:	in     al,dx
   140013199:	push   rdx
   14001319a:	add    BYTE PTR [rax],al
   14001319c:	xor    DWORD PTR [rax+rax*1+0x0],edx
   1400131a0:	and    al,0x7d
   1400131a2:	add    BYTE PTR [rax],al
   1400131a4:	cmp    BYTE PTR [rax+rax*1+0x0],dl
   1400131a8:	cdq    
   1400131a9:	push   rsp
   1400131aa:	add    BYTE PTR [rax],al
   1400131ac:	(bad)  
   1400131ad:	jnp    0x1400131af
   1400131af:	add    BYTE PTR [rax-0x2effffac],ah
   1400131b5:	push   rsp
   1400131b6:	add    BYTE PTR [rax],al
   1400131b8:	cmp    BYTE PTR [rbp+0x0],bh
   1400131bb:	add    al,ah
   1400131bd:	push   rsp
   1400131be:	add    BYTE PTR [rax],al
   1400131c0:	scas   eax,DWORD PTR es:[rdi]
   1400131c1:	push   rbp
   1400131c2:	add    BYTE PTR [rax],al
   1400131c4:	hlt    
   1400131c5:	jnp    0x1400131c7
   1400131c7:	add    al,al
   1400131c9:	push   rbp
   1400131ca:	add    BYTE PTR [rax],al
   1400131cc:	or     DWORD PTR [rsi+0x0],edx
   1400131cf:	add    BYTE PTR [rax],bh
   1400131d1:	jge    0x1400131d3
   1400131d3:	add    BYTE PTR [rax],dl
   1400131d5:	push   rsi
   1400131d6:	add    BYTE PTR [rax],al
   1400131d8:	loop   0x140013231
   1400131da:	add    BYTE PTR [rax],al
   1400131dc:	rex jge 0x1400131df
   1400131df:	add    al,dh
   1400131e1:	push   rdi
   1400131e2:	add    BYTE PTR [rax],al
   1400131e4:	add    bl,BYTE PTR [rax+0x0]
   1400131e7:	add    ah,dh
   1400131e9:	jnp    0x1400131eb
   1400131eb:	add    BYTE PTR [rax],ah
   1400131ed:	pop    rax
   1400131ee:	add    BYTE PTR [rax],al
   1400131f0:	ds pop rax
   1400131f2:	add    BYTE PTR [rax],al
   1400131f4:	jo     0x140013273
   1400131f6:	add    BYTE PTR [rax],al
   1400131f8:	pop    rsp
   1400131f9:	pop    rax
   1400131fa:	add    BYTE PTR [rax],al
   1400131fc:	nop
   1400131fd:	pop    rax
   1400131fe:	add    BYTE PTR [rax],al
   140013200:	cmp    BYTE PTR [rbx+0x0],bh
   140013203:	add    BYTE PTR [rax+0x11000058],ah
   140013209:	pop    rdx
   14001320a:	add    BYTE PTR [rax],al
   14001320c:	jl     0x14001328b
   14001320e:	add    BYTE PTR [rax],al
   140013210:	sbb    BYTE PTR [rdx+0x0],bl
   140013213:	add    BYTE PTR [rdi],cl
   140013215:	pop    rbx
   140013216:	add    BYTE PTR [rax],al
   140013218:	je     0x140013297
   14001321a:	add    BYTE PTR [rax],al
   14001321c:	xor    BYTE PTR [rbx+0x0],bl
   14001321f:	add    BYTE PTR [rcx+0x5b],ch
   140013222:	add    BYTE PTR [rax],al
   140013224:	hlt    
   140013225:	jnp    0x140013227
   140013227:	add    BYTE PTR [rax+0x5b],dh
   14001322a:	add    BYTE PTR [rax],al
   14001322c:	mov    BYTE PTR [rbx+0x0],bl
   14001322f:	add    ah,dh
   140013231:	jnp    0x140013233
   140013233:	add    BYTE PTR [rbx+rbx*2+0x5bf00000],bl
   14001323a:	add    BYTE PTR [rax],al
   14001323c:	test   BYTE PTR [rbp+0x0],bh
   14001323f:	add    al,bh
   140013241:	pop    rbx
   140013242:	add    BYTE PTR [rax],al
   140013244:	cmp    eax,0x3800005c
   140013249:	jnp    0x14001324b
   14001324b:	add    BYTE PTR [rax-0x12ffffa4],ah
   140013251:	pop    rsp
   140013252:	add    BYTE PTR [rax],al
   140013254:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013255:	jge    0x140013257
   140013257:	add    BYTE PTR [rbx*2+0x5e040000],dh
   14001325e:	add    BYTE PTR [rax],al
   140013260:	enter  0x7d,0x0
   140013264:	cmp    BYTE PTR [rsi+0x0],bl
   140013267:	add    BYTE PTR [rsi+0x5e],dl
   14001326a:	add    BYTE PTR [rax],al
   14001326c:	cmp    BYTE PTR [rbx+0x0],bh
   14001326f:	add    BYTE PTR [rax-0x8ffffa2],al
   140013275:	pop    rsi
   140013276:	add    BYTE PTR [rax],al
   140013278:	fdivr  QWORD PTR [rbp+0x0]
   14001327b:	add    BYTE PTR [rax],al
   14001327d:	pop    rdi
   14001327e:	add    BYTE PTR [rax],al
   140013280:	rex.WRX pop rdi
   140013282:	add    BYTE PTR [rax],al
   140013284:	hlt    
   140013285:	jnp    0x140013287
   140013287:	add    BYTE PTR [rdi+rbx*2+0x0],bh
   14001328b:	add    BYTE PTR [rcx-0xbffffa1],bl
   140013291:	jnp    0x140013293
   140013293:	add    BYTE PTR [rax+0x300005f],ah
   140013299:	(bad)  
   14001329a:	add    BYTE PTR [rax],al
   14001329c:	cmp    BYTE PTR [rbx+0x0],bh
   14001329f:	add    BYTE PTR [rax+riz*2],cl
   1400132a2:	add    BYTE PTR [rax],al
   1400132a4:	movabs ds:0xe000007b48000060,al
   1400132ad:	(bad)  
   1400132ae:	add    BYTE PTR [rax],al
   1400132b0:	loop   0x140013312
   1400132b2:	add    BYTE PTR [rax],al
   1400132b4:	fdivr  DWORD PTR [rbp+0x0]
   1400132b7:	add    BYTE PTR [rax],al
   1400132b9:	(bad)  
   1400132ba:	add    BYTE PTR [rax],al
   1400132bc:	rex.WRB (bad) 
   1400132be:	add    BYTE PTR [rax],al
   1400132c0:	call   0x1a0013342
   1400132c5:	(bad)  
   1400132c6:	add    BYTE PTR [rax],al
   1400132c8:	and    BYTE PTR [rcx+0x0],0x0
   1400132cc:	hlt    
   1400132cd:	jp     0x1400132cf
   1400132cf:	add    BYTE PTR [rsi-0x59ffff9f],al
   1400132d5:	(bad)  
   1400132d6:	add    BYTE PTR [rax],al
   1400132d8:	mov    ah,0x7c
   1400132da:	add    BYTE PTR [rax],al
   1400132dc:	lods   al,BYTE PTR ds:[rsi]
   1400132dd:	(bad)  
   1400132de:	add    BYTE PTR [rax],al
   1400132e0:	retf   0x61
   1400132e3:	add    ah,dh
   1400132e5:	jp     0x1400132e7
	...

Disassembly of section .didat:

0000000140014000 <.didat>:
   140014000:	(bad)  
   140014001:	pop    rsi
   140014002:	add    BYTE PTR [rax+0x1],al
	...

Disassembly of section .rsrc:

0000000140015000 <.rsrc>:
	...
   14001500c:	add    DWORD PTR [rax],eax
   14001500e:	add    al,BYTE PTR [rax]
   140015010:	call   0x168815015
   140015015:	add    BYTE PTR [rax],al
   140015017:	adc    BYTE PTR [rax],0x0
   14001501a:	add    BYTE PTR [rax],al
   14001501c:	add    BYTE PTR [rax],al
   14001501f:	sbb    BYTE PTR [rax],0x0
   140015022:	add    BYTE PTR [rax],al
   140015024:	pop    rax
   140015025:	add    BYTE PTR [rax],al
   140015027:	add    BYTE PTR [rax],0x0
	...
   140015036:	add    DWORD PTR [rax],eax
   140015038:	add    DWORD PTR [rax],eax
   14001503a:	add    BYTE PTR [rax],al
   14001503c:	jo     0x14001503e
   14001503e:	add    BYTE PTR [rax+0x0],al
	...
   14001504c:	add    BYTE PTR [rax],al
   14001504e:	add    DWORD PTR [rax],eax
   140015050:	add    DWORD PTR [rax],eax
   140015052:	add    BYTE PTR [rax],al
   140015054:	mov    BYTE PTR [rax],al
   140015056:	add    BYTE PTR [rax+0x0],al
	...
   140015064:	add    BYTE PTR [rax],al
   140015066:	add    DWORD PTR [rax],eax
   140015068:	add    DWORD PTR [rax],eax
   14001506a:	add    BYTE PTR [rax],al
   14001506c:	movabs al,ds:0x800000
	...
   14001507d:	add    BYTE PTR [rcx],al
   14001507f:	add    BYTE PTR [rcx],cl
   140015081:	add    al,0x0
   140015083:	add    BYTE PTR [rax+0x0],bh
	...
   140015095:	add    BYTE PTR [rcx],al
   140015097:	add    BYTE PTR [rcx],cl
   140015099:	add    al,0x0
   14001509b:	add    al,cl
	...
   1400150ad:	add    BYTE PTR [rcx],al
   1400150af:	add    BYTE PTR [rcx],cl
   1400150b1:	add    al,0x0
   1400150b3:	add    al,bl
   1400150b5:	add    BYTE PTR [rax],al
   1400150b7:	add    BYTE PTR [rax],bh
   1400150b9:	push   rdi
   1400150ba:	add    DWORD PTR [rax],eax
   1400150bc:	enter  0x0,0x0
	...
   1400150c8:	movabs al,ds:0x394000153
   1400150d1:	add    BYTE PTR [rax],al
   1400150d3:	add    BYTE PTR [rax],al
   1400150d5:	add    BYTE PTR [rax],al
   1400150d7:	add    al,dh
   1400150d9:	push   rax
   1400150da:	add    DWORD PTR [rax],eax
   1400150dc:	scas   al,BYTE PTR es:[rdi]
   1400150dd:	add    al,BYTE PTR [rax]
	...
   1400150e7:	add    BYTE PTR [rbx],al
   1400150e9:	add    BYTE PTR [rbp+0x0],cl
   1400150ec:	push   rbp
   1400150ed:	add    BYTE PTR [rcx+0x0],cl
   1400150f0:	cmp    al,0x3f
   1400150f2:	js     0x140015161
   1400150f4:	ins    BYTE PTR es:[rdi],dx
   1400150f5:	and    BYTE PTR [rsi+0x65],dh
   1400150f8:	jb     0x14001516d
   1400150fa:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   140015101:	xor    BYTE PTR [rdx],ah
   140015103:	and    BYTE PTR [rbp+0x6e],ah
   140015106:	movsxd ebp,DWORD PTR [rdi+0x64]
   140015109:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   140015110:	rex.RX sub eax,0x73202238
   140015116:	je     0x140015179
   140015118:	outs   dx,BYTE PTR ds:[rsi]
   140015119:	fs (bad) 
   14001511b:	ins    BYTE PTR es:[rdi],dx
   14001511c:	outs   dx,DWORD PTR ds:[rsi]
   14001511d:	outs   dx,BYTE PTR ds:[rsi]
   14001511e:	gs cmp eax,0x73657922
   140015124:	and    bh,BYTE PTR [rdi]
   140015126:	ds or  eax,0x2d213c0a
   14001512c:	sub    eax,0x706f4320
   140015131:	jns    0x1400151a5
   140015133:	imul   esp,DWORD PTR [rdi+0x68],0x63282074
   14001513a:	sub    DWORD PTR [rax],esp
   14001513c:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   140015144:	je     0x140015166
   140015146:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140015148:	jb     0x1400151ba
   14001514a:	outs   dx,DWORD PTR ds:[rsi]
   14001514b:	jb     0x1400151ae
   14001514d:	je     0x1400151b8
   14001514f:	outs   dx,DWORD PTR ds:[rsi]
   140015150:	outs   dx,BYTE PTR ds:[rsi]
   140015151:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0e8f84
   140015157:	cmp    al,0x61
   140015159:	jae    0x1400151ce
   14001515b:	gs ins DWORD PTR es:[rdi],dx
   14001515d:	(bad)  
   14001515e:	ins    BYTE PTR es:[rdi],dx
   14001515f:	jns    0x140015181
   140015161:	js     0x1400151d0
   140015163:	ins    BYTE PTR es:[rdi],dx
   140015164:	outs   dx,BYTE PTR ds:[rsi]
   140015165:	jae    0x1400151a4
   140015167:	and    dh,BYTE PTR [rbp+0x72]
   14001516a:	outs   dx,BYTE PTR ds:[rsi]
   14001516b:	cmp    dh,BYTE PTR [rbx+0x63]
   14001516e:	push   0x73616d65
   140015173:	sub    eax,0x7263696d
   140015178:	outs   dx,DWORD PTR ds:[rsi]
   140015179:	jae    0x1400151ea
   14001517b:	data16 je 0x1400151ab
   14001517e:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140015181:	cmp    ah,BYTE PTR [rcx+0x73]
   140015184:	ins    DWORD PTR es:[rdi],dx
   140015185:	cs jbe 0x1400151b9
   140015188:	and    ah,BYTE PTR [rax]
   14001518a:	ins    DWORD PTR es:[rdi],dx
   14001518b:	(bad)  
   14001518c:	outs   dx,BYTE PTR ds:[rsi]
   14001518d:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   140015194:	jb     0x140015209
   140015196:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14001519d:	xor    BYTE PTR [rdx],ah
   14001519f:	ds or  eax,0x73613c0a
   1400151a5:	jae    0x14001520c
   1400151a7:	ins    DWORD PTR es:[rdi],dx
   1400151a8:	(bad)  
   1400151a9:	ins    BYTE PTR es:[rdi],dx
   1400151aa:	jns    0x1400151f5
   1400151ac:	fs outs dx,BYTE PTR gs:[rsi]
   1400151af:	je     0x14001521a
   1400151b1:	je     0x14001522c
   1400151b3:	or     eax,0x2020200a
   1400151b8:	and    BYTE PTR [rsi+0x65],dh
   1400151bb:	jb     0x140015230
   1400151bd:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e35223d
   1400151c4:	xor    DWORD PTR [rsi],ebp
   1400151c6:	xor    BYTE PTR [rsi],ch
   1400151c8:	xor    BYTE PTR [rdx],ah
   1400151ca:	or     eax,0x2020200a
   1400151cf:	and    BYTE PTR [rax+0x72],dh
   1400151d2:	outs   dx,DWORD PTR ds:[rsi]
   1400151d3:	movsxd esp,DWORD PTR [rbp+0x73]
   1400151d6:	jae    0x140015247
   1400151d8:	jb     0x14001521b
   1400151da:	jb     0x14001523f
   1400151dc:	push   0x63657469
   1400151e1:	je     0x140015258
   1400151e3:	jb     0x14001524a
   1400151e5:	cmp    eax,0x646d6122
   1400151ea:	ss xor al,0x22
   1400151ed:	or     eax,0x2020200a
   1400151f2:	and    BYTE PTR [rsi+0x61],ch
   1400151f5:	ins    DWORD PTR es:[rdi],dx
   1400151f6:	gs cmp eax,0x63694d22
   1400151fc:	jb     0x14001526d
   1400151fe:	jae    0x14001526f
   140015200:	data16 je 0x140015231
   140015203:	push   rdi
   140015204:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   14001520b:	imul   r13d,DWORD PTR [rbp+r12*2+0x73],0x65747379
   140015214:	ins    DWORD PTR es:[rdi],dx
   140015215:	rex.RX imul r13d,DWORD PTR cs:[rsi+0x64],0x22727473
   14001521e:	or     eax,0x2020200a
   140015223:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   140015227:	gs cmp eax,0x6e697722
   14001522d:	xor    esi,DWORD PTR [rdx]
   14001522f:	and    cl,BYTE PTR [rip+0xd3e2f0a]        # 0x14d3f813f
   140015235:	or     bh,BYTE PTR [rsp+riz*2]
   140015238:	gs jae 0x14001529e
   14001523b:	jb     0x1400152a6
   14001523d:	jo     0x1400152b3
   14001523f:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e69463e
   140015246:	and    BYTE PTR fs:[rbx+0x74],dl
   14001524a:	jb     0x1400152b5
   14001524c:	outs   dx,BYTE PTR ds:[rsi]
   14001524d:	and    BYTE PTR [eax],ch
   140015250:	push   rcx
   140015251:	rex.RXB push r10
   140015253:	rex.RB push r8
   140015255:	sub    DWORD PTR [rax],esp
   140015257:	push   rbp
   140015258:	je     0x1400152c3
   14001525a:	ins    BYTE PTR es:[rdi],dx
   14001525b:	imul   esi,DWORD PTR [rcx+rdi*2+0x3c],0x7365642f
   140015263:	movsxd esi,DWORD PTR [rdx+0x69]
   140015266:	jo     0x1400152dc
   140015268:	imul   ebp,DWORD PTR [rdi+0x6e],0xd0a0d3e
   14001526f:	or     bh,BYTE PTR [rsp+rsi*2]
   140015272:	jb     0x1400152e9
   140015274:	jae    0x1400152ea
   140015276:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140015278:	outs   dx,WORD PTR ds:[rsi]
   14001527a:	and    BYTE PTR [rax+0x6d],bh
   14001527d:	ins    BYTE PTR es:[rdi],dx
   14001527e:	outs   dx,BYTE PTR ds:[rsi]
   14001527f:	jae    0x1400152be
   140015281:	and    dh,BYTE PTR [rbp+0x72]
   140015284:	outs   dx,BYTE PTR ds:[rsi]
   140015285:	cmp    dh,BYTE PTR [rbx+0x63]
   140015288:	push   0x73616d65
   14001528d:	sub    eax,0x7263696d
   140015292:	outs   dx,DWORD PTR ds:[rsi]
   140015293:	jae    0x140015304
   140015295:	data16 je 0x1400152c5
   140015298:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14001529b:	cmp    ah,BYTE PTR [rcx+0x73]
   14001529e:	ins    DWORD PTR es:[rdi],dx
   14001529f:	cs jbe 0x1400152d5
   1400152a2:	and    bh,BYTE PTR [rsi]
   1400152a4:	or     eax,0x2020200a
   1400152a9:	and    BYTE PTR [rbx+rsi*2],bh
   1400152ac:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   1400152b0:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   1400152b8:	and    BYTE PTR [rax],ah
   1400152ba:	and    BYTE PTR [rax],ah
   1400152bc:	and    BYTE PTR [rax],ah
   1400152be:	cmp    al,0x72
   1400152c0:	gs jno 0x140015338
   1400152c3:	gs jae 0x14001533a
   1400152c6:	gs fs push rax
   1400152c9:	jb     0x140015334
   1400152cb:	jbe    0x140015336
   1400152cd:	ins    BYTE PTR es:[rdi],dx
   1400152ce:	gs addr32 gs jae 0x140015311
   1400152d3:	or     eax,0x2020200a
   1400152d8:	and    BYTE PTR [rax],ah
   1400152da:	and    BYTE PTR [rax],ah
   1400152dc:	and    BYTE PTR [rax],ah
   1400152de:	and    BYTE PTR [rax],ah
   1400152e0:	and    BYTE PTR [rdx+rsi*2],bh
   1400152e3:	gs jno 0x14001535b
   1400152e6:	gs jae 0x14001535d
   1400152e9:	gs fs rex.RB js 0x140015353
   1400152ee:	movsxd esi,DWORD PTR [rbp+0x74]
   1400152f1:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   1400152f8:	ins    BYTE PTR es:[rdi],dx
   1400152f9:	or     eax,0x2020200a
   1400152fe:	and    BYTE PTR [rax],ah
   140015300:	and    BYTE PTR [rax],ah
   140015302:	and    BYTE PTR [rax],ah
   140015304:	and    BYTE PTR [rax],ah
   140015306:	and    BYTE PTR [rax],ah
   140015308:	and    BYTE PTR [rax],ah
   14001530a:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14001530e:	gs ins BYTE PTR es:[rdi],dx
   140015310:	cmp    eax,0x49736122
   140015315:	outs   dx,BYTE PTR ds:[rsi]
   140015316:	jbe    0x140015387
   140015318:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14001531c:	or     eax,0x2020200a
   140015321:	and    BYTE PTR [rax],ah
   140015323:	and    BYTE PTR [rax],ah
   140015325:	and    BYTE PTR [rax],ah
   140015327:	and    BYTE PTR [rax],ah
   140015329:	and    BYTE PTR [rax],ah
   14001532b:	and    BYTE PTR [rax],ah
   14001532d:	and    BYTE PTR [rbp+0x69],dh
   140015330:	movsxd esp,DWORD PTR [r11+0x65]
   140015334:	jae    0x1400153a9
   140015336:	cmp    eax,0x6c616622
   14001533b:	jae    0x1400153a2
   14001533d:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x16021734d
   140015343:	and    BYTE PTR [rax],ah
   140015345:	and    BYTE PTR [rax],ah
   140015347:	and    BYTE PTR [rax],ah
   140015349:	and    BYTE PTR [rax],ah
   14001534b:	and    BYTE PTR [rdi],ch
   14001534d:	ds or  eax,0x2020200a
   140015353:	and    BYTE PTR [rax],ah
   140015355:	and    BYTE PTR [rax],ah
   140015357:	and    BYTE PTR [rdi+rbp*1],bh
   14001535a:	jb     0x1400153c1
   14001535c:	jno    0x1400153d3
   14001535e:	gs jae 0x1400153d5
   140015361:	gs fs push rax
   140015364:	jb     0x1400153cf
   140015366:	jbe    0x1400153d1
   140015368:	ins    BYTE PTR es:[rdi],dx
   140015369:	gs addr32 gs jae 0x1400153ac
   14001536e:	or     eax,0x2020200a
   140015373:	and    BYTE PTR [rdi+rbp*1],bh
   140015376:	jae    0x1400153dd
   140015378:	movsxd esi,DWORD PTR [rbp+0x72]
   14001537b:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x2f3c0a0d
   140015383:	je     0x1400153f7
   140015385:	jne    0x1400153fa
   140015387:	je     0x1400153d2
   140015389:	outs   dx,BYTE PTR ds:[rsi]
   14001538a:	outs   dx,WORD PTR ds:[rsi]
   14001538c:	ds or  eax,0x612f3c0a
   140015392:	jae    0x140015407
   140015394:	gs ins DWORD PTR es:[rdi],dx
   140015396:	(bad)  
   140015397:	ins    BYTE PTR es:[rdi],dx
   140015398:	jns    0x1400153d8
   14001539a:	or     eax,0xa0d0a
   14001539f:	add    BYTE PTR [rbx+rax*1+0x34],dl
   1400153a6:	push   rsi
   1400153a7:	add    BYTE PTR [rbx+0x0],dl
   1400153aa:	pop    rdi
   1400153ab:	add    BYTE PTR [rsi+0x0],dl
   1400153ae:	add    BYTE PTR [r10+0x0],r10b
   1400153b2:	push   rbx
   1400153b3:	add    BYTE PTR [rcx+0x0],cl
   1400153b6:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   1400153ba:	pop    rdi
   1400153bb:	add    BYTE PTR [rcx+0x0],cl
   1400153be:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   1400153c2:	rex.WRXB add BYTE PTR [r8],r8b
   1400153c5:	add    BYTE PTR [rax],al
   1400153c7:	add    BYTE PTR [rbp+0xfeef04],bh
   1400153cd:	add    BYTE PTR [rcx],al
   1400153cf:	add    BYTE PTR [rax],al
   1400153d1:	add    BYTE PTR [rdx],cl
   1400153d3:	add    BYTE PTR [rax],al
   1400153d5:	add    BYTE PTR [rax],bpl
   1400153d8:	add    BYTE PTR [rax],al
   1400153da:	or     al,BYTE PTR [rax]
   1400153dc:	add    BYTE PTR [rax+0x0],al
   1400153df:	sub    BYTE PTR [rdi],bh
   1400153e1:	add    BYTE PTR [rax],al
   1400153e3:	add    BYTE PTR [rax],al
   1400153e5:	add    BYTE PTR [rax],al
   1400153e7:	add    BYTE PTR [rax+rax*1],al
   1400153ea:	add    al,0x0
   1400153ec:	add    DWORD PTR [rax],eax
	...
   1400153fa:	add    BYTE PTR [rax],al
   1400153fc:	repnz add al,BYTE PTR [rax]
   1400153ff:	add    BYTE PTR [rcx],al
   140015401:	add    BYTE PTR [rbx+0x0],dl
   140015404:	je     0x140015406
   140015406:	jb     0x140015408
   140015408:	imul   eax,DWORD PTR [rax],0x67006e
   14001540e:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140015412:	ins    BYTE PTR es:[rdi],dx
   140015413:	add    BYTE PTR [rbp+0x0],ah
   140015416:	rex.WB add BYTE PTR [r14+0x0],bpl
   14001541a:	data16 add BYTE PTR [rdi+0x0],ch
   14001541e:	add    BYTE PTR [rax],al
   140015420:	(bad)  
   140015421:	add    al,BYTE PTR [rax]
   140015423:	add    BYTE PTR [rcx],al
   140015425:	add    BYTE PTR [rax],dh
   140015427:	add    BYTE PTR [rax+rax*1],dh
   14001542a:	xor    BYTE PTR [rax],al
   14001542c:	cmp    DWORD PTR [rax],eax
   14001542e:	xor    BYTE PTR [rax],al
   140015430:	xor    al,0x0
   140015432:	rex.X add BYTE PTR [rax],sil
   140015435:	add    BYTE PTR [rax],al
   140015437:	add    BYTE PTR [rax+rax*1+0x16],cl
   14001543b:	add    BYTE PTR [rcx],al
   14001543d:	add    BYTE PTR [rbx+0x0],al
   140015440:	outs   dx,DWORD PTR ds:[rsi]
   140015441:	add    BYTE PTR [rbp+0x0],ch
   140015444:	jo     0x140015446
   140015446:	(bad)  
   140015447:	add    BYTE PTR [rsi+0x0],ch
   14001544a:	jns    0x14001544c
   14001544c:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140015450:	ins    DWORD PTR es:[rdi],dx
   140015451:	add    BYTE PTR [rbp+0x0],ah
   140015454:	add    BYTE PTR [rax],al
   140015456:	add    BYTE PTR [rax],al
   140015458:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14001545c:	movsxd eax,DWORD PTR [rax]
   14001545e:	jb     0x140015460
   140015460:	outs   dx,DWORD PTR ds:[rsi]
   140015461:	add    BYTE PTR [rbx+0x0],dh
   140015464:	outs   dx,DWORD PTR ds:[rsi]
   140015465:	add    BYTE PTR [rsi+0x0],ah
   140015468:	je     0x14001546a
   14001546a:	and    BYTE PTR [rax],al
   14001546c:	rex.XB add BYTE PTR [r15+0x0],bpl
   140015470:	jb     0x140015472
   140015472:	jo     0x140015474
   140015474:	outs   dx,DWORD PTR ds:[rsi]
   140015475:	add    BYTE PTR [rdx+0x0],dh
   140015478:	(bad)  
   140015479:	add    BYTE PTR [rax+rax*1+0x69],dh
   14001547d:	add    BYTE PTR [rdi+0x0],ch
   140015480:	outs   dx,BYTE PTR ds:[rsi]
   140015481:	add    BYTE PTR [rax],al
   140015483:	add    BYTE PTR [rax+0x0],ah
   140015486:	sbb    al,0x0
   140015488:	add    DWORD PTR [rax],eax
   14001548a:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14001548e:	ins    BYTE PTR es:[rdi],dx
   14001548f:	add    BYTE PTR [rbp+0x0],ah
   140015492:	add    BYTE PTR [rbp+0x0],r12b
   140015496:	jae    0x140015498
   140015498:	movsxd eax,DWORD PTR [rax]
   14001549a:	jb     0x14001549c
   14001549c:	imul   eax,DWORD PTR [rax],0x740070
   1400154a2:	imul   eax,DWORD PTR [rax],0x6e006f
   1400154a8:	add    BYTE PTR [rax],al
   1400154aa:	add    BYTE PTR [rax],al
   1400154ac:	rex.RX add BYTE PTR [rcx+0x0],r13b
   1400154b0:	outs   dx,BYTE PTR ds:[rsi]
   1400154b1:	add    BYTE PTR [rax+rax*1+0x20],ah
   1400154b5:	add    BYTE PTR [rbx+0x0],dl
   1400154b8:	je     0x1400154ba
   1400154ba:	jb     0x1400154bc
   1400154bc:	imul   eax,DWORD PTR [rax],0x67006e
   1400154c2:	and    BYTE PTR [rax],al
   1400154c4:	sub    BYTE PTR [rax],al
   1400154c6:	push   rcx
   1400154c7:	add    BYTE PTR [rdi+0x0],al
   1400154ca:	push   rdx
   1400154cb:	add    BYTE PTR [rbp+0x0],al
   1400154ce:	push   rax
   1400154cf:	add    BYTE PTR [rcx],ch
   1400154d1:	add    BYTE PTR [rax],ah
   1400154d3:	add    BYTE PTR [rbp+0x0],dl
   1400154d6:	je     0x1400154d8
   1400154d8:	imul   eax,DWORD PTR [rax],0x69006c
   1400154de:	je     0x1400154e0
   1400154e0:	jns    0x1400154e2
   1400154e2:	add    BYTE PTR [rax],al
   1400154e4:	data16 add BYTE PTR [rbx],ah
   1400154e7:	add    BYTE PTR [rcx],al
   1400154e9:	add    BYTE PTR [rsi+0x0],al
   1400154ec:	imul   eax,DWORD PTR [rax],0x65006c
   1400154f2:	push   rsi
   1400154f3:	add    BYTE PTR [rbp+0x0],ah
   1400154f6:	jb     0x1400154f8
   1400154f8:	jae    0x1400154fa
   1400154fa:	imul   eax,DWORD PTR [rax],0x6e006f
   140015500:	add    BYTE PTR [rax],al
   140015502:	add    BYTE PTR [rax],al
   140015504:	xor    DWORD PTR [rax],eax
   140015506:	xor    BYTE PTR [rax],al
   140015508:	add    BYTE PTR cs:[rax],dh
   14001550b:	add    BYTE PTR [rsi],ch
   14001550d:	add    BYTE PTR [rcx],dh
   14001550f:	add    BYTE PTR [rax],dh
   140015511:	add    BYTE PTR [rdx],dh
   140015513:	add    BYTE PTR [rax+rax*1],dh
   140015516:	xor    BYTE PTR [rax],al
   140015518:	add    BYTE PTR cs:[rcx],dh
   14001551b:	add    BYTE PTR [rsi],dh
   14001551d:	add    BYTE PTR [rbx],dh
   14001551f:	add    BYTE PTR [rax],bh
   140015521:	add    BYTE PTR [rax+rax*1],dh
   140015524:	and    BYTE PTR [rax],al
   140015526:	sub    BYTE PTR [rax],al
   140015528:	je     0x14001552a
   14001552a:	push   0x2e003100
   14001552f:	add    BYTE PTR [rcx],dh
   140015531:	add    BYTE PTR [rip+0x37003000],dh        # 0x177018537
   140015537:	add    BYTE PTR [rax],dh
   140015539:	add    BYTE PTR [rcx],bh
   14001553b:	add    BYTE PTR [rip+0x37003100],ch        # 0x177018641
   140015541:	add    BYTE PTR [rax],dh
   140015543:	add    BYTE PTR [rax],dh
   140015545:	add    BYTE PTR [rcx],ch
   140015547:	add    BYTE PTR [rax],al
   140015549:	add    BYTE PTR [rax],al
   14001554b:	add    BYTE PTR [rax],dh
   14001554d:	add    BYTE PTR [rax],cl
   14001554f:	add    BYTE PTR [rcx],al
   140015551:	add    BYTE PTR [rcx+0x0],cl
   140015554:	outs   dx,BYTE PTR ds:[rsi]
   140015555:	add    BYTE PTR [rax+rax*1+0x65],dh
   140015559:	add    BYTE PTR [rdx+0x0],dh
   14001555c:	outs   dx,BYTE PTR ds:[rsi]
   14001555d:	add    BYTE PTR [rcx+0x0],ah
   140015560:	ins    BYTE PTR es:[rdi],dx
   140015561:	add    BYTE PTR [rsi+0x0],cl
   140015564:	(bad)  
   140015565:	add    BYTE PTR [rbp+0x0],ch
   140015568:	add    BYTE PTR gs:[rax],al
   14001556b:	add    BYTE PTR [rsi+0x0],ah
   14001556e:	imul   eax,DWORD PTR [rax],0x64006e
   140015574:	jae    0x140015576
   140015576:	je     0x140015578
   140015578:	jb     0x14001557a
   14001557a:	add    BYTE PTR [rax],al
   14001557c:	add    BYTE PTR [rax],0x2e
   14001557f:	add    BYTE PTR [rcx],al
   140015581:	add    BYTE PTR [rax+rax*1+0x65],cl
   140015585:	add    BYTE PTR [rdi+0x0],ah
   140015588:	(bad)  
   140015589:	add    BYTE PTR [rax+rax*1+0x43],ch
   14001558d:	add    BYTE PTR [rdi+0x0],ch
   140015590:	jo     0x140015592
   140015592:	jns    0x140015594
   140015594:	jb     0x140015596
   140015596:	imul   eax,DWORD PTR [rax],0x680067
   14001559c:	je     0x14001559e
   14001559e:	add    BYTE PTR [rax],al
   1400155a0:	test   eax,0x4d002000
   1400155a5:	add    BYTE PTR [rcx+0x0],ch
   1400155a8:	movsxd eax,DWORD PTR [rax]
   1400155aa:	jb     0x1400155ac
   1400155ac:	outs   dx,DWORD PTR ds:[rsi]
   1400155ad:	add    BYTE PTR [rbx+0x0],dh
   1400155b0:	outs   dx,DWORD PTR ds:[rsi]
   1400155b1:	add    BYTE PTR [rsi+0x0],ah
   1400155b4:	je     0x1400155b6
   1400155b6:	and    BYTE PTR [rax],al
   1400155b8:	rex.XB add BYTE PTR [r15+0x0],bpl
   1400155bc:	jb     0x1400155be
   1400155be:	jo     0x1400155c0
   1400155c0:	outs   dx,DWORD PTR ds:[rsi]
   1400155c1:	add    BYTE PTR [rdx+0x0],dh
   1400155c4:	(bad)  
   1400155c5:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400155c9:	add    BYTE PTR [rdi+0x0],ch
   1400155cc:	outs   dx,BYTE PTR ds:[rsi]
   1400155cd:	add    BYTE PTR [rsi],ch
   1400155cf:	add    BYTE PTR [rax],ah
   1400155d1:	add    BYTE PTR [rcx+0x0],al
   1400155d4:	ins    BYTE PTR es:[rdi],dx
   1400155d5:	add    BYTE PTR [rax+rax*1+0x20],ch
   1400155d9:	add    BYTE PTR [rdx+0x0],dh
   1400155dc:	imul   eax,DWORD PTR [rax],0x680067
   1400155e2:	je     0x1400155e4
   1400155e4:	jae    0x1400155e6
   1400155e6:	and    BYTE PTR [rax],al
   1400155e8:	jb     0x1400155ea
   1400155ea:	add    BYTE PTR gs:[rbx+0x0],dh
   1400155ee:	add    BYTE PTR gs:[rdx+0x0],dh
   1400155f2:	jbe    0x1400155f4
   1400155f4:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   1400155f9:	add    BYTE PTR [rax],al
   1400155fb:	add    BYTE PTR [rax+0x0],al
   1400155fe:	or     al,0x0
   140015600:	add    DWORD PTR [rax],eax
   140015602:	rex.WRXB add BYTE PTR [r10+0x0],r14b
   140015606:	imul   eax,DWORD PTR [rax],0x690067
   14001560c:	outs   dx,BYTE PTR ds:[rsi]
   14001560d:	add    BYTE PTR [rcx+0x0],ah
   140015610:	ins    BYTE PTR es:[rdi],dx
   140015611:	add    BYTE PTR [rsi+0x0],al
   140015614:	imul   eax,DWORD PTR [rax],0x65006c
   14001561a:	outs   dx,BYTE PTR ds:[rsi]
   14001561b:	add    BYTE PTR [rcx+0x0],ah
   14001561e:	ins    DWORD PTR es:[rdi],dx
   14001561f:	add    BYTE PTR [rbp+0x0],ah
   140015622:	add    BYTE PTR [rax],al
   140015624:	rex.RX add BYTE PTR [rcx+0x0],r9b
   140015628:	rex.WRX add BYTE PTR [rax+r8*1+0x53],r8b
   14001562d:	add    BYTE PTR [rax+rax*1+0x52],dl
   140015631:	add    BYTE PTR [rsi],ch
   140015633:	add    BYTE PTR [rbp+0x0],al
   140015636:	pop    rax
   140015637:	add    BYTE PTR [rbp+0x0],al
   14001563a:	add    BYTE PTR [rax],al
   14001563c:	push   0x0
   14001563e:	and    eax,0x50000100
   140015643:	add    BYTE PTR [rdx+0x0],dh
   140015646:	outs   dx,DWORD PTR ds:[rsi]
   140015647:	add    BYTE PTR [rax+rax*1+0x75],ah
   14001564b:	add    BYTE PTR [rbx+0x0],ah
   14001564e:	je     0x140015650
   140015650:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140015654:	ins    DWORD PTR es:[rdi],dx
   140015655:	add    BYTE PTR [rbp+0x0],ah
   140015658:	add    BYTE PTR [rax],al
   14001565a:	add    BYTE PTR [rax],al
   14001565c:	rex.WRB add BYTE PTR [r9+0x0],r13b
   140015660:	movsxd eax,DWORD PTR [rax]
   140015662:	jb     0x140015664
   140015664:	outs   dx,DWORD PTR ds:[rsi]
   140015665:	add    BYTE PTR [rbx+0x0],dh
   140015668:	outs   dx,DWORD PTR ds:[rsi]
   140015669:	add    BYTE PTR [rsi+0x0],ah
   14001566c:	je     0x14001566e
   14001566e:	scas   al,BYTE PTR es:[rdi]
   14001566f:	add    BYTE PTR [rax],ah
   140015671:	add    BYTE PTR [rdi+0x0],dl
   140015674:	imul   eax,DWORD PTR [rax],0x64006e
   14001567a:	outs   dx,DWORD PTR ds:[rsi]
   14001567b:	add    BYTE PTR [rdi+0x0],dh
   14001567e:	jae    0x140015680
   140015680:	scas   al,BYTE PTR es:[rdi]
   140015681:	add    BYTE PTR [rax],ah
   140015683:	add    BYTE PTR [rdi+0x0],cl
   140015686:	jo     0x140015688
   140015688:	add    BYTE PTR gs:[rdx+0x0],dh
   14001568c:	(bad)  
   14001568d:	add    BYTE PTR [rax+rax*1+0x69],dh
   140015691:	add    BYTE PTR [rsi+0x0],ch
   140015694:	add    BYTE PTR [eax],ah
   140015697:	add    BYTE PTR [rbx+0x0],dl
   14001569a:	jns    0x14001569c
   14001569c:	jae    0x14001569e
   14001569e:	je     0x1400156a0
   1400156a0:	add    BYTE PTR gs:[rbp+0x0],ch
   1400156a4:	add    BYTE PTR [rax],al
   1400156a6:	add    BYTE PTR [rax],al
   1400156a8:	rex.RX add BYTE PTR [rcx],r10b
   1400156ab:	add    BYTE PTR [rcx],al
   1400156ad:	add    BYTE PTR [rax+0x0],dl
   1400156b0:	jb     0x1400156b2
   1400156b2:	outs   dx,DWORD PTR ds:[rsi]
   1400156b3:	add    BYTE PTR [rax+rax*1+0x75],ah
   1400156b7:	add    BYTE PTR [rbx+0x0],ah
   1400156ba:	je     0x1400156bc
   1400156bc:	push   rsi
   1400156bd:	add    BYTE PTR [rbp+0x0],ah
   1400156c0:	jb     0x1400156c2
   1400156c2:	jae    0x1400156c4
   1400156c4:	imul   eax,DWORD PTR [rax],0x6e006f
   1400156ca:	add    BYTE PTR [rax],al
   1400156cc:	xor    DWORD PTR [rax],eax
   1400156ce:	xor    BYTE PTR [rax],al
   1400156d0:	add    BYTE PTR cs:[rax],dh
   1400156d3:	add    BYTE PTR [rsi],ch
   1400156d5:	add    BYTE PTR [rcx],dh
   1400156d7:	add    BYTE PTR [rax],dh
   1400156d9:	add    BYTE PTR [rdx],dh
   1400156db:	add    BYTE PTR [rax+rax*1],dh
   1400156de:	xor    BYTE PTR [rax],al
   1400156e0:	add    BYTE PTR cs:[rcx],dh
   1400156e3:	add    BYTE PTR [rsi],dh
   1400156e5:	add    BYTE PTR [rbx],dh
   1400156e7:	add    BYTE PTR [rax],bh
   1400156e9:	add    BYTE PTR [rax+rax*1],dh
   1400156ec:	add    BYTE PTR [rax],al
   1400156ee:	add    BYTE PTR [rax],al
   1400156f0:	add    BYTE PTR [rax],r8b
   1400156f3:	add    BYTE PTR [rcx],al
   1400156f5:	add    BYTE PTR [rsi+0x0],dl
   1400156f8:	(bad)  
   1400156f9:	add    BYTE PTR [rdx+0x0],dh
   1400156fc:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140015700:	ins    BYTE PTR es:[rdi],dx
   140015701:	add    BYTE PTR [rbp+0x0],ah
   140015704:	rex.WB add BYTE PTR [r14+0x0],bpl
   140015708:	data16 add BYTE PTR [rdi+0x0],ch
   14001570c:	add    BYTE PTR [rax],al
   14001570e:	add    BYTE PTR [rax],al
   140015710:	and    al,0x0
   140015712:	add    al,0x0
   140015714:	add    BYTE PTR [rax],al
   140015716:	push   rsp
   140015717:	add    BYTE PTR [rdx+0x0],dh
   14001571a:	(bad)  
   14001571b:	add    BYTE PTR [rsi+0x0],ch
   14001571e:	jae    0x140015720
   140015720:	ins    BYTE PTR es:[rdi],dx
   140015721:	add    BYTE PTR [rcx+0x0],ah
   140015724:	je     0x140015726
   140015726:	imul   eax,DWORD PTR [rax],0x6e006f
   14001572c:	add    BYTE PTR [rax],al
   14001572e:	add    BYTE PTR [rax],al
   140015730:	or     DWORD PTR [rax+rsi*4],eax
   140015733:	add    al,0x0
   140015735:	add    BYTE PTR [rax],al
   140015737:	add    ch,cl
   140015739:	dec    ch
   14001573b:	dec    al
   14001573d:	add    BYTE PTR [rax],al
   14001573f:	add    BYTE PTR [rax],al
   140015741:	add    BYTE PTR [rcx],al
   140015743:	add    BYTE PTR [rax],al
   140015745:	add    BYTE PTR [rax],al
   140015747:	add    BYTE PTR [rcx],dl
   140015749:	add    BYTE PTR [rax],al
   14001574b:	add    BYTE PTR [rax],al
   14001574d:	add    BYTE PTR [rax],al
   14001574f:	add    BYTE PTR [rdx],al
   140015751:	add    BYTE PTR [rax],al
   140015753:	add    BYTE PTR [rbx],bl
   140015755:	(bad)  
   140015756:	or     al,0x93
   140015758:	sub    eax,0x16db4bf8
   14001575d:	and    r8d,DWORD PTR [rcx+r15*4+0x43]
   140015762:	rex.XB jo 0x140015793
   140015765:	push   rbp
   140015766:	iret   
   140015767:	popf   
   140015768:	adc    DWORD PTR [rbx+0xcdbefb0],0x53
   14001576f:	loopne 0x1400157dc
   140015771:	sar    eax,1
   140015773:	push   rbp
	...
   14001578c:	mov    BYTE PTR [rax],al
   14001578e:	add    BYTE PTR [rax],al
   140015790:	(bad)  
   140015791:	add    BYTE PTR [rax],al
   140015793:	add    BYTE PTR [rax+0x8000000],bl
   140015799:	add    BYTE PTR [rax],al
   14001579b:	add    BYTE PTR [rax+0xe000000],ah
   1400157a1:	add    BYTE PTR [rax],al
   1400157a3:	add    BYTE PTR [rax+0x8000000],dh
	...
   1400157b1:	add    BYTE PTR [rax],al
   1400157b3:	add    BYTE PTR [rax+0xc000000],bh
   1400157b9:	add    BYTE PTR [rax],al
   1400157bb:	add    BYTE PTR [rax],al
   1400157bd:	add    BYTE PTR [rax],al
   1400157bf:	add    BYTE PTR [rbp+0x0],cl
   1400157c2:	push   rbp
   1400157c3:	add    BYTE PTR [rcx+0x0],cl
	...
   1400157ce:	add    BYTE PTR [rax],al
   1400157d0:	adc    BYTE PTR [rax],al
   1400157d2:	add    BYTE PTR [rax],al
   1400157d4:	sbb    BYTE PTR [rax],al
   1400157d6:	add    BYTE PTR [rax],al
   1400157d8:	rex.WRB add BYTE PTR [r13+0x0],r10b
   1400157dc:	rex.WB add BYTE PTR [r8],al
	...
   1400157e7:	add    BYTE PTR [rbx],cl
   1400157e9:	add    BYTE PTR [rax],al
   1400157eb:	add    BYTE PTR [rax],dl
   1400157ed:	add    BYTE PTR [rax],al
   1400157ef:	add    BYTE PTR [rbp+0x0],ah
   1400157f2:	outs   dx,BYTE PTR ds:[rsi]
   1400157f3:	add    BYTE PTR [rip+0x53005500],ch        # 0x19301acf9
   1400157f9:	add    BYTE PTR [rax],al
   1400157fb:	add    BYTE PTR [rax],al
   1400157fd:	add    BYTE PTR [rax],al
	...

Disassembly of section .reloc:

0000000140016000 <.reloc>:
   140016000:	add    BYTE PTR [rax+0x0],dh
   140016003:	add    BYTE PTR [rax],ch
   140016005:	add    BYTE PTR [rax],al
   140016007:	add    al,cl
   140016009:	movabs ds:0xa400a3f8a3e0a3d0,eax
   140016012:	nop
   140016013:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140016014:	cwde   
   140016015:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140016016:	fsub   DWORD PTR [rax+rbx*2+0x70a560a5]
   14001601d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001601e:	js     0x140015fc6
   140016020:	cmps   QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   140016022:	(bad)  
   140016023:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140016024:	push   0xa770a7
   140016029:	nop
   14001602a:	add    BYTE PTR [rax],al
   14001602c:	sbb    BYTE PTR [rax],al
   14001602e:	add    BYTE PTR [rax],al
   140016030:	push   rax
   140016031:	movabs al,ds:0xa088a080a060a058
   14001603a:	movabs al,ds:0x140000000a0a8a0
   140016043:	add    BYTE PTR [rax+rax*1],cl
   140016046:	add    BYTE PTR [rax],al
   140016048:	.byte 0x0
   140016049:	.byte 0xa0
	...
